cmp
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
mov
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
mov
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
pop
loopne
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
aad
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
loopne
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
pop
aam
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
fnstcw
add
add
pop
fwait
push
add
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
adc
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
cmpb
and
sbb
incl
sarb
mov
flds
and
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
xchg
inc
add
add
mov
and
cmp
jne
mov
mov
inc
fadds
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
cmp
inc
or
insb
decl
adc
into
call
mov
and
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
inc
loopne
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
jge
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
in
je
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
mov
sub
push
push
push
lea
push
push
push
call
mov
fcmovne
xchg
add
enter
movsb
add
add
rolb
mov
add
test
bound
mov
lcall
test
add
gs
add
add
lcall
inc
in
push
push
push
call
jne
cwtl
add
xchg
rcr
mov
mov
mov
jmp
mov
icebp
mov
cli
jns
in
stc
xlat
pop
add
fcmovu
test
roll
js
in
mov
add
outsl
jp
fwait
leave
ljmp
push
push
call
rolb
add
jb
add
test
pop
rclb
add
int
js
add
add
add
mov
scas
add
add
sub
pop
push
push
push
lea
push
push
push
call
push
mov
xchg
mov
xchg
in
stos
clc
out
jecxz
add
add
add
add
jge
add
mov
add
into
add
jl
add
add
ret
addb
popf
add
fildl
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
call
jbe
imul
ffree
push
jl
xchg
stos
add
add
push
test
xchg
mov
into
in
add
add
lcall
push
push
push
push
push
call
movsl
scas
xchg
fildl
add
add
icebp
mov
in
stos
add
add
test
repnz
jle
outsl
frstor
out
popl
add
add
add
pop
add
mov
add
lds
jb
add
fisubrs
add
loope
je
fidivrl
jbe
add
add
mov
fwait
add
jae
add
add
in
add
push
push
lea
push
call
add
add
mov
add
jle
popf
jge
nop
push
mov
scas
push
add
clc
nop
popa
push
icebp
add
pop
mov
mov
add
jge
add
add
add
add
push
add
add
in
stc
sub
pop
call
jmp
push
push
push
push
push
push
push
push
push
call
add
add
add
call
add
mov
pop
add
lret
xlat
shl
push
lock
roll
mov
add
stc
mov
pop
lea
add
add
push
xlat
jle
mov
add
add
data16
add
mov
movb
fdiv
add
add
lcall
mov
push
push
push
lea
push
push
lea
push
push
push
call
fbld
loope
jle
mov
push
add
pop
jae
xlat
movsb
push
add
mov
add
push
fildl
add
mov
in
test
xchg
js
add
pop
add
mov
ret
add
lcall
pop
hlt
push
push
call
jp
push
jo
test
fiadds
fwait
ret
add
loopne
mov
mov
add
mov
jecxz
faddp
rcll
add
mov
in
loopne
popf
cwtl
out
pusha
pop
shrl
mov
add
add
add
test
pop
add
push
push
call
pop
push
add
push
add
add
add
add
add
add
add
pop
xchg
test
add
add
xchg
test
fildl
add
in
clc
pop
add
push
push
lea
push
call
add
test
add
add
add
add
insb
int
mov
xchg
in
mov
jb
add
mov
fwait
cli
rol
imul
lea
mulb
add
mov
mov
rolb
in
in
hlt
lcall
ret
mov
add
push
lea
push
call
pushf
add
in
add
mov
clc
add
aam
subl
sti
pop
popa
stos
add
lahf
mov
stc
xlat
add
jle
add
add
push
rol
add
cmc
pop
enter
add
lds
add
jp
je
in
clc
pop
mov
xor
push
push
not
push
or
inc
add
sub
sub
shr
pop
dec
rol
pop
push
push
push
push
lea
push
push
push
lea
push
call
mov
rolb
add
clc
add
flds
add
add
pop
lcall
push
add
nop
fisubrl
add
add
add
mov
add
shrb
int
fidivl
add
push
popl
pop
enter
pushf
sub
pop
pushl
push
push
push
push
push
push
call
add
sarl
js
add
movsb
movb
jns
jb
add
mov
xchg
add
add
jnp
jbe
add
add
add
ficoms
ja
add
jle
mov
add
mov
add
add
add
lcall
sbb
add
mov
mov
push
push
push
push
push
call
push
js
push
add
add
fiadds
cli
mov
lea
add
popa
add
mov
add
add
pop
fdivrs
mov
fsubp
loope
add
add
js
aad
add
lcall
inc
call
push
push
call
add
cli
rolb
pop
nop
add
repnz
in
cwtl
add
cmc
add
jecxz
fwait
mov
add
loope
mov
mov
add
add
add
sub
pop
lea
push
push
push
push
push
lea
push
lea
push
push
push
push
call
jge
add
add
imul
les
fidivs
lock
fs
add
loop
call
add
add
shlb
add
in
fdivr
lcall
pushl
push
lea
push
call
add
add
mov
xchg
loop
add
gs
add
lea
push
popa
arpl
xchg
ret
add
add
add
add
adcl
add
add
cmpsb
mov
add
pushl
push
push
push
push
call
popf
out
test
mov
jecxz
jb
out
add
add
mov
push
out
loop
icebp
in
cltd
add
pop
add
clc
fldt
test
mov
jae
push
add
cmc
xchg
mov
add
mov
add
add
pop
jb
pop
mov
movsl
loope
xchg
add
call
push
push
push
call
add
fisttpl
xchg
add
add
add
lea
jle
xchg
ret
add
add
lods
popf
push
add
add
sahf
jmp
add
fcmovnbe
add
xchg
je
lock
stos
mov
mov
int
sub
pop
pushl
push
push
lea
push
push
push
push
call
leave
test
mov
loop
scas
add
int
add
mov
repnz
xchg
pop
out
jle
add
cmpsb
add
pop
add
stos
ret
mov
add
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
jne
loope
popa
add
mov
add
mov
add
add
add
add
mov
add
add
pop
shlb
enter
rcr
add
add
jp
jo
add
testb
repnz
sar
loope
in
fcomps
cli
aaa
add
push
push
add
ror
push
push
pop
add
add
xor
ror
sub
xor
add
pop
xor
dec
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
movsb
add
in
add
out
add
add
xchg
icebp
nop
add
xchg
add
lcall
jne
push
push
push
push
call
add
test
pusha
shrl
mov
loope
add
movsb
outsl
in
add
add
sub
pop
call
push
push
push
push
push
push
lea
push
call
add
scas
mov
add
mov
pop
add
push
cld
push
add
add
xchg
insb
jp
add
add
add
pop
add
mov
push
hlt
add
add
add
add
add
sarl
add
addr16
mov
subb
jno
stc
add
data16
popl
jo
in
in
lcall
inc
push
push
dec
xor
sub
push
sub
add
add
add
dec
dec
sub
shr
pop
lea
pop
push
push
push
push
push
push
push
push
call
mov
add
out
cltd
lahf
adcl
jmp
add
fstp
insb
cli
subb
into
add
add
ljmp
loopne
push
push
push
push
push
push
lea
push
push
push
push
call
iret
and
add
add
movsl
add
add
in
add
mov
fiaddl
mov
iret
outsl
pop
mov
add
addl
jae
push
lret
add
pop
lock
ljmp
push
movb
push
int3
lahf
add
test
jmp
sub
pop
call
mov
push
lea
push
push
lea
push
push
lea
push
call
lds
add
add
ret
add
lcall
repnz
mov
add
push
outsl
mov
jnp
add
add
sti
push
call
shl
push
push
jae
xlat
push
fcmovb
flds
push
push
push
push
lea
push
push
call
imull
add
add
incb
jb
cld
xorl
scas
fiaddl
mov
shrb
bound
lock
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
call
mov
add
add
add
add
push
popl
add
mov
add
add
fwait
lret
push
mov
add
enter
in
fcompl
ret
add
add
push
push
lea
push
push
call
aad
leave
pop
add
add
add
add
lods
add
lcall
in
pop
fs
sbbl
scas
mov
mov
cmc
mov
aad
add
push
pop
rolb
add
loope
idivb
rcl
add
add
add
lcall
ret
mov
add
mov
push
push
push
call
mov
mov
jnp
add
jns
loop
pop
add
push
fwait
add
in
add
mov
pop
add
pop
xchg
add
loop
add
clc
cli
mov
push
scas
add
add
fnstenv
jecxz
add
loope
nop
movsl
pop
add
pop
add
add
clc
pop
xor
push
lea
push
push
push
push
lea
push
call
add
lcall
add
add
add
lretw
add
cmpsb
loop
add
cwtl
bound
add
loope
add
mov
movsb
popa
aam
fdivl
in
call
add
push
push
lea
push
push
lea
push
push
call
imul
add
jmp
aam
leave
lock
push
add
xorl
add
insb
movl
mov
incb
hlt
jae
mov
clc
mov
add
add
fldl
repnz
mov
stos
test
icebp
jnp
add
add
xchg
jb
add
lcall
jne
push
push
push
push
push
call
mov
add
icebp
add
add
add
mov
add
add
lock
lcall
inc
or
lods
mov
rcll
xchg
loopne
lea
push
push
push
push
lea
push
push
push
call
xchg
add
int3
pop
popl
into
add
ficoms
add
xchg
mov
test
jmp
mov
add
cli
cld
jge
in
fdivr
lcall
add
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
out
lds
scas
rolb
add
add
mov
bound
scas
mov
jne
rolb
popl
jnp
enter
add
pop
in
cltd
out
test
pop
call
data16
roll
xchg
mov
call
add
add
add
add
add
add
add
lcall
les
add
push
push
call
add
in
ficoms
push
cld
std
add
mov
add
stc
out
add
nop
rcrl
cld
mov
mov
mov
pusha
add
fildl
add
add
out
add
xchg
add
add
add
rcrl
shrb
push
push
push
push
push
call
add
std
add
add
add
call
fidivl
add
mov
movl
enter
add
hlt
add
fcmovu
add
std
movsl
icebp
roll
add
movsl
add
add
add
addl
pop
push
mov
add
lcall
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
fildl
insb
mov
add
enter
add
test
popa
cmpsb
les
rcl
add
pop
add
push
mov
xchg
in
xchg
add
xchg
mov
xchg
mov
icebp
mov
in
sar
cmpsl
add
or
push
lea
push
lea
push
push
lea
push
push
lea
push
call
loope
ja
add
xchg
lods
add
xchg
add
jecxz
push
add
add
add
mov
add
enter
sub
pop
add
push
push
call
add
mov
sar
add
jns
pop
add
add
add
ja
add
xchg
into
fsubrp
aad
test
add
js
jle
sub
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
out
mov
icebp
mov
pop
add
imul
add
mov
xchg
cwtl
enter
loopne
je
lcall
add
lea
add
fadds
fldl
mov
outsl
push
add
add
add
mov
rolb
add
movsl
add
add
lcall
inc
or
scas
push
lea
push
push
push
lea
push
push
lea
push
call
push
fiaddl
mov
mov
imul
push
out
add
add
pushf
add
pusha
lods
mov
into
push
je
mov
add
lcall
jp
filds
add
add
add
add
add
in
sub
push
push
push
push
lea
push
lea
push
call
add
fwait
add
xchg
xlat
jle
stc
cld
mov
jne
add
fidivl
lret
stos
add
jns
in
mov
leave
add
add
add
bound
add
mov
into
add
push
add
pop
add
add
cmpsl
add
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
lahf
cwtl
ficompl
test
mov
add
mov
mov
call
aad
mov
add
mov
fiaddl
sub
pop
rep
push
lea
push
push
push
push
lea
push
call
mov
lahf
add
into
pop
test
add
push
pop
add
add
push
push
jle
jnp
movb
iret
add
test
aad
jbe
pop
mov
call
icebp
pop
mov
add
xchg
rolb
les
mov
lods
push
in
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
addr16
jnp
mov
add
pop
clc
js
addr16
fcmovne
add
out
add
je
enter
lcall
pop
hlt
push
push
push
push
push
call
mov
mov
add
pop
cli
add
add
cmpsb
lahf
mov
add
divb
pop
xchg
mov
add
pop
rolb
add
cmc
rcr
out
add
lcall
pop
in
push
push
push
lea
push
push
lea
push
push
push
push
push
call
std
stc
add
jmp
push
mov
add
add
add
fs
lret
add
add
or
sub
pop
add
push
push
lea
push
push
lea
push
call
add
stos
add
xchg
mov
add
add
add
idivl
add
add
add
outsl
add
lret
mov
add
add
loop
add
sub
pop
add
mov
push
push
push
push
lea
push
push
lea
push
push
call
push
sti
gs
mov
add
mov
add
les
nop
mov
cltd
mov
xchg
cltd
add
xlat
filds
js
pop
cmpl
lcall
add
xchg
add
add
sbbb
add
imul
mov
flds
mov
add
sub
pop
xor
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
fwait
mov
add
cmc
add
lods
jnp
add
add
add
add
mov
arpl
sbbl
stos
mov
lods
xchg
push
add
mov
pushf
nop
add
popa
jne
stc
add
fadds
jmp
ret
mov
cli
iret
add
in
fdivr
lcall
les
push
push
push
push
call
add
jl
arpl
filds
push
imul
mov
jbe
add
add
add
add
bnd
subl
add
stos
imul
out
add
add
add
jge
outsl
jb
mov
add
out
cwtl
ja
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
add
push
add
mov
lahf
cwtl
add
add
into
mulb
les
push
test
mov
add
add
out
jne
gs
xchg
cltd
mov
mov
lahf
fidivs
leave
add
ror
add
imul
jle
fisubrl
pop
xor
push
push
lea
push
push
push
push
call
add
jl
add
push
ja
fsubrl
mov
add
pusha
add
cld
add
push
stos
gs
add
addb
xchg
test
add
sbbl
add
rcrl
add
vrsqrtss
in
call
add
push
lea
push
call
xchg
add
lea
roll
lahf
mov
in
add
cmpsw
push
roll
xchg
pop
mov
nop
sub
pop
mov
push
push
push
push
push
call
in
push
add
add
add
add
add
shl
fsubp
mov
cwtl
add
add
test
add
add
add
adcb
out
mov
add
add
lcall
or
push
push
push
call
xchg
clc
cld
fcmovnb
out
movb
add
mov
add
out
sti
stos
add
add
add
mov
add
add
icebp
mov
fcmovnbe
cmpsb
addb
push
jecxz
test
add
pop
add
jp
add
lods
xchg
add
fidivl
enter
xchg
add
add
push
lea
push
lea
push
lea
push
push
call
add
jnp
movsl
lods
cld
add
add
jno
lods
add
add
test
test
add
mov
addr16
popf
mov
add
add
insb
push
stos
xchg
push
leave
add
add
cmc
add
mov
sub
pop
add
push
push
push
call
mov
cli
add
add
add
add
hlt
add
loope
mov
clc
repnz
push
xchg
add
add
add
leave
test
cltd
add
add
jp
jnp
loopne
xchg
push
pop
cltd
int
scas
mov
in
hlt
lcall
rcll
push
push
lea
push
call
add
push
out
loope
leave
jnp
add
fld
fdivs
add
add
mov
add
mov
icebp
cmpsb
fildl
add
lcall
fsubrs
pop
mov
push
dec
not
push
or
not
add
add
ror
sub
sub
not
shr
pop
lea
pop
push
push
push
lea
push
push
push
call
add
push
push
push
cmpsb
push
lahf
lods
movsl
add
std
add
mov
cmpsb
add
icebp
rolb
jno
add
stos
cwtl
push
mov
andl
rolb
bound
jne
call
push
push
push
push
lea
push
lea
push
call
add
mov
add
add
add
stos
jge
int3
into
aam
test
fildl
cmc
add
add
add
loopne
add
lcall
add
fmuls
add
jmp
dec
inc
push
or
not
add
add
sub
add
dec
pop
ror
shr
pop
push
push
push
push
push
push
lea
push
call
jnp
fldt
add
orb
add
stos
add
pop
test
add
xchg
jns
ljmp
lods
add
fcomps
add
add
les
fucomip
xlat
add
jb
add
iret
add
add
mov
nop
add
add
out
frstor
pusha
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
imul
add
add
add
stc
push
add
add
imul
lods
jno
iret
add
fnsave
ljmp
sti
jp
mov
mov
add
mov
int
mov
sub
pop
call
push
push
push
push
push
lea
push
call
xchg
pop
add
jnp
add
jge
add
push
in
mov
jl
faddl
jge
pop
add
in
push
rolb
add
movsb
sti
hlt
bound
add
add
add
add
add
std
add
add
sahf
sar
add
add
out
in
call
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
hlt
add
mov
jl
std
add
add
pop
push
pop
cmpsb
add
pusha
add
notb
push
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
push
add
movsb
lea
lea
incb
test
mov
arpl
stos
push
add
add
add
pushf
add
mov
add
filds
icebp
out
mov
add
add
add
add
sub
pop
push
mov
push
push
push
call
lock
lods
add
out
add
add
mov
fs
outsl
enter
add
add
add
cmpsb
sti
sub
pop
add
push
add
add
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
data16
add
ljmp
popa
add
add
add
add
add
clc
mov
in
fcomps
ret
mov
add
push
push
lea
push
push
push
push
call
sarb
add
add
add
mov
mov
add
int
jno
test
add
add
fiaddl
add
xchg
add
into
jb
in
add
push
mov
call
mov
push
push
lea
push
push
call
test
add
lods
mov
rolb
mov
mov
mov
cmpsl
add
mov
mov
add
ljmp
pop
add
cld
add
add
addr16
add
jo
lods
fldl
xchg
popf
add
cmpsb
add
add
xchg
sub
pop
xor
push
push
lea
push
lea
push
call
add
add
pop
add
incb
movsl
xchg
hlt
mov
add
mov
test
lcall
scas
in
out
cld
mov
call
add
xchg
into
idivb
xorl
add
fiaddl
jmp
cld
add
int3
add
les
add
push
push
push
lea
push
call
add
mov
xchg
cltd
ja
lods
stos
int
add
add
add
add
add
xorb
add
add
int
loop
data16
add
pop
test
out
push
jecxz
cmpl
enter
sub
pop
add
push
push
push
push
lea
push
push
push
call
insb
push
sti
fcom
stos
lea
test
jmp
out
push
mov
jo
data16
add
pop
fcoml
mov
jecxz
add
mov
mov
add
add
lahf
push
test
push
imul
call
mov
push
push
push
call
push
add
add
lods
fcompl
add
int
int3
cwtl
mov
add
pop
add
xchg
jnp
arpl
add
add
add
push
push
lea
push
call
outsl
jb
ja
add
add
cltd
popf
jne
je
lcall
add
call
mov
js
cltd
add
cli
enter
lock
add
add
add
roll
stos
insb
scas
add
pop
add
add
sahf
add
add
xchg
lcall
les
not
pop
add
pop
push
rol
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
repnz
add
pop
push
push
add
aam
add
hlt
movl
mov
add
pop
in
add
add
mov
into
add
leave
pop
add
out
add
add
scas
add
out
iret
add
lock
lahf
add
add
in
xor
push
push
call
add
push
add
jns
add
outsl
add
xchg
add
push
jo
ljmp
add
pop
int3
fcom
add
pop
popa
add
add
repnz
sub
pop
add
push
xor
rol
shr
pop
rep
mov
xor
push
lea
push
push
lea
push
call
add
imul
xchg
cltd
pushf
mov
repnz
jo
add
add
repnz
add
imul
add
testb
hlt
mov
pop
push
shr
add
in
stos
in
add
mov
sahf
orb
imul
add
add
add
jbe
outsl
pop
pop
sub
pop
or
je
mov
push
push
push
push
push
push
push
call
add
lahf
mov
add
mov
add
add
add
stos
jne
divb
mov
add
mov
add
cli
add
mov
add
lea
test
add
mov
arpl
lret
add
rcrl
fistl
addb
add
in
call
xor
push
push
lea
push
push
push
push
call
add
add
lcall
add
mov
add
imul
mov
add
add
add
addl
add
movsl
xchg
scas
scas
push
cmpsl
xchg
jbe
sti
sub
pop
add
push
add
shr
not
pop
mov
xor
push
push
lea
push
call
loopne
add
test
cmpsl
stos
rcrb
add
hlt
jnp
imul
pusha
add
lock
add
push
popa
lods
jns
add
out
sub
imul
add
ror
stos
add
lock
add
iret
mov
mov
add
sub
pop
add
push
sub
pop
add
push
xor
ror
rol
pop
push
push
add
shr
sub
sub
pop
mov
xor
push
lea
push
call
cmpsl
nop
lret
add
sahf
add
pop
addb
scas
mov
push
add
loop
lock
add
jmp
add
lcall
lock
push
push
call
mov
add
nop
add
fldl
add
test
add
mov
lea
mov
add
je
in
filds
test
cltd
cmpl
rcl
jns
test
jmp
push
add
add
add
popl
popf
ret
add
add
jae
add
stc
cltd
add
sub
pop
pop
push
lea
push
push
lea
push
call
add
call
pop
add
out
arpl
add
ja
scas
fistpll
add
mov
add
lahf
add
add
stc
pushf
call
jns
lcall
rep
mov
xor
push
inc
sub
pop
or
je
mov
push
lea
not
pop
add
push
push
lea
push
push
push
call
add
in
in
movsb
add
push
push
add
cltd
repnz
lea
add
sti
shlb
add
lock
add
test
loope
hlt
mov
xchg
add
repnz
fucomp
add
add
in
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
add
add
aad
lods
in
pop
fs
bound
add
fs
add
add
popa
add
lret
jmp
cmc
push
int3
add
lods
add
add
movsb
add
add
push
add
jp
mov
lds
add
sub
pop
rep
pop
push
push
lea
push
push
pop
add
dec
sub
ror
sub
not
rol
pop
inc
sub
lea
pop
push
push
call
mov
add
outsl
aad
int3
add
jle
test
add
in
scas
xchg
adc
mov
cmpsl
bound
fiadds
add
pop
loopne
in
jae
add
lcall
mov
push
not
ror
sub
add
pop
mov
push
push
push
push
push
push
lea
push
call
incb
add
mov
cld
in
vpaddd
jmp
pop
pop
add
jle
mov
flds
movl
jns
in
in
lcall
inc
and
push
rol
pop
jmp
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
loope
add
jb
xchg
fistl
testb
lret
add
jge
addl
divb
icebp
xchg
fldl
shr
test
add
add
testb
add
add
jle
pop
add
sarl
std
mov
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
addb
xchg
add
test
iret
data16
xchg
clc
add
pop
mov
fidivs
mov
mov
add
sti
pop
add
in
add
fcomps
add
in
loopne
mov
push
push
push
push
lea
push
push
push
lea
push
call
mov
imul
add
mov
pop
jno
lcall
push
lret
insb
fsubrl
cwtl
add
mov
add
jge
lea
add
pop
add
push
add
add
add
test
mov
push
jmp
add
add
in
add
lcall
cld
push
push
sub
dec
pop
push
push
dec
pop
push
push
not
add
pop
push
push
sub
pop
mov
push
lea
push
push
push
push
call
jmp
loopnew
fcomp
xchg
mov
add
in
add
add
test
add
add
les
loope
sti
add
cmc
mov
lcall
push
push
push
push
call
test
xlat
add
nop
fbld
in
imul
mov
mov
addb
leave
jbe
push
add
add
add
mov
ror
std
add
out
ret
hlt
mov
mov
add
add
pop
push
push
push
push
lea
push
push
push
call
xchg
xorl
xchg
add
mov
add
test
sbbb
repnz
data16
jne
test
xchg
add
in
add
add
add
fs
jmp
mov
add
add
std
int3
addl
sub
pop
pop
push
shl
sub
pop
pop
leave
push
lea
push
push
push
push
push
push
call
lods
add
iret
stos
fwait
add
les
add
pop
add
push
stos
lds
fistpll
lods
jb
ror
add
mov
ret
add
std
add
add
xchg
fs
test
in
in
ret
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
ljmp
nop
pop
shl
xchg
scas
add
add
jecxz
mov
add
add
add
add
add
fiaddl
mov
push
push
push
lea
push
call
test
lret
mov
icebp
add
add
add
add
add
addl
push
lea
push
push
push
push
call
xchg
fildl
jno
jge
les
movl
addl
mov
mov
add
mov
add
gs
xchg
add
mov
xchg
popf
add
xchg
jns
add
pop
push
push
sub
pop
push
push
ror
add
pop
push
push
push
add
pop
movl
push
sub
shl
sub
sub
pop
addl
test
je
push
push
lea
push
push
call
jp
lods
add
jnp
add
add
push
mov
movsl
add
xchg
iret
loopne
addb
lcall
mov
lcall
inc
or
dec
pop
pop
push
shl
shr
ror
pop
pop
push
rol
sub
pop
pop
push
lea
pop
leave
push
lea
push
lea
push
push
push
push
call
add
aad
cld
enter
sbbl
mov
add
xchg
scas
icebp
add
mov
out
add
add
xchg
in
mov
rolb
shrl
in
pop
push
fiadds
add
out
scas
fcomps
loope
jl
lret
loope
sub
pop
ret
push
push
push
push
push
call
add
add
into
add
in
sar
in
addl
fadds
jno
js
out
movsb
fnstsw
add
add
mov
add
jmp
sahf
add
add
jne
sub
pop
push
mov
push
rol
pop
add
push
sub
shr
shl
pop
push
push
shr
lea
inc
pop
push
push
sub
pop
push
push
push
push
call
jmp
into
add
mov
iret
add
add
add
pop
ja
lock
mov
add
in
clc
lcall
inc
cld
add
add
push
add
dec
rol
pop
addl
push
push
lea
push
push
call
xchg
test
add
test
out
fadds
lods
aam
out
faddl
add
std
add
leave
add
lcall
add
add
pop
call
push
inc
sub
add
xor
pop
mov
push
sub
rol
pop
pushl
push
push
push
call
pop
rolb
int3
add
lret
loop
lea
iret
lcall
add
mov
add
add
jns
add
add
xchg
icebp
xchg
mov
test
xchg
add
hlt
stc
push
add
stos
add
add
iret
mov
add
add
stc
call
loop
xor
add
pop
cmpl
jne
pop
push
inc
add
add
pop
pop
push
inc
pop
pop
push
sub
add
lea
dec
pop
pop
push
push
call
lock
add
push
lods
leave
cmc
add
add
leave
out
add
add
pop
add
stos
push
lcall
add
mov
add
add
clc
lcall
push
shl
not
pop
ret
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
into
mov
jmp
repnz
ret
add
add
clc
xchg
add
movl
add
add
ja
add
add
imul
add
jmp
add
sub
pop
push
mov
push
sub
add
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
mov
jmp
add
in
fsts
add
xchg
add
fnstcw
arpl
call
add
add
add
add
add
add
add
mov
fwait
aam
mov
sub
pop
push
push
dec
inc
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
in
mov
add
add
imul
mov
data16
cli
xchg
int
fiadds
fsts
mov
aam
add
add
movsl
je
je
mov
xchg
jo
les
mov
mov
int
add
push
push
push
rol
pop
movl
push
push
push
push
push
call
mov
pushf
add
add
add
fcompl
fadds
add
mov
flds
fldln2
add
xchg
scas
push
push
test
fstpt
out
add
movl
mov
int
add
cmpsl
add
add
iret
addb
fadds
lods
in
ja
pop
add
sub
pop
call
push
sub
not
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
jge
add
add
movsb
loop
aad
mov
add
add
loop
out
add
add
add
loopne
ja
push
lock
clc
fldl
pop
add
outsl
add
add
test
out
add
pop
add
les
ror
int3
sub
pop
call
push
add
pop
subl
push
rol
pop
cmpl
jne
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
out
mov
idivb
lret
cmpsb
jge
mov
add
movl
idivb
add
add
lcall
out
mov
rolb
add
mov
add
mov
stos
sarl
cmpsb
mov
cmc
add
add
adcl
roll
push
shl
lea
pop
pop
push
lea
push
push
push
push
push
call
call
jno
add
add
sbbb
stos
fiaddl
lret
push
cli
add
je
arpl
lock
sub
pop
leave
push
sub
xor
shl
pop
ret
push
rol
not
lea
pop
push
mov
push
shl
shr
pop
add
push
lea
push
push
push
push
push
call
add
add
int3
in
jp
cltd
lret
mov
movsb
add
add
jge
add
sbbb
mov
scas
push
push
add
sub
pop
push
push
push
push
call
loopne
add
shl
add
add
add
std
push
mov
mov
add
pop
sub
pop
push
push
push
push
push
lea
push
call
lcallw
popl
scas
iret
add
add
test
add
mov
bound
jnp
add
fldenv
cli
nop
add
mov
rolb
add
data16
add
add
push
pop
add
add
in
stos
pop
sub
pop
push
push
add
dec
dec
not
pop
push
push
push
not
shl
xor
push
push
pop
add
ror
xor
lea
sub
lea
lea
sub
pop
sub
not
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
add
add
les
add
mov
add
add
jge
add
add
jecxz
pusha
icebp
mov
xchg
stos
in
jbe
add
repnz
mov
push
push
add
add
add
rolb
out
add
lock
add
sarb
in
fdivr
lcall
jne
call
push
lea
pop
call
push
push
ror
push
push
pop
add
not
shl
dec
sub
not
ror
xor
pop
pop
push
push
push
push
push
push
push
lea
push
call
lcall
add
mov
push
imul
out
add
add
add
les
push
add
mulb
add
add
sub
enter
lcall
push
lcall
jne
push
inc
sub
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
test
into
jns
int
add
shll
add
add
nop
roll
shll
addr16
add
sub
pop
call
push
lea
add
add
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
lock
roll
jne
add
add
pop
add
pop
mov
leave
add
std
mov
jns
xlat
test
xchg
xchg
test
sub
pop
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
pop
mov
push
rolb
push
add
add
je
add
lea
lret
add
outsl
rcrl
add
popl
add
add
push
addb
mov
add
add
mov
add
add
add
add
mov
jnp
lret
sti
mov
add
add
add
sub
push
sub
pop
mov
push
shr
pop
shr
push
sub
pop
add
mov
push
xor
pop
mov
add
push
lea
push
call
pop
add
lcall
add
fdivs
cwtl
mov
outsl
in
cmp
add
jmp
push
add
xchg
stos
push
xchg
add
add
mov
add
mov
clc
lcall
shlb
sub
rol
dec
pop
mov
push
shl
rol
pop
mov
cmp
jne
push
sub
xor
add
pop
cmp
jne
push
dec
add
pop
mov
push
push
lea
push
push
push
call
loopne
add
stos
add
add
add
clc
mov
add
jnp
jo
in
add
roll
push
xchg
add
add
jmp
hlt
lods
loopne
pop
stos
jmp
out
jns
jp
jmp
mov
iret
cwtl
je
add
stc
sub
pop
movl
push
pop
jmp
push
sub
add
xor
pop
mov
push
rol
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
js
jb
jle
add
mov
xchg
mov
mov
hlt
lods
add
in
cld
add
ja
cli
add
stc
add
lret
add
scas
push
out
int
add
iret
enter
out
add
cwtl
add
add
js
sub
pop
sub
jne
push
not
pop
mov
movl
push
rol
pop
jmp
mov
push
ror
sub
ror
pop
mov
push
push
call
add
outsl
pop
add
mov
mov
popl
in
add
add
add
hlt
add
pop
lahf
hlt
test
pop
add
add
mov
icebp
outsl
mov
lret
scas
add
outsl
add
mov
stos
fidivs
sub
pop
cmp
jne
push
add
dec
dec
add
pop
mov
movl
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
loop
jnp
add
cli
add
cmpsb
enter
add
cltd
rorl
in
jmp
jp
iret
add
bound
popa
xchg
lcall
sarb
lcall
or
add
ljmp
add
add
retw
add
add
push
cmpl
loope
stc
add
pop
mov
pop
loopne
add
add
bound
push
lret
add
sarb
add
add
test
sarb
add
addl
movb
jecxz
sbbl
lcall
inc
cld
push
lea
push
push
push
push
push
push
push
push
call
movsl
add
pop
mov
sar
add
add
xchg
jl
add
jbe
add
add
lret
ja
add
in
fcompl
cmpl
jne
push
push
push
lea
push
lea
push
call
add
mov
mov
pushf
mov
cmpsb
cmpsl
arpl
add
lret
roll
add
mov
pop
lods
jmp
mov
addb
add
jae
lods
push
in
pop
icebp
add
iret
cmpsb
jnp
mov
add
add
in
add
jnp
add
jge
pop
add
jmp
rolb
std
add
push
add
inc
adc
lods
btc
repnz
not
pop
movl
push
pop
jmp
pushl
push
push
push
push
call
add
movl
fiadds
std
add
push
pop
add
jp
imul
pop
add
jl
add
add
loope
xchg
frstor
add
add
add
bound
add
add
xchg
add
mov
add
add
push
add
add
add
push
ror
lea
add
pop
mov
push
push
push
lea
push
call
jge
nop
add
pusha
add
loope
mov
lcall
movsb
pop
pop
outsl
xchg
lds
in
add
sti
xchg
mov
fldenv
mov
add
pop
scas
shrb
pop
add
lock
lcall
inc
sbb
sub
sub
pop
mov
push
push
push
or
not
add
rol
sub
add
ror
shl
pop
shr
pop
push
push
call
movl
push
jp
jp
add
mov
add
movsb
std
add
xlat
add
push
add
add
add
addr16
pop
push
call
push
push
call
jp
add
in
add
rolb
mov
movsb
mov
add
add
mov
jle
aam
pop
xchg
pusha
mov
jo
int
pop
jge
mov
les
hlt
push
push
add
add
add
mov
add
in
clc
lcall
cmp
rol
je
push
push
ror
shl
push
push
pop
add
add
inc
ror
sub
shl
inc
pop
rol
pop
push
pop
push
call
push
xor
inc
pop
cmpl
je
push
push
sub
ror
push
push
pop
add
sub
xor
sub
add
ror
not
pop
not
xor
inc
dec
pop
push
push
push
push
call
pop
arpl
hlt
add
add
xchg
ror
add
fwait
in
add
add
out
testl
add
movsb
add
std
add
add
jno
add
fwait
jbe
pop
int3
add
test
add
push
mov
add
lret
mov
add
in
lock
lcall
call
push
add
rol
lea
pop
cmpl
je
push
push
not
push
xor
add
not
sub
dec
add
shr
pop
shr
shl
pop
push
inc
sub
add
pop
push
push
push
push
lea
push
call
add
popa
stos
imul
incb
sti
add
stos
push
add
add
add
add
pop
add
add
mov
pop
call
push
rol
rol
inc
pop
cmpl
je
push
push
shr
inc
inc
push
or
not
add
rol
sub
sub
rol
pop
sub
lea
xor
pop
push
add
add
pop
push
call
push
push
push
push
lea
push
call
mov
bound
add
add
aad
add
add
add
in
add
xchg
push
xchg
add
mov
pusha
jb
stc
roll
add
pop
add
pop
add
bound
fldl
cmp
rol
je
push
push
sub
push
or
inc
add
sub
add
not
shl
rol
pop
ror
xor
add
shl
pop
push
push
lea
push
push
push
push
push
push
call
movsl
add
add
add
filds
imul
ja
jns
xchg
scas
out
add
pop
add
les
push
fldt
add
add
add
pop
mov
sub
pop
push
call
push
not
lea
pop
cmpl
je
push
push
dec
shr
push
sub
add
not
dec
add
sub
not
pop
rol
sub
lea
lea
pop
push
lea
sub
pop
push
push
push
lea
push
push
push
call
add
push
jge
add
push
faddl
push
add
into
mov
lret
lds
add
mov
testb
add
xchg
lret
frstor
mov
add
subb
mov
add
imul
stos
sub
pop
call
cmpl
je
push
push
push
xor
add
sub
sub
sub
add
pop
rol
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
iret
clc
notl
out
add
xchg
call
jle
loop
add
add
imul
push
sarb
add
mov
jle
in
loope
add
add
add
pop
add
neg
shlb
mov
xchg
push
rcrb
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
repnz
nop
pop
lahf
testl
stos
add
xchg
add
test
repnz
pushf
pop
push
lds
mov
imul
out
jne
add
add
lods
add
rolb
add
or
js
jmp
les
je
push
push
xor
not
sub
push
or
not
add
sub
inc
sub
shl
sub
pop
add
add
pop
push
ror
inc
dec
ror
pop
push
push
push
push
push
push
call
insb
fildl
add
add
add
pop
shll
mov
add
movl
mov
cwtl
stc
jns
into
ret
mov
cld
add
lcall
pop
call
cmpl
jne
push
pop
mov
movl
push
push
call
pusha
cli
xchg
add
mov
add
add
mov
popa
pop
movb
add
cmc
jle
cmc
mov
jne
mov
add
add
push
mov
add
adcl
mov
xchg
add
movsb
idivb
add
add
jecxz
test
jmp
insb
sub
pop
jmp
push
shr
sub
pop
xor
pop
push
lea
xor
add
pop
pop
pop
push
inc
add
pop
pop
push
not
not
add
pop
leave
push
push
push
push
call
cmpsl
addl
pushf
add
mov
add
xchg
add
imul
xchg
add
mov
add
push
insb
add
fldt
enter
add
leave
cmpsb
add
xchg
loopne
add
add
ja
mov
je
pushf
push
mov
in
jne
jp
add
sub
pop
ret
push
lea
push
lea
push
call
xchg
push
in
add
in
push
add
mov
in
add
add
insb
add
pusha
add
add
movsl
jle
bound
add
add
add
gs
push
ljmp
pop
push
mov
push
push
push
push
lea
push
lea
push
call
out
addr16
add
add
in
movsl
add
add
pop
scas
add
mov
mov
add
roll
add
in
mov
movsl
addr16
add
in
push
add
int3
add
add
lcall
in
push
dec
pop
cmpl
jne
push
push
sub
sub
push
push
pop
add
shl
ror
rol
sub
sub
xor
pop
xor
sub
pop
push
push
push
push
push
lea
push
push
call
pusha
add
cmpsb
in
add
addl
push
add
mov
leave
mov
add
into
les
flds
leave
add
negb
add
push
push
mov
mov
mov
jno
add
mov
pop
popf
mov
in
in
pushl
push
dec
pop
call
push
push
push
push
push
lea
push
lea
push
call
jnp
lret
push
fiaddl
fldl
mul
enter
stos
xchg
addr16
neg
add
add
les
iret
fs
out
add
scas
mov
push
add
movl
sub
pop
push
call
push
push
push
push
lea
push
push
push
push
call
push
pop
out
movsl
push
add
lahf
add
add
jno
pop
add
loop
add
mov
jno
push
loope
add
movsl
add
addl
add
add
lods
xchg
pop
add
add
add
loopne
xchg
mov
add
icebp
roll
sub
pop
jmp
push
lea
pop
cmpl
jne
mov
push
push
call
lret
shll
add
pushf
lret
add
in
add
add
push
fldl
call
clc
pop
call
ret
push
lea
push
push
push
push
push
push
push
push
call
add
imul
add
pop
in
fxch
jp
pop
add
push
mov
sti
add
test
add
loop
add
aam
add
push
add
lcall
add
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
popl
push
add
add
add
mov
iret
roll
add
nop
add
add
pushf
in
jle
push
add
mov
add
lret
add
leave
add
in
fdivr
lcall
jge
add
test
add
add
gs
push
add
add
xor
add
push
sub
add
lea
add
shr
sub
shl
dec
not
pop
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
jo
in
add
mov
fs
mov
add
nop
add
add
add
fcompl
jne
push
not
sub
pop
call
push
push
inc
sub
pop
call
push
lea
push
lea
push
call
mov
add
iret
in
add
add
add
add
add
add
jl
xchg
push
outsl
add
add
loopne
pop
add
add
out
sbbl
pop
jmp
push
sub
dec
add
pop
cmpl
je
push
push
push
push
push
push
push
push
lea
push
lea
push
call
bound
mov
imul
in
xlat
jge
fildl
add
mov
pusha
rolb
jl
ret
sahf
add
add
jge
add
mov
jp
jb
add
gs
clc
nop
rcr
cmpb
pop
cmpl
jne
push
push
push
lea
push
push
call
push
add
test
sahf
scas
add
cld
fwait
movsl
add
add
add
out
pusha
mov
loope
xchg
mov
xchg
rclb
push
test
add
add
out
sub
pop
mov
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
push
lds
lret
add
idiv
xchg
add
pop
add
mov
add
cwtl
test
fs
mov
add
xchg
call
fdivr
lcall
jmp
push
push
shl
push
sub
add
inc
sub
sub
inc
lea
not
pop
sub
pop
push
lea
push
call
xchg
push
pop
stc
in
into
add
pop
xchg
in
add
add
mov
add
xchg
lret
add
test
mov
add
xchg
add
add
add
add
add
hlt
jp
shlb
add
add
mov
in
clc
lcall
jne
push
push
push
push
call
mov
add
testb
f2xm1
jecxz
jns
testl
add
stc
rcrb
add
add
fisubs
push
add
roll
push
pusha
mov
add
mov
add
push
add
jns
add
add
ffreep
fs
flds
jnp
fsubs
and
add
push
push
push
push
call
nop
stc
xchg
mov
movsb
xchg
add
addl
cli
negl
clc
add
in
out
mov
in
add
test
popa
add
add
add
lahf
loope
fistl
add
xchg
add
add
repnz
add
jbe
jmp
jno
ret
js
add
imul
in
call
cld
add
cmp
roll
rolb
sub
add
sub
rol
inc
xor
pop
dec
ror
rol
pop
push
dec
sub
sub
xor
pop
pushl
push
add
add
shr
not
pop
call
push
ror
pop
call
push
push
lea
push
push
pop
add
ror
rol
xor
xor
sub
pop
shl
rol
shl
pop
push
add
sub
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
call
repnz
add
add
shlb
leave
add
pop
in
add
lret
out
lods
add
add
mov
add
fs
add
lcall
ja
add
call
push
push
add
ror
push
and
add
rol
sub
sub
add
pop
rol
xor
add
pop
push
push
push
push
call
add
addl
mov
add
add
push
mov
sahf
fldl
out
loop
clc
addr16
add
add
mov
add
jmp
add
pop
add
add
jecxz
sub
pop
pushl
push
add
lea
add
pop
call
call
push
push
dec
push
push
pop
add
shr
sub
add
ror
pop
dec
pop
push
pop
pushl
push
shr
shl
xor
pop
call
push
add
rol
pop
call
push
push
add
lea
push
and
add
xor
dec
sub
dec
pop
dec
not
rol
pop
push
not
not
not
rol
pop
pushl
push
xor
pop
call
push
push
push
call
xchg
leave
aam
cld
sahf
addl
add
push
lahf
add
stc
xchg
filds
jo
mov
mov
jl
add
add
lret
xchg
jecxz
fs
in
hlt
lcall
shrb
or
push
shr
add
shl
push
or
inc
add
sub
sub
pop
xor
pop
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
nop
addb
add
mov
faddl
xchg
add
jns
add
add
in
mov
add
call
add
test
add
loopne
pushl
call
push
inc
pop
call
push
push
lea
push
or
not
add
rol
sub
shl
sub
not
lea
pop
add
xor
xor
shr
pop
push
push
push
push
push
push
push
push
lea
push
call
bound
out
add
add
loop
mov
jb
aad
add
fists
jle
rolb
lods
shlb
mov
stos
add
add
mov
call
mov
imulb
sahf
add
add
bound
mov
jo
fwait
lds
in
fdivr
lcall
jne
call
push
push
push
push
push
push
push
push
push
push
call
iret
arpl
int
mov
xchg
call
pop
mov
ljmp
jne
jae
push
mov
add
add
mov
in
fdivr
lcall
shrb
push
lret
or
push
and
add
rol
sub
not
inc
pop
not
pop
push
sub
sub
pop
pushl
call
push
push
lea
push
push
push
call
cltd
in
test
add
clc
add
test
std
test
xchg
clc
movsb
popa
xchg
stos
xchg
add
shrb
bound
mov
rol
shl
add
rol
push
sub
add
shl
sub
dec
lea
sub
pop
pop
push
ror
rol
xor
pop
pushl
push
sub
pop
call
push
shl
rol
pop
lea
push
push
push
push
push
lea
push
push
call
add
add
add
fisubl
in
pusha
push
add
push
movl
push
add
hlt
jno
jbe
pop
add
sub
pop
push
push
push
push
push
lea
push
push
push
call
mov
mov
add
add
movl
add
scas
add
pop
add
add
add
arpl
rorl
add
jge
aam
clc
sub
pop
call
push
push
rol
shr
sub
push
sub
add
inc
sub
sub
pop
pop
push
add
ror
pop
pushl
call
push
push
push
call
add
mov
sbb
lock
mov
add
add
add
add
add
into
mov
add
add
rolb
ficoms
add
mov
aam
jne
push
add
add
add
fildl
add
add
adcl
hlt
lcall
shrb
aad
out
push
push
pop
add
xor
add
inc
sub
add
pop
add
add
dec
pop
push
inc
add
not
sub
pop
pushl
call
push
inc
add
ror
pop
call
push
push
shr
shl
push
push
pop
add
lea
add
shl
sub
rol
pop
sub
xor
pop
push
shr
shr
pop
pushl
call
push
push
push
call
repnz
lds
add
loope
add
add
add
mov
jle
xchg
scas
popf
stos
add
pop
add
add
xchg
stos
pushf
add
mov
aad
sub
pop
call
push
push
xor
shr
add
sub
push
push
pop
add
ror
sub
dec
rol
xor
pop
lea
add
sub
not
pop
push
xor
ror
sub
inc
pop
pushl
push
push
push
push
lea
push
push
call
add
add
addb
add
in
add
loopne
js
movb
loope
push
add
add
pop
mov
fwait
roll
sub
pop
call
push
push
shl
push
and
add
sub
add
ror
sub
add
pop
sub
shl
pop
push
push
rol
shl
rol
push
sub
add
rol
ror
sub
not
add
pop
not
not
pop
push
lea
push
push
call
movsb
add
xchg
add
into
add
in
push
cwtl
movsl
add
add
fadds
mov
lea
add
popl
add
andb
add
add
push
jmp
add
add
in
loope
insb
xchg
cmp
add
jb
add
sub
pop
call
push
add
add
not
pop
pop
push
shr
not
xor
shr
pop
dec
jne
call
push
push
lea
push
push
push
push
push
call
add
add
add
andb
mov
add
add
rcr
mov
cwtl
xchg
add
fdivs
cltd
fwait
jnp
cli
into
mov
add
lret
scas
add
sub
pop
mov
int
push
rol
inc
pop
lea
push
push
ror
sub
push
xor
add
not
add
add
lea
sub
xor
not
shr
pop
shr
pop
push
shl
inc
rol
xor
pop
pushl
call
push
push
push
push
lea
push
lea
push
call
popa
mov
cwtl
lods
lret
xchg
addr16
stos
lea
add
lcall
shl
lahf
add
add
jne
add
xchg
add
xchg
loop
xchg
sub
pop
push
push
push
push
push
push
call
jnp
add
mov
mov
mov
pop
mov
fiaddl
xchg
mov
add
add
lahf
add
add
cmpsl
xchg
add
pop
jl
outsl
add
add
add
add
movsb
sub
pop
call
push
push
lea
not
rol
push
xor
add
sub
dec
add
rol
rol
pop
shl
rol
sub
pop
push
push
lea
push
push
push
push
push
call
les
imul
call
roll
lret
loopne
add
addb
call
stos
ljmp
add
js
in
add
jb
je
cmpsl
add
in
add
pop
pushl
push
dec
xor
pop
call
push
push
push
push
push
lea
push
push
push
call
pop
add
les
jl
xchg
add
add
mov
add
testl
mov
add
pop
jmp
add
faddl
bound
add
sar
add
loopne
call
push
pop
mov
push
add
shr
pop
lea
push
push
shl
add
inc
push
or
not
add
xor
lea
ror
rol
sub
sub
pop
pop
push
lea
sub
rol
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
loop
enter
xchg
jbe
add
repnz
bound
scas
imul
jecxz
in
push
flds
add
add
add
aam
add
call
lcall
int3
adc
cmp
mov
or
call
mov
jb
mov
xchg
add
fs
xchg
add
jl
add
stc
mov
push
add
out
add
mov
shlb
outsl
add
mov
add
mov
add
mov
add
add
mov
lret
add
out
add
pop
lea
push
push
sub
add
sub
sub
pop
push
push
rol
add
pop
push
pushl
push
push
shr
push
or
not
add
add
lea
sub
lea
add
shl
add
pop
shl
pop
push
push
push
push
push
push
push
call
jbe
add
add
add
out
repnz
mov
imul
cmpsl
push
fucomp
mov
add
add
xchg
hlt
add
loope
push
add
add
popa
in
add
lahf
xchg
gs
add
fisubrl
stc
add
add
lret
sub
pop
push
push
sub
pop
call
push
push
not
rol
push
xor
add
lea
xor
sub
dec
shr
not
inc
pop
shr
add
pop
push
sub
add
pop
pushl
call
push
dec
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
pop
xchg
add
outsl
mov
ja
cwtl
cmpsl
lods
into
pusha
fsubrs
add
data16
add
cmpsl
stos
nop
xlat
fwait
push
jecxz
add
mov
test
stos
mov
add
pop
cmc
jbe
add
push
push
outsl
in
push
mov
add
cli
add
scas
add
fdiv
sub
pop
call
push
push
rol
add
push
xor
add
add
sub
sub
ror
shr
not
pop
dec
add
pop
push
pop
pushl
push
sub
pop
call
push
push
push
lea
push
push
push
call
add
in
add
add
popa
mov
clc
pop
add
add
add
fcmovnu
aam
mov
out
add
mov
shrl
add
lcall
rclb
jecxz
rol
shl
pop
pushl
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
in
add
std
stos
push
stos
add
jb
add
mov
add
push
add
add
mov
into
movl
pop
sub
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
test
cld
iret
gs
ljmp
les
xlat
insb
iret
jo
add
push
add
add
add
out
mov
std
add
mov
stc
lret
in
sub
pop
jmp
push
push
sub
push
or
inc
add
add
sub
sub
dec
add
pop
shr
sub
ror
pop
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
xlat
push
lahf
lahf
addb
add
push
faddl
std
add
in
add
add
add
mov
lods
mov
je
add
add
add
movsl
mov
in
int3
mov
add
add
in
loopne
pushl
call
push
push
push
push
push
lea
push
call
sti
add
add
add
cltd
pop
add
add
fadds
mov
mov
sub
pop
push
push
push
push
lea
push
push
push
push
call
add
add
add
out
mull
jnp
jbe
add
push
bound
add
stos
mov
xchg
jmp
ror
add
shrb
fs
push
add
sub
add
push
sub
add
add
not
xor
sub
not
inc
sub
shr
pop
inc
inc
shr
sub
pop
push
ror
not
pop
pushl
call
push
lea
inc
add
pop
push
push
rol
sub
pop
call
push
dec
pop
leave
push
push
push
push
push
push
call
add
cli
cwtl
lret
mov
add
idivl
mov
ret
jle
xchg
aam
gs
add
add
out
add
into
add
add
mov
add
loopne
out
sub
pop
add
push
lea
push
push
push
lea
push
push
call
iret
out
insb
into
add
add
sahf
add
add
rorl
cltd
add
add
nop
fcomi
add
pushf
xchg
repnz
mov
fs
fucom
cmpsb
add
jno
add
mov
in
jns
aam
add
in
call
pop
pop
push
push
call
icebp
add
add
add
mov
testb
add
aam
add
in
je
push
add
jne
fxch
add
lea
add
popa
sub
push
jno
mov
mov
out
mov
cld
add
lret
add
add
add
add
add
add
fadds
push
inc
pop
xor
push
sub
add
shr
pop
inc
push
dec
add
lea
add
pop
ret
push
pop
leave
push
push
push
push
lea
push
push
push
call
lahf
test
add
mov
loopne
add
repnz
movl
mov
jae
addr16
jo
enter
mov
addr16
mov
add
negl
popa
int
jl
add
mov
push
add
in
in
ret
push
push
add
sub
ror
pop
mov
cmpl
jne
push
ror
inc
pop
mov
push
not
ror
lea
pop
jmp
push
shr
pop
mov
push
sub
pop
and
xor
push
shr
not
pop
xor
add
push
pop
xor
push
sub
pop
dec
push
push
push
lea
push
push
lea
push
push
lea
push
call
rolb
arpl
shrl
mov
ja
test
sar
add
stos
pusha
cwtl
add
lock
xchg
add
jne
rcrl
movsl
pop
add
xchg
pushf
incb
push
les
add
icebp
push
repnz
les
add
jmp
roll
add
je
sub
pop
sub
jmp
push
push
push
push
push
push
push
call
cmpb
push
add
add
pop
pop
add
mov
repnz
jae
add
ret
out
jae
mov
pusha
xchg
fiaddl
add
jno
lret
cwtl
pop
add
mov
add
add
add
testb
cmpsl
test
add
add
icebp
push
add
icebp
addr16
fildl
sub
pop
sub
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
fsubs
add
add
mov
lahf
mov
out
movsb
add
add
addl
add
jns
xchg
cld
movsl
repnz
add
negb
mov
pop
add
jae
test
add
add
mov
sub
pop
pushl
push
push
push
push
push
call
add
add
or
add
pop
cli
mov
add
loop
loop
lret
add
add
mov
add
push
pop
add
jl
data16
je
jno
mov
shr
test
jl
movsl
std
add
jp
lods
mov
add
in
in
pop
pop
push
shl
shr
pop
sub
cmp
jne
push
shl
pop
mov
push
push
lea
push
push
lea
push
push
call
jp
in
add
push
add
add
jl
add
mov
push
add
xchg
movsb
add
cmpsl
in
jge
add
add
add
cwtl
lds
pusha
cld
add
xchg
cmc
out
icebp
outsl
sub
pop
lea
sub
push
lea
push
lea
push
push
lea
push
push
call
mov
lahf
xchg
mov
xchg
call
jl
add
outsl
fidivl
int
add
shlb
add
add
rcrb
lock
rcrl
add
add
sub
pop
mov
shr
push
ror
shl
pop
add
push
ror
rol
pop
sub
push
xor
dec
ror
pop
pushl
push
sub
dec
not
pop
pop
push
add
pop
shr
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
in
jb
loope
fsubrs
or
test
push
xchg
roll
mov
sti
cmc
add
rolb
jae
lcall
mov
iret
mov
add
xchg
cmpsl
push
loopne
clc
add
add
push
fwait
roll
jne
jmp
addr16
pop
and
push
shr
pop
sub
push
ror
pop
cmp
jne
push
add
dec
rol
lea
pop
leave
push
push
push
call
add
add
add
mov
mov
jmp
push
imull
lret
add
fildl
xchg
in
xorl
add
movsb
std
add
add
hlt
jbe
add
fs
pop
ret
push
push
lea
push
lea
push
lea
push
lea
push
call
aam
data16
add
fsubp
fwait
add
testb
add
test
push
pop
out
std
scas
lods
add
jl
enter
add
lcall
push
lea
push
push
call
loop
int3
add
roll
mov
pop
cmc
add
mov
pushf
data16
add
add
mov
add
mov
jp
xchg
xchg
add
mov
add
push
not
pop
push
push
lea
push
lea
push
call
in
imull
into
push
cmc
add
andb
fabs
add
add
add
lret
add
jbe
jecxz
add
add
xchg
add
add
add
addb
add
add
lods
add
add
mov
in
hlt
pop
push
push
lea
push
push
push
call
add
push
add
roll
add
jmp
add
add
enter
jnp
in
popa
hlt
mov
push
add
sahf
add
add
add
pop
std
jecxz
jae
pop
xchg
add
add
mov
shlb
mov
lcall
add
add
push
push
shl
shr
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
out
mov
test
add
imul
in
lods
in
push
fwait
add
test
shl
add
add
mov
xor
add
mov
test
pop
pop
frstor
mov
cmpsb
cmc
test
jecxz
arpl
add
addl
sub
pop
push
mov
push
shr
pop
lea
push
add
shr
pop
sub
push
shr
dec
pop
mov
shr
push
push
push
push
push
push
lea
push
call
nop
add
sarl
scas
gs
movsb
mov
pop
mov
roll
mov
in
add
add
add
add
jp
add
push
add
add
xchg
add
in
lret
mov
add
shr
flds
loop
mov
add
fimull
add
pushf
inc
sub
rclb
push
push
lea
push
push
push
call
jp
gs
add
rclb
add
add
mov
cli
add
arpl
add
xlat
scas
repnz
jle
push
sarl
add
pushf
out
lcall
cltd
add
cmpsl
stc
insb
test
filds
lods
mov
mov
sub
pop
add
push
push
push
push
call
jecxz
add
mov
add
add
xchg
sahf
loope
add
add
add
jne
int
add
add
movsb
add
arpl
add
add
roll
add
add
fxch
stos
sahf
add
add
in
lock
mov
push
push
call
add
rolb
xchg
mov
fldt
add
add
stc
call
mov
lret
add
mov
add
in
mov
mov
add
pop
add
test
movsl
add
jnp
xchg
add
add
lcall
jge
xor
push
push
push
lea
push
push
lea
push
push
call
add
mov
push
add
movsb
add
add
pop
add
add
add
add
addr16
test
aad
add
xchg
xchg
xchg
jae
add
fsubp
add
fwait
add
jge
aad
mov
fisubl
in
add
movb
add
enter
add
sub
pop
mov
push
push
lea
push
push
push
call
fstpt
mov
imul
mov
in
add
jmp
add
jl
add
mov
xchg
scas
add
out
stos
imul
add
add
xchg
fldl
add
test
andl
mov
add
add
outsl
ljmp
in
lcall
loopne
push
push
push
push
lea
push
push
call
add
call
sti
add
add
movsl
push
add
lods
mov
add
add
pop
lret
mov
pushf
ja
sti
jl
mov
add
lcall
mov
add
je
add
cld
add
pushf
cwtl
sub
pop
rol
push
shl
xor
not
shl
pop
rol
xor
push
shr
pop
inc
push
shl
sub
pop
cmpb
jne
add
push
push
push
call
add
popf
jne
jae
fildl
add
lds
add
add
add
add
addr16
xchg
pop
add
xorl
add
imul
sar
add
add
mov
sub
pop
cmp
je
push
xor
pop
add
push
push
push
lea
push
push
call
fists
icebp
fmull
pop
out
mov
add
add
movsb
jl
add
cmpsb
aam
lret
mov
push
pop
add
add
addr16
add
mov
sub
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
push
push
push
push
call
fsubr
addl
add
add
add
mov
std
add
pushf
jp
cwtl
jne
roll
add
xchg
add
out
fwait
push
lret
add
add
jl
pop
cmpsl
test
add
mov
lock
fdivs
add
ficoms
addb
push
loope
fs
imul
mov
hlt
jge
in
fdivr
lcall
rclb
push
push
push
call
iret
add
push
add
add
add
in
data16
roll
add
test
jmp
cmc
cmpsl
out
movl
add
add
add
jnp
xchg
scas
add
add
add
add
sub
pop
pop
push
sub
dec
pop
pop
push
push
push
lea
push
push
lea
push
call
jno
ret
add
add
fadds
add
in
nop
xchg
in
add
push
add
add
insb
stos
add
add
add
pop
add
lcall
push
mov
pop
cld
sub
pop
pop
push
shl
ror
pop
pop
push
sub
sub
add
pop
pop
leave
push
lea
push
push
push
call
out
jb
cmc
add
and
mov
jb
add
add
sti
add
add
pusha
add
push
jo
add
lds
mov
add
add
repnz
add
repnz
pop
cld
add
pop
stos
lcall
push
icebp
test
gs
add
mov
sub
pop
ret
push
shl
shr
add
pop
mov
add
push
push
lea
push
lea
push
call
add
sub
add
loope
add
ja
arpl
add
push
add
push
add
add
lahf
mov
mov
mov
add
jne
mov
mov
test
cmpl
in
fs
jp
scas
add
bound
lcall
add
mov
push
adc
add
push
call
xchg
dec
adc
gs
push
push
lea
push
push
push
call
add
add
add
add
jbe
cltd
add
add
mov
xchg
add
int3
movsb
add
xchg
out
test
rcrl
shll
fcomi
add
scas
imul
insb
loope
add
mov
add
insb
mov
pop
add
add
add
mov
sahf
lods
outsl
jmp
add
jp
fldcw
sub
pop
push
push
inc
sub
pop
call
push
lea
xor
lea
sub
pop
xor
push
ror
lea
inc
sub
pop
pop
pop
push
not
pop
pop
pop
push
inc
inc
shr
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
js
add
jbe
add
add
je
mov
add
cmc
mov
add
add
add
add
jb
add
cld
std
add
pop
xchg
mov
add
add
add
roll
mov
add
add
testb
add
push
push
lea
push
push
lea
push
push
call
jb
cli
repnz
lds
out
imul
test
hlt
xchg
shlb
add
add
out
std
imul
jmp
mov
shlb
incb
popf
add
add
in
call
ret
push
rol
pop
push
push
push
push
lea
push
push
push
call
pop
add
jl
stc
arpl
mov
xchg
icebp
push
add
movsl
add
sarb
mov
into
aad
mov
std
add
add
cmpsb
data16
mov
push
lea
lea
not
add
pop
add
push
add
add
pop
push
push
add
ror
not
lea
pop
push
push
push
push
push
push
call
mull
add
mov
add
mov
mov
mov
add
add
add
imul
popf
add
mov
out
add
add
mov
push
movsb
mov
popa
add
cltd
scas
add
add
lods
add
add
push
push
push
sub
pop
mov
push
sub
inc
add
shl
pop
push
push
add
not
dec
pop
pop
push
add
sub
lea
shl
pop
lea
sub
push
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
add
fcomp
add
add
add
add
not
add
xchg
std
add
jl
lret
popl
movsl
add
popl
mov
dec
out
aad
add
add
movsb
movsl
out
add
lret
pushf
pushf
cmc
mov
mov
jle
mov
iret
cli
int3
add
shl
in
loopne
lcall
ljmp
mov
push
push
lea
push
push
push
push
call
xchg
push
lret
jmp
cmpsb
push
mov
add
sti
jne
roll
xchg
mov
andl
add
mov
add
pop
movb
out
mov
add
add
add
mov
lret
mov
in
call
add
push
lea
push
lea
push
push
push
push
push
push
push
call
add
push
add
add
mov
pop
cmc
jno
add
int3
aam
mov
lret
xchg
in
add
jecxz
out
xchg
add
push
mov
rcrl
mov
in
fs
add
add
add
into
bound
scas
add
add
add
sub
pop
pushl
popl
push
not
sub
sub
pop
mov
push
add
sub
pop
add
xor
push
rol
pop
lea
mov
push
shl
add
pop
add
push
push
push
push
push
push
push
push
push
call
add
mov
add
movsb
test
add
mov
add
movsb
mov
push
push
xchg
aam
into
test
add
mov
addl
ret
insb
ret
scas
add
mov
les
js
mov
pop
fs
fdivr
je
add
xlat
test
add
mov
in
fdivr
lcall
rclb
push
push
call
push
sti
add
jbe
clc
xchg
add
pusha
add
add
add
fildl
add
lret
add
jl
mov
xchg
pop
add
subl
add
add
out
stc
pop
repnz
add
int3
push
je
mov
rorb
add
test
lods
add
iret
mov
lcall
rolb
inc
pop
nop
push
rol
pop
nop
xor
push
not
xor
rol
pop
nop
nop
push
push
lea
push
push
push
push
push
push
call
imul
cli
add
mov
nop
mov
jp
mov
add
pop
add
imul
je
pushf
aam
mov
add
add
popl
fidivl
loope
imul
mov
add
jae
arpl
int3
in
into
addb
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
add
cmpsb
jle
add
add
cltd
pop
imul
js
add
mov
bound
add
pop
sub
pop
nop
nop
push
inc
dec
shl
pop
cmpb
jne
add
push
lea
push
push
push
push
push
push
call
lds
lea
cmpsl
jbe
js
lret
adc
sahf
lods
xchg
pop
add
add
mov
repnz
add
in
mov
int
add
add
incb
cmpsb
add
ffree
add
data16
fcomps
in
nop
push
push
push
lea
push
push
push
call
stos
sar
jnp
test
jo
add
add
aad
shl
fiadds
cmc
ror
add
pushf
insb
add
add
movl
pop
int3
lock
jo
enter
std
mov
pop
hlt
pop
push
popa
add
lea
pushf
push
rolb
popl
push
add
add
add
push
push
push
call
add
add
ficompl
xchg
into
addl
cmpsl
add
out
add
iret
leave
je
add
popf
addl
rcll
add
mov
jae
add
jne
test
add
les
aam
add
mov
add
fwait
xchg
jns
jb
add
sub
add
add
in
hlt
pop
cmp
je
push
lea
pop
nop
nop
push
dec
shl
rol
pop
inc
push
add
xor
pop
nop
push
shr
inc
lea
pop
nop
cmp
jb
push
lea
push
call
mov
imul
cld
add
sti
add
stc
add
out
xchg
pop
mov
add
push
add
mov
push
add
add
add
add
shlb
clc
pop
xor
jmp
push
push
push
push
call
xlat
add
push
add
ret
fwait
lcall
enter
add
add
mov
ljmp
add
lcall
push
and
push
push
push
push
push
push
call
add
fs
into
add
add
xchg
test
push
or
stc
pusha
add
ja
js
filds
add
pop
add
pop
jp
xchg
ret
add
jno
addb
ljmp
popf
add
jmp
in
in
lcall
rcll
mov
aas
push
lea
push
push
call
add
xchg
add
push
mov
arpl
add
ja
add
add
out
popf
add
mov
push
add
stos
add
in
call
jb
lea
push
lea
push
push
lea
push
call
cld
add
bound
sahf
flds
mov
pop
add
add
mov
add
aam
push
add
add
add
shll
xchg
roll
add
mov
mov
jnp
in
in
pop
mov
push
push
push
lea
push
push
push
push
call
add
add
mov
stos
add
add
in
sti
lock
testl
std
add
add
add
jno
push
data16
add
mov
test
mov
add
jno
sahf
add
jl
sti
jge
shll
push
test
add
add
add
fiadds
in
in
add
mov
push
push
lea
push
lea
push
push
push
push
push
call
add
pop
lcall
add
mov
pop
movsl
jns
in
push
mov
mov
ja
mov
mov
leave
add
add
pushf
jecxz
sub
pop
xor
push
add
rol
shr
pop
xor
push
not
sub
sub
pop
shl
push
shr
pop
xor
shl
push
lea
push
push
push
push
call
arpl
add
add
add
add
cmc
jmp
stos
mov
repnz
add
js
push
add
mov
add
cli
aam
add
mov
lock
add
lcall
dec
nop
add
loope
push
push
push
lea
push
push
push
lea
push
push
call
add
add
xchg
jbe
in
into
add
add
add
add
xlat
flds
mov
mov
pop
sti
loop
add
pop
js
cmpsl
clc
add
int3
add
leave
mov
push
ret
jecxz
enter
jae
add
lcall
or
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
fistpll
std
add
push
jne
mov
add
jns
stos
cmc
test
jnp
faddl
clc
clc
push
add
add
mov
in
add
add
mov
test
mov
jbe
add
add
add
jbe
in
add
sub
pop
mov
add
push
rol
lea
pop
pop
push
push
call
rorl
testb
add
add
push
mov
add
add
xchg
add
lods
add
jl
mov
mov
mov
in
clc
lcall
push
push
push
push
push
call
add
loopne
call
xchg
mov
xchg
xchg
std
add
add
xchg
sarb
into
pusha
add
movsl
lret
push
add
call
add
js
mov
pop
push
dec
add
rol
inc
pop
pop
leave
push
push
push
call
add
add
mov
mov
out
test
add
add
mov
xchg
push
sub
pop
ret
push
not
shr
shl
pop
push
push
xor
xor
pop
mov
push
push
push
lea
push
push
call
add
add
mov
add
add
fstpt
add
push
bound
fiadds
rcrb
push
pusha
add
add
jl
pop
mov
rorb
add
fsubl
add
or
movsl
add
pop
gs
sti
rolb
loopne
call
lock
lcall
push
add
add
pop
push
push
push
sub
ror
add
pop
mov
push
push
call
mov
scas
mov
push
movsl
add
add
add
add
out
add
add
add
xchg
scas
pop
loop
mov
push
incb
add
icebp
out
sarb
add
add
lea
add
add
mov
add
add
xchg
jnp
mov
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
mov
ret
add
add
jns
sahf
add
add
lea
in
cld
lahf
add
out
addb
mov
jno
outsl
add
xchg
add
add
pop
jmp
stos
idivb
fcomps
jge
test
je
push
push
push
call
pop
add
add
movsl
add
add
pusha
add
add
xchg
test
add
mov
popa
add
add
add
add
add
add
xchg
add
add
mov
sub
pop
mov
test
je
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
shr
xchg
add
mov
mov
mov
add
pop
pop
mov
xchg
push
add
cld
push
fcoml
add
jl
out
lds
add
add
mov
pop
cmp
add
add
jo
in
fcompl
notl
pop
out
outsb
push
push
push
lea
push
call
bound
rolb
mov
jae
enter
pusha
add
enter
add
add
push
jp
scas
stos
movl
add
lods
jo
add
add
add
mov
add
add
movsl
roll
add
sub
pop
mov
push
lea
push
push
lea
push
call
imul
cmpsl
mov
loop
repnz
push
add
hlt
jne
mov
adcl
subl
leave
add
aad
pop
mov
add
cwtl
xchg
in
js
xchg
mov
jmp
mov
add
lret
mov
add
enter
add
add
add
movsl
mov
add
icebp
add
mov
sub
pop
mov
inc
push
add
xor
pop
cmp
je
test
je
push
add
lea
rol
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
add
add
xchg
push
lods
call
fsts
add
imul
cltd
jecxz
mov
add
add
add
lods
add
xchg
pop
fwait
add
cmpsl
add
shrb
cli
add
push
add
mov
mov
fdivp
add
in
add
movsb
add
xchg
add
out
mov
add
lcall
push
push
push
push
push
lea
push
push
push
call
add
push
subl
mov
xchg
add
add
xchg
ja
mov
add
movl
add
pop
fdivl
add
add
cmpsl
jbe
shlb
sub
pop
cmp
je
test
jne
push
push
push
lea
push
call
movsb
pusha
xchg
xchg
add
mov
add
jecxz
xlat
repnz
jecxz
mov
add
mov
mov
push
sub
pop
xor
push
push
push
push
push
push
push
call
ret
cmpsb
in
movsb
scas
add
out
add
loope
mov
pop
add
out
add
popa
add
fcmovnb
nop
mov
in
lcall
push
lea
push
call
add
add
fidivrl
sub
mov
jecxz
add
add
add
clc
add
mov
popf
add
xchg
lcall
mov
les
flds
movl
in
cli
push
jae
add
movsb
sub
pop
pop
push
lea
sub
sub
pop
pop
push
push
lea
push
call
xchg
add
xchg
add
add
push
add
enter
addb
add
cmpsb
pop
add
fs
pop
push
mov
add
mov
add
add
mov
into
push
in
fsqrt
add
pop
add
int3
add
add
add
lcall
push
push
lea
push
push
push
call
pop
xchg
push
xchg
add
bound
add
add
push
out
add
rorb
in
cmpsb
xchg
cmpsb
fdivr
out
jecxz
mov
add
flds
shrl
add
iret
fwait
stc
mov
popf
add
sahf
fcomps
in
lcall
push
push
push
call
add
filds
movsl
fdiv
clc
add
add
aad
add
mov
jmp
test
popf
in
xchg
ret
nop
add
pop
add
push
add
out
pusha
mov
push
andl
flds
jnp
push
jno
fs
jmp
add
add
lcall
out
add
in
hlt
pop
ret
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
iret
add
lds
je
mov
add
add
popf
cli
add
aam
fsts
out
jnp
add
out
ja
jne
test
sub
pop
mov
push
dec
lea
pop
inc
cmp
jne
push
push
push
push
push
call
jo
jne
add
lret
les
add
fiadds
add
sbbb
add
jle
fiaddl
add
add
loope
xchg
pop
fmul
imul
add
add
fldl
sub
pop
lea
mov
push
shl
inc
pop
test
je
mov
push
push
push
push
push
push
push
push
call
addl
movsl
add
addb
ret
push
add
add
out
add
push
clc
mov
xchg
add
cli
sub
pop
add
cmp
jne
push
inc
pop
mov
test
je
push
ror
not
lea
ror
pop
mov
push
xor
lea
pop
add
push
inc
pop
cmp
je
push
rol
xor
pop
jmp
push
push
push
call
mov
add
cmpsb
add
leave
add
je
in
filds
add
outsl
mov
hlt
in
add
rorb
pop
leave
mov
rolb
pop
loope
add
in
hlt
lcall
rclb
ret
sbb
js
push
lea
push
push
push
lea
push
call
lret
add
push
test
jb
xlat
mov
add
ljmp
add
lds
mov
imul
test
mov
push
add
jecxz
add
std
xlat
add
mov
pop
pop
push
xor
shr
pop
pop
push
inc
pop
pop
leave
push
push
lea
push
push
push
push
push
push
push
call
xchg
pop
add
mov
add
lds
add
add
add
lea
add
add
jp
add
add
nop
cmc
add
enter
add
leave
lret
mov
jae
cwtl
add
add
leave
add
pop
add
ficomps
add
adc
pop
ret
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
test
int
rolb
fsubs
lea
out
mov
mov
add
outsl
add
add
push
testl
in
fdivr
lcall
inc
call
loopne
xor
pop
pop
push
push
push
call
js
jmp
add
rcll
xchg
add
push
add
pop
rolb
mov
mov
js
add
add
add
add
add
lds
jo
fstpt
scas
scas
add
add
enter
lcall
push
lea
push
lea
push
lea
push
lea
push
push
push
call
insb
cmc
add
pop
add
cmc
fbstp
add
imul
outsl
add
push
shr
add
mov
add
push
mov
add
mov
add
add
add
add
add
add
add
cmpsb
arpl
in
in
lcall
push
dec
add
rol
add
pop
pop
leave
push
shl
shl
add
pop
ret
push
lea
pop
mov
push
push
push
call
hlt
mov
add
scas
mov
je
lea
mov
add
jno
clc
add
add
add
popf
add
stos
push
subb
xchg
insb
mov
add
add
add
add
pop
mov
mov
jecxz
movsb
add
icebp
movb
jecxz
sub
pop
pop
push
shr
shr
pop
pop
push
dec
add
pop
pop
pop
push
ror
add
add
pop
leave
push
shr
shr
pop
ret
lret
sbb
mov
scas
lret
int
scas
lret
int
scas
outsb
out
mov
scas
sub
mov
scas
mov
add
add
xor
call
sbb
pop
stos
cld
add
jae
loope
subb
and
jmp
mov
add
push
pop
pusha
add
inc
in
mov
adc
std
fcmovu
xlat
xchg
ds
xchg
btc
je
add
call
es
xor
sub
call
shr
add
pushl
push
dec
xor
incl
dec
int3
cli
out
push
in
pop
cmp
sahf
jo
mov
fwait
sub
xchg
jmp
mov
mov
adc
fbstp
call
cwtl
push
jnp
loopne
adc
xchg
push
cmp
arpl
adcl
in
push
aam
xchg
jg
jecxz
dec
repz
outsb
sbb
jecxz
scas
push
outsl
and
aad
or
mov
icebp
sarl
out
adc
rclb
jg
lret
pop
int
fnstsw
xchg
cs
sbb
fxch
pand
cmp
inc
je
jecxz
pop
jne
pop
inc
add
divb
push
jp
scas
cmpsb
cmp
js
sub
or
popf
in
mov
scas
cmp
int
mov
sbb
xor
xor
je
hlt
inc
xchg
test
pop
into
and
ficomps
fistpl
js
xor
test
cmp
pop
mov
imul
adcl
popa
mov
dec
mov
cmc
cs
pop
and
mov
and
out
outsb
dec
jle
xchg
pop
sbb
scas
mov
mov
sbb
mov
cmp
shrl
pop
out
cmpb
dec
dec
inc
in
test
outsl
ja
out
sub
jmp
lods
add
inc
leave
inc
push
repnz
jl
imul
repnz
ss
les
lahf
sbb
idivl
xor
adc
cmp
push
fnsave
mov
inc
pop
mov
or
mov
inc
mov
out
lods
jae
andnps
inc
iret
rorl
xorb
mov
pop
decb
cmpsb
push
jb
jg
xor
fucomp
dec
sbb
pop
and
dec
xlat
mov
iret
lods
incb
outsl
or
xlat
ret
push
lods
into
mov
popf
es
unpckhps
aad
push
push
addr16
imul
mov
arpl
in
lret
cs
aaa
xor
xchg
xchg
push
add
lahf
dec
jo
clc
dec
and
dec
adc
cmc
inc
mov
jae
push
shrl
repz
lret
or
pop
add
pushf
sbb
scas
push
ret
data16
fnstenv
imul
xor
sti
roll
push
rcrb
push
push
pop
dec
fcoml
mov
mov
movsl
loopne
lds
scas
cmp
cmp
ja
pop
int
jge
dec
adc
jne
call
push
pop
mov
loopne
gs
pop
mov
std
sub
jnp
sub
js
mov
aam
divb
cli
or
pop
popf
inc
push
xlat
jae
pop
dec
dec
outsb
push
mov
jge
fwait
outsb
push
ja
mov
cltd
out
pop
outsb
insl
imul
lea
push
lret
loope
inc
cmp
addr16
flds
pop
add
sub
shll
out
ret
mov
ds
dec
mov
in
lea
cwtl
xchg
lcall
inc
icebp
mov
cld
adc
out
iret
push
stc
add
scas
and
mov
dec
loopne
sub
movlps
add
push
jmp
call
ret
in
sub
push
repz
adc
gs
leave
testb
push
lret
jl
mov
add
and
push
jle
imul
test
lods
and
fildll
adc
xor
and
fidivrs
mov
xor
jg
mov
pop
push
inc
incl
ds
and
mov
push
movb
insb
inc
and
loopne
or
sbb
mov
push
lds
les
cmp
dec
xor
pop
loopne
mov
aaa
xchg
or
inc
jl
add
push
mov
xchg
pushl
lods
adc
std
mov
mov
outsb
stc
push
dec
jns
lods
test
fists
push
adc
adc
loope
sarl
clc
pop
pusha
dec
jle
push
adc
push
pop
or
adc
lods
aam
xor
and
cld
in
lahf
sub
testl
pop
sbb
mov
cmp
cmpsl
fisubs
pusha
aas
rorb
ds
xchg
aam
js
je
nop
xchg
imul
mov
mov
dec
aaa
mov
mov
sbb
and
sbb
mov
sbb
scas
loop
popa
movntq
mov
das
fildll
or
cmp
cmp
sbb
cli
pop
out
push
mov
sarl
fiadds
loop
fdiv
mov
ret
mov
mov
imul
neg
rclb
cmpsb
xchg
xor
fimull
js
mov
rorb
dec
aad
clc
in
dec
push
or
cmp
mov
mov
and
mov
cmp
mov
mulb
addb
mov
mov
in
in
sbb
dec
adc
addb
icebp
nop
pop
pop
cli
mov
movsb
mov
jmp
in
shrl
jns
and
pop
mov
inc
cmp
adc
and
add
or
rol
sbb
test
bound
loope
xchg
pop
sub
push
test
cmpsb
mov
mov
jle
fidivrl
fwait
lret
xor
ja
orl
stos
cmc
and
inc
xorps
adc
adc
mov
mov
insl
sarb
inc
cmpsl
dec
sti
cli
icebp
add
add
cmp
mov
sub
inc
inc
or
loop
movsl
mov
jmp
iret
mov
push
nop
pop
dec
loope
icebp
jae
outsl
in
jnp
scas
nop
mov
mov
hlt
out
into
mov
clc
test
aam
pop
jae
or
or
fldenv
sub
push
jecxz
inc
and
notl
mov
fnsave
loope
sbb
push
xor
jge
sub
sbb
rclb
inc
sbb
push
jmp
fs
negb
ss
cmpl
xor
mov
dec
pop
jae
daa
sbb
xchg
ljmp
sti
dec
xchg
xor
mov
adcl
lret
add
fisubrs
loope
jne
xchg
iret
ret
push
push
ficompl
dec
stc
nop
jl
mov
les
inc
xchg
xor
leave
cltd
mov
arpl
push
and
xchg
imul
xor
shrl
out
inc
cld
lods
scas
jbe
adc
insb
cmp
mov
popf
and
cwtl
xchg
loopne
aad
sbb
dec
dec
jmp
mov
and
and
jbe
ja
out
test
in
shlb
inc
rolb
dec
push
popl
jne
mov
int3
pop
sub
addb
or
mov
xchg
lods
add
fstl
in
inc
mov
subl
sahf
insl
pop
push
call
ljmp
cwtl
pop
xchg
jle
loop
imul
sub
push
ret
sbb
daa
push
pop
cmp
sbb
mov
push
jnp
pop
mov
cltd
pop
inc
pop
jge
dec
jl
push
xor
int3
mov
sub
push
jns
mov
les
lods
add
jmp
stc
inc
or
dec
stos
xor
mov
push
pop
icebp
dec
shrb
cmp
test
add
mov
sbb
je
pop
inc
pop
mov
sub
mov
mov
movsb
imul
xorl
shll
rolb
decb
mov
ud1
sub
mov
aaa
ljmp
mov
inc
das
hlt
popa
scas
cs
xor
push
cmp
sbb
mov
inc
xor
ffreep
jb
inc
jbe
imul
fs
frstor
sub
sbb
pop
test
mov
cmpsl
movsl
cmp
mov
out
adc
es
xor
pop
cmpl
lret
cmp
sub
cmp
adc
add
fdivs
mov
mov
or
in
pop
pop
mov
jo
sub
icebp
xchg
adc
shlb
out
scas
into
daa
stos
and
pop
jnp
fs
mov
mov
es
mov
aas
sub
mov
lods
add
jle
ljmp
jmp
adc
or
stos
popf
lahf
in
insl
add
jp
popa
lock
cs
jae
add
cmp
testb
mov
jne
jg
out
xchg
aas
push
aad
leave
adc
dec
or
jg
movsb
in
jle
and
push
dec
sbb
xchg
fiaddl
mov
dec
mov
sub
pop
ss
cmpsl
aas
jmp
xor
fisttpl
inc
insl
pop
pop
into
inc
jle
loop
adc
mov
push
or
notb
add
outsb
push
push
loope
jmp
loope
xor
jns
ja
adc
lea
inc
add
divb
dec
aas
nop
ret
xchg
mov
cmpsl
jb
ja
sbb
rorl
mov
dec
in
imul
and
repz
rorl
shrb
pop
insb
mov
and
push
sahf
cmp
scas
out
and
inc
rorl
mov
das
and
scas
hlt
mov
or
xor
xor
ffreep
insl
ja
and
dec
movsb
aaa
outsb
aam
adc
lahf
aad
pop
arpl
or
mov
sar
add
stos
ljmp
xor
push
int3
std
lcall
movsb
loope
movsl
shrb
cmp
pop
pop
stc
movsl
movsb
iret
sti
mov
pushf
loopne,pt
cmp
loope
popf
shll
jmp
imul
sbb
pop
data16
cmp
test
stos
dec
pop
push
jmp
cmc
cmp
inc
and
mov
sbb
and
lret
fwait
cmc
sub
ss
aaa
sub
mov
sbb
movb
icebp
nop
in
pop
ffree
lcall
sahf
mov
dec
jle
xor
jmp
jae
add
push
in
call
xchg
push
in
sbb
dec
dec
orl
imul
cmp
movsl
inc
pop
loopne
mov
dec
or
xlat
ret
mov
dec
adc
sbb
sub
adc
adc
add
out
cmp
in
sub
lods
push
out
mov
cli
and
insb
shl
cli
mov
ja
loop
lahf
mov
sbb
sbb
adc
int
sbb
dec
xor
imul
stos
std
mov
std
cmp
cwtl
addr16
mov
movsl
jmp
js
loope
lods
xchg
mov
out
inc
mov
mov
mov
adc
rcrb
adc
ljmp
mov
sahf
cmc
in
outsl
fisttpll
icebp
das
inc
add
lods
dec
lahf
push
loop
lret
sub
add
loop
lcall
stos
push
xlat
jbe
cmpsb
insl
cmpsb
xor
icebp
adc
mov
mov
insb
pop
mov
in
mov
cltd
stos
pop
fs
stos
and
sbb
cmp
decl
imul
pop
dec
fs
arpl
sbb
xchg
stos
pop
subl
js
test
mov
or
jns
sub
ret
sub
in
sbb
insl
je
mov
mov
inc
pop
push
push
outsb
imulb
push
jno
aaa
in
sub
dec
xor
imul
xchg
lret
leave
and
jl
add
add
sub
icebp
lret
mov
outsl
sbb
js
int
add
xor
mov
lea
and
dec
add
add
shl
jbe
leave
daa
ss
sub
push
sub
adc
jb
fsubrs
or
jb
add
pop
push
or
loop
mov
out
imul
imul
dec
stc
les
jmp
inc
shll
fsubp
jo
add
mov
inc
xchg
ret
popa
or
scas
jmp
mov
adc
xlat
data16
or
mov
mov
scas
and
mov
int3
sub
test
sub
imul
xor
roll
adc
ja
inc
push
loope
out
or
push
or
out
in
bound
mov
lret
aam
push
shrl
sarl
repz
mov
sub
or
jecxz
jg
scas
les
or
test
sub
insb
es
inc
jle
cmp
ljmp
xchg
fstpt
push
xchg
adc
inc
ja
into
insb
pop
nop
mov
imul
outsl
lret
mov
out
outsb
mov
push
xchg
push
adc
bnd
test
call
mov
test
dec
stos
xchg
rcrl
fs
jl
lods
cmp
mov
outsl
loop
stos
repz
adc
mov
pop
call
rcll
mov
call
outsb
fwait
push
scas
mov
pop
pushf
lock
mov
cwtl
add
and
inc
cmc
mov
scas
xor
and
or
mov
les
mov
sarl
xchg
pusha
inc
xor
and
lret
jae
jge
loop
lahf
jp
add
inc
dec
jns
scas
cmp
cmp
pop
dec
mov
jle
pop
push
gs
cli
rclb
jmp
lret
test
in
inc
mov
adc
leave
paddw
and
push
mov
sub
repz
mov
push
fsubrl
jbe
mov
scas
lods
xchg
cmp
data16
jnp
dec
orl
arpl
cmp
pop
sub
inc
pusha
cmc
add
mov
ror
or
or
xchg
in
push
pop
cmp
mov
dec
adc
pop
sub
jl
sbb
mov
and
or
arpl
mov
mov
lock
add
movb
and
arpl
dec
pop
inc
popa
mov
imul
test
or
pop
inc
adc
rcrb
je
enter
or
stc
ss
pushf
pop
bound
imul
jge
test
idivb
inc
jle
xchg
lods
push
mov
loopne
cmp
test
push
movsl
push
add
sti
nop
test
push
push
fnstenv
xlat
movsb
mov
icebp
jl
mov
mov
in
xlat
fidivrl
jg
filds
cmpsb
shll
sbb
test
jp
xorb
mov
adc
leave
xchg
cmpsl
jp
cmc
push
test
or
or
add
cld
sbb
movsl
jp
sbb
or
orl
sti
push
dec
lods
fwait
out
jl
sub
and
daa
test
repz
sbb
ret
addr16
and
pop
aam
add
cmc
test
movsl
or
ucomiss
mov
mov
and
test
daa
jne
movl
in
cmp
and
icebp
dec
imul
in
xor
addb
enter
sub
imul
push
mov
sub
xor
in
gs
push
or
mov
jge
push
insl
bound
jp
test
xchg
sbb
cmp
fwait
sbb
jbe
jo
mov
movsl
push
or
mov
mov
mov
pop
scas
hlt
sbb
cmpsb
ja
adc
inc
imul
sub
in
bound
mov
jns
dec
fstpt
cli
pop
push
iret
mov
inc
and
add
aam
dec
and
cmp
pop
lcall
inc
lds
jno
inc
nop
sahf
popa
mov
dec
sub
adc
test
or
inc
bound
pop
jnp
in
imul
xchg
cs
cmp
rcrl
mov
cwtl
rclb
push
data16
fcomip
js
cld
pushf
or
repnz
jmp
inc
inc
stos
js
cmpsl
jge
insb
dec
and
fimull
test
sbb
pop
jle
out
push
fbstp
in
flds
cmpsl
jno
xor
sbb
popf
notl
inc
fsts
cmp
cwtl
push
mov
out
out
dec
sbb
adc
jnp
nop
shlb
pop
imul
sbb
dec
or
leave
push
add
adc
aaa
int
cmc
mov
cmp
hlt
fidivrl
adc
lods
outsb
scas
pop
mov
dec
push
and
adcb
inc
jge
and
mov
fidivrs
sub
sti
or
enter
ficoml
cmp
jmp
fnstenv
shll
add
mov
add
xchg
subb
inc
bound
adc
int3
mov
arpl
jne
lahf
cltd
push
dec
aas
sub
outsb
imul
fstp
jmp
lods
fsubs
lods
mov
in
jno
loop
xchg
cmc
push
jnp
mov
add
ss
sbb
xchg
xchg
dec
sub
push
or
hlt
mov
fs
stos
rcll
mov
mov
inc
and
leave
push
mov
or
cmc
push
popf
ror
add
in
mov
frstor
sbb
test
jg
inc
les
fcmovnu
add
xor
mov
inc
jne
ljmp
mov
leave
sub
xchg
jae
adc
jb
arpl
sbb
pusha
lcall
mov
inc
test
inc
or
loope
xlat
sbb
pop
pushf
hlt
mov
dec
lods
cwtl
mov
data16
jmp
or
fwait
cmpsb
into
insb
pop
ja
or
jle
hlt
mov
fiadds
dec
lds
cmp
loopne
bound
out
xlat
bound
jne
cmp
aad
jle
popf
insb
xchg
cmpsl
in
push
scas
and
or
pop
and
mov
sbb
mov
mov
imul
jmp
out
or
out
jge
popa
mov
mov
and
std
fsubs
stos
cmpsl
gs
dec
sbb
jns
mov
pop
mov
xor
pop
jecxz
mov
or
outsl
ret
push
sub
push
push
and
rclb
aas
add
inc
fldcw
daa
loope
mov
repnz
add
or
xchg
dec
push
push
into
fists
sub
or
stos
sarl
jecxz
movsl
mov
cmpsl
dec
ds
repnz
out
sbb
rcll
mov
movsb
jb
or
or
call
jle
cmp
and
add
add
jno,pt
les
and
lahf
cmc
es
das
mov
bound
filds
xor
pop
insl
and
pop
std
test
test
xchg
hlt
scas
push
adc
rcrl
mov
insb
adc
jo
mov
sbb
popa
lods
aam
imul
sub
dec
lret
sbb
nop
arpl
mov
mov
jo
lcall
or
jae
sbb
ret
inc
add
xchg
mov
mov
and
lock
mov
lret
inc
enter
adc
mov
lds
lcall
sbb
add
cli
cmp
pop
in
lods
movsb
pop
sahf
xor
notl
minps
iret
push
pop
or
mov
popf
shll
xor
out
add
push
jae
lea
ja
aad
mov
inc
loope
dec
sbb
fdivrs
adc
fcompl
je
jne
sbb
int3
xchg
add
scas
mov
jo
out
cmc
mov
jle
in
loopne
shrl
push
out
mov
xor
adc
push
fildl
and
inc
iret
adc
imul
or
lahf
add
mov
addb
jae
das
fnsave
inc
jl
not
jmp
adc
dec
xor
imul
mov
push
mov
mov
imul
push
outsl
leave
clc
repz
mov
pop
mov
mov
pop
rorl
mov
pop
inc
pusha
add
popa
jne
dec
movsl
hlt
lods
sbb
xor
in
dec
mov
out
inc
cmp
add
test
sahf
dec
adc
std
repnz
jg
xor
out
pop
pop
sbb
je
or
sub
push
rorb
add
dec
shll
cltd
adc
lds
inc
sub
repnz
dec
arpl
stc
fidivl
xlat
ret
inc
subl
adc
fidivl
jmp
push
ja
out
rcrb
dec
pop
add
adc
jae
and
sub
pop
imul
inc
push
dec
stc
sbb
cmpsl
inc
in
mov
insb
addb
push
mov
mov
test
adc
mov
cltd
cmpsl
cli
inc
test
sbb
push
je
or
iret
fldt
vmulsd
jp
icebp
mov
push
popa
jae
leave
push
scas
lock
dec
shll
inc
jbe
hlt
addr16
xchg
cwtl
mov
dec
dec
adc
ret
xor
jle
das
xchg
push
insb
and
sbb
lods
orl
adc
dec
fidivrl
decl
pusha
test
fisttps
sbb
ss
sub
sbb
loopne
imul
es
sbb
or
xor
mov
mov
lods
out
stos
fwait
mov
outsl
adc
outsl
mov
das
jmp
add
push
int
jae
les
mov
xor
insb
or
xchg
and
push
pop
mov
mov
jmp
pushf
inc
mov
sbb
mov
cs
jb
sti
in
call
inc
dec
out
jae
and
ficoms
int3
inc
rcl
sbbb
push
popa
pop
mov
adc
push
lds
jp
ja
jmp
add
dec
fdivrs
das
push
mov
and
mov
loop
and
jbe
aam
dec
into
push
shl
out
cs
lock
xor
pop
mov
imul
shl
cli
dec
dec
dec
mov
or
test
je
mov
and
loop
pop
mov
psrld
inc
xor
push
xchg
addl
stos
sub
jnp
repnz
jge
das
push
dec
pop
dec
dec
mov
dec
cmp
mov
or
in
ss
das
addl
inc
aam
int3
mov
loope
fldenv
mov
inc
jl
lock
jne
das
jl
push
or
xchg
and
dec
mov
mov
jns
aad
xchg
imul
xchg
xorl
xchg
test
aam
inc
push
aas
xchg
mov
inc
lods
cmp
ja
pusha
sub
jo
sar
aaa
ja
orb
or
outsl
xorl
sub
inc
jae
inc
add
pop
jbe
out
mov
jne
mov
daa
mov
cmp
xor
enter
shlb
shll
fwait
je
dec
jae
jb
std
adc
rcrl
fmull
xor
notl
movsl
leave
es
into
roll
dec
mov
push
dec
into
rcll
int
xor
int3
jne
not
xchg
inc
dec
popa
daa
push
bound
clc
xchg
push
push
cwtl
sbb
loope
scas
enter
fs
ljmp
daa
test
jo
dec
outsb
fidivrl
fwait
adc
and
inc
stc
mov
in
mov
push
leave
shlb
sub
sub
dec
fmuls
dec
es
fwait
movsb
dec
test
fisubrl
jp
and
xchg
test
push
dec
mov
shlb
hlt
inc
into
pop
dec
mov
cmp
dec
aas
adc
cmp
xchg
add
mov
loopne
or
loop
mov
pop
cmp
mov
xchg
loope
out
push
aas
mov
inc
sbbl
mov
jle
popa
push
cmp
xor
lret
test
ret
mov
mov
xchg
lahf
test
cmc
mov
jne
out
sbb
sahf
and
jmp
popf
inc
xchg
ja
iret
adc
cli
bound
cmp
adc
adc
xor
cmp
pop
inc
shlb
aad
fsubl
sbb
scas
xlat
xchg
dec
xor
push
neg
mov
jb
in
rcl
test
add
fsubrs
inc
adc
or
sub
leave
imul
or
or
dec
jp
push
add
out
fldt
fimull
pop
das
test
dec
pop
test
pop
jg
andb
cmp
iret
int3
insl
into
stos
cmp
mull
inc
and
adc
in
xor
push
xchg
addb
xorb
sbbl
loopne
cmp
int
lea
testl
adc
jecxz
mov
xor
jl
inc
jg
cmp
call
call
int
add
lret
xor
jb
mov
dec
jg
mov
jg
push
imul
or
pop
rorl
int3
iret
repz
outsb
out
fidivs
nop
scas
mov
aam
ss
or
addr16
addl
clc
add
je
test
ja
cmp
aam
or
push
push
arpl
mov
xchg
pop
jecxz
fstpt
loop
in
call
scas
jmp
ljmp
ja
dec
js
push
mov
in
stos
imul
lret
fabs
mov
jg
cmp
xchg
ret
scas
xchg
sti
xor
int3
jge
cmc
arpl
sub
lods
cwtl
dec
add
sub
cli
adc
dec
and
imul
xchg
repz
inc
in
xchg
push
xor
mov
insb
mov
shrb
das
sbb
scas
or
cmc
repnz
in
rcl
jb
inc
xor
dec
jne
fwait
popf
ja
fmull
sbbb
sub
inc
pop
inc
pop
fadd
adc
jb
push
gs
jb
gs
or
mov
or
push
push
fisubl
fnstsw
hlt
xor
data16
jo
test
inc
jae
dec
fldt
sub
add
daa
lret
leave
mov
xor
loope
push
mov
iret
ss
outsl
iret
loope
pop
mov
stos
stc
fmuls
out
jae
jbe
cmc
xchg
xor
loop
and
dec
cmc
jnp
sahf
scas
and
aas
or
jmp
mov
outsb
lea
cmpb
sahf
xchg
xor
movsl
push
aad
dec
jp
mov
push
xchg
sahf
push
pusha
into
and
cmpsb
xchg
inc
xchg
cmp
mov
and
sub
push
test
leave
mov
jge
push
sub
int
movsb
cmp
into
push
xchg
aam
mov
movsl
mov
xchg
movl
in
and
xor
sbb
xchg
jl
call
mov
mov
xlat
pop
cmpsl
daa
dec
cmp
orb
clc
nop
std
adc
mov
push
dec
mov
lock
mov
push
lock
xorl
enter
push
fcompl
or
pop
sbb
dec
fstpl
imul
movsl
jae
cmpb
xchg
pcmpgtd
sbb
arpl
xchg
add
inc
lods
xchg
xchg
xor
scas
sub
pop
cmp
aaa
mov
lretw
jo
out
sbb
orb
push
push
adc
imul
iret
lahf
pop
fisubrs
shl
rcrl
dec
mov
mov
test
inc
subl
out
test
dec
es
and
sub
rcr
push
dec
lahf
into
mov
sarl
repz
dec
xlat
add
leave
cmp
and
mov
repnz
push
or
pop
inc
cmp
aam
sub
lods
sbb
out
xor
jecxz
repnz
stc
in
fstpl
enter
mov
pop
inc
add
pushl
sub
or
dec
dec
negb
cmpsb
mov
insb
push
jp
shlb
arpl
mov
pop
popa
pop
xchg
in
jo
inc
sbb
cmp
faddl
loope
jns
dec
fs
xor
mov
dec
test
lret
ficomps
data16
lcall
mov
mov
test
shrl
arpl
out
push
loopne
or
mov
xor
pop
dec
inc
mov
cmp
add
ret
pusha
pop
cmp
popf
xchg
jmp
leave
xchg
cmp
popf
bound
fst
sub
pop
bound
lret
or
popf
aam
int
xor
fstl
rol
xchg
es
scas
jne
xchg
pop
dec
mov
pop
roll
pop
jl
push
insb
inc
mov
mov
dec
fwait
jl
mov
and
cmpsb
cmpsl
sub
xor
fwait
jmp
into
sub
adc
push
xchg
xchg
lods
cmp
stos
inc
movsb
push
xor
jae
aaa
inc
js
jne
mov
into
dec
stos
add
lods
divl
loop
sbb
ja
pusha
lret
fcmovnu
cmc
or
cli
fistps
aas
loope
fldl
ret
in
sti
sarb
push
iret
insl
test
movsl
xchg
test
or
leave
sub
hlt
enter
inc
xchg
ja
cmp
stos
add
daa
and
cmc
scas
xor
pusha
xchg
inc
mov
pop
loope
and
jnp
jns
outsb
and
call
test
fcompl
test
add
xor
pop
mov
movb
and
ret
mov
lds
je
in
imul
clc
sub
sub
loopne
jecxz
xchg
or
inc
test
pushf
rolb
lahf
jl
pop
bound
lret
jmp
inc
imul
mov
in
sub
mov
sahf
sub
repnz
sub
inc
test
nop
inc
mov
jl
sub
test
inc
in
nop
mov
sbb
or
cmp
repz
dec
lcall
rcrb
insb
mov
loopne
cltd
mov
mov
cmpb
pusha
or
cwtl
sub
pop
neg
adc
mov
repz
repnz
xchg
sbbb
sub
cmpsl
jmp
inc
mov
sub
ljmp
outsl
xchg
mov
mov
aaa
mov
dec
adcl
mov
dec
jle
pop
fs
sar
loopne
sbb
lock
or
mov
add
repnz
mov
incb
lock
lods
lods
xor
jg
jbe
push
xchg
xor
jl
stos
mov
dec
cmpsl
retw
dec
out
xorl
ficoml
fwait
cmp
ljmp
fs
jno
push
mov
inc
scas
mov
cwtl
stos
push
in
iret
es
rclb
dec
or
sub
repnz
or
inc
testb
mov
lret
fnstcw
lods
xor
rorl
icebp
mov
in
pop
adc
xor
jmp
loopne
lock
xchg
pop
dec
pop
aas
insb
test
popf
adc
addr16
and
popf
lret
loopne
lret
arpl
outsl
inc
enter
rorb
jg
ror
cs
dec
cli
shrb
ret
xchg
push
mov
outsl
divb
stos
lea
lods
cmp
inc
outsl
daa
filds
cmovbe
sbb
inc
out
cmp
pop
xchg
push
loop
sbb
lret
out
jno
mov
cwtl
cmp
mov
jo
and
aam
push
push
cmp
cwtl
out
test
mov
mov
adc
loop
loop
or
push
xchg
xor
xchg
and
leave
mov
lcall
sub
cli
imul
push
decb
mov
add
mul
loop
rolb
stc
imulb
mov
jge
push
inc
sbb
test
jecxz
adc
or
mov
push
js
out
cmp
jle
addb
int
insl
insl
pop
outsl
lods
filds
push
shrl
push
push
test
fcomps
pop
test
adcl
mov
inc
mov
fldl
and
testb
lret
fistpll
sbbl
jae
xchg
iret
push
jl
sub
inc
test
movsb
inc
das
xor
adc
dec
mov
loop
std
stos
inc
data16
negl
arpl
aad
jp
addr16
fst
push
roll
icebp
jl
fcompl
jp
enter
jp
sub
xchg
jp
aaa
rol
cmp
insb
jle
aas
jle
mov
mov
mov
jge
cmc
adc
mov
subl
call
inc
sub
push
pop
push
push
cld
jo
adc
cld
or
in
xchg
lods
xlat
stc
jp
cmp
mov
lock
sub
xchg
cmp
pop
enter
call
add
and
jle
fmuls
or
fcompl
test
lcall
gs
pop
aaa
in
pop
jae
popf
leave
add
fistps
xor
and
out
jge
ret
ds
bound
rorl
dec
mov
loopne
test
dec
inc
fisubs
adc
cmp
fistl
sub
lods
push
mov
lea
jne
int
cmp
mov
sarb
push
test
push
jne
inc
fimuls
dec
lret
test
add
jp
xchg
cmc
xor
js
pop
mov
cs
aaa
jge
sub
jg
xchg
and
jae
fstpl
shll
ljmp
mov
movsl
inc
stos
sub
mov
dec
dec
and
push
daa
mov
pop
outsl
aaa
je
cltd
enter
xchg
push
xchg
xor
inc
int3
hlt
sub
and
or
sub
sti
inc
popa
jp
pusha
dec
pop
sub
or
or
incl
test
lret
test
sbb
enter
cmp
add
out
mov
sbb
mov
xlat
pop
sbb
add
fwait
sbb
inc
mov
in
jo
insl
je
ss
cmpsb
jge
jg
call
aaa
sbb
fs
inc
jp
jno
leave
icebp
shl
lock
and
shlb
ret
daa
shl
fsubs
push
cmp
jecxz
lds
push
mov
je
sbb
nop
es
cmpsl
shll
loope
jecxz
shll
dec
cmp
filds
dec
inc
pop
cmpsb
sti
jns
adc
sahf
jp
les
imul
cmpsl
dec
imul
jbe
js
dec
mov
imulb
push
fwait
dec
xor
les
imul
cmp
cmp
sbb
loopne
sub
mov
addr16
mov
fdivs
add
enter
inc
aas
jge
shrb
push
xor
inc
jno
cmp
ss
shlb
or
xchg
pop
movl
aaa
mov
cmp
push
push
adc
cmpsb
mov
mov
mov
pop
addr16
sub
shrb
mov
iret
jg
rorb
fisttpll
cmp
add
iret
insl
xchg
jmp
popa
inc
adc
rorl
into
jp
hlt
mov
out
push
repz
jns
aas
addr16
test
orb
mov
jp
pop
dec
cmpsl
ror
sbb
sti
icebp
aam
leave
jae
fcoms
mov
adc
add
mov
inc
pop
mov
sbb
mov
xor
cmc
popf
push
sbbl
pop
notb
pushl
jb
cmp
or
adc
jne
arpl
pop
js
and
jne
lock
movsb
nop
cltd
dec
cld
sbb
and
mov
sub
test
adc
and
call
sbb
dec
adc
nop
dec
lods
mov
or
and
jecxz
hlt
mov
test
sub
lret
sahf
and
fldt
pusha
iret
or
mov
pop
cmp
xchg
popf
ds
pop
daa
ljmp
pop
in
adc
ret
jae
out
mov
dec
mov
hlt
insl
mov
mov
mov
mov
out
push
scas
clc
mov
test
or
pop
ljmp
xchg
xchg
dec
xchg
mov
inc
mov
insl
or
aad
pop
std
mov
add
mov
xor
int
push
sbb
aad
test
mov
push
paddw
or
sahf
dec
sarb
push
add
xchg
test
bound
push
cld
xchg
das
pusha
jge
daa
push
popf
inc
inc
cld
shlb
inc
jmp
arpl
mov
adc
inc
add
pushf
dec
sub
icebp
testb
sbb
pop
mov
dec
adc
std
sbb
jno
jge
pop
xchg
dec
cs
call
inc
and
fdivl
je
lods
aas
and
xlat
mov
push
insb
push
mov
das
ljmp
mov
incb
add
jbe
push
cmp
clc
lods
pop
test
sbbb
cli
adc
xchg
xor
or
sti
jg
outsl
out
lods
add
outsb
movsb
test
test
jecxz
mov
pop
fwait
mov
sahf
xchg
cmp
cld
adc
fimull
outsb
loopne
addr16
outsl
lods
fildl
rolb
pop
cmp
jbe
in
shl
in
cwtl
cmpsb
jp
jg
je
jp
test
iret
sbb
nop
aaa
and
loope
inc
cwtl
shll
xor
jg
popf
mov
push
test
mov
push
pop
inc
mov
das
stc
inc
pop
push
test
rorb
push
push
xor
add
nop
pushl
mov
xchg
enter
lahf
push
push
fisubl
mov
cs
lods
into
outsl
fisubl
sbb
aad
fwait
xrelease
mov
sub
std
adc
cli
and
je
out
xchg
push
scas
fdivs
stos
mov
test
pop
mov
shrl
mov
jae,pn
dec
and
aas
in
bound
cmp
pop
addb
mov
lea
das
out
and
sbb
fldl
push
repnz
pop
cmp
mov
adc
pop
sbb
xor
mov
daa
and
lret
sbb
and
mov
push
sbb
loop
cmpb
push
cltd
mov
sub
and
out
fucomip
mov
push
sbb
fistpll
push
adc
sub
or
pop
mov
jno
mov
cmpb
test
add
lods
movsb
dec
jl
js
jns
sbb
fs
add
inc
adc
jnp
pop
lcall
push
xor
lret
out
ja
xchg
jecxz
stos
into
push
enter
and
out
add
inc
cmp
pop
in
into
and
ret
leave
add
mov
jg
xchg
aas
mov
adc
mov
and
xorl
xor
or
add
and
mov
jbe
pop
popf
sub
inc
push
xchg
std
push
sub
xor
dec
dec
rcl
out
lahf
or
dec
push
jle
mov
xor
and
pop
xor
jg
inc
push
stos
sbb
sahf
idiv
in
sbb
loopne,pt
adc
fsubp
fs
jnp
sbbb
leave
aas
push
stos
cwtl
push
add
daa
decl
mov
add
test
pop
pop
push
std
aad
int3
mov
daa
test
xchg
pop
arpl
inc
jmp
test
and
jecxz
movsl
cmpsl
add
das
dec
sub
lahf
cmc
pop
add
jmp
inc
mov
aam
leave
jg
jno
push
jno,pn
js
mov
movzbl
sbb
xor
jo
imul
and
data16
push
adc
jne
jo
jno
xchg
jmp
arpl
cmpl
mov
icebp
ds
test
pop
into
scas
inc
inc
jp
gs
out
imul
xchg
inc
fdivrp
ficomps
xlat
ja
testb
jle
loope
js
das
je
es
sub
mov
mov
js
movsb
mov
out
test
adc
out
cmp
dec
inc
sbb
scas
fcomp
aas
sbb
insl
and
dec
test
jge
add
and
mov
dec
and
ja
and
out
int
xchg
lods
inc
or
xor
or
inc
je
aas
xchg
jle
bswap
xor
cmp
rcl
mov
fdivl
dec
ja
jl
and
sbb
rcrl
imul
stc
xchg
push
push
fisttpl
ljmp
sbbl
js
testb
cmp
roll
dec
xchg
push
push
dec
ds
stos
xor
das
jge
jno
pop
orb
shrd
mov
cmp
fdivs
sbbl
rol
sbb
aad
sbb
cmpsl
xlat
add
loop
mov
addr16
ret
add
jle
jno
jmp
add
or
push
addr16
add
fists
loopne
cmp
lahf
push
add
popf
inc
push
push
xor
push
and
lea
ss
add
loopne
pop
push
pop
aad
enter
sub
xchg
add
arpl
dec
test
add
pop
test
and
leave
lret
lea
add
lcall
push
pop
push
mov
loopne
addr16
inc
add
out
sti
and
inc
fmull
add
rorl
out
jns
ret
pushf
push
push
repnz
subb
jle
test
std
ret
fwait
loope
mov
jbe
scas
xchg
adc
cmp
mov
aaa
jmp
insl
aam
repz
push
xchg
fdivs
in
inc
xchg
test
cmpsb
xor
test
and
push
jp
clc
vmaxsd
lods
loopne
xlat
push
pop
inc
test
dec
in
ret
add
xchg
shl
nop
imul
cs
negb
xor
add
test
push
fistpl
mov
jb
cmpsb
mov
int
ret
dec
add
mov
inc
in
bnd
push
mov
outsl
xor
cs
adc
in
jns
rep
bound
xor
sub
sahf
jp
orl
ja
mov
jmp
mov
mov
cmpsb
push
jb
insb
xchg
jl
dec
cs
adc
ja
xor
inc
dec
dec
outsb
dec
and
repz
or
mov
push
sub
out
mov
in
in
cmpsl
xchg
lds
cmp
sub
out
xchg
dec
ljmp
adc
ret
push
jge
mov
jne
rcrl
adc
subb
and
stc
xchg
mov
movsb
int3
push
xor
movsl
jnp
mov
rorl
xchg
scas
xor
cltd
add
scas
js
ret
inc
ret
push
fs
call
jp
idivb
je
pop
jns
fwait
notb
jmp
data16
mov
mov
stos
repz
and
test
adc
and
jbe
mov
mov
in
jp
xchg
jne
xchg
clc
or
xchg
je
pop
and
mov
or
nop
ds
or
mov
adc
push
das
push
sbb
inc
mov
add
enter
iret
int
mov
call
xchg
mov
pop
dec
js
out
push
cwtl
stos
movsl
subb
pop
je
test
xlat
mov
nop
adc
iret
stos
dec
scas
out
lahf
add
shlb
cmp
pushf
pop
push
or
scas
ror
cmpsl
testb
xlat
lods
cmp
cmp
pop
movsb
jnp
inc
test
mov
xor
add
and
add
nop
psrlq
cmp
and
mov
arpl
or
shlb
xchg
jge
test
mov
inc
mov
nop
push
sub
mov
inc
aam
inc
mov
or
sub
bound
mov
pop
je
pop
and
xor
pusha
pop
js
sub
fcomp
jb
ljmp
jp
cmpsl
test
fwait
push
movsb
mov
arpl
data16
mov
pop
or
loope
mov
or
mov
jp
adc
jge
sbb
repnz
fists
push
pop
imul
mov
mov
orb
pop
push
ret
test
outsl
inc
test
rol
bound
inc
inc
aam
jmp
scas
movsl
or
das
shl
cmp
ret
cli
aas
or
adc
push
aam
push
mov
xchg
nop
and
incb
mov
jecxz
dec
mov
pop
mov
out
mov
scas
std
or
pop
add
mov
jo
shll
add
cmp
xchg
add
jecxz
push
bound
ret
mov
out
movsl
cmp
mov
outsl
jno
or
xorl
or
fs
inc
jno
dec
jns
test
inc
loope
mov
dec
std
mov
lahf
scas
xor
mov
sbb
push
inc
into
data16
push
or
stos
cmc
inc
inc
es
int
rorl
sbb
mov
xchg
mov
mov
push
lcall
je
testl
in
lcall
scas
xchg
jecxz
xchg
push
cmp
shlb
inc
mov
push
or
stos
fadds
jns
lahf
repz
repnz
dec
and
lods
rorl
data16
adcb
push
pusha
ret
push
pop
cmp
hlt
and
and
push
mov
xchg
sti
mov
out
scas
dec
testb
jb
add
add
and
iret
and
dec
mov
arpl
rorb
adc
cwtl
inc
pop
cld
repz
lahf
jge
mov
dec
xchg
xchg
sti
aam
test
sbb
sbb
enter
cmp
or
lcall
xorb
push
cli
sub
in
sbb
mov
sbb
sub
push
mov
mov
cmp
test
stos
in
mov
fstpl
xor
jg
xchg
and
mov
adc
lret
or
xor
mov
rorl
pushf
sub
movaps
mov
lahf
fisubl
push
pop
roll
xor
or
mov
push
mov
cld
and
add
cltd
xchg
loop
xchg
add
fidivrs
cmp
pop
sbb
sbb
inc
fcmovu
mov
out
push
or
add
xchg
mov
pop
add
gs
sbb
cwtl
jns
aaa
test
xor
mov
adc
in
jl
lret
dec
lods
jbe
out
cmpsb
test
fdivs
sub
fcmovb
cmp
mov
imul
scas
lcall
push
ficompl
cmp
popa
sbb
xchg
xchg
repnz
xorb
cmp
push
mov
outsl
pop
or
pop
les
inc
fisttpl
rclb
xor
push
add
js
mov
mov
adc
sbb
shl
push
mov
xchg
fsts
mov
inc
jg
xchg
popa
imulb
enter
jbe
mov
jo
mov
negb
andb
and
sahf
or
and
dec
push
push
mov
test
push
jnp
mov
data16
push
les
in
jnp
xchg
push
loop
data16
push
scas
cli
bound
icebp
jno
adc
mov
mov
fldenv
mov
aaa
pop
pop
stos
and
cmpl
pop
jae
ret
addr16
lret
or
daa
outsb
pop
xchg
sbbb
inc
and
nop
jg
jb
mov
in
fdivrs
inc
jmp
push
hlt
adc
xlat
add
cmp
pusha
and
lret
test
dec
lds
mov
rol
icebp
stc
inc
movsl
adc
pop
insl
leave
mov
ljmp
leavew
shrb
or
mov
inc
mov
pop
nop
and
dec
mov
or
push
out
pop
or
xor
daa
sarl
in
dec
cmp
enter
out
jnp
xchg
cwtl
lds
rclb
jns
cmp
movsb
loop
add
lods
pop
daa
rcrb
hlt
imul
sbb
addb
cmp
and
sub
mov
mov
push
pop
inc
pop
iret
fstpt
sub
pushf
movsb
out
loope
int3
ds
push
xchg
decb
lcall
ret
repnz
xor
sub
gs
fs
cmp
mov
pop
xchg
in
aam
out
rcrb
and
add
mov
xacquire
adc
add
in
idivl
out
scas
loopne
scas
push
pop
inc
out
xchg
or
mov
pop
lods
aam
mov
out
push
out
mov
fwait
cmp
jne
cmp
jecxz
in
push
cmp
cmpsl
rorb
pop
or
std
inc
into
sbb
push
sub
int
leave
cmpsl
xor
add
les
ljmp
xchg
dec
sub
jne
or
ds
insl
gs
push
add
xor
lods
clc
xor
cmpsl
ja
sarl
in
imulb
filds
mov
insl
mov
xor
repz
xor
mov
ja
xor
mov
mov
out
orl
sbb
lret
and
orb
and
mov
cltd
xchg
pushf
stc
addr16
sbbb
rclb
lret
xchg
rorb
add
or
adc
ja
mov
and
mov
mov
cltd
sub
add
mov
adc
push
push
insb
xor
adc
inc
and
sub
cmpsb
out
xor
mull
enter
xchg
orl
pop
push
push
and
shll
mov
mov
xor
inc
jmp
push
mov
xchg
jae
pop
arpl
loopne
cmpsb
jecxz
repnz
icebp
inc
int3
leave
imul
adc
xchg
fisubs
call
pop
push
ds
jnp
js
mov
mov
in
rcll
in
pop
mov
mov
into
sahf
mov
subb
push
push
mov
mov
adc
pop
push
dec
mov
lcall
adc
in
movsl
shlb
add
es
mov
mov
icebp
repnz
clc
or
cmp
jb
std
cli
xchg
int
pop
dec
xor
mov
xor
outsl
std
test
aam
ret
sub
pop
test
inc
ret
fidivl
xlat
fwait
lock
xchg
pop
cmp
int
imul
push
inc
xor
pop
inc
inc
xchg
mov
sbb
insb
flds
aaa
es
xchg
pop
ret
loope
loop
adc
cmp
add
xor
adc
xchg
loope
inc
je
push
dec
pop
test
inc
ja
adc
out
inc
mov
sub
in
xchg
sahf
push
int3
loopne
fstpt
or
sub
stos
inc
outsl
lods
pop
out
jge
test
mov
xchg
ret
scas
leave
pop
inc
nop
mov
imul
subl
sub
in
jp
sar
cs
pop
xlat
scas
cmp
icebp
dec
adc
cmpsl
sub
mov
xor
sbb
pop
add
mov
addr16
fisubrs
fnstenv
rcr
stos
inc
jbe
cld
aad
cld
xor
mov
pushf
pop
jecxz
idiv
in
lods
xlat
push
xor
inc
sbb
and
dec
outsl
movsl
cmc
jb
cmp
cwtl
insb
jp
pop
lcall
or
shrb
nop
lcall
jo
sub
jl
stc
in
or
nop
not
mov
int3
test
adc
js
sbbl
les
rolb
lret
push
push
dec
jecxz
test
adcl
mov
scas
push
push
mov
faddl
mov
xchg
add
xchg
jo
out
mov
insl
sub
les
jecxz
pop
hlt
out
sbb
adc
sub
cmc
stos
daa
lcall
int3
inc
inc
add
pop
add
mov
call
dec
push
icebp
pop
movsb
lcall
mov
fldl
pop
add
xchg
and
cmpsb
xchg
inc
orb
out
jl
fldlg2
pusha
xchg
pop
or
add
cmc
fs
lret
in
stc
sub
out
dec
dec
shll
data16
mov
imul
sbb
cmp
mov
jle
std
in
sbb
addb
lds
add
imul
dec
and
xor
fnstenv
cltd
shrl
xchg
inc
fdivrl
les
xchg
ljmp
popf
xor
shll
mov
in
push
sbb
jge
adc
mov
lret
insl
add
cmp
ljmp
mov
scas
fsts
cmpsb
test
sub
adc
mov
out
xchg
sub
inc
popa
jns
sbb
mov
lea
push
pop
mov
or
push
pop
adc
and
push
cltd
fisubrs
pop
xchg
mov
cmp
cmc
jne
fbld
xchg
stc
sub
das
pop
and
mov
test
xor
rcrl
sti
sbb
mov
fisubs
roll
mov
stc
mov
xchg
enter
ljmp
inc
mov
popf
mov
push
out
mov
or
push
in
cmp
shlb
dec
pushf
sbb
ja
stos
xchg
mov
in
clc
lret
in
or
and
pop
pop
xchg
and
adc
mov
inc
add
dec
mov
inc
fcoms
fbld
inc
pop
adc
jge
adc
lret
aad
into
jp
out
add
and
dec
aam
mov
jno
das
sbbb
lcall
pusha
sti
fstl
test
mov
lcall
sub
xchg
mov
cld
insb
jecxz
jno
mov
push
mul
xchg
popf
lea
aad
mov
push
pop
pop
mov
sti
xchg
loop
mov
xchg
adc
pop
cltd
cmp
mov
mov
xlat
in
xor
and
and
jnp
fwait
inc
lahf
iret
pop
xchg
in
push
imul
mov
lods
icebp
or
or
lods
rolb
lcall
ret
pop
inc
mov
ljmp
lret
fcoms
pop
push
bound
repnz
mov
add
sbb
mov
push
cmpsb
jo
xchg
jnp
and
lock
inc
push
sbb
pop
div
pop
int
inc
loop
add
ret
adc
lea
insl
inc
xchg
push
cmp
in
cld
fnsave
pop
xchg
push
sbb
cld
pushf
mov
xchg
xchg
jbe
add
push
pop
sub
mov
iret
mov
mov
mov
or
std
outsl
and
popa
inc
xor
jne
mov
sbb
jo
aam
xchg
dec
push
mov
xchg
nop
add
aam
in
jmp
jno
xor
cmp
mov
cmpsb
mov
outsb
and
adc
adc
add
sub
jle
bound
lock
shll
das
add
fnsave
inc
imul
inc
out
jmp
cmp
inc
negb
jbe
ljmp
and
mov
fptan
inc
fsubrs
xchg
outsb
jnp
jne
mov
mov
shl
int
sbb
movsl
xlat
and
jecxz
sbb
fwait
stos
mov
inc
sub
xlat
addr16
adc
sub
sbb
es
ds
mov
leave
lock
add
mov
adc
or
adc
repnz
push
lds
test
jnp
pusha
push
add
mov
bound
push
sbb
aas
jge
mov
pop
xlat
mov
push
or
inc
or
lret
repz
dec
movsl
push
xor
fdivl
stos
sub
mov
iret
jmp
jns
xchg
test
pop
jle
adc
inc
xchg
fistpll
outsl
sbb
sarb
aam
in
sbb
arpl
jae
ja
dec
fs
int
pop
lahf
sbb
in
pop
push
xlat
inc
ja
scas
lds
ret
jmp
adc
pop
out
mov
mov
mov
aam
push
mov
or
mov
imul
pop
add
xorps
mov
sbb
pop
mov
jp
push
lret
xchg
fldcw
pop
les
cwtl
jecxz
insl
sbb
or
jp
testb
cli
pop
fists
mov
incb
dec
xor
popa
xchg
fidivrs
jae
dec
stc
or
cmp
jle
int3
js
divl
mov
into
lods
push
cli
sub
rcl
pop
sbb
ljmp
mov
fsubrs
cmp
setbe
test
push
loope
mov
mov
mov
pop
jne
mov
mov
cmp
stos
je
pop
pushf
xor
bound
add
decl
movsl
into
jns
or
xlat
or
stc
andb
mov
dec
add
repz
adc
cs
test
pop
outsb
push
cli
imul
dec
xor
call
add
sbb
fstp
fnstcw
mov
xor
gs
push
iret
and
lcall
or
in
les
push
jb
mov
sub
pop
and
mov
or
das
ret
in
or
rolb
dec
sbb
popf
sub
repnz
cmp
xchg
sti
jmp
leave
adc
push
data16
xor
add
loopne
xchg
push
mov
fidivrs
cwtl
push
shrl
sub
sbb
cmpsl
push
cli
lock
popa
push
mov
popa
xchg
testl
xor
sbb
enter
mov
mov
inc
lods
add
and
mov
in
call
in
mov
shll
cli
xchg
test
sub
sbb
dec
push
imul
lds
mov
fsts
loopne
sbb
xor
xchg
pushf
repz
jnp
xor
aam
movsl
loop
push
sbb
dec
call
jne
cld
frstor
cmc
repz
push
lret
imul
jge
xchg
adc
mov
enter
rcll
shlb
and
lods
in
and
adc
fcoml
cmpb
clc
lret
xchg
loop
test
mov
cmpsl
pop
hlt
mov
mov
pop
lods
add
hlt
iret
es
sub
xlat
xor
hlt
leave
add
push
insb
push
mov
jge
pusha
jle
imul
lcall
mov
clc
lock
mov
jecxz
imul
pop
adcb
shll
int
insl
pop
inc
leave
pop
mov
enter
data16
jg
add
mov
or
pop
mov
loop
cmp
mov
sub
mov
and
lret
insl
mov
lahf
pusha
js
add
aas
sbb
mov
mulb
call
push
mov
push
xchg
pop
cld
and
pop
stos
pusha
xchg
push
adc
push
shl
or
das
pop
lea
lcall
pop
mov
adcb
popf
aad
stos
mov
xor
jge
add
push
mov
mov
sub
repnz
ret
xor
push
and
movsl
sahf
push
and
leave
sub
and
andb
inc
cmp
pop
cmpsb
xor
ds
scas
push
jnp
pushf
lods
sub
push
push
pop
rcrl
leave
jns
popa
pop
add
in
sbbb
and
add
xor
lahf
clc
xor
mov
lcall
aad
jns
test
and
dec
mov
and
loop
jbe
jno
push
lods
mov
and
pop
mul
jp
insb
inc
xchg
js
push
adc
faddl
dec
adc
arpl
or
pop
mov
popa
add
fidivl
je
in
cmp
lds
clc
repnz
jnp
out
aam
dec
or
addb
enter
jmp
movsl
hlt
dec
or
sbb
in
pop
je
sub
ss
or
stos
and
repz
ret
pop
sarl
add
mov
loope
push
ss
in
imul
je
push
sbb
adc
std
sahf
inc
dec
adc
das
cmp
lods
jmp
cs
and
hlt
push
bound
dec
sbb
cmp
es
jno
jae
mov
orl
stos
test
bound
cmp
mov
fidivl
ljmp
mov
add
movsb
lret
jno
outsl
pushf
sub
mov
mov
fsub
mov
popf
cmc
adc
xor
push
and
inc
adc
fidivl
cli
cmp
adc
subl
clc
stc
in
clc
idiv
loopne
push
dec
rclb
mov
dec
gs
cs
mov
xchg
and
or
mov
mov
test
std
cwtl
mov
mov
cmc
out
icebp
mov
outsb
jb
push
pop
inc
fwait
int3
jle
sub
add
out
daa
inc
and
hlt
loop
fwait
inc
mov
mov
outsl
call
and
lock
xor
mov
push
lahf
sub
adc
push
or
test
scas
mov
push
mov
push
inc
mov
jl
outsl
mov
fidivs
and
clc
rorl
xchg
rorl
jae
cmp
repnz
jl
pop
ret
in
das
pop
loope
mov
lods
cld
stc
cli
addb
dec
shll
mov
inc
dec
insl
xlat
xlat
insb
mov
mov
mov
sarb
pop
lcall
cmp
or
pop
sbb
pmaxsw
lret
sub
lock
pop
mov
maxps
xchg
loopne
mov
add
sar
imul
rorl
pxor
push
out
and
leave
sub
repnz
jnp
jecxz
jmp
lods
or
in
inc
loop
mov
mov
mov
xchg
icebp
ret
inc
test
stos
mov
cmp
inc
cmp
test
shrb
orb
pop
jp
loopne
fists
push
leave
js
mov
mov
xchg
fnstsw
push
mov
sbb
into
stc
aaa
in
sbb
cld
out
cmp
sub
mov
lcall
cmpsl
mov
and
movsb
lods
cmpb
in
stc
stos
aaa
or
add
in
pushl
shlb
mov
inc
fbstp
pop
pop
fidivs
pop
inc
sbb
lock
icebp
inc
inc
and
cmp
std
add
dec
fwait
sub
fwait
les
dec
push
cmp
cmc
add
inc
inc
push
push
ds
sbb
add
negb
adc
pushf
add
xchg
std
cmpsl
insl
xchg
lock
nop
mov
xor
hlt
cmp
and
and
or
adc
lods
mov
jae
mov
push
or
movsb
mull
push
incb
add
call
pop
cltd
pop
or
cmp
out
push
push
insb
sub
jl
mov
dec
or
and
mov
jno
jl
push
in
nop
jb
xlat
inc
sub
fsubrl
add
dec
sbb
xor
mov
add
loop
mov
dec
lahf
pop
inc
cmc
and
test
bound
cmp
xchg
dec
jecxz
gs
cmp
das
insl
adc
xlat
add
mov
arpl
adc
sahf
or
loopne
lahf
dec
hlt
in
push
mov
lods
push
or
push
inc
sbb
loop
insl
xchg
and
pusha
xchg
stos
cmpsb
adc
mov
adc
xchg
pop
inc
mov
mov
shrb
test
adc
jns
cld
sbb
insb
adc
leave
ror
dec
hlt
sub
jnp
int3
xchg
in
repnz
imul
push
push
mov
pop
sti
out
push
fstl
add
imul
jp
jl
out
xchg
cmpsb
cltd
loope
les
sub
sbb
pop
cwtl
repnz
ret
mov
inc
ljmp
cmp
xor
jne
jno
repnz
sub
incl
dec
iret
stos
test
push
push
and
fldl
xchg
add
lea
hlt
cmp
shrl
push
add
dec
loope
insb
stos
inc
stos
test
loop
sbbb
mov
ds
call
add
fcmovb
cli
fildll
into
ds
push
inc
aad
xchg
mov
push
cltd
add
sbb
mov
dec
push
movsb
and
pop
xlat
call
add
test
dec
jb
inc
dec
inc
sahf
push
call
xor
mov
lahf
add
mov
ficoml
and
js,pn
mov
cwtl
test
out
stos
cmp
xchg
popa
lods
repz
jp
mov
in
testl
cmpb
pop
dec
xchg
cld
leave
sub
imul
sub
jl
aaa
cmpsb
mov
cs
jp
push
cld
adc
out
fstl
ljmp
inc
repnz
xchg
loop
pop
mov
jp
test
cwtl
push
cmp
dec
jmp
hlt
call
adc
ret
sub
sti
pop
int3
and
mov
sub
nop
mov
movsb
mov
call
loop
ss
repnz
or
dec
inc
mov
addl
stos
and
sub
xchg
xchg
out
outsb
pop
aas
scas
add
and
mov
repz
inc
lahf
ss
stos
pop
cmp
pop
mov
in
push
out
mov
loop
aad
xlat
clc
xor
pusha
pop
push
rcl
sub
or
push
and
mov
and
je
add
fidivrs
leave
addr16
je
push
fistps
stc
insb
fistpl
mov
and
mov
or
cmp
cmc
jo
mov
and
adc
cwtl
or
sbb
lcall
mov
pop
cmp
bound
mov
outsb
outsl
dec
outsb
pop
pop
sbb
xor
inc
mov
scas
xor
lds
lea
nop
ljmp
lret
mov
hlt
les
sbb
outsb
inc
jle
xchg
inc
sbb
mov
xchg
or
inc
push
jne
ret
mov
cmp
out
out
gs
cmp
loopne
je
mov
fs
ljmp
movsb
leave
les
sbb
int3
scas
and
push
sub
jg
aas
inc
mov
in
sbb
mov
or
xchg
mov
fdivr
dec
add
loopne
mov
shrl
xor
mov
jb
mov
int3
sub
mov
sar
rcl
inc
sbb
push
shl
or
mov
dec
mov
xchg
inc
adc
xchg
cmpsl
lods
push
adc
insl
mov
dec
mov
sbb
test
jecxz
xlat
push
xor
aaa
cmp
shrd
jmp
aaa
cmp
mov
cmc
cwtl
je
mov
orb
dec
inc
outsl
mov
cmp
out
dec
les
xor
and
xchg
and
dec
repz
in
or
pop
inc
sub
inc
out
mov
jne
je
cs
inc
decl
push
sarb
lret
pusha
je
lds
mov
fildll
mov
cmp
repnz
mov
inc
stos
adc
fisubl
aaa
enter
mov
fildll
xor
out
scas
test
fbstp
cmp
enter
cmp
mov
cmp
pop
fildl
pop
xchg
mov
cmp
inc
xchg
jbe
add
icebp
and
push
mov
xchg
xchg
iret
and
push
mov
gs
mov
das
or
jp
push
or
sbb
mov
push
test
push
roll
inc
sub
dec
mov
movsb
sbb
dec
sbbl
and
jae
jns
mov
xchg
cmp
iret
push
and
shrl
push
out
adc
xchg
arpl
dec
dec
popa
bound
add
push
mov
sbb
popa
and
repnz
loopne
sub
stos
adc
lods
out
pop
xor
or
and
push
pop
insb
cmp
xor
mov
xchg
adc
pop
jl
mov
addr16
test
cmp
add
sbb
inc
jl
jmp
roll
jo
lea
lods
in
pop
out
dec
daa
and
mov
sbb
xor
dec
cwtl
outsb
test
push
add
xor
lock
not
enter
push
insl
bound
and
ss
test
push
mov
mov
add
je
or
ficomps
sahf
rorb
jmp
inc
adc
adc
jp
ss
jae
inc
push
jmp
aam
rorl
push
inc
loop
jl
das
aas
mov
int3
test
dec
aaa
adc
das
icebp
add
out
loope
popf
pop
fabs
add
lcall
sub
inc
inc
or
pop
test
mov
xchg
scas
stos
out
aas
push
xchg
jae
insb
fistl
in
mov
hlt
shl
cltd
sub
push
mov
ret
lock
jle
movsl
aam
outsl
int3
and
adc
fcompl
pop
subb
cmp
bound
adc
sub
sti
fistpll
or
stos
cld
fs
xor
cli
data16
addb
and
jmp
lret
sbb
lret
fwait
and
das
cmp
jle
sbb
les
push
dec
stos
test
add
js
adc
clc
pusha
dec
out
dec
imul
jno
or
rorb
pop
jp
mov
pop
jnp
imul
pushf
frstor
sub
cmpsl
pop
test
add
aam
fsubs
in
jo
arpl
cli
cmc
andb
sub
pop
cmpsl
or
gs
lods
stc
stos
movsb
fldl
outsb
mov
addr16
mov
nop
mov
inc
push
mov
fdivr
xchg
imul
clc
stos
xchg
ss
xchg
lcall
sub
shr
mov
popa
icebp
mov
leave
fistps
scas
aas
fmulp
lcall
fwait
mov
pop
stos
fsubs
sti
mov
push
mov
into
xlat
pop
sub
jnp
pop
add
dec
loope
and
test
rolb
rcrl
mov
imul
pop
test
add
and
ret
and
mov
outsl
mov
rol
dec
daa
sub
stos
mov
cltd
mov
pop
and
push
lods
push
xor
and
insb
add
outsl
jbe
repz
push
cmpsl
and
popa
add
sbbb
inc
pop
pop
movsl
xor
adc
insb
cmp
jbe
call
add
in
push
out
or
pop
mov
out
adc
or
dec
outsb
das
call
mov
fucom
shlb
out
movsb
mov
jno
inc
push
push
push
sahf
adc
jmp
jmp
cmp
mull
cs
cli
mov
pop
and
inc
cmc
adc
mov
sti
jg
andb
xor
mov
sarb
sbb
inc
test
ror
pop
adc
push
out
inc
lret
cmp
or
pusha
loope
sub
cmpsl
fsubrl
sti
lods
xor
xor
in
mov
cli
sub
jecxz
rorl
sub
lea
sub
out
mov
lds
push
mov
cld
mov
pop
sub
lods
shlb
jno
imul
and
cmpsl
aas
popa
cmp
fcmovnbe
sub
addl
fnstcw
push
popf
outsl
and
pop
stos
pop
push
push
ret
xchg
arpl
mov
or
not
xchg
sbb
shrl
mov
lahf
add
jg
rorl
and
cmp
int3
push
lret
in
mov
push
cmpsb
xchg
movsb
xchg
cli
stc
js
shll
je
ljmp
adc
inc
imul
and
pop
cmp
dec
fst
out
sbb
xorl
mov
mov
aaa
mov
pop
adc
popa
push
adc
lcall
ja
fs
scas
mov
inc
mov
lock
jno
jge
add
ss
mov
sub
jg
cmp
sbb
sub
cmp
mov
jno
ds
dec
inc
adc
cmp
cmc
xchg
mov
jecxz
popa
add
out
pop
mov
inc
xor
lods
fs
das
fisubl
ss
mov
dec
gs
mov
loope
fsubrl
lcall
imul
pop
pop
sub
ss
push
cmpsb
push
jno
pop
out
push
push
sub
xchg
jg
adcl
jl
fs
mov
or
hlt
push
and
sub
dec
cwtl
jb
in
int
arpl
das
jne
adc
xor
and
xor
push
imul
rcrl
mov
xchg
in
cmp
test
cld
add
sub
fdiv
xor
ljmp
xchg
sbb
cmp
xchg
je
cli
adc
and
dec
lock
test
int3
outsb
into
sbb
imul
jbe
loopne
jno
sbb
es
data16
push
xchg
stos
mov
push
mov
inc
adc
adc
ljmp
fnstenv
adc
enter
clc
or
inc
out
mov
push
es
cmp
inc
int3
or
ficoml
subl
outsl
leave
cmp
sub
cld
mov
inc
and
adc
and
outsb
pop
test
sbb
loope
aaa
cmp
sub
mov
icebp
cmp
movsb
fs
sar
imul
jbe
and
sub
es
daa
insb
jnp
cmp
lret
arpl
or
gs
movsl
fistpl
jmp
js
xchg
push
xchg
or
std
inc
cmp
xor
mov
repz
xchg
out
mov
jge
fs
mov
dec
push
popf
and
xchg
sarb
push
push
aad
xlat
pop
stos
icebp
aas
rcll
aad
or
mov
mov
jp
xchg
lock
xor
push
leave
pop
pop
cmpsb
movsb
jmp
cmpsl
cmp
enter
addr16
jp
shrl
mov
icebp
add
and
pop
out
jnp
out
clc
movsb
sub
jl
sbb
imul
clc
mov
lahf
out
lods
insb
andb
jne
dec
sub
lret
loop
aaa
sbb
inc
adc
inc
xchg
add
mov
mov
cmp
mov
dec
lret
xchg
insb
movsl
dec
add
and
xchg
mov
jne
xchg
insb
or
xchg
rorl
mov
adc
jecxz
inc
add
inc
dec
pop
xchg
loop
xchg
rcl
cmp
aas
lods
dec
stc
add
jg
jecxz
pop
jne
or
sbb
mov
sar
push
cld
cmp
rep
mov
pop
sub
cmp
adcl
in
mov
fcoml
or
popf
push
mov
jmp
mov
xchg
jg
sbb
aaa
pop
and
setne
subl
and
ret
scas
ret
inc
cmpb
mov
dec
shll
stc
mov
and
mov
mov
int
pop
test
jle
mov
pop
iret
jge
and
mov
push
xchg
fcmovnb
inc
cmp
push
mov
xchg
lret
pushf
xchg
jmp
stos
sbb
sbb
push
out
push
sbb
and
push
pop
mov
lods
mov
ret
sahf
jne
adc
int3
inc
cli
test
lea
mov
iret
and
jecxz
mov
cmc
bound
mov
fwait
scas
jg
mov
or
mov
cld
bound
push
int3
jns
add
sub
xor
test
jg
xchg
out
xchg
mov
mov
add
movsb
iret
call
and
je
aaa
sbb
scas
cwtl
jp
fists
sbb
push
add
jno
idiv
xor
xchg
and
pop
mov
sub
lret
jb
adc
jmp
inc
mov
sbb
xchg
mov
pusha
scas
xor
rclb
jmp
notl
shll
sub
enter
push
insl
push
adc
nop
mov
push
dec
sbb
add
rcrl
aaa
sbb
shrl
pop
aaa
cmpsb
fimuls
je
sub
adcb
sub
jb
sbb
sti
xchg
mov
push
jne
fsubrs
or
mov
enter
push
aas
insl
jmp
or
dec
sub
fistl
lcall
add
fstps
sbb
addl
xchg
insl
adc
inc
call
jno
push
xor
dec
addr16
push
cmc
xor
dec
pop
test
xor
scas
mov
mov
inc
out
in
add
add
mov
sti
ret
xor
fs
and
jp
hlt
lret
mov
subb
mov
jle
scas
ret
mov
adc
aaa
inc
jmp
call
stc
push
nop
mov
inc
jmp
dec
sti
push
loope
push
fisttpl
or
iret
dec
mov
lods
movsl
out
add
inc
xor
sub
sub
cwtl
mov
push
pop
testl
adc
and
or
mov
push
dec
inc
cmp
xlat
lret
xchg
xchg
syscall
xlat
fwait
mov
fadds
arpl
push
cld
inc
dec
cmp
add
arpl
in
and
add
daa
insb
dec
mov
cmpsl
or
pusha
xchg
mov
sub
sbb
push
call
insl
fs
jno
sub
jmp
mov
sub
mov
pop
into
cmp
mov
mov
das
adc
dec
mov
jae
sub
ficomps
sub
dec
sarb
inc
jae
out
xchg
adc
xorl
push
adc
cmp
cmp
jmp
data16
adc
fldt
aam
leave
xchg
aam
lret
inc
mov
add
mov
cltd
int
leave
pop
or
test
nopl
cmp
pop
aas
icebp
mov
lea
in
daa
aad
aam
mov
inc
mov
push
sub
mov
lea
callw
inc
pop
sti
xchg
rorl
mov
add
push
mov
in
jmp
mov
out
pop
repz
arpl
and
aad
sub
xor
addr16
adc
push
jbe
inc
push
gs
icebp
inc
imul
call
in
add
std
or
shl
out
loop
lcall
inc
sbb
jbe
dec
pop
aam
fdivr
inc
sahf
rcrb
mul
pop
cmpsb
mov
or
pop
or
fisttpll
dec
lds
mov
inc
jp
fs
xchg
xor
aad
cmp
outsb
cli
pop
sub
pushl
and
xchg
push
call
push
test
loope
lea
add
lret
and
fdiv
or
jo
cld
and
out
out
arpl
pop
addr16
icebp
jmp
fdivrp
push
insl
cmpb
xchg
push
bnd
mov
cmp
adc
fwait
mov
and
imul
outsb
inc
pop
sub
jae
pop
rcl
dec
push
mov
shrl
sahf
and
div
lahf
mov
push
inc
notl
into
xor
outsl
pop
mov
into
idiv
es
scas
lcall
pusha
fucomp
mov
es
mov
out
je
push
xchg
add
je
aad
cmp
roll
test
push
ret
fldl
inc
xchg
je
loopne
iret
pop
push
dec
je
dec
add
add
mov
push
fcom
stos
enter
xchg
sub
pop
push
call
jne
and
cmpb
fmuls
push
push
mov
add
jle
cmpsb
ret
push
das
cmp
xchg
or
call
aad
jg
or
mov
sub
test
int
push
fldt
and
sarb
inc
fwait
js
daa
fmuls
mov
in
mov
add
push
sbb
je
not
pushf
mov
xchg
cmp
push
enter
out
inc
adc
rolb
mov
fstl
addr16
inc
mov
jg
add
das
pop
adc
push
and
leave
mov
or
jge
xor
data16
mov
fsubr
sub
xchg
scas
xor
cmpsb
inc
sub
arpl
fistpll
mov
aas
pop
mov
loop
jne
jno
or
pusha
dec
mov
dec
out
mov
popf
ja
cmp
in
fwait
mov
push
lock
jle
adc
jae
add
decb
mov
dec
call
or
nop
and
jmp
pusha
out
adc
inc
in
xlat
in
fwait
jmp
js
sub
dec
jmp
jg
ss
andl
push
in
jecxz
aaa
mov
push
arpl
xor
add
xor
add
scas
gs
mov
mov
fisubs
test
sar
jecxz
fmull
dec
jmp
ret
mov
and
dec
mov
mov
cmpsb
pop
and
pop
ja
out
cmp
test
sbb
outsl
dec
call
adcb
push
cwtl
test
stos
mov
push
xchg
lret
mov
jle
xlat
xor
lret
push
sub
sbb
daa
xor
sbb
inc
or
out
das
mov
push
adc
lret
rclb
or
call
sbb
mov
xor
jmp
push
filds
cmp
pop
inc
outsl
cmp
dec
mov
and
enter
daa
aad
dec
xchg
aas
fld
call
sub
pop
arpl
std
in
cmpsl
insl
in
aaa
shl
bound
pushf
or
repz
jl
cwtl
sahf
add
popa
mov
jg
and
lock
add
outsb
loop
inc
lret
lahf
lods
push
movsb
sbb
mov
ret
pop
xchg
ret
insl
std
and
sahf
test
daa
or
les
lods
roll
sbb
shlb
inc
mov
and
add
pusha
shl
dec
sarb
lods
xor
add
jecxz
sbb
lret
test
add
adc
or
popa
mov
jne
add
push
out
in
add
or
insl
addr16
cmp
enter
ja
push
adc
es
and
sahf
in
sub
push
jl
bnd
add
jg
leave
sub
scas
insl
and
je
sbb
loope
sub
add
jne
lahf
mov
xlat
out
add
stc
jl
jecxz
push
jb
and
jl
lahf
pop
fs
adc
les
imul
jbe
cmpsb
and
je
in
int3
aad
cmp
inc
out
inc
inc
mov
push
jg
sti
mov
adc
aam
xor
cmp
mov
std
mov
adcb
cmp
outsl
xchg
adc
xor
in
in
lods
fstpt
and
insl
xchg
sub
pop
jmp
add
rcrb
jno
cs
sbb
push
loop
and
jecxz
add
out
pop
fidivs
ret
test
mov
dec
shll
ss
arpl
add
dec
xchg
loope
loopne
push
adc
xchg
jno
cmpsb
mov
int3
mov
add
pop
lret
sub
push
inc
jmp
ret
fsub
aam
and
dec
mov
inc
insl
xchg
mov
mov
ljmp
jae
sbb
out
sar
mov
in
jmp
in
sub
xchg
rcr
or
hlt
push
push
pushf
aad
rcll
cmp
sbb
lods
push
neg
push
clc
or
bnd
pop
pop
mov
jle
add
xor
jl
jne
ljmp
adc
fs
ljmp
mov
addr16
pop
jecxz
movsl
push
xor
cmp
inc
cmp
out
jne
lahf
loope
mov
inc
adc
inc
dec
push
jge
rorl
ret
mov
fildl
push
clc
mov
dec
push
adc
sbb
clc
out
ss
pushf
movsb
daa
lcall
dec
inc
outsb
out
sbb
xor
sbb
mov
mov
cmc
dec
rcll
ret
jmp
sub
in
mull
pop
sub
pop
jmp
pop
movsb
jp
loopne
stos
test
mov
lock
mov
jle
call
mov
lea
ljmp
fs
fsubrl
ret
loop
mov
xchg
sbb
jbe
test
add
inc
mov
sub
into
ds
xorb
arpl
js
rcll
call
mov
das
add
ror
xchg
dec
sub
xchg
dec
fstps
movd
mov
jae
add
fdivs
push
add
loopne
xchg
mov
inc
dec
cmp
or
cltd
jnp
mov
inc
in
push
push
call
pop
jno
enter
sub
stos
mov
mov
or
jo
mov
mov
call
mov
xchg
jg
or
and
and
jbe
mov
imul
xlat
repnz
gs
hlt
js
adcb
cmpsl
jae
loopne
fsubrl
addr16
cmpsb
pop
add
and
xor
cmp
add
cmp
add
ja
xlat
mov
dec
inc
xchg
and
pushf
test
push
nop
inc
loop
jno
pop
mov
rcl
push
sbb
push
jg
fcmovnbe
in
rolb
xor
test
dec
push
pop
sbb
popa
jge
mov
push
push
dec
mov
les
push
jb
sti
pop
pop
fwait
outsb
dec
enter
lahf
add
cmpl
mov
sub
mov
imul
out
push
pop
js
mov
jb
pop
je
lcall
cmp
xchg
mov
mov
cmp
push
jo
or
sbb
sbb
push
shrl
fcmovbe
mov
jmp
mov
adc
jl
leave
imul
cmc
mov
sub
aam
shrb
xor
imul
inc
loop
mulb
push
sti
int3
mov
sti
lods
inc
xor
and
cld
xor
lret
gs
das
xchg
xor
jge
ss
into
out
pop
xlat
cmp
adc
rclb
cltd
rorb
into
fimuls
push
add
out
icebp
inc
fdivrl
lods
mov
repnz
pop
test
mov
xchg
sahf
call
call
bnd
lods
movsb
out
imul
pop
mov
fs
cld
mov
mov
push
clc
test
hlt
daa
xlat
mov
jmp
sub
arpl
cmp
add
rclb
push
lret
jnp
push
mov
stos
test
lret
cmp
xchg
ja,pn
xor
enter
xor
jecxz
fcoml
ret
movsb
add
xchg
jge
inc
pusha
out
loop
push
mov
add
lods
insl
loop
pop
or
je
push
jp
dec
mov
test
in
cmpsb
out
std
int3
push
cmpsl
stc
and
scas
lea
adcl
adc
sarl
jg
jb
cs
add
test
fs
mov
shl
sahf
and
push
inc
test
xor
mov
dec
inc
je
mov
lods
mov
mov
adc
push
imul
cmp
inc
repnz
sbb
push
jmp
insb
ja
xchg
pop
fldl
mov
jo
scas
lds
mov
loop
lcall
jmp
or
and
hlt
in
ret
aam
outsb
cmp
jno
lret
mov
sbb
push
xchg
pusha
hlt
call
sub
iret
hlt
jle
popa
or
shrl
mov
in
pop
out
push
inc
in
xor
cmp
inc
dec
fcomp
push
jo
scas
dec
or
mov
lret
xchg
push
cltd
in
icebp
cmp
loope
adc
arpl
lock
xlat
adc
pop
std
adc
sti
js
popf
lea
sbb
lret
cmp
subb
xchg
sarl
and
ljmpw
mov
movsb
cmpsl
dec
mov
cwtl
pusha
xchg
xchg
ja
lret
int3
inc
add
pop
sbb
inc
lods
push
cmp
out
roll
gs
adc
setb
cmp
push
dec
xchg
add
mov
push
out
pop
roll
je
ret
mov
or
aaa
and
mov
and
out
icebp
test
shlb
sub
sub
lahf
mov
inc
mov
mov
cmp
lret
out
rcrb
add
pop
out
and
pop
jns
loop
insb
cli
testl
addr16
ss
adc
pop
pop
pop
xchg
mov
jne
mov
fsubr
adc
and
xor
addr16
and
add
push
cmp
pop
aad
test
sti
pop
lea
decl
mov
sbb
sub
in
mov
in
repz
insl
jae
out
subb
icebp
cmpsb
cmpsl
outsl
push
adcb
imul
les
mov
mov
pop
mov
cmpsb
test
jmp
adc
adc
out
nop
push
loopne
pop
pop
orb
xchg
bound
lods
aad
mov
mov
ret
pop
pop
mov
push
sbb
push
inc
lcall
adc
xchg
mov
outsb
orb
xchg
mov
clc
or
mov
cld
int3
pop
in
dec
sarb
dec
lea
jb
pop
pop
pop
imul
cmc
outsl
aas
dec
mov
es
adc
int3
out
adcl
imul
add
loopnew
lods
inc
xlat
test
cmp
pop
inc
mov
lods
dec
sbb
mov
push
ja
mov
jae
mov
xchg
pop
call
xchg
rcl
push
fists
aas
push
cli
lods
in
mov
add
es
and
and
fsubrs
or
mov
adc
push
mov
fldenv
mov
pop
push
fbld
jecxz
push
inc
mov
xchg
rcll
addr16
into
loope
and
aam
mov
and
dec
jp
scas
xor
xor
pusha
int3
inc
arpl
jle
outsl
add
out
mov
push
aad
xor
leave
rcl
and
fwait
insb
pop
in
xor
repnz
lea
rcrb
pop
cld
xchg
movb
push
pop
and
daa
and
jmp
jg
pop
add
test
jo
aas
outsl
xchg
cld
sub
xchg
cmp
cmpsb
imul
pop
cs
mov
xor
mov
loopne
repz
scas
imul
mov
fildl
icebp
pop
es
xchg
shl
gs
mov
dec
ret
sub
cmp
add
dec
inc
sahf
rclb
dec
jne
or
push
jne
lahf
jae
fldcw
fsubl
xchg
icebp
popa
dec
gs
sbb
xlat
inc
and
mov
cmpsl
and
mov
mov
popa
out
mov
add
inc
jge
jne
mov
je
inc
aaa
aam
outsb
mov
stos
push
ficompl
jbe
pop
addb
mov
mov
add
mov
stos
inc
adc
push
imul
int3
sub
xlat
std
movsb
lods
push
sbb
sbb
jnp
aam
or
mov
iret
sub
push
movsb
aam
scas
cwtl
sbb
pop
loop
add
dec
dec
xchg
cmc
andb
push
jo
rorl
mov
jecxz
out
rcl
nop
add
scas
aad
mov
sbb
ret
or
ret
jmp
outsb
je
in
fimuls
movsb
jge
adc
dec
sbb
outsl
push
out
mov
insb
imull
test
and
pop
add
cli
popf
faddl
xchg
xor
bound
loopne
sbb
sbb
and
jne
ret
loopne
popa
inc
ds
xor
cmp
cmp
sti
subl
xchg
adc
mov
lahf
inc
push
dec
cmp
mov
aad
xchg
jg
jp
dec
xchg
adc
xor
popa
mov
es
pop
and
or
xor
aas
sbb
sarl
cmpsb
insb
xchg
mov
lcall
mov
add
mov
lea
add
xchg
test
adc
cwtl
repnz
outsb
addl
aaa
lret
lret
inc
inc
push
mov
add
aaa
leave
aad
aam
mov
es
nop
enter
in
pop
frstor
mov
xchg
push
fsubs
fisubs
mov
icebp
pop
inc
es
mov
inc
or
fcoms
mov
pop
push
cltd
jp
push
outsl
insl
jno
movsb
sbb
xor
pop
in
add
xchg
sub
js
sbb
push
popa
jbe
stc
sahf
push
movsl
jb
repz
outsl
es
into
or
jl
and
inc
adc
mov
stc
sahf
mov
lret
mov
loope
lret
jb
xlat
add
test
hlt
add
mov
dec
call
pushf
and
in
repz
jae
pop
inc
lahf
inc
pop
ret
pop
mov
adc
push
data16
xor
mov
and
frstor
rcrb
xor
sarl
shll
jmp
fadd
sbb
or
mov
mov
or
mov
test
jge
arpl
test
cmp
xor
lea
xchg
addr16
outsb
sub
gs
shl
and
sub
cwtl
mov
pusha
in
mov
dec
fdivrl
jne
xchg
sbb
xor
add
sbb
jmp
cltd
test
mov
scas
or
lock
mov
arpl
xor
lods
imul
pop
out
mov
sub
dec
push
das
andl
jecxz
gs
js
jp
inc
inc
xchg
gs
jmp
lahf
popf
jns
testb
loopne
out
lahf
fs
sahf
mov
xchg
add
nop
adc
or
xchg
sbb
inc
adc
popa
out
push
or
test
enter
push
xor
push
pop
dec
lea
mov
dec
dec
add
insl
rcl
aas
pminsw
into
inc
xor
mov
out
lock
xor
test
das
fsubrs
pop
ja
out
adc
rolb
xchg
scas
fsave
out
and
mov
dec
daa
dec
xchg
imul
arpl
mov
pop
inc
push
shrl
jbe
cli
sti
mov
xor
pusha
mov
or
add
js
sub
nop
mov
dec
loopne
pop
mov
xor
push
sbb
ret
or
ficoms
and
push
sub
aam
xchg
es
int3
add
pop
call
push
sti
test
mov
mov
xor
add
jb
or
fstl
mov
insb
sbb
sub
ret
into
sub
inc
jnp
imul
sbb
mov
js
lock
div
imul
gs
gs
cmpsb
repz
ds
xchg
inc
or
mov
add
mov
sbb
lods
jg
or
cli
mov
hlt
ret
lds
and
add
lret
xchg
sahf
cmpl
push
fnsave
lds
mov
in
enter
inc
arpl
cmpsb
cwtl
mov
dec
dec
cltd
aaa
pop
add
cmp
dec
xchg
xchg
mov
jle
arpl
cmp
mov
inc
aas
add
repz
mov
jne
in
mov
lods
jno
rorw
mov
insb
orl
mov
xor
pop
cs
dec
cmp
inc
push
aam
pushf
lds
push
push
shrb
mov
nop
jno
mov
repnz
scas
xor
or
lods
or
test
lahf
adc
outsl
es
pop
nop
stos
aad
jg
outsb
ret
and
add
ficoml
push
enter
sub
icebp
sub
jecxz
fistpll
lock
aad
xlat
movsl
subb
jecxz
out
fbld
imul
xchg
stos
loopne
push
xchg
test
ror
dec
cmp
jae
jb
inc
hlt
and
bswap
lret
pop
mov
sub
xor
lock
cmc
bound
repz
pop
test
dec
lret
cmp
lahf
jle
test
or
cmp
shl
jge
sub
and
or
cmp
pop
mov
jns
pusha
adc
add
mov
adc
aam
js
cltd
inc
push
push
jbe
jmp
mov
inc
push
mov
adc
adc
jnp
sbb
in
js
mov
or
aaa
add
mov
mov
aas
push
js
cmp
push
nop
mov
adc
shr
pop
in
xchg
dec
and
mov
testb
insl
dec
sbb
out
and
test
in
test
dec
jge
jbe
mov
cmpb
xchg
push
mov
add
and
jae
sbb
or
pop
sub
mov
pop
inc
mov
fidivrs
cmp
pop
xchg
xchg
mov
xor
loop
adcb
mov
push
lock
iret
mov
adc
andb
mov
add
popa
mov
out
lret
inc
inc
xchg
ret
pop
cwtl
into
and
mov
mov
jg
jecxz
add
pop
xor
mov
jge
add
or
cmp
data16
add
xlat
dec
hlt
imul
test
cmp
xchg
fwait
mov
out
enter
in
imul
mov
sbb
imul
fidivrs
push
pop
lcall
sub
je
push
cmp
ret
je
data16
shl
xchg
lock
jge
addr16
pop
ss
mov
sahf
mov
inc
cli
xchg
mov
bound
mov
popa
mov
test
icebp
or
outsl
and
and
xchg
jecxz
fs
mov
pop
test
pushf
sub
sbb
out
rcrb
adc
jnp
mov
adc
pop
scas
adc
ss
roll
push
in
fwait
push
dec
andl
push
dec
jae
test
push
rclb
add
sahf
xchg
dec
xchg
mov
cmp
mov
sub
jg
sub
loop
jns
mov
push
dec
into
jb
in
add
scas
fadds
adc
mov
pop
imul
mov
jge
push
sub
div
scas
sbb
movb
cmp
jge
sub
mov
jp
lret
adc
adc
or
dec
lea
jo
push
stos
add
mov
xor
call
enter
fwait
pop
or
shr
xlat
sbb
call
rorl
mov
hlt
push
push
cmp
out
jge
imul
mov
shlb
fstpl
inc
xor
stos
lea
out
xchg
fdiv
inc
jle
adc
adc
add
out
stc
lods
mov
out
add
mov
fnstcw
cmp
sbb
out
dec
sub
mov
stos
loopne
jp
les
mov
sub
fisttpl
mov
pop
adc
test
call
pop
loope
pop
or
cmp
mov
rcrl
scas
les
push
outsb
inc
pop
loop
inc
or
mov
fists
xchg
mov
rcrl
fadd
ds
ja
pop
push
mov
out
das
mov
mov
mov
sub
add
push
and
repz
and
or
pop
lods
push
in
movsl
adc
lock
aaa
inc
inc
into
in
dec
and
fildll
inc
or
add
push
sub
push
and
movsl
adc
inc
mov
adc
push
pop
push
stos
std
push
setp
and
call
stc
ds
or
jns
add
jb
pop
stc
pushf
cwtl
lahf
sti
clc
ss
in
cld
ss
les
or
out
test
adc
jecxz
mov
test
or
jecxz
je
sub
in
outsl
jecxz
xchg
cwtl
cmp
fsts
cmp
imul
aad
cmpsb
hlt
adc
scas
adc
dec
das
mov
adc
push
cmp
push
int3
shll
outsl
cmpsb
jns
loop
lds
fsubrs
mov
mov
pop
xchg
adc
repz
movsb
inc
out
icebp
adc
sbb
lods
clc
inc
inc
mov
jle
sub
xchg
cmpsb
in
xchg
out
cmpsb
cmp
insl
mov
mov
mov
aas
fstps
data16
jns
mov
add
mov
test
cmp
lcall
insb
push
test
imulb
cltd
dec
jne
ret
testb
push
pop
mov
lret
add
inc
add
repnz
pop
js
in
pusha
ret
jp
sti
inc
outsb
call
dec
xchg
cmc
jge
cmp
lcall
loope
scas
gs
xchg
pop
or
pop
push
repnz
iret
js
aam
outsb
push
jecxz
adc
loop
fimuls
mov
xchg
push
adc
shl
cld
cmpb
inc
inc
inc
sbb
mov
jl
shll
in
mov
mov
dec
push
pop
push
div
sub
inc
sub
push
cmp
insb
insl
in
fisubrl
mov
call
pop
and
xchg
ret
and
fisubrl
push
mov
mov
ficompl
xor
mov
mov
dec
mov
xchg
ljmp
or
cmpsl
mov
addr16
movsl
mov
jns
or
jno
inc
lea
js
pop
cli
shlb
ljmp
sbbb
push
jnp
test
dec
lock
jne
cmpsl
push
shl
ss
in
xchg
and
es
cmp
fs
inc
out
dec
pop
repnz
inc
push
stc
jge
ret
hlt
dec
out
jb
push
lds
mov
mov
out
pop
cmovo
ljmp
lret
mov
mulb
push
inc
sub
dec
pop
inc
in
lock
mov
or
cmp
xchg
dec
xchg
std
jp
inc
mov
push
loop
pop
push
mov
gs
into
xor
jle
pop
pop
mov
fisubl
js
sbb
cmp
mov
popa
push
jno
iret
and
lcall
fucomip
sub
int
fwait
push
decl
int3
pop
orb
pop
int
inc
shlb
dec
jbe
push
dec
fidivrs
sub
mov
into
jne
sahf
icebp
lahf
jg
loop
dec
mov
xchg
popa
call
jb
testl
cli
jmp
sbb
xchg
ror
rcrl
call
fbld
push
xchg
pop
mov
fsubrl
sub
ds
inc
adc
xlat
mov
shrb
jle
or
ret
push
hlt
testl
xchg
cmp
shr
sub
ret
out
jno
test
jo
ret
adc
xchg
add
jmp
lret
sbb
leave
rolb
fisttpl
or
mov
lahf
adc
sub
push
decw
insl
mov
ret
sub
jge
rorb
dec
xchg
arpl
call
popa
push
cmpsb
cmp
inc
std
shr
xchg
imul
xchg
sbb
push
mov
push
adc
sbb
dec
dec
add
xor
pop
rcrb
xchg
fdivs
loopne
adc
and
xlat
jae
inc
mov
scas
and
xchg
sub
sbb
rcrb
lcall
cmpsl
add
mov
dec
sub
inc
adc
xchg
mov
mov
xchg
daa
stos
aaa
mov
data16
popf
xchg
xlat
fwait
jo
nop
dec
test
popa
ror
ja
sub
and
imul
sti
fs
push
xchg
jns
scas
mov
xchg
pushl
dec
fcmovnbe
cld
jg
xchg
fnstsw
int
aaa
pop
fadds
mov
int3
enter
xor
ficompl
or
dec
xor
sbb
cmp
jl
mov
leave
push
nop
pop
test
mov
xchg
adc
and
inc
ljmp
je
jns
jge
icebp
xchg
sub
lock
xor
and
fidivl
movsl
pop
mov
loop
jbe
mov
push
or
xchg
test
mov
shrl
std
fs
cltd
cmpb
inc
xchg
scas
fiaddl
ss
mov
sarl
test
mov
pop
mov
xchg
repz
pop
rclb
or
ret
lds
jl
xchg
out
mov
jp
and
mov
sahf
jbe
cmp
mov
jo
inc
inc
adc
xchg
scas
inc
mov
out
add
stc
xchg
pop
repz
ficoms
fistpl
addr16
push
mov
ja
add
lcall
add
movsb
or
pop
shll
aas
cmp
call
sub
xor
cwtl
jl
pusha
pop
push
mov
idivb
mov
cltd
mov
icebp
outsl
jae
mov
sahf
xchg
mov
xor
insl
push
xchg
xchg
fwait
lock
or
sub
push
jnp
loop
sbb
mov
xchg
mov
mov
es
mov
data16
push
xor
insb
push
inc
movsb
sbb
or
mov
das
cmp
imul
pop
sbbb
ja
sahf
mov
stos
loopne
fst
lcall
stos
or
inc
jle
pop
orl
xchg
xor
sub
mov
out
xchg
test
js
push
push
pusha
nop
lds
mov
es
xor
pop
lret
orl
inc
int
addr16
adc
sub
inc
add
mov
add
dec
inc
jp
cmpsb
cld
cmp
cwtl
cmp
js
jne
push
movsb
mov
mov
test
ror
scas
jae
into
add
jmp
cli
loopne
xor
xlat
rcll
push
imul
or
xlat
xor
mov
not
push
pop
xchg
lods
insl
and
repnz
outsb
out
push
pop
test
sarl
repnz
mov
dec
out
xlat
add
fildl
js
test
lock
lods
inc
pop
mov
mov
mov
cmp
adc
mov
les
dec
cmp
pushf
jle
xorb
jbe
mov
pop
dec
or
sbb
icebp
sub
lods
in
stos
cmc
faddl
inc
adc
outsb
mov
arpl
pop
cli
arpl
mov
add
cmp
add
xor
pop
adc
push
pushf
dec
rol
mov
cli
xlat
push
cmpsl
int3
add
or
cmpl
mov
aaa
or
mov
adc
testb
mov
lea
in
fcmovbe
xlat
cld
sti
imul
add
les
mov
ret
es
lods
or
stos
les
or
lahf
repz
jge
ds
outsb
push
inc
push
xlat
dec
cmp
call
mov
out
fisttpl
les
ds
push
roll
adc
call
mov
adc
mov
test
xchg
mov
adc
cmp
jne
cmpsl
add
cmp
mov
outsb
in
or
int3
push
xlat
mov
cmp
popf
pop
push
mov
imul
xchg
push
lahf
cli
lcall
mov
push
nop
lea
stos
flds
push
repz
sahf
cmp
and
mov
xor
sbb
scas
sbb
cmp
xor
push
mov
icebp
ss
add
push
dec
loopne
lea
dec
push
add
ja
mov
push
fdiv
or
pushf
icebp
mov
sarl
ljmp
repnz
xchg
mov
aad
shll
js
jle
pop
mov
push
jae
test
imul
push
mov
pop
cmp
inc
mov
cmp
jecxz
sbb
inc
adc
or
aaa
dec
add
shlb
sub
and
push
sbb
cwtl
jge
fdivrs
push
aaa
lock
int3
shl
insb
orl
aad
movl
jle
out
ja
cltd
xchg
or
pop
ljmp
mov
adcl
jns
int3
es
inc
sub
add
fwait
xchg
adc
push
test
cwtl
sbb
call
nop
adcl
pop
je
into
mov
lods
mov
shl
fcmovnbe
inc
cmp
dec
lahf
pop
mov
nop
lcall
sub
and
sahf
test
dec
jmp
xchg
loope
mov
sub
daa
fdivrs
out
imul
add
xchg
insb
lahf
xchg
je
shrl
mov
dec
fsubs
enter
test
fnstcw
hlt
sti
xchg
loopne
jae
cmp
mov
sbb
and
xchg
push
gs
or
dec
pop
sbb
jne
loope
icebp
xchg
xchg
inc
dec
fstl
push
pop
stos
adc
sub
cld
ss
push
inc
pop
pmaxub
push
mov
testb
mov
movsb
cmc
and
mov
icebp
outsb
inc
push
or
inc
mov
cli
and
lahf
outsl
in
fisubs
js
sub
iret
stos
add
jg
dec
fimuls
inc
xor
push
jecxz
scas
mov
aam
outsl
cmp
xchg
cld
jge
cmp
add
or
inc
pop
mov
dec
sub
add
mov
in
hlt
mov
ja
mov
jg
flds
cwtl
xchg
pop
imull
inc
outsb
sub
cmpl
xchg
les
cs
or
mov
mov
or
dec
jnp
xor
push
out
xchg
insl
inc
xchg
out
fdivrs
cwtl
jno
inc
enter
ja
or
adcl
xorl
loopne
lock
xor
pop
pop
adc
push
in
call
popf
or
rorb
jp
dec
xchg
add
xchg
cmp
lret
pop
icebp
aas
push
mov
push
push
mov
ficoml
mov
dec
mov
aaa
fistl
and
popf
jl
test
sub
insb
xchg
fstps
mov
xchg
pop
lock
gs
popf
les
bound
pushf
fwait
int3
mov
call
jns
dec
scas
lods
or
lret
jle
jmp
dec
sarl
cwtl
adc
lods
hlt
mov
and
cmp
push
mov
shrl
xor
inc
repz
jmp
test
inc
into
xchg
push
adc
cwtl
cmp
xor
cmp
ret
mov
outsl
ret
and
mov
enter
mov
xor
inc
pop
rcll
leave
cmpsl
inc
cld
sbb
das
mov
mov
mov
jp
mov
test
jge
jb
add
sahf
shl
or
pop
hlt
lods
sub
push
pop
inc
dec
add
gs
popf
addb
jge
in
je
cmp
jmp
inc
mov
movsl
test
subl
xchg
decb
sbb
jae
movsl
push
inc
dec
lock
and
fbstp
push
push
dec
int
push
mov
enter
idiv
fxch
pop
or
pop
arpl
lock
mov
fldl
xchg
or
and
mov
sbb
or
and
test
les
cmp
int3
out
lcall
pop
test
es
ljmp
mov
mov
out
cltd
jae
jge
push
pushl
pop
cmc
adc
cmp
add
adc
jb
fs
mov
enter
cmpsb
daa
or
add
jmp
loope
mov
outsb
xor
ljmp
mov
mov
add
adc
imul
add
mov
adc
or
xor
pop
fcmovnb
add
pushf
push
pop
jae
std
gs
sahf
sub
hlt
repz
mov
and
mov
out
and
lea
sub
push
xor
mov
aad
cwtl
ljmp
pop
sarl
cmp
xchg
cwtl
jl
sub
incb
pop
es
adc
sub
pop
loopne
pop
dec
inc
sbb
mov
int
cmc
dec
fcoms
mov
out
xlat
sbbb
push
mov
mov
out
ret
lahf
jle
insw
jp
leave
xchg
cli
leave
pusha
testb
in
repnz
jno
sbb
ficompl
or
push
adc
and
rcrl
jb
jge
scas
add
mov
dec
fs
dec
in
inc
pusha
ret
sbb
sub
push
inc
std
leave
pop
mov
pusha
dec
jecxz
rorl
mov
pop
shrb
in
enter
pop
sbb
pop
les
dec
dec
or
dec
iret
cld
in
xor
mov
lahf
pop
dec
mov
lea
and
fnstsw
mov
inc
clc
or
add
ljmp
sbb
jb
lret
lcall
mov
sbb
fsubrs
rcrl
rcr
lret
lahf
inc
lahf
lahf
push
and
imul
push
iret
xor
and
stos
add
das
jnp
cmp
pop
test
dec
leave
jge
mov
push
fstpt
ret
xlat
lock
test
ljmp
push
scas
and
or
cmpsb
xchg
mov
xchg
in
je
ljmp
sub
xor
roll
pop
test
sub
mov
idivb
cmp
mov
pop
sti
mov
aam
sbb
add
sbb
mov
xor
mov
mov
out
pop
push
ss
subb
pop
mov
icebp
ret
jbe
sub
or
jle
mov
xchg
jp
movsb
lds
dec
mov
ds
inc
pop
aaa
adc
out
dec
lods
shrl
sub
jg
ss
jg
dec
pushf
sbb
loopne
mov
adc
sti
clc
push
pusha
xchg
push
aaa
dec
int
jb
divps
cmp
dec
and
aam
push
stc
aas
sahf
adc
sahf
lret
sbb
xor
mov
push
das
mov
mov
mov
es
jno
push
nop
lods
jb
rclw
adc
inc
mov
mov
cld
out
mov
push
inc
push
jg
inc
test
into
adc
pop
int
fstl
sbb
inc
loop
pop
testl
mov
movsl
mov
push
je
pushf
sub
data16
sti
xchg
jae
jno
xor
arpl
mov
and
cmp
gs
pop
ret
mov
dec
inc
shl
push
push
test
stc
mov
or
mov
aam
and
dec
mov
jae
dec
push
adc
push
pop
pop
insb
add
or
mov
mov
stos
dec
sahf
rclb
or
leave
hlt
rclb
dec
das
fs
out
xchg
out
sbb
aas
lret
push
ss
cwtl
es
jns
adc
lret
hlt
push
xchg
into
int
push
jl
mov
in
sub
cs
clc
cmp
ss
adc
aas
sbb
ror
push
jmp
mov
aam
loop
imul
mov
lds
lods
xor
shll
and
pop
mull
sbb
pop
inc
data16
scas
jns
cmp
cmpsl
inc
mov
mov
addr16
scas
and
mov
je
dec
ret
mov
fimull
mov
ja
xchg
jno
data16
and
adc
and
mov
mov
clc
sbb
mov
arpl
mov
pop
cmp
xor
cmpsb
iret
fisubrs
or
jb
inc
nop
mov
and
push
out
and
inc
adc
shlb
xor
andl
bound
cwtl
cmp
mov
cmp
repnz
aas
sub
and
and
std
mov
mov
icebp
outsl
and
shrl
cwtl
addr16
cmovnp
enter
mov
popf
pop
hlt
inc
jle
xor
adc
imul
pop
outsl
and
adc
loope
clc
movsl
mov
adc
jbe
xor
pop
ret
mov
mov
dec
stc
jle
sbb
xchg
int3
aam
cld
out
stos
mov
outsb
cmpsl
xchg
int3
jb
mov
repz
xchg
aam
test
loopne
push
in
mov
hlt
push
fistl
popa
mov
testb
sbb
sub
push
lret
jp
or
and
cmp
cli
dec
dec
mov
pop
loope
ds
ss
push
iret
inc
add
push
pop
lahf
and
aas
roll
sub
mov
mov
dec
push
jo
divl
mov
jbe
mov
mov
xor
aaa
in
and
sahf
xor
inc
pop
cmp
mov
sahf
call
fistpl
call
out
dec
or
cmpsb
ret
jle
and
adc
pop
mov
push
or
sub
cwtl
aas
push
and
and
inc
repz
out
es
out
mov
loope
inc
js
push
jp
add
bound
adc
mov
mov
inc
jmp
icebp
daa
mov
repz
pushf
sbb
sub
fdivrl
push
jge
add
dec
mov
call
test
mov
sbb
inc
jl
popa
jge
cmp
xor
in
aam
sub
and
cmp
hlt
cltd
push
mov
xor
dec
add
imul
std
lahf
dec
js
aad
sub
adc
lods
pop
ret
scas
inc
adc
test
sbb
and
ja
cmp
fs
xchg
add
lea
test
stc
sub
sub
lock
adc
repnz
mov
or
cmc
sub
cmpsl
int3
outsb
aad
pop
jecxz
and
fldcw
sarl
sbb
or
notl
sub
aad
jns
push
rcll
rcl
into
rclb
lret
add
pop
hlt
cli
cmp
adc
mov
int
outsb
push
cmp
fsubl
dec
push
fistpl
mov
orl
aad
pusha
pop
pop
push
add
mov
and
fisubl
dec
ja
ret
lods
xchg
lahf
cmp
jmp
incl
rorb
sbb
pop
sub
int
sbb
pushf
fdivrl
ret
std
dec
jmp
or
sahf
adc
std
mov
push
scas
xor
iret
sbb
mov
lock
mov
out
dec
push
sbb
sbbb
leave
mov
pop
jns
push
push
xchg
test
xchg
add
jle
movsb
mov
out
sbb
cmc
out
xchg
add
insl
mov
out
js
cmpsl
fisttpll
movsl
cmp
ja
fnsave
lods
push
dec
cmp
outsb
jmp
f2xm1
mov
repz
pop
or
pop
and
in
ficompl
int3
adc
aas
or
jle
frstor
stc
mov
jb
push
das
sahf
loope
jge
dec
bound
xor
ret
or
or
push
push
or
xor
adc
adc
dec
out
xchg
inc
repnz
jg
lds
xchg
aaa
mov
ljmp
call
push
add
shrb
inc
jb
or
scas
hlt
clc
jmp
adc
mov
scas
sbb
mov
in
leave
cmc
lcall
or
imul
ss
loop
mov
adc
sbb
jnp
adc
add
fcoml
jno
add
mov
jns
div
sbb
lock
loop
add
sarl
and
pop
pop
or
inc
icebp
aam
dec
loop
test
std
pop
push
rcr
lods
clc
sahf
xchg
call
imul
adc
std
xchg
mov
das
std
pusha
add
xor
pop
xchg
cmpsb
cwtl
xchg
cmp
sub
jl
sub
xchg
test
dec
adc
orl
fwait
hlt
xchg
das
inc
add
js
xchg
pop
dec
mov
push
rcrb
aaa
ljmp
sub
mov
insl
xor
pop
in
stos
outsw
shll
int3
adc
orl
cmp
dec
out
shrb
cmp
xor
jl
sbb
pop
cmp
pop
or
dec
xchg
dec
mov
fdivrs
jnp
outsl
or
ficompl
leave
mov
cmpsl
in
flds
shlb
inc
or
push
sahf
stos
inc
xchg
stos
mov
in
sbb
rcrb
mov
jp
call
or
pop
dec
sti
outsb
or
xchg
xchg
rol
ds
mov
pop
sub
shl
mov
jmp
mov
lcall
jne
dec
adc
mov
push
mov
arpl
addr16
cmpsb
sbb
popa
cmp
jge
xchg
xchg
ficoms
add
mov
adc
push
test
stc
sbb
call
pop
inc
dec
sbb
fnsave
daa
popfw
and
mov
data16
call
rorl
loopne
in
movl
dec
push
pop
xor
push
push
inc
scas
inc
xchg
pop
mov
ret
aas
fisubrl
add
xor
mov
psrld
mov
pop
in
insl
std
arpl
lcall
lahf
mov
push
clc
dec
in
dec
jo
push
arpl
xlat
fiadds
pop
cmc
cmp
push
inc
mov
fists
xlat
mov
mov
cmpsl
sarb
jge
push
cmp
int3
inc
jb
dec
xchg
shrb
or
cmc
mov
mov
movsl
push
and
mov
aad
mov
lea
fists
inc
int3
data16
cmc
shlb
aaa
insl
lret
xchg
or
addr16
cmp
in
rclb
add
push
cltd
imul
clc
pusha
jmp
mov
stc
dec
hlt
push
popa
dec
jo
aaa
or
repnz
imul
test
jne
clc
mov
xor
xchg
orb
js
cmp
int
cli
adc
sbb
adcb
cld
jl
loopne
loop
push
imul
xor
call
ja
lea
adc
xchg
jp
jecxz
call
xor
leave
ret
mov
and
mov
xor
loopne
fldl
aad
cs
mov
mov
movl
adc
ljmp
insl
js
test
fidivrl
pop
mov
xor
dec
mov
movsb
xchg
in
rcrb
jns
loope
dec
and
pop
ret
add
out
push
push
and
mov
mov
jg
scas
icebp
pop
jae
lahf
dec
cmp
test
loopne
dec
pop
and
jo
sbb
pop
mov
lahf
or
js
xor
push
mov
sub
xor
popa
and
add
pop
fists
cltd
in
and
xlat
and
jl
divb
andb
push
mov
xchg
int3
mov
rep
mov
shrb
retw
clc
or
and
and
jns
enter
jae
sarb
fmull
lea
jae
in
lcall
fidivrs
pop
push
mov
int
popa
mov
lock
inc
pop
loopne
and
out
in
out
ss
leave
pop
stos
ss
xchg
dec
xchg
adc
jne
pop
jb
movsb
push
loope
inc
push
or
jmp
pop
jle
mov
xchg
test
dec
sub
jb
xor
and
or
push
cmpsl
bound
xchg
pop
mov
push
pop
fmuls
rcrb
cld
loop
xchg
push
arpl
add
movsb
out
xor
push
popf
rcrl
repnz
lcall
add
jae
mov
mov
popa
int
push
js
mov
inc
mov
adc
ret
sub
test
subl
mov
ret
enter
xchg
fistps
push
push
xchg
mov
push
mov
dec
rcrb
aad
and
adc
xchg
cwtl
and
es
mov
add
add
push
repz
leave
addr16
sub
jmp
movsb
lret
mov
dec
call
inc
add
stos
or
incl
jl
dec
mov
or
popa
bound
dec
jnp
test
loope
sbb
add
sub
sbb
loope
pop
and
mov
add
mov
adc
addr16
or
lds
pushf
sbb
mov
ret
int3
xchg
cmp
daa
jns
mov
cmpsl
mov
push
adc
in
outsb
and
pusha
pusha
icebp
es
mov
pop
sbb
sub
xor
lods
lock
divl
mov
mov
pop
push
bound
and
jge
aas
xor
shll
jns
mov
test
and
pop
fs
xchg
insb
xchg
add
xor
outsl
jp
call
dec
mov
xor
mov
lock
xchg
cmp
push
cmp
mov
cmpsl
shll
mov
das
fdivr
xchg
inc
aaa
sbb
cli
sub
add
mov
call
pop
and
mov
inc
xchg
jo
cmp
cmpb
loop
or
xchg
add
jg
leave
imul
mov
adc
or
inc
cmpb
lea
arpl
cmpsb
push
aas
imul
xor
pop
sbb
lahf
mov
xchg
pop
pop
jle
lahf
stos
push
inc
int
sub
int3
movsl
xor
xchg
xor
cmpb
mov
push
dec
insb
je
adc
jg
dec
cs
out
mov
fwait
jbe
jge
cli
test
addb
sub
jge
ljmp
jno
mov
jge
xor
int
xor
mov
mov
lea
or
into
bound
mov
pop
xlat
or
adc
jmp
and
iret
in
jb
jns
push
sti
fstpl
rcl
ret
imul
pop
cld
andb
mov
mov
ret
insb
iret
sub
mov
lods
aaa
shll
lea
and
stos
xor
inc
adc
sbb
fs
or
int3
mov
fmuls
lds
icebp
sub
cltd
adc
mov
and
mov
jecxz
lods
cmp
out
mov
or
ret
pop
cmovle
cmpsl
repz
cli
pop
add
xchg
scas
mov
xor
clc
pop
cs
fs
or
pop
test
push
lock
pushf
mov
mov
cltd
imul
mov
or
cwtl
aaa
test
fmull
daa
lea
xor
sub
shll
mov
push
das
xor
xor
imul
int3
mov
or
add
mov
and
aaa
push
push
jbe
fadd
popf
test
jl
les
mov
loope
scas
adc
fdivrs
and
inc
outsb
ret
clc
aam
cmp
mov
pop
cmpl
adc
add
jns
lahf
int
repz
push
out
rorb
pop
dec
pop
mov
jl
or
adc
dec
mov
cld
in
movsb
xor
in
nop
add
clc
adc
mov
out
xchg
mov
mov
mov
movsl
jp
imul
and
cwtl
scas
mov
sub
dec
out
cmp
sbb
aam
andl
cld
push
fs
adc
pop
cmp
cltd
jge
add
test
or
mov
pop
daa
lret
stos
sbb
int3
jmp
push
lea
in
add
xor
add
dec
nop
sbb
sbb
pop
clc
and
movsb
jmp
test
xchg
mov
jo
stos
int3
les
les
jl
or
xlat
cmc
push
ss
mov
sub
xchg
insl
loop
repnz
inc
mov
aaa
and
adc
or
repnz
mov
cs
stos
xchg
mov
and
aad
inc
mov
sti
mov
pop
mov
fcmovnu
xchg
vpsllw
pop
pop
out
cmp
enter
shrl
jmp
add
or
loop
add
jno
pop
scas
add
inc
push
into
mov
xchg
negb
push
mov
call
jecxz
rcrl
jle
in
adc
xlat
aam
mov
cltd
lea
pop
mov
ss
out
mov
sub
js
and
sbb
adc
adc
pushf
cmp
in
dec
cli
mov
and
pop
mov
cmpsl
scas
bound
out
mov
xor
in
pop
mov
mov
daa
xchg
dec
sbb
cld
sbb
lahf
outsl
xor
inc
sti
push
mov
lods
cmp
cmp
outsb
repz
sbb
aam
cmp
xchg
pop
xchg
xchg
jmp
jbe
cmpsl
and
data16
add
cltd
inc
mov
pop
dec
push
mov
mov
lcall
sub
scas
or
pop
pop
lods
mov
fdivp
sbb
cld
test
xchg
arpl
add
push
mov
ss
mov
cmp
adc
stos
fwait
pop
fcmovu
adc
js
or
pop
fisttpll
push
shlb
loop
in
call
les
xchg
sub
cmp
ret
inc
cmp
adc
aaa
xchg
decb
pop
ret
insl
mov
pop
clc
cmp
fs
imul
arpl
adc
stc
into
lcall
fcoms
sbbl
push
cmpsl
rol
inc
movaps
sbb
add
xor
fnstenv
mov
adc
xor
xchg
adc
add
cmc
shll
cmp
dec
scas
sbb
int3
lods
fidivl
sub
arpl
and
inc
inc
mov
mov
pop
rcll
aam
ss
adc
je
pop
ljmp
and
les
adc
mov
dec
jbe
mov
ja
in
inc
jo
push
fiadds
loope
lods
pop
dec
mov
and
xlat
xor
xorl
mov
iret
xor
rcl
add
es
fmulp
ret
out
fistps
jecxz
dec
or
es
mov
jbe
in
enter
pop
cld
adc
xor
aaa
jo
jl
or
push
xchg
mov
stos
adc
fnstcw
cmp
popa
je,pt
sbb
fisttps
mov
jo
push
push
scas
mov
sub
jnp
clc
adc
popl
pop
jne
and
rcr
out
cltd
int3
push
loope
mov
ret
cmp
lods
xor
into
cwtl
push
mov
test
xchg
sub
inc
and
in
loopne
mov
cs
adc
lcall
xchg
jg
mov
aad
sbb
jge
jl
int
sahf
nop
not
cli
xor
inc
enter
fsubrl
fsubrl
or
push
je
and
in
sahf
mov
cmp
icebp
push
int3
and
test
ja
or
stos
stc
mov
dec
xchg
fdivl
push
imull
fs
icebp
test
cli
rcll
addr16
dec
mov
mov
dec
lds
ja
cmp
or
push
sub
cltd
outsb
call
test
and
mov
xor
push
xor
fmull
push
inc
and
xor
mov
shl
adc
jle
in
lcall
dec
lods
mull
clc
push
leave
gs
jns
jo
or
sbb
dec
mov
add
pop
in
push
xor
mov
jae
pop
sub
ds
sub
data16
cld
divb
xchg
add
inc
or
mov
imul
aam
pushf
in
dec
pop
cwtl
mov
or
adc
dec
mov
jne
sbb
scas
mov
sub
and
xor
adc
out
xor
dec
sub
std
mov
jle
mov
stc
jno
test
mov
push
push
xor
sub
push
mov
add
inc
sti
and
subl
sbb
fnstenv
sahf
push
xchg
mov
pop
jmp
test
lock
cltd
test
jnp
test
shr
sbb
adc
mov
jp
mov
cvtpi2ps
loop
push
aad
andb
adc
push
jnp
daa
ficomps
es
cmpsb
aad
movsb
sub
jp
daa
inc
mov
jb
in
jo
in
mov
adc
push
cltd
sti
jecxz
cmp
adc
fsts
inc
inc
test
pop
fists
mov
and
mov
or
jle
fnstenv
scas
lret
xchg
mov
mov
pop
scas
xchg
add
in
arpl
push
or
and
rcll
inc
in
mov
push
add
cmpsl
push
mov
mov
and
jnp
pusha
ds
xchg
cmp
popa
jp
mov
adc
mov
ljmp
out
mov
or
add
push
push
push
orl
leave
mov
into
test
imul
xor
sub
ljmp
popf
iret
xchg
add
lea
push
mov
pop
jl
dec
addr16
dec
ficompl
dec
pop
inc
sbbb
movsb
mov
push
jecxz
movsl
push
or
test
scas
lods
and
dec
inc
sbb
inc
mov
pop
push
outsb
popa
pop
xchg
pop
pop
hlt
aas
popa
movsb
push
xchg
ljmp
sub
mov
into
mov
adc
out
int3
push
push
xlat
jae
lods
mov
repnz
pusha
add
pop
faddl
ret
add
out
pop
pop
fwait
jbe
std
pop
jb
sbb
subb
inc
push
cmp
jl
iret
ret
aas
jbe
push
adc
cmc
mov
mov
mov
test
jns
pop
rorl
push
xor
rcrl
pop
xchg
fwait
mov
fs
js
dec
testb
mov
fldcw
adc
push
jp
xor
or
push
xor
sbb
add
out
cmp
push
or
mov
jae
inc
adc
fcomi
jmp
lret
outsl
pop
out
push
andl
iret
fistpl
jb
outsl
and
xchg
push
pop
xlat
mov
jp
lret
jecxz
sbbl
repnz
ja
fimuls
pop
mov
xor
lret
adcl
xlat
and
mov
jge
sub
shl
ret
adc
push
orl
insb
bound
jge
rcrb
mov
repz
cmc
push
dec
add
call
xchg
aam
inc
lea
lret
scas
ret
pop
repnz
rcrl
jno
xlat
addr16
addr16
mov
dec
fs
in
test
cmp
addr16
dec
out
cmc
jae
mov
les
cwtl
mov
stos
callw
addl
lret
cmp
sbb
loopne
clc
mov
pop
xchg
into
in
mov
xchg
push
xlat
mov
loop
jle
inc
push
jmp
push
jne
dec
divl
leave
inc
jmp
daa
adc
sub
aam
and
mov
mov
dec
jns
push
sub
fsts
clc
out
push
scas
rcll
dec
es
mov
sbb
loope
push
and
pushl
ds
fbld
mov
loop
mov
daa
insl
pop
cmp
xlat
in
mov
sub
xchg
ret
sub
outsb
sbb
mov
jmp
mov
and
mov
decl
in
mov
aam
cmc
mov
idivl
inc
xchg
les
insl
cmpsb
les
add
or
cltd
bound
pop
filds
adc
adc
cld
roll
mov
mov
mov
push
out
fwait
xor
pushf
mov
or
sbb
lea
inc
sahf
insl
jno
out
lds
icebp
outsl
cmp
faddp
mov
fwait
out
lods
jge
xor
pop
pop
mov
stos
movsb
imulb
shl
sarb
jge
negb
adc
stc
pop
dec
les
xchg
testb
push
mov
adc
jnp
lret
gs
lods
pop
jb
sbb
data16
mov
push
xor
cwtl
mov
bound
in
inc
addb
icebp
dec
lds
loope
movsb
mov
testb
sub
sbb
adc
xchg
inc
dec
dec
jne
daa
jp
fwait
repnz
jg
cwtl
adc
sub
sub
cld
hlt
insb
mov
call
fistpll
mov
jl
jge
mov
loope
xchg
pusha
stos
sub
pop
sbb
cli
ret
lock
adc
mov
mov
or
test
mov
insb
and
out
stos
inc
into
xor
popa
sub
mov
outsl
jae
inc
dec
add
adc
jl
arpl
repz
mov
pop
dec
add
or
mov
pop
adc
or
movsb
lret
movsb
pop
loop
stos
lcall
add
push
int
sbb
pop
call
dec
sahf
mov
sti
lock
arpl
test
orb
mov
mov
xor
push
cmc
xchg
stos
xchg
mov
mov
lods
sahf
das
cs
popf
mov
repz
pop
enter
movsb
f2xm1
and
mov
mov
and
les
insb
test
pop
inc
mov
movl
mov
ficoml
repz
xchg
pop
xchg
adc
aam
jge
shll
xor
xor
aam
hlt
or
and
or
mov
test
cmc
push
lcall
mov
adc
mov
jecxz
pop
push
cmp
fildl
push
sti
out
movl
test
and
push
scas
inc
ljmp
outsb
insl
jmp
xchg
cld
cmp
adc
mov
out
stos
add
test
cli
pop
xor
test
sahf
inc
shlb
test
mul
fs
mov
mov
aas
out
cwtl
jo
pop
mov
lcall
shll
pop
sub
ret
int3
inc
adc
or
push
aad
sub
pop
lea
dec
in
and
mov
test
scas
xchg
aaa
ret
jl
ret
int3
mov
sub
xor
and
pushf
outsl
sahf
scas
mov
sbb
insb
mov
loop
pushf
fcomps
lea
popl
aam
adc
stos
test
fs
fcmove
xchg
push
in
xor
pop
aad
mov
jl
push
push
pop
pop
lcall
aas
das
jmp
fwait
mov
addr16
xor
add
cs
adc
lret
insb
jl
stos
push
out
cld
xchg
jns
xorb
insl
imul
xchg
or
aad
cmp
pop
xchg
xor
insb
ds
les
dec
and
mov
cli
mov
out
pop
nop
repz
jecxz
fs
in
pop
fs
stos
in
mov
xchg
out
dec
cli
xchg
push
test
pop
and
aam
pop
xchg
jns
movsb
data16
out
fwait
pushf
xlat
mov
pop
sbb
aas
testb
xor
subl
cmp
movsb
mov
mov
imul
xor
cli
stc
mov
xor
jmp
out
mov
clc
adc
xlat
int3
mov
push
pop
mov
lahf
fisttpll
sub
clc
jns
pop
call
mov
nop
push
ficoml
loope
stc
cmp
inc
fcompl
jmp
icebp
lods
stos
cmp
aad
jmp
aam
xor
bound
cld
cltd
shl
sub
mov
nop
inc
jnp
jb
cmp
add
xor
loop
ror
fwait
xchg
hlt
inc
repz
or
ret
or
dec
xor
test
jb
aas
roll
push
add
adc
in
cld
in
pop
push
pop
jb
jg
sub
enter
pop
cmp
mov
loope
mov
lea
mov
int3
orb
mov
pop
add
dec
push
mov
pop
and
and
jae
sbb
mov
lea
sub
fbstp
into
sti
mov
jp
sub
sub
add
mov
outsb
pusha
sub
out
mov
ret
insb
fsts
adc
xchg
push
bound
mov
adc
fmull
pushf
jmp
adc
test
or
xor
test
add
adc
bound
mov
xchg
and
clc
movsl
mov
adc
cmpsb
or
xchg
in
sub
dec
mov
jno
xlat
push
mov
dec
sub
enter
iret
stos
jmp
sub
xchg
popa
es
call
imulb
std
pop
mov
push
shll
push
stos
movsl
test
ficoms
loop
cmovae
jmp
xchg
arpl
loope
lods
jo
or
dec
cmp
xchg
lock
xchg
cs
mov
cmp
iret
pop
aad
pop
and
fnstenv
push
dec
dec
and
sub
and
xor
stos
push
push
add
out
sahf
inc
mov
out
jb
ss
bound
sbb
test
pushf
sbb
push
daa
ret
ret
popf
xor
call
add
jb
mov
and
insb
clc
add
popf
and
imul
cmc
and
ds
mov
push
rcll
add
insl
adc
mov
add
sbb
push
sti
mov
insl
mov
lahf
jb
rolb
and
cmp
jb
sbb
mov
add
and
push
fwait
int3
clc
imul
ja
in
dec
mov
dec
and
gs
cli
cmpsb
pop
mov
cld
scas
test
push
sbb
popf
sub
leave
cvtps2pi
dec
fsin
pop
jbe
or
adcb
mov
xchg
fsub
aaa
cld
pusha
add
cmp
dec
inc
inc
inc
xor
and
sbb
xor
cmp
fadds
sub
int
jge
sbb
ret
fiaddl
in
jge
push
xchg
cmpps
stos
ds
add
jno
sub
pop
sub
inc
stos
adc
adc
lea
and
stos
frstor
cmp
add
loop
fnstsw
out
sti
or
stos
adc
sub
in
cmp
dec
jbe
jge
xor
inc
add
insb
dec
sub
test
pop
jae
or
adc
fldt
cmp
and
fucom
lods
push
and
push
leave
jl
ds
movsb
imul
fs
add
jmp
fstps
enter
push
push
insl
fs
mov
jge
cmp
cmp
inc
aaa
mov
ljmp
in
push
in
jnp
xor
repnz
imul
xchg
adc
add
dec
jmp
or
mov
movsb
sub
mov
xor
xor
mov
adc
ret
sbbl
sahf
lret
inc
sub
cltd
jl
cmpsb
add
pop
loop
ds
push
cmp
adc
call
int
fstpt
mov
pusha
jo
ds
insb
xchg
dec
arpl
fnstsw
jg
inc
testl
imul
sub
xchg
cmp
xchg
ljmp
repz
ja
cmp
or
mov
cmp
jo
xchg
or
jb
inc
into
mov
mov
cmp
or
add
dec
stc
sbb
mov
mov
or
sbb
cltd
jno
test
pop
notb
outsl
add
xchg
cmp
xlat
shrb
imul
cld
push
cmpsb
push
sbb
lcall
pop
add
repnz
aad
sbb
iret
pushf
imull
push
insl
adc
pop
sti
mov
les
jmp
sbb
jmp
mov
daa
push
xlat
xchg
insl
bound
jg
pushf
pop
mov
xor
daa
inc
jno
test
hlt
xchg
lret
jmp
faddl
mov
ljmp
call
imul
data16
xchg
sub
das
imul
pop
sub
xor
test
lret
xor
sbb
pop
btr
push
lea
cmpb
pop
sbb
inc
mov
fcompl
dec
cs
gs
lcall
mov
aas
fmulp
and
addr16
les
loope
ss
leave
add
sub
es
pop
je
icebp
push
out
push
popf
nop
or
or
shr
mov
pop
inc
sti
testl
and
cmp
mov
adc
sbb
int
add
imul
sub
pop
mov
push
repnz
push
cmp
sbb
add
pop
mov
inc
sbb
or
jge
push
fbstp
jecxz
sarb
pop
test
notl
xchg
mov
cmp
in
inc
lahf
mov
js
inc
stos
and
leave
cli
imul
loop
xchg
pushf
out
jae
xor
aaa
loope
push
hlt
movsb
cmp
jns
mov
in
sub
jmp
stos
cld
lahf
add
mov
cmp
xchg
js
xchg
pushf
icebp
divl
das
pushf
je
add
adc
push
cmpsl
aaa
testb
or
icebp
scas
test
movsl
and
xor
push
mov
popf
call
out
xlat
clc
roll
and
cmp
rcrb
repz
out
into
repz
mov
in
pop
fsubrl
mov
in
xchg
ja
idivb
cld
add
das
loope
mov
ja
mov
scas
xor
xor
mov
cmpsl
mov
pop
and
sbb
or
icebp
sti
jno
cwtl
add
xchg
sub
jbe
fxch
push
and
cmc
jae
fisttpll
mov
mov
push
sbb
or
mov
lret
adc
xchg
sub
in
movsl
sub
loop
test
pop
stos
and
mov
mov
inc
jno
andl
leave
lock
aam
jne
push
loopne
push
mov
mov
out
add
lods
xor
sub
and
mov
in
xor
ficoms
adc
inc
inc
andl
popa
cmp
cs
enter
mov
mov
pop
flds
shll
aas
sahf
cmp
dec
cmp
test
dec
loop
js
imul
xor
lods
cs
mov
xchg
sbb
or
int3
movsb
mov
loopne
inc
xchg
jp
and
lods
pop
cli
inc
insl
lds
inc
mov
andb
int3
xchg
fstpt
pop
shlb
cltd
push
push
or
insl
hlt
insb
ds
xchg
ret
adc
div
aas
out
inc
dec
fsubs
jl
je
movsl
popl
nop
movsb
push
aaa
dec
into
pop
imul
aas
rcrb
in
hlt
xchg
sbb
mov
inc
mov
mov
lea
sbb
iret
cmp
cmp
cmp
jne
gs
lods
xchg
xor
sub
rclb
out
mov
movsb
push
adc
and
push
dec
iret
mov
pop
dec
lret
jnp
add
dec
ret
repnz
gs
xchg
xor
outsl
pop
jge
in
push
add
xchg
dec
sarb
pushl
out
aaa
stos
or
cmpsl
and
pop
xor
mov
call
push
xor
in
pop
pop
pop
xchg
and
xchg
pshufw
pushf
ja
xchg
or
clc
mov
pop
sbbb
sub
dec
sbb
test
rolb
mov
popf
and
inc
mov
lcall
es
lcall
cld
or
in
xor
inc
add
push
flds
int3
mov
sub
insl
fstl
mov
cmp
mov
addr16
push
jle
dec
cs
adc
imul
add
mov
xor
movsl
dec
cmc
dec
push
cli
inc
mov
lret
subl
imul
xchg
push
aaa
sub
sub
lret
daa
adc
pop
pop
adc
inc
bound
mov
repz
fstps
imul
jb
bound
xor
sbb
xchg
mov
ror
outsl
cmp
aaa
pop
mov
subb
add
outsb
in
push
in
movb
cmp
pop
stos
push
sti
shlb
push
call
push
push
sbb
in
daa
ret
mov
jbe
popa
fldcw
adc
xchg
adc
xchg
jmp
add
data16
stc
mov
pop
jae
mov
sti
movsb
jle
inc
pop
dec
imul
inc
sbb
adc
inc
std
mov
lock
xchg
adc
jle
outsb
rorb
sub
into
fwait
and
fdivr
loope
cmc
mov
sar
xchg
mov
dec
popa
mov
fndisi(8087
cmp
imul
xchg
sub
fwait
enter
lcall
lods
lret
ficompl
repnz
inc
repnz
sbb
xor
es
add
jo
sub
test
or
bound
repnz
dec
pop
lock
push
xor
xor
in
imul
cmp
dec
and
arpl
and
inc
fistl
sub
jecxz
push
das
mov
jne
int
cmp
cmp
dec
imul
daa
out
push
xchg
pop
mov
es
dec
pop
nop
push
dec
jg
push
jb
jae
inc
pusha
insb
inc
sbb
sbb
outsl
and
lret
test
sub
xchg
mov
add
add
sbb
dec
cmp
jp
fwait
mov
cmp
popa
les
xchg
fistps
pop
dec
or
lahf
pop
xor
iret
cltd
mov
je
aam
imul
dec
scas
push
and
pop
xchg
add
adc
js
fidivrl
xchg
dec
push
mov
shrl
push
fsubrl
pop
jnp
cmp
out
rcrl
push
cmp
inc
aaa
scas
dec
mov
cmova
pop
popa
cmp
adc
ljmp
arpl
mov
lahf
xchg
push
jge
cwtl
adc
and
in
out
and
and
sbb
push
aam
push
js
fwait
dec
ret
dec
cmp
jg
jno
pushf
pop
xor
push
xchg
movnti
sub
pop
testb
bound
add
dec
scas
enter
shrb
jmp
or
mov
xchg
jo
lods
cmc
or
pop
in
insb
xchg
jle
cmp
lea
rcrl
fistpl
lods
addr16
or
or
mov
push
sub
xchg
cmp
cs
push
out
ss
popf
clc
call
add
out
push
and
je
ret
shl
sub
pop
testb
jo
pop
rorl
js
cmpb
cs
cmp
pop
cmp
imulb
xchg
push
movsb
mov
add
movsl
jg
shlb
pushl
das
sub
imull
jne
test
mov
repnz
les
mov
adc
insb
ret
mov
fcom
mov
xchg
fldcw
xor
cmpl
test
sub
into
push
popa
sbb
jne
push
les
clc
xor
sbb
sub
jge
out
jp
scas
sbb
xlat
shrb
sub
mov
xchg
or
cmp
mov
fbld
movsb
jns
prefetch
cmp
aam
or
test
or
cmp
cmp
cli
push
fnstcw
cld
aam
orb
ficoml
xor
xor
add
mov
in
jb
out
and
ljmp
lahf
jge
fcompl
push
add
and
inc
cmp
push
cltd
cmp
xor
cmpsl
ret
inc
lods
les
lret
and
out
mov
fwait
ret
sub
sub
mov
and
xor
addr16
dec
jge
pop
xor
clc
xor
lds
test
sti
lods
stc
and
xchg
loope
cld
insb
fnstcw
pop
cmp
inc
mov
adcl
or
mov
iret
mov
mov
jp
inc
mov
in
pop
add
movsl
cmpsb
into
add
push
sub
pop
jle
jl
cmp
sub
cmpsb
push
repz
jle
arpl
aad
push
mov
les
dec
call
jno
sbb
and
inc
loopne
ret
and
jnp
fldt
inc
jbe
test
pop
outsl
mov
add
mov
lds
cld
imul
movsl
out
rcrl
sub
pop
addb
imul
sbb
hlt
jb
inc
fiaddl
shl
adc
in
mov
xlat
test
hlt
scas
mov
mov
adc
imul
and
mov
les
lret
cmc
add
xor
lock
jne
xor
add
cmc
mov
adc
cmp
mov
loop
inc
jge
in
cmp
jb
push
and
push
fldcw
lret
add
fst
pop
sbb
mov
fsubp
mov
aaa
roll
insb
mov
cmp
pop
inc
xor
cmpsb
pop
inc
cmp
icebp
cs
or
outsb
aad
jae
cwtl
cmpsb
sahf
push
inc
cmp
in
pushf
nop
jecxz
pusha
pop
mov
outsb
dec
add
push
pusha
popa
std
test
xchg
test
adc
hlt
fs
cmc
dec
data16
cmp
mov
dec
xor
add
lea
fwait
jmp
test
inc
push
lea
mov
jnp
aaa
pusha
movsl
push
out
mov
jbe
inc
lea
sbb
pop
es
sub
lcall
lahf
cld
fcmove
sti
mov
sub
jle
fimull
sub
nop
pop
ror
int
stc
mov
btc
lods
sbb
in
push
sti
mov
fstl
mov
fnstenv
test
lods
sbb
mov
sbb
adc
jg
jo
fidivs
aaa
ficoml
hlt
insl
xor
repz
xchg
pop
inc
test
or
add
pop
push
adc
mov
inc
fs
mov
out
lret
orl
aam
add
pushf
int3
mov
cld
lcall
orl
mov
xor
and
cmp
adc
push
jle
sbb
pushl
cmp
sbb
inc
mov
mov
add
mov
inc
xor
out
jb
cs
add
ss
ficoml
rcrb
movsb
std
int3
cs
aas
in
loop
mov
hlt
imul
test
mov
cltd
sub
dec
aad
ljmp
hlt
dec
add
lds
addl
lret
bound
int3
jmp
jo
xor
mov
cmpsl
add
fsubrs
insb
jb
jbe
xchg
xor
cmp
pop
jbe
call
ror
jecxz,pn
in
cmp
das
xchg
xor
movsl
ljmp
pop
and
and
rcrb
fs
cs
push
xchg
pop
insb
lods
pop
add
cmp
jmp
xor
andb
lea
push
aas
fstps
dec
jo
in
pop
aaa
pop
jne
and
shll
push
sbb
xchg
adc
leave
jecxz
dec
int
sbb
pop
stos
scas
int3
or
lret
call
push
push
in
dec
insb
xchg
and
sbbb
leave
push
std
jne
lret
leave
sbbl
sbb
rcl
dec
nop
stos
add
or
popa
aas
sbb
jne
xor
scas
es
in
aaa
cmp
dec
sahf
imul
cmpxchg
aas
jno
sbb
lods
jmp
lock
test
ficompl
lds
push
sbbb
mov
lods
mov
add
shl
pop
lret
or
fimull
int
jns
push
es
imul
std
push
sub
outsb
push
dec
loop
es
stc
loopne
mov
aas
mov
or
adc
push
sbb
ja
xchg
push
scas
pushf
mov
inc
cmp
arpl
popa
xor
arpl
xchg
out
and
add
jae
aad
dec
or
mov
xlat
adcl
ss
call
push
shr
sbb
imul
xor
int
sub
popa
push
jne
mov
inc
mov
shl
mov
dec
scas
mov
or
fsubp
adc
push
push
hlt
and
movsl
xor
inc
jno
inc
ds
notb
ret
sbb
or
mov
mov
lcall
sub
inc
adc
fidivl
imul
sub
scas
mov
stc
je
adc
pop
mov
mov
repnz
sbb
dec
cld
and
ds
je
push
enter
and
xchg
xlat
daa
xor
js
mov
out
mov
cwtl
dec
stc
outsl
movsl
mov
push
nop
or
imul
sbb
nop
cmpb
ds
fdivl
shll
les
mov
bound
ljmp
shl
fnstenv
cld
lods
pop
int
or
enter
push
jae
rorb
adc
mov
cli
stc
mov
insb
rorl
dec
mulb
or
mov
fs
pop
mov
dec
gs
xchg
adc
rclb
pusha
push
fwait
insb
jae
inc
mov
test
sti
dec
pusha
leave
int
push
inc
pop
mov
clc
test
inc
pop
cwtl
mov
int
mov
sbb
mov
sbb
and
mov
sbb
stos
cwtl
jecxz
ja
mov
add
scas
mov
mov
xchg
data16
movq
cli
cmp
outsb
xor
jmp
popa
test
scas
mov
or
add
clc
ret
ja
lock
sti
or
push
orl
pop
add
mov
inc
jns
gs
aam
stc
test
pop
ss
xchg
loop
inc
lahf
and
clc
popa
xchg
fidivrs
xor
scas
mov
call
scas
adc
fs
ja
inc
movsb
negb
clc
and
push
scas
in
inc
or
in
frstor
mov
cwtl
movsl
push
movsb
ficomps
inc
cltd
ljmp
arpl
in
sarb
add
dec
out
repz
xchg
lret
out
mov
fsubr
lea
lock
gs
lret
fldt
push
sbbl
dec
sbb
loopne
jecxz
aas
js
inc
or
fmulp
lahf
hlt
mov
lahf
push
sbb
sbb
ja
insb
inc
jno
mov
sbb
rorb
add
push
pop
test
cmp
and
add
lcall
addr16
lea
imul
shl
lods
cmpb
cmp
bound
xchg
ss
std
imul
es
jns
aad
scas
cs
icebp
into
xchg
in
fwait
loop
adc
shlb
insl
test
pop
in
xchg
xor
mov
test
mov
jne
add
rcll
lock
sub
rolb
mov
insl
out
std
xor
mov
sub
fs
leave
out
int3
push
mov
push
and
inc
out
outsb
sub
out
mov
mov
outsl
push
push
sbb
and
sbb
scas
adc
out
xlat
rorl
add
or
lock
movsl
sbb
push
scas
push
addb
rorl
pop
mov
push
adc
xchg
js
sbb
xor
mov
push
mov
mov
jnp
mov
xchg
jno
dec
adc
and
mov
jecxz
or
cwtl
pushf
pop
cmp
inc
stc
cmc
cmp
scas
add
jae
jecxz
dec
sub
clc
xchg
sub
test
lock
push
jmp
and
push
movsl
cmp
cld
shlb
pop
cmp
popf
add
mov
out
xchg
fbstp
lods
mov
xchg
jl
call
pop
aas
dec
das
pop
push
fimull
cwtl
pop
jno
add
call
sbb
fistps
mov
xor
jne
push
pop
mov
fcoms
out
subb
jnp
adc
roll
adc
mov
sub
sub
jb
jne
pop
jno
mov
sub
in
daa
enter
inc
or
gs
popf
rcrb
daa
inc
cmpsl
aas
arpl
leave
and
call
stc
or
add
mov
data16
jg
imul
out
dec
mov
dec
mov
push
negb
or
shrb
dec
test
aaa
mov
cs
xlat
ret
mov
test
rcll
pusha
ss
mov
in
xchg
fiaddl
jmp
sub
xor
xchg
adc
insl
cmc
dec
bound
lds
mov
pop
adc
sub
sbb
lret
xor
push
clc
mov
dec
incl
aam
iret
mov
add
xchg
mov
int3
gs
dec
aad
int3
fcompl
aaa
push
pop
mov
enter
cmp
cmp
jmp
mov
jmp
mov
inc
aas
mov
pusha
mov
popf
dec
pop
mov
mov
std
cs
jl
and
ret
mov
mov
outsl
pop
push
mov
push
fildl
shrb
xorb
inc
imul
shl
sahf
icebp
push
mov
jbe
imul
imul
addr16
rolb
push
or
repnz
cmpb
xor
cmp
inc
mov
sbbb
lock
sub
mov
outsl
std
sub
xchg
fsubrs
fldcw
jb
adc
std
mov
cmpsl
mov
ja
aas
xor
xchg
test
mov
and
xchg
cvtps2pd
clc
push
gs
cmp
mov
insl
mov
xchg
fiadds
push
in
cmpsl
push
fmul
lahf
ss
js
lret
mov
xor
test
sbb
adc
jo
ds
cmp
sub
mov
mov
out
enter
push
ljmp
fidivs
daa
leave
popl
mov
shlb
adc
pop
jmp
movsb
mov
cmp
fisubrs
sbb
mov
aam
or
mov
div
xor
push
mov
scas
je
mov
repz
enter
or
rcl
xchg
mov
loope
jo
dec
clc
lahf
out
adc
xlat
mov
dec
dec
mov
outsl
in
leave
xchg
lahf
pop
pop
in
xchg
adc
sub
push
cmp
inc
in
cld
int
fstps
xchg
or
mov
jl
negl
push
decl
pop
jo
or
jp
xor
ss
jmp
fiadds
push
add
sbb
or
or
or
lret
out
xchg
stos
pop
aad
inc
jge
bound
insb
inc
fstpt
jecxz
bound
and
jecxz
pop
pop
push
bswap
jge
pop
cmp
clc
int
dec
rcl
lahf
cltd
sbb
daa
neg
pop
in
out
jne
mov
jmp
lret
xchg
or
dec
addr16
mov
insb
xchg
fs
xor
pop
call
fdivrs
pop
sbb
pop
sub
sahf
mov
pop
or
ja
inc
cmp
in
cmp
mov
es
jge
xor
rcl
xchg
lret
popf
mov
xchg
fucomi
mov
jae
push
jp
pop
stc
cli
jmp
ficoml
mov
jl
xor
sub
pop
mov
sbb
bound
xchg
adc
pop
arpl
cld
cmp
or
rorl
lds
mov
lods
adc
outsl
aad
sbb
test
dec
mov
pop
dec
add
sbb
adc
scas
adc
push
mov
test
dec
insl
int
mov
pop
or
jp
pusha
cmpsl
fidivs
data16
mov
xchg
push
sti
daa
mov
sbb
in
dec
sub
lahf
ljmp
in
mov
dec
test
shlb
bound
push
cmpsl
or
icebp
xchg
std
ficoml
loop
inc
idivb
sbb
test
lock
xchg
fildll
jmp
adc
fwait
push
nop
gs
mov
xchg
dec
lcall
push
movsl
jb
xor
shll
sbb
add
jle
cld
sbb
xor
jl
jmp
push
mov
xor
fnstsw
or
and
dec
loop
mov
push
sub
xchg
jl
clc
mov
push
jo
pop
lea
mov
mov
sbb
test
lret
cmpsl
scas
mov
xor
pop
iret
movsb
repz
jge
addl
xor
cli
push
or
out
fidivl
and
leave
lock
push
xor
lret
hlt
addr16
push
jnp
pop
out
adc
outsl
mov
mov
pop
jno
dec
jnp
push
bound
pop
shlb
lahf
jg
bound
pushf
sbb
in
mov
pop
or
lret
xor
sahf
lea
jne
jle
xorb
mov
sbb
in
jp
clc
xor
pop
xor
ss
int3
mov
fdivrs
pop
enter
loop
loop
sti
push
scas
rorb
jl
mov
push
arpl
or
mov
dec
ds
shufps
cmp
and
das
mov
mov
fnstsw
rorl
addr16
aad
lahf
cmp
fistpll
in
sarl
out
sar
aas
test
enter
mov
shll
ficompl
in
in
addr16
or
and
pop
push
jb
pop
mov
and
jp
add
inc
sub
xor
add
int3
mov
mov
xor
add
mov
inc
lahf
dec
outsl
sub
cwtl
dec
lahf
fnstenv
daa
mulps
adc
pop
ret
sub
out
icebp
ret
fsubr
out
sbb
iret
jl
icebp
add
mov
lret
cmp
pop
mov
sub
xchg
std
xchg
sub
xlat
stc
pop
dec
popf
dec
push
dec
test
and
test
mov
pop
xchg
fmull
into
push
xchg
in
aam
lret
mov
sbb
fwait
repz
insb
out
push
mov
push
lock
inc
insl
sahf
popf
cmp
xchg
mov
sub
mov
loop
pushl
mov
inc
pop
sbb
inc
in
adc
call
sbb
mov
cmp
pop
cs
mov
sbb
push
jg
pushf
and
push
inc
adc
out
out
std
pop
into
mov
dec
add
shll
xchg
sahf
sbb
xor
cmp
fwait
inc
lods
pushf
adc
dec
pop
shrb
cli
push
jl
and
int
outsl
pop
in
jmp
faddl
dec
mov
dec
jbe
stc
outsb
dec
arpl
decb
sti
mov
orb
loop
pop
xor
push
shl
xchg
test
gs
pop
test
push
lret
in
sbb
je
aad
inc
sbb
fidivl
jbe
mov
int3
sub
adc
xchg
dec
lock
push
and
jnp
das
push
jecxz
jb
ret
sub
push
or
mov
add
std
push
xchg
sti
sbb
cmp
fcmovnbe
push
sub
mov
push
mov
adc
insb
push
sti
dec
dec
test
stos
aam
aaa
pop
js
push
sbb
out
dec
mov
xchg
xor
mov
mov
movsl
and
push
dec
lret
xchg
pop
cmp
leave
in
and
xor
scas
xchg
inc
push
sub
lahf
xor
adc
pop
inc
jnp
cwtl
pop
dec
cmp
mov
fbld
pop
dec
push
test
inc
adc
stc
stc
pop
fldt
and
push
repnz
dec
sarb
cltd
and
ficoml
add
inc
sbb
cwtl
push
je
ljmp
mov
pop
call
sbb
push
aad
cltd
lcall
cwtl
call
xor
aam
fld
aaa
daa
xor
scas
shrl
adc
outsb
inc
pop
movsl
push
mov
dec
add
jo
mov
dec
jae
lret
pop
push
mov
push
roll
mov
js
cmp
mov
sbb
stos
and
xchg
jbe
jl
in
clc
in
fldt
pop
imul
push
icebp
cltd
cmp
jle
jmp
mov
sub
ficompl
out
adc
pop
repnz
adc
fst
into
dec
adc
cltd
jge
jmp
pop
icebp
daa
nop
mov
aas
jg
insb
mov
xchg
scas
daa
inc
add
mov
and
test
inc
mov
adc
iret
mov
pop
lcall
daa
imul
xchg
jge
insl
mov
add
mov
cmpb
cmc
push
xchg
shl
sbb
jg
mov
test
mov
inc
out
and
adc
sub
pusha
mov
add
in
xchg
jmp
xchg
jecxz
call
xor
cmp
popf
sbb
dec
imul
jbe
sarl
out
jnp,pt
push
and
fwait
incb
add
jnp
stos
add
jge
imul
pushf
or
lahf
fcompl
xor
xchg
push
mov
inc
push
imul
or
pop
in
cmp
js
jmp
pop
jge
xchg
bound
jmp
loope
sub
test
add
cmpsl
and
xor
jnp
sbb
hlt
or
pop
addr16
adc
enter
into
jg
icebp
out
or
es
loope
dec
inc
iret
lret
imul
mov
pop
mov
sti
iret
sub
mov
stos
pop
xchg
jle
sbb
sub
in
rcr
lds
popf
xchg
inc
outsl
push
pop
stos
cmp
outsb
jle
jl
sub
pop
jae
testb
icebp
pop
xchg
iret
cwtl
lods
mov
notb
in
push
or
lods
shll
rorl
jmp
js
out
xorb
sbb
xorl
lods
sub
mov
fisubs
cld
mov
pop
in
int
das
lcall
lret
or
rcrb
mov
push
mov
dec
aaa
cmp
fiadds
mov
iret
sbb
sbb
adc
mov
xchg
mov
sub
cmp
out
mov
inc
add
cmpsb
adc
sar
push
jae
data16
jge
rcr
cmp
clc
push
or
mov
test
adc
aam
pop
stos
sub
dec
sub
insb
orl
adc
mov
sbb
js
cmp
loope
and
mov
in
jecxz
dec
sbb
push
mov
or
popa
rcr
lahf
push
sub
xchg
sub
jno
cld
dec
push
call
mov
lret
sbb
jle
and
xchg
flds
int
loop
mov
cmp
jnp
mov
mov
test
out
add
sbb
sti
push
adc
inc
add
lret
cmpsl
adc
dec
jno
test
adcb
test
gs
mov
jno
test
je
icebp
push
mov
inc
pop
push
cmp
jmp
data16
imul
fcmovnb
adc
fimull
mov
lea
mov
es
outsb
leave
xor
jne
in
pop
dec
pop
bound
or
push
lahf
dec
in
insb
sbb
mov
sbb
cmp
int3
popa
sub
mov
mov
in
xchg
nop
dec
xor
pop
jecxz
sbb
ret
pop
pop
mov
mov
movsl
enter
adc
jae
setnp
inc
leave
cmp
adc
pop
add
movsl
aas
adc
or
xor
jne
movsl
mov
mov
lcall
rcl
jp
ret
mov
jecxz
push
push
inc
bound
pop
daa
lea
stos
mov
insb
push
cli
add
out
xor
pushl
mov
jbe
sbb
icebp
sbb
jecxz
lock
pusha
xor
cmpsb
inc
icebp
gs
cmc
mov
icebp
mov
in
call
sub
nop
in
lcall
lea
push
mov
xchg
push
mov
leave
out
mov
jmp
mov
repz
adc
int3
lds
cmp
add
mov
dec
mov
jnp
push
jne
push
push
insb
divb
push
jl
mov
repz
cmc
stos
cmp
aam
andb
fildll
shlb
icebp
push
addr16
out
rcrb
inc
or
pop
inc
pop
mov
lret
mov
mov
mulps
xlat
xchg
push
clc
fs
lods
movsl
dec
shlb
outsl
lea
adc
les
mov
cmp
in
test
inc
push
cmpsb
bound
pop
movsl
cltd
roll
mov
enter
or
lock
inc
ret
aaa
dec
jo
mov
addl
scas
xor
mov
mov
push
in
test
inc
adc
adc
ljmp
mov
adc
div
aad
xchg
cmpsl
mov
xchg
cli
test
popa
daa
pop
iret
add
pushl
jmp
inc
pop
cs
sbb
xchg
cmp
and
pop
and
and
xor
push
test
mov
xor
cmp
ror
pop
filds
and
pop
xchg
fwait
jle
loop
fisttps
lods
mov
in
mov
in
ss
in
jmp
pushf
push
inc
popa
or
sti
in
sti
loop
jecxz
xchg
xor
jnp
mov
mov
rorb
lds
adc
data16
add
inc
icebp
xchg
outsb
mov
pop
jl
mov
mov
mov
mov
push
lods
lahf
inc
call
or
cmpsb
cmpsl
push
je
pop
mov
pop
ljmp
loope
nop
pop
mov
dec
mov
ret
or
mov
imul
jecxz
push
or
scas
mov
pop
out
mov
jbe
loopne
sti
cmp
adc
int
cmc
mov
xor
sbb
xchg
mov
mov
xor
stos
or
cmpb
js
call
inc
inc
aam
arpl
loope
in
cld
ljmp
or
jb
fistpll
aaa
cmp
repnz
fdivrl
daa
lea
jno
std
lcall
cmp
dec
into
fdiv
dec
cmp
je
xor
dec
insb
fucom
adc
rolb
fcoms
xor
xorb
stos
add
sbb
or
leave
mov
pusha
xor
outsl
adc
xlat
fidivl
xchg
testb
js
out
lock
test
dec
add
repnz
mov
push
addr16
adc
icebp
sbb
adc
fs
ss
test
mov
out
mov
nop
adc
ret
jnp
in
cmc
pusha
dec
pop
pop
addb
jno
js
cmp
mov
dec
cmpsl
ds
push
ss
jmp
aam
jge
jmp
jne
inc
pop
dec
xor
ret
pop
test
mov
es
adc
lods
nop
call
add
fwait
iret
clc
mov
xor
insb
push
xor
ds
pushf
jne
push
xchg
gs
aam
jge
test
or
pop
sahf
frndint
or
adc
jo
push
mov
mov
and
pop
hlt
cmc
icebp
xchg
fidivl
xor
fistpl
dec
call
mov
adc
test
push
leave
in
mov
mov
lahf
add
rcr
leave
pop
outsl
in
stos
leave
mov
mov
jle
pop
pop
pop
cmp
xor
imul
mov
lds
or
xchg
xchg
je
adc
mov
incb
jl
mov
pop
inc
xor
push
add
jecxz
add
testl
cmpsl
daa
inc
sub
outsl
push
push
cmp
mov
inc
pop
dec
inc
push
addl
xlat
mov
inc
lahf
loop
in
ret
sbb
sub
dec
xor
in
mov
fcom
mov
mov
fdiv
cmp
idivl
inc
cmp
lods
cmc
repz
mov
cmp
jl
fisubl
inc
sub
jecxz
mov
mov
cmpsl
out
mov
test
jbe
adc
adc
ss
loopne
cwtl
cmp
xchg
lds
daa
into
cmp
and
pop
in
add
scas
inc
rcrl
popf
jg
cltd
in
js
add
sbb
or
push
dec
lret
mov
sar
push
pop
and
test
pop
movsl
dec
loop
mov
adc
sub
jo
pop
cmc
mov
popa
gs
outsl
sub
and
icebp
mov
fsubs
imul
sbb
jbe
iret
cmpsl
inc
cld
sub
rorb
in
jns
jp
fisttpll
cmp
or
pop
xchg
jle
jns
pusha
pushf
mov
dec
clc
lods
dec
ucomiss
gs
sub
out
cmp
loope
push
jo
xlat
lds
fistpll
cli
pop
cmp
test
stos
gs
jp
test
cmp
cld
rorl
fs
pop
in
repnz
xor
popf
xchg
mov
xchg
push
jecxz
push
jb
add
xor
fsts
in
dec
xchg
sbb
test
cmp
enter
cmp
pop
leave
push
inc
xchg
mov
test
popf
dec
add
push
cmpsb
das
xor
in
mov
lea
lods
aaa
dec
popa
cwtl
pop
adc
ficoml
test
mov
mov
xor
ror
push
dec
mov
int3
stos
push
mov
push
stc
cld
xchg
jmp
inc
pop
jmp
dec
push
int
pop
jmp
dec
xchg
jo
and
dec
sbb
clc
and
mov
in
pushf
fistps
fsubrp
jge
push
pop
xchg
push
mov
mov
mov
in
daa
insb
cmpsb
or
inc
dec
js
jle
push
lea
jecxz
cmp
add
inc
test
mov
loope
std
mov
mov
addr16
sub
mov
in
sar
jnp
push
xchg
mov
into
push
cmp
mov
push
mov
fistpll
mov
add
add
cmp
enter
stos
push
mov
xchg
xchg
push
push
inc
inc
mov
xchg
cltd
ret
pop
sub
mov
inc
outsb
xor
jns
jno
hlt
xor
fsubr
dec
xchg
out
mov
push
or
jg
mov
ficompl
ds
push
jnp
jae
in
or
mov
pop
xchg
addb
cli
cmc
das
sub
inc
int3
xor
sbb
inc
fwait
dec
inc
iret
hlt
lret
sahf
jb
stos
loope
xchg
pop
pusha
std
sbb
fwait
test
and
xor
popf
ffree
or
lret
das
repnz
loop
xor
or
aas
aam
sbb
dec
add
sahf
or
lcall
jl
aad
jecxz
sbb
in
push
ret
cmp
or
jno
movsl
pop
fsin
sbb
push
jg
loop
imul
icebp
imul
out
leave
mov
mov
push
cmc
inc
push
scas
int
fstpl
xchg
int3
ds
mov
mov
lret
lock
rcl
hlt
inc
xchg
nop
mov
rcl
adc
pop
mov
dec
out
xorb
movsl
sahf
jmp
pop
je
or
dec
int3
std
jecxz
int3
repnz
mov
out
out
cltd
mov
add
xchg
and
xchg
fcoms
mov
fstp
push
pop
push
pusha
mov
fldt
push
test
lods
aad
mov
lods
roll
test
jb
add
mov
imull
scas
lahf
inc
bound
bound
scas
dec
arpl
fwait
ljmpw
lret
cld
in
push
inc
cs
aam
sbb
aaa
nop
ds
sub
sti
popf
stc
jbe
mov
or
jecxz
hlt
nopl
dec
sbb
jb
inc
mov
pop
xchg
sahf
cltd
lods
adc
push
jg
sbb
or
fadds
ror
dec
sub
test
movsb
xor
xor
test
cmp
inc
mov
sbb
push
rcr
incl
ret
aad
sub
scas
iret
int
xor
test
in
fdivl
mov
jle
mov
jbe
push
stc
sub
jge
outsb
stos
cmp
mov
popa
push
push
insl
clc
add
jp
aaa
mov
push
and
push
popa
sbb
mov
repnz
push
cmp
pop
out
mov
fldt
jae
adc
or
out
iret
and
push
aaa
leave
add
mov
add
sarl
stc
out
sub
in
inc
pop
or
push
es
lahf
leave
mov
rcl
int3
bt
adc
lret
cli
fiadds
push
cmp
das
push
shl
dec
lods
int
ss
ss
in
or
iret
gs
ja
mov
xchg
je
test
pop
push
pushf
in
aas
push
adc
sub
scas
push
cltd
adc
jg
adc
fsubs
xchg
xor
mov
xchg
mov
fxch
add
rcr
popa
shll
jle
dec
sarb
shr
mov
mov
lods
xchg
cmpb
clc
xchg
lods
in
enter
xor
mov
lahf
je
dec
aaa
push
push
imul
sahf
dec
mov
pop
pusha
cmpsl
mov
lds
jp
mov
add
or
inc
sub
or
pop
test
jbe
icebp
lcall
push
push
mov
fstl
faddl
dec
popf
mov
ffree
jne
add
push
lods
inc
adc
mov
jge
mov
inc
mov
xor
shlb
fimuls
and
mov
imul
add
mov
ja
int3
sbb
je
jnp
fs
js
andl
jae
or
mov
pop
and
iret
imulb
lock
into
bound
dec
das
outsl
popf
mov
pop
repz
out
push
aad
test
into
push
insb
cmpl
jae
mov
or
mov
loope
mov
negb
stos
ds
fcoms
cmp
dec
inc
stos
jbe
mov
clc
lcall
mov
iret
in
and
inc
jno
mov
bound
jbe
adcl
out
mov
dec
aaa
test
aas
ja
add
lcall
rcr
mov
fs
xor
jae
es
cmp
xor
and
dec
sbb
mov
xor
pop
add
add
mov
stos
sub
pop
xor
mov
cmpsb
pusha
repnz
lds
push
push
push
out
xchg
call
test
or
int
out
out
outsb
jge
inc
mov
fwait
xor
popf
ret
xchg
xchg
hlt
push
out
hlt
std
mov
lahf
movsl
aas
mov
lods
stc
pop
cwtl
sub
or
ret
decl
repnz
das
sbbb
xchg
add
or
jecxz
in
into
jp
sbb
sbb
bnd
sub
cmp
inc
fsub
lret
xor
mulb
xchg
jge
xlat
xor
pop
test
dec
mov
add
mov
stos
dec
mov
jnp
jb
inc
test
nop
fidivrl
xchg
out
adc
int
int
pop
xchg
push
mov
xor
add
cli
xchg
js
jae
stos
jnp
ljmp
inc
fcmove
nop
jecxz
cmp
cli
sub
mov
cmp
in
das
mov
sbb
and
mov
out
in
std
xchg
test
test
movsb
lods
and
push
imul
loope
cli
pop
lea
mov
xchg
and
mov
adcb
out
mov
pop
dec
movsl
cli
rcll
pusha
sub
jns
adc
xchg
xchg
cwtl
test
in
ss
or
stc
lock
shlb
mov
jg
pop
xlat
hlt
mov
loope
popl
fnstcw
jb
xchg
pop
or
cmp
inc
leave
test
insb
mov
sbb
and
mov
dec
cmp
xchg
cmpsl
cltd
push
in
inc
cmovg
xchg
loop
cli
or
aad
pop
dec
aas
into
jecxz
push
ror
in
cmp
sbb
bound
push
mov
add
inc
cmp
jo
mov
pop
fdivrs
jbe
sbb
inc
add
and
cli
or
pop
in
inc
inc
scas
cmp
pusha
mov
jge
jnp
jecxz
pop
sub
in
dec
leave
push
jne
jl
or
inc
in
cli
popa
dec
iret
pop
in
xchg
push
filds
into
lock
daa
adc
scas
inc
pop
jae
mov
insb
push
cmp
or
mov
add
mov
pop
or
push
fsts
icebp
jmp
fs
orb
push
mov
mov
inc
test
aam
add
and
test
out
adc
or
jnp
mov
push
xor
sti
ret
es
or
ja
cmp
xchg
neg
fiadds
adc
mov
or
fbstp
test
cmp
fidivrl
add
lret
cmp
sub
cmpsl
lcall
ret
xor
aam
push
adc
or
stc
ret
sti
xchg
pop
sbb
aaa
jne
daa
xchg
xor
stos
mov
test
std
ret
mov
xlat
in
pushf
xor
and
outsl
mov
sub
add
int3
sub
pop
outsb
jg
insl
add
mov
push
aas
xor
mov
xor
pop
push
jns
push
mov
nop
movsb
in
stc
xchg
clc
das
push
ljmp
inc
lea
fnstcw
mov
adc
arpl
cwtl
or
shll
inc
icebp
outsl
mov
push
mov
popa
out
mov
xlat
mov
test
out
stos
cmp
lods
int3
fidivl
add
daa
pop
out
mov
inc
insb
dec
sahf
or
inc
jae
pop
xor
test
lret
pop
xorl
dec
dec
inc
shlb
and
push
lea
arpl
sbb
out
in
imul
fistpll
and
jg
inc
shlb
ljmp
push
cmp
loopne
mov
cltd
shrb
repnz
or
jo
add
leave
in
mov
sbb
adc
push
enter
sub
in
iret
in
subb
push
test
xorb
fsub
insb
aaa
xor
aas
repnz
dec
cmp
mov
fstps
int3
repz
imul
add
sbb
mov
add
lret
ja
lds
dec
cld
jp
and
add
sbbb
and
and
mov
popa
mov
icebp
ss
in
fdivrl
dec
dec
cmc
or
pop
or
lock
or
mov
xor
jae
push
pop
jge
xchg
pop
cmp
inc
mov
xchg
sub
loope
or
cmp
xor
pop
xor
mov
xchg
cs
xchg
pop
mov
repnz
in
sub
xor
insl
add
insb
sbb
mov
lods
push
shlb
lods
test
test
dec
fwait
das
xchg
int3
out
ja
sub
aaa
aas
lods
js
adc
arpl
mov
fcoml
or
xchg
push
mov
loope
aam
jge
adc
jmp
iret
xchg
xchg
es
gs
xor
and
in
xor
aas
jl
or
outsb
jno
int3
aam
shlb
mov
cwtl
dec
lea
sti
js
xchg
outsb
push
jno
xor
mov
push
and
jmp
xor
cmp
push
xor
ljmp
push
adc
dec
aas
addr16
or
mov
imul
movsb
push
mov
cmp
movsl
pop
cmp
aaa
mov
add
fldt
fists
cmp
hlt
sub
insl
adc
lcall
mov
sbb
add
mov
mov
clc
out
loope
ljmp
ljmp
fiaddl
ljmp
negl
int
pushf
iret
inc
cli
sahf
cmp
mov
bound
std
jge
cli
repnz
ds
mov
loop
cmp
push
xchg
push
pop
inc
cmp
xchg
push
push
push
mov
outsl
movsl
icebp
andb
mov
out
mov
pop
daa
and
push
cmp
into
sbb
xor
cmp
sbb
ret
and
xchg
sbb
pop
sub
icebp
add
dec
test
hlt
icebp
jp
fldenv
add
jecxz
lods
add
jns
mov
scas
push
aaa
push
xor
and
adc
arpl
xchg
inc
gs
mov
push
jns
cmpsb
roll
xor
jle
rol
in
pop
test
dec
fld
fwait
xor
cwtl
pop
mov
das
mov
cmp
or
cmp
xchg
test
in
enter
sub
addb
xor
or
roll
sbbb
jmp
int3
cli
mov
push
jo
add
mov
test
inc
xor
or
shlb
in
insb
or
jb
pop
mov
imul
into
cwtl
ret
jge
xchg
add
sbb
mov
dec
add
push
js
mulb
das
mov
rcrl
add
sbb
loope
jns
lock
sti
fisubrl
pop
mov
xor
inc
jne
inc
arpl
ficomps
test
in
xchg
jbe
imul
dec
and
cmp
cmp
fstl
sti
sbb
xchg
jg
or
lcall
daa
in
test
lret
repz
mov
clc
lret
cmpsb
jp
and
scas
test
push
mov
or
fidivl
fsubrs
loopne
pop
lret
movsb
pop
mov
test
push
lcall
mov
dec
mov
inc
jecxz
jnp
jp
mov
push
pop
scas
nop
iret
outsb
lahf
test
mov
mov
jecxz
sub
test
test
lcall
nop
jg
shll
pop
data16
jne
or
lods
fisttpll
lret
mov
idiv
mov
mov
xchg
sub
mov
je
out
loopne
jns
inc
in
and
add
cmp
call
xor
hlt
int3
les
xor
hlt
and
notb
icebp
paddd
out
icebp
sbb
pop
je
sbb
inc
pop
pop
cwtl
in
mov
push
stos
lret
imul
sub
imul
inc
add
addb
adc
dec
clc
pop
lret
testb
pop
jne
idivl
jl
fwait
mov
and
mov
test
add
add
xchg
mov
inc
push
mov
xchg
add
rcr
test
lldt
sub
pop
jle
mov
mov
rclb
movsb
xchg
push
outsb
mov
mov
push
or
loopne
mov
shll
popf
mov
and
xor
sbb
cmp
xlat
jnp
dec
ret
in
dec
pop
cld
cli
pop
jecxz
mov
xor
push
inc
in
cltd
fiaddl
push
inc
add
lock
dec
jb
push
cmc
xchg
push
cmpsb
push
adc
push
inc
sbb
adc
xlat
out
lahf
push
pop
sti
in
int
push
insl
inc
push
je
scas
xchg
fwait
mov
adc
push
dec
cs
fwait
jns
out
call
sti
stos
cmp
dec
and
lock
aas
inc
add
pop
into
inc
iret
jo
ljmp
pop
mov
or
mov
xchg
cmp
aad
xchg
cld
and
sbb
dec
jno
mov
cli
jl
mov
xor
mov
or
xchg
fwait
mov
sub
jns
stc
lahf
cmpsb
ret
push
cmc
sub
sub
imul
sarl
in
mov
repz
inc
adc
fld
or
cmp
icebp
mov
jbe
loope
lahf
push
adc
stc
jbe
push
stos
roll
psraw
mov
mov
cmpsl
sbb
mov
outsb
or
leave
repnz
pop
jp
lahf
xchg
loopne
movsl
ret
xor
sbb
mov
fsubrl
or
mov
repnz
leave
scas
mov
push
xchg
in
stos
mov
add
sbb
insl
out
insb
testb
cmp
arpl
mov
lods
sbbl
test
bound
cmc
fcompl
scas
ss
xlat
xchg
int
lea
in
bound
fdivs
dec
insl
push
and
sub
ret
xchg
lcall
out
lds
xchg
adc
sub
mov
rcr
inc
pop
ret
bswap
daa
mov
popf
mov
sbb
mov
fcomps
stc
mov
push
and
gs
mov
xchg
jecxz
and
or
mov
push
inc
or
mov
sbb
in
lahf
mov
mov
je
push
rcrl
int
jnp
dec
dec
adc
push
adc
loop
fs
out
push
cmpsb
jge
cld
add
cltd
dec
outsl
ret
mov
daa
push
push
cmpl
jne
and
push
add
insb
fwait
jecxz
cwtl
data16
dec
mov
adc
sbb
mov
inc
inc
fsubrl
aaa
in
adc
shl
daa
sti
pop
pop
jl
sti
sbb
xor
sub
xor
ds
cmp
push
xor
icebp
adc
in
adc
js
imul
nop
mov
fstpt
jp
pop
push
gs
add
xor
sbb
lcall
push
cltd
sub
push
test
mov
cwtl
fstl
iret
ret
add
push
inc
cmp
pushf
addr16
and
loop
xor
pop
xlat
mov
cld
sbb
or
push
mov
outsl
xchg
stos
xor
inc
jno
into
jg
and
jle
cmc
leave
or
xchg
pop
std
dec
pop
xchg
mov
cwtl
scas
jg
rcrb
fbld
cli
mov
xchg
lret
and
jecxz
lds
dec
jnp
lea
and
dec
aaa
mov
jo
jnp
hlt
mov
in
out
jns
dec
fbld
sub
pop
xor
lds
lods
imull
sub
mov
aam
pop
pop
lock
jmp
add
scas
pushf
cmp
and
add
mov
mov
sbb
dec
popa
popa
and
adc
mov
mov
xchg
cld
add
adc
hlt
into
push
inc
mov
popf
and
mov
dec
mov
dec
enter
icebp
xor
mov
and
jno
or
cmp
ljmp
mov
inc
mov
ror
jbe
adc
adc
sbb
es
sahf
insb
mov
scas
cmp
cld
mov
mov
pop
mov
mov
push
outsb
pop
mov
and
mov
sbbb
xor
sbb
cmpsb
jge
or
xor
pop
and
pop
or
push
mov
imul
roll
jno
and
push
je
pop
mov
cwtl
ret
jle
lods
jmp
lcall
add
adc
mov
dec
xchg
xchg
mov
cmp
jb
out
add
or
or
mov
into
repz
inc
jmp
sub
jecxz
jb
mov
mov
push
push
arpl
stc
in
out
push
fadd
mov
or
cli
adc
push
mov
fnsave
fdivrs
push
or
in
out
enter
dec
pop
or
sti
repz
outsl
cs
mov
aas
repnz
cli
jmp
mov
iret
pop
sti
sbb
mov
gs
lods
loopne
xor
add
and
and
mov
adc
push
inc
push
ret
fisubrs
mov
add
je
cmc
test
xor
repz
xor
mov
adc
or
push
repnz
xchg
push
cmp
repnz
ficoml
aad
ficoms
and
fistl
mov
xor
jg
scas
and
lods
leave
inc
mov
iret
pop
push
jmp
mov
sbb
ja
stos
rorl
inc
pushf
jecxz
adc
inc
inc
jae
and
mov
fnsave
cld
sub
inc
inc
push
roll
push
xchg
ljmp
mov
movsb
test
push
xchg
xchg
mov
lret
fucomip
lods
dec
hlt
xor
and
fwait
imul
enter
cmpl
lods
cmp
sub
add
decb
into
outsl
pop
mov
mov
ds
sub
loopne
push
testb
fisubrs
test
adc
clc
sahf
jge
shlb
push
in
cmp
add
scas
mov
xor
call
cmp
cltd
jae
cmp
adc
inc
jnp
cmp
inc
xorb
adc
push
xor
fiadds
jmp
and
pop
mov
mov
jg
or
jae
sbb
out
popf
leave
mov
pop
adc
aad
add
faddl
call
in
cld
cli
mov
xchg
cmpsl
cwtl
sbb
popa
xor
inc
xor
or
or
int
inc
mov
xlat
out
mov
mov
sub
inc
mov
mov
arpl
xlat
sub
movsl
repnz
loop
jnp
imul
inc
imul
clc
aam
mov
cmp
rclb
in
cmp
adc
push
pop
mov
cld
jle
test
or
cld
push
in
lods
mov
ss
xor
cwtl
push
xor
cli
cmp
pop
neg
scas
push
ljmp
pop
mov
cs
dec
lods
lret
push
out
or
cmp
repnz
cmp
mov
jo
addr16
cwtl
dec
adc
inc
pop
movsl
jmp
in
mov
xorl
popf
repz
mov
sbb
add
stc
lods
lds
dec
movsb
xlat
in
and
dec
fdivrl
in
push
sarb
push
lret
push
adc
push
jg
cld
xchg
cmp
js
lret
xor
testb
adc
push
std
test
mov
pushf
dec
jecxz,pt
jne
push
mov
add
outsb
add
nop
loop
test
out
les
pop
jmp
pushf
mov
pop
xchg
mov
lcall
add
adc
icebp
add
cmovge
pushf
fsubrp
fwait
call
jbe
jo
adc
add
idivb
cltd
pop
ficoms
stos
fsubrl
push
icebp
scas
sbb
mov
mov
adc
sbb
das
or
jg
mov
push
lds
jmp
mov
dec
pop
mov
xchg
xchg
sbbb
in
js
icebp
fcmovnb
les
mov
xchg
fistl
jge
add
and
xor
or
es
and
cli
xor
repnz
dec
mov
add
sub
sti
in
test
xor
pusha
test
dec
adc
in
test
aas
push
sub
push
rcrb
jle
xchg
iret
mov
sub
jmp
outsl
add
mov
sbb
test
jne
mov
adc
pop
inc
clc
dec
test
dec
fwait
inc
cmp
and
fcmove
shlb
push
cld
xor
fldl
stos
pop
lcall
idiv
fsubl
scas
mov
ss
cli
imul
aaa
cs
adc
sbb
sub
xor
mov
xchg
fwait
push
lret
and
out
arpl
mov
push
subl
fs
pop
inc
pop
add
ficoml
dec
sbb
sbb
adc
in
in
call
in
in
lahf
aam
fadds
cmp
pushf
sti
movsb
xor
mov
push
add
loopne
out
dec
xchg
inc
ret
mov
mov
jb
mov
mov
outsb
mov
pop
xchg
scas
sbb
pushf
pop
xchg
inc
mov
dec
icebp
cmp
fwait
cli
popa
or
das
inc
dec
arpl
fwait
clc
addr16
sub
in
mov
pop
xlat
loop
sub
dec
push
jns
or
jns
hlt
sbb
dec
stos
out
mov
mov
pop
fucomi
adc
cmp
into
movzbl
jg
mov
mov
jmp
mov
and
mov
pushf
arpl
cli
shlb
jno
dec
adc
subl
jno
mov
push
cmp
repnz
mov
inc
pop
stos
insb
mov
xchg
in
shrd
cmp
idivl
mov
inc
ljmp
sbb
sbb
pop
xlat
je
dec
mov
rcll
stos
loopne
sbb
je
outsl
xor
inc
jl
stos
sar
or
mov
or
stc
add
cmpsl
pushf
sub
lock
lret
fwait
cmpsb
adc
pop
cltd
clc
sbb
jle
dec
jns
jb
xchg
repz
sub
cltd
add
cmp
inc
in
jle
lcall
jp
std
das
int3
rclb
or
dec
pop
push
cmpsb
inc
xchg
xchg
repz
xlat
sub
fcompl
dec
stc
scas
sub
push
inc
adc
mov
or
sbb
daa
adc
xchg
ss
aas
sub
test
mov
inc
mov
push
rcrl
mov
cmpsl
ffree
sti
xor
dec
add
std
lahf
sbb
add
repz
enter
push
mov
jmp
addr16
rolb
popa
dec
orb
stc
add
adc
pop
mov
xor
adc
pop
js
call
push
scas
mov
out
sti
fcomp
xor
popa
fdiv
sbb
aas
push
pushf
pop
mov
sub
mov
rclb
xor
imul
cmpsb
dec
sub
lcall
sub
in
adc
sar
iret
mov
xor
dec
mov
inc
jmp
lea
outsl
aam
outsb
int3
xchg
inc
pop
xorl
or
sti
jp
scas
sub
adc
adc
gs
or
inc
cmp
cmp
add
adc
adc
pop
sub
lret
inc
push
arpl
cmp
popf
xchg
pop
imul
push
mov
or
insl
push
mov
imul
fdivs
cmp
sub
adc
jo
outsb
dec
mov
pop
xchg
or
iret
and
inc
mov
cmp
sti
sub
add
pusha
in
dec
mov
mov
push
sub
test
pop
jne
add
sbb
push
mov
xchg
hlt
outsl
mov
hlt
jo
and
or
dec
cwtl
pop
xor
aam
xchg
loopne
mov
xchg
sub
bound
mov
and
inc
inc
test
push
hlt
dec
lods
mov
clc
repnz
ret
scas
cmpsb
inc
pop
or
push
out
add
cltd
add
repnz
add
inc
pop
and
lea
out
inc
in
ja
shr
pop
sub
xlat
mov
insl
lahf
sub
into
test
adc
xchg
and
mov
bnd
sbb
cmp
hlt
adc
movsb
loop
ret
pop
pop
inc
pop
push
fimuls
imul
jns
mov
dec
xchg
sub
iret
jbe
jnp
and
xor
and
stos
inc
sbb
dec
pop
call
sahf
jns
rcrb
sub
call
insl
and
rcll
and
sbb
loope
add
loop
dec
mov
dec
and
iret
dec
insl
mov
jo
lea
jle
movsl
scas
adc
aad
ss
ss
pop
scas
jmp
arpl
cmp
and
cmp
mov
pop
and
aaa
arpl
roll
cli
fstpt
mov
pushf
bound
jl
jmp
inc
adc
xchg
pop
push
sti
call
mov
mov
sbb
idiv
pop
ret
mov
inc
xchg
jnp
rol
inc
imul
subb
out
shrb
negb
ds
gs
mov
fcompl
xor
mov
sub
lret
insb
and
rorb
aaa
cmpb
sbb
mov
mov
push
int3
add
nop
sub
iret
adc
arpl
stc
mov
addr16
into
shlb
es
jae
aad
call
xchg
cmpsl
push
mov
movsb
xchg
sar
push
fidivrs
stc
fxch
xor
mov
insb
shrb
cmp
arpl
add
mov
mov
fnsetpm(287
xor
test
xchg
ljmp
arpl
sub
mov
call
js
in
ss
sbb
enter
jle
leave
push
sub
inc
cld
xchg
pop
mov
cmp
cwtl
xchg
inc
pop
or
out
dec
adc
test
sti
pop
vcvtsd2si
imul
mov
in
out
daa
lds
repz
xchg
mov
jns
stc
fildl
adcb
iret
clc
rclb
stc
xchg
dec
les
dec
ljmp
adc
mov
dec
add
test
jb
ds
pop
jno
les
lret
movsl
dec
into
mov
repz
lahf
xor
jb
scas
mov
mov
or
sbbl
fmull
int3
das
movsl
mov
lahf
ror
data16
insb
imul
jg
xor
rcl
cmp
add
or
out
adc
ljmp
mov
or
xchg
or
cmc
idivb
inc
gs
pop
mov
push
fcompl
addr16
xchg
shrb
pop
and
ficoml
mov
inc
dec
dec
jns
sbb
dec
stc
xchg
sbb
fwait
sbb
push
shrw
aad
or
dec
fisubs
adc
ja
daa
mov
fistpll
fnstsw
sub
lret
mov
jmp
pushf
test
in
push
out
push
imulb
popa
adc
in
cmc
or
clc
das
test
test
sub
mov
mov
pop
fdiv
lods
mov
mov
jmp
cli
jp
into
or
stos
push
push
xlat
jmp
mov
movsb
fdivrs
xor
shrl
call
xchg
mov
jle
insb
insb
cmp
push
push
add
sbb
sub
or
cld
or
lahf
decb
aad
push
dec
dec
jle
sbb
or
jo
push
cmpl
sbb
xchg
movsb
fdiv
je
lods
mov
lds
sti
bound
sbb
and
outsl
popa
mov
dec
push
push
and
pop
lcall
jg
mov
or
sbb
pop
je
lret
je
mov
or
pop
mov
out
int
jmp
sbb
xchg
pushl
mov
testb
loopne
cmpsb
clc
sbb
cmpb
xchg
ror
mov
mov
sub
dec
or
jge
adc
and
cmp
xchg
adc
rcrl
xor
sbb
xor
jmp
add
cmp
out
lods
xchg
in
js
push
fstps
mov
fists
fistps
fldt
iret
inc
les
sbb
dec
divl
leave
scas
adcb
sub
stos
call
pop
push
mov
jmp
aas
fs
dec
xchg
hlt
dec
mov
jmp
xor
stos
adc
rclb
mov
lcall
and
jg
mov
enter
shrl
into
mov
mov
and
jno
leave
push
stos
std
dec
mov
push
ds
std
add
cmp
call
fs
dec
lods
cld
stc
sub
lods
dec
pop
fst
movsl
shll
adc
add
xchg
fcmovnu
and
pop
add
lret
test
xchg
dec
sbb
adcb
cltd
idivl
pop
cwtl
cmc
pop
push
inc
fldl
add
dec
cmc
mov
fldenv
jnp
jle
jle
mov
dec
xchg
std
xor
jae
dec
mov
mov
arpl
pop
and
in
loop
adc
fisttps
fidivs
daa
cmp
add
repnz
or
push
add
gs
in
mov
add
insl
mov
cmpsl
mov
mov
insl
or
cmp
adc
jbe
dec
push
inc
jae
jnp
cltd
sub
int3
fsubl
test
daa
adc
and
xchg
mov
into
jns
push
cmp
aad
repz
jl
mov
xor
gs
pop
sub
adc
negb
dec
bound
stos
cmp
jnp
xchg
rcrb
hlt
mov
fs
xlat
int
jae
jne
inc
xchg
rcrl
pop
push
cmp
cmp
ror
sbb
pop
popf
outsb
andl
sub
stos
movsb
dec
fs
jno
fnstcw
sbb
aaa
or
sub
call
mov
dec
lret
out
mov
inc
jns
mov
incl
add
dec
out
lods
or
sub
xor
add
leave
xor
pop
and
movsb
imul
sbb
jp
insl
xor
push
mov
lea
insl
or
adc
pop
cwtl
mov
clc
adc
adc
leave
and
sbb
jb
jns
dec
dec
subl
inc
push
push
movsb
sahf
fwait
inc
movsb
mov
push
nop
stos
sub
fbstp
arpl
ret
or
dec
cmp
dec
jp
mov
jnp
sbb
mov
mov
or
pop
icebp
outsl
jg
add
mov
loop
jae
mov
call
test
int
je
les
repz
stc
movsl
popa
xor
cmpl
mov
notb
or
or
pop
ret
fadds
inc
xchg
rep
push
or
lret
xchg
mov
sub
ret
and
mov
stos
sub
cmpsl
and
or
mov
cmc
mov
cmp
push
xor
adc
or
scas
frstor
fldl
in
out
enter
es
ds
and
sbb
in
xchg
mov
mov
add
sub
insb
sbb
mov
lods
adc
hlt
add
mov
inc
pop
test
aam
pop
push
gs
jmp
fistl
or
mov
pop
push
dec
mov
sbb
xchg
daa
pop
adc
aas
jno
cltd
xchg
or
rcrb
into
dec
mov
mov
push
xor
and
fcmovnb
mov
push
loopne
sarb
adc
mov
sahf
outsl
inc
mov
inc
sub
inc
and
and
lret
call
or
add
aas
nop
out
xchg
stos
mov
mov
jns
jnp
in
cmpsl
push
popf
ja
jecxz
mov
push
pop
data16
shl
fmul
sbb
pushf
addr16
inc
popa
mov
sub
loope
ret
popf
data16
ret
xchg
jecxz
int
std
xor
pusha
jno
lcall
loope
les
jnp
xor
xchg
pushf
inc
pushf
test
adc
fimuls
fisttps
outsl
jp
cmp
or
test
inc
sub
mov
cmp
ljmp
inc
fisttpll
shll
mov
inc
xchg
sbb
add
test
cmc
lret
shlb
test
call
and
cli
rcll
pop
addr16
xor
push
mov
movsb
push
sbb
test
push
shlb
cmpsl
in
clc
mov
inc
repnz
sbb
lahf
and
sti
test
pusha
xchg
or
dec
xor
arpl
fbstp
std
stos
lcall
push
nop
mov
cmpsb
in
jbe
mov
mov
pop
insl
int
cld
sbb
insl
out
lods
sahf
mov
pushf
adc
js
arpl
sahf
ds
mov
inc
sub
hlt
pop
repnz
sbb
sarb
popa
pop
cmp
push
sub
push
cmpl
inc
adc
test
jmp
orb
stc
and
push
mov
xor
cwtl
jle
les
sbb
mov
jmp
mov
lods
loop
cmp
xor
cwtl
xchg
cmp
sub
adc
sbbb
dec
inc
dec
jmp
jle
popa
and
cmpb
sub
jl
icebp
mov
sub
adc
inc
leave
mov
mov
mov
or
push
lret
pop
imul
inc
or
and
xchg
sub
imul
adcl
dec
es
cmp
dec
decl
xor
aas
imul
sbb
iret
leave
xor
outsl
jne
and
sub
iret
mov
stos
adc
pop
popa
pop
inc
stc
cmp
gs
push
pop
sbb
fsts
int
pop
leave
mov
out
sub
leavew
jp
cmp
dec
pusha
or
dec
add
push
icebp
sbb
adc
cmp
adc
mov
or
addb
mov
cmpsb
jmp
lods
aad
mov
adc
test
mov
xor
jbe
aaa
lds
and
ret
cwtl
push
dec
jno
sbb
push
mov
dec
int3
xlat
jnp
ret
pop
mov
mov
scas
in
dec
sub
lret
dec
pop
inc
aam
jns
pop
xor
rolb
inc
lods
mov
mov
or
shrb
idiv
xor
sub
xorl
push
mov
sub
fisubs
test
push
stos
mov
jmp
in
pop
psubw
stos
into
ljmp
xor
or
imul
popf
hlt
jno
mov
pushf
das
sub
es
push
cmpb
jnp
jb
sbb
shl
cmc
sbb
dec
lahf
xchg
inc
ljmp
mov
shlb
add
adc
mov
and
test
sbb
loop
xchg
in
mov
cmpb
push
mov
filds
pusha
mov
fldenv
shrb
pop
or
jns
rolb
jnp
push
xchg
adc
lods
sub
aam
js
popa
dec
pop
test
sbb
sub
arpl
pop
pop
sbb
clc
sbb
testb
push
pushf
sbb
aam
xor
xor
rcrl
add
out
loopne,pn
pusha
dec
aam
lcall
jl
addr16
inc
insl
mov
test
sub
shl
arpl
ss
rep
sbb
shlb
cmp
and
in
adc
dec
repnz
ja
sahf
outsb
cld
adc
adc
mov
cmp
leave
fcomps
mov
cltd
push
pusha
sbb
cs
push
cmovns
push
imul
test
inc
call
inc
fcmovb
cmp
mov
shrb
jb
test
xchg
pop
incl
adcl
jno
xor
xchg
xchg
insb
test
arpl
adc
lcall
js
inc
addl
movl
out
ret
pop
leave
sbb
popf
push
adc
ss
xor
mov
xrelease
adc
frstor
enter
inc
mov
xor
xor
push
dec
and
cld
bound
mov
mov
sub
jb
negl
ds
leave
sub
stc
rcl
es
outsl
push
hlt
nop
mov
inc
in
fs
jge
fldenv
jmp
in
add
push
push
les
lds
imul
xchg
call
aad
push
push
jl
adcl
call
jmp
lahf
jnp
rcr
psraw
bound
orl
pusha
jmp
icebp
jp
and
icebp
fs
js
or
mov
xchg
pop
dec
icebp
xor
xchg
mov
sub
mov
sti
cmp
icebp
inc
xchg
xchg
lcall
lret
jmp
aad
sub
push
loope
mov
out
neg
xor
stc
shrb
push
jl
pusha
or
repz
pop
pop
jle
lods
pop
jge
jge
or
lods
and
xor
xchg
mov
outsl
andl
ja
jle
addl
test
call
iret
jbe
imul
add
jne
dec
or
jl
xorb
int
cmp
mov
mov
mov
push
popf
orb
cmp
loope
and
cld
sbb
mov
push
loop
cmp
add
call
dec
or
jg
add
and
lcall
push
loop
movl
js
push
enter
sub
loope
pop
mov
insb
jg
ljmp
loop
fcmovu
cmpsl
cmpsl
shufps
jg
jle
mov
adc
or
lock
sarl
fnstcw
mov
jp
outsl
loope
pop
and
movsb
lret
push
add
add
subb
mov
js
inc
and
js
pop
inc
js
cmpsl
push
aas
add
mov
mov
in
lods
mov
insb
mov
jns
movsb
mov
add
sahf
mov
rcl
mov
cmp
out
mov
adc
cmp
adc
pop
adc
pop
movsb
mov
push
mov
jl
das
inc
dec
push
out
jnp
orb
and
jnp
arpl
rolb
mov
cmp
scas
and
dec
fcomps
movsl
push
push
mov
pusha
orb
dec
inc
xchg
jge
adc
mov
or
sub
ficompl
pusha
stos
aas
ffree
loope
mov
out
pushf
pop
mov
and
loopne
pop
sti
nop
int3
push
aaa
adc
fstpl
mov
pop
sbb
ljmp
fdivs
pop
mov
inc
jne
dec
mov
pop
lret
out
xchg
xchg
mov
jl
push
sub
push
pushf
repz
aas
pusha
push
jbe
mov
test
push
loopne
aas
sub
pop
xor
mov
jle
dec
loopne
cmp
jmp
popf
mov
jne
cmpsl
cli
loope
cmp
or
push
xor
jmp
andb
test
mov
fistl
ds
lahf
xchg
push
js
sub
pop
arpl
mov
loop
out
pop
les
dec
hlt
daa
dec
xchg
sbb
nop
mov
mov
test
xchg
clc
xchg
push
lea
fldenv
mov
iret
xlat
push
popf
subl
push
cmc
mov
outsb
xchg
push
mov
and
neg
sub
dec
and
inc
repz
call
shl
mov
mov
sbb
pop
xchg
jno
sbb
mov
adc
mov
stc
and
pop
cmp
jns
sahf
int3
inc
imul
add
pushf
cmp
lds
iret
cmp
push
dec
scas
jl
mov
xchg
mov
mov
in
or
inc
cs
je
xor
cld
in
orl
scas
fsubs
jo
movb
test
fisubrs
call
and
in
add
cltd
jo
inc
push
inc
fs
lret
adc
xor
cmpsl
sarb
cmp
pop
jl
sarb
jecxz
dec
test
hlt
adc
dec
outsb
stos
mov
imul
stc
pop
mov
jecxz
icebp
mov
out
movsl
mov
stos
sub
xlat
sub
push
jg
push
xor
and
mov
call
dec
mov
sbb
dec
pusha
aad
out
lds
dec
insb
sbb
ret
or
repnz
or
mov
xchg
subl
or
loop
or
leave
jo
dec
enter
cld
jns
or
lea
repnz
jg
addb
xor
lahf
shlb
std
outsl
fsubs
mov
jne
sbb
xor
mov
sub
imul
push
jmp
dec
sti
enter
sub
shrb
push
lret
push
add
outsl
das
in
add
movsl
mov
inc
int
add
sub
outsb
pop
cmpsb
cmp
xchg
mov
aad
add
push
jno
pushf
test
ret
sbb
nop
or
fisttps
popf
jne
jne
cli
cmp
pop
stc
pop
ds
jb
sub
cs
xchg
pop
dec
call
mov
mov
les
mov
lcall
addr16
ret
sbb
repnz
inc
repz
in
mov
test
lret
js
testb
stos
xchg
cs
ret
push
in
jbe
imul
das
ret
add
hlt
int
mov
jno
or
xchg
jecxz
das
loope
mov
add
sub
and
push
sbb
cmp
imul
daa
mov
inc
xchg
sbb
and
sahf
push
push
fisubrl
and
add
sub
leave
inc
lea
adc
pop
cmp
sbb
movsl
xor
mov
imul
xor
out
push
inc
push
pop
cmp
and
test
jmp
aaa
lock
insl
xorb
test
mov
push
xor
cli
loopne
and
bound
mov
mov
and
fnstsw
adc
dec
mov
push
sub
pop
dec
adc
inc
mov
cs
cmp
ljmp
xor
ds
push
stos
shrl
xor
xchg
pop
mov
dec
cli
xor
lods
add
clc
mov
in
cwtl
outsb
pushf
adc
seta
dec
pop
sbb
leave
sahf
pop
adc
ret
cmpsl
jns
jo
xor
cmpsb
lahf
jg
fdivs
or
inc
jge
adc
subl
sbb
out
xchg
and
pop
add
imul
jl
sahf
or
sbb
iret
cmp
es
cwtl
mov
adc
lods
sbb
cmp
stc
ret
jnp
cmp
aas
dec
mov
movsl
or
lods
xor
ss
push
movsb
xchg
out
fcmovu
inc
cmc
out
adc
jbe
ret
int3
jmp
xchg
xchg
movsb
adc
ficoml
ja
push
inc
es
test
fsts
neg
xor
push
and
push
xor
adc
add
fcom
enter
inc
inc
out
adc
test
jo
daa
rcrl
mov
add
sub
add
and
test
lock
js
das
fldcw
or
popa
xchg
pop
divl
int
ljmp
nop
adc
in
stos
sub
xchg
div
je
jnp
fcmovnu
cwtl
xchg
rcrl
cmp
rcr
ljmp
pop
cmc
leave
cmp
popa
sbb
cli
mov
dec
cmp
mov
xor
cmp
xor
jecxz
cwtl
les
rcrl
cmpb
js
add
jno
test
pop
aas
xor
cmp
jp
andb
hlt
add
pop
push
addr16
pop
xor
mov
jp
jl
sbb
incb
rcr
mov
push
stos
mov
int3
xchg
add
rorl
mov
or
jmp
jl
insl
jnp
adc
cmp
popf
cmp
sbb
pop
adc
sub
cmp
mov
cltd
data16
pop
hlt
xchg
push
ficomps
push
aad
in
imul
repz
jle
sub
arpl
push
dec
sub
inc
outsb
push
mov
lds
into
fnstsw
iret
nop
cli
mov
in
inc
incl
push
stos
rcrl
pop
pop
jo
lahf
mov
outsl
inc
test
lret
and
mov
in
clc
test
out
inc
clc
lcall
push
and
add
rcll
mov
xchg
aas
mov
out
aas
test
sbb
stos
inc
pop
in
push
jb
scas
dec
mov
into
push
cmp
addl
pop
in
mov
push
testb
mov
stos
sbb
sub
in
or
cwtl
dec
push
inc
adc
pop
xor
pop
sub
daa
mov
enter
jbe
mov
jae
pop
clc
call
mov
fimuls
ret
lock
fcomi
test
imul
je
jg
jbe
addb
scas
dec
rcr
and
mov
jne
insl
in
xchg
cli
dec
aam
repnz
jne
sbb
orl
mov
pop
mov
shl
in
movsl
jg
sbb
cmp
int
movsl
rorb
daa
adc
movsb
fisttpl
xchg
dec
fcoms
clc
stos
and
jns
mov
loop
or
shll
dec
jae
pop
dec
xchg
insb
lds
ds
sbb
clc
and
xor
hlt
mov
ja
mov
imul
jns
loope
stos
push
js
push
jecxz
dec
xor
inc
xor
mov
stc
lds
mov
sbb
sub
pop
shrl
insl
inc
fdivl
into
aad
xor
add
dec
fwait
mov
enter
push
mov
mov
inc
dec
sbb
sahf
push
mov
aaa
out
dec
jne
lret
pop
pusha
pop
jge
cmp
push
xchg
add
cmpsb
ficomps
lods
aas
insl
mov
iret
or
adc
adc
cmp
shll
xchg
test
mov
pop
cmp
mov
lods
adc
dec
dec
int3
roll
add
rcll
mov
lds
xrstor
xchg
xrelease
sub
repz
cs
push
addr16
xchg
xor
add
fimuls
adc
or
dec
jg
lahf
enter
lret
mulb
xlat
jbe
push
sti
das
mov
rcr
movsl
pushf
jo
pop
lods
push
pop
jae
adc
pop
xor
pop
stos
hlt
sub
sbb
cmp
bound
fmull
icebp
daa
ret
notl
out
cltd
aas
stos
fistpl
shrb
fs
cmp
and
xacquire
lods
mov
in
dec
in
cmp
fucom
ds
dec
sub
dec
jae
pop
jns
mov
pop
push
fnstsw
push
fsubrs
out
ds
xor
xchg
test
rol
es
adc
roll
imul
fsubp
out
dec
rolb
addr16
inc
add
pop
adc
push
leave
rolb
mov
cmp
cmp
test
mov
xor
add
les
gs
dec
test
in
sub
shl
add
pop
ret
fdivl
nop
daa
jg
pop
inc
adc
cmp
int3
popa
ja
lret
xchg
xchg
adc
inc
adc
outsb
fisubs
adc
repnz
adc
xor
mov
xchg
je
imul
popa
out
jae
sub
leave
in
loopne
mov
mov
pop
dec
stc
jns
push
xor
call
fldcw
cwtl
aam
pop
out
xchg
mov
test
test
stc
clc
int3
test
enter
push
mov
sub
jl
xor
push
sub
lock
pusha
inc
and
aas
sbb
jmp
dec
sub
call
jnp
adc
fs
jle
mov
push
and
inc
int
sub
inc
or
fcmove
mov
push
imul
popf
rorb
jo
xor
roll
or
aad
sub
mov
xlat
dec
xchg
push
push
add
fildll
push
inc
xchg
jo
orl
adc
jne
xchg
mov
shrl
negb
pop
xchg
mov
cs
xor
ss
daa
xchg
and
lods
sub
aas
or
movsb
iret
loope
arpl
push
push
jo
nop
sbb
or
loopne
xor
or
out
lock
add
xor
movsl
shrb
pop
popa
lods
sub
insb
popf
push
jl
inc
jns
mov
or
test
repz
stos
mov
call
mov
loopne
fcom
shl
xchg
mov
jae
jl
and
mov
push
push
jns
sub
xchg
fistps
test
or
push
mov
stos
jmp
xchg
xor
adc
ret
in
loop
xchg
fisttps
jbe
push
inc
pop
pop
in
imul
sbb
stos
mov
or
out
mov
gs
push
mov
out
rcr
lcall
cmpsl
mov
test
inc
xor
jge
out
sbb
xchg
mov
pop
lock
jnp
or
dec
loope
adc
push
jb
decl
test
les
mov
xor
das
aam
cmpb
and
add
xor
call
mov
mov
jp
leave
imul
pop
scas
and
mov
sti
ljmp
fsubrs
cmpsl
js
fstl
pop
dec
push
mov
push
inc
scas
push
clc
mov
add
and
stos
mov
in
sbb
addr16
sbb
sub
inc
call
add
clc
mov
pop
mov
ficoms
jmp
mov
mov
scas
sarl
dec
sub
jg
sysret
push
fcompl
pop
ss
lahf
fs
ret
addl
es
loopne
sarb
pop
es
pop
fs
cs
stc
pushf
pop
cmpsl
test
iret
pop
pop
pop
popf
mov
pushf
outsb
iret
int3
insb
aam
ja
int3
pop
adc
enter
ficomps
sub
insl
adc
mov
push
cmpsl
add
push
sysexit
xchg
cmpsl
push
into
add
adc
xchg
cmp
test
repnz
xchg
mov
sti
in
add
push
pop
int3
gs
mov
lock
xchg
aaa
adcl
movsl
int
test
pop
fidivl
pushf
stos
push
inc
inc
leave
stc
cwtl
lret
loop
mov
sbb
idiv
mov
nop
and
mov
adc
push
rorl
negb
sbb
pop
sub
hlt
shrb
call
push
testb
jo
shl
pop
mov
jnp
mov
dec
ret
dec
or
cmpsb
xchg
test
pushf
dec
pop
and
dec
adc
adc
sbb
xor
adc
pop
sbb
imul
mov
rcrb
cmp
ss
cmc
es
aaa
sub
dec
aam
imul
repz
inc
jae
xchg
push
adc
fisubrl
mov
test
xchg
enter
lods
sub
fnstsw
xor
jl
sarb
push
test
andb
not
and
cmp
jo
cmp
lea
addr16
sahf
jmp
mov
mov
insl
scas
pop
icebp
insl
pusha
adc
mov
and
jge
lods
push
in
dec
cmpsb
sbb
daa
sahf
mov
sub
call
stos
dec
and
test
addb
pop
js
sbb
jno
sub
lahf
aam
cmpsb
popa
mov
mov
std
jecxz
mov
lea
add
mov
jae
jge
pop
xor
es
xor
fwait
icebp
sahf
jnp
inc
push
lods
rolb
fidivs
pop
test
es
xor
es
hlt
xlat
cmp
lcall
shr
leave
jae
imul
mov
push
aaa
jbe
into
pop
fdivl
sbb
testb
xor
and
scas
data16
sbb
test
es
cmp
mov
push
cmpsl
sbb
stos
sbb
stos
jg
xchg
mov
pop
outsl
sbb
in
sub
in
and
lea
lods
jns
sbb
es
mov
cli
push
and
xor
mov
loop
and
sub
mov
std
cmc
cmpsl
mov
iret
lods
les
adc
mov
adc
repz
jb
push
push
shll
fwait
cmp
inc
pop
imul
jp
push
jle
in
addr16
cmpsl
out
mov
inc
and
rorb
in
pop
sub
mov
xor
daa
je
js
adcb
mov
or
out
insb
loop
or
inc
jge
sbb
add
cmp
mov
jbe
fsub
lcall
and
in
fisttpl
xor
add
ret
mov
adc
mov
sbb
add
cmpl
std
sub
xchg
inc
es
loop
push
sbb
or
cmp
dec
outsb
xlat
shrl
and
or
push
jo
add
and
ja
test
ss
rorb
lock
and
lock
iret
mov
rcrl
mov
push
xchg
mov
fcoms
sbbl
outsb
mov
aam
shrb
cmp
sti
mov
xor
cmp
roll
mov
ja
sti
lods
int3
mov
pusha
jp
arpl
xor
cli
outsb
fstpl
and
pop
and
dec
fs
dec
jns
lret
movsb
pop
jmp
xchg
dec
jo
or
add
xchg
xor
out
and
js
mov
cmpsb
cs
out
and
or
scas
jne
adc
add
jno
cld
sbb
sub
xchg
jne
pop
jnp
fcomps
rorb
jo
imul
add
mov
sbb
popa
stos
ljmp
mov
cmc
dec
cmp
pop
gs
jmp
int
cmp
lds
xor
clc
xor
sbb
adc
data16
mov
idivl
rclb
adc
out
neg
mov
jo
lods
call
dec
aaa
sahf
test
in
je
sar
cmp
or
cmp
xorl
dec
mov
pop
inc
test
movsb
out
push
lods
jno
xor
int
and
pop
adc
jecxz
fnsave
sahf
mov
ret
leave
pop
xchg
fucomip
mov
xor
fs
shlb
push
sub
xchg
test
cmp
popf
mov
cld
imul
lods
fsubs
outsl
scas
or
inc
gs
insb
lock
mov
cs
mov
add
push
rclb
pop
in
fisttps
mov
fisttpl
roll
data16
orl
pop
int3
and
adc
lcall
test
scas
mov
dec
cmp
js
cmpsb
loop
add
and
dec
push
push
fbstp
and
pop
shlb
cmp
sbb
mov
pop
pop
and
xlat
fbld
pop
mov
jae
jge
cmp
mov
adc
adc
pop
lahf
notb
mov
in
pop
push
and
mov
xchg
jmp
sub
fdivrs
dec
mov
les
add
cmpl
push
scas
mov
and
mov
fwait
pop
rolb
jge
push
inc
pushf
leave
cld
popf
push
mov
pop
push
xchg
lds
cmc
mov
mov
fisubrl
cltd
mov
xchg
repnz
xor
dec
adc
xchg
push
dec
jp
push
mov
push
pusha
mov
dec
int
cmp
xchg
pop
xor
push
inc
and
cmp
fs
mov
xchg
xchg
pop
xchg
mov
arpl
push
mov
popf
cld
or
jecxz
xor
popf
aad
jo
scas
nop
int3
repnz
mov
mov
pop
pop
dec
enter
cltd
pusha
push
adc
icebp
xor
mov
mov
push
or
xchg
aaa
icebp
fldcw
orb
adc
and
stc
addb
in
imull
sbb
lock
lea
shll
xor
pop
push
out
je
sub
fcmove
sbb
js
enter
mov
stos
mov
popa
sub
cmp
add
xlat
fisubl
jmp
lret
out
mov
push
lea
orb
aam
xlat
mov
pusha
mov
std
adc
rcrl
fidivl
gs
push
addr16
mov
sahf
push
cmc
inc
add
cmpsb
mov
orl
xor
roll
push
popf
clc
jo
dec
push
mov
mov
mov
ljmp
mov
stos
jecxz
or
mov
push
sbbl
jae
push
lcall
addb
mov
cs
pop
sti
mov
push
sub
loopne
ljmp
pop
xchg
mov
mov
rcll
cmp
clc
dec
out
xlat
je
std
sarb
sbb
and
sbb
or
mov
movl
mov
jmp
sahf
int
sbb
mov
mov
dec
push
mov
aad
sbb
or
push
xor
mov
popf
push
repnz
xor
cmp
ret
add
xchg
mov
sub
ja
pop
loop
fwait
and
inc
mov
cmp
inc
mov
push
sub
adc
mov
int
sub
in
lret
fldenv
stos
add
push
mov
imul
pop
rcrl
mov
and
into
dec
xchg
cwtl
imul
xchg
imul
jg
and
je
std
mov
push
sbb
js
jmp
push
repnz
inc
cmp
into
mov
addb
mov
addb
in
fwait
dec
mov
arpl
push
ret
imul
jecxz
dec
scas
and
push
lods
outsb
jge
decb
int
cwtl
in
pop
arpl
pop
int
addr16
mov
add
fdivrl
pop
pop
xchg
jmp
cmp
push
add
pop
adc
cmc
cmp
xchg
into
mov
mov
and
jne
fldl
leave
cmp
test
lret
and
cmp
xor
notb
xchg
dec
arpl
mov
je
jmp
loope
sbb
shll
and
jp
test
jnp
xor
inc
lods
into
scas
and
shll
clc
gs
nop
add
inc
mov
xor
rcll
les
xchg
mov
cmpsl
sub
xchg
jo
or
sarl
inc
pushf
jmp
xor
adc
dec
out
lods
lods
cmpsl
lods
lahf
in
loopne
out
movsb
addl
xor
mov
dec
add
lock
outsb
push
jne
cmp
clc
xchg
and
cmpsl
in
lcall
sub
mov
sub
sarb
sub
sub
stos
dec
lcall
mov
inc
icebp
mov
cltd
out
adc
ds
inc
leave
clc
mov
je
pusha
clc
repnz
cmp
imul
pop
enter
xor
in
cmp
xlat
xor
cmp
test
push
mov
pop
dec
out
jmp
mov
les
mov
dec
std
xor
ret
shl
out
lret
xchg
mov
fwait
ds
pusha
iret
lcall
mov
mov
push
sbb
add
mov
into
fstl
lahf
mov
inc
inc
repnz
in
and
inc
idivb
mov
sub
outsb
arpl
or
mov
adc
dec
hlt
mov
push
shl
fldln2
add
orl
stos
xor
jmp
push
inc
cmpsl
sub
mov
xor
mov
insb
mov
arpl
arpl
test
into
mov
das
lds
pop
add
xchg
cld
jno
add
jo
push
and
sub
sahf
into
inc
mov
add
sysexit
fstpl
mov
mov
pushw
fwait
dec
rol
ds
stc
add
adc
xchg
cmp
cmp
outsl
push
pushl
shrb
push
shll
jl
jge
mov
inc
pop
pop
rclb
sbb
jge
mov
repnz
adc
cmp
addr16
xchg
inc
mov
sub
jae
dec
in
shl
or
fisubl
call
mov
add
xor
adc
jge
pop
cmp
xlat
outsl
int
loop
arpl
rclb
xlat
loopne
js
mov
xlat
inc
shlb
adc
test
push
subl
out
dec
cs
inc
pop
xor
cmp
xor
ret
das
repz
repnz
jno
pop
sbb
jg
mov
xchg
mull
out
push
lock
adc
popf
out
adc
mov
shr
pusha
or
push
pop
jg
inc
mul
mov
dec
lahf
jg
test
sub
rorb
mov
stc
sub
mov
cld
fprem1
aad
js
dec
into
rolb
inc
add
cmp
clc
lods
dec
jno
cs
ret
test
cs
and
xlat
jg
pop
test
subb
popa
inc
mov
xchg
ljmp
insl
push
xchg
xlat
pop
inc
ret
pop
mov
xchg
mov
lock
dec
outsl
adc
movsb
imul
lock
jge
push
enter
or
xor
xchg
xchg
rolb
mov
or
scas
daa
in
mov
xchg
dec
scas
andl
mov
adc
push
adc
lods
lods
jo
mov
and
or
sub
xor
or
lret
or
sbb
mov
or
xor
cmp
xchg
dec
testl
fucomp
hlt
dec
sti
or
sub
orl
adc
jne
mov
mov
dec
dec
imul
stos
jae
out
xchg
cld
xor
test
or
pop
ljmp
mov
pop
adc
mov
push
inc
hlt
jmp
dec
inc
mov
sbb
ficomps
test
push
ret
out
adc
hlt
sub
adc
out
shrb
aam
das
jl
ljmp
fiaddl
mov
stos
dec
loop
xchg
dec
mov
cltd
push
mov
and
push
jbe
pop
out
mov
xchg
jbe
scas
inc
push
and
or
shll
fldz
inc
jecxz
incb
mov
sub
lock
mov
mov
sub
jecxz
lea
lcall
addl
inc
imul
push
adc
sbb
inc
sub
imul
test
hlt
lea
mov
lret
addr16
sti
imul
mov
std
xor
mov
mov
jp
cmp
fisubl
shr
int3
and
das
icebp
nop
mov
xchg
fldcw
nop
cmp
in
movsl
cmp
jl
mov
lret
mov
sub
adc
jae
sub
subl
mov
jl
popl
fs
and
ja
jnp
lods
gs
push
repnz
add
mov
test
xchg
imul
into
or
xchg
jbe
push
cmp
jbe
adc
push
xor
clc
cld
lea
dec
nop
cmc
lcall
sbb
nop
popf
mov
lea
or
xchg
or
test
and
lods
ficoml
xor
cmp
cmpsb
push
testb
add
cltd
pop
out
dec
xor
mov
xchg
push
xchg
cmpsb
jb
repnz
cmp
das
sahf
out
push
repz
popa
bound
push
pop
cmc
lock
mov
les
icebp
mov
dec
push
leave
dec
mov
jg
push
mov
out
push
jp
ror
push
aad
add
pop
jo
or
sub
push
pop
xchg
mov
out
dec
es
push
rcrl
mov
or
mov
fsubrl
or
or
or
sbb
mov
inc
xor
daa
xchg
das
nop
dec
mov
jl
aaa
add
clc
push
or
xchg
imul
out
jnp
sti
sub
mov
xchg
das
mov
es
push
dec
sbb
sbb
mov
push
cmpsl
jecxz
push
out
cmp
mov
xchg
xorb
loopne
xor
or
outsb
pop
ret
mov
mov
fdiv
inc
aam
aam
fistl
daa
pop
xor
dec
jbe
enter
ljmp
movsl
jp
sbbb
aas
pop
sbb
sub
call
aad
dec
xor
mov
dec
add
adc
das
xlat
sbb
xchg
mov
loopne
lret
xchg
cltd
cmpsb
sbb
mov
pop
mov
js
sub
nopl
es
mov
popa
shrb
sbb
xchg
test
daa
xchg
pcmpeqw
les
outsl
cmp
or
add
aad
fadd
mov
imul
add
orb
sub
lcall
in
cmp
sub
mov
outsl
add
pop
mov
inc
mov
call
or
shlb
sbb
cli
mov
inc
stc
out
test
lock
mov
jb
int
and
pop
xor
test
ljmp
mov
jp
rol
stos
mov
jl
fimuls
xchg
push
push
test
outsl
ret
push
fcoms
cltd
inc
pop
fnstcw
lds
jo
cmpsb
faddp
hlt
repnz
sbb
scas
xor
jne
loopne
pop
lret
pusha
jno
push
and
pop
mov
imul
filds
nop
in
fisubrl
out
filds
mov
clc
sahf
into
or
dec
popa
xchg
cmp
cmp
int3
in
outsl
cmpl
add
outsl
data16
mov
shll
mov
cmp
dec
cltd
jnp
xchg
test
js
lods
cmp
mov
or
scas
inc
das
push
stos
pop
shlb
in
cmpsl
aam
je
aas
pop
mov
push
lret
xchg
push
mov
negl
stc
sahf
pop
fsubs
icebp
sbb
mov
sahf
pop
mov
stos
and
in
cld
fidivl
mov
xchg
leave
sub
add
mov
pop
leave
pop
or
fisttpl
test
push
sub
mov
stos
cmp
sti
fwait
pop
loopne
cli
jnp
pop
xchg
loop
lods
ds
les
and
jecxz
dec
mov
lea
rorb
aas
xor
ret
or
aam
sub
or
imul
test
mov
stc
in
in
stos
or
or
sub
xor
push
clc
lock
scas
add
mov
ja
rcl
sub
inc
in
and
bound
sub
mov
aaa
pushf
jmp
loopne
xchg
sbb
xor
lds
xchg
lahf
dec
nop
loopne
stos
inc
jle
add
dec
shl
push
xchg
nop
cli
jbe
fcmovu
mov
cwtl
into
inc
sbb
xor
add
and
fiaddl
sbb
push
sbb
push
dec
imul
mov
rcll
imul
lret
in
mov
push
or
lods
notl
fcomi
int3
cmp
pop
sub
aam
jnp
push
rcrl
and
out
sbb
cwtl
mov
pop
mov
rorb
into
jne
in
mov
jl
mov
fldl
rcr
xchg
push
sbb
imul
pop
aaa
jno
aam
jns
dec
mov
and
insl
and
arpl
adc
cwtl
mov
jmp
sub
add
push
fildll
xchg
xchg
xor
push
mov
mov
mov
pushf
cmp
scas
xor
fisubl
adc
dec
mov
jp
wbinvd
sbb
pop
aam
stc
pop
xchg
dec
adc
adc
repz
lahf
jmp
sarb
adc
enter
inc
aas
adc
shl
cmp
dec
dec
mov
testl
push
loop
push
xlat
mov
sub
inc
sub
scas
out
or
mov
mov
test
and
in
int3
daa
frstor
fcoml
jl
outsl
pop
fdiv
jl
xor
sub
daa
push
in
push
jbe
inc
aad
cmpsl
jbe
xchg
sub
pop
movsb
hlt
inc
jns
mov
xchg
dec
jle
loop
adc
pop
mov
in
jb
adc
inc
mov
js
fs
jno
xor
mov
or
lcall
leave
adc
icebp
push
fiaddl
xor
push
cmp
adc
push
mov
rorb
push
sti
outsl
sarb
loope
inc
mov
repz
imul
out
andl
add
jl
shrb
in
mov
das
push
mov
cmp
and
push
out
dec
adc
into
jb
jecxz
inc
ret
insl
out
outsl
addb
iret
jns
out
push
pusha
cmp
ret
addr16
inc
loope
xorb
pop
test
jnp
pop
mov
stos
jle
sbb
adc
pusha
push
inc
jb
cmc
pop
sub
sub
lock
add
sbb
adc
insl
jae
stos
das
jle
adc
and
aam
dec
jg
inc
dec
dec
add
fdivr
mov
mov
int3
shl
mov
mov
cli
sub
jno
mov
lock
jo
pop
mov
mov
pop
mov
fmulp
inc
mov
jmp
inc
sub
ljmp
mov
call
pop
push
test
ja
loope
and
and
call
jg
add
test
mov
sub
xchg
ret
data16
xor
int3
cld
dec
adc
sbb
dec
or
orl
scas
std
stc
push
and
mov
bound
lret
lods
push
push
sbb
cmp
ret
xchg
addr16
shlb
mov
cmp
or
cwtl
xchg
mov
icebp
lret
dec
sbb
in
test
xor
push
inc
inc
dec
cltd
aam
push
arpl
pushf
insl
lret
pop
inc
mov
mov
mov
cmpsb
adc
scas
incb
adc
add
imull
hlt
push
push
or
pop
add
loopne
cmp
fisubrl
movsb
jb
movb
push
mov
adc
stos
or
and
push
fmuls
test
push
adc
mov
shl
xchg
mov
ror
add
jecxz
lahf
mov
lds
jp
push
fwait
jmp
repz
jae
aad
loop
cmp
jne
pop
inc
jg
xchg
or
sbb
in
incl
orb
test
adc
push
jg
xchg
inc
stos
les
xorl
repnz
add
push
lock
imul
add
fstp
imul
bound
sbb
dec
pop
ds
sub
gs
nop
ret
sub
push
clc
xchg
negl
adc
test
dec
fmuls
int
stos
mov
in
push
hlt
stos
outsl
in
dec
inc
out
inc
mov
andb
inc
insl
push
sbb
or
es
adc
dec
mov
jae
test
mov
xor
in
mov
inc
out
ffreep
clc
mov
lret
es
xor
dec
popa
inc
scas
outsb
inc
xchg
aad
and
sti
push
mov
scas
ja
mov
xor
stos
or
ja
ret
sub
mov
cmpsl
mov
lret
jb
jns
movsl
les
pop
aam
negb
mov
lahf
adc
loope
cmp
negl
jbe
cmp
add
or
mov
mov
roll
dec
mov
jae
jp
fildll
aaa
adc
bound
pop
orl
or
cmc
mov
out
dec
xor
fsub
inc
ds
mov
pushf
insb
push
stos
cltd
lods
inc
imul
cli
fistpl
xor
aam
insl
pop
lcall
scas
mov
leave
cmp
pop
mov
incl
stos
and
pushl
add
sbb
mov
dec
xchg
sub
lds
mov
xchg
jb
xchg
out
ljmp
push
jnp
mov
sbb
lock
lock
mov
out
mov
test
xchg
imul
xchg
add
mov
dec
inc
or
jle
mov
ds
jl
outsb
adc
add
jnp
or
adc
adc
mov
add
adc
and
cmpsb
mov
decb
ret
jbe
and
xor
xchg
jp
shlb
hlt
call
aam
scas
inc
out
cmp
push
fistl
out
xchg
mov
jb
fldt
ffree
les
jb
xor
jge
mov
push
je
int3
addr16
or
sub
scas
push
xchg
popf
or
fwait
pop
shlb
sbb
mov
dec
inc
push
fstl
and
ror
in
pop
pop
lcall
xor
mov
sbb
dec
clc
inc
mov
loope
call
add
jo
sbb
mov
mov
rclb
jge
fldcw
int3
ret
mov
clc
mov
adc
movb
xchg
faddp
sbb
ljmp
pop
jb
push
pop
add
add
dec
test
mov
push
push
push
mov
lea
push
cmp
pop
loop
mov
das
loopne
arpl
cld
cs
out
mov
mov
es
data16
sub
pop
sub
cmpsl
test
xchg
sub
mov
jno
cmpsb
lcall
mov
cmp
or
and
jecxz
imul
icebp
jo
out
mov
mov
test
dec
out
sti
jg
cmp
hlt
loope
cmova
add
or
stc
pusha
arpl
popf
out
fs
outsb
pop
bound
daa
leave
jg
sbb
fdivrl
int
ret
lret
je
rorl
jbe
jge
ljmp
jbe
fldcw
mov
jmp
je
pushf
fisubrl
in
adc
movsl
sbb
jnp
lods
cmp
mov
enter
or
push
fisttpll
cmp
fildll
and
dec
push
pushf
push
and
cmp
out
aas
add
mov
cltd
iret
in
sub
stos
out
xor
cmpsl
or
cmpb
mov
or
bound
addr16
and
cmp
mov
sub
sub
mov
arpl
jecxz
int3
lea
jbe
jno
push
sbb
aaa
aaa
cli
or
mov
sarl
xor
in
jo
mov
cmp
dec
ljmp
sbb
push
loop
out
jns
fsubl
jle
push
jl
push
xor
mov
sub
sahf
lods
aaa
js
cmp
imull
xor
push
jo
scas
adc
push
int3
cld
mov
cmp
jnp
loop
jle
movsl
insl
jp
inc
mov
je
sub
lods
insl
cmp
out
cmp
sbb
sub
fmull
mov
lahf
popa
out
mov
test
insl
sahf
adc
fadd
xor
push
and
ds
add
or
inc
xchg
add
insl
push
xlat
rcrl
nop
or
push
out
sbb
lcall
shrb
xchg
cmpl
scas
mov
lahf
cmpsl
out
mov
add
inc
xor
adc
inc
sbb
jno
dec
sbb
sbb
and
adc
add
ljmp
data16
adc
repz
jl
in
or
mov
clc
es
sub
outsl
cmp
daa
outsb
jo,pn
sbb
push
aaa
adcl
fstpt
or
jb
out
mov
outsb
imul
mov
add
or
adc
dec
xchg
jno
fcomps
mov
cmp
push
lock
add
push
cmc
push
fmulp
cmp
inc
jge
jecxz
adc
shrb
cmp
or
inc
ljmp
movl
add
xchg
mov
imul
enter
mov
push
sbb
popf
sti
cmp
insb
imul
call
aam
movsl
lods
outsb
push
imul
push
xor
not
subb
arpl
mov
mov
xchg
cli
xchg
lods
mulb
mov
hlt
leave
ret
lods
int
dec
jbe
or
jnp
push
pop
jne
idivb
loopne
mov
push
xor
loope
out
and
in
and
xor
andnps
pop
push
mov
push
xor
add
mov
into
pop
pop
fidivrs
mov
and
arpl
test
sbb
adc
push
jns
cmp
lret
jb
jle
jl
inc
pop
ds
hlt
lock
out
add
ja
aas
sti
jne
out
cmp
mov
inc
push
adc
scas
push
in
movsl
mov
imul
and
xor
lahf
mov
ljmp
mov
and
imul
jbe
inc
mov
cld
or
in
xchg
pop
jns
jecxz
mov
cmp
dec
jne
jae
hlt
rcr
shrl
xchg
or
test
xor
adc
and
mov
inc
xchg
out
or
loop
negb
inc
in
jl
movsl
mov
pop
test
and
fs
mov
xchg
outsl
data16
mov
iret
and
xor
mov
ret
dec
mov
cmp
jmp
popa
lds
xor
mov
mov
scas
jle
cltd
outsl
mov
adc
ds
rcrb
int
outsl
sub
mov
add
mov
cmpsb
jecxz
loopne
loopne
adc
xor
sub
jle
jno
cwtl
mov
sbb
and
adc
mov
xchg
aaa
jae
push
xor
jb
dec
das
sub
shrb
es
arpl
inc
les
mov
lea
sbb
mov
clc
push
lods
jecxz
mov
test
fisttpl
sbb
cld
in
sbb
push
fwait
jns
loop
mov
and
and
movb
add
mov
test
notb
das
sub
pop
jg
or
scas
mov
push
mov
loope
lahf
inc
mov
cmp
es
add
or
into
xor
in
pop
test
cmc
out
fcompl
sub
loop
inc
xchg
adc
pop
pop
orl
jecxz
jbe
aaa
mov
pop
mov
dec
cmpsb
in
mov
imul
dec
icebp
dec
into
bound
xchg
xchg
xor
or
daa
add
add
inc
div
or
aaa
lods
jnp
jbe
jg
xchg
in
fisttps
mov
mov
pop
outsl
dec
lock
dec
xor
call
dec
sub
sub
jo
adc
mov
popa
fdivs
jle
xor
and
test
and
sbb
fucomp
inc
push
jg
stos
mov
outsl
into
push
sbb
dec
popa
mov
aam
xchg
pop
fcom
pop
add
imul
shll
test
imul
in
inc
jne
mov
lret
insl
data16
adc
push
cmc
jecxz
popa
pop
fnstsw
pusha
ds
jb
mov
pushf
shrb
jnp
lods
arpl
pop
and
das
out
mov
int
xor
div
arpl
pop
aam
out
addb
xor
add
stc
in
sbb
test
fnsave
mov
into
lahf
xchg
jmp
or
mov
in
lods
mov
movsl
jl
movsb
roll
std
and
xor
pop
popa
jmp
sarl
or
and
xor
push
sub
out
mov
loope
filds
in
ds
and
pushf
push
orb
adc
push
sbb
mov
cld
adc
pop
sub
xor
scas
mov
sub
fisttps
cmpsb
jle
dec
and
push
push
mov
sub
les
subl
jecxz
cmp
sbb
pop
mov
aad
dec
repz
mov
ret
jo
xchg
ret
scas
scas
xor
and
pop
fcmovu
test
fwait
mov
cmp
dec
sarb
and
std
test
mov
jg
test
int3
jne
sahf
bound
cld
push
mov
in
push
cmp
mov
push
xchg
addr16
fisttpll
xor
loop
dec
iret
iret
data16
lahf
leave
scas
ds
xchg
and
inc
aad
repz
xor
push
xlat
popa
aam
bnd
pop
sbb
dec
pushl
in
xchg
adc
xchg
or
push
popa
mov
jg
in
adc
cmp
mov
ret
lock
xlat
push
lret
dec
push
lods
jno
aas
movsb
mov
negb
sub
out
lds
jmp
insb
or
imul
cld
fs
jmp
in
rorb
pushf
mov
push
pop
lds
sub
lods
adc
jno
fcoml
js
jg
and
jbe
stos
cmc
negb
cli
or
jno
sub
gs
pop
or
add
ljmp
mov
dec
mov
outsb
fs
aam
xor
cmc
mov
out
mov
jp
in
out
aad
insl
mov
test
pop
pop
and
jmp
fists
pop
jmp
repz
inc
adc
mov
push
lods
jmp
jne
popf
push
xchg
ja
xchg
cmc
lahf
cmpsl
aad
mov
or
xchg
stos
push
push
pop
sbb
mov
out
insb
rcll
xorb
leave
or
jecxz
mov
inc
popf
lret
lea
lahf
adc
adc
mov
mov
inc
bound
inc
js
rcrb
jle
pop
lods
aaa
xchg
les
or
push
inc
mov
xor
mov
add
mov
dec
dec
xor
xor
pop
hlt
mov
daa
pop
jle
imul
mov
arpl
outsb
imul
pop
push
and
rsm
test
xchg
ljmp
in
sti
pop
adc
adc
sbb
ljmp
lahf
pop
fmuls
aam
adc
xor
arpl
xchg
fldt
mov
rol
cmp
lods
popl
fldl
movsl
pop
ret
sub
pop
jl
jle
inc
fistpl
loope
push
sbb
mov
fldl
iret
xorb
lea
add
negl
std
ljmp
inc
jae
in
jns
sahf
cmp
idivl
and
daa
repz
jno
pop
mov
mov
mov
stc
mov
adc
fsubl
out
mov
push
mov
dec
sub
pop
xchg
lcall
clc
mov
xor
adc
xor
adc
jbe
inc
mov
es
xchg
add
mov
and
xchg
sub
scas
xor
adc
lahf
or
cli
stc
adc
repnz
flds
cmpb
in
test
sbb
mov
adc
push
adc
mov
scas
ret
add
push
sbb
pop
push
int
fisttps
cmpl
jmp
xor
mov
subl
fldenv
push
mov
dec
mov
fsubrs
shr
dec
xor
jb
inc
adc
jecxz
lret
cltd
in
push
divl
mov
jmp
pop
imul
inc
jmp
jb
mov
loopne
add
out
jb
sbb
adc
and
outsb
lods
sub
push
mov
mov
pushf
sarl
xchg
inc
push
lahf
adc
add
mov
fimull
mov
les
out
cmp
out
pushf
icebp
push
les
iret
sahf
pop
inc
sub
inc
fisubrl
pop
outsb
push
loop
ss
loopne
adc
fwait
push
sub
add
jg
les
xchg
mov
out
jb
mov
bound
adc
push
sahf
push
mov
call
xchg
mov
push
pushf
or
hlt
stos
in
dec
or
mov
sub
push
mov
sbb
lahf
testl
pop
and
mov
test
ja
mov
movsl
les
lds
sub
or
lret
repz
adc
dec
das
push
xor
lock
ret
xor
mov
dec
in
sub
mov
sub
jo
inc
test
sbb
xchg
decb
xor
les
xchg
jno
fiaddl
dec
add
inc
addr16
xor
mov
jge
push
stos
jb
cmp
xchg
push
xlat
mov
vcvtpd2dqx
mov
mov
adc
xchg
aam
stos
pop
push
and
cmp
popa
scas
pusha
int
jecxz
scas
jp
mov
sbb
xor
xchg
ds
jb
mov
mov
xor
pop
adc
push
cmp
pop
lock
pop
sahf
shr
sbb
sub
push
sbb
stos
mov
mov
iret
xor
insb
mov
pop
mov
aam
stos
test
das
movsb
mov
jecxz
data16
pushf
fdivrl
cmc
adc
insb
ds
dec
lods
lahf
in
imul
mov
mov
add
xlat
push
fdivr
and
or
test
aas
rorb
fimuls
loopne
aaa
in
pushf
xor
cmp
add
sub
scas
adc
and
andb
push
scas
loopne
cmp
stc
adc
jle
xchg
hlt
jp
pop
mov
and
or
mov
sub
cmp
mov
sbb
pop
ja
sub
test
add
fadd
lods
mov
mov
cld
loope
lea
in
push
push
cmp
jae
or
pop
addb
aaa
dec
sbb
fcmovbe
jns
call
dec
stos
mov
out
add
stc
or
and
lcall
shlb
inc
mov
pop
mov
outsl
jne
mov
rolb
xor
xor
mov
adc
pusha
loope
sti
pushf
movsl
cmp
test
leave
push
mov
popl
pop
mov
test
push
fidivrs
pop
push
xchg
push
cmp
aaa
inc
push
add
pop
dec
iret
mov
pop
insl
sahf
dec
cs
mov
dec
jp
test
and
orb
fs
lea
jae
lock
dec
out
scas
mov
les
jl
adc
stos
pusha
stos
loope,pn
xchg
arpl
adc
sbb
mov
clc
pop
subb
adc
fs
sbb
jo
cld
adc
adc
ret
outsl
dec
insl
icebp
pop
xchg
stos
dec
jp
mov
jl
add
and
test
and
add
bound
xor
push
rcrb
stc
fisubl
mov
xor
roll
rcrl
mov
out
xor
dec
test
cmp
mov
push
dec
fwait
push
in
xchg
popa
sbb
dec
jmp
pop
sbb
aas
pop
sbb
es
leave
xchg
daa
mov
sbb
inc
adc
push
jge
xchg
sbb
mov
ficompl
adcl
in
add
dec
jb
sbb
fidivs
or
popf
incl
mov
lcall
dec
xchg
in
jae
mov
push
jbe
mov
and
mov
iret
repnz
movsl
mov
dec
fsub
loopne
sbbl
jne
xchg
jg
lea
push
pop
clc
sbb
imul
sbb
or
pop
mov
cs
and
push
jg
cmp
xchg
in
mov
inc
in
hlt
les
sbb
cmp
push
mov
mov
movsb
cs
fwait
mov
imul
jae
and
jo
xchg
push
pop
pop
fidivs
shrb
arpl
ja
inc
and
pop
ficompl
mov
cli
pushl
sub
pop
pusha
and
mov
sarl
adc
pop
pop
push
mov
movsl
push
add
or
test
or
loop
in
lods
cmp
xor
loopne
in
popf
jo
jo
imul
mov
lods
jo
in
ss
pop
insb
loop
pop
mov
lret
mov
mov
xchg
jmp
mov
lock
fs
or
jecxz
call
mov
stos
pop
mov
dec
sarb
shlb
cmp
out
dec
mov
mov
outsb
in
lds
fcomip
movsl
xor
inc
dec
cmpsb
add
aam
or
jno
add
jae
mov
js
xchg
je
push
jno
rorl
dec
fxch
and
movsb
mov
dec
adc
negb
sbb
add
aaa
lods
pop
xor
jp
mov
push
fldcw
cmpsl
rcrb
and
jne
sub
and
scas
ja
fadds
rcl
sub
mov
stos
lahf
repz
icebp
stos
cmp
inc
pop
push
jno
popa
andb
xchg
sub
insb
leave
add
fnsave
stos
dec
mov
push
aas
nop
xchg
in
out
mov
das
dec
mov
imul
arpl
dec
jb
lds
test
pop
jmp
push
das
jnp
jl
popl
push
clc
ja
clc
int3
or
inc
or
mov
mov
push
xor
jb
les
scas
test
faddl
dec
adc
xchg
adc
imul
sbbl
bound
push
arpl
inc
js
shlb
leave
clc
sahf
pop
sub
fwait
daa
inc
cmp
test
and
pop
mov
outsl
mov
out
jne
rol
and
add
adc
in
lds
inc
jmp
mov
out
rcrl
dec
popf
clc
data16
test
cltd
in
add
pop
inc
mov
imul
cmp
add
pop
out
gs
jp
and
test
ret
adc
inc
mov
inc
and
cmp
cmp
out
lock
push
jns
call
arpl
mov
xchg
sti
xchg
adc
xor
aad
shl
sub
lahf
aad
stos
pushf
in
and
iret
or
pusha
scas
or
lcall
sbb
adc
adcb
loope
fisttpl
arpl
xor
sbb
cmp
add
out
dec
rorl
lods
out
inc
add
mov
adc
int
daa
pop
int3
lret
std
jb
and
inc
xor
icebp
out
movsb
mov
cmpsl
aad
xlat
xchg
pop
and
adc
cmc
and
es
push
mov
and
and
sbb
pushf
adc
xlat
dec
cltd
test
jo
xor
fwait
pop
mov
xchg
push
shlb
pop
cwtl
je
test
push
and
push
and
xchg
ljmp
fs
jmp
lods
into
jge
repz
mov
ja
das
add
es
sub
adc
push
inc
jo
xchg
fs
outsb
fidivrs
sub
fistpl
xor
and
pop
and
sub
das
jb
cltd
ljmp
iret
sar
fidivrs
lock
sbb
cld
sahf
cmpsl
lret
push
adc
cwtl
or
in
add
or
in
subl
or
iret
cwtl
mov
loop
cwtl
enter
pop
in
lcall
rorb
aam
lret
arpl
pop
add
cmp
or
rolb
testb
dec
in
out
pop
and
xor
loopne
jbe
ret
jno
push
outsl
stos
inc
enter
xor
add
icebp
js
test
call
into
inc
inc
pop
mov
jl
js
fstps
scas
stos
mov
jae
dec
stos
sbb
and
repz
sub
lcall
cmp
je
fwait
xchg
pop
divl
mov
shrl
test
mov
adc
jns
mov
cmp
aad
lret
lcall
notl
fdivs
sarl
or
and
gs
mov
loope
sbb
jmp
fiaddl
sub
cmp
add
xchg
add
dec
into
out
push
int3
xchg
int3
and
into
cmp
or
jl
aad
ss
loopne
pop
call
ds
push
sub
xlat
pop
pop
fwait
mov
cmc
nop
das
xor
jbe
sarl
rep
repz
push
das
pop
pop
int3
mov
mov
push
lret
aad
jo
mov
xchg
stc
cltd
mov
add
or
pop
lcall
out
inc
push
push
subl
mov
push
hlt
and
xlat
jne
stos
insl
adc
add
push
cli
fnstenv
dec
icebp
hlt
jns
inc
orl
push
loopne
cmpsb
outsl
div
scas
aas
loope
dec
mov
cwtl
out
cmp
rorb
sub
jmp
xchg
stos
or
iret
imul
lds
dec
hlt
or
cmp
je
push
scas
pop
in
jg
mov
addl
orl
cli
cltd
and
and
add
in
in
inc
pop
cmp
int3
pop
ja
push
fildl
test
push
and
mov
sti
cmp
shll
xchg
adc
shll
fwait
jecxz,pn
rorl
fnstsw
lods
lret
cmpsl
iret
add
xchg
cmp
inc
js
and
cwtl
jl
add
sub
movsb
clc
ret
in
lock
cwtl
xchg
mov
popf
cmp
sub
jg
nop
pop
adc
add
shrl
push
cmp
lods
push
mov
adc
test
cmc
or
xlat
or
dec
scas
mov
jno
cs
call
dec
xor
shr
sub
sbb
cld
jno
cmp
add
insl
clc
jnp
bnd
outsb
push
add
adc
sub
outsl
lea
push
in
imul
cs
mull
push
push
popa
loop
or
dec
xchg
adc
xor
sub
aam
jg
leave
ds
lods
jg
xor
xchg
cmc
cmpsb
addr16
inc
in
les
les
adc
fldenv
jecxz
and
stc
int3
and
into
dec
mov
pushf
pushf
mov
pop
std
call
jbe
outsb
ljmp
in
cmp
and
dec
xchg
lods
mov
sti
mov
xchg
fidivrl
and
xchg
lret
out
ljmp
dec
sub
lock
scas
aas
jmp
fidivrl
jmp
dec
xchg
sbb
dec
mov
jae
mov
aaa
jae
mov
ljmp
jns
dec
aam
xchg
and
add
jo
aad
inc
aas
dec
xchg
xchg
add
orb
in
xor
std
insl
leave
cmp
fidivs
push
mov
arpl
xchg
push
mov
cmp
jb
cmp
insl
mov
xchg
out
adc
add
cmp
iret
out
mov
fidivrl
xchg
mov
stos
imull
stos
in
or
fwait
outsb
mov
xchg
mov
cmpsb
cmc
dec
lods
cpuid
je
and
lcall
lcall
inc
sub
xor
inc
mov
jno
out
test
and
push
and
mov
and
xor
or
lret
or
fists
xchg
lcall
jl
repnz
or
cmp
cmc
mov
pop
ret
mov
adc
jo
push
ret
lret
sbb
dec
shlb
fsubp
in
inc
jl
sbbb
sub
fbstp
fdivrl
mov
imulb
mov
rcrb
adc
imul
jge
pushl
sbb
flds
aam
add
lods
push
mov
mov
add
mov
loope
out
aam
xor
jno
jg
mov
ret
std
mov
out
mov
jg
xchg
push
dec
jno
inc
push
cltd
repz
pop
mov
adc
fisttpll
mov
sub
adc
dec
data16
dec
or
add
pop
add
push
loop
repnz
inc
repz
aaa
std
and
orb
inc
pusha
cmp
or
inc
xor
adc
cmp
jb
push
sbb
testb
pop
mov
pmuludq
outsl
lret
pop
notl
shrb
and
cli
lret
push
dec
sub
add
xlat
loope
push
pop
sbb
ret
add
add
add
jp
xlat
movsl
outsl
cli
mov
bound
clc
jbe
popa
popa
xchg
dec
pop
insb
das
testl
xor
out
das
addb
ret
and
cmp
sarl
cmpsl
lret
bound
adc
mov
ret
mov
stc
adc
add
ja
ljmp
xchg
fidivl
imul
or
outsb
fs
sbb
mov
fwait
pop
sub
xchg
dec
mov
or
adc
jb
inc
xor
push
sub
mov
fstpl
add
xchg
loop
in
mov
jae
lahf
cmp
mov
or
stos
jns
xchg
cmpsb
in
rorb
xor
ljmp
in
rcrl
inc
jb
enter
mov
repnz
mov
adc
xchg
icebp
cmpsl
ret
xchg
fsubr
fnstenv
fistl
xchg
rcrb
adc
out
push
xchg
shlb
cwtl
xchg
fidivs
bswap
in
in
in
hlt
sarl
ja
hlt
js
loop
mov
or
int3
inc
popf
ljmp
mov
das
pop
pop
pop
shll
dec
sub
jns
push
test
stos
stos
mov
popf
cmp
dec
data16
cmpsb
cmpsl
pop
out
mov
dec
or
andl
sbb
sbb
or
pop
add
dec
shrl
scas
pop
shll
pop
mov
test
jg
mov
mov
sub
fcomps
and
mov
and
mov
pop
pop
das
mov
lock
mov
movl
jnp
jae
mov
loope
out
push
shl
inc
in
mov
loopne
adc
xorl
jbe
inc
cmp
push
and
fimuls
stc
inc
sbbb
sbb
add
outsb
bound
xchg
mov
xchg
push
mov
jecxz
sub
cmpsl
or
sub
notb
je
enter
mov
push
jno
clc
push
pop
lahf
xchg
es
jg
push
cld
das
jns
sbb
in
cltd
gs
dec
cltd
addb
mov
test
addr16
add
rorb
es
or
mov
xlat
test
xchg
pop
test
and
dec
test
jl
lods
lea
add
mov
inc
cmp
lcall
dec
sbb
seta
dec
adc
dec
call
mov
mov
les
or
insb
xor
stos
jb
insb
mov
test
jno
rclb
sbb
sti
aas
fiadds
loope
mov
jae
xlat
clc
sub
push
std
cmp
int
lret
push
imulb
mov
dec
clc
rcrl
mov
ljmp
pusha
out
or
add
push
pop
test
ret
cli
pop
out
jae
lahf
shrl
pushf
xor
and
xchg
rcll
dec
fildl
adc
loop
fwait
dec
js
jns
inc
int
dec
stos
mov
inc
cmp
mov
push
mov
jg
add
std
mov
xchg
mov
push
pop
inc
out
lea
dec
cmp
divl
and
pop
sbb
add
mov
test
add
lock
inc
xor
jae
movsb
jne
lret
pop
inc
stos
in
pop
push
jno
aad
inc
xchg
rcll
ljmp
push
dec
mov
jnp
test
add
aam
rorl
lea
out
data16
pop
mov
mov
incl
aam
cmp
and
push
in
bound
in
mov
push
jbe
and
lock
jg
idivl
pop
std
leave
mov
les
aam
lea
ljmp
rorl
arpl
call
adc
mov
lock
cld
aam
into
out
jbe
or
dec
loop
imul
dec
test
imul
cmpsb
xchg
sbb
rcr
stos
xor
adcb
add
cmp
push
cmp
sub
jbe
jo
dec
ss
add
push
fstl
adc
inc
xchg
adc
sarl
fwait
dec
xchg
push
jo
or
in
cltd
lahf
xchg
sbb
sub
add
mov
dec
xchg
cs
aaa
clc
sbb
fwait
or
fadd
jno
cmpsb
ret
jnp
gs
out
mov
subl
lods
xor
inc
inc
push
iret
hlt
lods
pushf
mov
adcl
inc
rclb
pop
sbb
into
adc
xor
sub
aas
shl
adc
mov
cltd
adc
icebp
stos
pop
lds
out
mov
bound
pushf
add
xchg
push
xor
cmp
fistpll
int
call
pop
ss
mov
adc
dec
out
xchg
fmuls
ret
cmp
mov
mov
cwtl
lret
cwtl
inc
nop
adc
ljmp
sub
mov
cli
cmp
add
add
fwait
jle
sub
or
cmp
xor
pusha
sti
clc
sbb
js
sub
andb
jno
sahf
sbb
push
sub
cli
jle
mov
xchg
sahf
loop
xor
push
jnp
in
inc
mov
or
pop
out
fnstsw
sub
push
xlat
add
cmp
xor
xchg
stos
and
mov
xchg
cld
cld
xchg
les
ret
aam
cmp
mov
inc
cmpb
and
xchg
rol
das
scas
stos
cmp
sahf
xchg
inc
packsswb
or
mov
cli
or
data16
xchg
mov
pop
mov
rcrb
ss
rcr
les
in
and
in
pop
or
ljmp
lock
scas
sbb
or
adcl
pusha
add
push
sub
ret
inc
inc
mov
or
imul
sti
and
add
and
hlt
inc
lahf
js
divl
subl
push
int
jmp
sbb
test
sbb
xor
dec
mov
lcall
mov
adcb
inc
cmc
sbb
inc
jg
sbb
push
cmp
fdivl
cmpsb
popf
cmpsb
roll
jbe
mov
inc
fstpl
cmpsb
aam
scas
cmp
and
movsb
inc
jle
dec
pop
loop
adc
mov
lea
adc
je
pop
scas
test
shll
in
jp
ret
sub
insb
insl
mov
lds
sbb
ljmp
nop
cltd
inc
cmp
into
iret
mov
shl
arpl
cmpsl
mov
add
pop
inc
aaa
xor
cmpsb
arpl
rcr
sbb
cwtl
fstpl
js
push
aas
pop
pop
mov
inc
cmp
cmc
dec
mov
cmpsb
bound
inc
cmp
mov
subb
scas
sbb
cli
sbb
jge
jne
fcmovnu
cmpsb
jg
mov
cmpb
fcmovnb
push
jge
std
int
andb
sub
scas
lds
mov
movl
xor
hlt
fmuls
mov
lock
sub
xchg
adc
mov
mov
hlt
mov
jnp
fdivr
sbb
inc
data16
iret
pop
movsb
or
lahf
jbe
add
scas
imul
int
xchg
jnp
ret
dec
clc
hlt
adc
int
sbb
das
aad
scas
mov
adc
movsb
call
xchg
call
insb
push
cmp
xchg
js
jb
mov
pusha
cmp
mov
loope
decb
ret
out
cmp
xchg
push
sub
xor
inc
out
push
pop
push
xchg
clc
imul
jnp
ret
add
jb
lods
inc
scas
lods
cmp
shlb
bound
dec
decl
test
inc
jb
inc
arpl
enter
stos
add
jo
stc
sbbl
lahf
bound
mov
jb
bnd
cld
into
fadd
mov
dec
js
jne
mov
lods
dec
rolb
cmc
adc
adc
mov
fwait
and
sub
xchg
hlt
test
js
mov
test
sbb
mov
sub
pop
mov
pop
mov
add
cmpsb
adc
scas
es
xlat
psrlw
outsl
push
cwtl
inc
sub
xor
dec
int
notb
inc
mov
fiaddl
loope
pop
push
dec
adc
pop
scas
cmpsl
iret
cmp
mov
or
dec
cmp
cmp
sbb
sahf
and
inc
cmp
sbb
stos
lods
aaa
mov
data16
push
push
inc
sub
mov
xor
fdivs
push
inc
ss
sub
push
push
icebp
mov
shll
push
negl
sarl
aad
add
pop
pop
lock
stc
gs
dec
jns
gs
jo
inc
jecxz
cltd
push
aaa
cltd
xchg
pop
mov
sub
cltd
lret
in
mov
daa
mov
outsb
jo
arpl
push
inc
scas
mull
fxch
xlat
out
xchg
filds
and
push
fmul
inc
lock
loop
add
add
or
inc
cmp
mov
int
jecxz
sbb
xor
add
fld
rclb
ja
push
push
icebp
mov
outsl
repnz
sub
sub
aad
shll
icebp
insb
sbb
adc
pop
stos
lds
lret
mov
das
mov
nop
sahf
adc
jnp
ss
test
xchg
push
in
dec
popf
or
ret
addb
cmp
jmp
sub
sbb
jb
adc
jne
fxch
and
jnp
fsubr
test
xchg
mov
xor
sub
push
gs
outsb
xchg
sub
movsl
add
ds
sti
inc
test
and
sbb
mov
jecxz
cmp
test
fwait
insl
xchg
mov
push
mov
push
cwtl
shll
fmull
xchg
inc
inc
pop
repnz
hlt
add
outsb
mov
sub
in
xchg
enter
aad
loope
xor
fchs
stos
insl
mov
jmp
ret
cmp
pop
and
mov
mov
movsl
and
inc
out
inc
xchg
push
cs
dec
sub
addr16
cld
popa
add
jns
pop
and
inc
push
sbb
cld
arpl
out
imul
xchg
les
xchg
incb
out
mov
or
mov
in
or
ret
or
push
dec
fwait
push
lret
inc
push
test
xorb
shll
and
jbe
aas
and
lret
xchg
lcall
lret
xorb
shr
mov
push
neg
pop
push
enter
ficomps
outsl
push
mov
mov
std
inc
nop
sub
popa
inc
adc
mov
cmp
imul
in
or
enter
js
loope
inc
out
add
cmpsl
inc
test
popa
mov
movsb
xor
adc
mov
movsb
pop
sub
sub
pop
fs
mov
inc
lahf
mov
lods
pop
push
mov
ds
jae
mov
lret
xchg
push
mov
xchg
cmc
out
outsb
insl
inc
inc
push
add
jo
orb
jo
stc
xor
das
jmp
or
out
das
lods
rorl
dec
pushf
mov
xchg
and
pop
and
jp
dec
fs
in
loope
lahf
sub
jno
fsubl
sbb
push
cmpsb
and
sbb
psubb
jg
inc
orb
inc
stos
jecxz
mov
sub
dec
out
loope
pushf
lods
push
inc
arpl
aaa
xchg
pop
lods
xor
sub
pop
or
mov
insl
jae
xor
rcr
add
xor
inc
lds
repz
push
mov
mov
sub
mov
loope
dec
cltd
cs
stc
pusha
fsubrl
rcl
add
xor
mov
mov
sub
mov
mov
xlat
iret
mov
inc
pop
and
adc
mov
stos
inc
bound
xor
rolb
das
pop
sahf
adc
insl
sbb
sbb
sti
jecxz
fwait
inc
xor
iret
dec
enter
mov
or
addl
pop
loope
lret
xlat
minps
sub
push
fnstenv
imul
lods
xchg
dec
js
push
mov
pop
push
mov
cmp
push
push
jb
cld
pop
cmp
xchg
lahf
lods
pop
push
repz
xchg
xor
cli
cmp
or
les
xchg
sbb
aas
cwtl
loopne
ljmp
xor
adc
pop
sub
je
in
dec
addb
or
lea
jnp
ret
pop
les
jp
add
dec
xchg
or
add
cmp
xchg
arpl
lcall
clc
pop
add
rcr
popf
nop
push
inc
loope
mov
sbb
imull
cmc
add
cwtl
fs
cmp
push
mov
lock
fisubs
xchg
xchg
mov
fisubrl
sub
pop
push
in
add
mov
gs
and
leave
mov
aas
fcomip
cmp
mov
fnstsw
inc
or
data16
in
sbb
sub
jg
xor
mov
dec
daa
mov
decb
xlat
add
inc
push
sahf
sti
inc
xor
es
push
mov
repz
sub
movsl
adc
and
push
adc
das
gs
sbb
test
mov
das
test
ss
fnstsw
mov
xor
rcr
sahf
mov
fnstenv
add
shrb
fwait
or
out
dec
addb
xchg
mov
and
lea
repz
pop
pop
orps
in
ret
push
lock
mov
aam
movsl
rol
shll
imul
fs
in
sub
fisubrl
into
push
sbb
inc
aas
lahf
in
mov
mov
cmp
push
mov
adc
jge
jb
addr16
mov
leave
addr16
repz
jecxz
cmp
mov
jg
call
mov
xchg
mov
pop
ss
adc
push
add
insb
test
and
test
mov
and
inc
or
dec
push
scas
or
xchg
das
mov
es
fldenv
or
sbb
std
stos
cmp
repz
or
ret
xchg
daa
mov
ljmp
pusha
xchg
mov
das
cmp
std
add
or
loope
jns
cld
or
push
jmp
daa
cmp
inc
mov
popf
je
jg
adc
adc
xchg
xor
mov
pop
mov
push
jle
sbb
dec
out
sti
nop
inc
std
mov
xchg
pop
mov
dec
ljmp
mov
adc
cmp
sbb
sbbb
lods
lret
cmp
dec
ss
or
dec
mov
mov
stos
test
dec
or
inc
push
fwait
jb
imul
lcall
int3
out
push
mov
push
repnz
cmpsb
lods
leave
jae
mov
and
push
and
jb
fs
adc
jae
inc
xchg
imul
in
stc
popl
ljmp
dec
test
inc
cmpl
xchg
jno
adc
pshufw
fdivl
pop
jae
ret
dec
mov
jne
xor
mov
lret
mov
pushf
cltd
test
add
inc
cvtps2pi
pop
mull
or
adc
test
imul
addl
test
jnp
push
in
add
dec
sti
pop
je
rclb
pop
or
in
inc
imul
xor
imul
adc
stos
or
or
enter
cltd
pop
push
mov
adc
mov
repz
xlat
mov
adc
push
scas
call
push
mov
das
int
arpl
adc
cs
lods
inc
and
mov
mov
dec
jp
inc
in
adc
cmc
mov
cmp
mov
sub
lods
into
nop
mov
movsl
mov
loope
push
mov
add
mov
or
xchg
cmpb
jle
lret
mov
xchg
in
lea
arpl
nop
dec
push
lcall
and
mov
iret
mov
jo
adc
mov
dec
sbb
inc
popa
bound
add
or
ljmp
pop
xor
xchg
rcll
stos
sbb
popl
or
pop
mov
int3
cmp
jbe
inc
sbb
into
mov
mov
xor
fbstp
std
push
orl
sub
les
jle
ret
in
js
pop
push
sbb
add
mov
and
add
cmp
cmp
or
xchg
sub
jmp
enter
stc
lcall
icebp
divl
je
jmp
xchg
and
aad
int
and
xor
pop
xchg
jb
mov
cmp
add
lret
push
xor
xlat
xor
or
jo
push
imul
pop
stos
into
mov
dec
into
fstps
call
loopne
out
shll
dec
fadd
sbb
fadd
outsb
lods
and
loopne
push
popf
xchg
jmp
adc
sub
cmp
shrb
xchg
stos
in
push
orl
scas
xor
stos
jbe
addb
lret
inc
or
inc
jae
mov
shrb
cmp
movsl
xor
outsb
jecxz
and
repnz
leave
mov
outsb
cld
cmc
testb
add
inc
or
jmp
push
pop
inc
xchg
fbstp
jnp
test
or
gs
inc
add
and
popf
test
xlat
incl
js
aad
push
lret
iret
jae
sarb
xor
aad
lahf
lcall
jb
ljmp
or
jb
mov
movsl
icebp
lock
cmp
cmpl
jno
aam
lahf
fisubl
pop
nop
add
lods
sub
cmpsb
jns,pn
test
lret
movsl
js
std
lcall
jns
pushf
jo
imul
xchg
sbb
mov
mov
dec
mov
gs
mov
pop
cmp
roll
cwtl
mov
lods
sbb
sarl
jbe
pop
push
push
or
std
lret
mov
mov
in
push
in
or
lret
into
hlt
push
inc
jmp
mov
orl
mull
addr16
outsb
jp
dec
mov
xchg
lret
outsb
fsubl
repnz
in
and
stos
mov
cmp
xchg
adc
push
or
ret
xor
jbe
lcall
or
test
fisttpl
pop
icebp
mov
jne
or
icebp
adc
cwtl
adc
mov
and
pop
xor
shll
mov
fistps
xor
mov
xor
pop
add
shlb
ds
pop
pop
inc
pop
leave
inc
fcmovnb
std
insl
std
push
aaa
sub
and
sub
inc
lods
or
daa
mov
imul
xchg
push
popa
fidivrl
adc
mov
in
adc
and
test
mov
pop
or
cmp
pop
jp
sahf
push
adc
lret
mov
mov
popf
cmp
in
mov
int
fnstcw
mov
jae
xchg
or
insb
pusha
cmp
jnp
or
ds
mov
mov
movsb
inc
daa
dec
faddl
arpl
lret
xchg
xchg
sbb
call
outsl
or
repnz
jg
test
xchg
fdivp
iret
lds
or
jnp
shrl
and
jmp
sti
or
testb
clc
sub
out
xlat
mov
jge
lods
mov
fnstcw
jmp
outsl
cmc
shr
sub
addr16
test
test
cmp
push
inc
jg
cmovbe
xlat
pop
insb
out
adc
cli
dec
fs
sub
sahf
lods
adc
xchg
aam
jg
inc
xchg
fisttpl
test
jg
xchg
ss
jae
popa
pop
test
jo
and
adc
adc
fucompp
mov
icebp
jg
lods
pop
std
rcll
mov
popa
lea
shrl
dec
xor
dec
test
ja
push
pop
inc
stos
mov
mov
sahf
mov
dec
sbb
cmp
mov
mov
imul
inc
shll
or
jecxz
es
lcall
mov
cmc
pop
outsb
mov
jbe
fcomp
repnz
mov
adc
mov
xlat
sub
mov
hlt
xor
dec
sub
dec
out
or
jnp
idivl
cmp
aas
leave
repnz
fisubrs
mov
push
rol
test
mov
xor
mov
sub
icebp
out
lock
mov
xchg
incb
push
daa
es
shl
outsb
xchg
push
fbld
xor
sub
enter
lret
mov
sub
mov
mov
cwtl
mov
lcall
inc
pop
cwtl
int3
ljmp
xor
jne
imul
movsb
push
hlt
sbb
adc
push
cmp
subb
dec
mov
sub
pop
cmp
add
lods
mov
test
xorl
ficomps
push
outsl
mov
addr16
jnp
hlt
mov
aas
push
mov
adc
mov
out
insl
stos
ljmp
sub
insb
cmp
push
fwait
cmp
aam
cmp
outsb
adc
mov
pop
ret
data16
into
fstp
or
push
in
pop
sbb
stc
inc
insb
loopne
fdivs
jmp
insb
fsub
pop
push
arpl
lods
xchg
xchg
mov
daa
in
xor
inc
shlb
push
mov
lds
fwait
xchg
outsl
cli
mov
sub
iret
data16
mov
cmpb
xchg
roll
pop
mov
mov
das
dec
hlt
sahf
mov
sbb
fdivrs
mov
leave
adc
sub
dec
adc
lea
push
inc
sbb
ss
jo
jbe
mov
cmp
repz
xchg
sbb
lret
outsl
aaa
aam
add
and
mull
ja
jge
push
xor
inc
or
arpl
or
add
cmp
ds
loope
mov
lcall
fcomps
dec
sbb
enter
ret
loope
int3
cmpsb
rcl
addr16
jbe
mov
into
es
scas
and
out
and
fldenv
cmp
mov
jmp
loope
sub
mov
sub
adc
pusha
mov
scas
or
xchg
inc
xchg
cmpl
pop
mov
es
call
jno
aaa
cwtl
jnp
sti
cltd
cli
inc
cmpsl
pop
xchg
inc
xchg
dec
cmpsb
jl
sbb
dec
cmp
mov
imul
pop
outsl
clc
lcall
popa
imul
mov
add
pop
mov
movsl
xor
dec
cmp
cmp
dec
cmp
mov
lods
adc
push
xorb
ret
sub
aaa
mov
jge
xchg
push
rolb
aad
xchg
sbb
test
ret
xchg
add
push
add
test
adc
hlt
fldcw
out
mov
test
orb
cmpsb
inc
aaa
jne
mov
mov
and
cmp
mov
fsubs
fcompl
adc
jo
jp
stos
lret
test
jb
pop
out
xlat
cmp
xor
ja
jp
lock
xchg
aaa
xchg
jp
xor
lcall
cmpsl
scas
cmp
push
pop
frstor
sbb
push
pushf
ret
jae
cmpl
push
fsubr
jne
inc
push
pop
mov
add
out
sub
and
cli
xor
fmuls
xor
mov
mov
arpl
mov
testb
nopl
mov
sahf
in
ljmp
or
mov
negb
cmp
push
jl
push
xor
dec
test
rorb
or
ja
push
call
adc
mov
add
dec
pop
call
mov
int
cmp
mull
ret
test
popf
cmp
mov
sub
test
enter
in
pop
sbb
cmp
mull
hlt
test
xor
stc
xor
mov
mov
xor
jecxz
jl
sbb
in
movb
popf
in
loope
add
xor
xor
or
ljmp
inc
pop
pop
adc
test
mov
sub
mov
test
xlat
popf
leave
shlb
pop
inc
outsb
or
pop
mov
sbb
lahf
cmp
andl
pop
dec
xchg
aam
test
das
loop
xor
ja
cltd
daa
xchg
imul
sahf
cmp
inc
pop
pop
lds
mov
enter
shrb
or
sbb
dec
jbe
mov
in
mov
hlt
push
jl
xor
dec
jns
mov
cmp
inc
add
in
aas
imul
bound
mov
test
mov
jmp
mov
xlat
xor
push
pop
cwtl
push
adc
push
ds
and
dec
pop
mov
movsb
test
push
adc
rcll
das
pandn
jmp
mov
mov
cmp
jne
sarb
or
dec
lret
rcll
in
xchg
inc
xor
sub
enter
loop
dec
cld
fstpl
cmp
cs
jp
cmpsb
adc
jns
jno
arpl
xor
cld
or
fstpl
mov
push
je
sub
lods
jno
dec
add
jg
movsl
pop
rorb
int3
arpl
adc
into
bound
repnz
and
mov
mov
pusha
outsl
je
ret
cltd
mov
xchg
or
sub
and
pop
faddl
inc
inc
lds
rorb
cmp
aas
cmp
imul
and
outsl
out
sub
pop
js
push
xor
sbb
xor
movsb
out
push
in
jns
movsl
leave
fnsave
fiaddl
aas
outsb
imul
cmp
xchg
inc
test
shlb
popa
mov
and
lret
sub
sbb
xchg
sbb
inc
mov
or
clc
test
lcall
sahf
jbe
push
pop
lahf
test
cmp
dec
mov
inc
or
pop
cmp
mov
pop
or
fcmovu
and
inc
xchg
mov
xor
xor
and
push
fcoms
arpl
movsb
xchg
cmc
in
adc
scas
fidivrl
test
leave
dec
bnd
mov
xorb
test
in
sarb
ss
mov
jp
int
sub
lret
jns
repz
fiadds
dec
rolb
into
ret
push
cwtl
pop
dec
lock
les
mov
shrl
pop
xor
testb
testb
mull
xlat
mov
mov
pop
test
push
les
dec
sub
mov
rcl
inc
jb
dec
loopne
push
dec
xchg
std
sub
inc
mov
sbb
cmp
fwait
lods
and
rep
or
sbb
in
jne
mov
shll
arpl
sbb
pop
add
add
fwait
sub
pop
xor
inc
cmp
and
enter
aas
adc
movsb
dec
push
cwtl
in
dec
inc
fists
imul
shlb
cmp
inc
int
xchg
sub
sub
es
test
xchg
aad
aaa
dec
sbb
push
mov
mov
shl
mov
cli
ja
lret
in
les
and
faddl
and
jle
xor
notl
loop
enter
jmp
pusha
imul
ja
push
push
out
xchg
insb
cli
cltd
xchg
test
xchg
ret
mov
xlat
xchg
cmp
pop
mov
xchg
dec
int3
adc
movsl
mov
loopne
and
inc
out
mov
rcll
xchg
adc
jge
call
rol
dec
jns
scas
jb
cmpsb
mov
test
daa
push
rsqrtps
or
add
pop
pop
lahf
sahf
lds
movsb
dec
iret
sbb
adcb
cwtl
xchg
insb
fs
mov
sbb
scas
jns
push
jnp
sbb
bound
pop
pop
fdivl
stos
stc
cli
mov
jg
pop
inc
fidivrs
test
inc
in
std
sti
daa
push
test
mov
xor
scas
ljmp
mov
sub
push
stos
stos
nop
mov
das
sbb
fiadds
sub
push
xchg
cmpl
cmp
mov
aam
inc
or
mov
pop
jnp
mov
ret
iret
jae
aaa
imull
push
push
lret
outsb
xchg
ljmp
or
gs
outsl
fildll
pop
in
adc
inc
insb
aas
mov
dec
pop
adc
cmpsb
imull
cmc
xorb
xchg
pop
fwait
daa
pop
lds
fwait
call
movl
sub
lock
fimull
push
sbb
ss
nop
jle
lahf
cmp
push
mov
cmp
gs
jb
pop
push
inc
hlt
or
mov
pop
lea
push
jge
inc
mov
cwtl
mov
cs
adc
ljmp
adc
loopne
or
dec
xchg
lret
mov
aam
ror
loope
adc
cmp
js
sub
and
cmc
mov
popa
pop
leave
in
inc
mov
jp
jp
jle
fcmovu
in
jbe
cmp
xor
inc
cmp
fisubrl
scas
dec
fsub
test
pushf
fdivrl
or
cmp
adc
jae
in
lods
mov
push
jl
out
mov
mov
mov
int
inc
inc
xchg
outsl
adc
xor
jbe
out
pop
cmp
mov
in
les
inc
and
out
mov
aaa
or
cmp
or
orl
pop
mov
adc
push
push
in
lea
xchg
cmpsb
fildl
xor
fisttps
sub
mov
outsb
out
xor
jle
cltd
pop
or
add
jmp
mov
or
xchg
add
dec
mov
xchg
dec
lea
testb
cmp
xchg
shr
testl
imul
mov
push
and
ja
xchg
pop
mov
push
fisubs
sub
fidivs
jmp
add
std
push
pop
popf
push
popf
xchg
mov
loop
je
cmpsl
das
outsl
cmc
cld
mov
push
rclb
pop
cmp
or
mov
aaa
push
mov
outsl
dec
mov
addr16
xchg
inc
adc
leave
out
jb
ret
push
push
out
cmpsl
push
mov
cmpl
mov
dec
cmp
repnz
shll
ljmp
cmc
and
cs
shll
and
and
fwait
jo
sarl
fmul
push
lock
in
lret
dec
adc
mov
test
cs
fstpl
xchg
or
pop
icebp
or
mov
pop
inc
pop
lcall
dec
scas
inc
dec
xor
cmp
out
xchg
cmovnp
fidivs
or
cwtl
nop
inc
and
ret
pop
mov
or
testb
in
faddl
in
sub
lret
or
push
subb
push
add
sub
mov
xchg
inc
jmp
test
cmp
and
icebp
adc
addr16
or
sub
test
jg
loope
out
arpl
xchg
dec
or
inc
sub
xchg
adc
push
lock
xor
rep
dec
cmc
mov
and
ds
push
push
cmp
jne
ss
arpl
stc
sub
ljmp
xor
movswl
jp
pop
mulps
daa
push
scas
in
in
and
jmp
nop
xchg
dec
popf
or
sub
popf
loop
mov
aam
lcall
xor
cltd
les
ss
push
insb
add
dec
mov
movsb
rorb
jb
inc
add
mov
sbb
mov
popa
inc
pusha
loop
xor
mov
cmpsl
push
fisubs
dec
inc
mov
or
pop
inc
insb
adc
adc
xor
fstps
daa
pop
mov
sbb
xchg
mov
in
sbb
aad
push
in
pop
aam
pop
aam
adc
aad
mov
jns
inc
mov
jo
inc
mov
mov
sbb
enterw
popa
cmpsb
shr
cmp
sub
call
mov
push
data16
add
aad
pop
insl
cmp
hlt
or
test
rclw
xchg
xchg
jne
popa
or
sub
loop
add
lret
cwtl
in
inc
mov
ja
inc
popf
ficoms
pop
mov
jl
fsts
mov
outsb
mov
mov
iret
push
ret
mov
pop
int
test
loop
pop
int
xchg
add
and
movsb
subl
leave
xlat
sahf
lea
pop
add
js
jno
mov
pop
add
jbe
scas
adc
shl
sub
out
jp
jno
stos
cld
jl
bnd
cmpb
mov
add
repnz
mov
in
jecxz
cmp
dec
dec
lea
xchg
out
and
jge
aas
or
cwtl
in
and
ret
dec
mov
mov
dec
mov
inc
push
fdiv
pop
jge
sti
pushf
shll
lret
sub
sti
cltd
mov
xchg
loope
decl
inc
push
scas
stos
xor
cli
lods
pop
xlat
lret
lahf
mov
inc
jo
stos
dec
in
mov
cltd
outsb
test
iret
outsl
into
shl
xor
bsf
stos
mov
inc
lds
js
stc
data16
cmp
mov
xchg
loope
mov
mov
pushf
or
push
nop
hlt
movb
add
sti
cmpsl
icebp
xor
mov
inc
jmp
xchg
or
movsl
lret
xchg
out
imul
push
sbb
or
lret
popl
mov
and
scas
mov
shlb
or
nop
fsubl
pusha
out
and
mov
cmp
mov
or
pop
and
push
and
and
jge
push
adc
adc
or
cmp
test
dec
inc
iret
sbb
call
mov
pop
pop
in
cmc
xchg
or
repz
pop
adc
stos
xor
ljmp
scas
fcoms
and
jo
icebp
andl
jno
add
or
insl
lret
out
mov
mov
mov
fcoml
pop
jg
sbb
adc
pop
out
xchg
jl
mov
icebp
sahf
mov
pop
cmc
sub
jbe
xor
lret
mov
adc
scas
daa
aad
sti
js
imul
dec
push
inc
and
and
xchg
mov
mov
push
outsl
and
jle
sahf
xchg
sub
inc
test
lahf
jmp
movsb
sbb
fs
fisttpl
xlat
xchg
jmp
push
enter
push
icebp
sar
iret
xchg
sarl
jns
aas
adc
mov
lods
ret
in
dec
pushf
xor
popf
shrl
test
pop
imul
les
jae
loopne
mov
negl
lea
sbb
ss
or
and
jmp
jp
sbb
ret
pop
paddw
call
inc
mov
inc
aaa
lcall
mov
fnstsw
iret
movsl
bound
push
or
pop
pop
ret
scas
inc
push
and
and
cmp
adc
test
movsl
cli
fcompl
sbb
pop
or
sahf
sti
insb
outsb
mov
sti
and
pop
adc
or
cmp
loopne
pusha
sub
sub
insb
mov
insl
cmp
or
lahf
inc
lods
xchg
subb
sbb
test
bound
jns
jecxz
adc
mov
test
push
dec
jg
jg
and
test
es
rclb
sbb
push
fs
shlb
jo
lods
push
sub
lock
in
sbb
lds
sbb
pop
add
jo
movsl
ljmp
and
fstp
sahf
mov
dec
and
xchg
stc
hlt
cmp
outsl
mov
clc
push
inc
pop
test
sbbl
cmc
mov
ja
cwtl
ja
jl
cmp
push
aad
addl
fldt
ljmp
out
mov
notl
mov
jecxz
loope
lock
aad
mov
add
add
rorb
aad
xchg
xchg
gs
mov
dec
es
ja
adc
cmp
cmc
out
mov
mov
pop
sarl
call
jp
cmpsb
sbb
cltd
pop
bound
jns
cmpsb
mov
inc
pop
dec
sub
lahf
je
out
rol
sti
push
xor
imul
and
out
add
or
xchg
add
scas
insb
push
stos
cmpsb
rolb
xchg
inc
cmp
fidivrs
pop
lret
mov
push
or
or
jnp
adc
in
int
and
pop
mov
jno
fs
jecxz
push
sub
mov
push
jecxz
ss
and
mov
or
sub
repnz
dec
mov
xor
add
sbb
cli
sbb
lods
mov
aas
jne
sub
xchg
adc
inc
cmpl
inc
and
cmp
imul
out
stos
outsl
pop
xchg
mov
sar
cld
cwtl
pop
loope
adc
cmp
insl
jg
insb
mov
mov
or
add
sub
cmp
cmp
or
rorl
add
inc
push
mov
or
pop
jo
xchg
cmpsl
ds
xchg
lods
pop
loopne
adc
add
rolb
or
pop
mov
repz
mov
mov
inc
cwtl
mov
sti
jb
sbb
add
movsl
adc
mov
add
stc
fs
ret
inc
pop
ret
les
mov
test
mov
xchg
dec
clc
test
or
pop
sub
add
push
jmp
pop
xchg
xchg
mov
pop
push
jbe
shl
ja
or
adc
push
pop
sub
jmp
jne
outsl
or
pop
jae
iret
xchg
imul
push
xor
mov
les
insl
xchg
pop
stc
aas
scas
test
cmp
xchg
jns
imul
inc
gs
push
sub
sbb
leave
sbb
lret
fdivr
xchg
out
sub
dec
pop
mov
pop
push
dec
ja
jle
jbe
rolb
in
movsb
jle
stos
adc
pusha
push
mov
orb
in
cmp
mov
sti
adcb
outsb
dec
dec
sbbl
repz
popf
bnd
cwtl
mov
sti
dec
or
pop
sub
jbe
inc
mul
les
sub
out
insl
sbb
inc
push
or
scas
dec
cmp
adc
dec
jl
fisttps
cmpsb
dec
sub
lahf
sbb
and
jno
xor
add
fs
push
in
pop
mov
cmpsb
push
or
dec
jmp
mov
insb
inc
in
pop
sub
jbe
jge
fcompl
push
movsb
pop
lock
and
add
js
dec
mov
push
jnp
jno
cwtl
icebp
ret
sahf
lds
dec
sahf
sarl
mov
dec
lret
pusha
loop
mov
lret
fimull
dec
mov
stos
jge
ja
fidivs
std
stos
dec
push
lret
sbb
cmp
sahf
sub
xor
adc
inc
jae
sti
mov
push
sbbb
sub
xchg
out
arpl
in
mov
nop
in
and
or
outsb
mov
repnz
mov
nop
popf
test
push
or
jle
out
jnp
ljmp
out
les
arpl
pop
mov
cmp
out
dec
out
into
ja
mov
fs
rol
mov
out
cmpsl
pop
and
jle
into
or
mov
jne
jne
daa
scas
sahf
push
xchg
movsb
mov
out
ret
out
push
mov
push
xchg
jbe
test
pop
cmp
mov
xor
push
popa
xor
push
dec
pop
test
sbb
jae
outsl
hlt
dec
les
push
cmp
shlb
mov
aad
ss
cmp
lret
int
popw
push
sbb
xchg
inc
out
aam
lods
xchg
lcall
lret
pop
pop
das
cmpsb
fstps
sbb
lods
sub
ret
and
cs
lea
cs
and
orb
cmpl
adc
mov
or
adc
mov
cmpl
inc
std
test
push
rcrb
loopne
ja
stos
and
adc
aas
imul
push
cmp
pop
push
in
clc
mov
cmp
jnp
loopne,pt
push
push
xor
cmp
sub
pop
jle
push
in
xchg
jns
pop
sbb
sbb
dec
lods
aad
enter
jnp
dec
pop
mov
sub
test
movsb
mov
rorb
jp
xchg
xchg
pop
hlt
add
fnstsw
pop
pop
jne
push
pop
inc
sbb
ret
pop
lock
jmp
push
pop
testb
sbb
push
ficoms
xchg
arpl
mov
jle
adc
xor
movsb
mov
add
outsb
push
or
fisttpl
lods
push
outsl
insl
fstpl
popf
dec
call
ret
push
cmc
pop
sub
pop
imul
adc
xchg
fmuls
icebp
add
mov
and
adc
adc
orb
lahf
fcoms
sub
sub
mov
movsl
test
setb
ret
sbb
out
lock
les
sahf
jl
xlat
loopne
adc
insl
jp
jge
jmp
adc
mov
test
movsl
add
pop
outsl
cli
sti
ss
and
mov
ja
repnz
shl
and
enter
jge
fsubrs
xchg
movsl
mov
call
adc
frndint
in
js
movsb
and
sti
mov
mov
cwtl
mov
vpmadcsswd
daa
and
sahf
xor
cmp
fs
or
pop
push
les
cs
cmova
mov
out
mov
mov
lcall
mov
push
rcl
mov
loop
dec
mov
pop
mov
mov
jno
mov
ss
xor
inc
inc
mov
sub
pop
sub
addr16
ret
mov
xchg
insl
repz
fndisi(8087
push
add
pop
das
lahf
pop
lds
pop
jo
push
int3
dec
loopne
or
nop
js
jae
mov
scas
loopne
push
push
jmp
sub
addr16
out
in
add
in
and
loop
lds
push
xor
and
test
inc
mov
je
ficomps
inc
mov
lahf
jecxz
add
rolb
int
in
sbb
fistps
out
mov
lea
sbb
repz
mov
dec
imul
leave
jbe
or
lods
jl
shrb
sahf
jmp
jbe
ja
or
fistps
xchg
dec
pop
loop
cmc
dec
pushf
lret
cltd
push
xor
push
pop
scas
jp
push
repz
sub
jae
push
mov
int3
and
jo
and
inc
fildll
pop
out
inc
fnsave
add
loope
scas
pop
add
popa
jecxz
stc
int3
jmp
aaa
and
hlt
xchg
in
movsl
insb
inc
mov
cs
out
ds
dec
inc
jno
push
fcomps
pop
adc
and
sbb
xchg
xchg
in
fsts
in
push
adc
sbb
ffree
add
mov
cmp
xor
xchg
popf
lret
lock
repz
cld
jno
or
push
imul
mov
outsb
cltd
cld
lods
ret
mov
jo
sbb
inc
xchg
pop
jb
fnstcw
xchg
dec
inc
xor
int3
push
mov
jb
mov
icebp
shll
les
cmpsl
movsb
push
and
in
cs
jns
rclb
outsb
cmp
xorb
and
push
dec
movb
js
lods
lret
ljmp
inc
cmp
lods
mov
and
mov
mov
adc
jmp
jl
mov
xlat
pop
dec
and
push
int
xchg
xchg
xor
addb
push
jle
popf
hlt
xchg
pop
push
inc
fisttpl
pop
push
faddl
or
push
sub
adc
jg
pusha
mov
mov
push
not
stos
sub
mov
pop
fs
add
mov
cli
jl
lea
in
xor
and
dec
scas
js
pop
out
sub
shl
outsb
cli
mov
dec
push
pop
adc
mov
or
and
movb
jl
xchg
cmp
dec
andb
xor
and
cmp
and
xchg
call
jp
inc
fs
negb
push
lahf
mov
and
and
push
mov
push
loopne
sub
rcl
pop
sub
inc
test
ret
lcall
insl
cld
or
outsb
in
hlt
idivb
inc
mov
adc
mov
sbb
xor
add
in
mov
mov
ljmp
fcompl
cmc
dec
jl
jp
mov
ds
jp
imul
pop
push
and
jnp
xchg
arpl
inc
idivl
and
push
cltd
inc
jne
lock
push
jmp
pop
stos
faddp
xchg
mov
mov
add
mov
adc
inc
dec
inc
sub
cmp
xchg
xor
mov
stc
xchg
cs
push
in
sti
inc
inc
aam
adc
out
cmp
enter
xor
ds
mov
cmp
xchg
push
pop
jg
hlt
leave
pop
xchg
movsb
out
sub
das
dec
mov
movsb
xchg
xlat
test
lcall
dec
div
xor
lods
jns
shrd
ljmp
inc
pushf
mov
and
xchg
in
ret
lea
add
sub
outsb
shr
push
mov
and
mov
pop
bound
test
imull
es
pop
dec
in
repnz
pop
cs
xchg
pop
add
out
push
es
push
aas
repz
mov
inc
addb
mov
mov
ss
lock
aas
mov
mov
xor
lods
pop
not
aaa
lahf
add
xchg
loope
scas
or
pop
int3
add
popa
inc
rorb
jae
fistpl
ficoms
in
pop
movsl
xor
fldl
lods
push
push
xchg
loop
jecxz
mov
xor
sti
mov
mov
movsb
test
cmp
das
xlat
jmp
loope
xor
mov
adcl
inc
fwait
push
js
insl
fs
mov
adc
pop
lret
adc
pop
popf
mov
call
mov
mov
cli
shl
pmaxub
out
rclb
icebp
sbb
and
sub
mov
sub
mov
inc
push
jo
xchg
popf
not
hlt
in
jmp
mov
insl
and
add
jo
cs
sbb
into
mov
bound
push
pop
dec
ljmp
out
push
ficomps
push
lahf
insl
pop
loope
lds
pop
pop
xor
mov
aas
adc
add
cmp
or
push
gs
mov
xchg
pushl
inc
call
les
cli
add
inc
sub
lea
pop
repnz
popf
repz
mul
adcl
pushf
movsl
and
sbb
cmp
psllq
loope
lock
in
xchg
adc
mov
push
mov
mov
xchg
xorb
mov
outsb
cld
push
dec
dec
mov
jmp
sbb
and
push
sub
jmp
std
cli
loop
arpl
inc
ret
or
or
mov
jge
mov
out
popa
fisubl
into
pop
push
sub
and
fimuls
les
add
sub
push
or
in
sar
or
xchg
jno
pop
loopne
rclb
leave
pop
cmpsl
loop
stc
mov
ret
inc
add
aam
les
xchg
fnstsw
fucomi
mov
decl
push
gs
pusha
inc
pop
inc
jb
shrb
push
mov
hlt
push
sahf
fdivrp
xchg
pop
mov
jmp
filds
lcall
xchg
dec
or
sbb
lahf
add
sbb
cmp
mov
xor
into
xchg
cld
inc
les
pop
int3
push
test
push
mov
jae
cmpsb
je
movsl
sbb
loopne
xchg
add
rorb
rcr
mov
add
pop
mov
cmpsl
les
out
or
cmp
data16
push
cs
dec
lock
sti
lods
push
add
mov
jl
and
mov
xchg
sahf
push
mov
cmpsl
loopw
mov
inc
xchg
inc
dec
fwait
push
dec
push
cwtl
and
leave
mov
cli
aas
or
pop
mov
mov
iret
data16
pop
pop
push
sbb
adc
aas
in
imul
cmpsb
mov
cmp
andb
les
leave
inc
lahf
dec
pop
rolb
loop
adc
test
test
ds
ljmp
cmp
movsb
mov
jae
cmp
sbb
push
decl
mov
cltd
movsl
jg,pn
pop
inc
mov
xchg
dec
jno
sub
fidivs
cmp
xor
cltd
stos
lock
mov
pop
cmpsl
ljmp
mov
out
xchg
pop
dec
xor
fidivrs
inc
hlt
inc
mov
xor
pop
add
mov
jns
test
mov
mov
sahf
clc
arpl
add
cmc
mov
push
push
pop
pop
dec
push
lret
ret
push
pushf
in
cltd
pop
loop
mov
pop
cltd
push
adcb
mov
xor
jb
vpsadbw
mov
int
pushl
std
add
xor
lret
cmpb
sub
push
es
gs
out
cwtl
test
outsl
sbb
push
call
push
in
lea
loope
push
lret
mov
mov
jp
add
adc
pusha
dec
movsb
scas
adcl
stos
ljmp
dec
and
dec
inc
je
mov
repz
out
xor
lods
xchg
mov
test
mov
xchg
and
push
and
stos
inc
sub
idivb
mov
sahf
mov
mov
push
sub
cltd
add
lcall
sahf
lcall
or
jnp
icebp
clc
xor
loopne
orl
outsb
sbb
aaa
imul
mov
inc
or
mov
cmp
mov
jcxz
jmp
cmp
cmp
in
jo
mov
loop
sbb
frstor
test
cmp
mov
inc
adc
fstpl
insl
icebp
repz
andl
cwtl
movsb
jns
adc
out
jp
add
push
inc
pop
dec
jbe
push
rcll
cmp
inc
test
mov
ja
je
sub
adc
xchg
pop
jg
push
mov
hlt
lret
insb
sbb
xchg
test
les
adcl
repz
mov
mov
push
into
add
mov
mov
popf
jecxz
xlat
pusha
mov
sub
push
adc
ret
fldt
sbb
orb
ficoms
xor
cmpsb
xchg
xchg
mov
hlt
aaa
inc
or
das
add
add
and
xchg
in
inc
daa
dec
cmp
fabs
inc
mov
incl
mov
data16
ja
inc
out
in
mov
jge
sbb
pop
loope
popl
adc
out
xor
paddsb
mov
push
dec
aas
and
jb
rcl
sub
dec
mov
jecxz
iret
fs
je
lcall
adc
popa
das
xor
dec
sbb
adc
add
sub
aam
jno
repz
push
rorb
sti
rcll
jns
das
ror
out
movsl
mov
mov
insl
push
push
in
aad
pop
and
adc
xorb
jbe
mov
addr16
sub
loope
push
jecxz
int
shr
cmp
movsb
lea
mov
daa
push
leave
xor
push
aas
pop
xchg
inc
imul
das
mov
fdivrs
jbe
bound
add
in
pop
pop
lods
pop
add
mov
cwtl
aad
movsl
loopne
push
ja
faddl
jae
or
xor
fsubs
insb
or
cmp
imul
aaa
mov
and
push
adc
cmp
push
pop
roll
xchg
push
dec
pushf
imul
dec
shrl
xchg
stos
jg
dec
test
sbb
movb
sarb
ja
mov
and
jnp
les
popa
sbb
pop
push
and
mov
xchg
sbb
jns
mov
out
jge
inc
loopne
cmp
lock
add
lea
lods
loope
lock
push
and
and
sti
mov
out
mov
imul
cmp
pop
inc
rcrl
xor
pop
bound
mov
mov
push
outsl
mov
jg
xor
pmaxub
dec
insl
loopne
test
aad
inc
cmp
roll
xor
aas
push
rclb
test
popf
into
mov
mov
loop
push
inc
cmpsb
ss
fdivr
jbe
mov
js
xor
enter
imul
out
push
test
lea
js
push
jns
sbb
in
pop
xchg
lret
stos
std
mov
adc
and
ret
ret
stos
sbb
sar
cltd
insl
mov
xchg
scas
mov
rol
mov
jae
cmp
insb
shr
pop
movsb
jle
ret
add
insb
jno
jmp
dec
cmp
mov
sub
dec
cld
or
or
mov
out
movsb
scas
fs
popf
sbb
or
repz
or
mov
lret
pop
jg
mov
lret
push
mov
or
lcall
and
cmpsl
cmp
push
add
ret
outsl
push
scas
movsl
setno
lods
xor
sar
iret
sahf
jle
je
jmp
mov
or
xor
push
test
imul
sbb
rorb
repz
lret
cmp
gs
and
bound
loopne
jns
xlat
aas
pop
movsb
jmp
testb
movsl
dec
sbb
jge
ljmp
mov
adc
add
xchg
cmp
xchg
bound
loope
ficomps
hlt
outsl
sbb
xor
out
gs
fidivrl
push
or
adc
aad
cmp
pop
inc
fiadds
iret
push
mov
subb
jmp
fchs
in
mov
pop
cmc
xor
mov
pop
pop
mov
or
adc
rolb
inc
sub
ror
push
xchg
pop
add
in
loop
lcall
cmpl
pushf
idivl
or
shl
mov
cltd
out
xor
and
fldenv
out
jno
pop
lret
lret
lret
mov
daa
hlt
cmpsb
mov
das
cs
sbb
mov
xor
jp
push
dec
mov
fidivl
orb
aaa
push
mov
ficompl
dec
pop
inc
inc
ljmp
xlat
ja
push
jae
out
xchg
fwait
aas
adc
pop
sbb
dec
cmpsb
cld
aam
call
jle
xchg
add
mov
jne
mov
lods
test
jns
xor
notb
dec
icebp
cld
mov
sub
cmp
jo
scas
dec
jne
fcoml
jno
lea
lahf
out
push
jae
pop
sub
inc
sub
sarb
xchg
dec
std
push
shlb
daa
fsub
or
add
adc
dec
jle
inc
mov
subl
xchg
jnp
ss
bound
inc
add
setbe
pop
or
or
test
out
sub
dec
arpl
loopne
xchg
lods
jnp
popf
and
xorl
dec
xor
lds
mulb
popa
mov
ret
lret
repnz
pop
sub
mov
fst
stos
jmp
xor
stos
in
cltd
hlt
jno
aam
dec
cmp
push
or
les
dec
or
sbb
pop
fildl
inc
aam
push
push
jecxz
enter
dec
ret
add
xchg
ror
and
jnp
and
insb
aam
add
pushf
mov
lods
add
out
xchg
push
inc
andb
xchg
inc
jecxz
in
std
or
insl
jg
int
gs
rcr
mov
add
mov
sbb
int
pop
jnp
addr16
dec
stc
icebp
sub
fdiv
lahf
and
mov
fisubrl
mov
mov
std
js
sbb
enter
xchg
aam
test
inc
mov
aad
hlt
adc
lret
testl
cld
lret
stc
mov
stc
sub
xor
loop
jbe
inc
dec
dec
and
pop
jb
or
sub
dec
lret
cmpl
lods
scas
jp,pt
lods
in
fldenv
inc
push
in
sbb
push
and
ljmp
lret
mov
push
fwait
push
jle
es
inc
sub
rcll
mov
popf
das
cli
xchg
in
xor
ja
adc
outsb
lret
cwtl
pop
popf
push
in
cmp
pop
jns
mov
mov
js
adc
xor
cltd
popf
lea
shlb
xchg
push
inc
mov
pop
cli
xor
clc
shrb
or
jbe
pop
cltd
mov
jle
out
js
int
and
xor
outsl
addr16
dec
mov
inc
add
dec
fwait
mov
int
mov
movsl
sbb
pop
jb
stc
jnp
add
mov
out
rcrb
adcl
jp
fdivl
enter
dec
lds
fcmovnbe
dec
push
aad
pop
adc
adc
cmp
cmp
mov
jl
popa
jecxz
xlat
imul
sbb
pop
jno
imull
leave
shll
mov
out
sbb
stos
mov
fucomi
cmp
fwait
ljmp
mov
inc
addr16
mov
xchg
adc
fs
sub
or
nop
xor
testl
xchg
add
cli
mov
push
jne
test
popa
adc
cmp
pop
or
inc
mov
loopne
and
xor
or
mov
mov
and
test
inc
mov
cwtl
jb
inc
sbb
or
pop
add
lock
das
and
shrl
inc
and
sbb
addr16
inc
mov
enter
mov
scas
or
sub
and
push
loope
adcb
test
lea
adc
xchg
into
push
bound
cmp
lds
mov
fstps
pop
int3
fistpll
test
xchg
cmp
or
add
jmp
adc
push
sub
cmpsb
in
iret
es
mov
sub
rcrb
and
in
and
xor
lock
push
jecxz
add
inc
divb
jle
mov
scas
stc
mov
push
add
arpl
sahf
les
jmp
xorl
mov
mov
push
iret
das
pop
clc
fstpl
cmp
push
jnp
push
push
push
movups
cmp
xor
aas
xchg
stos
fwait
sar
faddl
enter
push
jnp
mov
lds
xchg
push
lcall
mov
cmc
adc
fnstsw
mov
cwtl
cld
dec
mov
jbe
xor
sub
xchg
mov
roll
repz
repnz
mov
xor
clc
test
in
lods
das
les
ret
sbb
in
xor
cmp
jmp
repz
cli
divb
out
aam
dec
jle
leave
inc
ret
xor
jg
ror
fidivrl
pop
mov
cmpsl
pop
ljmp
cwtl
jne
mov
fidivs
ja
pop
mov
pop
push
cmp
ret
add
insl
pop
xor
mov
jnp
lcall
push
jp
sbb
pop
daa
test
scas
mov
aaa
cmpsl
stc
and
cld
mov
cmp
in
dec
mov
push
push
mov
insb
push
xchg
push
mov
add
leave
and
xlat
icebp
test
and
cmc
shl
push
inc
mov
mov
jl
mov
lods
mov
lahf
mov
clc
push
cmc
fwait
popf
pusha
in
jbe
pop
add
sbb
xchg
push
pop
aaa
dec
pop
mov
jg
push
xor
outsb
jp
adc
pop
into
xor
mov
into
mov
sub
jp
div
cli
pushf
rcrb
mov
addr16
fisttpll
out
movsl
and
mov
movsl
ds
ds
movsb
in
push
cld
dec
mov
fisttpl
mov
pop
push
std
outsb
cltd
or
sbb
addr16
imul
mov
inc
add
jmp
les
lcall
mov
cltd
lock
cltd
das
sahf
jle
cmp
push
add
das
dec
cld
and
xor
nop
scas
insb
mov
xchg
insl
pushf
sbb
insl
mov
inc
xor
ds
xchg
ret
inc
outsb
add
arpl
dec
sub
add
sbb
cmp
mov
outsl
aam
pop
orl
sub
fcoml
in
into
mov
push
popa
add
xor
or
ret
test
sahf
ss
push
inc
leave
jbe
mov
cld
jae
scas
mov
pop
sbb
mov
and
pop
outsb
fsts
xchg
pop
lahf
push
or
out
adc
scas
cld
xchg
ja
inc
out
mov
mov
daa
int3
jnp
adc
or
data16
mov
repz
fcmove
js
fists
mov
inc
fwait
mov
int3
imul
lods
pop
adc
and
pop
in
xchg
sub
jge
inc
or
dec
test
lock
xor
cli
push
sbb
insl
divl
repz
cmp
push
jle
mov
mov
adc
dec
mov
stc
aas
pop
push
add
lcall
pop
push
into
pop
inc
push
sbb
cmpl
cltd
or
and
and
xchg
adc
stos
mov
test
sub
pop
stos
xlat
hlt
pop
xchg
xchg
aad
cmp
iret
loopne
cmp
adc
dec
pusha
das
xlat
stc
add
sahf
jnp
push
shlb
and
out
mov
dec
add
nop
xor
adc
jle
lods
call
and
vmovmskps
in
xchg
out
push
mov
mov
mov
insl
push
hlt
mov
jmp
push
mov
jbe
shlb
insb
out
cmp
xlat
push
adc
in
imul
or
mov
sbb
into
cmp
outsw
cmp
adc
stos
enter
rorl
aad
outsb
xlat
sub
adc
push
cmp
pop
sahf
pop
icebp
jmp
lods
movsl
mov
mov
fwait
dec
jbe
xor
pop
aam
xchg
jb
aad
hlt
arpl
adc
xchg
ret
inc
cwtl
mov
inc
fcmovb
test
mov
mov
das
addr16
cmp
mul
dec
lods
and
add
incb
shlb
sub
daa
add
or
das
adc
ret
sbb
jmp
fisttps
jns
jl
je,pn
mov
or
dec
jl
sub
insl
inc
scas
in
rcrb
int
movsl
imul
add
xchg
cmc
push
push
push
sbbb
into
mov
xchg
imul
movsb
out
lock
dec
sti
daa
add
jl
lcall
xor
add
lds
lret
jbe
test
mov
push
mov
int3
adc
adc
lods
push
or
inc
andb
jp
inc
lods
js
addb
adc
leave
addr16
and
mov
sbb
and
mov
negl
jb
adc
cwtl
pop
push
mov
cmc
shrl
lret
lock
inc
xor
inc
pop
sbb
pusha
aas
test
mov
mov
adc
adc
sbb
jo
cmp
shrb
pop
or
out
fs
push
add
fistps
aaa
dec
push
cltd
adc
inc
jnp
in
inc
inc
aad
mov
in
shlb
jbe
mov
dec
xchg
push
dec
add
or
sbb
cmp
sub
dec
repz
xor
xlat
dec
xchg
xchg
dec
rol
lahf
movsb
repnz
and
cmp
sti
inc
inc
mov
movl
sbb
mov
fimull
ret
sub
and
pop
lds
sahf
ljmp
sbb
lods
adc
nop
ja
scas
adcl
in
lahf
mov
clc
mov
push
inc
loop
dec
les
mov
mov
push
cmp
xor
jle
and
loope
sbb
ljmp
loope
out
cmp
adc
xlat
clc
leave
jmp
int
jmp
ja
jbe
loop
rolb
push
jno
clc
lret
pop
add
mov
scas
sahf
divl
lcall
lds
lds
out
pushw
or
cs
je
pop
rcrb
in
jbe
mov
pusha
repz
ss
bound
dec
mov
pop
cmp
mulb
ljmp
lods
dec
std
cld
xchg
adc
out
adc
inc
sbb
clc
mov
adc
imul
cld
loope
xor
cmp
ss
jg
sub
imul
out
loope
mov
mov
jecxz
xor
ret
pop
call
cmp
cmpsl
pop
in
ljmp
es
dec
xlat
cmp
lahf
daa
jl
cmp
out
mov
dec
push
loop
clflush
jl
clc
mov
add
test
js
xlat
lret
jnp
repnz
jp
xor
jae
jl
insl
add
loopne
jge
jle
adc
lret
loope
in
cmp
stc
call
pop
sbb
arpl
push
jecxz
push
test
ljmp
inc
pop
add
jge
xor
mov
rcrl
icebp
mov
pop
repz
mov
shrl
rcll
dec
mov
loopne
pop
lock
mov
push
adc
and
pushf
divl
loop
jne
cmpsl
and
cmp
int3
jecxz
lds
sbb
push
testb
dec
mov
rcrb
xchg
pushf
lds
mov
inc
cld
cmp
lcall
push
in
lahf
stc
ret
leave
imul
or
out
jo
cmp
xchg
daa
dec
pushf
xor
mov
roll
dec
mov
sbbb
xchg
in
xchg
testl
pop
or
cmp
push
out
or
mov
and
ret
push
mov
mov
xor
mov
inc
jmp
leave
fsubrs
pop
sub
and
repnz
adc
add
add
jg
adc
lcall
in
mov
rorb
push
lahf
dec
adcl
out
pop
dec
sub
push
or
and
pop
data16
push
inc
sub
test
pop
fcmovu
repnz
dec
adc
or
xchg
stc
bnd
loopne
ficoml
mov
push
add
push
outsl
lods
mov
push
cmp
and
std
xor
xor
mov
jle
cmp
jle
add
push
movsb
sub
rolb
pop
ss
mov
sti
lds
lds
and
cmp
hlt
adc
cmpsb
fildll
xlat
xor
lret
sbb
push
push
mov
cli
inc
jo
and
xor
mov
add
cmpsb
ljmp
add
je
int3
pop
jle
test
cmpsl
negb
aaa
and
in
ja
dec
lret
data16
pop
pop
aad
in
je
xchg
xor
int3
jb
push
aad
jbe
dec
out
testb
jge
cmp
scas
xchg
fildll
insl
push
cmpsl
push
jnp
jge
cwtl
aam
rorb
and
mov
mov
fcomps
xor
fs
shr
in
xchg
imul
push
mov
cmpsb
inc
lcall
fsubs
popa
scas
frstor
out
insb
sub
sub
push
dec
ss
push
out
mov
shl
pop
repnz
adc
sar
jbe
imul
je
dec
cmp
idivb
fstl
neg
sub
dec
jno
decb
push
mov
mov
addr16
cmpsl
xchg
loope
mov
jo
xchg
cld
mov
add
pop
xchg
out
test
mov
insl
xchg
mov
fbstp
sahf
mov
sbb
arpl
fbstp
sbb
dec
dec
jo
dec
int
lret
push
xchg
mov
shll
insl
add
sub
aas
mov
shll
lret
jg
mov
sbb
lods
pop
or
push
pop
push
or
lcall
pop
or
pop
push
aas
sub
iret
mov
cmp
nop
adc
rorb
xchg
xor
je
movsl
fsubrl
cmpsb
std
push
idivb
test
cli
fidivl
mov
fsubrs
sbb
insl
adc
push
jle
push
or
adc
xchg
out
dec
push
movsb
mov
inc
dec
jnp
daa
cmpl
add
xchg
in
xor
arpl
pop
xchg
xor
filds
pushf
repnz
pop
add
iret
jecxz
fldl
out
jbe
xor
fdivs
pop
mov
xor
test
sbb
or
dec
inc
mov
push
pop
jns
cmovp
mov
xor
sarl
or
cmpb
out
cld
adc
in
cmc
pop
xlat
jb
or
fimull
ret
cli
bound
nop
adc
frstor
push
xchg
inc
gs
sub
adc
add
popf
adc
push
loope
lds
lret
fstpl
mov
pusha
sub
xchg
ss
nop
out
inc
fpatan
in
xchg
cwtl
outsl
dec
mov
or
pop
ret
sbb
xchg
and
jbe
pop
cld
mov
stos
adc
in
lahf
adc
push
mov
jl
lds
sub
sbb
xchg
jo
sar
jne
add
mov
xor
cmp
dec
out
imul
pushl
xchg
and
pop
or
je
enter
loop
mov
sub
aas
out
mov
inc
sbb
sbb
jle
lret
xchg
lret
mull
or
dec
dec
nop
in
xchg
aam
mov
inc
faddl
pop
mov
or
fisttpll
push
dec
inc
sbb
jo
mov
jg
ja
movsb
in
cmc
addb
push
cltd
mov
mov
xor
dec
and
mov
mov
fidivl
mov
cmc
cli
ja
add
dec
pop
or
mov
push
aam
inc
int3
jo
ret
inc
add
sbb
xor
or
enter
xchg
aam
hlt
hlt
mov
mov
mov
sbb
loope
xor
nop
cwtl
sbb
and
mov
pusha
mov
test
xchg
popf
jecxz
mov
add
push
mov
push
jl
push
pop
andl
int
sbb
sub
mulb
je
push
fnstenv
stc
jge
arpl
mov
adc
or
mov
pop
sahf
fwait
adc
in
ss
mov
jg
insb
mov
jns
popf
daa
std
push
mov
inc
rcrb
adc
fwait
popf
jb
aaa
sahf
cmpsb
jns
adc
jae
lods
push
xchg
pushf
and
aam
fs
leave
cmp
or
jnp
out
sub
lret
int3
push
push
mov
out
push
xchg
xorl
jnp
test
jns
jb
testb
cmp
ja
loop
xchg
ljmp
mov
inc
dec
out
nop
imul
fisttpl
shll
out
sbbb
or
test
sbb
push
aas
pop
shlb
daa
imul
push
mov
sub
in
jnp
jnp
sub
dec
jl
imul
pop
in
push
or
int3
out
fsub
pop
pop
insl
sub
cmpsl
pushf
or
cmp
xor
les
xchg
xor
fnsave
cli
xchg
rcrl
cmc
lahf
xor
cmp
add
scas
or
pop
adc
add
cmpsb
dec
hlt
call
adc
push
lahf
in
lret
daa
aas
ljmp
mov
fs
adc
jns
stos
imul
adc
fistl
xchg
aad
pop
add
mov
notl
lods
subl
outsb
cld
push
in
fcoms
faddl
sahf
pop
jae
jne
inc
jg
xor
fildll
push
ret
mov
ret
aad
xchg
aad
jecxz
add
adc
shr
add
test
cmp
push
push
lds
xchg
xchg
xchg
int3
add
xor
inc
cli
pop
jb
loop
push
or
leave
js
push
lcall
scas
mov
cmpsl
cmp
lock
mov
andl
add
stc
sub
push
mov
cs
dec
add
push
shrl
mov
scas
int
xor
movsl
sub
rep
cmp
xchg
push
pusha
adc
jno
pop
pop
mov
clc
push
test
and
jge
lea
test
jmp
push
cli
fiadds
or
gs
fs
sbbl
xchg
mov
sbb
in
push
mov
dec
xchg
scas
mov
push
int3
inc
scas
inc
and
sarl
jb
xchg
mov
mov
mov
inc
xor
arpl
xor
xor
out
aad
pop
jl
and
dec
xchg
pop
jp
sub
test
call
rorb
or
aas
xor
adcl
pop
cli
jmp
int
mov
imul
pop
push
or
popf
add
call
sbb
sbb
outsb
mov
jle
pop
movsb
add
cmp
adcl
mov
inc
fs
or
xor
sub
push
fbstp
or
pop
mov
cmp
loopne
loope
jmp
xlat
into
mov
inc
sbb
fadds
xorl
mov
push
negb
in
testb
sbb
and
pop
fs
xchg
orb
aad
jns
mov
cmp
mov
test
into
lret
mov
popf
cs
mov
fists
insb
sub
mov
lods
inc
cmc
xorb
outsl
or
or
sub
dec
addb
imul
jns
xor
jae
mov
test
cmc
inc
xchg
scas
call
sar
mov
mov
xor
push
cmpsb
jp
iret
mov
cltd
fcoml
test
outsb
xchg
les
je
lods
stos
mov
in
es
lret
into
and
sbb
mov
insb
push
pop
call
ret
test
dec
mov
xchg
xor
test
jg
movsb
or
sbb
xchg
push
js
adc
jmp
sbb
sub
mov
dec
sbb
lds
jl
and
xchg
cmp
out
mov
push
loope
xchg
das
addr16
or
xor
imul
sub
lds
insl
dec
aas
movsb
push
ret
inc
arpl
dec
lahf
cmp
ret
imul
arpl
jb
jbe
arpl
movsl
cmp
inc
pop
ds
jno
sbb
sub
lret
cmp
pop
mov
popf
lcall
dec
out
sbb
dec
sbb
fmulp
pop
adc
gs
xor
mov
sarb
adc
rcrb
pop
mov
or
mov
ljmp
loop
addl
mov
cltd
lcall
test
insl
fsubp
mov
shl
data16
push
inc
rcrb
adc
sub
add
xor
sbb
adc
jns
insl
push
push
fxch
or
addb
shlb
add
orb
cwtl
sarl
add
inc
repnz
and
ds
cli
jge
xor
mov
or
out
jnp
mov
push
mov
pop
cs
mov
mov
xchg
inc
push
test
and
sub
sbb
outsb
push
mov
movsb
mov
push
inc
pop
sub
xchg
pop
in
lret
fsubrs
rolb
fstp
popa
sub
fs
adcb
push
pushl
repz
fcmovb
mov
jl
mov
fdivs
sbb
inc
popf
fstpt
inc
das
je
and
cmpsb
iret
pop
jp
mov
repnz
shr
mov
ret
rorb
es
sbb
mov
mov
mov
leave
sub
lret
adc
call
in
loop
jns
sti
jbe
pop
lret
ror
jmp
insl
cmp
mov
in
mov
cmp
lds
repz
jb
mov
sub
sahf
mov
mov
imul
jle
mov
dec
jbe
mov
push
lods
insl
ficoml
mov
int3
mov
rcrb
adc
jo
std
stc
mov
add
sbbb
push
push
cmp
sub
js
shrb
andb
sub
imul
pop
xchg
pop
jb
test
cmpl
cmpb
sub
cld
scas
mov
loopne
fsubrs
mov
or
push
sbb
xor
and
dec
rcrl
aas
inc
stc
jle
push
mov
fcomp
cmp
xor
sarl
adc
cmp
or
cmp
sbb
inc
mov
test
mov
addr16
or
enter
jle
sbb
mov
sti
cltd
mov
cmp
mov
addr16
movsl
mov
jns
js
jecxz
pop
ss
outsl
out
cs
daa
cmp
stos
loope
xlat
push
pop
xchg
lahf
insl
cs
sarb
push
xor
stc
pop
aam
insl
inc
add
xchg
push
mov
test
xlat
mov
add
outsb
pop
mov
shlb
push
mov
pop
lods
gs
stc
xchg
addr16
xchg
mov
test
stos
cmpsb
addb
cli
pop
scas
cmp
xchg
inc
pop
roll
mov
out
inc
mov
push
fwait
sub
sub
xchg
insl
dec
cmpsl
outsl
mov
into
and
pop
sbb
cmpsb
je
and
jne
xor
pop
andb
scas
rcll
gs
mov
xor
jb
pop
insl
popa
jne
lds
sti
sahf
movsb
lcall
pop
and
cmp
das
cmp
clc
cmp
or
shll
pop
xor
insb
pop
cli
jb
sahf
int3
pop
icebp
sbb
cld
lea
xor
or
ja
in
mov
ret
push
pop
jb
xchg
int3
push
and
ljmp
stc
arpl
bound
cmp
nop
std
addl
pop
out
xor
push
out
fcompl
lret
and
jne
pop
into
dec
out
xor
push
cmp
mov
cwtl
popf
mov
outsl
sbb
shll
jb
int
loop
jge
daa
sub
xor
pushf
pop
inc
and
cmp
idiv
cmpsl
bound
popf
sub
sbb
fwait
pop
push
dec
out
imul
xchg
lcall
les
mov
add
sub
scas
popf
enter
mov
fstpt
mov
cli
mov
mov
xchg
pop
xor
or
cwtl
jb
push
xor
mov
stc
jp
in
push
push
movsb
sub
pop
rcll
aam
scas
cwtl
or
mov
and
cmpsb
test
jae
cmp
andb
and
mov
cli
dec
add
int3
cmp
in
rcrb
lea
insb
sub
int3
mov
out
add
push
out
and
stc
inc
mov
cmpsb
push
xchg
pop
je
mov
jno
xchg
push
add
int3
sbb
pop
lea
or
inc
inc
sbb
cmp
mov
xchg
and
push
stos
mov
xchg
clc
pop
cmpsb
push
mov
cmp
icebp
sub
mov
mov
inc
mov
jecxz
cld
xchg
lea
loopne
out
push
pop
lock
ds
daa
and
mov
cld
push
or
push
sbb
jno
and
add
dec
mov
stos
aaa
fs
mov
gs
les
push
loope
shrl
mov
push
pop
jbe
inc
aas
jecxz
out
push
add
paddsw
mov
insb
test
out
xchg
cmpsb
cmpb
inc
jge
xlat
outsb
sarl
out
jbe
or
push
jno
xor
mov
mov
jne
mov
cltd
mov
and
sbb
stos
jle
test
leave
cwtl
rcrb
cld
popf
iret
and
arpl
loope
inc
loopne
notb
and
push
pusha
aas
ja
adc
out
pusha
sbb
pop
and
jns
sti
sub
jo
inc
and
sbb
ficompl
lret
add
adc
push
jbe
in
test
push
push
jns
adc
loopne
inc
decb
dec
fmulp
ljmp
push
jno
xlat
pop
jb
cltd
xchg
mov
setnp
outsl
jp
jg
inc
imul
lock
lods
inc
push
mov
xor
mov
outsb
mov
ss
imul
pop
inc
aaa
arpl
movsb
loop
lock
repnz
addr16
rol
xor
mov
push
int3
xor
ss
insb
les
pop
mov
test
testb
aam
lret
push
mov
jne
add
adc
daa
lds
jle
lcall
in
lds
mov
sbbl
lcall
xor
mov
bound
mov
sub
je
cwtl
jmp
shl
mov
pop
out
cltd
ret
lea
enter
inc
fsubrs
pop
inc
bound
push
cmpsb
push
int3
cltd
jg
sub
cld
dec
inc
push
sbb
out
xor
imul
mov
sbb
mov
sbb
sbb
sti
pop
push
shrb
or
adc
sub
mov
mov
sbb
jae
xchg
push
or
shlb
std
cmpsb
or
popa
loope
push
cmp
jae
cmp
or
fwait
popa
push
rcrl
mov
scas
push
stos
adc
rcl
cltd
cmpsb
push
test
xchg
mov
xchg
data16
arpl
pop
pop
xor
ljmp
mov
ja
pusha
scas
cmc
and
out
xor
mov
pop
xorl
ret
adc
les
int3
xor
inc
jle
test
jnp
mov
mov
leave
fdivrs
daa
ja
movsb
push
mov
jmp
push
or
push
push
iret
cmp
sbb
ret
incb
xchg
sub
or
mov
mov
mov
popa
rcll
rolb
loop
jl
test
jns
jnp
faddl
mov
fnsave
lcall
inc
sti
jmp
xchg
mov
mov
jmp
pop
or
mov
test
cmp
xlat
ja
mov
stos
cmp
add
clc
pushf
orb
pop
cmp
ss
cld
jmp
clc
fs
add
js
ret
ja
arpl
mov
push
mov
mov
mov
push
mov
cmpsl
adc
xchg
insl
mov
inc
inc
dec
imul
add
out
xor
pop
xorb
mov
jne
cli
fwait
sbb
dec
js
pop
pop
bound
movsl
sbb
mov
xchg
sbb
iret
cld
loope
lahf
loope
xlat
pop
xchg
out
bsf
hlt
std
test
push
in
jae
mov
xlat
mov
test
mov
mov
pop
and
jmp
jne
inc
cli
add
mov
hlt
mov
xorb
xchg
filds
pop
pop
iret
scas
dec
mov
leave
pop
cwtl
popfw
icebp
jae
cmp
and
jns
sbb
sbb
faddl
fwait
jnp
mov
aam
pop
fcos
ss
mov
inc
mov
mov
stos
sub
lret
fists
loopne
and
mov
shrb
sub
sarb
push
sbb
cmp
shlb
sti
mov
jnp
jnp
dec
pusha
sub
imul
mov
xor
fisttpl
add
stc
jo
and
outsb
adc
scas
push
adc
repnz
fstpl
iret
or
adc
nop
aas
int
dec
mov
popf
imul
inc
movsb
addr16
lret
sahf
sbb
dec
mov
ret
sub
cmp
and
and
out
jno
mov
pop
add
cmp
dec
sub
lods
sbb
cmp
loop
push
sti
outsl
mov
js
jb
std
test
call
mov
pop
dec
mov
adc
push
test
loope
sti
pop
add
scas
cmp
or
xor
stos
mov
xchg
mov
sbb
dec
dec
sbb
push
or
out
lahf
lods
and
and
cld
test
jb
mov
xor
arpl
cmp
add
leave
pop
jae
lahf
lea
sbb
lock
movsb
sub
xchg
pusha
out
movsl
into
divps
test
gs
add
in
pop
idivl
lret
cmp
ret
mov
test
shlb
cmp
xchg
fiadds
lods
or
popa
out
ljmp
imul
and
or
sub
fstl
mov
sbb
icebp
jmp
ds
sahf
ror
sbb
xor
popf
add
daa
dec
inc
in
outsb
fwait
mov
sbb
cld
test
cs
dec
clc
mov
jl
mov
ret
inc
mov
mul
or
cmc
lret
lret
call
loope
movsb
pop
loope
add
dec
js
ss
cltd
test
jbe
xchg
lea
bound
mov
add
das
push
rcrl
andl
jns
mov
mov
jle
jae
cmc
cmp
test
dec
cmp
push
and
in
mov
clc
movsl
jl
iret
xchg
add
adcl
mov
shlb
cmp
and
dec
enter
inc
push
inc
pop
mov
std
jne
dec
adc
pop
sbb
xchg
pusha
inc
mov
sub
into
repnz
daa
adc
jecxz
xor
adc
push
mov
mov
adc
mov
insl
gs
aas
enter
pop
xor
mov
mov
rcrb
fsubrl
subb
pop
cmp
push
arpl
jo
cwtl
enter
sbb
xor
cmp
mov
and
jmp
ret
sub
dec
jl
test
mov
and
test
mov
cld
xlat
dec
inc
pop
dec
subb
mov
xlat
or
mov
adc
sub
testl
mov
sbbl
outsb
adc
mov
scas
push
dec
orb
and
lret
dec
cmp
dec
fs
xor
loop
push
enter
cld
test
cld
bound
in
push
lahf
pop
fildll
cmp
mov
rcr
pop
loope
cmpl
loop
out
shll
cwtl
frndint
or
lret
aaa
jp
test
idivl
jmp
inc
stos
dec
jne
mov
cmpsb
mov
clc
pop
jne
mov
fcmovb
rorb
jmp
out
jne
std
lahf
mov
test
sti
bound
jo
pop
or
jne
loop
add
aaa
dec
pop
dec
adc
or
xchg
ljmp
insl
xlat
inc
add
push
stos
addb
scas
xor
dec
dec
enter
cld
push
fisttpll
roll
push
int
xor
inc
je
sub
movsb
test
dec
pushf
jecxz
xor
sub
jmp
inc
sbb
cmp
jb
push
mov
cld
dec
aas
mov
loope
jne
pushf
loop
jnp
das
cmp
mov
insl
dec
test
push
xchg
subl
andb
rcll
and
or
rorl
push
cli
cmc
outsl
pusha
lret
fwait
and
fldcw
mov
aam
repz
push
pusha
sub
data16
scas
test
mov
lahf
dec
push
adc
int3
add
xchg
cmp
mov
jbe
mov
cld
lea
xchg
xor
outsb
cmp
inc
pop
popa
pop
inc
adc
pop
roll
mov
les
xchg
push
xchg
sub
mov
cmc
sbb
movsl
movb
xchg
in
in
fwait
testl
test
sarb
dec
test
cmp
fmul
imul
mov
mov
out
insl
and
and
js
repz
lahf
adc
hlt
mov
or
fwait
sub
fwait
popf
sbbb
cld
mov
std
dec
or
xor
mov
mov
mov
cld
cmpsl
jge
ss
fnstsw
lods
data16
mov
add
aad
or
add
push
lods
sti
pop
adc
xor
ret
mov
adc
pop
iret
out
into
adc
push
mov
and
jl
repz
mov
pop
sbb
inc
xchg
dec
out
xchg
stos
roll
aaa
or
leave
cld
mov
pop
insb
or
cmp
dec
cs
sbb
into
aaa
rorb
push
sub
test
nop
mov
mov
push
loop
testb
mov
mov
fdivrl
pop
jbe
mov
cmc
repz
imul
int3
mov
mov
les
push
lds
dec
inc
adc
mov
mov
pop
jmp
inc
arpl
fcmovnb
pop
cltd
cmc
sete
xor
iret
imul
mov
mov
and
or
les
mov
add
xor
adc
cmpsl
mov
push
pop
and
mov
cmp
mov
add
xor
pop
jbe
pop
dec
push
lahf
mov
or
icebp
adc
fwait
pop
loope,pn
in
ficoms
outsl
push
jno
pushf
mov
repz
stc
cmp
fcompl
mov
test
inc
gs
sbb
cmc
dec
fisttpll
push
outsb
mov
push
mov
xchg
cwtl
movsb
and
sbb
push
xor
add
dec
fmulp
ficoml
call
das
lods
xor
fistps
inc
inc
inc
jnp
and
out
cmpsb
push
sahf
out
or
imul
je
push
outsb
clc
xor
push
add
ljmp
adc
fisubrl
xchg
fdivrl
fcmovnbe
ret
bound
push
sub
add
rcrl
mov
out
test
dec
sub
cltd
test
sub
loopne
gs
sahf
out
jp
cwtl
and
or
xor
mov
and
test
pushw
fcomps
xchg
iret
out
cld
cmp
jae
inc
aad
inc
insl
out
lea
and
in
addb
xlat
mov
inc
xchg
xchg
and
cmp
and
shll
lock
pop
sarb
jmp
in
enter
sbb
mov
in
in
inc
enter
stos
cld
mov
sub
aam
imul
in
notb
xchg
dec
jo
jp
inc
mov
adc
out
scas
jl
inc
ret
shlb
mov
pushl
pop
xlat
mov
jns
or
mov
cmpsb
std
fcoml
movsb
inc
mov
jnp
sbb
loope
stc
mov
ficoms
xor
mov
mov
aad
sub
add
inc
sub
std
pop
ljmp
stc
mov
cmp
into
jae
fnsave
or
dec
lea
test
add
mov
sbb
add
jecxz
mov
mov
cli
imul
jle
xchg
mov
jb
xchg
or
jns
repnz
shll
mov
jecxz
clc
cmp
inc
jge
js
lea
inc
sbb
dec
or
and
cli
mov
lcall
jno
stos
sahf
xor
mov
add
jmp
lret
xchg
ds
and
in
daa
mov
xchg
xorb
imul
clc
dec
pop
jo
popf
mov
and
push
xchg
jmp
out
sbb
adc
and
xchg
aad
xchg
in
push
or
mov
cmpsb
mov
aad
loop
dec
fstpl
and
enter
test
xchg
mov
xchg
inc
mov
imulb
bound
iret
add
dec
dec
clc
or
lahf
cmp
jne
pushf
xor
fildll
push
rolb
pop
or
mov
mov
cmpb
in
push
jge
cmc
in
push
xor
cs
clc
dec
loopne
dec
outsb
mov
mov
out
xchg
push
mov
addb
fildll
cltd
add
push
adc
jae
jl
incl
push
push
pop
inc
and
mul
pop
imul
andps
jge
push
mov
jbe
xor
adc
cmc
mov
fldl
fwait
sbb
les
inc
jmp
fidivs
dec
sbb
pop
adc
pop
aam
sbb
pusha
nop
add
jnp
jmp
jo
fidivrs
pop
mov
incl
mov
pop
lods
jl
push
mov
loopne
xlat
push
pop
jb
inc
adc
add
cmp
pop
jo
in
sarb
xchg
jl
jae
cmp
out
jns
pop
and
ror
fcom
int
ljmp
or
pop
dec
jge
pop
ds
ficompl
mov
ret
cltd
or
add
pop
inc
sahf
adc
inc
out
inc
sahf
xchg
int3
and
js
mov
xchg
xchg
jge
xchg
hlt
cmp
mov
insl
sbb
insb
outsl
notb
dec
in
cmp
push
jle
js
roll
xchg
push
inc
test
filds
dec
mov
cmp
ret
and
lods
fisubrs
fstpt
jnp
ficomps
sahf
daa
mov
mov
mov
and
mov
jns
call
test
sbb
mov
popa
pop
idivl
cmp
imul
ret
outsl
adc
call
mov
xor
jge
inc
addl
xchg
out
mov
pop
je
bound
mov
xchg
xor
call
icebp
out
mov
clc
mov
andl
ficoms
loop
xor
dec
mov
btrl
cmp
adc
pop
mov
xchg
mov
enter
jb
sub
mov
xchg
adc
xor
adc
xchg
cltd
sub
imul
push
ss
mov
shlb
hlt
mov
mov
pop
ljmp
inc
sub
into
push
cmpsl
addr16
lret
pop
or
movsb
inc
sbb
clc
mov
push
mov
xchg
push
mov
movsb
push
mov
fdivrp
arpl
mov
and
and
xchg
bound
push
or
mov
dec
sti
push
lods
scas
mov
loop
dec
clc
jb
stos
out
fistps
pop
aad
push
cmc
jl
dec
cli
push
repnz
mov
insb
fisttps
sti
repz
lret
xor
mov
inc
aaa
or
stc
sbb
add
adc
aam
fildl
pop
test
cmp
jb
fldenv
lret
jbe
es
mov
int3
sbb
lret
aas
cmp
mov
fsubrl
icebp
sbb
or
cmc
xor
sti
jbe
cltd
filds
ret
cli
mov
lods
out
fimuls
dec
insb
fcmovb
sbb
push
adc
lods
in
dec
testb
leave
repz
xchg
ret
mov
push
fcoml
cmc
js
inc
cs
pop
stos
aam
sbb
add
rolb
insl
mov
adc
push
ljmp
rcrl
mov
and
mov
sub
arpl
les
test
jl
sub
push
and
insl
scas
popf
inc
dec
dec
pop
leave
mov
inc
push
add
mov
fldl
pop
dec
cmpxchg
repz
jne
pop
xchg
xor
roll
loopne
or
stc
lret
pop
or
cmp
daa
movsb
gs
cld
xchg
jnp
xlat
xlat
add
cwtl
test
daa
xor
jnp
iret
ret
or
cmp
inc
je
out
rcr
pusha
in
les
push
add
arpl
inc
daa
dec
iret
in
cld
xchg
flds
mov
outsb
imul
mov
mov
sbb
and
xor
shll
lret
roll
repz
or
lret
or
loop
das
lods
mov
popf
insl
push
cltd
xor
orl
int3
sti
mov
scas
mov
mov
pop
ds
push
inc
xor
push
sub
lods
or
inc
cmc
sarb
js
loop
pop
dec
call
xchg
mov
add
rorb
xchg
xchg
add
test
xchg
out
push
dec
sub
dec
incb
xchg
hlt
inc
insb
outsl
pop
mov
mov
push
push
jno
push
movsb
add
hlt
or
cli
push
das
lock
jg
push
rcl
mov
and
icebp
imul
mov
jne
fs
xchg
cmp
add
aad
loopne
ret
mov
adc
mov
stos
test
cmp
stos
idivb
sarb
inc
in
push
or
mov
jmp
push
das
mov
sbb
aad
lds
jb
mov
push
lea
jo
fxch
or
cltd
aam
out
jnp
mov
jb
dec
add
movsl
mov
and
lret
aas
lds
xchg
push
les
idiv
mov
cmpsl
sahf
sahf
add
add
fwait
push
sbb
push
or
test
push
pop
mov
fiadds
fcomps
loope
xor
dec
mov
sbb
mov
iret
into
cmp
mov
in
rcr
test
fistpll
adc
cmp
test
stc
add
dec
loopne
shl
xchg
mov
add
sbb
les
int
lods
jae
fcmove
add
icebp
mov
sbb
inc
jle
xchg
fnstsw
out
aaa
js
push
dec
fsts
xor
scas
mov
pop
dec
xor
shlb
sarl
or
mov
mov
ss
jnp
enter
pop
xor
xor
xchg
add
ret
pop
repz
out
jns
mov
sbb
dec
je
pop
mov
das
push
aam
fucomi
inc
jecxz
mov
fistps
loopne
mov
dec
imul
pop
xor
dec
jae
dec
loope
pop
mov
mov
fldt
adc
add
mov
mov
push
mov
mov
mov
insb
std
popa
in
inc
cld
sub
hlt
lret
aam
out
sarb
sbb
xlat
ret
sub
mov
add
push
mov
aam
adc
andl
adc
lods
mov
lret
loope
sub
cmpsb
jmp
push
out
stc
push
mov
sbb
push
orb
cmp
fsubr
or
dec
cld
fs
into
dec
cmpsb
dec
mov
xor
xor
pop
out
mov
aam
dec
out
out
testl
js
cmp
enter
out
rcrl
daa
xchg
xchg
movsl
out
hlt
pop
inc
subb
xor
outsb
lods
mov
mov
stos
int
clc
fistpll
jo
sub
jbe
xlat
cmp
push
jno
in
mov
sbb
jns
xor
js
push
fsts
ja
add
sbb
adc
mov
int3
jae
add
pop
popa
stos
sti
jnp
mov
ljmp
xor
mov
xor
call
mov
inc
aas
push
bound
xor
jle
mov
pop
xor
jge
lods
push
popf
dec
jge
fbstp
neg
shlb
stos
add
mov
loopne
adc
cwtl
jno
jno
mov
outsb
inc
out
cmp
xchg
in
adc
add
mov
cmpsb
enter
mov
shll
jmp
aam
sbb
loope
fyl2x
jns
and
fidivs
add
pop
xor
push
in
out
push
lods
stos
enter
mov
lods
cmp
scas
mov
jbe
xor
fsubs
arpl
mov
ffreep
jne
or
test
data16
loopne
push
jbe
add
and
lods
add
das
jnp
out
push
outsb
sub
movsb
mov
mov
push
cltd
jb
or
push
sahf
or
les
xchg
pop
jecxz
xchg
dec
subb
xchg
fstl
sbb
xchg
fwait
shlb
fdecstp
and
pop
pop
lahf
fiaddl
dec
push
lods
aad
movsl
dec
mov
mov
fdivl
repnz
dec
xor
and
daa
push
shlb
or
sub
xchg
dec
mov
mov
adc
adc
movsl
je
add
xchg
test
mov
jmp
adc
addr16
popf
mov
sub
and
aad
add
mov
mov
sbb
test
imul
sub
xor
jecxz
rorb
push
lods
add
inc
xchg
nop
gs
lcall
js
or
xlat
jge
aad
repnz
cli
sbb
jne
aaa
xchg
fwait
int
jae
xchg
inc
mov
cmp
outsl
insl
mov
xchg
jmp
pop
push
or
mov
lcall
shrb
lods
rclb
gs
popf
pushf
mov
fcomps
dec
in
gs
or
shll
push
imull
xchg
push
inc
add
sub
xor
jecxz
sbb
lods
fldt
jge
fbld
imul
test
enter
js
aaa
push
aaa
cmp
lcall
jae
xchg
jg
dec
aaa
iret
ja
adc
mov
push
mov
movsb
icebp
sbb
lods
fisttpl
scas
pop
xor
mov
dec
cld
lods
xchg
and
sbb
fidivrs
mov
int
xchg
dec
adc
pop
leave
adcl
in
dec
sub
mov
dec
lret
push
push
push
sti
out
jge
push
fwait
shll
cmp
inc
adc
pop
mov
shrb
imul
jle
popf
or
mov
xchg
ficomps
cmpsl
shl
mov
hlt
or
jp
inc
and
xchg
push
idivl
xorl
adc
stos
xor
ja
lret
dec
mov
lret
xchg
aam
jl
push
pop
xchg
push
inc
into
jns
fwait
popf
es
imul
cmp
mov
sbb
jbe
std
and
lods
int
dec
sti
test
sub
cmpsb
jmp
sbb
mov
adc
or
clc
fs
jno
dec
shlb
leave
mov
push
pop
mov
sub
out
in
inc
arpl
mov
pop
inc
inc
mov
sbb
imul
out
jge
jge
scas
mov
xor
xchg
mov
int
jne
iret
cmpsl
arpl
mov
test
fsubr
mov
cmc
or
stc
lds
cld
and
and
mov
aas
nop
add
xchg
pop
adc
lock
dec
hlt
das
sbbl
js
add
test
mov
xor
push
arpl
sub
push
mov
lds
mov
push
movl
cmpl
into
hlt
cmp
cmpsl
pop
inc
or
roll
xchg
jbe
add
lods
outsl
xor
ret
jl
mov
xor
in
mov
mov
jne
test
sbb
sub
ret
cmpsl
inc
dec
adc
pop
scas
pop
mov
and
ret
sahf
insl
adc
inc
sub
adcb
test
orb
push
push
and
jbe
insl
std
test
cwtl
and
lods
popa
add
sub
fs
jno
inc
mov
cli
int3
mov
cmp
enter
jb
push
sub
add
dec
insw
test
inc
popa
push
xor
test
in
daa
js
sbb
sbb
jg
add
scas
fwait
dec
popf
rcll
sub
push
int3
pop
push
push
mov
daa
cmp
sti
jno
push
lret
and
ljmp
adc
mov
xor
mov
cmpl
std
in
or
imul
test
imul
push
sbb
fs
jo
das
repnz
jl
mov
ljmp
sbb
sti
hlt
sbb
push
xor
mov
xor
leave
es
dec
push
jg
pop
jne
jb
out
into
bound
rorl
imul
aaa
addr16
lock
cmp
fistps
push
fistps
gs
dec
xchg
in
pop
test
andb
aas
test
jne
xor
xlat
mov
adc
jb,pt
lcall
push
cmpsb
pop
mov
mov
sti
addr16
jge
inc
leave
jle
push
push
mov
pop
xor
call
xlat
push
push
cli
push
mov
test
roll
fbld
pushl
and
sub
mov
mov
in
sbb
insl
into
jns
sbb
mov
sub
jl
out
push
pop
push
mov
jne
insl
lods
dec
cmp
and
push
insl
pop
and
adc
add
in
lret
negb
adcb
jbe
mov
sarl
lods
mov
jg
and
enter
push
in
testb
cmp
sti
cmp
jno
dec
nop
mov
out
incl
inc
add
lea
fcomps
clc
insb
sysexit
cmp
push
sbb
sbb
push
xor
dec
ss
daa
pop
in
scas
pop
fldl
pop
es
or
pop
scas
xchg
dec
pop
dec
xchg
arpl
fnstcw
xor
ficoms
fs
test
inc
sbb
cmp
cmpsb
jns
inc
andb
or
mov
mov
ret
lcall
mov
addb
je
add
test
xchg
mov
push
dec
mov
in
push
cmp
or
ljmp
inc
popa
arpl
dec
icebp
in
fnsave
cmp
mov
fnstsw
pop
ret
rcrl
mov
dec
roll
push
sub
in
fisttpl
jge
dec
ror
je
test
movsl
mov
icebp
fidivl
mov
cmp
movb
dec
pusha
sub
in
js
and
mov
and
cwtl
cmp
int
je
ficompl
cmpsb
lea
pop
out
push
imul
jns
lret
jecxz,pn
jge
rcrl
mov
out
xlat
out
fmull
xchg
jnp
sbbb
aad
fcomip
and
mov
lock
xchg
scas
xor
xor
dec
rclb
cmpsl
push
cmpsl
into
popa
mov
sbb
dec
or
out
aad
jno
pusha
sub
xchg
lods
push
jae
insl
mov
aam
sub
addr16
dec
shlb
ja
mov
push
pop
rolb
ljmp
and
mov
mov
mov
arpl
loope
lods
outsl
adc
js
movl
mov
rol
push
or
enter
add
test
test
push
mov
pop
push
gs
hlt
xor
adc
pop
das
mov
fiadds
leave
pop
andb
call
and
lret
pusha
jnp
rcrb
std
das
inc
int3
sbb
mov
leave
mov
sbb
rclb
jo
jl
pop
mov
ja
pop
pop
lret
fs
gs
xor
dec
fcmovb
cmp
lods
sbb
cli
mov
repnz
xor
xchg
jns
shll
stos
mov
pop
cmp
jg
jp
inc
movsb
sub
repz
cmc
mov
lods
dec
mov
dec
adcb
mov
push
xor
pop
xorl
push
dec
mov
lret
adc
test
shlb
les
test
mov
xlat
push
mov
scas
mov
jge
test
adc
push
jecxz
pop
inc
aas
bnd
lods
sub
sub
loopne
sahf
je
dec
push
push
sbb
les
imul
adc
sbb
mov
outsl
cmp
sahf
xor
std
aaa
add
mov
outsb
jle
xor
adc
jbe
pop
or
lods
testb
daa
dec
lds
pop
add
jbe
sbb
mov
enter
or
add
jle
fcmove
leave
sub
daa
dec
repnz
xlat
mov
mov
sbb
push
xchg
and
or
jb
jmp
push
jmp
sbb
fdivrs
cmc
xor
cmp
andb
adc
and
mov
jg
or
sub
stos
lret
outsb
jne
cmc
mov
lods
adc
adc
xchg
dec
outsl
cwtl
sti
adcl
pop
cmp
into
adc
mov
xlat
gs
dec
or
ret
xchg
pop
push
jno
inc
test
xor
cmp
inc
and
insl
icebp
setns
push
or
imulb
xchg
enter
das
mov
orb
xchg
mov
ljmp
je
pop
enter
sub
lds
xchg
loopne
push
shll
mov
fidivrs
mov
icebp
inc
fincstp
xchg
pushf
loop
jecxz
sbb
jo
dec
aaa
or
sbb
ret
rcrb
shrb
jne
cmpsl
push
cli
xchg
and
jo
or
sub
testl
mov
mov
xchg
jg
xorb
xchg
mov
aad
sti
adc
movsl
push
inc
rol
jnp
setno
inc
jno
stos
pop
mov
jbe
jne
dec
subb
aad
jecxz
fcmove
fcoms
dec
jmp
ljmp
lcall
xchg
cmp
test
pop
sbb
cs
sbb
mov
and
or
shr
and
in
jb
cmp
lea
pop
and
scas
out
movsl
push
mov
ds
xchg
mov
push
addr16
int3
cmp
push
nop
sub
mov
mov
add
pop
inc
push
cwtl
mov
lods
int3
mov
das
and
pop
adc
xor
sub
in
xchg
push
popa
les
fbld
hlt
mov
jmp
imul
xchg
ficompl
inc
sbb
out
pop
orl
in
inc
ret
stos
je
jo
lahf
push
std
loop
hlt
loop
negb
das
fsubr
mov
pop
out
pop
inc
xchg
dec
mov
in
mov
mov
or
ss
fidivs
or
xor
fst
lods
stc
pop
sar
cmc
adc
aaa
andl
es
cwtl
add
or
out
adc
cmpl
movsb
or
cmp
leave
add
pushf
loopne
les
xorb
push
stc
cmp
xchg
sbb
icebp
mov
repz
sub
xor
ret
leave
jb
add
push
add
jmp
jl
pop
add
stos
and
dec
movsl
pop
pop
mov
xchg
and
mov
mov
push
dec
push
scas
subb
stc
shr
aas
in
cmp
scas
xor
push
sti
cmpsb
mov
mov
ljmp
xor
jbe
or
cmp
int3
push
jo
test
test
xchg
pop
dec
enter
imul
das
lock
scas
sbbb
mov
push
push
insb
movsl
fcmovnb
repz
lods
aas
dec
stos
ja
movsl
in
xchg
call
scas
ss
adc
sub
inc
getsec
inc
lock
push
lock
dec
int
clc
cld
jg
pop
je
xor
xchg
push
mov
pop
jbe
test
jbe
or
mov
out
aam
pop
xchg
cli
shl
cmp
xchg
mov
insb
outsl
aad
push
mov
or
adc
aas
add
jge
aas
or
rcl
or
ja
jbe
insl
jl
mov
into
inc
ss
inc
push
movl
out
mov
xchg
cltd
jl
pop
aaa
inc
xchg
nop
dec
mov
jae
fimuls
test
pop
or
push
xor
aam
mov
pinsrw
push
cmp
xchg
roll
lods
xor
add
push
mov
jo
test
icebp
sbb
aad
orb
and
daa
mov
fidivrl
pusha
popa
xchg
xchg
outsb
pop
sar
pop
movsb
mov
and
mov
sub
mov
aaa
and
sub
mov
movsl
xchg
pop
nop
fidivl
push
xchg
pop
push
or
pop
inc
mov
pop
or
xchg
cmp
xchg
je
push
xchg
xor
in
pop
popa
push
cmp
sbb
sbbb
dec
sbb
xchg
inc
bound
sub
push
jle
lock
jbe
in
mov
adc
jg
pop
adc
std
cld
add
lret
imul
push
dec
loop
fistps
pop
imul
repz
cmp
jbe
sbb
sbb
std
xchg
push
jns
and
jl
xor
es
ljmp
lcall
daa
int
jecxz
sbb
fxch
or
xor
repnz
out
pop
inc
jmp
repnz
fwait
xor
das
stos
mov
dec
outsb
ljmp
mov
sar
cmpsb
fisubrl
add
sub
lea
sbb
aas
movsb
pop
cmp
ret
pop
pop
sub
pop
in
or
jmp
out
sti
dec
lret
lods
or
jo
xchg
test
and
loop
cmp
int3
bound
lahf
stos
mov
xor
popa
lcall
dec
nop
test
clc
push
pop
dec
fildll
mov
sbb
sub
mov
daa
bound
lret
movsb
mov
pop
cmp
dec
enter
jecxz
add
sti
mov
xchg
lret
jge
sub
cld
push
xor
xor
aad
scas
les
and
adc
jne
mov
stos
jg
adc
inc
jno
push
xchg
push
jbe
cli
cmp
jp
sbb
test
cltd
int3
iret
inc
in
and
shl
imul
in
arpl
in
test
insl
rorl
das
sub
jl
stc
stos
rclb
adc
cltd
xor
push
dec
lods
in
addr16
stos
addl
jl
out
sbb
inc
cwtl
das
cli
sub
cmpsb
xchg
adc
cmpb
dec
mov
inc
flds
popa
inc
scas
cltd
stos
cs
mov
cmpsl
call
xchg
or
jl
mov
shll
iret
mov
mov
dec
push
push
ds
cmp
movsl
xor
cmpsb
mov
xor
cmp
ds
and
mov
test
fcomi
or
sub
dec
fnstcw
imull
rcl
or
subb
loop
hlt
pop
aad
ljmp
xchg
arpl
mov
or
or
popf
xor
cmp
xor
cmpsb
int
pop
xor
imul
xor
push
outsl
jb
icebp
lahf
inc
sbb
movsb
push
add
outsl
shl
lret
xchg
jmp
mov
arpl
ja
jl
arpl
sub
inc
sub
inc
sahf
adc
cmp
int
adc
leave
jno
sarl
std
inc
push
mov
mov
sub
pop
ficoms
jns
fdivrl
mov
jg
mov
push
mov
mov
ljmp
xchg
popf
sbb
ljmp
add
nop
xchg
xor
add
push
fiaddl
movsl
xor
or
and
loope
ret
fcompl
aam
test
scas
xchg
xchg
xchg
loopne
dec
inc
mov
or
inc
stc
rorb
sub
sub
int
icebp
sbb
scas
xchg
lock
adc
imul
xchg
push
jbe
xor
fcmovnbe
push
lcall
cmp
mov
adcb
movsb
cmp
jmp
sub
cmp
or
adc
jae
incl
xor
imul
mov
int3
cli
dec
mov
pop
jb
adc
fsubrl
cmp
icebp
dec
insl
cld
cmp
movsl
mov
negb
jbe
insl
pslld
xchg
mov
add
mov
iret
int3
out
shrl
sbb
and
stos
je
data16
push
out
dec
adc
imul
test
mov
mov
push
lods
jb
jge
mov
push
jmp
lea
fsubl
aas
inc
dec
lret
or
in
xchg
adc
scas
sub
xor
fnstenv
int
or
adc
lret
sahf
xor
dec
push
pop
mov
pop
cmpsl
icebp
sub
aad
inc
scas
mov
test
xchg
or
sarb
in
push
stos
es
sarl
pushf
fwait
jnp
lods
inc
setns
adc
dec
adc
jecxz
test
loopne
cmp
sub
inc
push
cmp
dec
imul
out
inc
or
xchg
pop
push
mov
sarl
adc
add
shrl
jns
shr
jmp
mov
cmp
and
std
jge
add
enter
pushf
call
jge
mov
sub
shrb
dec
mov
sub
cmc
add
adc
imul
andb
dec
or
notb
inc
insb
dec
pop
lahf
or
mov
mov
lret
mov
daa
ljmp
cli
in
mov
lcall
dec
aam
loopne
shrl
xchg
push
add
cmp
out
dec
push
dec
push
xor
in
xchg
jbe
lret
test
icebp
insb
xor
mov
push
scas
inc
mov
sbb
mov
adc
and
push
or
outsb
adc
dec
popa
cld
mov
sahf
test
mov
push
or
out
incl
sbb
cld
in
sub
add
loopne
cmp
cmpsb
lret
add
mov
cmp
add
push
jb
jnp
push
jbe
mov
popf
mov
inc
iret
inc
fstpt
push
mov
loope
pop
fwait
out
addl
je
adc
pusha
loopne
ss
lret
jp
out
jae
sbb
mov
and
rclb
jl
in
leave
mov
fnstsw
test
sbb
pop
test
jnp
stos
mov
movsl
or
sti
inc
add
aam
loope
lret
ljmpw
loopne
inc
push
ljmp
lea
nop
out
movsb
mov
inc
out
cwtl
pop
inc
aam
cmpsl
out
mull
jge
pop
pusha
inc
pushf
rcl
popa
sub
gs
popa
adc
movsb
or
insb
add
sub
mov
dec
sub
xor
sub
and
inc
push
cmp
sti
ja
mov
sbb
jnp
pop
test
out
lret
pop
rcrl
sahf
cmp
or
xor
mov
jg
and
push
xchg
outsl
loope
iret
cli
sbb
cmpsl
and
loope
out
in
pop
scas
aaa
mov
aad
push
push
inc
andb
lds
insl
scas
pop
shrl
mov
sar
insb
xchg
xchg
cld
sub
outsb
mov
sti
fdivl
jmp
stos
test
push
sub
add
push
xchg
out
xlat
dec
push
fstpl
ljmp
pop
aas
int3
pop
pusha
xor
dec
mov
cmp
dec
cmpsl
xchg
jg
ds
xor
stos
xchg
and
xor
xlat
or
adc
outsl
daa
mov
jp
iret
faddl
pop
aas
mov
mov
xchg
addr16
stc
push
dec
and
pop
or
aad
hlt
pop
test
pop
add
mov
mov
movl
mov
xchg
subl
imul
call
leave
ljmp
cmp
rorb
inc
mov
xor
leave
or
fiaddl
sub
daa
mov
inc
lods
rolb
cli
pusha
jecxz
add
fistps
push
bound
test
or
gs
mov
jne
mov
mov
add
scas
ss
xor
add
xor
pop
mov
sub
pop
add
cli
fisubs
jle
clc
outsl
dec
xchg
add
sbb
in
rclb
mov
es
sub
das
inc
popa
loop
or
test
cmp
test
jae
popa
int3
cld
nop
cmp
or
mov
adc
mov
sub
pusha
jmp
mov
lcall
and
call
std
mov
addr16
pop
aas
insb
enter
pop
mov
jb
mull
pop
inc
jne
mov
ss
imul
bound
mov
shrl
idivb
or
mov
and
ret
pop
int
daa
mov
int3
mov
pop
out
dec
push
int
jo
mov
inc
cld
and
mov
xor
insb
sbb
mov
cltd
push
fcmovnbe
pop
mov
movsb
push
xchg
push
xchg
xor
pop
insl
sub
rcrb
fs
xchg
mov
aam
xchg
push
adcl
aaa
add
inc
pop
or
mov
pusha
jl
dec
cmc
movsb
testl
adcb
ja
in
pop
mov
mov
mov
test
mov
push
outsl
mov
mov
xor
and
push
cs
loope
push
adc
jl
xchg
ss
loope
adc
jno
adc
adc
ret
and
hlt
xchg
push
adc
pop
out
sarb
xor
sub
in
shrb
xor
push
lock
sub
push
movsl
jmp
lcall
xorl
cs
mov
push
xor
push
subl
fiaddl
cwtl
or
mov
aad
xor
stos
xchg
loopne
subb
divb
xchg
paddsw
clc
push
and
push
mov
mov
inc
shl
imul
test
mov
mov
sbb
mov
popa
inc
imul
or
arpl
mov
sbb
cli
ret
and
ret
xor
pop
xor
pop
jmp
adc
rorb
mov
ss
cwtl
lock
ljmp
xchg
sub
xor
jbe
mov
adc
add
adcb
popf
arpl
dec
mov
jmp
dec
mov
cmc
ja
mov
sbb
mov
fldenv
sbb
pop
jnp
adc
dec
lret
cmp
sbb
stos
and
sub
lea
mov
dec
cmp
sbb
dec
lods
mov
pop
xor
mov
addb
outsl
ficoms
cmp
outsb
aam
mov
test
add
cmpsl
xchg
pop
lds
jmp
lahf
mov
fs
mov
inc
sbb
push
popa
xor
mov
mov
or
test
and
jns
cltd
cmp
jg
out
lahf
or
in
cli
psraw
and
jns
or
adc
popf
xchg
clc
sbb
inc
out
test
xor
cmpsl
mov
jp
repz
dec
adc
jns
mov
in
mov
push
call
and
aas
push
mov
xchg
inc
add
inc
mov
jo
ljmp
jge
inc
mov
in
movsb
or
inc
inc
mov
add
ja
repnz
popl
andb
add
adc
je
pop
scas
lock
iret
ds
jo
mov
and
cmp
pop
lds
jb
cwtl
repz
mov
in
in
cs
adc
sbb
mov
mov
sbb
insl
out
mov
jae
test
shll
lea
aaa
add
mov
dec
je
test
or
and
int3
movsl
xchg
mov
mov
dec
cmp
test
pop
cmp
into
mov
test
sbb
sub
or
mov
mull
insl
jecxz
andb
or
std
xchg
cmp
xor
sbb
cmp
jo
inc
mov
sub
mov
add
les
pop
idivb
bnd
lcall
sbb
and
into
scas
inc
insl
xlat
cli
pusha
push
dec
les
sbb
jg
mov
pop
push
cmp
ljmp
hlt
sub
stos
mov
mov
pop
fcompl
lea
xchg
and
sar
dec
imul
dec
enter
aam
loope
cmp
jbe
xor
xchg
jl
lahf
sahf
je
lods
sub
xlat
sub
xor
std
xchg
fsub
add
lock
loope
xor
sbb
or
mov
test
mov
lods
mov
andl
pop
repz
jno
xchg
imul
cmp
rorb
inc
outsb
mov
loopne
shrb
xor
jl
mov
add
dec
iret
test
mov
push
fldcw
sub
xchg
shrb
push
mov
jbe
aas
adcl
dec
push
scas
mov
xchg
js
insl
and
cmp
jbe
mov
or
stc
cmp
shl
mov
push
inc
mov
iret
imul
or
xchg
pop
fildl
cmp
dec
jge
xor
clc
dec
pop
sahf
es
dec
je
movups
pop
cmc
xchg
cmp
cmp
pushf
sti
daa
cmp
xchg
pop
push
std
aas
mov
add
mov
and
push
movsl
aad
out
int3
loopne
mov
ficoml
jno
adc
xor
cmpsb
rorb
lds
xchg
add
and
mov
call
or
int3
fcompl
add
fabs
aad
cmp
cmpb
mov
in
popa
cmpsb
call
arpl
mov
add
sbb
inc
sbb
iret
mov
adc
pop
and
mov
addr16
mov
leave
xor
cmc
jbe
daa
dec
sub
jecxz
fidivs
cmc
adcb
or
push
ja
dec
stos
xor
shlb
aas
stos
adc
cmpsl
das
and
in
neg
xchg
sbb
in
pop
push
or
pusha
popa
fidivs
scas
inc
xlat
sub
dec
lahf
jp
xchg
repnz
pusha
add
clc
push
sbb
cmp
sub
or
xchg
out
mov
leave
imul
cli
stos
inc
repz
cli
subb
xchg
test
shl
fucomip
mov
test
lock
xor
movsl
repz
leave
sub
fisttps
add
pop
sti
ret
push
pusha
cmpsb
enter
push
shr
sub
jge
lcall
sbb
ds
or
xchg
adc
mov
scas
popf
adc
popf
adc
sub
jae
jmp
adc
pop
pusha
mov
pop
jmp
pop
fmul
lcall
inc
jp
dec
movsb
ljmp
sub
cmp
fidivl
data16
xor
mulb
push
ficomps
test
sbb
jmp
fmul
movsl
inc
mov
and
jmp
pop
add
sub
push
or
push
and
or
stc
fisubrl
jge
adcl
fstp
loopne
loop
and
addr16
sub
cmp
xchg
icebp
or
mov
xlat
or
stc
out
lahf
cs
jnp
jge
loopne
push
dec
sub
or
ret
dec
pop
add
sahf
stos
push
cwtl
and
mov
pop
push
aaa
in
push
clc
push
pop
pushl
out
fimuls
mov
nop
inc
jne
mov
sub
xor
adc
xchg
mov
xor
adc
lahf
jo
xor
repnz
fimull
jg
sbb
faddl
push
add
adc
jge
dec
or
and
insl
icebp
cli
into
add
out
push
add
jle
add
rcrb
in
clc
or
push
test
mov
outsl
adc
cmc
sub
dec
push
int3
les
xchg
ja
loopne
fldl
mov
inc
arpl
dec
fwait
loope
lea
leave
dec
insb
push
ret
pop
xchg
sub
in
push
les
push
nop
jne
pushf
and
push
aam
subl
mov
insl
add
dec
roll
and
enter
sub
cmc
xor
push
outsb
orb
cmp
xor
dec
insb
movsb
sbb
fmull
sarb
push
push
out
leave
cmp
std
scas
popf
cli
xchg
lret
outsl
sub
cmc
je
inc
mov
negb
and
xchg
push
or
arpl
repnz
jns
pop
mov
jo
out
clc
lahf
je
inc
sub
fisubrl
ja
fwait
push
cld
sbb
ja
pop
mov
test
add
sub
mov
cwtl
dec
fs
xchg
sbb
out
stc
mov
pop
movsb
ficompl
adc
sbb
pop
lret
fimull
subb
cmp
inc
dec
sbb
jne
mov
jl
mov
fldl
int
adc
jnp
in
adc
sub
xchg
gs
in
orl
add
das
adc
dec
js
hlt
fisttps
push
out
xchg
jbe
addl
xchg
mov
cltd
and
int3
sub
jle
icebp
push
dec
mov
popa
or
push
ss
or
inc
pop
daa
sbb
jo
sub
push
je
sarb
shll
lods
jb
fs
mov
test
mov
jno
mov
ds
orb
jl
inc
adc
cmpl
xor
fists
sbb
xlat
push
ds
popf
fcomps
sub
movsl
xor
inc
ljmp
cmp
jecxz
inc
mov
cld
add
mov
insb
clc
in
pop
popf
loope
std
xchg
xchg
fwait
sub
into
es
imul
repz
push
sub
insl
inc
test
out
xchg
jo
cli
roll
fsubl
mov
test
aaa
je
fucomip
ficoms
inc
xchg
xchg
xor
loopne
movsb
mov
add
mov
add
jo
fwait
call
xchg
adc
xor
lds
aaa
push
adc
iret
loopne
mov
adc
dec
sarb
dec
ljmp
cld
lods
gs
jae
pop
sbb
xchg
and
enter
ret
mov
popa
lcall
mov
add
mov
xchg
cmp
lds
mov
xor
stos
aad
popf
ja
sub
push
out
mov
ficoms
add
and
jnp
jmp
loope
sub
mov
cmp
ret
pusha
sub
xor
pushf
outsl
add
fmull
mov
je
dec
testb
adc
shrl
push
or
outsb
in
add
sub
loope
daa
sub
jge
shlb
stos
push
enter
cmp
and
ret
test
std
or
lret
cmpsl
add
stos
jge
mov
movsb
add
in
pop
adc
dec
call
push
pushf
in
in
ds
sub
jns
mov
mov
xchg
inc
aam
pop
sbb
mov
pusha
inc
push
into
ret
lea
cmpsl
cmp
fcom
mov
das
in
sub
cs
cltd
xchg
xchg
jne
xlat
aad
or
dec
int
iret
mov
xor
fidivs
mov
cmp
ret
fwait
add
push
and
sub
xor
xchg
sub
dec
xor
out
icebp
xchg
sub
lea
xor
jle
dec
scas
aad
lods
lock
fdiv
push
lea
pop
sbb
push
fstl
xchg
sarl
inc
mov
jg
cmp
ret
add
adc
lret
mov
iret
mov
pop
sub
mov
cld
jp
or
outsl
mov
push
xor
and
cmpb
iret
pop
pop
sub
fistpl
je
enter
ljmp
or
sub
sti
dec
lret
xchg
push
fmuls
mov
jp
jl
std
push
cmp
test
sub
jg
xchg
fs
inc
inc
mov
fwait
jnp
inc
push
hlt
add
and
lret
push
arpl
outsb
adc
jae
gs
mov
iret
dec
mov
dec
sbb
cmp
pop
jne
xor
push
or
mov
mov
pop
mov
fidivrl
cmp
in
jne
inc
add
pushf
push
jne
js
sub
and
push
in
leave
fadds
xchg
cwtl
pop
and
ss
inc
dec
sbb
addr16
pop
lods
outsl
jbe
and
sbbl
repnz
enter
mov
leave
out
or
inc
mov
in
jbe
in
dec
adc
clc
mov
fwait
clc
stc
fidivrs
dec
ret
mov
hlt
lea
mov
nop
xor
push
pushf
stc
xorb
dec
lret
xor
lea
mov
pop
pop
push
nop
outsb
mov
xor
div
mov
shrl
mov
jcxz
popl
pop
nop
cld
mov
jnp
inc
int
mov
andl
sahf
or
pop
inc
push
test
dec
div
xor
xchg
xchg
jp
mov
addl
stc
mov
add
push
lea
jl
dec
mov
mov
adc
ret
pop
pop
inc
lcall
addr16
jno
lds
or
loop
lods
out
cmp
cmpsb
dec
ror
mov
sahf
or
sbb
fcmovne
fsubrl
ja
lods
add
jo
jae
push
das
adc
or
out
ret
mov
dec
inc
push
xchg
rclb
lock
jp
popa
jmp
jecxz
insl
mov
xor
insb
mov
jle
mov
xchg
xchg
add
pop
cmpsb
xor
fimuls
dec
push
sub
jbe
repz
push
js
mov
mov
mov
mov
ficoml
dec
inc
ds
in
sbb
in
lcall
fbstp
imul
clc
add
xor
imul
xorl
sahf
cs
mov
jne
test
andl
scas
xor
fwait
iret
mov
divb
dec
pop
idivb
push
hlt
push
and
out
mov
cmpsl
and
push
xchg
fsubrs
int
or
lea
adc
dec
mov
or
aad
nop
popf
incl
fs
mov
fildll
mov
push
sub
sub
sbb
sub
adc
nop
mov
out
and
fsubrl
jns
dec
scas
pushf
jb
sub
and
aam
pop
out
repnz
nop
cs
jp
clc
xchg
out
xchg
sub
jno
or
cmp
sbb
or
aas
fisttpll
ffreep
lcall
sbb
arpl
lret
stc
fists
aas
sub
dec
cmp
das
repnz
and
pusha
lea
es
movsb
adc
pusha
jle
add
push
pusha
lea
pop
push
mov
icebp
lock
scas
pop
loop
mov
mov
adc
ss
test
lret
sub
les
jo
xchg
cli
mov
addr16
popa
xchg
cli
add
xor
mov
arpl
out
jo
out
sub
sbb
int3
ljmp
sar
orl
inc
add
dec
insl
imul
scas
adc
push
mov
outsb
outsl
cli
jge
adc
leave
mov
sbb
cltd
push
adc
mov
bts
and
sub
sbb
push
mov
jae
add
outsb
stos
shr
test
insl
lahf
ljmp
fsubrl
dec
pop
cmp
xchg
mov
fisubl
lds
fcompl
and
mov
push
in
adc
push
repz
push
jmp
aas
pop
adc
movsb
mov
mov
test
scas
loop
push
icebp
xchg
mov
mov
pop
frstor
pop
int3
insb
push
rorb
sti
arpl
scas
sbb
aad
push
pop
push
faddl
dec
pop
pinsrw
jl
and
jl
xor
push
xorl
adc
aas
mov
pop
dec
insl
frstor
stos
outsl
mov
jno
inc
repz
insl
push
mov
mov
loop
repz
xor
inc
add
pop
movsb
prefetchnta
repnz
cmc
in
mov
icebp
in
mov
or
pushf
test
xchg
push
adc
or
lret
pop
test
lock
or
arpl
add
adc
push
shl
repnz
or
addr16
movl
cld
jbe
sub
in
es
and
mov
xor
dec
or
add
shlb
mov
sub
mov
xor
movsl
ja
adc
mov
pop
mov
mov
or
bound
out
sbb
cmpsl
pop
shl
ds
xor
pop
mov
xchg
push
cmpsl
int3
shl
xchg
jp
jmp
scas
jl
andb
leave
and
sub
pushl
inc
inc
sti
insl
and
js
mov
fsubl
xor
jns
fsubs
popa
stos
out
outsl
xchg
dec
dec
out
loop
sarb
jge
sub
stos
test
ljmp
ljmp
mov
ja
lcall
int
jae
insl
adc
add
push
lock
imulb
mov
inc
out
mov
mov
shl
mov
xor
xchg
push
outsb
xor
sahf
rcrl
stos
cmpsb
cmp
mov
mov
aam
daa
xchg
popf
test
dec
xor
mov
mov
jl
cmpsb
sbb
lds
adc
jge
mov
iret
cmp
clc
sub
data16
scas
js
into
in
js
mov
sub
sub
lcall
sbb
sub
dec
jecxz
adc
mov
lods
ljmp
inc
sahf
and
popa
jno
lods
mov
adc
or
aas
call
insl
int
push
bnd
pop
scas
into
test
and
sahf
dec
mov
dec
movsl
dec
or
xlat
xchg
out
and
int3
or
dec
push
out
stc
lret
xor
xchg
jecxz
out
push
sub
sub
dec
jae
cmpsb
lret
cwtl
xchg
ja
loop
mov
jae
cmp
mov
jle
dec
insl
out
sub
in
adc
loopw
jge
jae
push
movsl
xchg
mov
dec
jg
dec
lret
std
bound
cltd
outsl
scas
add
sub
xor
push
ljmp
inc
dec
xchg
rcrl
push
fs
adc
push
jmp
lock
mov
imull
jmp
arpl
sbb
daa
mov
jbe
psraw
xor
xor
out
test
inc
push
mov
fimuls
sahf
dec
pop
dec
inc
mov
add
sbbb
into
fdivr
testb
iret
jnp
pop
and
int
fdivrs
xor
aas
mov
sub
mov
add
hlt
xor
sbbb
lcall
jl
xchg
fiadds
sbb
ja,pt
sub
adc
xchg
dec
jmp
movsb
insl
idivl
out
xor
imul
dec
cli
ja
xor
out
scas
lahf
popf
lahf
xor
test
xchg
in
sbb
mov
mov
ds
mov
divl
test
lret
mov
mov
test
fs
insb
xchg
xchg
pop
bound
push
stc
xchg
mov
and
bound
add
ss
iret
cmp
xchg
and
movsb
sbb
sbb
mov
imul
cltd
jns
dec
mov
sbb
mov
adc
dec
jns
jle
das
std
mov
mov
out
cmp
xor
mov
repnz
filds
inc
loopne
ja
mov
cld
sarb
xor
mov
dec
sbb
sub
rcl
push
es
test
ret
xchg
adc
enter
test
ret
xchg
push
insb
movsl
jmp
inc
sbb
xor
data16
lods
test
dec
dec
jl
mov
dec
out
pop
add
popf
les
nop
movsb
outsl
cli
mov
lret
jno
mov
xor
sbb
add
int
mov
xor
and
jmp
and
push
fldcw
mul
or
mov
mov
mov
add
cli
rol
and
clc
fsubp
sbb
mov
insl
xchg
add
imul
out
decb
mov
and
pop
lss
inc
push
std
xor
popa
movsb
push
hlt
mov
mov
adc
leave
int
xchg
pusha
add
adc
data16
xor
imul
mov
rcll
cmpb
push
cmp
rorb
lds
scas
call
sbb
repz
xor
xchg
mov
sbb
sarl
jne
lods
shrl
mov
add
xor
push
std
insb
mov
xchg
and
addr16
popa
sbb
inc
std
pop
cmp
xchg
inc
addr16
repnz
imul
push
ret
int
sub
push
push
push
sbb
push
push
mov
lret
je,pn
push
sbb
repnz
xchg
pop
cli
and
aam
inc
xor
sub
shll
testl
test
mov
out
bound
in
gs
mov
stos
xchg
xchg
test
mov
enter
nop
ljmp
push
xchg
cmovp
or
cmpsl
inc
jno
mov
cmpsl
ja
test
outsb
fidivs
sbb
jmp
push
inc
or
pop
ss
ljmp
repz
sbb
cmpsb
inc
push
ljmp
lcall
xor
pop
mov
sub
sbb
cld
mov
and
and
xor
mov
jo
ret
imulb
pop
sbb
fidivl
inc
mov
cltd
jno
cmp
std
jle
ljmp
sbb
jle
push
mov
lods
pop
lcall
icebp
mulb
and
or
xchg
inc
or
and
pop
nop
mov
pop
repz
ficoms
push
test
push
lcall
and
or
cwtl
adc
cmpsb
cld
test
cmp
pushf
out
in
fucomip
orb
les
pop
inc
add
mov
das
sti
inc
pop
mov
insl
pop
pop
push
push
pop
mov
push
loop
into
push
leave
pop
fistpl
test
and
sub
xchg
shlb
movsb
jmp
into
fsubr
ds
addr16
and
rcrb
popa
shll
lods
mov
inc
in
sub
cmp
ficomps
cmpsl
clc
pop
es
mov
dec
or
test
or
push
outsb
mov
out
sahf
pop
stos
sar
iret
insl
pop
jnp
lret
jo
insl
cmc
in
fsubrs
das
xor
lret
pop
lahf
and
fisubs
cltd
mov
cld
or
repnz
mov
adc
mov
xchg
xchg
stos
or
stos
pop
push
insb
sbb
mov
jge
lcall
jl
test
aas
arpl
and
aaa
push
jo
mov
aaa
mov
jg
jg
and
aas
sbb
out
fisubrs
ss
cmc
lds
jnp
mov
jne
jb
idivl
inc
and
outsb
rorl
test
mov
les
cmp
jge
fdivrl
inc
ficomps
fwait
movsl
jl
call
cltd
adc
loopne
movsb
lahf
outsl
add
enter
push
test
popf
push
nop
jge
jmp
or
xchg
lret
leave
ss
sti
push
push
pop
rcrl
mov
inc
pop
mov
scas
push
cwtl
xchg
mov
dec
das
pop
insb
jp
pop
add
mov
inc
lds
and
cmp
mov
sbb
jne
or
hlt
xchg
push
mov
add
mov
dec
cmp
repnz
pop
sub
xorb
imul
out
iret
inc
adc
ljmp
sbb
pop
cmp
add
icebp
push
addr16
inc
jb
loopne
add
pop
nop
in
call
popf
inc
cli
aaa
addr16
push
lret
dec
push
adcb
mov
push
mov
into
aaa
mov
mov
mov
push
sbb
out
lret
push
movsl
adc
jle
push
shlb
sub
andb
add
inc
sti
mov
inc
xor
jecxz
and
sub
push
outsl
data16
mov
mov
cmp
dec
movsl
push
adc
jle
sbb
gs
sub
shr
xchg
mov
call
inc
jo
lea
push
cmp
loopne
xchg
pop
notb
xchg
mov
and
pop
out
int
add
push
fildl
out
into
or
gs
loopne
cmpsl
push
and
and
mov
out
sub
testl
cltd
cld
psubsb
ret
testb
mov
mov
push
pop
sbb
outsl
test
push
test
aad
shrb
insl
inc
insb
add
jb
fdivrs
add
pop
es
pop
xchg
aam
push
fcmovnbe
mov
jb
test
mov
mov
cli
mov
les
dec
add
mov
addl
popa
mov
add
push
pop
js
lret
jo
fs
inc
inc
cli
cmpsb
and
in
jecxz
icebp
fsubs
decl
repnz
aam
movsb
sbb
testl
orb
sbb
subl
mov
lds
adc
adc
lds
push
test
or
fcompl
mov
dec
pop
movsb
jo
cmp
jge
insl
stc
sub
repz
loope
cltd
out
roll
imul
jp
mov
int
cs
mov
roll
cmp
movb
ret
aas
or
fs
jnp
jbe
mov
aaa
es
mov
mov
and
adc
mov
xchg
repz
fidivrl
or
cmp
sbb
ss
pop
into
dec
adc
loope
push
jecxz
scas
les
popa
enter
mov
or
sbb
imul
or
lods
pop
cmp
add
pop
pop
int
sub
jge
fmuls
jnp
rcrl
mov
pop
rcll
dec
cmpb
scas
inc
cld
cmpsl
cmpl
pop
dec
pusha
xchg
jbe
lret
or
shr
add
adc
push
inc
mov
mov
inc
subb
stos
sub
outsb
sub
jle
cmc
xor
stc
dec
sbb
inc
adc
or
sbb
xchg
jno
pusha
cs
scas
int
dec
add
jmp
or
je
imul
mov
pop
mov
lock
test
in
dec
pop
xor
das
jg
mov
dec
mov
ret
lahf
fstpt
fs
cmp
mov
xor
mov
pop
jle
gs
shlb
lret
ret
and
imul
aas
or
mov
clc
fs
xor
mov
fisttps
xor
enter
and
les
jl
mov
jg
pop
jb
mov
dec
xor
pop
or
scas
pop
push
mov
mov
imul
or
jp
or
xor
adc
call
xchg
fwait
mov
cltd
pop
stos
xchg
mov
cmp
out
push
mov
mov
mov
repz
in
hlt
push
loop
movsl
sbb
mov
xor
mov
sub
ja
push
aam
jge
out
or
mov
jnp
mov
in
sbb
pop
push
cli
push
repnz
mov
cmc
dec
scas
insb
mov
leave
jb
inc
push
jns
lcall
enter
ja
shrb
stos
arpl
and
test
out
pop
loopne
xchg
imul
mov
pop
xchg
int3
pusha
push
mov
mov
leave
mov
or
jge
rolb
mov
mov
push
or
mov
jle
daa
data16
lods
dec
movsb
clc
push
jae
mov
mov
lods
fcoml
xchg
cwtl
adc
push
out
adc
jo
sbbl
inc
and
or
hlt
aaa
mov
mov
sub
test
xor
rolb
fcomp
push
xchg
into
jb
sub
in
inc
pop
cmpsb
add
scas
push
pop
xchg
push
mov
xchg
hlt
mov
jl
test
sub
sbb
leave
bound
cmp
andl
mov
fidivs
inc
mov
mov
mov
and
vmwrite
or
stos
and
in
pop
sahf
mov
sub
mov
lret
std
jl
xor
cmp
xchg
lock
mov
mov
lret
lods
aas
add
outsl
test
xchg
cmpsl
push
loope
push
jp
jne
sbb
ds
push
fidivs
orl
sti
add
cli
shl
shl
sbb
push
imul
sub
cmpl
notl
xor
pushf
inc
mov
sti
dec
add
popa
mov
jnp
cmp
or
sbb
pop
mov
xchg
dec
in
sbb
sbbb
push
cmpsl
sbb
mov
add
cmp
pop
sahf
mov
ret
xor
mov
mov
mov
jecxz
adc
xchg
sbb
bound
or
push
mov
ss
pop
fcoml
mov
pushf
mov
or
push
mov
mov
sbb
loopne
xor
out
test
in
adc
aaa
jb
mov
addr16
cmp
int
sbb
jp
movsl
pop
imul
jl
pop
mov
ret
out
sbb
pop
push
jo
push
inc
cmp
inc
ja
pop
test
test
adc
mov
lock
pop
mull
jns
or
jg
aas
mov
or
lds
pop
movsb
add
dec
push
cwtl
inc
cmpsb
inc
add
iret
testb
mov
sub
mov
movhps
enter
xchg
andb
iret
mov
pop
jno
pop
mov
fidivs
f2xm1
cmpsl
mov
imul
cmp
pop
cltd
jp
into
xchg
dec
lret
dec
pop
cmp
je
pop
dec
push
add
or
lcall
aaa
cmp
js
dec
icebp
xchg
stos
fisubrs
fidivl
or
mov
sub
adc
jae
push
inc
daa
cld
jne
imul
xchg
int3
lahf
add
lods
sub
and
xchg
lret
sub
xor
ja
jmp
test
adc
loop
scas
pop
decb
mov
bnd
mov
movsl
mov
loope
mov
out
rcll
adc
nop
mov
js
add
in
arpl
mov
repnz
test
notl
cmp
in
lds
push
mov
ds
cmpsl
xchg
data16
scas
mov
pop
ds
shlb
ficomps
jle
pop
xor
ds
rcr
push
pop
cli
xchg
test
pop
push
js
sbb
mov
sbb
jno
inc
cmp
mov
sbb
shlb
out
decb
iret
sub
adc
sti
or
push
ret
dec
or
pop
push
pop
insl
iret
mov
jge
adc
push
jecxz
dec
mov
push
stos
test
loop
push
and
jge
out
dec
pop
sti
shl
inc
aaa
xchg
loope
cmp
flds
lea
loope
xor
decl
aaa
iret
adc
negl
jns
mov
cmp
mov
sub
jl
mov
push
cmpsb
in
out
pop
ds
jecxz
fnstenv
popf
sub
jp
lock
jns
insb
pop
xchg
inc
xor
and
or
ja
mov
or
pop
hlt
lret
ss
aam
subl
inc
sahf
mov
inc
xchg
std
push
xor
or
cmpsl
es
cmp
sub
ficoms
adc
fwait
add
andl
lcall
mov
orb
sub
pusha
bound
xchg
fldl
pop
lods
xchg
negb
inc
mov
out
push
mov
xlat
push
jno
std
cld
fildll
sub
jb
mov
ja
and
mov
or
loope
push
or
inc
aaa
dec
cmp
mov
ljmp
arpl
add
out
and
lods
std
xor
lock
les
push
add
in
dec
mov
xor
cmp
lock
dec
repnz
enter
je
ljmp
out
adc
xlat
mov
repnz
subl
inc
rcrb
fstp
and
xor
pusha
aas
std
arpl
adc
repz
push
addr16
insb
mov
or
pop
pop
mov
mov
outsb
popf
cld
cmp
and
mov
mov
leave
fs
dec
out
test
scas
push
and
add
cmpsb
js
fcoml
inc
xor
es
xor
inc
push
stos
adc
bound
push
mov
in
sbb
fdivrl
add
jle
xchg
lock
mov
pusha
stos
shrb
mov
push
dec
adc
std
dec
sbb
pusha
lea
out
iret
mov
add
scas
std
loop
hlt
adc
movsl
add
push
hlt
inc
adc
fimull
mov
jns
inc
cmp
cmp
push
das
mov
pop
aas
inc
scas
fisubs
cltd
das
fldt
loop
je
dec
mov
out
or
pop
mov
shrl
dec
xor
int3
inc
aaa
ficoml
sti
mov
js
out
les
adc
es
aas
inc
lods
negb
ror
sub
mov
push
push
xchg
fwait
xchg
in
pop
jmp
repz
fucom
stc
mov
jnp,pt
mov
inc
clc
aas
push
lcall
orl
ljmp
mov
js
pusha
jne
jle
sub
push
mov
xchg
pop
out
out
ljmp
cmpsb
add
xor
push
sti
enter
jns
ficoms
inc
and
mov
pop
loop
adc
aad
out
hlt
scas
push
sti
dec
push
and
cmpsb
cld
mov
inc
je
in
and
popa
mov
fcomi
sarb
mov
mov
cld
dec
pop
sbb
jb
sub
sub
push
lods
out
push
mov
jbe
mov
cmpsb
xor
dec
iret
pop
dec
mov
movsl
add
jg
mov
sbb
ds
pop
testl
cmp
inc
loope
iret
leave
in
in
sub
mov
addr16
mov
cmp
pusha
clc
mov
push
push
popw
lret
push
mov
mov
xor
aad
xchg
adc
fwait
hlt
xor
mov
mov
inc
pushf
adc
add
shl
xor
lock
outsb
stos
shr
cmp
jle
enter
add
xchg
xchg
cmp
inc
lods
fwait
repnz
adc
aad
inc
push
xor
jbe
in
int
or
mov
ret
add
aas
push
jo
push
mov
ja
movb
mov
cmp
push
mov
push
add
dec
inc
pop
or
scas
stos
fs
fwait
xlat
cld
cmpb
jge
mov
pop
sub
sub
insb
adc
out
mov
mov
clc
sub
push
xor
mov
pop
es
and
pop
fmuls
jae
sbb
ss
ret
adc
push
and
sar
js
sub
sub
je
mov
mov
hlt
cltd
cltd
ret
jl
push
mov
bound
lock
mul
sub
adc
enter
jnp
sub
iret
and
pop
cltd
pop
mov
movsl
aaa
jae
testl
cmp
shl
div
cmp
ljmp
mov
mov
adc
jl
and
and
inc
xchg
imul
mov
shlb
cltd
sub
and
add
das
ficomps
mov
or
scas
inc
int
fisubs
enter
loopne
iret
out
sar
std
cmp
or
pusha
dec
bound
dec
mov
cli
jbe
push
pop
jge
cmp
dec
or
fidivs
pushf
mov
mov
and
out
xabort
mov
lods
mov
mov
add
jnp
sub
imul
stc
push
xchg
adc
fwait
xlat
in
das
in
push
rcrb
out
dec
leave
pop
cmp
leave
adc
repnz
mov
vpunpckhbw
inc
dec
jp
pushl
test
push
aas
or
les
sub
in
shrb
jb
fidivrs
popf
inc
cmp
arpl
xor
stos
idivl
xchg
in
mov
mov
dec
push
notl
push
shll
or
xor
push
jae
dec
outsl
sbb
xchg
jnp
rcl
add
or
push
cmp
add
ja
rol
jge
dec
movsl
sub
icebp
pop
faddp
cltd
ss
into
cmp
xor
xchg
pop
lret
lds
ds
lock
cmpsl
fwait
xlat
add
add
fcoms
mov
mov
dec
dec
int3
add
outsb
cmp
cli
mov
out
popa
xchg
call
imul
call
jg
mov
addl
add
out
aas
dec
mov
js
jmp
lods
and
jmp
sbb
dec
popf
mov
test
or
rcll
jle
aas
push
testl
bound
sub
add
mov
mov
outsb
inc
dec
xchg
aad
inc
add
mov
xor
adc
xchg
insl
gs
dec
mov
out
mov
adc
loop
push
dec
sarb
jo
push
aad
and
adc
out
je
stos
shll
adc
pop
insb
inc
fiadds
mov
icebp
sahf
and
and
test
cmp
loopne
push
out
jl
add
mov
mov
ljmp
ja
popf
iret
fsubr
adc
and
mov
je
in
add
inc
sti
leave
popa
push
lods
cmc
ret
call
popf
and
clc
jno
flds
mov
xor
sub
ret
fs
push
or
jbe
test
push
cmp
outsb
fimull
clc
sbb
cmp
mov
repnz
jne
ja,pt
mov
push
inc
xchg
pmullw
nop
lock
leave
or
and
rcl
add
inc
cli
sub
out
cmpsb
je
aam
lods
cmp
popa
dec
arpl
test
xchg
cmpb
lods
enter
mov
pop
in
testb
xchg
mov
movsb
outsb
shr
icebp
and
jp
in
in
dec
xchg
sahf
dec
ret
cmp
push
ret
test
test
xor
test
xchg
pop
lcall
mov
cmpsl
cmc
enter
inc
cmp
and
sti
fsubrs
out
test
jae
clc
inc
dec
push
fs
and
loop
jo
jno
mov
add
jp
push
jae
lahf
mov
mov
rclb
lahf
lods
cmp
mov
in
push
cltd
dec
iret
loop
mov
call
and
in
nop
or
into
jp
push
out
lahf
rolb
ret
push
jb
mov
push
xor
and
mov
sub
mov
lahf
sti
xor
pop
lret
jecxz
lea
and
stos
jb
inc
xlat
pop
add
ljmp
jmp
test
adc
mov
xor
jo
js
mov
js
pop
fmul
add
das
ds
bound
xor
jae
outsb
inc
test
out
sub
pop
daa
or
pop
out
sahf
xchg
data16
xor
test
lcall
sbb
cmp
xor
push
push
or
mov
in
xlat
mov
push
dec
andl
mov
mov
fbld
test
jle
inc
pop
inc
xor
mov
and
mov
ret
and
mov
scas
ret
test
jno
fwait
mov
ds
mov
daa
push
rorl
stos
inc
xchg
scas
loopne
nop
imul
pop
popf
mov
mov
pop
or
cmp
pop
gs
loope
mov
mov
das
add
push
stos
mov
xchg
test
push
mov
testl
mov
inc
mov
je
rcr
lods
cmpsb
sub
pop
mov
mov
fdecstp
adc
jle
das
in
lahf
nop
aad
jns
std
push
out
mov
out
xchg
andl
mov
pop
out
aaa
fcomps
xor
push
out
lock
push
xchg
and
sub
pop
inc
mov
fdiv
sub
repz
fiaddl
les
push
mov
sub
mov
xor
fs
add
push
adc
mov
jmp
lcall
icebp
or
jecxz
xchg
adc
jne
lods
fwait
lods
fucomi
sub
and
lods
jmp
and
sbb
inc
sbb
out
loope
cmp
daa
cmp
hlt
sub
inc
inc
jmp
xchg
jge,pn
push
movsb
cwtl
adc
nop
aam
push
xchg
sub
out
enter
adc
xchg
mov
and
xor
pop
inc
dec
jo
aam
sbb
movsl
les
add
test
sub
jl
in
inc
nop
pop
xor
icebp
mul
call
push
xchg
into
sbb
hlt
dec
xchg
and
decb
shl
pop
xor
pusha
fsts
dec
xor
dec
push
sbb
and
or
out
push
fstl
xchg
pushf
daa
cmp
add
rclb
adc
cli
jmp
or
leave
mov
and
pextrw
dec
lock
pop
out
pusha
mov
adc
subl
mov
imul
into
aad
sub
push
cmp
push
stc
pop
mov
push
lret
pop
cmp
xchg
push
and
call
pop
mov
jne
pop
lea
dec
fstpt
rorb
pop
lods
pop
call
stos
inc
cmpsl
rorl
test
mov
arpl
fisttps
adc
jae
mov
sub
xor
dec
out
fs
dec
push
aaa
and
clc
push
mov
icebp
add
add
add
je
iret
repz
shrb
lds
call
mov
jnp
sbb
in
xor
jge
jns
in
movl
es
out
aam
pop
mov
stos
mov
pop
ljmp
test
pop
xchg
fwait
xor
xchg
pop
and
mov
lock
std
mulb
mov
xchg
pop
js
idiv
lret
xlat
nop
and
mov
ss
fld
aaa
mov
not
xlat
insl
add
in
ret
and
loop
push
es
cld
leave
or
pop
add
mov
sub
pop
xor
jno
pop
cmc
imul
enter
cmp
popf
dec
dec
das
sbb
push
shll
outsb
adc
sbb
lock
movsl
pop
mov
mov
mov
mov
xor
loop
cwtl
orl
inc
bound
jle
int
inc
lcall
mov
and
out
or
sub
mov
dec
adc
aam
inc
cli
imul
scas
jl
dec
jg
fs
aaa
dec
adc
movsl
out
or
test
push
jno
sbb
sbb
mov
imul
adc
sbb
xchg
in
cwtl
lcall
or
cmp
adc
das
nop
popa
loop
ljmp
scas
popa
jmp
or
lods
push
inc
xor
and
stos
test
jne
and
aas
jmp
mov
imul
jns
js
lret
xchg
add
push
inc
adc
xchg
inc
mov
nop
adc
hlt
mov
cli
movsb
mov
adc
cwtl
jge
dec
dec
fsubs
loopne
out
mov
push
fcomps
shlb
sbb
inc
jmp
push
lcall
inc
sahf
jbe
sub
push
jne,pn
ficoml
fistps
rolb
or
push
call
test
xor
in
mov
clc
inc
and
shll
js
jb
push
push
fldt
andl
xchg
adc
pop
pop
xchg
sub
sbb
jnp
push
rcr
fstps
jecxz
fildl
fwait
cltd
add
aam
xchg
jecxz
pop
jb
pop
xor
mov
jb
jne
xchg
fsubrl
fnsave
pusha
ds
jp
imul
je
jnp
jns
xchg
add
hlt
push
enter
outsl
scas
lock
int
cmpsb
in
clc
sbb
mov
mov
jnp
add
imul
pusha
jns
incl
in
ds
clc
jno
inc
sbb
xor
push
add
imul
xchg
movsb
jle
aas
popa
pushf
ss
jge
add
dec
sub
push
sub
stos
aas
inc
out
ret
repz
shlb
aam
jmp
jnp
sahf
cmp
sahf
push
test
mov
test
test
mov
xor
movsb
divb
cmp
int
mov
mov
sub
sbb
adc
sub
imul
pushf
mov
ficomps
gs
sub
mov
mov
cmp
lahf
int
dec
inc
add
icebp
in
xor
mov
outsb
neg
inc
ret
cmpsb
pushf
push
add
push
jae
je
ds
test
rcl
pop
add
es
outsl
lret
xor
mov
outsb
pop
insb
fwait
mov
dec
cs
insl
arpl
clc
sbb
mov
sbb
jecxz
out
arpl
dec
jno
andb
or
fucomp
je
adc
fsubrp
sbbl
repz
xorb
mov
dec
test
mov
jno
jae
and
aam
or
arpl
or
cmc
daa
xchg
mov
or
mov
mov
ret
sub
test
dec
lds
push
sbb
push
cwtl
adc
adcb
or
ljmp
scas
shll
int
rcl
fdivrl
call
rolb
std
push
outsl
push
call
es
push
and
test
adc
mov
lock
sub
arpl
adc
icebp
add
popf
pop
mov
jl
dec
xor
cs
stos
fcmovnbe
and
lock
sub
outsb
pop
cmp
dec
lds
jnp
xchg
movsb
in
pop
mov
out
jo
pop
sub
and
popf
and
aaa
xor
ljmp
jno
inc
scas
outsl
in
cmpsl
push
call
testb
stc
or
cltd
out
mov
mov
mov
loopne
out
cmp
jmp
pushf
arpl
jle
and
add
sarl
dec
lahf
ret
push
in
insl
out
sbb
sub
pop
pop
imul
stos
jns
sbb
cmp
push
addb
divl
xor
or
pop
push
adc
xlat
addl
add
push
pop
mov
insl
std
lods
adc
lock
push
push
cmpsb
adc
pop
mov
sub
mov
std
dec
fs
pop
inc
pop
cmp
in
imul
pop
push
mov
scas
ss
sub
ljmp
adc
and
rolb
pop
jp
scas
sub
popa
pop
hlt
rep
cmp
sahf
stc
leave
xchg
sar
xchg
mov
arpl
xor
dec
shlb
mov
xchg
sti
pop
shl
cmpsl
push
jno
pop
or
add
xor
sbb
rclb
mov
in
cld
push
bound
sub
jnp
mov
push
popa
inc
cmp
or
loopne
iret
sarl
fdiv
inc
cvtpi2ps
push
mov
std
add
sub
rol
push
jb
mov
shlb
inc
add
inc
repz
stos
and
out
addr16
push
jae
adc
lahf
test
sub
test
or
adc
cmc
out
push
mov
sub
int
lods
ficoms
lods
fistpll
adc
xor
mov
mov
ret
push
xchg
pop
fisubl
loopne
sbb
or
inc
pop
arpl
rolb
out
cmp
repnz
xchg
lea
fbld
xchg
test
pop
mov
movsb
sub
mov
ss
add
in
push
dec
xor
enter
push
add
sbb
xor
clc
popa
shll
jne
cmp
shl
ret
inc
aaa
and
push
sub
lods
or
and
mov
jmp
jo
call
ficoml
sub
cmc
clc
mov
mov
ss
sbb
push
mov
inc
pop
test
dec
movsl
clc
xor
xchg
fs
out
adc
movsb
or
std
mov
cmc
mov
mov
mov
adc
push
or
push
push
call
jg
stos
jmp
adc
cmp
sub
das
insl
cs
or
sbb
in
inc
loope
sub
scas
fnsave
and
or
lahf
pop
dec
je
dec
mov
mov
cmp
stc
or
mov
andl
mov
adc
sti
lods
lods
addr16
pop
repnz
ret
push
add
and
enter
cmc
cli
xchg
push
and
jge
cmp
sbb
mov
mov
adc
mov
sbb
test
in
jnp
test
push
daa
int3
sub
or
lret
fcom
cmp
popf
rcl
cmc
jg
notb
fmulp
cmp
or
lret
mov
cmp
aam
test
movaps
lret
fcomp
xor
cmpb
int
inc
cmpsl
dec
xchg
and
lds
aad
rcrl
loope
push
mov
shl
das
sti
jmp
dec
jno
js
fdivrs
mov
ds
pusha
push
or
movsb
test
jge
adc
in
jmp
adc
push
mov
dec
sbb
sbb
pop
out
ret
lcall
and
dec
fnsave
adc
jecxz
stos
lock
fisubrs
and
rcrb
iret
jl
sti
pop
xor
push
xchg
jno
mov
push
testl
xor
push
orl
xor
add
lock
loop
mov
mov
xchg
rcll
fdivr
inc
mov
loopne
icebp
popa
imul
sub
jmp
nop
push
rol
outsl
scas
xchg
je
roll
test
scas
jno
aaa
leave
loopne
mov
aad
clc
clc
rorb
repz
and
push
xor
or
inc
lods
cmp
and
add
push
xor
lahf
mov
jbe
repz
movsb
xlat
and
das
int3
out
in
push
sahf
add
push
movsb
shr
mov
jne
loopne
out
sbb
in
nop
aaa
imul
sbb
addb
fnstcw
leave
fnstsw
jns
out
dec
jne
or
je
frstor
push
pop
sub
hlt
in
aas
mov
lods
or
imul
or
mov
loop
pop
adc
lods
push
shlb
dec
push
push
jne
xor
cmc
sbb
pop
inc
adc
lahf
xor
andb
or
mov
fildll
loopne
push
test
movsb
dec
ds
mov
in
add
push
imul
gs
adc
es
fcoms
into
adcb
and
ja
lods
jmp
stc
movsl
push
sub
cli
add
jbe
jnp
mov
outsb
iret
pop
int3
mov
pop
fisttps
in
negb
imul
sahf
sbb
jle
enter
mov
add
int
lret
push
outsl
sub
aaa
loopne
cwtl
repnz
push
cmp
dec
sub
and
inc
pop
cmp
adc
into
pop
scas
outsb
sahf
pop
or
inc
shlb
sub
sub
jge
lods
gs
jb
arpl
xor
push
hlt
or
dec
daa
addb
lods
mov
pop
xlat
inc
jge
inc
dec
ljmp
mov
fwait
jp
pushl
cltd
inc
enter
push
push
jo
inc
mov
mov
stc
cli
rorl
xor
add
popl
shrl
and
cmp
push
stc
add
data16
lcall
dec
xor
pop
lahf
inc
xchg
mov
and
push
icebp
cmp
clc
jecxz
pop
cmp
in
xor
das
dec
fnstcw
mov
in
pop
addr16
leave
repz
leave
xchg
cltd
lods
mov
jle
sub
rcr
sub
je
inc
xchg
and
push
or
and
sub
imul
scas
dec
adc
pushf
lcall
jmp
xchg
xchg
dec
mov
es
clc
sub
out
sbb
lods
rorb
fsubl
jmp
pop
inc
pusha
cmpsl
dec
in
into
fsubl
lods
adc
stc
mov
push
push
js
mov
mov
or
jno
lcall
call
cmp
lret
pop
dec
cmp
out
pop
adc
cmp
test
rclb
std
sub
imul
clc
dec
lock
aas
lahf
add
push
mov
dec
or
xchg
jmp
sahf
xchg
sub
out
ja
daa
pop
hlt
lcall
push
pop
js
adc
cmpsl
ds
lods
and
jg
ret
xchg
es
inc
push
xchg
popa
in
and
ss
mov
movsb
mov
cmp
lahf
test
in
lock
insb
outsl
aad
lret
jmp
imul
or
std
xor
push
enter
cli
test
xchg
add
sbb
and
mov
lret
push
incb
or
gs
jo
mov
cmc
mov
and
shr
push
sahf
pop
out
test
out
add
sbb
les
push
xchg
enter
fstpl
scas
scas
repz
lret
in
fwait
xchg
test
in
and
pop
mov
mov
lods
into
mov
adc
push
mov
push
aam
or
pop
cs
inc
pop
sahf
and
hlt
adcl
lret
jmp
push
xor
mov
push
flds
loopne
pop
mov
mov
stos
test
pop
push
mov
and
inc
pop
dec
shlb
inc
das
mov
mov
imulb
data16
jbe
int3
push
adc
pop
sbb
test
icebp
aad
dec
cmpsb
sub
nop
daa
jp
addr16
jmp
adc
mov
pushf
pop
pop
call
or
mov
shl
adc
mov
addr16
mov
sbb
lret
pushf
ss
hlt
cwtl
sub
in
inc
pusha
outsl
aam
mov
add
lock
je
repnz
int3
jl
or
fdivrl
cmp
pop
xor
adc
outsl
sub
dec
arpl
or
sub
call
or
mov
dec
xor
mov
aaa
sub
add
bound
jnp
or
test
dec
cltd
dec
shl
mov
aaa
arpl
push
jbe
dec
sahf
repnz
test
mov
imul
xor
enter
inc
mov
push
pushf
stos
ror
cmc
mov
out
sbb
mov
shlb
mov
ds
dec
stos
dec
mov
out
cltd
sbb
fs
aas
shl
movsb
add
sub
mov
dec
jnp
loop
xorb
mov
shll
or
push
stos
das
fidivrs
inc
push
or
inc
syscall
imull
shll
inc
lret
loope
mov
cmp
sti
inc
mov
in
inc
pop
sbb
stos
fsubrs
popf
sar
scas
mov
mov
cmp
add
scas
sbb
pop
sub
jmp
mov
sbb
mov
adc
fildl
push
inc
outsl
cmpsl
jl
push
push
aas
sbb
das
sub
aad
popa
pop
adc
lods
test
ficoms
sar
and
data16
scas
xchg
fistpl
out
data16
lds
jb
and
call
adc
scas
pop
mov
jae
xor
adc
aad
cli
cmp
shlb
outsb
in
js
stos
outsb
cmp
movsl
mov
xor
lds
cmp
mov
lea
adc
test
jns
lods
cmpl
icebp
ret
xchg
push
shrb
mov
sub
sbb
popf
in
and
xchg
adc
mov
pop
sbb
lds
ror
mov
cmp
cmp
jnp
je
push
ret
sub
push
mov
loope
xchg
push
pop
test
cmp
out
loope
dec
mov
in
scas
lcall
and
pop
pushf
sbb
icebp
add
mov
out
gs
sub
lea
lcall
gs
jmp
jae
std
iret
and
push
adc
push
sbb
add
dec
or
in
cli
rorb
scas
xor
enter
sub
ss
pop
jmp
mov
lea
rcl
jns
push
nop
data16
push
cmp
mov
adc
call
outsl
gs
shlb
outsl
mov
adc
cmp
mov
outsl
popf
lds
sti
stos
ljmp
filds
in
or
pop
outsl
pop
cwtl
xchg
mov
adc
xor
lret
dec
sti
pop
mov
or
cmpsb
jae
adc
pop
jno
shrb
je
ss
push
add
je
push
mov
imul
sahf
cmc
repnz
popa
xor
sub
out
inc
cmp
and
std
mov
mov
and
out
jne
lret
int
repz
push
push
testb
sbb
dec
call
ds
add
jmp
mov
dec
sub
les
test
jbe
pop
xchg
sub
mov
xor
xor
mov
dec
rorl
mov
insb
xchg
xchg
pop
mov
clc
cmpsl
test
adc
xor
adc
xrelease
icebp
adc
out
cli
sarl
or
int
sti
imul
adc
or
clc
and
inc
into
dec
js
adc
movl
pop
push
lahf
or
fidivl
das
into
mov
std
push
lods
lret
sub
pop
stos
add
or
xlat
dec
or
in
mov
ret
clc
pop
push
add
or
cmpsb
adc
out
mov
int
add
cwtl
arpl
int
call
movsl
dec
push
xchg
addl
mov
in
test
and
mov
scas
mov
sub
jbe
cmp
jle
adc
cld
lods
pop
std
fwait
push
ret
mov
roll
jmp
cwtl
mov
repnz
neg
add
out
sub
fstl
xchg
add
repz
sub
add
mov
cmpb
inc
rol
mov
repnz
xor
je
mov
loopne
fisubrl
jbe
mov
cli
leave
or
xchg
xchg
repz
jno
adc
mov
outsl
sbbl
add
adc
mov
ss
jge
or
pop
adc
add
rol
je
sub
shlb
lahf
dec
leave
sbb
xchg
sbb
push
adc
pop
pusha
jecxz
push
dec
xor
xor
sarb
std
shl
sbb
xchg
aas
mov
jp
ret
mov
pusha
push
out
mov
in
out
lock
mov
push
cmp
repnz
shrl
sub
and
add
pop
cmp
push
cltd
fisttpl
mov
inc
pop
sbbb
sbb
pop
mov
clc
sbb
mov
xlat
push
idiv
mov
adc
ret
loop
insl
mov
pop
pusha
jg
shlb
scas
stc
pop
push
test
pop
cmp
push
les
dec
popf
adc
xor
add
xchg
and
or
dec
xor
or
fs
dec
sbb
mov
jp
pop
xchg
inc
xlat
or
xor
and
adc
ror
push
pop
sahf
jmp
lods
scas
cmp
roll
imul
sbb
popa
mov
sub
mov
ss
add
jecxz
sbb
pop
mov
lret
xor
jns
jno
stos
inc
push
xor
dec
mov
jbe
pop
enter
fnsave
xchg
fsubrl
sbb
inc
xlat
and
lock
mov
pushf
mov
dec
xchg
enter
les
push
ds
aaa
int
mov
xlat
dec
adc
push
dec
cmp
push
xchg
shll
lcall
sysret
xor
xchg
fadds
adc
fdivl
jecxz
out
pop
add
loope
test
fiadds
pop
adc
pop
mov
adc
add
mov
cmp
xchg
jp
add
in
loop
xacquire
cmpsl
sub
in
scas
pop
cmp
arpl
leave
adc
sbb
sub
xchg
into
mov
cmp
into
mov
fwait
sbb
jb
addr16
dec
push
loopne
cltd
push
rcr
je
in
orl
lret
pop
int3
push
mov
mov
pop
outsl
push
xchg
aaa
pusha
out
mov
jno
test
pop
dec
imulb
inc
sub
sbb
clc
dec
add
or
mov
adc
pusha
cmp
lret
out
daa
and
cmp
dec
xor
jmp
data16
fnstcw
pop
leave
inc
mov
fldenv
call
popa
cld
popa
out
test
aam
sub
adc
loopne
ds
mov
outsl
fdivrs
dec
mov
popl
roll
mov
int3
cmp
push
addb
sbb
pop
sub
out
es
sub
mov
bound
pusha
outsb
mov
in
stc
rcl
xchg
xor
jg
sub
stos
cltd
fwait
imulb
addl
push
outsl
jno
dec
jne
repz
or
sti
mov
adc
push
out
inc
popf
pop
mov
loope
pop
mov
jae
es
mov
lcall
xor
and
xor
inc
add
pushf
inc
outsl
mov
scas
jmp
clc
loop
fwait
out
sub
xor
pop
les
push
dec
insl
test
loop
fistpl
in
stos
xchg
iret
fidivrl
sarl
bound
add
jge
and
sbb
or
in
push
js
dec
es
fsubrs
adcb
add
test
pop
fimuls
insl
push
xor
shll
adc
mov
dec
and
pop
imul
xchg
and
xchg
adc
xor
repnz
mov
push
scas
fbld
sub
and
mov
int3
add
push
sub
mov
fcompl
dec
shr
bound
push
cmp
pusha
fstpt
iret
push
outsl
mov
dec
testb
mov
xchg
xor
dec
sub
push
and
daa
add
out
lcall
jae
rclb
imull
mov
sub
mov
dec
cmpl
std
mov
icebp
mov
dec
rolb
sub
mov
cltd
add
les
dec
mov
or
sbb
jmp
jp
and
rcrb
pop
mov
lods
addr16
in
lock
xchg
lods
lret
adc
xor
dec
loopne
push
and
mov
and
sarb
mov
mov
xchg
fs
mov
push
and
mov
adc
mov
enter
je
popf
aas
jnp
addr16
das
fucomip
stos
bound
inc
repz
mov
or
mov
inc
mov
and
sbb
jp
js
pop
push
subb
cmc
cmp
out
outsb
iret
ljmp
outsb
test
xchg
int3
clc
xor
adc
popa
xchg
jmp
movsl
ret
bound
cld
inc
dec
imul
pop
mov
and
out
imul
dec
xchg
ds
sbb
stos
xchg
jge
add
pop
shlb
ret
prefetch
js
mov
loope
in
stos
mov
xchg
mov
cli
movsl
push
stc
jmp
cmp
popa
adc
lret
add
je
xchg
fistl
jbe
movsb
daa
rorl
fistpl
pop
vpcmpeqb
lret
out
adc
cmpsb
xor
popa
ss
mov
aam
add
or
push
in
inc
mov
cmc
sub
cmc
or
sbb
mov
addr16
loop
inc
jp
pop
xor
test
adc
fidivl
cmp
xor
test
push
daa
push
stc
sub
leave
test
fcoml
dec
sbb
aas
xchg
mull
stos
int
stos
sarl
pop
enter
push
jbe
and
push
insb
ret
push
rclb
mov
fnstsw
cmpsl
movsl
lret
cli
and
push
popf
dec
push
cmp
push
mov
adc
iret
out
lret
cltd
pop
adc
cmp
jbe
incl
pop
jecxz
sti
lret
push
and
pop
pop
loope
xchg
lahf
out
push
jmp
inc
je
lret
add
pop
cmpsl
in
sbb
inc
outsl
lock
imul
ret
mov
insl
mov
jmp
and
mov
repz
push
jmp
call
jl
ja
cmp
jb
fs
mov
sbb
add
call
int
adcb
or
inc
fs
push
subl
je
call
lret
pop
cmpsb
movsl
mov
add
and
mov
aad
dec
push
daa
inc
shl
fildl
stc
mov
fsubp
bound
adc
call
daa
jl
or
stc
cli
icebp
mov
sub
pop
es
les
jno
pop
ss
into
cmp
jbe
test
repz
packssdw
mov
lods
pop
popf
in
in
cmp
sbb
mov
mov
ficompl
scas
mov
jne
and
cli
rcr
test
or
jbe
dec
mov
sbb
mov
inc
cmpl
push
cwtl
int3
roll
cli
jb
fildl
xchg
xlat
mov
addr16
mov
aas
jo
scas
inc
pop
outsb
scas
dec
push
rcll
gs
xlat
mov
adc
into
jnp
sub
or
cli
lds
jae
ret
jp
xchg
adc
push
pop
or
sti
and
mov
jbe
incb
xor
mov
sbb
insb
out
insl
scas
ja
int
lret
pop
out
sbb
std
jp
cmpsb
xchg
pop
in
sub
ljmp
loop
jp
dec
jo
xchg
enter
pop
xor
out
test
cld
test
test
xorb
xchg
pop
pop
in
cmc
xorb
lock
pop
cmp
fdivs
cli
mov
and
imul
push
mov
xor
sub
push
repnz
mov
ss
xchg
lahf
mull
repnz
aas
inc
xchg
or
pop
ljmp
or
out
incl
insb
daa
mov
sbb
jae
out
adcl
popf
fistpl
addr16
push
loopne
fldenv
ss
mov
out
pop
dec
rcll
xchg
icebp
out
pop
xchg
dec
fwait
dec
dec
hlt
push
jle
imul
nop
adc
xchg
or
mov
push
add
pop
sbb
add
xchg
call
add
sar
xchg
xchg
xor
pop
pop
fs
pushf
std
xor
mov
lock
mov
push
mov
movsb
cli
push
jb
cmp
insl
jo
inc
jg
outsb
icebp
es
testb
es
lods
ja
mov
add
subl
stc
je
imul
pop
jmp
lcall
pop
inc
lock
or
shll
mov
xor
push
icebp
movsl
aad
fnstcw
cmp
out
nop
inc
inc
sbb
std
push
and
sarb
mov
xor
xlat
lods
push
stos
xlat
pop
jo
adc
imul
dec
repz
pop
fstl
insb
inc
mov
add
sub
insb
mov
xchg
fwait
and
scas
sub
icebp
into
jl
arpl
push
cmpsl
push
fnsave
arpl
push
fcoms
jnp
and
je
inc
mov
mov
jae
and
cmp
cmp
iret
mov
repz
fwait
or
stos
pop
bsf
and
mov
add
jecxz
push
mov
inc
ficoml
rorl
outsb
mov
imul
mov
cmpsb
pop
xchg
push
push
dec
ret
sub
lret
test
mov
sub
add
loopne
sub
gs
push
leave
xchg
or
sbbb
or
cmp
imul
mov
in
or
pop
pop
das
ss
rcrb
rcll
dec
xchg
jg
faddl
or
inc
add
mov
inc
ret
add
test
adc
pop
jecxz
or
in
pop
rcrl
dec
out
mov
pop
int
cmpsb
cltd
adc
repz
lea
sahf
xor
xchg
jae
mov
mov
sahf
cld
cli
and
jmp
es
adc
jl
cmp
lahf
call
imulb
mov
sbb
out
nop
fisubrl
sarb
sub
lods
fisttpll
shlb
nop
clc
cmpsl
nop
shrb
push
frstor
add
dec
nop
cmpsl
sbb
or
insl
cmp
jmp
inc
mov
jl
pop
outsl
pause
or
repz
push
out
ret
jns
sbbb
clc
xor
inc
movsb
mov
lahf
stos
jnp
mulb
shlb
xchg
les
mov
out
mov
jmp
push
fbld
lcall
mov
mov
aaa
xchg
rorl
mov
mov
xchg
push
sti
dec
fs
jnp
pop
sub
stc
and
and
fldcw
mov
fwait
sarb
loope
inc
sbb
cld
cmp
pusha
popa
sub
das
mov
in
fisubl
sbb
sti
nop
out
sahf
xchg
ret
add
pop
sbbl
jne
xor
push
mov
jl
leave
push
loopne
daa
mov
pop
mov
mov
fisttps
xchg
push
sub
xor
aas
call
lret
repz
add
jp
pop
dec
cltd
sub
adc
and
lahf
in
jle
add
dec
fadds
mov
cmc
testl
xchg
push
out
jle
adc
push
inc
push
cmp
lods
pop
subb
arpl
js
dec
arpl
jg
cmp
cmpb
cmp
out
hlt
test
adc
jle
cli
outsb
shr
imul
add
sub
test
sbb
inc
pop
mov
jns
pop
ja
adc
rcrl
adc
into
psraw
and
adc
pop
sbb
jmp
jnp
xor
mov
xchg
icebp
bound
iret
sub
movsb
mov
imul
int3
hlt
push
mov
shr
xchg
jne
pause
xchg
and
bound
dec
pop
dec
fiadds
aaa
ds
add
adc
adc
push
imul
dec
adc
xchg
mov
dec
je
pop
sbb
jns
push
das
shlb
pop
push
mov
shrl
fimull
add
push
mov
ret
xchg
dec
pop
push
xchg
or
sub
add
mov
cs
popa
fucomi
bound
push
mov
in
dec
mov
xchg
lret
jle
or
movsb
stos
add
sti
clc
mov
gs
add
add
xchg
iret
pop
test
cmpsb
cld
fs
stos
jns
xchg
or
push
shrl
cmp
fdivrp
dec
sub
cmp
push
out
stos
push
in
mov
call
aaa
jg
pop
xchg
enter
cli
loopne
inc
add
addr16
dec
mov
rcl
arpl
pop
dec
jmp
xchg
dec
mull
test
or
movb
jae
gs
iret
xor
cmp
inc
imul
add
push
adc
sbb
jnp
lcall
inc
call
cmp
scas
lods
jmp
or
mov
sbb
add
push
cld
dec
ja
push
push
test
adc
std
and
repnz
jg
add
mull
mov
lods
test
push
mov
rep
inc
xor
and
xchg
lcall
cli
push
jb
je
adc
push
jb
pop
adc
fwait
and
in
mov
push
jmp
adc
push
test
push
or
cmp
mov
out
jg
movsb
xchg
xor
xchg
pop
mov
or
push
ds
add
mov
sub
lods
jmp
sarl
lods
pop
inc
ret
pushf
mov
mov
test
hlt
icebp
pop
push
sub
cmp
add
xor
out
jo
out
cmpsl
imul
mov
cwtl
mov
mov
sarl
and
fbld
inc
ljmp
adcb
cmp
dec
inc
mov
les
cltd
jg
adc
or
mov
sub
xor
repnz
ret
push
sbb
xchg
pop
andb
xor
add
xchg
jecxz
xorb
inc
mov
cmp
fmull
add
notl
adc
pop
jg
jl
inc
popa
mov
add
push
inc
popf
jg
negl
in
lcall
sub
in
mov
mov
inc
jb
arpl
ficoms
add
int3
xor
enter
cmp
in
jg
inc
popf
mov
pop
xlat
mov
inc
inc
jp
push
fdivr
out
sub
imul
inc
in
mov
cmp
mov
mov
cmp
xorb
dec
lret
pop
nop
add
adc
dec
jmp
mov
and
aam
clc
shr
or
jle
push
jg
out
inc
rcrb
jae
stos
pop
push
xchg
cvtdq2ps
stos
movl
xchg
dec
jno
push
adc
orl
inc
push
push
xchg
push
shll
call
and
hlt
sarb
fs
aam
push
and
jl
cmp
sub
mov
cmp
dec
test
pusha
not
clc
xchg
jle
push
pop
and
pop
add
inc
mov
ret
mov
xor
loopne
idivb
sub
sub
arpl
icebp
sbb
jecxz
icebp
je
and
mov
fwait
jns
outsl
xchg
sbb
mov
mov
out
dec
adc
imul
testb
lcall
sub
push
movsb
xchg
mov
pop
imul
and
mov
mov
sub
adc
cmp
fstpl
iret
sbb
call
xchg
or
push
aad
frstor
inc
lods
ds
sbb
or
andb
mov
jp
sbb
add
mov
movsl
pusha
cwtl
int3
ds
in
mov
dec
int
mov
int3
cwtl
mov
xchg
xor
outsb
sarb
inc
jns
pop
fs
pop
mov
pop
rolb
inc
daa
js
jp
pop
shl
mov
cmp
enter
lock
cmp
xchg
push
add
out
sbb
into
add
data16
fcomps
add
sti
and
xor
mov
movsl
xor
ret
sub
pop
lcall
stc
leave
adc
xor
leave
and
add
sub
mov
lea
jecxz
sub
loope
mov
arpl
jle
filds
xor
sbb
mov
mov
xlat
or
pop
add
out
scas
push
int
mov
xchg
clc
adcl
and
dec
pop
jmp
xchg
outsb
xor
movsb
aaa
out
and
out
adc
test
lods
lock
mov
mov
sub
test
and
jbe
sub
sbb
adc
ljmp
mov
lods
fadds
js
xor
sub
sub
cmp
hlt
lods
lods
es
js
cwtl
pop
iret
insl
push
movsb
or
idiv
inc
shll
push
dec
mov
cltd
mov
clc
push
mov
pop
xchg
pop
pop
stc
lret
out
cmpsl
test
jae
or
mov
add
and
mov
xor
pop
pushf
cmp
pandn
mov
pop
dec
mov
test
or
je
push
lods
cmpsl
test
add
dec
loopne
test
dec
jecxz
jns
sbb
stos
mov
xchg
adc
push
xchg
mov
cmp
add
inc
inc
rol
inc
pop
inc
pusha
call
mov
push
jmp
imul
add
fnstsw
sub
add
fs
jle
fistl
cwtl
outsl
lods
push
ret
sub
push
mov
fs
mov
pop
shr
push
push
fnstcw
movsl
sahf
sub
cs
ret
adc
cmc
lods
mov
pop
xlat
xor
add
push
fmul
enter
mov
pusha
xlat
insb
sub
lods
test
divl
jo
mov
stos
aam
mov
stos
sub
cs
jmp
mov
jecxz
sarb
mov
dec
push
xchg
es
loopne
lcall
or
lods
jo
pop
jp
sub
imul
testl
in
les
fs
mov
push
stos
in
jno
sbb
and
ljmp
or
lock
sbb
data16
inc
or
mov
add
stos
rcrb
aaa
andb
xor
sbb
xchg
sbb
int
fdiv
xchg
pop
jo
rcrb
out
add
clc
dec
fisubrs
andb
pop
xor
jae
jno
int
stc
mov
not
push
addr16
xlat
sbb
shr
data16
or
ljmp
xchg
push
mov
jge
mov
into
cmp
scas
pop
cmpsb
and
ret
push
xchg
adc
data16
loopne
jbe
dec
fisubrl
mov
dec
xchg
inc
repz
cmp
gs
push
pusha
out
outsb
mov
mov
xchg
mov
imul
aam
out
dec
push
or
std
nop
jp
xchg
mov
jno
mov
daa
dec
decb
adc
test
mov
leave
push
syscall
addr16
push
jo
adc
xor
outsb
pop
dec
cmp
push
sub
sub
sbb
out
mov
std
cli
ficomps
cmp
or
inc
in
cmc
mov
sbb
dec
int
adc
xchg
repnz
push
add
jae
lods
push
sbb
jbe
ficoml
jno
pop
insl
aad
getsec
cmp
fstpt
sarl
sti
out
xor
dec
push
push
ret
add
insb
lahf
pusha
dec
push
xchg
mov
dec
mulb
inc
mov
pushf
pop
test
ror
mov
in
jmp
adc
jle
inc
push
mov
pop
dec
pop
inc
xlat
arpl
aam
pop
adc
insb
jb
mov
xlat
xchg
insb
lock
or
shll
push
xor
test
cli
daa
js
shlb
je
xor
mov
mov
fisttps
add
imulb
popa
cmp
add
sbb
xchg
add
repnz
inc
xchg
data16
mov
xchg
call
inc
mov
jae
xchg
movsb
and
test
mov
out
in
inc
jno
sbb
ja
sbb
jecxz
adc
mov
les
mov
into
cmp
inc
xchg
and
shl
aam
repnz
pop
jne
mov
xchg
jnp
xchg
sub
inc
pop
jg
pop
push
xor
aad
inc
xor
inc
lods
lcall
cmpps
inc
jnp
icebp
mov
fdivr
movsb
arpl
jge
inc
ljmp
lcall
and
testb
push
mov
or
inc
mov
sar
push
dec
leave
sbb
mov
dec
iret
lods
stc
jmp
mov
cld
or
push
enter
or
add
icebp
push
add
mov
sub
lahf
aam
pop
mov
stos
fwait
mov
iret
or
xor
xor
cmpsb
xchg
loopne
xchg
fcmovb
jne
mov
push
call
or
mov
in
mov
test
jns
add
mov
dec
data16
push
add
aad
fidivrs
cmc
jp
mov
fmuls
jo
inc
loop
jl
cmp
lahf
dec
fldcw
movsb
cwtl
jnp
ret
shlb
and
in
add
pushf
add
sbb
or
jae
xchg
insl
pop
cltd
push
mov
ret
insl
jmp
xchg
push
or
jle
mov
lahf
ret
xchg
mov
xor
jne
xchg
rcr
add
stos
sub
call
sti
stc
les
push
and
out
ret
test
lea
mov
inc
dec
ret
loope
lods
in
std
and
cltd
stos
dec
jne
mov
pop
rolb
hlt
and
lret
sbb
push
lret
push
out
int3
push
fldt
jp
jmp
xorl
push
inc
cltd
mov
sub
inc
popf
xlat
leave
xor
loop
and
dec
gs
mov
xchg
inc
out
mov
repnz
add
ror
add
sbb
dec
pop
fwait
mov
out
and
sarb
pop
outsb
and
or
out
sahf
dec
pop
arpl
cli
xlat
enter
push
cmp
xchg
pop
xor
xor
iret
sbb
xchg
fldl
push
outsl
mov
inc
push
mov
and
xchg
jecxz
shlb
mov
push
jmp
dec
and
in
sub
lds
fdivrl
mov
js
call
lock
mov
imul
push
or
push
mov
sub
inc
stos
xor
imul
out
mov
mov
add
xchg
push
inc
pop
das
jns
dec
dec
je
in
jbe
jns
fdivs
scas
or
aaa
or
xor
jbe
imul
fsts
test
imul
aad
push
cmp
push
jo
inc
cmp
mov
scas
test
or
orw
scas
out
sbb
sar
mov
fsts
enter
pand
jmp
jge
popf
in
ficoms
subl
and
les
lahf
loope
in
inc
and
xlat
test
ljmp
xchg
es
repnz
repz
jecxz
pop
xchg
add
rorl
mov
fucom
cmp
jns
js
dec
mov
addr16
data16
jo
cmp
aad
stos
sub
imull
or
pop
stc
add
dec
idivl
in
xchg
pop
adc
xchg
jle
xchg
test
xor
push
mov
adc
jp
orl
imul
mov
or
mov
or
lods
bound
adc
add
cld
pop
in
jne
gs
sbb
nop
xchg
push
push
popf
les
jle
push
or
hlt
shll
mov
scas
shll
call
xor
insl
int
and
push
shrl
popa
sbb
and
popf
addr16
enter
cmp
dec
aas
mov
jmp
std
or
mov
faddl
cmc
out
or
call
nop
xor
xor
cmp
cmp
loop
popf
mov
push
xor
push
je
jle
es
or
in
sarw
sub
and
scas
or
hlt
in
leave
call
dec
iret
sahf
jg
jp
imul
xor
push
mov
pop
sub
std
adcb
xchg
pop
jns
movsb
loopne
fidivl
into
jmp
mov
mov
popa
jns
add
imul
fstpt
scas
mul
cmp
push
int3
or
rol
or
mov
pop
push
mov
jge
lds
dec
xlat
repz
outsb
xchg
mov
fidivs
adc
mov
clc
shrb
xor
adc
mov
xchg
fsubrs
lds
in
ret
insb
xchg
fists
nop
jg
inc
sub
mov
xor
xor
xchg
stos
stc
mov
iret
mov
rcr
and
xor
cli
nop
and
xchg
push
das
mov
in
js
fsubrs
andb
leave
insb
xor
mov
xor
inc
jae
js
jno
add
and
inc
roll
push
sti
ss
cmp
ret
jl
shll
nop
hlt
arpl
sbb
in
mov
push
in
jmp
lcall
mov
sub
mov
adc
iret
shrl
gs
and
push
and
xor
lret
fists
sti
jmp
lcall
mov
add
jb
mov
loope
shrb
pop
push
mov
out
pop
mov
in
nop
scas
flds
dec
loopne
sub
push
mov
pop
shll
movsb
xchg
cmp
iret
data16
jbe
jp
out
aaa
inc
test
jl
test
fsubrl
mov
fstl
and
jbe
push
lret
or
push
stos
or
push
push
pop
aad
adc
fmull
sti
lods
out
addr16
adc
out
xor
aad
or
hlt
fsubs
xor
jle
lods
push
push
inc
rcr
mov
cli
cmp
iret
and
jmp
lcall
or
cmpl
xor
push
out
imul
adc
jle
xchg
lahf
sbbb
sub
ljmpw
xor
pop
inc
cli
loope
mov
clc
inc
test
cs
loope
lret
mov
imul
cmp
outsb
sti
aam
jns
lretw
pop
gs
push
lea
add
sbbb
xor
ljmp
cmpsl
xchg
dec
mov
repnz
or
xor
es
addb
jmp
sbbb
enter
ret
jnp
aas
lret
pop
or
cli
punpckhdq
and
fbstp
cmp
add
sti
loopne
jle
inc
sub
xor
jg
test
sub
loopne
push
mov
enter
in
mov
dec
fcoms
pop
mov
ret
ja
pop
adc
jno
sbb
dec
inc
stc
mov
push
xor
or
pop
sub
pop
xchg
push
data16
pop
imul
cmp
pop
decl
outsb
insb
insb
xor
or
pop
out
addr16
in
mov
jmp
leave
inc
xchg
fmull
lods
jns
pushf
cwtl
andl
lret
pop
neg
jb
out
and
sbb
cwtl
dec
xchg
add
jg
add
pop
movsb
cmp
mov
pop
test
lret
call
aas
fnstsw
enter
sbbb
jns
and
add
ljmp
pop
ljmp
fnstenv
or
push
iret
cmp
push
inc
cmp
sub
inc
lock
pop
sub
sar
add
cs
shl
les
cmpsl
cmp
mulb
jmp
imul
inc
fabs
inc
push
dec
and
adc
jae
add
inc
and
popa
stc
push
insb
sbb
rorl
lret
mov
movsb
nop
mov
daa
adc
lock
les
int
aam
pop
mov
fsubrs
in
loop
mov
hlt
sbbl
aad
push
inc
jnp
and
xor
and
sti
dec
jmp
push
movsl
ret
dec
inc
jno
cmp
or
cmc
cmp
dec
rolb
add
cltd
stc
je
cmc
lahf
and
sub
mul
sbb
mov
cmpsb
add
ret
push
js
cmp
fcomps
sti
leave
dec
mov
test
cli
xorb
pop
ret
into
lock
mov
pop
stos
xchg
push
fwait
daa
mov
mov
mov
xor
jae
and
pusha
push
repz
and
ss
lret
xchg
imul
jl
lods
rol
lea
cmp
jo
aas
aas
adc
test
leave
cmp
test
cmpsl
cmp
sub
clc
add
push
mov
push
adc
mov
iret
fucompp
daa
sub
mov
pop
fnsave
or
stos
popf
dec
repnz
fidivl
mov
hlt
cmp
xchg
lods
test
subl
jbe
xchg
testb
pop
jns
fsubp
lock
and
sbb
pusha
xchg
fwait
addr16
mov
outsb
iret
xchg
inc
pop
jmp
mov
sbb
inc
xor
dec
xlat
fistpll
pushf
jecxz
jp
jl
mov
je
mov
mov
mov
xchg
fcomi
adc
cmp
lcall
jp
mov
push
mov
out
mov
outsl
aaa
lods
aas
add
popf
jle
bound
cs
pop
jp
popf
arpl
cmp
pushf
mov
int
push
adc
lea
jbe
nop
sbb
push
imul
cltd
xchg
nop
pop
cmp
ret
push
push
mov
movsb
add
out
stc
push
fmuls
fldl
and
jmp
sbb
jb
stos
jmp
orb
fidivrl
imul
pop
rcrl
out
push
cmpsl
int
loop
xor
and
fwait
adc
jns
adc
popa
std
cmp
cmp
or
scas
cmp
dec
pop
xchg
lods
setbe
pop
aaa
fwait
add
cwtl
int3
add
pop
or
inc
lds
mov
mov
addr16
movsb
xchg
rcl
xchg
loop
mov
add
call
lea
cmp
jp
inc
enter
lock
testb
jo
mov
inc
sbb
push
js
mov
pop
add
rcl
dec
hlt
pop
loop
pop
mov
les
lahf
or
push
andb
xor
leave
push
icebp
inc
test
ret
xor
add
push
dec
ret
fdivrl
scas
push
gs
sbb
out
jo
sahf
rol
sub
clc
cmp
adc
das
in
push
jo
jne
andl
or
add
lods
sbb
ljmp
or
dec
mov
cmp
fbld
ret
cs
lret
test
ficompl
testb
mov
out
cli
fucomip
sti
cmp
xchg
xchg
push
orl
das
or
push
loope
sbb
popa
jg
outsb
mov
mov
imul
imul
fwait
mov
repz
mov
xor
int
mov
and
out
adc
fldt
fldcw
test
aad
sbb
dec
sbb
mov
sbb
daa
aam
in
pushf
cli
inc
fisubrl
jnp
clc
bnd
mov
shll
add
scas
vphsubwd
ja
enter
repnz
push
dec
push
jns
cmp
sub
movb
sub
xchg
in
shlb
or
imul
out
mov
cmpsb
imul
adc
stc
fistpll
cmp
shlb
ja
sbb
sub
adc
mov
push
in
in
insb
push
decl
push
cmp
call
cmpsb
push
pushf
popf
shl
hlt
inc
incl
cmpsl
cmp
call
jo
jb
mov
xchg
push
xchg
aam
in
cmp
pop
roll
adc
orl
xchg
and
sub
push
leave
xchg
xchg
das
cmp
pop
fs
cwtl
pop
inc
sbb
sub
jge
xor
mov
loopne
cwtl
push
push
xchg
out
xchg
pop
cwtl
inc
xchg
fxch
xchg
push
test
lock
cmp
out
mov
adc
jnp
inc
mov
lods
sub
daa
repz
pop
push
push
adc
mov
leave
xchg
cmp
adc
pop
aaa
adc
imull
ret
repz
lahf
dec
adc
mov
and
fwait
push
jnp
incl
aaa
call
ficoml
dec
sti
test
cmp
or
repnz
fsubrl
mov
cmp
mov
sub
push
repnz
imul
mov
pop
shr
adcl
aam
xchg
pop
jns
add
in
xchg
subl
bound
xor
insl
fsubr
mov
mov
xchg
push
shlb
inc
ds
lds
jne
mov
bnd
and
add
cmpsb
ret
cmp
sbb
adc
jecxz
sbbb
xchg
pop
cwtl
xchg
mov
je
mov
pop
and
push
dec
add
imul
insb
and
scas
mov
inc
jb
fwait
add
mov
cwtl
je
movb
lret
and
jmp
fistpll
filds
incb
cs
jae
cmpsb
mov
je
out
lods
or
loopne
mov
mulb
xchg
pop
jo
js
or
xchg
mov
pop
pop
mov
lcall
add
or
add
adc
js
lods
and
and
mov
js
jecxz
mov
mov
inc
daa
imul
mov
sub
es
push
xchg
mov
dec
or
call
mov
mov
out
movsl
test
andl
in
cmpsb
mov
lret
int
pop
inc
fs
int
inc
mov
shr
pop
mov
insb
aad
xchg
and
cmp
into
outsb
outsl
cltd
jbe
popa
cmp
sbb
out
nop
and
or
mov
xchg
push
sbb
push
mov
cmp
lret
lret
test
jmp
imul
aaa
sbb
arpl
das
push
xor
mov
rcll
mov
test
add
mov
jae
cmp
add
xchg
notl
loopne
hlt
mov
into
daa
mov
dec
mov
shll
dec
sarb
pop
fs
mov
lret
cwtl
adc
adc
pop
mov
push
in
into
sbb
hlt
cmp
push
jmp
in
iret
aaa
outsb
aaa
dec
pop
xorb
pusha
sub
mov
dec
pop
sbb
out
aas
in
inc
lahf
ljmp
mov
sub
jb
pop
sbb
cli
mov
data16
outsl
enter
cmpsb
lret
scas
hlt
xor
dec
imul
int3
ret
jmp
xor
push
scas
popa
fucomi
dec
aaa
push
data16
push
jmp
pushf
xor
repnz
clc
sub
aad
cmp
mov
scas
cs
nop
rcrl
pop
in
adc
xchg
jl
cmp
fstpt
cld
aas
push
sub
daa
mov
std
xlat
jle
mov
pop
or
lock
cmp
push
push
pop
cmp
xchg
sbb
mov
mov
or
pop
dec
xor
cmp
negl
ljmp
or
fistl
fistpl
rcll
add
xlat
adc
adc
pop
ret
xchg
pop
mov
dec
sbb
mov
mov
int3
mov
test
test
mov
jbe
pushf
sub
sbb
mov
ret
inc
mov
pop
jmp
add
lret
je
mov
leave
mov
aaa
add
adc
test
or
add
pop
xchg
rcr
xchg
sbb
mov
jno
icebp
iret
insb
ficompl
push
pop
fdivl
jae
stc
jge
fs
and
cmp
in
arpl
out
sub
dec
and
fimull
loopne
es
and
pop
insb
in
cs
push
mov
arpl
fisubs
mov
pushl
jecxz
inc
mov
mov
int
jbe
roll
sbb
inc
rcrl
lret
mov
push
jne
push
and
xor
pop
imul
xor
loop
mov
cmpsl
int
inc
fstpt
sbb
lock
jae
pop
xor
xor
mov
rol
lea
mov
xor
dec
mov
pop
fs
stos
bound
outsl
and
imul
adc
lcall
inc
pop
out
inc
jmp
shlb
xchg
stc
out
push
xchg
jmp
in
cmc
mov
scas
cmp
bound
sub
or
nop
fidivrl
and
adc
xor
ja
ds
fs
and
jecxz
fwait
lret
push
call
jmp
rcl
int
shll
inc
jg
or
mov
idiv
sub
adc
int
pop
out
insb
cwtl
testl
stos
and
sub
pop
lcall
mov
fwait
sub
lret
push
add
add
mov
push
pop
cmc
nop
xchg
mov
in
lods
movsl
jp
xor
mov
inc
les
xlat
loop
cld
js
adc
push
adc
std
adc
fdivp
inc
scas
test
repz
and
inc
aas
sbb
inc
lahf
sti
mov
cltd
jns
orl
rorl
jno
push
sbb
pop
fldcw
call
inc
inc
mov
jecxz
sub
outsl
adc
jle
imull
jbe
insb
arpl
in
dec
subl
test
jg
mov
fwait
or
flds
bound
adc
mov
ss
movsl
xor
repnz
popa
push
test
pop
out
in
js
xor
xor
inc
push
lahf
jno
subb
mov
jae
mov
xchg
sub
inc
and
or
dec
inc
lret
cmp
cwtl
mov
shrb
enter
mov
insl
adc
inc
jae
lahf
mov
shr
xor
adc
cmp
pushf
lods
inc
cld
sbb
mov
or
adc
xor
and
fs
jbe
ds
mov
mov
cmp
sarb
push
dec
hlt
adc
lea
push
xor
lods
movl
int
outsl
aad
inc
push
xor
cmp
int3
das
mov
xchg
das
and
into
xchg
repz
imull
and
stos
inc
cmp
add
xchg
scas
xlat
or
shrl
out
mov
push
aas
jp
cmp
xor
aad
xchg
dec
lahf
test
pop
or
scas
sub
xor
std
aad
push
pop
int
adc
ror
push
cmp
scas
xchg
into
pop
add
or
leave
fistpl
or
cli
pusha
jns
movsl
xor
pop
popf
pop
add
add
imul
fwait
lret
jle
mov
jle
sub
ljmp
push
out
loope
lret
mov
iret
mov
rcrl
fs
cmp
sbb
xor
and
daa
insl
fisubrs
adc
icebp
mov
mov
movsb
push
movsl
popa
fwait
cmp
xor
leave
insl
cltd
pop
out
and
scas
cmpsb
jb
imul
jp
pop
add
mov
mov
pop
sarl
cltd
jbe
into
add
cmp
sbb
stc
or
dec
pop
xlat
cmp
jmp
pop
test
xlat
jmp
subb
lds
fldl
out
lahf
outsl
mov
subl
add
jle
cs
cmc
sub
inc
pop
dec
add
jg
notl
ret
inc
dec
jmp
dec
ljmp
xchg
jl
aas
mov
fbstp
in
out
out
xchg
cmpsl
subl
jnp
mov
ror
push
jle
stos
xchg
cmp
add
lods
push
aas
dec
into
icebp
and
incb
adc
add
popa
int3
jo
mov
xchg
sub
cli
das
insl
push
fsubs
mov
xlat
jl
int3
imul
mov
pushf
ret
int
iret
out
pop
rolb
sarl
daa
shrb
xor
imul
mov
mov
ret
stos
out
inc
adc
lods
add
mov
popl
les
into
mov
jge
add
push
daa
mov
mov
in
test
pop
shl
push
mov
daa
cmp
cmp
or
adc
mov
xor
fnstcw
inc
pop
daa
mov
cmp
mov
out
inc
adc
leave
xchg
add
mov
shll
inc
mov
xor
add
push
xchg
mov
push
lods
cli
push
xchg
fisubrl
mov
ds
mov
lods
xlat
jnp
arpl
lret
mov
xor
jmp
test
or
cltd
sbb
sub
sub
inc
xchg
movb
in
out
inc
lock
xchg
pop
and
lds
jo
xor
pop
push
adc
call
xor
outsl
call
cmp
pop
inc
mov
sub
pop
sub
mov
and
out
lcall
sub
aas
negl
enter
jns
int
js
repnz
inc
jl
jecxz
test
into
fcompl
push
pop
mov
sub
test
retw
repz
xor
repnz
xor
jo
neg
mov
fs
adc
mov
and
stos
push
dec
es
in
jp
xor
xor
xchg
ja
push
iret
add
rorl
mov
call
add
or
arpl
int
hlt
sbb
pusha
rcll
mov
mov
repnz
in
add
aas
mov
and
push
or
xor
daa
pushf
popa
hlt
adc
out
sub
add
push
inc
xchg
pop
inc
icebp
outsb
dec
mov
sub
dec
xor
mov
jge
cmpsl
mov
pushf
lahf
fs
and
push
mov
enter
pushl
xchg
adc
insl
stc
adc
push
mov
aad
inc
shrb
dec
addb
stos
pop
cmp
int
enter
push
mov
jne
mov
fs
lock
fisubrl
add
fnstenv
mov
push
jbe
pxor
push
add
xor
jno
pushf
loope
loopne
fdivs
xor
enter
fs
call
out
addr16
inc
fstp
imul
and
sarb
cwtl
stos
sti
jp
mov
adc
pop
test
jmp
lret
fldenv
stc
xchg
pop
jl
and
roll
stos
sub
cld
mov
push
jbe
mov
ret
adc
stos
mov
add
fcomip
adc
testl
sub
mov
sarb
inc
mov
lock
cmp
adc
popa
lcall
pop
sbb
sti
mov
inc
leave
pop
mov
mov
outsb
pop
mov
insb
mov
or
mov
negb
sahf
in
dec
xchg
jp
lods
pop
and
sbb
push
mov
mov
movsb
test
outsb
mov
jne
rorb
mov
sarb
call
xchg
xchg
push
gs
adc
int
jae
fwait
xchg
or
mov
mov
push
add
xorl
sub
std
loopne
dec
mov
insb
sub
bound
iret
xchg
int3
mov
pop
push
jne
push
lock
mov
int
xchg
mov
jp
jmp
xchg
push
pop
sbb
ret
pop
shlb
ret
mov
loop
bound
pop
or
push
mov
test
pop
aad
adc
leave
stos
and
sub
das
inc
sub
gs
imul
outsb
or
jb
shl
inc
xchg
fwait
rcrb
arpl
sbb
adc
in
sub
pop
inc
jl
mov
shl
push
mov
jle
inc
les
and
inc
imul
and
mov
cmp
adc
push
popa
nop
or
add
add
pop
jp
sbb
jns
or
mov
lret
mov
sti
mov
sub
pop
sbb
int
movsl
xchg
or
xor
pop
and
push
ljmp
jge
cmp
les
ret
xor
jns
dec
and
repnz
sub
push
call
pop
shrb
jle
enter
mov
sub
stos
push
in
adc
add
push
loope
enter
fisubs
xlat
and
ret
pop
pop
call
jb
inc
sbb
inc
mov
push
shr
out
pusha
inc
mov
into
in
mov
test
sbbl
enter
pop
sbb
mov
stc
add
inc
xor
lahf
lock
rcll
dec
mov
and
lcall
or
shll
das
xor
xlat
push
stos
clc
pop
adc
cwtl
movsb
rorl
mov
lock
pop
xchg
nop
dec
mov
mov
pop
icebp
push
mov
cmp
dec
outsl
mul
dec
outsl
dec
aaa
in
xor
dec
out
leave
das
pop
enter
dec
inc
mov
rorl
js
mov
mov
xchg
out
jl
fiadds
cwtl
mov
sbb
pop
fwait
sub
mov
add
out
shrb
into
lods
in
cld
out
xchg
psubusw
mov
dec
pop
xchg
xchg
add
jb
out
out
jb
dec
inc
lcall
adc
mov
add
jae
add
mov
mov
test
lahf
int3
test
sub
xchg
pop
dec
jge
rorb
add
outsb
mov
test
lds
sbb
fstps
pusha
sbb
repz
pop
mov
test
pop
mov
aam
xchg
arpl
sbb
lods
addr16
adc
out
rol
rorb
icebp
ss
adc
add
popa
adc
scas
dec
jne
mov
test
mov
jno
lahf
push
in
cltd
cmp
lea
hlt
mov
pop
fildl
push
ret
inc
testl
testb
jecxz
push
mov
out
xlat
clc
sbb
sub
or
mov
out
jmp
loopne
jbe
pushf
test
rcll
ljmp
insb
mov
call
mov
clc
add
mov
xlat
dec
cmp
in
pop
shll
decb
xchg
cmpsb
stc
outsb
arpl
push
dec
rcll
ds
scas
addb
mov
dec
sbb
push
and
sbb
xchg
jl
adcl
cmpsb
in
mov
lock
add
lds
sbb
test
or
adc
add
adc
mov
jle
scas
pop
mov
cmp
fimull
shl
insl
hlt
int
and
sbb
stos
idivl
xor
jne
in
jecxz
es
mov
sbb
ljmp
sbb
loop
mov
push
fwait
cwtl
test
mov
sub
icebp
test
sbbb
rorl
ficompl
ljmp
in
or
inc
and
test
sbb
mov
adc
loope
jne
stos
fwait
divl
lahf
aas
out
mov
push
pop
repz
mov
push
mov
pop
testb
lea
loopne
or
scas
lds
insb
mov
push
sbb
sbb
adc
cmp
mov
xchg
mov
stos
sbb
mov
pop
mov
adc
jno
sub
add
divl
sbb
in
lret
lea
push
mov
or
lret
arpl
dec
test
cmp
or
push
sarl
inc
xor
sbb
mov
daa
out
push
jl
sub
lea
adc
inc
sti
mov
outsl
shl
or
or
or
enter
dec
xor
push
inc
sub
cmp
mov
in
call
mov
xchg
repnz
clc
fdivl
lods
sbb
aad
cmpsb
ja
hlt
sub
mov
loopne
aad
inc
popa
jmp
add
mov
pop
mov
ss
mov
fldt
shlb
adc
test
mov
sub
das
fdivrl
dec
jbe
sub
xchg
jo
xor
sbbl
iret
shrb
es
out
pop
jns
lahf
xorl
mov
insb
sub
jno
in
adc
fcompl
add
jge
sub
jl
adc
jp
das
and
cmp
or
pusha
adc
adcb
mov
aam
add
dec
sub
call
dec
adc
xchg
pop
std
sarb
mov
es
mov
pop
scas
ror
dec
mov
rorb
mov
lea
xchg
jmp
pop
xor
jbe
imul
or
cmpsb
fildll
or
mov
inc
faddl
mov
sub
push
pop
sub
sbb
into
hlt
xlat
int
dec
jmp
inc
push
int3
dec
inc
mov
mov
push
pop
mov
sub
insl
aaa
lahf
inc
cmc
and
andb
addb
test
add
call
mov
inc
cli
imul
in
push
sbbl
lock
jg
cmpsl
insl
sub
dec
xor
push
jge
shll
ud0
in
add
jg
test
imul
test
insb
jns
std
xchg
sub
push
cmc
rorl
pusha
scas
push
adc
nop
dec
dec
sub
scas
dec
outsl
and
jg
mov
mov
es
das
rcrl
das
mov
adc
dec
gs
dec
xor
stc
mov
cmp
jp
push
ja
fisubrl
sub
mov
lahf
addr16
stc
shrb
stos
mov
and
sub
or
lcall
xor
stos
xchg
int3
movsb
movsb
push
int3
lret
fisttpll
orb
scas
and
es
daa
lcall
mov
jmp
subb
fld
add
push
mov
add
pop
jecxz
subb
dec
jne
out
arpl
mov
ljmp
or
ds
sbb
flds
shufps
xlat
mov
inc
frstor
adc
jecxz
aad
int3
test
add
jns
fwait
loopne
pop
mov
add
pop
pop
cmp
fwait
jb
jg
jp
sbb
add
insb
je
jmp
push
pop
jb
rorb
xchg
lea
pop
add
inc
addr16
or
cmp
pop
fldl2t
sub
mov
pop
mov
adc
lret
sub
add
xchg
inc
inc
sbb
jb
push
or
dec
inc
cmp
es
mov
std
aas
jmp
push
mov
inc
mov
mov
cmp
mov
lock
mov
data16
jbe
mov
loop
pop
cmpsl
jae
shrl
pusha
orl
xchg
mov
xchg
loop
mov
push
mov
lods
xlat
cwtl
mov
or
loop
sub
nop
pushf
inc
push
mov
dec
iret
and
aaa
inc
scas
push
aad
mov
inc
aad
movsb
es
mov
mov
mov
xor
sub
cmp
adc
add
fiaddl
xor
xlat
lods
cwtl
mov
stos
movsb
lret
and
mov
fisubrl
adc
aad
and
les
sbb
sarb
cs
in
nop
hlt
insl
add
mov
jae
ds
adc
xchg
aad
pop
cmp
add
test
incl
jbe
push
sub
sub
leave
cmp
pushf
arpl
push
push
cwtl
inc
scas
mov
shrl
es
lods
je
mov
and
sub
pop
frstor
inc
icebp
dec
lods
ja
add
mov
lret
lock
adc
aam
je
ljmp
cmp
mov
mov
aam
sub
mov
dec
rorb
aaa
outsb
xlat
arpl
jae
push
push
jmp
out
int3
xchg
adc
xchg
dec
pop
or
dec
jge
add
adc
or
pop
cwtl
lods
cmc
test
int
or
out
movsl
xchg
sti
xchg
fcmove
lock
add
or
movsl
dec
ljmp
inc
adc
int3
xchg
ficomps
xor
mov
add
pop
jg
cmp
sahf
aad
fs
mov
push
jecxz
sbb
dec
push
fsub
dec
fnstcw
jns
cmp
adc
fmulp
jl
shrb
add
lea
sub
mov
and
cmc
cwtl
mov
jae
mov
lahf
fnstenv
lcall
jo
loope
xchg
bound
mov
nop
mov
movsb
mov
test
stc
or
lret
popf
aam
cwtd
repz
fadd
or
sub
xchg
ret
sub
and
lret
lcall
sahf
jne
push
lods
xchg
mov
xchg
dec
sub
outsb
dec
cmc
jnp
cmp
mov
sti
aaa
js
xchg
jle
xchg
cmp
sub
push
or
xor
push
ret
sub
shl
push
test
jge
cmp
inc
mov
mov
ror
or
xchg
movsb
subl
scas
inc
xchg
mov
dec
cmp
fs
subb
pop
dec
js
dec
xchg
mov
cmp
adc
xchg
aam
or
mov
mov
fdivl
loope
mov
aam
loop
dec
pop
and
bound
add
mov
add
lods
or
outsb
mov
inc
sbbb
js
fisubl
in
fucomip
push
push
testb
dec
xchg
cmp
jbe
adc
ja
ljmp
cmp
dec
inc
out
popa
jle
jns
jg
movsb
in
into
lcall
push
mov
bound
mov
jecxz
ds
sub
sbb
inc
pop
jmp
in
mov
insb
mov
insl
test
movsb
loope
lds
imull
mov
jmp
lcall
jmp
lods
mov
leave
in
mov
hlt
fcompl
lcall
enter
add
mov
outsl
loop
cli
pop
shlb
lret
cwtl
in
lea
sbb
cmpsl
dec
jns
mov
out
pushf
scas
add
mov
inc
xlat
aas
scas
pop
repnz
cmp
pop
jmp
addr16
sub
js
cmp
adc
aad
sti
cltd
je
xlat
jl
jl
and
sbb
jg
mov
lods
inc
pop
aam
sbb
data16
ja
push
mov
or
push
cmc
inc
into
xor
pop
stos
cli
cmpsb
jnp
jge
jecxz
xor
xchg
add
xchg
xlat
xchg
inc
push
icebp
dec
cld
not
sub
lcall
in
clc
pop
sbb
pusha
pop
push
fisttpll
mov
iret
sbb
cmp
fdivrl
cmp
add
outsl
sbb
mov
add
pop
xlat
mov
sbb
scas
xchg
movsl
inc
mov
clc
dec
shl
push
pop
xchg
add
fcomp
mov
pushf
pop
push
inc
push
cmp
sbb
cmp
cmpsb
and
xorb
mov
call
xchg
adc
cwtl
dec
cmc
mov
mov
push
jmp
mov
mov
aad
hlt
jae
mov
std
and
mov
je
shl
and
int3
sbb
lds
lods
mov
divb
cmp
into
in
sub
stc
sbb
mov
jo
lret
mov
add
mov
jbe
movb
sub
and
lret
push
xchg
stc
pushf
cmp
dec
inc
and
sbb
pop
pusha
mov
pop
adc
jge
pop
ret
jle
in
lret
mov
pop
rcll
enter
popa
jge
mov
outsl
popf
cmp
jbe
xor
ss
add
or
clc
xor
aad
jmp
ret
pop
sbb
jle
out
lret
in
pop
lock
adc
and
nop
xchg
outsb
shrl
call
sar
fs
push
dec
arpl
mov
and
clc
lods
shll
sub
adc
lds
in
pop
mov
push
push
fstps
sbb
sub
stos
pop
sarb
jp
inc
mov
aaa
out
movsl
repnz
and
dec
dec
test
inc
mov
mov
ret
ja
cmp
cltd
or
push
mov
mov
test
call
xlat
insl
aaa
ret
adc
cwtl
jecxz
sbb
imul
lods
add
ja
add
and
mov
and
sbb
jbe
inc
outsl
and
test
gs
mov
sub
or
pop
test
je
std
jp
mov
cmp
test
pop
pop
xchg
fsts
jmp
xchg
sub
xchg
test
push
xchg
movl
pop
movsb
out
xchg
mov
inc
pop
xor
mov
lcall
mov
icebp
repnz
gs
cmc
mov
add
push
and
add
in
mov
xor
rcl
push
pop
mov
jno
or
and
push
jns
push
popf
pop
mov
fdivl
dec
stc
cmp
mov
inc
popa
test
pop
std
aad
pop
and
or
sti
fwait
mov
mov
in
loop
mov
test
adc
adc
jmp
pop
outsl
movsb
scas
fstps
sbb
iret
push
mov
test
sahf
mov
push
or
scas
in
sub
lea
mov
out
mov
jae
lds
jb
add
aad
insb
sub
outsb
aas
ret
outsb
popf
pop
in
inc
lea
das
bound
ljmp
lret
jbe
inc
push
fcmovne
sub
dec
outsb
fs
or
or
xchg
std
movsl
jl
in
leave
into
push
dec
movsb
sti
fistl
xor
adc
push
sub
sbb
push
inc
sahf
jb
mov
or
shll
xor
xor
or
jmp
orb
cmpl
out
xchg
ficoms
arpl
leave
les
jne
gs
fucomp
xchg
cmp
jecxz
in
sub
add
pop
xchg
and
out
jecxz
idivb
push
jo
dec
int
loope
les
push
stc
mov
adc
or
lahf
aam
sub
shl
inc
adc
mov
and
iret
nop
pop
jo
xchg
testw
stos
push
mulb
mov
clc
mov
test
push
xchg
cld
data16
lods
lcall
or
sarl
out
mov
or
pop
sbb
je
icebp
insl
jo
push
mov
cli
xchg
sub
mov
mov
fldenv
test
test
pop
test
ds
aam
mov
or
cmpsl
sti
test
adc
popf
mov
cmp
fldenv
push
or
jno
sbb
and
clc
adc
imul
cld
and
mov
pop
sbb
mov
mov
pushf
mov
aas
inc
fidivrs
sub
xor
dec
inc
adc
lcall
cmp
sub
xchg
rcrl
jo
inc
popa
loop
pop
xchg
push
inc
mov
xor
xor
nop
dec
or
outsl
loopne
xor
ljmp
inc
mov
add
fwait
xchg
shlb
jne
cltd
and
xchg
mov
adc
hlt
jb
mov
dec
pop
pop
dec
leave
lods
leave
xor
roll
mov
pop
nop
sti
imul
lock
dec
mov
pop
inc
rcl
jmp
mov
aaa
mov
mov
popa
scas
sub
loop
inc
xor
cmpsb
mov
andl
and
xor
loopne
cltd
aad
stos
ficoms
cwtl
xor
or
push
sarb
gs
out
sbb
addr16
fldt
dec
sbb
push
add
fidivrl
pop
cmp
insb
outsl
cwtl
sub
sub
add
jb
cmp
jle
push
movsl
mov
enter
leave
fst
sbb
pushf
les
in
cmp
fisttps
popa
ljmp
mov
data16
xchg
cmp
mov
pop
js
cmp
in
stos
xor
xchg
lods
cld
jp
xchg
xor
xor
mov
sarl
pop
and
and
pushf
jne
push
sbbb
lret
shr
mov
int
repz
enter
sbb
mov
and
and
push
or
fildll
mov
scas
test
and
xchg
push
aam
popa
cmp
shlb
daa
outsb
fisttps
push
mov
dec
xor
call
xchg
dec
cltd
fstp
push
sbb
clc
ds
lds
mov
clc
out
xor
mov
adc
inc
mov
jne
inc
cmpsl
dec
sbbl
mov
nop
xchg
ficomps
daa
pop
movsl
repnz
mov
test
mov
cmp
outsl
out
sbb
fwait
dec
sbb
shll
dec
mov
pop
sub
adc
out
loopne
sbb
mov
sub
mov
push
les
sub
enter
inc
jg
adc
dec
shrl
mov
pop
in
jo
in
jae
insb
je
jle
lahf
jnp
fnstsw
repz
or
fildl
xor
fildll
mov
lret
mov
xor
mov
jp
stos
inc
rclb
ret
push
js
jmp
inc
or
cmp
test
add
cmpsl
pop
jbe
push
sub
mov
scas
cmc
lret
mov
jo
out
sub
jnp
outsb
and
dec
sub
push
mov
or
mov
xchg
sub
mov
les
jmp
fdivl
aam
repz
sub
push
clc
sbb
jne
mov
pusha
loopne
sbb
or
or
mov
mov
pop
repnz
dec
jecxz
icebp
cmp
mov
pop
push
mov
sti
push
and
or
loope
xchg
lods
add
jg
push
push
shrb
icebp
lret
jo
mov
cmp
inc
mov
xchg
jl
push
test
adc
mov
xchg
mov
push
repz
in
xchg
mov
mov
jbe
push
mov
cmp
pop
in
out
adc
push
xor
aaa
lds
popf
push
pop
stos
pop
test
sub
cmc
adc
fistps
and
xchg
popf
xor
push
jo
mov
pop
ljmp
mov
js
mov
lds
jne
int3
adc
std
scas
xchg
push
fldenv
pushf
imul
xor
inc
mov
lret
dec
scas
xor
lock
mov
aad
out
pushl
dec
add
loope
mov
sbb
leave
jns
jno
jmp
xor
add
xchg
mov
inc
adc
js
ret
xchg
or
iret
aas
mov
fsubrl
push
pop
push
scas
arpl
fsubrs
sbb
push
fsubrl
pop
xchg
popf
mov
adc
sbb
xor
and
data16
hlt
stc
shrl
dec
ficoms
in
aaa
mov
or
mov
std
insl
jo
aam
cmp
cmp
sub
addr16
loope
loopne
dec
cmp
rcrl
cld
repz
or
sbb
cmp
test
and
fdivrs
xor
push
sub
pop
jnp
insb
jp
cwtl
cmp
outsb
fimull
ljmp
das
jne
cmovge
cli
fiadds
movsb
idiv
int
xchg
and
repz
aad
loop
mov
adc
call
push
mov
rorb
inc
sub
mov
sub
lea
shl
cmpsl
fbld
pop
pop
mov
sbbl
das
add
pop
jno
or
ret
push
test
dec
inc
imul
sub
xchg
aaa
insl
and
mov
lock
ficompl
dec
xor
jle
hlt
lret
daa
xchg
cmpsb
pop
pop
sti
mov
push
pushf
rcrb
ret
sbb
cmpsb
cmpsb
sbb
int
mov
shrl
imul
dec
in
sub
or
sub
scas
cltd
mov
cmp
pop
jl
in
fstpl
imul
cmpsb
mov
dec
dec
out
xchg
lods
shl
lret
xor
pop
jbe
add
pop
push
icebp
sarl
fnstcw
loope
cmp
xchg
les
out
pop
cwtl
xchg
cmp
dec
sub
arpl
es
push
and
add
gs
shll
mov
or
and
xor
adc
pop
or
jnp
je
mov
mov
pop
pop
xchg
jl
out
adc
aam
pop
inc
jg
in
jp
xor
inc
jg
iret
mov
test
fistpll
gs
jge
dec
sbb
shrl
and
cmp
mov
jbe
imul
pop
ret
inc
fiadds
repnz
cltd
xor
adc
imul
sbb
in
lods
inc
fmuls
mov
mov
xor
sbb
out
loop
sahf
in
call
or
adc
mov
addr16
shl
dec
push
mov
mov
daa
xchg
lret
stos
enter
scas
push
imul
sbb
cmp
fidivs
fmul
add
int3
sub
je
dec
xlat
iret
mov
sbb
and
add
gs
pop
sti
pop
push
loopne
cmpl
jge
jg
jnp
xor
ss
sub
stc
jae
mov
add
xchg
roll
mov
mov
sarl
test
xor
mov
pop
sbb
movsb
pop
pop
call
fnstenv
enter
inc
add
adc
cmpsb
outsb
decl
jb
jge
adc
jecxz
shlb
mov
jno
dec
adc
xor
inc
cmc
data16
out
pop
fs
repnz
into
xchg
clc
or
push
scas
insl
or
mov
inc
faddl
mov
rorl
mov
mov
mov
xchg
and
in
cmp
dec
push
mov
xor
mov
xor
xor
dec
xlat
mov
sbb
call
sub
cld
inc
cmp
adc
nop
scas
dec
imul
loope
xchg
testl
repz
sahf
push
mov
ljmp
mov
inc
xchg
lock
addr16
push
sbb
pop
in
jno
or
adc
icebp
inc
sbb
mov
sbb
or
in
sbb
mov
push
add
mov
fistpll
jp
push
dec
popl
stos
mov
hlt
add
in
je
and
icebp
enter
out
inc
xor
xchg
push
std
test
aad
test
lods
ja
ret
mov
test
add
out
lretw
jne
push
mov
das
dec
in
outsb
jp
xchg
ljmp
scas
pop
sbb
jno
ficomps
cmp
data16
jle
stc
ret
xchg
test
cli
pop
xor
popa
add
pop
hlt
inc
mov
and
cli
xchg
scas
xor
ja
sahf
add
fcmovnbe
stos
add
std
mov
outsl
test
push
push
sbb
inc
sub
fstpt
mov
or
outsl
sub
jmp
dec
jne
cmp
into
movhlps
cmpsl
mov
sbb
jbe
rorb
pop
sbb
pop
mov
pusha
mov
cmc
xchg
cmpsb
ss
adc
add
cmpsb
mov
mov
in
mov
ffreep
jge,pn
cmp
or
and
test
sub
sbb
jne
fnsave
jae
out
adc
loop
lret
fsts
lea
cld
mov
fs
push
cmc
fidivl
inc
test
jle
xchg
jle
arpl
cli
pop
fnstcw
enter
das
les
fbstp
inc
xchg
or
add
jo
mov
gs
sub
inc
in
iret
imul
xor
loope
ret
push
or
add
sub
rorl
or
insl
in
push
icebp
cmpsl
jmp
ret
les
sub
xor
cmp
or
out
les
xchg
ror
jge
cmp
mov
cld
jg
and
push
cmp
mov
cmpsb
sbb
cmp
out
push
cmp
loop
shlb
cmp
jo
enter
or
fdiv
dec
in
call
jg
xor
mov
dec
das
rolb
sub
ja
test
lds
xchg
das
push
and
call
sarl
call
repz
pop
cmpsb
jns
popf
push
daa
pop
ja,pn
and
ds
ret
das
test
outsb
outsl
sbb
jge
rclb
inc
mov
mov
pop
xor
cmpsl
inc
icebp
mov
imul
push
mov
mov
fwait
inc
in
sarb
mov
jecxz
lods
push
mov
roll
cltd
fldcw
jo
testb
xchg
xor
fnsave
cs
cmp
add
rcr
cltd
ret
movsl
sub
push
mov
cli
arpl
enter
mov
push
sbb
mov
push
incb
adc
fwait
test
in
jo
pop
xor
push
in
cmp
lret
negl
or
shll
mov
xor
pop
inc
jl
dec
fadds
dec
data16
arpl
adc
mov
and
inc
ss
jo
sbb
or
adc
inc
inc
das
jmp
sbb
dec
movsb
data16
in
lock
sub
dec
faddl
test
push
mov
mov
into
clc
add
push
testb
out
out
pop
pusha
lods
xchg
lods
jge
mov
arpl
inc
pusha
add
push
sub
pop
sarl
jnp
or
stc
lods
sub
iret
jg
push
repnz
pop
jne
jle
mov
push
jnp
cmc
adcb
xor
outsl
fwait
xchg
xchg
or
xor
ss
push
gs
faddl
inc
les
push
inc
pop
fcompl
clc
in
aas
pusha
or
pop
inc
mov
pop
repnz
gs
pop
int
sahf
jecxz
aad
out
lods
and
push
adc
insl
push
stos
push
sti
scas
insb
in
data16
push
pop
rcrb
insb
out
fldl
inc
adc
movsl
aaa
mov
in
sahf
mov
mov
call
andb
adc
cmc
repnz
arpl
push
idivb
test
in
jo
js
test
cmp
ret
xchg
add
xchg
add
mov
inc
sub
sbb
xor
cmp
stos
hlt
jle
stc
mov
cltd
les
pushf
std
xchg
xlat
cld
repz
out
cmpb
mov
mov
jae
and
xchg
jmp
out
cld
add
std
in
adc
dec
jbe
sahf
mov
std
mov
data16
xor
push
pop
mov
push
cli
mov
cs
test
sub
and
arpl
sbb
sbb
sub
mov
xchg
scas
jns
insb
rcrl
jl
outsb
adc
lods
and
or
dec
pop
cwtl
mov
mov
sbb
daa
or
mulb
mov
testl
shl
pop
ret
sbb
inc
jecxz
inc
in
dec
sar
sub
push
mov
or
stos
out
sbb
mov
in
scas
pop
xchg
xchg
xchg
andb
imul
and
mov
push
les
and
pop
lcall
and
rcll
lods
mov
add
push
hlt
xchg
cmp
addr16
stc
out
mov
mov
sahf
movsl
mov
imul
outsl
jle
stos
and
push
xchg
jne
sub
sbb
arpl
pop
out
rcll
pop
jmp
mov
lods
aaa
xchg
lea
push
dec
xchg
xor
dec
lahf
push
mov
shlb
and
xchg
pinsrw
aam
fildl
adc
inc
pop
sbb
jmp
lea
divl
cltd
in
add
dec
test
repz
xor
push
push
jne
ja
mov
ja
mov
clc
insb
cmp
push
cmp
das
jae
sbb
jo
jl
mov
ret
ja
ret
add
mov
je
js
pop
mov
push
call
jbe
nop
sbb
fldl
xchg
push
cmp
loop
lahf
inc
xchg
shlb
cs
push
lds
aam
mov
lahf
andl
ja
aas
push
mov
jmp
and
call
sbb
jne
negb
clc
mov
rolb
mov
pusha
imul
jmp
bound
xor
mov
adc
testl
mov
adc
or
test
pop
cld
ljmp
xchg
or
cmc
jecxz
push
cwtl
test
jmp
pop
shlb
cmp
lcall
cld
ret
cltd
repnz
das
cld
xor
inc
sbb
mov
pop
push
inc
jg
fisubrs
jp
shll
jmp
loopne
fs
jmp
mov
cltd
xchg
add
out
andb
enter
dec
cmp
jb
adcb
cmpsb
fwait
out
xchg
push
xor
pop
jbe
pop
mov
andb
xor
cli
inc
jne
outsb
adc
pop
and
cmp
out
push
shrb
jl
dec
jb
inc
cmp
jl
mov
jnp
cli
imul
cmpsl
dec
lcall
call
or
sbb
jge
daa
xor
movsl
sub
stos
dec
xlat
fidivl
loop
inc
lods
movsl
sub
inc
cld
adc
pop
lret
pop
dec
hlt
arpl
sub
fs
mov
sub
dec
test
fsubrl
xchg
push
cmp
sub
add
in
dec
pusha
xlat
int3
dec
sarl
in
icebp
push
hlt
push
les
stc
jbe
cmp
inc
inc
mov
ljmp
inc
ljmp
mov
add
es
les
je
popf
add
inc
test
cmc
jno
cmp
and
lret
push
mov
adc
dec
sbb
les
std
in
or
push
sbb
call
mov
call
cmp
sbb
xor
test
xchg
dec
pop
or
lcall
test
xchg
ficoml
sub
mov
xchg
sbb
push
outsb
dec
xchg
jbe
adcb
push
decb
mov
notb
jne
inc
xchg
cmpb
shlb
lods
and
stos
push
jae
iret
sbbl
fcomps
adc
push
fidivs
and
xchg
out
adc
and
mov
sub
mov
lcall
add
in
push
cmp
xor
in
sub
and
jo
addb
addr16
xor
adc
xor
icebp
daa
adc
aas
scas
mov
movsb
jecxz
nop
cmp
xor
adc
je
je
cmp
jno
mov
cmp
test
adc
dec
mov
xchg
adc
scas
test
into
lock
jne
pop
sbbl
or
stos
xlat
or
pop
and
push
movsl
leave
add
les
pop
repz
jae
dec
sbb
mov
loop
sbb
dec
xor
int
movsb
dec
pop
mov
js
sub
repnz
sub
bswap
cmp
jno
pushf
popf
sbb
sub
repz
aaa
test
ljmp
repz
pop
popa
push
mov
cmc
in
mov
fdivl
sub
les
push
inc
adc
sub
inc
fstps
sub
xor
clc
test
mov
push
cmpsl
lock
outsl
test
lods
stc
sub
and
inc
sub
std
cwtl
jmp
push
push
sbb
adc
aas
mov
cmp
enter
add
and
xchg
mov
enter
in
cmp
lahf
iret
xchg
cli
and
and
aaa
pop
insb
adc
inc
dec
or
dec
lods
sub
shll
cmp
pop
push
and
inc
jmp
cmp
jne
movsb
stos
push
adc
inc
mov
inc
jg
mov
dec
jnp
gs
pop
loopne
outsb
fldenv
fcompl
push
or
xor
cmc
je
and
aad
xlat
push
insl
sbb
cmp
jnp
test
call
test
ljmp
jbe
popf
scas
or
adc
inc
sub
adc
mov
adc
in
cmpsb
fimull
dec
jg
cmp
mov
xchg
rcll
xchg
out
or
sti
aas
popa
mov
clc
notl
mov
lea
mov
iret
iret
ja
stos
mul
ror
call
int
push
lea
pop
fimull
lea
cli
inc
push
xor
imul
sbb
dec
xchg
je
xchg
push
cmpsl
or
pop
adc
movsl
inc
cmp
lods
push
and
lret
sub
icebp
add
add
mov
jmp
jl
mov
mov
sub
sbb
fcomps
lock
iret
idivb
aam
and
scas
xor
lcall
in
pop
or
mov
push
pop
es
test
out
or
pusha
jmp
test
or
insb
cli
inc
and
sub
lock
cs
js
pop
mov
jp
dec
push
into
cmp
fisubrs
enter
enter
push
lahf
inc
jae
cs
data16
btr
and
aad
mov
sbb
fmull
or
jo
stc
repnz
ret
ret
add
jno
mov
ud0
lret
test
or
test
mov
xchg
adc
mov
inc
in
jmp
mov
pop
divb
mov
mov
not
popf
movsl
pop
rorl
pop
adc
and
lret
loopne
or
rcrb
sub
imul
push
mov
stc
rcll
addb
loope
cld
out
fnstsw
mov
sbb
pop
jmp
jmp
sti
imul
pop
test
ret
jg
repz
xchg
xor
lods
ja,pt
pop
movsb
mov
sbb
test
xchg
pop
cs
xor
in
addl
dec
test
cld
mov
adc
adc
dec
enter
nop
stos
and
imul
add
xlat
loope
leave
cmp
dec
sbbl
jg
and
out
test
ret
sarl
cmp
test
xchg
inc
leave
add
mov
and
jle
adc
je
mov
sahf
sbb
in
dec
mov
into
fisttpl
dec
sub
hlt
sub
fs
push
lcall
lcall
shr
mov
cltd
push
lds
imul
dec
xchg
pop
shrb
imul
cmp
cmp
shlb
clc
ljmp
pop
loopne
sti
pushf
loope
mov
ret
sbb
fwait
lcall
jne
mov
adc
xchg
in
and
dec
mov
pop
xor
in
leave
adc
jg,pt
mov
mov
xchg
jge
fnstenv
pusha
or
aam
mov
mov
jg
jl
in
sbb
jge,pt
push
mov
aam
pop
aas
test
inc
mov
pop
sbb
add
inc
mov
pop
in
jl
pop
or
add
in
mov
aam
mov
fidivl
sbb
test
daa
jmp
pop
mov
rcrb
cmp
pop
stos
scas
sahf
add
cwtl
pushf
iret
test
ret
mov
xchg
stc
cmpsb
mov
mov
mov
aaa
cmc
out
xor
jne
jle
push
mov
imulb
inc
and
scas
sbb
pop
test
xor
adc
sub
stos
sbb
mov
and
mov
lods
xorl
cmp
xchg
addl
lea
movsl
ja
push
xchg
andl
pop
jns
outsl
jnp
pop
sub
sbb
test
jmp
repnz
das
mov
subb
addr16
int3
mov
dec
or
repnz
xchg
pop
or
loop
std
ds
jns
nop
add
or
jae
mov
adc
mov
popf
jae
andb
mov
inc
icebp
lds
daa
pop
aaa
jle
imul
dec
fcompl
cs
push
mov
outsb
mov
cmc
or
gs
xchg
ds
hlt
lret
mov
andl
and
xor
add
fwait
xchg
test
and
fadds
in
cmp
test
movd
stos
andl
clc
mov
pop
mov
xchg
hlt
mov
push
mulps
xor
xchg
push
mov
out
dec
mov
sbb
insl
pusha
push
add
push
lret
orb
iret
test
out
inc
inc
das
sbb
test
sub
movsl
jae
mov
sarl
mov
rcrb
lods
sbb
or
int
imul
aad
sbb
and
rorb
inc
test
dec
cmpsl
mov
push
jb
sub
leave
sbbb
in
scas
pop
pop
imul
pop
cli
push
cmp
push
sub
push
popf
ror
testb
out
es
dec
int
or
pop
push
jno
std
cmc
xor
sahf
stc
pushf
negl
inc
rol
cmp
sbb
jo
dec
loopne
movsb
div
push
fldl
jp
or
xchg
jl
mull
mov
flds
add
mov
jo
and
stos
mov
mov
dec
inc
and
cli
dec
dec
pop
add
inc
xchg
ja
imul
sbb
pusha
es
lcall
mov
fs
in
mov
inc
mov
jo
mov
fnstenv
scas
xchg
xchg
mov
test
es
inc
ss
test
psubsb
jmp
adc
dec
and
mov
or
cmpl
mov
mov
push
push
xchg
roll
inc
jb
pop
test
add
rcrl
mov
popf
pop
loop
ficoml
mov
push
mov
pusha
mov
adc
out
stos
loop
sbb
dec
les
out
movsl
into
fcomi
sbb
imul
push
xchg
xchg
sbb
cli
pop
dec
jo
sbb
cmp
lcall
cs
cmovns
clc
orl
xchg
rcl
jmp
ret
pop
dec
pop
lret
jmp
pop
and
adc
gs
push
lahf
mov
push
mov
and
xchg
test
icebp
rcr
icebp
mov
xchg
loopne
and
iret
sub
call
fwait
mov
clc
dec
movsl
ss
insb
jg
cmp
xor
pop
mov
dec
in
mov
xor
add
or
shrb
mov
sbb
shll
shrl
cld
jmp
xchg
fsubl
aaa
jno
lret
pop
in
shll
fsubrl
or
mov
jno
movsb
pop
sub
dec
jmp
mov
and
sbb
mov
add
push
mov
add
mov
in
fnsetpm(287
mov
imul
push
and
add
insl
cmpl
inc
out
jbe
dec
clc
dec
les
dec
mov
loope
cltd
cld
xchg
out
les
ss
scas
pop
ja
mov
cmpsl
mov
pop
cmp
inc
ror
jb
xchg
lret
adc
js
mov
or
in
int
fucomi
stc
cmp
xchg
cmc
dec
and
popa
jg
push
jge
outsb
inc
dec
test
daa
dec
jge
or
or
out
push
fisubrs
and
test
inc
dec
or
jae
mov
iret
pop
mov
mov
and
sub
stc
lea
loopne
pop
divl
ret
inc
push
fwait
lods
repz
mov
in
out
xor
sbb
cmp
sahf
test
stos
call
mov
jl
ret
mov
mov
push
dec
ds
jno
cmp
mov
call
push
popf
sti
insl
fcmovu
sub
movsl
icebp
mov
out
jecxz
push
push
mov
mov
in
xchg
mov
add
adc
push
popa
pop
shrb
jmp
sahf
int
ret
imul
and
aam
cmpsl
cmp
xchg
push
jmp
loopne
and
jae
cmp
or
iret
mov
xchg
repnz
faddl
aaa
pop
fcompl
ss
cmp
mov
mov
mov
add
or
xor
jle
inc
nop
jne
inc
pusha
push
push
dec
adc
adc
or
subl
cmp
sub
cli
repz
lcall
sub
dec
cs
or
iret
or
add
hlt
jns
icebp
leave
sahf
pop
push
lret
xor
stos
ja
sub
jmp
imul
mov
cmp
xchg
mov
fldenv
xchg
and
inc
cmp
pop
fcoml
js
xor
ss
shrl
push
pop
dec
push
in
fcomi
out
fmuls
dec
sbb
fldcw
push
sbbb
pop
dec
jne
add
jmp
pop
pushf
xchg
ljmp
stc
call
test
sbb
mov
cmc
mov
and
sub
inc
inc
push
jl
jg
and
jge
pop
push
cmc
in
dec
enter
loopne
pop
imul
iret
fists
jecxz
lcall
mov
ret
aas
movsb
push
mov
adc
arpl
jbe
dec
fimuls
xor
fucomp
loope
and
xor
out
pop
fdivp
daa
mov
mov
mov
sub
adc
outsb
sbb
cmp
fnstcw
loop
sub
mov
adc
dec
sub
mov
adcl
push
andl
sub
ja
lods
xor
sub
mov
into
mov
jns
rcll
mov
pop
das
leave
in
fwait
into
in
pop
jne
stos
adc
jnp
inc
lea
outsl
stc
jae
xchg
hlt
std
test
push
sub
jl
stos
aad
push
cmpsl
lcall
mov
in
bound
mov
jnp
in
call
xor
insl
enter
pop
jno
inc
test
cmp
mov
mov
inc
cmp
xchg
pop
jmp
fisubs
mov
dec
std
sub
jp
pop
pop
xor
lea
adc
sbbl
sbb
lcall
arpl
rcrl
jmp
xchg
or
cltd
pop
ja
lahf
or
dec
adc
int
popf
jg
sbb
adc
je
in
nop
add
add
adc
xchg
sbb
and
and
or
pop
pop
stos
xor
sbb
out
xor
aad
popf
push
gs
sbb
bound
ja
cmp
mov
std
lret
mov
call
mov
mov
cwtl
int3
cmp
inc
mov
ljmpw
jmp
add
sti
xchg
dec
jns
cmc
pop
inc
repnz
cmp
loopne
xchg
sahf
xchg
jns
movsl
jo
or
loop
icebp
div
fwait
scas
mov
pop
lret
inc
xlat
rcl
jae
add
add
sub
fcmovu
lret
sbb
dec
inc
daa
and
mov
adc
sub
mov
subl
push
rcll
loopne
push
xchg
push
loop
mov
ss
sbb
daa
gs
lock
mov
mov
clc
repz
test
and
cmpsb
xor
xor
push
push
call
xchg
cmp
and
push
addr16
xchg
jae
mov
pop
jnp
push
jno
push
inc
movsl
or
sub
scas
mov
test
cmpsb
sub
dec
xchg
aas
mov
mov
divl
sarl
and
inc
mov
add
in
cmpsl
aas
xchg
aam
int
inc
push
push
das
movsb
movsb
outsl
stc
popa
aaa
outsb
xchg
jnp
fstpl
lcall
adc
sbb
xchg
dec
xorb
lods
sbb
mov
rcll
jp
sbb
mov
lret
and
and
sub
outsb
push
ja
call
mov
scas
xor
pop
xor
pop
cmp
xchg
test
jno
pop
daa
into
push
push
in
push
xchg
scas
outsl
adc
movsl
jp
std
sti
and
and
xchg
mov
push
fsubs
incb
mov
clc
ficompl
out
int
aad
jne
iret
inc
jbe
sub
mov
adcb
and
xor
xor
movsl
sub
sbb
mov
cmp
sbb
das
cmpsb
or
aam
jl
or
or
mov
aad
jbe
dec
and
mov
mov
mov
imul
dec
xor
ret
push
jo
mov
push
das
jnp
insl
mov
xchg
pop
idiv
jmp
add
shrb
rorl
insb
ds
pop
push
test
jae
js
test
pushf
mov
sub
jl
jmp
scas
iret
outsl
pusha
test
stc
and
scas
mov
int3
pop
lret
sbb
push
sbb
mov
ljmp
leave
pop
inc
cli
add
aad
cmp
sbbb
repz
imul
adc
aas
adc
push
outsb
sub
push
adc
sub
repnz
test
in
movsl
sbb
fidivl
out
adc
jne
sbb
adc
icebp
cmp
mov
cmc
insb
pop
hlt
jno
adc
cmp
push
mov
mov
dec
and
mov
or
xlat
jecxz
fstpt
in
mov
or
cld
loope
sub
lds
and
xor
adc
ss
jae
sahf
bound
jns
cmc
mov
cmp
sub
pop
movsl
cmp
push
iret
adc
cs
int3
movsb
xorl
arpl
pop
push
clc
std
test
push
cs
mov
in
cmpsb
mov
jp
or
and
out
enter
pop
push
and
inc
mulb
inc
sub
inc
push
into
sbb
or
lds
or
inc
bound
push
ljmp
fwait
mov
xchg
sbb
lret
sbb
call
shrl
imulb
mov
lret
int
sub
lods
lock
mov
fdiv
mov
aaa
mov
or
out
xchg
jns
adc
fsts
icebp
testl
fdivrl
adc
add
xor
testb
dec
xchg
mov
xor
stos
xchg
fisttpl
std
loope
scas
cmc
lret
decl
xlat
cmc
mov
in
lahf
mov
ret
test
jle
ljmp
ja
movsb
lea
cmpsb
push
sbb
push
xchg
outsb
inc
pop
add
mov
xor
popa
and
pushf
pop
andl
nop
add
ds
lds
movsb
cld
pop
xor
rorb
adc
in
enter
cmpsb
icebp
add
das
add
movsb
lret
inc
xchg
or
or
shl
pop
out
inc
daa
jle
mov
jae
add
lods
or
push
lret
lea
push
mov
adc
add
jne
push
popa
imul
in
ret
idivb
cs
ret
out
mov
out
push
iret
push
inc
movsl
int3
mov
sbbl
aas
fnsave
sub
xchg
pop
xchg
push
test
sub
daa
xchg
and
xchg
xchg
andl
pop
stc
stc
sub
add
test
pop
and
mov
push
mov
mov
jo
popa
jecxz
pop
stos
mov
jno
sahf
and
dec
cmp
jae
loop
mov
jge
lock
aaa
pop
ret
cmp
cmp
jne
xchg
pop
inc
sahf
inc
jecxz
call
out
cli
or
dec
testb
shlb
adc
mov
rcrb
push
add
pop
push
push
mov
inc
push
lods
outsb
mov
xchg
xor
hlt
sub
scas
ljmp
push
jne
leave
loop
mov
pop
scas
xor
iret
xor
cmp
bound
xchg
in
xchg
popf
sbb
sbb
sbb
iret
and
inc
out
popf
sub
push
push
nop
xchg
cmp
icebp
add
jg
and
adc
jbe
les
sub
jbe
xor
sbb
sbb
and
sahf
or
sbb
scas
cmp
fistpll
ds
push
outsb
das
dec
inc
mov
popf
or
jg
repnz
loop
cmc
xchg
ret
in
out
mov
negb
and
and
cmpsb
xchg
sub
sub
ficoml
jl
fst
dec
lock
adc
sbb
test
enter
pop
mov
xor
movsb
mov
lahf
aas
mov
xor
loopne
jl
mov
lret
jo
adc
push
inc
inc
es
or
test
mov
mov
and
pop
push
push
and
gs
ss
xchg
mov
inc
xchg
dec
sub
rcrb
rorb
sti
shl
xchg
cmp
aas
iret
std
ret
lahf
loopne
je
imul
lods
and
imul
xorl
mov
rcl
or
stc
outsb
add
mov
or
sbb
stc
test
in
stos
popl
mov
jp
mov
clc
or
adc
ret
push
lret
and
sti
adc
dec
arpl
imulb
iret
incl
push
fadds
shlb
call
repnz
dec
push
xor
loopne
es
and
xchg
jmp
xchg
aad
inc
lods
push
cmpsb
pop
ljmp
fstl
sbb
xor
std
xchg
cli
cli
lret
adc
push
mov
gs
cmp
ret
stc
push
shll
ds
push
fsubr
dec
aad
mov
jl
icebp
sbb
jbe
test
push
ljmp
push
ja
data16
test
mov
rcrb
xchg
add
jp
dec
lds
mov
xchg
cmp
fldt
and
dec
or
fildl
fdivr
sub
lods
xor
mov
rcrb
hlt
popa
cmc
iret
inc
mov
fnstsw
jae
adc
jnp
lock
pop
or
aad
sahf
andb
pop
in
jne
out
mov
aam
in
fwait
jnp
lods
int3
cld
xorb
mov
push
jl
fcoms
or
sti
into
imul
shll
xor
xorb
ficomps
rolb
fisubs
lret
fdivrl
pop
and
jmp
ja
mov
xor
cmp
add
sahf
addb
pusha
arpl
pop
pop
mov
lea
mov
shr
lret
push
leave
dec
jb
mov
jge
cmp
add
aad
and
xor
stos
pop
push
bound
int
push
lcall
int
push
sbb
lock
int3
adc
sbb
mov
lcall
mov
jb
mov
xchg
push
icebp
and
jno
sbb
and
movsl
add
icebp
sub
rclb
out
mov
sbb
xor
cwtl
lock
or
mov
push
pop
data16
mov
xchg
insb
adc
loop
shll
mov
dec
stc
sub
lret
shlb
imul
push
inc
hlt
test
pop
mov
or
dec
and
fwait
mov
cmp
repz
adc
adc
ret
mov
and
jp
idivl
mov
lds
outsb
stc
cmpsl
mov
sar
jnp
xchg
cmp
mov
adc
int
xor
test
xlat
jbe
push
sub
pop
in
fimuls
mov
lock
jns
pusha
movsl
popa
sub
bound
inc
out
lock
sahf
push
pop
pusha
lret
lock
mov
outsb
repnz
clc
push
stc
jp
aam
or
hlt
out
inc
jne
stos
sub
sarl
je
sbb
cmp
dec
cmp
jg
js
js
mov
lahf
stos
mov
and
xor
or
shl
add
mov
sbb
das
negl
lock
mov
repz
mov
xchg
and
add
xor
aam
sub
fsub
jmp
ret
inc
test
xchg
lods
push
jle
and
dec
or
mov
sahf
sbb
jg
sub
lods
xor
repz
jl
addl
outsl
out
xchg
or
lds
fs
clc
fimuls
jle
xorl
mov
mov
fldt
jmp
ret
subb
xchg
mov
sub
pop
push
insl
fisttps
fwait
in
lret
call
lds
or
xchg
xchg
int
imul
cmpsb
cs
xor
es
in
adc
cmp
sbb
sbb
jg
mov
sub
ret
jno
clc
dec
pop
mov
sti
arpl
or
andb
enter
scas
jo
jl
xlat
inc
adc
lret
inc
inc
jmp
pop
cmc
adc
jno
cmp
int3
insl
jae
push
pminub
pop
rolb
fidivl
cltd
mov
rolb
xor
push
pop
push
pop
pop
jle
mov
add
iret
cmp
fst
adc
cmc
xor
pop
cmp
aam
xchg
add
mov
or
jne
icebp
inc
loope
xchg
inc
jb
sbb
mov
fsubrl
mov
sbb
fidivrs
fcoml
xor
in
mov
icebp
inc
mov
sti
cs
out
cmpsl
mov
pop
sub
imul
and
loope
sbb
sub
push
adc
cmp
cmp
outsl
shll
jnp
xor
or
lock
sahf
pushf
add
mov
sbb
sbb
in
cmp
mov
pop
stc
aam
push
cmp
cs
addr16
pusha
xor
popa
pop
test
je
enter
rcr
sbbb
out
sbb
and
cmp
jne
mov
lret
rcrl
cmp
xor
lea
xor
popa
mov
out
push
dec
pop
int3
out
dec
mov
lock
or
mov
inc
adc
xor
stos
stc
pop
int
mov
lds
sbb
or
loope
or
push
je
aam
adc
shrb
xchg
lds
movsl
jb
mov
ds
ljmp
push
cmp
and
enter
add
jmp
nop
mov
negb
xor
xchg
fiadds
jne
loopne
cmpl
insb
dec
xchg
pop
or
cmc
adc
and
mov
test
loopne
out
fwait
bnd
adc
repnz
mov
inc
mov
sti
lods
test
fistpl
bound
inc
repnz
mov
lcall
in
jmp
add
mov
ss
mov
sahf
cmpb
jb
rcr
cmp
jle
aas
test
xchg
loop
inc
imul
mov
fcoml
mov
push
cmp
sub
mov
test
ret
stc
xchg
xor
ficoml
and
in
fisubl
mov
adc
out
adc
sbb
cmp
or
mov
xchg
cmp
sbb
out
data16
mov
xlat
es
fimuls
pop
mov
sub
in
sub
gs
adcb
lods
pushf
xor
bound
fst
jbe
cmc
push
lds
stos
test
daa
loop
outsb
pushf
pop
xchg
ss
jecxz
push
mov
jbe
lret
sub
mov
hlt
mov
inc
xchg
and
sub
mov
or
and
dec
lfs
cmp
or
test
and
aam
and
stos
call
sbb
nop
mov
inc
daa
xchg
inc
xorb
mov
mov
mulb
jp
call
xchg
pop
mov
das
sub
sbb
lods
mov
call
push
lret
outsl
cmp
mov
pop
adc
pop
test
adc
pop
add
adc
xchg
sbb
sti
push
dec
lods
lea
aas
popa
inc
adc
jo
push
inc
rorb
jmp
ret
add
push
mov
aas
aas
sbb
push
mov
xor
adc
add
dec
sub
fcomps
sbbb
enter
and
xlat
mov
pop
push
mov
sub
pop
sub
jle
fdivs
jno
xchg
inc
sbb
cmc
sbb
mov
fsubl
mov
arpl
xor
jle
mov
popf
shrb
inc
cwtl
fcmovu
sub
ffreep
jmp
out
or
insb
enter
and
pop
cwtl
xchg
out
mov
sbb
mov
mov
lret
mov
test
xchg
cmp
aas
cli
dec
sub
adc
adc
and
popa
pop
cmp
xchg
mov
push
xchg
loop
push
and
out
mov
mov
jg
lahf
push
sbb
push
inc
clc
xchg
mov
jg
aaa
jmp
jae
pop
adc
jg
outsb
mov
jl
cld
add
sub
popf
xor
mov
inc
outsl
cli
rcr
outsb
mov
jno
jp
pop
cmpsb
mov
sti
ds
das
mov
mov
xor
ds
pop
into
aas
xlat
inc
xchg
xchg
adc
roll
mov
jbe
data16
aaa
fmull
mov
jmp
test
je
pop
repz
aad
test
cmp
data16
arpl
test
call
mov
cld
jmp
push
sbb
ret
jns
or
inc
lea
lret
neg
dec
mov
loopne
xor
mov
in
outsb
jge
mov
lret
fs
cmpsl
adc
jnp
testb
adc
gs
clc
loop
stos
loopne
insb
outsb
stc
cmp
test
xchg
mov
adc
scas
push
repnz
sub
inc
xor
rorl
cmp
jle
inc
in
push
test
addr16
mov
cwtl
add
xchg
jo
ror
dec
sahf
mov
out
push
aaa
push
adc
insl
cmpsl
pop
sub
lea
and
mov
subb
jnp
cmp
fildll
mov
out
sub
shll
adc
xchg
lds
lcall
inc
or
pop
add
sbb
hlt
pop
mov
sub
sbb
xlat
dec
and
ja
pavgw
mov
lcall
int3
cmc
pop
pop
dec
mov
sub
es
dec
mov
mull
das
shrl
mov
xor
mov
rorl
call
imull
and
cmp
pusha
and
jne
in
inc
xor
loop
mov
fs
int3
mov
cmpsb
lock
jg
push
leave
push
dec
xor
jp
ljmp
divb
test
repnz
mov
push
xchg
adc
mov
cmp
xor
cmpsl
mov
or
xacquire
push
or
fldt
out
test
aam
mov
sar
js
cs
ret
mov
jno
cltd
mov
lds
sbb
sub
sub
push
inc
sti
pop
imul
push
dec
aad
ljmp
dec
add
mov
insb
andb
cmp
mov
sbb
div
sbb
lret
mov
jb
jnp
adc
cmp
pusha
mov
jae
xchg
movsb
mov
cmp
aad
js
cltd
and
movb
jno
pushf
lahf
fwait
pushl
std
outsb
fldcw
mov
cltd
sub
daa
leave
sahf
mov
leave
mov
in
cwtl
cmpsb
mov
mov
lcall
movsb
push
pop
jns
push
inc
cmc
jg
mov
xchg
jl
repnz
cmp
adc
mov
pusha
leave
cmp
ret
mov
lods
xlat
jmp
mov
fistpll
fdivr
cwtl
lods
sarl
push
and
dec
push
mov
shrb
dec
scas
jbe
push
pop
adc
leave
jp
scas
inc
pop
shl
push
pop
cmp
clc
sbb
cmp
mov
cmp
insb
out
pusha
int3
add
loopne
bound
std
push
test
sbb
lahf
stc
mov
xchg
jmp
inc
push
mov
adc
xlat
repz
inc
hlt
mov
mov
cmpsl
das
mov
pusha
fsubl
xchg
arpl
outsl
pop
sbb
add
xor
push
ret
push
bound
adc
addb
cmpsb
lahf
or
jbe
jmp
push
lods
dec
dec
xor
xor
fmul
out
sub
test
stos
mov
je
test
sub
mov
mov
movsb
cmp
sbb
and
adc
sbb
insb
xor
xchg
inc
mov
lock
insl
ss
mov
mov
lret
addr16
jnp
lods
xchg
lods
test
leave
test
in
cmp
dec
jmp
lock
mov
xchg
fwait
aad
dec
mov
sar
insl
out
or
cmp
mov
jbe
or
xor
loope
je
loop
or
mov
push
sub
mov
cmpsb
add
dec
mul
aaa
movl
clc
mov
adc
dec
inc
jne
inc
stos
mov
loop
sahf
mov
stos
xor
data16
lcall
loop
hlt
jmp
insl
xchg
pshufw
lahf
icebp
jb
push
inc
push
lahf
cli
push
int
daa
fwait
lcall
cmc
les
sub
js
fnstsw
dec
mov
jp
lods
scas
add
int3
mov
inc
mov
negb
movsl
pop
mov
pop
add
fwait
aam
jbe
lret
stos
stos
clc
test
imul
sub
mov
jno
pop
and
inc
test
mov
xor
shll
dec
pop
aad
mov
mov
mov
aam
push
addr16
in
ds
cli
cmp
inc
cmp
imul
xchg
insl
or
dec
mov
test
adc
add
xlat
mov
mov
inc
mov
lods
loop
mov
xchg
cmp
xchg
add
insl
inc
pop
and
mov
inc
call
subl
push
dec
clc
push
adc
nop
lret
push
mov
mov
fwait
aaa
out
test
lea
add
inc
xchg
sbb
outsb
adc
jns
fcomp
mov
pop
insl
lods
stc
cmc
cwtl
in
jne
call
mov
jb
or
push
dec
stos
ja
imul
mov
fs
pop
repz
mov
xchg
fwait
rcr
pop
mov
sub
ret
add
jb
pusha
insb
push
imul
ret
data16
mov
ss
sub
mov
in
and
and
add
push
sub
push
clc
popa
dec
adc
ret
mov
adc
push
dec
xchg
je
cmp
addr16
loope
xchg
lods
ret
rcll
cld
jb
dec
int3
scas
cmpl
sub
or
xchg
sub
pusha
out
cwtl
xchg
js
mov
lock
jle
lea
sub
pop
aad
jne
gs
jnp
jno
popf
xchg
xchg
sub
test
loope
mov
int
adc
add
js
and
pop
dec
sbb
pop
jge
rorb
insl
push
pushf
pop
fs
sub
mov
xlat
mov
in
pushf
les
xor
fmuls
inc
jbe
xchg
cltd
out
fwait
or
imul
jg
call
sahf
popf
sbb
fcoms
cli
inc
std
pushl
repnz
mov
mov
pop
rorb
ss
mov
xor
aas
inc
outsb
std
xlat
jno
fwait
push
iret
das
sub
and
or
jp
pop
push
sub
imull
sahf
sar
adc
das
hlt
add
and
sub
sbb
xlat
fcomps
push
imul
fdivs
add
xchg
pusha
push
in
dec
mov
push
mov
lds
xor
add
addr16
cltd
popa
or
adcl
pop
test
fwait
lret
incl
fucomp
add
xor
loopne
adc
adc
mov
adc
aam
jle
mov
fmull
cmp
sub
mov
xchg
pop
jg
imul
sahf
into
pop
jae
or
in
cmp
lods
lahf
mov
inc
xorb
dec
and
insl
dec
sub
loop
mov
ret
inc
push
in
add
fldt
mov
pusha
mov
in
jb
jmp
add
ret
popf
push
js
mov
lods
mulb
out
fnstcw
jb
sbb
mov
mov
insb
test
cmp
cmp
out
loope
jecxz
mov
test
bound
repnz
xor
pop
and
aam
insb
lahf
mov
lods
cld
dec
lea
pop
push
inc
push
xor
stc
inc
and
dec
out
cmp
and
mov
popf
push
pop
xchg
xchg
mov
test
jb
mov
aad
mov
je
insl
inc
jbe
cmp
fidivrl
repnz
mov
sbb
push
not
cmpsl
hlt
xchg
jnp
sub
jmp
xlat
shll
iret
cld
or
repnz
jae
sbb
jecxz
jmp
or
pop
arpl
lret
test
stos
pop
lret
push
roll
iret
pop
or
ret
outsl
add
pusha
arpl
cwtl
scas
bound
and
fcmovne
fists
aaa
stc
jo
scas
pusha
ja
pushf
xor
lret
push
cmp
lcall
dec
dec
cmp
and
filds
sti
scas
xchg
insl
call
movsl
xor
push
jnp
mov
lahf
pop
jle
sbb
icebp
and
loope
jg
das
push
bound
lret
out
inc
mov
mov
jle
and
push
adc
shl
xchg
jp
jg
jecxz
sahf
adc
ss
mov
pop
adc
xor
cli
push
xchg
shll
mov
gs
test
fnsave
pop
mov
cld
xchg
xor
js
mov
lds
cmp
mov
icebp
or
sbb
repnz
cmpsl
out
jae
add
cmc
xor
testb
xchg
repnz
and
adc
ss
movsb
cmp
pop
mov
mov
into
arpl
xchg
std
cmpsl
or
jg
mov
out
ds
mov
xchg
xchg
sbb
nop
mull
add
decb
out
insl
outsl
mov
loopne
popl
ja
fadd
add
push
push
pusha
mov
add
aam
mov
scas
lea
jl
ret
in
inc
sbbb
subl
mov
outsb
jns
mov
push
stc
shll
ret
sbb
addb
xchg
and
push
aaa
jmp
or
scas
aaa
test
jo
cmp
mov
call
std
sub
pop
mov
cmpsl
mov
loope
lods
iret
pop
ss
arpl
push
pop
xor
pushf
mov
push
hlt
outsb
ljmp
sarb
cmpsl
add
jg
cmp
xor
stos
jl
mov
sar
push
call
mov
pop
push
pop
mov
push
xchg
mov
testb
and
mov
fnstenv
xchg
std
sub
out
mov
clc
mov
dec
ret
mov
ret
ret
insb
xchg
jbe
js
mov
xchg
jae
cmp
mov
stos
movsl
fwait
inc
dec
and
cmp
shlb
mov
sarl
test
popf
and
xchg
cld
mov
sub
push
jo
insb
inc
lret
xor
outsl
into
xchg
mov
fmull
aam
mov
mov
jge
cmp
add
out
pop
add
xor
ljmp
lea
js
aaa
push
testb
mov
mov
clc
repnz
mov
je
pop
and
lods
pop
das
notl
push
or
fimuls
jns
ret
mov
cmp
pusha
sbb
rcr
sbb
sbb
mov
shlb
xor
xchg
mov
enter
pusha
mov
pop
jnp
sub
mov
shl
test
test
je,pt
ficoms
mov
cmp
ds
fs
cli
add
ss
outsb
mov
bound
out
sub
jbe
and
xor
adc
jo
xchg
shr
clc
stos
jo
jnp
sbb
decb
sbb
sbb
push
jecxz
insb
adc
pop
xor
and
sub
push
push
push
pop
push
add
scas
cmp
mov
out
inc
or
cmp
imul
ljmp
int3
jb
pushf
dec
js
leave
push
mov
add
out
jge
and
xor
dec
in
mov
insb
jg
jb
gs
stc
popa
stc
je
ss
sarb
movsb
arpl
and
lcall
leave
sbb
xchg
jbe
aas
mov
pop
rol
sahf
jg
adc
push
test
imul
repz
mov
dec
add
es
stos
repz
xchg
roll
jae
clc
pop
jno
mov
add
daa
xor
fwait
mov
aam
sub
mov
pop
out
test
pop
or
mov
push
fwait
and
dec
sbb
adc
push
ds
gs
sub
outsb
stos
cmp
and
mov
aas
test
xor
and
orl
mov
mov
adc
mov
xchg
repz
push
iret
movsl
xchg
leave
jns
and
xchg
sbb
icebp
int
rclb
pop
insb
loope
nop
push
mov
mov
fisubrl
stos
inc
or
inc
sbb
xor
jle
and
arpl
pusha
cmp
push
mov
cmp
inc
aam
add
xchg
jne
rcl
int
mov
inc
jno
sub
nop
xchg
insb
xchg
cmpsb
and
inc
outsl
lret
aaa
or
lods
lret
push
in
sarl
js
sub
fldl
mov
mov
sahf
lea
push
addr16
and
ja
pusha
xlat
cmpsb
and
lods
jl
outsb
pop
into
enter
data16
sbb
aas
ret
pop
cmc
pop
into
adc
adc
dec
and
adc
mov
push
addr16
enter
pop
imull
sbb
mov
jo
jge
xchg
popaw
pop
jg
push
imul
xor
cli
sbb
cmp
lcall
test
and
sarl
movsl
mov
daa
mov
dec
test
pop
cmpsl
cld
sti
fmull
leave
imul
xrelease
lock
inc
in
adc
in
dec
cmp
aaa
or
in
xchg
pop
dec
dec
les
xchg
enter
ljmp
pushf
lahf
pop
mov
icebp
inc
mov
stc
in
jecxz
loop
mov
jle
pop
xchg
stc
mov
in
int
pop
dec
push
outsl
imul
xchg
push
dec
ficoms
aam
jns
dec
jbe
mov
push
pop
cmp
add
jbe
int
xchg
or
mov
jmp
adc
cmp
adc
cli
xchg
push
mov
popf
push
ja
sbb
imul
inc
and
cmp
loopne
cld
cmp
fldl
add
insl
inc
cmp
add
loope
cmp
enter
cmc
inc
xchg
mov
jo
xchg
or
mov
push
or
aad
ljmp
test
or
add
cmp
das
pop
mov
adc
jg
in
iret
incb
imul
lods
scas
and
loop
dec
iret
mov
andl
inc
inc
dec
or
cmp
addr16
xchg
xor
ss
jmp
mov
into
xchg
rolb
out
aas
jecxz
cli
in
repz
sbb
icebp
je
add
lret
mov
push
mov
lods
sub
mov
mov
data16
cmp
lods
jge
and
xchg
ja
cld
xor
loop
inc
add
lds
xchg
je
xor
call
test
ret
aaa
inc
outsl
test
cmp
xchg
cmp
addl
inc
mov
mov
test
adc
push
ja
sbb
je
mov
adc
jecxz
stos
mov
mov
adc
fisubl
popf
icebp
loope
xchg
js
xor
mov
jns
sbb
and
test
jle
mov
xchg
aas
ret
mov
mull
scas
les
xchg
test
inc
pop
insb
push
pop
cwtl
insl
shll
and
xor
lock
cmp
filds
ds
test
sbbl
hlt
mov
scas
lods
lods
adc
mov
aaa
dec
add
jb
bound
and
xchg
dec
fwait
jnp
inc
mov
stos
jo
add
mov
mov
pop
inc
out
xlat
cli
in
rcl
xchg
push
mov
cmp
and
hlt
andb
xor
inc
in
stc
and
push
dec
dec
pop
ret
clc
out
and
or
jecxz
xchg
outsl
jae
pop
mov
sarl
inc
inc
in
mov
fstpt
xchg
cld
push
pop
push
shlb
repnz
hlt
and
pop
mov
push
jecxz
out
in
popf
push
xor
push
out
testb
xor
sti
lock
mov
aaa
fists
insl
dec
mov
jle
loope
and
push
push
jmp
stos
xchg
rorb
pop
jae
ror
push
pushf
repz
int3
scas
jecxz
repz
cld
jp
lea
lret
stc
scas
imul
add
lods
or
inc
sbb
fwait
insb
jns
pop
push
inc
adc
pop
and
fmull
pop
inc
and
jns
cmp
cmc
imul
test
outsl
shr
fbld
in
or
ret
sbb
mov
rolb
mov
or
popf
or
and
test
or
xchg
xchg
hlt
adc
pushf
inc
pop
mov
cmpsl
lret
aas
je
sbb
add
sub
jnp
lcall
out
cmpl
rorl
cmp
and
cmpsb
jae
in
adc
inc
inc
cmp
test
movb
and
mov
arpl
in
loopne
stc
xor
stc
out
mov
dec
adc
dec
mov
imul
push
mov
repz
mov
test
arpl
mov
push
cmpsl
in
idivb
das
outsl
xor
stos
mov
loop
icebp
push
bound
es
lds
push
jp
das
xchg
in
aad
icebp
ret
insb
aad
cmp
es
mov
mov
dec
pop
rolb
mov
jnp
mov
and
scas
pop
push
sub
pusha
mov
xorb
jns
xlat
call
xor
paddd
mov
test
arpl
pop
clc
add
cwtl
add
inc
xchg
and
xlat
clc
insb
add
jb
outsb
aaa
push
outsb
push
ss
xchg
aam
pop
test
mov
test
inc
and
adc
pusha
dec
jp
movsl
sub
adc
or
pushf
mov
inc
mov
jae
dec
fimuls
push
psllw
add
stos
repnz
add
push
fidivs
pop
incb
xchg
es
addl
inc
mov
fistps
dec
push
in
je
daa
and
push
add
pop
or
mov
ja
or
push
dec
icebp
xchg
xor
fistpl
mov
sub
shrb
push
xor
adc
inc
jmp
inc
scas
cmp
in
pop
inc
sub
jmp
repnz
or
mov
loopne
enter
imul
iretw
cmp
out
adc
inc
xor
and
sbb
push
ret
sub
ret
fldenv
lcall
test
lea
sbb
add
lods
scas
and
mov
sub
cmpsl
jbe
sbbl
es
inc
xor
and
fmuls
push
mul
push
and
push
mov
jmp
addr16
and
xchg
test
aaa
cs
mov
dec
call
mov
lret
imul
rolb
inc
popf
dec
add
mov
push
pop
push
and
adc
stos
ljmp
ljmp
sub
xchg
data16
xor
ss
push
xchg
inc
sub
scas
stc
lds
lret
pmulhw
fs
fstpt
add
jae
fs
jno
pop
cbtw
inc
mov
jno
dec
fimull
mov
xchg
out
cltd
and
aam
lock
push
cli
push
sub
in
mov
divb
addb
mov
fwait
mov
pop
jae
fadd
xlat
clc
mov
dec
jmp
outsl
xor
lea
fldl2t
jno
mov
adc
mov
xor
je
inc
mov
jmp
fiadds
cli
pop
sbb
lock
lahf
xorl
mov
scas
je
in
sub
ljmp
or
out
jae
dec
mov
add
imul
or
jp
mov
sti
pop
and
pop
popf
mov
xor
loopne
test
in
std
stos
xor
fcomps
notb
lock
clc
into
sbb
nop
xor
imull
mov
lret
in
mov
out
ret
shr
fisttpll
cmp
jle
mov
push
mov
in
mov
push
mov
cmp
pop
pop
cmpl
mov
pop
test
test
push
rcr
fldcw
int3
sub
imul
mov
incl
cmp
mov
aaa
mov
nop
xchg
rolb
inc
sbb
ret
add
lds
cmp
xchg
movsl
ret
aas
sbb
inc
jb
dec
jnp
aad
mov
pop
loopne
popa
movsl
pop
aam
or
mov
fs
out
push
push
mov
out
sub
inc
xlat
cld
pop
jne
jecxz
sahf
test
mov
pop
adc
lds
call
mov
incb
push
jae
jbe
adc
idiv
add
cmp
jle
jns
mov
out
jmp
jmp
jne
inc
ss
sub
cmpsl
mov
adc
int3
add
ljmp
cli
push
into
ret
out
adc
add
dec
jbe
push
sbb
dec
stos
sbb
mov
jo
xor
sbbb
mov
bound
int
enter
jno
mov
add
pop
jmp
mov
in
mov
stos
push
cmp
mov
add
push
je
mov
out
and
xchg
aaa
inc
scas
imul
orl
and
mov
ret
scas
adc
or
mov
hlt
mov
push
scas
jne
fiaddl
adc
clc
cmpsb
mov
add
adc
insb
je
outsb
lret
and
inc
xor
push
mov
sti
movsl
pop
cmp
jmp
mov
bound
mov
mov
cmp
add
std
call
das
out
lock
dec
in
mov
movsl
call
fcoms
push
rclb
dec
ds
stos
fsts
cs
jecxz
out
xor
ds
jne
inc
xchg
fwait
test
mov
sahf
pop
jmp
sub
popa
and
sti
lret
in
sbb
aas
pop
mov
inc
mov
imul
fnstenv
cmp
xor
rol
fiadds
cltd
movsl
lds
xchg
inc
sbb
mov
les
rcrb
adc
ret
mov
shrb
xor
push
adc
sub
add
fbld
jo
and
out
pop
loopne
pop
xor
jl
aad
dec
stc
pop
js
stos
cld
push
or
push
push
ljmp
test
jns
jb
dec
aam
inc
cmp
push
call
adc
outsl
cmp
xor
lret
add
sbb
pop
xor
inc
addb
into
lock
xor
ss
sub
je
fs
mov
add
sub
shll
push
inc
dec
test
xchg
adc
dec
stos
dec
pop
sub
data16
pop
fwait
scas
clc
jl
xor
mov
stos
jo
sub
fisubrs
sbb
rorb
xchg
jb
jne
dec
jnp
lea
test
in
sarb
jo
sarb
jle
test
adc
xchg
in
sbb
mov
dec
dec
add
fidivl
inc
scas
pop
stos
adc
mov
mov
jne
in
lret
xor
pop
pop
sbb
push
xor
jge
sub
and
add
mov
icebp
sub
popa
bound
enter
cmp
mov
lock
inc
repnz
xchg
gs
dec
outsl
loope
roll
test
inc
mov
repnz
rcrb
or
lock
lcall
stc
aaa
mov
or
push
repz
inc
daa
aas
sbb
ret
ds
or
or
in
or
insl
adc
je
mov
aaa
shl
jno
sbb
int3
out
call
aaa
cmp
mov
cmp
mov
jo
and
push
inc
dec
ljmp
add
pop
cmp
xor
sub
mov
pop
jne
cmp
mov
enter
loopne
xchg
or
pop
pop
add
jmp
mov
sahf
ret
mov
or
fwait
ret
mov
push
inc
push
test
xchg
sub
arpl
cmp
out
pop
mov
cwtl
adcl
and
jo
mov
and
subl
popf
push
dec
popf
xor
mov
aam
mov
mov
leave
adc
inc
in
lahf
out
pop
fsubp
and
jmp
pushf
xlat
and
sbb
add
lods
cli
pop
jae
data16
mov
xchg
test
add
mov
dec
jl
and
cmp
movsl
and
dec
adc
pop
mov
fwait
imul
xor
jl
fwait
or
ss
roll
adc
movsl
cmp
lret
lods
jl
stc
xchg
push
lcall
add
into
mov
jp
and
jno
outsb
lahf
sarl
sub
fs
stc
std
xchg
test
pop
push
push
repnz
mov
xor
mov
xchg
add
and
xor
test
dec
outsl
inc
ss
pusha
repz
xlat
inc
or
cmpsb
mov
cmp
mov
mov
pusha
nop
mov
lock
lret
push
or
xor
lret
lcall
inc
sub
lret
lret
fiaddl
ja
xchg
mov
sbb
pop
dec
mov
rolb
in
mov
arpl
push
xor
lea
jle
adc
push
xchg
xlat
dec
cld
stos
mov
xchg
filds
mov
xlat
jg
cmp
rcrl
xchg
push
neg
mov
lcall
jmp
pop
add
sub
xchg
adc
es
add
ljmp
dec
cli
sbb
mov
mov
push
inc
ljmp
fisubrs
adc
fsub
dec
loopne
lcall
xchg
jg
jnp
jg
aam
shlb
insb
pushf
mov
gs
mov
jnp
mov
out
int
mov
xor
xorl
sti
or
mov
ret
xchg
mov
jb
pop
mov
out
jecxz
popl
mov
cmpsl
and
hlt
cltd
movsl
ret
mov
in
push
in
lds
lret
pop
dec
push
incl
test
push
leave
and
adc
mov
repz
addr16
dec
xchg
mov
movsb
lods
mov
cmp
adc
std
mov
in
mov
jae
out
dec
jle
lcall
mov
adc
call
sub
gs
xor
and
push
push
pop
into
pop
clc
scas
pop
lock
mov
cmc
and
in
xorb
push
lret
cli
dec
cmp
insb
mov
popa
jne
out
roll
adc
leave
pop
fists
xchg
add
sub
xor
cmp
out
push
repz
sarl
fwait
cmpsl
fldcw
adc
aam
adc
lcall
call
pop
rolb
lods
int
leave
clc
xor
jne
lret
mov
pop
push
dec
xchg
jmp
imul
inc
sbb
dec
mov
lock
shrl
cs
sbb
and
dec
mov
idivl
xchg
enter
stc
pushf
and
daa
iret
xchg
shrl
movb
fs
mov
jno
or
cmpl
push
inc
cmp
mov
sbb
cmp
sbb
out
mov
pushf
fs
test
xor
add
outsb
out
lret
mov
jle
mov
push
sub
pop
shl
xchg
out
inc
sub
xlat
test
mov
adc
xor
mov
in
test
imul
arpl
jg
outsl
icebp
cmp
das
cmp
or
repnz
andb
insb
hlt
mov
mov
add
jmp
xchg
sbb
adc
mov
jecxz
fcomps
inc
lods
adc
aam
pop
xor
imul
mov
stc
jle
cltd
pop
sti
jecxz
into
mov
fs
fisubl
add
leave
out
xor
push
out
test
pop
push
pop
stos
jbe
dec
cmpsl
mov
aaa
std
jle
and
dec
or
int3
sti
stos
cmp
push
and
mov
test
andb
cmp
jnp
push
sbb
stos
out
out
pop
leave
pop
repnz
sbb
dec
push
les
jns
dec
xor
pop
outsb
jae
sbb
repz
adc
test
aaa
mov
xor
or
fisubrl
mov
cs
mov
pop
mov
fcoml
xchg
orl
push
cli
mov
fldl
sbb
push
mov
jp
add
ja
add
sahf
push
sbb
adc
sub
insb
and
movsb
mov
stos
jnp
adc
or
push
inc
in
fsubr
shlb
cmp
sbb
lods
mov
xchg
rcl
cmpsl
lahf
loope
xor
enter
stos
adc
xlat
fdivrs
test
dec
daa
sub
lahf
and
adcb
mov
push
nop
sbb
adc
pop
push
testb
loop
lret
push
sbbb
popf
enter
loop
xor
test
loop
sub
jl
hlt
sub
push
rclb
add
subl
mov
les
jo
neg
adc
push
lret
add
and
xchg
fldenv
movsl
adc
rcrl
xchg
xchg
xor
mov
xor
rcl
sbb
or
test
cmc
loopne
jb
inc
cs
mov
ljmp
cmp
lret
and
sti
add
fimuls
in
sbb
inc
test
ja
push
loopne
shlb
and
cmc
sar
stos
mov
dec
jae
pop
mov
mov
fistpll
repz
inc
push
es
stc
ficomps
dec
sbb
int3
lea
lods
add
mov
and
push
lcall
in
stos
lods
movsl
call
inc
aam
add
mov
xchg
cmc
mov
cltd
enter
push
cmp
and
loope
adc
loopne
out
add
and
adc
xorb
gs
or
pop
rorl
mov
shrb
es
sub
movsb
es
inc
ljmp
add
cmp
outsb
clc
dec
push
add
cld
cs
fadd
mov
inc
mov
sbb
sbb
or
add
into
lock
pop
in
je
push
xchg
or
outsb
aam
mov
lods
test
clc
sbbl
in
xchg
adc
add
rcl
ljmp
insb
popf
insb
sbb
jno
push
ja
and
dec
outsl
xlat
or
dec
xchg
adc
sbb
sbb
cwtl
ja
add
and
mov
in
scas
dec
fisttpl
or
and
fistpll
in
xchg
les
push
sub
out
jno
test
xchg
fmull
sbb
daa
or
arpl
mov
sbb
pop
mov
addr16
int
or
mov
rol
or
iret
mov
pop
test
call
sub
fdivs
mov
xor
pop
jae
mov
push
lods
adc
inc
sub
sbb
es
mov
xchg
cmp
mov
sub
popf
add
cmpsl
ret
add
out
insl
in
rcrb
cld
daa
pop
xor
ljmp
cmc
into
popf
outsb
xor
adc
ds
jl
add
inc
or
pop
push
sbb
xchg
cmp
movsb
dec
and
fmull
pop
and
shll
push
loope
lods
sub
popf
push
scas
mov
mov
imul
inc
popfw
int
mov
dec
divb
and
adc
rcrb
scas
aas
add
and
scas
mov
or
sub
cld
mov
call
arpl
mov
push
int
cmp
ljmp
push
movsl
jmp
push
das
adc
out
jl
pop
outsb
mov
fidivrl
push
push
in
pop
popl
adc
clc
inc
fcom
lcall
and
test
fbld
pop
popa
bound
call
test
outsl
inc
movsb
mov
mov
lret
gs
add
imul
imul
dec
mov
pop
in
mov
rorl
adc
jno
hlt
scas
inc
mov
and
sbb
pop
add
inc
jo
mov
mov
jp
xchg
lock
mov
sub
mov
sbb
xor
adc
xchg
push
std
add
jp
mov
popa
and
xchg
rcrl
inc
andb
aad
loopne
insb
xlat
or
xlat
fidivrl
and
sub
xor
and
repz
js
sahf
shrb
mov
rep
push
pop
dec
ret
add
push
cmp
int3
cli
bound
mov
lock
frstor
push
loope
jbe
dec
xchg
cmpl
xchg
sahf
xchg
inc
inc
or
fstl
mov
fisubrl
lret
insb
cld
aaa
dec
fstpl
inc
adc
sti
mov
mov
pop
shlb
inc
cmpsl
xchg
xchg
bound
in
jecxz
mov
mov
mov
fucomp
dec
xchg
xor
nop
nop
sub
and
sbb
in
or
cmp
sbb
je
mov
pop
and
pusha
or
mov
loop,pt
gs
and
fdivr
ficoms
mov
mov
insl
test
pop
rcll
dec
cmpsl
inc
sbb
add
push
cld
mov
sub
adc
andl
insb
js
inc
jecxz
add
imul
cmp
xor
inc
cmp
out
and
sbb
push
arpl
in
cmc
mov
dec
dec
or
insb
test
hlt
mov
pop
xchg
push
aad
es
adc
add
in
and
cmp
jne
add
into
fcompl
addr16
lock
sbb
int
xor
test
std
ret
add
lock
sub
cmpsb
dec
insl
gs
nop
cs
repz
cs
mov
outsl
pop
xor
cmp
aam
bound
pop
push
scas
xchg
test
idivl
dec
add
inc
adc
mov
mov
imul
scas
pop
jmp
mov
addr16
inc
xchg
hlt
mov
add
jg
mov
xchg
push
cltd
mov
inc
pop
pop
imul
mov
xor
cld
ret
mov
lret
sub
dec
xchg
xorb
add
jmp
sbb
jmp
sbb
pop
add
sti
inc
icebp
sbb
movsb
or
loop
je
mov
stc
sub
cwtl
mov
cmp
push
adc
adc
popl
outsl
fsts
jp
cmp
dec
dec
sub
jmp
pop
mov
fldcw
test
add
scas
sub
lock
sbb
pop
mov
test
inc
lahf
sub
add
ljmp
mov
fdivs
mov
ja
sbb
inc
cmpsb
sub
pop
fidivrs
fsubl
add
push
hlt
cli
push
lods
add
sbb
cltd
out
aas
jge
in
lea
fistpll
insb
sbb
add
test
insb
sub
mov
test
pusha
andl
inc
stc
jp
popf
leave
xchg
add
lods
jns
repz
mov
mov
push
loop
mov
adc
mov
lock
mov
int3
lock
push
int3
or
in
scas
pop
test
fdiv
in
lds
inc
bound
idivb
jnp
sub
inc
lea
shrb
sub
lds
hlt
std
jno
xor
aam
pop
popf
jl
push
fdivl
mov
adc
ret
cmp
jo
xor
fcmovnbe
or
arpl
stc
mov
mov
and
scas
sahf
sub
mov
aad
pop
sbb
mov
icebp
jb
sbb
mov
and
pop
add
xor
mov
roll
sub
cmpl
add
xchg
xchg
cmp
negb
addr16
push
and
push
and
xchg
scas
rclb
imul
xchg
arpl
xchg
push
pusha
sub
aam
stos
lods
loopne
pop
jbe
sub
inc
pcmpeqw
jp
sarl
rorb
lock
xchg
pop
insw
test
adc
shll
mov
cmp
dec
inc
pusha
nop
mov
add
inc
cmpsb
movsl
and
jg
cmp
xchg
ficoml
mov
ja
dec
imulb
imul
mov
es
mov
add
dec
testb
xor
stc
or
jnp
push
jns
mov
pop
and
pusha
or
push
fisttps
xchg
jle
loopne
or
inc
jg
ja
out
cltd
mov
adc
aam
ja
mov
cmp
lock
xlat
repz
notl
jp
mov
addr16
mov
mov
in
mov
rcl
sbb
pop
inc
out
pop
push
push
repz
fidivrs
pop
fdivr
or
hlt
push
xor
push
dec
pusha
nop
xchg
jns
sub
mov
mov
int3
or
cmp
lcall
fs
fldpi
push
enter
mov
pop
sbb
jns
jecxz
pusha
or
mov
xlat
xor
push
dec
sub
mov
lea
rclb
ljmp
call
imul
push
push
in
lcall
jne
xchg
cmc
mov
cmp
xor
je
jo
adc
test
mov
or
xchg
xor
sbbl
adc
push
push
add
ja
jbe
clc
sub
lcall
lods
repz
cs
aam
cmp
lock
in
call
mov
cwtl
pop
or
inc
js
addr16
sbb
sub
sub
cmp
xchg
push
outsl
fs
mov
je
mov
push
lret
ss
test
fucomi
dec
rolb
xor
jne
push
enter
cmp
xlat
loope
clc
stc
pusha
cmc
jne
hlt
inc
pop
xor
adc
outsb
sti
and
neg
jb
shrb
frstor
mov
jae
xchg
pop
jp
mov
jo
push
rorl
aas
jbe
test
nopl
and
jmp
sub
fcoms
scas
add
jb
loop
fists
clc
mov
std
push
push
jecxz
aad
and
mov
enter
lods
insl
dec
push
or
pop
ja
sbb
pusha
pop
rcll
adc
and
callw
inc
inc
push
add
mov
rcr
cmp
iret
jge
mov
mov
pushf
scas
xchg
fwait
ljmp
dec
cmp
dec
jbe
xchg
push
ret
push
bound
ja
push
pop
xchg
xchg
rorb
fcompl
and
push
cmp
pop
ret
cmpl
call
mov
xchg
and
push
cmc
jns
lea
mov
mov
ds
mov
lret
sub
xchg
adc
xchg
cmp
sub
pusha
jmp
mov
xor
sbb
aad
xor
push
push
mov
mov
pop
and
add
mov
shlb
jecxz
rolb
mov
stos
pop
int3
inc
cvtps2pi
into
jno
cmp
cmpsb
daa
pusha
mov
mov
popa
mov
dec
mov
cmc
cs
dec
loope
sub
cwtl
movsb
xlat
sbb
push
subb
push
mov
push
insl
leave
push
push
dec
pusha
mov
adc
test
nop
int
cmp
xlat
repnz
mov
dec
mov
mov
sub
mov
lods
movsb
add
out
movsb
pop
push
repz
call
push
and
mov
mov
int
arpl
xchg
adc
lcall
cmp
add
mov
pop
inc
fldt
adc
aaa
inc
test
mov
and
lret
xor
push
movsb
mov
push
fiaddl
stc
mull
xchg
arpl
into
and
mov
jne
or
cmp
andl
or
jo
sub
mulb
cmp
fdivr
push
xchg
add
lds
aad
pushf
lea
fdivrl
jmp
mov
in
xchg
mov
add
push
pop
mov
out
xor
cmp
sbb
push
test
mov
je
mov
mov
push
mov
lods
push
pop
repnz
lea
fs
and
iret
in
lret
mov
jp
negb
push
cli
and
mov
push
pop
in
lret
and
aam
xchg
mov
sub
jmp
xchg
inc
push
sti
push
sub
and
xor
scas
std
push
jo
pop
mov
outsb
pop
in
mov
sbb
ljmp
or
int3
push
xchg
xchg
xchg
sarl
outsl
jecxz
inc
and
cld
and
push
lods
pop
add
movsb
pop
mov
mov
leave
aad
into
xchg
sbb
insb
es
pop
test
xor
cmp
insb
push
cmp
fisttpll
dec
sbb
cmpsl
stos
xchg
and
popf
jo
rol
lock
decl
dec
sub
dec
inc
jb,pt
sbb
pop
mov
pop
rol
in
ficompl
idivl
pushf
insb
and
sub
sbb
jno
xor
mov
adc
sbb
mov
jp
je
jl
outsb
arpl
jno
fadd
adc
cmp
popa
xchg
lret
lds
jmp
cltd
sbb
ja
push
push
pusha
mov
adc
out
mov
sub
and
arpl
push
push
xor
scas
xchg
out
mov
pop
pop
test
mov
inc
add
fcmovne
sub
fst
push
movsl
cmp
lods
sarl
loope
test
mov
inc
pop
sub
mov
mov
jne
jge
xchg
jl
out
mov
lret
cmp
push
and
gs
cmpsb
mov
into
push
adc
jbe
jecxz
cld
iret
inc
and
in
push
inc
rorb
mov
push
push
jne
movsb
fiadds
lods
mov
mov
push
fnstcw
jmp
fcompl
cs
hlt
push
cmp
and
stos
shrl
mov
adc
adc
push
cli
std
sub
mov
enter
lret
mov
sub
cmc
sub
fsubrl
int3
fcmovnbe
stos
fs
arpl
and
sub
xor
or
push
jecxz
dec
pop
mov
addr16
sahf
sub
sub
jo
cmp
pop
sbb
repnz
stos
scas
push
stc
mov
cmc
fcmovnbe
scas
loopew
cltd
dec
mov
cvtps2pd
lahf
loop
dec
lock
cld
jle
popa
and
add
scas
push
jne
ljmp
lahf
fs
out
pushf
bound
test
push
cmpsb
mov
add
incl
jg
xchg
insb
push
scas
push
mov
out
pusha
mov
stos
or
jbe
ds
loop
outsl
testl
popa
xor
mov
addl
adc
sbb
test
mov
ds
fisubs
dec
adc
mov
cmc
cmp
aaa
sti
repz
out
jb
mov
or
ret
bound
fdivrl
iret
imul
or
or
icebp
jae
mov
divb
and
jbe
outsb
jecxz
mov
mov
std
lods
cmc
or
mov
jg
int
in
clc
mov
mov
fildll
inc
cltd
push
jne
in
test
xlat
or
jo
cmpsb
popaw
aad
stos
lea
xor
sub
out
in
add
jmp
aaa
iret
mov
test
push
rorl
pop
mov
and
pop
cmc
xlat
xor
push
cmpsb
push
or
out
add
jmp
inc
movsb
jbe
out
loope
pop
std
mov
fsubrs
adc
shll
jae
dec
loope
push
in
adc
mov
jae
inc
fiaddl
jmp
pop
mov
inc
iret
sbb
add
inc
mov
xchg
imul
xchg
xor
inc
je
ret
negl
add
add
jp
pop
mov
xor
inc
jmp
daa
or
push
dec
hlt
pop
fnstenv
stos
mov
push
popf
cmp
bound
xchg
ret
rcrb
popf
insl
and
lds
in
adc
push
mov
jmp
mov
adc
jb
add
mov
fcompl
rolb
lahf
sti
sti
xchg
lret
rcl
cmp
push
jge
xchg
jns
gs
mov
adc
push
xor
xchg
outsb
mov
push
into
fcompl
mov
sub
iret
push
xchg
adc
jp
pushf
aam
add
es
jae
push
jl
and
xor
mov
mov
sub
mov
ljmp
sbb
xlat
into
aas
add
std
in
pop
mov
inc
test
addl
or
je
idivl
and
in
fwait
lods
mov
xchg
mov
sub
test
xchg
out
jge
inc
sbb
iret
push
xchg
aaa
mov
push
mov
sbb
dec
enter
es
inc
jmp
out
dec
jbe
mov
enter
jns
cmp
leave
and
mov
cmp
daa
xchg
lahf
in
pushf
xchg
mov
sahf
cmp
xchg
cli
sub
mov
push
dec
call
lea
dec
inc
into
push
std
mulb
mov
add
icebp
shlb
xor
popf
mov
sbb
lea
ljmp
xchg
dec
jle
mov
lret
xchg
sbb
loopne
adc
and
jns
jmp
jl
mov
pop
insl
mov
pop
ret
pop
stos
inc
fadd
xchg
pop
mov
invd
shll
jg
adc
jnp
repnz
jge
movmskps
rorl
push
lahf
adc
nop
hlt
into
loopne
or
xlat
xchg
vpunpcklwd
sbb
xor
jl
sbb
cltd
mov
push
pushf
jns
and
pop
filds
fmuls
into
pop
je
dec
jbe
lock
gs
push
sub
cmpsl
xchg
shlb
or
lret
call
lahf
scas
and
loopne
fwait
or
add
cmp
in
mov
pushf
in
bound
or
lds
ret
add
xchg
cmp
sbb
scas
xchg
xor
daa
pop
mov
inc
push
iret
jecxz
push
mov
ret
fistl
in
inc
std
xor
jg
xchg
fsubr
test
dec
mov
call
cld
push
pop
mov
hlt
ljmp
ret
push
test
sbb
jmp
ret
lret
adc
call
mov
sub
pop
dec
add
fwait
or
xor
inc
xchg
ja
out
cmp
adc
adc
lahf
mov
mov
cmpsl
and
dec
xchg
and
data16
shlb
or
sbb
test
jl
fs
adc
js
inc
jbe
icebp
rclb
loope
mov
movsl
sti
jp
movsl
jbe
push
add
mov
gs
daa
fimull
push
adc
cmc
push
pop
dec
and
xorl
jo
cmp
test
out
and
and
loope
sbb
mov
popa
repnz
fidivs
nop
fisttpll
jne
inc
lock
lret
jnp
add
movsb
mov
jl
pop
mov
test
icebp
adc
clc
mov
cmp
cmpl
test
addb
jge
sahf
xor
cmp
outsl
into
cmpsl
adc
aad
push
lea
adc
or
cli
repnz
shll
jmp
adc
pop
jbe
push
fidivs
outsl
dec
push
outsl
das
outsl
loopne
jge
and
ss
sahf
xchg
mov
into
lods
xchg
pop
push
scas
fs
iret
das
pop
gs
xchg
sti
test
clc
cwtl
cmp
xor
insl
outsb
xor
nop
mov
lods
mov
cmpsl
dec
lods
roll
addb
xchg
pop
cmc
add
sbb
push
pop
ss
or
xlat
orl
push
movsb
pop
pop
outsb
add
sahf
daa
adc
mov
jl
dec
mov
rclb
mov
repnz
mov
in
ljmp
inc
andb
push
xchg
dec
dec
sub
shrd
mov
push
cli
call
mov
cld
sbb
sub
lahf
sarb
xor
xchg
les
popa
xchg
adc
xchg
in
cmp
add
subl
mov
ja
xchg
mov
pop
pop
data16
or
loopne
fsubs
out
sbb
inc
fwait
mov
iret
rol
out
jbe
xchg
pop
scas
out
cmp
jnp
xor
ljmp
xlat
mov
xchg
cmp
xchg
mov
cld
xchg
sbb
roll
push
shrl
and
add
dec
popf
das
out
mov
test
add
pop
xor
cwtl
or
sbb
pop
push
inc
stos
pop
pop
xor
mov
mov
xlat
and
xchg
es
les
pop
loopne
push
or
in
xor
repnz
mov
jmp
jae
xor
out
stos
jbe
outsb
bound
leave
mov
shll
cs
cmp
gs
sarb
pop
cmp
mov
out
lock
pop
leave
add
mov
fcomi
loope
insb
mov
sbb
jg
mov
and
jge
loope
or
pop
dec
xchg
mov
shrb
cmpsl
outsb
xor
push
je
std
pop
jo
cwtl
cmp
int3
sti
cld
stc
rolb
cmpsb
push
sbb
push
mov
dec
mov
je
fdivrs
jae
sub
mov
in
fldenv
cli
out
and
inc
lds
dec
fcoms
inc
inc
ljmp
fucomp
dec
dec
jns
daa
iret
push
adc
mov
xchg
dec
mov
negl
xor
repnz
push
adcb
aas
xchg
xchg
mov
inc
outsl
lcall
adc
xchg
xor
add
sub
mov
clc
xchg
add
dec
insl
rol
nop
adc
lahf
gs
jle
push
cmp
push
xchg
mov
inc
mov
push
xchg
call
add
icebp
lea
push
xchg
jns
mov
imul
push
ret
cltd
jg
out
inc
dec
mov
lea
les
push
pop
mov
mov
jo
mov
mov
fs
in
fisubs
adc
out
push
movsl
jnp
and
dec
and
call
js
jle
sub
movsl
jge
aad
mov
mov
add
pop
imul
fidivs
pop
cmp
cli
xchg
jne
aam
inc
test
fcomps
dec
adc
jecxz
dec
jne
rcrl
adc
cmc
adc
pop
push
mov
inc
jbe
adc
sar
stos
add
xchg
enter
and
mov
and
into
mov
sub
pop
jno
xlat
mov
mov
imul
lea
in
dec
cmp
in
imul
inc
movb
out
in
sbb
das
pop
popa
push
movl
das
das
jl
in
mov
push
enter
sub
lods
fstl
push
inc
sbb
inc
cwtl
lahf
int3
push
sub
stos
enter
mul
bound
fisubs
adc
jno
mov
insl
sbb
jecxz
mulb
test
insl
pop
add
imul
mov
and
mov
inc
xchg
xchg
insb
cmp
sub
sub
jge
ficoms
xchg
arpl
xor
inc
push
repz
mov
testb
sbb
pop
out
sub
movsb
mov
inc
add
les
sub
and
sbb
xchg
js
dec
adc
lods
jp
cmpsb
ds
lcall
pusha
js
dec
mov
pusha
cmp
icebp
and
xor
fimuls
and
stc
pop
jns
pop
xchg
mov
cmc
jbe
push
mov
test
daa
stc
adc
stos
stos
aad
xchg
dec
or
jl
ret
das
inc
xchg
test
pusha
icebp
aam
pop
sbb
sub
popf
sbb
sub
sbb
add
mov
mov
add
in
repz
adc
iret
mov
or
sbb
mov
mov
cmp
push
pop
je
or
sbbl
and
mov
shrl
movsb
lahf
adc
push
mov
mov
pop
xchg
iret
sbb
mov
loop
aas
hlt
fstl
or
push
mov
cmp
std
push
pop
jno
jno
in
rcll
sbb
les
jmp
push
insl
adc
sbb
push
mov
push
negb
aad
xorb
sbb
xor
and
loope
inc
call
and
sbb
das
nop
out
jge
mov
jns
movsb
ret
jl
daa
mov
sarb
xchg
push
popf
pusha
subl
fldpi
pop
jns
xchg
das
xor
sub
mov
gs
pusha
jecxz
inc
add
pop
lcall
mov
add
xchg
push
sbb
and
add
and
mov
mov
movsl
outsl
push
aad
cmp
lahf
std
mov
or
xchg
or
inc
insb
enter
adc
or
sbb
jns
adc
bound
cmp
cld
sbb
jg
pop
shll
mov
out
mov
lahf
loop
sbb
shlb
sbb
jo
scas
push
xchg
ret
cld
ljmp
in
in
test
frstor
jbe
sbb
call
mov
jl
inc
xor
push
xchg
add
repz
in
mov
loope
cmp
push
imul
test
push
add
roll
negb
leave
mov
outsl
mov
push
jg
test
mov
or
test
push
pop
mov
movsb
or
arpl
loop
hlt
es
or
jecxz
shll
xchg
jmp
popa
je
pusha
adc
pop
in
aad
ja
pop
sbb
mov
pushl
adc
add
inc
add
push
in
fdivs
xor
icebp
aaa
pop
mov
stos
push
outsb
inc
mov
dec
jae
push
nop
ret
or
pop
mov
iret
push
daa
add
rcrl
nop
fstl
jnp
arpl
lods
push
loope
repz
dec
inc
mov
jno
lret
cmpb
jle
push
xchg
mov
xor
lret
lods
cmp
sarl
dec
pop
sbb
stos
aaa
int
push
dec
jnp
addb
lcall
scas
movsl
cmpl
cmc
dec
push
xor
pop
aaa
test
push
cmpsb
cmpsl
inc
pop
shlb
adc
leave
test
sbb
in
xchg
lods
sub
mov
jo
fwait
imul
inc
jae
sbb
pop
sti
mov
sbb
out
iret
xchg
xchg
push
push
popf
into
inc
sub
fstpl
stos
inc
outsl
pop
pop
aaa
xchg
push
add
xchg
lods
lahf
mov
mov
jecxz
pop
inc
and
or
lret
sbb
iret
or
push
dec
iret
pop
popa
xchg
out
mov
or
in
pop
dec
add
sbb
xlat
roll
ja
sti
nop
mov
push
je
sub
scas
jno
pop
inc
popf
mov
loope
adc
repz
sti
mov
add
sub
mov
ja
jns
scas
cld
les
or
or
lret
scas
imul
cld
mov
icebp
ret
fs
push
fwait
mov
inc
xor
repz
mov
leave
loopne
aaa
out
aam
push
jmp
add
movsl
aam
push
lods
adc
dec
imul
jle
push
pop
into
lods
fistl
iret
jb
cmp
repnz
mov
mov
cmp
in
outsl
in
cmpsl
push
outsl
sbb
fisttpl
cmp
or
push
sub
pop
lock
cmp
dec
ljmp
sub
sub
aas
xor
ds
fdivp
xor
xor
xchg
mov
lahf
adc
jge
orl
sbb
sub
setg
movsl
add
dec
insl
nopl
sub
nop
adcl
test
data16
jo
xchg
nop
jnp
bound
push
popa
lret
inc
out
pop
sub
sub
push
outsb
push
in
idivb
push
push
xor
out
xchg
sti
mov
or
push
mov
hlt
andb
loopne
into
lret
or
fldl
imul
mov
xor
add
adc
mov
insl
pusha
or
add
mov
mov
js
push
test
test
das
and
rorb
mov
push
sbb
and
insb
cmc
inc
leave
jne
cwtl
leave
cmp
and
push
or
pusha
dec
mov
lds
push
add
lds
loope
cmp
dec
dec
and
into
pop
in
inc
push
inc
lods
inc
jo
dec
inc
jl
add
and
lret
inc
pop
rorl
cli
fisttpl
mul
jnp
sub
push
jnp
mov
jp
and
ljmp
stos
cvttps2pi
xor
sub
pop
cwtl
gs
mov
fisubs
fistps
xchg
jne
inc
nop
sub
sahf
adc
shlb
add
xchg
leave
decb
test
daa
adc
push
nop
aaa
sbb
or
inc
aam
andb
in
test
push
pop
andb
push
mov
negb
mov
daa
imul
xchg
cmc
pushf
in
aaa
jg
lock
dec
les
jmp
jno
rcrl
pop
pmaxub
aas
mov
out
data16
dec
mov
jns
jne
mov
pushf
loopne
gs
scas
cs
xor
fs
mov
pop
pop
and
or
adc
pop
mov
fdivs
push
jp
out
mov
in
leave
lret
push
lcall
pop
cmp
mov
cmp
mov
outsb
sti
mov
jg
push
out
xor
fdivrs
xlat
mov
and
clc
gs
cwtl
push
scas
and
test
iret
xor
push
cmp
pop
mov
hlt
cmp
sub
dec
jno
sub
fdivrp
mov
jl
inc
jge
hlt
sub
xchg
fstpl
outsl
inc
mov
push
fisubrl
adc
aas
stc
sbb
movsb
ret
jmp
sbb
xchg
cmp
dec
sti
nop
or
add
jmp
pusha
js
lds
imul
stc
sbbl
ffree
aad
jmp
pop
outsl
mov
popa
push
ret
fbld
test
sbb
dec
fwait
lock
sbb
fdiv
in
fistpl
and
jns
addr16
jmp
je
pop
into
mov
es
jne
fisttps
push
lret
testl
push
add
loope
mov
popa
sub
js
repz
cmp
ss
mov
in
sbb
addr16
outsb
test
lock
xchg
lods
push
sbb
shlb
cmp
mov
sbb
jns
cltd
divl
outsl
push
lds
pop
mov
fsts
popa
ror
mov
ror
popf
dec
cmpsb
cmp
cli
jnp
push
iret
out
into
xor
cmp
jne
cld
repz
dec
test
aad
push
jns
arpl
std
xchg
push
movsl
mov
testl
add
add
cmp
jmp
push
sub
push
ds
inc
mov
cmpsb
adc
icebp
inc
sub
lahf
pop
add
out
xchg
or
push
aam
aam
mov
jp
push
inc
push
push
lods
je
sbb
pop
out
xlat
dec
mov
dec
cmp
xor
xor
bound
jg
mov
or
cmpsb
repz
push
sub
les
scas
dec
dec
cmpsl
push
push
ljmp
daa
orl
mov
test
pop
and
sub
push
int
and
lds
std
in
fsub
cli
jbe
jns
sub
cmp
scas
das
out
mov
pop
xchg
xor
aad
cs
inc
js
jg
jp
out
rorl
jl
sbb
sub
mov
scas
push
adc
push
in
popf
pop
sbb
pop
cmpb
sub
stos
jns
lods
addb
fiaddl
adc
dec
or
mov
and
jecxz
imul
loopne
adc
pop
xor
test
int3
popa
icebp
mov
dec
mov
bnd
arpl
call
mov
call
lcall
push
fcomps
imul
xchg
jl
negl
adc
fwait
add
dec
insb
dec
fcoml
stos
aas
pop
loope
push
dec
pop
xchg
xchg
gs
xor
jge
cmpl
aaa
ret
mov
sbb
push
fildl
jns
cs
stc
cs
mov
dec
inc
loop
in
inc
test
dec
sbb
movsl
xor
std
inc
jge
mov
push
test
jle
lds
iret
mov
leave
test
dec
jnp
jmp
adc
insl
rcrb
sbb
pop
in
push
xor
pop
movb
inc
leave
mov
sbb
jecxz
iret
insl
xchg
mov
ss
cmp
mov
sub
cwtl
aam
dec
arpl
adc
xchg
hlt
shll
call
mov
movsb
push
test
mov
dec
fwait
jp
xchg
inc
fcmovbe
mov
mov
push
mov
call
push
stos
imul
repz
insb
jge
fists
test
adc
push
mov
outsl
cmp
fcoml
push
pop
dec
cmpsb
sbb
fwait
pop
push
jg
and
popf
addb
push
into
inc
rcrb
icebp
mov
add
add
lret
in
xchg
add
out
mov
cmpsl
decl
lods
xor
cmp
mov
sub
mov
pop
xor
imul
into
add
xchg
movl
sarl
repnz
push
cmpsl
pop
pop
xor
imulb
cwtl
cmpsl
jbe
scas
or
mov
sbb
aas
inc
push
mov
jne
imul
push
dec
add
ljmp
shl
xchg
mov
repz
and
fisubs
mov
jo
in
nop
out
cmp
inc
mov
add
cli
test
and
cwtl
xor
mov
mov
lods
ret
mov
shlb
push
pop
pop
jne
dec
les
cs
mov
add
adc
js
cltd
enter
std
jl
push
cmp
das
les
lods
enter
das
or
xchg
lods
sbb
sahf
aam
adc
jl
adc
fs
mov
fsubp
outsb
sbb
loopne
sub
lea
sarb
inc
mov
movsl
int3
pop
fs
cwtl
push
pop
xlat
jne
lahf
in
stc
cmp
testl
adc
cmp
dec
dec
pop
into
pop
arpl
adc
pop
dec
mov
das
int
in
cltd
hlt
jae
xor
ja
mov
dec
sbb
lea
sbb
xchg
fdivrs
sbb
fwait
sbb
les
ljmp
push
mov
in
stc
sub
adc
pop
pop
jmp
cwtl
stc
dec
or
ds
insl
call
mov
xchg
mov
pop
jnp
push
mov
mov
dec
jmp
sub
adc
jp
fs
cmc
js
ljmp
sbb
aaa
adcl
xchg
and
pop
cs
pop
les
mov
xor
test
xchg
inc
mov
sti
loop
les
rcll
sti
fsts
movsl
dec
inc
loopne
imul
test
bound
jne
enter
or
leave
mov
out
jbe
lds
adc
dec
data16
add
fldcw
mov
out
add
fidivl
jge
ret
loope
inc
out
xchg
lahf
push
push
cmp
mov
lret
das
gs
add
mov
stos
pop
mov
mov
sub
adc
adc
push
mov
dec
jns
push
xor
fildl
add
adc
fisubl
xchg
mov
xchg
mov
insl
sbb
adc
das
jecxz
adc
push
loop
in
rorb
test
stc
jle
lods
lock
pop
dec
dec
push
enter
xchg
mov
mov
out
ror
call
xor
fdivl
push
sbb
mov
neg
das
inc
dec
push
inc
mov
insl
cmp
popf
test
loopne
in
aam
add
aas
or
mull
dec
push
fs
test
pop
inc
loopne
mov
popa
sahf
dec
push
lods
fidivrl
rcl
dec
mov
js
sti
adcl
add
xchg
mov
call
pop
cmpsl
js
or
inc
mov
sbb
or
inc
fists
fistps
sarl
or
inc
mov
jge
xchg
daa
push
jg
adc
aad
sub
rcll
xchg
lock
sub
sarb
jmp
cmp
dec
cmc
or
test
test
incl
fiadds
or
pop
push
test
or
das
imul
push
lcall
mov
mov
je
xor
xor
jo
jl
dec
inc
ljmp
bound
clc
das
out
xchg
cmp
std
jl
sub
fwait
sti
sbb
scas
push
jge
loop
push
sahf
cs
js
pusha
fistl
jmp
repnz
sbb
and
mov
aam
jbe
fsubs
adc
cmp
out
cwtl
push
out
fs
addl
imul
mov
push
mov
xor
roll
mov
or
dec
cs
addr16
push
mov
or
xor
imul
fcmovne
out
and
jl
in
leave
mov
scas
sbb
dec
cmp
test
scas
sub
xchg
jl
pop
jecxz
jecxz
stos
or
sbb
cs
add
dec
xchg
pusha
xchg
xchg
cmpsb
push
loope
xchg
or
roll
sbb
stos
sti
cmp
lea
sub
xor
mov
cmpsb
cmp
daa
lds
mov
pushf
and
nop
pop
leave
xor
das
aad
xor
inc
mov
rclb
mov
cmc
xchg
fsts
iret
mov
mov
imul
dec
call
mov
jl
icebp
cmp
dec
clc
ret
mov
repz
xor
or
jne
add
cmp
xor
add
jne
rorl
xchg
and
imul
push
sar
add
pop
mov
sub
cmp
dec
add
or
xor
loope
imul
out
lcall
testb
or
movsb
sub
mov
inc
cmc
movsl
scas
pop
test
fs
push
test
loop
gs
clc
iret
mov
adc
xor
and
and
xchg
addb
shrb
pusha
xchg
mov
push
mov
sub
or
jl
jno
mov
add
add
je
xorl
shll
into
mov
std
pusha
adc
adc
push
cld
ljmp
je
mov
mov
jecxz
fwait
rolb
mov
xor
lret
adc
daa
add
pop
inc
xor
jle
mov
dec
lock
enter
stos
jp
cltd
les
pop
dec
adc
movsb
xor
es
xor
jecxz
xor
clc
leave
aaa
lods
add
test
push
lcall
adc
pop
adc
xchg
sub
cli
pop
mov
inc
mov
repnz
or
mov
insl
cmpsl
or
adc
inc
cltd
cmc
rcll
rcr
add
xchg
roll
dec
je
add
jg
push
jg
ss
mov
popa
xor
mov
adcb
jo
add
in
adc
mov
es
data16
and
sbbb
jmp
outsb
negl
insl
xor
in
cmpl
dec
ficoms
sbb
cltd
add
imulb
or
mov
int3
xlat
movsl
mov
inc
sbb
or
