jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
cmpsl
inc
add
or
mov
mov
xchg
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
outsb
sahf
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
cmpsb
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
test
cmp
movsb
inc
add
cmp
xchg
inc
add
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
xor
shr
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
mov
add
add
push
and
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
and
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
push
push
call
mov
add
lret
add
fwait
add
add
add
mov
lds
mov
fadds
fistl
jle
movsb
xchg
pusha
stos
add
mov
ffreep
xlat
add
add
pop
lret
cwtl
pop
pop
movsb
xchg
mov
pop
int3
pop
jno
add
mov
add
imul
out
out
add
add
jge
add
add
scas
into
add
add
mov
cmpsl
xchg
add
add
sahf
xchg
add
loop
fcomp
lds
fildl
shrl
add
add
fdivrl
fs
flds
testl
push
push
out
in
add
xchg
in
jp
add
ljmp
xchg
out
pop
add
add
mov
add
faddp
hlt
push
mov
add
push
push
lea
push
push
push
lea
push
call
popa
add
scas
ret
add
data16
add
add
fdivrp
int
popw
jge
push
xlat
out
outsl
add
add
js
lret
add
test
add
loopne
add
addr16
add
mov
mov
mov
add
fstpl
xchg
add
add
add
popf
jecxz
add
add
mov
imul
cwtl
add
test
mov
xchg
pushf
push
mulb
loopne
mov
lea
pop
movl
push
lea
push
push
push
push
push
push
push
push
push
call
jns
add
mov
add
xchg
add
add
add
add
popa
add
scas
push
stos
add
add
jno
add
gs
push
add
add
add
mov
addr16
scas
mov
add
add
add
iret
test
icebp
mov
add
add
scas
add
pop
popl
push
push
push
push
push
push
call
fcmovnbe
add
add
add
mov
aad
xchg
add
aad
cmpsl
add
mov
xchg
rclb
add
mov
mov
test
add
pop
push
pushf
push
imul
out
xchg
add
js
add
add
lcall
xchg
add
leave
add
lret
mov
rolb
std
testl
sub
cli
add
pop
mov
fmull
push
call
push
push
call
lret
xchg
add
bound
int
test
xlat
data16
add
call
add
iret
xchg
movb
lods
add
xchg
add
movsl
mov
add
add
jb
add
jl
push
xchg
add
push
add
jnp
mov
push
add
lods
add
pop
cld
add
stc
icebp
mov
mov
lea
pop
call
push
push
call
ret
add
add
cmpsb
add
mov
add
mov
icebp
add
add
mov
rcr
push
add
pop
add
xchg
add
testl
add
xchg
jne
add
add
add
push
cmc
call
pop
xchg
std
movsb
mov
jmp
add
pop
xlat
add
add
add
pop
push
push
push
lea
push
call
pop
add
add
add
imul
add
add
ja
in
movsl
add
cmpsl
xchg
add
hlt
add
fucomi
add
sti
add
add
jle
add
test
xchg
xchg
int
movl
add
mov
add
aam
addb
jo
add
add
cmpsb
mov
add
add
into
xchg
in
std
xchg
flds
mov
add
icebp
add
int3
lea
pop
call
jmp
ret
push
push
push
push
push
push
push
push
call
add
add
add
jecxz
iret
add
xchg
add
mov
pusha
add
push
scas
add
push
add
add
add
ljmp
test
sarl
mov
push
add
ror
push
add
mov
fiaddl
fildl
push
imul
add
scas
pop
jge
add
movsl
mov
lea
pop
mov
mov
add
push
push
push
lea
push
push
push
lea
push
push
call
xchg
mov
aad
pop
lea
mov
add
test
add
out
add
mov
rcrb
lret
roll
popa
std
jle
cmpsb
add
loop
jge
fdiv
add
cmc
xchg
pop
lahf
popf
add
add
pop
add
xchg
fucom
xchg
mov
add
add
mov
mov
add
add
repnz
push
push
add
add
aam
bound
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
negl
addl
mov
pushf
lret
add
gs
out
rolb
add
test
mov
add
lahf
add
add
aad
add
add
add
jp
add
mov
jo
testb
add
shll
add
add
add
add
push
loop
movsb
mov
lea
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
push
lock
add
add
add
rclb
add
pop
mov
lods
add
bound
xchg
add
stos
add
in
out
fldl
push
mov
pusha
jecxz
movl
imul
andb
add
pop
out
mov
fdivr
imul
lock
shll
dec
push
push
lea
push
push
push
push
call
jecxz
shl
add
ja
ja
leave
mov
pop
fidivl
add
add
roll
sahf
fcomps
jp
cmc
rorb
xchg
add
pop
add
add
add
add
add
add
js
mov
mov
imul
in
mov
roll
push
add
add
mov
add
hlt
add
mov
imul
lea
pop
add
push
push
lea
push
call
popa
fdivs
push
ljmp
into
add
jae
je
popf
push
add
js
frstor
movl
stc
pop
add
cld
mov
cld
pop
flds
pop
insb
iret
mov
jne
add
add
mov
rolb
lods
add
popl
mov
add
ljmp
jne
jmp
mov
clc
add
iret
add
add
add
add
add
add
add
lea
pop
call
push
push
lea
push
call
rorl
add
addl
add
fwait
add
xchg
mov
clc
add
jnp
loope
add
addl
fisttpll
add
add
add
out
cmpsb
xchg
fldcw
pop
xchg
add
lds
movsb
leave
rorl
mov
mov
add
testb
mov
roll
rorb
mov
xor
push
push
inc
push
or
inc
add
shl
sub
inc
pop
xor
shr
pop
push
lea
push
push
call
add
imul
add
stos
fwait
cld
popf
test
add
add
out
repnz
test
push
jmp
lahf
mulb
add
mov
mov
popl
add
add
add
add
add
pop
sahf
add
into
test
add
rol
pushf
in
out
or
add
add
add
loopne
add
add
add
gs
lea
pop
pushl
push
push
push
push
push
push
lea
push
call
cltd
add
jl
add
out
jp
add
xchg
in
jno
add
add
add
add
addb
fs
mov
add
add
add
mov
out
lea
add
hlt
mov
jge
rcll
icebp
roll
int
icebp
test
into
int3
push
pop
mov
add
popa
xchg
icebp
mov
lea
pop
call
mov
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
aad
fistps
mov
add
jbe
jno
add
addr16
mov
add
add
mov
stc
ffreep
sbbl
lds
enter
test
xchg
add
add
les
push
pop
xchg
mov
add
jp
jl
add
add
add
mov
add
add
add
cwtl
add
add
out
mov
jmp
out
clc
add
repnz
lea
pop
movl
lea
push
push
lea
push
push
push
push
push
push
push
call
jne
add
insb
arpl
push
pop
add
add
xor
in
xlat
xchg
pop
insb
xlat
repnz
je
loop
mov
fnstenv
add
test
out
xchg
push
movsl
pusha
cmc
add
loopne
je
add
test
jmp
add
add
mov
mov
pop
test
sarl
add
add
add
add
fistl
mov
add
mov
mov
lea
pop
pushl
pushl
push
push
push
push
lea
push
push
push
push
lea
push
push
call
les
call
add
les
add
pushf
add
add
xchg
add
mov
add
lods
add
filds
arpl
add
jo
popa
mov
testl
push
lret
insb
push
fstp
add
add
add
xchg
mov
add
pushf
ljmp
call
pushl
pushl
push
push
push
lea
push
call
test
push
loope
scas
push
mov
test
add
mov
test
push
add
jle
add
leave
add
add
add
xchg
mov
push
movsb
nop
in
mov
add
into
pop
add
rolb
add
jge
add
lahf
add
cli
add
idiv
mov
add
add
mov
add
add
mov
jmp
mov
push
sahf
add
mov
lea
pop
call
push
push
add
add
dec
push
sub
add
sub
not
shl
pop
xor
sub
xor
pop
push
push
push
push
push
push
push
push
push
call
std
pop
ret
jp
js
pusha
jmp
clc
add
repnz
jecxz
bound
rolb
push
add
add
add
jb
movsl
nop
add
hlt
add
add
jno
cmc
jmp
add
popa
aam
push
aam
imul
pop
xchg
cwtl
push
lcall
les
pop
add
add
push
xorb
add
jecxz
hlt
add
int
fmull
jne
push
push
push
call
add
xlat
addb
cmc
xchg
mov
mov
divl
rclb
add
je
aam
pop
ljmp
add
loope
add
add
add
fisttpl
aam
je
sahf
add
add
aad
pop
add
outsl
add
std
ja
add
test
std
add
add
lods
lahf
add
int3
test
add
pusha
or
call
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
pushf
cltd
mov
add
test
push
mov
test
add
lea
sahf
add
add
pop
jo
add
pop
jle
stos
jno
lods
lret
pop
ret
in
mov
in
mov
into
add
mov
add
cwtl
lahf
add
add
add
pushf
stos
pop
add
add
push
add
add
flds
cli
add
in
mov
lea
pop
push
push
push
shl
sub
shr
push
sub
add
sub
lea
inc
sub
dec
pop
add
pop
push
push
push
push
push
lea
push
push
push
call
sahf
add
into
add
add
cmpsb
add
jbe
add
mov
mov
ret
add
roll
mov
in
imul
into
fdivrs
jno
fimuls
lea
add
test
add
add
add
mov
loopne
addl
popl
fildl
pop
xlat
fiadds
cmc
xchg
mov
lea
pop
push
push
push
push
lea
push
call
mov
cli
in
xchg
mov
add
add
test
add
lods
out
nop
add
in
add
test
in
rolb
add
add
jne
xchg
loope
add
pop
mov
movsl
mov
jne
add
add
icebp
add
jbe
add
popf
jbe
test
jmp
out
mov
aam
bound
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
mov
cld
add
lahf
mov
aad
lret
clc
add
mov
add
test
add
mov
jbe
add
add
xchg
add
push
add
pop
add
push
add
movsl
sar
add
add
test
in
lret
je
push
jo
cmpsl
push
jl
mov
lea
pop
call
push
push
push
lea
push
lea
push
push
call
insb
xlat
jne
outsl
movsb
js
mov
add
add
in
in
mov
pushf
add
aad
orl
mov
cwtl
add
add
mov
add
pop
add
mov
xchg
add
mov
ror
add
xchg
add
cmc
pop
add
clc
js
in
pop
pop
add
xchg
pop
popl
icebp
mov
rolb
arpl
mov
add
add
pop
mov
push
push
push
lea
push
push
call
mov
add
xchg
add
add
push
add
insb
movb
mov
add
jb
add
push
mov
pop
add
add
add
add
pop
add
add
mov
movb
mov
push
xchg
jno
imul
fisttpl
add
repnz
scas
stos
in
pop
pop
xchg
bound
not
stos
add
xchg
cmpsb
orb
push
push
push
push
push
lea
push
lea
push
push
push
call
fcompl
mov
add
xlat
cwtl
add
add
add
add
mov
add
lock
add
add
fadds
add
scas
add
outsl
add
add
add
mov
add
add
xchg
out
mov
add
add
add
push
sahf
jo
push
popl
leave
scas
repnz
incb
mov
les
pop
in
add
push
lea
push
call
popa
leave
add
add
pop
cld
add
mov
add
mov
add
add
testb
mov
add
scas
add
add
add
add
cli
lea
push
add
clc
popf
roll
aad
add
loopne
add
lock
mov
add
xlat
mov
add
mov
fisubl
push
insb
test
xchg
xchg
mov
add
leave
add
pop
add
push
lea
push
push
call
add
add
mov
in
clc
add
imul
add
add
add
data16
mov
add
idivl
add
movsl
add
test
add
add
test
pop
add
add
les
lock
mov
add
mov
add
add
add
jno
add
into
add
pop
add
push
push
push
push
lea
push
push
call
in
lds
add
std
test
xchg
jecxz
sti
jmp
xchg
in
jnp
mov
lret
cmc
push
fwait
add
mov
add
xchg
js
fwait
test
add
rcr
cmpsl
mov
ffreep
std
add
add
pop
out
leave
icebp
add
mov
push
add
add
add
xchg
jo
pop
fisttps
pop
mov
push
push
push
push
lea
push
push
push
call
add
add
mov
ljmp
mov
mov
mov
enter
add
push
add
add
clc
sti
fiaddl
std
jo
pop
roll
add
add
add
add
add
push
jmp
add
mov
add
jae
arpl
add
stos
add
xchg
add
nop
pop
lahf
stos
xchg
bound
xchg
mov
sbb
xor
push
push
push
lea
push
call
int
cmpsb
aam
jmp
add
add
add
add
fcmovnb
add
mov
xchg
ror
movb
test
add
js
lea
mov
mov
add
add
mov
stc
pop
stos
int3
lods
add
add
lock
jbe
int
add
add
push
pop
jmp
push
adc
les
push
push
push
push
push
lea
push
push
call
popa
add
add
xchg
pop
bound
pop
scas
add
mov
jns
shrl
add
cmpsl
data16
pop
xchg
add
mov
add
mov
jge
fsubrp
rcrb
lods
xchg
add
add
add
xchg
add
add
add
add
flds
lock
mov
fidivs
add
cld
lea
pop
add
push
lea
push
lea
push
call
add
subl
add
lods
in
push
bound
add
repnz
add
add
jle
add
jl
jb
pop
add
mov
lock
lahf
fcoml
add
mov
movb
fsubr
jns
enter
lods
cmp
insb
mov
loop
imul
addl
add
add
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
lods
add
test
popf
ljmp
popl
mov
mov
icebp
push
int
add
cld
neg
mov
stos
add
jmp
push
mov
les
les
shl
push
lds
test
movsl
add
out
add
add
addl
lea
aam
add
loop
add
add
mov
xchg
pop
mov
xor
add
push
push
push
push
push
push
push
push
push
call
add
scas
test
add
jmp
add
mov
lret
jb
hlt
add
fidivs
pop
add
add
add
add
test
repnz
add
add
insb
sarb
int3
mov
test
add
jp
add
push
roll
add
iret
int
jns
in
add
addr16
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
neg
add
call
testb
add
pop
jns
mov
add
cltd
add
outsl
fdivl
add
mov
mov
bound
cld
bound
add
add
sahf
fstpl
pop
jne
add
stos
fwait
add
fdivr
add
incb
stos
add
int3
lea
pop
mov
push
push
lea
push
push
push
push
push
call
mov
sarb
jb
jne
mov
jl
add
jns
lret
mov
add
pop
jl
roll
cli
xchg
mov
add
lcall
test
fiaddl
scas
jle
add
pop
add
scas
jp
addb
fcmovnb
add
xchg
add
add
mov
pop
mov
cld
lea
pop
xor
push
push
push
push
push
call
mov
pop
push
add
push
add
add
mov
push
mov
pop
jo
out
inc
js
adc
cmpsb
add
add
stos
cmpsl
add
icebp
jge
addl
aam
add
add
je
jns
add
add
jecxz
fadds
shll
sahf
int3
addb
add
hlt
lea
pop
add
push
push
push
push
call
je
add
add
jbe
pop
xchg
xchg
in
pop
sahf
jno
roll
icebp
mov
add
push
add
add
stos
sar
not
filds
add
add
xchg
pushf
pop
add
add
into
add
add
cmpsb
iret
add
lret
add
add
test
addr16
add
out
data16
pop
mov
lea
pop
push
push
push
push
push
push
call
jae
add
sti
sbb
add
jp
add
mov
jge
addr16
insb
add
pop
lods
pushf
push
add
mov
out
std
pop
add
add
add
stos
lds
push
lods
jae
xlat
add
mov
push
jecxz
add
mov
add
in
int3
add
in
pop
add
add
add
mov
roll
bound
add
pop
mov
cld
lea
pop
mov
push
push
push
lea
push
push
call
mov
adc
mov
push
out
add
fdivs
add
push
add
add
add
nop
mov
add
jecxz
add
loop
add
pop
jae
movsb
add
sub
mov
loopne
add
test
movsl
add
leave
ja
nop
add
add
add
cmpsb
xchg
mov
add
mov
add
add
add
pop
xor
push
push
push
push
lea
push
call
mov
int
cltd
int3
ljmp
fdiv
jno
add
loopne
push
aam
xchg
out
ror
loop
add
add
loopne
add
stos
add
mov
mov
leave
fistl
hlt
push
add
sarl
jmp
add
jecxz
add
xchg
add
add
pop
push
icebp
add
add
js
pop
mov
adc
add
sub
push
push
push
lea
push
lea
push
push
call
lahf
pop
mov
add
addl
add
add
mov
add
clc
add
sti
repnz
testl
loopne
ja
add
add
bound
nop
push
mov
js
mov
cwtl
add
sarl
out
add
add
add
mov
add
add
lea
pop
pop
rep
pop
push
lea
push
call
jb
mov
add
add
mov
insb
ja
stos
add
add
fadds
add
mov
mov
incb
add
cmpsl
add
push
mov
popa
movsl
clc
insb
add
ljmp
leave
add
add
ljmp
lds
jns
add
icebp
add
add
call
add
mov
add
stos
jo
fmull
pop
mov
add
add
push
push
lea
push
push
lea
push
push
lea
push
call
add
lahf
mov
negb
in
pop
std
in
mov
add
pop
add
mov
add
mov
cli
ficomps
sbbl
popl
test
lret
add
test
lods
add
add
lahf
add
jl
scas
mov
mov
mov
imul
jmp
mov
fs
add
pop
lds
add
les
ret
popf
push
add
push
lea
push
call
add
mov
push
jge
add
jnp
incb
stc
mov
ja
add
add
mov
push
xchg
and
mov
add
aad
shll
jl
add
bound
xchg
add
push
rolb
into
push
enter
leave
pop
mov
lods
in
add
jnp
add
xchg
add
add
in
add
cltd
mov
out
rorl
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
bnd
add
insb
ja
imul
add
push
mov
xchg
add
out
add
add
add
add
fcomi
movb
mov
add
add
mov
add
add
out
pop
in
aad
add
add
int3
add
aam
cmpsb
xchg
add
nop
pop
push
add
addr16
add
add
add
add
add
add
mov
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
call
test
add
push
add
add
add
mov
les
in
int3
add
jnp
add
push
addb
add
jne
add
jno
gs
add
add
cmpsb
mov
add
add
out
jns
arpl
add
mov
add
add
insb
sarl
mov
shl
icebp
bound
add
jecxz
popf
xchg
iret
add
add
jmp
mov
lea
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
fs
loop
add
fistps
cli
mov
add
jmp
mov
add
ja
lret
jb
pop
add
push
std
mov
sahf
faddl
jnp
add
mov
add
std
add
add
in
add
stos
loopne
jne
add
enter
add
add
jp
push
faddl
mov
in
stos
movsl
add
pop
mov
xor
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
gs
in
add
imul
add
jae
add
int3
add
repnz
faddl
testb
add
fistpll
mov
add
add
add
shrl
sti
adcb
pusha
jmp
jl
mov
add
add
add
xchg
test
add
scas
mov
add
add
add
mov
mov
push
lea
pop
xor
push
push
call
add
lock
add
add
jae
add
stc
add
add
test
cmc
add
add
add
jne
add
aad
jmp
add
mov
add
add
popa
mov
stc
mov
mov
mov
add
add
xor
mov
add
jae
pop
flds
add
add
pop
add
push
push
call
xchg
roll
add
lahf
xchg
add
add
fdivr
movsl
mov
jb
call
xchg
add
add
hlt
test
lcall
shrl
cwtl
add
lcall
add
sti
in
mov
add
popf
faddl
cld
add
pop
mov
pop
add
testb
xchg
test
mov
lea
pop
add
push
push
push
call
popf
add
add
add
jno
add
add
mov
jne
sahf
add
xchg
add
pop
cmc
cltd
mov
push
movl
add
jns
add
cmpsl
add
add
jecxz
popa
filds
out
clc
mov
add
xchg
mov
mov
nop
cwtl
gs
arpl
jae
mov
add
mov
jmp
add
test
cmpsl
scas
mov
lea
pop
add
mov
push
push
dec
xor
push
push
pop
add
lea
shr
sub
lea
sub
pop
lea
rol
inc
ror
pop
push
push
push
push
push
push
push
push
call
add
ficompl
mov
popf
jl
mov
testb
mov
add
cwtl
mov
add
add
pop
scas
jb
add
add
add
add
jecxz
add
flds
rolb
add
int
mov
nop
add
jge
mov
xchg
add
call
mov
lea
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
call
add
mov
add
xchg
add
pop
add
jns
mov
add
lea
lods
mov
pop
pop
sahf
push
ficompl
add
cmpsl
mov
add
sti
mov
pop
mov
lcall
add
add
bound
icebp
xchg
mov
incb
jmp
add
cld
testb
sti
std
add
sahf
into
jno
push
xchg
out
icebp
ja
add
add
scas
mov
lea
pop
push
push
push
xor
inc
lea
inc
push
sub
add
lea
sub
ror
rol
not
pop
ror
add
sub
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
roll
pop
lret
mov
addl
pop
outsl
rolb
addr16
jno
fiaddl
add
jge
jp
xchg
ljmp
fistpl
out
add
imul
mov
iret
cmpsl
add
stc
cld
movsl
xchg
add
pop
addl
xchg
add
out
cwtl
jmp
add
roll
mov
add
pusha
and
push
push
call
push
push
push
push
push
push
lea
push
push
push
call
add
jae
pusha
push
add
lcall
xlat
add
add
add
loop
add
addr16
add
nop
pop
add
add
stos
mov
mov
nop
sti
cmc
rol
add
icebp
add
pushf
mov
lea
add
enter
add
pop
add
xchg
add
repnz
mov
add
js
mov
add
pop
mov
push
push
push
push
push
call
jnp
repnz
movsl
stos
push
add
add
add
lea
jmp
add
add
movsl
pop
mov
flds
jb
add
add
movsl
add
mov
ja
pop
adcl
hlt
mov
push
bound
add
fwait
pop
out
popf
push
add
add
add
int3
cltd
add
int3
lea
pop
mov
add
add
push
push
push
push
push
push
call
movsl
lock
enter
jp
testl
shlb
push
add
ja
cli
add
test
xchg
add
mov
int3
fiadds
add
mov
add
mov
xchg
xlat
pop
sti
mov
lahf
sarl
add
cmpsb
mov
sahf
aam
addl
lods
mov
lea
pop
add
push
push
push
call
add
mov
add
pop
add
cmc
add
add
jno
add
imul
add
jge
add
pop
jge
stc
add
add
pushf
addb
aam
jp
add
xchg
add
popa
bound
addl
add
add
stc
add
pop
cld
sti
xlat
add
push
leave
mov
lea
pop
mov
xor
push
push
push
push
push
push
call
enter
popf
test
push
mov
sub
lods
into
int3
add
add
add
out
lahf
sti
les
add
add
out
jnp
imul
push
add
in
lods
add
push
cli
fucomp
imul
mov
popf
gs
add
xchg
addb
shl
bound
add
je
lock
lea
pop
add
push
push
push
lea
push
lea
push
call
call
lea
insb
add
add
arpl
add
add
add
jnp
scas
add
stos
cltd
hlt
lcall
add
cld
add
mov
add
out
imul
add
add
xchg
mov
xchg
add
mov
faddl
je
add
pop
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
lock
mov
icebp
mov
fwait
mov
nop
idivb
jb
jecxz
xchg
icebp
xchg
cmpsl
jge
add
add
in
pusha
add
jl
mov
add
jb
pop
mov
mov
add
repnz
add
add
add
pop
mov
xchg
add
lret
int3
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
bound
add
in
add
add
push
jno
add
add
mov
add
xchg
mov
popl
jl
jge
fstl
andl
mov
mov
add
add
in
testb
mov
fistl
insb
add
and
add
mov
lea
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
xchg
lea
mov
loop
add
cmpsb
mov
add
add
mov
add
arpl
xchg
int3
add
mov
add
lcall
js
stos
lret
cmpsb
mov
pushf
movsb
loope
pop
std
add
insb
clc
mov
xchg
pusha
test
test
mov
add
stc
add
add
xchg
js
mov
cld
lea
pop
add
add
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
add
push
mov
roll
add
lret
add
andl
add
mov
add
pop
add
add
rcl
addl
jno
add
fidivrl
add
into
add
insb
push
popf
mov
pop
jp
add
cld
test
add
scas
fwait
add
jbe
outsl
movsb
jae
insb
ficoml
mov
shr
add
pop
pop
mov
push
push
push
push
call
xchg
add
add
add
add
add
shl
insb
xorl
xchg
lret
sti
int
add
add
data16
add
test
add
sahf
pop
add
mov
adc
jne
push
mov
xchg
pushf
call
add
fst
jns
addl
popf
aam
mov
lea
pop
xor
push
push
push
push
push
call
push
add
mov
add
push
cmpb
add
add
lea
arpl
push
mov
loope
xlat
pop
add
add
xchg
nop
jp
add
add
add
add
jmp
add
mov
xchg
add
test
lret
add
add
add
add
popf
add
aad
ljmp
add
popa
adc
add
push
push
lea
push
push
push
push
call
imul
mov
in
pop
add
imul
lcall
sar
std
add
cmpsl
mov
mov
out
movsl
ljmp
add
jb
pop
lock
popa
add
push
xchg
movsl
repnz
add
add
fwait
ja
add
add
in
jb
loopne
negb
add
add
jns
popa
shll
jne
lods
mov
add
cld
mov
bound
pop
rep
push
dec
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
push
fwait
jge
add
jp
lods
add
add
add
mov
sahf
add
push
add
call
push
andb
iret
jecxz
add
sarl
xchg
xchg
add
pop
fildl
push
xchg
add
nop
imul
add
mov
andb
xorl
enter
push
mov
fadds
add
mov
lea
pop
xor
push
push
push
call
add
cmpsb
mov
add
data16
add
stos
lret
add
mov
mov
lods
in
jne
sti
mov
pop
add
mov
add
jle
not
fisubl
add
scas
push
int
jae
sti
add
pop
add
jp
lret
xchg
add
fstl
add
ja
out
enter
mov
lea
pop
add
push
push
push
push
call
add
add
xchg
add
fiadds
jne
add
add
scas
add
cli
xchg
mov
push
mov
hlt
fimull
jecxz
pop
filds
xorl
pop
add
int
add
jne
fwait
add
cbtw
lret
sti
out
imul
ja
pop
add
xchg
int3
add
xchg
mov
add
add
add
add
add
mov
lea
pop
or
je
push
push
push
push
call
add
aad
icebp
rcrl
jne
add
add
add
pop
lock
lcall
pop
les
add
addl
add
add
insb
add
lret
add
jno
fs
add
mov
pop
std
xchg
pop
jecxz
jbe
mov
nop
out
add
lea
add
add
add
add
pop
rclb
fstl
add
xchg
cltd
mov
les
jae
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
loopne
mov
add
add
out
roll
add
jmp
pop
cwtl
mov
sarb
add
add
jge
xchg
add
add
add
mov
add
les
add
add
roll
cmpsl
add
add
fists
add
add
into
add
sahf
aam
mov
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
call
add
add
movsl
push
fiadds
fldl
xchg
gs
scas
pusha
add
cmc
add
add
sarb
les
add
stos
out
add
add
into
sbbl
enter
pop
add
add
push
add
ja
push
addb
jnp
add
clc
add
xchg
iret
pop
mov
addr16
add
in
icebp
test
add
jne
repnz
fmull
les
add
push
shr
shr
dec
pop
mov
push
push
push
push
push
push
push
push
push
call
xlat
addr16
add
push
cld
in
xlat
xorb
push
add
add
data16
sti
ja
lret
add
sti
mov
add
gs
push
rclb
add
add
mov
hlt
add
cmpsb
fstpl
out
cwtl
lahf
add
roll
push
xchg
jns
add
mov
add
mov
pop
add
filds
add
fs
mov
add
add
push
scas
loope
rclb
fmull
adc
push
push
push
push
push
lea
push
call
add
push
cltd
jl
add
add
add
arpl
movsl
cwtl
lcall
add
clc
stos
add
call
int3
mov
add
mov
mov
add
clc
jne
add
xchg
add
add
popl
stc
imul
add
mov
add
add
mov
jmp
xchg
les
les
push
call
add
pop
pop
stos
add
je
loope
add
cmpsl
add
mov
add
jae
filds
add
jns
addr16
lret
add
in
add
add
add
push
add
mov
iret
add
icebp
xchg
lock
cmpsl
outsl
push
add
mov
testb
add
add
xchg
mov
jle
js
xchg
mov
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
jnp
jb
outsl
add
mov
push
add
xchg
add
fld
add
jbe
mov
add
in
flds
add
sahf
xlat
add
mov
add
jnp
add
enter
scas
jp
add
mov
mov
clc
nop
add
add
pop
fwait
xchg
jmp
popa
repnz
lea
pop
mov
push
push
push
push
push
push
push
call
add
fidivs
jns
xchg
add
push
add
add
add
mov
add
add
lods
cmc
add
add
add
jge
add
imul
mov
fildl
add
jl
add
add
mov
add
add
leave
lds
loop
mov
jbe
fwait
add
gs
in
lds
add
pop
xor
push
push
push
push
lea
push
push
push
push
call
js
loop
add
out
pop
add
popf
cmpsb
cmpsb
add
add
int
iret
test
pop
sahf
jo
xchg
je
outsl
loope
ffree
add
add
out
cwtl
add
add
cwtl
out
add
add
add
ja
add
cltd
pop
mov
in
insb
in
jmp
add
add
jle
shll
add
addb
mov
lea
pop
add
add
push
push
push
call
aad
jb
addl
add
mov
int3
jne
mov
add
cmc
jecxz
mov
add
add
out
add
add
add
mov
mov
add
add
pop
add
add
add
add
fyl2xp1
jbe
mov
cmc
in
add
add
add
add
add
pop
pop
rep
mov
xor
push
pop
or
je
mov
add
push
lea
inc
xor
pop
add
push
add
rol
pop
rep
pop
push
push
push
and
add
rol
inc
shl
sub
shl
xor
xor
pop
shl
shl
pop
push
push
lea
push
lea
push
call
mov
cld
lret
add
add
je
add
cwtl
add
jmp
ja
repnz
enter
call
movsb
arpl
add
iret
add
cmc
testl
push
xchg
add
movl
je
add
add
lods
add
js
jb
pop
add
addb
add
add
add
test
nop
addl
lahf
jo
cld
lea
pop
pop
mov
push
shr
xor
lea
shr
pop
mov
push
push
lea
push
push
push
call
add
add
test
mov
enter
add
add
shlb
add
add
add
faddl
fildl
add
mov
ljmp
add
aad
mov
mov
lret
add
in
outsl
clc
jbe
add
movsl
pop
add
pop
xchg
add
push
loopne
les
out
add
int3
lea
pop
mov
jmp
push
rol
ror
sub
pop
push
push
push
call
cld
cmc
jae
add
mov
add
add
in
push
add
outsl
fildl
add
negl
add
add
addl
add
imul
xchg
adcl
cmc
arpl
add
mov
out
jp
icebp
add
cli
out
lret
pusha
mov
aam
mov
mov
andl
fcom
add
mov
aad
add
add
lea
pop
mov
push
shr
pop
add
push
xor
pop
push
push
pop
push
push
not
pop
push
push
mov
push
add
xor
dec
pop
pop
push
sub
inc
pop
pop
push
inc
pop
pop
push
push
push
lea
push
lea
push
push
push
call
add
add
jle
data16
jo
add
out
movsb
add
add
fcoms
jne
add
add
add
addb
insb
cmc
ret
jae
add
pop
lods
add
fnstsw
lret
arpl
popa
andl
in
testb
add
mov
add
add
iret
push
gs
std
add
mov
mov
int3
lea
pop
pop
leave
ret
push
push
push
push
lea
push
push
push
push
call
add
out
add
lret
fildl
loop
add
mov
add
js
icebp
pusha
test
call
jo
enter
out
fiaddl
leave
add
imul
js
out
test
push
add
add
jne
rolb
int
xlat
mov
pusha
fs
xchg
add
aam
add
fmull
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
lods
pop
pop
divl
mov
add
cltd
arpl
add
mov
mov
mov
bound
add
mov
jno
fildl
imul
pop
add
add
icebp
add
add
fsubrp
call
add
add
add
std
fldenv
int
add
add
push
in
mov
lea
pop
mov
add
push
dec
pop
push
push
push
push
push
lea
push
lea
push
call
add
add
add
mov
into
add
mov
data16
jp
add
push
mov
fstl
into
fiaddl
jmp
add
add
in
add
add
mov
scas
add
mov
add
add
popf
mov
ljmp
add
xchg
mov
mov
add
add
rolb
add
jns
ret
fmull
push
movl
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
je
addb
jno
imul
scas
je
jb
add
add
mov
lods
add
add
add
lahf
out
add
mov
mov
cltd
pop
add
add
ljmp
pop
cwtl
lahf
add
xchg
iret
aam
cwtl
add
pop
rolb
xchg
pop
jbe
mov
nop
add
add
movsb
mov
xchg
int3
cld
mov
std
mov
lea
pop
addl
push
push
call
add
push
add
pop
add
add
sahf
jecxz
test
ret
pop
js
mov
add
xchg
imul
jge
pop
pop
mov
add
add
xchg
cmp
stc
rolb
test
add
mov
loopne
add
xchg
scas
sbb
add
popf
int
add
fiaddl
mov
lea
pop
test
je
mov
pop
push
add
pop
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
nop
pop
loopne
fwait
mov
jle
xchg
add
add
sti
mov
add
stos
mov
add
xchg
into
sbbl
xchg
add
movsb
xchg
add
add
insb
add
popf
add
icebp
lcall
into
jo
ljmp
cli
jno
add
les
add
add
xchg
mov
lea
pop
leave
ret
push
add
inc
dec
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jno
popa
xchg
add
fsub
add
add
mov
xchg
push
ret
add
fisubs
xlat
jb
pop
add
stos
leave
add
pop
push
data16
fiaddl
add
arpl
loopne
mov
add
jle
cltd
xchg
into
addr16
test
popf
int3
xchg
jb
mov
mov
lea
pop
mov
push
push
push
push
push
push
call
cmpsb
lds
add
mov
addb
add
pop
fstp
add
add
cld
les
int
bound
sti
add
push
add
or
add
add
pop
pushf
add
cli
sti
mov
push
add
movsl
add
push
add
add
mov
add
cld
add
add
in
add
idiv
int3
add
add
add
fistl
xchg
add
nop
add
insb
sahf
bnd
add
sbb
cld
push
push
push
lea
push
push
lea
push
push
push
call
add
shll
add
stc
popl
add
pop
add
jge
mov
pop
je
add
testl
mov
popf
xchg
mov
leave
lcall
lock
add
pushf
add
cli
jns
cmpsb
cli
enter
xlat
rolb
mov
mov
add
add
rcrb
push
movsb
mov
pop
add
add
add
rcl
add
addl
lods
add
add
add
add
popa
sbb
push
push
push
call
stos
test
pop
pop
add
enter
jbe
les
mov
into
jae
mov
add
shlb
div
in
add
addl
movsb
in
add
add
add
add
add
jnp
add
jecxz
std
add
add
xchg
add
add
add
pop
pop
xchg
mov
lea
pop
push
push
inc
pop
push
push
shr
ror
dec
add
pop
testl
addl
push
push
dec
pop
call
push
lea
add
add
pop
mov
pushl
push
push
not
add
sub
not
pop
push
call
cmpl
jne
push
sub
shl
dec
xor
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
call
fstl
rolb
add
add
add
add
add
add
add
add
jbe
insb
mov
into
add
xchg
add
in
add
add
rolb
test
aad
add
add
add
pop
rcr
cli
adcb
add
add
add
add
add
jmp
addr16
les
push
shr
not
pop
pop
push
inc
lea
pop
leave
push
sub
pop
ret
push
ror
inc
ror
rol
pop
push
push
ror
inc
lea
pop
mov
add
push
push
add
shr
pop
push
push
push
lea
ror
not
pop
push
push
ror
pop
movl
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
clc
iret
add
xchg
aad
add
add
mov
add
cwtl
data16
add
out
out
int
loop
mov
add
push
pop
sarb
pop
xchg
incb
out
sar
add
jbe
mov
jnp
add
add
add
jl
nop
enter
xchg
test
xchg
popf
add
push
mov
lea
pop
push
push
lea
ror
add
pop
call
push
shr
rol
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
aad
mov
in
lahf
aam
cld
xchg
xchg
loop
jo
add
add
add
push
add
xchg
mov
roll
int
sahf
jle
popf
shl
add
xchg
mov
add
pop
subl
mov
push
in
mov
shrb
incb
lods
add
lret
xchg
jmp
add
mov
jl
add
xchg
mov
lea
pop
call
push
lea
add
pop
subl
push
ror
pop
cmpl
jne
push
add
pop
pop
pop
push
push
push
push
call
data16
add
nop
add
fists
mov
jns
test
shlb
lea
add
add
push
mov
pop
add
iret
add
mov
add
mov
lods
add
add
int
add
mov
add
cltd
add
iret
add
add
movsb
add
add
loopne
jmp
mov
int3
add
mov
add
push
jo
push
mov
lea
pop
pop
push
shl
add
pop
pop
push
lea
push
push
push
push
call
imul
add
add
lods
pop
clc
cwtl
add
add
out
add
jbe
int
fadds
mov
add
int3
mov
jno
add
add
lea
mov
ret
add
pop
popa
mov
pop
les
lock
sub
les
mov
in
fmull
mov
pop
fdivs
mov
lea
pop
leave
ret
push
push
lea
push
push
call
js
testb
leave
lret
in
testl
mov
add
in
jbe
mov
mov
add
out
add
add
add
mov
add
addl
jns
jl
add
mov
scas
fadds
ja
pop
push
push
jl
movl
enter
in
fidivs
data16
push
mov
add
pop
lock
filds
in
add
int3
lea
pop
push
push
dec
pop
mov
push
push
lea
push
push
push
call
add
xchg
add
xchg
stos
mov
pop
lahf
in
lds
insb
fsts
push
add
add
add
popa
add
movsl
movsl
rol
cmpsb
mov
add
add
fidivs
mov
add
push
addl
mov
mov
stos
data16
mov
pop
add
add
flds
jecxz
add
add
mov
lea
pop
add
push
push
lea
push
call
hlt
test
sbbl
loop
add
add
add
add
add
add
mov
push
imul
icebp
pop
addb
cmpsb
add
mov
fdecstp
loope
add
add
aad
int3
add
mov
add
add
ljmp
fiadds
test
pushf
test
mov
loope
add
add
cld
mov
fadd
add
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
call
insb
out
jl
add
mov
lods
outsl
cli
enter
add
add
aam
add
add
fs
out
leave
ficoms
jl
add
pop
sbb
movsl
pop
lods
mov
rcl
add
insb
push
insb
mov
add
mov
into
add
push
mov
icebp
add
mov
add
icebp
add
flds
xchg
mov
mov
pop
mov
lea
pop
push
mov
push
ror
pop
lea
sub
push
push
push
push
push
push
push
call
add
test
add
add
add
add
insb
pop
push
loop
push
add
xchg
data16
test
cld
fiadds
push
add
hlt
mov
mov
add
add
loop
mov
scas
lods
add
int3
mov
xchg
pop
add
add
push
out
add
mov
movsl
test
add
xchg
add
xchg
cwtl
mov
lea
pop
mov
shr
add
push
ror
pop
mov
mov
add
push
add
add
sub
not
pop
add
mov
push
xor
add
xor
pop
mov
push
pop
cmp
jne
push
shl
pop
cmp
jne
push
push
push
push
lea
push
lea
push
call
mov
add
pop
rolb
test
arpl
push
std
popa
test
aad
lods
push
sar
mov
add
in
fildl
add
jp
add
movsb
mov
xchg
jmp
jnp
roll
mov
add
mov
xlat
add
int
add
add
imul
ljmp
lret
scas
xchg
fsub
bnd
cld
lea
pop
mov
movl
jmp
push
sub
sub
rol
shl
pop
mov
push
push
call
cmpsb
xchg
add
imul
cld
add
push
fiadds
mov
add
outsl
pop
add
stos
add
xchg
push
xchg
mov
testb
movb
add
xchg
push
mov
add
add
mov
movsl
scas
rolb
test
movsb
xchg
add
add
movsb
scas
add
pop
add
push
add
rolb
add
add
jnp
add
or
push
or
adc
test
add
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
xchg
jl
add
jb
js
pushf
add
call
push
xlat
cltd
add
add
int3
pop
add
push
add
add
add
add
add
mov
mov
add
addb
pop
add
add
sti
fildll
add
testb
imul
add
mov
stos
add
add
add
nop
shr
add
loop
add
add
fistl
mov
lea
pop
movl
jmp
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
imul
fiaddl
popf
jl
jp
int3
add
xchg
add
iret
push
add
add
add
add
mov
add
push
mov
outsl
add
mov
lret
ja
add
jo
add
add
push
xchg
add
jl
add
pop
rolb
lds
push
add
movsb
jmp
mov
cmc
add
jne
add
push
add
add
popa
and
inc
cld
mov
push
add
pop
cmp
jne
mov
push
ror
pop
movl
jmp
mov
push
lea
push
push
push
call
popa
add
xlat
scas
xchg
cmc
fs
mov
push
aam
add
mov
push
add
xchg
add
add
add
push
pop
cmc
cltd
movl
fwait
add
iret
shl
lds
divl
add
jp
mov
scas
movsb
je
negb
jae
add
add
add
push
mov
mov
lea
pop
cmpw
jne
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
cltd
add
add
add
add
add
add
mov
andl
mov
out
int
in
add
add
ljmp
test
add
add
icebp
imul
add
add
add
test
fiadds
push
add
add
add
divl
add
stos
add
pop
mov
movl
push
push
lea
push
lea
push
push
push
lea
push
call
pop
add
repnz
add
sbb
lahf
mov
movsb
add
jno
add
add
in
pop
cmpsl
ljmp
cwtl
add
add
sbb
add
loopne
mov
test
out
add
xchg
fstps
add
add
adcb
xorb
mov
add
xchg
movsl
mov
add
imul
mov
add
test
push
mov
lea
pop
jmp
push
push
push
call
add
xlat
cli
cmc
fstpt
call
add
mov
cltd
add
shlb
testb
add
add
sti
jne
add
cmpb
insb
add
gs
add
adc
lcall
xchg
add
fptan
push
out
jne
cmc
fnstenv
stos
add
out
popa
push
push
jb
sbbb
xchg
iret
out
test
mov
lea
pop
pushl
push
push
push
lea
push
push
call
add
add
add
xchg
mov
fwait
add
add
add
roll
add
mov
xchg
fildl
jns
jge
rorl
data16
add
add
xchg
insb
mov
fs
aad
add
add
add
xchg
add
lds
mov
in
add
fiadds
push
outsl
add
cltd
lahf
mov
lea
pop
pop
push
lea
push
push
push
push
call
add
add
scas
stos
jne
popf
mov
add
add
mov
jo
stc
add
les
xchg
push
mov
jge
add
add
add
movsb
int3
add
scas
mov
in
repnz
test
xchg
mov
add
push
add
outsl
aam
mov
add
add
in
push
add
add
adc
mov
push
lea
push
lea
push
call
add
add
add
fucomi
add
cmc
add
mov
add
out
add
enter
cli
add
outsl
call
jmp
pop
add
add
jge
sti
add
mov
mov
test
sarb
hlt
add
hlt
mov
mov
rcl
out
add
pop
mov
mov
push
push
xor
shr
sub
dec
push
and
add
not
lea
sub
sub
shr
pop
dec
rol
xor
pop
push
inc
sub
pop
push
push
push
push
lea
push
call
xchg
mov
rcrl
aam
stos
add
add
add
add
add
mov
lahf
fmul
add
mov
jnp
test
je
in
out
xchg
pop
add
movsb
iret
add
out
fcomi
jbe
mov
lret
test
add
add
xchg
aam
std
into
pusha
pop
add
add
mov
adc
sbb
add
push
push
push
push
push
push
push
push
push
lea
push
call
test
mov
push
xchg
add
test
movsb
push
pop
add
add
pop
enter
cltd
lds
add
add
mov
testl
lcall
lock
add
add
jb
add
ljmp
add
jae
add
add
xlat
orl
les
js
int3
fldz
ret
mov
add
push
push
rol
push
or
not
add
not
xor
shl
sub
pop
sub
ror
pop
push
push
push
push
push
lea
push
push
push
call
scas
add
loope
mov
mov
imul
add
test
add
add
jns
leave
mov
add
jns
lods
mov
push
out
jo
pop
mov
roll
xchg
iret
adcb
cmpsb
mov
jbe
add
mov
stos
add
add
add
add
jmpw
jp
xchg
add
mov
lea
pop
call
cmpl
je
push
push
xor
add
inc
shl
push
sub
add
rol
not
add
sub
dec
sub
not
pop
sub
dec
not
pop
push
ror
pop
push
call
cmpl
je
push
push
ror
push
or
inc
add
rol
sub
lea
sub
inc
add
ror
pop
rol
sub
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
lods
les
add
mov
ret
add
add
repnz
mov
add
cwtl
xchg
add
add
add
movsb
je
add
add
add
aad
jo
cmc
stos
stc
fiaddl
add
test
in
fnstenv
test
fwait
xchg
add
ror
clc
pop
mov
in
add
cld
lea
pop
push
call
cmpl
je
push
push
xor
push
and
add
inc
shl
sub
ror
sub
pop
lea
pop
push
push
push
push
push
call
lahf
into
mov
fildl
mov
push
add
in
roll
imul
mov
leave
add
add
add
add
jb
ffreep
outsl
mov
add
jo
mov
add
jb
mov
add
add
push
roll
lcall
push
pushf
lea
pusha
adc
push
push
lea
push
push
lea
push
push
push
push
call
add
add
scas
pop
add
mov
imul
mov
mov
add
cltd
mov
out
js
pop
add
incb
pusha
pop
test
xchg
xchg
test
mov
add
rolb
add
scas
imul
add
int3
add
leave
add
pop
add
add
add
mov
lea
pop
call
push
sub
pop
cmpl
je
push
push
sub
xor
push
push
pop
add
not
add
sub
lea
ror
inc
ror
pop
not
inc
pop
push
lea
push
push
call
add
rolb
add
ja
add
scas
jp
jnp
flds
fcmove
pop
add
add
add
add
enter
add
addr16
add
ja
roll
test
nop
addb
ja
xchg
mov
add
add
add
scas
add
add
bnd
add
add
out
js
add
push
xchg
lcall
les
xchg
aam
cld
lea
pop
push
push
lea
push
push
push
push
push
push
call
add
jnp
add
xchg
repnz
add
add
mov
stos
hlt
add
xchg
fisubrl
jb
mov
cmc
push
add
add
add
add
pop
stos
push
pop
mov
xchg
divb
mov
mov
out
add
andl
mov
add
data16
call
cmpl
je
push
push
not
push
xor
add
ror
rol
ror
sub
ror
pop
xor
dec
lea
lea
pop
push
shr
dec
dec
lea
pop
push
call
cmpl
je
push
push
rol
dec
push
xor
add
sub
sub
rol
pop
rol
rol
shr
shr
pop
push
rol
xor
pop
push
push
inc
pop
call
push
add
pop
cmpl
je
push
push
add
sub
shl
shr
push
xor
add
rol
shl
shr
inc
sub
inc
add
pop
sub
dec
pop
push
push
push
push
push
push
push
call
stos
enter
add
add
add
mov
in
add
mov
movb
add
icebp
mov
enter
lock
add
add
fildl
cld
mov
add
add
in
add
lahf
std
xchg
push
lds
add
add
in
add
jge
test
mov
add
or
aam
mov
lea
pop
push
call
push
lea
push
push
lea
push
call
addr16
add
add
add
test
jmp
jge
xchg
je
add
add
mov
mov
scas
fnsave
xchg
hlt
mov
aam
push
add
cmpsl
add
add
add
lret
aad
add
add
add
xchg
mov
add
js
add
ja
add
add
sti
pusha
bound
add
xchg
add
lret
add
pop
cmpl
je
push
push
sub
add
add
push
or
inc
add
shr
add
sub
shl
pop
sub
add
shl
pop
push
push
push
call
add
add
rolb
mov
push
add
add
add
addl
cwtl
add
mov
add
movsl
mov
jp
pushf
fldl
pop
push
lcall
add
test
stc
add
pop
add
loope
add
mov
add
mov
push
jne
add
add
fisubl
add
add
or
push
sub
add
xor
test
add
push
push
rol
push
and
add
lea
shl
sub
sub
xor
add
pop
shl
add
sub
pop
push
shl
pop
push
push
push
call
lea
add
notb
loopne
push
add
add
add
xchg
idivb
lds
add
icebp
add
rol
int3
add
mov
ljmp
xchg
add
mov
add
lea
add
pop
pop
pushf
xchg
mov
add
lods
stos
push
push
lahf
add
loopne
add
cld
add
add
add
add
fmull
jg
add
cmpl
je
push
push
push
push
pop
add
shl
sub
add
shr
pop
sub
pop
push
add
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
lods
jne
mov
add
add
mov
clc
add
mov
add
add
add
mov
shl
pop
fcompl
pop
push
out
mov
xorb
fldt
sahf
mov
mov
roll
pop
out
shll
add
add
add
xchg
add
add
mov
lea
pop
call
cmpl
je
push
push
sub
rol
lea
add
push
sub
add
ror
add
not
sub
shr
add
pop
add
shr
xor
pop
push
shl
pop
push
push
push
push
push
call
hlt
add
add
add
bound
addb
add
add
add
pop
jb
roll
stc
mov
out
stos
loop
ja
mov
mov
add
cmpsl
ja
mov
in
sti
push
sti
add
jns
jp
addl
int3
add
out
in
int
loopne
pop
out
add
in
repnz
clc
add
bound
ja
add
add
mov
lea
pop
call
cmpl
jne
mov
push
push
push
push
push
lea
push
push
push
call
iret
out
add
popa
add
add
movsl
test
fxch
subl
add
mov
icebp
cltd
in
test
xchg
push
outsl
xchg
add
popa
addb
add
add
add
jbe
mov
pop
mov
aad
add
in
add
xchg
iret
mov
out
fnstsw
mov
lea
pop
movl
push
push
push
push
push
push
call
ror
bound
mov
push
cmc
pushf
add
insb
xchg
xorb
lods
add
test
jne
cltd
scas
add
add
fwait
aad
add
mov
add
int3
add
add
add
nop
fs
pop
popa
add
fstl
addl
add
xchg
add
div
add
imul
mov
cmpsb
mov
shlb
hlt
lea
pop
jmp
xor
push
add
inc
sub
pop
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
gs
add
xchg
push
scas
mov
add
add
iret
add
fiadds
cltd
addb
in
nop
int3
cwtl
jo
and
jo
fwait
add
add
js
out
std
rcrb
add
add
pop
aam
mov
mov
add
add
add
movl
rcr
test
mov
lea
pop
pop
push
push
lea
push
call
lret
cld
in
add
add
mov
jle
mov
add
ret
out
pop
jo
add
jne
mov
iret
ret
cmc
clc
lods
testb
jne
add
jae
pop
adc
add
into
cwtl
push
testb
mov
test
movb
xlat
jae
add
fiadds
mov
lea
pop
leave
push
push
push
push
push
push
push
push
push
call
jmp
hlt
add
cli
jl
add
add
in
aam
xchg
sarl
add
std
push
add
push
add
je
pop
add
stc
pop
jge
hlt
add
add
mov
xchg
aam
fcmovnu
aam
add
add
stc
shl
jl
imul
add
pop
mov
add
pop
add
add
mov
lea
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
add
mov
clc
jle
movsb
add
add
xchg
add
jne
add
movsb
jns
add
push
add
xchg
push
add
add
in
stos
lahf
lea
fiadds
add
xchg
add
add
add
add
hlt
call
add
aam
add
loop
testb
add
test
stc
aad
popf
add
movl
test
add
add
mov
lea
pop
add
cmpl
jne
push
push
not
add
add
push
or
not
add
shl
sub
sub
shl
shr
shr
pop
xor
xor
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
fs
clc
jl
test
mov
push
add
add
call
add
add
sarb
mov
add
leave
movsb
outsl
add
pop
mov
add
test
lds
jecxz
mov
jb
add
roll
add
rcr
add
jecxz
addl
cmpsl
scas
lcall
pop
repnz
shlb
mulb
fcmove
into
add
add
add
ljmp
gs
lea
pop
pushl
push
add
lea
ror
pop
call
push
dec
not
ror
pop
push
call
push
push
push
lea
push
push
lea
push
push
call
add
cmpsb
cmc
add
mov
add
leave
out
mov
xchg
jo
mov
add
add
add
lret
mov
add
mov
int
push
add
test
push
add
add
add
jl
add
add
add
mov
into
in
lea
ffreep
fcompl
add
jmp
add
in
aad
push
add
sti
fsubrs
add
mov
lea
pop
jmp
cmpl
je
push
inc
rol
ror
pop
cmpl
jne
leave
push
pop
add
push
not
add
shl
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
movb
iret
ret
add
roll
add
add
mov
mov
add
push
imul
loope
xlat
add
add
cld
add
add
out
add
xchg
lcall
ja
sahf
add
insb
add
add
add
add
mov
xchg
fwait
mov
ljmp
cmpsb
arpl
add
int3
in
mov
lea
pop
pop
pop
push
push
push
push
push
call
add
cli
xchg
pushf
aam
lahf
mov
popl
mov
add
cld
filds
in
xchg
cltd
push
ljmp
cmpsb
std
xlat
bound
rolb
fnstenv
mov
add
add
out
add
add
mov
sti
add
add
hlt
jge
jl
pop
mov
add
negb
xlat
add
add
popa
adc
pop
leave
push
lea
push
lea
push
call
mov
lods
push
add
aad
cli
cld
fadds
nop
pop
adc
cmpl
xchg
jns
add
loope
fimuls
mov
ret
add
add
mov
movsl
aam
add
pop
fstp
mov
add
idivb
out
add
stos
add
jbe
arpl
jl
xlat
gs
int3
fiaddl
xchg
add
out
mov
add
add
add
movsb
mov
lea
pop
add
ret
push
add
pop
jmp
push
lea
push
call
bnd
jno
add
mov
mov
jnp
icebp
cli
stos
mov
int
bound
add
push
mov
neg
cwtl
add
add
mov
add
mov
cmc
push
jne
pop
jp
add
add
xorl
add
add
add
test
pop
scas
mov
arpl
add
add
add
jge
aam
bound
pop
cmpl
jne
push
push
add
not
push
and
add
ror
ror
sub
xor
inc
pop
add
add
pop
pushl
push
sub
pop
call
push
pop
push
call
push
push
call
aad
aam
push
js
add
add
mov
out
in
mov
bound
mov
aam
add
add
mov
repnz
add
faddl
stos
out
add
add
add
scas
push
icebp
pop
add
cli
std
add
add
add
add
fldl
jo
push
add
add
add
loopne
int3
add
mov
add
fmull
xor
jge
add
test
adc
add
popf
dec
jecxz
call
addb
out
fcomps
lahf
out
addb
lods
mov
aad
jb
cwtl
add
test
into
mov
add
add
ljmp
mov
add
add
add
int
lds
cltd
add
add
add
pop
jb
mov
movsb
test
lea
pop
mov
push
ror
inc
dec
shr
pop
mov
jmp
push
push
push
push
push
push
push
lea
push
push
push
call
pop
in
add
add
pop
mov
mov
lahf
add
xchg
add
push
xchg
addb
mov
bound
repnz
mov
mov
xchg
add
popf
leave
add
add
scas
mov
fucomip
add
out
add
add
add
mov
movb
ret
mov
add
jb
pusha
xchg
add
jb
bound
mov
sub
pop
push
add
shl
rol
xor
pop
dec
jne
call
jmp
push
push
call
jle
add
imul
cmc
mov
test
add
divl
call
add
add
add
jge
add
std
jp
add
xorl
add
mov
add
add
int3
test
lcall
add
mov
movsb
mov
mov
jecxz
add
jecxz
add
popa
or
sub
add
push
push
add
push
and
add
ror
sub
add
lea
pop
rol
sub
dec
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
fdivrl
clc
jae
add
pop
add
add
add
add
add
std
xchg
pop
add
hlt
nop
add
lcall
arpl
jge
xchg
push
push
add
xchg
add
add
add
out
fadds
je
mov
jnp
mov
jbe
add
add
rolb
add
call
mov
add
fiaddl
add
popa
sub
jne
push
pop
call
push
push
dec
add
lea
pop
call
push
push
lea
push
push
push
call
mov
cwtl
push
scas
popa
mov
add
add
add
out
cld
add
cmpsl
xchg
add
xchg
add
add
icebp
push
add
push
xchg
cmpsl
bound
std
lahf
stc
cld
pusha
push
add
add
add
add
icebp
add
xchg
add
add
sti
mov
movsb
add
xchg
add
out
add
lea
lea
pop
mov
push
sub
sub
dec
pop
lea
push
push
add
add
push
sub
add
add
shl
sub
lea
shl
add
pop
dec
inc
not
pop
push
inc
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
fisubl
test
roll
mov
outsl
mov
imul
fstp
stos
push
fsub
add
add
push
mov
into
push
add
xchg
nop
add
mov
add
add
add
jne
xlat
xchg
push
mov
mov
mov
add
rorb
add
sahf
mov
lea
pop
call
push
rol
lea
pop
push
call
push
push
shl
inc
lea
push
sub
add
xor
sub
sub
lea
pop
xor
pop
push
inc
sub
pop
pushl
push
push
lea
push
call
add
jp
push
add
push
add
push
mov
int
add
stc
scas
jns
add
out
jns
jle
add
add
add
cmc
add
lock
mov
pop
add
clc
movsb
mov
je
add
mov
loop
add
xlat
jmp
testl
add
lock
cli
scas
add
roll
add
aad
add
mov
lea
pop
call
call
mov
push
push
push
call
cmpsb
lahf
fwait
add
add
add
pop
add
add
add
jecxz
icebp
loope
lods
loopne
fwait
mov
add
add
pop
shlb
add
fcomi
cltd
sti
push
js
in
rolb
shll
lods
sahf
mov
sahf
jae
fiadds
add
add
add
push
stos
xchg
add
push
mov
xlat
lock
mov
les
pushf
and
ljmp
dec
sub
inc
push
sub
add
sub
not
shr
sub
add
dec
pop
sub
lea
pop
push
push
call
add
jns
add
lea
add
jge
add
mov
add
ljmp
andl
in
roll
jo
jecxz
clc
in
rorl
mov
mulb
incb
xchg
push
add
mov
aam
add
xchg
add
add
add
add
add
pop
mov
push
add
mov
lea
pop
pushl
call
push
xor
sub
pop
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
fld
add
mov
pusha
add
movsb
fsubr
xchg
cmpsl
pop
movsl
jae
sti
test
cltd
cmpsl
add
add
ror
scas
add
jns
out
add
aad
out
mov
add
sar
testl
in
addr16
add
in
stos
fbld
add
ljmp
add
cltd
ljmp
add
lods
cmpsb
fucomp
mov
lea
pop
push
push
push
push
call
mov
mov
scas
pop
add
lcall
add
jmp
rcrb
add
add
add
lods
movsb
lahf
add
add
xchg
stos
add
add
add
lret
add
faddl
add
call
fbld
stos
push
jb
xchg
lods
repnz
add
add
add
jmp
enter
add
faddl
add
mov
lea
pop
push
push
pushl
push
push
add
push
sub
add
sub
xor
sub
sub
not
add
shr
pop
shl
pop
push
lea
push
push
push
push
push
push
push
call
lret
insb
mov
out
out
fiadds
test
add
add
add
push
mov
lahf
add
loopne
movl
fistps
add
add
jp
out
mov
aam
insb
add
mov
aam
nop
add
push
mulb
add
add
add
add
pop
sarb
lods
add
stc
faddl
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
test
add
mov
shll
add
addb
out
add
add
add
movl
lods
push
testb
add
add
in
add
scas
pop
out
popf
add
popf
stos
add
mov
mov
mov
add
add
fwait
insb
les
cld
push
add
movl
and
call
push
push
sub
dec
push
sub
add
xor
inc
ror
sub
add
pop
lea
ror
pop
push
push
push
call
mov
je
addl
add
add
scas
call
xchg
xchg
fs
int3
jb
add
add
or
movb
test
jnp
add
pop
add
add
add
add
add
add
test
add
pop
add
ljmp
add
andl
push
add
add
mov
lea
pop
pushl
push
ror
sub
xor
pop
call
push
push
push
push
lea
push
push
push
push
push
call
add
mov
stc
add
data16
ficoml
add
mov
add
fwait
add
nop
push
add
mov
lods
lahf
lods
fucomip
out
int3
rcl
lret
xlat
ja
add
xchg
add
add
shr
mov
faddl
add
mov
insb
mov
add
sahf
add
popf
add
add
clc
add
popa
out
xchg
clc
in
out
add
add
xchg
pop
push
call
push
push
sub
push
xor
add
xor
ror
rol
rol
sub
xor
dec
ror
pop
xor
pop
push
push
lea
push
call
imul
addb
enter
add
add
add
jge
gs
xchg
xchg
fisubl
add
lret
push
add
add
add
add
pop
add
enter
add
add
add
mov
add
mov
mov
sar
enter
jge
pushf
mov
ja
mov
out
cwtl
add
add
add
mov
or
pushl
push
push
push
push
push
push
push
call
add
add
add
jmp
add
xchg
rolb
mov
mov
arpl
push
pop
in
pop
xchg
movsl
mov
push
lods
mov
mov
stos
jmp
mov
iret
jecxz
add
repnz
add
add
in
jae
mov
xlat
std
add
scas
lret
mov
mov
mov
add
add
add
data16
pop
mov
lea
pop
call
push
push
push
lea
push
push
lea
push
push
call
mov
add
mov
cltd
jae
enter
add
jno
lods
add
pop
loopne
loopne
mov
fs
jne
lret
mov
mov
mov
je
add
mov
add
hlt
iret
add
out
push
add
push
mov
jb
add
loope
add
in
add
add
jmp
addr16
call
jmp
pushl
push
lea
push
push
lea
push
push
push
push
push
call
outsl
lcall
testl
pop
add
or
pop
jge
lea
add
xlat
add
add
add
out
fbld
negb
rcrl
add
add
popa
add
add
add
out
shlb
add
add
xchg
shrb
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
cmpsl
js
add
mov
sti
jl
add
add
add
add
add
add
add
arpl
mov
mov
std
jecxz
outsl
add
add
imul
add
pop
add
arpl
out
add
std
leave
add
mov
add
add
add
add
add
pop
jmp
push
push
dec
sub
sub
push
sub
add
add
dec
sub
add
shr
pop
pop
push
rol
pop
pushl
push
push
push
push
call
push
add
add
xchg
movsb
push
lahf
add
push
add
add
xchg
add
lock
popa
add
mov
leave
mov
add
fisubl
fstl
popa
add
int3
gs
add
jbe
add
xlat
mov
in
mov
pop
add
add
insb
pop
in
add
add
add
add
jo
enter
loop
xchg
scas
add
add
pop
call
push
push
lea
rol
add
pop
call
push
push
xor
sub
push
and
add
sub
sub
xor
sub
add
sub
xor
pop
add
ror
pop
push
not
shl
shr
pop
pushl
call
push
xor
shl
add
pop
push
call
push
push
push
push
push
push
push
push
lea
push
push
call
add
test
add
add
pop
add
add
add
mov
add
fistpl
mov
xchg
pop
gs
lahf
loope
add
mov
add
rcrb
ja
lcall
add
add
push
pop
jne
push
mov
lahf
scas
add
add
add
in
roll
mov
add
add
scas
arpl
lea
pop
leave
add
push
lea
push
call
not
scas
bnd
xchg
out
add
add
test
add
add
add
cltd
jns
cwtl
rolb
aam
add
pop
rcrl
mov
scas
out
mov
jbe
add
add
pop
add
mov
idivb
push
lcall
add
push
sarb
test
ljmp
in
push
aam
bound
pop
pop
pop
pop
push
ror
sub
rol
pop
pop
leave
add
push
push
push
push
push
call
pop
add
ljmp
rolb
xchg
add
hlt
fwait
add
int
push
add
hlt
add
push
push
cmp
ljmp
jo
loop
add
add
add
add
roll
lret
jb
icebp
mov
add
add
mov
add
add
out
rcr
add
add
jns
add
add
xchg
pop
ret
leave
ret
push
lea
push
push
lea
push
lea
push
call
add
xchg
add
mov
sti
xchg
xchg
repnz
mov
fs
add
jp
shl
out
pop
lahf
shlb
test
add
add
add
lods
mov
data16
insb
add
cmc
mov
addl
add
mov
xchg
cmpsb
add
loop
add
add
add
lea
pop
push
push
push
push
lea
push
push
lea
push
push
call
pop
mov
add
push
loopne
test
mov
mov
xchg
fistpll
jno
loop
lahf
out
les
add
subl
movsl
add
addr16
add
mov
add
lret
xchg
add
icebp
add
out
mov
xchg
add
mov
jp
mov
add
mov
push
mov
lea
pop
mov
push
sub
not
shl
pop
cmpl
jne
push
push
push
push
call
add
push
scas
jp
mov
xor
mov
clc
add
add
sarb
aad
int
fiadds
addb
add
add
jne
lods
add
out
add
ja
fstl
fwait
hlt
add
int
nop
add
add
in
lea
int3
jmp
rol
add
mov
iret
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
int
lret
jp
xchg
add
add
add
ret
add
lods
add
out
add
neg
xchg
mov
push
mov
mov
cli
add
mov
add
mov
jae
mov
add
xchg
in
mov
add
mov
lds
jae
loopne
jno
add
add
add
pusha
and
jmp
push
push
lea
push
push
push
push
call
call
add
hlt
add
add
rcl
test
lcall
jno
add
clc
stos
ljmp
add
pusha
add
add
testb
leave
add
jle
mov
xchg
insb
jbe
add
add
xchg
mov
popf
orb
add
add
push
mov
mov
test
incb
in
add
lea
pop
mov
and
push
shl
sub
pop
xor
xor
add
push
sub
shl
xor
pop
xor
push
dec
sub
pop
dec
sub
jmp
push
sub
add
pop
sub
push
lea
pop
pushl
pop
sub
push
not
not
lea
dec
pop
cmp
jne
mov
push
push
push
push
call
mov
jecxz
pop
mov
rorl
iret
add
movb
addr16
add
add
add
add
mov
iret
jns
lcallw
add
add
jno
jl
stc
imul
add
stos
push
mov
xchg
add
int
imul
mov
lea
pop
lea
push
rol
add
pop
sub
push
pop
mov
push
add
pop
shr
add
push
lea
dec
inc
pop
sub
pushl
pop
push
lea
push
push
call
movsb
mov
add
call
leave
ljmp
mov
xchg
lahf
ljmp
std
add
add
add
in
movsb
add
fcompl
hlt
add
jmp
cmpb
mov
add
rcll
add
add
add
mov
jae
jmp
imulb
fldl
mov
jae
mov
lea
pop
shr
push
push
call
adcb
add
icebp
mov
add
add
ja
xchg
pop
mov
je
jp
mov
fistpl
add
js
pop
enter
divb
add
mov
lea
add
nop
add
add
cmc
add
movsb
mov
divl
lea
pop
and
push
xor
ror
add
rol
pop
sub
push
shr
pop
cmp
jne
leave
push
push
push
call
into
mov
stos
xchg
add
lahf
lock
pop
ret
mov
pop
fwait
scas
pop
mov
filds
add
addb
movsl
mov
roll
faddl
mov
cltd
add
gs
mov
outsl
call
mov
in
add
arpl
fsubp
out
add
test
in
out
adcb
faddl
pop
orb
ret
push
push
push
push
call
push
mov
mov
add
push
jecxz
add
mov
out
shl
add
pusha
jge
add
jns
loopne
leave
add
ret
add
add
call
cmc
add
out
hlt
add
scas
add
mov
add
out
testb
jl
les
add
fiadds
push
andl
fadds
jne
movsl
mov
add
mov
lea
pop
mov
add
push
push
ror
pop
push
push
push
push
xor
pop
push
mov
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
xchg
add
push
les
jbe
test
add
add
pop
push
les
add
add
cwtl
loop
les
shll
je
stc
add
loop
test
pop
jno
addl
mov
cld
scas
add
lods
add
add
jle
in
cwtl
add
push
add
lds
add
negl
pusha
and
ljmp
shr
mov
push
xor
rol
pop
shr
add
push
pop
mov
add
push
push
push
lea
push
push
push
push
push
call
jnp
xchg
add
add
iret
add
add
add
iret
je
stos
movsb
movsb
add
xchg
add
add
jp
push
add
add
cwtl
xchg
pop
popf
mov
sbbl
repnz
in
add
xchg
pop
mov
test
xchg
ja
pop
add
out
cli
add
push
mov
lea
pop
mov
add
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
xchg
add
add
addb
push
push
add
lret
stc
enter
add
xchg
jb
fdivs
xchg
fisttpll
add
jae
cli
pop
add
cmc
add
add
jbe
aam
add
add
push
add
push
pop
lcall
add
add
cli
loope
pop
add
sahf
add
pop
mov
add
les
notb
add
pop
mov
push
push
push
push
push
call
in
arpl
stos
add
addr16
roll
movb
loopne
add
call
jne
add
add
add
add
mov
add
add
add
xchg
pop
jb
add
incb
add
add
out
filds
jns
pusha
add
outsl
movsl
add
add
out
jb
add
push
clc
lods
mov
lea
pop
and
push
push
push
call
xchg
add
jbe
int
add
add
lea
pop
lea
xchg
cltd
add
add
add
ret
out
add
out
hlt
add
mov
cld
add
add
mov
mov
loope
add
add
push
add
mov
mov
je
add
add
movsb
add
add
test
fildl
in
lods
mov
lea
pop
call
add
push
lea
sub
not
pop
cmp
je
push
shr
pop
add
push
xor
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
call
jno
push
sahf
add
pop
add
add
add
xchg
add
lret
mov
add
add
lcall
add
pop
add
nop
add
call
mov
add
shrb
add
add
into
add
add
fiaddl
lds
bound
out
mov
pop
jp
add
mov
lea
pop
xor
push
add
pop
pop
pop
pop
push
inc
rol
sub
sub
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
call
fiadds
or
add
mov
cmpsl
movsb
mov
jno
popf
add
add
add
push
insb
cmpl
mov
add
add
add
cmc
jmp
aam
add
add
add
mov
xlat
xlat
add
les
ret
scas
mov
add
out
jle
add
pop
mov
scas
pop
leave
ret
mov
push
rol
xor
not
pop
add
push
add
pop
push
push
pop
push
sub
lea
pop
pop
push
lea
push
push
call
add
jae
jl
fs
add
fstpl
pop
gs
fbstp
mov
rcl
add
iret
mov
add
data16
add
add
mov
lock
add
pop
shl
jmp
jbe
add
add
ljmp
popa
clc
push
je
mov
add
mov
les
add
or
popa
jl
lea
push
push
push
push
push
push
lea
push
call
arpl
add
nop
add
mov
bound
pop
test
add
add
add
add
add
cli
roll
mov
add
into
rcr
jl
push
add
add
rol
add
mov
filds
in
nop
mov
jae
pop
lcall
mov
out
add
add
sahf
add
xchg
mov
les
jecxz
add
jns
je
add
mov
lea
pop
push
push
xor
ror
pop
call
push
shr
dec
shl
pop
xor
pop
pop
push
push
call
jbe
add
imul
mov
lods
pop
add
jb
add
add
add
stos
mov
xchg
add
stos
std
fistpll
pop
mov
lcall
repnz
negl
push
add
enter
fadds
cld
add
into
push
stc
add
movsb
add
cmc
loope
in
push
add
push
pop
fisttpl
pop
pop
pop
pop
push
push
call
fnstcw
mov
pop
mov
add
push
fs
int
add
testb
add
add
lcall
add
add
jbe
add
add
popf
fildl
fs
jno
mov
add
loop
hlt
test
out
add
add
addl
jge
fxch
jno
mov
xchg
int
fnstsw
add
pop
leave
push
push
call
mov
add
pop
add
xchg
fnstenv
mov
fimull
add
arpl
jmp
add
mov
add
add
nop
jnp
xchg
xchg
add
add
out
fwait
scas
ja
hlt
add
add
add
mov
mov
jle
jnp
mov
add
stos
fiaddl
cmpsl
xchg
add
push
add
data16
or
push
mov
push
push
call
push
jb
pop
roll
add
lods
test
mov
lea
mov
xchg
test
add
add
add
add
mov
mov
mov
add
mov
push
add
xchg
add
je
add
jmp
add
pop
mov
movsl
imul
add
scas
scas
add
push
mov
add
add
gs
add
add
add
stc
xchg
mov
imul
hlt
lea
pop
add
push
push
add
dec
pop
push
push
push
push
push
push
push
call
cmpsl
add
jns
add
fildl
fiadds
add
test
xchg
pop
jl
xchg
jb
push
scas
stos
push
rolb
stos
in
xchg
add
mov
xchg
add
mov
add
xchg
mov
call
lods
add
mov
stc
mov
stos
outsl
mov
adcb
mov
mov
mov
in
mov
add
add
pop
mov
lea
pop
push
push
push
push
push
push
push
call
loopne
cmc
add
clc
add
add
add
lods
add
add
add
jne
addl
add
add
add
ljmp
jp
add
stos
hlt
xchg
xlat
add
add
stc
push
sti
mov
addb
add
mov
jl
aad
add
rolb
lcall
mov
jns
pop
mov
push
sub
pop
push
push
sub
ror
sub
pop
pop
lea
push
lea
push
push
push
push
lea
push
call
imulb
add
add
pushf
add
mov
into
add
fwait
mov
push
add
push
jo
shr
xchg
mov
arpl
add
jle
add
mov
cmpsl
mov
add
mov
cmpsl
add
add
addb
add
add
push
add
add
addb
add
testl
loope
xorb
sub
push
push
push
push
push
lea
push
call
mov
jle
push
add
add
mov
add
add
mov
add
test
loop
xor
add
cmc
cld
add
add
add
fwait
icebp
addl
mov
leave
add
je
mov
add
add
add
add
ja
loop
xchg
in
lret
popa
mov
hlt
add
pop
push
icebp
mov
add
jecxz
mov
lea
pop
mov
shr
add
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
fwait
in
ret
jmp
fadds
jmp
mov
add
add
xchg
add
rclb
push
call
test
mov
push
clc
incb
lods
xchg
jnp
add
roll
add
jo
arpl
sti
into
add
jecxz
jb
add
pop
sarl
fisubs
jecxz
add
jns
fwait
add
mov
ret
pop
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
call
loopne
add
cld
add
add
pop
sti
add
add
pop
mov
add
mov
jnp
add
add
xchg
add
mov
gs
ret
add
imul
add
xchg
add
add
push
stos
add
iret
add
jb
xor
add
imul
pop
mov
pushf
add
add
add
popf
mov
lea
pop
add
push
add
add
sub
pop
pushl
popl
mov
push
not
lea
pop
add
push
push
push
lea
push
lea
push
call
rclb
loop
jbe
add
xlat
add
add
push
mov
cli
div
add
add
cmpsb
jne
mov
lcall
fadds
test
mov
inc
add
add
add
add
add
popl
add
add
rcrl
lods
xchg
fildl
lahf
ret
lret
nop
int
in
mov
shrl
negl
add
pop
scas
xchg
pop
sahf
aad
rolb
hlt
lea
pop
xor
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
add
popa
fadds
push
rolb
mov
fistpll
jl
jecxz
add
add
jmp
out
scas
mov
pusha
jp
mov
add
lods
bound
add
lea
add
icebp
je
add
fs
add
add
mov
adc
add
push
add
out
add
scas
jnp
add
mov
lea
pop
mov
add
xor
push
not
dec
pop
call
add
nop
push
rol
pop
nop
cmp
je
push
add
lea
inc
dec
pop
nop
nop
push
push
push
push
push
push
lea
push
push
push
call
mov
out
jne
int3
enter
mov
push
enter
cli
add
lcall
xchg
fnstsw
test
mov
jbe
jmp
add
stos
popa
clc
add
add
scas
ficompl
rolb
popf
lods
xlat
jmp
add
cmpsb
cli
les
push
call
mov
mov
mov
jae
add
test
lcall
add
popf
add
and
inc
nop
nop
push
ror
pop
cmp
jb
push
sub
ror
pop
xor
jmp
mov
push
lea
push
push
push
call
add
icebp
movb
add
lds
stos
add
lahf
cmpsb
in
add
jge
filds
add
add
add
cwtl
insb
nop
pop
rolb
jp
cltd
xchg
xchg
push
cwtl
add
mov
add
add
add
negb
stos
add
in
xchg
sarl
data16
lcall
nop
add
add
add
add
add
add
pop
add
push
push
push
push
push
lea
push
push
call
add
gs
add
add
addr16
iret
mov
lods
add
push
add
add
popa
add
mov
mov
xlat
add
loopne
push
in
push
lcall
sahf
add
stc
add
add
negb
pop
add
aad
add
add
out
mov
add
out
add
add
push
popf
add
mov
sbb
movzwl
mov
push
push
push
push
push
push
push
call
mov
stos
add
jns
add
mov
add
add
mov
out
lret
idiv
aam
fadd
pop
addb
lds
movsl
push
add
mov
into
add
xchg
add
add
xchg
add
test
mov
xchg
xchg
add
insb
push
add
pop
add
mov
push
push
call
mov
cld
add
add
push
stos
addr16
add
out
fldl
ret
add
pop
aam
xchg
add
in
out
sahf
pusha
fiaddl
jmp
add
mov
push
mov
aam
jl
add
sti
jb
add
test
add
add
add
add
push
mov
xchg
test
mov
lea
pop
xor
push
rol
pop
xor
shl
xor
push
push
push
push
push
lea
push
lea
push
call
add
pop
pushf
outsl
add
add
mov
add
cmpsb
mov
cld
fsubr
clc
mov
jl
mov
mov
add
push
xchg
add
add
add
cmc
add
push
add
add
add
xlat
add
push
testl
mov
add
mov
add
xchg
add
pop
add
pop
add
mov
pop
add
mov
mov
jae
leave
mov
lea
pop
shl
xor
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
add
in
jae
ljmp
div
pop
add
cltd
scas
add
leave
add
mov
mov
fldl
push
add
call
push
movsb
mov
imul
add
aam
add
in
push
icebp
push
fiadds
cmc
jb
pop
add
fildl
push
imul
add
add
add
int3
jle
lcall
int3
lea
pop
shl
push
xor
shl
pop
xor
mov
push
pop
add
push
xor
pop
pop
pop
push
shl
dec
pop
pop
pop
push
push
push
lea
push
call
xlat
jnp
fiaddl
add
add
enter
xlat
mov
add
cltd
mov
jmp
pushf
lahf
mov
add
add
add
add
cmpsb
add
iret
hlt
mov
test
jb
andb
lahf
add
popf
mov
scas
ja
add
in
mov
add
add
push
add
xchg
xchg
lock
fbld
cld
lea
pop
leave
push
push
push
lea
push
lea
push
push
push
push
call
jo
add
jbe
mov
mov
pop
jle
add
jle
loopne
mov
add
add
add
jmp
add
add
mov
add
popf
popf
js
add
fadd
add
sti
lahf
jmp
add
add
subb
add
arpl
repnz
mov
xchg
int
push
add
add
cltd
add
add
arpl
add
add
add
pop
ret
push
push
push
push
lea
push
push
call
stc
iret
sahf
pusha
mov
fs
test
add
add
call
add
les
lock
icebp
push
mov
add
add
pop
add
add
out
push
add
add
pushf
into
add
add
popa
faddl
add
rolb
xchg
addl
data16
jb
out
xchg
into
lret
mov
mov
lea
pop
push
mov
push
lea
push
push
lea
push
push
lea
push
push
push
call
les
lret
fldl
mov
add
add
add
add
cmpsb
add
shlb
push
hlt
mov
std
add
mov
add
ret
out
gs
pop
jae
jae
lods
lds
add
mov
lret
scas
lcall
fstps
add
pushf
cwtl
stos
roll
int
je
mov
push
xchg
add
jns
add
scas
jae
push
mov
lea
pop
push
push
push
xor
lea
pop
push
push
mov
push
push
call
add
pop
add
add
add
add
mov
enter
int
lcall
jae
scas
lods
stos
in
add
add
hlt
cltd
add
cmc
mov
push
mov
jb
pop
loop
xchg
jne
sti
jbe
fidivl
shr
sar
push
add
add
add
mov
mov
fwait
jne
movsb
rolb
bound
add
add
add
add
mov
mov
lea
pop
mov
push
add
pop
mov
test
je
push
sub
rol
pop
mov
push
add
shl
shr
pop
test
je
push
xor
lea
sub
pop
mov
push
push
push
push
push
push
call
push
fnstenv
xchg
mov
add
add
loope
add
jnp
add
in
rolb
mov
push
jns
add
lret
add
add
outsl
lds
popf
je
add
xchg
fadds
pop
scas
add
les
aam
mov
decb
mov
addl
jmp
call
pushf
in
add
pop
mov
push
push
push
push
call
flds
int3
add
fildl
add
add
jmp
lea
add
add
add
pop
jns
mov
data16
add
add
pushf
jle
in
data16
push
add
add
add
je
pop
xchg
add
add
filds
add
add
pop
jl
add
add
add
jns
test
mov
mov
add
cmc
jo
rorl
mov
inc
push
dec
not
add
pop
cmp
je
push
push
call
fnstsw
add
add
add
mov
xchg
add
add
add
add
xor
add
add
stos
test
lds
in
add
add
xchg
add
push
add
add
in
add
push
pop
pushf
add
add
cmc
imul
fiaddl
test
jp
add
add
addr16
jl
add
mov
add
add
mov
lea
pop
test
je
mov
push
push
push
push
push
push
push
push
push
call
lcall
add
jno
stos
push
add
jno
clc
xchg
lods
add
add
mov
fdivr
rolb
add
pushf
jp
add
add
mov
push
addr16
mov
add
mov
mov
fiadds
hlt
lods
mov
add
imul
gs
lods
push
gs
mov
leave
repnz
add
add
add
mul
mov
add
js
pop
mov
lea
pop
inc
push
push
lea
push
push
push
call
add
add
add
add
mov
pop
jno
push
fsubs
add
add
push
add
add
add
aad
stos
add
add
loop
addb
mov
add
mov
hlt
add
jnp
lods
cmpsb
add
mov
loop
in
gs
stos
mov
jp
add
jmp
stos
fwait
fs
jno
insb
pushf
fwait
dec
push
insb
add
pop
cmp
je
push
dec
xor
shr
pop
test
jne
push
sub
add
pop
xor
pop
pop
push
push
push
push
push
push
push
push
call
mov
out
add
aad
add
jmp
push
add
add
int
add
js
arpl
add
add
mov
add
mov
jmp
mov
popl
add
add
add
mov
rcll
mov
in
test
lea
pop
pop
push
push
push
lea
push
push
push
call
jne
add
and
mov
add
jl
add
gs
add
pop
add
lcall
push
movsl
mov
int3
add
add
add
push
add
arpl
add
out
lods
add
bound
je
add
jl
gs
ljmp
jnp
push
jb
popa
popl
bnd
sahf
mov
mov
add
roll
enter
mov
lea
pop
pop
leave
ret
push
push
push
push
call
add
add
mov
pop
push
mov
icebp
shlb
in
add
add
jl
cmpsb
add
pop
jp
scas
data16
fisttpll
in
add
add
mov
jns
add
push
jno
add
ja
add
pop
add
fildl
add
add
xchg
cmpsb
leave
add
cld
add
bound
pop
mov
inc
push
lea
push
push
call
les
mov
out
mov
add
add
movsb
add
lds
add
test
add
mov
add
pushf
add
add
rcll
mov
lds
out
add
add
add
add
add
jmp
lods
pop
pop
lea
add
mov
add
arpl
mov
mov
add
add
mov
lea
pop
cmp
jne
lea
push
push
push
push
call
add
loopne
add
ja
xchg
add
xchg
add
out
add
out
push
clc
add
mov
add
add
xorb
mov
add
imul
add
mov
pop
mov
mov
mov
mov
jb
cmpsb
lcall
add
movsl
fwait
xchg
out
enter
mov
mov
push
mov
lea
pop
mov
push
ror
add
rol
pop
test
je
mov
add
push
shl
pop
cmp
jne
push
lea
push
push
push
push
call
mov
mov
add
add
imul
popa
add
test
add
push
add
add
add
rolb
jge
stos
add
in
add
add
jb
mov
xchg
xchg
add
jecxz
fildl
add
pop
cltd
add
add
lret
add
sti
in
test
add
push
add
jle
push
add
cld
js
cmc
push
mov
popa
adc
mov
test
je
mov
push
push
push
push
lea
push
push
push
call
mov
add
jmp
js
lcall
flds
in
push
mov
cwtl
add
cmpsb
add
add
hlt
add
lds
stos
movsl
int3
mov
scas
add
add
add
add
add
add
add
movsl
cwtl
add
cmpsl
leave
push
jne
xchg
jge
fdivp
fwait
add
stc
rolb
mov
lea
pop
add
cmp
je
jmp
push
ror
xor
pop
xor
pop
push
sub
sub
add
pop
pop
pop
push
lea
xor
pop
pop
push
push
push
call
iret
int
pop
add
add
lods
add
loope
loop
push
bound
lea
rol
aad
add
mov
hlt
fadds
add
add
push
add
mov
std
jnp
add
int3
mov
add
add
lret
jl
jae
fiadds
add
stos
jecxz
stos
add
mov
pop
xchg
mov
fiaddl
add
add
add
add
stc
xchg
push
pusha
or
leave
ret
lea
push
push
lea
push
push
push
call
jae
jge
add
add
scas
jp
pop
mov
gs
mov
add
push
add
mov
xlat
push
add
int
pop
fiadds
mov
add
add
add
fists
sarl
mov
jno
add
hlt
add
jmp
lock
add
mov
movsl
add
add
add
add
pop
pop
push
push
lea
push
push
call
mov
add
add
iret
aad
pop
test
mov
add
add
lcall
add
add
add
outsl
xchg
fldcw
jmp
add
mov
loope
stos
add
mov
aad
add
idivl
pusha
lret
flds
shll
xchg
outsl
pop
add
pop
fadds
add
add
lcall
mov
lea
pop
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
xlat
cld
mov
pop
hlt
xchg
add
mov
add
add
add
cmc
sti
xchg
rcrb
add
test
add
in
push
jmp
shlb
add
jl
add
fildl
pop
data16
iret
outsl
add
notl
int3
popa
xchg
push
lods
nop
stc
fldl
add
js
mov
rol
fwait
add
shrb
jno
mov
add
xchg
push
into
add
sahf
add
lea
pop
leave
ret
mov
push
xor
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
push
mov
sarb
add
pop
push
fs
add
ljmp
mov
popl
jmp
mov
add
loope
add
mov
lret
add
add
fwait
add
add
add
les
pop
pop
push
inc
pop
leave
ret
rol
push
shr
pop
rol
xor
inc
push
not
sub
pop
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
insl
in
sti
movsb
xchg
mov
sti
cmp
mov
sti
hlt
inc
mov
sti
movsb
shlb
sti
jmp
aad
inc
addr16
negl
pop
fwait
mov
test
jmp
mov
mov
jae
dec
in
scas
mov
push
mov
cmpsl
push
into
mov
pop
sub
xchg
hlt
add
jno
clc
pop
cli
mov
call
mov
stos
dec
out
add
pop
mov
add
xchg
jp
sub
out
je
cs
rclb
icebp
imul
jnp
pop
or
push
lds
dec
subb
jno
cmp
loopne
add
push
pop
pop
iret
push
repnz
arpl
cmc
jmp
in
sahf
lds
dec
insb
push
inc
fstpl
inc
dec
mov
cmpsb
or
cwtl
popf
aaa
mov
xchg
int3
cmc
sbb
int3
shll
int3
push
add
mov
aad
inc
cmpl
or
mov
in
mov
int3
pop
test
shll
shl
les
sub
cmp
mov
push
clc
push
and
xchg
dec
jns
lret
inc
jno
cmp
cmp
lret
scas
call
pushf
inc
ljmp
dec
mov
fstpt
cmc
sbb
mov
dec
adc
add
test
and
pop
sub
pop
sbb
pop
cs
ret
in
mov
mov
imul
loope
push
xchg
fisttpll
sbb
mov
ficomps
mov
jg
jmp
xchg
pop
lds
sti
in
push
jb
subb
imul
or
and
adc
jo
cmp
not
nop
jne
data16
daa
xorl
push
in
push
in
sbb
loope
pop
push
cmp
jp
pop
pop
pop
pop
jno
pop
insb
add
dec
iret
das
lret
insb
leave
xchg
test
fidivl
jecxz
insb
adc
adc
outsb
pop
ficoms
in
and
mov
push
cmpl
enter
inc
addr16
cmp
mov
xor
dec
mov
imul
adc
aam
ret
mov
nop
jecxz
xlat
jg
ja
mov
adc
sbb
mov
mov
cwtl
lock
mov
cli
fidivrs
push
out
aaa
sbb
fwait
push
pop
gs
es
daa
shrl
sbb
iret
loop,pt
sub
push
inc
sbb
cmpsl
add
or
rol
xchg
ds
sbb
sub
rorl
pop
mov
cmp
div
cmp
ret
lcall
cwtl
xchg
adc
mov
ror
popa
jecxz
push
or
jbe
scas
xchg
dec
jecxz
arpl
jmp
jg
into
jmp
dec
into
and
repz
bound
push
dec
pusha
rcrl
sbb
xchg
orl
dec
jnp
ds
xor
mov
js
mov
cmp
jb
call
pop
popl
into
push
and
inc
call
js
fsub
xchg
sbb
cmp
outsb
loopne
add
inc
sbb
aaa
adc
cmpsl
addl
gs
repz
pop
lods
popf
sbb
lods
or
jg
insl
jb
push
cmp
inc
sub
pop
icebp
mov
hlt
push
in
mov
daa
les
mov
pop
jno
cmp
jg
fcoml
pop
cmp
lods
cmp
jecxz
pop
out
ss
and
subl
mov
add
mov
add
sub
addb
and
je
push
dec
iret
xorl
push
inc
adc
jbe
lods
jmp
unpckhps
ljmp
adc
in
cmpsl
pop
push
sub
mov
mov
cmpsl
and
data16
xchg
mov
jl
cmc
fnstsw
inc
xor
test
lods
mov
sbb
add
inc
test
xchg
add
and
pop
push
pop
or
mov
je
pop
out
adc
jge
xchg
out
pop
shll
jg
outsl
mov
pop
lds
sub
pop
nop
dec
xchg
adc
xchg
loope
adc
es
daa
pop
sub
pop
out
bound
cmpsb
sbb
add
cltd
inc
iret
arpl
or
test
mov
cltd
sub
or
and
pop
push
sub
enter
jp
movl
mov
lcall
pop
in
movsb
push
mov
sub
xchg
cli
cwtl
cli
je
xor
cmp
test
pop
es
xchg
adc
ret
mov
mov
and
xor
push
mov
pop
xchg
sbb
and
cmp
xchg
cmp
inc
mov
mov
dec
xor
fadds
push
out
xchg
decb
cmpsb
push
mulb
or
or
or
rcll
loopne
ljmp
mov
pop
xchg
hlt
mov
cmp
cli
cmp
ret
cltd
aam
stos
into
jg
push
test
in
daa
or
dec
pusha
stos
loope
add
inc
mov
je
rcrl
mov
add
mov
clc
xchg
repnz
sub
insb
addr16
repnz
andb
dec
jnp
ret
push
jne
jo
jbe
push
push
dec
lret
mov
jbe
movsl
add
xchg
push
loopne
pop
push
lret
add
dec
pop
mov
cmpsb
inc
and
lahf
pop
lret
fistps
hlt
shl
cmp
mov
int
xchg
xchg
out
icebp
filds
lods
mov
sub
cmp
sub
aam
leave
push
cwtl
nop
daa
bound
pop
gs
pop
inc
nop
in
and
pop
lcall
sbb
push
jge
enter
bound
bound
ljmp
movsl
push
sub
rol
into
in
mov
mov
daa
lret
filds
cmp
mov
pop
daa
test
insb
xor
gs
cmp
mov
rolb
lahf
lods
or
push
pop
in
add
xorb
in
jae
jo
add
or
or
mov
push
mov
rcll
lds
repz
std
dec
je
ss
aas
fs
test
outsl
imulb
dec
inc
xchg
jle
jmp
jg
movsl
enter
cmp
xchg
sbb
adcb
pop
xorl
test
fsts
loope
cmpsl
gs
repnz
pop
and
mov
lods
imul
push
aas
dec
dec
adc
add
and
ss
fwait
and
leave
lret
sbb
and
mov
shl
clc
lock
test
dec
mov
jns
add
fmul
cmp
inc
jae
cmp
xor
sub
push
xchg
or
push
ljmp
sbb
test
test
movsl
lods
xchg
dec
aas
dec
mov
cmpsb
dec
pop
rolb
in
xor
cmpb
fildll
adc
pop
imulb
xchg
ja
push
add
xchg
test
or
ljmp
sarl
nop
rorb
sub
dec
movsb
fcomp
dec
dec
jle
inc
dec
lds
or
mov
hlt
aaa
or
mov
fcmovnb
movsl
insl
popa
sub
sbb
shrb
mov
sarl
into
jmp
cmc
cmp
pop
mov
sub
cmp
daa
loop
sub
pusha
pop
aaa
add
sbb
js
xchg
add
mov
xor
arpl
mov
ds
cmp
push
fmuls
and
imul
cmp
shl
sbb
cmp
fnsave
mov
sbb
in
dec
hlt
xor
pop
stos
push
mov
mov
mov
movsb
or
jp
mov
divl
fldt
sbb
inc
add
mov
push
test
cmpsb
sub
notb
mov
ficompl
push
test
imul
int
out
pop
cmp
lahf
pop
or
dec
loopne
mov
add
push
push
mov
xchg
or
gs
test
xchg
mov
xor
cmpsl
stos
xchg
insl
adc
inc
pop
fmull
pop
test
add
rcr
stos
mov
stc
mov
or
sub
mov
mov
cmp
pop
xor
or
mov
stos
arpl
jmp
jae
mov
pop
fs
repnz
incl
jnp
sub
push
sbb
inc
repz
js
xchg
pop
push
xor
cmpsl
in
cli
loop
mov
hlt
sbbl
and
pop
out
sub
push
push
cwtl
insb
icebp
fisubrs
in
cmc
sti
hlt
lods
cmp
dec
add
out
stos
out
push
mov
lret
insl
mov
dec
movsb
movsl
push
jne
mov
mov
cmp
out
daa
or
sbb
jnp
fs
and
stos
aad
pushf
lods
sbb
clc
mov
xchg
inc
push
jge
ret
jns
mov
mov
out
xchg
in
inc
test
jae
lods
jge
add
xchg
mov
mov
repz
shlb
cmp
jl
mov
cmpsl
and
mov
pusha
mov
mov
or
pop
jg
icebp
pop
inc
mov
cltd
push
mov
push
fdivrs
mov
xchg
imulb
dec
inc
push
das
cmp
enter
leave
lcall
out
sbb
xchg
mov
mov
out
popf
jnp
lret
adc
dec
add
mov
fdivs
lret
leave
sbb
cmc
sti
sub
out
mov
lret
cmpsl
shll
mov
or
stc
jnp
je
bound
fs
inc
popa
test
ja
dec
push
orl
out
xchg
hlt
roll
adc
data16
mov
cld
and
jno
scas
mov
xchg
and
cmp
inc
xorl
insl
adc
jnp
jbe
add
inc
stos
mov
sub
sub
xchg
inc
sahf
pop
divl
cwtl
lea
mov
push
pop
mov
adc
push
pop
inc
or
outsb
popf
cmp
aad
fsubs
ds
ja
jl
mov
std
out
mov
add
aam
lcall
jl
arpl
jnp
mov
xor
cmp
mov
leave
iret
rol
jo
addr16
xlat
jl
test
xlat
jle
cmpsl
rclb
testl
popf
and
xchg
sub
ror
icebp
inc
mov
lock
outsb
sub
jle
sbb
xchg
fwait
sbb
push
mov
jmp
lahf
fucomi
pop
adc
push
les
cld
loope
dec
sub
loop
insl
dec
xor
inc
imulb
push
fadd
mov
cli
mov
mov
cmp
dec
jnp
pop
and
xchg
mov
out
cs
mov
aas
les
decl
aas
mov
xor
adc
xor
mov
ret
xor
out
push
mov
fcoms
cld
imul
iret
mov
dec
jb
jp
xchg
std
xchg
xor
push
daa
lods
jg
xor
pop
mov
movsb
push
sti
pushf
inc
adc
push
cmp
push
lret
insl
cmp
sbb
jnp
in
xor
mov
movsl
jp
dec
pushf
sub
iret
dec
xchg
mov
cmc
inc
xlat
inc
daa
mov
inc
sbb
lahf
sti
sbb
cmpsb
ds
jecxz
xor
mov
cmp
jmp
out
mov
hlt
push
out
insl
imul
aas
divb
cltd
les
aas
mov
mov
aad
cmpsl
cmp
dec
test
jno
push
divl
sbb
inc
idiv
jns
fisttpll
and
jne
pop
dec
stos
idivb
out
cmp
and
in
xchg
and
aaa
adc
add
insl
dec
call
lret
and
adc
xchg
xor
fcoml
pushf
iret
dec
loope
push
pop
mov
aaa
xor
sub
add
dec
scas
or
jno
loope
push
sbb
dec
mov
pop
in
js
js
clc
push
sbb
push
es
jg
rclb
push
shlb
lds
and
je
and
pop
mov
mov
pushf
push
or
mov
xor
ret
mov
popa
cmp
lea
push
lds
cmpb
gs
or
pop
stos
ret
mov
daa
mov
ficoml
mov
fs
cld
lods
in
xor
pop
loope
jno
mov
adc
jns
jecxz
sub
dec
fdivrl
jno
xlat
push
rorl
mov
xchg
leave
mov
mov
sbb
add
inc
pop
dec
mov
lcall
or
jb
repz
dec
insl
out
mov
push
jno
push
xorb
addr16
pop
adc
insl
out
mov
jl
stc
test
ss
sti
sti
mov
xor
pop
jo
mov
add
mov
lods
out
int
mov
pop
pop
shrl
mov
sbb
cltd
xor
rcr
or
cltd
leave
jns
cltd
add
enter
mov
xlat
sarl
xchg
xor
pusha
push
pop
lea
ds
leave
jo
sbbl
mov
in
mov
jg
dec
insl
je
mov
pop
fwait
mov
loope
mov
data16
int3
cltd
xlat
adcl
stos
dec
outsl
ret
jmp
test
jnp
sub
aas
lcall
or
inc
jno
adc
repnz
lret
mov
cltd
push
sbb
pop
movsb
sbb
cmpsb
in
push
or
cmp
inc
pusha
push
sub
and
and
pushf
cmp
popa
adc
insl
test
pop
int
mov
insl
repnz
cmp
sbb
push
adc
sbb
push
outsb
sub
cmp
shlb
lock
and
inc
js
fisttpl
xor
pop
lcall
loope,pn
imul
adc
mov
aad
dec
add
insb
lcall
mov
dec
fcmovb
hlt
fucom
mov
aam
sbb
in
pop
pop
sbb
inc
inc
push
and
mov
ljmp
dec
mov
movups
and
ss
mov
and
stos
jo
push
sub
or
rcll
xchg
arpl
mov
bound
sub
std
aad
jno
shll
push
push
shll
push
cmp
enter
movsb
fidivs
push
push
xchg
pop
push
icebp
push
repz
out
jnp
jg
arpl
inc
dec
jecxz
mov
out
dec
add
subl
xchg
int3
jp
js
pop
in
push
mov
in
fstpl
aaa
inc
cld
jp
repz
pop
sahf
test
inc
mov
sub
adc
cmp
inc
orb
sub
mov
jle
sbb
and
cmc
xchg
xchg
inc
lods
or
stc
jp
xchg
inc
imul
dec
jb
mov
or
dec
xor
stc
adc
bound
popf
lock
pop
ds
jg
dec
adc
jo
dec
cld
and
mov
or
mov
insb
mov
int
and
incl
adc
adc
out
into
out
mov
inc
shrb
push
dec
das
cmc
out
lret
jmp
mov
jb
outsl
and
sbb
in
fsubrl
dec
jae
adc
out
add
cltd
popf
xor
imul
cmp
pop
movsb
call
in
jbe
out
mov
mov
packuswb
jae
test
nop
lea
push
ret
inc
xchg
adc
std
fwait
in
shrl
in
jp
jns
cmp
pop
jns
mov
in
out
pop
cmp
imul
dec
scas
and
scas
fdiv
sub
scas
fisttpll
jbe
faddp
popa
stc
pushf
lret
add
jmp
pusha
and
dec
or
xchg
out
sbb
adc
mov
xor
adc
mov
pop
test
lret
in
adcl
xlat
cmp
sbb
jne
in
das
in
add
sbb
test
mov
rcr
jmp
divb
in
mov
jmp
std
inc
movsl
ret
xor
adc
ret
rcrb
xchg
jmp
shll
push
jecxz
mov
adc
fsts
fwait
test
push
pop
incl
sti
mov
outsb
vmulsd
adc
xchg
mov
sbb
iret
xchg
outsl
int3
pop
out
clc
movsl
push
or
aaa
xchg
push
mov
cmpsb
loopne
pop
cmc
cmp
imul
out
rorb
iret
xchg
sbb
xchg
sti
cli
sbb
push
inc
cmpsl
sub
sbb
aam
pop
add
test
mov
or
mov
mov
jo
pop
sbb
std
sub
adc
stc
inc
mov
cmpsl
inc
adc
ror
leave
sbb
sub
daa
ljmp
push
loop
pop
lcall
mov
arpl
mov
jge
adc
fdivrs
sbb
or
jl
or
decb
data16
outsb
pop
fs
adc
sbb
sahf
jae
cltd
std
or
fnstcw
mov
lds
or
lret
mov
std
stos
fdivrl
and
int3
or
inc
pop
dec
sub
scas
nop
call
jns
out
dec
in
lock
add
pop
xchg
xor
adc
test
pop
dec
add
rolb
mov
add
sbb
xlat
out
pop
jle
lds
in
cltd
jp
jae
mov
jmp
mov
mov
mov
inc
test
mov
repz
out
mov
inc
mov
testb
sti
xchg
jl
sar
aad
lahf
ja
add
je
jp
shlb
mov
cld
sbb
dec
xorl
sbb
mov
push
stc
or
pop
das
dec
nop
mov
mov
roll
les
cmpsb
cmp
lods
pop
sbb
mov
ja
sub
stos
fdivr
adc
rolb
sbb
push
mov
or
psrlw
ljmp
push
mov
jne
sbb
in
ja
mov
rcrb
push
push
pusha
mov
cmp
jg
cmp
test
or
int3
pushf
mov
mov
lea
cmp
das
xchg
mov
clc
and
mov
pop
sub
jmp
inc
mov
addr16
mov
or
cld
jp
cmpb
pop
out
mov
or
daa
xchg
negl
xchg
movsl
out
sub
mov
mov
sarl
jb
push
jmp
push
int3
mov
mov
lea
sbb
leave
rcrl
push
mov
and
mov
outsl
rcll
jmp
dec
mov
popl
sti
in
mov
aam
sbb
inc
sbb
jno
ljmp
mov
es
outsb
mov
idivl
and
push
scas
mov
push
push
insb
movl
sbb
xor
push
add
inc
shlb
ja
xchg
mov
pop
and
test
inc
out
add
adc
fiadds
sub
add
fs
decl
stos
dec
jae
call
mov
out
sub
and
jp
mov
vfnmadd132ss
and
inc
or
sub
lds
addb
lahf
fsubl
push
and
stc
dec
js
clc
lea
jns
push
or
xchg
inc
or
ret
xor
loope
push
mov
jnp
lret
in
in
imull
int
leave
iret
jl
mov
into
sub
clc
inc
lds
sub
jo
insb
lahf
es
fdiv
dec
fdivs
or
xor
sar
lahf
test
cltd
aam
js
leave
sbb
or
ja
inc
pop
stos
dec
push
fiaddl
mov
scas
mov
mov
bound
fs
sbb
addb
dec
dec
andl
cli
ja
add
sarl
test
fs
mov
daa
sub
sub
ds
jmp
sub
xor
jl
iret
fs
cmp
sbb
ljmp
lods
jmp
dec
mov
in
pop
pop
push
inc
push
out
js
push
inc
sub
and
jle
inc
push
popa
mov
add
inc
inc
mov
ss
or
movl
arpl
je
loope
xchg
xchg
mov
dec
jg
mov
rcr
inc
inc
insb
mov
pusha
pop
dec
jmp
outsl
adc
test
cs
cmp
lcall
mov
dec
repnz
pop
push
add
mov
push
mov
sub
add
push
mov
pop
add
adc
in
lret
pop
cli
pop
pusha
mov
xchg
xchg
cli
cmc
xchg
and
loop
in
push
out
icebp
icebp
dec
imul
fbstp
ljmp
decb
movsb
mov
cmp
mov
es
jecxz
mov
xor
aaa
mov
iret
adc
cmpsl
mov
inc
mov
loop
jo
imul
jo
xorl
pop
inc
inc
inc
leave
stc
push
xor
daa
pop
lret
int3
popf
movsl
shr
lea
jle
inc
jae
mov
not
push
ficoms
cwtl
stos
dec
enter
int
push
loop
xchg
data16
inc
out
ds
xchg
mov
and
imul
adc
fptan
int3
rcll
sub
call
xchg
xchg
sahf
sub
lcall
repnz
ret
rcr
pop
fucom
aaa
nop
inc
lea
pusha
cmpsb
aad
inc
decl
cltd
sub
sbb
outsb
pop
lods
pop
xor
pop
xchg
dec
ret
test
ret
mov
xor
xor
pop
lcall
test
fstps
into
mov
jno
mov
pop
sbb
xor
into
sub
xor
es
cwtl
and
lods
jb
mov
aad
test
sbb
cs
mov
call
icebp
adc
call
cmp
and
ret
xor
push
inc
repnz
adc
pop
movsl
mov
adc
sbb
push
push
xchg
fs
ss
testb
outsb
fdiv
ficoml
jge
insl
cmp
sbb
imul
xchg
orb
xchg
sbb
pop
sbb
push
adc
fcomps
dec
movl
stos
inc
inc
dec
inc
pushf
push
insl
ret
aas
pop
shr
jns
ljmp
add
sub
mov
bound
movsl
dec
lock
insb
push
pop
mov
insb
xchg
cltd
insl
and
dec
jle
cmp
popf
fldenv
sbb
and
ljmp
mov
sub
test
fdivrs
fisttpll
inc
popa
testb
shr
mov
jge,pt
or
ret
and
jbe
cmc
and
add
dec
std
ja
scas
mov
lock
xorl
inc
push
pop
in
inc
mov
arpl
inc
pusha
mov
fsubrl
mov
movsb
push
outsb
sbb
cmp
shl
mov
imul
xchg
insl
movsb
push
cwtl
out
lret
data16
inc
lret
popa
mov
jb
ss
or
cmpl
jmp
jecxz
cmp
repz
ljmp
or
push
ret
stos
xchg
loop
out
cmc
inc
push
insb
loope
stc
lea
mov
and
mov
insb
hlt
fs
in
fwait
xor
cmpsl
cmp
sahf
add
incb
pop
outsb
fcompl
iret
mov
repnz
fmuls
clc
add
bsr
addr16
stc
ss
sbb
lahf
ss
jg
iret
pop
inc
outsl
or
loope
sbb
int3
cmpl
call
cltd
movntps
jge
insb
or
pop
flds
cli
inc
adc
mov
sbb
jbe
mov
das
rcrb
clc
lret
in
pop
inc
pop
cmp
fidivrs
ds
or
aad
jno
lock
mov
cmp
int
insl
adc
mov
adc
mov
leave
sarb
test
pop
push
and
stos
sub
into
xchg
loope
push
jmp
and
mov
inc
mov
sbb
das
or
jb
or
lcall
insb
pmaxub
mov
dec
xchg
push
pop
lret
lock
jno
mov
lret
cmpsb
lcall
mov
fisubrl
sbb
sarl
or
mul
pop
pop
dec
aas
sbb
icebp
dec
xor
mov
out
movsl
or
lds
pop
mov
cmc
loopne
pop
dec
and
add
mov
negb
aad
jge
xor
cmpsl
rcr
fists
int
inc
lret
and
fcoml
aad
jae
cmp
mov
iret
into
pop
cmpsl
mov
data16
daa
and
mov
leave
andb
add
lods
jno
cmp
mov
div
ljmp
bound
or
jp
ja
sbb
and
add
jge
jnp
cmc
pop
adc
jge
js
insl
repz
outsb
scas
js
push
mov
stc
ret
push
or
call
popa
adc
mov
mov
mov
roll
mov
pop
push
dec
pop
aas
ss
dec
fmuls
jbe
popf
sbb
xlat
inc
fs
fwait
cmp
dec
jnp
cmp
enter
mov
pop
sbb
xchg
mov
popf
test
jnp
int3
lret
jns
sbb
push
xchg
leave
lds
cltd
pop
pop
int
mov
fwait
inc
std
push
mov
jl
xchg
js
add
cmp
push
fmul
xor
das
testb
daa
addr16
mov
and
movsb
cmpsb
sub
mov
lahf
mov
lods
lods
cld
cld
and
outsl
dec
fistpll
jns
mov
loop
out
and
int
or
fcompl
cltd
push
gs
adc
imul
mov
jno
sbb
xor
test
add
xchg
lret
cmp
mov
cmp
call
mov
orb
aaa
stos
adc
push
xor
jmp
cmp
aas
or
into
mov
in
xor
sub
lds
lret
jle
lret
movsl
dec
mov
ret
cld
popa
adc
clc
arpl
or
repz
push
lret
psubsb
or
add
mov
mov
or
jle
inc
cwtl
cmpb
loope
enter
sbb
lret
leave
sub
jns
insb
mov
pop
mov
and
push
mov
nop
push
repnz
out
sahf
inc
fistl
rclb
pop
mov
pop
inc
mov
ss
ljmp
add
enter
loopne
rcrb
ret
xor
out
jge
adc
je
outsb
pop
xor
sbb
aaa
push
jmp
loope
pop
pushf
lahf
ja
in
testl
xor
mov
xchg
fs
push
lahf
out
ljmp
and
push
bound
jl
add
lret
mov
dec
inc
aad
cli
stos
scas
sub
or
xchg
fldenv
xorl
sbb
inc
push
mov
xor
push
pop
lret
pop
mov
out
push
fcmove
pop
stos
and
push
mov
fldcw
stos
add
and
sbb
inc
adc
inc
jp
aam
int
push
cmpsb
frstor
test
cmc
loop
sub
imul
jge
addr16
dec
sbbb
pop
vcvtpd2dq
and
jmp
js
movb
cli
loop
in
dec
insl
mov
or
pop
cmp
addr16
movsl
in
push
dec
sub
mov
jb
test
leave
jo
xor
jmp
sti
repz
fcomip
fbld
jno
push
dec
in
cmp
dec
adc
test
popf
xchg
xchg
jnp
sysret
inc
hlt
lret
repnz
pop
addl
push
gs
out
mov
pop
leave
ficoml
mov
in
arpl
sub
push
ds
pop
xor
inc
lcall
push
xlat
xchg
iret
sub
cmc
inc
andb
lahf
xor
cwtl
pop
fdiv
jecxz
adc
and
mov
cmc
jle
dec
hlt
test
sbb
ret
xlat
fcmovnb
push
or
cli
push
sbb
xchg
cmp
sahf
lods
movsb
xor
cltd
pop
adc
mov
shrb
in
mov
out
and
dec
daa
in
fiadds
inc
lods
lret
sbbb
mov
mov
jo
mov
mov
out
mov
jne
sbbl
faddl
shlb
jg
inc
data16
ss
inc
sub
push
mov
scas
int3
rcll
adc
inc
mov
insl
nop
jo
into
shlb
mov
sub
sbb
pop
mov
rcrl
dec
pop
pop
or
dec
lcall
outsl
cmp
cwtl
imul
lea
mov
mov
js
adc
mov
es
rcrl
add
adc
sahf
mov
rclb
sub
pushf
cmp
push
xor
pop
lods
mov
daa
push
sub
add
mov
jns
xor
stos
int
xchg
loop
inc
punpckhwd
cmp
aad
xor
negb
push
or
jecxz
psrlq
mov
cmpps
inc
cmc
ss
lret
cmp
mov
sub
fistl
sub
jno
xlat
stc
pusha
stc
mov
in
cmpl
mov
sbb
aad
sahf
dec
add
inc
ds
popf
push
ja
and
inc
xchg
ljmp
jno
or
jo
sbb
jmp
pop
mov
pop
test
cmp
adc
jle
jle
pop
xchg
mov
dec
das
xchg
inc
mov
jns
test
jbe
iret
jl
xchg
aam
leave
xchg
pop
test
mov
mov
push
shr
lea
cmpsl
push
divb
mov
mov
cmpsb
cmp
push
mov
mov
push
jbe
mov
sub
or
mov
mov
add
xor
data16
cmp
push
sbbb
jnp
mov
jmp
lret
lcall
push
movsl
aaa
std
push
aas
fiaddl
cmp
pop
mov
in
pusha
rclb
or
repz
push
add
mov
jo
jmp
sbb
aam
cmp
call
jne
fisubrl
jp
mov
call
jecxz
movsb
mov
mov
adc
adc
push
sub
stos
ss
ja
in
sub
lret
ds
mov
imul
fs
fcmovb
pusha
jns
movsb
mov
jmp
aam
pop
inc
xor
ja
les
inc
stos
arpl
add
fisubrs
ss
filds
pop
in
iret
sub
jae
sbb
aam
test
mov
push
movsl
and
sarl
pop
aam
loope
dec
cwtl
fdiv
ss
xor
pop
xchg
push
daa
mov
fnsave
push
add
das
mov
lret
in
xchg
rcl
mov
jne
ror
jnp
pop
fs
mov
fwait
sbb
inc
push
push
fsubs
cmp
cmp
mov
cmp
mov
data16
pop
mov
cwtl
add
aad
cmp
and
push
in
sarl
imul
pop
leave
rolb
ljmp
lods
pop
std
pop
and
or
aad
dec
faddp
loopne
testl
add
aam
dec
xor
daa
arpl
in
scas
ss
mov
mov
fimuls
out
jo
rolb
jns
and
sub
int3
lahf
mov
out
mov
in
adc
lahf
mov
xor
addr16
push
lea
sbb
loopne
fnsave
fidivrs
sub
mov
mov
push
repz
inc
cmpsl
in
mov
pop
jge
jge
mov
xchg
in
cltd
sbb
adc
icebp
add
cli
mov
mov
scas
in
sbb
add
pop
test
push
sub
mov
cli
mov
cmpsb
insl
or
fmuls
mov
mov
and
mov
pop
cmp
push
push
push
movsl
fistl
std
inc
push
and
popa
jne
loope
das
sub
fisubl
ja
enter
and
bound
xor
loopne
aam
cmp
push
rorl
movsl
rcll
sbb
xchg
icebp
xchg
add
cmpsb
insl
aas
mov
sub
clc
dec
leave
clc
adc
mov
dec
xchg
test
sbb
in
ret
cmp
or
pop
addr16
cwtl
xchg
lret
and
lods
enter
lcall
add
addr16
popf
xchg
popf
or
cmp
stos
cmp
pop
mov
dec
push
xor
repz
mov
xchg
cld
outsb
mov
lods
stc
mov
cmc
or
mov
lods
insb
adc
mov
in
pop
fcomps
dec
cmp
mov
in
cmpsb
mov
bound
pop
push
in
arpl
push
inc
push
mov
cmp
outsb
add
fst
cltd
incl
lea
xlat
sbb
sub
cmpsl
aad
push
inc
decl
jb
dec
hlt
inc
popa
hlt
and
roll
cld
lods
push
push
iret
cltd
pushf
sbb
fsubs
pop
xchg
out
outsl
jecxz
and
dec
dec
insb
fnsave
inc
repz
cmp
fldl
daa
mov
imul
inc
push
enter
sbb
outsb
push
push
test
add
xlat
inc
add
jle
scas
and
cmp
jae
movsl
lret
push
pop
inc
subl
push
ja
and
in
and
das
hlt
xor
fistpl
xchg
pushf
into
pop
outsl
jo
hlt
mov
adc
adc
mov
cmc
adc
rorb
rcll
fisubrs
out
or
stc
mov
sbb
push
daa
arpl
out
rorb
repnz
inc
and
loop
js
aad
and
repz
call
movsl
fstps
in
dec
ret
xchg
aam
mov
or
push
adc
cmpl
sti
lahf
out
push
and
pop
push
xchg
repnz
neg
imul
inc
dec
adc
call
push
lret
lea
sti
inc
fdivrp
mov
loopne
in
insb
jg
pop
or
and
out
pop
std
cmovno
add
pop
and
cltd
loope
shlb
pushf
sub
inc
cltd
jb
mov
dec
inc
arpl
mov
clc
mov
or
insl
jno
xor
jb
push
aaa
push
xor
sti
aam
ficomps
out
jb
pop
sbb
iret
filds
push
sub
mov
sub
daa
test
dec
push
out
mov
imul
and
ficoml
sub
push
pop
movsb
ds
lret
sub
ret
leave
rcrb
mov
push
arpl
pop
cld
pusha
push
int3
adc
jae
mov
sub
test
cmp
push
rclb
push
pop
ret
inc
inc
in
jbe
or
scas
out
mov
mov
mov
mov
mov
movsb
push
imul
stos
mov
jno
xor
jae
subb
adc
mov
inc
cmp
mov
ret
dec
outsl
cmc
jle
add
sbb
shrl
cli
les
into
pushf
mov
hlt
add
xor
jl
sbb
push
jge
mov
inc
jae
sbb
lret
xlat
pop
rcl
jmp
je
leave
pop
nop
cs
dec
unpcklps
dec
les
sub
aam
popf
adc
cmp
lret
loope
jg
cmp
mov
add
pop
cmc
jmp
mov
mov
cmc
dec
xor
std
cwtl
jle
inc
sbb
or
jne
jg
push
stos
add
sub
sub
jno
icebp
and
pusha
mov
mov
mov
bnd
mov
add
movsl
in
fistpll
div
fisttpll
xchg
rorl
add
xor
aad
push
push
pop
push
out
push
inc
cmp
in
push
loope
test
scas
pop
mov
mov
test
in
aad
jb
jae
je
jge
dec
into
pop
mov
lcall
xor
movsb
xchg
pop
push
inc
lret
mov
shlb
xor
mov
lea
pop
repz
mov
cmp
daa
loopne
outsl
clc
push
and
push
les
jl
fcomps
xor
or
outsl
mov
or
cs
sar
mov
out
addl
mov
loop
dec
sbb
subb
inc
shrb
pop
test
push
pop
mov
cmp
or
xchg
ret
mov
cmp
ds
xchg
xchg
dec
ret
ja
pop
loop
lods
fcmovnb
ds
jno
gs
jl
and
and
xchg
call
cs
mov
xor
pop
rorb
ljmp
mov
mov
cmp
xchg
frstor
rcll
scas
sbb
je
loopew
adc
imul
dec
ljmp
cli
aas
or
jecxz
dec
xlat
cmp
mov
xchg
inc
sub
dec
nop
jge
push
xor
adc
xchg
cld
push
into
fiadds
xlat
push
orl
mov
outsb
cltd
pop
pop
push
add
jecxz
divb
adc
push
xor
dec
test
jle
jae
outsl
scas
out
dec
mov
and
sub
xlat
out
dec
or
mov
loopne
and
pop
sbb
xchg
roll
inc
mov
pop
pop
jmp
lcall
rcll
test
lea
aad
js
jb
cmpsb
cwtl
dec
push
and
sbb
or
mov
ss
scas
inc
movsl
lret
pop
mov
adc
cmc
sahf
test
pop
push
lods
outsb
mov
popa
leave
xchg
xor
ret
pop
popa
in
pop
dec
add
imul
mov
daa
scas
test
dec
imull
shrb
fs
iret
int3
jbe
stos
scas
les
mov
mov
repz
in
movsb
jne
or
loope
mov
inc
dec
out
shll
les
push
icebp
fidivrs
hlt
pop
mov
sti
mov
fdivr
outsl
cmp
data16
inc
arpl
fadd
dec
mov
cmpsb
adc
cmp
fiaddl
mov
and
dec
mov
je
xor
xchg
in
sbb
outsb
int3
adc
enter
scas
popf
cmpsb
rcr
lahf
mov
movsb
mov
clc
cmpsb
mull
ds
es
mov
aas
cmc
dec
fnsave
push
cs
xchg
or
out
je
shll
mov
call
push
test
icebp
add
mov
test
sbbl
ret
jne
mov
lods
insb
imul
xchg
stos
jge
push
je
mov
outsb
out
mov
add
xchg
cmp
aaa
jnp
mov
shll
shll
jecxz
mov
add
js
or
scas
enter
xlat
mov
lds
iret
mov
es
and
popa
adc
push
mov
sub
rcll
sub
test
shlb
dec
std
push
out
add
sub
fadds
mov
jecxz
hlt
sub
mov
mov
inc
sahf
ret
xchg
sub
xchg
fdivs
popf
jbe
lret
jno
addr16
scas
adc
mov
int
mov
cmp
icebp
lock
pop
sahf
push
test
aad
lahf
dec
adc
std
and
popa
stos
gs
cmp
movups
loopne
es
jae
sahf
dec
mov
ret
mov
sub
getsec
nop
stc
jl
andl
movsl
js
std
mov
call
mov
aaa
ss
adc
mov
pop
jmp
jb
repz
movsl
sahf
aas
or
inc
pop
and
scas
mov
lock
test
sub
ds
test
test
and
sbb
decl
ret
sbb
out
pop
dec
push
cmp
mov
loope
adc
and
lock
gs
out
dec
mov
fs
popa
loop
sahf
pop
inc
lcall
pop
outsb
sub
fs
fcoml
jno
je
dec
sbb
jo
in
mov
jg
or
dec
ret
sbb
cltd
in
jnp
cmp
hlt
outsl
mov
addr16
xchg
ret
dec
loope
les
jae
lahf
mov
push
clc
sbb
dec
jo
add
mov
mov
in
xchg
push
inc
scas
enter
mov
into
xor
test
xor
movsl
inc
cmp
into
jb
cmp
mov
cmc
xchg
pop
xchg
aam
sub
out
or
add
aam
push
mov
fwait
jg
push
notb
push
cmp
outsb
std
je
lcall
jno
push
jne
mov
movsl
decl
cmp
dec
hlt
sub
pop
mov
test
repz
cld
push
and
adc
xchg
scas
pop
adc
push
push
mov
jge
jle
jmp
mov
jne
hlt
and
add
fmull
jbe
mov
jo
hlt
dec
add
and
push
loopne
cltd
adc
lods
pop
mov
push
or
imul
inc
sbb
mov
stos
push
movsl
lret
xor
sub
xchg
iret
imul
mov
mov
shlb
jne
mov
cmp
and
gs
imul
inc
pop
lret
push
sbb
gs
mov
push
iret
fnsave
pop
cmp
mov
mov
ret
les
xor
mov
pop
cmc
mov
xchg
jmp
bound
pop
mov
pop
pop
pop
adc
insb
pop
cmp
outsb
in
pop
das
xchg
mov
mov
lret
inc
pop
inc
rolb
addr16
and
add
sahf
nop
call
lret
outsb
cltd
cltd
iret
sbb
inc
test
ficomps
repnz
ret
pop
out
mov
mov
loopne
xor
mov
ud1
pushf
hlt
test
mov
add
fdivrl
xchg
sbb
mov
cmc
cld
pop
xor
pop
mov
and
mov
stc
mov
and
jl
sarb
adc
lahf
fdivrl
stc
and
mov
adc
mov
add
jp
push
pop
sbb
int3
in
sbb
je
stc
xchg
push
iret
frstor
adc
jge
int3
in
push
fmull
cmp
imul
add
xchg
fs
mov
mov
push
adc
inc
insb
adc
mov
and
insb
test
mov
mov
imulb
orl
daa
dec
mov
xchg
test
inc
xchg
pop
jmp
and
mov
dec
sub
jecxz
push
dec
push
idiv
lods
cmp
push
mov
std
mov
mov
cwtl
sbb
pushf
sti
mov
jge
push
dec
ss
jae
and
mov
jbe
pop
arpl
add
sarl
sbb
add
inc
frstpm(287
das
jb
or
or
cmpsl
xchg
xchg
rcll
dec
dec
or
xchg
out
push
adc
in
and
jmp
jmp
loopne
pop
fsub
mov
ljmp
or
lock
push
and
push
in
adc
out
jne
cmpsb
pop
das
les
orb
lea
enter
mov
fimuls
cwtl
movsb
mov
mov
std
stos
jmp
pop
and
pop
push
mov
out
mov
cmp
loope
dec
ljmp
sarl
shll
in
in
pop
in
loop
es
lea
jnp
cltd
scas
shlb
cltd
mov
xor
pushl
adc
sbb
sbb
adc
arpl
cmp
fimull
push
dec
mov
scas
adc
ljmp
push
adc
mov
dec
jmp
sbb
scas
fcompl
sbb
fcoml
inc
mov
inc
scas
mov
pop
lret
sub
rcrb
out
mov
add
xchg
into
arpl
cmp
cltd
jno
dec
adc
jno
int3
xor
daa
ljmp
dec
jno
les
dec
inc
xor
xor
imulb
in
push
mov
sarl
fsubrs
push
mov
fnstcw
pop
les
and
daa
jns
pop
fwait
mov
add
ja
sarb
loopne
aas
xlat
push
mov
mov
aaa
pop
les
cmp
mov
call
mov
leave
fidivrs
mov
mov
in
push
xchg
loopne
adc
popf
xchg
xchg
shlb
xchg
sub
clc
or
xor
xor
sub
or
add
xor
das
and
sbb
insl
xor
subl
add
not
fwait
sub
outsl
and
mov
xchg
ss
sub
je
xor
xor
adc
movsb
movsb
ja
xor
lock
popa
fldenv
bound
data16
mov
jge
dec
ss
movsb
sub
inc
ja
arpl
pop
push
cmpsb
adc
scas
sub
adc
dec
sub
pushf
lcall
xor
sbb
inc
aaa
inc
mov
pop
inc
or
adc
gs
or
pop
test
mov
push
add
shll
xor
je
pop
or
sub
pusha
dec
mov
sbb
imul
xchg
mov
push
jns
out
add
push
mov
dec
sbbl
jnp
jp
clc
mov
xchg
andb
mov
imul
dec
shl
xchg
icebp
push
mov
cmp
int3
xchg
add
xchg
inc
jg
frstor
pop
add
ja
jo
jo
mov
test
adc
shlb
fstp
mov
imulb
lahf
aad
dec
jo
fstpl
sbb
add
bound
scas
ljmp
stos
xchg
mov
and
cmp
test
pop
mov
int3
sub
mull
push
xchg
adcl
adc
fwait
ret
xor
jp
insl
dec
lcall
loope
std
shrb
mov
call
cmp
repz
test
ss
cmp
xor
inc
sbb
and
and
loope
adc
sbb
sub
xchg
jae
dec
loope
and
xor
jmp
or
xchg
push
sbb
fstpt
adc
sbb
fimuls
jmp
pushf
or
or
inc
test
pop
jnp
fwait
push
int
icebp
sub
cmp
jg
in
inc
mov
lea
jg
add
cmp
rorb
cmp
mov
jbe
pop
adc
test
pop
in
sub
sub
xchg
add
test
inc
stos
mov
xor
js
and
shlb
cmpsb
cmc
mov
mov
mov
in
hlt
mov
inc
stc
nop
push
mov
mov
fimuls
push
lods
pusha
aaa
lret
lods
cmp
in
out
push
adc
push
xchg
push
lea
sub
cmpsl
push
out
adc
sbb
outsb
sti
movsb
jbe
or
xorl
loop
sar
jmp
insb
gs
ds
dec
lods
inc
adc
cmp
add
mov
fistpl
lods
test
popf
lret
mov
mov
shl
jp
jle
rcr
ss
lea
mov
jmp
sub
insl
adc
or
adc
mov
incl
mov
fsts
mov
dec
add
sbb
shrb
inc
test
inc
mov
jne
fsubr
cwtl
or
out
push
pusha
pop
lock
ret
sbb
mov
xchg
xor
popf
mov
jnp
fcoms
test
movsl
pop
pop
movl
cwtl
cmpsb
pop
adc
sahf
pop
mov
adc
and
inc
cwtl
mov
mov
divl
pusha
xchg
xchg
push
les
mov
mov
fwait
popf
addr16
subl
cmp
xor
mov
scas
add
jl
inc
sbb
inc
repz
and
xchg
mov
xor
sbb
mov
mov
repz
movsb
mov
sub
fsubrl
xchg
mov
mov
ljmp
test
sbb
dec
inc
push
dec
repnz
mov
call
xchg
dec
add
test
ljmp
sub
fdivs
movsb
xchg
ja
add
jmp
pop
jp
adc
insl
mov
fistl
mov
pop
sahf
push
ds
fdivp
jae
pop
fldl
in
jne
ffree
and
das
push
scas
and
daa
mov
fbstp
pop
jnp
xor
repnz
mov
cltd
mov
iret
mov
cmp
mov
mov
adc
lea
sahf
fdecstp
jbe
add
push
mov
insl
mov
fisttps
test
xorb
scas
lret
pop
xor
sub
stos
call
mov
cmp
pop
xor
stos
loopne
dec
test
shl
cwtl
mov
push
xor
inc
push
inc
out
inc
xor
orb
shrb
fwait
jns
or
gs
pop
leave
adc
and
sbb
sbb
lahf
bound
stc
xor
jle
sbb
ss
out
loop
sbb
subb
adc
push
and
cmpsl
cwtl
push
clc
mov
sbb
xchg
imul
jo
mov
ds
mov
cmpsb
jg
movsl
mov
outsb
ret
nop
mov
pop
push
insl
sub
dec
and
std
pop
mov
into
dec
insl
push
sbb
lret
cmp
push
das
dec
pop
push
adc
adc
xchg
popa
into
lods
hlt
shrl
push
ljmp
push
mov
cmp
jecxz
mov
cmpsl
adc
lock
cs
mov
call
or
sbb
mov
ds
in
stos
xchg
mov
insb
or
dec
cmp
sub
dec
je
xchg
iret
popl
xchg
fcompl
cmpsl
inc
and
dec
lock
jne
test
stos
mov
pop
inc
mov
enter
mov
pop
aas
adc
xor
ret
push
lret
in
iret
fildl
jg
stc
pop
out
jns
rclb
jp
or
or
pop
pop
mov
push
outsb
dec
add
jmp
pop
mov
mov
adc
fwait
inc
insl
in
cwtl
iret
jb
mov
cltd
add
icebp
sbb
es
insl
jg
gs
daa
xchg
cli
mov
outsl
fistps
ds
pop
mov
subb
pop
push
fxch
lret
inc
mov
mov
xor
popf
cld
bound
or
movsl
cmp
push
mov
jne
shll
jge
pop
mov
icebp
ss
in
outsl
mov
mov
mov
mov
loope
dec
inc
arpl
or
mov
fstl
or
es
js
jg
push
or
incl
loopne
jae
cmp
popf
jns
aam
sti
pop
paddsw
dec
in
sbb
add
mov
mov
lock
nop
jecxz
stc
jnp
jge
aaa
in
jmp
cmpsb
and
arpl
add
dec
cmp
aam
add
ja
and
inc
dec
imul
je
jecxz
mov
movsb
pop
aas
jmp
ljmp
lcall
dec
push
mov
xor
adc
xor
add
loop
shrl
loope
jnp
shll
cmp
fucomp
lds
lods
sti
mov
and
retw
cmp
stos
mov
xor
cld
jae
push
jmp
arpl
mov
movsl
or
mov
loop
pushf
inc
popa
jecxz
add
mov
neg
inc
pop
xor
xor
and
psrlq
jbe
jle
dec
fstp
gs
dec
mov
scas
mov
mov
cmp
mov
push
stos
mov
xor
stos
inc
sbb
or
orl
jo
rcr
loopne
pushf
lock
cmp
leave
push
ljmp
lds
mov
arpl
sub
and
in
cmc
mov
cs
adc
addr16
shlb
adc
ljmp
inc
adc
aad
call
das
mul
scas
pop
push
pop
dec
sahf
mov
adcb
es
and
mov
mov
fcmovnu
jge
mov
sub
sar
mov
mov
sbb
ljmp
sub
push
mov
jp
nop
ret
ror
stos
lods
mov
mov
aas
xlat
cmp
adc
sbbl
lahf
out
xchg
lret
push
pop
and
stos
imul
popf
outsl
push
outsl
ljmp
inc
adc
sbb
sub
mov
push
mov
sbb
iret
ljmp
loopne
cmp
in
add
outsl
or
lock
jp
push
sbb
mov
cli
sub
xlat
pop
dec
mov
adc
sub
scas
xor
mov
xchg
test
outsb
aas
or
push
push
mov
sahf
mov
test
cwtl
pop
ss
std
mov
mov
or
shll
xor
jp
mov
cmp
icebp
clc
jge
cmp
adc
inc
push
in
mov
outsl
hlt
out
mov
sub
int
sub
add
mov
in
movl
fists
xor
in
mov
cwtl
jne
pushf
inc
sar
das
pop
addb
test
sbb
jmp
out
inc
lret
pop
ret
scas
dec
push
popa
pop
bound
sbb
popa
outsb
ret
in
scas
je
stc
mov
push
pop
aaa
out
adc
lahf
sbb
pusha
xchg
mov
mov
nop
adc
cld
add
jecxz
daa
cld
scas
fisttps
or
jb
jno
or
je
ljmp
and
jp
fldcw
sbb
xchg
jns
and
push
mov
xchg
jle,pt
ss
lock
jmp
cwtl
jge
imul
pop
and
mov
xchg
jg
gs
int3
idiv
fisttpll
inc
loopne
mov
daa
xlat
push
dec
mov
push
insb
adc
push
jg
sub
push
pop
sahf
ss
add
cmp
xor
mov
rolb
bound
pshufw
das
hlt
loop
pop
and
and
loopne
test
nop
repz
fsubrl
ljmp
stos
pop
sbb
mov
add
lods
jmp
fcoms
sbb
pop
rcrl
into
ret
mov
fldz
sbb
push
insl
mov
addr16
aam
lods
test
arpl
sbb
add
ficomps
lahf
stos
in
arpl
mov
sbb
xchg
push
push
nop
in
pop
insl
hlt
push
les
sub
pop
rol
sub
dec
cmp
movsl
popl
lahf
and
shll
je
imul
adcl
mov
jb
fisttpl
dec
lcall
sarl
fsubrl
adc
jo,pt
stos
sbb
add
mov
sub
shl
bnd
jnp
mov
loope
push
jp
dec
add
into
cld
loopne
ds
or
inc
jle
arpl
lds
scas
mov
loopne
sub
stos
out
cmp
add
bound
mov
jecxz,pt
add
push
fstpt
mov
jae
adcb
add
loop
iret
scas
lcall
jae
xorb
hlt
loopne
fists
fsubr
add
or
aad
pop
repz
lock
add
out
nop
xchg
cwtl
xlat
ss
popf
sub
cmc
jmp
dec
fiaddl
sub
pop
testb
subb
movsl
inc
insb
and
sarb
add
cmp
daa
imul
mov
ljmp
popf
mov
jno
xor
add
stos
xorl
adc
push
in
shl
cmpsl
sbb
xchg
pop
out
mov
mov
pop
mov
sahf
imul
idivl
and
cwtl
mov
mov
sub
das
jp
sbb
add
xor
xchg
iret
sbb
add
cld
mov
insl
inc
add
push
cmpsl
sahf
inc
stos
inc
mov
pusha
andl
into
xchg
mov
pop
mov
cmp
movsl
outsl
fnsave
aaa
fs
movsb
shrl
and
sub
insb
mov
inc
dec
fimuls
cld
xchg
cltd
xchg
xor
pop
sti
dec
lcall
xor
sbb
enter
dec
into
outsl
iret
xor
cmpsb
mov
lea
shlb
fsubl
movsb
inc
and
or
ret
icebp
sub
shr
ret
subb
xchg
add
mov
mov
test
in
lods
clc
or
mov
notb
fidivrl
cmpsl
loop
pop
and
in
mov
popf
pusha
mov
cltd
lret
sbb
test
out
jp
push
lods
add
mov
or
mov
addr16
xchg
leave
out
mov
aam
sub
pop
dec
adc
xchg
orb
ret
mov
ret
scas
inc
repnz
ja
hlt
stos
cs
push
aas
push
ret
push
and
push
cmp
jge
dec
sahf
add
outsl
mov
jb,pn
pcmpgtd
and
scas
xchg
popf
push
push
and
punpckhwd
push
sbb
insb
bound
xchg
mov
iret
ret
add
xor
mov
setae
scas
daa
mov
and
xor
xchg
sbbb
dec
inc
jge
out
psllq
shlb
outsl
out
mov
adcl
jnp
push
pop
in
xchg
pop
cmp
xor
cmp
sub
push
and
ds
jge
mov
adc
jno
push
aam
divl
icebp
xlat
paddd
ror
cmp
cmp
gs
jno
loopne
les
not
pop
push
sbb
aam
and
mov
lock
stos
jmp
stos
fs
mov
cmpsl
cld
test
xor
cmp
xchg
dec
lods
aas
adc
inc
adc
xor
push
jnp
dec
mov
pop
das
jecxz
sub
les
ljmp
in
scas
inc
ljmp
stos
out
dec
decb
shrb
sbb
fsubr
push
or
pop
jbe
popa
stc
cmp
mov
lods
mov
in
pop
bound
rcrb
cld
imul
mov
sub
popa
into
pop
fs
stos
lret
int
inc
jecxz
inc
fistpll
mov
push
icebp
dec
insl
lods
push
xor
mov
jg
add
sub
xor
clc
lods
ljmp
hlt
cmp
push
insl
arpl
and
or
ja
push
test
push
add
cmc
cmp
fucomp
sbb
loopne
movsb
push
stc
popa
xchg
insl
and
movsb
ja
push
inc
outsl
push
jno
or
jo
inc
das
push
test
into
inc
jo
int3
or
xor
out
mov
xchg
xchg
and
xor
pop
out
pushl
test
out
cmc
and
mov
add
pop
xor
cmpl
cmc
adc
jb
aad
jnp
add
adc
sarl
test
sbb
cmp
jge
mov
xchg
xchg
mov
outsl
xchg
fs
and
mov
lods
lods
pusha
and
mov
test
adc
arpl
test
mov
stos
rcll
pop
jge
push
push
xchg
cmpsb
lret
fsubr
lea
outsl
cmp
in
fldln2
pop
sbb
pop
pop
notb
scas
xor
mov
push
imul
jp
and
or
lods
mov
lods
mov
inc
cmpsb
stos
mov
pop
sbb
sbb
jae
mov
pop
sbb
sbb
inc
adc
ficomps
mov
out
dec
xchg
repz
pop
pop
iret
sub
repnz
lods
inc
jge
stos
or
insb
xchg
pop
or
mov
aad
fwait
ss
nop
sub
lds
fdivrl
test
adc
push
ret
hlt
push
mov
stc
ffreep
in
cmp
ljmp
mov
mov
js
xchg
mov
mov
jecxz
aam
mov
mov
inc
push
mov
inc
pop
xlat
mov
xor
mov
pop
lods
testb
fnstenv
gs
aas
dec
cwtl
int
imul
scas
xor
hlt
imul
ja
adc
rol
pop
outsb
mov
gs
cmp
dec
cmp
test
lods
lea
mov
and
xchg
cld
lahf
je
mov
aad
hlt
fisubrs
outsb
and
mov
or
or
test
xchg
pop
pop
cmp
inc
arpl
orb
dec
or
mov
jo
in
jge
xor
stc
cmp
add
mov
decl
pop
lcall
fnsave
xor
jne
loopne
jle
pop
add
pop
or
mov
mov
bound
pop
cld
pop
add
mov
push
andl
jo
sub
inc
jno
push
test
push
xchg
cmp
rcrb
jmp
push
mov
adc
pop
and
xor
js
testl
in
xchg
popf
cwtl
lret
mov
out
inc
or
mov
cli
xor
jmp
inc
inc
and
or
stos
jnp
js
jge
test
ret
xchg
pop
and
and
dec
adc
popa
int3
gs
push
aad
xor
add
mov
mov
pop
fadd
jecxz
xchg
cmp
sahf
addr16
sbb
call
pusha
int
pop
movsl
xchg
jecxz
leave
add
nop
frstor
pushf
cmp
or
cmc
xor
scas
mov
inc
sub
mov
push
mov
fmuls
nop
xor
hlt
push
mov
lahf
dec
push
mov
jnp
add
inc
js
pop
inc
icebp
mov
hlt
test
pushf
fmull
dec
add
jbe
jl
lret
icebp
or
cmpsb
repnz
and
mov
lcall
jae
in
pop
add
daa
adc
nop
es
mov
aaa
je
gs
icebp
int3
xchg
test
sbb
fcompl
adc
sub
js
mov
pop
adc
mov
xor
sahf
fiadds
pop
iret
mov
adc
lods
mov
mov
push
pop
cmpl
sbb
test
dec
xor
fstl
sub
je
sub
ds
pop
sahf
adc
iret
add
mov
jmp
and
lret
sub
popf
dec
hlt
dec
pop
in
xor
iret
lods
push
repnz
mov
pop
pop
outsb
stc
mov
cmp
adc
cmpsb
xor
mov
sbb
pop
sarb
lods
and
push
and
xchg
xlat
lret
mov
push
cmp
mov
call
cmpb
dec
pusha
push
jmp
addl
add
cli
jl
loop
sub
mov
cmp
scas
js
scas
or
sbb
incb
shlb
fwait
dec
int
mov
xor
nop
pop
jnp
jns
or
push
mov
ret
sbbl
es
mov
mov
imul
aas
add
into
in
xchg
sbb
mov
gs
pop
add
or
sub
add
xchg
add
sub
rolb
and
jne
sub
popf
sbb
fisttpl
push
mov
dec
sub
adc
push
push
fdivs
add
lcall
pop
mov
cmp
pop
inc
push
mov
jge
pop
in
cmp
and
push
mov
idiv
lcall
push
cmc
cmpsb
mov
dec
into
dec
es
lods
xor
jae
insb
fsubr
lcall
int
int
loopne
ret
xchg
jge
mov
xor
in
xor
or
cmpb
ja
xor
jb
jg
jns
pop
or
aam
enter
flds
jb
cmpsb
mov
inc
mov
sbb
fcoml
aas
stos
sub
pop
xchg
sub
pop
sahf
mov
jecxz
adc
pop
mov
or
pop
sbb
jb
sub
and
sbb
xchg
outsl
jns
jae
test
sbb
cmc
mov
and
sub
and
fmull
jecxz
jmp
fidivrs
idiv
int3
leave
repnz
fisttpl
xchg
int3
sarb
mov
xchg
pop
jmp
jecxz
andl
sbb
fstpt
cs
add
ret
movsb
lock
dec
add
sbbb
xchg
lds
movsb
cmp
cld
mov
jnp
and
mov
rep
pushf
ret
lods
in
cmpsl
xchg
pop
cmpsl
addr16
push
mov
call
inc
sarb
fwait
rolb
dec
cmp
pop
xor
scas
scas
dec
in
in
mov
push
orl
lods
sub
jne
pop
lods
mov
pop
pop
mov
repnz
mov
push
or
es
fsubl
lods
cmp
mov
add
cmp
out
test
xor
xchg
addb
gs
movsl
and
bound
mov
lcall
inc
mov
outsb
mov
mov
loop
ds
fcoml
arpl
sub
sub
mov
push
mov
lret
adc
ss
pop
mov
ss
push
sbb
daa
lcall
lds
push
mov
sub
lods
xlat
nop
cmpb
lahf
inc
adc
repz
xchg
std
pop
pop
leave
mov
mov
mov
sbbb
aaa
out
stc
add
pop
and
aam
jnp
sub
pusha
jb
push
cltd
into
shll
mov
mov
mov
data16
aas
sbb
mov
repz
mov
imul
cwtl
cmp
adc
ljmp
xlat
int3
fimuls
bnd
xchg
cwtl
jecxz
dec
fldt
lds
adc
sub
andl
add
repz
test
jmp
pop
xor
adc
loope
and
les
es
je
sar
sub
pop
dec
in
mov
arpl
cltd
mov
imul
adc
xor
mov
push
mov
pop
mov
cwtl
hlt
orl
outsb
jns
pop
pop
cltd
fcompl
out
push
or
js
xchg
into
orb
out
clc
cmpsl
mov
mov
out
add
xor
dec
push
lock
popf
sub
ljmp
in
je
mov
faddl
xor
mov
data16
add
pushf
pop
loope,pt
mov
pop
popf
jne
sbb
cmp
rcrl
cmpsl
cli
arpl
ss
iret
ret
int3
arpl
cltd
mov
mov
cmp
mov
jns
add
xor
shrl
jg
outsl
or
sbb
xchg
xchg
xchg
sbb
pushf
mov
dec
pop
mov
or
pop
jo
push
xor
push
inc
jecxz
jl
and
fcmove
add
pop
fst
into
movsb
inc
ja
mov
sub
std
js
dec
cmp
push
loop
das
in
sub
frstor
add
dec
or
jmp
jb
in
inc
cltd
ret
mov
mov
cmp
ret
loope
pop
sub
mov
cltd
sub
sti
add
js
rcrl
xchg
xchg
rol
sti
out
movsb
out
pop
inc
pushf
inc
ss
cmp
out
cmpsb
jl
cmp
or
inc
jns
insl
adc
xor
push
push
push
nop
or
jp
in
enter
popf
push
scas
movsb
movl
xor
or
loopne
adc
adc
pushf
ljmp
xor
xchg
pop
shr
repz
cmp
push
xorps
inc
cmpsb
lds
idivb
in
mov
test
dec
push
test
sbb
and
mov
outsl
cmp
jb
jg
mov
push
ret
push
jge
push
rcrl
and
xor
inc
mov
dec
and
stos
fdivs
roll
movsl
xor
idivb
ljmp
mov
jl
outsl
or
xchg
fnstsw
test
jg
mov
pop
add
add
mov
into
in
test
dec
in
cmp
stos
or
outsl
cld
nop
inc
and
or
cwtl
sbbb
inc
adcl
fsubrs
lods
shr
ds
xor
imul
xlat
mov
ret
push
push
mov
dec
xchg
xor
pop
xchg
cmp
lret
test
lock
push
pop
fwait
andl
in
push
xlat
movsb
mov
dec
lret
push
mov
cld
lods
into
or
aaa
out
jb
pop
fs
in
gs
cmpsl
push
call
mov
mov
idiv
push
movsb
inc
jp
inc
loopne
fld
repz
jo
jecxz
or
or
pop
jae
inc
xchg
adc
mov
lret
pop
adc
sbb
cld
js
ljmp
popa
mov
pop
repz
call
push
mov
fdivs
xor
fwait
rorl
stos
pusha
fs
daa
fstpl
mov
shl
xchg
rclb
aam
mov
shl
fstpl
sbb
add
dec
dec
sbb
push
pop
pop
das
dec
xor
cvtdq2ps
xchg
scas
std
sbb
dec
and
jae
push
fsubrs
push
pop
sbb
dec
mov
xor
xor
notb
aam
outsl
leave
sbb
orl
ror
cld
and
outsb
jne
jb
out
and
push
inc
mov
dec
add
mov
movsb
jb
push
lock
push
push
lcall
or
mov
jp
cmc
jnp
loopne
xlat
arpl
mov
cmp
and
sbb
xchg
movsb
test
pusha
stos
dec
gs
push
or
sub
xor
jae
and
pop
cltd
pop
push
fiaddl
cltd
insl
cli
divl
les
jecxz
inc
mov
shl
js
popf
shll
xchg
lods
stc
push
mov
jp
jo
mov
sahf
mov
cmp
jae
ds
pop
mov
jae
leave
pop
pop
xlat
nop
clc
scas
les
adc
shr
scas
push
pushf
mov
std
aas
push
mov
aas
sti
push
out
cmp
cli
sbb
or
pop
sub
add
movsb
test
xchg
cmpsb
or
sbb
leave
testb
inc
mov
int3
aaa
jge
enter
insl
adc
mov
ss
fnstsw
inc
je
sbbb
std
jno
xor
mov
lcall
popa
sub
push
add
divl
mov
sbbb
jnp
into
push
enter
pushf
xchg
dec
fldenv
sub
adc
sub
add
std
adc
xchg
mov
mov
push
mov
out
pop
in
cmpsb
dec
mov
dec
fwait
ret
lods
pop
mov
les
outsb
jge
sbb
jb
cmp
xor
mov
fisttpll
inc
fstpl
pop
xchg
mov
mov
mov
ficoms
sub
inc
pop
std
arpl
adc
insb
sbb
mov
fisubrs
sbb
cmp
dec
daa
lret
scas
push
clc
not
fwait
movsl
and
cs
add
add
rorl
mov
aaa
push
sbbb
pusha
roll
pop
cmpb
cmp
or
out
add
jo
mov
xchg
jmp
sbbl
mov
sahf
test
cmp
jmp
push
es
pusha
into
mov
popf
ret
and
or
or
in
cld
out
cmc
je
adc
sahf
andb
icebp
and
lea
xor
lds
sub
ds
icebp
testb
lcall
jmp
sbb
sub
fstl
xor
imul
std
and
shrl
sti
pop
mov
xchg
sbb
cmp
sarl
push
leave
push
stos
mov
imul
rcll
test
sub
ds
jge
scas
loope
sbb
push
and
dec
cvttps2pi
or
xchg
pop
jl
mov
push
aad
ret
out
push
test
scas
ds
mov
ljmp
mov
rol
sbb
cli
cltd
xchg
adc
aaa
jnp
data16
jmp
mov
ja
pop
stos
cli
fsts
aaa
dec
or
dec
lcall
into
movsb
imul
rclb
jno
or
add
cli
inc
aaa
rcll
mov
push
popf
push
shll
nop
push
xchg
out
popa
or
mov
push
addr16
call
inc
and
push
cmp
add
js
in
jns
aas
pop
sub
dec
mov
in
mov
clc
inc
or
adc
adc
pushf
loop
jp
mov
push
sub
js
or
mov
aas
std
pushf
mov
fldcw
daa
mov
enter
dec
xor
push
push
ja
sbbl
push
jecxz
add
or
aam
or
mov
dec
stos
sti
je
xlat
xchg
or
jge
mov
push
push
out
push
and
add
test
mov
nop
sbb
mov
inc
lds
mov
test
push
xchg
cmp
pop
call
jb
adc
push
mov
xor
xor
xchg
add
loop
mov
or
repnz
test
jecxz
lods
cmpxchg
in
fs
jp
in
mov
xor
pop
mov
movsl
jb
aas
mov
mov
lahf
jle
js
push
in
sbb
and
fisubrl
jp
sti
outsl
sub
mov
andl
pop
test
cli
fstp
pop
mov
sbb
mov
mov
test
mov
jl
notb
insb
movsl
dec
gs
inc
aam
or
call
sub
jne
and
jmp
outsb
leave
aaa
pop
push
jno
pop
test
fidivrl
mov
pop
xor
cmpsl
mov
xlat
dec
inc
pop
int3
cs
ret
xor
fmuls
xlat
xor
sbb
mov
push
add
cltd
and
jo
jmp
push
aad
and
xor
jnp
add
aaa
mov
pop
cli
and
aam
lea
ljmp
xlat
rorb
mov
jp
in
lcall
aaa
inc
cs
popa
xchg
popa
shll
xchg
gs
int3
jbe
inc
add
das
sbb
outsb
ds
rolb
fmull
adc
inc
or
xor
pop
pop
outsl
imul
push
outsb
dec
push
xlat
ret
je
fidivrl
pop
popa
ret
or
movsb
push
and
bound
ljmp
sbb
jb
cltd
shlb
dec
mov
or
aaa
outsl
jle
in
push
pop
xor
loopne
pop
push
movsl
pop
xor
sahf
stc
add
pop
pop
out
inc
mov
add
jo
xchg
xor
addr16
pushf
mov
inc
inc
shrb
lret
inc
ret
mov
adc
mov
pushf
mov
shr
pop
pop
add
test
mov
fidivs
adcb
pop
adc
fistpl
and
addr16
dec
jbe
std
aas
pop
sub
jns
sbb
outsl
add
adc
push
xchg
pop
add
push
push
pop
icebp
mov
inc
shll
mov
test
push
xor
xchg
imul
cmp
push
xchg
loope
or
ret
ret
mov
hlt
jge
iret
call
movsl
mov
lods
icebp
popa
popa
lcall
jmp
adc
and
jnp
and
mov
push
mov
sub
call
sahf
adc
nop
lahf
push
sbb
xor
xchg
je
repz
mov
je
imul
lods
jns
cltd
sbb
cli
js
and
leave
jne
xrelease
shlb
jge
dec
mov
mov
jp
jecxz
arpl
out
mov
push
cmp
jl
fsubs
mov
and
sbb
push
push
ffree
es
jecxz
lea
lds
cwtl
shll
int3
cmovno
dec
and
sti
pushf
push
add
mov
xchg
inc
mov
bound
jbe
pop
xchg
xchg
dec
test
and
lock
inc
push
jbe
dec
sti
fs
loop
repz
iret
sahf
adc
jge
mov
cmpsl
js
mov
xchg
inc
xchg
fdivl
lds
pop
leave
test
int
cmpsb
jge
add
pop
and
jmp
hlt
pop
sbb
outsl
test
in
xor
and
jl
js
bound
idivb
lods
mov
sbb
adc
ljmp
lret
cld
fisubl
sarb
adc
movsl
je
mov
out
mov
pop
cmp
jecxz
xchg
or
in
sub
dec
dec
fidivrl
adc
scas
loopne
xchg
dec
int
pusha
dec
into
and
lret
rdmsr
jo
or
das
xchg
xchg
xchg
bound
pop
xchg
inc
xchg
test
xchg
cmp
lcall
mov
lret
cltd
push
cli
imul
mulb
cmpl
mov
in
add
stos
mov
arpl
xlat
ret
outsl
out
enter
inc
ds
xchg
lea
jmp
gs
into
pop
js
dec
sahf
imul
out
in
popf
jnp
or
loop
dec
std
into
fs
xchg
xchg
push
outsl
pushf
aaa
and
or
test
ljmp
jle
mov
inc
loopne
and
test
js
add
jne
push
dec
pushf
mov
push
movb
jmp
fmuls
ja
in
jge
xchg
adcb
call
imul
mov
out
aam
jg
movsb
push
lods
fisttpl
cmp
lcall
mov
sahf
aas
inc
push
jae
call
fcmovnb
imul
stc
mov
imull
ss
sbb
add
ss
mov
mul
clc
mov
fsub
xchg
push
pop
and
shl
and
mov
nop
stc
iret
in
arpl
push
adc
int3
int
test
lahf
jb
ljmp
pop
repnz
sub
push
jg
and
notb
add
mov
jecxz
stos
inc
adc
out
insb
test
inc
pop
fildll
mov
and
out
sbb
daa
clc
mov
cltd
ja
les
sbb
in
hlt
jae
pop
mov
std
sub
mov
movsb
mov
jb
cmp
cs
in
test
fsubr
push
movsb
js
call
dec
clc
cs
out
hlt
jmp
push
adc
ja
push
cli
sub
and
div
in
jno
xor
pop
adc
fisubrs
sub
in
xor
add
outsl
cmp
sahf
xor
jmp
sbb
push
xchg
repnz
stc
pop
cmpsl
imul
xchg
mov
pop
les
std
fld
push
xchg
and
add
adcb
inc
std
bound
jl
ret
int
push
lods
int3
test
filds
dec
aas
xor
out
push
xchg
lahf
sbb
jbe
mov
and
ret
push
pop
mov
fnstcw
mov
aad
xor
push
cmp
or
fidivl
les
enter
sarl
inc
sub
push
mov
int3
inc
xor
test
and
cli
test
mov
mov
shr
and
call
push
das
pushf
and
out
or
adc
xor
mov
mov
addr16
shll
mov
fists
es
sbb
inc
filds
mov
sub
lods
pop
sbb
inc
sub
sub
subb
mov
mov
mov
jl
cwtl
jnp
pop
pop
hlt
je
in
xchg
lods
rolb
lea
daa
jl
mov
push
test
in
imul
mov
mov
adc
fistpl
jge
inc
mov
xor
fwait
scas
push
jp
xchg
aas
mov
push
inc
into
fsubs
cmpsb
cld
dec
pusha
popf
mov
test
clc
adc
hlt
aaa
aaa
ds
mov
and
lahf
mov
sbb
jmp
push
dec
cmp
movsl
in
cmpsl
fs
outsb
addb
std
popf
out
mov
sub
test
pop
mov
or
pop
stos
sbb
mov
push
dec
inc
mov
addl
call
push
addr16
in
mov
test
int3
test
xchg
fsubs
xchg
cwtl
and
cmpsl
mov
data16
cmp
loop
icebp
xchg
adc
mov
sub
push
sub
fisttps
jge
mov
xchg
xorb
shlb
ljmp
sbb
push
dec
sbb
push
mov
push
loop
xchg
outsb
xchg
xchg
jne
jnp
cmp
mov
cmc
scas
fs
sti
shll
fldenv
shr
std
jge
dec
dec
mov
imul
test
pop
or
in
xlat
outsb
push
icebp
lea
inc
aaa
xlat
in
sbb
sub
mov
inc
push
stos
into
xchg
jb
js
push
imul
xrelease
nop
sbb
mov
imulb
pop
pop
jno
inc
pop
out
movsb
mov
dec
cli
sbb
les
xorb
jo
push
sbb
iret
mov
xor
mov
cltd
stc
fs
mov
push
cmp
mov
inc
movsb
cltd
cmp
dec
call
lds
dec
repz
xor
mov
dec
inc
mov
cld
clc
and
add
clc
xchg
mov
inc
xor
aaa
pop
es
scas
call
aas
sarb
xchg
pusha
lret
test
arpl
pushf
push
cltd
bound
inc
outsb
pop
insl
jae
cmp
push
cmp
pop
and
xlat
pop
insb
sbb
dec
adc
and
in
dec
pop
decb
imul
outsb
enter
gs
and
cwtl
mov
inc
sbb
je
mov
cltd
fldcw
xchg
sub
push
insb
pop
in
dec
push
pop
outsb
and
cwtl
or
ret
inc
pop
movsl
jne
ss
adcb
or
loope
pop
pop
fimuls
loop
add
je
data16
mov
xchg
cmp
jb
and
push
and
cs
xor
dec
mov
mov
js
mov
call
add
inc
mov
out
xor
cmp
es
das
push
push
adc
xor
mov
mov
mov
fbld
jns
inc
xchg
push
mov
sar
fcompl
xchg
mov
out
xchg
adc
sub
add
aas
pop
inc
lret
out
in
repz
call
fsubs
addr16
mov
cmp
icebp
lret
stos
xchg
or
dec
dec
or
out
sbb
roll
imul
jp
xchg
fisttpl
test
lahf
pop
mov
push
aaa
les
dec
jmp
and
stos
mov
push
fwait
pop
adc
cmpsl
mov
outsl
mov
fildl
lods
into
ds
repz
mov
repz
das
clc
repnz
fstps
sub
cmp
adc
shl
fdivs
orl
sub
dec
jg
sub
xchg
inc
jg
loop
sub
pop
insb
push
jae
pop
testb
rorb
dec
jbe
sbb
mov
mov
cli
ret
std
inc
hlt
xor
add
and
imul
int3
lret
rorl
cmp
and
push
stos
mov
es
jmp
adc
dec
popf
or
add
jne
adc
xor
mov
fwait
or
stos
pop
inc
ljmp
push
xchg
repz
in
stos
stc
jp
push
xor
push
inc
xor
std
and
aad
std
mov
jl,pn
mov
mov
mov
clc
out
and
cltd
push
add
mov
jnp
mov
sar
int
mov
xlat
out
in
data16
or
enter
push
ret
les
lahf
or
adc
pop
sbb
dec
sub
std
lods
add
leave
sub
and
repnz
jg
inc
jbe
jl
push
cmc
enter
dec
inc
push
dec
jmp
or
cwtl
pop
jle
movsl
mov
sub
sbb
jne
enter
and
xchg
cltd
mov
insl
mov
shrl
mov
pushf
ret
xchg
scas
rorb
dec
out
lret
movsl
fdivrs
lods
xchg
cld
sbb
cmp
mov
push
jecxz
bnd
fnsave
adc
and
orl
mov
mov
shl
jne
inc
fwait
lret
cltd
mov
jg
mov
mov
cmpsb
push
aad
pop
cmp
dec
in
cld
out
outsl
inc
es
push
das
cmc
in
dec
push
push
mov
lret
or
mov
jne
and
sarb
stc
push
xlat
dec
movb
mov
stos
xchg
idiv
jg
sti
idivl
mov
dec
xor
inc
ja
mov
mov
mov
sbb
cmc
cmpsb
leave
popa
out
mov
mov
sub
pop
push
mov
inc
push
mull
mov
in
sti
mov
jae
fwait
xor
inc
out
pop
push
outsl
jl
mov
stc
jp
jg
xor
ja
out
aaa
bound
mov
and
mov
stos
enter
cltd
enter
out
fwait
cmp
in
sti
sbb
sbb
push
inc
lods
dec
sbb
into
pop
jno
imul
or
dec
ror
pop
jnp
mov
pop
push
sub
push
clc
mov
and
push
xchg
jp
xchg
jae
push
aaa
mov
fnstcw
enter
push
and
xor
jb
les
lods
pop
out
push
aam
mov
fucomp
nop
addb
out
xor
movl
orl
fcompl
mov
out
lock
out
repz
cmp
and
inc
lret
and
fldcw
mulb
and
popf
js
mov
cmpsl
add
mov
movsl
rolb
sub
or
insb
add
cmpsl
mov
pcmpgtw
sub
mov
push
add
push
outsb
fsub
push
js
in
jb
repz
mov
sbb
rcpps
mov
sbbl
fwait
test
add
adc
adc
mov
into
cmp
push
push
iret
mov
lods
pop
and
dec
dec
or
pop
add
fnstsw
mov
push
jg
add
fmull
insl
sbb
pop
dec
pusha
out
push
repnz
jns,pt
stos
pop
jnp
rorl
jg
inc
adc
mov
sub
call
ss
xor
hlt
dec
sbb
add
mov
mov
loope
shll
jge
mov
mov
outsl
scas
imul
add
mov
or
push
and
jb
lea
sti
imul
mov
in
mov
in
sbb
xchg
sub
lret
xchg
loopne
push
and
inc
out
mov
sahf
aaa
aaa
xor
pop
outsb
loop
mov
shrb
cmp
int3
loop
outsl
fwait
shlb
fisubs
data16
pop
dec
mov
pop
les
out
mov
and
test
rorb
ds
int
not
jecxz
add
mov
loopne
jnp
sbb
fldt
adc
mov
pop
dec
jmp
js
nop
mov
ret
loop
mov
insl
xchg
dec
adc
or
mov
ljmp
inc
stc
popa
push
addr16
out
add
leave
push
je
mov
pusha
push
movsl
mov
lods
mov
jl
mov
sarl
frstor
cmp
inc
cmp
loopne
inc
xlat
jp
iret
mov
add
mov
dec
es
push
lcall
in
jbe
ds
sub
mov
in
add
imul
adc
mov
xchg
sarl
lock
in
and
add
push
dec
jns
pop
pop
mov
push
cli
rcll
sub
cmovp
cmp
cltd
bswap
loop
mov
inc
xor
lahf
inc
cmpsb
inc
in
lret
rcrl
mov
daa
sahf
int3
imul
test
leave
or
dec
mov
mov
or
jmp
mov
arpl
pop
mov
into
aas
mov
cmp
xor
or
insl
and
inc
jp
cwtl
std
insb
mov
fildl
jb
sbb
xchg
push
adc
mov
xlat
out
std
adc
cmpl
pop
jg
int
or
cmp
push
push
sbb
pop
lret
sub
in
into
mov
mov
mov
sbb
mov
inc
popf
mov
mov
leave
adc
sbb
jl
mov
inc
ret
jae
insb
test
inc
inc
repnz
imul
sub
movsl
mov
or
out
mov
test
sub
xchg
or
in
xchg
push
adc
je
mov
lahf
fstps
or
pop
out
inc
je
add
jb
pusha
adc
lret
dec
mov
inc
fcmovne
sbb
push
movzbl
xchg
cld
dec
in
jp
sbb
xor
test
dec
xchg
in
add
mov
aam
inc
pop
stos
fwait
sbb
adcb
jo
repnz
dec
or
into
jg
and
dec
push
movsl
enter
and
mov
pop
xchg
and
rorb
jp
mov
jecxz
inc
xchg
or
inc
outsl
add
add
test
ds
sbb
aaa
cmp
sub
xor
mov
xchg
lea
test
mov
scas
push
mov
mov
sbb
mov
insb
imul
jge
fisubl
mov
inc
mov
add
sar
mov
jo
mov
repz
inc
cmpsl
dec
mov
push
in
push
cltd
scas
loopne
pop
adc
xchg
sbb
jns
in
cltd
sbb
loop
lret
rorb
gs
adc
imul
ljmp
loop
sbb
sarb
jmp
imul
mov
pop
push
rcrb
es
fisttpll
addr16
sub
hlt
inc
clc
pop
mov
lods
jnp
out
ljmp
aaa
movl
add
cmp
jns
movsb
dec
cmp
cld
inc
stos
and
inc
std
or
je
fwait
pop
stc
and
aas
js
cld
sbb
fisubrl
data16
pop
sbb
aad
pop
aam
xchg
adc
mov
scas
in
mov
xor
xchg
sarb
adc
mov
cld
mov
jae
dec
sub
dec
mov
mov
mov
cmp
repnz
cmc
outsl
mov
aad
and
fs
inc
in
mov
mov
fwait
sahf
jae
push
cmp
enter
cmp
loop
adc
out
ss
jne
pop
cmpsl
icebp
sub
mov
cld
ficoms
mov
out
cwtl
es
loope
pop
xchg
fadds
pop
or
nop
scas
in
push
cmp
sti
daa
gs
lock
incb
hlt
sub
jns
and
fcomps
xchg
decl
movsl
mov
cmp
cmp
mov
push
jecxz
inc
mov
xchg
push
lea
js
add
jp
jmp
stos
push
in
and
mov
addr16
add
xlat
faddl
mov
mov
push
jle
ficoml
dec
cmp
stos
inc
std
inc
and
lret
sbb
dec
stos
inc
mov
xchg
lock
std
sub
mov
popa
push
leave
jmp
pop
pop
xor
sbb
jecxz
in
cltd
cld
in
pop
aam
inc
in
jmp
insl
xchg
popa
lds
in
push
movsb
sub
lods
add
push
cmp
sub
cld
inc
cmp
les
mov
dec
in
adc
lock
fisttpll
sbb
cld
test
test
push
lahf
xchg
dec
adc
data16
pusha
fists
js
leave
xchg
lea
sub
test
xor
or
out
dec
popl
pop
addr16
xor
popf
ret
and
repz
loopw
aaa
or
sbb
adc
adc
stc
jmp
adc
hlt
repnz
cmp
and
mov
and
int
push
adc
pop
nop
lcall
pop
mov
das
mov
pop
aaa
xchg
xor
les
rclb
jg
mov
test
rorb
or
jno
xor
ret
mov
movsb
add
pop
jp
fwait
cmpl
push
xchg
shl
lret
scas
adc
and
loope
sbb
push
arpl
sbb
dec
adc
xor
negb
sar
dec
xchg
xor
push
add
inc
adc
push
out
lock
or
pop
sbb
xchg
insl
sbb
ret
cmc
imul
inc
push
push
pop
push
inc
imul
imulb
shll
mov
lret
sbb
and
lcall
dec
out
xor
jno
adc
dec
fs
scas
xor
cmpb
mov
sbb
push
xchg
lret
mov
pop
fstps
hlt
pop
push
jg
stc
jp
jp
and
xchg
jae
adcl
imul
or
inc
divl
sbb
cld
xchg
inc
imul
sahf
je
jne
xor
mov
add
lods
cmp
jl
negl
dec
mov
adc
cmp
mov
clc
lahf
cld
xor
sub
iret
xchg
movsb
adc
add
imul
ds
mov
test
add
dec
cmc
adc
pop
mov
clc
sub
mov
mov
sarb
pop
jbe
scas
ret
xchg
cmp
jbe
cmp
aam
je
mov
mov
mov
dec
cmpsl
or
pushf
test
gs
dec
shll
add
mov
out
xor
mov
std
cmpsl
sub
addr16
adc
ret
fcomps
dec
aas
or
stc
dec
pusha
add
cmp
shrb
cwtl
or
xlat
lahf
mov
out
or
insb
out
fistpl
xor
fidivl
jo
clc
data16
test
fstpt
lretw
cmpb
pop
insl
mov
sbb
adc
in
mov
ret
lret
jecxz
adcl
mov
pop
daa
pop
je
test
and
out
es
sahf
loope
pop
mov
dec
jle
ret
fnstsw
dec
inc
scas
pop
repz
cmp
fsubrs
or
pop
in
xor
clc
cmp
rcrl
jno
jecxz
inc
pop
jl
sbb
hlt
push
pop
and
mov
insb
mov
nop
cmp
js
cltd
cld
and
in
fistpl
fistpl
out
cmpsb
cs
xor
sbb
clc
cmpsb
push
dec
jmp
lds
shlb
sub
xchg
sub
jnp
mov
stos
jno
scas
mov
or
adc
stos
push
das
push
cmp
cld
leave
clc
popa
cmp
push
adc
lds
arpl
jbe
fsubs
push
addr16
and
stos
inc
xchg
out
xchg
clc
add
inc
aad
push
mov
movsb
adc
imul
cmp
push
cs
xor
push
mov
aaa
push
lret
loopne
push
pop
jl
pop
je
push
inc
pop
in
sbb
aam
push
sbb
mov
inc
lods
arpl
xlat
test
cmp
and
imul
je
out
ds
or
imul
bound
loop
xchg
scas
std
push
ds
xor
int3
icebp
xchg
jns
adcb
cld
pop
test
mov
fimull
loopne
xchg
leave
or
jle
icebp
ja
pop
cmp
insb
and
out
aad
mov
lahf
hlt
mov
push
inc
rorl
add
test
jle
aam
xor
jno
or
sbb
ds
pop
insl
mov
out
jo
mov
sub
mov
pop
pop
sub
in
pop
jl
dec
sub
inc
dec
sub
xchg
ja
pop
push
std
push
cmp
insb
pop
push
mov
xchg
ss
mov
mov
dec
cs
popa
inc
jmp
pop
pop
push
cwtl
faddl
xor
cmp
xchg
lret
test
insb
pop
outsb
fdivrs
jbe
outsb
and
lods
sub
sahf
and
in
fistpll
lods
mov
test
push
push
pop
call
dec
andl
cmp
adc
xor
subl
xchg
imul
nop
lret
cmc
or
call
flds
push
jbe
stc
in
ret
push
and
cmp
adc
iret
push
jecxz
repz
jp
sarb
sbb
mov
inc
in
stos
ret
cmc
pusha
or
xacquire
jno
push
inc
scas
mov
pop
mov
fisttps
and
loop
mov
rol
adc
addr16
sahf
mov
repnz
sub
lahf
leave
dec
int3
arpl
fld
mov
aaa
lods
test
and
xor
adc
mov
in
movsb
adc
jne
imul
cmp
dec
mov
sti
mov
call
xchg
rorl
inc
xchg
inc
push
add
das
lods
aad
daa
lret
jnp
sub
pop
and
inc
mov
add
cmp
shll
loope
fbstp
or
fcoml
int3
xorb
mov
insl
mov
pop
call
inc
dec
dec
imul
dec
jno
das
sbb
insl
clc
inc
daa
test
out
fucomp
add
das
aas
je
into
cld
loope
dec
fwait
sub
mov
sbb
movsl
cmp
les
outsl
subl
jbe
outsb
insb
dec
pop
arpl
jl
das
sub
aad
mov
jge
in
push
out
mov
jne
sub
mov
ret
or
jbe
andl
arpl
mov
sbb
lcall
inc
cs
mov
lods
sti
or
sub
shrl
jmp
hlt
clc
mov
push
fstl
mov
jnp
rorb
jae
add
insb
dec
xlat
pop
out
shlb
dec
hlt
mov
ficompl
xor
clc
movsb
fldenv
pop
ss
mov
in
mov
xor
cwtl
loop
add
clts
shl
and
andl
adc
lsl
lcall
test
mov
bnd
movsbl
rolb
clc
push
ret
push
cmc
in
mov
popf
aad
in
cld
incl
pop
xchg
scas
mov
or
lods
loopne
aad
lahf
cmp
cmp
insb
sbb
mov
sub
push
ret
nop
xchg
inc
repnz
xchg
xlat
cmp
cmp
jae
cmpsl
mov
adc
dec
mov
sub
das
lret
dec
ljmp
and
adc
pusha
lods
xor
mov
adc
jmp
adc
cmp
adc
adc
dec
pop
sub
out
push
or
mov
shrb
shll
inc
jecxz
mov
pushf
dec
inc
jecxz
repz
dec
clc
dec
scas
xchg
loope
sub
pop
adc
mov
xor
addr16
movb
leave
rcrb
or
in
sbb
ljmp
hlt
mov
lret
aam
push
pop
orl
in
mov
popl
or
loop
and
xchg
add
jmp
out
adc
mov
cmp
mov
mov
lock
fisubl
sub
add
loopne
inc
dec
fisubrs
sarb
repnz
loope
inc
leave
cmc
mov
mov
inc
pop
insl
inc
std
out
mov
out
fistps
es
cs
ljmp
aad
push
outsb
jge
into
aam
daa
imul
push
xor
int
out
jb
mov
adc
jnp
xor
das
push
or
js
mov
negl
add
stc
dec
or
dec
push
lret
mov
xchg
scas
or
xor
xor
xchg
rol
shll
xor
cmp
mov
sub
push
int
into
les
adcl
mov
jae
daa
push
cmpsl
bsr
cmpsb
xchg
push
jg
sahf
test
push
mov
push
xchg
adc
dec
mov
sbb
int3
test
cwtl
pop
mov
dec
int
gs
sbb
adc
out
call
mov
and
inc
clc
imul
std
adcb
loope
out
mov
imul
mov
push
int3
popa
shrl
mov
push
icebp
fs
push
mov
gs
push
inc
xor
mov
test
enter
cmc
aaa
inc
add
in
fbstp
push
fadd
sti
and
or
sarb
inc
add
iret
push
xor
dec
cli
sub
jne
fcmovne
shll
xor
mull
scas
cmp
inc
shll
orl
pop
adc
dec
cmp
jns
aad
loopne
mov
jnp
inc
mov
adc
push
ljmp
or
jp
inc
cld
lods
inc
push
clc
ja
cmp
cli
add
xchg
nop
dec
sub
inc
and
lcall
mov
jb
sbb
mov
loope
jno
sbb
sbb
out
aam
add
sub
jb
lods
sbb
scas
inc
push
ret
add
push
mov
in
xor
ret
sbbl
stos
jge
das
jb
cmp
call
mov
loop
rcll
into
inc
or
imul
and
aad
xchg
scas
andb
xchg
arpl
xor
testb
mov
pop
xchg
or
enter
jo
cld
ds
jno
mov
mov
imul
xor
mov
pop
inc
adc
loope
dec
xor
xlat
fcmovne
cmc
pop
pop
push
xchg
or
in
cmp
dec
rsqrtps
lods
jne
pushf
pop
cs
ljmp
cld
rcl
mov
mov
xchg
jecxz
mov
mov
call
mov
jmpw
fbld
or
int3
fcom
xchg
pop
mov
cmp
dec
or
and
aas
sbb
jb
pusha
cmpsb
out
push
or
fdiv
cltd
and
gs
dec
ja
scas
or
adc
ret
cmp
pushf
call
std
pop
jecxz
es
cmp
push
arpl
adc
sbb
movsb
mov
fwait
or
mov
imul
in
das
loopne
inc
lret
push
aad
push
sub
mov
lods
dec
mov
pop
xor
das
lods
lahf
sbb
sub
push
sub
pop
jae
xlat
ficoml
test
mov
mov
insb
rorl
dec
push
into
push
fdivrs
mov
popf
jns
sbbb
mov
xchg
inc
adc
data16
test
fcomps
and
ja
mov
movb
mov
lods
mov
mov
int3
ja
aam
jecxz
ds
mov
out
inc
mov
ds
movsl
jno
pop
cmp
pop
push
cmpsl
insl
or
mov
xorl
shl
jns
sbb
cmp
hlt
insb
cmp
dec
push
jnp
add
inc
repz
or
nop
push
jno
jbe
popf
enter
cmp
shl
inc
das
xchg
sub
or
mov
cs
mov
cltd
xchg
rol
push
sbb
xor
xor
mov
push
leave
loopne
bound
repnz
push
movsb
std
adc
daa
dec
repnz
mov
shll
jno
dec
pop
sub
cmp
cwtl
push
push
scas
std
imul
add
jne
fsubrs
mov
or
mov
int
mov
in
shll
cld
dec
cmp
aaa
xchg
es
pop
xchg
push
enter
jns
xor
dec
sub
adc
lods
and
pushf
notl
test
gs
jg
adc
mov
or
and
lcall
aaa
pop
pop
jmp
mov
pop
cmp
dec
leave
push
mov
ss
inc
add
mov
add
gs
and
sti
jbe
inc
orb
sbb
imul
adc
jp
mov
or
fcoms
xor
imul
sub
imul
mov
sub
iret
sub
push
xchg
push
fcmovbe
jns
aaa
pop
jne
fistpl
inc
in
sub
fisttpl
inc
fiadds
mov
jmp
mov
add
scas
cltd
pmaddwd
dec
inc
divl
mov
lds
in
testb
ljmp
aam
int3
andl
and
and
xchg
addr16
jns
inc
hlt
adc
aad
mov
push
pop
movsb
inc
mov
push
xchg
filds
imul
fstl
lock
sub
sub
mov
aad
dec
xor
popl
imul
pop
popa
xchg
lea
stos
mov
dec
data16
mov
out
dec
sub
into
mov
inc
mov
fdivp
add
push
xchg
push
testl
andl
lea
outsb
fcomip
or
icebp
mov
fstp
cld
out
pop
int
jnp
and
cmp
and
xchg
xchg
cmp
cltd
cmpsl
fisubl
into
imul
push
adc
mov
mov
add
lahf
inc
out
mov
dec
or
inc
xor
into
gs
cmpsl
push
sti
cmp
mov
jb
incl
and
int3
pop
sub
mov
dec
pop
xor
xchg
mov
lret
and
xchg
fcmovu
push
cmp
out
neg
mov
test
dec
inc
std
adc
test
push
mov
jno
aad
adc
jns
mov
sbb
lret
stos
insb
and
scas
jmpw
mov
add
lds
aad
lret
shll
jns
mov
fdivr
int3
adc
and
cmp
xor
aas
in
mov
sub
movsb
xchg
cmc
push
mull
adc
mov
int3
or
fcmovne
jle
pop
int
jp
xchg
dec
fcompl
fdivl
mov
inc
cmp
mov
int
fidivl
mov
dec
test
sbb
cmp
mov
and
pop
or
outsb
leave
mov
ljmp
mov
ror
pop
adc
dec
shll
mov
sbb
or
jg
loope
inc
notb
mov
addb
in
sub
out
push
notb
push
test
xchg
cmp
ja
or
jnp
iret
pushw
sti
xor
mov
and
dec
adc
lods
int
push
stos
inc
pusha
mov
and
aad
fwait
insl
or
or
mov
mov
andl
xorl
leave
cmpsb
cmpsb
cmp
fisttpll
or
movsb
jb
in
test
jae
inc
adc
xchg
popa
xchg
rorb
mov
adcl
call
rorl
pop
nop
sub
dec
pop
scas
xor
popa
popf
ljmp
stos
ljmp
shrb
les
sbb
ljmp
ljmp
scas
stos
outsl
daa
adc
popf
sbb
cmp
cmpsb
fsubp
xlat
leave
pop
pop
xchg
popa
push
das
inc
stc
imul
stos
add
ficoml
mov
xor
jp
inc
loop
ja
dec
push
std
outsb
aas
jno
adc
test
add
mov
mov
push
sbb
fistpl
test
add
shlb
xchg
adc
rcrl
aam
mov
int
int3
scas
dec
dec
push
cmp
das
xchg
xor
and
in
cmp
nop
xor
mov
sbb
mov
jno
or
in
cmpsb
dec
dec
popf
sti
test
sbb
mov
test
loope
dec
mov
fisttpl
hlt
ss
test
pop
roll
scas
imul
into
push
loopne
mov
xchg
pop
addl
filds
popa
inc
js
pushf
daa
orb
aam
xchg
mov
lds
and
insb
insl
rolb
ja
fistpll
mov
pop
cmp
pop
mov
pop
jnp
or
jg
jg
aaa
lea
into
jle
mov
pop
cltd
mov
push
dec
xor
jo
cmp
cmpsl
ss
dec
stos
adc
enter
iret
sub
pop
bnd
push
lcall
movsb
pop
push
or
ja
jbe
xorb
out
call
jae
pop
fnsave
push
leave
hlt
xor
sub
adc
jo
scas
jecxz
loopne
lock
push
or
daa
fidivs
xchg
test
push
in
pop
movsl
jae
test
test
jl
shrl
test
insb
fs
mov
mov
sar
inc
sub
jmp
out
adc
dec
cmp
xor
mov
jp
push
arpl
popa
dec
mov
jle
cmpsl
test
cs
fs
jl
fidivl
mov
dec
or
int3
in
test
push
leave
mov
jno
and
jbe
sbb
test
insl
ss
loopne
jmp
xchg
sbbb
enter
adc
sub
and
loopne
sub
inc
movsb
icebp
push
xchg
popa
cltd
xlat
popa
in
in
cmp
inc
popa
mov
adc
sbb
nop
mov
or
mov
sbb
shll
mov
xor
push
and
mov
shll
fdivrl
lcall
sub
call
jae
test
cltd
fimull
mov
mov
inc
or
inc
repnz
cmpsb
xchg
xor
xchg
jmp
test
and
scas
scas
pop
pushf
inc
stc
popf
mov
and
dec
pushf
pop
mov
loop
pop
pop
cmc
cld
jo
sub
imul
call
aad
cli
lcall
inc
mov
imul
ja
or
ljmp
or
add
test
and
decl
jge
mov
mov
bswap
stos
loopne
pop
cmc
inc
ss
jno
pop
push
mov
sub
and
jnp
mov
test
sti
mov
push
dec
pop
cwtl
cltd
jle
clc
push
or
ret
int3
ja
pusha
dec
dec
xchg
and
and
popa
xchg
add
mov
inc
cmp
cmp
arpl
xor
inc
mov
movsl
mov
aad
xchg
or
call
outsl
aam
jns
scas
cltd
mov
andl
xor
cmp
enter
lcall
push
clc
mov
jl
or
faddl
or
mov
lret
enter
fcos
jns
push
pop
dec
adc
fcom
stos
push
fmulp
inc
aaa
jnp
daa
sbb
mov
fbld
mov
mov
test
and
gs
inc
int
aam
adcb
std
pop
pop
ja
add
or
test
and
mov
stos
cmp
add
pop
sbb
dec
out
push
jmp
outsl
cwtl
mov
andb
xchg
jmp
test
loopne
pushf
and
pushf
cld
adc
jle
cmp
add
popf
adc
repnz
push
mov
mov
add
sti
cmp
push
or
mov
icebp
movb
or
test
faddl
xchg
aam
jb
dec
mov
xchg
insl
mov
inc
xchg
push
in
in
xchg
mov
inc
xor
cmpsl
out
mov
dec
mov
repnz
inc
loope
daa
cmpsl
roll
and
pop
jno
sbb
xor
cmovle
fcompl
push
scas
cli
stc
add
mov
mov
add
jg
ds
cmp
mov
sti
mov
xlat
rcrl
dec
std
jbe
pop
fs
testb
xor
adc
push
shrb
dec
daa
lods
repnz
push
mov
divb
mov
jb
mov
and
add
sbb
lds
lock
lret
pop
rcll
mov
repz
das
add
sbb
add
cwtl
pop
scas
and
adc
mov
aaa
fnstenv
pop
pop
fstl
ds
rcrb
adc
adcl
nop
pop
xlat
jne
lods
mov
push
out
lea
mov
bound
je
jbe
or
and
hlt
xor
mov
incb
cmp
xor
adc
mov
jns
enter
je
sub
mov
dec
cmp
adc
and
ja
jge
mov
pop
cld
cmpsb
mov
aaa
inc
push
lds
mov
dec
inc
cmc
aam
cmp
pop
xchg
aad
outsl
mov
test
or
mov
enter
jp
and
sahf
mov
test
int3
imul
test
pop
shlb
mov
mov
xor
xchg
iret
test
ljmp
jnp
fisttpl
aad
cmpsl
pop
lods
mov
movsb
pop
fwait
test
lret
stos
push
mov
jle
aas
icebp
pop
repnz
lret
fadds
popa
mov
adc
xchg
std
out
add
fcoms
xchg
fimuls
aas
cmpsl
sbb
inc
add
sub
mov
add
in
mov
arpl
lds
cmpsb
xchg
aam
adc
mov
sub
dec
outsl
pushf
ret
jl
mov
cmp
mov
inc
jno
clc
repz
cs
lods
inc
ljmp
push
test
dec
push
mulps
scas
filds
es
inc
aas
mov
pop
dec
out
es
jle,pn
mov
mov
add
enter
movsb
inc
add
insl
mov
movsl
mov
lcall
loopne
lcall
std
mov
fdivrp
add
pop
mov
dec
loop
pop
xor
lea
xchg
gs
push
aad
sbb
add
in
std
jb
add
mov
pop
mov
sub
dec
pop
ficomps
arpl
and
rorb
dec
es
test
jbe
mov
dec
sub
xor
das
jno
pusha
loope
jb
push
add
pop
nop
dec
push
jmp
xchg
fcoml
fs
jmp
fsubrl
imul
dec
pop
mov
and
jb
scas
xchg
inc
lcall
jp
add
xor
and
mov
jmp
xchg
and
inc
imul
mov
mov
cmp
xor
inc
inc
loope
test
add
imul
sti
jae
mov
aam
mov
cmpsb
popa
in
inc
repnz
mov
ljmp
icebp
sub
mov
mov
arpl
xchg
mov
repnz
push
clc
add
cmovo
flds
lods
in
or
mov
xchg
mov
mov
stc
lods
aaa
pushf
and
sarl
mov
mov
mov
jl
push
adc
cmc
movsb
push
xor
nop
cmpsl
adc
jle
in
mov
pop
in
cltd
xchg
and
int3
loopne
dec
shll
mov
iret
jle
sbb
push
mov
push
imul
add
in
push
and
sbb
xor
mov
adc
scas
add
add
repz
in
fsubs
add
jb
adc
mov
push
cmp
addr16
jno
cmp
popw
inc
clc
or
fs
xchg
shrl
idivb
subb
shll
push
mov
push
imul
add
push
jl
in
push
sub
add
in
nop
rclb
into
stc
aaa
pop
pop
pop
push
add
mov
test
pop
sbb
sub
rcl
or
xchg
cmp
insb
mov
sub
rcll
loopne
nop
fimuls
cmpsl
dec
xchg
jo
pushf
and
shlb
push
ret
int3
popf
cmp
push
mov
test
push
pop
push
in
ja
push
popa
idivl
stos
in
ret
jmp
push
sub
stc
jge
pop
stc
or
std
ret
sti
mov
mov
movsl
xchg
test
mov
imull
mov
repz
les
imul
push
dec
xchg
add
subb
mov
test
fistpll
pop
xor
cs
out
mov
imul
mov
andl
sbb
pop
addb
and
cmp
lret
adc
aam
aas
lods
ror
in
add
jmp
mov
in
fiaddl
jp
pop
outsb
lret
je
add
mov
push
adc
mov
pusha
test
xchg
adc
xchg
pushf
popf
xchg
pop
mov
push
pop
mov
xchg
repz
test
test
mov
dec
mov
cs
push
adcl
mov
or
jae
sbb
fwait
dec
adc
dec
out
shll
imul
pop
mov
xor
xchg
cwtl
in
cmc
cmc
sbb
lret
cltd
dec
cmpsl
dec
dec
mov
sub
arpl
adc
jl
fwait
test
add
pusha
sub
out
paddusw
jae
or
xor
xchg
pop
data16
cld
pop
push
lods
dec
and
cmp
rorl
lahf
cmp
sbb
xchg
out
inc
imul
xchg
jmp
pop
sahf
mov
xor
lcall
hlt
and
mov
pop
cmp
pop
add
fwait
outsl
push
dec
fwait
inc
call
mov
lahf
cmp
lock
cmp
jecxz
cld
cmp
loope
mov
add
push
cmpsl
fdivp
mov
rcll
sub
mov
xor
lret
sbb
inc
pop
sub
enter
pop
scas
push
mov
ret
stc
dec
pop
fstpt
mov
sub
jne
dec
dec
pop
pop
adc
imul
shl
arpl
xor
cmpl
xor
arpl
jo
fisubl
pushf
dec
jecxz
sbb
or
push
movsb
cwtl
insl
mov
fld
dec
mov
dec
xchg
jnp
mov
pop
ret
jno
inc
jecxz
mov
mov
adc
cmpsb
xchg
stc
cs
mov
jmp
push
dec
inc
add
xchg
xor
call
xor
sbb
sub
ret
push
pop
adc
fldcw
subl
aam
add
xor
jae
pop
sarb
fimull
andb
adc
jl
push
cmpsl
andl
pusha
sti
iret
out
inc
dec
pop
inc
les
jno
clc
incb
or
test
aad
and
mov
sahf
sub
ds
xor
jg
inc
push
rorb
xor
repnz
xchg
mov
nop
and
cmp
xchg
and
scas
sub
jnp
jg
ss
ss
stos
adc
jge,pn
lock
dec
jae
ret
adc
je
cli
repz
cs
loopne
ja
outsb
fcoms
xor
jne
jo
jbe
or
stos
rolb
fmull
adc
lret
jb
pop
cmp
inc
mov
or
sti
loop
cmc
push
sti
push
adcb
mov
jo
sbbb
cmp
xor
cmpsb
jmp
ret
and
aas
mov
notl
add
mov
lret
les
cmp
mov
stc
xchg
jns
adc
les
mov
mov
pusha
pop
es
popa
mov
pop
icebp
fwait
sub
dec
repz
sbb
jb
movsb
sti
dec
addl
pop
or
mov
loop
xchg
push
mov
cmpsb
leave
clc
push
lret
arpl
cmp
dec
sub
cmp
cmp
imul
andl
cmpsb
jl
insl
add
cs
sahf
leave
push
mov
movsl
sub
jb
repz
xchg
stos
mov
mov
push
push
and
ja
pop
pushf
jmp
jno
mov
sbb
pop
outsl
lret
and
mov
lret
addb
or
sbb
mov
dec
pop
in
stos
lds
cmpsb
jmp
push
xchg
nop
push
cli
mov
inc
sub
add
mov
jno
and
dec
arpl
les
test
in
inc
sub
loopne
jl
testb
icebp
scas
sti
xor
clc
mov
dec
sbb
mov
scas
hlt
mov
aad
outsl
and
fwait
pop
repz
sub
icebp
mov
movsb
ds
in
or
mov
fs
mov
movsl
loope
mov
arpl
fistps
sbb
movsb
jle
push
mov
mov
mov
sbb
xchg
mov
nop
out
push
jo
mov
cmpsb
push
cs
mov
lahf
lahf
cltd
cmp
xchg
add
pop
jne
insl
mov
jmp
xor
pop
mov
popa
adc
je
inc
inc
and
fnsave
cmpsb
out
dec
or
pusha
mov
xchg
xchg
or
ret
fwait
mov
repnz
jb
aas
jns
pop
dec
push
mov
daa
push
out
jae
jmp
inc
adc
jle
in
imul
les
mov
leave
adc
lahf
stos
sbb
xorb
test
les
mov
or
out
cmp
nop
test
push
dec
imul
shl
push
mov
push
mov
adc
pop
fistl
je
in
or
jg
insl
sbb
mov
lods
adc
arpl
shll
pop
jbe
push
pop
adc
sbb
sbb
xchg
mov
mov
pop
leave
mov
pop
mov
cwtl
push
mov
push
push
xchg
jge
mov
push
push
add
or
fwait
sbb
stos
inc
mov
sub
jns
leave
push
sub
mov
fistpll
mov
and
cmpsl
cmp
adc
out
lret
sahf
ficoms
fstl
dec
shll
jbe
cmp
xor
sub
mov
and
pop
jg
decl
inc
pop
inc
mov
ja
test
pop
sub
push
ret
mov
push
fcoml
aaa
fiadds
rcr
cmp
sub
mov
cmp
mov
out
sub
outsl
cmpb
adc
push
pop
and
push
cwtl
push
fldl
fistps
sub
mov
orb
pop
sub
imul
xor
xor
and
cmp
mov
and
or
xor
call
rolb
push
xchg
push
rorl
and
pop
pop
jle
jecxz
push
ret
divb
cmp
pop
lret
adc
icebp
inc
mov
xchg
push
imul
dec
sub
push
mov
sbb
cmpsl
jo
mov
lahf
inc
fxch
sub
adc
jae
stos
pusha
mov
bound
pop
les
mov
push
or
sub
push
movaps
xchg
popa
mov
mov
and
cmpsb
jns
push
jno
dec
dec
push
std
push
jg
push
or
mov
push
dec
xchg
mov
gs
lret
rolb
sbb
fwait
test
mov
fsts
xor
sub
sbb
popf
in
inc
es
or
inc
lods
mov
scas
cld
add
dec
or
and
or
cmc
lea
cwtl
jb
iret
mov
and
xchg
test
int
clc
xchg
jb
mov
sub
fistpll
in
sub
adc
push
xchg
mov
fcoml
pop
mov
ljmp
jle
dec
mov
push
aaa
ja
mov
push
lock
daa
sbb
data16
inc
jle
pop
xor
push
or
mov
sarl
cltd
lret
fidivrs
fiadds
incl
cmpsl
stos
clc
aam
pushf
mov
test
add
fwait
sar
leave
sar
iret
andb
bound
fisubrl
out
shll
pop
cs
fsubl
enter
je
mov
enter
inc
inc
fdivs
cmc
and
pop
push
dec
cmpsb
fs
xchg
push
inc
imulb
mov
nop
pop
cmp
rcr
sub
pop
and
fsubrp
jmp
dec
jo
inc
aaa
sahf
inc
stos
jp
cltd
cmc
and
sqrtps
jo
popa
les
pop
sahf
sbb
outsb
cltd
add
faddl
test
mov
mov
dec
testl
push
cwtl
popa
sub
inc
push
nop
call
xorl
jbe
popf
aas
ret
push
mov
push
fsubs
dec
data16
lret
aas
xor
ja
lock
stos
xlat
je
aas
xchg
mov
sbb
rclb
inc
loope
mov
adc
repnz
adc
xor
cmovno
mov
repnz
pop
push
mov
sub
test
jle
loope
dec
pop
jne
jmp
xlat
inc
das
add
pop
popa
and
iret
das
js
cmc
nop
mov
inc
scas
push
jge
adc
orb
insb
mov
jl
push
fstl
mov
sub
aad
xorb
leave
fbld
fistpl
xchg
adcb
sbb
stos
test
arpl
es
das
adc
push
icebp
or
dec
mov
cmp
out
insb
pop
std
inc
dec
fdiv
negl
cmp
sbb
out
adc
or
repz
subl
adc
xchg
inc
xor
push
ja
aad
xchg
sub
cmc
fadds
add
fwait
xor
hlt
lock
dec
dec
fidivl
data16
and
dec
pop
and
pop
sub
leave
in
loope
lods
pop
std
fstpl
dec
add
sub
jecxz
out
stos
jmp
mov
xchg
in
fwait
test
jp
dec
xchg
push
push
sbb
xchg
mov
jge
stos
scas
shll
ds
adc
push
cli
std
mov
inc
fsubrs
pop
xor
jle
xchg
out
lods
push
or
inc
jle
adc
mov
push
mov
jmp
mov
scas
ret
loop
or
sub
pop
pop
aas
mov
cmp
icebp
aas
aaa
jle
cmp
test
add
cltd
cwtl
jbe
mov
lret
mov
mov
movsb
add
icebp
adc
lods
jp
bound
aas
sbb
cmp
ret
push
dec
imull
jg
and
pop
dec
je
jg
int3
loope
pushf
shr
ljmp
cmc
sbb
dec
and
mov
xchg
mov
clc
dec
lret
into
pushf
imul
mov
lods
sbb
inc
enter
xor
and
add
push
xorl
push
jecxz,pn
xchg
pop
add
add
aam
aad
fsts
push
add
jno
jae
dec
push
test
sub
rorl
pop
adc
mov
bound
xorl
pop
cmp
push
push
ja
lcall
sbb
les
dec
dec
jp
push
fistl
test
shlb
xor
add
into
pop
xchg
sub
xchg
fnsave
mov
xchg
rorb
test
pop
sub
mov
popl
pop
and
pop
mov
int
and
jnp
or
jae
cmp
inc
push
mov
jmp
out
in
mov
movsb
jno
sub
fwait
xchg
sub
test
and
daa
push
aad
sub
push
pop
xchg
push
mov
loope
loop
in
lret
xchg
nop
enter
das
das
adc
and
sub
jmp
mov
jge
mov
out
or
jo
pop
fildll
pop
jle
mov
adc
dec
mov
inc
movsb
push
stos
add
movsb
stos
xchg
lds
and
mov
dec
inc
jnp
jbe
stc
test
push
out
jbe
test
mov
sbb
shll
repz
dec
inc
mov
mov
pusha
dec
xor
mov
jecxz
add
fistl
push
iret
sbb
mov
daa
jo
nop
mov
xlat
ret
xor
adc
lods
mov
lret
mov
jge
cwtl
xlat
cwtl
lods
popa
push
hlt
sarl
rcrb
pop
sub
mov
imul
jns
repnz
imul
push
sbb
mov
xorb
mov
xchg
cmp
int
mov
mov
sub
in
mov
mov
fdivs
aas
or
in
cld
dec
mov
int3
fldcw
das
sub
in
sbb
jmp
movsb
mov
mov
std
fs
sub
mov
jae
mov
push
fcmovnu
gs
aad
jnp
inc
les
xor
and
sbb
and
arpl
call
add
cmp
fadd
xchg
push
or
clc
or
xchg
fcompl
sbb
and
outsl
sbb
lds
xor
adc
shlb
xchg
int
bound
inc
fcmovne
jae
xchg
imul
add
aam
enter
pop
bound
mov
adc
mov
mov
mov
cmp
ret
jle
ss
xor
sbb
les
inc
repz
fsubrp
dec
dec
adc
push
dec
rcl
mov
fldenv
jne
imul
mov
test
xor
dec
or
cwtl
pcmpgtw
sbb
pop
sub
push
push
inc
stos
pop
and
loop
pop
xchg
adc
sub
pushf
xor
mov
das
dec
popa
dec
and
cmp
or
sbb
pop
adc
iret
jp
pop
pop
nop
call
and
pop
and
mov
loopew
jmp
mov
mov
stc
lret
popl
lods
pop
pop
scas
add
and
clc
js
leave
mov
subb
xchg
adc
pushf
imul
scas
or
rdtsc
enter
lahf
cmp
and
pop
jae
pusha
and
mov
je
aam
inc
in
or
repnz
nop
cs
lcall
jle
inc
mov
orb
mov
pop
mov
add
cmpsl
fs
iret
or
or
lcall
mov
jmp
mov
push
call
mov
dec
es
icebp
sub
mov
jne
or
loopne
and
sub
repz
shlb
lcall
jg
and
pushf
dec
rorb
cmpsl
rolb
cmc
and
fnstenv
jg
jns
push
cmp
mov
mov
notl
jl
ljmp
pop
jns
pop
and
out
lods
xchg
xor
push
test
xchg
add
clc
cld
jle
push
movsl
or
and
ljmp
push
xchg
jge
xorl
xchg
ficoms
fsubrs
imul
dec
ret
dec
call
enter
and
lods
jge
or
adc
xor
pop
adc
mov
xchg
imul
sbb
or
dec
jmp
addb
rcrl
repz
mov
jnp
loop
jp
fidivl
pop
hlt
movsb
mov
outsl
jns
mov
int
adc
adc
sbb
les
mov
daa
sbb
push
and
xor
aam
push
ds
stos
cmp
addr16
lret
fisubrl
adc
dec
in
data16
xlat
sub
inc
cmp
dec
push
lds
add
hlt
cltd
push
pop
sub
push
adc
mov
in
add
cs
sub
cwtl
test
jmp
test
out
mov
pop
sti
mov
adc
adc
add
fmull
add
inc
out
dec
popa
push
push
jle
jmp
xchg
cmpb
add
clc
xchg
mov
pop
push
sub
imul
movsb
sbbl
shlb
sbb
and
ss
in
icebp
jb
lret
sahf
lret
pop
jle
lods
cmpl
aaa
or
pop
std
adc
and
rol
movsb
lods
incl
or
adcl
je
lods
pop
ja
cmp
movsb
mov
and
push
jb
push
jb
icebp
sbb
xchg
out
inc
dec
out
ja
mov
adc
lock
movsl
sarl
mov
add
push
push
repz
fistpl
dec
mov
loope
aaa
mov
inc
fcoms
xchg
pop
and
and
imul
popf
out
jge
jb
add
lock
cmpsl
inc
mov
dec
xor
push
in
push
je
jmp
outsb
test
xchg
test
xchg
xchg
push
push
inc
jl
mov
fisubs
push
sub
push
sub
push
ror
mov
push
mov
dec
sub
fsubl
ret
jecxz
clc
stc
xor
jle
test
fidivl
sub
sub
cmp
sbb
jle
cmp
adc
shlb
popf
aaa
loop
rcrl
in
and
or
inc
push
sarl
pop
jmp
xchg
inc
inc
test
fcmovbe
cmpsb
getsec
mov
jae
orl
mov
hlt
shlb
je
mov
add
pop
mov
popf
clc
jae
in
fldt
into
pop
aad
sbb
adcb
sbb
and
push
or
std
lret
dec
insb
add
andb
add
add
in
sub
lea
mov
gs
mov
mov
and
sbb
add
or
sub
rcrb
jnp
push
push
int3
mov
ret
inc
je
je
fwait
leave
add
pop
sbb
jle
push
ror
xchg
scas
rorl
fst
inc
push
jb
insl
and
dec
roll
lret
mov
enter
adc
or
fwait
mov
dec
mov
dec
add
add
mov
and
rcrl
cltd
aad
sbb
scas
sbb
cmp
outsb
adc
inc
sub
inc
cli
xchg
or
pop
inc
xchg
adc
fwait
insl
jge
and
push
or
outsb
dec
sbbl
call
test
dec
dec
mov
xor
jp
stos
stos
cmpsl
jo
lods
ret
pop
out
cmpsb
or
add
les
pop
les
sbb
imul
xchg
std
movsl
mov
xchg
sti
push
or
adc
je
push
pop
and
pop
inc
or
mov
xchg
rolb
shlb
xchg
push
stos
enter
jno
dec
push
adc
lret
loope
push
xchg
add
enter
sbb
push
mov
mov
lods
cld
push
aam
std
popa
aas
aas
adc
fistpl
sbb
add
pop
out
sub
out
clc
cltd
jne
shll
pop
loope
push
add
add
hlt
je
or
outsb
dec
sbb
push
mov
pop
andb
js
mov
sub
ljmp
xchg
ss
int
imul
push
sub
inc
inc
out
ret
faddl
inc
das
outsb
cli
mov
sahf
or
dec
jecxz
aaa
subb
pop
dec
scas
addr16
jge
lds
adc
jbe
xor
add
sarb
inc
lods
insb
push
adc
int
mov
inc
fnstsw
xchg
mov
inc
add
jmp
xsaves
mov
jb
loopne
out
and
ss
lcall
sub
mov
aas
lods
divb
mov
sahf
push
or
fs
lcall
ljmp
ret
cltd
jl
mov
jo
add
xchg
dec
out
inc
jne
divb
pop
inc
xor
in
cmp
lcall
and
out
mov
mov
inc
aaa
pop
call
test
xor
scas
xchg
inc
adc
cwtl
rorl
jno
or
pop
rol
xchg
test
mov
fstpt
ret
sub
push
stos
icebp
inc
or
adc
rcll
pop
mulb
int3
adc
push
inc
scas
inc
jae
fbstp
mov
leave
xchg
repz
lods
andb
insl
test
ret
lret
pop
push
pop
stos
out
rcrb
push
cmp
popf
sbb
xlat
adc
add
shrb
push
mov
cmp
fadd
and
and
lock
sbb
sbb
pop
push
out
push
dec
fdivrs
jbe
jmp
mov
push
lret
sbb
inc
pop
mov
in
and
ret
jg
int
movsb
rcll
lods
mov
or
ljmp
pop
adc
movsb
repz
cmp
xchg
aam
sbb
xor
add
add
roll
jne
sarl
mov
pop
or
xchg
lret
xchg
push
add
cmpl
jns
cltd
and
scas
adc
imull
ret
lcall
outsl
xorb
adcl
push
lods
int3
iret
iret
pop
inc
ljmp
mov
inc
gs
mov
mov
pop
addb
aad
aad
pusha
inc
cmp
daa
sbb
divb
adc
and
push
push
popf
inc
push
ds
adcb
inc
push
adc
or
jns
jecxz
pop
rcrl
pop
sar
cmpsl
adc
lds
aas
lcall
test
mov
mov
in
mov
lcall
jne
dec
jnp
popf
cmp
jge
lods
dec
or
cmp
mov
ss
loop
jmp
inc
and
jp
out
ds
mov
push
repz
outsb
clc
sti
dec
or
mov
mov
movsl
pushf
xchg
and
cmc
sub
or
cmp
pop
cmp
push
mov
pop
rorb
inc
mov
cmpsl
aam
roll
call
mov
jns
aam
xor
cs
dec
jl
ljmp
rcr
jo
cmp
inc
sbb
scas
leave
jge
sub
push
adc
push
pop
pop
test
xchg
std
adc
js
inc
pop
jg
fdivl
bound
fwait
push
outsb
push
hlt
or
inc
jl
rorl
sbb
aas
nop
pop
push
imul
and
or
sbb
je
in
push
and
and
call
in
test
sbb
xchg
aam
out
adc
jl
stc
adc
jecxz
shll
pop
cltd
in
add
nop
dec
jns
lds
out
xchg
pusha
cld
push
shl
xchg
mov
pusha
xchg
push
cld
mov
xchg
js
daa
cld
out
xor
and
mov
xchg
dec
xchg
arpl
or
out
fadds
xchg
bound
daa
outsb
mov
add
push
rorl
jmp
mov
mov
jns
and
xor
mov
mov
icebp
pop
mov
jb
mov
jg
cld
jne
lahf
add
lcall
fldcw
mov
sbb
sbb
daa
lahf
pop
cmp
sbbb
das
xchg
push
sub
and
push
out
int
ss
jne
mov
iret
jbe
js
rolb
sub
sbb
cltd
int
jae
xchg
inc
sub
sbb
add
or
lcall
int3
sub
sub
ljmp
imul
and
add
mov
mov
mov
faddl
test
cli
inc
xor
sbb
jmp
cmpsl
jl
pop
or
dec
or
jnp
lds
outsb
cmp
fildll
or
into
xor
push
psubsb
sahf
lods
test
sub
dec
mov
les
mov
inc
adc
sahf
jo
sub
push
adc
and
push
fdivl
mov
iret
mov
mov
mov
inc
sbb
mov
adc
mov
xchg
idivb
in
push
mov
pop
pop
xor
icebp
sub
xchg
lock
cli
mov
pushf
dec
jo
xchg
fdivl
pushf
lods
data16
xchg
dec
lcall
scas
jge
imul
jp
cmp
xor
dec
pop
sub
inc
xchg
push
add
bound
lods
ss
bound
fwait
or
leave
inc
dec
je
mov
push
xchg
fldcw
stc
pop
dec
push
sub
test
leave
cmpsb
lret
loopne
mov
inc
push
sti
mov
pop
in
aam
jp
push
ss
or
dec
mov
push
insl
hlt
rcrl
cmp
jnp
or
cmc
add
in
pop
lock
adc
jmp
pop
sbb
int
mov
jge
cmp
cs
mov
push
movsl
mov
sbb
je
sub
xchg
cmpsl
adc
ret
insb
je
gs
sub
mov
mov
or
push
mov
fxch
into
dec
add
or
cmp
adc
adc
mov
movsb
cmp
mov
dec
ds
sbb
mov
adc
jo
jmp
add
inc
loopne
xchg
rorl
mov
fs
ret
pop
xchg
sub
ljmp
aad
cs
int3
pop
jnp
cmp
inc
cmpsl
scas
icebp
jnp
mov
mov
fisttpl
jae
cmpsl
mov
sbb
sbb
pop
mov
and
add
jecxz
and
mov
and
in
and
mov
mov
pop
adc
rclb
std
shlb
xchg
nop
push
fiaddl
dec
scas
dec
sbb
lea
stos
pusha
das
or
push
mov
loopne
dec
andl
inc
out
shrl
xchg
inc
loope
dec
mov
or
ss
cmp
xchg
fwait
sbb
fisttpl
and
jecxz
lock
push
and
mov
sbb
ds
aad
loop
out
and
adc
sub
and
sub
jb
push
lcall
std
jge
mov
fmull
sbb
jp
repz
xchg
ljmp
clc
call
jg
and
mov
cld
and
loope
jecxz
stc
imul
xchg
aam
lds
jnp
push
jnp
inc
inc
push
push
and
mov
jl
pop
jmp
popf
pop
jle
dec
push
ret
mov
mov
setle
cs
dec
pop
sti
sti
outsb
scas
dec
jne
mov
mov
adc
ja
pop
adc
mov
cwtl
scas
cmp
sub
push
loopne
dec
jp
jne
push
xor
xor
pop
dec
push
xor
mov
mov
and
push
fsubr
push
mov
imul
mov
mov
mov
and
stc
insb
jno
dec
mov
jo
xchg
sti
xchg
fldl
pop
mov
in
xchg
mov
out
cmpsb
jae
inc
adc
std
fwait
jg
or
sub
or
or
inc
dec
cmp
mov
pop
repz
add
es
pusha
cmc
mov
outsl
jg
repz
cmpsb
jl
push
adcl
xchg
test
adc
pushf
and
mov
mov
das
mov
aas
pop
ljmp
adc
jg
mov
iret
mov
push
jbe
testl
fidivrl
repnz
ret
iret
pusha
sub
push
faddl
push
in
fsubrl
xor
xchg
lock
stos
inc
and
pop
mov
iret
jns
push
stos
fisttpl
sub
jae
ret
pop
pushf
mov
push
mov
arpl
push
roll
xor
adc
mov
jno
mov
dec
mov
fstps
mov
std
mov
dec
rcl
stos
or
jg
stos
adc
push
mov
sarb
inc
outsl
out
icebp
test
sbb
xchg
sbb
in
add
inc
and
and
add
xlat
sbb
out
test
cmpsl
pushf
jb
xor
cmpsb
lds
das
call
pop
jno
xchg
cmp
jae
outsb
ret
daa
pusha
inc
stc
adc
je
cmp
mov
inc
arpl
mov
xor
ja
pop
mov
cmp
mov
xchg
xor
aas
js
mov
cltd
and
dec
into
std
lds
ficomps
cmpsl
aam
or
insb
push
pushf
test
and
and
sti
mov
cmp
in
ds
fdivrl
jle
jl
mov
pop
cmpsl
cwtl
adc
mov
pop
aaa
mov
popf
pop
or
xor
out
mov
inc
aaa
cwtl
lods
fmulp
xchg
test
pushf
and
pusha
xchg
mov
in
jge
bound
push
jg
in
sbb
sub
lret
fimuls
test
xchg
dec
imul
inc
push
pop
inc
inc
mov
movb
outsb
pop
and
in
pop
movsl
ljmp
inc
int
inc
mov
push
inc
jg
inc
repnz
push
scas
and
aaa
add
xchg
idivb
call
mov
mov
outsl
mov
xor
mov
add
popa
cs
clc
bound
out
adc
test
lds
mov
push
movsb
insb
mov
push
call
xor
inc
push
mov
jecxz
push
pop
mov
out
xchg
movsb
mov
adc
out
loopne
sub
jo
rclb
add
adc
js
sbb
jns
js
jl
enter
adc
sarb
push
test
ret
xchg
cvtpi2ps
add
pusha
movsb
jl
ja
mov
or
xor
mov
imul
mov
cwtl
pop
adc
jmp
in
aaa
jnp
lea
add
adc
dec
sbb
xor
sbb
mov
aad
mov
mov
shlb
lds
adc
popf
cmp
fcoml
jo
cmp
sub
xlat
and
add
dec
shl
repz
lods
inc
arpl
add
jb
inc
leave
mov
add
daa
or
add
cmp
insb
adc
cmp
divl
pop
push
fnsave
loop
shll
pop
shr
aaa
jp
mov
and
push
pop
mov
orb
xor
out
pop
push
sbb
cmp
jb
stos
ds
inc
mov
or
int3
fs
sub
mov
mov
jns
inc
outsb
cwtl
addr16
sbb
shrl
sar
push
and
dec
jo
jo
xor
rolb
add
xchg
scas
call
popf
out
lret
xchg
pop
lcall
inc
xor
cmpsl
add
dec
cmpb
addl
sarl
and
push
cmp
scas
jo
mov
mov
cltd
mov
das
test
xchg
adc
cmpsb
push
test
mull
sti
mov
pop
pushf
xorb
imul
std
add
pop
lds
or
add
adc
or
cli
ds
pop
dec
push
fildll
add
lods
or
cmp
xchg
and
out
mov
pop
mov
arpl
cmc
and
push
insb
push
enter
mov
addr16
cmp
lods
addr16
push
popa
ds
inc
loopne
cmp
cs
pop
mov
push
lods
mov
fnsave
dec
sub
shlb
mov
shlb
imul
insb
popa
pop
and
sti
xor
adc
ficoml
mov
insb
imul
push
and
test
jae
pop
mov
adc
aaa
mov
mov
in
in
pop
mov
subb
mov
dec
lahf
ret
shll
or
test
ret
stos
mov
gs
fs
ljmp
pop
loope
fwait
xor
movsl
les
mov
mov
xchg
data16
push
out
mov
rolb
add
popa
test
cld
enter
call
fdivrp
pop
adc
leave
xchg
mov
adc
pushf
es
inc
ja
pop
enter
mov
xorl
jnp
xor
xlat
int
pop
divb
iret
rcl
iret
adc
jg
imul
arpl
inc
lret
dec
mov
sbb
pop
les
popa
hlt
pop
or
dec
adc
push
gs
mov
mov
xchg
jae
mov
sbb
add
dec
leave
fsubr
in
pop
xor
add
jle
scas
jl
mov
enter
pop
nop
dec
jae
inc
leave
jbe
jle
cmp
fbstp
bound
mov
and
loope
sahf
out
inc
pop
xchg
repnz
scas
or
test
push
xchg
push
loope
subb
pop
pop
cmp
pop
lods
adc
adc
jae
push
lods
inc
mov
cmp
pop
loop
rolb
in
jnp
nop
sahf
jo
mov
inc
push
es
enter
mov
xor
das
out
cmpl
jne
sti
fwait
ss
lea
jg
fsubl
jns
mov
jb
mov
ss
mov
mov
outsb
loop
das
ret
negl
jo
sub
jb
inc
addb
jle
jne
imul
cs
cmp
jle
arpl
inc
mov
mov
cmp
pushf
inc
cmpsb
fiadds
xor
or
ss
pslld
jmp
adc
mov
divl
fsub
mov
cmp
and
aas
neg
xor
inc
push
push
xchg
cltd
roll
pop
sti
push
mov
xor
and
inc
call
pop
inc
out
pop
in
hlt
leave
iret
add
outsb
shrb
jno
mov
aad
into
add
fadds
ljmp
push
xor
sub
cli
les
mov
or
in
jge
icebp
push
mov
push
dec
subl
nop
stos
mov
push
xchg
orb
jle
sub
gs
ja
cmp
cli
or
fwait
xchg
hlt
xchg
push
stc
jo
ss
imul
pushf
stos
push
sub
adc
xor
sub
add
imul
adc
test
jno
shr
fisttpll
xchg
xor
add
jo
in
fwait
cmp
sub
cmp
cs
push
outsl
test
pop
and
enter
inc
sub
and
lea
shl
frstor
call
dec
sbb
sahf
frstor
dec
add
jmp
mov
xchg
xor
repnz
imul
or
not
inc
pop
inc
push
push
add
jne
xor
pop
adc
popf
pop
and
cmp
mov
test
sub
mov
in
repnz
xchg
fcomps
cld
test
sbb
push
aam
clc
cmovo
and
xchg
stc
cmp
push
fnstsw
in
rcr
push
rolb
jmp
shrl
or
lahf
pop
repnz
xchg
push
mov
cld
inc
out
enter
in
sub
jmp
sub
adc
sbb
xor
xor
imul
insb
stos
test
test
aam
outsl
fstpt
out
leave
pushw
sub
pop
repnz
push
test
xchg
push
into
mov
in
das
cwtl
stos
sub
mov
xor
cmp
jae
in
lods
test
xbegin
mov
inc
jae
push
lret
lret
test
jo
in
ss
cli
movsb
xor
mov
pop
adc
dec
decl
scas
push
xchg
fld1
stos
aaa
aam
adc
daa
mov
aaa
dec
cmpb
mov
daa
cmp
cmp
jns
cmp
in
xchg
jle
mov
aaa
dec
sbbb
out
xor
adc
maxps
outsl
sahf
pop
je
xlat
sbb
jl
mov
das
loop
push
stos
sub
xor
ja
cs
idivl
or
cmp
lret
jecxz
xchg
lock
cmp
xor
loopne
mov
xchg
sbb
lods
rcll
cwtl
fisubrs
adc
imull
loop
icebp
mov
mulb
inc
inc
lods
test
je
subb
stc
rcrb
and
mov
pop
or
mov
add
in
mov
cmpsl
out
xor
push
xchg
lahf
mov
pop
xor
imul
leave
mov
jl
ljmp
test
les
stc
xor
mov
push
leave
jge
xlat
add
jb
mov
test
in
inc
mov
cmpsl
jno
rorl
and
add
call
and
dec
roll
push
mov
xor
dec
jle
add
loop
xlat
rolb
mov
sub
adc
stc
jne
sbb
sbb
sbb
pop
movsb
stc
lret
data16
popa
push
sahf
stos
loopne
lcall
cltd
sub
inc
enter
outsl
push
jp
iret
sub
push
xor
add
jno
pop
push
adc
or
or
aas
xchg
inc
mov
int3
or
or
test
pop
pop
jl
fcomi
add
sbb
sbb
dec
out
adc
xchg
shll
scas
xorb
icebp
pop
add
mov
and
or
xchg
mov
mov
mov
aaa
mov
clc
mov
jno
bound
lea
sqrtps
js
in
lods
inc
jle
jl
mov
ficomps
test
dec
dec
xchg
enter
xor
mov
sti
cmp
pushf
add
pop
inc
shrb
jno
mov
repz
xlat
leave
jmp
std
xchg
roll
pop
mov
xor
mov
xor
je
add
xchg
dec
jg
aam
mov
xor
repnz
roll
std
outsb
or
add
adc
xchg
out
ss
adc
das
into
adc
lock
fucomip
or
mov
mov
or
mov
xchg
lahf
cs
mov
jge
or
inc
jle
hlt
repz
xchg
pop
lods
scas
adc
rorl
push
cmp
adc
push
mov
push
inc
std
add
cltd
lods
and
jbe
out
pop
in
pop
jo
test
and
addr16
repz
stos
sub
icebp
scas
fidivrs
push
call
jle
out
sub
test
dec
testl
inc
xor
push
lret
add
subl
push
xchg
add
inc
dec
cmpsb
pop
fsub
loope
int
sub
inc
inc
mov
test
outsl
push
hlt
cmp
sti
and
add
rorl
add
mov
add
dec
mov
adc
movsb
dec
sbb
movsb
or
or
in
int
out
sub
pop
mov
mov
inc
scas
or
scas
mov
adc
sub
mov
add
push
sub
aad
stos
stos
shrb
js
aaa
or
adc
mov
xor
or
sar
sub
rolb
push
mov
push
dec
mov
je
aas
ret
or
dec
adc
xchg
popa
repnz
rclb
cld
repnz
mov
mov
adc
scas
clc
scas
push
cwtl
loopne
ret
pusha
dec
adc
js
inc
pushf
pop
cmp
enter
adc
jae
dec
mov
fldl
pop
out
or
jbe
xchg
sub
cs
mov
inc
xor
jge
dec
shlb
mov
ds
pop
mov
xchg
jns
sub
lcall
mov
mov
push
leave
repz
sbb
mov
inc
pop
mov
jns
test
outsb
mov
dec
pop
rclb
outsl
xchg
xchg
push
xchg
jne
xchg
cltd
sbb
outsb
les
cmpsl
out
pushf
mov
cmpsl
sarl
push
out
mov
pop
sbb
jne
adc
mov
orl
hlt
xor
xor
vmovss
rorl
stos
inc
rclb
mov
in
je
js
sub
lea
data16
icebp
jno
sbb
xchg
sub
lea
cmpsb
sbb
ficoml
in
lods
and
aad
inc
push
shr
inc
outsb
pop
lds
and
cmp
mov
adc
adc
popf
cs
or
aas
stos
aas
fidivrs
fildll
inc
xchg
sbb
add
das
jle
movsb
cmp
mov
cmpsb
sbb
xlat
jno
jb
nop
cmp
add
mov
pop
les
jno
imul
pop
mov
aam
adc
repz
movsl
sub
repnz
inc
adc
sub
into
repnz
fistl
dec
and
mov
jne
xlat
mov
push
stos
dec
add
mov
dec
jl
insb
in
jo
jnp
mov
push
jno
call
mov
lahf
movsb
push
push
xchg
jnp
divb
xchg
adc
repz
shrb
xor
js
int3
clc
dec
das
xchg
cmpsl
rcll
pop
xchg
jb
add
rolb
clc
sub
lods
bound
in
insb
sbb
xlat
jp
je
adc
imul
lcall
fiaddl
pop
into
and
nop
pop
and
pusha
or
mov
xor
insl
repnz
pop
leave
hlt
adc
sbb
pop
ljmp
inc
sbb
test
and
daa
insb
sbb
add
imul
jle
in
pop
ror
pop
cwtl
filds
and
ret
filds
xchg
daa
jl
sbb
xor
push
jecxz
inc
xor
adc
lcall
mov
jo
inc
aad
filds
push
xor
call
mov
jo
test
dec
or
iret
pop
xchg
das
lds
mov
loopne
mov
mov
mov
mov
into
mov
shr
daa
xchg
sbb
idiv
and
mov
fwait
lods
xor
fmull
and
cs
xchg
dec
insl
in
mov
mov
leave
xchg
push
xor
iret
dec
aaa
shlb
insb
adcb
test
ret
fprem
scas
lret
fdiv
xchg
sahf
movsb
stos
loopne
cmpsb
stos
lods
arpl
data16
sahf
inc
movsb
push
pop
push
leave
and
dec
mov
fsts
mul
push
out
cmp
mov
popa
icebp
imul
jnp
ds
enter
cmpsl
test
cmp
sub
jne
cmp
loopne
das
add
lahf
cs
mov
adc
xor
sub
in
fcoms
shrb
out
out
xor
ret
xchg
ret
pusha
cwtl
and
inc
xor
das
rcr
sbb
repnz
add
push
mul
push
sub
sub
pop
xchg
sbb
jae
push
jp
ljmp
pop
stos
add
sbb
xchg
outsl
xchg
in
rcr
popa
mov
incl
cmpsb
insl
dec
xchg
iret
ret
jle
clc
mov
sbb
jle
subl
push
mov
mov
lahf
xchg
inc
sub
lods
sahf
das
mov
sbb
mov
add
fmuls
push
in
jmp
push
pop
push
sti
or
bound
cmpsb
sub
loop
and
sti
xchg
inc
fwait
sbb
sub
pop
mov
ds
repnz
mov
sbb
lds
dec
xchg
inc
mov
loopne
cmp
rclb
cmp
push
je
and
and
dec
xchg
dec
mov
and
iret
jmp
sub
imul
fwait
je
pop
adc
insl
dec
subl
push
scas
cmp
lods
mov
stos
cld
repnz
jo
push
xor
fstpl
test
dec
dec
sub
mov
in
inc
or
add
scas
aad
scas
mov
push
pop
jmp
push
sub
rcl
xor
ja
cmc
cs
pop
pop
lock
test
mov
outsb
xor
fsubrl
sub
into
cwtl
hlt
or
stos
mov
jne
sub
jg
pushf
adc
xor
test
adc
xchg
fs
inc
mov
adc
out
incb
and
popf
movb
repz
cld
sbbl
pusha
leave
das
adc
popa
fcoml
outsl
mov
cs
push
aas
xchg
leave
xorl
jmp
jae
mov
popa
dec
test
ss
das
sub
xor
push
xor
pushf
in
mov
out
sbb
in
ss
ja
dec
push
lret
int3
in
dec
fdivrl
clc
inc
test
sub
mov
je
rcrl
ljmp
mov
sbb
in
pop
rcr
fisubrs
mov
push
int
pop
inc
icebp
inc
and
jae,pn
ja
jnp
rcrl
add
push
cwtl
leave
fiaddl
arpl
sbb
repnz
lock
add
cwtl
xor
adc
jp
xchg
add
cs
cs
push
push
movsb
and
xchg
sbb
xchg
cld
push
aaa
and
mov
movb
lods
in
daa
lahf
sysret
addr16
mov
movsl
jge
ds
or
outsb
sub
pop
mov
lret
mov
bound
nop
je,pt
test
mov
sub
lret
aad
nop
push
pop
push
cmp
ret
ret
mov
out
dec
push
clc
inc
sbb
xchg
add
jge
and
adc
add
mov
sahf
add
sub
fs
adc
lret
and
cmpsl
repnz
loopne
mov
sbb
cmp
int
ja
mov
lahf
push
notb
insb
cltd
fmull
and
push
jae
bound
out
add
loope
jecxz
mov
sub
sbb
or
test
mov
lds
mov
add
mov
cmp
movsb
push
xchg
ja
sahf
pusha
xchg
add
xchg
lret
xchg
sbb
and
sbb
and
cwtl
test
cmp
movsl
cmpsb
lds
das
push
loop
inc
outsl
pop
adc
mov
mov
sub
sub
scas
int
out
mov
es
cmc
mov
andl
divl
movsl
pop
not
stos
insb
cmp
movsl
hlt
push
test
mov
cmp
je
scas
popl
inc
pop
bound
cmp
add
movsl
jbe
sti
popf
sbb
pop
cwtl
jmp
xchg
je
es
icebp
sbb
push
arpl
mov
jb
dec
fs
cmpb
and
sub
and
test
fsubl
imul
inc
jo
mov
push
sbb
xor
movl
adc
das
push
movsb
pop
add
cmpsl
mov
shll
cmp
dec
ds
cltd
push
test
sbb
sbb
cs
cld
push
fimull
lret
js
mov
add
xor
dec
pusha
call
cmc
lcall
jbe
xchg
fmull
shll
ret
jmp
ficompl
sub
inc
nop
cmc
cmp
jle
push
aam
fidivrl
jge
ljmp
divl
and
mov
int
icebp
jmp
jnp
cs
sub
pop
arpl
push
xor
cmp
push
adc
sub
gs
cmp
daa
ror
test
imul
shll
adcb
push
clc
jl
sub
loopne
sub
cmp
shll
jne
lcall
jmp
sub
les
jp
outsb
push
pop
push
cmp
frstor
sarb
pop
mov
ret
fnstsw
iret
xchg
aad
cmpsl
mov
pusha
mov
movsl
out
shl
push
aas
imul
xor
or
out
jnp
adc
dec
push
fisttpl
cli
scas
mov
or
incl
cmp
add
stos
les
add
inc
add
push
daa
add
loope
jl
nop
pushf
push
fwait
sub
jmp
inc
fwait
push
gs
push
je
and
fcompl
js
outsl
fdivs
sbb
push
fdiv
mov
add
out
das
insl
js
jns
and
dec
and
mul
je
mov
xlat
inc
in
xchg
dec
popf
out
or
lret
mov
stc
cld
aad
jge
lcall
aam
fistps
mov
xchg
into
lahf
inc
ss
lret
aam
mov
fstpt
jmp
dec
rorl
cli
adc
xchg
dec
push
push
outsb
xor
add
xchg
cld
nop
pop
add
adc
or
sbb
sbb
mov
into
outsl
and
dec
push
imull
mov
data16
or
inc
adcl
sbb
mov
sbb
inc
push
pushf
arpl
or
xchg
les
arpl
cmp
addr16
out
notl
sti
test
or
fadds
jecxz,pt
testb
in
scas
xchg
dec
or
xchg
jnp
ds
scas
ret
or
std
and
shr
addr16
mov
mov
mov
std
sub
jge
nop
adc
insb
jecxz
or
mov
addb
xor
clc
jns
xchg
scas
mov
fxch
push
sti
and
push
pop
cmp
outsb
es
subl
adc
jno
mov
sti
stos
out
jp
push
cs
out
sbb
in
sarl
sub
loop
inc
or
jo
sub
cltd
mov
pop
and
mov
ljmp
xchg
cwtl
outsb
push
pushf
stos
dec
pop
dec
jp
sub
clc
lods
inc
cmpb
sub
rorl
xor
push
daa
test
call
xchg
push
js
mov
stc
xchg
and
pop
add
xor
cmp
es
enter
mov
dec
bound
cmc
jns
xor
cmp
mov
push
lcall
roll
test
dec
hlt
inc
mov
bswap
pop
scas
ja
ret
and
push
mov
adc
push
jns
push
fsubl
mov
into
inc
in
nop
mov
push
sub
lods
cltd
ficompl
movb
jmp
imul
ja
es
ja
sbb
popf
mov
and
adc
jge
cmp
jl
sbb
mov
rolb
fisttpll
dec
outsb
stos
cmp
std
test
xchg
mov
imul
pop
pop
cmp
ds
xor
movsl
jecxz
jmp
xchg
popf
test
jo
mov
push
outsl
push
in
js
clc
dec
or
ficomps
sahf
daa
psubw
dec
divl
cli
outsb
pop
in
jns
dec
pop
mov
xor
fwait
add
int3
push
xor
push
jns
cli
je
cmpsb
push
icebp
out
out
adc
sbb
cld
xorb
imul
popf
mov
je
divb
stos
shrb
xchg
ret
lret
jnp
scas
adc
lods
ss
lods
imul
in
js
jno
pop
aaa
jg
mov
xchg
lods
loope
xor
push
cmp
sbb
add
lcall
enter
add
mov
mov
add
orb
mov
jl
leave
push
roll
repnz
je
xor
and
sbb
aas
add
inc
add
and
loop
jge
ret
daa
xchg
cli
int3
mov
xchg
adc
dec
nop
inc
imul
dec
xor
in
sub
jmp
ss
and
or
jbe
inc
je
mov
inc
loope
adc
hlt
aad
jle
mov
outsb
loope
test
scas
stc
frstor
aam
lods
cmp
fwait
movsl
push
lods
xchg
adc
ljmp
iret
scas
add
jnp
fcomps
ret
nop
push
lcall
mov
xorb
aaa
es
inc
sub
push
lock
dec
adc
pop
shl
fldcw
andl
mov
dec
dec
lahf
test
lds
out
push
lods
sub
sub
addl
ficomps
mov
and
rcrl
cs
out
out
lock
xor
sub
jmp
std
add
jp
nop
fstps
icebp
mov
mov
andb
shll
push
sbb
aad
ja
jno
add
sbb
jae
fisubl
and
sub
sbb
sbb
lods
fcmove
enter
cmc
dec
ja
lret
stos
add
mov
xor
daa
shr
insl
inc
xor
mov
xchg
movsl
push
sbb
sahf
cld
xor
xchg
fisubrs
inc
sahf
add
xchg
femms
mov
in
xor
pop
add
inc
retw
and
clc
lea
mov
adc
sub
inc
insl
mov
sbb
fsubp
subl
jae
or
dec
dec
mov
fnstsw
xor
cmp
mov
jl
mov
cmp
js
pop
mov
inc
dec
sbb
sub
sti
add
inc
sub
xchg
xchg
lds
lahf
lret
fildl
int
adc
stc
jle
hlt
xor
lret
repnz
inc
or
xchg
int
mov
stc
addl
push
aas
jmp
sub
int3
push
xchg
xchg
bound
pop
inc
int
sub
xchg
and
mov
es
test
subb
in
inc
call
filds
mov
mov
sbb
push
sub
leave
sbbl
mov
clc
shll
cwtl
scas
cltd
push
jo
shr
cmpsb
xchg
cmpsb
loop
lds
pop
xchg
stc
or
mov
repnz
push
int
add
nop
xor
dec
aam
cwtl
add
cmp
test
xchg
sub
lret
out
dec
je
ja
push
test
add
fcompl
mov
mov
fildll
mov
mov
in
xchg
mov
pop
cs
ja
pop
push
pop
and
popf
xor
mov
lret
jg
push
incl
stos
jmp
popa
rcrb
movsb
jnp
cmp
push
or
inc
fwait
add
dec
ds
js
jmp
and
rcll
scas
fsts
std
jo
jmp
ds
xchg
stos
xchg
bound
push
jno
sbbb
inc
xorl
mov
xchg
or
jne
or
xchg
mov
in
test
jge
les
add
loop
mov
sbb
xchg
cmp
mov
mov
mov
jge
mov
xchg
test
pusha
addl
or
repz
gs
ljmp
cli
inc
mov
push
mov
and
repnz
lods
int
mov
xor
cmp
scas
ljmp
sbb
push
inc
cmp
sahf
pop
scas
out
aaa
adc
inc
cld
mov
sub
outsb
cmp
in
mov
push
lcall
pop
je
movsb
lcall
inc
adc
jnp
iret
cwtl
add
jb
xchg
shrl
ljmp
loope
add
mov
fdivrl
push
mov
fcomps
dec
adc
data16
lahf
movsb
mov
xor
lods
mov
add
jl
fistl
mov
xchg
dec
jl
or
pop
test
push
sbb
adc
insl
and
ret
xor
cli
push
daa
mov
mov
fsubrl
jo
fwait
movsl
aas
or
inc
je
sbbb
lret
push
mov
pop
xor
in
orl
popf
inc
out
push
aad
scas
jo
dec
test
dec
sub
xlat
cld
jp
sbb
jge
out
and
stos
mov
pop
cmp
lahf
mov
mov
sbb
cmp
xlat
cs
stc
shl
mov
jae
imul
jle
fstl
inc
imul
cmp
add
xchg
or
jo
mov
pop
push
lds
mov
leave
aas
test
cld
in
sbb
movsl
pop
and
cmpsl
sub
stos
xchg
ret
scas
out
mov
xchg
xchg
out
outsb
xorb
fbld
jb
sbb
cmp
xchg
mov
addl
pop
mov
mov
adc
mov
pop
xchg
xor
sti
dec
fbld
cmc
sbb
pop
inc
pop
pushf
addb
pop
int3
idivl
rcll
push
push
ss
mov
insl
subb
and
xchg
push
push
ret
sbb
cmp
out
xor
stos
out
out
cmpsb
mov
mov
addb
xchg
xchg
movsb
xlat
loopne
and
in
pop
dec
cmp
push
in
sbb
popf
jns
rcrb
push
arpl
test
push
je
cmp
nop
fnstenv
mov
lret
scas
jae
loop
ss
enter
mov
lea
push
aad
cltd
pop
fnstsw
or
mov
repz
lret
pop
cmp
cmp
jp
sub
add
fbld
popf
cli
mov
sbbl
imulb
icebp
je
dec
xlat
sub
test
subl
test
or
and
lds
and
cltd
leave
mov
imul
cmp
adc
inc
outsl
loopne
jae
add
cmp
pop
jecxz
loopne
jle
andl
mov
jmp
add
add
xor
jb
mov
lock
cmp
cli
inc
jg
lahf
pop
xchg
xchg
add
cmp
push
ss
leave
loope
dec
mov
scas
inc
push
inc
iret
add
inc
mov
inc
xor
and
insb
dec
xor
xor
movl
in
fsubs
je
bound
pop
faddl
rolb
xchg
sar
outsb
dec
sti
xchg
stos
sbb
sbb
das
lret
lret
fwait
test
adc
xlat
scas
das
xchg
lea
sub
mov
jbe
imul
jb
jg
push
daa
and
or
jb
fisttpll
pop
cmp
mov
adc
out
inc
cmc
cld
pop
mov
add
adc
adc
popf
out
js
pusha
xorl
add
mov
jbe
pop
loopne
pop
lock
push
rclb
lock
add
out
jg
outsb
sbbb
pop
movsl
jae
mov
pop
ds
pusha
lahf
inc
jg
adc
mov
dec
test
mov
mov
adc
ret
pop
aas
cmc
shll
xchg
xchg
nop
das
test
mov
cmp
cmp
leave
rcrl
imul
push
dec
cs
pop
mov
sbb
push
sbb
stc
pop
pop
insb
rorl
jecxz
adc
out
cs
daa
loope
pop
adc
enter
repz
idiv
stc
push
in
cmp
mov
loope
push
cmp
mov
movb
and
mov
lahf
lods
loop
pop
cltd
arpl
imul
jb
testb
cmpsl
sbb
mov
and
arpl
jbe
sti
jne
inc
ja
ret
aad
and
dec
cld
aaa
sbb
sbbb
mov
dec
imul
sub
add
inc
cmp
sub
clc
mov
das
aad
dec
push
pxor
dec
daa
cltd
pop
adc
aas
cmp
fcompl
mov
xor
sbb
shrb
dec
fstpl
dec
in
arpl
arpl
stos
or
lret
jo
gs
shl
xchg
jl
icebp
xchg
es
sbb
xor
call
scas
lcall
mov
faddl
les
loopne
and
mov
cmc
jle
into
adcl
dec
and
push
xor
divl
mov
cs
cmpsl
push
xchg
mov
fdivrl
test
pop
or
or
or
jne
xor
ja
movsl
out
mov
jle
and
popf
add
xchg
shlb
and
in
sub
ret
xor
jbe
pop
out
sbb
sub
dec
mov
fdivrp
or
std
dec
jmp
arpl
pop
out
cmc
imul
adc
xor
jg
xchg
pop
adc
lret
adc
push
mull
out
pop
sbbb
xor
pushl
ds
mov
jnp
or
cmp
pop
notb
movsb
jno
mov
stos
jg
mov
dec
lahf
idivb
test
aad
jnp
aam
sbb
xchg
lods
xor
pop
xchg
daa
psrld
xchg
cmpsl
pop
sbb
mov
ss
or
sbb
mov
sub
pop
cmpsl
push
iret
sub
movsb
jmp
or
dec
pop
sti
lock
or
lea
lds
mov
movsl
insb
pop
loope
cld
sub
push
shr
add
inc
js
iret
sti
or
mov
sub
and
pop
pop
cmc
sub
dec
xchg
mov
and
pop
sub
into
movsl
int3
jo
mov
stc
push
push
xchg
push
stc
jge
xor
clc
scas
pusha
or
sbb
pop
push
xlat
fwait
scas
dec
xor
test
mov
xchg
mov
scas
popf
out
cmp
dec
ja
mov
dec
pop
push
cmp
into
data16
mov
jge
sub
cld
sub
mov
sbb
subb
aas
push
jg
adc
insb
lcall
jb
sub
adc
mov
inc
push
sub
rclb
mov
aam
out
out
sahf
jo
cltd
daa
and
xchg
gs
and
xchg
shrl
popa
bound
in
add
and
push
cmpsl
xor
mov
lea
inc
dec
mov
jb
jp
stc
and
jp
adc
mov
fistpll
mov
mov
in
sbb
shrd
jecxz
shrl
cmc
cmpsl
rol
lods
mov
stos
pop
mov
cs
in
xchg
push
xchg
ljmp
adc
pushf
push
lcall
push
ret
mov
rcll
lea
sub
mov
das
pop
mov
cmpsb
movsb
hlt
outsl
ljmpw
addl
add
clc
data16
testl
mov
adc
ljmp
rclb
add
enter
xor
inc
pop
int3
subb
inc
xor
mov
cwtl
cmc
inc
cli
xchg
sub
ljmp
in
std
pop
xchg
ret
fwait
sbb
pop
int3
das
sti
pop
and
mov
pusha
and
sbb
xchg
jle
jno
add
push
and
and
lds
movsb
and
into
xchg
test
push
and
sbb
std
or
lock
mov
push
mov
adc
sti
or
fldcw
xchg
push
divb
sarb
xchg
pop
enter
std
das
lcall
or
jo
and
test
sbb
enter
aaa
pop
and
out
clc
mov
into
cmp
mov
jg
imul
js
repnz
and
cltd
aad
daa
xor
icebp
js
addr16
cmpsb
mov
or
xor
dec
insl
add
add
jg
cmp
je
aad
pop
imul
dec
or
leave
sub
mov
sub
xor
cwtl
mov
stc
jg
jns
data16
inc
adcl
test
fucomp
out
out
xor
adc
filds
sbb
add
add
not
clc
punpcklwd
and
mov
lods
icebp
sub
cmpsl
mov
aaa
xor
jnp
shl
pop
xchg
cmp
xchg
cs
sub
push
push
sbb
adc
jnp
push
fistpll
cmpsl
icebp
push
pop
push
inc
into
out
sti
cmpsl
cwtl
adc
cs
sbbl
cmp
pop
sbb
xchg
mov
iret
daa
rclb
mov
cmpsl
push
sbb
mull
cwtl
dec
xor
sbb
pusha
subl
rclb
mov
test
out
pop
lret
int3
xchg
mov
dec
popa
and
inc
dec
mov
add
lock
pop
add
jb
addr16
sbb
push
pop
aas
lock
lret
xor
lock
in
lods
cmp
xchg
xor
out
sbb
jmp
xor
in
dec
test
push
adc
cmpsl
push
xchg
icebp
and
in
bound
mov
sub
xchg
incl
test
popf
insb
sub
mov
pop
addl
xchg
jp
xor
popf
adc
leave
sub
jae
lods
outsl
dec
stos
and
fmull
inc
imul
jg
jbe
ds
xchg
cmc
js
jl
div
in
inc
adc
aam
sub
sbb
sbb
movsl
test
sbb
loop
sub
in
xchg
push
push
les
push
loope
les
iret
orl
repnz
cltd
bound
jb
out
mov
popf
mov
xchg
xchg
ja
pop
jnp
lret
xor
push
pushf
pop
adc
pop
arpl
fldcw
jge
xchg
test
dec
lret
and
gs
mov
icebp
sub
cmp
mov
cltd
pop
push
outsb
das
mov
adc
insb
add
push
insb
mov
xor
inc
out
nop
insb
xchg
call
fistpl
loopne
daa
mov
add
mov
adc
jg
xchg
cmc
sub
mov
push
dec
xor
pop
push
rcrb
add
and
movsb
dec
lret
inc
arpl
imul
dec
test
rclb
mov
out
aas
enter
adc
popf
mov
cli
idivl
lods
mov
insb
loop
fsubrp
rcrb
sub
outsb
push
es
cmp
test
ja
mov
sbb
addr16
outsb
das
popa
pop
shll
out
jg
jge
rorb
rol
push
stos
mov
or
in
inc
insb
daa
xor
mov
cmp
icebp
outsl
push
lret
out
cld
loope
mov
sbb
js
bound
lahf
pop
ficomps
add
mov
pop
cmp
mov
sub
adc
mov
xor
nop
fs
sar
data16
addl
xchg
jb
or
and
push
hlt
pop
jae
lods
test
jb
bound
fwait
xchg
loop
pop
xchg
pop
pop
mov
cmp
fs
mov
sahf
enter
leave
in
pop
xlat
mov
test
adc
push
test
xchg
or
shlb
dec
xor
incb
push
cs
fnsave
shll
outsb
lock
xor
push
add
add
jl
je
cmp
inc
jno
pop
mov
and
xor
and
or
nop
xor
sub
xor
es
inc
ja
cs
aad
insl
inc
jmp
inc
fwait
movsb
pop
xchg
or
inc
loop
stos
push
loopne
or
inc
xchg
int
or
into
cltd
ds
addb
lret
das
inc
mov
je
and
dec
sbb
lret
gs
jmp
pop
xorl
pop
stc
loope
sub
daa
xor
hlt
cmp
dec
fildl
arpl
sbb
fwait
mov
fwait
xchg
mov
out
aas
pusha
inc
addr16
dec
and
and
jo
or
cmp
in
in
cltd
outsl
adc
scas
adc
push
arpl
dec
mov
stos
pop
xlat
lret
aas
mov
ds
das
mov
sub
sbbb
jno
mov
popa
inc
mov
add
jp
in
add
jl
add
mov
pusha
das
popa
enter
daa
aas
adcb
and
test
outsb
push
scas
and
bound
and
sti
ds
arpl
mov
aam
mov
mov
jl
insb
xor
cmp
sbb
fsubrl
add
lods
bound
into
mov
sub
xchg
xor
repz
std
test
xor
pop
push
test
mov
cli
or
into
sti
add
ljmp
les
sub
xor
jmp
les
pop
rep
in
pop
ret
cmpb
push
push
int3
nop
iret
xchg
adc
stos
daa
inc
repnz
and
mov
fsubrl
sbb
fsubr
in
int3
xor
mov
sbbb
cmp
mov
ja
repz
stos
jp
sti
jo
and
or
mov
cld
enter
and
cmp
dec
sub
push
je
add
repnz
push
xchg
adc
inc
outsb
fnsave
rcl
insl
stos
cmp
fcmovbe
inc
movb
xchg
imul
inc
scas
and
push
pop
or
stos
jl
push
dec
adc
sub
xchg
rorl
shr
xchg
push
repz
test
scas
jbe
lock
cmp
adc
aas
push
or
dec
aas
dec
mov
stos
lahf
push
sub
inc
fldl
lods
cld
pop
and
pushf
xchg
mov
loopne
lods
mov
out
mov
stc
out
out
mov
stos
mov
je
pop
mov
dec
mov
and
push
mov
mov
sub
test
jno
or
pop
int
cmp
imul
fsubrs
movsb
imul
test
or
insl
jp
cli
xor
xchg
cmc
mov
cmp
addr16
mov
adc
aad
xor
jge
sbb
loopne
push
mov
inc
adc
dec
stc
lret
bound
and
add
xor
les
enter
incb
pop
or
push
push
negl
dec
imul
sbb
push
push
mov
arpl
sub
and
sarl
pop
jmp
out
xchg
jge
sub
pop
cmpsl
push
lds
stc
das
jns
lcall
jo
cmpsb
inc
arpl
dec
int
divl
add
adcb
ja
mov
push
push
out
pop
rclb
push
mov
fstpl
pop
mov
inc
xchg
cs
mov
lret
cmpsl
stos
mov
mov
insl
cmp
and
mov
fs
outsb
jl
or
push
xchg
lcall
ja
and
sbb
mov
dec
movsl
xor
iret
adc
adc
cmpsb
aas
lods
jns
add
jmp
subl
ds
lock
je
ficomps
push
xchg
add
fldl
lret
shlb
add
inc
xor
cmp
inc
pop
mov
shrl
dec
ret
roll
mov
clc
pop
notb
mov
push
pushf
js
mul
and
and
pop
mov
fwait
sub
loop
loope
mov
gs
jae
xor
sarb
dec
adc
inc
push
loop
lock
shlb
cld
xchg
jae
sub
push
imul
and
enter
dec
dec
fisubl
mov
pop
sbb
insl
xor
xor
jno
dec
sti
out
dec
in
add
daa
pop
pusha
orl
rorl
push
lahf
into
adc
stos
jg
inc
hlt
pop
add
mov
add
pop
adc
jl
pop
dec
out
mov
cmpsb
fwait
cmpsb
lahf
cmpl
test
mov
punpckhwd
cltd
ljmp
push
pop
cmc
or
lret
cmp
sbb
test
popf
ss
andb
ja
mov
adc
nop
dec
imul
jmp
ud2
and
xchg
sub
icebp
ds
push
lea
repz
sbb
subb
inc
xchg
sub
je
aaa
dec
stos
fiadds
cmpb
mov
jg
in
imul
cmpsl
ss
add
ficoml
push
pop
arpl
dec
push
sbb
pop
cmp
lods
jo
loope
mov
sbb
adc
push
leave
jnp
pop
shrb
out
sti
std
xor
and
adc
xlat
cwtl
inc
dec
pop
mov
adc
cld
sbb
mov
cmp
dec
push
push
repz
pop
pusha
leave
cmpl
push
push
xor
dec
leave
cmp
imul
xchg
mov
sub
jno
sbb
inc
out
dec
inc
jne
decl
lea
dec
stc
fnstcw
or
sub
sahf
adc
dec
xchg
mov
adc
xor
mov
mov
mov
popf
dec
cs
xor
xchg
js
xchg
mov
inc
jne
cmp
sbb
sub
pushf
in
shr
cmpl
xchg
loop
inc
dec
and
fs
pop
cmpl
mov
daa
sub
std
sbb
dec
in
lea
es
es
xchg
stc
xor
xchg
cmp
aad
cmp
das
mov
pop
movsb
add
pop
scas
lcall
and
test
cmpsl
lret
fidivrs
fdiv
call
test
leave
mov
jl
fwait
pop
sbb
stc
sbb
es
mov
repz
jge
arpl
je
sahf
xor
fwait
cltd
cmp
out
fsubrs
notl
mov
xchg
adc
lods
lock
rorb
cmpl
mov
push
lret
mov
cmp
cwtl
ret
stos
ficoms
mov
xor
adc
loop
xor
push
mov
pop
push
mov
lret
repnz
sbb
jb
std
lods
jo
aas
mov
adcb
mov
cmpl
cld
scas
rcrl
jno
sub
iret
loop
test
lods
mov
mov
fidivrs
mov
aam
pop
aaa
xchg
mov
mov
movsl
roll
clc
pop
sbb
xlat
icebp
jne
cmpsb
mov
cmp
mov
outsb
fldenv
push
or
mov
in
mov
cmp
cwtl
cmp
iret
cli
in
adcl
push
lahf
test
mov
sub
pop
push
test
mov
mov
jnp
sti
mov
mov
sti
cmpb
pop
mov
xlat
add
in
jg
and
fwait
mov
sub
lds
lods
ds
sub
sbb
push
shlb
pusha
adc
inc
sbb
xchg
pop
mov
rorb
jl
pop
inc
sub
lea
sar
dec
rcrl
or
in
xor
jmp
jg
cmpsl
cli
pop
mov
pop
mov
cli
test
lret
mov
cmpsb
mov
lret
pop
or
adc
leave
shll
xor
add
scas
sub
sti
adc
sbb
repz
mov
outsb
dec
notb
dec
push
xchg
fdivrs
xor
push
xchg
cli
adc
iret
pusha
out
mov
sar
lods
enter
mov
jle
mov
in
xchg
sbb
nop
sbb
xchg
lcall
rcrb
mov
shll
fidivrs
xor
fchs
mov
pop
les
pop
cmp
xchg
xlat
mov
lea
jmp
push
cmp
pop
mov
in
jle
mov
hlt
pop
vmulpd
pop
jno
mov
test
aad
sbb
imul
xlat
clc
or
shl
rclb
pop
push
xchg
jnp
bnd
bound
cmp
sbb
or
pop
fdivr
or
fistps
push
sub
cmpsl
popa
inc
repz
addr16
in
test
fisubl
add
jb
mov
fs
and
push
jb
xchg
sub
je
xchg
icebp
push
pop
jae
ret
or
sub
add
jae
jmp
pop
hlt
icebp
test
dec
jecxz
ljmp
loope
sub
mov
jo
xor
dec
inc
push
jecxz
fcompl
arpl
aas
insb
cmp
loop
add
pusha
outsl
sbb
fistpl
js
add
stos
jle
jne
adc
scas
adc
ljmp
aas
cmc
mov
mov
adc
xchg
outsb
jae
lock
inc
mov
push
jmp
and
outsl
cmp
data16
sbb
rcll
lods
jne
cli
aas
sub
imul
adc
jmp
outsb
movsb
xchg
int3
pop
test
test
test
mov
mov
or
add
or
js
push
ljmp
add
sub
iret
xchg
mov
pusha
mov
in
lods
mov
dec
sti
add
insl
add
out
pop
adc
pop
cltd
data16
push
into
mov
out
inc
fisubs
or
xor
lcall
mov
pusha
push
xchg
adc
mov
call
repnz
xchg
push
mov
sbb
inc
mov
out
mov
or
lock
mov
add
adc
mov
out
cmp
sti
pusha
jbe
dec
lahf
mov
push
mov
jne
pop
lea
sub
xchg
add
and
cmc
hlt
sub
mov
mov
insb
loopne
inc
enter
push
fs
sbb
xor
sbb
jbe
mov
hlt
pusha
inc
mov
xor
mov
fwait
jmp
std
pop
in
jno
sti
mov
loopne
into
pop
mov
out
adc
stos
bound
fwait
rcr
jmp
cmp
pusha
sahf
test
sbb
pop
sub
inc
push
and
mov
fwait
add
inc
hlt
mov
mov
push
and
leave
mov
mov
clc
test
mov
push
xor
adc
sti
test
xlat
pusha
lds
sbb
or
cmp
sbb
push
jbe
and
ss
xor
mov
out
push
movsl
in
repz
add
xor
and
mov
jnp
pop
mov
ja
sub
and
dec
fucom
pop
in
nop
cmp
xchg
add
jge
jno
jge
lock
adc
hlt
xchg
xor
aas
jbe
das
sub
popa
jo
or
fcomps
mov
mov
push
sbb
dec
pushfw
in
fisubrl
xor
adc
aad
in
inc
jmp
adc
cltd
in
push
and
push
lods
fildl
push
pop
dec
das
cli
add
hlt
sub
jne
xchg
add
orl
imul
lahf
mov
out
nop
xor
cmpsb
repnz
loopne
add
inc
iret
test
mov
push
adc
xchg
imul
jbe
bound
adc
push
mov
dec
jns
mov
xor
testl
mov
imul
inc
add
pop
xor
idivb
adc
jecxz
adc
movsl
outsl
movsb
cmp
out
or
push
repz
pushf
jnp
jne
sub
call
movsb
in
int
outsl
or
decl
ficoms
adcl
xchg
jne
pop
rcr
or
inc
fldenv
mov
or
in
stos
jae
imul
loope
pop
idivl
nop
in
and
fdivrs
addr16
lret
cli
xchg
stos
jne
jl
shl
or
pop
fsts
add
fmull
mov
jo
mov
jnp
xchg
rcll
sub
push
scas
push
es
test
ror
insb
and
adc
pop
call
scas
clc
scas
imul
fcoms
adc
inc
outsl
dec
decb
js
add
aaa
out
mov
mov
scas
inc
sub
xlat
stc
cwtl
jae
and
cmp
fadds
or
xor
lret
fldt
stos
popf
mov
mov
add
adc
mov
outsb
int3
inc
imul
mov
outsb
fsubr
or
stos
or
roll
cmc
dec
add
lods
ficomps
inc
idivb
movsb
scas
movsb
jo
inc
cmp
setl
mov
or
fs
dec
bound
hlt
cmp
cmp
ret
shl
sub
sub
lahf
cwtl
test
sbb
outsb
cltd
sub
std
sahf
aaa
mov
sbb
adc
lret
inc
jge
mov
adc
push
add
adc
outsl
lcall
test
in
mov
sbb
and
push
ljmp
inc
sub
movsl
dec
jl
sub
or
mov
cltd
out
insl
mov
movsl
mov
adc
sbb
add
rcr
cwtl
xor
dec
repz
pop
push
mov
dec
add
outsb
test
add
xor
flds
sbb
push
mov
cs
icebp
out
psubd
call
or
push
fisubs
sbb
pop
mov
testb
ret
hlt
lea
mov
sahf
fisttpl
scas
enter
fcomp
jmp
loop
xchg
add
mov
lds
inc
je
stos
cmpsl
mov
mov
cmp
arpl
idivl
aaa
cld
xchg
mov
xchg
mov
and
sti
push
xor
insb
jo
jno
cmc
pushf
and
xor
movsl
sahf
aas
ja
cld
out
stos
out
push
call
das
dec
inc
dec
out
add
in
dec
cli
pop
mov
enter
fdivrs
insb
ljmp
inc
fcompl
bound
pushf
xchg
scas
xchg
jno
cld
clc
pop
sbb
sar
fstl
and
pop
mov
sub
cmpsl
into
sub
pushf
lods
enter
addb
sub
cltd
jmp
lret
adc
lods
lods
dec
xchg
xchg
sti
mov
xor
test
add
cmp
sbb
rol
push
push
dec
add
inc
add
push
in
adc
mov
push
pop
fsubrs
mov
fsts
bound
jb
aas
push
dec
ret
and
std
adc
or
pop
jno
cmpsb
mov
cld
mov
call
dec
mov
pop
int
leave
xor
jecxz
dec
inc
mov
call
pop
pusha
mov
mov
pop
sbb
or
aad
orb
and
loope
lahf
jno
jp
or
cli
arpl
je
std
test
or
push
addl
inc
jecxz
add
mov
outsl
insb
enter
jl
or
imul
add
jae,pt
stos
adc
jae
clc
in
cmpsl
xchg
jo
mov
les
xchg
mov
xlat
mov
or
sub
xorb
inc
or
dec
loope
gs
fcos
ljmp
aaa
pop
leave
and
xchg
push
ret
pop
clc
cltd
add
icebp
mov
inc
xchg
xchg
test
add
dec
cmp
scas
insb
xchg
dec
int
inc
jno
xor
fwait
int3
or
adc
out
xchg
sbb
dec
movsb
shlb
or
jnp
mov
out
sbb
inc
sarl
imul
in
cmp
add
push
clc
cmp
rcll
adc
mov
dec
pop
mov
daa
nop
in
mov
jmp
sti
dec
inc
fiadds
jb
lods
pop
ja
iret
scas
and
cmp
lods
pop
dec
xchg
in
push
mov
mov
fsub
sbb
mov
cmp
lea
or
dec
lcall
adc
cli
leave
or
leave
inc
test
add
jnp
cmp
jb
push
lret
js
std
jnp
ficoml
test
jb
xchg
mov
out
in
mov
xchg
push
mov
aad
mov
sub
enter
mov
out
cmp
cmpsl
jne
cmpsb
push
dec
ror
fsub
ds
pushw
sarb
orb
or
add
mov
xchg
push
cmp
stc
lcall
cmp
loop
cld
shl
cmp
jecxz
filds
jl
xchg
cmpsb
subl
push
sub
cmc
popf
jno
push
mov
sbb
mov
clc
es
mov
out
mov
inc
sub
xor
adc
insb
negl
mov
push
adc
lods
pop
cli
sbb
dec
xchg
push
in
fsubrl
adc
pop
bound
mov
stc
fsubrl
pop
mov
aas
sub
test
push
in
adc
jle
cmpsl
inc
adc
pusha
in
pusha
fsubrs
sub
ja
sbb
inc
scas
test
sbb
ret
xor
dec
aaa
push
jle
fwait
pop
inc
pop
mov
pmullw
adc
inc
cmp
pop
mov
adcb
mov
adc
and
movsl
dec
shlb
fimuls
shlb
jge
test
clc
mov
jb
mov
outsb
lret
pop
pop
fs
das
inc
mov
dec
jbe,pt
outsl
sbb
jb
arpl
popf
out
mov
ficoml
lahf
xor
je
dec
hlt
add
cli
repz
shrb
lret
je
mov
cmc
inc
cwtl
or
cmc
sub
push
insl
cmp
addr16
subb
out
push
mov
jmp
mov
add
jmp
stos
inc
test
popa
in
adc
lods
out
neg
cs
and
pop
push
int3
mov
push
xor
sub
lods
fstl
mov
xchg
bound
pop
dec
scas
cmc
pop
add
scas
fwait
jbe
fpatan
stos
xor
stc
sbbl
inc
mov
shrl
xchg
xchg
in
arpl
pop
and
mov
and
push
sub
add
sub
or
mov
adc
xchg
pop
push
stc
adc
cmp
jl
xchg
rcrl
adc
out
loope
and
cmp
mov
insl
aaa
dec
mov
mov
adc
je
fldl
mov
jge
inc
mov
fdivs
pop
insb
push
or
sbb
push
bound
aad
call
dec
add
and
mov
test
sub
lret
outsl
cmp
push
push
mov
cs
sub
lret
dec
adc
sub
mov
jp
daa
outsb
je
cmp
jge
hlt
insb
shll
pop
add
popf
lcall
pop
out
aam
mov
je
inc
and
mov
in
movb
xchg
jb
sti
idivb
aaa
xchg
addr16
or
fstpl
xchg
jmp
xchg
mov
sub
jno
cli
xchg
out
cld
jg
sbb
sub
xlat
jecxz
pusha
in
lret
dec
mov
push
movsl
add
jp
sbb
pop
ss
xlat
mov
cmp
pop
repz
mov
sub
mov
mov
test
xchg
inc
mov
mov
mov
push
lock
mov
ret
and
mov
scas
into
fwait
xor
lods
add
scas
push
mov
sub
shl
push
mov
outsb
push
nop
adc
popa
mov
ljmp
jmp
add
mov
mov
es
mov
movsb
mov
cmp
cmp
cmpsl
cmp
jbe
sbb
movsl
test
inc
movsl
mull
bound
xchg
xchg
mov
push
in
es
pop
mov
and
adc
dec
aad
cmc
or
repnz
jns
add
cli
cmp
and
inc
mov
dec
loope
sub
lahf
xor
dec
or
mov
cli
inc
lret
push
stos
in
ret
aam
arpl
and
sahf
adc
dec
xchg
mov
std
mov
fwait
cmp
cmp
pop
or
sub
add
push
inc
dec
push
aaa
cmp
scas
daa
loope
int
mov
out
adc
cmpsl
and
in
push
jb
xor
ja
add
mov
add
cli
arpl
fdivp
sub
push
pusha
add
cmpsl
notl
add
call
jecxz
mov
lahf
add
mov
xchg
lahf
sub
sub
std
in
xlat
pop
enter
push
outsl
test
ss
adc
add
mov
shl
pusha
push
sub
mov
sub
fwait
imul
test
fsubl
shlb
adcl
inc
daa
cmpsb
inc
pop
outsl
fstps
pusha
push
nop
lret
xor
pop
ljmp
or
pop
nop
xchg
in
int3
pop
pop
pop
jnp
jecxz
mov
mov
sub
icebp
inc
ret
cmp
dec
xor
lahf
int
out
roll
mov
sbb
or
ffree
dec
sub
adc
dec
loope
jp
rcll
movsl
icebp
or
movsl
movsb
inc
scas
mov
sbb
lret
outsb
clc
ljmp
repz
inc
mov
xchg
pop
xor
cmp
xchg
mov
dec
xlat
in
and
aad
xorl
scas
std
fidivrs
jp
push
ret
add
js
addr16
push
shrb
pop
iret
aaa
orb
xchg
rorb
adc
aam
test
cmpsl
in
add
pop
cmp
fdivs
mov
xchg
xchg
fwait
jge
dec
xor
je
sbbb
scas
icebp
sti
xor
mov
mov
xchg
jns
jns
std
pop
sub
mov
imul
pop
add
jp
push
dec
mov
cmp
jg
adc
aam
push
cmp
dec
xchg
mul
jae
push
lea
mov
cwtl
and
add
xorl
push
xor
in
arpl
adcb
pushf
test
lea
js
xor
mov
or
fsubrs
mov
aaa
loope
push
ret
or
pop
and
mov
fwait
jb
jae
lahf
in
iret
push
push
and
movsb
mov
fxch
adc
jg
jge
insl
jno
ret
into
fisubs
sub
fwait
nop
mov
cmc
add
adcl
mov
sbb
lret
mov
lret
aad
dec
aad
sub
sbb
jg
cli
sbb
push
mov
lods
sarl
inc
idivl
mov
and
ror
repnz
test
stc
jbe
jbe
cltd
pop
movsl
inc
cmp
dec
testl
xor
iret
pop
imul
lods
lods
xchg
test
test
aam
inc
das
dec
inc
mov
in
cmp
ja
in
mul
sub
loop
cs
loope
les
or
outsb
popa
xor
inc
lcall
jno
pop
shl
mov
lret
sub
add
cmpsl
sub
test
in
cmpsl
lret
push
cmc
cmp
mov
outsb
sbb
fdivrs
mov
lods
addr16
lcall
add
cmp
mov
pop
testl
stc
dec
lret
daa
pop
sub
cmpsb
and
das
push
push
cmc
scas
jecxz
xchg
pop
aam
addr16
ret
sub
lret
sti
and
push
in
pop
dec
push
les
sbb
mov
test
mov
jmp
dec
jle
jl
loopne
push
divb
ljmp
scas
out
cmp
push
neg
cmpl
mov
repnz
xchg
adc
jne
test
inc
sti
cmc
or
push
cmpsb
cmp
aam
enter
xor
pushw
pop
fadd
out
mov
sub
jg
daa
push
push
and
pop
mov
sbbl
inc
xchg
xchg
inc
fxch
jnp
jp
mov
jp
popf
or
inc
sub
lret
hlt
test
inc
xor
in
adc
or
mov
rclb
push
pop
sbb
in
push
mov
jno
jns
or
cmp
mov
outsb
iret
xchg
mov
sbb
add
mov
iret
sbb
movsb
cmp
imul
push
push
mov
adc
add
clc
inc
icebp
adc
dec
inc
adc
ljmp
mov
jle
test
in
mov
test
cmpsl
sbb
mov
add
adc
movsl
pop
cltd
sbb
imul
fsub
mov
add
loopne
icebp
inc
sbb
cmpsl
xor
shrb
sarb
or
mov
and
fstps
aam
gs
mov
xchg
push
call
lock
loope
shrb
lods
lods
test
in
mov
sub
mov
int
pushf
dec
and
fs
add
subl
cltd
sbb
pop
outsb
jns
gs
inc
cmc
shlb
hlt
push
popa
cmp
pop
and
out
mov
mov
jmp
mov
xor
sbb
ds
loop
roll
xor
loop
jecxz
sub
add
sub
lcall
ret
in
push
sub
sbb
repz
pop
mov
mov
sbb
scas
movsl
mov
imul
popf
jns
lcall
cmp
out
mulb
add
out
add
call
inc
push
cmp
sbb
push
or
sbb
lcall
jno
std
or
repz
push
in
iret
movsl
js
pop
data16
cwtl
in
scas
movsb
loope
xchg
addr16
in
xchg
subl
dec
int3
loopne
repnz
add
icebp
aaa
imul
fisttpl
cmc
lock
xchg
fsubp
ret
or
dec
jo
dec
and
sub
and
xchg
test
scas
adc
pop
ret
add
repnz
loopne
fcoml
mov
mov
mov
push
fsub
int
xlat
dec
iret
sbb
js
mov
or
mov
or
xor
das
cmp
add
push
mov
cmpsb
in
adc
movq
mov
xor
sbbl
test
leave
cmp
idivb
pop
cld
adc
stos
and
or
shll
pop
dec
cmc
clc
fildl
out
scas
int3
cmc
mov
clc
adc
aam
nop
lret
in
pop
adc
repz
xchg
sahf
cmp
int
das
popa
cmp
mov
repnz
ret
lret
cwtl
pushf
adc
or
cmp
mov
scas
in
jge
or
loope
jl
data16
int
mov
sti
std
xchg
push
mov
add
cmovo
mov
aad
out
call
inc
mov
jb
cltd
lods
push
push
popf
fidivrl
test
adc
cwtl
inc
pop
adc
pop
add
lods
xchg
fistpl
xor
xor
fwait
arpl
popl
pop
xchg
das
testb
pushf
insl
cmp
pop
sub
lcall
lahf
add
mov
inc
xlat
mov
rorl
xor
sahf
xchg
cli
gs
outsl
outsb
sbbl
sbb
mov
lret
out
add
repz
add
cli
mov
jecxz
and
push
dec
js
ljmp
rolb
cmpb
and
ss
mov
pop
iret
cli
push
sbb
neg
shr
sub
dec
fadds
dec
pop
loope
sub
jl
ljmp
int3
adc
jmp
push
xchg
pop
mov
icebp
jno
inc
fs
push
adcl
iret
cmpsl
mov
pop
mov
rcll
pop
inc
inc
or
xchg
cs
adc
cli
test
or
xor
scas
xlat
mov
sbb
xchg
sbb
leave
sub
pop
push
pop
pop
out
cmp
sub
in
pop
lods
in
jb
mov
adc
in
mov
mov
addr16
push
addr16
scas
fstpt
xchg
popf
loopne
pop
fwait
jbe
mov
mov
add
and
inc
imul
pop
imul
popf
movsl
jnp
inc
aas
inc
mov
sub
sub
cmpsl
push
in
das
sub
dec
jle
iret
cmp
cs
push
imul
subl
pop
pushf
adc
jo
loop
outsb
pop
das
ljmp
pop
pop
icebp
mov
mov
adc
out
push
push
mov
and
xor
in
dec
loope
mov
pushf
mov
adc
cmpsb
xchg
shl
lds
in
clc
dec
push
sahf
and
jl
jne
int
stos
jp
mov
lods
mov
dec
cmp
jnp
xor
stc
jl
ljmp
jg
repz
mov
jbe
and
ja
add
add
imul
dec
into
add
ret
cmpsb
mov
mov
mov
jle
add
and
push
inc
int
mov
mov
insl
jle
pusha
sub
lret
adc
lods
test
pop
jne
mov
sub
mov
xor
fimull
rolb
mov
int
inc
shlb
push
jne
fwait
outsb
add
inc
pop
xchg
popa
jae
jbe
pop
mov
mov
nop
pusha
cwtl
js
inc
out
jle
mov
ljmp
test
aaa
int
inc
xchg
dec
mov
or
lods
ret
std
inc
movsl
and
pop
pop
xchg
adc
add
cmp
pop
xor
nop
jo
sub
movsl
adc
dec
or
test
xchg
enter
mov
cltd
loope
fidivs
clc
std
push
daa
sub
clc
pusha
imul
jbe
nop
movsl
pop
mov
dec
insb
icebp
or
inc
cld
rol
mov
mov
into
mov
xchg
jecxz
sub
jbe
jge
test
jae
imul
std
mov
adc
ds
pop
test
xchg
xor
mov
cltd
xlat
fisttpl
jmp
cmpb
sub
icebp
or
jbe
pop
daa
clc
repnz
sbb
cld
daa
sub
push
push
jg
lods
fcoml
pop
fldl
lret
test
add
push
jbe
nop
push
lods
loopne
sub
jle
out
pop
xor
push
inc
xor
ds
push
xor
fldenv
cmp
insb
add
mov
mov
movsl
rcrl
sbb
orb
repnz
rcl
movsb
mov
outsl
dec
sbb
jmp
mov
repnz
xorl
imul
or
adc
movsb
cmp
fnsave
jae
xchg
xchg
dec
test
or
roll
hlt
xchg
js
mov
mov
ret
iret
leave
pop
sub
ss
call
jle
mov
js
sbb
ljmp
jns
stc
in
cmc
sub
mov
test
enter
pop
jl
outsb
xchg
push
mov
loope
movsb
sub
mov
mov
xorl
push
arpl
aaa
and
mov
xor
sbb
sti
adc
dec
je
xor
pop
add
adc
jae
xor
ror
push
adc
je
int3
imul
in
fildll
mulb
adcb
pop
adc
lods
or
pop
jae
lock
popa
mov
scas
or
mov
inc
shll
push
pop
popa
pop
movsl
rolb
ljmp
pop
ljmp
sub
fwait
mov
ret
push
movsl
dec
ret
sub
lret
dec
loopne
mov
push
aam
mulb
int3
fadd
shrl
loopne
or
les
lods
pop
ret
adc
cmp
and
cltd
jle
test
sub
and
andl
inc
iret
sub
sbb
pop
imul
fisubrl
mov
sbb
jno
ret
lahf
mov
dec
repz
inc
xchg
inc
add
xor
shr
popf
clc
insb
mov
or
add
mov
sbb
cli
int
aam
jge
pop
or
push
es
inc
adc
shlb
pop
daa
or
pop
xchg
or
mov
and
mov
jcxz
mov
sti
stos
mov
insl
add
in
push
pushf
and
xchg
jno
lret
dec
lock
dec
aam
adc
es
movsl
xchg
cld
pop
and
sub
hlt
mov
inc
js
mov
jnp
add
push
pop
shlb
and
sub
ja
jmp
les
fimull
mov
insl
das
xchg
cmp
loopne
sub
lea
inc
adc
mov
or
dec
jo
pop
and
rclb
mov
cmc
mov
jae
pop
lcall
jne
imul
out
hlt
lds
jmp
pop
mov
sub
push
mov
mov
sbb
pop
or
pop
int3
or
dec
or
pusha
inc
shll
arpl
stc
adc
inc
rorb
or
and
add
mul
imul
data16
xchg
mov
push
call
loopne
ret
in
or
add
sbb
xchg
jmp
repz
dec
cli
out
pop
test
jb
mov
add
test
push
pop
jge
mov
mov
out
mov
sub
shr
cmp
add
jb
or
les
cmp
aad
adc
scas
inc
cwtl
pop
test
dec
jns
fstpl
push
jg
cwtl
scas
xor
jne
pop
scas
add
sbbl
orb
xchg
nop
fmull
mov
mov
adc
xchg
push
and
push
cmpsb
pop
mov
or
push
xchg
dec
jne
lahf
push
cwtl
mov
dec
stc
sbb
adc
lahf
leave
push
add
iret
sub
arpl
cmp
out
or
xor
cmpsb
movsb
add
jl
bound
sub
inc
das
std
addl
fwait
rolb
mov
inc
add
cli
mov
push
fwait
mov
push
jp
jmp
mov
clc
sub
movsl
gs
loope
lock
lret
cmp
push
inc
cmpsb
pop
sub
outsb
mov
mov
jne
sbbl
pusha
push
fiadds
jb
mov
mov
and
jo
jno
icebp
sahf
add
sbb
adc
loope
dec
scas
push
arpl
adc
xchg
jno
outsl
rorl
add
pop
xchg
ljmp
mov
and
and
cwtl
imul
sub
or
adc
bound
sub
adc
cmp
jle
jmp
or
sbb
ss
sub
mov
pop
shl
xchg
sbb
mov
cli
stc
sahf
daa
shlb
mov
fwait
arpl
dec
cltd
mov
cltd
pop
and
push
divb
out
jnp
mov
cwtl
add
leave
mov
pop
or
mov
ret
and
lods
lcall
out
fsts
xchg
daa
movntps
data16
test
rcll
icebp
jno
xchg
adc
test
loopne
pop
or
in
cli
push
xor
xchg
mov
outsl
das
aas
lret
push
ficoms
push
lahf
push
adc
sub
xchg
mov
add
gs
sbb
mov
iret
and
sbb
xchg
sahf
jae
xor
pop
mov
push
mov
std
lcall
insl
jl
mov
out
cmp
js
xor
lods
mov
sbbb
mov
pop
push
mov
lds
jl
xchg
in
xor
or
es
and
dec
sub
pop
lret
xor
jnp
nop
jle
call
pop
mov
aas
or
das
xchg
xchg
andl
or
jbe
movsl
fisubrl
addl
push
cmpl
push
xchg
add
add
pop
sahf
xchg
cmp
and
xchg
outsb
jne
xchg
add
cmp
mov
icebp
lds
movsl
or
adc
repnz
int3
or
scas
push
ds
hlt
lcall
ret
xor
int3
shlb
lret
cmpsb
mov
dec
or
fsts
setno
sbb
scas
movsl
int
hlt
or
insl
sub
pop
cmp
add
pop
shll
test
mov
dec
cmp
sbb
push
enter
aam
cmp
mov
push
xchg
and
cmp
mov
push
inc
mov
push
ficompl
push
xchg
lds
mull
add
cwtl
shll
xor
pop
jbe
fsubl
in
movl
jmp
add
out
mov
sub
mov
dec
fbld
xlat
test
insb
cld
insb
ret
popf
cmpsb
int3
push
sbb
aad
cltd
pop
nop
stos
mov
xchg
testl
push
test
imul
jo
adc
mov
pop
and
lcall
jmp
in
out
rclb
cmc
je
jecxz
and
inc
fs
adc
mov
test
pop
fisubs
or
mov
movsl
movsb
insb
xchg
pop
or
call
cmp
dec
sarl
add
pop
mov
add
pop
fldenv
shr
and
test
test
scas
stc
outsb
popf
and
sub
sub
rclb
es
jp
pop
xor
push
js
mov
sub
ss
pop
jb
sahf
test
xchg
inc
jne
dec
xlat
jl
mov
mov
movsl
xor
fcomps
aad
cmp
lods
xorb
mov
jge
inc
push
sbb
xor
sbb
not
sahf
xchg
repnz
add
cltd
cmpsl
in
jp
push
sbb
adc
pop
mov
add
daa
addr16
xchg
lahf
inc
and
lret
xchg
es
lahf
sbb
pop
cltd
out
mov
push
in
ljmp
push
lods
xchg
adc
out
lock
mov
jo
jbe
andb
test
fs
push
adcb
lods
jp
inc
mov
or
and
ret
xchg
mov
cmp
mov
out
mov
outsb
sbb
clc
lea
pushf
ja
outsb
jne
pop
adc
insl
popa
inc
pop
push
mov
inc
fisubrs
das
xor
jns
jns
pop
aas
xor
pop
fiaddl
cwtl
inc
pop
adc
jl
push
pop
mov
cmpsb
jecxz
dec
adc
sub
in
fcomp
sarb
pop
add
imul
dec
and
in
push
bound
inc
jo
add
inc
push
out
je
fldenv
dec
test
xchg
push
push
lss
or
lcall
cmp
cmp
mov
inc
push
pop
out
mov
or
xor
shlb
in
and
js
loope
sub
dec
cmp
push
arpl
bound
lret
cli
mov
ja
cmp
mov
add
jecxz
movsl
push
clc
fistps
nop
push
push
pop
mov
jae
add
cmp
lods
and
mov
and
jg
arpl
dec
cmp
sahf
or
sub
add
jno
mov
mov
xchg
jle
sarb
pop
out
loop
add
into
cmp
jne
and
sub
push
cltd
or
add
hlt
push
push
push
subl
lret
ret
jecxz
jle
and
xchg
outsl
test
fsubrs
popf
dec
xor
pop
shll
lods
inc
sub
lret
gs
in
js
jne
xor
cltd
mov
lds
inc
inc
scas
test
inc
popa
inc
sub
push
call
pop
push
sub
mov
into
push
leave
int3
xchg
sbb
xchg
test
cmp
xor
popa
sti
adc
cli
je
jo
sub
in
jb
mov
cmp
sbb
pop
jne
into
xchg
fimull
shl
mov
lcall
dec
inc
loop
push
xchg
push
xor
rcrl
fwait
dec
sub
mov
sahf
orb
xchg
leave
popa
int
pop
pusha
icebp
pop
jmp
adc
push
pop
into
lock
push
int
aam
cmp
or
mov
xor
xchg
inc
jnp
pop
sbb
in
adc
xchg
xor
lods
int3
inc
cli
in
hlt
mov
sub
lret
jo
push
and
ljmp
das
cmp
inc
fisubrl
sbb
inc
addb
or
adc
daa
lret
mov
xchg
xchg
insl
mov
dec
imul
jbe
sub
incl
sarl
pop
notb
jmp
xor
cmp
xor
mov
and
rorl
repz
shl
mov
stc
jecxz
adc
stc
sub
lahf
cmc
jl
mov
add
push
in
daa
adc
mov
jns
push
mov
adc
dec
cwtl
pop
lahf
xchg
sahf
mov
lea
push
mov
sbb
sub
mov
jecxz
lods
lahf
pop
pop
fwait
aam
inc
jne
xor
dec
imul
jmp
out
fisttpll
xchg
loopne
cmc
mov
or
inc
and
push
je
outsl
or
lock
add
nop
mov
xor
adc
or
jecxz
stos
push
mov
stos
lock
adc
stc
jle
fldl
pushf
xorb
xchg
xor
inc
cmpsl
push
xchg
push
pop
push
scas
jnp
inc
mov
push
testl
dec
aam
lods
repz
in
mov
pop
cmp
add
jge
jl
jmp
inc
cld
scas
stos
push
dec
pop
mov
rcr
mov
xor
pop
mov
jp
mov
xchg
jle
cmc
into
add
popa
add
pop
cmp
pop
cwtl
push
jnp
in
and
repnz
jge
inc
addr16
lea
jle
bound
popa
sub
push
sbb
hlt
insb
sub
jg
inc
jnp
or
sbb
fistl
dec
inc
add
stc
push
pop
mov
mov
mov
shl
push
cmc
in
decb
mov
push
add
test
jb
jecxz
xchg
cli
add
pop
push
cmpsl
lds
jp
push
mov
sti
adc
stos
inc
push
mov
and
popf
jl
xor
inc
push
inc
outsb
jl
pop
iret
sti
lea
leave
sub
cmp
ds
add
inc
loopne
xor
lds
pop
pop
jg
pop
mov
pop
leave
mov
int3
daa
out
dec
mov
mov
xor
or
mov
cmc
mov
mov
out
dec
loopne
mov
jae
insb
jne
inc
add
adc
mov
popa
mov
gs
sub
movsb
popf
fisttpll
fwait
mov
mov
cmpsb
dec
call
shlb
mov
and
mov
fucomi
mov
icebp
imulb
daa
mov
mov
adc
sub
gs
stos
or
and
jp
push
iret
jle
xor
loope
pop
testl
imull
stc
mov
or
xchg
pop
inc
xchg
insl
pop
or
out
pushf
xor
jl
sbb
sub
xor
adc
push
in
pop
adc
add
mov
fwait
out
adc
cmp
cld
jle
pop
sbb
ficoms
jl
lcall
xor
sahf
out
adc
lods
sub
inc
pop
sbb
pop
popa
mov
and
out
adc
adc
inc
aam
xor
das
rcrb
add
popa
mov
jl
cld
popa
push
mov
or
sbb
inc
cmp
addl
push
dec
push
lcall
add
xor
push
xchg
aad
lcall
ss
js
pop
insl
dec
idivl
daa
mov
pop
adc
mov
push
imul
dec
lods
filds
pop
shlb
lret
inc
mov
lods
jmp
into
pop
jmp
shr
mov
and
movsb
ja
inc
jge
adc
mov
popf
fdivl
jb
push
addr16
jle
inc
mov
add
loope
xor
mov
lods
fnstenv
xor
xor
xchg
and
add
push
insb
mov
push
jg
test
mov
mov
mov
inc
cmp
leave
test
and
adc
fisttps
sub
je
imull
fmuls
testb
imul
inc
ret
mov
fstpt
jnp
fdivrl
cmpsb
pop
adc
lret
and
xor
in
pop
div
adc
xor
xorl
iret
imul
in
faddl
mov
data16
ficomps
jge
add
jmp
mov
cmp
out
dec
sub
mov
mov
inc
mov
or
out
sbb
ret
stos
or
test
movb
das
push
lods
insl
inc
pusha
cmp
cs
sbb
adc
mov
aaa
cmpb
scas
xchg
push
mov
lahf
outsb
leave
in
inc
jne
outsl
jae
ljmp
jb
imul
and
arpl
cltd
imul
push
mov
aas
inc
insb
dec
xor
fs
addr16
sbb
xchg
lds
jnp
imul
mov
sti
pop
xchg
pop
mov
stc
jmp
jne
sbb
push
dec
in
out
pop
sbb
in
inc
add
test
and
pop
jne
jne
xchg
pop
adc
push
xchg
push
xor
pop
push
call
sarb
sarl
fiadds
movsb
in
jg
mov
sbb
ret
repz
jno
sti
xchg
out
cwtl
xor
sub
mov
xlat
gs
adc
gs
fdiv
hlt
sub
cmp
mov
mov
in
mov
push
push
mov
sub
mov
or
insb
testb
adc
mov
fwait
push
xor
jnp
xchg
sbb
ss
sbbb
popa
fldt
push
push
loope
cmp
mov
ds
xchg
inc
xor
cmc
hlt
cmc
gs
xchg
fbld
scas
repz
nop
out
mov
xor
hlt
aam
ficomps
or
lock
push
sub
in
es
addr16
or
sbb
sbbl
lcall
dec
ret
cmpl
scas
dec
dec
shl
leave
lods
push
in
adc
in
scas
mov
or
mov
mov
push
inc
xor
cmp
test
jge
add
mov
hlt
dec
sahf
or
ljmp
in
or
mov
nop
sub
mov
pop
cmp
mov
push
xchg
pop
push
paddsw
xor
loop
mov
or
shlb
sahf
jge
xchg
movsb
outsl
sti
inc
inc
cmp
int
ljmp
loop
scas
inc
dec
cs
cmp
cmp
lods
lret
xlat
cs
push
ret
stc
mov
push
fldcw
sbb
cmp
sub
xchg
adc
lret
lret
lds
mov
imul
jg
ds
bound
and
sbb
jae
mov
jg
mov
cltd
rclb
les
popa
sarb
in
adc
jge
scas
insb
xor
and
and
cmp
cli
pop
ja
stc
xor
fsubr
sub
cmp
mov
pop
sarb
pusha
icebp
sbb
sub
out
pop
fldl
mov
imul
or
shrb
mov
daa
dec
into
divb
cld
in
adc
movsl
adc
mov
sti
dec
repz
stc
mov
ret
push
mov
dec
inc
xchg
mov
jae
xchg
and
lahf
jbe,pn
ds
js
or
mov
insb
bound
je
add
add
xchg
cmc
jecxz
movsb
pop
adc
xor
sub
mov
pop
mov
dec
out
mov
adc
imul
cli
mov
daa
testb
inc
push
mov
mov
mov
stos
mov
xorb
aam
cmp
in
sub
add
mov
push
pop
mov
addl
and
push
mov
mov
add
leave
fsubl
pop
xchg
mov
insl
add
inc
mov
pushf
inc
dec
push
pop
mov
lret
add
ja
insb
xor
in
adc
in
jno
lock
call
imul
inc
xor
mov
push
mov
fisttpl
nop
ja
std
call
dec
adc
pop
xor
dec
and
add
ret
pusha
fstl
loope
loop
sbb
ret
aas
dec
push
sub
pop
xor
cmp
and
popf
insb
aas
aad
cmc
les
mov
mov
sbbl
movsb
mov
rcr
out
pop
push
incb
fwait
daa
add
mov
cmp
xchg
pop
ja
sbb
ss
push
jne
rcr
cmc
inc
dec
dec
or
loope
jbe
out
js
adc
add
pop
loop
test
filds
pusha
lock
pop
dec
jno
mov
cli
and
inc
mov
cld
ret
push
dec
inc
mov
mov
cmp
inc
iret
add
mov
call
push
mov
jge
inc
dec
outsb
dec
adcb
daa
jl
jmp
jb
sbb
mov
out
cld
or
test
add
jnp
ret
popf
cmp
push
xchg
sbb
jnp
lcall
adc
mov
enter
insb
xchg
dec
sub
push
in
rcr
or
loopne
cwtl
mov
repz
xor
leave
sub
push
daa
adc
jae
stos
push
xabort
push
mov
std
jmp
scas
mov
mov
lods
jp
add
mov
pop
sbb
pushf
inc
sti
jae
pop
cmp
add
mov
xchg
pop
jnp
imul
push
jnp
movsb
dec
jecxz
insl
test
inc
or
add
mov
or
and
push
icebp
shrb
mov
mov
dec
mov
out
pop
mov
xor
mov
pushf
das
cwtl
ficomps
mulb
insl
add
mov
push
jecxz
dec
mov
daa
les
notb
sarl
popf
or
js
pop
cld
hlt
sub
xchg
sub
fists
lock
mov
pop
adc
adc
sbb
sahf
sbb
jb
dec
imul
pop
fstp
pop
xchg
xor
pop
pop
push
stos
movsl
and
ret
or
insl
inc
or
mov
mov
and
xchg
mov
dec
inc
sub
lods
dec
push
callw
pushl
in
lret
mov
pop
nop/reserved
jg
mov
movsl
adc
lods
frstpm(287
jle
jb
pop
dec
inc
movsl
mov
sbb
imul
scas
xor
stos
add
in
jp
inc
aad
bnd
sbb
pop
and
mov
or
in
dec
pop
or
rorl
adc
jmp
es
test
mov
cmp
leave
xchg
mov
jg
xor
mov
scas
adc
lds
mov
add
stos
sub
vpandn
fld
movsb
or
mov
cld
jno
mov
fcoms
adc
adc
and
pop
into
nop
sub
jmp
imul
or
ja
nop
hlt
xchg
in
outsl
mov
xlat
or
bound
mov
pop
jp
mov
push
xchg
ss
hlt
mov
aad
dec
cmp
in
mov
and
ret
lahf
xor
loopne
cmp
xchg
or
jns
enter
inc
repz
mov
sbb
movsl
mov
out
pop
mov
movsb
shr
in
in
xchg
jle
bound
sbb
into
push
inc
and
inc
movsb
sub
gs
mov
dec
stc
xchg
cs
xor
or
dec
pop
mov
nop
loopne
jbe
lds
inc
xor
push
test
mov
xchg
shufps
mov
pop
aaa
sahf
out
xchg
cmp
sarl
mov
addr16
out
cmp
mov
gs
cmp
mov
rcl
jp
add
imul
inc
ffreep
jb
jle
fbstp
add
outsl
cs
mov
fidivrs
addb
idiv
and
cmp
mov
dec
xchg
and
das
cld
adc
lret
jnp
shl
mov
push
pop
cmp
cmpsb
xchg
outsb
loop
cld
and
loopne
xor
loopne
push
push
insl
aam
cmp
xchg
xchg
daa
push
and
mov
fucomip
mov
lds
adc
sar
mov
xor
jnp
scas
test
mov
and
imul
lock
inc
pop
fst
mov
mov
jbe
push
jb
enter
jmp
sbb
xlat
sbb
fwait
jmp
shll
mov
jbe
dec
fimull
popf
cs
push
ret
fiadds
jecxz
mov
adc
dec
sub
sti
add
add
mov
gs
xchg
xchg
mov
mov
jns
jns
jp
push
sbb
cltd
out
imul
push
mov
pop
mov
lcall
cmp
test
in
pop
aad
repz
lret
pop
dec
jo
mov
aad
cmpsb
and
fildl
fwait
mov
ds
ljmp
repnz
push
or
inc
in
jge
cld
das
lahf
pushf
mov
fadd
rclb
test
pop
nop
repnz
popf
sub
imul
cltd
ret
mov
cmp
out
jnp
add
xchg
fwait
sti
mov
out
inc
dec
jmp
inc
lds
fildl
add
xchg
scas
pop
shrl
mov
cli
mov
pop
xor
faddl
adc
dec
addr16
pop
outsb
and
mov
sbb
ja
arpl
mov
dec
imul
outsl
lcall
mov
jb
xlat
mov
stc
popf
mov
jg
and
mov
in
and
xchg
aaa
ficoms
scas
jnp
shl
pop
das
js
dec
jno
pop
sbb
ljmp
xchg
bound
not
notl
xchg
enter
jns
fadds
and
sub
out
dec
push
sbb
imul
mov
inc
sub
xor
jmp
mov
in
mov
or
addb
and
lret
insl
test
cmp
std
rorl
sbb
mov
push
xor
cmp
dec
pop
xor
repnz
xlat
jno
testl
lret
xor
mov
sub
sbb
into
test
lods
aaa
cmpsl
mov
cltd
sub
in
out
xor
das
outsb
mov
daa
jno
mov
stos
ret
inc
xchg
ljmp
mov
cwtl
mov
iret
movsb
stos
mov
into
lcall
dec
pop
mov
xchg
mov
jmp
mov
test
loope
call
xchg
cwtl
and
fcompl
add
pop
pop
in
or
xor
or
cltd
push
mov
push
pop
dec
jge
ds
and
rcrl
dec
xchg
sbbl
pop
in
fs
nop
inc
mov
and
test
lock
in
sbb
pop
imul
pop
push
push
leave
sarb
popa
pop
rclb
xor
test
popf
rclb
out
jmp
in
rclb
fsubrp
cmp
mov
pop
or
inc
shlb
ret
push
repz
mov
add
les
sbb
movl
enter
jecxz
rolb
setno
xor
mov
inc
inc
xor
popa
add
movsl
ljmp
lock
and
push
mov
bnd
mov
adc
inc
lret
mov
gs
jg
sbb
cmp
inc
stos
je
aam
sbb
mov
loopne
lea
lret
mov
sub
pop
fwait
ljmp
xor
inc
loopne
leave
mov
sbb
cltd
jne
arpl
ficomps
dec
adc
jp
inc
test
inc
inc
dec
push
pop
insl
sub
push
mov
jle
and
sti
mov
call
out
and
lahf
push
aaa
mov
cmp
xorb
or
xorb
movsb
insl
cwtl
push
add
push
imul
cld
stos
inc
iret
mov
sbb
inc
mov
push
mov
in
jl
mulb
or
lcall
mov
push
ds
leave
loopne
dec
xor
push
aam
shlb
inc
xor
scas
pop
cmc
sub
dec
lds
in
xor
addr16
sbb
push
scas
and
inc
cli
sbb
adc
cwtl
lret
mov
outsb
decl
out
jg
jp
je
fwait
xchg
int3
mov
push
xor
sub
pop
sbb
enter
mov
and
dec
mov
mov
xchg
stos
cmpl
insb
xchg
movsl
sbb
mov
insl
data16
mov
pushf
or
or
insb
call
inc
ss
mov
inc
gs
and
pop
inc
sbb
fcomip
scas
cmc
sub
dec
ret
and
mov
divb
ffreep
test
inc
xor
loope
iret
sbb
stos
jecxz
sbb
xchg
dec
pop
push
fdecstp
sub
iret
mov
mov
sub
sbb
inc
push
and
out
pop
adc
mov
and
out
inc
jecxz
popa
jmp
push
jmp
add
ljmp
insl
dec
cltd
xchg
shl
jae
sbb
mov
daa
pop
aam
inc
adc
jg
jmp
adc
out
loope
stos
xchg
or
xor
mov
frstor
mov
lret
lea
stc
rcll
fistpll
cmc
jbe
ljmp
scas
or
add
jne
aas
push
sbb
lret
xor
push
jo
scas
jmp
jl
clc
cmp
jl
xor
iret
out
inc
push
daa
cmp
sub
ret
add
inc
fnstcw
xchg
js
push
jb
fnstenv
dec
cmp
jl
outsl
sub
adc
cmp
ret
cmpsb
les
jne
sub
pop
movsb
into
divl
mov
jbe
aam
enter
sbb
jmp
aad
lods
push
mov
fimuls
push
and
lahf
jg
mov
stos
mov
lea
lret
hlt
nop
mov
and
dec
sub
arpl
jnp
cmp
pop
adc
dec
cmpsb
push
mov
push
jnp
mov
sbb
inc
aas
jge
add
xor
cmp
push
add
loopne
and
fiaddl
ds
cmp
and
adc
jmp
aaa
ret
in
xor
inc
lods
mov
daa
pop
loop,pt
hlt
imul
loopne
jl
cli
push
nop
and
daa
sub
iret
mov
testl
cmpsl
test
in
imul
mov
jle
ficompl
cwtl
aad
push
imul
jnp
mov
sbb
outsb
lret
pop
inc
ljmp
pop
js
jle
into
push
inc
mov
pop
test
xor
lods
add
call
mov
inc
cmp
rcrb
outsb
xchg
hlt
cmp
xor
dec
xor
lret
xchg
fisttpll
cmp
cmc
lock
iret
mov
push
jmp
jmp
loope
xchg
xchg
jmp
mov
mov
rclb
jecxz
mov
and
rcll
cmp
fiadds
aaa
jnp
sbb
mov
je
push
iret
incl
jnp
mov
xor
sbb
jp
mov
jns
and
and
pop
sbb
jecxz
loope
mov
loop
lock
jbe
lahf
xor
rclb
sbb
cmp
aas
repnz
outsl
test
cld
or
pop
psubsw
mov
popa
mov
pop
cld
into
dec
adc
dec
xor
sub
mov
mov
je
push
add
cmpsb
pop
or
xor
dec
loope
dec
std
or
adc
pushf
pop
aaa
gs
mov
mov
dec
test
sub
or
adc
cmp
cmp
test
mov
sti
push
cltd
push
in
lahf
test
xrelease
xchg
add
ljmp
sbb
enter
test
test
lds
or
icebp
mov
pop
push
mov
mov
mov
cmpsl
jbe
xor
dec
and
movb
aas
fldcw
cmp
mov
daa
mov
mov
mov
movsl
les
lock
aad
stos
cmc
sbb
stos
mov
push
loop
sbb
add
pop
adc
cmpsl
mov
enter
jg
cmp
lock
pop
sbb
data16
xchg
imul
adc
push
aam
inc
ljmp
sti
call
dec
rcrl
pop
pop
das
lcall
fcoms
xchg
adc
movsb
fbstp
bound
mov
or
mov
mov
icebp
pop
mov
cmp
cmc
bound
sbb
es
fbld
dec
push
jle
hlt
and
cmp
popf
xor
pop
push
xlat
mov
xor
fildll
ret
jge
cmp
idivl
testb
fiadds
in
push
lret
push
scas
push
jb
inc
hlt
jno
jne
aaa
icebp
insl
int3
push
jae
add
inc
popa
scas
add
shld
rol
mov
test
clc
lret
shrl
gs
into
dec
fldcw
ret
mov
jp
popa
mov
xor
je
mov
pop
inc
testb
stc
enter
in
lahf
jae
ds
js
mov
mov
add
or
popf
insb
bound
roll
and
outsb
lods
cwtl
stc
fstps
lahf
and
shlb
enter
dec
test
mov
dec
sbb
cmp
imul
sbb
fwait
mov
fs
dec
mov
inc
fs
and
lds
fdivrp
scas
iret
adc
mov
movsl
pop
mov
inc
push
aam
insl
cwtl
leave
jo
mov
aaa
push
jmp
cmc
inc
pop
jae
ds
fcmove
movsb
adc
testb
pop
sbb
data16
adc
in
mov
lahf
fstpt
inc
xchg
jo
jl
jl
in
enter
fnstenv
daa
shr
push
jo
movsl
hlt
inc
clc
fldcw
xor
xchg
je
aas
mov
movsb
fs
mov
in
test
leave
cmp
lea
mov
outsb
lock
or
shlb
or
mov
push
adc
or
xlat
push
inc
imul
mov
movsl
mov
mov
or
or
xor
xor
lds
popa
mov
out
lds
jns
sbb
cli
popa
push
test
in
test
clc
daa
cld
mov
mov
xor
cmp
icebp
or
lahf
lahf
push
dec
fsub
jbe
xor
xchg
or
sub
inc
dec
arpl
push
dec
aam
pusha
fsubs
push
insb
nop
mov
enter
in
stos
sub
into
and
xorb
popf
bts
pushf
mov
jmp
dec
or
push
jmp
std
mov
loope
sahf
jb
pop
pop
push
dec
movsb
adc
aaa
mov
or
add
cli
out
mov
dec
jns
jl
mov
dec
jge
adc
inc
lods
push
sbb
repz
inc
rcrl
lea
mov
push
adc
mov
mov
mov
lock
push
clc
jnp
jb
or
cmp
shl
pop
pop
incb
out
rolb
out
fbld
mov
pop
dec
test
or
mov
cmp
and
mov
or
pop
adcl
outsl
jge
lds
cmp
push
mov
lods
out
popa
xor
insb
xor
repnz
lock
ror
aad
andb
add
pop
std
loop
enter
sbb
or
xchg
or
jl
xor
and
pop
fcomps
cmc
fistpll
mov
mov
xor
sti
mov
add
in
push
out
adc
dec
icebp
mov
les
xchg
push
adc
lods
adc
dec
sub
push
sub
roll
icebp
cmp
or
or
cmpsb
lahf
cmp
or
inc
arpl
mov
lods
stc
loop
sub
es
xor
out
pop
or
xchg
pop
pop
push
sahf
lea
pop
cs
cmpsl
adc
je
push
mov
push
jns
bnd
in
sbb
xor
jle
add
movsl
lock
mov
rcrl
add
adc
insl
sbb
movsl
ja
pop
or
add
cmp
rcr
ret
flds
insl
pop
lret
repz
xor
or
imul
lret
push
lds
cmc
add
jg
popf
scas
push
rcrb
adc
inc
sbb
addb
sbb
dec
cmp
das
repz
ljmp
push
inc
leave
or
push
xchg
addr16
pop
dec
dec
xchg
push
xor
into
data16
sub
push
iret
dec
jnp
out
add
cmp
aad
pop
ss
cs
mov
xlat
add
mov
cs
push
imul
xor
xchg
xor
xor
or
cmp
pop
xchg
xor
jo
xchg
mov
dec
lods
push
mulb
call
in
jmp
sahf
or
addr16
ljmp
inc
jb
aaa
xor
xlat
and
jp
mov
mulb
xor
push
shlb
aas
adc
fisubl
pop
enter
adc
hlt
in
dec
sbb
in
jmp
and
jb
xchg
sub
sub
dec
lds
lea
aam
cmp
and
jp
jmp
mov
bt
ret
jmp
lret
sub
das
sbb
cmp
lea
mov
adc
mov
test
sbb
mov
cmpsb
dec
pushw
mov
addr16
dec
sti
call
cwtl
xchg
or
push
mov
call
push
dec
dec
sub
adc
sti
fcmovbe
bound
adc
add
test
pop
push
inc
subb
repnz
mov
test
mov
cmc
and
and
icebp
insl
inc
data16
cmpb
fildll
adc
insb
jp
mov
xor
fcomps
mov
xchg
fisubrs
sahf
sub
pop
loopne
test
jecxz
sub
mov
mov
or
int
imul
rorb
dec
add
ds
jp
aad
ja
pop
test
push
movsb
cltd
int
shlb
sahf
or
ja
adc
loop
or
and
mov
dec
and
cmp
rcll
aaa
add
repz
mov
jp
inc
pop
jle
push
jb
mulb
ds
adc
insb
dec
sbb
movsl
mov
xchg
inc
out
aad
mov
dec
jecxz
sbb
cmc
call
mov
push
cmpsb
and
rorb
test
xchg
ja
xchg
test
stos
aad
push
repz
imul
xor
push
leave
adc
mov
insl
adcb
sub
cmp
pop
test
jno
push
mov
scas
and
sub
fisubs
gs
pushf
add
cmp
push
daa
pop
mov
mov
jmp
in
pop
pop
adc
mov
lret
fstl
ss
sub
std
data16
cld
lcall
and
xchg
mov
sub
idivb
cld
mov
leave
sbb
hlt
fbstp
sti
lds
jp
pop
add
and
mov
mov
std
jns
push
in
scas
and
lea
cmp
movsb
addl
test
cmp
dec
aad
xchg
and
into
jb
xchg
cmp
mov
mov
sarl
adc
cmp
lahf
scas
ficomps
cli
xchg
lret
negb
lock
fs
rclb
fs
pop
int3
ljmp
adc
lods
movsl
xchg
jmp
mov
xor
add
sbb
pop
fistpl
pop
and
fstps
test
stos
mov
push
dec
push
mov
pusha
jl
loopne
gs
stc
mov
js
xor
sbb
popa
cmpsb
das
shll
pushf
xchg
sub
adc
mov
repnz
or
test
out
into
cmpsb
adc
test
jmp
sbb
jmp
jns
mov
rcll
push
aas
movsl
pop
fwait
in
inc
rorb
filds
dec
mov
sub
xor
push
push
sbb
loope
mov
test
stos
push
dec
outsb
and
or
sar
rcrb
xchg
shll
in
jmp
pusha
addr16
xchg
inc
xchg
mov
adc
sub
mov
cmpl
cmp
iret
in
lods
mov
or
mov
dec
mov
enter
and
and
dec
out
insb
insb
xor
scas
mov
pop
popf
adc
iret
and
movsb
data16
mov
fcomps
adc
repz
in
in
mov
xor
mov
mov
push
cs
dec
test
pop
adc
imul
loope
mov
sahf
dec
dec
pop
dec
add
into
push
add
adc
cmpsl
insl
fcompl
jo
add
mov
dec
iret
mov
jae
in
jno
cmc
xchg
add
sbb
jg
xchg
xchg
ds
mov
push
js
mov
adc
insl
lds
dec
lret
fdiv
xchg
sbb
orl
arpl
xchg
cli
sub
hlt
out
shlb
mov
ljmp
push
sbb
subb
stos
js
add
inc
and
mov
xchg
ret
mov
cmp
dec
imul
adc
sub
xor
mov
mov
jmp
stos
movlps
jo
div
fwait
icebp
push
and
cmp
lret
pop
insb
sbb
pop
lods
and
jecxz
dec
push
pop
ret
lock
leave
mov
jmp
into
out
mov
xchg
aas
imul
jg
call
push
je
stc
push
and
dec
sub
ret
fcoml
or
addl
js
adc
pop
mov
mov
sbb
gs
xor
add
ljmp
js
mov
addr16
data16
sarl
or
pop
jle
mov
fstl
jle
iret
in
lods
ljmp
out
cli
popa
je
icebp
xchg
adc
jp,pt
sbbb
fsubrs
cmc
mov
outsw
ljmp
mov
mov
push
push
into
test
and
scas
adc
xchg
inc
mov
push
or
sub
xor
or
xchg
mov
clc
and
push
xor
sarb
xor
add
popa
pop
popa
nop
mov
pop
popa
bound
loopne
out
lods
dec
sbb
fs
std
pop
push
jns
fnstenv
lret
mov
jbe
iret
inc
push
pop
leave
inc
sarb
fmuls
bound
test
pusha
scas
pop
popa
xor
out
faddl
xchg
push
and
data16
sahf
xlat
mov
enter
lods
daa
negl
jnp
push
sub
lods
dec
mov
mov
adc
or
jp
outsb
cltd
mov
jns
adc
ja
adc
inc
out
adc
sbb
repnz
inc
mov
nop
pop
jle
std
aad
xor
mov
inc
cld
call
pop
inc
gs
shll
or
cmp
jne
int
push
push
popa
inc
arpl
out
jns
cmc
pop
inc
sub
and
leave
and
sub
jp
jo
push
outsb
lock
in
stos
inc
sar
add
scas
mov
into
imul
jae
mov
cmp
loopne
loopne
adc
psubsb
sub
sub
cmp
in
test
or
xor
fisubrl
out
and
in
mov
fldenv
outsl
add
or
inc
mov
pop
jmp
loopne
cwtl
sub
mov
mov
in
test
jl,pn
mov
cli
mov
movsl
xor
jmp
jecxz
dec
lcall
mov
or
push
lret
mov
dec
scas
loop
fistps
xchg
and
dec
rcl
das
stc
lock
sbb
insl
pop
insl
jecxz
nop
push
ds
mov
loop
mov
std
ficomps
inc
lcall
and
loop
lock
ljmp
insl
insl
push
jp
sub
add
cmc
addl
jbe
and
incb
js
push
dec
inc
js
jb
cmpsb
cmpsb
push
fwait
dec
sarb
lds
lahf
xchg
ljmp
test
jns
jb
mov
lcall
mov
or
arpl
in
cmp
sub
add
inc
daa
repz
push
lods
in
jno
jns
into
add
inc
loopne
out
mov
cmp
dec
mov
ret
mov
cmp
js
mov
out
xchg
sub
cmpsb
pop
incb
fisttps
push
fstl
pop
lret
sbb
int3
dec
xor
or
pushf
in
fdivs
lods
jl
aaa
mov
cmp
jge
sbb
dec
andl
or
adc
add
scas
mov
je
sub
mov
jbe
add
pop
movhps
inc
cli
sar
mov
fs
int3
test
fsubr
popa
or
cmpsb
pushf
xchg
gs
popa
push
dec
add
inc
nop
dec
cmpsl
add
jne
jge
fsubs
fisubrl
cmp
popf
xor
iret
pushf
test
out
adc
or
mov
xchg
xchg
dec
repz
add
mov
mov
pop
test
pusha
sub
out
inc
cmp
call
cmc
sbb
arpl
call
ret
loopne
mov
xor
push
ret
ss
repz
xchg
aaa
mov
hlt
jp
data16
push
mov
mov
insb
popf
dec
push
sub
add
xlat
inc
jle
scas
xor
pop
push
sbb
mov
in
lahf
pop
std
xlat
push
xchg
daa
cmp
or
sbb
movsb
inc
jl
xchg
push
addr16
push
xor
enter
sbb
xor
push
jmp
mov
decb
repz
mov
test
push
pop
in
fdivs
jo
ljmp
jecxz
push
test
decb
mov
push
outsl
testb
inc
and
mov
xor
xor
addr16
push
in
ss
mov
cli
jmp
adc
cmp
xor
mov
mov
pop
repz
mov
mov
jne
sar
sub
ror
ljmp
jb
xchg
mov
test
arpl
insb
stos
add
cld
add
add
lock
sarl
lods
pop
adcb
sub
jmp
jg
pushf
sbb
out
fwait
sub
dec
repz
in
or
cli
cmp
or
mov
cwtl
test
add
loopne
and
out
loop
test
mov
dec
or
fwait
shlb
push
dec
pop
mov
cmp
fwait
loope
aam
aas
ss
push
pusha
jecxz
push
shlb
sbb
dec
or
adc
jb
aas
sub
pop
xor
inc
ljmp
xor
mov
ret
push
ljmp
aam
iret
dec
gs
mov
pop
or
fsts
fsubs
test
pushf
lea
sbb
sarl
adc
mov
retw
and
xchg
std
mov
jne
ret
imulb
and
add
mov
popf
ds
dec
repz
sbb
cmc
jno
out
js
xchg
mov
fsubrp
jge
es
scas
push
ljmp
or
mov
sbb
arpl
lds
jle
in
jge
aas
lods
loope
repnz
mov
xor
out
dec
cmc
sbb
xchg
clc
mov
js
sub
cmp
outsb
inc
xor
out
test
mov
pop
rcrb
aam
out
aad
cmp
dec
outsl
push
sub
mov
sbb
pop
cmp
and
jno
cmp
pushf
jne
cmp
and
repnz
lahf
or
jl
adc
cmp
shr
sub
cld
fdivp
mov
outsb
imul
lcall
or
shll
mov
mov
cmp
insb
sbb
cmp
leave
jb
in
fsub
incb
push
xchg
pop
or
movsb
inc
jbe
sbbb
mov
out
es
mov
xor
sub
dec
cmpsb
sub
add
out
arpl
ret
divb
shll
js
out
cmp
pop
adc
popf
pop
sub
imul
xchg
testb
insl
scas
ror
icebp
sbb
sarl
adc
ljmpw
inc
inc
test
cmp
scas
lea
cmp
shlb
jle
push
xlat
orb
rcrl
enter
stc
fidivs
sub
cmpsb
and
imul
or
or
iret
mov
xlat
or
xor
loopne
popl
cli
xor
fsubrl
and
or
or
not
dec
cs
insl
mov
out
cmpsb
in
cmp
pop
xchg
inc
mov
mov
pop
les
mov
xor
call
cmc
aaa
jbe
ss
inc
addl
cmpl
pusha
mov
lds
inc
adc
mov
jle
push
dec
jnp
adc
scas
mov
dec
jmp
loope
lods
inc
xchg
push
cmp
or
push
in
and
ds
or
lahf
or
ret
sub
sbb
inc
nop
sbb
sub
push
pop
pop
and
add
mov
mov
and
jl
adc
dec
xor
repnz
int
shll
cmp
pop
cmp
adc
push
cltd
jb
push
cmp
enter
xor
cwtl
xchg
jno
popf
add
lret
and
or
int3
sub
cmp
pop
jecxz
inc
inc
xchg
push
pushf
ja
fwait
or
mov
out
push
test
or
add
stc
addl
daa
rol
push
fsts
cld
mov
fcomps
add
or
xchg
inc
adc
test
fs
mov
arpl
jmp
lahf
outsl
iret
or
add
in
sbb
lea
dec
or
and
mov
and
stos
shr
test
call
ret
cmpb
sbb
sti
xchg
mov
jne
dec
in
or
xlat
push
ret
sbb
mov
pop
mov
int3
mov
sub
cs
dec
jmp
arpl
out
notl
repz
jmp
mulb
adc
lcall
and
adc
push
andl
pop
jmp
pop
sbb
call
sub
out
cltd
jns
push
lock
test
xor
adc
mov
cmp
xchg
mov
out
out
xor
mov
ja
mov
mov
jle
out
jle
xlat
sar
jo
dec
sti
pop
int
dec
out
stc
cmp
mov
sub
insl
jge
int3
sbb
mov
sbb
xchg
pop
push
cmp
jle
jmp
cs
jp
inc
mov
imul
mov
or
mov
popf
push
shll
daa
int
mov
insb
int3
pop
mov
mov
ret
popa
and
mov
in
mov
sub
jno
jmp
sub
pop
jecxz
pop
hlt
ja
xor
jno
push
movsb
mov
dec
jno
nop
mov
jo
cmp
add
divl
fwait
scas
pop
pop
imull
push
scas
add
sbb
mov
mov
jle
out
mov
pushf
jo
shl
xlat
xchg
pop
and
xchg
xlat
shr
in
mov
mov
adc
add
adc
add
inc
mov
lcall
mov
jo
test
in
stc
lahf
leave
xchg
pop
pusha
inc
outsb
repz
mov
mov
mov
or
sbb
sbb
xor
mov
pop
xbegin
push
test
xchg
xor
jl
push
mov
cmp
pop
inc
adc
jecxz
pusha
ds
pusha
lcall
adc
xchg
test
inc
pop
cld
aas
insb
es
cmpsl
mov
mov
movsl
lods
add
cmc
and
mov
sahf
push
testl
sarl
fwait
idivl
insb
push
push
hlt
ja
cmp
rcrl
jns
daa
roll
xchg
outsb
movsb
push
scas
sbb
in
jl
es
push
adc
xchg
pusha
jae
xor
and
add
in
cmc
cmpsl
ret
cld
xchg
fcomi
pop
cmp
or
mov
dec
dec
cmpl
fdivl
fsts
fstps
pop
icebp
mov
push
jae
dec
out
cltd
jge
cmp
inc
sbbb
out
lods
sbb
scas
mov
outsl
mov
sub
xchg
add
aad
push
lock
out
lret
mov
movb
out
and
aaa
mov
mov
rol
add
jbe
cmp
in
daa
in
movsb
sub
mov
or
push
repnz
gs
pushf
sub
adc
in
pop
cwtl
int
mov
cwtl
sti
call
jbe
xchg
ljmp
sub
push
shl
ljmp
jno
cmp
push
mov
shrb
loop
pop
xlat
scas
les
popf
in
pop
repz
mov
int
insb
gs
std
lahf
dec
sbb
dec
jp
stos
das
gs
jne
jae
imul
nop
lret
or
sahf
aad
push
dec
push
xchg
and
cmc
ljmp
fnstsw
cwtl
gs
divb
jl
sub
outsb
cmp
cmpb
clc
adc
pop
inc
jl
scas
adc
xor
shrb
sub
jbe
lcall
or
lock
mov
mov
mov
push
add
push
pop
pop
aam
jbe
icebp
es
das
ss
mov
push
jnp
hlt
setb
sub
xchg
outsb
jl
sub
sub
cmp
mov
mov
push
imul
scas
in
out
jg
sbb
push
pop
in
xchg
lods
xchg
jb
adc
jmp
dec
cld
addb
daa
cmpsl
pop
hlt
icebp
dec
xchg
rorb
rol
dec
dec
in
mov
jge
or
adc
sub
inc
adc
mov
call
iret
mov
stos
pushf
js
test
aad
aas
call
jg
inc
xchg
ja
fistpll
lahf
rcrb
bound
mov
out
dec
pop
fmull
xlat
lahf
lds
push
sbb
inc
or
mov
shrl
lcall
pushf
pop
jne
andb
and
mov
pop
lahf
jecxz
loop
lods
inc
dec
fs
ret
pushf
or
sub
lret
add
push
into
mov
imul
pushf
mov
in
jae
dec
push
data16
push
das
xchg
scas
jo
push
dec
aas
insl
in
mov
pusha
negl
or
lret
and
int
shrb
fldl
shlb
jnp
sbb
fisttpll
iret
pop
xor
mov
xor
fmuls
jmp
inc
ret
pop
aas
sub
nop
out
push
add
addr16
add
mov
push
hlt
adc
jmp
movsb
inc
popf
repnz
test
jns
out
nopl
sbb
loop
xor
inc
cld
loope
xchg
xchg
aad
test
or
pop
lea
call
dec
sahf
cmc
scas
push
push
adc
icebp
or
adc
sub
mov
lods
pop
addl
outsl
out
pop
xor
xchg
lock
out
jnp
push
sbb
ja
mov
mov
push
rol
lret
sbb
mov
pop
push
fistpl
sbb
enter
xchg
push
fsubr
xor
jmp
pop
lods
das
jne
mov
push
mov
dec
fstps
mov
and
adc
mov
xchg
decb
stos
je
in
mov
leave
das
icebp
pop
xchg
pushf
scas
mov
add
out
pop
enter
std
stos
addr16
ficoml
jo
xchg
negl
and
or
sahf
push
inc
cld
or
adc
dec
loope
jmp
outsl
mov
aaa
and
xor
and
lcall
jmp
jbe
dec
fcom
xchg
mov
cmp
outsl
rol
test
pop
jg
mov
sbb
fadd
cmp
mov
cmp
xor
adc
jecxz
push
rcrl
inc
fistpl
aad
scas
sbb
mov
mov
test
loope
mov
add
mov
xchg
sbb
int
pop
ret
adcl
pop
sti
shlb
jae
int
cmpl
cmpsl
lea
dec
and
mov
das
out
push
adc
ror
push
dec
xchg
leave
mov
outsb
mov
enter
pop
gs
fimuls
daa
clc
orb
push
pusha
mov
mov
rol
addl
xchg
push
push
cmp
fisttpl
outsb
js
inc
push
mull
push
insl
pop
jg
mov
or
movsb
push
xchg
mov
inc
inc
lods
fdivl
sub
sbb
out
stc
xor
gs
jb
aad
or
out
sbb
pop
push
test
aad
leave
icebp
or
pop
addr16
xor
outsb
fnstsw
add
aam
xchg
fldenv
in
push
lods
fists
jno
out
pop
jae
or
in
push
lcall
pop
test
jmp
inc
rorl
inc
cmpsl
int
add
aad
nop
addl
xor
lds
ds
adc
sub
rcrb
mov
sub
mov
int3
loope
jge
sbb
cltd
mov
pop
mull
or
dec
adc
xorl
push
pop
pop
cmp
xchg
jns
hlt
and
cmp
mov
popa
dec
mov
sub
movsb
movsl
shll
push
xchg
inc
inc
xchg
jo
xchg
hlt
bound
jo
push
lods
pop
inc
loopne
adc
xchg
cmp
outsl
jnp
push
repz
xchg
addr16
daa
pop
hlt
repz
subb
cmp
mov
cli
out
and
sbb
push
stc
jbe
repz
in
pop
aas
fwait
dec
jns
aam
cs
adc
je
ret
jbe
scas
and
add
jp
xchg
inc
jmp
mov
movsl
or
cli
jo
xor
aam
subb
pop
cmp
push
pop
leave
scas
ss
mov
imull
shr
mov
sub
mov
or
inc
inc
ja
pop
mov
jb
sbbb
dec
enter
push
lock
jnp
icebp
xchg
in
and
xor
xor
dec
subb
xchg
sub
cmpsl
xchg
nop
sbb
lods
cwtl
mov
inc
das
outsl
xor
fdivs
push
test
add
fildll
lret
jmp
out
inc
xlat
nop
dec
out
pop
xchg
jle
sti
jmp
outsb
pop
mov
push
cmp
ret
cwtl
or
int3
push
imul
test
sbb
push
mov
or
jo
in
xlat
adc
mov
add
int3
cmpsl
jns
mov
outsb
mov
in
aas
adc
and
pop
mov
adc
dec
fistps
adc
lahf
lret
lret
push
xorl
int
nop
shr
jecxz
jl
outsl
test
enter
lods
jg
dec
and
sub
pop
daa
adc
sbb
add
loopne
mov
mov
das
mov
in
addr16
jae
inc
mov
dec
ret
cmpsb
dec
jge,pt
and
out
int
bound
mov
adc
mov
sti
loope
inc
push
les
dec
orb
lock
insb
aaa
rorl
fwait
and
inc
in
movsb
jl
or
mov
shl
std
cltd
pop
or
cmp
or
mov
in
cmp
mov
inc
mov
or
flds
sbb
mov
les
pop
xchg
mov
pop
add
jmp
mov
hlt
ficoml
push
pop
xorb
inc
test
outsb
xchg
push
test
or
leave
pop
aad
insb
push
stos
in
inc
xor
push
push
pop
mov
xor
mov
jg
pop
pop
mov
cwtl
jno
xchg
push
sbb
jne
hlt
pushf
loopne
into
aas
xchg
sbb
add
sbb
sub
inc
mov
test
or
push
nop
sub
addr16
xchg
lret
push
xchg
or
add
jns
xchg
fnsave
aam
orb
add
pushf
add
jg
stos
inc
cmp
sub
pusha
test
fs
pop
adc
roll
repz
xchg
fcomps
push
leave
inc
or
lret
in
jnp
inc
mov
pop
sub
inc
dec
lahf
test
cmpl
repnz
popa
lea
xor
into
add
jle
xor
out
jne
or
out
add
nop
or
add
push
filds
push
cmp
das
push
js
mov
cs
jg
dec
sub
popf
aaa
and
cs
aam
jnp
cmc
aas
cmpsb
push
lods
sbb
add
popa
xchg
popf
push
mov
jno
adc
and
mov
rcll
into
clc
xchg
cmp
adc
in
sbb
ljmp
aas
jle
lret
outsl
pop
inc
iret
xor
add
mov
push
dec
mov
add
inc
mov
sbb
adc
lcall
push
sub
mov
cld
dec
mov
dec
xchg
sub
pusha
inc
jae
sub
xchg
mov
ss
push
stos
insl
not
test
cmovo
dec
cmc
fistps
or
dec
cmp
inc
jns
inc
mull
aad
test
lret
push
xchg
movsl
stc
push
jbe
and
test
jnp
jp
inc
mov
std
sbb
lcall
mov
push
mov
fisubrl
scas
mov
ss
pop
push
fsub
rol
inc
mov
fwait
adc
shll
mov
pop
lcall
in
adc
adc
out
movsl
sub
mov
nop
pop
sbb
clc
out
orl
cld
loop
decl
enter
mov
push
jbe
pop
in
stos
inc
xchg
and
pop
push
aas
test
xchg
cltd
dec
adc
loop
cmp
sbb
iret
inc
inc
or
jno
out
jmp
out
jno
push
test
loopne
movsb
dec
mov
jae
jg
pop
inc
fcompl
ror
mov
hlt
or
jo
cmp
sbb
mov
dec
mov
pushf
stc
mov
mov
inc
adc
inc
jecxz
dec
mov
push
xchg
mov
mov
cmp
xchg
cmp
adc
shl
mov
add
or
push
and
shlb
in
mov
cld
xchg
jbe
sbb
jno
gs
xchg
add
in
fisubs
in
jns
aas
jp,pt
ljmp
mov
sub
enter
mov
or
push
ss
mov
insb
sbb
les
push
popa
push
push
je
xor
scas
test
and
mov
in
sbb
call
fidivrl
mov
jno
sub
lret
je
add
or
mov
ljmp
cmp
scas
pop
lock
icebp
xchg
xorb
add
dec
out
faddp
mov
ficoms
sbb
push
shr
dec
mov
cwtl
stc
mov
or
mov
les
out
dec
scas
mov
jl
mov
clc
fdivr
cmpsb
int3
cwtl
or
add
repnz
insl
stc
xor
mov
loope
scas
les
sub
cs
jg
out
jo
repz
into
inc
or
lret
jbe
push
sbb
pushf
mov
lcall
jl
fwait
cld
and
mov
dec
loopne
and
or
or
and
scas
sub
fwait
ss
sti
xchg
negb
mov
addl
test
ret
int3
lcall
cmpl
fbld
stc
push
out
sbb
flds
xchg
lock
inc
pop
cltd
xor
lods
jp
jo
lods
sbb
rclb
pop
out
mov
shl
mov
daa
mov
pop
mov
ret
lea
dec
stos
cmp
dec
mov
std
mov
adc
xchg
stos
pop
scas
insl
mov
mov
cmp
int3
jl
cmp
btc
mov
addl
jp
insl
loope
mov
push
jne
jmp
outsl
push
sub
movsl
xlat
add
sbb
scas
inc
sub
mov
imul
lock
and
jbe
cmpsb
xor
push
mov
mov
cmpsb
das
in
and
push
lcall
aam
cmpsl
xor
inc
dec
xchg
insb
jne
into
add
dec
ja
sahf
cmpsb
call
testb
pop
jmp
lods
dec
out
xchg
into
clc
pop
lds
xchg
fmuls
jb
push
mov
xchg
jmp
sub
test
dec
imul
das
xor
pop
xor
jmp
nop
add
in
sub
mov
xchg
mov
sti
sbb
cmp
out
inc
push
jbe
add
int3
mov
enter
and
dec
test
xchg
or
mov
dec
pop
shl
cld
mov
lahf
pushw
push
je
pop
ret
in
push
shl
js
mov
out
imulb
cli
mov
in
xchg
loopne
cmpl
aaa
dec
ja
loopne
inc
or
xcrypt-ofb
cmpsl
sub
int3
stos
pop
test
ds
mov
fdivrp
jne
xchg
push
sbb
cmp
inc
mov
push
icebp
mov
lods
mov
xor
sub
sub
mov
test
sub
jae
cmp
dec
test
inc
lods
lret
adc
inc
jne
mov
xchg
mov
lock
push
jp
mov
pop
dec
adc
xchg
repnz
sub
movsl
repnz
xor
icebp
xchg
jle
adc
shlb
inc
push
mov
testb
cwtl
lds
dec
push
lret
xor
enter
push
add
or
mov
push
scas
aas
dec
sti
mov
dec
mov
movsb
sbb
push
cmp
sbb
add
adc
cmpsb
jp
stos
mov
addl
test
out
ja
lret
dec
hlt
xor
jno
inc
arpl
push
jmp
or
xor
xchg
test
fildll
daa
call
fs
add
adcl
mov
mov
std
and
gs
cs
les
push
and
lods
xorb
or
aad
mov
pop
sub
imul
jns
push
xor
sbb
lcall
test
sub
popa
pop
adc
push
xchg
lret
xor
icebp
xor
adc
fidivs
das
dec
inc
scas
stos
sbbb
test
mov
cmpsl
movsb
and
fmull
das
sti
movsl
cmp
fwait
jecxz
je
cmp
inc
mov
movb
rcll
arpl
fnstenv
dec
and
or
mov
xchg
add
cmpsl
sub
in
popf
mov
jle
shrb
ret
out
inc
in
xchg
pop
mov
fbstp
inc
mov
mov
sbb
mov
adc
add
div
jne,pn
add
inc
cmc
lret
push
insb
mov
rcr
add
jle
nop
sarl
imul
nop
jo
xchg
loopne
mov
pop
aas
outsl
pop
incl
xchg
fsubrs
mov
movsl
mov
adc
and
mov
sub
mov
lock
cs
fcmovb
popa
ret
test
in
repnz
xchg
cli
jo
inc
sarl
mov
inc
pop
sbb
subb
notb
iret
lret
dec
sub
sbb
call
jmp
and
fs
pop
int
push
sbb
jecxz
daa
rcrb
js
inc
jl
out
mov
add
or
inc
pop
lods
pushf
push
popf
adc
enter
shlb
into
sub
loop
push
or
dec
inc
adc
xchg
aaa
inc
pop
pop
inc
dec
data16
cmpsb
gs
sbb
mov
push
push
hlt
xor
dec
jmp
in
jge
dec
mov
faddl
jbe
ficomps
xlat
jmp
add
pop
nop
mov
mov
fs
bound
pop
cs
and
xor
sbb
adc
fiaddl
cwtl
xor
and
jle
rcrb
xchg
adc
insl
inc
ret
mov
repnz
add
pusha
sub
jge
stc
fwait
int3
test
fwait
dec
test
in
das
scas
push
push
lret
addb
out
sbb
fwait
and
stos
and
mov
jle
or
pop
out
jge
out
xchg
mov
fcmovnbe
scas
or
shlb
and
sbb
movsb
jp
sbb
mov
cltd
adc
mov
sub
mov
cwtl
mov
adc
sbb
adc
push
loop,pn
mov
adc
push
mov
xor
pop
inc
sbb
in
gs
iret
pushl
xchg
xor
push
js
sbb
call
test
cmp
movsl
insl
cmpsl
lret
sbb
cs
lods
ret
xchg
test
xchg
lea
in
ss
leave
test
sub
xchg
adc
push
jp
loop
jle
inc
stos
ret
inc
ljmp
mov
sub
js
sub
mov
cmp
imul
sbb
mov
lods
sbb
mov
es
jbe
jb
loopne
xlat
cmp
adc
sarl
and
sub
and
dec
movsl
jnp
adc
lret
and
and
ljmp
xchg
jbe
xchg
adc
pop
enter
mov
enter
add
pushf
push
adc
adc
mov
inc
and
pop
cld
sahf
flds
ret
sti
add
sub
cmpsb
ficoml
mov
icebp
xchg
pop
xlat
fbstp
push
add
mov
lcall
dec
sbb
jno
js
inc
notl
add
dec
iret
out
push
pop
cmc
inc
mov
fs
mov
outsl
xchg
loop
cli
insl
rorb
fidivrs
mov
or
and
lods
add
imul
push
mov
pop
or
call
xor
sub
sarl
in
cmp
mov
lahf
scas
int3
and
out
sub
sub
call
lods
into
pushf
into
inc
jecxz
sbb
inc
mov
cmp
nop
idivl
mov
sbbb
out
inc
lret
dec
les
call
or
or
xchg
push
lods
mov
add
jb
out
fsubrs
test
push
cmpsl
mov
xchg
adc
push
inc
mov
lret
lcall
cmp
popa
loope
xor
aam
adc
cltd
adc
jmp
dec
pop
push
xchg
mov
stos
jle
mov
les
sub
notb
mov
inc
jecxz
lods
mov
xchg
xchg
cs
xchg
xor
js
mov
xor
cmpsl
cmp
pop
fldenv
mov
std
dec
frstor
adc
out
cmp
mov
sbb
jne
fadds
mov
gs
xchg
mov
jge
scas
test
std
push
pop
mov
in
adc
out
lea
adc
add
mov
push
movsb
pop
cmp
call
dec
rclb
pop
enter
mov
sbb
fucomi
rcll
and
xchg
outsb
fs
cmp
xchg
push
idiv
mov
aad
ret
or
pop
aaa
lahf
adc
sbb
jno
sets
dec
arpl
int3
xor
pop
es
imul
mov
add
mov
rdtsc
loop
push
mov
xchg
xor
cmc
jg
lret
and
mov
ror
mov
jge
out
popa
push
sub
in
addr16
mov
xchg
repz
dec
test
je
movsl
dec
sbb
test
sbb
sahf
mov
mov
mov
out
push
add
setle
adc
or
add
cmp
mov
popf
push
mov
stc
jnp
ljmp
addb
lret
ficoms
xor
movsb
test
bound
sarb
stos
out
inc
lcall
bound
fbld
push
dec
push
loop
push
pusha
scas
repz
dec
rcrb
mov
clc
mov
clc
push
pusha
mov
add
sub
xchg
insb
pushf
scas
mov
invd
int3
mov
xchg
mov
dec
ss
push
rcrl
pop
inc
shr
and
sub
mov
sbb
popf
xor
and
cli
lahf
adc
insl
stos
addr16
pop
ss
sti
es
hlt
jnp
das
adcl
addr16
addb
sub
xor
call
jnp
into
in
mov
pop
fs
xlat
cmp
sbb
push
es
jge
out
aaa
pop
or
jp
in
xor
mov
mov
jmp
adc
outsb
pop
mov
scas
ret
mov
mov
and
cltd
mov
jb
imul
out
push
movb
pop
test
std
movsb
pop
je
adcb
mov
lret
lea
dec
pop
mov
rcrl
or
dec
das
clc
fldl
sub
into
cmp
repnz
cmp
imul
dec
xchg
addl
rcrl
jl
lods
mov
pop
ret
arpl
mov
lods
js
or
ret
js
pop
mov
out
mov
imul
daa
xor
loopne
aam
ror
loop
lahf
arpl
mov
mov
arpl
add
jp
into
in
dec
aam
lret
out
jns
push
repnz
cmp
aad
sub
add
lock
sub
adc
loopne
enter
mov
pushf
dec
stc
cs
popa
scas
cmp
inc
repz
mov
icebp
and
mov
mov
cmp
xor
hlt
cmpsb
test
cmc
mov
ds
push
push
xor
popf
ja
xor
in
loopne
int
clc
js
icebp
and
xor
lahf
lea
pop
fwait
cmc
fsts
adc
push
aad
mov
pop
movsb
frstor
in
iret
in
shlb
mov
filds
rclb
fs
fbstp
and
sbb
xchg
sbb
gs
cmp
aam
aas
aad
cmpsb
inc
dec
sub
inc
addb
pop
sti
imul
bound
add
pop
and
lret
cmp
sbb
sub
mov
push
mov
jge
adc
mov
inc
sahf
rcrl
rcll
sbb
imul
pop
cmp
stos
movsl
ljmp
dec
int3
cmp
dec
std
pushf
pop
aas
flds
repz
fnstcw
mov
mov
lods
sahf
jns
mov
inc
sub
xchg
loope
ds
cmovnp
faddl
aam
neg
and
iret
sbb
arpl
std
stos
push
push
adc
push
mov
aas
pop
push
sbb
add
addl
clc
shll
mov
inc
inc
push
cs
jmp
xchg
orl
ret
cltd
add
int3
lahf
cmpsb
mov
xor
shlb
add
and
xor
jb
out
jno
push
mov
js
push
outsb
stos
sub
and
imul
mov
pop
jg
lcall
dec
inc
int3
mov
fildl
jno
push
pop
lahf
add
lods
in
mov
mov
ja
std
pop
dec
or
sub
push
les
add
dec
cmpl
lret
int
loopne
sbb
sub
lds
cmpsb
lcall
lock
lock
mov
sub
mov
add
mov
stos
mov
xor
mov
xchg
jl,pt
inc
je
inc
enter
aad
adc
ja
lods
in
cltd
xor
outsl
ficoml
fdivrl
add
psrld
cmpsb
add
mov
xor
push
out
call
call
pop
mov
add
in
adc
dec
push
mov
and
clc
enter
pop
cld
jge
enter
loopne
outsl
cmp
shlb
cli
jmp
push
sti
pop
jecxz
das
xor
ljmp
cmc
adc
das
adc
lods
jle
push
push
mov
insb
xchg
outsb
rorl
mov
out
sahf
mov
scas
sub
ljmp
lock
sahf
sbb
sbb
pop
ret
fs
daa
fists
mov
insb
sub
xor
adc
insb
cmp
aam
std
aas
mov
negl
test
sub
pop
mov
in
cltd
in
sub
push
mov
pop
inc
nop
repnz
mov
and
adc
and
addr16
xor
sbbl
cmp
loopne
ljmp
test
inc
cmp
imul
pop
insl
shrl
bound
fcmove
ja
insb
add
out
inc
std
pop
adc
xor
inc
add
jo
inc
xchg
data16
cli
sbb
xchg
scas
mov
push
dec
pop
in
push
lahf
or
add
sbb
hlt
and
cmp
out
mov
jcxz
push
and
push
movsl
aas
notb
sbb
and
add
bound
lock
loopne
ljmp
jmp
mov
dec
mov
jbe
stos
and
into
xorb
inc
xor
repnz
xchg
sbb
cmpb
mov
and
repz
jnp
bound
arpl
icebp
iret
pop
push
xchg
stos
iret
fsubp
fdivl
cli
or
cs
push
dec
xor
repnz
mov
lds
push
cmp
dec
insl
aas
lret
xor
fdivl
ljmp
mov
cld
cli
add
pushf
andb
jp
ja
je
jnp
js
rolb
sbb
mov
push
mov
jns
mov
dec
sar
inc
xor
sbb
loop
dec
cli
rcrl
or
nop
mov
or
mov
jge
popa
mov
xchg
push
cld
sub
imul
pop
aam
cmp
or
fistl
inc
cmp
test
push
sub
and
outsl
jl
cmpsb
insl
stos
ss
pop
mov
fdiv
pop
sbbl
rcr
ret
ret
test
xchg
pop
sbb
test
cmp
daa
inc
iret
fldenv
or
test
and
loope
inc
inc
mov
adc
adc
mov
mov
ret
add
in
xor
mov
xor
lds
pop
mov
mov
out
adc
pop
andb
xor
sbb
or
pop
bound
cmp
pop
pop
imul
lea
dec
xchg
lahf
shlb
mov
xchg
pop
adc
lds
jecxz
xchg
push
imul
push
lret
dec
inc
fldenv
jmp
pop
into
hlt
xchg
loop
pop
dec
nop
add
push
add
sbb
cltd
or
xor
ret
dec
outsl
push
scas
rcrb
fcomi
out
mov
cli
xchg
fidivl
or
jbe
and
repnz
fucomi
mov
xor
in
pop
mov
mov
cmp
xchg
cwtl
xchg
fwait
sar
pop
fcompl
jns
lea
cmpsb
sub
sub
cmp
cld
enter
les
scas
int3
push
mov
subl
pushf
testb
mov
jae
sub
or
orb
adc
sub
jnp
cmp
lcall
jne
loope
xchg
dec
ret
sub
loop
jno
fnstenv
push
mov
jp
mov
mov
add
pop
mov
cwtl
int3
outsl
pop
sbb
pop
pop
add
jae
test
aaa
andb
insl
movsb
das
jg
jo
sbb
adc
inc
jp
mov
sub
mov
jmp
fisubs
shl
add
ret
aad
sub
hlt
popf
pop
inc
add
jp
sarb
movsb
push
lahf
push
push
fnop
mov
pusha
or
fwait
ds
fdivs
mov
xor
pop
in
gs
mov
or
daa
mov
pop
jno
flds
repnz
stc
sbb
dec
sub
jmp
fwait
mov
push
shrl
inc
subb
es
dec
jle
sti
inc
add
mov
pop
pop
cmp
push
add
out
inc
cs
xor
scas
lcall
cmp
sub
cld
aad
movsb
scas
scas
or
pop
fs
and
mov
adc
inc
xlat
mov
mov
cmp
mov
imul
sub
stos
jns
cmp
dec
loopne
in
das
repnz
jmp
add
pop
or
andb
std
out
inc
jb
sub
insb
push
jp
dec
xor
je
lods
fcomp
ss
aam
cli
pop
iret
fwait
pusha
cmp
jecxz
mov
lods
enter
stos
dec
xchg
test
inc
fucomp
in
or
sub
rcr
repz
add
rcll
sarb
mov
bound
or
sub
mov
add
fdivl
gs
je
adc
inc
mov
jns
jbe
adc
cld
ss
mov
sbb
loope
orl
mov
xor
xchg
push
inc
cmp
mov
sbb
cmp
arpl
or
mov
add
call
shr
in
out
mov
add
dec
pop
ror
push
push
jno
sub
dec
ret
xchg
fadds
fiaddl
aam
add
cmp
jmp
xor
sarb
pop
mov
push
xor
mov
xor
sbb
xchg
sub
mov
daa
and
das
aad
rcrb
adc
sub
mov
gs
lret
push
adc
dec
rolb
xchg
fadds
ds
mov
notb
mov
pop
rorl
push
dec
int3
outsl
daa
xor
daa
addl
into
xchg
fucomip
sbb
xchg
push
stos
dec
mov
inc
jbe
icebp
bound
mov
cmp
push
push
loopne
dec
out
loop
xlat
fmul
push
cmpsl
cmp
xor
xchg
lods
lock
jb
lea
mov
daa
dec
push
pop
data16
fsubrp
sti
jle
pop
cmp
push
fs
inc
ret
mov
push
xorb
stc
jl
adc
fisubrl
adc
aad
int
sbb
dec
iret
mov
roll
xor
testb
test
jno
push
adc
push
je
iret
mov
in
loope
jle
cli
pusha
es
pop
cld
arpl
push
mov
cs
sbb
jbe
inc
popa
popa
mov
test
push
pop
mov
loope
jne
out
push
sub
es
ret
scas
or
cli
pop
stc
mov
inc
adc
xchg
and
add
imul
adc
fsubl
test
mov
iret
es
mov
in
iret
pop
repz
fwait
adc
sub
sub
out
dec
dec
add
xchg
scas
lfs
lcall
push
dec
loop
fnsave
and
das
shl
xor
test
sahf
fidivrl
xchg
xlat
cmpsl
les
mov
mov
pop
lret
sbbb
or
fwait
xchg
insb
sbb
stos
out
decl
into
fs
inc
daa
cmpsb
shr
aaa
add
shl
sbb
sbb
mov
cmp
add
xor
cli
xchg
repnz
dec
mov
movsb
lahf
in
or
sub
pop
gs
lods
xor
inc
pop
add
and
or
xor
dec
pop
out
clc
pop
es
pushf
fidivrl
push
jbe
ret
lds
scas
out
stc
outsl
test
adc
mov
rclb
inc
dec
sti
add
xor
aad
outsl
in
pop
cmc
xor
cwtl
jge
xor
mov
ret
fwait
insb
imul
sbb
rcl
push
movsl
jg
insb
loop
push
ret
xchg
push
rcrb
cmp
jo
cli
sbb
add
popf
in
jmp
dec
and
arpl
add
pop
inc
int
out
jae
adc
scas
inc
inc
push
inc
rcl
cmpsl
cmp
cmpsl
mov
sbbl
cmpb
rolb
imul
call
ret
dec
or
xchg
adc
out
test
add
loop
push
dec
adc
stos
lret
jno
push
dec
fbld
push
int
rcll
aad
lods
and
mov
fsts
mov
test
pusha
sub
push
cltd
pop
and
xlat
test
mov
repz
js
mov
mov
xchg
in
popa
iret
inc
ret
aaa
or
xlat
clc
lret
push
push
bound
mov
addb
loopne
mov
mov
leave
imul
call
xor
leave
daa
mov
sbb
adc
dec
xor
adc
int
pop
jb
and
sub
jno
pop
xor
and
outsb
jmp
or
pop
cmpsl
mov
jmp
test
mov
push
pop
jbe
mov
ljmp
inc
dec
cmpsl
mov
push
add
cmp
ja
push
popa
clts
push
dec
cld
xor
sahf
pop
pop
loopne
loope
adc
lahf
mov
loope
movsl
inc
jne
cltd
lods
stos
cmp
std
push
cmp
pop
and
ret
add
mov
mov
insb
mov
sti
popf
push
shl
add
mov
lods
sbbb
pop
inc
cwtl
fwait
sub
hlt
mov
cli
cmp
sti
cmc
out
loope
shll
js
mov
repnz
pop
nop
aaa
dec
adc
aaa
dec
aas
cmpsl
mov
and
pusha
mov
decb
popl
not
repz
dec
cmp
mov
subl
pop
xchg
sbb
jae
test
adc
sbb
jg
cmp
xlat
je
ss
jb
outsl
pusha
cli
inc
lahf
gs
add
pop
negb
mov
mov
inc
cmc
mov
mov
jge
sbb
jmp
mov
jno
pop
cmpsb
div
sahf
lret
add
dec
ds
mov
movsl
mov
adc
adc
add
push
ror
pop
mov
cwtl
fisttps
mov
adc
jmp
test
cmp
in
add
cmpsl
cmc
cmp
gs
jle
sbb
mov
or
sub
dec
outsb
pop
push
iret
std
cld
lret
stc
adcb
lcall
out
das
jmp
mov
xor
push
fsubr
loop
lea
mov
cltd
jecxz
pop
popf
mov
pop
nop
sub
fdivrs
ljmp
push
shll
or
add
add
iret
mov
mov
mov
negl
clc
push
or
aam
mov
lock
pop
pop
pop
push
and
pop
adc
or
adc
inc
rcrl
jl
cmp
cmp
adc
out
xchg
cmp
mov
orl
test
scas
jb
sbb
cmp
mov
movsl
inc
cli
mov
int3
mov
jbe
adc
add
add
xor
stc
pop
mov
js
lock
sub
shrb
lcall
lods
data16
inc
js
push
jge
popa
cld
stos
mov
mov
test
test
cmp
or
push
ss
roll
sub
ss
std
lcall
mov
out
xor
cmpsl
aas
mov
popa
ficomps
cld
scas
pop
mov
and
iret
push
mov
dec
xor
rorl
push
iret
cmp
test
push
outsl
cwtl
mov
xchg
or
sbb
fisubs
addr16
fistps
cmc
movsl
and
mov
sbb
mov
lret
aaa
mov
add
in
mov
mov
es
push
stos
sahf
mov
sbb
cmp
xchg
test
jae
insl
fbld
stos
or
je
dec
enter
push
rolb
ljmp
adc
pop
xchg
mov
pop
push
ret
dec
jns
jecxz
lock
cmp
sub
je
mov
push
jns
lods
popf
cmp
add
int3
andb
or
stos
dec
mov
cmp
test
dec
pop
cmp
in
adc
popf
jbe
adc
jp
pop
jecxz
pop
shll
cli
dec
call
adc
into
xchg
out
add
dec
into
cmp
jge
testb
inc
xlat
mov
pop
adc
pop
popa
sub
out
mov
cmpsl
add
loop
lods
incb
cmpb
outsb
test
out
inc
fidivrl
sub
fbld
std
adc
push
pop
cmp
cmpsl
lea
aam
cmc
jp
daa
add
xlat
xchg
pop
jp
outsb
jae
mov
cmp
outsl
out
bound
imul
push
inc
roll
inc
cmp
sub
ret
push
sahf
orl
xchg
sub
or
in
lret
out
into
push
xchg
mov
pusha
hlt
in
lcall
push
adc
cmpb
dec
push
dec
into
inc
into
ja
push
mov
cmp
cmpb
or
adc
add
mov
sahf
mov
jecxz,pn
cmc
push
xchg
scas
mov
iret
inc
jbe
lods
enter
push
hlt
or
xchg
cmp
xor
xor
ljmp
in
and
sub
cmp
mov
loopne
sbbl
aad
ljmp
cwtl
pop
mov
clc
mov
pop
loope
loopne
xorb
dec
mov
inc
arpl
sbb
inc
and
sbbb
mov
enter
ret
pop
jno
in
push
jp
jmp
pop
sbb
popf
popa
jb
orb
ret
push
scas
xchg
ret
test
xlat
inc
pop
stos
leave
mov
pmaxsw
or
aas
in
clc
sti
add
sti
movsl
insb
adc
cmp
stos
add
fistps
iret
mov
xchg
pop
add
lahf
imul
aas
xor
imul
mov
adc
mov
cmp
scas
stos
inc
cld
jmp
call
sbb
sub
out
icebp
or
bts
out
cmp
or
and
inc
mov
pushf
adcl
roll
inc
cmp
imul
insl
jle
push
push
fwait
sbb
psubsw
fiaddl
and
mov
adcb
inc
or
mov
in
push
int3
adc
pop
roll
nop
cs
inc
fldt
rolb
lret
in
push
lea
pop
test
mov
push
push
sub
outsb
mov
xchg
jb
pop
ret
dec
inc
jno
cmp
repnz
or
or
andl
out
mov
add
aam
in
fnsave
sbb
cmpb
lret
mov
mov
dec
and
push
sti
scas
lret
out
ljmp
dec
or
or
pop
adcl
jo
push
push
rorl
lea
adc
cmp
cld
jbe
in
loopne
ret
mov
push
and
add
sub
xchg
or
lret
mov
incl
fdivr
sub
shl
or
sub
adc
pop
rcr
cmpsb
mov
jecxz
xor
test
setnp
xchg
mov
inc
cmp
jnp
in
nop
sub
stos
test
mov
push
xchg
xchg
xchg
add
mov
jb
xchg
xchg
or
dec
xchg
dec
shll
js
add
xor
sbb
shlb
mov
xor
aam
xor
aam
lahf
push
out
jl
pop
ja
sbb
push
mov
pushf
dec
mov
xor
mov
adc
and
push
jno
stc
jae
repz
xchg
xchg
sub
aas
xor
push
cmp
mov
xorl
adc
outsl
stc
and
fsubr
xor
mov
test
mov
out
dec
fildl
scas
ds
rolb
mov
cwtl
dec
out
jno
hlt
ret
dec
clc
fld
sub
inc
cli
sti
mov
out
data16
mov
cmp
sar
js
and
xor
rcrb
fbstp
incb
call
cmpb
push
int3
loop
outsb
dec
loop,pn
outsl
mov
lret
push
imull
into
out
inc
dec
pop
sub
xor
rorl
popa
sub
mov
mov
push
jmp
imul
inc
mulb
not
arpl
sbb
jnp
jg
xchg
push
test
cmp
jo
enter
es
xor
testl
je
cmp
into
push
in
add
sarl
movsb
push
jne
sbb
mov
mov
mov
leave
aam
xlat
pop
out
ja
jmp
int3
push
ret
xor
jl
sbb
pop
repz
sti
inc
inc
mov
dec
cmpsl
sub
cli
lock
inc
adc
int
xor
fsubl
mov
xchg
lret
jne
mov
jo
push
hlt
xor
icebp
lret
mov
push
pop
adc
jno
out
lods
ljmp
sbb
fwait
add
test
mov
mov
and
push
inc
xchg
imul
inc
adc
xlat
push
xchg
insl
push
cmp
es
shll
int3
push
int
sti
std
icebp
testl
and
pop
lret
pop
jg
adc
nop
or
sbb
mov
dec
mov
mov
inc
hlt
daa
mov
fcomip
jne
mov
imul
adc
jnp
fnstcw
das
in
out
pop
psllw
jge
repnz
jns
push
and
mov
in
dec
imul
inc
sti
inc
jge
pop
adc
popf
inc
pop
ja
cmp
jb
or
add
popf
cmp
loope
pop
ja
inc
cmp
pop
xchg
xlat
repz
iret
data16
mov
test
icebp
pusha
jne
dec
sbb
inc
mov
das
push
push
outsb
xor
inc
js
outsb
inc
lret
xchg
js
sbb
aad
cmp
sub
xchg
cli
imul
mov
push
pop
xor
sbb
cli
movl
xchg
insb
stc
xchg
adc
mov
dec
adc
xchg
jmp
mov
cmp
data16
mov
lock
movsl
sub
adc
inc
lods
fs
and
push
mov
xor
sbb
mov
pop
lds
lods
adc
call
xchg
mov
mov
loope
movsl
pop
mov
sub
insl
cmp
out
pop
sub
inc
lret
pop
insb
mov
out
call
imul
shlb
or
outsl
adcb
pop
fisttpl
aaa
cwtl
mov
cmp
lea
pop
xchg
cmp
in
pushf
adc
test
jns
dec
add
and
adc
jb
idivb
pop
pop
mov
dec
push
adc
shll
mov
fldl
aaa
cmp
sub
fcoms
loop
push
pusha
fidivl
dec
stos
xor
nop
insl
mov
sbb
pop
mov
clc
fidivrs
out
pop
and
out
and
insl
ds
xor
inc
test
incl
xchg
push
mov
jne
inc
cmc
aam
jne
mov
aad
push
dec
mov
dec
or
daa
sbb
inc
jmp
push
lock
xorl
pop
inc
xor
or
xchg
xor
dec
jp
mov
mov
pop
addr16
stc
sarb
lret
push
push
mov
je
mov
mov
leave
ret
dec
cmpsb
jns
icebp
sub
test
or
add
fiadds
sbb
xchg
add
mov
mov
push
inc
pop
pop
dec
dec
mov
stos
mov
xor
mov
and
daa
lods
mov
inc
pop
lods
shrb
cwtl
into
hlt
shrb
inc
pop
testl
mov
out
mov
mov
aam
mov
adc
nop
adc
xor
and
cwtl
rorl
gs
out
add
jp
add
or
es
es
push
rcr
or
addl
inc
lods
fwait
mov
dec
add
dec
push
xor
jle
adcb
pop
pusha
bound
pop
faddl
lret
pop
cmp
mov
xchg
sbb
lcall
fdivrs
repz
inc
in
push
adc
movswl
lods
test
inc
pop
jmp
dec
fcoms
gs
repnz
mov
cmp
cmp
sub
fsubr
dec
sub
xchg
iret
loope
push
jne
fimuls
shlb
push
push
mov
mov
shl
cmp
jbe
popf
push
movsb
and
sub
add
xor
aaa
stos
lock
ror
xchg
data16
dec
push
xor
aam
loop
in
stos
push
pop
outsl
sahf
sbb
inc
adc
and
loope
imul
xchg
mov
adc
aaa
mov
fldl
fcompl
shll
adc
add
popf
mov
sbb
movsb
mov
pop
enter
ret
push
mov
push
das
in
loopne
dec
ja
les
shl
ja
adc
add
mov
out
out
xor
scas
pop
sbb
xor
sub
cwtl
pop
add
mov
jns
fld
jmp
lods
pop
sbb
xchg
scas
pop
cwtl
iret
pop
pop
mov
cli
mov
add
imul
add
in
jp
sbb
dec
fdivrl
mov
loope
aam
outsl
xor
push
faddl
push
sbb
pop
sub
mov
ja
hlt
mov
inc
out
mov
jo
mov
lret
inc
dec
cmc
cs
push
push
lds
inc
xor
cmp
jle
sbb
hlt
inc
loope
popa
mov
sub
es
push
shl
cmpsl
and
movsl
xchg
sub
push
adc
and
les
int3
leave
lea
testb
xchg
lds
lods
jecxz
popa
push
push
outsb
pop
aad
sahf
bound
fld
add
cmp
dec
add
arpl
add
repnz
lods
out
jbe
cwtl
aaa
loop
lods
or
test
lcall
scas
push
arpl
inc
iret
stos
arpl
xchg
roll
popf
jo
sbb
fidivs
test
cmp
add
inc
into
push
xchg
xlat
mov
mov
jmp
or
jp
xor
xchg
addr16
mov
addr16
push
mov
jbe
orb
cld
shlb
and
and
jmp
pop
ret
testl
in
pop
adcb
ja
mov
nop
into
cmpb
mov
mov
mov
clc
hlt
inc
sub
jmp
loop
xor
hlt
cmp
jbe
xor
fildll
das
or
icebp
lods
and
roll
imul
enter
cmp
ret
mov
popa
ret
mov
cmp
loope
jae
push
add
out
push
test
cs
std
push
pop
dec
inc
dec
xchg
test
lahf
jp
shlb
dec
pusha
push
mov
scas
sahf
out
cmp
lock
mov
dec
icebp
cmpsb
cs
jmp
push
adc
mov
xor
push
xchg
repz
mov
out
das
dec
lea
add
mov
imul
imul
fucomp
jg
push
push
mov
xor
push
jns
int
pop
std
mov
add
fists
mov
inc
addr16
xchg
jle
or
or
out
push
pop
insb
shlb
test
mov
jecxz
xchg
dec
add
test
cmc
aad
test
insb
test
xchg
dec
mov
dec
xchg
movq
lret
popf
rcll
out
iret
sbb
loopne
adc
popf
shl
insl
sbb
cltd
ja
pop
push
xor
sbb
fcomps
mov
jo
sbb
lds
mov
mov
pushf
lods
mov
and
pop
in
xchg
jbe
js
mov
divl
int
xor
or
add
enter
into
lcall
test
cmpsb
xlat
jecxz
jmp
cmpsb
push
insb
lods
inc
xor
test
sub
pop
xor
mov
sbb
and
out
add
hlt
out
xor
or
pop
insb
lods
sub
shlb
pushf
cmpb
iret
jge
sub
scas
mov
lods
dec
fstpl
xor
lds
aas
mov
aad
out
repz
lds
orl
sahf
lds
fs
jne
xchg
inc
pop
sahf
sub
sbb
xlat
jmp
insl
sbb
push
loop
sub
pop
in
jle
xchg
and
push
cmp
out
aam
pop
lds
int
dec
mov
shlb
shlb
xor
jo
mov
loopne
xlat
lcall
inc
xchg
test
icebp
pop
push
filds
scas
xor
xchg
jl
arpl
inc
sub
call
push
testl
cltd
and
push
fs
sub
pop
loopne
icebp
dec
fmuls
fs
lds
sbb
jbe
rol
mov
or
sub
and
pop
jo
add
xor
inc
inc
or
nop
loope
outsb
push
ljmp
pop
push
adc
rcl
imul
ss
jmp
adc
lcall
iret
ret
shl
xor
pop
push
das
jmp
mov
scas
sbb
jecxz
mov
push
sub
orl
mov
sbb
lret
mov
mov
jns
inc
cmp
loopne
lds
or
sahf
movsl
cmc
dec
mov
fucom
cmp
cmp
loop
test
lock
xchg
nop
popf
mov
pop
test
test
mov
jbe
sbb
inc
mov
add
shrb
sahf
inc
loop
pop
and
add
neg
inc
dec
adc
push
push
cmp
jmp
xor
xor
sub
push
push
mov
aaa
push
sub
jmp
aad
dec
cmp
inc
rorb
mov
ret
pop
jnp
test
cmp
ficompl
int3
sahf
pop
popf
outsb
movsb
iret
stc
push
mov
mov
sbb
ds
inc
mov
in
add
bound
cli
dec
fists
push
push
fs
lea
push
mov
pop
inc
cltd
xor
pop
mov
rclb
mov
mov
jmp
dec
aaa
jge
lret
stos
cs
lods
jecxz
sub
sbb
push
test
lds
adc
xor
aam
lods
push
sub
call
cltd
out
mov
mov
cmpsl
hlt
pop
adc
sti
inc
mov
dec
jbe
aad
aas
push
pop
adc
jae
and
out
hlt
pusha
add
add
ljmp
inc
and
sbb
nop
loope
pushf
xor
lods
imul
sub
dec
test
mov
cli
rorb
dec
mov
mov
inc
jne
mov
push
adc
aas
push
dec
scas
pop
adc
notb
push
mov
mov
or
inc
aas
mov
cmp
es
and
add
fdivrl
ret
mov
dec
in
adc
xchg
dec
push
repnz
sbb
pop
in
cli
dec
int3
ret
jb
cmp
push
and
dec
or
xor
div
stos
jb
lret
adc
fwait
stos
les
xor
mov
in
lahf
pop
cmpb
inc
je
mov
sbb
not
movl
cltd
lea
fiaddl
xor
dec
out
ret
jb
cmpsl
adc
jns
sub
dec
insb
stos
mov
push
daa
popa
lret
and
arpl
push
and
lret
pusha
mov
test
inc
mov
push
rol
xchg
pusha
arpl
or
int3
mov
scas
sbb
fsub
cmc
xor
imul
imul
mov
aam
in
mov
inc
aas
sub
pop
pop
xor
add
pop
aas
pusha
jne
loope
divb
dec
outsb
sti
mov
lds
cld
mov
push
and
mov
adc
cmpsl
or
addl
movsl
adc
and
xchg
dec
lcall
cmpsb
call
stc
addr16
mov
cli
leave
xor
mov
and
int
push
sub
test
cmp
and
push
repz
int
fisttpll
data16
add
movsl
push
into
and
insb
dec
pop
jo
and
and
inc
outsb
int3
and
negl
push
add
lods
sub
jge
call
mov
push
or
in
pop
dec
mov
push
addr16
xchg
loopne
sub
popa
lret
push
cmp
ds
xchg
adc
and
inc
jns
mov
outsb
cld
decl
and
add
test
or
cmpsb
jns
rolb
push
mov
sub
insl
dec
pusha
jbe
push
jb
in
mov
mull
imul
add
dec
icebp
fsubl
cld
rclb
lret
orb
dec
insl
mov
inc
xor
push
and
jo
push
int3
lret
rorl
jbe
mov
push
clc
sti
lret
add
in
stos
negb
icebp
out
mov
cmp
loopne
fsubrs
pop
in
jge
stos
push
cld
stos
fldl2t
int
or
and
add
lahf
jne
pop
hlt
cmp
adc
jnp
in
std
cmpb
jne
aad
imul
mov
jge
insb
pop
fsubp
xor
lea
repz
jns
adc
dec
sti
push
repnz
emms
dec
push
cmc
jmp
jmp
sbb
mov
push
cld
jae
ror
fnsave
xchg
jo
xor
jnp
int3
xlat
sti
push
jae
lcall
push
inc
pop
inc
ja
das
add
nop
sub
cmp
fwait
cmc
push
gs
mov
sub
xchg
lods
inc
jg
and
pop
inc
jle
sarb
ljmp
movsb
pusha
sub
arpl
fstpl
out
add
cmpsl
xchg
inc
cs
sahf
outsl
cld
mov
pop
dec
std
or
pop
inc
mov
sub
xor
cmpsl
rorb
mov
fs
jmp
mov
rorb
inc
stos
shll
ss
test
inc
cmpsl
adc
sub
aas
inc
jg
sub
jmp
jmp
popf
or
xchg
inc
mov
push
rcrl
mov
imul
fs
sub
je
insb
adc
stos
mov
inc
lret
fidivl
jmp
add
scas
int
and
fadds
or
scas
imul
add
cmc
cld
dec
push
dec
mov
int3
xor
cmp
pop
sbb
jmp
pop
add
xchg
xor
mov
xor
jecxz
fdivl
fwait
insl
mov
mov
xchg
cwtl
shlb
aad
shlb
inc
fstpt
in
vmread
xor
scas
xchg
push
clc
and
outsb
adc
mov
mov
hlt
mov
pop
lret
pop
pop
dec
jp
jecxz
xor
fsubrl
xchg
insb
ds
aas
pop
xchg
jne
jmp
idivb
bound
outsl
jns
leave
lods
lea
int3
hlt
add
ret
into
int3
mov
pop
fisubrs
pop
pop
inc
jp
fdivrp
imul
test
push
push
scas
inc
inc
test
aad
cwtl
cmc
adc
fs
jo
sbbl
movsb
ss
jne
pop
mov
cli
enter
pop
mov
or
stc
mov
mov
mov
xor
shl
sbb
sub
leave
mov
xor
out
clc
mov
into
pop
lock
add
pop
xlat
jae
sbb
mov
mov
push
cmpsl
pop
insb
and
xchg
jbe
dec
inc
mov
je
rolb
push
mov
sub
ficomps
pop
add
ret
js
dec
sbb
dec
outsb
inc
mov
stos
push
in
inc
or
jae
nop
jle
pop
dec
or
test
inc
push
ret
lcall
sub
mov
and
and
sbb
ss
repnz
add
and
je
jp
xor
jecxz
xchg
jmp
or
mov
dec
fisttpl
scas
cltd
imull
paddusb
rolb
inc
mov
adc
push
ja
add
insl
and
shlb
cmp
out
sub
and
jns
adc
sti
mov
add
pop
popa
loop
ficoml
jbe
mov
or
dec
leave
movsl
sub
out
cmp
jge
scas
les
ror
add
call
adcl
pop
inc
roll
inc
stos
adc
and
aam
and
lds
movsb
gs
mov
sbb
pop
ljmp
fnstcw
cmp
mov
flds
ret
pop
popf
sub
and
mov
in
mov
xor
adc
mov
movsl
popa
pop
mov
faddp
sub
inc
jbe
stos
mov
xchg
mov
je
cli
cmpsb
aam
rcrb
and
imul
xor
sarl
movsl
mov
rolb
push
stos
mov
mov
xor
mov
cwtl
xchg
aad
push
loope
shr
pop
pusha
in
or
sbb
mov
sti
imull
test
aaa
sti
push
sub
xor
cltd
lock
or
cmp
jg
cmp
pop
arpl
jbe
add
enter
mov
push
or
sub
push
sbb
inc
adc
mov
jl
xchg
repz
hlt
and
out
xchg
enter
add
xor
jae
aas
sbb
mov
icebp
xchg
adc
shrl
and
mov
jg
push
add
leave
fwait
cmc
fdivrl
repnz
dec
jp
mov
sub
loop
pop
sbb
lock
or
push
scas
xor
cmp
test
clc
mov
movsb
pusha
cmp
enter
popaw
add
sbb
fnstcw
test
inc
xlat
movsb
das
aas
push
cld
aaa
push
pusha
lods
xorb
xchg
ljmp
insb
and
push
iret
jecxz
mov
ja
cld
gs
push
lods
pop
lret
dec
out
or
push
mov
mov
inc
or
in
push
sbb
add
inc
push
std
lock
ret
loop
lcall
cli
in
sbb
shl
mov
je
testl
enter
mov
sbb
sub
push
sbb
and
adc
insl
ja
stc
fidivrs
adc
xchg
ljmp
mov
xchg
push
adc
clc
cld
jg
and
xlat
ds
lods
or
cltd
popf
xor
sub
jmp
pop
lods
in
and
add
aad
xor
jmp
addr16
loopne
loope
in
mov
mov
and
jl
pop
add
mov
xchg
mov
hlt
pop
cli
pusha
sub
xchg
dec
clc
fldt
and
xchg
scas
jno
cli
pop
pop
pop
aaa
bound
fmulp
dec
cmp
fildll
ds
mov
enter
sub
iret
xor
xorl
add
push
loop
jne
popf
add
mov
cs
fsubr
hlt
mov
jnp
fmul
adc
jbe
add
cmpsb
cmpsb
jne
rol
mov
push
out
or
sub
jo
es
loopne
xor
push
and
mov
adc
add
nop
jg
stc
inc
ljmp
jnp
out
roll
xor
sbb
xor
orb
in
xor
jecxz
pop
jae
sar
pop
popa
enter
adcb
mov
jae
pop
mov
aaa
inc
push
pop
fwait
dec
je
sahf
int
jno
add
fmuls
js
aam
ret
push
imul
les
mov
negl
mov
pop
pop
test
xchg
pop
add
inc
adc
sti
add
push
daa
out
push
mov
mov
addr16
lds
or
add
xor
xchg
loop
push
daa
movb
jbe
xor
mov
lret
push
rorb
fucomip
jg
test
arpl
rolb
lcall
jno
push
or
mov
adc
movsl
mov
mov
cmp
fidivrs
push
mov
or
add
inc
jb
shr
sub
mov
lods
int3
push
mov
add
jl
sbb
or
mov
and
push
lret
lret
mov
cmp
jecxz
sarl
xchg
addr16
jbe
sub
jp
sahf
mov
dec
inc
mov
js
addr16
fwait
jbe
fwait
loopne
xchg
lods
push
mov
fcompl
lret
test
pop
lahf
xor
mov
es
sbb
pushf
lcall
sub
cld
lret
lock
cmpsb
mov
mov
pop
jno
pop
xchg
gs
rep
dec
jnp
iret
lds
xor
leave
arpl
push
push
jo
inc
pop
std
outsl
loop
sbb
and
cltd
sbb
cwtl
scas
fsubr
mov
nop
or
insb
ds
xchg
into
mov
loop
xchg
mov
cmp
lods
icebp
dec
cli
out
fld
jg
xor
inc
test
mov
daa
sub
int
push
inc
fldcw
into
mov
xor
popf
jno
and
test
dec
pop
test
push
xchg
adc
jge
push
jmp
adc
sbb
iret
mov
and
call
add
inc
cmpsb
aad
rsm
jecxz
std
xor
rcll
pop
in
popa
cmp
dec
xlat
push
adc
push
mov
lcall
mov
pop
or
mov
pop
mov
add
add
and
fs
sub
jns
mov
aaa
push
sbb
das
scas
loope
int3
loop
xlat
mov
jno,pn
outsl
aas
les
pop
add
out
dec
stc
cmpsb
mov
add
pop
mov
ljmp
popa
data16
out
cmp
clc
addr16
xor
push
adc
roll
dec
jnp
aas
out
fbstp
lods
cmpsl
jo
mov
sbb
mov
xor
fmuls
xor
popa
xchg
loop
dec
outsl
or
fadds
adc
mov
xchg
popf
cmp
sub
sbb
mov
inc
fstp
repnz
dec
das
jo
add
enter
sbb
in
cmp
lret
pop
loope
negl
sbbl
and
leave
rol
std
in
inc
or
push
mov
rolb
adc
jo
mov
stc
test
lea
in
or
adc
stc
add
pop
mov
or
ja
sbb
fwait
pusha
icebp
les
fldcw
lahf
pop
push
stos
pop
cmp
sub
popa
and
cld
repz
insl
gs
add
jecxz
mov
jge
mov
xchg
jnp
inc
sbb
push
fbstp
sbb
sahf
roll
jg
dec
jge
inc
push
push
js
mov
ret
mov
lret
and
sub
lods
mov
leave
push
lret
jns
fdiv
jo
mov
outsl
xchg
sub
or
jns
pop
dec
loope
cmpb
add
icebp
sarb
call
iret
jge
push
adc
stc
in
jp
mov
jge
enter
mov
dec
into
xchg
sub
test
aas
dec
jae
pop
test
push
sbb
mov
scas
push
sub
mov
lret
xor
add
or
ljmp
jge
inc
dec
into
scas
mov
mov
idiv
movsb
test
xchg
in
dec
sarb
push
orl
jnp,pt
jmp
imul
mov
aad
or
or
shrb
xchg
insb
insb
jnp
dec
pop
shlb
loope
lret
cs
jbe
mov
dec
test
mov
xchg
subl
xor
sub
test
sbb
mov
dec
push
jmp
in
outsb
call
bnd
adc
mov
mov
xor
or
push
dec
and
xchg
cltd
dec
jnp
mov
les
mov
mov
hlt
das
mov
outsl
shlb
je
out
push
push
pop
les
push
xchg
setb
aam
cwtl
idivb
ss
push
aad
cmpsl
sbb
clc
jmp
pop
scas
jb
mov
sbb
push
pop
push
int3
push
stos
xor
shrb
clc
mov
ljmp
out
inc
mov
inc
push
imul
or
mov
jnp
icebp
jae
sub
out
stos
sub
popa
iret
pop
mov
lds
mov
cmp
shlb
mov
sbb
mov
cmp
sub
add
jns
idivb
sti
jge
pushf
lret
in
fcoml
mov
mov
push
in
cmc
movsl
cs
cmp
push
dec
inc
pop
inc
inc
js
ret
ss
push
mov
sbb
out
outsl
mov
fisubrl
lods
icebp
cmp
jg
pop
sti
out
ljmp
aad
adc
push
jmp
mov
cli
pusha
sbb
inc
dec
popa
push
shl
dec
xchg
sub
into
mull
and
mov
xchg
lea
xchg
dec
push
xlat
mov
sahf
cwtl
andb
faddl
sbb
sahf
in
fildl
aas
inc
insl
mov
inc
mov
sub
xchg
push
lock
std
cwtl
test
inc
scas
push
je
cmp
dec
sbb
dec
push
cmp
mov
mov
push
loop
divw
into
popa
push
dec
mov
xorl
xchg
fimuls
jge,pt
pop
loope
inc
sub
mov
dec
insb
inc
mov
mov
ljmp
xor
repnz
adc
scas
adc
lahf
shrb
inc
pop
xor
mov
adc
divl
test
hlt
push
mov
jmp
leave
jg
xchg
fisubl
imul
dec
jbe
outsb
into
in
xchg
push
ss
pop
out
call
std
mov
cld
push
lock
pop
bnd
add
pop
push
in
test
ja
stos
fstpt
and
jno
pop
insl
ret
mov
in
pop
lahf
lret
and
jl
out
sub
push
mov
dec
clc
mov
mov
and
inc
cmp
outsb
lock
lret
inc
outsl
mov
aaa
lret
lds
adcl
pusha
cmp
test
into
xchg
pop
dec
pop
test
mov
stos
ret
mov
adc
lret
adc
push
lock
adc
fwait
xor
js
jp
push
addr16
es
jbe
ljmp
sbb
mov
push
ss
push
mov
jns
test
xchg
movsl
push
vmlaunch
into
pop
in
loop
cmpsb
fmuls
sti
jnp
jecxz
xchg
pop
sub
push
ror
mov
in
adc
xor
inc
lock
subb
ja
add
sarb
xor
mov
sub
lret
mov
mov
or
mov
dec
in
sarb
dec
adc
push
dec
fstpt
sbb
in
add
les
or
sub
icebp
lahf
inc
stc
inc
jae
sbb
notl
adc
mov
mov
rcrl
pop
mov
sub
xlat
icebp
fs
xor
js
scas
daa
shrb
xchg
jle
sbb
scas
xchg
out
fs
or
inc
mov
imul
sahf
sbb
mov
sbb
cwtl
dec
and
sbb
mov
pop
sbb
mov
sub
aaa
out
add
sbb
stc
add
in
ss
fxch
lcall
dec
je
and
cmpsb
mov
pop
scas
fldl
call
pusha
aas
ljmp
scas
cs
dec
arpl
loop
stos
nop
xchg
rolb
xlat
cmp
roll
es
out
and
repnz
fisubl
cld
sbb
add
push
out
das
pop
in
pusha
imul
and
push
add
imul
in
fldl
xchg
pop
dec
test
jge
mov
push
hlt
lret
movsb
lret
rcrb
cmp
add
and
mov
addr16
mov
mov
jne
cmp
in
cmpsb
dec
rcrl
cld
mov
push
rcrl
insb
sbb
dec
jb
ds
aaa
test
fidivs
jl
aas
out
outsb
movsl
pop
je
jp
and
push
xchg
fdivrs
adc
in
fwait
xrelease
lods
mov
aam
clc
dec
test
sub
imul
jns
adc
xchg
pop
cs
pop
cld
js
add
mov
push
insb
movsb
int3
sbb
add
mov
leave
cmp
dec
inc
mov
jae
and
or
push
movsl
rcrb
inc
in
jecxz
push
test
pop
sbb
sbb
mov
rclb
aas
cs
gs
push
jp
fs
mov
lahf
pushf
fwait
and
dec
add
test
pop
push
es
lret
subl
mov
jns
dec
and
mov
test
xor
xchg
inc
lods
xor
inc
push
gs
shll
jge
addr16
cwtl
pop
mov
imul
mov
push
mov
adc
and
pop
ret
pop
xchg
fbld
decl
and
mov
popa
pmaddwd
sahf
popa
jg
out
inc
cmp
mov
jne
xchg
fs
xchg
std
test
mov
jmp
mov
fstps
push
or
xchg
push
dec
hlt
dec
jge,pn
mov
shlb
xchg
movsw
test
out
cmpsb
cmp
jne
in
ss
lret
fidivrl
fcomi
in
push
test
outsb
adc
ret
adc
mov
push
dec
outsb
pop
scas
cmp
ljmp
cmp
or
scas
cmpsb
push
xchg
push
std
mov
mov
ljmp
scas
outsl
pop
mov
adc
add
cmpb
inc
inc
adc
xchg
ss
jmp
mulb
shrb
mov
addr16
lods
outsl
ret
push
sbb
pop
push
add
dec
jo
stos
ss
in
mov
decl
fcoml
ret
sahf
pop
ficomps
movsl
mov
shlb
negl
aas
sub
test
mov
pop
shr
cmp
aam
inc
xchg
xor
push
pop
xchg
movb
popa
pop
sbb
and
sub
mov
int3
jbe
clc
bound
dec
or
loop
push
dec
sbb
fsubl
mov
testl
mov
and
or
aad
cld
outsl
in
dec
lahf
jge
dec
aaa
xchg
fnstenv
lock
aad
insl
outsb
gs
imul
adc
pop
xchg
jle
lahf
adc
add
inc
fwait
or
xor
mov
xor
sbb
scas
movsl
pop
lret
inc
mov
pop
lcall
xchg
jne
rcll
lret
hlt
repz
enter
add
push
xor
ret
or
ss
mov
inc
loopne
cmp
lods
dec
cmp
enter
push
jp
or
push
inc
xchg
add
scas
lret
js
xor
dec
loope
xorl
movsb
pop
scas
push
pusha
data16
ss
lods
shlb
lods
test
add
testl
cld
sub
ljmp
pop
in
mov
loopne
push
cmp
stos
sbb
enter
inc
sub
jb
dec
mov
cmp
lahf
lret
jmp
leave
jg
inc
cmp
mov
clc
daa
popf
mov
mov
rorl
pop
push
fdivrl
cmp
jae
aas
and
adc
les
repnz
cmpsb
cli
gs
cltd
adc
dec
sub
xchg
or
test
lods
jge
inc
and
movsl
in
xor
int3
loopne
sub
dec
add
test
arpl
iret
sub
sbb
aad
sbbl
cmp
mov
xlat
dec
and
push
xchg
push
mov
arpl
sub
mov
mov
fnclex
enter
movsl
nop
sahf
sbb
pop
data16
cltd
push
jmp
and
pop
lds
mov
imul
push
movsl
xchg
in
xor
push
gs
outsl
xchg
mov
inc
cmpsl
adc
mov
insl
sub
lds
int
mov
inc
shlb
mov
adc
dec
xor
jns
xchg
inc
repnz
into
popf
pusha
iret
enter
stos
ja
popf
insb
cmpsb
fcmovbe
and
aas
mov
inc
repnz
pop
je
push
mov
mov
data16
lahf
mov
adc
insl
lret
cmp
lcall
cs
movsl
gs
jbe
xchg
in
sar
bound
sub
into
fs
pop
orb
imul
test
sbb
fnstcw
ja
nop
inc
inc
mov
mov
push
mov
test
enter
jge
cltd
roll
push
jge
cmp
xlat
dec
sub
out
and
xor
jp
sub
shlb
sub
testb
mov
dec
push
mov
pusha
xchg
xchg
and
dec
pop
pop
int3
adc
xor
jno
xchg
sub
mov
or
cmp
addl
lret
add
fistpll
mov
and
ret
lahf
push
cs
in
fmul
nop
out
mov
repz
int
lea
test
lret
fcoml
call
cs
cs
push
fistl
pop
mov
sarb
jl
mulb
andb
fwait
ja
ds
adc
outsl
aam
mov
mov
jae
lret
push
sbb
popa
cld
call
adc
adc
mov
dec
and
xlat
aas
jge
pushf
mov
push
xchg
les
mov
mov
pop
cmp
mov
into
cli
cmp
std
rolb
outsb
inc
movsb
jns
mov
lahf
test
dec
mov
add
or
push
stos
imul
adc
popa
mov
data16
stos
fisttps
fimull
aas
test
fwait
and
cld
lcall
adc
outsb
and
xchg
sbb
dec
dec
dec
outsl
pop
addr16
outsb
adc
inc
