add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
dec
cmp
decl
decl
test
mov
inc
inc
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
or
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
inc
sbb
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
cwtl
sub
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
ficoms
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
ret
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
stc
inc
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
adc
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
fnsave
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
and
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
adc
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
and
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
fcoml
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
inc
sbb
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
sub
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
cmp
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
scas
cs
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
je
inc
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
sbb
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
xchg
sbb
cmp
and
lea
call
mov
cmp
jne
mov
mov
push
call
mov
mov
push
jle
lret
clc
jecxz
add
clc
int3
add
fcmovne
mov
mov
stos
popf
push
jbe
pushf
add
add
add
add
lcall
add
add
out
add
add
lret
add
add
fldt
add
in
add
push
push
push
push
push
push
call
fwait
mov
test
mov
add
aad
xchg
add
in
fwait
iret
mov
add
imul
rol
test
mov
add
add
add
cld
les
add
fcomi
cmpsb
add
ljmp
pusha
adc
popl
push
push
lea
push
lea
push
lea
push
call
movsb
rolb
sahf
fiadds
add
jp
adcl
ret
call
call
jmp
cmpsl
frstor
push
add
mov
aam
in
movsl
out
in
add
into
add
stos
mov
mov
lea
pop
push
push
push
push
push
lea
push
call
xchg
push
out
loopne
mov
add
testl
add
test
jmp
in
jl
nop
addb
add
add
aam
scas
fidivs
add
add
nop
mov
pop
lea
shr
push
loopne
pop
lods
cltd
cli
lods
fs
push
mov
pop
add
test
jle
aad
orb
adc
push
push
lea
push
lea
push
push
call
add
add
add
loope
fadds
add
add
jae
mov
int3
mov
in
add
add
xchg
push
add
add
add
add
add
add
add
call
fmull
call
push
push
lea
push
push
push
push
call
add
add
push
mov
add
mov
aam
lds
xchg
add
jmp
divb
mov
je
xchg
movsl
fidivl
add
mov
ljmp
rol
mov
incb
bound
aam
bound
pop
call
push
push
lea
push
lea
push
push
call
out
lret
add
movsl
add
jmp
hlt
xchg
lods
ljmp
jbe
sahf
jne
call
add
cld
add
add
je
jmp
add
jmp
mov
add
xchg
jl
push
add
add
roll
mov
mov
add
add
cwtl
xchg
rcll
add
repnz
enter
add
popa
add
mov
adc
push
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
fstl
mov
add
add
mov
add
add
add
arpl
add
cli
add
into
push
mov
add
xchg
add
cltd
jae
add
add
addl
xchg
xchg
add
nop
std
ja
add
add
jge
add
ficoml
add
add
xchg
aam
add
rolb
mov
mov
add
fmull
lret
add
add
call
add
push
add
mov
scas
pop
mov
add
add
add
arpl
add
add
outsl
add
xchg
out
cmc
add
mov
add
out
mov
or
push
push
push
call
push
js
add
add
mov
add
stos
add
out
mov
fdivl
sahf
xchg
jns
add
add
popa
fidivl
add
addb
push
arpl
mov
add
mov
sti
xabort
xchg
popa
pop
add
add
add
pop
xlat
add
cmc
add
out
fwait
out
out
loopne
imul
in
stc
add
add
mov
lea
pop
mov
mov
push
lea
push
lea
push
push
push
push
push
push
call
lds
add
mov
pop
add
cmpsl
xchg
add
aad
add
add
fldl
add
fst
flds
add
cli
cmc
add
xchg
add
add
push
mov
add
push
add
mov
scas
int
add
in
out
lock
fadd
pop
add
jnp
add
shll
and
pop
in
push
push
push
push
push
push
push
lea
push
call
jcxz
add
add
jne
nop
in
lret
shrb
test
add
add
add
data16
fdivrs
fmuls
xchg
jb
push
mov
mov
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
mov
add
fcomip
add
mov
add
sti
shl
movb
mov
push
push
add
mov
rcr
mov
jmp
icebp
mov
mov
add
add
push
flds
push
add
jmp
movsb
hlt
add
xchg
add
pop
add
push
push
call
push
jae
add
add
cmp
xchg
outsl
mov
xchg
popa
pop
roll
add
lods
jl
enter
popl
add
add
shlb
add
mov
add
add
xlat
ljmp
add
in
lods
add
ret
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
leave
mov
add
call
mov
cmc
add
jl
cmpsb
add
add
push
imul
xchg
mov
add
mov
loope
mov
push
add
add
add
scas
popl
jne
add
push
xchg
fiaddl
add
add
gs
arpl
xor
push
push
lea
push
push
push
push
push
call
movsb
les
add
add
jnp
popl
add
jb
xchg
add
andb
push
push
add
add
mov
nop
add
hlt
out
push
jns
aam
mov
add
faddp
int
subl
add
cmpl
add
mov
sti
push
or
inc
add
shr
ror
lea
sub
ror
add
pop
inc
pop
push
push
push
lea
push
call
add
mov
xchg
push
mov
add
mov
add
cmpsl
out
fstpt
js
add
add
cmc
les
stos
jle
add
in
mov
add
call
rolb
sub
cltd
popf
add
add
mov
lea
pop
pushl
push
push
push
push
push
push
call
add
std
mov
cmc
push
add
loope
lods
loope
xchg
jge
popa
add
aad
add
add
sahf
add
add
add
add
fucomp
add
mov
in
pop
xchg
add
push
fimull
lock
pop
lods
add
out
mov
loope
lds
loope
popl
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
sti
popa
add
add
add
add
add
cltd
rcrb
add
add
jo
andb
add
add
loop
out
js
filds
jp
jecxz
add
data16
add
jnp
add
xchg
jno
pop
les
add
popf
out
fiaddl
cmpsb
test
add
ljmp
stos
add
add
popa
bnd
fmuls
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
xchg
add
mov
std
clc
add
call
add
push
mov
lahf
out
add
jne
into
jne
test
push
jge
add
ret
fs
mov
add
ret
in
sti
jno
push
jo
add
les
add
mov
lea
pop
movl
push
push
lea
push
push
push
push
call
lret
add
add
add
mov
fimull
data16
add
in
mov
jbe
cld
jno
add
bnd
mov
add
loopne
movsb
fsubr
fwait
add
enter
pop
mov
add
stos
data16
insb
mov
lcall
repnz
push
add
fdivrl
add
stc
add
cwtl
add
arpl
add
pop
pop
out
mov
lea
pop
lea
push
push
push
lea
push
push
call
and
sti
in
pushf
stos
add
cmpsb
add
add
stos
jne
xchg
fsubl
add
fidivs
test
outsl
pushw
jb
jp
jle
add
pop
ror
loop
add
fiadds
xchg
mov
negb
fcompl
mov
lea
pop
push
pushl
push
push
push
lea
push
push
lea
push
push
push
call
mov
mov
add
xchg
add
mov
add
add
pop
add
push
loope
add
add
add
add
add
test
mov
mov
mov
data16
add
pop
pushl
push
push
push
call
outsl
mov
add
add
jl
add
add
mov
mov
pop
xchg
add
mov
pushf
or
jge
mov
push
add
jns
add
scas
mov
pop
add
push
popa
rol
enter
add
mov
loop
add
jbe
fisttps
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
shr
add
jmp
rolb
add
add
jo
hlt
ljmp
cli
leave
iret
out
mov
add
add
jbe
add
icebp
mov
fsubrl
push
xchg
filds
cmpl
cwtl
ja
test
pop
pushl
pushl
push
push
push
push
push
push
call
orl
cmpsb
js
imul
add
add
add
popa
add
xlat
movsl
aad
enter
jo
sti
add
mov
add
add
test
movsl
test
jbe
leave
addl
mov
add
add
enter
add
test
enter
aad
add
pop
call
push
push
push
xor
add
add
sub
ror
pop
shr
pop
push
push
lea
push
lea
push
push
call
gs
jnp
jecxz
add
mov
add
push
cmpsb
add
add
add
add
add
add
add
je
lahf
mov
push
jns
mov
pop
out
xchg
data16
pushl
push
push
push
push
call
fadd
add
popa
fadds
aad
std
out
add
out
insb
push
pop
add
add
add
cmpsb
add
leave
stos
js
mov
add
loop
add
popa
add
loop
imul
mov
movsb
iret
ljmp
add
fadds
loop
jnp
ja
int3
jle
in
add
xchg
loopne
add
add
xchg
int3
lea
add
mov
add
pop
call
push
push
push
not
sub
push
sub
add
add
sub
shr
pop
xor
pop
push
push
push
lea
push
call
jecxz
leave
jecxz
add
stc
stos
add
pop
lret
add
add
push
push
mov
les
add
add
add
jne
loope
add
mov
in
out
add
cld
mov
add
add
xchg
jne
cli
jmp
pop
pop
pop
add
xchg
add
subb
in
aad
mov
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
call
mov
fistpl
add
add
add
arpl
add
add
add
add
mov
add
add
mov
add
add
pusha
mov
pop
pop
add
jnp
mov
add
out
mov
lea
pop
push
call
push
push
push
push
call
pusha
add
jp
ret
in
add
mov
add
xchg
leave
mov
add
rcll
mov
add
stc
add
jae
add
ficoms
fisubrl
fiadds
add
add
mov
iret
sti
pusha
lods
add
je
add
shrl
add
add
fmull
clc
push
push
lea
push
lea
push
lea
push
push
push
push
call
xorb
fildl
nop
xchg
out
movsb
add
ficompl
movsl
pop
add
cmc
popa
pop
in
sbb
xchg
les
imul
mov
in
add
add
mov
mov
jecxz
xlat
jecxz
jl
add
outsl
jnp
lock
lea
pop
push
push
push
push
push
lea
push
call
add
add
pop
lcall
add
cld
add
cli
mov
add
add
add
jae
test
mov
je
add
fsubr
cmpsl
pusha
add
adcl
out
push
cmc
mov
jle
mull
jmp
ret
jle
add
adc
push
mov
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
jp
hlt
cmpsl
cmpl
test
jmp
pop
push
clc
push
add
addl
push
push
mulb
add
mov
aad
mov
test
scas
add
add
jae
cmpsb
loopne
add
mov
lea
pop
add
push
lea
push
lea
push
call
addr16
push
outsl
jl
add
loopne
jp
std
pop
add
add
test
xchg
add
sbbb
add
faddl
add
add
cmpsb
lds
mov
mov
lea
pop
add
add
push
lea
push
push
call
in
add
scas
mov
scas
add
lcall
gs
add
jmp
fucomi
mov
pop
lods
int3
xchg
addl
imul
add
std
push
loop
out
add
js
push
aad
cmc
int3
rolb
push
add
pop
mov
scas
mov
lea
pop
mov
push
push
push
push
push
call
into
add
mov
jle
push
rcrb
xchg
add
outsl
pop
ja
fiadds
pop
add
stos
test
test
aad
fs
fwait
imul
add
scas
push
add
mov
xchg
xchg
add
add
add
add
lds
in
mov
add
jo
add
into
jbe
push
ljmp
mov
lea
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
arpl
xchg
lret
add
out
andb
fcmovnbe
xchg
mov
add
loopne
add
add
add
in
add
enter
roll
xchg
shlb
in
cld
cltd
mov
lahf
rol
add
jb
jo
movsl
add
jo
cld
lea
pop
add
push
push
push
push
push
push
call
or
add
out
gs
incb
add
mov
push
enter
add
xchg
pop
pop
nop
jne
stos
shrl
add
add
fstpt
filds
lcall
add
add
add
add
add
add
popf
rcl
xchg
add
mov
add
mov
add
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
repnz
mov
add
mov
jp
add
mov
jmp
mov
add
sti
mov
testl
add
lret
push
add
out
pushf
add
add
add
xchg
add
mov
push
mov
jne
roll
add
and
add
cmpsl
sti
mov
cltd
mov
pop
fsincos
jp
add
add
hlt
lea
pop
push
push
push
push
call
mov
jns
mov
xor
clc
sti
add
add
add
fcompl
mov
leave
add
popl
push
push
test
mov
lret
movsl
cmc
add
xchg
push
popa
mov
xchg
ljmp
in
in
arpl
add
cli
add
add
fiaddl
add
add
pop
mov
xor
push
lea
push
push
call
cmpsl
push
into
add
shll
add
mov
xchg
pop
mov
add
int
push
imul
xchg
pop
jle
ljmp
add
ret
aam
add
add
nop
in
add
leave
add
stc
sarb
push
xchg
jnp
pop
movsl
outsl
into
lea
push
insb
push
fstl
or
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
in
add
add
xchg
shll
test
pop
mov
lds
add
mov
add
pop
mov
add
mov
add
popf
xchg
fs
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
int3
leave
iret
in
ljmp
mov
add
jp
xchg
sti
add
add
add
add
add
add
lods
mov
cltd
icebp
jp
popf
xchg
lret
jno
in
add
push
add
add
pop
jnp
jo
jno
add
sarb
arpl
xor
push
lea
push
lea
push
call
out
in
cmpsl
lret
jmp
faddl
push
lahf
cld
imul
add
add
mov
add
xlat
scas
stos
fadds
add
add
add
pushf
add
jno
add
add
add
repnz
stc
push
imul
call
add
in
add
add
loop
jmp
out
mov
clc
cld
mov
lea
pop
add
push
push
push
push
push
push
call
add
xchg
sti
shrl
add
jge
add
ljmp
mov
mov
jno
jb
lcall
fmul
sar
in
add
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
insb
push
add
add
add
out
push
add
add
mov
xchg
pop
lock
jp
add
push
in
add
leave
in
pop
loope
movl
fisubs
rcrl
imul
push
add
loopne
lahf
add
push
xchg
push
add
pop
add
shlb
jge
les
inc
or
push
push
push
push
push
push
push
push
push
push
push
call
ret
fiadds
push
add
add
add
add
rolb
les
loop
je
sahf
jns
loopne
mov
add
add
test
xchg
add
movsb
add
pop
sub
pop
push
push
push
push
call
add
add
rolb
in
lea
add
popa
push
add
popl
bound
in
neg
int
cld
stos
add
loopne
add
cltd
loop
roll
push
int
add
lock
addl
add
fwait
mov
pop
rep
push
push
lea
push
push
push
call
fidivl
arpl
add
add
xchg
fdiv
ljmp
add
stc
test
jecxz
bound
les
push
add
arpl
add
loop
lret
popa
sti
stos
add
add
in
jo
mov
mov
les
loop
add
cld
lea
pop
pop
push
lea
push
push
push
push
call
icebp
fcomps
pop
mov
add
fistpll
add
std
shl
loopne
add
les
jecxz
push
add
add
push
jo
mov
sbbl
lret
add
loop
add
enter
loopne
js
jns
add
ror
cmpsl
into
mov
bound
mov
push
lea
push
push
call
cwtl
add
add
ret
mov
mov
aad
lods
iret
fisubs
cli
add
add
add
cmpsb
je
ja
pop
add
lcall
add
mov
lea
pop
add
push
lea
push
push
push
lea
push
call
addl
add
in
mov
mov
push
imul
add
nop
in
incb
lahf
insb
mov
mov
add
movb
adcl
gs
add
insb
add
mov
lea
pop
add
add
push
push
push
push
lea
push
call
add
add
add
add
fldl2e
pusha
add
add
jne
add
add
roll
add
filds
jp
call
fstpt
add
pop
idiv
pop
cmpl
loop
imul
faddl
call
add
les
inc
and
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
rolb
add
mov
add
ja
add
lret
add
js
add
add
test
test
jo
add
popl
mov
call
test
out
mov
add
loopne
add
add
outsl
sbb
add
pusha
mov
lea
pop
mov
xor
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
jmp
aam
xchg
add
hlt
add
add
push
add
xchg
test
bound
push
cwtl
mov
ljmp
add
lret
lea
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
lea
pop
mov
cli
sahf
into
stc
add
into
pop
jmp
add
add
add
add
xchg
pushf
mov
imul
hlt
add
mov
pop
xor
push
lea
push
push
call
rclb
add
fbld
popf
popf
int
xchg
pop
xchg
cli
notb
stc
jbe
add
add
les
mov
repnz
enter
mov
sarl
fsts
test
add
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
aad
lcall
lods
add
je
mov
mov
xlat
add
lcall
jnp
mov
add
lahf
add
loop
aam
fbld
add
push
jl
jge
in
rcll
enter
lahf
clc
add
imul
filds
mov
add
add
pop
add
push
lea
push
push
push
call
add
add
add
cli
test
lock
arpl
add
add
lods
push
pusha
leave
mov
add
cmc
add
mov
bound
icebp
insb
mov
add
mov
fsubl
aam
bound
pop
add
mov
push
push
sub
lea
push
and
add
ror
sub
dec
dec
pop
ror
xor
lea
pop
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
add
add
add
add
popl
leave
lods
push
int3
insb
add
push
add
cwtl
add
mov
add
add
add
les
jne
push
push
lea
push
push
push
push
push
push
call
lea
mov
push
add
mov
push
gs
mov
mov
movb
mov
add
add
add
mov
add
in
xchg
xchg
xorb
add
je
add
add
add
add
push
jbe
jle
scas
add
mov
add
push
add
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
call
add
add
xlat
add
mov
mov
movsl
push
nop
addl
fwait
hlt
mov
pop
add
mov
outsl
js
add
add
in
nop
idiv
test
add
mov
nop
add
pusha
mov
fmull
add
mov
shl
add
shr
sub
push
push
pop
add
dec
lea
sub
xor
pop
dec
add
pop
push
lea
push
push
push
push
call
lret
pop
add
lcall
jno
lock
lret
push
add
add
outsl
mov
loopne
add
je
iret
add
rorl
leave
add
fnstsw
arpl
sub
mov
lea
pop
push
push
lea
push
lea
push
call
add
add
pushf
in
push
add
cmpsb
sti
rolb
flds
cmc
add
jnp
je
sahf
add
in
out
add
mov
fstpt
xchg
in
movb
add
ror
add
mul
xchg
add
nop
xchg
add
clc
sti
out
add
mov
add
rcll
add
xchg
leave
lahf
add
add
fmull
add
rclb
push
push
lea
push
push
call
lds
in
mov
mov
push
add
mov
xchg
rcll
out
mov
jmp
std
add
out
std
add
add
movsb
add
jne
mov
popa
add
add
add
add
lock
xchg
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
xchg
add
ret
add
add
mov
add
add
add
add
add
in
out
stos
into
jb
sub
loopne
out
lock
add
add
jmp
add
ror
shl
mov
addb
push
add
mov
test
add
add
pushf
data16
cld
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
in
mov
mov
adc
leave
add
scas
add
ljmp
cli
add
add
lods
test
xchg
stos
add
add
stos
push
pop
cld
mov
add
mov
popa
sub
mov
push
push
call
loopne
jns
testb
add
add
in
add
rorb
test
push
ret
add
add
loopne
mov
stc
add
popa
fnstcw
add
mov
mov
xchg
push
xchg
mov
out
add
add
add
add
pop
add
push
pop
add
push
sub
pop
add
push
shl
inc
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
sti
add
add
roll
test
scas
sahf
cwtl
add
add
add
add
add
add
cmpsb
mov
add
add
pusha
jns
mov
add
add
call
add
pop
xor
push
push
push
push
call
lea
loop
add
add
mov
jns
popa
lods
mov
push
xchg
mov
mov
jb
shrb
int3
add
add
in
jp
add
add
mov
add
popf
jb
push
inc
leave
add
add
add
mov
fidivrs
fmull
les
add
push
lea
push
lea
push
push
call
add
mov
stc
xchg
pop
add
stos
mov
jb
mov
sarl
aam
add
add
scas
xchg
out
js
nop
mov
in
shr
out
mov
push
pop
add
call
hlt
pop
les
add
add
stos
pop
insb
mov
lea
pop
add
push
lea
pop
push
mov
xor
push
push
lea
push
call
js
jb
add
add
add
fucom
repnz
mov
scas
add
xchg
mov
stos
les
add
adc
aad
add
cli
mov
fxch
add
gs
xchg
add
add
test
mov
imul
add
pop
add
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
jecxz
push
add
xchg
fiaddl
cmpsb
xchg
add
add
mov
add
add
xchg
add
filds
fdivp
push
add
lds
iret
add
imul
add
in
stos
stos
add
insb
add
pop
add
mov
lea
pop
mov
xor
push
push
push
push
push
call
add
out
arpl
jmp
movsb
jp
stos
loopne
push
enter
orb
add
bound
xchg
mov
add
add
loop
lret
icebp
push
test
jb
cwtl
add
incb
add
popf
roll
mov
lea
pop
rep
push
sub
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
push
roll
icebp
add
add
popf
add
cltd
stc
repnz
push
push
mov
add
add
add
test
mov
add
add
add
add
pop
add
mov
xchg
rcl
add
int3
pop
fbld
mov
out
jae
add
addl
jbe
pop
cmc
stc
lret
lea
pop
xor
push
push
push
push
lea
push
push
push
call
add
mov
notl
lcall
xchg
sar
mov
jbe
cli
add
xchg
mov
add
add
cld
add
add
mov
sbb
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
movsb
bnd
jae
roll
mov
movl
pop
pop
add
icebp
add
add
cltd
add
aad
fwait
add
add
fiadds
add
add
add
add
add
add
les
add
mov
lea
pop
or
je
push
lea
push
lea
push
push
push
push
push
push
push
push
call
ja
jb
rorb
ror
add
add
xchg
incb
stos
jle
push
add
add
mov
cmpsb
add
lds
out
add
add
cmpsl
test
mov
lea
pop
mov
xor
push
shr
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
jno
lcall
shll
mov
add
add
xchg
clc
add
jle
jmp
pop
fcmovnu
add
add
push
scas
fs
hlt
jle
add
mov
lahf
jmp
cmpsb
add
add
push
iret
mov
add
add
add
mov
lahf
jge
add
jmp
mov
lea
pop
add
push
push
push
call
push
lahf
rolb
roll
add
iret
pop
enter
add
push
add
mov
push
xchg
add
call
jo
out
movl
mov
mov
sahf
jnp
add
data16
add
push
push
ror
pop
mov
xor
push
push
lea
push
push
push
push
lea
push
push
call
xchg
mov
lahf
lods
lret
add
add
in
add
cmc
push
jmp
roll
add
shl
xchg
stos
add
ret
add
add
push
in
add
add
lret
pop
andb
add
mov
cltd
add
mov
mov
lea
pop
add
push
shl
xor
pop
pop
push
not
pop
rep
push
push
push
push
push
push
lea
push
lea
push
push
call
shl
add
out
in
mov
testl
cli
xchg
movsl
add
add
clc
add
clc
scas
add
pop
add
cwtl
push
fcmovnu
add
add
add
add
add
add
arpl
in
cmpsb
icebp
push
mov
add
lcall
pop
sahf
mov
test
std
arpl
addr16
mov
xor
push
lea
push
lea
push
lea
push
push
push
push
call
pop
jno
fldl
fwait
imul
mov
in
ja
add
mov
adcl
push
fstpl
mov
add
sti
fiadds
gs
mov
add
mov
mov
stos
pop
add
add
add
mov
push
std
call
add
xchg
mov
lea
pop
or
je
push
shl
rol
dec
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
fsub
mov
add
add
add
test
add
add
mov
push
add
cltd
add
pusha
push
pop
add
pop
fildl
mov
add
mov
out
add
stos
xchg
lahf
add
push
add
add
fimuls
add
add
lcall
add
push
push
push
push
lea
push
push
push
call
imul
add
add
out
mov
add
add
mov
add
add
jp
sti
xchg
jmp
mov
cmpsb
test
add
jmp
add
add
mov
lea
pop
add
push
ror
pop
rep
push
lea
push
lea
push
push
call
mov
xchg
out
mov
imul
jmp
add
icebp
add
jle
push
xchg
add
mov
outsl
add
mov
add
mov
movsl
add
lea
in
pop
add
jo
xchg
add
add
add
push
mov
lea
pop
pop
push
push
push
or
not
add
xor
ror
add
sub
sub
rol
shl
add
pop
sub
sub
pop
push
lea
dec
pop
pop
push
push
lea
push
call
jmp
shl
add
std
add
add
rcrl
mov
mov
hlt
lahf
add
mov
pop
add
imul
fildl
xchg
mov
fistpl
or
mov
push
lea
shl
shl
pop
mov
mov
push
lea
shr
lea
not
pop
jmp
push
add
add
pop
push
push
add
shl
pop
mov
add
push
inc
pop
push
push
push
lea
push
lea
push
call
add
push
lret
enter
jp
incb
rcll
popa
add
roll
add
lret
pop
jae
push
loopne
add
jne
mov
clc
xchg
iret
test
in
jb
add
sarl
cmpsl
jnp
add
push
pushf
imul
adc
loop
add
pop
push
mov
push
sub
pop
pop
push
push
push
call
jmp
add
add
add
add
shl
mov
add
add
enter
sbb
js
mov
faddl
jl
fcom
mov
imul
add
mov
cli
mov
add
add
pushf
add
xchg
test
shll
fistpll
add
xorb
add
add
add
stos
cltd
jae
add
loopne
push
mov
lea
pop
pop
pop
push
push
push
push
call
mov
add
pop
add
mov
cltd
divb
adc
mov
add
mov
fwait
lret
add
add
out
add
mov
rorb
clc
in
lea
add
add
add
add
cltd
add
mov
lea
pop
pop
push
dec
pop
leave
push
add
rol
add
pop
ret
push
pop
push
push
rol
not
add
sub
pop
mov
push
push
push
lea
push
call
lods
add
roll
push
mov
icebp
mov
js
push
add
int
push
mov
add
movsl
add
roll
data16
add
pop
pushf
shr
add
add
add
testl
test
xchg
add
pop
out
enter
add
call
addl
add
mov
add
cltd
add
popl
fstps
push
mov
bound
pop
add
push
lea
push
push
push
call
add
mov
andl
fadds
sti
add
addl
jmp
add
cltd
jl
fcoml
add
add
add
add
fwait
xlat
add
add
add
add
add
rorb
mov
mov
cmpb
call
fldcw
add
fildl
add
add
roll
gs
lea
pop
push
push
push
push
push
call
jmp
add
add
js
add
add
xchg
data16
add
add
repnz
add
js
pop
fld
notl
addl
faddl
hlt
add
add
cmpsb
lret
add
out
bound
mov
add
roll
cmc
negl
ficoml
les
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
test
ljmp
add
imul
in
add
push
pop
add
add
add
pusha
arpl
add
add
hlt
jle
fadds
push
jmp
add
pop
push
push
shr
xor
add
pop
movl
push
push
push
push
push
call
rclb
mov
add
add
add
lcall
add
add
subl
stos
out
xchg
jae
hlt
pushf
add
add
cld
cmpsb
add
add
add
push
stc
repnz
jle
mov
add
ljmp
hlt
add
incb
loope
pusha
pusha
add
popf
add
mov
aam
bound
addl
test
je
push
push
push
call
inc
std
jo
roll
add
cmc
add
mov
jno
add
pusha
lods
icebp
push
jle
lcall
aad
popa
mov
add
push
add
mov
lods
cltd
addl
add
xchg
jl
push
gs
add
add
mov
mov
bound
orl
push
lea
push
push
call
add
push
add
add
add
pop
int
leave
out
add
jmp
lea
xchg
add
add
notb
int
add
pusha
xchg
imull
add
lret
add
hlt
add
add
mov
flds
add
aam
leave
add
pop
pop
push
push
push
lea
push
push
call
add
push
lds
fcomi
add
lock
add
add
add
pop
test
push
data16
mov
add
add
mov
out
mov
test
jle
imul
std
fsubrs
add
scas
cmc
add
lahf
add
loope
ja
clc
call
lea
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
bound
leave
fsubp
idiv
iret
stos
movsb
add
add
lock
ja
add
xchg
mov
sahf
xchg
add
popa
stc
add
add
sti
cwtl
add
pop
mov
int
add
add
scas
popf
fidivl
push
add
push
rcrb
testl
add
lea
pop
pop
push
lea
push
call
xchg
filds
jns
push
add
push
stos
mov
add
aad
add
fists
mov
mov
testl
fucomi
add
add
jle
add
pop
out
add
shlb
add
incb
push
cld
push
into
mov
add
add
call
addb
xchg
mov
addl
pop
iret
add
cmpsl
mov
lea
pop
pop
leave
push
add
pop
ret
push
push
lea
push
call
add
iret
jp
mov
add
add
add
out
add
mov
jge
add
jns
cmpsb
aam
popa
add
mov
push
add
add
mov
add
enter
xchg
pop
add
add
add
sahf
cli
loope
add
xchg
add
add
stos
add
add
add
cld
lea
pop
push
push
dec
inc
rol
pop
mov
push
push
lea
push
push
push
call
test
add
add
mov
add
in
add
nop
sti
add
imul
add
push
jb
add
shlb
xchg
stos
xchg
mov
lea
pop
add
push
push
push
lea
push
push
push
push
call
cmpsb
add
add
addr16
test
in
popa
add
add
mov
in
mov
lret
mov
into
roll
add
pop
add
mov
lea
pop
push
push
push
push
push
push
lea
push
push
call
add
xchg
mov
in
add
cmpsb
lcall
mov
add
xchg
push
into
push
sarl
pop
add
stos
ja
lea
jo
add
xchg
add
ret
cld
lea
pop
push
push
ror
add
rol
pop
push
push
push
lea
push
push
push
push
call
fs
add
sti
incb
jp
add
mov
cli
add
popa
push
popf
je
jno
add
add
rcll
add
enter
add
sahf
ret
mov
add
movb
mov
in
add
sti
add
cld
add
fdivp
pushf
add
test
int3
rolb
out
imul
cld
add
add
push
lea
push
push
call
add
push
add
fwait
add
add
bound
imul
add
add
push
ficomps
cmpsl
add
add
iret
mov
add
mov
jmp
add
add
jnp
cmpsl
add
scas
out
add
xchg
add
mov
icebp
out
lret
xchg
test
lahf
add
mov
outsl
add
mov
pop
addl
push
push
push
lea
push
lea
push
push
push
push
call
lods
addl
mov
mov
push
ficomps
js
mov
loope
xlat
add
ja
add
mov
add
movsl
add
add
imul
mov
test
aam
nop
add
add
and
add
mov
inc
dec
pop
mov
push
ror
dec
pop
pushl
push
push
push
call
add
jp
add
into
jp
stos
push
add
add
test
add
push
add
add
stos
shlb
add
xchg
jns
outsl
pop
push
notb
push
hlt
add
faddl
movsl
loopne
add
mov
add
std
add
add
idivl
mov
lea
pop
push
call
push
lea
push
lea
push
push
push
push
call
loope
cmc
in
test
mov
pop
out
add
testl
add
add
add
add
add
fstps
jbe
addl
mov
add
add
mov
addb
add
mov
add
mov
add
mov
mov
lea
int3
lea
pop
cmpl
jne
pop
push
dec
ror
sub
pop
pop
push
add
inc
pop
pop
push
lea
push
lea
push
call
add
add
lock
push
add
add
nop
add
test
add
mov
sti
lods
push
mov
xchg
ficomps
add
fs
data16
xchg
add
fdivrl
jl
push
add
lea
mov
jbe
mov
lea
pop
pop
leave
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
cmpsl
add
mov
jae
mov
lret
mov
add
testb
aad
cltd
scas
add
add
add
mov
add
outsl
xchg
jmp
add
les
add
mov
add
fadds
lods
xchg
mov
add
push
add
jecxz
mov
cld
push
icebp
sahf
add
pop
ret
push
ror
inc
shr
pop
push
push
xor
not
sub
pop
mov
add
push
push
call
add
add
fsubp
add
pop
roll
out
enter
mov
add
jae
jbe
jns
lret
lahf
xchg
clc
icebp
add
add
add
add
roll
add
mov
mov
add
add
add
add
add
leave
out
icebp
stc
xchg
pop
add
pop
push
push
rol
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
les
add
add
add
add
mov
iret
add
mov
add
add
popf
mov
add
mov
call
pop
pop
add
add
int3
in
xchg
xchg
add
sahf
push
add
add
push
add
pop
push
movl
push
ror
pop
push
push
inc
shr
pop
call
push
push
ror
pop
call
subl
push
push
push
call
movl
repnz
add
add
jo
les
mov
add
xchg
xchg
cmpsb
push
mov
incb
fdivrl
into
jmp
mov
test
add
add
jecxz
nop
leave
add
push
add
add
insb
out
jbe
add
add
icebp
push
lea
pop
cmpl
jne
pop
push
add
sub
xor
pop
pop
push
sub
pop
pop
push
push
push
push
push
push
lea
push
push
call
cmc
lahf
push
add
mov
xchg
add
xchg
arpl
mov
data16
lods
nop
outsl
lods
add
mov
jb
mov
add
lcall
sti
add
add
add
and
push
add
xor
pop
leave
push
xor
shr
ror
pop
ret
push
xor
pop
push
mov
push
push
push
push
push
lea
push
push
push
call
add
push
add
xchg
add
fstps
xorl
sarb
ficompl
repnz
add
add
jb
add
add
loop
or
mov
lea
pop
add
push
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
in
add
lods
add
xchg
je
sahf
int
fldt
jns
int3
negb
flds
add
ljmp
add
stos
ret
add
add
add
imul
fmull
push
push
sub
dec
pop
mov
lea
push
add
pop
sub
mov
push
push
lea
push
call
add
stc
loop
add
jl
jbe
add
fiadds
add
add
js
add
incb
aam
stc
pusha
add
xchg
add
add
add
add
out
add
pop
fistpll
aam
test
repnz
enter
fildl
cmc
xchg
int3
cltd
sti
loope
fiadds
mov
lea
pop
shr
add
push
shl
shl
rol
inc
pop
mov
push
sub
sub
pop
mov
push
push
push
call
jp
xchg
add
add
leave
mov
mov
push
test
add
xchg
insb
add
cli
frstor
push
jle
int3
xorb
add
arpl
clc
add
in
hlt
aam
in
mov
add
add
mov
add
add
pop
cli
scas
add
add
mov
lea
pop
add
push
ror
rol
pop
add
mov
push
push
push
call
push
add
cmpsb
into
into
add
sarl
add
add
push
roll
lcall
pop
mov
add
addl
filds
fiaddl
add
jmp
add
rolb
addb
cmc
mov
scas
in
fwait
add
jbe
loope
outsl
add
add
push
add
pop
push
push
jp
popf
cld
jmp
add
bound
mov
push
push
lea
push
lea
push
push
lea
push
call
not
lret
pop
pop
in
add
add
test
imul
test
mov
add
xorb
push
mov
int3
pop
nop
add
into
add
pop
xlat
pop
add
push
push
mov
mov
lea
pop
cmp
jne
push
shr
inc
shr
pop
cmp
jne
push
push
push
push
push
push
push
push
call
shll
add
test
mov
mov
shlb
cld
in
pop
add
add
add
lds
testl
fwait
int
xchg
pop
test
pop
mov
movl
push
lea
push
push
push
lea
push
call
in
add
mov
push
add
push
mov
aad
sbbb
xchg
add
add
rclb
add
xchg
cld
pop
xchg
push
add
xchg
jo
popf
add
hlt
add
int3
add
scas
fisubs
cwtl
hlt
add
pop
jmp
mov
push
push
push
push
push
call
add
lods
pop
add
add
mov
add
pop
add
scas
cli
cli
clc
repnz
fcmovu
lds
imul
imul
add
popa
jecxz
add
push
test
mov
lea
pop
mov
push
ror
dec
not
sub
pop
sub
jne
push
ror
dec
add
pop
mov
push
push
call
into
ret
jbe
fisubrl
popa
add
add
test
mov
add
idivb
add
add
ljmp
xchg
add
out
faddl
cmpsb
xchg
add
int
cli
mov
cmc
pop
jecxz
add
xchg
add
add
add
add
mov
data16
int3
lea
pop
movl
push
push
push
push
push
lea
push
push
push
push
push
call
shrl
add
add
add
add
mov
add
add
add
add
popf
add
add
loopne
mov
add
mov
imul
pop
jmp
mov
push
shr
pop
mov
push
add
shr
pop
cmp
jne
push
push
push
push
push
push
push
push
call
add
test
add
pop
push
mov
mov
pushf
mov
add
into
mov
popa
pushf
movb
into
add
cmpsb
flds
stos
xchg
add
mov
out
jmp
rolb
add
add
fmull
inc
adc
lea
lret
push
push
push
push
push
push
push
push
call
mov
testb
push
add
add
push
loop
pop
iret
flds
insb
hlt
repnz
add
mov
add
lods
scas
jmp
push
out
jnp
arpl
add
xchg
pusha
xchg
cmc
imulb
pop
add
mov
mov
addl
add
fisttpl
add
pop
add
xorl
pop
movl
jmp
push
add
inc
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
push
leave
rclb
xchg
add
push
mov
xchg
push
add
jmp
add
xlat
and
mov
pusha
lahf
add
fildl
rcll
out
fistps
lcall
aam
add
pop
cmpw
jne
mov
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
push
add
push
rcrb
push
subl
xchg
fildl
pop
pusha
lods
add
xchg
add
into
add
into
add
icebp
add
jmp
mov
lods
lcall
add
add
add
lods
add
add
xlat
push
addr16
add
roll
je
mov
popf
lret
mov
lea
pop
movl
jmp
push
add
pop
pushl
push
push
push
push
push
push
push
call
call
add
push
pop
add
lahf
mov
add
add
xchg
data16
cmpb
test
lret
test
add
fcoms
in
ret
stos
add
in
jbe
add
jo
cltd
vpunpckhwd
add
loop
fdivrl
push
add
xchg
add
add
filds
lret
add
sbb
pop
push
lea
push
lea
push
push
call
add
jmp
add
add
add
add
jno
add
mov
mov
jl
out
add
lock
add
js
data16
fiadds
jb
mov
add
push
add
add
jmp
add
push
scas
fiaddl
jmp
out
fs
fldl
stc
into
add
add
into
add
js
add
mov
lea
pop
mov
push
sub
pop
mov
mov
push
push
sub
shr
ror
push
push
pop
add
ror
sub
dec
sub
lea
xor
pop
xor
pop
push
push
push
call
jno
fdivr
add
stos
add
push
loope
imul
add
mov
add
lock
add
mov
add
ret
jae
movsb
add
je
mov
mov
stc
add
add
sti
lds
pop
jnp
aam
bound
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
std
add
in
cld
add
add
add
push
popf
fistpl
loopne
add
fwait
add
xchg
mov
mov
add
shr
int
leave
into
iret
ja
clc
lock
iret
jp
push
into
iret
filds
jl
add
stos
add
rolb
add
lea
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
mov
int
cld
add
sahf
add
jo
jecxz
mov
pop
lret
jle
lods
pop
jp
mov
hlt
sarl
xchg
jns
push
add
add
add
add
addl
jnp
add
add
add
xchg
add
jmp
xchg
mov
cwtl
mov
lea
pop
cmpl
je
push
push
shr
push
or
not
add
inc
lea
shl
sub
shr
pop
add
sub
pop
push
sub
xor
pop
push
call
push
xor
inc
ror
pop
cmpl
je
push
push
xor
xor
not
push
or
not
add
dec
inc
add
sub
lea
ror
add
pop
shl
shl
pop
push
inc
not
pop
push
push
dec
pop
call
push
push
push
push
lea
push
push
push
push
push
call
lahf
loopne
pop
add
sarb
add
add
mov
add
add
mul
jne
fadds
hlt
icebp
movsl
mov
test
mov
xlat
add
add
add
addl
stc
jge
add
add
test
mov
pop
ljmp
jbe
add
int
add
ja
xchg
add
into
add
nop
pop
mov
lea
pop
cmpl
je
push
push
add
push
or
inc
add
ror
sub
lea
sub
pop
xor
pop
push
lea
push
call
mov
out
add
add
add
add
mov
add
ljmp
add
stos
add
add
out
jl
loop
xchg
lret
jl
pop
fisttpl
test
mov
mov
add
pop
scas
mov
into
cmp
xchg
pusha
xchg
clc
pop
jmp
test
clc
pushf
mov
lea
pop
push
push
push
push
call
add
mov
mov
cli
xchg
in
loopne
std
add
push
jno
fwait
arpl
fs
rcrb
jnp
pushf
add
mov
call
mov
mov
cwtl
mov
add
in
loopne
int
lods
mov
std
cld
xchg
lods
add
add
scas
add
push
in
hlt
lods
int3
mov
add
add
mov
lea
pop
call
push
not
ror
dec
pop
cmpl
je
push
push
dec
rol
push
push
pop
add
shl
add
shr
inc
sub
sub
ror
dec
sub
pop
not
add
ror
pop
push
push
push
call
push
jbe
pop
call
sahf
mov
jnp
mov
add
cwtl
add
jge
mov
add
leave
arpl
rcl
add
add
in
add
add
add
add
add
in
add
push
add
xchg
mov
lea
pop
push
call
push
push
push
push
push
push
call
call
jno
push
add
jo
xchg
add
rcl
addr16
jo
add
sbb
add
add
add
rcrb
mov
movb
mov
incb
push
aam
xchg
popa
add
pop
cmpl
je
push
push
push
or
not
add
sub
add
sub
xor
sub
pop
sub
add
pop
push
inc
add
sub
not
pop
push
push
lea
push
push
push
push
call
push
mov
add
mov
jns
mov
mov
data16
add
add
aam
loopne
add
add
sahf
add
jmp
scas
add
add
popa
scas
add
repnz
xchg
add
arpl
xchg
add
lods
add
mov
add
out
shll
add
lahf
out
in
add
add
rorb
pop
call
push
push
push
push
push
push
call
fiadds
cwtl
push
mov
push
add
jns
add
insb
push
pop
into
stc
add
add
fcomp
mov
mov
add
add
movb
add
add
rolb
shlb
add
popl
shlb
add
add
add
mov
pop
add
mov
push
ror
rolb
mov
lea
pop
cmpl
je
push
push
push
or
inc
add
add
sub
sub
shr
add
sub
pop
lea
shl
pop
push
add
xor
shl
pop
push
call
push
shr
ror
pop
cmpl
je
push
push
rol
lea
not
lea
push
sub
add
shr
add
sub
add
ror
sub
pop
pop
push
dec
inc
pop
push
push
push
push
call
add
jne
add
jo
add
iret
add
sti
add
popa
push
lods
add
mov
cld
loopne
std
add
gs
incb
in
pop
cwtl
add
add
pop
call
push
add
shl
pop
cmpl
je
push
push
dec
shl
push
and
add
dec
rol
inc
add
sub
ror
rol
dec
add
pop
shl
not
pop
push
add
sub
ror
pop
push
call
push
lea
push
call
jb
pop
add
add
in
iret
add
push
test
lret
add
clc
add
adcl
add
push
out
divb
add
add
mov
push
in
testb
cmpl
je
push
push
inc
add
push
and
add
inc
not
not
sub
not
sub
ror
pop
rol
pop
push
rol
ror
pop
push
call
push
sub
sub
pop
cmpl
je
push
push
shr
push
or
not
add
shl
inc
not
sub
shr
add
lea
pop
rol
pop
push
dec
shl
lea
pop
push
push
add
pop
call
push
push
lea
push
lea
push
push
call
mov
loope
add
push
add
nop
in
mov
add
add
add
add
loop
add
pop
add
add
add
pop
cli
add
add
add
add
add
xchg
loop
add
jp
add
aad
mov
loope
int3
lea
pop
cmpl
je
push
push
lea
dec
push
or
inc
add
rol
ror
sub
rol
pop
ror
sub
dec
rol
pop
push
push
call
add
add
add
into
test
outsl
stc
bound
sub
add
testl
add
clc
bound
movsb
insb
add
stos
push
rclb
push
add
mov
call
add
add
add
xchg
push
stos
lret
add
add
push
mov
sahf
loope
stos
add
jp
add
pop
push
push
not
add
ror
pop
call
cmpl
je
push
push
ror
add
ror
inc
push
xor
add
lea
shr
not
sub
pop
add
pop
push
sub
dec
pop
push
call
push
push
push
push
push
push
push
push
push
call
add
call
pop
xchg
pop
jo
add
aad
fstpt
add
add
jle
mov
add
mov
add
jnp
ljmp
lret
jl
mov
lea
pop
cmpl
jne
push
add
shr
pop
mov
push
lea
pop
movl
jmp
push
not
lea
lea
pop
xor
pop
push
dec
inc
ror
pop
pop
push
dec
inc
pop
pop
pop
push
sub
pop
leave
ret
push
push
lea
push
lea
push
lea
push
push
push
call
neg
add
add
roll
aam
xchg
scas
add
add
push
lods
add
add
jae
add
fwait
add
jecxz
pop
test
cltd
add
push
mov
push
int
mov
lea
pop
push
push
add
sub
lea
pop
mov
push
push
push
push
call
add
mov
ljmp
jae
je
add
popa
mov
aam
add
add
rolb
add
add
push
mov
fldcw
test
div
loop
into
int3
jp
add
lret
jle
xchg
add
xchg
pusha
mulb
adc
in
push
inc
not
shl
pop
cmpl
jne
push
push
add
push
and
add
sub
sub
shl
pop
not
shl
xor
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
testb
push
xchg
add
data16
xchg
add
add
add
add
fsts
push
add
push
add
iret
add
lea
add
jb
add
xchg
mov
add
ljmp
pushl
push
push
push
push
push
push
push
push
push
push
call
xchg
add
orb
pop
add
iret
add
xchg
repnz
add
mov
in
data16
js
add
add
jp
mov
add
add
pop
iret
iret
add
std
in
add
out
in
icebp
fadds
out
jecxz
mov
mov
add
jge
add
add
add
movsl
pop
xlat
call
and
add
loope
jae
rcrb
cmpsb
add
data16
int3
xor
add
push
shr
pop
call
jmp
push
push
push
push
push
push
push
push
lea
push
push
call
fiadds
lods
scas
ja
jp
pop
add
push
add
xlat
add
add
imul
pop
int
add
push
mov
push
mov
stos
add
popa
add
add
loope
add
fs
xchg
add
push
testb
cmpsl
test
add
les
js
add
lea
pop
cmpl
je
push
not
pop
cmpl
jne
push
push
push
call
rcrb
xchg
jge
jb
add
lods
jno
push
add
mov
mov
add
mov
jle
add
pop
mov
push
fwait
pop
lret
push
imul
add
iret
add
add
loope
add
add
add
add
loop
add
loop
add
mov
lea
pop
leave
add
push
lea
push
lea
push
lea
push
push
call
mov
add
imul
out
pop
add
add
push
add
iret
add
add
add
int3
test
add
cwtl
mov
add
jge
add
hlt
add
cltd
push
add
test
loope
push
shrb
cmc
scas
popl
add
add
jle
negl
pop
ja
push
add
add
loope
or
out
outsl
mov
lea
pop
pop
push
push
call
mov
mov
scas
xchg
sahf
add
test
push
mov
add
add
jp
add
sti
add
imul
add
test
cwtl
add
mov
add
add
test
jmp
mov
jl
leave
add
add
add
loop
gs
add
mov
lea
pop
pop
pop
push
sub
pop
pop
push
push
call
add
mov
call
in
add
mov
add
add
mov
add
xchg
mov
ret
add
sbbb
stos
add
add
add
push
fiadds
cmc
imul
clc
cmc
clc
aam
add
add
add
pushf
mov
lea
pop
leave
push
rol
dec
not
inc
pop
add
ret
push
push
push
lea
push
push
push
push
call
rclb
add
mov
add
add
nop
add
mov
rolb
add
filds
jmp
xchg
jp
xchg
aad
pop
mov
mov
add
sahf
loope
add
loope
add
add
ret
push
loop
icebp
icebp
jle
xlat
add
push
pop
imul
mov
lds
pushw
add
test
faddl
add
hlt
mov
lea
pop
jmp
push
sub
xor
pop
cmpl
jne
push
push
sub
push
xor
add
not
not
not
lea
sub
sub
ror
pop
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
mov
mov
ja
in
ret
pop
lret
mov
push
fidivs
bound
add
add
popf
cmpsb
ljmp
lea
pop
pushl
call
push
push
lea
push
lea
push
push
push
call
add
push
add
flds
add
add
pop
leave
into
mov
data16
int
movsl
icebp
add
movb
mov
scas
mov
jns
enter
movsl
mov
add
cwtl
mov
jne
enter
pushf
mov
mov
mov
cltd
xchg
in
add
les
add
out
mov
sub
lea
dec
pop
jmp
push
push
push
push
push
call
add
nop
add
test
add
mov
add
add
add
jle
in
jbe
add
cwtl
test
in
add
add
add
add
add
cltd
add
mov
mov
add
add
neg
scas
mov
lea
pop
cmpl
jne
mov
push
push
push
push
push
push
lea
push
push
lea
push
call
add
stos
clc
mov
mov
clc
add
popf
add
in
add
add
jae
sahf
cltd
fwait
aad
add
std
test
push
mov
int3
data16
fwait
jge
lods
mov
push
add
add
mov
fcmovnbe
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
push
incb
popa
in
push
xchg
add
add
add
add
add
add
jecxz
add
mov
add
add
je
lods
scas
add
loop
jmp
add
out
add
pop
cmc
shl
stos
cld
incb
mov
pop
push
push
push
dec
add
push
sub
add
sub
shl
sub
pop
ror
rol
shl
pop
push
rol
xor
pop
pushl
push
push
push
push
push
call
mov
add
enter
xchg
add
add
ret
add
add
add
mov
add
out
je
add
mov
std
lahf
mov
add
shlb
add
add
add
add
adc
call
push
push
rol
shr
push
xor
add
xor
sub
sub
xor
lea
pop
sub
rol
pop
push
push
push
call
call
add
add
add
xchg
xchg
add
add
pop
add
stos
mov
pop
nop
add
add
add
jp
add
fldt
add
add
test
xchg
add
jp
test
les
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
call
add
add
jmp
aad
loopne
pop
add
xchg
add
mov
xchg
add
mov
add
test
mov
and
add
iret
sti
mov
mov
lea
pop
call
push
lea
push
call
add
lret
repnz
movsl
add
bound
xchg
mov
ret
sti
cld
cmpsl
add
jo
insb
mov
out
loopne
mov
in
jmp
shl
add
add
mov
xchg
push
add
add
add
add
pop
call
push
push
not
inc
inc
ror
push
xor
add
rol
rol
shr
sub
xor
pop
lea
pop
push
lea
push
push
push
call
push
push
pop
add
add
add
shr
add
jp
add
add
add
in
rolb
lea
add
add
notb
add
add
mov
testl
add
lea
lret
out
mov
sti
rorl
pop
pushl
push
lea
push
lea
push
call
add
pushf
mov
js
data16
add
add
add
ljmp
push
rcll
call
lock
insb
mov
test
icebp
lock
lea
pop
call
push
lea
push
push
push
push
lea
push
call
mov
popl
mov
pop
add
ja
jae
add
fistps
add
in
add
add
add
popf
mov
fldt
jmp
add
pop
icebp
add
fs
push
xchg
add
pop
mov
sbb
mov
push
mov
lret
out
add
xchg
add
add
add
fisttpll
bound
pop
call
push
push
sub
add
push
or
not
add
xor
inc
ror
sub
shl
inc
shr
xor
pop
not
lea
sub
sub
pop
push
push
push
push
lea
push
lea
push
call
add
add
mov
shlb
out
add
push
lahf
add
cli
pop
out
add
add
imulb
add
or
add
push
call
add
icebp
add
pop
add
jge
push
jno
add
mov
iret
into
push
add
stc
mov
lea
pop
pushl
push
add
inc
pop
call
call
push
push
ror
add
push
sub
add
sub
xor
rol
sub
ror
add
pop
shl
lea
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
int
add
mov
add
mov
mov
add
hlt
add
add
add
add
movsb
jae
movsb
int
xchg
add
ja
cmpsb
add
mov
push
xchg
push
add
mov
mov
lea
pop
pushl
push
shr
pop
call
push
lea
push
push
push
lea
push
push
call
xchg
add
jle
add
addl
movsb
aam
jne
add
add
mov
push
add
pop
add
add
add
jo
add
imul
nop
divb
aad
add
imul
add
insb
push
add
xchg
add
add
into
je
addb
mov
lea
pop
call
push
push
inc
rol
not
push
or
inc
add
inc
add
not
sub
rol
pop
add
pop
push
add
sub
sub
add
pop
pushl
push
sub
xor
pop
call
push
push
push
push
lea
push
call
aad
test
add
pop
add
add
data16
je
add
add
mov
add
add
add
mov
in
nop
add
into
add
add
shlb
add
out
mov
stos
movsb
sub
add
jbe
add
iret
mov
add
fiadds
add
add
add
push
loope
ror
add
jnp
aam
bound
call
push
xor
shl
rol
dec
pop
call
push
push
not
sub
dec
push
xor
add
sub
not
sub
dec
pop
xor
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
cli
add
add
mov
notb
stc
add
imul
add
add
xchg
push
adc
add
add
xchg
ret
add
mov
cmpsl
rol
add
add
sar
add
in
add
pop
add
jge
add
add
mov
mov
imul
add
lret
add
lock
pushl
push
sub
not
pop
call
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
js
fmulp
test
add
pop
in
loop
push
lret
sti
cmpsl
shlb
push
addl
add
xlat
pop
addb
add
fistps
add
add
and
push
add
mov
lea
pop
lea
push
dec
shl
pop
push
push
rol
add
dec
pop
call
push
push
shl
push
and
add
xor
sub
shr
inc
pop
lea
add
not
pop
push
push
lea
push
push
lea
push
push
push
call
add
add
pop
add
mov
mov
add
flds
data16
mov
add
mov
ja
repnz
add
add
jnp
add
cwtl
out
ja
fildl
add
ja
xchg
push
arpl
push
cld
roll
leave
pop
pop
add
sbb
pushl
call
push
xor
ror
pop
call
push
push
add
xor
rol
sub
push
xor
add
dec
inc
add
lea
sub
sub
pop
lea
rol
pop
push
lea
push
lea
push
call
les
xchg
add
add
insb
rcr
popf
mov
add
addl
pop
add
mov
sahf
mov
enter
bound
push
lahf
mov
add
add
add
mov
lds
icebp
push
add
lds
add
test
test
mov
add
add
lods
negb
std
std
hlt
mov
xchg
pop
loop
fldcw
decb
pop
pushl
call
push
push
push
push
push
push
push
push
call
movsb
mov
clc
xchg
ret
nop
cld
rcll
pop
add
xchg
jno
add
stos
rolb
movl
mov
popa
cmpsl
xchg
in
out
out
scas
movsb
roll
je
jmp
outsl
jmp
jno
add
test
loopne
mov
out
add
into
ficoms
add
jb
fadds
add
ret
mov
mov
lea
pop
call
push
push
ror
sub
ror
push
push
pop
add
inc
inc
sub
lea
dec
pop
shr
xor
pop
push
push
lea
push
push
push
push
lea
push
push
call
js
out
roll
jmp
into
jne
repnz
roll
mov
add
std
add
lea
in
mov
add
lret
add
push
add
cld
add
pushf
addr16
aad
add
in
add
in
add
mov
add
loope
idiv
loop
test
roll
push
add
add
pop
mov
add
mov
lea
pop
pushl
push
lea
push
push
lea
push
call
fiaddl
pop
add
mov
mov
push
mov
fnstsw
xchg
jno
add
add
cwtl
imul
lds
add
les
pop
and
add
rclb
xlat
xor
sub
not
pop
lea
push
push
dec
sub
push
xor
add
inc
sub
sub
sub
rol
add
shr
pop
inc
pop
push
push
push
push
push
push
push
push
call
ja
add
mov
jl
jae
mov
jle
add
enter
mov
testl
add
add
add
outsl
add
pop
testl
push
shl
add
add
xor
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
out
add
pop
lret
out
add
cmc
add
call
add
clc
pop
fiadds
jno
add
add
add
add
cli
pop
and
mov
in
push
js
add
jae
add
lds
add
add
js
add
mov
outsl
pushf
mov
lea
pop
push
push
sub
lea
dec
shr
pop
call
push
push
dec
push
or
not
add
sub
shr
shl
sub
inc
pop
add
dec
sub
add
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
jmp
fadds
mov
add
add
jns
add
push
je
jns
xchg
cld
push
fs
out
lock
add
jns
lahf
fsub
add
mov
add
pop
pushl
call
push
rol
pop
call
push
inc
pop
mov
push
push
ror
rol
push
sub
add
inc
ror
sub
lea
add
pop
ror
pop
push
shl
pop
pushl
call
push
xor
pop
push
push
push
push
push
push
lea
push
call
add
add
jmp
fwait
xchg
add
add
add
mov
add
push
add
add
xchg
mov
pop
add
jge
add
xchg
fs
cli
add
mov
pop
shr
add
outsl
add
mov
jecxz
pop
out
mov
sbb
jne
push
sub
xor
dec
pop
call
push
push
sub
sub
push
and
add
sub
xor
not
sub
add
lea
sub
pop
sub
pop
push
xor
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
push
call
aam
lods
add
add
rclb
xchg
out
mov
add
test
add
not
je
add
add
add
mov
push
cld
jl
rcl
add
add
test
mov
lea
pop
call
push
push
shr
shr
push
and
add
add
shr
sub
sub
inc
pop
lea
rol
pop
push
push
xor
push
sub
add
add
not
sub
shr
lea
add
add
pop
sub
pop
push
lea
push
lea
push
call
add
mov
push
push
add
loopne
add
add
add
enter
pop
lret
int
push
add
outsl
mov
pushf
pop
xchg
add
scas
out
add
fdivrl
mov
lea
pop
call
push
push
xor
ror
push
and
add
rol
sub
shl
shl
shr
pop
inc
pop
push
inc
shr
lea
shr
pop
pushl
push
rol
add
pop
call
push
rol
pop
mov
push
push
push
lea
push
push
push
push
call
add
add
cmpsb
lahf
add
add
mov
add
add
add
popl
rcrb
add
add
movsb
mov
cli
lock
popf
add
add
mov
pop
fs
add
in
bound
js
cltd
add
push
add
lea
pop
lea
push
xor
shl
inc
pop
lea
push
sub
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
lcall
pusha
out
jmp
pop
fs
out
sti
incb
add
add
icebp
add
jmp
mov
nop
addr16
movl
gs
add
ja
add
add
push
lcall
add
shl
xchg
add
cli
push
push
movsl
add
add
pop
push
push
sub
not
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
push
push
call
stc
scas
lods
add
movb
add
in
mov
add
add
jge
fcomps
jae
add
add
ja
jo
icebp
rolb
add
add
mov
ror
fadds
xchg
mov
mov
lea
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
call
mov
pop
cltd
add
sbb
push
test
lods
jl
add
add
add
scas
mov
iret
push
jbe
insb
mov
add
mov
aam
mov
mov
sub
hlt
mov
lea
pop
push
pushl
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
mov
mov
push
les
add
jl
add
add
loopne
add
pop
enter
addr16
jecxz
int3
in
jb
mov
add
add
xlat
add
lods
add
add
imul
call
fwait
add
mov
lea
pop
push
push
inc
pop
call
push
push
add
sub
push
push
pop
add
sub
shl
not
shr
sub
sub
pop
lea
pop
push
dec
lea
pop
pushl
call
push
push
push
push
push
lea
push
push
call
mov
jne
mov
mov
ret
popa
cli
hlt
add
jne
add
mov
add
mov
lret
in
popa
clc
pop
add
add
add
cmpsl
pop
roll
nop
mov
jle
jb
mov
add
xchg
jmp
pop
bnd
add
clc
hlt
scas
icebp
mov
add
pop
mov
lea
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
insb
pop
rolb
add
iret
push
add
mov
sti
dec
movsl
cmpsl
add
xchg
int
scas
add
xchg
je
jno
in
leave
arpl
repnz
cmpsb
add
add
push
add
xchg
mov
repnz
je
push
insb
add
pop
pop
mov
lea
pop
mov
pop
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
shlb
add
add
add
add
sbb
cli
push
aad
add
scas
add
mov
rol
jne
cld
fucomp
pop
pop
pop
jecxz
push
add
test
lock
negl
outsl
add
into
add
add
add
pop
add
test
lahf
jb
add
scas
add
add
fmuls
and
dec
jne
push
push
push
lea
push
push
push
lea
push
lea
push
call
jbe
add
mov
leave
push
mov
add
add
cltd
add
add
add
push
mov
rcl
scas
lods
fwait
add
mov
lea
pop
jmp
call
push
push
rol
lea
add
inc
push
or
inc
add
dec
add
sub
not
sub
pop
dec
lea
pop
push
dec
pop
pushl
call
push
not
ror
pop
push
push
push
push
push
lea
push
push
push
push
call
add
jl
add
hlt
add
add
add
pop
add
add
add
add
mov
jmp
enter
add
rolb
add
fildl
push
add
xchg
add
add
xchg
add
pop
add
scas
out
pop
out
add
cltd
clc
lods
xchg
in
add
add
lret
pop
jmp
add
push
test
popa
and
sarb
push
push
push
push
push
push
call
xlat
add
add
push
cwtl
add
outsl
fiadds
add
add
ja
fidivs
add
add
xchg
shlb
andl
add
cwtl
jns
je
add
push
js
push
xchg
add
shll
test
bnd
add
add
add
rcrl
ret
lea
pop
lea
push
push
shr
add
push
sub
add
lea
ror
sub
sub
pop
inc
dec
pop
push
sub
add
pop
pushl
push
push
push
push
push
call
add
gs
into
call
je
fcomp
add
mov
add
mov
cltd
mov
mov
mov
add
popf
in
xchg
sbbb
ret
mov
xchg
mov
fadds
stos
add
xchg
add
xchg
fldl
add
add
add
lods
add
add
js
mov
lea
pop
call
push
shr
pop
push
call
push
push
rol
sub
push
or
inc
add
sub
sub
sub
pop
lea
pop
push
push
push
push
lea
push
push
push
call
je
jge
push
les
bound
scas
add
in
xchg
xchg
add
mov
push
add
fwait
mov
push
add
cmpsl
fsubl
mov
addr16
call
iret
movsl
fcmovu
push
xchg
sahf
add
test
addb
add
add
fwait
mov
lea
pop
pushl
call
push
dec
pop
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
pop
add
add
mov
shrb
in
fildl
mov
movsb
add
fildll
add
add
cltd
add
mov
mov
pop
add
faddl
test
out
add
lods
xorl
data16
inc
cld
lea
push
push
shl
inc
push
push
pop
add
add
sub
add
pop
not
xor
pop
push
shr
pop
pushl
push
shr
shl
dec
pop
call
lea
push
lea
add
pop
push
push
push
add
dec
pop
push
pushl
push
push
xor
sub
xor
push
sub
add
not
sub
ror
pop
add
add
pop
push
push
push
push
push
push
push
push
push
call
mov
xchg
lods
jp
add
lea
push
add
mov
cltd
incb
call
add
add
push
data16
xchg
aad
stc
add
add
add
clc
loope
add
out
out
fldl
lret
add
add
add
mov
and
push
push
push
push
lea
push
lea
push
push
push
push
call
push
mov
add
add
add
add
mov
xchg
jmp
movb
jns
fistps
lds
imul
jmp
push
add
mov
add
add
stos
movsl
mov
lea
pop
call
push
push
sub
add
dec
push
sub
add
shr
inc
add
add
sub
not
not
pop
ror
rol
add
pop
push
push
lea
push
push
call
add
nop
mov
roll
mov
xchg
fistl
pop
cli
add
add
movsl
mov
les
mov
add
add
add
mov
add
data16
add
add
add
test
mov
add
add
add
movb
popl
arpl
jns
add
mov
lea
pop
pushl
push
lea
push
call
push
add
add
fcoms
add
pushf
add
lock
lock
jle
mov
enter
xchg
xchg
add
into
data16
add
add
lahf
lret
add
add
mov
pop
jge
add
arpl
add
cld
lea
pop
call
push
push
push
push
push
push
call
cmc
gs
iret
mov
addl
imul
add
test
mov
add
out
out
fwait
add
xchg
add
addr16
add
mov
roll
add
add
lret
enter
push
jp
cmpsb
movb
xchg
mov
add
xchg
mov
lea
pop
push
push
pop
call
push
push
inc
not
not
push
push
pop
add
ror
sub
rol
add
pop
ror
add
pop
push
dec
shl
pop
pushl
push
shl
pop
call
push
sub
add
pop
call
jmp
push
push
push
push
push
push
call
popf
fiadds
scas
stos
add
add
add
jb
out
add
add
xchg
mov
sti
add
add
add
cmpsb
js
xchg
add
add
mov
mov
lea
pop
pushl
mov
push
push
lea
push
lea
push
call
add
cmpsb
add
pop
bound
roll
cmpsb
fwait
add
add
push
add
add
add
add
add
add
rol
add
add
mov
add
faddl
addb
stos
jns
fiaddl
add
add
jmp
mov
fmulp
popl
cltd
add
icebp
add
stc
add
add
fdiv
mov
lea
pop
jmp
push
push
sub
ror
push
xor
add
ror
sub
not
rol
sub
shl
pop
sub
sub
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
add
pusha
cmc
mov
xchg
add
lods
add
mov
mov
jge
add
mov
imul
add
mov
aam
add
add
add
std
add
push
mov
lea
pop
pushl
push
shr
pop
call
push
inc
add
add
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
testl
lods
xchg
mov
mov
add
int
mov
add
pop
add
mov
jne
je
add
add
xchg
pop
data16
popf
pop
add
add
pop
arpl
imul
sarb
out
ja
add
pop
mov
lea
pop
call
push
push
sub
push
xor
add
shr
sub
ror
pop
add
dec
shl
pop
push
push
push
call
rolb
in
add
add
mov
test
add
icebp
add
out
stos
out
xchg
imul
movl
lods
mov
lcall
add
push
add
add
mov
add
add
icebp
arpl
mov
data16
push
push
add
imul
sti
add
jb
clc
pop
int3
fadds
rolb
add
pop
mov
lea
pop
pushl
push
push
push
push
call
iret
test
loope
push
ljmp
add
add
add
lds
add
js
leave
add
add
stc
pop
stos
arpl
pop
sti
xchg
ljmp
push
loop
faddl
mov
add
out
push
add
add
into
out
stos
add
mov
mov
test
mov
add
add
add
sahf
xchg
add
add
adc
or
add
push
push
sub
xor
add
shr
pop
call
leave
push
pop
add
push
sub
add
shr
sub
pop
pop
pop
push
shl
inc
pop
pop
push
push
push
call
xlat
cli
add
push
add
add
in
add
into
mov
add
push
xorb
cmpsl
xchg
mov
sti
add
movb
xchg
mov
mov
mov
lea
pop
pop
push
push
push
lea
push
lea
push
push
push
call
int
lahf
mov
add
mov
mull
mov
jge
rolb
xchg
mov
in
mov
add
in
aam
fs
out
mov
mov
add
pop
jno
cltd
add
xchg
sbb
leave
add
push
shr
sub
sub
pop
ret
push
pop
leave
ret
push
pop
push
push
sub
ror
shr
shr
pop
mov
cmpl
jne
push
add
pop
mov
push
push
push
call
add
out
lds
add
jo
xchg
lret
push
add
mov
add
add
adc
mov
outsl
lock
fwait
je
add
add
in
add
push
add
add
xchg
mov
add
aam
bound
jmp
mov
push
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
pushf
xchg
rcll
test
add
rolb
pop
jle
jmp
jae
xlat
push
add
add
mov
add
mov
xchg
add
add
xchg
add
mov
lea
pop
and
push
shr
ror
pop
xor
xor
push
push
push
push
call
add
divl
push
mov
mov
mov
cltd
repnz
mov
cmpb
mov
flds
int3
jb
ret
les
add
pushf
out
sahf
repnz
rorb
sti
mov
addr16
fdiv
mov
std
push
mov
add
int3
xchg
out
jne
aam
bound
pop
add
xor
push
push
push
call
add
ret
clc
mov
add
flds
lods
add
aad
fnstenv
aam
mov
mov
mov
add
testb
push
add
mov
pop
dec
push
xor
inc
xor
pop
sub
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
shrl
scas
add
aad
ljmp
sti
add
mov
lds
add
add
std
stc
out
add
in
test
test
add
add
loop
add
add
mov
int
add
add
add
nop
out
add
pop
jmp
push
dec
shl
add
pop
sub
pushl
push
dec
sub
pop
pop
sub
push
push
push
lea
push
call
push
jns
jns
add
in
std
add
add
pusha
xchg
mov
mov
add
sti
rolb
data16
add
mov
gs
lea
pop
cmp
jne
push
add
sub
pop
mov
push
ror
pop
lea
sub
push
push
call
jnp
add
add
add
in
add
fwait
pop
jmp
aam
ficompl
pop
add
add
mov
xlat
in
cli
stc
add
cltd
add
mov
lea
pop
mov
push
push
call
add
add
add
push
in
add
add
mov
lock
mov
movl
out
pop
add
int
imul
addr16
repnz
hlt
xchg
add
pop
add
mov
lea
pop
shr
push
rol
rol
add
add
pop
add
push
shr
sub
inc
pop
sub
push
lea
push
push
push
lea
push
call
mov
int
add
add
xchg
pop
add
mov
pop
roll
mov
add
fwait
pop
jl
jmp
mov
insb
mov
jae
out
pop
add
ja
pusha
xchg
orl
push
lea
push
push
push
push
call
mov
call
mov
nop
incb
pop
push
pop
stos
pop
fiadds
add
push
add
test
add
push
add
add
fadds
pop
in
int3
lea
pop
pop
push
push
push
call
add
add
stos
mov
cmpsb
mov
add
add
jle
add
cmc
add
add
addr16
out
nop
in
loop
sti
stos
mov
mov
lods
in
add
add
addl
ljmpw
add
leave
lock
add
cli
sarb
add
add
pop
mov
mov
lea
pop
shr
push
dec
pop
and
push
push
call
cltd
mov
xchg
mov
mov
add
mov
add
add
fsub
add
cwtl
add
int
add
add
add
push
iretw
add
ljmp
mov
int3
lea
pop
sub
push
lea
add
xor
add
pop
cmp
jne
push
lea
push
push
push
push
call
sti
add
popf
add
out
adcl
nop
add
add
add
arpl
fs
leave
out
add
add
addr16
add
rcrb
ja
pop
add
shrl
add
add
add
hlt
mov
lea
pop
leave
push
shl
pop
ret
push
lea
push
lea
push
lea
push
push
push
call
insb
gs
lahf
add
add
add
rolb
std
ficoms
push
add
cwtl
mov
cwtl
test
iret
in
add
mov
add
add
fidivs
insb
add
testl
bound
add
add
mov
stos
movl
add
add
add
mov
add
pop
push
mov
push
push
push
call
ja
loop
xchg
add
push
testb
add
enter
add
cmpsb
cld
add
sahf
add
add
add
clc
pushf
add
pop
add
adcl
popa
repnz
pop
cwtl
pop
out
add
fsubr
add
hlt
add
add
mov
lea
pop
add
push
shr
add
pop
push
push
push
lea
sub
pop
push
push
push
shr
ror
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
filds
mov
add
into
pushf
popa
add
add
fstpt
add
xchg
ljmp
add
add
imul
js
fstps
add
in
add
mov
lea
pop
mov
push
add
add
pop
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
out
add
add
stos
stos
add
add
add
sbb
clc
jbe
pop
xchg
add
pop
mov
mov
lods
popa
mov
add
pop
jmp
add
push
pop
mov
int3
lea
pop
sub
push
xor
xor
pop
mov
push
add
pop
shr
add
push
sub
xor
not
lea
pop
mov
add
push
dec
sub
pop
mov
push
shr
xor
sub
pop
add
xor
push
shl
lea
pop
mov
and
push
push
push
push
push
push
push
push
push
lea
push
call
into
jne
lcall
aam
mov
jae
fsub
fldl
mov
test
mov
add
jbe
cwtl
xchg
jae
imul
aam
mov
add
add
les
in
push
imul
out
mull
add
pop
xchg
mov
lea
pop
rol
push
lea
ror
dec
pop
rol
xor
push
sub
rol
pop
inc
push
inc
ror
pop
cmpb
jne
add
push
lea
push
push
push
push
call
pop
ret
nop
mov
mov
fildl
push
add
cld
add
add
add
add
add
fldenv
popa
mov
add
add
jo
jle
sti
add
add
mov
add
add
add
ljmp
ror
add
loope
lcall
mov
mov
int3
lea
pop
cmp
je
push
lea
push
call
mov
xlat
xchg
jne
in
add
mov
add
jae
mov
xchg
add
add
pop
xchg
add
mov
add
add
add
xchg
add
add
movb
cld
addb
add
add
fwait
pop
push
les
ret
adc
inc
pop
cmpl
jne
push
push
push
lea
push
push
lea
push
push
push
call
pop
jb
add
add
add
mov
jmp
add
mov
add
ror
std
add
fiaddl
rclb
add
pushf
add
mov
add
add
add
lea
pop
xor
push
shl
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
test
jle
std
jl
rcrl
lret
add
xchg
fwait
out
stc
jl
add
lret
je
insb
in
add
pop
jp
jne
add
mov
testl
mov
jle
rorb
add
add
jp
bound
add
cld
lea
pop
pop
push
shl
dec
add
xor
pop
pop
push
rol
inc
add
pop
pop
leave
push
add
xor
pop
ret
push
lea
push
lea
push
call
add
mov
les
add
iret
add
leave
in
out
add
add
int3
add
jmp
fldl
mov
negb
mov
pop
jp
add
sahf
push
add
pushf
test
rolb
je
mov
addb
add
testb
add
mov
popa
add
aam
loopne
int3
add
mov
push
push
add
addl
popa
or
mov
push
shr
pop
add
push
push
push
lea
push
push
push
push
call
roll
sti
jle
insb
lods
add
hlt
mov
add
mov
add
add
fs
add
mov
insb
bound
add
cwtl
mov
popl
add
cli
xchg
mov
mov
lea
pop
push
push
push
push
push
call
lcall
std
in
mov
data16
ja
ret
lret
push
sti
jle
mov
xchg
mov
fldcw
add
add
add
js
popa
add
add
lahf
mov
lds
add
lret
push
add
gs
mov
cltd
mov
lea
pop
add
mov
push
inc
pop
cmpw
push
lea
pop
pop
push
lea
push
push
call
mov
sahf
jae
add
xchg
leave
lods
insb
fnstsw
aam
add
lods
sahf
lds
mov
mov
out
enter
add
lahf
test
loope
shrb
add
add
add
add
test
add
add
mov
add
repnz
pop
popf
call
mov
loop
mov
lea
pop
pop
push
shr
lea
pop
mov
push
push
push
push
push
lea
push
push
call
xlat
imul
jae
add
add
scas
add
xchg
push
add
add
mov
add
faddl
mov
fcomip
mov
aad
mov
ret
loopne
mov
push
out
test
into
pop
mov
cwtl
add
jnp
jle
add
add
pop
push
push
push
push
push
push
push
push
push
push
call
test
add
add
add
shlb
add
int
add
add
lods
jno
frstor
addr16
add
js
add
mov
cltd
add
loop
loop
push
push
mov
mov
lea
pop
call
push
shr
lea
shl
ror
pop
xor
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
insb
mov
push
cld
leave
imul
add
call
add
int3
add
ficomps
in
add
addr16
mov
add
add
add
add
add
into
cli
cwtl
testl
out
sbb
dec
orl
add
test
add
lret
mov
add
in
push
pop
stos
pop
add
jnp
add
movsl
mov
lret
call
subl
jo
xchg
outsl
add
add
sti
add
repnz
jp
xchg
sahf
jo
les
add
lcall
add
pop
add
cltd
add
add
rolb
pop
mov
add
pop
mov
lea
pop
pop
push
lea
push
push
lea
push
call
mov
hlt
xchg
addl
aad
add
add
lds
add
mov
pusha
add
mov
pushf
add
int3
push
add
add
mov
add
adc
push
ror
add
pop
pop
leave
push
lea
push
push
lea
push
lea
push
push
push
call
lds
add
xchg
add
sahf
add
addb
jnp
movsb
push
xchg
popf
mov
vphaddwq
out
loopne
mov
push
xchg
add
add
addb
add
popa
pop
push
outsl
push
add
mov
mov
add
mov
xchg
fcmovnu
in
xchg
mov
data16
add
mov
xchg
mov
pop
add
popa
add
add
add
pop
ret
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
cld
pop
add
add
mov
pop
leave
test
pop
in
testb
lcall
add
push
hlt
lret
xchg
add
mov
add
hlt
jo
ret
add
jecxz
movsl
add
add
imul
mov
add
test
sarl
lds
mov
in
popa
add
add
pop
push
mov
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
in
add
rolb
add
add
mov
jle
out
add
cwtl
test
add
movsb
add
mov
add
lea
mov
pop
mov
mov
js
mov
add
imul
add
ret
ljmp
arpl
add
push
push
rol
sub
shl
add
pop
push
push
inc
not
xor
pop
push
push
push
push
call
cltd
add
add
imul
add
add
orb
xchg
cmpsb
add
sti
cltd
frstor
in
ljmp
pop
je
add
mov
test
mov
add
add
xor
mov
lea
pop
mov
push
push
push
call
add
fsts
in
pusha
jo
add
sbbb
add
add
add
add
mov
aam
add
add
fcmovb
push
jecxz
add
ljmp
lea
pop
pop
lea
push
push
push
lea
push
push
push
push
push
push
call
add
add
xlat
add
add
fdivr
add
lds
mov
mov
add
add
jo
cltd
add
add
stos
add
add
nop
push
out
adcl
rorl
sub
mov
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
test
add
mov
popl
mov
enter
test
add
add
add
mov
add
add
pusha
jns
add
std
test
scas
fidivrl
faddl
arpl
data16
xchg
jae
movsb
add
add
add
subl
pusha
and
shr
add
push
dec
xor
rol
shl
pop
mov
push
rol
pop
add
push
ror
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
popa
add
mov
add
add
mov
sahf
add
add
popf
mov
mov
add
add
add
int3
add
add
add
add
push
fnstenv
jmp
lea
pop
popl
push
xor
pop
mov
push
shl
pop
add
push
push
push
push
call
mov
mov
mov
add
je
push
push
cli
mov
xlat
out
fistps
leave
mov
mov
xchg
push
out
jbe
lock
pop
add
add
fcmovu
insb
add
add
mov
lea
pop
xor
push
lea
push
push
push
push
call
add
fiadds
pop
scas
cmpb
add
add
add
add
test
mov
add
data16
add
add
push
add
jbe
fnsave
xchg
xchg
fnstenv
add
add
add
jnp
mov
fldl
add
out
push
sarl
add
icebp
jns
add
pop
leave
add
mov
lea
pop
lea
mov
push
add
sub
xor
pop
add
push
push
push
lea
push
push
push
push
push
push
call
fistl
xchg
add
test
add
popf
push
add
add
imul
add
addr16
mov
imul
add
mov
mov
shlb
xchg
pop
out
cmpsb
xchg
jge
add
fiaddl
add
fnstcw
add
add
cmc
add
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
push
call
arpl
add
add
cltd
mov
sti
xchg
add
fisubrl
lods
mov
hlt
jnp
ja
add
leave
cmpsb
add
xchg
les
add
add
imul
mov
test
add
pop
lret
add
mov
mov
and
rolb
push
lea
push
push
push
call
add
lcall
cltd
clc
add
imul
push
add
xchg
xchg
add
jb
pushf
iret
outsl
xchg
test
mov
mov
lret
add
push
add
xlat
lcall
xchg
mov
lea
pop
nop
push
shl
pop
nop
xor
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
add
into
add
enter
out
pusha
jl
add
sarb
loope
fwait
add
loopne
xchg
incb
add
add
imul
add
cmc
test
mov
lea
pop
nop
push
sub
add
ror
pop
nop
inc
push
push
push
lea
push
push
push
push
push
push
push
call
add
mov
int
lahf
push
xacquire
xchg
jp
fiaddl
add
add
mov
xchg
cmc
add
add
mov
mov
xlat
add
add
js
jmp
imul
cltd
jle
pop
add
lahf
fisttpll
add
fisttps
push
out
add
add
add
stc
mov
test
add
pop
nop
push
push
lea
push
push
lea
push
push
push
call
add
pop
mov
notb
out
add
add
jae
add
push
add
add
add
jle
into
xchg
add
add
add
mov
in
mov
pushf
hlt
mov
lea
pop
nop
cmpb
jne
push
push
push
push
push
push
call
movsb
xchg
neg
out
push
add
mov
add
in
icebp
add
mov
add
mov
fstp
add
add
add
add
mov
add
mov
add
int
add
add
int3
lea
pop
add
push
ror
sub
inc
sub
pop
nop
nop
push
push
push
call
jnp
xchg
add
xchg
mov
add
cmpsl
xchg
hlt
add
mov
test
add
fiaddl
add
add
pusha
in
add
add
add
pop
add
add
xchg
leave
add
orb
popf
add
add
lahf
into
test
fstl
cli
stos
add
out
add
add
pop
cmp
je
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
fsub
je
add
add
add
test
add
out
push
add
pop
mov
fiadds
arpl
add
add
loope
add
push
jl
icebp
fucomi
add
push
add
cmc
sti
nop
add
cmpsb
into
add
push
mov
add
lods
xchg
push
add
add
mov
mov
jp
fcmovnb
add
pop
nop
nop
push
shr
pop
inc
nop
push
add
sub
pop
nop
cmp
jb
push
shr
pop
xor
push
dec
lea
pop
jmp
mov
push
lea
push
push
push
push
push
push
push
push
call
imul
add
add
add
push
add
pop
test
add
cmpsl
in
push
add
pop
add
add
mov
mov
add
pushf
in
fstpt
in
jns
add
add
lret
xlat
add
jb
fmull
rcll
push
call
mov
sti
ljmp
cmpl
jae
ror
loopne
icebp
popf
add
scas
add
add
add
cmc
data16
add
add
add
cli
cmpsl
add
mov
mov
lret
add
jl
idiv
add
pop
test
sarl
lea
pop
movzwl
mov
push
sub
shr
pop
add
push
dec
lea
pop
mov
xor
push
add
lea
not
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
out
cltd
add
add
popl
jecxz
in
jl
add
mov
lahf
add
add
add
add
xchg
push
add
jno
test
add
ret
add
jl
add
test
mov
add
mov
add
mov
jno
fcoml
pusha
add
add
and
shl
push
push
push
lea
push
push
push
push
call
add
lea
push
mov
add
mov
imul
add
add
add
stos
add
mov
lcall
add
lret
add
add
nop
mov
addr16
xor
push
lea
pop
shl
push
push
push
call
mov
mov
add
add
mov
out
add
mov
faddl
add
rcll
jmp
pusha
mov
push
cmc
leave
lcall
test
add
sarb
mov
cld
add
add
lret
cld
lea
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jb
outsl
ret
lret
jae
add
mov
push
push
scas
add
leave
repnz
popa
mov
add
add
add
hlt
in
add
int
notl
add
add
pop
cli
incb
imulb
mov
lea
pop
shl
xor
push
push
lea
push
push
call
popa
push
push
lds
add
aad
out
fisubrs
add
fldenv
mov
add
fnsave
jl
add
add
add
lock
add
xchg
jnp
stc
add
test
cli
xchg
cmpsl
clc
add
add
pop
mov
add
push
sub
pop
pop
push
xor
dec
shr
pop
pop
pop
push
dec
pop
pop
push
shr
inc
shl
pop
leave
push
push
push
call
push
leave
add
mov
push
add
add
xlat
imul
iret
add
test
add
mov
add
add
add
mov
add
pop
mov
mov
fisubs
loop
movsb
add
add
push
cltd
add
roll
add
jbe
lods
mov
xchg
mov
lea
pop
ret
push
sub
add
add
pop
push
mov
push
ror
sub
pop
push
push
sub
pop
push
push
push
push
call
popa
je
add
add
fsubr
movb
push
pushf
out
movsl
sbbl
jae
pop
push
cli
add
loop
add
lock
xchg
cmc
mov
jb
fadds
arpl
add
bound
addl
pop
test
add
neg
add
insb
xorl
js
add
add
add
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
add
mov
add
add
pop
testl
lods
jp
xchg
add
add
lea
stos
xchg
sbbl
test
in
jno
add
add
out
pop
mov
fs
fwait
mov
rcrl
js
jmp
popa
jae
imul
mov
add
fiadds
mov
add
add
aad
mov
mov
lea
pop
mov
push
rol
add
inc
pop
mov
push
shr
pop
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
push
add
xchg
mov
leave
add
add
xchg
add
lret
mov
call
add
add
add
pop
add
scas
hlt
mov
xchg
add
movsl
mov
outsl
addl
add
mov
jmp
mov
jbe
out
pop
add
add
mov
out
mov
add
mov
lea
pop
test
je
push
xor
pop
mov
push
lea
inc
inc
pop
test
je
push
push
lea
push
push
push
call
popf
cltd
mov
movl
mov
add
add
in
add
add
add
rolb
add
add
sub
cmpsb
pop
add
out
push
mov
lea
pop
mov
push
not
add
sub
pop
mov
push
inc
lea
shl
pop
mov
inc
push
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
leave
jns
aad
add
loopne
add
add
lret
movsb
jge
add
jecxz
pushf
xchg
add
add
movsl
add
add
pop
loope
mov
add
add
mov
pusha
sub
rorb
test
add
add
rcl
add
ror
shr
pop
test
je
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
fiaddl
popa
imul
testl
add
fdivs
add
lds
gs
add
add
or
in
add
xchg
xchg
mov
add
rorl
add
add
add
add
pop
mov
push
dec
sub
shr
pop
inc
push
shr
rol
pop
cmp
je
test
jne
push
ror
not
shl
pop
xor
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
mov
pop
add
add
popf
add
lahf
test
cltd
add
add
add
loope
add
add
test
push
add
jo
add
rorb
pop
pop
push
push
call
push
add
cmc
push
add
add
movl
add
mov
call
add
mov
mov
fbld
mov
les
add
rcr
add
aam
xchg
add
add
iret
push
jae
subl
jb
jno
add
out
mov
pop
add
or
pop
push
rol
pop
leave
push
sub
pop
ret
push
add
dec
lea
add
pop
mov
push
inc
pop
inc
cmp
jne
push
lea
add
add
ror
pop
lea
push
add
rol
pop
mov
push
inc
pop
test
je
mov
push
add
pop
add
push
rol
pop
cmp
jne
mov
push
push
push
push
lea
push
call
add
add
add
mov
jge
add
add
add
mov
add
add
nop
std
add
pushf
jnp
pop
hlt
mov
add
stos
add
xlat
add
out
xchg
add
iret
cld
add
int
mov
cmpsb
add
add
mov
je
popf
add
xchg
mov
rcrb
cld
lea
pop
test
je
mov
push
push
call
add
lods
add
hlt
rolb
xlat
push
loop
add
pop
data16
add
add
shlb
xlat
pop
push
add
add
jno
xlat
ficoml
fwait
mov
test
in
ret
add
imul
sti
add
add
pop
scas
add
mov
ret
mov
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
xchg
test
jno
imul
add
fs
jecxz
push
jb
add
add
lea
mov
add
addb
arpl
js
add
add
sarl
xchg
mov
je
add
std
mov
mov
xchg
add
rcl
push
std
hlt
loop
cld
lea
pop
cmp
je
push
push
lea
push
lea
push
call
add
add
add
push
push
sub
ret
lret
add
rolb
popl
pop
add
lret
add
mov
push
clc
stc
add
add
add
mov
stos
add
rorb
add
xchg
add
push
push
xorb
jno
int3
lea
pop
jmp
push
sub
not
pop
xor
push
push
push
push
push
call
jns
add
lret
roll
pop
add
lods
cli
fstl
push
call
add
popa
add
mov
add
add
push
andb
add
add
ror
add
xchg
aam
les
add
mov
scas
sti
push
data16
jns
add
add
add
mov
lea
pop
pop
push
pop
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
add
jb
out
push
mov
imulb
fistl
add
sahf
add
fiadds
nop
cmc
add
fcomip
insb
add
movsb
arpl
mov
lea
pop
pop
pop
push
push
lea
push
lea
push
push
push
call
iret
fucomi
mov
icebp
add
rolb
add
pop
jge
mov
add
add
add
pop
add
fcmovnu
xchg
mov
jne
lcall
fldl
addl
add
loop
fsub
imul
add
filds
add
cld
mov
mov
jnp
add
cmpsl
lret
data16
add
mov
lea
pop
leave
ret
push
push
lea
push
push
push
push
push
push
push
call
fwait
add
add
cmc
add
mov
mov
add
addb
add
hlt
add
push
xlat
lret
testl
add
add
add
outsl
add
lock
mov
stc
ljmp
add
add
mov
lea
pop
lea
push
not
shr
inc
shr
pop
pop
push
push
lea
push
push
call
add
add
in
add
jae
mov
jns
add
jne
call
out
fiadds
xchg
sti
out
jns
out
jne
add
enter
lea
pop
pop
push
push
lea
push
push
push
push
push
call
imul
add
mov
jle
fdivs
stos
lods
add
add
push
xchg
lea
scas
add
pushf
xchg
add
mov
lret
mov
outsl
add
leave
mov
lock
add
pop
in
mov
mov
add
icebp
rolb
pop
std
add
lods
add
add
pop
pop
pop
push
dec
pop
leave
push
rol
shr
inc
pop
ret
mov
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
xchg
lret
add
add
stos
jb
in
jae
jne
add
into
add
add
outsl
roll
cwtl
mov
add
popf
pusha
je
mov
lahf
add
push
lods
jge
movb
jae
add
fisttpl
pop
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
gs
divb
iret
add
add
add
add
call
orb
pop
stos
aam
loopne
pop
movsl
add
ret
add
loope
xlat
add
add
filds
add
add
ret
add
lahf
incb
add
jnp
mov
add
add
leave
pop
xchg
xchg
push
xchg
add
scas
out
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
call
lea
add
push
cmpb
aad
sbb
bound
push
stc
movsb
call
mov
jnp
add
in
imul
push
add
mov
mov
lea
pop
pop
leave
push
push
call
mov
add
add
mov
lcall
test
add
add
imul
mov
mov
add
test
pop
jb
loopne
loope
test
mov
div
add
add
add
sar
add
add
add
add
arpl
pop
ret
test
push
test
jae
test
jb
pop
data16
cmp
push
int3
shll
mov
jae
inc
mov
add
jne
loope
out
or
test
mov
or
adc
mov
subl
inc
pop
shll
imul
je
add
push
leave
sbb
pop
adc
fildl
ja
xchg
pop
ret
mov
dec
stos
inc
push
imul
xchg
ret
push
dec
xchg
ss
or
insl
and
pop
xor
movsl
in
fldl
dec
cmpl
mov
mov
aas
sbb
add
out
sbb
jae
xchg
mov
mov
pop
and
pop
jecxz
add
imul
insl
mov
or
dec
dec
rcrl
sbb
inc
loope
push
xor
aam
dec
adc
loope
insb
pop
adc
in
ds
jmp
lret
ret
push
xchg
aas
arpl
lds
lds
mov
and
lods
hlt
xchg
mov
dec
insl
mov
cltd
fwait
inc
jle
loope
in
jg
aad
pop
and
mov
ret
dec
out
test
mov
sbb
gs
mov
xchg
jbe
xor
mov
xor
sbb
insb
sbb
mov
cmc
popa
inc
inc
pop
mov
dec
add
push
jge
push
push
sbb
adc
inc
and
lahf
test
pop
ret
movsb
sbb
adc
bound
sahf
cmp
mov
insb
lock
ds
mov
and
sbb
or
push
xchg
mov
ret
pop
mov
loopne
movb
mov
push
iret
cmpsl
and
rcll
pop
inc
repz
xor
sti
xor
in
add
repnz
jmp
cmp
ja
mov
push
cmp
imul
rcrl
clc
sbb
lahf
fnstcw
fbstp
in
jnp
outsl
ljmp
stc
cmovge
imul
mov
inc
bound
sbb
jns
xchg
pop
xor
addb
push
xor
std
shlb
dec
xchg
mov
jns
add
clc
mov
inc
movsl
cli
fidivs
mov
sar
cmp
pop
mov
pop
jl
cltd
pop
cmp
push
lea
push
roll
mov
mov
pop
lcall
xor
ss
mov
dec
iret
adc
fsubrl
jo
sti
mov
scas
repnz
test
pop
inc
popa
push
xor
dec
inc
in
pop
test
push
cmp
inc
mov
lahf
push
scas
lods
push
mov
adc
add
sub
xlat
pushf
cwtl
adc
arpl
adc
popl
jecxz
shll
inc
mov
aad
sbb
jecxz
jl
jmp
sar
jnp
inc
cmp
sti
inc
test
jo
lahf
fnstsw
popf
lds
xor
loopne
into
mov
jo
sbb
sub
js
pop
adc
adc
cmp
lret
sbbl
sub
iret
cmovle
leave
jne
sarl
add
or
nop
sbbb
nop
ja
scas
hlt
out
shll
in
popf
xchg
inc
mov
lock
cltd
stc
into
push
mov
sti
push
test
andl
add
daa
sbb
scas
pop
mov
and
xor
rorl
adc
out
mov
push
sub
clc
int3
push
cmp
loopne
cmp
pop
cwtl
inc
adc
outsb
add
mov
mov
jb
data16
jp
push
dec
cwtl
cmpsl
push
dec
mov
pop
shrl
dec
xchg
sti
outsb
pop
xor
pop
fdiv
push
sub
imul
lcall
loope
mov
inc
and
popf
aad
sbb
adc
mov
adc
sbb
out
dec
jo
into
mov
movsl
pop
cmpsl
out
stc
pop
push
sub
pushf
inc
es
xchg
xchg
rcll
adc
cmp
push
int
jg
sbb
adc
or
add
adc
mov
mov
ja
adc
mov
pop
lods
add
sub
and
xchg
or
mov
pop
mov
mov
sub
adc
inc
mov
mov
adc
add
cmpsl
mov
inc
or
cmpsl
ljmp
scas
mov
call
pop
pop
push
cmp
add
mov
push
ret
imul
mov
mov
stc
xchg
hlt
int
and
rcl
add
into
pusha
mov
mov
xor
andb
pop
push
xor
jo
xor
mov
xchg
xor
test
mov
les
insb
mov
in
cwtl
test
icebp
mov
ljmp
inc
and
imul
ret
repnz
int3
inc
pushl
add
adc
or
mov
jle
cmp
je
pop
push
or
pop
xchg
xchg
push
ja
in
adcb
scas
or
jno
pop
subl
fwait
xor
js
ljmp
cmp
aas
stc
inc
pop
push
and
push
imul
xor
adc
mov
or
mov
jge
loopne
push
test
adc
movsb
push
pop
add
out
xchg
in
jmp
into
push
rolb
or
xchg
or
inc
clc
clc
inc
add
sub
pop
ja
mov
mov
enter
or
rcrl
xor
ret
lds
mov
or
cltd
inc
or
pop
lcall
in
xchg
xor
mov
adc
dec
rorl
pop
ret
fisttpl
js
mov
mov
jo
aaa
lret
paddw
adc
scas
rorb
mov
dec
shrb
dec
mov
inc
clc
mov
mov
xlat
push
in
addb
shll
shlb
daa
mov
stos
sahf
movb
jl
inc
adc
cmpl
test
std
xor
clc
jmp
pop
pop
push
cli
jmp
stos
adc
call
and
pextrw
repnz
pusha
inc
sub
jno
xlat
mov
inc
mov
adc
sub
mov
add
pop
das
cmpsb
pop
cwtl
dec
or
in
sbb
subb
ret
movsl
jg
xor
xor
addr16
fsubrs
filds
divb
push
mov
sbb
inc
inc
test
mov
sub
add
pushf
cli
dec
xor
pop
pop
bound
mov
jnp
pop
outsb
pop
rolb
dec
pop
xor
out
mov
jp
add
stc
lret
fnsave
jo
leave
cli
inc
notb
mov
jmp
sbb
out
shll
fisubl
stc
or
add
pop
mov
dec
add
cmp
in
push
xchg
in
js
maskmovq
mull
movsb
out
aam
jl
shll
mov
sub
pop
cli
pop
jnp
mov
mov
dec
or
fdivl
sub
sbbl
ret
push
pop
adc
add
popf
xor
push
or
push
mov
bnd
fbld
das
and
xchg
andb
dec
repnz
mov
jo
jecxz
fnstenv
pop
leave
add
popf
std
push
outsl
mov
mov
and
lods
in
inc
and
std
and
divl
cwtl
loopne
sub
lret
mov
cmpb
or
push
and
add
jle
push
mov
ret
sbb
dec
push
push
sub
es
scas
imul
sub
jb
das
popf
sbb
sub
outsb
xchg
in
mov
jmp
jne
fidivl
pop
jb
push
inc
mov
adc
adc
mov
mov
add
mov
enter
jne
rcrl
xchg
mov
sub
sahf
sbb
out
lods
adc
sub
xchg
lea
je
jl
push
adc
imul
fisttpl
aam
cmp
call
fs
icebp
mov
sbb
daa
fcomps
out
std
call
sbb
bts
add
xchg
das
dec
mov
xchg
in
call
sahf
aam
xor
cltd
ds
jns
icebp
inc
sti
loop
outsb
aas
push
daa
clc
mov
fiaddl
jl
cmpsb
inc
jbe
shrl
fwait
add
sub
aam
bound
cmp
adc
data16
cmp
or
pop
insl
mov
dec
mov
cmc
in
jo
cmp
ret
aas
pop
lock
push
insb
adcb
fisubs
jge
leave
aaa
pushf
in
pop
push
sub
test
fucomp
xor
sub
pop
mov
leave
sub
gs
fmuls
inc
lahf
shlb
push
lahf
stos
notl
mov
je
jle
lret
mov
dec
icebp
adc
inc
out
push
mov
clc
pop
mov
inc
xchg
sub
and
mov
sub
mov
scas
jae
mov
xchg
stc
subl
push
or
dec
cmp
int3
rorb
and
add
aad
sub
xor
cmp
mov
loop
rclb
adc
fnsave
nop
xor
imul
xchg
jmp
adc
cmp
jle
mov
push
sub
lods
mov
dec
and
into
sub
jecxz
subb
jo
addr16
fldcw
test
js
adc
icebp
lds
dec
lret
fwait
loop
add
mov
cmp
mov
nop
into
ret
arpl
mov
cwtl
cmp
fs
stos
mov
mov
dec
sbb
ror
aaa
xor
lods
lods
sbb
fistpl
mov
jno
movsl
sub
inc
loope
cli
test
inc
pop
cwtl
and
call
xor
sbb
dec
mov
lahf
and
cmpsl
push
and
jl
xor
mov
sub
ljmp
mov
fisubl
xor
sbb
or
repz
jecxz
or
stos
lret
mov
in
outsl
inc
popa
add
lahf
sti
mov
mov
les
gs
and
jb
adc
mov
sub
mov
pop
fistl
pop
jne
sahf
mov
mov
xor
rsm
mov
mov
and
xchg
xor
cli
xchg
add
mov
insl
or
ss
sti
jne
mov
inc
mov
mov
xor
adc
push
test
jbe
jns
faddl
out
xchg
mov
das
and
dec
sub
jnp
lret
pop
xchg
int
dec
mov
jp
mov
fmuls
adc
outsb
or
adc
mov
in
mov
inc
addb
pminub
lods
imul
mov
loopne
mov
lods
fisttpll
add
fsubrs
jmp
add
inc
sbb
ljmpw
fidivs
inc
or
rol
ret
cmp
imul
ret
fnstsw
sub
pop
lahf
testl
mov
xchg
push
jne
repz
cwtl
lcall
mov
adc
mov
and
pop
call
loope
sub
daa
aad
inc
mov
push
cmpb
mov
mov
xchg
adc
out
es
enter
mov
icebp
jl
inc
jecxz
fiaddl
das
orl
sbb
jns
sbb
cld
adc
pushf
pop
adc
xor
push
mov
jg
xlat
fisubrl
add
cltd
pop
test
inc
pop
std
mov
jno
and
adc
hlt
add
mov
ds
shr
in
pop
jb
sbb
push
or
xor
mov
inc
imul
fidivl
and
pop
inc
movsl
sti
negb
and
andb
vmread
into
adc
loop
in
inc
je
push
outsb
add
mov
push
clc
push
outsl
lock
mov
adc
cmp
cmp
sbb
lret
lea
iret
mov
or
fldt
cmp
addb
adc
xchg
push
cmp
rorb
in
mov
imul
mov
loop
push
cmpsl
jl
aas
scas
loope
ja
jae
pop
fdivrl
adc
out
out
xchg
mov
stc
mov
das
int3
icebp
push
mov
xchg
repz
sbb
aaa
or
aam
cmp
mov
push
out
ret
and
sbb
mov
rol
jl
sub
mov
adc
popf
and
mov
fucompp
fisubl
xor
xor
lods
or
xchg
movsb
and
repz
loop
jo
push
sarb
ret
jl
cmp
lret
mov
gs
outsl
repz
cli
cld
mov
adc
sub
test
sbb
repnz
mov
xor
sbb
or
inc
repz
and
cmp
mov
adc
mov
mov
push
repz
cmp
pushf
xor
pop
xchg
adc
inc
ss
cmp
pop
mov
cmpsl
pop
nop
fstpt
movsb
lret
ss
dec
xor
lea
mov
ficoml
xor
add
mov
enter
pop
das
femms
push
or
pop
cmp
les
cmpsb
pop
cmpsl
sti
or
xchg
xor
pop
ret
pop
loop
mov
ljmp
fstps
fidivs
add
ss
inc
sub
cwtl
xor
push
das
mov
fildl
arpl
inc
push
mov
lock
mov
adc
arpl
ret
xor
outsb
mov
cltd
shrb
inc
loopne
and
cltd
mov
fs
lcall
dec
xchg
push
cltd
imul
jp
data16
sub
push
fistps
mov
and
mov
lcall
int3
rcll
add
cmp
sbbl
mov
stos
fcomps
push
mov
sbb
mov
cmp
insb
insb
sub
xor
inc
stos
pop
movsl
mov
push
mov
add
into
pop
gs
inc
jno
cs
jg
icebp
xchg
es
les
jbe
or
insl
cmp
ljmp
adc
test
in
sub
push
sti
pushf
jmp
sahf
jne
mov
or
je
inc
dec
inc
mov
cmpsl
orb
enter
lret
loope
sbb
fsubrl
add
scas
jnp
mov
in
fs
adc
xchg
cmc
sub
xor
mov
in
inc
lock
out
cld
ffreep
adc
subb
dec
mov
adc
push
jae
lret
mov
mov
mov
jbe
ror
std
fcomip
inc
cmp
lock
push
es
pop
inc
inc
ja
lods
movsl
pop
jecxz
jmp
std
dec
push
mov
les
data16
stos
add
cwtl
subb
addl
dec
mov
stos
outsl
inc
mov
xchg
mov
pop
call
pop
scas
xlat
mov
inc
xchg
in
hlt
jb
popf
push
sbb
pop
inc
push
push
pushf
cs
test
mov
and
push
mov
in
cltd
rorb
outsb
add
adcb
xchg
sub
popa
sub
jle
ss
retw
inc
push
pushf
cmpsb
stc
ds
push
inc
in
mov
sbb
xchg
icebp
addr16
cmp
jp
or
das
and
inc
shll
aas
call
bnd
or
dec
fisubs
and
fldt
push
or
mov
clc
test
rclb
mov
push
inc
in
jp
push
adc
cwtl
add
cmp
in
in
mov
dec
lods
xlat
cwtl
cmp
jmp
shlb
loope
jmp
jnp
icebp
push
arpl
movsb
push
xchg
inc
and
jnp
test
enter
or
punpcklbw
add
aaa
xor
and
aad
sub
aam
test
movsl
add
add
jo
insb
lret
add
clc
lret
mov
cwtl
mov
cmpsb
push
or
or
ja
sub
fistpll
popa
sub
shrl
mov
jle
loope
in
out
out
addr16
adc
pop
inc
out
pop
adc
in
loope
and
lock
pushf
roll
jmp
enter
movsl
fs
push
lret
jns
jmp
fs
jne
jo
jmp
cltd
xchg
divl
fldt
add
cmp
mov
loop
repnz
xchg
movsb
inc
mov
lock
shlb
andb
stos
push
pop
in
jge
cli
ret
stos
js
pushf
inc
lods
push
fadds
dec
hlt
sub
push
mov
adc
pop
mov
nop
shr
sbb
stos
fwait
dec
fsts
push
adc
es
cld
adc
test
test
je
inc
or
xchg
sub
adc
jmp
jge
movsb
mov
mov
ss
mov
xor
fistps
cmp
xor
arpl
lret
subb
push
adc
sub
scas
xchg
shrb
mov
fldt
inc
ficoms
mov
mov
sbb
ss
xchg
xlat
cmc
push
in
sub
js
cmp
out
orl
in
popa
frstor
js
add
iret
ret
je
repz
adc
cmc
test
insb
cmpsl
popf
nop
pop
mov
push
mov
adc
repz
xchg
adc
sub
fisubrs
aam
jecxz
jb
or
mov
and
cli
jo
in
mov
in
mov
aas
cmp
into
test
fisubs
mov
jno
and
subb
and
pusha
dec
xchg
add
adc
fucomi
jge
sub
dec
xor
daa
outsb
mov
leave
mov
insb
addr16
aad
and
mov
pushf
and
dec
xchg
jne
jp
mov
fistps
aam
push
xchg
jg
jg
cmp
sarl
cs
mov
or
nop
stos
rcl
scas
jno
and
fidivl
movsb
jge
enter
and
test
push
int3
fimuls
pop
cwtl
insl
jmp
mov
add
inc
adc
js
cmp
add
icebp
xchg
cltd
push
fchs
xchg
jns
fstpl
rcrl
push
cmp
pusha
sub
xchg
or
lods
and
sub
sub
xchg
xor
movsb
xor
cmpsb
inc
in
jmp
push
ds
out
data16
push
xchg
xchg
in
adc
sbb
or
insl
push
cwtl
pusha
ljmp
scas
push
mov
lds
iret
mov
arpl
adc
arpl
push
aad
cmp
punpckhbw
gs
mov
cltd
int
cmp
xchg
mov
stc
push
rolb
lock
pushf
stos
inc
cmp
sbb
sub
add
jbe
mov
dec
int3
push
out
movsb
in
add
pop
sbbl
adc
jbe
imul
test
ret
ss
pop
aas
cli
sar
das
test
aad
sbb
cmp
push
mov
rcrl
mov
fs
popf
add
mov
mov
jle
imul
cmp
dec
mov
in
xchg
lods
jnp
push
inc
cmp
rclb
hlt
or
in
xor
testb
sahf
aas
dec
add
pop
add
jne
popa
out
and
fsubr
adc
mov
mov
andl
or
icebp
adc
aad
or
and
sbb
mov
mov
in
pop
cmp
subl
mov
jge
push
lods
pop
ljmp
inc
std
ljmp
fmuls
xchg
jl
lods
pop
fidivrs
insl
dec
dec
pushf
mov
enter
pop
clc
and
adc
js
das
push
imul
stos
xchg
inc
and
sub
loopne
cli
loope
jmp
xchg
dec
fs
sahf
dec
sbb
mov
cmc
notl
pop
das
jmp
sub
test
jns
divl
and
adc
subb
xchg
and
push
pop
adc
push
lods
int
fimull
mov
push
shlb
mov
stc
call
and
movsb
add
and
pushf
lea
test
or
test
jmp
sti
push
cmp
or
pop
pop
dec
sub
cmp
xor
mov
cmpsl
in
xchg
or
imul
jecxz
mov
dec
ja
enter
hlt
xlat
sbb
sarb
inc
sub
xor
xchg
pop
outsb
in
clc
mov
mov
xchg
imul
cmp
dec
jmp
and
stos
cmp
mov
lret
mov
or
sbb
loop
add
out
push
adc
or
jno
pushf
adc
or
mov
mov
adc
in
inc
sub
fidivs
xchg
and
cld
add
jmp
push
mov
imul
popf
cltd
es
mov
pop
or
xor
dec
into
xchg
enter
jbe
pop
clc
sahf
imul
jmp
insb
inc
xchg
pusha
ret
mov
mov
jbe
push
and
add
movsb
lods
cli
pop
sti
fnstenv
repnz
lods
lret
dec
clc
or
or
and
mov
mov
lds
or
and
xchg
insl
fcoms
xchg
loopne
xchg
xchg
cli
inc
les
fnstcw
int3
xchg
pop
outsb
sub
inc
idivl
push
xchg
ljmp
inc
int3
cmp
std
mov
fbld
pop
mov
fildl
cmpsb
pop
push
sbb
pop
in
into
mov
rolb
movd
lods
xor
inc
jge
andb
iret
out
dec
jae
add
lcall
mov
rorb
movsb
mov
imul
and
cmpsb
call
dec
jge
or
popa
push
mov
xchg
jne
push
dec
test
jne
xchg
dec
xchg
ds
cmpsl
xchg
add
dec
mov
jo
push
fadds
xchg
dec
aaa
jo
jno
mov
cmc
inc
test
jl
or
sub
fs
mov
adc
lcall
jnp
inc
mov
push
cmp
add
or
insb
movsl
or
in
popa
mov
pop
lahf
mov
out
popl
lds
mov
mov
imul
or
push
inc
repz
cmp
mov
mov
mov
sti
js
stos
test
mov
lcall
inc
movsl
push
jae
dec
pop
and
lods
jle
push
xor
xchg
out
loope
mov
dec
nop
sub
cltd
push
ret
and
or
push
xchg
ret
lods
das
cmp
lea
movsl
repz
adc
jb
inc
fwait
jns
sbb
pop
lret
sbb
cmovae
mov
imul
insl
mov
dec
cmp
sub
sbb
mov
scas
sub
insb
jbe
push
imul
daa
stc
popa
jne
push
ret
jo
mov
pop
iret
cmp
mov
js
lea
mov
rol
sub
adc
mov
sub
mov
xchg
test
push
ljmp
scas
and
fs
adc
lea
inc
lret
fwait
adc
push
rcrl
mov
pop
loope
sub
adc
mov
or
cmp
sbbl
aad
lcall
pop
je
cltd
push
ljmp
iret
mov
inc
lds
aam
aad
ds
test
mov
or
or
xchg
enter
testb
push
fsubl
call
aaa
fidivl
xchg
movsb
fs
jns
leave
incl
adc
push
xchg
mov
fldt
cld
add
xchg
add
mov
sbb
push
icebp
and
int3
dec
pop
sbb
loopne
pop
xor
push
cltd
pop
jne
in
out
lea
lret
mov
add
xlat
dec
sub
dec
gs
cmp
sub
aad
nop
cmp
add
fdecstp
sbb
xor
aas
out
loope
popa
jp
int3
cltd
jno
push
pop
loop
int
roll
mov
lret
bound
xor
int3
sub
les
nop
cltd
popl
inc
popa
pop
jle
inc
ss
push
xor
pop
push
test
sbb
mov
mov
jae
jge
loope
mov
mov
aad
sbb
mov
sbb
test
cmp
daa
or
sub
cmp
or
out
jno
dec
jb
jns
sub
add
in
mov
dec
test
jg
lods
push
icebp
inc
jae
dec
cmp
jmp
rol
mov
cmpsl
int3
pop
push
mov
sub
ss
jmp
push
fwait
rorb
and
hlt
jmp
pop
nop
bound
test
scas
mov
push
lds
push
cmp
outsb
sub
jae
xchg
add
cmp
cmpsb
cmp
or
sub
loope
cmpb
add
mov
mov
bound
xor
mov
mov
vmaxpd
ds
add
in
push
insb
aas
cmp
mov
call
adc
mov
jbe
dec
data16
xchg
adc
inc
loope
xchg
jno
pop
mov
dec
and
ss
fsubs
adc
pop
sub
jg
add
xor
les
pop
push
js
mov
mov
fwait
sub
jp
and
in
inc
pop
mov
incb
flds
imul
dec
iret
stos
and
ja
mov
pop
sub
lock
aad
jns
mulb
push
xor
xor
jecxz,pt
imul
cmp
stos
mov
cmp
mov
fsub
xchg
xor
pop
push
dec
sbb
push
movsb
jge
mov
inc
dec
or
clc
add
add
ficoml
push
orl
lea
enter
pusha
jno
or
fcoms
xchg
int
push
push
lahf
aam
adc
outsl
sub
adc
jo
mov
notl
mov
xchg
ret
mov
push
sbb
xchg
shrb
lret
sub
cmp
push
out
mov
out
cmp
rcrl
jnp
mov
push
and
aam
push
xchg
sub
popa
jecxz
or
in
or
outsl
data16
inc
jge
sbb
int
addr16
mov
iret
push
pusha
inc
lock
shl
mov
push
inc
xchg
mov
imulb
cwtl
pop
cmc
sahf
mov
arpl
and
ds
rcrl
sahf
mov
or
or
push
sub
leave
xchg
jb
cmp
out
and
sbb
mov
lret
ret
xor
xchg
ja
push
jno
pop
test
inc
xor
ret
enter
ja
pop
sub
cld
jg
insl
pop
cmc
inc
adc
sbb
mov
pop
pop
ljmp
mov
mov
mov
setl
into
lock
add
dec
pop
push
loope
fcomps
divb
out
outsb
mov
adc
out
ds
xchg
push
mov
inc
jne
pop
mov
lock
std
inc
mov
inc
leave
jl
push
mov
dec
push
mov
push
out
mov
mov
adc
or
decl
mov
dec
add
shll
or
cmpsl
popf
push
jo
sti
jecxz
xlat
ljmp
and
outsb
push
push
cli
or
adc
jnp
out
push
cmpsl
leave
mov
xor
lods
mov
mov
fistl
mov
repz
fisubl
outsb
mov
mov
inc
mov
add
mov
lcall
shr
pop
test
push
jl
mov
sub
clc
loop
dec
add
push
cwtl
stos
inc
xorl
cwtl
loope
or
mov
jae
push
jb
pop
push
jle
into
jmp
imul
cwtl
jle
mov
insl
ljmp
push
pop
xchg
mov
lock
shr
pop
lods
out
outsb
stc
or
mov
xchg
sub
cmp
loopne
js
out
jle
jne
dec
adc
mov
or
push
gs
js
sub
adc
adc
or
into
popa
cmp
dec
mov
fimull
sub
dec
fiadds
mov
stos
andb
push
ja
fldt
and
insb
or
xlat
push
loope
daa
sbb
rclb
leave
dec
push
cs
arpl
xchg
pop
rcrb
push
popl
or
dec
cs
rorb
arpl
mov
pop
ss
jp
jbe
and
psrlq
jge
mov
jge
mov
pushf
decb
and
clc
fmull
add
punpcklbw
xor
int3
enter
cmp
pop
into
xchg
cmp
add
adc
dec
push
das
add
aas
jl
fwait
add
add
mov
cmp
adc
jecxz
mov
ret
inc
jg
aaa
mov
xor
test
rcrl
lret
clc
fmuls
js
cmc
cmp
xor
idiv
jg
xor
inc
aad
cmpsb
xchg
lods
roll
mov
ficomps
lret
icebp
sbb
jb
inc
into
fldcw
movsb
jecxz
or
int
xor
leave
loope
inc
jno
mov
mov
inc
pop
dec
mov
push
sti
mov
ret
mov
mov
sbb
aas
pop
mov
sbb
mov
ret
cmp
push
nop
mulb
test
addr16
dec
fidivs
imul
jg
mov
or
lret
mov
sub
xchg
inc
clc
and
push
jl
mov
xor
jecxz
dec
sbb
xchg
fwait
js
arpl
movsb
jae
jae
inc
inc
xor
and
inc
ljmp
jl
sub
sbb
pusha
rorb
cli
jns
addb
jg
repz
mov
xorb
adc
shll
adc
xchg
mov
std
xchg
xor
sbb
fcmove
jp
jns
mov
pop
adc
ficompl
lret
add
xchg
js
lret
cld
push
pop
mov
jmp
jg
and
mov
idiv
xchg
ror
arpl
adc
lods
mov
pop
shlb
adc
xor
mov
inc
pop
mov
or
cmpsl
pushf
or
insb
ljmp
loope
fmull
inc
jbe
fbld
shr
out
test
lods
loop
mov
xchg
dec
dec
icebp
adc
mov
lods
sbb
ja
push
cmp
xchg
cs
fcompl
cmpb
fsubl
ja
sarb
cli
notb
mov
dec
push
sbbb
js
pop
stos
out
jno
pop
in
sbb
and
and
sub
loope
lret
cmp
dec
arpl
cmpsl
inc
lock
sbb
in
mov
repnz
inc
loope
jmp
sub
hlt
std
push
jbe
cmp
and
jecxz
inc
mov
xor
mov
sbb
out
pushf
and
cltd
mov
outsl
fwait
shll
sub
cmp
fisttpll
fidivl
xor
jne
dec
popf
pop
notl
out
fnstcw
notl
mov
call
xor
dec
cwtl
xor
mov
test
les
ret
mov
sbb
icebp
cltd
adc
xchg
js
sub
or
into
mov
lea
add
fnstcw
in
mov
cwtl
xchg
lods
aad
loope
dec
and
add
cmpsl
mov
clc
mov
out
ljmp
mov
push
loope
js
das
sub
test
xchg
or
dec
daa
shll
jmp
mov
aad
push
ja
add
inc
jg
fdivrs
shlb
cwtl
out
cmp
push
mov
leave
sub
or
dec
xchg
jmp
icebp
int
cmpl
ret
xchg
mov
adc
xchg
mov
sbb
mov
inc
mov
je
shrb
cmpsl
sub
adc
push
das
xor
fcmovu
mov
lds
dec
jo
arpl
leave
add
aad
mov
mov
xlat
in
cmp
lods
punpcklwd
push
cli
xor
cmpsb
mulb
fstps
cwtl
test
pop
or
popf
imul
scas
ret
push
bound
jae
ret
push
sub
mov
dec
insb
testl
sub
cmpsl
fxch
dec
and
inc
repz
sub
xchg
in
iret
out
mov
cmpl
or
rcl
fldcw
fnstsw
in
aas
cmp
mov
loopne
dec
inc
add
aad
xor
mov
insb
dec
mov
out
push
jg
and
cli
popf
push
sub
pop
stos
mov
incb
sub
leave
ss
pop
jnp
cs
in
or
imul
movsl
push
in
neg
push
hlt
dec
mov
push
push
sahf
xchg
sub
mov
mov
les
outsb
lds
cmp
out
sub
or
js
adc
add
inc
dec
movsb
addr16
call
or
adc
pop
mov
shlb
sbbb
insb
sub
out
xchg
push
jo
dec
push
pop
pusha
adc
pop
or
insb
xchg
inc
fs
aas
arpl
mov
js
fisubl
sbb
fadds
addl
xchg
lock
adc
adc
push
popl
and
lret
das
add
sub
cmc
icebp
cmp
add
out
pop
inc
push
and
sub
sbb
mov
add
or
sub
pop
or
gs
das
xor
jg
jb
cltd
jmp
cmpsb
inc
iret
pushf
cmp
mov
pop
in
mov
fwait
inc
out
pop
rclb
lret
mov
cmpsl
lret
dec
stos
bnd
pop
dec
xor
lcall
clc
jne
push
cmc
push
ds
pop
cltd
aad
dec
dec
jnp
pushf
out
stos
pop
out
xor
sbb
clc
movsb
test
lcall
sti
in
pop
push
mov
lea
scas
sbb
mov
sti
in
inc
sahf
shll
jo
fadds
mov
pop
push
pop
clc
stc
add
dec
adc
push
dec
xchg
cmp
mov
das
push
stos
mov
push
mov
test
dec
or
or
cwtl
pop
push
pop
scas
xor
lahf
mov
imul
adc
repz
daa
pop
out
inc
daa
ret
add
outsb
push
fucomip
mov
insb
pop
imul
push
test
add
jl
mov
orl
xchg
cld
lods
adc
pop
xchg
clc
ss
bnd
icebp
mov
and
inc
rorb
ljmp
sti
je
fisubs
ret
jg
adc
jnp
mov
test
ds
into
push
pop
push
xor
mov
loopne
fistps
mov
xlat
shlb
xchg
bound
lahf
outsl
push
mov
push
lds
frndint
xor
and
inc
sbb
out
jne
cltd
and
push
cmpsl
in
cmp
stos
jnp
repz
or
mov
and
rcrb
fcomp
or
les
push
inc
test
xchg
jo
fidivl
add
std
inc
add
notb
imulb
sbb
pop
fnstsw
cmc
call
popf
cmp
and
fisttps
cmpsb
movsb
inc
sub
sub
movsl
adc
aam
cltd
outsl
mov
xchg
jmp
into
dec
lahf
out
loopne
mov
icebp
out
testl
cmpsl
add
in
jecxz
jecxz
jge
inc
sub
pop
std
inc
int3
stos
imul
negb
push
orb
or
sti
or
stos
or
stos
jge
or
arpl
lcall
mov
rcrl
lahf
sbb
pop
push
xor
mov
inc
leave
and
shrl
shll
dec
rcll
mov
sbb
mov
imul
xchg
test
and
adc
xorb
add
je
push
xchg
inc
pop
enter
and
aam
aas
lods
and
mov
rcrb
mov
xchg
fisttps
jno
jne
cmp
push
adc
mov
cmp
dec
and
fistps
sub
push
adc
cs
jg
fbstp
mov
fwait
xchg
in
mov
mov
mov
in
or
jge
cltd
stc
pusha
fimull
rclb
xchg
dec
cli
dec
cld
cmp
inc
std
lds
in
imul
lods
dec
shrl
aad
pop
adc
data16
insl
xor
out
inc
xchg
data16
in
data16
inc
or
ljmp
cmc
lret
dec
fstps
xlat
pop
push
or
xor
lret
lock
dec
add
movsb
xor
push
adc
xor
mov
ss
fdivrs
aam
outsb
std
dec
pop
mov
xchg
mov
add
dec
pop
lahf
push
cmp
pop
xchg
push
in
pop
push
push
or
ret
push
test
cmp
nop
cwtl
movsl
into
mov
and
pusha
cmpsl
sti
push
mov
mov
sbb
xchg
xor
push
jo
lods
in
mov
lcall
and
test
adc
mov
mov
dec
lds
xchg
jnp
cli
int
jmp
ss
lahf
mov
sub
fdiv
rolb
cmc
in
test
rolb
cld
js
popa
sarl
pop
lret
and
sbb
dec
jge
notl
mov
mov
loopne
mov
add
cmpsl
push
and
imul
push
xchg
stos
or
push
sub
and
push
mov
mov
or
loop
jg
inc
dec
or
ror
adc
popa
add
add
xchg
mov
mov
shll
out
jmp
add
rol
jbe
add
add
ss
xor
retw
rclb
mov
inc
sbb
cmp
mov
and
testl
repz
inc
ret
jnp
ret
push
roll
mov
out
jnp
data16
xchg
mov
xchg
xor
je
xchg
xorb
xchg
xchg
outsb
mov
test
fstpt
je
out
mov
sbb
js
xchg
test
jne
mov
jge
and
lcall
out
addr16
push
int
push
xor
cld
cmp
push
inc
cmc
test
xlat
xor
mov
or
push
test
xor
cmp
lahf
jecxz
push
imul
cs
cmp
scas
jae
fldl2t
mov
mov
lahf
and
xchg
sahf
push
fistps
cmp
repz
xor
jns
dec
push
negl
jne
movsb
in
pop
or
cld
jle
stc
cmp
cmp
pop
shr
test
dec
jbe
lret
ret
xchg
sarb
dec
inc
stos
dec
subl
clc
mov
movl
cli
pop
and
popf
cmpsb
loop
push
jae
jno
insl
je
je
into
adc
in
std
dec
mov
leave
add
dec
cmpl
aam
mov
cmp
jb
xlat
lahf
xchg
push
push
loope
lods
mov
bound
mov
mov
pop
inc
jbe
addr16
push
mov
imul
pop
mov
or
cmpsl
jmp
lock
cmp
jmp
add
into
mov
pop
xlat
sbb
cmp
push
xor
xchg
mov
mov
mov
inc
lret
int3
lods
mov
mov
popa
mov
or
outsb
add
pop
cli
lods
scas
jle
pop
call
daa
fidivrl
inc
push
inc
push
cmp
mov
xchg
mov
dec
inc
bound
testl
cmp
dec
ja
jno
shl
and
popa
rcrl
push
dec
dec
test
push
fmull
mov
cwtl
dec
mov
in
outsl
in
xchg
pop
inc
jae
pop
sarb
dec
lock
xlat
mov
pop
push
repnz
pop
rol
pop
inc
scas
inc
adc
icebp
jae
and
sbb
fwait
inc
mov
add
xor
fstps
stos
pop
out
arpl
lahf
xchg
pop
or
jg
scas
scas
enter
aad
xchg
dec
pop
icebp
scas
ret
sub
push
subb
jns
cmpsl
adc
xor
and
pop
test
lret
jp
dec
ljmp
jb
xor
mov
loope
shl
aaa
xlat
nop
xchg
cmpsl
add
adc
mov
shl
cmpsb
mov
push
adc
setne
pop
dec
add
mov
stc
xor
xor
and
in
fisttpl
mov
int3
lods
jl
jae
mov
aad
nop
scas
sub
les
loope
cmpsb
cld
dec
addl
mov
or
adc
nop
cmp
mov
pop
ja
inc
sbb
out
in
shll
inc
mov
pusha
mov
popa
mov
xchg
fidivl
mov
xchg
js
inc
sub
popf
scas
pushf
pop
cmpsl
pop
leave
xchg
invd
adc
sub
or
add
lahf
in
jmp
xchg
std
xchg
cli
std
cld
cmp
insl
inc
test
mov
je
dec
scas
mov
clc
adc
and
pusha
aaa
and
ret
stos
pop
pop
mov
or
leave
and
aam
ja
js
enter
mov
fwait
mov
gs
push
jp
and
stos
push
push
pmullw
sub
pop
andb
and
into
xor
sub
aaa
or
out
lock
inc
xorb
xchg
mov
imul
clc
lea
xor
inc
mov
jge
aam
jmp
sbb
fnsave
dec
lcall
mov
cmpb
mov
jno
leave
fadds
xchg
dec
out
decb
scas
loope
pushf
outsb
jae
cmp
sub
enter
pop
mov
jae
repnz
cmpb
mov
xor
add
lock
dec
fistps
push
movsl
gs
rclb
lds
inc
cmpsl
int3
test
push
in
jae
popa
add
aad
or
mov
aas
sub
push
scas
rcr
shl
lahf
mov
mov
aad
roll
lods
iret
pop
loope
shrl
mov
into
fistps
pop
mov
pushf
mov
leave
xchg
pop
fwait
pop
sbb
push
lret
pop
shl
add
lds
add
or
xor
adc
cmp
adc
insl
out
jnp
xchg
insl
imul
notb
cltd
data16
rolb
add
cmpsl
push
mov
daa
fildll
jmp
cld
cmp
jnp
sbb
dec
pusha
push
hlt
adc
lock
sarb
and
int
xchg
sub
ss
adc
inc
pop
cwtl
pop
mov
dec
add
pop
adc
mov
clc
inc
push
scas
pop
mov
rcll
add
clc
lret
leave
push
inc
aas
pop
mov
cmp
aad
movsb
lds
sub
and
add
stc
mov
in
scas
inc
les
popa
dec
mov
enter
add
pop
and
test
popf
inc
dec
push
push
mov
xor
ljmp
shlb
int
sbb
cltd
sub
shl
shrl
loop
in
sbb
cmp
push
jno
xor
xor
xchg
popf
orb
fcmovbe
popf
mov
cld
cmpsb
mov
pop
loope
mov
outsb
dec
cld
adc
jbe
jo
popa
mul
dec
inc
mov
fldt
mov
xchg
lds
arpl
mov
enter
jns
adc
roll
imul
xor
cmovnp
or
inc
pop
arpl
sub
dec
cmp
push
addr16
stc
ds
cmp
popa
shrb
and
mov
xchg
les
test
inc
push
fsubl
xchg
mov
rclb
fwait
inc
mov
sbb
adc
outsb
dec
sub
fstpl
aam
mov
xchg
test
je
shr
fidivrl
movsl
outsb
aaa
test
jp
lret
mov
daa
loop
cmpsl
lcall
incl
popa
leave
repz
xor
test
mov
cmp
mov
repz
jmp
inc
jns
dec
mov
sub
shlb
or
popf
or
add
and
outsl
cltd
and
js
dec
dec
push
inc
xor
scas
cld
sahf
enter
pushf
inc
xor
sub
rcll
jge
xchg
push
xor
jb
aaa
lds
inc
sub
sub
scas
pop
sbb
fisubrl
pop
pushaw
sbb
pop
pop
or
dec
mov
jnp
test
jle
ljmp
cmp
push
idiv
fnstsw
lock
shrb
xchg
call
insl
sbb
lods
mov
in
adc
dec
pusha
repz
dec
popf
enter
fs
push
mov
popf
fldl
add
nop
cwtl
jae
push
int3
adc
lds
mov
je
mov
ja
jmp
jecxz
jb
cmp
jmp
push
outsl
lret
push
adc
inc
mov
in
jns
test
push
bound
xchg
fwait
popa
mov
rorl
jle
aad
cli
addl
dec
sarb
repnz
test
cmp
dec
or
mov
and
in
fimull
xchg
das
mov
mov
ret
lods
and
sub
js
lea
rol
push
int
loop
dec
push
push
cmpsl
jns
aaa
mov
cld
ljmp
or
cli
push
adc
inc
popa
cmp
cmp
jle
inc
in
mov
add
mov
stc
jge
shlb
arpl
inc
lods
mov
jecxz
cmc
and
pop
popf
mov
pop
jae
jb
push
push
into
push
add
rorl
xor
sahf
subb
jp
mov
jge
enter
repnz
mov
inc
sub
stos
and
and
scas
dec
push
rorb
and
sbb
clc
mov
jl
aad
adcl
jno
ljmp
loope
popa
sub
lcall
fists
notl
inc
sbb
daa
lock
mov
cmp
mov
in
repnz
and
xchg
ja
mov
sarb
sbb
jnp
xor
cltd
pop
pushf
and
or
popa
push
pop
inc
inc
rorl
push
mov
shrl
mov
jae
mov
stos
test
sbb
fstps
in
ds
adc
mov
xlat
out
arpl
mov
les
jne
ljmp
adc
rorl
pop
or
push
call
movsl
or
mov
or
cmp
xchg
loopne
jp
loope
push
ja
mov
daa
and
out
out
or
mov
mov
leave
mov
inc
movsl
pushf
or
cld
push
lods
cmp
sub
push
mov
ja
add
hlt
mov
jne
mov
push
iret
and
sbb
adc
sahf
insl
push
shll
push
jl
lods
cmp
call
mov
mov
ss
addr16
sbb
cmpsb
jge
jns
pop
repnz
ja
sbb
cmc
ret
push
rcl
dec
int3
mov
cmp
lahf
mov
lret
gs
xchg
add
call
pop
xor
pop
outsl
xlat
imulb
pop
ja
scas
inc
xor
and
xchg
or
pop
mov
cmpsl
icebp
fstps
and
repz
mov
lock
stc
pop
xchg
mov
inc
pop
cld
test
xorl
jge
idivb
xchg
or
sub
pusha
push
lret
inc
add
iret
fucomip
jg
rol
push
inc
orl
cltd
ss
or
or
enter
mov
cmpsb
ljmp
cmp
popf
lret
add
nop
idivb
lock
imul
in
test
lret
push
repz
ljmp
sbb
mov
clc
xor
push
out
ljmp
xchg
cmp
int
add
test
in
xchg
xlat
lret
push
mov
push
push
ja
mov
pusha
sub
jl
xchg
sub
in
shlb
stos
xor
push
add
cmc
xchg
popa
add
add
adcb
int3
lods
fistl
push
xchg
popf
into
cmp
stos
movsb
mov
lcall
or
or
fstps
loopne
and
imul
pop
cmc
stos
shll
mov
mov
nop
gs
jp
fstl
lods
pop
mov
cmpsl
sub
push
mov
mov
loope
aad
jb
push
ret
fnstsw
jp
data16
jae
in
jecxz
mov
dec
js
dec
and
pop
and
add
inc
adc
pop
les
dec
int3
dec
add
and
xor
or
dec
clc
movsb
xchg
aas
rcll
js
inc
fisubrs
test
mov
ja
mov
repz
out
ja
std
addb
lret
sub
push
dec
dec
xor
push
test
cmp
mov
sbb
add
lcall
dec
pop
adc
mov
jle
mov
push
insb
lods
test
rorb
shl
fs
pop
pushf
or
pusha
in
xor
sbb
mov
bnd
jg
cmpsl
fwait
repz
cmpsb
ljmp
cmpsb
dec
lahf
push
fadd
push
out
icebp
sub
mov
call
adc
dec
int3
cs
lods
xchg
jnp
stos
shl
pop
jb
and
and
cmp
mov
inc
aad
push
std
jge
les
fsubrs
sbb
sub
mov
jg
mov
daa
ret
mov
movb
mov
test
mov
cmp
pusha
sarb
faddl
inc
pop
addr16
fstl
test
popf
in
dec
in
adc
mov
sbb
mov
fdecstp
das
lods
mov
mov
sub
pop
sbb
add
dec
mov
mov
leave
mov
inc
call
sbb
in
sub
xor
or
inc
addr16
shll
add
pop
cltd
sbb
lods
aas
mov
mov
mov
fst
pop
aam
lock
sub
in
loope
adc
loop
add
decl
aad
ljmp
popf
xchg
dec
lea
push
sbb
repz
aas
lret
iret
repnz
xor
rcrl
jecxz
add
jp
imul
cmp
fptan
add
aaa
mov
pop
jnp
aam
adc
adc
mov
xor
mov
sbb
fldl
push
cltd
jbe
sub
jnp
sahf
mov
and
call
inc
mov
xchg
sarl
inc
fs
jl
mov
hlt
orb
pop
sub
bound
in
jno
jp
cs
loopne
arpl
jne
jp
xchg
test
pop
jecxz
pop
scas
cmp
fimull
outsb
sub
mov
xchg
cs
xchg
or
jge
xchg
cmp
xor
leave
or
ljmp
pop
std
dec
jecxz
cmp
arpl
mov
ja
mov
orl
push
jge
es
mov
in
inc
inc
icebp
add
call
adc
xlat
pop
popa
jp
pop
xchg
cltd
shrb
es
icebp
adc
aad
mov
shlb
cld
xchg
mov
mov
into
and
jl
loope
mov
add
jns
subb
xor
mul
xchg
sbb
jne
dec
inc
dec
js
cltd
pop
xor
cltd
stos
sub
push
mov
jle
mov
xchg
xor
imul
lock
sbb
fmulp
cmp
sbb
stos
dec
fwait
inc
aam
lock
jo
stc
das
xor
aad
xor
and
scas
out
cmp
xchg
call
cltd
push
push
mov
hlt
mov
jo
mov
daa
xor
stos
stos
insb
inc
test
sbb
and
mov
jmp
push
mov
fisttpl
lret
sub
mov
stos
jns
je
adc
sub
loope
mov
push
jb
cld
jbe
dec
adc
sbb
inc
pop
mov
enter
dec
fcmovne
js
sarl
jo
shlb
push
mov
nop
mov
sub
lret
popa
push
mov
sbb
ficompl
jbe
sti
mov
std
loopne
dec
fistpl
test
dec
fldcw
jp
stos
fsubl
aam
and
jle
jne
outsb
sub
aad
pop
push
cmp
cld
and
lock
mov
ljmp
sub
pusha
adc
test
inc
jecxz
call
adc
lfs
mov
inc
into
jno
cmp
dec
inc
cli
mov
push
fs
in
test
test
and
dec
inc
in
xchg
xlat
pop
xchg
pop
arpl
sub
in
lret
or
dec
sbb
je
inc
test
sub
out
cmp
andl
std
dec
icebp
pushf
dec
call
mov
cmc
xor
sbb
cmp
mov
xlat
fwait
mov
or
jo
inc
inc
dec
test
scas
lret
out
cli
and
inc
sbb
lods
sbb
jno
jno
or
repz
pop
dec
push
inc
fidivrs
push
xor
into
popa
mov
sbb
add
and
sarb
xchg
lret
fldt
sbbb
or
in
insl
or
loop
xchg
jg
out
mov
ja
jge
stc
and
jp
stc
in
cmp
pop
hlt
cmpl
jns
mov
into
mov
push
lods
and
out
push
add
mov
add
mov
sub
or
outsl
stos
cmp
fwait
cwtl
insb
fisubs
out
push
adc
stos
mov
daa
fldl
push
fs
fs
jb
add
and
mov
sub
fsts
mov
xchg
mov
push
jecxz
fwait
aam
fsubs
cmp
popf
dec
xchg
addr16
push
dec
rclb
cmp
jmp
or
jbe
aam
scas
jle
add
push
inc
in
mov
andl
push
daa
sub
xchg
pushf
cmpsl
lret
or
jbe
jmp
repnz
pop
outsl
out
sahf
and
mov
loope
xor
je
or
adc
jl
shrb
in
pop
addr16
enter
subl
xchg
mov
test
pop
setl
lcall
mov
popa
jmp
sub
nop
or
lret
pop
or
fisubl
out
lret
out
sbb
inc
cmp
rcll
jnp
and
mov
and
pop
fbstp
stos
sbb
push
loopne
xchg
ja
aad
dec
shlb
out
fldlg2
push
inc
pop
stc
test
sub
push
fistpl
xchg
std
lret
leave
in
iret
cli
das
test
pushf
pop
pushf
mov
sub
jae
inc
pop
out
mov
flds
lret
cmp
push
loopne
es
jns
sbb
aad
jmp
sbbl
lock
cmc
stos
icebp
mov
xor
jg
leave
pop
jo
dec
add
into
adc
daa
pop
adc
shll
outsl
or
nop
adc
mov
xor
push
or
stos
lds
fnsave
imul
mov
mov
stos
adc
jmp
data16
outsb
or
jge
push
repz
dec
pop
fsubr
popa
mov
outsl
fidivrs
mov
pushl
fildl
dec
jmp
pop
jbe
fiadds
stos
mov
fcoms
fiadds
sub
lcall
test
push
inc
push
testb
cmpsb
mov
in
fcmovbe
scas
mov
jl
movsl
fstpl
xlat
xor
xor
subb
psrlw
and
hlt
fldt
ja
mov
repz
inc
or
cmp
movsb
and
pop
pop
xchg
lcall
enter
arpl
push
std
pop
pop
outsl
ljmp
adc
mov
sti
jge
mov
push
xchg
xchg
mov
sbb
pop
mov
xchg
push
pusha
loope
pop
jle
or
adc
xchg
cmc
arpl
aas
jb
sub
jb
js
bound
incl
cltd
adc
dec
int3
xor
mov
mov
cmp
leave
dec
inc
addr16
mov
int3
adc
cmp
movsb
push
js
and
mov
jno
push
popa
push
jno
insl
stos
cmp
repnz
inc
into
icebp
xchg
mov
inc
and
mov
add
inc
subl
cmp
in
jl
add
sub
jns
jle
loopne
aad
and
enter
mov
xchg
cmpsl
mov
pop
jl
push
jbe
mov
add
inc
nop
mov
sahf
addb
clc
jb
repnz
cmp
mov
jg
sub
in
ret
pop
int3
inc
iret
push
lds
push
xor
and
push
pop
outsb
push
and
mov
dec
addb
mov
enter
fdivrl
mov
ja
cwtl
frstor
inc
es
jg
dec
mov
mov
jmp
mov
and
arpl
jnp
fistps
out
ljmp
or
sbb
ret
movsb
add
and
test
iret
inc
sub
ret
arpl
test
pop
data16
adc
mov
fs
scas
lahf
scas
jnp
and
jle
scas
ret
or
idivl
jno
mov
fcmovnb
pop
push
jne
inc
add
repnz
inc
or
inc
lock
in
and
loope
dec
lds
sahf
xchg
mul
sbb
dec
dec
jmp
dec
mov
jmp
push
jnp
stc
or
jae
xor
mov
subb
push
mulb
xchg
sbb
sahf
sub
mov
rcrl
je
xchg
cwtl
sti
dec
pop
repnz
rorb
pop
push
mov
int
adc
mov
xchg
jbe
push
xchg
and
fisubs
nop
test
cmp
fwait
ret
push
popf
pop
xchg
insl
in
ss
jmp
es
fists
nopl
cs
cmp
out
adc
andl
clc
fisttpl
pusha
outsl
ljmp
xor
mov
daa
sbb
lret
xor
cmc
pop
daa
aad
sbb
sbb
cltd
mov
jnp
jae
cli
push
xor
out
jle
lahf
mov
xchg
fsubp
and
icebp
cwtl
shll
xchg
imul
fistl
pop
adc
jb
sahf
mov
adcl
fs
push
pop
pop
mov
sub
mov
sub
jb
call
xor
cmp
push
jmp
xorl
loopne
or
aaa
dec
add
jo
fld1
cmp
xchg
xchg
xor
or
fcoms
inc
add
nop
stos
out
dec
mov
bound
sub
stos
lahf
jmp
test
test
push
mov
jmp
repnz
sbb
mov
mov
ret
aaa
mov
bound
push
jns
mulb
mov
sub
mov
pop
or
fistpl
dec
dec
test
xor
lret
mov
movsl
mov
out
imul
mov
cmp
pop
dec
jmp
mov
push
addr16
std
or
in
nop
xchg
adc
hlt
pop
cmpsb
or
sub
xor
in
icebp
mov
cmpsl
fsubl
aaa
aad
sbb
ret
and
pop
lods
int3
xlat
and
inc
call
and
push
outsl
ret
or
nop
shrb
in
jecxz
test
into
imul
int3
push
add
mov
cmp
dec
xor
and
insb
xor
loopne
jo
pushf
push
cld
mov
dec
cmp
xor
mov
xchg
xchg
leave
aad
stos
pop
pop
mov
mov
jle
inc
inc
ss
pop
mov
add
adc
in
push
jge
int3
shlb
mov
jno
pop
xchg
fcomi
test
aas
xchg
bound
cld
jae
inc
sti
filds
xor
xchg
mov
or
sub
outsb
mov
pusha
rep
mov
cmp
repz
paddq
add
dec
outsb
test
aam
flds
subl
test
sbbl
or
into
in
fcomp
out
or
dec
lahf
mov
adc
mov
aam
dec
xchg
push
bound
fwait
insb
addl
sbb
add
jl
and
stc
and
mov
daa
inc
sub
shrb
fldt
bound
popa
test
inc
sbb
ror
pop
or
pop
sahf
nop
rorl
xchg
dec
repnz
std
cmp
jecxz
mov
push
scas
push
lahf
add
mov
cwtl
rcrl
dec
dec
cmp
int3
jbe
hlt
mov
dec
adc
outsl
outsl
test
push
aam
xor
jae
test
and
mov
stos
loop
fwait
xchg
mov
insl
xlat
fsts
mov
repz
sub
ror
and
sub
jge
vcvtdq2pd
pop
rorl
movsb
bound
jge
mov
push
outsb
push
push
leave
mov
xor
fsubrl
pop
lea
sub
es
out
push
cmp
jae
xor
fsub
iret
jno
sbb
mov
pop
cmp
shlb
ret
jmp
loop
aas
test
imul
xor
dec
sahf
je
inc
and
jne
insb
and
stc
ret
push
xchg
rclb
fs
jnp
sub
sbb
adc
sub
jp
or
push
das
mov
jae
or
mov
push
and
aaa
jecxz
push
xor
fmul
push
in
pop
pop
mulb
adc
adc
movsl
fdivrs
dec
push
outsl
fcoms
cmp
adc
clc
and
pusha
pop
aas
mov
cmp
lea
iret
lret
jb
stc
and
mov
andl
jle
adc
adc
sbb
cmovnp
xchg
insb
scas
aas
inc
orl
sub
int3
xor
and
mov
dec
mov
mov
mov
xor
or
stos
int
lods
idiv
push
dec
sub
dec
adc
decl
iret
int
divb
jp
aas
adc
jnp
ret
sbb
mov
arpl
rorb
mov
arpl
push
movl
dec
aad
inc
mov
push
cwtl
mov
inc
inc
ja
pop
cmc
xchg
push
ret
xchg
pop
dec
cltd
outsb
insb
jmp
cmp
pop
jl
dec
pop
data16
outsl
and
or
mov
movsb
ret
sub
push
push
shl
popf
lods
adc
add
test
leave
jge
add
in
cmp
aam
and
ficompl
fsubrl
jmp
pop
cmc
cltd
test
cmc
fsubrs
xchg
es
mov
sbb
fsubl
pop
mov
adc
jmp
scas
jb
lods
push
cli
ret
lds
repz
shll
push
add
stc
dec
sbb
and
jmp
loope
and
adcl
add
or
push
push
push
sub
adc
add
push
js
pop
add
popa
leave
or
jmp
loope
shll
sbb
clc
inc
mov
cli
cs
xor
es
mov
lret
movsb
pop
inc
in
sarb
scas
jmp
ret
sbb
mov
dec
fmul
pop
test
lea
stos
gs
push
nop
sbb
addr16
xor
sub
add
cmp
or
push
mov
or
sub
iret
icebp
push
aam
push
das
mov
out
mov
arpl
or
mov
into
or
call
push
push
xor
mov
push
stc
cmpl
orb
jecxz
add
jle
call
out
and
xor
inc
cmp
inc
adc
pop
out
pop
rol
xchg
int3
mov
sub
sub
int3
xchg
imul
mov
loopne
mov
test
or
fs
mov
fildl
out
cwtl
pop
icebp
mov
lcall
les
cmp
pusha
test
popf
push
cmp
mov
inc
xor
mov
dec
fidivrl
pop
ja
push
sahf
loop
adc
mov
sub
adc
jno
add
test
add
pop
jne
nop
test
pop
jp
lahf
mov
sahf
fdivrl
adc
lcall
test
inc
cmp
or
sarl
add
addb
add
scas
inc
in
popf
sub
inc
jmp
test
xor
repz
mov
lods
movsb
or
loopne
das
test
dec
test
cmp
push
addl
les
aaa
or
mov
stc
lock
lock
xchg
dec
push
jp
popl
test
mov
scas
hlt
and
jnp
inc
push
and
jbe
mov
aad
cmc
fdivrs
xchg
in
jmp
sbb
pop
push
orb
mov
push
push
mov
and
sbb
xchg
sub
sbb
les
jns
arpl
inc
iret
xor
push
ss
repz
cli
out
mov
lds
icebp
and
dec
push
call
xchg
sub
push
push
shl
jo
cs
idivl
add
xchg
je
out
xchg
mov
aam
mov
cmp
fwait
ljmp
fnstcw
xchg
test
rcr
push
rorl
fstpl
inc
or
mov
pop
sbb
and
test
add
push
mov
je
mov
mov
js
sarl
dec
xchg
adc
add
out
daa
aam
push
sbb
ja
xor
push
loop
movsl
ret
jmp
mov
sti
dec
pop
stos
shll
fs
fcoml
push
addr16
aaa
into
fcmovu
dec
fisttpl
popf
jbe
mov
stos
inc
gs
out
mov
pop
ret
xor
sbb
sub
pop
loopne
jns
movsb
inc
jno
pop
in
jns
inc
daa
pop
loopne
jae
xorl
aad
pop
mov
outsl
into
inc
loopne
mov
pop
popf
jo
icebp
mov
and
scas
adc
xor
out
adc
out
sbb
mov
sub
dec
fidivs
cld
in
lret
leave
out
loopne
fstpt
mov
adc
cmp
sbb
lods
mov
mov
jecxz
ja
loopne
cmp
sbb
xlat
ret
into
sbb
rcll
jp
adc
sbb
jns
das
xor
mov
sarb
inc
ds
aaa
xor
notb
repz
inc
xor
mov
dec
movsl
xchg
ljmp
sbb
inc
cmpsl
push
jne
into
push
add
shll
scas
insb
loope
push
pop
int3
rcr
test
stos
add
cmp
sarl
cmpsb
ret
inc
mov
test
jb
pop
xchg
jne
fcmovnb
mov
scas
data16
sub
inc
enter
imul
jge
aas
jno
inc
pop
movsl
add
and
std
jle
ss
fidivs
sbb
push
and
inc
outsb
xchg
int
shlb
testl
mov
test
enter
subl
pop
pop
dec
pop
daa
inc
cwtl
dec
jae
mov
mov
inc
movsb
sbb
hlt
das
dec
outsl
sub
inc
pop
jnp
fldenv
repz
inc
in
lods
push
ss
out
std
enter
and
cmp
sub
inc
lods
push
ss
push
mov
jbe
xor
mov
jge
push
insb
ret
lea
add
adc
or
xchg
je
mov
jge
xor
jne
inc
inc
test
cwtl
inc
push
inc
push
xlat
adc
in
sbb
jbe
ret
into
insl
push
add
fs
fnsave
sub
sbb
xor
add
jno
insb
scas
popa
inc
sub
mov
gs
insb
outsl
xor
cwtl
cmc
sbb
dec
test
inc
mov
rcrb
sahf
adc
sub
mov
xchg
addb
negl
pop
jb
test
mov
hlt
xor
std
push
mov
add
jl
jg
add
mov
push
or
out
lods
int
sbb
xlat
das
add
loopne
cltd
popf
add
test
or
add
push
pusha
clc
std
out
stos
jne
or
jo
adcb
gs
add
mov
push
sub
push
xor
leave
addr16
jg
jae
cltd
lods
outsb
dec
addl
repz
lcall
pop
add
mov
ds
jns
je
mov
mov
frstor
lret
in
dec
mov
push
out
inc
xor
mov
push
xorb
pop
jbe
imul
ja
pop
notl
cld
fwait
jb
pop
inc
and
lea
cli
mov
aad
inc
dec
lcall
xchg
adc
lock
fwait
fwait
mov
in
mov
dec
in
push
pusha
push
sub
jae
add
xchg
sub
fdivs
nop
lods
jbe
mov
jbe
movsl
cmp
push
mov
push
dec
xchg
je
and
sbb
inc
imul
push
ss
cmp
xchg
cmp
mov
add
xor
popa
out
adc
mov
cmpsb
pop
enter
loop
sub
sub
jbe
pop
shrl
dec
xor
push
sub
and
inc
dec
andb
pop
sbb
jno
mov
fists
mov
dec
pop
mov
stos
jns
shl
stos
lock
mov
loop
pop
addr16
in
mov
imul
push
jle
aaa
test
pop
ss
or
inc
mov
test
xor
inc
mov
je
inc
fwait
jbe
fs
outsl
aas
inc
and
mov
test
mov
fisttpl
ljmp
das
add
xlat
dec
inc
and
mov
andb
sbb
jl
dec
aad
mov
fwait
addb
lret
into
pop
xchg
jmp
test
sbb
sbb
mov
sahf
mov
or
ja
into
push
jle
push
jp
mov
xchg
pop
jmp
inc
int
mov
sub
scas
xor
pop
cmp
scas
lahf
cld
in
jo
jle
mov
idiv
lods
ret
xchg
cltd
and
cmp
cltd
dec
xor
std
add
fs
xorl
imul
mov
inc
or
nop
push
movq
in
mov
pop
gs
xor
es
icebp
and
sbb
ficomps
pop
cmp
mov
data16
sbb
sbb
push
pop
push
or
pop
mov
getsec
pop
pushf
sbb
push
inc
insl
pop
sbb
inc
xchg
imul
cmpsb
mov
cmpsb
icebp
shr
mov
es
xor
mov
cwtl
pop
ret
and
imulb
and
test
pop
call
adc
sar
fs
cwtl
stc
lods
jb
jg
insb
popl
daa
test
fstl
sahf
and
popf
imul
xchg
insb
or
je
or
sub
cmc
mov
std
push
xchg
mov
inc
cmpsb
push
mov
adc
cld
lods
mov
lds
mov
xchg
int
mov
in
shlb
lret
fcom
pop
clc
rorl
inc
sub
mov
cmpsb
loope
cmp
cmp
pop
jecxz
out
lret
mov
sub
adc
add
and
mov
jge
pop
or
add
cmp
dec
rorb
or
sub
addr16
aas
xchg
sub
dec
fdivrs
inc
pop
xchg
ss
loop
cmp
cmp
inc
cli
lahf
rolb
mov
push
addb
sbb
mov
loopne
in
cmp
sti
sarl
cmp
push
and
mov
stos
and
and
dec
adc
mov
dec
push
xor
and
fadd
push
int3
sub
xchg
xor
jb
fldcw
in
outsl
hlt
scas
pop
mov
lods
pop
mov
mov
pop
mov
aam
push
dec
sarb
lock
lcall
loop
test
xchg
push
rorb
or
add
scas
jae
mov
icebp
ds
pop
adc
mov
sbbb
jle
mov
aas
movsb
mov
mov
fnstenv
and
test
clc
lea
mov
inc
sbb
pop
sub
adcl
pop
or
xchg
lret
stos
adc
test
aad
pop
movsb
repnz
call
fnsave
mov
sbb
js
imul
adc
out
inc
repnz
jno
aaa
fidivl
faddl
in
mov
sub
adc
xchg
loope
pop
test
or
repz
int
outsl
mov
mov
sbbb
xor
or
add
js
jg
loopne
ja
xor
dec
cli
xchg
iret
jb
xor
sub
inc
les
mov
pop
xlat
lahf
add
sbb
jno
jmp
aaa
cmpsl
dec
cmp
dec
xchg
jnp
push
or
adc
pop
dec
sbb
pushf
mov
cli
mov
push
fistps
inc
jg
dec
add
push
nop
out
bound
pop
dec
gs
and
out
xchg
push
les
mov
and
lret
cmp
sbb
xchg
xor
sbb
mov
outsl
jne
cmc
xor
sub
in
imul
cmp
or
stc
jmp
aas
xchg
cmp
bound
fldt
sub
adc
arpl
outsl
je
movsl
nop
and
jecxz
aam
add
pop
jbe
xchg
add
inc
adc
mov
outsb
sahf
leave
inc
or
sarl
and
mov
es
ret
enter
push
stc
shrb
stc
test
out
pop
nop
call
inc
adc
popf
ss
data16
loopne
int
mov
sub
popl
jo
inc
jne
das
jbe
pop
arpl
sbb
and
inc
inc
xchg
cmp
mov
sub
mov
lret
push
pop
shl
pusha
ljmp
sbb
int
gs
adc
jne
stos
je
pop
jo
pop
cltd
cmpsl
lcall
adc
sbb
mov
mov
andl
jecxz
or
int
dec
rolb
test
pop
cs
xor
mov
lods
xor
xchg
inc
test
and
xchg
pop
inc
sbb
xchg
inc
out
inc
loop
call
dec
dec
sahf
xchg
ret
daa
arpl
adc
and
xchg
xcrypt-ofb
cmpsl
stos
out
jp
inc
xor
or
inc
in
or
xor
negl
lds
stos
push
dec
push
mov
bnd
shll
das
shlb
cmp
sbb
ret
add
or
test
iret
xchg
mov
fistl
je
scas
mull
add
push
dec
in
push
movsl
jmp
push
rol
push
lods
pop
movsb
mov
test
or
mov
cmp
jnp
or
cs
pop
test
and
or
dec
mov
xor
cmp
lret
ds
and
mov
ficoms
out
inc
jle
icebp
pop
popa
rcll
jno
mov
rorb
test
testb
push
and
adc
mov
xorb
adc
xlat
add
aaa
mov
push
push
push
jg
into
adc
andl
pop
mov
mov
sub
xchg
mov
pop
jmp
fiaddl
mov
pop
notb
dec
jne
xor
subb
loop
imul
test
xchg
or
sub
lahf
js
mov
or
mov
sbb
sbb
xchg
xor
push
and
cmp
jle
push
inc
movzbl
gs
lcall
enter
mov
inc
jbe
scas
mov
pop
jno
repz
sbb
call
iret
test
adc
adc
jle
jns
mov
xchg
cmp
cmc
inc
and
test
sub
mov
jo
test
cltd
sub
popf
ret
push
fcomps
mov
ljmp
lret
jae
xchg
fwait
add
setl
or
xchg
ds
add
lds
inc
test
xchg
fnstenv
xor
push
lods
adc
mov
lret
sub
xchg
lcall
nop
call
sbb
cmpl
mov
leave
or
cmp
ret
icebp
xor
cli
xchg
in
out
insb
scas
adc
sub
mov
pop
cmp
and
push
xorb
iret
add
loop
jo
push
cmc
test
imul
repz
sbb
test
bound
cmp
jo
imul
inc
or
faddp
out
clc
shrl
movb
inc
cltd
scas
popa
nop
dec
nop
add
loope
push
lea
cmpsb
ds
insb
add
or
mov
xorb
scas
pop
sti
inc
adc
rcrb
inc
xchg
pop
clc
jne
cwtl
mov
sub
aad
stos
or
jne
lods
aaa
or
mov
das
lods
mov
notb
xchg
jnp
mov
pop
cmp
lock
int
aam
call
ljmp
cli
jg
xor
movsb
jno
cmp
sbb
add
div
sbbb
mov
push
cltd
fsts
dec
inc
push
mov
roll
cmp
and
aas
rcrb
cltd
pop
rclb
dec
lahf
jp
lods
push
rcrb
insl
ds
and
pusha
notl
and
punpckldq
inc
mov
in
repz
into
xor
mov
fldcw
adc
adc
mov
push
and
dec
cld
mov
cmpsb
in
pop
cwtl
push
and
pop
add
lret
leave
test
imul
sub
mov
cmp
jp
jmp
sub
push
sub
aam
shll
and
sbb
cmpb
mov
out
inc
push
sub
clc
push
jbe
pop
clc
imul
pusha
xchg
in
push
es
push
push
es
push
pop
sahf
sbb
sbb
int
loopne
hlt
das
add
repz
pop
rcrl
xchg
xor
or
or
stc
cmp
mov
repz
push
sub
jp
xlat
dec
dec
adc
xchg
adcb
bound
call
push
pop
aam
outsl
aaa
pop
sbb
sub
mov
imulb
int3
cltd
int3
pop
sub
ret
stos
sti
cs
adc
fcmovnbe
push
jnp
pop
sub
negb
imul
push
adc
or
mov
mov
es
lods
std
cmp
and
push
adc
mov
dec
or
int
out
dec
cmovle
pop
test
add
repz
scas
fistl
in
js
or
xchg
inc
arpl
sti
into
cmp
and
ffree
aas
mov
stos
loopne
lret
mov
fcoms
mov
repnz
xchg
ja
push
adc
adc
dec
out
ucomiss
mov
arpl
rcll
jbe
dec
and
dec
or
leave
icebp
lahf
sbb
add
test
incl
mov
ja
in
xchg
jno
loope
movlps
xor
cmp
mov
dec
jp
mov
sub
adcl
push
ret
adc
ja
sbb
pop
popf
add
sar
outsb
enter
lock
mov
idivb
push
loopne
mov
fldt
jbe
pop
jae
insb
sub
pop
popa
dec
rorb
xchg
jecxz
cmp
mov
jb
push
cmp
pop
dec
sub
lds
jb
pushf
sarb
iret
scas
jae
out
gs
sbb
dec
or
lods
jne
lods
xchg
inc
jno
das
push
dec
psadbw
stc
cmc
lahf
repnz
outsb
daa
mov
mov
cmp
repz
cli
je
sub
lret
mov
icebp
loope
fsubrs
scas
in
fldcw
inc
push
ss
dec
sbb
jo
stc
mov
movsl
or
jl
add
mov
mov
pop
add
push
dec
and
push
inc
pop
pusha
xor
push
lock
push
cs
loope
push
cmpb
notl
insl
dec
jb
jb
scas
xor
test
pushf
add
pop
movsl
mov
sub
and
sbb
jg,pn
pop
jmp
lods
xchg
loopne
jle
mov
loope
aas
add
movsb
dec
cmp
ja
mov
jl
imul
imul
hlt
sbb
pop
pop
loope
loopne
shr
sbb
sti
add
les
xchg
int
xchg
gs
pop
sarb
push
nop
fsts
inc
add
or
xor
cltd
leave
and
pop
sarb
or
sub
push
subb
movsl
xchg
inc
mov
or
or
test
scas
outsl
adc
out
ja
arpl
jo
call
cltd
pop
testl
cmpsb
or
add
and
push
in
rcll
shll
lcall
sbb
mov
pop
xor
ret
stc
push
cmpsb
mov
jo
pop
dec
ljmp
add
push
jnp
mov
sbb
dec
icebp
lret
xchg
movsb
out
push
xchg
call
inc
lock
jle
test
std
or
repz
mov
sub
cmp
outsb
cmpsb
cld
cmc
je
mov
fistl
push
jnp
scas
cmp
adc
mov
rorb
lret
lret
pop
pop
lods
xchg
push
or
pop
cmp
gs
js
xchg
xor
fdivp
insl
aam
ds
negb
adc
jo
mov
xor
mov
fimuls
push
jb
cli
mov
fcoml
jb
rclb
mov
dec
int3
mov
je
loope
mov
fucomp
push
sub
mov
shll
fs
sub
mov
nopl
or
sub
stos
ss
xchg
push
out
xchg
icebp
stc
push
out
ds
into
inc
add
call
jecxz
xchg
sbb
mov
pop
push
push
sub
ret
sub
outsl
daa
rcr
push
test
mov
mov
xchg
das
sbb
adc
pop
fmull
sub
lret
cmc
pshufw
add
daa
pusha
loopne
std
sub
adc
sbb
inc
or
sahf
shr
data16
div
mov
fnstenv
mov
insb
cltd
push
push
mov
inc
int
mov
xchg
cmp
sbb
ficoml
jmp
out
jmp
inc
xchg
push
pop
lods
movsl
jge
nop
mov
cmp
lret
faddl
sub
addr16
pop
jl
movsl
push
dec
mov
xor
jbe
incl
inc
pop
addr16
stos
fadd
adc
mov
and
push
stos
fistps
das
call
outsl
mov
es
mov
iret
stos
dec
daa
fwait
hlt
sub
jbe,pt
dec
loopne
adc
inc
cmpsl
jo
push
xchg
xchg
jbe
insb
and
push
push
xchg
mov
dec
push
add
push
sbbb
iret
xchg
jns
dec
movsb
test
mov
sbb
stos
in
mov
call
mov
orl
sbb
imul
pushf
xor
call
push
loop
adc
dec
mov
es
mov
jmp
jle
add
dec
inc
in
xchg
xchg
pop
and
pop
jns
xchg
sbb
push
out
inc
mov
and
xlat
fstpt
ficoml
mov
xchg
std
and
mov
nop
ja
pusha
sbb
mov
popa
jne
mov
lahf
adc
adc
and
add
or
sub
shrl
hlt
push
test
imul
cmp
daa
fisttpl
arpl
popa
inc
insb
shlb
aaa
lods
pop
aas
jns
xor
mov
adc
dec
mov
inc
mov
arpl
inc
inc
fldcw
inc
adc
pusha
popf
cmc
mov
jge
lea
jnp
cmp
sbbb
cwtl
dec
cmp
stos
bound
repz
mov
cmc
int
shlb
jbe
dec
push
fwait
pop
out
add
jae
adc
daa
add
jle
dec
clc
push
and
xchg
cwtl
stos
out
cvtdq2ps
mov
push
and
fcmovne
pusha
stos
jge
pcmpeqw
sub
loope
sbb
scas
sahf
icebp
push
shll
xchg
and
push
add
sar
dec
mov
push
test
int
rclb
dec
outsl
adc
rcr
ja
mov
mov
dec
or
lret
lcall
sub
lcall
cwtl
mov
pop
insl
int3
mov
lcall
xor
mov
roll
xchg
sbb
out
jnp
les
jbe
xchg
mov
lods
test
sbb
dec
ret
push
repz
add
mov
dec
jmp
push
push
inc
jl
lahf
mov
mov
and
push
stc
inc
out
stc
lods
cmp
adc
adc
mov
data16
pop
test
flds
jo
add
mov
insb
andb
and
ljmp
push
gs
icebp
scas
sti
xor
in
ljmp
cmp
faddp
hlt
rclb
fldl
mov
cmpsb
xchg
sub
aad
or
lods
push
inc
mov
jno
sub
jns
jge
and
mov
fstps
cmp
insb
push
pop
dec
frstpm(287
pop
mov
mov
jnp
movsl
dec
add
xchg
shl
mov
pop
xchg
mov
adc
leave
push
nop
dec
and
push
add
enter
add
add
in
imul
lahf
arpl
loope
or
mov
pusha
mov
dec
jnp
pop
mov
ret
stos
test
mov
inc
cli
cmpsb
or
xchg
xor
hlt
mov
insb
cmpsl
adc
test
je
cmp
fistl
mov
cmc
sbb
aaa
outsb
mov
sbb
dec
nop
jno,pn
adc
cli
xor
mov
mov
mov
cmp
div
test
mov
or
cmc
lcall
aad
push
mov
pop
mov
add
sbb
xchg
cmp
dec
xlat
push
mov
dec
inc
lcall
je
fstpl
loope
fwait
mov
pop
loopne
adc
frstpm(287
ds
mov
mov
xchg
xor
and
std
leave
xchg
xchg
pop
mov
cli
insb
lods
dec
mov
repnz
nop
aas
hlt
dec
divb
pop
call
xor
sub
push
in
lea
lcall
jne
jno
aas
sub
jle
pop
test
push
hlt
jne
repnz
jbe
cmpsl
loopne
mov
movd
mov
lahf
nop
cmp
cwtl
jnp
js
and
sub
jle
bound
sti
adc
lea
mov
and
inc
rsm
insl
pop
pop
mov
movsb
in
dec
dec
and
movl
sbb
fwait
jae
adc
cmp
test
pop
push
inc
mov
xor
jo
lret
mov
cmp
pop
pop
movsl
and
outsb
adc
mov
mov
in
aaa
inc
pusha
sahf
sbb
inc
pushf
xor
sar
out
pushf
cwtl
ret
jb
shr
jns
jle
rcrl
cmp
loope
mov
rcrl
adcl
pop
and
or
out
mov
fdivrs
fbld
loope
and
mov
mov
stos
movsl
pop
ficompl
fsubp
daa
mov
aam
mov
lcall
inc
fidivs
stos
add
adc
in
or
push
jb
out
push
jmp
popf
js
push
sbb
jae
andb
xchg
jb
fnstenv
lea
dec
inc
sub
fs
sub
pushf
pop
sub
sbb
icebp
roll
jecxz
lds
fiadds
std
rolb
sub
mov
mov
and
in
addr16
inc
into
cmpsl
and
mov
xchg
movsb
ret
mov
sub
or
adc
inc
xor
inc
jb
shll
xor
xchg
adc
jb
into
xchg
lock
or
stos
mov
jno
in
push
fsubrp
sub
std
mov
icebp
cmp
fidivrl
sbb
incb
lret
adc
shll
cmp
pop
cwtl
xor
cmp
aas
pop
pop
sbb
sbb
es
jo
push
lret
sub
out
fiaddl
inc
test
aad
xor
repnz
mov
jg
xchg
int3
mov
stc
sub
fstpt
data16
or
pop
test
inc
popa
test
sbb
dec
nop
jmp
or
enter
inc
cmc
jo
adc
jmp
sbb
cmp
icebp
add
mov
loop
lock
sbb
xor
in
cmp
into
pop
xor
mov
iret
xor
cmp
sbb
sbb
mov
out
adc
push
xchg
mov
cmp
add
into
test
or
push
push
sbb
movb
xchg
xchg
lds
outsl
test
adcl
repnz
pop
lea
push
mov
inc
push
xor
repz
out
rol
lods
aas
xor
pop
test
rclb
sbb
xor
fcoml
jne
ret
push
outsl
xchg
int3
lds
jns
jb
mov
xor
movsl
push
mov
dec
push
or
adc
idivb
and
xchg
or
sbbb
ja
pop
xchg
repz
pop
insl
aas
adc
es
outsl
cmp
cmpsl
mulb
data16
shl
sbb
cmpb
add
push
sbb
jecxz
mov
lahf
mov
push
pop
or
adc
adc
xchg
xor
fs
lcall
inc
dec
in
inc
xchg
sbb
sub
xor
loope
add
push
mov
jp
or
adc
xchg
jecxz
jnp
xchg
rclb
lcall
movsb
ja
ljmp
loope
ja
das
xchg
mov
and
cwtl
dec
stos
fwait
mov
push
outsl
clc
roll
sbb
cmp
pop
adc
mov
fs
or
mov
jg
xchg
lahf
lds
push
xchg
add
adcl
add
jp
test
xor
pop
pop
fwait
push
outsl
rorl
int
stos
mov
or
scas
aam
add
imul
lds
mov
loop
jl
and
cmpsb
xor
repnz
push
add
mov
and
push
adc
popa
mov
xor
xchg
cmp
or
mov
cs
in
pop
std
mov
mov
push
xor
in
loop
into
test
lret
xor
xor
cmpsb
out
fimull
cli
sarb
mov
xor
insb
int
xor
jne
inc
jne
js
aam
leave
pop
add
js
int3
or
loop
adc
arpl
xlat
lcall
mov
in
fisubs
cs
in
incb
sbb
in
sub
scas
jge
xor
jmp
cmp
cmp
ja
dec
cmp
pinsrw
int
addl
scas
ret
xchg
mov
xchg
dec
inc
jns
add
mov
repz
xchg
sub
mov
xchg
jecxz
push
icebp
fninit
cmc
xchg
test
sub
mov
pushf
mov
fwait
and
and
and
div
push
push
aas
xchg
ljmpw
mov
sub
ja
xchg
clc
jo
sub
pop
ds
mov
movsb
imul
icebp
mov
ljmp
push
mov
js
push
lods
ja
dec
cmpsb
or
push
ja
icebp
dec
xlat
push
push
fs
mov
pushf
shll
mov
adc
iret
jns
popa
adc
inc
mov
ds
inc
and
ja
repnz
jecxz
jb,pn
jge
div
lcall
add
mov
aad
in
pop
jl
xchg
aaa
outsl
cs
fmull
xor
inc
xor
sub
jmp
sub
sub
jl
jl
sbb
fwait
data16
mov
inc
push
mov
sahf
xor
push
jl
dec
nop
aam
aaa
xlat
iret
lret
rcrb
nop
sti
and
mov
xor
xchg
pop
addr16
add
mov
dec
ret
pop
jae
jne
mov
jbe
pusha
in
mov
movsb
push
mov
add
ficomps
inc
mov
orl
pop
loop
insl
stc
inc
adc
lret
lock
add
sar
jne
ss
fwait
shlb
addr16
test
add
add
ds
int
out
pop
pcmpeqw
out
pop
push
adc
cmp
push
lods
int
lods
out
inc
test
push
sti
jecxz
xchg
xchg
mov
sbb
flds
pop
leave
repnz
fwait
mov
add
sub
pop
call
pop
inc
std
test
push
mov
imul
in
push
sbb
pop
pushf
out
cli
aas
das
ficomps
sub
add
imul
leave
adc
cmc
jbe
in
lds
mov
repz
mov
sbb
fs
xchg
ret
inc
fimull
and
rol
mov
sub
cld
icebp
mov
and
in
fmul
aad
dec
mov
push
jnp
loop
xchg
dec
loop
push
xchg
loope
jle
mov
jmp
imul
push
aad
xor
scas
xchg
aad
jnp
and
push
ja
popa
sub
mov
cs
push
sbb
out
dec
sbb
ds
adc
add
add
cltd
es
adc
xchg
mov
stos
lret
adc
adc
adc
adc
ret
lock
jmp
aad
push
imul
or
jne
imul
inc
fmull
imul
pop
push
fadd
nop
loopne
mov
test
popa
ja
iret
in
pop
pushl
test
dec
fsubl
push
and
push
xchg
test
sub
xchg
je
idivl
insl
repnz
push
xchg
dec
outsl
jle
adc
cs
mov
stos
shr
nop
mov
mov
mov
cmp
test
xor
and
bound
mov
xor
xchg
and
adc
mov
insl
jnp
ds
cmp
mov
jl
jnp
xor
or
movsl
fcmovnu
jecxz
repnz
dec
jb
mov
popf
xor
fwait
xchg
sub
dec
insb
loope
mov
push
jbe
je
xor
cmc
dec
mov
out
sbb
mov
xchg
add
imul
push
cli
dec
mov
mov
fimull
aam
je
push
jno
aaa
mov
clc
movsb
mov
sub
and
mov
xchg
sbb
push
adc
mov
cmp
cmp
lods
adc
mov
push
cmp
lcall
test
scas
enter
adc
jno
pxor
fbstp
mov
xchg
xor
xchg
cltd
ss
ss
maskmovq
and
shr
push
xchg
xchg
push
dec
fistpll
adc
xchg
inc
adc
cmp
push
mov
out
in
mov
mov
imul
stc
icebp
fistpl
fisubl
in
ret
xor
or
fistpl
or
xchg
or
xor
add
mov
add
and
pop
lret
arpl
test
pop
jp
mov
mov
inc
pop
fs
cmpsb
popf
jge
mov
xlat
jmp
mov
inc
pop
hlt
pop
add
out
xchg
cmpsl
ret
arpl
rcrl
inc
add
aaa
testl
and
push
adc
and
mov
or
add
or
cmp
shl
loope
lcall
sub
cmp
push
mov
mov
cmp
mov
fdivrs
sub
sbb
push
popf
outsl
jp
jb
outsb
xchg
or
subb
enter
push
mov
aas
sub
or
div
fildll
and
and
xor
dec
mov
mov
iret
jns
mov
shl
pop
cmp
popa
xchg
or
shll
std
test
push
inc
dec
aaa
movsl
inc
mov
bts
push
fidivrl
out
jb
loope
mov
mov
insb
add
inc
outsb
inc
popa
sahf
lock
jns
cmp
jmp
adc
movsb
dec
cmp
nop
popl
cmpsb
loop
rorb
or
inc
outsb
pop
mov
ret
jae
dec
mov
add
mov
cltd
pop
jo
cld
pop
repnz
mov
mulb
inc
aam
jne
sub
js
push
out
adc
inc
pop
inc
jbe
gs
push
in
ret
push
lds
roll
dec
pop
pop
fwait
outsb
sub
mov
movsb
ret
pop
aad
push
sbb
mov
in
and
inc
hlt
push
mov
or
mov
add
add
jbe
dec
or
repnz
or
repz
pusha
lret
int3
rclb
insb
fdivl
sub
or
push
cmp
ds
cmp
pop
jnp
xchg
sbb
fimull
dec
push
leave
inc
inc
pop
and
fdivrl
inc
cmp
xchg
xchg
cwtl
xor
lret
cli
cmp
js
fs
jo
mul
es
jno
xor
adc
lds
or
dec
insb
cld
inc
and
inc
rep
out
test
rdpmc
mov
sbb
lahf
mov
popf
adc
mov
mov
add
daa
sbb
mov
loopne
sbb
and
jne
test
jb
or
shll
mov
sub
mov
mov
mov
cwtl
les
push
psubsb
xlat
sub
mov
ficoms
sbb
out
xchg
out
lret
pop
cli
push
test
jg
mov
dec
or
jbe
les
jp
cmp
mov
mov
movsl
inc
rorl
into
jge
into
mov
int3
add
out
ret
mov
leave
arpl
pop
pop
pushf
fnstenv
cmp
loop
rorl
sbb
jmp
movsb
inc
dec
mov
add
or
cld
pusha
daa
cmc
and
std
popf
and
cs
in
xchg
stos
cmp
mov
mov
jns
xlat
lods
aad
jecxz
add
movb
test
mov
lret
popa
cs
dec
fnstcw
pop
imul
addl
dec
stc
sub
sbbl
mov
ds
ljmp
pop
call
mov
xchg
xor
push
sub
push
push
int
lea
insb
mov
jno
xor
adc
fdivrl
mov
scas
cli
loop
and
cmpsl
pop
mov
adc
jle
pop
mov
paddsw
outsl
mov
in
repnz
xlat
lds
pop
or
cmp
test
fstps
xchg
mov
ret
icebp
leave
imul
out
pusha
or
negl
repz
ljmp
adc
arpl
jne
mov
or
fdivrs
xchg
add
xlat
xchg
jno
sbb
sbb
jae
jmp
movsb
xor
sub
fisttpl
test
sub
push
xchg
jb
xchg
sbbb
pop
inc
ret
in
add
sub
push
mov
or
jbe
mov
jo
pop
xchg
popa
shr
js
pop
jmp
cmp
aad
add
xchg
test
addr16
fldpi
sub
jo
das
outsl
clc
sbb
sbb
push
aam
push
xchg
scas
int
mov
inc
in
ss
mov
daa
mov
int
hlt
dec
scas
xor
outsb
jle
dec
ljmp
pushf
mov
adc
jg
test
scas
push
cld
xchg
dec
inc
xchg
mov
cmp
ret
rcrl
sub
je
out
cmpsl
push
iret
test
js
nop
mov
cmp
or
nop
mov
xchg
leave
pusha
pop
je
pop
sub
out
push
aam
popf
rcll
rorb
jae
jmp
inc
mov
cmp
and
test
lds
stos
fisubl
xchg
test
cmpb
push
mov
jp
ljmp
dec
cwtl
loope
lds
scas
clc
jg
xchg
imul
pop
movsb
dec
lret
andb
repnz
adc
rclb
insl
inc
popf
mov
orl
jg
leave
jg
and
pop
ja
push
jge,pt
add
testb
ret
adc
ljmp
push
push
ja
loop
push
push
xor
adc
mov
insl
shll
fucomi
clc
and
jns
rorl
cmp
dec
fstps
jl
jp
clc
jmp
xor
ljmp
xchg
mov
xchg
sarb
sbb
xchg
mov
in
mov
push
push
jb
dec
movsl
hlt
jp
mov
dec
push
imul
js
xlat
sub
daa
xchg
out
mov
sub
test
sub
cmc
cltd
cmp
and
xchg
das
aaa
jnp
push
rdpmc
rcrl
or
jno
movsl
scas
sub
xor
push
push
rdpmc
repnz
fdivl
movsl
xchg
mov
mov
xor
popf
inc
xchg
outsb
pop
mov
inc
into
lock
push
jnp
test
xchg
mov
loopne
jns
adc
fcoms
pop
mov
rcll
jns
jmp
cmpsb
repnz
pop
fs
pop
jbe
sbb
imul
test
sbb
cmpsb
ja
insb
cmp
sbb
lcall
fwait
jb
sub
inc
cwtl
add
xchg
lcall
cmpsb
mov
mov
jl
pop
inc
fsubrs
jb
repz
inc
scas
xchg
cs
hlt
loopne
lds
dec
fcoml
cmpsb
xor
jge
sti
push
movsb
dec
lea
xchg
sub
lea
mov
jb
add
insl
jl
mov
dec
dec
xchg
out
mov
mov
or
out
push
xchg
cmp
mov
add
mov
cmpsl
pop
jnp
or
dec
aam
cmpsl
ret
mov
mov
aad
lea
and
in
mov
adc
xchg
push
jno
mov
push
jp
cmpsl
cmpsl
stos
cmc
addr16
ret
xor
out
jl
bnd
fs
sbb
mov
dec
mov
das
lods
dec
mov
adc
dec
mov
or
sub
pop
mov
or
ja
sbb
shl
enter
cmp
outsl
mov
jp
sub
adc
xor
push
or
inc
cltd
cltd
fsubs
jle
into
cmp
loop
add
repnz
scas
dec
push
mov
lds
pushf
jmp
cli
or
dec
jge
push
sub
xchg
cmpsb
ds
test
adc
pushf
add
stos
cmp
xlat
int
dec
movsl
inc
mov
sbbl
in
push
fmuls
jnp
pusha
into
fstpl
cwtl
xchg
es
inc
insb
and
xchg
cmp
in
jmp
leave
dec
mov
or
sub
xor
xchg
mov
inc
xor
movsl
jae
movsl
pop
add
adc
jno
inc
sbb
cmpsl
jo
arpl
jnp
xchg
push
xchg
shrb
das
mov
cmp
sbb
std
rcrl
dec
sbb
pop
xor
or
mov
adc
shlb
xchg
jg
imul
add
loope
loopne
push
jge,pn
fs
movsl
add
mov
mov
lcall
pop
xchg
add
movsb
mov
mov
outsb
push
push
jge
add
xchg
sub
das
in
jo
aam
adc
and
fidivrs
xchg
jb
aas
xchg
imul
xor
push
adc
add
dec
and
lods
sbb
sub
xor
ja
pushf
xor
xchg
sbb
fwait
test
cltd
mov
mov
mov
mov
and
mov
pop
jne
imul
sarb
subl
in
cmp
jns
adc
lret
jno
jg
fcompl
mov
data16
ljmp
sbb
fisubl
daa
sahf
mov
mov
enter
pushf
cs
inc
jmp
or
add
lahf
mov
lods
enter
lods
and
cmpsb
fsubr
scas
and
roll
jbe
xor
scas
adc
test
jbe
add
xor
adc
xor
mov
clc
rorl
and
push
xchg
adc
mov
or
cmp
lds
mov
in
dec
or
test
scas
test
icebp
xchg
mov
add
jmp
jge
mov
adc
or
int
jle
jle
stc
out
mov
add
sbb
jb
je
gs
dec
lahf
testb
repz
mov
jmp
fidivrl
gs
inc
ss
ds
push
pop
mov
sbb
ficomps
jge
roll
je
fcompl
mov
mov
icebp
dec
and
in
fildll
sub
addr16
and
ret
mov
gs
xchg
sbb
mov
ret
insb
into
fdivr
and
and
cli
shlb
cmp
jle
loop
js
and
icebp
arpl
mov
lds
pusha
roll
rorb
shl
adc
mov
divb
add
out
xchg
or
add
nop
test
sbb
pop
ljmp
jmp
repnz
or
mov
aaa
fcomps
and
sbb
shrb
inc
mov
jno
pop
fmulp
adc
ljmp
jne
adc
dec
xchg
pushf
movsb
repz
shll
fistpl
sbb
jbe
dec
pop
or
icebp
data16
dec
data16
sbb
stos
inc
mov
pop
sahf
xchg
inc
push
lret
add
lods
in
aas
fsub
jne
lahf
ficoml
sub
jne
cmp
inc
movsl
jp
xchg
pusha
jae
sti
fbstp
dec
lock
jno
sbb
repz
xor
adc
arpl
push
pushf
popa
xchg
hlt
sbb
imul
movsb
aaa
push
xor
jns
stos
jo
add
aas
jns
jnp
sub
test
popf
cs
mov
jnp
int3
dec
cmpsl
jnp
hlt
aas
scas
int
inc
jl
test
mov
push
mov
repz
and
roll
xor
in
scas
and
xchg
aad
inc
shl
pusha
adc
jbe
push
xlat
or
mov
add
loopne
dec
dec
push
arpl
adc
mov
mov
cmp
rol
ret
loop
stc
sbb
arpl
popa
mov
dec
movsl
sar
lcall
jns
push
and
adc
cli
sti
adc
push
mov
test
inc
fsubs
and
cwtl
fwait
popa
and
in
xor
and
dec
push
push
cmp
pop
insb
call
sbb
dec
out
cmp
mov
mov
pop
lods
stos
test
fadd
sahf
inc
xlat
push
adc
sbb
leave
repnz
cltd
mov
iret
in
es
loop
jmp
mov
into
shlb
divb
sub
in
lock
sbb
mov
or
xor
mov
push
push
out
addl
dec
push
mov
stc
scas
or
push
jmp
insl
int3
test
pushf
cld
mov
cltd
lods
add
popf
push
andb
pop
aaa
and
add
mov
daa
insl
out
sbb
mov
movsb
fcompl
decb
dec
fdiv
test
xor
or
and
aaa
xchg
gs
fimull
xchg
push
fcmove
or
jmp
fidivs
jle
push
ljmp
pushf
inc
stos
dec
jge
xchg
test
dec
cli
push
lods
mov
pop
dec
sbb
jp
ja
pop
push
sahf
xor
xchg
dec
cwtl
stos
xchg
inc
add
int3
loopne
or
lcall
add
insb
push
cmc
sahf
pop
and
enter
imul
push
js
and
insb
loop
leave
lods
mov
enter
add
cmp
cmp
ds
rclb
inc
sub
ss
es
int
lcall
das
cltd
sub
sbb
cmp
push
lods
shlb
addb
cmp
outsl
cmp
cwtl
cmp
lds
stos
imul
pop
fsubrl
lods
test
lcall
mov
mov
push
cmp
jl
dec
rcr
and
ds
dec
pop
cmpsb
or
mov
iret
jmp
icebp
mov
lock
int
das
pusha
sahf
bnd
addr16
hlt
loope
clc
test
inc
hlt
jle
mov
daa
mov
leave
repz
cvtdq2ps
inc
or
sbb
pop
fcoml
jl
xor
and
test
testl
xor
imul
lock
aas
fdivrl
mov
adc
shll
jae
test
je
mov
jg
int3
xor
push
cs
fmulp
imul
mov
adc
add
int
outsb
ret
push
imul
inc
cmp
outsb
movsl
sbb
jne
dec
mov
dec
pop
adc
sub
mov
mov
fmulp
pusha
xchg
xlat
sub
leave
sbb
movsb
cli
jnp
lock
dec
sbb
int3
cmp
test
fdiv
xchg
mov
jno
out
xlat
adcb
or
lret
or
cmp
or
mov
das
xchg
clc
repnz
movsl
popf
and
dec
pushf
test
in
dec
test
xchg
mov
mov
and
inc
push
cli
add
push
push
jae
sahf
imul
enter
mov
mov
das
dec
lahf
in
pop
jne
movsb
shrb
adc
shlb
sub
push
or
jp
lock
out
adc
imul
cltd
dec
mov
sti
mov
cmp
lock
mov
inc
loope
pop
lcall
ja
cmp
and
cmpsl
push
inc
out
nop
call
dec
xchg
out
xchg
mov
push
mov
call
mov
jno
add
jle
rorl
jns
mov
mov
push
mov
test
aas
loope
loopne
int3
rcrl
inc
inc
jl
fstp
jno
xlat
mov
mov
cmp
jno
clc
ret
ss
outsb
cmovbe
dec
leave
dec
sbbb
lcall
ret
dec
pushf
aad
sbb
push
xchg
push
in
mov
iret
push
insl
and
xchg
out
jbe
or
xor
test
lea
andb
or
dec
das
clc
pop
push
ljmp
cmp
sbb
arpl
jne
dec
mov
jmp
std
xchg
mov
add
repnz
lods
cmp
mov
pop
stc
cmpsb
inc
push
xor
xchg
add
roll
js
cmp
add
in
sbb
pop
mov
mov
imul
jne
test
pop
popa
decb
adc
and
mov
mov
clc
lcall
pop
sti
mov
add
cmp
pop
jg
movsl
jg
imul
adc
xchg
push
cmpl
and
mov
and
pop
cmp
lcall
cmc
das
jl
hlt
adc
adc
or
jmp
xchg
mov
int
jno
fisubs
cwtl
add
mov
js
cmp
jecxz
gs
cltd
inc
mov
pop
nop
gs
xchg
lcall
mov
xor
mov
arpl
fcomps
dec
je
ljmp
hlt
mov
mov
gs
ficompl
adc
mov
lods
movsl
ror
xor
mov
cmp
mov
cld
call
inc
jnp
decl
mov
mov
insb
or
in
insl
fnstcw
outsb
mov
cmp
jbe
lcall
cmc
fisubrs
jno
divb
test
adc
mov
stc
adc
dec
push
inc
xchg
sbb
add
mov
jle
lods
das
xor
fnstcw
xchg
pop
data16
sbb
cltd
xchg
scas
xchg
jle
jae
adc
mov
adc
icebp
loope
xor
add
xor
pop
mov
sbb
adc
into
push
add
jo
mov
dec
stc
es
test
fbstp
lods
sbb
push
cmpsl
ljmp
mov
sub
mov
out
cmp
out
push
insb
mov
pop
sub
pop
and
add
pop
enter
in
je
mov
daa
cmp
in
and
addl
or
push
orl
or
lods
add
xor
pusha
xchg
repz
xchg
pop
jbe
aam
or
push
adc
xchg
inc
add
push
outsl
dec
movsb
into
shrb
int
sahf
fldcw
aad
js
shrb
imull
mov
out
xchg
xor
ljmp
enterw
push
jle
adc
xor
mov
addr16
outsl
sbb
cmp
dec
xchg
fldcw
data16
push
shll
mov
inc
out
xchg
pop
test
repz
ror
jmp
mov
mov
js
xor
lea
pop
gs
inc
popa
adc
movsb
push
popf
mov
dec
out
cmp
imul
repz
fs
lahf
mov
pop
sub
jae
dec
pop
loop
cmp
fisubl
jne
add
iret
fisubrl
xor
lea
hlt
jge
repnz
jae,pn
cmp
stos
jns
clc
das
sub
out
adc
iret
inc
lods
popf
pusha
out
ret
repz
or
out
les
add
and
adc
cmp
cmp
jnp
dec
pop
ss
xor
cmc
xchg
cmp
pop
sbb
pop
out
imul
mov
xor
sub
imul
mov
mov
fisttpll
sub
cmp
cmp
sub
leave
es
and
and
lods
je
popf
xlat
rolb
cmp
push
dec
xlat
ret
sbb
dec
bound
mov
mov
add
mov
pop
scas
xchg
add
les
jmp
or
cli
cmpsl
xor
enter
push
lods
jle
daa
popf
lcall
vcvtps2pd
mov
mov
das
aas
andb
jnp
bound
gs
jno
bound
and
adc
mov
das
sbb
inc
xor
nop
lods
fsubl
into
inc
lea
orl
sbb
ja
push
and
into
mov
xchg
lret
dec
sbb
outsl
jno
or
add
and
sub
imul
xlat
push
out
sbb
and
fwait
and
fs
scas
lahf
call
push
xchg
lahf
xchg
arpl
push
mov
fsubrs
or
sarb
rol
sahf
cli
sbbb
mov
push
aaa
shlb
cmp
mov
out
fdivl
ret
push
ret
andl
adc
shll
ret
mov
pop
stos
ss
mov
lods
push
cs
jecxz
add
loope
ds
mov
cli
mov
cmp
xor
jl
mov
inc
addr16
aas
push
fiadds
pop
fwait
mov
pop
subb
sub
iret
icebp
test
subl
outsl
push
xchg
sbb
xchg
rcr
dec
sbb
fs
pop
push
js
mov
fsts
lcall
and
xor
les
test
outsb
jo
or
push
mov
mov
sub
in
push
ljmp
pop
es
cvtdq2ps
ljmp
ficomps
and
dec
jns
les
mov
je
loop
pop
icebp
add
jo
add
push
popa
sub
sbb
sub
mov
pop
std
push
push
push
arpl
push
sti
mov
iret
inc
ret
sti
pop
ret
lcall
or
or
js
bound
leave
jl
sbbl
sbb
pop
mov
push
xchg
and
in
lret
mov
mov
dec
int
mov
out
out
pop
jmp
push
jecxz
mov
bound
push
sub
int
or
dec
push
dec
push
jl
cmp
mov
les
xchg
idivl
daa
adc
repz
xor
pop
ret
addb
cmp
and
pop
xor
xchg
xor
and
dec
test
adc
pop
add
adc
test
addl
dec
and
mov
call
push
mov
adc
cli
mov
mov
cmp
cmpsl
bound
inc
cmp
cwtl
int
fwait
scas
popa
xor
cmp
stos
es
aaa
jmp
loop
es
cmp
pop
lea
and
dec
loop
add
xor
add
mov
out
repz
push
int3
mov
jle
inc
push
pop
pop
add
call
rolb
jle
data16
or
int3
sbb
cmp
scas
mov
and
pop
jno
inc
loopne
xor
icebp
out
pop
sub
pop
xchg
and
sub
fdiv
lock
aaa
mov
adc
es
fs
sbb
push
inc
std
dec
and
rorb
pushf
sarb
mov
imul
sbb
xchg
sub
mov
mov
xchg
adc
ds
add
xlat
push
mov
add
xor
sub
cmp
sbb
dec
adc
adc
xchg
mov
push
or
xchg
add
inc
sbb
enter
aaa
cltd
into
push
push
mov
or
or
cmp
inc
and
scas
lret
dec
xchg
aas
jecxz
in
imul
icebp
mov
push
dec
insl
mov
in
ret
inc
dec
and
rorb
rol
je
inc
sub
mov
fsubr
dec
xorb
je
test
int3
dec
push
daa
lods
push
mov
test
inc
xor
sahf
add
fistps
push
or
jne
jns
ljmp
fs
repnz
fistpll
jno
adc
xor
xchg
les
mov
out
or
lods
pop
jl
lds
pusha
ja
nop
pop
pop
cltd
fdivl
imul
sbb
pop
add
sub
push
cmp
fwait
sbb
ret
daa
aaa
push
test
and
adc
inc
add
mov
xchg
mov
jae
fnstsw
sub
jmp
ret
mov
mov
cmpsl
adc
pusha
sub
test
inc
mov
adc
cli
or
sbb
cmp
jg
and
cmp
pop
jmp
cli
push
int
popa
inc
out
add
cmp
mov
mov
mov
cs
mov
add
pusha
and
push
xchg
popf
pop
in
dec
and
jnp
faddl
fstpt
arpl
jge
pushf
mov
push
call
aas
lahf
aas
es
adc
call
xchg
push
add
ret
adc
pop
sahf
rorb
xchg
cmp
negb
cmpsl
mov
sbb
jp
cmp
add
sub
xchg
cltd
fdivrs
cmp
mov
mov
sahf
sbb
inc
pop
popf
nop
je
add
stos
repz
popf
xor
fmull
cmp
clc
pop
mov
test
cmp
gs
in
inc
cmc
dec
jae
xchg
mov
stos
in
mov
rcrb
mov
push
pushf
sbb
into
add
add
scas
andl
or
mov
mov
gs
push
push
out
fisubl
std
or
mov
cwtl
call
sbb
lret
sbb
test
xchg
fcomps
outsl
fnstcw
mov
leave
cmpsl
cmp
pop
pop
jne
cmp
pop
and
push
pop
pop
mov
loop
cmpsb
popa
mov
lahf
xchg
insl
std
cmp
frstor
cltd
addb
filds
push
dec
xor
sbb
or
call
test
test
test
ret
movsb
jb
mov
mull
mov
inc
mov
pop
pop
push
sub
add
add
popf
sbb
loopne
adc
cmp
mov
decb
daa
aam
adc
outsb
or
ret
mov
add
jno
out
js
shrl
cmpsl
lock
adc
or
loop
call
in
rcll
xchg
arpl
mov
pop
test
cltd
insl
mov
pop
ret
dec
aam
dec
ret
hlt
pushf
jns
hlt
dec
and
push
mov
push
inc
jne
mov
shr
fstl
hlt
mov
out
mov
mov
loopne
in
add
inc
pop
push
leave
mov
push
and
sub
call
xchg
add
xor
or
xchg
adc
mov
scas
sub
xchg
dec
jge
cmpsl
adc
arpl
lods
add
mov
inc
mov
dec
incl
pop
notb
jl
divb
jecxz
mov
sbbb
ret
cmp
subb
and
int3
cmc
mov
lods
push
push
pop
lahf
movsl
mov
mov
fimull
push
lret
rcrl
out
shlb
dec
sub
fildl
mov
xlat
cli
mov
sub
cmp
call
sbb
ret
pop
xlat
mov
fs
adcl
loop
xor
je
xchg
neg
xchg
ja
xchg
add
rcll
stc
push
movsb
subb
movl
lods
sbb
xor
into
or
loop
imul
scas
aaa
dec
add
or
pop
mov
sbb
jbe
movsl
pop
cs
adc
or
repz
jno
sbb
or
fwait
cld
dec
ficoms
out
rcl
mov
mov
lcall
push
out
call
ficoms
leave
inc
pop
lea
pusha
loope
cld
cmp
add
and
or
leave
pop
daa
aad
mulb
sub
sbb
sbb
mov
int3
imul
icebp
cli
adc
mov
xor
mov
les
mov
mov
orb
sub
cmp
and
pop
jmp
xchg
incb
mov
inc
add
xchg
scas
mov
mov
adc
sub
push
dec
aad
and
mov
push
inc
adc
rcl
or
pop
push
lcall
cmp
push
xchg
je
popf
xchg
sahf
or
push
xor
test
xchg
bound
add
out
and
mov
subl
jecxz
pop
sub
icebp
into
dec
cmp
out
pop
or
cmpsb
cltd
xor
in
je
fnstcw
addr16
leave
mov
mov
and
out
shr
sbb
hlt
int3
nop
data16
mov
cld
push
cli
lret
and
outsl
leave
xor
test
shrb
mov
outsb
cld
xchg
pop
ljmp
cmp
sub
or
int
and
jbe
int
push
or
and
mov
pop
cmp
lods
aad
int3
shll
mov
xchg
push
push
icebp
fwait
mov
jl
icebp
push
lods
dec
push
mov
pop
pop
leave
aam
gs
leave
rclb
or
cmp
or
and
js
jae
test
jg
xor
adc
dec
mov
aas
addl
out
jecxz
outsl
fistpll
xor
xchg
testl
sub
scas
mov
push
hlt
dec
fwait
dec
cmp
dec
ljmp
xchg
add
scas
outsb
lahf
jl
sub
push
lahf
jmp
stc
sub
jle
sub
push
add
fildll
shlb
into
sub
test
dec
rol
es
mov
mov
pop
inc
lods
test
fwait
mov
pop
xchg
jp
jmp
jno
fstpl
pusha
loop
xor
in
clc
enter
adc
pop
gs
leave
stos
dec
add
gs
das
inc
pop
jp
and
push
fistl
xor
push
dec
int
out
dec
sbb
mov
cmp
sbb
data16
sbb
push
mov
push
add
shll
sbb
into
repnz
jmp
adc
jge
pop
repz
ds
mov
dec
gs
inc
std
xor
das
test
es
aaa
jb
sbb
adc
cs
aas
jno
sbb
scas
lds
jbe
inc
test
pop
mov
pop
scas
stos
sbb
aas
jle
push
leave
xlat
call
bound
jo
imul
cs
mov
scas
pusha
mov
invlpg
fs
lcall
adc
test
dec
imul
mov
mov
jle
mov
sub
or
data16
outsl
lahf
xchg
insl
int
mov
sbb
mov
cmp
xor
lcall
clc
lcall
pop
add
ds
pop
aaa
fstpt
xchg
jbe
test
pop
enter
loope
ret
xor
mov
dec
mov
jge
add
push
aas
jns
mov
shlb
cmpsl
push
movb
std
test
push
aas
inc
adc
push
out
cmp
cmpb
inc
inc
stc
xchg
decb
push
repz
cmpsl
push
add
lahf
pop
add
cli
in
jge
push
ljmp
shlb
cli
imul
push
insb
jns
or
pop
ret
insb
pop
fucomp
aas
in
clc
sbb
and
sbb
in
fdivp
das
std
jne
cmc
es
cmpsb
push
or
jmp
adc
add
mov
dec
fs
mov
cld
sbb
cmpsl
into
aad
aad
push
sub
inc
ficompl
bound
mov
xor
fs
xchg
std
clc
add
or
cmp
sbb
sbb
jl
mov
mov
push
int
lock
adc
jecxz
mov
xchg
je
lock
mov
std
jl
aad
sar
data16
gs
mov
mov
jne
and
push
in
push
pushf
popa
sbb
push
dec
int3
push
insl
sbb
rol
xchg
push
rclb
add
inc
lcall
jae
sbb
pop
scas
mov
sub
or
push
lahf
add
add
ret
into
push
data16
or
fs
insl
in
test
pop
and
in
rclb
mov
loopne
pop
aas
inc
mulb
fdivl
push
test
sahf
ljmp
fimuls
dec
mov
dec
pop
sbb
fmulp
pop
pop
int3
in
lahf
adc
pop
jne
adc
jne
jae
jae
mov
loop
dec
push
lret
xor
lods
je
adc
push
movsl
dec
jns
lock
iret
pop
xor
mov
jmp
std
xchg
mov
bound
push
stos
xlat
in
enter
popf
iret
mov
or
or
pop
sbb
dec
cmc
push
mov
jbe
jle
mov
push
jg
cmpsl
enter
jle
mov
cltd
in
inc
stc
mov
mov
dec
dec
cltd
xchg
test
xor
ss
arpl
xlat
adc
addr16
or
or
imul
sub
fldcw
stos
lea
add
arpl
addl
push
pusha
jb
inc
adc
sub
imul
push
mov
add
icebp
decb
push
loope
cld
popa
insl
or
enter
pop
xchg
push
lret
mov
and
pop
cmp
fsub
cmp
sub
mov
or
dec
adc
cld
mov
jmp
icebp
mov
pop
out
mov
add
mov
jno
push
enter
xor
jmp
setg
fprem1
aam
xchg
jne
lods
push
mov
cs
outsl
jbe
gs
fwait
out
cwtl
fisttpll
dec
fnstsw
xor
insb
or
push
jmp
scas
mov
pop
insl
psadbw
loop
jno
jb
dec
mov
fsts
shll
mov
repnz
add
mov
xchg
cs
sbb
push
andl
jb
scas
cli
gs
cwtl
aam
fwait
inc
inc
xor
push
sarb
jecxz
mov
push
addl
negl
xor
sub
mov
outsb
jl
ljmp
scas
ret
daa
and
mov
out
cs
fsub
pop
pop
lea
ja
cmp
mov
jne
ret
cli
mov
daa
mov
xchg
scas
repnz
and
mov
cld
xor
inc
push
jl
dec
ss
adc
rolb
bound
and
sub
mov
cmc
or
sbb
jmp
mov
cli
push
je
xchg
cmpsl
jo
fistl
movsl
or
dec
and
into
repnz
sub
and
insl
pop
sahf
jg
jae
bound
iret
fnstenv
inc
sbb
js
lret
push
stos
inc
aaa
inc
test
cmpsl
xchg
mov
imul
lds
clc
pop
inc
sbb
mov
xchg
xor
repz
lahf
pop
jnp
cli
xor
xor
ret
and
jno
xor
jae
xor
movsl
idiv
lds
aaa
or
or
out
mov
dec
xor
or
notb
je
jp
ljmp
and
adc
pop
dec
pop
cmc
vfmadd132ps
clc
imul
fdivr
adc
xchg
cmc
test
xor
addr16
mov
jmp
fadds
mov
mov
adc
sbb
loop
aad
sbb
xchg
cmpsl
push
mov
leave
mov
dec
sbb
flds
test
loopne
push
adc
fimuls
add
pop
sbb
mov
xor
pop
xor
scas
jl
mov
xor
imul
sbb
out
in
adc
pop
gs
mov
es
cltd
jge
push
ljmp
xor
or
sahf
imull
je
mov
fs
aam
shll
loopne
inc
mov
clc
mov
insb
leave
cmc
mov
pop
adc
adc
lock
sbb
pop
adc
xor
sti
sub
insl
leave
adc
andb
or
mov
lea
and
jb
lea
dec
call
or
add
xor
sti
cmp
pop
pop
jecxz
fmul
mov
sub
lods
xchg
test
lds
xor
iret
out
lret
pop
cmp
pop
cmp
mov
mov
loop,pt
cli
pop
lods
add
cmp
jg
add
rorb
mov
jo
push
dec
jmp
imul
imul
sub
bound
idivl
add
ss
and
cmp
fists
in
xor
enter
scas
inc
stos
inc
push
imul
push
fnstcw
lcall
les
inc
dec
or
lret
push
and
jnp
popf
push
push
int
jl
mov
mov
lahf
into
rol
out
sub
nop
pop
cli
or
dec
in
cmpsb
test
in
cmp
int3
pop
mov
insl
or
inc
sub
aad
adc
test
nop
push
ret
stc
pop
or
push
jno
mov
js,pn
test
add
xchg
cld
xor
push
ficoms
mov
lret
pushf
xorl
imulb
or
scas
jbe
data16
lret
cmp
inc
push
test
or
fmuls
add
cmp
mov
cld
push
into
adc
mov
pop
pop
and
out
imul
aaa
sub
dec
hlt
and
push
mov
jmp
int3
cmc
xchg
xor
add
rclb
inc
jno
cmpsb
iret
pop
dec
andb
push
in
pop
and
popf
daa
sbbb
scas
lods
xor
xchg
std
jecxz
pop
lods
push
mov
mov
daa
sahf
mov
inc
xchg
or
popa
lahf
cwtl
fistps
push
imul
les
lods
mov
hlt
pop
sub
lds
clc
inc
xchg
cmp
jns
ss
adc
andl
or
stos
outsb
bound
dec
cltd
shlb
loopne
jle
ficoml
icebp
xor
inc
notl
pusha
adc
sbb
jo
dec
push
rclb
jg
inc
out
addl
jmp
jb
aaa
xor
pop
aam
inc
and
sbb
fs
and
into
nop
inc
pop
xchg
cmp
in
les
andl
push
insb
int3
pop
inc
lret
mov
mov
cltd
andb
ret
mov
mov
sti
lods
pop
push
xchg
mov
sbb
sti
xorl
fisttps
stos
mov
test
rclb
push
in
cmp
sbb
sub
mov
aad
aas
fnsave
dec
fidivl
mov
sub
cli
pop
xor
leave
les
xchg
push
cmpl
mov
fnstcw
inc
fisttps
outsl
cmp
int
loopne
lret
mov
aam
jp
xchg
and
mov
pop
add
mov
adc
push
outsb
sbb
push
pop
push
sbb
mov
subb
ljmp
subb
inc
mov
adc
jb
lahf
adc
int3
pop
stc
cmp
lahf
jb
js
fwait
sarl
push
rcrb
inc
fcmovbe
cmpb
movsb
aad
pop
jp
and
insb
xor
or
mov
inc
pop
adc
jmp
push
fnstenv
push
sub
scas
ret
incl
mov
cs
cltd
fildll
dec
pop
cli
in
dec
push
sbb
pop
mov
fwait
xchg
and
push
into
icebp
push
jbe
sahf
test
push
mov
xchg
cli
or
roll
jo
rorl
fwait
inc
cld
lods
dec
movsb
mov
mov
xchg
insl
popa
and
sbbb
xchg
lods
cmpsb
cmp
insb
arpl
jbe
sbb
dec
repz
stos
mov
ficoms
or
mov
loope
lcall
daa
in
lods
sub
add
mov
add
lret
jno
mov
push
jns
dec
int
xor
push
or
mov
xchg
arpl
leave
dec
popf
iret
aaa
bound
aam
or
mov
scas
pop
cwtl
and
in
clc
inc
jecxz
push
subb
jo
sbb
or
pusha
adc
sbb
jge
iret
add
pop
lret
loopne
mov
cld
jmp
call
inc
xorb
stos
sub
popf
pop
xchg
jmp
or
xchg
mov
bound
fwait
xor
loop
adcb
jl
js
cli
dec
das
loop
cmpsb
add
fisttpll
stos
fwait
adc
out
xchg
insl
push
outsb
jmp
out
dec
xor
aad
loopne
movsl
sbb
adcb
inc
inc
outsb
scas
fimuls
mov
nop
movsl
sbb
mov
fwait
sub
sbb
sbb
and
mov
stos
pop
ret
sahf
cmp
jmp
and
addr16
jl
mov
add
jno
add
mov
push
ret
push
js
jle
ficoml
or
mov
mov
ret
popf
mov
add
jl
xchg
jmp
fstl
pop
mov
in
test
divb
push
sbb
sub
dec
push
inc
push
je
mov
das
out
mov
addr16
test
sbbl
pushl
leave
test
pop
push
adc
push
faddl
cld
cmc
nop
pop
inc
push
das
cwtl
xorb
in
jmp
je
lcall
mov
out
ficompl
push
sbb
xchg
cmp
inc
sub
push
testb
bound
das
pop
inc
xchg
in
xchg
mov
ja
pminub
scas
mov
pop
xor
lock
sbb
outsl
jns
fidivrl
mov
pop
adc
mov
jae
jne
cmp
mov
push
aad
and
je
and
dec
mov
jbe
push
inc
data16
dec
cmc
imul
cli
ljmp
xor
dec
cmp
rcrb
mov
or
pop
adc
pop
movsl
push
daa
aas
mov
mov
push
or
inc
scas
cmp
stc
sarl
or
leave
repz
adc
fistps
aad
push
lret
mov
sbb
insb
sub
ret
enter
xchg
pop
dec
dec
mov
pushf
test
rcrb
outsb
mov
mov
cmp
xchg
inc
xor
daa
xchg
mov
mov
adc
mov
jne
mov
mov
jnp
pop
dec
arpl
jmp
sub
mov
adc
cltd
inc
mov
nop
xor
dec
js
and
cli
xchg
xor
push
sti
lods
lret
popa
pop
insl
cld
imul
lods
popa
fwait
sbb
in
data16
xchg
or
adc
dec
add
mov
jnp
pushf
add
dec
xor
insl
mov
es
mov
xchg
shrb
cli
cmp
repz
mulb
cmp
jmp
std
or
scas
movsl
daa
out
mov
fnstenv
popl
pop
mov
ret
gs
lret
push
ja
pop
sbb
mov
xor
push
and
xchg
mov
jl
mov
andb
mov
fisubl
insb
add
dec
fld
inc
ds
dec
and
icebp
loope
dec
int3
cmpsb
push
inc
xchg
mov
movsb
dec
jmp
inc
bound
sbbb
mov
jno
scas
ret
or
fsub
xor
mov
add
cmpb
shlb
out
xchg
mov
hlt
in
mov
dec
repnz
push
pusha
in
mov
ja
lods
xor
fs
xchg
or
out
daa
pop
cmp
or
insl
sbb
lcall
shlb
clc
add
dec
push
sub
lods
clc
outsb
pushf
stos
adc
in
in
inc
and
sub
movsb
aas
or
mov
push
push
call
pusha
adc
add
adc
cmp
adc
push
inc
out
roll
add
jl
pop
dec
mov
pop
xchg
xor
fcompl
jecxz
jmp
imul
sti
jo
fcomps
ljmp
mov
xchg
dec
aaa
push
in
xor
mov
pushf
jg
addb
outsl
ret
jae
fsubrs
xchg
sbb
jnp
insb
jno
sbb
mov
repz
cmp
fstpt
inc
lahf
mov
rcll
sub
fimuls
dec
add
outsb
leave
test
ds
lods
jl
and
xchg
push
jge
push
mov
mov
in
cmp
int3
js
sbb
ljmp
pop
mov
inc
mov
cmp
aad
lcall
inc
rcll
cmpl
ficoml
loope
int3
daa
into
leave
pop
fsubr
sbb
ror
mov
xlat
hlt
insl
add
stos
or
adc
cmp
xor
lret
inc
push
jmp
cmc
pop
jno
jbe
push
xchg
mov
out
popa
insl
add
jp
leave
lahf
inc
fcomps
add
lods
xchg
fisttpl
push
pop
cli
jns
push
jns
out
inc
je
jae
xor
orl
mov
or
cmc
pop
mov
jbe
mov
subl
adc
loopne
add
mov
xchg
xor
cs
and
inc
pop
mov
xor
shll
mov
scas
jns
rol
adc
xor
jb
popa
loopne
xor
iret
mov
es
cmpsl
cmp
pop
ret
xor
into
in
int
xor
loope
push
out
and
faddp
mov
out
ljmp
aad
jmp
fcmovne
je
dec
das
push
push
push
xor
repnz
xchg
add
mov
loope
xor
mov
inc
loope
aam
mov
or
push
inc
into
lods
mov
ds
data16
in
sbb
push
push
lret
cmpsl
mov
or
xchg
inc
rorb
outsl
and
jbe
in
jbe
mov
stc
std
jecxz
lods
shll
push
pop
xchg
lahf
or
int3
idivb
jl
cmp
fidivrs
jecxz
inc
mov
gs
mov
clc
bound
sarl
ss
dec
mov
mov
xor
jl
mov
std
repz
xchg
movsb
lret
movsb
fsubrp
push
dec
lahf
iret
fcomps
and
cmp
bound
roll
pop
lods
pop
dec
add
lcall
mov
fisubrs
sbb
inc
xchg
cwtl
add
jne
and
cmp
xchg
outsl
stos
popa
and
xchg
fisttpll
pop
sbb
inc
rcl
xor
mov
in
xchg
aaa
jne
loope
in
sub
lock
les
popa
clc
loopne
roll
push
test
push
fs
inc
pop
sbb
out
mov
je
adc
mov
add
add
or
in
insl
inc
test
cmp
outsl
jbe
xor
or
push
mov
loop
test
cmc
xchg
sbb
and
jne
xchg
jecxz
dec
dec
dec
jge
pop
add
sub
xchg
and
lods
sub
shll
inc
iret
jae
adc
movsl
lret
push
ljmp
mov
insb
adc
insl
pop
fmul
xor
insl
fstl
jmp
jmp
loope
pusha
jno
pusha
scas
xor
and
add
ret
aam
imul
out
sub
addl
xchg
mov
scas
push
in
lret
das
add
lods
jnp
pop
pop
lahf
push
movsb
sarl
or
inc
adc
into
je
sbb
mov
xor
sub
out
rcll
outsb
push
cmp
mov
adc
sub
popf
pop
xor
sti
das
popf
sub
xor
rcr
cwtl
pop
call
test
pop
sbb
sub
mov
or
sarl
into
cwtl
mov
dec
push
repz
aad
push
rcrb
or
icebp
je
inc
imul
fs
dec
das
and
pop
iret
mov
push
jns
mov
push
add
cltd
or
jne
or
fimuls
or
outsl
sbb
jl
mov
in
rcrl
fnstcw
xor
cwtl
insb
jl
jle
shlb
mov
stos
add
cmpsb
add
cld
cld
inc
pushf
add
mov
pop
sbb
aad
or
sub
xchg
das
cmp
cmc
outsl
jl
movsl
inc
pop
push
in
imul
sbb
pop
popf
lods
mov
push
out
sbbb
inc
sub
cmp
xchg
push
jb,pt
mov
and
xchg
fwait
rcll
sub
mov
movsb
sub
or
adc
scas
movsb
push
in
les
test
lods
xchg
push
mov
repz
jecxz
pop
jnp
cmp
or
cwtl
push
ljmp
lret
fistl
push
ja
sub
adc
es
rol
inc
mov
jle
jns
std
andb
ret
loop
sbb
mov
loop
cmp
std
leave
out
pop
aam
and
sbb
es
push
es
push
pusha
outsl
pop
cmp
fs
and
xchg
mov
out
sub
add
jmp
out
cmp
cmpsl
dec
and
out
add
push
xchg
jecxz
adc
pop
stc
inc
pop
mov
flds
cmp
adc
lret
fs
jp
shlb
lea
pop
stos
pop
push
pusha
inc
mov
mov
stos
lods
sbb
test
insb
ret
loop
fbld
fwait
clc
ljmp
cmpsl
inc
mov
enter
and
mov
add
rclb
stos
or
test
hlt
mov
pusha
add
sbb
shll
push
lret
sub
pop
sbb
fcoms
scas
pop
or
mov
sub
pop
mov
cwtl
outsl
dec
lret
jns
repz
insb
cmp
push
push
call
jmp
push
dec
movsl
mov
xchg
push
push
fisttpll
rorl
enter
mov
stc
cmp
inc
sub
lock
mov
mov
jp
fildll
shrd
rorb
pop
xlat
imul
inc
xchg
movsl
adc
or
stos
cmpsl
popf
add
in
je
mov
lods
lret
mov
xchg
dec
pop
pusha
mov
push
mov
insl
cmovge
jno
xor
inc
into
pusha
add
mov
es
inc
and
cmp
xchg
mov
sarl
or
mov
sbb
sub
cmp
icebp
xor
sbb
xchg
adc
jge
fadd
mov
adc
mov
mov
int3
sub
popf
into
jge
xor
loope
stos
jnp
add
andl
sbb
imul
aaa
hlt
ret
push
mov
aam
into
sub
insl
xor
lea
xchg
shrb
jge
dec
out
xlat
adc
dec
repnz
mov
mov
and
insl
push
mov
pop
insl
add
dec
sbb
scas
icebp
jl
dec
xchg
push
mov
daa
rcl
aas
inc
jg
inc
arpl
ficomps
dec
push
sub
outsl
shr
repz
jnp
jecxz
mov
lahf
mov
mov
loop
pop
pop
leave
lods
mov
lret
or
mov
xchg
push
mov
pop
test
sub
ja
ss
xor
daa
repz
sarb
popf
stc
loop
addb
rorb
lcall
enter
inc
int3
and
insl
push
ret
adcl
push
jle
pop
dec
jl
dec
in
xor
outsl
out
scas
scas
fcomi
loop
cltd
maxps
inc
into
shlb
imul
xchg
or
xchg
or
cmc
insl
mov
lahf
mov
sub
cmp
ficompl
mov
or
mov
hlt
pop
push
imul
pop
push
es
scas
cwtl
cmp
mov
jns
sub
fldenv
lds
sahf
inc
mov
mov
add
cmp
sbb
scas
sahf
adc
lahf
mov
ret
stos
pop
repnz
das
dec
jmp
fdivp
xor
in
pop
push
addl
popf
inc
jmp
mov
jb
sarl
insb
jmp
fnsave
lock
scas
push
das
or
sub
fwait
mov
xor
adc
dec
inc
jns
outsb
add
sbb
add
imul
pop
loopne
push
jl
int
in
dec
push
lcall
in
push
in
cmpl
scas
pushf
pop
add
data16
mov
xchg
mov
mov
inc
pop
lea
ss
pop
addr16
jmp
insb
scas
push
dec
pop
into
pop
mov
xchg
or
sti
push
loopne
cmpsb
jo
sbb
je
ss
push
nop
push
mov
cli
imul
sub
sarb
shlb
pop
add
out
scas
xchg
popf
pop
mov
fs
jmpw
lock
mov
leave
lret
outsl
xor
in
les
pop
imul
jge
pusha
call
cld
pop
jge
jb
and
jno
ljmp
dec
xchg
inc
cwtl
or
ret
popf
xchg
push
mov
jo
loope
push
popa
cmp
and
dec
cld
xor
adc
xlat
repz
ret
push
adc
pop
cmp
jo
or
lcall
dec
fldl
shl
shr
rorb
fwait
loope
xchg
sbb
cs
es
out
xchg
mov
punpckhbw
sahf
inc
je
and
push
loope
inc
mov
inc
pushf
fidivl
mov
add
sub
or
mov
xor
pop
jp
jae
dec
arpl
dec
mov
cmp
sahf
add
fxch
nop
sbb
orb
lock
inc
mov
aam
in
mov
sarb
mov
imul
mov
xor
bound
dec
and
and
inc
scas
xchg
mov
cmc
fnstsw
sarl
js
push
loope
or
leave
test
test
stc
js
jae
sbb
jb
dec
int
out
sub
pop
ss
adc
mov
jecxz
cmp
adc
push
sbb
pop
jbe
pop
les
jne
clc
mov
jns
dec
sbb
mov
shll
push
adc
inc
sub
subb
inc
jecxz
dec
insb
mov
sub
bound
subl
cmc
xchg
jns
gs
scas
sub
hlt
cmpsb
scas
pop
adc
fnstcw
xor
xor
iret
cmp
aad
fbld
test
xor
popa
xorb
dec
xor
mov
adc
sbbb
pop
jne
test
ret
dec
mov
mov
lods
push
adc
mov
leave
popa
out
mov
add
fmull
in
mov
adcb
hlt
cmp
aas
shrl
jp
iret
ret
in
push
push
mov
jnp
pop
mov
movsl
mov
rcpps
test
cld
jb
jae
push
mov
fadds
sbb
adc
rcr
inc
mov
mov
hlt
lcall
add
std
iret
or
xor
sub
pop
les
out
sub
das
cli
lds
sub
xchg
icebp
out
aas
pop
fs
lods
shrl
lcall
test
push
lahf
or
push
cld
cmp
dec
mov
mov
pop
into
and
and
mov
jno
js
insb
add
push
cmpsl
into
aam
rorl
cli
dec
fcmove
popa
mov
push
pop
fisttpll
int
stos
out
popf
pop
sbb
xchg
std
xor
jecxz
cmpsb
sub
jae
or
and
icebp
fistl
stos
pushl
addr16
inc
adcl
lea
adc
add
sub
pop
push
xorb
or
mov
aad
mov
add
mov
sbbl
add
sub
xor
push
test
stos
mov
cmpsl
push
movsl
orb
movl
jg
imul
jns
mov
mov
add
sahf
add
cmpsl
shrl
pop
inc
mov
inc
ds
sub
stc
cs
movsl
lods
mov
enter
jae
mov
and
xchg
mov
pushf
push
lds
adc
cli
adc
stos
mov
and
push
aad
test
sub
and
xchg
sbb
cmp
repz
jne
sbb
aad
mov
divl
fstpl
popf
out
xor
imulb
push
icebp
jns
jbe
int
pop
in
icebp
adc
lods
mov
in
jecxz
test
mov
dec
idiv
sub
mov
sub
imul
fs
or
push
push
rdtsc
pop
icebp
or
pop
inc
in
call
test
push
cld
push
xor
mov
mov
sbb
nop
inc
mov
dec
xor
push
adc
hlt
push
sahf
mov
repz
jge
nop
mov
xchg
sbbb
and
lds
sub
inc
adc
popf
mov
das
mov
push
or
aaa
jbe
scas
pusha
cmp
sub
nop
lahf
loop
fistpll
aam
jle
mov
add
popa
cmp
add
mov
inc
xchg
adc
movb
cmp
or
sbb
loope
dec
xor
mov
mov
push
lods
lods
cmp
test
mov
or
mov
inc
sub
test
insl
fnsave
add
xor
repnz
xor
ds
mov
repz
in
jns
add
inc
ret
mov
sbb
inc
fildll
and
pop
icebp
insl
mov
ja
insb
lds
in
mov
inc
or
mov
ffree
fdivl
leave
lcall
jb
push
sbb
inc
lock
and
ja
mov
pop
sbb
mov
fisubrl
sub
jns
dec
pop
ds
insb
outsb
jns
pop
mov
sbb
into
and
push
movsb
stc
das
pop
inc
shll
adc
lret
and
popa
mov
xor
cli
sbb
aad
mov
sbb
mov
les
adc
lret
jns
in
in
out
sub
fucomip
mov
call
movsb
dec
and
aaa
xor
mov
scas
sbbl
data16
ja
clc
sbb
outsl
and
ljmp
adc
aaa
insb
or
mov
mov
adc
mov
test
xor
and
lock
xlat
loope
sub
jge
pop
dec
push
mov
pop
aas
insl
dec
shlb
jns
cwtl
sub
pop
cmp
popa
movsb
dec
push
mov
or
int
movsb
sahf
and
or
test
dec
push
mov
out
push
lahf
imulb
sbb
stos
or
xor
mov
loope
aas
cwtl
scas
add
dec
xchg
cli
sub
push
cmp
imul
pop
insb
test
dec
call
popa
mov
adc
pushf
sub
inc
dec
orl
lret
xchg
leave
lods
pop
scas
lods
push
cld
xchg
idivb
cld
movsb
fldt
add
cmp
jnp
lods
enter
stos
pop
mov
cmp
sub
subb
rorl
dec
popf
jae
fwait
aad
inc
lock
mov
jmp
cs
fisttps
cmp
push
shll
push
jne
inc
mov
and
xchg
dec
out
lea
ja
pop
xchg
ret
fdivl
cld
push
xchg
adc
imul
push
stos
imul
loop
clc
jl
test
ljmp
out
dec
pusha
aad
adc
xchg
ss
or
in
daa
dec
mov
mov
sub
sti
inc
sub
fadds
mov
pusha
sbb
lock
cs
jg
out
cld
cld
push
sahf
sbb
subb
xor
jle
dec
xor
lret
cmp
lahf
aas
jb
rcr
test
or
insl
jg
dec
lret
bswap
sbb
lret
into
bound
add
in
test
orl
andl
adc
stc
les
mov
pop
xchg
jo
in
movsl
jbe
push
fidivl
mov
xchg
sbb
sub
loopne
sub
adc
fdivl
aaa
pop
ret
or
clc
xchg
sub
out
jg
lds
xchg
jbe
add
push
mov
out
fnstsw
repnz
pop
repz
iret
in
cwtl
xchg
adc
stos
ja
xlat
psllq
and
mulb
and
inc
enter
add
or
xchg
pop
and
icebp
sbb
dec
xchg
mov
aad
mov
call
pushf
icebp
int3
cmc
insb
js
aam
sbb
fstpl
in
je
sub
sbb
and
iret
cmp
in
fcomp
sub
push
pop
icebp
clc
outsb
jle
outsl
add
repz
xor
add
sub
mov
test
inc
jle
sbb
idivb
mov
add
adc
mov
sub
jp
icebp
dec
fstpt
stos
cwtl
push
pop
loope
push
leave
mov
xchg
aas
add
cmpsl
xchg
fdivl
push
jae
punpckhbw
push
push
push
mov
inc
sub
jb
addr16
shll
cmpsl
push
xchg
mov
mov
outsl
in
or
jmp
jns
push
inc
dec
jle
jo
adc
push
adc
jo
xchg
mov
push
and
mov
push
test
cmp
rcll
subl
fsubs
cmc
pop
lret
leave
rcrl
enter
stos
stc
xor
and
inc
lods
inc
sbb
push
insl
mov
sbb
aam
adc
aad
jmp
rcr
xor
fstl
adc
mul
mov
fwait
adc
mov
pop
rcrb
out
mov
daa
push
insb
xchg
or
out
mov
pop
mov
dec
add
cmc
cli
sbb
loope
fidivl
divl
adc
adc
mov
sub
add
jns
jge
xchg
xchg
scas
repnz
jle
add
stc
outsb
mov
ret
push
xlat
test
inc
sbb
popf
aaa
test
cli
cmp
gs
jno
add
sub
test
mov
jecxz
and
mov
cli
dec
xchg
cmp
movsl
push
fimull
jle
or
shrb
inc
jle
lret
or
inc
mov
sbb
fwait
test
push
sub
loope
mov
mov
aas
sbb
jae
cmp
clc
clc
insb
shr
push
fsubrl
movl
iret
test
pop
push
popf
ret
sub
pop
repnz
jae
push
push
mov
arpl
push
clc
xor
lcall
xor
adc
mov
test
xchg
xor
inc
insl
imul
std
cmp
jp
cld
out
aas
lret
gs
dec
jne
jae
daa
shl
jg
iret
mov
add
daa
mov
dec
pop
pusha
cmp
cmpsb
out
les
adc
inc
cmp
fsts
and
mov
rolb
xchg
scas
aam
dec
mov
xor
sub
push
mov
cmc
mov
mov
cltd
in
xchg
xor
mov
arpl
adc
xor
fnstenv
out
fildl
fwait
and
stos
mov
fidivrs
sub
daa
fwait
int3
or
sbb
dec
push
gs
jl
xor
add
and
and
sbb
scas
jmp
scas
mov
sub
mov
push
jge
das
pop
mov
mov
jle
cmp
add
jno
movsb
stc
out
push
ss
and
testb
stos
test
insl
xchg
fwait
fwait
or
call
pop
or
fldl
mov
cmpsb
hlt
xchg
sub
mov
pop
mov
aam
sub
mov
jne
fimuls
loop
sti
in
popa
fidivl
and
imul
ja
jnp
push
and
jae
test
fnstenv
lret
xorb
inc
out
out
cltd
das
aaa
shl
xchg
cmp
dec
pop
pusha
cltd
loop
xchg
cmp
push
jno
dec
add
mov
stos
pop
add
pop
ret
ja
ret
sbb
mov
xor
and
icebp
cwtl
cld
mov
inc
mov
push
xchg
imul
fwait
mov
scas
test
mov
popf
xchg
xchg
jae
in
das
negb
inc
lahf
clc
shll
rorb
nop
inc
push
add
pop
mov
stos
sbb
mov
ja
add
mov
mov
xor
data16
jmp
insb
push
adc
add
test
sti
jb
jecxz
push
ds
cld
enter
cltd
popa
jbe
imul
mov
stos
scas
movhps
sub
and
fsubl
add
insb
js
sbb
sbb
in
inc
dec
sub
dec
das
fildll
inc
pop
mov
scas
jno
push
xor
imul
leave
data16
scas
aaa
pop
data16
sub
mov
or
and
cmp
pusha
inc
adc
mov
lods
jno
stos
and
dec
sub
stos
lock
mov
mov
xchg
repnz
popa
test
push
fwait
sbb
leave
xchg
push
notb
clc
jl
popf
and
add
daa
adc
andl
lret
xchg
sub
cli
aad
push
jne
stc
inc
add
xchg
push
mov
dec
leave
jnp
sti
inc
sbb
jle
rcl
loope
xor
jmp
loopne
add
mov
fisttpl
leave
or
xchg
inc
cltd
add
pop
xchg
sub
call
xchg
dec
cli
fdivrs
sarl
mov
out
xor
xor
dec
repz
mov
mov
pop
icebp
insl
or
loopne
fmuls
push
enter
xchg
dec
mov
rorb
mov
pop
inc
psubusw
inc
push
cs
push
push
adc
push
sbb
jg
push
jle
xchg
imul
insl
jecxz
inc
and
or
jg
push
mov
xor
lret
cwtl
pop
or
fcomip
imul
sbb
in
cmp
hlt
fistps
xchg
mov
dec
nop
mov
jae
sahf
inc
movsl
cmpb
shrb
enter
pop
xchg
pop
push
shrl
mov
or
pop
jp
xor
xchg
sbb
mov
fsts
adc
jg
filds
add
repz
inc
mov
out
and
xchg
xor
inc
je
push
mov
addr16
lahf
repnz
sbb
jle
call
les
and
xchg
add
stos
outsb
stos
adc
adcl
adc
mov
push
out
sti
or
das
xor
or
scas
aad
cmpsl
inc
das
dec
out
lea
sbb
bound
jb
inc
jle
insb
ja
sub
xchg
pop
mov
pop
push
inc
jmp
sub
pop
push
add
jge
rcrl
cmp
cmp
test
jno
clc
leave
jae
dec
sti
pop
fcomps
dec
jae
mov
pop
inc
sbb
or
sub
add
into
jl
movsb
aam
pop
arpl
pop
clts
jbe
cmp
sbb
add
sub
push
sar
pop
dec
dec
fldl
gs
sub
and
add
stos
gs
sbb
fildll
mov
or
in
xchg
addl
mov
xor
sti
loop
mov
mov
sbbl
jae
mov
lods
xor
stos
cmpsb
rclb
inc
sub
pop
loope
sub
inc
cmpsl
xorb
dec
sarl
jb
jmp
fs
adc
xlat
test
out
xchg
in
mov
outsl
mov
arpl
xchg
pop
mov
jp
pop
int
ljmp
mov
out
inc
inc
pop
gs
ret
iret
imul
popf
jmp
orb
lahf
icebp
or
dec
pop
enter
addr16
mov
push
sub
arpl
push
icebp
cmp
adc
adc
mov
sub
inc
test
or
aas
push
cmp
sub
sarl
or
aad
push
insb
adc
fwait
arpl
xchg
pop
mov
lret
push
jno
ja
daa
inc
fidivrs
push
mov
ljmp
pop
lods
jl
in
mov
xchg
lahf
sbb
pop
or
es
sub
mov
jbe
je
jo
mov
xchg
mov
dec
clc
jnp
pop
iret
add
mov
jb
mov
jmp
shrb
cmpsb
add
lcall
aad
in
adc
out
stc
sahf
and
jns
inc
lods
in
add
jle
leave
frstor
lcall
pop
aam
cmp
test
and
das
dec
dec
gs
dec
clc
push
adc
leave
cmp
idiv
ficoms
loop
push
cmp
xchg
imul
testl
jae
roll
test
xchg
jl
adc
loopne
into
int3
cs
cld
imul
pop
aas
cwtl
dec
or
jmp
mov
xchg
push
or
fisttpll
xchg
xor
pop
imul
rcr
sub
imul
inc
repnz
es
sahf
es
jno
insb
inc
jge
sti
in
dec
das
jb
cmp
add
xor
mov
repz
adc
enter
add
insb
or
into
es
inc
mov
jno
lret
xchg
out
mov
lret
push
xchg
xchg
arpl
cmp
cmp
and
push
insb
cs
test
jg
cmp
shll
adc
dec
jno
fadds
or
pushf
fwait
push
fistpl
test
mulb
out
dec
mov
add
xor
mov
push
xchg
nop
sub
rclb
cmp
out
xor
shlb
fdivr
int3
rcl
or
push
cmp
aam
or
pop
push
int
nop
out
cs
incl
xchg
xchg
mov
out
addr16
je
mov
and
cld
mov
mov
data16
xrelease
mov
clc
je
jge
push
lret
dec
sbb
je
push
repz
sar
add
in
popf
pop
dec
ret
shl
fsts
mov
cmp
jecxz
fistpl
insl
add
sbb
mov
sbb
push
cmpsl
addl
mov
dec
push
outsl
sbb
jne
scas
mov
jb
push
mov
cld
jg
lea
in
fsubl
mov
je
mov
xchg
cmp
ret
xor
xlat
es
aam
jecxz
inc
por
pop
sbbl
bound
sti
je
cmp
test
inc
in
icebp
jmp
cltd
add
lahf
add
mov
cld
mov
xorl
je
inc
es
xchg
std
out
outsb
loopne
testl
inc
mov
or
sub
loop
pop
ss
cli
mov
ds
aam
ss
lret
mov
or
mov
xorps
sub
shrb
pop
stc
jl
jp
loopne
dec
push
pop
and
or
call
jns
add
jne
sahf
add
repz
xchg
rorl
test
fmuls
xlat
mov
addr16
jge
add
insb
repz
xor
jo
lds
jae
lock
jb
shr
or
xor
pop
pop
push
repz
jg
nop
cmp
and
sbb
iret
bound
mov
mov
cmp
popf
cli
or
clc
mov
mov
fwait
imul
pop
imul
int
xor
push
and
xchg
mov
addr16
enter
or
jl
out
test
cmc
push
inc
inc
xchg
push
dec
imul
push
lret
sub
or
adc
inc
gs
add
add
mov
hlt
leave
js
dec
jns
out
xchg
push
sbb
jle
or
inc
add
push
inc
jl
mov
out
movsb
hlt
out
xlat
xchg
fsubr
cwtl
sbb
adc
mov
xor
lock
ret
loope
gs
sbb
pop
mov
out
mov
mov
repnz
gs
outsl
jb
mov
pushf
cmpsl
stc
mov
pop
decl
or
lods
cltd
inc
xchg
jp
cli
mov
js
jmp
bound
or
bound
sti
sbb
or
dec
push
mov
jns
sub
ret
stc
push
dec
test
mov
inc
daa
mov
push
ret
add
out
mov
nop
fldt
mov
int
sub
adc
dec
sbb
shrl
hlt
pop
and
pop
fsub
dec
pushf
je
iret
pop
je
pop
int3
dec
pop
jne
imul
stc
ljmp
sbb
cmp
and
and
icebp
sbb
pushl
xor
repz
cmp
inc
out
fwait
stos
out
movsl
push
inc
or
popf
push
sbb
stos
fs
pusha
adc
pop
dec
xor
xor
pop
dec
mov
jl
sub
fcomip
inc
push
adc
movsb
lret
xchg
jmp
cs
inc
arpl
xor
int
dec
scas
imul
add
jecxz
xchg
mov
mov
or
mov
push
pop
es
aad
pushf
and
and
sar
fwait
mov
sti
outsb
jmp
outsb
xchg
jmp
lds
mov
cmpsl
adc
or
aas
cmpl
and
mov
push
sar
cmpb
cmp
jnp
jp
sub
lods
faddl
cmp
in
push
aam
test
xor
pop
insb
frstor
jns
decb
dec
ds
hlt
push
sub
cli
aas
inc
and
popa
jmp
jmp
sub
fstps
pop
aad
in
daa
shr
loop
pop
out
insb
mov
out
mov
setbe
inc
mov
repz
inc
add
sbbb
mov
cmp
adc
inc
dec
dec
sub
jo
fmuls
or
popf
dec
jmp
cmc
in
decb
sbb
cmpsb
das
push
loop
repnz
push
mov
mov
js
das
popf
adc
jno
aaa
aaa
rorl
inc
mov
jns
mov
xchg
lahf
and
sub
adc
loop
pop
pop
sub
dec
lcall
int
das
sub
cld
add
int3
or
icebp
cmp
fstps
jmp
inc
mov
jae
push
lcall
addl
mov
and
jle
sub
mov
pushw
popf
notl
sbb
mov
and
shrb
mov
pop
test
jbe
cmp
data16
shll
ret
aam
push
mov
jo
push
xchg
mov
cwtl
in
inc
jns
pop
insb
sub
cmc
orl
mov
xor
sbb
or
sbb
and
lds
push
add
or
nop
mov
dec
call
cmp
fs
sub
popa
jns
lds
js
iret
add
int
imul
push
add
adc
inc
mov
ss
mov
dec
stc
or
inc
pusha
movsb
leave
insb
flds
out
sti
das
xchg
mov
sub
inc
push
sbb
mov
xchg
mov
pop
push
cmp
pop
gs
popw
xchg
pop
outsb
and
dec
cmpsl
fcmovnbe
or
inc
addb
and
test
js
sbb
cmp
shll
pusha
mov
jge
sub
stos
repnz
pop
xor
push
fcompl
xchg
sbb
test
pop
push
lea
or
sahf
lahf
and
pusha
lock
mov
lret
fisubrl
fs
jmp
jne
xor
aas
repz
sub
stc
loope
out
cmpsl
icebp
lret
push
enter
in
mov
cmpsl
test
xor
popf
push
push
and
cmp
pop
adc
inc
or
popf
xchg
lods
rol
out
cli
in
mov
jg
dec
mov
cmp
into
cmpsl
sub
jne
inc
jp
insl
or
push
lea
ja
fwait
rolb
rcl
mov
cmpsl
in
pop
inc
jg
icebp
jmp
loop
enter
nop
inc
mov
xor
psrlq
movsl
mov
sbb
in
nop
lds
imul
or
pop
leave
cs
addb
or
aas
cmp
xor
sbb
mov
ret
mov
push
push
mov
cld
js
js
adc
mov
negb
sbb
adc
jne
cli
outsl
and
fstpt
leave
lahf
sbb
sbb
and
gs
xor
notl
xchg
jb
and
fcoms
or
pop
icebp
mov
jmp
pop
lcall
std
and
cwtl
dec
clc
mov
xor
sbb
insb
daa
insb
cmc
xchg
mov
lahf
ds
sbb
aaa
ja
sub
fcmovnu
ficomps
and
stos
lds
pop
fs
add
bound
cs
ljmp
sbb
mov
icebp
or
mov
aaa
hlt
mov
jecxz
ljmp
xchg
adcl
xlat
sbb
mov
lret
dec
daa
aad
in
and
xor
and
push
ljmp
in
sbb
dec
push
and
loope
and
and
cld
cmp
test
add
xchg
ffreep
stos
aas
adc
mov
xchg
in
fmuls
adc
es
or
and
mov
mov
sub
pop
jle
inc
sub
mov
sti
fisubrs
movl
sbb
popa
adc
int3
xchg
cmp
sti
xor
sbb
xchg
inc
push
mov
scas
sbb
das
push
cld
mov
out
pop
push
ljmp
into
jge
stos
lahf
dec
jmp
aam
and
pop
jne
cltd
int
aam
neg
xlat
shll
push
stos
movsl
ds
pushf
enter
and
lods
xor
pop
cmp
jecxz
test
cwtl
ss
movsl
loopne
xchg
lock
mov
dec
and
adc
or
shll
andb
stc
stos
roll
fs
test
inc
mov
fdivrs
add
int3
pop
enter
add
ja
mov
adc
jle
pop
cmp
hlt
pop
inc
and
fdivrl
test
inc
stc
push
dec
mov
cmp
cmpsb
push
inc
jecxz
cmpsl
cli
inc
ret
mov
inc
fimull
cmp
jne
int3
or
pusha
push
sbbl
push
mov
adc
and
mov
mov
xchg
popa
mov
pop
dec
es
out
xor
call
mov
dec
lock
aas
stc
xor
adc
popa
jne
cmp
aaa
dec
es
call
sti
xor
sbb
xchg
push
imul
inc
jae
inc
test
adc
nop
and
or
pop
or
pop
stos
xchg
mov
cmpsb
cld
jge
cltd
aam
pop
mov
out
pusha
sbb
cmc
enter
mov
mov
add
ja
pop
pop
scas
out
pop
or
jp
mov
cs
add
push
sti
enter
lods
xor
or
iret
push
add
and
orl
rolb
mov
bound
cwtl
dec
repnz
enter
pop
movsb
jb
or
pushf
mov
add
xor
dec
mov
pop
loop
pop
sub
add
mov
out
mov
xchg
mov
xchg
mov
out
dec
xchg
xchg
les
fwait
sbbb
add
mov
inc
out
in
cmc
arpl
jae
mov
enter
bound
push
push
int3
cmpl
cli
mov
cmc
or
movsl
adc
mov
das
in
test
addr16
pop
sub
stos
repz
gs
fstpt
cmp
movb
xor
icebp
rcrl
push
pushf
jge
jbe
inc
xlat
icebp
and
fisubrl
movsb
or
pop
and
xor
mov
mov
clc
jb
sub
pop
call
pop
cmp
mov
stos
sub
jbe
gs
adc
sub
cwtl
or
and
mov
jecxz
push
cmpsl
jnp
clc
add
in
mov
push
fdivrl
scas
mov
jge
bndstx
xor
je
xchg
je
mov
dec
daa
xchg
add
mov
fbstp
fcomi
lcall
ss
add
push
inc
mov
mov
jnp
adc
mov
mov
add
or
jno
xchg
dec
dec
mov
xchg
lcall
aaa
sahf
mov
jle
cmp
xchg
shrl
repnz
outsb
inc
out
pop
fwait
das
dec
lock
cmpsb
lret
cmp
cmpsb
jmp
int3
repz
pusha
mul
xor
or
lods
inc
nop
mov
pop
sbb
repnz
or
dec
sub
rolb
sbb
or
fs
fbld
mov
int
add
cwtl
in
mov
adc
int3
jbe
mov
mov
adc
cmp
jl
and
mov
adc
push
add
mov
mov
int
push
xchg
cltd
mov
pop
xor
imul
dec
cli
or
inc
cmp
and
inc
in
or
aad
rol
mov
dec
mov
idiv
pop
sub
sub
popf
cmc
inc
fdivrs
outsl
lods
push
jno
scas
sbbl
jae
sbb
decl
outsb
fwait
and
or
mov
je
pop
inc
mov
aad
dec
aam
mov
es
scas
movsb
fldt
js
sbb
ret
ret
adc
lds
sub
jno
lds
movsl
inc
cmpsb
sbb
mov
xchg
pop
cmpsb
sbb
mov
repz
std
cld
mov
lock
out
lret
fwait
inc
stos
fsubs
insb
mov
test
stc
cs
fstpt
pusha
pushf
fcos
xor
jmp
mov
inc
pop
cltd
sub
xor
aas
sbb
das
jae
push
dec
int3
mov
jg
imul
lcall
idivl
insb
pop
push
es
clc
leave
inc
mov
popa
pop
popa
jg
push
mov
lds
je
jns
cmp
push
add
lahf
adc
lods
xchg
mov
sbb
xor
sub
mov
push
inc
cmp
enter
sub
call
mov
dec
repnz
pop
shlb
jne
aad
clc
jmp
lods
jae
xor
inc
dec
dec
xor
mov
sub
pop
xchg
cltd
lahf
sbb
lods
and
into
push
pusha
insb
inc
test
and
pop
orb
movmskps
add
inc
adc
dec
lds
inc
mov
mov
push
rcrl
xchg
sub
jno
mov
add
mov
call
cmp
add
mov
pusha
leave
sbb
jmp
pop
not
pop
dec
insl
arpl
dec
pop
outsb
xchg
push
es
pop
cmp
push
cwtl
fsubrs
cmp
data16
dec
pop
imul
ret
pop
xor
inc
mov
sbb
or
dec
in
push
ja
outsl
jge
jg
xor
sarl
adc
fldt
xor
dec
es
mov
inc
dec
iret
add
test
sbb
das
ds
cmp
and
jg
aad
cwtl
dec
arpl
lds
inc
shrl
xorb
mov
and
sbb
push
dec
into
lods
lret
call
sbb
notl
sbb
push
sti
fnstcw
ret
int
stos
loopne
jmp
inc
cltd
int
xchg
push
xchg
aad
pop
jbe
sbb
inc
pop
cmp
sahf
inc
scas
pop
jmp
mov
scas
fdiv
push
lds
call
mov
fisttpl
icebp
xor
mov
mov
xor
mov
mov
mov
fs
cmp
fs
and
loop
and
das
cmp
dec
mov
les
mov
lds
and
inc
ret
aad
das
pop
shll
mov
subb
dec
and
mov
jo
cs
or
inc
adc
ss
jae
xchg
jbe
push
mov
cli
or
icebp
or
sarb
cmpsb
inc
xchg
lcall
jecxz
xchg
pop
int3
push
add
test
inc
jl
push
enter
sahf
ds
adcl
jp
sbb
inc
cmp
push
and
dec
shll
imul
push
ss
jge
test
mov
pop
les
cmc
flds
cmp
xchg
jns
xchg
in
jecxz
pop
cwtl
xor
stos
dec
cmp
adc
cld
filds
out
rorb
std
xchg
test
xchg
mov
push
adc
or
lock
pushf
xor
nop
push
and
stc
stos
lods
or
imul
and
and
or
adc
pop
inc
xchg
sub
data16
mov
aam
js
xchg
decb
scas
pushf
imul
push
jp
popa
inc
mov
sbb
push
test
inc
mov
sbb
lods
iret
lds
lock
xchg
inc
std
pop
adc
stos
add
and
xor
andb
and
mov
push
mov
rclb
xchg
ss
lea
xchg
sbb
das
out
js
mov
daa
push
cmpsl
xor
adc
mov
jg
sub
adcl
lods
data16
out
or
int
ja
ja
dec
imul
aad
js
daa
xor
rcrb
ds
and
jmp
fmuls
xchg
es
lret
or
fs
pop
sahf
inc
and
xchg
xchg
jnp
movsl
test
pop
inc
or
sti
leave
lcall
mov
aam
aam
imul
xchg
xlat
and
push
xor
sarl
xor
or
jmp
sub
mov
popa
aam
nop
jnp
adcb
sbb
adc
fsubs
jmp
push
cwtl
fnstcw
scas
dec
inc
aaa
mov
jle
push
mov
imul
mov
out
dec
mov
mov
or
icebp
sub
pop
iret
pop
jp
out
sub
xchg
xchg
jge
out
test
sbbb
enter
mov
or
push
int
scas
ret
lahf
insb
inc
mov
jno
stos
push
mov
push
pop
mov
insb
shlb
cmpsl
paddw
mov
inc
sub
push
push
dec
movsb
pop
incl
pop
std
cmp
mov
jno
dec
in
cld
out
jl
jecxz
xor
fists
dec
repnz
sub
popa
sub
cmp
push
pop
pop
jmp
das
rolb
call
fildl
cmpb
cwtl
cmp
ret
mov
jge
mov
jge
xchg
cmp
fists
imul
add
pop
or
out
ja
xchg
in
xchg
out
outsb
xchg
sub
pop
push
icebp
add
ljmp
dec
xchg
scas
das
orb
xchg
mov
inc
mov
ja
xor
xchg
sbb
outsb
cwtl
push
rcrb
xchg
xor
or
test
dec
rclb
jg
std
sbb
fwait
and
iret
xor
nop
repz
stos
imul
sahf
pop
ret
sbb
sub
enter
push
lahf
jne
stos
icebp
adc
and
clc
int3
lcall
andl
pop
dec
mov
mov
mov
pop
and
shrb
mov
add
lea
nop
sbb
mov
pop
cmp
xchg
popf
jo
cmp
mov
dec
sbb
xor
xchg
or
shrl
cmp
jge
imul
dec
outsl
enter
or
into
jb
std
sub
xchg
aaa
into
mov
rorb
xor
cmp
sub
dec
ret
pushf
insl
dec
test
dec
mov
popa
shl
mov
xchg
mov
cltd
pop
fisttpl
mov
call
popa
or
mov
aam
push
adc
enter
arpl
out
xor
jns
and
sbb
sarl
jp
rcrl
add
cmpsb
xchg
pop
out
jle
rcl
add
dec
jl
fs
inc
mov
gs
sub
sbb
cwtl
dec
scas
and
jecxz
push
lret
mov
cmc
sbb
jecxz
icebp
cmp
sbb
imul
xlat
sub
lods
inc
add
xlat
mov
dec
ja
cld
loop
mov
dec
and
jne
rorb
cmp
mov
jl
mov
and
and
mov
xor
rcrb
into
ret
movsb
mov
insb
inc
adcl
stc
mov
aas
repnz
adc
enter
jo
subb
cmpsl
cmpsl
add
in
add
pushf
nop
out
inc
aam
lods
push
mov
lcall
ret
ds
jle
sbb
pxor
push
cwtl
xchg
enter
ffreep
xchg
ds
jecxz
xor
jno
jns
jl
fisubs
mov
psubusb
fwait
push
and
insb
adc
pop
les
xchg
pop
lcall
stos
xchg
xchg
dec
inc
pop
scas
mov
lods
repz
test
add
lcall
sarl
dec
xchg
cmp
xor
mov
fucomp
out
sahf
add
cld
cmpsl
sbbb
jmp
pusha
hlt
into
js
dec
push
mov
mov
cltd
xchg
dec
mov
adc
gs
aam
add
mov
jno
pushw
test
add
mov
fsts
cmpsb
into
mov
push
xor
lcall
inc
lahf
pop
jbe
xor
adc
pop
add
push
adc
xchg
and
or
test
push
sbb
dec
lea
enter
ss
lds
jo
repz
ret
cli
in
lods
cmpsl
dec
adc
mul
insb
fwait
xchg
test
out
lret
mov
roll
push
add
pop
add
mov
rclb
xchg
clc
ret
jne
cwtl
mov
cmpsl
adc
push
adc
cmp
pushf
data16
rolb
and
pop
push
lock
mov
adc
mov
cmp
pushf
sub
fistps
push
xor
test
cmpsl
jmp
insl
add
loop
pop
jmp
jle
and
push
mov
push
jge
clc
fstpt
cmpsb
xor
cmp
inc
pop
aad
push
out
inc
cmp
jl
cmpb
ljmp
addl
shl
add
push
cli
xor
outsl
pop
ss
cwtl
stos
addb
mov
into
movsl
and
aas
insb
call
inc
stos
dec
jp
outsl
imulb
mov
loop
mov
fstl
fsubs
pusha
pop
incl
inc
jmp
or
inc
add
movsb
jae
cmc
adc
jmp
sub
and
inc
jnp
xchg
dec
inc
inc
xor
cmp
mov
and
lea
xchg
mov
test
mov
xlat
leave
or
js
cmovge
push
jb
filds
xor
pop
xor
sbb
adc
fisubrl
xchg
sub
cmp
mov
dec
xchg
lods
rclb
leave
pop
jno
in
add
fcmovne
adcl
ds
rolb
inc
clc
mov
sub
mov
dec
dec
xor
movsb
lock
mov
xchg
fsubrl
daa
aas
dec
inc
pop
lods
icebp
scas
data16
sahf
xor
icebp
mov
push
je
pop
cmpsl
imul
sbb
mov
mov
pop
fcoml
inc
call
mov
adc
inc
or
ds
sbb
mov
mov
enter
push
shll
sub
xchg
xor
scas
aam
push
js
pop
clc
in
loop
sub
les
dec
cmp
adc
shlb
adc
loopne
cmp
movsb
push
sbb
jge
xchg
jge
imull
lock
or
or
ja
mov
fwait
sub
mov
sub
bound
clc
mov
pop
mov
into
mov
pop
lret
ret
mov
loopne
sbb
mov
dec
into
pop
ss
mov
mov
pop
cmp
aad
and
xchg
sbb
ret
and
mov
scas
pop
xor
sub
popf
mov
ds
fadds
sbb
leave
and
mov
jge
mov
loopne
mov
stos
lods
addl
inc
hlt
out
dec
les
and
xchg
imul
and
mov
push
lods
into
push
adc
sarl
test
jb
lds
cmpsl
pop
and
ja
rorl
outsl
lock
outsb
or
add
sahf
sub
sub
mov
ja
mov
xchg
fsts
jg
inc
mov
and
lods
mov
pop
cld
jp
push
aas
repz
and
lods
inc
xchg
pop
cmp
xchg
iret
dec
mov
andl
shrl
daa
imul
sub
mov
cli
mov
add
ja
adc
daa
sarl
dec
push
aam
sbb
lahf
enter
pop
lret
pop
cmp
cmpsl
out
add
imul
cltd
je
in
scas
xchg
and
add
push
jmp
gs
xor
mov
sarb
dec
pop
mov
test
mov
sbb
dec
xor
daa
cmc
scas
fisttpl
aaa
fcompl
pop
push
mov
cmpsl
in
dec
mov
pop
cmpsb
mov
push
xchg
inc
aam
sbb
cltd
xorl
or
push
jl
sub
in
mov
push
xlat
pop
pop
lret
aaa
push
ret
cmp
pop
call
sbb
or
imul
clc
lods
push
push
out
ss
dec
shll
push
adc
popf
aas
mov
icebp
scas
aad
mov
push
push
sbb
add
ret
pushf
jle
out
sub
xchg
sbb
je
sub
push
daa
jmp
out
xchg
jns
mov
xor
cmpsb
loopne
loope
push
dec
call
sub
dec
leave
and
aam
push
lret
pop
scas
mov
fisubrl
mov
jge
add
ret
push
cmpsl
test
sub
lds
mov
flds
iret
lea
ret
or
outsb
fisubs
lahf
lahf
dec
fsubs
mov
pop
pushf
and
push
fdivl
mov
xchg
sbb
out
push
out
cmp
arpl
je
test
dec
hlt
xor
pop
or
or
jmp
xchg
mov
and
repz
into
andl
imul
in
insl
insb
std
ja
stos
and
mov
mov
pop
pushf
cmc
hlt
jmp
pop
mov
nop
popf
dec
dec
sub
xchg
stos
jns
jmp
sbb
addr16
cmp
pop
ja
mov
and
sub
jg
jl
push
jle
adc
pusha
les
xchg
pop
dec
jp
loop
mov
imul
sub
imul
iret
popa
cmp
ja
mov
pushf
jp
mov
sbb
lret
int3
adc
add
xor
aam
icebp
lea
aad
mov
vmovaps
sbb
pop
loope
test
jg
xor
mov
movsl
cmp
stc
mov
lods
push
ror
mov
add
call
inc
add
mov
or
dec
sbb
pop
mov
and
jle
jecxz
out
pop
mov
cs
idivl
arpl
cmp
es
shr
mov
scas
sti
sbb
mov
ficompl
dec
xchg
movsl
mov
jg
stos
icebp
cmc
and
fisubrs
in
in
dec
aaa
cmp
xchg
test
push
in
cmc
movl
lock
push
and
and
mov
push
or
fisttps
in
dec
insb
jns
dec
hlt
dec
lret
mov
mov
cmp
pop
cmc
add
es
jp
rcrl
mov
cmp
xchg
mov
sbb
and
daa
mov
push
out
sar
jge
inc
push
add
lods
jnp
imul
jle
into
adc
sbb
out
jl
aas
mov
movsl
jl
lods
rclb
add
outsl
jno
push
dec
sub
jmp
push
es
xor
cmp
or
imul
sub
jge
jno
out
sbb
out
jmp
insl
mov
repz
jno,pn
mov
cli
adc
hlt
mov
sbb
mov
sub
pop
cmp
daa
jg
rcrb
lods
fistl
daa
aam
and
adc
xchg
pop
dec
jae
xchg
mov
mov
es
or
mov
andb
cmp
in
mov
lds
mov
and
imul
out
sub
aam
leave
xchg
int3
mov
pusha
jno
fcmovne
push
pop
mov
popa
jge
sbb
movsb
mov
nop
cli
sahf
jne
ds
mov
cmpsl
popf
push
jg
stc
jb
mov
and
push
mov
cld
dec
and
adc
sbb
jbe
mov
mov
testl
or
cs
mov
mov
clc
fisubrs
outsl
fnsave
ret
xchg
cmp
into
cli
mov
sub
hlt
test
xor
insb
icebp
xchg
inc
xlat
or
add
xchg
subl
or
icebp
cmp
popa
lock
cld
call
test
out
out
xor
jne
sub
sti
stos
cltd
scas
cmp
jl
mull
mov
push
mov
jb
xchg
out
aaa
out
gs
xchg
popl
pop
pop
jo
lcall
scas
mov
add
xchg
das
jne
insb
cmpsb
xchg
add
icebp
jl
ficoml
rorb
enter
mov
testl
mov
lcall
fwait
mov
jmp
mov
dec
lods
mov
pop
mov
bound
and
insb
fs
call
push
push
ljmp
loop
xlat
out
mov
jp
jne
pop
lret
xor
xchg
cmp
dec
fcoms
xor
mov
mov
dec
lock
fadd
repz
or
pop
xchg
mov
roll
adc
xor
xchg
pop
push
jno
outsl
cmc
leave
cmpb
std
cld
pop
negl
jp
add
addr16
and
fisttps
cwtl
inc
lods
inc
roll
mov
into
pop
xchg
mov
mov
push
hlt
loop
test
hlt
adcl
push
adc
fnstcw
orb
test
in
cmp
outsb
loope
idivb
inc
js
jbe
lock
stos
les
jb,pn
daa
mov
test
adc
push
les
xchg
por
in
lock
or
pop
ds
dec
xchg
sbb
add
pop
mov
pop
lock
std
xor
ffree
in
call
push
cmp
pop
inc
add
or
xor
mov
xchg
push
test
xchg
jge
loopne
rorb
lret
es
es
sti
sbb
lods
fsubrs
jl
adc
gs
lods
repz
call
rcrl
and
cld
dec
xor
scas
cmp
xchg
pop
cwtl
insb
pop
cmp
jge
and
inc
fs
int
pop
mov
leave
adc
repnz
mov
pop
nop
xchg
jb
or
lods
jo
rcr
mov
ret
out
push
movl
inc
outsb
mov
xlat
or
imul
int
imul
bound
es
lret
add
idiv
repz
mov
movsl
andb
shll
mov
inc
icebp
xlat
in
ret
xchg
das
in
stos
aam
and
dec
std
in
inc
sbb
aam
and
aas
fiaddl
xor
dec
add
into
int3
dec
lret
jne
cmp
dec
repnz
or
cmpsb
cmc
pop
data16
sbb
out
movsl
jmp
jmp
or
and
ret
sub
enter
xor
sbb
fbld
push
push
bound
imul
cmp
pushf
xlat
jmp
mov
insb
dec
ret
and
test
mov
cld
hlt
pop
loope
jo
ror
jmp
adc
jl
pop
cmc
rcr
pop
jl
mov
outsb
movsb
or
loopne
add
into
cs
or
push
stc
xchg
addr16
lret
mov
shll
in
push
int3
cmp
jnp
push
jbe
shll
scas
and
out
mov
pop
xor
dec
hlt
xor
cli
inc
shlb
and
xchg
subb
out
int
insl
mov
adc
sti
lcall
sbbl
shll
scas
out
icebp
testb
lahf
xlat
adc
ja
outsb
mov
mov
pushf
cltd
or
pushf
stos
mov
push
mov
lret
into
aam
jb
push
out
rcr
sarl
mov
fwait
jnp
and
addr16
std
shll
fsubl
jge
enter
mov
sbb
lock
and
push
fxch
sbb
mov
mov
pop
rcl
fimuls
pop
lea
dec
inc
xchg
jnp
add
insb
xchg
bound
aaa
inc
int
repz
or
test
cmpb
jp
into
jo
nop
subl
loope
out
push
ss
sbb
add
scas
lret
sbbb
jge
enter
xchg
cmp
push
xchg
xchg
in
or
adc
gs
mov
insl
push
cmpsb
jl
push
mulb
loope
rcll
xchg
scas
cmp
rol
in
pop
les
and
dec
lods
lcall
movb
jns
lock
xor
movsb
and
sbb
add
roll
xchg
ret
loopne
add
xor
or
and
dec
out
add
lahf
mov
call
in
and
adc
xor
push
adc
jl
pusha
or
push
mov
adc
lock
fcomps
imul
mov
icebp
jmp
mov
fcomps
jne
lea
sbb
xlat
jecxz
or
jg
cmp
jnp
pop
dec
loopw
sbb
push
sbb
pop
insl
cmp
mov
fisubrl
insl
jb
imul
cmpsl
adc
outsl
fstl
xor
push
in
and
push
invd
addr16
bound
mov
pop
mov
arpl
sbbb
rcrb
lea
decl
push
and
mov
add
shlb
pop
fsubp
rcll
sbb
jns
mov
mov
fidivrl
cwtl
movsl
lds
mov
ret
in
xor
out
mov
or
push
arpl
add
adc
push
jge
mov
add
push
lods
in
jmp
or
sub
out
pop
sub
fisubs
fsubrl
pop
outsb
inc
dec
xchg
movsl
movl
sbb
das
xchg
imul
lcall
daa
aam
cmp
sbb
arpl
pop
jo
add
or
iret
adc
xor
mov
in
pop
add
out
out
inc
icebp
and
leave
adc
dec
fdiv
and
stos
mov
fidivrs
loope
repz
aam
out
sub
sbb
outsl
push
loope
cmpsl
mov
sub
cmp
test
cmp
adc
push
sarb
xor
ret
cmp
add
cmp
push
and
pop
sbb
insl
sbb
xchg
roll
push
ljmp
lret
sahf
inc
lahf
ror
ljmp
mov
mov
add
pop
dec
dec
lret
jbe
movsl
push
aam
sbb
mov
add
push
mov
sbb
jmp
add
adc
fwait
lods
sbb
mov
aam
sarb
xchg
sub
xor
das
rol
push
inc
pop
lods
dec
lea
or
and
sbb
in
ja
xor
jns
int3
or
xor
inc
pop
ja
xor
testb
incb
pop
sub
mov
push
xor
mov
mov
clc
popf
clc
scas
cmp
cmovle
xlat
push
iret
scas
push
mov
jae
jmp
xchg
mov
jnp
xchg
movsb
mov
push
inc
adc
xor
cltd
je
fcmovu
fiadds
stos
or
imul
cwtl
sar
mov
pop
fmuls
mov
test
cmpsb
jmp
and
cltd
adc
js
in
pop
imul
sub
jl
mov
sub
cli
push
sbb
mov
xchg
dec
xor
xchg
or
ret
mov
test
stos
push
cmp
prefetch
mov
es
xchg
push
xchg
push
or
xchg
ret
xchg
xor
mov
stos
and
int3
roll
jbe
jle,pt
clc
cmp
fcomps
mov
lret
xor
aam
fstl
xorb
jmp
and
lods
xchg
jle
sbb
xchg
fneni(8087
push
or
jecxz
and
enter
movsb
and
adc
imul
pop
fsubp
adc
jo
jle
fldenv
dec
and
fs
jnp
jp
cmp
in
xlat
or
jae
sub
sub
pop
in
lret
dec
mov
pop
scas
in
push
ja
test
mov
not
adc
pop
inc
mov
jns
cld
xchg
and
add
lcall
outsl
push
xor
mov
movsb
pop
xchg
faddl
mov
mov
xchg
leave
roll
jl
xchg
fisubs
push
fistps
ja
cs
pop
sub
ret
mov
in
xchg
sub
xchg
cmpsl
out
dec
jbe
xchg
fsubrs
inc
xchg
ret
xlat
fsubrs
dec
mov
mov
dec
out
mov
loop
cmpb
mov
sahf
fdiv
adc
mov
jno
ret
icebp
sbb
push
pop
lcallw
call
loop
iret
es
shrb
das
outsl
in
aam
lcall
mov
out
push
mov
cltd
or
push
sub
sbb
in
aas
repz
scas
mov
rcrl
jge
test
inc
mov
inc
xchg
shll
jbe
repnz
mov
sbb
ds
jl
xchg
mov
mov
inc
jle
testl
xor
push
les
movsl
popf
push
xlat
cmpsb
xchg
or
out
int
out
js
imul
andb
mov
mov
inc
push
out
ja
jl
sub
stc
jbe
add
sub
ja
sub
xchg
mov
les
popf
xlat
and
push
sbb
add
cmp
jge
mov
xor
push
jnp
loop
xor
xchg
mov
jle
adc
and
mov
push
cmc
icebp
mov
roll
and
sarl
cltd
ret
out
mov
mov
cwtl
stos
mov
jns
rcrb
int
sbb
jno
cwtl
repnz
fimuls
pusha
xchg
sbb
push
scas
push
push
int
inc
inc
sub
outsb
pop
nop
cmp
pop
lret
stos
rcr
pop
cli
jne
clc
adc
add
cltd
push
jb
dec
loope
and
sub
movl
rolb
jb
ds
pop
jbe
cmp
jmp
rcl
mov
add
pop
xchg
out
out
mov
cmp
push
mov
rolb
pusha
mov
stos
xchg
in
adc
sbb
or
aas
xchg
pusha
xor
jnp
mov
insl
idivl
cwtl
clc
jle
sub
jo
push
sub
xchg
iret
fisubrs
dec
push
pushf
mov
push
es
test
aas
jp
mov
mov
add
decb
or
jmp
jmp
add
or
dec
fld
arpl
stos
int
add
sub
pop
lock
xchg
stos
out
bound
int
fidivrl
push
and
fsubrl
sub
fldl
sub
mov
xchg
cmpsl
cmc
adc
negb
shlb
xchg
sbb
jo
mov
out
aas
add
dec
enter
mov
add
cmpsl
repnz
mov
aaa
mov
cmp
arpl
dec
lock
push
mov
lret
fdivs
jmp
and
lcall
div
outsb
fcmovnbe
call
xor
cmpsl
and
es
xchg
inc
ret
loopne
or
subb
in
sbb
fwait
imul
ret
sub
mov
pop
insb
cmp
dec
addb
or
loop
hlt
cmp
push
cmp
decb
add
mov
sub
sub
push
and
in
pop
test
sahf
xlat
shll
mov
dec
rcr
xor
cmp
xor
jnp
xor
jo
and
cmp
leave
popa
jno
cmpsb
sub
lods
ja
push
inc
sbb
sub
or
adc
mov
cs
out
dec
popl
and
sub
js
fldl
out
cmp
mov
sbb
lock
sbb
push
push
inc
inc
pop
jno
xor
xchg
sub
sbb
adc
lahf
add
and
add
fstpl
arpl
pop
jb
stos
test
xor
ret
push
ja
jno
inc
test
or
xchg
lds
or
jb
cmp
je
fcomp
bound
push
push
sbb
jg
cmp
mov
addr16
stc
sub
fs
sub
nop
push
cli
cli
pop
insb
repnz
les
xor
adc
mov
and
xchg
jge
test
in
xchg
xchg
push
stos
es
nop
js
sti
iret
xchg
mov
divl
std
jp
inc
shrb
dec
pushf
repz
push
rcrl
fcomps
cwtl
inc
jl
test
mov
mov
insb
jecxz
lods
arpl
rclb
jp
fcoms
shll
call
jle
lods
sub
lea
cmpsb
div
jne
xlat
mov
pushf
mov
pop
fsubrl
adc
cmpsb
cmp
insb
and
mov
mov
jno
add
dec
pop
jle
inc
adc
or
push
cmp
out
lods
pop
push
inc
ror
and
inc
inc
insl
pushf
sub
rcll
and
ret
incl
push
inc
movsl
mov
rsm
imul
and
insl
es
fiadds
in
ds
xchg
aas
das
enter
ret
test
xor
icebp
roll
xor
lock
sbb
das
jl
jbe
inc
lea
xchg
mov
jmp
jnp
in
in
testl
ret
or
mov
xchg
xchg
jg
shl
lret
mov
mov
in
subl
dec
xlat
jge
out
cmp
dec
push
jns
inc
mov
xor
movsl
bound
sbb
out
rcrl
lods
add
and
push
stc
insb
mov
leave
jmp
stos
loopne
hlt
jbe
jmp
dec
push
call
sub
out
jno
movsl
mov
inc
jge
xchg
flds
pop
jae
lret
mov
shlb
hlt
das
xor
ja
inc
stos
mov
mov
jmp
loopne
cmp
inc
scas
addr16
mov
aaa
sub
rolb
stos
push
clc
out
jle
aaa
lret
jp
bound
loope
je
dec
cmpsl
jb
or
push
loop
add
in
out
pop
dec
je
addr16
lock
outsl
daa
bound
mov
cld
jecxz
sub
push
lods
or
loope
nop
jp
xchg
nop
lahf
push
int3
pushf
fs
push
int3
aaa
add
inc
addr16
mov
nop
pop
jae
or
xchg
test
cwtl
cltd
or
mov
pop
sub
dec
clc
xchg
push
jmp
cmc
iret
test
stc
lcall
inc
or
pop
rcll
clc
sub
sub
lods
jge
enter
mov
call
and
mov
fstp
inc
ds
lahf
or
mov
sbb
pusha
sbbl
cld
mov
mov
add
xchg
pop
cmp
fnstenv
push
dec
push
or
xchg
js
mov
insl
adc
arpl
jns
or
add
xchg
repz
or
mov
js
xor
dec
aam
icebp
pop
adc
enter
js
lret
push
dec
mov
nop
push
add
mov
lcall
pop
xor
sbb
mov
pushf
xor
pop
xorb
stos
sub
sub
push
dec
push
xchg
cmpsb
dec
push
mov
movsl
push
xor
jl
ljmp
mov
inc
mov
and
xchg
xlat
mov
xor
add
xchg
pop
iret
fyl2xp1
cmp
jnp
fdivrl
push
enter
icebp
ljmp
icebp
jno
dec
inc
adc
adc
push
rcr
adc
adc
dec
and
mov
clc
pop
outsb
inc
fsubrs
ret
lret
adc
out
scas
jg
pop
clc
push
js
sarb
jnp
insb
xchg
mov
js
out
dec
mov
mov
andl
inc
in
incl
nop
jne
jecxz
xor
push
dec
or
mov
rcrb
jg
idiv
scas
insl
and
int
arpl
xlat
cmp
inc
pop
jo
cs
adc
xchg
int
lds
jl
fwait
scas
push
ret
test
dec
lds
out
mov
mov
scas
pop
jmp
icebp
cli
aas
or
adc
jo
test
pushf
cmc
push
cmp
mov
outsb
jp
shrl
and
pcmpeqw
push
dec
jb
add
mov
popf
push
shl
xchg
push
ret
cmp
outsl
dec
pop
pusha
lods
test
int3
jg
es
imul
addl
imul
or
mov
test
jle
xchg
inc
in
insl
je
mov
dec
orl
stos
dec
push
popf
js
popa
call
mov
pushf
lahf
mov
cli
fwait
pop
adc
mov
movsb
or
mov
popf
lods
jo
mov
pushf
push
fsubp
lret
xor
push
and
cld
pop
mov
lret
and
cmp
jmp
lods
xchg
jmp
out
inc
imul
sbb
lret
in
or
inc
sub
std
notb
aaa
inc
mov
sub
jae
pop
cmp
in
add
mov
lcall
sub
in
xchg
mov
out
imul
fs
hlt
dec
insb
jnp
jp
inc
or
adc
cmp
xor
lods
xor
aad
adc
je
test
push
cld
jb
leave
sbb
push
or
sub
inc
sbb
xchg
mov
xor
push
ja
cli
and
and
les
mov
pop
andl
add
out
fwait
xchg
fldl
sub
insl
mov
ss
push
sub
sbb
push
sub
push
icebp
mov
push
cmp
push
subl
mov
ja
gs
lret
jnp
es
dec
arpl
mov
ret
xor
pop
dec
mov
dec
mov
cmpsl
repnz
inc
lret
sbbb
xchg
xor
jg
or
and
ret
adc
imul
push
sahf
inc
hlt
cs
fst
sarb
fistl
aas
add
and
les
or
mov
mov
xor
and
push
sbb
push
or
push
cli
out
jo
rclb
push
xor
xor
lock
enter
mov
icebp
shlb
imul
imul
cmp
popf
sbb
into
sbb
fbstp
shll
popf
lret
loop
ss
ret
cmp
mov
adc
ljmp
std
aaa
pop
test
sub
pop
mov
xchg
movsb
mov
dec
fwait
in
lods
popf
add
dec
xchg
insb
jnp
xchg
add
or
ja
fsts
mov
shl
in
cmp
xor
adc
pop
aad
mov
pop
dec
cld
ret
cmc
and
ror
cwtl
mov
arpl
out
out
push
xor
es
cs
or
mov
jge
sub
push
cmpsl
and
sti
int3
adc
mov
dec
mov
idiv
xchg
shll
pop
mov
dec
cmpsb
add
out
cld
and
divb
ljmp
dec
cmp
enter
mov
push
adc
xchg
push
and
dec
xor
jno
lea
movsb
pop
dec
daa
out
or
xchg
pop
add
stc
adc
nop
fisttps
sbb
mov
shrb
mov
arpl
in
das
push
xchg
add
out
in
mov
hlt
add
sub
sub
or
fwait
lea
jle
cmp
pop
jne
rcrl
cmc
mov
mov
filds
mov
mov
mov
lahf
xor
sub
cwtl
js
push
jne
cmp
push
scas
pop
add
fbld
cs
and
and
je
push
out
jmp
sbb
std
xor
mov
aas
cmp
mov
lock
sahf
mov
mov
mov
dec
orl
pop
inc
shlb
xchg
aam
test
or
mov
fcoms
xchg
loope
movsb
xchg
jp
mov
hlt
out
repz
or
mov
cwtl
jo
mov
pop
pop
inc
adc
aaa
sbb
lods
or
xchg
sar
fisttpll
frstor
mov
stos
or
sub
jmp
xor
cmp
add
sahf
scas
insb
mov
mov
or
xlat
xchg
dec
outsl
dec
xchg
inc
cmp
jne
andb
pushf
std
sarl
inc
and
mov
lds
dec
jge
imul
out
fisubrl
call
hlt
and
mov
rcrb
adc
ficoms
rclb
sahf
or
xchg
ja
rolb
xchg
push
mov
mov
push
int3
sbb
in
push
inc
jno
lret
lea
xlat
add
shlb
jb
es
sub
bound
fwait
test
mov
xchg
sub
xor
xor
loopne
sub
xor
dec
fadds
fcmovnbe
push
cwtl
test
inc
and
in
out
jecxz
sar
and
jl
dec
mov
sub
clc
stos
dec
pop
mov
clc
mov
cmp
and
sahf
into
pop
sub
mov
cmpsb
std
sub
and
and
jbe
add
push
pop
pop
clc
cmp
sbb
scas
sub
stos
js
add
mov
add
imul
loop
fildll
fdivrl
gs
das
jp
lret
rorb
fs
int3
inc
pop
push
add
cld
jnp
push
je
add
aas
mov
test
pop
scas
mov
fs
testb
lock
icebp
dec
lret
jl
fisttpll
mov
xchg
inc
xchg
add
sti
outsb
dec
ja
add
mov
push
dec
mov
je
push
fsubrs
test
ljmp
pushf
dec
pop
jns
mov
fwait
outsb
test
and
dec
icebp
fldenv
and
sub
fisubrl
inc
sbb
push
inc
jg
incl
xchg
ds
dec
xchg
mul
cli
or
push
sbb
test
jno
mov
shrl
push
les
mov
popa
rorl
sub
subl
inc
mov
add
cmpsb
and
cli
lock
mov
dec
pop
adc
fisubs
and
pop
fsubp
mov
sarl
hlt
scas
push
inc
rolb
fistpll
and
inc
addl
dec
into
dec
orb
mov
out
push
imul
daa
adc
fisubrs
inc
or
sarb
mov
push
push
vminss
or
fs
loopne
add
pop
std
adc
dec
xchg
push
lock
movsl
cmp
and
into
daa
fnstsw
mov
std
sub
and
daa
and
pop
cmp
mov
xor
mov
lea
mov
push
dec
sbb
fldl
idivl
fs
stos
mov
dec
insb
jo
cwtl
mov
dec
sahf
push
mov
push
mov
mov
push
adc
and
xor
push
sbb
cmp
xchg
mov
cmc
dec
jp
mov
iret
ret
das
pop
or
and
mov
jbe
imul
push
dec
push
mov
sarb
mov
cmp
das
jns
ret
dec
sbb
add
outsl
xchg
pop
or
cltd
push
inc
add
aad
sub
pop
jo
jb
arpl
pop
std
fwait
push
popa
aad
outsb
ret
pop
inc
sbb
sbb
lds
popf
adc
cwtl
mov
jns
out
and
inc
mov
mov
fs
fists
mov
test
loop
and
movsb
out
aad
sbb
insb
add
sbb
icebp
mov
inc
imul
lods
sti
cmp
cmp
in
adc
push
adc
imul
sbb
pop
ja
mov
inc
jbe
and
mov
dec
cmpsb
iret
shlb
mov
stos
jmp
push
cmp
and
fdivrl
mov
jns
ss
sbb
inc
js
in
pop
or
jb
pop
shll
arpl
jns
in
add
xlat
jo
ja
push
cmpsl
gs
mov
and
xchg
or
sub
xor
je
clc
pop
push
mov
lods
push
cmpsl
in
mov
mov
inc
push
jle
mov
mov
stos
sbb
pushf
hlt
pop
lret
ret
rolb
xor
mov
mov
rcrb
cmp
or
xchg
mov
adc
xchg
fstps
and
popa
jmp
pop
sbb
lea
dec
aaa
lods
sub
das
stos
imul
int3
ret
pop
jnp
pop
push
orl
xor
and
mov
inc
mov
adc
shll
xchg
mov
add
inc
xchg
pushf
mov
shl
add
paddq
insl
push
mov
imul
ret
dec
shl
fnstsw
mov
inc
push
test
addr16
inc
divb
aas
mov
dec
movlps
mov
adc
daa
addr16
loope
bound
mov
scas
addb
or
pop
inc
dec
pop
cs
adc
and
jnp
js
arpl
psubb
jp
sub
sahf
mov
mov
jl
in
push
or
mov
mov
shrl
mov
push
lret
test
jo
mov
daa
mov
xchg
xor
fwait
adc
sbb
int3
movsl
mov
cmpl
xchg
sbbb
mov
push
fidivrs
xchg
mov
rcrb
inc
mov
inc
shll
pushl
add
xchg
push
lcall
mov
add
jmp
cmpsl
cmp
ret
mov
cs
aas
mov
add
sbb
xchg
jmp
fcomi
inc
push
adc
out
popf
mov
mov
adc
push
scas
out
cmp
out
ficoms
call
scas
push
mov
add
xchg
sub
or
add
ljmp
mov
mov
testb
lods
mov
loop
mov
or
rol
push
xchg
aas
inc
xlat
inc
push
je
xor
outsl
fisttpll
in
jo
out
or
data16
std
lea
pop
mov
dec
xchg
je
lret
pop
ja
pop
dec
repnz
scas
push
push
scas
mov
mov
adc
jmp
mov
out
sbb
mov
or
rorb
mov
cmp
push
repz
testb
out
inc
daa
push
mov
addl
adc
add
les
outsl
push
shll
xchg
cmp
ret
dec
push
pop
xchg
ror
jle
fiadds
xor
push
cs
es
adc
inc
jge
dec
jg
out
in
insl
xchg
idivl
mov
pop
ja
leave
stc
jb
stos
pop
stos
testb
cwtl
addr16
mov
xchg
andl
fstl
call
fisubl
xchg
and
jbe
and
sub
shll
hlt
adcl
and
in
and
outsb
jmp
push
jl
mov
test
jecxz
cmp
movsl
mov
mov
fs
jmp
or
jp
mov
dec
inc
xchg
push
daa
repnz
lods
jbe
enter
clc
mov
xchg
jmp
inc
popa
jge
pop
sub
aad
push
inc
lock
mov
xor
xchg
cmp
clc
shrb
cltd
pop
and
movsl
aad
mov
mov
cmp
loope
daa
jbe
sub
sub
pushf
fldenv
sub
xchg
jo
xor
or
or
adc
in
and
xchg
lods
push
mov
adc
nop
aas
adc
ret
mov
push
movsl
xchg
mov
pop
sbb
repnz
sar
leave
into
push
fdivs
inc
mov
xor
das
sub
repnz
lret
push
bswap
pop
xchg
out
dec
or
fcomps
cs
pop
les
jo,pt
add
cwtl
and
mov
insb
adc
or
pop
cs
sbb
cmc
jle
sbb
testb
fsubrl
mov
sub
xor
jge
adc
pop
jle
negl
aaa
cmp
data16
popa
push
cmpsl
int3
cmp
cmpsl
mov
outsb
stos
jle
ret
jg
js
add
shrb
fldl
pushf
mov
movsb
mov
sbb
sub
insl
loop
add
push
pop
and
in
rcll
and
sbb
fucomi
ljmp
mov
pop
jnp
hlt
cmpsb
mov
jp
xor
jmp
and
or
sub
aam
pop
adc
mov
sbb
push
jae
imul
leave
into
iret
and
xor
les
pop
frstor
pop
sbb
movsb
rol
in
out
add
cld
mov
or
add
fdivrl
cmc
or
cs
mov
incb
push
loope
lock
add
hlt
test
add
in
clc
ret
lds
aas
xchg
xchg
movl
push
mov
mov
sub
xchg
xor
loopne
imul
aas
cwtl
adc
aaa
shlb
mulb
push
adc
mov
scas
mov
mov
movsl
movsb
loop
pushf
sbb
lods
lret
sub
mov
or
jnp
pop
jbe
pop
pop
mov
fcmovnbe
mov
cwtl
cli
xor
cltd
cmp
and
hlt
sbb
insb
push
sti
or
xchg
xor
stc
insb
lahf
adc
loope
hlt
rcll
ror
push
or
pop
leave
mov
adc
jae
sub
mov
cmp
pop
sbb
xor
xorl
inc
ljmp
mov
aam
pop
js
fdiv
push
in
xchg
sub
enter
pop
xor
popf
push
rcrl
cmp
shrb
adc
xor
call
or
jno
test
scas
mov
loop
cmp
sbb
jne
pop
push
xor
fildll
mov
dec
stc
inc
mov
cltd
movsb
dec
push
cmp
cmp
xchg
jno
fs
out
dec
data16
iret
sub
out
out
orl
xor
xchg
int3
and
leave
sub
mov
jbe
test
jl
adc
test
mov
lcall
mov
add
out
push
jo
pop
jns
clc
mov
bswap
xchg
sbb
jp
and
xchg
ja
scas
fwait
int
xchg
leave
ret
mov
adc
add
popf
addb
fdivl
cli
push
xor
ja
xlat
lcall
jl
mov
je
xchg
jmp
mov
js
test
repz
lods
xor
pop
ret
or
rolb
cmp
xchg
inc
inc
out
jno
call
stos
push
cld
push
outsl
mov
rorl
and
test
scas
ljmp
jns
xchg
cwtl
push
xrelease
rclb
push
shrl
xchg
add
popa
cltd
xor
cmp
jo
inc
push
mov
ret
jle
in
addr16
stos
shll
std
pop
cld
mov
dec
inc
test
sbb
sub
lcall
roll
movsb
cmc
fistpl
xchg
rorl
pop
inc
mov
insb
lods
ss
add
pop
mov
in
cmp
pop
xor
call
xchg
dec
jno
pushf
rcl
stos
cmp
jns
push
fwait
push
incb
loopne
mov
sarl
cmp
xor
add
dec
inc
adc
cmp
sub
std
mov
dec
push
out
stos
adc
popf
xchg
test
fbstp
pop
ds
imul
sub
dec
daa
dec
call
in
repnz
add
adc
scas
mov
mov
cmpsl
sub
loopne
lock
add
push
sub
cmp
and
dec
lds
mov
aaa
repz
inc
cmpsl
sub
or
mov
pop
leave
xchg
imul
jne
stc
test
rcr
ds
dec
mov
push
push
mov
jno
or
add
cmpl
sbb
scas
sub
repnz
pop
out
xorb
mov
fadds
jb
or
stos
insb
popf
loope
mov
jmp
inc
mov
leave
mull
push
mov
xchg
aam
fs
aaa
xchg
outsb
in
lock
pop
lea
enter
lods
push
push
fistps
and
add
out
loope
jge
lret
jnp
jmp
push
or
xchg
bound
jb
and
scas
inc
xor
cmp
pop
and
push
jle
pushf
cmp
hlt
mov
dec
imul
and
inc
xor
jg
mov
lock
cltd
enter
cwtl
gs
pop
xchg
or
dec
fwait
scas
sbb
in
xchg
pop
jno
pop
or
lret
fldenv
jns
inc
dec
inc
aaa
mov
inc
enter
outsl
stos
jns
pop
bound
sub
lahf
arpl
dec
stos
pop
bound
test
xchg
pop
jo
inc
adc
insl
repz
cs
push
insl
sbb
inc
insb
push
cmp
xor
cmp
mov
or
shrb
addb
jecxz
stos
int
pusha
shl
pusha
outsb
aad
xchg
ret
inc
adc
fdivrl
xor
fmuls
adc
sbb
push
out
cmpl
lock
loope
add
push
push
sub
sbb
scas
int3
adc
popf
ret
mov
or
jge
jnp
call
push
stc
adc
jne
inc
lahf
jbe
or
dec
loop
sbb
cmp
fadd
jbe
movsl
ss
push
or
push
inc
add
scas
ds
lcall
cwtl
insl
mov
dec
shlb
jns
out
push
mov
insl
pop
outsb
cli
jae
fucom
sti
nop
je
loop
fwait
xor
mov
xchg
add
ja
cs
cmp
xor
icebp
or
fldl
sub
cwtl
out
lahf
enter
pop
imul
cmpsl
or
jmp
inc
leave
arpl
xchg
pop
cmpsl
subb
lret
inc
lret
popa
or
cmp
push
sub
es
shll
ret
sti
push
pop
lahf
cmp
and
add
ds
dec
imul
bound
sbb
frstor
popl
stc
cmp
in
stc
gs
ror
add
loopne
or
mov
imul
jp
insl
pop
inc
cwtl
xor
add
add
test
jo
nop
inc
loop
out
into
jmp
outsb
out
adc
xchg
xchg
data16
test
out
dec
push
jno
mov
lods
cmp
repnz
xchg
int
in
repnz
jo
sub
pop
push
and
inc
movl
mov
push
and
cmc
add
int
lods
fwait
int3
roll
sub
jecxz
test
enter
cmp
cmp
mov
lret
xchg
or
sar
popf
mov
loope
sub
es
mov
js
mov
in
inc
repz
sar
adc
stc
mov
xchg
scas
addr16
scas
cmpsb
mov
pop
leave
pop
movsl
cmp
cli
mov
mov
add
mov
sub
ficompl
imul
call
stos
cli
ret
dec
pop
add
mov
rolb
je
push
aaa
ja
cli
ret
xchg
gs
push
fdivrp
mov
int
sti
sub
jnp
mov
xor
sub
dec
or
out
xor
xchg
in
insb
cmpsb
jp
mov
mov
mov
pop
push
insl
addr16
loope
or
lcall
and
jl
rolb
bound
adc
mov
rorl
insl
inc
aas
jmp
test
or
and
pop
jne
pop
ss
mov
lock
mov
and
gs
int3
push
orb
sbb
xchg
xchg
lret
add
adc
jo
push
outsl
ret
popa
add
or
testb
cmp
lods
std
jo
ficoml
pop
in
in
outsl
pop
fwait
xchg
fisubs
into
sub
mov
push
pop
mov
adc
cmp
in
sub
outsl
fucomip
fistps
add
outsl
pop
cmp
add
cmpsb
mov
xor
jne
test
popf
mov
outsl
insl
and
ror
mov
jle
loop
in
arpl
xor
mov
rcr
into
lds
fisubrs
out
xchg
mov
cmp
rclb
fidivs
add
jl
insl
insb
push
outsb
repnz
test
add
or
adc
xchg
and
mov
dec
fisubrl
gs
fs
mov
mov
icebp
ret
test
rorl
mov
cmpsb
notl
test
adc
xor
pusha
in
popa
inc
cltd
enter
add
pop
inc
dec
dec
mov
notb
adc
fs
fidivs
cmpsb
xchg
sarb
push
push
hlt
xchg
mull
ficomps
addl
mov
cltd
fsubr
xor
mov
mov
dec
subl
pop
test
mov
push
sbb
xchg
pop
repnz
pop
leave
mov
sbb
lock
mov
jnp
inc
stc
loopne
mov
in
jb
movsb
jmp
mov
repz
lods
cmc
xchg
and
add
push
jp
cltd
rcr
jle
sub
out
push
sub
lea
ret
das
mov
jle
outsl
sbb
hlt
fimull
loopne
imul
dec
mov
xchg
pop
lret
enter
or
mov
jnp
daa
or
or
xchg
loopne
sbb
push
mov
mov
inc
pop
repz
and
cli
dec
or
shlb
fcom
data16
shr
jnp
mov
mov
shll
xchg
mov
enter
sbb
std
popf
mov
and
lods
aam
js
ud1
and
sub
cmp
aas
sbb
test
stc
sbb
xchg
inc
mov
jmp
mov
ljmp
mov
hlt
add
mov
jnp
insb
sti
mov
add
ljmp
inc
cs
add
into
jnp
mov
mov
dec
stos
fucomp
xchg
mov
addl
dec
pop
subl
sub
jbe
xor
xor
cmpsl
fwait
ret
pop
je
xchg
mov
cli
jle
dec
lahf
or
je
adcl
mov
pop
cmp
push
repz
push
pop
test
xlat
fstl
icebp
cmp
dec
cld
inc
sbb
cmp
cmpl
and
xor
pop
fs
fists
or
enter
add
imul
mov
xchg
push
lods
repz
push
or
mov
mov
dec
ljmp
sbb
stc
xor
mov
cmp
jae
mov
inc
iret
es
mov
jecxz
loop
movsb
js
jge
mov
cli
push
movsl
sbb
loope
xchg
jmp
jl
cmpsb
loop
aaa
jmp
js
inc
sub
sbbl
mov
hlt
mov
ret
pop
pop
lods
push
jno
loope
push
cs
jmp
adc
mov
jmp
xlat
hlt
out
test
sahf
pop
cmp
mov
mov
fdivp
insl
add
test
mov
sub
cwtl
adc
lahf
xor
repnz
mov
push
mov
jp
pop
cmp
jbe
cmp
movsl
pop
adc
cs
jno
ret
adc
adc
add
mov
mov
add
xorl
scas
xorb
insl
lret
shl
js
inc
cmc
test
js
into
nop
ret
mov
ret
push
or
daa
jle
scas
fstl
xchg
std
arpl
mov
xchg
push
imul
lock
adc
aam
jmp
repz
cli
xchg
adc
sbb
shll
push
arpl
adcl
xchg
jle
jmp
jmp
pop
sahf
add
movsl
and
jae
cld
mov
sub
xchg
mov
inc
push
mov
lods
loope
pop
jbe
outsb
xchg
jns
jbe
test
pop
add
int3
shrb
mov
adc
adc
cmpsb
xchg
rclb
lods
sub
dec
dec
dec
adc
std
mov
inc
jecxz
jmp
mov
insl
xchg
jns
add
das
inc
fsubp
lods
repz
fst
in
repz
and
lret
out
xchg
mov
xlat
and
pop
outsl
test
aaa
dec
push
js
or
and
push
pop
out
adc
jo
push
or
fnstenv
pop
lock
sub
loopne
adc
adc
iret
cltd
popf
mov
fdivr
out
inc
mov
repnz
push
mov
pushf
xor
mov
xchg
cmpl
and
dec
jns
push
xchg
or
push
xor
add
out
pusha
movsb
ja
jo
add
dec
rorl
outsb
mov
inc
leave
sbb
sbb
shll
jb
outsl
out
pop
test
call
mov
inc
lods
pop
mov
jbe
clc
nop
mov
stos
jp
xchg
pusha
dec
xor
sbb
mov
shrb
cvtpi2ps
fildl
or
sbb
xchg
xorl
in
mov
test
push
cmp
js
loop
xor
fwait
stos
dec
sti
sbb
dec
fcoml
es
push
jp
aaa
jbe
dec
cmp
push
mov
cmc
sbb
outsb
mov
lcall
adc
cmp
sbb
rcl
mov
xchg
daa
and
sbb
in
xor
nop
jns
rcll
pop
mov
jnp
mov
xor
repnz
fiadds
stc
push
xchg
jno
lods
xchg
test
rcll
int
xor
xchg
adc
sti
push
sub
mov
xchg
fildl
adc
dec
push
add
push
std
sub
sbb
lret
cmpsl
mov
test
mov
je
mov
jmp
das
jle
pop
cmc
and
sub
scas
negb
shlb
fs
test
mov
bound
inc
mov
shll
sub
add
cmp
lahf
push
xchg
xchg
lds
mov
xor
and
or
ja
pop
pop
sbbl
inc
loop
std
cs
lahf
dec
dec
out
mov
enter
add
ret
daa
outsb
jmp
lcall
pop
out
es
int3
repz
push
dec
xchg
mov
xchg
rcll
dec
jns
sbb
sub
int
sbb
dec
es
add
mov
pop
fistps
sub
and
pop
sub
xchg
xchg
push
and
adc
push
sbb
into
rorb
jl
mov
imul
jae
bnd
rclb
jl
in
push
lcall
jge
pop
je
mov
daa
lret
pop
ret
mov
pop
ljmp
call
stc
insl
adc
add
lea
lahf
mov
jbe
sub
sar
out
mov
mov
popa
inc
jmp
loope
in
addr16
sbb
imul
or
pop
paddq
stc
push
jne
lret
fwait
mov
pop
pop
mov
and
ljmp
movsl
mov
or
xor
sub
push
jae
pop
sbb
divb
pop
int
inc
fs
mov
push
leave
xchg
clc
inc
cmp
mov
xchg
pop
out
cmp
sub
daa
lods
sub
arpl
xchg
inc
arpl
mov
fists
fcmove
fcomps
mov
shll
sub
lods
mov
iret
and
insl
fdivrs
sub
sahf
sub
and
test
and
pop
lret
push
out
jae
aaa
xor
out
je
cmp
hlt
push
dec
insl
mov
subl
sub
add
loop
shlb
icebp
outsb
inc
fisubs
cmc
jo
ret
push
and
sub
movsl
jns
cwtl
ret
cmpsb
sbb
mov
push
mov
pop
ja
call
subb
flds
lret
or
or
call
out
sub
sbb
push
adc
popa
and
and
sub
pop
push
das
adc
push
lods
inc
inc
enter
call
jge
ja
lods
mov
test
in
xchg
mov
ss
shll
sbb
sub
mov
lods
loope
movsl
xchg
es
inc
pushf
pop
adc
pop
fisttps
add
push
push
jmp
or
xchg
mov
dec
pop
and
insb
pusha
adc
in
xchg
mov
add
mov
or
push
push
jae
cwtl
stc
sarl
lcall
rcl
insl
clc
dec
orb
dec
add
dec
daa
faddl
fcompl
jb
lea
cmp
in
dec
xchg
icebp
negl
xchg
aas
add
push
lods
mov
dec
jae
ljmp
mov
mov
inc
fdivrl
idivb
mov
push
add
adc
stc
add
repz
mov
movsl
xchg
test
into
push
mov
xlat
call
add
sbb
and
mov
std
push
sub
ljmp
lock
push
flds
fistpll
jb
scas
jmp
std
cmp
mov
mov
add
mov
inc
jno
xchg
xor
rclb
addr16
sub
lods
xor
mov
fimuls
inc
dec
into
sbb
ljmp
or
jmp
jmp
mov
pop
xor
bound
jecxz
mov
sub
or
dec
dec
arpl
push
adcl
inc
aam
xor
cmc
popf
int
fisttps
jecxz
push
call
dec
test
sbbb
xor
cmp
clc
and
dec
jp
dec
int3
shrb
mov
pop
mov
xchg
pop
adc
pop
or
lods
push
pop
outsl
jg
mov
cmc
pop
popf
out
pusha
popf
add
mov
aaa
xlat
test
xchg
and
mov
hlt
or
mov
fs
insl
mov
jne
int
cmp
dec
imul
pushf
in
testb
sbb
add
pushf
pop
fdivp
jmp
xor
gs
daa
jae
je
test
mov
pop
test
cld
outsb
xchg
mov
jp
out
mov
lret
dec
or
fidivl
ficoml
and
or
dec
cmp
mov
aam
and
call
inc
pusha
outsl
jns
stos
pop
test
dec
push
js
and
stos
fnstcw
out
and
xchg
movsb
push
pop
arpl
inc
mov
cld
sub
fs
sbb
inc
sbb
sub
mov
clc
test
hlt
push
pop
in
dec
test
lods
clc
pushl
pop
addr16
sbb
sub
scas
fstps
jecxz
fs
pop
xor
lea
loopne
or
loope
ds
loope
repz
das
outsb
fdivs
jnp
xchg
adc
dec
out
ja
pushf
aas
mov
loop
adc
lds
fcmovb
jl
add
notl
scas
sarl
test
mov
and
fidivrl
add
test
lret
sahf
push
cmp
std
xchg
xchg
dec
arpl
mov
pop
decl
push
cmp
cmp
rcrb
sub
insl
sbb
test
push
hlt
dec
lahf
jp
lock
fidivs
mov
dec
push
ffree
sub
lret
in
dec
in
ja
repnz
pop
repnz
ja
push
fcoms
or
push
xor
add
lock
dec
inc
mov
adc
cmc
cmp
mov
xchg
xchg
push
jae
in
sahf
jbe
mov
outsb
loope
sbb
test
jg
mov
js
ret
sbb
notl
leave
int3
jmp
jno
lahf
ja
sbb
add
lahf
mov
clc
repz
add
adc
shl
lret
int3
sti
push
jl
inc
mov
flds
xor
and
and
adcb
push
in
hlt
dec
mov
ds
jne
jo
dec
mov
adc
fsts
mov
je
jge
jp
inc
bound
lods
adc
xchg
loop
cwtl
js
mov
addr16
in
jne
xchg
push
jne
or
test
int
dec
pop
pop
aad
sub
cmpl
rorl
imull
popf
iret
cli
jns
pop
int3
push
fld
test
imul
adc
ljmp
inc
std
imul
jle
dec
fistpll
inc
push
jne
test
sbb
xchg
out
sarl
fsubr
pusha
and
stos
fists
shlb
int3
outsl
les
ficompl
jecxz
test
push
cmp
shrb
lret
insl
ljmp
mov
xchg
movsl
std
insb
dec
dec
mov
lcall
xor
aam
push
mov
lods
inc
jno
cmp
inc
aas
stc
add
ret
pusha
das
cli
outsl
jl
incb
icebp
int3
inc
fincstp
cmpsl
jmp
mov
push
orl
out
pop
outsl
test
cmpl
xchg
cmp
mov
or
imul
xchg
lds
inc
out
mov
push
lret
divl
dec
push
jecxz
fmull
adc
xchg
das
and
xor
jl
sub
cmc
out
push
xor
inc
mov
fs
mov
sahf
pop
test
cmc
lcall
test
mov
mov
sub
iret
mov
movsl
pop
mov
mov
jae
jle
mov
add
inc
push
or
cmpl
int3
bound
aam
push
jno
xlat
xor
inc
test
mov
out
cltd
sub
cmp
sub
push
hlt
fucomi
xchg
mov
loopne
addl
or
cmp
lods
xchg
jg
mov
push
add
mov
test
push
pop
cmp
mov
test
addl
sbb
adc
test
cmpsb
lods
cld
ret
push
jge
cltd
or
inc
in
cmp
jnp
sti
push
in
gs
xor
add
sahf
mov
scas
addr16
hlt
cmp
cmp
es
cmp
mov
jp
add
enter
xor
repz
cltd
pusha
mov
pop
fsubp
lret
push
push
stc
mov
inc
leave
daa
insb
cwtl
pop
mov
dec
loope
repnz
pop
xchg
inc
or
loope
adc
je
xor
in
ret
sub
dec
enter
sub
mov
mov
sbb
mov
adc
xor
mov
cmp
aad
insl
repz
cmp
mov
sbb
jmp
xchg
push
pop
mov
mov
and
cmp
lcall
daa
mov
sbbl
cmpsl
dec
jb
mov
sub
jno
out
adc
ja
ss
mov
ret
and
sti
int3
in
mov
int
xlat
lret
rcll
mov
ds
iret
push
loopne
xor
and
into
fbstp
movsl
xor
xchg
mov
inc
xchg
in
xor
shll
inc
mov
jno
cmp
lods
imul
jp
and
xorb
pop
inc
call
add
mov
xor
repz
and
or
push
push
stos
and
ret
fs
sbb
jmp
lcall
push
les
pop
cmp
out
mov
movsl
mov
sub
mov
imul
add
into
jno
or
fstpl
and
cmpsl
cmc
fidivrl
jnp
test
movsb
mov
push
aad
push
lcall
inc
addr16
pop
ret
int
push
sahf
mov
push
js
cs
xchg
inc
fwait
andl
dec
ficomps
mov
loop
lods
push
out
shl
adc
jg
orl
dec
into
xor
insl
sub
daa
daa
subb
and
cmc
dec
push
in
push
cmp
repnz
lock
fcoml
xchg
mov
mov
or
and
xor
lahf
or
ja
push
mov
lock
mov
jmp
xchg
ror
inc
pop
cmp
and
cmp
push
or
std
mov
out
int3
or
jns
js
mov
in
in
stos
data16
rorl
jne
cmp
out
xchg
push
gs
and
cld
sahf
add
loopne
inc
popf
popa
mov
cli
cmp
aad
mov
jmp
jmp
sti
subb
adc
xchg
out
sarb
push
sbb
add
cli
jne
lods
sbb
lret
dec
pop
pop
push
aaa
out
aam
sub
mov
enter
sub
mov
in
cmpsl
dec
jno
test
xor
xchg
test
push
push
xchg
sbb
shlb
adc
fdivs
ds
mov
ret
rol
sbb
jae
mov
pop
mulb
call
aas
or
enter
sub
cld
rol
loopne
add
mov
mulb
jnp
dec
pop
test
scas
mov
cld
fcompl
insl
out
xlat
mov
xchg
sbb
cmp
fistpll
jle
stos
and
or
mov
inc
mov
loope,pt
push
out
xor
inc
jnp
inc
mov
cmp
mov
adc
mov
jno
push
add
leave
pop
or
addr16
int3
test
inc
xchg
imul
movsl
and
mov
js
mov
mov
mov
push
mov
cmp
js
push
in
lahf
sbb
mov
ljmp
lahf
sbb
loop
mov
mov
push
add
pop
and
xor
jbe
cmp
mov
pop
sti
push
and
jecxz
push
cmpsb
test
movsl
inc
pop
mov
fnstsw
ds
adc
xor
ljmp
js
cmpsl
pop
mov
xorl
mov
dec
dec
cmpsb
mov
imul
xor
cwtl
mov
inc
jmp
insb
jb
or
loop
add
fildll
push
sarb
repnz
addb
jecxz
adc
jo
sub
sub
or
loop
or
cmc
stc
cmp
push
pop
mull
test
rorb
mov
jb
mov
gs
mov
stos
fwait
mov
jb
pop
push
jbe
gs
mov
jns
int3
or
add
mov
sub
or
decl
cmp
adc
mov
pop
sete
dec
mov
pop
dec
sbb
int3
sub
dec
xchg
dec
stc
jecxz
fisttpll
sti
add
aas
xchg
mov
push
in
jmp
dec
pushf
lcall
aam
xor
out
jns
push
pop
mov
xchg
out
and
lahf
int
inc
cmp
cmpsb
mov
fmulp
outsl
sbb
mov
adc
jge
pusha
push
lea
cli
aam
fdiv
lea
jg
sbb
or
int
ret
sub
loopne
sar
rcl
bound
and
lea
push
mov
xchg
inc
mov
adc
jle
lock
andl
into
and
in
cmp
pop
test
lods
adc
adc
mov
mov
addr16
movsb
mov
enter
lahf
and
jle
push
sbb
popl
repnz
sbb
push
push
gs
mov
mov
inc
jo
xchg
and
xor
sub
test
movsb
add
movsb
repz
cmp
scas
pushf
jmp
shrl
imul
aas
push
pop
pop
ja
test
mov
mov
and
orb
fs
pcmpgtw
or
mov
pusha
pop
sub
jmp
push
mov
and
xchg
adc
xchg
sbb
faddl
subb
ljmp
lea
and
mov
and
push
stc
pushf
insb
pop
ljmp
pop
adc
sub
mov
jae
cld
test
mov
call
flds
cmpsl
sbb
out
xor
sti
dec
pop
add
xchg
sbb
fcompl
pushf
rorb
push
pop
cmp
mov
mov
mov
inc
xlat
shld
icebp
cmp
aas
xchg
jns
mov
mov
stc
clc
in
orb
jns
pop
out
js
loop
rcrb
jle
sbb
mov
inc
xchg
into
insl
xchg
mov
fstpl
mov
mov
add
jecxz
movsl
mov
aad
sub
or
sti
ja
movsl
stos
pop
into
xor
and
pusha
mov
push
jnp
int3
or
insb
push
pop
push
shrb
sub
xchg
hlt
inc
nop
jno
xchg
xchg
push
mov
orb
or
mov
ja
adc
into
jbe
dec
and
aam
arpl
sahf
int3
sti
adc
adc
xchg
popa
test
repz
bound
push
inc
pop
dec
jl
xchg
and
in
mov
pop
adc
jae
cmpsl
adc
loopne
jmp
cld
out
cwtl
and
dec
pop
cwtl
es
fldenv
cmc
mov
and
in
sub
adc
in
outsl
sub
sub
pop
in
loope
cs
dec
sub
or
xchg
loop
push
mov
and
sub
xchg
mov
xchg
shll
lea
imul
fcmovnu
lds
out
fucomp
pop
popa
cmc
jo
loope
dec
ficomps
in
cwtl
jg
imul
push
loopne
testb
jns
add
lea
orb
sbb
mov
mov
adcb
mov
and
mov
cwtl
cmc
adc
push
gs
inc
pop
and
xor
fsubrs
aad
xor
insb
sbb
xorl
cmp
push
xor
aas
repnz
jmp
sub
adc
mov
mov
loop
inc
pop
xchg
dec
cmpsb
or
dec
sub
xor
nop
rorb
inc
push
mov
pop
inc
or
dec
xchg
jns
inc
adc
in
or
jl
repz
js
push
pop
outsl
inc
loope
pop
aaa
push
mov
push
mov
pop
dec
cs
xchg
popa
push
ret
stc
push
mov
les
gs
lods
sub
dec
adc
cmp
int3
cmp
daa
inc
scas
and
es
cmpsb
cmp
fwait
rolb
addr16
cmpb
adc
std
int3
push
push
mov
mov
pop
or
cmpsl
cld
stc
ret
in
cmp
and
pop
ret
mov
cmp
jns
mov
mov
mov
aas
aam
sub
sub
push
mov
mov
shlb
push
into
jp
sub
add
int3
repnz
frstor
mov
push
insb
cmpsb
pop
cmc
pop
dec
scas
xor
pop
js
mov
mov
cmpl
aam
mov
and
repnz
lds
repz
xor
add
mul
fldl
fstl
test
imul
ljmp
xchg
push
lret
dec
sub
rcl
jb
stc
cwtl
jecxz
ffreep
push
mov
push
leave
push
mov
fsubr
shl
shrb
push
inc
push
clc
cmc
das
leave
inc
notb
and
xchg
jp
lahf
mov
mov
push
lods
mov
daa
jnp
js
add
push
cmc
pop
pop
rclb
sbb
adc
adc
mov
test
jne
loop
insb
jle
adc
rcr
fiaddl
adc
dec
xchg
ja
jne
pop
jp
test
mov
mov
add
sub
add
shll
rcrb
jbe
or
stc
xor
xchg
xlat
mov
cmp
sub
popf
mov
dec
dec
sbb
js
stos
add
test
inc
invd
and
xchg
imul
mov
shll
cmp
test
push
bound
aam
mov
andb
cmp
mov
sub
rcl
pop
jge
sarb
mov
scas
xchg
or
mov
out
pop
int3
mov
dec
adc
xchg
lea
nop
lods
clc
adc
ss
and
xor
cmp
push
adc
jmp
outsl
fisubl
ret
pop
adc
inc
lcall
and
adc
nop
mov
lahf
sub
fldl
adc
adc
push
pushl
cmp
out
pop
xchg
dec
dec
push
cmc
xchg
dec
sbb
push
rcll
repnz
addr16
mov
adc
mov
jecxz
pushl
push
push
fcoms
pushl
test
push
fists
mov
xchg
and
inc
push
jno
jae
xchg
add
lea
pop
jno
test
sbb
ds
mov
pop
xchg
aad
jno
xchg
test
enter
xchg
jns
dec
push
pop
mov
out
mov
jmp
aaa
cli
mov
mov
cli
iret
mov
mov
rcrl
xchg
and
xchg
mov
xchg
xchg
xor
movsl
loopne
dec
jne
and
scas
scas
inc
push
fsubs
addr16
aad
rorb
ljmp
bnd
jo
mov
cmpsl
jae
pop
fdivl
push
call
adc
out
sbb
sub
mov
push
sbb
pop
repz
or
std
cld
jmp
cmp
pop
js
imul
movsb
inc
push
stc
out
adc
sub
fs
mov
push
arpl
popa
test
dec
push
shlb
pop
mov
push
loopne
inc
into
and
sbb
repz
add
addr16
xchg
dec
sbb
push
dec
ja
jmp
bound
orl
clc
les
mov
xor
sub
push
es
sbb
and
mov
adc
in
mov
cmp
adc
dec
rcr
inc
push
cmp
sbb
notl
stos
mov
lods
pop
jb
xor
push
cmc
cld
adc
dec
push
jns
nop
mov
out
loope
outsl
inc
ljmp
jnp
sbb
or
pusha
lret
push
les
and
insb
cmpl
add
jmp
push
test
mov
enter
sub
int
scas
dec
ret
hlt
sbb
jmp
cmpsb
dec
cmp
mov
roll
nop
mov
push
pushf
sarl
adc
mov
ds
inc
subl
xchg
test
mov
sub
outsb
cmpl
cmp
jle
xor
sbb
shrl
sbb
stos
pop
sub
ror
outsl
sub
stc
out
pop
int
imul
stos
or
popa
cmp
xchg
lret
fcmovnb
and
or
cld
mov
mov
add
and
adc
push
out
lds
push
and
dec
jne
push
andb
mov
xchg
nop
inc
in
push
and
xchg
mov
fcoml
ds
dec
sub
mov
cmpb
and
sbb
mov
push
paddusw
lods
pop
stos
mov
cwtl
lret
jg
or
sar
pop
mov
bound
and
mov
dec
and
rcl
and
pop
jbe
je
je
add
dec
push
pop
fcompl
hlt
mov
xor
insl
push
js
negb
jle
in
rolb
jne
call
fiaddl
fistpl
sub
dec
sub
xlat
jbe
movsl
push
dec
lret
bound
mov
mov
jno
out
fwait
and
lret
pusha
push
in
inc
mov
dec
call
jmp
arpl
movsl
push
leave
jnp
fsubr
rcrl
repnz
pop
mov
dec
and
rorb
movsl
out
fwait
add
xor
xchg
cs
movb
inc
sub
in
shlb
fwait
test
and
fidivrl
inc
inc
out
xchg
dec
jg
jle
cmp
out
das
outsb
and
jmp
stc
imul
mov
jno
sbb
inc
xchg
push
inc
sub
jne
mov
pop
push
lea
sahf
pop
cmp
cmp
inc
sub
addr16
sbb
xchg
jae
jb
sbb
cmp
and
enter
sbb
out
push
sbb
and
int3
dec
mov
lds
lret
mov
and
cltd
inc
pop
imul
sub
adc
ljmp
cs
mov
cmpl
stos
lds
sub
leave
push
arpl
jecxz
rcrl
or
push
mov
ljmp
movsb
mov
fldl
stos
cmp
push
sbb
imul
clc
test
jb
sbb
jno
mov
data16
mov
inc
repnz
mov
sbb
iret
mov
cld
div
xor
mov
push
xlat
jne
add
aad
sbb
pop
xchg
pop
cs
pusha
or
push
dec
test
adc
mov
xlat
and
or
xchg
jg
adc
mov
jo
jmp
adc
dec
or
push
addr16
mov
inc
jp
add
fists
adc
jmp
mov
dec
cltd
fistpl
and
cli
je
inc
xchg
pop
mov
xor
call
lcall
push
icebp
sub
aam
xor
jmp
cld
das
add
lret
sbb
mov
cmp
ud1
imul
stos
lahf
mov
mov
pop
mov
int
push
dec
loopne
pop
lcall
rclb
sub
adc
lds
sub
xor
and
push
inc
ret
int
aad
in
pop
sahf
pop
sti
sahf
and
and
pop
and
pop
pop
cmpsb
jne
hlt
aas
sub
std
outsb
push
mov
jle
or
lds
lock
mov
cwtl
stos
mov
negl
sbb
jl
mov
jmp
fimull
shrl
jo
inc
jmp
cwtl
ficoml
mov
lret
or
and
cli
jne
jns,pt
lret
imul
add
popf
aam
icebp
je
repnz
mov
mov
xor
sar
push
dec
lret
rolb
dec
mov
call
fildl
aaa
add
test
dec
rcll
jb
mov
cwtl
lods
cmp
jmp
in
rol
pop
mov
ficoml
mov
dec
mov
xchg
adc
imul
xchg
icebp
stc
flds
push
push
lock
xor
jg
jecxz
mov
je
movsb
jo
out
popf
out
dec
cmc
aam
cmp
dec
dec
pop
push
add
mov
xchg
in
and
inc
xor
adc
or
adc
pusha
push
loopne
jno
or
nop
scas
stos
jge
jle
xchg
in
add
push
pop
stos
out
mov
mull
xchg
dec
mov
pop
mov
and
push
adc
mov
xchg
ret
out
fistl
shr
jg
mov
pop
or
rcr
and
xor
stos
mov
jmp
and
sbb
lods
push
fnstsw
push
movsb
fcomps
xor
cs
out
xorb
add
mov
cld
pop
out
enter
insl
jae
push
or
push
mov
stos
rolb
sub
sar
sbb
lret
and
add
cmp
xchg
mov
pop
cltd
insb
lds
mov
movsb
jo
addr16
lea
mov
cmp
mov
xchg
inc
cmp
stos
mov
fs
push
addb
jecxz
sar
jns
sub
push
mov
jns
enter
hlt
orb
ljmp
xchg
bnd
dec
xor
out
rclb
mov
in
dec
imul
sbb
data16
ror
sbb
jb
bound
lock
jae
and
ja
pop
dec
sahf
mov
jb
in
cld
fdiv
push
pop
and
lret
test
sarl
mov
les
or
mov
jecxz
mov
add
out
push
jle
aas
int
fsts
out
call
sbbl
mov
cld
sub
inc
testb
xor
sub
ud0
sub
gs
push
test
dec
fwait
mov
fisubs
dec
add
mov
jb
in
lock
jmp
mov
xor
sbb
fstpt
cmpsl
repnz
fisubs
imul
inc
sub
fcompl
mov
aad
mov
xor
leave
jae
cmpsl
jns
mov
mov
test
pusha
repz
or
hlt
aad
push
add
add
mov
gs
out
jno
loopne
or
sub
imul
adc
push
loop
push
ja
sub
add
ret
nop
je
rclb
fsubp
popf
xchg
sbb
out
fld
fwait
arpl
int
sbb
stc
cmpsl
aaa
push
shrb
push
push
inc
adc
pop
push
outsb
cmp
scas
xchg
jmp
cmp
push
xor
scas
xor
fdivs
dec
insl
fsubl
cmpsl
subl
scas
out
adc
clc
pop
add
pushf
or
jge
cmc
mov
cld
lea
xchg
cmp
je
add
push
xor
test
or
pop
pop
sbb
inc
clc
jl
and
movsl
out
or
cmp
mov
js
in
xchg
cmp
jle
inc
xor
push
orl
out
pop
sub
lcall
cwtl
out
aaa
push
jb
jl
push
or
mov
test
cmp
lds
pop
dec
mov
sub
testl
sub
jno
jno
decl
divb
leave
imul
adc
add
push
mov
ss
jl
pop
push
movsb
lods
dec
pop
sti
daa
mov
pop
enter
arpl
je,pn
sbb
push
push
sbb
int
bound
push
xor
jg
add
lds
out
cmpsb
idivl
xorl
dec
inc
iret
clc
pop
push
loope
fcoml
hlt
in
cmpps
pushf
mov
mov
jno
mov
xchg
cmp
fidivrs
ljmp
xor
mov
push
xchg
xchg
insl
xchg
mov
notb
xor
rcll
mov
mov
jbe
jae
or
in
sbb
xor
xchg
cmp
clc
lea
push
sbb
jns
xor
idiv
inc
mov
jo
cwtl
jbe
mov
pand
jbe
xchg
jb
push
punpckhdq
nop
sub
sti
pop
and
mov
or
jge
fadds
nop
mov
and
mov
pop
std
daa
cmp
enter
shll
aad
popa
and
loopne
sbb
sti
pop
mov
sub
mov
mov
inc
call
ds
in
mov
scas
dec
into
pop
int
pop
popa
cmp
dec
call
push
add
roll
xor
lahf
in
adc
mov
jae
sub
cmpsb
mov
lods
ret
fsub
aam
das
inc
cmc
add
cmpsb
ljmp
pop
push
push
daa
sbb
out
adc
ljmp
mov
aad
sbb
hlt
add
dec
and
fmuls
mov
mov
shlb
cmp
pop
sub
inc
ljmp
sub
out
mov
out
pushf
sub
into
xor
mov
movsl
or
in
jnp
xchg
sbb
nop
push
shlb
xor
inc
in
adc
dec
addr16
in
call
scas
popf
jno
inc
ret
int3
sbb
test
xor
xchg
test
dec
and
push
sti
imul
cltd
mulb
mov
cmp
add
leave
xor
je
imul
jecxz
inc
ds
jae
sbbb
push
dec
repz
xchg
jns
rcll
jecxz
test
aad
movw
or
jns
aas
mov
pop
sbb
ljmp
dec
bound
cmp
lret
xor
into
sarl
notl
dec
arpl
sub
mov
push
pop
cltd
xor
ss
std
adc
in
push
rorl
add
lret
iret
cmp
pop
adc
ljmp
int3
fldcw
orl
sbb
jne
cmc
repz
decl
scas
push
enter
sub
lcall
jo
or
dec
or
push
shll
mov
repz
addr16
ds
mov
and
xchg
dec
scas
sub
push
dec
movsb
xchg
scas
and
cmp
adcl
fsub
imul
fistpll
inc
push
sub
lahf
lods
ds
test
nop
cmpsl
jmp
mov
cmp
and
adc
sbb
lcall
pop
or
cltd
ret
movsl
add
insb
bnd
mov
mov
repz
call
pop
mov
or
call
mov
cltd
mov
popf
mov
insl
lret
ja
cltd
adc
pcmpeqb
popa
int3
pop
push
push
movsb
jmp
xor
fcmovb
adc
lahf
mov
cmp
rorb
ljmp
lock
loope
stos
sbb
xor
add
jp
fmull
leave
lret
nop
mov
test
sub
xchg
mov
loopne
push
add
std
test
stc
fcompl
in
fldcw
cmpl
ljmp
push
jnp
lret
popa
xchg
mov
add
and
in
sahf
ljmp
in
mov
ja
jecxz
mov
jecxz
call
add
or
inc
push
sub
push
mov
xor
aaa
and
scas
aas
mov
jmp
iret
mov
mov
and
enter
mov
and
push
mov
in
test
cli
mov
and
ficompl
jge
fisttps
lock
push
inc
add
jl
inc
and
inc
std
jl
mov
rorl
sbb
push
mov
pop
pushf
gs
jecxz
shlb
inc
push
mov
ss
mov
lahf
out
mov
cmpsl
test
stos
loope
push
mov
decb
inc
arpl
fnsave
andb
jmp
popa
push
jmp
pop
cmp
cmpsb
and
movsb
imul
pop
outsb
pop
fiaddl
jo
les
sbb
imulb
adc
cmp
adc
movsl
gs
jecxz
int
mov
scas
xchg
and
dec
iret
movsb
dec
subl
leave
addb
in
lahf
js
roll
jnp
mov
cmc
jb
mov
cmp
gs
icebp
movsl
cmp
and
mov
mov
cmp
inc
push
mov
xor
push
outsb
nop
adc
cmp
cwtl
mov
icebp
shll
lcall
or
jmp
and
loopne
mov
ret
jle
inc
mov
jmp
mov
jmp
je
nop
adc
and
cs
in
out
addr16
dec
jo
dec
pop
or
mov
incb
sub
jg
cli
mov
sbb
push
push
fists
add
mov
stos
jbe
jne
xor
pop
push
repnz
cli
es
in
sub
xchg
mov
bound
ret
popa
mov
out
inc
jecxz
xor
outsb
xchg
xor
or
add
shlb
sti
inc
pop
mov
mov
xchg
xchg
push
fs
arpl
repnz
es
adcb
xor
mov
inc
test
pop
add
hlt
jl
outsl
dec
ret
fdivrs
bound
and
cmp
insl
cmc
cwtl
popf
inc
mov
popf
push
ja
repz
popf
iret
mov
add
js
fbld
add
xchg
jecxz
lret
imul
pop
inc
pop
dec
mov
inc
inc
in
int3
mov
test
inc
aam
sub
lods
pop
sar
mov
pop
push
cmp
jno,pt
les
inc
mov
cmp
cmc
push
or
test
push
xchg
jnp
out
dec
pop
mov
ret
js
les
jecxz
push
jl
mov
dec
mov
pop
test
push
or
sarb
xor
inc
aas
dec
mov
cmp
data16
je
nop
daa
pop
subb
or
dec
movsl
loope
sbb
or
inc
inc
call
xchg
push
ret
nop
testl
repz
in
imul
jp
push
sbb
add
xchg
mov
pop
jo
xlat
loop
outsl
mov
sbb
push
es
mov
push
jbe
rcrb
dec
repnz
cltd
out
outsb
or
pop
mov
xchg
cltd
mov
push
jmp
imul
adc
sub
jbe
cmpsl
xor
fnsave
sbb
cld
inc
xor
in
adc
std
in
or
and
jl
ficomps
lock
push
add
sbb
das
adc
xchg
mov
dec
movl
jnp
mulb
mov
das
lret
arpl
in
or
sub
mov
cmp
fcmovnb
add
push
rcrl
aad
xchg
inc
push
adc
hlt
andl
ret
add
inc
outsl
jns
out
lods
mov
pusha
iret
fsubs
sub
jge
push
push
mov
lcall
and
dec
cmp
sbbb
mov
xor
lret
inc
test
es
bound
xor
loope
push
lds
pop
js
mov
adc
mov
aad
rclb
int3
adc
xchg
mov
mov
mov
rorb
push
hlt
or
mov
adc
out
inc
adc
push
pop
push
pushf
pop
mov
inc
lret
mov
and
xchg
adc
stc
add
imul
jmp
les
xchg
fbld
xchg
dec
dec
ss
test
fcomp
or
loopne
ja
popa
mov
dec
xor
sbb
fprem1
loope
stos
xchg
cwtl
sub
repz
adc
and
les
repz
ss
negb
cmpsb
test
arpl
ret
daa
pop
lea
leave
sub
mov
push
test
fiadds
outsb
xchg
insl
outsl
in
jp
inc
add
xchg
cli
mov
lds
loope
out
js
imul
mov
pop
push
cmp
jg
rorl
fcomi
dec
push
les
pop
shll
and
sub
lcall
insl
pop
arpl
push
adc
pop
dec
lds
cmp
scas
fcoms
or
xchg
push
loop
or
ja
js
xchg
idiv
mov
push
and
or
enter
cwtl
std
int3
scas
lea
cmpl
add
shr
xchg
sbb
sar
mov
jns
sub
movsb
inc
cmp
mov
and
sbbb
je
adc
mov
mov
je
xchg
push
dec
stos
lret
loopne
daa
insl
cmp
sbb
jb
adcl
popa
inc
jp
rcrl
pop
mov
dec
jp
jecxz
or
rcl
cltd
ss
push
into
out
add
pop
scas
outsl
out
and
lcall
ss
shrb
leave
and
push
sbbl
iret
int3
or
mov
pop
stos
mov
cwtl
daa
icebp
fldenv
movsl
aas
mov
xchg
push
sahf
sub
mov
pushf
loope
xchg
xor
int3
loopne
fldl
jle
pop
stos
dec
mov
sub
mov
sbb
aam
jecxz
add
into
sahf
jle
sti
mov
inc
cmc
cmp
jnp
push
jnp
lods
dec
xchg
mov
push
adc
add
orb
jle
bound
xchg
add
dec
sub
test
sub
sub
sbb
push
cmp
hlt
push
orb
call
push
add
xlat
cltd
add
imul
jnp
xor
icebp
xor
xor
add
ja
pop
cmp
mov
sbb
mov
aam
std
push
push
shlb
xchg
mov
adc
pop
bound
jns
mov
jo
sbb
movsl
cli
scas
cld
out
sub
cmp
lea
jl
push
insb
pop
sbb
jns
or
jmp
repz
bnd
jno
scas
js
imul
xchg
xor
inc
aas
jg
call
ljmp
fdivs
mov
cmp
and
int
pusha
test
sbbb
shrb
mov
insl
stos
mov
iretw
sahf
pop
movsl
addl
das
xchg
or
inc
jae
and
out
sub
sub
in
orl
push
or
cmc
push
sbb
aas
sti
loopne
jae
inc
scas
repnz
add
xchg
jo
jno
shrl
jnp
iret
jb
out
add
jne
jne
loope
sub
cmp
cmp
xchg
ljmp
fisubrs
jo
add
inc
clc
and
or
sarl
or
xchg
testl
lret
sbb
fwait
pop
cmp
test
push
cmp
mov
in
xor
xor
mov
push
daa
ficomps
push
iretw
adc
lcall
xchg
shll
xor
sub
daa
xchg
adc
push
test
sub
mov
sahf
mov
push
popf
in
lahf
movsl
shr
jnp
int3
icebp
aad
push
insb
loopne
sub
lahf
test
aas
out
mov
fsubrs
ds
sub
ret
mov
pop
or
fsubs
push
sub
cmp
cs
xchg
cmpb
mov
fld
fsubs
call
pop
nop
or
adc
call
add
nop
test
sub
push
insb
cli
pop
repz
cmp
or
testl
insl
adcl
push
xor
adc
stos
add
xchg
divb
pusha
daa
outsb
clc
je
jg
ds
inc
int
arpl
push
shll
xor
pushf
ljmp
sbb
fs
dec
sahf
pop
mov
pop
in
cmp
xlat
imul
push
stos
mov
pop
sub
dec
lret
jae
xchg
mov
rorl
outsl
and
out
xchg
push
call
jp
pop
das
jmp
imul
and
scas
cmpsl
adc
pop
xchg
jle
hlt
sub
cs
jp
cli
add
jl
xor
jns
push
movsb
xchg
pop
xchg
movsl
into
icebp
aad
icebp
pop
adc
sub
sbb
loop
mov
ss
xchg
in
jmp
inc
fxch
dec
and
mov
cli
xor
inc
js
xchg
cld
ss
sti
mov
sbb
cmc
incb
fstps
scas
pop
fsubrs
mov
mov
int
shlb
dec
jno
filds
maskmovq
mull
dec
out
insb
mov
dec
inc
out
cmpsl
mov
std
es
xor
testl
pop
push
pop
push
filds
sbb
xchg
jmp
scas
mov
adc
xchg
jbe
and
test
fcompl
mov
aam
mov
pop
jp
movsb
pop
sbb
negl
inc
jp
sbb
xchg
scas
stc
or
int
stos
enter
pop
out
xchg
dec
and
lea
jmp
sub
mov
imul
iret
pop
xor
stc
in
cmpsb
sbb
mov
lods
pop
imul
jle
mov
push
pushf
call
pop
push
mov
test
jnp
cwtl
ds
jg
mov
and
adc
out
xorb
scas
cmp
xchg
fmuls
mov
inc
and
push
dec
inc
push
push
rcr
ss
out
addr16
mov
add
lret
and
pop
mov
ficoms
xchg
cmp
sahf
imul
aam
cmp
ficoms
aad
adc
jo
leave
xor
fisttpl
inc
sub
xor
ss
into
jecxz
lods
mov
add
cmpsl
stc
aad
movsb
add
dec
decb
clc
push
lods
sbb
xchg
incl
and
mov
arpl
mov
cli
je
into
mov
ret
xor
ss
testl
mov
scas
mov
hlt
adc
pusha
pop
in
add
and
imul
and
jle
int
data16
fdivl
aad
mov
push
mov
mov
in
inc
lock
andl
mov
lock
fists
xchg
mov
aam
jecxz
dec
daa
jns
insl
imul
aaa
rcll
bound
repz
popa
and
sub
dec
adc
bound
addr16
push
sub
rclb
pop
shrl
jne
test
mov
mov
loopne
ret
mov
pop
ja
cmpsb
add
loopne
mov
push
adc
lcall
xor
aaa
gs
shll
fwait
and
and
ss
out
data16
mov
and
daa
mov
sbb
cmp
imul
scas
mov
xor
lods
test
jle
sahf
sahf
cmpsb
adc
sahf
mov
clc
dec
inc
lret
lods
or
dec
cmp
sbb
jmp
frstor
loop
lds
js
xor
aas
mov
pop
inc
jne
stc
xchg
imul
sub
aam
adc
and
mov
sub
sbbl
dec
cld
sbb
je
cld
push
mov
inc
or
inc
das
adc
es
pop
xor
push
inc
inc
add
outsb
sbb
out
std
negb
lret
ret
xor
xchg
inc
divb
mov
inc
imul
cmp
inc
fcmovnb
xlat
ret
jmp
sub
mov
dec
add
sahf
in
sbb
xlat
shll
mov
ret
sub
cmc
jl
in
adc
arpl
xchg
shlb
lds
sub
mov
or
fcompl
cli
add
ret
push
rclb
adc
sub
mov
dec
cmp
and
jmp
dec
aas
inc
xor
mov
or
bound
pop
out
xchg
ret
mov
inc
in
jbe
loopne
clc
push
jmp
mov
out
xchg
adc
popa
mov
cwtl
mov
loopne
jg
mov
in
es
mov
das
das
in
mov
test
mov
jle
jle
xchg
add
mov
decl
rcll
ljmp
adc
sbb
cmp
imul
cmpsl
sub
jno
mov
xchg
iret
dec
ret
dec
adc
shlb
add
nop
or
mov
lret
inc
iret
test
sub
mov
arpl
pop
jg
pop
cs
lahf
mov
cmpsb
adc
movsl
inc
jbe
or
jge
or
adc
sub
mov
jge
pop
sahf
insb
subl
jb
mov
pushl
ficoml
imul
orl
lods
ljmp
lea
scas
stos
add
dec
out
inc
int3
divl
iret
lret
mov
adc
aaa
aad
ja
mov
aad
sub
mov
stos
out
or
mov
adc
mov
imul
adc
add
xchg
jb
mov
fmull
and
mov
push
lcall
jmp
xchg
dec
or
push
mov
dec
push
mov
jg
add
sub
fcmove
test
adc
iret
fstps
ja
aam
test
repnz
outsb
movsb
or
enter
adc
fbstp
les
fsubl
fidivrl
or
insl
jp
cmp
lcall
mov
push
cmp
data16
adc
gs
subb
outsl
addr16
and
sub
shll
and
add
dec
inc
mov
add
fs
pop
pop
pshufw
add
fsubr
lret
and
add
mov
jns
test
jno
shlb
cmc
and
loopne
aam
dec
bnd
cli
mov
pop
aad
cmp
xlat
aam
es
mov
dec
popa
in
dec
pmovmskb
adc
mov
call
in
sbb
mov
bound
inc
mov
test
rclb
cld
in
jae
mov
jo
pop
mov
push
pop
inc
cs
inc
or
ret
fcmovb
into
adc
loopne
subl
rcl
fcmovne
push
shl
arpl
jns
cwtl
cmp
push
push
cmp
xchg
mov
sbb
push
lds
sub
adc
ds
mov
sbb
loopne
pop
jmp
cmp
fs
inc
and
ds
insl
orb
roll
pop
adc
mov
lahf
inc
dec
sub
sbb
mov
mov
xchg
dec
pop
pop
je
aaa
fldcw
pop
sahf
hlt
ljmp
scas
mov
jmp
int3
sbb
dec
fnsave
sub
mov
loopne
test
pop
dec
cmp
xchg
nop
shlb
daa
or
movsb
pushf
adc
js
outsb
adc
stos
aam
es
test
ja
dec
and
push
imul
je
clc
inc
jns
push
mov
mov
pop
push
adc
sbb
popf
xchg
xchg
and
stc
xor
test
xchg
fwait
adc
lods
sarb
xchg
aas
loopne
push
subb
ja
push
push
inc
sbb
enter
add
mov
pop
cmp
movsb
and
xchg
imul
mov
ljmp
fbstp
push
cmp
jo
pusha
call
push
mov
xchg
add
xor
inc
push
lss
ss
sti
mov
sub
cmp
mov
or
jnp
in
mov
mov
adc
push
int
push
mov
sub
lods
dec
outsb
insb
loope
cmp
es
push
negl
outsl
aaa
add
fistpl
cmp
lds
xchg
in
mov
jno
pop
xor
sbb
sub
std
ja
push
and
je
add
cmc
pop
or
pop
dec
or
incb
repnz
sarb
inc
insl
mov
xor
mov
inc
imull
mov
add
les
jno
fldt
or
loope
sub
lods
dec
pop
mov
call
data16
subb
lret
pop
in
insb
iret
adc
cmpsl
aad
rolb
adc
pop
xchg
sub
aad
or
hlt
fdivp
aas
out
sbb
call
mov
ds
bnd
daa
xchg
or
xchg
cld
mov
rorl
xlat
cmpsb
add
sahf
push
scas
pop
cli
sbb
mov
dec
sub
xor
cmp
pop
imul
insl
push
inc
cli
leave
mov
and
jle
push
lret
push
push
int
xchg
in
fisttpl
jne
xor
fwait
mov
in
inc
inc
xchg
push
fnstenv
adc
iret
andl
aam
dec
out
test
clc
pop
inc
aad
xor
and
lea
loop
inc
dec
icebp
loop
cmp
stos
pop
shr
jmp
mov
inc
dec
cmp
xor
mov
repz
xchg
jae
jecxz
lea
lea
dec
sub
dec
sub
fildl
adc
push
rclb
sub
fldt
loop
loop
mov
sbb
mov
sbb
mov
xchg
and
div
mov
inc
adc
sti
cmp
std
push
xor
add
pop
mov
insb
insl
rorl
div
pop
lret
push
mov
cld
je
mov
into
lods
ds
out
or
add
xor
imul
pop
inc
addr16
jae
or
popa
mov
inc
add
mov
cmc
mov
sub
mov
dec
lret
arpl
xchg
inc
rcr
jbe
aas
inc
cltd
cmp
dec
xchg
in
or
sbb
lret
ds
sbb
jg
jl
shrb
loopne
js
xchg
inc
aam
inc
pop
mov
repz
jp
in
dec
call
lret
out
xchg
mov
or
jno
fdivs
idivb
mov
xor
dec
mov
xor
or
mov
adc
push
repz
and
stos
dec
hlt
adc
leave
xchg
jecxz
imul
cmp
mov
dec
lret
or
ds
sbb
push
add
mov
add
cld
cltd
mov
sti
out
in
push
dec
hlt
ret
xor
xor
push
mov
fimuls
push
inc
lods
rolb
lods
flds
push
mov
inc
shl
cmp
fidivs
cmp
addr16
push
dec
add
dec
xchg
adc
xor
mov
loope
mov
stos
bound
pop
jl
daa
jmp
aad
xchg
lds
hlt
jge
in
add
mov
inc
add
not
ds
dec
ds
cmpsb
sbb
in
notb
mov
rcrb
xchg
in
iret
mov
aaa
fidivs
jle
inc
fsubrl
rcrl
daa
xchg
test
fidivrs
pop
daa
js
int
shll
fdivrs
fstpl
add
insb
sahf
pop
cld
lods
cmp
mov
movsb
sbbb
xor
in
and
pop
jmp
sahf
sbb
test
inc
iret
outsb
out
cmpsb
mov
jae
sbb
call
test
imul
and
adc
mov
cmovno
cmpsl
jmp
in
jp
pop
fdivrl
ret
cmp
sahf
pusha
cltd
subb
shrl
in
data16
std
jno
jge
push
cmp
sbb
cmpl
inc
sti
dec
adc
enterw
popf
push
pushf
dec
push
lods
add
mov
sbb
scas
subl
outsb
adcl
mov
dec
or
mov
cmpsl
lret
lds
lods
mov
test
mov
popa
fstl
xor
xor
mov
xchg
std
inc
mov
pop
fwait
mov
mov
sti
xchg
push
lret
insl
dec
mov
sbb
int
js
inc
dec
add
sbb
cli
hlt
mov
lea
pop
jns
scas
xchg
jg
pop
lods
cmp
sub
lods
mov
aad
mov
jae
out
and
pusha
dec
inc
insb
sub
or
aad
fs
rcll
cmp
gs
lods
bound
jo
or
xchg
movsl
xchg
inc
sbb
rcl
lods
pop
btr
ret
loopne
mov
popa
ret
mov
pop
push
xchg
sub
push
bound
cmp
orb
les
ja
lock
push
clc
and
in
popf
aas
lahf
movsb
mov
ja
dec
add
out
das
push
add
pop
int3
cmp
ljmp
orps
das
sub
jae
xor
mov
add
call
inc
bound
xchg
or
fsubrl
test
xor
bound
into
add
cwtl
aaa
test
dec
leave
stc
popa
lods
push
pushw
add
in
mov
cmp
adc
std
cmp
jge,pn
pop
fsubs
outsb
ljmp
sbb
jbe
lcall
sbb
sti
repnz
ret
mov
cmpsb
jo
in
out
aad
cmp
loopne
cmpsb
js
or
call
mov
or
stos
pushf
jmp
jb
aas
and
mov
movsb
mov
xchg
insl
push
arpl
test
add
js
and
lds
incl
cmc
dec
mov
pop
loope
pop
sti
xlat
jle
jg
jne
lods
inc
push
pusha
leave
lea
adc
dec
js
inc
mov
adc
rcll
out
cmp
roll
cmp
dec
data16
pop
pop
int
scas
jecxz
incl
cmp
or
pushf
mov
lods
or
jbe
bound
out
xchg
and
pushf
push
xor
ja
mov
cmpsl
add
dec
pop
mov
fdivl
cmp
jns
in
jno
in
or
adc
repz
fsts
fnstcw
jecxz
cmpsl
adc
dec
jne
sub
push
and
ror
cs
xor
popf
leave
mov
add
dec
pop
ffree
push
dec
adc
pop
fldcw
aas
aaa
and
xchg
dec
mov
movsl
rcrl
cli
add
outsb
enter
sub
lock
clc
jg
dec
and
sub
jge
fcmovnb
jae
jmp
sub
andb
pop
pop
and
push
outsl
aaa
inc
jecxz
and
lock
lods
stc
adc
jecxz
pop
loop
xor
inc
nop
sub
mov
and
cwtl
sti
inc
pop
fs
pop
fldcw
jmp
cmpsb
in
inc
mov
loopne
push
loopne
dec
scas
pop
adc
test
jmp
shr
call
fdivrp
sub
push
jl
add
sbb
inc
out
movl
mov
sar
inc
and
dec
hlt
fwait
xchg
add
push
insb
nop
sub
lahf
nop
scas
cmp
sbb
push
mov
or
xchg
clc
lods
and
mov
push
je
icebp
fisubrl
push
lods
test
outsb
repnz
push
add
addr16
pusha
sub
mov
pause
stc
xor
add
push
dec
pop
js
sub
fimuls
aad
jl
mov
not
jno
shr
pop
jmp
and
mov
loope
les
fwait
dec
hlt
xchg
sub
in
imul
dec
xor
xchg
adc
test
mov
cmp
push
fdivl
mov
sbb
adcl
cmp
mov
sbb
inc
cli
jmp
sub
in
fcmovnbe
sahf
mov
and
sub
jb
es
jne
cmp
mov
jo
nop
test
pop
and
ljmp
push
lods
fmuls
fmuls
or
lods
push
push
outsb
les
jge
outsl
test
and
and
jne
test
push
movsl
js
jg
mov
pop
dec
add
sub
stos
mov
pop
add
cmp
popf
movl
ljmp
pushl
bound
mov
aas
hlt
or
adc
push
jge
in
ds
testl
mov
and
ret
mov
xor
add
mov
lods
inc
xor
push
dec
push
addr16
add
sbb
rcl
xor
dec
cmpsb
notl
cmpl
dec
push
nop
push
and
and
pop
dec
popa
pushf
sub
out
mov
and
repz
pop
push
jns
adc
jg
inc
mov
cmpsb
ds
cs
dec
std
pusha
adc
in
pushf
xor
jl
addb
xchg
add
push
sbb
cmp
sbb
movsb
jmp
xor
jg
jb
in
scas
out
lea
cmp
into
jns
jge
imul
xor
out
in
loope
pop
mov
fs
and
dec
aad
jl
lcall
fs
mov
dec
jmp
loope
insl
scas
sub
cmp
cmpsb
cltd
shll
leave
hlt
jmp
sbb
popa
lds
xchg
sub
mov
pop
add
fs
add
and
pop
xchg
or
xor
fadds
inc
lock
inc
test
inc
adc
dec
inc
push
jp
outsb
mov
fwait
cs
packssdw
stos
jl
add
mov
sbb
pushf
inc
adc
insl
sub
cwtl
loope
mov
js
adc
mov
and
ljmp
jecxz
xchg
push
inc
icebp
ljmp
das
ficomps
push
repnz
mov
cmp
mov
xor
bound
xchg
dec
mov
jecxz
mov
lret
lods
orb
inc
clc
sub
test
shll
les
hlt
dec
repz
lds
cwtl
add
jl
or
int3
cs
xorl
mov
mov
aad
loope
dec
test
mov
addl
loop
jne
fsubrl
and
jae
and
dec
arpl
test
loopne
in
xor
fwait
mov
arpl
xchg
mov
xor
negb
jb
xor
roll
push
inc
mov
and
cmpsb
loope
or
mov
jb
push
fcompl
sarb
test
sub
mov
lret
mov
mov
sub
lds
adc
or
lcall
daa
js
inc
sbb
or
add
sbb
lds
icebp
push
enter
mov
inc
sbb
xchg
push
fincstp
adc
lcall
orb
xor
ret
adc
push
dec
mov
adc
mov
lret
movsl
adc
mov
fsub
fidivrs
aaa
into
push
jmp
scas
scas
sub
mov
lret
mov
jmp
sub
or
pop
outsb
or
adc
ss
cmp
dec
scas
fdiv
scas
or
jo
push
jnp
ds
pop
push
mov
jae
fmulp
repz
add
jns
leave
pop
xlat
dec
xorb
in
xlat
stos
shlb
pop
aaa
mov
cmpsb
xor
out
sbb
xchg
pop
jle
int
insl
pop
aad
add
mov
jle
push
fmull
lea
sub
mov
fisttpl
mov
mov
add
sub
enter
add
in
out
stos
xlat
outsl
mov
or
mov
push
cmpsl
jns
inc
and
cld
sub
adc
jns
cmpsb
mov
add
push
aaa
jp
cmp
nop
in
test
cmc
sbb
cmp
sub
cmp
mov
scas
out
fs
xchg
pop
adc
or
nop
fs
and
mov
mov
push
dec
jo
inc
jnp
out
xchg
or
adc
leave
mov
push
pop
mov
push
imul
inc
mov
jmp
movb
xchg
enter
ja
push
mov
xor
iret
xor
push
or
and
mov
cmp
jmp
mov
mov
call
mov
add
and
add
sub
sub
xchg
xor
cmp
push
dec
fisttps
ds
ljmp
push
movsl
jbe
mov
icebp
xchg
cs
scas
mov
cli
das
cmp
loopne
adc
std
cmp
pop
mov
push
ffreep
inc
lahf
cmpsl
insl
jnp
test
mov
dec
jo
xorb
push
push
xor
push
sbb
fldenv
icebp
xor
mov
inc
push
cmp
bnd
outsl
andb
pop
xchg
aas
out
dec
daa
pop
daa
jo
shrb
dec
add
daa
xorb
je
xlat
bound
cwtl
imulb
mov
dec
popa
fstpt
sub
mov
enter
pop
and
ret
lock
ss
repz
cld
dec
xchg
adc
sti
push
dec
test
mov
pop
jge
inc
int3
aas
inc
and
push
sti
pop
mov
call
movsb
pop
out
pop
stos
add
hlt
ret
cmp
loopne
jae
push
mov
test
and
call
test
mov
pop
push
adc
pop
xor
std
in
rcl
cli
les
inc
jecxz
and
jl
sub
jo
lds
jge
sub
mull
stos
pop
jecxz
mov
add
data16
into
nop
push
jnp
xchg
fwait
push
mov
out
mov
and
jns
sti
push
mov
push
jmp
clc
mov
adc
orb
jne
add
push
je
xchg
outsb
cmp
loopne
insl
mov
scas
add
mov
stos
scas
sbb
orb
and
test
add
inc
movsl
mov
js
ja,pn
rcll
cli
in
fcoml
frstor
lcall
jbe
pop
inc
mov
popl
add
popa
ljmp
push
jge
sbb
lods
imul
movsl
xlat
imul
add
sti
es
pop
clc
xor
in
pusha
jbe
dec
movsl
das
repz
adc
jno
popf
lea
pusha
inc
sub
inc
shrb
gs
xor
xchg
hlt
in
ss
jp
xor
cmp
repnz
inc
cld
mov
sbb
in
mov
cmp
and
pusha
dec
push
jle
jl
pop
add
pop
out
and
mov
sub
mov
pop
lods
or
ror
repz
pop
pmaxub
and
fmull
arpl
out
dec
dec
ret
int3
push
movsb
notl
jge
and
aam
push
cwtl
xchg
je
or
leave
lods
pop
pop
mov
or
pop
sbb
call
adc
jecxz
sti
push
stos
mov
jo
lcall
das
mov
mov
pop
dec
clc
rclb
bound
jo
sub
push
jge
in
mov
stos
xchg
dec
imul
mov
and
clc
cwtl
out
and
adc
adc
push
adc
repnz
movsb
push
into
and
cmp
sbb
cs
js
dec
imul
or
jecxz
jno
fcompl
sub
xlat
xchg
movsb
lcall
bnd
out
xlat
cmp
scas
lock
ljmp
lret
mov
or
fdivl
push
add
xor
xor
lock
pushf
xlat
xor
and
lret
adcl
or
sti
mov
or
mov
hlt
stos
push
fwait
sub
sbb
jae
sbb
dec
ja
or
aas
pop
aam
jge
jle
mov
jle
arpl
mov
cld
ss
inc
dec
xor
sti
sub
int
xor
sti
add
xor
xchg
lock
sbb
cmp
cmc
mov
in
lods
jecxz
or
cmpsl
lock
add
pushf
icebp
fldenv
xlat
push
daa
in
imul
push
jle
dec
in
mov
xchg
sub
ror
mov
sbb
lahf
sub
orb
pop
call
and
push
lods
out
sarb
subl
add
iret
dec
cmp
push
jo
mov
popa
cmc
add
mov
loope
imul
out
jle
cld
dec
add
cwtl
cmc
jmp
ja
movsb
xor
mull
pop
mov
and
lret
lea
jge
fwait
mov
popa
mov
in
fnstsw
mov
pushl
and
rcrl
xor
aam
testl
lock
adc
xorl
in
test
add
stos
mov
ret
movsb
jae
mov
repz
adcb
cld
jns
inc
mov
shrl
lods
fs
div
dec
mov
push
sub
out
and
rclb
arpl
sbb
cmp
pop
int3
sbb
pop
mov
cli
dec
inc
scas
ror
adc
xorb
dec
incl
lock
or
orl
lds
out
add
test
jecxz
adc
aas
jns
push
leave
mov
and
in
data16
inc
xchg
sti
xor
fs
inc
nop
lret
jecxz
sub
daa
stos
xchg
jbe
nop
pop
fwait
dec
adc
rorl
lret
xor
jp
push
xchg
dec
mov
dec
sbb
mov
inc
pop
inc
pop
lahf
xchg
lods
cli
and
sti
negb
inc
inc
and
rorb
and
test
imul
inc
call
cli
jbe
mov
lea
dec
or
dec
pop
out
inc
mov
adc
inc
popf
loopne
dec
adc
mov
mov
rclb
adc
pop
pop
and
xchg
or
dec
cmp
lcall
int3
push
pop
pop
insertq
pushf
lcall
aad
pop
adc
dec
das
jb
testl
ja
das
mov
test
cmp
faddl
int
mov
idiv
ficoml
jl
dec
outsl
test
lds
jae
imul
push
fimuls
jmp
fs
mov
dec
lret
lea
addr16
and
mov
int3
cmp
ret
scas
sub
or
cltd
rol
call
push
mov
int3
cmp
mov
and
ud2
and
enter
lahf
into
sub
lods
gs
mov
pop
sub
scas
xchg
inc
js
sbb
loope
aaa
mov
fcom
xlat
lds
push
imul
xchg
daa
imul
dec
and
icebp
jbe
std
push
or
jnp
xchg
stos
aaa
lds
and
rol
xacquire
adc
jne
push
or
jnp
mov
sbb
arpl
sub
out
mov
daa
adc
repz
cmpsl
sub
mov
repnz
lcallw
sub
cld
std
adc
pop
or
mov
movsb
ret
push
aaa
pop
fstpl
jnp
xchg
ljmp
lods
aas
je
or
inc
stos
ds
arpl
xchg
jno
push
lcall
outsl
fcmovnbe
dec
xor
in
adc
div
imul
les
or
mov
stc
dec
mov
jno
arpl
adc
loopne
cmp
or
mov
stos
push
dec
inc
xlat
enter
mov
sarl
or
test
xor
std
jmp
pop
mov
xchg
and
aas
and
int3
movsb
fcomi
add
or
adc
mov
into
mov
add
popf
jbe
jns
fs
xor
fmull
mov
mov
lret
loop
xor
inc
imul
outsb
imul
lock
lea
push
inc
adc
jmp
inc
push
lcall
movsb
into
add
lock
jle
call
stos
test
roll
pop
js
int
or
movsb
inc
push
cmp
inc
shrw
pop
xor
mov
sub
jno
lret
pop
mov
pop
jg
les
jl
and
sti
test
mov
add
jecxz
push
dec
dec
sahf
gs
aam
test
cmp
pushf
addr16
xor
cmp
mov
jno
sbb
add
cmp
mov
in
outsl
adc
in
stos
es
std
lahf
andl
add
and
aas
popf
push
adc
rcrl
inc
cmp
push
lret
sub
mov
rcl
cmp
inc
inc
jge
jle
push
in
insl
cld
adc
jnp
push
sbb
push
xor
sbb
pushf
push
mov
call
mov
int
shlb
stos
andb
jecxz
sbb
xchg
scas
fsubs
mov
adc
mov
push
clc
mov
push
in
mov
les
bound
xor
leave
cmp
add
and
mov
fs
sbb
mov
pop
mov
jo
xor
add
mov
lret
xor
ja
cmp
arpl
xor
jbe
pop
or
cmpsb
xchg
loope
fadds
mov
jg
push
lods
sub
clc
sti
mov
call
mov
or
xlat
pop
enter
pop
stc
test
dec
into
adc
sarb
pop
jns
std
push
subl
dec
daa
sub
and
xchg
cmp
movsl
xlat
lods
das
mov
lahf
lcall
aaa
mov
pop
jae
add
insl
arpl
psllq
pushl
call
xor
fmull
aam
adc
mov
loope
jne
adc
mov
inc
and
sub
aad
inc
out
imul
xlat
dec
adc
sub
xchg
push
push
out
cli
lcall
or
jge
mov
or
movsl
loop
pusha
hlt
fwait
cmp
adc
stos
adc
adc
add
xor
adc
sbb
ret
mov
adc
sahf
orl
aas
push
or
inc
lret
dec
sbb
iret
xchg
mov
mov
pop
in
sub
fdivl
xor
ds
sti
shrb
iret
dec
cmp
push
mov
ds
jne
sbb
cmp
add
jo
decl
enter
xchg
stc
adc
push
pusha
test
pop
pop
cmp
movsl
jp
movsl
mov
xchg
pop
leave
push
dec
xor
addr16
pop
or
pop
rorb
pop
ljmp
pop
loop
sbb
or
cmpsl
lret
xor
jae
xchg
jecxz
lds
and
out
cli
dec
fcmovu
test
jnp,pt
int
inc
sbb
imul
lds
mov
pusha
and
mov
popa
adc
xchg
stc
jnp
dec
sbb
mov
lcall
sarl
hlt
js
push
aaa
mov
lods
shll
mov
add
jo
mov
xor
fsubp
adcl
or
ja
adc
sahf
sbb
push
lea
inc
mov
pop
lcall
adc
mov
js
bound
fsubrs
ja
adc
ret
and
jp
mov
mov
mov
push
hlt
fcmovne
sahf
hlt
test
test
add
shl
sbb
xor
mov
pusha
jae
jns
sbb
push
push
pop
shl
ljmp
inc
in
mov
cwtl
int3
adc
in
jo
jns
pushf
das
cmp
arpl
imulb
in
ss
dec
addr16
sbb
notl
xchg
pusha
and
cmp
or
xor
movsl
xlat
push
inc
push
insb
add
sub
mov
fisttpl
dec
pop
pusha
jb
add
cmp
pop
xchg
lret
scas
and
testb
and
adc
cmp
ss
add
cld
aad
repnz
mov
mov
and
fidivrl
fildl
xchg
aas
inc
mov
dec
andl
jl
sub
push
fsubl
addr16
das
jmp
ljmp
enter
xorl
sbb
call
aam
mov
daa
xchg
mov
or
hlt
dec
testb
rol
adc
jmp
pop
scas
shl
mov
outsb
xchg
dec
jp
xor
sub
jbe
pop
xchg
out
pop
repnz
movb
nop
dec
rcrb
jge
fs
mov
call
add
cmp
fwait
dec
sarb
jae
adc
or
push
mov
lea
add
xor
imull
xchg
xchg
cmp
ja
xchg
sbb
cmp
daa
test
ret
xchg
jle
adc
inc
lds
loop
jns
sti
or
dec
dec
out
int3
scas
lahf
pop
xchg
jb
jb
jns
xor
mov
sbb
jo
pop
jbe
pop
sbb
lret
push
pusha
push
lret
cmp
out
pop
rdpmc
arpl
lret
inc
dec
add
mov
jg
xor
pusha
dec
inc
mov
neg
cltd
push
xchg
icebp
in
lds
cld
test
rcl
or
mov
movsb
cltd
sub
dec
mov
mov
lret
out
jp
or
aas
mov
cmp
sub
call
and
jae
mov
inc
cmp
int3
cmp
pop
pop
fimuls
and
addr16
shrb
in
cmpsb
inc
dec
outsl
or
movsb
pop
lret
inc
sarl
jecxz
ljmp
scas
push
aad
push
repz
push
jno
ljmp
push
rolb
or
aas
sbbb
lds
out
push
pop
sbb
mov
jmp
mov
and
pop
mov
xor
hlt
or
repz
loope
call
jp
test
cmp
adc
fimull
jecxz
lds
lret
lea
mov
ja
je
daa
icebp
fdivl
insb
xchg
or
jae
ficoml
xor
out
xchg
in
jmp
jb
cmp
jl
stc
and
fsts
or
jno
cmpsl
jp
dec
stos
xchg
nop
xchg
mov
mov
daa
pop
in
dec
cwtl
lcall
dec
jmp
dec
test
dec
pop
mov
sti
mov
xchg
js
inc
jne
cmp
scas
cmp
push
sub
icebp
and
sub
sbb
push
cmp
loop
repz
dec
scas
pop
fsubs
js
mov
xchg
jle
outsl
push
jp
and
in
push
in
sbb
xor
ror
stos
testl
test
call
nop
or
in
adc
subb
in
pop
rcll
fildll
xor
sub
lret
sub
popa
mov
subl
push
shrb
sbb
jne
push
adc
test
rcrl
xor
adc
sbb
sbb
jmp
add
mov
cmp
xchg
sub
scas
mov
cli
loop
fidivl
or
mov
lea
dec
push
and
push
jne
inc
inc
rcrl
out
mov
jbe
mov
imul
andb
add
xor
cmp
xor
mov
mov
dec
push
inc
push
inc
or
into
xchg
ret
data16
dec
fcomps
adc
icebp
rcll
xor
mov
fs
inc
shl
sbb
popf
sub
dec
xor
jecxz
cmpsl
lcall
lahf
ljmp
loop
lock
pop
fwait
rolb
cmp
adc
jbe
cmc
sub
and
out
sub
mov
pop
fstpt
mov
loop
mov
out
fdivrl
loopne
mov
cltd
outsb
shll
sarb
and
cmp
push
pop
insl
mull
ficomps
mov
mov
add
sbb
adc
arpl
loop
lret
add
in
mov
pushf
lcall
imul
jae
ja
jmp
adc
es
enter
and
pop
mov
in
cmc
mov
adc
mov
dec
mov
fwait
jl
pop
pushf
iret
psubq
jae
frstor
push
mov
add
mov
popf
dec
lcall
dec
andl
cmp
pop
adcb
dec
imull
jle
jecxz
fstpl
nop
jp
xchg
in
mov
mov
adc
jnp
test
xor
ret
fs
and
daa
loopne
cmpsl
jmp
fnsave
mov
jns
jmp
fiadds
mov
and
mov
pop
rclb
dec
mov
dec
jle
xchg
mov
cwtl
push
mov
mov
lret
jb
push
mov
inc
fwait
sub
xor
call
inc
dec
cmp
inc
leave
lret
rclb
repz
adc
ret
gs
inc
pop
push
xchg
or
loopne
jmp
jle
jge
out
popa
pop
xor
nop
js
pop
xchg
add
add
mov
push
lea
ljmp
rcrb
call
push
mov
xchg
sbb
and
test
in
out
pop
jp
sbb
outsb
cmpsl
xchg
inc
pushl
lds
lds
fstpl
in
sti
leave
aaa
mov
lds
loope
sbb
push
push
fstps
mov
cmp
mov
mov
jp
clc
loop
ror
scas
add
mov
aas
xor
aaa
dec
mov
adc
shrb
pushf
popf
and
cmpsb
push
jb
mov
stos
insb
movsl
mov
ret
jns
pop
xchg
fsubl
push
sbb
test
cmp
dec
cltd
sti
out
and
mov
fcmovnu
dec
dec
sub
mov
dec
push
ja
dec
ja
cs
dec
out
mov
jge
daa
lock
mov
xor
or
es
pop
into
inc
xor
cmp
movsl
mov
test
roll
xchg
ret
mov
in
push
lret
pop
loopne
or
add
and
sbb
push
adc
sbb
lock
push
xor
and
xor
test
xor
adc
xor
inc
jmp
adc
pop
stos
jns
lret
sbb
fistpll
nop
dec
out
imulb
sbbl
fadds
mov
fcomps
ret
ljmp
dec
out
aas
fcoml
add
subb
xlat
push
inc
popf
push
std
mov
outsl
pop
fiadds
mov
fdivl
fnstenv
movsb
daa
mov
enter
xchg
push
das
pusha
popa
jp
ret
mov
mov
add
or
in
cmp
fbld
insb
fsts
pop
inc
push
jl
sub
xlat
lahf
daa
jae
out
xchg
cmp
shlb
ret
mov
cmp
js
mov
mov
cltd
mov
jae
jo
adcb
in
push
rorl
mov
rorl
repz
pop
loop
sub
dec
dec
pusha
sub
xor
push
and
add
jbe
movsl
jno
sahf
mov
scas
mov
lods
pop
mov
sbb
outsl
pushf
pop
dec
gs
cwtl
adc
jnp
mov
and
add
jle
or
sbb
push
lret
xor
fimull
out
add
fdiv
mov
jbe
inc
jns
lcall
adc
and
xorl
cmp
jmp
mov
dec
dec
mov
fwait
mov
inc
adc
cmp
ds
imul
cs
mov
xchg
mov
pushf
mov
lods
lock
jp
mov
mov
fnstsw
pop
iret
sub
in
or
push
adc
jo
cmpsl
scas
cmp
mov
jp
sub
mov
push
jge
movsl
mov
push
sbb
or
es
sub
jnp
in
fistps
lcall
or
imul
ds
test
loop
add
jl
popf
ja
push
ret
sbb
aad
ret
xchg
jne
inc
jge
or
mov
push
js
inc
cmp
adc
pop
clc
stos
pushl
xchg
xlat
add
enter
and
pushf
fimull
cmp
negb
loopne
out
cmp
push
int
sub
arpl
fcomp
repz
lea
test
mov
dec
mov
andb
mov
cmpsl
pop
or
sarb
mov
jnp
lea
loop
popa
jle
add
mov
fwait
lret
js
loop
loope
stc
mov
mov
dec
imul
imull
cld
pop
mov
jno
les
sub
js
pop
xchg
jg
or
lods
fwait
add
jl
and
xchg
pop
insb
sub
test
in
js
jnp
and
cmp
hlt
into
mov
sbb
pusha
leave
repnz
xlat
fsubrl
ficomps
call
pop
push
push
xchg
add
sub
lcall
xor
pop
add
and
lock
pop
sbb
sub
lret
dec
lds
sub
fadds
loopne
fnsave
xorb
add
dec
mul
mov
pop
addr16
sbb
xor
out
push
add
test
jo
daa
add
aad
sbb
ret
push
jmp
inc
aad
mov
jns
stc
jae
aad
push
cld
test
icebp
sbb
push
xchg
out
dec
adc
push
adc
and
repz
or
pop
mov
test
pop
mov
mov
das
xchg
push
jecxz
sbb
mov
push
push
sti
sub
sti
daa
loopne
add
shlb
lock
cmp
jbe
insb
and
xchg
js
enter
pop
dec
into
aaa
nop
xchg
loopne
fsts
loop
dec
cmp
stc
pop
imul
pop
subb
lret
loope
dec
aad
lods
push
lret
inc
add
sub
add
jge
mov
mov
and
pop
mov
enter
mov
je
lcall
xor
mov
jne
in
out
xor
mov
orl
sarb
xchg
mov
inc
dec
pop
dec
cmp
sub
jecxz
loop
push
and
lds
sub
sti
pushf
push
push
hlt
push
jle
pop
hlt
jo
imul
int3
stc
sbb
jb
cmp
xchg
mov
xchg
cmp
rol
cmpsb
jbe
int
test
mov
xchg
cmpsb
loopne
jno
addb
testb
insb
sub
xchg
ficomps
push
in
iret
test
lcall
push
iret
sub
jbe
and
cmp
ror
popa
lahf
jg
popf
dec
test
test
rcr
and
xor
inc
cmpsb
repz
sbb
mov
jo
add
xchg
jae
push
xor
or
les
out
cmp
cmpsl
mov
int3
js
cwtl
mov
out
sbb
xor
sbb
repz
in
inc
in
mov
aad
stos
pop
in
dec
and
pushf
xor
pop
or
mov
jmp
mov
adc
xchg
mov
aas
cmp
cmp
inc
jge
and
or
lods
dec
adc
sbb
je
sub
xor
test
adcb
dec
gs
mov
pop
mov
mov
mov
jle
subb
hlt
dec
addr16
add
movsl
lcall
hlt
mov
in
push
dec
pushf
scas
popa
add
gs
pop
cmp
add
and
jl,pt
iret
or
fiaddl
push
mov
xchg
mov
mov
sbb
cmp
fstps
lret
iret
clc
ja
xchg
movsb
or
jo
popf
dec
popf
mov
pop
test
orl
imul
vminsd
jne
xchg
loopne
hlt
testl
in
cli
inc
and
ds
into
pop
sub
cltd
mov
test
dec
je
xchg
adc
data16
stc
dec
mov
cli
adc
inc
xor
icebp
cmpsl
loopw
xor
cmp
cwtl
cmc
cmp
pop
int3
out
inc
xchg
mov
flds
mov
add
out
mov
gs
nop
sub
mov
sub
pop
mov
in
pop
mov
xor
mov
dec
jmp
dec
jle
adc
xchg
inc
xor
es
push
fldt
xor
push
add
lods
xchg
mov
xor
add
enter
movsb
lods
test
aas
jo
scas
mov
stos
es
daa
mov
xor
call
push
cmp
pop
das
sub
mov
insb
outsl
xchg
iret
xchg
pop
in
ljmp
jp
faddl
daa
test
scas
dec
test
mov
and
mov
xchg
pop
and
xor
call
cmc
xor
or
and
inc
ret
pusha
lcall
mov
adc
loop
pop
and
push
andb
push
xor
ret
decb
pop
call
and
stos
fidivl
insl
test
stc
adc
mov
stc
and
das
add
sbb
cmp
mov
movsl
push
movsb
mov
cmpl
jae
jnp
pop
lea
scas
xor
fisubl
jecxz
ss
jne
jae
inc
aas
test
scas
ret
xlat
inc
and
mov
pop
js
sub
and
out
insl
add
arpl
mov
xchg
cmp
push
stos
in
mov
mov
fsubrs
aas
xchg
roll
rcr
push
ss
mov
rcll
lea
divl
repz
je
pusha
pop
and
cmpsb
jns
pop
fs
jl
and
sbbl
clc
out
int3
es
xlat
mov
pushf
loope
xor
or
dec
je
ror
inc
mov
aam
jnp
test
inc
xchg
push
sbb
xchg
testb
inc
mov
popa
sahf
outsb
mov
xchg
sub
xchg
push
inc
ret
repnz
mov
hlt
mov
insb
test
lock
pushf
test
scas
mov
cli
hlt
mov
mov
push
shlb
stos
sar
inc
jle
lcall
roll
sti
fbld
hlt
notl
fwait
call
adc
mov
mov
sub
hlt
adc
iret
fistpl
fistpl
jl
das
push
jge
cmp
repz
jns
push
jge
fcom
push
sub
enter
mov
add
das
and
xor
adc
and
nop
mov
xchg
push
lret
or
fld
iret
mov
fistl
push
jb
jne
mov
test
pop
mov
push
je
je
out
data16
sbb
jbe
jmp
pop
out
out
daa
aam
adc
insl
jbe
loope
into
dec
dec
or
mov
add
std
flds
mov
into
hlt
mov
sub
adc
xchg
xor
xor
clc
stos
inc
mov
inc
in
lea
lahf
adc
cmp
test
div
daa
jns
jecxz
mov
mov
dec
mov
jmp
test
mov
mov
mov
dec
ljmp
jb
mov
adc
retw
cmpsl
xchg
and
sahf
jg
int3
scas
mov
cld
cmp
xchg
je
xchg
in
xor
bound
mov
sbb
popl
js
fiaddl
pushf
adcl
inc
insl
and
rorb
mov
notb
arpl
mov
movsb
cld
bound
pushf
lods
sbb
xchg
lret
pop
xor
xor
pop
maskmovq
imull
add
xchg
pop
scas
jno
pop
mov
arpl
push
lock
add
call
lcall
lods
jmp
sbb
pop
roll
pop
mov
mov
xchg
shl
repz
test
or
subb
mov
stos
fistps
cmc
lret
pop
and
or
test
add
cmp
inc
sahf
vpminsw
jmp
notb
cmpb
sbb
jo
sub
loop
and
cmp
dec
bound
push
cmpsb
pop
cmp
mov
clc
cmp
adc
inc
movsl
cmp
inc
adc
je
xlat
xchg
jae
fisubrl
movsl
push
test
lahf
movsl
mov
icebp
adc
mov
popf
sbb
out
mov
in
insb
cmp
mov
mov
mov
xor
popf
in
mov
popa
sbb
push
jge
dec
out
xchg
popf
ds
xor
mov
sbb
lock
sbb
bound
repnz
gs
test
stc
in
mov
sub
div
ja
aam
sbb
call
add
adcb
rclb
fists
xor
pusha
out
leave
roll
andl
sub
xor
push
fists
mov
push
into
fisubl
mov
xor
iret
int
dec
xor
cmp
into
das
repz
movsb
push
or
stc
dec
jle
decb
dec
pushf
mov
adc
lods
sbb
das
mov
inc
pop
test
daa
dec
push
iret
pop
adc
adcb
cmp
pop
sub
fstpt
jbe
adc
leave
fiadds
lahf
cwtl
aam
and
pop
loop
sbb
pop
stc
rol
add
lock
insb
jae
sahf
out
aas
repz
das
outsl
imul
jp
lods
inc
add
mov
fimuls
insb
jns
xlat
xchg
mov
cli
jns
lcall
mov
inc
xlat
or
ja
aas
pop
sbb
je
or
ss
aaa
arpl
cmp
mov
hlt
mov
adc
push
add
sub
aas
cmc
sbb
push
mov
xor
xchg
aas
scas
sbb
sbb
dec
push
add
push
orb
test
dec
jb
fdivs
leave
jbe
xlat
scas
mov
pop
movd
push
mov
pop
bound
divl
mov
cmp
mov
xlat
test
fidivrs
daa
mov
aaa
push
roll
add
iret
repz
call
pop
mov
pop
dec
dec
outsb
addl
mov
call
cli
mov
ret
std
xor
inc
frstor
add
ljmp
sarl
sarb
or
in
push
popf
mov
mulb
fnstcw
clc
xchg
mov
js
jb
and
test
add
and
lock
push
aas
or
push
mov
imul
mov
pusha
mov
sahf
mov
push
in
fildl
add
cmp
mov
or
mov
ror
jno
pop
repnz
nopl
les
inc
push
adc
pusha
das
add
xor
sub
adc
push
fdivrs
test
popa
jle
mov
cwtl
pop
push
sbb
les
add
add
insl
xor
aas
and
insl
push
mov
data16
imul
cs
sbb
loope
mov
repnz
lods
mov
push
or
mov
call
jecxz
xchg
fstps
dec
xor
es
clc
call
out
pop
lods
test
mov
cmpl
data16
ds
aas
scas
cmp
inc
push
pop
notb
cmpl
in
sbb
ss
push
or
xor
add
call
add
in
test
in
subb
inc
nop
sub
fcomps
in
popl
jnp
arpl
das
arpl
js
jne
pop
dec
jno
data16
lret
adc
fstpt
cmp
out
fistl
jne
popf
addr16
pop
pop
push
pop
iret
iret
stos
add
sub
jnp
into
test
ret
sbb
popa
test
in
mov
loopne
or
adc
xorl
lods
in
pop
cmc
subl
add
test
out
jp
ss
jmp
pop
xlat
cmp
in
repz
jl
or
sahf
addr16
or
iret
mov
fbld
push
mov
xchg
call
out
dec
adc
movsb
and
xchg
dec
loop
jecxz
pop
push
adc
sub
sarb
leave
add
xorl
cmp
pop
iret
push
sbb
dec
sbb
shll
lock
cld
and
loope
adc
xchg
adc
mov
or
pushf
jno
pop
fwait
and
add
rclb
daa
mov
jp
push
icebp
push
imul
movsb
mov
pop
xchg
lret
mov
lock
mov
mov
shl
inc
mov
fstl
xor
imul
cmc
push
aam
shr
int3
add
push
cs
out
mov
or
fs
push
push
stos
arpl
xchg
imul
jg
and
mov
aam
stos
or
testb
fcomi
lea
mov
inc
mov
dec
push
fs
add
ret
icebp
inc
repz
out
inc
test
inc
ss
pop
imul
loop
and
leave
or
xor
jnp
fistl
pop
mov
sbb
fidivrl
dec
jmp
xor
out
data16
add
outsl
push
push
std
mov
mov
les
popa
sbb
push
cmp
iret
shrb
jmp
sub
inc
inc
sbb
cmp
push
mov
hlt
mov
shr
and
lret
push
jbe
xor
xchg
scas
inc
push
dec
leave
mov
mov
pop
repz
cmp
or
stos
fiaddl
cwtl
mov
dec
pushf
dec
icebp
pop
test
jnp
leave
repz
repnz
cltd
shll
pop
and
adc
pop
dec
xor
mov
mov
pop
sbb
loop
mov
out
test
shlb
fwait
out
push
rclb
sbb
inc
aam
or
mov
loope
dec
dec
repz
imul
or
sub
xchg
ds
fs
mov
cmp
jl
test
test
scas
movsl
in
pop
clc
cwtl
mov
insl
cmpb
test
inc
or
mov
inc
mov
leave
cmpsb
out
cmc
pop
fcoms
dec
fimull
js
shrb
jmp
js
cmpsl
pop
cld
inc
out
jno
push
adc
ja
test
das
clc
dec
aaa
adc
dec
je
mov
adc
pop
and
adc
jne
mov
repnz
mov
push
mov
lahf
fsubs
add
iret
add
pusha
mov
incb
test
stos
mov
sub
lods
cmpsb
fsts
fcmovb
mov
mov
les
xchg
or
out
fisttpll
mov
jb
mov
jge
in
andl
popf
sub
inc
orb
stos
repnz
test
aam
fnstcw
xor
push
test
mov
mov
push
sub
inc
or
shlb
sbb
lods
mov
rolb
stos
xor
cld
inc
cmp
in
pop
xchg
cmp
aaa
and
and
test
jnp
sub
sbb
jp
inc
sbb
pop
add
xchg
jge
cmp
xchg
std
fimull
jp
mov
cld
xchg
jno
je
xchg
ss
test
insl
sub
sbb
mov
adc
stc
dec
sbb
jb
lods
mov
inc
mov
inc
xor
xchg
sub
cwtl
jmp
sbb
test
jl
popa
push
lea
pop
hlt
jo
fwait
rclb
loopne
xchg
enter
outsl
das
int3
int
xchg
ja
aad
psubd
jne
das
adc
lods
cmpsb
pop
rorb
lods
mov
shll
hlt
pop
adc
enter
mov
pop
loope
xchg
imul
leave
rclb
test
mov
or
mov
in
daa
scas
outsl
icebp
xchg
cltd
out
cmp
push
mov
test
add
gs
adc
fcompl
pop
and
pop
and
div
lea
ljmp
cmp
outsl
or
push
sti
leave
jge
or
push
adcb
je
lret
mov
or
inc
or
jecxz
lds
shlb
ja
inc
xchg
or
loopne
and
xor
jl
les
addl
jle
cmp
out
mov
ret
ds
or
popa
push
jne
dec
leave
adc
into
ror
in
and
in
adcb
rcr
fistps
mov
or
pop
xchg
in
and
call
ss
xor
sbb
outsl
popf
aaa
sub
adc
mov
sarl
fsubl
dec
fidivl
adc
push
mov
sti
fldt
mov
lea
stos
mov
inc
cmp
dec
adc
xor
cmpsl
mov
push
cmpsl
mov
fldenv
push
mov
push
test
lock
loope
ret
xchg
xor
popa
sahf
sub
sub
int3
movsb
jno
ficoms
or
ljmp
clc
cmp
es
in
cmp
rol
pop
insb
jp
mov
mov
icebp
cmp
dec
xor
popf
xchg
sbb
sbb
pop
out
imul
pop
addb
mov
push
imul
jnp
xchg
dec
xor
sbb
test
add
pop
xor
addb
dec
jns
lcall
push
add
dec
xlat
dec
fdiv
aad
js
std
pop
xchg
ja
in
sar
icebp
adc
cmp
and
popl
adc
pop
or
js
sahf
in
in
xor
ret
adc
inc
push
lret
call
sbb
mov
add
mov
sub
cwtl
outsb
adc
orl
add
push
outsb
aam
mov
push
or
push
cltd
js
dec
mov
leave
mov
movsl
jmp
out
add
push
repz
or
inc
sbb
cmp
cmp
insb
mov
push
ds
cmpb
add
mov
xchg
push
mov
xor
sets
imull
sub
and
push
ret
jae
sbb
mov
movsb
fdivr
adc
adc
ret
jmp
jno
aam
dec
mov
fwait
mov
pop
mov
sub
add
push
mov
xchg
fidivrs
outsl
xor
cmp
hlt
mov
adc
and
push
mov
je
add
shlb
push
call
mov
or
push
movsl
sbb
test
dec
xor
inc
push
dec
lret
cli
std
jne
test
add
pop
cltd
clc
daa
cmp
add
jo
aam
push
mov
pop
jge
mov
fistl
xorb
cmc
jge
dec
sbb
xor
cmpb
fisubl
lret
scas
adc
test
fisttps
mov
push
dec
jge
jo
popa
lret
arpl
mov
pop
xchg
xchg
stos
dec
adc
out
lock
mov
lret
push
adc
mov
mov
repnz
shrl
jmp
testl
pop
std
sti
shrb
in
add
lea
add
dec
sub
das
inc
dec
icebp
cwtl
pop
jmp
fimuls
in
aas
dec
rclb
lcall
xchg
inc
out
jl
pop
sar
dec
jnp
fsubl
xchg
mov
fmuls
jp
pusha
sub
or
xor
xor
int3
push
push
dec
aaa
cmpsb
pop
pop
xchg
repz
cld
adc
jge
pop
mov
push
sub
sbb
popa
call
sub
in
ljmp
xchg
mov
subl
or
icebp
lret
les
cli
jnp
jo
push
dec
dec
fcompl
sahf
aad
mov
cmc
test
add
pop
or
adc
jmp
je
mov
les
ss
add
pop
out
xor
rolb
mov
insb
inc
test
movsb
xor
sub
pusha
xor
sub
fiaddl
lret
pusha
fldl
pop
adc
jl
test
je
or
insl
pop
daa
add
xor
imul
xchg
mov
sbb
and
jmp
mov
aam
idivb
mulb
push
sub
xchg
xor
fsubrp
cmp
mov
cmp
scas
sub
movsb
addr16
jbe
xor
sbb
push
cmc
loop
inc
cmc
jae
jge
sub
ret
daa
fidivrl
movsb
pop
xor
sbbl
mov
popl
xchg
rcrb
and
negb
add
fldt
mov
sbb
dec
mov
add
xlat
and
cmc
js
or
je
sbb
sbbb
repnz
ja
sbb
daa
aam
jb
dec
aaa
jecxz
dec
lock
hlt
and
ds
sub
aad
inc
mov
ror
shll
pop
imul
push
bound
mov
xor
adc
xlat
push
scas
popa
inc
xchg
sbb
add
xor
sbbb
mov
push
notl
addb
push
lret
mov
imul
or
dec
mov
ror
xorb
loop
in
sbb
xchg
xchg
int3
mov
fstpt
xor
push
testb
je
lods
in
xorb
dec
das
sub
outsb
movsl
adc
mov
fcomps
fcomi
sub
pop
pop
sbb
sub
scas
xlat
xchg
mov
sbb
in
xchg
int3
jno
dec
lea
jmp
dec
std
adc
out
and
arpl
mov
pop
mov
sbb
ljmp
mov
int
clc
rcl
push
pop
mov
out
insb
shrb
cmp
sahf
mov
cld
adc
cwtl
rcl
sub
mov
push
fwait
outsb
bound
jns,pn
in
cmp
mov
mov
shrb
push
mov
xor
in
cmp
or
lahf
aas
or
lock
je
pop
or
dec
and
mov
fs
jns
add
mov
fwait
mov
cltd
lcall
outsl
or
add
test
outsl
mov
repnz
jge
fidivl
sti
filds
lods
test
and
idivl
aad
xchg
sub
jnp
add
pushl
xchg
pop
cmp
lods
ret
add
mov
popa
mov
add
mov
push
das
iret
push
push
sbb
outsl
inc
jge
jae
jmp
mov
jne
int
add
jns
lds
push
das
scas
pushf
outsl
cld
xorl
dec
aam
mov
or
ss
cmp
add
dec
pop
adc
inc
mov
mov
pop
sar
outsl
pop
push
inc
lcall
dec
sub
fistpll
test
in
loop
mov
add
bound
sbb
sbb
mov
mov
mov
fadd
mov
push
or
cmp
ljmp
or
sub
pusha
push
mov
shlb
mov
mov
xor
stc
mov
fnstsw
subb
mov
ja
int
cltd
or
push
push
out
push
adc
lods
fildl
mov
xchg
mov
outsl
insl
xor
rcrl
sbb
mov
pop
jp
xor
icebp
int
mov
pop
cmpl
xor
push
loope
call
scas
test
xchg
movl
lcall
fisubs
sbb
shl
dec
scas
lds
cwtl
lock
rcll
and
and
adc
mov
add
dec
jne
sbb
inc
xchg
bound
fdivrs
out
aaa
into
add
sarl
pop
stos
mov
adc
fdivs
mov
xor
rcrl
lods
aam
fldcw
test
inc
inc
cmp
movsb
mov
cmpsb
mov
lock
loopne
mov
xchg
push
mov
push
movsl
cmpsl
xlat
or
in
nop
dec
sub
out
lret
cwtl
in
js
test
sub
cmpb
gs
iret
add
or
repz
lods
xor
cs
inc
pop
aas
add
shrl
cwtl
outsl
popa
movl
fdivs
pushf
add
outsb
cmc
enter
imul
adc
inc
xchg
cmpsl
jno
or
popa
fwait
adc
push
loopne
sbb
jge
shl
sbbl
mov
lods
sub
inc
repz
push
inc
dec
in
push
cltd
sti
stos
xor
lds
and
fs
orl
test
rep
call
bound
mov
mov
lss
call
sub
shll
rorb
sub
aas
inc
xchg
es
pop
pushf
fidivrl
shl
int
into
shl
xor
repnz
shlb
and
mov
std
push
inc
mov
insl
fists
aam
call
pop
jno
mov
outsl
cmp
lret
cmp
je
icebp
dec
scas
mov
xor
mov
add
fs
pop
pop
fstl
mov
mov
xchg
xor
sbb
sahf
mov
lods
dec
xlat
cmp
add
lahf
jo
cltd
loop
test
mov
mov
xchg
xorb
lds
movsb
out
sbb
lahf
mov
fadd
ds
test
fs
popa
sarb
push
add
add
or
cmpsb
jmp
sbb
inc
into
addb
adc
subb
aas
lahf
rcll
dec
jne
mov
movsb
stos
sub
lods
inc
lds
sarb
shrb
popa
lahf
push
cwtl
ja
lock
mov
push
subl
sub
sti
dec
mov
mov
aaa
adc
decb
cmc
in
dec
mov
decl
test
xchg
pop
or
cmp
mov
jo
test
lret
pusha
ret
xor
mov
repnz
iret
into
mov
cmp
sbb
mov
xchg
sub
cmpsl
cli
mov
fcoms
std
adc
xor
out
xor
call
div
addr16
into
and
call
mov
cld
cmp
sub
call
or
jl
xor
mov
jp
and
add
mov
popf
fisttpl
shlb
or
es
sub
repz
insb
pop
and
xchg
es
inc
push
popa
mov
pop
push
fucomip
pop
enter
scas
lods
out
arpl
sub
roll
out
outsb
in
repz
xor
sbb
jle
jp
pop
arpl
inc
fcom
sahf
sbb
sbb
dec
lret
dec
out
inc
ja
pop
into
jnp
imul
data16
loope
stos
add
push
inc
aas
mov
fwait
andl
stc
test
xor
push
xor
jmp
jbe
je
sub
cmp
cmp
shr
mov
icebp
rcll
lock
daa
pop
adc
sub
dec
jle
or
sti
push
push
dec
inc
clc
pop
cwtl
jnp
mov
sub
jp
push
rorl
mov
fs
std
jbe
movsb
pusha
xor
lahf
int3
lret
fstpt
add
mov
sbb
ret
jnp
das
dec
pop
mov
push
xor
cmp
dec
push
out
cmp
pop
push
scas
scas
mov
dec
in
push
and
repnz
push
push
fs
mov
jns
inc
cltd
adc
imul
or
push
mov
inc
add
mov
in
daa
jmp
lds
inc
or
dec
movsl
leave
shll
imulb
pop
cmc
leave
cmpsb
xchg
adc
and
jae
cmp
jb
int
dec
fisubrl
stos
popa
push
mov
fisttps
and
dec
and
mov
daa
cmp
push
stos
mov
out
fsubr
and
icebp
jb
and
fidivrs
jns
pushf
rcll
mov
in
pop
xchg
xor
mov
mov
cmp
mov
and
cli
inc
cmp
xchg
adc
sbb
or
cs
lock
rclb
mov
stc
nop
scas
add
aad
pop
mov
xchg
orb
and
jp
add
push
sahf
pop
loop
mov
dec
jno
mov
orb
sbb
lret
mov
js
loope
fs
add
popa
lret
fldl
jmp
sub
arpl
ret
in
adc
lret
fldenv
pop
in
movsl
cmp
mov
push
adc
push
cmc
xchg
repnz
sub
push
std
xor
pusha
cmp
enter
add
stc
or
or
inc
repz
es
mov
int3
notb
out
mov
in
es
aas
loopne
or
lret
lret
xor
sbb
add
and
xor
into
sarb
hlt
mov
fimuls
mov
mov
sahf
mov
xlat
adc
mov
loope
mov
sub
aas
lock
inc
sub
mov
in
insb
pusha
shrl
dec
fisubl
aam
loope
mov
mov
sub
cmp
mov
pop
and
imul
jecxz
sub
cmp
js
outsl
cli
adc
cwtl
cmp
or
inc
jle
cltd
mov
dec
add
cmp
sbb
pop
in
sbb
xchg
je
xchg
out
inc
scas
push
mov
scas
sahf
cs
and
sbb
loope
scas
idivb
in
in
sbb
push
mov
shll
push
pop
sbb
lcall
jbe
aas
or
sbb
fmull
das
and
fiaddl
outsl
or
xchg
test
cmp
mov
mov
cmp
mov
pop
lahf
xor
mov
pop
cmc
sbb
mov
js
mov
mov
ljmpw
add
mov
fldenv
mov
insl
sbb
pop
lahf
fxch
dec
ret
or
push
js
jmp
pop
mov
jle
pop
orl
lds
xchg
xor
dec
cltd
fsts
push
into
lcall
sub
stos
aaa
cli
and
repz
adc
push
jg
adc
aaa
push
repnz
cltd
aaa
pop
imul
pusha
or
lret
add
add
not
push
sbb
nop
test
lret
dec
xchg
mov
mov
mov
add
es
mov
std
mov
mov
iret
jp
outsb
jg
ds
test
add
imul
xchg
rcr
outsb
lret
pop
je
hlt
ficoms
dec
cmpsb
jle
out
pusha
xor
popf
mov
or
lods
fdivrl
adc
mov
mov
pop
jp
dec
pop
call
into
jnp
loope
imul
adc
idivl
inc
jge
sbb
mov
dec
je
js
jne
xor
aad
stc
out
or
and
insb
aam
inc
jg
pop
pushf
outsl
cmp
mov
mov
mov
lock
les
mov
adc
mov
jne
shrb
pop
push
bound
push
mov
jb
pop
iret
stos
or
lcall
mov
pop
sbb
adc
adc
sub
inc
inc
call
notb
lret
jge
scas
cmp
addb
int3
test
mov
pusha
repnz
dec
mov
ficoms
out
test
lcall
leave
push
pushf
pop
and
xchg
add
flds
mov
xchg
mov
dec
inc
sub
mull
pop
lret
mov
lahf
inc
fldl
xchg
sbb
xor
jno
mov
dec
xlat
int3
push
or
mov
adc
lds
lods
adc
mov
mov
outsl
pop
ss
pop
push
mov
xchg
mov
std
sub
imul
adc
orb
pushf
adc
cwtl
xor
add
dec
subb
mov
shlb
cmp
push
push
dec
movsl
and
jnp
movsb
mov
pop
pop
or
fnsave
ss
incb
or
jl
adc
rolb
or
shlb
hlt
jle
adc
inc
js
test
rorb
xchg
pop
pop
mov
adc
lcall
xchg
out
jbe
xchg
push
es
jle
jns
mov
out
cmp
sar
sub
add
daa
inc
fs
pushl
fsubrs
adc
cmp
mov
sub
mov
mov
icebp
subl
push
popfw
dec
inc
outsb
pop
mov
or
dec
bound
call
jp
jne
push
mov
lods
fwait
clc
cwtl
add
fnstsw
outsl
repnz
xchg
cli
les
cwtl
and
lea
nop
or
insb
lods
mov
mov
xchg
rcrl
dec
push
je
inc
outsb
add
pushl
loope
movsl
mov
jp
adc
push
mov
pmullw
shlb
inc
lea
adc
call
dec
stc
cmp
mov
es
jb
aaa
test
out
mov
push
stos
mov
cmp
pop
jmp
lods
std
mov
aad
pusha
test
adc
aas
sbb
xor
pop
shlb
sbb
flds
fcoml
push
push
in
adcb
loopne
adc
pop
or
mov
cmp
xchg
inc
jmp
gs
decl
cld
popf
insb
pop
cmp
cs
jmp
pop
xor
pop
in
add
cmp
and
test
lods
lods
xchg
adc
repnz
dec
insb
push
mov
mov
push
xchg
add
pop
dec
mov
mov
arpl
add
add
test
mov
cmp
mov
lahf
dec
dec
fs
mov
jl
fdivp
push
adc
dec
pop
mov
repz
int
std
push
call
imull
xchg
rcrl
pop
imul
movsl
hlt
mov
or
push
jbe
add
hlt
sub
add
xchg
jbe
shll
lods
ss
lds
out
jp
ret
faddl
out
sbb
hlt
fs
push
sbb
js
lret
decb
je
mov
cltd
ds
cmp
inc
lock
sbb
inc
jecxz
or
das
jns
lahf
jae
jg
rorb
cmp
jno
adc
mov
aad
adc
and
jmp
mov
xor
xor
jmp
jne
xchg
in
dec
xchg
mov
in
push
addr16
js
stos
inc
sahf
pop
mov
sbb
js
or
fiaddl
fldenv
pop
push
mov
into
out
ret
or
xchg
push
in
into
sbb
mov
dec
pop
jne
mov
loop
aam
lods
xchg
jo
push
repz
jmp
loop
ret
pusha
orl
in
sub
and
fisttpll
fstpt
lods
xor
cmp
mov
cs
dec
mov
push
mov
push
pop
xchg
sarl
cmp
xor
pop
ret
xchg
and
shl
pop
and
mov
clc
cmp
jbe
mov
sub
push
leave
out
xchg
ret
pop
addb
mov
insb
inc
and
scas
incl
sarb
add
push
push
cmp
adc
insl
es
in
iret
out
cmp
and
ret
daa
jecxz
push
xchg
jge
daa
and
pop
push
notl
cmp
mov
or
jb
jl
add
js
ret
orb
xchg
cmp
cld
sub
pop
ds
jae
sbb
push
jmp
lods
dec
inc
or
xlat
mov
lret
lahf
xor
leave
xorl
inc
addr16
loop
push
jnp
push
lods
or
jb
fidivl
jecxz
jae
orl
loop
in
popf
xchg
mov
mov
loopne
lea
push
mov
dec
in
inc
mov
sub
xor
xchg
into
adc
mov
jg
cmpsl
out
push
cs
pop
shrb
scas
xchg
pop
loopnew
or
lgs
xchg
rorl
pop
scas
test
and
iret
mov
out
jle
outsl
inc
sbb
mov
add
imul
mov
inc
mov
inc
sbb
push
mov
mov
push
pusha
mov
mov
loope
test
inc
fsts
cs
dec
mov
shlb
xor
and
cmpsb
lret
ja
addr16
movsb
call
jo
insl
push
mov
xchg
adc
cmc
shll
xor
scas
dec
add
or
adc
push
in
lea
xor
mov
cmp
rep
repnz
insl
shl
jmp
out
pop
shlb
enter
dec
int
stos
stos
adc
inc
sbb
xchg
stc
cltd
xchg
pushf
and
add
mov
out
inc
sbb
xor
push
add
xor
adc
mov
xchg
sub
cwtl
sub
clc
rolb
adc
add
xchg
repnz
mov
das
loopne
and
jae
xchg
lea
add
outsl
shrl
dec
xchg
cmp
das
inc
scas
add
into
fiadds
mov
and
dec
mov
dec
adc
lahf
inc
js
insl
or
out
jno
fisttps
mov
and
roll
mov
rcl
lods
xchg
push
repz
test
mov
adc
jne
mov
lea
call
test
movd
outsl
sub
imul
call
outsl
pop
pop
aaa
addb
mov
ret
sub
enter
repz
stos
cmp
jbe
das
shrb
call
stos
loope
idiv
call
loope
icebp
adc
xchg
mov
xchg
sbb
mov
xchg
mov
jo
inc
cmc
jg
sbb
push
xchg
dec
mov
xor
pop
repnz
xchg
dec
outsl
inc
js
movsb
stc
or
imul
adc
jo
movsb
inc
into
dec
xchg
pop
dec
add
aad
insb
lret
leave
sub
or
jne
jmp
repnz
scas
ret
push
movsb
cs
mov
bound
cmp
mov
adc
and
testb
dec
mov
lcall
pusha
sbb
outsb
mov
jb
adcl
aam
outsb
inc
dec
stos
mov
cmp
js
cmp
and
jecxz
dec
sub
xchg
and
adc
sbb
cmc
mov
outsb
ja
push
hlt
lret
js
or
cmpsb
xchg
push
adc
inc
out
xor
int
dec
fdivrl
mov
adc
cld
or
lea
add
mov
arpl
xor
mov
bound
test
in
lcall
mov
and
add
cmpsl
cmp
fwait
sub
jmp
pusha
cmp
dec
dec
adc
mov
sbb
mov
xlat
cmpsl
in
addr16
out
inc
lock
repz
scas
repz
fwait
aaa
inc
xor
insl
lea
call
movsl
mov
pushf
xchg
dec
jb
sidtl
mov
movsb
idivb
jg
cmpl
push
stos
add
sbb
cmp
out
imul
pop
idivb
xor
mov
scas
mov
adc
and
inc
mov
mov
adc
testl
sti
pushf
jp
push
orb
lds
int3
sbb
ret
mov
insl
push
mov
add
mov
in
imul
dec
xor
mov
nop
cmp
xor
decb
scas
pop
int3
pop
jmp
pop
dec
xlat
test
or
das
mov
fsubs
adc
out
aad
fs
inc
aas
movsb
push
inc
js
mov
push
adc
pop
cmpsl
imul
fwait
daa
addr16
clc
dec
add
je
inc
mov
adc
sbb
and
jno
es
insb
hlt
loope
mov
repz
call
pop
test
sub
jmp
mov
push
mov
and
dec
inc
mov
into
push
adc
outsb
sbb
add
rorb
add
jmp
mov
dec
stos
jle
sbb
or
daa
sub
mov
jge
jae
add
pop
scas
sub
outsl
lods
ss
cwtl
sbb
or
lea
in
xchg
xchg
jo
add
call
jg
shll
sbb
cmp
scas
adc
repz
inc
and
adc
lock
or
pop
in
in
icebp
dec
and
lods
dec
mov
inc
and
fldcw
cwtl
shrb
xor
push
shlb
sbb
and
mov
inc
aaa
ljmp
jae
add
adc
cmp
mov
int3
xchg
pushf
int
inc
xchg
insb
sahf
or
push
outsb
fisttpll
and
scas
and
push
sub
fmuls
orb
popf
mov
lcall
outsl
jo
aad
outsl
divl
fadds
jbe
loop
popf
aas
ret
adc
jno
je
es
cmp
jl,pt
bound
imul
jb
mov
xor
hlt
cmp
adc
stos
int3
imul
sahf
fbld
xchg
jne
push
jb
ret
push
sbb
into
mov
mov
dec
paddw
sbb
test
mov
in
lret
push
xchg
adc
pop
inc
jl
test
jne
outsb
mov
mov
xlat
shl
out
ret
xor
ja
leave
popf
sub
outsl
sarl
test
mov
pcmpeqw
cmpsl
lock
xor
sbb
jae
push
lahf
dec
js
xchg
cmp
jecxz
mov
mov
push
leave
inc
adc
sub
or
in
xchg
pushf
jecxz
jl,pt
adc
jb
ret
rolb
imulb
negb
sbb
cmp
inc
or
xchg
and
sub
lods
adc
pop
jno
or
push
movsl
add
jbe
lcall
pop
ss
or
mov
stos
call
mov
jbe
imul
xchg
call
and
movsb
xor
cli
pop
lret
loop
loop
mov
xchg
or
arpl
lcall
cmpb
dec
les
icebp
mov
stos
repnz
pop
push
xchg
cmp
xchg
jecxz
fstps
inc
jb
adc
aas
push
mov
xlat
jb
dec
fnstenv
jae
dec
inc
jns
push
xchg
sbb
add
movsb
cmp
or
ret
pop
mov
ror
push
ljmp
adc
ja
or
repnz
xchg
sub
xchg
mov
mov
repz
adc
pop
pop
sub
ljmp
sbb
push
call
insb
cmp
sti
pop
subb
test
loope
stos
push
insb
jg
mov
test
stos
xor
and
push
xchg
cltd
fucomp
ret
subl
xor
out
arpl
mov
xor
mov
sbb
mov
add
ljmp
scas
sbb
mov
lock
enter
adc
mov
nop
jo
ficoms
ja
in
inc
inc
and
inc
int3
into
cli
mov
adc
int
push
xlat
mov
loop
push
xor
dec
add
inc
lcall
pop
or
sub
add
push
sahf
repz
pop
das
outsb
repnz
jb
mov
rcrb
in
ret
sbb
mov
insl
scas
pop
add
ljmp
mov
cwtl
lahf
jp
rorb
jnp
into
sbb
xchg
loope
dec
jne
and
out
roll
and
jp
jne
jle
aad
movsb
rcrl
je
mov
bound
mov
mov
rcl
jo
ret
and
and
add
xorb
push
pop
cmp
sub
shll
icebp
movsb
in
xchg
addb
lret
add
inc
ja
push
mov
jne
cmp
lods
cmc
pop
outsl
mov
sbb
lahf
imul
cmpsb
sub
jns
dec
inc
pop
push
cmp
jb
jae
mov
call
fldcw
and
pop
data16
xor
aaa
adcl
int
sbb
rolb
int
imul
xchg
test
pop
mov
jbe
imul
lcall
jb
and
rclb
pop
mov
ror
xchg
mov
fs
fimuls
inc
push
leave
clc
inc
add
push
fs
movsb
xchg
push
iret
sub
sbb
mov
aam
inc
shlb
adc
mov
and
loopne
or
shl
cli
pop
pusha
xlat
frstor
lcall
call
rcrb
adc
push
rcr
aam
fisttpll
or
lea
nop
or
jg
xor
addb
dec
mov
sub
rol
pop
pop
mov
sbb
sub
int
fdivrs
ja
cmp
out
xor
sahf
pop
movsb
repz
xchg
stos
or
cmp
test
negl
enter
push
xchg
pop
adc
test
stos
insb
ss
add
cld
xchg
scas
ud0
in
xlat
std
stos
mov
ja
insl
insb
sarl
push
push
pop
inc
imul
push
push
dec
data16
push
mov
or
mov
mov
pop
imul
dec
faddl
jns
cmp
std
inc
mov
daa
shll
cmpsb
andb
push
pushf
or
popa
cmp
lcall
dec
cld
test
adc
loopne
sub
inc
popa
divb
mov
and
inc
lret
clc
in
inc
popf
cltd
pop
pop
in
sbb
xchg
jl
mov
imul
xchg
add
xchg
xor
xlat
mov
stos
mov
movsb
out
fistpl
mov
cmp
sbb
cmp
popf
cmp
dec
lret
and
aad
jno
test
adc
fldenv
std
jecxz
jns
push
inc
ljmp
jmp
pop
dec
aas
push
pop
sub
xchg
ss
lods
mov
lds
push
dec
inc
lods
or
cmp
mov
mov
dec
pop
insl
nop
into
cmp
ja
sub
xchg
add
mov
mov
outsb
sbbb
sub
push
sub
ja
ljmp
sahf
sbb
cld
stos
lods
or
xor
sub
mov
pushf
fadds
xchg
cmp
push
sub
mov
pop
addr16
inc
cmc
repz
adc
repz
daa
aas
pop
mov
adc
inc
or
gs
push
test
aaa
push
add
mov
cmc
addr16
mov
cmp
pop
fs
push
pop
rcll
add
push
mov
stos
lods
mov
add
popa
jns
cltd
lcall
testb
xor
fs
or
add
ja
jne
jmp
push
ret
sbb
adc
sub
dec
pop
xchg
mov
pop
sub
inc
js
adc
mov
lods
xchg
dec
inc
aad
js
or
and
push
add
out
andl
lods
and
sub
jmp
mov
stos
mov
jnp
adc
cmc
mov
addr16
daa
movsb
push
cli
pop
das
outsb
push
mov
in
push
pop
mov
ficoml
push
pop
mov
cs
dec
mov
sbb
int3
nop
call
mov
repnz
fimuls
inc
fsubl
sub
repz
mov
enter
js
jne
jge
icebp
sbb
mov
sbb
sti
pop
ret
stc
stos
dec
andl
out
mov
jbe
notl
imull
or
adc
mov
pop
aam
aad
add
pop
dec
or
test
outsb
xchg
ds
or
sbb
mov
cmp
mov
imul
cli
jg
lea
sub
aam
fmulp
xor
xchg
out
pop
mov
in
jnp
inc
out
mov
xchg
ror
loop
cli
aad
xor
sub
cmp
mov
mov
aas
jae
arpl
divb
sarb
mov
inc
xchg
xlat
pop
and
mov
sub
jno
icebp
xlat
ja
sub
mov
add
push
imul
adc
pop
push
js
mov
sarl
sahf
lock
cmp
ds
or
push
cmp
outsl
repnz
imul
lock
push
dec
dec
fiadds
loope
push
inc
pop
inc
push
dec
loop
subl
pop
popf
nop
lea
xlat
mov
push
out
pop
imul
sub
jp
cli
rclb
mov
dec
dec
mov
loope
inc
or
insl
inc
xor
xlat
mov
xchg
int3
std
pop
mov
cmp
xchg
inc
and
popl
testl
cltd
notl
sbb
or
out
fnstenv
cmpsb
xchg
cmp
pushf
in
dec
shrb
dec
and
mov
rclb
pop
call
jnp
xor
int3
les
aad
popa
xor
xchg
icebp
inc
cmc
pusha
mov
xchg
lock
dec
fdivs
jns
ficompl
in
adc
jmp
notl
push
add
std
loopne
pop
mov
addr16
xchg
add
and
xchg
ds
fldl
jnp
out
nop
negl
into
jl
add
lcall
jge
ja
push
lret
cli
das
add
in
pop
jecxz
sub
rcr
rolb
jmp
into
xchg
shl
test
add
outsb
or
and
clc
lods
lcall
iret
push
pop
cs
jbe
mov
in
fildll
in
sbb
insl
adc
push
fwait
jl
dec
sbb
adc
add
or
subps
mov
adc
jb
pop
cmp
lods
loopne
sub
mov
mov
je
in
pop
pop
sbb
mov
negb
aam
push
ret
popa
imul
cmc
fdivs
jmp
aaa
dec
rorb
or
push
sbb
jg
das
lcall
fcom
fstp
int
mov
adc
jle
xchg
pop
cmpsb
and
push
xchg
and
mov
add
repnz
mov
das
mov
mov
imulb
push
add
jp
cli
addl
pop
push
test
xlat
fsubs
fcom
sbb
pop
cmp
rorb
call
add
jno
xor
ljmp
rol
xchg
fcom
cmpsl
xchg
and
pop
sub
mov
jae
pop
xor
lret
leave
jge
dec
out
stos
lock
sbb
xor
fs
mov
sub
push
pop
fcoms
sbb
scas
ja
in
ffreep
aad
mov
dec
rcrb
movsb
cwtl
lock
xor
dec
outsb
or
xchg
outsb
loop
lods
fwait
gs
add
daa
pop
clc
mov
clc
pop
dec
pop
pop
daa
or
jp
jnp
and
cmc
mov
mov
mov
jbe
and
lds
or
ds
mov
rcrl
lock
xor
incb
mul
add
mov
mov
xor
imul
decl
cld
out
shrb
imul
mov
mov
outsl
xchg
fdivrl
xchg
pop
sahf
subb
xchg
cld
aaa
movsb
xchg
and
pop
jmp
mov
hlt
mov
data16
pop
jecxz
pop
add
jo
mov
ljmp
adc
xchg
mov
adc
sbb
jg
jo
mov
jg
bound
dec
mov
iret
dec
xchg
out
pop
ds
xchg
jp
call
and
rorb
loopne
in
adc
ss
xorl
icebp
cld
cmp
pop
mov
cli
cmp
mov
push
or
pushf
iret
adc
fmuls
jp
cltd
in
andb
fdivrl
neg
rol
je
push
cmp
inc
adc
mov
jp
orb
jno
daa
pop
or
sbb
cs
jl
test
pop
sub
sbb
ja
dec
fwait
mov
out
mov
nop
adc
clc
pop
loop
nop
cmpsb
shr
js
push
dec
lcall
mov
jmp
pop
idivb
pop
shlb
testb
iret
ficoml
and
jb
ret
sbb
adc
cmpsl
push
xchg
jb
cmpl
mov
movsl
push
cli
fdivl
cmpsl
je
and
dec
cmc
dec
sarl
adc
or
fnstsw
cmc
popa
xchg
cli
scas
lds
movsb
pop
and
xor
cmp
insl
movsl
in
testb
mov
sbb
adc
push
xorb
pushf
mov
jno
push
xchg
mov
xchg
cmp
ja
mov
shll
and
adc
xlat
lcall
in
and
xor
ja
gs
pop
cmc
xor
into
dec
mov
lds
movsb
inc
sbb
add
push
xorl
subl
addb
xchg
shlb
rcll
or
out
test
dec
clc
inc
iret
and
xor
add
xchg
and
xchg
jl
push
push
fisubl
dec
and
insl
xchg
mov
cltd
jl
and
test
imul
in
push
mov
ss
inc
js
cld
mov
sbb
cs
jno
dec
imul
leave
xchg
movsl
xchg
xchg
loopne
push
data16
mov
jle
mov
ja
fucom
sarb
lahf
jns,pt
or
mov
lods
psrlw
shlb
pmaxub
or
pop
hlt
pop
push
ret
mov
inc
shr
inc
push
push
and
jno
movl
mov
fists
addr16
rorb
push
ret
aad
jb
fbstp
fmul
mov
mov
std
arpl
es
idiv
repnz
mov
sub
cmp
repnz
data16
dec
and
add
pop
cwtl
and
xchg
sbb
jno
hlt
imull
adc
lahf
jno
ret
and
fbstp
stc
lock
subb
shl
or
pop
aas
lods
fwait
aam
dec
test
jle
push
adc
cmp
mov
add
sub
sarl
jo
lea
fs
outsl
jne
cmpsb
add
arpl
push
dec
xlat
pusha
add
push
xor
sub
outsl
adc
mov
sub
cli
pop
xchg
jns
aam
out
sbb
shl
ja
ret
js
aaa
inc
cld
push
fs
mul
lret
fimuls
dec
notl
mov
or
add
rcl
mov
imul
sti
repnz
sbb
jnp
aad
add
jecxz
mov
sbb
cmp
adc
mov
in
rcll
push
adc
lods
decl
xor
adc
and
cmpl
cwtl
cld
sub
in
xchg
es
and
sbb
imul
cmc
and
sar
xor
ds
in
fbstp
jle
add
lret
xchg
push
je
test
hlt
xchg
inc
lds
lea
rclb
scas
and
lods
jmp
enter
jbe
mov
push
je
hlt
popf
xchg
inc
cmpb
pusha
mov
or
gs
fidivrl
inc
movsb
repz
test
aas
xchg
add
in
out
cmpsl
test
fiadds
push
add
in
lods
loope
stc
push
jmp
jae
pusha
mov
mov
push
insl
push
jbe
test
inc
inc
xchg
loopne
cs
jnp
xor
cli
mov
dec
xor
sti
sbb
push
vpavgw
subb
adc
shlb
mov
or
out
inc
enter
fmull
sub
and
ljmp
mov
cmp
push
shl
sbb
jmp
icebp
xor
in
xchg
mov
testb
mov
movsl
aad
and
hlt
cmpsb
gs
pop
imul
push
ficomps
std
mov
and
cli
cmp
shll
dec
loopne
cwtl
dec
mov
shlb
pop
imull
inc
movsl
push
or
add
out
or
rcll
imul
cmp
xor
fsubp
movq
in
xchg
jb
dec
inc
int
mov
push
int3
fcompl
imul
mov
inc
and
add
adc
xchg
call
xchg
xor
push
lcall
loope
lcall
ds
pop
fidivl
lods
or
jge
imul
insl
mov
sub
test
add
loope
popa
mov
leave
movsl
adc
lock
sbb
mov
push
pop
ljmp
mov
arpl
push
rorl
sub
push
xchg
pop
gs
xchg
clc
in
mov
icebp
xchg
ret
sti
adc
mov
dec
je
and
push
inc
cmp
outsl
xchg
mov
pop
and
pop
and
adcl
mov
mov
mov
adc
std
inc
pusha
in
ljmp
shll
test
add
mov
repz
ret
rcrb
push
xor
lods
xchg
xor
lods
dec
pusha
nop
test
das
ljmp
daa
jmp
mov
mov
test
mov
sarb
dec
mov
push
inc
cmp
cwtl
subb
in
bound
gs
outsl
jb
sub
lds
pminsw
lock
push
mov
lods
cmp
fistpl
ss
outsl
xchg
jno
lea
loop
adc
cmp
cmp
sbb
fisubrl
adc
sti
dec
into
cmp
mov
jge
adc
mov
subb
pushf
movsb
fs
add
xor
xor
aad
lret
jne
dec
popf
fildll
idiv
sub
pop
sbb
sub
xor
popa
or
dec
lcall
or
rcrl
cmp
fsts
popf
aas
popa
sub
fisubs
or
test
test
call
out
fidivl
scas
sbb
sbb
orl
mov
xchg
stc
cmp
test
mov
add
shrl
sti
cmp
and
dec
les
pop
pop
lahf
jecxz
dec
arpl
mov
ja
sbb
lea
fiaddl
lds
shlb
stos
add
inc
addr16
sbb
jbe
mov
push
ljmp
add
push
sub
fldcw
push
outsb
jns
sub
popa
mov
lods
and
inc
inc
jge
xchg
dec
mov
mov
sbb
dec
and
dec
lds
adc
push
ljmp
ret
iret
lret
es
fdivs
int
imul
pushf
ljmp
sbb
dec
and
sar
inc
and
xor
daa
aas
sbb
data16
push
test
jp
jg
mov
mov
bound
pushf
cmc
idivl
dec
lods
xor
cld
mov
mov
ds
shrb
ret
xor
mov
inc
inc
orb
das
sbb
cmpsl
jnp
dec
daa
mov
in
ds
je
sbb
sbb
and
scas
or
insb
sysenter
push
pop
hlt
shlb
fcmovu
imul
fwait
pop
cmp
and
sub
dec
pop
ja
add
sub
dec
dec
rol
int
aaa
mul
in
jl
and
jecxz
out
sbb
lahf
jg
repz
push
hlt
lods
xchg
adc
lods
dec
pop
mov
popa
jno
mov
xor
inc
or
push
lea
push
bound
movsl
jg
and
rcll
std
hlt
cli
rorb
adc
lret
pushl
xchg
stos
dec
int
outsb
fistps
das
ss
pop
add
movsl
adc
lock
mov
adc
aas
std
test
imul
sahf
xchg
imul
push
roll
pminub
xor
repnz
or
scas
pop
fwait
addr16
inc
test
jns
jo
lods
divb
jb
lret
in
in
loopne
and
pop
or
ljmp
inc
in
jne
popa
push
xchg
or
imul
lcall
adc
xchg
fdecstp
mov
dec
popa
add
mov
mov
pop
jecxz
sbb
dec
stc
mov
js
adcl
lret
shl
lret
inc
push
lods
jecxz
lds
faddl
pop
lods
add
cltd
xor
mov
mov
ss
pop
dec
mov
aad
dec
jp
rorb
sub
pop
lea
dec
popl
pop
insb
push
mov
mov
lcall
mov
dec
loope
clc
or
call
and
mov
mov
fistpl
pop
xor
adc
repz
int3
je
test
sub
sahf
imul
test
lock
cmp
fidivrs
mov
inc
pop
push
and
outsl
fcoml
test
dec
adc
sub
pop
mov
pop
pop
gs
adc
add
int
cmpsb
imul
loope
mov
inc
cmp
ret
pushf
and
scas
xchg
and
inc
pop
jle
push
mov
mov
sbb
scas
add
mov
test
pop
stos
xor
jl
out
bound
dec
das
repnz
cmp
data16
adc
sbb
and
pusha
push
fildll
xchg
pop
insl
adc
sub
aam
dec
sti
xchg
adc
jno
out
sbb
cmp
xor
or
into
sub
fidivs
cmc
daa
cmp
aaa
and
push
cmp
jne
sbb
test
insl
mov
jle
pop
mov
insb
pop
test
daa
adc
enter
pop
mov
pop
mov
pop
dec
test
add
jns
das
les
and
sub
inc
inc
dec
sbb
pop
cmp
or
mov
mov
scas
xor
push
dec
int3
pop
std
xor
xchg
cli
mov
int
dec
cwtl
mov
pop
sub
fsubrs
lods
ret
testl
xchg
shl
mov
sbb
test
repz
daa
jl
test
lods
sbb
mov
xor
sahf
in
add
into
lds
lods
dec
xchg
out
add
inc
test
adc
pop
decl
jns
push
orb
dec
ljmp
xchg
call
mov
fdivrs
or
dec
jne
je
sub
jecxz
add
mov
imul
pop
jbe
stos
std
nop
jl
dec
ficoml
packssdw
jo
add
repz
ss
mov
xchg
push
dec
xor
sahf
mov
pop
push
add
out
and
xor
adc
jbe
cli
adc
sbb
rol
cmpb
cltd
fildl
and
sub
sub
ds
pop
pop
dec
push
or
cli
ret
stos
push
loope
fnstenv
sbb
outsb
pop
in
loop
mov
dec
push
jmp
cli
mov
pop
jg
xchg
dec
jns
inc
aam
in
cmpsl
sbbb
sub
mov
sahf
pop
mov
add
cmc
sub
sbb
imul
cli
mov
adc
mov
xor
sbb
lret
testb
adc
cli
push
mov
out
and
cs
lock
dec
inc
ljmp
aaa
mov
add
cld
int3
icebp
pusha
inc
pop
xchg
outsb
push
cmp
cmc
out
test
adc
cld
cltd
mov
xor
mov
pop
test
ret
dec
adc
jge
jae
or
and
jae
inc
mov
loope
cmp
and
sub
loop
or
popf
mulb
aam
sbb
dec
mov
jge
mov
adc
adc
sub
mov
xchg
orb
mov
jmp
cld
sub
mov
add
pop
out
pop
cmp
dec
xchg
adc
lret
movsb
pop
js
xchg
test
fstpt
shrl
scas
pop
add
repz
lcall
neg
push
loope
push
popf
lea
leave
push
adc
xor
repz
movsl
dec
or
shl
pop
in
mov
movsb
cmp
jns
dec
push
add
dec
xor
xchg
ss
loop
cmp
fistl
and
jae
xchg
in
fmuls
and
jbe
and
dec
mov
aas
cwtl
repnz
std
hlt
adc
cs
fstps
das
cmp
inc
mov
jmp
loope
jnp
gs
jle
dec
xchg
and
js
sbb
add
mov
in
jg
cmp
lret
addl
in
mov
push
das
shlb
adc
inc
popf
mov
ret
mov
xchg
cmp
ss
fmull
mov
ret
push
push
lds
addl
imul
adc
dec
pop
pop
fcompl
les
int
mov
dec
sbb
imul
stc
or
pop
add
dec
ficoms
in
enter
push
pushf
adc
push
pop
out
sub
xor
scas
dec
pop
lret
mov
and
pop
xchg
popl
push
das
jne
in
sbb
jge
dec
scas
cmpsb
pop
shlb
jg
xor
shlb
cmc
jl
mov
mov
jge
sub
cmpsl
sar
jmp
mov
add
sub
out
daa
add
je
movsl
inc
ljmp
xchg
fmull
aad
sarb
or
jmp
sbb
mov
add
adc
test
cltd
xchg
imul
sbb
adc
outsb
aaa
les
jl
sbb
repz
mov
xchg
push
les
shlb
sbb
mov
mov
rclb
gs
inc
std
ret
xchg
arpl
jb
leave
rcr
jns
push
out
stc
stos
jnp
or
xchg
jae
xor
loope
and
sub
lock
adc
imul
cld
mov
rcl
push
fldl
mov
lea
xor
jno
jl
adc
fidivrl
lea
loop
popl
adc
mov
test
mov
jecxz
lret
push
clc
jne
shll
xchg
mov
cltd
fidivrl
mov
inc
in
jp
iret
push
leave
pop
dec
imul
push
fmulp
test
ss
sub
mov
lcall
add
ret
jle
adc
out
in
sbb
data16
adc
inc
ljmp
repnz
add
lock
aas
out
push
out
jmp
dec
mov
cmpsl
iret
adc
cmp
mov
fdivs
bound
leave
or
imul
dec
mov
in
pop
sub
mov
adc
adc
in
inc
sub
and
mov
imulb
lret
nop
cs
adc
jp
imul
into
arpl
mov
mov
iret
in
lock
mov
int
cmp
lea
rorb
popf
inc
fnsave
insl
add
lret
femms
fwait
push
or
rol
int3
pop
jp
mov
cmp
sbb
bound
or
xor
mov
push
pop
shll
data16
sub
jecxz
xchg
jge
jnp
ja
popa
sub
mov
das
jo
xor
cmp
ss
fildll
mov
pop
nop
ljmp
sbb
inc
sbb
add
pop
mov
pop
xor
mov
xor
in
push
mov
xor
mov
loopne
cltd
adc
mov
ficoms
mov
push
or
mov
xorb
lea
data16
std
xchg
movsb
shl
push
andb
add
mov
fld1
div
rclb
in
in
lret
cwtl
and
sub
ja
loop
jae
test
in
adc
mov
jns
adc
fnsave
sbb
addr16
jecxz,pn
xchg
and
popf
pop
mov
adc
cs
mov
aad
stos
lret
sub
test
jmp
or
loopne
loop
mov
xor
fistpl
push
pop
xchg
push
dec
fmull
mov
inc
adc
outsb
or
daa
add
xchg
insl
addr16
dec
call
repnz
rcrl
call
addb
mov
xchg
in
clc
add
mulb
fdivrs
aas
cmpsb
arpl
push
mov
inc
add
adc
pop
ficomps
addr16
out
mov
ljmp
ret
mov
cmp
mov
mov
inc
mov
add
pop
pop
mov
ss
mov
jne
test
icebp
int
repnz
pop
push
xchg
dec
in
sub
in
jae
push
pop
paddusw
mov
fnstenv
sahf
std
lcall
xchg
dec
sbb
call
sbb
push
stc
in
mov
xor
xchg
out
cld
jp
mov
mov
hlt
adcl
xchg
jne
in
enter
sbb
adc
lds
xor
aas
jmp
adc
jae
dec
lds
adcl
xchg
sub
int
cmc
xchg
inc
insb
movsb
aam
fiadds
sbb
adc
cli
pop
rol
or
das
jno
das
rolb
repnz
js
push
pop
jl
arpl
fs
loop
sub
sbbb
lea
out
ficompl
andl
out
aaa
mov
inc
pop
lret
fildl
cmp
subb
ret
and
std
jle
dec
and
fidivrs
daa
iret
std
dec
add
mov
test
sahf
sub
icebp
shlb
clc
inc
in
xor
cmp
jmp
shlb
movsb
or
push
mov
fisubrs
xchg
pop
mov
outsb
inc
aam
add
or
and
push
fcmovnu
cmpl
xchg
inc
inc
xor
xor
xchg
push
rorb
mov
outsl
lret
repnz
xor
orl
push
mov
push
lcall
cmp
push
mov
leave
decl
insb
ret
and
jno
xlat
iret
shll
fisubrl
scas
push
xchg
pop
mov
sub
out
adc
icebp
xchg
iret
xchg
push
test
xor
loope
sub
mov
and
aad
lea
jbe
mov
mov
ljmp
mov
pop
mov
add
push
nop
std
imul
jb
sub
mov
test
sub
ret
fldl
pop
test
ljmp
je
push
out
xor
add
orl
mov
cmpsb
out
pop
jg
mov
aas
ss
jp
stc
addr16
popa
cs
stos
mov
int3
mov
cmpsb
push
leave
xchg
fisubrs
sbb
cmp
cld
xchg
fildll
adc
dec
xchg
nop
push
or
sarb
push
cmp
push
xor
sbb
int
aad
pop
sub
stos
sub
loop
push
inc
inc
nop
jne
hlt
fcoms
adc
sub
in
addr16
cmp
xchg
pop
pusha
mov
ret
pop
adc
call
inc
in
das
mov
cmpsl
and
sbb
and
pusha
shll
mov
dec
daa
xchg
cltd
inc
roll
adc
shl
mov
rcrb
les
dec
aad
and
data16
stos
pop
push
xchg
jle
mov
jno
inc
test
aam
push
mov
or
js
iret
or
mov
cmc
inc
or
mov
lods
jne
stos
mov
arpl
xchg
or
das
fidivrl
popa
mov
sub
popl
sbb
hlt
inc
cwtl
bound
mov
dec
and
pushf
jge
std
aam
ret
in
inc
adc
andb
add
lods
inc
sub
sbb
mov
inc
adc
int3
je
xor
outsb
rol
rcll
mov
lea
xchg
test
push
or
xlat
xchg
loope
in
add
mov
scas
popl
xor
inc
repnz
mov
mov
push
ret
lock
mov
jo
insl
lea
pop
jl
jle
xchg
movsl
inc
lret
adc
pop
shrb
sbb
push
sahf
mov
jns
in
jnp
or
push
insl
push
rcrl
jmp
clc
mov
xlat
dec
cwtl
cs
inc
dec
ret
mov
movsb
and
jb
sarl
xchg
or
push
mov
stos
mov
push
ds
in
mov
rcrl
iret
js
and
push
subl
shlb
in
enter
mov
int
mov
aas
mov
cs
mov
outsl
mov
mov
mov
adc
and
stos
jle
jne
push
dec
and
mov
mov
sbb
adc
test
insl
iret
jge
mov
lcall
adc
out
in
out
add
lods
ret
mov
inc
cmpsl
mov
les
mov
pop
sub
clc
add
out
pop
pop
in
scas
int
int3
inc
mov
jle
test
xor
xorl
rolb
ret
inc
outsb
test
inc
mov
cld
push
mov
rcrb
xchg
dec
sbb
sbb
cld
fisubrs
test
sbb
arpl
push
pop
mov
jp
dec
dec
xchg
popa
sti
mov
push
into
add
adc
sbb
fs
mov
arpl
je
pop
mov
sqrtps
cmp
mov
scas
pop
movsl
mov
mov
cli
add
rol
adc
cmovge
lahf
rcr
jnp
ds
mov
sub
js
ret
pop
or
push
cmp
hlt
int
pop
mov
fsts
adc
js
cmp
fidivl
mov
iret
inc
mov
inc
ja
ret
jno
cmp
adc
gs
xor
scas
leave
out
cmp
sbb
push
add
lcall
or
loopne
xor
xchg
xor
insl
xchg
add
mov
xor
push
and
xchg
sub
xor
jae
repz
stos
or
mov
jo
mov
inc
push
jne
sub
push
sahf
push
shl
xor
shr
mov
aad
mov
jl
and
jbe
nop
popf
push
or
pop
xlat
in
rclb
arpl
outsb
jl
outsl
mov
ss
je
add
test
das
nop
push
test
xchg
cmpsl
sub
jmp
lret
outsl
repnz
xor
movl
fdivrs
mov
fdivs
imul
adc
sahf
pop
and
stos
xchg
jg
in
fwait
pop
repz
mov
mov
cmp
adc
sub
pusha
fcoml
ror
xchg
lret
sarb
jle
ret
or
dec
xorl
jae
loopne
xchg
js
cmp
and
sbb
mov
jle
pop
adc
js
and
int3
xchg
add
xchg
adc
mov
push
adc
sub
adc
lret
in
test
sbb
mov
adc
push
negb
lcall
pop
in
pop
or
shr
rcrl
lea
mov
push
jo
sbb
mov
ss
cmp
and
inc
fisttpll
repz
enter
mov
mov
cld
cmc
pop
mov
pop
mov
sbb
and
pop
mov
aas
fbstp
lahf
jns
add
subb
icebp
ret
sahf
inc
stc
sbb
int
xor
lods
mov
mov
pop
addl
lds
sbb
mov
add
push
cmp
push
into
xchg
adc
hlt
inc
mov
inc
icebp
mov
jmp
jmp
jae
or
outsb
and
sbb
fucomip
mov
cmp
popa
aam
inc
push
add
repnz
push
sbb
rcll
ja
mov
jae
cmp
cmpsb
movsb
xor
int
into
aam
outsb
mov
xchg
mov
cltd
jmp
pushf
filds
ss
push
and
xor
jo
or
shl
or
add
das
popf
inc
lods
add
ret
addr16
xor
cmp
dec
nop
mov
mov
add
ret
js
adc
fisubl
dec
popa
shrb
pop
or
jmp
dec
lahf
std
cmp
mov
ret
fs
inc
push
icebp
popa
adc
lcall
popf
jo
mov
jmp
stos
inc
sbb
test
lds
rcl
lock
push
add
ds
outsb
push
imul
dec
fists
fs
lods
adc
inc
stos
adc
mov
inc
sahf
pop
fisubrl
imul
pop
cmpsl
or
aas
cwtl
mov
aas
and
data16
push
dec
mov
cmp
fcos
subl
sub
sbb
push
arpl
sbb
sub
fucom
lret
mov
pop
enter
ret
shrb
pop
push
loopne
and
stos
sbb
scas
cmpsb
sub
test
lods
cwtl
ss
mov
out
pop
mov
int3
mov
lret
pop
aaa
fisubrs
adc
cld
adc
mov
mov
icebp
nop
jns
xchg
fwait
xor
adc
cltd
cmpsl
inc
jl
xchg
sub
in
pop
xchg
jo
ljmp
psubq
dec
lcall
leave
cmpsl
dec
inc
pop
adc
push
or
aaa
test
or
and
xor
out
sbb
xchg
xchg
cs
pushf
or
dec
jecxz
shlb
popa
mov
inc
icebp
rcr
fwait
and
mov
cmp
or
pop
jbe
cmp
adc
add
in
repz
bound
cmp
insl
mov
fimuls
or
push
jp
int3
jbe
jae
jp
clc
pop
mov
sbb
xchg
fsubr
push
add
loopne
dec
xor
aas
lods
mov
addr16
jge
leave
pushf
adc
ds
pop
sub
fucom
popa
mov
popf
dec
mov
mov
roll
sub
xorb
and
push
aas
or
push
ss
loope
jne
adc
test
push
pop
stc
std
jge
fildll
imul
scas
lock
pop
and
xchg
dec
int3
xchg
mov
pop
inc
sbb
cmp
fwait
scas
dec
cld
lds
mov
cli
mov
es
lahf
dec
decb
cli
in
fsubrs
add
adc
mov
pop
ljmp
mov
sbb
test
or
inc
mov
mov
icebp
sbb
sub
lret
es
stos
or
push
outsb
xor
inc
add
in
or
jle
cwtl
inc
cmc
cmp
pop
imul
xchg
xchg
popf
fs
jge
lahf
xchg
aas
adc
imul
in
xor
sbb
ss
or
inc
das
jg
testb
addr16
add
enter
loope
cmp
and
mov
sub
pop
gs
es
xchg
arpl
mov
cmp
adc
stc
sub
push
xchg
into
nop
movsb
mov
das
dec
lds
je
std
adc
inc
repz
lret
hlt
xchg
subb
sbb
adc
je
xchg
xor
jmp
lea
rclb
mov
adc
push
jns
popf
jle
in
pop
inc
pop
dec
xchg
lret
fmulp
in
ret
jo
test
jns
call
movsb
hlt
mov
adc
add
ret
es
jns
cwtl
jge
cli
test
mov
cmpb
mov
xchg
inc
mov
cmc
inc
fucomp
mov
push
fidivl
test
dec
test
lds
push
test
mov
push
lahf
bound
mov
add
push
mov
aad
fistps
repz
jns
nop
sub
push
stc
cmp
in
mov
or
scas
xchg
imul
fs
cltd
mov
mov
rcr
jmp
push
mov
pushf
push
int
xchg
sub
movsl
ficoms
jge
in
push
mov
test
idiv
mov
cmpsb
aam
es
jno
mov
out
cmp
jp
in
lea
fiadds
pop
mov
mov
pop
push
movsb
lret
in
leave
movsl
fmul
stc
mov
cs
jb,pn
add
imull
rcll
jno
in
in
jg
push
mov
out
sbb
or
cmpsb
mov
pop
sub
fs
cmc
xor
xchg
mov
mov
jno
xor
mov
test
cmp
pop
test
fsubl
push
enter
loope
imul
adc
mov
sbb
je
dec
xor
xlat
pop
adc
jbe
add
inc
cmp
dec
fldcw
sbb
insb
adc
or
xlat
insb
push
inc
jbe
cld
mov
mov
std
lret
data16
push
push
pop
ss
jmp
xchg
incb
jns
xchg
jecxz
lods
nop
mov
retw
lret
sbb
pop
cli
sbb
mov
rolb
push
xchg
push
push
jmp
dec
addl
dec
add
cmp
sbb
cmp
xorb
test
rcll
jo
xchg
jo
jl
das
jae
call
push
fnstcw
add
pop
cmp
sti
xor
loope
sbb
mov
enter
adc
ja
pop
int
daa
add
inc
insl
sbb
arpl
mov
and
jbe
mov
adc
outsl
xor
sub
cs
aam
in
addr16
and
add
les
xchg
dec
xor
adc
cltd
icebp
add
add
mov
ja
pop
aad
cmp
insb
push
nop
pop
sarl
pmullw
or
push
stos
cs
pop
rolb
mov
mov
jmp
jp
mov
movb
sti
fwait
push
inc
call
std
imull
daa
adc
adc
dec
mov
mov
fidivrs
mov
jl
sti
or
sub
cmc
pop
or
test
pop
test
push
push
sbb
push
jae
jns
xchg
pop
addr16
or
and
nopl
cmpb
push
pusha
pop
dec
and
lcall
sub
and
test
cs
dec
cmp
test
adc
mov
push
lcall
shrb
lock
std
mov
repz
idiv
adc
mov
adc
bswap
jge
lcall
sub
mov
add
test
fisttpl
jle
mov
push
lods
imul
jbe
mov
add
or
xor
pop
jae
es
add
fsubrl
mov
js
xchg
mov
lea
fistps
and
sets
testb
fildll
xchg
outsb
mov
mov
and
pop
sub
inc
lock
mov
add
fs
fnstcw
decl
fsubs
inc
test
insl
mov
fdiv
adc
push
jecxz
sbb
aad
cmp
lock
push
mov
lea
adc
outsl
test
subl
cmpl
rolb
xor
push
add
popf
loope
adc
cltd
pop
dec
sbb
loopne
andl
sub
ret
sbb
jl
pop
pop
test
dec
pop
fcoms
xchg
add
inc
pop
es
ja
or
sub
xor
mov
repnz
inc
sbb
xchg
add
pop
and
test
fmull
push
rcll
fstl
in
in
mov
mov
jle
ret
addr16
ret
cs
cmc
jle
push
mov
adc
sti
ficompl
sub
insl
les
lods
mov
cmp
add
in
pop
stos
ja
sub
jne
les
pop
mov
mov
int3
mov
movsb
xchg
or
mov
xor
je
mov
popf
and
jne
pop
leave
pusha
jns
fnsave
jmp
dec
pop
das
sbb
daa
inc
sbbl
call
dec
je
loopne
sub
sbb
mov
jno,pt
icebp
out
xor
pop
shrb
mov
arpl
mov
sar
ds
push
shll
ret
rcrl
movsl
int
call
stos
in
inc
cmc
adc
pop
mov
jge
mov
aam
cli
fwait
jle
scas
aam
fisubrl
lods
rolb
rcr
cltd
lds
mov
jle
fwait
aaa
imul
bndldx
in
mov
lret
rcll
outsb
arpl
lds
int
pop
jmp
pop
add
scas
xchg
adc
in
lahf
aad
insb
xchg
adc
aas
fwait
sub
xor
rcr
adc
fstpt
add
call
pop
mov
out
xchg
sbb
leave
in
and
inc
or
push
stos
xor
mov
jno
mov
je
pop
push
sbb
xchg
dec
out
scas
outsl
pushf
pop
adc
sbb
mov
les
mov
xchg
popa
xor
ds
bound
test
in
nop
or
sub
cmp
ret
jmp
or
pop
mov
add
lret
aaa
push
xchg
arpl
push
hlt
xor
jl
incb
dec
out
jb
ss
and
popa
ret
push
movsl
add
mov
aam
bound
mov
ror
idivb
ss
loop
pop
dec
outsb
and
ss
repnz
xor
lock
leave
xchg
add
push
mov
pop
inc
xchg
js
fwait
cmpsb
int3
inc
mov
daa
push
setne
lahf
jg
mov
stc
jae
enter
int3
rcrb
insl
in
cld
hlt
imul
lahf
inc
cltd
inc
jae
mov
in
hlt
pop
mov
jnp
dec
mov
mov
int3
fsubrl
pop
faddl
outsb
inc
mov
dec
in
movsb
mov
and
xchg
mov
cli
pop
adc
stc
xlat
xchg
popf
scas
and
mov
mov
imul
mov
repz
jecxz
or
lret
ficoms
lock
shr
sub
fidivrs
sahf
sbb
cmpsl
aas
lcall
in
pop
ret
jp
sub
nop
jmp
lea
xchg
test
push
pop
int
fidivrl
pop
or
sbb
iret
jne
sub
leave
arpl
push
in
dec
xor
out
sbbl
xor
sbb
jecxz
das
sahf
scas
jo
cmp
add
sti
pop
fldenv
push
xchg
xchg
mov
cmp
mov
adc
ret
adcl
ss
cmp
dec
mov
int
cmp
add
pop
jle
sarl
mov
mov
movsl
js
aas
sbb
test
pop
and
mov
hlt
mull
xor
cmc
and
insb
test
push
xorl
add
fdiv
and
arpl
jp
inc
mov
push
xchg
xor
sahf
lock
mov
cmpsb
sbb
dec
push
enter
sbb
nop
aaa
adc
int3
add
xor
sti
xchg
mov
mov
mov
std
lods
mov
xchg
aaa
pop
mov
mov
xchg
dec
xchg
mov
hlt
push
dec
jb
or
cltd
ret
aas
mov
out
out
xchg
negb
aaa
jp
in
aas
stc
sbb
cld
mov
mov
pinsrw
cmpb
pop
adc
or
cwtl
out
mov
cmp
movsb
push
sbb
loope
pop
mov
imul
imull
sbb
pusha
cltd
lds
mov
push
mov
cmp
lea
add
notb
sbb
imul
sbb
push
sub
cmp
mov
out
test
cltd
pop
jbe
xor
popl
push
scas
neg
aam
pushf
out
dec
lock
push
push
incb
jge
cmp
mov
or
cmp
lcall
push
dec
mov
add
xlat
test
jns
mov
dec
sbb
xor
jg
mov
in
inc
or
xchg
mov
mov
aas
xchg
mov
push
mov
jl
mov
inc
mov
xchg
test
rolb
jp
pop
push
sbb
sarb
sub
fisubrs
aas
iret
dec
inc
clc
popa
int3
xchg
stos
out
lahf
fcmovu
and
mov
shl
dec
out
sahf
xor
jo
dec
jge
jp
lods
lahf
sbb
mov
cmp
into
pop
imul
cwtl
insb
pop
push
inc
loope
jecxz
movsl
push
mov
sahf
mov
or
ljmp
push
out
pop
cmp
dec
cs
mov
mov
roll
mov
test
xchg
cmp
cmpsb
test
or
xchg
mov
sub
pop
mov
adc
mov
add
mov
sub
cwtl
rcll
out
ss
nop
mov
push
loopne
sub
and
jns
inc
cld
cmp
scas
clc
push
xchg
jg
and
cmp
sbb
and
pop
pop
int3
je
mov
das
aad
ret
sahf
push
cmpsl
imul
pop
add
into
xbegin
in
pop
sub
jp
shrl
jecxz
pushf
idivl
movsl
cmp
int
icebp
aad
in
addr16
or
shl
jg
jno
test
je
sub
pop
sub
sub
pushf
xchg
int
and
mov
xchg
mov
rcr
shrb
insl
inc
mov
mov
stos
cld
xor
mov
int3
data16
xchg
shl
inc
nop
cmpsl
xor
fsubl
cmp
and
cli
clc
fwait
shll
and
lahf
test
fucomip
push
fsubrs
std
xor
repz
push
jne
dec
add
adc
push
xlat
pop
daa
test
cmpl
rcrl
xor
dec
out
xchg
jmp
mov
pushf
mov
dec
xor
repz
cmp
xchg
idivb
pop
cltd
push
cld
mov
cltd
lahf
cwtl
push
sbb
jp
test
mov
or
xor
test
mov
jns
mov
inc
nop
enter
pop
xorb
call
or
mov
enter
push
je
mov
mov
mov
movsl
push
stos
dec
movsb
cmp
call
push
repnz
daa
sub
and
jno
mov
outsl
add
leave
into
mov
aaa
movsl
push
popf
mov
add
mov
dec
add
ds
out
lock
cmovle
test
in
mov
jecxz
test
and
mov
mov
incb
in
dec
pop
fdivr
mov
outsl
cmp
mov
in
push
cwtl
cmp
pop
out
xor
inc
inc
hlt
cs
jl
cwtl
jne
test
mov
mov
enter
xor
sbb
scas
mov
xor
out
imul
mov
pop
mov
pushl
in
clc
push
jl
std
int
stc
xchg
push
fistl
cmp
insb
in
mov
jmp
loop
rcll
fdivl
and
jne
mov
daa
xor
popf
jbe
popf
sbb
adc
iret
xchg
push
push
stos
and
cmp
dec
or
mov
add
jmp
lock
icebp
std
mov
das
push
cmp
leave
xchg
sbb
and
add
imul
cmp
fimuls
addr16
sbb
fbstp
add
outsl
or
dec
sub
inc
dec
sbb
aaa
mov
cmp
jmp
xor
ds
test
fsubrs
rorb
sbb
cmp
sub
in
shrb
orb
in
mov
fwait
outsl
test
mov
mov
push
pushf
or
xchg
ret
cs
xor
int3
orb
or
cmpb
imull
ret
cmc
dec
pop
sub
xchg
cmp
xlat
clc
pop
mov
mov
push
xor
fidivrl
testl
xorb
mov
mov
mov
jb
jno
or
mov
sarl
ljmp
xlat
outsb
sub
add
out
xchg
ljmp
int3
nop
sahf
test
jae
inc
jle
inc
jg
scas
jge
es
xchg
call
push
int3
js
and
cld
out
push
xor
xchg
cmp
sti
sub
sti
scas
xor
mov
push
xor
scas
xor
aas
aas
shl
xchg
or
mov
or
frstor
adc
rcrb
xchg
mov
jne
jecxz
push
imul
sub
pop
in
mov
test
inc
adc
test
push
pop
out
mov
and
rcr
xchg
jno
xchg
push
dec
int3
cltd
movsb
popf
icebp
sub
out
test
and
andb
inc
fldt
lods
or
sti
xchg
mov
push
xchg
push
jge
gs
mov
inc
fs
bound
iret
loope
les
jp
out
cli
clc
xor
xchg
hlt
pop
loopne
mov
out
add
push
testb
fisubrs
xor
aad
iret
mov
rcrb
imul
outsb
push
cmp
adc
and
shlb
xchg
sub
sbb
pop
xor
mov
lods
pop
cmp
mov
roll
push
jle
insl
and
pushf
cli
or
jge
into
pop
mov
pop
stos
fsubrs
ja
test
inc
mov
aad
sub
mov
rcrb
add
mov
jg
add
dec
cmp
push
lret
pop
mov
scas
outsb
inc
mov
pop
or
adcl
cltd
pop
fmuls
aam
adc
cmp
push
les
mov
lret
dec
out
outsl
adc
int
insb
and
sub
push
mov
inc
out
push
dec
jecxz
test
pop
and
dec
js
inc
push
jns
add
jae
test
inc
sub
sub
xor
xor
loope
daa
icebp
mov
lea
and
je
mov
push
add
pushl
mov
out
int3
push
push
pop
scas
inc
mov
sub
add
lea
aam
sti
cwtl
cli
rcrb
imul
mov
xchg
cltd
mov
pop
jp
pop
sub
arpl
inc
lds
mov
inc
loop
jl
sbb
mov
cmp
sbb
out
mov
mov
sbb
mov
les
mov
jo
sub
fsubrs
hlt
mov
pop
cli
and
mov
jge
xor
test
xor
addr16
ret
mov
lods
inc
lret
push
add
lds
jno
out
lret
dec
push
mov
fwait
lock
push
add
add
add
mov
das
inc
aad
into
psllq
mov
xchg
cmp
fistps
pop
cs
dec
aam
jmp
mov
or
rorb
xor
inc
sbb
rclb
cpuid
pop
cli
push
add
and
leave
imul
les
das
inc
negl
jge
inc
nop
into
dec
xchg
lcall
ss
mov
jmp
ljmp
xor
lret
dec
es
push
push
aam
iret
aaa
adc
mov
mov
icebp
insl
jecxz
daa
repz
sub
lahf
xchg
xlat
xlat
shll
dec
inc
sbb
pop
pop
pop
cwtl
int3
ljmp
shrl
loopne
dec
cmp
jecxz
aad
gs
cmpsl
imul
jns
ja
repnz
test
test
inc
jmp
jg
dec
adc
pop
push
mov
lcall
mov
xchg
aaa
aad
push
pop
dec
bound
scas
pushf
hlt
mov
loope
sbb
and
in
add
jl
outsb
jns
jnp
sbb
ret
popa
cmp
and
dec
fsubrl
jo
mov
jmp
pop
in
adc
mov
lret
xchg
repz
lret
scas
mov
mov
inc
popa
jb
cmc
stos
addl
pop
mov
int3
pop
pusha
ret
icebp
dec
in
je
push
mov
rclb
dec
test
popa
push
adc
mov
push
sarl
out
loopne
notl
dec
movsb
jecxz
dec
fbstp
jg
add
push
mov
js
xor
jmp
fcoms
cld
mov
or
je
fstpl
movsl
jbe
std
test
push
mov
or
inc
push
or
test
inc
mov
jge
hlt
sbb
int
lahf
into
pop
je
popf
out
fmuls
leave
fidivrl
ficompl
fimull
mov
push
in
shll
mov
inc
inc
adc
dec
push
subl
rcrb
out
lret
jne
adc
mov
xchg
cltd
std
pop
inc
movb
nop
xchg
fstpt
xchg
mov
sub
dec
xor
adc
mov
int3
xor
lcall
pop
sbb
es
testb
cmp
mov
xchg
cmpsb
stos
inc
and
loopne
fsubr
js
sahf
pop
sbb
test
cmp
lock
call
fmulp
pushf
xor
aas
mov
mov
lret
mov
lea
fdivr
dec
cltd
in
dec
ja
cmc
jns
stos
lds
shrb
fists
loopne
jg
insb
jp
mov
mov
or
test
jne
fldenv
mov
js
xchg
dec
insl
sub
push
js
ret
or
sbb
test
push
aad
sbb
outsb
gs
and
xor
in
push
push
shrl
adc
test
cltd
inc
lods
fcom
sti
mov
in
dec
jecxz
mov
cs
fldt
clc
decl
imul
imul
and
jl
ret
mov
cli
decl
xchg
enter
mov
adc
sbb
js
adc
int
adc
insl
xor
popf
icebp
sub
fnstenv
push
fst
push
and
jge
jp
stos
and
sbb
ret
hlt
test
adc
push
jle
or
ret
adc
dec
cmp
fdivs
bound
movsl
dec
sti
cmc
out
sbb
and
mov
inc
in
xchg
jge
mov
xor
inc
add
push
mov
dec
in
ret
mov
sub
jns
adc
in
sbb
enter
aam
jg
push
inc
outsl
mov
pop
dec
int3
mov
mov
push
ret
pop
insb
xchg
sahf
cmpsl
dec
cmpsl
fistl
ds
xor
mov
ljmp
shr
scas
dec
add
out
pop
sub
mov
dec
pop
mov
sub
es
in
inc
mov
aas
jle
cmpsl
pop
lods
jg
outsl
sarl
inc
adc
xchg
repz
sub
jge
xchg
push
es
jle
addr16
and
mov
into
lock
sub
lret
dec
sub
sbb
fucomp
clc
jl
fldenv
jns
sbb
and
push
sbb
sahf
cmpsl
cmc
jnp
inc
push
lea
es
std
mov
jl
aad
bound
ss
jns
inc
inc
pop
mov
std
push
out
jmp
fisttpl
xchg
bound
clc
sbb
fwait
sub
or
mov
cmp
mov
mov
aaa
mov
pushf
incb
dec
les
test
sub
cmp
sbb
outsb
fbld
aas
shr
xchg
in
pop
sti
orb
inc
pop
cmpsl
jle
mov
loop
adc
adc
pusha
mov
movsb
push
test
push
push
rol
inc
dec
imull
in
xchg
loope
jmp
lds
push
push
mov
mov
sbb
adc
jno
leave
scas
inc
sbb
mov
int3
ret
aaa
mov
jmp
aas
cmp
cmpsb
adc
mov
test
inc
in
fsubrl
sub
mov
fucom
fisttpll
xor
call
sbb
xor
out
pop
dec
psubsw
dec
cmp
fs
sti
push
push
or
jge
cmp
dec
cmpsb
pop
movsl
rolb
fwait
cwtl
filds
mov
mov
gs
movsl
fcom
and
shl
fwait
jmp
cmp
movsb
pop
or
mov
and
movsb
mov
pop
out
push
xor
stos
gs
push
fs
lds
cmp
or
add
decb
into
repz
add
stos
cmp
popf
jle
outsl
mov
push
das
xchg
mov
jp
in
test
dec
sbb
push
sbb
pop
dec
js
sbb
enter
clc
xchg
cs
call
mov
dec
or
mov
xlat
xlat
hlt
iret
das
xchg
sub
cmc
pushl
mov
jp
test
push
jp
sbb
in
sub
cmpsb
jnp
mov
pop
dec
mov
bswap
cli
ss
cmp
xchg
test
and
outsl
stos
jg
sub
jmp
aaa
sub
scas
cmp
sbb
xchg
add
sbb
ror
mov
sahf
mov
testb
cmp
cmc
pop
rcrl
adc
ret
cmp
mov
and
outsl
pop
adc
mov
jo
mov
outsb
stc
add
adc
ret
jle
jg
mov
aad
lock
jo
xchg
mulb
aad
sti
pop
outsb
cmpsb
mov
pop
and
push
jmp
les
divl
into
add
movsb
push
testl
pop
dec
xchg
stc
mov
imul
fwait
loope
push
xor
lcall
push
repz
fs
fldenv
dec
push
sub
fsubs
xchg
cltd
inc
mov
inc
lcall
call
push
jno
add
loope
ds
lret
mov
incl
jge
add
incl
out
jno
dec
dec
and
fwait
repnz
mov
mov
cmpsl
fs
mov
xor
jg
bswap
pop
jbe
cmp
pop
mov
stos
lahf
stos
cmp
mov
push
mov
pop
repnz
sub
xor
aad
and
movsl
inc
dec
xor
iret
adc
pop
inc
ret
fcmovnbe
ficompl
push
cltd
lds
shll
incl
nop
pmulhuw
icebp
in
das
mov
sub
inc
ficoml
fs
dec
jo
jmp
test
and
fldenv
cmp
add
jb
cli
dec
enter
std
daa
add
xor
jnp
ja
fiadds
ja
pushf
xchg
sub
in
fistps
jmp
bound
push
push
mov
sub
shll
out
fwait
push
div
loop
cmpsb
cmp
push
mov
push
fmuls
or
mov
in
sbbb
loope
and
out
sub
lcall
xchg
xlat
sub
int3
scas
lret
jo
in
es
push
sarl
pop
sahf
sbb
sub
loopne
lret
daa
dec
adcl
mov
out
std
dec
pop
mov
adc
jnp
aas
mov
pop
adc
mov
mov
push
in
ljmp
push
outsl
gs
push
sbb
jns
nop
mov
aam
pop
xchg
out
stos
add
or
arpl
test
inc
xor
sbb
stos
mov
and
xchg
mov
ss
notl
faddp
cld
adc
insb
pusha
mov
pop
repz
push
adc
into
xchg
mov
rolb
dec
insl
adc
cmp
sbb
lods
nop
mov
sbb
out
add
pop
int
push
outsb
cmpsl
arpl
mov
cltd
or
jne
call
repnz
cld
pusha
mov
cmp
pushf
scas
and
stos
mov
seto
scas
popf
movsb
or
pop
mov
sbb
xor
outsb
xchg
lods
fbld
sti
cmp
jmp
dec
fwait
and
jne
pop
or
mull
or
add
sahf
fistps
adc
ret
fdiv
imul
nop
out
cli
mov
popf
hlt
test
fsub
mov
jecxz
lret
lods
lds
cli
scas
pusha
push
mov
push
clc
or
pushf
popf
sti
lods
xchg
mov
fucomip
fisttpll
out
rcrb
adc
mov
pop
pop
cmp
adc
xor
push
cmp
pop
inc
inc
xor
pop
xor
fists
sub
aad
xchg
mov
mov
mov
push
jne
int3
dec
sbb
mov
xchg
mov
stos
cmpsb
iret
push
test
xor
and
mov
jg
cmp
idivl
es
cs
cltd
mov
dec
movl
rep
popf
fwait
lahf
aaa
andl
inc
mov
loop
push
dec
insb
scas
sbb
xchg
mov
cmp
dec
int3
je
adc
xchg
adc
jecxz
sbb
dec
setno
sbb
fs
sahf
jb
push
dec
aas
and
gs
filds
fst
mov
shrb
movsb
adc
jmp
enter
in
repnz
cli
dec
push
repz
or
sub
fnstcw
mov
xchg
cmpsb
test
mov
lahf
pop
jecxz
mov
sub
or
fstpt
das
popa
ret
xchg
xlat
pop
imul
in
mov
mov
xchg
lret
ret
xor
sbb
mov
outsl
es
push
push
sub
lahf
dec
xor
gs
ret
xchg
xchg
pop
sti
cli
push
mov
std
dec
mov
pop
sbb
sub
sbb
add
scas
sbb
inc
es
fldcw
mov
arpl
sub
in
add
mov
and
dec
fwait
je
pop
sbb
pop
int3
mov
adc
sbb
push
fbld
lods
stc
fistpl
outsb
shrl
ja
or
sti
pop
adc
push
nop
sub
fcmovu
enter
sub
mov
fsubl
pop
ljmp
pushf
inc
ret
scas
adcb
adc
scas
jge
dec
push
mov
stos
test
notl
scas
in
and
push
inc
dec
sub
dec
and
sub
sar
sbb
daa
dec
data16
sahf
and
imul
test
mov
scas
loope
aas
inc
xchg
xorl
sbb
int3
sub
inc
xor
xlat
imul
adc
aad
mov
pop
sbb
mov
dec
cmp
aas
xor
mov
and
fwait
stos
mov
fstps
sti
mov
mov
adc
inc
fstpt
xchg
in
cli
mov
add
pusha
shrb
popa
xchg
sbb
mov
in
jl
sub
cmpsl
xchg
and
lret
iret
lret
adc
sub
and
pop
jmp
jno
lea
add
sub
xchg
or
inc
sub
dec
and
xor
pop
outsb
jnp
arpl
cmpsb
in
test
insb
sti
xchg
cmp
gs
rol
negl
stos
mov
movsb
out
outsl
mov
popf
sarb
adc
lcall
ret
pop
ljmp
orb
lahf
jno
add
xchg
mov
out
pop
loope
mov
mov
shll
xchg
xchg
xor
xchg
mov
cmpsb
jp
sbb
fcoml
dec
adc
movsb
xchg
movl
jns
xor
notl
popf
adc
out
mov
ret
pop
jmp
or
gs
popf
adc
lods
or
jp
scas
stc
jge
pop
inc
sbb
or
sbbb
sti
rcrl
xlat
and
inc
xor
cwtl
jp
stos
mov
jbe,pn
ret
dec
rorl
imul
pop
and
xorb
pop
int
imul
pusha
rcll
or
out
sub
sbb
mov
mov
movsl
rclb
cmp
and
pop
js
dec
aad
xchg
clc
xchg
cmp
xchg
test
stos
add
ds
loope
lock
lcall
xchg
lret
mov
sbb
les
pop
mov
jae
adc
pop
mov
add
mov
inc
jge
mov
sbb
cli
in
cmp
jl
jle
sub
pop
repnz
cmp
inc
cltd
cld
mov
ss
inc
dec
mov
mov
mov
mov
add
call
loop
mov
outsl
insl
cld
jecxz
mov
jmp
sub
pop
mov
add
sub
pop
pop
dec
ljmp
cmp
xor
in
or
notb
add
dec
cltd
jb
loopne
xbegin
scas
xlat
xlat
xchg
add
nop
add
add
and
fisttps
push
sub
popf
mov
adc
aad
pop
xlat
icebp
inc
lock
gs
adc
xchg
fwait
iret
xchg
jne
movsl
mov
in
stc
and
out
out
sub
mov
xlat
cmp
sub
dec
subl
lock
jge
faddp
aas
jne
loop
sub
jbe
mov
ss
sbb
cmp
daa
cltd
inc
xchg
pop
call
sub
shll
adcb
mov
mov
aam
add
cpuid
mov
sbb
sub
mov
mov
push
in
mov
or
sbb
dec
adc
call
xor
sbb
popa
mov
push
jge
dec
or
sub
pop
lock
sub
