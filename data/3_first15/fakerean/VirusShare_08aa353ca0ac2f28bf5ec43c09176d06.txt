inc
xor
inc
sub
inc
add
add
lea
mov
inc
add
dec
dec
and
lea
dec
jne
mov
mov
inc
sub
pop
dec
dec
pop
xor
lea
pop
imul
inc
sub
dec
sub
or
lea
mov
inc
inc
sub
add
ret
push
add
xor
lea
imul
sub
inc
inc
inc
push
push
push
push
and
lea
mov
push
inc
inc
add
add
add
lea
movzbl
add
inc
mov
dec
push
inc
xor
xor
lea
movzwl
push
inc
add
push
add
inc
pushl
and
call
lea
add
mov
sub
dec
dec
dec
and
lea
pop
ret
or
xor
lea
mov
mov
add
inc
mov
dec
inc
inc
and
lea
imul
inc
sub
add
mov
dec
xor
cmp
jb
lea
mov
movsbl
add
xor
sub
dec
xor
inc
add
pop
lea
test
jbe
add
add
inc
add
and
lea
imul
inc
inc
dec
dec
xor
lea
mov
add
inc
inc
inc
inc
add
lea
mov
dec
dec
and
dec
dec
mov
or
lea
movzbl
imul
dec
add
add
inc
and
dec
and
mov
lea
mov
mov
dec
dec
mov
inc
dec
mov
xor
lea
mov
dec
sub
dec
dec
jne
inc
mov
sub
lea
mov
dec
inc
inc
inc
and
lea
movzbl
mov
add
dec
dec
inc
sub
lea
mov
inc
mov
dec
dec
test
jbe
dec
and
lea
mov
sub
inc
sub
inc
and
lea
mov
inc
dec
add
add
inc
sub
lea
imul
dec
dec
sub
and
add
xor
mov
lea
imul
movzbl
dec
inc
add
inc
inc
and
and
lea
mov
imul
dec
movzbl
add
inc
mov
dec
xor
mov
lea
mov
movzbl
inc
inc
add
add
inc
and
xor
lea
movzbl
mov
jmp
pop
ret
push
inc
sub
lea
mov
dec
dec
inc
dec
sub
or
push
lea
imul
push
dec
inc
push
inc
inc
push
or
call
lea
mov
call
inc
inc
add
add
or
lea
mov
inc
sub
dec
dec
xor
lea
mov
dec
dec
inc
sub
and
lea
mov
dec
sub
cmp
je
inc
int3
add
or
push
lea
call
imul
inc
inc
pop
add
ret
push
inc
and
lea
imul
inc
dec
sub
sub
and
push
lea
mov
push
dec
push
dec
push
sub
call
dec
push
xor
lea
mov
mov
inc
mov
sub
dec
mov
inc
or
test
je
lea
mov
inc
inc
dec
inc
and
lea
movsbl
mov
add
inc
sub
dec
add
lea
movzwl
inc
repnz
sub
dec
add
add
jmp
jmp
xor
lea
mov
inc
add
dec
add
xor
lea
mov
add
add
pop
pop
ret
push
inc
dec
add
lea
mov
inc
add
dec
dec
and
lea
mov
inc
dec
dec
add
or
lea
mov
dec
pop
ret
sub
add
mov
add
inc
mov
add
lea
mov
mov
inc
mov
dec
inc
xor
add
or
mov
lea
mov
inc
inc
dec
dec
inc
sub
lea
cmp
jb
imul
push
dec
inc
push
add
dec
push
and
lea
mov
mov
inc
xor
add
add
xor
sub
xor
xor
lea
mov
push
inc
sub
xor
sub
add
mov
and
lea
mov
movzbl
inc
movzbl
inc
inc
dec
add
add
lea
movsbl
add
add
inc
movzbl
inc
add
sub
lea
mov
add
inc
inc
inc
sub
and
mov
lea
mov
dec
dec
dec
add
cmp
jb
jmp
push
mov
mov
inc
call
dec
sub
inc
sub
lea
mov
inc
inc
dec
inc
add
lea
imul
add
inc
inc
dec
xor
lea
mov
inc
dec
inc
inc
xor
lea
mov
sub
inc
sub
dec
add
lea
mov
dec
add
add
dec
and
lea
mov
inc
call
call
call
add
push
dec
call
add
sub
lea
movsbl
inc
add
add
inc
call
or
lea
movswl
dec
sub
dec
sub
and
lea
pop
mov
add
sub
add
inc
pop
add
add
pop
lea
imul
sub
inc
pop
inc
sub
add
lea
movsbl
inc
inc
inc
pop
dec
and
pop
lea
mov
mov
add
sub
call
inc
inc
xor
lea
ret
imul
add
push
dec
inc
push
sub
sub
push
lea
mov
push
inc
add
push
dec
inc
mov
xor
lea
push
mov
ret
push
sub
push
inc
add
push
dec
call
sub
lea
mov
dec
inc
inc
jmp
inc
mov
ss
jne
push
jp
popa
add
sbb
mov
mov
jecxz
idiv
jmp
stos
cld
adc
inc
mov
ficomps
fiadds
scas
push
ret
imul
outsl
pop
incl
les
imul
xor
mov
fsubl
out
int
lahf
add
mov
or
dec
push
pop
adc
mov
lds
push
test
pop
repz
cmp
ret
cld
ljmp
dec
mov
adc
xchg
dec
mov
xchg
xchg
xor
or
in
and
adc
rcl
jmp
add
mov
push
lods
jle
pushf
daa
and
addr16
nop
mov
pop
or
dec
mov
loope
inc
arpl
das
aam
jne
popl
out
test
xor
mov
mov
enter
cmp
inc
dec
jo
sbb
jno
pop
cmpb
fs
add
bound
pop
into
mov
insl
sbb
inc
imul
sarb
xor
enter
sub
jbe
in
jno
insb
push
sahf
xor
jb
mov
scas
dec
dec
push
mov
xor
cmp
stos
std
and
in
pushf
xor
das
repz
scas
scas
cmp
js
lea
mov
sbb
pop
jbe
sub
out
in
fadds
mov
xor
loopne
dec
or
push
sub
addb
xchg
filds
and
add
test
push
pusha
clc
pop
cmc
cmp
pushf
cs
je
jo
xlat
stos
jne
add
push
mov
inc
xor
ja
icebp
cmpsb
aas
cmpsl
bound
mov
and
addr16
fsubrl
fisubrl
jb
std
test
mov
movsl
jl
test
mov
add
sbb
inc
push
adc
push
ja
adc
mov
dec
outsb
imul
lods
mov
mov
or
rol
mov
dec
xchg
insb
scas
imul
insb
dec
push
fisttpll
loope
out
lods
dec
xchg
les
outsb
pop
or
jo
jb
adc
popf
xor
ret
adc
mov
adc
pop
cli
std
jno
test
or
pop
dec
ret
xor
stc
jb
dec
xchg
and
push
inc
and
sub
mov
in
xorl
and
jnp
pop
stc
xchg
pop
loopne
js
adc
xorl
xchg
xlat
push
int
cmc
xchg
je
dec
in
js
aaa
xchg
adc
in
and
jge
xor
movsl
fcoml
inc
pop
xor
subb
pop
lea
mov
jae
daa
es
clc
inc
rcll
xor
cs
aad
jnp
pop
hlt
inc
rcrb
into
xor
cmpsb
repz
xor
mov
rep
fisubrs
cmp
mov
pop
push
fisttps
test
jb
xchg
jle
scas
sub
adc
cs
andb
sbb
sub
pop
push
fiadds
adc
sar
push
jmp
lods
leave
das
fwait
cwtl
std
lahf
inc
and
xchg
push
lret
pushf
arpl
pop
ds
mov
jge
cmpsl
aas
unpckhps
cwtl
push
cmp
cmp
pop
subl
sub
and
xor
jo
cmp
cmpsl
roll
sbb
test
xor
sbb
push
pop
out
in
shlb
pop
mov
loop
lods
int3
cmpsl
call
add
mov
lcall
xchg
mov
jmp
push
xlat
inc
xor
or
adc
cmp
iret
fdivrs
repz
or
dec
mov
pmaxsw
push
dec
int3
movsl
enter
orb
jns
cmpl
inc
xchg
fucom
fstl
mov
mov
mov
out
jmp
cmp
movsb
inc
rcll
bound
imul
test
shlb
lret
out
sub
es
mov
shlb
add
push
divl
mov
dec
dec
dec
jp
lea
mov
sbb
inc
mov
cmp
movsl
ret
mov
hlt
cld
xchg
jl
mov
cmc
psrlw
mov
cli
jge
popa
sub
jecxz
rcll
pop
xor
in
xor
pop
fcompp
mov
ret
push
xchg
cmp
int3
dec
jge
sub
adc
lcall
in
inc
push
dec
mov
xchg
push
je
loope
popf
pop
fwait
dec
mov
mov
out
sbb
call
mov
inc
xorl
cmpl
in
sbb
pop
movsb
push
jbe
aam
enter
stos
popa
scas
xchg
xor
clc
outsb
rol
out
int3
jmp
aas
pop
dec
add
repnz
sbb
pusha
mov
popa
jmp
test
lcall
and
mov
xlat
push
int
mov
gs
nop
sub
shl
aad
divb
pop
dec
scas
xor
shrb
jo
lret
lahf
test
into
or
add
sbb
js
mov
jb
aas
mov
lahf
dec
pusha
bound
mov
call
jp
movsl
sbb
or
adc
sub
je
repz
mov
or
lahf
std
adcb
mov
cld
hlt
xor
sti
adc
scas
inc
or
fistpll
test
adc
rol
aam
xchg
cmp
xor
or
stos
or
popf
or
pusha
pop
pusha
xchg
ja
xor
mov
xchg
push
xchg
add
icebp
adc
pop
out
lahf
je
js
aad
push
adc
mov
popa
int3
data16
rclb
in
fsin
insl
mov
add
xor
and
xor
xchg
cmpl
out
add
pop
cmp
sbb
jnp
shl
shll
out
push
pop
pop
pusha
mov
or
bound
pop
cwtl
adc
cld
jp
insb
xchg
ljmp
adc
fst
add
dec
scas
ds
cmp
popa
jnp
or
gs
cli
inc
std
pop
jp
fsubs
push
cwtl
call
jns
xchg
push
inc
mov
add
mov
mov
ds
inc
nop
cmpsl
and
push
mov
add
ret
enter
dec
fistpl
outsb
fldl
je
jbe
mov
lods
push
jae
jb
dec
mov
mov
mov
dec
jg
mov
pop
pushf
mov
pop
ret
inc
in
nop
mov
lahf
adc
sbb
out
jbe
leave
mov
cmp
ret
add
ljmp
xchg
push
ss
ficoml
test
imul
lods
xor
push
sbb
mov
jg
aam
and
mov
movsl
or
fs
and
rorl
xchg
sbb
fidivrs
pop
imul
inc
hlt
xor
mov
or
js
ss
cmp
and
mov
xchg
outsb
cmovno
loopne
popa
repnz
outsb
adc
aad
push
insl
xor
push
dec
inc
pushf
int3
mov
inc
rclb
imul
jno
mov
int
loopne
rorl
rcl
arpl
inc
icebp
in
dec
ja
adcb
xor
push
mov
int
add
arpl
push
adc
sbb
sbb
inc
dec
in
hlt
arpl
andb
inc
push
mov
mov
xor
insl
and
cmp
jns
outsb
mov
adc
js
lret
xchg
and
fsubrp
sub
imul
push
pop
mov
test
int
or
xchg
repz
mov
mov
lock
sahf
in
push
and
test
add
jno
test
add
enter
fistl
daa
and
test
ljmp
scas
imul
loope
pushf
ljmp
mov
fistpl
imul
fcompl
je
pop
and
mov
int
in
add
repnz
mov
xchg
cmp
mov
fs
pop
push
insb
jb
sub
mulb
pop
leave
jnp
ljmp
adc
mov
les
mov
int3
out
lods
mov
mov
lds
dec
cmp
jns
mov
push
out
clc
mov
outsl
cs
sahf
cmp
jbe
pop
add
pusha
in
test
imull
cmp
mov
cld
cs
sub
mov
adc
popf
lcall
negb
add
jo
ljmp
push
outsb
jmp
cmp
daa
xor
cmp
sbb
mov
xor
sbb
aam
pop
movsl
ret
add
jae
sbb
dec
cmp
scas
mov
mov
mov
cmp
cmpsb
lcall
lret
and
push
or
jno
push
repnz
pop
fisubl
push
cmp
outsl
push
shrb
and
dec
aad
daa
push
stc
dec
sarl
imul
jecxz
push
sbb
cmc
aam
shll
push
cmpsb
adc
fcmovu
mov
out
popf
in
xchg
dec
pop
ja
sbb
mov
aad
xchg
pop
shl
ds
and
sub
xor
push
cmpsl
rcl
cmp
and
dec
gs
push
out
dec
add
fscale
sub
jle
pop
mov
popf
mov
in
shrb
pop
pop
cmp
scas
in
incb
les
cmp
or
out
lahf
mov
mov
sti
inc
fildll
mov
inc
pop
and
stc
out
out
repz
test
xor
xor
pop
rcll
add
xor
pop
add
xor
mov
decl
inc
mov
push
repz
out
aad
fstps
stos
pop
lret
mov
sbb
cld
sub
and
addr16
lods
pop
rcl
inc
or
sbb
or
fsubl
pop
dec
xor
lahf
ds
movsl
shll
mov
dec
mov
je
or
inc
xor
mov
push
mov
out
pushf
inc
ret
aas
ficomps
les
adc
or
jnp
mov
gs
dec
lea
cmc
imul
mov
pop
das
aas
outsl
sti
loopne
push
mov
bound
sbb
dec
sub
mov
add
pop
mov
mov
stc
pop
push
call
dec
in
ret
lret
add
insl
or
mov
aad
inc
jb
leave
push
pop
xchg
popf
jbe
aad
and
push
sub
cmp
push
mov
xchg
sti
je
movsb
lret
fs
xchg
lcall
and
and
dec
inc
mov
aad
addr16
xchg
pusha
iret
adc
das
or
data16
lock
xchg
dec
stc
cmpsb
dec
scas
imul
adc
lcall
mov
xchg
data16
push
addr16
daa
outsb
ret
push
push
sbb
aad
dec
subl
or
aaa
sbb
pop
pop
data16
out
enter
add
mov
test
lods
test
mov
subb
adc
jne
outsb
adc
xchg
add
mov
sbb
bound
cltd
sti
push
push
jp
pop
pop
xlat
adc
into
dec
mov
push
insl
dec
jle
in
pop
push
pop
and
mov
bswap
cmp
mov
outsb
gs
cmc
stc
push
dec
popa
mov
pop
stc
mov
fstpl
loope
xor
sub
cmp
mov
jns
pushf
or
dec
dec
push
cmc
dec
dec
lods
call
sub
inc
mov
cmp
xor
push
sub
push
cmpsl
mov
add
adc
data16
push
mov
test
xor
sbb
imul
mov
fwait
lock
jb
inc
fists
cltd
int3
adc
jge
lea
fidivl
jno
mov
jl
shlb
ret
sti
testb
out
sbb
nop
dec
ror
fwait
sbb
cmpsl
fwait
cwtl
jns
inc
fcomp
fildl
mov
xor
aas
xor
add
mov
adc
adc
or
sbb
imul
cli
jmp
into
inc
call
mov
push
lcall
mov
int3
add
pop
xor
xorl
pop
or
adc
mov
jle
stc
jne
dec
mov
or
push
fmull
je
mov
fistps
jle
sub
mov
mov
popa
sarl
add
sub
subl
dec
popf
push
push
cmpsb
sub
punpcklbw
leave
jb
cmp
sahf
ja
loop
mov
stos
jb
pop
in
or
mov
inc
pop
xchg
xlat
xchg
mov
lods
push
jge
or
aam
or
fistps
push
scas
mov
mov
fisubrs
add
imul
mov
xor
pop
push
xor
call
cwtl
sub
dec
cli
bound
gs
mov
into
mov
xor
test
adc
fstpt
int
dec
push
stos
xchg
adc
sbb
je
mov
inc
adc
push
push
pop
dec
lods
add
and
dec
imul
popf
imul
push
loope
movb
cmpsb
enter
jecxz
jns
cmp
loop
js
push
pop
add
pop
and
lock
cld
movsl
cmp
push
repz
in
push
popf
xchg
cmp
out
loop
sar
mov
scas
inc
jle
adc
push
pop
add
jle
ficoms
jmp
movsb
mov
call
data16
lods
adc
mov
mov
xor
ljmp
cmp
popa
push
mov
add
rorb
popl
pop
fucomp
push
ret
loop
cmp
imul
xchg
jg
add
leave
sub
dec
or
and
and
imul
outsl
movsb
jo
xchg
mov
insw
cmp
scas
or
inc
dec
into
sub
and
in
insb
out
adc
fcom
int
popa
addr16
jmp
xchg
sub
push
mov
push
fldln2
add
push
out
sbb
push
xor
push
aam
inc
sub
xlat
ret
dec
pop
mov
cmp
dec
xor
js
mov
pushf
sub
outsl
dec
sub
in
lds
js
shr
nop
es
enter
pop
cs
dec
std
or
mov
or
bound
jae
sbb
or
mov
adc
inc
mov
dec
das
xor
clc
int
data16
iret
hlt
pop
stos
movsb
mov
cltd
jp
icebp
push
push
inc
dec
and
ss
pop
push
and
xchg
mov
lods
cmp
mov
mov
nop
lret
nop
scas
jne
imul
dec
into
fildl
add
dec
pop
and
fldenv
jne
cmp
out
test
repnz
cmp
or
out
stc
insb
xor
jne
xchg
dec
stos
ret
out
in
clc
popf
cwtl
xor
pop
xchg
dec
xor
jns
in
shlb
sub
icebp
inc
adc
pop
cltd
test
pop
or
push
mov
push
cmp
xor
adc
and
bound
push
adc
dec
sub
loope
jnp
pop
or
mov
das
xor
dec
pop
jbe
pop
out
and
push
mov
dec
int
mov
mov
ffreep
cwtl
cmc
sub
push
test
inc
lret
iret
pop
fisubl
and
clc
test
outsl
jmp
popf
sub
mov
je
jmp
mov
jns
add
dec
into
fsubrl
dec
lock
dec
imul
sub
mov
push
inc
jne
mov
js
add
int
pop
mov
xor
outsl
lods
movsb
xchg
out
jb
jecxz
shrb
in
mov
mull
movsb
or
lea
movsl
mov
push
sbb
inc
repz
push
ss
inc
ficoml
add
ss
mov
stc
dec
lods
or
and
lcall
mov
push
hlt
gs
rorb
hlt
stos
and
pop
and
ret
jae
imul
sub
jmp
mov
leave
pop
mov
pop
aas
mov
mov
jmp
cwtl
inc
test
jecxz
xchg
and
into
fcoms
xchg
int
jmp
inc
fldt
dec
push
push
mov
pop
jae
pcmpeqb
lcall
cld
push
stc
lret
adc
idiv
or
or
arpl
js
jno
sbb
fimuls
push
or
mov
sti
sahf
sbb
jbe
rcrb
mov
ljmp
xchg
ja
fsubs
xchg
aaa
rorl
in
imul
scas
outsl
sti
sti
add
stos
popa
push
int
lea
imul
pop
imul
aas
int
int3
aas
les
sbb
push
in
xor
in
inc
in
mov
std
xor
aaa
pop
pop
sub
fiaddl
push
hlt
inc
lods
sub
or
cmc
cmp
ja
jg
gs
mov
movsb
sarb
push
pop
adc
lds
ret
sub
mov
dec
cwtl
or
and
mov
cld
in
xchg
sti
mov
mov
xchg
adc
in
mov
push
or
fstpl
fcomps
push
sub
mov
cld
out
ret
lahf
cmpsl
push
imul
inc
cmpsb
cmp
sub
mov
jecxz
pop
outsb
dec
mov
dec
sbb
fidivs
stos
daa
es
lods
adcl
shrl
xor
push
retw
cli
loop
int3
dec
insl
pop
add
xchg
pop
fld
sub
stos
xor
jl
loopne
ja
bound
adc
push
mov
loope
sahf
orl
test
inc
sub
jle
push
jne
in
xlat
hlt
hlt
cmp
out
rcl
inc
jmp
decb
gs
mov
aad
call
jge
add
stc
mov
xchg
push
lahf
xchg
push
cwtl
cmp
in
repnz
insl
sahf
aad
jae
insb
sbb
dec
addr16
mov
in
sarb
or
push
or
inc
xchg
or
inc
adcb
incb
mov
loopne
jmp
xchg
mov
insl
xchg
push
sbb
test
out
xchg
cmp
pushf
push
rcr
mov
ss
insb
test
dec
shl
idivl
ss
dec
sub
mov
add
rorl
shll
ret
int3
jae
xor
into
pop
insl
js
popf
cmp
mov
xchg
or
fidivl
adc
cmc
adc
push
inc
or
or
mov
pop
xchg
xor
imul
subb
push
and
testl
rorb
mov
clc
sbb
adc
xor
jge
scas
or
outsl
addr16
repz
lretw
cmp
mov
enter
push
or
mov
aam
adc
and
imul
inc
pop
es
mov
inc
testw
fwait
add
mov
test
adc
push
dec
add
xor
push
orb
jae
icebp
mov
adc
sar
and
or
mov
ror
in
mov
or
cmp
inc
or
loopne
in
adc
scas
pop
dec
mov
mov
shlb
jp
xchg
out
fwait
jge
subl
push
push
xchg
sub
push
cmpsb
lods
subl
popa
xchg
stos
adc
pop
adc
mov
ljmp
pop
les
mov
mov
jnp
inc
stos
icebp
insl
ljmp
sub
jecxz
cmp
insb
jle
sbb
popa
or
iret
lahf
xor
jnp
fwait
mov
int
xchg
inc
sarb
mov
push
nop
xchg
xor
and
sbb
push
inc
or
shll
cmp
in
call
aas
add
xor
adcl
pop
fisttpll
outsl
pop
icebp
add
loopne
ja
lret
nop
adc
mov
rclb
mov
out
aaa
inc
repnz
sbb
test
sbb
sub
leave
push
inc
cmpsl
add
subl
icebp
mov
fadds
xor
cmp
jb
cmp
movsl
cltd
in
test
cmp
pop
inc
jns
stos
push
inc
movsb
lea
xchg
aaa
dec
andb
je
addr16
rclb
mov
faddl
inc
xor
mov
jp
mov
in
push
or
lret
push
jge
popa
orb
inc
data16
rorb
push
loope
aam
enter
in
outsl
lds
je
and
cld
outsl
adc
mov
sub
xor
xchg
mov
hlt
stos
dec
addr16
cs
inc
dec
add
fucomp
out
rcr
int
lahf
cli
cs
dec
repz
loopne
sub
jp
aaa
or
rorb
iret
ljmp
fiadds
mov
inc
pusha
pop
add
sub
dec
fisubs
and
adc
loop
enter
jne
inc
and
cmp
out
popa
cld
iret
xchg
sti
add
jmp
adc
shl
in
lcall
mov
inc
cmpsl
shll
cli
cmp
xchg
int3
dec
jb
mov
sahf
fwait
mov
jmp
rcrb
inc
gs
push
pop
jb
int3
push
stos
mov
imul
je
or
xchg
and
dec
cmp
lock
mov
out
test
fdiv
sbbb
cmpsb
cmp
and
icebp
pop
sahf
out
jmp
lods
hlt
xchg
roll
jo
call
mov
and
mov
jecxz
cwtl
adc
cs
jge
ret
call
pop
js
cmp
or
scas
sub
cli
push
cli
je
je
imul
cwtl
roll
and
sbb
dec
cmp
lahf
ret
add
test
bound
aad
or
repz
adcl
mov
inc
mov
rol
pop
sbb
xchg
cmp
scas
jo
xchg
xor
popf
pop
ljmp
cmc
int3
out
or
enter
xchg
inc
out
pop
dec
or
mov
roll
popa
xchg
orl
je
mov
fisttpl
push
jp
mov
outsl
fisubs
ret
lret
or
stos
jno
or
std
inc
cli
psraw
repz
loopne
inc
std
push
jb
popf
sbb
inc
jl
stos
mov
lods
shlb
popa
lahf
pop
pop
cltd
les
jnp
daa
xchg
add
sbb
mov
jg
sbb
addb
stos
add
pop
shlb
and
sti
ss
push
xor
xor
sbb
mov
add
lret
dec
test
push
and
icebp
lods
jbe
push
jmp
jl
cmp
inc
push
mov
mov
sbb
cmc
aaa
repnz
and
leave
xor
adc
mov
stc
aas
jmp
sbb
inc
add
xchg
mov
into
daa
push
dec
dec
adc
loop
js
out
jno
mov
les
test
or
outsl
or
adc
insb
add
xor
cmc
adc
hlt
add
inc
lock
xchg
pusha
cltd
pop
mov
insl
push
xor
xor
andl
sar
lret
lds
loop
adc
adc
ds
push
mov
mov
xchg
movsb
sub
jge
mov
and
mov
ljmp
out
mov
push
jno
sbb
mov
stos
dec
add
cmc
jecxz
adc
filds
testb
cmp
rclb
pop
xlat
nop
test
pusha
jb
aas
ret
jg
out
loope
xchg
loop
loop
inc
jne
or
jg
dec
outsl
insb
pop
nop
enter
lret
mov
aam
imul
stc
cmp
jbe
nop
mov
popa
inc
rol
sub
js
aaa
cmpsl
or
jl
add
into
lds
mov
jge
push
das
cmpsl
cmc
lods
cli
jns
nop
aas
ds
jl
xlat
insl
mov
rcrl
push
fsubrs
repz
imul
repnz
xchg
push
addr16
popa
hlt
insb
mov
add
in
int
imul
bound
lret
and
fistps
das
icebp
rcrl
xor
cmp
rclb
mov
dec
pop
in
jmp
cmp
es
and
pop
xor
andb
pop
adc
sbb
arpl
hlt
cmp
mov
mov
stos
hlt
lahf
testl
xchg
mov
adc
vmaxsd
int3
xor
cmp
push
cmpsl
rcll
popa
sbb
shlb
loopne
mov
adc
out
in
fidivs
sbb
cwtl
cmp
xchg
sbb
jae
and
mov
cmp
lods
jg
mov
leave
pusha
mov
fsts
adc
jo
xchg
xlat
lret
sub
pop
ror
jecxz
popf
fwait
add
xchg
lahf
loopne
popa
shrb
cmp
test
cmp
repnz
sbb
sbb
scas
sbb
popf
cmpsl
out
fcom
and
push
stc
inc
dec
in
add
add
xor
aam
sbb
nop
pop
notb
rcr
adc
arpl
faddl
out
fbstp
daa
or
dec
and
arpl
shl
lahf
pop
loop
jp
lahf
pop
pop
pop
fs
arpl
or
xchg
add
fildl
imul
loop
lock
and
xchg
push
mov
and
enter
xchg
sarb
mov
repz
les
notb
imul
or
mov
push
xchg
xor
xchg
ret
lds
scas
cwtl
cmpsb
int3
lea
test
dec
push
nop
and
jge
pop
pop
xchg
pop
sahf
sub
sub
cmp
pusha
or
push
fabs
cmp
cltd
xchg
pop
add
dec
jle
sti
cmp
add
or
adc
cli
jns
cwtl
ljmp
int3
mov
jae
fistps
mov
jo
adc
mov
dec
pop
jo
mov
adc
pop
or
shll
xchg
mov
fwait
sbb
call
fdivr
loop
pop
cmpsb
xchg
in
xchg
jnp
inc
jp
flds
mov
sub
mov
es
dec
inc
sub
cltd
xchg
mov
push
jmp
adc
out
add
loopne
fdivs
or
lods
dec
jl
outsl
std
cmp
xchg
cs
and
xor
xchg
fdivrs
sbb
scas
inc
mov
icebp
cmp
arpl
cmc
adc
inc
fists
lods
pop
sub
ret
xor
mov
ret
stos
cmp
jecxz
xchg
pop
adc
nop
dec
jmp
idivb
insb
rcrb
mov
int3
aad
push
cltd
mov
or
sub
rclb
dec
sbb
or
and
movsl
js
scas
or
fwait
adc
sub
aaa
in
xchg
mov
mov
aas
addr16
push
cli
stos
cmp
leave
test
icebp
mov
js
into
push
dec
repnz
cmp
add
cmc
mov
jnp
inc
mov
arpl
or
mov
pusha
loop
mov
lods
mov
mov
xchg
icebp
je
out
pop
arpl
ljmp
cmp
movups
inc
call
ret
ss
push
or
pop
add
mov
ljmp
mov
stos
mov
mov
push
in
xor
add
mov
sbb
mov
or
inc
cld
into
jl
mov
insb
cli
cli
loope
sbb
sbb
insb
out
pusha
sub
cmp
dec
mov
out
xor
jl
pop
gs
out
push
push
and
mov
fcmovnbe
jmp
mov
imul
js
jg
xor
jle
jb
xchg
sub
int3
fistps
insb
movsb
xchg
mov
inc
xchg
or
ret
push
lds
fcomps
imul
jbe
fcmovnbe
push
xor
insl
push
push
fldl
fcom
push
roll
pop
mov
cmpsb
fldenv
adc
mov
mov
outsb
cltd
lds
test
adc
mov
mov
jp
mov
mov
mov
sbb
cmp
dec
fwait
jmp
adc
or
std
cmpl
mov
cmp
sub
jo
inc
and
adc
jo
sub
pop
popf
adc
rclb
orl
cltd
push
ss
cmp
pop
xor
dec
cli
and
cmp
jmp
cld
push
sbbl
fmuls
dec
cmp
aaa
insl
mov
cmpsb
xchg
loope
aad
xchg
cmp
adc
mov
sbb
inc
stos
scas
push
faddl
nop
sbb
mov
in
std
pop
xchg
and
mov
enter
or
jo
xchg
mov
push
adc
add
xor
sub
cmpsb
jo
cld
loop
sbb
and
push
xchg
fcmovnu
pop
mov
adc
xor
sbb
sbb
xor
pop
rorl
mov
test
xorb
cmp
aas
mov
mov
sar
fnstcw
outsb
mov
inc
dec
dec
lret
insl
bound
mov
pushf
xchg
pop
rcll
pop
pop
jp
popf
lods
leave
sub
push
icebp
jae
out
dec
xchg
cmpsl
mov
push
stc
sbb
jo
icebp
ljmp
fimuls
mov
jg
mov
jecxz
das
adc
push
cmp
daa
mov
js
dec
mov
mov
cmp
or
mov
push
jo
pop
and
dec
inc
mov
mov
rorl
jb
mov
cld
sub
jecxz
inc
mov
js
xlat
out
imul
cltd
push
inc
or
mov
jg
std
pop
xchg
sbbb
mov
frstor
dec
repz
xchg
int3
push
lret
cmc
lds
ret
out
ficompl
sub
inc
imul
int3
roll
push
xchg
ret
pop
shl
xchg
jecxz
mov
cmp
and
inc
nop
dec
push
jp
push
jmp
mov
jno
mov
sbb
lret
sbb
sahf
inc
mov
movsb
inc
subl
jns
das
out
fyl2x
cmp
out
sub
icebp
mov
or
insb
in
leave
sub
insl
shll
int3
sbb
push
pop
push
ds
add
js
pop
jge
push
sbb
clc
arpl
and
outsl
divl
xchg
sarl
ds
inc
and
jno
jo
xchg
sub
ret
mov
pop
dec
aad
push
mov
ljmp
mov
inc
mov
test
mov
pop
adc
inc
xchg
imul
aas
ficoms
or
jp
dec
mov
push
call
adc
scas
xor
dec
pop
sub
jne
andl
or
cmp
jnp
lahf
and
cmp
leave
iret
stos
adc
push
mov
rcr
add
faddp
stc
mov
sub
in
in
mov
cwtl
or
popf
addb
mov
jg
adc
sahf
dec
sub
pop
adc
mov
in
sub
roll
adcb
push
in
fldcw
lods
aas
or
inc
cltd
inc
je
in
test
jle
loop
int3
sbb
lret
xchg
inc
test
aam
mov
adc
mov
cwtl
jno
nop
mov
push
inc
mov
mov
gs
xchg
int3
repz
adc
fdivl
out
adc
sub
cmpb
push
daa
out
cmp
mov
add
jge
dec
xorl
jns
cmc
data16
call
popa
aas
nop
inc
gs
incl
sbb
into
fs
adc
loopne
repz
stos
pop
dec
xchg
lcall
movsb
dec
jl
test
orl
push
iret
or
push
loope
sub
test
mov
pop
test
push
adc
ret
movsl
dec
int3
data16
sahf
inc
pop
scas
inc
cmc
jp
lret
pop
adc
out
xor
mov
fs
out
dec
pop
mov
jmp
add
into
cmp
sub
inc
jo
pop
ret
dec
mov
push
clc
loope
mov
arpl
mov
test
pop
jle
adc
dec
sbb
mov
jmp
xchg
sbb
pop
dec
xor
mov
stos
push
nop
mov
jnp
aas
out
jns
jl
add
shlb
inc
outsb
lahf
aam
adc
mov
in
lods
mov
testb
das
inc
sti
cmp
jmp
pop
andb
mov
mov
mov
sub
inc
adc
mov
icebp
loop
inc
into
jp
leave
int3
sub
inc
mov
jmp
add
add
cld
mov
mov
cltd
dec
loop
xchg
jp
and
stos
rcll
mov
sub
mov
addl
pop
pop
inc
mov
rol
xchg
push
ljmpw
fldt
stos
add
mov
es
xchg
push
add
shrb
fs
jecxz
sbb
out
mov
push
inc
repz
and
xor
rcr
or
sbb
ficoml
mov
popa
cmp
aaa
pop
push
mov
sub
rcrl
inc
int3
into
add
dec
clc
cltd
into
add
xlat
sbb
ds
push
mov
cs
dec
mov
jl
arpl
sti
sub
pop
xchg
adc
pushf
out
arpl
dec
or
inc
and
jg
rclb
push
xchg
jb
fists
pop
mov
push
movsb
aad
mov
cmpb
or
jge
incl
loopne
push
stos
mov
jb
add
and
scas
jg
in
aas
lods
test
jecxz
popf
mov
jmp
test
int3
scas
mov
cmp
or
aas
and
ljmp
or
jns
dec
repnz
shlb
add
sub
ret
clc
in
xchg
sbb
sub
arpl
and
adc
int3
mov
stos
mov
mov
jp
gs
push
mov
subb
lds
xchg
cli
dec
mov
push
ja
xchg
adc
mov
scas
jns
sub
or
fistps
sbbl
xor
js
shlb
sub
jg
movsb
push
pop
stos
cmp
xchg
inc
aam
dec
ret
add
fldlg2
cmpsl
inc
jecxz
add
xor
xchg
int
fistl
ret
cli
shll
xor
iret
imul
cmp
test
ret
dec
scas
jl
dec
cs
fwait
in
push
bound
int
cs
fwait
shr
xchg
xchg
pop
mov
and
lock
adc
pop
pop
test
xchg
hlt
cwtl
cmpb
sbb
cmp
addb
jl
ret
addr16
xchg
adc
stc
out
insb
es
in
lods
xor
outsb
jl
sbb
push
jp
cwtl
adc
mov
sub
out
pop
jmp
pop
insb
je
sub
stc
cmp
ljmp
out
sub
cmp
cs
cmp
sub
mov
aam
aaa
sbb
stc
mov
mov
fmull
clc
fsubrs
xorb
je
push
sbb
lcall
sbb
insl
and
inc
push
sbb
xor
stos
addr16
jp
xchg
popa
sub
adc
lock
decb
and
fs
and
push
dec
jg
stos
inc
cmpsl
cmpsb
cmp
push
cmp
lods
inc
and
int
dec
push
push
pop
and
pop
jecxz
aad
add
out
add
test
xor
test
inc
stc
or
dec
addr16
jb
fwait
out
pop
mov
rol
xor
inc
xor
jge
xchg
cmpsb
mov
iret
leave
xor
pop
jmp
rcll
cmp
and
xchg
das
mov
sbb
jmp
adc
das
sbb
push
xchg
insb
shl
jae
scas
push
dec
sub
xchg
pop
add
jne
divb
or
sub
sub
adc
mov
mov
cld
sub
fnstcw
lret
xorl
sbb
xchg
add
sbb
push
repnz
push
nop
cmp
jne
pop
push
js
fwait
pop
imul
xchg
cmp
sub
int3
jle
inc
mov
cmpsb
xchg
xchg
stos
push
das
push
xor
fnstsw
rcl
sub
push
inc
mulb
xchg
out
mov
xchg
rcll
mov
cmp
cmp
push
in
in
lahf
and
mov
sub
inc
addr16
adc
dec
or
jp
lcall
cmpl
push
push
data16
jecxz
dec
sbb
movsl
cmp
jbe
and
popa
pop
mov
sbb
and
jno
daa
xchg
lods
xchg
and
mov
jecxz
pushl
jg
in
stc
aas
je
add
cmp
pop
inc
ret
xchg
jns
add
in
lcall
fistpl
xchg
pop
dec
icebp
fcmovu
aad
ficoml
daa
and
imul
clc
scas
enter
mov
jecxz
sub
cmc
mov
cmp
repz
cmc
mov
scas
mov
leave
loop
pop
mov
lods
or
ljmp
pop
movsb
es
scas
rcrb
mov
jne
out
test
add
test
pop
xor
adc
xor
rcrl
dec
xlat
xor
jg
arpl
push
push
inc
rcr
in
add
and
pop
pop
xlat
xorl
inc
ljmp
mov
lods
lods
adc
inc
sub
cwtl
scas
xor
mov
push
mov
loop
shrb
lds
mov
int
lods
pop
lods
mov
mov
mov
sarl
mov
daa
sub
cmp
out
inc
cmp
push
push
inc
lds
or
mov
cmp
inc
cmpsl
cli
mov
xor
mov
adc
dec
or
pop
sub
mov
jns
adc
repz
pop
push
push
clc
fadd
xor
inc
or
dec
xor
push
xchg
ljmp
pop
loope
inc
insb
testb
es
sbb
xchg
add
scas
std
mov
jge
fsubrs
pop
mov
test
fisttpl
add
sbb
data16
mov
gs
scas
mov
es
out
mov
incb
enter
jae
push
repnz
hlt
dec
inc
les
es
addr16
cltd
and
fstl
and
ror
repz
push
push
fisubs
ja
xor
mov
sub
lock
mov
or
js
mov
pusha
in
imul
mov
cmp
sar
out
shlb
daa
data16
cmp
xchg
jp
test
xor
daa
push
mov
imul
roll
popf
mov
ja
mov
xor
dec
int
aaa
dec
lods
popf
jno
adc
dec
mov
aaa
cmpsb
inc
cs
in
jp
sub
xor
sti
add
stos
outsb
sub
je
sarl
aaa
sbb
insl
jae
out
call
sub
mov
fcompl
fimuls
jl
shlb
in
jns
imul
dec
jae
and
jecxz
jecxz
or
je
xchg
sub
lahf
dec
pop
mov
sub
mov
pop
in
imulb
hlt
out
mov
nop
mov
hlt
or
fwait
int
mov
mov
repnz
jl
xor
cmp
mov
lods
mov
imull
xchg
movsl
xlat
int3
jp
push
mov
les
jbe
rolb
mov
mov
in
inc
jmp
jno
jne
daa
sahf
sub
jb
push
cmp
mov
or
lahf
pushf
lcall
jle
pop
mov
pop
push
push
lds
aad
cmpsb
int3
in
aad
and
xchg
lock
inc
hlt
loope
lahf
mov
imul
iret
mov
and
outsl
jmp
push
popf
cmp
mov
sub
das
shrb
push
mov
jnp
test
clc
and
jmp
or
pop
jmp
lock
xor
in
xor
jo
fildll
cmp
lods
sbb
popl
mov
pop
shrb
andl
imul
push
mov
push
outsl
fimuls
popa
daa
je
icebp
mov
and
cwtl
sub
adc
push
daa
sub
movsb
adc
inc
or
clc
xor
jns
pushf
add
or
mov
aaa
rcll
cmpsb
imul
fldcw
sahf
adc
add
imul
push
xchg
imul
and
or
mov
out
stos
loop
add
or
and
icebp
cltd
xchg
cli
sub
jecxz
jecxz
adc
aas
or
xlat
mov
add
and
push
test
into
insb
outsb
lods
sbb
lret
push
out
fidivs
dec
mov
dec
ret
jnp
or
dec
pushf
inc
pushf
push
in
jno
sub
scas
cmp
mov
lock
push
xchg
push
jmp
in
into
in
xor
pop
mov
mov
sti
jge
das
cmc
test
cmp
inc
xchg
push
sar
rolb
push
jmp
aad
in
add
shrl
in
or
pop
push
popa
popa
adc
pop
cwtl
push
inc
mov
jge
gs
or
push
cmp
stos
out
iret
call
xor
outsl
sub
iret
xchg
lock
outsb
iret
push
xor
cld
xchg
fsub
mov
std
push
int
movsl
rol
hlt
adc
adc
cmpsl
aaa
shrl
and
test
lea
scas
ret
mov
out
mov
je
int3
addr16
icebp
dec
mov
jnp
or
inc
push
pop
adc
xchg
mov
insl
test
cmp
stos
dec
xchg
xchg
fisubl
shll
loope
push
jmp
fistps
xor
adc
fstpt
mov
fnstcw
mov
jg
rolb
fcmovnbe
or
push
jp
les
sbb
stos
movsb
ret
inc
bnd
fsts
lret
rolb
lea
ja
hlt
loopne
fbld
sub
inc
stos
fisubl
lret
ljmp
lret
ret
sbb
clc
rcl
push
inc
stc
sub
ja
sbb
push
negl
aam
pop
xchg
sahf
xor
outsl
mov
push
push
push
jns
cmc
jno
jbe
jne
jecxz
faddl
cmp
dec
mov
xor
push
jae
ljmp
pop
cmpsb
mov
pop
pop
movl
add
dec
sar
mov
mov
mov
lock
mov
imul
test
xchg
pop
jle
jbe
mov
sbb
add
xchg
daa
popf
mov
notl
mov
or
out
or
shrb
jp
mov
loop
je
mov
adc
xchg
dec
and
xor
or
jg
adc
pushf
sub
jns
cltd
scas
push
psubd
pop
popa
jne
mul
pop
sub
cmp
inc
mov
push
cmp
jne
enter
lds
or
gs
jge
std
or
mov
mov
pop
sub
dec
notb
mov
rorb
aam
fdivl
inc
mov
xadd
lret
mov
lods
sub
hlt
cmpsb
ljmp
icebp
mov
push
outsl
shll
xchg
jmp
sahf
cmpl
lods
jge
xor
ret
ret
idivb
xor
jbe
jl
ret
rorb
loope
mov
and
dec
mov
ss
dec
add
bnd
test
jo
mov
pop
cmc
test
leave
add
out
and
adc
jecxz
xor
aam
xchg
adc
mov
or
adc
mov
inc
jnp
xor
ljmp
je
jo
repz
aas
xchg
stos
clc
fcmovnbe
and
push
dec
std
mov
cmpsl
or
inc
test
xchg
sbb
int
rcl
or
sbbb
adc
and
push
mov
push
jb
fidivrs
add
inc
pop
pop
filds
add
lahf
mov
pop
xor
scas
call
testl
fwait
adc
or
sbb
mov
out
adc
das
ss
stos
out
dec
out
and
add
add
lret
mov
inc
push
movsl
jns
sbb
fucomp
sub
add
sub
pop
aas
call
xchg
jle
shll
fidivs
mov
adc
jp
enter
ret
roll
mov
or
test
std
int3
mov
loope
mov
je
rcl
pop
jo
clc
popf
fcomp
adc
loopne
aaa
and
xchg
in
cli
leave
push
into
lcall
das
testl
sub
inc
add
xchg
in
fwait
je
inc
push
mov
fnstenv
xor
add
jo
inc
pop
and
ss
int
or
jge
shll
leave
cmp
inc
lret
jne
xchg
mov
xor
les
xchg
dec
xchg
and
imul
sub
mov
addr16
push
jne
mov
int
daa
add
add
push
xor
imul
add
daa
lock
cltd
mov
mov
rclb
push
push
xor
sbb
lea
inc
sti
test
jge
pop
or
add
jg
sub
jmp
xor
or
lods
cmp
sub
xor
insb
or
jbe
push
pop
dec
arpl
cmpsb
mov
jae
ret
mov
jle
push
sub
cli
mov
inc
ds
xor
xlat
jns
lcall
es
daa
xchg
add
sub
push
sti
add
es
aad
or
inc
push
sub
mov
mov
shl
mov
push
arpl
inc
mov
fcompl
pop
int
xchg
cmp
test
inc
adc
add
sbb
fisubl
dec
out
sbb
sti
lea
rcll
fadds
lea
les
xor
sbb
es
stos
inc
fwait
nop
jp
xor
push
sub
xchg
or
lds
cld
jl
outsl
leave
out
dec
outsb
sub
push
popf
iret
lods
adc
cmpsl
push
fwait
dec
stc
cltd
add
sub
mov
in
push
stc
es
jno
ret
push
sti
lea
push
mov
pop
ficompl
or
stos
fidivrl
cmc
jbe
add
clc
mov
testl
aaa
call
aas
jl
call
cmp
aad
dec
outsl
adc
push
add
cmp
cmp
call
sbbl
jmp
and
push
test
jo
lods
fstps
movsl
jle
xchg
fimuls
pushf
dec
sub
push
push
bound
push
xchg
sub
repz
lds
jl
jge
out
std
loopne
adc
mov
nop
sbbl
in
jb
jg
fbld
out
stos
dec
mov
sub
mov
inc
rcrl
stos
mov
add
shlb
pop
bound
xchg
sub
or
sbb
jge
xor
fucom
push
ljmp
pop
mov
push
jae
mov
popa
jo
jae
add
movsb
repz
push
cmovno
mov
mov
stc
jl
cmp
xchg
push
repz
dec
enter
icebp
pop
jb
lods
into
sbb
jle
leave
dec
test
xchg
sbb
dec
dec
ja
push
add
jg
lock
rolb
jge
scas
call
lahf
aam
or
add
add
shlb
sbb
rcr
out
fmuls
push
out
shl
xlat
sar
add
push
test
pop
rorl
ficompl
add
jnp
adc
mov
mov
sub
mov
data16
xchg
jno
jne
xor
iret
mov
pop
fidivrl
enter
and
mov
and
in
add
push
mov
push
jge
pop
ss
mov
xchg
jns
movsl
sub
stc
icebp
daa
xchg
sarb
sbb
sub
mov
adc
test
subb
mov
and
inc
pop
inc
lret
cmpsl
dec
push
push
xchg
xchg
jb
xor
lret
push
mov
jl
nop
xor
pop
loopne
sub
push
cmpsl
cltd
pop
or
stc
enter
dec
and
in
add
push
insb
pop
ret
mov
mov
addb
or
add
and
mov
outsl
xchg
mov
add
lcall
dec
push
insb
out
call
test
enter
jo
add
repnz
add
dec
fistps
cmp
fcomps
mov
sub
push
jnp
lods
test
les
or
sub
test
fs
les
aaa
mov
daa
adc
mov
adc
rorl
jmp
xlat
jo
sar
and
subb
pusha
jbe
pop
sbbb
and
sbb
test
add
inc
test
and
fnstcw
lea
mov
push
and
nop
arpl
inc
add
xchg
sbb
clc
dec
sbb
and
ss
cmp
push
xchg
repz
outsb
mov
xchg
mov
mov
cmp
out
mov
idivb
mov
or
mov
dec
cmp
dec
outsl
cmpsl
adc
add
enter
push
stos
jne
sbb
mov
jmp
ret
hlt
pop
ret
or
add
jnp
mov
push
ss
add
aas
sbb
inc
jl
sbb
stos
jns
push
daa
add
dec
sbb
pop
pop
std
lcall
cmp
mov
ss
mov
push
mov
lods
cmp
stos
movlps
fisttps
cli
push
cmp
pusha
inc
int
sub
pop
dec
ljmp
mov
cli
out
jnp
add
or
nop
ltr
pop
mov
pop
jns
sbb
mov
addr16
pop
jge
loop
dec
lea
pop
mov
repz
movsb
aaa
sub
divl
popa
and
jns
shll
in
or
add
cld
lret
hlt
out
mov
push
dec
pushf
push
mov
pop
dec
pop
jno
int
fadd
mov
mov
mov
cli
insl
pop
cltd
inc
enter
movd
in
data16
insl
shrl
and
pop
dec
or
int3
dec
insb
mov
fsts
sbb
xchg
inc
xchg
xchg
cwtl
sub
add
push
imul
push
ret
aaa
popa
outsb
sbb
stos
pop
aaa
mov
aam
push
jge
push
and
push
cli
push
lea
mov
sbb
scas
mov
cmp
sarb
push
push
add
lret
mov
out
add
aaa
sbb
lret
stc
and
int
das
adc
iret
inc
inc
xor
icebp
mov
movsb
enter
cwtl
hlt
and
loope
add
add
adc
mov
movsb
jmp
cmp
es
mov
in
out
loopne,pn
push
iret
fsubs
xor
shll
push
in
stos
aad
mov
dec
inc
xor
daa
xchg
and
add
or
mov
mov
lcall
xchg
add
jmp
and
sub
div
pop
lret
dec
inc
loope
sbb
and
out
arpl
sub
dec
pop
push
nop
aad
adc
pop
out
inc
mov
mov
fld
loopne
lods
pushf
out
push
mov
pop
push
in
and
into
scas
mov
sbb
arpl
fldl
dec
fdiv
adc
in
sbb
pop
arpl
dec
lods
fisubrl
dec
pop
fwait
push
andl
repz
sbb
mov
push
mov
and
aas
xor
dec
or
cld
cmc
inc
adc
daa
imul
clc
sbb
out
mov
pop
js
jmp
ja
or
ret
movsb
fisubrl
xchg
movsb
fwait
jp
arpl
hlt
jo
and
pop
jmp
jae,pn
nop
les
mov
and
in
mov
dec
push
gs
je
enter
xor
imul
and
sub
pop
lret
push
cmp
fisttps
into
adc
xlat
xor
in
xchg
xor
sbb
add
icebp
sbb
jne
pushf
xchg
sub
iret
daa
mov
sbb
movsb
testl
fisttpl
jecxz
insl
add
cmpsl
xchg
mov
push
gs
iret
popa
push
enter
iret
jge
push
imul
or
xchg
push
jmp
fsubp
xchg
ror
in
inc
jne
mov
daa
mov
je
leave
cmpsb
inc
fcmovnu
jmp
mov
in
adc
push
mov
mov
in
xchg
pop
push
xchg
adc
sahf
mov
bound
fmul
sar
jae
or
or
xchg
mov
pushf
cwtl
mov
jp
test
loope
aas
ja
add
shrb
clc
jmp
pusha
push
shr
test
rol
lret
fisubrs
mov
add
pop
cs
mov
stos
xlat
imull
sbb
shrl
push
rolb
fildll
adc
in
xorb
mov
aad
lea
dec
imul
test
repnz
pop
ss
insb
cmpl
cmp
fs
std
dec
add
cmp
movsl
xchg
cmpsl
cwtl
mov
fnstcw
adc
test
add
sbb
jo
xchg
mov
popf
sub
das
sti
fs
stc
in
push
push
pop
adc
sub
js
ss
sub
xchg
jmp
inc
or
enter
out
mul
das
test
jns
xchg
enter
dec
pop
adc
int3
mov
fidivs
adc
rorl
mov
push
push
xchg
outsb
repz
fwait
enter
gs
in
shl
xchg
adc
sbb
pop
xchg
xchg
in
jge
mov
cmp
inc
test
lret
cmp
pop
pop
outsb
jo
pop
andb
shr
lcall
rorb
jae
lcall
xchg
les
xlat
mov
mov
rcrl
sub
xchg
in
xlat
cmc
jnp
test
out
testb
fs
adc
pop
mov
outsl
les
fldcw
jmp
mov
cmpsl
roll
xchg
pop
in
cwtl
ret
and
imul
sti
sub
push
mov
jnp
movsb
lret
sub
push
pushl
sbb
mov
aaa
adc
cmpb
or
ss
daa
sbb
and
lods
lea
popf
inc
xor
inc
jmp
push
mov
jb
call
out
pop
push
in
mov
dec
add
xadd
inc
in
dec
xchg
jno
pusha
int3
scas
jnp
insl
add
pop
mov
out
jae
push
mov
clc
or
jnp
xor
cmpsl
pusha
lret
push
sbbl
inc
int
dec
stos
hlt
xor
xchg
loop
mov
dec
std
jecxz
mov
in
jbe
pop
nop
insl
and
xor
insb
jle
push
mov
add
xor
push
pusha
std
jbe
push
das
push
addr16
std
movsb
dec
mulb
xchg
mov
mov
fs
mov
in
fcmovne
sbb
fs
xchg
cltd
mov
popf
test
jmp
inc
out
sbb
fcompl
loopne
add
sub
sbb
jp
xor
pop
movsl
inc
test
dec
jle
addl
sub
mov
out
mov
xchg
push
fdivs
xor
xor
cli
add
pop
xor
shrb
ja
mov
jae
add
into
cmp
dec
jl
rcrb
outsl
mov
push
sub
xlat
sbb
dec
bound
imul
jo
and
sbb
xor
xchg
sub
xor
pop
push
xor
out
ljmp
xor
sub
push
jg
inc
mov
push
pop
and
xor
add
inc
les
jbe
lock
push
dec
and
out
out
jl
jecxz
les
test
dec
mov
dec
mov
xor
ss
dec
mov
mov
pushf
mov
hlt
sahf
pusha
test
outsb
ja
mov
ret
jmp
dec
add
cltd
jne
push
mov
mov
inc
in
aaa
inc
out
inc
inc
xor
call
insb
lock
out
hlt
adc
dec
cmc
mov
xchg
push
mov
fidivrs
notl
ss
lea
cmp
ja
inc
pop
ss
je
das
fdivl
test
inc
adc
jge
and
mov
test
std
in
jg
dec
push
xchg
paddsb
ror
cltd
movsb
popf
cmc
jns
mov
ss
dec
fcoml
add
sub
xchg
sbb
xchg
lahf
push
inc
std
pop
adc
popf
lret
or
xlat
mov
sub
arpl
push
rorb
daa
pop
mov
inc
repz
pop
adc
cli
mov
mov
js
pop
push
cli
iret
jno
icebp
push
sub
lods
ret
mov
ret
clc
stos
dec
out
mov
nop
jb
aaa
inc
mov
dec
adc
pushf
add
push
pop
fisubs
xor
out
inc
xorb
sub
pop
pop
repnz
out
jecxz
mov
mov
cmp
sahf
pop
icebp
adc
push
push
jne
scas
notb
into
adc
cltd
cmpsb
cmpsl
out
cmpb
push
jne
pop
push
int
in
sahf
push
cmpsl
cwtl
jl
mov
mov
test
cmp
pop
adc
adc
and
inc
clc
std
push
lret
dec
push
cwtl
cltd
scas
xchg
mov
inc
cltd
pop
shl
hlt
dec
out
jb
gs
rclb
push
jecxz
jecxz
sub
cli
jge
adc
rcll
and
dec
dec
dec
xchg
lock
xchg
mov
aam
dec
loopne
iret
out
pop
dec
call
aas
jns
mov
mov
mov
repnz
sahf
in
aad
pop
subb
push
fstpl
adc
imul
es
and
inc
cmp
fdivrs
lods
hlt
cld
cmp
jle
mov
aad
test
icebp
cmp
inc
out
addr16
push
push
cmp
dec
in
xor
fildl
js
mov
es
or
push
movsl
lret
xchg
shrb
test
iret
es
fldt
fs
arpl
mov
mov
movsb
loop
dec
add
nop
or
imul
adc
jmp
cmpsb
cmp
mov
aam
cmpsl
and
insl
nop
loope
in
mov
lods
ret
outsl
scas
dec
dec
pop
cli
jge
or
jb
mov
ljmp
ja
pop
pusha
push
fmul
mov
incb
cmp
mov
outsb
int
and
cltd
mov
lret
into
dec
sbb
mov
mov
out
sbb
dec
mov
ja
mov
mov
mov
push
aad
test
into
sub
enter
into
dec
les
ds
ret
and
xor
rol
fists
xor
scas
int
ljmp
cli
sarb
aam
sbb
insb
imul
sbb
inc
cmpsl
stos
cmp
decb
sar
and
push
cmp
mov
adc
cmp
cmp
inc
out
mov
fcos
stos
push
fs
out
xlat
fucomp
jne
push
paddsb
inc
mov
fs
jne
mov
das
sub
mov
aas
aaa
add
test
in
inc
dec
fisubrs
fucom
cmp
ss
ds
cltd
rcr
lods
mov
mov
aaa
negl
repz
pushf
sub
pop
and
call
xor
push
mov
fsubr
xor
andl
leave
dec
mov
pop
outsl
sub
lods
aam
adc
inc
mov
imul
and
dec
sbb
ret
fildl
roll
xchg
gs
pop
push
cmpsl
add
sbb
cmp
xchg
cmp
fdivrl
sbb
loop
mov
call
aam
imul
xchg
xor
dec
imul
xlat
pop
add
pop
mov
lods
and
mov
dec
inc
sbb
adc
jp
cmp
stos
ret
jbe
mov
fidivs
mov
data16
xor
inc
mov
in
xchg
movsl
loopne
and
pop
fcomi
push
or
jmp
aaa
cmp
in
fwait
cltd
mov
cltd
repz
xor
loop
and
addb
xor
lret
pushf
ljmp
loop
mov
daa
daa
add
adc
jecxz
fisubl
scas
pushf
mov
lret
cmpsb
movsl
mov
pop
nop
and
adc
aas
fiadds
gs
pop
add
roll
add
push
stos
mov
push
jp
lahf
rcrl
push
dec
insl
add
jecxz
push
insl
xlat
aaa
movsb
xchg
fisubs
add
push
xchg
add
jae
clc
pop
jae
outsl
aaa
arpl
ret
jecxz
push
in
test
and
in
xchg
outsb
ja
mov
mov
lahf
sub
imul
jnp
and
mov
aaa
ret
mov
dec
lahf
lods
sbb
iret
adc
cmpsl
leave
sub
mov
mov
fbld
fs
dec
or
test
cltd
aas
insb
imul
pop
jne
je
cmpsl
mov
lret
repz
mov
cmc
addr16
mov
int
and
jecxz
cmp
pop
inc
pop
into
fidivs
mov
sub
pop
sbb
leave
fmuls
lds
fcompl
sbb
xchg
xchg
push
movsb
push
push
xor
mov
lret
pushf
pop
cmp
inc
in
and
andb
out
mov
xchg
cmpsb
xor
shr
mov
mov
push
sbb
sti
std
push
mov
fisubrs
data16
pop
pop
pop
sahf
and
pushf
call
or
imul
xor
sahf
pushf
mov
cmc
sub
es
push
cmp
push
inc
icebp
cmp
lods
outsb
xchg
insb
push
sahf
or
imul
mov
clc
jnp
xchg
cmp
jb
movnti
add
mov
popf
add
cmp
ss
sub
sub
jge
jae
inc
jbe
pop
in
ret
fwait
enter
ret
les
in
pop
xor
ljmp
cmp
add
jp
clc
ljmp
inc
test
mov
sbb
cmc
xchg
sub
mov
mov
pop
pusha
fnsave
adc
xorl
negb
fwait
outsb
jp,pn
leave
dec
hlt
addr16
and
data16
mov
popa
pop
lods
sub
push
cmp
jge
in
jns
jge
jecxz
roll
dec
push
jl
mov
sub
lcall
cli
mov
std
out
les
adc
add
imul
add
mov
shl
clc
dec
jp
jl
pop
sbb
xor
fisttps
dec
push
and
outsl
mov
cmc
jae
sbb
push
js
sbb
ljmp
ss
nop
add
lock
jno
sbb
xchg
div
add
rol
add
sub
mov
jp
setl
mov
mov
sbb
cwtl
call
cmp
popf
ja
fidivrs
mov
lock
leave
test
fldenv
adc
xchg
outsl
mov
xchg
jae
jge
inc
movsl
sub
push
insb
inc
outsb
sub
xor
test
cmpsb
dec
jge
xor
sbb
push
push
inc
es
add
int
xchg
hlt
neg
add
sub
xchg
pop
push
divl
pop
es
call
shr
ficomps
sub
sbb
dec
cmp
int3
cli
or
adc
sub
hlt
xchg
pop
dec
loope
jns
popf
in
pop
outsb
ret
mov
push
sbb
adc
subl
rep
test
jne
daa
movsl
mov
andnps
push
in
sub
test
sbb
xchg
mov
xor
sub
xchg
jbe
sub
push
pop
loopne
mov
jo
leave
rol
inc
icebp
fwait
pop
addr16
cmpsl
femms
fimull
out
mov
xchg
cmp
int3
scas
push
mov
sbb
cwtl
jecxz
scas
push
dec
icebp
sbb
adc
jg
push
test
jmp
sub
pop
push
aad
jo
fsubrl
out
cmp
push
or
lahf
mov
xor
inc
fildl
jmp
ljmp
and
test
lcall
push
push
push
stc
jecxz
ja
pop
jo
icebp
insb
cmp
fisttpll
xchg
lahf
sub
lahf
out
jns
sbb
push
in
add
adc
push
jg
bound
cmp
xchg
and
ljmp
jo
mov
sub
mov
adc
sub
sti
xor
mov
push
enter
sbb
lret
inc
pop
pusha
push
mov
das
adc
repz
repnz
leave
jl
jg
imul
mov
jo
dec
lods
test
push
cs
lcall
mov
sbb
adc
pop
mov
movl
pop
int
add
and
out
lahf
test
xchg
js
adcl
sahf
mov
jbe
add
in
sub
sbb
or
icebp
fdivl
xchg
push
scas
hlt
imul
cmp
stos
pop
sub
mov
push
mov
and
jae
adc
push
in
lahf
les
scas
pop
cmp
jns
inc
pop
xchg
push
pop
xchg
mov
push
pusha
mov
mov
shlb
sub
pop
leave
mov
rcr
push
pop
daa
ljmp
in
aad
js
in
movsl
mulb
movsb
mov
jbe
aam
test
mov
push
jb
enter
push
adc
inc
add
das
enter
shlb
inc
mov
lahf
xorl
out
paddb
nop
lcall
leave
mov
jp
arpl
aad
imul
cwtl
popf
into
mov
sbb
ss
stc
ds
cwtl
sub
mov
cmp
add
js
mov
jg
lret
push
or
call
insl
jo
and
xor
scas
sub
into
jbe
int3
mov
loopne
loope
imul
pusha
js
add
pop
mov
and
insb
xchg
jbe
std
pop
pop
clc
or
push
cmpxchg
push
repnz
ficoml
arpl
loop
into
xchg
subb
mov
or
dec
adc
add
xlat
jg
fidivrl
mov
movsl
in
push
icebp
and
in
push
pop
leave
mov
fcoms
mov
orb
lods
out
cmp
dec
sbb
test
sub
dec
cmp
daa
jno
int3
mov
push
mov
pop
fsubrp
mov
xchg
inc
fsts
ret
loop
jecxz
mov
adc
lock
test
fimuls
lds
xor
shlb
xor
adc
dec
mov
sahf
pop
scas
push
call
mov
enter
setl
rdtsc
addb
mov
inc
mov
or
sbb
mov
inc
xchg
adc
adc
lret
xchg
add
jecxz
push
scas
nop
dec
enter
cmp
stos
cltd
cmc
jno
mov
scas
rcrb
testl
fwait
or
xor
push
std
outsl
or
or
flds
dec
pop
roll
mov
jae
les
ja
pusha
repz
test
jmp
pusha
insb
mov
cld
cmp
out
mov
cmp
les
ret
or
push
mov
jecxz
call
and
sub
insb
push
ljmp
mov
dec
cmpl
push
insl
add
pop
xchg
push
movsb
jns
push
push
fmul
lock
data16
mov
add
jbe
or
popf
fdivr
mov
stos
push
scas
imul
mov
or
sbb
push
in
jge
or
ss
movsl
daa
leave
aas
fmuls
into
mov
je
lds
inc
xlat
pop
cmp
adc
mov
xor
jmp
sti
popa
xchg
mov
daa
push
xor
ljmp
lret
das
in
repnz
add
bound
or
push
sbb
and
out
add
cmp
dec
and
fwait
dec
push
pop
ror
xor
sbb
inc
jle
sub
and
sub
and
into
and
bound
fisubrs
push
push
push
xchg
add
xor
and
sub
rcr
out
testl
scas
adc
and
popf
fsubrl
loope
mov
popa
ret
mov
mov
out
adc
mov
mov
lods
je
nop
mov
inc
insl
pop
xor
sbbl
gs
push
leave
push
mov
sub
push
cmpsb
dec
sbb
out
mov
fsubrs
fstl
add
clc
and
or
xchg
add
in
mov
cmpsb
lcall
and
or
mov
cld
xchg
mov
pop
or
fdivp
or
xor
mov
mov
in
jmp
mov
pushf
out
enter
sbb
xchg
cltd
push
and
mov
lods
or
inc
xchg
out
sub
ljmp
sahf
sti
adc
bound
repnz
aad
lock
mov
in
ljmp
mov
adc
out
mov
repz
fisubrl
scas
pusha
out
push
stos
push
shrb
movsl
xor
sbb
jmp
aad
fidivrl
or
lock
xchg
adc
sub
inc
cmp
push
mov
inc
push
stc
add
loopne
cmp
stos
cs
test
mov
xchg
lret
or
cmp
icebp
shlb
lods
push
adc
mov
and
dec
add
jge
loopne
xchg
dec
mov
add
cmp
shll
fildl
pop
jbe
cmc
add
fcmovbe
jb
add
add
jecxz
push
mov
mov
pop
sahf
push
pop
aad
xchg
sbb
xor
xor
dec
dec
imulb
movsl
cmp
and
pop
push
lock
sar
fsubrl
pop
fnsave
and
loope
fldl
ficoml
push
jae
mov
push
int3
sbb
das
xchg
cmp
sar
imulb
pop
mov
scas
insl
mul
test
mov
pop
out
cltd
xchg
jp
sub
mov
andb
pop
lods
loop
mov
or
mov
arpl
mov
imul
mov
sub
loopne
mov
push
loopne
cmp
or
cs
test
push
pushf
or
and
lock
xchg
push
nop
leave
lods
mov
xor
and
dec
sub
movsb
dec
jae
and
in
bound
jl
add
pmullw
jne
mov
dec
pop
and
out
adc
mov
jge
push
lods
jge
pop
mov
adc
addr16
mov
xor
add
and
arpl
pop
cmp
test
in
mov
mov
lahf
inc
cmpsl
or
push
mov
repnz
dec
out
fsubl
push
dec
insb
xchg
leave
jmp
and
push
or
inc
inc
mov
int3
and
test
subb
pop
pop
daa
jne
and
xchg
in
pcmpgtw
cmc
sub
sub
mov
dec
add
ss
push
sbb
jp
loop
jbe
add
roll
ljmp
inc
mov
lcall
and
mov
pop
lret
das
daa
cmpsl
into
dec
xor
pop
popa
sub
pushf
mov
sub
nop
ds
mov
jle
aam
clc
adc
imulb
or
xchg
cmpsl
sbb
stc
jo
inc
push
jl
inc
outsb
mov
in
test
in
in
sbb
push
imul
xorl
repz
sbb
std
jae
ja
inc
fists
imul
subb
add
fst
rolb
mov
ds
sbb
ret
icebp
mov
fidivrl
inc
fdivrs
mov
jmp
dec
adc
inc
test
into
js
ljmp
test
lcall
imul
lock
mov
mov
lret
fimull
cmc
xchg
xchg
es
in
cmp
ret
xor
subl
fidivl
dec
push
lcall
into
push
aad
sub
xchg
loope
xor
jg
imul
sub
jnp
int
push
aaa
add
push
dec
xor
push
or
arpl
outsb
movsb
in
test
pop
cltd
mov
es
inc
pop
int
mov
xor
jno
pop
mov
sbb
cmpsl
lea
xchg
call
or
insl
scas
inc
push
bound
xor
pop
inc
inc
lret
mov
sbb
fisttps
adc
fistpll
divl
cmp
ja
xchg
outsb
jmp
test
jb
sti
in
mov
test
adc
add
int
dec
enter
aas
rorb
aas
cmpsl
scas
xor
cmp
rcrl
enter
jmp
and
adc
push
push
dec
out
jle,pn
mov
and
loop
or
mov
sub
sbb
push
and
sub
jecxz
pop
shr
inc
pop
hlt
stc
sbb
xchg
inc
xchg
sbb
mov
and
test
add
pop
xchg
pop
xchg
lret
test
push
xor
mov
ljmp
daa
inc
and
je
fdivrs
fstpl
or
daa
mov
in
push
xchg
sub
jle
test
cmp
mov
das
cmp
lcall
mov
in
mov
fidivl
enter
xchg
es
mov
repz
movsl
js
shl
jnp
lds
out
idivb
inc
ret
add
in
sub
jo
mov
inc
pop
imul
loop
pop
mov
into
pop
pop
adc
idiv
stos
fstpt
aad
clc
iret
cmpsl
and
scas
pop
xor
mov
or
cmp
push
adc
and
dec
sbb
lahf
daa
sbb
cmpsb
cld
jecxz
pop
jg
rcl
jbe
mov
pop
dec
std
lods
ffree
lcall
and
mov
out
mov
push
jle
add
or
loop
or
adc
mov
inc
in
xacquire
push
add
adc
mov
dec
pop
ja
xor
sub
sbb
push
lret
test
les
lret
lcall
mov
xchg
jo
push
das
popa
dec
mov
test
rclb
xor
daa
xchg
push
daa
xor
test
mov
jno
adc
sbb
gs
out
mov
inc
test
pusha
mov
jecxz
xchg
arpl
and
xor
push
push
in
jp
int3
imull
lret
hlt
into
je
test
dec
xor
and
jg
jns
cmpsl
es
jmp
jp
in
imul
push
xchg
sarb
or
test
cli
push
cmpsl
rcpps
mov
nop
loop
add
int3
je
ja
mov
adc
fsts
xor
js
mov
in
sarb
stos
out
pop
hlt
decl
adc
sahf
cmp
pop
pop
xlat
dec
mov
sbb
sbb
test
pop
mov
lcall
subl
fildl
jl
adc
push
xchg
xchg
fisttps
jl
or
cmp
lds
cli
pop
arpl
lret
rcrb
add
loopne
lea
in
xchg
dec
inc
xchg
inc
cld
out
aam
inc
in
nop
mov
or
or
out
int
xor
jle
inc
and
xchg
and
push
hlt
cltd
cld
xchg
inc
stc
filds
push
orb
xchg
outsl
outsb
insb
jp
push
or
dec
mov
xor
lock
loope
in
aas
div
cmc
mov
gs
cld
sbb
lea
mov
sub
mov
rcrb
sub
iret
loopne
fidivs
xchg
icebp
push
mov
mov
rorb
push
jo
inc
xor
cmp
sahf
push
sahf
daa
pushf
std
sbb
dec
pop
inc
cmpsl
cwtl
scas
xchg
stos
in
mov
jns
xchg
inc
mov
pop
pop
lods
and
outsb
aam
pushf
sbb
inc
fstpt
fdivr
sub
scas
xchg
bound
gs
jne
icebp
ja
lock
cmp
jecxz
scas
add
cmp
sbb
aad
mov
nop
insl
ljmp
lahf
jns
pushl
ficoml
xor
xchg
adc
enter
shll
loop
fdivrl
call
xor
mov
inc
jge
setle
test
cmovb
cmp
xor
xor
adc
pop
roll
gs
and
mov
int
and
sbb
out
aaa
sahf
lcall
int3
lods
leave
pop
data16
dec
xlat
xor
add
mov
adc
and
push
mov
enter
add
stos
test
sti
push
cmpl
inc
es
or
adc
push
and
test
repz
test
fnstcw
or
push
repz
cmc
cmp
or
mov
in
dec
pmulhw
push
jo
fs
inc
call
aam
out
push
adc
sub
sbb
sub
movsb
out
sbb
jns
aad
bound
mov
jo
arpl
call
add
jne
daa
inc
call
aad
mov
inc
adc
adc
mov
das
push
jge
ss
call
mov
jo
pop
icebp
lcall
cld
xchg
test
lea
ja
in
sub
fimuls
mov
xchg
mov
leave
and
sub
or
clc
adc
sub
sbb
cmc
push
shrb
push
inc
mov
cmc
push
repz
jae
ja
out
scas
sub
fisubrs
adc
add
push
or
push
jbe
mov
mov
aad
mov
out
repz
add
shll
stos
rorb
adc
arpl
cmp
lods
lss
cwtl
adc
movsl
mov
sub
inc
ret
pop
fs
xor
pop
test
push
lret
shrl
sbb
xchg
adc
push
lea
adc
fs
jnp
lret
pop
sbb
loop
add
popf
add
jae
addr16
push
mov
inc
mov
pop
push
mov
test
mov
mov
adc
mov
pop
jmp
xchg
sbb
sub
push
js
rcl
scas
jne
repz
cld
sbb
and
pusha
insb
test
xlat
lcall
or
loopne
popf
cmpsl
xchg
push
mov
cld
dec
pop
fstpt
test
loopne
les
pop
xor
pop
jle
mov
push
test
xor
xor
mov
pop
jne
ds
jae
xor
call
xchg
jbe
mov
movsl
in
mov
pop
sbb
stos
es
push
mov
not
addr16
inc
lods
and
cli
insl
ret
sub
push
sarb
enter
dec
in
daa
out
or
push
sti
lahf
mov
xor
cmp
addr16
mov
and
fidivrs
ss
sti
xchg
dec
jnp
nop
jle
inc
jle
push
xor
mov
faddp
mov
push
cltd
shll
jno
test
push
les
push
xchg
test
sbb
adc
subl
into
loopne
sti
pop
or
dec
push
call
push
outsb
jns
nop
mov
jl
lret
sahf
ficompl
jp
stos
fcomps
push
es
inc
cmpsb
push
xchg
lock
xchg
repnz
jae
mov
test
xchg
in
subl
ds
add
pop
push
inc
aam
pop
push
add
test
push
sbb
xchg
inc
into
sub
icebp
cmc
mov
movsl
pop
push
sbb
dec
stos
movsl
sub
push
mov
mov
les
pop
imul
jnp
and
daa
add
scas
mov
insb
fidivs
nop
or
ret
out
sahf
sarb
outsl
shll
pushl
orl
mov
lahf
mov
adc
cmp
test
xor
push
call
out
in
test
mov
stc
pop
es
pop
and
lds
cli
mov
xchg
xchg
shlb
adc
shr
imul
jae
loope
out
je
call
mov
cli
push
push
lret
mov
lock
mov
sub
adc
std
sti
push
mov
cmp
mov
xlat
outsl
sub
dec
shlb
mov
rcrb
int
pop
jns
mov
int
test
dec
dec
in
out
dec
add
mov
cmp
cmpsb
xor
xor
and
xor
and
addb
fdivrp
fdivrl
or
sbb
mov
sbbl
xchg
xchg
lods
mov
cmp
jno
dec
repz
jmp
xchg
lcall
sub
movsb
loopne
test
gs
call
and
rclb
loope
shl
call
imul
aas
push
mov
mov
movsb
mov
addb
adc
fwait
add
fdivr
sub
xor
ja
int
ret
push
bound
leave
xor
pop
push
call
imul
out
push
mov
mov
inc
pop
jo
dec
push
pop
nop
daa
lahf
cwtl
mov
push
rclb
lods
cmp
popa
scas
mov
inc
sti
aad
or
aam
xchg
outsb
ja
aas
or
int3
sub
int
xchg
mov
and
mov
fisttpll
test
shr
jg
adc
imul
test
into
jmp
loope
enter
jl
dec
push
mov
push
mov
cmp
xlat
pop
xor
stos
outsb
add
pop
ljmp
dec
or
icebp
jle
jp
out
shl
ret
or
aas
repnz
data16
fsubl
in
sbb
lahf
pop
xor
jecxz
mov
in
jg
pop
dec
mov
outsb
mov
xchg
jo
pop
pop
imulb
and
pop
push
mov
mov
aas
dec
frstor
sbb
jge
push
jecxz
rcrl
xor
mov
xchg
or
jno
mov
cmc
dec
sbb
cltd
lods
xchg
or
rcrb
hlt
andb
imul
loop
inc
mov
jp
adc
cmpsb
mov
test
arpl
push
push
pop
rolb
das
jno
andl
shrb
sbb
outsl
js
stos
cmp
rcrl
dec
test
sti
ss
or
adc
mov
loop
xchg
cmp
and
dec
mov
hlt
inc
push
pop
pop
scas
ficomps
pop
lea
fcoms
cmp
shl
and
sbb
les
fistpl
loop
loopne
sarb
loopne
adc
lds
ja
stos
inc
movl
push
xlat
into
mov
mov
jns
inc
jbe
lods
lds
pop
je
jnp
mov
fcompl
stos
sub
add
sbb
xor
adc
clc
in
out
mov
sub
add
lds
out
pusha
add
sub
mov
mov
push
mov
sti
lcall
sbb
xchg
jmp
jge
fldenv
sbb
adc
shlb
xchg
roll
sbb
lock
in
ds
fwait
mov
stc
mov
dec
xor
cmp
cmp
daa
gs
mov
lahf
ret
mov
or
lcall
cmpsl
stos
mov
daa
and
and
or
fisttps
shr
in
dec
aaa
cmp
xchg
xor
inc
arpl
pop
iret
icebp
arpl
push
pop
inc
jno
add
and
mov
push
mov
mov
cmp
adc
push
pop
dec
cld
aad
dec
xor
cwtl
loope
aas
xor
iret
jo
cli
adc
test
push
movsl
mov
mov
insl
dec
push
mov
xor
inc
in
ret
outsb
adc
pop
cmp
dec
mov
cmp
enter
add
mov
pop
cltd
dec
adc
das
mov
cmp
fsts
gs
lahf
jne
addb
mov
popa
xchg
inc
in
data16
lds
or
jl
xor
add
mov
je
jl
out
xchg
push
dec
in
icebp
jg
mov
jns
bound
push
mov
in
dec
cmc
test
inc
push
pop
mov
fldcw
ret
clc
ret
xchg
dec
mov
cmp
adc
pop
mov
push
push
xchg
sbb
mov
dec
mov
test
test
aaa
out
dec
dec
fstpt
or
nop
push
rolb
sub
sbb
mov
or
inc
xor
push
xor
cwtl
decl
push
inc
inc
inc
ja
jae
mov
and
jge
cmp
rorb
inc
pop
movsb
sbb
push
xor
test
dec
dec
and
int3
mov
xor
in
mov
pushf
repnz
in
jbe
les
lret
rcr
and
pusha
jl
jecxz
movsb
bound
leave
mov
sbb
push
popf
rcr
xor
mov
sub
rorl
mov
sti
and
call
test
inc
xor
jecxz
add
cmp
push
test
scas
les
and
push
add
insl
fimull
fstpl
sub
aaa
ss
add
jns
jl
lds
repnz
aas
