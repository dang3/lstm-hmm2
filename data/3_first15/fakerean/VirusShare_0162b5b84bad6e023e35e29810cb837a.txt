add
push
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
and
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
jns
inc
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
xor
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
jno
inc
add
sbb
incl
sarb
mov
mov
insb
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
sub
inc
add
add
mov
and
cmp
jne
mov
mov
sub
add
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
inc
filds
decl
decl
adc
into
call
mov
cmc
cld
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
lahf
repz
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
push
testl
inc
or
xlat
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
dec
flds
add
add
and
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
loopne
inc
add
and
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
jne
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
mov
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
es
inc
add
lea
push
mov
mov
out
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
rcr
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
incl
popf
xor
push
and
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
inc
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
sti
inc
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
out
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
ret
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
pusha
push
call
mov
mov
movl
cmpsl
test
pop
std
add
test
push
add
mov
sbb
call
add
mov
push
push
call
add
add
add
jo
add
out
cmpsl
add
pop
add
test
pop
jae
add
mov
add
xlat
add
stc
add
add
jecxz
roll
add
in
mov
pop
add
sub
pop
popl
push
lea
push
push
push
call
pop
add
push
add
aam
add
lret
mov
pop
mov
push
xchg
add
loop
add
cmpsb
add
push
xchg
fiaddl
fistl
add
lret
add
roll
lods
pop
add
je
out
fwait
in
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
lds
add
add
cltd
add
mov
mov
jns
mov
fwait
aam
add
push
stos
jle
add
mov
mov
sahf
jne
add
pop
add
ret
push
add
les
push
lea
push
lea
push
call
push
scas
test
pop
jecxz
add
add
in
mov
jl
add
mov
test
pop
ljmp
jb
les
add
add
push
jae
add
fiadds
sti
jno
sub
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
xchg
jge
push
addl
jp
sarl
lret
add
push
add
xlat
fstps
jl
add
jae
lock
add
cld
popf
sti
add
add
add
add
add
lcall
sub
pop
call
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
jns
add
les
jo
add
into
test
add
lcall
pushf
add
mov
add
mov
add
les
jl
sar
mov
jb
add
add
add
fcomps
das
add
add
jecxz
mov
push
push
push
call
mov
push
rolb
cld
add
enter
push
jmp
mov
jno
add
push
in
add
mov
jne
iret
leave
loope
lock
in
in
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
jno
add
add
push
stc
add
cli
sahf
add
out
jmp
add
leave
jmp
jne
cld
mov
add
cwtl
mov
neg
in
add
clc
filds
rcl
add
int3
mov
lds
add
cltd
test
add
mov
add
add
add
add
xchg
add
lcall
sbbb
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
int
add
add
outsl
pop
roll
cli
imul
mov
fcoml
mov
add
push
subl
sub
pop
jmp
ret
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
testl
push
imul
cltd
add
into
roll
xchg
add
lods
add
mov
mov
mov
int3
divl
xlat
mov
repnz
add
push
add
in
ja
out
jno
rolb
data16
add
ja
jle
add
loopne
in
fcompl
inc
hlt
mov
push
push
push
call
je
add
jle
push
imul
add
jl
xlat
loopne
jmp
pop
out
push
divb
add
add
lcall
pop
in
push
push
push
lea
push
push
push
call
shl
jno
int
je
enter
sahf
fucomp
xchg
add
add
jo
jle
std
add
push
add
cmpsb
xchg
mov
push
cmpb
fs
add
add
cmc
push
add
std
in
jge
add
filds
popa
stos
bound
add
sub
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
lea
add
add
pop
mov
jo
xchg
pop
mov
call
rol
add
add
xchg
add
jmp
sub
pop
add
push
push
push
call
std
add
add
jae
add
jns
add
jno
mov
add
cmp
in
add
add
fiadds
bnd
add
cmpsb
push
add
cmpsl
xchg
lods
lds
pop
mov
add
sbbb
jp
loopew
xlat
jns
mov
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
add
stc
mov
jne
push
add
xchg
add
push
add
pop
js
add
hlt
mov
add
add
cmc
add
add
lds
mov
lcall
and
push
push
push
lea
push
push
push
push
push
push
call
push
add
add
add
stos
mov
jnp
ret
add
pop
add
add
add
mov
add
mov
scas
jp
add
int
fs
mov
pop
pop
movsb
push
jge
add
cltd
mov
add
add
cmpsl
movsb
add
mov
lcall
les
add
push
push
inc
push
push
pop
add
sub
ror
sub
add
lea
pop
rol
xor
rol
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
xchg
add
add
pushf
loop
pop
pop
insb
ljmp
xchg
add
add
add
lods
add
aad
pusha
lcall
mov
add
add
stos
add
add
in
fdivr
lcall
jne
push
push
lea
push
push
push
call
mov
mov
ja
add
add
pusha
add
add
add
add
cwtl
push
add
add
fiadds
cmp
pop
mov
imul
mov
in
in
lcall
popa
pop
add
mov
push
push
push
push
lea
push
call
shl
test
xchg
mov
rolb
add
loope
push
add
add
fiaddl
add
js
jnp
add
mov
movsb
lret
push
add
push
testl
mov
out
add
cmpsl
add
lret
jl
pop
in
sub
pop
movl
push
push
call
xchg
imul
add
add
hlt
cld
xchg
loopne
iret
test
add
lock
add
add
add
lcall
int3
repnz
add
in
mov
add
pusha
jbe
imul
stc
sub
pop
lea
push
push
push
lea
push
push
lea
push
call
add
cwtl
addb
add
add
push
add
jae
add
testb
mov
add
add
add
add
fiadds
jl
rol
add
add
mov
sub
pop
pushl
pushl
push
push
push
call
jno
add
mov
add
stos
push
pop
lea
add
add
iret
insb
imul
add
je
outsl
mov
in
add
add
mov
pop
mov
in
mov
int3
add
push
add
mov
out
sub
pop
call
push
lea
push
call
push
add
add
xchg
mov
add
add
aam
add
fmulp
xchg
out
add
add
roll
push
add
mov
add
add
loopne
xchg
add
sub
pop
pushl
pushl
push
lea
push
push
call
enter
add
add
add
mov
add
pop
lahf
add
imul
pop
popa
add
jmp
addr16
data16
jo
aad
add
push
add
add
jle
mov
lahf
add
add
add
add
add
xchg
xor
add
mov
and
add
add
shr
sub
inc
pop
shl
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
into
out
pop
jmp
add
add
movsb
xchg
push
add
add
mov
popl
ret
add
push
add
push
sub
pop
pushl
call
push
push
lea
push
lea
push
push
push
lea
push
push
call
push
mov
add
addl
add
aad
in
fildl
loopne
xchg
add
mov
roll
add
scas
shll
add
jbe
push
in
mov
arpl
add
xchg
add
add
clc
push
add
imul
xchg
in
loopne
lcall
inc
push
push
push
push
pop
add
inc
sub
not
pop
shr
pop
push
push
push
push
call
add
je
add
jge
push
cmc
add
lcall
pop
into
jmp
add
add
mov
mov
scas
add
not
add
int
movsb
add
std
push
faddl
add
popf
mov
jnp
jne
add
in
lock
push
push
push
push
call
filds
pop
movl
add
add
andb
idivl
add
add
add
iret
add
cltd
rorb
pop
mov
add
roll
push
ja
call
scas
push
movsl
add
push
xlat
add
in
hlt
pop
push
push
push
push
push
push
call
test
add
add
add
add
clc
in
add
stc
add
loope
add
add
add
repnz
add
lret
aam
xchg
in
add
add
fwait
add
jns
push
push
out
add
clc
jne
leave
test
add
add
lcall
pop
call
mov
push
push
lea
push
push
push
push
call
add
pop
mov
test
add
push
add
add
add
mov
add
add
add
jne
stc
in
fdivrs
add
repnz
popf
test
cld
adcl
test
in
call
push
push
push
call
add
add
cmpsl
test
mov
fwait
add
int
in
add
add
mov
in
iret
repnz
cmpsl
add
cli
add
add
leave
mov
add
popf
add
xorl
add
add
add
push
add
add
pop
cmc
add
add
push
add
imul
push
push
push
push
push
call
add
push
gs
insb
in
add
std
xchg
std
arpl
roll
jmp
add
out
add
add
add
add
stos
filds
in
mov
mov
pop
in
idivb
add
rolb
xchg
cmc
add
push
in
js
add
add
in
aad
add
sub
pop
mov
add
push
lea
push
push
lea
push
push
call
add
add
add
mov
xlat
lret
add
aam
push
in
add
add
subl
xchg
stos
roll
js
add
pushf
cmpsl
add
add
sti
add
xchg
in
in
lcall
ret
add
add
add
push
push
lea
push
call
add
ljmp
scas
mov
test
outsl
aam
pop
outsl
add
mov
xchg
add
jne
fwait
outsl
repnz
add
int3
add
add
outsl
lods
jo
add
mov
xchg
add
mov
xchg
cltd
insb
loope
in
hlt
lcall
xor
push
push
push
push
push
push
lea
push
push
call
iret
arpl
mov
scas
in
xchg
add
jl
add
cmc
out
add
mov
add
loop
lahf
sti
xchg
cli
pop
add
mov
xor
add
add
out
add
xchg
add
mov
add
fldenv
pop
mov
add
add
push
push
lea
push
lea
push
push
push
push
push
call
push
add
mov
test
add
addb
add
add
mov
andb
push
add
add
test
enter
add
mov
fnsave
mov
repnz
inc
or
pop
jae
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
mov
fildll
popa
loop
data16
cmpsb
lods
pop
mov
fcomip
xchg
add
out
pop
add
add
jbe
add
cmpsl
mov
add
in
fdivr
lcall
add
push
lea
push
push
call
add
gs
add
les
push
add
push
xchg
add
sahf
push
jle
notl
mov
add
add
lret
call
ret
lret
sarb
sub
pop
add
push
lea
push
lea
push
push
lea
push
call
add
movsl
pop
add
lea
pop
fstpt
mov
add
add
mov
add
add
into
add
hlt
mov
ret
add
pushf
add
push
xchg
mov
jo
add
fidivs
push
cli
sub
pop
add
push
lea
push
push
push
call
push
cmc
add
add
push
cwtl
add
scas
add
imul
add
popa
add
movsb
add
mov
push
sahf
fiadds
add
movsl
imul
loop
aad
mov
jmp
mov
int3
add
pop
push
push
push
push
push
call
fistps
movl
jecxz
fstpl
add
jo
adcb
popa
add
stos
add
stc
rolb
in
add
add
add
add
pop
add
add
mov
add
dec
fiadds
add
add
bound
jne
add
mov
add
xchg
shlb
in
in
pop
mov
xor
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
std
enter
stos
add
add
add
add
jbe
mov
add
repnz
jbe
rolb
mov
pop
imull
add
push
push
push
push
push
push
lea
push
push
lea
push
call
icebp
sti
stc
mov
jl
test
aam
rolb
xchg
jmp
add
jl
add
loop
push
add
mov
mov
mov
lea
in
loopne
lcall
inc
or
pop
jae
push
push
push
push
push
lea
push
call
loopne
mov
sub
push
int
add
add
add
mov
add
popf
add
pop
add
jnp
pop
jns
sahf
add
pop
js
add
jle
mov
cltd
add
enter
cld
nop
push
call
push
push
push
push
push
push
call
in
add
add
add
jns
lock
add
roll
mov
insb
add
jno
rolb
cltd
mov
add
add
mov
lock
push
cmpsl
add
add
mov
lock
add
roll
add
push
call
add
nop
loop
int3
xchg
rolb
xchg
ja
add
add
fiadds
scas
lock
add
add
add
push
fadds
add
mov
add
loope
add
add
call
add
incb
add
mov
icebp
add
mov
in
clc
lcall
enter
aam
arpl
pop
add
add
movl
xchg
ficomps
xchg
pop
movb
pop
cwtl
add
gs
mov
std
add
add
add
addb
lods
add
push
lret
mov
add
jl
add
cli
push
test
testl
add
scas
lret
add
movsb
push
push
push
call
ljmp
movb
jb
lock
add
add
out
pop
call
add
loope
add
add
add
fiadds
sub
pop
pop
mov
push
push
call
arpl
jns
int
add
add
icebp
jo
mov
jne
mov
bound
pusha
mov
enter
add
mov
outsl
add
jns
pusha
fisubrs
add
add
imul
in
add
aam
add
push
data16
movsl
stos
in
add
in
clc
pop
add
push
push
push
lea
push
call
jns
add
jnp
xchg
add
pushf
rcll
mov
lock
add
xlat
fildll
add
jb
xchg
andl
xlat
je
mov
repnz
add
fs
add
mov
mov
jmp
sub
pop
add
push
not
pop
add
mov
xor
push
push
lea
push
push
push
lea
push
push
call
add
call
ror
scas
stos
mov
mov
add
xchg
nop
imul
rcl
jne
xchg
lret
stc
jmp
xchg
add
sub
pop
mov
push
push
push
lea
push
lea
push
call
add
add
add
insb
add
pop
fwait
push
scas
mov
jecxz
add
iret
in
loop
rol
popa
faddp
add
pusha
push
arpl
add
movsl
push
add
iret
imul
add
lret
into
test
add
add
mov
sub
pop
xor
push
lea
push
push
lea
push
call
add
cltd
add
fists
jb
cmpsl
negl
jl
mov
jnp
jp
add
jo
jge
hlt
add
add
add
pop
stos
outsl
add
ja
fstps
mov
scas
mov
mov
in
push
imul
roll
aad
sub
pop
add
push
sub
pop
mov
xor
push
push
push
push
push
push
call
add
mov
fwait
mov
ja
in
loope
jo
push
pop
pushf
jns
lods
push
add
add
add
pop
repnz
add
add
cwtl
add
add
add
xchg
xchg
add
outsl
enter
cmc
add
add
pop
xchg
add
xchg
add
add
enter
test
in
call
rcll
lea
push
lea
push
call
add
lahf
pop
fs
js
add
mov
mov
mov
mov
add
jne
mov
mov
mov
fs
add
add
xchg
icebp
fildl
add
add
je
imul
jbe
jns
add
jmp
add
call
loope
popl
lcall
fsubrs
mov
stos
push
shl
inc
shl
push
push
pop
add
shl
shl
rol
sub
shr
inc
add
sub
pop
inc
dec
shr
pop
push
sub
add
pop
pushl
push
xor
pop
call
push
lea
sub
lea
pop
push
push
push
add
rol
push
push
pop
add
rol
dec
rol
dec
sub
xor
pop
sub
lea
shl
pop
push
lea
push
push
push
lea
push
push
push
call
outsl
sarl
add
pop
repnz
add
cmpsl
fwait
add
popf
stos
add
push
loopne
mov
add
jl
add
andl
ja
cmpsl
xchg
push
jle
in
in
lcall
push
push
push
push
push
push
push
push
lea
push
call
iret
add
les
add
xchg
add
call
xchg
iret
add
mov
aad
out
popl
jnp
call
add
add
xchg
jns
add
add
add
cwtl
cltd
out
mov
pop
pop
cltd
sub
pop
call
push
sub
not
pop
mov
push
sub
pop
push
push
lea
lea
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
pop
add
out
scas
pop
add
add
cli
mov
leave
pop
add
enter
cli
hlt
fistpll
stos
add
add
xorb
add
jno
sarl
pop
add
push
mov
in
in
mov
add
push
ror
dec
shl
inc
pop
add
push
ror
pop
add
mov
push
push
push
lea
push
call
add
add
mov
fstps
add
mov
add
add
mov
mov
cmpsb
enter
add
add
lock
lcall
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
lea
lret
movsl
loop
add
jmp
jl
add
add
add
add
lret
mov
test
mov
lahf
lods
add
add
mov
pop
jp
push
add
add
lret
pop
add
mov
add
lret
add
cmc
jnp
fisubrs
jnp
aad
sub
pop
add
push
add
sub
lea
add
pop
add
push
lea
pop
push
push
lea
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
popa
xchg
hlt
jle
popf
add
test
mov
add
add
popa
lods
loopne
add
add
mov
mov
add
add
add
xchg
push
add
movsb
ljmp
les
jecxz
ja
mov
scas
fiaddl
movsl
lahf
rcr
add
add
lcall
add
push
push
push
push
push
call
enter
je
pop
mov
push
jmp
add
fnstenv
xchg
mov
add
mov
testl
out
add
xchg
jno
nop
add
sahf
loopne
mov
iret
add
rolb
jbe
iret
cltd
push
mov
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
add
loope
mov
add
mov
lret
mov
pop
mov
icebp
cmc
add
xchg
int
imul
leave
addb
xchg
mov
jge
mov
cmc
add
add
lcall
lock
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
in
add
ljmp
sbb
aam
add
mov
addb
cltd
add
add
xchg
fucomp
mov
add
add
add
xchg
sub
pop
mov
push
push
push
push
push
call
out
movsl
add
cld
je
add
loop
mov
cmpsb
push
add
add
add
add
add
push
add
add
add
mov
divb
push
js
add
lea
pop
add
cmpsl
mov
add
stos
add
sub
pop
xor
push
push
push
lea
push
push
push
push
call
xchg
mov
add
pop
xchg
add
je
scas
sarl
add
add
mov
add
shrl
add
xlat
lods
testl
rolb
add
add
lods
mov
js
iret
arpl
testl
add
icebp
rcr
stos
movsb
add
out
add
les
add
push
lea
push
push
lea
push
push
push
push
push
call
add
pushf
repnz
xorl
push
add
xlat
push
testb
add
add
out
mov
add
add
jne
lret
add
add
out
ret
fprem
add
add
xlat
push
add
add
addb
push
cli
mov
sub
pop
rep
mov
push
push
push
push
push
push
push
push
lea
push
call
mov
mov
in
add
add
add
filds
add
add
add
add
flds
mov
pop
scas
repnz
leave
pop
sahf
les
flds
out
add
sub
pop
xor
push
push
push
push
call
fcmove
outsl
sahf
mov
in
lock
add
add
iret
xchg
lds
cwtl
add
jbe
out
add
shlb
jae
add
out
movsl
fs
lock
test
add
fiadds
push
add
push
sub
sub
inc
pop
or
je
push
ror
add
shl
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
add
test
flds
push
in
xchg
add
mov
xchg
popf
jo
mov
lds
push
xlat
sarl
int3
add
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
call
subl
jns
add
add
mov
mov
add
jo
bound
arpl
faddl
cltd
add
pop
int
shll
add
add
push
lcall
les
add
push
add
inc
pop
mov
xor
push
lea
pop
add
add
push
lea
push
lea
push
lea
push
lea
push
call
js
add
add
lahf
fcom
leave
add
lret
mov
add
xchg
mov
add
pop
lods
add
rcr
std
in
add
rcrb
call
jp
xchg
add
mov
xchg
sub
pop
push
mov
xor
push
push
push
lea
push
lea
push
call
add
imul
hlt
push
fadds
ljmp
popa
cld
push
clc
test
lods
add
add
jne
in
in
add
sti
test
rorb
flds
xlat
out
flds
jge
jae
add
leave
push
add
pop
scas
add
cmc
hlt
enter
roll
je
in
in
pop
add
pop
push
ror
ror
dec
pop
rep
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
addr16
outsl
rcrb
jno
out
pushf
add
xchg
into
jno
add
gs
imul
add
test
push
add
scas
add
xchg
enter
add
sahf
add
push
sti
add
add
add
pop
mov
xor
push
push
push
push
call
out
mov
add
rclb
mov
push
xchg
loopne
add
add
hlt
push
movsb
add
jns
jbe
fiaddl
add
add
into
add
aad
lods
test
ja
add
pusha
mov
mov
stos
add
push
fildl
add
leave
je
mov
push
push
push
push
push
call
aam
fdiv
jno
lahf
sti
mov
add
aam
fstpl
add
jle
add
add
add
mov
add
cmpsb
addl
test
mov
fiaddl
xchg
jp
lds
jmp
sub
pop
add
add
push
add
not
add
shl
pop
rep
push
push
call
push
pop
add
shl
out
xchg
pusha
sarl
add
add
add
into
lods
popa
add
test
leave
jecxz
add
pop
clc
jo
add
add
add
call
add
movsl
mov
mov
xchg
jmp
add
jne
in
clc
pop
pop
push
push
ror
shl
not
xor
push
sub
add
ror
sub
lea
sub
sub
pop
xor
rol
rol
pop
push
add
pop
pop
push
push
push
push
push
lea
push
lea
push
call
mov
test
jns
jne
add
cli
xlat
add
jle
shrl
or
xchg
addl
in
mov
ja
mov
mov
mov
push
lea
push
push
push
lea
push
push
push
call
cltd
add
add
rolb
jb
loop
add
add
jo
mov
xchg
add
in
jge
outsl
add
in
add
aad
add
add
cmpsl
xchg
in
in
mov
push
push
push
push
push
push
call
imul
add
mov
add
out
pop
xchg
ja
add
popl
xlat
add
filds
jae
cmpsl
jne
add
add
popf
push
push
add
add
pusha
add
mov
mov
addl
out
sub
pop
jmp
push
xor
pop
push
push
push
push
push
push
push
push
push
call
scas
add
mov
add
lods
add
add
popa
stc
add
lea
add
lret
popf
jae
leave
add
loopne
lcall
in
add
push
dec
pop
push
push
push
add
rol
pop
push
push
push
not
rol
dec
pop
mov
pop
push
shl
shr
pop
pop
push
lea
lea
xor
dec
pop
pop
push
lea
push
push
lea
push
lea
push
call
add
add
add
neg
jnp
int3
loopne
push
add
add
add
test
add
add
add
add
xchg
jle
add
xchg
add
add
in
sti
stc
add
add
push
mov
lock
stos
sub
pop
pop
leave
push
push
push
lea
push
lea
push
push
push
call
imul
je
cli
jmp
fldl
test
add
not
xchg
cltd
cli
out
test
mov
rcr
add
out
mov
add
iret
add
add
sub
pop
ret
push
push
push
push
call
pop
add
jle
add
mov
and
xchg
fldl
push
add
add
cwtl
push
stc
filds
jno
in
in
lock
push
mov
push
lea
push
call
add
add
jle
mov
roll
repnz
aad
shlb
out
xchg
lock
add
jp
add
add
add
jae
add
add
fldl
lcall
clc
push
push
shr
rol
inc
pop
push
push
push
shr
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
push
add
add
jnp
add
add
loope
lods
push
add
faddl
shl
lea
scas
mov
add
mov
add
sub
pop
movl
addl
push
push
call
add
add
flds
add
hlt
in
add
mov
mov
int
rcll
scas
leave
add
lcall
rorb
or
add
push
shl
dec
ror
pop
mov
pop
push
xor
rol
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
roll
cwtl
add
add
ret
faddl
add
mov
add
add
add
add
add
cli
add
lods
push
push
jmp
cld
mov
add
into
mov
sar
jge
cmc
add
roll
add
push
add
imul
fcomps
push
sub
sub
ror
add
pop
pop
leave
push
lea
shr
sub
pop
ret
push
push
push
lea
push
push
push
push
push
push
call
rorb
fisubrl
pop
add
out
ror
add
scas
add
mov
fsubrs
cld
add
fiaddl
into
xchg
jl
add
jo
add
movsl
add
lcall
push
lea
pop
mov
push
lea
push
push
lea
push
push
call
pop
jl
push
mov
add
mov
add
fdivrs
add
add
jae
add
popf
nop
mov
fidivl
mov
add
mov
add
in
sub
pop
add
push
push
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
mov
add
push
xchg
cmpsb
lahf
lret
add
mov
add
mov
add
add
movsb
stos
push
mov
fwait
add
movsb
sarl
mov
fiaddl
mov
add
testl
add
jmp
ja
add
mov
pop
ljmp
push
testl
push
shr
pop
addl
push
add
add
pop
push
call
push
push
lea
push
push
push
lea
push
push
push
push
push
call
jnp
add
call
int
test
cmpsb
fscale
add
shll
jb
add
lcall
add
add
add
mov
js
stos
sahf
add
sub
pop
mov
push
add
not
pop
pushl
push
push
push
lea
push
call
add
add
push
add
arpl
mov
add
lock
fnstcw
xchg
test
jbe
add
jno
jge
fsubrs
add
add
add
mov
cmc
pop
lods
add
add
icebp
mov
leave
add
fsubr
add
insb
sub
pop
push
call
push
push
push
push
push
call
pop
mov
mov
int
mov
jne
add
enter
fs
jnp
add
add
push
add
add
jecxz
in
in
lcall
jge
add
test
push
call
add
jo
ret
push
add
cmpl
jge
mov
push
imul
sti
fldl
imul
arpl
cwtl
out
jle
add
sbbb
ljmp
add
add
lods
add
add
cwtl
mov
add
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
repnz
mov
add
fistps
add
cmpsb
data16
mov
cld
add
mov
mov
add
add
add
fists
add
aad
in
fdivr
lcall
push
lea
push
push
lea
push
lea
push
lea
push
call
imul
add
ljmp
add
push
mov
mov
mov
add
add
add
add
lcall
pop
push
sub
inc
lea
pop
leave
ret
push
pop
push
push
push
push
call
mov
xchg
add
add
add
roll
add
add
pop
add
add
add
push
add
data16
add
lcall
in
add
push
push
lea
push
push
push
push
push
push
push
call
lret
pop
add
add
imul
insb
push
add
add
push
jecxz
enter
lock
add
jne
add
add
add
mov
sahf
xor
add
push
push
hlt
addl
out
jno
lds
add
add
ja
xchg
add
add
add
fsubr
mov
iret
int3
sub
pop
push
push
push
push
push
push
push
call
add
leave
add
popf
cli
stc
cli
add
lock
add
mov
add
mov
add
std
fldl
insb
push
push
push
push
push
push
push
push
lea
push
call
cmpsb
xchg
add
hlt
add
lods
add
add
xlat
out
ja
add
add
add
add
lea
mov
outsl
jae
rcrl
add
hlt
data16
lret
pop
js
add
out
rorl
mov
add
add
push
push
inc
pop
movl
push
lea
sub
not
pop
push
call
push
push
push
call
js
cwtl
add
ljmp
out
mov
add
imul
into
add
add
leave
add
add
or
lret
rorb
cli
call
out
pop
subl
push
sub
pop
cmpl
jne
push
add
add
pop
pop
pop
push
dec
pop
pop
push
lea
add
pop
pop
push
xor
pop
leave
push
add
sub
sub
pop
ret
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
test
fwait
add
xchg
fcom
repnz
fsubr
add
popl
in
fiadds
mov
movb
pop
pop
add
add
xchg
jne
add
jne
jne
data16
mov
outsl
out
test
test
jmp
mov
add
add
pop
mov
jmp
add
in
fcompl
mov
push
sub
pop
add
push
sub
shl
xor
pop
push
push
add
not
pop
push
push
xor
pop
push
push
push
push
push
lea
push
call
bound
add
xchg
add
add
fdivrl
add
in
add
roll
in
insb
mov
add
add
mov
sub
pop
push
push
shr
shl
xor
pop
mov
lea
push
pop
sub
mov
push
lea
push
lea
push
push
push
call
add
std
add
clc
mov
add
add
add
xlat
aam
add
xchg
test
add
push
leave
mov
cmc
add
add
add
pop
mull
sub
pop
shr
push
lea
push
call
add
mov
add
mov
insb
add
add
fmuls
push
jl
mov
cld
data16
add
pop
add
add
lcall
lods
je
add
test
cwtl
flds
test
mov
push
push
add
in
lret
lahf
pop
ljmp
or
push
push
push
push
push
push
lea
push
push
call
aam
fnstsw
ret
add
jbe
add
mov
jb
sarl
fadds
xchg
jno
add
add
inc
cld
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
scas
mov
add
call
movb
lock
pop
xchg
cmpsb
add
repnz
xorb
add
icebp
sarb
mov
mov
add
rolb
xchg
add
lods
leave
lods
and
add
sub
pop
add
push
push
push
lea
push
call
add
movl
add
add
mov
lret
mov
loope
mov
lret
push
pusha
add
fs
add
add
xchg
cmpsl
lods
add
pushaw
ja
pop
movsl
test
outsl
mov
add
xchg
mov
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
rolb
push
add
add
add
add
jb
pushf
movsl
add
lret
hlt
cmpsl
mov
add
ja
test
cmpsb
ja
leave
out
aam
in
fcomps
inc
add
add
push
push
lea
push
push
push
lea
push
call
add
scas
lock
push
add
aad
add
add
push
add
add
add
pop
sahf
add
ficomps
add
out
add
mov
lods
add
fnstcw
adcb
sahf
fcomps
add
add
add
add
call
cmp
jne
push
lea
push
push
lea
push
lea
push
call
std
mov
int
xchg
add
add
mov
mov
add
add
add
mov
add
imul
movsb
mov
movsl
out
iret
repnz
in
add
add
out
add
addr16
cmpsb
mov
int
mov
pop
cmp
jne
push
not
not
pop
mov
push
sub
xor
pop
movl
push
push
push
call
add
jmp
push
add
xchg
cltd
add
stos
mov
movsl
add
add
fldl
add
iret
mov
add
lret
xchg
jb
scas
sti
add
pop
in
push
les
ret
add
sub
pop
jmp
push
inc
shr
pop
mov
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
push
imul
lock
add
pop
sti
movl
pop
data16
ror
add
ja
in
fcomps
ljmp
and
add
push
lea
push
push
push
push
push
push
push
call
add
add
add
push
xchg
push
lds
add
fdivrl
add
add
fs
add
subl
flds
inc
add
add
data16
sub
pop
mov
push
push
lea
push
call
add
jp
xchg
add
add
cwtl
test
ljmp
add
jne
addr16
xorb
add
add
call
xchg
xlat
push
roll
movb
scas
movl
add
lcall
mov
add
mov
in
hlt
lcall
add
add
jmp
push
lea
push
push
push
push
push
call
pop
loopne
add
pop
add
cwtl
cmc
cli
pushf
add
rolb
fs
add
cltd
insb
out
add
pop
lock
add
mov
add
ret
in
call
mov
push
add
pop
mov
push
rol
sub
pop
cmp
jne
push
shr
pop
mov
push
add
lea
pop
movl
push
lea
pop
jmp
mov
push
push
push
push
push
push
call
push
mov
add
test
add
rolb
add
add
add
popa
enter
add
cli
aad
out
mov
mov
lcall
cmpl
jne
push
push
push
push
call
add
add
jge
xchg
add
add
mov
jbe
popf
xchg
add
push
add
xchg
movsb
xchg
lahf
add
repnz
mov
add
add
sahf
loopne
ljmp
shl
jae
leave
in
add
add
mov
test
jne
add
add
add
movb
mov
shll
movsl
add
mov
mov
sub
pop
mov
push
push
call
cmc
fwait
add
decb
add
add
add
add
lret
add
nop
cmc
pop
push
add
ret
gs
add
sub
pop
movl
push
add
pop
jmp
push
sub
shr
rol
pop
pushl
pop
push
add
sub
shl
pop
mov
push
xor
pop
mov
mov
push
push
sub
push
and
add
add
sub
xor
inc
pop
xor
shr
dec
pop
push
push
push
push
push
push
push
push
push
call
add
movsb
pop
lcall
xchg
add
in
add
outsl
push
add
ret
add
mov
into
mov
add
add
push
mov
add
pushf
lea
add
lcall
push
push
push
push
push
push
push
lea
push
lea
push
call
lcall
cld
jp
mov
mov
add
xchg
jmp
add
iret
add
fbld
cmpb
fdivr
lcall
cmc
cmp
add
out
ret
or
add
and
push
add
push
sub
add
add
lea
shl
sub
sub
shr
rol
ror
pop
shl
pop
push
rol
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
iret
xchg
mov
aad
add
add
add
add
lods
add
xchg
mov
pop
mov
add
lret
add
fcompl
pop
cmp
add
xchg
lods
add
and
push
push
call
cld
push
iret
scas
lret
jle
in
add
shl
test
jo
lds
mov
out
push
loope
negl
stc
add
cltd
lcall
cmpsb
cli
add
scas
popf
outsl
jbe
add
add
add
add
movsl
add
out
add
ror
fcmovnb
imul
push
in
call
int3
fldz
ret
sub
add
push
push
rol
sub
xor
rol
push
xor
add
inc
shr
sub
rol
xor
sub
pop
sub
inc
dec
pop
push
sub
sub
pop
push
call
push
ror
shl
inc
pop
cmpl
je
push
push
shr
lea
push
or
inc
add
add
sub
lea
not
pop
shl
shl
pop
push
lea
push
lea
push
push
push
push
call
fidivrl
add
mov
loopne
add
add
add
add
push
add
add
add
test
add
mov
addb
add
lods
add
pop
stos
add
je
add
add
mov
testl
fsub
movsl
push
lea
push
push
lea
push
call
mov
add
add
test
add
add
add
cli
stc
data16
jmp
add
add
add
filds
mov
add
add
xchg
add
add
mov
push
stos
leave
scas
add
add
jbe
add
js
scas
add
sub
pop
call
push
ror
shl
pop
cmpl
je
push
push
xor
push
push
pop
add
xor
sub
add
shl
sub
rol
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
nop
jo
add
xchg
add
add
ljmp
je
xchg
cli
add
test
add
outsl
rcrl
cltd
add
sub
pop
push
push
sub
sub
inc
pop
call
push
lea
pop
cmpl
je
push
push
ror
lea
push
xor
add
xor
dec
sub
not
pop
sub
xor
pop
push
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
mov
mov
jmp
aad
test
sbbb
jo
add
add
jl
sarl
xchg
pop
cmc
leave
cli
fildl
add
add
add
out
adcb
roll
imul
cltd
push
add
popf
mov
add
pop
call
cmpl
je
push
push
add
push
sub
add
add
sub
add
sub
lea
xor
ror
shr
pop
rol
shl
add
pop
push
push
push
lea
push
push
push
push
push
push
push
call
cli
add
add
hlt
in
xchg
ror
add
cli
mov
pop
add
lods
add
add
roll
flds
ret
mov
lcall
push
sub
inc
rol
pop
call
cmpl
je
push
push
shl
ror
push
xor
add
sub
sub
sub
ror
shr
dec
pop
sub
not
rol
inc
pop
push
sub
add
ror
pop
push
push
sub
ror
rol
inc
pop
call
cmpl
je
push
push
shr
add
rol
push
or
inc
add
shr
xor
sub
shr
lea
rol
pop
shl
sub
sub
dec
pop
push
push
push
push
lea
push
push
push
push
call
loopne
nop
rcll
ja
mov
add
add
mov
mov
mov
in
loopne
push
push
sub
pop
call
push
rol
xor
sub
lea
pop
cmpl
je
push
push
sub
push
sub
add
shl
not
sub
shl
xor
pop
xor
xor
add
pop
push
rol
shr
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
push
jno
add
add
lret
pop
mov
mov
add
test
ror
mov
add
pop
add
aad
aad
stos
xchg
int
add
imul
add
mov
addb
popa
add
add
filds
testb
add
loop
add
fs
sub
pop
call
push
lea
push
call
testl
mov
pop
add
jge
add
add
add
add
add
jo
add
rolb
negl
jae
arpl
jecxz
add
add
add
mov
add
cmp
test
xor
push
xor
add
sub
dec
lea
ror
pop
dec
pop
push
push
push
call
jge
flds
int3
add
add
add
add
les
add
add
add
mov
add
in
hlt
pop
push
call
push
shr
pop
cmpl
je
push
push
sub
add
push
xor
add
xor
sub
sub
shr
add
inc
ror
pop
sub
not
pop
push
inc
inc
rol
pop
push
push
shl
lea
add
sub
pop
call
cmpl
je
push
push
lea
sub
dec
xor
push
and
add
ror
shl
sub
shr
pop
shr
pop
push
shr
pop
push
push
sub
sub
ror
pop
call
push
not
add
shl
pop
cmpl
jne
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
fldenv
add
cmpsl
add
sbbb
shrb
add
call
mov
clc
rolb
add
fildl
xchg
stos
sub
pop
mov
push
add
dec
shr
ror
pop
movl
jmp
push
add
pop
xor
pop
push
sub
rol
pop
pop
push
dec
pop
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
out
add
pushf
add
icebp
cmpl
sahf
pop
add
xchg
js
add
js
movsb
roll
add
add
fwait
in
add
add
add
cli
sub
pop
leave
push
push
lea
push
push
push
push
call
add
pop
andl
rcrb
shll
mov
add
test
add
add
add
lcall
faddl
mov
enter
add
add
mov
pop
lea
add
add
or
push
push
push
lea
push
push
push
push
push
call
add
sar
jne
lcall
add
jl
pop
data16
in
cltd
add
add
pop
int3
add
add
idivb
add
iret
pop
out
repnz
mov
icebp
add
xchg
scas
add
add
in
in
in
lcall
in
push
lea
push
push
push
push
call
int
mov
add
add
add
mov
add
ficompl
push
insb
out
mov
mov
incb
add
add
add
outsl
bound
mov
mov
lods
frstor
add
xchg
arpl
sub
pop
add
push
not
not
add
shr
pop
cmpl
jne
push
push
add
inc
xor
shr
push
or
not
add
sub
sub
inc
add
inc
dec
pop
shl
pop
push
inc
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
cmpsb
stc
in
add
cld
pop
mov
add
add
mov
add
cltd
xchg
popf
stos
pop
add
test
mov
add
add
add
vpaddsb
sahf
pop
add
add
add
mov
add
mov
jb
push
add
add
add
out
add
arpl
sub
pop
push
push
rol
add
shl
pop
call
jmp
push
sub
add
add
add
pop
cmpl
je
push
rol
sub
pop
cmpl
jne
push
sub
pop
leave
push
push
push
push
push
call
test
ljmp
add
jge
pop
add
stos
xchg
add
xchg
fs
addl
add
add
add
test
lock
fidivs
pusha
add
in
in
lcall
les
push
lea
push
push
call
cltd
les
add
pop
add
icebp
pop
clc
jl
xchg
mov
pop
add
add
test
pop
int3
mov
jnp
movsl
out
call
js
test
pop
add
pop
add
push
inc
ror
pop
pop
pop
push
lea
xor
pop
pop
leave
push
xor
pop
add
ret
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
out
movl
rcll
mov
add
mov
pop
add
test
add
je
add
ret
pop
roll
push
lods
test
xchg
add
jno
add
pop
add
add
lret
sub
pop
jmp
push
shr
add
pop
cmpl
jne
push
push
lea
shl
lea
push
or
inc
add
sub
add
shl
sub
shl
shr
rol
xor
pop
rol
lea
dec
pop
push
push
push
push
push
push
push
push
push
call
mov
add
add
pop
add
lea
mov
icebp
add
icebp
or
add
add
add
xlat
fdiv
add
add
add
fisubl
add
add
jbe
push
xlat
add
pop
jae
jl
add
add
add
mov
add
add
lcall
jne
push
push
lea
push
call
add
add
add
xchg
aad
xchg
iret
add
add
lock
imulb
add
testl
mov
add
shll
les
nop
add
cmpsb
add
add
in
jl
popa
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
fwait
add
je
add
add
add
add
shl
jno
add
mov
test
int
int
add
in
in
in
lcall
rclb
adc
call
jle
add
xlat
mov
test
iret
aad
add
add
movb
mov
mov
xchg
add
push
movsw
testb
stos
xlat
add
add
out
lret
xlat
add
add
in
hlt
lcall
or
add
push
push
push
push
push
push
push
call
add
add
sahf
push
add
imul
add
add
add
add
fstps
add
loop
add
xchg
add
lahf
lds
cmc
ret
in
in
cmpl
jne
mov
push
lea
lea
lea
ror
pop
mov
push
pop
jmp
push
push
push
shl
dec
push
xor
add
shr
sub
shr
shl
sub
pop
ror
inc
shr
pop
push
shl
pop
pushl
call
push
shl
pop
call
push
push
inc
not
push
push
pop
add
sub
add
inc
sub
add
add
pop
add
shl
pop
push
inc
rol
rol
rol
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
push
push
push
call
negb
add
xchg
bound
push
add
lods
add
add
add
add
push
add
lea
ljmp
add
mov
shr
xchg
add
push
clc
out
pop
addr16
enter
cli
cmpsl
data16
mov
insb
add
mov
fsubrs
sub
pop
call
push
push
shr
dec
push
and
add
lea
inc
rol
sub
ror
inc
xor
not
pop
shr
pop
push
push
push
call
leave
add
icebp
add
add
aam
add
xchg
add
add
add
pop
add
test
add
add
adcb
add
out
add
xchg
rolb
addb
add
cmpsl
fwait
pop
mov
add
add
add
mov
mov
pushl
push
lea
push
push
push
push
lea
push
push
call
add
add
incb
mov
in
ljmp
xchg
test
fldcw
pop
mov
icebp
xlat
mov
stos
lcall
lcall
add
add
push
push
push
push
push
call
xchg
jmp
add
jns
add
loopne
push
in
testb
int3
add
les
mov
lret
push
mov
in
in
pop
call
push
push
xor
lea
push
sub
add
rol
sub
shr
shr
dec
pop
ror
lea
pop
push
xor
dec
pop
pushl
push
shl
dec
rol
shr
pop
call
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
shr
add
add
lret
add
les
cli
out
jns
jmp
add
vphaddbw
test
popf
add
cmpsl
rolb
leave
scas
add
xchg
pop
add
fiadds
shrb
pusha
fistps
push
or
not
add
sub
not
sub
ror
sub
sub
shl
ror
sub
pop
shr
rol
add
ror
pop
push
pop
pushl
call
push
xor
not
pop
call
push
push
dec
push
or
not
add
shr
sub
add
pop
ror
pop
push
sub
lea
add
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
push
push
call
in
add
test
movsl
js
add
add
int
out
pop
fiadds
int
mov
add
mov
jmp
add
add
roll
pop
js
add
add
js
js
add
xchg
add
fimull
jo
in
fdivr
lcall
shrb
xchg
jo
push
dec
lea
push
push
pop
add
inc
sub
dec
shr
not
pop
pop
push
push
push
push
push
push
push
call
add
lcall
add
add
test
add
fildl
test
jae
addb
add
add
into
add
add
push
scas
add
push
movsb
add
out
add
je
pusha
add
out
xchg
add
mov
sub
pop
pushl
push
push
push
push
push
push
push
push
call
add
add
add
frstor
push
add
sti
add
lock
add
pop
mov
incb
mov
mov
add
int3
add
add
add
test
jp
add
add
jge
fsts
add
mov
add
add
scas
shrb
sub
pop
call
push
lea
push
call
ret
into
test
leave
xchg
add
add
jno
push
fwait
stc
in
add
jb
add
test
add
add
ljmp
mov
add
lods
add
clc
lcall
shrb
hlt
jg
push
inc
push
push
pop
add
inc
shl
sub
rol
add
shr
pop
sub
pop
push
push
lea
push
push
lea
push
call
add
mov
ficompl
mov
test
int
in
add
outsl
add
test
xlat
jmp
test
add
add
add
mov
in
add
mov
add
add
add
pop
jb
add
in
in
pop
pushl
push
inc
pop
call
call
push
push
inc
shl
inc
inc
push
sub
add
shr
sub
sub
rol
shl
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
roll
add
ret
iret
in
cwtl
scas
add
fwait
repnz
mull
add
push
add
lcall
in
pop
movsl
xchg
lret
filds
iret
jo
add
xchg
push
aam
pop
add
sub
pop
pushl
push
push
lea
push
push
push
push
push
call
out
push
jge
fsubrs
mov
add
mov
enter
in
fidivrs
xchg
add
add
add
in
call
call
push
push
push
or
inc
add
add
shr
not
sub
rol
pop
add
sub
inc
pop
push
add
add
pop
pushl
push
add
sub
add
pop
call
lea
push
pop
push
push
lea
push
push
push
call
mov
roll
xchg
add
add
cmc
lahf
add
add
xchg
jmp
aam
test
gs
scas
mov
lods
add
sub
pop
call
push
push
not
xor
sub
push
xor
add
not
shl
sub
sub
add
pop
dec
pop
push
dec
pop
pushl
push
sub
pop
call
push
sub
pop
call
push
push
push
push
pop
add
add
sub
xor
ror
pop
not
pop
push
xor
pop
pushl
call
push
push
push
lea
push
call
add
add
out
pop
fldl
pop
push
addl
add
data16
xchg
add
mov
pop
fldenv
add
jl
nop
ja
gs
mov
out
fldl
add
add
mov
add
lret
add
jmp
lcall
call
call
push
push
not
push
or
not
add
add
dec
lea
sub
inc
rol
xor
pop
add
shr
pop
push
push
call
out
fs
add
test
scas
fidivs
mov
icebp
lea
sahf
add
pop
add
jge
jo
add
xchg
add
lods
add
add
scas
loopne
fdiv
add
add
sub
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
pop
jmp
pusha
outsl
add
add
push
add
add
push
add
leave
sahf
add
mov
add
jl
add
add
movsb
and
add
rclb
add
shl
pop
lea
push
push
xor
push
sub
add
ror
sub
add
shr
pop
sub
add
pop
push
push
push
call
jne
add
add
lock
addb
aad
mov
add
jmp
mov
mov
push
clc
addr16
mov
movsb
jge
in
into
add
cmc
jecxz
aam
add
sub
pop
pushl
push
rol
pop
call
push
push
lea
push
push
push
call
fiadds
jle
xchg
add
add
jmp
mov
add
out
add
jge
add
add
mov
mov
out
add
add
hlt
rolb
add
jge
jle
mov
fiaddl
mov
pop
xchg
add
add
add
jl
push
stos
add
pop
lret
pop
push
int3
add
fsub
jne
loop
sub
pop
push
call
push
push
not
push
and
add
inc
lea
add
sub
shr
pop
shl
pop
push
push
push
push
call
cmc
pop
add
add
add
add
jmp
mov
int
mov
mov
mov
add
add
andb
jo
jae
mov
add
loop
mov
aam
test
mov
cltd
pop
xchg
sbb
jb
add
mov
pop
hlt
add
add
addl
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
push
lea
push
call
jae
xchg
ja
lahf
add
fs
add
int3
lret
loope
add
jmp
fsub
ljmp
add
sub
pop
call
mov
push
push
sub
push
or
inc
add
add
not
add
sub
pop
shr
sub
pop
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
push
add
mov
cmc
addb
mov
in
add
test
add
les
add
sub
pop
pushl
push
push
push
push
push
call
mov
fstl
add
mov
shll
mul
add
add
add
add
int
repnz
push
rolb
mov
add
pushl
call
push
push
shr
push
xor
add
sub
dec
shl
sub
shr
pop
inc
dec
rol
rol
pop
push
not
shr
pop
pushl
call
push
push
add
add
not
push
and
add
inc
ror
xor
sub
inc
xor
add
pop
add
xor
add
pop
push
push
add
xor
add
push
push
pop
add
inc
sub
shl
not
pop
add
add
inc
pop
push
push
push
push
lea
push
lea
push
push
call
push
add
nop
push
movsw
add
add
repnz
add
add
jb
add
add
jle
add
add
out
add
add
add
xchg
lods
jne
push
mov
test
in
call
push
push
xor
add
lea
push
push
pop
add
inc
xor
rol
sub
lea
pop
inc
pop
push
lea
not
pop
pushl
push
ror
lea
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
lret
rcll
mov
pop
rolb
add
add
ja
xchg
mov
in
lods
in
mov
add
add
add
fdivr
lcall
inc
hlt
lea
push
shr
pop
lea
push
lea
push
push
push
push
push
push
call
add
movsl
add
incb
mov
mov
in
add
fldcw
jmp
imul
mov
add
push
add
pop
mov
fadds
mov
mov
imulb
pop
sahf
sar
jnp
int3
icebp
sbbb
add
xchg
jge
in
in
lcall
push
push
lea
push
push
push
push
push
push
push
call
fldl
mov
add
test
push
hlt
add
ja
fnstcw
mov
stos
add
add
rolb
mov
mov
add
add
push
lea
push
push
push
push
call
add
add
lea
icebp
filds
mov
add
add
xchg
fsub
add
test
shr
mov
add
add
add
scas
jb
push
add
hlt
lods
lret
add
mov
mov
arpl
add
add
sub
pop
push
push
push
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
jno
enter
mov
add
into
in
add
call
add
call
add
mov
push
mov
add
add
push
pusha
add
fcomp
sub
pop
push
push
rol
lea
pop
push
push
dec
ror
pop
pushl
push
push
lea
push
push
push
push
push
push
call
add
add
repnz
mov
test
xchg
jmp
add
push
fiaddl
xor
test
add
add
enter
push
pushf
sub
jo
int3
add
nop
add
add
add
add
mov
jecxz
in
loopne
push
push
push
push
push
push
lea
push
push
call
gs
roll
mov
add
movsl
mov
rolb
scas
fiadds
mov
fistl
add
popf
add
lods
mov
fsubr
add
push
jo
add
add
add
pushf
stos
add
add
hlt
int
in
add
in
in
call
push
push
lea
sub
rol
push
and
add
rol
shr
sub
dec
xor
pop
inc
rol
rol
pop
push
push
call
add
add
add
addb
in
mov
sahf
je
jb
cmpsb
pop
rclb
hlt
add
jns
in
push
add
push
add
jne
in
add
push
sub
pop
pushl
call
push
dec
dec
pop
call
push
sub
pop
mov
push
pop
pop
push
lea
push
push
push
call
jp
push
add
fs
mov
add
roll
pop
add
stc
rolb
add
add
lock
dec
jne
push
lea
push
push
lea
push
push
call
add
fildl
add
push
fiadds
jmp
pop
xchg
add
add
pop
test
ja
add
mov
pop
int3
mov
cmpsb
ljmp
loop
add
movsl
xchg
add
mov
xchg
ret
popf
mov
mov
jle
out
fwait
add
add
mov
add
lcall
addl
add
out
in
push
push
or
not
add
dec
add
sub
sub
rol
pop
add
dec
pop
push
lea
push
push
push
push
call
add
fwait
mov
lcall
lcall
incb
add
add
ljmp
mov
in
fstp
out
in
in
lcall
jne
push
lea
pop
call
push
push
rol
pop
call
push
push
lea
push
push
push
push
push
push
push
call
in
add
add
lret
int
add
add
add
addb
add
add
cmpl
mov
lea
push
push
push
or
not
add
sub
shr
lea
sub
add
pop
inc
add
pop
push
xor
inc
add
pop
pushl
call
push
push
push
push
call
add
push
std
pop
add
clc
add
add
aad
addl
add
add
add
jne
add
add
je
mov
jns
pop
pop
imul
stc
lret
mov
aad
add
sarb
push
add
lcall
push
not
ror
pop
call
push
push
ror
push
xor
add
lea
sub
sub
dec
rol
pop
add
not
pop
push
push
call
push
sahf
lods
lods
mov
aad
int
add
int3
mov
add
cmc
rolb
add
xchg
jmp
add
mov
cmc
mov
scas
mov
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
call
pop
mov
mov
add
mov
mov
pop
add
loopne
add
add
mov
out
stc
add
add
push
xchg
int
add
add
add
mov
lock
add
test
into
add
add
pop
jl
add
scas
add
add
pop
in
in
loopne
call
call
push
lea
add
pop
mov
push
push
push
push
push
call
add
pop
mov
loope
pop
nop
loope
add
adcl
movsb
imull
imul
data16
test
fiadds
add
test
add
add
pop
sub
pop
lea
push
push
lea
ror
not
push
xor
add
lea
shl
sub
shl
inc
pop
sub
add
lea
dec
pop
push
push
call
fcompl
mov
enter
push
fwait
mov
iret
cld
les
icebp
jnp
add
add
stos
add
lods
sub
pop
pushl
push
push
lea
push
push
push
push
push
call
mov
in
add
addr16
repnz
add
push
add
scas
addb
add
lret
add
add
mov
in
jns
push
ret
je
add
add
out
lcall
lahf
pop
fdivrs
add
add
sub
pop
call
lea
push
push
call
add
cwtl
add
add
add
pusha
add
arpl
mov
add
add
add
add
xchg
int3
push
scas
add
add
add
lcall
push
not
pop
push
push
push
push
push
call
loopne
add
add
add
add
jns
push
jb
add
add
add
into
popa
mov
add
add
mov
add
mov
add
out
xchg
in
mov
jecxz
add
jle
nop
mov
fcompl
out
add
andb
add
lcall
add
mov
push
push
push
lea
push
push
push
call
add
mov
fadds
push
jmp
loopne
jnp
loope
add
in
mulb
add
stos
pop
add
fists
add
add
cmpsl
mov
mov
in
lcall
jne
push
push
xor
sub
sub
push
or
inc
add
not
shr
inc
sub
sub
inc
ror
sub
pop
rol
pop
push
shl
lea
pop
push
push
push
push
call
pusha
faddl
movsl
addl
pop
rcl
add
test
jecxz
hlt
leave
push
js
xchg
add
add
mov
lods
jmp
pop
call
push
push
rol
sub
push
or
inc
add
add
sub
rol
dec
ror
pop
not
sub
pop
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
lret
outsl
add
lea
add
add
add
shl
test
stc
fnstcw
add
jl
lods
leave
les
add
stc
add
add
add
jno
test
add
mov
sub
pop
pushl
push
not
inc
dec
pop
call
push
lea
push
push
push
push
push
call
cltd
into
popa
pop
jne
add
add
mov
add
jecxz
jbe
negl
add
stos
add
mov
in
call
shrb
lret
fisttpll
lea
lea
push
or
inc
add
lea
add
sub
rol
pop
ror
pop
push
push
push
call
lahf
add
add
add
aam
xchg
cmpsl
mov
cmc
enter
in
jle
add
js
add
add
add
sub
pop
pushl
push
rol
rol
not
pop
call
push
push
push
lea
push
push
lea
push
lea
push
call
pop
add
add
add
mov
add
add
lods
add
mov
and
add
add
nop
jbe
mov
cmpsl
mov
lock
enter
jno
add
jbe
add
add
push
cmp
sub
pop
call
push
xor
pop
jmp
push
add
rol
lea
pop
pushl
push
push
push
push
push
call
in
stc
add
repnz
test
add
pop
rolb
add
add
mov
int3
icebp
cmpsb
jmp
jo
jo
add
jae
loop
cltd
sub
pop
mov
push
lea
push
lea
push
push
push
lea
push
call
add
sti
add
movsb
out
add
or
mov
add
add
outsl
mov
mov
stc
add
pusha
test
add
out
add
add
xlat
add
jb
xorl
add
add
add
lock
sub
pop
jmp
push
push
xor
push
and
add
not
sub
rol
pop
shr
pop
push
xor
pop
pushl
call
push
shl
ror
add
pop
push
call
push
push
rol
sub
push
sub
add
shr
lea
sub
shl
sub
shr
pop
shl
sub
lea
pop
push
push
push
push
push
push
call
sbbl
add
add
decb
add
outsl
jb
push
pop
add
fistpll
into
jb
cmc
add
mov
adcl
loop
stos
add
jne
push
not
rol
inc
pop
call
push
push
push
lea
push
call
add
add
out
sti
stc
data16
lret
add
nop
xchg
in
pop
mov
add
add
pop
add
fst
add
add
bound
add
mov
jns
add
add
add
add
jecxz
mov
add
cli
add
add
lahf
mov
add
pop
push
mov
mov
push
sub
pop
push
call
push
push
push
lea
push
call
jecxz
int3
fwait
in
fcoml
add
xchg
add
add
rolb
int3
add
push
add
add
add
push
add
pop
add
push
shl
add
lea
pop
pop
push
push
call
add
mov
mov
imul
add
add
add
pusha
add
jle
add
mov
add
add
fldl
pop
pop
add
add
add
jle
movsb
add
mov
sub
pop
pop
push
not
shr
pop
pop
push
push
call
add
xchg
pop
add
add
arpl
jns
add
add
jnp
rcrl
icebp
bnd
add
cmpsb
jo
push
mov
int3
add
lods
idiv
lods
push
iret
fwait
xlat
icebp
jbe
in
add
add
shl
add
sub
pop
pop
leave
push
shr
sub
sub
pop
add
ret
push
ror
not
pop
leave
ret
push
lea
dec
add
pop
push
push
add
dec
pop
mov
cmpl
jne
push
push
lea
push
push
call
jns
add
mov
jmp
add
icebp
add
add
add
add
mov
fs
add
in
movsl
out
int
add
add
js
add
pop
jmp
ret
in
lock
lcall
inc
and
jmp
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
cmc
pop
add
in
fdivr
push
xchg
cmpb
lds
lea
add
push
add
pop
pop
cmc
push
mov
add
add
mov
cmpsl
sub
pop
mov
push
pop
and
push
lea
push
lea
push
call
add
add
add
lea
add
add
xchg
push
add
nop
add
pushf
add
add
mov
add
add
lahf
data16
outsl
loope
add
aad
push
fs
iret
ljmp
add
lock
push
jb
jecxz
pusha
mov
cld
sub
pop
xor
push
lea
ror
pop
xor
push
sub
pop
add
push
push
lea
push
push
push
push
push
call
add
test
add
add
je
pop
loope
cli
add
leave
jl
cmpsl
add
mov
loopne
add
lcall
dec
call
pop
dec
push
push
push
call
add
xchg
add
add
push
mov
out
add
add
lock
test
add
xchg
mov
add
je
in
hlt
pop
sub
push
ror
pop
jmp
push
lea
rol
inc
pop
sub
pushl
push
push
push
push
push
push
push
push
lea
push
call
fstpl
add
mov
jl
add
add
add
push
add
add
mov
mov
add
lods
add
add
add
movsb
jle
out
xchg
xchg
fiaddl
mov
lds
add
in
addr16
pusha
cli
loop
jge
jae
add
jb
add
sub
pop
pop
sub
push
push
push
push
push
push
push
push
push
call
add
hlt
adc
pop
add
xchg
jle
addl
lods
loope
add
add
add
mov
push
out
push
addl
add
addb
add
fs
shll
outsl
fbstp
out
add
add
pop
jmp
mov
lcall
cmp
hlt
call
lret
inc
sub
shr
sub
pop
mov
lea
push
push
lea
push
call
mov
shll
xchg
xchg
add
add
sarl
stc
add
lods
add
test
aam
idiv
mov
lds
add
jne
out
in
hlt
pop
sub
push
inc
add
inc
pop
mov
shr
push
push
push
push
push
push
push
push
call
stos
mov
fld
lods
add
mov
popl
mov
mov
add
push
imul
mov
jmp
mov
pop
stc
mov
add
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
push
mov
add
jl
add
add
add
add
in
fiadds
ljmp
add
add
out
pushf
add
xchg
add
gs
xchg
add
jne
add
add
fldl
add
mov
jmp
lcall
jmp
mov
pushl
push
inc
add
pop
pop
push
inc
shr
pop
shr
and
push
push
push
push
push
call
cmc
andl
out
add
add
xchg
shlb
pop
mov
cmc
popa
add
jle
add
add
mov
add
add
lds
add
neg
add
add
in
sub
pop
sub
cmp
jne
push
add
rol
pop
leave
push
inc
pop
ret
push
not
shl
add
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
push
cld
int3
jge
jmp
mov
add
je
mov
add
mov
add
mov
int3
xchg
mov
test
mov
xchg
xchg
add
lods
add
arpl
sub
pop
mov
push
sub
add
sub
dec
pop
add
push
dec
inc
add
add
pop
push
push
rol
xor
pop
push
push
push
push
lea
push
call
imul
add
mov
xlat
add
lcall
add
addl
mov
mov
mov
jp
in
add
in
add
add
jl
add
fs
add
fsts
mov
movsl
loope
sub
pop
push
push
push
ror
add
pop
push
push
push
push
push
push
call
mov
aam
xchg
add
add
rolb
insb
les
mov
fiaddl
test
add
cltd
mov
jmp
add
sarb
out
add
add
xchg
in
stos
clc
hlt
add
out
add
cmpsl
add
xchg
outsl
insb
pop
add
insb
mov
lcall
pop
or
push
push
call
loop
pop
in
add
std
pop
cltd
add
popa
bound
out
xchg
aad
xchg
js
add
add
ret
outsl
ret
add
mov
add
lcall
ljmp
mov
or
call
add
jne
lea
add
add
push
add
fnstenv
pop
lcall
faddl
add
add
in
mov
jnp
pop
pushf
flds
add
mov
add
xchg
add
lock
lcall
adc
ljmp
jle
add
push
push
push
push
push
push
push
call
xlat
xchg
cwtl
add
rolb
add
test
mov
fisttps
push
add
roll
mov
popl
add
mov
leave
out
mov
add
js
add
sti
sahf
mov
xchg
sub
pop
mov
push
add
pop
add
push
sub
ror
pop
mov
add
push
lea
push
push
push
push
push
push
push
call
add
add
add
xchg
add
add
add
fadds
add
mov
mov
popa
add
add
add
add
add
sti
mov
push
add
pop
repnz
lods
mov
pop
xor
mov
push
push
push
call
gs
add
fldenv
xchg
add
add
mov
xlat
jbe
mov
fdivrs
xchg
jae
cwtl
fildl
add
or
hlt
pop
and
push
sub
pop
rol
push
inc
sub
sub
lea
pop
rol
xor
push
lea
push
push
push
push
call
jae
lds
pushf
add
add
add
add
add
insb
les
add
xchg
mov
std
add
out
je
cli
jmp
mov
cmpsb
mov
push
xchg
xchg
push
jl
lret
add
lcall
push
push
call
add
loop
hlt
pop
arpl
jnp
add
add
jnp
lock
add
loopne
mov
mov
add
add
in
add
add
mov
ljmp
pop
cmpb
jne
push
shl
rol
shl
pop
add
push
push
lea
push
push
call
lret
mov
ret
add
mov
stc
jp
roll
scas
xchg
add
jns
xchg
shlb
pusha
in
call
jb
add
icebp
lcall
jmp
pushf
sub
pop
cmp
je
push
push
push
push
push
lea
push
push
push
call
ja
jne
xchg
add
int
fcmovnb
push
mov
add
sti
cli
add
ficomps
stos
bound
addl
add
in
loopne
add
push
not
add
xor
pop
cmpl
jne
xor
push
add
sub
add
shl
pop
pop
push
ror
pop
pop
push
sub
shl
lea
pop
pop
pop
push
push
push
push
push
push
push
push
call
add
enter
jl
enter
sahf
add
add
insb
imul
lods
pusha
add
cmp
add
stc
mov
in
loopne
lcall
leave
push
push
lea
push
push
push
lea
push
call
add
pop
xchg
mov
jne
jbe
addl
mov
add
sahf
popf
push
add
xchg
enter
add
flds
sbb
lcall
pop
popl
jl
add
add
std
cwtl
add
add
add
xlat
lret
add
add
push
mov
mov
sub
pop
ret
mov
push
push
lea
push
push
push
lea
push
push
push
call
pop
xchg
add
jnp
imul
pop
fimull
xchg
add
add
mov
add
add
push
sub
pop
add
push
rol
pop
push
push
push
push
push
push
call
push
shr
cwtl
arpl
movb
add
jae
add
mov
add
add
add
faddl
cwtl
hlt
loop
add
jmp
add
push
add
add
mov
add
add
cld
arpl
test
mov
add
add
jo
stos
add
add
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
je
add
xlat
jno
add
enter
test
add
add
je
add
push
mov
add
sub
pop
mov
push
lea
shl
xor
pop
testw
push
push
call
scas
jbe
pop
in
rolb
test
add
aam
movsb
add
scas
add
jae
add
out
add
sub
pop
pop
push
push
push
push
push
call
add
cmpsl
sub
jns
xlat
add
add
lret
test
cld
cld
outsl
bound
jb
sub
pop
pop
push
xor
not
add
pop
mov
push
push
sub
rol
dec
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
nop
push
mov
jecxz
fs
hlt
add
add
pushf
faddl
add
push
add
xchg
add
push
add
jae
leave
lds
add
xor
push
lea
sub
dec
pop
pop
push
push
call
add
add
in
repnz
clc
mov
cmpsb
pop
xchg
add
add
add
add
cmpsl
add
test
add
add
hlt
js
fstps
lret
add
jle
add
mov
add
add
faddl
lcall
push
push
push
call
add
popf
lock
add
popa
add
ja
jns
sub
out
add
mov
stos
add
incb
add
push
hlt
int
mov
out
fiadds
add
add
roll
add
repnz
pop
pop
pop
push
lea
push
push
lea
push
call
mov
loope
add
lock
in
addl
add
cltd
mov
xchg
add
add
ret
add
loop
mov
add
xchg
add
pop
push
sub
pop
leave
push
pop
ret
push
push
not
pop
mov
push
not
dec
pop
add
push
push
xor
pop
push
push
push
dec
lea
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
leave
cmp
cltd
add
insb
push
add
add
add
add
add
hlt
cmc
add
add
fcoml
jmp
add
add
mov
scas
jecxz
popl
sub
pop
mov
push
push
push
push
push
call
adcb
clc
add
add
mov
add
sahf
push
fcoml
xchg
add
add
add
pushf
fcomi
cmpsl
je
call
je
add
loopne
add
add
test
push
push
lea
push
push
push
push
call
add
pop
mov
push
aam
add
add
push
movb
lock
int
add
xchg
add
lahf
add
fcmovb
pop
mov
lea
sarb
nop
add
into
jmp
fwait
insb
sub
pop
pop
push
add
pop
lea
push
lea
push
push
push
push
push
call
cltd
cmc
mov
mov
add
stc
pop
rolb
cltd
mov
pop
add
jmp
add
sahf
xchg
sub
pop
sub
push
sub
sub
dec
shl
pop
mov
shr
push
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
lahf
xchg
rcll
cli
cld
add
push
jno
cltd
add
xchg
add
add
jmp
cmpsb
add
cmpsl
mov
add
mov
mov
add
loopne
mov
add
push
not
add
pop
pushl
push
push
push
push
push
lea
push
push
push
call
in
add
test
add
add
scas
rolb
movsb
lret
xchg
add
jge
mov
add
add
movsl
add
hlt
icebp
mov
lds
std
add
mov
xchg
lods
xchg
in
mov
mov
in
loopne
lcall
inc
clc
push
not
shr
pop
mov
push
add
shr
sub
not
pop
add
push
push
lea
push
push
push
call
add
mov
mov
mov
les
mov
lret
call
js
add
push
mov
jecxz
cmc
lret
push
add
mov
push
push
add
add
data16
add
mov
add
aad
fs
add
mov
jno
add
mov
add
repnz
out
cmpsb
sub
pop
xor
push
push
call
addl
add
xchg
jmp
icebp
mov
mov
fcomps
add
pop
mov
lock
sarb
mov
mov
sub
pop
lea
mov
push
push
push
push
lea
push
push
push
push
push
call
lea
add
addb
add
add
fnstcw
add
add
add
add
add
add
addb
mov
std
popa
push
add
mov
xchg
xchg
js
add
icebp
add
and
loopne
mov
addr16
lods
sub
pop
add
xor
push
push
push
push
push
push
push
push
call
leave
xchg
add
fwait
rcr
lret
add
outsl
add
out
add
shl
add
ret
imul
xchg
push
enter
ljmp
shll
sub
pop
rol
nop
push
shr
pop
nop
xor
push
push
call
movsl
les
add
cli
shrl
roll
fs
add
add
add
repnz
insb
jno
add
add
imul
loopne
add
std
add
pushf
add
add
add
mov
addb
into
stos
mov
mov
jae
roll
add
xorb
in
sub
pop
nop
nop
push
shl
sub
sub
pop
inc
nop
push
shl
add
add
pop
nop
push
push
push
push
push
push
push
push
call
add
roll
mov
in
add
data16
mov
incb
mov
out
add
add
add
lea
add
add
fldenv
imul
clc
data16
leave
sub
pop
cmpb
jne
push
rol
pop
add
nop
push
shr
shr
rol
xor
pop
nop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
xchg
cli
lods
mov
push
fdivp
rolb
add
add
push
add
add
iret
add
ret
add
mov
shll
mov
mov
add
add
add
add
mov
lret
add
std
add
loop
add
add
fldl
add
inc
or
test
add
add
fcomip
rol
ret
sahf
pop
nop
push
sub
pop
nop
push
add
dec
not
pop
inc
nop
push
add
dec
shl
lea
pop
nop
push
push
push
push
push
lea
push
push
push
call
xchg
mov
les
add
jl
add
mov
add
movl
addb
push
jmp
push
add
add
add
sahf
in
add
addl
outsl
stos
cmpsl
add
add
lret
xchg
add
shrl
lcall
jne
jb
xor
push
sub
not
ror
pop
jmp
mov
push
add
sub
pop
add
push
pop
movzwl
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
fstpt
add
add
icebp
mov
add
pop
mov
push
add
rolb
lahf
mov
sub
pop
mov
push
dec
sub
pop
add
push
rol
dec
dec
not
pop
mov
xor
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
lock
pop
add
call
push
lods
mov
add
std
fwait
add
in
push
add
add
rcl
add
movsb
mov
stos
aad
shrb
push
mov
push
xchg
add
add
cltd
add
js
in
fcomps
dec
nop
add
ret
cmp
pop
shl
xor
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
add
shr
lods
hlt
bound
add
sti
xchg
clc
mov
add
add
xchg
push
add
add
scas
cmpsl
fildl
add
push
stos
mov
call
add
stos
mov
add
popf
mov
mov
sub
pop
shl
push
add
shr
pop
xor
push
ror
rol
pop
shl
xor
push
push
call
test
add
add
add
sar
add
aad
fwait
ror
add
mov
mov
stos
add
pop
add
add
lcall
rcll
push
push
push
lea
push
call
pop
add
add
call
add
mov
test
cwtl
frstor
mov
imul
mov
add
out
add
add
add
js
icebp
add
jle
rolb
sub
pop
add
push
not
pop
pop
push
push
push
call
add
add
add
add
jo
test
mov
add
add
add
fst
mov
push
add
pop
push
add
sub
not
ror
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
add
xchg
movsb
test
xchg
push
mov
mov
std
pusha
mov
add
movsb
jnp
scas
arpl
add
jmp
pop
add
add
popf
imul
addr16
pop
jno
push
iret
stos
add
pop
pop
xchg
add
add
icebp
add
in
add
add
lcall
ret
push
lea
push
push
lea
push
push
push
push
lea
push
call
cld
movsb
out
mov
add
arpl
stos
negl
lods
add
loop
add
insb
add
add
push
sahf
add
jge
add
loopne
push
mov
push
push
call
add
mulb
into
lret
xchg
mov
in
add
fldl
add
mov
push
js
flds
pop
add
sub
pop
push
push
add
xor
pop
push
push
lea
push
call
pop
lcall
add
add
xlat
testl
ror
add
data16
fwait
mov
add
add
add
add
add
add
push
push
push
push
push
call
add
xlat
add
sahf
pop
add
jecxz
jbe
add
out
in
add
mov
enter
mov
pop
pop
cld
mov
add
lahf
add
add
push
pusha
add
aad
lods
pushf
cmpsb
in
sahf
add
popf
jl
loopne
sub
pop
mov
mov
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
lret
xchg
add
je
add
cltd
test
add
pop
add
sahf
add
fwait
add
hlt
out
add
shr
stos
mov
add
lods
mov
jae
sahf
add
lcall
jge
push
shl
add
not
pop
test
je
push
shl
pop
mov
push
push
push
lea
push
call
add
in
shr
ja
cmc
lds
add
add
add
add
faddl
mov
stc
int3
in
out
add
jns
mov
mov
xorl
add
fcomps
add
in
add
add
test
mov
sub
pop
test
je
push
lea
push
push
lea
push
call
rolb
add
rorb
push
mov
lods
rolb
js
add
add
add
pushf
xchg
add
add
mov
sub
pop
mov
push
add
shr
xor
pop
mov
push
lea
push
lea
push
push
call
add
add
popl
jle
add
add
bound
jns
lods
xchg
add
add
leave
orb
roll
add
mov
add
in
mov
push
js
jo
hlt
add
clc
add
add
hlt
add
lcall
pop
push
push
push
lea
push
lea
push
call
in
stos
add
add
lds
popl
mov
fstps
cmp
sti
xchg
fsubr
cld
add
add
add
out
add
add
out
add
mov
add
nop
mov
in
in
pop
inc
push
push
lea
push
push
push
lea
push
call
cltd
push
ret
mov
scas
mov
add
fcmove
mov
add
jns
stos
xchg
add
mov
lods
ficoms
insb
test
add
lcall
rorb
test
rorb
jp
add
push
sub
rol
pop
mov
inc
push
push
push
call
mov
add
test
imul
jne
jp
mov
add
int3
mov
fstpt
jne
jnp
add
add
pop
les
add
add
scas
xchg
sub
pop
cmp
je
test
jne
push
add
sub
lea
pop
xor
push
push
lea
push
call
notb
add
rolb
add
jnp
sarl
mov
push
fcmove
add
add
in
mov
add
mov
subl
push
lcall
ja
jae
xchg
add
push
add
xchg
ficomps
jp
loop
xchg
mov
sub
pop
pop
pop
push
lea
push
push
push
lea
push
call
xchg
mov
add
test
xlat
add
mov
pop
add
jp
xchg
add
int3
in
add
add
add
add
add
add
pop
loopne
mov
push
rolb
leave
add
fmul
xchg
add
enter
add
icebp
add
jp
add
stc
faddl
pop
push
add
rol
pop
leave
push
sub
inc
shr
pop
ret
push
lea
shr
pop
mov
inc
push
sub
lea
pop
cmp
jne
lea
push
push
lea
push
push
push
push
call
mov
scas
push
mov
int
fwait
aad
faddl
test
jo
enter
iret
scas
nop
in
les
iret
clc
add
add
add
lret
les
mov
mov
call
test
je
push
push
lea
push
lea
push
push
call
nop
add
into
add
into
add
mov
pop
add
mov
add
mov
jno
add
push
cltd
add
add
push
ljmp
mov
add
addl
pop
add
ficomps
add
in
pop
mov
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
add
add
add
add
add
add
popa
repnz
ret
add
xchg
add
mov
fsubp
in
out
into
cmpsb
mov
test
imul
xchg
lock
mov
fstp
add
mov
outsl
jle
in
fdivr
lcall
movb
loopne
test
sti
call
stc
rol
pop
mov
push
sub
inc
shr
shr
pop
test
je
push
sub
sub
add
sub
pop
mov
push
push
call
mov
add
loop
lea
add
add
jae
stos
fdiv
push
xchg
roll
in
mov
mov
imul
add
pop
add
jmp
add
jnp
add
clc
lcall
roll
shl
pop
cmp
je
push
add
sub
pop
jmp
push
lea
push
push
lea
push
lea
push
call
cmpsb
nop
mov
add
add
in
enter
lret
pop
xorb
add
add
add
ret
push
jecxz
ljmp
mov
ljmp
add
rclb
cmpsb
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
call
addl
ret
mov
add
pop
mov
xchg
in
xorb
push
xchg
add
std
mov
js
mov
lock
add
aam
scas
lea
add
add
add
sahf
add
add
add
leave
iret
clc
in
movl
lcall
push
push
lea
push
push
lea
push
push
lea
push
call
mov
out
jb
add
arpl
cltd
mov
mov
add
pop
cmpsl
aad
xlat
mov
pushf
lods
add
sahf
stos
add
mov
add
xchg
mov
pop
pop
loop
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
push
enter
add
add
mov
jb
add
xchg
add
imul
addr16
pop
add
add
add
add
add
lahf
pop
mov
fucomip
lods
cli
fnstenv
in
fdivr
lcall
push
inc
pop
ret
push
ror
pop
lea
push
sub
sub
shr
xor
pop
pop
pop
push
rol
add
sub
pop
pop
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
popf
mov
jmp
add
ljmp
int3
xchg
add
pop
imul
xchg
lods
or
push
add
add
jae
out
mov
jae
in
fcompl
push
sub
lea
pop
ret
push
push
call
addl
movsl
loop
test
mulb
popf
xchg
add
imul
jae
add
enter
mov
mov
pusha
add
mov
mov
clc
lcall
pop
push
sub
lea
pop
pop
push
inc
inc
pop
pop
pop
push
rol
xor
shr
pop
leave
push
rol
sub
pop
ret
test
jae
ljmp
push
test
ja
test
jae
mov
sub
push
fnstenv
test
push
test
push
fs
jno
jae
push
ret
bound
ret
push
jae
pop
mov
mov
dec
popa
std
push
rcrl
xchg
inc
and
cmp
dec
fiaddl
and
icebp
jecxz
cmp
cmpsl
js
cltd
je
inc
cld
mov
icebp
pop
mov
les
mov
jp
push
cmc
lcall
scas
jbe
adc
adc
push
daa
jmp
push
inc
mov
fildl
push
jnp
pop
lahf
jmp
lret
rorb
test
inc
out
pushf
lret
jne
not
add
sub
sbbl
xor
sbb
lods
sub
stos
push
test
adc
pop
int3
bound
sbbl
push
add
cmp
clc
cmovae
or
pop
out
inc
xor
rcr
popf
pop
mov
xor
cmp
sarl
pop
sahf
inc
jae
jnp
fwait
lods
mov
daa
jge
imul
and
stos
pushl
into
test
popf
das
mov
pop
out
sbb
lcall
imul
xor
hlt
cld
outsb
and
sub
arpl
inc
jb
dec
jp
lret
test
mov
push
frstor
mov
test
cmp
incb
add
pushf
lds
or
push
adc
add
repnz
subb
mov
test
or
mov
inc
mov
dec
clc
add
push
mov
ljmp
mov
sarb
divl
cmp
jb
or
fwait
test
lock
mov
jne
bound
sub
mov
imul
dec
sbb
mov
cmp
test
into
pop
jb
xchg
or
imul
sub
fadd
mov
ret
jo
lret
push
mov
insb
adc
cmpsb
lods
xchg
mov
fadds
idivl
or
jns
fdivl
addb
pop
xor
mov
lods
popf
pop
insl
ljmp
inc
xor
rclb
xchg
inc
push
aam
fucomp
and
adc
cmp
sub
jnp
cld
int
mov
sarb
inc
sbb
popf
lret
cld
loopne
dec
push
outsb
das
adc
jge
movl
std
or
xor
pop
lahf
and
stos
xlat
and
outsb
mov
ja
pop
scas
lret
mov
or
add
popa
adc
inc
je
jno
push
mov
out
push
pushf
in
pop
adcb
sti
cmpsl
rcll
pusha
das
fistl
jp
mov
xchg
adc
dec
hlt
and
sbb
and
xlat
push
xor
adc
sbb
jno
mov
jbe
xchg
inc
or
repnz
add
push
in
lods
xchg
push
test
les
fmulp
sbb
test
mov
es
stos
add
jbe
add
stos
mov
adcl
and
pop
pop
sub
movsl
inc
lcall
lea
rclb
add
fdivp
imul
jo
adc
dec
aam
movsl
dec
cmp
push
jns
mov
clc
mov
jge
mov
shlb
mov
nop
mov
ljmp
cmp
ss
into
push
push
lcall
std
shlb
dec
fcomip
pop
mov
repz
insl
dec
adc
sarl
cmp
add
outsl
xchg
mov
push
lea
mov
arpl
sub
out
fdivr
outsb
sbb
sub
pop
les
into
scas
js
jge
andl
ds
or
push
pop
das
shrb
xchg
mov
or
fmul
inc
cmp
mov
les
cwtl
mov
clc
imul
mov
pop
movsb
xchg
mov
xchg
pop
loopne
add
xor
popf
jg
iret
sbb
icebp
push
sub
jge
cltd
mov
jl
cld
cmp
int3
clc
pop
ss
mov
jle
adc
xchg
scas
fstl
in
cmp
call
xchg
rcl
in
jmp
mov
in
dec
dec
jo
sbb
add
push
mov
cli
cmc
leave
sub
mov
inc
cmpsl
jle
nop
shll
into
jns
xchg
cltd
push
push
or
ljmp
loopne
or
xchg
in
pop
fldl
push
lods
add
fnstenv
loop
sbb
stos
xchg
popf
inc
stos
outsb
sbb
and
xor
dec
pop
fwait
add
xor
inc
push
mov
and
aam
dec
xor
add
popf
push
cmc
dec
add
sub
dec
in
call
push
mov
lds
lea
jl
xchg
jns
mov
nop
pop
add
push
lcall
xchg
adc
or
jmp
pop
inc
cmp
push
xchg
popa
push
scas
push
sub
sbbl
test
hlt
push
inc
or
in
jns
xor
jae
push
imul
xor
push
sub
iret
fsubr
add
insb
std
inc
fistps
repnz
ud2
movsb
mov
lahf
outsb
daa
sahf
pop
mov
minps
sub
sbb
adc
or
jmp
out
movsl
mov
testl
xor
repnz
dec
fstpl
push
jmp
cmpsb
mov
cmp
cli
aaa
push
bound
mov
pop
mov
cmp
inc
jbe
xchg
and
out
dec
jmp
inc
loope
shll
sbb
ss
mov
in
in
inc
mov
add
or
mov
sti
xor
fstl
sub
push
xchg
dec
sub
out
add
orb
sbbl
or
mov
and
scas
inc
push
jg
jbe
pop
jge
loope
sarb
aas
stc
cmpl
adc
fwait
add
scas
mov
pop
jg
fsubrl
xchg
cli
ljmp
jl
cmp
push
jno
mov
xlat
sbb
mov
roll
sub
in
or
in
test
jb
xor
lock
mov
jp
cmp
mov
push
or
sahf
enter
adc
fstpt
out
pop
jecxz
jl
loope
jae
arpl
sahf
jnp
lock
out
hlt
pop
rcll
out
mov
push
popf
mov
dec
cmp
in
out
out
mov
fisttpll
or
mov
and
cmpsl
fldcw
pop
cmp
loopne
dec
stos
mov
or
jno
mov
mov
cmp
adc
cmp
iret
jle
lret
xchg
mov
int
xchg
or
mov
adc
sub
test
cmc
daa
or
xchg
mov
mov
scas
jnp,pt
inc
sbb
and
pop
fcomps
lods
add
mov
push
gs
xor
cmp
inc
icebp
cmp
bound
xchg
loopne
nop
sbb
lret
fmuls
fwait
rcrl
ljmp
mov
mov
clc
xchg
daa
jnp
pushf
loopne
aam
push
outsb
ds
aam
popa
jno
inc
sub
outsb
stos
clc
inc
sbb
arpl
fs
sub
out
sahf
dec
sti
ja
sbb
pop
repz
insb
fwait
lea
jmp
pusha
jne
mov
ja
ret
xchg
insb
cmpsb
push
or
dec
fwait
ds
pop
xor
rolb
cmp
push
push
push
push
out
cwtl
in
sbbl
mov
jp
lds
sub
sahf
aas
enter
fnsave
inc
sub
mov
jl
dec
ds
scas
and
test
fsubs
mov
ljmp
inc
movsb
int
sub
cmp
addr16
inc
sub
stos
jecxz
mov
jge
xchg
outsl
ret
push
scas
or
incl
pop
fsubrs
incl
movsb
jl
dec
pop
cmp
rorl
dec
dec
push
dec
push
or
adc
cmp
jbe
mov
jmp
test
mov
leave
pop
mov
push
pop
mov
jmp
fstpt
push
mov
movsl
push
push
stos
sar
rorl
mov
int3
xlat
daa
add
or
mov
xor
mov
add
pop
pop
push
lods
pop
fwait
jg
dec
lock
add
fnstcw
mov
xchg
push
mov
and
cmp
and
shrb
outsl
xchg
aas
fiaddl
clc
lret
xor
inc
in
fwait
es
dec
pop
and
jo
jecxz
fimull
sbb
insb
mov
adc
and
bound
jnp
iret
push
ljmp
and
push
pop
icebp
or
sahf
call
sbb
mov
add
aas
repnz
add
fisubl
pop
dec
out
pop
movsl
adc
out
or
gs
add
pop
jmp
loop
stos
outsl
push
adc
push
lea
in
sub
mov
push
arpl
fadds
ljmp
pop
pandn
mov
cld
hlt
and
gs
mov
pop
jb
sbb
test
inc
mov
out
fwait
test
push
and
jnp
sbb
dec
test
int
sbb
cmpsl
xchg
pop
add
int
sahf
sub
mov
sub
jns
push
les
sub
out
ret
test
mov
popa
push
int3
mov
insb
mov
adc
cld
or
mov
xor
push
enter
cmp
imul
pop
dec
scas
xchg
dec
dec
in
cmp
leave
cmpsl
push
add
mov
cmp
imull
call
cld
jg
fucomp
mov
add
push
push
scas
in
sbb
sar
repnz
je
out
in
and
adc
pop
dec
inc
xchg
mov
pop
xchg
enter
inc
and
or
jno
jb
push
enter
inc
imul
mov
jns
lods
dec
or
popf
adcl
fidivs
push
ds
ljmp
nop
xchg
int3
dec
inc
fldl
ljmp
mov
repnz
dec
out
idivl
cmc
inc
adcb
insl
lcall
mov
adc
and
mov
xlat
idivl
inc
fs
orb
test
hlt
mov
inc
mov
push
lds
mov
sbbb
inc
sbb
inc
sub
test
and
sbb
rcrb
rcl
scas
sub
push
dec
test
leave
xchg
xchg
lahf
cmp
adc
cmc
imul
mov
call
jo
jmp
jnp
mov
in
adc
push
adc
inc
icebp
or
mov
push
sbb
pop
popw
stos
sub
test
jge
cmpsb
aaa
in
shl
dec
xor
pop
test
cmp
aaa
adc
push
add
rcr
call
test
xor
push
pop
insl
inc
stos
mov
dec
ltr
jb
movb
iret
sbb
sbb
cltd
jmp
pop
xchg
inc
repz
test
inc
push
dec
mov
inc
aas
push
mov
push
cmpsb
insl
negb
cld
jge
iret
xchg
lds
mov
shrl
inc
adc
clc
cmp
xchg
mov
mov
pop
rcll
hlt
push
aas
ss
not
cmc
iret
clc
push
mov
jns
xchg
in
cli
jb
xlat
imul
fnsave
rolb
pusha
mov
sti
imul
xor
mov
push
lret
cmp
data16
insb
pusha
test
jmp
jno
int
cs
rcl
test
in
xor
fidivrl
cmpsl
fs
pop
push
mov
std
adc
sbb
push
aaa
iret
xor
push
popa
cmpsb
jg
out
fs
jae
movsb
icebp
lods
jp
mov
mov
add
or
jecxz
push
inc
mov
mov
mov
mov
fwait
jns
cmp
aam
and
mov
fwait
dec
sbb
xlat
sbb
xor
or
or
fldcw
dec
iret
ss
int3
notb
jmp
int
inc
jg
mov
out
aad
fwait
cld
pop
rolb
pop
loopne
mov
je
mov
sbb
loope
jg
push
cmp
adc
repz
daa
jae
lods
ja
xor
xchg
scas
jnp
es
fistps
mov
dec
inc
loopne
pop
mov
mov
dec
inc
pop
addr16
xchg
fwait
aaa
cmp
cmp
sahf
xchg
cs
mov
iret
clc
addr16
loopne
aam
stos
fnstcw
push
movsl
mov
outsb
andl
cwtl
cmpsl
mov
rorb
push
sub
ret
push
cmc
and
lea
cmpsl
pop
add
cmpsl
add
mov
cmp
add
mov
mov
icebp
sti
in
inc
popa
pop
push
pop
mull
jo
push
fs
sub
stc
xor
mov
jns
mov
sbb
sbb
or
std
sbb
mov
mov
xchg
xor
adc
scas
fsubs
adc
xchg
repz
add
ret
test
adc
add
rcrl
cmpsb
ljmp
push
cmpsb
popf
adc
cmpsl
cli
aad
in
ss
stc
push
jno
add
lods
in
int3
inc
push
xchg
dec
rorl
aaa
dec
push
cmpsl
cld
lahf
hlt
dec
ror
pop
mov
lret
cmp
maskmovq
divl
cli
fwait
loop
aas
mov
jo
stos
sub
out
xor
mov
lcall
test
push
movl
movsl
fsubl
sti
adc
mov
lods
movsb
sub
cltd
push
rcrb
adc
popf
mov
addb
adc
or
lahf
xchg
rcr
int3
fisttpll
jmp
popf
xor
pop
inc
inc
sbb
jecxz
mov
push
xlat
inc
dec
add
popf
ret
add
and
imul
sbb
dec
mov
xchg
in
fwait
xchg
outsl
jle
mov
mov
call
push
mov
mov
inc
into
pop
fwait
mov
or
rcr
addl
jns
stos
lcall
nop
aam
and
sub
and
lea
lods
xchg
push
jmp
ds
std
adc
mov
xor
xor
cmp
enter
test
shrl
idiv
insb
inc
sub
cld
movsb
clc
ret
subb
xor
in
fwait
xchg
int3
shrb
jo
or
dec
mov
mov
sub
mov
flds
inc
clc
gs
sti
repnz
dec
jno
xchg
aaa
cmp
shl
jo
les
pop
push
mov
mov
adc
sti
cli
jmp
pusha
ja
inc
test
mov
jb
dec
les
hlt
lahf
std
sbb
repnz
hlt
xchg
nop
sub
dec
shl
mov
notl
les
cmp
lods
aas
mov
mov
jmp
enter
negb
pushf
popa
mov
and
test
call
lret
pushf
rclb
jo
lcall
adc
push
dec
dec
imul
ja
mov
pop
push
cmp
cmp
arpl
inc
fcoml
push
push
push
movl
mov
sub
jno
out
cwtl
inc
xor
ds
pop
notl
adc
mov
sub
enter
orl
or
ss
out
dec
mov
or
xchg
push
or
push
and
sar
shll
push
add
sub
out
add
fisubl
in
outsb
leave
xchg
daa
mov
retw
je
push
cli
add
xchg
ds
fidivrl
popa
xor
mov
popa
jle
std
or
test
dec
addb
out
pushl
imul
in
lret
jne
xchg
pop
int3
clc
xor
sbb
xlat
fs
int3
pop
and
cmp
push
push
cmp
pop
mov
dec
push
test
fisubs
push
cltd
xor
stos
bound
dec
mov
or
adc
leave
jne
out
loopne
ss
lret
call
enter
sub
adc
ljmp
out
dec
pop
push
std
jns
dec
jle
movsb
dec
push
fnsave
pusha
outsb
mov
or
mov
lret
psllq
out
xchg
ja
ret
jmp
dec
sub
xlat
mov
mov
pop
xchg
adc
mov
mov
push
mov
sbb
or
push
sahf
push
xor
rolb
std
jbe
xchg
jmp
fwait
pop
inc
call
dec
add
rcll
rcll
ret
sahf
mov
and
xor
rclb
je
jnp
xchg
push
mov
mov
ret
xchg
out
adc
cmp
adcb
pop
jl
int
inc
push
dec
ja
aaa
cwtl
jl
loope
sbb
imul
push
pop
or
sub
in
mov
inc
mov
adcb
adc
push
jae
push
idivl
mov
inc
fisubs
add
push
or
push
dec
or
pop
js
roll
pop
mov
push
pusha
rcr
cmp
sub
mov
xchg
jp
clc
mov
xor
push
pop
lods
lret
leave
in
jne
loop
mov
insb
cltd
push
pushf
jle
je
inc
add
cmpsl
push
pop
add
repz
xor
je
or
cltd
inc
add
hlt
mov
sub
out
push
push
xchg
dec
and
ret
repnz
test
inc
and
lock
dec
pusha
dec
or
sarb
lret
dec
jmp
mov
cmp
cli
xor
xchg
pop
shl
mov
push
outsl
ds
cmpsl
adc
test
ret
jae
adc
inc
pop
pop
shl
bound
bound
sub
mov
test
shll
idivb
int
sub
xchg
aas
xchg
lds
dec
aad
sub
mov
pusha
dec
fldcw
inc
and
inc
cs
push
adc
or
sub
xor
inc
or
out
xchg
sbb
enter
subl
sub
push
push
or
stc
mov
call
fstl
xor
lret
sti
adc
fisubl
in
add
push
popf
mov
jne
imul
lods
outsl
mov
loope
shrl
insb
movsb
push
insl
cwtl
xor
dec
xor
gs
pop
int
cmp
imul
dec
dec
push
lods
daa
dec
nop
out
mov
test
sbb
sub
scas
jno
add
xor
mov
mov
jo
jmp
test
mov
xlat
pcmpeqw
test
out
mov
rcr
aam
adc
push
and
cmp
jl
mov
push
fs
and
xchg
ljmp
or
aad
push
inc
mov
push
jg
or
xchg
add
push
scas
or
sbb
pop
pop
sbb
push
jb
pop
hlt
mov
jnp
mov
enter
sbb
fsubrl
adc
xchg
or
sub
out
rorb
inc
xchg
out
sub
or
int
adc
ffree
rorb
ljmp
cmovle
pop
xorl
add
push
lds
sub
cltd
dec
leave
inc
pop
sub
jne
pop
jbe
jns
mov
dec
ret
aaa
std
cmpsl
cmp
mov
in
ds
mov
cmpsl
dec
ret
mov
xchg
pop
mov
jge
test
out
cmp
cld
pop
push
mov
inc
ficoms
sub
fldcw
sahf
fnstenv
sub
pop
and
rcrb
cmp
push
mov
mov
in
int
lea
loop
mov
mov
jle
push
movsb
push
jo
mov
pop
mov
cli
sbb
cmp
fdivrl
cs
cmp
push
jge
jecxz
lock
inc
or
mov
mov
lods
or
xor
lret
aaa
mov
pop
rclb
xor
repnz
mov
jb
xchg
add
imul
inc
cmc
mov
inc
pop
rorl
in
mov
mov
push
adc
sub
sub
movb
push
loope
adc
jmp
push
xlat
sub
xchg
gs
sbb
dec
xor
add
out
mov
stos
test
fdiv
stos
frstor
push
outsb
cltd
xchg
shl
mov
test
push
das
lret
inc
dec
cmp
negb
fs
fdivl
ror
mov
jnp
mov
pop
add
orl
dec
in
subl
fdivrs
clc
mov
insl
es
lods
push
mov
xor
sbb
sbb
je
mov
push
cmp
imul
push
pushf
add
daa
out
pop
push
insl
push
aaa
nop
stos
popa
push
adc
jno
push
mov
adc
dec
cmc
cld
mov
cltd
add
aad
pop
dec
inc
add
jmp
and
insb
jl
out
mov
data16
test
movsl
cli
sbb
aas
xchg
in
lahf
pop
leave
jne
cmc
xchg
mov
out
dec
mov
inc
push
mov
and
movsl
add
idivb
or
sbb
xor
test
mov
sbb
sbb
enter
jle
loope
aaa
pop
loope
ret
fwait
sub
xor
mov
and
shrb
aad
movsl
xchg
xchg
push
cwtl
cmp
and
mov
or
mov
icebp
ja
es
or
sbb
daa
pop
dec
cmp
pop
negb
popa
lret
pop
mov
enter
sti
pop
push
std
mov
xor
rclb
jecxz
jnp
imul
add
lahf
popa
pop
mov
repz
xor
lcall
pop
cmpsb
cmpsb
sub
pop
std
dec
xchg
inc
mov
test
leave
imul
pop
mov
cmp
lock
xor
adcb
outsb
add
pop
lock
cld
jg
subb
or
lock
in
push
outsl
cltd
add
mov
or
adc
inc
xor
dec
roll
jns
push
sbb
and
push
ja
cmpsl
cwtl
sbb
pushf
mov
insl
cld
pop
jmp
sub
icebp
xchg
lcall
lahf
xlat
in
sbb
mov
ds
push
adc
push
dec
stos
adc
push
adc
mov
in
test
aam
inc
fidivrs
and
or
mov
js
jmp
int3
jbe
clc
sbb
jmp
fildll
jp
sub
sub
outsb
adc
jno
dec
cmp
cmpsb
xchg
test
stc
mov
popf
clc
std
pop
pop
das
and
leave
push
mov
and
popa
xor
mov
cwtl
sub
in
mov
dec
into
jne
mov
xchg
xchg
lcall
jl
mov
dec
mov
sahf
cmpl
ds
sub
int
mov
push
mov
push
jns
xchg
test
xchg
mov
sbb
fistps
sub
sub
inc
push
cvtpi2ps
cmp
out
nop
push
sahf
cwtl
jbe
mov
jno
int
inc
dec
shll
and
mov
or
lds
sahf
out
jne
xchg
jmp
sbb
mov
mov
mov
xchg
mov
xlat
imul
int
pop
pushf
out
popf
inc
in
push
adc
sub
leave
and
mov
in
iret
movsl
jbe
and
loope
push
fsub
ds
xchg
stc
lret
fwait
pop
inc
filds
and
shr
push
es
dec
sarb
inc
add
out
jbe
and
adc
or
outsl
mov
out
sbb
adc
loop
mov
inc
mov
fimuls
int3
sub
mov
pop
push
outsb
sub
dec
jne
mov
or
add
div
loop
and
jle
mov
movsb
lahf
jl
xor
shlb
test
ss
sbb
dec
xchg
leave
dec
dec
xor
mov
push
aaa
sub
dec
inc
inc
adc
mov
pop
cmp
push
xchg
idivb
jp
push
xchg
and
or
mov
rclb
sbb
mov
ret
repz
js
fldlg2
jno
fnstenv
cmp
or
push
stos
mov
aas
aaa
jle
xlat
inc
adc
cmp
add
outsl
and
adc
fists
and
jmp
dec
in
jecxz
cmpsl
adc
test
stos
adc
mov
outsb
jmp
call
pop
pop
cmc
jle
aad
rorb
push
mov
push
stos
stos
inc
dec
mov
das
pop
sbb
pop
mov
inc
pop
jnp
mov
mov
add
sub
fcmovbe
ret
push
fstpl
jp
push
adc
fdivs
fistpll
leave
jl
cmc
add
lret
leave
pop
movsl
cmpsl
in
and
xacquire
hlt
gs
push
stos
mov
je
icebp
jns
rcr
pushf
adcl
sahf
in
notl
sbb
mov
test
jmp
icebp
dec
xor
movsl
adc
and
cmc
and
push
jbe
xchg
add
sti
xchg
arpl
jge
imul
jae
xor
ret
cmp
sbbl
or
push
fsubrs
inc
jbe
test
repz
fdivrl
pop
cmp
outsl
jns
cmp
repnz
push
add
mov
fldenv
mov
push
jl
sub
imul
outsl
mov
pop
push
lock
push
dec
push
xor
dec
inc
sbb
lcall
pop
jno
pushl
dec
xchg
sub
mov
mov
js
imul
pop
mov
sbb
mov
inc
popa
inc
jns
loopne
jle
sub
cltd
jecxz
cmpsb
les
push
jmp
pop
jge
aam
and
out
push
jg
mov
xchg
adc
jnp
out
pop
dec
cli
cmp
push
scas
mov
xchg
cmpsb
rolb
daa
scas
test
cmp
push
and
jo
mov
scas
add
mov
bound
rclb
data16
and
test
mov
jecxz
push
dec
es
rcrb
test
loopne
or
int
mov
shl
out
dec
mov
nop
push
xlat
or
push
stc
repz
pop
ret
pop
mov
pusha
dec
fisubrl
add
add
aas
out
insl
mov
lret
mov
adc
loopne
cwtl
jp
mov
imul
dec
sbb
mov
cli
pusha
pop
sub
cmp
pop
inc
adc
arpl
rcr
loopne
aad
dec
mov
std
cli
pusha
mov
in
or
and
or
lret
xor
je
in
loopne
jno
cmp
test
loop
sub
test
add
stos
jno
and
dec
je
inc
jb
dec
cld
std
dec
pushf
jnp
fldl
rep
inc
or
lock
stos
js
sub
test
out
pop
cld
inc
mov
loopne
cmpsb
shll
push
or
dec
iret
lahf
pop
cltd
inc
jge
fcomip
out
iret
push
movsl
ret
mov
pushf
pop
lea
js
adc
push
lahf
xor
cmp
pop
dec
ret
adc
imul
cmp
cmp
pushf
jns
jnp
cld
mov
and
repnz
dec
gs
daa
mov
or
xchg
mov
int3
pop
mov
dec
bound
test
adcb
cmc
in
add
divb
nop
test
ret
sub
lcall
sub
movsl
inc
mov
xchg
add
xchg
clc
movsb
pop
adc
addr16
into
mov
lret
test
shlb
out
pop
sub
in
add
xor
mov
popa
out
insl
mov
lahf
in
enter
adc
push
imul
sub
cmc
fldcw
adc
test
ljmp
leave
adc
test
xchg
scas
or
xchg
adc
jmp
idiv
mov
cmp
fs
lods
cmp
lods
inc
out
into
xchg
sbb
push
sarb
dec
sub
mov
lcall
outsl
loopne
mov
pop
jp
mov
mov
stos
mov
andb
fbstp
int
and
stos
xchg
sahf
imul
fs
stos
xchg
inc
jecxz
xchg
mov
fwait
mov
push
jl
orl
repz
pushf
into
sti
stos
inc
jo
pop
xorb
andb
mov
sub
ljmp
sbb
adc
mov
xchg
sarb
cs
testl
pop
jl
cmpsb
cmc
jno,pt
and
imul
xchg
dec
inc
jo
xor
rcll
test
push
jns
pop
inc
xor
cli
das
xchg
dec
repz
loope
cwtl
mov
fidivrs
std
mov
je
pop
adc
sub
movsl
idivb
inc
dec
add
push
jne
in
hlt
xchg
movsb
jl
js
jne
mov
outsb
adc
pop
mov
stc
pop
xchg
and
call
dec
test
inc
lret
cli
enter
lret
xchg
adc
xchg
cmpsl
and
adc
ljmp
insl
pop
stos
sti
pop
popf
je
adc
repz
scas
popa
lret
mov
gs
stos
sbbb
jge
push
cmpsl
push
es
cld
cmp
or
call
out
mov
add
push
adc
add
or
dec
adc
mov
jmp
test
inc
movsb
call
mov
fs
sbb
sbb
adc
xorb
inc
sbb
mov
mov
fstl
loope
sbb
js
lret
inc
push
push
inc
lods
leave
mov
xchg
push
fsts
jns
sbb
scas
sub
icebp
lret
add
movsb
inc
inc
fsubrl
mul
adc
dec
cmp
inc
out
push
mov
and
push
in
pop
jecxz
mov
mov
mov
lea
fstps
add
or
dec
sub
enter
sub
jo
int
idivb
pop
dec
lods
pop
aaa
sbb
movsb
cs
inc
cmp
enter
loop
inc
mov
mov
inc
movsb
cmp
loopne
sbbl
out
or
inc
mov
inc
cmp
mov
rorl
or
aad
leave
or
and
enter
jno
ss
lea
inc
shr
lods
pop
es
loopne
mulb
inc
xchg
lret
aas
stc
pushl
ss
sbb
mov
jp
popa
cld
push
or
ds
mov
mov
mov
adc
gs
fnstcw
outsl
push
adc
adc
adc
lods
gs
jbe
inc
fiaddl
sbb
inc
rcll
xor
inc
sub
pushf
sub
push
jmp
popf
mov
add
add
fcoml
dec
outsb
shrb
mov
gs
loop
aam
ljmp
inc
inc
mov
js
in
aad
mov
push
test
push
lret
mov
cld
pop
je
jae
ljmp
push
repz
jmp
movsb
ret
or
out
cmp
and
fimuls
xchg
js
push
shll
push
cmpl
addr16
pushf
inc
inc
add
dec
stc
fxam
jmp
leave
jmp
jb
and
jbe
ss
mov
adcb
leave
mov
mov
mov
out
lcall
mov
mov
adc
jp
jle
inc
das
gs
xchg
dec
push
cld
jmp
push
ljmp
inc
xchg
inc
cmp
lock
inc
fnstsw
cmpsl
mov
outsb
jg
cmpsl
dec
xor
test
std
push
enter
mov
jo
in
sub
mov
push
sbb
stos
push
dec
mov
jmp
lock
and
jmp
lcall
movl
lret
dec
ja
xchg
mov
ds
xchg
mov
nop
rdpmc
imul
cltd
xor
sbbl
xor
pop
and
orb
inc
fsubl
inc
out
jae
scas
mov
movsl
xchg
aam
cmp
add
popl
xorl
test
pop
in
popa
pop
xchg
mov
sarl
mov
aam
fmul
aam
in
inc
shrl
sub
call
push
cmc
jecxz
xlat
inc
push
sbb
jns
mov
xor
ret
cmpsb
dec
jmp
ret
mov
xchg
jno
cli
jg
add
mov
aam
hlt
jno
fisttpl
bound
mov
jge
mov
pop
xchg
data16
sbb
in
insl
test
jl
inc
fimull
outsb
shll
cld
aad
mov
xor
test
dec
decl
mov
xchg
pop
js
inc
push
mov
loope
idivb
xchg
scas
push
mov
shlb
mov
mov
clc
and
add
daa
arpl
popa
out
aaa
add
inc
jns
and
decl
outsb
rolb
pop
jp
les
cwtl
lock
gs
or
dec
loope
jbe
testl
xchg
pop
push
loope
sbbl
sub
jb
jae
mov
rcrb
outsb
stc
xorl
cmpsb
aas
push
jo
mov
pop
lods
or
sub
xor
xor
imul
or
insb
in
or
pop
cwtl
xchg
xchg
bound
fidivrl
test
inc
hlt
mov
add
mov
mov
sub
push
cmp
push
fbld
test
stos
repnz
fldenv
ss
addr16
loope
mov
or
loope
bound
push
xchg
sub
arpl
or
js
and
dec
push
pop
popa
sub
addl
fldt
cld
je
js
loope
dec
ja
adc
jno
push
in
inc
xor
inc
cli
pop
mov
jle
cmp
dec
fwait
mov
push
outsb
bound
sub
xor
xchg
jle
fsubl
lret
xor
imul
jo
inc
test
mov
int
add
lods
outsb
js
xor
out
rol
movl
push
cmp
pop
lds
stos
cmpsl
adc
imul
or
and
addr16
dec
lcall
pop
xorb
aas
or
loop
mov
cmp
in
mov
aas
or
mov
cltd
insl
and
jecxz
shl
jg
fcoms
rcl
cmp
out
daa
inc
xor
mov
cli
je
mov
jno
fstpl
mov
dec
popa
loop
pop
int3
out
je
dec
and
jno
repnz
push
sbb
outsl
mov
push
outsl
out
push
sbb
lret
dec
outsl
sub
push
pop
dec
jmp
sti
lods
fidivs
dec
adc
stos
test
out
es
jno
mov
sub
pop
andl
rcrl
mov
loope
mov
sub
add
out
xchg
inc
sarb
jmp
shlb
imul
xchg
dec
mov
dec
pusha
mov
pop
sbb
test
sub
daa
sub
repnz
cmp
push
andl
cld
pop
mov
sbb
out
stos
cmpsb
push
xorb
push
iret
add
pop
stc
jne
lret
push
cmp
push
stos
sbb
jnp
and
mov
add
mov
sbb
push
sbb
pop
negl
lods
mov
fadd
inc
scas
sub
aas
loop
xor
stc
mov
or
push
cmp
xor
push
test
push
mov
fmull
ds
fcomip
and
pop
mov
push
es
imul
xrelease
xchg
push
popl
scas
insl
outsl
cmp
sbb
rclb
cmpl
push
rclb
xor
cmp
xor
int
cmp
cltd
mov
call
inc
movsb
mov
xor
fwait
call
xchg
lea
imul
xchg
rcll
test
or
call
aad
dec
push
stos
cmpsb
fcmovnb
popf
repnz
or
jno
and
and
sahf
cltd
sbb
test
mov
jne
xchg
add
sti
neg
fists
mov
xchg
aam
mov
aad
fstpt
int3
xchg
cltd
push
sbb
add
inc
lahf
pop
cld
and
sub
xchg
movsl
lock
cmpsb
push
mov
jno
sar
mov
clc
ss
pusha
pop
dec
dec
and
inc
jnp
dec
insb
loop
xor
mov
push
lock
int
lcall
or
dec
mov
mov
scas
push
mov
pushf
sub
insb
push
mov
popa
pmulhuw
xchg
sbb
lock
sahf
dec
cwtl
xchg
mov
test
or
ret
rorl
lret
inc
dec
sub
iret
stc
push
dec
pop
jg
fwait
add
mov
cmp
push
or
jge
mov
and
imul
lcall
pushf
das
fldenv
loope
xor
arpl
mov
ss
mov
ja
jl
roll
xchg
or
xchg
mov
inc
subb
dec
mov
test
push
fwait
jae
iret
xchg
sbb
icebp
lcall
mov
outsl
and
pusha
adcb
mov
cmc
vmulps
or
jge
xchg
lret
pop
inc
insl
mov
xchg
jmp
sbb
inc
push
sbb
jnp
sub
stos
xchg
mov
mov
jge
cmp
das
sbb
jae
mov
inc
jp
push
jnp
in
outsl
in
daa
dec
add
xorb
mov
cltd
rolb
inc
push
or
dec
jecxz
icebp
sbb
les
and
and
cltd
iret
jbe
ficomps
in
mov
or
mov
push
loopne
jo
push
or
lods
sbb
cmc
dec
inc
arpl
push
mov
ja
sub
cwtl
sahf
jg
inc
push
gs
push
shrl
push
sahf
or
mov
cld
hlt
decb
outsb
nop
add
ja
sbb
ljmp
mov
fbld
pop
pop
xchg
pop
out
aaa
or
test
sahf
out
aas
cmp
iret
mov
popf
insb
inc
inc
frstor
leave
push
sub
cmpsl
int3
neg
mov
push
aad
ds
mov
adc
fwait
lea
xchg
rsqrtps
jne
movsl
mov
xchg
push
and
loopne
out
xchg
pushf
outsl
pop
inc
cmp
inc
ficoms
or
sbb
icebp
notb
pop
ret
test
jge
hlt
xchg
or
ss
fucompp
js
out
push
adc
dec
push
mov
xor
adc
xchg
adc
stos
mov
test
jae
mov
and
xor
decb
mov
nop
jae
pop
inc
insl
fwait
adc
push
orl
pop
pop
inc
daa
lahf
inc
in
in
cmp
sbb
cmp
push
sub
jmp
enter
pop
add
xchg
scas
imul
lods
fwait
jmp
lret
add
repnz
int
in
dec
fucomi
pop
iret
repnz
or
sbb
sub
jo
dec
xor
sahf
lea
inc
int
das
mov
push
push
sub
fistpll
pop
pop
leave
fnsave
ret
jmp
adc
cmp
fnstenv
xor
lods
lods
ret
popa
imul
bound
das
lret
adc
shll
mov
sub
mov
mov
and
xor
cmpps
mov
stc
int
jns
mov
inc
xor
push
je
scas
fs
jle
mov
sbb
into
mov
push
out
xchg
inc
mov
loopne
push
inc
rclb
or
pop
push
pop
cli
sbb
push
push
mov
jmp
cmpsb
dec
sbb
push
jno
int
xlat
xorl
je
mov
push
std
mov
and
ljmp
es
mov
movsb
mov
pop
xor
and
lods
cmp
mov
or
pushf
out
bound
lods
sahf
js
maxps
test
cmpl
inc
testl
fbstp
je
adc
popf
rcll
mov
decb
cmp
arpl
ret
pop
stos
jecxz
xchg
lods
dec
pop
push
lret
or
mov
lahf
mov
iret
or
lret
or
adc
jo
bnd
ja
test
dec
inc
lcall
pusha
jge
inc
mov
mov
sbb
aam
pop
jp
hlt
dec
adc
into
push
and
mov
sbb
mov
inc
mov
cli
mov
mov
pop
adc
jb
outsb
sbb
pop
sarb
sub
in
sub
adc
out
loope
std
fidivrl
mov
mov
clc
cli
cwtl
push
xor
xchg
xchg
clc
out
test
mov
lahf
pop
or
mov
clc
inc
fidivs
fwait
jge
out
dec
cmpsb
jne
std
outsl
gs
sbb
je
pop
jo
sub
mov
bound
movsb
sub
jo
add
lds
ljmp
lret
loop
in
mov
mov
jnp
shrl
divb
sbb
xchg
cltd
jne
and
out
bswap
pop
push
push
push
pop
push
cmp
dec
push
pop
and
arpl
inc
cmp
xchg
xor
divb
xchg
outsl
jmp
loopne
xor
cmc
fldcw
out
jecxz
push
mov
and
sub
mov
imul
in
xchg
cli
push
add
loopne
cmpl
ja
nop
pop
scas
sub
xchg
pop
fcmovu
shr
xchg
adc
cmp
iret
insb
lret
mov
stc
fistpl
jecxz
dec
xor
movsb
push
pushf
ret
dec
mov
jp
mov
pop
adc
stc
pop
sub
fbstp
dec
push
fs
xchg
daa
data16
cld
lret
aam
inc
outsl
dec
sbb
cmp
mov
add
and
mov
into
adc
imul
je
dec
jmp
daa
shr
sbb
loope
inc
xchg
ss
sbb
repnz
pop
cli
xchg
ja
push
xchg
dec
out
lahf
pop
test
test
cs
mov
pop
test
mov
or
adc
es
cld
aaa
icebp
mov
pop
std
jbe
js
scas
mov
in
dec
sub
movsb
pop
in
mov
xchg
and
ret
jp
cmp
fwait
lret
loop
dec
int3
lods
test
incl
mov
adc
movsl
std
outsl
in
cmp
push
jno
shl
or
inc
fiaddl
imul
xorl
rcrb
dec
mov
sub
push
mov
cs
ret
push
xor
loope
aaa
cmp
notb
push
jne
mov
icebp
mov
nop
adc
test
jp
sbb
ds
pop
mov
imul
mov
enter
mov
movsl
movsl
dec
je
mov
mov
pop
push
test
cmpsb
orb
dec
pop
cld
xor
add
stos
daa
cltd
mov
jo
adc
mov
mov
xchg
sbbb
ds
add
ja
iret
sti
stos
ret
and
inc
insl
shrb
pop
cld
jg
std
enter
shlb
popa
push
add
out
sub
test
rorw
add
xor
jge
loopne
push
rcrb
add
mov
stos
insl
sbb
mov
add
mov
pop
aam
mov
adc
out
jb
adc
lods
cmp
push
shll
imul
pop
jnp
cmpsb
dec
add
dec
sahf
inc
test
push
jne
add
loope
aad
ss
xchg
pop
jne
jmp
fisubrl
xchg
push
bound
inc
push
mov
into
inc
cmpsb
mov
in
outsl
dec
and
xor
or
inc
jecxz
sub
sub
mov
inc
or
fidivl
rcll
jb
les
mov
sti
dec
outsl
or
test
test
dec
fisubrs
test
sbbb
sbb
out
dec
nop
xchg
outsl
lods
adc
mov
mov
xor
repz
sbb
outsb
clc
jae
bound
sbb
adc
popa
jge
xchg
sbb
repz
add
mov
mov
fldenvs
sub
jle
inc
ja
pop
lea
add
aam
sub
mov
pop
push
adc
adc
in
adc
loopne
jle
call
loopne
daa
cmp
mov
mov
lods
add
in
mov
in
data16
dec
lahf
into
outsl
push
pop
lock
jnp
xor
repnz
sbb
aam
mov
ss
dec
cmp
movsl
dec
xor
mov
shl
jne
jb
or
add
and
xchg
popa
clc
lods
adc
inc
sub
mov
leave
dec
adc
push
push
rcrl
fistpll
cmc
pop
adc
popf
incb
xor
pop
sti
ljmp
daa
dec
cmp
adcb
dec
xchg
cld
xchg
std
aaa
scas
push
cli
push
stos
sub
mov
andb
cmpsl
cmp
cmp
loop
pop
mov
sbbb
aam
pusha
mov
loopne
mov
std
cmp
or
adc
bound
push
push
push
repz
aaa
mov
adc
dec
out
cmc
push
mov
lock
push
inc
cld
or
xchg
cmp
cmp
adc
lea
inc
or
adc
js
xor
mov
and
test
lods
cld
mov
fucomip
lods
cltd
out
cmp
push
lds
cmp
scas
jae
dec
aaa
daa
mov
cmc
aaa
imul
cmp
outsb
or
repnz
push
jo
das
xchg
xor
call
inc
push
push
sbb
popf
mov
ficoms
icebp
pop
int
mov
clc
stos
test
add
or
hlt
or
pop
ss
es
add
int
inc
cmp
js
adc
sbb
out
test
xchg
cmpb
xchg
cmpsb
cli
add
repz
sub
or
mov
fistl
xchg
sbb
stos
std
ja
or
sbb
xor
ss
test
sub
pop
test
and
adc
jne
inc
and
push
cs
jecxz
jnp
mov
pop
sbb
outsl
pushl
jns
push
dec
jo
cmp
and
push
adc
add
call
scas
test
cmp
es
gs
bound
mov
xchg
and
cld
mov
jb
inc
fwait
xor
and
mov
mov
emms
enter
inc
filds
adc
push
inc
mov
jo
out
test
dec
arpl
sbb
ja
sar
cs
fisttpl
inc
inc
rorl
or
iret
xlat
jns
fwait
int
cmp
sarb
mov
ret
nop
in
sub
orl
mov
pop
sub
sbb
jno
aaa
or
pop
dec
cmp
push
movsl
push
push
mov
push
cmp
and
lahf
adc
enter
mov
add
loopne
loope
daa
push
das
push
dec
sub
mov
sub
push
mov
xchg
xabort
sub
push
sub
and
int
inc
stos
xlat
xchg
ja
push
lret
add
or
rorl
mov
iret
out
cmp
push
mov
and
add
popf
push
jle
fsub
mov
lods
stc
cli
pop
in
mov
and
mov
bound
out
sarl
mov
mov
lds
mov
out
push
daa
cmpsb
mov
lret
inc
sub
add
mov
mov
xchg
pop
ds
inc
and
pop
scas
or
and
lret
bnd
xor
pushf
sub
popa
jmp
cmp
ja
cmp
cmp
push
testb
cmc
sub
xor
jbe
into
pop
adc
aas
das
inc
ret
jp
cmpl
dec
lcall
das
enter
dec
adc
xchg
push
mov
mov
repnz
sub
jnp
jle
out
adcb
pushf
nop
adc
dec
cwtl
shrl
je
dec
into
mov
es
rcrl
or
or
cmpsl
scas
negb
jnp
aam
std
mov
lock
add
sub
mov
ret
mov
mov
movsl
jle
and
test
movsl
and
movsb
or
into
push
ret
std
scas
inc
xlat
jecxz
pop
das
fcompl
jb
scas
jno
add
xor
js
mov
mov
stc
mov
mov
or
cmp
jl
pop
data16
jno
lret
dec
ret
xchg
sub
xor
pushf
jp
xchg
xor
popa
lds
inc
jge
cmp
cli
lret
and
mov
inc
pop
iret
or
push
wbinvd
fdiv
adc
nop
shrb
inc
cld
iret
push
xchg
mov
shll
add
mov
push
inc
adc
std
in
lods
xor
repz
fnstcw
dec
mov
hlt
xor
nop
inc
sti
lock
mov
sub
pop
push
fisttpll
cld
rorl
cs
sti
ds
movl
or
push
mov
cwtl
stos
lret
cs
je
icebp
aam
xchg
and
add
int3
shlb
sbb
push
cmp
sbb
lods
icebp
push
or
mov
xorb
fwait
lret
xchg
adc
lahf
bswap
and
mov
cmp
jnp
and
mov
loop
push
ja
decb
and
cmovbe
loopne
iret
or
jae
mov
xchg
mov
or
movsl
adc
adc
push
shr
jmp
push
xor
stc
loopne
popa
vpunpcklwd
movsl
or
sub
and
lea
fs
bound
mov
and
sbb
aam
mov
pushf
xchg
fdivrs
sti
sbb
or
xor
loop
sbb
and
out
sahf
inc
jge
sbb
test
aad
movsb
xchg
mov
pop
or
inc
into
cmc
push
or
and
sar
in
std
sbb
and
in
push
adc
jp
negb
out
lea
inc
or
mov
data16
fisubs
es
out
push
mov
stc
lods
frstor
mov
lods
sbb
xor
stos
in
pop
cmp
fimull
int3
iret
jle
mov
or
sub
push
xlat
shr
sarb
or
mov
dec
dec
test
cmp
das
in
jl
and
lret
lock
es
addr16
cmc
fmull
jge
pop
rclb
xchg
lds
mov
sarl
mov
enter
dec
popa
mov
ds
lea
fistpll
addr16
add
lcall
mov
xchg
insb
xchg
mov
movsb
adc
lods
pop
pusha
push
sub
push
push
push
jae
xchg
stos
dec
mov
jae
popa
stc
sbb
fdivr
out
sub
and
out
loopne
clc
mov
push
movsl
inc
xor
push
fsubrs
jnp
cmp
or
imul
scas
xchg
insl
push
ss
add
cmp
xor
shll
cld
in
inc
loope
sub
cmpl
das
sarl
sahf
shrb
subb
mov
cmp
xchg
push
cmp
xor
pop
sub
fcmovbe
dec
dec
pop
adc
lea
cmp
cmp
fs
inc
das
mov
in
xor
cmp
pop
push
xor
jae
repnz
fbld
pop
rolb
dec
push
cmpsb
adc
shl
fbld
out
scas
insl
lods
shrb
adc
push
lret
stos
lret
insb
pop
pop
loop
sub
fcmovnb
jmp
adc
push
popa
adc
decl
fidivs
sbb
or
orl
jns
lahf
add
xchg
sub
rorb
lds
or
mov
out
mov
push
dec
es
jg
nop
sub
mov
ret
add
fistpll
sub
sbb
imul
mov
mov
jl
xchg
inc
out
sbb
dec
lods
mov
cmpsl
insb
xchg
dec
loope
or
jge
sub
fildl
push
aad
mov
jo
push
loope
mov
maxps
jae
mov
aaa
cmp
and
add
sub
dec
add
cmpsb
sub
pop
push
xor
sbb
mov
call
fisubrl
and
mov
adc
repnz
mov
and
pushaw
mov
lea
jg
xor
aam
mov
mov
inc
in
lods
or
rcr
add
jb
pop
mov
aad
cmp
pop
mov
xlat
xchg
les
cs
mov
adcb
aas
mov
and
adc
dec
aaa
imul
push
lods
stos
in
loop
mov
fld1
adc
loopne
sbb
daa
add
xchg
sbb
icebp
mov
out
insl
sub
test
mov
jg
nop
mov
mov
adcl
mov
mov
repz
jg
cmp
and
loopew
int
jg
jp
mov
add
sbb
jb
shll
sbb
inc
xor
cmpsb
aas
sbb
imul
xchg
je
into
mov
xor
push
sbb
lret
jg
in
xchg
in
cmp
push
test
int3
cli
lret
addr16
push
adc
cmp
loop
hlt
xlat
dec
pop
in
ds
xor
fdivs
and
or
bound
inc
sub
rclb
jne
shlb
iret
sub
pushf
loop
cmc
sub
sbb
outsb
shrb
jbe
mov
push
sub
inc
cmc
in
adc
sti
mov
imul
mov
add
int3
shlb
pop
repnz
sbbb
xor
xor
fldt
inc
adc
shrl
fwait
push
scas
das
xchg
lahf
or
mov
sbb
cmpsb
mov
add
in
jne
push
and
aas
inc
mov
popa
and
adc
fists
sbb
addl
negl
mov
jne
jl
jmp
push
xor
fdivl
mov
arpl
jno
push
mov
je
pop
ljmp
adc
mov
mov
cmp
jo
test
pop
pop
fsubrl
mov
int3
test
push
or
outsb
loop
sarb
cmc
loopne
cmp
and
inc
sub
nopl
xchg
xchg
dec
lods
add
inc
lret
test
cs
mov
sarl
das
hlt
ljmp
test
lret
dec
sub
or
sbb
sti
push
in
clc
push
mov
sbb
push
movsb
push
je
jne
xchg
jle
call
cmpsb
sub
xor
mov
xor
psllw
pop
pop
cmpsl
adc
movsl
std
jp
add
adc
add
outsb
cs
mov
adc
push
lods
jle
push
idivl
xchg
movsl
inc
mov
inc
xor
adc
and
sub
aam
lahf
jecxz
mov
xchg
gs
shlb
and
add
adc
cmpsb
sbb
pop
push
fcoms
ret
aas
push
cmp
adc
or
lods
mov
push
lret
in
scas
mov
in
fldt
lea
daa
and
and
xlat
int3
mov
in
and
xchg
sub
jp,pt
mov
sub
loope
rcr
xchg
testb
lcall
cmp
push
mov
ljmp
lods
outsl
pop
jo
ss
sbb
adc
mov
mov
mov
rcll
imul
sub
jbe
and
push
pop
xchg
cltd
xchg
repz
inc
jne
jnp
lret
push
jnp
sub
mov
leave
and
pop
sbb
outsl
adcl
mov
mov
xchg
xorl
xlat
fildl
lcall
enter
pusha
sub
pop
js
ret
push
lea
icebp
pop
cld
in
loopne
cmc
dec
insb
inc
cmpsl
add
mov
inc
and
push
out
inc
adc
bnd
mov
dec
iret
mov
sbb
cmpsb
push
fcompl
mov
add
xchg
mov
out
inc
push
push
mov
test
or
das
nop
je
xor
lret
xor
data16
lods
outsb
xor
dec
mov
dec
cld
rol
pop
dec
jle
jnp
incl
lods
sarl
call
pusha
shll
adc
cwtl
jg
out
fldt
jbe
mov
cmp
pusha
test
cmpsl
movsl
mov
jge
into
sub
into
mov
loopne
cmp
js
push
lahf
fdivs
adc
stc
stc
jne
adc
lock
icebp
mov
inc
push
and
cmpl
loop
sbb
cmp
dec
bound
in
mov
cmc
xchg
out
dec
or
cld
movsb
mov
push
adc
mov
mov
dec
pop
pop
in
lret
ss
cmp
enter
pop
scas
dec
cwtl
test
lock
xchg
mov
adc
adc
sahf
addr16
icebp
pushf
lods
int3
xchg
insl
ss
cmp
into
xchg
sub
dec
cmpsl
mov
rclb
xlat
lret
mov
dec
pop
cld
bnd
cmc
shll
and
in
je
xor
cwtl
inc
mov
adc
ret
push
pop
mov
nop
pop
fs
push
cmc
sub
cmp
jns
dec
bound
iret
or
xor
cmpsb
sahf
pop
lods
mov
fisttpll
daa
jmp
sub
inc
dec
pop
push
sub
and
add
xor
cld
mov
js
dec
lock
mov
lahf
imul
jp
push
stc
outsb
push
sub
andb
pop
fmul
inc
das
insl
negl
je
les
negb
lahf
add
sbb
pop
pop
icebp
or
arpl
cmp
xchg
cmpsl
mov
cwtl
std
mul
pop
dec
loope
dec
in
push
js
cmp
nop
je
aas
cmp
test
daa
mov
or
je
inc
jecxz
mov
imull
and
test
test
mov
jp
lea
stos
inc
sbb
movsb
fwait
push
out
xchg
cmpsb
std
pop
ss
xchg
ret
cmpsl
pop
mov
lahf
jo
aas
inc
and
mov
fwait
stos
and
push
loope
mov
outsl
cmc
adc
cmp
push
and
pop
or
insb
and
add
push
hlt
out
fisubrs
outsb
cmp
mov
xchg
imul
and
sbb
test
es
fnstsw
mov
mov
mov
push
out
sti
cld
pop
outsl
mov
push
call
inc
lret
loope
pop
mov
in
jno
sub
xor
out
cltd
fs
inc
inc
fs
adc
adc
in
xor
cmc
sti
xor
lahf
addr16
and
pop
test
jno
nop
xchg
push
lods
sub
jecxz
cs
lock
aaa
andl
not
jmp
or
add
rcl
test
stc
adc
scas
pop
sbb
sbb
mov
loope
cmp
loop
xor
adc
mov
lcall
js
jecxz
fucom
inc
mov
or
inc
pop
mov
addr16
xchg
rcr
iret
sar
in
jb
aaa
mov
dec
ret
test
mov
or
and
int
lea
lret
sahf
sbb
movsl
ret
dec
xor
enter
fcmove
add
fcmovnbe
cwtl
ret
jle
pop
sbb
js
xor
sub
and
adc
aas
dec
fldl2t
push
pushf
push
daa
adc
in
and
rcrl
std
les
inc
or
adc
das
cltd
lock
adc
sbb
jae
inc
mov
bound
aam
xchg
out
dec
stos
aaa
clc
push
imul
fidivl
xor
jmp
scas
pop
jp
int
dec
fdivrs
sbbl
sbb
insl
repz
pusha
jnp
xlat
add
insb
cmp
jne
adc
xchg
jmp
scas
mov
sub
push
sbb
mov
jne
push
shll
pop
sbb
test
sti
mov
test
push
add
pushf
mov
mov
out
pop
ja
insb
cmp
push
ret
rcl
pushf
cltd
xor
add
inc
xor
enter
insb
xchg
cmp
or
pop
cmp
cwtl
mov
les
jle
xorl
shrl
cmp
and
ss
sarl
cmp
out
scas
adcb
mov
and
or
idiv
adc
xor
iret
mov
orl
adc
pop
mov
fwait
adc
pop
jbe
dec
inc
jne
jb
jbe
iret
push
dec
cltd
add
push
push
mov
ljmp
adc
jb
sti
bound
xchg
adc
out
mov
js
push
jnp
adc
loopne
lock
addr16
or
and
and
push
mov
dec
mov
lret
jle
xchg
mov
pop
push
stos
popa
mov
or
insb
cmp
mov
sbbl
jl
repz
pushf
out
mov
out
sbb
xchg
or
mov
fs
aam
and
filds
push
sub
inc
cld
add
fistpl
insb
pushf
outsb
fildl
mov
shrb
dec
cmpsl
jecxz
inc
inc
sub
inc
pop
ljmp
data16
testl
sarl
stc
movsl
add
outsl
filds
bound
bound
movsl
loop
xchg
and
mov
arpl
andb
push
add
xchg
cmp
inc
jl
dec
push
jge
loopne
lcall
mov
pop
call
dec
jns
push
dec
or
call
pop
ds
lock
xrelease
lock
insl
ljmp
cmpsl
fistps
sbb
fst
push
push
aas
mov
pushf
adc
ja
imul
lret
pop
jae
xchg
into
cmpsl
xchg
xchg
or
mov
mov
jbe
mov
mov
cmp
out
clc
or
adc
add
pop
sbb
dec
xlat
cmp
mov
jp
sbb
push
rcrl
das
push
mov
jg
mov
cmp
xlat
mov
pop
int3
scas
mov
or
in
loopne
imulb
adc
lock
jb
add
add
sbb
xchg
scas
mull
dec
adc
pop
scas
inc
int3
iret
or
and
stos
jo
ljmp
scas
popa
lock
leave
push
nop
lea
gs
mov
test
je
addr16
xor
std
sub
in
int3
push
xchg
push
jne
push
pop
push
outsb
cmp
inc
mov
mov
sub
hlt
push
push
out
lock
cwtl
mov
mov
xor
cmpsb
cli
push
inc
shlb
add
jl
fcmovne
push
xor
push
push
stos
addl
mov
fisubrs
xchg
sbb
sahf
mov
mov
sbb
ljmp
fldenv
mov
test
int3
dec
js
out
cltd
les
std
add
mov
int3
nop
pop
adc
in
push
dec
dec
sahf
lock
xchg
pop
sarb
movsb
and
aad
rcrl
jo,pt
dec
mov
xchg
stc
pop
mov
icebp
push
mov
mov
std
pop
mov
cmp
mov
gs
cs
loope
in
aaa
jae
xor
mov
adc
dec
push
mov
push
out
pop
xchg
addr16
lret
xchg
or
jl
sub
call
aam
daa
stos
pushf
sbb
shll
xchg
dec
jae
mov
mov
mov
iret
push
clc
jnp,pn
ret
pop
hlt
mov
mov
fwait
movsbl
stc
sbb
xor
daa
pop
fdivl
xor
les
loope
mov
adc
mov
daa
mov
jle
fnstcw
jnp
lahf
cs
loop
stc
xchg
adc
dec
in
loop
sub
in
out
inc
outsb
pop
ja
ja
out
jae
cltd
sbb
jmp
mov
aad
cmc
cmpsl
push
inc
mov
inc
push
arpl
adcb
sub
repz
popa
arpl
cmp
lret
xor
popf
stos
les
dec
or
jb
es
pop
and
inc
mov
adc
and
lcall
jle
and
inc
adc
adc
jle
sub
divl
cld
xchg
test
pushf
gs
mov
mov
sbb
in
xchg
push
add
mov
cwtl
fnsave
jne
mov
repz
lds
in
cmp
adc
ljmp
out
push
ja
and
aaa
and
jnp
jbe
or
test
push
xchg
xor
movb
int
ret
jmp
test
cltd
daa
movsl
and
insl
sub
pop
push
or
push
sbb
sub
pop
cmp
adc
mov
pop
outsb
jp
into
dec
or
dec
fimull
enter
fcomps
adc
jo
fidivrs
or
inc
sti
inc
pusha
inc
and
movsl
loopne
or
into
push
xchg
les
aas
icebp
rcll
push
pop
stos
add
pusha
sub
popa
sbb
stos
jae
pushw
fs
mov
cmc
jns
imul
jbe
inc
xchg
lock
xchg
cmp
xor
movsl
jl
sub
inc
mov
jmp
push
jecxz
pop
jb
adc
nop
outsb
jmp
shrl
xchg
aam
cmpb
inc
bound
aas
mov
mov
sub
jnp
insb
mov
insl
leave
push
rcr
mov
ficoms
fsubrl
fwait
addr16
and
stos
adcl
dec
int3
in
rorl
fcmovnb
inc
fdivrl
dec
pop
xchg
add
ljmp
leave
nop
jbe
fiadds
fs
or
movsb
mov
or
pop
movsb
adc
cmp
push
les
ja
insl
rcrl
or
mov
lahf
push
scas
out
out
test
out
int
mov
jecxz
outsl
pop
sbb
ss
orb
push
fs
fistpll
imulb
ja
adc
inc
es
mov
jl
cmp
mov
dec
dec
pop
xor
test
mov
jmp
pop
and
xchg
mov
and
lock
shll
out
cwtl
dec
insb
or
dec
hlt
dec
mov
xor
aaa
sub
xor
adc
jge
mov
push
xlat
xchg
aad
je
pop
roll
xchg
sbbb
sbb
or
aad
loop
mov
imul
clc
fsin
pop
repz
xor
and
cmp
mov
sbb
adc
or
sub
mov
push
mov
orl
lret
cltd
lods
out
jmp
and
stos
inc
mov
hlt
std
lret
lcall
dec
pop
ds
dec
testl
cmp
into
mov
cmpsl
aaa
mov
subl
pushf
mov
mov
daa
xor
lock
xor
pop
push
enter
roll
push
dec
xchg
cs
adc
test
mov
cs
jl
jne
divl
pop
add
fldcw
lret
cmp
aas
push
lock
out
pop
out
xchg
jno
ljmp
decl
jo
jnp
sbb
and
orb
jl
nop
enter
jecxz
jno
xchg
in
enter
hlt
jge
mov
cmp
sub
lret
dec
movsb
mov
xchg
aaa
jle
imul
aam
push
test
int3
rcl
outsb
xor
jae
xor
sub
stos
sub
jge
pop
data16
imul
int3
xor
mov
and
movsb
push
shr
add
cmp
cmp
pop
int3
pop
dec
fwait
push
cltd
jno
jecxz
push
pop
jb
mov
push
cmp
hlt
insb
dec
subl
sub
sbb
or
push
push
mov
fcompp
lahf
loop
insl
pop
push
push
in
add
aas
enter
jl
or
aaa
xor
sbb
xor
xor
aaa
stos
mov
loope
cmpsw
xlat
mov
pop
out
icebp
inc
cmp
cmp
pusha
dec
jne
mov
jmp
enter
pop
mov
push
shl
int
shlb
call
mov
dec
xchg
and
fildl
inc
sbb
shll
and
or
mov
les
mov
mov
sbb
scas
lret
outsl
sbbb
ds
stos
xchg
daa
mov
das
sbb
cmp
stc
int
lret
out
arpl
cli
loope
shrl
loop
aaa
mov
mov
ds
mov
sbb
jne
loop
xor
dec
test
std
clc
imul
jns
in
scas
aaa
incb
ret
push
pushf
xor
daa
aaa
push
leave
fisubs
js
mov
mov
push
mov
add
test
loop
call
dec
add
pop
add
cmpsb
inc
pushf
rolb
xchg
iret
push
ret
and
pop
jnp
ror
adcl
shr
mov
adc
arpl
das
mov
test
scas
cmp
mov
in
sbb
sahf
and
dec
add
jns
sbb
cmpsl
stos
or
pushl
mov
or
inc
push
clc
das
and
mov
roll
jecxz
cmp
pop
lods
sub
mov
pushf
dec
in
mov
sbb
repnz
ret
sbb
dec
imul
jns
mov
test
adc
push
adc
es
push
cmpsl
mov
push
ret
adc
mov
std
bound
stc
addl
or
fxch
repz
stos
arpl
into
je
ret
sub
stos
stc
jns
out
fidivrs
xor
outsl
inc
add
fwait
in
icebp
sub
aam
inc
stos
cs
mov
daa
mov
lock
xor
cmp
xchg
dec
inc
out
outsb
xor
shrl
xor
mov
jbe
das
and
cmp
add
fcos
stc
sbb
pop
call
sbb
jns
jle
out
mov
xor
pop
push
cwtl
imul
mov
in
js
mov
filds
xchg
dec
dec
ja
or
hlt
addr16
aam
push
repnz
iret
sub
fcoms
jne
sbb
es
mov
js
mov
mov
xchg
ss
bound
int3
adc
lods
mov
xchg
cld
loope
push
sub
into
cmp
sbb
nop
sbb
jno
dec
jle
in
jle
dec
lods
mov
movsb
jb
pop
add
mov
out
mov
sbb
stos
idiv
sub
jne
or
fnstenv
push
jecxz
inc
adc
rorl
push
sbb
mov
push
aam
insl
adc
rorl
in
or
popf
xor
jb
roll
push
xchg
test
push
dec
cmp
fsubl
mov
push
jg
scas
pop
inc
nop
sub
enter
test
lahf
out
mov
push
sub
nop
push
fadd
adc
mov
cltd
ss
xchg
mov
das
add
bound
or
jae
repz
leave
pop
xchg
pop
and
xchg
adc
cmp
dec
fdivs
out
sti
or
insl
inc
lcall
pusha
ret
push
addr16
shl
int3
int
sar
mov
sub
or
cmp
inc
pusha
clc
or
sub
roll
dec
sbb
fisubl
cwtl
jecxz
mov
dec
lods
fildl
inc
mov
dec
les
int3
jne
lock
mov
test
testb
jbe
test
add
dec
pop
fucom
nop
gs
mov
cmp
shll
jae
or
and
or
cmp
and
mov
xlat
das
xchg
pop
xor
mov
enter
stc
call
lds
add
or
scas
xor
and
in
inc
je
dec
push
inc
shlb
lret
in
add
xchg
testb
fsub
std
xor
loop
outsb
push
jo
stc
or
push
ret
sahf
jmp
fdiv
int
mov
in
test
stc
and
iret
and
xchg
xlat
in
scas
jns
out
inc
adcb
mov
xlat
xorb
jno
and
in
mov
jno
push
std
mov
lret
subb
loop
or
mov
xor
or
add
or
js
aam
popa
dec
xchg
subb
stc
loop
int3
bound
sbb
sub
inc
dec
movb
mov
xor
mov
push
adc
mov
cmpsb
xor
pop
test
in
xor
fwait
push
and
ret
xchg
mov
leave
pop
push
ss
popa
jno
ds
cwtl
mov
jg
xchg
cmp
fwait
mov
dec
adc
lcall
call
sbb
dec
xchg
movsb
paddq
popl
outsb
xchg
negl
jg
mov
mov
jl
mov
mov
adc
scas
cmp
push
cmp
pop
ja
mov
lcall
mov
pop
into
inc
movsl
push
and
jp
out
ficoms
call
sar
test
test
sbbl
jnp
int
scas
pop
es
mov
jae
inc
mov
adc
ljmp
sbb
dec
dec
test
cli
test
faddl
sbb
call
mov
mov
inc
jp
jmp
sub
sub
rolb
or
js
lcall
pop
cltd
cmp
jnp
xor
insb
cmp
popa
push
jl
mov
xchg
mov
push
sbbl
outsb
je
and
ret
or
jmp
loopne
das
mov
pusha
inc
lret
add
pop
xor
das
rcl
add
mov
inc
xchg
lret
scas
dec
sub
xor
add
sahf
sub
add
imul
stos
sbb
roll
loop
sbb
cmp
std
add
fdivs
push
lcall
je
into
add
pop
xchg
xor
jne
lret
xchg
inc
dec
iret
add
in
lods
mov
xchg
xor
ret
shlb
cmpsb
repnz
loop
clc
lea
imul
scas
sahf
mov
incb
jmp
test
lret
cmp
mov
std
shrl
pop
in
pushf
jmp
pop
dec
mov
lret
jle
sbb
inc
add
mov
test
mov
and
lahf
sbb
pushf
and
fs
cmpsl
sub
add
or
adc
mov
jp
mov
popa
xchg
cmp
cmp
add
xchg
aam
mov
pushf
dec
cs
je
orb
mov
shrb
out
xchg
mov
fsubr
daa
fiaddl
hlt
add
sbb
loopne
push
je
icebp
fistpll
dec
repz
fisttpl
shll
xchg
push
leave
xor
inc
in
repz
adc
xchg
in
aaa
mov
arpl
shll
add
test
sbb
push
ror
fbld
dec
jge
ss
xchg
dec
je
ja
nop
imul
inc
cli
sub
xchg
sbb
loopne
ljmp
dec
fs
stc
inc
pop
out
xchg
mov
das
movsb
xor
aam
sbb
cmp
aas
clc
sbb
push
scas
fsts
ret
std
jno
test
jae
js
or
or
ds
dec
and
stos
cwtl
mov
ret
cld
dec
hlt
and
cmp
push
jl
outsl
dec
jecxz
adc
adc
push
xor
sti
mov
out
sbb
adc
clc
repz
jnp
jle
xchg
je
pusha
lret
and
fwait
jmp
push
stc
adc
xchg
or
mov
or
cli
inc
pop
mov
addr16
ret
imul
out
in
xor
pop
mov
ja
push
jae
movsb
jg
sbb
dec
ja
push
dec
ret
jl
xor
xchg
jns
stos
or
shll
xor
lods
sub
xor
out
jnp
or
lock
and
push
les
adc
hlt
out
mov
fisttpll
xor
xchg
cmp
jp
cmp
ror
inc
sbb
cmpsb
cmc
aas
inc
dec
xor
mov
dec
outsb
fdivrp
cli
mov
inc
scas
lahf
dec
inc
mov
sub
mov
or
data16
pop
sub
inc
jp
jecxz
push
out
adc
pop
std
fwait
out
dec
push
int3
fidivs
fwait
or
pop
faddp
pop
test
adc
shlb
or
fists
data16
scas
data16
mov
push
insb
mov
gs
into
out
test
in
roll
movsl
or
ror
inc
add
mov
sbb
sti
addr16
and
fisttpll
outsl
and
cmc
mov
add
clc
add
cmp
hlt
mov
call
dec
mov
adc
sbb
xor
jne
rolb
ljmp
and
cmc
mov
lock
iret
test
addr16
mov
jecxz
out
cmp
aad
lcall
cmp
test
cmp
pusha
cld
inc
nop
mov
jns
cmp
sbb
in
or
rolb
or
and
imul
pop
ja
scas
das
xchg
mov
lods
inc
inc
mov
stos
mov
loopne
pop
xchg
mov
pushf
nop
adc
jns
ret
mov
loope
aas
mov
sub
push
and
mov
sbb
jle
jge
popf
fwait
js
push
sub
clc
fcomp
mov
mov
sahf
popa
sub
mov
repz
ja
cmp
adc
mov
mov
inc
dec
sbb
sub
aaa
sti
pop
out
mov
imul
dec
pop
rcrl
shll
cmp
and
pop
push
lcall
inc
sbb
nop
dec
and
push
inc
pusha
mov
cmp
ret
cwtl
inc
imul
dec
imul
xchg
ljmp
int3
je
push
ds
insb
sub
mov
lahf
inc
pop
pop
cmp
jne
pop
mov
out
cmp
adc
add
pop
mov
push
pushf
xor
sub
mov
and
jmp
in
into
movq
xchg
push
push
lcall
hlt
sub
ficoml
adc
inc
sub
ret
sbb
push
negl
mov
add
sahf
xchg
int3
jle
cmp
ss
sar
outsl
sbb
hlt
mov
xor
in
rclb
jo
cmp
shr
add
xor
mov
and
rcrb
lods
or
xchg
clc
sbb
sub
inc
pop
adc
jecxz
dec
add
dec
xor
cmpsl
and
mov
mov
add
out
adc
adc
les
adc
imul
mov
mov
gs
push
mov
sub
adc
jns
lods
jp
in
xchg
xchg
add
xor
popf
arpl
sahf
and
inc
in
idivb
cmp
sub
out
fwait
pushf
stos
pop
pop
scas
dec
in
lods
enter
jp
mov
mov
jge
inc
outsl
cmp
xor
in
push
add
pop
jae
sar
lcall
fstps
xor
jmp
clc
das
scas
lea
push
xor
sub
mov
in
icebp
sbb
mov
test
jle
fcoms
in
ret
add
pop
scas
mov
sub
cli
stos
jno
sbb
rcr
mov
add
add
dec
scas
add
hlt
cmpsb
inc
pop
scas
cltd
popa
ret
ljmp
xor
mov
mov
cmpl
xchg
adc
ficoml
add
pop
int
shlb
smsw
jne
push
sub
inc
fwait
loop
xor
cmp
js
scas
cmc
repz
inc
xchg
push
gs
push
push
outsl
or
mov
dec
outsb
push
mov
adc
ret
fmuls
pop
add
call
sub
fxch
shrb
push
mov
in
lock
cmp
sub
lock
shr
gs
sub
sarl
cmp
mov
clc
inc
sbb
pushf
imul
or
xchg
and
test
pusha
lcall
pop
out
and
dec
sub
scas
jo
pop
xor
lahf
popa
mov
adc
xchg
inc
fsubrs
mov
adc
ret
fiaddl
dec
push
or
lds
out
mov
mov
push
dec
pop
xlat
ret
mov
fdivs
data16
cltd
aaa
xorb
repz
mov
inc
add
movl
out
shlb
mov
insl
cmpsb
push
mov
adc
dec
in
pop
adc
sub
sbb
mov
add
add
xchg
mov
scas
xchg
sub
push
jo
mov
jae
aam
inc
pusha
inc
lret
repnz
jmp
or
push
xor
and
add
lcall
or
mov
inc
jnp
mov
enter
sub
lret
and
imul
rolb
inc
mov
iret
pushf
or
jl
cwtl
sahf
loope
movb
aad
rol
clc
clc
inc
ljmp
cmp
arpl
lahf
mov
stc
ja
imul
inc
sbb
mov
push
test
in
aaa
sarl
or
lret
rcl
fwait
xchg
add
jmp
enter
adc
pop
fcomp
mov
popf
leave
xor
sub
jp
aad
cmp
pop
push
imul
dec
mov
ds
or
add
jne
mov
ljmp
cmp
xchg
sahf
iret
call
fwait
dec
lea
cmp
lcall
dec
lcall
aas
push
fwait
push
push
js
fcomp
jno
jbe
hlt
adc
adc
xor
add
adc
or
add
mov
xorb
lret
addr16
jge
mov
push
sub
dec
shll
add
or
repz
cli
and
mov
mov
cmp
inc
lahf
cmp
jge
sbb
sbb
lea
lcall
in
dec
mov
fildll
xchg
stos
in
adc
mov
jge
test
dec
test
dec
push
dec
sbb
cmp
fwait
cmc
mov
xchg
cmp
aas
lods
in
sbb
nop
add
add
inc
xchg
fwait
lea
ss
push
mov
mov
bound
repnz
gs
push
das
pop
or
xor
out
into
out
mov
repz
cmc
fildl
test
add
or
sub
loopne
imulb
in
or
xchg
fdivrp
popf
lock
cmp
dec
mov
xchg
and
jne
loop
in
inc
dec
mov
mov
jle
pop
sbb
xor
mov
enter
out
xchg
lock
out
pushf
movsl
mov
xchg
pop
call
pop
les
test
bound
mov
ds
dec
movsb
adc
xor
pop
jno
imul
pushf
int
test
fwait
push
pop
mov
xchg
out
cli
add
add
cmp
xchg
aad
push
pop
dec
jge
jo
testb
orl
cmp
sar
sbb
bound
lods
cmp
xchg
sbb
mov
in
inc
js
dec
lahf
dec
mov
js
inc
shr
xchg
jmp
loope
lret
fwait
jge
outsb
pop
mov
cmc
cmpps
fwait
pop
lea
mov
fistl
in
cmpsb
mov
adc
sbb
cwtl
jecxz
xchg
sub
lods
sbb
sbb
iret
arpl
jp
or
nop
movsl
sarb
int3
int3
sbb
and
dec
add
fsub
hlt
shll
xchg
or
mov
nop
mov
dec
fwait
cmc
sahf
rclb
xchg
push
mov
xor
stos
aaa
xchg
mov
pop
std
sarl
std
enter
xorb
push
in
xor
stos
cmp
sbb
xor
and
push
les
ret
mov
add
fmuls
js
dec
push
mov
push
mov
xlat
cmp
adc
jl
es
movsl
lret
outsl
loop
ds
xor
lret
pop
jp
les
cmp
pop
mov
jne
xchg
pop
push
stos
pop
inc
repz
and
lret
lock
repz
sbb
js
mov
mov
or
test
repz
or
cmp
mov
dec
subb
fbld
shl
mov
mov
xor
add
test
inc
cmpsb
mov
es
xchg
loop
jmp
repz
adc
shrb
push
sbb
push
add
pop
pop
lock
or
push
cmp
mov
fildl
sub
pop
inc
jns
mul
imul
insb
out
inc
ret
and
jp
gs
jb
iret
sbb
jbe
pop
jl
scas
push
cmpsl
jns
sub
insl
mov
shl
cltd
stos
add
loopne
aam
stc
and
push
fwait
sub
jmp
rcrb
scas
in
sarb
xchg
or
aas
fs
xor
and
loope
add
in
sbb
xlat
sub
mov
cmc
push
xchg
rcrb
adc
lcall
push
test
jnp
lret
add
dec
push
cmpsl
inc
and
xchg
aam
in
stos
cmpsl
sbb
jl
outsb
sbb
fadd
lret
mov
adc
add
add
in
and
mov
iret
mov
dec
rorl
cmp
cmpsb
addb
pop
mov
and
das
gs
jno
xchg
mov
xchg
loope
cltd
rcl
inc
jns
jae
loop
jae
addr16
sbb
and
rcrb
inc
dec
xchg
je
pop
lds
test
out
lods
mov
repnz
mov
push
movsb
adc
cmp
shlb
mov
add
or
je
mov
rcrl
or
ret
ds
xchg
and
mov
cmpsl
xor
sbb
mov
xor
aaa
aad
aad
add
lcall
repz
pop
push
add
push
dec
xor
sbb
or
outsb
in
ret
movsl
mov
or
mov
push
jg
push
sti
pop
out
and
jns
stos
push
out
negb
dec
xor
je
dec
add
scas
stos
push
mov
test
scas
jp
vminps
xchg
rol
cmp
sub
movsl
mov
adc
cmp
out
jo
or
and
xlat
sbb
and
into
repnz
dec
pop
iret
pop
dec
push
adc
inc
fprem
ljmp
sbb
dec
sti
mov
lods
push
in
xlat
add
dec
in
push
in
incb
sub
shrb
jno
data16
mov
scas
pop
sbb
sbb
jae
xchg
pop
cmp
mov
xchg
fld
push
fdivr
scas
repz
push
or
sbb
sbb
popf
sbb
jbe
mov
sbb
cmp
je
add
pop
adc
dec
jne
sti
or
adc
test
out
and
mov
sub
fiaddl
addr16
out
shrb
lea
scas
dec
into
lcall
insl
or
imul
mov
clc
sbb
or
addr16
push
jno
fisubrl
adc
jle
jg
push
shll
pop
sub
aad
les
xor
cmp
and
data16
shlb
aas
pop
dec
mov
fldt
mov
adc
mov
mov
and
and
ss
adc
sbb
mov
inc
dec
test
ds
stos
cmpsl
aas
fucomip
mov
xor
dec
rorb
ret
sbb
ja
cwtl
loope
xchg
icebp
xchg
xchg
prefetch
es
sarb
mov
mov
push
xchg
jb
int
sbb
je
ljmp
int
incb
fwait
jns
inc
xchg
push
xchg
inc
fnstsw
push
dec
xchg
scas
or
mov
push
je
xor
lcall
fadds
xchg
dec
jno
outsb
lea
test
sub
movsb
mov
mov
push
andb
test
cs
cmp
mov
nop
aam
out
sub
inc
inc
cwtl
mov
stos
ss
jno
xchg
lds
stc
daa
add
dec
xor
fnstcw
mulb
inc
xlat
in
lods
xlat
repnz
icebp
xchg
jle
imul
data16
stc
adc
push
sbb
arpl
jne
sti
scas
movsb
or
sub
sbbl
dec
rcll
js
fisttpll
test
ficompl
jae
sbb
pop
sub
movsl
jne
leave
stc
cld
sbb
insb
scas
adc
mov
imul
outsb
ror
icebp
cmpsl
push
xchg
push
lret
xchg
call
adc
arpl
mov
out
aas
and
xor
enter
mov
push
fbld
sbb
int
popf
cmp
cmp
les
add
mov
fimull
jmp
enter
xor
ret
lods
cmp
pusha
jbe
inc
mov
dec
roll
push
ror
mov
and
add
fsts
ret
sub
add
sub
outsb
pop
xor
pop
mov
add
dec
lock
cmpsb
and
or
das
stos
decl
add
mov
dec
insb
cwtl
mov
outsb
cmp
sbb
pusha
out
dec
mov
cwtl
pop
pusha
sub
movl
or
in
pop
adc
jae
xchg
rcl
enter
xchg
out
stos
add
arpl
or
xchg
cmp
test
sub
loop
jmp
lods
test
rorb
jno
mov
aaa
push
clc
inc
mov
pushf
test
or
inc
jmp
aas
in
dec
and
idivb
and
dec
stos
gs
sahf
cmp
shl
stos
mov
int3
mov
mov
outsb
add
cli
inc
xor
outsb
andl
out
arpl
and
sahf
pop
and
push
repz
jne
or
jne
fdivrs
mov
lret
jns
and
and
pop
jge
push
loopne
mov
into
jo
addr16
jle
jle
repnz
adc
out
loope
or
xor
dec
arpl
mov
call
cmpsb
push
and
dec
xor
mov
lret
push
test
adc
and
and
bound
enter
sbb
adc
push
mov
push
or
jae
iret
xorb
cld
fs
push
faddl
sub
shlb
cmp
xor
insb
cli
pop
xchg
xchg
aas
movsl
popf
jge
dec
add
imul
xlat
inc
adc
sub
or
lods
jg
sahf
aas
push
xchg
push
fs
iret
sahf
rcll
push
mov
sbb
jg
dec
mov
movsb
sti
adc
push
popa
jge
mov
fcom
movbe
pop
mov
mov
cwtl
push
mov
or
inc
enter
or
and
pop
or
in
nop
sbb
jnp
sbb
fs
mov
repnz
imul
jg
fs
sub
call
pop
jge
subl
mov
setne
rorl
xchg
mov
ds
jecxz
arpl
jne
jmp
out
xchg
movsb
outsb
insb
lea
rcl
cli
adc
cli
prefetchwt1
dec
sbb
mov
xchg
cmp
scas
and
jns
cli
jp
jns
enter
mov
insl
cmpsl
and
das
xchg
and
mov
fwait
xchg
clc
mov
gs
xchg
sub
aam
dec
adc
mov
mov
sub
mov
xlat
mov
adc
out
inc
out
sub
imul
cmp
jb
das
add
fwait
sub
mov
dec
cld
and
test
mov
scas
in
arpl
fcomps
jl
push
xlat
jbe
adc
addr16
cld
adc
xchg
iret
inc
adc
aas
in
xor
xor
xchg
test
sbb
popf
es
scas
lods
fmuls
inc
and
xor
pushf
rclb
pop
xor
xchg
inc
and
xchg
pop
lods
mov
fnstcw
push
test
xchg
les
jno
test
stc
lahf
mov
sahf
les
dec
sub
decl
loop
cmp
pop
movsl
xchg
mov
loope
icebp
mov
jmp
daa
dec
fcomi
adc
mov
sub
pop
sub
loopne
jnp
mov
adc
adc
cwtl
test
pop
mov
cmp
scas
add
nop
cs
icebp
push
dec
mov
repz
xchg
inc
xlat
ja
fnstenv
cmp
cs
mov
mov
adcb
cwtl
add
shrl
es
mov
jmp
stos
xor
inc
sub
stos
jne
iret
sbb
push
inc
jbe
mov
imul
xor
sbb
shrd
mov
into
repnz
jo
inc
ljmp
fcmovnb
subl
cmp
pop
sub
cltd
jl
adcl
jne
ffreep
fidivl
dec
addl
lds
add
sub
js
push
sub
mov
push
push
inc
repz
sbb
lods
or
out
popa
or
pop
jo
popl
or
push
mov
aam
xlat
pop
jecxz
cli
xchg
jge
add
jp
xor
movsb
or
out
xor
mov
mov
data16
ss
enter
loope
xor
dec
add
cmc
xchg
mov
inc
adcl
cld
mov
insb
out
jbe
sub
int
cmp
std
into
mov
cmpsl
loopne
add
mov
jecxz
ret
imul
dec
sbb
test
scas
mov
imul
aam
push
dec
mov
inc
in
fsubs
int3
sbb
shll
sub
or
jne
mov
sbb
mov
cli
leave
insb
jo
data16
dec
push
mov
adc
aad
aam
pop
xlat
mov
push
or
mov
pop
jnp
addr16
jo
int3
and
movsb
mov
das
dec
push
enter
and
mov
lods
and
std
aad
pop
mov
sub
mov
xor
cmp
xchg
push
dec
shrb
js
jb
jmp
arpl
lretw
adc
cwtl
pop
bound
mov
mov
pop
add
iret
repz
inc
add
add
dec
dec
adcb
xchg
adc
inc
push
push
hlt
mov
mov
popf
scas
inc
jo
adc
xchg
lock
mov
jge
jmp
pop
scas
hlt
inc
xchg
cmp
aam
jecxz
mov
mov
adc
mov
int3
jno
les
fwait
cmc
ja
decl
pusha
dec
mov
dec
jecxz
sbb
lea
sahf
dec
fdivl
xchg
push
mov
pop
stc
pop
repnz
pusha
mov
inc
xchg
lock
jo
shll
in
push
addr16
or
jg
dec
mov
pop
push
test
in
jecxz
mov
xchg
jbe
ret
popf
push
pop
jo
fisttpll
jb
pop
xor
xor
sub
inc
jnp
dec
or
aam
add
les
mov
hlt
push
cli
sbb
adc
adc
aam
sahf
jmp
ja
adc
mov
ror
xchg
xlat
sub
cmpsb
mov
add
jle
test
nop
xor
jmp
ljmp
adc
jb
loop
scas
test
daa
es
sbb
in
rcll
xchg
jo
test
cmp
push
jnp
daa
inc
push
imul
daa
cmp
add
pop
sti
sahf
push
imul
sahf
fidivs
jb
sarb
inc
or
nop
cmp
sbb
cmc
ror
cs
fdivr
or
cmp
into
push
stos
in
lret
aam
lret
xchg
pop
pusha
int
pop
add
cmc
scas
lret
rcrl
xchg
jle
fstl
mov
pushf
test
enter
ja
stc
sub
orl
stos
sarl
lock
iret
iret
mov
outsb
xchg
pop
in
fwait
roll
pop
mov
enter
dec
outsb
pop
cmpsb
xchg
out
sbb
out
dec
mov
xor
xor
sbb
stc
scas
test
out
sbb
mov
push
pop
fimuls
add
icebp
adcl
pop
xchg
inc
loope
and
fiadds
out
test
lcall
mov
in
test
dec
repnz
sub
arpl
jo
cmp
mov
jns
aaa
cmpsb
out
pop
std
mov
xor
aam
jns
dec
add
mov
adc
movsb
sub
pop
jae
test
mov
mov
cmp
out
cmc
dec
xor
out
jp
push
jns
repz
cmc
in
mov
xor
xor
sub
pop
sbb
leave
push
or
fucomi
push
lods
jp
dec
gs
add
jmp
push
repnz
insb
daa
fstpt
fildll
xchg
mov
aaa
popf
jno
adc
mov
aaa
sahf
jmp
scas
pop
subl
mov
sbb
push
js
mov
xchg
rcll
sbb
jp
jae
sbbl
mov
test
jg
jmp
fldt
sub
in
imul
movsl
cmc
aas
lret
and
mov
fimull
inc
fwait
adc
sbb
mull
inc
jge
enter
push
cmpsl
lock
popa
cmp
stc
cmp
cmp
loope
xchg
pop
cmp
push
inc
xor
adc
int3
gs
and
cmpsl
pop
test
sti
mov
es
movl
add
pushf
scas
and
lock
push
lahf
xlat
sbb
pop
sub
std
jle
lea
adc
and
int
outsb
mov
ss
xor
jmp
and
mov
lods
mulb
xchg
fwait
or
test
sbb
pop
push
push
fists
inc
push
dec
cmp
and
inc
dec
jne
lods
les
stos
sahf
aas
mov
push
xchg
and
bound
lret
sbb
mov
imul
mov
jmp
adc
mov
inc
pop
popf
xchg
daa
loop
push
test
aad
sbb
cld
dec
sbb
out
imul
and
test
es
rorb
fbstp
pop
mov
add
mov
in
mov
inc
jo
shl
xchg
stos
jbe
shll
xor
sbb
loopne
jecxz
push
xchg
xor
pop
or
lcall
xor
daa
pop
div
and
add
popf
push
out
cld
jb
add
std
movsl
xor
lea
js
jp
out
push
pop
cmpsl
cwtl
cmp
xor
gs
enter
sbb
insb
add
insb
mov
aaa
rcrl
xor
or
mov
adc
push
psrlq
lahf
insb
inc
dec
lcall
dec
ss
and
es
xchg
adcl
pop
orps
mov
jl
imul
xor
sub
sahf
js
scas
sub
jnp
xorl
sbb
and
insl
insb
dec
loop
add
fidivs
scas
inc
enter
shrb
out
fidivrs
call
mov
into
stos
mov
push
cmp
sbb
in
push
mov
outsl
pop
mov
loopne
mov
xchg
xor
lret
int
bound
pmullw
inc
or
movsl
jns
ret
sbbb
mov
mov
jecxz
xlat
aam
fisttps
int3
mov
jg
cmpsb
mov
jle
pop
cmc
push
xchg
punpckldq
push
pop
sbb
and
xchg
cmc
fnsave
setnp
loope
jge
push
mov
movsb
lret
les
sbb
mov
sbb
subl
xlat
add
pop
add
mov
ret
shl
adc
push
dec
nop
inc
das
sbb
cmpsb
pop
xlat
push
add
and
pop
hlt
hlt
jecxz
es
jecxz
pushf
mov
mov
cmp
out
sub
sbb
mov
ss
dec
loopne
pop
pop
aam
mov
push
add
js
jge
adcb
or
sbb
shlb
loope
adc
fs
sahf
cmp
xor
daa
loopne
test
mov
inc
push
xlat
mov
jecxz
fisubl
pop
das
aad
je
shlb
lahf
mov
mov
mov
xlat
cmp
sub
enter
int3
and
lea
out
ljmp
call
xor
clc
pop
add
mov
pop
orl
aas
and
sti
loope
xchg
or
daa
mov
ja
test
dec
add
inc
fs
mov
mov
pushf
jmp
rorb
inc
dec
push
incb
xchg
adc
insb
dec
jle
xchg
push
sub
testb
in
repnz
adc
int3
andb
outsb
add
dec
das
icebp
out
repz
in
hlt
leave
mov
int3
pop
ffree
xor
and
and
fidivl
jae
jo
adc
sub
shr
stos
push
stos
outsl
inc
push
mov
mov
push
scas
mulb
and
or
mov
sahf
ffreep
movsl
push
mov
xor
xchg
clc
mov
pop
jecxz
cs
jnp
xor
dec
sbb
xchg
pop
bound
jnp
imul
xor
jbe
pushf
insl
adc
arpl
fisubs
add
jle
jmp
or
adc
adc
nop
sbb
or
sbb
xchg
int
and
jl
or
sub
sahf
sub
push
lret
aaa
inc
pop
mov
pop
cmp
fdivs
xchg
sub
push
in
ret
adc
adc
les
mov
push
stc
mov
inc
cmpsb
rol
ret
rclb
in
repnz
and
jmp
out
add
leave
jnp
cltd
dec
inc
jg
arpl
inc
outsl
or
loope
push
fdivr
movsl
nop
push
js
incb
inc
mov
int
push
imul
pop
lahf
lds
sar
icebp
xchg
mov
lods
test
out
inc
xchg
lds
sbb
inc
mov
scas
cmp
lods
repz
lods
idivb
push
xchg
mov
in
push
ret
incb
fcoms
xchg
maskmovq
divl
push
mov
pop
sub
xchg
aad
iret
lds
cmc
in
aam
push
jl
or
std
push
popf
out
jp
dec
pop
and
out
sahf
out
stos
mov
dec
mov
popa
cmp
rcr
sbb
nop
gs
xchg
cmpsl
into
ljmp
xor
pop
jg
push
and
push
sbb
nop
mov
push
idivb
and
push
cwtl
ror
cmpsl
push
push
pop
mov
cltd
jne
mov
push
test
cltd
out
vmptrld
dec
xchg
jbe
gs
pop
out
rcrl
xchg
sti
rdmsr
cs
and
out
push
push
add
cmp
sub
mov
xchg
lock
dec
or
rcr
adc
mov
out
les
test
xor
mov
outsb
jle
push
ss
cmpsl
sarl
mov
mov
mul
in
sbb
xor
cmc
mov
dec
push
or
push
dec
xchg
mov
sub
xlat
cmp
in
xchg
add
pop
addr16
ss
in
stos
pop
pop
inc
xchg
das
fmull
stos
mov
pop
cmp
or
xchg
mov
and
mov
pop
mov
mov
pop
scas
xor
xor
jno
add
pop
and
aam
loope
cmp
mov
aad
out
inc
jge
inc
scas
fadd
pop
stos
int
inc
int
outsl
xchg
repz
xchg
add
adc
jle
or
push
je
push
add
sbb
daa
std
sub
dec
lahf
jmp
mov
lret
push
adc
rolb
test
xor
pop
add
mov
sub
stc
mov
aad
and
out
mov
cmpsl
push
mov
sub
loopne
lret
xchg
sub
mov
testb
mov
imul
mov
das
or
pop
dec
dec
inc
out
or
ds
or
xchg
lods
in
push
xor
cmp
fsubrl
dec
xor
or
inc
add
jle
or
push
daa
dec
aad
and
or
outsb
data16
enter
lret
cmpsb
out
loope
sub
or
sahf
mov
lock
inc
xor
mov
int
jbe
mov
mov
jbe
add
es
sbb
push
aad
push
sub
pop
out
dec
cmc
mov
xchg
sbb
push
pop
xor
iret
clc
insl
jae
pop
push
nop
mov
outsb
mov
push
and
insl
mov
or
movsb
jmp
add
out
popf
popl
out
outsb
mov
lcall
stos
enter
cmovge
shr
fadds
push
mov
shr
mov
out
dec
dec
xchg
orb
roll
test
dec
inc
imul
pop
popa
push
pop
inc
push
dec
inc
insb
mov
xchg
jle
sarb
out
mov
repz
lcall
rorb
mov
loope
je
pop
mov
adc
lret
stc
mov
xchg
jae
and
adc
gs
lock
fmuls
mov
push
loop
sub
sahf
mov
pusha
pop
hlt
imul
sub
mov
jl
outsl
int3
fcmovbe
inc
rclb
dec
sarl
add
mov
dec
int3
pop
test
cmp
pop
push
sarb
fs
les
call
dec
mov
push
inc
mov
scas
xlat
xor
hlt
jle
sub
xchg
add
xchg
call
mov
dec
jbe
inc
push
xchg
arpl
cmp
pusha
test
cmc
outsl
push
test
in
xchg
int
inc
dec
mov
xchg
orl
and
stos
mov
sub
pop
adc
and
cld
cmpsb
lds
clc
cmp
sub
pop
stos
rcrb
ret
loop
testb
add
sub
dec
sbb
push
jmp
dec
xchg
daa
dec
mov
out
das
mov
cmp
imul
mov
shll
inc
xor
js
jecxz
xchg
cmc
loop
addl
pop
cli
sub
lret
shll
and
int
add
rcrb
bound
aas
jns
add
loope
test
inc
and
xchg
decl
add
mov
inc
cmp
dec
jae
call
js
icebp
adc
fdivrs
loop
mov
fbld
or
insb
and
push
jno
aas
scas
je
mov
mov
xchg
in
daa
das
movsb
dec
icebp
xchg
aas
loop
mov
jmp
in
jg
scas
ss
orl
sub
or
xchg
and
push
popa
jecxz
and
shlb
fisubs
mov
mov
clc
sbb
iret
xor
push
pop
mov
adc
test
adcb
and
sti
cs
aas
add
push
loopne
jg
mov
orl
adc
inc
push
in
inc
loop
xchg
adc
inc
sub
popa
xchg
cmp
xor
mov
jl
out
fwait
rcrl
dec
divb
aas
cli
mov
jae
add
jle
not
pushf
adc
xor
sbb
fiaddl
add
xchg
fnsave
sbb
push
adc
fisttpll
or
sti
insl
pushf
xor
imul
jp
cmp
imul
mov
lock
fs
jg
shl
lret
dec
sbb
lds
scas
sbb
fwait
cmp
and
aam
insb
aam
ss
lret
mov
xor
mov
lcall
push
ror
pop
adc
shlb
lret
mov
mov
jns
inc
sbb
hlt
ss
bound
jb
clc
mov
cmpsb
jb
xor
cs
sub
notl
pop
es
sbb
push
mov
xchg
test
mov
stc
cmp
cmpsl
cltd
jb
repz
cmp
out
mov
and
inc
loop
xchg
jb,pn
xchg
bound
hlt
jg
lods
adc
addr16
jg
pushf
dec
sbb
shrl
dec
stc
dec
mov
mov
adc
fwait
lods
repnz
mov
fiaddl
cmp
inc
and
push
jnp
push
ret
lds
clc
mov
ljmp
cmpsl
mov
pop
xor
cmp
and
dec
mov
lock
sbb
sub
mov
stc
mov
pop
andl
xchg
and
jecxz
aas
repz
test
mov
pop
popa
pop
out
imul
fbstp
mov
jle
pusha
loop
xchg
jb
mov
xchg
pop
out
inc
cmp
fcmovb
int3
nop
push
pop
jo
xlat
leave
dec
add
adc
outsl
mov
mov
push
push
rolb
and
negl
ljmp
mov
push
rcrb
pop
fsubrs
scas
cmc
or
push
lret
push
sbb
push
xchg
bound
into
or
mov
jp
add
xchg
nop
fisttpl
or
scas
mov
enter
pop
push
xor
clc
orl
xchg
mov
inc
jnp
jmp
add
push
mov
movsb
out
mov
movsb
nop
xchg
arpl
cmp
lahf
sub
addl
icebp
jae
jp,pn
lods
lahf
shrl
lds
dec
mov
outsl
mov
shlb
fdivp
xor
pop
mov
sub
mov
ds
int
cld
les
in
std
pop
dec
fnstenv
mov
loopne
sub
xchg
xchg
add
mov
xor
mov
cmpsb
push
outsl
sub
jbe
ljmp
or
pop
jns
jo
adc
pop
sahf
dec
jne
or
jmp
push
lcall
jbe
push
push
sub
push
add
addr16
pop
sub
fsubp
mov
ja
inc
test
out
mov
aad
hlt
pop
stos
jl
pop
jb
divb
ret
clc
mov
mov
hlt
fmulp
data16
fidivrs
jae
or
ljmp
sbb
sbb
pop
cmp
cs
fisubl
xorb
adcb
mov
decb
adc
add
xchg
fadds
mov
dec
adcb
ljmp
fnstsw
dec
adc
and
or
fdiv
int
dec
pop
add
nop
cmpsb
and
push
xchg
shlb
and
sub
subl
push
outsb
pop
sarb
scas
rolb
dec
and
adc
sbb
jmp
and
cs
nop
jp
aas
xchg
xor
add
cmc
mov
dec
out
xchg
pop
inc
jo
fsubl
mov
daa
mov
lahf
std
xorb
popa
sub
pop
rolb
leave
sbb
mov
int3
in
dec
xchg
movsl
out
xchg
cmp
mov
pusha
xchg
loope
adc
stos
or
cmp
adc
outsb
add
sbb
xor
addr16
pop
jo
cs
test
in
sarb
icebp
push
pop
xlat
movl
cmpsb
rorb
xchg
es
jl
imul
stos
xor
imul
jp
lds
push
outsl
in
inc
scas
std
cli
xchg
push
lods
mov
mov
inc
add
add
cld
push
mov
shrb
ljmpw
xor
sbb
cmp
scas
inc
addl
pop
xchg
lock
sti
push
shll
mov
fildll
popa
rorl
movsl
add
pop
xchg
icebp
mov
inc
xor
adc
cmp
mov
adcb
bound
and
jne
lcall
test
inc
jno
sub
mov
adc
pop
mov
mov
es
jl
adc
jo
pop
add
aaa
sbb
ds
adc
cmpsl
cld
fisubl
and
fsubrs
cmp
xlat
js
pop
jecxz
xchg
test
insl
lcall
in
push
sub
mov
sub
sti
popa
cwtl
js
scas
and
mov
cmp
cmc
push
jl
sbb
push
cmpsl
sbb
aaa
sub
cmp
notb
cltd
in
xchg
int
les
mov
loope
push
mov
inc
rolb
adc
pop
mov
adc
loop
xchg
xor
bound
addr16
fimuls
leave
lahf
inc
pop
inc
inc
ret
mov
xor
fnstenv
adc
fmull
jnp
and
sti
sarb
fstps
fimull
sub
cmp
scas
fwait
sti
jnp
xchg
mov
xchg
sbb
mov
in
pop
and
iret
std
adc
xchg
loop
jo
adc
pop
aas
ljmpw
pop
xlat
inc
or
mov
sub
lds
mov
pusha
dec
jp
or
lcall
test
mov
jbe
cmp
xchg
mov
loop
xchg
js
mov
push
out
adc
cmp
gs
out
xchg
dec
or
stos
cmp
shrl
fcmovnbe
and
scas
cmp
stc
and
xchg
cmpl
filds
mov
dec
ljmp
sub
in
pop
or
or
jge
sub
mov
xor
pop
jmp
ss
dec
or
push
sbb
lock
or
out
sbb
jno
xchg
shll
dec
enter
adc
jge
push
bound
adc
loope
test
inc
lds
mov
icebp
movsb
sub
push
lahf
mov
mov
dec
stos
flds
mov
in
aas
cmpsb
mov
je
mov
inc
add
scas
inc
imul
mov
or
imul
dec
sahf
test
cs
aas
std
inc
mov
rcrb
in
dec
insl
and
cmpsb
jge
aam
and
lock
lods
ljmp
sbbl
push
cmp
out
adc
sbb
inc
xchg
dec
or
and
shll
cmp
inc
cwtl
jle
iret
movl
nop
repnz
jbe
inc
ret
enter
mov
sbb
xchg
xchg
daa
rol
mov
xchg
mov
call
or
lret
fildll
add
enter
hlt
cmp
xlat
inc
jbe
test
mov
sub
inc
mov
inc
sbb
out
stos
aaa
stos
jns
mov
or
js
xchg
pop
cmpsb
jae
repnz
test
cltd
ds
ret
inc
or
aam
sbb
je
fwait
lcallw
pop
jne
jg
sbb
cmp
insl
cmp
ss
jne
pop
fwait
notl
and
sub
pop
jo
push
cwtl
mov
inc
daa
fld
imul
stos
lods
inc
pop
jno
xchg
sti
pushf
arpl
xor
movsb
dec
push
dec
dec
stos
mov
int3
xchg
sar
jb
sub
clc
fadd
inc
push
ret
sbb
faddl
add
loopne
push
xor
cmpsl
pop
push
aad
out
sbb
mov
pop
addr16
andb
add
out
adc
into
and
hlt
neg
pop
and
out
ja
adc
inc
mov
cmpsl
adcl
mov
push
xchg
cmpsl
add
iret
push
pop
jmp
ss
je
into
push
push
xor
and
ret
push
inc
cmp
sbb
sbb
mov
movsb
cltd
inc
cmpb
adc
in
lods
jb
out
mov
data16
aas
data16
ljmp
and
inc
ret
rep
inc
xor
popf
ss
outsb
xor
je
lea
fs
ret
xor
mov
mov
dec
adc
xchg
std
std
adc
iret
xchg
cmp
xchg
bnd
pop
inc
sbb
inc
push
mov
lcall
lods
imul
inc
xor
pop
push
jnp
insl
dec
mov
lcall
or
adc
sbb
push
xor
sub
mov
add
and
jl
addl
xor
push
xor
dec
push
pop
pop
dec
pop
pop
mov
push
dec
jne
sub
movsb
mov
jo
daa
sub
pushf
mov
dec
daa
ficompl
jbe
mov
fcmovbe
test
or
jns
ror
outsb
push
dec
outsb
adc
cmc
les
cmp
add
sub
mov
sub
cmpl
push
xchg
aad
xor
imul
xorl
adc
adc
xor
xor
mov
mov
xor
int3
out
cltd
sbb
push
out
mov
cmpb
sbb
in
and
or
lahf
lret
adcb
stos
test
jo
test
jne
sub
jge
jnp
jge
shrb
mov
sub
mov
iret
adc
fsubs
lret
mov
ficompl
add
or
daa
int3
outsl
idivb
daa
test
inc
int
popa
lock
daa
mov
jne
mov
loop
mov
sbb
inc
test
gs
aas
frstor
sub
repnz
jmp
xor
and
inc
into
in
push
cmp
fwait
data16
std
out
and
in
lret
push
sahf
cmc
adc
push
test
xchg
cmpsb
std
imul
sub
scas
call
push
fs
pop
scas
push
dec
sub
pop
shrb
mov
inc
lock
out
xchg
pop
mov
int
ja
mov
test
in
cld
xor
arpl
inc
xchg
imulb
pop
sub
mov
ret
xor
push
andl
pminsw
xchg
dec
or
jl
stc
cmc
mov
cwtl
addl
inc
loope
mov
jecxz
mov
jbe
xchg
add
cmpsb
icebp
test
es
or
dec
fisubrs
std
mov
cmp
incb
sbb
jle
push
ret
in
sti
xor
stos
pushf
in
lret
bound
jp
sub
and
dec
lahf
mov
jns
daa
arpl
push
loopne
pop
adc
add
xor
dec
jb
jae
mov
pop
pop
cmp
fsts
dec
or
lcall
jno
dec
xor
push
xchg
lods
xlat
add
fsubr
data16
clc
sbb
cmpsl
outsb
mov
mov
inc
jae
mov
pop
push
mov
mov
shl
xor
pop
push
lea
roll
mov
jl
mov
xor
enter
cmpsb
jae
aaa
mov
inc
jae
adc
dec
mov
mov
pop
xchg
out
inc
mov
xchg
xchg
inc
mov
stc
push
test
dec
lods
sti
lods
mov
popf
outsl
lock
out
rol
cli
push
popa
dec
mov
cld
lret
mov
ljmp
js
lods
mov
push
xchg
cmpsl
push
std
mov
mov
lods
jg
add
fsubs
lcall
lret
int3
lret
mov
mov
loop
out
ficoml
lret
or
sbb
mov
daa
ja
adc
jge
adc
mov
push
sahf
pop
xchg
aaa
movsl
cmc
or
jb
gs
roll
push
imul
int3
sub
push
push
dec
and
mov
aas
add
dec
pop
jae
ds
mov
and
adc
stos
fdiv
pop
loop
leave
mov
xor
imul
ja
aad
sarb
xchg
test
inc
iret
inc
dec
in
fisubs
popf
cmp
inc
arpl
mov
and
in
sti
xor
xchg
decb
fisttps
mov
and
mov
xor
pop
push
inc
lcall
sbb
loop
movaps
je
jb
xlat
je
fcmovb
add
pusha
inc
jae
popa
lods
mov
ret
nop
mov
cmp
stc
add
pop
xchg
sti
cmp
mov
add
ja
in
push
sub
and
sar
sbb
shll
fcompl
jnp
imul
mov
in
xchg
jecxz
add
cmpsl
testl
out
add
addr16
rclb
xor
mov
dec
mov
mov
xor
push
jecxz
in
out
mov
jle
cmp
and
push
pop
clc
rclb
xchg
jg
loopne
sahf
in
jo
lds
and
jno
cmp
test
rcrl
pop
and
xor
test
and
sub
pusha
push
mov
subl
repz
sub
or
or
sbb
push
rcrb
call
push
mov
insb
repnz
sahf
pop
push
mov
mov
xor
sub
inc
fcompl
into
std
mov
pop
negb
jge
mov
mov
xor
lret
xor
pushf
xchg
cmp
stc
cmpsb
sbb
or
rcrb
xchg
jl
in
inc
inc
ds
push
mov
mov
cmp
or
and
pop
js
add
mov
lret
sbb
dec
loopne
aam
push
jmp
jle
pop
inc
negb
jge
sbb
jp
adc
push
sahf
out
add
xor
outsb
out
pop
mov
jge
out
xchg
cmc
and
call
mov
loop
and
and
xor
sbb
jno
xchg
imul
scas
mov
inc
adc
add
push
out
lds
je
loopne
mov
pop
sub
jo
jno
lret
cld
scas
pop
inc
int
rcll
in
movsb
mov
mov
jg
imul
fsts
gs
sti
pushl
mov
pop
sbb
adc
mov
stos
sarl
flds
int3
sub
cmp
jo
xor
fs
test
ds
leave
leave
xchg
loope
push
daa
dec
pop
and
pop
dec
push
sti
fimull
sub
cmp
call
mov
es
or
std
xorl
lcall
jnp
inc
mov
push
cltd
jg
sub
cmp
ret
das
jne
mov
shr
adc
mov
dec
pop
clc
je
add
xor
daa
insb
js
lods
jns
add
pop
mov
pop
lret
push
das
mov
add
outsl
inc
cltd
test
add
stos
sarb
test
fcomps
or
cmpsb
mov
mul
addr16
lds
lahf
mov
jae
sub
and
bound
cmp
loope
sub
xlat
adcl
xchg
lret
adc
mov
movlps
roll
xchg
jg
ss
roll
inc
fldt
mov
jbe
mov
pop
movsl
jle
push
mov
sbb
sub
xchg
orl
outsl
nop
xchg
notb
and
iret
mov
movsb
aam
sbb
dec
xchg
fidivl
xor
in
xor
xchg
orb
and
add
outsl
outsl
fstl
insb
ficomps
sbb
stos
mov
scas
inc
out
fsub
inc
lret
roll
mov
xor
loopne
loope
push
test
aaa
pop
lcall
adc
lcall
lea
inc
fmul
adc
add
mov
ret
xchg
int3
mov
xchg
addb
mov
call
push
mov
shlb
dec
repnz
xor
mov
sub
jb
adcb
flds
movb
loopne
add
or
pop
push
andl
cmp
dec
and
pushf
mov
cli
loope
cmp
mov
or
inc
stc
mov
loop
jno
je
push
mov
in
out
mov
jle
lret
sahf
std
iret
adcb
add
sbb
cmpsl
loopne
imull
jge
imul
cmp
movsl
mov
push
and
dec
lret
sysenter
or
rorb
mov
sti
ret
push
jecxz
popf
std
lret
js
mov
jnp
lahf
je
cmc
xchg
fcmovne
dec
adc
pop
or
insb
fwait
pop
sbb
dec
cli
mov
push
es
divl
and
bound
shlb
or
adc
or
push
in
scas
xor
and
cmpsb
ret
push
sub
xchg
inc
or
pop
or
mov
cld
jns
shll
in
dec
pop
xor
or
xchg
gs
dec
pop
mov
imul
enter
push
sub
pop
mov
shll
cmp
pusha
adc
adc
push
pop
mov
mov
mov
sbb
lods
lahf
jne
cltd
dec
inc
mov
pop
cltd
sti
pop
rorb
xchg
rcrb
adc
xor
in
sahf
mov
xor
xchg
orb
repz
test
andl
mov
xchg
adc
push
je
push
dec
adc
decl
sub
dec
pop
aad
stos
xchg
cli
daa
inc
inc
iret
inc
dec
movsl
mov
jae
xor
pushf
mov
cs
loopne
mov
or
fs
call
addr16
xor
xchg
mov
push
lahf
test
or
loop
stc
xchg
outsb
lods
shl
inc
ds
and
inc
stc
hlt
jecxz
leave
inc
add
pop
aas
call
mov
xor
mov
adc
stos
mov
push
mov
sbb
sbb
orl
stos
push
cmpl
or
repz
popf
sahf
xor
je
mov
push
add
pusha
fwait
pop
lcall
jne
sahf
out
pop
mov
push
jp
push
push
mov
jge
inc
cmpsb
andl
xchg
pop
cmpsb
cmpsb
sbb
sbb
pop
and
push
ds
fldl
xchg
jle
repnz
fldcw
and
and
sub
jb
roll
cmp
push
rcrl
mov
push
mov
lahf
cmpsl
adc
outsl
add
rcrl
pusha
add
xor
add
jns
push
sahf
mov
sbb
xchg
jg
jns
mov
repz
in
inc
repz
mov
test
push
and
pushf
shll
dec
lcall
cmp
les
mov
mov
out
dec
xchg
xchg
cltd
sub
push
add
out
arpl
out
jmp
jge
jbe
add
push
je
push
cli
addb
cmp
dec
out
fsubr
or
out
inc
or
outsl
aad
inc
test
sub
push
adc
push
test
out
pushf
jno
mov
popf
mov
and
cli
inc
inc
push
or
arpl
loope
pop
lods
cmp
lret
dec
mov
jecxz
mov
rclb
lret
mov
mov
pop
andb
cwtl
pop
in
sbb
adc
jl
add
mov
add
fs
adc
push
pop
inc
mov
push
rorl
add
mov
adc
push
mov
pop
sub
mov
mov
sbb
or
lds
pop
sti
and
pop
data16
sarb
out
mov
popf
dec
sub
jg
inc
inc
jno
test
sub
add
out
mov
out
sarb
mov
mov
and
enter
fmull
mov
rclb
and
add
xlat
jmp
out
cmpsl
pop
jb
sub
adc
mov
out
rcr
ljmp
sbb
xlat
and
idivl
test
dec
xlat
mov
adc
popa
fdivrs
mov
dec
fnsave
lods
sbb
mov
daa
mov
adc
dec
pushl
outsb
adc
push
cmp
pop
push
cltd
add
pop
lea
fst
inc
jne
fists
ja
inc
int3
jle
movsb
push
mov
push
xor
or
xor
inc
ret
mov
inc
in
test
mov
pop
mov
movsl
cs
adc
scas
movl
pop
sarl
mov
cmp
mov
lcall
ljmp
mov
sub
in
lret
gs
shlb
data16
sbb
cwtl
mov
clc
in
fnstsw
cmpsl
dec
arpl
cmp
addr16
xor
clc
fildl
jle
dec
out
mov
in
xor
mov
dec
inc
inc
jp
das
in
sub
mov
sbb
movsb
mov
and
movsb
push
lahf
adc
xchg
sbb
mov
mov
or
aaa
jle
xchg
and
fdivr
fdivrl
dec
jb
jge
outsl
jecxz
xor
add
imul
jmp
clc
sbb
jmp
enter
pop
leave
jp
loopne
cmp
or
int
push
xchg
dec
movsb
in
mov
jae
inc
cld
cmp
inc
rclb
mov
xor
cmpb
xor
mov
jbe
loop
sbb
hlt
mov
fdiv
push
dec
pop
enter
cmp
lcall
out
fs
sbb
sbb
cmp
mov
or
inc
jnp
fadds
fwait
shll
fmuls
xor
pop
push
xchg
pop
mov
adc
rorl
jmp
movsb
in
imul
pusha
xchg
lahf
lods
xor
xchg
nop
jl
add
mov
iret
gs
cli
cmp
xor
mov
jl
xor
sub
lret
imul
mov
popl
in
into
xor
in
mov
shll
xchg
movsl
or
jb
push
inc
sub
fcmovnu
ds
jbe
mov
ss
enter
fst
pop
lcall
pop
fs
shlb
dec
mov
sbbb
mov
sub
dec
stc
fs
mov
push
jl
and
bound
test
or
shrb
in
aas
mov
adcb
ret
leave
mov
or
sbbb
fwait
xor
mov
popa
dec
iret
pop
dec
ljmp
or
repnz
add
in
in
aaa
cmc
and
push
ss
jne,pt
aad
xor
les
xchg
lcall
pushf
sti
cmpsb
adc
jmp
fidivs
dec
sub
mov
mov
pop
fwait
imul
rclb
push
or
daa
enter
iret
popl
cmp
mov
or
mov
fdivr
cmp
jnp
icebp
add
repz
or
gs
sub
push
imul
popa
xlat
or
push
pavgb
mov
inc
inc
adc
rorl
xchg
rcll
jge
sbb
inc
bound
sbb
push
repnz
testb
sbb
xchg
jo
jmp
orb
pop
sbb
scas
cmp
ss
mov
dec
jo
adc
dec
sbb
jmp
js
in
and
adc
push
pop
mov
jo
int
sub
mov
mov
aam
jnp
cmp
inc
push
arpl
pop
clc
adc
jecxz
jnp
scas
repz
pushf
add
nop
dec
xchg
insb
push
test
cmp
jae
push
outsb
xchg
jmp
cwtl
adc
lcall
jecxz
mov
ficompl
mov
mov
jmp
push
or
fistps
and
in
or
adc
mov
push
mov
ret
ss
pop
or
mov
and
mov
lret
pop
arpl
pop
mov
sub
lods
cmp
les
jl
in
mov
daa
inc
dec
cmp
push
xchg
out
mov
aaa
out
cwtl
ret
sti
jecxz
outsb
inc
cwtl
cs
push
mov
sub
push
jns
add
movl
inc
out
jmp
in
std
cmp
test
sbb
and
push
into
pop
idivl
or
jecxz
out
xchg
out
dec
pop
imul
push
sub
das
adc
stc
and
les
cmp
fsubp
jge
ja
mov
sbb
mov
fisubrs
stos
cmp
or
int3
loope
mov
mov
in
mov
cmpb
sahf
mov
and
xor
inc
fsubl
sbb
aam
cmp
sbb
adc
mov
sahf
fnstcw
sub
pop
test
sbb
movsb
push
push
jnp
les
add
clc
mov
pop
out
roll
push
outsl
inc
outsb
inc
arpl
sub
mov
sub
test
out
out
std
mov
xchg
pusha
xchg
ror
out
and
or
jg
xor
lret
jo
sbb
adc
jb
sarb
scas
pcmpgtw
inc
pushl
push
mov
add
sub
call
pop
clc
cmc
jl
adc
std
pop
sub
test
push
xchg
imul
es
js
lock
jge
shl
add
push
sbb
hlt
ret
lods
lahf
je
mov
sahf
xor
movsl
imul
out
ds
push
orl
push
push
cmp
mov
lock
aam
dec
sbb
addr16
mov
inc
ret
mov
jne
pop
insb
filds
sbb
scas
xorb
dec
dec
stc
dec
aam
mov
cmp
or
bound
push
inc
mov
test
cltd
add
cmp
or
dec
lret
std
push
pushf
addr16
mov
dec
jge
mov
xor
sbb
mov
fnstsw
and
cmpsb
loopne
cmp
aaa
ja
lret
sbb
aas
jns
pop
std
scas
mov
or
dec
pandn
add
imul
or
jo
adc
pushf
jnp
dec
xorl
mov
add
jge
repnz
ss
xchg
jmp
ds
clc
in
dec
cmp
lods
je
popa
pop
int3
pusha
jmp
imul
cli
adc
ss
pop
adc
lock
mov
ud0
outsb
jge
add
fstps
outsl
xor
shlb
sti
js
aam
or
js
mov
pop
ss
or
push
rcll
addr16
aad
inc
add
insb
loope
mov
mov
cmc
xchg
or
fdivrp
repnz
push
push
push
push
cltd
cltd
pop
in
jb
decb
test
out
call
in
mov
cmp
out
cwtl
aad
pop
int3
scas
mov
ja
jno
sub
mov
mov
dec
sub
loope
andb
or
adc
mov
cmp
lods
push
or
dec
mov
and
xchg
push
or
sbb
or
xchg
cmp
paddsb
cmpsl
scas
imulb
int3
mov
pop
scas
dec
aad
sbb
add
add
shrl
jmp
repz
lret
lea
mov
test
insl
cwtl
lcall
inc
les
or
sub
cltd
mov
inc
sti
push
add
mov
mov
pop
lcall
inc
jns
and
incl
mov
sarl
pop
cmp
popa
pop
xchg
test
inc
xor
cmpsb
adc
rolb
in
mov
pop
xchg
sbbl
jb
inc
pushf
mov
sub
test
js
ret
and
cltd
lea
out
adc
aas
sbb
popf
data16
fistpll
fwait
ret
shrb
pop
push
mov
mov
jnp
and
fidivs
mov
mov
mov
jl
add
mov
nop
jg
sub
fwait
adc
mov
loop
je
int
mov
sub
sub
push
push
fsub
push
add
nop
xchg
and
adc
xchg
gs
scas
imull
imul
repnz
and
cmpsb
stos
push
scas
decb
pusha
jne
or
repnz
out
jge
loope
ret
int
scas
insb
lds
into
adcl
fadds
push
lods
dec
out
inc
into
fisubs
sbb
lods
in
iret
inc
int
pop
pushf
inc
push
sub
je
lcall
movsl
das
bound
shrb
pop
sbb
xor
lcall
cwtl
add
outsl
shll
loop
jg
mov
outsb
dec
mov
and
movsb
pop
lea
pop
movsb
das
jge
imul
xchg
mov
and
xchg
out
in
test
mov
inc
lock
inc
fdivs
stos
insb
adc
mov
stos
pop
pop
xchg
adc
pop
aaa
add
test
fs
add
xor
fwait
not
loope
pop
xor
aad
mov
jmp
test
scas
jecxz
jecxz
push
sbb
mov
pop
mov
adc
mov
sbb
in
push
xchg
push
add
mov
push
mov
sub
lcall
and
fildl
jbe
sarl
adc
int
imul
mov
iret
int3
cmp
js
jecxz
adc
jnp
jae
jp
xchg
stc
push
jns
pop
jno
mov
cwtl
mov
inc
mov
sub
add
loope
or
sarl
aas
in
xor
add
or
fcmovnbe
fldpi
dec
daa
push
mov
fstpt
lret
sub
pusha
cwtl
sub
mov
cwtl
or
arpl
mov
in
into
shlb
jb
insl
push
jmp
inc
mov
ss
push
cmp
outsl
xor
pop
xor
daa
push
xchg
jns
popf
fmuls
pop
pop
pop
gs
sbb
pop
ficompl
test
hlt
inc
inc
xor
inc
jge
cmovno
in
popa
dec
pop
ret
dec
shrl
dec
das
push
push
xchg
and
push
cmp
cmc
ds
dec
dec
and
fmull
xchg
mov
les
daa
jmp
in
cld
dec
inc
push
and
insb
scas
xor
jg
dec
sub
repnz
movsl
mov
inc
sub
sub
popf
or
pop
shlb
sub
addr16
inc
xchg
movsl
in
xchg
xchg
sbb
mov
shr
test
int
sahf
movsl
fildl
je
push
lds
sub
subb
js
push
mov
pop
cli
mov
add
ficoml
cli
out
fisubs
popf
imul
lahf
add
scas
js
aaa
mov
xor
inc
xchg
pop
dec
stc
ljmp
mov
pop
jecxz
lods
sub
rcrb
lcall
aaa
inc
leave
and
out
mov
and
sub
test
add
mov
mov
xor
inc
fstpl
daa
lods
sti
divl
pop
mov
aaa
subb
xchg
sub
enter
mov
and
dec
cmp
jbe
jecxz
out
shlb
sbb
std
in
pop
cmpsl
dec
cmp
sbb
mov
repnz
testb
and
cmp
inc
xchg
pop
add
insb
or
popf
cmp
xchg
mov
int
in
aad
test
and
ja
je
dec
mov
or
xor
cmpb
sti
cs
push
pop
divl
out
inc
maxps
mov
inc
loope
pop
inc
add
add
mov
hlt
or
push
push
or
jb
adc
dec
jecxz
mov
lds
je
pop
int3
push
enter
enter
xchg
clc
mov
xor
add
adc
and
dec
xchg
jg
lret
sub
inc
mov
in
sbbb
fwait
aam
aam
call
mov
sbb
loop
mov
shrb
cli
test
popa
dec
js
in
xchg
fdivs
mov
jb
or
movsl
mov
jno
mov
lods
pop
mov
fwait
rcrl
xchg
cmp
cli
mov
sbb
je
imul
sbb
jno
test
add
xchg
push
jbe
lods
stc
add
into
xor
push
push
stc
adcb
or
sbb
xlat
cmpb
xchg
out
push
sub
bound
sbb
mov
sbb
mov
add
xchg
adcl
sub
push
mov
jp
jg
mov
movsl
jmp
stc
add
stos
push
outsl
jmp
push
mov
sbb
cmc
mov
dec
cld
adc
dec
xchg
cmp
arpl
jle
mov
cmc
mov
jge
jb
stc
lahf
outsl
mov
adc
lret
jae
push
loopne
test
clc
xchg
push
stos
in
or
movsb
add
inc
das
test
mov
add
xor
push
mov
int
sub
andb
jno
sti
dec
xor
fnsave
xchg
or
hlt
cmp
xor
jg
movl
jnp
push
pop
inc
in
mov
cmp
test
jmp
jge
inc
mov
fstp
cmpsl
cmp
push
les
mov
mov
adc
cwtl
ljmp
xor
test
pop
jge
xor
mov
jge
xor
rolb
push
add
xchg
cltd
cmpsb
movsl
and
sbb
mov
adc
dec
xlat
loopne
dec
test
cld
sti
sti
bound
lods
ret
sub
loope
test
out
lock
bound
rcrb
sbb
xor
mov
pop
xlat
adc
call
mov
pop
sbbb
push
mov
xor
je
pop
adc
out
bound
adc
xchg
ds
fsubp
into
rorl
dec
jp
aas
sub
xor
mov
sub
xchg
xchg
xlat
aad
adc
mov
and
js
lret
mov
mov
inc
test
sub
jo
mov
testw
rcrb
xchg
add
fsubrs
push
adc
push
int3
xor
push
inc
lods
and
mov
cmpsl
outsl
les
mov
pop
fcoms
ret
hlt
test
pop
hlt
jnp
flds
cmc
cmp
outsb
popf
jb
fsubp
jge
gs
rorl
data16
fs
ds
repz
insl
mov
dec
adc
xor
ja
push
jbe
push
mov
pop
jno
dec
jle
out
sbb
mov
cmp
cmp
icebp
add
stos
jns
rcr
gs
push
add
xchg
jne
xor
shll
add
jae
int
add
pop
ljmp
jp
pop
imul
stos
rcll
push
cmp
push
add
xor
xor
aas
outsl
bound
xchg
xor
cmp
push
icebp
repz
push
or
shll
in
mov
ja
fdivs
mov
pop
imul
cli
sub
ss
loop
sbb
lods
fwait
mov
mul
sbb
add
lods
pusha
addr16
loopne
cmp
mov
rcll
pusha
divb
jns
dec
fwait
out
cmp
sbb
lock
insl
hlt
inc
inc
xor
and
adc
sub
pop
lds
repz
push
ret
in
push
loopne
fs
dec
jecxz
or
xchg
in
push
pushl
movb
out
pop
dec
sbb
out
pop
dec
iret
clc
or
bound
repnz
mov
les
ss
in
jl
dec
push
adc
ror
xchg
lods
test
stc
sub
xchg
jnp
aam
daa
stos
pop
sbb
adc
js
cmpsl
rcll
out
xor
cmpsb
push
inc
lods
cmp
sbb
dec
lods
lock
ret
pop
pop
in
ljmp
shrl
in
sub
sub
das
push
adc
cmp
insl
imul
lods
and
shlb
sub
rcl
jl
jg
xchg
lret
inc
mov
xchg
mov
aas
or
in
mov
popf
dec
xor
sahf
in
ret
jae
xchg
add
ficoms
notb
mov
inc
icebp
xlat
aaa
arpl
add
shll
in
aas
mov
rcl
sub
pushf
data16
sub
jne
pop
push
inc
inc
sahf
push
adc
push
test
sub
pop
mov
xlat
dec
sbb
int3
sbb
scas
xor
adc
lahf
cmp
mov
arpl
and
push
mov
jno
add
push
pop
adc
shrb
call
out
shlb
cmp
push
mov
out
outsl
mov
jp
popf
outsl
out
roll
je
mov
push
daa
test
scas
addl
idiv
daa
dec
in
pop
jg
xor
add
divl
insl
cmp
rclb
push
lret
lea
pusha
stc
xor
sub
push
mov
or
test
bound
mov
pusha
xor
aas
push
fdivl
repz
xchg
notb
jg
sahf
add
rolb
out
popl
and
push
inc
mov
adc
testb
fists
pop
xchg
jnp
sub
or
hlt
clc
and
or
aam
ljmp
add
pop
push
stc
mov
addr16
sub
pop
test
mov
mov
jl
mov
dec
jne
dec
sub
movsl
enter
sbb
es
jns
sbb
lea
out
addl
jecxz
mov
mov
icebp
ret
dec
inc
mov
jmp
mov
aaa
mov
mov
inc
adc
enter
mov
sbb
dec
sbb
pushf
inc
inc
test
les
xchg
xchg
dec
fiaddl
adc
leave
inc
and
rcr
dec
pop
and
or
insl
loope
inc
pop
pop
sti
pushf
cmp
in
jle
pop
rcl
cmc
hlt
jle,pn
ljmp
jg
sub
sub
dec
sbb
test
fs
mov
cmp
movl
iret
shll
sbb
adc
in
test
js
das
jae
adc
add
stc
cli
or
push
cmpsb
pop
inc
lahf
adc
dec
cwtl
ret
in
scas
mov
pop
js
in
popa
inc
mov
in
push
cmpsl
loopne
mov
xor
sub
movsb
dec
mov
pop
dec
push
insl
mov
data16
in
outsl
scas
out
mov
sbb
movsb
pop
xor
or
inc
es
imul
arpl
sub
ret
and
cmp
add
dec
outsb
rclb
les
cmp
orb
push
and
push
xor
pop
scas
pop
insb
lods
hlt
inc
push
cmp
sbb
fwait
shrb
daa
mov
push
jle
sbb
test
movsl
push
ret
sbb
outsl
in
lcall
pop
pop
daa
adc
push
inc
jnp
inc
std
cwtl
pop
int
subl
sub
jmp
add
sbb
nop
in
cmp
cmpsb
loopne
adc
lret
lret
pop
mov
add
sbb
js
pop
cmc
leave
ret
or
xchg
lahf
jecxz
icebp
movsb
mov
pop
jecxz
cmp
add
fimull
adc
mov
arpl
int3
dec
pop
subb
andl
nop
add
fdiv
jb
cmc
fildl
ss
xchg
or
leave
push
imul
pop
sub
sbb
arpl
mov
push
push
aad
mov
inc
fidivs
dec
je
enter
pop
add
lahf
fwait
mov
jae
fmul
inc
test
rcl
rcrb
mov
ljmp
cmp
mov
mov
sub
jge
ret
cmp
or
mov
shlb
repz
dec
in
popf
inc
sub
stc
or
mov
pushw
ret
lock
idivb
dec
imulb
testl
lods
loop
cmp
mov
inc
add
fdivrl
jmp
dec
daa
test
test
icebp
sbb
imul
popf
xor
cmp
dec
mov
out
pop
and
enter
rcr
cli
adc
xchg
gs
jp
ss
sub
pop
test
inc
out
iret
sbb
jb
mov
inc
mov
out
mov
fsubrs
nop
jo
and
rclb
cmp
jecxz
imul
push
aad
mov
mov
jl
dec
roll
xor
xor
movsl
sbb
adc
ljmp
jo
sarb
in
ja
jnp
ja
or
aaa
int
es
mov
mov
xor
enter
sub
je
lret
adc
repz
cmpb
jecxz
jnp
pop
fisttps
rolb
dec
add
js
and
lods
cli
mov
jle
jecxz
mov
jg
scas
int
add
lock
pop
mov
sbb
enter
fs
ret
rolb
dec
jecxz
out
sbb
es
movsb
pop
push
imul
fxtract
inc
xchg
popa
aad
xchg
stos
xor
xor
mov
jmp
lcall
mov
and
mov
popf
stc
addr16
cmp
daa
icebp
mov
cmp
fsubl
inc
js
adc
xor
nop
jne
pop
es
adc
outsl
push
push
js
dec
jno
xchg
test
mov
and
icebp
dec
sbb
push
std
jb
imul
int3
loop
lcall
iret
rorb
js
dec
dec
adc
add
push
js
arpl
fs
insb
add
cmp
loopne
xchg
pop
lods
dec
jnp
jg
xchg
ficompl
shrb
jae
cld
arpl
cli
lock
enter
and
jo
cmp
sub
sub
fsubl
fwait
mov
xchg
jae
xor
mov
bswap
jecxz
pop
pusha
stos
add
cmpsb
sbb
mov
mov
data16
dec
pusha
aaa
lret
mov
test
cltd
adcb
adcb
jmp
out
mov
add
jbe
inc
add
push
mov
xchg
fdivrs
inc
adc
pop
arpl
out
leave
inc
mov
mov
imul
push
je
testl
andl
out
xchg
out
popa
fcoml
dec
imul
test
sub
jl
sahf
or
dec
int
shlb
xchg
int
add
jle
mov
mov
lcall
lock
test
inc
js
jmp
test
rorl
and
std
xor
sbb
sbb
jbe
or
call
cltd
jge
int3
movsl
movl
mov
sti
ficoml
lods
repz
fdivrl
xchg
xor
outsl
roll
lock
push
jne
or
mov
lock
mov
stos
mov
xchg
jbe
notl
pop
mov
push
aad
fcoms
lret
or
jb
or
loope,pt
push
jmp
xchg
scas
lea
pop
mov
sub
jge
and
sub
pop
xchg
push
rcll
xor
dec
enter
cmpsb
jl
ljmp
hlt
fistpl
roll
or
or
out
mov
movsb
sub
cmpsb
mov
sarb
out
sub
mov
push
scas
sbb
inc
jne
and
cmp
xchg
negb
inc
mov
jecxz
pop
stos
cs
pop
popf
fisubrs
or
xchg
push
xchg
push
clc
aaa
sub
dec
cwtl
mov
insl
int
out
nop
insl
or
adc
dec
test
xchg
cmpsl
and
adc
sub
pop
cmp
inc
inc
adc
mov
jne
jmp
jle
das
inc
xlat
lds
mov
push
ds
rcl
and
xchg
mov
out
loopne
sarb
push
jb
sub
dec
fsubl
call
mov
sub
cmp
cwtl
cli
sbb
imul
fldl
js
xor
jnp
jno
lods
fwait
xchg
jo
sub
xchg
jp
xlat
bound
arpl
popa
dec
pop
mov
mov
and
popf
out
push
mov
push
add
push
sub
pop
ja
std
dec
mov
sub
xor
and
pop
push
mov
xor
mov
test
orb
clc
adc
subb
jbe
test
cmpsl
inc
push
push
mov
add
pushf
outsl
in
sbb
repz
cmp
sub
mov
mov
pushf
sub
push
inc
ss
lcall
or
xor
mov
mov
repz
xor
fisttpll
xor
aaa
or
das
adc
shrb
clc
mov
ret
lret
jg
mov
sub
addr16
out
outsb
cmp
aad
lods
pop
bound
popf
pop
das
into
cmp
jb
inc
pusha
adc
lds
jecxz
jge
sbb
cmp
nop
xchg
jmp
cli
cmp
push
dec
xchg
ds
inc
aam
sub
sub
fcompl
adc
fiadds
sub
lds
adc
or
loop
dec
test
mov
inc
shll
mov
sti
or
fisubrl
push
outsl
gs
int3
or
xor
xchg
jo
xchg
mov
or
ja
rep
cmp
pop
das
dec
mov
jnp
subb
jbe
movsl
aad
ljmp
ljmp
ret
std
cmpsb
mov
xor
ret
jns
iret
in
leave
imul
inc
imul
push
nop
inc
sbb
push
or
add
mov
cli
sbb
iret
call
or
xchg
cmc
xchg
add
mov
aas
jecxz
imul
xchg
out
out
dec
pop
lods
je
xor
fs
clc
jae
jns
mov
nop
aaa
aam
pop
in
xchg
jmp
inc
gs
bound
xor
rcrl
test
mov
daa
shl
js
ret
cmp
lods
xor
mov
jge
xchg
mov
fsts
inc
scas
es
sbbl
push
fwait
and
pop
bound
scas
xchg
cwtl
pop
ja
scas
push
mov
push
cld
sbbb
or
test
stc
movsl
push
sbb
ret
sbb
shlb
pop
push
add
sbb
fwait
inc
loope
arpl
popf
and
out
cmp
sahf
fildll
fsubrs
jb
in
dec
repnz
mov
mov
cld
ds
xchg
into
mov
mov
xrstors
mov
in
loopne
jae
dec
daa
insb
cmpb
aad
mov
adc
mov
fld
mov
inc
in
jg
mov
ss
mov
addr16
cmp
push
lds
xchg
imul
jge
aad
pop
sub
push
fwait
clc
leave
sub
ljmp
movsb
je
in
push
icebp
shr
push
fnsave
add
mov
pop
cmc
push
jae
add
xchg
jae
or
and
dec
inc
mov
xor
loopne
xchg
push
ljmp
adc
push
ret
dec
jbe
cs
loop
call
ret
cli
fidivrl
xor
nop
cmp
pop
dec
xchg
inc
jp
dec
cmpsb
dec
rorb
sub
popa
jecxz
shrl
sbb
cmc
inc
mov
js
and
or
inc
or
sub
js
cltd
stos
push
divb
xchg
bound
jbe
hlt
push
test
test
mov
mov
lcall
pop
xchg
inc
repz
rcll
nop
mov
mov
pop
cmpsb
les
cmp
into
inc
dec
adcl
mov
jp
rcrb
insl
adc
enter
xchg
notb
sti
insl
sti
or
dec
adc
lret
push
popf
mov
fdivrs
sbb
or
pop
adc
pop
xchg
scas
pusha
cmp
sub
xor
jne
push
mov
jp
mov
jle
mov
and
das
pop
stos
movsl
jns
sub
out
mov
je
jbe
iret
aas
and
fnstsw
mov
push
clc
bound
fistps
shl
jle
ss
jo
xchg
mov
cmp
and
outsl
xchg
sti
imul
pop
ja
dec
add
test
xchg
imul
push
push
out
lret
inc
inc
mov
and
mov
push
aam
insb
popa
jmp
jno
xchg
sbb
in
pop
outsb
cmp
sub
insl
rclb
cmp
icebp
xor
dec
push
sub
cld
adc
shl
roll
mov
movsl
mov
stos
popf
lcall
push
mov
push
aaa
stos
int
and
adc
icebp
inc
test
xchg
cmp
mov
dec
or
inc
cmpsl
jmp
pop
xor
add
sbb
int3
push
sbb
cmpsb
test
jl
dec
xor
sub
push
aad
stos
or
mov
icebp
sub
ror
mov
shr
mov
test
bnd
das
into
inc
pop
nop
mov
in
pop
jno
test
pop
xchg
mov
pop
stos
lock
roll
int
ds
push
push
and
dec
cmp
nop
fwait
addb
mov
cld
mov
clc
pop
mov
jnp
in
lods
in
ret
pop
lcall
push
push
sahf
mov
test
cld
mov
psubb
pusha
sbb
adc
pop
rcrl
lods
mov
add
jle
xchg
dec
mov
jecxz
sub
aam
sbb
lahf
mov
inc
cli
aaa
xor
out
imul
shrb
mov
jmp
mov
lret
movsb
test
les
push
and
inc
sbbb
orl
outsl
xlat
mov
sbbb
lcall
jl
mov
decl
dec
pop
inc
sahf
mov
xchg
adc
sub
xor
dec
ljmp
adc
aam
fs
test
mov
cld
jle
dec
add
adc
fwait
mov
cs
jno
sbb
xchg
add
cltd
test
imul
sub
mov
lds
ljmp
push
lock
out
in
cwtl
frstor
shl
inc
add
in
insl
repnz
cli
aas
dec
out
outsb
mov
inc
movsl
in
jns
push
test
and
sbb
stos
mov
lcall
xchg
lea
push
xchg
dec
mov
mov
cmpsb
ret
jl
mov
mov
jae
out
out
sub
and
mov
sub
fistpll
adc
xor
mov
stos
jnp
cmpsb
adc
xor
lods
rcrl
lods
imul
add
mov
nop
push
xchg
pop
mov
nop
int
scas
bnd
mov
fidivrl
fsub
mov
push
inc
insl
lock
clc
inc
lahf
sbb
cmp
push
ret
adc
push
or
dec
xor
hlt
inc
lret
mov
sub
ss
pop
push
pop
push
subb
scas
sbb
pop
test
xchg
fmuls
dec
sbb
pop
ficompl
push
loope
inc
pushf
sbb
and
ss
lret
sti
mov
xchg
jmp
cmp
and
dec
cld
insb
lods
inc
add
jmp
clc
sbb
in
test
icebp
xchg
cmp
jg
push
and
mov
mov
sbb
pop
jo
insl
dec
nop
cmp
fisubs
xor
pusha
imul
adc
in
lahf
mov
and
pop
movsb
mov
jo
cmp
dec
jno
int
jns
mov
aam
lahf
mov
clc
mov
adc
andb
dec
pand
int
cmp
iret
sahf
or
cwtl
jnp
and
adc
rcl
cmpsb
out
mov
push
jns
mov
push
stos
fsubl
xor
dec
jnp
xchg
in
mov
mov
cmc
push
push
sbb
mov
adc
adc
hlt
enter
jle
aaa
push
fndisi(8087
into
inc
lock
inc
lds
shlb
out
cmpsb
sbbb
cmp
rorl
mov
addb
xchg
xor
cmp
out
xchg
mulb
mov
jmp
mov
addr16
int
je
shll
arpl
jbe
test
xchg
rol
in
outsl
cwtl
decl
or
ss
test
outsb
jae
pop
vprotq
mov
cmp
push
add
pop
cmc
and
imul
sub
sahf
cld
nop
gs
clc
insb
cmp
xchg
mov
stos
in
ja
sbb
inc
cmpsl
xchg
lods
lea
xor
inc
cmc
mov
push
adc
sahf
lock
je
inc
cmc
repnz
mov
push
cld
xchg
sub
aam
push
dec
stc
cmp
and
test
xchg
add
xlat
fsub
inc
inc
cmp
mov
jg
push
mov
nop
aas
or
mov
rclb
jno
pop
pop
icebp
out
or
insl
fistpll
xchg
call
jne
pop
dec
cmp
ret
jl
xchg
adc
dec
inc
mov
sub
jbe
outsl
dec
mov
or
jne
mov
cld
leave
mov
xor
in
pop
sbb
mov
jmp
jmp
pop
push
fbld
cmp
pop
sbb
jo
das
imul
add
sub
dec
cmpsb
xchg
and
shlb
jns
fstps
cld
sar
xlat
xor
inc
xlat
cltd
cmp
fldenv
ds
insb
sbb
cmp
mov
xchg
cmpb
or
mov
mov
lret
push
and
popf
pop
add
mov
xchg
add
test
pop
lret
add
aad
jmp
mov
dec
xchg
adc
cwtl
into
pop
loopne
push
loope
jle
pop
adc
sbb
and
jle
xchg
mov
mov
push
ret
fdivs
enter
add
sub
aam
sub
pop
movsb
js
jnp
add
cmpsl
pop
popf
sbb
mov
inc
fwait
dec
inc
push
jbe
test
mov
push
bound
pop
icebp
push
out
fsubs
mov
inc
jle
jo
scas
mov
mov
in
ret
imull
jg
jg
push
add
out
mov
add
js
dec
mov
lods
test
das
inc
xor
ficoml
call
mov
fcoml
fneni(8087
call
loope
xor
mov
sti
inc
jnp
mov
callw
jge
imul
jecxz
int
repz
repz
jae
mov
or
cmp
cld
int3
nop
sti
inc
pop
cmpl
xchg
movsl
bound
je
subb
rcl
daa
loope
and
lret
and
and
push
subl
lahf
inc
xchg
loopne
cmpl
jns
and
outsb
rolb
mov
pop
imul
lods
test
sub
sbb
pop
mov
adc
mov
and
pop
sub
movsl
push
mov
and
mov
mov
movsl
add
pop
fsubs
sbb
jno
mov
popl
data16
cld
ds
pop
idivl
imul
call
into
cs
aaa
and
roll
ret
pop
dec
insb
xchg
fimull
dec
inc
and
mov
add
add
xor
jbe
ljmp
and
test
in
imul
dec
loop
sub
fstpt
nop
or
xor
lahf
xchg
int3
stos
adcl
mov
repz
sahf
popa
xchg
in
cmp
sbb
mov
pusha
jae
dec
sub
movsb
les
ja
push
gs
lds
xchg
or
outsb
pop
shll
hlt
loop
outsb
pusha
aam
std
dec
cmc
out
inc
ret
sti
sti
lods
in
inc
ljmp
fbld
mov
inc
sub
push
lods
xchg
in
daa
or
inc
loopne
jmp
xor
push
dec
into
ret
loopne
sub
push
nop
negb
push
xor
sbb
lcall
xor
push
mov
and
testl
fnstcw
inc
cmp
or
jns
push
cmp
or
bound
and
fdivr
mov
loope
xlat
inc
cmp
cmp
pop
xchg
mov
leave
mov
clc
adc
xchg
and
mov
pop
shll
cmpsb
push
xor
add
rorb
mov
ror
add
out
fisubrl
mov
xchg
aaa
cltd
mov
mov
cmp
inc
push
and
cltd
aam
inc
aas
subb
aas
dec
xchg
mov
jno
popf
pop
popf
call
dec
mov
fists
push
cmc
rorb
jp
insl
dec
xchg
ljmp
mov
pop
mov
push
pop
pop
push
pusha
adcb
sub
and
xor
mov
push
mov
sbb
pop
jnp
mov
fdivr
clc
push
lret
test
scas
xlat
ja
jmp
push
xor
adcb
in
jb
cld
test
mov
shl
scas
lret
daa
je
movsb
or
and
and
and
popf
pushf
sbb
cmp
xchg
push
adc
fbstp
je
add
jo
sub
xchg
das
fs
and
cmp
lahf
lods
xor
xchg
pop
mov
mov
cmp
pusha
push
jns
mov
or
test
insb
lahf
adc
shrl
pop
movsb
or
add
push
popl
push
pop
ljmp
in
ret
push
fwait
mov
cs
stos
leave
lds
add
jae
push
mov
or
xor
pushf
xor
scas
cs
enterw
mov
adc
pop
sti
lahf
pop
shlb
mov
mov
clc
mov
sahf
dec
dec
sbb
sbb
ror
adc
lods
jle
add
iret
cmc
rolb
pop
ret
mov
imul
pop
inc
push
adc
inc
mov
xor
pop
push
adc
lods
ds
dec
mov
repnz
push
adc
ss
cs
mov
adc
ds
push
push
pop
in
pop
loopne
rcl
mov
jbe
cmp
clc
arpl
sbb
movsb
mov
or
push
jmp
adc
push
xchg
loop
xor
xor
cbtw
pop
cmp
les
cmpsb
popa
xchg
sbb
clc
dec
clc
mov
aas
xchg
inc
cmp
mov
mov
mov
insl
mov
push
mov
test
push
arpl
iret
pop
pop
inc
js
jge
mov
popf
push
stos
and
sbb
sub
out
xlat
loop
ljmp
dec
pop
xchg
push
out
sahf
outsb
and
hlt
out
push
pop
fs
outsl
adc
xchg
dec
cmp
add
test
repz
sub
jb
adc
jb
cs
mov
mov
fs
cmp
arpl
out
filds
outsl
jns
adc
and
lock
sahf
loope
add
fsubrs
outsb
add
lahf
sbb
imulb
xor
into
faddl
mov
cltd
mov
pop
lds
pop
sbb
imul
xor
or
into
inc
or
xchg
sbb
lahf
subl
loopne
pop
aam
cli
stos
xlat
pop
sbb
mov
mov
pop
mov
jp
addr16
xor
dec
data16
pop
push
out
inc
mov
jbe
sahf
roll
test
adc
aad
shll
xor
lds
lock
popa
shrb
aas
das
jle
xchg
in
lock
imul
mov
inc
jg
mov
push
pushl
es
pop
jmp
and
ret
movsb
into
dec
sub
sti
sbb
loop
jmp
inc
scas
cld
lods
sub
pop
rcr
push
fistl
push
mov
movsl
fadd
dec
mov
adc
sbb
add
cmpsl
lcall
inc
xor
jl
ss
mov
daa
push
repnz
idivb
jl
pushf
mov
nop
loope
jge
and
addl
cltd
mov
fnstcw
in
push
mov
bound
dec
and
frstor
dec
aad
pop
add
xchg
movsb
in
icebp
xlat
mov
adc
clc
mov
lahf
mov
ds
push
outsl
fstpl
mov
add
pop
jbe
fmull
sti
dec
pusha
pop
shll
xchg
hlt
push
loopne
data16
jge
jge
xor
scas
ds
mov
sub
shl
shll
push
dec
xchg
fwait
push
mov
ret
rcrl
mov
shrl
shlb
add
cmc
dec
xor
out
rcll
je,pt
push
dec
aad
adcb
fbld
inc
push
cmpsb
fpatan
popa
adc
mov
sahf
pusha
pushf
adc
adc
xchg
mov
cmpl
test
es
xchg
mov
std
int
pop
sbb
sbb
push
xchg
mov
aad
test
rcrl
xchg
nop
ret
in
scas
push
lret
mov
jo
sbbb
push
aaa
stc
movsb
test
mov
lods
mov
pop
js
test
scas
call
in
test
out
mov
in
mov
iret
push
call
pop
lods
cld
sbb
movsl
inc
mov
push
push
or
ss
ljmp
nop
cmpsb
mov
cmp
and
outsl
fcoml
add
lods
xlat
ffreep
xor
mov
jo
cmp
rorl
hlt
xchg
fst
andb
sbb
cmp
movsl
cwtl
mov
in
inc
or
scas
loopne
xchg
pop
movups
popa
incb
shl
fdivrs
dec
les
cmpsb
popa
and
stos
push
mov
ret
mov
pop
lods
pop
adc
xor
int
idiv
mov
inc
push
cwtl
pushf
mov
and
clc
pusha
lods
shll
and
fs
movsb
popa
call
push
stos
jecxz
shrb
fucom
mov
cmpsb
sbb
outsl
js
or
and
movsb
sub
add
cwtl
xor
xchg
push
sub
mov
test
inc
or
das
jmp
aas
and
cmp
jl
mov
int
push
repnz
test
mov
int3
inc
movsb
xor
sarl
adc
lcall
adc
cltd
cmp
inc
sbb
push
pusha
mov
push
lock
jp
daa
mov
fisubrs
xchg
aam
push
mov
int
test
sub
mov
or
pop
xchg
dec
xchg
dec
ss
pop
add
adc
jg
adc
inc
pop
into
into
loopne
jns
insl
push
pop
pop
jb
add
pop
xor
xchg
orb
ficomps
mov
lcall
popa
pop
mov
add
insb
jae
pop
mov
dec
and
adc
into
adc
push
pop
imul
or
xchg
ss
jo
xor
popa
fstps
lcall
pop
mov
je
inc
icebp
test
icebp
jl
clc
sbb
int
ret
repz
je
psllw
xor
mov
push
mov
int
test
ror
dec
fidivl
dec
jae
and
fcoms
js
xor
ret
jge
leave
add
aaa
lret
xor
push
je
das
ret
iret
ret
sti
cmp
std
dec
pop
push
clc
or
sbb
mov
dec
fcomp
test
jl
js
imul
jp
jmp
ret
mov
add
popa
es
sarl
pop
shll
fbstp
cltd
mov
xchg
out
lret
stc
fs
fs
cmp
in
sub
xor
cltd
jne
gs
jmp
xchg
fsub
leave
into
in
mov
ficompl
push
lods
mov
imul
dec
xchg
dec
push
int
mov
mov
out
movsb
push
inc
outsb
or
lcall
out
ret
inc
inc
and
popf
repz
mov
bound
in
das
fidivrs
dec
insb
fcoms
dec
cmpsb
ja
xor
add
enter
les
fsub
stos
xchg
mov
scas
mov
ret
sbb
popf
inc
mov
bound
xchg
and
jle
push
push
lock
roll
in
jl
and
ret
lcall
sbb
jp
mov
push
mov
das
pop
outsl
repz
and
in
inc
fwait
gs
inc
test
hlt
and
lods
out
clc
cmc
cmp
mov
dec
xchg
sbb
pop
leave
in
mov
ss
sub
stc
sub
mov
nop
push
add
cmpl
daa
mov
adc
movsl
fwait
mov
outsl
cmc
mov
dec
inc
and
jle
loopne
inc
mov
mov
stos
jae
popf
inc
and
adc
sbb
stos
stc
test
sbb
shlb
sub
add
leave
add
push
out
xor
les
jl
fwait
mov
adc
repnz
jle
xchg
jmp
pop
cmovo
into
rcl
jg
or
or
mov
int
jb
mov
jno
testb
and
push
sub
pop
fsubrs
mov
outsl
fsts
and
shl
enter
pop
fisttps
mov
rorl
mov
adc
dec
pusha
fnop
dec
iret
mov
in
pop
inc
pusha
mov
pop
aaa
mov
mov
dec
aas
jge
dec
iret
mov
adcl
xor
lock
pop
cmpsb
and
ror
inc
int
sarl
call
pop
js
int3
ljmp
subl
or
sahf
jg
enter
aaa
addr16
mov
fs
enter
cmc
mov
lea
movsb
stos
cmc
mov
inc
pop
pop
lods
fisubs
jecxz
andb
add
rol
inc
aad
cmp
aaa
js
cmp
outsl
fistpl
inc
mov
dec
out
rcrb
cltd
es
sbb
and
dec
xor
rolb
jns
mov
pop
and
inc
dec
lcall
pop
xchg
mov
rcll
popf
jecxz
jns
and
or
test
or
pop
pop
fucom
mov
jb
stc
push
es
mov
mov
les
and
out
jmp
rolb
pushl
in
fadd
mov
pop
insl
cwtl
popa
or
out
mov
add
cmova
jecxz
add
lahf
xchg
pop
cwtl
xchg
push
mov
add
adc
inc
pop
jns
mov
lret
xor
addr16
outsb
in
pop
fsub
lds
sub
adc
add
fistps
pusha
adcl
popa
or
mov
push
loopne
iret
fdivp
pop
in
out
sub
data16
push
add
ja
sub
mov
lret
sub
jae
jae
out
push
cld
repnz
orl
pushf
aad
outsb
adc
pop
mov
xchg
pop
inc
shll
xor
ljmp
mov
dec
mov
sbb
inc
cli
jp
aas
mov
adc
ficompl
cmp
mov
and
dec
loop
lahf
jno
xchg
dec
or
cmp
mov
cwtl
ss
ljmp
mov
pop
cltd
inc
inc
sub
sbb
add
adc
sbb
push
sbb
adc
jae
clc
sbb
ret
insl
pushf
mov
repz
test
xor
movsb
xchg
mov
xchg
xor
mov
add
sub
dec
popa
pop
data16
test
idivl
enter
sub
pushf
lret
iret
dec
xor
mov
mov
sub
jge
sub
insl
jle
or
push
ds
push
test
jns
add
aaa
fisubrl
popf
xchg
into
mov
dec
out
dec
mov
fwait
call
fmul
and
xor
js
pop
dec
push
aam
xchg
cmpsl
inc
pcmpeqw
push
pop
roll
sbb
ret
movsl
and
mov
and
mov
cmp
das
mov
aam
out
ds
cld
push
rclb
mov
pop
cmpsl
cmp
mov
orl
mov
mov
xchg
mov
pushf
ds
scas
int
mov
es
sbb
dec
fpatan
mov
pop
scas
iret
fcmovnbe
push
pushf
mov
and
jmp
and
arpl
mov
std
arpl
add
cmp
jnp
xor
pop
sbbb
inc
clc
leave
xor
xchg
jmp
ret
mulb
or
xchg
mov
dec
ret
pushf
lods
sahf
dec
cmpsl
movsb
push
jmp
ja
jecxz
adc
arpl
mov
movsl
mov
mov
mov
push
je
pop
or
movsl
jmp
popa
push
sbb
mov
or
push
dec
cld
and
mov
cmp
and
adc
or
add
cwtl
aaa
pop
mov
std
mov
outsl
cmp
push
bound
addr16
mov
loope
pop
das
scas
cmpsb
shlb
or
sbb
jle
js
stos
and
std
insb
outsb
dec
les
and
or
sbb
lock
pop
test
cmp
xchg
sahf
mov
rclb
add
xor
inc
xchg
xchg
in
aas
iret
cli
clc
fst
cmp
jb
or
mov
mov
jp
std
ficoms
ss
push
add
call
lock
ret
es
sarl
sar
jbe
mov
mov
xchg
xchg
add
sub
pop
stos
shlb
xor
rcrb
cltd
imul
call
in
mov
xchg
sub
add
les
jne
iret
jle
orb
mov
mov
xor
fildll
add
mov
clc
roll
jb
push
cmp
push
push
out
sarl
loop
push
imul
ljmp
mov
in
and
mov
jmp
shr
jmp
pop
in
cltd
imul
movsl
mov
and
mov
mov
or
insl
xor
imul
sbb
mov
and
jmp
sbb
lahf
jns
adc
movsl
ret
push
cld
fst
dec
aad
sar
sub
or
pusha
mov
lods
lock
xchg
je
add
out
gs
outsl
fildll
in
je
push
push
dec
in
jmp
aas
xor
imulb
out
mov
stc
inc
in
cmovg
adc
inc
dec
data16
clc
jbe
jbe
test
inc
and
not
std
add
jne
lods
jge
out
adc
out
and
and
test
jmp
xor
ret
out
inc
punpckhwd
das
pop
scas
push
clc
xchg
popf
aam
mov
or
cwtl
push
jne
and
push
fldenv
fwait
in
push
jo
fcomps
mulb
fiaddl
xorl
or
outsl
icebp
xlat
and
dec
cli
adc
enter
cmpsl
jne
mov
fiaddl
mov
dec
inc
notb
pop
mov
pop
sbb
jge
fs
mov
lret
pushf
fimuls
pop
loopew
cmp
mov
pop
mov
sbb
mov
enter
jg
sbb
decl
outsl
cwtl
test
in
lods
in
mov
push
xor
je
je
mov
rol
adc
sub
push
fildl
push
add
jnp
pushf
iret
test
push
jbe
cli
add
ret
jb
push
adc
dec
mov
xor
cmp
pop
push
mov
notb
mov
mov
outsl
scas
js,pt
adc
mov
lret
pop
pop
pop
mov
dec
out
inc
sti
roll
insb
add
jo
inc
test
loope
add
xchg
testl
ficoml
add
xchg
cltd
cmpsb
mov
mov
out
push
and
test
dec
rorl
mov
xchg
jl
or
xlat
outsb
inc
xor
ret
and
stos
dec
jns
add
orb
je
nop
xchg
push
das
lahf
int3
cmp
adc
mov
mov
enter
adcl
mov
andl
push
testb
fildl
enter
imul
outsb
insb
xor
insb
push
aam
in
adc
dec
xchg
dec
lret
loop
push
ret
pop
jmp
jecxz
popa
fwait
or
and
sub
add
pop
shrl
xor
int3
fbstp
enter
fsubr
outsl
mov
sbb
in
in
pop
mov
and
imul
stos
fisubl
pop
jge
cmp
dec
mov
and
js
int3
cmp
sub
repz
jno
mov
xchg
ret
mov
shll
in
mov
das
arpl
dec
nop
aam
jl
sarb
dec
lods
xlat
into
jp
pop
jmp
mov
or
mov
insb
push
test
and
loopne
or
jnp
mov
loop
fwait
adc
mov
push
sub
mov
pop
mov
shrb
cmpsb
lahf
mov
dec
and
in
lods
mov
xorb
inc
insl
test
add
andb
push
scas
sub
pop
sub
fmul
or
ljmp
lret
popf
mov
sub
xchg
sbb
das
imul
in
in
mov
pop
pop
and
xchg
jb
scas
jle
in
mov
sbb
jmp
pop
testb
pop
sbb
scas
out
xchg
rorb
clc
cltd
or
out
les
xor
orl
or
es
insl
loop
ret
and
adc
cmpsb
call
ficoml
inc
mov
fisubrl
xchg
xchg
in
clc
push
les
or
cmpsl
loope
test
hlt
xchg
gs
outsb
inc
ret
pop
push
pop
mov
dec
mov
cs
adc
xlat
lahf
mov
push
movl
loope
dec
rcll
clc
sahf
jae
mov
pop
push
or
loop
add
js
ss
jle
lods
mov
cld
mov
xor
pop
xor
mov
ljmp
js
jnp
jp
push
sub
adc
xchg
inc
push
pop
fwait
cmp
gs
add
mov
and
addl
mov
xchg
testl
movsl
mov
shll
daa
loop
jno
clc
push
lods
sti
mov
push
ljmp
add
cmp
xor
ss
push
mov
push
xor
dec
cmp
or
sbb
out
sbb
mov
cmp
mov
test
sahf
add
inc
rcll
dec
je
or
sbb
in
jb
bound
in
xor
inc
dec
push
call
xor
movsl
mov
icebp
push
push
xchg
cmpsb
stc
inc
push
dec
sub
ss
push
inc
mov
xor
mov
cmp
xchg
jg
icebp
sbb
mov
pop
fucomi
inc
idiv
dec
fs
das
or
xchg
aad
insb
or
xchg
jg
les
pop
ljmp
andl
push
ret
hlt
dec
inc
jne
mov
fildll
add
iretw
outsb
sub
xor
mov
rorb
dec
jge
mov
and
stc
jg
notb
daa
jecxz
es
xchg
icebp
cmp
pop
test
loopne
sbb
push
movsl
adc
cmp
add
movsl
push
sbb
xor
push
gs
into
std
cmp
inc
ds
out
aas
pop
or
std
cmpsb
pop
add
xchg
jbe
ljmp
xchg
ret
sub
sbb
mov
or
cmpsb
add
inc
hlt
push
jb
pop
mov
pop
scas
shrb
add
lea
movsl
inc
insl
divl
jge
inc
arpl
push
int
or
and
cmp
cmpb
xor
sbb
xchg
mov
lahf
mov
xor
mov
imul
sub
shlb
push
inc
outsl
sbbb
cli
push
xor
pop
push
push
mov
push
lcall
push
and
or
fbld
xchg
sar
mov
push
and
fstpl
mov
jns
scas
pop
sub
pushf
mov
xchg
popf
into
push
push
into
dec
movb
dec
jb
cmp
jl
push
xorb
fcomps
sbb
iret
sub
decl
hlt
or
ja
das
mov
arpl
stos
lcall
js
sbb
rcl
lret
xchg
xor
in
je
pop
or
dec
pushf
jbe
adc
sub
xchg
clc
int
ss
shll
sub
sti
iret
mov
push
cmpsl
and
mov
adc
push
adc
fildll
mov
std
sti
lock
lods
xor
mov
xor
movsl
aaa
mov
and
jae
xchg
lea
xchg
daa
aaa
xchg
or
inc
or
mov
fisttpll
sbbb
push
lret
adc
pop
jle
pusha
mov
or
inc
sub
out
xchg
jecxz
or
xor
jnp
or
inc
push
or
push
mov
sbb
fdivrl
leave
sub
enter
sar
add
fcoml
loopne
leave
js
push
shlb
xorl
sti
push
mov
cltd
lret
inc
dec
lret
add
sub
dec
clc
in
jl
lcall
mov
inc
popa
arpl
ja
add
inc
sbb
notb
fisubrl
or
inc
int3
pop
sti
stos
adc
pop
idivl
xchg
pop
outsl
stos
shr
sbb
fimuls
stc
jg
or
sbb
mov
mov
xrelease
pusha
or
dec
insb
fucomp
and
add
bound
xor
xchg
lret
adc
test
andb
xchg
sub
das
dec
sub
inc
inc
mov
std
cmp
mov
daa
out
ss
xor
and
adc
adc
mov
and
mov
fimull
push
leave
sbb
test
pop
sub
ss
stos
dec
xor
xor
ror
cmpsl
cmp
pop
in
pop
xchg
xor
loopne
pop
outsb
ljmp
out
lahf
lods
adc
jne
cmpsl
inc
mov
das
mov
add
pop
inc
mov
lret
mov
jmp
mov
ffreep
orl
lret
add
sbb
arpl
xchg
mov
les
xor
dec
pop
ret
mov
popl
scas
lea
xor
mov
push
loopne
push
adc
stos
sti
jge
push
xorb
sub
aad
popf
dec
mov
test
inc
sar
sub
adc
jb
sti
xchg
mov
ret
push
and
lock
stos
jg
sahf
rclb
imul
dec
fisttps
rcll
cli
xchg
in
fstpl
or
sahf
dec
into
xor
xor
and
into
movsl
and
insb
lock
pop
nop
pop
leave
inc
sbb
push
sbb
pop
aad
mov
in
adc
mov
jl
data16
cld
or
lds
push
outsb
cmpsb
iret
cs
aam
xchg
xchg
mov
mov
dec
xor
jmp
jle
cwtl
push
mov
aaa
ret
mov
ds
mov
cmp
out
cmp
jmp
movsl
std
ftst
add
dec
and
orb
xchg
mov
je
hlt
mov
dec
xor
gs
shlb
mov
loopne
ds
pop
decl
hlt
je
ret
rclb
cmp
mov
pop
imul
and
dec
ds
scas
jnp
rorl
jo
xchg
cli
pop
jb
popl
aam
int3
in
popa
push
rcll
iret
push
scas
xchg
in
repnz
sahf
xchg
pop
dec
test
dec
add
clc
add
push
mov
xor
inc
inc
cli
dec
jns
movsl
lahf
xor
add
test
push
push
mov
pusha
lock
jg
lcall
push
ljmp
cli
pop
insb
call
sbb
sbb
or
negl
loop
mov
mov
stc
bound
inc
repz
fdivl
lcall
or
jne
jbe
mov
fbstp
aad
outsl
incb
icebp
outsb
push
lahf
fs
xor
add
test
sbb
lcall
and
dec
and
add
dec
push
ret
or
cmc
nop
xorl
push
mov
jno
repz
pop
in
es
insl
popa
pop
pop
movsb
xchg
xor
test
call
mov
dec
in
sbb
jns
sti
stos
decl
subb
imul
or
cli
icebp
dec
aam
in
ret
out
lock
ljmp
into
hlt
lret
out
mov
jp
jmp
dec
adc
stos
mov
cmp
jp
fildl
sub
rorb
ljmp
add
and
jb
insl
mov
mov
adc
mov
add
mov
in
mov
add
cltd
stc
add
jae
cwtl
aad
imulb
movsl
pop
out
js,pt
mov
add
push
xorl
adc
jl
jg
fsubs
jb
ret
into
stc
hlt
add
xchg
mov
cwtl
lret
push
push
pop
xor
inc
jmp
jp
aad
test
cmp
inc
pop
test
and
lret
push
daa
dec
cmp
cmpsl
es
aaa
mov
xchg
dec
inc
xchg
cmp
rcrl
call
ljmp
shlb
adc
insb
jae
jne
adc
sar
add
and
mov
mov
inc
mov
mov
mov
addr16
call
mov
adc
lea
rcll
jae
subl
mov
mov
cmpsb
shll
lds
test
and
bound
pop
adc
pop
dec
cmp
xor
scas
push
mov
loope
or
out
push
bound
xchg
movsl
mov
adc
insb
or
jae
xlat
mov
pop
push
cwtl
loop
aas
pushf
adc
imul
mov
push
dec
inc
pop
push
addl
mov
mov
sub
add
sub
jno
mov
adc
adc
adcl
add
test
out
sub
push
ffree
inc
repz
mov
insb
push
clc
jle
setno
sbb
les
mov
dec
test
movsb
dec
dec
mov
mov
scas
ljmp
cmp
ret
cld
lods
pushf
add
movsl
mov
xor
roll
lock
and
mov
not
aam
dec
and
dec
add
mov
insb
dec
xor
enter
xor
int3
ret
cmp
faddl
mov
les
sahf
ret
mov
mov
lret
xchg
leave
scas
xlat
popf
cmp
xchg
lahf
ficomps
pop
jecxz
add
scas
sbb
xchg
mov
jo
jp
or
sub
ret
sub
js
and
cmc
mov
out
mov
pop
pop
xchg
clc
dec
imul
stos
and
jne
enter
ret
pop
stos
shlb
push
adcl
add
loopne
mov
mov
mov
fldenv
and
sti
lret
sbb
clc
mov
cmp
out
cmp
stos
clc
test
movsb
dec
jo
divl
push
movsl
push
mov
leave
dec
mov
cmp
pop
mov
pop
gs
cltd
cmp
mov
inc
enter
xchg
cmp
fistpl
jne
addr16
push
mov
push
push
daa
inc
xchg
mov
dec
outsb
fwait
clc
inc
popl
subb
xchg
mov
mov
adc
cmp
out
clc
loope
aad
push
mov
call
daa
cmc
mov
push
xchg
fdivs
xchg
in
testb
pop
and
out
push
enter
cs
add
mov
scas
gs
mov
jno
shll
out
mov
fnstsw
cmp
mov
aas
lret
scas
lds
out
mov
mov
mov
aam
in
mov
shlb
inc
xor
inc
inc
rol
pop
add
leave
ljmp
js
lods
xor
jecxz
adc
iret
jp
dec
sbb
roll
add
jns
push
push
cmpsb
dec
je
imul
cltd
mov
frstor
xor
enter
test
jl
xchg
leave
xlat
movsb
pop
adc
fs
out
mov
call
add
lds
shl
mov
xor
jge
adc
xchg
es
fstl
mov
cmp
jbe
or
test
aad
mov
das
lea
in
into
es
lret
iret
divb
ljmp
fdivl
add
rorl
mov
sub
push
std
adc
adc
adcl
sahf
or
cmpsb
mov
mov
insb
arpl
jo
inc
xchg
adc
pop
in
dec
xor
test
sti
jecxz
out
adc
jae
mov
and
repz
cmpsl
jb
mov
ret
jle
jnp
shll
xchg
xchg
mov
jne
jno
lea
iret
mov
mov
das
add
xlat
cmp
mov
jbe
xor
movsb
or
sbb
xchg
fs
pop
push
cmp
xchg
es
jge
shl
pop
add
xor
adc
dec
and
push
inc
lcall
inc
std
or
in
call
mov
xor
cmp
rorl
xchg
fisubrs
ret
cmp
pop
push
jle
ficoml
push
dec
mov
arpl
leave
testl
dec
pop
sbbb
push
adc
xchg
inc
dec
out
out
aas
jecxz
push
mov
in
fcmovnbe
jg
or
je
shll
jle
ds
push
and
pop
lock
pop
cs
jge
adc
xchg
push
inc
adc
lret
fwait
and
jbe
add
lahf
int3
scas
pop
push
dec
sbb
jge
inc
lcall
mov
insb
push
add
cmp
sbb
addl
push
clc
insb
gs
sbbb
dec
into
lcall
testb
in
ds
fxch
popf
pushf
lea
sub
and
notl
ja
mov
andb
sub
ds
dec
mov
hlt
pop
iret
and
pop
das
inc
lahf
dec
rorl
lds
dec
fs
iret
pop
xchg
sbb
std
divl
sarb
orb
popf
test
imull
in
insl
add
and
adc
pop
popf
or
in
adc
dec
dec
stos
or
push
sub
jp
pop
mov
into
outsl
lods
clc
ljmp
sbbb
incl
leave
ljmp
fildl
cmp
stos
xchg
mov
adc
mov
and
adcb
sbb
cmpl
pop
iret
push
cmp
adc
sbb
loope
jae
sbb
mov
in
call
xchg
push
xor
pop
push
xchg
mov
imulb
pop
and
nop
sub
cmp
test
das
dec
xchg
aaa
sbb
icebp
adc
xchg
mov
and
inc
jmp
cli
cmpsl
ret
pop
cmpsl
sarb
popf
push
sub
inc
lock
xchg
jmp
arpl
push
push
out
mov
dec
xor
push
xchg
outsl
inc
push
xchg
testb
push
mov
call
jo
shrl
and
jns
mov
and
outsl
mov
hlt
cmp
das
imul
dec
jnp
int
outsb
push
pop
adc
dec
and
gs
inc
inc
pop
jne
sub
loope
jecxz
fistpll
stc
test
xchg
icebp
jp
ds
or
je
cltd
imul
lret
lds
mov
cs
sbb
popl
cmp
aad
push
fcomps
shl
cli
bound
add
dec
jb
out
xchg
mov
push
dec
stos
mov
cmp
xchg
sub
inc
iret
xchg
add
push
lods
std
jbe
jp
dec
xchg
fstps
popa
jb
ficoml
int3
lds
ds
xchg
pop
ss
mov
lcall
push
addr16
adc
sub
stc
popf
subl
mov
dec
adc
shrb
xchg
xor
stos
lods
add
popa
pop
jae
xchg
test
pushf
outsl
cmp
aam
je
addr16
inc
pop
cmpsb
mov
gs
cmpsb
adc
icebp
mulb
addr16
lods
out
xchg
pushf
push
dec
jg
push
jae
jns
dec
push
adc
mov
jmp
dec
rcll
sbb
jb
pop
cld
xchg
imul
dec
mov
sub
gs
enterw
addps
xchg
int3
dec
shlb
movsl
or
push
movsl
lds
call
inc
pop
das
fcmovnb
adc
sbb
adc
jge
popf
and
out
test
add
outsb
dec
inc
jg
mov
push
or
cltd
xchg
push
andl
jle
sub
cld
mov
movsb
mov
adcl
popa
mov
and
sbb
pop
mov
xchg
andl
ds
data16
and
movsl
shll
out
mov
inc
nop
jmp
mov
in
test
lds
mov
outsb
mov
repz
push
mov
dec
pop
loop
es
int3
dec
stos
xchg
mov
ds
fists
ss
jmp
pusha
pop
stc
jbe
jbe,pt
add
scas
sti
jg
and
adc
mov
push
push
inc
xchg
jnp
cli
xchg
push
or
cli
stc
pop
xlat
shl
mov
inc
push
push
jmp
scas
xchg
addr16
pop
sub
sub
dec
repnz
and
imul
test
xchg
inc
cmpsb
movsb
jne
cmc
js
xchg
and
add
jne
mov
mov
out
xchg
jmp
sahf
into
scas
jecxz
jo
ss
addr16
or
jne
or
pusha
nop
sahf
sub
adc
cmpsb
pop
mov
aad
inc
and
pop
push
xchg
add
mov
fbld
gs
es
xor
lods
lcall
cmp
or
sub
push
mov
jg
mov
sar
lods
fisttpll
aaa
dec
mov
cmpsb
jl
push
pop
jg
xor
mov
cmp
and
fistpll
ds
pop
addr16
inc
dec
xchg
cmp
fdivr
and
insl
jo
insl
xchg
inc
or
or
mov
xchg
out
test
shll
dec
cltd
dec
orb
mov
push
into
mov
xchg
xlat
aam
sbb
outsl
mov
dec
jno
xchg
inc
into
or
clc
mov
push
adc
inc
out
inc
xchg
jns
cmpsb
int3
mov
out
xchg
add
mov
add
push
out
xlat
adc
push
jmp
cwtl
jbe
cmpl
mov
pop
mov
movsb
dec
xor
push
xchg
loopne
jl
sub
cmc
notb
jmp
cmpsl
addl
xchg
lcall
lahf
lahf
fcmovbe
ret
movsl
call
xchg
pushf
ss
pushf
sarb
lret
adc
sbb
or
mov
mov
arpl
mov
dec
out
cmp
mov
mov
out
mov
jnp
je
sbb
jo
jne
jbe
pop
out
jl
ja
mov
pop
stc
mov
mov
and
xor
test
sub
mov
sbb
and
jge
in
mov
push
repnz
aam
sub
dec
pop
dec
add
xlat
mov
jnp
cmp
inc
insb
mov
jnp
inc
xor
push
add
mov
jp
cmp
and
mov
cmp
jmp
cmp
sbb
out
xchg
sub
cmc
pop
pop
pop
cwtl
jnp
mov
insb
repnz
sarl
leave
push
or
jb
test
movsl
fs
mov
pushf
jl
ja
lahf
xchg
add
mov
xchg
icebp
xor
mov
sub
enter
adc
and
inc
sbb
sahf
mov
xlat
xor
sbb
pop
scas
lret
mov
xor
sbb
mov
int
pxor
loopne
cmp
into
test
test
gs
pop
sbb
pop
lds
dec
cmp
jbe
leave
or
je
insl
add
xor
hlt
add
or
dec
outsl
movsl
lahf
push
xor
fcmovnu
test
stos
jb
test
push
into
sbb
sub
data16
gs
cmp
sub
push
push
sbb
xor
ljmp
rol
xchg
nop
fstps
mov
mov
nop
mov
cmc
sbb
adc
cmp
jp
cwtl
pushf
sub
inc
jns
inc
ret
jg
dec
fbld
and
cli
mov
jb
sub
xchg
pop
and
outsl
cmpsl
jae
sub
pushf
and
lahf
dec
sub
add
and
cli
adc
lret
das
or
jbe
hlt
imul
cltd
push
xor
fbld
lcall
popf
pop
inc
cmp
dec
pop
mov
addr16
test
and
cmc
ret
lret
sarb
sbb
inc
arpl
call
movsl
adc
shrb
or
mov
daa
pop
mov
jbe
sbb
fimull
or
in
add
ficomps
sbb
xchg
jb
mov
and
ss
test
loopne
push
outsl
jecxz
gs
cld
add
pusha
insb
xor
mov
push
sub
and
repz
pop
leave
icebp
inc
int3
xlat
jne
les
inc
mul
mov
test
je
out
dec
and
sahf
sti
and
sbb
std
push
enter
mov
add
pop
push
mov
ljmp
xchg
adc
lret
pop
ljmp
mov
call
adc
jnp
cmc
lret
out
hlt
bound
mov
clc
cmc
xchg
cmp
call
adc
ret
cmp
addl
test
dec
and
add
mov
gs
leave
inc
mov
loope
xchg
inc
jl
pop
and
shrb
fistl
pop
lea
push
std
sbb
stc
bnd
mov
xchg
xor
loope
cmp
xchg
incb
sbb
sub
movsb
or
rep
sbb
jl
enter
rorl
or
ds
add
and
loop
push
imul
and
jnp
xchg
dec
scas
outsl
pop
sqrtps
mov
jns
cs
mov
stos
in
pop
adc
and
lea
adc
add
and
xchg
sub
jecxz
jb
add
out
xchg
sub
dec
and
flds
sub
ljmp
addl
sbb
cmpsb
dec
inc
mov
insl
lds
adc
test
add
lods
push
xor
ja
fwait
sbb
out
push
jge
outsb
xor
fwait
and
xchg
pop
sahf
movsb
mov
repz
and
jnp
mov
sbb
jge
cmc
lods
jns
mov
mov
xor
ficompl
pop
pushf
and
in
or
insl
adc
dec
xor
rcrb
push
inc
sub
cs
dec
aas
cmp
fcomps
mov
dec
xchg
lock
test
pop
sahf
jmp
mov
fnstcw
add
fsubr
xchg
iret
sbb
sti
fists
les
lods
add
cltd
xor
orb
movsl
mov
loop
adc
cmp
movsb
outsl
clc
or
push
push
sbb
mov
mov
je
icebp
xor
lock
bound
lcall
inc
and
cmp
call
scas
add
test
add
test
dec
add
and
and
dec
push
xor
xor
fisubs
lods
jbe
dec
fs
xchg
jmp
mov
mov
pop
dec
insl
push
add
ret
cli
jmp
xor
sub
hlt
inc
mov
mov
mov
and
in
push
pop
sbb
mov
fistpl
jg
pop
lret
xor
cs
outsb
cmc
dec
ljmp
hlt
in
inc
push
in
je
or
lods
lret
in
sbb
mov
mov
test
in
shr
xchg
pop
call
add
ljmp
add
pop
mov
mov
add
mov
jge
add
sub
jae
mov
adc
iret
mov
or
xor
pop
pop
jle
out
lret
sahf
cmpsl
aad
popl
cmp
ret
insb
and
or
popa
enter
rol
cmp
mov
cmc
xor
push
mov
cmp
stos
inc
in
popa
pop
mov
xchg
es
popf
cmpsl
mov
movsb
dec
repnz
jle
mov
or
add
add
sbb
cltd
cmp
imul
fistps
add
fimuls
jne
pop
stos
mov
in
stos
adc
mov
cmpsl
sbb
pop
xor
push
push
sbb
xor
stc
repz
mov
sti
out
mov
fwait
icebp
jns
add
data16
daa
insl
add
adc
xchg
ficoms
in
addl
outsl
or
mov
ljmp
mov
jae
mov
fists
je
mov
out
xlat
daa
pop
enter
cmp
push
sub
enter
mov
add
iret
dec
xchg
cmp
repz
dec
stos
test
daa
or
int
dec
dec
insl
shl
sbb
jns
jne
repz
sub
add
shll
xlat
clc
lcall
sub
icebp
clc
pop
lahf
bnd
pop
lds
inc
jmp
les
enter
pop
or
pushl
int3
mov
jb
xchg
iret
lods
pop
stos
lahf
add
cli
imul
xchg
dec
lods
call
jl
and
faddp
fwait
jnp
mov
push
mov
jp
xor
xchg
or
cld
and
sbb
mov
and
jmp
add
pop
mov
or
mov
sbb
xor
in
aam
out
xchg
pop
dec
jecxz
mov
out
lods
int3
les
scas
rclb
mov
rcr
out
filds
push
in
mov
arpl
dec
cmc
push
lahf
mov
push
sub
cmpsl
adc
mov
pop
fsts
ss
enter
stos
jnp
iret
andl
pop
arpl
ds
lods
jns
push
inc
pop
push
push
shrl
and
clc
mov
repnz
leave
or
push
jg
ds
pushf
jno
jnp
lcall
leave
pop
cmp
enter
and
dec
subl
sbb
jge
out
movl
testl
paddq
push
out
add
icebp
nop
mov
inc
loop
nop
or
aaa
out
mov
jp
jno
xchg
or
pusha
sti
push
mov
clc
scas
out
lcall
push
shrl
pop
jg
jns
pop
mov
pop
dec
inc
xchg
xlat
mov
addr16
fisubs
out
or
xor
pop
and
lcall
jmp
inc
ja
xor
mov
xchg
push
mov
xchg
clc
sbb
scas
int3
sbb
test
dec
and
push
and
dec
ss
cmp
test
cltd
out
psadbw
push
bound
sbb
add
shl
ja
addl
inc
mov
push
mov
adc
imul
mul
xchg
xor
push
movsl
movsb
cmpsb
or
xor
stos
nop
scas
aad
mov
fs
mov
int3
jne
rol
jge
and
stc
popa
sbb
xor
cmp
fwait
lret
flds
mov
dec
ds
leave
movb
xchg
dec
rolb
sub
add
adc
out
jae
icebp
mov
mov
and
stc
push
les
push
outsl
mov
cmp
imul
fs
imul
inc
inc
push
mov
jge
test
mov
outsb
sbb
addr16
pop
jno
inc
mov
popa
nop
cmp
fists
in
xchg
dec
dec
fldl
fcomi
sbb
and
nop
jp
pop
je
scas
int
or
mov
in
repz
jp
fidivrl
mov
pop
mov
mov
push
stos
jecxz
inc
outsb
loope
pop
mov
inc
adc
jne
and
or
popa
cmp
jo
decb
mov
sub
inc
aaa
cwtl
sub
inc
add
sarb
push
xlat
shrb
iret
addb
jg
int3
hlt
cmp
out
adc
pop
mov
aas
xchg
mov
or
pop
mov
jle
stos
sets
push
test
push
sub
ja,pn
into
jle
jnp
mov
les
mov
push
mov
sahf
mov
scas
js
and
and
sbb
adc
inc
adc
test
test
sbbl
mov
cli
test
test
cmp
lods
daa
or
test
sbb
ss
daa
aad
scas
jmp
add
xor
mov
popa
bound
or
dec
inc
dec
cmpsl
pop
addr16
push
int3
xor
add
adc
mov
fisttpll
roll
enter
cmpsl
mov
clc
and
mov
pop
lds
mov
jns
lods
loop
and
subb
pop
inc
loopne,pn
aas
jae
cwtl
and
notb
mov
push
push
out
jle
mov
mov
and
rcll
mov
cmpsb
pushf
add
jl
xor
rcrl
mov
stos
xchg
lret
xlat
dec
test
pop
mov
fstl
adc
ficompl
inc
jl
inc
cmp
out
lea
popf
pop
sbb
and
push
adc
mov
xchg
and
sub
out
adc
or
push
leave
mov
sbb
out
or
mov
lret
movsb
int3
jl
pop
scas
cmpsb
pop
inc
pop
pop
mov
fwait
fwait
add
jle
inc
imul
mov
mov
and
push
mov
cmp
mov
sub
xchg
arpl
in
mov
push
pop
mov
xchg
loop
pop
test
xchg
jp
pop
adcl
jecxz
mov
mov
addr16
jmp
pop
ds
cs
mov
inc
outsl
push
inc
int3
add
push
adc
imul
hlt
gs
jne
mov
jbe
mov
mov
inc
push
jp
inc
inc
mov
cmp
lea
xor
cltd
mov
jae
in
dec
lods
mov
in
scas
rclb
adc
ds
and
cmp
insb
subl
inc
ja
lods
mov
aad
js
insl
cwtl
xor
mov
insb
ds
jae
cmp
ja
xchg
pop
nop
push
call
add
jns
aad
es
pusha
es
in
pop
xor
xchg
jle
les
push
jnp
jmp
int3
push
shrb
or
or
jnp
test
mov
cmpsb
sub
pushf
mov
cltd
mov
push
cmc
stc
jl
dec
sbb
xor
add
mov
mov
into
pop
leave
jmp
xor
dec
jae
repnz
int3
jae
mov
jb
insl
push
addr16
call
in
arpl
push
test
or
test
add
enter
sahf
scas
dec
lahf
cmpsl
cmp
into
jo
outsl
push
loop
cmp
inc
aam
fldcw
arpl
into
xchg
subl
in
das
mov
aad
adc
or
aas
fildl
xchg
inc
test
data16
mov
xor
lret
dec
cli
pop
mov
cli
dec
idiv
mov
xchg
mov
adc
pop
add
cltd
aas
ja
xchg
mov
movaps
cmc
mov
test
rcll
mov
testl
pushf
call
and
comiss
insb
pop
lock
sbb
pop
push
pop
loop
dec
sti
aad
std
jl
and
repnz
pop
sub
sub
and
leave
xor
imulb
push
std
adcb
loop
jno
inc
popf
push
sub
or
sar
test
jg
dec
xor
cld
pop
push
sahf
push
jge
jmp
into
sub
or
cmp
jae
mov
dec
jmp
add
out
cltd
jae
add
fcoms
shrl
cmp
xorl
call
subb
pop
lret
js
or
cmc
ljmp
cwtl
adc
jne
or
adc
mov
movl
fisttpl
mulb
adc
xor
aas
je
xchg
jecxz
iret
and
out
pop
mov
mov
incb
scas
mov
push
lea
xchg
mov
loop
and
mov
mov
jmp
mov
les
push
out
cli
insb
mov
adc
lcall
in
ret
pushf
mov
data16
xchg
jmp
or
testb
cwtl
nop
and
cmpsb
hlt
add
cmpsl
adc
push
xchg
xchg
mov
pop
outsb
push
sub
push
es
ds
xor
adc
out
pusha
inc
add
inc
das
and
pop
xlat
fwait
dec
push
test
xchg
addr16
pushf
add
cltd
ja
inc
xchg
xor
mov
std
and
push
pop
cltd
push
adc
xchg
sub
lcall
pushf
mov
add
pop
mov
int3
lock
mov
mov
adc
out
jp
cmp
inc
xchg
and
mov
sub
cmpsb
adc
mov
je
and
dec
jbe
int
xchg
add
stos
js
xor
pop
test
loope
push
pop
inc
ljmp
movsb
fwait
sub
shl
sahf
jmp
pop
popa
movsb
in
iret
sub
repz
ret
jnp
pop
pop
mov
push
add
inc
lcall
outsl
daa
xor
xor
lahf
cli
push
out
lds
jge
sbb
aaa
mov
inc
xchg
aas
ds
clc
jge
pusha
lahf
scas
shlb
xor
add
inc
rcl
pop
mov
and
out
push
fisttpl
jno
xlat
add
mov
inc
sarb
fldt
sub
mov
mov
fcoms
jge
pusha
sub
push
es
inc
popf
lret
lea
fcom
shlb
rclb
leave
jg
movsl
push
dec
int3
adc
jbe
bound
addr16
fstl
cmc
jle
inc
mov
rorb
push
aaa
dec
or
imul
out
cmp
dec
pop
push
ljmp
add
pop
std
and
test
dec
jno
lcall
cmp
lock
imul
sbb
jo
pop
sbb
add
cmpsl
cli
cmp
popa
mov
pop
mov
cld
xchg
cltd
sbb
fnstenv
sub
loopne
sbb
pop
mov
mov
cwtl
sub
int
in
and
js
dec
jno
sub
and
shr
ja
push
cmp
and
out
xchg
ds
mov
pop
sti
jo
orb
pop
add
mov
je
mov
jge
dec
shr
mov
inc
add
loope
mov
xchg
aad
in
hlt
jl
dec
mov
jmp
jbe
ret
nop
cmpsl
adc
idiv
ja
jnp
inc
add
pushf
fstps
jns
mov
pushf
outsb
out
nop
xlat
push
imul
movl
dec
sub
in
pop
cwtl
mov
in
and
shll
push
push
call
add
mov
dec
and
outsb
pop
pop
dec
pop
dec
sbb
adc
mov
dec
fstl
test
out
push
in
fstps
movsb
mov
sub
insb
cmpsl
fisubrl
xchg
dec
dec
dec
xchg
xor
jae
jg
psubw
mov
sub
push
stc
mov
mov
mov
cs
xor
sub
das
in
in
cmpb
mov
jmp
in
lds
outsl
sbb
push
jns
mov
dec
hlt
and
je
xchg
sub
sbbb
movsl
scas
xor
xor
je
add
jmp
negb
pop
adc
fcmovbe
dec
push
sub
das
int3
mov
or
imul
push
pop
jne
jae
movsb
repnz
jne
mov
rcl
cmp
lret
xlat
adc
add
nop
sub
cmp
mov
stos
push
pop
adc
adc
vmovdqa
mov
xor
cli
cmp
fldlg2
test
jo
pop
fwait
sbb
and
cs
sti
push
push
xchg
insl
rcr
lea
and
and
ret
shrb
pop
loopne
gs
popf
fnsave
sbb
lock
aaa
loope
test
cmp
cltd
mov
sub
js
lahf
lea
adc
xchg
pop
rcl
clc
outsl
add
add
fwait
adc
lret
cld
outsl
xorb
sarb
daa
cmp
rcrl
cmp
dec
pop
sbb
out
cld
jno
mov
mov
int3
test
cltd
ljmp
loope
movsb
daa
jge
loopne
sbbl
push
push
in
mov
xchg
cmp
ja
lahf
insb
jg
push
sar
mov
sbb
sbb
lret
stos
adcb
scas
sbb
movb
addr16
push
out
lret
pop
mov
cmp
test
inc
jae
lods
or
xor
cmp
lahf
fistl
mov
lds
in
pop
call
fcos
add
pop
ljmp
add
pop
vcvtpd2psx
cmc
mov
add
xchg
call
insl
xor
loope
push
shrb
subl
cltd
cmpsb
jmp
jge
fnstcw
pop
dec
and
jmp
repz
and
add
mov
mov
testl
shr
out
je
in
jb
and
cld
fmul
mov
jbe
lods
jmp
pop
cld
in
sub
and
cmpsl
or
push
xlat
lret
sbb
fadds
xchg
lret
jge
scas
xchg
adc
jmp
imul
mov
xchg
push
test
lea
jae
addr16
push
je
inc
iret
imul
xchg
rcrb
jno
jb
movaps
xchg
or
sub
rcrb
cmp
inc
xor
outsw
adc
jne
mov
and
shlb
ljmp
mov
sub
inc
popa
xchg
inc
sarl
idivb
hlt
mov
int
into
aas
mov
mov
cmp
aam
arpl
adc
xor
outsl
mov
xor
out
rcl
xor
jp
jae
call
outsb
out
or
int3
add
mov
lret
sbb
and
test
xor
shl
test
and
adc
cmpb
movsl
je
xor
es
push
mov
jle
sbb
pop
call
xor
mov
fisttps
les
inc
inc
ja
enter
outsl
mov
lcall
mov
sbb
idiv
repz
movsl
adc
shlb
push
popf
bound
jmp
subl
shrb
push
sbb
mov
int
xchg
mov
movsl
dec
add
jp
jns
shl
test
lea
loope,pt
movsb
iret
lock
mov
mov
jge
xchg
xchg
lods
add
dec
fwait
cmpsb
sub
insb
aad
fdivl
mov
sar
dec
inc
xor
add
mov
test
and
or
test
popf
adc
sarl
lock
das
add
mov
mov
lahf
add
cmp
aas
das
negb
cli
and
push
fpatan
daa
pop
jno
lea
test
loope
fcoms
push
outsb
cli
out
inc
mov
xor
shll
shll
push
fdivr
adc
mov
sub
insb
and
stc
adc
pop
repnz
and
lcall
dec
push
sti
cltd
repnz
cmpsl
xchg
adc
lods
cli
sub
jecxz
pop
inc
adc
js
les
xchg
shrb
call
das
sub
nop
cmp
fxch
jge
xchg
mov
add
inc
add
xchg
es
inc
sub
test
test
iret
xchg
ret
mov
jae
sbb
daa
mov
das
mov
addr16
sub
cmpsl
in
sub
jb
jge
jns
int
cmpsl
iret
out
push
jg
es
mov
cmp
jb
mov
mov
jge
cmp
ljmp
add
out
cltd
cli
fldl
nop
insl
jae
pushl
xchg
les
jbe
fdivl
sub
stc
les
add
movsl
xchg
repz
scas
mov
xor
cmp
push
or
mov
call
dec
add
bound
int3
insl
xor
xchg
sbb
ror
add
insl
inc
lcall
mov
xchg
out
jge
xchg
outsb
jb
stos
ret
jl
repz
dec
and
in
clc
cli
push
sbb
cwtl
in
fcoms
xchg
test
into
into
jle
cmp
loopne
fidivs
rolb
and
imul
andl
in
sahf
adc
imul
std
push
xchg
xchg
sysexit
in
push
xchg
jp
mov
ds
pop
les
jnp
pushf
dec
inc
jecxz
jae
or
inc
aad
inc
aad
mov
pop
repz
fwait
std
xlat
mov
xchg
sbb
loope
clc
outsl
shr
jecxz
push
cmp
adc
lcall
pminub
ret
ss
imul
push
lock
sub
pop
daa
mov
loopne
call
in
cmp
daa
call
dec
fadds
out
jmp
xor
xchg
lods
xchg
das
xchg
mov
subb
mov
sbb
dec
adc
xchg
movsb
leavew
lret
cmp
bound
mov
cmc
pop
sbb
fwait
sbbb
loope
fcmovbe
mov
ja
out
loop
cmp
cmp
dec
mov
pop
sbb
or
mov
xor
push
jns
pop
into
aam
pop
inc
addr16
add
dec
adc
out
movsb
jae
movsl
test
data16
cmpsl
mov
lcall
lahf
dec
push
sub
lahf
push
bound
pop
stos
stc
adc
idiv
xor
imull
or
inc
sub
cmp
add
dec
adc
inc
outsl
cmp
ljmp
gs
pop
sub
xor
in
repnz
fs
cmp
mov
xorl
decb
xchg
dec
stos
repnz
aas
dec
cltd
mov
xchg
push
outsb
sub
xlat
movsl
mov
xor
jno
cwtl
sbbb
xchg
pop
je
or
lcall
cld
mov
orl
es
int
stos
dec
mov
int
cmp
inc
jmp
inc
add
iret
lea
inc
flds
fldcw
sub
out
adc
pop
mov
aas
cmp
int3
adc
or
jo
in
mov
cli
repz
ja
stos
popf
das
iret
hlt
sbb
mov
popa
mov
fdivrs
lcall
ljmp
or
rcll
dec
test
ss
push
dec
cmp
movsb
movsl
scas
daa
fsubrl
sub
enter
pop
lcall
push
jnp
xchg
pop
js
out
int
jecxz
mov
icebp
pop
aad
and
adc
idivl
daa
add
ds
je
sbb
add
rcrl
adc
test
xor
loop
loope
sub
enter
jge
std
xchg
mov
sub
mov
lock
lds
aas
sub
bound
xchg
nop
jecxz
adc
imul
mov
jle
xor
xchg
testb
insl
or
push
xchg
cmpsl
fcomps
popa
subb
mov
push
aad
shlb
push
push
xor
pop
dec
out
ss
inc
cwtl
mov
mov
sarl
jg
xchg
mov
pop
insl
pop
sub
shrb
dec
pop
and
inc
js
das
rclb
push
shlb
mov
lahf
push
push
mov
mov
xor
sahf
ss
mov
jmp
jle
dec
stos
outsl
jmp
sub
mov
or
pop
hlt
mov
inc
jnp
pop
xchg
call
xchg
hlt
les
mov
lods
jne
push
pop
mov
xorl
push
jns
mov
jl
add
pusha
out
jns
dec
add
push
adc
add
movsb
cs
daa
repnz
dec
pop
adc
roll
adc
sub
and
fninit
xchg
imul
and
xchg
push
mov
subl
repnz
mov
cmpsb
cs
movsb
push
in
daa
test
sub
jo
orl
push
and
imulb
insl
push
mov
xchg
lcall
sbb
adc
fiadds
gs
insl
je
jmp
inc
mov
fisttpll
lds
xchg
push
aam
scas
cwtl
scas
mov
std
push
arpl
push
cmp
fnstenv
add
push
xchg
ja
stc
mov
int3
push
lret
dec
mov
pop
pushf
mov
add
add
loope
dec
xchg
push
insl
sti
test
out
ds
pusha
dec
pop
mov
add
or
ja
xchg
movsb
xchg
clc
into
jo
rorl
or
push
mov
clc
sub
pop
ljmp
jbe
sti
and
insb
add
dec
jb
pop
jp
in
mov
or
imul
in
jne
ret
sbb
add
mov
pop
jb
stos
je
fs
test
push
push
inc
stc
mov
push
jno
jmp
push
ljmp
mov
repz
popa
cmc
and
lret
sbb
dec
jb
fisubrl
cmp
fmuls
add
mov
movsb
ja
inc
mov
pop
or
sub
cmp
push
scas
int3
pop
mov
fdivrl
cmpsl
pop
xchg
adc
fstpl
call
lock
inc
out
xor
or
mov
mov
cmp
stos
lret
out
repz
pop
dec
jns
cmp
xor
xchg
and
add
mov
sarl
std
inc
jb
xor
push
pushf
mov
pop
push
pop
insb
sbb
lds
out
dec
lods
stos
mov
imul
mov
fbld
push
test
mov
jb
imul
shr
lock
sub
sahf
ret
bndstx
xor
inc
seto
sub
or
adc
adc
and
test
pop
adc
ljmp
outsb
sub
cwtl
xchg
push
dec
out
shlb
jne
lahf
jl
xor
popf
sub
negl
ljmp
out
into
jne
jmp
leave
lea
daa
add
jg
cmp
stc
vrsqrtps
pop
jl
movb
jmp
mov
pop
xor
add
shll
pop
mulb
hlt
xor
mov
loope
mov
lea
loop
cmpsb
ja
adc
and
adc
pop
andb
mov
pop
rcrb
cmpsl
ret
mov
mov
out
sbb
pop
lods
sbb
adc
mov
push
imul
and
jmp
or
lret
lret
add
mov
xchg
mov
mov
shrb
icebp
mov
outsl
jle
popa
imul
adcl
les
xor
inc
xor
mov
divl
pushf
fadd
outsl
mov
sub
sbb
movsb
inc
jle
mov
jmp
xchg
pusha
jno
enter
inc
repz
stos
fisubrs
aas
gs
push
icebp
jbe
and
pop
mov
lret
jae
js,pn
adc
arpl
mov
lds
push
inc
inc
xchg
cltd
leave
loop
jp
lock
mov
and
mov
das
mov
push
bnd
xchg
or
sbb
adc
mov
leave
leave
sub
in
repnz
insl
push
sub
lods
imul
das
mov
nop
mov
enter
fiaddl
mov
push
jge
hlt
push
sub
lds
cmp
pop
pop
pop
repnz
mov
xlat
xchg
xchg
inc
push
xor
scas
or
jle
test
int3
add
dec
inc
jmp
xor
or
sahf
push
sub
adc
add
mov
sub
pop
test
jbe
sub
pop
or
shlb
les
jle
repnz
lds
js
cmp
push
xor
addl
xchg
or
inc
out
sarl
arpl
adc
enter
shlb
mov
or
das
mov
pusha
push
or
dec
aam
shrl
and
scas
arpl
leave
inc
pop
lock
mov
jo
subl
test
imul
mov
pop
pop
cmp
mov
or
mov
int
pop
inc
cmp
mov
sbb
cmp
or
dec
adc
mov
sbb
mov
aas
cmp
shlb
pop
add
sub
enter
fs
add
ficoml
daa
adc
dec
jb
stos
or
dec
dec
out
leave
lods
test
aam
std
xchg
in
repz
out
xchg
lods
out
popf
sti
or
pop
jmp
pushf
out
adc
sbb
jp
mov
repnz
sub
loop
push
xchg
fwait
push
xor
pushf
adc
and
repnz
or
jb
pop
ss
imul
clc
sub
mov
fistps
stos
cmp
cmpsb
loopne
lods
sub
lods
jae
inc
pushf
cltd
pop
adc
shlb
out
inc
dec
mov
adc
push
mov
insb
mov
je
mov
cltd
hlt
sub
push
mov
jl
jge
rolb
xchg
xorl
xor
mov
or
fiadds
inc
inc
test
mov
cmpsb
scas
push
dec
mov
jnp
fs
adc
popf
test
push
xor
pushf
and
mov
test
xchg
mov
mov
sahf
sub
popf
push
jmp
jno
jl
imul
jg
int
cmpsl
sub
pop
dec
cmpb
mov
icebp
and
xchg
cmp
mov
jb
out
mov
aad
repnz
lds
and
insl
mov
aaa
mov
inc
mov
aaa
dec
lret
xlat
mov
pushf
pushl
mov
lret
lods
ja
mov
dec
xlat
fidivl
inc
cmp
xor
inc
sbb
mov
mov
cmp
mov
add
mov
add
jge
add
mov
testl
fwait
push
push
addr16
pop
rolb
add
xchg
leave
mov
sbb
mov
cmp
repnz
pop
lcall
in
push
cmp
dec
jae
data16
leave
jns
outsl
xchg
push
pop
mov
dec
ljmp
bound
aam
push
mov
pop
es
and
imul
xor
and
idivb
popf
mov
test
mov
mov
pop
ror
push
repz
fiadds
dec
ljmp
inc
jmp
adc
cmp
loope
xor
test
adc
imull
xchg
aas
push
mov
push
inc
lock
dec
and
or
ja
test
negb
repz
ret
leave
ja
inc
cli
or
das
imul
cmpsl
xchg
cmp
in
in
test
sahf
pop
dec
test
leave
data16
scas
inc
push
push
jg
movsl
sbb
jne
jp
push
cmp
mov
ficompl
lea
jp
mov
pop
lea
mov
std
inc
jmp
push
xchg
dec
js
mov
std
add
jne
dec
rclb
ret
push
and
test
jo
mov
mov
or
cwtl
add
scas
cmpl
mov
lea
jle
sbb
popa
jmp
pop
cmc
leave
mov
jns
outsb
dec
jb
jnp
roll
imulb
jle
cwtl
ret
lahf
rcl
ss
decb
xchg
mov
xor
push
fwait
or
int3
jl
inc
and
mov
inc
fwait
dec
push
repnz
les
and
nop
cs
cmp
fisttps
ret
and
std
and
sbb
cmp
sub
in
dec
jbe
addr16
lahf
pop
jbe
cli
xor
dec
add
into
and
sbb
out
das
stos
inc
in
pop
popa
test
xlat
insb
cmp
xlat
lods
out
out
mov
lods
xchg
in
push
mov
std
inc
mov
mov
sarb
xchg
add
loop
mov
cld
inc
add
cmp
push
cbtw
ljmp
cmpsb
add
outsl
jo
int
xor
push
or
sbb
inc
adcl
and
or
stos
cmpsl
ja
sbb
pop
pop
daa
xchg
ja
shrl
and
xor
mov
mov
sbb
add
cmp
stos
clc
push
loopne
test
rcrl
stc
push
out
test
mov
dec
push
cmp
dec
and
pavgb
movsl
cmp
xchg
daa
adc
jnp
push
sbb
push
sub
int
add
ffreep
jae
test
push
pop
dec
cli
aad
mov
test
mov
mov
adc
cmp
rclb
xchg
jbe
in
xchg
imul
popa
insb
mov
loop
inc
shrb
xchg
or
push
jns
and
push
sbb
data16
jmp
push
pop
and
pop
mov
iret
paddusb
pop
das
rcrl
jp
jge
jbe
mov
sbb
out
inc
leave
adc
lahf
loop
lahf
mov
out
sub
mov
fmull
inc
call
rcl
xchg
pop
rorl
pop
xor
or
cmp
mov
push
mov
or
nop
adc
out
dec
in
std
pop
dec
std
xchg
dec
mov
lock
mov
enter
cs
or
in
arpl
and
adc
popf
jae
movsb
leave
jne
sbb
dec
mov
mov
inc
in
fcom
sahf
dec
test
test
jae
mov
add
imul
sub
imul
mov
in
cmovle
jmp
test
sarb
jmp
jnp
or
push
pop
push
inc
xor
dec
popa
mov
sbb
sub
pop
mov
adc
push
or
nop
sub
popf
mov
shll
ret
mov
insb
lock
loope
leave
cli
cmp
nop
sti
bound
fistl
xlat
push
inc
xorb
or
push
sub
xchg
scas
lret
bound
pop
add
or
sbb
stos
rorb
shrd
adc
jb
cmpsb
mov
out
xchg
and
ret
jmp
mov
sub
ficoms
je
mov
cmp
dec
daa
mov
pop
cmp
aad
test
aam
enter
movsb
adc
inc
mov
out
mov
out
xchg
jecxz
int
cwtl
pop
cmp
imul
pop
aas
mov
rcr
lock
dec
adc
mov
xchg
aad
jae
cmpsb
jns
jge
cs
push
addb
xor
call
rcrb
into
xor
pop
icebp
dec
dec
lea
push
mov
shl
mov
pop
mov
jle
adc
neg
ret
out
int
pushf
dec
into
adc
insb
dec
outsl
sbb
in
push
out
or
std
insl
mov
mov
jl
or
push
mov
jae
scas
popa
lret
dec
rol
or
enter
lret
dec
adc
shl
fwait
aaa
leave
mov
ret
jg
ss
cmpsl
lock
lods
int
xchg
leave
mov
scas
cli
jmp
into
dec
sub
sti
clc
dec
mov
hlt
lret
or
push
jb
mov
xor
daa
je
jmp
scas
jge
sub
imul
or
jae
stos
inc
cli
pop
fcmovnbe
loop
fwait
pushl
leave
push
out
repz
pop
dec
mov
sbb
mov
sub
jg
nop
inc
mov
sub
hlt
lret
test
mov
lds
fnsave
jmp
push
xor
ljmp
out
cmp
mov
mov
pushf
imul
push
notl
sub
sub
fistpl
test
popa
xor
jecxz
add
addl
xchg
xlat
std
and
mov
imul
inc
add
pushf
lods
add
xor
sbb
or
mov
mov
xchg
ljmp
imul
rcrl
cld
or
pusha
mov
arpl
cmp
scas
mov
int
or
shr
lods
stos
fmulp
dec
add
adc
ss
inc
out
popf
imul
fiaddl
cs
jp
pop
in
ret
outsl
mov
fwait
test
aas
aaa
fistpll
inc
mov
xor
mov
aad
je
bound
xor
insl
test
pop
pop
or
jp
mov
dec
add
addb
jnp
push
mov
fisubs
inc
imul
sahf
iret
adc
call
inc
mov
inc
add
lret
daa
sahf
and
shlb
cmc
jmp
xchg
dec
pop
es
je
dec
cltd
js
in
je
mov
mov
push
or
push
mov
jp
mov
mov
mov
lods
sbb
or
xchg
add
in
std
test
sub
mov
and
xlat
fs
pop
divb
data16
dec
popa
es
add
test
cmpsb
push
imul
mov
call
je
std
push
repnz
mov
rorb
pusha
dec
and
mov
add
lds
nop
xchg
inc
ja
clc
ja
popf
mov
add
pop
xlat
std
push
inc
cmpsb
mov
mov
out
jae
cwtl
mov
cld
mov
dec
sbb
sbb
mov
pop
cli
addb
jl
sbb
mov
in
out
xchg
rol
test
imull
inc
jecxz
dec
sub
call
xchg
shll
pop
orl
jb
lret
mov
cmp
mov
jns
and
int
mov
fadd
and
ja
sub
ljmp
pop
pop
hlt
push
xor
add
cmp
lods
pop
stc
jl
scas
das
bound
dec
cmpsl
in
int3
icebp
push
rcll
scas
and
mulb
mov
sbb
test
loopne
jbe
dec
inc
pop
jbe
fucomp
sbb
arpl
push
in
outsl
pop
dec
gs
and
stc
jo
sbbb
or
gs
scas
data16
enter
mov
ja
orl
jp
mov
xchg
and
rcll
daa
sub
lret
pop
cld
shr
ret
push
lods
call
and
cmpsb
mov
dec
push
pop
in
out
inc
loopne
jbe
jne
in
gs
mov
sarb
xor
and
push
das
rcl
sub
test
push
negb
mov
push
insb
cmp
mov
mov
jge
mov
jo
mov
inc
in
popf
inc
in
sbb
sbb
pop
and
pushw
loopne
sub
push
cwtl
mov
cld
daa
xchg
loop
lret
jmp
jmp
add
push
iret
jae
in
jge
adc
sbb
adc
les
iret
enter
push
lahf
push
push
sbb
adc
scas
fisubl
push
push
sub
das
nop
scas
xchg
adc
lods
mov
lcall
in
sub
outsb
std
iret
lods
cmp
pop
je
pop
jns
xchg
mov
inc
sub
stc
pop
mov
testb
pop
lcall
inc
pop
xor
pop
dec
adc
ret
bound
xchg
into
dec
pop
mov
and
lcall
sbb
out
dec
inc
and
mov
aaa
out
jmp
repz
insl
jg
cmp
xchg
mov
out
mov
lock
cmp
aam
nop
jle
push
push
lods
call
xor
mov
cmp
sbbb
loope
push
pop
imul
call
or
or
mov
mov
adc
xchg
cld
mov
mov
sti
sbb
mov
dec
push
fucomp
out
es
cmp
fcmovnbe
or
insb
leave
xchg
and
divb
idivb
push
fsubl
jp
sahf
lock
jecxz
into
pop
and
arpl
jp
dec
xlat
test
sbb
hlt
or
dec
pop
imul
stc
inc
push
lret
stos
fadd
push
pop
pop
push
lock
adc
add
mov
outsl
push
fwait
push
push
addb
adc
leave
fnsave
cld
lret
inc
incb
inc
push
jb
mov
in
adc
adc
inc
repnz
stos
cwtl
jl
test
lea
push
cltd
imul
movsb
std
pop
cmp
mov
adc
test
ret
sub
sahf
test
push
lret
sbbl
lret
mov
mov
mov
push
sbb
insl
dec
sar
mov
xchg
inc
pop
cmpsl
in
divb
dec
lods
cmpsb
cmc
fimull
xchg
pop
in
or
add
addr16
push
cmp
jecxz
lea
mov
xchg
jnp
xor
push
adc
fldl
jns
xchg
jno
dec
sahf
bound
popf
sub
test
xchg
or
mov
ret
xor
adc
imul
pop
and
jecxz
stos
mov
int
cld
ljmp
mov
clc
dec
mov
in
dec
std
lret
out
mov
std
cmpb
add
clc
cmp
ss
mov
pop
pushf
xchg
mov
mov
adc
mov
and
push
test
test
cmp
mov
mov
out
daa
das
clc
mov
jnp
inc
jne
hlt
fnsetpm(287
mov
test
jns
aaa
dec
popf
popa
imulb
mov
mov
sbb
inc
cmp
stos
out
ljmp
and
jb
std
addr16
stos
push
scas
and
push
mov
fmuls
in
shlb
testl
jno
cli
cmp
std
dec
adc
in
or
pop
lods
xchg
pop
aam
xor
out
movsb
loopne
and
pop
xchg
xlat
rcll
iret
aas
and
into
lret
inc
cltd
mov
and
pop
xchg
std
jecxz
popa
sub
lods
and
xchg
mov
stos
dec
push
mov
mov
loope
jmp
push
mov
or
xor
aam
repz
loop
scas
mov
sbb
stos
xchg
pop
push
inc
outsb
cmp
mov
add
push
adc
jmp
adc
pop
dec
fcomi
add
cli
inc
daa
movsl
add
mov
dec
mov
xor
xchg
sahf
pop
scas
xchg
mov
pushf
stc
mov
xchg
add
stc
loopne
js
orl
or
daa
pop
repnz
jp
rol
sbb
inc
jae
insl
sub
int3
pusha
idiv
xchg
push
insb
pop
mov
mov
lods
sbb
xchg
adc
loope
cmp
fwait
call
adc
cmp
ds
dec
sub
rorb
xor
repz
shrb
negb
xchg
jmp
push
add
cmp
dec
xlat
repz
add
mov
pop
xor
jo
sub
ja
xchg
ret
jns
fadds
push
fnstcw
decb
mov
les
inc
mov
mov
movsb
mov
and
das
loopne
xor
cmp
jmp
hlt
popa
pushf
lret
das
mov
sbb
repz
out
push
lcall
or
fisubl
or
imul
dec
pop
test
push
sub
cmp
mov
and
dec
xchg
push
or
faddl
shll
mov
stos
mov
jne
sub
add
pop
adc
addl
sub
testl
leave
fmull
daa
jp
inc
push
cmc
ja
add
or
xchg
pushf
clc
jge
xor
mov
mov
int3
jecxz
das
sbb
call
sahf
addr16
in
test
push
lea
push
or
dec
xlat
popl
daa
stos
loope
pop
mov
pop
push
sbb
outsl
popa
and
jne
hlt
mov
rorb
xor
or
addb
arpl
mov
ja
insb
aam
aas
test
movsb
push
cmp
and
mov
jno
mov
jb
mov
push
dec
sbb
xchg
fld
loop
insl
mov
fidivrl
outsb
stc
xchg
mov
push
divl
xchg
pop
or
int3
in
inc
sbb
das
lret
stos
mov
lods
test
stos
adc
test
loopne
pop
jo
mov
push
sti
es
mov
sbb
test
add
sbb
movsb
aas
or
xor
push
bound
lahf
aaa
xor
cltd
loop
inc
cmp
push
jecxz
pop
pop
cmp
cwtl
insl
lds
pop
imul
jno
insb
test
inc
or
xor
and
hlt
lea
subb
not
iret
cmp
clc
cli
cld
inc
mov
and
xor
sahf
inc
jle
pushf
push
repz
adc
mov
das
mov
sub
fistps
xor
insb
addl
jns,pt
mov
jmp
fmull
mov
int
jmp
es
dec
pmulhuw
fld
mov
add
cmp
repz
js
aaa
movsb
cwtl
jp
jl
sub
adc
out
xor
mov
cmpsl
xchg
bswap
nop
std
std
add
imul
rcrl
xchg
dec
sbb
scas
in
sbb
pop
or
test
leave
sarb
or
jne
dec
push
mov
dec
add
mov
jns
xchg
mov
pop
orl
cmp
or
lret
cmpsb
mov
sbb
inc
inc
lcall
call
test
les
scas
xor
add
sahf
mov
sbb
lds
adc
dec
sub
fwait
jecxz
sbb
fdivrl
xchg
mov
push
inc
sbb
pop
daa
in
jp
jo
lcall
in
xchg
lahf
cmp
push
jbe
push
xchg
sbb
or
imul
jecxz
std
sbb
sbb
icebp
and
lret
xor
inc
ret
scas
ret
sbb
cmp
add
scas
les
loop
inc
ss
mov
cmpb
xchg
dec
cmc
xchg
cmp
lret
push
loope
lods
or
cmp
cli
rclb
jecxz
iret
xor
and
ljmp
stos
pushf
push
loopne
nop
inc
push
or
outsl
jae
or
add
adc
es
lods
testl
movsl
push
ret
repz
lock
push
insb
inc
ficoml
testb
enter
jl
pop
sub
or
sbb
jmp
push
xor
or
cli
jb
rcrb
mov
xlat
sub
cmpxchg
pop
addr16
pop
mov
mov
mov
lods
sub
xor
jo
cmp
inc
jne
push
repnz
and
push
or
add
test
xor
lcall
clc
xchg
pop
mov
out
push
mov
xchg
fwait
imul
lods
sub
sbb
and
mov
jl
xchg
push
outsl
and
add
xchg
cmp
inc
mulb
stos
add
xchg
xor
jne
loopne
es
fmuls
mov
mov
inc
aas
mov
xchg
iret
and
jno
in
jno
jmp
outsb
fstps
xlat
iret
xchg
lea
mov
sub
icebp
mov
out
int
inc
push
out
cmpsl
lret
ljmp
mov
dec
loop
sub
and
popa
sub
push
dec
daa
mov
sbb
jp
icebp
rcll
xor
rdpmc
dec
lret
mov
std
icebp
enter
cli
dec
loopne
mov
or
jb
push
cmp
inc
stos
mov
pushf
add
lea
pusha
fadds
dec
test
aad
in
adc
sub
data16
add
pop
add
js
hlt
out
pusha
push
adc
pusha
or
jmp
ret
dec
sub
arpl
lods
clc
sahf
aad
das
in
xlat
jns
sub
loopne
lds
inc
add
sahf
inc
daa
push
mov
hlt
xor
cltd
sbb
push
mov
in
call
mov
cmp
ljmp
test
stc
or
loopne
das
incl
mov
out
movb
sbb
mov
xchg
inc
ja
and
mov
notl
mov
jmp
pop
add
fwait
scas
lea
bound
mov
les
mov
call
arpl
mov
or
pop
or
outsb
shlb
or
movsl
sarb
loopne
and
in
push
in
mov
mov
mov
aad
int3
imul
adc
cmp
and
pop
cmp
fstl
fcompl
xchg
jne
mov
test
idivb
add
mov
push
scas
icebp
and
test
mov
sbb
rcll
push
rolb
fsubr
fmull
jne
jns
aas
fdivrs
sbb
xor
fcmovne
or
sahf
dec
push
out
fwait
jnp
stc
sub
test
sbb
outsl
mov
mov
ja
out
push
push
mov
adc
test
dec
xchg
outsb
mov
mov
addr16
in
aad
xor
aam
add
sub
adc
xchg
icebp
adc
push
xor
pop
inc
cltd
mov
bound
imul
inc
sub
aaa
pusha
xchg
icebp
movaps
mov
adc
mov
adc
call
aad
outsl
push
stos
cltd
aam
daa
adc
jno
mov
clc
outsl
fcomp
loop
or
loope
inc
insl
shr
jmp
mov
ret
pop
loopne
ss
gs
daa
int
mov
jo
lods
insl
inc
lahf
jae
rorl
data16
xorl
loope
xor
aam
mov
cs
aam
cmc
mov
sbb
push
push
in
rcl
nop
out
inc
imul
lock
cwtl
inc
cmp
add
adcl
pop
adc
sbb
sbb
pushf
dec
loopne
pop
dec
in
sub
push
adc
jl
and
cmp
xor
sub
xchg
mov
aaa
push
xor
lahf
jae
lcall
pop
sub
xor
xchg
or
dec
add
mov
jo
cmp
inc
push
bound
jmp
nop
mov
outsl
sbb
ret
and
add
cmp
mov
jo
test
mov
stos
shrl
hlt
out
pop
jge
int3
leave
dec
loopne
in
pop
xchg
pop
lock
popf
sbb
add
xor
je
lea
inc
imul
sbb
mov
sub
ljmp
dec
cmp
sbb
imul
sub
add
adc
cmp
mov
xor
aad
jl
roll
push
dec
andb
jo
lret
mov
repz
xchg
push
inc
or
mov
pushl
aas
cwtl
imul
dec
es
pushfw
adc
and
jns
adc
cwtl
sbb
cwtl
inc
aaa
mov
aad
in
lret
test
add
insl
mov
dec
cwtl
sbbl
sbb
push
out
dec
cli
pop
jae
bound
sti
sbb
fisubl
ja
xor
aad
das
leave
iret
loopne
mov
inc
in
lock
xchg
jae
fistpll
cmp
lret
xchg
call
inc
lods
jle
in
mov
and
scas
fabs
push
into
std
scas
and
insb
jb
jbe
mov
stc
cs
pop
pop
inc
lds
sbb
lcall
pop
inc
lea
or
mov
negb
cmpsb
adc
sbb
sub
jo
enter
enter
inc
mov
jbe
push
jl
iret
inc
dec
cmpsl
xchg
imul
push
pop
sbb
mov
xchg
and
repz
int
ljmp
mov
mov
test
aam
insb
mov
arpl
sub
mov
inc
lods
push
enter
xor
xlat
iret
insb
into
mov
div
in
into
jle
insb
add
in
adc
aas
js
gs
jae
sub
xchg
add
aam
push
xchg
sbb
xchg
add
mov
out
pop
dec
lret
ret
and
jl
pop
stos
sub
jbe
jne
addb
cmc
std
loope
std
mov
ret
ljmp
call
adc
out
sbbb
mov
nop
sbb
incl
pushf
sbb
repz
push
or
outsb
add
mov
lock
adc
stc
push
adcl
pop
sahf
push
mov
jmp
into
push
mov
dec
sub
push
mov
fstpl
ret
push
push
out
mov
fsubrs
std
testb
mov
lahf
addl
mov
pop
xchg
add
inc
fcoml
enter
jbe
pop
fwait
and
aad
push
push
cld
sbb
sahf
pop
fstpl
sub
sub
mov
cmp
push
test
dec
jp
and
ja
mov
cmp
sub
fdivrs
fmuls
in
int
mov
xor
lods
push
cmpsl
inc
test
add
fidivrs
mov
xor
jbe
add
cld
fsubs
xchg
push
push
outsb
adc
and
nop
ds
aam
xchg
xchg
jno
jb
cmpsb
movsl
or
add
mov
lea
jp
xor
inc
add
xchg
and
pusha
scas
adc
mov
ja
je
inc
pop
push
in
insl
jle
fldt
and
add
icebp
mov
mov
daa
jo
mov
mov
cmc
xor
sbb
imul
sub
in
cmpsb
stc
mov
and
out
std
fadds
cmp
decl
shll
dec
loope
out
bound
mov
jnp
pop
sub
xor
mov
jl
push
xchg
xor
mov
jo
push
in
cltd
push
ja
inc
push
movsl
lods
nop
push
push
lods
jle
lea
xchg
pop
adc
gs
jne
mov
loop
adc
pop
idivb
mov
pop
push
pusha
rorl
fmull
sub
test
dec
lret
push
cs
lods
icebp
fwait
bound
mov
lcall
jns
mov
lea
sub
fcompl
and
push
and
mov
inc
xchg
repz
dec
std
add
pop
cmp
and
aam
push
lods
test
shlb
rcrl
or
popa
pop
cmp
inc
inc
lock
push
arpl
dec
push
call
and
xchg
data16
dec
dec
add
mov
sub
or
mov
push
xchg
ror
sbb
imul
mov
push
icebp
lret
sahf
adc
mov
icebp
mov
push
xchg
push
fidivs
cmc
out
sub
xchg
aaa
cld
sub
inc
xchg
test
xchg
icebp
cmp
adc
jae
in
sbb
inc
test
mov
sbb
hlt
cltd
mov
mov
mov
sbb
and
jg
into
or
lret
jmp
mov
out
and
daa
xor
daa
dec
test
mov
ljmp
fs
pop
dec
out
fbld
jae
add
imulb
mov
add
add
out
dec
popf
jb
jl
in
cwtl
push
add
cmp
or
xor
nop
xor
xor
bound
push
addr16
xor
cmp
adc
lods
aaa
cmp
imul
mov
leave
ret
mov
lret
sbb
adc
inc
test
jle
or
outsl
outsl
bound
add
and
jne
lcall
inc
pop
sti
add
ljmp
xor
ds
jp
shlb
mov
and
or
dec
sbb
pop
mov
add
dec
int
popl
loope
dec
ljmp
xchg
xchg
jne
mov
sbb
xor
adc
push
add
xor
bound
outsb
jmp
out
sub
je
dec
sub
jecxz
xchg
cmp
sbb
push
test
dec
mov
call
jle
mov
pop
push
out
pop
insl
sub
and
inc
adc
add
outsb
lock
repnz
dec
mov
jne
sub
shrl
pop
jp
scas
js
dec
jne
and
xor
mov
cmp
inc
orb
xchg
clc
orb
aad
cs
jb
pop
pop
or
cs
xchg
mov
aaa
pop
fwait
inc
push
push
adc
aam
mov
shrl
sbb
jno
test
inc
mov
flds
jmp
xor
dec
cli
xlat
push
sbb
xchg
arpl
xor
mov
cwtl
das
xor
sbb
inc
push
push
jae
idiv
jno
ret
je
jp
test
mov
imul
sar
mov
gs
jne
sub
mov
hlt
mov
jl
sbb
sti
in
sub
jmp
mov
push
mov
stos
xchg
ffreep
repz
addr16
adc
and
repnz
lods
inc
cs
lret
aaa
bound
jb
adc
jle
mov
sti
pop
xchg
sbb
out
jle
lcall
icebp
pop
fs
fnstcw
daa
sbb
push
pop
fdivl
sbb
aas
push
insb
push
test
lcall
xchg
popa
sbb
push
fwait
inc
insb
jo
test
das
ret
pop
push
jg
fstps
sbb
insb
mov
pop
fstpt
test
scas
pop
mov
in
in
inc
pop
and
push
push
jne
sti
mov
rcrb
sbb
mov
xchg
mov
mov
scas
icebp
or
aad
cmpsl
aam
sti
jmp
outsb
mov
xchg
cwtl
and
mov
xchg
mov
mov
sub
scas
push
js
popf
jle
adc
mov
iret
xchg
and
gs
stos
data16
pop
enter
in
bswap
ljmp
je
pop
or
xlat
inc
rcrb
shlb
xlat
aad
mov
movsb
out
push
cmpsb
jo
pop
push
loope
inc
inc
je
inc
inc
ja
sahf
push
sub
lods
aam
jnp
pop
in
fwait
cs
cmp
dec
das
dec
jle
mov
and
and
adc
inc
cltd
lea
add
int
sbb
xor
mov
testl
dec
leave
or
mov
sbb
adc
das
imul
sub
fdivr
inc
sbb
or
cltd
sub
in
shlb
outsl
mov
aad
aad
pop
dec
lods
cmp
div
cmp
pop
xchg
push
cs
test
cltd
inc
shrl
push
xchg
nop
xchg
dec
in
cs
fadd
jl
loop
push
mov
add
pop
push
std
stc
test
inc
or
les
adc
jno
outsl
jge
sbb
mov
int
popf
jg
add
xor
cmp
mov
out
pop
xor
pop
popf
and
sbb
xor
rcrl
jl
sti
xor
inc
movsb
ret
inc
cld
nop
pushf
xchg
int
push
pop
or
int3
mov
sbb
aaa
xor
fnstenv
xchg
xor
and
aad
dec
mov
mov
mov
push
js
cmc
fisubrs
xor
subb
sbb
arpl
arpl
jge
enter
sub
pop
push
xchg
sbb
sti
lret
push
push
xlat
shl
ficompl
fs
xlat
idiv
dec
scas
leave
out
das
push
sbb
ret
pop
inc
dec
jb
or
or
pushf
das
jg
cli
sbb
add
inc
xor
call
sbb
cs
in
arpl
lods
repnz
dec
mov
rclb
lahf
jno
lret
pop
pop
pop
repz
push
mov
outsl
sbb
mov
mov
pushf
hlt
arpl
mov
ljmp
aam
dec
out
out
jns
call
cmp
adc
jnp
mov
jae
and
dec
fnsave
jmp
fdivl
out
fdivrs
insb
mov
cmpsl
pop
int3
fstpt
testl
add
mov
xor
pop
pop
add
dec
pop
iret
rcrl
andl
xchg
adc
jns
xor
mov
push
xchg
sahf
mov
xor
orb
shrb
push
call
je
sub
es
jnp
mov
inc
out
push
lret
leave
pop
out
pop
cmp
hlt
orb
add
out
das
mov
or
xchg
dec
lahf
jecxz
add
cmp
sarl
lret
sbbl
in
loope
or
popa
mov
adc
mov
outsl
or
mov
inc
sub
imul
sbb
jp
cmp
sub
mov
inc
dec
sbb
mov
cs
leave
jl
lret
popa
pop
adc
adc
ss
cld
roll
push
inc
add
mov
xchg
roll
icebp
fistl
loopne
pop
adc
jb
scas
dec
mov
xchg
adc
sbb
lcall
stc
and
mov
mov
inc
enter
loope
mov
adcl
adcb
insl
jae
fdiv
fisttps
es
shl
int
cwtl
cmpsl
or
in
cmp
add
mov
aas
inc
mov
cltd
imul
and
das
pop
or
jnp
mov
test
inc
mov
fwait
adc
mov
adc
adc
int3
fcomps
xor
dec
cltd
pushf
outsl
sahf
popf
dec
cmp
push
icebp
pushf
aam
jl
pop
push
aas
push
jbe
adc
pop
inc
push
mov
popf
fmull
movsl
push
pop
jecxz
mov
mov
lods
int3
cmp
or
sbb
mov
pop
mov
push
imul
rcrb
adc
js
das
outsl
fdivl
mov
xchg
mov
lea
imul
push
movsb
in
les
and
in
inc
mov
movsl
xlat
mov
add
inc
xchg
stc
movsl
adc
js
sysenter
sbb
mov
scas
xchg
or
mov
dec
insl
inc
jp
std
xor
xchg
gs
jno
fcoml
inc
test
add
xchg
pop
sub
mov
jg
and
or
out
sub
push
pop
and
les
inc
aad
leave
adc
outsb
inc
jae
mov
add
xchg
lcall
fs
or
pop
pop
rcrb
push
movsb
push
pusha
jne
cmpsb
lret
mov
lods
roll
mov
daa
adc
xchg
test
cltd
cmp
adc
shl
push
dec
addr16
fdivs
xchg
stc
mov
sub
mov
or
pushf
push
add
dec
adc
pop
movsb
and
mov
push
enter
test
mov
xchg
pop
mov
cmp
pop
lret
sysenter
call
scas
and
adc
fsubrp
sub
push
mov
bound
fwait
pop
daa
jae
ss
xchg
jecxz
shrb
fwait
scas
aas
xor
adc
pop
pop
into
fmull
and
mov
fwait
lahf
mov
sbb
mov
mov
cmp
jg
jae
or
xor
fistl
arpl
adc
insb
cmpsb
cmpsl
mov
stos
add
sbb
mov
jne
movsb
xor
push
fsubp
pop
lods
inc
mov
stc
add
and
xor
out
cmp
icebp
cmpsl
mov
stc
dec
outsb
xlat
sub
addr16
xor
gs
cli
jb
mov
jbe
dec
out
lret
add
cmc
pop
or
mov
imul
or
insl
or
xor
cmpsb
and
or
movsl
movsb
rorb
add
jae
pop
push
ss
js
shl
gs
fwait
xchg
out
lahf
mov
and
jg
icebp
pop
ret
jo
xor
divl
js
aas
push
pop
out
jg
pushl
rorl
fiadds
jp
call
enter
lret
jb
imul
mov
imul
popf
adc
shlb
popa
mov
and
scas
hlt
sbb
push
jo
test
mov
push
pop
lods
pop
pop
pop
sbb
add
fldt
fidivrl
sarl
sbb
mov
jbe
fnclex
jecxz
mov
call
cmp
add
xor
in
sub
sbb
into
aam
clc
xchg
xor
jmp
aad
dec
cld
call
test
fsubrs
mov
xchg
jae
sti
popa
rol
loop
orb
lret
or
xor
lock
jmp
mov
fnstsw
insl
and
aam
mov
mov
in
hlt
pop
dec
addr16
repz
cmp
pop
add
lods
inc
popf
hlt
das
sbb
in
mov
test
lcall
jo
add
push
mov
and
fidivl
mov
int3
adc
mov
mov
adc
push
push
in
dec
enter
dec
xor
mov
inc
cmpsb
add
push
movsb
fdivrs
into
mov
jle
mov
mov
outsb
dec
jbe
push
in
in
mov
lcall
cwtl
mov
nop
ret
add
shr
stos
lea
test
dec
sub
loop
mov
iret
cmc
mov
inc
cmp
shll
fdiv
mov
sbbl
lods
jge
mov
mov
inc
sahf
sbb
xchg
cmpsb
out
bound
jno
mov
cmp
or
into
out
divl
and
jae
xchg
in
cltd
cmpsl
jbe
call
cmpsl
fs
lods
push
hlt
mov
push
mov
jl
imul
sub
clc
fdivp
add
adc
pop
xor
mov
mov
inc
in
and
dec
xlat
jno
mov
xlat
das
scas
xchg
cmc
pop
jo
sub
adc
sti
mov
mov
or
pop
lret
xor
jp
mov
enter
out
rclb
dec
push
jg
jecxz
insb
or
stos
fimull
sti
pusha
sub
ja
mov
dec
sub
xor
mov
sub
push
mov
aam
mov
iret
ficomps
mov
bound
mov
in
mov
repnz
push
push
sahf
dec
jne
mov
stos
subb
js
xor
xor
and
jb
cmp
into
sbb
pop
push
cmpsb
int3
xor
push
pop
sub
and
dec
in
pop
addr16
xor
cli
cmpsb
sarb
test
or
adc
sub
xchg
sti
or
stos
roll
fcompp
insb
scas
lahf
stos
sub
sub
pop
cmp
cli
hlt
inc
sub
call
lock
mov
cli
int
mov
mov
inc
push
or
std
xlat
cmp
sbb
lods
shlb
mov
cwtl
lahf
sbb
adc
cmp
aad
icebp
inc
pop
fidivrl
lds
sahf
pop
stc
xor
loop
adc
xchg
lcall
in
mov
sbb
es
sti
mov
lea
push
cmp
jns
test
inc
fisubrs
xor
in
popf
pop
lea
cmpsl
push
in
xchg
addr16
xchg
inc
jmp
and
out
xchg
cli
adc
sahf
mov
cmpsl
jno
out
dec
cmpsb
call
bound
ffreep
ret
test
testl
dec
pop
dec
mov
adc
stos
sbb
dec
lahf
lcall
adc
cmp
test
push
mov
push
cmp
xchg
xor
sbb
sbbb
inc
cltd
lret
adcl
pop
testb
jg
icebp
mov
pop
aas
gs
stos
jp
pop
sahf
cltd
int3
pop
movsb
sub
inc
out
ljmp
in
jge
push
mov
add
cmp
es
lea
shrb
bound
xor
lds
in
add
repnz
jp
mov
pop
popa
imul
cwtl
insb
pop
dec
pop
fdivl
xor
push
andl
test
cmp
into
std
push
loop,pn
sbb
insl
in
sbb
sub
ror
sub
xlat
bound
pop
cltd
movsb
cmp
cmp
push
stc
ja
fcomps
fwait
inc
leave
mov
jae
ljmp
mov
xor
xor
dec
sub
and
push
pushf
dec
mov
sbb
popf
or
pushf
push
movsb
clc
add
les
add
mov
cmp
jns
scas
mov
fnstcw
imul
fcmove
int3
push
ret
pop
fdivrs
or
ficomps
sbb
adc
xlat
sbb
jo
pop
and
cmp
insl
loopne
lahf
int3
add
or
rcrl
xor
enter
push
cmpsl
icebp
mov
adc
flds
inc
xor
arpl
jno
sahf
cwtl
mov
fcoms
mov
sti
fnstsw
insl
mov
push
and
and
dec
inc
sub
jge
das
aad
repnz
leave
inc
pop
roll
sub
fiadds
xchg
lods
xchg
in
scas
xchg
fldt
flds
jg
xchg
mov
fcoml
movsl
in
dec
arpl
into
dec
movsb
dec
mov
inc
enter
cmpb
movl
pop
ss
lods
insb
in
cmp
add
add
sub
sbb
and
int3
gs
rcrl
push
dec
jge
sbb
xchg
aad
or
ljmp
push
push
pop
fwait
aad
int3
mov
dec
fsin
lds
pop
sbb
dec
les
lcall
sti
xorb
mov
mov
aad
and
fsubrl
mov
inc
pushf
outsb
adc
je
mov
cmp
in
push
dec
mov
push
es
adc
pop
push
test
sub
sarb
lret
xchg
mov
aaa
dec
jmp
or
mov
and
jae
dec
pushf
jmp
mov
cli
xor
sbb
sbb
hlt
jno
adc
movsb
push
mov
shl
aam
dec
stos
out
rcll
daa
icebp
pushf
inc
shll
gs
xchg
aaa
or
mov
jb
push
aad
mov
cs
jle
test
imul
dec
mov
cmp
or
aas
xchg
jae
movsb
loop
mov
cmc
mov
js
inc
out
adc
fsts
xor
or
inc
cs
imul
bound
dec
push
ficomps
repz
adc
je
adc
adc
je
add
or
cmpsl
sarl
shr
out
leave
mov
xchg
movsb
nop
inc
mov
and
and
lods
in
shll
lds
dec
into
decb
jmp
insb
in
mov
pop
lret
jle
cmc
andl
fcoml
or
in
mov
shll
dec
sti
push
fdiv
mov
add
xchg
test
out
pop
xchg
xchg
jge
div
pop
pop
sbb
adc
mov
call
lcall
or
movsl
movsb
cld
inc
adc
fs
pop
lea
xchg
sbb
lret
pop
mov
addr16
frstor
daa
push
mov
add
xchg
imul
in
jmp
aas
shl
pop
iret
mov
mov
pop
mov
gs
jbe
cmc
loop
push
lea
dec
popa
lret
and
addr16
std
and
jp
imul
mov
scas
shlb
dec
popf
mov
lret
mov
mov
add
mov
adc
adc
fisubl
insb
test
imul
jb
pop
aaa
jbe
push
pop
inc
scas
push
pop
and
repz
aaa
shlb
mov
dec
neg
sbb
cmp
aam
push
cmp
lds
xchg
xchg
push
andl
movsl
lods
pop
int3
pop
xchg
push
fidivl
inc
pop
dec
pop
or
jo
int
sbb
lea
test
test
mov
dec
xchg
mov
pop
or
lcall
pop
add
adc
loop
mov
mov
inc
sbb
pusha
gs
jmp
icebp
jmp
ss
out
dec
aad
or
jmp
mov
jnp
imul
pop
loop
push
fildll
jnp
push
sub
push
pop
dec
sub
xlat
cvtdq2ps
adc
pop
jl
aam
push
push
jge
js
std
push
inc
imul
cld
call
mov
call
dec
push
and
fs
jb
in
jle
add
test
push
mov
mov
mov
clc
xchg
or
inc
xchg
fs
push
std
cmpb
dec
xorb
and
mov
xchg
sub
scas
out
adc
lods
fs
pop
jp
jo
sti
test
mov
cmpsl
xor
inc
xor
xor
sub
out
xchg
pop
mov
dec
aaa
mov
push
dec
jecxz
inc
aaa
ret
leave
fbstp
lods
push
mov
lods
pop
leave
adc
xchg
mov
push
aad
pop
mov
mov
call
scas
lcall
jo
push
pop
pop
outsl
inc
mov
ds
lds
jp
jmp
mov
mov
clc
insb
cmp
ja
movsb
jl
sti
repnz
stos
into
fcomip
aaa
jecxz
or
mov
clc
jmp
adc
mov
cmp
mov
out
xchg
fwait
push
repz
dec
ljmp
aaa
sbb
mov
sub
inc
pop
repz
out
inc
inc
xor
pop
xor
pop
jnp
mov
lahf
clc
bound
or
mov
shlb
pop
and
jmp
push
iret
mov
mov
jmp
jge
popf
dec
std
adc
ret
popf
mov
lods
dec
adc
mov
aad
push
insl
pushf
addb
dec
out
lahf
lcall
loope
call
inc
arpl
cmp
bound
fnstcw
mov
or
sbb
insb
insw
pop
ror
aas
subb
sbb
dec
cmpb
daa
jae
popf
mov
notb
out
insl
dec
stos
xor
jae
pop
mov
pop
insb
xchg
fisubs
add
hlt
adc
cmpsb
ret
xchg
andb
repnz
ja
inc
sub
add
cmpsl
cmp
mulb
lret
nop
or
ds
fldcw
out
inc
gs
daa
jecxz
shrl
pop
cwtl
cmp
inc
jnp
nop
pop
push
addb
clc
addr16
in
inc
or
sti
xchg
push
mov
in
mov
cmc
cmpsl
mov
or
pop
imul
xchg
sahf
or
push
xlat
in
adc
xchg
xchg
in
and
and
mov
cmp
mul
inc
popl
push
les
data16
in
popa
pop
mov
js
pop
sub
mov
push
push
loop
jbe
insl
out
int
rolb
and
cld
test
aam
in
subb
sub
push
rcr
push
jecxz
pushf
js
cmp
sbb
adcb
mov
clc
pop
js
dec
mov
aad
inc
xorl
xchg
push
shlb
xchg
inc
stos
test
retw
clc
add
mov
cmp
ss
dec
imul
inc
push
jne
aaa
mov
pmulhuw
sbb
mov
add
sub
cmc
ror
fistl
pop
lcall
jns
int
aad
les
leave
cmp
sub
rol
testl
ret
or
inc
imul
and
mov
cli
jne
int
add
fcmove
xchg
in
sbb
mov
addr16
gs
dec
pop
push
std
clc
cld
scas
sahf
loope
leave
pop
mov
call
push
aas
mov
pop
outsl
addb
dec
lds
icebp
cmp
jno
dec
imul
fs
int
mov
ret
sub
cmpsb
insb
addr16
loop
xchg
cmp
cli
xchg
mov
xor
int3
mov
loop
push
out
icebp
test
imulb
hlt
and
test
jge
jo
gs
push
loope
add
pop
mov
std
and
nop
aaa
sbb
shlb
decb
and
fs
xlat
shl
daa
mov
sub
js
fists
sbbl
frstor
mov
lahf
push
sti
imul
outsl
es
xor
xchg
push
xchg
pop
xlat
mov
aas
mov
cmp
adc
cmc
ja
data16
adc
xlat
push
push
sar
mov
mov
int
in
sub
call
shll
mov
int3
fsts
sahf
cld
insl
fsubs
into
xor
shlb
lea
arpl
mov
xor
adc
nop
push
lods
mov
loope
jmp
adc
xchg
pop
pop
adc
xchg
push
push
shlb
out
cmp
lcall
rclb
inc
aam
jg
adc
lahf
cmp
sbb
lds
imul
mov
jmp
jge
jae
fwait
xchg
jne
cli
inc
js
push
inc
lcall
outsl
andl
jbe
lock
ss
xchg
xchg
or
jge
inc
decb
sbb
lods
push
aaa
push
sbb
lcall
inc
popf
xchg
mov
jo
lahf
jnp
or
xchg
dec
and
arpl
adc
lret
jmp
mov
icebp
shrl
icebp
insb
insb
enter
xor
iret
or
add
out
add
ret
xchg
add
mov
push
std
push
orb
cmpsl
pop
xor
outsb
mov
sti
in
fnstenv
mov
inc
mov
pop
aam
out
xor
cmp
adc
lds
add
fcom
and
lcall
xchg
mov
leave
out
push
out
pop
xor
pop
lds
in
addr16
sub
ja
es
js
shll
xor
jmp
sbb
in
sub
adc
rorl
daa
cmc
addl
or
daa
pop
shrb
fldcw
or
popf
std
cmp
dec
push
jae
and
jae
test
mov
and
mov
loopne
cmp
inc
mov
shll
popa
jp
xchg
popa
xchg
into
movsl
pop
lods
dec
inc
adc
loopne
mov
out
mov
shrl
and
jmp
rcrb
sbb
mov
je
sbb
int3
ljmp
out
inc
dec
dec
loop
mov
insl
dec
fcomps
lret
or
cmp
fsub
push
mov
in
cmpsl
pmulhuw
insl
fimuls
vphaddubd
push
jge
inc
xchg
lea
sarb
jns
jge
and
sub
fs
and
scas
cmpsb
cs
test
addb
decb
repnz
inc
in
pop
es
loop
mov
xchg
imul
mov
xchg
pop
mov
adc
test
aas
cmp
sbb
arpl
aaa
ss
jne
icebp
jl,pt
in
popa
clc
and
adc
out
in
stos
fstps
in
sub
push
in
jg
ficomps
mov
out
notl
add
mov
daa
js
adc
inc
jmp
test
mov
pop
test
add
cmp
int3
rol
test
adc
fcomps
mov
dec
popf
dec
cli
xchg
mov
pop
and
in
outsb
or
sub
and
lret
fwait
lea
insl
lods
fldl
insb
daa
out
and
sub
out
lea
pop
scas
dec
sbb
int3
pcmpeqb
inc
xchg
insl
push
jg
xlat
testl
adc
sbb
xor
sti
mov
xor
ret
xor
pop
adc
pushw
or
add
cmp
out
ds
int
pop
hlt
mov
inc
jae
mov
mov
adc
pop
mov
mov
je
sbb
and
dec
fstps
and
pop
add
jo
cs
pop
test
mov
lea
dec
movsl
fisttps
leave
arpl
or
xor
lret
mov
xor
push
in
mov
and
and
mov
push
jmp
int3
mov
shll
adc
sub
mov
rorb
cld
push
stos
dec
sub
or
cmpsl
adc
adc
test
sub
push
sarb
cmp
icebp
lret
ret
fwait
or
xor
popa
out
repnz
inc
aas
jns
xchg
cld
jg
sbb
and
jg
adc
sub
cli
or
push
dec
mov
xor
adc
cmp
sub
add
cmpsb
iret
dec
inc
add
mov
xchg
popa
or
icebp
repnz
test
jnp
sub
lret
xor
loop
test
or
pop
mov
add
mov
or
inc
add
loop
pop
stos
jg
adc
mov
pop
stc
stos
mov
insb
shrb
icebp
call
jbe
ret
aaa
daa
push
xor
inc
lock
outsl
pop
leave
lods
xor
decl
xchg
arpl
aam
jmp
mov
sub
push
or
sub
fidivs
xchg
mov
mov
mov
or
jnp
cmc
clc
jle
xchg
jmp
aad
jns
dec
mov
adc
loop
cmc
lock
dec
dec
imul
pop
sub
push
jne
bound
mov
pop
pop
stos
ret
jns
xor
lahf
roll
xchg
in
dec
lock
inc
test
inc
les
add
and
dec
test
jge
std
mov
jg
cwtl
mov
inc
addr16
inc
dec
dec
rolb
sbb
jne
pop
xchg
fisttps
adc
cld
cwtl
xor
xchg
mov
lcall
sub
sbb
and
add
into
test
je
mov
andl
lods
stos
idivl
cwtl
push
sub
aad
lods
mov
cmpsl
popw
mov
aam
sub
aas
jae
ret
jg
negb
movl
xchg
adc
cmpsl
sub
jle
inc
loope
cli
cmc
rcr
sbb
pop
cmp
out
xorb
cmp
pop
ret
js
cld
jle
sub
inc
cmpsb
dec
ret
cmp
sub
out
jne
inc
call
dec
leave
scas
and
mov
adc
das
or
pop
out
lret
jnp
mov
fs
cli
jne
dec
jo
dec
inc
xchg
testl
cmpsb
adcl
mov
lret
movsl
dec
jo
shl
les
lds
ja
testl
jns
jp
sub
xchg
ret
and
sarb
out
rcrb
int
inc
shll
mul
lock
adc
and
shlb
lahf
loop
clc
daa
das
add
cmp
fcmovu
je
sbb
jmp
cmp
cwtl
cmpsb
sti
icebp
stc
inc
xor
xchg
repnz
pusha
iret
loope
xor
mov
js
cli
pop
jmp
mov
je
shll
dec
dec
push
movsl
add
nop
rcr
mov
or
shrb
ljmp
xor
mov
xchg
int
mov
jbe
ds
inc
mov
push
inc
sub
aas
or
push
adcb
dec
jp
or
bound
pop
arpl
js
mov
or
nop
mov
jmp
in
xlat
mov
aas
inc
lods
jo
mov
mov
dec
stos
jmp
dec
mov
aam
push
mov
loopne
ds
mov
or
adc
or
sarl
rcll
lea
ljmp
bound
faddl
outsb
sti
test
inc
adc
and
pushf
sbb
enter
incl
mov
lea
dec
imul
divl
jns
mov
inc
js
push
mov
mov
push
push
pop
pusha
adc
pusha
inc
push
push
imul
hlt
sub
int3
xchg
mov
xor
push
popa
mov
mov
scas
add
ds
adc
xchg
cmpsl
mov
pusha
orl
js
mov
adc
cwtl
rorl
jb
out
fsubs
fnstsw
aaa
and
and
and
outsb
fdivrl
outsb
out
mov
push
int3
push
add
daa
xchg
ficoms
aas
jns
bnd
test
stc
jge
test
dec
lcall
ds
mov
test
xor
fchs
enter
cld
jmp
pop
out
icebp
jbe
add
inc
mov
or
cs
and
popf
xchg
xchg
add
dec
cmp
cmc
mov
test
mov
mov
fildll
fcmovnbe
adc
and
mov
xchg
loopne
mov
hlt
jl
adc
jne
xor
jge
push
inc
lds
adc
push
sub
xchg
sbb
mov
and
dec
pop
loop
mov
out
rcrl
enter
cld
inc
fimull
lock
cmp
sahf
pop
mov
fsubrs
mov
add
inc
adc
outsl
jno
xor
xor
mov
inc
lret
hlt
push
xchg
pop
ret
lods
or
or
aad
sbb
mov
notl
xchg
inc
xchg
mov
iret
jl
add
xor
fcmovnbe
fldl
inc
mov
repz
cmpsb
push
daa
outsl
dec
icebp
gs
sub
enter
pop
dec
je
and
test
aam
repz
adc
test
mov
pop
jae
and
cmpsl
mov
mov
loopne
ds
sub
dec
aam
add
pop
mov
les
imul
add
mov
jmp
bnd
lcall
push
ret
mov
test
cli
movsb
cli
xor
jbe
push
mov
jbe
int3
push
push
fsts
jne
shll
out
pop
fwait
mov
push
xchg
xchg
int3
mov
test
daa
dec
mov
mov
fs
cmpsl
fnstenv
in
notl
lahf
mov
jmp
les
mov
icebp
mov
fists
addl
test
cli
pop
ret
ja
insl
or
call
out
pushf
frstor
lahf
adc
adcl
mov
popf
iret
inc
call
add
mov
sbbb
pop
js
inc
cmp
ds
mov
sbb
cld
in
fucomp
imul
ret
and
pop
mov
subl
xchg
imul
into
push
test
and
stos
mov
sahf
inc
pusha
outsb
imul
fstl
pushf
or
scas
pop
or
cld
cmp
push
test
aaa
mov
out
cmp
je
lahf
scas
out
mov
xchg
ja
lret
outsb
ret
cmp
les
mov
enter
ljmp
xor
in
jns
push
call
mov
pop
xchg
push
mov
dec
ficoms
inc
adc
cwtl
loopne
gs
adc
push
sub
cmp
add
test
xchg
ret
jl
and
insb
jmp
ret
insb
jnp
lea
icebp
pop
and
cwtl
push
aam
movsb
mov
fstps
add
gs
adc
das
mov
jmp
fmull
in
inc
push
push
add
pushf
xor
jecxz
push
dec
sbb
mov
jecxz
out
fldt
dec
sahf
cwtl
in
mov
pushf
aad
pop
mov
add
loope
pop
or
subl
cmpsb
sub
mov
icebp
mov
js
nop
aaa
pop
dec
fisttpll
or
cwtl
mov
cltd
mov
lods
cmp
ljmp
adc
fs
enter
sub
sbb
pop
jae
push
jb
jge
add
jmp
jp
xor
pop
popf
out
lret
dec
jno
out
mov
mov
xchg
adc
in
push
dec
mov
pop
add
adcl
movsb
cmp
push
mov
mov
xchg
jmp
sbb
sub
pop
test
cmpl
clc
andb
stc
clc
fnstsw
adc
jmp
dec
mov
inc
inc
xor
push
inc
xor
outsb
mov
jmp
jp
pushf
sbb
push
adc
repz
fistps
add
popa
in
sarl
and
outsb
mov
xor
inc
jo
mov
mov
xor
popa
mov
mov
out
inc
sbb
shll
push
imul
cmp
sub
push
ss
add
xchg
xadd
sub
int
pop
pop
xchg
adc
je
sub
xchg
cmp
cli
aam
jb
cltd
arpl
dec
mov
pop
jmp
or
sbb
shll
dec
xor
jg
sahf
cmp
sahf
cmc
adc
fisubs
in
test
mov
mov
scas
push
jae
cmpsl
push
xchg
jbe
ds
push
daa
stos
fsubrs
insb
dec
jbe
add
inc
xor
jne
push
aaa
jp
sub
sub
add
hlt
popf
xchg
movb
loope
push
or
adc
lods
mov
jmp
mov
push
in
xchg
int3
nop
sub
sbb
push
std
mov
sbb
fsubrs
outsb
arpl
cmp
xor
cwtl
rorb
mov
test
scas
sbb
pop
sar
js
mov
sbb
mov
int3
or
or
in
mov
pop
mov
loope
xor
ljmp
aas
push
mov
mov
rcrl
lock
push
pop
stos
or
inc
jno
mov
movsl
jns
cmp
fldl
cmp
sahf
mov
int
movsl
inc
lock
clc
ret
sysenter
xchg
dec
imul
inc
fwait
mov
scas
fsubl
mov
lahf
mov
push
ljmp
push
jno
jge
or
int
fs
rol
insb
adc
mov
sbb
scas
push
in
pop
ret
into
lcall
ds
aad
jle
push
pop
pop
cmp
mov
push
insb
push
fwait
imul
pop
dec
scas
push
xor
lret
mov
in
clc
icebp
test
add
fsubrl
or
insb
fwait
insb
sbb
and
adc
pop
xor
divl
insb
mov
movsl
out
data16
inc
addr16
push
ja
data16
in
repnz
cli
inc
xor
bound
adc
out
jmp
push
sub
cli
adc
gs
leave
adc
mov
in
mov
add
ja
and
int
sub
pop
pop
cmp
ss
mov
xor
movsl
das
pop
pop
push
inc
aaa
scas
vsqrtps
adc
js
xor
andb
cmc
cmpsl
cmp
rcrb
lock
mul
imul
jmp
loope
lods
dec
or
lock
leave
in
sub
rorb
push
dec
or
lods
mov
data16
xchg
lret
add
jb
add
shlb
sbb
mov
mov
loope
clc
push
fisubrl
adc
inc
cmp
aad
mov
in
jne
cmpb
jns
push
or
cmp
in
mov
adc
popf
lret
push
mov
and
cmp
mov
xchg
int3
inc
adc
push
int3
pushf
mov
inc
mov
and
add
lret
fmull
jg
mov
shrl
mov
add
in
or
push
xchg
xchg
lea
lods
adcb
aad
mov
enter
icebp
fimuls
cmp
sbb
inc
inc
jns
push
sarb
sub
cwtl
ret
push
mov
in
sbb
data16
sbb
loopne
jne
aas
inc
imulb
dec
dec
fcoml
jno
clc
or
sbb
hlt
sbb
ljmp
xchg
jp
and
adc
scas
push
mov
out
or
in
fstl
mov
add
fildl
mov
repnz
push
mov
or
sub
test
mov
cmp
lods
xchg
fwait
test
enter
outsb
mov
loop
test
jns
mov
out
fsubrl
inc
cmp
std
dec
mov
sahf
fimuls
xchg
push
add
outsb
mov
add
lods
enter
nop
neg
mov
inc
scas
xchg
jno
in
scas
xor
push
add
and
mov
aaa
jp
inc
jecxz
pop
arpl
out
call
sub
xor
or
jp
sbb
ret
lcall
mov
mov
rcrb
or
lcall
mov
pop
in
sbb
jecxz
push
shr
mov
xor
sub
cli
mov
je
mov
sub
int3
fwait
xlat
jmp
cmp
loope
leave
cld
fidivrl
jmp
add
xorl
cwtl
mov
pop
cmp
clc
dec
out
jno
incb
or
ret
mov
push
and
xchg
shr
jae
lods
xor
pusha
sbb
dec
mov
lods
and
lds
or
push
and
xlat
scas
inc
cmpb
out
fsub
int3
bound
mull
mov
fstl
xor
sub
xchg
mov
fldcw
inc
rcr
out
jne
jl
sub
aam
xchg
mov
hlt
pop
loope
imul
lret
xchg
adc
loop
jnp
roll
test
insb
adc
out
int
mov
adc
jo
loop
dec
out
push
int3
fsubrl
lds
pushf
push
mov
call
insl
frstor
repz
mov
push
insb
xchg
test
imul
incb
and
movsb
call
push
cs
jbe
and
negl
repz
dec
or
fisubrs
or
sbb
roll
pusha
xlat
cmp
mov
stc
in
mov
inc
stc
push
mov
xor
andl
fsubl
fsub
fildl
adc
aaa
shll
mov
sbb
mov
xlat
faddl
pop
xchg
pop
cli
pop
aaa
outsl
jbe
pop
xor
cld
dec
dec
sarl
push
add
sti
div
addb
sbb
subb
adc
xor
lods
orb
mov
cmp
push
adc
cwtl
cmp
test
jl
push
clc
icebp
dec
ret
mov
jo
pop
stos
mov
mov
ljmp
xorl
rolb
pop
fbstp
adc
dec
sahf
pop
cmpl
fwait
jne
mov
push
aas
outsb
xor
xor
fcompl
xchg
cmp
xor
int
jg
push
jo
xor
sahf
testb
jns
das
cli
sub
mov
mov
xchg
pushf
mov
lcall
popa
lea
push
xor
xchg
xchg
fsubrs
push
outsl
jg
aad
sbb
out
or
cmp
test
fnstsw
xor
ret
nop
sub
inc
sub
jle
push
xchg
repnz
add
xchg
push
push
sbbb
ss
sbb
adc
pop
insl
or
lea
cwtl
add
jge
inc
pop
lock
cmc
mov
or
lods
fcompl
pop
mov
xor
dec
pop
pop
dec
fcompl
mov
adc
inc
add
push
stc
push
lods
aaa
push
les
je
hlt
mov
add
push
pusha
and
xchg
shll
clc
add
push
sti
test
sub
xchg
fwait
popa
inc
xchg
xchg
mov
negl
sub
push
mov
xchg
lods
icebp
imul
xchg
push
cmp
xchg
dec
dec
stos
and
popa
cmp
stos
or
aam
mov
or
jmp
dec
insl
insb
push
add
adc
arpl
jne
push
int3
cmp
xchg
dec
pop
xchg
jg
test
in
jge
jle
jno
div
cmpb
xchg
xlat
mov
outsb
in
inc
fsubs
add
mov
add
cltd
add
pop
cmp
movsl
dec
lret
jle
dec
sbb
rcrb
xchg
xchg
mov
and
add
aam
cmp
xlat
pushf
xor
xchg
xorb
shll
add
mov
mov
sbb
mov
in
stc
loop
clc
sbb
mov
sti
cwtl
das
or
jecxz
xchg
inc
hlt
clc
cmp
mov
push
mov
mov
mov
cmp
lods
aaa
xchg
jno
scas
and
mov
stc
and
lods
call
sub
cld
fbld
push
mov
dec
push
sbb
sub
inc
and
mov
push
rcrb
sbb
mov
push
sub
push
mov
lcall
cltd
int
xchg
arpl
aad
mov
mov
mov
ljmp
push
loop
jo
cmp
ficoms
push
insb
sbb
call
xchg
insb
mov
das
test
test
ret
mov
rolb
inc
cmp
jge
sbb
xchg
js
cmp
fadd
pop
rcll
test
and
in
and
popf
or
push
cltd
or
mov
pusha
in
and
lea
add
lcall
dec
pusha
xor
js
xor
loopne
dec
outsl
es
inc
lahf
mov
xchg
addr16
test
add
sub
test
xchg
mov
imul
mov
insl
xor
xchg
nop
xchg
subl
mov
in
cltd
pop
inc
mov
jbe
jns
sbb
inc
xor
cmpsl
mov
cmp
jmp
popf
pop
or
repnz
cmp
stos
stc
pop
inc
cld
int
dec
fsubr
adc
mov
loope
xchg
aad
mov
dec
lcall
cmc
pop
xchg
or
or
repnz
mov
js
ret
jle
popf
out
mov
jb
xchg
dec
jl
in
cmpsb
push
mov
cli
pop
lret
out
iret
popf
popa
sbb
insl
cmp
dec
sub
jmp
jae
les
pop
jno
mov
inc
lods
mov
xor
insb
and
mov
insl
out
pop
sti
add
in
jecxz
jnp
mov
imul
mov
dec
xor
repnz
enter
xchg
shl
add
mov
adc
mov
dec
push
jb
ret
push
mov
add
clc
sub
ja
jmp
mov
rcrb
and
std
in
jae
and
fwait
in
repnz
pop
jecxz
cmp
inc
pop
int3
xor
jnp
enter
xchg
mov
aas
call
test
stos
insb
pop
in
movsl
mov
mov
movsb
jecxz
in
aaa
jp
test
mov
pop
je
sub
xor
xchg
pop
insb
insl
xor
or
sub
shll
scas
jae
pop
add
add
call
push
sub
movl
jnp
call
xorl
lock
std
and
fildl
fwait
call
jg
pop
ret
out
pop
nop
or
sbb
lahf
in
int
cs
icebp
dec
rcrl
enter
sti
sub
push
roll
dec
sub
jg
scas
cmp
dec
add
hlt
iret
cli
cwtl
inc
mov
into
icebp
in
cmp
xorl
ds
ret
sub
jmp
xchg
sbb
adc
maxps
xor
sub
lods
dec
push
je
push
dec
fnstenv
sti
jo
mov
arpl
out
adc
jmp
ljmp
cmpsl
stos
imul
cltd
popf
pop
js
adc
outsb
dec
adc
scas
and
mov
cmp
push
xchg
push
test
fisubs
sti
jp
or
je
mov
adc
mov
lret
lock
cmp
mov
pop
aas
ds
push
sbb
mov
pop
cmp
adc
dec
movsl
fisubrs
push
scas
inc
ss
das
jl
and
push
aas
sub
and
xchg
ljmp
push
repz
xchg
mov
push
mov
or
das
adcb
enter
mov
xchg
mov
mov
lcall
loop
xlat
dec
out
push
inc
mov
cli
rcll
test
jae
mov
fcomps
loope
mov
shl
or
addr16
push
and
out
addl
ds
and
xchg
sub
getsec
gs
fmul
arpl
lds
out
sahf
sbb
and
ss
insl
int
out
lea
stc
jmp
addb
mov
pop
xor
cmc
clc
jne
into
cmp
adc
adc
or
jo
test
push
xchg
mov
fldenv
popf
inc
pop
popa
xor
jnp
adc
sbb
fsubl
fsubrp
mov
aad
and
hlt
jl
xchg
subl
dec
stos
lods
lds
adc
mov
ss
test
lods
lcall
add
sti
aam
insl
cmp
js
aam
test
sar
inc
outsl
inc
cmp
insb
vpavgb
cmpsb
insl
mov
pushf
mov
pop
add
movsl
and
outsl
cmp
push
stc
pop
sbb
lods
xor
enter
ds
mov
xor
sbb
mov
jmp
sbb
into
push
mov
fstpl
push
vmwrite
cmpsb
int3
aaa
cmpsl
popa
popa
xchg
sub
xchg
leave
in
pushf
sub
pop
jmp
mov
sbb
push
cmp
cmc
jns
fwait
mov
loop
dec
stos
inc
pop
pop
xor
jl
call
outsl
clc
sti
pop
data16
and
mov
pop
insl
jbe
ja
leave
jg
test
fdivrp
sbb
mov
addr16
inc
xchg
cmp
pusha
call
cmp
push
pop
jo
cmp
test
out
xorb
sub
dec
shrl
adc
lds
and
lds
jp
cmp
std
mov
mov
lods
mov
jl
mov
lret
das
in
test
das
pop
add
nop
pop
gs
adc
into
stc
icebp
loopne
mov
repnz
pop
cs
aam
mov
adc
in
inc
jge
dec
mov
stos
fs
mov
adc
mov
into
dec
mov
outsl
lock
inc
andb
cmp
loope
jae
ljmp
in
pop
push
cwtl
fldt
ss
lcall
data16
sahf
add
test
push
ss
mov
out
xor
xchg
mov
aaa
stos
inc
mov
dec
cmpsb
arpl
or
mov
lret
loopne,pn
scas
and
pushf
loopne
out
std
xor
sub
adc
dec
cli
stos
mov
mov
repz
jge
cmp
hlt
cmp
icebp
sbb
loope
push
fimuls
negl
je
test
dec
gs
mov
or
loop
push
cmpsb
enter
sbb
inc
adc
xor
mov
stos
adc
fwait
sti
int3
pop
lods
in
in
popf
fwait
js
mov
stc
lret
mov
shl
jne
adc
push
cmp
add
sub
push
test
mov
lahf
jl
mov
mov
cli
ret
test
std
lds
repnz
push
movsl
out
mov
ss
movsb
lods
adc
adc
fisubs
lret
jg
sbb
js
int3
pusha
jmp
add
mov
not
mov
fucomp
mov
mov
lret
cmpsl
lods
mov
ret
sbb
pop
shlb
inc
mov
shl
push
adc
lret
lcall
jl
addr16
fxch
mov
inc
jno
sub
xor
mov
fcmovbe
push
aaa
push
andb
push
jmp
mov
test
es
xor
adc
ss
ljmp
lods
push
and
lret
jbe
test
cmp
inc
fsts
testb
test
xchg
cmp
shlb
cmp
loop
fiadds
adc
pop
jne
dec
jle
std
jns
and
mov
ljmp
clc
filds
cmpsb
add
mov
mov
push
fcoms
repz
mov
sti
and
out
inc
les
outsb
or
notl
aas
rclb
dec
mov
fdivl
push
adc
inc
xor
xchg
dec
jae
in
pop
gs
dec
mov
cmp
xor
fidivrl
pusha
sub
jge
push
dec
jecxz
xchg
or
jl
stos
cltd
das
push
add
mov
rolb
mov
lcall
xchg
pushf
loopne
inc
add
es
mov
push
mov
lcall
fbstp
movsb
ss
push
inc
xor
cmpsl
fwait
loope
jecxz,pt
cmpsl
xor
ret
sbb
cmpsl
cmpb
push
pop
movb
inc
in
sbb
mov
and
mov
aaa
dec
add
jno
add
cmpsb
ret
push
mov
stos
ret
xor
jns
mov
loopne
fs
aam
cmp
cmp
adc
pop
push
ret
das
into
dec
dec
cmpsl
pop
mov
sub
xor
push
adc
sahf
fistps
mov
scas
fcoms
push
fcompl
sub
inc
adc
inc
mov
jo
shl
sub
cmp
outsb
push
sbb
sub
xor
scas
xor
sub
jns
sub
inc
xor
mov
adc
inc
dec
popa
mov
rcll
aam
popf
mov
enter
xor
dec
mov
ljmp
iret
sbb
arpl
inc
int3
xchg
xlat
mov
jb
jo
je
inc
xor
and
pushf
mov
mov
cmp
lds
gs
lahf
pushf
call
push
sbb
and
sub
fcoml
aas
fstp
lds
ds
pop
ds
or
scas
mull
sub
das
das
and
add
adc
ret
mov
inc
adc
aad
pop
pop
movsb
out
push
movsb
mov
jo
adc
ss
imul
sahf
add
dec
imul
sbb
xchg
inc
outsb
jmp
adc
cld
add
adc
test
sub
test
jb
xor
fsub
cmp
pop
push
pop
faddl
xor
adc
int3
mov
inc
add
pop
scas
into
int
mov
fsubrl
xchg
xchg
lods
dec
icebp
adc
or
dec
xchg
sahf
in
or
jmp
jbe
movsb
enter
repz
mov
scas
cmp
mov
jge
ja
cmp
adc
dec
les
sbb
fadd
add
mov
data16
jae
lahf
add
fdivrs
clc
mov
in
add
repnz
xor
loopne
and
jp
stos
sub
lahf
in
mov
jb
push
pop
and
js
push
adc
loopne
sbb
cwtl
dec
aas
ss
das
bnd
xor
push
fisubs
xlat
xchg
orl
lods
mov
bound
divl
cltd
jno
fs
lds
jecxz
lret
sub
std
lds
add
in
add
dec
mov
sub
mov
and
sub
push
jae
jge
push
imul
add
dec
imul
js
and
aad
dec
adcl
add
cmp
stos
push
and
jo
pop
xor
mov
into
mov
mov
dec
push
shrl
push
lret
xchg
mov
loope
call
add
mov
or
inc
xchg
xchg
mov
mov
fisttps
push
movsb
in
xor
push
mov
repnz
test
jnp
xorl
sub
jnp
xor
int3
test
push
sti
loopne
add
fmull
out
movsb
mov
xchg
sti
xorl
add
notb
dec
dec
pusha
lret
insb
cwtl
aam
inc
sub
push
fwait
cli
push
cmp
push
push
shll
mov
and
popa
lods
nop
insb
sub
inc
shrl
dec
popf
enter
mov
popa
jp
jmp
adc
dec
or
add
mov
cmc
or
or
dec
inc
notb
test
movsb
bound
les
nop
mov
sbb
sub
sbb
ja
out
fdivrs
jae
ret
adc
std
data16
sub
addl
push
sub
inc
clc
cmpsl
ljmp
ffree
cs
inc
in
clc
loope
pop
jns,pn
jl
popf
in
jbe
dec
xor
dec
enter
cmp
xor
into
outsl
lock
mov
sub
arpl
out
fwait
scas
bound
dec
mov
dec
jmp
stos
mov
xchg
imul
mov
cmc
movsb
mov
jb
sbb
lahf
sahf
cli
dec
add
in
gs
sub
aam
inc
repnz
and
sbb
cltd
or
mov
pop
inc
adc
mov
adc
ret
insl
inc
push
jae
out
xlat
outsl
in
jmp
mov
pop
xorb
fisubs
sub
sbb
sbb
jge
or
jp
fdivrp
mov
xchg
rcll
xchg
xchg
jns
mov
push
imul
int
rclb
ret
xchg
add
jno
mov
out
outsl
dec
lods
pop
iret
dec
jmp
ret
xchg
es
sub
movsl
xchg
stc
cmp
fmull
aas
jb
int3
push
mov
ja
fidivs
cltd
inc
sbb
out
cltd
fwait
or
xor
jl
and
xchg
push
mov
jp
insl
je
orb
mov
jle
testl
lret
mov
xchg
jle
adc
shrb
push
mov
or
arpl
jbe
and
jecxz
js
loop
ss
leave
out
lock
xor
sti
pop
ficoms
inc
xchg
and
sub
loope
and
sbb
mov
mov
call
pop
and
pop
pushf
jg
sub
sub
inc
shll
mov
lods
push
andl
ret
loope
lods
idiv
sub
xchg
sbb
scas
xchg
mov
cmp
cmpsl
pushl
imull
pop
das
fcoms
sub
xor
test
addr16
push
rcr
pushf
jb
push
xor
cs
ja
xchg
scas
pop
and
ficomps
push
and
mov
jl
data16
jge
cmp
outsl
xchg
jne
inc
test
or
inc
sub
xor
loopne
test
inc
fdivr
imul
mov
je
jno
enter
or
mulb
insl
add
sbb
xchg
push
loopne
shrb
test
loopne
adc
jo
xchg
xor
cmp
movsl
cli
daa
scas
int
out
mov
jle
mov
cs
lods
xchg
push
std
lods
cmc
mov
mov
xor
mov
insl
out
jp
or
fimuls
xchg
callw
or
cmp
push
loop
sub
mov
inc
cwtl
sbb
or
inc
pop
sbb
adc
pop
inc
xchg
pushf
fcoms
sub
mov
xor
push
std
out
sbb
sub
cltd
sub
call
fadds
xor
dec
test
mov
test
popf
or
dec
ss
rorl
xchg
js
xor
jb
jbe
fildll
rorb
xchg
lock
repnz
adc
or
mov
dec
lock
cmpsl
mov
xchg
imul
fisttps
insb
cmp
pop
cmp
adc
out
into
movsl
loopne
xor
out
mov
pop
icebp
mov
ds
jbe
xchg
mov
dec
mov
mov
jb
scas
jnp
mov
les
pop
nop
sub
add
sahf
in
xorl
rorl
or
fwait
push
pop
pushf
and
fildl
shll
stc
sub
out
pop
xor
mov
push
out
or
jae
and
and
mov
push
or
mov
jb
sub
pop
push
loop
pop
leave
push
nop
pop
mov
dec
ljmp
fs
xchg
sub
xchg
mov
inc
in
inc
cmc
xor
xchg
pop
xchg
push
adc
pop
push
mov
cmp
add
rolb
subb
jno
jnp
sti
push
fldl
push
cmp
ja
adc
push
mov
js
jge
adcb
arpl
les
out
cmp
mov
jne
push
aad
in
into
pop
jp
sub
and
adc
out
inc
cmp
lcall
dec
mov
int
and
es
mov
call
pop
jecxz
xchg
sub
loope
and
mov
sbb
inc
movsb
pop
xor
push
into
bnd
push
pop
fbstp
repnz
in
adc
inc
roll
shr
mov
cli
jbe
nop
fs
arpl
push
lcall
xchg
lahf
dec
popf
sbb
insl
or
xchg
mov
mov
xchg
dec
outsl
xor
inc
mov
aad
jne
lahf
aam
sbb
jle
jge
pop
js
xor
rclb
and
mov
xor
cmp
sbb
xchg
mov
fs
enter
push
mov
or
dec
imul
leave
dec
stos
lds
inc
mov
movl
lock
jl
dec
cmova
pop
push
dec
jno
mov
push
adc
jge
das
lock
or
lods
add
in
mov
ficompl
xchg
jae
stc
repnz
je
mov
mov
dec
fs
lahf
ss
pop
sbb
and
pop
in
mov
push
popa
cmc
adc
and
lea
lret
popa
xor
cmp
rolb
xchg
das
mov
push
sub
mov
movsb
outsl
out
fwait
and
jmp
sub
pushf
sub
imul
lret
imul
sub
fisubs
or
sub
add
pop
lods
sti
xor
pop
pop
jns
iret
aad
pop
push
out
jle
sub
pop
mov
aaa
outsb
mov
add
ljmp
mov
or
lea
lret
pop
in
pop
cltd
mov
cmp
test
lcall
cmpsb
iret
pop
jmp
in
mov
addl
pop
arpl
shlb
mov
push
add
es
jne
clc
adc
out
or
andnps
push
jmp
clc
dec
loopne
push
pop
xchg
fwait
jns
or
roll
or
mov
rolb
xchg
mov
push
sub
and
es
aad
xchg
sti
xor
sub
fisubrs
inc
sub
dec
aad
mov
clc
jle
ja
push
ret
arpl
in
or
jge
out
push
cmp
into
cmpsb
in
jmp
or
jne
dec
jno
and
mov
sub
int3
mov
outsl
movsl
xchg
inc
lahf
ficomps
lahf
ja
sub
fldenv
or
lea
sub
lcall
cmp
sub
in
cmpsl
xor
xchg
arpl
cmp
aad
out
cmpsl
jbe
mov
in
mov
inc
in
mov
daa
imul
hlt
pop
popf
or
sbbb
shll
stos
cli
outsb
leave
adc
lds
mov
adc
inc
push
adc
out
mov
in
push
repz
push
lcall
jmp
dec
mov
push
mov
xchg
mov
push
lcall
adc
mov
push
movsb
fistpll
jle
sbb
ffreep
xchg
lock
mov
pop
cmc
out
xchg
hlt
mov
enter
mov
and
das
in
push
pop
aas
jne
mov
cltd
or
pop
jge
xor
dec
xchg
push
ja
cld
nop
push
mov
jno
rolb
or
adcb
negl
sbb
cmpsl
ds
leave
shll
jg,pt
stc
aam
cmpsl
je
push
jecxz
mov
lahf
iret
sub
insl
hlt
and
loopne
mov
movlhps
cltd
mov
mov
sub
loopne
inc
push
jge
outsb
mov
cmp
fcoms
sahf
sbb
cld
gs
jno
into
push
cli
pusha
lret
xchg
xchg
movsl
dec
testl
fisttpll
jp
push
int
mov
out
xor
in
jmp
pop
sti
shr
jg
into
add
test
jmp
adc
subb
push
shr
int3
mov
mov
arpl
das
lcall
les
cmpsl
jmp
ficoml
inc
add
jge
pop
push
mov
les
std
mov
fwait
sarb
repnz
fs
add
mov
dec
pop
mov
sbb
mov
cmp
outsb
cmp
sub
inc
pop
pop
sbb
test
mov
loop
ffreep
mov
jnp
push
daa
out
jne
lret
xchg
push
inc
mov
sub
jmp
jne
sbb
dec
pushf
jo
sbb
pop
test
sub
cld
xchg
dec
psubsb
inc
les
push
cltd
dec
sbb
xchg
iret
xchg
and
cmp
push
inc
sbb
mov
pop
jle
filds
das
and
mul
sti
cmp
and
mov
in
insb
mov
dec
and
cwtl
orb
inc
fcompl
mov
incb
mov
pushf
push
adc
fildl
jecxz
and
mov
int3
dec
sbb
scas
and
mov
les
push
pop
add
jmp
add
test
cmp
mov
js
popf
das
jp
jmp
push
jno
cmp
adc
mov
jne
in
insb
xor
mov
pop
jp
push
mov
icebp
lods
stc
inc
xor
cmp
dec
push
and
jg
mov
loop
mov
lds
imul
xor
or
test
or
and
xchg
ret
xchg
test
pusha
sahf
and
out
out
addr16
repnz
cmpsb
inc
jo
mov
inc
subl
lock
inc
dec
in
sbb
mov
loope
lcall
imul
int
jmp
pop
aaa
movsl
repnz
or
ja
mov
ret
push
sub
or
aad
sub
rorb
sbb
arpl
repz
ret
cmc
in
icebp
cmp
push
xchg
push
in
pop
xor
sub
gs
sbb
fidivrl
or
cmc
lahf
jae
xor
lcall
adc
dec
pop
lret
sti
out
mov
aaa
mov
repz
mov
sub
mov
pop
sbb
test
loop
in
xchg
outsb
aas
stos
das
dec
sahf
sub
jno
adc
aam
dec
scas
test
sub
nop
stos
and
aas
and
rcrl
test
orl
and
cli
add
mov
fwait
add
or
mov
movsl
or
mov
xor
mov
pushf
adc
push
dec
or
fisubrl
mov
aam
sub
mov
fld
aad
out
faddp
adc
les
ficoms
jmp
jg
shrl
into
fwait
out
cmp
xchg
je
push
out
mov
sub
mov
sub
stc
lret
xchg
les
mov
lcall
mov
xor
mov
lods
lret
xchg
or
cmp
lods
fimull
pop
scas
fisubs
mov
adc
add
addr16
cmp
arpl
imul
subb
in
ljmp
into
test
xor
mov
or
lret
mov
cmp
dec
aas
push
inc
adc
das
mov
and
push
arpl
in
push
push
xchg
std
jge
out
fbstp
gs
jae
mov
xchg
out
inc
fcmovb
or
lods
push
into
les
cltd
sbbl
xor
andl
outsb
ss
je
cltd
mov
add
pop
inc
pusha
jno
cli
sub
xchg
mov
in
les
int3
jmp
repnz
js
pop
mov
mov
rcrb
ficoml
nop
cli
out
iret
pop
scas
jle
jnp
xchg
xor
popf
pop
pop
ss
je
dec
js
mov
dec
les
call
sbb
cwtl
fiaddl
push
or
sbb
clc
adc
mov
cmp
lea
jge
sbbl
jmp
in
xadd
lock
pusha
in
stos
ss
in
popl
and
jmp
xchg
mov
mov
gs
rol
icebp
lods
sbb
lret
mov
adc
or
pop
mov
or
xchg
insl
cld
push
mov
js
rorb
mov
cltd
in
in
add
mov
aas
add
jmp
mov
add
jnp
insb
ret
lret
mov
movsl
mov
push
leave
cmp
imul
cwtl
js
xchg
int
test
add
adc
push
mov
lock
push
add
bound
push
aaa
shrb
mov
xor
aam
fisubrl
test
cmpsb
in
movsl
loop
mov
mov
pusha
mov
ret
or
dec
sahf
outsb
insb
xor
xchg
mov
cltd
push
inc
out
ja
dec
inc
xchg
xchg
mov
push
mov
outsb
cwtl
fistpll
shlb
outsb
mov
scas
stc
jmp
mov
ret
or
mul
sbb
nop
stos
cmp
lds
sar
ss
cli
fs
sbb
ret
out
mov
neg
je
repz
movsb
pusha
xor
fiadds
inc
pushf
jge
fwait
fwait
or
jg
lea
inc
cmpsl
dec
cmc
shl
pop
rcrb
cmp
cmpl
fwait
getsec
mov
and
repnz
cmp
lods
cmp
mov
inc
mov
push
iret
cwtl
mov
and
out
lret
mov
cmpl
sbb
out
sbb
inc
push
dec
push
and
mov
adc
xchg
loopne
jle
out
adc
and
push
sub
or
shlb
sbb
jae
sti
aam
lahf
xchg
push
sub
pop
push
ret
xchg
add
out
jg
dec
lcall
or
push
cmp
imul
jg
push
cltd
jbe
fisubrl
jae
xor
ret
add
mov
or
or
rcll
cwtl
pop
mov
stos
sub
addr16
nop
sbb
cltd
aas
push
sub
add
in
test
inc
push
stos
shl
outsl
pop
jno
in
sahf
bound
cmc
pusha
inc
adc
test
pusha
movsb
sti
lock
bound
stos
add
jne
cwtl
push
aas
mov
gs
cld
and
xor
pop
cmp
jnp
xchg
inc
pop
idiv
dec
xchg
inc
stos
xor
add
cmp
pop
pop
xor
jg
and
add
sarb
jle
add
scas
mov
push
inc
dec
out
pop
mov
jns
cmovl
incl
push
ds
inc
leave
call
hlt
int3
hlt
add
xchg
insb
ror
dec
fstpl
bound
shufps
enter
mov
mov
imul
movsb
and
adc
inc
test
and
mov
pop
lcall
shlb
shll
push
lret
and
imul
dec
jg
es
int3
push
nop
cmp
mov
cmp
int3
mov
mov
dec
test
movsl
cs
xorl
and
mov
hlt
test
cmp
mov
sbb
pop
in
cmc
in
mov
xchg
mov
hlt
test
lea
mov
or
call
xor
idivl
sub
pop
inc
roll
adc
inc
dec
jge
arpl
shl
xchg
jno
in
xor
jo
pop
js
xchg
cmpsl
insb
insl
xchg
push
mov
in
lds
mov
mov
sub
mov
dec
push
mov
loope
dec
cmp
cmp
idivb
or
fdivp
scas
stos
outsb
pop
pop
mov
lods
nop
push
leave
pop
aad
insl
cmp
xchg
sub
fstps
insb
nop
int
test
xlat
ret
and
sub
adc
add
addr16
daa
adc
sbb
ss
push
aad
mov
xchg
jp
int
lret
repnz
xchg
mov
jge
stos
push
movb
cld
adc
add
cld
cld
sub
rcrl
mov
or
sbb
jecxz
fwait
xor
ret
pop
fmul
pop
pop
popa
jb
dec
mov
lea
jmp
mov
arpl
scas
repz
movsb
xchg
pop
adc
sahf
mov
icebp
push
sbb
in
cmp
mov
test
or
in
movsb
mov
add
and
fwait
enter
fsubl
xchg
mov
or
ds
test
ret
aad
pop
andl
mov
lret
roll
pop
rcrb
sbb
inc
sbb
or
insb
inc
fmul
mov
jg
dec
sti
sub
mul
pop
sbb
pop
mov
imul
mov
mov
jecxz
flds
mov
jl
cli
mov
cmpsb
pop
fcompl
adc
mov
add
jnp
sub
stos
dec
loopne
fcomip
fmuls
dec
lods
mov
cwtl
loopne
mov
fstpt
fcmovbe
push
xor
mov
mov
addr16
pop
pause
lods
pop
add
and
aas
push
lahf
mov
add
adc
jle
add
sub
adc
in
jecxz
fbld
mov
or
scas
xchg
jns
cmp
ror
popa
mov
in
mov
cltd
sub
xor
cs
cmp
or
mov
push
fs
cmpsl
out
pop
rcrb
lds
sbb
pop
jmp
mov
xchg
adc
std
roll
pop
push
mov
movsb
jmp
hlt
sbb
mov
lahf
cs
inc
outsl
mov
push
lds
loopne
sbb
cmp
mov
mov
add
adc
dec
pop
jmp
mull
out
rol
adc
pusha
and
out
cwtl
jl
insb
pop
adc
inc
adc
sbb
mov
lds
jae
mov
pop
xchg
push
ljmp
into
jns
stos
fildll
pop
mov
pop
popa
out
leave
and
jge
mov
insl
pop
sbb
repnz
aad
imul
xchg
pop
jmp
push
jp
je
mov
xchg
push
adc
add
jge,pt
push
test
push
mov
xchg
push
mov
mulb
dec
and
jl
and
and
mov
dec
sbb
sti
jno
fidivs
sarl
stc
adcl
mov
mov
push
test
dec
movsl
mov
xchg
jno
add
sar
flds
jae
cmp
fwait
jnp
popf
adc
sbb
xor
aaa
sub
negl
push
lock
aam
jno
test
jge,pt
or
pop
lahf
push
ret
ss
add
sbb
inc
fldl
pop
repnz
adc
leave
cmp
decb
sti
sti
fidivrl
outsb
xchg
aam
push
leave
out
inc
aad
les
jbe
mov
popa
fisttpl
jns
in
mov
scas
mov
pop
loope
inc
movsl
ret
pop
cmpsl
pop
sti
cmp
sahf
rclb
test
mov
push
dec
pop
fdivrl
fcmovnu
nop
test
dec
xchg
cmc
rcll
mov
out
sarb
cld
pop
testl
xor
adc
inc
jae
outsb
cltd
or
fs
and
jbe
inc
xchg
cmp
out
sub
inc
lcall
mov
jl,pt
fwait
es
gs
int3
loope
scas
scas
mov
xor
pop
and
rorl
xchg
lds
xchg
popa
fstps
xor
sub
out
scas
or
in
dec
mov
ds
xor
fcomps
mov
jno
mov
xlat
sbb
pop
aaa
cmp
aam
sbb
sub
flds
cmp
cmp
dec
in
adc
cmc
mov
pop
movsb
lret
xchg
es
or
imul
pop
test
arpl
fyl2x
jmp
pop
shlb
mov
cltd
sbb
jne
fcoms
inc
pop
mov
pop
mov
or
dec
sbb
jns
dec
test
std
aaa
repnz
inc
mov
cmc
mov
arpl
into
sahf
mov
mov
roll
inc
mov
or
fstps
inc
or
xor
addr16
imul
mov
cmpsl
sub
aaa
sbb
popa
mov
lock
iret
icebp
out
sub
loopne
js
daa
ljmp
into
inc
daa
add
mov
adc
repz
jl
js
mov
jbe
or
lahf
mov
mov
or
pop
repnz
daa
scas
pop
mov
inc
push
pop
inc
jo
add
sbb
xor
ja
aaa
fstpl
jmp
dec
mov
sti
mov
mov
leave
loopne
mov
jp
mov
stos
shlb
pop
mov
jmp
stc
out
push
loope
orb
sub
mov
imul
daa
cld
xor
lahf
jg
pop
call
dec
mov
loopne
push
flds
mov
pushf
xchg
cmpb
fimuls
push
pop
movsb
sub
sbb
ret
jge
xchg
pop
test
pop
outsl
lock
dec
push
iret
add
aas
sub
into
pop
or
aad
jbe
dec
inc
test
or
add
aam
dec
cmp
mov
pop
push
inc
repz
test
ret
add
push
in
adc
dec
cmp
cmp
push
les
test
fst
addl
es
inc
fdivrs
lock
cmpsb
inc
lret
jmp
or
push
xor
push
pop
ljmp
jnp
lds
mov
in
push
arpl
adc
xchg
pop
in
mov
push
outsb
out
roll
out
cli
inc
fiaddl
mov
das
or
mov
adc
jb
ja
arpl
arpl
mov
rol
inc
bt
ljmp
mov
lea
mov
xchg
push
pusha
hlt
in
xor
or
jg
je
sbb
jle
and
sbb
xor
inc
popf
test
xor
xchg
jb
cmp
inc
sub
mov
aas
pop
aaa
and
sub
pcmpeqw
inc
xchg
dec
dec
mov
cmp
ljmp
and
xchg
addr16
hlt
lea
das
mov
and
lret
inc
es
loop
pop
stos
ljmp
out
roll
por
mov
rorl
je
repnz
repz
xchg
daa
mov
imul
xchg
jmp
add
inc
stos
xor
jle
inc
inc
std
inc
icebp
lcall
jo
sbb
popf
jmp
int
adc
push
dec
push
dec
mov
pushf
pop
fsubp
and
ljmp
cltd
mov
and
bnd
mov
adc
ljmp
rorb
clc
popa
nop
lods
leave
jbe
pop
jne
inc
and
pop
pop
xlat
repnz
inc
cmc
and
pop
xchg
xor
sbb
jb
jmp
and
in
es
clc
clc
test
jmp
dec
cmp
subb
dec
out
std
leave
mov
imul
icebp
les
gs
mov
call
hlt
fimuls
inc
ret
dec
sub
aas
in
sahf
mov
das
xchg
adc
mov
xor
ret
or
mov
sub
bound
es
push
fnstenv
popf
std
setl
cmp
and
int
xor
leave
rcll
mov
daa
xchg
or
pushf
pop
notl
out
lret
imul
or
pusha
push
pop
mov
lods
and
jnp
mov
jbe
cmpsl
es
sub
jp
sbb
xor
cli
adc
lock
mov
scas
mov
movsl
scas
movsl
je
cmpsl
xor
and
imul
dec
pop
inc
into
paddd
cmc
mov
clc
mov
test
dec
cli
nop
mov
lock
and
es
stos
lcall
insb
shrb
ds
repz
add
out
pop
cmpsl
xlat
xchg
inc
pop
daa
xchg
xlat
hlt
test
fisubs
jne
mov
mov
cmpsl
pop
mov
jns
ljmp
add
aas
xor
nop
mov
jl
cmpsb
xor
push
mov
mov
fisttpl
call
sbb
ret
call
sub
ret
adc
cmp
or
int
movsl
inc
jp
mov
sti
push
mov
popa
xchg
aas
test
and
sti
lods
stc
xchg
in
stos
dec
lahf
pop
ret
sub
mov
jmp
outsl
rorb
adc
sbb
lahf
repz
mov
and
int
cli
ja
inc
jo
lret
bound
sbb
int3
mov
push
mov
repz
fisubrl
push
cwtl
std
mov
shrb
xchg
cmp
xor
test
xor
add
ljmp
jbe
aam
gs
inc
or
xor
dec
das
push
mov
mov
iret
mov
inc
jno
push
into
mov
daa
sub
dec
hlt
inc
daa
sti
cli
test
jnp
cld
jae
push
jecxz
push
sar
xor
hlt
cli
cmpsl
lock
dec
and
mov
lods
inc
call
mov
call
and
mov
mov
sbb
jne
cltd
cwtl
pop
stos
push
in
in
xchg
mov
dec
push
sub
pop
aas
push
mov
jno
loop
mov
inc
pop
adc
into
mov
dec
arpl
adc
and
sub
mov
xor
mov
ret
ret
ja
mov
fists
mov
push
movsl
addr16
adc
outsl
adcb
or
insl
jp
adc
dec
mov
rcrl
test
cmp
hlt
sbb
aam
mov
ret
pop
ror
jne
cmp
leave
leave
add
cmpsb
data16
mov
iret
out
sti
mov
mov
fwait
xor
in
sahf
add
push
mov
xchg
mov
add
mov
mov
dec
add
popa
add
loop
sbb
cmp
fwait
in
hlt
mov
jp
sub
mov
mov
cld
pop
movsb
mov
sbb
das
fbld
adcb
les
or
pop
ds
dec
xor
cli
shlb
inc
shll
jle
gs
insb
jg
aaa
loopne
cmc
or
aad
test
int
pop
iret
xor
dec
rcr
jg
cmp
sbbb
push
sub
mov
or
mov
mov
clc
inc
inc
inc
jg
sub
leave
xor
xchg
dec
cmpb
xchg
mov
fisubrs
addr16
cs
jne
test
push
cwtl
and
push
jle
cmp
xchg
jns
push
xchg
pop
adc
hlt
jbe
inc
cmpsb
xchg
aas
pop
xchg
out
and
push
sub
mov
or
pop
je
pop
int3
cmp
mov
call
pop
and
popa
enter
xor
aas
adc
cmp
mov
in
in
mov
lcall
xor
sbb
rorl
in
cli
cs
enter
mov
xor
mov
cmp
inc
into
dec
fnstenv
add
sub
inc
data16
push
mov
cmp
es
push
out
xor
pop
mov
arpl
sub
out
pop
lods
stc
lds
fsubrs
cmp
mov
xchg
pop
cmp
jne
sbb
jnp
pop
adc
xor
pop
shl
mov
stos
sub
stos
mov
imul
movsb
mov
and
inc
sahf
sub
movsb
or
rolb
jle
xor
adc
adc
hlt
xor
jp
int
stos
test
das
or
jle
pop
shrl
xor
mov
mov
sbbl
fistpll
movsb
cltd
lret
subl
and
push
pop
mov
addr16
pop
mov
jecxz
repnz
push
mov
je
psubq
fstpt
mov
add
mov
rorb
in
dec
xchg
js
out
in
xchg
pop
or
aas
cmp
sbb
imul
out
mov
pusha
sbb
outsb
mov
add
pop
sarl
and
lahf
stc
in
mov
outsl
scas
mov
jecxz
fstpl
jno
adc
outsl
pop
pandn
into
bound
loope
lcall
jp
movsb
push
push
cmp
stc
adc
inc
mov
xchg
aad
mulb
jecxz
or
scas
sti
mov
sub
out
jb
ret
unpckhps
xchg
xor
pushf
jbe
add
xor
xchg
add
testb
xchg
arpl
pop
popa
and
xor
xor
out
int
cld
inc
and
data16
push
dec
inc
push
mov
pop
call
loope
push
fists
and
cmp
xchg
inc
mov
add
mov
das
cs
push
sub
mov
and
mov
pop
push
movsl
jbe
add
mov
push
add
aam
outsl
jge
aam
cltd
pop
ret
sti
fists
inc
lea
mov
jg
ljmp
and
dec
sub
ffreep
daa
cmpl
fs
jno
fdivr
cmc
sub
add
lret
pop
xor
movsb
mov
dec
jae
jbe
aas
inc
imul
enter
dec
loop
dec
jle
sub
or
pop
push
push
add
jl
xor
or
mov
out
stos
pusha
jl
push
dec
es
mov
mov
jnp
cli
push
or
fildll
dec
push
push
jp
pusha
dec
rclb
push
lret
add
mov
cmc
adc
insl
lcall
daa
lahf
sbb
test
sub
int
outsl
das
lds
sub
and
mov
stc
dec
xchg
push
pop
cmpsl
cmp
repnz
or
ret
or
push
sbb
pop
jg
lret
orb
inc
push
inc
jmp
xlat
inc
cmp
scas
int3
push
iret
imul
push
jmp
les
mov
mov
shll
pop
sbb
aam
fisubl
add
fistl
dec
rcl
mov
dec
pop
mov
lret
dec
mov
xor
movsb
xor
mov
js
jbe
add
mov
mov
push
mov
or
pop
lret
push
adc
push
dec
aam
dec
sub
test
in
push
enter
xor
sub
hlt
dec
lds
mov
aam
mov
psrlw
push
add
fmuls
xchg
sbb
fbstp
lret
pushf
lret
jecxz
cmp
and
mov
stc
jae
mov
addr16
enter
in
add
loopne
pop
pop
xor
mov
pushf
jne
bound
insl
cwtl
fwait
ret
adc
jmp
dec
jbe
rcrb
pop
jp
in
jmp
cld
jno
push
push
inc
iret
movsb
dec
aad
pop
mov
orl
jg
mov
fsubl
je
inc
or
shrb
addb
push
xor
mov
sbb
ljmp
xchg
sbb
add
rorl
enter
int3
aam
ljmp
adc
xlat
iret
pop
xchg
push
test
jae
imul
inc
dec
nop
cmc
push
xchg
inc
adc
arpl
fwait
js
pop
adc
shlb
mov
pusha
sub
cwtl
inc
data16
loopne
cmp
xchg
jo
popf
sarb
and
insl
mov
add
mov
push
test
jno
pop
subl
ficompl
xor
rcll
aad
pop
mov
adc
sub
xchg
andl
add
dec
fmull
insl
filds
pop
or
lea
cmp
repz
out
xchg
xlat
ret
lock
ds
or
push
cmp
or
xor
faddl
dec
mov
lods
pushl
push
fimuls
mov
repz
mov
fidivrs
or
aad
not
jne
dec
push
mov
fists
inc
or
add
scas
cmp
xchg
xor
dec
ds
fldl
les
fcompl
xor
xor
out
and
pop
rolb
mov
add
push
cltd
xor
pop
cmp
adcl
or
jmp
inc
jb
imull
cmpsl
pop
fstl
and
cmp
sti
clc
aas
push
fisttpll
cs
lock
stos
je
dec
push
add
inc
jle
scas
mov
xchg
mov
popf
stos
jg
and
cmp
arpl
jge
adc
jae
mull
ss
mov
stos
inc
xchg
and
aad
aad
xchg
das
push
jne
or
add
push
push
pusha
in
cmp
leave
push
pusha
repnz
insl
mov
dec
push
or
dec
ds
test
jbe
mov
mov
movsl
mov
mov
xchg
and
or
iret
mov
jbe
mov
imul
loope
ss
lds
lret
jbe
and
dec
pusha
cmp
push
add
insb
pop
inc
or
orb
rclb
mov
arpl
dec
stc
out
cmpsb
das
aaa
mov
icebp
std
sti
pop
push
push
ret
xchg
test
inc
das
mov
and
lcall
inc
xchg
jmp
cmpsb
mov
pop
mov
xor
enter
loope
xor
dec
sbb
scas
mov
jge
cmp
jbe,pn
inc
jge
push
dec
xchg
xchg
sbb
inc
xor
ja
push
xchg
int3
std
push
in
in
lds
in
das
inc
add
repnz
mov
inc
or
movsb
inc
fisubs
fsubrl
std
cmpsb
jg
movsl
push
repz
sbb
mov
cmpsb
add
stos
lahf
cmp
dec
and
pop
bound
sahf
int3
sarb
movsb
add
rclb
xor
adc
sub
adc
cmp
inc
mov
fsts
lret
shr
out
pop
push
aam
lea
pop
cmpsl
cmp
nop
mov
jbe
cmovs
xchg
add
lods
lds
xchg
fcomi
inc
jge
xchg
and
pop
pop
xchg
push
mov
sub
push
adc
pushl
int
xlat
mov
aam
out
cmp
adcl
cmp
enter
jb
jecxz
hlt
scas
icebp
mov
inc
add
pop
imul
push
xchg
mov
pop
or
sbbl
clc
sub
sbb
mov
jl
sbb
push
fistps
loop
mov
call
test
imul
inc
mov
scas
loopne
mov
mov
mov
ret
cs
cmpsb
iretw
xor
test
cltd
xchg
shll
sar
inc
pop
stc
test
ja
adc
fwait
lds
mov
scas
xchg
dec
je
push
test
cmp
xor
stos
in
pop
or
mov
dec
loope
test
es
clc
add
mov
ljmp
mov
add
pop
bound
add
jns
aad
mov
inc
mov
ljmp
insl
in
test
mov
push
cwtl
mov
bound
cmpsb
inc
fisubl
dec
cli
push
or
push
ja
and
push
pushf
xchg
cmpb
lret
cmp
mov
or
rcrl
xor
int3
call
mov
shlb
pop
jns
mov
addr16
enter
jo
or
dec
push
cli
mov
or
mov
mov
cli
add
cs
sahf
mov
rclb
fildll
cmpsl
test
mov
jp
push
jg
dec
xor
sub
fcoml
fcomip
shll
sarl
clc
out
adcl
push
cs
mov
fmull
and
imul
pop
fcmovnbe
sbb
out
cmp
ss
jae
mov
pop
daa
push
mov
fisttps
jo
mov
inc
flds
cmc
dec
pop
aaa
fldenv
xor
fldl
repnz
mov
aam
ljmp
cs
inc
lcall
inc
jecxz
or
sbb
fidivrl
loop
fldenv
arpl
negl
adc
out
inc
stos
std
mov
add
cli
pop
mov
jecxz
scas
mov
aam
in
jmp
push
cli
sbb
jle
and
fisubs
aam
sahf
sti
fwait
imul
cmp
and
jecxz
push
test
adc
sbb
aaa
cmp
pop
cli
lret
lcall
mov
xor
lods
cmc
fdivrl
push
subl
xchg
push
mov
int3
pop
sub
insl
mov
bound
sub
lds
and
rorb
cmp
xchg
mov
sbb
out
sbb
adcb
jle
push
jbe
addl
xchg
mov
adc
mov
fcomi
xchg
mov
adc
dec
scas
mov
xor
and
outsb
push
stos
or
jb
popf
dec
pushf
jnp
scas
lods
loopne
rolb
inc
jbe
xchg
jg
jno
fsqrt
adc
lods
pop
mov
outsl
out
lock
cmpsl
and
jns
pop
icebp
cmp
jnp,pn
cmp
xchg
ret
sub
inc
and
mov
add
repnz
xor
dec
lahf
repnz
mov
popa
mov
addr16
cmp
imul
inc
pop
cmp
dec
xor
aas
jns
rcll
insb
pop
fldcw
push
imul
aas
dec
pushf
sub
pop
xchg
mov
mov
dec
or
push
gs
out
out
in
adc
repnz
add
and
cmp
push
and
outsl
cmp
roll
cmp
jne
pop
imul
mov
jmp
cli
push
sbb
adc
xchg
jo
cmc
pop
iret
pushf
jl
sbb
push
popf
pop
aam
adc
push
enter
and
inc
adc
ss
sti
or
ja
pushf
jl
rcrl
pop
cmpsb
mov
mov
adc
add
popa
stos
aam
dec
dec
sub
pop
push
adc
pop
jnp
icebp
cmpsl
fisubrs
jne
mov
xchg
mov
lahf
subl
sahf
loop
xchg
sub
clc
ret
inc
inc
ljmp
and
mov
jae
test
cmp
nop
mov
sub
stos
mov
dec
lea
fnstcw
imul
bound
dec
push
aam
inc
jle
gs
fldcw
xchg
adc
xchg
stos
xchg
std
cmp
mulb
adc
cmpsl
fstps
dec
div
dec
xchg
cmpsl
push
adc
jle
notb
cs
mov
rcll
mov
movsb
adc
pop
ja
inc
orl
filds
jmp
cmpsl
mov
adc
mov
cmp
loop
or
sub
js
pop
mov
sbb
cmp
scas
and
dec
push
inc
repz
and
pop
dec
add
mov
icebp
sbb
shlb
mov
xchg
push
or
mov
iret
mov
and
aad
dec
mov
fdiv
mov
rorl
popf
mov
aad
cwtl
roll
mov
lret
jbe
pop
mov
xchg
sarb
mov
ljmp
xor
inc
dec
jb
stos
dec
arpl
sbb
jne
movsl
je
cmp
sub
xchg
xor
outsb
fs
cltd
mov
movzbl
cmpsb
scas
push
mov
daa
adc
lahf
jmp
sub
adc
aam
mov
jle
pop
mov
jl
pop
movsb
inc
pop
add
adc
dec
lock
cmp
push
mov
dec
pop
xchg
fcom
jo
aaa
xlat
dec
sub
cmp
sti
movsl
fstpl
and
outsl
jg
mov
notl
pop
push
adc
inc
lret
and
iret
or
cltd
cmpsl
mov
shl
ret
je
scas
cmp
jle
iret
xchg
insb
inc
lods
push
pop
fdivs
fcmovnu
rclb
mov
adc
sub
pusha
icebp
inc
jae
call
and
imul
xor
cmp
sbb
cmp
push
inc
add
lahf
inc
cld
mov
dec
cmp
insl
loop
inc
stos
dec
movsb
jmp
add
mov
movsb
stos
adc
js
leave
clc
add
leave
fcoms
nop
jb
sbb
add
sub
insl
addb
pop
add
mov
negl
push
lret
jo
hlt
dec
xchg
and
mov
mov
pop
call
pop
or
iret
imul
sub
ds
pop
jbe
jecxz
pop
mov
dec
cs
mov
adc
push
ret
jnp
mov
mov
mov
push
push
arpl
mov
out
cmpsb
js
sbbb
sbb
aad
scas
lcall
mov
push
ds
pop
pop
std
add
and
mov
mov
and
into
push
mov
mov
cmc
test
ja
data16
and
jns
loope
repnz
xchg
popa
loope
dec
aas
inc
adc
dec
arpl
xlat
mov
ljmp
imul
jne
xor
sti
pop
lds
leave
daa
lahf
inc
mov
inc
jnp
loop
jmp
testb
aas
xor
outsb
add
out
mov
fidivs
push
inc
or
stos
clc
mov
lds
or
stc
or
jae
bswap
jmp
popf
ret
xchg
push
ret
mov
rorl
push
icebp
adc
sbb
mov
out
scas
aad
mov
in
xchg
mov
push
inc
xchg
stos
xchg
adc
out
cmpb
xchg
mov
mov
dec
cmp
test
mov
ljmp
cmc
pop
loop
es
popf
inc
je
ss
cmpsl
popf
aam
xchg
and
xor
fdivrl
lcall
pop
loopne
ror
and
mov
push
mov
mov
dec
test
enter
icebp
xchg
test
xor
xchg
js,pt
ljmp
inc
dec
xor
leave
or
sub
call
leave
inc
xor
inc
xor
clc
add
sarl
mov
jge
inc
inc
pop
pop
ja
fiadds
es
addr16
dec
pop
jb
jne
xor
cmp
sbb
fldt
clc
ljmp
jnp
mov
pop
mov
in
leave
xchg
add
mov
adc
mov
push
fbstp
js
push
shrb
jle
insb
push
sbb
pushf
leave
or
xchg
mov
outsb
lahf
loopne
or
call
cmp
sub
loop
not
jns
das
loope
xor
in
movsl
xchg
stos
fldl
fwait
loope
stos
cli
jae
and
das
shrd
pop
push
aad
sub
insb
hlt
cld
cmpsb
sbb
out
ret
int
mov
clc
dec
test
ljmp
and
jp
in
test
xchg
and
push
cmp
mov
bound
fisubrs
pusha
adc
inc
xor
sarb
mov
aas
test
or
stc
mov
sbb
sbb
or
jnp
cmpsl
jmp
sti
out
cmc
pop
mov
dec
subb
mov
jbe
jp
les
inc
jns
mov
rcll
xchg
or
lea
ss
cmc
sub
lcall
dec
scas
fiaddl
mov
dec
das
daa
ret
movsb
sub
flds
adc
fdiv
aam
into
outsl
lret
call
mov
adc
sar
sub
sbb
hlt
xchg
xchg
sbb
pop
shl
jmp
popf
fcoms
cmp
cmpsb
sbb
loop
jge
movsl
cmp
std
add
lods
cmp
gs
mov
dec
jne
xchg
add
xorl
dec
push
xchg
push
je
dec
pop
sbb
out
adcb
jle
out
subb
jne
pop
jl
pop
xchg
jo
add
and
jns
addr16
sbb
mov
and
je
cltd
dec
pop
mov
lods
orb
push
inc
xlat
pop
push
push
loop
jmp
rclb
and
ss
pop
jl
xchg
in
add
cmp
inc
pusha
xor
pop
cmp
mov
add
stos
sub
fwait
push
fiaddl
out
dec
sbb
pop
insl
ret
stos
or
negb
jg
sub
iret
pop
insl
orl
adc
call
inc
repnz
and
fistpl
mov
add
icebp
xchg
rcl
cmp
sbb
pop
in
pop
add
popf
pop
cmpsl
arpl
jno
scas
test
into
xor
out
and
pusha
sbb
cli
push
pushf
jns
aad
nop
stos
lahf
inc
rorb
push
loope
in
jae
inc
jl
xor
xchg
adc
scas
fimuls
sub
pushf
xchg
std
ja
addb
jb
xchg
lods
ja
inc
jb
pop
out
jp
or
xor
ljmp
push
push
std
fmull
pop
pop
loope
mov
popa
movsl
imul
mov
jecxz
fadds
sbb
test
sbb
std
fs
movsl
sbb
mov
ficoms
lahf
test
jge
lea
inc
cmp
shll
cmpsb
pop
or
sbb
sarl
jne
loop
adc
test
loop
xor
fdivs
push
ret
sahf
push
movsl
loopne
cmp
mov
outsb
push
or
xchg
mov
jg
cli
inc
jle
pushf
push
and
movsb
pushf
lods
xor
dec
loopne
push
jne
jle
hlt
es
ja
aad
xchg
sbb
jl
push
out
push
neg
lds
adc
xchg
sub
std
push
inc
xchg
xor
lods
jg
bound
into
movsb
out
mov
movsl
and
out
pop
pop
lahf
call
lahf
scas
push
jns
lods
or
aam
dec
outsl
into
mov
ret
sbb
inc
mov
jns
push
popa
lret
xchg
data16
mov
inc
es
add
test
in
add
pop
in
lret
add
jp
sbb
and
das
mov
jnp
mov
call
cmp
cld
lahf
pop
aas
inc
ds
inc
imul
lret
aam
fimull
xchg
pop
lret
xchg
push
mov
lods
montmul
cmpsb
out
xor
xor
out
js
sbb
mov
test
push
in
jge
sbb
add
mov
es
or
pop
fcoml
scas
int3
pop
push
dec
and
dec
jl
xor
xor
xchg
insl
cmp
sbbl
sbb
mov
sbb
fdivp
jbe
or
push
movsb
sub
sarb
cwtl
adc
xlat
jmp
adc
movsb
push
cmp
in
xchg
enter
stc
or
xor
fldcw
sbb
mov
dec
push
mov
shrl
xorl
out
mov
movsl
and
mov
adc
out
mov
push
and
filds
shlb
or
int3
inc
sub
mov
jb
jecxz
out
pop
jo
test
mov
mov
mov
mov
sbb
sub
sarl
xor
icebp
xor
xor
lds
jae
je
aaa
ja
jecxz
dec
jbe
and
jbe
rolb
cs
ret
sub
pop
imul
adc
lret
add
cs
lods
mov
pop
push
shl
stc
xchg
das
into
xchg
sti
fwait
and
push
push
or
aas
mov
call
or
ljmp
push
aam
inc
jne
test
fbstp
std
lcall
fistps
jp
out
in
jmp
and
icebp
mov
sbb
inc
mov
and
inc
mov
and
cld
and
aam
out
fsubs
mov
inc
pop
pop
push
aad
mov
fwait
ss
outsb
mov
sub
sub
sti
mov
lea
sub
lds
cmp
pop
pop
scas
xor
mov
push
inc
mov
test
sbb
sub
fwait
icebp
loope
out
pop
add
int
je
stc
xchg
cmpsl
mov
loopne
or
xchg
lcall
sahf
sbb
xchg
push
mov
sbb
insl
push
jne
cmp
and
in
dec
cwtl
or
incl
mov
or
arpl
jno
js
dec
or
imul
add
arpl
ljmp
sbb
pop
pop
lods
add
imul
mov
cmp
and
xor
pop
ljmp
test
pusha
lock
clc
inc
and
jb
xchg
data16
inc
mov
cmpb
pop
repz
es
jbe
aad
jp
mov
and
xor
int
adc
inc
insl
mov
xchg
pushf
cltd
rolb
das
sub
pop
scas
mov
das
outsl
pop
mov
leave
pop
movsl
data16
mov
in
lock
xor
cmp
test
popa
sub
int3
mov
lret
fiadds
cmp
push
adc
jno
repnz
movsb
jno
cltd
pop
pusha
pop
les
ret
push
scas
jl
jg
lcall
mov
icebp
sbb
adc
mov
xchg
imul
push
fwait
adc
jo
nop
das
jne
jle
cmpsb
pop
mov
mov
sahf
repz
pop
cwtl
dec
push
pop
jbe
xor
mov
jnp
into
subl
mov
and
and
lcall
mov
std
or
cmp
inc
fisttpl
cmpl
jl
dec
inc
inc
jle
add
aaa
stc
pop
inc
mulb
cmp
rorb
mov
push
ret
xor
inc
push
push
mov
addl
repnz
sti
jne
sub
outsb
lcall
lds
mov
ljmp
fwait
outsb
int3
pop
mov
dec
mov
xor
cmp
inc
cmc
jne
vmread
movsb
cmp
ds
shrl
xor
inc
and
adc
and
xchg
lock
arpl
and
mov
mov
stos
fs
out
or
ja
push
jle
cmp
mov
add
cli
fucomi
inc
and
mov
gs
dec
push
or
adc
add
shl
orb
mov
jg
test
mov
mov
push
push
push
loopne
in
cwtl
cmpsl
pushf
and
nop
loopne
push
cwtl
dec
lods
fildll
mov
movsb
out
imul
pop
call
imul
mov
std
mov
pusha
cmc
outsb
adc
leave
xchg
fisttps
xchg
and
mov
add
fcmovne
addl
push
pmullw
cmp
jnp
or
imul
jmp
and
jle
xchg
clc
in
mov
sbb
in
cs
outsl
fidivrl
int
inc
jne
xchg
int3
out
push
sbb
pop
pop
loopne
mov
cli
push
jg
mov
cmp
inc
or
or
cs
outsl
and
xchg
adc
pop
imulb
lods
dec
inc
dec
lret
imul
and
mov
int3
mov
cli
dec
imul
adc
mov
bound
fstl
movsb
scas
outsl
adc
sarb
out
pop
xchg
add
gs
sbb
sub
enter
in
insb
push
pop
mov
jl
shll
pop
and
xor
call
pop
arpl
scas
xchg
loopne
pop
inc
mov
push
iret
jno
movl
mov
leave
test
inc
add
jp
daa
jg
lahf
xchg
ja
sbb
std
adc
fistpll
lret
sub
test
xor
out
push
scas
xchg
pushf
cld
adc
movsb
lods
fwait
mov
sbb
stos
xchg
pusha
nop
data16
es
pop
mov
or
mov
jmp
push
je
or
lods
jmp
inc
sub
xor
inc
dec
push
mov
sub
add
inc
pop
sbb
das
popa
and
in
xor
int3
xchg
ret
imul
or
sbb
outsl
aam
pop
add
out
nop
loopne
jne
ret
jne
fisttps
out
push
cmp
xchg
lea
jg
adc
aas
aad
push
hlt
mov
out
add
and
out
and
ret
adc
mov
xchg
scas
mov
sub
div
add
add
insb
mov
jnp
jl
pop
xchg
cmp
pop
adc
pop
mov
cmp
popa
or
aas
mov
mov
addb
jae
shll
test
pop
sahf
adcl
out
stos
loope
push
arpl
jne
add
xchg
pusha
dec
arpl
mov
xchg
daa
fstpt
js
ss
or
jno
jo
cmp
mov
stos
xchg
insl
or
rol
inc
pop
lock
pop
dec
or
es
cmp
pop
xor
sbb
or
lods
add
ficoml
and
push
inc
ss
pusha
rorb
jecxz
sahf
sahf
xor
repnz
push
rorb
cmovns
movsl
test
in
fs
mov
insl
xchg
test
lods
dec
push
pop
sub
push
sub
mov
mov
pop
jae
sub
push
fwait
sub
xchg
sbb
je
popl
lds
loope
hlt
fwait
mov
pushf
das
scas
push
fidivs
mov
xchg
leave
std
sub
adc
sub
outsl
subl
and
sub
arpl
add
std
pop
imul
arpl
fidivrs
cmpsb
or
mov
fwait
push
out
push
pop
mov
addr16
popa
mov
xlat
outsl
xchg
or
arpl
repz
imul
mov
sbb
sbb
adc
andb
cmp
sbb
adc
imul
mov
cmpsl
popa
ret
sbb
out
cbtw
sub
aas
sahf
and
mov
push
std
clc
mov
fstps
push
iret
shlb
in
fists
and
aaa
adc
mov
aam
cli
xor
xorl
sub
cmpsl
dec
inc
add
xchg
ss
xchg
push
imulb
push
insb
adc
adc
arpl
repnz
inc
stos
int3
pop
pop
mov
loop
inc
out
test
sub
pop
lcall
ja
and
jnp
mov
push
enter
lea
out
sub
mov
jnp
in
call
mov
jo
and
dec
cmp
lahf
push
in
mov
xchg
mov
test
jb
and
fdivr
ja
inc
dec
out
leave
xchg
inc
sub
jo
out
cltd
dec
bound
mov
scas
stos
aas
jge
or
leave
jecxz
pop
gs
leave
jnp
push
sub
mov
nop
icebp
inc
aad
or
out
mov
or
lret
mov
icebp
fisubl
xchg
arpl
out
lods
stos
nop
mov
or
fcmovne
test
js
lods
add
test
xchg
ror
cs
and
loopne
sbb
and
push
into
inc
dec
jnp
imulb
xor
mov
fnstsw
notl
sahf
fwait
xlat
rcrb
inc
adc
loop
mov
sub
in
mov
lcall
arpl
xlat
sahf
inc
movsb
dec
loope
popa
leave
xchg
inc
or
push
data16
xchg
sub
leave
das
in
add
mov
jmp
jmp
dec
icebp
pop
lcall
xor
sti
add
das
jb
sar
sub
xor
insl
mov
pop
std
xor
cmpsb
sbb
sub
mov
and
jge
lods
lods
cmp
jmp
push
add
addr16
sarb
mov
xchg
dec
insl
mov
cmp
sub
jb
psrlw
mov
jmp
lret
push
xor
push
stos
pop
lcall
mov
movsl
and
rcl
mov
jb
stos
dec
cmp
mov
or
in
aas
pop
mov
xchg
xor
fidivrs
add
inc
sub
bound
mov
stos
pusha
das
and
mov
std
mov
nop
sti
mov
push
lahf
cwtl
loopne
push
mov
and
inc
push
repnz
cmp
clc
xor
cwtl
fdivrl
sbb
loope
xor
add
lea
insl
jmp
movsl
mov
sbb
sbb
sbb
das
jbe
in
push
mov
imul
int
jae
jo
cmp
and
push
int
jp
jl
sahf
mov
nop
sar
and
ret
hlt
pop
and
stos
mov
cld
adc
scas
or
test
fcmovne
xor
pop
stos
aaa
mov
push
or
xchg
aam
push
fisubl
inc
sbb
fxch
xchg
xor
jns
outsl
lea
adc
inc
lea
push
clc
xchg
pop
ja
loop
ss
fdivrl
mov
ret
gs
in
mov
clc
mov
jno
fcmove
lea
movsb
or
cmp
or
adc
les
inc
les
std
test
mov
lock
dec
movsl
mov
aas
mov
mov
cmp
clc
jl
enter
mov
xchg
pop
mov
gs
pop
int
incb
jecxz
mov
or
mov
mov
jle
push
pop
add
mov
jecxz
pop
mov
repz
adc
dec
mov
xor
add
or
sbb
xor
sub
mov
jp
dec
out
and
int
or
mov
jnp
xchg
lods
sub
sbb
cld
and
rcrb
gs
push
fsubrs
pushf
lret
in
shrb
mov
popf
pop
dec
arpl
cld
xchg
mov
dec
push
out
sub
mov
and
pop
scas
popf
push
mov
movsl
leave
xchg
inc
into
or
push
sti
push
sub
lods
xchg
push
xor
mov
mov
sub
pop
adc
jb
cmp
pushf
add
pop
les
fldcw
sub
mov
mov
inc
mov
inc
addb
insb
mov
lods
mov
mov
rcr
dec
or
push
bound
cmpsl
std
push
xor
stos
or
ljmp
push
inc
push
jg
mov
imulb
ret
pop
dec
cltd
imul
cltd
pushf
or
xlat
aam
mov
mov
sbb
adc
jmp
xchg
repz
les
ret
orb
and
fdivr
arpl
xor
mov
std
sbb
mov
lahf
dec
ds
mov
mov
mov
cmp
cmp
outsl
jecxz
inc
imul
xchg
push
inc
push
inc
inc
inc
push
out
call
clc
and
cmp
loope
orl
xor
lock
jnp
pushl
push
cwtl
jge
dec
mov
add
faddl
loop
lock
mov
mov
cmp
lahf
and
out
pop
ficompl
stos
data16
scas
inc
add
adc
pushf
icebp
xchg
std
xor
or
xor
aaa
adc
fcompl
pop
int3
jns
adc
sbb
call
push
add
adc
add
pop
jnp
sub
shr
int
jnp
test
push
nop
jle
lock
mov
pushf
and
sbb
lds
adc
pop
notb
inc
push
ljmp
iret
div
mov
sbb
adc
and
mov
and
call
cmp
and
or
les
mov
cmp
mov
stc
sub
pop
mov
cli
fwait
pop
leave
stos
inc
aam
cmp
rcll
shlb
lods
adc
outsl
stc
inc
lods
pop
jb
pop
insb
xor
sub
outsb
cmp
mov
popa
pop
inc
push
sbb
in
push
xchg
mov
cmpsl
leave
inc
adc
inc
cmpsb
stos
xchg
ljmp
and
lret
into
sbb
aaa
in
sbb
call
dec
and
add
xor
out
out
aam
mov
pop
lods
cmp
mov
xor
stos
rclb
or
pop
jmp
jp
arpl
push
adc
lds
imul
cli
cmovs
sbb
cmpsb
insb
jl
outsb
xchg
inc
test
sub
mov
aaa
lods
xorl
lcall
or
lods
xchg
mov
mov
push
ret
les
jno
movsb
add
shrb
test
leave
pop
push
sub
cs
out
pushf
cli
shll
push
cmp
loope
xchg
mov
sub
jle
es
dec
xchg
cwtl
pushl
cmpl
pop
repnz
lea
loope
jae
lock
fisubl
cmp
testb
sahf
ja
test
and
into
je
push
xchg
push
fisubrs
mov
aas
push
add
inc
xchg
xchg
xor
xor
cmp
ljmp
out
jns
mov
cld
mov
pop
es
aam
leave
mov
xor
lods
subl
or
xchg
or
stos
loop
mov
insl
rorl
into
xchg
xchg
cli
std
lret
add
dec
jne
scas
or
iret
dec
enter
pop
xchg
pusha
mov
dec
xchg
sub
xlat
mov
push
add
test
jl
xchg
daa
cltd
icebp
push
jmp
xor
cmc
jmp
test
and
xor
adc
or
into
loope
in
mov
in
sub
dec
fisttpl
rcrl
push
lret
sbb
add
das
repz
lea
mov
push
cmc
bound
mov
cmp
aaa
mov
je
icebp
adc
fdiv
in
or
mov
inc
mov
cmp
das
and
aad
sbb
sbb
das
pop
out
aad
mov
ja
cld
ficompl
aad
cmp
push
inc
fcomps
dec
mov
shlb
mov
xchg
fisubs
push
fbstp
pop
test
mov
les
fcmovnu
test
jmp
and
dec
sbb
adc
out
cmpsb
cmpsl
cmp
or
push
dec
arpl
lds
jb
icebp
mov
pop
add
shll
sub
imull
dec
or
imul
sbb
mov
mov
mov
pop
fcoml
fsubrs
or
dec
addr16
lods
dec
fwait
scas
icebp
mov
rorl
pushf
gs
push
fucomip
or
and
or
mov
arpl
or
jecxz
imul
push
movhps
sub
inc
call
mov
sub
adc
movsb
sbb
outsb
divl
mov
mov
cmp
aam
or
dec
rcll
mov
mov
pop
rcrb
and
scas
mov
add
cmp
pop
push
shrb
adc
push
cmp
push
jne
mov
adc
or
jb
or
fcoms
or
add
and
ss
ljmp
mov
scas
enter
mov
push
imul
leave
imul
mov
mov
stc
stc
mov
fcomip
xlat
sbb
cmp
xchg
shr
ja
xchg
mov
mov
push
push
jge
push
xchg
movsl
aad
jecxz
jo
adcb
mov
and
xchg
push
test
xchg
loope
inc
sbb
jne
mov
and
xchg
ss
push
repz
sbb
insb
xchg
insl
add
push
test
je,pn
imul
cmp
test
pop
push
data16
pop
lods
jbe
inc
cmpsl
xorl
leave
adc
fucom
mov
mov
dec
pop
mov
in
cwtl
fs
mov
or
xchg
outsl
sbb
jl
outsl
test
mov
cmp
lahf
pusha
lea
jl
xchg
or
mov
cmp
stos
nop
stos
aad
aaa
movnti
push
es
pop
push
sarl
stc
mov
push
push
addb
fsubrl
les
cmpsl
jl
push
adc
rclb
pop
pop
mov
xor
mov
insl
movsb
js
ds
adc
adc
jbe
and
dec
sbb
pop
outsb
sub
mov
sub
sbb
rcll
mov
lock
mov
add
inc
aaa
ljmpw
cmp
mov
mov
lods
std
leave
dec
sub
sbb
and
mov
xchg
test
or
mov
fsubs
bound
mov
jno
lods
imul
into
push
frstpm(287
mov
adc
cmp
dec
dec
movsl
pop
add
jno
scas
jecxz
cmp
push
xchg
cmpsl
push
lods
adc
mov
and
in
subl
xor
insb
popf
aad
dec
pop
test
scas
push
mov
push
or
adc
fidivl
xchg
fnstenv
add
or
mov
mov
ret
cltd
pushf
je
jle
ret
push
lcall
sbb
cmpsl
insl
dec
add
out
test
jb
mov
or
pop
aam
mov
imul
shlb
insb
pop
pushf
stos
jb
mov
push
or
out
out
fwait
subl
mov
push
jo
jge
ljmp
loop
mov
popf
outsl
cli
and
mov
add
in
mov
mov
bound
in
adc
test
je
cmpsb
lret
stc
and
mov
push
push
shrl
cmp
ds
jge
pop
in
es
in
cli
jb
arpl
lods
mov
dec
pop
push
call
rcrb
fiaddl
cld
fdivrs
into
test
mov
or
repnz
fnstenv
mov
xchg
sub
jp
popf
sbb
pop
pop
ja
push
lea
jbe
push
fcoms
xchg
aaa
xor
mov
mov
xor
not
and
xchg
cmpsl
insl
cwtl
cmpsl
rcl
jecxz
sub
adc
and
out
mov
cmpl
aad
into
mov
mov
mov
out
xchg
aam
mov
cmp
repz
push
out
adc
int3
mov
mov
outsl
push
push
mov
mov
out
rcrb
dec
adc
lods
daa
push
dec
inc
lahf
mov
adc
addr16
imul
xorl
stos
xchg
fmul
push
sbb
cmpsb
or
jno
cmp
pop
mov
xor
popf
jno
mov
in
jae
sub
and
mov
ret
lret
or
cmp
jns
shrb
push
adcb
loope
lahf
pop
lods
mov
pop
jle
adc
adc
lea
vpunpcklbw
addl
mov
arpl
cmc
jp
std
jne
frstor
fistpl
ret
lret
pusha
outsb
mov
dec
lcall
movsb
rcl
out
rorl
out
sahf
aam
sarl
fdivs
scas
xchg
sbb
sti
mov
enter
mov
fwait
loope
dec
mov
add
or
into
push
pop
fwait
ret
ret
xchg
out
jecxz
repnz
xlat
adc
roll
jmp
jmp
add
sbb
arpl
pop
inc
outsl
stos
xchg
xchg
bound
inc
and
imul
int3
jecxz
fsubrl
mov
adc
inc
movsl
frstor
xchg
ds
std
lahf
in
sub
cltd
mov
mov
lahf
fistpl
fcmovne
loopne
lcall
jge
adc
push
decl
popa
out
leave
loope
out
adc
mov
mov
lret
aam
clc
je
lock
mov
mov
cltd
jno
jle
inc
jbe
inc
int3
jecxz
testb
in
bound
dec
psubb
mov
icebp
stos
andl
fists
fwait
mov
push
lds
iret
inc
out
cmp
stos
ljmp
in
andl
les
imul
gs
les
das
add
dec
in
lds
outsb
sub
adc
mov
jg
dec
push
cmp
adc
jbe
lcall
jl
jb
fwait
out
fiaddl
push
repnz
mov
iret
pusha
and
data16
fnstenv
xor
in
hlt
mov
xchg
pop
push
cwtl
or
push
push
push
loop
out
sub
in
sbb
sbb
arpl
movsb
push
push
pop
or
sahf
and
push
pop
add
andl
ljmp
mov
fs
mov
pop
mov
inc
and
repnz
sub
fwait
xchg
xor
cs
sub
pop
push
dec
pop
imul
aas
push
mov
insb
jns
jge
pop
cltd
mov
push
inc
aaa
fnstcw
inc
sti
adc
mov
daa
gs
cli
push
outsl
or
jmp
test
add
add
push
inc
lcall
out
dec
sbb
ljmp
pop
ret
jp
add
cmpsb
aam
fidivrs
loopne
xor
jle
test
insb
leave
data16
out
ds
add
dec
and
xor
push
lea
lcall
sbb
adcl
pusha
repnz
cmpsb
test
pop
push
xchg
hlt
test
cltd
inc
lock
je
mov
jmp
mov
xchg
lahf
mov
push
rcll
dec
jns
aas
mov
test
adc
mov
lods
imul
vpcmpeqb
sahf
ds
loop
sbb
scas
and
notl
pop
fidivl
enter
stos
pop
and
stos
lods
sub
push
int3
repnz
add
cmp
push
cld
jo
lret
stc
addr16
cmp
movsl
add
mov
jmp
arpl
dec
xchg
dec
and
cltd
dec
pop
pop
add
loope
mov
stc
mov
add
mov
adc
cmc
cli
ljmp
ds
les
shll
jmp
or
mov
outsb
cs
jne
cld
mov
out
cmp
xor
sbb
call
add
sbb
pop
and
adc
push
outsb
or
xchg
insb
pop
lcall
movl
iret
lea
mov
sub
pop
cld
sub
mov
mov
pop
fldt
add
cld
outsb
adc
mov
shrb
test
mov
or
mov
dec
pop
sub
ror
adc
insl
fimuls
cld
sti
mov
push
jnp
test
lock
int3
jmp
jb
pusha
push
pop
mov
inc
insl
jae
stc
adc
in
fldenv
mov
jbe
insb
es
cmc
add
decb
and
gs
test
sahf
jmp
inc
jle
pmaxsw
pop
mov
dec
dec
adc
push
lahf
scas
test
xchg
mov
jg
test
icebp
cwtl
pop
push
negb
pop
adc
mov
dec
cmp
jns
lahf
mov
pop
inc
sbb
iret
outsb
sub
call
ftst
add
add
stc
rol
loope
push
jl
ss
imul
les
loopne
fsubl
push
inc
jae
into
mov
mov
mov
fisttpll
or
adc
mov
adc
leave
push
ljmp
pop
out
xor
jno
push
xor
stos
push
ljmp
xor
add
sub
fxch
rcll
mov
cmp
in
stos
stos
and
lods
inc
repnz
pop
jp
push
ret
xchg
sti
xor
cmpsl
or
xchg
add
mov
sbb
and
push
das
leave
inc
pop
mov
cmpsb
xchg
pop
mov
inc
in
sbb
fwait
mov
test
sub
stc
sbb
dec
or
lods
fisubs
aad
xor
lret
sub
fildl
in
adc
movsb
gs
jmp
mov
jae
push
stos
or
add
imul
stos
dec
mov
int
outsl
jge
or
inc
mov
sbb
push
iret
mov
gs
sub
push
cmp
leave
shrl
pop
cld
or
mov
ret
ljmp
imul
mov
test
cmp
sahf
dec
lock
lock
shrl
push
je
dec
popa
mov
xchg
nop
mov
pop
mov
lahf
in
fdivrs
ja
xchg
cmp
fcompl
sbbl
pop
out
mov
adc
lret
test
push
jnp
pop
sub
sahf
andb
sti
push
movsb
pop
jecxz
lret
xor
imul
dec
dec
into
fdivrl
jp
clc
clc
cmp
into
xor
xchg
inc
repz
fbld
push
fwait
dec
cmp
adc
aaa
cs
mov
rorl
push
lods
jb
movsb
sahf
xor
xchg
hlt
int3
fsubrl
inc
xchg
cmp
pop
sub
jb
scas
mulb
je
and
aad
repnz
jg
xlat
sbb
pop
out
mov
jb
pop
push
loop
sub
sub
or
mov
dec
rcr
loopne
jb
notl
add
imul
ja
stc
test
shrl
aaa
inc
scas
clc
std
jmp
inc
cmp
les
stos
mov
jp
mov
shl
mov
in
in
jo
and
xchg
push
ret
cld
sbb
fsub
hlt
imul
aad
jb
mov
fisttpl
sub
mov
insb
jnp
test
and
cmp
cmc
repz
nop
clc
jns
cmc
or
test
jb
xor
inc
sti
icebp
and
icebp
fsubrs
pop
es
lret
into
test
mov
dec
add
pop
arpl
ss
lahf
imul
shll
dec
xchg
or
out
xchg
aad
pand
xor
dec
xchg
pusha
int
fidivl
sbb
pop
mov
jg
movsl
and
inc
xchg
in
popa
addr16
insb
or
mov
pushl
cwtl
cmpsb
and
popf
fwait
inc
inc
xor
inc
jecxz
adc
out
movsb
aam
mov
and
ss
xor
loope
mov
shl
cmpsl
leave
pushf
sbb
pop
lahf
or
inc
cmp
out
aaa
icebp
enter
sti
pushf
and
imul
push
xlat
aaa
clc
loopne
les
cmpsb
xorb
sbb
enter
std
add
inc
mov
push
jns
sbb
cmp
ds
cld
out
outsl
sbb
mov
das
es
and
mov
mov
jle
jbe
enter
clc
fidivl
rclb
jbe
xchg
mov
push
ja,pn
stos
sub
hlt
mov
mov
test
or
pop
xor
adc
push
sbb
sbb
pop
mov
and
sbb
jle
test
popl
mov
push
test
sbb
cltd
dec
mov
jge
mov
mov
push
xor
lock
out
sbb
test
jno
cmp
pop
jno
xor
aam
sbb
push
push
push
idivl
ret
dec
lods
std
mov
imul
call
int
xchg
add
push
mov
lret
outsb
movsl
cwtl
lret
addr16
push
fcos
dec
shr
pop
and
ret
ss
popa
in
mov
lock
arpl
dec
call
cmp
gs
xchg
inc
push
sahf
sbb
lret
rol
mov
addr16
and
test
adc
jbe
std
out
aaa
mov
xchg
roll
nop
ss
in
adc
pop
xchg
sbb
mov
int3
pusha
ret
sub
mov
in
jae
add
bound
and
cmp
dec
inc
cmpsb
mov
sbb
rorb
leave
lock
addr16
loop
add
push
test
mov
or
and
push
cwtl
pop
into
jns
cmp
fdivl
inc
loopne
test
mov
sbb
or
cmc
dec
ss
in
ss
lea
mov
xor
add
pop
bound
cmp
mov
leave
pushl
loop
mov
pop
fsubr
out
dec
sub
add
or
aam
xchg
xchg
cmc
daa
jae
outsl
add
ss
cmp
adcl
out
inc
mov
ljmp
xor
int3
inc
aad
sbb
sub
std
jg
mov
out
movsl
xchg
mov
in
sbb
cmp
gs
in
mov
sub
mov
adc
xchg
cmc
fisubrl
sub
push
adc
mov
mov
hlt
cmp
outsl
stc
popf
movsb
sbb
push
lcall
movsl
test
mov
jecxz
fcoms
pop
stos
leave
clc
in
inc
clc
test
fwait
push
pusha
mov
aad
imul
rclb
push
orb
repnz
bound
rorb
in
push
push
repnz
add
popf
in
push
mov
jmp
xor
stos
push
inc
lahf
jne
jp
pop
dec
xor
ljmp
mov
push
jg
mov
sub
sahf
shrb
bound
adc
xchg
jmp
pop
xor
mov
jbe
daa
je
jb
cmpsl
jle
test
les
pusha
xchg
sbb
xor
out
cmc
xchg
pop
mov
lret
jno
in
sub
push
pop
imul
jo
xor
sbb
iret
xor
jns
jno
test
fists
imul
icebp
or
popf
and
dec
sbb
mov
or
repnz
push
xchg
repnz
pop
shlb
fsubs
mov
outsl
and
or
cmp
in
push
xlat
mov
test
pushf
xchg
ret
dec
cmp
fwait
xor
sub
push
jns
adc
fistpl
cli
sbb
out
fisubrs
shll
out
jle
hlt
push
inc
ja
mov
movsl
in
sbb
mov
out
push
inc
cld
ds
pop
imul
je
lret
dec
into
xor
rcll
cmpsb
test
sub
rorb
push
imul
movsb
lds
and
pushf
bnd
icebp
add
ret
mov
pop
cmp
test
mov
cmp
sbbl
inc
in
or
lcall
lods
stos
pop
out
push
cld
push
dec
dec
add
adc
jne
xor
sti
push
lret
pop
xchg
cmpsl
inc
cmpl
fidivl
or
or
push
out
sub
js
fildll
repz
push
jae
loope
jl
xlat
mov
add
add
clc
enter
popf
jp
mov
cmp
mov
pop
jge
inc
pop
push
sbb
pop
cs
mov
fs
out
sets
jmp
push
jmp
or
aaa
inc
xchg
xor
jne
xor
cmp
or
enter
sub
das
mov
add
shrl
cmp
sbb
in
xchg
cli
lret
mov
xor
ljmp
or
or
rolb
push
mov
lds
jno
mov
jge
jns
repz
aad
jbe
in
movsl
pop
lret
fmulp
adc
outsb
pusha
div
mov
xchg
pop
sahf
cwtl
cli
or
fmull
inc
bound
and
ja
pop
dec
jmp
pop
and
pop
fnstenv
push
shll
xchg
rclb
xchg
loope
dec
mov
lret
stc
add
int
adc
jmp
jo
imul
lds
or
fcoml
rcrb
cmp
popf
jmp
out
rclb
int
push
push
add
ja
sbb
sbb
mov
cmp
ja
and
movsb
mov
adc
shl
inc
dec
mov
xchg
push
nop
jbe
mov
push
mov
mov
sti
insb
inc
inc
fldcw
movsb
dec
push
addl
aam
ret
push
jl
lea
pop
test
and
fidivrs
movsb
inc
lea
inc
pop
cmp
into
pop
ds
xchg
mov
jo
imulb
iret
push
pop
and
pop
jg
insb
xor
dec
push
mov
jp
inc
int3
jle
cwtl
mov
cli
mov
stos
js
mov
shrl
adc
xor
xchg
mov
sub
xchg
dec
pop
sbb
adc
lock
mov
cmp
inc
mov
xchg
nop
lahf
pop
mov
sbb
fisubs
out
inc
rcl
cmpsb
bound
sub
das
fiaddl
mov
xchg
adc
mov
test
mov
sbb
addr16
and
testl
pop
aaa
mov
xlat
stos
out
outsl
aad
or
push
dec
and
ljmp
mov
cmp
cs
jge
cmp
xchg
mov
jae
push
imul
int
mov
imul
adc
cli
cmc
arpl
mov
add
add
cmpsb
xor
xchg
sbb
pop
pop
or
add
fimuls
iret
add
sti
aad
sub
or
popa
xorl
sahf
pop
or
movsb
ret
mov
xchg
and
mov
scas
subl
pop
push
lcall
sbb
and
test
inc
inc
inc
or
or
scas
dec
jl
outsb
out
mov
nop
out
fnstsw
int3
push
call
rcll
sub
and
fidivrl
xor
lcall
mov
mov
sbb
push
ret
xchg
sbb
out
pop
dec
addr16
fdivs
cmpsl
dec
rorl
icebp
fcmovnb
mov
arpl
push
fnstsw
les
pop
out
movsl
cmp
push
jmp
jb
mov
inc
pop
mov
lock
loope
xor
lds
cwtl
mov
ss
aas
sub
cmp
lret
vldmxcsr
mov
bound
lock
jb
data16
pop
lahf
cmc
dec
rorb
sub
pop
cmpsb
adc
inc
fsubrs
or
mov
pop
sbb
in
stos
xchg
cmp
mov
mov
add
in
or
cmp
mov
inc
mov
sbb
into
add
call
pusha
cld
and
mov
push
sahf
loop
sub
and
mull
mov
sub
xlat
leave
mov
cmp
xor
xchg
pop
jge
cmp
ljmp
jle
sbb
out
fmull
push
shlb
shlb
mov
jl
movsb
ds
xor
lock
mov
out
popf
stos
dec
sbb
shll
inc
lods
rcrb
das
aam
mov
out
mov
push
test
push
int3
pop
inc
pop
inc
in
in
add
ds
scas
sbb
hlt
repz
loopne
jbe
loopne
loope
adc
js
dec
ja
cmpsl
mov
inc
xchg
push
les
push
jnp
add
dec
add
push
nop
inc
sbb
nop
fnstenv
adc
mov
and
push
xchg
xchg
dec
pop
xchg
repz
mov
cmp
and
pop
leave
or
repnz
cmpb
lds
adc
mov
out
int3
mov
mov
sbb
ljmp
xchg
cmp
stc
mov
sub
mov
hlt
push
pop
movsb
imul
dec
adc
lahf
arpl
xor
dec
xchg
mov
loope
adc
int3
stos
xor
or
or
jmp
lods
push
adc
arpl
into
cmp
les
in
jge
or
pop
lods
mov
lea
mov
out
push
addb
or
cmpsl
mov
xor
inc
sbb
fiaddl
je
cwtl
fldcw
cmp
push
rcrb
sbb
cmpsb
add
mov
inc
pop
xchg
in
outsb
aas
add
jecxz
sub
xor
mov
adc
mov
lret
mov
push
icebp
sub
cmp
cmpsb
mov
push
icebp
jg
bound
mov
icebp
imul
cwtl
aas
dec
popf
nop
cmp
push
rcl
les
dec
testl
and
sti
out
inc
ljmp
shll
mov
jp
idiv
xchg
and
sub
pop
pop
sbb
or
or
adc
dec
or
int
pop
arpl
xchg
jge
lea
lock
out
dec
lahf
push
test
sub
mov
sub
mov
or
push
imul
cmp
jno
sub
inc
es
nop
cwtl
stc
into
js
cmp
inc
scas
lret
mov
ret
cmp
xchg
cmp
scas
ds
sub
into
cs
loopne
jae
repz
xor
and
inc
jmp
cmpsl
das
add
sarl
ja
gs
sub
insl
dec
out
out
dec
mov
stos
inc
xor
push
sbb
repnz
or
inc
pop
loope
test
xchg
inc
ret
pop
mov
jg
icebp
adc
ss
jne
xchg
jbe
pop
push
pop
jbe
js
add
mov
sub
scas
mov
pop
lods
mov
out
mov
mov
cltd
and
scas
pop
es
cmp
test
mov
mov
in
stc
ljmp
cmp
or
mov
xchg
in
push
cmpb
or
jp
shrl
cmp
aaa
mov
sbb
mov
inc
call
mov
fcoml
mov
loope
dec
mov
inc
xor
or
xchg
dec
ret
mov
into
jae
addr16
add
cld
call
jbe
pop
in
or
orl
mov
jl
push
cmpsb
imulb
jno
jb
cmpsb
divl
mov
out
sbb
mov
in
add
pop
mov
sub
dec
pop
xor
lret
mov
pop
lcall
or
lcall
mov
jg
stos
incl
test
enter
xor
ret
in
ja
rep
inc
push
scas
enter
out
cmp
pop
subl
mov
xchg
sub
pop
push
jp
xchg
push
sbb
mov
dec
stc
out
jo
loopne
mov
pop
inc
mov
jne
sub
repz
pop
add
mov
out
stos
and
pop
cmp
in
cltd
and
in
push
loope
push
lcall
insl
por
cmpl
incb
dec
popf
popa
pusha
xor
icebp
pop
incb
loopne
adc
ljmp
imul
cltd
iret
mov
sbb
and
ljmp
mov
cs
je
mov
mov
and
add
xchg
lahf
rorb
xchg
in
mov
or
adcl
lahf
and
or
lods
cmpsb
lret
stc
test
adc
add
lods
add
and
or
imul
movsl
xchg
movsl
push
push
add
out
insb
dec
push
dec
cli
pop
jno
fstcw
out
sbb
in
sub
repnz
push
push
mov
dec
jo
pop
stc
sbb
dec
sti
or
pop
inc
imul
inc
stc
push
movsl
das
mov
repnz
sbb
pusha
inc
mov
pop
sbb
mov
jmp
enter
data16
push
lret
xor
jmp
fldcw
stc
sbb
and
add
shll
mov
push
push
dec
lods
push
into
lock
outsb
outsb
and
add
fdivrs
shll
in
jne
aad
movsb
addr16
iret
lcall
ss
std
xor
add
movsl
sarb
push
adc
jo
lods
outsb
cmp
lahf
int
loope
jno
lods
sti
add
inc
push
das
inc
jmp
xchg
das
sbb
std
rorl
cmp
xlat
adc
test
cmp
paddsw
lcall
test
or
test
aas
jb
sub
sbb
lcall
es
jp
stc
adc
int
dec
sahf
sahf
pusha
popf
mov
ja
pop
stos
stos
cmp
jg
push
lods
jne
push
pop
test
popf
mov
jo
adc
lods
sbb
movd
add
hlt
dec
stos
and
negl
stc
inc
call
mov
lret
shll
mov
imul
repz
or
rcrb
sbb
jle
divb
mov
js
jne
adc
imul
andl
sti
ret
push
rolb
pop
aaa
sbb
lock
lea
ja
mov
inc
imul
mov
popa
pop
push
loopne
pop
ljmp
xor
jb
inc
push
or
dec
lret
outsb
es
outsl
adc
test
scas
call
adc
sub
aas
fistl
shll
xchg
out
xor
nop
pop
mov
pop
test
mov
mov
or
xor
test
dec
insl
add
hlt
lods
pop
inc
fsubs
enter
sar
adc
pop
ret
jnp
sub
test
out
int
enter
jb
aam
inc
rcl
int3
int
jbe
xor
sbb
orl
add
cmp
outsb
ss
fsubrp
in
ret
scas
fs
fmull
notb
jecxz
adc
es
and
lock
or
ljmp
jo
mov
inc
sbb
stos
mov
push
xor
loop
xchg
push
jns
and
sbb
pop
mov
jle
pop
sbb
add
and
xchg
and
mov
dec
and
jb
loope
and
adc
sbb
insb
daa
pop
pushf
out
xchg
call
inc
jne
sub
and
es
pop
add
sub
pop
mov
cmp
xor
adc
sahf
pusha
or
mov
push
mov
scas
stos
mov
pop
mov
cmpsb
loopne
sub
adc
adc
mov
pushf
push
xchg
rol
mov
loopne
std
adc
adc
hlt
out
stos
das
movsb
das
mov
push
xor
lret
jne
push
sub
pop
push
sti
imul
call
sub
sahf
cmp
dec
sbb
test
js
jnp
mov
dec
inc
push
test
jbe
sub
loopne
popf
int
sbb
adc
subl
fwait
lds
movsb
xchg
es
mov
roll
int3
fldl
cmp
je
jmp
dec
add
mov
mov
leave
mov
jl
sbb
sub
push
imul
pop
lldt
inc
cmpsb
scas
test
mov
ret
jae
ret
cli
loope
std
adc
or
nop
ret
daa
jnp
push
cmc
dec
popl
call
imul
cmc
repz
lods
pusha
sbb
sub
addr16
push
fiadds
out
hlt
or
nop
and
mov
mov
lds
adc
scas
xchg
cmp
cwtl
jae
cmpsl
xor
push
repnz
lahf
inc
dec
das
jecxz
and
je
mov
or
xchg
xchg
ja
cmp
pop
pop
fwait
cmp
icebp
xchg
mov
jecxz
cmp
cmpsb
or
pusha
js
dec
jl
ljmp
sub
scas
test
inc
nop
dec
fsubs
popf
outsb
xor
xchg
cld
and
jae
sbb
mov
xchg
mov
or
xor
push
xchg
push
popf
stos
xor
mov
loope
push
xor
ss
add
fildl
add
ss
sbb
push
jg
jno
cld
push
inc
push
loop
call
adc
setl
mov
xor
mov
or
jp
push
jns
in
xchg
push
cmp
test
sub
and
jl
mov
in
sbb
push
cwtl
lea
adc
ja
call
inc
dec
fdivrs
inc
jnp
adc
rcr
adc
inc
fnstsw
es
je
aad
push
mov
mov
mov
pop
dec
pop
mov
lret
lret
lret
add
movsl
mov
stc
rcll
jo
xchg
ss
xchg
ftst
cld
scas
dec
mov
xchg
fisttpll
cmp
xchg
pop
xchg
clc
je
xchg
mov
cwtl
sahf
mov
or
mov
daa
ja
aam
or
inc
dec
pop
xchg
xor
jl
ret
dec
push
sub
rorb
and
bound
lret
mov
pusha
or
mov
fs
dec
dec
xchg
xor
pop
push
pop
loop,pt
dec
jecxz
mov
inc
dec
xchg
mov
test
pushf
insb
pusha
jmp
mov
gs
push
sub
cli
dec
push
inc
xlat
stos
or
outsl
sub
shll
scas
sbb
mov
mov
test
cmpb
test
rcr
std
and
cltd
fidivs
dec
mov
push
loop
insl
pop
jl
sub
ret
ljmp
adc
lret
insl
pop
adc
cwtl
cmp
adc
scas
sub
inc
and
jb
sub
insb
call
sbb
ljmp
xor
xor
daa
cltd
dec
popf
xor
adc
push
xor
popf
jge
mov
movsb
and
ret
add
dec
xlat
pop
lock
pusha
jo
lahf
add
popa
xchg
mov
adc
in
add
insw
movsl
jge
rcll
mov
or
popa
mov
add
cmpsb
sbb
mov
clc
fidivl
fidivl
and
std
fs
popa
scas
sbb
pop
cmp
sbb
mov
mov
stos
xchg
dec
dec
xchg
lret
xchg
movsl
movsb
push
adc
repz
lods
daa
pop
ret
fst
inc
mov
pop
out
adc
push
sbb
into
mov
inc
mov
das
repz
ja
xchg
jp
pop
or
dec
xchg
dec
adcb
xor
loopne
daa
je
iret
lcall
idivl
iret
into
test
dec
loope
sub
rcrl
movsb
enter
sbb
sbb
sbb
in
inc
xchg
aaa
add
push
stc
cmpsb
sahf
ja
lret
adc
jl
jo
mov
pop
js
dec
pop
cs
jo
in
lret
pop
in
mov
faddl
jae
cmp
inc
pop
fwait
pop
std
into
add
movsl
ljmp
xor
ret
into
lcall
xchg
or
std
fsubrs
or
pop
call
inc
mov
sti
mov
pcmpgtb
xchg
xor
in
in
shl
add
insb
push
dec
pop
cmp
cmp
fwait
push
out
test
fs
test
cmpsl
out
jnp
movsb
inc
xchg
movsl
bound
cmp
sub
and
pop
fnstenv
and
inc
cmp
and
mov
cmpsl
pop
inc
xor
loopne
cltd
arpl
xchg
push
std
and
fs
mov
jmp
mov
xchg
dec
aad
mov
in
mov
push
scas
push
subb
pop
in
pop
sbb
ret
or
lods
mov
mov
push
scas
shll
add
js
in
jl
xchg
adc
fisttpl
xor
cmpsl
mov
cmp
clc
mov
xchg
repnz
insb
adc
out
sar
dec
sub
dec
xlat
inc
push
jle
cli
es
scas
jecxz
lcall
jae
mov
inc
das
rcll
add
add
and
mov
xchg
sbb
outsb
lahf
mov
movsl
and
and
hlt
test
inc
mov
mov
pop
iret
pop
lods
cltd
sub
add
pop
int3
and
xrelease
xchg
je
add
mov
int
jae
hlt
add
addr16
insb
sbb
in
lret
outsl
or
mov
pop
cmp
dec
push
je
xor
loop
cmpsl
jecxz
sub
sbbb
outsb
add
adc
jo
jg
incl
add
cwtl
or
pop
jbe
scas
mov
bound
sahf
sbb
sub
into
adc
sub
lods
add
leave
rolb
add
in
xor
cmpsl
mov
adc
loopne
je
xchg
cltd
sub
mov
popf
lcall
inc
das
ret
dec
xchg
je
sub
or
cwtl
and
sbbb
inc
fwait
movb
iret
setg
lret
xchg
pop
add
xchg
jge
mov
pushf
cwtl
and
shl
lret
sbb
adc
xchg
mov
mov
lret
addb
mov
sti
movsb
in
mov
push
push
arpl
insb
add
cmp
add
lods
cmp
or
les
jle
pop
pop
sub
mov
sbb
cmp
mov
mov
push
ret
decb
sti
mov
sbb
adc
inc
cmp
insb
insl
je
cmp
push
pop
or
je
call
in
add
outsl
xlat
mov
push
sub
adc
adc
jge
cwtl
fidivrs
cmp
inc
stos
cli
sub
sub
aad
cmc
scas
xlat
pop
push
scas
jg
mov
jb
test
xor
repnz
arpl
push
lock
adc
add
mov
ljmp
and
sbb
adc
pop
lds
mov
aas
cltd
cmp
scas
outsb
mov
push
jmp
sbb
daa
sub
sub
jbe
add
sub
inc
fs
cltd
xchg
adc
arpl
add
arpl
jecxz
push
jmp
mov
xor
int3
imulb
mov
imul
shlb
xchg
adc
jl
mov
jne
cmp
fldlg2
pop
lahf
mov
pop
xchg
mov
lcall
cli
vmovss
js
dec
jle
mov
sti
sarl
and
mov
iret
addr16
test
repnz
xor
mov
rcll
pop
mov
sbb
ficompl
jp
das
in
lret
xchg
push
scas
jecxz
aam
arpl
pusha
add
pop
mov
sbb
cmpsl
mov
arpl
push
fucomi
aas
filds
mov
ss
push
dec
pop
in
sbb
hlt
mov
xchg
inc
dec
add
mov
pop
push
xor
aad
lods
aam
adc
shlb
int
pop
push
or
shlb
xchg
out
mov
jne
loope
mov
or
inc
adc
and
lods
sub
mov
adc
dec
and
leave
js
les
fisttpll
int
inc
mov
dec
in
mov
mull
jp
cwtl
xor
inc
enter
hlt
mov
pop
std
or
mov
sbb
popf
push
jmp
scas
or
rcll
lahf
add
lret
pop
lret
inc
jg
addr16
lret
sub
mov
jp
cmpsb
add
loope
jg
insl
push
push
push
stc
inc
or
lock
and
cwtl
pop
pop
mov
xorl
gs
insl
test
call
insb
cmp
mov
mov
es
xchg
flds
xchg
in
fldt
imul
popf
xchg
cli
das
dec
pop
out
pushf
push
orb
jp
pop
repnz
xchg
movsb
sar
in
xor
cmpsl
bound
pop
popa
mov
mov
push
mov
pop
ja
daa
rol
xor
sbb
lret
imul
cmp
imul
rorl
insb
mov
lods
xchg
pop
or
cmp
in
push
mov
adc
stos
mov
dec
leave
aaa
sbb
dec
push
mov
pop
mov
jp
xchg
mov
xchg
inc
cmp
add
push
add
adc
popf
push
or
add
mov
lods
out
cmc
lcall
and
mov
mov
pop
imul
mov
xor
pop
rcrl
jge,pn
daa
gs
outsl
subl
pop
shrl
ret
jnp
in
push
rcrb
je
lods
fistps
xchg
jnp
lock
or
mov
fbld
push
popa
pusha
xchg
and
lahf
das
mov
cmp
sub
xchg
push
scas
fdivrs
jecxz
jecxz
cmc
jp
jp
je
push
push
xchg
repnz
mov
enter
jns
dec
lahf
iret
movsb
ret
fdivl
push
jns
sbbl
popa
mov
and
out
jl
mov
sarb
mov
nop
or
js
mov
xchg
insl
xor
ja
aam
push
in
jo
cltd
scas
add
fucomi
scas
add
pop
pop
enter
mov
insb
popa
lock
jne
cltd
sub
xchg
sub
test
mov
mov
mov
xor
mov
pop
inc
mov
test
xor
and
mov
scas
incb
ljmp
pop
pop
movsl
xchg
fisubrl
xor
xchg
sbb
sahf
ret
push
and
sets
in
ss
jecxz
mov
and
sub
cmp
repnz
shlb
xor
mov
sub
int
or
xchg
les
scas
adc
inc
inc
sub
jae
push
repz
fisubl
out
mov
mov
fistpll
into
fwait
push
push
std
insl
leave
je
ja
rcll
fdivrl
rclb
popf
or
lds
das
xchg
mov
aam
inc
mov
mov
cmp
jp
enter
push
pop
in
cmpsl
das
daa
shl
inc
mov
imul
push
mov
incl
and
test
pop
jae
jmpw
int3
fisttpl
addl
mov
sbb
iret
dec
dec
and
mov
inc
cltd
repnz
lret
xchg
test
std
loope
push
rorb
sbb
inc
sub
movsl
and
push
stos
push
jae
inc
or
cmp
test
cld
sub
and
ret
pop
das
xor
xchg
int
test
pop
cwtl
das
lahf
testl
addr16
jae
mov
fidivrl
mov
inc
cmp
test
repnz
out
fcmovnbe
cltd
filds
xlat
mov
xchg
std
divb
push
push
push
cs
xor
faddl
jns
outsb
rorl
fisttpll
cmpsb
in
jp
mov
mov
xchg
jb
ds
popl
mov
inc
xor
dec
adc
cld
mov
inc
cmpsb
push
pop
xchg
jo
or
test
mov
or
add
mov
xor
jecxz
ret
out
push
xor
arpl
mov
das
inc
sbb
lock
pusha
adc
cld
ds
in
fmull
ds
or
lret
xchg
stos
fldt
shl
cmp
repnz
mov
mov
cli
sbb
lock
adc
icebp
cs
jae
dec
imul
push
pop
jl
jnp
addr16
push
aas
xor
push
jae
inc
lds
sub
or
imul
and
mov
rolb
in
daa
pop
xchg
sbb
pop
pushf
data16
push
jmp
jb
mov
out
xor
cli
cmp
out
push
and
imul
inc
mov
push
mov
out
adc
inc
jo
scas
sbb
dec
mov
stos
or
push
pop
cmpsl
data16
dec
jg
xlat
clc
mov
stc
insl
xchg
dec
pop
lahf
xor
adc
je
xor
inc
rcr
ret
int
fstpt
add
hlt
push
jno
ficomps
insb
jp
dec
mov
mov
xor
subb
pusha
iret
hlt
sti
loope
pop
dec
inc
pop
add
in
dec
xor
push
loope
rcr
and
jg
mov
faddl
xchg
adc
xchg
popa
aad
dec
mov
sub
pop
inc
test
nop/reserved
flds
sub
add
fisubrl
xchg
lods
arpl
add
mov
xlat
mov
adc
pop
and
test
mov
imul
es
xchg
xor
icebp
mov
mov
push
sub
mov
dec
push
out
into
and
addr16
push
shll
add
xchg
dec
cmp
popa
fisubs
pop
sub
inc
and
xchg
int3
into
add
inc
jne
js
mov
sub
repnz
xchg
mov
loope
outsb
jnp
sbb
pop
lahf
mov
fs
fimuls
shrl
in
sbb
and
aas
pop
nop
bnd
jmp
mov
fdivr
mov
mov
sbb
aam
mov
mov
int3
sub
addb
in
mov
sbb
fisttps
push
mov
mov
push
adc
adc
sub
daa
call
mov
mov
and
sub
icebp
pop
xlat
xchg
cmpsl
icebp
mov
jo
int3
mov
or
push
test
sub
loop
jnp
aaa
inc
ljmp
sahf
movsl
cmp
cmpsb
ficompl
and
xor
jmp
cbtw
aaa
mov
inc
pop
jp
jb
push
push
lea
out
shrb
inc
shl
in
popf
lods
ds
cmpsb
frstor
sub
or
cmp
add
xchg
loop
outsb
inc
add
lahf
lret
imul
pop
hlt
pop
addr16
aad
fs
lea
sbb
insb
lock
hlt
xchg
sbb
jp
sbb
sbb
fldcw
mov
sbb
sub
imul
mov
xchg
clc
decl
in
movsb
lods
mov
mov
adc
sub
lods
nop
pop
dec
negb
ficoms
in
out
push
add
je
ds
xor
pop
daa
add
out
clc
push
xor
mov
pop
jge
pop
lcall
adc
jno
call
adc
lods
mov
pop
pop
xor
dec
pop
or
lods
push
movb
ljmp
aas
sbbb
jns
stos
loope
call
mov
sbb
out
inc
mov
cmp
xor
inc
mov
push
sub
repz
loop
mov
enter
cmp
lock
xor
loope
inc
into
int
dec
movsb
notl
add
fisubl
mov
mov
sub
mov
xchg
jl
cmpsl
or
decl
cmp
shlb
adc
or
mov
sub
mov
mov
and
push
mov
je
adc
sub
fxch
pop
inc
fisttpll
lods
xlat
aas
jp
pop
out
inc
nop
cmpsb
pop
arpl
cld
add
cmp
adc
je
enter
lds
sbbl
jecxz
bound
dec
cld
sbb
inc
popf
push
fs
xchg
push
inc
or
rep
add
loop
lret
xor
mov
lcall
aad
cmp
cmp
xchg
push
push
aaa
dec
jge
jge
xor
jne
push
sub
mov
jne
sub
mov
cmp
sub
fbld
pop
push
cmpxchg
mov
pop
repnz
add
dec
hlt
cs
ljmp
imull
adc
shrb
or
ret
jmp
adcl
and
ret
dec
into
bound
fs
xor
pop
sub
test
cmpsl
xchg
lods
mov
roll
stos
repz
insb
and
cmp
jo
cmp
jmp
nop
inc
cli
sbb
lea
insb
lret
push
test
mov
adc
adc
fwait
cmp
sbb
xlat
sub
imul
adc
out
stos
mov
push
sti
les
pop
mov
jo
lds
mov
sub
xchg
dec
and
push
push
mov
mov
mov
scas
rcll
dec
outsb
arpl
push
pop
outsl
push
sub
lea
mov
xor
or
mov
sub
js
dec
stc
and
ss
shlb
iret
mov
lret
addr16
adc
mov
sub
test
adc
xor
fwait
inc
ljmp
push
inc
mov
fcoml
xchg
popf
mov
je
push
jb
mov
cmpsb
sbb
mov
mov
mov
sub
shrb
imul
or
jne
lahf
pop
adc
pop
outsb
pop
movsb
loope
cmpl
outsb
mov
pop
addb
shl
pop
jns
subl
jns
testl
or
jo
adc
loope
or
fcoms
popf
mov
or
cltd
into
mov
rcr
xchg
mov
jnp
and
mov
into
fstl
cmp
nop
push
fwait
xchg
call
outsb
jecxz
push
push
xlat
adc
lock
mov
mov
movsb
outsl
sbb
inc
orl
jl
add
data16
out
push
add
aad
dec
lds
movsb
xlat
and
sbbl
aaa
dec
jmp
inc
stos
pop
nop
mov
dec
fwait
mov
pop
outsl
and
xchg
je
pop
xor
in
ret
sbb
and
and
sbb
pop
test
adc
pusha
shl
pop
aad
repnz
dec
sub
cld
push
inc
je
mov
enter
stos
fsubrs
sbb
xchg
jnp
jg
or
and
cwtl
adc
aad
lret
add
xchg
push
jbe
xor
xor
xchg
push
je
adc
in
in
and
push
loop
inc
cmpb
jg
rorl
sbb
sub
or
inc
in
stc
out
test
mov
mov
loope
aad
cmp
orl
push
mov
mov
repz
xor
aam
xchg
leave
inc
mov
pop
sti
iret
sti
mov
lea
mov
push
push
or
xor
jae
sub
mov
mov
loopne
jne
or
push
pop
mov
xlat
or
adc
aaa
cmp
cmpsb
addl
add
imul
and
mov
sbb
jp
fs
dec
hlt
mov
aaa
sbb
mov
adc
outsl
aaa
test
fldl
adc
fildl
mov
xchg
xchg
sub
cmpsl
mov
mov
repz
imul
lods
pop
mov
adc
xor
cmp
scas
enter
xchg
enter
sbb
bnd
adc
out
xchg
push
add
test
lcall
fdivrl
mov
fidivl
cmp
orl
xchg
or
inc
or
sbb
pop
push
sub
fnstcw
pop
add
fisubrl
sbb
mov
add
push
jle
mov
daa
xchg
push
jbe
fbstp
jb
mov
mov
mov
mov
mov
repnz
jbe
pop
loopne
fwait
or
mov
dec
les
andl
push
or
sub
add
mov
add
push
xor
dec
rcll
pop
fildl
lret
fsts
shl
or
xor
mov
jmp
jge
cwtl
jne
xlat
cwtl
sub
push
lahf
mov
push
jb
data16
dec
scas
in
push
inc
fisttpll
popf
jg
xchg
or
adcl
mull
imul
xchg
inc
xchg
inc
test
jae
iret
push
out
stc
mov
sbb
clc
mov
mov
jns
leave
sbb
hlt
push
mov
ja
mov
push
aad
stc
xor
jno
dec
daa
inc
js
stos
aaa
stos
mov
mov
leave
icebp
inc
ss
test
inc
mov
cmp
adc
fwait
jl
jns
ret
jb
pop
out
std
mov
xchg
xchg
xor
inc
mov
sub
cmpsl
pop
jmp
push
cmp
es
inc
pop
mov
or
push
pop
pusha
jno
fildll
pop
xlat
jp
jb
roll
sub
repz
imul
or
xorb
mov
out
add
dec
je
and
dec
jbe
push
bound
cli
push
cltd
mov
xchg
mov
dec
pop
xchg
push
leave
sahf
rorb
pop
push
xchg
test
enter
mov
lock
int
mov
movsb
mov
sbb
mov
mov
ror
add
mov
pop
int3
rcrl
ret
loope
xchg
sbb
addb
or
mov
movsb
mov
jnp
push
clc
jne
insl
and
addr16
inc
sub
cmp
xchg
and
cmp
adc
xlat
scas
movsl
add
push
jb
rolb
scas
cwtl
pop
cmp
adc
sbb
outsl
mov
dec
sbb
xchg
cmp
inc
or
in
mov
mov
jge
mov
or
sbb
cmp
xorb
push
shl
jecxz
mov
ja
add
dec
push
jae
dec
das
insb
sahf
ret
xchg
pop
inc
adc
or
jmp
inc
jge
mov
sub
dec
cmp
xor
dec
mov
in
or
sub
pop
jle
or
inc
ret
xchg
cwtl
and
aam
or
sub
lret
ss
sti
addb
cmp
jne
dec
sbb
fistl
aas
pop
dec
cmp
and
add
icebp
js
pusha
fnsave
mov
cli
imul
sbb
gs
xchg
mov
sbb
cltd
repnz
repz
jne
jge
and
out
push
push
mov
notb
adc
xchg
int
in
lcall
fsts
das
andl
xor
xor
or
adc
and
inc
es
jmp
lock
xchg
push
adc
leave
in
and
ljmp
sub
or
mov
push
scas
jle
and
aad
aas
gs
mov
push
gs
mov
aam
scas
cmpsb
rcrl
negl
sti
in
pushf
cld
jno
pop
sub
je
push
xlat
inc
xchg
loope
or
pop
out
jge
xlat
cmp
es
inc
mov
popf
add
rol
xchg
mov
in
ret
lret
mov
cmp
subb
stos
and
adc
push
dec
fcomps
popf
lods
je
or
or
push
jae
dec
ret
test
mov
or
in
sub
mov
jmp
insb
sub
adc
popf
push
mov
int3
popf
pop
hlt
sbb
popa
roll
or
ss
dec
out
push
cs
insb
aaa
mov
adc
and
mov
pop
and
movsl
repz
xor
pop
test
push
xlat
inc
out
pusha
inc
and
add
fidivl
and
call
push
cld
and
outsb
pop
adc
into
lods
xorb
dec
iret
jle
cli
loope
in
mov
xor
inc
push
test
and
sbb
xchg
stos
icebp
outsb
mov
in
cmp
add
or
push
inc
and
push
sub
mov
das
xchg
in
pusha
jb
xchg
bound
xor
fcomip
mov
scas
ret
or
les
mov
jle
inc
shr
sti
pushf
inc
xchg
sahf
jge
xchg
jmp
inc
add
xchg
aas
pop
sbb
jmp
jmp
jl
xchg
sbb
lock
cmp
dec
movntps
or
mov
out
jmp
jl
idivb
xchg
adc
pop
test
xchg
jae
pop
test
cmp
lahf
mov
sbb
cmp
dec
lods
sub
lret
in
or
orl
stc
mov
mov
or
mov
or
ds
sub
xchg
out
dec
loope
cwtl
and
das
mov
adc
les
sub
in
jg
fidivrl
jno
movsb
or
push
ja
scas
movsb
int3
nop
loopne
aaa
mov
scas
push
pop
sub
inc
rorb
push
pop
js
mov
movsb
inc
sub
or
pop
pushf
aas
jge
mov
incb
sub
movsl
fcoms
add
jbe
popf
cmp
andb
xchg
lock
add
into
in
pop
dec
in
cmp
out
into
ret
adc
das
mov
mov
hlt
and
enter
insl
je
cmp
mov
sub
or
pop
inc
fdivrs
std
fs
xchg
jle
hlt
and
push
test
sbb
or
out
mov
cmpsb
out
xor
loopne
and
mov
repz
pop
stos
enter
repz
into
inc
outsl
fucomi
jns
push
out
pop
les
dec
clc
icebp
push
xlat
mov
andb
cmpsb
std
int
jns
lea
sub
fcoms
aad
mov
mov
xchg
dec
mov
loop
push
imul
jno
in
out
fcomi
cmpsl
xchg
jo
push
in
xchg
lcall
inc
jb
cmovne
xor
sub
push
cltd
push
shlb
cltd
dec
lcall
sahf
stos
loopne
jae
int3
sub
out
jp
adc
or
or
nop
int3
mov
adc
jmp
jl
movsl
fimuls
and
out
push
insl
cmp
mov
insl
jo
arpl
add
mov
movsb
pop
out
orl
cwtl
inc
test
fs
popl
xchg
jg
in
xchg
call
jno
xchg
adc
cld
jecxz
repz
std
push
mov
ret
cmp
jp
outsl
int3
push
clc
das
dec
hlt
cld
imul
ss
sbb
xor
sub
sub
fstl
mov
add
insl
sbb
std
lahf
mov
push
inc
cmpsl
jl
cmp
dec
or
jg
pop
push
popa
orb
or
push
mov
insl
add
insb
xor
js
push
mov
mov
push
push
cmc
fwait
xlat
xchg
jl
adc
mov
sarb
gs
mov
xor
jp
mov
or
repnz
mov
cmp
xchg
testl
jle
movsl
inc
outsw
mov
cmp
faddl
cmp
cmp
fsts
sub
fwait
cmpsb
insl
xlat
adc
mov
and
lods
mov
xchg
sbbl
dec
and
ja
lea
dec
mov
gs
into
mov
dec
inc
sbb
test
mov
sub
pop
mov
push
sahf
sub
les
lds
cwtl
lahf
xchg
mov
xor
loopne
mov
mov
aas
mov
inc
jb
mov
mov
mov
pop
in
mov
push
push
xchg
daa
lahf
adc
into
jns
jmp
push
rolb
sub
and
adc
or
inc
sti
das
cltd
lcall
mov
call
mov
out
fdivr
and
cwtl
dec
xor
pop
loopne
sbb
sbb
les
mov
xchg
ret
inc
mov
xchg
mov
cmpsb
loope
add
add
xchg
insb
push
push
mov
xor
and
jnp
push
test
std
fdivs
mov
gs
and
mov
test
mov
fsubl
lods
push
repz
mov
jmp
les
mov
sbb
gs
movsb
aad
cld
std
jo
jle
pop
xor
subb
pushf
inc
pushf
popa
subb
aam
mov
fcmovnbe
jmp
sarb
cmp
sti
jae
push
push
xor
jg,pn
cmc
push
xlat
sub
das
push
stc
pop
add
jbe
cmp
mov
loope
adc
dec
pop
xchg
ja
xor
inc
sub
test
data16
pop
stos
mov
fdivp
out
xor
sar
cltd
ret
dec
fstl
xor
clc
bnd
mov
cmp
lret
xchg
jno
outsb
outsl
sti
fnop
inc
test
les
sbb
pop
lea
add
das
movsb
sti
adc
mov
inc
shlb
adc
cli
int3
cmp
loope
sub
stc
nop
pop
dec
xchg
ficomps
inc
shl
xor
lcall
inc
cmp
jg
or
mov
fsts
adc
pop
loopne
sbb
sbb
js
shr
sahf
lahf
mov
jne
mov
cs
enter
push
sbb
sbb
or
push
jno
cwtl
ret
lahf
sbb
into
or
scas
xchg
push
mov
ja
pop
push
xchg
test
and
adc
mov
xchg
jb
xlat
popa
nop
dec
jmp
inc
mov
dec
bnd
dec
lock
fistpll
lret
mov
xchg
pop
das
xchg
dec
into
and
fwait
rcrb
les
aaa
clc
mov
scas
cmp
inc
sbb
jl
arpl
sbb
cmp
clc
cmc
mov
popf
cmp
nop
mov
repnz
mov
pop
mov
test
push
sahf
dec
push
pop
fidivs
dec
push
cltd
dec
mov
mov
fistpl
mov
leave
inc
cmpl
fidivrl
pusha
and
add
jbe,pt
loope
cmp
xor
sti
adc
xchg
mov
push
fmull
das
jmp
dec
cld
test
addb
dec
or
ljmp
lahf
cmp
not
inc
scas
movsl
test
and
insl
dec
push
fdivrl
je
mov
mov
das
mov
fs
loope
sbb
lds
popa
jae
fildl
dec
add
call
mov
cmpb
sbb
in
dec
mov
cmpsl
cmpsb
jecxz
call
ljmp
addl
inc
js
fmuls
ret
sub
out
aam
xor
pop
pop
pop
es
jns
cmpl
inc
movsl
xor
sbb
and
sub
lahf
mov
lret
and
bound
xor
ja
arpl
fldcw
mov
inc
xchg
dec
repz
dec
push
popa
xchg
sbb
push
popl
sub
cwtl
cmp
aaa
push
adc
outsb
mov
cmp
test
jge
cmc
adc
in
cmp
cmc
mov
scas
cld
enter
cwtl
pop
inc
jns
mov
pop
cmpsb
adc
mov
pop
out
fsubrs
bound
ja
fnstenv
mov
mov
rcrb
iret
fdiv
add
sbb
aad
sbb
jge
xchg
jae
jl
cmpsl
outsb
sbb
mov
fwait
jbe
inc
stos
rol
add
int3
stos
sti
test
scas
out
mov
mov
outsl
int
cmp
sarl
int
lds
xchg
rclb
mov
daa
and
adc
mov
inc
ljmp
sbb
mov
int
cmpsb
cmpsl
mov
stos
add
fidivs
outsb
lret
sub
add
push
sbb
es
cmc
adc
fwait
jmp
stc
push
divb
dec
push
add
out
xor
in
jnp
dec
jp
loop
fst
mov
xchg
fisttpll
xor
icebp
aas
data16
push
jle
mov
cs
test
les
lock
inc
aaa
mov
ffreep
jne
data16
movsb
adc
xchg
and
sbb
adc
push
pop
ds
leave
dec
inc
dec
pop
adc
xchg
pop
dec
and
and
cmpsl
lds
insb
ret
cmp
pop
imul
mov
enter
mov
pop
xor
mov
fldl
hlt
stos
or
and
sub
lcall
jb
ds
fisttpll
loope
insl
outsb
push
cmp
jo
sbb
movsb
or
add
sbb
mov
movsb
int
out
out
orb
or
stos
mov
test
push
cltd
arpl
cwtl
push
lret
adc
insl
mov
pop
add
int3
fisttps
jo
fiadds
pop
xchg
xlat
dec
loope
push
mov
pop
adc
shlb
adc
cld
popa
loope
dec
cmp
inc
push
cmpsl
ficoml
cmp
xorb
pop
xorb
push
stos
in
xchg
pushf
pop
ds
xrelease
mov
rol
or
lcall
inc
jne
scas
mov
repz
or
dec
test
add
nop
push
jl
add
mov
pop
mov
sti
in
cmp
ficomps
push
orl
movsl
mov
std
mov
pop
or
mov
out
test
xchg
or
sar
into
fbld
out
dec
add
cmp
loop
adc
sbb
sahf
dec
insl
stos
jo
in
adc
cmp
and
subb
jne
or
sti
push
das
sahf
hlt
idiv
xchg
xor
jns
ja
lods
cmc
add
mov
popa
lea
push
cmc
cmc
mov
das
xchg
and
push
push
or
and
bound
call
shll
add
jnp
push
inc
jecxz
and
sub
lret
ss
xchg
sub
xchg
sbb
movsl
jg
pop
xchg
inc
mov
fnsave
dec
mov
mov
jnp
add
pushf
call
testl
int
loope
adcb
jp
daa
lock
rorb
fstps
insb
inc
inc
rol
test
or
sti
dec
adc
out
mov
je
enter
mov
jae
cmpsb
push
imul
stos
cli
dec
xchg
cli
je
gs
mov
xchg
stos
jecxz
jns
pop
imul
jae
fmuls
sbb
jae
mov
jmp
dec
push
pop
adc
dec
mov
out
pop
cwtl
xchg
arpl
xchg
cmp
jmp
sbb
cmpsl
mov
sbb
lods
inc
or
xor
cmp
adc
lret
or
in
inc
loope
add
push
roll
out
push
xchg
subb
mov
ja
test
xchg
fiadds
mov
mov
testb
cmp
stos
jne
sub
sahf
mov
cmp
out
xchg
pop
movl
jge
inc
xchg
push
push
cmp
jp
xor
mov
fdivl
dec
dec
ss
shl
cli
jae
jne
call
add
aam
repnz
in
mov
xchg
pusha
arpl
out
int
cwtl
out
lods
jae
pop
fdivl
mov
cmp
ret
mov
and
mov
push
cmp
inc
das
mov
xchg
addl
test
lods
jno
ficomps
pcmpeqb
adc
fstps
sub
and
or
fs
loope
test
push
stos
mov
icebp
add
lcall
loope
sbbb
inc
fdivrp
xchg
cmp
pop
jmp
inc
clc
ret
lock
pop
lods
mov
fcmovnbe
out
incl
jg
bound
sbb
clc
mov
mov
push
add
movsl
fstp
rclb
xchg
xchg
hlt
pop
sbb
xchg
xor
push
or
cmpb
stos
imul
push
div
dec
push
sbb
push
aas
mul
fstpt
clc
fldl
mov
notl
ds
ss
pop
nop
inc
cmp
dec
mov
clc
xchg
and
cld
pop
dec
inc
in
sbb
mov
push
push
ss
pushf
xor
das
sbb
push
ss
jecxz
cmp
xor
pop
cmp
mov
shl
push
dec
repnz
movsl
rcll
fwait
cwtl
mov
mov
sbb
pop
cli
cs
fisttpl
sub
and
pop
std
cmc
and
sahf
int3
xlat
imul
jae
dec
test
push
test
cltd
cld
and
dec
pop
jmp
or
mov
testb
js
movsl
mov
rorb
lcall
arpl
ss
imul
and
or
and
imul
out
lret
pushf
and
xchg
mov
jae
mov
gs
adc
mov
and
xor
jnp
mov
data16
jmp
in
shrb
jb
xor
mov
ret
inc
cwtl
ljmp
mov
inc
out
sbb
inc
add
je
movsl
pop
cli
push
adc
imul
mov
and
or
out
je
and
jne
and
push
push
test
lods
aaa
cmp
arpl
sbb
sbb
in
inc
xlat
inc
mov
xorl
andb
jmp
ret
dec
loop
sub
inc
outsb
push
out
or
push
shlb
sbb
push
push
pop
inc
sub
in
push
push
and
lock
jae
lock
inc
pushf
xor
sbb
mov
out
cmp
arpl
nop
arpl
xor
sbb
scas
xor
aas
and
jo
lods
bound
xor
pop
cmp
add
pushf
add
stos
std
add
mov
test
aad
loope
andb
data16
mov
and
add
add
sbb
ror
push
stos
test
push
out
cvtdq2ps
cld
popf
add
aaa
scas
int3
cmp
dec
scas
mov
fcomi
cmp
jno
mov
mul
lds
stos
out
mov
mov
jnp
xchg
xor
jmp
xchg
mov
dec
stos
sbb
push
ss
aas
std
push
mov
pop
mov
lret
cmpb
adc
mov
lret
cld
outsb
sbb
hlt
jae
hlt
insb
dec
lods
adc
sub
sbb
fdivrl
fsubrs
mov
adc
loopne
or
xchg
xchg
dec
add
mov
mov
aas
rcrb
jge
mov
cmpsl
and
dec
lea
int
mull
sahf
jns
std
add
aas
aad
mov
icebp
mov
xchg
cmp
or
sbb
jmp
aad
aaa
and
and
sbb
addr16
jle
fisubrl
shrb
cmc
das
scas
nop
xor
jbe
mov
pusha
push
fs
jne
call
mov
jne
lret
push
sbb
shr
popl
je
int3
mov
jnp
cmpsl
and
test
mov
add
mov
push
dec
sbb
outsb
cmp
sub
push
xorl
arpl
ja
mov
mov
aaa
sub
aaa
ret
out
xorb
or
out
mov
push
mov
mov
lcall
mov
mov
out
fcmove
frstor
sub
rcll
jnp
xor
loopne
sub
call
pop
movsb
xchg
es
cli
mov
mov
inc
loop
sbb
mov
mov
cmpsb
add
dec
sbbb
or
aas
ljmp
outsb
daa
sbb
cmp
xchg
out
mov
rcrl
int3
divl
js
lods
lea
adc
and
cld
pop
gs
stos
push
push
xor
adc
cmc
lret
lcall
or
iret
adc
outsl
mov
inc
mov
inc
lret
mov
adc
mov
sub
jne
lcall
xchg
sbb
pop
cmpsl
icebp
rol
xlat
pop
and
fbstp
test
in
loope
popa
loopne
stos
nop
pushf
cmp
fcom
mov
jae
xor
push
ret
test
adc
adc
stos
adc
lahf
in
inc
add
pusha
imull
mov
repz
sub
outsb
xchg
pop
stos
push
stc
mov
decb
fidivl
cmp
outsl
cmp
add
jae
movsl
push
imul
fidivrl
push
or
mov
sbb
jnp
pop
jecxz
in
loope
pcmpeqd
and
addb
loope
adc
cmp
in
jp
test
adc
jl
ss
test
pop
bnd
adc
sbb
loope
or
add
pop
cltd
test
mov
add
divsd
push
scas
push
fidivs
cmpsl
dec
daa
das
add
out
subb
mov
mov
mov
or
or
pop
pop
out
dec
jb
pop
movsb
fcmovb
mov
push
sar
popa
cmp
faddl
push
popf
les
aas
cmp
mov
add
outsb
jle
lcall
push
imul
xchg
adcl
xchg
je
sub
les
push
out
or
jge
bnd
rcrl
rorl
xlat
mov
stos
adc
push
in
pop
push
enter
js
int3
jmp
sub
or
or
pop
mov
lahf
jne
fadds
movsl
mov
dec
xchg
adc
int
ret
mov
or
cmpsl
push
adc
lret
or
out
or
enter
inc
in
std
ret
xchg
mov
lods
es
xor
idivb
mov
fdivrs
fwait
out
mov
pushf
jb
jp
imul
loopne
mull
xchg
adcb
cmp
mov
mov
sbb
mov
dec
jb
mov
mov
or
popf
sti
push
cmp
jne
in
movsl
lahf
add
mov
xrelease
sbbl
mov
jo
dec
hlt
cmp
cs
sub
jecxz
jp
repz
lods
gs
or
popa
rcrl
add
pop
push
jbe
push
cli
sti
sub
or
mov
mov
sbb
xchg
test
rcl
int3
mov
sub
fidivrl
or
loope
xchg
jge
aas
sbb
pop
push
mov
jo
adc
dec
in
sbb
xlat
mov
out
pusha
call
sub
dec
out
enter
pop
sarb
pop
push
sub
divb
test
sahf
iret
mov
push
mov
inc
aas
popf
jl
push
sbb
lds
jmp
gs
dec
push
xchg
push
test
mov
je
out
dec
sbb
mov
das
fnstsw
cmp
pusha
aaa
sbb
fwait
mov
xchg
jge
push
push
adc
cmp
in
sbb
or
sbb
inc
loop
popa
push
inc
jl
pop
mov
sarb
xchg
loope
adc
aad
fcmovb
jg
jnp
cmp
int
into
jns
sbb
mov
test
xchg
aad
pop
movsb
add
jne
and
fldt
aad
cmpsb
or
es
negl
loop
mov
jg
es
adc
test
in
jo
and
mov
push
jbe
cmp
inc
shll
mov
stos
mov
in
pop
jae
mov
in
jo
cld
int
sub
lds
mov
cmp
xchg
fcmovbe
cmpsl
mov
ret
add
mov
es
adc
pushf
mulb
repz
iret
mov
mov
gs
movsb
and
xchg
mov
shrl
adc
xlat
mov
or
xlat
lods
adc
adc
loop
imul
jno
jno
xchg
sub
lea
add
adc
pop
sahf
ds
adcb
sar
int
mov
frstor
jg
mov
or
rclb
push
sbb
movsl
ds
push
sub
cld
in
stos
or
loopne
pop
sbb
movsl
mov
repnz
add
xor
dec
mov
psubsw
dec
cmp
add
idiv
test
adc
andb
stc
mov
jl
fcomp
in
fdivl
fisubs
js
aas
mov
xchg
adc
sub
inc
pushf
ja
dec
insb
sub
in
lea
sti
mov
push
ror
inc
or
jle
mov
pop
inc
in
push
sub
xchg
rclb
adc
inc
rorb
jnp
sub
in
jp
rcrb
fwait
push
pop
js
cmc
mov
or
addr16
sbb
sub
or
sub
mov
push
enter
cmp
jns
and
aam
cmp
pop
cmpsb
cmp
addr16
push
add
int
ret
lds
jge
scas
dec
std
ret
test
mov
cwtl
push
lods
shlb
xchg
test
adc
pusha
push
cs
inc
cmpb
imul
repz
nop
jmp
jmp
add
sahf
sub
mov
jge
fistps
xchg
addr16
and
cmp
adc
mov
cmp
jne
lds
les
and
mov
aas
fldt
aaa
cmpsb
dec
dec
fildll
cmpsl
push
inc
lods
movsb
in
sbb
push
cmp
stos
xchg
imul
jns
pushl
ss
hlt
in
push
adc
mov
fdivrl
lret
cmp
cmp
stc
loop
pop
push
jb
mov
sub
ret
insb
xor
xchg
inc
push
push
and
sub
repnz
mov
inc
cltd
imul
inc
pop
mov
outsb
pop
ret
pop
pusha
add
add
jmp
mov
test
lret
mov
je
mov
ret
adc
push
mov
mov
cmp
loop
fs
test
sub
push
xchg
push
mov
cmp
adc
add
inc
jmp
adc
cmpsb
aad
clc
xchg
jne
mov
es
mov
xchg
sub
xchg
call
imul
add
pandn
push
add
pop
xchg
in
loopne
stc
sub
cltd
cmpsl
js
fwait
dec
movsb
jle
addr16
mov
repnz
fnop
in
jb
data16
outsb
das
imul
jbe
movsb
pop
sub
sub
arpl
jbe
sbb
or
mov
insb
pop
push
xor
jmp
ds
lods
dec
push
xchg
push
jae
imul
roll
gs
jl
add
fcoms
lret
adc
jmp
pop
in
dec
gs
lahf
sbb
mov
sub
xlat
xchg
jmp
lahf
xchg
cli
lret
add
jo
inc
fwait
test
push
mov
rcr
mov
pop
mov
aad
cmp
mov
cmp
mov
jno
xchg
mov
mov
jne
mov
cltd
iret
push
cli
pop
adc
cmp
aam
add
stc
and
insl
push
push
mov
lret
fidivs
and
lret
cwtl
icebp
rorb
add
sbb
add
jecxz
pop
and
int
shl
jg
sbb
or
aaa
in
enter
sub
dec
mov
pop
imul
scas
lcall
xor
mov
push
call
xor
testb
inc
out
mov
cmp
stos
data16
out
in
xchg
call
jae
mov
shll
pop
xchg
mov
pushf
add
aad
mov
out
adc
mov
mov
inc
xchg
mov
jb
rcrl
sbb
arpl
add
sub
scas
cmp
jno
call
out
stc
sub
loopne
clc
inc
sub
roll
sarl
mov
push
sub
nop
adc
inc
xor
or
sbb
cwtl
adc
icebp
xchg
inc
daa
js
sbb
mov
out
cmp
in
dec
mov
sub
inc
ss
xor
jbe
pop
je
ss
dec
lock
cmp
ret
cmp
mov
pop
push
mull
sub
stos
sbb
daa
xchg
bound
icebp
mov
cmp
sbb
cli
pusha
mov
les
shrl
sbbb
mov
lret
fistpll
mov
sarl
aas
scas
dec
jbe
or
je
pop
xlat
inc
pop
imulb
mov
divl
dec
pop
fisubl
insb
repz
xor
jge
inc
test
js
fnstsw
dec
mov
ljmp
inc
or
sbb
pop
xchg
jne
mov
stc
mov
shrb
mov
fucom
cmp
push
cmp
jne
idiv
bnd
incb
sub
add
stc
negb
or
test
pop
adc
inc
cmp
mov
into
fidivl
mov
pusha
les
lods
test
and
ds
cmpsl
mov
arpl
rcrb
inc
es
mov
mov
test
xor
push
jg
sbb
add
sbb
orb
dec
pusha
cltd
sub
lds
popf
xchg
add
dec
inc
add
cmpsl
scas
mov
mov
add
stc
test
adc
or
into
pop
rcrl
out
arpl
pop
jae
es
clc
sbb
or
lahf
out
or
xchg
inc
jg
addb
stos
cmp
inc
dec
arpl
jne
xchg
jb
xchg
test
aaa
lods
dec
add
inc
add
popf
faddl
daa
mov
mov
aaa
dec
out
sub
adc
cwtl
enter
addl
mov
arpl
mov
js
add
in
xchg
and
clc
sub
lds
push
gs
enter
outsb
js
out
fwait
mov
jne
shll
fwait
pushf
fsubr
lods
xchg
jns
sbb
insl
adc
adc
dec
jecxz
icebp
insb
xor
and
or
scas
xor
mov
movsl
fldcw
xchg
gs
dec
sbb
cmpsl
sub
cli
cmp
mov
dec
or
das
sbb
out
sub
dec
or
loope
mov
test
out
bound
ror
or
decl
add
stc
pop
sbb
and
jp
nop
adc
inc
and
mov
inc
lods
mov
aad
xor
jg
fistps
mov
inc
cmp
ffree
xor
cmc
jmp
jge
mov
xor
pop
push
mov
pop
sub
jnp
jl
mov
pop
icebp
cs
add
mov
scas
in
movsb
scas
cmp
lock
into
sar
lea
sahf
out
movsl
cs
outsb
loop
push
adc
push
push
push
pop
loope
push
push
repz
cmp
push
dec
sub
xlat
cmc
mov
in
lods
syscall
lea
bound
into
xchg
inc
stc
xchg
mov
push
int
mov
stos
cli
cmpsb
inc
xor
movsl
icebp
mov
pop
loopne
cli
xchg
cld
pop
mov
notl
push
dec
cmp
mov
lea
lods
add
push
inc
insb
dec
out
inc
mov
pop
dec
std
add
stos
xor
les
mov
in
pop
cmp
adc
xor
into
outsl
push
inc
mov
sbb
call
dec
test
dec
cmp
std
cwtl
push
dec
sub
mov
xchg
les
and
xchg
cltd
ss
fdivr
ret
sahf
stos
fildll
pop
dec
cmpsl
or
arpl
jecxz
js
mov
imul
sub
xor
adc
fnstenv
aaa
iret
lods
outsb
nop
mov
bound
dec
cmp
imul
inc
and
jb
sbb
sub
add
mov
outsl
mov
and
frndint
or
mov
sub
fistps
in
push
lret
or
ds
rcll
popf
fcmovnbe
sarl
fisubs
or
addl
out
mov
mov
cld
rsm
movsb
out
mov
dec
stc
mov
movsl
stos
fsubs
jno
sbb
jecxz
push
mov
jno
mov
sahf
stc
dec
xchg
mov
pop
push
mov
or
cwtl
call
cmp
mov
sbb
ret
int3
sbb
iret
mov
cmp
divb
mov
bound
scas
pop
jae
and
mulb
les
es
lcall
add
jb
pop
clc
mov
int3
cmc
sti
ja
int
inc
cmp
xchg
out
jge
pop
std
cmp
cld
jl
repz
cmp
shl
cmp
loop
pop
jae
push
sbb
imul
rcll
adc
cmp
testb
test
dec
loope
jb
pusha
mov
jae
ja
mov
cltd
add
mov
mov
test
cwtl
test
test
mov
or
in
dec
sahf
adc
repz
fistl
mov
cmpsb
hlt
gs
sub
rcll
aaa
iret
xchg
adc
fisttpl
jno
adc
sub
jbe
insb
mov
jecxz
mov
jo
jle
std
test
cltd
stos
imul
mov
pop
pop
movsl
not
pop
cmp
aas
iret
xchg
ljmp
sarl
cs
testl
mov
movsl
test
jno
in
push
xor
and
jp
pop
cli
mov
adc
imul
add
jno
cmc
stos
cltd
aas
inc
inc
bswap
jg
push
sub
mul
rorl
cmp
push
jecxz
adc
push
sub
sbb
xchg
xchg
inc
adc
and
inc
hlt
push
cmp
mov
mov
orl
test
xchg
pop
mov
inc
in
sbb
or
mov
in
in
mov
imull
out
add
mov
xor
add
cmpsl
sub
add
mov
icebp
or
push
adc
addr16
or
bound
inc
pop
test
and
mov
jl
inc
int3
movsl
jb
cs
mov
add
push
or
jbe
mov
xor
and
push
mov
mov
cltd
cmpsl
and
jbe
lret
and
add
aas
xchg
or
enter
xor
push
jne
ret
sahf
popl
dec
pop
das
bound
inc
cmpsl
or
sbb
push
pop
clc
cmp
jno
nop
cmp
pop
dec
ficompl
and
pop
stc
inc
xlat
mov
icebp
out
sub
mov
mov
xor
shlb
xor
jp
les
in
mov
stc
stos
push
outsl
cld
jg
int3
inc
cmp
mov
stc
and
add
in
sahf
je
sbb
sub
jge
ror
adc
je
arpl
jecxz
imul
stos
jo
jno
outsb
adc
das
add
lods
cmp
daa
cmc
cmp
sub
pushf
je
call
sub
pushf
inc
push
adc
loope
rcrl
inc
mov
inc
clc
or
pushf
dec
cli
or
cld
push
add
in
pop
xor
daa
cmc
aas
stos
dec
lahf
xor
xchg
scas
addl
in
pusha
inc
into
dec
sub
and
jmp
xlat
jp
fmul
fwait
mov
in
leave
sahf
fucomip
sub
push
pushl
push
or
lods
lahf
idivb
and
mov
loop
inc
adc
sbb
pushf
scas
mov
dec
jne
mov
pop
pop
adc
icebp
movb
inc
popl
cmpsl
adc
cmp
or
xor
pushl
enter
inc
enter
outsb
dec
enter
lods
mov
xchg
daa
out
mov
jecxz
es
adc
outsb
xchg
jb
cmpsl
mov
outsl
pop
shl
pop
or
fwait
jae
pop
fs
sub
mov
adc
lds
das
mov
add
lahf
dec
jge
inc
fisubs
cmp
sbb
adc
mov
sar
insl
jns
ret
add
dec
cmp
adc
xchg
sbb
adc
mov
int
cmp
push
das
cmpsb
test
data16
cmp
mov
in
sbb
fstpl
mov
xchg
inc
dec
dec
sbb
stos
mov
imul
xor
dec
out
mov
lds
add
adc
adc
push
je
mov
pop
sbb
lcall
mov
pop
pop
scas
xchg
ss
add
add
push
lahf
jecxz
xorb
movsl
gs
jbe
aaa
xlat
data16
dec
aaa
ss
fs
std
or
mov
or
les
mov
push
xchg
orl
movl
lret
xchg
cmp
jmp
ja
fstl
mov
imul
sub
movsl
mov
hlt
mov
icebp
push
xchg
cmp
popa
lds
loop
mov
das
test
cmp
and
stos
pop
aas
addr16
mov
fbstp
mov
pop
mov
dec
arpl
xor
mov
and
and
imul
adc
pop
lcall
jmp
mov
je
xor
je
incl
add
dec
les
xor
icebp
xor
imul
xor
mov
mov
sub
pop
hlt
pop
ja
into
std
pop
jg
testl
xchg
cmp
mov
dec
xchg
pmaxub
push
fcmovnu
inc
xchg
dec
cli
out
aam
sub
jne
mov
jmp
and
pop
ret
loope
xchg
insb
insl
sbb
sub
and
push
out
inc
aam
xchg
and
loope
xchg
shrl
sbb
std
xchg
mov
hlt
cld
lods
lock
js
popw
movsl
sub
icebp
mov
or
insl
lock
mov
lret
ja
das
push
jno
fisubs
sub
mov
int
scas
xchg
lea
out
sub
sub
dec
pushf
xchg
sub
addb
leave
add
jmp
and
jle
mov
pop
xchg
fwait
push
cmp
je
or
pop
sub
lock
insb
xchg
mov
lds
dec
sti
cmp
mov
push
push
fwait
lea
outsb
fs
add
mov
push
orl
push
movsl
add
mov
mov
mov
insb
pushf
lret
les
adc
xor
cmp
test
mov
int3
je
mov
aas
pop
mov
xor
dec
dec
and
jmp
and
lcall
mov
adcb
jb
mov
aad
dec
filds
xchg
dec
ret
in
mov
sbb
xor
cmp
faddp
clc
mov
add
pushf
cmpsb
push
lcall
push
push
inc
adc
jne
imul
pushw
xchg
iret
ret
adc
pop
push
push
nop
pop
or
sbb
mov
mov
loope
jle
stos
loopne
jnp
aas
cmp
stc
int
cli
dec
in
scas
rclb
stc
push
cmp
pop
push
add
stos
mov
pop
xchg
xor
div
jne
js
in
xchg
leave
cmp
adc
out
sbb
movsb
add
repnz
movsb
adc
test
mov
lcall
imull
or
adc
and
pop
mov
adc
and
mov
stos
adc
popf
push
xor
xor
dec
xchg
sbbb
imul
cmp
mov
addr16
adc
mov
lret
sub
test
push
bnd
testb
push
mov
stos
lret
adc
mov
shll
push
scas
fcoml
or
cmp
scas
jo
cld
pop
jns
dec
ret
incl
mov
dec
mov
cld
mov
and
fnstcw
stos
sub
movsb
das
hlt
mov
jle
in
fwait
add
scas
push
imul
imul
subps
sub
inc
or
bound
mov
xchg
mov
xor
sub
or
ficomps
sbb
add
lods
cmove
mov
iret
inc
ret
xlat
lds
adc
pop
add
mov
and
cltd
jno
and
sar
and
xor
shll
daa
push
xchg
fstpt
push
and
push
sub
mov
and
leave
mull
imul
or
xchg
test
les
lea
inc
sub
dec
test
pop
stc
shrb
mov
jmp
or
leave
fs
push
inc
mov
hlt
int
pop
hlt
subb
pop
in
in
cmp
fstps
into
out
das
stos
cmp
mov
rcr
xchg
rorb
or
and
in
or
cmp
pop
inc
mov
cld
xchg
or
fs
insb
mov
pop
test
adcl
sub
icebp
pop
adc
pop
jg
add
inc
pushf
in
inc
cmp
push
add
xor
mov
rorl
repz
inc
xor
push
add
lcall
scas
sbb
xchg
addr16
divl
imull
adc
test
xchg
fsubrs
push
mov
pop
push
or
sub
out
f2xm1
cmp
cmp
xor
mov
cs
jecxz
arpl
popf
rcrl
xor
js
jb
cwtl
pusha
ficoml
xchg
xor
xchg
sbb
lret
fisttpll
cmpsb
test
inc
les
add
sti
mov
lods
bound
pop
inc
inc
nop
mov
bound
rorb
mov
movl
inc
stos
rcrl
jg
mov
xor
and
shlb
dec
inc
xchg
fwait
stos
imul
sahf
divb
xchg
pop
shlb
inc
xchg
sub
out
xchg
sub
mov
dec
fadds
jne
out
mov
fcompl
cmp
sub
and
into
or
stc
mov
out
scas
stos
sahf
dec
push
divb
dec
pushf
adcb
leave
jecxz
jbe
xor
imul
pextrw
cli
dec
inc
xchg
lods
adc
fwait
lret
mov
jp
push
add
inc
mov
popa
cmp
push
jge
and
out
jg
push
or
and
push
add
mov
push
adc
std
mov
mov
mov
adc
fsubs
mov
inc
dec
cmp
into
dec
sub
lea
mov
adc
xor
clc
shrl
pushf
or
or
adc
mov
popf
adc
loop
addr16
dec
mov
mov
jmp
xchg
dec
loopne
push
xor
pop
push
or
fstps
dec
dec
out
sbb
es
pop
fnstcw
mov
mov
mov
mov
ljmp
lret
cmp
outsb
mov
into
mov
ss
dec
gs
mov
and
cltd
and
scas
ljmp
and
or
and
pushf
mov
rorb
and
xor
pop
sbb
xor
lds
mov
es
cmp
adc
mov
dec
aam
movsb
push
imul
stos
sub
inc
cld
stos
mov
pop
inc
lds
sti
cmpsb
mov
xchg
push
mov
leave
leave
mov
divl
or
jge
sub
adc
sub
scas
sub
insb
adc
pop
pop
test
aad
and
adc
arpl
push
repnz
pop
out
pop
jl
arpl
ret
add
and
out
xchg
fnstsw
fmull
adc
int
jo
lods
push
and
icebp
push
mov
mov
jb
lods
pop
dec
ret
clc
push
push
push
dec
fadds
test
pop
adc
and
mov
lcall
xchg
mov
dec
push
xor
ret
cmpsb
sub
xchg
xchg
add
jae
xchg
ret
testb
mov
xor
hlt
aam
mov
addr16
push
jmp
imul
dec
in
sbb
cmp
inc
ror
lret
jge
scas
fsubl
push
sbb
inc
mov
xchg
mov
lret
sub
fdiv
rcr
cli
jl
pop
int
out
mov
shlb
mov
mov
fwait
daa
imul
mov
int3
inc
lea
imul
jae
sub
outsb
or
fiadds
rolb
ret
dec
fisubs
and
adc
cwtl
lea
mov
mov
jnp
lea
mov
mov
ds
in
movsl
lds
xor
add
pop
in
bound
stc
std
sbb
das
push
and
push
cs
push
repz
adc
call
mov
faddl
cmpsl
mov
push
xor
fstl
call
dec
rorl
seto
mov
dec
int3
push
repz
sub
shrl
pop
mov
cmpsl
push
cmpsb
add
mov
lcall
sbb
imul
mov
ljmp
xor
hlt
mov
out
rcrl
jbe
out
jae
stos
jo
mov
cmpl
adc
jo
scas
or
push
sub
sub
daa
popa
insl
mov
pop
nop
dec
cmp
add
and
xchg
call
adcl
mov
test
lods
push
scas
je
das
dec
fldcw
sub
mov
sarb
ss
outsl
pushf
aad
es
lea
inc
xor
pop
pop
xchg
fbld
ret
les
mov
popf
push
push
out
cmp
cmp
cmp
call
fwait
imul
cli
fmull
pop
pop
loope
mov
mov
mov
arpl
dec
loope
mov
pop
inc
mov
or
push
xchg
iret
pop
pusha
outsl
loope
repnz
jmp
mov
or
clc
stos
shlb
cmpsl
push
es
or
push
shll
xchg
incl
push
lret
jmp
gs
cltd
adc
ljmp
stos
add
jns
sbb
or
dec
jmp
sub
cmpsb
inc
orl
call
sub
sti
mov
data16
pop
stc
ds
sub
jnp
js
dec
out
mov
int
pushf
or
sub
sbb
out
mov
and
out
cwtl
adc
jns
add
outsb
inc
jl
and
das
adcl
mov
inc
mov
iret
jbe
dec
aas
add
push
lock
int3
stos
pop
sbb
addr16
nop
push
dec
xor
push
pushf
cmp
mov
jmp
imul
iret
or
sub
das
inc
mov
loopne
jnp
pop
cli
int3
push
enter
scas
lock
das
push
adc
xlat
lahf
add
mov
add
mov
bound
aas
arpl
mov
mov
loope
adc
mov
pop
popa
daa
in
icebp
mov
enter
mov
jb
stc
cmp
lock
push
dec
xorl
fs
cwtl
cs
push
sbb
je
or
lock
iret
test
jne
sub
imul
loop
test
loope
mov
mov
or
jl
shll
sarl
inc
jno
arpl
sbb
mov
std
jmp
cmp
call
xor
cmp
fildll
jp
jno
or
sbb
xchg
cmp
dec
mov
jne
outsl
mov
sbb
fldt
fidivl
pop
dec
imul
jl
cmp
outsb
inc
movsb
clc
dec
repz
loop
bnd
pop
add
mov
ss
pop
out
xor
rolb
jge
icebp
jns
scas
cmp
inc
push
push
nop
mov
out
adc
sub
test
mov
pop
mov
cli
pop
xchg
das
out
pop
decl
sbb
jbe
js
clc
xchg
outsb
push
sbb
push
push
jbe
cltd
lret
jmp
shl
xchg
mov
in
xchg
jl
mov
daa
sub
push
xor
inc
mov
mov
fcmovnu
das
out
dec
pop
in
es
addb
push
sub
add
adc
push
cmp
and
push
ja
test
mov
and
mov
aad
lret
xor
and
int3
mov
addr16
pop
xchg
xchg
fcompl
cmp
stos
mov
pop
ja
jge
inc
div
aam
push
addb
or
repnz
stos
cmpsb
adc
mov
mov
xchg
inc
pop
xor
cmp
push
jbe
arpl
jp
stos
js
and
mov
inc
cmpsb
push
and
es
fidivrl
pop
outsb
adc
dec
jp
jns
cld
repnz
add
add
add
int
in
jl
testl
mov
outsl
and
sub
lock
mov
mov
inc
ficoms
sbb
cmp
adc
es
jne
iret
subb
inc
leave
insl
aaa
adc
xchg
test
pop
outsb
arpl
imul
mov
lods
sub
jle
or
mov
lret
add
addr16
sub
scas
jbe
add
leave
fistl
das
daa
jg
push
mov
add
add
in
sbb
cmc
shll
xchg
and
xor
pop
mov
inc
cmp
and
iret
xchg
in
adc
lret
stc
mov
jnp
out
inc
lcall
jns
lcall
pop
push
xchg
in
rolb
jl
mov
rclb
lds
imul
cs
push
lret
aaa
mov
ss
sahf
shll
xchg
mov
ds
add
cld
and
mov
cmp
pop
mov
inc
mov
inc
pop
cld
pop
sbb
enter
jo
inc
xchg
inc
jle
movsl
sahf
mov
jnp
dec
or
addl
pop
dec
addr16
sub
or
sub
sub
out
and
mov
push
mov
sub
sbb
sti
cmp
cli
outsl
adc
sub
sub
cli
sub
mov
adc
aam
or
int
test
mov
pop
mov
xchg
add
popa
add
mov
lahf
xor
dec
mov
frstor
in
ss
out
xchg
inc
mov
mov
mov
enter
aad
out
mov
cmpsl
repz
test
outsb
repnz
pop
ljmp
into
or
push
cmp
ss
xor
mov
inc
leave
xor
mov
scas
cmpb
lcall
adc
iret
sub
aam
je
in
mov
sbb
pop
icebp
scas
inc
scas
push
mov
ds
inc
jmp
daa
sub
test
imul
inc
xchg
ljmp
sub
sbbb
cmp
mov
inc
cwtl
ss
sahf
sbb
mov
ffreep
cld
cmp
rcll
lahf
sbb
outsl
jge
mov
cmp
cmc
in
push
mov
mov
test
mov
add
daa
cmpsl
hlt
mov
shr
dec
inc
jl
mov
mov
xor
testl
xor
insl
xchg
cmp
xchg
stc
sbb
pop
mov
fwait
and
sti
data16
cmp
mov
xchg
push
mov
xchg
aad
jno
dec
jg
xorl
rcr
sub
cmp
into
xchg
lret
bound
fisttps
rol
aaa
iret
aad
mov
or
stos
push
mov
adc
sahf
xor
mov
je
pusha
vpcomud
ja
inc
mov
push
fsubl
cmpsl
push
sbbl
or
xchg
std
sar
das
scas
pop
inc
mov
aas
int
mov
clc
loopne
rorb
jae
jecxz
sbb
outsb
mov
es
std
jg
pop
repnz
jbe
inc
or
mov
aad
ret
wrmsr
or
dec
fiadds
mov
cwtl
icebp
fimull
adc
push
repz
push
je
lret
pushf
cmc
push
pop
inc
es
sarb
jb
pop
dec
orb
sbb
stos
dec
pop
rcrl
mov
subl
dec
les
jno
mov
and
push
jbe
sub
movsl
lahf
lds
adc
jmp
fldl
cmp
adc
mov
int
cmp
dec
pop
adc
mov
inc
mov
and
push
icebp
dec
ret
or
inc
and
rcl
mov
pushf
adc
add
test
ljmp
pushf
fldt
adc
pop
movsb
fildl
mov
push
cltd
scas
pusha
in
fisubs
loope
push
js
mov
cld
add
mov
das
add
in
ret
jb
aam
xchg
xor
imul
cmc
push
dec
xor
pop
xor
pop
pop
ret
incl
inc
js
dec
xor
jb
xor
sarb
test
popf
sub
inc
test
or
or
out
push
mov
push
sbb
push
ret
out
sub
jl
inc
xor
movsb
dec
cmp
outsl
fwait
and
cmp
sahf
out
dec
xchg
ret
pushf
cmc
mov
insl
pop
aas
pop
fs
int3
inc
outsb
mov
or
fdivr
xor
mov
nop
roll
pushw
dec
int3
lods
ljmp
or
int
popf
in
sbb
add
les
lahf
add
gs
dec
jle
mov
fwait
jne
pop
dec
mov
orb
and
mov
jl
jns
sub
ljmp
adc
push
imul
adc
and
sti
push
lret
aam
or
jecxz
mov
test
cmp
outsb
add
out
xchg
mov
add
popa
in
ja
pop
adc
xchg
fucomp
and
test
cmp
or
xor
hlt
fnsave
cmp
xlat
pushf
sub
test
popa
sbb
jge
stos
dec
push
jl
stc
inc
adc
rorb
bound
addr16
ss
addr16
daa
xchg
not
sbb
sub
shll
loopne
jnp
fs
rolb
mov
pop
jge
xchg
jp
push
sahf
sub
or
iret
in
arpl
push
lret
pushf
fstpl
lods
cltd
or
add
sar
loope
enter
xchg
pop
lods
inc
xor
scas
jae
xor
popa
xchg
clc
dec
lret
cld
shrb
xor
mov
mov
jl
nop
ja
sbb
rorl
push
aas
ret
f2xm1
and
movsb
fmulp
push
mov
sti
dec
imul
mov
repz
mov
insl
sub
push
push
or
ds
daa
daa
xchg
arpl
xlat
xchg
pop
sub
xchg
sahf
stos
pop
adc
mov
xchg
cmp
adc
ljmp
dec
test
mov
mov
andl
scas
cli
ret
push
das
lock
xchg
scas
jp
cli
loop
fcomps
in
mov
inc
xor
ja
bound
sub
lret
mov
cmp
or
stos
je
dec
mov
push
mov
mov
jo
mov
jle
ds
test
jnp
lret
sbb
inc
inc
mov
das
dec
jae
inc
sub
insb
or
push
arpl
mov
cmp
gs
push
xchg
xor
jnp
call
aad
shl
insl
add
testl
in
pusha
aad
fisubs
fnstsw
cmp
xchg
jne
dec
xchg
sbb
pop
mul
jge
imul
cmp
mov
or
or
mov
loop
cmc
push
jb
in
loopne
inc
push
xor
push
daa
mov
push
rcrb
pushf
sar
div
movsb
scas
jl
sub
movsb
dec
jbe
and
push
and
out
cmpsl
stos
imull
mov
jb
ffreep
inc
and
or
stc
test
sbb
mov
pop
or
add
or
cmp
xor
loop
and
push
jno
shrb
in
xor
aad
pop
xchg
neg
mov
dec
daa
ret
rsqrtps
xchg
jmp
push
push
mov
in
cmp
scas
jb
lods
cld
mov
movsl
jns
xor
loopne
iret
popf
dec
sbb
das
fbstp
push
stos
flds
dec
xchg
xor
mov
mov
ljmp
in
add
fs
loopne
jge
jb
xchg
icebp
pop
add
jge
dec
or
cmp
mov
xchg
inc
fisubrl
ljmp
data16
ljmp
test
popf
push
aaa
das
xchg
cmpb
cld
push
sbb
xlat
mov
jg
mov
aaa
mov
inc
les
sub
adc
adc
adc
adc
ss
lods
pop
add
mov
into
test
lcall
sub
insb
mov
cmp
dec
call
sub
sbb
es
out
mov
xchg
iret
rcll
add
cli
imulb
push
xchg
cltd
lret
in
inc
push
xchg
cli
jb
aaa
cmc
adc
jl
or
and
sbb
pop
jae
cli
mov
push
nop
jmp
dec
mov
pop
pop
stc
fstps
sub
xchg
ds
fidivs
ficoms
xchg
fcoms
inc
je
mov
fs
dec
out
ror
pop
dec
shll
fdiv
imul
scas
sbb
cmpsb
xor
xchg
inc
jo
cld
cltd
rorb
mov
cs
xchg
xchg
data16
lret
cmp
sub
push
sub
cwtl
lcall
addr16
loopne
dec
pop
mov
add
ret
cmc
fiadds
jb
pop
mov
push
sub
sub
mov
cltd
xlat
push
or
inc
jp
adc
cmpsl
rcrb
mov
inc
adc
push
jmp
lcall
std
mov
add
loop
fcomps
sbbb
xchg
ds
or
lock
cmp
ds
out
inc
popf
xchg
bnd
pop
push
mov
setnp
in
idivl
fdivl
jg
pop
xlat
aam
or
xor
mulb
mov
push
adc
add
ja
js
lods
movsb
movsb
or
or
and
out
ss
out
insb
mov
sarb
xchg
test
shl
sub
fisttpl
jmp
or
mov
add
outsb
pop
in
adc
test
ret
jg
leave
imul
inc
jbe
mov
sbb
dec
testl
add
sti
in
es
jmp
and
repnz
dec
sahf
sti
push
sub
add
add
or
cmp
mov
inc
pushf
xor
dec
mov
mov
cmp
loope
xchg
loop
ljmp
cmpl
or
push
outsb
cld
call
pop
sub
sbb
or
es
ljmp
sub
adc
jl
sub
loop
sbb
fwait
and
jne
outsl
mov
and
loope
pop
nop
movsb
or
dec
jmp
daa
lock
mov
xorb
xchg
or
pop
lahf
push
pop
jp
sub
dec
add
xor
push
mov
pop
sti
call
add
test
nop
enter
insl
xchg
in
mov
leave
xchg
enter
mov
mov
repnz
jo
setbe
adc
leave
insb
fsubrp
fldenv
loope
js
jns
xor
xor
sarl
insl
adc
mov
jo
add
jle
in
inc
fbstp
jge
ljmp
sti
pop
divb
fs
sub
neg
adc
js
cltd
or
mov
orl
mov
fimuls
and
pop
push
test
cs
pop
insb
or
push
xor
pop
out
add
and
or
and
or
out
mov
add
adc
out
out
jl
dec
push
fmuls
mov
shrl
sbb
aas
cmpsl
mov
je
mov
jmp
call
outsb
and
scas
push
add
sub
sub
xchg
loope
cld
xchg
or
addr16
push
xchg
adc
fisubrl
loopne
mov
es
cmp
xor
inc
das
lock
out
shrl
or
push
aaa
mov
test
push
xchg
stos
loope
mov
mov
aam
sbb
ror
aas
sub
das
xchg
fdivs
push
sub
add
testb
repz
pop
xchg
stos
mov
xchg
pusha
adc
inc
jge
or
mov
cwtl
mov
xchg
mov
jmp
sbb
arpl
adc
popf
in
test
adc
push
scas
sahf
xchg
pop
cmc
hlt
cmpb
mov
xchg
lret
test
fidivrl
stos
fmull
inc
cld
aam
pop
adc
rclb
fld
arpl
adc
dec
int
cmp
cmp
mov
mov
and
inc
nop
xor
lcall
sarl
cmp
push
inc
lret
sbbl
xchg
cmpsb
cmp
dec
and
loopne
in
inc
inc
mov
cmc
inc
jecxz
cmpsb
icebp
out
inc
out
loop
fildl
test
jnp
adc
es
xchg
shrl
sti
add
gs
xor
lods
xor
lret
cli
insl
inc
mov
add
sub
out
push
dec
lret
jns
adc
insb
mov
jbe
shll
xchg
adc
stos
jge
dec
out
push
mov
loop
inc
nop
ret
sbb
scas
inc
pop
push
push
das
mov
jnp
push
outsl
sbbl
mov
mov
ficompl
and
adc
mov
shl
jmp
xchg
add
pop
dec
or
popf
push
in
or
pop
test
insb
stc
fnstcw
push
stos
imul
sbb
js
mov
mov
xor
adc
outsl
xchg
jmp
push
hlt
or
sbb
cmc
int3
or
popf
shrb
js
xor
es
mov
call
pop
and
jmp
es
inc
jecxz
xor
cmc
mov
jle
xor
cmpl
add
pop
jecxz
and
outsl
push
jge
fistl
lahf
sub
jne
popa
sub
in
cmc
lods
push
outsb
insl
adc
cmpsb
stos
sbb
leave
lcall
sub
mov
scas
adc
sti
mov
sbbb
icebp
sub
std
jb
sub
push
push
mov
popa
outsl
cli
data16
repnz
aaa
clc
push
xor
lods
inc
and
mov
leave
and
hlt
and
sub
aam
rcr
cld
in
cmpsb
cmpsb
adc
mov
outsb
out
arpl
xchg
lods
sbb
in
rol
loopne
and
and
andb
fs
stos
call
mov
in
inc
xlat
push
mov
pop
repz
iret
lret
fcmovnb
mov
jns
jmp
sbb
fbld
or
in
jmp
in
pop
rolb
es
adc
push
mov
outsb
push
sbb
movsb
movsb
punpcklwd
lock
push
arpl
shrb
jns
cld
mov
xchg
call
jmp
dec
hlt
les
mov
mov
pusha
sub
xchg
fs
xorl
orl
lods
jnp
jbe
lahf
xchg
pop
cmp
jno
xor
test
popa
pop
add
cmp
push
mov
ret
fnstenv
xorb
stc
scas
mov
add
mov
mov
insb
icebp
repz
or
testb
test
pop
fistl
push
icebp
adc
add
mov
lds
mov
mov
cmpsb
sub
mov
das
in
jo
incl
sbb
lret
lret
xchg
fisttps
std
hlt
aaa
adc
push
sub
mov
xchg
xchg
shlb
jl
loope
lock
jmp
and
in
std
dec
lahf
cmp
aas
sbb
iret
subl
jne
jle
arpl
lcall
outsb
rclb
mov
push
push
mov
repnz
dec
cld
rorl
addr16
cmp
and
sahf
popf
mov
aam
movsl
sub
test
xor
das
das
lods
sub
imul
je
imul
pushf
push
xor
das
xchg
xchg
sbb
lods
aaa
sarl
inc
add
pop
inc
add
adc
cmp
push
push
cs
push
int
mov
push
xor
or
push
std
sub
push
repz
push
dec
xchg
xchg
or
repz
cmp
les
pop
imul
sub
mov
sahf
mov
imulb
rclb
outsb
xchg
hlt
dec
aaa
pop
jnp
clc
loope
pop
mov
dec
inc
pop
into
xor
jecxz
xlat
stos
stos
das
sub
pop
xchg
xor
out
cmpsl
gs
cmpsb
std
pop
cmpsl
adc
cli
sub
outsl
lahf
insl
ret
push
jns
rcl
mov
jle
fxch
sbb
xchg
pop
mov
std
jo
rcl
adc
dec
xor
hlt
sub
stc
lret
dec
mov
test
cmpsl
pop
xor
sbb
jecxz
mov
pop
imul
push
adc
imul
cwtl
cmp
roll
nop
and
and
ljmp
je
xchg
sub
inc
cltd
sub
pop
hlt
jmp
cmp
repz
popf
pop
mov
xchg
sbb
das
xchg
inc
add
xor
divb
add
lock
mov
inc
push
jno
movl
sub
lahf
cmp
out
rorl
lock
ret
push
dec
and
sub
neg
lcall
cwtl
dec
testl
movsb
sarb
jmp
and
push
sub
loope
jbe
xchg
mov
out
inc
xchg
out
inc
insl
pop
and
inc
movsb
jo
xchg
ds
pop
outsl
cwtl
xchg
scas
sub
lock
fnstsw
mov
stos
mov
pop
pushl
insb
leave
dec
mov
cmp
div
aam
stc
sub
add
bound
notb
mov
add
aas
jns
cld
push
xchg
subb
ds
sahf
jecxz
gs
stc
mov
callw
push
push
lods
scas
pop
movl
jns
iret
or
fldenv
push
aas
bound
jb
sbb
stc
adc
mov
sbb
insl
xor
xlat
cld
xor
gs
cld
sbb
ljmp
mov
or
mov
icebp
xchg
push
and
mov
jg
and
insb
rorl
cmpsb
test
rorb
mov
xchg
push
inc
mov
mov
cwtl
push
jmp
ret
pushf
sub
jmp
sbb
fsub
jo
stc
idivl
cli
lret
mov
mov
inc
push
in
add
add
stos
and
xchg
push
xor
rolb
sbb
mov
inc
int3
pop
and
cmp
cmp
cld
and
push
xorl
stc
orl
out
xchg
add
pop
dec
fcomps
cwtl
jmp
xor
push
stos
dec
das
or
arpl
and
sub
cmp
lcall
and
or
push
sub
loop
sbb
jns
push
xchg
addb
sbb
mov
pop
adc
leave
call
xchg
outsb
push
loop
mov
ficomps
out
cs
dec
fldt
data16
fcom
or
dec
pop
js
out
out
xchg
rorb
enter
sti
sub
sti
jb
pop
inc
push
or
jnp
insl
sbb
xchg
or
mov
out
sti
pop
xchg
sub
rorb
pop
inc
xor
test
dec
mov
imul
popl
inc
jmp
loopne
fldt
pop
cwtl
sbb
clc
in
cmp
xchg
jge
fs
and
cmpl
mov
lret
push
adc
vmread
popa
ds
pop
fildl
jb
or
repz
scas
cmp
ds
push
mov
and
add
jo
mov
lahf
jb
jg
test
sbb
push
add
adc
fistl
imul
dec
mov
lds
jo
jne
lods
jecxz
sub
mov
or
iret
push
aad
rcll
jge
and
sub
ret
dec
fists
ret
jg
adcb
sub
and
jmp
imul
mov
out
xor
xchg
inc
inc
das
mov
push
stc
fldcw
mov
loop
insb
jno
popf
daa
lahf
xor
mov
into
out
jbe
fwait
and
push
inc
movsl
int
or
add
bound
push
setnp
fwait
mull
repnz
les
mov
adc
cmp
sub
aas
shlb
xorb
and
sub
xor
xchg
cmp
mov
rcrl
lods
or
sbb
xchg
dec
add
xchg
out
cmp
into
pushf
adc
das
je
sub
sub
push
pop
pop
xor
andl
pop
outsb
and
xor
add
into
xchg
hlt
das
cmp
leave
loope
pop
sub
cwtl
ja
fists
jg
jae
pop
jbe
or
test
pop
add
mov
sldt
dec
cmp
popa
xchg
xor
cwtl
sbb
inc
pop
fcomps
jge
icebp
sbb
movsl
pop
dec
xchg
adc
lock
lret
and
fbld
out
mov
sub
sub
sbb
cli
push
jbe
in
dec
fldl2t
mov
aam
jl
bound
lock
je
lock
jne
ret
daa
xor
and
shrl
inc
mov
mov
cmp
int3
imulb
sbbb
push
mov
pop
xorb
dec
addl
add
jp
sti
pop
push
and
push
mov
mov
cmp
sbb
popf
or
repz
fstl
pop
loopne
and
mov
push
cmp
push
xchg
inc
push
enter
dec
clc
test
icebp
mov
jle
hlt
jo
fldcw
push
inc
cmp
mov
cli
mov
add
dec
lea
gs
cmp
test
mov
hlt
gs
cmpsb
call
repz
mov
sbb
push
outsl
pop
or
xchg
mov
outsl
push
ljmp
adc
shll
int3
inc
test
xchg
leave
cmp
sub
mov
add
add
mov
sbb
lret
test
or
ret
cmp
enter
jmp
mov
lret
xchg
stos
pop
add
int
ja
je
add
hlt
pop
in
add
fisubs
mov
test
aad
cmp
out
mov
add
cmp
addb
xlat
mov
and
mov
fdiv
lods
mov
inc
pop
inc
pop
stos
jg
cmp
ljmp
sbb
inc
arpl
inc
test
add
jne
or
and
jle
std
xor
mov
mov
mov
insb
cwtl
jbe
pop
jp
icebp
add
stos
dec
jbe
mov
in
sbb
mov
test
shrl
pop
xor
ss
out
sarb
arpl
shlb
mov
out
sbb
xchg
mov
inc
imul
fsubrl
inc
add
stc
inc
scas
cmpsl
push
cmp
cmp
xchg
sub
js
mov
or
pop
jne
lds
loope
mov
nop
cmp
inc
test
dec
mov
pop
stos
stos
add
lret
movsb
mov
mov
jnp
loope
xor
jle
gs
lret
and
push
insl
dec
insb
fs
dec
xchg
in
das
xchg
or
mov
jle
cltd
shlw
das
jl
nop
mov
fidivrs
aad
into
or
fldcw
out
scas
xlat
inc
jle
mov
jl
stos
adc
xchg
fists
mov
jno
test
mov
das
clc
cmpsb
cwtl
adc
mov
cwtl
pop
lods
fnstenv
into
sbb
test
outsb
adc
faddl
mov
mov
shlb
sbb
sbb
pop
and
inc
xor
ds
mov
jmp
jp
clc
mov
sbb
shll
push
popa
xchg
icebp
sub
jmp
inc
decb
subb
xor
push
jbe
fnstsw
repz
imul
out
cmp
dec
in
mov
push
das
js,pt
jno
mov
fucomi
push
int3
cmp
test
mov
push
lock
push
ja
adc
mov
cmpsb
dec
jbe
repz
cwtl
cmc
outsb
jae
sti
add
sub
xor
stos
sub
dec
or
mov
jle
leave
enter
les
dec
dec
mov
pop
lcall
sub
mov
xor
fwait
xor
mov
lret
mov
repnz
xchg
bound
movsb
jp
scas
adc
outsb
xchg
and
scas
push
pushf
ljmp
mov
iret
call
or
hlt
jb
imul
aaa
pop
ficomps
mov
mov
je
cmpsb
mov
mov
mov
pop
push
stc
xor
mov
mov
cmc
sbb
dec
aas
lds
xorb
xchg
aad
xchg
je
out
test
lcall
lret
fwait
jne
and
enter
or
aam
scas
push
add
in
push
ljmp
out
mov
dec
mov
xor
pop
mov
movb
sub
cltd
fldl
aam
mov
add
xchg
mov
mov
mov
decb
jecxz
bnd
mov
mov
aam
xchg
repnz
pop
fisttpl
and
jns
pop
cmpsb
mov
pop
push
and
aam
lock
aad
push
dec
push
push
daa
mov
mov
inc
adc
sbb
adc
xlat
pop
imul
adc
aad
cmpsb
mov
and
iret
mov
and
adc
sub
jge
jae
sbb
adc
pop
test
and
daa
or
imul
sbb
pop
push
jmp
shrb
daa
add
sub
popa
addb
leave
imul
dec
lcall
cmp
sti
xlat
add
or
cmp
lahf
movsl
jp
mov
dec
xor
add
mov
ja
sarb
dec
into
add
movsb
pop
je
lock
mov
xor
mov
sbb
mov
adc
cld
cld
mov
jg
xchg
dec
int
arpl
outsl
fadds
stos
inc
daa
test
or
std
push
xor
cltd
push
mov
test
and
fidivl
mov
sarl
mov
jnp
cmp
incb
jl
addr16
fucomi
cwtl
hlt
mov
dec
mov
aaa
or
or
sub
lahf
inc
sbb
sub
dec
cmp
inc
push
negb
imul
mov
and
lahf
pop
and
mov
xchg
bound
jl
add
out
or
push
push
jle
cwtl
sbbb
jbe
iret
inc
lret
mov
pop
sbb
adc
ret
sub
ja
push
aam
movsl
or
nop
mov
xor
push
cmpb
mov
pusha
dec
flds
cmp
cmc
or
pop
scas
jo
push
in
imul
pop
dec
sub
cmp
mov
add
inc
aas
jae
enter
out
lret
sbb
cmpb
mov
bnd
in
ss
adc
jno
xchg
xchg
and
xchg
sbb
lcall
aam
push
cmp
xchg
icebp
test
ja
mov
push
push
cmp
movsb
mov
jns
stos
stc
xlat
loope
in
jp
loopne
stc
and
js
repnz
cmc
adc
dec
adc
in
push
lret
ret
jmp
inc
mov
push
scas
mov
ficoms
lcall
stos
pop
sahf
push
adc
and
inc
pop
mov
mov
cmpsb
inc
cmpsb
pop
mov
sub
leave
cmpsl
lods
jbe
arpl
push
pop
or
pop
xchg
fnstenv
std
mov
mov
mov
inc
in
arpl
mov
lods
and
mov
push
xchg
test
rorl
lahf
scas
push
sub
xchg
xchg
and
repz
mov
daa
js
pop
data16
push
mov
inc
xchg
sub
or
mov
in
lahf
enter
sbb
jns
scas
pushf
imul
push
fisubrs
mov
jae
lret
push
xchg
int
sub
add
out
repz
lahf
inc
scas
sub
insl
insb
lahf
add
js
int
mov
jl
and
popa
int
dec
ss
rorb
mov
push
test
push
sbb
test
iret
mov
sbb
subl
cmp
pxor
andl
mov
fstpl
cmc
adc
mov
xor
inc
cs
sbb
cwtl
pop
fnstenv
and
jne
loop
cmp
sub
mov
inc
pop
cwtl
outsb
jns
xor
out
xor
adc
push
imul
mov
xor
pop
imul
fildl
pop
sub
inc
arpl
dec
mov
addr16
mov
fisttpl
pop
inc
mov
mov
sub
jmp
rcr
and
das
or
scas
xor
inc
or
insl
aam
fs
repz
test
movsl
ficoml
dec
fisubl
mov
push
ss
dec
fs
bound
xlat
shlb
stc
movsb
mov
ja
mov
cmp
mov
into
sbb
sub
jnp
push
stos
push
push
mov
movsb
sub
adcb
dec
cmp
test
mov
stos
sarl
mov
cmp
or
sub
lahf
sbb
jne
dec
fcoml
push
std
and
lds
inc
cmpsl
les
jp
jb
xchg
fidivs
cmp
xchg
inc
lahf
mov
and
cmpsl
xchg
aam
or
imull
mov
jae
fisubrs
mov
cltd
sub
lods
adc
lret
loop
in
pop
inc
sub
ss
addb
xor
dec
stos
pop
ret
push
pop
add
addr16
jecxz
push
add
int
mov
cs
mov
push
sub
aam
jbe
out
popa
scas
sub
aad
fiaddl
clc
fs
addb
scas
popf
clc
sub
fidivrs
dec
mov
aas
in
jp
shlb
cwtl
sbb
int
out
sahf
pop
ret
adcl
ret
in
inc
fst
and
adc
dec
lcall
pop
add
xchg
mov
cmp
xor
mov
jmp
paddw
mov
je
insl
je
xchg
mov
icebp
sbbl
or
cmc
out
and
mov
movsl
hlt
cmp
cmp
fsts
cmpsb
sub
xchg
xor
imul
call
shll
aas
into
pop
mov
int
outsl
in
lock
jno
jmp
out
dec
jb
scas
push
icebp
dec
or
add
lods
push
call
in
lahf
rclb
dec
jmp
aaa
push
mul
std
dec
fnstenv
sub
out
lds
fnstcw
adc
mov
sti
std
and
or
pop
dec
inc
sbb
sub
repnz
mov
bound
loope
dec
push
and
lahf
sub
jl
test
in
mov
mov
inc
sub
bound
push
fadd
clc
popa
dec
test
iret
shrl
jns
sub
push
aam
xlat
push
hlt
dec
addr16
inc
js
sahf
sub
pusha
stos
pop
popa
add
std
push
icebp
cmpsb
rorb
lods
push
jo
push
sbb
and
sbbb
insl
xchg
lret
pop
push
mov
rclb
int
adc
stos
mov
nop
out
aam
jnp
shl
pushf
jg
into
popa
dec
sub
sahf
js
in
xor
subl
mov
icebp
lcall
pop
cmp
in
fcoms
nop
imul
push
sahf
gs
pop
nop
adc
inc
or
jge
rclb
add
jbe
rclb
dec
lods
push
mov
cmp
sbb
xchg
into
or
xchg
cmp
test
sub
sub
xor
popa
fwait
je
mov
clc
cmp
pop
xchg
jb
test
mov
insl
repnz
fidivrs
cmpsb
orb
jae
jb
mov
dec
jg
test
js
stc
mov
inc
xchg
push
jl
pop
loopne
jnp
arpl
sbb
lcall
ret
into
add
hlt
cmc
mov
popa
mov
jmp
push
mov
cwtl
push
pusha
out
xchg
sbb
ss
and
insl
jae
adc
xchg
add
push
mov
push
jae
lods
mov
popf
mov
cmc
xor
lret
pushf
mov
lea
xchg
lds
jae
gs
cmpsb
and
push
xor
jecxz
arpl
add
mov
test
cmc
fildl
in
add
test
outsb
nop
inc
cwtl
and
jecxz
iret
inc
inc
aas
mov
fiadds
bound
cmp
int
and
lea
lods
call
mov
repz
dec
cmpsb
adc
dec
add
inc
cmp
push
xor
push
aas
inc
lods
add
inc
mov
push
inc
pop
push
in
into
aam
sub
jg
cmc
mov
mov
inc
addr16
cvtpi2ps
and
outsb
xchg
loope
mov
adc
adc
xor
aam
cld
mov
sub
adc
mov
ljmp
lea
test
dec
add
js
and
repnz
mov
dec
xor
movsl
or
clc
cmp
and
clc
inc
push
or
and
loope
bound
pushf
pop
adc
add
dec
xchg
inc
pop
mov
sub
je
mov
xchg
cmp
xchg
mov
jl
or
cmp
mov
cmp
push
cmp
fadds
push
sti
mov
jl
adc
ja
ljmp
pop
jl
mov
cmp
xlat
mov
sbb
xchg
pusha
dec
es
movsl
arpl
xor
je
mov
dec
or
dec
mov
das
lds
pop
popf
adc
cmp
imul
inc
movsb
pop
fiaddl
dec
lret
inc
sub
mov
lock
out
fs
push
pop
dec
pop
jp
jae
arpl
adc
dec
lret
cmpsl
iret
fnop
jo
mov
dec
popa
inc
loopne
dec
sub
inc
xchg
loop
push
aam
pop
js
bound
xchg
imul
pop
repz
mov
into
sub
mov
adc
or
in
fisttpll
sbb
xchg
in
gs
cmpsl
ret
add
mov
pop
sahf
stos
mov
push
pop
xchg
pushl
mov
sub
in
and
daa
fcomps
in
jae
mov
out
jp
arpl
lret
jae
mov
xor
mov
push
inc
dec
cmp
lret
fistpl
and
aas
test
addb
jne
xchg
mov
sub
mov
rcrl
int
sbb
dec
and
mov
int3
std
pop
inc
adc
aad
jo
aad
jnp
mov
dec
js
nop
jp
pop
outsl
daa
test
push
jmp
inc
in
icebp
cwtl
jg
outsb
sub
in
scas
pushf
jb
test
mov
and
clc
aaa
mov
xchg
jp
mov
cmp
sbb
push
cmp
lret
dec
or
cmc
adcl
or
pop
and
adc
lock
jo
into
aaa
xchg
int
xor
or
mov
sub
jbe
jmp
mov
lock
addr16
lret
push
mov
fstpt
dec
cmp
rcl
movsl
data16
out
pop
pop
mov
cmp
mov
xor
scas
xor
push
mov
and
jno
enter
pop
adc
pop
pop
add
push
loope
lock
cmp
lahf
in
aad
aaa
and
stos
stc
push
and
pop
xor
leave
out
orb
andb
cmp
scas
adc
test
mov
cmpsb
ja
xchg
jbe
push
adc
dec
jae
xor
add
cli
pop
cmpsl
test
je
dec
lea
sti
mov
lock
sub
sbb
cltd
aad
jno
pop
out
shr
loopne
cmc
add
adc
adc
mov
andb
mov
jl
cmp
adc
pop
mov
popa
or
loopne
cwtl
aad
and
in
arpl
mov
mov
mov
fists
add
lods
insb
std
push
and
xchg
cmp
dec
outsl
pop
mov
fcmovne
sub
mov
mov
fistl
sub
gs
fdivrl
shlb
inc
cmc
pop
jg
push
gs
add
out
imul
je
xor
inc
xlat
stos
push
and
cmc
sub
arpl
aad
jno
outsb
mov
into
push
xor
fs
push
and
leave
sahf
test
mov
inc
add
sub
in
lea
aad
setb
leave
dec
mov
dec
ljmp
xor
rcrl
jns
int
bound
jl
add
int
dec
pop
and
pop
enter
sub
shl
adc
push
or
and
fisubs
pop
mov
fcmove
bswap
lahf
nop
addr16
cld
sbb
insl
cld
movsl
cmc
fnsave
popf
add
sub
mov
mov
xchg
adc
pop
push
cmp
fwait
shrb
sbb
aam
jmp
jle
pop
loopne
xor
xlat
mov
pop
aad
or
ficoml
addr16
mov
pop
pushl
mov
or
nop
mov
imul
mov
xchg
cmp
sbb
loop
add
movsl
int3
scas
jp
aas
jb
movsb
stos
or
hlt
pop
mov
add
inc
jp
fcomp
mov
lock
out
cmp
cmp
rcll
inc
repz
in
rcrl
mov
jle
adc
dec
mov
lret
popa
das
sub
dec
out
mov
or
or
lret
jbe
lock
mov
pop
xor
out
cmp
inc
adc
js
mov
or
stos
xor
iret
jg
mov
add
xchg
jnp
mov
sbb
sub
fcoms
cmp
mul
aaa
std
add
mov
pop
fcmovne
xchg
insb
fs
sti
mov
lcall
mov
sbb
add
push
jge
data16
dec
sub
push
push
aas
mov
mov
stos
cmpsl
scas
xchg
pop
sbb
or
add
pop
inc
cmp
js
sbb
jne
xor
jle
shrl
fcomip
xchg
insb
and
scas
test
mov
jmp
mov
push
cmp
add
add
jbe
cmpsl
push
leave
lods
inc
test
hlt
sub
xchg
adcb
lret
inc
push
rcr
cmp
fcmovnb
xor
icebp
mov
sub
jg
cmp
inc
imul
daa
dec
cmp
and
clc
nop
mov
add
ja
dec
lock
shrb
sti
lahf
jo
adcb
aaa
mov
out
sbb
setge
mov
sbb
mov
jmp
enter
stos
bound
jb
jns
ss
sbb
out
jno
bound
add
add
pop
aas
mov
cmp
out
sbb
pop
stc
outsl
jne
or
leave
dec
inc
shl
pop
ljmp
adc
jno
fwait
pushf
cmp
mov
mov
cwtl
movsl
shrb
push
lods
sub
fsubrl
sahf
gs
nop
dec
clc
push
fs
pop
mov
aas
xchg
das
negl
cld
and
sub
xor
xor
mov
push
adc
daa
pop
sbbl
jne
dec
in
mov
imul
pop
adc
inc
or
sub
or
mov
jae
sti
lea
sub
fwait
jb
or
jne
dec
xchg
mov
dec
test
mov
push
jno
jp
pop
and
jp
pop
mov
push
mov
adc
in
sbb
sub
inc
test
pop
gs
ffreep
pushf
cmpb
mov
fldt
outsl
pop
xor
stos
add
adcb
stos
je
lcall
mov
rcr
pop
loopne
jne
mov
outsl
and
lods
int
sti
mov
test
les
nop
sub
shrb
pop
mov
repnz
and
jno
add
jl
and
xchg
icebp
sbb
push
incb
mov
gs
mov
or
jle
xor
add
xchg
loop
pop
mov
push
pop
mov
in
sti
popf
jae
lgs
inc
loopne
insl
lahf
lcall
mov
jle
insl
insb
adc
cmpsb
les
pushf
jo
dec
pop
sbb
dec
jns
xchg
std
loope
fmulp
aad
jns
test
cmpsl
shrl
push
mov
sbb
adc
in
jge
sahf
inc
or
pop
mov
adc
ja
push
test
mov
shl
inc
inc
xlat
sub
rcrb
xor
add
dec
lods
sub
mov
movsl
popf
fistpll
jecxz
xchg
clc
add
pop
xor
lock
adc
xor
fildl
lods
pop
shlb
cmpsb
dec
das
mov
jle
mov
sbb
repz
mov
push
inc
xor
insb
insl
in
pop
clc
out
push
xchg
xchg
sub
mov
mov
xor
cmp
out
ror
inc
popa
push
sub
cs
mov
mov
jbe
pop
xchg
sub
je
lret
out
and
rclb
ja
add
icebp
add
push
dec
push
adc
std
pushf
xchg
insl
pushf
aaa
mov
push
sbb
movsl
aaa
mov
in
pop
or
pop
pusha
xor
call
dec
dec
sbb
and
gs
adc
popa
shl
xchg
stc
add
jge
popa
mov
testl
sbb
fbstp
inc
or
iret
mov
or
shl
test
mov
and
imul
ljmp
aam
pop
xor
ret
sub
cmp
dec
jno
inc
dec
mov
cmp
dec
dec
int3
sbb
lock
out
adc
fs
jno
add
xchg
cld
dec
add
into
jmp
mov
int3
add
jnp
lahf
mov
imul
movsl
daa
nop
inc
fimull
sub
xchg
xchg
mov
mov
xor
mov
cmpsl
mov
pop
mov
ds
jne
push
xchg
scas
jbe
mov
roll
push
cmpsb
enter
lods
adc
sahf
push
push
xchg
mov
cmp
inc
xor
jo
mov
cmp
out
imul
push
add
nop
mov
mov
sub
mov
jne
insb
lods
push
mov
fisttpll
pop
js
mov
outsl
repz
rolb
push
add
sbb
cmp
mov
mov
ss
dec
add
lret
push
mov
pop
dec
sbb
push
rorl
mov
test
fidivs
test
mov
stos
cmc
into
push
scas
mov
subl
mov
dec
or
mov
sti
loopne
xor
or
enter
adc
test
sbb
test
ret
xor
stc
xor
add
or
cmp
or
ret
data16
add
aad
cmpsb
add
mov
call
popa
lods
incl
fcmovbe
insb
jo
mov
and
repz
cmpsb
xchg
sarb
mov
mov
add
shrl
and
sub
mov
pusha
enter
js
mov
jno
repnz
js
shll
pop
or
push
hlt
lcall
mov
mov
ret
rorl
pop
dec
ret
rolb
ljmp
sbb
or
sub
cmpsb
js
fcoms
jb
ret
push
mov
aaa
fwait
cmpsb
mov
shl
rep
xchg
mov
outsl
jb
bound
out
loopne
push
jle
jb
je
aam
mov
popa
fisttpl
loope
inc
dec
aad
push
gs
sbb
xor
repnz
inc
jg
pop
push
pop
lods
and
in
mov
mov
pop
movsl
or
insl
nop
fadd
add
mov
cmp
das
mov
mov
add
mov
inc
int3
bound
dec
cvtps2pd
jb
push
pop
cmc
shrl
cli
mov
mov
repnz
test
jbe
lods
daa
aam
sbb
loop
daa
push
xlat
and
leave
out
subl
insb
inc
mov
dec
push
inc
cmpl
sub
and
jge
pop
rcrl
insl
sti
and
inc
pop
add
pop
mov
shrl
xchg
cmp
shll
mov
mov
xor
loop
adc
int
mov
inc
insl
jl
js
or
sbb
cld
sub
jnp
loop
outsl
fisubl
je
xchg
fstpt
xorb
fnstcw
cmp
push
fcoms
notb
mov
fwait
mov
pop
xchg
dec
es
and
cld
sbb
push
mov
int3
insb
fwait
jo
pop
adc
mov
rorl
loope
pop
stos
lock
mov
xchg
mov
int
dec
jl
pop
cmpsl
lods
add
sub
cmp
mov
rcrl
test
jg
jmp
jmp
lret
xchg
mov
push
std
das
inc
adc
and
lds
and
xchg
aas
xor
in
add
popf
cmp
std
stos
adc
outsb
rorb
pop
lcall
mov
cmp
and
repnz
test
mov
sbb
dec
outsl
pusha
jb
push
ss
cltd
adcl
mov
mov
lret
push
test
aam
ss
mov
scas
sbbl
nop
test
and
in
fnstenv
sbb
pop
xchg
inc
mov
andb
xor
enter
and
aad
add
adc
xchg
mov
stc
in
push
roll
xor
out
mov
and
and
jnp
lahf
decb
inc
test
ds
push
mov
gs
push
xor
sub
ja
sbb
test
cmpsb
insb
movsl
lds
pop
cli
call
jnp
xor
adc
sub
or
test
pop
add
dec
lods
imulb
mov
scas
mov
sbb
xor
add
inc
push
lds
testb
clc
jge
psllw
inc
call
mov
pop
sbb
cmp
mov
dec
repz
gs
cmp
push
jge
stos
jnp
loope
mov
inc
loopne
dec
cmp
xchg
lods
mov
int3
stos
jge
clc
inc
test
fdivrs
cmpsl
lret
cld
pop
mov
dec
jbe
push
xor
dec
mov
aas
jne
push
in
push
jmp
mov
push
stos
std
mov
out
ss
push
in
imull
test
dec
sbb
sbb
lds
mov
lcall
stos
push
adc
sbb
addr16
inc
or
fwait
mov
dec
sahf
add
or
shl
inc
leave
mov
sti
mov
cmc
repnz
es
cmp
xchg
sub
dec
enter
pop
out
ss
cmp
stos
push
mov
jmp
sbb
pusha
orl
push
stc
xor
inc
stos
dec
jp
mov
shll
shlb
mov
pop
dec
aas
inc
inc
movsl
mov
xchg
dec
inc
jno
mov
lods
push
jo
xchg
int3
ja,pn
notb
add
or
adc
pop
in
jae
inc
mov
rep
cmpsb
xor
add
test
sbb
sbb
in
vunpcklps
and
loopne
js
lock
dec
cli
mov
mov
xor
clc
xor
xchg
mov
mov
cld
xor
ja
sti
sub
cli
ss
adc
fmul
scas
adc
in
test
cmp
xor
jl
mov
stos
dec
cmc
dec
jle
fwait
ret
mov
mov
adc
xor
cld
jg
jnp
sub
fs
push
mov
and
in
test
mov
jl
pop
rclb
fs
jbe
cltd
cmpsb
lock
dec
insl
dec
lcall
into
pop
nop
lods
insl
or
sbb
je
cwtl
in
xchg
pop
mov
and
subb
pop
xchg
stos
fcoml
mov
rcl
push
mov
shrl
icebp
mov
out
out
or
mov
mov
mov
aam
aad
pop
jo
pop
hlt
mov
and
in
outsb
adc
inc
and
loopne
push
imul
lret
adc
js
push
dec
jo
cmp
data16
mov
sub
add
or
xor
call
xchg
cmp
testl
movsb
ja
outsl
xlat
jp
lods
and
inc
iret
jp
repz
sub
inc
outsb
cmp
das
adc
mov
pop
jle
cmp
inc
imul
sub
aam
mov
cmp
cmp
mov
adc
and
dec
insb
mov
lahf
pusha
mov
leave
cmp
adc
mov
sub
std
mov
mov
jbe
pop
lret
ret
roll
lcall
popf
mov
jle
fstpl
test
ret
add
cmp
mov
sub
aam
popf
push
jge
or
mov
int
jno
pop
hlt
cld
out
mov
sub
shlb
fs
mov
pop
aaa
mov
push
insl
adc
cmp
xchg
adc
pop
xchg
nop
dec
mov
mov
or
fsubr
mov
imul
mov
jbe
les
out
pop
mov
outsl
lret
or
jb
mov
xchg
stos
sbb
jl
repz
lods
out
pop
int
sbb
mov
stos
gs
leave
and
pop
sbb
bound
inc
test
mov
push
inc
cltd
jo
insl
daa
add
loope
cmp
sub
jmp
into
ret
std
xchg
mov
jno
outsb
jns
push
imul
dec
rcrb
fistps
adc
xchg
mov
out
dec
mov
pusha
ret
movsl
cmp
push
mov
popa
mov
sarl
xor
bound
pushl
movsb
push
pusha
xchg
ds
dec
mov
pop
xor
and
test
xor
insb
int3
addr16
push
test
jnp
fdiv
gs
leave
movsb
cli
xchg
pop
gs
out
daa
lods
repnz
and
imul
jle
insl
sub
in
push
sarl
xchg
mov
xor
jle
mov
ret
popf
rclb
scas
ss
fidivrs
out
xchg
push
enter
aam
adc
inc
mov
mov
mov
mov
rorb
cmp
push
pop
in
test
clc
pop
mov
sti
mov
push
push
testl
enter
xor
mov
push
fcmovne
dec
out
pop
jne
sbb
pop
fldl
sub
lea
push
in
call
or
jge
mov
ljmp
loop
xchg
enter
in
mov
popa
sbb
lcall
popa
jno
adc
popa
push
fprem
inc
sbb
cmpl
fstl
inc
sbb
loop
loop
mov
or
jecxz
clc
cmp
xchg
xchg
cli
jo
xor
adc
inc
leave
push
xor
xor
push
stc
out
test
add
hlt
push
out
mov
inc
xchg
jne
mov
rol
jbe
or
or
jno
insb
dec
insl
scas
pop
in
out
cmpsl
ss
adc
dec
sub
adc
mov
movsl
pop
push
add
cld
sub
jp
xchg
fsubrl
jbe
or
mov
outsl
cld
sbb
sbb
pushf
mov
mov
loopne
sbb
daa
inc
out
xchg
lods
std
in
and
test
xor
icebp
outsb
loop
pop
mov
or
cmc
int
pusha
arpl
adc
and
push
sbb
pop
mov
dec
xor
fbstp
fsubl
adc
clc
imul
scas
scas
mov
or
adc
adc
repz
ds
add
cmp
push
mov
data16
cltd
adc
ret
dec
cltd
clc
inc
imul
or
push
add
rolb
jno
mov
mov
into
or
mov
xchg
rorb
xchg
daa
outsl
cmpsl
mov
dec
idiv
and
pop
subb
mov
sbb
cmp
arpl
sub
add
inc
jne
outsb
jle
jmp
in
ljmp
fwait
dec
jle
shrb
mov
cmp
xchg
mov
rorb
addl
iret
adc
and
imul
add
fimuls
xchg
sub
cli
cmpsb
or
ja
gs
std
shrl
push
cmp
cli
add
jmp
mov
bound
inc
je
movsl
add
mov
dec
cmp
sti
xor
add
andb
sbb
mov
pop
sbbb
or
pop
inc
xlat
add
bound
pop
popw
jne
mov
in
sahf
repnz
push
mov
sub
pop
rclb
loope
pminub
dec
pop
sbb
pusha
out
mov
inc
stc
in
pand
pop
dec
ljmp
stos
pusha
cmp
and
sub
lret
or
outsl
adc
rep
adc
cmp
dec
daa
cmp
addb
and
in
das
es
pop
xchg
xchg
movsl
add
xchg
lcall
jo
push
push
sahf
loope
jne
sub
rep
adc
dec
or
jae
jge
adc
pop
loopne
and
cmp
mov
lahf
pusha
xchg
xchg
popf
mov
push
out
popf
lcall
inc
push
pop
rorb
mov
pop
hlt
mov
js
outsl
pushf
inc
jne
jp
jp
mov
push
rclb
adcl
mov
push
xchg
xchg
fisttpl
shrb
dec
mov
out
imul
mov
imul
mov
orl
mov
leave
mov
mov
rol
addr16
insb
sarl
fstpl
les
and
leave
orl
sbb
mov
pop
jbe
jecxz
test
mov
dec
jnp
inc
out
dec
dec
jbe
out
jo
mov
adc
aaa
add
into
inc
sbb
push
inc
push
xchg
fwait
and
mov
lcall
mulb
adc
pop
lea
lock
sahf
add
or
adc
cld
lds
out
rcrl
lahf
mov
pop
cltd
dec
pop
xchg
es
pop
das
js
pop
cmp
repz
jno
ljmp
movsb
addr16
inc
dec
repnz
pop
sub
or
cmp
mov
push
or
es
fneni(8087
sarl
sarl
and
and
out
pop
rcll
insl
fisubs
and
dec
xor
dec
cmpb
lods
inc
stc
outsl
stc
lcall
dec
inc
sub
cmp
push
and
cmp
jb
and
imul
dec
mov
jg
inc
nop
mov
scas
cmpsl
mov
imul
add
call
cli
loop
jle
jb
adc
ret
or
jnp
mov
mov
pop
or
iret
xchg
imul
mov
movb
cmp
push
mov
repnz
scas
mov
mov
cld
adc
push
fcompl
test
notrack
aam
and
xor
pop
gs
lock
pop
loopne
and
repnz
lret
xor
inc
sub
and
andb
pop
aam
aas
mov
jo
cmp
rclb
js
adc
xor
int3
xchg
sarb
test
cmp
mov
jecxz
jnp
js
int3
adc
in
mov
xor
hlt
repz
cmpsl
call
xchg
jmp
cs
repnz
icebp
mov
inc
and
add
push
or
outsb
das
push
testb
push
cmp
jno
mov
popf
pop
or
sub
rcll
mov
pop
mov
xlat
jg
mov
jne
lock
xor
add
test
scas
dec
jne
push
and
or
xchg
enter
cli
mov
jg
xor
out
outsb
andb
xor
push
loope
ror
cltd
repnz
dec
cmc
add
jg
sbb
lea
fs
ret
xchg
jbe
dec
ret
jle
std
cltd
or
xor
aad
adc
gs
add
movsl
mov
push
stos
jle
data16
xor
or
fs
lods
or
bound
call
cwtl
adc
pop
aad
xchg
stos
cmp
cs
test
push
test
rcr
movsl
or
add
call
hlt
cmpsl
dec
add
mov
lods
cltd
xchg
dec
add
sub
shll
aad
ficompl
mov
hlt
cwtl
cmovb
addr16
lret
cmp
inc
mov
loopne
xchg
icebp
pusha
xchg
xchg
loop
shll
cli
add
iret
mov
sbbl
les
xor
fucomip
sarl
xor
iret
data16
pop
inc
pop
fisubl
jae
jl
push
or
sbb
cmp
cld
cmp
stos
push
cmp
in
sub
push
call
mov
xor
xchg
mov
aam
sbb
das
add
adc
cmp
outsl
and
adc
jb
aaa
addr16
loopne
lahf
test
sbbb
jmp
lret
add
ret
mov
sub
cwtl
xchg
in
int
aas
push
jae
loopne
cmp
ss
pushf
js
mov
or
mov
mov
int
roll
jne
js
or
jge
pushf
cs
cmp
sub
stos
jg
arpl
push
push
and
inc
xor
ljmp
mov
sbb
ja
imul
push
addl
cmp
shlb
pop
mov
aad
jns
push
lfs
push
in
cmpsb
popa
clc
pop
movsb
dec
push
pop
shrl
lret
and
pop
adc
add
das
jg
ja
jle
and
xor
push
inc
push
out
mov
xor
in
mov
cmp
jnp
call
mov
and
jbe
cld
xchg
cmp
out
in
lods
push
mov
mov
push
ret
adc
movsl
lods
lcall
push
cmp
cmp
push
pushf
push
or
ret
mov
mov
sbb
pop
repz
mov
dec
in
call
mov
sub
push
icebp
mov
popl
jae
int3
shll
call
dec
lret
jbe
sbb
inc
stos
xchg
xor
inc
stc
add
and
test
scas
dec
pop
mov
lea
jg
xor
cmpsl
movsl
mov
das
movq
in
inc
mov
loop
pushl
ja
cmpsb
dec
popa
fisubrl
leave
mov
inc
imul
dec
insb
add
cmpsb
fsubr
in
imul
fmuls
adc
cltd
js
cmp
daa
fildll
sub
lahf
sbb
arpl
fldl
hlt
dec
setb
repz
in
jb
addb
ljmp
movsl
or
insb
sbb
cwtl
mov
out
arpl
int3
push
lcall
rdpmc
xchg
incb
lcall
and
movb
or
push
in
and
fsubl
bound
int
push
cmp
dec
sahf
add
mov
dec
and
loope
inc
jno
xor
pusha
repz
sbb
push
icebp
adc
popf
sub
pop
je
imul
adc
aaa
xor
test
das
xchg
loope
add
mov
cld
adc
scas
mov
inc
or
xchg
mov
bound
xchg
mov
lock
mov
cmpsb
int
outsl
test
out
lcall
and
into
hlt
popa
out
pop
aad
xchg
cs
pop
pop
dec
push
ret
sbb
ficomps
sbb
aam
out
jp
adc
cmpsb
insb
and
rclb
daa
cmpsl
ret
mov
fwait
lock
pop
inc
cwtl
xor
leave
and
cmp
repnz
jae
mov
js
fwait
mov
andb
not
push
fcomp
sub
loope
ss
sahf
enter
dec
pop
push
int
into
jecxz
sbb
sub
sbb
in
sbb
out
ljmp
pop
push
xchg
clc
dec
inc
jbe
fistl
lcall
dec
mov
xorl
jbe
xor
ja
cmp
add
test
pop
int3
or
fwait
loop
jge
sub
push
inc
scas
aaa
lahf
adc
inc
test
mov
ds
enter
cvtps2pi
mov
xor
out
mov
cmp
mov
xchg
push
and
jae
mov
and
xor
fcmovb
cmpsb
jae
xchg
fimuls
add
rcrl
mov
mov
loope
imul
dec
lret
xchg
out
pop
movaps
imul
dec
mov
insl
popf
mov
cmpsb
sub
in
push
outsl
or
in
popf
sbb
mov
int3
out
cmp
inc
or
sub
rorl
push
scas
pop
add
pop
inc
les
mov
out
xor
jae
dec
mov
sub
push
push
ret
cmp
bound
inc
push
movsb
sbb
jle
mov
cmp
cmp
or
mov
pop
imul
adc
popf
jmp
pop
out
sbb
std
dec
cli
ret
dec
mov
cltd
pop
stc
dec
pop
fisttpl
push
ja
shrl
imul
out
loop
xchg
lea
stos
fnstenv
sbb
dec
std
inc
push
jb
xchg
mov
mull
mov
imul
xor
aam
cmp
loopne
pusha
insb
fstp
push
mov
push
inc
add
or
cmp
mov
and
dec
testl
cmpsb
leave
push
xor
xchg
mov
sub
je
es
clc
jnp
mov
xchg
mov
cmp
sub
cmp
or
out
leave
ror
xchg
pushw
insl
and
shl
daa
jmp
push
ret
loopne
dec
ret
es
lea
sub
in
in
shrl
xchg
and
xor
cwtl
push
xlat
mov
ret
fcmovne
xchg
xchg
lea
stc
sub
cli
gs
cmpb
ret
call
scas
push
shl
mov
out
mov
add
scas
pop
mov
mov
hlt
xor
pop
push
call
ret
mov
pop
add
stos
outsb
lahf
popf
lods
pop
mov
call
xor
and
fsubs
jecxz
fldcw
push
mov
xor
mov
dec
stc
push
sbb
adc
cmpsl
jnp
outsb
add
add
push
test
mov
adc
das
aam
ret
cmp
das
push
push
push
ja
insl
fdivr
mov
movsl
dec
xchg
dec
xor
stos
mov
xor
fucomi
inc
mov
sub
fidivrl
mov
mov
jle
pop
jo
pop
dec
xchg
dec
in
mov
sub
push
inc
decb
or
mov
sti
adc
lds
jnp
cmp
outsb
ljmp
lea
mov
push
fdiv
push
jns
pop
push
stos
stos
sbb
ror
stc
adc
jp
jns
ljmp
orb
sub
int
popa
add
and
daa
mov
js
jg
mov
shl
das
scas
mov
or
lret
mov
loopne
and
inc
pop
enter
cmpsl
dec
in
xor
pop
xchg
in
jge
in
rorb
or
mov
sub
lds
inc
ljmp
daa
rcrl
cmpl
jno
dec
jp
push
out
mov
lcall
xchg
sbb
popf
jno
pop
mov
dec
bswap
lret
cmp
adc
movsb
pop
cmpsb
and
sub
ds
dec
repnz
or
jne
cld
ss
jns
or
enter
sarb
sbb
ret
fdivrs
adc
ds
insb
xchg
inc
and
enter
das
into
jmp
add
hlt
cs
mov
cli
mov
ja
inc
shr
mov
rcll
pop
insl
sahf
js
nop
frstor
das
jns
std
jbe
dec
imul
rorl
dec
or
jle
cmp
clc
shrb
adc
pop
cmp
fldl
repnz
in
test
or
pop
lahf
mov
and
popa
jg
mov
rcr
dec
sbb
test
fwait
or
xchg
and
loopne
clc
adc
aad
icebp
aas
xor
test
bound
enter
outsl
and
jbe
fcmovu
mov
push
pusha
stc
jle
rcrb
cmp
shrl
inc
fcomps
aad
ja
sub
ljmp
and
sub
adc
cmp
aam
push
xchg
push
push
sub
cld
decl
push
sarl
pop
xor
jmp
pop
lahf
adc
in
rclb
cwtl
or
inc
leave
and
les
adc
mov
and
sbb
mov
daa
pop
fs
filds
sahf
adc
ret
sub
out
shrl
out
xchg
cmp
dec
jg
mov
or
cld
or
fdivs
js
mov
cmpsl
sub
aam
in
or
jae
int
and
and
xor
mov
xchg
hlt
test
jns
sbb
repnz
push
in
ficoms
sbb
jno
stc
pop
xchg
out
lahf
pop
int
xchg
popf
cltd
mov
das
cmp
scas
in
lods
repnz
ret
stos
cmp
popf
sbb
nop
pop
inc
or
push
lods
push
cmpsl
mov
pop
hlt
mov
xor
dec
push
lock
jg
cmpsb
xchg
cmp
js
daa
lods
or
jecxz
inc
lds
mov
cld
or
adc
lahf
enter
cmp
and
mov
inc
jge
imul
gs
inc
pop
shlb
jae
notb
mov
mov
cmpsb
push
cltd
lock
mov
daa
and
adcl
gs
push
fwait
lock
jecxz
and
mov
dec
pop
xor
xchg
or
stos
inc
cmpsl
fwait
sbb
lret
loopne
push
and
stos
cmpsl
fldt
jmp
jmp
mull
scas
fwait
pop
xchg
inc
lcall
stos
shl
inc
push
xchg
push
int
cmp
insl
mov
ds
outsl
js
push
sarl
fmul
inc
push
es
fists
jecxz
add
jne
lods
mov
adc
and
scas
rcl
cmpb
jmp
jae
lods
xor
sbb
popa
jmp
in
push
xchg
jb
test
lock
jo
in
pusha
and
push
dec
arpl
test
push
sub
enter
shlb
xchg
das
fwait
inc
sbb
mov
xchg
push
mov
push
xchg
add
es
leave
xchg
mov
inc
cli
jb
jo
mul
aam
popa
sti
lret
pop
and
sahf
sbb
jne
arpl
cltd
xchg
test
add
pop
mov
adc
aad
dec
je
cmpsl
mov
in
jecxz
popf
push
jmp
push
out
out
adc
adc
and
sbb
inc
frstor
pop
adc
xor
mov
add
sbb
adc
es
jg
test
dec
xlat
jg
mov
xor
mov
pop
test
js
les
mov
push
std
in
inc
sahf
cmp
adc
add
enter
cmp
not
shlb
jle
in
jecxz
sbb
mov
enter
jne
xor
sahf
push
or
stc
cltd
negl
pop
inc
or
xchg
xor
mov
lret
ret
add
jno
rcrl
lds
mov
jecxz
jo
add
orl
mov
into
in
shlb
lret
arpl
xchg
mov
mov
inc
push
fs
jmp
sbb
sbb
cmc
test
lock
sahf
outsl
sub
pop
xchg
cld
jbe
outsb
push
sbb
cld
ficompl
mov
sub
data16
mov
sbb
call
scas
mov
rcrb
push
cmpsb
xchg
mov
dec
dec
mov
lds
xchg
sbb
data16
pop
addr16
pop
int
mov
mov
aas
and
push
and
jmp
inc
int3
js
push
inc
mov
ja
shll
sbb
test
call
scas
jns
push
mov
rorb
leave
jl
nop
movsl
cwtl
iret
mov
pop
aas
cltd
mov
iret
scas
insl
ja
aaa
pop
dec
mov
lret
imul
insl
pop
xor
add
xor
or
test
mov
das
add
adc
xor
loop
xor
xlat
sbb
out
fistps
lods
lcall
jae
imull
push
ljmp
outsl
cld
lods
push
hlt
push
mov
pop
arpl
sub
jno
mov
aad
mov
das
adc
sbb
aam
sub
outsl
sti
daa
inc
gs
imul
or
sbb
sbb
add
aaa
adc
pop
fldenv
imul
imul
xchg
push
mov
insl
sti
sarb
imul
pop
movsl
lds
sub
xor
mov
push
xchg
divb
inc
jns
sbb
outsb
sub
xchg
ljmp
ret
nop
cmp
mov
jns
in
or
cmpsl
test
movsb
xchg
mov
lods
mov
adc
jne
out
mov
les
cltd
adc
movsl
push
sti
sub
pop
rorb
mov
push
xor
aas
clc
subb
cli
jns
mov
lahf
or
pop
push
lret
shrb
jmp
jp
cmc
fistpl
cli
mov
inc
into
fs
popa
adc
and
fstpt
push
xchg
out
roll
inc
jns
pop
int3
jle
filds
aaa
icebp
pop
mov
enter
pusha
mov
mov
inc
fs
dec
push
ds
decb
mov
test
scas
jge
out
jbe
into
sbb
hlt
mov
subb
ss
fwait
jecxz
daa
or
xorb
cmp
gs
test
fsubs
sbb
dec
fdivs
lret
fld
sub
clc
sbb
push
scas
outsl
out
add
clc
imul
fs
mov
notl
pop
fld
lret
cmc
aad
imul
jb
stos
in
inc
xor
mov
mov
push
cmc
mov
lret
push
xchg
lods
mov
ljmp
fwait
push
outsl
mov
dec
jmp
sbb
mov
scas
mov
add
pop
pop
scas
dec
imul
and
addr16
in
xlat
shlb
movsl
dec
fnstenv
mov
xchg
sbb
xchg
add
inc
into
int
mov
ljmp
and
jmp
and
jno
ret
inc
pop
push
mov
cld
xchg
pop
dec
cmp
jne
out
ds
cld
mov
sti
pushl
push
push
and
mov
fucomip
in
or
inc
mov
jno
inc
aad
test
mov
das
add
cmp
data16
cwtl
orb
cmc
mov
add
add
ja
cli
rcrl
data16
add
sti
add
inc
repnz
outsl
aam
data16
mov
daa
pop
xor
test
rorb
fabs
push
sti
pop
das
sub
push
adc
subb
jnp
lock
nop
mov
push
jae
push
out
pushf
cmp
jo,pn
cmpsl
repnz
inc
cmp
aas
push
ljmp
inc
inc
or
add
jecxz
sarl
or
cmp
add
addb
add
push
dec
mov
addr16
inc
pushf
mov
xchg
mov
xor
add
jmp
jo
js
js
push
mov
test
or
sub
jle
jge
es
mov
jmp
shl
fadds
add
insb
or
or
les
jecxz
leave
fisttpll
push
mov
ja
mov
pop
pop
insb
inc
or
or
jp
bound
or
sub
jns
sbb
test
adc
or
inc
sub
push
dec
decb
clc
sub
adc
aaa
test
mov
jb
les
jmp
les
repz
lret
mov
aaa
jecxz
jp
cmc
pop
push
jno
daa
in
shlb
cld
stos
adc
xchg
sbb
adc
ss
movsb
hlt
push
xchg
in
pushf
mov
lcall
jnp
lret
jecxz
sub
xor
pop
push
rcrb
adc
xor
cli
in
mov
adc
ds
movsb
les
mov
test
dec
imul
sub
roll
shlb
ficomps
mov
lret
sub
test
sub
or
or
push
clc
out
push
cmp
sub
aam
sub
xchg
mov
and
push
adc
xchg
out
sub
jb
cmp
xor
pop
jle
mov
mov
pop
jne
xor
mov
daa
ret
test
divl
sbb
leave
or
stc
jae
test
xor
xlat
xlat
sahf
add
cmc
lock
je
xchg
and
divl
rcrb
in
int
xor
pop
sbb
ret
arpl
inc
leave
inc
lret
pop
popf
sbb
jmp
cmp
xor
sbb
cmp
jg
pop
sarb
adc
jecxz
pop
adc
lods
xchg
int
js
sbb
mov
push
push
cli
mov
ffree
fs
xchg
xchg
repz
cwtl
xor
pop
mov
fwait
out
jae
ds
lea
mov
movsl
jbe
jp
cmp
sti
jo
movsl
test
inc
gs
into
lock
dec
jl
mov
hlt
cmp
mov
ss
lret
mov
sbb
sbb
lods
stos
jp
loop
xor
rcll
lcall
xor
daa
int
add
lcall
mov
aaa
out
addr16
mov
mov
adc
sahf
push
fwait
arpl
mov
and
xchg
adc
or
rcr
push
pop
cmp
test
dec
ja
shrb
jp
pop
cmp
inc
xchg
inc
xor
cmp
xor
roll
sti
lcall
cli
mov
jl
jae
std
fcompl
outsb
pop
sahf
and
arpl
rep
movsb
add
insl
xchg
daa
cld
into
dec
pop
sub
mov
in
pop
xor
jo
mov
mov
out
jno
push
push
rcl
jbe
push
test
pop
sub
loop
in
out
pop
pop
jnp
out
sub
jns
pop
dec
jne
mov
std
sub
bnd
push
sbb
outsl
push
sarb
ret
dec
dec
xchg
sub
test
ds
test
cmp
out
lods
mov
xchg
add
jno
push
or
inc
dec
pop
mov
sub
pop
sbb
cld
lock
aas
lock
push
into
sbb
adc
jmp
push
add
ljmp
popf
insl
mov
dec
scas
and
clc
bound
sar
jbe
popa
pop
push
cmp
sub
adc
xchg
push
scas
mov
dec
sub
and
fildll
push
sahf
pop
outsl
push
dec
push
xchg
pop
je
das
testl
sub
push
aas
cmp
ret
test
mov
pop
mov
fldenv
jg
into
das
mov
lcall
test
lds
in
sbb
outsl
scas
mov
mov
cmp
jl
sbb
es
ja
pop
call
in
fwait
sub
fdivl
mov
fildl
aad
push
ja
lahf
dec
jg
int
fcmovnbe
push
fiadds
sub
test
xchg
sub
xorb
and
rcrl
or
shll
mov
sbb
xor
mov
pop
push
lea
popf
sbb
pop
int3
cmp
mov
mov
cli
mov
mov
sbb
leave
fsubrs
adcl
and
imul
push
test
ret
jle
jle
fs
and
mov
mov
popa
inc
and
ss
imul
lahf
sub
and
inc
inc
in
sbb
out
ds
mov
ror
in
xlat
xchg
fidivrs
ret
lock
xchg
jl
jae
and
pop
out
sub
cmpsl
lods
jecxz
ret
ror
pop
fidivs
fsub
adc
and
jmp
dec
fucompp
mov
cmpsl
popa
mov
div
or
lods
mov
inc
jo
cmpsb
mov
dec
std
aad
sbb
pop
clc
fs
jbe
sbb
jno
mov
mov
sub
adc
pop
cmc
mov
mov
test
and
fwait
push
jbe
jle
out
test
andb
movl
adc
mov
inc
ror
push
cmovne
push
or
adc
push
cltd
pop
data16
fmul
push
jnp,pt
addr16
inc
in
inc
lock
jne
aaa
ljmp
or
test
iret
inc
pop
orl
mov
push
int3
mov
ret
stos
cld
xor
insb
loope
out
cli
xchg
xchg
dec
icebp
cltd
push
popl
jne
jp
adc
pusha
xor
andl
jns
pop
add
dec
sahf
sub
jle
ds
mov
pop
icebp
sti
jle
pop
push
fucompp
xlat
jne
jl
pop
inc
pusha
xchg
ss
out
inc
cli
add
mov
into
inc
out
out
inc
addl
pop
dec
xor
xor
cli
fcomip
cmp
push
dec
inc
mov
dec
ss
faddl
dec
mov
xor
addr16
xorb
adc
cmp
lock
jb
xlat
cwtl
ret
in
sbb
adc
jle
mov
mov
jl
xchg
insl
mov
ja
aas
mov
xor
daa
xor
out
into
loope
out
jmp
mov
push
mov
mov
push
pop
xchg
decl
cmp
pop
out
out
mov
mov
ret
out
sbb
bound
sub
mov
jmp
mov
rep
shll
jnp
adc
pop
ret
push
lods
out
gs
adc
sahf
cltd
mull
sub
lods
mov
or
loop
call
cmpl
jecxz
faddl
and
sahf
sub
movsl
lret
gs
test
loop
jecxz
test
nop
call
mov
shll
cmpsb
mov
push
sbb
sub
or
and
and
les
iret
dec
pop
or
pop
push
adc
shrl
in
ret
int3
mov
sbb
mov
test
in
lcall
mov
bound
cltd
dec
dec
mov
or
mov
jge
sbb
fidivs
or
fbstp
ja
jns
cmc
lds
sbb
pop
stc
sbb
out
pushf
mov
xor
dec
xchg
cwtl
sti
fcmovnb
pop
or
push
add
hlt
or
mov
mov
sbbb
int3
and
cmc
outsb
aas
adc
push
dec
shrl
xchg
fcomi
loope
push
hlt
std
dec
dec
clc
mov
mov
jo,pn
and
push
push
or
jno
xor
jg
fdivp
bnd
inc
fwait
lock
fdivs
push
xchg
adc
sbb
shlb
sbb
cmpb
add
in
xor
push
scas
ret
mov
add
or
rorl
mov
mov
dec
cmp
mov
xchg
lret
and
mov
xlat
fstps
icebp
cltd
pop
and
mov
clc
xchg
scas
int3
negb
clc
adcl
push
icebp
add
xlat
mov
cmp
jl
enter
dec
mov
xchg
adc
adc
pop
mov
into
jae
stos
loop
sti
inc
out
ds
mov
lock
mov
sbbb
sub
xchg
test
sub
into
cwtl
adc
pop
fldl
js
and
sbbl
push
mov
mov
jae
js
test
xchg
int3
push
and
enter
icebp
add
pushf
lds
sub
pop
lahf
stos
pop
out
xchg
dec
push
movsl
in
inc
js
nop
mov
movsb
fsubs
aas
cmp
fwait
sbb
fstl
lods
and
add
cmp
jbe
or
adc
or
pop
sbb
sbb
add
add
cmp
jno
test
and
push
mov
mov
popf
xchg
cmp
sub
out
dec
sti
fiaddl
push
rcrl
shl
mov
pop
cld
sub
fstpl
mov
push
les
std
pusha
pop
lods
xchg
xchg
fcmovbe
out
lea
out
jg
cmpsb
cwtl
sarl
fdivs
ja
add
jp
xchg
cmpsb
pusha
pop
xchg
mov
out
popf
xchg
xchg
in
fcoml
or
fisubrl
lret
fcmovnbe
or
inc
iret
outsl
cli
popl
mov
mov
mov
push
cmp
aad
test
scas
pusha
test
cli
jno
pop
popa
push
push
cmc
mov
inc
pop
loopne
mov
nop
mov
add
bound
lock
loopne
pushf
cwtl
cmpsl
dec
mov
sbb
das
pop
mov
das
sub
lret
in
test
mov
lods
push
loopne
insb
push
movsl
leave
inc
sub
aad
add
jnp
pop
icebp
sub
mov
pop
insl
andb
pusha
in
test
xchg
pop
sarb
pop
ret
pop
btc
inc
imulb
fs
lcall
rorb
inc
out
xchg
or
lods
mov
stc
mov
outsb
je
das
mov
jle
xor
or
push
jb
les
addr16
inc
xor
add
lahf
xchg
adc
mov
and
pop
stc
imul
add
push
mov
pop
and
test
or
cmp
jp
mov
inc
adc
or
idivl
mov
sub
push
or
inc
or
imul
or
pushf
push
ss
adc
xchg
lods
pusha
and
push
lret
jae
and
xchg
add
xchg
imul
sub
push
stos
imul
push
adc
out
pop
pop
jns
cmpsb
and
or
in
pop
mov
rolb
mov
cmp
ret
popf
dec
sbb
fwait
cmp
lods
cmp
fmul
addr16
iret
cld
xchg
mov
mov
mov
mov
sub
and
mov
dec
int
push
jb
dec
xchg
jnp
inc
cmc
lret
mov
push
xchg
pop
pop
dec
scas
xor
test
cmp
pop
imul
mov
cmp
jle
call
inc
shll
int
mov
adc
cmp
arpl
inc
scas
stc
sub
add
das
jle
arpl
jns
xor
inc
mov
cli
mov
add
stos
mov
jle
es
rcll
jge
mov
pop
aam
hlt
and
rclb
lcall
lret
ds
icebp
adc
aam
ja
aaa
and
subb
jae
fadd
mov
cmc
pop
add
sub
sub
ret
mov
cmp
and
sub
adc
sub
sbb
and
into
lock
adc
ds
fwait
xchg
lods
ljmp
xor
data16
enter
pop
fidivrl
loope
fistpll
cmpsb
xor
or
xorb
scas
dec
push
sahf
in
popa
adc
lods
fwait
cmp
cmp
mov
push
lcall
js
sub
test
fs
fsts
ja
hlt
mov
hlt
cld
mov
lcall
pop
and
aaa
movb
subb
cmc
ret
stc
mov
and
es
leave
jp
cwtl
stc
cmpl
jp
inc
mov
repz
push
or
pop
lods
sbb
rorb
adcb
fs
jp
jmp
mov
cmp
add
adc
or
push
mov
jge
cwtl
push
dec
fs
aad
push
push
in
push
jge
cmpsl
mov
popa
and
adc
fisubs
jnp
cmc
rcll
movsb
lret
fildll
icebp
iret
or
add
lret
pop
mov
addb
es
and
int
pop
xchg
scas
data16
push
or
rcl
mov
stos
addr16
jno
xor
mov
stos
and
xchg
gs
push
xor
sub
jb
daa
fsub
cmp
jbe
fwait
inc
and
int3
incl
jne
aam
cmovbe
test
in
fisubl
testb
ljmp
push
call
xchg
or
in
ret
fldenv
pop
mov
in
movsl
dec
ret
mov
iret
loop
daa
sahf
divl
xchg
push
scas
ret
lcall
cwtl
jno
pop
ds
push
pop
repz
mov
in
sbb
sub
out
fnstcw
adc
inc
dec
jg
cmp
ja
iret
movsb
stc
sub
popa
aad
mov
imul
out
iret
out
mov
sbbb
dec
bound
xchg
pop
insl
add
fistps
das
arpl
popf
mov
dec
cmp
nop
add
pop
push
js
mov
mov
xchg
clc
bound
fucomi
inc
imul
push
xlat
rorl
fdiv
push
and
adc
std
addl
pop
orl
jle
cltd
filds
cwtl
testl
push
sub
in
sub
and
fcomps
and
or
test
push
cmc
outsb
add
pop
das
sbb
addr16
adc
scas
fs
mov
push
jge
fistpll
and
aaa
enter
fiadds
mov
and
push
nop
add
inc
scas
mov
mov
cmp
nop
push
fwait
leave
insb
fcoms
outsl
pushfw
je
sub
push
insl
dec
mov
sbb
ret
push
dec
aaa
imul
movsb
icebp
movsb
popf
dec
lods
or
push
lcall
in
stos
out
cmpl
fdivrs
push
int
pusha
fwait
push
adc
xchg
mov
shll
sbbb
imul
pop
jg
mov
and
lds
lahf
jno
sbb
pop
and
xlat
jmp
mov
mov
daa
outsl
dec
push
push
pop
mov
shll
sbb
iret
cwtl
ficoml
dec
xor
rclb
cmp
xorl
lock
pop
push
into
shll
sbb
movsl
or
fstpt
mov
add
pop
leave
xchg
adc
xchg
sbb
add
dec
adc
dec
addb
xchg
int3
mov
or
mov
mov
mov
sbbb
mov
shrb
iret
xor
cmp
lock
aad
sbb
scas
stos
std
or
lgs
int3
idivl
push
or
sub
cs
cltd
popf
push
negb
fs
inc
push
and
aas
cmpsl
sti
movsl
xor
dec
cmpsl
push
jmp
add
pop
fidivrs
popf
pop
push
jnp
mov
sti
pushf
adcb
push
or
movsb
xor
shl
inc
inc
test
in
cmpsl
xorl
gs
leave
adc
inc
dec
leave
fucom
mov
mov
inc
ljmp
stos
inc
fimuls
mov
in
jns
sub
into
fldenv
in
imul
sti
and
add
rorb
xchg
icebp
jns
pop
mov
inc
gs
pop
iret
inc
mov
xor
xchg
js
and
cmpsb
scas
adc
dec
jnp
std
scas
jle
xchg
jle
dec
mov
jle
cmp
mov
xlat
aas
bound
std
fstpt
outsb
and
push
mov
mov
scas
dec
lods
out
or
mov
xor
negl
push
sarb
jge
pop
sub
mov
lds
rcrb
push
aaa
int3
mov
adc
cwtl
imul
loopne
aam
std
jl
cwtl
jo
out
sti
add
shlb
sbb
popa
ret
sub
inc
mov
xor
jle
lahf
adc
mov
cmc
clc
mov
iret
xchg
das
out
lcall
in
aas
scas
push
adc
and
rep
adc
add
fldenv
sbb
in
add
sub
cmpl
push
fcoms
inc
mov
push
and
rcll
les
loop
cmp
sarb
cmp
or
js
pop
push
and
xchg
push
dec
push
add
push
ret
pop
dec
cli
nop
fistpl
pop
and
cmp
cli
or
out
je
hlt
enter
test
jno
icebp
mov
push
mov
xor
fdivl
out
lret
xchg
mov
fsts
push
mov
fdivrl
movsb
jnp
and
in
imull
cmp
mov
push
shlb
das
cmp
mov
xchg
cmpsl
mov
fldln2
jle
and
cli
or
push
scas
sbb
mov
pusha
cmp
enter
imull
sub
dec
ja
stc
mov
sbb
loope
inc
push
mov
stos
sub
in
aas
icebp
in
adc
scas
pop
imul
mov
sarl
insb
andl
sbb
jge
jae
or
adc
shrl
adc
shll
xchg
scas
iret
ds
mov
int3
icebp
lea
push
sbb
jns
test
mov
mov
lods
jo
jbe
mov
dec
jo
shl
fxtract
pop
stos
jbe
shll
adc
hlt
imul
hlt
xor
lods
fstl
rorl
ret
nop
jg
or
dec
adc
mov
push
mov
cs
out
lds
insb
jp
je
pop
adc
test
add
push
xor
sub
pop
aas
lret
fs
in
lcall
cli
mov
mov
xchg
sub
mov
test
jo
inc
jne
or
and
dec
popa
pop
repnz
or
adcl
xor
ljmp
jae
xchg
cwtl
xchg
xchg
jmp
cmp
inc
lahf
xchg
je
pushf
add
es
mov
xor
fildll
mov
pusha
sbb
and
fs
fs
inc
inc
nop
sub
enter
rol
out
pop
jp
ret
inc
repz
pop
insl
repnz
stc
movsl
push
jmp
xchg
mov
out
insl
movsl
icebp
jne
jae
gs
and
xor
dec
imul
outsb
stc
dec
imul
hlt
in
add
add
ljmp
inc
or
inc
and
and
mov
inc
mov
inc
iret
aaa
and
rcl
loopne
mov
test
adc
or
js
mov
arpl
jo
jae
xchg
sahf
les
rclb
shlb
out
aaa
cmp
dec
into
push
dec
repz
add
xchg
out
inc
mov
and
cltd
cmp
push
cmp
loopne
sub
pop
loop
mov
mov
repz
dec
adc
cmp
push
movsl
mov
bound
sub
mov
xchg
sarl
cmova
mov
dec
xchg
and
xchg
xchg
shlb
lods
xor
push
cmp
pop
test
fstps
lods
inc
xor
adc
sub
shlb
dec
mov
cmp
enter
dec
inc
mov
sar
mov
jg
and
ja
call
outsl
and
cmp
jmp
lock
notb
mov
adc
pop
out
lcall
lods
push
sbb
xor
loope
fnsave
in
mov
mov
fs
ljmp
mov
dec
data16
mov
das
popa
mov
shrb
stos
call
add
sub
out
lcall
jb
addl
mov
rorb
add
pop
ljmp
addr16
aas
pusha
aaa
pop
xchg
add
inc
jno
add
push
aas
inc
mov
jne
sbb
rcrb
jbe
lods
cs
ret
movsb
outsl
cmp
cmc
loopne
or
out
ljmp
out
pusha
cmpsl
mov
mov
pop
shl
mov
imul
pop
mov
add
pop
xchg
add
mov
outsl
push
add
gs
mov
insb
pop
push
int
ret
pusha
outsl
push
pusha
dec
mov
mov
and
inc
testl
jle
and
mov
lock
pop
into
leave
sbb
data16
int3
pop
pop
mov
cltd
mov
inc
add
inc
dec
add
test
pop
jge
ja
jno
das
mov
stos
subl
push
fsts
les
add
mov
pop
in
jns
repz
shrl
adc
cmp
push
or
add
jne
sbb
push
dec
add
pop
ret
add
int
or
loop
mov
subb
pop
add
pop
add
loop
add
ljmp
inc
stos
inc
push
sarb
mov
adc
int3
int3
xchg
mov
push
lret
lcall
inc
dec
popa
adc
xlat
adc
or
pop
imul
stc
rcl
pop
dec
mov
xor
js
xor
je
mov
pop
push
shlb
or
xchg
cli
mulb
nop
gs
sbb
sub
push
mov
dec
mull
out
dec
sbb
dec
push
adc
rorl
ja
fstpt
gs
sbb
hlt
pop
mov
in
hlt
adc
cmp
cmpsb
dec
pusha
mov
bound
mov
ds
dec
xchg
inc
ret
imul
cmp
shll
xchg
rclb
popa
dec
flds
push
push
sub
je
xchg
inc
test
shll
adc
push
inc
sub
test
adc
xchg
lahf
mov
lea
subl
lock
aaa
mov
ret
repnz
jae
imul
leave
push
out
pop
xor
xor
mov
mov
lcall
mov
in
js
cmpb
inc
sbb
mov
stc
mov
gs
add
jnp
out
arpl
inc
or
or
pop
ss
push
jno
mov
sbb
mov
nop
cld
sub
lret
mov
fisttpll
cmp
mov
dec
xchg
test
xor
fidivrl
dec
dec
adc
popa
xchg
inc
int3
mull
add
mov
jl
pushf
mov
ret
push
fwait
inc
adc
adcl
test
mov
jnp
sahf
cli
sbbl
mov
popf
xlat
jecxz
sub
add
pop
cs
dec
push
sbb
lret
and
fiadds
sbb
mov
push
mov
adc
or
pusha
sbb
sbb
and
xchg
push
test
insb
push
push
cmpsl
inc
ds
ret
pop
mov
or
stos
mov
sub
adc
inc
popf
arpl
cli
repz
hlt
push
syscall
mov
mov
xor
dec
jecxz
pop
push
sbb
aaa
ss
dec
push
inc
dec
nop
add
xchg
sbb
insl
xchg
movsl
stc
sub
xchg
popf
sbb
mov
movsb
mov
call
outsl
aam
push
shl
enter
or
sbb
xor
xchg
or
mov
enter
hlt
mov
lret
jecxz
xchg
dec
or
cwtl
sbb
sub
inc
cmpsb
out
and
incb
cmp
cmpl
pop
push
movsb
mov
pusha
mov
inc
mov
cmp
cmp
push
das
fs
mov
popa
fwait
andb
or
adcl
mov
mov
mov
push
mov
mov
shr
test
and
push
imul
das
pushf
ds
jg
dec
ds
add
cmp
push
dec
lods
xchg
and
xlat
test
and
or
dec
mov
sti
fldt
fisttpll
xchg
rorb
gs
rcrl
in
mov
ljmp
mov
adc
pop
xchg
xchg
sub
test
test
mov
jno
sub
in
sbb
mov
mov
cmp
std
imul
lds
push
dec
push
mov
lock
movsb
lock
fdivs
xor
mov
push
inc
push
mov
pop
aas
xchg
pop
inc
add
in
and
cmp
add
jns
lea
sti
dec
and
popa
stos
and
fiadds
sub
repz
repz
js
test
dec
int3
push
popa
lods
or
and
sub
call
scas
sti
mov
mov
mov
gs
mov
cmp
stos
inc
mov
sbb
aas
pop
insl
dec
pop
mull
aaa
mov
xchg
lods
push
pushf
enter
imul
dec
into
psllq
lds
pop
popa
pop
lcall
vmread
arpl
sub
lea
mov
dec
shl
stos
cli
mov
inc
sub
loop
shrl
into
xchg
add
lds
lahf
sub
iret
xchg
mov
xchg
mov
push
push
mov
jne
xor
cltd
xor
push
mov
mov
adc
sbb
jnp
outsl
mov
jb
xchg
stos
test
sbb
enter
pop
inc
lods
and
jne
or
xor
lret
adc
jp
loopne
sub
sub
arpl
jbe
xchg
loope
inc
mov
jb
sbb
ficomps
jnp
ret
pop
inc
inc
stos
out
pusha
xor
or
mov
std
imul
fcoml
inc
pop
sti
iret
jno
nop
pop
je
dec
movsb
sub
enter
daa
das
jo
clc
mov
cmpsb
add
in
mov
jmp
enter
rorb
sub
pop
sahf
cmp
mov
adc
in
inc
pop
xchg
insb
orl
and
adc
xchg
ss
mov
das
mov
jmp
mov
jo
cmp
mov
bound
mov
adc
push
insb
movsl
mov
mov
aad
sbb
inc
sarl
shrl
push
enter
jl
hlt
sbbb
les
mov
notl
out
js
aam
push
les
or
int
add
sarb
push
cmp
cmp
jle,pt
je
aas
es
or
sbbb
mov
leave
sub
push
xor
into
jbe
rol
dec
fwait
or
cmpsl
pop
stos
jns
out
push
imulb
and
or
es
sbb
ds
rcr
test
xor
lods
ja
pusha
call
in
mov
les
lret
cmp
mov
mov
push
pop
sbb
xchg
ja
insl
push
and
cmp
insb
movsb
hlt
inc
dec
mov
adc
mov
imulb
ss
pop
int
dec
push
pop
push
cltd
jno
clc
pop
inc
ja
test
pop
stc
sbb
sbb
stos
mov
cs
xor
inc
push
movsl
lds
fldenv
lret
xchg
mov
jb
cmp
inc
popa
leave
cmp
repz
movsb
pop
out
dec
pop
or
lods
pop
je
pop
movsl
adc
push
lds
call
or
or
cltd
cltd
outsl
cmp
dec
cmpl
gs
mov
inc
out
movsl
jge
mov
and
push
dec
jo
inc
ffreep
xchg
mov
arpl
adc
sub
dec
sub
mov
jbe
dec
lock
cmp
ret
cmpsb
sbb
pop
lods
imul
jp
scas
mov
pushf
sub
mov
movsl
adc
xor
notl
shlb
jbe
imull
psubb
xor
xor
push
cli
xchg
data16
enter
and
cs
aam
test
push
push
lret
xor
mov
xor
negl
sbb
cld
cltd
cmpsb
cmpsl
xchg
cwtl
imul
aaa
mov
mov
in
sbb
je
inc
xorl
mov
sub
rcrb
stos
cmp
jle
idivl
sbbl
mov
jns
push
sahf
fdivr
or
sahf
scas
lds
or
shrl
aaa
mov
jbe
in
mov
xchg
inc
out
adc
add
inc
cld
movsl
inc
ljmp
incb
inc
cmp
test
lds
leave
pop
push
inc
sbb
jg
xchg
sub
xor
pop
shrl
gs
and
movb
cld
or
push
neg
jne
fs
add
mov
add
xor
fmuls
movsl
dec
out
mov
idivb
xchg
push
sub
sbb
pop
push
mov
adcb
pop
and
mov
loop
xchg
push
xchg
sub
or
xchg
popa
repnz
add
xor
fcoms
mov
mov
push
pop
fbstp
lea
rol
cmp
jb
mov
mov
dec
sub
aaa
mov
lea
lahf
adc
popf
movsl
cmp
lsl
leave
ja
pop
inc
fcoms
dec
lods
gs
les
dec
lods
bound
jns
pcmpeqd
mov
orl
mov
movsl
adc
and
add
stc
inc
cs
cltd
push
push
lods
movsl
in
jp
sahf
aam
ja
les
adc
fstps
in
xchg
popa
loop
movsl
inc
xor
mov
sbb
lcall
or
xor
xor
scas
pop
pop
je
loop
push
call
in
dec
or
lret
pop
mov
xchg
sbb
mov
lret
cli
cmp
xor
cltd
jmp
stos
mov
ret
mov
xchg
fstl
aas
sbb
xor
lods
jae
inc
mov
push
stos
or
xchg
sub
xchg
lret
rorb
xor
nop
mov
lsl
sbb
or
rcr
outsl
mov
adc
xchg
xchg
in
orb
arpl
stc
jnp
test
ds
inc
ret
leave
push
lock
or
cmp
in
das
aad
xchg
push
inc
xchg
cltd
mov
clc
popa
mov
mov
pop
xor
inc
testl
cmpsb
sti
inc
repnz
inc
add
inc
pusha
rcll
lock
call
scas
into
sbb
cmp
dec
xlat
inc
imul
out
cmpsl
inc
jnp
add
push
movl
dec
dec
mov
sti
xor
scas
inc
mov
mov
push
xor
pop
push
jle
data16
scas
repnz
xchg
cmpl
sbbl
mov
mov
mov
push
xor
mov
shl
jns
roll
xor
xor
ljmp
sti
je
or
add
add
pop
lcall
lea
cwtl
push
movsb
mov
add
push
les
dec
aas
cltd
fadds
xor
in
iret
or
insl
out
dec
aas
lret
loope
mov
inc
mov
fbstp
mov
in
xor
jcxz
mov
sti
jmp
sub
jnp
bound
sub
push
fsubrl
pusha
add
cmp
sbbb
insl
movsl
dec
ds
or
and
xchg
xchg
std
or
mov
push
in
addl
cli
cmp
sbb
pop
les
cmp
jmp
mov
fs
rcrb
push
sti
push
or
test
data16
sbb
sbb
fimull
mov
xorb
pop
lea
shrb
jne
xor
adc
iret
iret
add
imul
xchg
and
cwtl
inc
mov
jo
shll
add
sub
movb
xchg
aam
dec
insb
ror
or
scas
rol
stos
pop
push
add
jno
mov
xchg
lahf
clc
jle
jmp
nop
sub
cli
jge
pop
fmuls
inc
sarl
in
xchg
sbb
icebp
pusha
and
xchg
or
pop
adc
hlt
cmp
stos
jnp
or
ss
js
mov
lahf
sbb
sbb
sub
lcall
xchg
cld
xchg
es
fisubs
into
jne
fdivrl
popa
mov
jns
inc
test
sub
pop
dec
incb
mov
jno
push
data16
xorb
inc
int
ss
sbb
test
pop
andb
lahf
arpl
and
leave
xor
loope
aas
mov
mov
and
sub
push
stc
mov
cwtl
push
pop
fistl
shl
rcr
mov
sbb
sbb
push
push
push
and
ds
jns
xchg
sbb
push
cmp
rorl
dec
jecxz
pusha
xor
mov
lret
cmc
jnp
jb
rcr
push
lds
mov
sbb
or
xrelease
mov
shlb
or
test
jns
pop
jmp
xchg
pushf
roll
pop
jnp
out
enter
addr16
xor
outsb
stc
fisttpll
xchg
adcb
mov
rcl
or
inc
sub
gs
insb
into
es
insl
loope
lret
imul
jp
sbb
lgs
repnz
arpl
cmp
pop
lods
dec
ss
and
mov
xchg
add
jno
mov
sub
in
cmp
lcall
and
mov
jne
outsb
lcall
mov
ret
jnp
mov
in
aad
push
aaa
jbe
fadds
mov
fsubl
fldenv
ja
cld
loop
lahf
xchg
cmp
pop
inc
adc
aad
ds
inc
mov
mov
add
cmp
movsb
lods
dec
jp
and
sub
jnp
add
scas
push
sarl
jns
daa
add
jo
in
cwtl
loop
rcll
jae
pusha
inc
xorb
pop
add
cmp
mov
jp
jo
leave
jge
pushf
cmp
adc
jg
inc
jno
mov
pushf
pop
icebp
sahf
loope
lcall
mov
cli
adc
dec
shlb
ljmp
es
lcall
clc
mov
dec
jl
fwait
mov
fiadds
aas
je
dec
inc
cmp
push
and
sbb
dec
pop
push
imul
add
pop
in
add
ret
clc
popa
push
mov
mov
mov
shl
lods
into
sub
jle
push
xchg
sub
or
leave
and
nop
test
scas
sub
call
pushf
clc
stos
add
in
orl
mov
stc
mov
pop
js
icebp
mov
push
call
lds
mov
mov
xchg
retw
push
dec
adc
in
test
mov
fs
test
aas
dec
inc
mov
cmp
int
xchg
add
mov
push
pop
pop
inc
mov
or
cmpsl
dec
mov
in
cld
test
std
ljmp
arpl
pop
push
movsl
fcompl
lods
or
dec
lds
ret
test
push
xor
jnp
fnstsw
mov
xchg
push
mov
jge
push
imul
mov
or
mov
clc
icebp
mov
scas
cmpsb
jno
sbb
inc
pop
mov
sbb
bound
insb
push
xchg
dec
lds
mov
xchg
push
dec
sbb
sbb
outsb
loop
addr16
aad
int
pop
add
cmp
pop
int3
adc
repz
fwait
push
jo
jge
pop
ret
xchg
dec
sbb
sub
xchg
jno
lds
cwtl
add
loope
push
mov
sti
xor
pop
int
push
mov
adc
clc
xchg
pop
lcall
and
negl
inc
jle
cmp
sub
es
aam
xchg
test
inc
push
js
cmp
out
pop
cmp
scas
in
push
test
push
in
imul
daa
xchg
in
inc
and
cld
pop
mov
scas
pop
jge
lret
mov
inc
inc
mov
sub
cltd
inc
mov
inc
mov
fst
jg
movsb
cld
inc
les
xor
fidivl
out
cmp
insb
flds
mov
movsl
cmpsl
xlat
shlb
dec
fs
push
jle
mov
mov
jl
sub
xchg
int
push
ss
dec
push
int3
test
dec
xchg
call
jne
mov
ljmp
push
pop
sarl
lods
pop
ds
scas
lods
lods
xor
in
push
add
gs
or
or
int
into
cwtl
add
sub
and
xchg
push
pop
adc
stos
xchg
cmp
pop
fsubs
pop
test
clc
push
aaa
mov
mov
pushf
mov
dec
dec
mov
bsf
jne
lret
jecxz
adc
sbb
push
dec
jno
xchg
movb
lods
cmpsb
mov
add
xchg
out
jns
std
sbb
add
pop
pop
pop
out
xchg
mov
into
jg
bound
jle
jg
dec
mov
scas
jno
rcrb
xor
ret
outsl
pop
mov
daa
sub
xor
ljmp
xchg
mov
adc
leave
imul
icebp
lret
fwait
push
std
xor
sbb
dec
dec
xor
sub
inc
add
add
sarb
dec
js
add
inc
nop
sbb
movsb
test
into
add
pop
or
push
dec
add
push
xorb
in
outsl
jecxz
lods
push
fcmovne
out
stos
ss
jmp
pop
int
push
mov
fwait
mov
mov
mov
dec
sub
lahf
stos
push
or
insl
pop
or
or
dec
dec
jno
push
pusha
cwtl
sahf
sub
inc
lcall
mov
repz
xchg
adc
aas
test
adc
mov
rcrb
add
mov
out
cli
push
push
mov
and
cmp
push
and
je
jbe
inc
jmp
pushf
rolb
push
clc
inc
aaa
jg
push
adc
int
sarb
xchg
mov
ljmp
xchg
jne
movsl
xor
sti
push
push
push
rcrl
mov
cmpb
mov
push
push
movsb
shrl
jmp
dec
jmp
inc
cmp
xchg
je
jo,pn
jnp
adc
stc
rorl
or
or
fistpl
andb
jnp
fimull
xchg
mov
jns
adc
mov
or
pop
push
vcvtss2sd
lods
cwtl
and
mov
and
pop
cmpsl
fwait
pop
insb
and
sti
lock
das
test
pushf
or
mov
into
sahf
lods
xchg
cmp
dec
insl
add
jns
push
push
jb
mov
flds
jae
das
das
adc
and
cmp
mov
sti
fs
pop
mov
push
sub
push
ja
lock
mov
dec
ret
incl
rorl
dec
xchg
jl
fs
mov
movsb
xchg
sbb
sbb
cmc
add
sti
jo
jo
pop
cmp
movsb
insb
and
cmp
jle
loop
ss
jns
mov
addr16
inc
pop
jecxz
daa
inc
push
cmp
rcrb
sub
push
mov
ljmp
aad
shll
shlb
mov
loopne
stos
xchg
rcll
cwtl
jb
jno
imull
repz
aam
jge
inc
out
call
xchg
orb
pop
or
sbbb
inc
in
out
inc
int3
cmpsb
dec
jecxz
jmp
dec
test
scas
pop
pop
add
pushf
push
and
mov
push
jne
in
or
jg
out
mov
roll
jle
js
insl
loop
push
or
je
insl
vmulps
push
or
push
rclb
adc
or
stc
and
stos
pop
xor
lock
inc
xor
cmp
sti
jle
pop
xchg
cmp
jle
push
inc
push
pop
arpl
cmp
mov
test
adc
xor
or
and
xchg
inc
out
xchg
ja
fisttpl
xchg
nop
pop
repnz
mov
mov
fistpll
scas
hlt
xor
xchg
pop
xor
fistps
or
loop
sbb
dec
gs
xor
cmp
push
push
insb
sahf
dec
adc
xor
daa
popa
push
push
mov
in
lds
mov
add
pop
xchg
js
push
and
xlat
cmp
scas
push
cs
xchg
jge
jno
lods
lods
inc
and
sub
insl
add
imul
cltd
xor
cmp
cmp
xor
and
leave
aaa
cs
int3
aas
or
js
xlat
lcall
cmp
inc
ja
mov
jp
push
ljmp
push
add
std
ffreep
addr16
les
lret
push
cmpsb
xlat
popf
pop
push
mov
pop
in
sbb
mov
sub
mov
loop
fisubl
sbb
mov
mov
adc
xchg
cli
das
hlt
mov
jg
shl
lods
pop
cmc
pop
pop
inc
and
mov
cltd
fs
pop
mov
and
push
mov
push
mov
sub
rorl
xchg
fbld
pop
and
jbe
mov
mov
push
jecxz
push
mov
sahf
cmp
repnz
in
mov
jecxz
mov
jge
sbb
cmpsb
push
mov
push
inc
out
push
stc
pop
add
sbb
fiadds
sub
xor
clc
inc
dec
adc
test
ret
dec
sbb
xor
xor
xor
out
mov
xlat
stos
fistl
mov
jns
add
push
ret
mov
pop
mov
push
into
frndint
mov
data16
fwait
call
mov
movsb
mov
add
inc
ficoml
jl
or
xchg
movsl
adc
xchg
test
or
mov
mov
outsb
xchg
daa
sub
xorl
and
ss
out
cld
mov
das
mov
in
mov
testb
aam
mov
sbb
jp
mov
fdivr
xchg
xchg
pop
pop
imul
sahf
dec
fnsave
dec
adc
in
in
prefetch
mov
test
xchg
fildll
push
xchg
pop
and
pop
scas
add
std
insl
mov
dec
adc
andl
mov
and
inc
imul
sti
mov
test
aas
adc
or
push
dec
mov
push
ljmp
negb
mov
xchg
loop
jns
je
popf
hlt
sbb
jmp
fistpl
and
cmpsb
xor
loopne
clc
in
sub
icebp
push
fdivrs
aas
sub
outsb
add
xchg
mov
jnp
mov
js
and
test
enter
xor
mov
push
xchg
push
sbb
add
adc
adc
jae
mov
dec
out
gs
rclb
cmp
fcomip
or
lods
xorl
dec
adc
jmp
ror
fs
sahf
int3
shlb
push
repnz
scas
xchg
pop
jo
pop
ret
add
orb
pop
jb
out
subl
rorb
iret
xor
prefetch
or
xchg
int
ds
aad
leave
pop
int3
test
and
lods
cld
mov
push
in
add
sbb
cmpsl
daa
mov
add
mov
pusha
mov
dec
outsb
popa
xor
jo
stos
xchg
pop
and
lret
in
push
cld
fwait
out
fcoms
in
rorb
jg
js
dec
inc
lods
push
cmp
pop
mov
mov
rclb
adc
mov
outsl
subb
andb
rolb
lea
mov
std
jbe
inc
cltd
out
shl
cmp
imul
sub
int
pushf
cmp
xor
pop
out
xlat
in
sub
daa
and
xor
xor
stos
or
xchg
arpl
fwait
xor
mov
mov
je
arpl
leave
negb
jo
lds
mov
jecxz
mov
cmpsb
jg
push
sub
dec
divl
mov
outsb
ljmp
je
xchg
rcrb
xor
pop
sti
test
mov
mov
inc
cld
sub
pop
push
cld
scas
cs
repnz
addr16
xchg
fildl
cwtl
imul
out
xchg
fcoms
cmp
and
icebp
mov
leave
sub
push
lret
xchg
int
lds
mov
jmp
xor
mov
pop
xchg
in
push
jns
cli
leave
xchg
cltd
xor
into
movsb
mov
push
mov
shrl
mov
lods
xchg
inc
mov
in
scas
out
jge
fdivrs
hlt
je
setbe
pop
js
dec
clc
pop
or
mov
inc
push
loope
adc
data16
xor
fstl
test
mov
cmp
lea
mov
push
fwait
aas
js
cmc
out
enter
les
pop
and
and
cld
xchg
mov
cld
mov
sahf
addl
inc
sbb
and
sbb
rorl
and
ss
cmp
stos
outsl
sub
stc
mov
test
xchg
push
push
pop
or
mov
dec
notl
push
loope
test
mov
ret
roll
xor
adc
fwait
cwtl
push
lcall
popf
xchg
xor
jg
mov
sbb
sarl
jne
dec
lret
pop
push
pusha
jl
add
dec
repz
insb
pushf
lcall
inc
xchg
jl
lds
push
mov
fs
adc
pop
repz
imul
mov
adc
adc
pop
pop
mov
mov
mov
and
inc
faddl
shl
adc
pop
sbb
xchg
out
sti
iret
ficoms
loope
rcll
xor
int
adc
jno
push
aaa
in
inc
xchg
and
cld
jp
mov
push
push
hlt
inc
xorb
sbb
or
xchg
mov
ret
push
push
into
ret
or
add
sti
push
xor
or
pop
push
mov
std
adcl
push
gs
daa
lcall
mov
mov
stos
mov
out
and
xor
dec
scas
inc
out
lretw
mov
test
add
pushf
fistpll
ds
jne
aas
rcrl
inc
jmp
imul
xor
test
xchg
inc
xchg
or
or
test
out
test
and
movswl
pop
jg
adc
mov
xor
jo
lahf
dec
xchg
xchg
out
mov
arpl
stos
test
xlat
sub
stc
lahf
mov
or
mov
xchg
mov
and
sbb
lea
inc
jmp
inc
sbb
jmp
in
in
jns
adc
and
test
nop
lods
push
jne
addl
xor
aas
jnp
mov
inc
jbe
sub
outsl
mov
sbb
or
inc
or
sbb
xchg
jle
sbb
cwtl
ret
push
xor
incl
mov
popf
ret
xchg
sub
pusha
js
jns
mov
ja
sbb
xchg
mov
xlat
rolb
lret
jle
pop
jg
push
gs
fucomi
xchg
repz
and
mov
dec
or
in
push
pop
pop
insl
sbb
cwtl
js
mov
xor
jns
fnsave
pop
xorl
insb
mov
mov
mov
lret
jae
add
lds
sbb
int
jns
push
sub
pop
jecxz
push
push
clts
lcall
mov
inc
dec
mov
incb
test
cmp
vmovlpd
push
ret
ss
stc
sahf
push
cli
loopne
cs
adc
sub
out
mov
repz
in
lock
hlt
mov
out
shrb
jg
lock
sahf
mov
or
sbb
push
inc
ljmp
scas
dec
ja
mov
mov
daa
ljmp
mov
mov
negl
jb
test
sub
jnp
pop
xor
fidivrs
adc
js
hlt
jge
cmp
ficoml
fcomi
les
pop
movntq
imul
shl
lods
sahf
sahf
aaa
lods
inc
sub
out
or
std
hlt
mov
out
in
fimull
les
or
imul
xor
inc
fiaddl
mov
cmp
pop
xor
xchg
lods
dec
movsl
cwtl
aad
sbb
cwtl
pop
add
inc
fcmovnbe
lcall
inc
xchg
out
mov
int3
pusha
push
pop
outsb
xor
mov
in
outsb
inc
xchg
cs
repnz
ss
cmc
push
hlt
pop
jns
xchg
mov
cmpsb
push
arpl
cmp
dec
sbb
pusha
mov
stos
cmc
fimull
cmp
sbb
sti
stos
mov
cmc
sbb
jg
mov
mov
dec
iret
xor
ret
test
pop
decb
xchg
aaa
in
je
xor
cs
dec
orl
jge
push
ret
and
xor
aaa
aas
jecxz
or
sbbl
jae
xor
push
mov
fdivl
fbstp
mov
lgs
fnstcw
in
sbb
lea
xlat
xchg
aaa
imul
cli
cmp
inc
ljmp
jne
and
test
lods
jns
xchg
pusha
jl
inc
pop
stc
mov
jl
ficomps
sub
mov
out
sbb
mov
out
mov
push
jl
mulb
leave
lret
mov
jmp
jae
mov
mov
inc
mov
lcall
leave
add
mov
ss
mov
push
lds
lcall
adc
mov
mov
adc
cli
jbe
push
sahf
push
inc
clc
scas
inc
je
dec
dec
call
cmp
inc
mov
enter
shlb
add
adc
add
inc
pop
es
ret
insb
daa
adc
rcll
cs
cmp
jmp
das
or
inc
lods
bswap
push
pop
mov
xor
jae
loop
adc
pop
push
jle
jmp
fnstcw
fidivl
test
push
mov
cmp
xor
lahf
pusha
dec
lret
sbb
mov
ja
lock
loopne
mov
in
mov
sahf
pop
sbb
push
out
lds
rcrb
ds
lock
pusha
adc
andb
ret
xorb
test
add
xlat
pop
mov
inc
cwtl
in
mov
xchg
out
jns
loop
int
cmp
mov
hlt
out
push
mov
shll
and
les
mulb
cli
push
clc
inc
xchg
shrb
aam
into
movsl
sahf
fwait
ljmp
adc
mov
test
imul
aas
jne
push
shrb
arpl
push
mov
fwait
int3
inc
cmc
xor
or
adc
ficoms
pop
pop
push
pop
and
or
push
mov
and
scas
jae
mov
xor
mov
or
out
scas
xlat
cmp
call
lahf
hlt
shlb
mov
nop
scas
jp
fldl
dec
test
leave
dec
xchg
cltd
dec
add
and
test
in
xor
fdivrs
cmp
mov
adc
mov
mull
fmul
hlt
mov
jle
cmp
aas
pop
adc
fwait
loope
jo
out
int3
inc
or
jo
jo
stos
inc
lret
and
jne
xchg
push
mov
or
repnz
add
loopne
pand
movsl
cmp
out
lret
sub
dec
divl
add
int
xchg
mov
andl
into
loope
movl
ljmp
das
jle
test
sarb
adc
cli
or
mov
mov
lcall
mov
mov
mov
pop
xchg
pop
rcl
sub
inc
push
push
inc
xlat
scas
cmp
pop
mov
jp
xorl
adc
jb
out
out
push
in
icebp
inc
clc
pop
pop
and
stos
inc
xor
daa
sub
jo
inc
jp
notl
popa
mov
and
stc
ret
cltd
jo
ja
lcall
leave
pop
fidivrs
stos
jg
aad
stos
roll
rorb
jno
out
cmp
mov
scas
incl
pop
mov
dec
cli
pop
mov
lret
mov
mov
sub
push
arpl
in
pop
addb
add
xor
stc
xor
sbb
push
mov
leave
jl
arpl
jo
sub
jecxz
lcall
or
inc
push
and
jne
in
pop
jne
sub
pop
pop
xchg
in
inc
out
xchg
icebp
sub
sub
daa
and
and
sbbl
cli
adc
roll
add
repz
mov
add
pop
daa
lretw
loopne
push
out
in
mov
mov
push
mov
cmp
stc
mov
addr16
es
jb
pop
inc
xorb
inc
sub
aam
mov
or
outsl
xor
dec
sahf
pop
dec
xor
and
pop
add
jb
insb
pop
push
cld
popf
pop
lret
adc
insb
and
lods
jge
add
pusha
nop
mov
inc
jmp
sub
repz
sbb
mov
pushf
xchg
mov
mov
xchg
push
leave
test
pusha
or
mov
or
fmul
mov
add
lret
xor
jno
and
fdivs
popf
rdmsr
fmuls
data16
xchg
enter
xchg
jl
mov
ficoml
pop
cli
jb
fldt
push
jp
dec
shl
push
aad
leave
dec
xchg
mov
gs
call
sbb
int3
push
ds
xchg
fsubl
push
imul
flds
cmp
bnd
ret
or
xor
jmp
mov
imul
fimull
lcall
and
mov
pushf
lret
pop
outsb
jle
sbb
jle
lock
cmp
mov
pop
adc
mov
in
mov
test
jae
jnp
mov
mov
out
adc
std
popa
cmpsb
nop
push
lret
pop
das
cltd
sbb
add
ljmp
sarl
sub
jle
push
or
ret
sub
frstor
xchg
test
mov
inc
js
add
xor
adc
cmp
pop
dec
and
iret
gs
aaa
lret
cmp
cmpsb
icebp
mov
cwtl
jno
push
popa
mov
cwtl
std
fwait
mov
push
lahf
dec
cmpsl
sbb
and
cwtl
and
dec
jle
pop
je
jecxz
jle
or
rol
lret
shrl
dec
ror
sub
les
mov
test
in
push
push
cmp
mov
cs
popa
lds
popa
imulb
enter
loope
inc
leave
add
xlat
cld
fildll
mov
sbb
sub
adc
cs
rclb
jae
push
subl
mov
cmp
rorb
aad
sbb
or
fpatan
inc
lahf
jns
and
adc
jmp
shr
arpl
rcll
insb
addr16
es
dec
sbb
mov
mov
divb
or
cmp
mov
xchg
in
jle
lea
jmp
sbb
xchg
pushf
dec
and
int3
repz
aas
sahf
loop
xchg
test
rcrl
sahf
mov
ljmp
xchg
xor
sub
aad
ljmp
lock
mov
ss
mov
push
clc
out
or
jno
or
lea
cmp
or
adc
std
jp
shlb
push
jns
sbb
cmc
or
gs
add
cmp
mov
test
inc
daa
cmp
daa
dec
addl
push
jo
cs
cs
xor
add
sub
pop
stc
or
xchg
mov
xor
sbb
jnp
out
pusha
cmovs
mov
out
and
clc
mov
loop
sbbl
add
jmp
push
data16
loop
sbb
and
and
mov
adc
repnz
jno
test
in
pop
xchg
jnp
xor
sbb
gs
pop
xor
sbb
push
or
cltd
pop
sti
mov
ljmp
lds
ret
pop
imul
popa
sub
cmpsl
mov
iret
shl
xchg
cmc
xor
mov
popf
shlb
sub
scas
add
xchg
sti
inc
test
sarb
outsl
xor
pushf
jnp
or
shll
dec
jno
add
xchg
lahf
imul
mov
ficoml
mov
lds
mov
cmpsl
in
mov
ja
cmp
push
jmp
mov
mov
out
sbb
pop
out
pop
out
push
xchg
mov
shll
jno
loop
mov
rolb
rcll
push
jnp
inc
xor
pop
std
xchg
mov
shlb
insl
pop
cli
mov
lock
mov
dec
cmp
cmp
jge
out
jb
dec
pop
adc
int
loope
mov
aam
cmpsb
div
out
ret
out
pop
enter
jg
inc
cld
dec
lret
xor
adc
and
mov
xchg
sub
sbb
cli
xlat
xchg
dec
sbb
push
and
sub
sub
and
in
in
jmp
xchg
scas
movsb
arpl
mov
mov
pop
xor
lods
jge
sub
mov
cmp
jle
jb
push
mov
mov
add
jns
and
int
xlat
dec
loope
shrl
sub
mov
cwtl
add
fdivl
movsb
xor
add
scas
mov
cli
dec
cmpsl
shrb
movsl
scas
inc
add
cmpsb
xor
and
jp
cmp
sbb
and
int
repnz
cmp
jns
aad
lods
insl
dec
inc
cli
movsl
out
pushf
jmp
mov
repnz
and
or
ret
movb
and
fcmovnb
movsb
inc
pop
inc
cmp
ja
push
push
mov
push
push
jmp
fisubrl
adc
sub
mov
lods
xchg
cmp
push
outsb
inc
mov
push
or
pop
das
mov
int3
push
repz
jne
cwtl
test
jecxz
inc
aaa
fistpl
mov
test
into
lods
bound
aaa
and
stos
dec
pop
aas
fidivl
movsb
mov
xor
es
movsb
xchg
lahf
jae
insl
sbb
cmp
mov
cmp
or
pop
inc
cmp
dec
hlt
push
mov
ja
shr
jl
add
enter
fsts
jmp
inc
or
cmp
scas
aas
call
movsl
insl
aaa
js
icebp
push
xchg
cmp
xlat
cltd
push
fcomp
mov
test
pop
xor
lods
mov
int3
pop
es
adc
mov
sbb
or
lret
imul
lds
rclb
push
icebp
jo
ljmp
pop
addb
mov
cmp
shlb
or
subb
pop
out
push
inc
push
in
mov
add
outsb
test
add
fiadds
cmpl
sbb
rorl
aas
into
mov
mov
imul
fldt
sti
shll
pop
xlat
adc
dec
mov
lret
ficomps
xchg
push
stc
pop
mov
das
pushf
xor
ret
sub
shl
lcall
rcrb
xchg
jb
ja
pop
xchg
out
aam
or
imull
stc
xor
ss
nop
add
scas
movsl
sub
jns
or
or
je
cmp
lock
pop
out
cmp
jb
gs
inc
aaa
xor
add
pusha
inc
dec
xchg
mov
movsl
lods
fdivl
gs
adc
arpl
and
das
and
loope
shlb
adc
jg
jo
fildll
clc
fldenv
cltd
out
dec
push
scas
pushf
int3
adc
aaa
xchg
aaa
sub
mov
test
repz
out
imul
fildl
stc
shll
add
ljmp
cli
jmp
lahf
dec
sbb
cmp
add
jnp
mov
pushf
add
or
aad
jae
push
sub
xor
popf
sbb
pop
sbb
data16
lahf
testb
icebp
and
out
sub
inc
xchg
and
push
jb
push
dec
test
dec
and
pop
movsb
cmp
cmp
insb
rcrl
shrl
sbb
and
or
lret
inc
pop
sub
sub
repz
mov
mov
add
dec
fdiv
lret
sbb
repz
xor
jp
mov
aaa
sbb
pop
sub
pop
inc
cli
or
adc
mov
mov
push
fiaddl
cwtl
rcll
xor
ret
jno
sbb
scas
ja
ss
or
repnz
push
lods
notb
outsl
sub
xchg
push
mov
push
pop
dec
int
lret
fcompl
aad
dec
xchg
add
pop
lret
pop
fisttpl
xchg
xor
negl
or
jp
sbb
push
pop
pop
fld
or
mov
stos
push
push
dec
jns
cwtl
push
cwtl
fists
arpl
shlb
in
nop
cmpsb
and
pop
scas
push
jmp
jo
ficoms
pop
cmp
out
es
repz
push
cltd
inc
adc
cltd
inc
loopne
add
rcr
lcall
cld
inc
or
pop
fcoms
nop
ds
push
cmpsb
in
daa
fnsave
mov
scas
jmp
add
inc
cli
xlat
rclb
jno
mov
dec
sub
aaa
and
add
imul
inc
ljmp
and
inc
cmp
jo
cmp
es
sub
movsb
outsb
clc
sbb
lahf
das
jecxz
push
fiadds
daa
je
sbb
xchg
cmp
mov
orl
insb
iret
sbb
mov
aaa
xchg
outsb
mov
pop
out
ret
repz
and
mov
sub
cmp
adc
pop
cmp
and
pop
sub
and
dec
jne
rcll
leave
dec
outsb
xorb
add
ret
mov
jmp
adc
mov
cmpsb
push
repnz
mov
jo
adc
sarb
popa
cli
jmp
fcoml
fmull
mov
sbb
jecxz
sarl
push
add
xchg
insl
push
mov
in
xchg
ret
push
push
push
cld
in
push
or
inc
and
mov
xchg
mov
ljmp
outsl
pusha
rolb
xchg
iret
push
into
jl
adc
jecxz
lret
or
and
out
and
outsb
lea
mov
iret
bnd
jns
mulb
inc
mov
mov
out
out
add
cmpsl
cmc
je
xchg
std
hlt
out
bound
loopne
cmc
mov
mov
or
lret
outsl
cmp
mov
add
rcll
int
push
jae
hlt
movsl
loope
pop
insl
pop
cmc
mov
insl
mov
inc
icebp
sbb
cmp
cmp
adc
sbb
add
in
xor
xchg
fdivl
bound
pop
jg
sub
mov
repz
lods
mov
add
sbb
rcrb
adc
filds
xor
xchg
out
xchg
in
inc
push
imul
inc
jmp
jg
sub
movsb
rcrb
mov
xor
mov
test
mov
and
mov
pop
mov
and
xor
push
sub
fwait
shrl
mov
pop
rorl
jo
push
inc
jnp
inc
push
scas
outsl
inc
sub
in
ret
es
inc
leave
xor
and
pop
mov
push
sbb
das
movl
in
popl
insl
mov
ficomps
add
lcall
jo
push
mov
adc
push
jmp
out
inc
adc
sti
xor
cli
rcrl
push
jl
sub
push
fcoml
pushf
jno
aaa
rolb
add
std
stc
and
not
pop
lret
lret
movsb
test
dec
push
lret
cmp
xchg
cld
mov
movsb
negl
loopne
bound
outsb
hlt
xor
int
hlt
cmp
push
pop
cli
pop
enter
mov
loope
sbb
inc
loopne
mov
cmp
repz
idiv
lahf
aas
aas
push
pop
cmp
stc
out
cmpsb
dec
ret
mov
adc
dec
mov
xchg
inc
push
dec
pop
sar
push
mov
jo
repz
jnp
stos
aam
cmp
inc
pop
pop
lcall
aam
dec
stos
and
stc
cmp
mov
mov
mov
xchg
xor
cmp
jmp
dec
arpl
lret
dec
mov
and
inc
push
bound
or
xchg
testl
in
or
cmp
inc
ds
in
call
mov
cmp
or
imul
add
xchg
dec
push
xchg
mov
or
loopne
inc
mov
inc
movsl
jmp
inc
mov
mov
cltd
popf
cmp
repnz
pop
cmp
add
shrb
cmp
sbbb
ja
lock
push
out
xor
jbe
andb
out
push
pop
out
lret
mov
aam
and
aas
push
arpl
aas
scas
out
pop
cmp
xchg
mov
ja
fstl
dec
and
sub
sub
mov
shl
dec
mov
fs
push
push
bnd
mov
push
jno
movsb
sub
leave
sbb
xor
pop
fadd
push
cwtl
testl
add
into
sbbl
inc
les
or
jne
mov
and
repz
push
imul
fwait
inc
fcmovnb
dec
add
mov
out
fistl
and
xchg
mov
dec
mov
ficoml
pop
jecxz
popf
jno
dec
xchg
mov
scas
add
repnz
orb
jae
xor
jns
test
pop
lcall
dec
pop
xchg
add
mov
icebp
jge
dec
jle
and
push
mov
sub
jno
jmp
das
inc
cmpsl
push
leave
ja
xchg
xchg
inc
push
dec
mov
add
das
andb
mov
pop
xchg
sub
jbe
mov
adc
inc
inc
addr16
jne
pop
cmp
mov
cmpsl
ret
xchg
cmp
jne
repz
aaa
stos
in
and
xor
jne
jae
repnz
sub
fstl
xor
test
test
xchg
scas
xor
enter
inc
push
movsl
shr
push
insb
imul
sbb
pushl
stos
addr16
imul
sbb
cmp
mov
mov
push
dec
xchg
sbb
pushf
int
popf
pop
pusha
fucom
mov
cli
das
out
push
icebp
in
sub
aas
xor
test
filds
out
ds
out
add
frstor
sbb
push
push
leave
xacquire
pop
push
dec
test
push
aam
add
jbe
mov
jle
sahf
mov
push
lcall
loop
or
js
cmp
pop
lcall
pop
sbb
pop
and
mov
pop
push
and
lea
clc
mov
xchg
enter
or
das
cmp
sti
and
jb
dec
pop
std
inc
cmp
mov
or
mov
inc
mov
in
mov
cmc
movsb
and
and
mov
push
and
add
cmp
cwtl
fnop
je
and
add
lea
daa
sub
out
scas
mov
push
dec
sti
stos
jg
push
jle
adc
sub
stos
inc
xchg
aas
fbstp
mov
mov
mov
mov
xchg
add
setle
xor
insl
sub
test
repnz
loopne
jg
mov
and
cmpsl
xor
mov
sub
sub
dec
mov
xor
je
push
test
imul
sbb
push
jecxz
mov
sbb
dec
lret
outsb
jmp
cmp
push
sbb
lods
hlt
mov
cmp
mov
push
lods
pop
sub
inc
sub
rol
inc
movsl
sbb
mov
adc
iret
aas
addr16
scas
stc
cmp
cmp
in
lahf
xchg
xchg
cwtl
inc
mov
push
pop
int3
and
and
sub
cmp
lds
repz
pop
push
mov
inc
aad
cmp
mov
xlat
xor
dec
mov
dec
adc
aad
and
test
sbb
add
xchg
movsb
imulb
adc
xor
int3
or
cmp
mov
repnz
inc
loopne
out
push
pop
inc
cmp
scas
ja
stc
hlt
adcl
jbe
pop
repz
std
jmp
push
clc
mov
xchg
jmp
jnp
jne
iret
popa
lret
mov
bswap
add
movsl
shll
mov
icebp
xor
test
inc
repz
sub
inc
sub
mov
dec
pop
push
sbb
sbb
aad
pop
hlt
out
addl
popf
xor
out
fcmovu
aam
mov
imul
movsb
xchg
pop
cmp
test
insb
adc
lock
mov
mov
insl
cmc
mov
ret
inc
jo
inc
jle
inc
adc
sub
arpl
sub
push
jle
mov
lret
loope
fwait
xchg
sahf
pop
jb
aad
andb
cli
pop
iret
and
lds
je
push
mov
pop
or
pusha
pushf
scas
pop
add
iret
dec
addr16
imul
popa
loopne
int3
mov
add
inc
sub
std
xor
add
fidivs
in
call
or
das
jmp
mov
cmpsl
imul
add
xor
sub
lret
iret
loopne
mov
pop
mov
ljmp
or
call
mov
or
sarb
stc
dec
sarb
jp
imul
pop
add
lahf
or
out
arpl
call
lret
negl
sub
push
cmp
fcom
adc
jge
lods
dec
bound
inc
pop
mov
insb
sub
js
pusha
mov
pop
or
mov
push
xchg
cmc
push
and
notl
xor
or
dec
cs
test
push
xchg
test
mov
xchg
mov
cmp
lcall
mov
mov
add
outsb
xorl
test
faddp
dec
sub
mov
mov
pusha
jb
xor
repnz
shll
bound
adc
push
lock
push
ds
aas
es
rol
pop
iret
sbb
jns
imul
or
mov
pushf
mov
dec
aad
loop
jecxz
lods
cmpsb
adc
and
push
mov
jg
cmpsb
push
push
test
sbb
xor
mov
out
cmp
loopne
or
jp
pop
pop
sbb
pop
jbe
xchg
sub
and
add
sarl
arpl
inc
and
and
ret
filds
add
xor
fcoml
or
and
or
popa
mov
jne
nop
bound
aaa
add
pop
or
pop
out
lcall
pop
sub
aad
pushf
and
xchg
iret
stos
idivb
xchg
je
js
push
idivb
xchg
dec
adcl
ljmp
loop
pushf
outsl
mov
enter
push
scas
jg
popf
aad
xor
jns
and
es
stc
cmpsl
inc
test
pop
pusha
dec
cmc
jb
int3
xor
imul
mov
les
stos
adc
add
sbb
cmp
cmpsb
or
sbb
repnz
in
fisubs
cmp
out
dec
xor
cmp
pop
sbb
push
xchg
es
mov
clc
pushl
cmc
jns
scas
ret
sub
imul
mov
inc
in
push
mov
or
push
cmp
pop
nop
lret
les
ret
out
call
add
call
outsl
or
push
xchg
cmp
sbb
sbb
push
scas
pop
jmp
cltd
add
jb
jp
mov
inc
push
cmp
call
test
mov
mov
vaddps
cwtl
call
push
enter
jbe
pusha
cmpl
dec
sub
adc
xor
mov
pop
fidivrs
idivb
cwtl
mov
inc
or
sbb
push
fcmove
or
insl
cwtl
cmp
pop
mov
or
out
idivl
test
pop
shll
movsb
adc
out
fbstp
cmp
adc
xor
and
ss
pop
fisttpl
mov
sub
loope
xchg
lods
mov
loope
gs
ror
xchg
outsl
dec
xlat
aas
push
outsl
jbe
inc
shrb
push
outsl
mov
inc
adc
cmp
mov
repz
jmp
mov
testl
xchg
jns
pop
js
push
insl
pop
add
push
movsb
ret
push
pop
aas
dec
daa
ret
es
push
data16
stos
mov
ret
or
jns
into
in
aam
pushf
or
adc
lret
sbb
lcall
ljmp
jnp
push
ficoml
jnp
pop
dec
js
push
pop
movsl
out
sbb
insb
je
shll
xchg
and
mov
mov
cmp
stos
rclb
pop
or
add
int3
dec
nop
sbb
adc
dec
fmull
push
ljmp
jns
pop
ljmp
sub
sub
fmull
std
mov
xor
test
loop
sub
pushf
or
cwtl
push
fildll
inc
pop
div
mov
scas
xor
inc
dec
adc
add
outsb
fsubrl
mov
enter
xchg
xor
lcall
movsl
sbb
add
rcrb
sbb
addr16
push
jae
inc
in
adc
push
sbb
hlt
shrl
insl
fstpl
lcall
and
inc
inc
mov
jecxz
sub
xlat
and
xchg
cmp
xchg
out
ljmp
mov
arpl
leave
notl
jns
ret
hlt
ds
pop
inc
or
xor
cltd
sbb
jne
daa
xor
ds
fwait
lods
insl
or
mov
push
pop
negb
xchg
xchg
adc
icebp
jmp
seta
add
rolb
dec
inc
sahf
fsubs
icebp
pushf
iret
shlb
jno
mov
in
js
nop
into
or
add
adc
add
loopne
mov
addr16
out
xor
xchg
repnz
loope
mov
dec
or
jne
into
adc
inc
pop
sub
xor
pop
xchg
xchg
ss
je
out
dec
pop
subl
cmc
aam
mov
jmp
in
add
bound
jb
sub
lds
pop
popa
dec
fcmove
cmp
bound
repz
dec
iret
sub
nop
or
shrl
jp
cld
iret
cmc
shrl
dec
aam
dec
sub
xlat
jp
stos
fsubrp
ds
jg
xor
mov
cld
sub
enter
int
push
das
dec
adc
and
sbb
mov
cmp
cwtl
gs
aam
cwtl
daa
aad
push
leave
mov
or
cmp
leave
mov
int3
loopne
dec
dec
jl
xchg
sbb
outsb
cld
dec
xchg
or
es
mov
cmpsb
inc
std
jne
sbb
ds
insb
mov
outsl
aad
dec
mov
jle
std
xor
pop
in
mov
push
test
rorb
test
movb
pop
dec
call
xchg
jbe,pt
je
test
aad
cwtl
pop
std
daa
sbb
int3
mov
cmpsb
mov
insl
or
shlb
jecxz
dec
jb
adc
cwtl
cmp
cli
test
mov
sub
sbbb
xor
xchg
sbb
and
add
cwtl
les
insb
out
xchg
mov
push
xchg
ret
xchg
xor
push
ss
add
bound
repz
stos
iret
into
pop
mov
push
mov
or
dec
inc
enter
sub
mov
fdivrs
in
loopne
dec
scas
iret
mov
jnp
sub
lret
jns
push
pop
fdivrs
xchg
out
mov
pop
cld
push
xor
aaa
loop
insl
cmp
and
add
or
add
inc
out
cltd
pushf
loope
jp
inc
cmp
mov
cmp
add
mov
popf
or
mov
xchg
mov
push
add
xor
jae
cmp
add
mov
push
mov
xor
jge
data16
enter
bound
fisttpl
nop
mov
subb
mov
mov
imul
sti
je
rcr
sarl
out
cmp
ds
bound
dec
movb
data16
cmc
es
cli
aam
scas
or
decb
add
cmp
xlat
inc
xchg
cmpsl
mov
aam
addl
jo
push
push
and
inc
mov
mov
aaa
push
xchg
les
dec
leave
sub
je
sbb
popf
test
stc
xchg
dec
jg
and
cmp
movsl
aas
jne
pop
add
das
mov
xchg
xchg
push
xchg
leave
out
push
jnp
fisubl
mul
sbbb
mov
pop
jmp
cmovnp
idivb
andl
dec
int
pushf
fidivs
aam
xor
and
pop
and
fwait
xchg
testb
jmp
add
cmpl
adcb
test
adc
inc
fwait
and
jnp
inc
rorb
idiv
cld
or
push
fldenv
fwait
rcl
push
sti
loopne
lods
push
inc
aam
cs
or
ret
and
lock
xchg
or
js
cmpb
adc
lea
mov
fdivrl
dec
jecxz
fwait
xchg
in
jns
mov
add
add
adc
mov
sti
pop
mov
xor
std
cli
mov
cmp
mov
je
xor
push
and
loop
dec
pop
shrl
shl
pop
insl
cmp
cmc
cwtl
dec
pop
lahf
pop
lret
inc
stos
rol
outsl
rorb
lcall
fmulp
pop
cmpsb
jns
cld
data16
xor
shll
fsubr
pop
jmp
cmc
sbb
rcrl
push
sub
rorb
insb
mov
cmp
loop
pop
out
mov
stc
fisttps
fistpl
ret
add
inc
fs
jns
lods
and
fs
mov
je
mov
mov
fs
outsl
adc
and
mov
inc
or
mov
aas
and
or
cmp
int3
sbb
jbe
ss
and
or
mov
loop
adc
test
sub
lea
adc
notl
stos
inc
add
cwtl
or
xor
jne
rcl
inc
fstps
pop
loopne
fidivrs
in
scas
jo
pop
dec
in
push
pop
cmp
push
arpl
sbb
sub
clc
fcmovbe
pop
mov
movl
and
int3
sbb
xlat
jae
outsl
outsb
int3
cmp
dec
testl
jbe
sub
pusha
or
mov
or
inc
fiaddl
pop
ja
and
and
push
xchg
in
icebp
add
nop
inc
or
push
cwtl
xchg
push
cmpsl
pop
out
fcmovbe
iret
mov
mov
adc
aas
ja
or
jmp
sahf
add
push
repz
aam
sub
mov
lock
dec
nop
scas
out
jmp
enter
push
and
mov
leave
fidivrs
insl
cltd
scas
mov
fwait
sub
push
mov
sbb
push
pushf
in
arpl
xor
in
push
add
or
ljmp
or
clc
push
pop
xchg
add
pop
sbb
cltd
or
shlb
add
data16
xchg
lock
outsl
xor
xlat
fbstp
push
lret
pop
lcall
int
mov
icebp
adc
adc
int
lods
cmp
ret
mov
nop
fs
xchg
bound
push
xchg
insb
add
popf
stos
push
aaa
int3
push
test
sbb
inc
pop
pop
hlt
push
or
add
aad
jae
jp
mov
xchg
inc
push
adc
xchg
mov
scas
push
mov
scas
sbb
adc
add
xor
shlb
jl
cli
bnd
jmp
jle
out
int3
jnp
lea
mov
mov
sbb
cli
jo
orb
jae
mov
mov
or
sub
cld
mov
js
sbb
ss
hlt
push
and
lds
push
jp
je
pop
or
inc
inc
imul
rclb
adc
cmc
push
and
jp
out
add
nop
test
jecxz
into
dec
dec
lcall
ret
sbb
jp
mov
sbb
xor
push
js
xchg
fcoms
xor
cwtl
in
fidivrl
mov
xchg
and
pusha
fidivrl
fstps
sbb
int3
sbbb
adc
adc
mov
mov
jecxz
in
pop
pop
mov
repnz
and
vlddqu
or
loope
sti
cmp
jp
jne
mov
and
clc
in
mov
pop
lret
stos
cltd
xchg
jns
adc
insl
xchg
fsubr
cwtl
inc
jae
xor
out
jno
fxch
shlb
lock
les
mov
inc
in
call
adc
or
jae
jge
mov
fstpl
cwtl
popf
sub
addl
in
stc
dec
andb
in
or
dec
fdivrs
dec
aas
pusha
bound
mov
pop
xchg
sti
xchg
pop
testb
dec
xchg
pop
xlat
les
lds
adc
gs
mov
mov
adc
cwtl
sbb
std
and
mov
divb
mov
mov
test
aas
movsl
popa
mov
lea
js
and
ja
sub
sar
sbb
fadds
xchg
jns
dec
xchg
xchg
cmp
mov
mov
fsts
lahf
mov
das
cmp
sbb
imul
mov
in
mov
mov
mov
lea
fadd
xchg
sub
and
push
test
in
es
test
rolb
xor
stos
in
sahf
lods
cltd
inc
cmc
push
push
or
or
addl
push
stos
cmpsb
in
test
push
mov
pop
sub
push
xor
insb
add
fcoms
xor
sub
loope
inc
mov
lret
movsl
cld
cwtl
pop
sub
pop
in
jl
enter
shl
and
call
cmp
scas
mov
aas
dec
frstor
ret
stos
and
and
push
sahf
pop
fstps
rorb
add
mov
xchg
xchg
and
mov
pop
inc
mov
or
jl
inc
or
cwtl
ljmp
mov
ss
dec
ja
idiv
dec
jl
pop
mov
fdivrp
pcmpgtd
scas
test
sub
insl
sarl
dec
pop
filds
fnstsw
cmpsb
cmp
adc
push
add
inc
imul
mov
or
xchg
and
lock
pop
das
mov
pushf
xchg
pop
stos
je
jns
cld
push
jmp
das
repnz
ret
and
push
mov
add
fisttpll
xlat
pop
cmp
dec
push
out
mov
add
out
lret
mov
dec
hlt
xlat
pop
loope
push
inc
lret
jp
incb
out
mov
mov
cmc
pushw
sub
mov
mov
filds
mov
test
xchg
scas
pop
lret
jmp
push
les
lds
inc
or
push
in
add
imul
lcall
add
mov
in
adcb
push
mov
cmp
or
in
cmp
mov
add
cltd
inc
pop
xchg
xchg
mov
repz
loopne
test
lds
push
fistpll
jns
mov
movsl
out
push
mov
cwtl
ss
or
das
mov
mov
xor
int3
cli
dec
and
dec
cltd
mov
pop
push
or
adc
test
pop
imul
dec
jmp
bound
xchg
subb
loopne
sub
push
and
mov
out
jg
mov
addl
jo
push
push
pop
sub
dec
subb
xor
xor
rolb
lret
sbb
pop
xchg
in
mov
cmc
cltd
adc
pop
cmpb
hlt
dec
adc
jnp
xor
sbb
push
sarl
jle
cmpsb
std
arpl
mov
push
cmp
sbb
xor
dec
adc
in
shlb
aas
mov
mov
rolb
fdivrl
cmpsb
cltd
repz
clc
push
adcb
out
ret
pop
pop
sub
adc
js
mov
daa
sti
aad
stc
jae
dec
icebp
cmp
iret
in
xchg
cmpsl
pop
mov
jb
aam
jnp
dec
jg
inc
ja
lods
jmp
ljmp
mov
popa
mov
aaa
xchg
scas
dec
fs
call
adc
sbb
dec
cmpsb
mov
or
cmc
xor
adc
mov
mov
mov
push
dec
xchg
dec
paddusb
movsl
and
fs
in
xchg
dec
cmpb
sbb
jecxz
dec
jge
push
jecxz
xchg
mov
mov
lret
inc
cmp
scas
movsl
stc
and
scas
aam
cmpsb
call
sbb
sbb
scas
jle
mov
jo
clc
ja
loopne
loope
outsb
ds
movsl
xor
adc
mov
lcall
testb
stc
stc
pop
in
sahf
aam
arpl
cltd
mov
mov
and
into
js
xlat
shrb
in
fildll
xor
jg
add
or
and
repz
jae
and
ret
cmp
push
or
outsb
test
dec
mov
push
cmp
mov
movsl
imul
sub
mov
xchg
inc
mov
pop
or
xchg
lds
inc
jnp
loop
add
pop
bound
add
test
xor
pop
pop
add
push
adc
out
mov
fld
and
bound
inc
inc
fwait
subb
clc
movsb
cltd
shlb
test
lods
push
pop
inc
mov
jb
and
mov
dec
rol
outsl
pushf
rcrb
mov
ds
lods
and
push
xchg
inc
loop
pop
imull
pop
enter
addl
out
sub
xor
popa
das
rcrl
enter
mov
ljmp
xchg
and
mov
xlat
push
mov
gs
cmc
lds
cmpsl
and
in
in
jmp
jae
adc
dec
dec
add
xchg
mov
sti
sahf
ds
out
or
inc
push
mov
outsl
push
cwtl
imul
mov
rcll
lcall
jne
and
in
adc
gs
fiaddl
inc
xchg
std
xor
addr16
inc
push
add
or
jmp
mov
xor
mov
and
nop
push
push
fldcw
mov
dec
lds
push
