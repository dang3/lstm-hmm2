add
xor
xor
or
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
insb
movl
inc
insb
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
mov
inc
add
push
lea
sub
mov
xor
mov
pushf
mov
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
sbb
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
roll
xor
testb
out
add
add
rorb
int
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
out
add
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
lds
js
push
lea
mov
test
je
cmp
loopne
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
sub
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
mov
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
rolb
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
ud0
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
or
enter
dec
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
ffreep
inc
add
call
mov
lea
call
pop
pop
pop
leave
ret
cmp
je
push
mov
sub
push
push
push
call
xchg
mov
fbstp
add
mov
roll
pop
add
add
mov
add
add
add
xchg
add
jecxz
mov
in
mov
clc
pop
popl
push
lea
push
lea
push
call
xchg
mov
jae
fistps
xchg
add
lods
add
fiaddl
add
add
mov
push
imul
add
add
add
aam
mov
lds
lret
mov
hlt
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
jmp
pop
xchg
add
insb
insb
jae
mov
add
pop
imul
lret
jle
add
jb
je
int3
add
idivb
add
xchg
int3
imul
xchg
add
iret
bound
shll
lock
sub
pop
push
push
push
push
push
lea
push
push
push
call
ficomps
add
mov
mov
add
add
add
xchg
mov
add
xchg
add
jle
jnp
iret
movb
pop
add
add
jbe
lret
cmpsl
add
div
add
add
add
add
push
scas
add
add
loop
mov
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
in
rolb
mov
mov
jne
aam
lds
add
pop
add
add
add
cli
add
add
add
add
ljmp
cmpsb
add
xlat
add
fiaddl
push
mov
vandnps
cld
jmp
push
add
add
cltd
add
add
add
fsub
xchg
sub
pop
call
push
push
push
lea
push
push
push
call
add
scas
add
mov
iret
mov
xchg
add
add
add
out
cli
mov
add
mov
xchg
add
filds
pop
add
jmp
mov
in
call
add
push
push
push
push
push
push
push
push
push
call
sti
add
hlt
add
fmul
lock
add
pop
mov
add
add
ret
xchg
add
cld
add
lea
add
jo
nop
icebp
add
add
cmpsb
sub
pop
ret
push
push
call
add
pusha
mov
add
mov
pop
jb
mov
add
data16
add
mov
stc
add
frstor
lahf
mov
out
addl
pop
mov
push
push
push
call
cld
xchg
add
pop
mov
cld
add
push
cli
loop
mov
std
add
push
pop
lea
add
add
add
popl
xchg
add
add
cmpsb
add
add
mov
mov
add
add
xchg
pop
hlt
push
push
call
mov
jle
fldl
loopne
add
add
pop
addr16
testb
cwtl
mov
add
cwtl
add
leave
mov
into
add
fdivr
pop
sti
int3
add
mov
add
add
add
lcall
pop
in
push
lea
push
push
call
jae
jae
add
add
out
mov
add
fmulp
add
leave
add
xchg
icebp
fstl
sarb
add
mov
push
icebp
int3
add
negl
sub
pop
add
push
push
push
lea
push
push
call
add
cmc
dec
mov
add
cld
fisttps
rcll
icebp
push
stos
cltd
jecxz
fcoms
add
add
add
sti
jns
js
jmp
mov
add
add
add
mov
cltd
add
pop
mov
jae
in
in
pop
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
fcomp
add
lahf
mov
lds
add
lods
add
add
test
add
mov
mov
outsl
xchg
add
aad
add
loope
jne
mov
pop
add
xchg
add
movsb
push
push
cwtl
mov
std
add
sub
pop
mov
xor
push
push
shr
xor
add
push
sub
add
add
rol
sub
lea
add
pop
add
shl
not
inc
pop
push
push
push
push
push
push
push
call
add
addl
mov
add
sahf
incb
add
add
xchg
add
add
movsl
pushf
shr
add
jmp
mov
mov
faddl
addb
jb
insb
pusha
sub
pop
pushl
push
lea
push
push
call
add
arpl
jle
sahf
add
stos
pop
nop
add
add
ret
add
add
mov
testb
fcmovnbe
push
add
add
hlt
lcall
adcb
mov
push
push
lea
push
lea
push
push
push
call
mov
push
lcall
mov
jb
je
add
pop
stos
mov
fimull
add
add
in
call
add
add
push
lea
push
push
push
push
call
add
add
fsub
add
add
add
flds
repnz
filds
pop
add
add
pop
lcall
xlat
outsl
lahf
movsl
add
mov
rolb
mov
add
jb
out
jbe
fldl
lcall
pop
cmc
add
add
add
lcall
inc
call
daa
push
push
lea
push
push
push
lea
push
push
lea
push
call
sti
shll
add
add
loope
add
test
add
add
add
lea
cli
xlat
add
pop
stos
add
faddl
fstpl
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
cmpsb
add
push
add
cwtl
add
push
add
popa
into
jecxz
add
pop
roll
sub
loopne
add
movsb
add
scas
xchg
fcmovnbe
xchg
mov
add
add
loop
add
cwtl
add
movsl
xchg
mov
filds
push
mov
lock
add
subl
jne
push
lea
push
push
lea
push
push
lea
push
lea
push
call
push
add
add
loope
jno
add
hlt
sti
add
mov
add
ficoms
add
loop
add
fdiv
add
add
add
iret
mov
add
push
cltd
add
clc
sub
pop
pushl
push
push
push
push
push
call
add
add
insb
stc
add
shlb
in
mov
add
cmpsb
add
fadds
insb
addr16
rorl
mov
add
add
repnz
jge
cmc
cld
stos
add
int3
add
add
movl
pushf
subb
mov
add
in
lcall
std
add
pushl
push
push
push
push
push
push
push
push
call
nop
jl
xchg
add
add
testb
les
add
add
out
add
test
jnp
test
test
loope
jo
fsubr
fcmove
addl
lock
push
push
add
push
sub
add
inc
inc
sub
inc
ror
pop
xor
not
pop
push
push
push
lea
push
call
repnz
mov
in
fnstsw
add
aad
pop
add
mov
sarb
add
mov
jle
nop
add
cmc
test
popf
add
jp
add
popl
scas
fiadds
leave
fcomp
mov
in
lock
pushl
push
push
lea
push
call
jmp
add
add
add
add
add
xchg
mov
add
add
ret
hlt
lcall
dec
pop
add
push
push
push
sub
push
or
not
add
ror
add
sub
xor
lea
pop
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
push
mov
mov
out
mov
mov
add
push
add
pusha
stos
fnsave
add
jbe
not
add
lcall
push
push
push
push
lea
push
lea
push
call
repnz
add
js
add
in
add
add
pop
loopne
add
add
loopne
ljmp
xchg
mov
jae
iret
xorb
insb
add
test
add
add
call
lea
push
call
mov
add
imul
bound
add
ror
test
push
add
mov
add
add
call
bound
rolb
je
add
out
insb
mov
pusha
add
add
movsb
push
sub
pop
call
push
push
push
push
push
push
push
push
call
mov
add
stos
cmpsl
jae
add
lds
stc
mov
pop
add
add
add
loopne
lods
outsl
add
add
popf
in
scas
in
roll
add
add
add
push
lock
sub
pop
mov
push
push
push
call
add
addl
pop
mov
add
cli
add
add
pop
shr
mov
push
pop
add
stos
gs
add
add
add
mov
shr
add
add
out
lods
add
jbe
rcrl
sub
pop
push
mov
push
lea
push
push
push
push
push
push
push
push
push
call
add
bnd
mov
cmc
add
add
mov
mov
scas
repnz
push
arpl
add
add
add
fisttpl
add
mov
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
jno
mov
add
cmc
add
cltd
jne
push
mov
add
pop
add
cmc
add
mov
mov
in
add
jns
jmp
add
imul
xchg
xchg
add
add
ljmp
imul
pop
add
push
push
push
push
lea
push
lea
push
push
call
add
mov
test
add
lret
je
loope
add
pop
icebp
add
xchg
add
insb
xchg
cmc
mov
add
int3
sbbb
in
add
xchg
xchg
add
lcall
ret
repnz
add
mov
push
push
push
push
push
call
mov
mov
jge
insb
cwtl
add
jecxz
rol
rcr
add
andb
add
mov
jbe
add
add
add
add
add
test
in
lock
lcall
xor
push
lea
push
push
push
push
call
rolb
mov
cmc
in
add
rolb
gs
mov
jo
mov
xchg
into
pop
in
cltd
fcoms
add
jbe
add
push
int3
test
add
ficompl
add
roll
les
push
push
push
call
fldt
add
repnz
xorl
popa
add
add
aam
in
cld
add
add
arpl
mov
fstps
pop
pop
scas
mov
add
add
jne
push
lea
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
mov
jnp
icebp
mov
mov
mov
mov
mov
add
outsl
test
pop
add
mov
outsl
shlb
sahf
jno
popa
add
in
add
test
fcomps
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
leave
test
add
jno
fwait
mov
sarb
fucom
jl
outsl
push
outsl
imul
mov
stos
lahf
in
into
jne
push
mov
add
pop
push
add
sub
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
data16
rolb
add
ja
add
add
pop
mov
test
imul
add
add
ljmp
xchg
ret
add
cmpsl
add
jnp
add
add
pushf
iret
add
add
mov
in
sub
pop
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
test
add
add
cld
stos
mov
add
add
lret
add
lds
lock
cld
jno
pop
fsub
popf
js
in
loopne
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
fdivl
add
leave
testl
test
jo
add
add
sahf
jle
cmpsl
add
mov
in
in
test
jl
out
in
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
add
sahf
stc
add
add
data16
out
loopne
in
push
add
add
in
cld
add
clc
in
lahf
enter
xchg
icebp
add
lret
add
scas
pop
add
add
test
out
js
add
cltd
add
add
clc
cmc
xor
test
addl
dec
add
out
int3
iret
iret
push
push
push
push
push
lea
push
call
mov
popa
popl
jmp
enter
addb
add
fildl
pop
add
call
in
add
arpl
push
cmpsl
mov
pusha
jae
add
sar
arpl
imul
add
mov
mov
add
in
call
xor
push
push
push
push
push
lea
push
push
call
pop
add
mov
scas
xchg
arpl
add
ja
mov
pop
add
call
call
add
mov
jle
add
incb
lods
leave
sti
add
add
add
add
add
test
mov
push
movsb
in
add
mov
sub
pop
add
push
lea
push
push
push
call
sahf
incb
xchg
add
add
add
add
jns
xlat
add
cltd
movsb
popf
enter
add
mov
mov
enter
jmp
lods
add
out
add
add
flds
add
xchg
stos
add
mov
add
push
push
lea
push
push
push
push
push
push
call
imul
xchg
movsb
add
fldl
cwtl
nop
add
add
cmc
add
add
test
pop
jcxz
pop
jge
push
add
loopne
mov
xor
push
lea
push
push
call
xchg
mov
cwtl
into
test
int
add
lds
scas
andl
add
add
out
lods
fwait
add
add
mov
lods
add
add
sti
hlt
mov
add
ficoml
pop
sub
pop
sub
push
push
push
push
lea
push
push
push
call
shlb
add
add
roll
sahf
out
mov
add
push
push
jo
add
add
arpl
negl
clc
popa
push
add
cmc
jecxz
add
add
fistl
test
add
pop
fiadds
add
stos
add
push
push
push
call
mov
add
scas
add
mov
mov
add
pop
fisubrs
pop
xchg
int
mov
mov
test
sub
pop
rep
pop
push
push
lea
push
lea
push
push
lea
push
call
mov
add
cmpsl
out
add
add
pusha
pop
add
sarb
add
add
sar
mov
mov
loopne
add
add
cld
mov
add
add
cltd
xchg
add
mov
sub
pop
mov
push
push
push
call
iret
cwtl
add
push
mov
add
test
add
stos
add
add
aad
jns
ret
push
mov
pop
std
pop
add
mov
repnz
mov
cmpsl
add
fs
pop
add
add
push
push
lea
push
push
lea
push
push
push
call
mov
add
loopne
movw
jle
add
shl
mov
call
push
add
add
out
popl
test
jl
lods
xchg
mov
add
pop
arpl
add
add
add
add
push
mov
mov
jle
add
lcall
ret
repnz
add
push
push
push
push
call
lea
scas
test
add
fsubs
stc
je
add
add
add
add
add
add
add
add
add
mov
loopne
add
cltd
add
add
sahf
lret
rolb
add
fildl
inc
and
int3
iret
iret
push
push
push
lea
push
push
push
call
xlat
lods
mov
pop
xorb
pop
add
add
ror
add
xlat
jp
enter
popa
cld
leave
jne
add
cmpl
add
mov
push
jmp
add
jge
mov
pop
xor
push
lea
push
lea
push
push
push
push
push
call
add
sahf
xchg
mov
fcomp
addr16
add
xchg
fs
jae
add
add
add
int3
fmul
add
mov
test
add
xchg
mov
add
ja
mov
out
add
in
in
lcall
les
add
push
push
push
push
call
add
jbe
push
incb
arpl
add
call
add
ret
add
xchg
add
jb
je
lods
stos
add
add
add
loope
push
data16
add
aad
add
push
roll
scas
xchg
xchg
add
aam
pop
out
stos
add
add
rol
sub
pop
mov
push
push
push
call
or
pusha
divb
test
add
add
add
sti
add
aad
aad
stos
push
xchg
js
add
add
push
je
pop
sub
pop
xor
push
lea
push
lea
push
push
push
push
push
push
call
xchg
push
xchg
add
jns
mov
lds
pop
sahf
pushf
out
nop
adcb
popf
push
xchg
push
fiadds
lods
shl
add
add
mov
push
add
add
jne
add
mull
mov
rolb
lea
fidivl
lcall
les
add
push
push
lea
push
call
in
add
iret
popf
add
rolb
scas
addb
mov
call
mov
add
add
xlat
add
int
push
rolb
js
incb
mov
add
mov
add
hlt
add
add
add
lcall
dec
sub
int3
iret
iret
push
push
push
push
push
lea
push
push
call
mov
aam
cli
fisubs
lock
add
xchg
add
cli
stos
add
lock
add
cli
jb
sarl
imul
sub
pop
xor
push
push
lea
push
push
push
call
ljmp
add
mov
push
add
lret
add
sahf
push
movsl
add
fildl
int3
jp
add
mov
sub
pop
add
push
add
not
pop
add
add
push
lea
push
push
push
lea
push
push
push
call
data16
mov
xlat
add
insb
jp
add
jb
add
test
testb
add
add
add
lds
add
scas
mov
add
jp
mov
sub
pop
mov
push
push
xor
push
or
not
add
dec
sub
not
xor
sub
pop
shr
pop
push
push
call
jp
mov
add
fiaddl
fs
add
pop
jmp
xchg
lret
add
add
leave
push
add
pop
push
cld
lret
add
cmpsb
cmpsl
xchg
add
mov
lahf
push
add
mov
imul
in
clc
lcall
jne
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
jecxz
jo
popf
cmc
add
add
add
flds
mov
test
stos
add
pushf
mov
add
pushf
nop
add
add
add
add
sub
pop
call
push
add
pop
push
push
push
rol
sub
push
or
not
add
inc
shl
shr
sub
sub
pop
dec
ror
lea
pop
push
xor
add
rol
pop
push
push
push
call
mov
add
ret
xchg
xlat
add
out
fiadds
mov
in
lds
mull
add
in
mov
pushf
sbbl
jl
fisubl
imul
add
cld
cmc
test
add
sub
pop
push
call
push
lea
push
call
mov
popf
jl
push
add
incb
loope
out
jge
add
add
add
add
fisubl
add
add
lock
add
addb
sub
pop
mov
push
lea
push
lea
push
lea
push
call
cmpsb
mov
rolb
out
cld
js
add
jae
pushf
lock
jae
add
jl
push
in
push
add
addl
popa
xchg
bound
fidivrl
xchg
push
bnd
add
add
cwtl
int
in
mov
pop
sub
pop
push
push
push
lea
push
push
lea
push
call
add
lock
add
hlt
movsl
addr16
mov
movsl
jecxz
ja
add
xchg
add
jae
mov
jo
add
sub
pop
push
push
push
lea
push
lea
push
push
push
call
add
int
movsl
mov
jmp
mov
mov
push
add
add
add
push
add
jmp
jb
stc
addb
lds
out
add
push
add
add
add
stos
add
add
lea
nop
shlb
negb
addl
in
call
push
push
push
call
sti
add
movsl
add
data16
mov
jnp
mov
sub
nop
add
mov
add
mov
add
add
xchg
pop
in
sub
pop
add
add
push
push
push
push
call
flds
mov
aad
add
out
filds
add
push
mov
add
jmp
push
lea
pop
add
push
lea
lea
pop
mov
push
push
push
call
push
add
shlb
mov
add
not
loopne
add
fiaddl
jo
popl
add
add
enter
je
shll
add
push
cmc
add
lret
fcompl
lahf
stos
mov
mov
shrb
push
add
jo
add
icebp
add
sub
pop
xor
push
push
push
push
call
jb
add
add
push
add
add
mov
scas
pusha
add
mov
mov
cmpsb
mov
imul
lahf
cmc
fldenv
mov
xchg
data16
mov
addl
push
add
lahf
pop
mov
add
iret
sarb
add
push
add
pop
add
push
lea
sub
shr
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
insb
into
shrl
add
fwait
cmc
ljmp
mov
push
mov
xchg
jb
add
add
add
add
push
add
add
test
fldl
rolb
add
sub
pop
mov
xor
push
shl
pop
add
push
pop
pop
push
push
call
pop
add
pop
add
jecxz
add
add
lret
arpl
stos
add
popa
push
add
add
fildl
jge
add
jmp
lret
jns
push
add
fildl
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
call
add
ror
add
mov
js
add
add
rolb
popa
cwtl
add
in
pop
cmpsl
add
rcr
add
add
add
sahf
sub
pop
xor
push
push
push
lea
push
push
call
add
fdivp
add
add
add
add
add
push
add
add
push
sar
add
mov
mov
in
sahf
add
in
add
add
clc
add
faddl
xchg
mov
in
in
pop
add
push
rol
rol
dec
pop
rep
push
push
lea
push
push
call
filds
mov
xchg
roll
pusha
arpl
cli
int
mov
popf
insb
test
mov
cmc
popf
out
add
in
jno
mov
add
add
fwait
add
add
add
push
aam
jo
add
add
in
lock
lcall
dec
and
icebp
out
int3
iret
iret
push
xor
pop
or
je
push
push
push
push
call
add
pop
test
jnp
add
add
add
nop
jne
xchg
add
add
jns
add
sti
clc
movl
add
js
add
arpl
pop
in
mov
roll
movsb
addr16
mov
in
fwait
push
enter
mov
add
add
add
fidivs
sahf
lahf
add
stos
add
lcall
xor
iret
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
jmp
imul
lcall
scas
add
pop
ljmp
add
or
out
mov
repnz
ret
add
sub
pop
mov
xor
push
push
push
lea
push
call
add
add
add
add
add
add
adc
out
mov
mov
mov
mov
stos
pop
pop
add
lds
cmp
repnz
in
sub
pop
add
push
rol
sub
pop
add
push
push
push
push
push
push
push
call
add
in
loopne
lods
add
cmpsb
push
add
pop
sahf
jmp
lea
push
add
insb
mov
add
add
popa
add
movb
scas
scas
cli
add
add
pushf
hlt
add
add
add
jmp
outsl
add
pushf
add
add
repnz
jmp
lcall
inc
or
int3
iret
iret
push
push
lea
push
push
push
push
call
xchg
bound
push
arpl
fisttps
fstpl
xorl
add
cltd
add
add
add
push
add
mov
jecxz
in
call
push
push
lea
push
push
push
lea
push
call
add
scas
int3
jecxz
rcl
add
cli
repnz
add
mov
add
sahf
mov
add
add
in
xchg
jbe
movsl
stos
add
call
add
push
lea
push
push
push
call
add
add
jp
icebp
hlt
mov
std
add
out
je
mov
mov
mov
lods
add
sub
pop
add
push
lea
push
lea
push
push
push
lea
push
push
push
call
fisubs
push
mov
add
addr16
fwait
add
mov
andl
add
push
xchg
cli
push
rol
add
add
add
lea
outsl
in
add
addl
xchg
add
push
add
push
jecxz
cwtl
sub
pop
pop
push
shl
pop
rep
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
sahf
add
idivl
add
add
movsb
loopne
fs
push
xchg
pop
stos
add
mov
cld
add
int3
testl
test
mov
push
mov
rcll
add
test
mov
mov
in
add
out
xchg
in
add
test
xor
add
lcall
or
push
lea
push
push
push
push
call
jns
add
add
jp
add
add
loope
notb
fwait
divl
fsubrp
add
add
lahf
jmp
movsl
add
add
jmp
movsb
mov
jne
mov
add
mov
les
add
push
push
lea
push
push
call
add
leave
faddp
add
add
add
add
push
add
fdivs
mov
in
std
add
add
mov
filds
mov
add
add
add
lock
lcall
leave
je
push
add
add
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
add
sti
lcall
ljmp
aam
xchg
stos
jp
std
add
mov
lcall
lcall
sub
movb
add
push
pop
rep
pop
push
push
sub
inc
not
push
sub
add
dec
xor
shr
sub
rol
pop
add
pop
push
add
pop
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
push
mov
add
push
mov
out
add
add
add
mov
addb
loopne
jno
add
cmpsl
hlt
add
out
pop
add
cmpsb
mov
add
add
jno
add
jae
add
stos
mov
add
pop
xlat
jge
add
mov
pop
mov
mov
push
inc
lea
pop
jmp
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
mov
fs
add
test
xchg
repnz
icebp
add
lock
add
add
sub
pop
push
push
sub
dec
rol
pop
mov
add
push
sub
rol
pop
push
push
add
not
add
shr
pop
push
push
xor
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
jmp
pop
enter
xlat
lea
les
std
add
scas
movb
add
add
add
rolb
ror
stos
mov
pop
ljmp
pushf
fwait
add
les
mov
testb
pop
mov
push
push
lea
push
push
call
mov
xchg
hlt
icebp
mov
in
add
rolb
add
cmpsl
xchg
ja
out
out
mov
add
add
gs
add
scas
cmc
std
mov
sti
xchg
add
push
in
lock
pop
pop
push
add
add
ror
pop
pop
pop
push
push
push
push
push
lea
push
call
mov
fs
sti
add
jl
jno
add
add
js
mov
add
cmc
lahf
fs
int3
add
mov
xlat
push
mov
add
push
add
insb
cltd
pop
std
lahf
data16
push
add
jo
in
call
lea
push
lea
push
push
push
call
jb
out
popl
add
mov
mov
push
mov
cwtl
add
not
jge
pop
add
push
add
xchg
add
or
push
push
rol
shl
pop
mov
push
shl
dec
shr
pop
add
push
push
pop
push
push
add
pop
push
push
push
push
lea
push
push
push
call
mov
clc
pushf
imul
shll
jb
lods
in
add
push
xchg
stos
lock
mov
lahf
add
xchg
mov
sub
pop
push
movl
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
movb
fwait
mov
mov
jp
mov
fldenv
cmc
hlt
add
mov
fucomp
mov
mov
loopne
mov
add
stc
add
push
in
xchg
je
movb
add
add
add
lcall
inc
clc
call
leave
shl
xor
pop
test
je
push
push
call
jo
les
imul
add
pop
shll
push
roll
add
xchg
add
jo
add
add
add
push
add
rolb
xchg
add
aad
loopne
jp
add
add
in
clc
lcall
inc
or
xchg
test
jmp
push
sbb
jmp
add
add
cld
out
in
add
in
add
int
mov
arpl
aad
mov
add
add
mov
in
xchg
in
movsb
push
add
loopne
add
pop
imul
call
ljmp
add
movb
fdivp
out
add
into
cmc
cli
sub
pop
pop
push
lea
sub
pop
pop
pop
push
add
add
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
push
out
loop
pop
cltd
add
fstl
add
push
add
mov
mov
popa
add
pop
cli
out
cltd
scas
add
add
add
pushf
mov
add
jmp
leave
ret
push
lea
xor
pop
push
mov
push
add
pop
add
push
push
push
call
add
add
movsl
add
add
mov
loope
pop
add
arpl
jns
lock
add
leave
add
mov
cld
lahf
add
adc
aad
add
lret
add
enter
cld
pop
shrl
pop
push
push
sub
add
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
gs
cwtl
fldz
add
ja
lea
rolb
add
pushf
xchg
mov
movsl
add
jge
mov
add
add
mov
fiadds
lcall
push
xor
pop
testl
push
lea
push
push
push
push
push
push
call
nop
ljmp
lret
mov
jno
xchg
cld
xchg
add
mov
push
test
xchg
xchg
out
rorb
add
out
pop
push
icebp
mov
add
lahf
add
iret
add
neg
add
ljmp
in
addl
push
push
push
lea
push
push
push
push
push
call
add
fstpl
mov
add
add
add
add
xlat
push
add
ja
add
push
add
mov
in
sub
pop
push
call
push
dec
not
pop
mov
push
shl
ror
inc
pop
pushl
push
rol
add
pop
push
push
sub
dec
shr
pop
push
push
xor
dec
pop
call
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
xchg
enter
int3
push
les
cmpsl
add
roll
add
out
loopne
out
pop
add
fldt
test
jp
addb
ljmp
fsubrl
add
add
mov
add
jp
imul
sub
pop
cmpl
jne
pop
push
push
lea
push
push
push
push
push
call
add
add
mov
jmp
fldl
add
push
into
cmpsb
pushf
jo
mov
enter
jbe
mov
add
mov
cmpsl
add
add
mov
sub
pop
pop
push
add
pop
pop
push
sub
add
pop
pop
leave
push
push
call
xchg
add
ret
aad
mov
mov
out
aam
lods
push
mov
in
leave
add
aam
xchg
add
mulb
in
enter
mov
add
add
add
add
jno
jmp
add
int
pop
in
jae
mov
mov
clc
lcall
add
push
lea
rol
pop
push
mov
push
xor
add
sub
pop
add
push
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
pushf
add
pushf
int3
mov
cld
movsl
test
xchg
add
cmpsl
add
mov
add
mov
add
pop
fs
cld
mov
add
sub
pop
push
push
inc
dec
dec
dec
pop
push
push
inc
dec
pop
movl
push
push
push
lea
push
call
jns
nop
jnp
add
add
addr16
xchg
add
mov
push
cmpsl
add
add
jmp
fmulp
add
push
add
pop
fwait
mov
arpl
fsts
cmpl
lcall
add
sahf
stc
call
ret
ret
rcrb
adc
loopne
call
ss
adc
and
push
push
push
call
mov
add
pushf
add
jno
scas
fldz
add
lock
movsl
add
in
push
add
mov
add
add
add
mov
add
pop
rolb
jno
je
popa
faddl
mov
outsl
add
mov
add
pop
add
insl
cld
add
test
call
mov
push
lea
push
push
lea
push
call
add
stos
add
push
add
imul
shl
jbe
add
add
add
add
add
int
stos
add
mov
add
add
andl
push
xchg
add
pop
mov
add
add
orb
sub
pop
pop
pop
push
push
lea
push
call
add
iret
add
popf
add
mov
fisubs
in
add
lds
add
pop
add
jmp
mov
cld
add
mov
popa
xchg
mov
xchg
rcll
add
pop
add
add
add
mov
add
icebp
fs
add
lcall
push
push
push
push
push
push
push
call
jo
mov
add
test
in
add
add
lods
lea
lods
jae
fsubp
adcl
add
adcl
add
fwait
stos
pusha
add
cld
add
add
jecxz
int3
add
mov
xchg
add
je
add
in
in
pop
push
push
push
lea
push
push
push
push
call
add
add
mov
mov
add
add
pushf
xchg
int
rolb
lea
xchg
ja
test
lods
lods
sub
pop
leave
ret
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
sti
in
add
repnz
clc
bound
lahf
add
mov
add
add
imul
filds
arpl
add
add
stos
mov
mov
add
ja
cld
pop
leave
add
mov
mov
imul
les
sub
pop
push
mov
push
not
not
xor
not
pop
add
push
shr
xor
add
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
jecxz
fs
in
movsl
std
add
add
add
addl
pop
subb
test
mov
jge
xchg
into
fs
cwtl
pop
cli
add
pop
lret
pusha
movsl
out
jno
pop
stc
jecxz
in
fdivr
lcall
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
cli
cwtl
fnstenv
add
mov
mov
add
gs
add
mov
fwait
mov
mov
shll
les
insb
add
add
fs
jnp
add
imul
push
push
lea
push
push
push
push
push
call
pop
mov
out
mov
add
jmp
add
jb
add
xchg
add
add
test
sbb
mov
add
fldlg2
add
insb
add
sub
in
mov
add
in
call
push
push
push
xor
push
push
pop
add
ror
shl
not
sub
add
pop
rol
shl
rol
shr
pop
push
push
push
push
push
lea
push
push
call
or
les
add
jl
mov
jae
xchg
test
aam
add
add
mov
cmp
pusha
pop
add
cltd
out
push
jl
scas
popf
add
js
mov
push
out
lcall
fdivs
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
popa
push
cltd
arpl
push
cli
add
out
leave
add
fwait
lds
lods
mov
add
xorb
add
add
add
lcall
or
add
call
push
push
rol
shl
shr
push
and
add
rol
sub
sub
pop
shr
dec
rol
pop
push
lea
push
push
push
push
call
mov
popa
push
int3
fs
imul
push
add
add
bound
add
fildl
cltd
lahf
fstpl
mov
fs
std
add
add
bound
add
add
add
jo
add
mov
add
mov
add
add
push
mov
add
shlb
add
mov
in
in
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
call
in
jb
add
movsb
add
insb
popa
jno
add
add
fwait
add
add
ret
popa
lods
jle
add
rcl
add
xchg
add
fs
add
aam
sub
pop
call
call
push
push
shr
shr
shl
xor
push
sub
add
sub
sub
sub
lea
pop
add
pop
push
add
sub
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
call
add
popf
pop
add
stos
add
mov
addr16
add
lds
lret
add
jnp
add
fstpl
movl
pop
push
push
rcl
add
add
lods
ljmp
lret
movsl
mov
jl
in
in
lcall
rorb
sbb
rorl
push
lea
push
push
call
cld
add
add
sti
add
mov
lret
cmc
add
popl
addb
add
pop
add
add
mov
add
insb
cmpsb
jne
add
idivb
add
fisubl
add
movsl
add
add
adcb
xchg
int3
gs
xchg
inc
cmp
push
call
jo
jae
cld
andb
imul
outsl
insb
cmc
jnp
rolb
test
ja
mov
cmc
cwtl
test
rcl
add
add
add
jns
add
movsl
pop
mov
add
roll
lcall
call
pop
mov
shr
push
rol
pop
add
push
shr
add
pop
mov
mov
push
push
push
push
push
call
lahf
jmp
add
add
xchg
mov
jo
add
addb
add
call
add
cwtl
pop
add
add
add
pusha
mov
out
out
mov
mov
add
sti
movsb
xchg
add
loopne
addr16
add
test
cmc
mov
loopne
sub
pop
add
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
gs
xchg
mov
mov
subb
mov
je
add
add
xlat
test
sub
pop
mov
push
push
call
pusha
cwtl
leave
andl
mov
add
leave
add
jnp
add
leave
pop
push
repnz
add
loop
add
test
add
test
add
add
add
in
clc
lcall
nop
nop
nop
nop
push
lea
push
push
push
lea
push
call
add
mov
movsb
add
jbe
add
popa
push
out
pusha
add
add
mov
cli
push
in
add
add
pop
out
rcll
loope
add
pusha
nop
xchg
call
pop
add
add
add
add
xchg
add
add
movl
mov
rorb
in
in
pop
cmp
jne
push
lea
push
push
push
call
add
movsb
add
loop
xchg
fnstsw
ret
pusha
outsl
add
enter
add
jnp
fcmovne
stos
mov
add
arpl
cwtl
fadds
add
jne
mov
push
push
push
call
mov
push
in
test
in
fcompl
lcall
pop
push
add
ja
cmpsb
push
add
shl
mov
gs
push
add
add
jle
add
cli
mov
lock
stos
push
add
std
lahf
popf
add
stos
sub
pop
movl
push
push
call
call
fcmove
add
jns
mov
add
add
fcomi
in
lcall
mov
mov
add
add
fwait
xchg
add
fnstcw
fmulp
mov
add
sub
pop
jmp
mov
push
push
push
push
call
add
pop
mov
add
add
mov
xchg
add
add
add
lds
enter
add
pop
add
stos
add
mov
mov
incb
add
test
fnsave
out
shrb
mov
sub
jne
push
shl
ror
pop
mov
push
lea
pop
movl
push
ror
add
sub
pop
jmp
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
insb
add
add
add
add
add
xchg
xchg
add
mov
divl
rolb
repnz
popa
push
add
bound
in
pop
loopne
add
repnz
jnp
add
sub
pop
mov
push
not
sub
not
pop
cmp
jne
mov
push
sub
rol
shr
pop
movl
push
inc
inc
add
xor
pop
jmp
push
push
push
call
clc
add
fcompl
add
shrb
mov
add
roll
imul
add
mov
add
mov
add
pop
filds
inc
cld
push
ror
shr
rol
xor
pop
cmpw
jne
push
not
rol
pop
mov
push
sub
pop
movl
push
lea
push
push
push
push
lea
push
push
push
call
push
add
fadds
loope
insb
pusha
add
add
add
jae
add
push
jecxz
add
iret
mov
add
add
insb
push
add
mov
jp
lret
test
xchg
addl
cld
rcrl
loopne
push
add
cwtl
mov
xchg
add
sahf
ja
add
add
add
in
loopne
jmp
pushl
push
push
lea
push
lea
push
push
push
push
push
push
call
add
jl
jb
xorl
add
addb
fs
cwtl
add
add
add
add
movsb
mov
in
fcompl
mov
push
lea
push
lea
push
push
push
push
call
push
xchg
jle
int
add
data16
add
add
fldenv
add
mov
add
icebp
lock
add
scas
add
in
mov
add
loop
mov
jnp
stos
cwtl
jae
shrb
jb
sti
test
add
in
call
mov
push
push
shl
sub
sub
push
or
not
add
rol
inc
sub
rol
pop
shl
shl
shl
xor
pop
push
push
lea
push
push
push
push
lea
push
call
stos
push
mov
fcomps
icebp
shll
les
add
ja
push
pop
push
jne
cwtl
add
add
xchg
outsl
add
into
pop
add
gs
cmpsb
cld
addr16
add
loopne
aam
sahf
nop
popf
xchg
xorb
in
in
push
push
inc
add
rol
pop
call
cmpl
je
push
push
shr
push
or
not
add
add
sub
xor
ror
pop
inc
pop
push
not
add
pop
push
push
rol
not
pop
call
push
push
push
lea
push
push
call
push
pop
push
loope
mov
mov
popa
xchg
repnz
in
add
jo
or
in
add
jae
in
add
faddl
jns
xchg
add
aam
add
cmc
jno
add
jbe
pop
leave
stos
roll
add
jno
in
add
outsl
testl
ret
int3
je
push
push
sub
ror
inc
push
or
inc
add
sub
ror
sub
sub
pop
add
shl
not
pop
push
rol
dec
pop
push
call
push
xor
shl
add
pop
cmpl
je
push
push
shr
sub
push
or
inc
add
rol
not
sub
sub
xor
shl
xor
pop
lea
pop
push
shl
xor
inc
pop
push
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
out
add
add
add
jl
add
pop
imul
xchg
add
add
add
push
pop
add
mov
into
je
stos
add
les
jo
filds
popf
pop
data16
pop
add
iret
mov
mov
addb
in
loopne
cmpl
je
push
push
ror
shl
add
push
or
inc
add
not
sub
lea
ror
pop
shr
pop
push
push
push
call
mov
rolb
out
add
add
push
jne
push
push
add
rolb
add
in
add
sub
add
pop
push
fimuls
add
cmpsl
add
add
je
add
add
lea
fcmovbe
push
push
sub
pop
push
push
dec
ror
xor
pop
call
cmpl
je
push
push
inc
inc
push
or
not
add
sub
sub
sub
lea
pop
add
sub
pop
push
sub
pop
push
push
shl
pop
call
push
dec
pop
cmpl
je
push
push
dec
add
shl
push
or
not
add
dec
shr
ror
sub
xor
rol
rol
inc
pop
add
pop
push
rol
not
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
cltd
pop
into
add
fistl
add
in
add
iret
add
nop
fiadds
aam
pop
add
add
add
jle
rcrb
clc
pusha
add
add
xchg
mov
jo
add
sub
pop
call
cmpl
je
push
push
xor
not
push
push
pop
add
shl
lea
sub
xor
sub
rol
pop
shl
pop
push
rol
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
lret
push
push
add
add
lea
pushaw
jns
add
push
add
pop
sahf
out
leave
roll
add
hlt
add
add
xchg
mov
bound
jne
mov
sub
pop
call
cmpl
jne
push
ror
pop
mov
push
push
push
push
push
lea
push
push
call
stc
cltd
add
add
rcr
loop
lret
add
loopne
add
stos
add
push
mov
lods
add
add
loop
mov
add
pop
xlat
mov
add
jp
add
jno
lret
cmc
add
add
add
add
cmpsl
add
lcall
add
add
add
push
push
push
call
filds
cltd
add
mov
lret
lock
mov
add
icebp
push
ffree
stos
add
add
mov
push
mov
add
fsubs
add
xchg
movsb
push
int3
lea
add
imul
add
lcall
dec
add
add
shrl
push
push
push
push
push
push
call
gs
lret
push
add
cltd
jno
add
fmul
fildl
add
add
les
leave
ljmp
hlt
pop
add
filds
rclb
shr
pop
pop
push
push
lea
push
lea
push
push
push
call
add
jle
add
lods
xlat
add
add
ficomps
pushf
add
add
int3
leave
add
mov
add
mov
add
int3
in
mov
jmp
mov
stos
adc
cmc
addb
add
cli
add
int3
lods
test
ja
in
call
pop
pop
push
inc
sub
not
pop
pop
push
shl
pop
leave
ret
push
lea
push
push
push
lea
push
lea
push
call
sarb
add
cld
add
mov
add
add
popf
add
jb
push
in
arpl
add
push
add
mov
mov
add
scas
lcall
add
add
in
call
push
push
shr
dec
shr
shl
pop
mov
add
push
add
pop
cmpl
jne
push
push
lea
dec
add
push
push
pop
add
shl
lea
sub
sub
pop
not
pop
push
shl
rol
sub
inc
pop
pushl
call
push
push
push
push
lea
push
push
push
push
call
mov
popf
data16
ja
movsl
mov
mov
add
sti
in
iret
add
lock
cmpsl
add
mov
add
add
add
test
aam
les
add
jno
lock
cmpsb
sahf
mov
add
test
scas
arpl
add
lcall
call
int
leave
pop
call
jmp
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
popf
cltd
jne
aad
sahf
add
roll
mov
cltd
push
xchg
add
pop
pusha
add
popf
scas
lods
nop
imul
out
popa
add
lods
aad
lret
mov
add
add
nop
jle
sub
pop
cmpl
jne
push
ror
add
pop
mov
push
push
push
lea
push
call
out
jge
mov
jbe
roll
mov
mov
in
mov
hlt
xchg
add
cltd
add
in
add
stos
add
add
xchg
add
jno
sti
xorb
add
fcoml
jl
iret
mov
add
js
fs
mov
add
lahf
addl
xchg
mov
rclb
lcall
js
add
push
push
push
call
test
mov
add
aam
add
mov
notb
add
test
sahf
jno
repnz
lret
add
add
jb
lea
testl
add
add
hlt
lcall
push
pop
jmp
push
add
not
add
pop
cmpl
jne
push
push
lea
push
sub
add
shr
xor
sub
rol
lea
add
pop
rol
pop
push
push
push
call
in
pop
add
add
jno
fcompl
rolb
stc
into
add
jl
add
aad
add
in
add
add
fistl
sub
pop
pushl
push
dec
xor
pop
call
push
add
pop
push
push
push
lea
push
push
call
mov
nop
add
push
add
add
add
add
add
add
lock
pushf
xchg
js
add
add
add
jb
iret
add
pop
call
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
out
add
fcmovnbe
test
add
or
add
add
les
xor
fiadds
mov
andl
pop
push
add
call
add
add
add
in
mov
mov
push
add
aad
add
out
add
ficomps
add
lcall
adcb
add
pop
cmp
pop
cmpl
je
push
push
push
call
add
lods
mov
ror
aad
cld
pop
pop
call
mov
mov
data16
in
pop
addb
add
jge
add
roll
cmpsl
rolb
fiadds
jne
mov
mov
sub
pop
cmpl
jne
mov
push
inc
pop
mov
push
shr
sub
pop
push
push
push
rol
add
push
and
add
rol
add
shl
sub
xor
rol
pop
pop
push
inc
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
push
call
ljmp
add
outsl
add
mov
lds
je
out
mov
insb
add
add
add
lcall
shrb
fcmovne
cmp
ret
fwait
mov
lea
push
or
not
add
rol
add
sub
ror
xor
inc
pop
sub
add
pop
push
add
xor
sub
add
pop
pushl
push
xor
shr
pop
call
push
ror
pop
call
push
push
lea
inc
push
or
not
add
sub
shl
pop
shr
lea
pop
push
add
add
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
call
lret
mov
je
add
mov
in
lret
jecxz
pop
testb
add
scas
add
pushf
imul
mov
add
add
ljmp
jecxz
add
add
lock
popl
add
add
call
push
push
inc
push
sub
add
sub
sub
xor
shl
shr
pop
lea
xor
pop
push
not
add
rol
pop
pushl
push
lea
pop
call
push
sub
rol
pop
call
push
push
shl
sub
ror
push
or
not
add
lea
shl
xor
dec
sub
dec
pop
rol
add
pop
push
push
push
lea
push
call
lds
stos
icebp
mov
add
jl
add
add
rolb
add
pop
pop
add
mov
test
pop
push
pop
ficompl
add
sub
pop
pushl
push
sub
xor
pop
call
push
push
lea
push
call
add
add
flds
fcmovne
loopne
test
add
cmpsl
add
add
addl
icebp
add
add
fnsave
test
mov
add
loope
push
stos
add
bound
int3
pop
test
movsb
push
add
hlt
pop
call
push
push
not
push
and
add
xor
sub
dec
sub
not
pop
inc
not
sub
pop
push
add
lea
pop
pushl
push
not
sub
shr
pop
call
call
push
push
lea
push
or
inc
add
sub
shl
sub
shr
pop
lea
not
pop
push
pop
pushl
push
shr
xor
dec
pop
call
push
xor
rol
pop
call
push
push
inc
add
push
and
add
not
sub
shr
add
sub
pop
not
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
fldl
add
mov
in
pop
mov
mov
repnz
std
mov
mov
movsb
add
idiv
add
add
add
add
mov
jbe
add
lea
add
add
add
sub
pop
pushl
call
push
push
push
push
push
push
call
add
cmpsl
add
add
add
divl
pop
scas
mov
lea
add
int
movsb
add
add
add
add
cli
int
add
pop
pop
add
int3
add
add
mov
fiaddl
xlat
int
add
nop
stos
add
pop
call
push
push
ror
push
or
inc
add
inc
not
sub
xor
add
pop
rol
not
dec
pop
push
add
lea
ror
pop
pushl
push
push
push
lea
push
call
mov
mov
add
hlt
movb
cld
push
pop
loopne
js
mov
add
stos
add
rcll
imul
popf
je
add
add
jns
pop
flds
fbld
js
jne
cmpsl
push
add
add
add
sub
pop
call
call
push
push
sub
add
ror
push
push
pop
add
shr
sub
sub
pop
rol
shl
pop
push
shl
lea
rol
shr
pop
pushl
call
push
add
inc
pop
lea
push
not
pop
push
push
shl
dec
pop
call
push
push
sub
dec
push
and
add
ror
not
sub
sub
shl
not
pop
ror
shr
ror
pop
push
sub
pop
pushl
call
push
lea
not
lea
pop
call
push
push
not
dec
push
and
add
add
add
sub
sub
sub
pop
add
pop
push
not
lea
pop
pushl
call
push
shl
ror
xor
pop
call
push
push
inc
not
shr
push
sub
add
shr
sub
lea
add
pop
rol
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jmp
add
add
in
add
fwait
std
add
add
add
bound
add
add
push
add
test
in
fdivr
lcall
jne
push
shl
xor
pop
call
push
xor
add
pop
call
push
push
shr
push
or
not
add
rol
not
sub
shl
pop
xor
pop
push
push
push
push
call
push
add
add
out
pop
xchg
add
cmc
lock
adcb
add
loop
test
add
outsl
add
jbe
jb
add
lcall
xchg
add
leave
push
add
addb
add
mov
add
pop
jp
mov
scas
mov
add
outsl
mov
pushl
call
push
push
push
or
not
add
rol
not
add
sub
inc
add
shl
pop
not
sub
dec
pop
push
push
lea
dec
push
sub
add
sub
sub
sub
sub
pop
xor
pop
push
push
lea
push
lea
push
push
push
lea
push
call
loop
fcompl
add
add
add
sbb
jns
add
stos
add
stc
add
add
ffree
in
pop
mov
call
add
jbe
add
rolb
popf
ret
add
push
cmpsl
call
add
pusha
int3
add
mov
add
in
call
push
shr
sub
pop
pop
push
push
push
lea
push
push
push
call
add
test
pop
into
test
mov
je
add
in
add
add
popf
mov
jae
fs
faddp
mov
in
call
dec
jne
push
sub
shr
pop
call
mov
push
lea
push
push
push
push
push
push
push
push
call
movsl
mov
add
lds
add
add
std
cltd
lret
xlat
fsubr
mov
add
imul
clc
sub
pop
int
push
lea
push
push
call
add
add
mov
int
jmp
repnz
out
push
cltd
call
add
add
add
arpl
add
add
add
add
loop
add
add
lcall
pushf
and
ljmp
inc
mov
not
push
and
add
ror
lea
sub
sub
dec
shl
inc
pop
not
ror
pop
push
shl
rol
not
add
pop
pushl
push
push
push
push
push
lea
push
call
add
add
out
add
add
add
add
and
pop
rcrb
je
lods
cmpsb
shll
add
insb
add
add
fwait
add
call
call
push
inc
dec
pop
push
push
not
pop
call
push
push
shr
push
and
add
dec
sub
sub
add
inc
shr
pop
xor
shr
pop
push
push
push
push
push
push
call
mov
rcrb
add
out
enter
add
add
cmpsb
add
mov
add
jmp
loope
out
movsb
jne
push
mov
outsl
add
nop
add
cmc
imul
into
mov
fwait
stc
popf
add
xlat
cli
shll
test
call
pushl
push
add
pop
call
push
push
push
lea
push
push
push
call
nop
fwait
add
mov
lock
imul
mov
cltd
mov
add
test
pop
lret
flds
add
add
add
lret
jbe
ja
lcall
imul
pop
call
mov
push
ror
dec
pop
lea
push
push
shr
push
sub
add
sub
xor
xor
pop
not
pop
push
push
push
lea
push
call
add
add
imul
jl
mov
jecxz
jne
lret
ja
add
add
movsl
out
add
clc
xchg
in
xchg
mov
push
lds
add
add
lock
add
shrl
add
lcall
jne
call
push
push
lea
push
push
push
push
call
movsl
in
pop
mov
into
jne
pusha
add
aam
xchg
hlt
mov
add
fadds
add
add
add
les
out
sub
pop
lea
push
push
sub
shl
add
pop
push
push
push
inc
rol
pop
pushl
push
push
inc
push
and
add
sub
sub
shr
rol
not
pop
pop
push
push
lea
push
lea
push
call
fistps
call
add
add
add
aam
push
add
jo
jl
int
stos
add
ror
in
pop
mov
add
add
or
add
push
add
lea
jge
mov
in
lock
lcall
push
lea
push
push
call
add
cmpsl
clc
add
lock
cli
add
lods
mov
add
mov
mov
add
jns
add
ror
int3
jbe
add
nop
fistl
add
add
add
add
xchg
add
lock
andl
js
mov
leave
add
add
sub
pop
call
push
push
xor
add
not
push
and
add
shl
sub
lea
add
not
pop
ror
shr
pop
push
add
xor
add
pop
pushl
call
push
push
lea
push
push
push
lea
push
call
add
rclb
jns
test
add
pop
loop
add
xlat
outsl
jae
jo
add
push
int
test
push
imul
addb
add
add
fistl
jl
lock
add
loope
cmpsb
xchg
add
add
add
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
push
ror
in
pop
add
add
push
lret
add
pop
add
addb
add
arpl
movsl
aad
hlt
push
stc
add
add
xchg
add
cmp
icebp
sub
pop
call
push
push
shl
not
xor
push
sub
add
shl
xor
shr
sub
rol
pop
dec
add
ror
pop
push
push
call
add
add
mov
add
push
mov
add
xchg
sti
data16
enter
add
icebp
add
add
add
sti
add
mov
mov
mov
sahf
add
add
push
add
add
clc
lcall
jne
push
ror
sub
pop
call
push
push
push
push
push
lea
push
call
add
xchg
sbb
fs
add
jns
lahf
add
in
gs
add
mov
out
lock
add
add
cli
add
in
pop
clc
add
mov
pop
add
add
js
cli
push
outsl
xchg
data16
xchg
hlt
sub
pop
call
pushl
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
add
push
add
movsl
fwait
lret
add
add
clc
add
popa
add
jle
popf
add
mov
pushf
gs
sahf
pop
add
lcall
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
fimuls
pop
add
hlt
mov
add
cwtl
shlb
ja
lea
popa
cmpsl
add
in
add
jno
fs
pop
jmp
push
push
xor
add
push
or
not
add
sub
xor
lea
inc
pop
rol
pop
push
push
push
push
push
push
lea
push
lea
push
call
xchg
stc
add
idiv
add
int3
add
loop
mov
add
popf
add
fs
add
hlt
jns
stc
add
shrl
mov
add
mov
in
loopne
lcall
jne
call
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
icebp
add
add
pop
add
push
add
xchg
fs
testb
pop
jmp
add
add
add
cli
push
xchg
add
clc
movsb
mov
add
add
vminps
add
roll
pop
push
push
inc
pop
call
push
push
lea
push
xor
add
shr
lea
shr
add
sub
dec
pop
add
pop
push
pop
pushl
push
dec
shl
add
rol
pop
call
push
not
dec
ror
pop
push
push
rol
ror
pop
call
push
add
xor
pop
leave
push
xor
add
sub
pop
add
pop
push
ror
shr
pop
pop
push
sub
pop
pop
push
dec
inc
pop
xor
inc
push
push
lea
push
push
lea
push
push
push
lea
push
call
jge
mov
addl
pop
add
shll
add
add
jecxz
mov
testl
stos
add
hlt
pop
mov
add
jle
in
loopne
ret
push
lea
push
call
lods
add
add
lods
cli
mov
add
les
icebp
out
add
lock
in
add
out
mov
add
sub
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
addr16
jno
add
call
add
add
call
mov
add
mov
arpl
in
int3
roll
bound
repnz
push
xchg
out
add
add
add
jl
cmpsb
add
in
fcompl
or
push
add
pop
push
push
push
push
push
call
add
xchg
add
test
lds
cltd
loope
push
add
xchg
add
add
testl
add
xchg
test
jo
testl
add
push
stos
pop
bound
popf
add
pop
lret
andl
pop
sub
pop
mov
push
rol
sub
sub
pop
cmpl
jne
push
push
call
gs
add
enter
add
push
stc
add
sti
fiaddl
mov
add
push
jmp
bound
add
add
test
pop
mov
jmp
push
ror
shl
pop
mov
push
lea
push
push
push
push
push
push
call
jmp
mov
mov
loop
call
jo
hlt
add
fistl
add
push
add
data16
iret
jno
add
cmpsl
add
add
push
add
movsb
jl
push
in
add
pop
sub
pop
and
push
lea
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
scas
rcll
add
into
add
add
sahf
in
add
add
scas
lods
jno
jbe
scas
add
fsubr
add
push
cmc
jl
cmpsl
rcrb
cmpsl
add
add
add
scas
test
add
sub
pop
xor
push
xor
rol
pop
xor
add
push
lea
shr
pop
xor
dec
push
lea
push
push
push
lea
push
push
push
push
push
call
push
add
test
rol
mov
je
xchg
push
add
ficoms
ja
push
add
scas
mov
out
add
jl
mov
add
lret
push
pushf
add
add
sub
pop
sub
jmp
push
lea
push
call
fists
cld
ret
lods
fistpll
add
mov
mov
add
out
add
add
pusha
popf
mov
in
clc
lcall
add
add
pushl
push
add
shr
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
js
jnp
add
lahf
add
add
fwait
test
mov
push
fisubl
out
push
rorl
sahf
addb
push
loope
addb
sub
pop
sub
push
shr
ror
inc
pop
cmp
jne
push
xor
dec
add
pop
mov
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
faddl
add
push
push
add
add
fwait
js
pushf
call
lods
jne
movsb
jae
jne
add
add
add
mov
pop
filds
mov
add
pop
add
xchg
add
xlat
out
into
add
sub
pop
sub
push
add
ror
pop
mov
push
add
inc
sub
pop
shr
push
dec
xor
lea
pop
add
push
lea
push
push
push
push
call
rcrb
movsb
add
movl
ficomps
add
arpl
add
stc
add
add
lcall
jmp
push
subl
push
lea
push
lea
push
lea
push
push
push
call
add
add
cmpsl
push
xchg
mov
add
add
lcall
jae
push
outsl
jo
push
xchg
push
ret
add
mov
add
stc
jae
jo
push
add
lcall
insb
sub
pop
shr
push
lea
not
xor
pop
and
sub
push
not
sub
xor
pop
cmp
jne
push
push
push
push
push
push
push
push
call
lret
shl
clc
call
out
push
test
add
add
add
add
popa
cmpsl
add
mov
add
add
call
aam
out
jmp
add
test
add
incb
add
fnstcw
add
add
mov
add
jecxz
sahf
fwait
push
xlat
add
loopne
leave
push
push
push
push
call
leave
iret
add
xchg
push
fsubp
add
cmpsb
leave
cltd
loope
mov
add
add
add
into
add
stc
add
add
add
arpl
add
xchg
rol
jp
ljmp
lcall
add
push
push
call
add
pusha
pop
add
push
filds
xchg
lret
imull
cmpsb
test
bound
test
xchg
add
add
add
add
add
lcall
push
inc
pop
mov
push
ror
add
pop
add
push
push
lea
push
push
call
push
enter
ret
mov
jp
add
andb
add
hlt
add
stc
xchg
push
add
add
xlat
jge
add
add
add
shl
pusha
add
sub
pop
push
push
push
sub
lea
lea
sub
pop
push
push
push
call
pop
mov
mul
bound
rclb
hlt
sarl
add
add
std
add
icebp
pop
xlat
stos
icebp
test
ret
ret
sub
pop
push
push
lea
push
lea
push
push
call
testl
ljmp
mov
add
add
lods
mov
mov
loop
lcall
add
push
js
stc
lds
add
add
sti
arpl
add
pushf
add
out
imul
add
add
in
lock
push
mov
push
pop
lea
sub
push
lea
dec
dec
pop
mov
push
push
lea
push
push
push
lea
push
push
call
pushf
add
mov
mov
test
add
mov
mov
nop
mov
add
mov
divl
xchg
add
add
add
add
add
movsl
mov
add
call
add
lcall
ljmp
sbb
loopne
sub
pop
mov
push
not
inc
add
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
lcall
imul
cld
xchg
pop
add
mov
out
imul
lods
and
lods
xchg
add
xchg
movsl
add
test
add
cwtl
add
lock
test
sub
pop
mov
push
push
lea
push
push
push
call
add
add
pop
sar
movsb
stos
jmp
mov
lock
add
pop
jge
add
add
add
in
repnz
roll
shr
shl
xchg
add
test
add
jns
push
mov
push
add
mov
int
mov
sub
pop
add
push
xor
ror
rol
pop
xor
mov
push
sub
not
xor
pop
and
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
mov
add
add
pop
loopne
add
add
push
add
mov
incb
add
push
pusha
cli
jnp
add
mov
add
out
roll
je
mov
data16
hlt
pop
test
add
lcallw
subl
push
push
push
push
lea
push
lea
push
call
addr16
lods
pushf
add
filds
nop
add
cltd
movsl
add
loop
add
push
imul
negb
in
test
pop
mov
xchg
jle
jo
jl
ljmp
addl
add
add
movsl
add
in
push
add
mov
add
rolb
push
call
lods
mov
clc
add
loopne
sahf
pusha
loop
mov
add
add
add
mov
add
test
mov
out
bound
pushf
ret
mov
imul
add
add
pop
fildl
add
test
add
pop
lods
scas
add
add
adcb
bound
push
repnz
enter
add
clc
lcall
add
xor
outsb
lea
push
push
lea
push
push
push
call
push
hlt
mov
cmpsl
mov
add
subb
in
rolb
add
fadd
icebp
mov
pop
lea
movsl
mov
add
icebp
add
popl
push
add
add
popl
lcall
push
sub
dec
pop
cmpb
jne
push
push
push
lea
push
push
push
push
call
add
add
mov
mov
jb
lret
mov
xchg
add
nop
leave
gs
mov
add
jecxz
add
xchg
test
xchg
jge
pop
sub
pop
add
push
inc
pop
cmp
je
push
inc
shr
pop
add
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
push
call
lock
add
movl
mov
xchg
add
add
fisubs
test
add
jecxz
in
fdivr
lcall
rcrb
xor
push
lea
push
call
add
lea
lds
add
mov
filds
jge
xlat
pop
add
enter
leave
add
fiaddl
int
add
fxch
jae
add
stos
push
mov
mov
add
scas
add
aad
rolb
add
sub
pop
pop
pop
push
add
ror
not
add
pop
pop
push
shl
pop
pop
leave
push
ror
dec
rol
pop
ret
push
add
pop
mov
add
push
pop
mov
push
push
push
lea
push
push
push
push
push
call
orb
imul
jae
mov
gs
mov
add
jle
add
loopne
lcall
mov
call
push
call
add
shrb
jle
mov
popf
jno
add
rolb
add
rolb
add
mov
add
add
add
fisubl
push
out
sub
pop
call
push
lea
pop
xor
push
shr
add
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
push
jo
shlb
loop
mov
mov
in
adc
pushf
fistps
data16
mov
roll
roll
cmc
lcall
pop
add
add
add
int3
sub
pop
pop
push
xor
not
lea
pop
pop
push
add
pop
pop
push
add
sub
lea
pop
pop
leave
push
shl
pop
ret
push
push
shr
pop
mov
add
push
add
sub
xor
ror
pop
push
push
push
push
push
push
push
call
add
addl
leave
add
add
in
add
cmpsl
pop
add
test
outsl
imul
lcall
add
out
jbe
test
lods
clc
add
add
lcall
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
cmpsb
add
loop
out
xchg
mov
add
imul
lods
add
add
bound
pop
pushf
add
sti
jne
add
add
hlt
add
add
jb
iret
scas
mov
add
add
popa
mov
sub
pop
push
push
inc
pop
mov
push
dec
pop
push
push
push
lea
push
call
shrl
mov
popl
mov
pop
mov
negl
scas
bound
pusha
add
add
add
push
sub
pop
pop
push
push
call
ljmp
shl
std
cmpsl
xchg
arpl
int3
lcall
mov
add
mov
cmpsl
stos
add
add
add
pop
add
out
xchg
add
push
xchg
add
cmc
movl
test
push
into
call
jnp
add
add
push
cmp
sub
xor
pop
sub
push
lea
xor
pop
mov
push
dec
lea
pop
shr
add
push
push
push
lea
push
push
push
push
push
push
push
call
ljmp
xchg
add
fs
subl
fiaddl
add
add
enter
add
outsl
ror
add
pop
js
fsts
lea
push
push
push
lea
push
call
add
lahf
pusha
add
add
cli
lahf
roll
roll
data16
iret
add
push
add
add
gs
fmuls
and
add
lods
mov
add
add
add
rolb
mov
add
pushl
push
ror
rol
pop
popl
push
inc
sub
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
xchg
xchg
hlt
add
jge
add
add
cmpsl
pop
addb
mov
add
add
ja
ja
mov
add
pop
addl
fdivrl
jl
loop
mov
add
add
add
add
lcall
stc
xor
push
add
lea
ror
pop
lea
mov
push
rol
pop
add
push
shl
inc
not
pop
xor
rol
push
add
dec
pop
nop
push
add
pop
nop
push
shr
xor
shr
pop
xor
nop
push
not
pop
nop
inc
push
lea
push
push
push
push
push
call
lret
add
gs
lods
mov
icebp
add
add
hlt
push
pop
add
push
stos
add
pop
pop
pop
sti
and
sub
pop
nop
nop
push
ror
not
rol
sub
pop
cmpb
jne
push
pop
add
push
dec
lea
xor
sub
pop
nop
push
push
push
push
push
call
aad
negb
mov
add
shll
add
add
cmc
popl
jbe
add
mov
add
add
cmpsb
shlb
add
movsb
add
jb
mov
push
mov
loop
test
in
add
lahf
cmpsb
jp
mov
add
mov
add
in
in
lcall
push
xor
not
shl
pop
cmp
je
push
push
push
push
push
push
push
lea
push
call
add
cltd
add
add
add
out
out
loope
lds
jae
shl
add
add
aad
add
add
lcall
nop
push
add
pop
inc
push
xor
pop
nop
push
shr
sub
inc
pop
nop
cmp
jb
push
push
call
aam
add
jmp
add
add
addb
out
add
jne
add
add
outsl
in
add
add
outsl
mov
mov
sub
pop
xor
jmp
push
lea
push
push
call
test
add
hlt
enter
push
hlt
add
jb
fwait
add
out
stc
ja
add
add
add
xchg
lret
sbb
xchg
mov
int3
call
popa
jecxz
jb
clc
aad
mov
add
jne
add
mov
pushf
push
add
add
add
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
push
pop
add
rolb
fcompl
out
add
jno
xchg
mov
add
add
add
add
js
cmpsb
add
add
add
lcall
rcll
mov
sub
add
lea
pop
movzwl
mov
push
xor
dec
sub
pop
add
push
lea
push
lea
push
push
call
mov
jb
jecxz
in
in
sarb
add
add
mov
mov
out
add
std
add
sti
add
xchg
add
mov
std
mov
add
je
add
push
mov
add
add
add
add
add
jae
lcall
out
in
lods
mov
sub
pop
mov
push
ror
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
cmpsl
rolb
cld
out
add
jmp
mov
add
push
popl
leave
aam
push
sahf
add
fs
lock
add
cmpsb
mov
movsb
mov
cwtl
add
add
sub
pop
xor
push
lea
push
push
push
call
add
mov
test
cmp
add
addl
popf
mov
add
add
ret
pop
xchg
add
xchg
int3
into
mov
clc
add
sub
pop
shl
xor
push
push
push
push
push
call
add
add
mov
lods
outsl
jnp
push
add
imul
add
jbe
pop
add
ljmp
cmc
add
imul
add
loope
xor
push
inc
pop
shl
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
movsl
add
add
push
sahf
ret
leave
lret
imul
ror
mov
cmc
fadds
push
popf
add
xchg
rcrl
jbe
loop
fldl
mov
add
add
add
jnp
pop
add
add
orl
shll
mov
movsl
xchg
out
jbe
add
sub
pop
xor
push
lea
push
push
push
push
lea
push
call
pusha
add
lds
add
out
pop
insb
fs
pusha
add
lcall
pop
test
imul
cmpsl
arpl
add
add
lods
into
mov
test
pusha
add
imul
gs
add
leave
addl
add
pusha
mov
imul
cli
popa
sub
pop
mov
add
push
rol
add
shl
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
pop
add
add
mov
shll
add
mov
pop
fildl
shlb
shll
lock
movsl
add
xchg
icebp
les
bnd
fwait
add
scas
imul
sub
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
add
rcl
jp
test
shl
jo
add
add
add
mov
stc
xlat
add
in
fdivr
lcall
push
xor
shl
xor
pop
pop
leave
push
push
lea
push
push
call
lea
add
add
add
rolb
mov
bound
add
out
push
xchg
jo
add
add
popa
lea
in
add
in
lock
ret
push
push
lea
push
push
lea
push
push
call
add
xchg
pop
ret
add
add
cmc
int
mov
add
roll
jge
jmp
push
add
add
iret
lret
frstor
mov
add
add
jp
in
call
push
push
pop
mov
push
push
call
cltd
pop
call
add
arpl
rcl
lret
add
mov
add
add
add
in
enter
in
clc
lcall
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
pop
mov
mov
mov
shl
int
into
repnz
add
scas
cld
movsl
add
lock
jle
add
shll
imul
add
stos
mov
filds
add
rol
icebp
repnz
popf
sub
pop
push
push
shl
xor
ror
pop
push
push
add
ror
shr
add
pop
push
push
shr
sub
add
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
call
xchg
roll
aam
push
xchg
std
add
add
add
mov
popf
cld
add
in
add
add
mov
mov
add
ret
xchg
add
mov
stos
add
add
lock
xchg
add
shll
cmc
add
xchg
add
notb
add
jns
sub
pop
mov
mov
push
push
lea
push
push
call
push
add
les
test
int
jl
in
imul
add
add
add
sbbb
into
mov
shrl
add
add
add
int3
xchg
jnp
add
add
add
add
lock
lcall
rorb
test
add
mov
push
lea
push
push
push
push
call
add
addr16
add
leave
cltd
cli
fidivs
xchg
std
jbe
loopne
lahf
iret
jl
pop
add
add
pushaw
add
pop
add
add
mov
enter
add
jp
add
test
je
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
pop
xchg
add
clc
iret
pop
add
add
add
add
mov
push
rolb
xchg
xchg
stos
add
add
notl
int
enter
dec
or
push
call
test
orb
add
add
pusha
add
add
push
je
flds
add
cltd
add
test
lea
add
pop
inc
push
push
lea
push
push
push
call
call
add
add
movb
xchg
add
out
shll
add
ljmp
push
add
mov
gs
push
lock
add
add
mov
jno
add
fadds
rorb
test
add
push
pop
test
je
push
push
push
push
push
push
call
add
out
add
imul
pop
xchg
add
in
push
movsb
shl
int
mov
jge
xchg
leave
jbe
test
add
add
add
jbe
in
call
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
aad
loop
mov
incb
addb
jmp
xchg
in
add
mov
add
clc
cld
outsl
jge
ja
add
sub
pop
inc
push
push
lea
push
push
lea
push
call
add
test
add
mov
mov
cltd
add
add
mov
pushf
mov
add
icebp
jmp
add
js
in
in
pop
cmp
je
push
push
push
lea
push
lea
push
push
call
mov
add
gs
push
iret
add
add
add
icebp
leave
in
jae
aam
ljmp
jae
jmp
in
add
loopne
add
rcrb
add
add
add
add
add
in
call
test
jne
push
lea
push
push
push
lea
push
push
push
push
call
jno
add
add
add
push
movsb
xchg
testl
push
mov
incb
imul
fdiv
add
andb
add
jb
cli
mov
sub
pop
xor
push
shl
shl
pop
pop
push
xor
pop
pop
pop
push
lea
pop
pop
leave
push
shl
shl
inc
inc
pop
ret
push
lea
push
push
push
push
push
call
mov
add
pop
mov
fs
cmpsl
push
pushf
adcb
xchg
mov
imul
mov
int
add
stos
data16
add
call
add
ror
sub
pop
mov
push
lea
xor
pop
inc
cmp
jne
push
lea
push
push
push
push
push
lea
push
push
push
call
push
lret
aad
add
add
xchg
andl
les
jb
add
gs
add
lock
add
imul
outsl
sub
pop
lea
push
sub
pop
mov
push
push
push
call
pushf
jbe
add
add
add
clc
test
mov
ljmp
add
out
jb
mov
enter
add
mov
sub
pop
test
je
push
push
call
jbe
lods
lret
les
cld
add
movl
add
je
addb
mov
cld
int
add
add
pop
in
js
idivl
loop
pop
hlt
cli
add
rclb
lods
mov
jbe
stos
out
pop
add
filds
add
lds
mov
jo
imul
clc
lcall
push
add
push
push
lea
push
call
addl
add
mov
pop
add
add
add
fs
add
mov
add
mov
mov
mov
lods
popa
icebp
add
jle
xchg
pop
add
add
mov
fsubrp
xchg
iret
add
loopne
test
decl
mov
inc
push
push
call
scas
add
add
lcall
js
addb
add
roll
add
add
je
mov
add
add
test
fwait
add
test
jp
add
add
push
into
push
add
rorb
inc
add
add
jnp
dec
push
lea
push
push
call
add
add
cld
fdivr
pop
call
mov
cld
imul
mov
mov
add
jmp
mov
loopne
mov
add
add
add
add
push
pusha
add
add
add
testb
call
roll
add
cmp
je
push
add
not
pop
jmp
push
push
push
lea
push
lea
push
lea
push
call
roll
pop
jne
add
cltd
popl
mov
push
xchg
popa
repnz
lods
add
aam
add
mov
lahf
mov
add
in
call
xor
push
lea
ror
lea
pop
pop
pop
push
push
call
cli
add
data16
add
mov
sti
add
call
test
fwait
pop
aad
mov
jge
pushf
add
push
add
add
xchg
xchg
push
add
leave
jae
lret
add
addr16
pop
pop
push
shr
pop
pop
push
xor
pop
leave
ret
push
shr
sub
add
sub
pop
lea
push
lea
push
push
push
push
push
lea
push
push
call
clc
fcmovne
mov
add
add
mov
jne
add
test
pop
add
add
push
add
add
push
cmc
add
lods
scas
orb
push
add
pop
cltd
test
add
testl
gs
add
mov
add
mov
add
vxorps
lcall
push
push
push
push
call
push
jo
cli
pop
pop
add
fildl
add
add
cwtl
enter
add
faddl
add
jge
sub
pop
pop
pop
push
push
call
pop
push
add
fnsave
popa
clc
pop
jmp
mov
bound
cld
add
add
mov
fistl
add
aad
mov
add
add
loop
add
mov
add
mov
add
add
mov
jp
xchg
add
imul
icebp
aam
xchg
sub
pop
pop
leave
push
add
shr
xor
rol
pop
ret
push
lea
lea
sub
pop
mov
push
rol
dec
pop
pop
pop
push
sub
sub
pop
pop
push
rol
dec
pop
pop
push
dec
pop
leave
push
inc
pop
ret
out
jl
iret
out
jl
iret
and
iret
iret
out
lods
lret
iret
out
pushf
iret
iret
cmp
iret
sbb
iret
iret
out
fmul
iret
out
iret
iret
iret
push
add
iret
les
mov
mov
and
and
push
fdivrs
ljmp
into
push
add
mov
inc
mov
add
jecxz
movsl
stos
imul
and
push
decl
or
lods
cmc
aas
mov
mov
dec
mov
imul
mov
testb
mov
gs
pop
mov
test
cmp
jno
and
xor
rorl
xchg
dec
xchg
subb
mov
and
sbb
lods
pop
loope
jae
sub
cmp
ficomps
gs
push
push
inc
test
sarl
lods
aaa
aam
in
mov
jle
mov
pop
sarl
imulb
lock
mov
js
ja
out
push
ljmp
loope
jo
stos
push
mov
push
icebp
stc
jl
outsb
shrb
push
dec
cmp
mov
sbb
jne
jg
mov
push
stos
xchg
js
push
push
fldt
subb
es
sbb
pop
dec
mov
mov
in
cmp
jecxz
mov
lock
sahf
and
cmpsl
xlat
mov
icebp
scas
aas
lea
movsb
jne
or
movl
sub
jno
xchg
mov
push
add
dec
ret
and
and
inc
nop
and
mov
xchg
jae
ret
gs
inc
out
mov
push
mov
mov
les
or
inc
and
out
lret
lret
subl
dec
scas
add
aam
adc
xchg
mov
aad
push
inc
std
in
push
aad
sub
mov
sub
jmp
inc
sahf
ljmp
or
leave
lock
test
pop
push
mov
inc
xor
dec
or
inc
mov
xchg
in
mov
push
cmp
inc
cmp
sbb
pop
lds
enter
push
jge
sub
mov
lret
sub
mov
or
xor
stc
test
or
ds
pusha
jo
jno
ja
pop
sub
mov
jo
mov
mov
mov
sets
pop
inc
mov
mov
fdivl
pop
out
stos
test
sbb
loope
fcmovnbe
sbb
std
xlat
leave
dec
ljmp
inc
cmp
cmpsb
lahf
sub
push
pop
jecxz
iret
push
mov
adc
pop
inc
dec
mov
cltd
lret
loop
mov
fwait
out
mov
push
jne
ret
inc
loop
fucomp
outsl
out
or
movsl
mov
repnz
int3
cmp
xchg
cli
cld
xor
leave
cltd
imul
cmp
icebp
fistpl
dec
mov
add
adc
dec
ss
lret
cs
push
arpl
dec
push
outsl
negl
mov
mov
stos
mov
jg
sbb
push
or
pop
cmp
pop
mov
adc
fisttpl
enter
fsub
mov
lods
push
fildll
pop
fst
popa
mov
movsb
push
insb
bound
aas
popf
jns
jp
sub
or
adc
ss
mov
test
push
rolb
sbb
cmpb
fistpll
push
mov
inc
push
jb
fisttps
pop
insl
mov
divl
in
insl
rcrb
fadds
cltd
mov
fwait
clc
pop
mov
data16
push
inc
mov
subl
lods
sbb
test
or
test
add
mov
fidivrs
push
in
xchg
les
ror
mov
cmp
in
inc
sarl
adc
mov
pop
aaa
mov
rclb
push
loope
shrb
and
scas
add
int
lcall
ror
out
sbb
repz
aad
lds
add
mov
adc
and
adc
test
and
sahf
dec
xchg
cmp
sub
mov
out
dec
sbb
addb
mov
push
mov
daa
inc
stos
scas
or
iret
and
jecxz
xchg
push
pusha
inc
inc
out
push
imul
jne
inc
call
outsl
sbb
and
mov
pop
cmp
cmc
jns
push
lock
movsl
inc
arpl
outsb
cs
cli
mov
jbe
orl
and
enter
inc
imul
inc
inc
and
faddl
cmp
sahf
out
inc
mov
popf
mov
arpl
dec
in
lods
sbb
or
or
xor
loopne
push
ss
sti
pushl
shlb
mov
add
xchg
enter
mov
jns
adc
gs
inc
sar
cmpsb
xchg
pushf
cld
sbb
dec
cmc
je
inc
push
fadds
sbb
hlt
mov
test
jmp
xor
add
fdivrs
test
jmp
imul
leave
cld
iret
mov
push
push
mov
sub
popf
mov
pop
mov
cmpsb
repz
sbb
int3
dec
dec
fldenv
push
inc
insl
sub
xchg
and
in
adc
or
enter
mov
pop
outsb
jo
adc
mov
push
pop
lods
daa
bound
push
xchg
dec
loopne
shlb
bound
and
pusha
jp
enter
cwtl
jecxz
sub
xor
out
lds
outsl
inc
add
adc
les
js
into
xchg
dec
repz
pushf
inc
pop
mov
xchg
aad
mov
stos
jg
test
rcll
je
mov
nop
pushf
fcomps
pop
lahf
cmpl
lahf
je
push
inc
fsubrs
jmp
pop
test
lcall
mov
xor
mov
xchg
mov
in
xor
jbe
lret
out
ret
popf
push
mov
mull
xchg
xchg
dec
idiv
add
and
insl
shlb
pop
mov
dec
fwait
insl
insb
ss
int3
xchg
adc
sbb
loopne
test
inc
ret
mov
pop
je
mov
dec
insl
int3
jmp
jb
xchg
mov
mov
in
into
lahf
sarl
add
ljmp
cmp
push
mov
stos
jmp
fistpll
or
fcmovbe
ss
mov
insb
sub
popf
pop
add
pmaxub
cmp
fnstenv
or
inc
mov
inc
dec
cmpsl
jb
rdpmc
in
mov
and
inc
jns
push
insl
sbb
lcall
mov
stos
lea
jbe
mov
and
cli
mov
iret
sub
add
test
imul
mov
scas
clc
dec
mov
jae
dec
inc
jo
rolb
mov
inc
xchg
inc
adc
cli
insb
mov
mov
fwait
in
lret
and
pusha
repnz
fiaddl
mov
dec
repnz
adc
mov
mov
sub
lcall
fildll
out
dec
mov
stos
shrl
jmp
nop
mov
pusha
stos
cltd
push
mov
xchg
and
dec
inc
mov
mov
adc
push
sbb
pop
pushw
mov
jg
pop
lds
pop
jl
rdmsr
jb
mov
cmp
test
xchg
add
jb
mov
mov
mov
push
rorb
loope
mov
and
jp
mov
sub
cld
test
mov
or
je
rcrl
in
xchg
or
mov
add
rolb
jne
adc
and
xor
inc
xor
cmp
mov
loope
icebp
xlat
lods
mov
outsl
push
cmp
aaa
push
dec
xchg
outsb
dec
push
loopne
dec
and
in
xchg
out
std
or
call
stc
shrb
jle
dec
push
iret
adc
fdivr
neg
addr16
cmc
adc
idiv
fstps
je
sub
dec
push
lea
xchg
enter
sbb
ret
adc
decl
add
and
sbbl
inc
xor
mov
nop
dec
jp
mov
push
adc
mov
xor
adc
fadds
add
xor
es
ficomps
and
or
pusha
cltd
xor
insl
mov
inc
add
sbb
pusha
jmp
and
es
fcmovnb
fidivrs
push
cmpsb
test
daa
mov
lret
stc
mov
ljmp
push
inc
lods
fld
adc
imul
xchg
sbb
add
movsl
cmpsw
not
push
jb
lret
mov
xchg
inc
shrl
inc
adc
jle
mov
mov
or
xchg
and
pop
mov
mov
addr16
add
cld
mov
jae
sti
fldl
inc
test
lret
cmp
mov
daa
pop
scas
cmp
aas
xor
push
dec
ret
fsubrl
jae
jne
js
icebp
stos
les
or
incl
jg
xchg
dec
add
xchg
inc
inc
sbb
loop
push
xchg
mov
xchg
mov
into
add
jo
jecxz
push
and
jp
add
fadds
stc
pushf
adcb
cmpsl
ret
sub
into
push
xor
push
adcb
shrl
loopne
int3
inc
adc
hlt
pop
repz
mov
fnstsw
orb
xor
pop
pop
mov
add
mov
repnz
push
add
int3
movsl
sbb
dec
sub
add
or
pop
sti
test
adcl
inc
inc
pusha
mov
scas
jle
dec
jb
sub
jl
inc
int
sbb
push
pmullw
push
sub
dec
sub
push
pop
into
clc
subl
or
loop
testl
enter
sbb
xlat
and
add
xchg
mov
cld
roll
repnz
jge
es
xchg
scas
adc
sti
xchg
into
cmp
stos
dec
clc
fs
mov
lret
js
call
push
xorb
cmpsl
in
sahf
pop
aaa
and
outsl
adc
lret
sbb
rcrb
mov
jae
sbb
jbe
mov
imul
sbb
sub
mov
js
push
jp
push
and
enter
sub
mov
or
push
mov
inc
cmc
mov
pop
in
xchg
add
call
stos
mov
in
incl
leave
mov
push
inc
stc
sbb
ja
xor
aas
subb
cmp
gs
jo
push
push
insl
cwtl
cltd
stos
outsl
cmc
pop
ficoml
int3
fld
loopne
subb
sub
arpl
inc
jbe
fsubrs
pop
sub
cmp
inc
xlat
adc
subl
mov
hlt
stc
pop
lret
je
test
ljmp
inc
inc
pop
sub
pop
jp
mov
pop
mov
dec
mov
xor
mov
insb
jp
bound
mov
loop
lret
sarl
jb
adc
inc
fadd
jbe
cwtl
sbb
in
jne
add
mov
mov
push
push
shlb
inc
mov
pop
out
ljmp
das
jo
add
bound
sti
add
shl
jbe
rolb
xor
fidivl
fidivrs
aam
cmp
mov
ret
dec
dec
inc
jae
or
sub
sub
mov
fidivs
test
stos
sub
iret
enter
sbb
pushf
pusha
data16
popf
push
out
out
enter
sbb
test
aad
lcall
out
sub
jg
push
push
lret
cs
jo
test
lea
and
aas
aaa
jl
cmp
fistpl
push
mov
mov
popa
movsl
idivb
xchg
out
adc
pop
sti
cld
mov
repz
cltd
or
movsb
dec
outsb
pop
jnp
inc
xchg
jb
ds
mov
icebp
inc
sub
cli
cmpsl
fstpl
addr16
das
bound
or
roll
mov
mov
push
and
and
scas
aad
arpl
sbb
aas
loop
add
shr
stc
sbb
int
dec
fsubs
add
shlb
int3
mov
jg
lock
pop
cmpsl
cmp
or
pop
inc
mov
lea
add
sub
jbe
and
icebp
lahf
adc
mov
mov
sub
lret
cmpsl
dec
lds
aam
mov
loop
repz
cmp
xchg
dec
or
repz
cmp
adc
dec
int3
and
and
in
nop
in
inc
mov
out
mov
add
xchg
or
mov
jge
enter
mov
or
movsb
xor
xchg
fisubrl
lds
dec
loope
mov
aas
pop
popf
dec
ds
mov
cmp
or
pop
aaa
jp
aaa
inc
cmp
pop
pop
add
push
push
sub
stos
ja
popa
pushf
repz
pop
movb
imul
push
adc
mov
add
adc
sbb
aaa
movsl
xchg
cs
ja
add
popf
ja
cmp
mov
ret
incl
mov
daa
stos
es
jns
push
fcompl
push
inc
int
adc
movsl
lret
call
or
int
rcrl
push
and
adc
xchg
dec
adc
add
mov
and
or
rolb
add
cmpsl
mov
mov
idivl
xchg
pop
sbb
xor
pop
into
mov
sbb
roll
lods
iret
cmp
push
add
or
scas
xor
pushf
bound
sub
fwait
jno
or
popa
adc
mov
hlt
jne
nop
fdivr
lret
bnd
lahf
out
dec
in
inc
je
adc
dec
fsubs
out
dec
cs
add
enter
dec
mov
rorl
aas
cmpl
repnz
xorl
scas
cmp
lods
lock
arpl
mov
repz
imul
sarl
aaa
imul
into
mov
mov
xor
stos
data16
stos
mov
std
mov
loop
pusha
rcl
outsb
js
pop
cmp
add
or
lock
arpl
mov
xchg
xchg
fstpl
stc
iret
mov
push
mov
jb
repz
orb
shrl
xchg
jl
xchg
ret
xchg
jmp
jae
les
int3
pop
leave
movsl
or
cmp
icebp
repnz
in
popf
mov
mov
shll
push
stos
fwait
in
callw
lock
inc
mov
insl
fwait
mov
xchg
jecxz
pop
jne
aam
jmp
adc
fcomip
andl
gs
cmp
adc
cmp
jg
and
lcall
xor
push
out
addl
in
ja
and
std
dec
jno
daa
xorl
sub
lods
idivb
inc
sbb
mov
fmulp
xor
xchg
mov
mov
jge
or
out
nop
push
popf
jp
push
pop
adc
inc
pop
int
push
roll
cmp
adc
stos
movsl
clc
pop
adcb
mov
cmp
test
mov
addr16
push
out
test
adc
inc
sahf
faddl
xor
pop
push
mov
mov
outsb
cwtl
dec
and
pusha
add
shlb
pop
pop
call
add
test
divb
dec
outsb
mov
lcall
adc
lea
in
arpl
jno
xor
insb
pop
das
xchg
movsl
ja
cs
aaa
js
ja
ja
jg
cmpsl
xlat
pop
and
cmpsl
push
fnstcw
in
lret
nop
inc
add
jp
mov
hlt
stos
push
iret
xor
adc
push
sub
icebp
jl
mov
jmp
lret
mov
mov
fldenv
into
and
push
test
ret
mov
dec
js
add
jg
lret
mov
bound
ror
xor
enter
js
and
xlat
movsl
dec
sbb
push
in
es
daa
dec
pop
es
fs
push
lods
popf
cltd
or
mov
jg
pop
lret
mov
fwait
pop
xor
push
fwait
mov
dec
fstps
xor
sahf
push
fldenv
stos
enter
pop
inc
xchg
aam
and
pop
xchg
jmp
stos
mov
movsl
fidivl
negl
dec
es
out
mov
loop
and
outsl
jns
or
into
outsl
push
mov
sbb
popf
push
enter
mov
and
dec
or
popa
lahf
pop
adc
mov
je
je
ficoms
cltd
sub
pop
fildl
in
scas
mov
cmp
fldt
testb
fmuls
dec
mov
mov
mov
adc
aam
sbbb
cmp
and
add
test
sub
xlat
mov
lea
dec
or
popa
stc
clc
dec
sbb
jmpw
addb
fsubl
adc
sub
sbbl
loop
mov
fdivs
mov
out
insl
int
sbbb
ret
lahf
loopne
loop
pop
stos
inc
adc
sbb
jge
inc
clc
out
into
test
push
ja
ss
or
shrl
lret
xchg
or
es
adc
inc
jg
lahf
pusha
inc
adc
jle
call
xchg
mov
mov
mov
incl
lret
cmp
popa
std
lea
loope
and
inc
dec
mov
scas
pop
xchg
gs
mov
jno
enter
leave
fldt
sbb
outsb
jnp
imul
addb
jae
dec
dec
daa
inc
mov
icebp
mov
dec
aad
lods
sub
jmp
cmpsb
push
icebp
lahf
mov
pop
mov
pop
jmp
mov
jle
and
or
xchg
sbb
sbb
mov
mov
mov
or
mov
shl
out
and
or
xor
push
test
or
movsb
xchg
in
cs
imul
pop
xor
mov
icebp
add
pop
push
xchg
cltd
adc
fidivrs
fstpt
test
je
cmp
xor
ret
shrb
les
data16
mov
fwait
mov
adc
xor
das
xor
mov
adc
push
lret
jp
int3
xor
inc
dec
xor
jmp
xor
lahf
mov
rcll
and
mov
push
inc
pop
andb
stc
popa
mov
jp
arpl
int3
sub
shll
inc
fisubl
or
jg
leave
aaa
shll
in
icebp
mov
push
xchg
mov
dec
insb
adc
xchg
cmp
ljmp
adc
je
fcomps
mov
jmp
mov
sub
es
insl
sahf
xor
cld
outsl
aam
lds
insb
stc
add
pop
movzbl
cmpsb
mov
inc
pop
sbb
xor
pop
ja
stc
ljmp
iret
icebp
xchg
std
xchg
mov
pop
jmp
cld
dec
mov
int
jo
mov
jp
push
dec
xchg
nop
dec
rorl
and
mov
cli
and
mov
sar
mov
mov
cmp
sbb
add
daa
cmovne
loope
and
jns
cmp
sub
insb
mov
pop
pop
push
or
jmp
sub
int3
add
push
in
fnstenv
mov
rolb
fstpl
and
outsl
aam
repz
mov
push
lret
xor
lds
mov
out
push
pop
decb
pop
hlt
mov
cmp
mov
mov
pop
loop
or
aas
cld
dec
mul
ss
scas
dec
mov
je
test
push
mov
outsl
pop
insb
sbb
sub
lods
je
stos
movsb
icebp
pushf
add
lret
sbb
mov
lahf
es
rcrb
loope
lahf
mov
mov
adc
mov
test
fs
and
sub
jno
jl
mov
icebp
cmp
scas
adc
mov
inc
xchg
xchg
test
mov
lret
ja
sub
pop
and
mov
xor
xchg
cmpl
jge
popa
icebp
xchg
popf
imul
sub
mov
add
rorl
and
jg
insb
notb
movsl
sub
outsb
sub
jno
jno
ja
xchg
jmp
into
arpl
mov
outsl
jmp
mov
test
js
lds
scas
mov
fstpt
cmp
adc
jge
insl
push
sub
xor
jbe
dec
or
and
or
pushf
leave
pop
mov
lret
xor
add
adc
pusha
clc
pop
jnp
hlt
jp
fisubl
sub
fidivs
repz
fcomip
daa
mov
mov
loopne
es
repnz
les
inc
cmp
mov
xchg
pop
lods
xchg
roll
je
into
popa
mov
addr16
call
aas
repz
mov
scas
loop
push
imul
jle
pop
add
decb
sbb
addr16
lcall
fwait
mov
push
sbb
pop
pop
add
mov
and
sub
xchg
jno
lods
jne
out
fistpll
xchg
adc
insb
push
mov
movsl
in
test
adc
lahf
and
fdivrl
and
xchg
cmp
inc
nop
rcl
roll
push
inc
neg
hlt
pushf
push
dec
adc
repz
push
popa
insb
aam
mov
jge
pusha
test
push
xor
mov
or
lret
sub
mov
aas
mov
fsts
lods
ljmp
ss
arpl
push
and
jno
jae
xchg
add
sbb
aaa
loopne
fbstp
lods
aad
ljmp
out
sahf
sbb
pusha
sbb
mov
jge
pop
jnp
push
pushf
mov
jg
add
push
cmpsb
aad
mov
xchg
push
mov
mov
inc
fs
push
add
outsl
out
sub
movsb
jbe
test
call
movsl
mov
inc
adc
mov
test
loop
xchg
or
dec
lods
mov
nop
jnp
push
adc
mov
xchg
aaa
push
jle
addl
flds
ljmp
push
push
ss
out
insl
xlat
inc
imul
dec
cld
mov
lcall
xchg
or
dec
dec
dec
push
sub
and
sarl
or
pop
xor
insb
scas
aaa
inc
jne
and
movsl
xchg
idivb
xorb
and
dec
xor
xchg
or
add
sbb
push
mov
mov
sbb
loope
xor
push
divl
or
push
js
out
fmull
lret
sbb
cs
pop
sub
mov
cmp
rclb
jg
ljmp
into
jno
mov
dec
adc
loope
and
iret
loop
cltd
lock
mov
mov
ret
xchg
xor
cmp
dec
or
jmp
xor
jle
pushf
test
push
adc
rclb
cwtl
mov
pop
jno
add
pop
push
xor
es
sub
add
and
inc
push
dec
sub
in
and
inc
jae
jle
xchg
xor
xor
std
jp
jno
aaa
jmp
cli
stos
and
mov
out
pop
adc
inc
xchg
push
inc
adc
add
sahf
iret
push
nop
outsl
pop
ffree
push
enter
mov
jecxz
dec
cmp
ja
inc
pop
cmp
imul
mov
rolb
cmp
lods
jmp
sbb
lods
mov
push
xor
ret
stos
fmuls
cmp
xorl
test
cmpl
nop
or
or
dec
ret
add
fiaddl
int
xor
push
movsb
pop
enter
cmp
jp
lods
sub
out
add
out
dec
pop
sub
jb
fxam
sub
bound
dec
adc
sub
adc
test
push
lods
add
insb
jmp
lret
jle
or
sbb
iret
adc
fstpl
or
pop
mov
pavgw
xor
mov
push
inc
mov
clc
adc
jne
jecxz
mov
jecxz
dec
and
mov
mov
stos
dec
leave
lds
cmp
out
sbb
xchg
lret
or
fldl
int3
cwtl
int3
out
jne
xchg
mov
mov
ss
insl
pop
mov
pop
movsb
mov
adc
xchg
pop
sti
lods
and
xchg
cltd
int3
xor
xchg
call
mov
xor
push
sbb
xchg
pushf
pop
pop
das
test
adc
sbb
popf
mov
jmp
fisubl
mov
and
fs
cmp
scas
out
cli
aam
adc
pusha
sbbb
hlt
push
cmp
call
gs
dec
lds
lock
addb
pop
xor
dec
in
inc
jno
add
cmp
jnp
das
aad
lahf
mull
lods
or
xlat
nop
push
clc
rolb
pushf
fsts
add
sub
pop
ret
or
cwtl
add
lock
pop
stos
stos
movsb
or
mov
adc
int
sub
inc
sub
xlat
fisubl
mov
shlb
imul
rorl
pop
adc
push
in
loop
cmpsb
sti
push
cmc
out
add
aam
nop
xchg
mov
cwtl
mov
push
xlat
hlt
test
mull
les
or
cmp
mov
movsl
imul
push
fildl
stos
adc
or
addr16
sub
lar
shll
inc
test
sub
addl
xchg
rol
xor
mov
arpl
pop
push
adc
jge,pt
lret
sub
sub
loope
ljmp
xor
je
pop
push
push
xor
adc
adc
cmpsl
lea
mov
adc
sbb
dec
imul
cli
loope
xchg
sub
mov
popf
imul
xchg
inc
das
popf
and
lods
in
out
xor
imul
or
mov
mov
mov
xor
and
mov
jnp
aas
call
gs
test
repnz
hlt
jg
push
in
mov
xor
mov
rclb
in
lret
adc
jno
or
push
add
or
sub
jo
mov
sbb
out
or
pop
adc
lods
sbb
in
xchg
and
fbld
adc
iret
aaa
aas
sti
fistl
or
mov
sub
filds
mov
sub
adc
scas
gs
call
lea
shlb
xchg
xor
mov
push
shrb
icebp
jno
icebp
push
adc
dec
pop
sahf
loopne
mov
iret
cltd
jne
push
das
adc
inc
je
pop
mov
cltd
int
push
mov
pop
dec
dec
sub
and
mov
call
pop
scas
sub
mov
les
dec
jbe
ljmp
push
xchg
hlt
es
aad
push
sbb
movsl
xor
loop
mov
test
rcrb
repz
imulb
fdivr
lds
jl
movl
inc
push
out
mov
xor
call
inc
loop
hlt
lret
xor
add
adcb
popa
out
lret
jmp
scas
sub
xlat
sbb
mov
add
out
frstor
adc
lcall
inc
lcall
push
ljmp
sti
dec
mov
ret
push
arpl
or
cli
inc
in
pop
or
pop
dec
stc
cmp
sub
adc
mov
stos
jecxz
push
mov
xchg
les
inc
es
sbb
in
inc
and
push
in
pop
xor
fwait
popf
fimuls
fdivl
lods
or
pop
imul
xor
mov
ja
add
mov
repz
inc
out
aad
dec
sbb
hlt
sbb
lcall
jbe
push
insl
call
cmpsl
cmp
jbe
imul
push
test
cli
mov
sub
test
push
in
and
nop
jl
and
jl
jae
fwait
xchg
int3
test
push
fdivrl
into
mov
minps
fnsave
xchg
loop
mov
clc
pop
push
jns
mov
clc
lcall
mov
inc
pop
inc
jp
arpl
mov
test
in
mov
xchg
out
pop
clc
dec
xor
pmovmskb
arpl
loop
cli
std
push
mov
ret
rcll
mov
push
fisttpll
dec
lret
and
or
shrl
cltd
jns
pop
push
pop
jnp
adc
in
scas
movsl
xchg
xchg
mov
ret
jne
icebp
testl
xor
push
push
adc
push
pop
mov
mov
icebp
das
data16
scas
dec
mov
ss
in
push
loopne
imul
and
mov
clc
shl
lods
incb
hlt
xor
mov
inc
adc
leave
dec
pusha
sbbb
mov
dec
mov
pop
lahf
inc
fstpt
adc
adcl
sti
xor
push
js
inc
inc
mov
sbb
and
fbstp
jo
inc
out
hlt
lods
pop
call
test
scas
test
iret
lea
insl
mov
outsl
stos
xchg
dec
sbb
push
js
xor
repnz
sbb
stos
jo
jae
pop
fmuls
xchg
sbbl
sbb
mov
pop
jnp
xchg
popa
and
xchg
dec
outsb
fstpt
inc
inc
je
jmp
cs
sub
push
mov
movsl
push
jl
inc
adc
out
inc
std
fwait
cmp
mov
cmc
into
inc
push
ljmp
arpl
jo
jecxz
mov
jbe
repz
mov
mov
push
push
xchg
jo
and
mov
shlb
shl
pop
mov
mov
dec
imul
jmp
jg
int3
sbb
sub
mov
lods
dec
int3
fs
ret
mov
xor
insl
fucomp
rorb
lock
lret
adc
test
sti
jo
adc
push
add
pop
or
jns
and
fimuls
cld
icebp
push
rorb
out
mov
jl
repz
or
ffree
and
cmpsb
xchg
mov
scas
dec
rcrb
cmp
cli
pop
mov
out
andb
cli
pop
outsl
mov
inc
or
ds
popa
jle
lds
pop
outsb
les
push
push
mov
sti
and
mov
test
es
push
cmp
dec
sbb
out
xchg
pusha
mov
and
add
push
std
adc
daa
lods
dec
ror
mov
cmp
dec
lret
je
lret
adc
out
push
adc
xchg
stos
mov
dec
xlat
mov
ret
xchg
mov
push
push
out
and
cli
int3
stos
xchg
hlt
mov
out
or
and
test
jmp
cmp
inc
arpl
lret
xor
in
cmc
jo
sub
cmp
mov
jl
movsl
mov
je
xlat
insl
lds
lods
xchg
fdivrl
cmp
pop
and
dec
repnz
es
jns
cmp
ret
sub
pop
or
mov
repz
push
push
popf
jno
push
stos
push
sub
push
shr
add
sbb
pop
xchg
imul
and
dec
dec
std
cmp
mov
jmp
adc
push
imul
xchg
hlt
dec
sarl
sti
lds
aas
sbb
dec
aaa
xchg
mov
mov
and
inc
xchg
test
call
scas
pop
rcrl
dec
data16
mov
shlb
add
jmp
shl
gs
arpl
shl
aas
cltd
add
add
lahf
in
sbb
enter
das
sub
pusha
fisttpl
sti
jmp
faddl
add
sub
loopne
jle
adc
sbb
jge
cmp
test
iret
lods
repz
test
insl
inc
enter
cs
cmp
jmp
pop
mov
jns
push
idivb
repz
sub
cwtl
les
cmpsl
sub
inc
sub
xchg
rcrl
mov
xchg
mov
sti
pop
or
mov
setge
cwtd
sub
sub
hlt
pop
mov
test
mov
frstpm(287
sub
jnp
sub
sahf
pushl
push
push
lahf
dec
push
mov
jno
cli
pop
mov
subb
imul
fs
ljmp
jb
mov
mov
xlat
aam
into
out
sub
movsl
hlt
xor
cmp
and
inc
ret
scas
inc
pop
lret
fimull
jl
adc
imul
lods
je
fnstcw
pop
nop
pop
sbb
out
pop
jmp
pop
fnstsw
jmp
pop
pushf
xchg
fisttps
cltd
clc
pusha
ljmp
pop
je
and
rcl
push
out
adc
jle
pop
xchg
scas
cmpsl
insl
mov
mov
ja
popf
cmp
and
outsb
cltd
addb
pop
sbb
fs
fcmovnbe
dec
add
test
sub
fnstenv
cmpsb
pop
cld
subl
sub
idivl
dec
mov
mov
mov
mov
movsb
fstp
xorb
ror
hlt
mov
aad
fucom
bound
add
mov
xchg
push
ficoms
scas
jnp
popl
xor
or
add
neg
xor
lods
pop
pop
dec
rcl
and
push
jae
andl
pop
xchg
or
mov
or
dec
pop
jno
jle
cli
lcall
out
out
pop
outsl
lret
add
ret
addr16
repnz
xchg
shlb
popa
pop
xchg
lods
or
push
negb
dec
sub
daa
jb
popl
loope
shll
jg
lahf
pop
mov
cmpsb
push
pop
repz
xchg
pop
movsb
arpl
xchg
xor
js
lret
mov
pop
test
sub
fs
cmp
repnz
dec
sub
enter
sbb
decl
dec
dec
test
into
fstpl
jns
mov
ja
mov
xor
cmp
out
sahf
and
mov
add
neg
or
pop
cmp
scas
je
sahf
fidivrl
out
push
pop
cli
call
xchg
out
nop
pop
xor
ljmp
shlb
outsl
test
adc
negb
test
mov
jno
aam
and
cwtl
jg
sub
pushf
ret
ficoms
jmp
cmp
dec
xchg
jbe
push
das
mov
rcrb
and
or
loop
push
fstpt
cmpsl
rorb
mov
aaa
push
cmp
adc
out
mov
mov
outsl
lock
xor
rcrb
mov
sbb
lahf
mov
xchg
and
roll
scas
lods
cmp
pop
aad
sbb
jl
je
jo
pop
rorl
fisubrl
xchg
sti
ljmp
xor
push
jae
rcl
push
das
pop
es
mov
rcll
push
jp
push
sar
cmp
icebp
loopne
jl
mov
sbb
pop
lock
outsl
es
mov
mov
adc
pop
ljmp
popl
repz
insb
int3
mov
data16
fisubs
stc
xor
sbb
in
or
inc
icebp
mov
mov
es
sar
inc
lock
ljmp
mov
rclb
mov
push
pop
add
push
data16
ja
mov
pop
nop
push
lcall
jg
jge
std
jae
je
sub
or
aam
je
stc
iret
dec
xor
rcl
push
or
in
mov
cli
stc
sbb
movsl
push
jg,pt
sarl
gs
or
xchg
inc
pop
dec
ss
jle
adc
mov
mov
push
mov
aam
jl
hlt
dec
mov
imul
xchg
or
fbld
xchg
sbb
push
or
test
fldl
jb
jg
and
subb
test
pop
addb
push
jae
adc
xor
xchg
call
mov
int3
idiv
cmp
lret
mov
xor
ss
pop
jecxz
out
xchg
add
adc
jmp
or
xor
ds
sub
sbb
imul
testb
mov
scas
orb
in
and
out
sti
mov
xor
je
xorb
cmpb
sti
les
dec
stos
xor
cwtl
pop
rorl
les
xchg
xchg
inc
aas
mov
enter
sbb
out
cmp
aas
iret
into
je
enter
popa
pop
and
stc
mov
adc
daa
mov
scas
sbb
arpl
mov
jb
inc
lret
lods
push
jb
pop
jns
lods
mov
pop
hlt
or
stos
sub
or
mov
mov
imul
aaa
leave
ds
ret
sub
std
push
aaa
sbb
xchg
loop
int
pop
mov
sub
mov
stos
inc
and
cmp
cwtl
rol
out
and
sbb
mov
pop
dec
add
jno
jg
mov
notl
lds
add
fisttpll
xchg
lods
stc
pop
orl
jl
mov
mov
test
repnz
xor
sbb
add
fnsave
into
in
inc
mov
push
std
mov
cmp
loope
daa
pop
repz
add
xchg
int3
fdivrl
xor
xchg
lahf
sub
scas
xchg
lds
sbb
jecxz
ja
push
lret
xlat
leave
out
or
and
mov
mov
dec
iret
scas
int
lahf
ror
xor
push
or
jo
int3
jl
add
adc
out
out
inc
xchg
lods
insb
pop
test
jl
aam
fiaddl
jns
dec
push
sbb
rorl
sbb
pop
test
or
test
push
pop
inc
jns
mov
and
sub
dec
es
jmp
ffree
and
inc
xor
out
repz
push
jb
push
sub
sbb
inc
xor
movsb
push
or
test
push
repz
int
fwait
dec
lock
sti
gs
data16
sahf
xor
out
sub
outsb
mov
std
scas
jg
and
dec
sbb
mov
jl
sbb
ja
es
movsl
mov
insl
jg
jmp
and
pop
jns
pop
imul
fisttps
das
mov
sbb
cmc
pop
inc
daa
fimull
dec
nop
push
xchg
insb
test
sbb
lahf
sarb
pusha
lock
sbbb
lock
jae
pop
and
xchg
xchg
hlt
shr
dec
pop
xchg
and
andb
push
adc
jg
sub
test
leave
ljmp
les
adc
sti
pop
push
mov
fnsave
jl
call
push
pop
jns
cmpsl
push
andl
loop
addb
cmp
push
and
es
notb
cmp
nop
popl
jbe
inc
pushf
test
fimull
lds
lret
jo
xchg
xor
fwait
mov
cwtl
inc
mov
js
mov
insb
cwtl
inc
stos
inc
imul
lret
out
adc
inc
xchg
test
popa
aam
in
arpl
push
pop
std
fisttpl
sbb
push
xchg
sti
push
xchg
mov
lock
std
dec
loope
cmpsb
je
movsb
adc
jnp
add
and
int
incl
stos
pop
jb
mov
xor
mov
lods
insb
js
jb
sub
loope
ret
lock
pop
fadds
jle
cmpsl
pop
popf
test
add
test
repz
scas
inc
fadds
jb
add
call
mov
mov
inc
add
jo
ja
aaa
mull
repnz
inc
jp
arpl
lds
cld
hlt
lret
sbb
mov
mov
movsl
cmp
dec
cmp
jae
sbb
clc
movsb
pop
push
jmp
xchg
movsl
pop
jns
add
daa
aam
and
xor
mov
lahf
scas
int3
add
movsb
push
jb
cmovo
adc
scas
cmpsb
or
add
sub
test
pop
jns
add
cmpsb
test
aam
in
mov
imul
inc
ss
xor
sahf
pop
push
hlt
pop
cwtl
mov
lods
or
cmc
pushf
pop
scas
jl
sub
ficoms
push
mov
cld
out
jno
dec
fldl
sbb
adc
jns
lods
es
mov
out
mov
int3
cmp
sahf
xlat
xchg
sub
pusha
or
movsl
jmp
push
nop
mov
dec
int3
clc
into
test
dec
and
sub
dec
pop
loope
idivb
add
aaa
mov
push
aaa
xchg
cli
pop
hlt
fwait
push
dec
sbb
mov
out
ds
fcompp
iret
push
mov
mov
insb
icebp
ret
loop
dec
push
aaa
sbb
sarl
sub
xor
push
in
xor
jmp
and
inc
cmp
and
sbb
push
mov
shll
jno
xor
jmp
inc
mov
icebp
cli
inc
data16
in
mov
sbb
addl
sbb
ss
sahf
shll
dec
pop
lods
mov
adc
or
testb
js
xchg
sub
nop
lret
xor
insl
mov
jo,pn
mov
inc
out
fst
pusha
xchg
pop
bound
and
push
daa
addr16
pop
shlb
sub
push
adc
mov
xor
sbb
rolb
loope
jbe
test
push
subl
repnz
cwtl
lea
push
aaa
inc
cli
sub
cli
jl
gs
imul
clc
push
cmp
daa
xor
cwtl
and
adc
shll
pop
popa
sub
fisttps
daa
jmp
push
incl
adc
mov
and
adc
jno
outsb
jae
xchg
mov
aas
xor
inc
mov
push
push
movsl
into
or
pop
push
shl
mov
popf
add
jo
xlat
sbb
push
jmp
das
pop
xlat
mov
sbb
xchg
cltd
shlb
je
push
popa
jnp
iret
loop
sahf
aaa
data16
inc
inc
xor
dec
mov
outsl
push
sub
ljmp
fnstcw
xor
aaa
adc
jmp
mov
fsubl
pop
sbb
push
mov
inc
push
aad
les
enter
mov
aas
xchg
lock
inc
mov
js
cs
jl
roll
xor
cmp
or
cmp
imul
mov
iret
lret
dec
inc
cmc
pop
mov
xor
test
mov
push
inc
in
shrb
push
mov
stos
add
sub
cld
xor
scas
nop
pop
aam
adc
test
mov
fldcw
scas
test
aaa
lods
xchg
sub
imul
pop
sbb
sub
and
repnz
add
pushf
out
and
lock
icebp
jns
outsb
dec
imul
pop
lods
or
call
int
hlt
cld
int3
dec
xor
stos
xchg
adc
mov
scas
pop
mov
jnp
push
mov
pop
insb
test
lods
pop
movsb
sub
insl
and
mov
out
insb
jne
mov
cmpsb
imul
cld
cmp
test
mov
sub
sub
mov
add
hlt
or
nop
xchg
jnp
pop
repz
jl
enter
adc
pop
je
push
xor
inc
in
out
xchg
xchg
inc
in
je
outsb
xlat
fs
aam
aad
cmp
lret
aad
cmp
andl
cli
das
sarl
push
xchg
es
xchg
mov
dec
iret
divl
dec
je
lock
and
sbb
aam
mov
cmpsb
xchg
mov
sub
into
mov
mov
pop
inc
pushf
xlat
ljmp
je
add
insl
mov
sbb
sub
insl
pusha
and
sarb
shrb
enter
out
enter
pop
ja
xor
hlt
and
adc
fs
test
nop
in
or
xchg
fdivrl
or
ss
and
pop
pop
jecxz
cld
xor
mov
popf
sar
jl
or
xchg
cmp
mov
aaa
aam
mov
sub
sbb
outsb
push
mov
xchg
test
popa
gs
das
or
decl
mov
push
ret
mov
lret
or
fisttpl
addb
mov
sti
leave
pop
jns
mov
cwtl
roll
movb
js
std
lods
adc
pop
jecxz
add
out
lock
xchg
pop
pop
mov
rclb
stos
js
cwtl
pusha
sar
sub
daa
pop
push
fisttpll
imul
fdivs
je
mov
fwait
mov
lods
add
add
outsl
jae
jno
add
cmp
out
cmp
xchg
push
inc
sbb
push
add
std
inc
popa
adc
xor
mov
sub
cmc
lock
sub
xor
outsb
rorb
in
sbbb
hlt
mov
movsb
push
in
cmp
fildl
mov
xchg
pop
or
popa
fs
scas
iret
into
insl
or
mov
mov
jnp
push
mov
sub
dec
mov
ficompl
and
dec
loopnew
clc
push
loopne
sub
push
movsl
adc
shlb
cmc
imul
in
dec
jns
jl
and
cmp
enter
push
sub
mov
cld
inc
jb
adc
stos
aas
adc
lea
xor
std
int
add
dec
popf
push
inc
sbb
mov
xchg
mov
dec
xlat
or
out
sbb
mov
jp
daa
pop
loopne
lahf
push
cmpsb
mov
idivb
inc
or
orl
popf
xchg
inc
fadds
das
cmpsl
sar
daa
sub
incb
inc
sub
mov
lods
pop
mov
pop
cld
les
mov
sub
mov
jo
pop
mov
xchg
out
lahf
imul
daa
dec
ss
push
or
sbb
and
negb
push
shrb
pushf
daa
insl
fwait
push
inc
inc
or
cli
push
jp
rorl
fidivs
clc
dec
rclb
lock
dec
dec
and
mov
inc
notb
or
popf
ss
and
push
pop
push
popf
scas
add
pop
adcl
ss
movsb
lods
rol
lods
lcall
sbb
mov
enter
mov
fisttpll
mov
sbbb
mov
scas
mov
sbb
push
jo
loope
add
int3
mov
test
jge
js
psubw
xchg
nop
push
push
aaa
and
subl
test
lret
addr16
xor
xchg
xchg
xchg
imul
dec
sbb
inc
stos
xor
stc
dec
lahf
subb
cli
fst
test
into
sub
fdivrl
inc
xchg
add
cld
stc
pop
daa
xchg
loope
xchg
xchg
or
inc
inc
rcrl
pusha
jnp
mov
jo
or
xchg
js
xchg
sub
or
add
out
enter
cld
inc
xor
sub
xchg
sbb
lds
fs
mov
push
sarb
adc
mov
or
cltd
push
imul
mov
mov
add
sti
push
dec
jnp
cmpsb
xchg
sbb
inc
mov
es
push
shrb
mov
mov
pop
into
add
mov
cmp
mov
dec
mov
jbe
stc
inc
ss
or
push
push
push
cltd
ret
inc
fwait
imul
imulb
push
fisttpl
bnd
mov
scas
jo
fnstsw
pop
mov
inc
jnp
addr16
bound
dec
repz
je
pop
idivb
sub
inc
xchg
data16
cmpsl
pop
cltd
sbb
push
adc
cmp
and
mov
push
add
stos
out
cmp
jns
add
and
adc
stos
mov
fistpl
in
mov
dec
fisubrs
and
test
std
sbbb
sub
jb
add
xchg
pop
dec
shr
fistpl
pop
adc
js
aas
mov
cmp
fldl
outsb
lea
jnp
add
jle
xchg
in
call
test
ljmp
cmp
or
test
in
xor
jb
sub
inc
jecxz
jno
daa
leave
xchg
or
fisubs
xor
sahf
popl
sti
rcl
call
inc
test
stos
cs
mov
add
iret
pop
int3
sbb
ret
cs
sbb
cmp
repz
pop
js
xor
in
shlb
xchg
mull
mov
jo
int
mov
mov
es
call
adc
jp
push
xchg
dec
loope
inc
jno
push
pop
inc
cmp
pop
lret
sbb
jnp
cwtl
andb
shll
push
inc
js
xor
leave
in
mov
lret
pop
dec
js
dec
adc
jns
shll
sub
into
les
adc
pop
push
lea
out
rol
dec
pusha
sti
push
and
dec
mov
inc
sahf
pop
pop
sbb
call
push
popf
sub
and
into
pop
gs
or
adc
mov
repnz
pop
imul
popa
out
in
pop
push
sub
jb
incb
xor
cmc
and
data16
aaa
xchg
fucomip
cwtl
xlat
inc
cwtl
or
sub
mov
cwtl
pop
adc
imul
and
pop
mov
dec
rcrl
push
lret
xchg
sub
pushf
mov
or
jecxz
out
mov
in
jecxz
jp
scas
mov
xor
inc
or
sbb
mov
cmc
and
aas
jecxz
bound
in
ret
and
fstl
jl
lcall
inc
ss
add
lret
dec
xlat
stc
mov
mov
pushf
fsub
add
or
es
test
inc
movsb
mov
xor
sahf
mov
fstpl
mov
rcrb
mov
or
add
lock
xlat
aam
rol
fidivrs
sub
xchg
pop
pusha
ret
mov
fcompl
imul
stos
sbb
xor
in
ljmp
lcall
inc
mov
pop
in
cmp
mov
sub
imul
xchg
jnp
shrl
jb
pop
out
pop
mov
cmp
mov
sub
jbe
add
pushf
sahf
or
stos
outsl
jnp
pop
pop
pop
mov
pushf
stos
inc
popa
ja
sub
cld
sub
loope
jnp
shrb
push
jmp
test
cmp
out
sbb
inc
movsl
mov
shl
add
cmp
ljmp
pop
pop
stos
movsb
fisubl
icebp
mov
or
inc
bound
sbb
and
mov
xchg
scas
cmp
lcall
mov
push
pop
bound
fdivrl
bnd
pushf
sub
inc
sbb
pop
mov
jnp
dec
stos
jmp
loop
stc
adc
inc
lds
sub
imul
mov
and
xchg
xlat
int3
mov
bound
ret
push
fsubs
cmp
pushf
testb
adc
mov
pop
cmpsl
mov
inc
insb
incl
jge,pn
lods
adcl
lcall
fsts
mov
call
cli
xchg
sarb
jmp
or
stos
cmpsl
into
pop
test
inc
mov
cmpsb
addl
es
stos
call
jae
stos
pop
scas
outsl
push
inc
dec
or
iret
xlat
lock
sub
jp
into
sti
add
dec
aad
es
aas
inc
adc
sahf
mov
imul
in
sbb
pop
hlt
jl
inc
cmp
push
lahf
push
cmp
mov
mov
sub
xchg
mov
mov
sbb
leave
and
mov
dec
and
icebp
fimull
xchg
mov
in
jmp
pusha
sub
xchg
daa
out
adc
mov
in
gs
loop
in
cld
popa
leave
or
sbb
outsl
lahf
dec
mov
fidivrs
leave
fistpll
test
imul
xchg
aam
dec
ret
and
ljmp
lret
jno
stos
scas
mov
rcrb
sarb
imul
lock
xchg
in
push
das
jo
pop
jl
mov
pop
or
cld
add
or
out
fnstcw
int3
jp
shll
push
je
jmp
lods
in
cwtl
aad
mov
stos
push
in
pop
push
and
data16
jo
into
sub
dec
stc
test
xor
xlat
ret
lret
repz
aad
xchg
push
popa
xor
jbe
sub
adc
mov
mov
mov
and
add
pop
lds
ficoml
sbb
xchg
mov
sub
movsl
cmp
fsub
enter
imul
insb
test
loopew
outsb
mov
shrb
pop
cmc
call
push
movsb
in
xchg
sub
push
jo
hlt
jnp
fisubl
ds
xor
jnp
pop
adc
mov
push
aas
and
stc
inc
push
mov
in
arpl
mov
pop
iret
bound
mov
pop
lods
neg
pop
jp
rolb
fneni(8087
in
call
loop
push
xchg
sbb
push
mov
mov
ret
imul
mov
xlat
push
pop
aaa
repz
mov
ds
fsub
int3
mov
add
cmpsw
dec
and
xchg
or
movsb
adc
jg
add
lock
movsb
repnz
das
mov
push
loop
jp
outsb
jg
clc
loopne
add
or
push
cmpsl
adc
ds
andb
mov
adc
pop
insl
mov
xor
sbb
add
aaa
lock
ss
sub
fsubs
cwtl
push
lahf
xor
mov
push
jp
jp
shlb
mov
outsb
fiaddl
lods
fisubs
push
sub
sbb
dec
add
mov
mov
movsb
hlt
fstpt
rclb
pop
adc
jo
sub
scas
lret
and
cmp
fsubp
dec
mov
pcmpeqw
pop
and
inc
sbbb
cmp
fcomip
cmp
cmp
or
ljmp
xchg
xor
and
lcall
in
cli
xchg
sub
inc
loop
lcall
xor
dec
jb
and
popa
cmp
dec
aad
gs
mov
popa
mov
sbb
inc
sub
sahf
push
xchg
inc
jmp
xchg
stc
imul
icebp
xchg
jne
lods
enter
sahf
inc
pop
mov
and
cmpsl
insl
inc
push
das
inc
pop
sbb
das
xchg
dec
sub
inc
adc
cmp
mov
hlt
mov
fnstcw
cmpsb
sub
sti
stos
push
mov
shlb
repz
arpl
push
or
rolb
test
sti
loope
and
cmpsb
dec
dec
and
out
jno
push
movsb
lret
nop
outsl
jb
shrb
push
jne
mov
add
pusha
dec
dec
add
pop
movsl
mov
jl
mov
loop
xchg
or
ja
popa
jle
mov
sbb
push
mov
jae
dec
jb
or
fnsave
inc
mov
push
sbb
mov
mov
outsl
outsb
lock
mov
push
jo
in
pop
xor
jl
push
dec
negl
mov
dec
cs
push
xlat
sti
and
into
aam
mov
xchg
pop
fisttps
repnz
bound
pop
cmpsl
aad
lret
ficoms
xor
ret
inc
fwait
cld
daa
jno
inc
cmpsb
or
jbe
fcomps
cli
push
test
loope
in
les
push
leave
jae
jbe
test
mov
cs
hlt
or
push
inc
xchg
pop
lcall
fnstsw
ret
ljmp
mov
xchg
mov
js
cli
imull
dec
cs
enter
in
mov
iret
js
sbb
aaa
stos
mov
je
outsl
lss
xchg
insb
lcall
sbb
sub
lret
stos
incb
imul
mov
push
jbe
mov
test
into
jns
dec
loopne
loop
cmp
jae
inc
das
jbe,pt
jle
aaa
xchg
loopne
test
leave
out
dec
xchg
stos
xchg
stos
add
xor
adc
ds
cmpl
mov
pop
dec
push
loope
pop
aas
jno
add
shll
cld
xchg
sub
and
xor
jae
shrl
jae
nop
mov
imul
fsub
jl
xchg
xchg
adc
lcall
push
in
and
cs
sub
inc
pop
xchg
mov
mov
dec
je
jnp
jge
or
mov
ljmp
aaa
or
icebp
nop
test
push
xor
sub
cmp
push
fsts
jo
jp
stc
inc
js
jg
sbb
inc
add
dec
int
cmpsb
xlat
int3
add
jmp
lgs
jp
mov
push
into
stos
test
sti
gs
push
negb
pop
or
lret
adc
pop
push
int
mov
sub
je
xchg
mov
pop
cmp
push
mov
adc
dec
lret
jb
pop
xor
movsb
stos
push
adc
add
aaa
push
mov
add
mov
mov
es
das
subl
pop
pushl
pop
cs
lea
cmpsl
testb
sbb
shl
mov
jns
pop
push
data16
jne
xchg
and
les
push
gs
mov
pop
add
mov
inc
pusha
fsubrl
mov
mov
jno
mov
mov
mov
inc
pop
xor
mov
push
mov
int3
scas
inc
and
xor
movsb
xor
repnz
mov
jge
xor
lret
ja
cwtl
roll
popf
cmp
es
fiadds
ja
adc
mov
imul
ret
push
mov
push
sbb
xchg
xchg
pushf
mov
icebp
mov
rcrl
bound
adc
xchg
movsl
or
xchg
pop
ja
mov
inc
leave
popf
mov
mov
push
dec
push
sub
adcl
incl
ja
push
das
in
pop
pop
add
in
sbbl
arpl
lret
jns
sbb
mov
mov
out
cmpsb
add
rorl
mov
adc
sbb
jmp
xor
mov
adc
and
pop
push
nop
test
push
dec
in
adc
jbe
push
push
add
mov
lods
cmpsl
sarb
stos
push
pop
or
jl
dec
inc
xchg
mov
push
pop
fisubrl
jle
pop
xchg
aaa
mov
xchg
jle
sub
popa
out
xchg
push
insb
test
mov
fldt
and
mov
loope
aad
and
xor
xor
dec
sar
orb
pop
outsl
ret
cld
or
addr16
fwait
jnp
and
aaa
xlat
dec
orb
pop
ja
mov
jle
sti
mov
dec
shrb
jmp
jno
add
pop
mov
insl
mov
pop
sbb
lods
cmp
scas
lods
sbb
insl
hlt
sbb
adc
popf
jo
cmpsl
xchg
lock
stos
pop
dec
xor
dec
jecxz
out
out
sub
cmp
sub
rcr
test
imul
jmp
dec
movsl
arpl
jg
and
aaa
insl
jl
add
or
out
push
dec
stc
andb
enter
gs
popa
aaa
out
movsl
or
or
jae
outsl
cltd
adc
in
fxch
scas
xchg
sbb
mov
sub
mov
jo
cmp
sbbb
mov
adc
in
push
orl
xchg
sub
hlt
leave
pop
aad
xor
or
jae
dec
and
push
mov
scas
mov
sub
xlat
and
adc
inc
jno
jecxz
sub
jne
cwtl
jle
xor
pop
repz
scas
fisttpl
fucomip
daa
test
dec
and
popa
jb
in
cld
pop
mov
lret
aas
add
sbb
jne
dec
mov
mov
add
add
outsb
icebp
lods
outsb
clc
ficoml
mov
aas
jae
cmc
js
cli
mov
or
and
dec
lahf
xchg
adc
or
inc
cmpsb
xor
jb
in
mov
adc
data16
mov
sar
pop
mov
out
insl
and
lock
inc
mov
jl
loopne
sub
inc
xor
pop
shl
bound
push
dec
ljmp
into
push
and
add
call
push
jecxz
xor
sbbb
repz
sbb
js
test
out
push
movsl
add
jnp
adc
xchg
out
xlat
imul
pop
leave
add
idivl
dec
xchg
inc
iret
loope
xchg
push
push
jg
out
insl
ror
int
clc
push
mov
adc
mov
dec
bound
in
push
inc
repnz
movsb
into
hlt
fs
jp
mov
ja
loopne
mov
or
arpl
or
lods
jp
pop
loop
add
andb
dec
rorl
add
sahf
jmp
lods
enter
shlb
daa
adc
cld
and
mov
inc
fwait
icebp
mov
mov
adc
pusha
loopne
es
mov
roll
or
mov
test
rclb
pop
int
mov
popf
dec
aas
ret
je
icebp
pop
inc
dec
cmp
xor
jae
mov
mov
cmpsb
out
add
mov
fdiv
insb
sahf
and
sti
data16
adc
das
fsubs
inc
or
xlat
mov
mov
test
cmpsb
flds
clc
iret
or
and
daa
jbe
filds
push
or
out
xchg
hlt
int3
and
mov
mov
aad
cmp
mov
jp
hlt
pop
popa
rcrl
xchg
add
dec
cmp
mov
nop
push
sbb
xchg
jbe
xchg
ja
add
js
repz
cmpsl
rclb
pop
es
sub
mov
jbe
testl
mov
and
jl
mov
jo
es
mov
dec
jae
cmp
sbb
sbb
bound
add
lret
ljmp
fnstsw
or
stc
jecxz
dec
xlat
jbe
pop
cmp
lods
test
pop
dec
add
jbe
outsl
adc
mov
sub
jnp
enter
out
daa
enter
icebp
sub
cmp
push
mov
das
push
add
lods
pop
mov
cmp
pop
outsl
mov
pop
aas
leave
push
add
test
pushl
inc
cmpsb
lods
fcoms
inc
push
sti
pusha
aas
shlb
ds
mov
ss
pop
pop
das
daa
int
pop
cmpsb
in
xchg
xor
loopne
lea
andl
dec
mov
inc
rcrl
cwtl
repnz
jne
das
xor
push
mov
out
jl
shrb
in
in
sub
dec
pop
sbbl
jne
xchg
fsubr
inc
push
sti
pop
mov
xchg
ljmp
ja
and
cmpsb
sub
push
insl
mov
cltd
loopne
aad
pop
xor
push
paddsw
cwtl
andb
mov
clc
fs
pop
jnp
cmp
loopne
mov
lea
addr16
aaa
push
mov
sub
ds
cmp
dec
xor
or
push
adc
movsl
pushf
xchg
sub
dec
pop
adc
rcrb
rolb
ds
dec
cmp
pop
sbb
cmp
fidivrl
sbb
out
mov
jg
lahf
mov
xchg
mov
or
adc
lods
sub
mov
inc
push
pop
lret
lods
aaa
pushf
xor
dec
xchg
xor
fbstp
or
cmc
std
mov
insb
into
sbb
lret
sbb
mov
push
stc
or
mov
mov
mov
test
hlt
cmp
xchg
out
cld
das
mov
loopne
pop
pop
lret
aas
cmp
popa
roll
pop
cmc
lods
cmp
loop
test
fwait
xor
loope
cltd
aaa
push
filds
sbb
cmpsb
aad
in
cmp
inc
hlt
cmp
inc
mov
push
lret
and
sbbb
add
movlps
or
jl
xchg
mov
add
pushf
outsl
fiadds
mov
xor
repz
mov
jge
sahf
cmpsb
call
jbe
enter
or
inc
popf
out
xchg
sbb
and
jno
fisubl
jecxz
inc
lock
fmul
ljmp
xor
enter
setb
shlb
fidivl
fsub
sub
mov
imul
out
cmc
cli
mov
mov
mov
mov
movsl
ret
enter
mov
jb
insb
xchg
add
dec
movsb
mov
movsl
cld
and
mov
sbb
movsl
fiadds
hlt
sub
fmuls
stc
cs
xchg
js
push
cmpsb
jno
pop
sub
pop
mov
cmp
mov
inc
pop
push
cmp
dec
mov
jmp
and
sbb
jecxz
js
ljmp
dec
push
fdivrl
rcl
and
inc
std
adc
cmp
sbb
mov
in
xchg
cmpsb
sbb
fistps
mov
mov
addr16
data16
popa
clc
sub
jno
insb
aad
cli
push
jp
jne
mov
xchg
inc
mov
push
lcall
sub
shrb
in
jge
in
in
jo
adc
mov
ret
cmp
cmp
jne
mov
pop
movsb
cmpsl
or
xchg
and
fwait
cmp
sahf
xchg
lods
push
push
int
xor
and
add
xchg
sub
mov
mov
popf
lods
cmpsb
call
mov
inc
or
dec
dec
inc
in
aam
into
sub
push
sarb
adc
out
pop
xchg
push
jae
sbb
fimuls
loopne
jo
add
mov
adc
shlb
inc
xor
xlat
stc
add
insl
out
xchg
loop
jae
std
mov
mov
pop
adc
insl
mov
xchg
jmp
mov
jo
lahf
sti
call
mov
scas
push
push
inc
je
les
ret
adc
test
pop
into
pop
hlt
rorl
mov
lods
xchg
fdiv
add
cmp
fmul
fdivrl
movsb
hlt
divps
lock
dec
rorb
data16
scas
jb
fisubrs
movsb
js
loop
imul
push
mov
jnp
call
jecxz
insb
mov
jo
ja
add
inc
imul
mov
loopne
xchg
pop
fs
add
movsl
push
in
and
aam
lretw
fs
adc
pop
sub
add
inc
lret
test
iret
add
orl
jae
daa
rcrb
and
dec
dec
adc
dec
dec
cltd
stos
jb
out
mov
popa
xor
fcompl
jo
lds
and
data16
ss
mov
mov
push
inc
pop
call
mov
out
jb
mov
adcb
cmp
lcall
add
jl
lcall
cmp
dec
push
sub
repnz
pop
pop
inc
popa
enter
cmpsl
push
add
popf
aam
dec
fsubs
cmp
push
scas
cmp
movsl
xor
pop
loope
dec
test
fimull
push
mov
dec
sbb
jo
xor
imul
sbb
dec
int3
mov
cs
daa
test
sub
outsl
xchg
cli
out
fldenv
dec
mov
mov
outsl
or
xchg
test
mov
outsb
sahf
insl
bnd
sahf
out
int3
pop
or
shlb
dec
cmp
mov
pop
or
xchg
mov
into
fdivs
inc
ljmp
mov
out
mov
lock
iret
or
sbb
mov
scas
inc
and
xor
roll
lahf
mov
dec
dec
mov
aad
cmp
adc
rclb
sahf
sub
mov
dec
subl
jecxz
add
inc
or
mov
pop
js
dec
ds
stos
test
sub
fcomps
mov
mov
rorb
jae
addr16
loop
mov
lcall
aaa
adc
sub
cmp
lods
cmpsl
pop
sub
xchg
cmp
inc
pusha
lahf
jns
or
out
int3
outsb
fwait
je
and
popa
hlt
cmp
nop
mov
mov
movzbl
pop
sub
mov
dec
push
dec
add
aas
nop
xchg
loope
sar
mov
not
ror
mov
jmp
daa
popf
add
fwait
add
insl
cmp
and
push
repnz
pop
xor
bound
outsb
clc
sub
sbb
cwtl
push
adc
pop
imul
fs
dec
rcl
cmp
test
push
popf
add
shr
adc
je
cli
sub
and
lret
add
movsb
sub
popf
cs
push
inc
dec
push
pop
out
inc
or
mov
sub
jae
sbb
or
pop
push
pop
fsub
jb
cli
fwait
pop
lea
stc
jbe
xorb
gs
mov
cmc
mov
cmpl
div
inc
pop
fidivrl
mov
das
call
lea
mov
adc
sub
pop
dec
pushf
out
es
sbb
dec
cli
aad
loope
call
mov
aam
sbb
lret
add
mov
fucomip
sbb
and
in
movsl
and
mov
in
push
xor
and
or
adc
adc
jo
lds
test
or
stc
rep
cli
in
sbb
popf
jbe
sbb
push
jbe
outsb
rol
icebp
iret
int3
adc
aam
xor
xor
mov
sbb
pop
push
cmp
push
jge
xchg
mov
dec
outsb
xor
dec
xchg
sub
cmp
and
sub
out
loopne
stc
ss
mov
sahf
lgs
scas
sahf
insl
mov
int
test
push
xchg
fsubp
outsl
adc
adc
xor
test
push
out
fdivrl
pop
mov
mov
iret
pop
iret
mov
push
daa
and
pop
outsl
xchg
jle
in
add
adc
mov
sub
sbb
daa
leave
or
ja
addr16
xor
mov
mov
add
add
pop
dec
test
out
xchg
jno
push
ja
loop
adc
xchg
lods
gs
test
orb
arpl
sbb
pop
insb
sub
int3
xchg
pop
jbe
pop
stos
cmpb
cltd
nop
mov
iret
bound
mov
outsb
popf
sbb
lods
int
test
idivb
pop
aam
and
rorl
dec
cs
adc
loop
stc
or
iret
jns
push
mov
cmpb
mov
bound
fisubs
int3
and
xchg
sahf
jle
push
shlb
test
add
imul
push
inc
dec
and
rclb
push
push
push
fstl
fsubl
insb
and
pop
ffreep
dec
es
push
sub
lods
cli
cmp
xor
cmp
jae
cmp
or
inc
loope
addl
pop
lods
lea
add
jmp
bound
leave
jb
ss
iret
pop
add
gs
lret
adc
mov
mov
mov
loop
js
jne
sbb
mov
push
les
les
xor
inc
cmc
sbb
aad
cltd
dec
stc
jg
sbb
lock
enter
mov
rcll
sahf
xchg
push
pop
leave
mov
rcl
add
cli
int3
cmp
and
ret
jg
cmp
stc
cwtl
test
ret
xor
lret
and
jo
dec
mov
adc
mov
popa
sbb
mov
jns
repnz
fiadds
inc
mov
rorb
movsl
mov
mov
xor
pop
push
pop
int
dec
shl
sub
test
test
int3
clc
ret
pop
pop
lds
and
jmp
xlat
sub
cmp
xchg
sub
dec
lahf
dec
mov
mov
js
mov
inc
pop
inc
andl
pop
outsl
inc
xor
xchg
jge
cmpsb
outsb
addr16
xchg
and
xor
dec
in
add
jne
je
mov
jno
stc
rclb
xor
cld
ret
xor
shll
in
sub
mov
fists
xor
cli
fmuls
pop
gs
shrb
scas
xorl
jmp
shll
lret
inc
lea
pusha
jne
sbb
lcall
xor
incl
cld
movsb
push
sub
push
div
stos
mov
lcall
mov
push
idivl
jl
mov
mov
js
daa
aad
test
mov
adcb
mov
cmpsb
pushf
pop
push
xor
add
sub
mov
mov
mov
xchg
sti
mov
pushf
jle
adc
and
xchg
cltd
mov
inc
fst
and
jle
and
pop
icebp
imul
inc
fnstenv
jmp
scas
outsl
lret
popf
rol
mov
pop
cmp
in
testl
das
xchg
adc
sbb
popa
lret
and
sbb
scas
jnp
ljmp
add
add
lock
movsb
adc
jg
jle
aam
jge
clc
push
pusha
test
pushf
fidivs
dec
insb
movsl
sarl
cltd
repnz
lods
bound
adc
rclb
addb
repz
jno
mov
outsl
loop
addr16
push
insl
jae
mov
jno
neg
movsb
lahf
lock
ret
test
outsb
dec
movsl
ljmp
in
repnz
adc
rcrl
pop
push
pop
adc
push
call
out
mov
cmpsb
arpl
cwtl
push
sub
and
pusha
mov
pop
or
pop
lahf
inc
jmp
inc
dec
cmp
loope
addr16
mov
lahf
aam
lea
ret
bound
imul
jbe
jne
lea
mov
push
cmp
mov
pop
out
sub
fisubrs
pop
cwtl
jle
xchg
and
mov
aad
dec
pop
iret
leave
jmp
jge
stos
test
loopne
test
inc
push
daa
pop
xchg
mov
lds
jle
cmpsl
imul
cmp
add
sub
cltd
int
decl
add
mov
imul
add
push
pop
jl
out
ja
outsl
ficomps
xchg
jle
andl
mov
arpl
mov
pop
and
movsl
daa
fistl
mov
push
fldt
jae
enter
dec
arpl
pop
dec
jae
inc
push
push
addr16
sbb
hlt
aas
test
leave
sub
loop
nop
mov
jecxz
jge
clc
mov
cltd
adc
out
mov
stc
lret
xor
dec
pop
push
add
es
in
iret
dec
push
sbb
rcll
int
int
mov
xchg
adc
jns
jl
mov
xor
cld
jmp
xlat
sti
mov
int3
mov
aad
or
movsb
jle
adc
mov
lods
mov
fistpll
mov
mov
cmp
jbe
repnz
ret
mov
cwtl
movsb
push
cmpsl
test
jo
xor
pop
stos
cmp
xchg
pop
sbb
jmp
cld
es
mov
adc
in
pusha
push
mov
xchg
push
add
arpl
xor
popa
bound
jg
cs
adc
jb
hlt
ds
cmp
sarl
xor
dec
lds
mov
mov
push
jns
cmp
je
cltd
nop
mov
shlb
int
pop
push
icebp
and
cld
xchg
cwtl
jmp
das
pop
insb
dec
sub
push
cmc
dec
mov
bound
aam
imul
clc
xchg
mov
outsl
add
fsubrl
mov
sub
lods
shr
clc
xor
jecxz
not
lahf
jecxz
and
and
or
push
imul
jmp
insb
mov
test
inc
aaa
out
arpl
fsubs
jbe
fs
roll
xor
call
jecxz
jmp
inc
mov
ja
xchg
leave
gs
jnp
dec
add
inc
aaa
js
andb
insl
jae
sahf
dec
in
sbb
mov
push
inc
enter
sahf
dec
popa
mov
fsubl
mov
xchg
pop
jecxz
xchg
stc
movsb
andb
push
push
mov
pusha
nop
notb
mov
mov
enter
xor
sbb
inc
adcl
pop
fcoms
ret
inc
sbb
cmpl
stos
insl
cmpsl
leave
hlt
bound
mov
jae
pushf
insb
lahf
mov
je
dec
push
fnsave
mov
insl
dec
jne
pop
stos
jno
mov
lods
or
add
adc
push
xchg
inc
fistpl
ret
lods
cmp
jnp
jle
ds
mov
imul
orb
scas
test
aas
add
jnp
es
fcoml
xchg
cmp
hlt
or
inc
adc
mov
xchg
inc
mov
stc
repz
orl
cmp
xchg
lcall
sub
rcl
aaa
lods
or
or
pop
mov
add
fwait
add
lds
insb
or
adc
jle
ret
popa
or
push
inc
xor
sub
outsb
mov
inc
sti
repnz
inc
subl
pop
aaa
jmp
ja
leave
out
pop
inc
jbe
shll
add
sahf
mov
mov
add
ljmp
or
add
scas
mov
sbb
xchg
jnp
push
int3
jge
xlat
call
lods
orl
outsl
or
sub
pop
cmp
cltd
loope
or
jecxz
pop
je
popf
xchg
aaa
and
aas
mov
mov
in
insb
ss
imul
das
xor
lds
movsl
and
cld
mov
jns
xchg
jae
mov
dec
popa
stos
pop
or
imul
mov
aad
dec
test
ret
int3
sub
add
les
push
xor
push
sub
repz
popa
lcall
test
mov
clc
jge
iret
add
pop
push
imul
notl
sbb
pop
loope
or
cmpb
ret
hlt
fsubrp
lock
fldl
adc
push
fdiv
inc
imul
sbb
inc
dec
fnstsw
in
xchg
pop
imul
sahf
mov
ret
fs
mov
add
addr16
jge
sbb
into
or
rcr
xor
subl
and
insb
lds
cs
mov
lods
xchg
cld
out
sbb
sub
xor
mov
hlt
je
push
loope
stos
push
jns
jae
add
fsubrp
ja
imull
test
fistl
dec
out
inc
pop
repz
jnp
xchg
dec
subl
cld
repnz
xor
sbb
scas
cwtl
data16
fwait
jg
pop
or
lea
jmp
push
mov
fsubrs
cmc
or
lock
push
jnp
dec
insb
xchg
imul
dec
je
cmc
dec
mov
stos
popf
cmp
test
insb
stc
adc
sub
mov
pop
enter
ror
dec
mov
call
arpl
or
jmp
dec
lret
cwtl
or
jne
int3
iret
pop
xchg
cmp
cltd
push
push
das
cli
push
fdivrs
mov
out
push
jmp
add
dec
push
mov
jmp
mov
dec
jae
or
test
mov
add
mov
cs
mov
out
les
xlat
push
inc
adc
mov
es
es
xor
fisubrl
pop
adc
push
jne
adcb
jg
sub
aaa
fstpl
mov
rcrl
lock
js
jns
add
push
xchg
imul
and
insb
push
pop
sub
sbb
popf
mov
lret
test
fwait
rcl
sub
in
call
sub
push
cs
int
mov
pop
pop
call
lret
in
test
inc
inc
inc
jge
push
push
push
add
bound
add
jg
pop
lret
aaa
xchg
sub
decb
sbb
nop
push
cmp
pop
jp
gs
jo
add
mov
push
ss
les
dec
adc
dec
pop
lods
mov
cld
xchg
sbb
int3
aad
jle
fwait
pop
adcl
cli
push
aad
xchg
cltd
mov
mov
mov
push
leave
mov
cs
cs
xor
cmpsl
cmp
jl
sub
loop
cmp
leave
orl
push
mov
sahf
es
loope
arpl
repz
mov
xchg
mov
pushf
xor
and
cmp
int3
adc
push
mov
movsl
inc
and
push
into
sub
xchg
je
mov
fcmovbe
xchg
psubd
cld
lds
data16
xor
mov
lret
insb
mov
jo
xor
pushl
mov
ds
fistps
pop
dec
loopne
dec
cmp
mov
testb
push
sub
or
pushf
pusha
xor
sarb
daa
rol
mov
mov
lods
or
sub
pop
popf
jg
imul
add
movsb
and
sbb
xor
mov
ficoms
es
cld
xor
xchg
sub
pop
loope
pop
mov
lods
pop
xor
jge
sbb
jae
mov
push
stc
mov
push
mov
jmp
sbb
cmc
popl
cmp
and
js
dec
pinsrw
add
ljmp
cmp
imul
insl
xor
pop
pop
mov
mov
cmpsb
cmp
push
movsb
dec
movsl
push
cmpsl
or
int
pop
test
repnz
sbb
inc
aas
fdivrl
add
mov
xchg
add
xchg
out
cld
ljmp
mov
insl
mov
lods
lods
hlt
xchg
cmp
pop
sbbl
repnz
mov
adc
out
enter
stos
adc
addr16
push
int3
lret
enter
mov
cmp
add
inc
push
fisttps
inc
ficompl
les
and
cmp
or
pop
and
pop
popa
lcall
jge
int
sbb
adc
xchg
js
xchg
lods
pop
scas
cwtl
push
test
insl
lods
adc
in
ss
test
out
push
push
imul
pusha
dec
push
mov
fdivrs
fisttpl
test
mov
lahf
in
icebp
cmpsb
jmp
mov
ror
sub
jbe
jmp
jno
fimuls
popa
rorb
aas
adc
addr16
cltd
mov
aam
or
lock
push
sub
sbb
roll
add
sahf
mov
jge
bound
loop
push
adc
mov
orl
cwtl
loopne
xchg
test
aam
data16
cmpsl
movsl
test
inc
sub
xor
xchg
mov
push
and
repnz
dec
jnp
push
jae
pop
dec
push
data16
pop
dec
out
stos
xchg
rcr
pop
sqrtps
movsb
jne
adc
push
cmp
les
dec
faddl
fucomip
inc
insb
dec
jge
dec
dec
iret
sbb
cmp
sbb
jecxz
add
incb
mov
mov
aam
and
or
add
popf
inc
cmp
out
dec
movsl
mov
ret
jne
mov
dec
insb
jno
dec
aad
popf
push
mov
ret
gs
roll
shlb
jns
xor
adc
inc
jge
add
pop
out
xchg
addr16
push
mov
mov
cmp
andl
insl
loop
pusha
cmp
lahf
and
mov
or
fwait
push
les
jo
jne
test
adc
push
inc
int
movb
mov
gs
cmp
sbb
sub
mov
clc
jbe
cmc
mov
into
movsb
stos
sbb
push
xchg
cmp
lods
nop
popa
ja
dec
pop
or
or
cmc
mov
gs
std
cmp
ret
sti
mov
inc
fwait
and
fadds
inc
or
pusha
mov
sub
push
imul
or
add
movsb
xor
iret
cmp
mov
inc
push
pop
shrl
pop
push
scas
mov
lock
mov
lods
sub
fsubrs
jp
jnp
ficompl
push
test
and
sbb
sbb
push
mov
pop
inc
mov
inc
jmp
adc
nop
sahf
adc
sub
pop
into
cwtl
out
pop
cli
sbb
mov
pop
mov
rcll
out
pushf
or
sub
pushf
cmp
lret
test
pop
scas
lock
iret
ds
inc
sub
rorb
mov
or
mov
xor
and
and
xchg
aaa
mov
adcb
rcll
jns
pop
mov
repnz
xchg
mov
and
int3
lahf
adc
jl
or
rcl
jae
xchg
fdivrs
push
int3
dec
lret
shll
inc
in
or
inc
jle
inc
sti
jmp
add
sub
mov
mov
mov
fucomip
sbb
pop
aaa
bound
je
sbbb
loop
mov
cmpsb
sbb
sub
rcrl
les
add
xchg
and
lret
cld
mov
sub
mov
movsl
jmp
push
je
je
add
jecxz
mull
cmpsb
lock
jle
enter
out
cmp
or
push
clc
push
repz
adcl
cmp
ja
and
icebp
je
inc
sub
in
adc
orb
call
bound
pop
jge
and
repnz
xor
test
mov
xor
xchg
dec
scas
inc
mov
arpl
js
faddp
jg
cltd
dec
lcall
not
or
out
push
and
xchg
test
aad
mov
lods
andb
rcll
inc
mov
push
or
std
push
mov
cmp
pop
out
mov
aam
data16
or
inc
repnz
mov
xchg
mov
or
data16
mov
jns
cmpsl
lret
in
movsb
fisttps
pop
aam
pop
inc
test
aad
pushf
adc
sub
fcmovnu
and
push
jo
cmpsl
xor
ret
clc
sub
or
hlt
test
mov
or
sar
jnp
enter
push
push
movsl
rcrb
adcb
ljmp
fcompl
std
xlat
inc
orl
fistpl
or
mov
jp
idivb
mov
pop
ret
dec
mov
out
jbe
incb
mov
adc
les
and
fsubrl
cld
dec
lea
cmp
nopl
rcrl
insb
scas
mov
adc
test
and
movsb
lods
cmp
cmp
inc
or
jmp
mov
xchg
stos
push
out
push
fisubl
push
loopne
in
jge
rcrb
bound
out
pop
pop
sar
sti
add
in
cmp
add
rcrb
cmpsb
pop
dec
inc
or
pushf
xchg
jl
push
pop
sub
leave
dec
dec
cltd
lret
push
jmp
inc
xor
fs
and
jb
add
popa
aas
push
sub
push
or
mov
loope
dec
lock
mov
stc
xchg
push
mov
stos
pop
mov
pop
mov
insb
clc
fwait
and
mov
push
xchg
adc
adc
in
fnstenv
imul
mov
sarb
push
adc
js
sub
add
xchg
lods
xor
add
lea
aam
jbe
inc
mov
fdivs
in
int3
jmp
inc
movsl
scas
jg
and
ret
jecxz
aad
push
aas
popl
jbe
jmp
in
xor
leave
insl
xchg
push
jnp
int
aam
sub
pop
out
push
mov
adc
insl
add
outsb
sbb
pop
mov
sub
aas
and
mov
add
mov
repz
inc
xchg
mov
adc
pusha
pop
mov
aad
lods
sti
mov
push
enter
add
out
ja
xor
lods
mov
lds
cwtd
mov
repnz
mov
pop
call
cltd
cwtl
mov
fdivrp
leave
mov
ret
and
push
push
mov
push
sub
lret
fldl
xorb
dec
rolb
xor
aas
sbb
nop
sbb
sub
fidivl
inc
cmc
jns
mov
fs
mov
sbb
arpl
add
cmp
ss
daa
xchg
sub
or
mov
cmc
jns
xor
sbb
outsb
fdivs
sbb
jne
or
mov
stc
pop
loopne
or
and
fdivp
call
lock
or
push
mov
lea
clc
stc
div
stc
sub
adc
ljmp
sub
sbb
add
jno
inc
ret
sub
or
xor
mov
sbb
push
fcomip
fdivp
xchg
and
fwait
sti
dec
scas
sub
jp
push
and
sar
sub
in
ror
and
jb
mov
mov
xorl
stc
ds
clc
push
push
and
fwait
and
aad
cmp
imull
add
xor
xor
lods
fsubs
es
inc
and
repz
xor
addb
cmp
sbb
cmp
jle
fldcw
pop
pop
scas
xor
lds
push
cmp
add
sub
and
cmp
mov
sar
sbb
mov
push
fistpll
pusha
test
cmp
mov
adc
mov
or
push
push
cwtl
pop
sub
push
es
mov
test
jae
mov
mov
out
xor
xchg
cmpl
cwtl
inc
cmc
push
pop
fldcw
divl
loope
and
lods
and
in
mov
sub
sbbl
insb
sub
jmp
inc
sti
mov
sbb
xchg
mov
sub
push
pop
adc
push
loopne
pop
or
mov
and
pop
in
inc
movsl
repnz
pushf
dec
lahf
fidivl
xor
push
push
mov
pop
movsb
push
mov
xorl
jg
outsl
sbb
mov
nop
call
adc
stc
call
out
add
ret
cmp
fistps
rclb
hlt
stos
jp
es
movsl
xchg
aad
xlat
xor
stc
xchg
xchg
sub
ja
sub
sub
and
cmp
push
addr16
out
sbb
negl
ja
or
and
jmp
dec
pop
ds
mov
lods
mov
orl
subb
push
xor
add
mov
scas
push
add
in
rcll
add
push
test
mov
loopne
add
inc
xchg
std
mov
loope
repz
iret
rclb
movlps
fistpl
call
nop
sbb
adc
jecxz
lea
add
shrl
dec
xchg
add
insb
hlt
xor
pop
sti
shrl
push
test
push
ret
inc
fsubp
ljmp
mov
movsb
movsl
mov
push
push
inc
mov
xor
pop
push
ficoms
ja
js
hlt
lea
lcall
mov
adc
lea
stos
adc
dec
sarb
sbb
sbb
jb
shl
pop
cli
in
and
fwait
mov
xchg
mov
sub
sub
mov
imul
arpl
sti
or
aas
adc
cmp
fmuls
movsb
cmp
shll
add
jp
gs
sbb
shrb
and
adc
add
and
or
insb
popa
sub
xchg
andl
sahf
rol
push
xchg
pusha
stos
stos
xor
sub
ret
cmp
mov
push
cmp
xor
fsubr
cmpsl
decb
scas
pop
dec
xor
repz
test
divl
cmp
jbe
push
aad
je
jecxz
lcall
jno
scas
adc
push
mov
outsb
push
sub
adc
inc
stos
adc
nop
fistl
jecxz
push
fcompl
mov
ja
loop
stc
ffree
shrb
dec
fs
dec
lcall
mov
push
fists
ljmp
or
rcr
push
lods
jne
adc
pop
and
jp
jecxz
shlb
pop
iret
mov
fwait
cmp
out
jb
jmp
mov
cmp
scas
sbb
lods
pop
fstpl
outsb
xchg
pop
dec
or
rcpps
les
add
push
es
mov
fistl
xor
daa
mov
dec
outsb
shll
ret
fnstsw
inc
push
lds
inc
insb
clc
mov
fidivrl
pop
fld
inc
sbb
lcall
and
adc
or
push
fdivp
mov
mov
out
jno
data16
cwtl
mov
mov
fwait
cmp
xor
add
xchg
jno
mov
sub
or
es
xor
cmp
push
push
adc
es
bound
jo
fbld
outsl
push
fisubrl
cmp
sahf
aam
inc
nopl
clc
mov
ds
push
loopne
lock
push
xor
jge
cld
pop
or
and
xchg
jl
sbb
gs
push
dec
inc
dec
je
std
mov
xor
nop
inc
pop
xchg
pop
cwtl
mov
xchg
push
push
dec
mov
out
enter
test
xor
xchg
push
les
jb
das
loope
jbe
pop
orb
inc
scas
add
mov
outsb
ret
in
jae
leave
mov
out
dec
in
add
jb
ret
das
cmp
imul
add
cmpsl
test
movaps
xchg
lret
es
iret
sbb
mov
sti
int3
sbb
cwtl
cmp
mov
sbb
xchg
ja
lret
insb
cmp
clc
stc
xor
add
xor
je
fwait
xrelease
fisubl
push
ss
and
jmp
push
xchg
fwait
xor
mov
inc
nop
insb
mov
jbe
les
cltd
push
adc
out
lret
dec
repz
sbb
add
in
lods
xchg
repnz
mov
ja
or
in
shrl
hlt
xor
divl
test
or
jbe
and
loop
mov
mov
jg
mov
xorl
or
sub
loopne
mov
test
mov
sub
lret
sbb
pop
in
xchg
stc
cmp
add
out
adc
cmc
out
push
cltd
mov
and
and
insb
and
push
jmp
fbld
mov
add
xor
adc
loop
mov
xchg
out
scas
add
andb
add
and
int3
fnsave
xor
rep
add
xchg
xlat
aad
andb
js
aas
or
cltd
jg
scas
mov
push
int3
mov
add
add
inc
push
insl
rcll
pop
mov
sbb
ja
and
push
cld
pushf
nop
mov
arpl
mov
sbb
sbb
test
adc
sbb
or
pusha
jmp
or
inc
ljmp
mov
aam
xor
ljmp
sub
addr16
stos
or
mov
add
pop
push
cld
cmp
cmpsb
test
addb
cmp
and
sub
inc
sub
add
fimull
or
and
sbbb
icebp
mov
xchg
cmp
mov
mov
mov
sub
and
popa
ret
insl
sub
and
and
fildll
pushf
cwtl
add
les
mov
and
lcall
xor
mov
fisttpl
fiaddl
fistl
xor
out
ret
pop
fadds
lds
das
jmp
sbb
push
adc
mov
cmp
es
dec
pop
lret
push
push
mov
adc
scas
sbb
gs
xor
push
popf
dec
mov
jae
inc
mov
das
xchg
sub
gs
mov
ret
es
jno
or
adc
inc
push
push
mov
pop
sub
mov
xor
adc
data16
out
cmpsb
lods
inc
or
in
ja
mov
pusha
jo
dec
outsl
mov
cmc
inc
mov
ffree
ds
cltd
push
mov
aam
mov
pop
pop
and
fiaddl
aad
mov
pop
jne
inc
jle
int
jnp
push
fs
fdivrs
popa
aam
jg
mov
imul
sub
pop
xchg
xchg
ds
jl
sub
jnp
and
mov
in
or
addl
or
cli
bnd
loop
sbb
popa
mov
stos
sbb
negl
cmpl
mov
and
fidivs
xor
es
jae
or
mov
mov
xor
aas
test
leave
jns
push
aam
jmp
out
jns
jge
mov
cmp
mov
jmp
cmp
pop
shlb
mov
adc
push
or
std
mov
jmp
and
cs
mov
das
pop
cmpsl
xchg
out
pop
movl
imul
ret
in
adc
insb
cmp
jae
stc
ja
xchg
adc
sbb
dec
fildl
imul
imul
pop
adc
shr
imul
pop
pop
sub
test
es
mov
add
popf
movsl
aam
mov
outsl
cmp
lds
inc
xor
add
xor
imul
and
int
shrb
cwtl
adc
cmp
cmpl
dec
xor
add
notb
stc
icebp
das
adc
xchg
mov
xor
or
xorb
sbb
das
pop
cmpsb
shl
pop
xorb
sub
mov
push
loopne
xchg
inc
pop
loopne
mov
mov
lea
icebp
test
cmp
push
repz
jnp
sub
xor
push
icebp
test
xor
adc
lock
mov
ret
pop
sbb
mov
insb
inc
ficomps
mov
mov
outsb
movsl
mov
adc
pop
ljmp
cmp
ljmp
jns
mov
xor
sti
lds
xchg
pusha
bound
inc
add
loope
dec
push
jle
mov
cld
repz
scas
gs
inc
cmpb
xchg
lea
daa
aaa
sbb
cwtl
pop
mull
movsb
jl
xlat
xor
jbe
mov
push
dec
jmp
roll
mov
jmp
lods
dec
ret
add
pop
sub
inc
dec
loop
push
push
insl
gs
test
xlat
mov
dec
xor
cmp
push
das
xchg
lds
add
lret
dec
adc
loopne,pn
mov
or
pop
movsl
into
jo
cwtl
dec
pop
fdivrs
mov
or
mov
jl
push
lret
push
loop
lods
dec
ljmp
sub
ja
stos
mov
mov
fldcw
mov
rcrb
cmpsl
call
leave
je
arpl
out
test
cli
shrb
daa
test
test
sub
cmp
mov
adc
mov
stc
aam
pop
pop
sub
popf
cwtl
arpl
ficompl
ss
push
push
lock
push
push
shlb
dec
mov
cmc
lock
call
pop
or
cmp
dec
mov
dec
repz
dec
cmpsb
int
lods
fmuls
dec
ja
xor
int
test
movsb
stc
inc
popa
enter
sahf
imul
dec
cs
mov
cmc
movsl
stos
in
jae
push
sti
and
jg
mov
inc
outsl
xchg
scas
mov
sti
fs
repnz
stos
push
cmp
repnz
push
sub
fwait
fwait
stc
into
insl
addb
jg
sub
cmpsb
or
push
and
andnps
inc
andl
mov
mov
outsb
out
rcr
aas
sahf
push
sub
leave
mov
popa
add
popf
jno
xor
sar
lcall
xorb
push
or
je
push
fistl
adc
pop
insl
push
and
push
push
enter
mov
or
repnz
pusha
mov
movsb
into
movsl
pushf
lahf
pop
das
fldt
mov
mov
mov
shl
dec
pop
pop
pop
jmp
les
js
enter
xor
stos
pushf
push
rorl
pop
push
mov
in
inc
dec
xchg
xchg
push
xor
mov
mov
jno
pop
xchg
or
push
add
jl
adc
pop
ljmp
pop
push
mov
cmp
jns
lods
adc
cmp
cwtl
or
mov
jl,pn
sub
scas
mov
xor
pop
scas
mov
dec
loopne
mov
mov
call
fwait
pop
jmp
test
lcall
ror
jg
mov
cld
add
xor
icebp
sahf
mov
cwtl
rcll
and
cmp
cmp
jne
fmulp
jae
mov
inc
cmpsl
sbb
xlat
sub
pop
outsl
mov
mov
stos
std
mov
sbb
mov
fs
mov
jb
jmp
cmp
bound
xor
inc
movsl
imul
adc
cmp
addl
sub
pop
lock
mov
fldl
rolb
into
loope
inc
mov
scas
call
mov
int
lret
dec
mov
xchg
outsb
ret
mov
nop
jmp
xchg
jge
mov
aaa
lods
loope
int3
fwait
outsl
xor
sbb
scas
inc
ds
repz
and
arpl
stos
and
rcll
mov
inc
jle
sbb
shll
test
sbb
js
add
lret
jg
or
pusha
mov
jecxz
popf
or
mov
and
shll
adcl
jmp
inc
out
xchg
mov
mov
add
cmp
popa
inc
shll
stc
ret
jmp
loopne
pop
ficoml
sub
or
mov
sub
addr16
popa
sub
inc
mov
outsl
sub
lahf
sar
rorb
and
cs
cmc
dec
sbb
push
arpl
repz
inc
sbb
sarb
ss
in
jl
repz
sbb
push
sahf
or
xchg
jns
mov
pop
int3
cmp
dec
mov
jnp,pn
sub
dec
fwait
inc
pop
mulb
ret
imul
xchg
cmp
pop
hlt
pop
inc
cmp
lahf
xor
fcomi
adc
and
in
ja
fidivrl
mov
out
gs
push
repnz
je
jne
js
movsl
inc
aas
out
in
push
out
lea
adcb
pop
adc
and
dec
xor
push
jnp
or
std
cli
data16
cmc
cmp
cmp
jle
lods
or
push
pop
xor
jno
sbbb
in
cmp
and
xor
push
jg
dec
into
fiadds
pop
push
inc
stc
push
dec
ret
pop
or
cltd
test
movsl
lods
push
jnp
inc
repz
outsb
pop
fisttpl
jle
cmpsb
pop
outsb
inc
in
je
push
cmp
hlt
inc
push
pusha
sbb
arpl
push
and
cmp
lods
sub
gs
test
repnz
in
mov
in
lcall
sbb
or
ret
cmp
mov
fcomps
and
dec
pop
pop
fisttps
xor
lret
ror
and
mov
inc
idivb
incl
insb
movsb
inc
mov
lahf
loope
sbb
push
and
or
pusha
fidivrs
cwtl
test
mov
mov
and
in
xlat
sahf
repz
adc
dec
clc
sub
push
inc
mov
mov
inc
incb
xlat
shll
loope
add
push
outsl
jae
adc
dec
cmp
xchg
orb
cmp
cmpl
mov
mov
jns
arpl
ja
out
mov
jae
sub
pop
cmp
jle
insb
xlat
andb
fidivrs
ret
xor
inc
push
push
sub
adc
aas
cmpsb
inc
inc
xchg
add
mov
fisubrl
bnd
lret
and
lret
cmp
mov
dec
inc
and
das
jecxz
out
add
outsb
xor
ret
shl
lahf
inc
pop
inc
sbb
adc
cli
cmp
cmpb
cmp
sub
shl
sbb
cmp
in
ds
pusha
mov
out
or
mov
loopne
stc
pop
rclb
add
rolb
xchg
hlt
loop
jns
movsl
movsb
out
jb
pop
aad
test
jnp
shlb
enter
lds
mov
mov
jne
stc
gs
cltd
pushf
push
sub
cmpsl
mov
xor
mov
stc
jae
jg
rcr
sub
jge
mov
sub
or
popf
xchg
aas
add
das
ljmp
jne
lds
test
lods
push
stc
fcom
js
jne
xor
lods
stos
pop
mov
adc
sbb
fldl
das
iret
test
inc
pop
adc
jp
fistpl
out
leave
andb
clc
rolb
pusha
pop
push
dec
jo
sub
call
mov
fldl
and
insb
push
dec
daa
xchg
jl
ss
shll
jl
movsl
adc
xor
inc
push
mov
or
test
test
test
adc
sahf
cli
mov
xor
in
mov
push
scas
jecxz
repz
call
mov
cmc
mov
les
push
lods
aas
and
pop
push
imul
gs
testl
lock
or
xor
mov
mov
fstpl
cld
push
shll
and
mov
sar
mov
jno
out
push
aas
sbb
lcall
cmp
or
lods
add
adc
pop
ljmp
cmp
sarl
fwait
cmp
mov
sub
outsl
sbbl
lods
mov
lods
in
fldenv
loope
leave
sub
sbb
in
cmp
aas
ss
addl
subl
leave
push
cmpsl
cmp
in
or
mov
add
cmpsb
outsb
mov
push
nop
out
xchg
lea
leave
ret
ljmp
cmpsl
xor
aam
stc
adc
repz
out
repnz
test
dec
cmp
repz
insl
push
imul
add
cmp
jp
push
dec
push
add
push
clc
lods
inc
cltd
push
ds
ficoml
mov
xorl
clc
dec
lret
fcmovnbe
jb
add
xor
inc
sub
sbb
cli
inc
push
fistpll
mov
dec
and
or
in
cmpsl
lcall
jp
jl
aam
or
mov
push
loop
ja
aas
jae
inc
jge
xor
jae
inc
std
xchg
lahf
xchg
insb
aas
mov
jne
ret
cmp
imul
xor
sti
ret
dec
outsb
push
cld
mov
inc
mov
out
adc
movsb
or
push
pop
in
cmp
jl
mov
push
inc
cli
sub
xorl
mov
call
sbb
cmp
aam
mov
lods
test
pop
xor
jmp
daa
add
jp
pop
je
lods
xchg
cmp
add
outsl
pop
insb
lret
int
out
and
mov
inc
jns
mov
adcl
cwtl
adc
xor
xor
lds
outsl
lods
bound
das
dec
and
shr
mov
fnsave
imul
mov
sbb
cmp
sub
addr16
lds
mov
cmp
and
and
jl
movsl
outsb
dec
inc
lahf
jmp
aad
add
rcrb
add
cld
aas
std
cs
sub
push
setb
out
jns
add
jg
out
loope
ret
fs
cmp
dec
addb
loop
leave
and
jbe
inc
mov
test
mov
xchg
dec
stos
fistps
inc
push
outsl
push
je
outsb
fisubrl
sub
push
mov
gs
loope
sub
fdivs
add
xchg
xchg
lcall
xor
mov
outsb
adc
xchg
or
test
fldt
sti
mov
out
dec
idivb
jmp
ja
add
jge
mov
clc
pop
scas
push
in
and
and
roll
and
sbb
push
or
xchg
sbb
jl
cltd
cld
aam
sub
js
xor
add
sbb
and
sbbb
xchg
mov
in
pop
icebp
mov
inc
mov
or
into
cmp
call
in
xchg
das
or
mov
mov
xor
nop
arpl
cmpsl
fs
mov
cmp
mov
fwait
inc
jg
mov
cld
arpl
inc
stos
and
lcall
and
pop
out
sahf
fisttps
mov
push
sbb
mov
test
jne
arpl
xchg
out
imul
arpl
in
push
push
fisubl
ja
mov
or
adc
xchg
js
clc
popf
xlat
popa
bound
fidivrl
push
inc
ss
sbb
xchg
pop
jp
dec
nop
aam
dec
cld
add
sub
and
cmp
inc
and
lahf
int3
stc
pop
and
mov
fidivrs
loope
or
pop
fiadds
and
mov
pushf
jge
xchg
push
das
in
push
std
xor
jno
imul
mov
mov
mov
mov
cmp
fsubrl
push
and
jp
push
pxor
cmp
loopne
test
xchg
cmpl
aaa
cwtl
adc
or
mov
lahf
inc
fiadds
pop
cmc
into
call
pop
mov
xor
mov
mov
in
sub
jnp
inc
inc
sub
aam
xorb
jmp
mov
jmp
das
xor
pop
lcall
loope
jae
jg
mov
repz
mov
mov
psubsb
nop
outsl
mov
adc
insl
mov
xor
lea
mov
xchg
lock
jno
clc
call
xchg
imul
in
xor
add
mov
fcomps
cmp
pushf
pop
push
jb
sub
sub
imul
push
sbb
imul
hlt
push
mov
xlat
ds
push
ds
stc
xlat
sbb
mov
scas
xchg
in
xchg
lea
mov
cltd
hlt
arpl
fwait
leave
sbb
repnz
lahf
lock
dec
push
outsl
mov
or
imul
inc
mov
std
jge
jnp
negl
mov
add
xchg
rorl
rolb
lahf
push
sbb
jg
push
cmc
sbbl
shll
sbb
in
adc
into
in
and
jmp
out
mov
leave
and
cmp
cld
shlb
les
mov
inc
fs
ss
xchg
loop
cs
in
sub
data16
xchg
cli
cmp
push
stos
fbstp
filds
dec
and
pop
pop
cli
fsts
push
mov
cmp
negl
ss
cmp
adc
scas
cmp
outsl
dec
jl
pop
int3
xchg
mov
jecxz
in
mov
loopne
daa
xchg
ja
add
jno
pop
xchg
lods
out
fs
jno
scas
jns
jno
jmp
adc
jb
pop
mov
ret
es
xchg
jmp
and
cwtl
jne
mov
repnz
jle
dec
sti
lret
imul
shrl
push
repnz
xor
aam
call
and
mov
push
sub
pop
loopne
push
jp
xchg
jge,pt
fs
xchg
adc
pop
mov
cmpsb
cwtl
lods
ss
cmp
lea
in
js
sbb
sub
mov
movsb
or
ja
rcl
jno
js
lods
pop
xchg
and
xchg
push
sbb
push
xor
mov
fwait
xchg
test
mov
in
mov
jle
dec
imul
mov
int
jecxz
push
ret
hlt
call
mov
xchg
test
xor
aad
pop
cltd
test
mov
repnz
xchg
push
pop
add
sub
fwait
cmp
and
sub
sahf
fucomi
scas
push
loop
bound
rcl
fisubl
dec
cmp
fstpt
add
mov
scas
pushf
pushf
cmp
push
jge
mov
adc
dec
test
movsb
jns
insb
hlt
push
or
sbb
ljmp
lret
mov
fidivrs
test
hlt
push
lcall
stos
rcl
sub
orl
loopne
enter
rolb
push
jnp
push
xlat
sub
out
pop
insb
adcb
or
jno
test
dec
cmp
in
sub
adc
sbb
pop
adc
fcoml
repz
mov
jge
testb
mov
pop
fwait
or
sbb
testl
or
add
add
pusha
sbb
lods
insb
mov
and
or
pop
and
clc
push
mov
add
insb
fmuls
sarb
lods
dec
xor
mull
shl
sarb
inc
xor
fsubrs
lods
xchg
mov
idivb
lods
and
mov
push
mov
and
mulb
daa
and
pop
stc
in
push
lds
jl
push
movsl
xchg
fdivrs
fisttps
pushf
fbld
or
xchg
mov
inc
push
sbb
lods
dec
xchg
out
popa
cmp
inc
js
or
dec
mov
dec
sbb
inc
sbb
mov
jne
push
pop
lahf
pop
fbstp
pop
leave
and
fdivr
jno
lods
fs
shlb
lods
das
add
and
xchg
mov
stos
roll
popf
push
mov
mov
jno
negb
sbb
add
pop
outsb
sti
mov
out
inc
inc
cmp
in
mov
gs
inc
ss
push
xor
stos
pop
sbb
repnz
mov
sub
pop
mov
push
xor
fidivl
lret
sbb
adc
stos
mov
and
push
das
pop
in
mul
dec
notb
clc
imul
xchg
aam
imul
aam
jmp
xrelease
pop
rolb
scas
lods
inc
add
xor
js
repnz
pop
sub
sub
stc
and
dec
push
fucomi
hlt
sbb
test
pop
in
popa
push
loopne
sbb
xor
pushf
enter
push
cltd
fbstp
xchg
push
jp
das
aaa
mov
imul
cmp
je
mov
sub
or
sti
mov
mov
das
inc
jo
and
loop
sub
pop
roll
adc
xchg
test
xchg
jl
or
rcrb
jp
or
and
daa
andl
lds
push
xor
or
push
push
sub
jecxz
push
mov
xor
sub
mov
adc
adc
subb
cmp
loope
iret
ret
push
mov
cmp
inc
xor
sbb
es
xchg
shrb
sbb
cmpsb
sbb
cli
sbb
repnz
lods
negb
movsl
cmp
inc
inc
arpl
add
idiv
xchg
iret
movswl
lea
mov
test
adc
cmp
lods
popa
xchg
jne
xchg
shll
or
mov
or
xchg
mov
sbb
adc
les
cmp
adc
cmpsb
arpl
sbb
xor
sub
mov
or
cld
xor
lret
adc
dec
xor
xchg
in
or
mov
popa
cmp
pop
hlt
into
iret
js
xchg
mov
lods
outsb
out
mov
jne
and
inc
xchg
jnp
jmp
orb
fwait
dec
push
stos
pusha
roll
and
xchg
mov
ja
adcl
adc
lock
jp
or
fbld
or
gs
in
dec
repnz
out
inc
sbb
jmp
cltd
sbb
adc
jne
data16
jbe
dec
lahf
fimull
nop
rcrb
stos
inc
iret
xchg
inc
push
or
mov
lock
fucomp
test
loop
ljmp
fldt
es
add
jb
lcall
int3
dec
sbb
mov
mov
xorl
push
and
xlat
lds
aas
lods
rorb
dec
not
adc
inc
shlb
dec
sbb
imul
adc
or
iret
aam
ret
cmp
xor
cli
add
push
sub
in
sar
or
or
clc
push
cmc
sub
pop
mov
add
addr16
mov
mov
pop
cli
int3
test
les
or
aad
jg
and
ds
sub
mov
rcrl
mov
cmc
jbe
adc
into
pusha
or
rclb
ret
mov
faddl
or
fsts
cmpsb
mov
dec
push
push
pop
int
std
das
inc
enter
sub
or
jae
pop
adc
subl
sbb
in
movlps
or
push
sub
jmp
jo
cmp
sbb
lock
xor
insb
dec
mov
adc
dec
stos
lcall
fisubrl
daa
notl
and
adc
pop
push
popa
cmpsl
pop
shr
push
pop
bound
xchg
adc
mov
movl
inc
or
cld
inc
ljmp
insb
pop
sub
pop
fs
pop
ja
int
dec
pop
je
lahf
std
in
jp
aam
je
dec
mov
pop
mov
push
fdivrl
rorb
js
sub
lds
popf
sub
insb
aaa
daa
mov
mov
loope
dec
sbb
out
jmp
xor
pushf
xor
enter
xchg
pop
mov
cmpsb
outsl
test
push
fsubrp
mov
fiadds
xor
add
cltd
inc
and
or
mov
imul
xorb
nop
testb
sbb
push
rorb
fists
bound
loopne
mov
es
pushf
cmp
add
clc
aaa
cmp
idivb
lock
imul
mov
cmp
stos
in
and
mov
push
pop
mul
cmp
jl
jbe
jle
push
cmc
jle
xor
xor
cmp
out
roll
jecxz
lret
out
push
je
popf
mov
cmp
aas
loop
out
xchg
in
dec
cmp
jmp
ret
dec
fbld
lahf
clc
mov
repz
cmp
aad
out
adc
push
ss
mov
pop
loope
loop
test
out
adc
fdivl
inc
or
xchg
jbe
cmp
mov
ljmp
lods
mov
xor
pop
adc
cltd
adc
rcrb
sbb
stc
mov
cld
leave
mov
aas
jg
sbb
js
outsl
mov
adc
out
mov
push
xrelease
push
push
pusha
push
xchg
sub
cltd
adc
dec
cli
and
pop
mov
dec
cli
shll
lock
js
icebp
ret
push
cmp
mov
xchg
ret
inc
das
movntps
cmp
pop
sbb
movsl
outsl
addr16
dec
add
outsb
xor
popf
sbb
mov
mov
jp
mov
push
scas
mov
test
sahf
mov
leave
dec
cmpsb
or
xchg
mov
dec
sub
and
add
in
or
cmp
ret
mov
cmp
rorl
pop
fdivs
out
pop
out
arpl
nop
mov
cmp
jnp
sbb
xor
xchg
fnstenv
or
push
iret
outsb
out
loop
inc
xor
cwtl
popl
mov
loopne
shl
fisttps
pop
xchg
setne
sti
bound
ret
pusha
sbb
mov
ja
dec
jle
cmpsb
add
or
inc
mov
cmc
stos
mull
imul
notb
repnz
je
inc
cmp
js
add
aaa
adc
add
iret
push
mov
jge
lock
xor
mov
dec
imul
fidivs
cmpsb
loope
jne
push
dec
ficoml
cmp
test
sahf
sahf
leave
add
fistl
insl
pop
daa
nop
dec
fwait
or
jmp
push
pop
shr
push
repz
test
mov
xor
xor
in
jl
imul
incb
mov
pop
mov
jno
adc
ljmp
mov
pusha
sbb
and
pusha
test
mov
out
jo
mov
adc
push
scas
cmpsb
push
test
pop
les
xchg
lods
movsl
data16
lods
outsb
test
jmp
aad
xchg
ja
push
arpl
out
enter
dec
pop
push
fildl
lret
jg
insl
ja
scas
rcll
push
adcl
scas
xchg
andl
rcr
jno
jb
pop
jmp
test
les
push
in
lods
cld
add
pop
push
pop
mov
mov
stos
xor
or
fmull
repnz
xor
dec
ja
push
dec
push
or
test
add
xchg
jmp
mov
adc
xchg
jns
or
jle
and
mov
xchg
outsb
pushf
add
inc
lahf
add
popa
out
pop
cmp
int3
insb
mov
bound
aas
std
cltd
loope
and
pusha
out
cmpsl
jp
push
pop
cltd
push
fldlg2
mov
and
test
fadds
out
enter
or
dec
icebp
es
cltd
cwtl
or
call
and
and
jno
jns
ds
enter
hlt
test
ljmp
lods
fnstcw
iret
add
in
insl
and
and
rcr
cli
stos
push
fnstsw
push
xor
add
or
rcrb
outsb
leave
xchg
add
push
push
cs
bound
or
push
mov
pop
ja
jnp
lds
pop
jg
dec
enter
and
push
mov
sbb
dec
std
mov
fwait
mov
inc
scas
addl
pop
stc
adc
jbe
cmovge
aaa
scas
pop
adc
sbb
es
cmp
jb
les
out
lret
iret
adc
scas
mov
fsubr
sarb
sbb
xchg
cmpsl
jb
dec
add
daa
xchg
inc
mov
xor
aaa
cmp
jns
xor
add
add
and
jne
dec
ja
inc
clc
outsl
pop
push
jge
jnp
xchg
inc
insw
cmp
popf
lods
add
mov
sub
or
sahf
stos
push
cmp
mov
fs
xchg
sbb
lods
hlt
fists
in
mov
jns
xor
imul
loopne
shr
and
addb
ret
cltd
popf
aas
adc
test
call
in
cmp
inc
imul
dec
out
subb
push
cmpl
jbe
stc
jbe
xor
dec
xor
pop
or
fistpl
loope
and
add
mov
cld
sbb
mov
scas
cmp
mov
inc
cli
sub
push
add
mov
ss
push
mov
sub
jl
cvtps2pi
push
push
fnstcw
mov
aas
add
dec
insb
push
in
in
adc
sbb
dec
mov
adc
dec
and
sub
add
arpl
roll
mov
les
push
pop
fwait
stos
jnp
xchg
out
adc
mov
xor
sbb
cmp
loop
hlt
ljmp
jno
jle
xor
and
cmp
jo
inc
jo
shlb
ret
arpl
dec
xchg
push
ret
les
mov
dec
in
dec
aam
mov
stc
out
negl
mov
mov
addl
das
lods
rclb
xchg
push
add
es
add
jo
pop
cmp
cmp
lods
lret
pop
shll
stos
movsb
out
lods
push
adc
jmp
cs
pop
add
inc
mov
push
pusha
fsubs
jnp
gs
inc
repnz
push
inc
shlb
test
mov
outsb
cwtl
lahf
or
and
xchg
xchg
and
sub
leave
ss
push
mov
push
cli
push
repz
je
dec
jne
jge
je
call
mov
popa
mov
test
inc
movsb
in
cmp
cwtl
mov
lea
mov
mov
push
insb
das
pusha
cmp
negb
lret
out
sbb
cmp
notw
cmpb
lcall
jno
jmp
pop
jb
mov
enter
inc
mov
push
mov
inc
inc
lods
outsl
bound
mov
and
push
sti
cmc
sub
cmp
lods
jne
insl
jno
gs
and
xor
cmp
jno
roll
adc
sub
andb
sub
loopne
and
jae
mov
sti
out
jmp
call
pop
cmp
mov
pop
fwait
test
mov
adc
mov
sub
sub
jle
insb
mov
mov
cli
jp
xor
adc
mov
fs
in
iret
and
cs
out
xor
fs
fs
test
cmp
lds
push
cmp
lcall
aas
jg
and
jno
cmp
mov
imull
rorl
lahf
insb
sbb
or
mov
ja
rolb
sbbl
ljmp
ds
lahf
arpl
daa
jecxz
js
cmp
scas
aam
lea
in
xchg
loop
lret
xor
sub
cwtl
rcrb
cli
das
inc
lock
sub
fldcw
call
lea
push
mov
inc
cltd
push
insl
mov
push
lahf
scas
sub
call
xchg
xor
insb
ficoms
sbb
push
lods
das
and
adc
decb
sub
insb
das
xor
push
loop
xor
in
mov
mov
mov
std
in
mov
sub
fbld
popa
jns
push
stc
in
fsubs
hlt
pusha
xchg
rorl
cmpsb
cwtl
pop
mov
or
cmpsb
dec
in
xchg
inc
shrl
loop
sub
mov
add
dec
icebp
lret
pop
push
cltd
xchg
and
add
jnp
mov
mov
jle
sahf
bound
xlat
or
pop
push
je
sbbb
mov
shrb
mov
decl
int
mov
jl
jp
push
cltd
mull
inc
jo
mov
jge
mov
aaa
mov
add
mov
jp
movsl
xlat
and
ret
stos
fwait
adc
sub
adc
adc
call
in
sbb
test
shl
jno
mov
inc
dec
fcoml
inc
aad
xchg
mov
jmp
and
fcomps
pushf
call
testl
pop
dec
fstpl
xchg
xor
push
and
xlat
leave
sub
cld
xchg
mov
mov
jg
gs
addr16
adc
fisttpl
and
dec
adc
sub
mov
mov
inc
sbb
ljmp
lea
dec
and
filds
in
lock
and
arpl
jp
or
xor
movsl
into
aam
popa
dec
lock
dec
scas
and
ljmp
push
push
mov
inc
push
push
sub
in
xchg
xchg
sub
mov
sbbb
and
and
and
lock
jb
dec
ds
insb
add
mov
or
js
test
mov
push
cmp
insb
ret
leave
or
rol
jbe
movsl
in
scas
mov
pop
pop
inc
dec
outsb
push
inc
ljmp
bound
cmpsb
call
xchg
and
fimull
xlat
push
lret
insl
cmc
jb
jle
bound
jno
add
xchg
dec
popf
jbe
xor
imul
lret
movsl
xchg
std
pop
les
pop
stos
pmaddwd
and
dec
pop
clc
in
lcall
daa
sarl
pop
enter
cld
adc
push
push
cltd
pop
int
pop
out
xchg
outsb
jns
nop
ja
dec
lods
xchg
aas
fwait
outsl
in
iret
loopne
mov
insb
jb
repz
jle
nop
push
and
inc
sub
mov
movsl
xchg
mov
imul
sub
lods
leave
icebp
lahf
stc
test
lcall
or
xor
imul
daa
xchg
fisubrs
int
sub
fidivl
das
dec
repnz
fisttpll
div
sbb
aad
ds
inc
popf
push
vpcmpeqw
iret
sti
jnp
add
add
imul
fstpl
insb
mov
push
inc
dec
es
xchg
imul
pop
nop
lcall
clc
or
outsb
mov
iret
dec
arpl
mov
je
pusha
mulb
loope
test
inc
xor
dec
jne
sti
pop
vsqrtpd
out
movsb
lcall
sub
mov
xchg
and
and
je
insb
fxtract
xchg
stos
mov
stos
enter
sbb
xor
push
pop
xor
nop
incl
push
mov
dec
sub
fs
mov
xlat
ret
in
test
rclb
mov
aaa
loopne
lock
pop
loopne
mov
ss
in
mov
cltd
or
dec
xchg
or
cs
das
xor
push
mov
fldl
je
pop
lods
mov
pop
and
or
pusha
stc
loop
mov
xor
jno
pop
loop
sti
inc
call
les
pop
aam
lcall
dec
mov
jne
cmp
mov
ret
rorl
icebp
mov
movsb
mov
push
mov
rorl
or
call
loopne
enter
aaa
sub
jo
cwtl
scas
adc
xor
pop
fimuls
int
jb
cld
movsb
imul
xchg
inc
add
sahf
and
mov
sahf
addr16
mov
cmc
cld
mov
lods
mov
add
xchg
imul
imul
mov
dec
aaa
pop
adc
lret
cmp
call
cs
out
jle
pop
mov
mov
push
fsub
push
sub
sub
cmp
add
aaa
outsb
push
adc
xchg
jge
dec
inc
push
mov
mov
add
pop
imul
pushf
testb
aam
daa
xor
xchg
sub
fisubrs
leave
stos
sbb
in
movsb
fisubs
popf
pop
pop
clc
mov
mov
fadds
aam
lea
addr16
stos
fsubr
push
inc
xchg
test
cmp
pop
rclb
jp
idivl
add
pop
aaa
loope
xor
sbb
jns
xchg
insl
jne
test
dec
lea
cmpsl
sub
lods
lds
out
push
mov
xor
fisttpll
out
int3
mov
add
xchg
add
cs
lcall
adc
js
mov
cmp
emms
adcb
mov
notb
xchg
pop
sbb
pop
fcmovnb
test
jp
inc
jbe
loop
mov
sbb
xchg
push
add
and
pop
pcmpgtw
and
insb
lds
cmp
jne
pop
fcoml
sbb
adc
xchg
repz
mov
icebp
inc
mov
mov
jae
jb
popa
outsb
xchg
cwtl
mov
jmp
aaa
mov
stc
icebp
add
repnz
or
fs
arpl
sub
das
push
jno
in
in
pop
jge
inc
rcrb
pop
mov
cmpsl
fdivrl
sbb
pop
sub
imul
xor
or
mov
int3
sbb
hlt
and
popa
mov
xchg
pop
inc
inc
ja
fcmovbe
loopne
dec
pop
xchg
inc
sub
mov
stos
call
bound
jne
xchg
sub
push
cmp
adc
stos
sub
mov
mov
adc
sub
aam
loop
out
mov
mov
loope
and
push
push
mov
mov
ljmp
mov
inc
sub
inc
enter
pop
adc
push
ja
icebp
and
mov
xor
add
into
gs
inc
mov
movb
pop
gs
and
sub
sub
pop
sub
lock
ja
inc
shll
fs
das
xor
cli
fildl
aaa
decl
jmp
insb
cmp
add
clc
lret
jp
pop
mov
mov
js
out
or
sub
pop
sti
aad
lock
mov
test
clc
ljmp
adc
js
xor
xor
movd
aas
into
jmp
cwtl
inc
or
jp
shlb
mov
xor
push
cmp
loope
cld
cmp
out
push
iret
pop
mov
push
stos
addl
xchg
arpl
inc
mov
mov
push
call
fwait
cmp
and
push
mov
and
push
fsubl
sbb
xor
ds
ja
test
push
test
fs
pop
push
fstpl
ds
ret
cld
leave
aaa
mov
dec
stos
cwtd
jo
pop
adc
shll
mov
fidivs
add
xchg
shrb
rep
push
pop
jecxz
loopne
push
adc
inc
idivb
jl
xchg
mov
mov
pushf
adc
cs
jae
insb
mov
mov
xchg
addr16
mov
and
repnz
mov
out
cmpsb
jl
imul
leave
add
subl
adc
les
inc
out
into
xchg
mov
decl
loop
xchg
push
jno
fnstcw
xchg
xchg
loopne
out
cmp
adc
push
ret
add
in
mov
sub
shr
out
ja
gs
jge
sub
cmpsb
add
iret
jnp
ss
into
mov
decl
jecxz
es
repnz
and
pushf
jne
data16
mov
insl
pusha
fistpl
imul
pop
cmp
fldl
pop
push
push
xchg
fcompl
rcl
jg
fcom
add
cmpsb
and
jl
jo
adc
es
aad
pop
ja
sbb
cmp
clc
out
or
bnd
lods
daa
or
xor
jmp
xor
mov
cld
push
pop
mov
cmc
add
fwait
xor
outsl
repnz
or
inc
mov
xchg
mov
inc
or
insl
sub
hlt
cmovge
imul
insl
lock
and
xlat
subb
loop
shlb
adc
fstpl
push
stos
mov
std
xor
test
jb
sbb
movsb
das
xchg
je
or
xchg
ja
cld
cmc
push
add
dec
lock
imul
jae
add
daa
test
inc
or
sbb
mov
mov
les
and
aas
dec
mov
out
xchg
loope
jne
stc
cs
jmp
pop
pop
repz
mov
and
jbe
xchg
test
in
mov
sub
adc
ds
adc
adc
push
popa
inc
imul
jno
pop
outsb
or
pop
in
insl
sub
push
movsl
sarb
add
push
outsb
pop
js
add
jecxz
inc
pusha
or
mov
adc
jbe
xchg
fcmovnu
shll
adc
jl
pop
loope
fnstsw
mov
ret
or
jo
mov
lods
shrb
imul
in
cmpsb
dec
andl
sub
fsts
fmul
xor
js
pop
test
arpl
sbb
pop
aam
out
add
orb
lret
int3
mov
adc
pop
bound
add
subb
push
mov
pop
pusha
adc
inc
xchg
or
dec
cwtl
pop
mov
into
cmp
xchg
pushf
mov
pop
sbb
push
lcall
jb
mov
jo
movb
add
in
mov
mov
cmp
fstl
dec
cmc
mov
push
and
sub
mov
int
cmp
xor
adc
mov
das
cmc
cmpsb
fcompl
call
mov
xchg
pushf
lret
fwait
jae
push
test
rclb
dec
mov
xchg
pop
clc
sub
push
sub
rclb
push
shll
push
out
push
push
xchg
lods
fs
push
movsb
push
andb
lret
cmp
push
push
cmp
jge
bnd
shlb
fdivrs
negl
or
add
mov
cltd
or
add
pop
repz
cli
sub
mov
or
inc
add
xchg
mov
into
mov
dec
mov
dec
xchg
jmp
cwtl
jae
enter
popa
rcll
pop
cwtl
push
cmp
sbb
sub
fiadds
lret
xchg
das
movsl
ljmp
movsb
xchg
daa
xchg
das
mov
pop
loop
sbb
xchg
sub
push
or
mov
aas
enter
xor
arpl
mov
imull
loop
pusha
xor
in
loopne
xchg
cmc
imul
xchg
push
inc
push
jnp
fs
add
add
push
pop
or
sub
cmpsb
in
insl
lcall
jmp
lret
adc
sub
xor
mov
sti
jbe
or
jl
cmp
xchg
in
bnd
adcl
popf
xor
dec
cli
scas
dec
mov
shll
insl
pop
std
cwtl
adc
add
adc
int
or
and
jp
dec
adc
popf
ret
mov
or
pop
jnp
ret
inc
jp
add
and
inc
popa
and
je
push
outsb
stc
jo
mov
lahf
arpl
fsubr
cld
in
gs
add
sbb
lret
and
aas
lods
sbb
sub
das
call
shlb
pop
loopne
test
test
and
repnz
data16
cmp
bound
test
mov
leave
pop
aaa
aam
lahf
xchg
add
xchg
scas
lret
inc
je
mov
adc
jg
mov
dec
test
xchg
fcmovnu
and
and
call
stos
shlb
or
mov
in
push
sbb
outsl
push
inc
das
cmpsb
arpl
jl
mov
push
adc
stos
rorb
jl
adc
sub
mov
out
sbb
ja
andl
lea
scas
sub
lahf
cmp
xor
scas
jp
mov
xchg
xor
gs
popf
dec
push
mov
dec
mov
nop
or
test
jecxz
hlt
movsl
clc
sub
xor
lds
sub
xchg
adc
pop
inc
mov
ja
clc
sbb
orb
aad
pushf
and
lcall
pusha
js
idivb
push
lahf
stos
sub
scas
outsl
pop
or
les
mov
pop
and
ljmp
insl
jbe
and
push
cmp
xor
les
mov
movsl
hlt
mov
or
aas
dec
daa
dec
cld
orl
out
add
inc
add
mov
cmp
add
aaa
insl
or
stos
adc
dec
xor
and
add
mov
rcrl
mov
sbbl
addr16
test
mov
jl
adc
inc
jno
jle
jae
leave
adc
push
mov
inc
add
lds
jne
shl
das
out
adc
pop
enter
sub
fs
lret
mov
imul
jns
mov
ja
pop
jno
in
dec
pusha
lret
cmpsb
inc
es
xor
push
lods
rorl
and
das
cmc
inc
or
inc
xor
lret
inc
pusha
jecxz
mov
xchg
ja
addb
jno
push
mov
jnp
mov
adc
cmpsl
pop
aad
add
push
mov
mov
shlb
bound
xchg
add
adc
fnstenv
mov
call
fisubl
xchg
les
int3
lock
test
jbe
lock
popf
lea
lret
out
dec
adc
loope
imul
in
mov
fsubrl
sbb
test
mov
mov
int3
or
sahf
test
faddl
shlb
ljmp
adc
xlat
mov
cmpl
or
popf
cmp
xchg
adc
movl
cmp
xlat
cld
pushf
or
hlt
push
xchg
inc
or
xlat
loope
mov
xor
sub
out
movsb
mov
pop
lock
or
xor
call
dec
cmpsb
mov
stc
sub
pop
sbb
and
insb
sub
gs
inc
in
push
adc
xor
lahf
lcall
mov
mov
pop
out
lods
pop
aam
ljmp
sbb
addr16
adc
jmp
lcall
inc
adc
ljmp
daa
test
daa
lea
mov
mov
or
xor
mov
push
mov
sub
scas
shll
clc
xor
mov
dec
ret
push
movsb
loope
daa
mov
mov
scas
sub
jne
jmp
pop
and
adc
fdiv
push
popa
push
jbe
pop
xor
mov
scas
push
sub
cmp
or
stc
mov
and
jg
sub
dec
lcall
andb
xchg
fsub
lret
push
loopne
dec
mov
or
shr
mov
gs
dec
push
xor
out
testl
add
mov
sbb
add
cmp
dec
test
out
aad
in
sbb
add
lds
push
cmp
add
lods
jmp
movsl
push
mov
sahf
and
sbb
in
mov
shll
xor
push
jno
popa
popf
arpl
in
pop
or
mov
fstps
int
pop
insb
push
and
xor
loope
dec
pop
lods
repz
stos
lods
aam
jns
push
xchg
jne
jmp
xchg
mov
loope
insl
pop
outsl
std
pushf
jnp
add
pop
pushf
aaa
shrl
js
rcll
push
and
pop
cld
jae
cmp
push
pop
mov
sti
sub
icebp
pop
inc
into
xor
sti
mov
cmp
lds
jmp
pop
push
jecxz
push
jne
adc
lcall
and
arpl
pop
jle
arpl
adc
fsubr
push
mov
mov
mov
lcall
add
rorb
xchg
add
scas
outsl
gs
cmpsb
fiadds
fimuls
rcl
and
aam
test
out
hlt
adc
enter
jbe
mov
push
loop
push
jge
or
dec
or
lret
lods
gs
and
adc
arpl
cld
adc
outsb
jae
loop
mov
sbb
add
rol
fcomps
push
lock
inc
stc
inc
dec
xchg
mov
div
call
mov
cmp
sbbb
mov
mov
ljmp
mov
xchg
dec
jecxz
insl
xlat
test
mov
imul
sbb
inc
lahf
mov
fs
cmp
mov
mov
jl
push
mov
mov
pop
xchg
sub
icebp
xchg
sub
push
scas
aam
ss
or
and
mov
jmp
xor
jle
popf
jno
pop
xchg
pop
and
and
inc
or
aaa
dec
jno
out
gs
rcrl
mov
gs
hlt
cmpsl
push
dec
mov
popf
or
mov
sbb
xchg
fidivrs
dec
iret
xchg
lea
mov
ss
mov
mov
and
mov
xchg
cs
mov
sub
or
mov
pop
sub
xchg
insb
imul
idivl
int3
sub
push
push
dec
inc
dec
mov
js
inc
lret
js
int
xor
pop
dec
sti
cmpsb
and
jno
mov
std
arpl
fsts
sub
hlt
pop
imull
lcall
popa
enter
and
repnz
stc
sbb
push
sti
xchg
sub
mov
inc
aam
insb
mov
sbb
insl
aaa
pop
xchg
jge
repnz
cli
mov
xor
xor
les
movsl
xchg
mov
popf
or
xor
jno
test
pushf
cmp
cltd
inc
in
test
jno
aaa
loopne
filds
mov
cmp
pop
sub
je
mov
sbbb
aam
mov
jmp
in
and
sub
stos
movsl
xor
sbb
rorb
dec
insb
mov
mov
in
mov
pop
fstps
or
xor
sbb
mov
leave
leave
cltd
repz
or
aas
pop
jmp
add
mov
insl
imul
jns
xchg
push
jmp
sub
mov
lea
clc
sub
shlb
call
lcall
popa
add
jmp
rcll
cmpsb
fcomip
or
addl
pop
inc
mov
mov
mov
xchg
cmp
sbb
stos
xorl
mov
xor
pusha
fisttpll
cmpsl
mov
mov
rol
out
xchg
mov
inc
scas
xor
out
in
fdivl
outsl
mov
xchg
loop
sbb
and
mov
and
cltd
fcomps
in
int3
fcoms
push
shrb
and
enter
loope
cmp
sti
std
and
fwait
in
mov
ret
mov
decl
mov
jo
xor
outsl
orb
test
mov
or
dec
xor
int
fwait
neg
ljmp
sub
call
loope
int
inc
mov
push
push
nop
inc
sbb
jae
add
fcoms
cmp
arpl
movsl
xchg
out
gs
xor
sub
lahf
cltd
iret
movsl
pcmpeqd
adc
mov
adc
pop
dec
ss
sub
ds
testl
add
out
aaa
mov
mov
pop
pop
cld
dec
cmc
xlat
bound
lret
xchg
xchg
dec
mov
and
adc
addr16
cli
shrl
mov
iret
divb
sarl
adc
fisubl
daa
cmpsb
addr16
int
adc
xor
mov
sub
add
sub
and
push
mov
sahf
pop
adc
sarl
mov
ja
scas
dec
cs
mov
mov
insb
push
sub
jns
loope
imul
mov
mov
mov
ss
xchg
adc
fcmove
sarl
int
in
pop
cmp
pop
sbb
jnp
je
push
pop
mov
xor
bound
mov
sbb
inc
pop
pop
dec
ret
arpl
push
xchg
movsb
cmp
cld
mov
movsl
int3
jp
cmp
js
daa
lods
stc
add
iret
mov
mov
sbb
lds
hlt
push
mov
subl
jne
fmulp
imul
int3
mov
test
popf
dec
imul
idivb
mov
pusha
inc
adc
pop
add
int
ret
outsl
adc
out
xor
mov
adc
dec
pop
jae
test
push
ret
decl
pop
insb
xor
mov
and
mov
and
loop
call
mov
sbb
sbb
pushf
adc
xorl
rcrb
cmp
adc
cmp
dec
jge
pop
leave
scas
add
test
pop
jno
sub
xchg
jl
or
call
dec
adc
jae
arpl
push
cmp
addr16
sbb
sarb
push
cmp
bound
mov
fadd
outsl
repz
jns
lock
mov
lahf
cltd
fcomip
jbe
insb
aaa
cltd
rcrb
out
mov
dec
pop
repnz
lcall
pusha
popf
and
sub
cmp
cs
jge
sbb
enter
loop
int
out
les
mov
push
pop
jns
xchg
adc
mov
add
pop
ret
popa
jmp
sbb
adc
jl
jmp
jmp
xor
js
inc
popf
mov
mov
mov
xor
std
or
lods
cmp
movsl
movsl
ss
test
lahf
and
add
aad
mov
lret
cmpps
mov
cwtl
xchg
cmp
lret
ss
mov
pusha
xor
or
sahf
das
dec
aas
in
gs
or
mov
fwait
cmp
push
loopne
test
stc
xchg
xor
mov
repz
inc
cmpsl
lock
out
lret
pushf
add
mov
aas
imul
cmc
stc
jl
push
mov
sbb
mov
or
add
scas
cmp
hlt
outsb
shlb
xchg
cltd
sti
ret
and
enter
clc
mov
pop
mov
sbb
pop
xchg
push
lods
or
pop
test
fsubrs
ds
loopne
popf
mov
adc
dec
add
loopne
push
adc
fsubrp
dec
leave
dec
push
push
xchg
cmp
in
xchg
mov
cli
insl
pop
lret
or
lcall
imul
xor
mov
leave
adc
wrmsr
mov
xchg
fnstenv
push
push
xor
fcoml
xchg
test
mov
cld
mov
adc
imul
mov
adc
mov
or
adc
rorl
fwait
cltd
in
xlat
rorb
test
xor
fisubs
aaa
cmpsl
inc
ret
and
or
mov
aam
adc
jecxz
mov
das
rol
pop
push
adc
in
jecxz
mov
idivl
jbe
or
xchg
adc
ljmp
ret
sarl
les
mov
es
add
inc
pop
sti
adc
adc
xchg
jae
mov
jge
cmp
cmp
into
mov
jg
inc
int3
dec
nop
cmp
pop
cmp
mov
pop
fstpt
and
inc
add
xchg
jp
movsb
xor
les
sahf
sub
jle
xchg
add
cmp
sub
mov
pushf
xchg
pop
ret
sbb
push
mov
cli
out
popf
in
andb
aaa
rol
inc
shrb
jo
xor
lock
add
xchg
daa
dec
pop
mov
sbb
loope
leave
push
scas
mov
jmp
adc
lahf
xchg
in
sbb
lret
mov
jnp
mov
mov
mov
mov
out
dec
call
add
subb
inc
scas
mov
and
aaa
xor
sbb
mov
mov
clc
lret
dec
sub
call
jmp
jne
push
aas
jmp
dec
sub
sti
in
sarb
push
dec
scas
lcall
add
xor
mov
shrl
stc
icebp
jmp
sub
lds
add
pop
clc
test
or
sbb
insl
repz
insl
mov
dec
or
xchg
jno
addr16
jne
adc
adc
lcall
dec
clc
push
mov
scas
int3
stc
into
ljmp
jl
lock
xchg
sub
mov
jg
sub
jp
aad
int3
pop
mov
xchg
pop
inc
sub
fdivs
xor
mov
or
mov
pusha
jmp
sbb
cmpsb
jae
push
xchg
sub
aad
pop
cmp
sub
shll
cmp
jle
dec
xchg
cld
jp
adc
push
orl
sbb
stos
repz
sbb
add
fs
xor
ljmp
ffree
adc
enter
fstl
test
jno
cmp
mov
add
push
and
push
popa
xor
dec
sub
repz
stos
sub
mov
xor
push
jmp
adc
xor
movd
and
cmpsb
not
xorb
add
jo
test
je
xchg
ret
ds
jmp
ds
adc
sub
inc
fisubrs
fcmovne
push
ja
mov
push
sub
xor
jmp
pop
fwait
mov
cmc
stos
fisubl
repz
es
jmp
lcall
lds
xchg
xor
push
or
cmp
cmp
add
test
loop
ss
xchg
mov
nop
inc
push
popf
lcall
ja
lods
lods
push
mov
sub
inc
mov
sbb
lock
dec
shrb
inc
shl
or
xor
mov
sbb
push
fistpll
xchg
gs
pop
stos
mov
sbb
dec
xchg
jp
repz
jbe
scas
dec
cld
shll
ss
jle
icebp
push
cmp
jns
adc
loope
aaa
inc
int3
icebp
jmp
pop
and
lret
mov
mov
mov
inc
or
jae
lods
cwtl
push
fstl
movb
xor
icebp
jno
jge
int
push
lods
or
pop
mov
xor
pop
adc
adc
sub
push
lods
adc
mov
pop
mov
jbe
adc
add
add
push
out
pop
mov
sti
jg
push
rcl
cmpsl
dec
repz
xchg
cmpsb
loopne
or
mov
pop
xchg
xor
rorl
inc
add
icebp
movsb
inc
ret
mov
enter
aad
push
loop
fucom
jg
adc
dec
or
push
push
mov
pop
popa
cmp
pop
cmp
or
andl
push
lods
outsl
pop
cld
ret
icebp
ss
adc
leave
loopne
inc
xchg
adc
push
jns
cli
pushf
jecxz
loope
pop
xor
mov
and
stc
clc
loopne
and
mov
hlt
sub
mov
repnz
sbb
pop
stos
idivb
dec
cmc
aaa
call
scas
outsl
popf
imul
mov
push
es
add
ret
cmp
cli
out
cmpb
in
lods
xchg
into
cwtl
stos
jns
fdivrl
mov
mov
jnp
jae
mov
in
fsubp
fmull
pop
push
in
pop
and
or
jecxz
mov
out
mov
mov
sub
push
xlat
cmp
insl
cwtl
pop
insb
xchg
mov
pop
stc
mov
xorb
mov
sbb
scas
jnp
xchg
ja
jge
add
push
aas
sbb
lods
dec
gs
and
mov
jns
push
sbb
cwtl
testb
stos
jecxz
add
mov
sub
out
jo
ret
lock
cmp
mov
sbb
fimuls
pop
jno
movsl
loopne
xchg
bound
fwait
xor
mov
frstor
es
insl
lcall
pop
insb
adcb
shrb
inc
es
andl
jmp
pop
mov
mov
cltd
xor
cmc
mov
and
mov
or
xchg
scas
hlt
sbb
sbb
leave
std
push
push
lret
adc
dec
sahf
or
push
add
fs
popl
or
push
adc
dec
cmp
sub
sbb
mov
cmpsb
mov
idivb
pop
in
dec
or
shl
fimull
int3
add
mov
sbb
cmp
ret
enter
jl
cmp
mov
rcll
ret
dec
aas
into
rol
or
and
jne
movsl
cmp
push
mov
popa
xchg
ret
sbb
push
mov
jmp
inc
popf
sub
mov
xchg
xchg
mov
sahf
stc
lahf
adc
pop
and
xor
inc
leave
sbb
js
mov
sub
mov
in
mov
xchg
inc
into
hlt
or
lcall
inc
lock
orl
sub
or
fimuls
stc
pop
subb
dec
outsb
cli
pop
push
add
mov
cmpsb
popf
inc
jns
or
mov
leave
popaw
mov
into
push
je
push
std
jge
pop
je
cmp
mov
mov
insb
mov
lods
icebp
or
pusha
cmp
jbe
xchg
mov
sub
ja
dec
dec
xchg
dec
pop
dec
sti
cmpsb
das
stos
add
repz
xlat
push
cli
imul
or
subb
jmp
ss
and
shl
inc
mov
nop
cmp
push
mov
stos
ja
inc
lds
in
inc
jns
insl
mov
test
cli
inc
shlb
cli
xchg
inc
xchg
sub
or
jns
cli
jmp
dec
mov
lock
jecxz
mov
stc
mov
cs
mov
and
pop
mov
pop
rclb
icebp
jg
xor
loop
in
adc
push
pop
std
addl
push
mov
lret
push
sub
addr16
loopne
or
push
pop
dec
lret
hlt
lcall
add
sub
insl
dec
lods
pop
iret
jle
mov
aam
dec
in
push
int3
xor
fcomps
cld
mov
leave
mov
std
scas
or
jb
fimuls
lret
imul
lods
hlt
dec
iret
shll
pop
aaa
jns
and
ljmp
popf
test
and
lock
test
enter
lods
imul
rcl
push
sub
and
mov
stos
movsl
in
ljmp
sarl
sar
fcmovnu
scas
jp
enter
decl
pop
fwait
xchg
mov
add
rcr
jae
mov
dec
inc
jnp
lret
ds
fbld
lock
adc
scas
mov
daa
stos
add
mov
clc
int
nop
pop
nop
imul
cmp
mov
inc
pcmpgtw
in
daa
ss
int
fdivrl
sub
pop
mov
jecxz
mov
dec
dec
in
mov
adc
mov
sbb
lahf
sub
in
sbb
es
inc
out
cmp
adc
jns
fmull
lock
push
lahf
adc
cltd
sub
repz
out
pop
inc
pop
mov
lahf
jno
mov
ss
push
daa
push
mov
fdiv
pop
inc
or
movsl
lret
jo
xor
fidivrs
push
cmp
out
or
jno
dec
test
and
rcr
adc
xchg
inc
adcl
in
sub
mov
xor
cmp
sbb
mov
addr16
aas
jecxz
das
xchg
loope
cltd
adc
lods
mov
sbb
mov
sub
out
arpl
inc
mov
add
sbb
mov
negl
sbb
dec
lds
mov
mov
popa
push
sbb
hlt
arpl
mov
inc
sbb
aas
sti
adc
shr
push
inc
shlb
and
xor
xchg
daa
test
lods
sub
and
popf
into
jle
mov
mov
das
sbb
loope
mov
lods
testb
fisubl
mov
movl
xlat
and
stc
sbb
ret
pushf
inc
mov
addr16
in
mov
in
inc
aaa
pop
sub
fs
sbb
cmpsl
cmp
hlt
cli
out
sarl
out
cld
inc
aam
and
jecxz
cmp
dec
adc
mov
inc
pop
inc
int3
js
test
pop
xlat
mov
lock
sub
je
push
xor
lret
mov
vminss
jns
mov
rcrb
push
cmp
mov
decl
mov
xlat
mov
ljmp
stc
push
ret
sarb
popf
loope
push
jne
xchg
cli
or
mov
arpl
loop
add
jg
sar
jl
cmp
dec
and
cwtl
mov
sbb
pusha
dec
adc
movb
sbb
fstpl
outsb
xchg
xchg
cmp
cmp
inc
and
fisubl
jo
cmc
divl
pushl
cmpsl
mov
insl
inc
pop
std
push
enter
mov
into
shll
int3
out
cmc
pop
outsl
jg
outsl
xchg
int3
jbe
push
push
push
incb
andb
sub
or
loopne
mov
leave
rcrb
in
sahf
rcrl
mov
popf
pop
pop
add
loope
pop
pop
push
add
imul
into
push
xchg
cmp
divl
imul
test
mov
imul
ret
pusha
push
xchg
out
test
mov
xor
dec
sbb
aas
push
inc
xchg
popf
jle
pop
jl
fwait
xor
sbb
in
sub
pop
jnp
out
repz
jne
loopne
inc
push
jmp
add
sub
cmp
dec
scas
mov
add
aad
cltd
test
push
sahf
popf
sub
sbb
gs
dec
pushf
clc
imul
add
pop
push
fldcw
mov
push
pop
cmpsb
mov
fwait
sti
popf
jbe
mov
rcrl
fistps
pop
mov
cmp
sbb
inc
sub
idiv
cmp
clc
jne
xchg
sub
and
pushf
mov
adc
ret
insl
push
ds
int
push
push
mov
mov
mov
inc
push
movsb
mov
mov
xlat
inc
cltd
pop
add
add
push
pop
sub
xchg
mov
dec
mov
push
pop
add
xor
stc
cmp
mov
mov
rcl
jmp
cld
mov
scas
hlt
mov
dec
xor
daa
ss
pop
lahf
popf
push
dec
bound
jmp
outsb
jmp
out
movsl
xchg
fmull
add
sbb
mov
dec
jns
jno
push
ja
mov
imul
xor
inc
clc
test
testb
out
xchg
pop
pop
sti
aam
gs
fimull
ja
outsb
or
inc
das
pop
pop
mov
clc
nop
mov
pop
js
lods
adc
loopne
repnz
and
repz
clc
stos
dec
and
enter
les
and
push
pop
arpl
mov
jno
add
cmpsl
in
aam
cld
pusha
clc
mov
or
iret
jae
cmp
mov
xchg
mov
and
leave
push
pushf
ret
lods
repz
mov
mov
add
sbb
paddb
jle
add
xchg
jmp
lds
or
pushf
or
add
fadds
out
fisttpl
dec
rclb
shrb
enter
add
sbb
pop
js
mov
test
jge
pop
mov
test
mov
sti
andb
fimull
jecxz
cmc
scas
and
jl
jmp
mov
enter
fsubrs
mov
test
xlat
jp
decb
sub
dec
dec
push
repnz
mov
push
sub
mov
nop
push
mov
xchg
dec
aam
push
push
add
mov
popa
add
cmp
hlt
rcll
pop
mov
jno
sub
xchg
cmpb
pop
loopne
sub
fwait
mov
cmpb
add
xor
imull
or
aam
lods
sbb
jecxz
jecxz
jae
add
jge
cmc
push
call
push
xor
pop
jecxz
sub
push
sbb
cltd
les
gs
push
in
repnz
imul
bound
push
outsl
imul
xchg
aad
xor
pop
dec
xor
rcl
push
dec
cmp
rclb
and
daa
pushf
pop
aam
jb
adc
sbb
mov
ret
mov
mov
cmc
nop
push
stc
or
xor
fdivrl
inc
jg
hlt
fnsave
mov
cld
roll
dec
enter
gs
insb
and
repnz
ret
inc
negb
pop
mov
pusha
pop
mov
adc
pop
iret
pop
push
das
mov
push
or
adc
lea
dec
ficompl
std
pop
cltd
les
jl
mov
add
arpl
dec
aad
xchg
hlt
daa
xchg
pushf
loop
sbb
xor
je
pop
fcom
fsubrl
jg
mov
mov
out
aas
fcmovne
pop
lret
cmp
or
sub
clc
test
or
popa
cmp
dec
adc
pop
cmpsb
pop
lret
hlt
sub
outsb
and
inc
sbb
sub
inc
push
js
sarl
jnp
cmp
push
dec
dec
dec
das
jmp
imul
sbb
stc
add
adc
stc
lods
or
inc
jge
cmc
adc
inc
push
loope
ljmp
mov
and
xor
fadds
stos
xor
mov
inc
cmp
add
out
jo
pop
inc
mov
divl
adc
mov
sub
jge
xor
pop
pop
leave
dec
std
sub
cmpsb
fmuls
fwait
scas
imul
ret
jle
xchg
xchg
push
rolb
cmp
jbe
jmp
hlt
pop
jp
ja
lds
fisttpll
out
call
xor
mov
pop
test
push
outsb
fistps
adc
sub
movsb
aas
cmp
mov
xchg
lret
scas
dec
dec
push
dec
or
into
sbb
xor
mov
loopne
xchg
adc
hlt
xchg
pop
icebp
loope
cmp
insb
cmc
cmp
mov
and
push
imul
out
and
std
inc
mov
in
mov
clc
dec
xlat
lods
call
add
mov
adc
xorb
jno
push
push
into
and
dec
inc
add
jnp
lahf
sub
add
cmp
mov
jg
xor
shlb
xchg
push
jmp
pusha
push
sub
inc
notb
pop
dec
xchg
es
addr16
sub
out
mov
inc
inc
pop
push
xchg
out
ficoml
and
out
scas
or
cltd
jnp
shlb
cld
push
xchg
sub
sbb
xchg
lret
call
cmpsb
ds
jmp
sar
lock
rorb
cli
sub
push
mov
repz
aas
sbb
pop
movsb
add
lea
imul
mov
pop
inc
movl
movl
xor
dec
adc
xor
ss
iret
loop
inc
xor
arpl
loop
xchg
repnz
enter
sahf
add
cmp
and
loop
bound
xchg
inc
lds
jp
cwtl
adc
psubsw
ds
inc
mov
mov
jg
jmp
lahf
cld
and
sub
mov
in
rclb
jbe
or
xchg
xchg
hlt
subb
sub
or
mov
jno
dec
jbe
inc
pop
inc
mov
cmp
les
xchg
out
adc
xor
test
xor
sbb
outsb
mov
and
pop
daa
or
jge
sbb
xor
add
inc
call
sbb
aad
push
and
or
jge
repz
les
mov
adc
out
rclb
cmp
lret
pop
sahf
sub
push
movsb
sbb
in
cld
cmp
add
mov
addb
xor
xor
scas
pop
in
xor
push
and
mov
jmp
addb
or
outsl
sbb
dec
jp
mov
das
cli
lret
mov
adc
or
mov
gs
pop
cmovne
lods
mov
aaa
mov
mov
data16
or
stos
or
or
mov
pushl
ljmp
xchg
jnp
cmp
adcl
les
out
ds
cmpb
nop
ja
jp
ja
add
out
js
cmp
push
push
orb
and
jl
divl
pop
dec
ret
std
xchg
xchg
adc
loop
jl
cli
xchg
push
push
out
hlt
or
sub
iret
repnz
ds
fsubl
subl
push
mov
inc
into
sub
lret
js
jp
jne
mov
into
pop
aaa
push
jp
test
mov
fisubl
cmpsb
gs
xor
push
xor
push
fs
adc
data16
test
mov
xchg
and
clc
bound
clc
mov
fistl
cmp
xchg
or
in
xchg
mov
and
cli
fcmovnu
lcall
xchg
lds
in
cmp
inc
mov
lsl
loopne
adc
cmp
inc
xchg
inc
mov
sbb
cli
shl
inc
ja
lds
cmp
xchg
loop
imul
jmp
mov
and
pushf
xchg
movsb
outsb
pop
dec
test
test
sub
adc
pop
inc
ljmp
xchg
inc
fisubrl
mov
sub
push
pop
les
sub
inc
in
mov
lods
fldt
mov
fwait
push
aas
dec
sbb
je
and
js
jmp
jo
xchg
mov
or
mov
jle
stos
mov
add
pushf
arpl
pop
repz
jmp
mov
sbb
mov
xchg
fwait
mov
out
js
add
dec
sbb
mov
cld
mov
mov
les
adc
test
fstl
imul
xchg
ret
add
pop
call
ret
mov
mov
mov
pop
ljmp
or
out
jo
sbb
adc
gs
int3
lret
cmp
xchg
dec
and
inc
mov
jge
mov
outsl
xchg
in
jmp
add
cmp
pop
cs
shr
cmp
sarb
lods
lret
sahf
mov
insl
add
mov
or
dec
stos
jns
fadds
or
inc
fstps
js
ljmp
push
cmp
dec
hlt
lret
mov
dec
data16
inc
cmp
fsubp
shll
mov
xchg
mov
add
xchg
add
pop
loopne
sub
roll
xor
push
stos
popf
fisubrs
and
lods
push
mov
adc
xchg
sbb
int
pop
xchg
inc
push
out
jne
mov
jge
lahf
lcall
adc
arpl
das
push
dec
jno
das
imul
ds
cltd
testl
fidivl
lcall
xchg
popa
ds
adc
and
inc
inc
adc
lods
or
and
mov
fnsave
ret
pop
mov
negl
bound
xchg
lods
mov
outsb
cmp
js
mov
sub
mov
sahf
mov
sub
xchg
pushf
movsl
sub
jmp
mov
mov
pop
je
cmp
add
test
testl
fcmovb
cs
cmpsl
iret
cmpsl
lods
dec
paddsw
sub
je
mov
sbb
int3
push
inc
mov
mov
data16
xor
loope
stos
dec
sub
jecxz
pop
xor
xchg
mov
cmpl
fdivp
arpl
pushf
mov
fisubrs
sti
add
fwait
lods
lret
or
inc
push
loopne
sbb
mov
test
and
push
in
jo
mov
cmp
push
lods
jo
repz
push
insl
and
lret
pop
lods
pop
jmp
shlb
mov
fildl
imul
lods
fstps
enter
in
jge
push
pusha
pusha
imul
push
pop
mov
ja
xlat
sets
inc
enter
hlt
orl
dec
and
mov
mov
lods
sbb
jl
and
and
pop
insl
outsb
out
in
jo
je
sbb
adc
xor
jmp
popf
pop
mov
mov
fnsave
ss
pop
call
pushf
leave
dec
mov
xchg
sbbb
dec
jns
adc
pop
jp
fistl
lret
pop
mov
push
lret
fstps
imulb
repnz
and
mov
cmp
jmp
sbb
pop
loopne
test
lret
mov
mov
push
outsl
pop
lret
loope
fs
and
inc
sbb
fwait
cmpsb
popf
loope
pusha
pop
loop
mov
jp
idivb
pop
jecxz
adc
inc
pop
sti
ljmp
lods
rcrl
mov
loop
push
fdivl
loop
pushf
test
xchg
insl
enter
repnz
xchg
out
jb
adc
pop
xchg
jne
push
in
fs
inc
xorl
jae
push
inc
int3
fistpll
jno
loope
inc
mov
daa
jg
sbb
iret
cwtl
fs
imul
add
int3
clc
in
dec
push
dec
arpl
pop
or
ss
mov
shlb
pop
xbegin
jae
cld
movsb
sbb
std
xchg
lea
out
int3
dec
inc
or
scas
fisubrl
pop
imul
or
call
js
pop
test
jns
jno
fsubrl
int3
cltd
inc
in
in
push
xchg
pop
in
iret
in
push
mov
dec
adcl
pop
pusha
sbb
mov
push
ret
inc
sti
mov
jmp
xchg
test
xor
sub
loopne
pop
push
push
ss
lock
push
xchg
jo
inc
cmp
add
sbb
lods
and
jbe
cmpsb
cmp
jge
rcrb
sub
shl
fldl
in
sbb
sti
xchg
ja
inc
xchg
mulb
lahf
aad
in
or
rorb
leave
mov
repz
sub
push
xor
mov
pop
jbe
and
add
adc
repnz
hlt
cmp
js
mov
out
mov
push
lds
push
push
addr16
aam
jmp
lea
mov
mov
cmpb
pop
shlb
vphaddbq
sbb
and
js
loope
dec
lods
xchg
jmp
mov
fildl
xchg
roll
jl
inc
jnp
rolb
out
push
mov
stos
lahf
add
insl
add
jp
add
test
test
mov
fsubp
inc
scas
jne
jno
pushl
outsb
popa
pop
pop
inc
shl
sub
jg
ja
adc
mov
dec
movsb
repnz
push
and
xchg
dec
es
sub
jo
aad
push
push
es
repz
pop
mov
shlb
sbb
cmp
jbe
dec
or
cmp
popf
cwtl
rclb
sbb
hlt
jp
sbb
adc
jno
imul
cmpsb
cld
inc
jbe
dec
stos
push
mov
xor
dec
fidivrl
outsb
cwtl
punpckhdq
mov
mov
scas
rclb
mov
mov
xor
jle
test
and
sub
xchg
addr16
add
cmpb
pop
rorb
pusha
or
fisubs
rcll
mov
pmulhw
push
xor
sbbl
shrb
xchg
and
jb
sub
xchg
ljmp
loopne
adc
xchg
fbstp
xor
filds
and
jae
cmp
or
xlat
pop
mov
push
lcall
jmp
inc
dec
or
mov
or
cmp
les
jl
pusha
aam
mov
fsubl
xor
les
mov
xchg
xchg
test
scas
adc
sub
scas
xor
ret
sar
leave
xchg
icebp
lret
sti
mov
mov
lods
add
adc
mov
xor
mov
xor
jle
pop
pusha
xchg
dec
fs
adc
les
mov
xchg
repz
mov
rcl
pop
push
sbb
cmp
sub
test
xchg
xchg
cli
mov
mov
xchg
lahf
push
sub
xor
xchg
mov
popf
clc
inc
test
popa
js
sub
inc
push
mov
xchg
mov
adcl
fs
push
shl
stos
pop
or
lock
cmpsl
pushf
fstl
cmpsb
xlat
out
lret
jo
cmc
out
sbb
adcl
inc
xor
cmp
enter
shl
lahf
enter
iret
add
jns
lea
or
mov
fsubl
adc
int3
and
outsl
pop
xchg
xlat
insb
jb
push
out
dec
in
xor
push
faddl
pop
out
mov
iret
add
iret
nop
jmp
lret
mov
lods
mov
test
cli
sbb
sbb
and
dec
sahf
mov
jno
pop
fstpt
pop
cmp
out
es
inc
adc
push
mov
xor
cwtl
dec
pop
loopne
fdivrs
mov
in
scas
call
arpl
scas
and
movsb
jb
adc
mov
push
pushf
leave
mov
push
add
stc
stc
push
dec
xchg
dec
popf
stc
test
test
aam
mov
repz
scas
fidivrl
inc
mov
add
jge
sbb
mov
iret
jo
je
out
jmp
into
jle
aaa
and
scas
mov
aad
sbb
and
mov
cli
sbb
fcom
sub
mov
and
sub
mov
mov
jae
int3
je
lret
aad
or
ljmp
orl
inc
clc
imul
scas
push
pop
rorb
test
mov
cmp
add
mov
aad
mov
or
sub
dec
lods
lods
mov
aad
pop
rcll
fcmovnb
inc
mov
xchg
sahf
xor
xchg
push
popa
inc
stos
xchg
mov
cmp
fdivrl
jp
aam
jl
fwait
scas
xchg
sbb
dec
jecxz
dec
in
bnd
cld
fbstp
ss
mov
push
pop
jae
repz
stc
push
lods
icebp
shll
movsb
mov
cmc
xchg
es
push
jmp
jecxz
shrl
ret
rorl
lock
daa
xchg
rcrb
sub
push
fistl
into
or
loopne
es
jno
pop
nop
pushf
mov
add
cmp
dec
dec
notb
sbb
xor
jo
idivb
jge
popf
mov
fdivrl
outsb
pop
repz
in
mov
imull
cmc
xor
jno
sahf
stos
and
jecxz
push
and
sahf
insl
jecxz
addr16
adc
popf
loopne
pop
outsb
push
mov
xchg
sbb
cmp
aas
push
out
sbb
call
std
test
xchg
sahf
imull
ret
shll
sahf
cwtl
sub
add
xchg
xchg
mov
pop
cmp
and
int3
lods
add
shlb
loopne
inc
test
lret
cmp
jg
fnstcw
in
mov
push
sbb
mov
mov
add
fwait
adc
sub
insl
add
xchg
jae
xchg
push
jl
mov
out
dec
lret
shlb
int3
es
pop
mov
decb
jmp
xor
out
pop
mov
sub
dec
sub
push
aas
mov
out
jp
ss
mov
inc
subl
push
inc
stos
adc
push
push
xchg
or
jbe
jae
icebp
inc
je
jle
xor
dec
jmp
lret
sbb
inc
insb
mov
jmp
int3
and
jle
imul
repnz
scas
push
ds
ljmp
add
fadd
aaa
pop
push
cwtl
xchg
sbb
or
insl
pushf
add
in
mov
arpl
or
pop
jecxz
pop
xchg
jl
ret
add
sahf
push
lret
and
pusha
fisubs
sbb
test
call
xor
mov
push
fmul
dec
loope
dec
nop
sbb
push
sub
or
popf
lret
fucom
mov
add
pop
jmp
ja
xor
cld
lret
iret
cmpsl
imul
int3
xchg
int3
movnti
pop
rorl
mov
fcompl
cmp
bound
bound
leave
mov
cs
sub
jo
cwtl
ss
int3
popf
stos
fidivrs
sub
pop
sbb
mov
jl
pop
push
sahf
mov
jns
test
pop
popa
sub
fidivl
repnz
inc
xchg
lcall
jmp
or
inc
mov
cmp
insl
loope
jmp
mov
xor
adcb
cwtl
inc
aam
or
dec
lahf
dec
idiv
and
aam
ficompl
mov
and
nop
push
mov
push
mov
xchg
mov
inc
dec
inc
repnz
pop
inc
cmp
in
hlt
jns
sbbb
jle
sti
scas
jae
cmpl
cmp
adc
add
dec
add
imul
push
rolb
inc
inc
push
jae
rorl
movsl
xchg
sub
pop
out
addr16
outsl
push
jmp
xchg
mov
loopne
into
test
mov
icebp
dec
int3
les
sbb
movsl
sbb
or
dec
stos
xor
xchg
mov
cltd
jne
inc
xchg
pop
and
inc
or
into
adc
add
and
int
mov
stos
cs
fdivrs
inc
fmull
rcrb
mov
mov
xor
xor
int3
sbb
fs
push
outsb
adc
mov
sub
or
push
out
outsb
mov
iret
fsubs
dec
add
and
ficomps
mov
add
xor
mov
dec
or
insb
loope
pop
xchg
push
mov
jmp
jp
lcall
dec
rcrb
adc
inc
adc
inc
or
push
dec
int
push
shlb
fsub
lods
add
repz
ds
mov
inc
pop
inc
sbb
gs
and
cs
inc
adc
rcl
lods
xchg
sub
mov
inc
lds
add
stc
hlt
hlt
inc
inc
add
pop
mulps
test
std
pop
filds
mov
sbb
push
test
sub
mov
cli
repz
xchg
jl
sahf
cmp
cltd
out
in
jae
fistl
xor
push
mov
pop
add
sbb
xlat
xchg
pusha
push
adc
xchg
imul
xor
leave
lret
sub
mov
dec
mov
or
lods
and
movsl
pop
mov
xor
mov
and
pop
ret
aam
mov
add
push
jno
mov
das
fs
out
inc
cltd
cmp
stos
divb
xor
and
iret
ja
adc
pop
add
push
mov
into
idivl
jmp
jg
push
sbb
or
xchg
lcall
stos
gs
add
jbe
std
jno
sti
cmp
stos
jmp
rorl
scas
js
or
and
scas
lock
aaa
popf
lock
jne
lret
aaa
mov
xchg
test
push
nop
sti
add
push
je
loopne
testw
xchg
lret
dec
mov
pop
mov
lds
dec
test
add
fbld
lea
push
xchg
mov
mov
lea
and
shrb
repz
aas
das
inc
enter
inc
insl
mov
sub
push
xchg
sti
js
and
sahf
sahf
aaa
loope
addr16
jle
popa
fs
out
pop
insb
adc
push
and
adc
cmp
mov
movsl
ljmp
add
xchg
out
popf
xchg
popf
add
call
test
loopne
jnp
jo
inc
into
xor
adc
push
mov
inc
mov
gs
push
mov
call
sarb
ret
addb
fsubrp
clc
ds
cwtl
lahf
jns
in
scas
jle
jnp
out
int
sahf
jle
scas
adc
add
jns
mov
and
insb
lcall
xor
inc
das
pop
jb
test
push
jg
push
jne
lock
jp
inc
es
lret
cwtl
je
movsl
inc
xor
mov
ljmp
add
loop
mov
out
inc
rcr
or
push
sbb
mov
clc
dec
sub
lahf
push
dec
imulb
sub
or
xor
mov
xorps
pop
or
cld
test
gs
pop
mov
and
xchg
clc
js
aam
adc
rcll
int
and
mov
in
fstl
scas
pop
inc
out
mov
pop
sti
scas
ret
or
hlt
xorl
lods
arpl
or
adc
xchg
sbb
xor
cmp
dec
leave
testl
adc
sbb
fs
cs
cmc
lret
daa
jmp
lds
push
cmc
dec
scas
loope
jl
icebp
outsl
in
fsub
mov
cwtl
sbb
sahf
loopne
out
pop
lods
adc
mov
cmp
outsl
xor
andl
pop
scas
or
icebp
xchg
xchg
push
fnsave
cmp
push
out
into
mov
dec
jns
jb
call
pushf
jnp
push
jns
sub
or
mov
mov
pusha
push
ljmp
repnz
sahf
cltd
aas
lahf
jp
int
xor
orl
pop
in
mov
mov
shll
loop
adc
sarb
dec
dec
inc
adc
sub
xor
mov
mov
fdiv
ss
sbb
insb
test
jmp
mov
pop
in
pop
ret
pop
mov
add
je
test
xchg
jae
dec
insb
fstpl
cmp
fnstcw
lret
cmp
lock
pusha
rcrl
je
lds
in
or
jle
adc
movsb
jae
xchg
fldcw
popa
mov
cltd
mov
sub
js
mov
into
push
pop
fs
jmp
cmp
jb
jle
sbb
cmpsl
xor
and
mov
mov
popf
cmpsb
loop
fsubl
cld
mov
mov
cmpsw
mov
adc
aaa
jmp
jo
movsl
mov
xor
sti
add
jne
mov
mov
lds
addr16
das
js
mov
jmp
cmp
add
inc
out
sub
adc
add
dec
sbbl
lcall
outsb
adc
or
jno
pushf
or
cmp
scas
bound
shlb
mov
mov
arpl
imulb
mov
imul
mov
push
aam
xchg
xchg
fisttps
insl
stc
jnp
rol
int3
mov
aam
mov
nop
mov
mov
daa
repnz
cmpsb
push
jo
aas
mov
and
out
shrl
mov
mov
jnp
movsb
fisubrl
cmp
lds
xor
mov
jecxz
cwtl
pop
arpl
mov
in
fldt
dec
jg
and
fidivrs
popa
mov
orb
movsb
mov
ss
subl
xor
xor
nop
ljmp
and
inc
pop
mov
jp
add
pop
inc
das
lahf
lcall
ds
sarl
dec
scas
rcl
es
ds
out
call
cmpsl
add
icebp
or
lods
or
sarb
insl
sbb
jmp
out
fisubrl
push
fsubl
ss
cltd
in
and
iret
xchg
ficoms
jbe
and
test
fmuls
cmp
aam
push
mov
dec
cwtl
vmovlps
iret
adc
and
sti
push
icebp
test
cmp
popf
mov
sbb
js
out
pop
inc
mov
fs
repz
andb
or
call
cmc
addr16
add
adc
dec
scas
pop
mov
pop
lock
cmc
enter
gs
cmp
add
or
xchg
and
dec
cmpl
inc
cmp
popf
add
dec
cld
movsb
inc
cmpb
push
adcl
push
jno
push
inc
inc
mov
sub
cmpsl
mov
pop
icebp
f2xm1
xchg
cwtl
in
pop
test
pop
gs
test
add
jns
iret
cmc
movzbl
add
mov
xlat
das
test
and
test
ljmp
fildll
push
mov
jno
xchg
jb
hlt
idiv
sub
cmp
test
mull
ds
out
mov
cmpsb
add
mov
shr
push
fimuls
push
xor
cmc
xchg
rcrl
or
rorl
xchg
sub
ja
or
fisttpll
call
fisubs
scas
out
inc
jecxz
push
testl
call
dec
rorb
insb
sub
test
sbbb
jl
pop
fimull
mov
add
insb
rcl
add
idiv
mov
out
add
xchg
adc
cmp
in
mov
sub
push
mov
mov
xchg
fwait
xchg
repz
test
mov
sub
and
push
pop
and
fisubl
mov
fwait
mov
mov
pushf
adc
test
push
repnz
or
add
leave
dec
ljmp
mov
inc
sub
bound
sbb
add
sub
mov
pop
icebp
push
js
dec
dec
rorl
cmp
mov
dec
daa
in
mov
aaa
mov
in
pop
lcall
mov
inc
mov
cmp
mov
or
adc
ja
fcom
in
inc
pop
pop
adc
sbb
xrelease
cmpl
lret
inc
jo
aad
adc
or
or
arpl
jl
shl
adc
mov
cmp
ret
or
ljmp
shll
xchg
xchg
sbb
fdivp
aas
inc
jge
aam
xchg
sbb
sub
lahf
add
cli
adc
and
mov
push
adc
pop
stos
in
stos
push
dec
imul
cltd
pop
ds
shrb
enter
cltd
jge
push
inc
adc
push
orl
adc
push
out
sub
loope
xchg
fwait
add
cli
dec
pop
out
loop
test
lock
cmp
dec
xor
out
mov
sbb
test
mov
pop
outsb
outsl
mov
xlat
add
mov
push
add
movsb
mov
inc
mov
mov
lret
sahf
lock
subl
pop
pop
addb
pop
hlt
mov
lock
or
js
xor
xlat
sbb
aas
into
sbbl
scas
pop
jg
rol
mov
rol
aas
jbe
and
sahf
popf
push
xor
and
mov
inc
push
xchg
push
outsl
fdiv
js
xchg
rcrl
mov
inc
in
loopne
adc
push
inc
in
movsl
push
rcrb
rclb
sbb
mov
and
sar
inc
fwait
mov
mov
test
arpl
cmp
sub
add
pop
adc
adc
mov
xor
mov
ret
decb
stos
out
iret
inc
lds
repnz
mov
data16
dec
lcall
out
jnp
mov
flds
shll
xchg
fwait
dec
jmp
push
push
loopne
pop
add
lahf
dec
xor
adc
stos
push
push
or
movsb
je
sahf
ljmp
dec
sbb
xor
popa
in
fcomip
pop
inc
xlat
sbb
inc
push
jg
subb
in
test
cmp
xor
imul
stc
sub
jno
fstpt
or
lahf
xchg
int
insb
mov
mov
test
std
testb
dec
inc
cmpsl
jg
sti
lahf
or
dec
daa
adc
ljmp
imul
mov
mov
xchg
outsb
pushf
adc
loopne
jae
jnp
and
sti
inc
mov
into
adc
jge
cwtl
nop
movb
add
test
popa
push
aam
stc
pusha
cli
cmp
push
aas
into
mov
xor
das
ja
or
mov
in
and
test
lods
xlat
sbb
pusha
mov
xor
popf
in
mov
cmp
pop
sbb
mov
jecxz
add
pop
dec
clc
add
insl
fildll
ror
faddl
adc
adc
push
cltd
fistps
arpl
cmp
push
stos
stos
lcall
inc
out
lret
mov
mov
pop
or
imul
insl
adc
mov
jecxz
jno
cmovg
xchg
pushf
xchg
cmpsb
les
jae
repz
ret
out
adc
pop
mov
daa
lea
es
fdivl
outsl
in
scas
ficomps
sahf
xor
inc
or
cmpsb
scas
sti
jae
leave
jp
bound
sbb
push
pop
sahf
fcomps
cmp
or
pop
inc
or
mov
cmp
inc
cmp
inc
adc
stc
mull
repnz
ret
inc
dec
mov
inc
or
mov
pop
into
adc
shr
xor
lahf
iret
inc
in
ret
pop
mov
int
xchg
push
mov
out
out
ret
push
adc
xor
lods
scas
jg
stos
ja
sub
and
out
mov
mov
mov
dec
lret
pop
scas
jl
hlt
in
fmuls
push
pusha
stc
les
out
addr16
popa
sbb
repnz
cmp
cli
mov
les
call
xchg
inc
mov
adc
jnp
es
mov
leave
fbld
mov
mov
mov
jmp
std
bound
push
mov
add
pop
pop
lock
lock
shll
flds
sub
clc
std
push
add
jno
fwait
jb
jbe
adc
inc
js
xchg
stos
mov
push
pop
jecxz
jae
pop
test
gs
rcrl
jmp
mov
xor
cltd
ret
sbb
ljmp
xor
lods
dec
jo
dec
test
fcomps
cmp
aaa
bound
or
push
insb
ret
pop
or
mov
add
loope
push
out
and
loop
mov
jns
xchg
gs
cmp
testl
scas
cmp
fists
jmp
pushl
fnstenv
shlb
es
xor
pusha
jge
and
sub
sbbl
mov
mov
addw
sti
lret
adc
and
and
shl
jecxz
cmp
out
sbb
retw
cmp
mov
lret
add
push
cmp
or
shll
iret
cmp
push
sahf
scas
lcall
cmp
shl
sbb
insl
in
jl
ja
xchg
xchg
dec
aam
pop
std
pop
fidivs
das
lock
out
fndisi(8087
hlt
ror
fimull
scas
cmc
fimuls
dec
pop
je
icebp
scas
loopne
push
mulb
mov
inc
or
jmp
fmull
inc
and
fimuls
and
pop
mov
pop
and
sub
pop
popf
mov
add
adc
pop
sub
jp
xchg
or
sub
cmp
fs
mov
and
pop
mov
pop
push
leave
stc
inc
xchg
aas
bound
cltd
jo
push
xchg
dec
jnp
mov
adc
lret
scas
xor
shrb
inc
dec
push
lods
les
roll
jecxz
jno
cmp
stc
cmp
pop
aam
lret
aaa
xchg
mov
pop
mov
mov
loopne
jle
or
adc
jge
inc
sarb
pop
aad
and
mov
jnp
jl
jb
aad
outsl
pusha
test
aas
pop
in
xor
pop
fildll
lods
shrl
ror
dec
or
mov
je
push
inc
mov
pop
pop
xchg
out
int3
push
mov
xor
cmp
gs
mov
xlat
mov
adc
mov
mov
pop
subl
es
into
andb
push
dec
stos
push
movsb
jmp
cmp
mov
and
mov
pop
sub
sti
pop
insb
das
cmp
imul
or
pop
push
incl
sbb
fdivl
and
or
push
or
mov
push
pop
inc
adc
sub
inc
and
mov
aaa
xchg
lret
jge
loop
mov
popf
sbbb
jno
jmp
scas
out
push
roll
or
fistpl
sbb
pop
stos
dec
cmp
pop
sbb
std
ds
cmpsl
out
cwtl
faddl
sbb
and
pop
ljmp
scas
outsb
arpl
sbb
or
shlb
cltd
mov
mov
adc
dec
mov
movsl
xchg
push
stos
movsl
icebp
std
mov
mov
cmp
jg
test
or
pop
mov
push
out
jne
ret
loop
add
xlat
xor
pop
push
push
jmp
xchg
push
adc
lods
jb
js
je
dec
inc
orps
roll
push
jae
jg
push
push
std
dec
jae
pop
stc
repz
mov
xchg
cli
ss
lods
mov
gs
movsl
cld
xor
in
mov
fwait
rolb
push
out
xlat
jae
sahf
insb
std
rcll
cmp
dec
xchg
int3
movsb
sub
pop
dec
inc
lret
pop
std
jmp
pop
or
out
lock
fwait
jno
repnz
stc
xchg
mov
out
add
push
sti
mov
fs
mov
iret
push
jne
pop
and
dec
test
xchg
pop
jl
sbb
hlt
inc
ret
sub
dec
flds
cmpsb
movsb
popa
xor
in
cmc
xchg
popf
imul
mov
clc
xor
mov
sbb
out
xor
sbb
push
mov
arpl
push
rcrb
xor
or
jne
sahf
jecxz
sub
mov
sbb
aaa
adc
mov
std
xor
jae
pusha
pop
cmp
cmpsl
iret
imul
out
fsub
adc
mov
sahf
jb
push
push
xor
jmp
or
fldl
mov
lcall
test
addr16
mov
bound
call
dec
cmp
cmc
push
aam
fnstcw
out
loope
inc
push
pop
dec
pusha
jmp
mov
push
leave
out
fsubrs
and
cmpsl
cmp
les
push
std
sub
xor
or
push
push
enter
mov
cmp
push
mov
rcll
push
sbb
pop
arpl
outsb
jecxz
hlt
lret
ljmp
lret
decl
or
push
or
jae
ret
arpl
mov
jecxz
xchg
sub
pop
roll
sub
inc
mov
xchg
mov
mov
push
dec
xchg
pop
add
leave
inc
lods
mov
and
xlat
iret
xchg
push
add
pushf
cwtl
cmp
adc
aas
pop
xchg
shlb
pop
xchg
inc
mov
out
loopne
cmpxchg
pop
rcl
add
lcall
aad
mov
mov
or
xor
movsb
push
ss
clc
adc
lret
subb
mov
pop
and
vorps
inc
mov
pop
addr16
popa
and
out
mov
sbb
mov
loopne
mov
lret
hlt
insb
cmpsl
cmp
aam
fcmovnbe
repz
in
xchg
insb
add
loope
adc
sub
pop
mov
shrl
inc
pop
mov
into
cltd
mov
mov
sarb
and
lcall
pop
xchg
out
adc
or
mov
cmp
cmpsl
jno
mov
pop
or
sub
xchg
pop
loope
out
rolb
or
cmp
incb
je
mov
lret
std
jo
aad
lret
lret
push
mov
int
loope
ja
mov
dec
jg
outsl
shlb
in
es
outsl
test
and
xchg
cmp
repnz
cmp
push
pusha
add
divb
push
fcmovne
cltd
negb
and
lds
and
mov
mov
idivb
inc
bound
mov
jb
mov
and
add
out
xchg
insb
adc
dec
cmp
xor
adc
js
ret
outsb
dec
mov
dec
push
cli
push
push
jno
je
push
adc
cmpsb
pop
and
pop
das
imul
fsubr
cmp
incl
mov
mov
js
adc
cmc
xchg
fsubrl
js
mov
and
jo
cld
push
inc
jae
outsb
pop
jnp
and
xchg
and
idivb
insb
aad
xor
pop
enter
mov
mov
pop
rcr
pop
push
sbb
loopne
daa
jl
adc
test
mov
jg
add
mov
xor
jp
movsb
movsb
mov
movsb
sub
jno
js
fdivl
xchg
mov
inc
xchg
adc
arpl
shr
icebp
stos
cs
cmp
jge
pop
inc
aas
xchg
adc
or
shlb
or
add
loop
adc
xor
sub
or
movsb
xchg
mov
sub
mov
xor
sbb
mov
inc
lea
mov
sti
es
pop
or
loopne
stc
mov
push
pop
mov
dec
cmp
sub
inc
inc
aas
lods
cmpsl
ficoms
cmp
pop
lea
push
xchg
mov
mov
flds
xorl
xchg
shrl
push
jle
xchg
popa
insl
or
add
xor
pop
cmpsl
xlat
rcll
mov
mov
js
scas
mov
pop
add
ds
das
stos
aas
std
sbb
mov
je
cmp
mov
lcall
cwtl
inc
sbb
pop
in
lret
cmc
xor
dec
sbb
push
mov
out
into
or
enter
lods
out
sahf
shr
pop
push
negb
lds
cwtl
cmp
stos
aas
inc
xchg
mov
clc
test
sbb
mov
mov
push
ret
push
mov
fwait
cmp
rorb
fidivs
inc
in
sub
or
aas
lcall
das
dec
test
outsl
mov
or
into
test
pop
cmp
stos
aam
in
aam
cmp
loope
add
shlb
inc
jge
stos
lods
adc
fdivrs
arpl
sbb
fldenv
jge
mov
and
push
sbb
jle
pop
dec
jno
or
add
outsb
int
insl
or
jle
fists
imul
rcll
mov
loopne
inc
ja
in
repz
xor
push
call
cmp
ja
lock
out
push
movsl
jmp
cmp
in
and
ds
in
mov
arpl
mov
scas
pop
cs
or
sbb
push
mulb
call
and
test
lcall
pop
lahf
push
mov
cmp
in
fcompl
in
pop
push
lahf
adc
scas
test
mov
push
add
imul
pop
xchg
xor
divb
lcall
enter
divb
addl
inc
push
cmpsb
lcall
adc
cmp
mov
lods
adc
sti
lcall
fimuls
int
mov
popa
lods
cmp
shrl
xchg
jno
xor
in
test
push
scas
cmpsl
stc
gs
pop
adc
inc
pop
mov
mov
std
push
push
std
stos
daa
push
cmp
testb
inc
dec
mov
mov
jbe,pn
add
dec
jae
push
je
cltd
xchg
jno
popa
jle
mov
and
cmp
movsb
pop
dec
mov
and
push
je
or
mov
cmp
xor
sub
pop
movsb
movsl
sbb
or
push
dec
lds
in
in
inc
push
sbb
cwtl
xor
jp
int
pushf
xchg
mov
jmp
mov
call
add
test
rcrb
adc
insl
jle
ss
cmp
clc
mov
mov
movl
inc
add
out
adc
enter
lahf
mov
inc
mov
adc
int
loope
out
jl
nop
xor
add
cmp
fwait
push
cmp
xlat
es
insl
xor
lret
add
loope
repz
mov
rorb
push
lds
fdiv
ljmp
daa
jae
dec
jo
movsl
xchg
sbb
mov
sti
push
rorl
fstl
fwait
and
repz
mov
pop
jmp
fistpl
xlat
or
pop
xor
and
dec
lea
leave
mov
ds
cmc
dec
pushl
mov
das
mov
xchg
loop
popa
mov
push
lea
ret
jbe
jno
xor
inc
pop
xor
das
aaa
sbb
stos
push
rcll
and
cmp
sbb
js
popf
pop
fs
roll
mov
or
dec
pusha
daa
out
insb
jnp
out
insb
or
addr16
lret
int3
sbb
repz
sbb
fmulp
mov
ret
or
sti
outsb
xchg
xchg
clc
sarl
push
add
xchg
out
pusha
stc
shrb
adc
and
pop
and
cmp
flds
aam
jle
lret
lods
push
repnz
cmc
push
ljmp
ds
fdivs
test
push
mov
sbb
lret
loopne
jg
out
jnp
and
loopne
iret
in
dec
arpl
imul
in
and
aad
pop
loopne
sbb
and
push
xchg
jno
mov
or
sub
in
pop
pushf
sbb
inc
jae
roll
lcall
mov
loope
dec
ds
jmp
cmp
cltd
orb
aad
xchg
fwait
push
nop
pushf
lea
inc
jno
xor
aas
mov
fs
and
mov
push
cmc
rorl
aad
sbb
stc
mov
rcr
jmp
sub
cmp
fwait
insb
xchg
mov
push
ret
clc
mov
xor
repz
int3
movsl
jp
adc
gs
pop
inc
add
sahf
fwait
mov
add
dec
mov
loopne
xchg
jp
sbb
xchg
imul
je
mov
push
xchg
pop
sub
push
cs
and
insl
aam
mov
cld
or
mov
adc
fs
addr16
aaa
movsl
adc
mov
inc
mov
mov
dec
ljmp
lret
shlb
sbb
fdivs
sbbl
and
outsl
leave
aaa
lock
fld
jae
inc
jge
xor
jmp
shlb
cmp
pop
sbb
push
inc
sahf
bound
xchg
test
mov
push
iret
shll
aam
or
mov
out
stc
add
cli
in
movsb
mov
adc
push
sbb
sahf
mov
out
lret
bound
push
cwtl
jp
sbb
xor
lods
movsl
inc
mov
pop
inc
fsubs
lahf
pop
stos
pop
fwait
add
cld
lock
push
cmpsb
sub
push
cmp
jp
add
mov
cmp
mov
dec
movsb
sbb
lret
fldt
and
pushf
lcall
ret
cmp
or
stc
call
sub
lds
fcoml
jne
test
push
mov
push
adc
fadds
adc
js
insl
mov
jp
js
push
inc
ds
lea
fisttpll
jmp
imul
push
mov
mov
dec
leave
rclb
fidivrs
or
sub
js
daa
daa
gs
leave
add
sub
or
dec
aad
rorb
lahf
sbb
mov
lahf
fwait
jns
mov
pop
aam
in
aam
das
jmp
dec
ret
jb
jo
and
or
push
xor
insb
iret
mov
repz
dec
mov
sub
pop
dec
jno
push
popa
sub
jno
in
je
sbb
out
mov
ljmp
jno
mov
adc
rolb
cmpsb
outsb
and
stc
daa
dec
jns
mov
cmp
and
cmp
fwait
pusha
mov
imul
cmc
push
insb
mov
iret
xor
push
cwtl
xchg
push
arpl
or
lock
fs
xchg
adc
leave
inc
lods
fistps
stos
pop
push
pop
pushf
cs
jnp
mov
adc
cwtl
mov
mov
lcall
adc
jmp
inc
ror
movsl
popa
adc
lret
mov
mov
imul
mov
fcompl
nop
adc
cmp
cmp
cmp
mov
jle
call
popf
push
mov
xor
fists
std
dec
jns
or
shrb
xchg
fildll
push
in
jmp
imul
or
xchg
jle
mov
shll
mov
fisubl
add
pop
sbb
fisubs
lods
ret
jg
popa
mov
adc
xor
dec
adc
adc
cmp
in
mov
es
imul
inc
mov
scas
dec
push
test
push
hlt
or
xchg
xor
les
cmp
cmp
movsl
stos
xchg
js
clc
ljmp
dec
ja
push
addr16
in
and
les
jbe
punpckldq
push
dec
push
movsb
cmp
push
dec
pop
into
jp
lcall
sub
dec
jecxz
cmp
iret
lea
or
lods
test
loope
sub
movsl
xor
loopne
sti
xor
jl
adc
shrl
push
enter
and
shll
push
lea
ss
repnz
sub
pop
pop
mov
mov
bound
push
inc
cmp
add
rcl
adc
dec
mov
or
lret
jbe
xchg
hlt
mov
xor
les
dec
adc
lock
test
into
ja
fstp
xor
add
mov
sbb
or
je
test
xchg
mov
js
jae
gs
fwait
repz
stc
mov
and
jg
or
test
stc
mov
hlt
push
cmp
jl
test
jbe
and
fwait
adc
push
fidivrs
mov
sbb
jb
sbbl
xchg
mov
cli
out
ds
jp
xchg
dec
std
push
cmp
daa
or
test
push
or
cmp
mov
or
push
loope
mull
popa
add
out
jno
add
lock
xor
jmp
fstl
mov
ret
aam
jbe
fptan
mov
jle
into
push
xor
xchg
jne
jmp
daa
fnstenv
jbe
in
mov
mov
fmuls
je
hlt
cmp
fucomp
repnz
xchg
sub
into
fidivs
or
enter
xchg
hlt
test
pop
ret
out
add
push
mov
push
or
mov
push
or
daa
test
lds
push
test
xor
and
rorl
mov
pop
stos
bound
mov
jo
icebp
mov
js
test
sbb
aad
xor
arpl
out
push
jmp
cs
sub
subb
pop
loop
add
inc
jg
xor
xchg
ljmp
xchg
adc
push
inc
inc
cmp
mov
call
stc
push
cmp
mov
or
andl
xorl
scas
inc
or
pop
out
fimuls
mov
push
test
sub
shrl
cmpsl
inc
incl
lret
add
ss
mov
arpl
mul
sub
and
jae
xchg
adc
cmpsl
testb
cmpl
dec
leave
mov
and
or
in
pop
pop
pop
scas
sub
jo
rcrb
in
push
out
lahf
lds
mul
xchg
jmp
and
je
push
inc
ljmp
incb
hlt
fcmovu
andl
mov
addb
repnz
sti
jmp
adc
int3
add
into
sub
inc
scas
rcr
ljmp
dec
fwait
js
mov
push
mul
and
out
cltd
ds
mov
movsl
repz
xchg
ret
jne
jg
sahf
xchg
adc
cmpsb
lea
aam
dec
lcall
jae
and
pop
int3
push
mov
cmp
repnz
or
cmpsl
lods
inc
stos
dec
and
pop
jne
push
xor
sub
jmp
dec
xchg
shlb
aad
test
lcall
movsl
shll
mov
aas
jecxz
gs
sahf
int
pop
mov
jb
mov
clc
pop
int
mov
xchg
add
dec
or
xchg
mov
inc
outsl
dec
les
mov
dec
or
xor
lahf
mov
dec
dec
int
mov
cmc
mov
inc
adc
outsl
cmp
push
cli
adc
xchg
pop
fcmovnbe
insb
pop
imul
and
stc
movsl
test
jno
lods
cli
inc
fwait
and
cmp
lret
add
popf
ret
push
push
test
and
pop
out
lcall
mov
fnsave
and
scas
imul
mov
inc
popl
popl
lahf
jb
adc
cmc
test
push
mov
push
inc
pop
push
xor
add
lret
mov
das
stos
mov
or
rol
sbb
mov
mov
scas
mul
xor
cli
aaa
loop
xchg
ds
nop
daa
sub
or
je
es
movsb
aaa
cltd
sbb
repnz
jecxz
int3
cmp
js
push
xor
and
jno
and
or
add
ljmp
adc
mov
mov
lcall
daa
push
jne
test
xor
dec
in
mov
clc
jnp
es
int
bound
mov
fdivrp
sbb
enter
add
fs
cmp
and
stos
adc
aad
sbb
xchg
xchg
dec
or
ss
lds
and
ret
movzwl
push
rcll
imul
xlat
out
call
sub
jmp
add
std
sbb
xchg
xchg
pop
ror
imul
mov
xor
mov
cmp
cwtl
mov
cs
sar
movl
jl
pop
shrl
cmc
out
aaa
jo
adc
mov
jl
mov
leave
mov
add
pop
ret
rcrb
adc
in
pusha
enter
and
call
sahf
out
mov
imul
cmp
sti
outsl
xor
mov
and
lods
sahf
fwait
sub
outsl
sub
mov
addr16
mov
out
xor
incb
cmp
pop
xchg
lcall
mov
jecxz
jb
sti
and
les
dec
js
jns
lret
jle
push
xor
sub
test
pop
push
outsl
shl
xchg
pop
dec
cmp
frndint
adc
mov
fcompl
add
or
cmc
out
pushf
mov
inc
sar
mov
xchg
dec
in
mov
jae
jo
cmp
adc
push
xlat
sbb
push
jno
out
mov
ss
xchg
daa
loope
jl
mov
xchg
mov
sti
mov
adc
sbb
add
mov
sbb
in
fwait
cmp
mov
dec
dec
iret
lret
or
fsubp
icebp
fs
xor
add
sti
inc
adc
or
fldcw
fcom
lods
dec
xchg
push
and
adc
test
mov
lods
add
jo
fwait
inc
push
cmp
mov
imul
sti
cli
ljmp
push
imul
sub
pop
push
mov
arpl
add
mov
sub
mov
cmp
cmp
adc
push
stos
test
mov
jmp
jg,pt
or
xorl
das
bound
imul
into
xor
mov
add
lahf
in
or
sbb
sub
cmp
test
pushf
pop
dec
mov
rcrl
jecxz
orb
inc
lods
push
rcrl
push
xchg
test
mov
xchg
pushf
pop
popf
ficoms
dec
cmp
mov
repz
sbb
sbb
sub
in
inc
or
mov
stos
sahf
xchg
lods
adc
inc
push
das
mov
std
iret
fldl
pop
repz
fildl
adc
aad
aas
inc
add
adc
shl
in
pop
enter
hlt
daa
pop
add
std
js
cld
adc
dec
sbb
mov
sbb
sub
xlat
dec
dec
push
adc
out
loope
rcrl
xchg
icebp
fildl
rcrb
movsl
lods
jecxz
sti
icebp
pusha
xor
xchg
dec
xchg
sbb
mov
test
add
inc
pop
and
cmp
push
mov
or
xor
cmpsl
inc
dec
addr16
dec
pop
fbld
in
cld
cmp
out
outsl
dec
ret
cmp
les
push
add
cwtl
xchg
fwait
add
arpl
negb
cli
xor
lcall
cmp
stos
sbb
lock
pop
mov
fisubrl
test
enter
mov
fs
xor
icebp
pop
lock
sbb
cmpb
ljmp
add
xchg
inc
ljmp
dec
iret
and
arpl
stos
stos
add
adc
pusha
cmp
aad
push
inc
movsl
add
mov
rcrb
sub
pop
mov
xchg
popf
mov
adc
dec
xlat
jg
jecxz
shl
das
cmp
in
xorb
decb
push
aad
sub
repnz
inc
int3
test
push
scas
movsb
xor
dec
addr16
loopne
loope
test
mov
pop
push
jmp
adc
inc
shl
mov
jp
jmp
pop
or
loope
push
lock
roll
dec
push
js
nop
pusha
or
dec
sbb
aad
pop
pushf
sti
cmp
lds
lods
cmp
bound
movsl
int3
xor
pusha
and
inc
and
push
sbbl
testl
push
icebp
in
mov
sti
mov
mov
mov
mov
test
sub
mov
popf
loope
ds
pushf
or
es
cs
inc
loop
push
push
je
ja
adc
mov
dec
sbb
and
adc
jg
or
aam
cmp
push
or
add
xchg
rorl
out
mov
das
pop
xlat
mov
pop
inc
in
movsb
pop
mov
movsb
mov
sbb
aas
ret
jb
popl
fwait
jae
and
loop
movsl
inc
adc
mov
pusha
mov
add
mov
frstor
sub
imul
add
lods
mov
hlt
adc
xor
lret
jmp
pusha
sub
pop
xchg
cmp
aad
bound
pop
sbb
mov
mov
lods
sub
in
das
and
pop
repnz
cmpsb
push
sub
xor
push
jne
sub
or
shl
pop
into
add
push
arpl
pop
data16
mov
jo
and
ret
notb
inc
ret
cmp
xchg
into
add
int
imul
adc
or
and
sbb
cmpsb
repz
stos
mov
mov
aas
shrd
cmp
sbbl
pop
mov
or
jae
sti
pop
cmpsl
mov
fmull
scas
rorb
and
pop
push
cmp
add
cld
pop
mov
in
push
loopne
inc
mov
sbb
jo
cmp
fcomps
and
testb
cli
cmp
mov
xor
in
mov
or
dec
mov
cmp
mov
pop
xchg
xchg
push
fwait
xor
or
or
push
cmp
pushf
mov
imul
jbe
mov
mov
dec
hlt
jnp
jae
pop
stos
jns
pop
and
xchg
icebp
imul
dec
mov
sub
pop
clc
push
adc
js
shll
mov
insb
shll
jl
aas
out
mov
pop
xchg
pop
push
xor
mov
sub
and
rolb
adc
shll
ja
or
aam
inc
sbb
mov
inc
daa
cmp
pop
and
mov
int
in
testb
leave
dec
je
adc
and
nop
movsb
or
pop
adc
aad
pop
mov
ljmp
inc
and
mov
test
push
push
rcr
cltd
or
xor
dec
mov
push
imul
add
in
repnz
mov
xorl
or
mov
jnp
hlt
xchg
cmp
pop
les
popa
jmp
test
push
mov
push
ds
mov
lock
negb
mov
faddl
inc
sub
jp
shlb
int3
pop
repz
sti
nop
xchg
in
add
sub
dec
movsb
shr
int
movsl
jmp
sbb
mov
mov
sub
xlat
addr16
adc
js
ds
or
ret
loopne
in
add
adc
adc
mov
xor
or
lea
loop
push
adc
push
jmp
inc
out
dec
cmp
inc
or
and
dec
xor
adc
mov
js
dec
cld
gs
inc
sbb
xor
sbb
xor
sbb
loop
insl
jmp
mov
dec
jb
fidivrl
adc
inc
add
dec
test
aaa
into
dec
clc
repnz
push
mov
pop
pushl
idivl
vmovdqu16
dec
push
mov
js
xor
cmp
or
or
jnp
add
ret
push
push
jle
pop
stc
stos
lea
jns
jg
sub
push
imul
mov
in
daa
jo
mov
clc
push
mov
jecxz
fiadds
dec
out
test
pusha
push
inc
fs
dec
jecxz
mov
inc
enter
jecxz
pop
mov
xchg
cltd
or
repz
sbb
bound
xchg
push
aam
xor
test
pop
xchg
pop
mov
xchg
movsb
and
cmp
pop
mov
in
fnstcw
dec
int
out
inc
pushf
push
adc
int3
inc
cmp
push
std
or
les
pop
cmp
jp
mov
arpl
shl
push
add
mov
dec
push
and
mov
jg
mov
push
movsl
fcomp
dec
and
jnp
inc
xor
pop
out
jne
sub
inc
push
pushf
subl
aaa
inc
xor
adc
mov
dec
adc
insl
lds
or
out
xor
mov
das
jge
sar
mov
into
xchg
orb
gs
xor
aam
inc
cwtd
xor
daa
xchg
outsl
or
adc
fcmovbe
cmc
dec
mov
fsts
jmp
scas
push
jae
adc
adc
shrb
movsb
lock
jmp
in
mulb
lock
dec
movsl
mov
pop
dec
ljmp
pop
fstl
std
or
sbb
adc
mov
inc
fisttps
mov
icebp
mov
mov
lret
in
add
sbb
mov
das
inc
push
iret
loopne
add
mov
imul
cmp
jb
aas
fsts
mov
adc
mov
in
mov
movsb
ficoml
dec
pop
sub
outsb
mov
jne
sbb
pop
mov
outsl
dec
sub
dec
xchg
mov
popa
movsb
ja
shld
or
popa
mov
insl
cmp
sbb
int
or
dec
cmpl
out
pushf
test
jmp
add
sti
dec
inc
les
xchg
cmp
fisubs
mov
sub
pop
es
negb
std
cli
loope
divb
fiaddl
popf
add
iret
mov
fnstenv
outsw
insl
jae
mov
mov
xor
test
mov
mov
jbe
in
pmaxsw
stos
int3
imul
inc
sub
pop
add
pusha
repnz
rcrl
scas
nop
lahf
mov
mov
je
ljmp
in
mov
into
xor
mov
repz
adc
dec
mov
dec
sub
jb
out
lahf
dec
shlb
pop
push
mov
cmp
scas
test
cmp
inc
push
sbb
sbb
xor
push
xchg
dec
fs
push
das
rorl
sti
shrb
js
pop
jne
or
push
nop
cmp
insl
sbb
lret
mov
lea
xchg
jecxz
mov
test
scas
mov
fs
out
sbb
xchg
fs
in
inc
add
mov
push
push
xchg
fidivs
push
push
lds
data16
sahf
xchg
in
lods
jb
fisubl
push
pop
movsl
in
lea
lock
aaa
divl
jg
daa
jg
insb
mov
dec
sbb
rol
popf
adc
jnp
clc
mov
lret
adc
gs
dec
mov
sub
dec
jle
in
sub
daa
into
out
inc
pop
dec
cmp
mov
dec
cmp
sbb
and
lcall
mov
pop
aam
shll
out
push
jmp
dec
pop
stos
mov
mov
addl
inc
mov
pop
push
xor
cld
stos
out
adc
adc
rolb
aaa
pushf
cmp
add
hlt
les
sbbb
loope
jmp
adc
pop
cli
mov
xchg
jge
jl
ret
fsubl
pop
cmpsb
add
add
jecxz
jo
sub
cmp
js
sub
inc
pop
xor
sub
iret
out
sub
cmp
inc
incl
push
mov
out
dec
sub
xor
dec
mov
pop
fistpl
cmp
or
arpl
mov
or
test
out
pop
xor
cwtl
dec
dec
dec
xchg
jge
mov
mov
dec
hlt
xorb
jmp
ds
sub
cmpsb
adc
lret
add
sub
mov
movl
sub
sub
sbb
sub
mov
ficompl
daa
popf
dec
adc
ljmp
jmp
leave
inc
mov
arpl
enter
sub
neg
adc
cmp
cmpsb
in
push
sbb
pop
mov
add
cmp
scas
jecxz
push
rclb
sub
rorb
inc
mov
sbb
cmp
stos
fdivrs
or
dec
or
arpl
dec
fcom
lods
sub
mov
clc
cmc
inc
sub
fcomps
cmc
cmc
neg
popa
inc
jnp
enter
mov
sub
cmpsl
add
add
loopne
mov
push
cmpsl
inc
inc
xor
inc
mov
fucomip
xlat
std
lds
mov
call
sti
ret
movsl
sti
or
data16
ror
mov
in
push
adc
sub
adc
cmc
adc
or
fcmovnbe
cmp
in
cmp
sub
xor
or
mov
mov
jno
add
in
aad
pop
adc
xchg
adc
mov
sbb
adc
movsb
push
popf
mov
data16
xchg
loop
cmp
or
push
add
mov
adc
and
out
push
addr16
lock
cmp
sub
jbe
ljmp
adc
pop
loope
enter
inc
je
xchg
jg
sub
rcrl
sbb
addr16
outsl
pop
stos
jnp
stc
push
pop
iret
pop
mov
or
cmp
push
jb
das
sub
inc
adc
js
adc
or
jmp
int3
jmp
push
fldt
and
add
or
int3
sti
mov
fists
scas
test
in
repz
xchg
sub
std
mov
in
and
inc
jno
outsl
mov
sbb
fcom
sbb
sub
fs
inc
idivl
xor
push
ja
pop
mov
sar
mov
fwait
insb
sbb
dec
movsl
mov
mov
into
mov
xor
sub
mov
cs
addr16
fs
cs
dec
push
pop
pop
out
lret
push
jmp
push
or
dec
push
mov
xchg
dec
fdivrs
jmp
xlat
jb
or
shll
les
imul
jl
out
cmp
jbe
mov
mov
int
pop
push
sti
mov
pop
enter
lret
xlat
pop
scas
je
jne
icebp
dec
in
mov
test
mov
popf
push
or
lret
outsl
lods
and
aam
fs
mov
sahf
sahf
cmc
out
dec
arpl
sub
dec
imul
xchg
push
jge
mov
pop
cmp
sbb
into
rorl
xchg
push
jno
lods
adc
xor
jg
cmp
and
shrb
jne
popa
insb
test
hlt
dec
ja
or
ljmp
lea
sub
xchg
mov
stos
dec
lea
les
loopne
aad
out
xor
push
ja
jge
sub
arpl
pop
jae
rcrl
cmpsl
jp
xor
loop
inc
out
dec
jno
xor
pop
out
and
push
jg
cmpsb
sbb
xor
xchg
rcll
sbb
ljmp
popf
popf
cmp
jmp
roll
add
in
mov
fsts
and
xchg
popf
mov
imull
cli
push
movntq
jb
push
int3
cmp
ret
je
das
mov
rclb
pop
pop
lods
inc
icebp
sbb
lea
js
jl
xlat
out
aaa
push
pushf
mov
mov
js
jge
dec
cmp
ljmp
rcrl
inc
mov
dec
adc
aad
cmp
mov
je
imul
cmp
mov
imulb
movsl
jg
or
xor
popa
push
xchg
sti
and
inc
dec
dec
pop
addr16
xchg
repnz
xchg
sbb
inc
shrl
arpl
data16
std
lret
sbb
test
mov
js
lret
mov
xchg
in
push
aaa
add
sub
fcomip
push
fdivrs
mov
and
ja
pop
mov
lret
pop
jne
leave
cs
jmp
inc
mov
sbb
xor
bnd
xlat
or
mov
idivl
dec
mov
push
shrb
mov
ret
int3
mov
cmp
out
inc
aas
jmp
outsb
inc
cmp
inc
fdivrs
mov
cmp
adc
popa
jecxz
das
cli
test
leave
nop
or
lods
mov
mov
jge
xor
jl
inc
stc
xor
add
clc
cs
mov
add
inc
push
push
rorl
push
adc
xlat
movsl
popa
push
inc
popa
jnp
and
rclb
inc
test
inc
push
repz
adc
scas
dec
mov
insb
lret
jbe
notl
in
test
sub
pushf
es
add
and
or
push
adc
sbb
jbe
adc
push
loop
add
xlat
or
movsb
cmp
and
popa
insl
shlb
loop
pop
fidivrs
shlb
jle
sti
int
ss
arpl
push
lret
pop
out
fisttps
and
scas
aad
lret
ljmp
inc
shll
jno
cs
mov
aas
mov
divb
adc
fcompl
pop
jo
jae
jno
sarl
xchg
fcomps
dec
adcb
adc
pop
add
or
ljmp
inc
fstpl
popf
out
push
add
xchg
mov
inc
mov
mov
or
inc
xchg
stos
add
cmp
inc
divb
ret
movsl
xor
fnsave
lock
movsb
mov
mov
pop
mov
cmp
xchg
push
push
test
push
mov
fsubs
sbb
cmp
sub
and
sub
mov
fwait
clc
inc
out
jae
pop
shl
in
adc
aad
mov
xchg
or
lds
inc
pop
jmp
push
jl
movsl
xchg
stc
repz
lcall
std
enter
inc
mov
clc
bound
xor
shll
repnz
cwtl
lret
imul
fildll
or
mov
fldcw
inc
or
sbb
or
adc
push
adc
xchg
in
enter
xlat
scas
sbb
fmul
mov
cltd
jns
fwait
jg
dec
in
dec
push
fwait
mov
aaa
xchg
repnz
inc
imul
stos
js
add
xchg
fidivl
push
cli
mov
push
lock
push
test
xchg
and
mov
jl
jae
inc
cwtl
sub
unpckhps
push
push
testl
sbb
jb
lcall
ds
mov
xchg
fiaddl
iret
test
outsb
fs
popa
jns
clc
outsb
cmp
dec
iret
scas
jecxz
xchg
dec
jnp
mov
fsubrs
inc
gs
add
mov
jns
mov
mov
dec
lea
outsl
jge
movsb
inc
sbb
divl
imul
mov
fiadds
mov
lock
stos
insb
adc
dec
outsb
loope
fs
cs
sbb
insb
push
xchg
inc
lcall
jle
or
adc
jne
adc
rcl
xchg
aaa
inc
ret
fs
jbe
xlat
adc
cmp
inc
ljmp
orb
vcvtss2si
inc
add
fnstcw
push
jns
nop
sub
mov
fadd
test
ds
jo
pop
mov
scas
movb
rcrl
or
cmp
mov
mov
xchg
jecxz
xor
lods
adc
pop
shr
sahf
dec
ficoms
mov
jbe
out
mov
int3
mov
or
int3
pop
imul
inc
dec
push
push
mov
loop
inc
stos
scas
adc
jmp
xor
dec
int3
out
jne
subl
mov
jnp
cli
pop
mov
insl
pop
fcmovne
data16
push
sub
stc
fucomp
xchg
mov
xlat
mov
addr16
shll
or
push
xchg
jl
aaa
rcr
inc
mov
fsubrs
in
stos
loopne
inc
out
in
int3
lret
outsl
push
imul
mov
clc
jg
cmpb
xor
lods
push
mov
daa
inc
pop
mov
sbb
movsb
jmp
jnp
inc
mov
dec
jnp
andl
pop
call
daa
ds
out
fcoml
xor
enter
imulb
push
xor
pop
xchg
repnz
sbb
data16
aad
movsl
push
mov
and
shl
and
adc
pop
ret
push
call
arpl
lock
or
push
xchg
out
arpl
sub
scas
push
aam
iret
xchg
mov
inc
ret
xchg
pop
push
cmp
and
lock
sub
and
scas
mov
aam
popa
mov
and
mov
cmp
jecxz
xlat
push
aaa
neg
cmpsb
mov
mov
sbb
push
adc
xchg
push
mov
das
rcr
popf
enter
add
sahf
popa
cld
addr16
test
out
sbb
dec
flds
sub
std
out
lret
sahf
fsubl
dec
iret
xchg
ss
lods
push
ja
lods
dec
or
sbb
out
and
mov
fdivl
repz
mov
adc
sub
rcll
cmp
inc
arpl
sub
mov
sbb
mov
les
idivb
push
xor
rorb
fsubr
mov
aas
cmp
inc
mov
pop
mov
outsb
imul
and
outsb
rcrb
cmc
inc
lods
in
les
aam
sub
add
fsubrp
mov
ds
fsubl
cmc
mov
mov
mov
inc
dec
shlb
mov
pop
repnz
out
adc
shll
popa
xchg
mov
dec
jp
mov
mov
test
xlat
push
dec
out
ror
lea
hlt
pop
jmp
mov
cmpb
stc
shl
mov
daa
fstl
repnz
xchg
adcb
mov
add
incl
test
ret
test
adc
pushl
cmp
xor
adc
je
sbb
jbe
pop
mov
cmp
rcll
outsl
clc
inc
test
mov
cmpl
out
add
ffreep
sub
cmpsl
mov
jmp
lcall
or
loope
xchg
cmpb
mov
pop
pop
adc
repz
jno
and
or
shr
loop
inc
cmc
in
leave
push
lea
pop
xchg
xchg
adcb
mov
and
icebp
jnp
cmc
out
jno
mov
sahf
int3
insb
sub
adc
add
stc
pushw
lods
stos
lds
lcall
mov
jne
mov
insl
lcall
mov
sbb
lods
mov
std
inc
lcall
sub
fisubrs
shrb
loop
xlat
movsb
jnp
shlb
shr
mov
add
xor
push
loope
hlt
jp
iret
jle
adc
xor
repz
das
cmp
in
lods
and
inc
cmc
loope
cli
sbb
push
dec
add
mov
pop
jl
bound
mov
lea
or
mov
js
std
inc
pop
push
ljmp
inc
mov
mov
sbb
cmovp
and
mov
ret
and
js
push
divl
and
dec
fnstsw
mov
ret
popa
adc
xor
mov
mov
dec
inc
sbb
shrl
adc
inc
jle
xchg
pop
push
aad
or
popf
mov
fmull
sbb
test
add
xor
adc
ds
leave
daa
out
addb
sub
lods
jmp
inc
es
fcmovne
cld
inc
in
add
mov
push
les
cld
mov
inc
nop
loopne
test
mov
iret
pushf
xor
outsl
out
mov
in
emms
cmp
and
dec
xchg
stos
andl
mov
jl
push
add
decl
dec
mov
inc
xchg
add
add
jmp
popa
outsl
loopne
adc
dec
out
mov
popf
and
push
xchg
test
push
or
xchg
pop
mov
ds
out
scas
imul
or
fstl
push
lahf
mov
lods
in
icebp
dec
mov
xor
fisubrl
call
mov
dec
push
repz
in
push
inc
lods
cmpsb
mov
jmp
js
jg
stc
mov
outsl
mov
jecxz
pop
adc
inc
in
or
lea
push
and
stc
gs
push
or
dec
bound
adc
sub
inc
and
dec
xchg
xor
insl
js
xchg
fisubrl
add
push
push
idiv
aad
lea
outsl
dec
imul
mov
jl
jp
mov
jecxz
rorl
mov
mov
mov
mov
out
call
aad
lods
mov
les
das
js
jo
dec
or
inc
out
jno
clc
or
sarb
hlt
jmp
mov
inc
pop
insl
push
divl
ret
cltd
vunpckhps
push
lahf
mov
jae
or
addr16
cmp
pop
cmp
pop
lret
leave
jecxz
loopne
call
in
mov
shl
sbb
or
push
rorl
xlat
je
les
sbb
sub
insl
test
or
push
fisubrl
xchg
sbb
scas
xchg
push
inc
mov
mov
adcl
dec
and
lret
lcall
push
push
lea
ficoml
dec
call
data16
jne
lcall
sbb
adc
push
movsl
ljmp
shrl
lds
fwait
jo
adc
jp
cmpsb
lds
lods
int
rclb
gs
loope
popa
lods
adc
lea
push
xor
out
adc
inc
sbb
cmp
cli
mov
aaa
cwtl
push
cltd
xor
movsb
es
jbe
aas
sub
cmp
and
mov
inc
dec
or
cmc
dec
sub
dec
leave
dec
fmuls
xchg
or
xor
int
mov
repnz
fwait
xor
sbb
push
and
lods
es
inc
and
xorl
call
mov
jge
push
push
cwtl
mov
fmulp
jnp
insl
popf
test
les
nop
and
and
push
push
jnp
xor
popa
pop
pop
jo
jo
mov
xchg
test
add
or
mov
movsl
pop
in
imul
popa
outsb
jl
sahf
cltd
push
pop
test
jge
icebp
mov
fstpt
jns
cld
cmpl
leave
rcll
pop
xlat
ja
mov
imul
in
and
pop
cltd
outsb
cmp
notb
xlat
les
mov
pop
sub
rol
das
call
sub
or
sbb
in
push
adc
jo
or
fcoms
insl
out
adc
jmp
push
cli
mov
xor
sbbl
cld
and
ja
mov
mov
or
sub
idivl
jg
add
loope
in
loope
jb
in
add
stos
mov
loopne
mov
imulb
cwtl
lahf
jo
cs
adc
out
scas
stos
aam
push
cmp
bound
adc
and
mov
xchg
mov
aas
imul
gs
jl
pop
jmp
pop
and
cmp
add
jp
stc
js
repz
cld
mov
movsb
xchg
or
push
es
in
and
scas
xor
mov
mov
jns
int3
ja
adc
pop
fwait
iret
je
addb
imul
xchg
das
aam
pop
adc
out
add
pop
inc
sti
sahf
jne
jle
jns
ret
add
xor
pop
shrb
scas
mov
add
mov
in
nop
fisubl
out
push
xchg
or
mov
push
adc
mov
mov
jg
jno
xchg
mov
icebp
out
or
out
lds
dec
dec
mov
jno
adc
ja
mov
ret
and
dec
decb
rclb
idivl
iret
test
mov
insb
push
lret
pop
mov
fisttpll
pop
leave
insb
or
mov
outsb
aam
jge
in
repz
dec
shlb
jp
xor
mov
int3
cmp
xchg
mov
jo
jb
rorb
movsl
mov
sub
xor
jno
inc
fbstp
imul
dec
push
add
add
cmc
lahf
std
sub
lds
faddl
or
pop
adc
sub
sub
decb
pop
jl
pop
pushf
pop
arpl
sbb
lock
cmpsb
jo
jbe
mov
jmp
add
dec
pop
and
les
ljmp
adc
push
lds
shlb
adc
jo
add
bound
fldcw
pusha
cs
je
adc
cld
fwait
clc
insb
mov
aam
cli
mov
mov
mov
in
sarl
rcrb
in
xor
or
sbb
cmp
xorb
ret
add
mov
nop
ds
xchg
movsb
mov
or
xor
xlat
dec
xchg
loope
cmp
adc
fisubs
and
arpl
and
test
pop
lods
cmp
xor
aaa
xor
pop
shlb
pusha
or
adc
mov
test
or
shll
push
mov
int
jne
mov
xchg
xor
lods
outsb
mov
les
sbb
out
xchg
push
sti
daa
mov
and
dec
xor
fistl
js
dec
push
and
or
cld
icebp
mov
cmpsb
xchg
xor
fistpll
mov
or
mov
sbb
lock
pop
xor
fadds
sub
lahf
sub
xchg
sbb
mov
lret
mov
pop
lret
fstps
lock
mov
fwait
loop
push
pop
js
xlat
add
push
xchg
mov
sub
lcall
cwtl
jo
pop
aaa
jecxz
and
mov
sti
stos
or
adc
fs
in
sub
ljmp
outsb
fldt
lods
rcr
xor
jp
jno
jecxz
jl
loope
fisubrs
lock
push
stc
fldt
pusha
aaa
xor
mov
sbb
mov
jmp
orb
mov
xor
jmp
cwtl
data16
aam
mov
sbb
cmp
hlt
add
inc
push
outsb
fucomip
gs
in
sar
hlt
movsb
bound
mov
dec
js,pn
cmpsb
push
push
imulb
pop
loopne
dec
pop
jl
jecxz
jmp
xor
mov
mov
push
sub
jecxz
and
test
mov
push
pop
andb
or
push
mov
sub
fnsave
push
fs
fdivs
insl
lahf
jle
inc
cmpb
cmpsb
push
push
addr16
into
or
loope
je
push
dec
add
subb
imul
xchg
loopne
stos
dec
xchg
out
and
ficomps
and
inc
aaa
adc
sbb
sub
cmpsb
mov
dec
call
jecxz
mov
fidivrs
dec
pusha
cmp
in
mov
aaa
fwait
mov
in
ret
jno
pop
xchg
jecxz
jl
mov
and
iret
mov
push
in
push
in
lahf
mov
add
ja
pop
cmp
sub
pushf
scas
mov
aam
dec
cmp
push
shll
fistpl
popa
rcl
cs
push
xchg
ds
out
push
or
jno
jns
gs
sbb
leave
stc
call
ret
dec
insb
cltd
add
aaa
push
xchg
or
mov
sti
call
push
aaa
leave
push
lret
xor
lock
into
pop
jg
and
mov
les
js
test
stos
mov
cmp
cmp
mov
push
scas
cwtl
rcrb
test
enter
inc
or
or
adc
enter
inc
push
cmpsb
bound
pushf
push
pop
lcall
mov
cli
dec
addr16
ret
clc
addb
bound
popf
xchg
insb
cltd
dec
js
push
push
and
sbb
sub
pop
jbe
sub
push
xor
sti
xor
cmp
repnz
mov
mov
or
or
popa
dec
enter
fstpt
cmp
lcall
sub
cs
push
ret
insb
or
flds
daa
lds
and
lods
inc
add
or
test
outsb
mov
cmpsb
test
inc
pop
pop
jae
cmpsl
fisttpll
loopne
loop
bound
lret
rcll
fs
out
cli
push
mov
push
jecxz
dec
fwait
cmc
dec
dec
das
adc
insb
movsb
sbb
push
es
and
imul
jecxz
rolb
xchg
cmp
je
repnz
lock
leave
das
mov
xchg
movsb
mov
add
xchg
fstp
mov
inc
movsl
movsb
jns
push
hlt
clc
cmp
jle
iret
xlat
add
cli
jo
inc
sahf
xchg
mov
lods
in
repnz
push
dec
jle
aam
neg
into
jne
shrl
pop
push
mov
inc
aaa
cmp
mov
ret
cmp
xor
in
adc
jb
jo
sbbb
call
and
push
ffree
xor
xor
out
mull
add
es
xor
pop
lret
icebp
xchg
and
ret
jb
inc
not
mov
mov
imul
push
and
sbb
sbb
pop
insb
dec
aas
pop
sub
lds
or
imul
outsb
fmul
addr16
xchg
xor
int
imul
gs
sub
jg
dec
sbb
push
loop
pop
cmpsb
add
outsb
add
adc
jge
mov
adc
pop
mov
in
enter
pop
fiadds
jae
lock
xchg
mov
pop
iret
pop
adc
orb
xchg
and
mov
ret
arpl
mov
sarb
pusha
sbb
sbb
lods
imul
pop
mov
flds
les
mov
xchg
cmp
insl
inc
push
add
cmp
andl
mov
jbe
or
jbe
inc
into
sub
xor
mov
add
inc
sahf
xlat
and
lea
fimuls
pushf
ret
int
mov
push
sub
adc
add
pop
cs
lret
push
hlt
movsl
pusha
jbe
out
push
ret
push
fsubs
fldenv
test
inc
jmp
mov
and
sahf
mov
ret
movsb
test
arpl
push
dec
add
adc
xor
aad
sub
bound
mov
shll
stos
out
mov
sahf
jbe
fnstenv
mov
add
adc
mov
xor
xchg
mov
out
push
popa
ss
aas
arpl
push
cmpsl
mov
jns
inc
fucomi
and
cmc
cmp
inc
pop
aaa
mov
inc
inc
jno
insl
mov
cmpsl
cmpl
int
icebp
loopne
cmpsb
stos
adc
xor
in
lret
mov
addr16
or
xchg
fstpt
xor
lock
jb
in
lea
push
insb
mov
sub
and
int3
outsl
add
adc
push
push
mov
lret
aaa
dec
fwait
std
stos
mov
ds
arpl
mov
lret
push
scas
and
lret
cmpsb
cs
mov
pop
pop
es
push
lock
mov
and
xor
leave
xor
out
xor
popf
push
jno
pop
xchg
icebp
sub
and
xchg
pop
fsubrp
movsb
inc
xor
lds
cmp
imul
jae
jl
xor
fcompl
mov
add
bound
shl
movsl
mov
lods
sahf
aas
pop
jl
arpl
adcb
inc
insl
and
or
fstpl
ss
orb
iret
insb
inc
lcall
lret
aam
lret
push
in
xor
addr16
std
bound
xchg
cmpb
dec
inc
and
int
jle
rclb
push
mov
sbb
fs
lret
lods
add
dec
mov
pop
sbbl
ret
jl
inc
adcb
push
push
lods
pop
inc
fwait
jecxz
es
dec
xchg
or
mov
add
cld
aad
clc
scas
push
xchg
aam
mov
addr16
ja
mov
push
pop
mov
add
out
mov
xlat
inc
xor
pop
pop
xor
pop
xchg
stc
push
xor
jge
jmp
fadds
adc
adc
je
cmp
cmpsb
sti
pop
cmp
mov
rorl
popa
mov
dec
cld
decl
cmp
adc
shl
daa
aam
dec
pushf
push
dec
push
repnz
hlt
in
stos
lock
pop
popa
imul
push
inc
insb
out
imul
add
and
repnz
adc
ret
sub
and
mov
bound
divb
pop
aas
repnz
mov
dec
iret
cmpsl
lds
cmpsl
ja
cmp
adc
sub
dec
jmp
add
daa
out
sbb
shll
dec
pushf
add
jg
adc
mov
mov
push
rcrb
test
addb
les
push
sub
imul
les
jmp
push
arpl
leave
push
outsl
shll
sahf
gs
sub
pop
fidivl
xchg
popa
add
insl
cwtl
mov
cmp
lret
adc
das
rclb
push
mov
jno
cmpsb
and
push
scas
lods
push
pop
cs
push
push
scas
jne
sti
imul
psubb
mov
pop
mov
adc
cmpsl
insl
notb
rcll
test
push
or
or
int3
push
jle
inc
add
mov
cmp
dec
sub
f2xm1
mov
je
lea
adc
inc
xlat
out
loopne
xchg
mov
xchg
add
and
cs
stos
pop
mov
mov
hlt
cmpsb
mov
xchg
push
sbb
mov
push
or
pop
mov
outsl
jl
fcmovbe
xor
sbb
lods
into
adc
rcrl
push
xor
scas
insb
jnp
jle
mov
iret
xlat
sti
flds
mov
push
add
pop
cli
pop
and
dec
push
dec
inc
mov
or
and
jb
hlt
inc
pop
mov
mov
sahf
outsl
sbb
mov
cltd
lods
rcr
stos
mov
mov
test
jb
idiv
fnstcw
les
xlat
dec
sub
popf
and
cld
leave
loop
and
int
push
bound
inc
jo
nop
xor
sbbb
lcall
mov
adc
jl
cmp
mov
pushf
lahf
das
aaa
dec
push
call
inc
mov
mov
cmp
lret
test
movsl
pushl
daa
imulb
cwtl
push
gs
push
jmp
sbb
jbe
or
icebp
movsl
sahf
mov
cmc
and
jp
inc
lock
popa
push
fwait
dec
mov
lcall
leave
sub
out
inc
dec
mov
jnp
mov
or
dec
mull
lods
sbb
sbb
sbb
js
jp
cmp
movsl
dec
imul
lahf
arpl
and
lock
push
imul
inc
imul
adc
jecxz
cmp
push
mov
mov
rcll
in
dec
ret
out
shrl
cs
out
sbb
ja
mov
imul
cmc
pop
pop
mov
repnz
or
jecxz
jnp
add
mov
rorb
cwtl
mov
or
xorb
mull
test
ret
cmp
add
shlb
shll
add
jne
mov
loop
test
lock
push
scas
call
cmc
pusha
jne
mov
add
mov
or
dec
inc
test
mov
imul
push
shl
loop
enter
or
and
data16
shr
negb
inc
jo
sub
dec
outsl
adc
daa
pushf
inc
sub
or
cmp
stos
push
cmpsb
or
in
insb
push
or
mov
gs
mov
scas
lret
jo
inc
dec
mov
push
mov
pop
jl
test
xchg
je
or
mov
test
aam
inc
and
cmp
xchg
imul
xchg
push
faddl
negl
idiv
decl
add
divb
pop
mov
sub
mov
push
cmp
dec
ja
mov
fs
push
pop
pop
pusha
movl
xor
mov
pop
test
or
xor
and
sub
xor
xchg
clc
push
addr16
push
daa
and
lret
loop
shlb
xor
cmp
mov
xchg
push
es
mov
aas
push
push
pop
pop
out
inc
test
shl
xchg
or
mov
stos
repnz
sub
sbb
inc
pop
movsb
push
or
sbb
mov
sub
xchg
sub
mov
aaa
and
out
jg
pop
enter
and
and
insb
ret
jmp
call
dec
push
into
xchg
ret
jbe
stos
add
or
and
daa
test
sbb
lock
push
out
mov
outsb
fsubl
dec
sarb
jp
sbb
cwtl
fdivrl
fidivrs
dec
leave
lods
adc
mov
rorl
gs
adc
dec
ret
pop
or
jae
and
push
dec
popf
test
data16
jbe
les
into
nop
cwtl
stc
pop
and
push
pop
and
imul
hlt
imul
jp
jne
bound
pop
xchg
in
icebp
dec
decl
out
shll
push
dec
popf
push
into
lea
out
xchg
in
inc
pop
xorb
sbb
xchg
adc
hlt
neg
inc
cmpsb
fwait
add
fwait
inc
cmpsl
xor
gs
outsl
sbb
cmp
xor
jae
xchg
sub
sar
btr
dec
add
inc
xor
jecxz
cmp
push
pop
orl
pop
ret
and
scas
mov
lock
mov
mov
pop
sahf
xchg
cltd
lods
pop
lds
fsubrp
xchg
ljmp
inc
mov
inc
push
outsb
daa
idivl
mov
jnp
jecxz
add
loope
data16
std
aas
out
sub
xchg
pop
imul
inc
jb
stc
cmc
cmpsl
pop
test
rolb
cs
push
jne
out
test
jmp
and
pop
in
test
addr16
mov
std
mov
xor
or
shll
inc
lods
push
in
int
pop
subl
adc
xor
test
jne
inc
push
inc
add
sahf
sub
repnz
sbb
dec
mov
outsb
inc
mov
xchg
adc
and
repnz
pop
jg
adc
sbb
jo
js
je
repz
cmp
jae
pusha
dec
jne
test
test
pop
xor
cltd
push
out
jle
cmp
jecxz
setnp
ljmp
mov
insl
mov
loopne
xor
neg
les
lcall
shll
mov
add
push
xor
js
jp
inc
push
out
in
roll
lds
in
sbb
sbb
aad
data16
push
mov
lret
push
sub
push
sub
pusha
adc
rcll
out
lods
or
sti
jmp
cli
sahf
and
aaa
adc
push
jns
jne
push
push
add
push
jecxz
mov
ja
rcrl
lcall
das
cmp
mov
jbe
and
mov
sub
out
mov
sub
mov
adc
add
in
pop
push
xchg
mov
mov
fstps
stos
dec
out
jnp
fs
mov
and
fistl
into
repnz
pop
ss
sti
mov
shlb
cmp
jge
or
repnz
fdiv
cld
into
shrl
jbe
mov
aam
mov
idiv
lret
into
ret
dec
add
xchg
mov
pop
inc
dec
lret
mov
pop
add
scas
sub
sub
hlt
test
cmpsl
xor
movl
lea
mov
xchg
push
in
int
mov
inc
leave
fs
xchg
xor
bound
lock
shrl
add
cld
lock
movsl
and
inc
in
repz
addr16
xlat
sbb
test
cmp
fsin
mov
sbb
ds
mov
sahf
add
imul
ret
jnp
add
mov
jecxz
int3
xchg
lds
cmp
cld
pop
jne
pop
scas
jle
mov
sub
mov
dec
or
jp
imul
jecxz
call
lods
ds
clc
out
das
dec
mov
bound
imul
data16
mov
aaa
pop
addl
nop
mov
out
fistl
outsb
adcl
aad
jo
sbb
mov
mov
push
or
or
push
aad
push
mov
inc
scas
loope
mov
add
push
cwtl
dec
mov
cmp
loope
jb
pop
sbb
lods
jno
sub
inc
dec
xor
outsl
mov
bound
xchg
into
lret
rclb
scas
faddl
push
add
jle
cmpsl
mul
ja
das
fdivrl
fldt
xor
and
xchg
add
stos
dec
in
sbb
push
xor
inc
insl
xor
out
cmpsb
ret
aad
sarl
pusha
rorb
mov
pop
out
mov
jle
loopne
adc
add
jne
popa
sub
sbb
test
push
mov
pop
pop
aad
ret
mov
adc
dec
cmc
sub
mov
clc
cmpsl
inc
xorb
cmp
xchg
cli
stc
rcrl
into
aam
dec
das
cmp
fstps
and
fstl
inc
ror
call
jecxz
es
sbb
cmp
and
add
lock
push
fldl
ss
dec
test
or
jne
pushl
adcb
inc
cli
mov
mov
xchg
sub
mov
mov
inc
cmpsb
mov
daa
cld
clc
sub
mov
cmp
mov
pop
fcomip
repz
adc
fdivrl
xchg
mov
inc
scas
cld
sub
adc
sbb
push
add
aas
loop
and
jge
sbb
and
in
pop
inc
popf
xchg
repnz
push
mov
fdivrl
adc
lds
pop
lock
add
inc
push
pop
xor
mov
mov
sub
popf
aam
test
inc
rcrb
repz
mov
repnz
je
xor
leave
je
ret
test
lods
arpl
cmp
popa
aas
dec
repz
cmpl
or
test
fistpll
cwtl
push
fidivrl
cli
into
sub
mov
dec
loop
sti
jne
fs
dec
push
ljmp
xchg
mov
sub
mov
mov
gs
or
mov
ds
cmpsb
stos
push
movsb
in
xchg
arpl
rcrl
mov
daa
or
repnz
cmp
dec
adc
aad
pusha
icebp
pop
cmpsb
adc
loop
stc
mov
adc
xchg
cmp
mov
push
mov
int
mov
xchg
rcl
arpl
mov
add
inc
daa
lock
das
mov
pop
and
push
data16
mov
sub
loop
jge
lods
and
lock
ss
shrl
push
push
add
mov
xlat
xchg
addr16
add
jp
sub
sti
adc
test
push
jmp
in
push
push
jns
mov
pop
sahf
or
jmp
add
mov
and
push
das
or
or
and
ss
aad
cmp
das
mov
adc
and
push
sub
daa
push
andb
lret
sub
test
cwtl
inc
les
cmp
mov
shrb
jns
mov
lret
push
mov
and
mov
cmc
mov
cmp
xor
adc
dec
push
mov
rcrb
cmpl
sbb
xor
aad
push
dec
bound
insb
xchg
lds
popa
push
dec
mov
call
xchg
and
jg
sub
cmp
pop
dec
add
cmpsb
daa
loope
in
daa
lahf
mov
dec
push
insb
stc
icebp
les
pop
sahf
fldl
mov
lods
xlat
cmp
dec
ret
fiadds
push
in
jmp
stos
pop
in
arpl
mov
cmpsb
sub
or
and
movsb
rcrl
lahf
jp
mov
mov
mov
inc
test
jno
es
sub
loope
and
pop
jp
jge
popa
cmp
adc
push
inc
test
lret
aaa
sub
inc
lahf
iret
popa
jp
je
adc
dec
xchg
es
dec
out
pushl
jmp
cmpsl
stos
imul
shlb
push
ror
cmpsb
ja
shrl
pop
lds
test
inc
pushf
lods
scas
loopne
movsb
jp
arpl
imul
or
movhps
outsb
cmp
stc
sub
lea
pop
sahf
cmp
inc
push
lret
fcompl
imul
lret
jne
adc
mov
andb
test
out
enter
mov
hlt
lds
inc
loope
dec
sub
jecxz
xchg
fistpll
push
xchg
lods
mov
lea
mov
loopne
mov
inc
dec
add
loop
and
xchg
mov
sbb
adc
in
jp
or
js
shrl
inc
hlt
icebp
sub
out
inc
mov
outsl
dec
fdiv
movsl
pop
jg
sbb
nop
lcall
loop
cwtl
leave
mov
mov
stc
fdivl
sub
jb
xchg
loop
jb
and
lcall
dec
and
stos
testb
mov
icebp
dec
push
or
or
ffreep
pop
mov
cmp
jle
and
sbb
jl
dec
sub
pop
cmc
jl
je
jg
je
inc
adc
lea
xor
in
mov
sbb
std
pop
test
lods
jo
fbld
mov
pop
inc
xor
bound
std
xchg
aam
cli
les
shl
push
ds
jns
mov
push
push
scas
pusha
repz
push
lret
lods
pop
outsb
mov
add
fidivl
adc
pop
or
mov
sbb
cwtl
shll
or
divb
test
out
push
data16
dec
cmc
subb
jecxz
inc
push
jae
ds
pop
ja
and
flds
cmp
pop
pop
outsb
or
pop
daa
pushf
adc
sbb
pop
out
jmp
mov
pop
mov
xor
test
xor
into
lcall
sbb
test
xchg
lds
xchg
lock
lahf
inc
sbb
mov
dec
test
daa
aad
mov
push
cmp
ror
pop
xchg
shrl
insb
test
mov
inc
addr16
rol
sahf
xorb
xor
xor
push
pop
and
xchg
lea
test
out
lds
dec
fnstenv
fldlg2
fidivrl
gs
decl
fxam
clc
and
sub
hlt
sub
xchg
jg
nop
les
in
sbb
push
aaa
sub
movsl
adc
icebp
test
sti
scas
in
adc
pop
ja
mov
jbe
fmuls
push
add
mov
call
scas
inc
std
jle
scas
sbb
cmp
dec
mov
pop
call
fwait
and
push
cmpsb
jg
cmp
xor
outsb
add
popf
mov
jg
and
fwait
add
loope
push
dec
inc
push
mov
int
sti
xchg
fidivrs
xlat
cmp
and
cmp
inc
dec
dec
mov
push
add
insl
cld
cltd
shll
add
inc
scas
ja
cwtl
or
nop
mov
cmp
stc
das
and
sub
aad
inc
cmpsb
icebp
and
cld
nop
add
cmc
pop
sub
adc
hlt
adc
fdiv
daa
xchg
jecxz
xchg
or
sub
ds
iret
fstl
call
adc
pop
nop
jmp
fsubrl
mov
pop
sub
mulb
and
ror
sub
iret
lahf
fcom
popa
aas
sub
aaa
mov
mov
sbb
movsl
pop
stos
fldcw
sbb
aad
outsl
and
fwait
dec
mov
loop
mov
shll
mov
add
mov
sbb
sub
mov
ja
loopne
das
fsubr
dec
scas
pushf
daa
xlat
cmp
andb
sub
xlat
jns
aaa
loope
jbe
pushf
pop
dec
push
stos
and
jl
aaa
adc
mov
shr
ret
push
test
cmp
incl
xchg
push
push
icebp
pop
cmp
outsb
std
adc
push
add
decl
lds
add
fdivl
push
data16
loopne
rolb
or
jg
jp,pn
mov
shr
dec
push
popf
pop
sub
repnz
dec
add
lods
inc
testb
ficompl
jno
push
or
xchg
sbb
or
inc
fldcw
pushf
mov
mov
fs
push
lahf
push
stos
mov
mov
push
pop
stos
das
fiadds
insl
xor
outsl
adc
dec
xlat
rcl
enter
iret
pushf
and
sub
pop
dec
repz
imul
cmp
in
or
lahf
adc
add
dec
rorl
mov
pop
sub
jle
inc
mov
pop
inc
jle
scas
adc
movsb
push
ret
aas
jno
sbb
das
add
mov
je
cmc
jmp
push
mov
or
and
adc
or
mov
mov
pushl
mov
enter
or
mov
sbb
cmp
fisubs
ds
xchg
dec
ds
popf
data16
test
and
mov
ljmp
sub
mov
lods
mov
lret
movsl
mov
lods
xlat
mov
push
add
jl
xor
js
aas
pop
ret
sub
lret
pop
dec
mov
ds
mov
imull
loopne
xor
bound
adc
pop
push
jno
xchg
pop
sbb
lcall
push
fwait
adcb
mov
outsl
xchg
cmp
imul
imul
xor
mov
xchg
sbb
test
in
out
repnz
add
jmp
push
fimull
dec
into
call
arpl
in
sub
mov
inc
outsb
xchg
adc
pushf
test
lds
int
scas
daa
mov
sub
sub
and
jno
insb
pop
icebp
adc
hlt
movl
adc
test
add
hlt
push
imul
sub
pop
and
sub
xchg
loopne
incl
jae
push
sub
mov
dec
dec
lds
fcoms
lods
fcompl
or
into
inc
test
leave
ret
aam
sarb
mov
out
mov
or
rep
push
sub
dec
leave
les
pop
mov
push
in
sbb
push
cmp
push
iret
xchg
dec
pop
lcall
outsb
imul
mov
leave
das
fcoml
iret
lds
repz
and
xor
push
daa
add
inc
or
dec
add
stos
imul
fiadds
jbe
xchg
push
adc
mov
pop
stc
add
xrelease
xor
xchg
mov
ret
mov
push
test
imul
loopne
inc
mov
call
inc
sub
sbb
popa
lds
das
xchg
sbbb
stos
jle
push
push
add
loope
negl
les
movsb
decb
fidivrs
rolb
lock
cltd
test
dec
aam
fbstp
xchg
dec
push
pusha
pop
and
dec
add
dec
mov
into
and
mov
cmpsl
inc
outsl
pop
int
pushl
in
jecxz
cmpsl
inc
mov
out
clc
out
push
push
data16
or
lcall
fcomp
sbb
jge
pop
enter
xchg
stos
cmp
xor
imul
sbb
dec
dec
aaa
sti
inc
add
adc
adc
and
popa
daa
push
fsubs
sub
fwait
inc
dec
sbb
mov
mov
and
and
out
push
shlb
adc
loopne
test
jl
inc
add
and
xor
mov
jle
sbb
int
cmpsb
or
out
add
ret
xchg
adc
pop
inc
add
stos
jmp
cld
arpl
mov
sti
insb
movsb
jb
dec
stos
insb
push
cld
or
roll
in
pushf
push
icebp
or
jnp
cli
push
icebp
stc
cmpsb
ljmp
adc
divl
popf
imul
sahf
cmp
imul
aaa
addr16
inc
fsubl
js
movsl
ret
mov
pop
mov
jge
imul
lret
push
push
pushf
repnz
ss
cmpsl
movsb
pop
repz
adc
mov
dec
mov
clc
ljmp
mov
shr
div
cli
shll
mov
push
push
data16
cmp
sbb
push
dec
outsb
sub
rol
or
xor
out
adc
add
addr16
out
es
fcoml
push
arpl
pop
ret
mov
push
addl
jecxz
movsl
mov
stos
es
adc
fmuls
and
jno
cmp
xchg
loop
popa
cmc
push
jb
outsl
push
leave
sahf
or
pop
dec
jl
push
inc
dec
inc
sahf
sbbb
stos
mov
mov
mov
cmpb
int
xor
mov
jns
lock
fimuls
aas
mov
leave
cmpsb
jle
jne
mov
cltd
add
test
fld
pop
add
pop
movsb
in
mov
sub
std
xbegin
movsb
jne
cmp
in
movsb
mov
enter
dec
icebp
lock
xchg
jae
or
pop
lahf
inc
pop
mov
pop
jnp
je
xor
test
pop
or
xchg
in
je
push
add
cmp
mov
adc
lock
movb
mov
ljmp
mov
xchg
adc
test
mov
dec
ret
mov
shr
mov
inc
inc
push
push
imul
loope
xchg
pop
ja
adc
ljmp
jo
stos
repnz
mov
clc
dec
mov
movsl
inc
sbb
fidivl
xchg
mov
les
mov
xchg
push
cmp
jp
and
pushw
out
outsl
add
push
push
imul
mov
pop
scas
mov
sub
xor
shlb
lret
mov
mov
movb
xchg
xchg
or
in
xor
xchg
fists
or
and
jne
xchg
out
jne
jge
dec
inc
pop
mov
jg
outsl
xor
xlat
clc
mov
mov
push
mov
sub
and
mov
je
mov
mov
cmc
rcrl
jmp
es
mov
pcmpgtd
jbe
mov
cmp
test
xchg
rclb
aaa
rorl
das
xor
ljmp
push
adc
mov
cmp
or
xor
inc
jns
fildl
cwtl
add
xlat
push
pop
dec
outsl
into
sub
in
cwtl
enter
mov
js
inc
jp
and
imul
js
push
mov
push
inc
dec
test
loop
movsb
fidivrs
push
bound
jle
cmp
pop
lods
je
push
lds
std
push
xor
mov
and
sub
push
and
stos
adc
dec
stc
mov
loop
cmp
jne
sub
xor
mov
xchg
pop
cmp
int
or
pop
sub
jmp
or
cwtl
bound
mov
push
jmp
ds
test
mov
ficomps
mov
adc
hlt
loope
inc
mov
sbb
sbb
adc
cmp
pop
popa
mov
cmp
mov
push
xchg
sti
or
cmp
imul
jbe
test
mov
les
les
addr16
lret
mov
leave
inc
ret
mov
add
aam
aam
aas
movsl
pop
cmp
pop
mov
call
inc
iret
cmp
test
test
add
cmp
or
fld1
sbb
rolb
in
fisubrs
fstpt
jo
andl
xchg
mov
pop
sub
or
mov
mov
cmp
cmp
sub
inc
pop
and
push
mov
nop
ret
add
mov
pop
xchg
dec
sub
or
adc
in
mov
cmp
call
and
outsb
mov
lahf
bound
cmp
push
bound
push
arpl
arpl
push
inc
mov
out
push
in
subb
iret
pop
adc
push
leave
mov
mov
sub
push
xchg
mov
cmp
lea
and
mov
xchg
pop
pop
jg
fwait
aaa
aad
cwtl
aas
jnp
jge
xchg
mov
loop
lret
adcb
ss
jecxz
or
rcrb
dec
dec
add
sub
lea
dec
clc
dec
and
fnstcw
and
fsincos
adc
daa
je
icebp
aad
add
loope
mov
pop
push
mov
in
repnz
lret
pop
lret
shlb
inc
shlb
loope
mov
call
dec
lods
mov
or
push
fwait
iret
out
mov
mov
out
push
fsubrl
lea
es
jo
mov
jg
pusha
push
add
push
jecxz
sub
mov
fldt
xchg
mov
in
call
pop
jecxz
jge
fistpl
sbb
push
ljmp
dec
int
cmpsl
addb
push
lods
lock
sub
xchg
inc
in
mov
mov
push
or
and
les
movsl
adc
push
xchg
gs
stos
in
repnz
jae
cmpsl
lret
stos
ficomps
xor
jae
outsb
mov
test
mov
push
push
test
ljmp
lea
mov
into
or
sub
cltd
sbb
mov
fistpl
and
mov
fstpl
xor
ret
call
jb
add
dec
test
jnp
scas
mov
cmp
movsb
pop
cmp
or
cmp
lea
mov
sbb
shll
xchg
fs
jmp
ja
add
mov
outsl
xchg
xor
adc
cmpsb
ss
sbb
push
cld
dec
sbb
fldt
std
out
scas
out
enter
outsl
leave
mov
inc
lcall
je
and
test
ljmp
repnz
or
jmp
sub
mov
pop
sbb
add
outsb
mov
sahf
imul
sub
repz
jno
and
lret
jne
mov
lods
bound
lret
ret
pop
subb
xlat
push
fisubrl
adc
jb
jecxz
int
clc
cmp
jns
dec
mov
loope
pop
loop
leave
sub
cmc
fstpt
mov
addr16
cmc
pop
and
jl
gs
add
movsb
xor
ficoms
mov
xlat
popf
mov
jb
dec
into
mov
das
jp
pop
xor
sahf
in
sub
into
or
push
xchg
adc
cmc
inc
out
cmp
mov
movsl
mov
out
push
es
add
loope
sarl
add
hlt
stc
pop
push
lret
frstor
mov
mov
clc
push
lods
xchg
cltd
push
inc
test
int
lock
adc
sbb
cmp
int3
adc
xchg
add
sub
sarb
test
pop
sbb
notl
dec
insb
adc
xor
shl
or
iret
mov
test
jle
lahf
lods
inc
jno
jne
cli
mov
cmpsb
sub
push
in
mov
xorb
sbb
scas
push
jbe
mov
adc
cwtl
in
sub
xchg
int
cmc
jecxz
push
jbe
pusha
or
cmp
dec
jecxz
add
jecxz,pt
mov
jb
stc
xor
inc
jecxz
cwtl
incl
fidivs
jnp
push
mov
dec
dec
into
gs
or
out
adc
mov
iret
mov
jb
mov
shll
mov
jecxz
mov
cli
lock
push
push
leave
mov
jae
das
ret
sbb
xchg
push
stos
and
fsubr
push
aam
or
int
rcl
cmp
xchg
out
jl
fmuls
push
es
and
mov
xlat
mov
movsl
push
hlt
push
bound
call
in
cmp
jge
cli
add
sub
fildll
dec
sti
int
sbb
rcr
movl
mov
or
fcmovnu
lret
aas
ja
lods
ljmp
jl,pn
movsb
pop
test
ret
test
movb
adc
jg
xor
rcr
mov
sub
lea
jbe
add
in
mov
xchg
mov
loop
push
adc
sbb
imul
inc
pop
pop
sbb
dec
cmp
dec
mov
dec
pop
dec
js
adc
ljmp
in
popa
mov
fcoms
imul
jmp
mov
pop
xor
jg
cs
inc
rolb
xchg
push
inc
out
aam
push
or
sub
pop
test
int3
push
pushf
push
out
push
pop
iret
jge
sub
inc
or
cmpsb
jae
loop
xor
aam
or
mov
push
or
fs
cld
pop
mov
pushl
cmpl
aaa
push
fmull
mov
dec
and
xor
push
or
stos
scas
ret
adc
cmc
cmp
dec
dec
cltd
js
shlb
cld
lea
fucom
mov
shlb
mov
inc
mulb
repz
pop
les
aam
add
fs
loopne
push
mov
inc
jne
cld
add
sbb
xchg
pop
shl
pop
cmpsl
dec
shlb
inc
mov
xchg
int3
mov
mov
push
mov
movsb
xchg
xchg
inc
jnp
enter
gs
xor
jno
xor
scas
pop
repnz
mov
pop
pop
dec
jle
add
inc
mov
mov
subl
adc
fcomp
or
lds
jl
out
arpl
sub
shl
arpl
fisubs
aaa
dec
popa
mov
loopne
push
clc
and
ss
lret
gs
pop
stos
sbb
iret
jle
mov
lock
push
stos
gs
adcb
aas
adc
jo
add
ljmp
or
stos
dec
mov
xchg
int
add
lds
out
dec
fidivl
push
jne
fwait
cmpsl
mov
shl
push
hlt
push
rolb
out
insl
sbb
jne
sub
cld
fs
mov
fs
mov
mov
mov
testl
arpl
lock
pop
jo
pop
pop
imul
cmp
jg
pop
push
or
fdivs
mov
addr16
push
add
or
mov
fnsave
into
adc
les
push
leave
dec
orl
push
popa
lods
xor
mov
sub
or
inc
cmc
jge
sbb
pop
mov
cmp
cltd
inc
pop
out
sbb
jl
sub
sbb
dec
cltd
jl
push
inc
push
ja
stos
jge
rorl
mov
xchg
xchg
jne
jecxz
mov
lock
vmovaps
mov
jecxz
idivb
jns
push
aas
les
fdivrs
fs
add
xchg
jae
shll
push
mov
dec
jmp
add
jnp
push
push
outsl
dec
pushf
xchg
push
adc
add
es
xlat
imul
push
daa
mov
call
rcr
xlat
and
push
add
mov
jne
pop
xor
xor
dec
mov
ljmp
sub
adc
pusha
mov
jg
sbb
add
test
lods
std
stos
xor
int
in
dec
les
jb
push
mov
jo
mov
cli
cmp
xchg
jne
rcrb
jae
mov
in
push
xor
xor
out
jle
pop
jecxz
cwtl
movsb
fs
mov
dec
mov
dec
push
div
rclb
iret
push
mov
fcmovnu
cmp
shlb
xor
pop
pop
mov
loop
mov
in
ja
enter
jmp
cmp
loop
test
adcb
mov
xchg
lds
int3
jge
int
jne
lret
jmp
mov
xchg
sub
in
mov
pop
jnp
aaa
out
and
xchg
and
outsb
js
dec
popa
xchg
mov
sub
mov
je
cmp
loope
loopne
mov
push
add
ficompl
and
and
cwtl
jns
push
mov
dec
test
test
in
ja
mov
scas
movsb
fcompl
cwtl
jp
and
aam
add
mov
mov
mov
adc
mov
je
out
clc
ds
mov
test
pop
test
adc
out
testb
mov
jle
cmp
add
pop
xor
inc
push
sbb
repz
mov
scas
imul
push
xor
cs
push
ret
pop
lret
adc
push
cmp
test
imull
aad
ror
clc
movsl
or
in
rcrl
sti
inc
xor
aas
or
cmp
and
rcll
out
loope
jle
push
pop
popf
jl
dec
jle
idiv
pop
push
stos
mov
and
cmp
out
add
mov
das
inc
xchg
push
jnp
mov
and
out
iret
lret
push
or
mov
cmp
mov
sbb
sbbl
xchg
push
out
jae
push
mov
outsb
sti
fprem
aad
xchg
movsb
ret
scas
imul
mov
jnp
push
dec
mov
sbb
fs
dec
dec
cmpsl
outsl
adc
mov
adcb
loop
incb
push
pop
in
hlt
sahf
aad
sarb
cwtl
pop
jle
lahf
popa
jnp
cli
lea
ficoml
ja
hlt
sbbl
adc
pop
loop
lods
ret
cmpl
fisubl
cltd
xchg
mov
jbe
add
sbb
cmpsl
rcll
mov
repz
out
inc
data16
mov
adc
mov
and
popa
inc
enter
popa
lret
in
mov
mov
psrld
dec
mov
jp
iret
stc
jne
mov
clc
or
xchg
add
jmp
push
fsub
out
stos
jbe
sahf
xchg
pusha
mov
insb
aas
fwait
cmp
loope
sbb
jo
mov
fnsave
fbld
call
pop
adcl
rcl
daa
adc
insb
xlat
mov
mov
sbb
mov
inc
popa
punpckhbw
insl
mov
xchg
add
call
push
pop
lds
pop
sahf
jmp
push
gs
mov
scas
adc
xor
dec
lret
lcall
push
cmp
xlat
dec
xchg
jnp
sbbl
dec
mov
xchg
xchg
out
cwtl
adc
inc
iret
mov
mov
lds
outsl
xchg
movsl
mov
iret
cmpsl
inc
mov
mov
dec
xchg
sub
ja
push
pop
sbb
fbld
jp
inc
idiv
push
hlt
int
in
inc
xor
or
clc
push
mov
std
sbbl
dec
sub
mov
inc
push
test
lcall
add
xchg
fucomp
cwtl
and
pusha
adc
in
stos
cwtl
std
addps
bound
push
pop
pop
imulb
fistl
xor
std
xlat
push
int3
addb
push
add
shrb
ljmp
loop
shll
mov
xlat
mov
hlt
fistps
sub
jmp
cmp
sbb
dec
in
adc
mov
sbb
jbe
bound
add
pop
std
shl
stos
lea
imul
lcall
cs
inc
inc
fsubp
dec
stos
add
inc
mov
test
mov
sub
xor
inc
das
mov
push
dec
insb
fisttpll
mov
shlb
imul
and
push
hlt
pop
jg
mov
fsubl
adc
xor
xchg
and
loope,pt
xchg
dec
pop
out
mov
scas
or
jbe
mov
and
sbb
and
fmull
shrb
xchg
mov
aad
xor
sub
out
cmp
ljmp
inc
mov
inc
inc
and
push
clc
int3
add
cld
cmc
inc
or
sbb
xchg
mov
movl
jl
out
test
sub
lods
aaa
clc
pop
cwtl
adc
movb
clc
into
mov
cmp
cmpsb
dec
jg
mov
add
testb
adc
fisubs
xor
daa
andb
inc
mov
xor
mov
cmp
rol
pop
je
loop
lahf
mov
test
sub
sub
loope
xor
mov
xlat
loopne
loopne
pop
inc
nop
fidivs
aaa
xchg
loop
cli
mov
mov
mov
dec
std
out
xor
jns
outsl
mov
movsb
lret
xor
pop
mov
jno
and
jns
loopne
xchg
leave
or
mov
out
cmpsb
jbe
add
jmp
ret
jecxz
gs
mov
in
cmp
lret
arpl
scas
pop
arpl
push
orl
daa
xchg
es
cmp
outsl
cmp
mov
insl
push
nop
push
aam
xchg
test
pop
mov
push
fwait
dec
mov
and
ss
sti
push
mov
test
into
enter
xlat
add
stc
aas
pusha
fisttps
lods
aad
int3
adc
mov
insl
decl
divb
shld
movsl
scas
test
pop
jb
pop
imul
fs
incl
pushf
mov
ss
gs
cmp
adc
fsts
and
lods
movsb
aas
sbb
adcb
push
je
sbb
sub
jb
jb
push
dec
xchg
and
test
ss
xchg
stos
mov
inc
sbb
faddl
mov
dec
popf
out
fwait
xor
lods
inc
mov
lret
out
insb
inc
int3
xlat
clc
cli
rcl
push
nop
sub
jmp
cmc
add
lret
cmp
xchg
in
out
imul
sbb
ss
aam
addl
dec
in
popa
inc
mov
and
insl
or
dec
xchg
adc
in
xor
cld
and
and
xor
adc
mov
pushf
adc
mov
maxps
loopne
dec
inc
and
test
movsl
xor
es
inc
addr16
imull
pop
outsl
push
pop
addr16
sbb
lcall
sbb
loop
push
mov
insb
stos
pusha
sarl
mov
xor
push
push
mov
enter
sahf
jbe
sahf
loopne
inc
les
call
pop
mov
jbe
neg
xchg
xlat
popa
push
push
xchg
push
push
cmp
nop
jle
xchg
out
in
pop
test
mov
mov
inc
xor
jl
lcall
aam
roll
push
das
add
cmp
aas
subb
cwtl
lock
sub
addr16
das
adc
iret
pop
dec
shll
and
inc
loope
fwait
aaa
sbb
inc
fdivrs
push
sub
xor
inc
mov
cmpsb
xor
adc
lcall
sbb
and
test
fildl
ja
xor
and
adc
sbb
sub
iret
xor
add
fmulp
adc
cmovno
lock
jmp
xor
xchg
mov
adc
mov
lret
cmp
dec
xchg
pusha
pop
xlat
fisubs
inc
cmpsl
sar
aas
pop
imul
inc
or
leave
int3
dec
imul
push
jle
pop
repz
in
sbb
sbb
and
cmp
cwtl
addr16
sahf
mov
pop
inc
test
leave
lret
xchg
pop
xchg
aas
cmp
xor
push
pop
inc
sbb
pop
inc
pop
sbb
mov
xor
jecxz
scas
or
js
aam
and
sbb
mov
pop
jns
push
mov
dec
xor
into
lea
cmp
fcmovbe
pop
movsb
jmp
add
fistl
mov
xchg
xor
addr16
push
and
inc
shlb
mov
fwait
mov
hlt
push
aaa
jmp
cmp
push
inc
push
test
pop
xor
das
mov
aas
mov
roll
dec
and
inc
jnp
dec
sahf
and
or
stos
xor
cmpsl
dec
ss
push
ret
sbbb
loope
les
orl
dec
fsubrl
ficoml
mov
repz
xchg
fnstsw
mov
icebp
in
mov
sti
and
mov
pop
jecxz
out
sbb
in
aad
scas
call
mov
ficoms
ss
pop
fs
lahf
cwtl
cmc
push
cld
push
add
mov
adc
xlat
outsl
out
aad
jo
dec
xor
push
lods
imul
dec
popf
lea
addb
dec
bound
add
cmp
jge
outsb
mov
push
jo
insl
or
mov
nop
sbb
inc
cwtl
test
cmc
daa
lahf
adc
paddsw
cwtl
pusha
lret
in
inc
adc
fisttpl
pushf
adc
mov
inc
lret
push
ja
inc
add
incb
scas
push
mov
lcall
sbb
mov
add
cmpsb
xor
fcompl
loopne
jmp
stos
data16
mov
jbe
pop
test
jmp
pop
mov
adc
adc
fdivrs
xor
adc
cmp
jns
ret
cmp
fisttpll
jb
adc
or
std
mov
jl
sarl
pop
push
pop
lea
lahf
and
and
cmp
mov
sbb
mov
push
movsb
xchg
popa
jmp
sahf
div
rcpps
scas
out
movsb
or
mov
pop
rcrb
and
movl
es
mov
jmp
xor
mov
lahf
xchg
xlat
sbb
pop
repnz
lret
adc
sub
jg
pushf
jg
js
fildl
ja
push
orl
dec
cmp
ror
jp
fxch
mov
xor
lock
out
int3
cmpsl
xchg
inc
xchg
inc
dec
push
ds
push
sbb
push
lock
out
in
push
popf
ljmp
jne
cmp
lock
and
fxam
lods
xchg
inc
stc
imul
pop
and
or
jmp
push
mov
inc
bswap
leave
lods
add
mov
pop
outsl
pop
cmpsb
dec
or
adc
add
loope
push
ror
jmp
lds
jp
sbb
inc
lds
cmp
lea
add
pop
xor
je
jmp
cmpsb
lods
and
imul
sub
cmpsl
out
popl
popa
movsb
xor
js
inc
mov
mov
add
lods
xchg
ljmp
roll
adc
jge
push
roll
lcall
out
sahf
and
adc
and
in
shrb
and
andl
jl
sub
out
shll
or
inc
shl
jge
jecxz
sub
aam
push
out
xchg
ret
sbbl
das
stc
add
inc
pop
or
cltd
add
inc
mov
xor
push
lock
sub
repnz
sbb
decb
jb
shlb
mov
jmp
inc
xor
sub
out
xchg
pushf
lods
sub
fs
sbb
ds
outsb
adc
xlat
jno
xchg
sbb
mov
jmp
mov
mov
lds
loope
jbe
lret
mov
adc
dec
icebp
out
mov
seto
lret
pushf
in
add
fidivl
xchg
add
in
xchg
add
andb
cli
sbb
flds
incl
pop
jne
ja
je
lods
mov
cli
mov
jo
and
fwait
addr16
xor
jae
sbb
rorl
pop
add
cmp
add
cmp
std
pop
shll
in
shl
fidivrl
mov
cmp
test
fsubl
leave
push
xchg
sarl
aam
testl
dec
add
pop
loop
outsl
int
sub
pop
clc
negl
jbe
and
ud0
repz
divb
das
xor
jne
sbb
and
mov
mov
ds
sbb
mov
inc
jo
pop
stos
push
push
mov
mov
add
lds
int
stc
jge
add
mov
in
jne
adcb
cmpl
mov
push
lods
cmp
fnstcw
push
addr16
xchg
xlat
xlat
xchg
push
lds
inc
out
or
push
xor
cmp
xlat
sbb
mov
xor
fisubs
xlat
pop
in
cmp
lea
shrb
add
lret
or
loop
cld
ljmp
dec
adc
pop
push
cmp
sub
mov
fsts
adc
adc
stc
xchg
xor
or
pushf
jg
shll
mov
scas
sbb
shlb
adc
out
sti
leave
imul
bound
push
xor
jne
gs
movl
out
iret
test
mov
push
pop
das
mov
js
jno
sti
mov
loop
add
sub
shrb
out
insl
push
or
inc
jge
jle
push
pop
and
push
jbe
inc
inc
mov
mov
and
test
mov
imulb
lahf
fstps
fld1
mov
adc
dec
fadds
mov
adc
lret
push
xor
fcmovnbe
mov
jno
mov
mov
shl
sbb
mov
jmp
adc
out
imul
imull
or
aam
sbb
rorl
insl
xchg
aas
and
xlat
aam
lret
dec
cwtl
stos
out
test
xor
or
lods
mov
int
call
lock
movsb
xchg
adc
in
loope
sub
and
cmp
int3
cmp
or
pop
int
sti
inc
bound
data16
pop
hlt
push
xchg
lcall
lahf
inc
mov
push
es
pop
push
xchg
push
push
jnp
pop
xor
add
orb
cli
sub
in
test
repz
mov
addr16
lods
mov
outsb
cmpsl
les
xchg
insl
and
out
jle
mov
or
pushf
out
js
hlt
add
gs
adc
mov
jg
add
sub
dec
rdmsr
sti
shrb
xor
cmp
test
fwait
fwait
imul
dec
lcallw
push
roll
call
cmp
nop
in
push
arpl
stos
fsubs
ret
add
inc
shll
jbe
cli
pushf
lcall
pop
cmpsb
aas
adc
insl
mov
shl
stc
ljmp
mov
xchg
push
adc
stos
faddl
push
dec
lods
scas
fwait
stos
mov
sub
xchg
iret
or
sbb
aas
loopne
ficoms
xor
inc
mov
inc
fiadds
sbb
xor
mov
mov
lahf
lret
mov
inc
jo
out
dec
xchg
push
push
add
lcall
dec
push
jno
cmp
pop
jle
xchg
add
into
aas
js
mov
xchg
mov
inc
sbb
xchg
mov
mov
cltd
xchg
mov
xchg
jg
frstor
in
fsubrs
push
out
mov
sarl
mov
test
add
in
push
xchg
lock
adc
stos
loopne
xlat
sarb
sbb
cs
and
mov
pop
cmp
call
ret
rcll
out
imul
out
fisttps
pop
push
push
adc
dec
push
das
xor
ss
outsl
mov
aam
movsl
push
adc
nop
adc
add
movsb
sbb
inc
add
ret
mov
mov
nop
xchg
cld
and
idiv
outsb
in
fidivl
adc
pop
iret
xchg
cmp
in
insl
inc
sub
and
fistps
dec
testl
or
hlt
inc
mov
iret
pop
dec
xlat
add
push
in
js
mov
or
imul
fmull
mov
mov
jae
stc
sub
out
sub
adc
pop
dec
sbb
xchg
jb
rolb
inc
xchg
daa
push
stos
sbb
ret
lods
jg
js
pop
repnz
data16
cld
shlb
sbb
cmp
pop
pop
pop
xlat
xlat
push
cmp
in
sbb
sti
jns
sbb
cmp
adc
adc
rcr
inc
fs
push
mov
ljmp
pop
loop
lds
sub
les
or
cmp
pop
dec
inc
mov
xchg
mov
repnz
xchg
pop
adc
sbb
adc
pop
push
jns
lods
stos
jge
das
gs
xchg
mov
dec
xor
xchg
jl
mov
sub
bound
int
ret
mov
xor
nop
sub
push
push
jne
les
mov
js
jb
fwait
mov
je
mov
js
outsl
jecxz
repz
and
cmpsl
fisubrl
sti
gs
xchg
insb
ss
add
mov
lahf
sbb
test
xchg
mov
movsb
xor
push
push
imul
insb
stos
and
popa
and
imul
or
pop
inc
sub
outsl
arpl
xor
sub
jg
adc
popa
xchg
dec
out
fiadds
lds
xor
push
repnz
js
pop
sarb
inc
sahf
mov
sbb
loop
adc
popa
leave
ficompl
push
mov
sub
insb
pop
fucomp
and
outsl
xchg
adcb
dec
leave
or
mov
test
in
lcall
push
lock
cltd
shl
pushf
loope
loopne
decb
xlat
push
push
dec
xchg
subb
push
push
rcrb
lcall
xor
shrl
outsl
and
out
adc
push
sub
mov
test
lods
push
or
mov
inc
std
imul
mov
stc
or
aam
pop
mov
sub
cs
dec
xchg
int3
fldln2
mov
and
aad
ret
dec
enter
fwait
arpl
movb
jecxz
xor
arpl
jmp
pop
jb
sarl
xchg
jmp
subb
inc
pushf
negb
adc
int
mov
mov
dec
int
mov
movsb
loope
aaa
dec
push
ds
sar
and
mov
pusha
incb
adc
cli
inc
cmp
iret
or
xchg
sub
push
cltd
scas
aaa
cli
lret
inc
subl
das
or
fwait
mov
adc
iret
dec
sbbl
mov
aad
mov
aas
fwait
pop
or
dec
prefetchnta
push
imul
fiaddl
adc
push
xor
pop
fstpt
in
sbb
jle
xchg
jle
ds
dec
or
push
jl
notb
mov
or
lahf
addr16
mov
xor
mov
mov
ret
test
lods
and
xor
mov
mov
lds
jg
mov
scas
test
nop
or
popf
pop
cmp
or
gs
add
adc
mov
les
xchg
nop
mov
mov
and
xlat
push
aas
rorb
push
adc
xor
pop
adc
mov
out
xchg
fildl
lds
rolb
or
pop
in
in
mov
sar
leave
pop
pop
and
dec
sbb
mov
insb
xor
mov
adc
sbb
dec
mov
xchg
or
mov
icebp
jbe
cmp
sbb
push
xchg
lods
add
fstl
and
scas
cltd
jns
clc
jp
div
adc
ss
or
sti
inc
pushf
xchg
jno
push
inc
add
rolb
and
push
cmp
cmp
mov
bound
mov
test
pusha
aam
xchg
test
jbe
ljmp
mov
outsb
lea
dec
fnsave
dec
pop
in
xor
sbb
mov
test
fimull
in
movsb
inc
adc
push
rorb
jle
imul
mov
hlt
cmp
pop
loope
push
sub
or
stc
add
loope
add
mov
and
mov
jnp
daa
cld
jbe
inc
test
pop
aas
leave
cmp
inc
aam
mov
ret
lods
sbb
addr16
lahf
mov
jno
daa
lret
inc
xchg
popa
mov
cwtl
cli
outsb
filds
fidivl
daa
in
jg
cltd
adc
inc
test
repz
cmpsl
cmp
push
lea
xchg
inc
in
sbb
hlt
cmpsl
ret
ficomps
ljmp
sbb
mov
dec
ss
xchg
ja
cmp
enter
sar
das
mov
and
inc
add
loope
jmp
xchg
sbb
mov
xchg
inc
test
mov
dec
jle
add
sub
fistl
dec
xor
mov
data16
and
stos
and
or
movsb
add
test
inc
jo
in
icebp
stc
jecxz
lret
jg
into
in
mov
enter
outsb
adc
adc
mov
jge
adc
das
cmpsb
xor
test
push
ficompl
ljmp
loop
es
xor
xchg
push
mov
ficoms
rep
or
inc
out
call
xchg
pushf
ret
out
incl
mov
and
js
dec
psrad
mov
dec
and
mov
adc
les
cmp
inc
test
ret
das
dec
arpl
pop
inc
push
or
mov
mov
outsb
cwtl
inc
imul
jmp
frstpm(287
jg
or
into
mov
mov
fstpl
sbb
cltd
push
sahf
das
lret
imul
push
or
scas
sub
push
or
lcall
inc
sbbb
shrb
outsl
jne
daa
mov
repz
and
and
arpl
fistpll
fsts
inc
mov
adc
pop
push
sar
ljmp
mov
cmpl
pop
sahf
push
add
imul
into
divps
js
arpl
jle
hlt
inc
mov
adc
pop
std
test
out
jb
fs
pop
jae
out
subl
cmp
les
testb
out
clc
std
ficomps
test
movsl
pop
xchg
scas
in
cmp
jnp
das
jbe
sub
dec
lcall
lret
cmp
pusha
scas
jle
nop
xchg
xor
outsl
mov
cmp
xor
add
out
mov
jo
xchg
je
les
mov
in
arpl
cmp
push
rol
shlb
and
stos
pushf
jb
in
gs
sub
adc
fdivrl
mov
push
push
dec
and
push
and
je
ja
insl
xchg
sbb
jp
push
lcall
fucomip
xchg
jg
pop
fdivl
int3
mov
clc
or
or
std
mov
cmp
cmp
out
xchg
xchg
ret
mov
iret
int
push
jmp
jecxz
fidivrs
lea
lea
mov
out
inc
xor
out
stos
in
es
push
fistps
add
hlt
inc
ja
std
xchg
ds
aad
jns
lods
and
gs
adc
mov
rcr
pop
jae
les
mov
or
xor
lahf
xchg
xor
repz
mov
pushf
std
sbbl
mov
std
pop
mov
iret
mov
pop
into
ret
in
out
aaa
cmp
clc
test
xchg
cs
xchg
xchg
pop
or
enter
in
lods
mov
das
jecxz
sbbl
sahf
add
xchg
cmp
or
xorb
cli
insl
mov
bound
push
jno
jbe
loopne
jb
push
inc
stc
inc
imul
mov
shll
jl
pop
pop
mov
adc
mov
mov
lahf
es
sub
jmp
stos
hlt
jb
pushf
cmp
jge
rcrl
push
pop
or
jge
ss
pop
push
mov
shll
fcmovne
jl
sbbl
xchg
aam
push
xor
test
es
dec
xor
in
pop
cmp
ja
in
lcall
ss
push
clc
popa
xchg
inc
leave
in
pop
iret
aas
xor
inc
sub
cmp
sub
mov
jp
pop
aad
rcll
mov
nop
ror
dec
inc
push
cmp
add
lcall
and
mov
movsb
pop
mov
jae
dec
and
push
sbb
and
push
ret
rcrb
aad
outsl
mov
and
popf
into
mov
push
shrl
mov
not
jae
shrl
shrl
xor
inc
pop
add
xchg
lds
lret
jbe
test
pop
lahf
sbb
and
xor
and
sub
movb
adc
je
mov
dec
mov
sti
push
and
inc
js
jnp
mov
outsb
rcrl
jae
cmp
aas
clc
sbb
jg
mov
rcrb
pop
pop
add
loopne
mov
pushf
xchg
inc
inc
ljmp
insl
mov
daa
xor
pusha
mov
in
ja
push
andl
push
ret
jns
jl
mov
aad
lahf
mov
mov
xlat
push
mov
mov
pop
scas
ror
adc
mov
sbb
cltd
xchg
rolb
or
outsl
fsubrs
popa
in
icebp
inc
lret
adc
inc
mov
cmp
rorl
adc
in
lcall
movsb
mov
xchg
out
inc
repz
movsl
push
jmp
inc
popf
shlb
push
in
hlt
sub
add
add
repz
adc
mov
ja
adc
and
addr16
xchg
ds
imul
imul
and
pop
fadds
and
sahf
mov
fimull
sbb
push
subl
clc
jle
add
cmpsb
or
jo
mov
add
and
jg
sbb
in
and
rorb
sarl
jp
push
xchg
lcall
dec
lea
lret
sbb
xorb
lock
dec
insb
fcoml
pop
mov
push
fsubp
pop
mov
iret
mov
repz
mov
xchg
std
push
jl
popf
mov
fs
cltd
inc
in
stos
pop
add
cs
xchg
loope
add
movb
daa
push
cmp
cmpsl
mov
mov
outsl
adc
mov
mov
inc
adc
xor
js
int3
movsb
mov
dec
pop
push
sbb
jnp
bound
pop
in
push
and
cltd
out
mov
jle
push
jecxz
mov
sbb
test
rclb
clc
je
jns
cmp
xchg
ds
test
dec
iret
adc
sbb
inc
push
mov
mov
fmull
loop
jmp
je,pt
inc
popa
lret
cmp
xchg
xorl
inc
jl
mov
sbb
cltd
xor
ja
in
int
jo
adc
mov
push
sub
mov
repnz
int
jnp
mov
shl
or
sub
adc
add
fs
mov
cltd
and
test
jle
sub
mov
popf
pusha
aad
xchg
push
jne,pt
and
sbb
rcrl
sbb
sub
xchg
pop
xchg
sbb
sub
xchg
pop
lea
negb
mov
xor
test
sarl
sub
lahf
jns
xlat
xor
or
pop
sti
xor
jecxz
mov
pop
xor
mov
es
push
pushf
testb
scas
dec
sbb
adcl
out
jge
mov
cmpl
mov
or
lahf
jbe
movsb
popf
scas
mov
test
es
mov
arpl
popf
jns
xchg
sbb
incb
sbb
lret
push
jae
mov
add
xchg
dec
mull
gs
mov
mov
add
mov
mov
mov
and
or
iret
in
mov
lcall
jmp
cmpsb
dec
mov
lret
push
clc
pop
lds
js
xchg
std
or
mov
pop
jnp
nop
incb
sarb
pop
pop
xchg
pop
dec
xor
cld
push
xchg
adc
inc
xor
and
incl
push
lret
test
sbb
push
or
sbb
test
adc
push
xor
xchg
scas
mov
fimull
add
popf
lods
mov
mov
pop
mul
mov
dec
mov
adc
mov
sbb
push
and
dec
sub
or
fcomps
inc
ljmp
jne
sub
or
or
sbb
inc
mov
xchg
and
xchg
inc
xlat
dec
inc
add
pusha
adc
lret
out
movsl
lock
adc
pop
mov
clc
fiaddl
adc
xor
test
mov
shll
addb
jmp
jb
dec
gs
lods
call
mov
cmp
push
into
repz
cmp
xchg
sar
cmpsb
ljmp
push
sbb
and
loop
rclb
stos
lretw
test
and
fisubl
jp
int3
jle
pop
test
movsb
divb
mov
cmc
incl
xor
mov
jnp
into
cwtl
or
sbb
cs
repnz
adc
dec
mov
out
mov
or
xor
sahf
mov
scas
mov
push
test
repz
je
call
adc
nop
dec
rcll
stc
jge
sbb
fcoms
testb
test
mov
xor
cmp
jnp
testb
cli
test
out
xchg
cmp
xchg
sbb
dec
mov
jge
mov
pop
jl
jbe
into
and
and
mov
sub
movq
sub
movsl
dec
bound
cld
ljmp
xchg
pusha
and
xchg
mov
inc
xchg
mov
lock
cli
ja
mov
mov
and
mov
or
sub
loop
jp
loop
jge
add
aad
jle
jmp
lods
dec
test
push
jno
add
shlb
xchg
out
push
add
adc
mov
dec
pop
out
push
loope
cld
bound
or
and
scas
loop
addr16
mov
clc
cmp
fimull
pushf
mov
jne
sahf
mov
add
mov
into
cmp
incb
add
mov
mov
cmpsl
and
clc
fildl
mov
inc
xchg
mov
leave
push
xchg
sbb
mov
push
pop
pop
loope
fcomps
aas
fcomi
adc
push
xchg
push
sub
mov
sub
jge
mov
loopne
out
mov
jbe
or
ljmp
xchg
sbb
fisttpll
orb
xor
insl
shrb
jle
mov
cmp
push
sbb
sbb
outsb
cli
add
fs
pop
dec
dec
andb
jno
mov
arpl
pop
sub
sahf
addr16
xchg
cmpsb
fistps
jmp
push
fs
in
inc
xor
nop
aam
jnp
out
mov
adc
jo
popf
add
inc
push
and
xor
and
xchg
cmp
sub
sub
xchg
inc
iret
inc
testb
in
int3
push
mov
aas
push
mov
xor
pop
je
push
mov
es
pop
movsl
cli
leave
mov
outsb
jno
pusha
in
and
or
lcall
test
std
push
aas
dec
test
cmpsl
and
scas
cmpsl
jecxz
push
jmp
sub
cmpsl
push
dec
lcall
jns
mov
mov
push
mov
ja
test
ret
add
mov
lcall
out
or
push
addb
ja
inc
add
sbb
icebp
fwait
push
sahf
mov
out
lods
sub
mov
and
orb
push
test
lret
pushl
mulb
cmpsl
inc
fsubp
fmul
sbb
les
cltd
mov
sbbl
js
inc
add
push
out
insb
aad
sti
and
cwtl
frstor
xchg
dec
bound
sbb
or
or
pop
outsb
xor
jb
dec
mov
enter
mov
fstpt
jge
inc
and
enter
xchg
loopne
int
hlt
mov
mov
jne
inc
and
jle
jg
fcomi
mov
mov
in
popf
xchg
inc
scas
icebp
mov
dec
lahf
push
ret
test
lcall
scas
cmp
xchg
testb
test
jnp
push
adc
dec
lock
rdtsc
jge
add
and
jb
stos
push
out
loope
lods
mov
scas
and
jecxz
xrelease
rclb
xchg
loop
cmpsl
jno
jnp
xor
xchg
dec
iret
xchg
into
fldenv
insl
mov
test
mov
mov
sub
mov
pop
jae
xchg
jg
cs
inc
bound
push
shl
push
mov
and
xor
pop
faddl
sbb
adc
mov
insb
mov
pop
in
and
test
ljmp
cmpsb
call
mov
pop
jle
xor
sub
divl
data16
or
movsl
sahf
xchg
out
es
int3
loop
mov
cmpl
dec
dec
and
pushaw
push
shrb
cs
adc
jno
fstp
or
xor
les
pop
imul
add
fisubrs
lahf
jge
mov
cmp
xlat
mov
mov
dec
mov
enter
sub
adc
cli
sti
fs
mov
mov
jmp
push
and
mov
outsb
push
popf
cmpsb
icebp
ljmp
jb
aad
add
enter
jbe
xor
mov
in
adc
sti
jae
xchg
mov
sbb
das
pop
icebp
iret
xor
mov
inc
dec
test
cmpsl
pop
pop
xchg
mul
fstl
imul
add
and
push
imul
pop
mov
inc
dec
jbe
pop
cmp
fdiv
rolb
push
lret
push
dec
sub
inc
push
iret
sti
inc
push
popa
xchg
jp
push
jno
mov
out
push
in
sub
and
and
mov
mov
in
sbb
push
adc
add
lea
xchg
xor
pop
cmpsb
inc
xchg
hlt
in
mov
je
rcr
in
sbb
xchg
xchg
mov
mov
mul
lcall
jmp
leave
bound
nop
je
dec
shl
pop
jg
jg
pop
enter
movsb
cli
or
popf
in
adc
aam
pop
lea
mov
xor
fwait
xchg
or
shlb
jns
icebp
std
xlat
ficompl
xchg
xchg
mov
mov
mov
jle
je
divl
xor
sbb
mov
stos
and
or
jle
out
test
pop
cmc
test
lahf
cmp
jg
ret
xchg
xlat
and
inc
xchg
and
pop
cmp
jae
es
and
int
popa
movsl
inc
jne
cmp
stos
imul
clc
sbb
pop
or
in
pop
lods
test
out
mov
ds
push
jl
mov
ja
bound
mov
push
mov
push
mov
adc
push
sbb
mov
loopne
jns
adc
or
sbb
mov
sub
sub
data16
mov
sub
rcr
push
repnz
mov
adc
mov
insb
add
pop
mul
scas
inc
in
pop
push
decb
push
or
push
clc
cmc
mov
sbb
mov
loopne
or
jg
adcb
jb
and
cmpsb
sub
mov
fstps
mov
xchg
push
stos
jg
cli
test
xchg
sbb
sub
sti
testl
ret
pop
mov
sbb
ret
jecxz
xor
addr16
jns
imul
xor
sahf
mov
adc
ror
popl
or
xchg
cmp
push
push
mov
adc
pop
shlb
ds
clc
and
pop
sahf
rolb
sbb
inc
inc
mov
std
test
and
push
or
sbb
inc
loop
stos
or
out
movb
loope
pusha
aas
movsb
shl
or
jno
lahf
mov
xlat
mov
fs
fsubrl
pop
jg
mov
dec
movsl
xchg
push
and
inc
pushf
sbb
xor
pop
push
jecxz
xchg
lea
ret
test
lahf
shll
dec
jae
mov
cmp
insl
xchg
sbb
pop
int3
cmp
out
or
iret
dec
outsl
lcall
in
cmp
cld
test
cmp
xor
inc
push
mov
int3
into
movsb
cmc
enter
mov
outsl
ljmp
cli
inc
rolb
movsl
jbe
inc
xlat
push
test
into
cwtl
jo
cmpsl
hlt
mov
and
jno
inc
jp
and
loopne
inc
mov
and
xchg
aaa
mov
xor
adc
cli
inc
pop
repnz
sub
sub
imul
inc
push
xlat
jns
test
mov
sub
inc
bound
nop
push
or
mov
out
ret
jbe
lahf
sub
push
repnz
imul
push
fs
shrl
lret
jo
add
mov
enter
addb
fildl
test
loop
js
push
scas
shrl
add
mov
cmp
adc
sbb
jb
out
add
cld
and
data16
gs
into
xor
rolb
js
inc
pop
jl
adc
adc
neg
mov
inc
jo
push
inc
dec
xor
les
nop
rcrb
stos
push
ret
fnop
inc
xchg
loope
hlt
lahf
je
xchg
mov
call
jno
or
imul
sti
pop
pop
pop
sti
mov
or
pop
hlt
push
xchg
popf
xchg
mov
xchg
jae
xchg
sbb
inc
cld
mov
loope
and
gs
and
cmp
or
je
mov
mov
movsb
mov
mov
or
push
mov
in
lea
or
outsb
cwtl
mov
inc
mov
sbbb
cmp
mov
push
jno
out
insl
ret
adc
push
mov
hlt
sub
or
jo
imul
and
shlb
jmp
andb
icebp
in
jae
mov
cmp
cwtl
roll
add
xchg
cmc
push
add
std
cmpb
movsl
popa
sbb
cwtl
popa
jecxz
mov
pop
ret
sub
ret
hlt
sbb
loopne
sbb
push
add
inc
adc
lahf
iret
dec
sub
add
inc
push
and
inc
cmpsb
cltd
and
lds
hlt
pop
aam
out
xor
mov
popa
shrb
gs
sub
ret
and
or
cmp
std
pushf
insb
mov
push
jns
mov
mov
cs
push
lods
mov
leave
mov
pop
cmp
ret
mov
ficompl
daa
cmpsb
push
pop
mov
jne
pushf
leave
outsl
xchg
pop
daa
mov
fs
mov
xor
push
in
insl
inc
andb
scas
cmpsb
pop
dec
inc
in
test
adc
sbb
add
mov
jno
sub
fistpll
cmpsl
jl
imul
mov
clc
lret
aas
mov
enter
ffreep
mov
cmp
sbb
mov
mov
push
jmp
out
jo
jbe
outsl
add
and
inc
xor
adc
stc
imul
adc
push
push
scas
push
out
into
fs
push
loopne
ja
adc
pshufw
aaa
fdivrl
cmpsl
pop
cs
sbb
or
in
ficoml
sahf
jle
sub
rcrb
and
outsb
push
inc
clc
lods
pop
sbbl
cmpsl
push
divb
mov
flds
cmp
int
lods
cmp
das
jbe
rol
fidivrs
es
or
stos
rol
xchg
in
aad
shlb
mov
add
icebp
add
cs
push
inc
lds
jecxz
stos
fists
pop
jmp
adc
sar
mov
jecxz
fwait
add
push
rcll
adc
addr16
pop
mov
fnstcw
das
dec
mov
cwtl
in
or
fiaddl
insl
js
fmull
lcall
lret
or
je
jecxz
jbe
xor
pop
cwtl
cs
or
fneni(8087
test
mov
mov
ret
pusha
or
sub
fbld
sub
mov
jp
cwtl
xorl
stos
lahf
mov
popa
adc
push
cli
xchg
pop
popa
fists
test
lea
imul
sub
rclb
ljmp
sti
jb
xor
xor
into
sbb
sbb
dec
lods
dec
mov
cltd
sub
add
mov
addr16
insw
inc
inc
movsb
jb
leave
xchg
add
add
pop
lret
repz
loop
and
jmp
inc
xchg
insl
add
cmpsl
or
xor
xor
pop
cmp
mov
movsl
cmpsl
sub
sbb
cmc
and
popa
sbb
xchg
dec
fisubrl
cmp
divl
pop
test
adc
std
fcompl
addr16
mov
add
iret
nop
aam
and
adc
insb
jle
or
and
mov
cmp
jmp
inc
je
bound
add
mov
jo
add
cmp
jae
add
adc
xchg
mov
xlat
jmp
cltd
test
std
fcmovb
cmp
test
dec
pop
cmp
push
jbe
fs
movsb
mov
add
fadd
mov
ret
mov
pop
pop
pop
sub
cmp
test
insb
fistpl
cmp
jbe
scas
mov
rcll
cmc
sbb
jbe
dec
lea
adc
dec
pop
push
dec
cli
xchg
sub
cltd
loop
pop
ljmp
mov
data16
and
push
je
xor
mov
push
xchg
imul
or
pop
sbb
stos
bound
and
push
jno
loopne
and
hlt
ss
ret
fisubrl
icebp
popf
stos
dec
push
stc
mov
dec
or
xchg
pop
dec
leave
repnz
push
add
adc
popa
packuswb
pop
xor
imul
sbb
out
xchg
and
mov
cmc
cld
add
in
sub
data16
or
or
mov
mov
add
orl
or
xchg
add
aas
cmpsl
and
and
jno
xlat
add
lret
js
sti
or
xor
mov
push
setae
popf
sbb
mov
fbstp
jge
mov
push
sbb
lods
dec
add
inc
adc
ds
xchg
js
cmpsl
sub
push
rcr
push
addb
aas
xchg
ret
add
push
mov
decb
fidivs
loopne
cmp
inc
push
loopne
or
mov
sbb
mov
jmp
adc
imul
xchg
sbbb
or
xor
mov
pop
aam
jae
mov
inc
icebp
or
imul
jle
adc
xchg
adc
mov
dec
movsl
and
push
or
ud2
fs
jmp
cmp
jbe
xchg
and
gs
mov
mov
add
lods
xorl
fidivs
outsb
pop
or
and
pop
fcmovb
loopne
push
orl
sub
push
lcall
mov
nop
jecxz,pt
pop
pop
popf
loopne
icebp
pusha
adc
cmp
ss
or
iret
sbb
fistpll
cltd
out
add
lods
icebp
push
adc
pop
add
and
cmp
jecxz
fwait
sub
add
pop
inc
ss
incl
push
cmpsl
dec
aad
sub
roll
vucomiss
pop
and
jb
push
add
loop
inc
cmpsb
popf
shl
sbb
in
sbb
sti
jmp
add
test
mov
cmp
and
fcompl
xor
mov
sub
fbld
in
jg
cmpsb
mov
fs
in
in
aas
mov
add
negl
and
gs
shll
pop
sbb
sbb
popa
and
jo
lahf
and
mov
imul
jno
mov
sub
mov
ds
aad
and
xchg
in
mov
aam
shl
fldcw
je
mov
or
cmp
push
dec
dec
test
jns
inc
ficomps
mov
sub
sub
movsb
sbb
adc
sarb
loope
out
jb
popf
xor
repnz
lea
dec
iret
push
imul
mov
xchg
mov
xchg
test
mov
cld
mov
fmull
cmpsb
inc
or
lret
insl
adc
sbb
xchg
inc
mov
xor
and
sbb
fdivrl
cmp
fwait
imul
fs
test
push
push
xchg
dec
mov
ja
lods
sbb
mov
into
sbb
mov
mov
adc
std
sbb
fsubrp
pop
xchg
and
pop
push
std
std
add
push
dec
sti
lods
add
lds
stc
loope
push
sbb
fildl
hlt
dec
out
loope
les
loope
sub
sbb
push
mov
outsb
push
popa
xchg
cmp
jno
out
fs
or
lcall
inc
xchg
push
incl
pusha
jae
ret
cs
aad
jle
and
and
cmpsb
mov
mov
pop
fcomip
jo
or
dec
lock
jle
fistps
push
hlt
mov
add
jae
aad
sbb
cmpsl
scas
in
inc
lahf
sbb
jmp
mov
aaa
insl
jns
cltd
mov
sub
mov
sub
stc
adc
clc
mov
movsl
and
icebp
xor
fcmovnbe
mov
dec
mov
pusha
outsl
out
sti
sbb
call
cmpsb
pusha
iret
push
cwtl
jnp
out
in
loope
lock
sbb
insl
fisubl
mov
std
jle
mov
lret
mov
push
into
aad
push
push
and
add
repz
and
sbbb
cmpsb
cli
ljmp
mov
xor
fucom
call
pusha
test
mov
jp
cmpb
mov
sbb
or
adc
fwait
pop
addr16
push
icebp
sub
in
xor
fnstenv
pusha
lds
aad
mov
pop
add
fs
addr16
in
cmp
and
xchg
dec
bound
xor
or
ds
adc
dec
std
das
pop
xchg
nop
ljmp
sti
cmp
sbb
ret
mov
jae
in
and
sahf
jl
jg
repnz
xlat
iret
and
fcomip
fsubrl
test
adc
mov
dec
mov
cmp
or
aaa
out
lods
mov
and
stos
cmpsb
sbb
xchg
cmc
out
neg
in
into
leave
pop
fs
loopne
gs
xor
push
cmp
pop
arpl
xchg
sub
jbe
popa
jae
inc
inc
pop
sbb
outsl
adc
inc
mov
orl
or
aas
jo
and
daa
sarb
and
inc
add
or
inc
imul
jp
leave
mov
cmp
lahf
and
jne
dec
sbb
sub
jbe
stc
cs
test
ljmp
test
sub
stc
cmp
cld
shrb
inc
sbb
imul
pop
sub
pushl
enter
and
pop
lods
adc
pop
mov
mov
in
pop
pop
subb
xchg
push
xchg
or
mov
xor
and
outsl
pushf
mov
inc
rol
inc
xchg
sub
das
les
pop
xor
hlt
call
shll
ds
sub
mov
loopne
dec
xor
fstpt
mov
mov
mov
xchg
jl
ja
and
jbe
jle
fcmovnu
clc
push
out
sub
cld
call
lea
faddl
pop
jnp
inc
sbb
jle
in
xchg
pop
push
adc
loopne
aaa
cmp
cmp
lock
push
test
jb
cwtl
fdiv
cwtl
out
jb
cmp
lods
fucomi
nop
jae
pop
sub
cmp
and
inc
push
mov
xchg
es
or
fsubs
pop
aam
ret
out
mov
mov
cmp
ds
ds
inc
ljmp
add
push
xor
push
rcll
push
xchg
push
lret
scas
pushf
jno
rorl
xlat
mov
cli
fsubl
dec
mov
loope
insb
cmp
fucomip
adc
and
popf
scas
je
ret
js
cmp
insb
lock
mov
scas
in
and
add
out
push
mov
ljmp
push
pop
sbbl
xchg
pop
fimull
adc
adc
sbb
or
fidivl
push
adc
xlat
jb
cmp
mov
into
dec
aaa
in
xchg
scas
and
sub
lods
dec
and
ret
add
shlb
adc
mov
jbe
out
scas
mov
stc
das
xchg
jle
fsubrl
hlt
jb
push
in
mov
je
aaa
fisttpll
and
ret
icebp
push
into
jmp
cmp
jns
aam
mov
out
sub
out
inc
pop
scas
dec
pop
out
jmp
push
test
mov
or
call
cld
pop
orb
pop
or
lods
jp
ljmp
or
rcrl
push
dec
xor
push
dec
mov
mov
outsl
insl
lret
pusha
out
lods
stos
xor
adc
inc
inc
int3
movsl
sbb
jle
pop
test
xlat
subl
js
push
iret
inc
sbb
xchg
js
push
jae
lock
rcrl
push
mov
nop
cs
rep
and
call
fucom
dec
lret
and
mov
push
call
xorb
and
arpl
ja
in
pop
call
pushf
adc
pop
fisubrl
cmc
outsb
dec
pop
insb
lcall
jmp
push
insb
sub
lods
test
popa
mov
insl
dec
mov
and
pusha
and
enter
ret
mov
insb
int
xor
inc
dec
hlt
push
mov
les
jle
and
push
jbe
pop
mov
lods
xor
adc
xor
lds
jge
cld
mov
daa
hlt
and
clc
jg
call
sub
lock
out
or
xchg
movsb
jl
push
aam
mov
jmp
or
lds
xorl
inc
xor
xlat
subb
sub
sub
arpl
and
adc
push
push
outsl
cmc
rcr
sub
daa
cld
fldenv
jo
clc
ficomps
xchg
scas
es
xchg
shlb
push
jbe
push
add
test
push
cwtl
xchg
out
mov
xor
in
inc
ret
leave
icebp
popf
adc
mov
pop
push
call
enter
push
xor
stc
ret
fistps
aad
xchg
mov
sub
dec
addr16
test
in
jns
or
movsl
or
dec
clc
test
jno
xlat
mov
movq
movsb
jmp
adc
aad
mov
lcall
les
mov
push
clc
or
add
dec
data16
es
popf
ja
sub
addr16
out
cld
repz
or
mov
xchg
pop
icebp
fstpl
pop
push
mov
lret
and
enter
mov
and
pop
ret
or
dec
xlat
int3
pushf
loop
mov
xchg
or
mul
inc
xchg
mov
xor
pop
shlb
adc
scas
test
lret
xchg
adc
cmp
test
pop
dec
scas
aaa
cltd
xchg
jmp
push
daa
mov
pop
sub
mov
rolb
test
notb
adc
stc
iret
dec
out
sbb
es
push
sbb
pop
test
adc
sarb
cwtl
pop
shll
mulb
in
dec
or
or
mov
jne
repnz
out
pop
xor
outsl
sbbb
testl
adc
and
inc
repz
sbb
cmp
push
jle
xchg
loop
mov
mov
out
or
call
add
add
dec
mov
jecxz
jo
das
mov
test
xlat
xchg
fxch
fstl
das
insb
push
xchg
push
faddp
push
sub
fwait
add
sub
or
adc
inc
mov
ljmp
sarb
lcall
jo,pn
jbe
sub
es
je
popf
mov
sbb
cmp
inc
inc
cld
xchg
adc
aad
xchg
xor
aam
and
jl
jbe
mov
mov
daa
in
xlat
mov
dec
mov
sub
or
lea
ror
je
fistps
xchg
pusha
clc
cmp
jb
xor
fadds
xor
xlat
mov
lock
dec
std
es
xchg
int
lahf
cmp
mov
fdivrl
add
repnz
and
dec
dec
sbb
inc
mov
fsts
and
jnp
xor
push
call
sub
or
dec
and
sub
add
or
xchg
dec
roll
sub
push
sub
jbe
lock
push
push
les
mov
loope
push
push
jo
pop
orb
sbb
mov
xchg
push
sbbb
aad
mov
mov
aam
xchg
outsb
cld
mov
scas
jo
es
jmp
pop
dec
pop
add
in
inc
pushf
inc
in
nop
xor
pushf
and
scas
int3
lahf
add
push
scas
push
push
xchg
push
fsts
je
cmp
pop
movsl
push
enter
sub
mov
lret
adc
repz
ljmp
jmp
xchg
sahf
cltd
shrb
or
sahf
xchg
mov
mov
inc
lret
sub
and
popa
jle
and
jae
xor
outsb
int
iret
lods
xor
adc
mov
xor
xor
cmp
xchg
mov
into
xchg
insl
or
dec
push
in
xchg
out
dec
mov
jo
push
pop
inc
out
ret
mov
xor
xor
dec
adc
lods
cmp
mov
mov
mov
mov
xchg
jnp
stc
sahf
mov
aam
ja
cmp
loop
mov
xchg
sbb
push
and
jb
push
cwtl
xor
sbb
dec
sbb
sbb
sub
addr16
pop
dec
xorl
daa
test
xchg
adcl
stc
imul
sub
cmp
and
or
stc
adc
call
movsl
sub
cmpsb
push
mov
push
adc
jbe
adc
cmpsb
jne
mov
adc
std
mov
xchg
insl
mov
outsb
mov
ss
xchg
jg
mov
mov
mov
inc
lea
dec
mov
xor
sub
int
lea
je
and
aad
iret
jns
dec
das
lcall
in
fcoms
fsubl
dec
lock
pop
and
lds
test
enter
sub
jg
daa
inc
or
mov
mov
ret
aam
inc
xor
loop
out
add
push
jne
dec
daa
loopne
fnsave
mov
iret
push
inc
cmp
mov
imul
sbb
andl
lea
jnp
inc
cs
cmp
in
roll
gs
mov
jmp
or
jecxz
fbld
xchg
aad
push
jnp
arpl
clc
cmpsb
repnz
xchg
int
jne
xor
or
fsubrs
xchg
cmp
out
ljmp
mov
dec
shrb
sub
mov
and
out
sub
shrb
mov
repz
sbb
xor
xchg
jo
or
jno
hlt
mov
loop
fwait
or
loopne
call
inc
lock
mov
insb
inc
or
test
bound
or
sti
xor
cmp
jne
lods
scas
cmp
ja
lret
or
dec
jbe
xor
das
dec
cmp
outsb
scas
shlb
add
pop
push
ficoml
cli
and
fidivrs
cs
ljmp
mov
out
push
out
dec
adc
mov
jnp
and
inc
insl
aaa
xchg
push
popf
sbb
repz
imul
aad
ffreep
sub
push
fwait
out
jae
sub
xchg
dec
pushf
xor
fisttpll
fcompl
cmp
in
fistpll
inc
adc
idiv
mov
out
lods
cld
sbb
sarl
push
jae
jge
daa
fwait
mov
jecxz
loope
cwtl
mov
fimull
jnp
pop
push
adc
xchg
ret
mov
mov
mov
mov
fistps
gs
les
stos
test
aas
mov
cs
dec
add
dec
and
outsl
push
xor
in
mov
pop
insb
jle
xchg
mov
pop
js
add
sub
and
pop
iret
leave
mov
aam
push
push
sub
xchg
mov
je
and
fnsave
loop
imul
dec
inc
cmpsl
mov
std
xchg
pop
jno
popa
or
or
mov
stc
cld
inc
movb
mov
xchg
sub
cmpsb
incl
push
lcall
xbegin
mov
mov
lea
mov
xor
jnp
add
orl
or
dec
movsl
xor
rorl
pop
dec
jmp
push
jbe
jg
adc
andl
add
xlat
mov
fisttpll
inc
into
mov
jecxz
cwtl
pushf
lods
mov
inc
ljmp
mov
imul
dec
rclb
mov
ljmp
stc
stc
loopne
hlt
lods
fildll
in
add
or
pop
les
inc
mov
xor
xchg
lret
xchg
ss
add
mov
lods
into
xor
push
xor
sub
rcrl
xor
loop
mov
testl
or
mov
add
jmp
aaa
sbb
and
jmp
sbb
sbb
test
cmp
fwait
jp
out
add
pop
cmpsb
mov
dec
mov
adc
ds
ss
aaa
addl
jecxz
popf
xor
vfnmsub132ss
repnz
fnstsw
mov
xor
iret
xor
cwtl
cmp
pop
jecxz
inc
lds
out
sub
es
xchg
pop
cmp
xlat
mov
dec
mov
or
mov
ds
pop
call
mov
fisubrs
nop
and
fcomps
sbb
mov
cs
jge
std
aam
adc
mov
cmpsl
cmp
ja
adc
dec
bound
cmp
jle
jo
maxps
mov
daa
jle
adc
pop
andb
inc
sbbl
out
shrb
bnd
pop
out
pop
inc
jecxz
add
lock
data16
pop
push
stos
outsl
inc
mov
or
lcall
push
push
inc
cltd
je
dec
cmp
push
in
jge
sbb
mov
mov
or
jo
cli
mov
sbb
cltd
test
shr
or
mov
lret
and
mov
imul
movsl
movsl
adc
inc
jns
lods
push
cltd
mov
test
sbb
and
mov
push
cltd
adc
in
int3
add
mov
dec
adcb
push
mov
mov
incb
add
sub
fs
js
mov
mov
add
xor
aam
fsubr
pop
pusha
pop
jo
in
jo
push
xchg
and
pop
xor
lahf
in
mov
int3
out
test
xor
bound
and
lret
dec
dec
scas
sbb
popl
or
lea
lock
movsl
mov
xchg
hlt
clc
push
scas
flds
sub
or
mov
inc
pop
and
or
int
and
xorb
pop
bnd
insb
pop
movsl
dec
int
xchg
cltd
jo
push
into
adc
jae
fbstp
sahf
jb
sbbl
xchg
das
mov
jnp
dec
inc
jle
mov
ds
push
test
je
push
push
jmp
in
or
inc
inc
lea
or
aas
jecxz
xchg
xchg
inc
je
xchg
in
dec
repz
lds
pop
add
in
aad
in
inc
sub
add
push
loope
mov
mov
loopne
lock
rcr
jb
sbb
jbe
mov
mov
mov
push
enter
pusha
jnp
clc
dec
adc
filds
mov
mov
cmp
inc
inc
xchg
dec
inc
cmpsb
faddl
pop
or
sbb
aas
mov
das
adc
xchg
jle
dec
and
gs
xor
adc
sbb
daa
mov
push
and
add
inc
enter
enter
fldl
lahf
lahf
mov
out
mov
mov
or
ret
add
loopne
scas
xchg
push
jg
aas
xlat
in
outsb
hlt
scas
mov
mov
ret
popf
andb
sub
cld
cli
sub
dec
sub
pushl
sub
sbb
pop
push
mov
test
stos
xor
pusha
add
rolb
scas
adc
mov
in
pushl
int3
cmp
or
push
or
push
ljmp
roll
scas
mov
xor
inc
std
push
xchg
and
xchg
or
xchg
movsb
push
ret
fldcw
jg
gs
fiaddl
jmp
push
mov
cwtl
aam
and
pop
jg
fnstenv
in
decb
xor
cmp
sub
or
lret
in
or
out
dec
sub
jo
cmpxchg
lret
push
ficompl
and
jg
std
popa
fildl
inc
xor
call
shll
xchg
sub
fidivrs
das
sbb
pop
popa
ss
and
imul
sbb
pop
imul
rorl
aaa
loop
aam
mov
ja
cli
sbb
loope
mov
das
inc
js
lcall
aad
xor
js
lods
jne
in
xchg
jns
in
jmp
ljmp
fmull
shll
dec
cmp
mov
repz
fs
out
in
add
subl
mov
je
ficompl
cmp
fnstcw
fbld
sub
xchg
mov
or
ficomps
aam
sub
imul
mov
clc
cmpsb
aaa
aaa
dec
fsincos
and
xor
mov
daa
call
orb
popa
cmpb
dec
mov
gs
popf
pop
xor
xchg
push
jge
dec
lea
loope
cli
es
call
je
mov
popf
dec
xchg
adc
mov
mov
shlb
popa
leave
cmp
sub
jge
jne
xor
pop
sub
je
mov
add
ds
enter
jnp
push
or
push
mov
sbb
and
inc
cmp
subb
inc
fildl
loop
pop
or
cmpsl
mov
out
fcomps
xor
sbb
movsb
fildl
hlt
push
xchg
daa
or
inc
fcoml
lret
dec
and
in
jns
movl
cmpsb
cld
outsl
inc
mov
addr16
hlt
clc
cli
mov
inc
mov
jp
nop
scas
movsb
test
js
loop
mov
cmp
push
push
lods
dec
aad
sub
cmc
popa
add
cmp
fimull
add
loopne
sbb
lahf
or
sub
hlt
insl
jle
jecxz
aad
adc
push
outsb
sub
push
jae
and
pop
fimull
add
adc
popa
pop
dec
not
adc
sbb
call
push
andl
je
mov
testb
fcmovnbe
mulb
stos
xor
lret
daa
cmp
in
dec
cmpsl
jns
aas
inc
jp
mov
es
jo
mov
cmpsl
hlt
mov
rcll
jbe
jmp
test
mov
dec
stc
rcl
rol
fsubrl
sub
in
ja
and
mov
xor
jnp
sub
pushf
popf
stc
sar
pop
dec
lahf
jae
xorl
xchg
jp
nop
xchg
lcall
push
ficomps
jnp
in
js
push
mov
jmp
push
sub
xchg
movsb
pop
inc
popf
xor
ret
cs
pop
sub
jp
xor
pop
dec
imul
icebp
shrl
pusha
fwait
xchg
cmpsb
mov
adc
or
mov
lret
mov
pop
dec
mov
jo
incl
cmc
sbb
adc
fiaddl
andb
or
orl
inc
fsubrl
dec
mov
pop
sub
jl
daa
in
iret
fs
rolb
dec
jp
mov
aas
leave
in
cltd
js
pop
cmpsb
repnz
jno
cmpsl
sbb
imul
movsb
or
xchg
popf
push
jmp
mov
mov
cmp
cmp
jmp
jno
aam
adc
jle
fimuls
xlat
and
push
jge
mov
stos
in
je
push
leave
movsl
das
pop
mov
rol
sbb
rorl
loop
push
popa
pop
pop
pop
insl
dec
push
in
mov
xchg
icebp
lea
xor
mov
test
out
xchg
cmp
subb
stc
jecxz
pop
pop
ret
popf
xor
sti
outsl
ret
movsb
dec
iret
int
adc
jno
repz
test
adc
pop
scas
iret
sbb
outsb
fnstenv
xchg
pop
inc
pop
loopne
xor
scas
cmc
or
inc
pop
scas
iret
fdivr
ss
jmp
shlb
into
loop
mov
pop
es
stc
stos
popa
and
adc
push
mov
xchg
lods
pushl
ja
ljmp
mov
test
stc
xor
pop
xchg
push
or
lret
gs
incl
xor
inc
and
cmpsb
cmp
lods
mov
int3
arpl
mov
or
popf
push
sub
mov
push
mov
xchg
or
daa
adc
xor
xor
push
cvttps2pi
cs
add
pop
in
inc
rcrb
mov
mov
jp
repnz
inc
sar
xor
sbb
adc
decb
xor
call
cwtl
iret
pop
pop
cmp
or
mov
in
scas
loope
lahf
shrl
push
por
movsb
cmp
sub
lea
xor
insb
xor
jecxz
cwtl
dec
xchg
dec
add
in
jl
jecxz
loop
fisttpll
sti
cmp
pop
sub
mov
cmp
mov
jbe
repz
adc
mov
sbb
icebp
loopne
in
ret
sbb
out
mov
xchg
sbb
inc
test
int3
push
xor
mov
sub
jb
mov
daa
into
pop
mov
xor
dec
inc
pop
xchg
cltd
cltd
mov
ja
add
rcrb
push
or
sub
jb
dec
sahf
mov
adc
push
lea
cs
sub
jge
sbb
pop
sarl
shll
and
adc
pop
pop
daa
mov
cli
mov
cld
in
inc
pop
popa
jle
adc
ja
xlat
addr16
xchg
mov
jmp
adc
data16
push
mov
aad
dec
cs
push
addr16
cwtl
mov
out
jb
dec
xor
daa
sub
leave
addr16
and
jne
sbb
call
adc
rcrb
mov
cmp
loopne
test
fistps
add
xorps
push
data16
push
and
ja
lea
sub
shlb
icebp
pop
cmp
add
not
mov
fwait
xor
xchg
aad
shll
inc
pop
push
sub
pushf
ret
xcrypt-ecb
cmpsl
por
test
lret
add
nop
pop
mov
dec
xchg
sbb
add
fcmovnbe
sahf
xchg
je
mov
sub
enter
mov
aam
insb
scas
lods
mov
fadds
jo
es
in
sahf
adcb
xchg
inc
or
fs
imul
mov
icebp
xchg
outsl
xchg
jb
idiv
lahf
lret
movsb
inc
push
dec
mov
cmp
in
insb
push
mov
bswap
and
out
lods
cld
dec
test
sub
cmp
stos
fcmovb
xor
adc
fcoml
sbb
pop
call
mov
xchg
clc
jno
hlt
cmp
testl
daa
js
repnz
cltd
jae
xchg
test
or
adc
and
into
ret
and
lods
push
aam
mov
test
les
jl
test
pop
movb
adc
in
mov
shl
daa
cli
mov
sub
dec
cli
addr16
out
out
jmp
xchg
inc
xor
jle
push
pop
aam
ja
add
push
inc
xchg
nop
lret
js
xchg
or
jg
xchg
sarl
mov
sahf
mov
xor
push
shll
stos
je
adcb
push
orl
repz
adc
iret
adc
jnp
lahf
outsl
fdivl
sbb
sub
js
mov
cmpsl
mov
pop
add
push
push
push
cli
cltd
xchg
in
adcb
add
jg
in
ret
sbb
inc
inc
int3
jo
jmp
or
cmp
mov
cmp
test
sub
dec
iret
lods
push
nopl
dec
sarl
jns
push
push
gs
scas
test
out
push
mov
sbb
inc
jno
xchg
sbb
or
movsb
daa
mov
ja
das
jge
inc
aad
in
xchg
jne
mov
mov
int
je
jmp
pop
mov
into
jb
pop
std
or
jne
mov
jae
call
fstpl
out
or
push
jg
arpl
stos
mov
xlat
xlat
mov
movsl
push
rcl
pusha
fistpl
add
dec
call
mov
inc
lock
xchg
pop
in
xchg
sbb
test
std
xchg
fdivrs
adc
xchg
aam
inc
cmc
pop
mov
jl
mov
dec
pop
in
movsb
lea
bound
jecxz
arpl
pop
orl
pop
xchg
lcall
adc
mov
popl
into
frstor
inc
enter
psubw
stos
subl
arpl
or
mov
loopne
dec
pop
jae
clc
orb
dec
notl
and
fbld
sub
dec
sbb
push
xor
dec
icebp
jecxz
xchg
sub
sbb
outsl
sbb
cmp
insb
xchg
in
xor
js
xchg
jmp
dec
aas
adcl
and
movsl
lods
enter
xchg
xor
addr16
scas
mov
scas
das
cltd
pop
in
mov
push
insb
xor
ret
ja
mov
cld
sub
or
lods
rcr
and
shlb
and
pop
mov
xchg
mov
outsb
mov
das
cmpsb
fs
adc
pop
xor
cmpsb
cmp
or
into
sub
xchg
inc
push
xchg
std
fadds
lret
pushf
xor
lods
lret
mov
lret
rorl
popa
sub
pop
xchg
aad
mov
sbb
inc
cmp
push
jmp
pop
clc
imul
mov
xlat
inc
ret
insl
mov
mov
divl
push
push
mov
sbb
sahf
scas
jno
sbb
dec
mov
xchg
dec
push
jmp
mov
stc
pop
lds
mov
repnz
push
sbb
mov
jne
push
cmc
ret
jbe
or
jp
mov
mov
or
iret
lret
dec
cmp
imul
out
dec
xor
inc
mov
bound
loope
faddl
outsb
ret
data16
sbb
in
pop
mov
in
mov
mov
mov
outsl
and
pushf
pop
cmp
mov
movsl
es
pop
fucom
add
icebp
out
xchg
repz
mov
ret
stc
push
cmc
inc
shr
pusha
callw
pop
ja
rcrl
andl
sub
cmp
jb
leave
xchg
or
add
jle
xlat
lods
loopne
fstpl
scas
mov
repz
mov
mov
scas
pop
in
pop
sub
mov
pop
jae
fstpt
outsl
pop
int
stos
sbb
xchg
cwtl
ret
mov
sub
adc
dec
xchg
mov
mov
mov
push
repnz
nop
mov
jns
xlat
add
mov
xchg
fildll
fwait
xchg
jl
dec
bound
filds
and
shlb
or
mov
dec
jl
neg
mov
movsb
inc
fsubrs
xchg
sbb
mov
add
jno
push
test
push
mov
push
jae
dec
push
pop
mov
mov
in
test
or
xchg
in
mov
sbb
aaa
push
divb
ret
jmp
addr16
xorb
jo
jno
xor
in
jg
push
xor
push
push
mov
insl
mov
pop
push
rclb
jae
mov
mov
pop
rcrb
icebp
or
das
leave
lds
leave
imul
cmp
shlb
and
pop
es
out
dec
loope
mov
jge
push
cmp
bound
scas
negb
lahf
cmc
mov
int3
repnz
ja
sbb
xchg
mov
pop
int3
insl
jl
xlat
lahf
inc
shlb
adcl
xor
hlt
aas
rorb
push
stos
les
xchg
testl
inc
pop
xchg
imul
adc
sbb
mov
enter
aam
rclb
outsb
sub
xchg
outsb
aad
fwait
icebp
lret
andb
xrelease
inc
fnstcw
xchg
sub
insb
gs
fs
lret
out
fnsave
cltd
cmp
nop
enter
mov
adc
mov
sbb
ficompl
orl
in
jae
lret
int3
and
loope
outsl
mov
and
pop
push
sbb
loop
cs
jns
xor
mov
aad
in
sbb
add
xchg
mov
add
jecxz
mov
mov
shll
repnz
lret
popa
sbb
adc
inc
push
jmp
mov
xchg
pop
jge
cmp
jecxz
daa
cmc
aad
call
in
cmp
or
es
push
js
ffreep
arpl
mov
sub
jb
fisubs
shlb
outsl
push
das
jbe
cmp
das
or
mov
mov
out
mov
jmp
push
fdivs
repz
lcall
jne
shlb
mov
shlb
movb
lea
inc
hlt
lds
in
leave
dec
xor
aas
fwait
ljmp
sub
inc
and
scas
cmp
jns
add
jmp
jg
inc
sub
ljmp
fwait
dec
loop
mov
xlat
jno
xchg
cmpsb
add
lcall
jbe
shrl
cmp
xchg
loop
xchg
xor
adc
addl
add
call
mov
cli
jg
rcrb
add
js
xchg
je
add
jnp
fsts
and
fmull
cmp
fisttps
stos
aas
daa
xor
out
pushf
ja
bound
pusha
jno
imul
jbe
adc
xor
in
mov
dec
lods
sbb
fadd
push
popf
xor
xchg
nop
lods
ds
inc
add
or
jne
and
adc
mov
into
jno
push
lcall
loope
or
addr16
mov
inc
adc
stos
mov
lock
mov
sbb
call
mov
shlb
inc
ret
mov
int3
mov
xchg
sbb
pop
stc
adc
int3
scas
les
mov
enter
mov
sbb
pop
imul
pop
in
mov
mov
stos
lea
test
mov
push
and
mov
pusha
add
pop
inc
push
cmp
xor
jo
insl
adc
push
jge
pop
out
pop
push
xor
sub
inc
jle
sbb
gs
into
hlt
push
aas
ss
data16
je
cld
testl
mov
lret
imull
sbb
dec
in
jge
js
or
xchg
pop
push
inc
test
mov
call
dec
inc
call
push
lock
mov
push
fcomp
es
test
push
sbb
scas
pop
dec
hlt
imul
mov
xchg
lods
xchg
aas
into
or
pop
xchg
and
push
cvtdq2ps
pop
sub
pop
stos
insb
cmpsb
add
pop
addr16
push
mov
sub
fwait
dec
cmc
test
sub
push
mov
stos
popf
test
xor
mov
inc
add
cmc
xor
inc
cmp
mov
mov
adc
pop
lock
pop
xchg
adc
fimull
pop
jno
jecxz
xchg
popf
shl
xchg
pop
pop
jecxz
or
test
jp
xchg
or
xor
fidivrs
jbe
bound
push
xchg
mov
jle
into
enter
lahf
xchg
pop
pop
inc
imul
ljmp
pause
bswap
cmp
pop
out
jns
add
js
cmp
in
dec
stos
fs
scas
mov
and
cmp
sub
and
dec
and
stos
or
mov
jne
jns
cmp
shlb
and
add
jmp
sub
xor
xor
xor
or
inc
adc
inc
xor
cmp
ds
in
je
jle
mov
mov
test
outsb
xchg
adc
pop
sarb
out
adc
sahf
push
xlat
mov
xchg
orl
add
push
aam
pop
ss
pusha
cmpsl
add
shrb
sub
dec
cmpsl
addr16
lret
stos
fsubrs
or
xorb
pop
loop
pop
mov
pushl
out
jmp
sub
ds
aas
dec
insl
ljmp
mov
push
mov
aad
inc
movsl
fcmove
repz
icebp
pop
mov
je
lock
loopne
jno
test
push
sarl
dec
loop
and
jo
adc
and
lods
inc
sbb
movsl
jecxz
popa
inc
dec
or
mov
sbb
add
jge
and
outsl
jae
jg
jp
dec
and
xchg
incb
gs
hlt
dec
ds
inc
test
lods
repnz
in
mov
fadds
jmp
adc
add
adc
inc
std
aam
push
imul
loope
out
data16
sahf
mov
push
push
sbb
out
dec
fxam
ljmp
stc
jg
pop
sbb
test
pop
xor
push
inc
pop
push
fidivrs
testb
xchg
jno
xor
ss
std
dec
push
add
push
fmull
ss
sbb
cwtl
adc
addr16
fbld
out
xchg
dec
arpl
mov
sbb
add
sbb
push
into
sub
pop
repnz
sub
mov
fs
pop
cmpsb
stos
sbb
xchg
fdivs
jg
icebp
pop
stc
test
push
jnp
inc
mov
and
fnstenv
sub
movsl
aad
aaa
ret
arpl
hlt
mov
fiaddl
sbb
jno
dec
sbb
cltd
add
xchg
jbe
popa
add
push
jns
into
push
sbb
and
push
xchg
sbb
loopne
in
out
fcmovnu
int3
insl
cmp
shrl
cmp
lret
mov
movsl
cmc
pushf
mov
sarb
aam
or
cli
mov
mov
xor
push
mov
xor
mov
mov
or
adc
lret
outsb
jmp
pop
out
cmc
int
ljmp
adc
ror
inc
outsl
dec
adc
dec
sub
jae
ret
imul
mov
test
sbb
fidivrl
negl
push
insl
adc
inc
pop
dec
gs
jae
arpl
sar
cwtl
cld
mov
negb
add
jns
pop
xor
scas
adc
push
sbb
mov
push
inc
insl
mov
sbb
movb
gs
mov
int3
into
or
pop
imul
sahf
add
stc
popa
pop
cld
mov
out
pusha
imul
mov
xor
cmp
pushf
sahf
mov
xor
lock
lret
cmp
xlat
fsubs
push
inc
and
popa
daa
inc
punpckhwd
and
fisttps
or
loopne
xchg
inc
sbb
jne
sbb
mov
mov
lods
sti
mov
add
stos
fdivp
divb
iret
cmpsb
xchg
and
rorl
mov
xchg
test
dec
faddp
adc
in
mov
push
cmp
iret
test
push
in
es
fwait
stos
adc
push
cld
cwtl
pop
mov
pop
sbb
and
std
pop
mov
sbb
jnp
xchg
lods
xor
leave
xchg
rolb
sub
inc
sbb
mov
fs
outsl
es
add
adc
mov
mov
cmp
fldl
cmpsl
in
cmp
lret
insb
sbb
lock
dec
push
mov
or
inc
orl
xchg
jo
sub
dec
cmpsl
add
sub
mov
jnp
rorb
jb
jbe
shll
cmp
mov
jl
or
pop
sti
push
daa
nop
pop
pop
add
icebp
aad
add
push
pop
hlt
cltd
push
push
loope
fldt
xchg
decb
dec
inc
js
pushl
adc
outsl
pop
scas
lret
and
add
lock
stos
add
xor
and
pop
aaa
mov
xchg
jae
add
pop
and
xlat
push
push
cmp
jno
movsb
inc
xor
out
mov
outsb
jmp
adc
movl
adcb
imul
mov
pop
mov
test
pop
stos
xchg
add
das
sahf
mul
xchg
or
inc
pop
aam
dec
clc
jnp
fisttps
frstor
bound
jb
shrb
sub
jge
or
adc
mov
outsb
xchg
pusha
xchg
jno
das
sub
pop
pusha
out
popf
fldcw
and
rorb
cwtl
adc
xor
aaa
xlat
and
test
sbb
popf
mov
in
ljmp
add
loop
sub
cmp
fstpl
movntq
push
mov
pop
and
inc
jnp
pop
fildll
call
loopne
sarl
sbb
rol
rcr
inc
bound
test
rolb
mov
int
cmp
sbb
sti
mov
test
inc
dec
inc
add
jae
in
dec
movb
ja
out
scas
add
call
mov
mov
and
jb
push
imulb
sub
rorl
pop
rorb
jp
inc
shll
pop
xchg
pop
dec
addl
cs
je
enter
mov
in
sub
xor
jecxz
faddl
xor
adc
mov
pop
loopne
jbe
lcall
fs
idivl
mov
arpl
lods
adc
or
sub
mov
jecxz
dec
ficoml
in
stos
dec
cmc
mov
dec
push
flds
cli
into
adc
les
sbb
mov
in
xchg
leave
cli
popa
idivl
jne
xchg
fwait
jb
repnz
jg
ffree
jge
clc
pop
les
dec
test
addr16
jp
inc
adc
cli
mov
js
add
xchg
mov
jge
mov
add
incl
arpl
xchg
adc
shlb
hlt
and
pop
js
jge
hlt
and
mov
scas
xchg
enter
pusha
mov
sbb
subl
xchg
negb
fsubrp
inc
out
dec
mov
pop
cmp
xor
test
lea
inc
jmp
xchg
jae
push
jmp
call
dec
push
jbe
out
and
mov
cmpl
fs
xor
mov
gs
movlps
int3
jne
push
xor
mov
push
test
shll
imul
leave
enter
xchg
lock
out
lea
std
xor
lock
inc
cmp
cmpsl
cmc
leave
aad
dec
ja
or
outsb
xor
and
addr16
loopne
mov
or
sbb
scas
jl
repnz
cs
xchg
adc
push
daa
loop
push
aas
iret
jo
adc
lret
clc
fbld
test
mov
rorb
aam
test
jb
and
add
mov
push
sbb
dec
aam
in
stos
pusha
cltd
sbb
or
std
add
rcrb
lods
and
andb
pop
cwtl
popa
loope
cmp
in
push
mov
inc
lahf
ljmp
sarl
clc
xchg
mov
mov
js
insb
dec
shll
lds
xchg
lcall
mov
lret
stos
mov
repnz
push
push
mov
push
jno
andl
mov
loopne
pop
outsb
xor
mov
das
xchg
cwtl
jno
ljmp
fists
frstor
out
cld
test
cmp
sub
cmpb
xor
shl
fdivs
cwtl
les
mov
mov
std
jg
inc
mov
dec
dec
shlb
add
jecxz,pn
adc
add
repnz
push
xor
and
loope
and
cmpsb
mov
in
lods
stos
mov
mov
sub
mov
fistpll
mov
orb
xchg
pop
xor
add
push
imul
and
call
adc
and
push
sub
pushf
add
xor
int
xchg
roll
sub
addr16
push
mov
cltd
fsub
fcomp
sti
lock
xchg
pop
sbb
sbb
lahf
dec
jno
out
xchg
pop
inc
mov
dec
lea
arpl
mov
and
mov
into
test
fdivr
pop
pop
jp
cmc
jne
std
ss
push
fmull
pusha
xor
ret
pop
stos
test
test
mov
push
test
inc
add
cltd
sub
add
add
rcrl
loope
push
mov
add
mov
jae
push
aas
jg
loop
lret
adc
daa
out
addr16
cli
jnp
push
pop
mov
sbb
lea
add
stos
roll
cmpsl
mov
adc
and
cmpb
outsb
mov
popa
sub
push
inc
xchg
ljmp
aad
and
in
inc
jg
bound
movsl
fldt
dec
andb
xorl
dec
call
push
cmp
jle
lret
jbe
xor
and
dec
pop
or
lret
adc
scas
mov
andb
and
jle
fxch
shlb
vpextrw
lds
shrl
test
mov
sar
fcompl
pushl
fisubs
mov
adcb
adc
xor
aad
cld
xor
jns
test
outsb
push
adc
into
mov
push
dec
xchg
shl
fwait
popf
adc
in
jge
cmp
push
pop
xchg
sbb
pop
or
cmp
loope
ljmp
es
add
cmp
dec
mov
lsl
jecxz
shl
in
adc
test
mov
pop
cmp
mov
mov
loopne
ja
pop
arpl
inc
jb
cld
jmp
jbe
add
jb
xchg
mov
lcall
imul
subl
lea
mov
nop
or
sbb
jecxz
xor
lods
stc
dec
mov
mov
mov
subl
inc
or
xchg
xchg
mov
dec
ds
pop
mov
hlt
adc
lock
iret
adc
in
pusha
mov
fs
jne
movb
xor
das
insb
daa
call
or
mov
sbb
js
nop
mov
jge
push
jo
cmp
or
test
mov
lods
stc
cwtl
push
push
fdivrs
xor
dec
fiadds
mov
jne
push
mov
and
shl
jns
outsl
fwait
dec
enter
fwait
inc
add
dec
roll
je
and
pop
aam
test
dec
mov
xchg
mov
xor
jge
into
lods
push
lock
xchg
int3
dec
icebp
mov
popf
out
icebp
or
je
outsl
jmp
sbbl
xor
add
out
cmpsl
sbb
pmullw
and
adc
jne
xor
fldpi
out
lcall
cmpsb
das
jae
jge
cmp
sahf
cwtl
add
aas
insb
add
jp
lcall
sahf
dec
shlb
pop
scas
inc
inc
in
div
xchg
mov
call
repz
xchg
inc
push
test
pop
and
pop
mov
in
dec
daa
lcall
mov
loop
repz
mov
enter
cmp
stos
scas
xchg
and
cmp
push
push
test
mov
jle
jl
xchg
or
mov
lock
xor
insl
or
push
cld
and
mov
xchg
lds
pop
fsubl
sub
xor
jecxz
fcoms
out
leave
and
sar
xlat
jae
into
lods
ja
int
cmp
cmp
jo
mov
paddusw
ficoms
cwtl
pop
or
mov
sub
roll
jl
sub
xchg
sbb
xchg
mov
movsl
ret
xor
mov
adc
jnp
inc
lahf
loop
ss
pop
cmpb
insb
aam
shrl
pop
int3
cmpsb
les
cmp
or
jno
dec
dec
pop
or
cs
mov
pop
fisttps
les
repnz
stc
lcall
dec
dec
pop
or
call
cs
lods
iret
pop
ljmp
mov
out
cmp
xor
movsl
jne
lret
out
sbb
arpl
jne
pop
loopne
jb
scas
hlt
ljmp
mov
loop
daa
popa
mov
push
jno
scas
pop
rcl
push
int3
and
or
add
push
into
xor
jno
sbb
rcr
push
xchg
add
lret
jo
xchg
out
pop
sbb
sub
pop
sbb
jmp
inc
sub
enter
aas
ret
shrl
shll
mov
rorb
add
xchg
jo
dec
pop
shll
push
cmc
cmp
sbb
dec
scas
mov
loop
mov
divl
cmp
lret
mov
mov
fadds
daa
dec
enter
cmp
ret
push
jmp
int3
pcmpeqd
int
add
cmpl
cwtl
mov
lock
cmp
push
imul
pop
jge
jbe
xor
popa
daa
loope
mov
cmp
stos
daa
mov
adc
cmp
mov
adc
ds
and
dec
jno
pop
mov
sbb
mov
cs
xor
mov
imul
jno
jno
inc
jae
xor
sbb
notl
adc
fxch
inc
aas
ljmp
aam
or
popa
shl
or
fcomps
int3
aam
stos
js
repnz
clc
fildl
pop
sub
loope
pop
loop
cmp
xchg
rclb
jp
leave
pop
dec
mov
imul
sub
mov
es
lock
mov
push
repz
and
cmpsb
cmc
sub
in
dec
jle
xor
xor
ret
stos
sahf
int
sbbl
popa
les
mov
mov
call
sub
pop
xor
sbb
repz
dec
out
out
outsb
push
mov
insl
cmp
scas
addr16
aad
mov
xlat
outsb
mov
rol
inc
mov
mov
es
sub
or
and
stos
fwait
pop
out
and
add
or
pushl
sub
mov
push
fcomi
jbe
xor
and
aad
popf
push
rcll
mov
push
roll
dec
dec
add
lods
add
pop
cld
sahf
addr16
mov
les
xor
ss
rorl
dec
lds
cld
xchg
mov
in
sbb
or
sbb
push
adc
lea
mov
and
call
pop
lret
movsl
xorl
mov
push
jcxz
xchg
adc
cmp
lcallw
test
cmp
cmpsb
mov
lcall
jno
ffree
mov
mov
or
lcall
sbb
outsl
clc
mov
xor
stc
jmp
test
push
mov
cmp
cmpb
arpl
pop
adc
cld
dec
sub
inc
ja
jb
jl
mov
or
mov
inc
cs
jne
or
or
aaa
add
iret
adc
mov
adc
dec
and
inc
sub
lods
iret
mov
jnp
subl
mov
mov
repnz
and
cmp
enter
insb
mov
leave
add
push
dec
dec
xchg
icebp
repnz
mov
cmp
cltd
ret
rcr
lret
int
sti
fcmovnb
jmp
insl
cmp
cmpl
insl
daa
repnz
stos
mov
sbb
fmulp
sub
mov
daa
xchg
pusha
cmp
lcall
jns
jbe
xor
mov
out
icebp
popf
outsb
xchg
sbb
ss
inc
popf
push
dec
xchg
sbb
ds
mov
aam
fstpt
push
test
xlat
xchg
inc
xor
pop
cmp
into
cmpl
lods
out
in
popf
or
jle
in
inc
fdivs
push
push
jae
adc
inc
mov
mov
jno
rcll
stos
sbb
xor
gs
inc
test
mov
mov
fs
cmc
mov
sub
inc
pop
and
scas
cwtl
testl
sub
fiadds
repnz
stos
rorl
cs
mov
shrl
aam
push
inc
fcmovbe
fcoms
jns,pt
mov
lods
test
orb
pop
mov
jecxz
xor
sub
popa
testb
jg
dec
in
mov
mov
xor
inc
out
jmp
adc
and
bound
jp
sub
or
rorb
push
lahf
cmp
jns
int3
jmp
jg
push
aad
push
and
sbb
adc
mov
cmp
or
cmpsl
push
imul
cmp
and
mov
fisubs
xor
daa
xor
xchg
push
sub
push
testb
inc
xchg
into
sbbb
test
jecxz
or
call
mov
sbb
mov
xchg
lcall
enter
outsl
jl
movsl
test
xchg
push
addr16
push
mov
scas
imul
xchg
int
test
push
push
pop
ret
add
fwait
repz
mov
lcall
fs
mov
jo
nop
es
out
loope
mov
inc
sahf
lods
dec
rolb
mov
and
lds
sub
or
dec
vpavgw
cltd
mov
jb
mov
movsl
inc
in
or
dec
addr16
lods
aas
cli
push
jge
pushf
sub
and
cmc
add
leave
lds
rcrl
xchg
enter
jae
jnp
jno
cmp
mov
jg
add
sbb
sub
lahf
jbe
xchg
insb
jo
mov
mov
xchg
add
pop
push
xor
adc
addr16
push
xchg
push
out
clc
mov
test
mov
cmp
fwait
mov
push
adcl
aaa
cmc
pushl
loopne
cmpsb
mov
xchg
ss
xchg
mov
jmp
lods
jbe
mov
loopne
imul
or
dec
mov
and
std
adc
or
dec
sahf
pop
fisttps
mov
cmp
loope
jo
adc
push
bnd
sarb
cmp
enter
xchg
rorb
mov
adc
ss
loopne
iret
or
xchg
out
mov
cmp
mov
or
stc
xchg
add
nop
insl
pushf
filds
mov
je
shll
mov
cmp
shrb
les
mov
and
dec
mov
lods
mov
mov
adc
inc
fwait
mov
xchg
mov
xchg
mov
sub
ret
mov
out
ret
sbbl
std
push
andb
jle
pop
pop
mov
jg
cmp
popf
sbb
push
xchg
xchg
mov
fildll
mov
stos
cmp
dec
cmp
je
fs
lds
or
mov
and
test
jb
cwtl
scas
fwait
pushf
inc
ret
out
clc
mov
push
push
jle
add
and
scas
adc
stos
lret
push
pop
xchg
nop
test
arpl
lods
add
outsb
xchg
xor
cmp
jg
cmc
sbb
mov
and
push
and
mov
loope
hlt
movsl
popf
cli
lret
jge,pt
pop
sub
mov
pop
sub
addr16
lods
rorb
mov
jb
jo
ret
xor
add
pusha
lods
mov
and
lods
mov
mov
xchg
mov
lahf
daa
mov
jge
out
jmp
lcall
arpl
negl
out
and
in
daa
iret
push
dec
insl
popf
pop
sub
mov
cmpsb
sbb
dec
into
das
insl
aam
pop
mov
ja
dec
cmpsb
in
push
out
sbb
int3
dec
pushl
pop
mov
xor
mov
and
adc
cmc
sbb
cwtl
fldenv
lret
mov
and
andl
push
xchg
scas
or
jae
pushf
ret
sbb
mov
pusha
adc
push
test
int
fwait
ljmp
cmp
icebp
cmp
push
imul
jmp
ds
push
ret
jo
orb
sub
mov
cmp
push
or
enter
and
mov
movsl
mov
adc
test
mov
in
es
daa
lock
sbb
lock
shll
sbb
mov
cmpsb
mov
sbb
adc
push
enter
insl
jb
ficoml
dec
test
lods
xor
mov
inc
add
sub
xchg
pop
insl
shlb
scas
fdivrs
or
test
dec
add
divb
pop
jae
dec
push
pmulhuw
mov
das
jo
adc
jle
push
mov
repnz
mov
data16
in
cmpl
int3
mov
das
icebp
or
out
push
lods
iret
lds
lea
pop
repnz
xchg
pusha
pop
mov
popa
js
xchg
out
xchg
xor
mov
cmp
popa
les
lds
stos
nop
dec
pop
inc
popa
pop
mov
shl
adc
rcl
add
pop
adc
sbb
lcall
ljmp
mov
into
xchg
or
bound
mov
xchg
mov
sub
mov
xlat
mov
mov
pop
sub
cltd
outsl
push
stos
or
cmovle
loopne
dec
test
aad
repz
cmp
jmp
cmpsb
cmp
stos
sub
ss
mov
enter
test
lea
stc
mov
jp
jl
xor
cmp
mov
xor
jecxz
sbb
dec
push
sub
in
inc
insl
push
mov
sub
inc
inc
inc
mov
lret
sub
jne
inc
cmp
gs
mov
shll
xlat
es
xchg
xchg
lea
test
js
test
pop
dec
lods
mov
enter
jg
mov
das
push
rol
or
and
ss
paddw
loopne
dec
xchg
pop
notb
ds
cwtl
popa
sbb
movsl
add
add
adc
in
xchg
cmp
push
adc
repnz
sti
xchg
sub
sbb
loopne
add
fsubs
ret
iret
popa
outsb
pusha
jnp
das
frstor
or
fidivs
out
push
stos
outsb
xor
sub
out
mov
out
pop
xor
xchg
out
sbb
jmp
jg
push
icebp
xor
sub
je
fimull
sbb
iret
pop
inc
les
push
sti
add
mov
or
dec
std
pop
imul
addb
mov
sub
mov
jecxz
fmull
add
sub
add
or
or
loope
pop
movsl
int
rcll
jle
push
pop
jnp
dec
cs
adc
dec
sub
aam
loope
add
add
sahf
cmp
pop
jbe
pop
and
out
ret
stos
push
in
je
push
adc
pop
lea
cmp
pand
fnstenv
and
adc
in
repnz
loopne
lahf
filds
addl
loopne
popa
push
popa
gs
pop
add
push
mov
mov
rorb
rorb
add
or
test
sbb
fwait
arpl
and
leave
mov
mov
clc
daa
loopne
jno
dec
xchg
out
mov
xchg
imul
jne
sub
xchg
dec
push
hlt
fistpl
mov
sub
dec
pop
in
outsb
push
or
xchg
std
push
inc
and
push
jb
cli
inc
rcl
je
in
ss
xor
adcl
je
adc
push
loopne
pop
and
fmull
xchg
lret
out
cmpsl
sbb
es
movl
cmpsb
imul
add
les
xor
xor
pop
inc
aad
xchg
push
mov
pushf
lea
stos
into
leave
jmp
inc
outsl
outsb
jg
or
hlt
push
pushf
adc
ljmp
mov
xor
and
inc
movsl
ds
mov
pop
and
loop
shll
inc
movsl
mov
xor
lcall
adc
movsb
je
push
out
jnp
clc
mov
mov
test
insl
ja
mov
outsb
js
lock
in
adc
ds
push
cs
movsl
aaa
cli
sbbl
loop
and
xchg
jne
dec
mov
icebp
addb
cs
lcall
ret
insb
inc
xor
inc
jg
push
adc
xchg
hlt
pop
adc
nop
mov
xor
in
mov
pop
jmp
sub
fs
sub
jecxz
sbb
insl
xor
mov
pop
fbstp
sub
test
xchg
add
test
test
xchg
and
xchg
mov
in
mov
gs
mov
insl
dec
xor
adc
pop
add
cli
in
lods
leave
adc
fiadds
dec
popa
inc
mov
inc
adc
mov
int3
loop
daa
jb
jg
xchg
jno
cmc
mov
mov
jl
shl
ss
lds
rcll
mov
cs
idivb
jecxz
pop
sbb
das
push
sub
or
push
repz
jo
or
je
iret
fs
mov
fs
add
lret
dec
pop
loopne
mov
cmpb
stos
popa
dec
inc
ret
sbb
lods
cmp
xchg
insb
sarl
and
imul
aaa
inc
icebp
mov
sahf
xor
pushf
mov
in
inc
push
mov
subb
mov
mov
dec
sbb
lock
in
jo
stos
xchg
aam
xchg
inc
push
jmp
mov
dec
in
jnp
aas
xor
out
jmp
push
in
popa
push
xchg
test
insl
dec
imul
flds
cmp
inc
inc
pop
in
xlat
js
sub
add
fstpl
test
or
fstps
add
add
mov
ss
dec
jbe
stc
pusha
dec
loope
in
fxch
jno
sbb
iret
fisubrs
divl
js
push
cmc
or
sub
xor
pop
inc
jne
pop
dec
and
addr16
push
daa
mov
test
push
mov
push
test
mov
es
lret
cmp
ret
addb
sbb
in
mov
lret
pop
mov
fldcw
out
or
sbb
push
add
sbb
fs
jne
imul
sub
lcall
jnp
sub
cmc
ret
fistl
cmp
popa
jae
and
inc
pop
jne
insb
loope
rolb
sub
stos
rorl
adc
and
call
aad
mov
xor
int
aaa
xchg
fcmove
sub
xor
inc
sub
nop
inc
dec
pop
inc
jae
or
push
push
loopne
ja
mov
and
outsb
test
cltd
xchg
add
adc
or
scas
xor
xchg
or
dec
cmp
insl
jno
arpl
icebp
addr16
or
nop
insl
xchg
push
repz
dec
pop
mov
inc
pushf
cmp
pushf
xor
xchg
mov
jno
insl
adc
std
test
das
sub
mov
test
mov
test
lea
fs
neg
aaa
mov
hlt
mov
sub
jg
xchg
rclb
bound
add
pop
mov
lds
xchg
les
adc
pop
bound
ljmp
mov
pop
pop
addb
cmp
rol
or
and
fisubrl
dec
cmp
mov
cmp
adc
jmp
pop
test
test
xchg
mov
repnz
out
ja
lods
and
shl
cmp
pop
mov
xlat
xchg
movsb
sti
outsb
sub
ficompl
pop
jecxz
adc
shl
adc
push
les
xchg
pop
fnstcw
negl
mov
cwtl
xchg
mov
xchg
dec
xchg
icebp
pusha
popf
jmp
lea
xchg
out
std
ja
sbb
pop
rcrl
sub
repz
fnsave
pusha
mov
jle
mov
lcall
mul
jg
sub
sahf
pop
mov
or
enter
xchg
int3
icebp
push
popf
adc
fisttpll
xchg
aad
stos
xor
push
push
inc
cmc
dec
insl
outsl
push
sub
jbe
mov
mov
scas
in
sub
inc
mov
mov
mov
xchg
cmp
enter
jns
cltd
lock
jecxz
mov
iret
repnz
sahf
or
cmp
out
out
cmp
add
lret
adc
bound
mov
test
mov
push
mov
gs
stos
xor
popf
loopne
push
mov
fs
ja
loope
fidivrl
push
sub
mov
mov
push
xchg
mov
add
aam
movsb
loop
adc
xchg
sub
jb
je
popa
sbb
lret
shlb
daa
sub
push
aad
sub
ret
jmp
aaa
inc
stos
data16
cmovae
imul
xchg
lds
push
sbb
loopne
inc
jp
pop
stos
dec
sahf
jne
xchg
lret
inc
sub
psubsw
xchg
cmpsb
and
cmp
lahf
xchg
ret
mov
aaa
push
mov
dec
sub
flds
les
pop
dec
mov
push
roll
aad
pop
cmc
jle
fs
dec
ss
cmp
dec
fsubs
inc
cmp
not
or
mov
mov
mov
int
push
test
lea
xchg
in
push
cli
push
lret
xor
hlt
stc
and
push
mov
xor
sbb
mov
and
rcrl
rcl
notl
pusha
nop
jne
dec
dec
mov
movsl
out
pop
pop
into
dec
cltd
mov
jnp
add
sbb
add
rorb
and
adc
lahf
sbb
das
sbb
clc
in
stc
pusha
arpl
pop
jb
popf
and
cmpsl
enter
xchg
aaa
sti
imul
outsl
dec
movsb
adcl
push
jno
mov
scas
lret
out
aaa
loope
out
cmpsb
or
xchg
cmovo
clc
jo
test
dec
jb
jne
add
and
sbb
loop
push
push
and
sarl
iret
adc
mov
xchg
ror
fsubr
or
jle
push
push
inc
lods
movsb
push
lret
sub
fcmovne
pop
or
std
sarl
push
cli
xchg
shlb
test
ret
push
push
add
aaa
and
sbb
repz
dec
dec
or
or
sub
ja
cmpsb
lds
fistpll
xchg
in
mov
popf
ret
xor
clc
jns
jb
inc
push
jg
in
cmp
and
int3
ja
iret
loop
mov
lds
and
cmpsb
loope
add
jmp
and
jp
sub
dec
add
insb
xchg
cmpsb
loopne
ljmp
sbb
xor
jae
xchg
inc
ret
push
jnp
mov
cmp
jae
fists
mov
add
pop
inc
gs
dec
push
cld
out
xor
imul
jecxz
mov
jp
negl
mov
dec
sub
cmpb
fsub
ds
push
pop
out
mov
jno
cld
popa
push
sbb
lahf
adc
ljmp
repnz
or
mov
icebp
lds
shrl
int
cmp
int
push
hlt
fsubrl
lods
jnp
in
iret
orl
push
xor
jbe
rcrb
out
js
push
jle
imul
ret
dec
add
xor
sti
stos
negl
pushf
repz
enter
xchg
ja
xchg
jnp
sbb
ret
aad
sbbl
inc
sbb
cmpsl
fs
test
andl
fwait
cmp
pop
daa
lods
test
mov
mov
inc
gs
cmp
subl
mov
sub
mov
mov
in
adc
jle
pop
fnstcw
rcrl
jg
shlb
stos
xchg
fiadds
mov
in
mov
testl
stos
aam
mov
lahf
xor
bound
insl
jecxz
mov
jl
mov
movl
xor
sahf
inc
imul
cli
sbb
mov
lock
xlat
enter
mov
sbb
inc
insb
adc
or
pushf
fyl2x
or
mov
inc
aam
mov
sub
in
addr16
into
test
mov
xchg
mov
or
jl
cmpsl
xchg
test
add
pop
mov
cmc
stc
sub
pop
lcall
xor
iret
pop
mov
jnp
ds
cmp
push
aaa
push
sahf
dec
popf
or
pop
xor
mov
mov
out
or
lahf
movsl
cmp
in
and
popf
dec
hlt
sbb
lds
cmpb
pop
xlat
js
cmp
cmp
loopne
es
jbe
fbld
inc
pop
xchg
mov
add
push
jmp
add
arpl
push
lea
jns
cmc
pop
popa
pop
sub
movsb
push
push
mov
add
lcall
test
ret
call
imulb
je
sub
sub
shrl
sbb
xchg
mov
or
cltd
push
add
shr
fld1
gs
lock
adc
sbb
and
sbb
add
imul
xor
lea
andl
dec
mov
or
popa
dec
jnp
call
adc
xlat
add
xorb
jns
lock
scas
jl
cmpsl
mov
in
add
jns
nop
ds
cs
jl
push
ss
loopne
sbbl
lretw
adc
cltd
ficompl
out
insl
push
movsl
dec
pop
cli
cmp
jg
lds
mov
out
push
insb
adc
dec
xor
xchg
in
fiaddl
loopne
jmp
mov
imul
sti
test
sub
fiadds
out
aas
adc
test
test
sbb
xchg
negb
lock
icebp
push
jl
cli
mov
mov
sbb
lret
push
xchg
adc
cmpsb
xor
jb
out
or
iret
xchg
shlb
add
stos
out
ret
lcall
or
stc
xlat
xor
stos
or
inc
cmp
pop
xchg
pop
xor
pop
jnp
xchg
in
inc
dec
lods
mov
pop
mov
xor
test
sbb
adc
push
xor
add
push
stc
pop
jnp
push
mov
in
loope
cld
jne
push
dec
cmp
push
out
sub
sbb
mov
arpl
fnstenv
pushf
loopne
enter
or
mov
lret
aam
xor
movb
cmp
xor
push
aad
dec
add
cmc
out
mov
jae
outsl
movl
insl
icebp
pop
mov
sarl
ret
or
repnz
xor
jecxz
mov
pop
out
loope
fucomi
xchg
pop
xor
lcall
cmp
popf
jae
rcrl
dec
push
cvtdq2ps
mov
mov
mov
mov
daa
jle
mov
or
subb
pop
popf
andb
idivl
test
testl
psrlw
cmp
and
faddl
push
add
jmp
cs
jle
sub
out
lret
iret
mov
mov
sarl
sub
lret
mov
iret
orl
aaa
or
pop
cmp
inc
test
mov
mov
test
jno
inc
jecxz
cwtl
and
pop
insl
data16
add
icebp
fisttpl
pop
bound
inc
xchg
jns
push
ret
out
push
cmpsl
jle
incl
pushf
arpl
or
sub
ss
popf
jmp
notb
stc
stos
pop
and
sbb
shrl
int3
hlt
imul
in
push
bound
test
cmp
xchg
shll
cld
mov
jecxz
push
fidivrl
lahf
mov
pusha
out
lds
xchg
pusha
jne
lret
xchg
add
sub
repnz
jno
fsubl
sbb
lods
mov
ret
lods
je
xor
sbb
pop
adc
push
pusha
mov
mov
lret
call
mov
test
push
add
jp
aas
xchg
pop
stos
push
fbld
sub
jp
pusha
hlt
loopne
xchg
mov
inc
push
mov
mov
pusha
push
jne
bound
jecxz
pavgb
das
mov
push
aad
mov
mov
sbb
xor
jl
pop
ljmp
or
insl
out
jecxz
xor
movsl
ret
andb
xchg
loopne
ficompl
lret
xorb
daa
fists
sub
inc
and
mov
or
xchg
hlt
mov
sbb
mov
xor
daa
pop
lock
add
push
cmc
aam
loope
dec
xchg
adc
movb
and
xchg
clc
add
cwtl
in
or
insb
lret
into
inc
lods
mov
clc
out
mov
scas
and
and
flds
push
jne
test
cli
faddl
jnp
out
cmp
jg
ljmp
pop
std
cmc
pop
mov
dec
lock
repz
es
xor
xor
addr16
out
and
out
int
xlat
mov
inc
clc
out
je
inc
insb
ret
scas
shl
stc
jl
add
out
clc
xor
lret
pop
jo
imulb
jmp
jno
or
xor
daa
pushf
call
test
jp
cmp
data16
sub
shrl
mov
push
mov
mov
mov
rorb
cmp
cmp
out
xchg
out
push
rorl
lods
stc
add
or
stc
mov
xchg
inc
neg
imul
clc
int
lds
mov
ficomps
jmp
test
leave
adc
jae
mov
in
mov
idivl
sbb
xchg
loopne
sbb
bound
jmp
ret
test
les
mov
xchg
xchg
mov
xor
xor
cli
in
sub
arpl
out
jl
insl
cs
stos
push
sub
sub
push
sbb
sahf
clc
fstps
or
sub
xchg
add
jns
xor
dec
inc
xlat
mov
in
jl
pop
add
int3
leave
imul
out
roll
data16
sbbb
push
pop
in
aaa
pop
sub
lds
ret
jo
cmpsl
push
mov
mov
es
sbb
fstpt
pop
inc
jl
xor
or
mov
push
add
lock
dec
push
mov
xorb
outsl
lcall
je
mov
cli
es
pop
fisubrl
int3
push
lea
jg
mov
dec
sub
js
cltd
dec
int
rorb
mov
push
fisubs
mov
scas
int3
and
cmc
insb
xchg
ja
pusha
xchg
jmp
mov
repz
shll
add
jle
pushf
mov
cwtl
icebp
inc
into
mov
add
bswap
aad
jle
arpl
mov
popf
push
fistpl
daa
dec
push
lcall
out
leave
mov
sbb
addl
sbb
lock
les
fldt
inc
addl
or
mov
adc
daa
movb
lods
mov
mov
xchg
outsb
or
pop
in
ljmp
add
clc
mov
lock
sub
lret
cmp
pop
ret
pushf
xor
shrb
pop
cmp
aam
mov
int3
jmp
xor
and
xchg
xchg
mov
add
imul
and
mov
xor
jl
inc
add
mov
ret
adc
aaa
xchg
mov
lret
add
and
fidivs
mov
sbb
loope
jle
pop
inc
loop,pn
out
pop
push
mov
arpl
fimull
outsb
pusha
xchg
cs
bound
cwtl
mov
mov
out
pop
outsl
repz
mov
ret
cs
pop
push
xchg
mov
mov
lds
adc
jle
push
push
mov
xor
and
testl
aam
test
movsl
or
dec
fdivrp
xchg
stos
dec
and
into
mov
push
into
sub
add
loopne
dec
dec
std
push
lret
jl
sbb
mov
repz
ja
test
mov
cmp
dec
inc
aaa
dec
push
push
sub
cmp
ficomps
lea
and
jl
rclb
xchg
clc
adc
stos
fdiv
inc
fcmovnb
aaa
lods
repz
sbb
jno
test
jb
mov
sti
das
into
sbb
test
imulb
push
shlb
fcmovne
daa
rclb
xor
test
test
repz
cld
mov
sub
mov
icebp
jg
loopne
cmp
insb
test
ret
das
xor
daa
adc
xor
std
aaa
jp
adc
ds
push
add
sub
and
push
stos
mov
dec
adc
pop
push
js
lfs
ds
pop
dec
dec
push
cmp
inc
jge
jbe
insb
adc
fisubl
cmpsl
and
jp
cmp
sbb
xchg
pop
scas
insl
hlt
push
xchg
lods
xchg
dec
or
insw
insl
mov
stos
stc
data16
or
add
xchg
mov
test
sbb
inc
fidivs
xchg
sahf
lods
mov
mov
subb
in
rcrb
cltd
sbb
pop
sub
inc
sub
je
idivb
ss
insb
adcl
fcompl
add
aam
int3
repnz
movsl
xchg
fidivs
movsb
add
rcrl
xchg
add
mov
icebp
orb
test
ror
test
mov
icebp
inc
mov
sub
mov
push
push
dec
push
test
lock
sub
pop
js
jno
xor
push
scas
cmp
mov
inc
gs
push
inc
xor
mov
push
mov
xor
sahf
jbe
insl
mov
es
mov
cltd
shrl
pop
add
xchg
and
inc
jo
cmc
test
cmp
add
and
enter
and
and
insl
dec
push
xchg
stc
push
adc
leave
xor
insl
add
jge
aaa
cltd
sub
dec
aas
mov
call
outsl
outsb
cmp
xor
mov
lret
out
pop
mov
cmp
adc
sbb
test
sbb
push
mov
sub
mov
clc
adc
scas
adc
mov
fwait
push
cli
mov
test
mov
mov
lock
inc
outsl
jge
xor
jl
addl
mov
andl
sub
xor
jge
aaa
adc
clc
pop
ss
adc
mov
jp
xor
cmc
dec
push
jno
and
dec
mov
in
or
out
es
mov
lret
xorb
in
shl
jp
cmp
cmp
pop
imul
or
gs
push
and
shrb
inc
je
inc
sbb
push
lret
mov
pop
lock
adc
addr16
jns
das
adc
sbb
stos
cmc
scas
push
sarl
fs
mov
pop
or
pop
mov
jo
cmp
jge
out
fwait
xlat
fldenv
dec
imul
xlat
movsb
stc
in
sub
movups
ja
insb
mov
mov
xchg
fbstp
imul
pusha
pop
xor
push
inc
das
pop
dec
sub
mov
jnp
fnsave
sub
shll
dec
sub
pop
in
mov
mov
lret
imul
es
add
dec
jo
pop
and
mov
adc
inc
and
pop
jmp
mov
push
mov
jp
xchg
sarl
test
sub
cltd
jbe
out
popa
loopne
push
insl
xor
int
add
ja
sub
sbb
mov
pop
dec
lock
adc
daa
ret
jne
cld
mov
test
xchg
repz
jne
imul
mov
pushf
inc
sub
sarl
dec
adc
btc
mov
pop
outsb
aam
xor
lret
mov
imul
sbb
mov
or
mov
cmp
loopne
push
cmpsl
mov
jge
call
mov
les
clc
adc
ss
xor
push
mov
add
xor
mov
jecxz
movsl
pop
pop
out
jnp
cld
stos
fiadds
fidivl
or
aaa
sti
scas
cltd
ljmp
shll
and
mov
dec
jmp
mov
or
sub
add
stos
push
fistpl
out
mov
cwtl
ret
jp
loope
pop
add
dec
and
insl
jo
shrl
push
ljmp
insb
ds
cld
pop
pop
in
inc
add
lea
mov
shlb
ljmp
mov
add
ds
cmp
icebp
xor
or
ds
cwtl
push
pop
jmp
sub
cmpsb
js
adc
pop
pop
stos
dec
mov
lea
sarl
arpl
xor
movsl
mov
sbb
sub
inc
jg
mov
jne
scas
popf
inc
jmp
inc
mov
inc
adc
out
dec
popf
mov
test
das
sti
xchg
push
in
push
push
mov
cmp
icebp
in
stc
cmp
rcrb
cmpsb
iret
aaa
ret
lods
mov
ds
popa
adc
ss
sub
fmuls
enter
push
inc
cmp
rorb
insl
cmpsb
repnz
cmc
push
ficompl
lods
imul
lret
xor
cmp
xor
xchg
and
lea
shlb
adcl
sub
arpl
and
lret
cmp
shll
imul
in
xor
int
mov
rcr
jne
rcr
dec
shrl
mov
sbb
sub
mov
jae
inc
out
xor
stos
and
push
rcrb
dec
sub
jle
fistl
insl
or
je
inc
aas
jne
pop
or
imul
into
fsubrs
mov
push
xchg
jo
jle
fs
hlt
sbbb
jno
insl
push
fsubl
cmpsl
or
cmp
dec
jbe
sti
dec
sbb
mov
loop
pushf
in
stc
insl
sub
pusha
sub
pop
mov
movsl
xor
aam
into
nop
push
leave
test
add
insb
hlt
jns
inc
and
jmp
incb
in
divl
push
inc
inc
scas
push
sub
and
mov
das
in
xorl
jecxz
mov
push
pushl
dec
cmp
xchg
jmp
notl
inc
pop
or
out
mov
mov
lcall
imul
xor
mov
pop
dec
mov
rcrl
cmp
sbb
les
mov
push
or
jp
sub
ljmp
jb
mov
int3
jae
sbb
incl
mov
popf
ret
add
loope
clc
test
push
fbld
fdivs
ja
mov
shr
jle
fmull
fabs
fisttpll
push
fsubrl
lods
ret
into
into
subb
jl
scas
lods
popa
cltd
out
dec
pop
push
iret
out
dec
cmpl
js
adc
dec
push
cltd
aas
mov
pop
fbld
jbe
bound
mov
outsb
hlt
mov
mov
enter
mov
ja
fs
jbe
xchg
xor
data16
lahf
pop
inc
push
test
nop
sub
inc
cs
sti
out
pop
mov
cmp
push
into
xchg
adc
sti
jecxz
dec
in
cli
aaa
js
push
imul
pop
push
mov
xor
outsb
ja
inc
and
ret
popf
mov
repz
pop
push
pop
dec
add
inc
jne
dec
xchg
mov
mov
add
push
testb
push
lods
sub
in
icebp
add
jne
and
jl
cmp
mov
sub
mov
or
bound
jle
aaa
cmp
jle
cmpsl
jnp
sbb
or
fdivrs
movsb
xchg
cbtw
or
outsl
movsb
es
stos
or
jne
and
pop
mull
fadd
repz
call
insb
mov
aam
pop
in
negl
jnp
daa
xlat
mov
movsb
sahf
cmpsl
and
loop
js
ret
test
aaa
mov
push
inc
push
xor
out
je
cmp
sbb
push
xchg
adc
push
pop
mov
pusha
add
inc
dec
int
add
stos
out
lea
push
aas
jg
movsl
cmpb
xchg
sbb
jo
insl
call
imulb
clc
cwtl
sub
ljmp
cmp
sahf
xor
pop
xor
flds
xchg
dec
fsubl
add
les
sbb
lds
jmp
adcl
pop
or
xlat
mov
and
sbb
dec
movsl
or
jb
ret
xor
repz
push
mov
cmpsl
mov
aas
mov
dec
mov
pop
adc
arpl
xchg
push
repz
mov
sahf
filds
inc
pop
push
xchg
les
mov
leave
push
adc
and
and
loope
xor
movsl
or
subl
xchg
push
xchg
xor
jns
mov
dec
xor
pop
mov
dec
movsb
dec
out
push
into
jb
es
xor
std
adc
outsb
jmp
pushl
ficoml
mov
enter
cltd
fdivs
xor
mov
xor
test
xor
sub
jecxz
daa
mov
stos
nop
inc
jae
out
mov
push
dec
enter
push
sbb
enter
cmpsb
xor
or
std
mov
push
fisubs
imul
lea
les
inc
push
leave
ficoms
pop
jo
mov
cwtl
leave
mov
in
sub
ds
dec
out
or
pop
dec
dec
cmp
cmp
and
and
inc
out
add
inc
xchg
faddl
lea
xchg
stc
mov
cmp
hlt
mov
cmpl
pop
mov
dec
cli
add
mov
push
inc
pop
paddd
mov
sbb
mov
lods
lods
fistpll
lds
mov
test
sahf
aad
stos
stc
add
outsl
cmp
scas
cmpsb
rol
inc
jno
xchg
cmpsb
pushf
push
cmpl
cmp
enter
jg
sbb
push
pop
mov
ljmp
xor
iret
cmp
dec
mov
in
in
repz
je
sbb
daa
dec
lock
add
cmpl
out
rcll
add
or
fcompl
hlt
sbb
cmpsb
pop
push
fsubl
popf
jne
gs
xchg
shlb
mov
inc
dec
je
fisubs
popf
jge
mov
aas
xchg
inc
mov
stos
xor
mov
icebp
and
insb
dec
and
ret
cmpsl
mov
lcall
movsl
lock
jb
jbe
pop
or
xchg
mov
decl
in
sarb
imul
xchg
sub
es
int
scas
add
jge
fsubs
loopne
test
lea
lret
jmp
sub
add
add
push
hlt
lret
daa
rcll
pop
cmp
dec
adc
mov
rolb
mov
sahf
sbb
push
jecxz
inc
jecxz
jge
insb
adc
xchg
cmc
in
scas
addr16
and
cmp
mov
add
insl
inc
mov
mov
sarl
cmc
pop
insb
jne
mov
aaa
push
jmp
sbb
push
xchg
mov
mov
cwtl
sub
lcall
xlat
out
xchg
fninit
mov
jmp
adc
dec
cltd
cmpsl
sbb
packsswb
and
sub
or
sti
loopne
outsb
cs
dec
aad
fs
mov
add
adc
ret
into
repz
test
mov
int
fstps
sub
es
push
icebp
leave
ljmp
pop
mov
testb
adc
nop
xlat
xchg
inc
shrl
mov
push
push
testb
lods
rcll
and
pusha
adc
jmp
jge
jle
int
push
in
jae
xchg
mov
je
repz
aaa
mov
and
jmp
pop
cmpsb
int
jo
jp
push
rcrl
or
sub
pop
adc
pop
pusha
popa
dec
pop
or
cmp
pushf
cmp
or
or
ror
scas
sbb
cmp
sub
data16
sub
fsub
add
push
cli
aaa
gs
insl
inc
fisttpll
xor
or
push
jmp
mov
pop
mov
rclb
cmpsl
fcmovu
enter
mov
inc
xlat
jns
idiv
shll
jecxz
xchg
orb
lret
mov
pop
ss
push
in
pushl
cmpsl
jbe
pop
cld
push
les
mov
in
call
sub
dec
xchg
stos
pop
xlat
fisubs
repnz
xchg
and
sbb
pop
sbb
pop
ja
adc
test
inc
into
movl
cwtl
mov
fidivl
lret
add
clc
cld
enter
loope
pop
and
and
lcall
stos
sub
dec
xor
or
push
jge
cwtl
out
ss
add
ficompl
xchg
push
je
pop
popa
sbb
repz
idivl
jae
lods
fiaddl
sti
xor
or
jo
cmp
scas
clc
xchg
and
insl
lods
stc
sbb
aas
arpl
push
pop
lret
mov
repz
movsl
lret
inc
or
imul
jmp
jb
vsubss
and
cmc
cltd
fcomps
adc
pop
mov
loop
fnstenv
lret
fiaddl
iret
test
hlt
icebp
packuswb
mov
rcr
push
pop
sbb
sahf
sbb
lods
add
cli
pop
mov
dec
lret
insb
cmp
in
sbb
or
sbb
mov
popa
jg
sahf
or
dec
mov
inc
jns
lahf
icebp
popa
out
mov
scas
gs
xor
int3
imul
pop
mov
fsubr
pop
subl
inc
dec
sub
mov
out
loop
xchg
dec
cltd
dec
adc
mov
fildl
push
js
insb
cmp
lret
icebp
xchg
iret
jne
in
call
ret
lea
sub
aas
pusha
add
rcr
cld
add
inc
pop
cmp
sbb
adc
pop
orb
and
ret
in
es
and
stos
bound
into
inc
jge
pop
lret
mov
fdivrp
mov
aad
movsl
push
fstps
rclb
pop
mov
push
push
clc
dec
es
inc
call
frstor
push
push
in
in
xor
mov
arpl
stc
inc
dec
stos
nop
inc
push
aam
je
mov
jnp
in
aad
xchg
and
jl
sbb
into
mov
sti
xchg
clc
mov
xor
jne
enter
outsb
xchg
jp
lahf
jnp
mov
push
out
mov
popf
imulb
or
xor
inc
inc
xlat
and
cltd
lock
push
stos
mov
mov
sbb
out
jle
fildll
jbe
sbb
clc
loopne
cli
loope
out
sahf
cmp
loopne
clc
xor
or
repz
cld
fistl
inc
ud0
add
cmc
mov
jno
ret
pop
xlat
leave
lahf
hlt
cmpsb
push
cmpsl
outsl
push
xor
loop
addb
push
adc
cmpsl
sub
jno
sbb
mov
sti
push
subl
test
js
nop
repnz
pop
pop
ficoms
mov
add
adc
ljmp
leave
pop
scas
inc
mov
sub
inc
push
das
xor
push
push
das
mov
pop
push
push
adc
xchg
push
ja
and
popa
stc
std
or
arpl
inc
dec
data16
jl
or
mov
mov
push
mov
adc
xchg
clc
std
in
pop
lock
pop
and
icebp
mov
pusha
or
loop
mov
out
mov
cs
mov
out
rcl
pop
pushf
shlb
lds
scas
lds
icebp
repz
and
in
outsb
pop
aaa
mov
sti
cmp
lea
lcall
sbb
stos
and
pop
arpl
mov
scas
loopne
sbb
xlat
sti
test
pop
cmp
xchg
es
pop
aaa
orl
and
arpl
inc
push
jnp
and
fsubr
lods
or
lret
xor
dec
mov
test
xchg
dec
cmp
popa
push
test
aam
ficomps
lea
inc
pop
data16
lcall
mov
loope
fisttps
cmp
dec
adc
pop
mov
mov
scas
pop
sub
xchg
je
dec
push
sbb
es
lret
inc
mov
push
adc
and
xlat
arpl
roll
pop
cmpsl
push
imul
dec
dec
xor
testl
mov
push
out
mov
out
cmp
sbb
movsl
cmp
fsts
fsts
ds
mov
cmp
jge
lahf
rcrl
repnz
add
in
cwtl
cli
cwtl
mov
inc
fsubrs
mov
pop
orb
ret
mov
imul
mov
insl
imul
ja
ret
out
push
dec
xor
mov
test
sar
xchg
push
sbb
test
xchg
adc
xchg
mov
or
popa
in
push
sub
scas
adc
call
add
fldl
fstl
cld
int3
movsb
inc
pop
sub
and
out
xlat
sub
lahf
lret
cmp
shlb
das
push
sbb
test
inc
loop
mov
jp
loopne
lahf
jnp
leave
sbb
test
push
shlb
sbb
cmpsl
mov
shl
xchg
fld
push
mov
dec
movsb
sub
fsubp
sete
sub
or
mov
ds
lods
jge
shlb
xchg
imul
cmpsb
mov
mov
pop
push
push
je
add
aad
mov
fsub
add
and
mov
addr16
sahf
arpl
pop
fwait
dec
sub
bound
sti
cmp
xor
lods
mov
lds
xor
scas
xor
sti
stc
or
mov
out
pop
and
adc
adc
xor
push
movsb
enter
and
test
and
and
sbb
notb
pop
cmpsw
lret
or
sub
test
mov
dec
xor
jne
xchg
adc
push
adc
iret
pop
lock
pop
lds
ljmp
sbb
aas
inc
popf
loope
mov
add
jno
sarb
dec
push
hlt
loopne
sub
dec
repz
loop
mov
rol
nop
jl
ljmp
pop
dec
xlat
les
arpl
ror
pushf
fdiv
and
cmp
and
dec
and
xorl
push
cltd
sub
push
inc
sub
mov
xor
mov
mov
fdivp
jno
outsb
test
push
out
add
jmp
mov
cwtl
mov
dec
fcom
les
push
xchg
insb
test
popf
mov
rorl
xor
cs
iret
ss
shll
jle
loop
in
pop
sub
mov
cmp
ret
aaa
les
lcall
push
fs
loope
enter
pop
adc
lret
xchg
push
jae
mov
movsl
jns
push
mov
mov
mov
int3
out
into
xchg
inc
cltd
in
cmpsl
into
mov
mov
arpl
aad
cld
push
out
cltd
repz
mov
jecxz
in
stc
jo
jns
popa
adc
fs
in
aas
sbb
pop
jle
push
add
add
addl
sbbb
mov
sub
xchg
stos
fsubp
js
lahf
mov
movsl
mov
mov
inc
cmpsb
xchg
les
jnp
dec
pop
repz
out
iret
push
mov
mov
std
push
cmp
add
xchg
mov
in
push
add
dec
adc
adcl
popf
pop
push
pop
stos
xor
rcll
cld
dec
cmpsb
jno
adc
sub
es
lods
fldenv
xchg
arpl
fstpl
jno
outsl
and
popf
js
lcall
jb
leave
and
fcomp
call
push
jp
les
xchg
push
insl
and
sti
sahf
dec
xor
pop
shrb
sub
in
test
cmp
inc
fildl
mov
jmp
out
cmp
rorl
loopne
and
mov
adc
in
xor
adc
test
dec
es
mov
cmovle
jo
mov
daa
xchg
jge
sub
imul
pcmpeqb
cmp
jnp
cltd
call
mov
xchg
daa
cmp
dec
sahf
adc
std
aam
js
inc
dec
adc
xchg
mov
aam
call
sbb
lods
sbb
push
adc
sub
lods
out
test
dec
inc
sub
mov
insb
lock
inc
mov
int3
into
rorb
pop
daa
xor
loopne
clc
mov
sbb
ret
test
scas
dec
pop
xor
sahf
ss
push
jmp
xchg
jo
jae
xchg
mov
ja
or
jle
and
push
sub
jae
cmpsb
addr16
push
sbb
stc
inc
push
jp
clc
sbb
lcall
stc
std
jo
sub
in
jecxz
sbb
mov
adc
jle
add
jecxz
or
aaa
xchg
loop
popf
or
pcmpgtd
pop
jle
inc
mov
mov
jle
imul
bound
or
fiadds
les
inc
jmp
jae
sbb
fs
ror
loope
adc
lods
mov
int3
into
jle
adc
test
inc
testb
repz
dec
insb
das
xchg
syscall
xlat
add
notl
jo
das
movsl
cmp
adc
pop
lahf
inc
shll
xchg
fs
xchg
or
fnstenv
xchg
push
and
insb
outsl
sahf
push
xchg
push
subl
xor
into
nop
sbb
mov
into
fimuls
outsl
test
repz
mov
push
and
mov
jg
cmp
adc
or
lds
clc
in
xor
jl
shrb
xor
push
xchg
pop
inc
je
or
repnz
into
jno
jl
or
outsb
and
popf
and
cmp
cli
sbb
jmp
fcmovnb
ja
mov
insl
sub
sub
int
std
lret
les
sub
scas
add
in
out
push
rcl
mov
pusha
imul
mov
mov
and
mov
lret
mov
inc
mov
fmuls
leave
lret
cmc
fldenv
scas
adc
inc
aaa
bound
cmp
inc
popa
lea
adc
mov
pminub
cmovnp
test
cmpsb
idivb
jge
pusha
and
loope
js
loope
in
leave
add
adc
bound
or
test
fcmovne
jo
int3
nop
jle
adc
sbb
pop
ds
testb
in
sar
sub
je
adc
mov
je
sti
cmp
fisubl
scas
jno
adcb
sub
push
xchg
popa
nop
jne
pushf
add
js
jecxz
rsm
lods
testl
stc
lahf
jae
sub
popa
or
rclb
sub
pop
mov
ret
push
sbb
cmpsb
aam
push
push
xchg
fimuls
mov
sbb
sub
stos
sbb
mov
or
add
jg
inc
pop
xor
xor
test
jns
inc
xor
dec
xchg
pop
sbb
popa
pop
or
gs
push
lret
mov
jns
inc
push
add
add
and
nop
pop
addr16
aas
cmp
mov
or
and
aam
and
mov
sub
jns
movsb
sub
pop
stos
fidivl
xor
jg
pop
adc
jge
into
lret
int
xor
ret
scas
push
shlb
sbb
inc
inc
mov
pop
mov
mov
js
and
lods
mov
mov
and
pop
int
jne
cmpsb
xchg
push
xchg
add
clc
lods
xchg
loopne
sbb
pop
in
dec
xchg
sub
mull
and
ror
xchg
inc
sbbl
das
or
insl
ret
mov
test
std
adc
sti
addr16
iret
stos
cmp
lds
fisubl
stc
idivb
lea
out
fmull
mov
lock
jmp
xor
lret
movsb
jns
cli
movsb
mov
jbe
sub
adc
lock
mov
out
into
outsb
jae
outsb
loop
mov
lret
inc
movsb
repz
shlb
xor
push
dec
repnz
mov
sub
dec
lods
adc
aas
or
adc
sub
push
add
mov
daa
outsb
jbe
push
lods
xchg
out
cmp
lret
adc
mov
mov
adc
jno
or
sub
push
push
insl
push
ds
scas
iret
sub
dec
sbb
pop
xlat
cmp
add
jp
mov
push
pop
mov
mov
xchg
outsb
cmp
popa
stos
ret
pop
adc
filds
out
cmp
leave
dec
adc
sbb
xlat
mov
and
fisttpll
sub
ds
pop
inc
xor
sub
sbb
daa
xchg
or
sbb
jle
or
and
pop
cwtl
xchg
push
adc
push
mov
leave
mov
cwtl
sub
mov
sbb
stc
add
xchg
je
pop
outsb
adc
lock
jg
add
pusha
insb
mov
nop
call
push
inc
xchg
jle
xchg
shll
fimuls
push
mov
cmpsb
ja
add
mov
mov
mov
pop
cmp
cld
add
out
mov
sbb
pop
imul
pop
push
adc
fwait
cld
add
mov
imul
aad
xor
test
cltd
popa
pop
ljmp
repz
cmc
les
cli
imul
push
or
xorb
ja
push
test
pop
imul
lock
ficompl
fucomip
xchg
stos
or
xchg
xchg
loope
aam
ret
mov
data16
fdivrs
xchg
mov
jl
push
sub
mov
xor
lds
aaa
subl
out
pusha
mov
lahf
jp
jbe
sbb
std
and
stos
mov
pushf
popa
fistpll
inc
push
fildll
hlt
std
adc
lods
repz
push
add
xor
mov
les
push
jecxz
aaa
mov
mov
addr16
fidivrs
out
enter
mov
mov
fwait
jg
xchg
cld
lret
xchg
rorb
xor
filds
xchg
loope
add
adc
xorb
xor
mov
in
or
xchg
xchg
pop
lcall
push
stos
loope
insb
scas
xor
repnz
pusha
or
push
les
mov
leave
mov
push
push
inc
sarb
xor
arpl
and
dec
jnp
scas
sbb
insl
in
mov
adc
cs
inc
lods
sahf
add
pop
arpl
mov
test
xor
movsb
sahf
lret
sub
sahf
adc
cld
nop
imul
popf
outsl
fwait
test
icebp
cmpsl
popa
out
fidivrs
pop
sti
jecxz
enter
and
push
jno
call
mov
inc
xchg
enter
cmpsl
pop
stc
bound
push
jle
xchg
push
adc
push
scas
adc
cmp
out
scas
aad
nop
push
sub
ja
or
adc
adc
push
ret
lcall
inc
mulb
sahf
xor
mov
pop
into
cli
arpl
lea
push
pop
sbb
je
or
clc
mov
icebp
jg
clc
int
lahf
loop
push
ljmp
fs
sbb
out
fldcw
lods
sti
mov
mov
fs
lret
mov
push
pushf
sbb
lods
jmp
xchg
inc
xor
mov
test
inc
lock
dec
dec
test
xchg
loopne
push
lret
rorb
popf
lahf
fsts
or
xlat
test
fldl
lahf
je
call
mov
adc
and
cmpsb
push
add
cmpsl
sub
cmp
add
mov
lcall
jne
imul
js
lods
dec
or
cwtl
das
repnz
pop
clc
xchg
mov
js
dec
clc
andl
cmpsb
push
sahf
or
outsl
fmuls
dec
out
and
adc
sub
ss
add
xchg
repnz
lret
push
jl
cmc
sbb
sbb
inc
popl
in
pushf
push
sbbl
ja
and
test
push
stc
mov
xchg
add
cli
in
inc
popa
mov
addr16
jnp
outsb
push
sub
cmc
mov
sub
sti
sub
fldt
int
add
push
push
push
sbb
or
xor
jle
stc
mov
sbb
stos
repz
fwait
jl
fistpll
cld
jb
adc
push
push
mov
mov
out
cmp
lahf
jmp
jge
pop
jne
pop
mov
into
pop
pop
in
outsb
fwait
sub
pop
shlb
add
out
mov
ljmp
cwtl
popa
subb
xchg
enter
jmp
mov
fsubl
xchg
cmp
jl
aad
mov
pop
sub
add
push
cmp
jo
dec
lds
aaa
pop
xchg
cmpsl
and
dec
sub
jmp
jbe
jae
xchg
push
jge
in
cmp
mov
shl
mov
sbb
xchg
popf
stos
notl
imul
lds
pop
int3
cs
je
leave
lods
popf
and
adcl
popa
pop
adc
jno
aam
dec
push
clc
dec
int3
hlt
jp
es
xorl
add
inc
inc
mov
lods
into
imul
mov
xchg
pop
pop
cmp
mov
inc
dec
jbe
sbb
fistps
sub
dec
int3
adc
stos
stc
repnz
sbb
nop
test
int
leave
rorb
push
cli
call
not
stos
cmp
incl
shrb
popa
aas
aas
mov
mov
mov
sub
ljmp
adc
xchg
andl
int
push
lret
clc
and
dec
dec
cmp
push
in
sub
fisubl
enter
mov
or
push
adc
or
push
iret
popf
xchg
mov
sub
or
aad
mov
dec
cli
push
pop
mov
jne
fnstcw
dec
inc
push
mov
pop
xor
xchg
ficompl
outsb
push
xchg
cwtl
iret
sbb
leave
fimuls
jp
dec
ret
dec
jb
pop
xchg
xchg
sub
ret
sub
movsb
out
cvttps2pi
jmp
mov
dec
hlt
jne
leave
aas
fisttpll
push
ret
and
mov
cmpsb
xchg
in
lock
stos
int
add
xor
loop
int3
pop
scas
lods
pop
jecxz
push
int3
jae
lds
cmp
subps
jnp
add
test
or
sbb
shrl
xlat
inc
lods
lret
push
jmp
ds
pop
loope
jne
pushf
in
popl
inc
fstpl
pop
jg
fdiv
shr
sbb
mov
xor
in
pop
xor
loop
mov
xchg
movsb
mov
xchg
test
or
jl
adc
xchg
mov
push
test
loope
cmp
sarb
mov
fwait
push
jmp
push
arpl
jp
xor
fildll
test
push
imul
mov
hlt
xor
loope
in
out
test
mov
mov
mov
imul
xchg
xor
inc
and
sahf
jp
cmpsl
pop
rcrb
inc
cmp
lods
jno
fstl
int
sub
pop
insl
pop
or
cld
mov
sahf
int
data16
lds
xchg
mov
cmpsb
popf
push
push
inc
xchg
push
add
pop
insb
xchg
mov
icebp
xor
xor
mov
push
jae
mov
pop
or
fsubp
mov
pop
inc
xor
xchg
or
dec
xor
std
mov
scas
xor
incl
inc
push
bnd
lds
cmpsb
test
enter
inc
popf
adc
cmp
jnp
bound
in
pop
into
adc
daa
sbb
jns
rep
int3
gs
xchg
hlt
dec
xchg
cmp
mov
jo
inc
or
fimull
test
orl
jns
add
push
ja
dec
xchg
je
addl
sub
xlat
sub
mov
sbbb
imul
pushf
cmpsl
jg
in
inc
inc
or
dec
ja
push
mov
xor
jns
xor
movsb
idivl
pop
mov
and
int3
pop
std
incl
jle
sbb
cltd
aad
mov
add
xchg
lahf
lahf
repz
fdivrl
xchg
pop
lcall
pop
daa
out
xor
mov
xlat
in
adc
xchg
dec
dec
and
xchg
enter
daa
icebp
test
dec
pop
mov
stc
jp
cmp
popa
shlb
xor
xor
sbb
bnd
out
mov
push
lret
test
addb
aam
pop
cmp
adc
sub
add
pushf
and
or
xchg
aaa
rolb
xor
out
add
sbb
dec
test
cwtl
add
add
inc
push
fcmovbe
incl
inc
mov
mov
add
sub
shrb
jle
shll
adc
adc
adc
rcrl
js
mov
rclb
dec
pop
adc
jmp
lock
inc
jp
insl
sbb
cs
mov
xchg
pop
or
and
or
idiv
jl
leave
cmpsb
imul
cmp
sar
orl
movsb
pop
das
subl
aaa
imul
dec
cmpsb
or
ss
mov
push
fisubrs
pop
es
push
and
xchg
fs
lret
cli
sub
ljmp
fs
lods
call
sub
inc
add
sbb
xchg
fs
repnz
cmpsb
lock
pop
push
bound
add
xchg
js
shl
jle
mov
sub
addr16
mov
inc
lods
jne
push
or
mov
stos
mov
jb
lods
pusha
xor
lods
lods
push
ds
loope
jg
push
xchg
cli
xchg
xchg
and
addr16
mov
or
sub
sbbb
lods
fisubs
mov
adc
adc
enter
imul
cli
out
repz
scas
cmc
aam
inc
dec
rcrb
das
rclb
sbb
in
insb
daa
jecxz
data16
in
adc
cmp
pop
xor
cwtl
into
out
jb
imul
mov
push
hlt
int3
movsb
div
jge
cltd
js
jne
adc
movsb
sub
ret
push
xchg
adcb
xor
lret
test
gs
pop
ds
and
or
cltd
add
or
shrl
pop
pop
jo
dec
and
xor
add
jne
fsubl
adc
imul
sbb
dec
into
xchg
divl
stos
cmpsl
mov
clc
popa
sti
mov
gs
mov
jno
ror
sbb
cwtl
fisubs
fcmove
outsb
cli
jge
pop
dec
sarl
aam
cmp
inc
jecxz
fsubl
inc
imul
or
cmp
pop
and
jbe
sub
mov
lret
test
xor
das
xchg
dec
mov
test
test
pop
pop
jle
es
and
mov
lods
xchg
mov
xlat
pop
pop
jns
or
xor
mov
pop
dec
jne
add
rol
mov
fwait
adc
jae
sbb
mov
das
insb
pushf
rcl
aad
sbb
jmp
jmp
popa
scas
xor
push
enter
aas
or
sub
mov
push
sahf
mov
lea
add
leave
pushf
mov
pop
or
cli
and
sbbl
dec
and
in
and
mov
mov
fisubs
loope
sbb
jae
pop
pop
inc
or
xor
jo
jns
imul
shr
pop
jb
pushf
hlt
aas
pop
addb
push
fists
nopl
push
mov
dec
or
dec
mov
pusha
pop
mov
sti
out
jnp
mov
mov
add
mov
xchg
cmp
rolb
js
repnz
repnz
mov
add
and
jmp
or
and
stos
sbb
repz
mov
movlps
inc
out
sub
mov
loope
jb
enter
inc
or
insb
int3
fdivs
and
shlb
cmpl
sbb
int3
out
add
pop
stc
popa
sbb
cltd
jle
add
cmp
pop
je
dec
cmp
sbb
adcl
inc
aas
fs
cmp
ret
mov
lea
cli
mov
xor
dec
fists
jae
inc
lea
mov
cmp
test
scas
repz
push
jl
push
add
push
inc
adc
out
lods
mov
fadd
jp
leave
xor
test
sbb
out
jne
fldcw
mov
add
sub
push
pop
pop
sbb
jmp
int
hlt
cmc
xlat
sbbb
rorl
mov
in
js
testl
imul
stos
in
fdivs
jp
jle
in
xchg
mov
or
and
jle
insl
jl
pop
jl
cmp
sti
mov
pop
pop
scas
sbb
mov
cmpsl
jp
mov
jo,pt
dec
adc
mov
pop
jne
jbe
shlb
push
std
jmp
les
daa
mov
push
jb
lcall
jnp
ja
fstpl
xchg
movsl
setae
sub
lret
push
es
push
dec
or
out
scas
shrl
out
jecxz
sub
rcrb
pop
in
dec
loope
cltd
xchg
es
roll
cli
lock
dec
xchg
pop
mov
add
out
lret
xchg
call
je
cmp
clc
xchg
xor
fldt
adc
repz
xor
inc
xchg
jne
and
mov
mov
int3
mov
popa
push
dec
fst
lcall
insl
jns
int3
mov
push
pop
ja
and
add
into
mov
sbb
lret
or
push
push
je
cwtl
push
mov
fdiv
push
aad
sub
inc
lds
cmpsl
xchg
dec
sub
push
outsl
fnstcw
inc
mov
dec
mov
fcoms
push
arpl
mov
cli
mov
mov
push
out
out
test
adc
rclb
inc
mov
sbb
adc
in
test
jecxz
sbb
cmpsl
adc
mov
dec
mov
xchg
sub
xor
pop
dec
lods
dec
push
pop
aam
sahf
test
xor
mov
aas
push
pop
sub
mull
xchg
aaa
push
jge
jecxz
rcl
ret
mov
mov
sbb
push
jnp
dec
push
jecxz
mov
adc
and
cmp
pusha
jg
add
cmpsb
and
imul
std
test
jmp
and
arpl
cld
pop
sbb
loop
hlt
inc
popf
cld
jl
cld
pop
lods
pop
or
inc
push
mov
mov
shl
cmp
div
sub
je
mov
repnz
clc
inc
xchg
inc
int3
aad
loope
fisubs
data16
pop
lcall
xchg
cmc
jnp
fs
leave
addr16
incl
pop
mov
adc
or
jns
push
jp
test
pushf
shrl
xchg
fsubrp
or
hlt
fmuls
hlt
mov
pop
data16
push
out
movsb
and
cmp
or
fidivs
hlt
popa
jge
pusha
mov
xor
aas
out
aam
jbe
outsb
jle
fidivrs
pusha
jle
cmp
sub
jge
stos
push
or
xchg
jae
imul
or
aad
xor
stos
mov
das
jmp
das
mov
jmp
push
scas
adc
lods
xor
jb
and
addr16
cmp
iret
fs
adc
lcall
cmp
insl
jbe
lahf
aaa
mov
jmp
fwait
push
add
cld
pop
push
push
repnz
jecxz
cmpxchg
das
pop
idivb
mov
push
sti
lahf
aad
or
and
xchg
jge
sub
int
mov
cmp
fsubrp
add
pop
mov
inc
inc
jae
pop
mov
ljmp
mov
lock
nop
insb
and
jne
call
popa
adc
add
jno
cmpsl
sbb
out
arpl
repnz
out
lea
arpl
idivb
insl
outsb
hlt
or
popa
or
popa
mov
and
xchg
into
or
sbb
ja
fmulp
shrb
add
mov
jb
add
scas
add
mov
iret
mov
xor
stos
aaa
orl
popf
je
incl
mov
xor
push
mov
push
mov
fwait
loope
sub
das
cwtl
fsubs
cmpsl
sub
shr
int3
idivw
fs
pop
cwtl
bound
mov
mov
push
popa
push
icebp
repnz
stc
dec
cwtl
rcll
lds
pop
cltd
dec
adc
outsb
inc
rcr
scas
enter
cmpsb
in
repz
xchg
lock
push
iret
push
cs
jecxz
and
push
push
and
movsl
popf
sti
mov
aas
inc
pop
test
pop
fdivs
idiv
cmp
add
cmp
mov
lcall
cld
ficoml
test
dec
out
push
xor
pushf
rclb
ror
lods
mov
mov
inc
adc
ret
bound
sbb
sbb
sub
and
aad
fcoms
and
xor
and
xchg
jbe
lods
rep
sub
xchg
loop,pt
mov
in
lods
jp
jno
pop
mov
sbb
push
stos
sub
pop
loope
cs
jmp
sbb
call
call
int3
xchg
dec
push
loope
rcl
cmp
cmc
jnp
push
les
push
or
pop
enter
add
jle
and
adc
retw
or
adc
icebp
jl
sbb
jle
cmp
xchg
gs
lahf
pop
sti
fdivr
adc
mov
adc
jp
push
shl
jnp
enter
sub
aad
sub
pop
shrl
lret
xchg
mov
push
scas
jo
loope
adc
or
add
fstps
fwait
insb
lds
jl
divl
out
jbe
cs
dec
xchg
pop
cwtl
push
dec
jmp
mov
lret
pop
arpl
dec
xor
out
add
lea
movsb
pop
push
pop
add
dec
sub
stos
jge
and
pop
mov
das
adc
mov
call
nop
jbe
jbe
mov
mov
dec
rcrb
icebp
mov
mov
shr
jp
sub
cmp
jno
sbb
and
repnz
mov
xor
test
xchg
mov
clc
pushf
nop
dec
adc
sahf
lods
jb
mov
xchg
mov
push
pusha
ja
test
in
jmp
jg
outsb
sti
lcall
mov
pop
push
clc
sbb
fwait
pop
out
sti
sbb
jle
cmp
imul
popa
dec
lods
mov
or
jp
std
das
xor
ficomps
mov
cmp
xor
cmp
adc
jnp
push
into
mov
ret
movsb
push
fldenv
mov
push
jae
int
mov
ret
rcr
testb
ret
cld
or
cld
mov
inc
jle
test
icebp
jne
out
inc
pushf
ret
dec
mov
add
mov
sub
addr16
test
in
mov
or
in
mov
mov
dec
pop
lret
sub
lods
add
stc
pop
pop
jne
out
mov
mov
xor
inc
inc
mov
and
xor
imul
add
mov
lds
in
inc
int3
movb
jae
orl
sub
jge
call
enter
inc
insl
fildll
and
jae
js
in
adc
sbb
in
xor
arpl
aad
mov
jg
adc
pop
dec
les
mov
sub
into
mov
mov
inc
mov
shll
push
nop
testl
test
sahf
pop
addr16
icebp
mov
mov
lea
test
into
out
xchg
rolb
mov
aas
xchg
add
dec
stos
xchg
adcl
xchg
fists
dec
push
jno
popf
hlt
int3
cmp
pop
imull
incb
addr16
test
mov
sub
push
std
mov
pusha
roll
add
sub
push
mov
mov
fwait
pop
xchg
jge
loope,pt
stos
adc
fisubrs
add
outsb
inc
lock
in
pushf
aas
sub
ret
fiaddl
sbb
mov
dec
hlt
repnz
mov
and
out
scas
adc
stos
mov
and
jmp
jl
pop
int
or
insb
sbb
cmp
inc
inc
or
outsb
fs
arpl
pusha
mov
movsl
arpl
scas
fildl
inc
or
incl
xchg
mov
fisttpl
pop
cmp
xchg
xchg
mov
push
mov
cmc
push
mov
or
dec
fdivr
and
aad
lods
xor
mov
or
pop
xchg
inc
loopne
insb
dec
js
inc
sbb
stc
test
mov
mov
fldln2
jo
lock
ds
cmpsb
adc
pop
mov
lock
outsb
push
mov
out
jne
pop
bound
pop
inc
adc
jbe
inc
xchg
cli
adc
pop
mov
lret
clc
scas
inc
cmp
fsubs
lcall
test
jo
imul
push
cmp
mov
rcll
and
mov
lds
pop
mov
xchg
in
sub
sbb
aas
xchg
loop
push
es
mov
sbb
in
stc
popa
jmp
mov
xchg
rorl
pop
mov
sbb
push
inc
xor
pop
into
inc
xor
xchg
stos
push
push
pop
repnz
loope
outsb
xor
loope
cmp
mov
scas
xchg
mov
fbstp
into
divl
xor
xchg
int3
ljmp
inc
mov
icebp
pop
mov
aas
out
fldt
sti
loop
std
xor
or
dec
push
and
jp
test
mov
mov
les
or
rorl
or
inc
das
arpl
sbb
adc
and
xor
pop
ret
cli
push
xor
pop
push
shufps
jle
sti
ja
or
scas
ss
pop
in
test
and
loopne
scas
jle
je
loopne
hlt
mov
ja
sub
pop
jae
loop
push
dec
scas
pop
fisubs
imul
ds
pop
inc
sahf
pushl
cwtl
fwait
and
addr16
mulb
daa
push
adc
xchg
addr16
and
in
pop
ret
jmp
and
scas
icebp
xchg
fldcw
jnp
sub
jns
xchg
aas
adc
mov
sbb
int
adc
add
js
jmp
dec
xlat
dec
adc
rdtsc
sub
fdiv
in
adc
iret
xor
aad
push
jg
adc
mov
mov
mov
loopne
add
negb
fcmovnb
dec
mov
xchg
addr16
jne
dec
arpl
je
aam
lahf
inc
and
cmp
test
mulb
mov
lea
outsl
inc
add
test
mov
xor
bnd
pop
xchg
int
jb
adc
push
inc
scas
data16
fs
push
popa
std
mov
mov
or
adc
jle
xor
insb
push
scas
js
in
sbb
repnz
stos
adc
sub
nop
mov
pop
dec
pusha
popa
dec
mov
jecxz
pop
inc
xchg
cmp
mov
fildl
ljmp
push
pop
or
cmpl
ja
inc
mov
cmpsb
pop
addl
sub
push
imull
and
dec
mov
aad
subl
mov
xchg
adc
xchg
mov
orb
aas
xchg
lds
mov
push
mov
lea
jnp
add
adc
call
cmpsb
jg
mov
mov
push
sbb
lock
adcl
stc
jne
pop
out
xchg
jmp
mov
das
mov
fstpt
popa
test
arpl
pop
pusha
mov
push
mov
push
dec
mov
loope
je
xchg
repnz
push
test
scas
sub
fsubrp
das
add
sub
jg
mov
ror
ds
arpl
inc
pop
xchg
movb
stc
push
mulb
fwait
mov
ret
mov
or
fistps
repz
sub
sbb
jmp
push
leave
and
jecxz
push
mov
inc
rorl
loope
push
sbb
test
mov
iret
xchg
pushf
hlt
and
xchg
cwtl
cmpsb
call
jmp
jbe
sbb
gs
fdivrl
mov
div
cmp
rclb
lcall
add
popa
adc
out
call
jnp
mov
sub
stos
aas
shl
mov
xor
push
jmp
mov
sarb
xchg
out
cs
movsl
push
sub
push
cwtl
inc
enter
sub
movntps
adc
jle
test
cltd
mov
insb
mov
test
test
das
xchg
jge
adcl
pushf
mov
or
cmp
mov
or
sub
enter
xchg
in
and
mov
out
mov
ficoms
and
movsb
loopne
jg
push
push
lcall
sahf
xor
mov
xchg
addl
orb
lret
dec
pop
stos
jb
les
stc
insl
lret
sbb
aad
xchg
jno
cmp
lods
xchg
inc
daa
lret
xor
ret
gs
pushf
dec
cwtl
mov
mov
add
ljmp
dec
lahf
loop
shl
jns
inc
roll
je
les
pusha
frstor
inc
xchg
pop
cltd
push
stos
daa
cld
jp
pop
cmc
mov
jp
scas
mov
xor
push
mov
jb
dec
adc
xor
fldl
ret
stc
push
pusha
movsl
push
mov
leave
xchg
adc
nop
repz
xchg
push
cld
xchg
jno
sub
in
imull
orb
gs
inc
test
es
inc
insb
push
hlt
int3
mov
dec
mov
daa
jnp
sbb
addl
popf
fists
out
inc
adc
xchg
and
fsubl
loop
jge
add
mov
or
popa
jnp
xchg
dec
mov
and
sub
aad
dec
pop
stos
mov
or
adc
pop
dec
out
jnp
out
testb
mov
mov
out
xor
push
adc
and
mov
in
pop
out
aas
jo
aas
and
xor
les
xor
ljmp
push
out
adc
shrl
jl
add
xor
fistps
mov
push
xchg
pop
outsl
sbbb
fsubp
pop
mov
es
jne
aaa
or
testb
fsubr
or
filds
push
jno
sar
out
ficomps
movsb
or
adcb
xor
jo
mov
push
ja
or
pop
push
sub
mov
icebp
push
adc
movsb
mov
jmp
in
adc
push
dec
int3
repnz
in
mov
cmp
mov
sub
hlt
pusha
mov
lods
insl
push
icebp
push
pusha
sar
xor
mov
inc
dec
adc
das
cmc
fdecstp
xor
xor
sbb
out
enter
adc
xchg
daa
and
inc
xchg
test
ficoml
jae
sti
jle
add
add
fistpl
sbb
aam
shll
out
cmp
jno
mov
bound
scas
cltd
mov
add
sub
xchg
fsubrs
jno
mov
dec
cwtl
or
rclb
stos
shrl
in
push
xchg
push
rcll
mov
nop
loopne
jp
loopne
push
cmp
lret
xor
iretw
mov
sahf
cmp
inc
les
sub
pusha
add
imul
mov
daa
fmuls
xchg
insb
cmp
mov
adc
pop
int3
movsl
cmp
push
shl
ja
insl
je
lods
fwait
adc
dec
dec
pop
cltd
pop
test
or
or
or
and
rcrb
sub
mov
out
sub
jno
sbb
cmp
mov
lret
outsl
loope
lock
shrl
mov
jne
adc
movsl
jp
lods
mov
jae
dec
inc
and
sahf
push
andl
leave
mov
pushf
adc
addr16
lahf
inc
jecxz
mov
push
addl
into
push
dec
cld
push
sub
enter
lahf
push
pop
out
cmpsl
test
idivl
ss
cmpsl
fs
cmc
sbb
es
mov
sbb
fwait
jns
jl
gs
cmp
sbb
mov
push
mov
pop
mov
sub
mov
push
pop
daa
mov
xchg
sub
cltd
add
xchg
mov
lahf
dec
pop
enter
xor
sbb
cmpsb
mov
and
xor
sbb
xchg
push
jo
div
in
lock
adc
mov
rcll
pop
jecxz
js
rcrl
inc
mov
or
or
sub
mov
pop
into
mov
xchg
and
jno
insb
and
gs
clc
sbb
xchg
mov
hlt
daa
test
pop
xchg
inc
push
cs
je
mov
xchg
sbb
sub
insb
sar
jmp
dec
mov
dec
std
lea
jecxz
loope
and
lock
add
andb
das
mov
loop
addr16
mov
inc
sub
sbb
xor
push
dec
adc
mov
test
inc
les
mov
push
add
lret
mov
into
pop
cmc
jae
sahf
stos
ja
mov
mov
push
mov
xchg
int3
jmp
jns
mov
and
add
xchg
adc
and
add
add
jae,pn
addl
pop
inc
mov
jne
mov
add
or
dec
mov
inc
outsl
psrad
mov
xchg
test
jecxz
pop
iret
in
hlt
pop
repz
mov
jnp
sahf
jne
in
outsl
or
das
mov
jnp
repz
out
je
mov
jp
dec
dec
mov
mov
mov
data16
or
mov
and
orl
je
aad
cmp
adc
adc
pop
and
add
fldcw
ret
dec
mov
xlat
pop
inc
push
test
loope
add
loope
cltd
or
mov
lock
clc
push
dec
enter
jo
fistpll
xchg
pushf
or
in
adc
pop
xor
scas
stos
inc
aam
leave
outsl
xor
loop
adc
or
add
and
jp
out
xchg
mov
aas
neg
mov
cmp
or
orl
lock
std
fsubr
push
jns
jp
in
jecxz
jp
and
test
inc
or
add
inc
jae
dec
inc
lret
cmp
icebp
lcall
mov
adcb
jmp
out
sti
cli
enter
ds
roll
test
mov
and
cltd
stos
jae
fwait
and
push
cli
and
f2xm1
add
loopne
push
cwtl
adc
fwait
loop
frstor
stos
cmpb
es
mov
pop
pop
push
xlat
test
mov
pop
jns
sahf
adc
push
lcall
test
sub
dec
push
mov
adc
fs
mov
xchg
pop
push
loopne
ds
cmp
jl
lret
das
xor
rcrl
cmp
xchg
push
stc
push
fldcw
es
rol
rcrb
mov
pushf
int
mov
dec
lock
sub
or
or
call
mov
or
int3
jno
fildl
mov
sbb
sbbl
jae
push
push
orl
xchg
pop
ja
aas
lahf
clc
sarb
addr16
iret
adc
movsb
loop
lea
sub
xchg
fs
jno
pop
cmp
scas
cmp
xor
cs
sub
sahf
mov
jae
add
cld
popa
lret
pushf
pop
cltd
jns
ds
pop
insl
jg
mov
call
dec
xchg
loop
imul
dec
pop
adc
pop
insl
rcll
mov
xchg
cmpl
pop
lea
adc
data16
add
xchg
pop
dec
int3
jns
popf
jle
cld
lret
sub
fiaddl
jge
aas
adc
addb
and
fstl
cmc
mov
mov
addr16
mov
in
cmc
ret
in
xlat
test
or
stos
in
das
or
and
dec
fs
xor
jb
lret
adc
out
adc
shll
out
and
xchg
sub
mov
fsub
push
and
jo
pop
jo
pop
and
scas
sub
insl
nop
iret
lahf
pop
js
arpl
sbb
xchg
xchg
shlb
scas
sbb
fldcw
jle
inc
cbtw
hlt
and
mov
aaa
cltd
adc
adc
push
popa
xor
stos
push
xorb
jb
imull
arpl
sub
adc
mulb
adc
data16
or
mov
xor
das
fildll
mov
push
scas
aas
arpl
imul
movl
fstl
test
xchg
int
cmpsb
insb
add
pop
cmpl
push
inc
cmp
add
enter
cld
adc
sbb
iretw
mul
add
adc
cli
lds
aad
les
icebp
sti
jp
out
cmp
mov
adc
in
inc
mov
mov
idiv
jo
clc
cmp
push
cld
and
mov
sbb
imul
sbb
inc
push
adc
repz
jne
dec
stc
cmc
add
inc
xchg
or
sub
rcll
mov
push
add
sbb
jne
daa
pop
gs
cli
xorb
xchg
pop
mov
stc
cmp
mov
js
ss
sti
mov
ljmp
cmpsl
hlt
lods
jmp
add
adc
xor
sbb
into
test
adc
xor
sub
aaa
lret
or
add
cmp
jg
test
sub
jae
add
fdivl
shr
insb
push
leave
lock
push
call
xor
enter
pusha
js
xor
popf
popa
pop
xor
pop
and
adc
dec
sti
mul
jmp
daa
jnp
adc
sbb
mov
mov
or
cmp
repz
push
dec
mov
push
or
test
pop
mov
xor
enter
lea
out
jmp
je
sub
outsb
mov
inc
out
xlat
xchg
aas
mov
flds
mov
inc
gs
pop
movsb
gs
out
loope
sbb
sbb
adc
adc
add
mov
loope
jnp
into
pop
pop
stos
ljmp
mov
mov
imul
mov
or
mov
cld
cltd
lods
js
push
fwait
pop
xor
sbb
mov
pop
mov
mov
adc
sbbl
sysenter
pop
adc
dec
sbb
pop
mov
inc
jmp
sub
pop
mov
xor
adc
imul
xor
xchg
push
or
inc
test
ret
and
xchg
xor
fistpll
mov
mov
gs
cli
adc
push
das
sbb
sub
lock
pop
rclb
lods
ret
fwait
es
push
pop
je
mov
mov
xchg
sbb
popa
call
jge
mov
xlat
cmp
sbb
clc
insb
push
sbb
and
sub
data16
es
aaa
and
push
divl
push
iret
aas
push
mov
sub
arpl
testb
mov
popf
mov
and
in
les
daa
call
lret
lds
iret
movsb
xor
push
jnp
addr16
ljmp
mov
mov
jae
xor
sub
out
push
gs
jno
and
xor
cld
cltd
cld
pop
xchg
ficoms
jns
loope
sbbb
lods
and
or
adc
mov
pop
inc
jmp
mov
sub
cmc
jae
jg
push
fdivl
iret
mov
pop
dec
mov
dec
cmp
mov
popa
outsl
imul
inc
out
lcall
pushf
shl
fwait
lahf
lret
notl
jecxz
lock
lds
mov
test
jp
popa
addl
lahf
hlt
test
jo
inc
cs
sbb
hlt
stos
sub
and
dec
pop
pop
xchg
call
cmp
jbe
cmpsb
add
arpl
cltd
daa
ljmp
out
cmpb
aam
jle
inc
pop
sti
mov
imul
mov
movsb
jge
push
aam
cmp
or
movsb
call
movsl
outsb
dec
test
inc
lods
ja
dec
in
xchg
and
mov
pushf
pop
mov
int
cmpsb
lods
jbe
gs
mov
stos
cs
sub
fsubs
movsl
add
mov
mov
addb
imul
dec
out
cld
sbb
fs
push
add
repnz
out
bound
arpl
push
pop
jno
mov
mov
jnp
pop
mov
out
mov
xchg
repnz
dec
aam
mov
cwtl
xchg
leave
loopne
push
jnp
bound
sub
fidivs
lock
nop
mov
jo
mov
in
pop
mov
pushf
jbe
arpl
jp
xor
sbb
cs
jge
ss
rcrl
cmpsb
fdivr
movsb
es
jp
cmp
push
aam
dec
mov
adc
mov
das
inc
jne
sbb
jl
xor
ss
call
adc
add
imul
gs
inc
dec
mov
stos
add
out
cmpsl
cmp
fs
jno
sub
stc
into
out
pop
inc
or
imul
inc
or
test
in
jp
push
shr
push
xchg
xor
push
cmp
sub
push
sbb
add
sub
lods
xorb
mov
pusha
adc
data16
xor
jg
jns
lods
push
ret
pop
arpl
testb
xor
push
fdivr
mov
xor
das
add
mov
clc
jo
mov
push
rolb
mov
test
dec
add
test
push
rcrl
fdivl
pop
sar
mov
and
notb
or
or
inc
xor
dec
sub
pushf
jg
lea
cs
lea
mov
xor
push
sbb
mov
popf
xor
shlb
push
out
push
xchg
shll
adc
aas
test
cmp
cwtl
jbe
pop
sub
test
arpl
sahf
xchg
or
popa
test
shrl
xchg
and
fsubl
shlb
xor
out
repnz
and
xor
mov
mov
xchg
jo
sub
movsb
pop
jg
pusha
in
cmpsl
jns
leave
aam
adc
push
in
push
loopne
imul
dec
enter
mov
sub
inc
ficoml
ficoml
and
aas
jne
push
and
ds
jno
dec
je
or
lcall
adc
xchg
data16
fsub
inc
movsb
xchg
mov
ret
mov
mov
dec
in
cmp
pop
adc
imulb
push
loopne
loopne
dec
lods
and
mov
jecxz
adc
mov
clc
int3
mov
scas
add
mov
out
xchg
inc
dec
es
and
xchg
orb
hlt
ret
fdivp
filds
and
mov
jle
or
pushf
scas
movsl
loopne
or
test
pop
movsl
inc
dec
push
insl
data16
imul
dec
aaa
daa
sarb
jle
dec
mov
enter
push
pop
mov
and
xor
sub
pop
jle
pop
push
lahf
and
shll
shll
pop
mov
ror
in
ljmp
js
in
add
or
std
in
jae
jbe
cmp
xchg
and
lea
xchg
and
cmp
or
fwait
inc
jge
cltd
ss
push
icebp
lret
hlt
push
daa
lahf
cmp
daa
or
stos
push
or
dec
sbb
push
bound
xchg
and
test
pop
cmp
popf
fisttpl
pushf
lcall
stos
pop
pop
and
sbb
jne
jl
fimull
jg
cmp
cmp
xchg
add
les
shrb
and
divl
sub
clc
in
divl
pop
aad
movsb
jo
flds
dec
int
sub
jmp
cmc
aad
outsl
jmp
lcall
orb
cli
sub
mov
sub
cmp
add
xchg
test
popa
adcl
in
pop
stos
pop
clc
dec
clc
add
fmuls
inc
ljmp
ret
adcl
pop
out
sbb
imul
das
mov
mov
cmp
clc
orb
push
jl
idiv
adc
xchg
popa
and
adc
pop
inc
clc
nop
mov
and
mov
sub
push
adc
imul
cmp
out
push
xor
cltd
cmp
sbb
fsts
ja
and
lods
cltd
das
shlb
dec
aad
addb
xor
or
cmpsb
pop
adc
jnp
test
repz
sub
mov
xor
stos
mov
ljmp
adc
mov
addr16
sarl
ljmp
cwtl
addl
pop
mov
push
std
pop
xlat
cmp
sbb
push
js
pop
ja
out
cli
pusha
mov
lods
lods
rcll
fbld
aaa
jbe
fadd
jp
pop
pop
xor
inc
jge
fisubs
jp
mov
dec
mov
inc
out
mov
int3
movsl
or
icebp
out
mov
js
test
imull
adc
lods
add
and
jp
mov
cmpsb
mov
daa
leave
xchg
cmp
jge
sbb
adc
sub
add
sahf
out
jb
jg
push
inc
out
push
out
xchg
rdmsr
aad
pop
fdivl
adc
xchg
and
inc
sar
int3
ficomps
jl
fisubrl
mov
add
test
adc
adc
out
and
pop
add
jbe
mov
adc
notb
sbb
in
adcl
mov
push
daa
lods
add
pop
repz
push
hlt
idivb
lds
jns
pop
or
and
jg
push
adc
pop
fdivl
sahf
scas
leave
push
cmpsb
scas
fnstcw
jecxz
dec
addb
mov
sbb
add
rorb
stos
nop
inc
pop
lods
nop
cmp
es
cmpb
inc
mov
ja
pop
call
cmp
out
mov
outsl
or
pop
pop
daa
scas
popf
push
fstps
rorb
or
orb
push
loop
or
aaa
mov
leave
jbe
mov
stos
xor
mov
test
or
cmc
push
daa
cmp
push
inc
sbb
push
neg
inc
inc
insb
jg
cmpsb
mov
shl
xchg
mov
mov
loope
cmc
push
push
movsb
bound
mov
inc
pop
ljmp
pop
pop
popf
leave
insl
test
daa
pop
xchg
test
push
arpl
xchg
dec
cmp
jnp
aad
pop
inc
ljmp
insb
or
pop
inc
sub
fists
ret
sti
jno
lcall
ret
sbb
cmp
mov
and
jnp
scas
add
mov
cs
or
mov
xor
test
ljmp
inc
pop
loopne
cmp
mov
xchg
push
insb
pop
push
scas
cmp
cmp
or
sub
push
xchg
push
cmc
mov
mov
cmc
adcl
roll
js
inc
imul
sub
mov
repnz
xor
nop
sub
jno
cmpsl
or
test
cmc
jno
push
pop
shlb
hlt
and
sti
or
shlb
imul
outsl
or
fcmove
das
or
pop
mov
xchg
int3
mov
out
push
inc
test
lods
enter
nop
dec
jl
lds
xor
adc
dec
inc
mov
imul
pop
mov
pop
push
fwait
jmp
repz
mov
nop
fucomp
xchg
adc
dec
out
jns
inc
insl
xchg
mov
jns
mov
pop
pop
mov
inc
xor
pop
scas
fidivl
out
es
push
faddp
fbstp
idiv
and
out
js
in
sub
lret
push
jge
sbb
test
jecxz
mov
adc
repnz
sbb
mov
arpl
pushf
lret
add
mov
push
test
or
out
xor
cltd
sub
scas
jo
loope
add
dec
cmp
cmp
adc
cwtl
or
es
movsl
repnz
insb
clc
cmp
cmp
pop
push
jno
jnp
mov
icebp
loopne
lret
idivb
mov
out
sbb
dec
mov
xor
mov
loop
nop
sbb
xchg
pop
pop
or
test
arpl
dec
adc
pusha
xchg
pop
xchg
int
jns
mov
nop
in
or
or
adcl
mov
stos
les
add
out
push
ljmp
out
lods
sahf
data16
insl
popf
in
adc
roll
test
jnp
dec
sub
mov
out
cld
or
pop
mov
fimull
pop
arpl
in
sub
cltd
xchg
call
js
in
addl
pop
aaa
dec
aad
insl
in
push
leave
xor
cmp
and
ja
rcl
lahf
outsl
leave
jne
out
xor
mov
xchg
push
decl
insb
add
jb
sti
hlt
out
xchg
cld
and
mov
sbb
add
cs
inc
push
shrb
shlb
stos
mov
in
and
add
mov
mov
xchg
xchg
cld
adc
cltd
dec
and
mov
dec
idiv
das
cld
mov
in
mov
mull
int3
inc
rclb
inc
arpl
lret
loopne
jo
inc
mov
test
adc
and
ficompl
jp
inc
pop
cltd
imul
pop
ss
call
sbb
repnz
mov
das
jp
out
data16
sti
adc
jnp
loopne
xrelease
loopne
movsb
dec
jno
loope
add
popa
dec
mov
mov
push
test
jne
gs
mul
pop
testl
add
scas
and
mov
cmpsl
push
mov
loopne
mov
jo
mov
xor
aaa
cwtl
mov
fs
lret
push
insb
or
jecxz
and
push
fdivs
dec
mulb
push
repz
lcall
cmp
shlb
dec
dec
sub
mov
clc
enter
push
mov
loopne
mov
cmp
pop
cmpsl
test
mov
or
or
loop
mov
sub
fcmovb
scas
and
push
sub
loopne
inc
mov
dec
add
pop
popf
xor
dec
nop
aaa
out
cmc
dec
fbstp
jecxz
mov
inc
jle
cltd
sbb
xor
iret
jp
out
lret
dec
inc
jmp
orb
pop
daa
or
lods
mov
push
out
popa
jecxz
pop
das
cmp
pop
xor
scas
imulb
icebp
stc
test
dec
popf
cmp
dec
or
mov
mov
mov
scas
std
mov
rcrb
push
std
jecxz
push
add
add
gs
imul
mov
and
mov
outsb
push
inc
mov
notl
xchg
mov
jo
mov
sbb
out
jnp
mov
shl
ja
jae
mov
push
insb
adc
outsb
mul
jge
or
add
loopne
mov
inc
lcall
shrl
dec
inc
bound
sbb
cmpl
xchg
dec
loopne
jg
fiadds
leave
sarl
stos
cmp
pushf
shl
sarb
test
mov
xor
add
sub
imul
es
mov
and
lods
xor
sbb
repz
repnz
mov
aaa
jae
test
lds
les
mov
mov
dec
mov
pop
bound
xor
push
add
or
rcll
adc
mov
les
sub
xchg
push
and
pusha
cmp
mov
outsl
inc
mov
or
add
or
mov
into
pop
nop
mov
fidivs
push
or
les
pop
xchg
add
hlt
fisttpl
int3
divb
inc
jmp
push
or
addr16
lock
sbb
jmp
iret
xchg
loop
fisubl
lock
vmovdqa
and
fmull
mov
ffree
scas
push
adc
and
in
and
pop
int
dec
xor
sub
gs
cmp
and
pop
stc
nop
aaa
fdiv
mov
das
mov
rcr
or
imul
addr16
insb
mov
sub
rol
divb
fldl
in
faddl
mov
or
adc
dec
lret
repnz
inc
xchg
pop
push
lcall
arpl
add
imul
flds
mov
xor
mov
cs
mov
mov
icebp
jle
movsb
into
pop
popa
scas
rolb
ja
pop
dec
andl
lret
xor
jmp
mov
mov
ss
add
ja
add
push
jp
and
inc
stos
test
or
sbb
adc
es
iret
lret
out
fdivrs
movsb
sub
out
dec
cmp
xchg
into
xchg
out
and
pop
cmp
add
lea
fmul
mov
pop
sub
ret
xor
lea
bound
lds
aaa
lret
lcall
mov
call
mov
ret
jne
inc
imul
mov
fcompl
negl
xor
pop
push
mov
mov
data16
call
lock
inc
js
jbe
fldcw
adc
pop
pop
andl
out
ss
fistps
cmp
insl
mov
hlt
sbb
xor
call
push
bound
pop
jo
lahf
scas
mov
cli
jb
or
add
xchg
push
adc
pop
sub
xor
mov
rorb
sub
popf
mov
test
xchg
inc
pop
lcall
xchg
pop
outsl
shrl
jae
inc
cmp
cmp
roll
sbb
popf
jecxz
cmc
add
shl
movsb
rclb
insl
stc
ljmp
cli
sub
loope
add
ret
or
cli
mov
cs
push
pop
xlat
xor
insb
movsb
ja
fidivrs
int3
sub
sbb
rep
inc
xor
mulb
mov
test
cwtl
xchg
loopne
lahf
mov
arpl
pop
sti
lods
cltd
mov
push
fidivrl
push
scas
mov
leave
xchg
cmc
test
nop
or
xchg
pop
xchg
repz
lea
imul
rcll
mov
daa
mov
aam
dec
sub
jne
lea
pushf
lods
jmp
mov
xor
mov
push
jge
test
and
js
sub
adc
aaa
jl
xor
in
lock
jl
xchg
movsl
sub
ja
adc
push
add
mov
loopne
lret
mov
jg
mov
sbb
inc
es
xchg
ret
loope
push
pop
fiaddl
push
mov
fidivs
imul
psrlq
loope
jp
enter
jns
outsb
mov
pop
sub
push
pop
xchg
mov
test
ja
sti
dec
fidivs
adc
ljmp
lahf
mov
insb
inc
pop
jmp
adc
pop
mov
aam
loope
fadds
imul
pop
iret
sbb
ss
push
ret
xor
jne
xchg
ljmp
jbe
jge
rclb
or
mov
adc
jno
out
adc
sbb
cmp
mov
in
outsb
ljmp
std
add
or
nop
lods
or
fcmovu
scas
mov
sbb
jmp
xor
mov
and
inc
mov
gs
and
negb
sub
fistps
mov
loopne
pop
adc
cmpsl
fwait
imul
push
js
int
cmp
push
and
loope
mov
push
and
xor
rcll
orb
inc
fiaddl
sbb
xor
mov
and
scas
cmpsb
leave
jge
shll
adc
sbb
fst
mov
and
pop
cmc
cltd
mov
dec
pop
sbb
pop
jno
mov
insl
mov
add
push
cmp
fs
insb
sub
sub
ror
add
dec
sub
test
dec
test
sbb
arpl
shl
pop
divl
xchg
and
pusha
xchg
adc
ret
jbe
cmp
push
xchg
mov
inc
lret
mov
mov
cmp
or
addr16
mov
cmp
pop
pop
imul
push
jne
cmp
sbbl
imul
bound
push
test
mov
popf
cmp
adc
xchg
pop
loopne
inc
call
js
adc
cmpsl
inc
mov
sbb
lret
popf
fbld
les
test
xchg
fsubrl
cmp
cmpb
add
jp
jb
push
int
jb
repnz
stos
mov
ss
or
jp
inc
cmp
inc
fcmovnb
push
ja
add
cmp
cmpsl
mov
lods
jo
inc
shrb
insl
cmp
pop
push
lea
stos
mov
test
lret
adc
mov
dec
sbb
lahf
ja,pt
rcrl
pop
jae
insb
imul
inc
int3
push
clc
sti
std
das
mov
pop
xor
cmp
into
mov
rorl
test
xchg
stc
js
cmp
pop
add
int3
mov
xchg
stos
sbb
push
push
add
sub
in
gs
and
push
repnz
pop
mov
dec
mov
mov
movsl
subl
icebp
fsubrs
lock
xchg
fs
in
sub
js
jl
lock
mov
xchg
xchg
popf
adc
or
mov
push
cs
or
mov
xchg
mov
sbb
arpl
mov
push
stc
sub
or
push
cltd
xor
pop
cwtl
fld
rcrl
cmp
rcl
adc
pop
jmp
orl
bound
inc
lods
into
mov
adc
mov
aas
gs
ret
sahf
mov
mov
fistps
hlt
cmp
pop
add
xchg
xlat
push
jle
mov
dec
loope
mov
popf
inc
jl
cmpsl
pop
rcll
stos
inc
mov
testl
clc
jecxz
adcl
dec
xchg
cld
lret
outsl
inc
mov
fs
add
xor
mov
mov
fadds
bound
cltd
shll
fbld
mov
mov
jecxz
dec
adc
ss
aad
repz
outsb
adc
pop
sti
fwait
leave
scas
dec
lods
adc
xchg
sub
lods
mov
jae
pop
mov
fmul
ds
pusha
or
pop
movsb
js
jns
fcoml
sub
sbb
rorl
cmp
xchg
pop
mov
mov
inc
fldenv
out
aas
sub
adc
insl
adc
xchg
subl
movsl
fsubrp
jp
cmp
out
and
mov
imulb
enter
cmp
fwait
mov
bound
sub
out
sti
lea
mov
gs
mov
cli
aam
arpl
int3
jmp
out
mov
fdivrs
push
insb
sbb
in
sbb
xchg
mov
rclb
dec
jb
std
mov
jnp
cltd
int3
add
cmp
lret
and
mov
push
and
mov
ljmp
lods
jp
pop
xor
or
pop
les
les
xor
mov
push
rorb
add
mov
testl
push
cmp
or
xchg
imul
ds
sar
sbb
ret
xchg
scas
mov
fisttpl
pop
cmc
into
imul
arpl
push
insb
mov
mov
add
jecxz
and
jne
cwtl
jmp
jmp
jmp
jne
sti
cwtl
jno
mov
mov
cmp
pop
testb
inc
scas
adc
adc
cmp
jne
enter
cmpl
push
jnp
pop
adc
mov
xor
clc
dec
cmp
pusha
cld
cmpsl
test
aam
adc
out
push
pop
out
cmc
cli
xchg
es
pop
mov
sub
dec
inc
mov
out
mov
push
fistpl
dec
mov
sti
insb
or
xor
jmp
dec
mov
cmp
xor
xor
cmp
leave
inc
popf
sbb
ret
test
movsl
cmpsb
xorl
mov
sbb
mov
mov
cld
adcb
inc
xchg
test
test
and
and
and
cs
adc
push
das
push
ret
aas
xor
xor
cmp
ret
inc
lods
sub
jo
wbinvd
insb
mov
fildl
mov
je
xchg
std
mov
lcall
scas
fldl
rclb
jo
lret
pushl
adc
aaa
push
in
add
test
aam
stos
mov
in
pop
inc
inc
push
enter
cmp
ficomps
jns
push
cwtl
das
adc
icebp
jo
aad
scas
jmp
decb
aas
pushf
pop
inc
gs
fidivs
mov
paddsb
sarl
fidivrs
imul
mov
dec
fs
cmc
mov
pop
outsl
cmpsl
test
loopne
fmuls
jmp
stos
cmp
pop
lock
rcl
push
mov
dec
je
test
into
pop
xor
hlt
loopne
or
mov
js
cmp
and
pusha
adc
xchg
mov
or
xchg
cmp
add
dec
push
lahf
jmp
cs
cmp
xor
xorl
fcompl
mov
mov
cmpsl
sahf
lret
jb
enter
repz
mov
insl
pop
in
mov
jo
or
movsl
add
push
lods
outsb
jnp
add
rorl
stc
adc
pop
sub
lock
xor
int3
push
pop
and
xor
out
mov
sbb
rol
dec
cmc
mov
rorl
imul
mov
or
push
push
scas
cmp
inc
push
push
pushf
lds
inc
xchg
jae
push
jmp
dec
mov
ret
nop
dec
hlt
std
sub
pop
ljmp
rcrb
or
into
xchg
and
inc
pop
shll
je
nop
lock
stos
and
dec
je
push
mov
jle
xchg
pop
pop
dec
cs
cmc
mov
mov
sbb
mov
aad
out
or
jecxz
sub
into
mov
loopne
imul
popa
sahf
xchg
pop
das
sub
push
mov
pop
xchg
mov
jo
mov
insb
fwait
addr16
fwait
iret
je
and
les
popa
sub
aam
and
sub
push
push
push
ss
movsb
xchg
ljmp
or
dec
mull
in
popf
test
jno
repnz
mov
jl
lods
ljmp
cmp
jle
idiv
in
cld
lods
pop
psllq
cwtl
xchg
push
mov
mov
sbb
and
mov
out
mov
or
gs
sbbb
imul
rcl
push
jnp
loopne
test
pusha
lret
mov
adc
push
call
in
and
out
loope
adc
xchg
fwait
stc
pop
sub
stos
mov
jo
mov
xchg
mov
cld
repnz
push
push
loopne
mov
pushf
enter
data16
cwtl
or
adc
notb
cmp
aaa
jae
cmp
mov
jo
add
imul
pop
xchg
adc
mov
shr
lret
shrb
inc
xchg
push
in
jle
imul
pop
cmp
or
lcall
ret
cmp
clc
xchg
adc
lods
inc
mov
xchg
ret
pop
dec
push
dec
adc
mov
es
ret
shr
mov
mov
fstl
mov
fmul
movsl
dec
add
xchg
mov
push
sub
inc
enter
call
mov
mov
cmp
in
inc
lret
adc
repnz
idivl
xchg
das
push
pusha
in
imul
mulb
pop
dec
loopne,pn
lea
push
imul
nop
cmpsb
pop
fstpt
and
push
dec
adc
out
stos
lret
xchg
ss
or
out
add
sti
fwait
insl
and
cld
outsl
mov
fistpll
sbb
xor
push
xor
popa
xor
dec
insl
pop
rcrb
push
cmpsl
add
testl
std
inc
inc
mov
insb
ss
arpl
sbb
ja
scas
cli
adc
sbb
mov
xchg
and
xor
mul
repnz
sbb
in
in
cmp
mov
push
nop
lock
push
cmp
ret
xchg
mov
into
jae
pop
and
leave
cmpsl
pop
enter
push
sub
pop
lahf
lods
gs
mov
jge
xorl
or
addb
scas
adc
sub
inc
mov
mov
fsubs
push
testb
imul
xor
push
fprem1
or
scas
aas
jge
pusha
cmp
cmp
ds
outsb
cli
add
pop
jbe
dec
jle
push
sbbl
scas
cmp
int3
dec
outsb
mov
jmp
pop
jg
add
imul
dec
outsb
and
cli
xchg
arpl
shlb
pop
pop
insb
aad
fwait
mov
mov
add
add
nop
cmp
adc
loopne
mov
pop
push
lea
push
out
sbb
mov
push
scas
push
mov
push
sub
imul
imul
add
js
mov
xorl
push
push
and
add
mov
popf
cmp
loopne
dec
out
and
xchg
ljmp
sbb
mov
dec
inc
adc
push
xchg
adc
dec
stos
or
push
addr16
inc
pop
sbb
push
mov
in
movsb
test
cwtl
dec
push
nop
mov
push
clc
popf
inc
sub
rorb
insb
out
sub
cltd
popf
popa
enter
iret
stos
jbe
repz
test
push
mov
add
mov
xchg
into
sbb
cltd
push
xchg
lea
js
imul
test
int3
pop
mov
decl
in
outsl
jg
pop
inc
jmp
mulb
int
push
xchg
test
or
push
sbbl
add
mov
jge
mov
aas
dec
adc
loopne
addb
int
loope
aaa
xchg
mov
xlat
movsb
and
addb
inc
or
in
add
rorw
test
sub
insb
jne
add
test
lea
lret
or
outsb
out
pop
mov
pop
xchg
rolb
pop
pop
mov
xor
xchg
xchg
pop
movsb
ljmp
cmpb
shrd
lret
push
js
jae
sti
mov
mov
push
mov
outsl
fnstsw
ja
push
rolb
lea
rcll
sub
mov
js
lret
mov
xchg
pop
mov
cmp
sbb
mov
pop
dec
mov
jae
clc
hlt
stos
mov
sbb
cli
sti
dec
sub
push
cli
adc
pop
push
jne
cmpsb
xchg
stos
push
test
dec
or
shl
push
pop
lcall
pop
lcall
sbb
jo
xor
jl
out
ret
lret
xor
add
fstp
jae
pop
fsubs
data16
sbb
insb
sbb
cmpl
jl
lret
lcall
daa
addr16
adcl
mov
cmc
mov
sbb
gs
mov
push
mov
fnsave
gs
push
adc
mov
pop
jne
out
and
lahf
mov
jle
adc
inc
cmpsl
cmp
in
scas
or
scas
aad
jnp
add
sbb
into
rclb
adc
pop
rcr
cmp
in
add
lret
dec
dec
adc
jo
jl
cmpsb
and
int3
sbb
in
sbb
test
test
dec
inc
add
mov
inc
popa
sbb
pop
mov
cmp
jbe
in
jl
ret
addr16
dec
sub
lcall
pop
inc
adc
insb
dec
lods
xor
add
repz
mov
jnp
nop
sbb
movsl
addr16
pop
and
push
adc
or
pop
pop
or
jl
lea
je
add
mov
adcb
movsb
push
inc
xchg
jmp
add
fisttpl
sbb
and
movsb
hlt
jno
je
push
daa
xchg
aad
inc
out
and
fcmovnu
xor
and
sbb
mov
mov
or
mov
mov
xchg
sub
jb
jle
cmp
xchg
test
pop
sbbl
pop
nop
dec
sub
jmp
gs
jo
xor
xlat
push
sub
je
daa
dec
and
mov
mov
adc
cltd
stos
add
into
xor
mov
mov
out
jo
adc
push
lods
pusha
cltd
jecxz
xor
inc
mov
clc
and
xchg
fst
loopne
cld
fstps
mov
adc
int
add
mov
call
out
jno
iret
fwait
or
stc
nop
mov
int3
xchg
rclb
and
cmp
jmp
xchg
out
cmp
fwait
insb
insb
pop
sub
mov
and
pop
dec
and
loope
and
mov
sub
dec
scas
or
or
aas
ja
clc
pop
fldt
add
inc
fimull
gs
xchg
arpl
aaa
push
xchg
clc
insb
clc
sbb
cmp
int3
ja
fstps
lea
fidivrl
stos
fidivs
das
dec
push
test
cmpl
mov
xchg
cmp
cmp
push
mov
jb
lahf
pop
mov
fsubrs
aas
rcrb
outsb
sbb
push
push
mov
jmp
int
push
out
and
pushf
imulb
cltd
iret
in
pop
mov
int3
inc
sbb
call
aaa
shlb
mov
cmpsb
jnp
push
inc
push
call
dec
jmp
es
and
sbb
dec
stos
sahf
gs
xor
jge
orl
rolb
out
jb
test
notb
mov
std
jg
pop
movsl
mov
or
popf
lods
cmpsl
aas
cmp
sub
xchg
lods
ds
fwait
pop
fbld
add
pop
fsubs
and
xlat
shrl
xlat
cmp
repnz
add
mov
or
adc
sbb
inc
cwtl
mov
ficoml
outsb
sti
data16
mov
xorb
xchg
mov
imul
mov
outsb
rorb
cld
push
jno
or
or
cmp
cmp
mov
add
int
push
or
xor
insb
mov
jne
pop
das
push
gs
mov
add
mov
and
fcmovb
xor
mov
out
les
adc
inc
in
das
pop
jmp
aad
dec
cmpl
mov
bound
pop
push
test
pusha
fildl
pop
cmpsb
syscall
arpl
xor
mov
fwait
mov
fucomi
push
aam
lahf
sub
ror
mov
div
sbb
clc
add
xchg
sbb
stos
cmc
pop
jge
dec
test
aad
gs
pushf
cmp
aam
mov
mov
xor
je
movsb
xchg
mov
and
or
sahf
or
and
add
adc
lahf
mov
fisttpll
xor
fbld
or
jle
lods
iret
mov
pxor
ljmp
adc
push
jo
fidivl
insl
mov
pop
xor
aad
cltd
xchg
mov
out
or
and
inc
jecxz
insb
cmp
xchg
fwait
ljmp
std
outsb
mov
pushf
cmp
in
fdivrl
movsl
push
cmp
icebp
adc
sub
add
fdivrs
scas
adc
mov
or
mov
or
sub
ret
push
cmpsl
loope
inc
idivb
pop
jl
andl
iret
or
jecxz
cmp
ds
xor
jmp
add
and
jge
test
in
dec
lds
push
in
mov
pop
and
add
dec
pop
push
call
mov
std
xchg
fsubrs
inc
fistps
lods
dec
dec
pop
pushf
shll
popf
push
daa
and
pop
push
sub
dec
dec
std
out
or
jno
sbb
lret
addr16
jmp
lea
sub
lods
js
push
sbb
loopne
in
xor
outsb
loopne
test
cmp
push
inc
sub
pusha
adc
add
adc
lock
xchg
xchg
inc
aad
aam
ret
popf
xor
test
and
push
mov
lret
sahf
push
orl
leave
ret
icebp
xor
les
jecxz
scas
mov
xor
dec
std
and
loopne
push
xor
jae
repz
push
out
add
mov
aad
stos
lret
dec
adc
jo
mov
insl
outsl
xchg
inc
cltd
mov
cwtl
repz
out
test
pop
sub
ljmp
jns
jne
cmc
test
lds
push
les
sbb
cli
fisubrl
je
repz
repnz
adc
aas
out
jnp
ret
adc
xorl
aam
rcrb
shr
int
mov
out
pop
push
mov
aad
xlat
adc
or
xor
fld
stc
dec
add
cs
sub
push
bound
cwtl
lea
push
sahf
push
lahf
fs
adc
rcr
pop
cmp
mov
cld
aaa
lret
push
ss
mov
in
dec
stos
mov
enter
dec
or
popa
pushf
cmc
out
loopne
clc
xor
jae
sbb
inc
movsb
in
jl
xor
sbb
repnz
iret
push
icebp
jge
push
icebp
aas
shlb
ficomps
clc
ret
mov
push
arpl
and
dec
adc
sbb
les
push
xchg
fwait
std
lds
cmp
cmp
xor
stc
xchg
ret
js
xlat
push
xor
stos
orl
dec
mov
mov
add
sti
sbb
jecxz
sbb
push
out
insb
mov
in
mov
jno
jle
sti
outsb
dec
scas
mov
lods
fdivr
cmpsw
dec
dec
lahf
mov
lret
cmp
xor
loopne
clc
hlt
movsl
cmp
fisttpll
jl
ja
sub
das
jno
ds
push
imul
pop
lret
mov
sahf
cmp
sbb
movl
rcrb
test
rcl
loope
shll
adc
popa
fcmovnb
or
cmpsl
fdivl
aad
inc
cmpsb
mov
cmp
shl
es
dec
in
les
pop
sbb
xlat
sbb
in
push
cmpsb
cld
icebp
int3
es
cmpsb
aaa
nop
or
outsl
lock
addr16
and
jecxz
dec
mov
aas
imul
sarb
out
ljmp
add
push
and
lret
xchg
sbb
ret
pop
fldt
jecxz
inc
es
sub
lret
jge
pop
scas
int
mov
push
adc
je
int3
loop
dec
pop
jle,pt
stc
mov
lods
icebp
orb
inc
xchg
mov
and
std
stos
fcomps
mov
sub
out
in
add
mov
mov
or
shrl
mov
in
int3
cmpl
aaa
inc
insl
cmp
movsl
xchg
sub
jge
popa
cmpsb
scas
mov
scas
mov
enter
rorb
sub
xchg
or
movsb
adc
cmc
xchg
xor
pop
xchg
iret
cmp
push
jg
add
inc
jg
lret
sub
cmp
adc
lods
mov
cmp
imul
mov
bt
jg
and
jns
pop
mov
pushf
or
sahf
dec
cmp
std
and
add
nop
test
scas
pop
pop
jl
scas
pushf
sub
addr16
addr16
out
es
aaa
adcb
xchg
xchg
nop
sub
sbb
and
or
mov
push
orl
pop
sbb
lds
dec
dec
outsl
in
xor
mov
loop
scas
pop
or
int3
xchg
sub
int3
pop
fdivrs
fdiv
sub
add
decb
jp
sub
jmp
mov
orb
lret
sbb
addr16
push
pop
aas
and
sub
xor
add
loope
cwtl
mov
ja
jmp
inc
je
jne
mov
decb
cli
pop
mov
int3
pop
mov
loop
ret
adc
rclb
inc
in
sbb
sbb
test
das
dec
mov
stos
mov
jb
push
mov
pop
pop
push
pop
xor
inc
pushf
inc
sbb
inc
std
mov
cmpb
dec
xor
repz
and
pop
loope
jp
mov
cmc
aas
stc
les
jno,pn
jo
es
push
roll
and
cmpb
mov
push
cli
mov
and
push
xor
imul
out
xor
mov
cmp
mov
or
aad
mov
adc
jae
dec
testl
pusha
push
int
icebp
out
or
fmull
push
shrb
fiadds
mov
fcoms
lret
cwtl
ja
call
ds
rcrl
xor
jbe
add
mov
orb
or
sub
aas
in
lds
in
shll
jae
ss
jo
lock
int3
adcl
in
or
cmp
cmp
rcrb
mov
cli
out
out
cld
and
sbb
out
sub
mov
push
test
xor
dec
mov
loopne
push
or
xchg
in
pop
jmp
mov
gs
mov
test
outsl
push
rolb
xor
int3
nop
cmp
sub
fwait
sub
hlt
test
ja
dec
fsubl
or
dec
jnp
cmp
push
pop
pushf
and
cwtl
ds
outsb
add
dec
pop
roll
lock
stos
dec
pop
fs
dec
sbb
adc
sub
lods
lock
mov
push
lds
xor
ret
ds
xorl
add
das
ss
ds
mov
outsb
xorl
orl
push
popf
jae
xchg
push
xor
dec
xor
stc
imul
les
lock
add
out
pop
testb
adc
inc
xchg
xchg
xchg
es
add
inc
or
xor
loopne
xor
adc
shll
mov
cld
lret
mov
outsl
dec
pop
mov
jge
xor
jg
aam
mov
test
cwtl
sub
fwait
clc
sbb
mov
aad
mov
inc
and
inc
lods
jle
adc
ds
adc
nop
mov
sbb
pop
loopne
es
fdivl
fsubrs
sti
std
loope
and
xor
or
or
scas
cmp
push
xorb
icebp
addl
xchg
outsb
mov
lods
dec
popa
nop
pop
outsb
mov
cmp
in
inc
pop
mov
and
jge
pusha
cmpsb
mov
pop
add
fmuls
push
sbb
adcb
or
mov
daa
ficompl
ja
cmp
mov
repz
loopne
out
in
xchg
add
adcb
dec
xor
int
sbb
mov
int
pop
test
push
push
enter
pop
mov
jl
es
sub
je
sahf
fisttps
mov
clc
push
jbe
pusha
push
mov
aam
cmp
leave
sbb
mov
hlt
sub
inc
insb
cs
loope
test
jbe
popf
mov
mov
addr16
xchg
in
andb
and
out
or
mov
out
ljmp
pop
add
jle
mov
mov
jae
xchg
fsubrl
mov
sbb
rorl
bnd
jg
dec
fbld
fildll
in
inc
xor
mov
data16
das
movsl
hlt
sbb
stos
iret
out
ret
jnp
dec
pop
stc
lcall
rorb
js
loopne
pop
cmc
sbb
xor
rclb
cli
ja
test
stos
cmp
pushf
push
push
outsb
add
lret
xchg
push
imul
mov
adc
aad
sahf
outsl
out
adc
adc
and
pop
bnd
sub
les
mov
out
lea
xchg
or
mov
jae
xchg
mulb
ret
xor
xor
leave
aaa
fcomp
jns
lahf
cltd
sbb
test
jle
xor
cmp
add
ret
arpl
push
jne
mov
dec
pop
push
jge
shrl
sub
add
mov
jbe
pop
pop
popf
sbb
xchg
daa
jle
mov
test
sbb
lahf
cmp
gs
jmp
lret
jg
pop
dec
lret
inc
pop
lds
popf
mov
dec
mov
cli
inc
mov
cltd
xor
adc
call
rcl
inc
xchg
sub
dec
fdivrl
jns
push
addr16
mov
ljmp
ja
test
test
add
jns
push
pop
pop
mov
mov
sbb
rclb
shll
rcll
test
fistpll
or
aad
imul
ret
push
fistpl
dec
dec
fstl
cmpsl
pop
sub
and
jg
push
jmp
mov
roll
loop
adc
pop
cltd
loopne
jb
push
jg
and
out
fdivrs
dec
sbb
or
add
clc
and
xlat
lds
and
fcmovne
lret
mull
fisttpl
xlat
sub
mov
ret
add
dec
adc
leave
mov
and
hlt
jecxz
ficoms
or
fucom
ret
adc
sbb
fsubl
aam
loope
adc
aad
aad
sbb
aas
lods
call
and
mov
or
pop
fdivrp
dec
jp
dec
ret
movsb
cmp
test
call
iret
inc
outsb
jae
mov
iret
dec
daa
aad
fisttpl
andl
and
call
out
sbbl
jge
dec
lret
test
xlat
sub
cmp
aad
fisttpl
sbb
dec
sub
nop
adc
sahf
add
push
int3
dec
pop
adc
jecxz
cmp
mov
lods
lcall
mov
push
mov
imul
jecxz
loopne
inc
ja
sub
subb
loop
fs
mov
aad
jae
filds
movsb
shr
and
inc
mov
or
mov
lahf
jnp
jp
lds
xchg
icebp
fidivrl
mov
xchg
mov
gs
movsl
data16
or
push
imul
cli
cmpsb
int
push
cmpsl
rclb
mov
mov
xchg
fs
les
mov
xor
jo
xor
lahf
psllw
je
pop
subl
int3
and
addb
lds
gs
movsb
pushf
int3
cmc
mov
popa
inc
clc
lahf
pop
xchg
jp
xchg
add
and
es
shlb
out
into
jle
pusha
fcoms
xor
xor
sub
scas
cmp
out
insb
xor
test
pop
test
test
cmp
mov
xor
and
and
lea
mov
mov
mov
dec
jg
add
loope
mov
cmc
or
pop
dec
jns
movsl
lods
ss
push
sbb
adc
inc
aam
add
cmp
fiaddl
xchg
into
data16
cwtl
data16
out
mov
and
popf
movsb
imul
clc
mov
lcall
adc
push
and
cltd
pop
push
xlat
fldt
mov
cmp
stos
dec
aad
push
pop
iret
cli
dec
push
mov
lods
jae
out
out
add
mov
cmp
push
out
xchg
mov
shll
out
insl
addr16
aaa
sbb
mov
aaa
insl
es
dec
pop
inc
enter
js
sub
pop
sti
mov
call
aas
push
push
pop
pop
fsubl
cmp
add
or
adc
cltd
sti
mov
loop
sbbl
stc
and
lock
inc
mov
mov
and
jg
adc
imul
mov
je
lahf
loope
pusha
rcrl
pop
ficoms
into
adc
cltd
sarl
out
daa
or
add
sahf
clc
cmp
xorl
mov
jmp
adc
arpl
lret
out
mov
repnz
test
push
push
pop
cmpsb
leave
cs
sti
pushl
jmp
push
and
add
aad
jne
and
in
mov
or
clc
cmpsb
jmp
imul
je
cwtl
push
xlat
shlb
int3
testl
insb
dec
ret
mov
xor
ret
cltd
xor
in
xor
cmpsl
jns
ficoms
xchg
jmp
inc
icebp
dec
cmp
jne
mov
push
fists
ss
incl
fwait
mov
or
aaa
mov
mov
pop
dec
lods
js
or
cmp
cld
and
sub
xchg
mov
sbb
imul
jbe
outsb
cmp
jno
jl
mov
add
add
popa
inc
aam
sbb
das
push
pop
imul
push
mov
sarl
nop
sbb
cmp
enter
pop
add
sbb
push
lea
and
lahf
sub
das
test
pop
inc
fsubs
jmp
test
imul
fs
cmpsl
pop
loop
jns
shrl
xchg
add
xchg
cltd
in
leave
sbb
rcl
jg
lahf
mov
sub
sbb
and
ret
notb
mov
inc
cmpsl
push
sub
inc
cmp
out
movsl
ja
push
jge
sti
and
cmc
aaa
xor
xchg
fsubs
push
mov
shlb
test
insb
cltd
fcmove
push
mov
mov
xchg
lcall
add
dec
pop
jle
test
mov
xor
fs
lods
cmp
aad
ret
jae
pop
in
adc
sbb
jp
sub
xchg
std
les
sub
xchg
insl
and
add
jnp
adc
sub
clc
push
dec
iret
jmp
adc
jno
ret
das
fimull
mov
adc
xchg
mov
mov
dec
pushf
aam
jbe
das
sbb
push
push
enter
or
xor
in
lahf
sbb
cld
mov
and
inc
xor
inc
pop
in
imull
and
clc
xchg
jnp
ja
dec
mov
dec
in
loope
shll
jge
ret
cli
shr
loopne
arpl
repz
leave
jmp
inc
jmp
test
inc
into
mov
push
loopne
dec
mov
jbe
push
dec
test
fadds
add
jl
mov
xchg
sbb
mov
popf
imul
push
andl
mov
jne
enter
cmpsb
jbe
jmpw
cmc
gs
xor
mov
call
pop
outsb
enter
add
lods
into
pop
jecxz
aas
in
dec
dec
mov
push
int
sbb
orl
testl
sbb
pusha
sub
lods
cmp
add
test
das
add
mov
and
or
inc
dec
fldl2t
mov
enter
cmp
or
push
jecxz
sbbb
inc
push
pop
movsl
mov
sbb
lea
movsb
movsl
je
shl
push
repnz
pop
dec
add
hlt
es
xor
mov
into
mov
add
mov
mov
sahf
add
outsb
out
cmpsb
lahf
decb
add
repz
or
add
repnz
jmp
cmp
mov
rorb
xor
push
add
in
sbb
loope
in
jl
inc
push
bnd
mov
cmpsl
idivb
mov
divb
dec
xchg
fsubr
pop
cltd
clc
mov
out
push
orl
dec
jnp
scas
sarb
scas
add
clc
and
in
loope
mov
xchg
cmc
repnz
in
out
popf
popa
add
cwtl
and
scas
cmp
push
or
pusha
push
pop
inc
loopne
out
int3
cmp
fimull
movsb
push
jmp
jmp
sub
sub
bound
pop
adc
nop
je
sbb
adc
add
mov
dec
ja
sub
dec
jne
scas
cli
clc
lods
pop
dec
mov
and
fstpl
mov
gs
lcall
push
mov
mov
outsb
insb
mov
mov
add
cli
jmp
call
out
pop
cmp
xchg
pushf
repz
sbb
cmp
cli
or
mov
xor
mov
sub
mov
xchg
inc
push
dec
mov
mov
xchg
or
ret
inc
pop
sarb
mov
and
ret
clc
daa
fwait
loope
push
das
scas
cltd
sub
mov
jne
adc
mov
lock
mov
mov
xorl
push
repz
xchg
push
lea
pop
xorb
inc
dec
pop
xchg
scas
xchg
test
pushf
loopne
in
mov
add
pop
ljmp
jp
cwtl
dec
test
cwtl
fbstp
jmp
add
pop
in
lea
fst
xchg
push
rorb
jg
test
push
in
mov
push
popf
pop
mov
or
mov
xchg
mov
dec
adc
mov
ret
pop
stos
shr
ret
cwtl
addr16
sbb
into
popf
in
fstps
leave
pop
lret
inc
mov
or
iret
in
outsb
add
xlat
dec
sub
or
add
sub
jge
shlb
sti
lret
into
das
lcall
ret
push
and
into
lret
pop
dec
into
orl
xor
mov
inc
dec
rcll
loop
jle,pn
stos
push
in
dec
mov
and
jne
clc
lcall
out
and
lret
sarl
lods
pop
int
xchg
sub
sbb
xor
es
push
pop
xor
cs
inc
cmc
inc
cmc
mov
mov
loopne
pop
pop
xlat
repz
lret
mov
lds
in
add
xor
xchg
mov
ret
mov
mov
push
andl
popa
pop
dec
sahf
push
pop
jnp
sahf
inc
mov
sub
enter
call
in
clc
and
add
jl
test
mov
mov
rorb
push
lock
je
out
imul
fwait
in
cltd
fneni(8087
or
sbb
repz
shll
mov
jnp
adc
and
out
cmp
xor
and
sbb
cmp
and
lds
test
jbe
shlb
push
cmpsb
mov
mov
stos
mov
lcall
addr16
repz
cltd
mov
and
xor
adc
jae
add
or
sub
rcrb
lods
das
data16
dec
shrb
inc
mov
mov
mov
pusha
inc
jg
gs
leave
jmp
and
pop
sub
and
movsl
lret
cld
sahf
and
push
rcl
inc
scas
lods
sti
push
mov
mov
scas
dec
add
mov
xchg
pusha
pusha
mov
insl
jne
push
cli
xorb
adc
cmpb
out
popa
dec
inc
mov
mov
mov
and
test
xchg
mov
ret
std
lret
or
daa
fisttpll
in
call
call
je
mov
scas
out
xor
movsb
mov
cmp
ficomps
insb
pop
dec
rcll
loopne
jmp
and
jecxz
lcall
push
xor
shlb
subl
xor
mov
adc
pop
mul
les
and
std
lods
mov
xor
push
iret
std
jmp
pop
fistps
call
adc
imul
nop
negl
lods
mov
push
sub
push
cmpsb
leave
repnz
jo
push
lret
pop
test
and
push
adc
sub
cs
jg
or
dec
add
and
rcrl
cs
push
jno
loop
cmp
pop
jae
cmpl
sbb
add
dec
stos
aad
lods
aad
pop
pop
xor
and
cmc
aad
sbb
mov
dec
add
clc
and
dec
sbb
inc
pop
lea
push
pop
pop
pop
ss
push
pusha
and
test
add
inc
inc
cltd
adc
xor
mov
outsb
dec
cmp
xchg
out
fsts
popa
pop
std
xchg
adc
leave
or
mov
cmp
vcvtss2si
rorl
sub
mov
inc
mov
cmp
aaa
mov
cmp
mov
idivb
mov
mulps
mov
mov
mov
sbb
in
sti
or
rorl
aam
movsl
pop
iret
movsb
repz
andl
repz
or
mov
jg
cmp
sbb
outsl
sbb
fs
inc
mov
les
mov
mov
lahf
push
jecxz
sbb
push
int
mov
inc
cmp
pop
pop
cmp
clc
xchg
sbb
les
jecxz
push
add
mov
enter
cmp
in
aas
mov
jmp
push
mov
adc
js
sbb
stos
aam
dec
adc
xor
iret
xchg
adc
mov
jg
dec
arpl
dec
aaa
fwait
inc
fwait
insl
lods
mov
cmp
shl
pop
repz
sbb
inc
fildll
or
inc
dec
pop
or
fnsave
lock
dec
mov
outsb
enter
loop
testl
dec
xchg
and
subl
mov
loopne
xor
shr
lahf
mov
mov
ds
add
cmp
ficomps
icebp
outsl
xor
or
popa
and
jo
and
aas
jae
leave
dec
pop
lret
frstor
cmp
fs
xlat
jne
cmovle
sub
inc
mov
sti
push
jle
mov
jnp
movl
outsb
and
inc
push
cmp
ss
jo
lret
idiv
shl
and
and
dec
push
sbb
mov
jle
lods
dec
mov
mov
inc
pushf
or
dec
inc
mov
test
aaa
insb
outsl
push
add
orb
lods
test
mov
jecxz
jo
and
sub
rcrl
adc
cli
xchg
aaa
jge
lock
ss
into
and
fwait
or
lods
adc
jb
adc
dec
iret
test
enter
pop
adc
dec
popa
adc
insb
in
scas
popa
push
popa
sub
imul
lcall
cmp
pushf
cmp
mov
sub
test
pop
cwtl
adc
dec
repnz
or
cwtl
fnstcw
push
leave
outsl
push
and
mov
adc
mov
js
sbb
movsb
hlt
or
sbb
aad
addb
out
push
mov
lock
pop
daa
stc
mov
mov
rcr
ja
movq
outsb
sbb
push
sub
lret
fistl
inc
xor
adcb
aad
sarl
lods
mov
and
pop
xchg
fmull
movsl
in
sbb
out
xchg
jecxz
xchg
hlt
mov
cmp
div
test
jb
iret
inc
pop
filds
mov
test
movb
sub
add
bound
jge
lods
popa
gs
push
push
or
daa
int
fst
jg
sub
mov
andb
inc
mov
out
adc
lret
cmc
jnp
adc
aam
pop
mov
movsl
aaa
push
add
in
in
dec
js
jle
mov
js
or
cwtl
ret
pop
mov
pop
jno
adc
sahf
fcmovnbe
pop
aas
test
mov
aam
push
lods
lahf
push
cmp
inc
cmp
and
addr16
xor
xlat
mov
mov
in
aam
pop
or
shlb
mov
out
je
and
test
jne
sub
pop
xor
jge
int
pop
mov
xor
mov
cwtl
sbb
inc
lock
push
aad
pop
lea
loop
cmp
dec
gs
sub
jge
mov
fmull
mov
pusha
test
clc
jecxz
repnz
mov
add
mov
push
push
fs
mov
out
in
add
adc
rol
lahf
imul
xorb
rcrb
mov
ljmp
in
fldcw
dec
sahf
fsubs
jecxz
loop
inc
int
xchg
out
call
sbb
mov
roll
push
pop
addl
xor
inc
in
push
cmp
sub
mov
loopne
rcrl
iret
push
imul
popf
fnstsw
cmp
in
push
jne
cmpsl
dec
push
and
jb
rol
xchg
movsl
out
scas
mov
mov
je
repnz
add
adc
orl
loop
lcall
and
xchg
and
xor
inc
insl
scas
adc
lret
pop
stos
ficoml
xchg
xor
test
clc
xlat
out
jle
fadds
sbb
lret
lahf
mov
movsb
daa
je
cmpsl
mov
fmuls
arpl
in
sub
sbb
dec
jne
add
stos
lods
pop
add
cli
jno
dec
dec
dec
clc
andb
js
mov
iret
ret
out
repnz
xor
xlat
sti
pushf
jns
outsb
add
daa
lods
sbb
xor
add
fisttps
jo
mov
int
jo
aas
xchg
ss
js
xor
pop
adcb
or
xor
shll
sub
xchg
sub
stc
adc
sarb
sbb
lds
xchg
call
sub
add
das
lcall
sbb
inc
aas
scas
add
imul
jne
addr16
xlat
pop
loope
dec
inc
cli
ja
sub
pop
adc
int
lcall
cli
xchg
add
aad
xlat
adc
jb
imul
and
mov
cmpsl
nop
jecxz
decl
inc
mov
fadds
clc
push
lahf
scas
sub
movsl
shlb
add
sbb
dec
dec
push
arpl
push
push
xor
pop
push
push
sub
sub
mov
push
push
xorl
jp
mov
test
enter
int
js
clc
dec
adc
stos
mov
xor
jbe
sbb
xor
mov
pop
pop
pcmpeqd
xor
xor
mov
arpl
mov
xchg
mov
int3
mov
pop
push
and
push
fnstcw
pushf
aam
in
test
xor
std
dec
icebp
add
out
cli
sbb
add
in
adc
loopne
push
sbb
lcall
orl
sub
push
sahf
test
push
pop
js
rorl
mov
icebp
mov
push
bound
decb
xchg
data16
imul
adc
mov
push
add
into
iret
push
xchg
xchg
jne
xchg
cwtl
incb
mov
add
adcl
je
jno
aaa
or
mov
pop
xorps
nop
jp
and
fisubrl
aad
out
repz
mov
imulb
inc
adc
sub
in
jo
jge
dec
mov
jp
stos
and
cmp
sub
jge
xor
adc
mov
ds
dec
es
mov
rcl
call
out
fs
xor
aam
lahf
push
push
dec
and
loop
xchg
fwait
loopne
mov
enter
dec
xchg
outsl
xor
shr
ja
push
adc
mov
scas
or
pop
cltd
sbb
push
jbe
cltd
iret
mov
sbb
dec
jecxz
push
push
fistpll
popf
lods
jmp
push
out
mov
imul
xor
sbb
sbb
popf
sbb
ficoms
and
shll
call
sub
xor
mull
mov
pushf
mov
dec
mov
mov
stos
mov
shll
cmp
stc
fstl
leave
dec
xchg
imul
icebp
test
xchg
adc
push
pop
pop
sarb
push
mov
pop
mov
push
iret
repz
addl
rcrl
jb
stos
rcll
xlat
pop
scas
shl
pop
push
cmc
aas
stc
sub
adc
xchg
aad
or
push
push
xchg
cs
xchg
or
xor
fwait
jne
loopne
jno
lahf
cmp
xchg
in
xchg
push
push
lret
push
and
into
test
in
into
mov
add
ret
icebp
add
jp
push
jl,pn
push
fucomip
or
pop
orb
imul
and
imul
insl
sub
lea
or
dec
push
mov
sbb
push
lods
call
outsl
push
scas
add
sbb
xchg
fbstp
jno
stos
jg
jae
push
aad
sub
stos
mov
mov
xchg
xchg
dec
xor
xchg
or
add
pop
stc
fmul
and
and
add
or
xchg
mov
mov
dec
xchg
and
pop
cmp
cld
mov
inc
cs
add
sub
and
out
adc
sar
mov
inc
in
and
adc
insl
cmp
hlt
or
xchg
lods
test
in
mov
xchg
fdivrl
cli
xor
mov
test
xor
jl
mov
mov
fwait
cwtl
repnz
addl
pop
in
mov
push
push
into
xchg
mov
add
gs
pop
test
aaa
or
xchg
xchg
xchg
mov
and
mov
mov
xchg
cli
outsb
adc
je
xor
pop
cwtl
fidivl
or
add
aas
xchg
andl
lea
lret
push
push
xor
push
andb
out
cwtl
inc
out
xchg
sub
std
push
icebp
mov
push
cmc
cld
mov
fdivrl
push
dec
in
ljmp
jmp
icebp
pusha
xlat
pushf
adc
mov
jne
xchg
insb
sbb
shll
pop
jg
sbb
fisubrs
jge
cmovle
cmp
out
mov
inc
or
int
js
dec
sbb
dec
sahf
mov
sbb
mov
cs
rol
outsl
sub
and
xor
jmp
std
loopne
and
xchg
loopne
push
fldt
adc
ret
outsl
lods
pushf
sbb
push
aam
pop
int
push
out
xchg
pop
movsl
mov
pop
insb
push
push
mov
push
imul
lea
add
ret
xor
and
mov
pusha
dec
add
loopne
and
or
mov
std
xor
inc
aam
jl
or
sub
gs
sub
mov
sub
scas
xchg
bound
sti
aad
js
popf
adc
ss
clc
out
sbb
jb
mov
icebp
pop
xor
pop
mov
mov
or
inc
xlat
sub
xchg
push
pop
mov
test
cmp
ret
adc
mov
mull
sub
sub
cmp
mov
rcl
push
xchg
or
xor
mov
pop
cld
cmpsl
push
lock
js
mov
lds
jle
pushf
inc
inc
sub
push
jl
pop
mov
int
dec
jb
aad
adc
jp
sbb
jge
mov
dec
negb
sub
outsb
jmp
les
and
or
les
push
pop
push
xchg
dec
lods
and
jmp
xchg
fs
insb
dec
hlt
shlb
jmp
aam
jbe
push
movsb
mov
inc
push
push
pop
in
dec
ret
lds
out
int3
aas
je
dec
sbb
xchg
xchg
or
inc
add
mov
push
push
mov
ficomps
mov
das
iret
pop
stos
xor
iret
or
scas
and
loope
mov
mov
jecxz
scas
cmp
mov
inc
cmp
adc
mov
insb
cmp
hlt
aas
push
xchg
fbld
dec
imul
cmpb
stc
inc
mov
rcll
enter
jnp
aam
gs
lods
shl
or
sub
pop
outsl
arpl
cmp
push
cs
ror
addl
movsb
test
or
xorl
repz
push
pop
dec
out
fwait
inc
jae
loop
js
pop
jno
push
les
aaa
mov
daa
push
dec
and
pop
jp
pop
leave
lahf
inc
mov
mov
in
iret
mov
mov
out
aad
jae
xchg
jle
xchg
sti
and
sub
cmp
sbb
in
xchg
xchg
mov
xchg
leave
sti
insb
xor
hlt
or
int3
sub
xchg
cmp
pop
pop
inc
lret
inc
and
xor
fiaddl
sub
insb
dec
cmp
and
xlat
pop
jae
std
or
xor
mov
leave
xchg
fstpt
dec
mov
mov
mov
mov
and
notb
cld
cmpb
cwtl
stc
mov
dec
xor
sti
lahf
mov
cmp
imul
subl
insb
shll
test
push
imul
adc
fstpt
daa
movsb
jmp
adc
or
pop
push
mov
dec
jno
adc
inc
xchg
pop
mov
addl
push
lret
cmp
loopne
push
dec
bound
sarb
xchg
mov
mov
pop
xor
and
cmp
repz
add
dec
sbb
aam
pop
fstl
arpl
sbb
scas
sbb
pop
cmp
xchg
addr16
adc
ds
mov
pop
dec
lock
push
push
push
aam
jmp
push
stc
ljmp
fimuls
pushf
pop
xor
cmp
and
pop
test
cmp
sub
jae
syscall
push
adc
std
cmp
xor
jae
stos
ljmp
jp
rolb
add
add
int
xchg
adc
imul
shl
fidivrs
xor
daa
mov
js
fs
sub
rcrl
pop
xor
push
dec
mov
dec
sbb
jbe
movsb
or
mov
clc
mov
jp
xchg
cmp
cmp
das
add
hlt
adc
push
jecxz
cmp
stc
aad
inc
lahf
outsl
pop
adc
in
cltd
imul
aas
jno
sub
push
mov
fsubl
aaa
pop
sub
popa
frstor
xorl
push
outsl
aaa
mov
rclb
add
adc
fcmove
and
scas
repnz
adc
and
in
clc
lret
sbb
push
jns
fcoml
in
mov
aad
lret
sbb
fcomi
pop
shlb
xor
aas
xor
mov
ss
lcall
cs
in
dec
xchg
inc
out
test
out
pop
lods
add
xchg
cmp
lea
fwait
push
xor
dec
add
scas
jns
out
aas
cmp
sahf
mov
xor
popf
sub
jo
fidivrl
ja
pop
scas
das
jecxz
jg
adc
pop
xchg
mov
push
xchg
pop
mull
mov
cs
lods
test
bound
mov
int
jmp
inc
std
sbb
adc
ja
popf
adc
mov
notb
repz
or
test
mov
std
movsb
lret
sti
inc
sub
add
dec
jb
push
les
sub
rorb
jecxz
adc
ljmp
mov
std
pop
outsb
lret
sbb
lods
jbe
and
cmpsl
xchg
incb
jle
cmp
mov
lods
pop
sub
das
lds
push
shlb
out
or
in
xchg
pop
lahf
lea
std
leave
test
cmp
test
test
clc
gs
lahf
push
and
data16
fsubrl
les
sub
push
xchg
out
push
out
mov
adc
js
inc
jnp
hlt
jl
mov
sbb
dec
push
sbb
pop
xchg
jnp
mov
cli
out
mov
pop
mov
daa
dec
cwtl
aas
jg
pop
mov
std
and
mov
dec
dec
loop
mov
cmp
dec
sti
outsl
ret
out
cmp
aam
mov
test
push
pop
js
jecxz,pt
jl
lea
cs
xor
es
mov
ss
fdivr
push
bound
iret
incl
mov
es
pop
push
xor
in
cmpsb
push
jle
lods
adc
ret
popf
cmp
sbb
divl
inc
pop
imul
sbb
mov
daa
jmp
ja
xchg
inc
mov
push
mov
test
outsl
lret
jnp
div
sbb
or
rorb
add
scas
fsts
adc
outsl
xorl
cmp
mov
movsb
push
adc
cld
ror
decl
push
loop
je
mov
pop
push
push
inc
fstps
pmaxsw
movsl
push
xor
lds
lea
sbb
lea
and
ds
je
lods
sbb
scas
and
jnp
mov
in
jl
lret
fisubrl
mov
pop
cs
cltd
outsb
outsl
lods
push
adc
out
pop
push
inc
in
les
mov
pop
xor
sub
insl
insl
inc
daa
loope
inc
bound
stos
lret
mov
out
xor
popa
inc
lods
fs
fbld
lcall
cmp
dec
roll
or
mov
pusha
lods
xchg
fldt
cs
sbb
clc
pop
push
loop
mov
clc
je
ret
dec
rolb
insb
push
je
pop
adc
push
add
leave
cmp
adc
dec
addr16
es
jbe
mov
inc
frstor
dec
aas
pop
pop
sbb
out
adc
mov
pop
sbb
dec
cmp
or
call
fidivrs
push
movsb
rol
jmp
add
cmp
dec
int3
jmp
mov
stos
mov
pop
mov
jl
add
lods
inc
pop
lds
shl
xchg
outsb
add
add
cmpsl
add
lods
js
test
adc
cmp
ljmp
sub
and
cltd
cmp
sbb
sti
dec
aas
rorb
insb
bound
xchg
imulb
iret
repnz
test
or
mov
sub
mov
std
xor
insb
push
pop
fnstenv
outsb
hlt
ljmp
dec
stc
std
xor
enter
add
jge
fistl
aad
jp
xor
jo
push
push
fsubs
push
pop
imul
inc
movl
sarl
rorl
or
xchg
cmp
xorb
pop
clc
xchg
or
push
divl
shl
jmp
sub
repnz
mov
cmp
sub
adc
enter
mov
repz
mov
iret
xor
jmp
inc
pop
jle
sub
jle
cmp
fdivs
test
mov
jle
inc
xchg
jnp
scas
outsb
sbb
fdiv
popf
push
dec
roll
iret
push
add
xchg
lods
in
and
movsl
outsb
imul
aam
mov
test
xchg
push
sub
inc
imul
mov
or
adc
test
lods
xchg
sub
xor
addr16
out
andb
xchg
xchg
sub
jae
in
dec
les
dec
ret
or
mov
aad
pop
adc
mov
xor
add
aas
push
inc
adc
adc
inc
mov
mov
rorl
cmp
and
das
jae
std
fwait
out
les
aas
sbb
ret
cmp
mov
mov
fstps
fldt
test
stos
cmp
lahf
outsb
int3
xchg
int3
call
flds
popa
movsl
sbb
jg
cld
jmp
lahf
xchg
mov
stos
push
add
jecxz
nop
mov
rcrl
in
adc
scas
mov
cmp
fdivl
int3
into
cmp
or
xlat
lds
push
push
out
outsb
stc
add
imul
shlb
fisttpl
cs
sbb
dec
loope
cmp
mov
jae
push
sbb
in
rorl
xchg
pop
mov
mov
add
push
outsl
jne
mov
add
movsl
cmpb
idiv
std
and
and
mov
cmc
stos
dec
sub
cmp
loop
jno
mov
inc
mov
add
sbb
sub
mov
repz
mov
or
dec
push
or
jg
sbb
adc
push
aam
xchg
xor
cmc
sbb
cwtl
rclb
push
test
dec
sub
test
sbb
xlat
fisttpll
loop
addl
fidivs
sbb
xchg
inc
push
loope
call
leave
hlt
jno
mov
lret
int3
add
fistpll
dec
imul
call
iret
sub
in
jp
addr16
cld
div
xor
out
pop
rolb
in
enter
mov
loopne
ret
jmp
or
je
lret
scas
lcall
loopne
fmuls
shl
dec
stos
mov
das
test
fwait
xor
sub
test
sahf
dec
icebp
je
mov
aam
xor
add
ss
xor
ljmp
cwtd
fsts
lcall
cmp
pop
aas
xor
das
testl
andl
imul
cli
mov
cmpsb
lret
dec
negl
jmp
pushl
and
jne
int
mov
dec
jge
ja
decb
dec
push
lcall
sub
std
add
ficomps
lahf
imul
mov
pop
nop
cmp
int3
pusha
adc
movsb
aas
aam
add
mov
and
cmp
sbb
es
popa
repnz
inc
or
push
push
jbe
out
jnp
or
mov
fdivrp
or
mov
pop
push
push
add
mov
fs
xlat
mov
jnp
sbb
sbb
jb
jge
outsb
fstps
pushf
push
ret
dec
je
ficoms
adc
mov
or
jmp
sarb
pavgw
xchg
push
pop
adc
test
test
jns
int
cmpsb
dec
mov
push
push
push
ss
xchg
dec
cmp
call
dec
adcl
ret
into
mov
pusha
popa
adc
push
stc
fistpll
xor
aas
mov
rorb
es
test
adc
iret
and
insb
jbe
fbstp
jae
jo
mov
push
call
add
das
data16
mov
fstps
das
and
repz
or
movsl
mov
pop
adc
cmc
mov
push
lea
xchg
cli
xchg
ficoms
or
push
pop
cmc
sbb
mov
add
les
push
test
cmp
mov
push
mov
add
ja
loopne
push
adc
mov
jne
push
mov
pop
je
or
push
nop
stos
lods
loop
mov
cld
sbb
repz
scas
xchg
sub
test
xchg
orb
mov
or
cwtl
jnp
in
cwtl
sbbl
nop
pop
aaa
aaa
int3
cmp
das
sub
test
mov
bound
xlat
jge
add
push
sub
mov
inc
clc
sbb
mov
sub
cmpsl
and
push
push
cmp
sbb
stos
sub
inc
jecxz
insb
xor
aaa
sbb
popf
xor
test
js
in
jnp
lods
js
mov
jae
fisubs
fldcw
mov
lret
adc
xlat
and
das
sub
inc
mov
loope
les
ret
sub
adcb
fnstenv
mov
cmp
outsl
jmp
fisubrs
movsb
outsl
pop
inc
cli
dec
mov
and
fcomip
ret
adc
sarb
and
lods
and
dec
adc
lret
xchg
or
pop
add
dec
mov
jg
ficompl
test
pop
mov
jo
call
sbb
ljmp
sbb
das
cmp
add
int3
ret
pusha
stc
or
enter
mov
jge
mov
inc
cmc
mov
je
push
mov
xor
inc
rcr
mov
adc
push
add
and
cmpsb
fnstcw
cwtl
movl
js
and
xchg
outsl
fstl
xchg
push
sub
in
sub
inc
jbe
dec
xlat
push
leave
imull
push
sbb
mov
and
int3
popa
sti
cmc
mov
sub
mov
mov
lods
dec
daa
arpl
cltd
xor
filds
in
xor
jb
xor
sub
add
mov
pop
jmp
push
icebp
add
xlat
add
mov
push
add
loop
dec
inc
xchg
pop
leave
pop
push
pop
orb
or
shlb
inc
cs
mov
sar
cld
mov
push
pop
push
test
dec
sub
iret
sbbl
and
sbb
add
xchg
je
jbe
leave
repnz
pandn
outsb
fistpll
in
adc
aad
xchg
jmp
jmp
mov
mov
inc
or
rcrl
in
push
xor
cmp
inc
push
jl
mov
insb
mov
repz
or
mov
mov
insb
js,pt
repnz
adcl
test
ss
pop
or
adc
mov
xor
pop
fwait
movsb
inc
dec
mov
pop
add
cmp
outsb
lea
ffreep
pop
sarl
call
mov
sbb
inc
out
sbb
sbb
ret
cltd
fistps
hlt
add
cmp
sub
push
sub
test
xchg
and
mov
shrb
mov
inc
or
or
imul
pop
rclb
mov
cs
inc
ljmp
fcom
dec
cmpsl
adc
hlt
sbb
dec
mov
mov
and
xchg
das
pop
ds
mov
dec
ja
inc
mov
jbe
xor
gs
dec
xchg
mov
xor
mov
pusha
inc
inc
cltd
movsb
push
xchg
scas
dec
fs
sub
je
lea
xchg
xor
xor
aam
dec
or
xor
sub
sarb
mov
repnz
sub
sbb
outsl
nop
cmp
fiadds
shl
aas
int
jno
and
arpl
fsub
aas
ficoms
fdiv
mov
sarl
lds
xor
lahf
add
jg
pop
lock
clc
push
xchg
mov
lcall
cmp
dec
sub
or
lods
xor
lods
xor
jmp
decl
insb
dec
mov
mov
xor
lret
sub
jns
lds
ja
ret
adcb
std
jns
cli
add
xor
sub
inc
mov
stos
pop
idivb
in
inc
xor
inc
xchg
cmpsl
popa
cltd
inc
in
icebp
lcall
repz
insb
pusha
outsw
orb
loope
xchg
nop
mov
lea
outsb
and
mov
negl
imul
mov
push
nop
push
call
imul
cs
es
sbb
inc
dec
inc
sub
push
adc
push
mov
or
testl
mov
mov
ss
shll
push
dec
jge
add
mov
add
add
jmp
addr16
mov
mov
sub
bnd
and
inc
into
jbe
stos
and
xor
jecxz
sbb
adc
outsb
jbe
cmc
leave
inc
test
loop
fdivl
xlat
cmp
jbe
out
iret
inc
pop
mov
sub
push
add
scas
push
mov
xor
pop
mov
jae
mov
mov
mov
fidivrl
mov
sahf
mov
mov
mov
loop
out
test
sub
cld
outsb
mov
cltd
jo
andb
add
dec
in
adcb
add
mov
aaa
gs
xchg
mul
push
ljmp
jecxz
frstor
inc
push
aaa
jae
jg
or
inc
mov
cmp
xlat
mov
dec
sub
mov
fwait
andl
add
testb
popa
lret
sbb
pop
mov
fldt
or
lods
inc
je
push
je
int
push
pusha
stos
lret
ret
ds
mov
les
pop
adc
sub
lods
push
dec
rcll
jno
rcll
xor
movsb
lea
pop
pop
and
and
jp
outsb
cmp
call
xchg
xchg
add
adc
shll
lret
adc
xor
adc
lea
test
insb
mov
rcll
aas
adc
xor
pop
fistpll
insb
push
jb
xorl
imul
cmpsl
adc
jecxz
jae
les
cmpsl
mov
subl
xor
add
mov
nop
xor
inc
jmp
mov
aaa
push
stos
sub
pushf
nop
lea
xchg
mov
xor
repnz
cltd
sub
mov
xor
arpl
mov
stc
jp
subb
sbb
mov
loope
pop
mov
cmp
fdivrs
jg
out
mov
sub
aam
ret
xchg
movsb
dec
or
sub
popa
cwtl
aam
js
pop
test
mov
inc
mov
dec
stos
loopne
xchg
cmpsl
xlat
xor
stos
hlt
sahf
iret
imul
arpl
sbb
out
ret
outsl
dec
fcompl
xlat
test
fs
dec
xchg
into
pop
and
sub
loop
push
adc
push
add
cmovbe
lock
fsts
mov
pusha
dec
outsl
mov
pop
add
daa
cltd
out
ret
hlt
int
lahf
jo
add
imul
aam
inc
jne
cmp
inc
push
in
push
in
pop
mov
imul
outsl
push
jbe
or
movsb
xor
pop
mov
pop
xchg
mov
push
jecxz
mov
loopne
fisubs
xlat
fists
lea
mov
inc
dec
mov
cmpl
mov
out
ret
call
mov
push
jmp
add
and
lods
test
inc
push
add
repz
enter
sub
jae
insb
jns
scas
repnz
mov
and
sti
sbb
in
inc
fs
cld
shlb
ret
xchg
pushl
inc
sbb
test
cmp
mov
adc
xchg
ss
add
mov
dec
add
js
mov
inc
enter
cmpsb
inc
stos
jg
cmp
pop
jg
and
repnz
sahf
adc
inc
sub
loop
pusha
cmp
popa
mov
sub
cmc
lods
push
adc
sub
sub
data16
or
rolb
loop
adc
loop
lret
mov
pusha
movsb
or
push
cli
sub
fsubrs
dec
mov
jae
stos
pop
adc
das
xor
les
popf
xchg
repnz
mov
pushf
xchg
add
inc
lods
mov
jo
sbb
mov
push
loop
repnz
scas
inc
test
inc
lahf
in
mov
pop
lea
pop
lret
shlb
adc
sub
push
add
jge
adc
xchg
adc
andl
mov
cs
inc
push
push
rcr
push
add
pop
ret
bound
sar
pop
jge
shr
popa
in
jl
fadds
cmpsl
testb
pop
popf
inc
repz
js
mov
fisubs
xchg
xor
shll
bound
es
push
and
inc
cmpsl
jnp
clc
adc
pop
popf
aam
ss
pop
cmp
cli
fucomip
cmc
repnz
test
in
scas
mov
aad
pop
stos
lods
mov
rcr
stc
imulb
or
fwait
pop
xor
insb
aam
jecxz
in
mov
loope
or
push
daa
lock
push
xor
mov
adc
inc
jae
jg
inc
out
aas
jbe
mov
in
sbb
ret
cmp
ljmp
mov
xchg
inc
add
dec
jb
fbld
call
das
fdivrl
clc
lds
mov
jne
rolb
push
in
mov
or
sub
mov
mov
xor
xchg
and
inc
mov
lret
push
xchg
pushf
fs
aaa
mov
loopne
or
push
mov
repz
dec
arpl
xor
push
cmp
lea
cli
cltd
in
sarl
fsubp
icebp
cli
xchg
and
mov
xchg
push
mov
aaa
mov
dec
xchg
js
test
loopne
stos
mov
jno
dec
adc
ret
testb
xor
cmp
pop
test
push
push
pop
enter
push
mov
dec
xchg
js
je
pop
out
sub
test
mov
stos
scas
movsb
lahf
inc
or
out
mov
push
sub
nop
xlat
outsb
mov
test
dec
movsb
fwait
roll
mov
std
push
or
jne
mov
sahf
mov
hlt
in
test
and
lret
mov
cli
pop
mov
inc
dec
mov
add
cmp
test
fnstsw
push
adc
pop
add
in
popf
fisubrl
adcl
leave
dec
mov
out
sbb
aas
push
xchg
jl
xor
mov
in
inc
push
pop
xchg
add
test
jae
ss
repz
sbb
push
mov
or
fisubrs
fs
stos
cmp
ret
sahf
push
pop
sub
shll
push
inc
gs
mov
pusha
add
and
fsubrs
mov
mov
cli
xchg
cmp
ret
xor
stc
inc
negl
and
jnp
adc
or
mov
jb
xchg
call
xor
inc
xor
rolb
mov
cli
in
and
gs
xlat
push
xchg
jno
cmp
push
adc
xchg
sub
ret
adc
add
hlt
fnsave
xor
into
movsl
lret
into
sub
sub
and
sahf
jo
inc
adc
sbb
sti
sahf
inc
gs
jl
lcall
negl
dec
pop
pop
cwtl
daa
ds
mov
out
lods
xor
fidivs
jp
hlt
jo
push
or
pop
mulb
and
arpl
call
push
sbb
fs
add
lods
add
sbb
push
fmul
or
testl
fsub
jp
mov
push
or
cmp
out
mov
lods
movsl
pop
push
and
shrb
incl
inc
fiaddl
nop
ret
imul
jge
jns
scas
js
inc
movsl
jbe
push
pop
xchg
xchg
xchg
jp
and
mov
mov
shlb
imul
pop
mov
dec
ret
pop
inc
sub
sbb
mov
out
fcmovne
push
pop
dec
lods
rcrb
ret
mov
loopne
fldenv
cld
data16
inc
int3
dec
jns
out
aad
jmp
daa
movsb
dec
dec
mov
jmp
insl
and
inc
rep
cltd
lret
imul
mov
shll
jnp
jne
xor
jge
jge
inc
inc
adc
iret
movl
push
mov
and
imul
repz
cmp
jbe
jb
in
adc
das
xor
adc
dec
lods
add
movsl
add
in
inc
pop
jmp
dec
in
pop
and
out
xlat
adc
push
jle
and
or
cmovnp
pushf
jl
cmp
mov
arpl
ljmp
movsb
fdivrp
jnp
in
cmp
xor
dec
ja
popf
fdivrl
fsts
and
push
add
add
sbb
mov
push
test
pop
sahf
fnsave
jne
pop
lahf
cmp
xor
lea
xchg
jns
fisubrs
sbb
lretw
mov
mov
xchg
xor
in
mov
adc
pop
xor
adc
fcomps
dec
jp
push
pushl
jl
jle
addr16
iret
mov
sbb
in
mov
pushf
clc
mov
clc
xchg
jmp
imul
sahf
xor
in
adc
and
xchg
movsb
jb
or
mov
push
sub
dec
stos
test
gs
mov
inc
adc
and
loope
call
fwait
adc
or
pop
sahf
push
loope
lret
pushf
sbb
pop
or
test
sub
stc
outsl
pop
push
dec
dec
jmp
lea
mov
mov
in
adc
add
cmp
xchg
mov
cltd
xchg
shl
cmp
inc
sub
or
pop
mov
imul
dec
mov
or
shl
gs
mov
xor
adc
cltd
mov
dec
pop
insl
nop
jb
xor
dec
ja
pop
in
roll
inc
push
mov
mov
pop
jle
sub
imul
sahf
mov
int3
mov
xor
inc
cmp
adc
cmpsl
nop
and
pop
cmp
add
push
sub
cmp
je
sbb
sub
dec
or
mov
sbb
sub
popa
or
mov
stc
mov
lret
int
jl
mov
cmp
in
pop
push
add
mov
add
inc
pop
cmp
fwait
pop
xchg
pusha
loope
aaa
aad
out
cli
adc
dec
pop
pop
scas
lret
fs
mov
ret
insb
push
out
sarl
test
shlb
dec
cmp
aad
shlb
push
pop
imul
gs
sbb
divl
scas
mov
mov
and
andl
pop
mov
xor
sbb
mov
pop
jp
stc
jp
push
test
cmp
rorl
imul
push
stc
jb
fisubrl
out
sbb
jo
push
outsb
adc
daa
push
mov
push
lea
icebp
xchg
scas
imul
into
pop
icebp
outsb
adc
clc
dec
nop
scas
test
pop
inc
sub
scas
in
icebp
push
or
aaa
repz
dec
cs
repnz
into
mov
add
dec
addr16
cmpsl
out
out
int
jg
jno
pop
test
pop
lret
mov
or
inc
dec
ljmp
inc
hlt
push
adc
stos
mov
add
xchg
enter
mov
xchg
cmp
sahf
lods
nop
push
les
dec
cwtl
inc
in
xchg
or
int
insl
sub
pop
out
fildl
pop
mov
flds
push
xor
and
sub
out
jmp
lods
and
into
or
pop
jbe
cmp
ret
nop
popa
shl
mov
dec
jnp
je
mov
inc
pop
test
inc
loopne
inc
out
std
sbb
in
sbb
mov
icebp
jae
es
pushf
bound
arpl
mov
loope
cmp
in
sti
ss
mov
loopne
lods
popa
pusha
xchg
xor
fdivr
jl
nop
mov
jo
xor
sub
leave
mov
ret
es
lods
mov
dec
mov
daa
loope
xor
stc
xchg
loop
jnp
mov
in
int3
xor
outsb
jo
sub
and
repnz
repz
addr16
inc
pop
std
lods
popa
popl
stos
dec
cmpsb
inc
enter
dec
pop
cmc
repnz
pop
cmpsl
inc
inc
cmc
test
pop
pop
push
mov
test
dec
je
pop
dec
mov
hlt
pop
push
lahf
xor
dec
adc
addr16
imul
inc
jl
cwtl
push
jne
jmp
or
xchg
divb
sbb
adc
mov
pushf
jno
fmul
sahf
sub
inc
mov
jge
dec
jmp
mov
sahf
add
pop
das
fs
push
xchg
pusha
adc
rcl
mov
subb
or
enter
mov
inc
filds
insl
ficoms
imul
push
pop
je
outsb
std
push
pushf
lea
leave
loop
cwtl
jg
xor
mov
sbb
aaa
jp
dec
andl
cmp
int
pop
scas
xchg
shlb
sub
insb
push
xchg
js
in
stos
je
push
insl
pop
and
adc
rcrb
pop
and
repz
cmp
add
mov
movsl
int3
inc
movsl
push
aaa
jnp
int3
push
and
inc
lods
cmp
cmp
mov
lock
inc
push
mov
adc
or
das
and
cld
stos
daa
scas
xchg
or
dec
inc
pop
inc
test
aas
and
inc
mov
das
cwtl
cmp
and
pop
imul
lret
dec
mov
movb
inc
add
add
mov
push
mov
fists
hlt
ret
enter
bswap
ds
scas
xchg
push
fldl
sarl
ja
mov
inc
jne
dec
gs
ret
pusha
hlt
cmp
pusha
add
stc
inc
add
jno
insb
movsl
scas
lods
inc
andb
push
fs
aam
push
xchg
jo
mov
lret
adc
popa
aam
sahf
nop
xchg
lds
or
mov
mov
ja
cmpsb
xchg
sub
xor
xchg
addr16
popf
bound
loopne
sub
iret
lods
push
and
sbb
jbe
jo
pop
nop
ja
xor
inc
xchg
xor
mov
jno
scas
addr16
scas
and
push
in
test
cmpsb
in
cmp
mov
or
mov
pop
cwtl
flds
test
data16
mov
loop
dec
cmp
int3
jl
xchg
cli
movlps
repz
sbb
stos
movsb
std
jae
push
sti
into
xor
iret
rcll
gs
or
or
xchg
aad
rcrb
and
sbb
sbb
xchg
mov
mov
xor
sti
mov
loope
mov
data16
add
pop
cmp
sbb
mov
mov
mov
int3
out
std
addr16
fidivl
repz
or
push
rcrl
jae
jne
or
jne
fdivrp
mov
loope
or
les
sbb
lret
cld
xor
jg
or
mov
hlt
push
inc
filds
cmp
inc
mov
faddl
add
cwtl
and
ret
popf
sbb
cmpb
test
daa
push
mov
mov
and
lahf
dec
mov
mov
repz
ja
xchg
jg
mov
aaa
xchg
lcall
aad
and
sub
movsl
sub
mov
sahf
or
pop
add
fwait
stos
repnz
cld
dec
idivb
ljmp
sub
fisttpll
or
imul
lea
icebp
in
push
jbe
aas
sbb
nop
ret
jbe
insb
xor
adc
lock
inc
cmp
mov
dec
mov
clc
mov
scas
inc
dec
mov
ret
pop
loopne
adc
roll
add
cld
shlb
das
xchg
jns
nop
cmp
sub
or
rcll
pop
pop
fistps
and
dec
call
out
adc
mov
fmul
xchg
inc
arpl
imul
push
ficoms
clc
inc
sbb
push
sub
cmp
dec
pusha
insb
and
mov
call
or
dec
inc
add
adc
inc
push
cmpsb
jns
fsubr
sub
clc
mov
inc
daa
ja
aaa
pop
cmp
xchg
add
mov
cmp
add
les
outsb
sbb
mov
iret
add
nop
fs
mov
mov
sbb
sub
outsb
int3
sbb
pop
push
testb
mov
loopne
mov
xor
jmp
fnstcw
loop
mov
jl
sbb
cli
sub
fdivrp
addb
xor
add
dec
xchg
in
fs
shrb
push
orl
xchg
jnp
mov
call
xor
out
push
icebp
lock
imul
test
test
add
out
pusha
and
addl
add
adc
xchg
mov
fwait
int3
push
in
inc
in
test
ljmp
data16
test
add
popa
xor
lds
push
adc
jne
jle
cmp
stc
mov
fildll
rolb
push
loopne
dec
mov
push
pop
cmc
sbb
cli
adc
pop
mov
cwtl
sub
rclb
mov
inc
dec
inc
aaa
lret
loop
into
or
xor
mov
fildl
dec
adc
dec
mov
pop
out
addr16
popf
sub
jmp
sbb
sub
jecxz
cld
das
cmp
pop
fs
inc
mov
lret
or
incb
mov
outsb
mov
aad
inc
add
xchg
cltd
mov
push
or
adc
push
out
dec
jle
push
sub
adc
mov
sti
test
jl
sub
lods
out
jle
in
addl
adc
or
sub
into
cmc
dec
dec
mov
test
jnp
dec
inc
popf
rcll
push
push
lods
pop
and
dec
loop
xchg
movsl
xchg
rorl
sbbb
mov
mov
xlat
jmp
aad
out
loope
and
inc
mov
mov
jmp
adc
lock
and
dec
outsb
or
or
cmpb
je
int3
inc
pop
bound
cmp
pop
aaa
push
sbbb
ret
scas
xor
scas
hlt
inc
xchg
cmc
pop
pop
rorl
mov
mov
mov
sub
jbe
fimuls
stos
inc
iret
fstps
js
in
rcr
push
pop
mov
jge
sbb
icebp
fstl
mov
or
gs
inc
inc
shll
mov
cmc
movsb
mov
push
push
push
adc
incl
push
enter
daa
cli
stos
adc
int
aaa
pop
aam
xor
ljmp
orb
aam
cmpsl
xchg
sbb
add
inc
dec
sbb
mov
or
daa
loop
dec
nop
inc
pop
js
das
sbb
cltd
js
stos
popa
push
xor
xchg
sti
in
add
mov
cmp
mov
cmp
movsb
int
sub
hlt
std
or
pop
xchg
xchg
lret
in
dec
loop
jge
inc
fbstp
mov
sbb
ret
xchg
inc
insl
movsl
push
outsb
call
rclb
mov
das
movsl
mov
flds
cmpsl
ja
int3
or
lahf
or
mov
rorb
sub
test
pop
pop
imulb
hlt
insb
popa
ljmp
ss
push
mov
ljmp
and
xchg
mov
jmp
enter
scas
mov
pushf
mov
iret
adc
jbe
pushf
mulb
jmp
xchg
xlat
add
rorb
xchg
push
jbe,pn
pop
andl
jne
add
jnp
fdivl
movsl
push
jns
pop
fisttpll
mov
ss
das
imul
stos
rcrb
sbb
dec
jo
rcr
repnz
mov
in
xadd
repz
jl
arpl
adc
scas
dec
push
dec
das
xchg
sahf
dec
jnp
adc
test
jg
sbb
jb
and
sbb
inc
movsb
add
movsl
inc
xor
repnz
sub
mov
pop
and
sub
mov
std
popa
mov
inc
imul
cmpsb
cmp
xchg
jbe
loop
out
xchg
cmpsb
jns
ret
push
cmp
xor
xor
mov
pop
lods
adcl
popf
or
jb
add
xchg
aaa
jno
lret
mov
xchg
scas
imul
sbb
jg
lock
shl
adc
fildl
xlat
scas
or
mov
mov
daa
jmp
xchg
mov
bound
cmpsb
push
xor
mov
xlat
popa
loope
sbb
int3
pop
shl
es
push
je
mov
in
push
loop
lret
jle
jg
mov
subb
popa
sub
imull
or
lods
push
mov
stc
in
mov
dec
adc
shll
sub
orl
mov
push
jge
loope
dec
addr16
inc
or
mov
stos
mov
mov
inc
scas
idivl
cs
cmp
mov
jns
repz
cmpsb
xor
cmp
sbb
pop
sbb
fnstcw
or
xchg
pop
rorl
dec
movsb
jg
push
push
mov
push
inc
xchg
mov
fucomi
jp
loope
aam
dec
in
lahf
sub
cmpsl
adc
pop
neg
dec
dec
and
fstp
fidivrs
dec
dec
insb
rcrl
dec
daa
sbb
inc
bound
lahf
ljmp
inc
jmp
and
inc
enter
xlat
out
mov
xor
test
and
imul
mov
inc
cmc
xor
setg
mov
push
or
into
and
fdivrl
ret
add
pop
outsb
ret
repnz
movsl
inc
mov
dec
push
sbb
push
cmp
push
popl
inc
xchg
cmpsb
jp
int3
and
mov
jo
les
mov
pop
mov
test
pop
add
or
xchg
add
pop
int
dec
sarb
mov
out
lea
cmp
add
movsl
mov
adc
in
jecxz
shl
rep
mov
fidivs
dec
add
ret
pop
jle
sbb
lods
mov
dec
out
imul
adc
lcall
push
lcall
sbb
loope
sub
adc
and
ret
loopne
xlat
pop
sbb
push
pop
xlat
jp
aad
dec
cmp
inc
push
xchg
and
mulb
add
cmpsl
andb
add
fldcw
outsl
xchg
inc
arpl
rcr
jns
imul
dec
sub
ficoml
outsl
popf
cld
mov
mov
mov
scas
fists
cld
inc
mov
test
jge
add
and
add
mov
movsb
xchg
addr16
mov
cmp
inc
sbbb
mov
shlb
mov
das
xchg
rcll
sub
data16
cmp
loopne
push
mov
xchg
xchg
repnz
cltd
hlt
mov
lret
adc
addb
and
sub
in
clc
sbb
dec
clc
mov
mov
and
inc
sbb
shll
adc
out
sbb
mov
mov
mov
leave
sbb
les
mov
popf
fdiv
movsl
insb
hlt
mov
loopne
rcrb
mov
jge
mov
test
mov
cmpsb
and
xor
insl
pushf
cli
mov
movsb
fst
cmp
mov
dec
jmp
mov
xor
jno
mov
in
mov
mov
push
ret
mov
pop
scas
add
mov
pop
stos
fcoms
movsl
xchg
pop
ja
cld
rclb
push
mov
dec
sub
dec
mov
or
outsb
pop
cli
xor
push
rorl
sbb
xchg
popa
out
jle
popa
in
imul
loope
cs
xchg
fwait
dec
stos
scas
jns
pushf
movsl
dec
out
mov
jns
test
js
add
pop
in
push
xor
mov
aaa
movsl
dec
jb
cli
insl
pop
stos
jmp
loope
je
dec
fldl
or
and
lahf
mov
mov
fwait
and
pop
outsb
or
push
adc
test
nop
xor
pop
outsl
inc
into
cmc
jbe
add
ret
in
or
inc
lds
add
push
mov
or
aam
jb
push
gs
push
ret
ror
pop
movzbl
shrl
jns
aam
sahf
sub
test
mov
pop
pop
popa
push
movsl
push
mov
xchg
cs
out
pop
adc
mov
adc
shrb
mov
loope
add
jg
sub
add
imulb
mov
mov
cmp
fistpl
lods
fs
pusha
hlt
add
xor
adc
stc
loop
push
aas
jmp
rcr
dec
rcrb
std
add
mov
sahf
lods
inc
outsl
shr
dec
jmp
arpl
dec
imul
cld
rcrb
xchg
jns
test
inc
mov
ljmp
outsb
sbb
and
lcall
jmp
inc
mov
dec
addl
push
adc
push
push
cmp
les
test
push
je
stos
xchg
inc
inc
lcall
jbe
ds
std
xchg
adc
xchg
popf
sub
out
jno
pop
or
cmp
xlat
and
mov
adc
fucomp
jmp
dec
or
lcall
aaa
mov
lcall
or
mov
pop
aam
pop
fbstp
add
xchg
push
mov
stc
cmp
or
push
in
idiv
loop
loop
pop
pop
xchg
je
inc
sub
pop
or
fldenv
arpl
sti
pop
ss
fwait
lock
sub
fidivl
cmpsl
push
xor
jns
push
sub
jbe
fcomps
xor
ficoml
shrb
popa
mov
adc
mov
push
int3
iret
cltd
adc
ja
push
aas
dec
jne
jae
repz
mov
out
std
mov
test
adc
jnp
shll
sub
fwait
hlt
mov
mov
inc
addr16
icebp
dec
shlb
ljmp
and
popf
pop
insb
out
jae
push
add
dec
jg
adc
mov
ljmp
jo
xlat
push
insb
jbe
nop
lods
into
mov
mov
mov
sbb
fcoml
pop
pop
xchg
jnp
mov
scas
insb
out
daa
or
dec
xchg
mov
inc
ret
daa
mov
and
pusha
pop
jne
cmp
hlt
test
xchg
or
outsb
sti
xor
scas
jae
in
xchg
push
into
fcomps
xchg
lea
add
loop
jmp
enter
popf
fildll
xchg
inc
repnz
daa
shlb
into
iret
leave
fsts
ret
mov
cmpsb
xchg
data16
inc
xchg
sub
xchg
fs
or
mov
loop
sbb
in
test
inc
cmp
inc
fwait
sbb
mov
cld
loope
cmp
into
insl
in
mov
jae
pop
pop
scas
jecxz
push
jno
je
sub
adc
nop
repnz
xor
lock
sbb
movsb
rclb
mov
inc
sub
ljmp
in
imul
int3
cltd
and
cmp
test
adc
or
jg
ja
dec
aaa
into
cmpsb
adc
popf
cmp
inc
jae
mov
out
hlt
cmpsl
fmull
lcall
sub
arpl
shll
xchg
jecxz
imul
arpl
mov
into
pop
add
cmpsl
or
mov
icebp
xchg
ljmp
sub
shl
pop
dec
push
int
inc
jne
sti
outsb
loope
cmpsl
ret
jae
icebp
shr
or
pusha
ljmp
outsb
fidivrl
mov
outsb
shrl
stos
movsl
inc
ds
push
movsb
cs
cmc
std
out
inc
pop
add
aaa
or
aas
lahf
cmp
jecxz
cs
xor
inc
movsb
xlat
jmp
outsb
cmp
lret
mov
adc
push
stos
in
or
dec
mov
rorb
mov
fildl
imul
push
pusha
sahf
scas
mov
rcll
pop
shlb
sbb
sub
sub
add
mov
daa
fsin
mov
sar
sbb
lods
or
xlat
stos
addr16
leave
mov
call
mov
mov
mov
push
pop
dec
mov
mov
sbb
repz
dec
sbb
shr
aaa
xchg
je
in
in
push
das
fisubrl
inc
and
sbb
mov
int3
popf
or
ja
push
add
aam
sub
inc
inc
add
aam
push
mov
mov
xlat
or
sahf
ror
mov
push
popa
jo
dec
jge
dec
push
ljmp
loopne
sti
adc
sub
out
xchg
das
sub
ficompl
arpl
and
hlt
mov
inc
sbb
pop
fucomip
jle
mov
test
add
sub
out
outsb
mov
xrelease
dec
scas
or
xchg
jno
fidivs
hlt
or
jle
mov
fwait
pop
sub
adc
cwtl
sbb
sbb
mov
fs
sub
fistpl
bound
xor
pop
jo
xchg
mov
xchg
mov
sub
push
test
sbb
mov
lcall
and
cmp
mov
add
arpl
das
rol
lahf
sub
lret
or
test
jb
insb
and
or
pusha
test
pushf
mov
flds
sti
je
popa
mov
cmp
aaa
enter
xor
stos
ljmp
xor
cltd
es
movsb
dec
out
mov
mov
cmp
or
mov
imul
add
stos
cwtl
dec
sti
and
lret
dec
loope
lahf
daa
movsl
adc
jge
mov
push
aad
jae
ficoml
js
mov
cmp
leave
inc
push
hlt
daa
mov
jbe
pop
lods
imul
sahf
and
popa
fstps
pop
adc
mov
mov
xchg
ret
fisttpll
aaa
lret
sbb
fldl
mov
cmc
addr16
adc
and
outsl
gs
sub
xchg
loopne
add
jle
cmp
pushf
sub
cmpsl
and
push
xchg
fisttpll
push
js
xlat
nop
xchg
lea
cmpsb
jp
stc
insb
jbe
loope
inc
mov
mov
adc
lock
imul
xor
aam
fisubs
movsl
adc
and
pop
iret
sbb
mov
sbb
aad
lea
out
jmp
xor
push
mov
push
push
xchg
clc
jecxz
out
movsb
xchg
add
fsts
cmp
sub
xchg
inc
sub
sbb
dec
test
adc
jmp
fwait
clc
movb
lret
and
cmp
mov
data16
and
in
clc
xchg
push
cmp
in
xchg
and
cmp
movsb
and
out
movsl
jno
fadds
addr16
jp
mov
fistps
dec
mov
mov
test
cltd
add
movsb
dec
jb
fisttpll
xchg
or
lea
cltd
sbb
pop
aam
cmpsb
xchg
or
adc
arpl
std
sbb
xlat
push
inc
les
inc
xchg
cmp
daa
mov
xchg
pop
ficomps
sti
mov
mov
negb
int3
lahf
xor
lods
cmp
pop
add
movsb
sub
stos
pop
mov
xor
bound
gs
push
xor
fcomps
lahf
mov
lea
pop
and
wrmsr
jo
push
aad
sbbb
scas
loope
adcl
adc
mov
fs
xlat
aad
jnp
int
addr16
add
psubq
sahf
popf
sub
das
mov
adc
xchg
pop
rcrl
sub
or
jg
push
rclb
push
stos
cmp
sub
mov
jg
pop
sbb
out
lea
aas
mov
sub
in
push
xchg
loope
cmp
popl
or
push
push
testl
inc
mov
add
push
dec
push
xchg
and
pop
dec
loop
jmp
int3
stc
outsb
or
repz
rclb
xchg
adc
cmp
or
push
cli
mov
mov
leave
fs
mov
push
lods
sbb
pop
fdivs
xchg
adc
jmp
cmp
inc
and
aam
sahf
mov
cmc
popa
test
and
popf
lock
sbb
adc
fcmovbe
inc
and
sbb
mov
call
daa
dec
leave
fstps
lret
mov
lods
lahf
add
stc
jg
cmpsb
push
dec
xlat
cmp
xchg
jp
and
sbb
jp
dec
out
jae
les
mov
cwtl
inc
enter
push
sahf
lock
mov
jne
or
in
lds
and
push
ds
ja
pushf
pop
mov
xor
pop
inc
push
mov
and
sbb
inc
cmp
xchg
gs
jbe
cmp
xor
icebp
fsts
rcrl
lods
cwtl
loope
fnstcw
mov
add
sbb
dec
fcmove
sbb
cmpsl
fdivp
les
popf
mov
les
fst
pop
adc
pop
pop
xor
sahf
ja
xor
mov
and
push
add
adc
inc
imul
or
lds
push
sarb
out
mov
outsl
loop
outsl
repz
and
sbb
nop
or
inc
jno
js
dec
cmpl
ds
loop
icebp
dec
cmp
jb
pushf
sahf
cwtl
xchg
cmp
push
popf
push
jbe
or
xor
loopne
sub
mov
mov
jmp
push
scas
or
cltd
xchg
cmp
mov
inc
bswap
cmpsl
test
mov
lret
mov
adc
ds
mov
or
xlat
scas
xchg
pusha
mov
fsubrs
lea
stos
inc
daa
xchg
les
stos
sbb
dec
loopne
sbb
sahf
adc
inc
jl
jmp
rcll
icebp
adc
jns
int
xlat
and
ficoml
jle
sub
sahf
idivl
jmp
mov
mov
adc
xchg
hlt
inc
fadds
mov
inc
inc
enter
in
les
jl
mov
mov
frstpm(287
xlat
and
xchg
xor
push
jmp
inc
sub
push
push
pop
sbb
xor
xchg
ja
cld
int
cmp
addl
andb
sti
int
pop
pop
popf
lahf
repnz
cmp
cmp
arpl
mov
and
sahf
xchg
cmp
lcall
fisubs
in
sub
pop
int
fistpl
dec
xor
scas
sbb
push
lods
mov
pop
cltd
inc
int
inc
loope
add
fdivr
out
xchg
xchg
mov
xchg
xor
pop
and
loopnew
out
or
test
fsubs
and
jbe
loop
rcrb
mov
aad
mov
push
mov
std
and
cmp
push
adc
cmp
les
clc
enter
nop
mov
pop
sbb
mov
mov
mov
jmp
cmpsb
ret
pop
repnz
xor
rcll
in
out
adc
movsl
inc
aam
fsubrl
push
popf
je
repz
es
mov
xchg
push
stos
into
lret
adc
dec
xchg
mov
icebp
or
outsb
add
cmpsb
call
addr16
push
sub
into
outsl
outsb
movsb
inc
or
and
xor
xchg
pop
push
repnz
push
lahf
push
inc
jne
inc
cmc
daa
inc
movsb
pop
xchg
bound
movsb
jbe
out
lahf
push
repnz
push
xchg
dec
in
adc
cmp
push
cmp
add
pop
ffree
or
adc
or
rolb
roll
rcrb
add
pop
mov
punpcklbw
lcall
in
pop
fdivr
cld
lahf
rep
fwait
xor
pusha
frstor
fwait
mov
or
imul
adc
jge
jns,pn
rorb
or
jge
inc
mov
js
lea
iret
jp
int
mov
testb
xchg
iret
sbb
adcb
stc
aad
cmp
sub
fstpl
pop
dec
cmpsl
bound
inc
add
enter
iret
xchg
push
addb
mov
mov
adc
xchg
mov
in
movsl
rcrb
mov
jmp
mov
std
cmc
and
es
cltd
cmp
mov
mov
int3
adc
sbb
daa
idivb
or
es
std
test
push
mov
adc
mov
filds
notb
pop
insb
and
lea
mov
imul
and
jnp
shlb
dec
stc
out
add
and
ret
push
or
rcrb
jg
nop
pop
outsb
sbb
in
fimull
and
pop
add
nop
cs
stos
sbb
js
testl
mov
add
frstor
pop
lock
cmpsb
jge
mov
fwait
add
loope
fwait
add
pop
clc
daa
sbb
cs
xchg
mov
sbb
stos
call
fstps
push
scas
repz
xor
push
jmp
dec
xor
mov
loope
push
imull
jb
popl
bound
dec
sub
lock
cmpsl
popf
jg
call
cld
xor
test
xor
pop
imul
mov
insl
push
repz
jmp
jbe
sub
loopne,pn
insb
jae
movsb
mov
dec
inc
jle
adc
cmpsl
imul
mov
and
lock
pop
add
jo
mov
and
ret
stos
repz
lea
out
push
xor
sbb
lea
jo
jl
sub
push
or
sub
outsb
dec
jae
jl
sbb
push
dec
mov
test
xchg
or
pop
cmp
jb
mov
inc
clc
cmp
sub
mov
stc
or
mov
or
pop
data16
subl
ss
loop
rcrb
ljmp
iret
xchg
mov
std
sbb
adc
adc
cs
mull
stc
mov
mov
cmp
xchg
cmp
sub
add
aam
mov
lods
lret
jns
dec
ja,pt
mov
adc
xchg
mov
sub
and
mov
out
inc
jp
mov
jb
not
inc
movzbl
cmp
mov
cmp
mov
imul
das
sub
xchg
dec
push
pop
xchg
push
sbb
icebp
pop
xor
cs
faddl
iret
andl
jmp
mov
adc
in
and
xlat
rcll
rolb
push
dec
ja
scas
mov
sub
in
addr16
pushf
ljmp
rorb
addr16
popa
mov
add
xor
stos
jge
push
inc
xchg
jge
dec
add
mov
js
stc
cmc
dec
push
jno
movsb
inc
sub
add
and
xor
sbb
lea
std
push
pop
pop
and
bound
dec
lcall
xor
dec
pop
jecxz
gs
aam
insl
fwait
adc
sti
xor
cmp
push
stos
push
out
ljmp
or
xlat
sub
mov
cmp
sub
mov
mov
lcall
mov
call
adc
xor
mov
inc
test
stc
jle
stc
loopne
jmp
or
pop
mov
popf
cmpsl
adc
pop
mov
fisubrs
xor
push
mov
push
cmp
push
fdivs
imul
negl
stc
sbb
dec
cld
or
push
cmpb
inc
sti
sub
xor
or
lods
out
ljmp
dec
add
repnz
cmc
inc
cmpsl
jbe
adc
xor
mov
push
fwait
loop
mov
jg
lret
pop
test
push
cwtl
sbb
loop
mov
mov
sub
stos
scas
int3
mov
add
mov
jge
dec
arpl
jne
dec
cmpsb
mov
insl
pusha
enter
in
rcrl
or
repnz
or
test
daa
inc
inc
jecxz
insl
insb
lods
mull
insb
adc
jle
aam
dec
in
loope
imul
push
lea
push
lahf
jl
push
std
jp
into
or
mov
js
pop
xchg
rol
or
pop
ds
enter
jmp
aaa
imul
fwait
shrl
sarl
xorb
mov
pop
andb
mov
fdivrl
ja
xchg
fiaddl
jle
loope
push
cmp
mov
mov
cli
or
sub
jmp
push
adc
pop
cmp
and
and
fbstp
push
enter
ficoml
pop
cmpsb
fstpl
lock
jae
mov
push
pop
or
lret
arpl
out
popf
mov
push
aaa
lret
data16
sub
mov
mov
mov
rcll
jge
lods
xchg
jae
lock
in
dec
insb
ss
scas
es
and
shll
inc
pop
jecxz
dec
scas
inc
aad
adc
negl
inc
dec
sub
imul
inc
xor
mov
mov
dec
dec
add
icebp
insb
jp
je
adc
inc
and
mov
pusha
jmp
xor
xchg
stc
out
jbe
sbb
sbb
add
mov
nop
xchg
mov
das
out
mov
or
sbb
scas
popl
clc
inc
jno
sbb
pop
and
push
lods
pop
xor
out
push
pop
fldl2e
inc
xchg
insb
leave
rcll
xor
mov
inc
xchg
inc
xor
mov
dec
add
inc
addb
or
push
movsb
mov
xlat
cli
lods
sti
pop
mov
mov
or
dec
popf
mov
xchg
je
pop
add
mov
xchg
sarb
mov
data16
mov
dec
sbb
mov
mov
xor
cld
vmulpd
test
cwtl
xor
ud1
dec
rolb
sbb
jnp
mov
movsb
and
lret
mov
cmp
pop
inc
dec
cmc
fs
dec
cltd
mov
repnz
pop
lret
mov
xor
jecxz
inc
add
mov
filds
bnd
xor
cmp
mov
sub
mov
pop
mov
stos
dec
sbb
and
mov
jb
scas
or
dec
shr
ja
js
sub
rcr
push
arpl
outsb
mov
and
repnz
push
mov
sub
cmp
pcmpgtb
cmp
push
out
xchg
es
das
push
adc
hlt
loop
daa
test
xor
lds
mov
enterw
stc
fistpll
pop
loop
add
js
xor
pop
and
jmp
push
std
pusha
xchg
bound
and
lods
and
mov
mov
pop
push
insb
aas
jnp
mov
push
jecxz
fmull
jae
insb
jns
movl
cwtl
lea
pop
dec
iret
lahf
popa
inc
jge
ss
test
popa
and
mov
mov
ss
xchg
lock
mov
xchg
xchg
inc
sub
scas
orl
inc
fistps
inc
call
xchg
pop
and
pop
cli
mov
xlat
sarb
lahf
aaa
pop
dec
cmpsb
out
repnz
lods
jle
push
push
mov
neg
daa
popf
adc
shrd
lcall
jmp
and
jno
or
xchg
inc
out
or
flds
dec
ss
in
sub
push
fisubl
int3
ret
inc
cli
adc
adc
mov
xchg
cs
pop
lcall
mov
mov
push
in
and
arpl
pop
push
in
pop
popa
pop
lcall
mov
jge
add
pop
sahf
sub
dec
repnz
sbb
pop
or
cmc
lds
cwtl
push
imul
sub
inc
into
push
enter
aaa
pop
push
xor
pop
adcb
jo
dec
add
sub
ja
clc
popa
in
xchg
pop
ret
mov
icebp
insb
sub
mov
mov
mov
int3
xchg
fs
sbb
adc
js
test
add
add
jecxz
imulb
gs
xor
ljmp
ret
add
out
aaa
or
jge
js
fucomi
fldenv
mov
ljmp
sarl
inc
or
loope
push
mov
mov
clc
popf
shlb
mov
adcl
gs
daa
dec
xchg
data16
out
inc
jl
scas
mov
and
fsubl
inc
loope
xchg
imul
push
push
movsb
lea
mov
mov
or
mov
add
call
xchg
pop
mov
adc
or
mov
popf
adc
mov
or
push
inc
das
mov
lcall
xchg
dec
filds
repz
and
out
mov
ds
in
or
and
insl
or
shlb
out
dec
pop
sti
add
sahf
cmp
aas
cs
xor
dec
mov
rol
cmp
imul
push
add
mov
inc
loope
cltd
mov
in
jecxz
lods
out
icebp
dec
xchg
cmp
sbb
sbb
test
cld
insb
dec
into
lret
inc
in
mov
sbb
dec
xor
data16
addr16
xchg
scas
adc
enter
mov
les
dec
xchg
and
lret
leave
andl
in
xchg
jl
push
stos
mov
int
mov
add
mov
sbb
adc
jg
inc
dec
and
mov
not
cmpsb
aam
and
push
pop
pop
jmp
fwait
sarl
lret
xchg
mov
inc
inc
sub
je
lret
int
scas
js
imul
push
xchg
cmpsb
pushf
sbbb
xchg
mov
xchg
loopne
and
stos
mov
push
int3
push
sahf
sarb
inc
sub
in
das
dec
pop
into
out
mov
inc
fcomp
in
jl
sbb
push
gs
fstpl
int3
cmp
mov
adc
repnz
out
mov
sbb
ficomps
ret
mov
cmp
sub
pcmpgtw
stc
shll
add
mov
imul
call
out
lret
lods
std
xor
xor
scas
fisttps
jecxz
push
jp
and
push
cmp
pop
dec
mov
imul
bound
fcmovnbe
sub
mov
or
push
je
test
inc
ret
in
ss
sbb
std
adc
clc
stos
or
inc
pop
movsl
outsb
imul
cwtl
xchg
clc
dec
mov
xchg
dec
bound
dec
pop
in
adc
cmpsl
inc
dec
js
repnz
int3
inc
fsin
or
std
loopne
or
xor
add
pushf
or
lret
cltd
movsl
mov
dec
mov
gs
out
push
lret
insb
or
jle
insb
and
ja
sub
hlt
cmp
repnz
and
shll
fdivl
das
inc
loop
pop
sub
das
mov
xor
or
lds
inc
pop
je
mov
cmp
inc
push
xchg
icebp
mov
and
js
cld
cmp
stos
sub
rcrl
imul
or
xchg
stc
cld
sahf
out
pop
icebp
sbb
jno
pop
out
mov
pop
xor
jle
sub
stos
pop
mov
mov
scas
sbb
jo
imul
pusha
aam
jns
adc
sbb
iret
incb
mov
adc
inc
call
xchg
xchg
push
inc
subl
ja
scas
insb
sahf
imul
sbb
xchg
add
mov
icebp
pop
fisubrl
sub
mov
pop
jae
dec
push
or
xchg
out
jg
or
fxam
sub
pop
je
xchg
cmp
mov
std
stos
fs
pushf
fisttpll
or
out
flds
aas
sub
or
fdivrs
push
mov
xor
jns
cmc
and
mov
stos
lahf
and
mov
cmpsl
pop
add
fcomps
mov
lret
js
mov
jmp
ret
ret
add
inc
lcall
sbb
mov
cmpsl
jne
pop
push
aaa
jmp
mov
mov
adc
icebp
inc
xchg
imul
and
stos
lea
push
mov
out
imul
push
lret
movsl
xlat
jns
dec
cld
mov
inc
mov
jbe
in
xchg
mov
push
sbb
shrl
ret
sbb
out
xchg
in
xchg
adc
add
cmp
cmp
xlat
shll
imul
xchg
mov
pop
jle
cmp
and
mov
test
inc
and
push
or
lret
dec
stc
pop
mov
xbegin
stos
stos
aad
insl
inc
inc
insb
lcall
in
mov
and
jae
jl
xchg
repnz
mov
repz
adc
mov
lods
pop
hlt
xorb
push
fadds
jmp
scas
stos
or
cli
out
ljmp
or
out
mov
scas
je
xchg
mov
sbb
push
and
lret
into
pop
mov
clc
push
faddl
shlb
push
inc
sub
in
fs
sbb
push
test
pop
cwtl
lahf
test
mov
stos
jecxz
lret
notb
sub
cmc
sbb
das
inc
rcll
push
lea
mov
mov
jae
scas
adc
sti
jecxz
cwtl
repnz
or
lcall
loop
es
aaa
xor
test
inc
mov
test
lock
inc
fs
add
and
xchg
inc
insb
aaa
sub
push
fnstsw
ljmp
jge
jecxz
scas
jecxz
cmc
popf
imull
xchg
mov
mov
or
jp
push
into
std
add
adc
xor
imul
mov
adc
cmp
mov
and
loope
sbb
decl
adc
xchg
scas
jl
in
pop
jmp
mov
insl
cmp
add
es
adc
dec
jmp
push
repz
inc
aam
dec
push
movsl
push
in
cmpsb
push
inc
aaa
jl
lahf
push
ja
dec
mov
jns
out
aaa
mov
test
inc
lock
lret
push
jg
jl
xchg
jmp
imul
mov
push
out
mov
ds
dec
cmp
xor
mov
movsl
loopne
addb
les
pusha
pop
xchg
popa
dec
cmp
test
fsubs
jp
lods
push
rclb
loope
add
fmull
ja
add
cmp
lahf
out
xchg
lret
mov
xchg
push
popf
stos
or
push
scas
fisubrs
xchg
jle
mov
ljmp
or
stc
in
adc
mov
push
xor
clc
lock
mov
or
adc
inc
xchg
lret
and
push
push
pop
cli
mov
jle
xor
fbld
stos
jle
stc
es
xor
lahf
imul
mov
push
je
dec
xchg
hlt
or
push
pop
ficoml
mov
sahf
cmc
fmulp
out
int3
cli
push
ljmp
dec
ja
arpl
cld
ja
shl
stc
mov
loop
cmp
inc
rep
aad
sbb
sbb
lea
stos
insb
mov
cltd
outsb
mov
or
ret
pop
cmc
lea
or
add
ss
insl
in
js
shr
xchg
lret
sub
mov
stc
stc
mov
jb
das
jcxz
pop
push
or
packssdw
int3
mov
mov
or
mov
scas
push
mov
or
jb
ret
jecxz
cmp
jbe
enter
in
ret
mov
hlt
addr16
and
enter
xchg
popa
push
sbb
push
hlt
mov
mov
jb
xchg
push
pushf
mov
xor
stos
shlb
std
jb
lahf
inc
mov
ret
xchg
addr16
cmp
iret
sbb
pop
mov
dec
hlt
test
and
lds
mov
insb
adc
stc
dec
mov
outsl
jle
xchg
pop
addb
stos
xchg
xchg
and
xchg
adc
lock
pop
xlat
dec
sub
pop
push
daa
mov
and
cmp
add
stc
mov
popa
mov
in
or
sar
add
lcall
outsl
xchg
retw
mov
mov
push
adc
fwait
add
lea
nop
cmpsb
insl
jae
jns
fnsetpm(287
cmp
jecxz
fildl
push
sbb
mov
inc
mov
mov
lds
sahf
jb
jbe
and
xor
pop
cmp
mov
pop
dec
inc
in
fwait
into
sbb
push
shl
and
jne
push
neg
xor
negb
inc
dec
pushf
pop
jbe
or
cmpsb
mov
lret
imul
frndint
int3
iret
mov
daa
inc
insl
sub
in
jb
outsb
sub
xchg
inc
add
mov
mov
fldenv
inc
cmp
out
push
stos
xchg
pop
scas
xchg
sbb
es
andb
cmp
adc
adc
shlb
mov
pop
data16
stos
div
inc
and
les
push
sub
jne
push
out
mov
jo
push
jne
int3
xchg
jns
mov
xor
adc
xlat
xor
flds
add
jge
rcrl
fs
daa
into
dec
push
push
addr16
push
arpl
jp
and
rcl
dec
movsb
pop
movsl
cmpsb
scas
cmp
inc
aaa
fwait
fwait
xchg
mov
cmp
xor
shr
popf
loopw
sub
xchg
cli
dec
xchg
sub
sub
cmp
es
pop
mov
sub
or
mov
cmpsl
icebp
movsb
loop
sub
inc
loop
punpckldq
xor
and
cmpb
push
and
push
sahf
inc
xchg
cmp
xchg
mov
jae
data16
xor
cld
js
enter
int
lods
jno
add
sub
enter
jae
pushf
xchg
inc
or
movb
pop
mov
loopne
lea
cmpsb
movsb
sbb
and
sar
ds
xchg
ds
push
lods
je
outsl
adc
pop
inc
cmp
jmp
insl
adc
movl
call
cli
pop
pusha
loop
lock
xor
xlat
adc
lcall
ja
jno
xchg
imul
dec
xchg
jb
cmp
dec
adc
mov
pop
inc
inc
jnp
cs
and
mov
js
xlat
sar
mov
adcb
outsl
ljmp
ret
fistl
jae
fs
xchg
jmp
mov
repnz
stos
adc
stos
rorb
aas
and
clc
or
pop
sbb
xor
stos
dec
pop
cwtl
stos
mov
imul
icebp
pop
adcl
push
jb
inc
repnz
sahf
mov
repnz
dec
ja
in
push
es
jns
and
xchg
mov
cs
scas
negb
adc
popa
scas
dec
pop
lods
fwait
daa
mov
xor
cmp
and
ljmp
out
mov
ss
mov
adc
test
outsb
daa
mov
lods
adc
sbb
and
mov
pop
xchg
xchg
or
fstps
dec
cmp
clc
sub
divl
xchg
lret
out
out
adc
mov
push
or
cmpsl
loope
cmp
popa
cmp
mov
mov
dec
daa
ja
cmpl
and
loope
sbb
repz
push
ljmp
lcall
aas
loopne
insl
push
inc
outsb
mov
jp
mov
xchg
or
enter
and
mov
mov
dec
pushf
cmp
jmp
pop
testb
pusha
pop
and
sbb
push
push
js
xor
loop
mov
repz
add
and
ds
arpl
or
mov
lahf
sub
test
sti
dec
test
pusha
xor
js
mov
idivl
push
gs
rcr
lahf
fstl
lods
imul
ss
push
cld
roll
cmpsl
xor
ret
push
xor
sub
out
test
stc
cmp
std
aam
orl
add
stos
jno
and
loopne
loop
push
pop
lea
mov
in
out
mov
pop
lret
cltd
dec
xor
test
rcrl
fisttps
std
test
lods
out
dec
mov
rcrl
sbb
rol
xor
cmp
int
and
in
stc
jb
mov
pop
jle
jp
pop
push
pop
xchg
iret
scas
dec
test
fadds
stos
lock
lea
call
or
into
mov
ds
xchg
fwait
lret
call
and
movsl
push
dec
leave
mov
mov
mov
cmp
xchg
jp
daa
pop
xchg
push
popa
test
add
icebp
add
sbb
adc
iret
pop
add
dec
mov
hlt
push
fidivs
stos
xor
imul
or
adc
adc
xor
rclb
sub
jmp
aad
lahf
adc
xchg
sti
popa
andl
mov
in
es
xor
pop
leave
sti
mov
sub
xor
insb
sub
fwait
cs
fsubs
ficomps
sbb
call
pop
into
sub
sub
dec
nop
add
inc
pop
jp
addr16
xlat
mov
push
lds
int3
pop
enter
iret
add
mov
xchg
or
lods
pop
popa
in
jmp
xor
or
es
enter
mov
repnz
cld
jmp
test
gs
je
xor
stos
mov
shrl
lea
and
cmp
dec
out
movsb
in
stc
sub
jne
into
ss
jle
push
sbb
xor
sbb
sti
std
sbb
adc
dec
shll
lock
popa
movups
popf
and
div
movntq
adc
movsb
sbb
das
xor
pusha
adc
dec
int3
fs
sub
into
jmp
cwtl
dec
repz
sbb
pop
out
jne
dec
add
jl
mov
clc
and
aad
xorb
pop
push
es
ljmp
mov
or
jmp
sub
mov
push
dec
jb
xor
mov
fdivrl
push
movsb
sbb
mov
xor
sti
xor
js
add
cwtl
cmp
or
push
fadds
sbb
cltd
insb
lods
dec
jo
es
gs
aaa
fisubl
xor
sub
pop
mov
pop
pop
shlb
inc
and
or
imul
sub
fisttps
xor
sbb
mov
adc
mov
lds
and
mul
outsl
sub
js
cltd
addr16
sub
push
movsl
scas
cltd
push
mov
fsts
stc
in
pop
in
mov
push
jnp
push
movsl
jl
sub
xor
stc
mov
xchg
test
xchg
sti
push
in
pop
test
cli
in
insl
and
leave
or
dec
mov
neg
fcompp
movl
out
movsl
sahf
pop
inc
cmp
jge
les
adc
lods
shlb
xchg
cmp
mov
and
adc
sub
mov
out
cmp
jmp
call
push
iret
cli
xlat
push
adcl
xor
jle
mov
ja
cltd
aas
arpl
daa
stos
mov
fsts
inc
cmpsl
ljmp
jno
ficomps
add
std
sub
and
sbb
mov
mov
movsb
cmp
mov
hlt
sar
dec
xchg
mov
sbb
sbb
xor
mov
mov
jbe
mov
jnp
sub
fldcw
icebp
sti
lods
push
or
bound
mov
rclb
sbb
xcrypt-ctr
cmpsl
fcomi
stc
jbe
mov
sbb
and
fnstenv
mov
cmp
fstl
bound
jmp
xchg
xor
mov
andl
sbb
aam
cmc
pop
dec
das
in
nop
jmp
xchg
dec
or
mov
ret
mov
fcoms
gs
idivb
xor
arpl
cwtl
mov
xchg
add
fs
scas
cli
ret
das
mov
addl
aas
insl
fisubs
out
out
push
mov
pop
mov
rcrb
inc
repnz
pop
push
xchg
pop
in
nop
or
push
sbb
cli
or
pop
jbe
sbb
shlb
adc
wrmsr
cmp
stc
aam
sbb
ds
bound
or
out
sbb
cmp
mov
icebp
xchg
mov
mov
inc
dec
mov
out
mov
in
and
dec
pop
add
sub
je
jnp
cmpsl
add
arpl
mov
push
adc
adc
icebp
in
sub
out
pop
xchg
mov
lods
hlt
arpl
mov
and
scas
mov
pop
add
cmp
repz
inc
mov
dec
pop
fisttpl
movsl
lea
lret
mov
sbb
xor
in
fninit
inc
mov
mov
xchg
mull
dec
lods
fucomi
shlb
imul
push
arpl
insb
lahf
out
dec
out
lret
push
sub
roll
push
loop
repnz
inc
int
fs
xchg
jbe
in
mov
incl
cwtl
mov
jecxz
sub
out
lock
add
pop
lds
sub
clc
xchg
sub
add
sarl
and
fcomps
sti
adc
dec
xlat
jl
scas
fdiv
sub
sahf
xchg
fldt
sarl
stos
in
and
pop
call
and
nop
lret
scas
out
out
fwait
sbb
xchg
hlt
jnp
andl
sahf
clc
repz
shll
xor
loopne
iret
jnp
cltd
insl
test
fadds
and
repnz
dec
sub
jp
jne
xchg
jns
sbb
into
push
repnz
sub
aaa
sub
div
adc
sbb
scas
or
push
mov
push
adc
ja
mov
aam
cmpsl
andl
daa
push
add
jne
popa
xchg
outsb
mul
movsl
call
out
push
out
and
pop
aaa
jg
lret
decb
fmull
lea
lret
add
sarl
lret
or
mov
xchg
stos
pop
into
mov
cmp
imul
sbb
push
xor
mov
sti
inc
jns
inc
sti
mov
cmp
idivl
lock
jo
jecxz
ret
add
out
imul
icebp
outsl
pop
rclb
pop
data16
add
inc
aam
xchg
sub
or
and
cmp
or
cmp
push
pop
pusha
mov
push
hlt
jb
jecxz
fisttpll
fdivl
dec
clc
fcoms
sub
cmp
sahf
pop
xchg
push
jb
push
mov
lods
test
dec
cmp
xor
or
dec
out
clc
cmc
aam
ret
or
out
out
dec
mov
or
lea
div
cmovle
ret
jo
push
cli
enter
iret
xchg
sub
lods
xchg
in
mov
out
sbb
add
dec
adc
pop
cmp
mov
pop
xchg
push
aam
jmp
inc
xchg
call
push
push
ret
std
stos
mov
inc
and
cltd
mov
sahf
aaa
cld
cld
push
movsb
mov
in
lods
push
mov
inc
int
leave
arpl
mov
stos
cli
pop
cmc
xchg
outsb
decb
ficompl
ffreep
into
jno
aam
enter
cmp
jle
pop
sbb
das
repz
mov
int3
dec
lret
xor
sarl
xor
int
add
and
lret
repnz
mov
shll
imul
dec
pop
hlt
pop
jecxz
ror
xchg
ja
daa
imul
scas
int
mov
lods
cld
movsl
bound
out
out
jle
and
sbb
lds
xlat
imul
xor
xchg
adc
lret
add
dec
mov
add
push
dec
shlb
fs
pop
xor
xor
xchg
jnp
cmpsb
jnp
xchg
shlb
xchg
fstpt
push
xchg
sbb
test
mov
mov
sahf
lahf
mov
pop
mov
lock
cmp
mov
movsb
dec
xchg
outsl
repz
xlat
cmp
adc
dec
jmp
sahf
into
iret
shl
aas
inc
aaa
push
test
lret
mov
jne
cmpsb
dec
and
mov
push
mov
or
jo
fwait
push
in
cmp
dec
je
inc
aas
push
test
xchg
jo
adc
inc
push
sub
add
and
push
mov
data16
mov
xchg
xchg
ds
mov
std
ficompl
dec
fmuls
mov
sti
lods
jg
aas
jg
adc
add
cli
shll
in
jne
add
xor
cmp
inc
mov
jb
in
adc
cmpsl
out
or
sbb
mov
rorb
mov
cld
lret
xor
mov
sub
fldcw
xor
push
pop
test
cmp
lcall
lahf
cmp
push
in
fwait
sbb
fucomi
pop
test
mov
stos
js
stc
push
mov
lock
lods
jae
or
mov
cmp
js
hlt
notl
lock
iret
sbb
dec
jl
fbld
adcb
cwtl
rolb
in
and
xchg
fsubs
push
es
pop
xchg
cld
sub
push
test
bound
mov
in
dec
xor
cmp
mov
inc
lock
dec
cmp
mov
inc
lods
jne
repnz
mov
and
or
mov
inc
cwtl
pop
ljmp
mov
adc
cmc
or
xchg
mov
movsl
rcrl
xchg
push
mov
xchg
rol
icebp
pop
xchg
push
jge
out
mov
into
and
mov
repnz
mov
xor
gs
movsb
push
dec
cmc
mov
pop
push
out
adc
ficoml
stos
push
ds
sbb
scas
push
inc
sbb
ja
push
das
sub
inc
xor
sbb
mov
out
pop
mov
daa
aaa
pop
dec
scas
or
dec
roll
xchg
es
inc
das
adc
adc
call
push
gs
adc
jmp
or
bnd
push
fistpll
stos
gs
sbb
jbe
push
rol
call
inc
dec
dec
repnz
movsl
rolb
inc
imul
movsb
xor
or
lods
push
out
loopne
jmp
fs
lea
mov
sbb
mov
pop
mov
pusha
push
adcb
mov
jp
rolb
in
xchg
xor
es
mov
stc
lcall
mov
je
mov
dec
cmc
fprem1
push
loopne
loope
adc
mov
jae
mov
mov
cmp
pop
cmp
or
movsb
movsb
xor
mov
lret
stos
sbb
call
pop
rclb
cltd
xor
dec
and
iret
movb
sub
fst
outsb
lahf
pop
mov
shl
iret
jno
outsl
stc
jbe
mov
rorl
xchg
and
mov
cld
mov
push
rorl
lret
sarl
sbb
cld
mov
das
dec
jne
test
jl
inc
add
ficoml
cmp
js
lret
cmp
daa
pop
sub
cmp
lahf
jp
clc
mov
test
mov
push
dec
or
mov
sbb
leave
jbe
stos
bound
inc
std
mov
xorl
cmp
mov
sub
push
mov
or
rcrl
xchg
push
ljmp
mov
lods
je
cmpsl
cmp
pop
pushf
mov
insb
adc
leave
out
test
insb
sub
cmp
imul
sbb
in
outsl
lods
movsb
dec
orl
ret
mov
xrstor
mov
mov
fbld
and
and
imulb
clc
mov
bound
fld
and
pop
in
sub
gs
or
lock
jnp
repnz
dec
loope
inc
dec
nop
push
and
adc
mov
les
adc
aad
movl
orl
dec
mov
mov
in
or
xchg
cmp
push
push
xchg
ds
rol
in
insb
push
bound
adc
scas
lds
test
jg
mov
test
gs
mov
push
ss
ret
mov
outsb
pusha
and
push
adc
mov
cmp
bound
out
les
addr16
jle
sar
adc
test
fsts
sub
cmpsb
mov
lret
lea
push
pop
insb
push
out
mov
dec
mov
pop
xchg
adc
lods
shll
mov
cmp
sahf
pop
sub
push
sbb
sbb
xor
xor
out
shll
mov
iret
bound
inc
pop
int3
enter
xchg
jle
xchg
lds
out
gs
jl
fimull
lret
je
test
fsubrs
cmp
clc
cmp
lret
lods
mov
or
inc
mov
and
dec
fcos
dec
push
push
cmp
jo
fdivrp
push
orb
sbb
repnz
repz
insl
push
imul
int
daa
mov
arpl
cld
push
sbb
les
push
push
sbbb
out
jns
adc
dec
lret
sti
fs
incl
dec
pop
test
sti
dec
mov
and
push
cwtl
faddl
mov
aad
sti
mov
fistl
rcl
popa
jle
xchg
lahf
lods
hlt
lcall
inc
xchg
bound
hlt
push
cmp
add
jb
pop
adc
jmp
or
push
xor
cmc
loop
mov
sbb
mov
jno
add
dec
dec
in
bound
xor
aaa
mov
imulb
lods
mov
push
stos
iret
mov
faddl
sub
mov
popa
sbbl
stos
pop
xor
fistl
cmp
push
adc
inc
lret
adc
mov
insl
dec
cmpl
adc
into
fs
sub
jg
popf
mov
pop
outsl
xchg
lcall
inc
test
lret
mov
xchg
mov
and
fstpt
jge
cmp
and
hlt
mov
test
in
int
mov
mov
scas
xor
jg
sub
clc
fnsave
nop
mov
or
jg
xchg
insl
and
jne
mov
inc
cmp
aam
pusha
push
shr
sub
xchg
mov
push
orb
icebp
sbb
ret
or
sub
or
clc
add
inc
lret
jge
stos
dec
popl
push
imul
push
out
cmc
jp
mov
dec
adc
bound
imul
in
enter
aad
es
cwtl
add
outsb
hlt
xchg
rorb
fstpt
and
fcom
add
gs
push
inc
sarl
dec
subl
and
mov
pop
ret
loopne
add
fs
imul
faddp
insb
shl
xchg
cmp
bound
or
sbb
mov
in
cmp
roll
in
insl
sub
call
sub
out
hlt
mov
insb
push
inc
sub
add
out
sbb
les
ret
pop
aam
xchg
daa
fldt
mov
mov
int
push
ret
mov
iret
repnz
repnz
data16
jp
pushf
jnp
ljmp
fucomi
fs
loop
dec
fnstsw
test
add
ja
mov
arpl
xor
add
sarl
fstl
call
xchg
andb
mov
dec
sub
mov
out
pop
or
mov
lock
sub
cmp
sbb
in
and
into
movsl
test
int3
addb
sub
aad
lods
imul
adcb
jo
adc
lods
jb
andb
sbb
and
andb
addb
add
adc
leave
aam
leave
pop
dec
addl
movsb
test
mov
cmc
sbb
inc
mov
mov
cmc
sub
dec
xchg
lcall
repz
adc
xchg
test
mov
dec
mov
lea
leave
popa
mov
lea
pop
mov
mov
fidivrl
iret
insb
je
and
xchg
imul
and
jmp
lcall
push
add
stos
pop
in
adc
inc
xorb
mov
mov
push
ret
clc
add
pop
mulb
and
xor
dec
adc
arpl
jecxz
jle
mov
push
mov
or
jbe
sbb
in
pop
mov
jnp
jp
jmp
outsl
ret
test
pushf
mov
xchg
test
nop
in
push
mov
mov
cwtl
mov
outsb
fisubrs
mov
test
pushf
cmp
dec
ret
dec
xchg
inc
mov
gs
cmpsb
daa
mov
ljmp
outsl
adc
pushf
push
push
sub
cmp
pop
dec
dec
fadds
out
jo
rcr
push
pop
or
adc
outsl
es
in
bound
and
inc
addl
mov
inc
sahf
and
lods
jecxz
jle
subb
inc
hlt
push
dec
scas
inc
fstl
push
imul
dec
jge
mov
and
xchg
cli
xorl
inc
mov
or
lcall
and
add
lds
into
lock
mov
mov
testb
stc
sbb
cld
in
int3
sti
xor
cmpsl
jecxz
das
mov
gs
aaa
orb
xchg
cltd
ljmp
sub
shl
cli
out
pusha
add
jo
pop
jmp
ret
loop
loopne
dec
frstor
mov
cmp
fiaddl
cmp
fidivl
and
mov
mov
jae
lea
aam
push
jnp
jae
xchg
jle
dec
sarl
dec
and
jae
or
or
mov
jno
push
mov
in
js
xlat
push
das
sti
cmp
out
stos
adc
dec
lds
shrb
xchg
inc
dec
push
pop
jae
jecxz
and
cmp
mov
cmp
cmp
jbe
out
lahf
inc
cmpsb
dec
sbb
fbld
sarb
stc
lock
xor
adc
out
xor
pop
mov
add
push
dec
scas
dec
jns
add
jo
adc
out
adc
adc
jbe
stos
push
mov
xchg
iret
push
mov
leave
mov
xlat
sub
gs
fisubrs
or
sbbb
jmp
lods
sub
jb
cmc
push
fcoml
pushf
subl
and
std
mov
sub
and
jae
jnp
je
das
in
aas
adc
lret
jb
loop
mov
cmp
je
xchg
jne
rcrl
cmp
or
dec
loop
push
add
nop
insl
cvtpi2ps
or
mov
fs
std
call
push
xor
enter
add
outsb
scas
cmp
jno
push
jle
dec
es
and
and
sbbl
pop
inc
test
aaa
xchg
lods
fs
cli
outsl
pushf
outsl
or
cmc
mov
xor
movsl
cmp
inc
sub
jne
and
and
cmpsb
fwait
ljmp
imul
outsl
xor
cmc
adc
push
push
add
pop
shlb
js
pop
mov
xor
or
dec
xor
pop
pop
mov
ljmp
mov
pusha
or
inc
inc
lret
ret
aad
insl
xchg
pop
pop
loope
xorb
xchg
pop
enter
pop
push
les
push
mov
into
sub
pop
inc
jge
jg
aas
sbb
loopne
add
std
pop
aaa
pop
sub
ss
dec
jle
mov
das
cmc
dec
xor
arpl
js
add
push
jg
mov
mov
inc
add
xorl
mov
lret
pop
ret
mov
cwtl
fcmove
jnp
mov
mov
push
lret
xor
sub
sbb
add
repnz
xchg
add
and
adc
out
mov
lcall
shlb
pop
pop
andps
and
aaa
or
aad
gs
mov
xchg
fisubs
pop
cmpsb
aam
in
and
lods
dec
rolb
sti
mov
jne
clc
test
jo
pop
xor
ret
pop
sub
test
pop
cmpl
pusha
sahf
mov
xor
jb
jp
arpl
jns
test
call
xchg
test
inc
fs
mov
dec
das
daa
push
shl
jbe
outsb
or
scas
xlat
jge
incb
pushf
rcll
xchg
jle
sbb
jae
inc
sub
out
icebp
jge
push
inc
jb
lret
ljmp
push
xchg
jnp
gs
aas
or
jb
fcmove
jnp
jmp
adcb
fadd
idivb
sbb
aas
in
and
scas
in
add
xor
icebp
dec
rorb
jae
adc
jo
hlt
adc
loop
pop
cwtl
sub
sbb
sbb
xchg
cmpsl
add
pop
xchg
mov
pop
fwait
adc
or
mov
loope
and
lahf
adc
lret
popf
out
and
add
cs
mov
xor
pop
inc
inc
pop
fsts
cli
xchg
jb
lock
mov
mov
xchg
mov
repnz
in
jnp
sar
jmp
mov
mov
sub
sub
pop
stc
or
repnz
xchg
pop
xor
cmp
add
or
push
jne
adc
shrl
sub
test
mov
in
mov
add
cmp
inc
xor
dec
je
pop
ror
jb
xchg
shlb
dec
sti
insb
dec
mov
call
mov
add
in
mov
hlt
pop
orl
or
mov
fninit
aaa
lods
jo
dec
adc
push
push
fidivl
sbb
pop
ret
jnp
scas
imul
mov
mov
call
dec
jecxz
xor
cs
push
mov
push
and
sub
and
int
adc
mov
orl
cli
stos
push
mov
jae
in
cmc
jae
mov
adc
adc
dec
orl
adc
lcall
notb
out
rcll
out
or
jnp
loopne
mov
ror
ja
mov
xchg
mov
ja
addr16
push
pop
sahf
push
lds
sbb
icebp
shrb
negl
lods
ds
sbb
mov
scas
pop
cmc
xchg
inc
mov
push
out
int3
repz
push
inc
mov
popf
pop
stos
cmpsb
ret
movsb
iret
daa
insl
aam
sbb
shl
in
gs
ja
lea
pusha
outsl
adc
test
enter
jne
nop
pop
mov
bsf
sbb
mov
and
in
mov
adc
inc
mov
lret
or
lock
enter
pop
and
push
xchg
xor
xlat
xchg
jl
lahf
psrad
mov
jle
pusha
fimuls
je
insl
cmpsb
fadds
movsl
xchg
test
hlt
addr16
push
xchg
jmp
enter
mov
repz
cs
dec
adc
pushf
cmp
fnstsw
mov
fwait
in
ds
pop
shll
add
mov
pop
push
scas
inc
int3
mov
xchg
adc
cmp
clc
lret
imul
test
sbb
add
aam
dec
rcll
test
sar
jge
loop
or
je
dec
ss
lret
or
push
aas
leave
imul
jg
push
jo
jg
mov
push
jnp
lock
sub
xchg
ja
jo
or
scas
mov
bound
pop
rcr
das
push
cwtl
xchg
or
mov
mov
decb
popa
mov
stc
insl
repnz
push
aas
and
rcll
fmull
and
cmp
int
cli
cmpsb
imul
xchg
leave
xchg
mov
xchg
call
pop
loope
pop
sub
mov
cmp
sti
xchg
jge
popf
ja
lret
sarb
mov
fcomi
push
cli
jp
mov
cmpb
push
push
mov
or
and
in
dec
or
jecxz
ret
in
shlb
cmpsl
enter
mov
mov
out
pusha
mov
pop
and
mov
mov
fcmove
stc
dec
std
mov
mov
cmp
sub
adc
addr16
stos
mul
hlt
pop
shr
cwtl
or
push
adc
dec
fcomi
xor
sub
pop
cmpsb
cld
rcl
scas
mov
push
in
or
mov
push
pop
fsts
mov
out
xor
les
clc
adc
pusha
xor
mov
lret
xlat
pop
icebp
sar
imulb
inc
and
loope
or
jns
pop
scas
xchg
test
hlt
sub
and
jae
inc
call
lret
imul
mov
out
mov
lret
nop
xlat
xor
pop
imul
xchg
push
cmp
mov
mov
fcmovne
lea
or
push
sub
add
ds
pop
arpl
addr16
xor
adc
leave
sbb
or
arpl
popf
mov
stos
shrl
insl
or
inc
jo
cmovne
adc
mov
pop
mov
out
mov
mov
inc
mov
stos
stos
out
dec
cmc
and
je
imul
dec
push
xchg
mov
mov
mov
int
pushf
lods
rolb
mov
sbb
xor
sub
sbb
xchg
mov
adc
mov
lds
xchg
and
inc
mov
cmp
mov
jae
and
iret
push
and
xor
sbb
inc
imul
pop
shrb
lretw
push
imul
loope
ljmp
pop
mov
inc
arpl
orl
push
into
cli
sub
stos
and
push
popf
add
lds
mov
and
gs
dec
or
add
addr16
rcrl
mov
push
and
int
je
aas
ss
fs
jl
xlat
mov
push
filds
push
lods
mov
jb
lods
jno
sub
pop
xor
iret
push
cmp
out
push
push
and
add
pop
cwtl
cmp
jmp
mov
xchg
cli
mov
into
repnz
addr16
cli
out
cmp
pop
add
test
sub
adc
xor
fistps
test
adc
aas
shlb
out
nop
mov
mov
or
fnstcw
jo
push
mov
xor
lods
testl
xor
repz
insl
mov
jmp
and
insl
fsubl
inc
dec
lock
dec
mov
inc
out
out
push
inc
test
xor
ss
les
push
sbb
icebp
adc
sbb
pop
lret
mov
repz
push
imull
dec
leave
out
mov
xchg
sub
xchg
jno
shrl
cmp
pop
aas
fs
bound
outsl
scas
lods
mov
adc
fsubr
cs
addr16
pop
or
sub
cli
imull
lock
or
sbb
xchg
inc
test
pushf
jle
fidivrs
push
fsub
mov
sub
pop
cmp
mov
fidivrs
adc
dec
adc
xchg
loop
call
inc
pop
movsl
and
jbe
outsl
rolb
adc
mov
imul
push
sub
mov
int
inc
push
mov
or
int3
inc
jns
pop
bound
pop
adc
rcrb
mov
lock
les
lods
cmpsb
ret
es
adc
pusha
dec
mov
jp
jg
nop
mov
jno
or
xor
xchg
sub
cmpsl
xor
inc
or
push
repnz
sub
subl
cli
adc
jno
lds
std
jo
test
lea
jl
pop
rorl
sub
adc
leave
aas
outsb
repz
jnp
lds
push
sub
sub
xchg
mov
data16
loop
jns
test
mov
add
adc
cmp
jp
sub
pop
dec
pop
clc
mov
xchg
cmpsb
dec
dec
movsl
cmp
loope
mov
fidivrs
sub
push
mov
mov
hlt
in
inc
mov
pop
pushf
int
repz
adcb
mov
insl
sub
sbb
or
out
enter
sub
add
fwait
repz
mov
mov
popf
icebp
mov
in
xor
jnp
fucomp
ljmp
sub
xor
add
cmc
adc
out
pop
mov
jns
pop
inc
neg
jne
sub
cmp
sub
xchg
testl
push
loope
mov
mov
xor
out
pop
dec
mov
ret
pop
lock
fistpll
xchg
jno
xchg
mov
mov
dec
lret
sahf
fimull
les
and
test
int
arpl
lahf
lret
sbb
xchg
imul
adc
or
mov
jg
push
and
sbb
ficompl
inc
mov
and
stc
xchg
roll
add
or
mov
jp
notb
pusha
pop
mov
mov
jb
push
aas
scas
add
or
pop
xlat
mov
and
dec
rclb
subl
ljmp
push
icebp
or
xchg
or
cmp
xor
fiaddl
mov
out
jnp
add
add
fs
and
jl
mov
adc
je
xchg
pop
aam
push
xor
fiaddl
mov
add
