lea
lea
call
rcr
neg
mov
shl
not
rol
jmp
lea
ror
not
call
not
xor
ror
mov
call
not
lea
xor
pop
pop
pop
leave
call
call
xor
not
mov
not
mov
jmp
lea
xchg
rcr
shrl
not
jmp
xor
push
mov
xchg
mov
xchg
not
mov
shr
mov
popl
add
mov
jmp
mov
shr
mov
shl
neg
add
lea
and
cmp
je
jmp
push
mov
sub
push
push
push
lea
xor
xor
shr
push
not
mov
xor
jmp
not
neg
xor
neg
xor
movl
xchg
mov
movl
not
xor
jmp
mov
mov
xor
neg
mov
mov
xor
add
push
adc
rol
call
xor
jmp
neg
not
mov
xchg
mov
mov
ror
xor
not
lea
jmp
rcl
adc
xor
and
neg
lea
lea
jmp
xchg
rcr
lea
not
xor
mov
lea
xor
mov
neg
add
xor
lea
lea
jmp
neg
neg
xor
rol
mov
pop
lea
xchg
xor
cmp
je
lea
xchg
jmp
lea
mov
ret
neg
mov
mov
neg
adc
xor
mov
rol
rol
xor
mov
jmp
add
add
lea
lea
not
neg
jmp
add
xor
xor
mov
and
jmp
xor
lea
mov
lea
xor
rcr
rcr
lea
xor
neg
not
jmp
xchg
not
adc
decl
jne
jmp
lea
adc
ror
neg
lea
shr
jmp
xor
lea
mov
not
and
mov
xor
shr
xor
mov
jmp
xor
xor
neg
lea
mov
mov
mov
mov
lea
mov
lea
mov
jmp
and
mov
mov
lea
push
push
pushl
pushl
shr
jmp
xchg
and
push
mov
rcl
lea
mov
rol
call
push
jmp
inc
sahf
sahf
stos
lods
sahf
out
sahf
pop
ds
roll
adc
adcl
test
dec
lret
xchg
adc
xchg
mov
gs
mov
xor
popf
test
sahf
stos
out
and
push
out
insb
and
fidivrl
xchg
lret
adc
pop
jg
mov
sahf
fwait
adc
xchg
adc
lret
adc
adc
mull
xchg
lahf
sahf
std
xor
nop
pop
mov
jns
jle
fwait
lahf
adc
js
jecxz
xor
fucomip
cltd
sti
in
popf
ret
mov
out
lods
sti
jmp
loop
sti
imull
jno
sti
stos
repnz
sub
push
fstp
adc
adc
mov
adcb
xor
cwtl
lahf
sahf
ss
add
jns
dec
jmp
and
test
cwtl
pop
lods
sahf
lret
ja
popa
fs
fistl
pushf
xchg
bound
fldt
popf
pop
push
cmpl
lahf
xchg
adc
jae
cmp
push
inc
lcall
xchg
adc
sti
adc
xchg
mov
stc
inc
cmpsb
lds
pop
ficoms
pop
mov
mov
adc
fwait
pushf
inc
mov
fisubs
fdivp
lahf
negl
icebp
lahf
scas
aam
push
into
jbe
pusha
cmp
fidivrl
adc
mov
adc
sbb
lret
shll
enter
fcomp
fwait
adc
insb
xor
fcmovnu
ficomps
lahf
insl
cmp
sbb
sbb
inc
dec
imul
movsb
fcomp
fwait
adc
mov
aas
adc
roll
dec
shll
cs
stos
cwtl
push
bound
lahf
dec
fistpl
mov
push
imull
testb
movl
andb
xor
and
lgs
mov
int
cmp
stos
fildl
ds
xorb
sti
repnz
stos
inc
and
pop
cmp
fs
std
or
filds
inc
ret
clc
gs
sub
and
test
dec
jmp
inc
add
jae
test
sub
imul
mov
add
push
mov
inc
cwtl
orl
and
jp
lods
repz
mov
aam
mov
scas
movsl
push
rorl
jb
dec
jmp
fistl
enter
xchg
sti
mov
pop
popa
and
dec
loop
add
and
popa
mov
cmc
pop
int3
cmp
or
aaa
or
and
in
dec
stos
sti
testl
arpl
or
dec
mov
psllw
sbb
pop
ror
in
mov
jb
add
dec
out
mov
lret
sti
and
adc
call
add
out
fidivs
jl
mov
xor
or
add
add
pop
xchg
pop
mov
mov
fsubs
mov
xlat
mov
lgs
cmp
leave
aad
mov
std
sub
and
mov
mov
pushf
iret
sti
xor
lret
clc
and
pop
pop
arpl
mov
cmpsb
call
dec
out
mov
and
shufps
repz
mov
pusha
sbb
movsl
incl
shl
cmp
pop
jp
stos
cwtl
dec
cmpsl
repz
cmp
pusha
data16
fidivs
jl
imul
jbe
repnz
inc
inc
int
and
test
dec
sti
aad
lret
pop
nop
and
dec
inc
getsec
clc
jnp
or
lret
lock
mov
mov
cmc
and
mov
and
in
push
cmc
and
inc
dec
dec
into
addr16
mov
in
mov
sub
push
pop
aad
lock
test
repz
add
divl
test
mov
into
cmovp
add
xchg
in
push
cmc
and
out
fdivl
mov
orl
cmc
and
dec
fstl
cli
mov
leave
sub
dec
fiadds
dec
inc
sub
xor
lgs
sub
dec
fidivs
btl
pop
scas
jae
dec
sbb
add
aam
lgs
lea
and
xor
stos
int3
sbb
test
sbb
insb
jp
cld
sbb
into
lock
jp
dec
mov
dec
dec
fidivs
ds
xchg
outsl
mov
cld
jne
stos
jl,pt
or
sbb
cmpl
ds
xchg
sub
int
std
and
add
pop
and
inc
movsl
stos
lock
push
lcall
shrb
push
jmp
dec
daa
push
in
jno
inc
dec
adc
fiadds
in
dec
fidivs
movsl
mov
mov
call
lgs
roll
ds
addb
fmuls
sub
lds
mov
dec
sub
mov
loopne
out
fdivl
ds
add
add
push
mov
pop
xchg
mov
and
dec
mov
jae
lock
pop
inc
out
fdivl
out
mov
ss
in
stos
fildl
jl,pt
or
sbb
fisubrs
fwait
in
sbb
test
xor
push
xchg
orl
inc
mov
addr16
fs
mov
mov
shrl
lock
sbb
xchg
orl
xor
push
inc
test
in
ret
push
loope
lgs
sti
pop
outsl
mov
mov
into
test
jo
shll
dec
stos
rorb
das
add
imul
mov
mov
fadds
jb
mov
mov
add
lgs
lea
stos
clc
add
sub
movsl
and
pop
aad
mov
fdivrp
pop
dec
icebp
out
in
inc
das
aas
mov
mov
stos
pop
je,pt
ss
cli
or
and
test
or
adc
mov
adc
mov
in
fucomp
sbb
nop
leave
std
repz
faddp
aaa
out
jno
or
mov
cltd
outsl
inc
mov
outsb
adc
test
das
xchg
mov
or
xor
fcoml
das
lds
push
xchg
push
dec
jnp
inc
jmp
dec
loopne,pn
mov
imul
xchg
adcl
add
in
pop
lock
xchg
sub
push
mov
mov
mov
mov
xor
ds
nop
and
xor
fwait
test
daa
cmp
cmc
mov
lods
mov
shrl
jns
lahf
aas
sahf
jl
int
jmp
pop
xor
dec
cli
gs
stos
lret
xlat
popl
addr16
add
aad
iret
pop
jg
add
cwtl
jb
sub
mov
popf
leave
push
mov
fstl
mov
xchg
and
loope
rolw
ljmp
andb
arpl
add
xchg
outsb
outsb
call
add
iret
in
cld
lods
add
xchg
pop
or
aas
adc
fisubrs
dec
into
insb
shll
es
jl
je
cmp
int3
daa
add
testb
push
call
xchg
mov
sub
push
inc
daa
push
movsl
dec
lcall
adc
cmp
gs
xor
cs
mov
shrl
jmp
rcrl
ljmp
imul
sahf
inc
jecxz
cmpsl
fisubrs
test
loope
mov
test
add
sahf
and
push
jmp
push
push
xor
cmc
xor
push
inc
jg
dec
cld
mov
outsl
cmp
sub
mov
in
xor
sbb
adc
scas
leave
fistl
popa
push
mov
add
fisttpll
sub
mov
mov
stos
and
rclb
jp
add
test
xchg
mov
xchg
sub
data16
sub
mov
iret
out
xor
pusha
out
mov
gs
or
and
or
subb
test
fwait
mov
stos
dec
or
lods
nop
dec
je
mov
cmp
scas
or
mov
bound
lret
pop
sahf
push
loope
stc
or
jns
std
add
mov
mov
cmp
xchg
jecxz
mov
mov
jns
sbb
daa
lea
add
addl
out
pop
push
addb
loopne
add
pop
pop
push
roll
add
lcall
sbb
pusha
mov
popa
popf
out
test
imulb
mov
lret
mov
sub
ss
divl
jmp
sahf
movsl
xchg
call
push
aad
dec
lcall
mov
cld
jg
out
mov
movsb
fisubrs
stos
jp
cmp
mov
xchg
mov
pushf
cmp
xchg
jp
in
push
pop
push
xor
pop
mov
adc
mov
lret
or
add
mov
and
leave
pop
jne
inc
add
std
fisttps
or
pop
sub
xchg
xor
mov
sbbb
outsl
mov
mov
push
mov
xor
jne
leave
mov
sahf
fwait
mov
addr16
sbb
icebp
loope
bnd
push
cli
sub
repnz
imul
jmp
stos
lea
clc
lret
inc
dec
lret
ds
add
enter
outsb
fcomip
fidivrs
sub
fstpl
sarb
call
ds
stc
dec
inc
fcompl
mov
stc
sub
in
mov
fcmovnu
cmc
mov
and
sub
sahf
fldt
push
pusha
js
lds
and
fbstp
gs
or
cmp
jmp
fs
mov
popa
repz
enter
andb
les
repnz
shlb
iret
push
rolb
pop
ss
pop
jg
js
add
xor
mov
sbb
inc
sti
or
lret
pminsw
inc
stos
mov
imul
cs
das
push
shlb
es
sub
and
in
jb
adc
xor
sub
xchg
jns
cmp
mov
fsubrl
bsf
lahf
push
movsl
and
pop
xchg
loopne
test
sub
popf
or
adc
stos
mov
rcrb
push
and
fstpl
call
iret
stos
xor
mov
test
pop
test
addb
loop
xor
movsb
popa
inc
mov
xor
cmp
mov
xor
dec
and
mov
mov
xor
or
jl
fildl
or
xlat
sub
sbb
ret
pop
pop
addr16
inc
add
pop
cmp
sub
jl
and
repz
in
jbe
or
stos
xchg
mov
or
adc
pop
movsl
rep
push
addr16
je
mov
jnp
pop
fildl
loop
test
cmp
push
cmpsb
fwait
or
sub
pop
cli
push
sub
orl
loope
jns
mov
stos
popa
out
pop
add
sub
jae
sbb
fnsave
mov
aaa
or
xor
lock
push
aad
inc
gs
dec
out
adc
xor
insl
testb
int
lea
es
movsb
xchg
into
cmp
xchg
out
push
xchg
dec
test
inc
incl
cmp
ds
lret
add
push
cmpsl
push
cmp
sub
clc
mov
pop
and
adc
inc
mov
outsb
sub
push
xchg
movsb
push
jnp
test
pushf
jbe
ds
mov
cmp
mov
roll
es
or
mov
int
fcmovnu
push
ret
das
ljmp
in
mov
mov
mov
cmpsb
setnp
cli
stos
or
mov
sub
idivl
mov
or
and
xor
add
call
into
xor
and
int
add
adc
lret
jg
scas
mov
sub
mov
xor
dec
dec
lret
xor
shrl
jb
inc
dec
xor
fnsave
jnp
es
pusha
lods
imul
mov
pop
pop
adc
xlat
sti
jl
shlb
hlt
lods
xor
mov
outsb
mov
jbe
mov
add
mov
jnp
sarl
cltd
lret
mov
mov
stos
mov
mov
rcr
mov
xchg
push
shrb
mov
imul
test
and
or
stos
test
aad
cmp
stos
aad
add
or
sbb
xchg
std
movsl
adc
cld
lret
jmp
arpl
es
or
sub
pmaddwd
cmp
out
movsb
lods
or
scas
sub
pop
inc
mov
adc
or
xor
jno
xlat
adc
sub
add
cmp
ret
fidivrs
fbstp
adc
ret
out
lret
push
mov
and
pop
mov
fs
movsl
jae
movsl
jle
aaa
add
xchg
add
mov
shlb
lahf
test
fiaddl
rorl
and
mov
lahf
clc
ja
adc
stc
mov
je
cmp
sub
push
stos
daa
push
out
in
or
movsb
fcmovnb
rcrl
xlat
xchg
jmp
jb
fldz
xlat
xchg
mov
rorl
push
xchg
mov
out
mov
test
xor
or
sub
jmp
or
lock
lret
imull
pop
dec
cmc
jo
insl
out
xor
mov
std
fiaddl
dec
enter
push
sub
dec
lods
mov
push
jmp
movsl
fnstenv
popf
inc
sbb
mov
add
gs
adc
subb
jl
js
jmp
jb
jbe
dec
add
xchg
test
cltd
sarb
iret
pop
mov
or
push
xor
mov
sub
repz
lahf
ja
je
jle
jmp
inc
dec
pop
pop
in
pop
push
mov
aad
sub
gs
cmpsl
xor
movsl
out
into
ja
and
sub
pop
pop
xchg
pushf
outsb
mov
cmp
les
cvtps2pi
cmp
push
and
cld
pushf
xor
sbb
scas
dec
xchg
lods
or
icebp
adc
add
mov
in
inc
out
orb
inc
adc
idivb
inc
icebp
sub
or
insl
cmc
lods
and
or
push
dec
mov
mov
sub
inc
jle
lret
mov
cmp
dec
je
lods
mov
sahf
sbb
xchg
imul
jg
pop
fldl
enter
popf
xor
mov
xlat
push
in
add
rol
cmp
jle
ds
outsl
stc
mov
or
mov
mov
les
adcb
aaa
popa
and
shrb
ret
lret
dec
into
repz
or
or
orl
mov
lock
sub
fcomps
adc
mov
aas
dec
popf
ds
hlt
or
insb
ret
add
xor
lock
sti
inc
and
xchg
xchg
cmp
mov
cli
cmp
es
imul
jg
mov
xchg
jg
xchg
mov
push
sbb
ret
mov
ds
push
mov
pop
or
mov
pop
cld
movsl
outsl
dec
shrl
add
imul
es
mov
mov
push
pop
int
pop
das
out
frstor
mov
xchg
dec
fld
mov
mov
addb
cmc
call
sbb
adc
cmpb
mov
inc
inc
hlt
outsl
sub
mov
clc
arpl
cmp
or
rcrl
mov
test
push
in
icebp
sti
adc
cltd
dec
mov
xchg
fldl
or
add
popa
add
arpl
sbb
xchg
rdtsc
pop
clc
and
leave
cmc
xchg
lret
in
add
or
mov
out
pop
les
mov
and
mov
xchg
test
fcomp
loopne
shll
sbb
lods
lods
add
orl
das
and
cmp
idivl
mov
pop
call
jo
push
fcomp
mov
adc
jns
push
aaa
call
scas
es
out
mov
adc
push
adcl
push
test
jnp
dec
sub
xchg
lret
pushf
cmpsl
es
mov
push
rclb
inc
in
in
pop
insb
out
int
xor
imul
or
or
enter
testl
add
mov
lock
push
loope
mov
stos
mov
inc
jecxz
jnp
push
lods
add
and
mov
sub
ror
dec
pop
and
or
pop
ja
pushf
out
jne
int
mov
sub
das
adc
xchg
loopne
add
sbb
insb
fbld
jl
pop
jae
arpl
movsb
fildll
out
cs
and
jge
mov
dec
or
mov
mov
aaa
pop
and
out
imulb
sub
sbb
mov
sub
std
inc
or
lods
sub
mov
hlt
pop
pushl
mov
lds
cmpsb
scas
stos
push
or
repz
sub
sahf
dec
xor
idivb
xchg
dec
std
mov
push
iret
rcll
int3
out
mov
cmp
daa
mov
add
mov
sub
push
dec
test
pop
pop
xchg
cmp
stos
mov
and
mov
in
inc
mov
pop
outsb
ljmp
das
mov
add
lds
add
dec
and
push
adc
fwait
sbb
xchg
jmp
adc
daa
les
movsb
inc
notb
fiadds
ret
add
in
pop
in
xchg
sub
icebp
shrl
je
data16
sub
mov
dec
int
inc
cmp
add
mov
orb
test
repz
pop
pop
ja
or
jbe
ljmp
shl
or
movsb
mov
or
sub
pop
inc
fiaddl
roll
pop
movsl
lods
or
xor
xchg
jno
fiadds
xor
imul
inc
mov
jne
add
inc
dec
shll
mov
movsb
inc
jnp
adcl
in
lahf
push
mov
and
pop
push
push
ret
adc
hlt
mov
mov
push
cmp
lods
adc
divb
mov
shll
sub
mov
dec
dec
push
xchg
mul
pushf
fdivrs
test
add
pop
cmp
inc
iret
fldt
push
repz
in
sub
xchg
sub
das
adc
mov
sub
xchg
aaa
jno
or
add
add
repz
popf
push
pop
mov
test
or
cmp
out
in
out
pop
cs
stos
add
test
xlat
aas
cmp
inc
pop
leave
arpl
leave
xchg
scas
stos
mov
dec
cmp
dec
mov
sub
cli
and
cmp
pop
mov
dec
jo
or
cmc
jp
sbb
jns
mov
mov
pop
xor
std
mov
add
cmp
insb
out
es
ja
outsl
dec
ret
fdivrl
or
push
fsubs
add
and
into
test
mov
aas
inc
test
mov
mov
test
or
imul
mov
pusha
frstor
cmp
fbstp
enter
and
mov
mov
ret
iret
push
xor
mov
popl
mov
dec
or
pop
stos
jne
negb
addb
das
push
sbb
and
in
lret
loop
pop
mov
imul
pop
push
dec
sub
orb
xor
push
mov
out
mov
xor
loop
add
xor
sbb
push
jnp
aam
or
fbstp
and
das
pop
ficomps
movsb
and
fldenv
pop
divl
pop
push
xor
sti
adc
and
jo
fwait
loop
in
sub
inc
cmpsl
mov
aas
pusha
pop
inc
inc
cmp
and
out
aaa
popf
shrl
push
mov
shl
adcl
inc
xorb
push
mov
xchg
mov
add
int
shlb
adc
pushf
movsl
or
xchg
or
mov
sub
call
mov
push
xchg
clc
or
fsubl
stos
aam
mov
lock
popf
lods
rolb
cmp
mov
out
push
lea
into
lods
mov
loop
es
loopne
stos
cs
nop
cmpsb
rol
imul
movsl
movsb
mov
mov
mov
into
mov
sub
add
push
popf
mov
jecxz
mov
or
mov
push
mov
jg
sbbb
jmp
mov
notl
mov
lcall
pop
mov
adcb
and
fxtract
stc
add
sbb
pop
dec
mov
cmp
sub
dec
mov
cmp
mov
pop
add
push
in
push
aaa
push
ret
mov
cmpsl
dec
adc
test
or
jne
cmpsl
dec
jns
subb
or
lret
imul
fstl
aas
in
fcompl
jge
sbb
sub
adc
movb
cs
xor
pop
rcl
addr16
dec
icebp
cmpsl
ds
mov
xor
mov
data16
test
lods
add
test
xchg
idivb
sub
dec
lcall
js
dec
pop
into
in
sbb
das
jmp
dec
mov
sti
jns
sbb
mov
or
mov
jmp
stos
cmpsb
cmpsb
fiaddl
add
fistps
inc
out
adc
aas
cmp
rcrl
rolb
sbb
shrl
or
pop
andl
inc
pop
and
lock
mov
ljmp
repnz
rcrb
inc
mov
bound
mov
imul
fstpt
lods
addr16
and
lea
cwtl
adc
cmp
inc
int3
js
aas
in
imull
dec
mov
xchg
jne
add
mov
enter
push
xor
xchg
xchg
cmp
icebp
cltd
xor
fcomip
jecxz
add
cmp
inc
pop
shll
imul
or
and
cs
adc
mov
pushf
fldcw
pop
rolb
cmp
xchg
arpl
adc
mov
mul
push
cwtl
mov
int3
fld
sub
mov
leave
gs
pop
mov
stos
xchg
or
jns
movsl
mov
cmp
ret
add
mov
or
dec
push
aaa
call
dec
pop
inc
cld
mov
stos
loop
xchg
enter
je
or
mov
cmpsl
xchg
push
xor
cltd
mov
push
cmp
inc
mov
or
sub
push
sti
sub
cmp
data16
test
ss
imul
mov
iret
add
sub
lock
dec
sub
mov
int3
xchg
scas
out
std
mov
fnstenv
out
mov
pop
pop
xchg
into
sbb
fisttpl
cld
sahf
test
mov
aaa
jno
repnz
pop
dec
pop
xchg
popf
mov
push
into
and
outsl
or
xor
and
je
mov
fld1
mov
jecxz
ljmp
stos
in
mov
mov
int
mov
test
in
adc
stos
mov
mov
popf
imul
mov
cmpsl
in
mov
push
sub
mov
xlat
out
iret
popa
ret
call
jno
ljmp
sbb
lock
lods
add
jns
xchg
dec
mov
mov
adc
out
sub
aas
xchg
out
sbb
dec
xchg
outsl
xor
xor
mov
addb
push
mov
and
inc
test
popa
shrl
xor
dec
out
jns
pop
xor
scas
mov
std
xor
mov
push
andl
std
movntps
scas
or
mov
jne
push
pop
andl
cli
push
mov
ja
mov
push
jno
pop
adc
or
repnz
pop
mov
es
decb
aam
mov
pop
add
pop
movsb
mov
xchg
add
inc
jl
and
out
or
cmp
mov
ds
cmove
or
cmpsl
nop
jp
pop
mov
xor
das
push
pop
jnp
add
ja
ljmp
testb
jg
inc
xchg
xchg
ficomps
or
or
mov
ss
xlat
mov
jg
scas
push
mov
jo
sbb
xor
in
jns
in
leave
clc
xchg
adc
pop
mov
xorb
lods
push
dec
syscall
ds
inc
mov
addl
push
pop
mov
pushf
icebp
popf
dec
pusha
xor
int3
xchg
and
xor
addl
dec
and
sub
rolb
jns
jp
sub
leave
addb
mov
push
movsl
fnstenv
sbb
in
daa
mov
dec
xor
popa
cld
inc
bound
cld
adc
sbb
sbb
inc
test
xchg
sbb
sbb
aaa
pop
int
arpl
mov
jmp
xchg
xor
cmpl
cmp
mov
pop
imul
pop
repz
div
adc
xchg
decl
xor
adc
mov
xor
sub
mov
jmp
into
adc
mov
sub
addl
xor
sub
daa
fmulp
xchg
subl
jo
movsl
bound
jne
sub
pop
pop
or
lahf
or
xchg
cmp
and
ds
insl
aas
mov
cmp
cmp
cmpl
enter
fisubrs
push
inc
xor
out
dec
mov
mov
hlt
and
jne
xchg
xchg
stc
lret
loopne
int
scas
mov
and
pop
mov
push
scas
pop
and
scas
jecxz
inc
orl
pop
in
sbb
or
test
mov
xchg
and
cmp
inc
push
movsl
xchg
mov
aaa
or
testb
sti
inc
orb
call
sbb
ficompl
push
mov
and
mov
lock
ds
add
cwtl
movsb
mov
popa
xor
roll
xor
mov
scas
pop
ss
sbb
xor
fs
test
out
leave
leave
mov
lock
call
sub
jne
lret
mov
dec
cmp
gs
lcall
pushf
scas
or
and
mov
negl
xor
jno
push
sub
out
and
mov
gs
lcall
rcrb
in
and
mov
popl
adc
data16
loope
std
insb
push
mov
mov
sbbb
push
mov
lock
ds
mov
cmp
out
repnz
loope
sub
and
imulb
jbe
xchg
sahf
mov
jge
push
fstpt
mov
in
jp
js
fidivl
jmp
int3
dec
fnsave
cwtl
sarl
mov
loope
and
mov
insb
xchg
lods
add
ret
dec
test
cltd
mov
fistps
mov
jno
rorb
add
stc
in
fnsave
xor
leave
arpl
rcll
adc
scas
enter
sahf
mov
sub
xchg
ljmp
xor
cmpsl
sti
xorl
lea
test
pop
inc
das
jle
xor
testl
dec
icebp
push
sbbb
out
rorl
push
pop
lock
pusha
mov
loop
fildl
dec
rcrb
fdivl
loope
mov
je
outsb
dec
cli
pop
movsl
dec
sti
push
cli
insl
xchg
insb
or
xor
scas
enter
call
pop
push
test
add
hlt
shrb
pop
out
bts
jmp
mov
cmp
and
pop
inc
adc
jg
imul
xor
icebp
sub
fisttpll
mov
cltd
mov
sub
dec
mov
inc
or
and
jne,pt
dec
out
push
out
cmp
sbb
out
scas
and
in
out
jnp
add
and
mov
inc
cmp
jmp
mov
sahf
fildll
xor
xchg
adc
push
mov
push
jne
jecxz
out
cmp
push
fld
pop
out
fstl
stos
sbb
rcll
mov
leave
mov
icebp
or
lea
and
iret
mov
mov
xor
jno
ljmp
call
je
jo
repz
orl
fdivl
stos
jmp
xor
and
dec
xchg
push
loope
and
jb
fidivs
pop
icebp
mov
cwtl
add
fld
adc
sbb
outsb
in
sub
push
popa
clc
sbb
fnstsw
adc
dec
cmpsb
lea
cwtl
jne
xchg
lds
clc
int
jae
adc
cld
push
add
pop
mov
arpl
inc
pop
jne
in
mov
out
or
dec
cltd
dec
mov
and
mov
xorb
adc
fisttps
mov
stc
and
ds
es
cli
dec
dec
aaa
arpl
lds
gs
jp
mov
push
cld
and
jp
cld
jb
scas
mov
or
ja
xchg
mov
shl
data16
xchg
das
xchg
aaa
jecxz
push
imulb
jle
int
fistps
repnz
push
jp
test
adc
fsubrl
dec
dec
mov
mov
cmp
sub
sahf
xor
inc
and
outsb
jl
push
sti
mov
xchg
cmovb
inc
test
add
and
ret
mov
sahf
lock
inc
mov
test
mov
cmc
xor
push
in
movsb
jle
mov
lahf
jg
nop
adc
dec
xor
sbb
cltd
imul
daa
dec
mov
and
pop
in
sub
pop
sub
outsb
inc
lods
add
pushf
out
push
popf
cmc
xchg
test
and
xor
sti
fstpt
ret
push
jne
and
test
addr16
shr
rcrb
push
xchg
xlat
sbb
pushf
pop
out
scas
in
sarb
aam
stos
sahf
mov
ret
or
into
ljmp
int
xor
push
sbb
stos
fimuls
loope
lcall
cmpb
mov
fistpll
xchg
fnsave
mov
je
mov
sti
jo
or
cmpsb
pop
xchg
push
cmpsl
and
orb
fmulp
pushf
imul
cmp
ja
xor
int
pop
inc
sbb
sbb
movsb
sahf
aas
mov
mov
data16
pop
int
pop
mov
cmp
imul
jbe
mov
xchg
dec
scas
mov
lret
push
push
lods
outsl
dec
pop
popf
leave
mov
push
test
dec
mov
loope
adc
push
inc
out
mov
sub
mov
adc
bound
dec
xchg
xor
lahf
adc
gs
lock
inc
pop
pop
sub
cli
jb
inc
les
pop
pushf
gs
sub
fisubrs
add
sub
dec
add
xor
push
loope
fstps
jb
xchg
add
int3
je
dec
pop
or
insl
sub
cmp
mov
mov
sub
sahf
add
pop
xchg
fistpl
imul
xchg
imulb
pop
aad
pushf
es
cmc
inc
dec
cmp
or
xchg
cli
dec
fdivrs
imul
lea
or
add
ret
and
andb
xchg
fdivrl
mov
cli
push
sbb
xor
and
xchg
jbe
std
aad
add
mov
push
mov
adc
mov
mov
or
or
cs
and
sbb
sub
jnp,pt
push
movsb
ja
aam
ret
jg
inc
aas
adc
scas
ds
adc
push
dec
in
push
sti
insl
add
push
jmp
add
add
lea
jmp
lcall
lea
cmc
stos
cli
jle
add
and
icebp
pop
scas
pop
mov
rcr
js
dec
push
mov
mov
cmp
adc
stos
cmc
insl
test
xlat
add
pusha
mov
sub
lahf
add
jb
cs
jo
sbb
addr16
popf
pushf
stos
cmpsl
and
lock
lods
cld
sub
pop
fidivl
pop
into
lret
ret
xchg
scas
mov
insb
mov
jge
dec
cmp
and
push
fdivs
dec
sbb
xchg
pushf
jnp
dec
xor
imul
mov
mov
data16
cli
lock
icebp
decl
sbb
xlat
lret
pop
and
inc
cmp
pop
mov
test
adc
sbb
insl
out
mov
in
cmp
mov
push
xchg
mov
scas
adc
cmp
sub
loopne
daa
lret
mov
movsb
push
xchg
test
or
mov
test
scas
sti
xor
sbb
xor
sbb
scas
out
aaa
mov
loop
not
pop
add
jnp
and
leave
xchg
push
out
fmull
dec
ss
inc
ror
push
ljmp
mov
outsl
orb
addr16
lods
fiadds
cmp
ret
xor
xchg
inc
cltd
dec
pop
ja
dec
push
aas
loopne
sbb
inc
fdivl
push
xchg
daa
adc
mov
test
fistps
xchg
rclb
aas
dec
mov
push
adc
or
mov
push
push
push
popa
ret
jle
mov
jno
test
push
aaa
sti
adc
stos
out
call
ds
mov
sub
cs
sub
mov
and
test
nop
adc
filds
pop
add
jns
dec
cmp
jnp
iret
into
or
ret
xor
xor
cmp
or
push
subl
xchg
cmpsl
mov
sub
inc
sub
push
lcall
pop
add
cmpsb
punpcklbw
add
loopne
xor
movsb
decb
enter
mov
ffree
and
adc
leave
daa
mov
ret
and
adc
mov
push
mov
out
and
mov
fs
ds
push
lea
xor
push
pop
cmp
ret
xchg
or
push
mov
lea
lret
jne
xlat
movsb
shl
ret
ja
mov
mov
sub
or
addr16
aad
xchg
enter
out
fld
add
xor
mov
arpl
adc
add
out
testl
add
subl
and
pusha
icebp
adc
les
sahf
inc
jns
pop
std
xor
jmp
mov
sbb
pop
movsl
sbb
in
cmpsl
lods
gs
ja
and
stc
cmovle
cmp
imul
outsb
icebp
mov
shll
jnp
enter
sub
loope
xlat
cmp
jb
push
sub
mov
push
das
jno
je
dec
out
pop
mov
shll
sub
js
push
pusha
and
sub
xchg
leave
and
dec
lods
icebp
fbstp
adc
inc
xorl
dec
or
sti
repz
adc
mov
ss
push
ss
or
jl
roll
mov
or
xchg
pop
fcomps
cmc
push
outsl
enter
xor
out
les
pop
sub
fidivrl
cli
xchg
fmull
mov
addl
repz
push
ficompl
pop
cmp
adc
mov
mov
daa
jae
cs
test
jae
test
popa
test
test
dec
mov
pop
fsubrp
or
out
ffreep
imul
mov
xchg
inc
test
push
mov
mov
xchg
push
or
ret
je
xor
test
mov
clc
outsb
cmpsl
testb
mov
push
je
shl
fsubl
inc
aad
mov
dec
push
leave
lret
clc
sub
jb
sbbb
subl
ror
ds
sbb
inc
test
loope
inc
js
popf
sub
push
das
inc
in
fwait
stc
push
pushf
pop
push
and
int3
push
aad
mov
test
lcall
jo,pt
in
repnz
ror
xor
cmpsb
adc
or
ds
sub
and
pop
stos
ret
ret
push
xchg
pop
scas
jno
outsb
push
inc
pushf
sub
mov
inc
out
push
mov
fwait
cmp
add
inc
test
mov
sub
jb
pop
popf
inc
dec
mov
sbb
rolb
xlat
sbb
sub
leavew
arpl
adcb
movsb
dec
mov
dec
push
cld
or
push
pop
outsb
xor
or
out
dec
sub
cmp
cld
cmp
fwait
rcrl
add
sbbb
inc
lea
xchg
leave
or
in
sbb
fwait
adc
pop
notl
fdivp
mul
ficoms
mov
movzwl
sbb
jns,pt
and
leave
cmp
es
adc
lods
mov
push
scas
jns
dec
lods
pop
fstpt
xchg
sbb
popa
jne
and
ds
ds
mov
xchg
mov
add
repz
jno
add
inc
xor
shl
lods
mov
or
out
xor
cmc
dec
push
cmpsl
sub
mov
mov
mov
jp
stc
popw
sub
rcll
js
fmul
mov
sbb
fisttpll
inc
lret
adc
aas
xor
cmp
mov
cmpsl
out
sbb
cmp
mov
inc
sarl
jmp
jp
or
pushf
movl
out
xchg
fldcw
out
push
mov
pop
push
lcall
push
xchg
dec
leave
daa
and
pop
pop
or
inc
mov
sub
setg
mov
cmpsl
aad
xchg
fwait
lret
cmp
iret
inc
out
add
jo
mov
outsl
dec
daa
xor
jp
mov
push
leave
mov
fisubrl
xchg
fwait
or
and
imul
outsl
arpl
imul
and
popa
sbb
sub
jnp
cmp
mov
adc
stos
dec
push
loop
mov
and
js
and
inc
pop
fs
sbb
dec
jmp
mov
mov
adc
int3
movsb
xchg
xor
push
sahf
shlb
ss
mov
divb
cmp
inc
pop
pop
push
jns
imul
lahf
add
fists
dec
in
xor
or
nop
push
and
mov
cmpsl
push
jae
jge
mov
xchg
in
adc
aaa
mov
cmp
cmpsb
jg
sub
call
scas
stos
test
pop
cmp
rcll
mov
das
lahf
add
pop
aas
jle
inc
add
jbe
dec
insb
jbe
dec
cli
insb
push
jne
ds
imul
mov
fs
sbb
daa
subb
xor
pop
adc
into
pusha
stos
fisubl
mov
jge
mov
lret
or
pop
jl
in
sbb
adc
aaa
jle
test
push
cmp
mov
ficomps
pop
pop
add
fsubrs
push
shrl
nop
test
sbb
ret
push
aam
adc
stos
addr16
fildll
addl
test
ds
pop
or
aaa
lods
add
mov
stc
daa
cmpb
mov
inc
pop
nop
inc
repz
hlt
dec
dec
aaa
pop
or
dec
mov
jp
gs
mov
movsb
sti
mov
inc
lret
out
bound
dec
cwtl
into
pop
test
addr16
mov
cld
jmp
iret
aas
pusha
popl
mov
outsb
jbe
in
mov
je
push
lret
pushl
in
inc
out
nop
dec
ret
and
mov
adc
add
testb
xor
adc
popf
mov
xor
es
stos
imul
out
icebp
and
adc
scas
xchg
dec
arpl
subb
jg
xorl
cmp
dec
sub
sub
inc
mov
pop
sbb
das
test
lret
mov
pop
mov
gs
popa
popf
aaa
xchg
daa
sub
sbb
or
mov
adc
adc
ret
popa
ficomps
aas
jae
clc
jge
lret
inc
lahf
jb
mov
pop
sub
and
pushf
rol
cmpsl
jb
stos
sub
enter
ss
mov
jne
mov
lcall
add
mov
popf
mov
pop
dec
push
test
xchg
add
insl
mov
mov
hlt
loope
cmpsb
data16
mov
sub
lret
shl
jg
mov
out
in
stc
popa
aaa
sub
daa
aam
cmpsb
mov
mov
in
pop
aaa
jl
into
clc
in
lahf
imul
sub
imul
loop
fildll
out
dec
add
ret
imul
sub
fcmovnbe
pushf
lods
out
icebp
add
and
into
and
in
adc
fcomps
or
ja
mov
stos
xchg
jb
sbb
push
jg
stos
int
aaa
aas
bnd
pushf
push
incl
push
popf
movsb
sub
test
or
jne
lret
lcall
add
lods
sbb
orl
pop
or
mov
or
sbb
lcall
stos
mov
sub
lcall
shl
outsl
ja
fs
dec
aas
mov
mov
and
dec
mov
or
fwait
mov
sub
pop
popa
out
push
mov
push
gs
dec
xchg
das
sbb
adc
and
add
mulb
xor
jle
mov
push
adc
sub
into
mov
dec
xchg
mov
lods
pop
imul
clc
mov
sti
movsb
mov
xorb
sbb
lcall
dec
jp
add
and
or
andl
xchg
pop
and
mov
pop
shlb
xor
addb
lret
sub
popl
insl
cmpsb
lcall
fcomps
lret
cmpsl
fcoms
inc
mov
inc
shll
stos
and
push
dec
jb
or
in
sbb
mov
pop
outsb
push
cltd
xchg
xchg
ss
lret
repz
jl
or
movsb
jno
lret
jb
xchg
ds
xchg
out
imul
pop
cmpsl
add
and
sbb
daa
scas
test
stos
enter
dec
add
jno
shl
test
xor
add
inc
push
push
add
aas
push
xlat
push
fcoms
or
pop
mov
jp
test
out
or
jle
test
xchg
lods
fstl
cmp
mov
int
insb
fwait
lcall
add
out
fucomi
ficoml
gs
push
sub
mov
mov
push
mul
mov
add
pop
bound
es
inc
lret
sbb
out
mov
out
repnz
das
xor
outsl
loop
jo
enter
cmp
out
mov
rcr
pop
jbe
adc
inc
dec
cmpsb
popa
or
pop
fwait
in
xchg
mov
inc
cli
sbb
jnp
xor
out
cmp
dec
negl
push
mov
inc
scas
inc
rol
les
mov
xchg
loope
push
ficoml
in
xchg
mov
adc
xor
push
test
add
imulb
mov
out
sub
testl
jnp
jl
xchg
stos
testb
in
xor
sbbb
pop
ret
fcom
inc
in
sbb
mov
std
mov
je
sub
and
or
xchg
clc
loope
cmp
cmp
lret
test
lock
push
xor
aam
add
nop
inc
sarl
cmpsl
cmpsb
push
xchg
lods
testb
adc
add
pushf
int
mov
jb
pop
lret
nop
xchg
xor
aas
xor
in
and
cmc
jmp
jne
mov
dec
inc
shld
jae
add
repz
cmp
jg
outsb
sub
lods
xchg
loop
and
mov
js
fisubrs
fwait
pop
dec
cmp
sbb
fwait
insb
pop
loopne
outsb
pop
add
adc
mov
xchg
mov
fwait
push
dec
and
dec
pusha
call
clc
cmp
mov
sbb
lds
mov
push
dec
pop
jae
in
rcrl
je
push
mov
inc
das
test
push
out
and
and
data16
cmc
std
xchg
dec
in
sub
xchg
xchg
mov
add
cli
scas
pop
cmpl
insl
or
mov
and
jo
out
adc
movsl
int3
shrb
in
pushf
imul
popa
leave
inc
inc
cmc
adc
cmc
aam
mov
add
loopne
add
in
test
mov
in
dec
push
arpl
xlat
pop
jnp
dec
loopne
in
out
xor
sbb
add
lahf
xchg
and
sbb
popf
nop
jae
pusha
mov
imul
leave
xor
js
fisttpl
sub
jns
xor
xchg
repnz
add
cmp
inc
and
mov
dec
xchg
mov
or
cmpxchg
dec
xchg
fcompl
.byte
