mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
inc
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
xchg
repnz
add
inc
and
add
add
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
lea
push
push
push
call
add
movb
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
sub
add
push
push
push
call
add
movb
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
movl
mov
and
cmp
jne
mov
mov
dec
je
dec
je
sub
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
mov
movl
mov
movl
call
mov
lea
push
push
push
push
call
mov
lea
push
push
call
lea
lea
push
push
call
mov
mov
sub
lea
push
push
call
mov
add
lea
push
mov
sub
push
cltd
sub
mov
sar
add
mov
push
push
push
mov
add
push
push
call
mov
push
call
mov
mov
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
je
mov
push
push
push
push
mov
call
shr
and
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
movl
call
mov
lea
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
mov
shr
and
push
dec
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
xor
call
mov
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
mov
call
test
je
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
mov
neg
sbb
mov
and
push
add
add
mov
sub
mov
mov
mov
mov
sub
sub
cltd
sub
lea
sar
add
mov
mov
push
mov
push
push
mov
push
call
mov
inc
call
mov
push
push
push
push
call
cmp
jl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
movl
movl
mov
test
jne
lea
movl
call
jmp
push
mov
mov
mov
and
dec
mov
je
sub
je
sub
jne
test
je
mov
mov
and
cmp
jne
cmpl
jne
and
mov
movl
testb
je
movl
mov
mov
mov
mov
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
movl
testb
je
test
je
push
mov
call
mov
or
mov
jmp
movl
mov
test
je
test
je
mov
mov
mov
mov
mov
push
test
je
mov
cmp
je
cmp
jne
mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
repz
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
imul
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
clc
stc
inc
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
xor
inc
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
imul
push
or
dec
adc
inc
or
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
push
call
mov
add
add
add
sti
xchg
mov
add
add
add
pop
add
add
mov
jle
movb
roll
fnstsw
into
add
roll
outsl
add
add
add
add
xchg
jnp
imul
add
add
in
add
push
push
lea
push
push
lea
push
push
push
call
add
add
lods
xchg
mov
add
pusha
mov
push
stos
addb
add
push
add
add
lret
jbe
lret
add
add
add
repnz
add
out
outsl
cltd
add
orb
imul
js
add
add
call
push
push
push
lea
push
push
call
hlt
pop
scas
mov
stos
pop
lcall
mov
ror
mov
add
add
add
add
mov
add
add
add
sub
pop
push
push
lea
push
push
push
call
mov
sti
data16
add
jmp
add
rcl
mov
addl
add
add
add
pop
movsl
xchg
popa
add
add
mov
xchg
popa
jl
cmc
icebp
push
add
lock
push
push
lea
push
push
push
push
push
push
call
jno
xchg
jo
mov
js
stos
add
add
nop
mov
movsb
in
int
sbbb
add
movsl
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
in
pop
lret
mov
add
movsb
jmp
pop
mov
into
mov
push
add
add
jbe
loop
pop
add
jns
add
ljmp
aad
mov
add
mov
movsl
movl
shl
add
add
push
lea
push
lea
push
push
call
add
lds
out
add
lahf
lret
mov
scas
push
pop
adc
mov
push
add
out
add
add
pop
add
add
pushf
jb
mov
cmpsb
jle
add
mov
lcall
hlt
sub
add
cmp
add
push
push
push
lea
push
lea
push
lea
push
push
call
sbbl
int3
push
mov
mov
test
cmpsb
mov
sti
cwtl
add
scas
xlat
add
pushf
add
cli
out
add
repnz
mov
hlt
sarb
nop
add
loop
iret
mov
add
add
lret
pop
lret
in
push
call
push
push
push
push
push
push
call
popf
add
add
add
jae
add
add
les
out
ljmp
add
add
add
addl
add
call
mov
add
mov
loop
push
fs
add
pusha
int
pop
mov
jle
movsl
stos
nop
in
push
add
call
add
push
push
call
in
mov
jo
add
lock
add
icebp
jge
add
xchg
lahf
cld
add
movl
filds
pop
push
stos
mov
xchg
out
push
mov
push
sub
pop
ret
push
lea
push
push
push
push
push
push
push
push
push
call
add
addb
fsubrs
rorl
mov
add
sti
xchg
jns
add
icebp
add
pop
mov
in
fcomps
inc
hlt
push
push
lea
push
push
push
push
push
push
push
call
add
fisubrl
add
in
lds
mov
push
add
add
lcall
push
mov
roll
mov
cwtl
mov
sub
pop
mov
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
out
mov
add
push
add
mov
add
into
xlat
mov
je
scas
add
add
popf
add
add
pusha
add
add
lock
add
mov
fs
rcrb
pop
outsl
add
in
fdivr
lcall
pop
in
push
lea
push
push
lea
push
push
push
lea
push
call
add
arpl
lods
add
add
add
add
mov
add
sahf
rolb
add
mov
add
add
in
add
add
add
jge
jns
sub
pop
add
push
lea
push
push
lea
push
push
push
lea
push
call
add
call
rclb
add
add
add
jl
mov
in
ljmp
popa
add
pusha
lret
add
movsb
std
add
mov
rolb
add
ret
ret
add
xor
adc
mov
lods
push
sub
dec
push
xor
add
add
add
sub
add
pop
dec
dec
pop
push
push
push
call
add
add
xchg
ljmp
mov
add
add
xchg
add
jbe
jecxz
push
mov
add
xchg
cmc
lea
push
add
mov
movsl
int3
add
pop
pop
add
xchg
add
mov
add
add
add
sahf
add
jns
pop
add
push
movsb
add
lcall
jne
push
push
push
lea
push
push
push
call
add
aad
add
lcall
pop
out
add
loopne
les
add
add
add
add
mov
add
add
add
mov
jns
push
pushf
out
leave
add
mov
sti
add
loop
out
xlat
add
pop
cmpl
stc
add
gs
add
dec
arpl
add
sbb
pop
xchg
push
call
add
mov
outsl
cmc
add
jmp
add
add
loop
add
add
add
jb
add
add
test
add
jae
add
out
cld
push
roll
pop
mov
movl
push
lea
push
push
lea
push
lea
push
call
push
mov
add
add
mov
add
add
lret
add
add
xorb
add
hlt
mov
xchg
add
lret
into
in
test
sti
pop
add
mov
cmpsb
add
mov
leave
pusha
add
add
add
loope
lahf
ror
stos
stos
sub
pop
lea
push
push
push
push
push
push
lea
push
push
push
call
add
cwtl
mov
popa
fcom
loop
xchg
test
stos
shl
int
mov
mov
add
shl
mov
clc
add
nop
add
add
andl
sti
jae
add
add
mov
cmpsb
lds
in
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
call
movsl
pop
jmp
add
mov
aam
ret
lds
add
add
add
xchg
add
mov
mov
scas
add
jne
push
push
push
push
push
push
push
push
call
add
jge
add
int3
add
add
ret
add
nop
mov
lods
shlb
fwait
addl
add
mov
add
test
pop
push
hlt
pop
jmp
add
int3
into
popa
sub
pop
call
push
push
call
add
loop
jmp
add
xchg
add
js
add
stc
mov
jb
add
cwtl
xchg
movsb
imul
add
in
clc
lcall
jne
pushl
push
push
push
push
push
push
push
push
push
call
pop
add
add
movsb
incb
add
add
neg
scas
lods
add
add
add
jl
insb
add
in
lret
into
test
test
flds
std
rcr
add
add
sub
in
out
mov
push
dec
sub
push
xor
add
ror
sub
sub
shr
pop
sub
xor
pop
push
push
push
push
lea
push
lea
push
lea
push
call
add
scas
add
std
xchg
add
pop
add
andl
add
add
std
js
xchg
fwait
mov
mov
add
add
clc
aam
add
mov
add
jne
call
push
push
call
add
add
pop
lods
test
addl
add
add
add
faddl
orl
jp
in
clc
lcall
inc
push
push
not
sub
xor
not
push
or
inc
add
lea
sub
rol
ror
rol
pop
sub
not
xor
pop
push
push
lea
push
push
push
push
call
add
test
xchg
xlat
add
add
add
lock
shlb
clc
iret
lods
add
mov
popf
mov
bound
in
add
mov
sti
pop
add
mov
lret
xchg
add
jbe
in
add
lea
add
jne
fdivs
cli
add
gs
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
add
data16
add
lock
cli
lret
add
mov
mov
add
add
push
out
mov
mov
add
mov
in
lret
add
ljmp
add
add
lahf
in
lods
add
add
sub
pop
push
call
push
push
call
loope
add
rorb
mov
add
popa
mov
imul
mov
add
add
add
cmpsl
add
add
mov
add
mov
fs
xchg
sti
add
icebp
add
mov
add
fldl
add
add
clc
push
push
push
push
push
push
lea
push
push
push
call
into
notl
test
jne
lcall
jnp
add
fs
cmpsl
jge
repnz
add
cmpb
add
add
mov
add
push
in
fcompl
push
push
push
lea
push
push
call
sbbl
aam
mov
mov
cmpsb
add
in
adc
add
rcrb
leave
sahf
cwtl
mov
add
pushf
add
add
sar
add
mov
pop
hlt
push
push
push
push
push
lea
push
call
add
add
add
rol
rcr
add
add
mov
cmpsl
in
push
imul
cld
sub
loope
mov
sti
clc
add
add
jb
add
add
add
add
iret
imul
add
jecxz
hlt
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
xchg
in
add
add
popf
push
add
fisubl
mov
mov
add
lret
push
mov
add
xchg
shr
add
sub
pop
add
push
push
call
add
xchg
jle
add
add
mov
add
shr
cmpsb
std
shl
add
mov
call
leave
add
fldl
lcall
ret
ret
add
cmp
push
push
push
push
push
call
cmpsl
lea
loope
mov
lock
aam
imul
pop
jmp
fmul
rcl
mov
mov
add
add
data16
insb
add
add
add
addb
mov
push
push
shrb
add
jnp
add
mov
jo
pop
xchg
sub
pop
xor
push
push
lea
push
push
push
lea
push
call
adcl
add
loop
jno
in
add
in
out
jp
cld
mov
xchg
add
push
scas
cld
gs
loopne
aam
out
test
in
call
add
push
push
push
push
lea
push
lea
push
push
call
add
add
xchg
xchg
add
add
jp
add
add
add
aad
mov
add
fisttpl
add
addb
addl
mov
int3
add
sub
push
les
cwtl
cwtl
mov
in
in
lcall
jne
push
push
push
push
push
push
call
stos
cli
adc
jb
add
add
mov
add
add
cld
sbb
mov
push
add
jmp
add
add
xchg
lods
pop
hlt
pop
add
lods
add
add
add
mov
pop
push
push
push
call
addb
mov
leave
add
mov
shr
xchg
data16
loope
lahf
add
mov
movsl
int
scas
je
les
add
xchg
sti
popa
mov
add
pop
add
in
jo
fidivl
add
jecxz
add
add
roll
sub
pop
mov
push
push
push
push
push
call
scas
xchg
data16
add
add
out
pop
add
add
add
add
push
xchg
fwait
jnp
add
mov
add
add
pop
push
add
lods
fwait
imul
fs
pop
mov
add
movsb
hlt
ret
imul
sub
pop
xor
push
push
push
lea
push
push
push
call
mov
repnz
add
js
int
cli
mov
in
pop
imul
in
push
add
nop
movb
fimull
bound
add
pop
mov
sahf
add
pop
add
add
mov
popa
test
ljmp
sahf
add
out
aad
add
add
add
les
lea
push
lea
push
call
add
lcall
add
add
mov
add
ja
pop
imul
test
cmc
push
in
add
add
icebp
test
mov
add
data16
mov
movl
pop
add
push
push
lea
push
push
push
call
gs
repnz
lret
cld
icebp
add
xchg
xchg
mov
ljmp
cld
jne
push
testb
leave
scas
jmp
mov
add
mov
jae
add
lcall
in
in
lcall
mov
xor
push
lea
push
push
call
xchg
add
std
add
xchg
arpl
add
in
pop
add
out
add
ja
incb
add
test
cmpsl
xchg
data16
test
push
out
rolb
lcall
mov
xor
push
push
call
push
xchg
jp
data16
add
pop
cmc
add
in
add
add
add
faddl
add
push
add
roll
add
add
jnp
cli
rolb
roll
je
push
sub
pop
sub
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
cmpsl
stos
rolb
add
mov
outsl
add
xchg
add
int3
add
repnz
add
add
push
fmul
add
pop
roll
in
in
pop
push
lea
push
push
lea
push
lea
push
push
call
call
jno
mov
jne
pop
add
lcall
loop
add
mov
add
loop
add
add
test
pop
add
leave
mov
mov
clc
add
bound
add
in
call
push
push
lea
push
call
in
out
leave
add
mov
or
clc
mov
shl
test
add
in
out
pop
jecxz
jl
jb
add
sti
mov
add
jl
jle
add
mov
mov
repnz
fwait
mov
filds
imul
jmp
push
lock
out
addb
hlt
push
lea
push
call
mov
push
add
add
xlat
arpl
ja
xchg
jbe
addb
add
mov
pop
add
in
add
push
add
mov
add
push
push
push
call
jge
add
cwtl
int
jmp
mov
in
cld
je
mov
imul
incb
call
add
gs
xchg
rolb
push
mov
jo
rolb
jae
outsl
ljmp
lcall
ret
add
add
push
push
push
push
push
lea
push
push
call
add
mov
mov
add
add
cmpsb
push
add
add
arpl
in
add
pop
test
jp
pop
stos
add
test
add
lcall
ret
ret
add
mov
and
jnp
push
push
push
call
add
add
mov
add
add
incb
add
add
sahf
filds
insb
mov
int
testl
jecxz
add
sub
pop
mov
xor
push
push
push
push
push
push
call
addr16
lods
mov
out
loope
test
add
iret
add
lds
add
jmp
add
mov
add
insb
leave
test
push
lcall
push
and
xor
adc
out
mov
in
loop
pop
ds
pop
call
sahf
faddl
push
mov
add
test
out
add
xchg
rolb
fiaddl
mov
add
lods
add
pop
add
add
add
loopne
push
add
mov
add
add
cwtl
add
add
sarb
push
add
hlt
int3
add
arpl
push
pushf
add
push
sub
pop
xor
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
add
add
sahf
les
repnz
add
mov
mov
sbbb
lea
fcoml
movb
add
fdivrl
stos
add
add
add
xlat
add
add
filds
add
cli
scas
popa
sub
pop
add
push
push
push
push
lea
push
push
call
add
loope
rclb
mov
add
jb
add
pop
mov
loope
pop
loop
push
pop
add
nop
add
mov
rol
outsl
add
sub
pop
mov
push
push
push
push
push
push
call
add
add
fldl
aad
rol
add
add
scas
pop
add
jo
xchg
loop
popl
je
cltd
add
jb
sub
pop
xor
push
push
push
push
push
lea
push
push
push
push
call
jecxz
stc
add
nop
add
sti
sti
add
mov
add
lods
lods
sub
pushf
add
add
push
add
stc
ret
aam
add
add
add
add
lcall
les
push
push
push
push
push
push
call
jnp
add
add
iret
int3
pop
popf
add
add
add
add
add
add
push
add
popa
pop
add
mov
mov
test
xchg
sub
pop
add
add
push
lea
push
lea
push
push
call
add
jo
add
fiadds
xlat
add
scas
add
add
cld
outsl
lahf
int
add
ljmp
add
mov
add
add
hlt
add
push
scas
add
jae
xchg
xchg
add
pop
mov
mov
add
lods
add
mov
ror
enter
lock
mov
push
push
xor
rol
sub
push
or
not
add
lea
sub
add
lea
add
pop
dec
sub
xor
rol
pop
push
lea
push
push
push
push
push
push
push
push
call
loope
lds
hlt
jge
fdivr
loope
lock
mov
add
add
add
add
nop
mov
mov
add
outsl
xchg
mov
mov
jnp
add
add
xchg
mov
shr
add
cli
add
add
in
fcompl
jne
call
push
rol
rol
pop
push
push
push
add
push
xor
add
sub
sub
shl
sub
sub
dec
sub
pop
inc
ror
xor
pop
push
push
push
push
push
call
add
int3
add
mov
nop
add
hlt
out
add
loop
lods
fs
les
loope
xchg
test
pop
loopne
jp
add
pop
add
fs
pop
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
aam
xorb
add
lea
nop
mov
add
pusha
mov
add
mov
add
outsl
aam
add
loop
pop
add
add
out
scas
xchg
mov
add
lcall
add
loop
in
fcompl
add
into
dec
not
pop
call
push
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
scas
enter
scas
add
pop
bound
add
lret
outsl
mov
loope
add
test
imul
faddl
mov
add
add
icebp
add
arpl
mov
mov
ljmp
add
push
push
ljmp
sub
pop
push
push
push
push
lea
push
push
call
add
jmp
xchg
rolb
xchg
add
add
rcll
jle
je
enter
pushf
mov
icebp
add
add
add
add
ja
add
lock
lcall
pop
hlt
push
sub
pop
add
push
push
call
ljmp
add
add
movb
sahf
add
fsubs
add
add
add
add
mov
jnp
add
lcall
ret
add
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
push
add
add
leave
jge
mov
std
gs
add
stos
add
add
loopne
add
iret
add
fldl
stc
rcrb
std
push
lea
roll
sub
pop
add
mov
push
push
push
push
push
lea
push
push
call
add
outsl
pusha
std
add
mov
mov
jae
mov
add
jp
push
add
mov
lock
ja
fists
fildl
std
ljmp
add
stos
add
xchg
jbe
jne
push
pop
xchg
xchg
add
add
filds
mov
aad
sub
pop
xor
push
lea
push
lea
push
lea
push
push
call
jae
add
add
lahf
test
add
out
jae
mov
add
push
rolb
out
fs
popf
js
repnz
stos
sub
pop
add
push
rol
xor
shl
pop
add
push
not
ror
pop
push
mov
xor
push
push
push
push
push
push
call
in
add
add
add
add
test
add
push
lcall
push
push
fs
add
add
add
in
call
add
pop
push
lea
push
lea
push
lea
push
call
in
out
push
add
add
in
add
movsb
add
mov
add
shl
cmc
popf
add
jo
add
jae
mov
xchg
add
cmpl
add
in
xchg
cmpsb
add
add
pop
int
filds
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
add
test
mov
arpl
add
add
add
lret
add
filds
mov
lcall
mov
out
add
movsb
push
xor
inc
sub
sub
pop
mov
push
push
push
lea
push
call
loopne
sar
jl
fwait
add
mov
cmc
mov
sti
mov
mov
insb
in
xchg
les
add
sti
lret
mov
roll
aad
add
xchg
pop
fildl
add
add
add
cltd
test
ljmp
mov
add
or
push
push
push
push
lea
push
lea
push
call
addr16
fisttpl
add
xchg
mov
movsl
cltd
pop
or
lretw
pop
cmpsl
mov
fidivl
cmc
popl
add
add
ja
add
add
push
lret
stos
add
add
mov
xchg
lcall
les
add
push
add
sub
pop
or
je
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
loopne
add
add
jl
out
sbbl
mov
xchg
jp
add
enter
mov
add
add
add
add
lea
test
add
add
jnp
add
add
lcall
xor
jno
adc
lea
push
push
push
lea
push
push
push
push
push
call
pop
mov
fsubs
add
add
jl
mov
add
add
add
add
rolb
data16
cmpsl
push
add
imul
lcall
add
xchg
add
int3
icebp
scas
xchg
mov
xchg
nop
stc
add
xor
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
mov
fwait
arpl
add
add
leave
add
bnd
push
add
xchg
arpl
push
add
jge
or
add
pop
arpl
faddl
sar
test
add
mov
lods
rol
add
mov
xchg
push
in
loopne
lcall
les
add
push
lea
push
push
push
call
ficoml
outsl
js
add
test
ret
mov
jl
jp
js
test
mov
add
icebp
add
pop
roll
lods
add
std
add
pusha
pop
addb
nop
add
ret
add
jne
arpl
sub
pop
mov
xor
push
push
push
push
push
push
push
lea
push
call
xchg
cld
add
mov
mov
xchg
pop
add
push
test
in
mov
jne
in
loopne
add
push
rol
shr
pop
add
push
push
push
call
test
pusha
lret
cmpsl
add
pop
add
js
loop
add
fstp
popa
add
movsl
lahf
jo
add
add
add
jnp
fwait
testb
cmpsb
jae
cmc
add
pop
add
test
mov
add
popa
loope
sub
pop
push
mov
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
outsl
add
nop
add
add
xchg
xchg
mov
add
repnz
aad
add
fists
int
add
shlb
add
out
test
cmpsl
test
add
lock
std
insb
sub
pop
xor
push
push
push
push
push
push
lea
push
call
jbe
add
cli
sti
add
pop
add
fsubp
out
mov
add
add
add
add
add
mov
add
add
xlat
add
pop
jne
leave
add
ja
fs
insb
add
les
add
lcall
les
add
push
push
push
call
jb
addb
add
xchg
mov
mov
cli
leave
incb
ja
nop
mov
xlat
jl
shlb
mov
mov
add
add
pop
iret
aad
jbe
jae
mov
les
hlt
lcall
lock
lea
push
push
push
push
lea
push
push
push
push
push
call
mov
pop
pop
fdiv
jbe
add
pop
add
cld
push
add
add
jae
add
test
aam
loop
mov
add
mov
test
fdivr
add
mov
loop
add
add
shrl
pop
test
add
add
jp
les
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
stc
shl
add
lods
pop
add
add
imul
add
addl
add
call
add
add
lret
icebp
pop
jmp
add
mov
out
add
xchg
add
rcrl
sub
pop
rep
mov
xor
push
xor
lea
xor
shl
pop
or
je
push
not
pop
mov
add
push
sub
not
ror
pop
add
rep
push
push
push
push
push
push
lea
push
call
add
add
lcall
add
rcrb
lret
arpl
test
xchg
xchg
add
add
sti
mov
xchg
ret
stos
mov
add
lcall
push
push
dec
dec
push
or
inc
add
shr
shl
sub
rol
xor
rol
ror
pop
shl
inc
pop
push
add
add
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
mov
stc
test
mov
add
xchg
mov
xchg
push
add
pusha
add
add
lret
add
add
jne
push
xor
shl
sub
pop
mov
push
push
push
call
les
xchg
in
add
lock
xchg
popl
xchg
xchg
push
xchg
ljmp
aam
mov
mov
test
jbe
stc
mov
push
cmpsb
add
add
add
mov
mov
fiadds
stos
fadds
add
mov
push
push
lea
push
push
push
lea
push
call
add
stos
xchg
fdivr
add
pop
add
imul
icebp
add
xchg
in
hlt
push
add
push
add
movsb
add
jmp
in
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
clc
add
add
stc
call
pusha
scas
testb
movsb
mov
clc
mov
mov
jle
add
mov
add
enter
push
add
jne
int3
add
fcomps
ljmp
xchg
jmp
xchg
add
add
in
fdivr
lcall
mov
push
xor
pop
add
push
push
lea
push
push
push
push
push
call
add
sar
jne
add
addl
flds
mov
add
add
add
mov
push
into
add
add
out
roll
scas
add
loope
outsl
mov
add
in
in
push
push
push
push
push
push
push
push
push
push
push
push
call
out
stc
mov
add
pop
test
add
add
int
add
movsl
test
in
out
add
jmp
test
cmpsb
add
add
jb
mov
sub
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
cwtl
sahf
jle
out
in
mov
push
add
pusha
pusha
add
leave
rcl
push
add
add
add
mov
add
int
add
int
add
movb
add
add
js
add
add
lahf
push
jo
add
data16
add
add
leave
in
add
add
pop
push
push
sub
pop
mov
push
add
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
leave
add
fnstsw
add
jns
sarb
lret
mov
addl
jl
lock
jecxz
aad
ja
rcr
addl
lock
icebp
add
fs
pop
decb
addr16
andl
sub
pop
pop
pop
push
push
call
add
aad
hlt
fsts
push
out
int
add
add
add
mov
cltd
add
jle
pop
rolb
add
mov
xchg
add
xchg
jecxz
std
add
xchg
jb
add
clc
lcall
leave
push
inc
ror
pop
ret
push
lea
not
pop
push
push
shr
pop
mov
push
lea
push
push
push
lea
push
call
lret
stc
add
rolb
xchg
jecxz
add
add
shrl
scas
out
add
add
test
xchg
outsl
bound
xchg
mov
mov
push
idiv
jp
sahf
shl
jnp
icebp
fcmovnbe
imul
clc
push
push
push
lea
push
lea
push
call
add
into
jo
idivl
ljmp
add
fsub
xchg
out
pushf
cld
fsubr
aam
add
add
enter
ficomps
lret
mov
add
outsl
int3
add
push
cmc
mov
add
add
cli
mov
shl
add
scas
mov
sub
pop
push
push
push
shr
lea
sub
pop
push
push
push
push
push
push
call
lea
scas
mov
add
jmp
fwait
pop
xchg
out
jmp
add
jns
in
scas
add
mov
add
add
fstl
add
add
push
enter
pusha
add
addr16
mov
test
mov
movl
addl
push
inc
pop
test
je
push
add
sub
dec
sub
pop
mov
push
lea
push
lea
push
push
push
call
add
pop
je
mov
repnz
add
in
loop
js
jmp
jo
jle
lods
idiv
fdivrs
mov
in
in
lcall
push
inc
add
add
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
call
mov
fadds
cld
fs
add
pop
add
add
iret
out
loop
mov
stos
mov
cli
add
scas
add
enter
in
pop
leave
push
lea
xor
pop
ret
push
add
pop
push
push
sub
rol
shl
pop
mov
push
ror
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
loopne
add
add
jl
clc
add
cmpsb
add
add
flds
xchg
repnz
clc
mov
mov
bound
add
ljmp
rol
add
xchg
add
out
add
add
lcall
push
push
push
push
lea
push
lea
push
call
push
mov
sar
add
jo
rolb
loopne
mov
ljmp
mov
addl
cli
pop
arpl
testl
scas
ljmp
lea
push
push
call
add
add
add
cld
pop
int3
arpl
pop
lahf
pop
add
add
movb
add
add
addr16
push
pop
xchg
xchg
imul
jecxz
aad
add
test
add
mov
add
jns
in
call
cld
add
add
push
inc
sub
sub
pop
addl
push
push
call
mov
add
add
fisubl
add
pop
test
out
add
add
stos
gs
add
xchg
jle
mov
ja
add
sub
pop
push
call
push
not
inc
shl
pop
mov
pushl
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
jb
cltd
ret
cli
add
shl
mov
pop
roll
jnp
mov
lods
add
icebp
add
add
add
shrl
orl
sub
pop
push
push
lea
push
push
push
lea
push
call
add
xchg
pop
mov
movsb
add
xchg
add
jnp
add
add
into
addr16
pop
add
push
add
rolb
loopne
popa
arpl
add
mov
add
push
add
add
add
scas
add
mov
add
add
add
add
addl
push
add
xor
dec
pop
call
push
push
lea
push
push
call
add
mov
add
add
pop
add
add
test
pusha
add
jge
cli
add
mov
ljmp
push
add
add
sti
add
sub
pop
cmpl
jne
pop
push
pop
pop
push
push
call
add
add
xchg
add
movl
add
mov
jae
lods
loop
mov
fwait
notl
pop
leavew
add
add
js
stc
add
into
add
leave
popf
mov
jno
pop
cli
add
fcom
pop
push
xchg
out
repnz
pushf
add
jne
add
scas
add
hlt
add
pop
sub
pop
pop
pop
push
push
push
call
mov
icebp
jae
xlat
jns
fndisi(8087
add
cwtl
mov
addb
jmp
push
test
out
stos
lcall
mov
fildl
add
add
add
mov
add
popl
hlt
add
jle
ja
in
repnz
pop
leave
push
push
push
push
push
push
call
add
add
fsubrl
out
jecxz
add
jge
add
mov
insb
add
mov
add
cli
call
pop
ret
push
push
push
push
push
push
push
lea
push
push
push
call
push
in
mov
jno
add
icebp
add
pusha
lods
add
fildl
cltd
insb
in
sahf
loope
pushf
out
cmpsb
add
add
xchg
int3
lret
in
add
lea
enter
add
fs
pop
cltd
mov
add
add
pop
push
push
push
lea
push
call
add
test
xchg
shlb
ret
pop
js
test
add
mov
mov
pop
loope
add
xchg
add
ja
jmpw
add
je
add
in
push
sub
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
jb
testb
lea
filds
mov
popa
addr16
mov
mov
add
add
add
mov
cld
mov
add
add
pusha
add
in
add
data16
add
loope
add
jnp
in
fcompl
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
test
add
add
mov
fcmovnu
add
mov
xchg
mov
lret
mov
rolb
add
movsb
push
push
arpl
xchg
add
flds
add
sahf
jl
xorl
data16
add
lcall
push
not
rol
pop
push
push
push
push
push
call
push
add
addl
add
push
pop
add
mov
fnstcw
push
mov
les
testb
std
jno
add
push
add
nop
fists
add
add
fisubs
in
lock
lcall
inc
cld
add
push
push
call
pop
movsb
call
add
add
add
faddl
fldt
clc
xchg
mov
push
rolb
add
mov
add
add
jae
in
add
add
sub
pop
push
call
push
push
push
call
pop
pop
cltd
loope
push
lahf
lds
aam
leave
add
insb
mov
lcall
mov
add
add
stc
add
fiadds
popf
add
mov
lcall
or
push
lea
push
push
push
push
push
call
int3
hlt
add
pop
test
ret
mov
into
jb
add
movsb
add
flds
add
imul
push
out
scas
add
call
add
mov
jp
add
mov
add
mov
loop
add
in
sub
pop
call
push
shl
lea
sub
pop
subl
push
push
push
push
push
push
call
loopne
icebp
add
aam
add
jecxz
mov
add
jmp
add
jb
add
mov
mov
popa
add
add
jl
add
popl
sub
pop
cmpl
jne
push
not
sub
pop
pop
pop
push
sub
ror
sub
pop
pop
push
not
pop
pop
push
push
push
lea
push
push
lea
push
push
call
add
pop
arpl
imul
fsubs
jne
mov
mov
stc
add
pop
jl
add
movb
add
enter
mov
insb
xchg
add
imul
insb
scas
mov
add
add
push
mov
mov
outsl
sub
pop
leave
push
push
push
lea
push
call
add
add
xlat
mov
mov
jno
imul
add
jge
fsubr
jns
addb
add
push
sub
pop
ret
push
shl
add
pop
push
push
add
add
ror
pop
mov
push
shl
rol
inc
pop
add
push
push
push
push
push
lea
push
push
call
add
xlat
mov
jno
loope
xchg
rclb
jae
jb
fsts
subb
or
add
in
add
xchg
push
add
add
jle
mov
add
in
lods
add
and
add
mov
fyl2xp1
add
sarb
add
sub
pop
push
push
push
dec
pop
push
push
push
ror
not
ror
xor
pop
mov
push
dec
dec
pop
lea
sub
push
pop
mov
push
shl
sub
rol
pop
shr
push
lea
push
push
push
push
push
call
add
add
ja
fldl
mov
cmc
fdivl
add
xchg
add
int
xchg
add
add
sub
pop
add
mov
push
lea
push
push
push
push
push
push
lea
push
call
mov
pop
add
sti
rclb
fists
add
add
scas
add
jns
mov
add
add
aad
bound
add
pop
pop
test
add
mov
testb
add
stc
fildl
mov
sar
stos
add
aam
add
imul
lcall
andb
or
push
push
push
push
push
call
add
add
mov
lods
xchg
lods
int3
jl
push
rcr
mov
mov
add
pushf
push
add
cwtl
add
popf
push
add
add
add
jge
add
les
lcall
shlb
lea
push
push
push
push
lea
push
push
push
call
fwait
gs
add
add
ja
add
out
or
add
fiaddl
rcr
mov
rclb
jnp
test
jb
add
jmp
out
in
loopne
lcall
inc
add
add
push
push
push
push
call
aam
test
stc
add
cmpsb
jns
arpl
icebp
clc
mov
js
add
in
jo
lret
add
push
in
mov
rol
mov
sbbb
lock
cmp
jne
push
add
add
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
push
call
add
fildl
sahf
add
add
add
cltd
add
arpl
push
cmpsb
in
lcall
push
add
mov
add
push
jmp
arpl
push
add
add
inc
adc
add
add
add
out
imul
or
sti
pop
mov
push
add
ror
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
push
icebp
addr16
add
add
pop
add
add
cltd
mov
pop
outsl
gs
gs
lret
add
pop
add
into
sub
pop
sub
jne
push
add
rol
pop
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
data16
add
push
push
mov
pop
enter
mov
enter
push
fiadds
add
cltd
mov
add
imul
jge
add
xorb
sub
pop
movl
jmp
push
pop
mov
push
ror
pop
mov
push
shr
shl
pop
cmp
jne
push
rol
inc
pop
mov
push
pop
movl
push
push
lea
push
lea
push
push
lea
push
push
call
pop
add
add
scas
lods
pop
pop
testb
stos
pop
lahf
add
cltd
call
add
mov
stos
add
ljmp
in
in
jmp
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
add
test
xchg
add
mov
mov
add
add
xchg
insb
pop
xchg
test
adcl
add
add
scas
add
lcall
cmpl
jne
push
dec
ror
pop
mov
push
dec
add
pop
movl
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
ljmp
mov
xlat
lret
jle
add
push
lret
nop
mov
ret
xchg
fldl
add
jae
stc
aam
cltd
addl
push
mov
mov
pop
scas
mov
xchg
add
insb
add
add
push
add
add
les
lcall
icebp
or
add
loope
pop
pushl
push
lea
pop
pop
push
dec
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
roll
push
add
push
outsl
mov
add
lods
leave
jb
in
xchg
fimull
pop
xchg
add
mov
leave
xchg
mov
add
mov
fcomps
inc
sbb
lea
push
lea
push
push
push
push
call
add
add
add
pushf
xchg
add
add
loop
pop
add
mov
mov
add
jno
add
lods
clc
add
filds
lret
add
jmp
fsubr
out
lea
scas
add
xchg
add
add
mov
lcall
push
or
addr16
inc
push
ror
lea
push
or
not
add
shl
shr
sub
sub
add
ror
not
pop
sub
pop
push
lea
push
push
call
arpl
add
xchg
add
loope
add
pop
add
sahf
jmp
add
lcall
jge
jbe
pop
fdivs
add
fmuls
into
divb
test
jae
mov
hlt
pop
push
push
not
pop
call
cmpl
je
push
push
lea
lea
xor
shl
push
xor
add
not
sub
not
sub
sub
sub
rol
shl
dec
pop
shr
lea
not
sub
pop
push
dec
not
pop
push
call
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
lret
movb
cmc
lock
add
add
in
data16
mov
in
add
test
add
shl
sub
pop
cmpl
je
push
push
shl
rol
push
sub
add
add
sub
rol
ror
inc
pop
not
not
lea
inc
pop
push
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
push
pop
test
popf
push
add
in
add
add
add
add
fildll
icebp
add
stc
pop
add
add
add
pusha
addl
mov
insb
mov
imul
add
add
loope
test
add
add
sub
add
cltd
sti
add
lods
cmp
add
int3
je
push
push
sub
add
push
and
add
shr
ror
sub
not
add
pop
ror
add
rol
pop
push
shr
lea
not
pop
push
call
push
shr
rol
pop
cmpl
je
push
push
dec
add
add
push
or
not
add
xor
sub
dec
pop
inc
shr
pop
push
dec
ror
shl
pop
push
call
push
sub
sub
dec
pop
cmpl
je
push
push
lea
sub
not
push
push
pop
add
dec
add
sub
sub
pop
add
pop
push
pop
push
call
push
sub
add
pop
cmpl
je
push
push
dec
push
or
not
add
add
rol
sub
ror
pop
add
add
pop
push
pop
push
call
push
push
push
push
push
push
push
call
hlt
jl
add
mov
add
gs
mov
add
xchg
js
loopne
std
in
sti
cmpb
add
add
test
pop
pop
sti
add
add
add
add
add
jge
out
movsl
add
in
in
lcall
cmp
or
int3
je
push
push
lea
push
or
not
add
rol
sub
xor
dec
pop
add
shr
pop
push
lea
push
call
add
movsl
jge
pop
cmpsb
icebp
clc
stos
jmp
add
mov
add
ljmp
mov
clc
xchg
bound
jmp
mov
incb
icebp
testl
xchg
roll
add
sbbb
add
add
add
in
clc
pop
push
push
push
push
push
push
push
lea
push
call
jmp
lock
add
add
in
add
pusha
add
xchg
xchg
add
cwtl
push
add
mov
pop
call
cmpl
je
push
push
add
add
add
shr
push
xor
add
xor
sub
sub
sub
ror
rol
pop
shl
shl
dec
ror
pop
push
push
push
push
push
call
subl
add
shl
push
add
imul
cwtl
mov
mov
cltd
mov
call
jl
dec
add
add
push
push
add
popa
add
add
add
movsl
mov
lret
fldl
sti
add
mov
add
in
in
pop
push
push
push
lea
push
push
call
mov
jnp
add
add
fnstsw
pop
shl
addb
mov
ja
in
add
add
add
cltd
mov
lea
test
add
xchg
out
push
faddl
shlb
loop
mov
add
push
mov
mov
xlat
xchg
pop
add
lcall
aaa
add
push
push
lea
push
push
call
add
jecxz
aad
mov
std
add
shlb
loopew
cmc
cmpsb
add
add
add
jl
add
push
push
pop
jmp
test
add
lret
jae
add
loop
add
add
test
lock
cmpl
je
push
push
add
dec
add
push
push
pop
add
rol
sub
sub
lea
not
pop
add
pop
push
push
push
lea
push
push
call
push
add
lock
add
xchg
mov
lock
pop
xchg
in
js
lcall
mov
xchg
movsl
cmpb
adcb
fsubrl
add
rcr
hlt
jo
add
lcall
push
add
pop
call
push
lea
push
push
call
xchg
mov
mov
clc
movl
out
add
addl
in
out
mov
test
into
push
add
add
pusha
fstpl
add
add
lods
lods
mov
add
add
add
pop
mov
sub
pop
cmpl
je
push
push
xor
not
add
push
sub
add
rol
rol
rol
shr
sub
not
add
pop
add
add
pop
push
inc
add
pop
push
push
shl
pop
call
push
push
call
pop
addr16
pop
jmp
jge
add
faddl
fdivrl
in
rolb
mov
push
repnz
divl
addl
add
fs
xchg
add
mov
fistpl
mov
enter
xchg
int
stos
mov
arpl
jae
loope
add
sub
pop
cmpl
je
push
push
sub
ror
push
push
pop
add
xor
sub
add
xor
pop
inc
pop
push
add
sub
sub
lea
pop
push
push
not
not
pop
call
push
ror
pop
cmpl
je
push
push
add
inc
add
push
and
add
dec
dec
sub
not
shl
ror
pop
lea
pop
push
push
push
push
push
push
push
call
add
fdivrp
mov
je
lock
add
cltd
xchg
bound
add
arpl
mov
lret
jae
ret
out
enter
into
mov
add
mov
or
fiaddl
xchg
aam
pusha
iret
add
pop
add
mov
in
in
push
push
push
call
xorb
add
mov
test
xchg
add
jae
mov
xchg
add
test
add
jnp
add
cmc
add
push
add
aam
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
call
data16
out
lcall
add
cmc
add
mov
test
jb
pop
add
js
outsl
push
mov
mov
rolb
js
sub
pop
cmpl
jne
mov
push
rol
dec
add
pop
movl
push
inc
ror
pop
jmp
push
rol
dec
pop
xor
push
push
push
push
call
idivl
add
add
add
add
add
shrb
add
add
ja
jmp
add
loopne
push
add
add
add
in
nop
jbe
popf
push
add
add
mov
push
data16
add
sti
faddl
roll
jae
sub
pop
pop
push
lea
pop
pop
push
lea
push
push
call
addl
add
add
push
mov
jbe
jns
fsts
add
test
js
ret
add
add
fs
add
rcrb
jae
add
roll
add
flds
iret
add
pop
fcomi
fidivl
add
pop
pop
push
lea
inc
inc
pop
leave
ret
push
rol
ror
shr
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
stc
add
arpl
add
jmp
pop
andb
add
add
fdivrs
scas
fwait
add
add
jl
add
add
test
jnp
add
add
add
jae
pop
xchg
stc
pushf
push
mov
add
add
std
js
clc
add
out
mov
enter
in
loopne
lcall
in
push
ror
ror
pop
add
push
sub
inc
pop
cmpl
jne
push
push
shl
lea
push
xor
add
not
rol
dec
sub
sub
rol
xor
pop
lea
shl
pop
push
push
push
push
push
push
call
add
test
cwtl
xchg
add
add
add
nop
rolb
bound
out
bound
xchg
add
fiadds
mov
add
cld
add
add
push
add
mov
roll
pop
pushl
push
dec
inc
lea
pop
call
push
shl
pop
push
call
push
lea
push
push
push
call
mov
in
data16
xchg
aam
loopne
add
add
movsb
mov
mov
push
add
add
aam
cltd
add
imul
add
add
jae
add
add
mull
fstpl
int
nop
add
sti
push
add
add
add
sub
pop
jmp
push
lea
push
push
push
push
push
push
call
loop
push
add
addl
xchg
add
jle
int3
out
mov
loope
outsl
cmpsl
add
popa
repnz
add
movsb
ret
jp
add
in
in
cmpl
je
push
push
push
push
push
lea
push
push
push
call
add
cmpsl
fwait
mov
add
add
cltd
mov
bound
mov
jnp
movsb
push
add
add
stc
aad
in
loopne
cmpl
jne
mov
push
push
push
lea
push
push
push
push
call
fnstenv
in
imul
mov
jbe
add
add
add
mov
mov
filds
testl
in
in
lcall
outsb
sbb
add
mov
mov
clc
dec
xor
sub
lea
push
or
not
add
sub
add
sub
sub
dec
add
add
pop
lea
pop
push
dec
ror
pop
pushl
push
lea
push
push
lea
push
push
call
fcompl
add
add
jge
pop
fcoms
cmc
mov
add
add
add
xchg
push
add
movl
fidivl
add
add
mov
push
fiadds
add
in
lods
std
xchg
enter
push
shr
shr
pop
lea
push
shr
pop
push
push
dec
pop
push
push
push
push
push
lea
push
push
push
push
call
test
mov
les
lea
add
add
stos
hlt
imul
add
loope
add
add
add
add
add
ljmp
lock
mov
icebp
sub
pop
push
push
ror
pop
call
push
sub
add
xor
sub
pop
ret
jmp
push
sub
pop
cmpl
jne
push
push
rol
push
push
pop
add
shl
sub
not
pop
add
pop
push
push
lea
push
lea
push
call
add
test
add
fmuls
ljmp
lds
mov
scas
add
pushf
xchg
rcrb
add
fucomip
shlb
loope
jmp
add
jne
lret
pushf
ret
shr
gs
cmc
add
add
addr16
in
and
push
in
in
in
lock
lcall
jne
push
sub
not
inc
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
nop
sti
mov
add
lods
sti
mov
add
imul
add
testb
mov
mov
pop
push
in
pushf
mov
add
pop
hlt
add
xchg
push
sahf
out
in
fistpll
add
fldl
add
call
push
lea
push
push
push
lea
push
push
call
pop
test
stos
lods
movb
add
test
add
lea
add
addr16
fistpll
add
pushf
add
mov
lock
mov
sub
pop
jmp
push
xor
sub
shl
pop
cmpl
jne
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
data16
addl
pop
add
fsubrl
add
add
into
sahf
add
rcr
add
lcall
add
add
push
lea
push
push
push
push
call
in
add
mov
add
mov
test
add
add
imul
add
imul
lods
rolb
add
add
sarl
testl
mov
mov
add
fldl
flds
mov
bound
add
add
push
dec
add
pop
push
jmp
push
push
dec
push
or
inc
add
sub
add
sub
xor
pop
lea
dec
shl
rol
pop
push
rol
add
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
pop
add
add
push
add
add
ror
jl
aam
hlt
add
flds
add
ror
ja
mov
test
in
push
lods
jmp
fcomps
add
add
shrb
pop
cmpb
shl
shr
push
and
add
inc
sub
sub
sub
pop
not
shr
rol
pop
push
add
sub
dec
pop
pushl
call
push
sub
pop
call
push
push
inc
shr
push
sub
add
rol
sub
xor
pop
sub
add
add
add
pop
push
push
push
call
pop
jns
add
out
testb
jb
add
cli
add
cltd
mov
add
pusha
add
add
push
add
add
add
add
mov
mov
add
imul
fnstsw
jl
cwtl
jmp
mov
add
in
hlt
lcall
jne
push
push
push
lea
push
push
lea
push
call
add
testb
add
ljmp
mov
stc
hlt
fidivl
mov
add
add
add
mov
int3
add
add
add
data16
movl
in
sar
add
sub
pop
call
push
add
pop
call
push
push
dec
push
sub
add
xor
add
sub
dec
dec
lea
pop
sub
xor
pop
push
sub
add
shl
pop
pushl
call
push
rol
pop
lea
push
push
call
add
pop
into
pushf
cli
add
add
push
in
mov
mov
xchg
gs
xchg
gs
les
icebp
fcomp
into
push
add
lcall
push
add
add
not
pop
call
push
push
shr
push
and
add
sub
xor
lea
inc
pop
shr
add
pop
push
lea
push
call
add
push
std
jae
add
mov
add
add
pop
add
add
lret
add
pop
jle
add
cmpsl
add
mov
mov
xchg
fildl
lds
xlat
aad
add
jne
call
push
add
ror
pop
call
push
push
add
push
xor
add
shr
sub
add
pop
shr
pop
push
push
push
call
fs
mov
xchg
mov
fildl
leave
imul
mov
out
add
add
fcmovnbe
jo
pushf
add
add
push
mov
fidivrs
jae
add
out
addb
add
stc
add
add
add
jnp
adcb
mov
add
fbstp
xchg
jne
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
std
clc
add
test
int3
stos
push
incb
loop
add
xlat
mov
add
push
cli
loop
push
add
mov
in
lret
mov
push
mov
add
in
fcomps
ja
add
push
shr
pop
call
push
push
rol
push
or
not
add
sub
not
inc
dec
pop
add
pop
push
sub
sub
pop
pushl
push
push
lea
push
lea
push
push
push
push
push
push
call
repnz
add
lods
add
xchg
add
add
mov
add
in
jl
data16
xchg
jge
nop
xchg
add
lret
add
add
add
test
mov
mov
add
movsl
mov
jae
clc
add
mov
xor
dec
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
fldl2t
std
mov
rolb
scas
sbbb
add
jb
add
lods
add
stos
add
add
push
in
add
add
popf
scas
hlt
movsl
rol
test
add
out
mov
icebp
add
add
sub
pop
lea
push
push
shl
sub
push
and
add
not
inc
lea
shr
sub
shr
pop
add
pop
push
lea
push
push
push
push
push
push
call
jb
push
fidivrl
mov
stos
add
out
add
push
add
stc
xorl
add
pop
mov
pop
pusha
fnsave
repnz
pop
add
rorl
jp
add
add
hlt
lcall
rorl
lcall
jne
push
dec
shl
pop
call
push
push
lea
inc
add
pop
call
push
push
shr
push
and
add
add
not
ror
sub
add
pop
add
sub
pop
push
shr
sub
pop
pushl
push
shl
ror
pop
call
push
sub
sub
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
pushf
imul
push
mov
cwtl
addb
in
add
pop
add
add
push
add
cld
iret
mov
add
push
rolb
testl
insb
push
add
mov
push
cli
lock
cmpsb
xchg
aad
pushf
push
jmp
mov
mov
filds
int
pop
notb
pop
faddl
sub
pop
mov
push
push
inc
sub
push
xor
add
rol
sub
add
pop
ror
inc
add
pop
push
sub
pop
pushl
call
push
push
lea
push
push
push
call
add
mov
add
cltd
add
test
addr16
jb
std
add
addr16
add
sti
ljmp
mov
aam
add
int
jl
int3
data16
sub
pop
push
push
push
lea
push
push
push
call
push
popf
xlat
add
jl
xchg
add
add
cli
movsl
add
add
add
add
lds
movsb
sub
pop
pushl
push
push
call
rolb
clc
jmp
add
add
push
stc
filds
ljmp
add
mov
lret
mov
jb
arpl
add
movsl
add
add
int
add
fldl
leave
add
add
add
repnz
add
roll
sub
pop
call
push
push
push
push
pop
add
sub
rol
pop
add
inc
inc
pop
push
push
push
push
push
call
mov
add
mov
xchg
mov
add
mov
add
js
add
ljmp
in
in
pop
pushl
call
push
push
dec
add
push
sub
add
xor
sub
inc
sub
pop
add
pop
push
push
shr
push
or
inc
add
rol
sub
rol
lea
sub
pop
shr
pop
push
push
push
lea
push
push
push
push
push
call
sahf
cmpsl
mov
mov
fimull
add
add
add
pop
add
xchg
xchg
xchg
add
add
push
lahf
mov
jl
rolb
int
add
push
push
jbe
add
fsubr
jmp
iret
cmpsl
stos
pop
add
roll
shrb
jl
mov
add
push
push
pop
add
not
lea
sub
ror
pop
sub
sub
pop
push
sub
pop
pushl
push
push
call
add
lcall
add
add
add
sti
add
fistpll
pop
add
out
jo
add
xorb
in
clc
lcall
sti
and
add
bound
push
push
push
call
mov
add
lock
add
mov
movsb
add
add
rolb
add
rcr
notb
jo
add
add
lahf
jl
add
loope
scas
sub
pop
lea
lea
push
push
push
call
test
aam
jl
add
pop
add
add
add
jp
scas
fcmovu
add
loopne
jp
iret
add
push
xchg
add
add
add
test
add
add
add
xchg
jnp
push
add
push
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
loope
mov
add
add
loope
pop
add
add
add
xchg
cmc
aad
add
into
dec
pop
test
add
popl
add
xchg
cmpsl
add
roll
mov
movsb
add
sub
pop
push
push
push
push
lea
push
lea
push
push
call
fsubp
sahf
add
xchg
orb
push
fcmovnbe
hlt
lds
int
add
add
cmc
mov
mov
add
add
add
lcall
add
popf
add
jge
add
mov
jl
js
jno
add
aam
add
add
push
pushf
fiadds
rolb
xchg
cmpsl
sub
pop
push
push
ror
shl
sub
pop
push
push
push
push
lea
push
push
call
rcr
add
iret
xchg
mov
shr
xchg
add
mov
repnz
popf
add
add
add
jecxz
add
sub
pop
push
push
shr
rol
not
pop
push
push
push
add
pop
pushl
push
push
push
push
push
push
push
lea
push
push
lea
push
call
sarb
std
data16
sti
add
add
add
add
add
std
test
add
jl
cmpsb
xchg
nop
push
movsb
ja
lock
add
add
add
test
add
loope
sub
pop
push
push
push
push
push
push
call
jecxz
pop
test
add
cmc
mov
shl
push
push
pop
add
add
add
add
add
add
addb
rcr
mov
std
out
push
add
pop
add
int3
mov
add
push
add
sti
sti
test
pusha
xchg
cltd
add
add
jb
add
sub
pop
call
push
push
add
shr
shr
push
and
add
sub
xor
sub
sub
sub
pop
shl
ror
pop
push
sub
sub
pop
pushl
push
shl
shl
add
sub
pop
call
push
not
dec
shr
not
pop
call
mov
push
push
push
push
call
shll
lock
add
add
add
mov
push
mov
add
add
pop
xchg
push
mov
test
lock
lcall
push
push
push
push
lea
push
call
jbe
jne
bound
add
mov
jns
mov
insb
mov
mov
pusha
add
add
mov
lret
jl
sti
push
int
stos
add
add
add
aad
call
in
pop
dec
jne
push
pop
jmp
push
lea
push
lea
push
push
push
call
pop
add
add
movsl
add
out
mov
add
popf
test
enter
add
mov
leave
jmp
movsb
pushf
add
shl
fldl
stc
add
jle
add
add
add
cld
add
addb
in
in
pop
call
push
push
dec
rol
shl
xor
push
or
not
add
sub
add
add
shl
sub
add
add
not
sub
pop
not
pop
push
sub
inc
dec
shr
pop
pushl
call
push
lea
dec
pop
push
call
push
push
push
lea
push
push
push
push
call
add
mov
ljmp
add
mov
jecxz
addr16
into
in
lds
mov
add
add
add
mov
mov
lea
push
push
shr
sub
not
push
sub
add
not
dec
shr
sub
not
add
sub
pop
add
xor
pop
push
push
push
lea
push
call
add
xlat
divl
jo
add
pop
jo
cmpsl
pushf
add
add
out
pop
mov
mov
pop
pushl
call
push
sub
rol
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
in
add
xchg
scas
std
add
xlat
mov
add
notl
mov
push
add
add
xchg
insb
add
add
rolb
loop
add
add
aam
add
pusha
sub
pop
call
push
push
rol
push
and
add
not
sub
shl
ror
sub
rol
pop
xor
pop
push
shl
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
call
jl
mov
add
add
add
add
add
xchg
add
add
push
add
add
add
mov
xchg
andl
lea
mov
fldl
add
lret
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
aam
js
jno
mov
xorl
add
mov
fadds
add
add
xchg
stc
pushf
push
out
add
add
data16
std
mov
jecxz
pop
pop
add
sti
loope
xchg
push
sti
mov
add
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
add
jns
je
jl
add
add
add
mov
add
add
jne
pop
add
mov
test
insb
mov
jmp
add
pop
mov
add
int
add
add
add
mov
add
test
add
mov
inc
cld
lea
push
push
rol
not
push
xor
add
inc
sub
xor
sub
pop
add
pop
push
lea
ror
pop
pushl
push
sub
rol
ror
pop
call
push
shl
sub
pop
lea
push
push
ror
add
rol
pop
push
push
lea
add
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
push
add
add
scas
add
popa
loope
std
mov
add
add
push
add
into
pop
add
jne
cmpsl
into
out
push
add
add
mov
faddl
jmp
xchg
mov
jno
sub
pop
pushl
push
push
shr
add
push
or
not
add
dec
ror
sub
sub
add
pop
dec
pop
push
lea
push
lea
push
lea
push
push
call
int3
scas
icebp
les
outsl
gs
je
cld
mov
mov
lods
push
jmp
lods
mov
mov
add
sbbl
add
push
mov
add
jo
add
add
jge
add
lret
aam
js
stc
jp
mov
sub
pop
push
call
push
push
shr
push
or
inc
add
lea
sub
sub
rol
pop
shl
xor
ror
lea
pop
push
sub
pop
pushl
call
push
inc
pop
push
call
push
push
inc
shl
lea
shl
push
and
add
not
sub
sub
lea
add
inc
pop
lea
inc
lea
pop
push
push
push
call
int
push
xchg
add
imul
add
lret
add
iret
sub
add
add
in
xchg
add
xchg
aam
mov
sahf
aad
add
jge
in
in
push
mov
add
in
hlt
lcall
jne
push
push
lea
push
push
call
into
pop
stos
popl
add
int
mov
add
pushf
mov
fnstsw
out
add
add
add
sbb
add
rclb
das
push
push
lea
push
push
push
call
add
add
pusha
add
not
add
add
mov
stos
add
add
arpl
call
clc
jo
cwtl
add
push
add
in
xchg
add
add
pop
shr
add
incb
add
in
in
jmp
push
rol
pop
pushl
mov
push
ror
add
shl
pop
jmp
push
push
rol
push
or
inc
add
rol
rol
sub
rol
lea
pop
xor
xor
pop
push
push
lea
push
lea
push
push
push
push
push
call
repnz
mov
shlb
mov
mov
xchg
add
add
jb
jmp
mov
add
add
push
add
mov
movsb
lret
out
out
add
fs
test
lahf
leave
lahf
repnz
push
roll
roll
lcall
jne
push
lea
push
push
push
lea
push
call
add
loope
pop
jns
repnz
add
add
insb
add
push
cmpsb
cwtl
mov
add
loopne
add
sti
stos
rcrb
lret
add
add
scas
cmc
hlt
add
les
jo
movsb
mov
add
mov
add
jge
int
lcall
imul
call
jae
sub
pop
call
push
push
call
jmp
popf
mov
push
data16
add
mov
add
jmp
movb
pop
fsubp
add
stos
add
add
add
add
add
xlat
mov
outsl
add
add
add
jecxz
sti
add
into
mov
add
lcall
add
shrb
adc
xlat
push
rol
push
sub
add
shl
add
rol
add
sub
inc
pop
shr
pop
push
shr
rol
pop
pushl
call
push
push
push
push
call
testb
add
mov
add
pop
fldl
addr16
fildl
add
shl
add
hlt
xchg
mov
mov
mov
fxam
lea
sahf
out
jbe
add
lea
insb
mov
stc
nop
je
pusha
add
add
add
add
push
push
push
lea
push
push
lea
push
push
call
add
int
xchg
push
mov
shrl
jecxz
add
stos
add
push
add
xchg
add
call
add
popf
aad
fcomps
add
add
xchg
add
pop
nop
sahf
add
add
xchg
test
add
lcall
rclb
inc
push
push
push
push
push
push
push
call
imul
add
push
add
add
test
mov
leave
ficoms
cli
add
add
out
lock
loop
roll
or
push
add
add
test
js
add
add
jmp
add
cmpb
add
insb
shr
lcall
fisttpll
in
fcompl
push
push
lea
push
push
push
push
push
call
add
add
roll
arpl
add
enter
testl
je
xchg
mov
add
add
add
lret
add
pop
mov
roll
push
fiadds
mov
js
js
popa
add
stc
mov
add
mov
fcomp
add
in
in
add
pop
push
push
push
push
push
push
push
lea
push
push
push
call
shll
adcb
pop
pop
loop
int
pop
mov
add
push
lods
add
test
add
mov
pop
scas
jno
add
sub
pop
pop
push
lea
push
push
call
mov
lds
add
add
movsl
mov
mov
aam
rcll
add
test
add
fs
add
hlt
lcall
push
shr
ror
pop
pop
leave
push
push
call
pop
add
add
add
add
add
mov
add
add
add
mov
add
ja
xchg
add
notl
add
add
add
jo
scas
sti
add
cli
pop
add
mov
sub
pop
add
push
push
push
push
push
lea
push
call
cltd
mov
je
push
mov
add
mov
add
xchg
in
mov
add
jae
add
add
ret
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
ret
bound
lods
jno
lock
lock
int
add
cmc
mov
js
xchg
xchg
add
test
add
jbe
add
add
mov
ljmp
jmp
cmpsb
out
les
cld
mov
add
loope
bound
add
pop
cmpsb
fidivrs
lcall
ret
push
lea
push
lea
push
lea
push
push
call
add
popa
add
repnz
test
in
add
loopne
add
add
int3
mov
fldl
test
aad
cmpsl
arpl
leave
mov
aad
add
add
xchg
loopne
xlat
out
add
pop
cli
mov
add
not
test
mov
add
jns
jl
outsl
add
push
mov
push
push
call
js
jp
add
add
cmpsl
add
jp
mov
add
add
call
roll
add
add
aad
out
add
add
add
jle
fiaddl
mov
mov
fs
add
add
add
rolb
in
clc
pop
cmpl
jne
push
lea
push
call
add
add
sbbl
addl
add
add
faddl
loopne
fadds
xchg
add
xchg
addb
je
lock
sub
pop
mov
push
dec
sub
add
pop
jmp
mov
push
rol
add
pop
and
push
rol
pop
xor
xor
push
not
lea
pop
add
xor
push
push
lea
push
push
call
add
filds
ret
pop
xchg
xchg
je
jge
add
add
mov
jnp
add
jne
rolb
mov
in
lock
dec
sub
push
add
rol
pop
jmp
push
push
push
push
push
push
push
push
push
call
add
push
add
add
ljmp
jp
pop
jns
add
int3
mov
pop
jbe
pop
add
add
leave
push
add
lods
add
add
add
add
pop
aam
push
add
scas
add
add
sub
pop
sub
push
push
push
call
add
jbe
mov
cwtd
int
add
rolb
jecxz
add
imul
mov
jno
out
in
imul
add
add
add
push
pusha
xchg
mov
popa
js
add
mov
jno
add
push
mov
mov
arpl
pop
sub
pop
pushl
push
dec
not
pop
pop
push
shr
add
pop
sub
push
push
lea
push
push
push
push
push
push
push
push
call
not
add
jecxz
add
add
add
popa
int3
pop
aam
scas
push
add
mov
shrb
mov
mov
ret
add
cltd
movl
add
mov
movl
lcall
cmp
or
call
or
dec
lods
push
push
push
push
lea
push
call
hlt
std
add
std
add
pop
fwait
out
call
jecxz
sarl
add
scas
add
pop
push
pop
jne
add
test
push
add
pop
add
xchg
add
jb
pusha
sahf
mov
lods
add
lcall
shlb
add
mov
out
mov
les
push
scas
mov
in
lcall
enter
out
jecxz
or
iret
not
shr
pop
lea
push
shl
xor
inc
pop
sub
push
push
push
lea
push
push
push
push
call
mov
aad
add
out
rclb
fs
mov
cwtl
gs
in
fcmovbe
add
icebp
push
imul
or
into
add
clc
sahf
add
xchg
shl
add
add
add
add
testb
jbe
jecxz
mov
add
in
in
mov
shr
push
push
push
push
call
mov
mov
stc
add
add
jmp
add
add
add
add
mov
fisubs
add
add
add
add
add
add
lods
mov
shl
ficomps
push
test
fists
pop
mov
lock
lcall
enter
push
add
pop
pushl
push
add
ror
pop
pop
push
dec
add
rol
pop
shr
push
push
push
push
push
call
add
sti
xchg
sti
test
add
movsb
add
mov
add
add
fidivrs
pop
test
xchg
jnp
fcoms
stos
fwait
add
add
add
pop
js
into
pop
mov
add
in
lcall
loope
incl
add
leave
not
add
pop
sub
push
lea
push
lea
push
lea
push
call
enter
rorl
sbbb
loope
pop
pusha
jp
cwtl
repnz
mov
std
jle
add
iret
add
stos
mov
add
add
xchg
mov
jns
add
stc
sbb
test
sti
call
shl
rorb
leave
push
push
push
push
lea
push
push
lea
push
lea
push
call
insb
je
add
jnp
add
testl
pop
add
add
mov
testb
lods
pop
pop
add
add
add
add
mov
lcall
add
push
add
rol
sub
pop
push
push
push
lea
push
lea
push
push
call
leave
jnp
scas
mov
push
loopne
add
sahf
roll
add
scas
add
ljmp
add
jne
mov
stos
sti
mov
mov
add
in
push
lea
push
push
push
push
push
push
call
add
add
add
in
lods
add
mov
into
add
pusha
mov
gs
jb
add
mov
mov
cld
push
push
lea
push
push
lea
push
call
int
add
mov
imul
loope
add
jno
faddl
subb
add
out
pop
icebp
add
gs
test
add
add
nop
movsb
add
add
filds
add
add
stc
xchg
push
mov
mov
add
cmpsl
pop
add
nop
jmp
iret
mov
add
cmpsb
add
add
int
in
in
lcall
push
push
push
push
push
push
push
call
mov
pop
popa
adc
add
add
add
add
jge
add
add
jns
loopne
lahf
add
add
ret
pusha
sub
pop
push
push
push
push
push
call
push
add
mov
enter
addl
add
bound
add
int
jae
clc
add
mov
mov
add
enter
add
sub
pop
push
push
push
lea
push
lea
push
push
push
call
mov
cld
mov
add
aam
jnp
add
in
xchg
add
jbe
xchg
xchg
xchg
in
pop
add
fwait
roll
add
pusha
jnp
out
test
mov
add
arpl
push
add
movsl
imul
in
call
push
inc
dec
sub
pop
lea
sub
push
add
lea
pop
mov
push
add
pop
shr
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
pop
add
mov
add
push
shll
aam
ljmp
pop
add
push
push
push
push
call
mov
shll
in
mov
pop
add
add
add
lcall
add
add
fildl
xchg
add
add
add
add
add
add
mov
mov
jmp
stos
out
insb
add
scas
add
add
lock
lcall
fwait
addb
add
call
pop
add
jge
add
add
notl
mov
jo
stos
subl
add
add
icebp
lods
jecxz
add
mov
add
scas
add
out
jne
jmp
mov
not
movsl
cmc
add
add
loopne
loopne
add
out
jo
pushf
jmp
push
add
jge
stc
sub
pop
add
push
ror
pop
mov
push
push
push
push
push
call
add
int
add
loope
test
mov
add
mov
mov
add
vorpd
add
add
cli
jno
test
add
add
add
loope
cld
add
pop
add
xchg
add
add
add
out
sahf
pop
mov
sub
pop
add
push
add
add
pop
xor
push
push
lea
push
call
add
add
addb
add
mov
add
jge
add
rclb
mov
push
not
inc
rol
pop
and
rol
push
push
lea
push
push
lea
push
push
push
push
call
icebp
push
add
jae
std
fsubp
in
add
pop
mov
js
add
add
shlb
mov
gs
add
add
ficoml
scas
icebp
jbe
add
addb
add
add
ficomps
cwtl
nop
leave
add
push
add
sub
pop
rol
push
lea
push
push
push
push
push
push
lea
push
call
mov
in
fldenv
pusha
add
push
add
add
nop
jmp
fldl
ret
add
add
xchg
add
sti
add
adcl
test
add
ljmp
out
iret
mov
loopne
lcall
add
loope
mov
push
push
push
push
push
push
call
add
test
imul
leave
movsl
xlat
add
add
add
push
fildl
pop
jno
lcall
mov
jns
add
add
mov
add
add
add
mov
mov
add
xchg
shl
add
add
jge
fcomps
fcomps
push
dec
inc
pop
cmpb
jne
push
push
lea
push
lea
push
push
push
push
push
push
call
shlb
push
mov
mov
add
mov
je
in
lds
filds
int
add
mov
add
pushf
mov
add
add
add
jo
data16
nop
add
scas
add
add
hlt
loopne
xchg
add
mov
in
fdivr
lcall
inc
pop
ss
push
xor
rol
inc
not
pop
cmp
je
push
push
lea
push
push
call
lods
add
stos
sbbl
xchg
add
jge
mov
pop
add
rcrb
add
mov
jno
bound
add
je
pop
fadds
add
mov
bound
in
pop
mov
ret
popa
add
add
mov
scas
pusha
jne
sti
add
sub
pop
add
push
xor
add
inc
pop
cmpl
jne
push
push
lea
push
call
roll
out
jp
scas
scas
add
enter
add
lcall
pop
add
stc
add
addb
add
cld
out
out
jle
movl
add
int
add
add
add
flds
lcall
rclb
pop
pop
pop
push
push
push
push
call
mov
add
add
cmc
xchg
add
add
mov
mov
push
add
add
in
lock
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
loopne
mov
fcompl
jmp
js
mov
jmp
leave
add
add
add
cmpsl
pop
add
add
add
add
add
mov
movsb
mov
add
sub
pop
pop
pop
push
lea
inc
pop
leave
ret
push
inc
shl
not
pop
mov
push
rol
pop
add
push
ror
add
sub
ror
pop
push
push
push
push
push
push
push
push
push
push
push
lea
push
call
mov
and
mov
add
insb
pop
add
add
test
mov
push
add
fwait
add
clc
lds
add
ret
push
push
push
push
lea
push
push
call
icebp
mov
mov
fmul
jge
lods
add
add
jp
ficompl
add
fsubr
mov
add
mov
pop
add
add
mov
add
lret
add
out
bound
rolb
call
mov
popf
sti
mov
in
lcall
add
mov
sbb
insb
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
mov
xchg
add
jae
xor
loopne
test
add
popa
add
push
add
pop
stos
add
bound
cld
pop
scas
mov
add
mov
dec
popf
lods
sahf
loope
add
add
test
popf
stc
pop
add
adcl
add
pop
testw
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
cmc
jns
add
std
add
push
jmp
add
js
add
test
stos
add
xlat
xchg
ficomps
add
movl
add
mov
sub
pop
pop
push
shr
rol
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
call
insb
les
add
popa
add
add
add
arpl
add
xlat
add
mov
mov
add
rolb
xlat
add
add
add
jge
add
xchg
push
mov
cld
in
mov
in
fdivr
lcall
push
push
push
push
call
add
add
mov
ficompl
mov
add
xchg
pop
add
out
loopne
mov
addl
sub
pop
call
xor
push
add
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
lcall
jmp
jecxz
stc
mov
mov
push
jmp
add
add
test
jns
add
add
cmpsb
aam
add
pop
jecxz
fiaddl
scas
popf
jnp
mov
mov
add
shr
add
loope
add
mov
mov
xchg
add
lcall
lock
sub
pop
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
orb
js
add
jne
add
add
jno
add
add
add
test
jno
lds
arpl
pop
push
push
push
push
call
add
fiaddl
add
add
roll
hlt
cmpl
hlt
int3
add
test
add
iret
add
insb
fxch
add
pop
add
mov
mov
mov
add
add
lods
add
imul
push
add
mov
jno
std
sub
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
rcl
cmpl
popf
add
add
cmpsb
add
lcall
xor
add
stos
add
add
mov
add
add
add
mov
into
add
add
sarl
mov
lcall
push
lea
push
push
push
call
iret
jmp
mov
outsl
add
out
loope
mov
push
test
add
pusha
movsb
push
add
in
addl
add
add
lock
lcall
or
push
lea
sub
shr
pop
push
push
shl
add
shr
add
pop
mov
push
push
push
call
hlt
loope
out
add
je
add
ret
mov
add
add
mov
loope
cmpsl
cwtl
cwtl
add
add
mov
jnp
mov
in
mov
add
push
sub
pop
add
push
push
lea
push
push
push
lea
push
push
call
add
mov
rcl
add
roll
push
fiadds
imul
loop
sahf
aad
aad
jb
jecxz
add
gs
in
nop
add
mov
mov
test
sahf
add
roll
add
test
jb
add
fwait
shll
add
sub
pop
push
push
lea
lea
pop
push
push
lea
push
push
call
add
stos
add
cli
add
add
add
into
sarl
mov
add
sahf
add
add
add
add
push
mov
flds
add
enter
add
add
jae
testb
add
add
ja
std
ljmp
push
les
in
hlt
lcall
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
pop
mov
gs
data16
push
pop
add
lods
fildl
add
add
repnz
ja
add
add
jne
add
add
pop
mov
push
push
push
push
call
stc
lods
add
loopew
add
fistpl
jnp
add
movsb
add
rclb
in
pop
xlat
outsl
fidivl
add
repnz
data16
push
sahf
fsubrl
fistl
movsb
mov
mov
scas
add
xchg
mov
lock
lcall
push
rol
pop
pop
push
push
push
push
call
mov
mov
leave
pop
add
lea
add
hlt
add
xchg
int
xlat
mov
pop
movb
cld
iret
fidivrl
lea
popf
test
add
ja
add
xchg
std
loope
add
mov
sub
pop
lea
sub
push
shl
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
addl
add
cwtl
incb
add
test
cltd
out
in
add
add
jmp
add
add
fwait
add
add
lea
pop
in
mov
add
mov
add
stc
xchg
mov
push
call
incb
fmul
sub
pop
shr
push
lea
push
push
push
call
shrl
add
hlt
jo
add
jno
add
out
mov
push
add
add
cld
fildl
add
add
pop
mov
in
lock
lcall
fimull
xor
pop
add
pushl
push
lea
push
push
push
call
mov
test
flds
add
xchg
add
add
push
in
jbe
mov
push
jecxz
add
lds
add
lock
sahf
orb
mov
lods
jmp
add
pop
js
lea
add
lcall
inc
clc
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
pop
rolb
add
out
pop
shr
add
mov
add
add
pop
add
add
hlt
xchg
lahf
xchg
mov
in
mov
neg
add
aad
add
popf
xchg
out
stos
flds
add
add
cli
add
aam
ja
add
add
add
add
jno
fisubrl
in
fcompl
stc
xor
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
xchg
leave
pop
add
mov
shrl
fwait
mov
lahf
add
mov
add
add
jne
add
push
pop
scas
gs
jbe
mov
add
out
push
pusha
stos
add
add
add
fldl
call
lcall
adc
push
push
push
push
lea
push
push
push
call
push
gs
mov
add
add
scas
in
jno
add
scas
test
mov
mov
lods
xchg
std
iret
add
repnz
add
add
add
mov
loope
in
in
mov
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
std
stos
mov
add
jnp
mov
movsb
mov
pop
add
add
xchg
jnp
add
xchg
add
arpl
cwtl
add
add
pop
add
stc
incb
push
xchg
xchg
lods
jl
mov
mov
in
fcomps
rclb
call
mov
addr16
add
jge
add
je
jecxz
fsub
mov
cwtl
jp
add
mov
fs
test
add
jge
cli
out
fmuls
add
push
pop
in
jo
rolb
jbe
add
add
xchg
add
in
jecxz
mov
add
rolb
push
lea
push
lea
push
push
call
rcrl
add
add
add
add
add
cmpsl
mov
xchg
add
popf
jno
add
outsl
pushf
jp
cmpsl
add
add
loop
stc
add
std
mov
add
xchg
add
call
add
push
lcall
popa
loop
in
in
lcall
push
lea
push
push
push
lea
push
push
call
out
fs
add
cmpsb
add
push
add
add
icebp
fiaddl
out
add
push
mov
movsl
popf
call
add
sub
pop
nop
push
shr
pop
xor
push
inc
shl
pop
nop
push
push
push
push
push
push
push
call
scas
add
lods
movsl
add
lock
add
icebp
test
add
add
jnp
lcall
push
in
add
add
add
push
repnz
cltd
add
add
mov
sub
pop
nop
push
inc
xor
pop
inc
push
add
not
lea
pop
nop
push
lea
shl
sub
pop
nop
push
lea
push
lea
push
push
call
fs
ret
fcmove
icebp
in
ja
fistpl
add
add
fcmovbe
add
push
mov
add
add
std
std
cld
movsb
pop
stos
lcall
lcall
cmp
jne
add
push
shr
pop
nop
push
rol
rol
sub
pop
nop
push
shl
pop
cmp
je
push
sub
pop
nop
push
lea
push
call
cmpsl
mov
arpl
cltd
cltd
lcall
add
rol
add
push
push
jb
add
mov
out
xchg
clc
aam
add
xchg
out
xlat
pushf
arpl
mov
jle
mov
add
xchg
loope
divb
add
add
movsl
popa
les
add
add
pop
add
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
mov
rcl
xchg
add
rolb
fwait
lahf
sti
add
pop
aam
scas
int
out
mov
jecxz
add
jae
add
add
sub
pop
inc
push
dec
pop
nop
push
push
push
lea
push
push
lea
push
call
add
add
add
add
jge
push
out
loop
add
add
lea
mov
fiaddl
lods
jb
add
add
add
add
jo
add
addl
movsl
mov
fadds
fsubrs
mov
bound
mov
lcall
cmp
jb
push
lea
push
push
push
push
call
movsl
pop
jnp
add
cmc
pushf
subl
scas
scas
push
mov
mov
pusha
incb
push
add
jmp
aam
add
sarl
add
add
stos
sahf
add
add
add
push
mov
xor
push
push
lea
push
push
call
cli
je
pop
insb
jb
out
add
add
add
addb
in
add
scas
add
not
add
jae
push
add
mov
iret
mov
add
lcall
or
rol
inc
sub
shl
pop
mov
push
lea
push
lea
push
push
lea
push
push
call
shll
push
add
fmul
add
add
add
cwtl
ret
mov
icebp
clc
insb
imul
test
add
ret
jl
loop
add
mov
add
jne
mov
add
fiaddl
xchg
in
movsb
pop
xchg
xchg
std
shl
add
rcll
push
push
lea
push
push
push
push
call
jmp
add
test
fs
mov
jae
int
mov
add
add
int3
add
add
mov
add
stc
arpl
pushf
aam
loopne
fwait
mov
loope
add
mov
add
test
faddl
icebp
in
push
outsl
mov
stc
add
cmpsl
sub
pop
movzwl
push
push
push
push
lea
push
push
push
lea
push
call
popf
jno
add
popf
mov
pushf
xlat
scas
jl
jns
mov
addl
leave
jmp
mov
add
xchg
movsb
sarl
add
add
test
testb
add
mov
push
add
pop
add
push
push
push
push
push
push
call
add
add
push
loope
mov
movsl
test
add
add
ja
leave
add
add
jle
add
test
fwait
add
mov
test
jbe
loop
add
push
push
add
add
in
xchg
lcall
cld
push
sub
pop
mov
xor
push
ror
pop
xor
shl
push
pop
xor
push
lea
not
inc
pop
shl
push
push
lea
push
push
call
mov
imul
scas
divl
sti
pop
stos
add
nop
lds
insb
out
leave
add
pop
fdivrs
jae
jne
mov
add
add
mov
shll
add
add
add
jmp
mov
in
lock
xor
shl
push
inc
pop
xor
push
xor
pop
mov
add
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
mov
jns
mov
add
testl
test
arpl
mov
test
mov
mov
insb
lret
cmpb
lods
mov
add
jmp
add
add
divb
push
add
add
les
add
movsl
sub
pop
pop
push
push
lea
push
push
push
call
add
mov
add
xlat
add
add
add
add
test
fsubrs
push
push
push
mov
add
add
in
in
pop
pop
push
not
pop
pop
pop
push
rol
pop
leave
ret
push
lea
xor
pop
push
push
push
push
lea
push
call
add
addb
movsb
jp
add
add
push
xchg
jne
add
add
push
add
enter
hlt
push
add
add
sbbb
lock
mov
push
push
push
lea
push
push
push
push
push
call
int
add
add
add
pop
xchg
mov
mov
add
je
push
pop
pop
add
add
push
add
ljmp
push
push
push
push
push
lea
push
call
add
roll
mov
pop
mov
movsl
add
lods
add
test
add
pop
add
add
loopne
mov
add
mov
sub
pop
push
push
lea
shl
pop
push
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
sti
add
fcomp
add
repnz
pop
mov
add
add
lods
cld
xchg
ljmp
add
movsl
xchg
mov
add
lods
gs
lds
add
jl
fdivs
push
fs
clc
cmpsl
add
lret
mov
fsubrs
sub
pop
mov
mov
push
not
pop
test
je
mov
push
rol
inc
shl
pop
test
je
push
pop
mov
mov
push
not
dec
pop
mov
push
lea
push
call
pop
call
add
add
addb
xchg
add
mov
pusha
add
jbe
std
xchg
add
add
shl
aad
aad
push
mov
in
add
fildl
lcall
push
lea
push
push
call
xchg
mov
add
xchg
add
pushf
mov
lods
mov
add
mov
add
add
pop
outsl
mov
jno
xchg
loope
push
xchg
add
xchg
fnop
add
pop
mov
add
add
stos
icebp
pop
add
add
mov
fs
pop
cmp
je
test
je
push
xor
pop
mov
push
push
push
push
push
push
call
sbbl
jb
add
roll
add
stc
add
mov
in
add
loope
add
xchg
add
leave
add
mov
mov
add
add
insb
add
add
add
loope
mov
test
in
call
push
call
mov
rcll
sarl
cli
loopne
cwtl
xchg
ljmp
clc
add
neg
add
add
add
mov
sub
pop
cmp
je
test
jne
push
shl
dec
pop
xor
push
push
call
add
mov
pop
push
mov
enter
pop
add
repnz
addl
add
add
pop
call
jmp
in
pop
testb
add
fsubr
in
jbe
imul
add
fsubp
bound
hlt
in
add
icebp
mov
pop
push
push
push
push
call
aam
add
shr
test
mov
lods
add
add
mov
cmc
jnp
xchg
add
mov
add
add
add
movl
xchg
jp
add
popf
xchg
add
in
lock
pop
push
add
not
pop
pop
push
inc
xor
pop
pop
leave
push
ror
pop
ret
push
shl
sub
pop
mov
push
ror
dec
pop
inc
push
lea
push
push
push
push
call
push
fistpll
add
loopne
add
pop
add
add
scas
jmp
add
add
jmp
add
mov
jge
add
add
outsl
flds
lock
push
push
push
push
lea
push
push
lea
push
call
mov
rcr
in
add
lret
pop
mov
push
les
mov
mov
out
out
aad
out
add
jbe
mov
sub
pop
lea
push
dec
pop
mov
push
ror
not
dec
pop
test
je
push
ror
lea
shr
pop
mov
push
push
push
call
add
movsl
add
rolb
fstl
add
enter
andl
add
add
xchg
add
lret
loopne
add
hlt
pop
add
push
push
call
loopne
add
mov
add
pusha
lret
fiadds
add
jl
add
fiaddl
add
jmp
lahf
lcall
cwtl
add
add
push
pop
test
jno
popa
mov
in
clc
lcall
loopne
test
cld
decl
enter
je
push
push
push
call
mov
add
add
fwait
cltd
add
test
in
in
add
add
rolb
add
sub
pop
mov
push
push
push
call
add
mov
aam
add
lds
pushf
add
add
scas
jo
add
sahf
movsb
stc
jo
xchg
add
add
roll
pop
add
xchg
add
test
add
stos
add
add
add
std
addb
push
xchg
push
mov
in
hlt
lcall
roll
loopne
test
call
sarl
xchg
sub
inc
shl
pop
jmp
xor
push
lea
push
push
push
call
add
add
add
jp
outsl
test
cltd
addr16
add
add
testb
fwait
out
jecxz
add
mov
push
stc
xchg
outsl
mulb
add
add
add
add
push
popl
pop
jge
sub
pop
pop
push
lea
push
lea
push
call
jle
popf
add
jl
add
icebp
add
jge
pop
push
arpl
in
push
insb
add
jle
add
stos
mov
add
add
out
mov
stos
bound
add
leave
add
test
cmc
jns
mov
add
arpl
rcl
add
imul
sub
pop
pop
push
lea
push
push
push
push
push
call
add
add
mov
add
les
fldenv
int3
push
add
loope
ret
pop
add
add
add
jmp
loopne
mov
mov
add
outsl
in
ret
add
in
call
lea
push
push
call
stos
add
add
movsl
add
mov
add
add
mov
jnp
iret
mov
lahf
add
lock
mov
pop
loopne
faddl
mov
add
jp
cmpsb
mov
popf
add
ret
add
add
add
jns
in
lock
pop
push
shr
shr
pop
leave
push
not
inc
sub
pop
ret
lea
push
add
lea
pop
pop
push
push
call
add
add
add
int
add
cmpsb
cli
arpl
add
lea
enter
imul
lret
mov
nop
jp
pop
add
pop
aam
add
add
add
add
sub
pop
pop
push
lea
dec
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
call
add
scas
int
jb
add
push
add
mov
rcl
add
test
mov
cmpsb
add
add
movl
mov
jbe
push
xchg
add
loopne
mov
mov
idivb
lcall
push
shl
pop
leave
push
lea
add
pop
ret
push
lea
add
dec
pop
mov
pop
push
lea
push
push
push
call
popa
out
add
add
popf
add
rcl
jmp
add
nop
add
jae
arpl
lods
jae
add
add
fdivrl
add
push
xor
inc
pop
pop
push
push
push
push
push
push
push
push
call
test
rclb
enter
add
std
xchg
mov
add
imul
data16
in
popf
jecxz
add
cmpl
add
loopne
arpl
add
pop
add
add
roll
add
mov
add
in
loopne
pop
push
push
push
lea
push
call
add
add
add
add
clc
add
test
add
fbstp
icebp
mov
mov
add
add
add
cltd
mov
je
add
jle
add
fwait
hlt
add
leave
mov
js
xchg
out
pop
add
lcall
push
lea
push
push
push
lea
push
push
lea
push
call
movsl
int3
lahf
mov
add
js
mov
gs
jmp
add
push
jnp
push
add
sahf
in
movsb
mov
rolb
mov
add
add
roll
cmpsb
pop
sub
pop
ret
xor
cmp
addl
adc
and
adc
dec
cmp
arpl
cmp
xchg
cmp
xor
adc
jb
adc
mov
add
rorl
push
pop
adc
lock
pop
fldenv
arpl
mov
sbb
push
mov
mov
push
mov
es
push
or
xchg
into
dec
imul
stos
scas
aas
sbb
fsubl
nop
sti
xor
push
sbb
jo
xchg
std
in
lds
push
stc
xorb
or
loope
cmp
push
fisttpll
leave
in
push
bound
jns
pushf
test
ret
std
adc
or
jecxz
cmpsl
das
stc
scas
je
xor
mov
fisubrl
jnp
repnz
push
rcrl
inc
cmp
or
push
idivl
xor
xor
ja
iret
mov
jns
in
adc
sub
in
imul
rorb
sbb
cmp
add
or
xchg
or
int3
xchg
xorl
dec
jnp
add
xchg
arpl
mov
inc
sbb
js
add
loop
add
scas
inc
lods
bnd
push
push
inc
cs
sbb
lods
fnstsw
out
jg
repnz
mov
std
mov
xchg
test
fbstp
mov
mov
sti
pop
add
add
push
cmpsb
aad
sbb
inc
xchg
lcall
or
pop
mov
sbb
pop
pushf
ret
pop
aam
push
xchg
loop,pn
into
insl
dec
repz
lods
int
imul
scas
mov
ss
xlat
mov
and
inc
jp
aam
lcall
or
out
or
add
adc
or
daa
out
pop
mov
push
mov
addr16
xor
int
repnz
roll
fisubl
lea
lahf
gs
inc
jae
sub
insl
icebp
pop
repz
mov
push
nop
test
cmp
pushl
cli
push
fdivrp
iret
mov
data16
and
lret
xor
cld
iret
test
sub
loop
lods
dec
push
ds
cmp
in
and
inc
xchg
mov
and
call
dec
in
fsubp
pop
fidivl
jnp
por
push
add
lahf
addr16
test
lods
nop
push
xchg
fidivrl
hlt
test
xchg
mov
int3
push
mov
outsb
iret
cld
cli
dec
pop
mov
test
xor
jecxz
test
mulb
scas
rcrb
insb
nop
mov
inc
pop
dec
or
scas
pop
push
pop
outsl
pop
enter
inc
sub
mov
xchg
lea
mov
lods
jae
jbe
jge
sub
cld
out
loop
sub
fabs
jbe
sub
stc
xchg
xor
dec
jb
or
call
push
add
cltd
xchg
push
mov
or
outsb
mov
out
sub
cs
pop
fnstcw
aaa
dec
scas
sahf
imul
mov
mov
pop
dec
in
ds
test
mov
sbb
mov
mul
mov
xor
push
enter
loope
cmp
adc
test
adc
add
adc
ja
je
std
add
fstps
pop
push
dec
fs
pop
mov
sub
std
add
push
in
popf
fsubrl
mov
xor
inc
add
mov
or
pop
clc
stos
pop
add
std
dec
jno
fmuls
cld
cmp
movsl
call
inc
andl
notl
repnz
mov
nop
sub
stos
jge
sbb
add
daa
mov
ss
mov
int3
mov
inc
or
mov
in
gs
mov
stc
movsb
test
stc
sub
cli
adc
scas
add
ds
in
mov
xor
xchg
sbb
jae
sub
lea
jns
sub
sub
jb
jle
mov
in
test
scas
sub
mov
rcrl
xchg
in
out
ss
push
pop
decb
xchg
mov
out
adc
jne
add
cld
mov
lds
shlb
jne
or
inc
sbb
push
and
xchg
cwtl
sbb
ret
xchg
movsl
xchg
enter
in
out
xchg
test
jg
mov
roll
xor
mov
rcrl
dec
mov
int
xor
and
jle
add
jnp
fsubs
sbb
test
adc
mov
pop
lahf
rcrb
dec
mov
xchg
xor
xchg
add
pop
sbb
add
jae
or
and
cmp
mov
stos
ficoml
imul
mov
int
lods
mov
mov
incb
dec
xor
jmp
outsl
pop
ss
sbb
shlb
int3
rolb
out
data16
adc
js
test
inc
cwtl
lods
out
jno
mov
mov
mov
mov
or
xor
pop
inc
adcb
fstl
sbb
xor
repz
sbb
sarl
adc
add
lods
fbstp
mov
ret
out
imul
loope
mov
xchg
cltd
loop
sahf
cmp
stos
mov
pop
mov
cmp
fs
mov
mov
dec
ret
inc
fiaddl
mov
and
insl
scas
push
lods
mov
xor
mov
sbb
mov
fwait
mov
push
or
movsb
adc
mov
cmp
add
in
insl
call
push
repz
addr16
adc
nop
test
fstps
jl
inc
sub
je
or
lret
sbb
jl
loop
rcr
xlat
cmp
mov
gs
pop
into
jge
in
sbb
lea
aad
ret
adc
rcl
xchg
iret
insb
jl
add
int
bound
xchg
out
stc
jecxz
pop
lcall
mov
mov
loopne
ret
nop
add
jne
pushf
addb
sahf
xchg
fdivrs
add
iret
dec
mov
shll
loope
xor
xor
lahf
mov
cmpl
movsl
jb
in
push
cli
ret
scas
jns
in
in
add
faddl
mov
sarl
adc
das
mov
loop
scas
stc
jmp
xchg
sub
or
shrb
cli
lret
xchg
jb
mov
outsl
pushf
xorb
mov
cmc
rorb
das
icebp
nop
adcb
dec
lahf
push
mov
push
inc
mov
push
mov
pusha
push
jne
xchg
xchg
sub
and
stos
mov
inc
js
sbb
stos
dec
clc
pusha
adc
filds
sub
xor
xlat
sub
sbb
ret
add
jne
insb
icebp
mov
add
cmp
inc
xchg
dec
sahf
fs
clc
cmpsb
nop
mov
push
mov
imul
repnz
xor
pop
cmp
add
sbb
jae
out
pop
push
fmull
xchg
ret
sbb
je
lods
inc
push
pop
or
sahf
fdivrp
dec
insb
mov
mov
int
ss
icebp
pop
jge
orl
pop
mov
xor
sarb
add
cld
fisubrs
mov
ret
fnstcw
dec
jno
mov
loope
ret
pop
andb
adc
fs
mov
inc
addl
inc
fadds
lock
cmp
gs
push
fs
inc
xor
cltd
test
pop
and
stos
aad
mov
jmp
rorb
xchg
dec
lods
xchg
in
insl
cltd
mov
dec
addr16
mov
push
sbb
aaa
dec
push
pushf
jnp
lret
pop
adc
mov
out
popf
lock
mov
lods
sahf
out
inc
mov
std
adc
insl
push
or
clts
sub
test
stc
jle
ds
mov
dec
jo
pushf
lahf
adc
jo
call
xchg
jbe
xor
test
in
shl
push
xchg
push
pop
loopne
dec
fwait
mov
scas
inc
sub
mov
fidivl
mov
cmp
mov
pop
cmpsl
xchg
dec
and
bound
push
push
jle
imul
xor
sub
sbb
notl
sbb
ret
jecxz
cmp
loop
jbe
jl
lret
outsb
cmp
enter
dec
aas
in
jle
or
xchg
adc
std
sbb
shlb
pop
jge
adc
sahf
jg
jb
xlat
mov
mov
ret
cmp
lahf
fisubrl
inc
ss
or
sbb
add
mov
cwtl
iret
out
xor
push
cmp
add
inc
scas
arpl
push
mov
das
test
fwait
out
lret
idiv
sbbl
negl
push
daa
ss
mov
fucomip
aaa
aad
stos
push
push
clc
lock
test
cs
mov
mov
insb
out
call
adc
test
pop
ret
xchg
lret
mov
jnp
mov
xor
in
push
xor
xchg
or
mov
ljmp
xchg
adc
loope
aad
loopne
sti
fdivs
cltd
xorl
pop
mov
xor
clc
and
adc
ret
lahf
aaa
or
and
aas
dec
mov
testb
movsl
repz
into
pop
jg
jg
aam
jle
roll
dec
sub
and
std
fsubr
arpl
test
mov
pop
mov
cmp
push
adc
xchg
iret
in
movb
jecxz
jg
js
test
lcall
jns
push
add
add
and
cmp
adc
hlt
fstl
in
cmp
add
pop
inc
adc
fwait
jl
cmp
adc
scas
xchg
data16
xchg
jb
pop
mov
imul
and
pop
push
xor
outsl
test
xor
and
lods
shlb
fcompl
movsl
shlb
add
mov
movsl
or
sub
lock
and
adc
sbb
das
cmp
mov
cltd
or
xchg
aas
pop
mov
sub
rcrb
pop
pop
gs
cmp
dec
adc
jmp
xor
mov
repnz
add
das
mov
mov
and
adc
das
jbe
cmc
ret
cmp
cs
fnsave
call
mov
xlat
jmp
jno
jb
jg
cmp
add
xchg
mov
pop
xor
lret
or
jl
jno
imull
push
pop
push
dec
mov
sahf
sub
mov
std
mov
scas
into
mov
push
push
inc
es
sub
pop
push
mov
push
sub
dec
call
xchg
xor
jnp
rclb
loope
lahf
in
sub
pusha
addr16
fdivl
adc
adc
test
inc
mov
xor
adcl
mov
filds
rcll
jecxz
loop
jle
es
mov
cmc
fbstp
data16
push
jl
dec
mov
cld
fildll
and
clc
and
ret
in
loop
in
or
push
call
lea
out
shll
movsb
loop
xor
inc
adc
xorl
repz
mov
add
hlt
cltd
lret
ljmp
pop
icebp
lock
pop
js
jecxz
dec
sbb
dec
xchg
pop
and
aam
daa
enter
repz
add
adc
out
mov
push
je
push
pop
pushl
inc
out
cmp
xchg
xchg
dec
or
push
iret
insb
cltd
pop
sbb
mov
repnz
data16
frstor
outsl
outsb
xor
push
cwtl
jp
mov
scas
sbb
aaa
fwait
loope
ss
dec
pcmpgtd
inc
jle
push
push
imul
pop
push
inc
test
cmp
and
test
imul
insb
and
and
daa
cmpsb
rcll
mov
test
mov
pop
jmp
or
xor
and
sbb
sbb
sahf
mov
mov
or
mov
mov
dec
inc
gs
inc
repnz
adc
adc
dec
jl
and
inc
push
sbb
fimuls
call
mov
xlat
imul
data16
rorl
xchg
cmp
jo
mov
push
mov
xor
addr16
rolb
xor
xchg
insl
sti
xchg
mov
jle
hlt
cwtl
dec
dec
ljmp
cltd
dec
jae
mov
pop
addr16
mov
cli
gs
or
mov
push
ret
sahf
js
fmull
cltd
push
outsl
test
cmp
dec
popf
cs
mov
jne
mov
les
add
test
andl
mov
out
aad
mov
insb
aas
sbb
mov
lods
sbb
data16
cmp
dec
mov
or
int3
ss
add
aad
mov
jbe
push
inc
jg
dec
ljmp
outsb
jge
ret
aad
xor
mov
mov
lods
out
cmp
push
xchg
aam
xchg
fs
and
test
es
je
movsb
mov
lcall
inc
arpl
imul
mov
sub
lahf
push
jbe
jnp
push
cwtl
out
mulb
and
jg
sbb
sub
push
cmp
jbe
or
dec
xorl
and
inc
test
lcall
push
sbb
inc
clc
stos
pop
xorl
xchg
jbe
int3
mov
sbb
call
mov
out
ds
mov
fisttpll
lock
out
test
dec
data16
pop
dec
rcrb
xchg
xor
xor
ret
pop
test
dec
cmp
das
stos
push
inc
scas
adc
adc
cmp
xor
add
fldt
pop
sub
cmpsl
sub
cmp
adc
xchg
mov
ret
mov
inc
xor
sub
xor
data16
jns
les
sub
inc
stos
xchg
mov
popf
fisttpl
int3
lahf
adc
or
sub
xchg
cli
mov
mov
add
cmpsl
gs
xor
bnd
aas
je
mov
xor
test
sub
andl
adc
inc
daa
lods
inc
xchg
mov
mov
push
jl
mov
pop
dec
inc
fwait
inc
jg
leave
loopne
xchg
and
gs
ss
jno
fmul
push
jp
mov
xorl
pop
cmp
mov
adc
cwtl
bound
pop
or
repz
and
xor
dec
pop
data16
fdivs
inc
mov
xchg
push
adc
insb
out
fs
xchg
mov
mov
ds
xor
or
sub
inc
orl
adc
out
icebp
xor
push
pop
pop
add
rclb
outsb
fstps
loop
iret
popa
or
out
pop
dec
jb
int3
inc
bswap
mov
push
insl
shll
enter
rorb
sbb
jge
mov
cs
cmp
subl
loop
mov
rcll
jbe
pop
frstpm(287
pop
push
icebp
movsl
push
dec
lcall
in
leave
pop
cmp
xor
fwait
xor
sbb
xchg
push
cmpsl
inc
push
mov
mov
sahf
push
out
push
mov
test
inc
xchg
lods
add
lret
inc
aad
js
sbb
cmp
cs
adc
pop
and
mov
decl
scas
jb
adc
xor
push
data16
addr16
and
mov
imul
lret
flds
inc
popl
fadds
push
bound
je
adc
jg
cmpsb
test
add
or
cmp
cwtl
std
push
fwait
mov
in
jo
sahf
sbb
jg
add
testb
nop
jbe
xchg
mov
mov
adc
cmpsb
popa
sbb
divl
popa
xchg
and
add
mov
test
fsubrl
cmp
xchg
idivb
add
jae
aad
imul
jmp
push
dec
sbb
stos
aam
mov
pusha
clc
cmp
adc
fbstp
or
sbb
push
jns
mov
mov
mov
loope
jge
mov
xor
je
ja
pop
cmp
cmp
test
jle
daa
xchg
push
mov
sti
lock
adc
sbb
pop
andb
scas
jnp
cmc
cmc
xor
jb
fwait
iret
in
or
test
mov
sub
enter
jno
pop
mov
add
pop
jo
or
out
xchg
sbb
dec
add
out
shll
das
cmpsl
dec
push
fcoms
movsb
sub
add
push
rcrl
jl
push
pop
dec
leave
aam
mov
ds
mov
lret
and
rol
push
sub
xor
cmpb
push
inc
sbb
xor
xor
bound
mov
pop
jl
adc
jo
dec
divl
cmp
inc
jae
add
jp
lret
pop
jnp
push
and
mov
xchg
into
inc
outsl
cmp
and
adc
cmpsl
je
ljmp
jo
xor
int3
rcrl
or
xor
jbe
test
outsl
mov
movsb
in
in
into
jo
and
jle
cmp
mov
mov
sub
sbb
xor
add
mov
or
imul
cli
add
jmp
sub
das
sti
sub
loopne
aam
sbb
add
cmp
subb
inc
mov
push
inc
sahf
sub
clc
cmp
jmp
cwtl
pop
lret
fildl
in
xor
imul
sub
nop
cmpsl
mov
or
sahf
sub
fidivrl
movsl
in
inc
lods
sub
in
cmp
lret
add
iret
xchg
popa
jno
notl
inc
jg
pop
mov
test
dec
pop
repz
pusha
mov
ljmp
in
out
xor
pop
cld
or
out
mov
mov
in
out
mov
pop
or
lods
jl
adc
ljmp
lret
in
pusha
movsb
or
mov
inc
sub
push
lret
mov
cwtl
je
sub
mov
cmp
xorl
sub
push
mov
cmpsb
push
xor
or
dec
cltd
and
gs
out
push
add
xchg
popf
sti
std
mov
je
adc
dec
xchg
ljmp
sahf
cmp
idivb
lea
jae
stos
jp
add
aam
test
sub
adcl
shrb
cmp
call
mov
and
fistl
les
or
out
fbld
test
iret
adc
sti
scas
mov
fisttpl
insl
cmp
aas
sbb
ljmp
aam
test
jb
xor
push
pusha
inc
imul
adc
testb
xchg
and
pop
xchg
fidivrl
pop
push
cmpsb
pusha
into
mov
popa
mov
sub
not
adc
inc
adc
pop
adc
leave
push
cmp
jo
into
shrb
dec
aas
adc
mov
jl
outsl
fucomp
push
xchg
jnp
cltd
fisttpll
sub
mov
and
and
jle
jl
adc
jbe
mov
scas
lds
cmpsb
outsb
enter
xchg
andl
mov
jne
xor
cmp
jmp
and
nop
in
xchg
jns
aaa
xchg
xchg
sbb
lds
pop
and
jmp
cmp
in
pop
mov
and
push
add
shlb
js
ja
or
add
sub
add
insl
mov
push
mov
aas
mov
cltd
decl
inc
xchg
scas
icebp
loopne
xor
cs
sarl
dec
push
mov
rcrb
dec
mov
sub
xchg
imul
shlb
mov
lock
cmp
ja
sbb
mov
sti
add
dec
dec
rolb
sub
fcompl
xor
push
jne
mov
jnp
push
fistpll
scas
ret
fs
add
inc
in
popf
imul
jmp
mov
stc
lock
mov
in
std
mov
jno
lcall
movsb
and
mov
jge
enter
out
xor
xchg
andl
inc
pop
jmp
mov
inc
stos
stos
pop
adc
hlt
in
mov
mov
and
mov
mov
mov
xchg
mov
sub
fdivp
mov
xchg
add
shll
fimull
push
and
adc
int
add
cmp
call
dec
mov
dec
sbb
int
add
push
pop
and
jno
out
xchg
insl
fists
ljmp
jp
mov
hlt
and
jno
lahf
xchg
leave
jno
xchg
fs
cmpsl
repz
hlt
push
pop
fsubs
add
mov
shlb
arpl
sub
cmp
out
and
test
iret
stos
cltd
xchg
jb
unpcklps
lret
pushf
xlat
out
test
xchg
sbb
add
push
adc
nop
mov
or
mov
stos
cmp
fisubl
pop
xchg
mov
ss
dec
and
nop
aaa
icebp
mov
dec
inc
subl
and
hlt
push
mov
nop
jl
jne
or
lds
addr16
and
lock
or
cltd
or
out
sub
lods
inc
xchg
jo
xchg
xchg
adc
xchg
sbb
jl
push
hlt
xchg
add
adc
fiaddl
loopne
bound
cmp
cmp
add
mov
mov
ss
jmp
adc
dec
xor
cmp
fsubl
jecxz
xchg
hlt
hlt
push
mov
movsl
inc
mov
mov
or
sub
and
inc
pop
outsl
imul
call
inc
or
fwait
jl
fs
subl
cmpsl
pop
or
addb
sbb
js
and
aad
or
imul
inc
jne
sbb
inc
adc
adc
out
mov
imull
fst
test
mov
shrl
aam
mov
loop
mov
mov
cmp
daa
adcl
jb
stc
cld
jmp
aaa
out
mov
je
test
int
lock
inc
push
int
cwtl
mov
push
xlat
xor
popa
in
dec
sbb
addb
icebp
xchg
test
mov
pop
cmp
sub
pop
sahf
mov
movsl
dec
xchg
pop
xchg
pop
add
testl
or
hlt
cmp
sub
fmuls
pop
insl
lcall
push
cmpsl
push
push
div
mov
mov
pusha
enter
inc
rcl
xor
test
ljmp
pop
inc
jne
add
in
cmp
or
jp
insb
rolb
mov
js
mov
fsubs
inc
std
sbb
add
hlt
push
pop
es
inc
xor
xchg
adc
pop
push
out
mov
or
jb
mov
push
inc
fmuls
push
iret
fsubs
adc
inc
sbb
pushf
aaa
adc
adcl
jmp
insl
xorb
jl
mov
lahf
dec
inc
adc
int
frstor
out
test
xor
push
out
jp
stos
mov
cmp
movsl
in
add
fdivrs
mov
adc
or
enter
insl
jmp
sub
ds
out
fisubrs
mov
sar
jnp
inc
jecxz
jge
pop
cmpb
ficomps
push
daa
scas
sub
dec
adc
out
rorb
ss
mov
cli
inc
mov
mov
push
ljmp
add
add
xchg
pop
mov
xchg
push
sarb
jle
sahf
addps
das
sahf
sbb
imul
add
dec
sub
push
xchg
mov
sti
popf
pop
push
lock
mov
lods
add
add
sbb
cs
jecxz
dec
sub
sbb
shlb
shll
mov
xchg
push
addl
sub
nop
lahf
jne
jmp
jno
into
je
pop
sarl
xchg
inc
xorb
jge
add
pop
mov
add
inc
sub
inc
xlat
sbb
inc
xchg
in
sahf
sti
add
ja
sbb
push
add
or
repnz
out
jle
xor
pop
push
or
ja
fld
mov
xchg
int3
mov
lret
divl
mov
sbb
das
push
pop
push
cltd
aad
dec
jnp
cmp
neg
dec
push
enter
ret
jns
out
xchg
data16
add
sub
int3
mov
int
rol
mov
out
mul
adc
mov
mov
movb
test
lods
sbb
cmp
daa
adc
pop
cmp
movsl
in
lret
dec
inc
fcmovnb
jne
pop
sub
ja
dec
pusha
rcll
push
inc
stos
lock
xchg
pop
push
ss
nop
filds
imul
sub
lods
xlat
xchg
mov
xor
mov
in
loop
cltd
gs
inc
ljmp
xor
add
jmp
mov
xchg
cli
test
ljmp
cmp
inc
es
sbb
clc
stos
cmp
or
pop
fidivs
sub
pop
inc
or
cltd
leave
jl
jl
jge
mov
lds
insl
call
outsb
cmp
aaa
shlb
jl
sbb
mov
or
in
add
loop
daa
inc
jb
xor
pop
imul
in
mov
outsl
cmp
into
xor
add
lods
pop
js
loop
cmp
and
into
fbld
lret
mov
mov
loopne
pop
mov
movsl
jbe
xor
mov
add
popf
dec
mov
mov
sbb
inc
and
and
sub
pop
sbb
dec
sarb
sbb
adc
fs
sub
outsl
add
pop
insb
pop
jmp
dec
ss
pop
fldenv
xor
inc
pop
sub
int
dec
hlt
jmp
dec
sar
adc
jo
iret
scas
in
adc
lahf
push
div
arpl
dec
mov
rorb
mov
std
icebp
jb
mov
ficoms
and
sbb
add
xor
xlat
ret
sub
mov
inc
rclb
adc
inc
cmp
shll
dec
sbb
jl
push
push
jecxz
mov
dec
ljmp
inc
xchg
lock
fwait
mov
insb
dec
fcoms
sarb
fs
and
pusha
xlat
in
inc
mov
xchg
orb
and
mov
hlt
sbb
das
out
iret
pop
jecxz
xchg
cmp
hlt
xor
adc
rclb
or
in
xchg
ficompl
incb
sbb
jnp
stos
jo
xchg
dec
jge
out
leave
push
mov
jge
mov
xor
sub
iret
loope
mov
push
fisubs
rcll
popa
cmp
mov
mov
iret
xor
fbld
sahf
test
jmp
or
sbb
and
mov
hlt
sub
push
cmc
mov
je
cmp
out
adcb
sbb
fsubrs
xchg
int
cmp
das
ret
test
pop
enter
outsb
xchg
push
arpl
add
das
frstor
xchg
out
sbb
sbb
cmpsl
fcmovnb
pop
out
pushl
mov
cwtl
sbb
popf
xor
call
pop
aad
dec
cmpl
mov
dec
aas
mov
push
scas
subb
mov
or
jecxz
es
mull
xchg
lahf
aam
cmp
or
mov
xchg
lret
sarl
adc
xor
and
lock
lods
flds
pop
out
jecxz
adc
fcoml
popf
mov
push
andl
icebp
pop
cmpsl
imul
mov
fsubrl
ja
insl
outsb
lods
xor
xchg
call
cmpsl
dec
jp
stos
jl
pop
xchg
cmp
pop
dec
fisubrs
inc
sbb
out
shlb
les
cld
mov
or
xchg
mov
lods
notb
ficoml
pop
in
xorl
mov
out
aam
gs
ret
enter
pop
jecxz
and
adc
mov
inc
and
mov
and
leave
xchg
adc
decb
loopne
fistl
addr16
xchg
scas
or
icebp
jle
ljmp
push
jns
push
stos
dec
stc
addr16
adc
daa
daa
mov
popf
push
sub
mov
movsb
inc
cmp
cmpsb
inc
popf
jecxz
xor
out
fldenv
cwtl
xor
xor
cmpb
xor
and
add
sub
lret
aas
jb
test
scas
ljmp
xchg
incb
mov
jo
pop
clc
in
jg
sbb
sub
dec
sub
mov
shll
jnp
lret
loope
adc
dec
jl
cs
push
and
pusha
sbb
fildl
adc
lea
das
adc
sub
xchg
sbb
xchg
cmc
jno
push
js
lods
outsb
andl
fistl
shl
shlb
stos
mov
lahf
xchg
enter
popa
pop
test
pop
mov
pop
mov
mov
add
cmc
aad
pusha
cltd
fucom
push
shlb
push
in
sbb
inc
dec
out
repz
mov
jp
mov
mov
lret
add
add
outsb
mov
insb
xchg
aaa
inc
out
xchg
xor
and
add
cld
add
and
pusha
mov
add
or
mov
jecxz
insl
pusha
push
dec
cmpsl
adc
dec
push
imul
mov
push
test
mov
lcall
cwtl
or
pushf
pop
add
inc
aas
lods
sub
push
sbb
imul
rol
xchg
jge
daa
mov
icebp
xchg
fstps
adc
and
jl
add
das
out
add
std
fdivl
aam
xor
sarb
or
sar
mov
sub
stc
fldt
loopne
rolb
cmp
ret
repnz
int
inc
pop
sbb
push
sbb
mov
mov
mov
jg
xlat
xchg
pusha
inc
lcall
in
mov
lea
inc
sbb
aam
insb
in
cld
sti
mov
lds
xchg
inc
jns
and
or
push
sub
pop
fists
sub
seto
cld
call
or
pop
and
adc
xchg
iret
popf
jo
lock
leavew
cmp
mov
cmpsb
jle,pt
cmpsl
inc
out
imul
push
cld
shl
mov
lret
aas
sub
mov
push
mov
loopne
or
ret
out
push
push
inc
mov
xchg
jmp
cli
push
mov
cmp
mov
outsl
add
lcall
adc
cmc
push
push
mov
js
aad
and
add
pop
xchg
js
lret
movsl
fmull
mov
popf
mov
or
stos
sahf
jns
sub
shlb
xchg
int3
scas
mov
xlat
stos
pop
lea
sbb
rcr
mov
jne
iret
jle
popf
jb
rolb
mov
xchg
xchg
cltd
dec
pop
jb
ret
mov
xchg
jmp
push
push
mov
aaa
loopne
and
leave
push
dec
into
jnp
int3
lea
xor
or
enter
loope
pop
ffree
movsb
cwtl
sbb
dec
hlt
push
orl
pop
subl
mov
les
fstps
insl
mov
incb
fsts
pop
repz
shlb
xor
gs
pusha
mov
inc
xor
bound
or
xchg
mov
jae
pusha
cld
dec
hlt
jne
popa
add
add
orl
adc
pop
sbb
shll
int
add
fisubl
loopne
add
in
dec
jo,pn
mov
rorb
xchg
into
jle
testl
xor
mov
sbb
cmp
fwait
xchg
out
cmp
cli
xchg
adc
rcrl
mov
pop
aaa
lds
lock
cld
arpl
data16
popf
xchg
inc
xchg
ret
sub
pop
push
jae
jns
pop
or
idivl
mov
je
mov
or
out
clc
leave
adc
jecxz
mov
and
insl
std
fidivrs
pop
inc
jecxz
adc
sbb
mov
push
xchg
shl
cmpsl
call
ficompl
mov
hlt
inc
cmpsl
iret
jne
mov
mov
sbb
fsub
or
or
dec
cmp
cmpsb
or
aas
lahf
dec
test
lea
sub
lods
out
dec
dec
xchg
jae
daa
mov
lcall
hlt
sub
jge
jno
ret
fisttpll
mov
imul
inc
addb
pop
push
out
and
lret
lods
adc
imul
or
rcl
and
and
inc
aaa
sti
dec
jns
fistps
and
jnp
cmpsl
sub
sbb
dec
xor
add
shrb
xchg
ret
sub
popa
out
sub
out
add
jge
mov
shr
pop
lahf
test
jle
fcmovne
aam
adc
or
xchg
popl
nop
subl
lock
adc
and
call
stos
cmpsb
inc
mov
aas
fimuls
sub
xor
jb
cltd
mov
in
dec
hlt
cmp
loope
xchg
add
sbb
or
in
and
jl
jecxz
mov
and
in
stos
cwtl
pop
pop
jne
fsubp
ds
loopne
and
icebp
xor
pusha
xor
lods
subl
outsb
scas
xchg
aas
mov
dec
mov
xchg
dec
cmp
cs
lret
cmp
xor
sbb
push
insl
xchg
jg
sub
leave
cmp
dec
xchg
or
out
sub
ret
xor
movsb
add
add
scas
mov
push
call
push
fcoms
rorl
mov
insb
imul
fdivrl
out
jne
aaa
inc
sbb
sbb
inc
out
scas
or
ss
xor
and
adc
movsb
pop
cmpsb
xor
rcrb
ljmp
cmp
imul
pop
hlt
inc
xlat
pop
mull
sbb
or
outsb
xor
cmpsl
or
push
stc
jb
ja
daa
cltd
mov
out
xchg
push
push
cmpsl
jl
movsl
dec
movl
jns
testb
lcall
jne
fnstsw
pop
aam
std
fisubs
sti
addr16
int
xchg
mov
inc
push
xchg
sub
outsb
std
shrb
mov
xor
les
mull
inc
push
xor
mov
cmpb
fs
test
xchg
leave
cld
jb
into
into
and
xchg
pop
pop
adc
fdivrs
mov
cwtl
pop
jb
mov
ror
rcrl
jmp
insl
push
testl
shll
and
pop
js
pop
ljmp
into
add
push
pushf
xlat
push
jnp
inc
mov
jb
add
sbb
scas
inc
icebp
xor
call
js
cli
mov
test
and
std
pop
imul
xchg
es
cmp
cmp
cmpsb
insb
adc
dec
inc
sub
push
cmpsb
scas
mov
lods
inc
notb
xor
in
inc
int3
imul
mov
pop
push
xor
fdivs
xor
sbb
dec
cmc
sbb
xor
int3
jp
mov
filds
cmp
in
stc
lea
int
out
xor
jecxz
dec
cmp
add
int
sbb
sbb
fistpl
push
mov
jns
fildl
loope
movb
mov
in
lds
addr16
xor
clc
test
jg
das
frstpm(287
push
adc
add
xchg
cli
mov
cmp
mov
scas
mov
das
outsb
out
or
pop
jg
imul
test
movsb
repz
mov
lcall
jno
enter
jns
push
push
ret
repnz
scas
dec
sar
pop
stc
mov
xor
call
or
jb
lds
lcall
cmp
adc
dec
out
xor
mov
jae
lahf
bound
adc
loopne
cmp
mov
lcall
leave
jb
and
sub
push
les
bound
mov
mov
mov
dec
fistpl
cmpsb
adc
jno
add
roll
xchg
loop
shlb
mov
subb
cmp
xor
das
pop
jmp
fidivl
push
push
fidivrs
aas
mov
jg
sub
xchg
aad
imul
mov
or
aad
cmpsb
mov
dec
mov
adc
xchg
mov
mov
mov
int
push
aad
std
xchg
ljmp
cmp
dec
stc
push
in
mov
loop
imulb
adc
xchg
subl
andb
add
mov
enter
jmp
mov
and
inc
inc
jge
movsl
sub
lea
mov
cltd
sub
outsb
xchg
xor
mov
arpl
mov
data16
daa
call
shll
jo
inc
popf
dec
fs
xchg
jecxz
mov
mov
shlb
cs
and
iret
jg
imul
jae
jle
lret
mov
pop
push
push
notb
xor
xchg
mov
lods
cmc
lahf
sahf
push
push
rcrl
fldcw
lods
jns
adc
hlt
sub
adc
and
data16
ljmp
mov
mov
xlat
inc
mov
dec
aam
test
in
dec
xchg
decl
aas
imul
cmp
push
addr16
add
imul
jle
dec
test
mov
sbb
sbb
xorl
jae
push
mov
lahf
imul
int
push
xchg
inc
mov
rcll
inc
enter
push
adc
arpl
mov
je
add
mov
dec
and
repnz
jg
dec
inc
or
call
jle
sub
negb
repz
dec
lahf
outsl
test
test
testb
mov
je
add
je
xchg
mov
mov
std
int
jae
dec
fldl
fistl
pop
ja
pop
fistpl
lods
int3
sahf
adc
mov
add
mov
mov
cmpsb
jns
add
test
stos
outsb
jp
xchg
fcompl
mov
aam
scas
xorl
cmp
or
inc
sub
xor
or
mov
xor
lahf
ficoml
aaa
mov
pop
mov
sar
sbb
call
jge
cmp
xor
pusha
mov
xchg
add
inc
push
icebp
loop
hlt
push
mov
push
movsb
jno
int
jnp
aaa
movsl
lret
lods
icebp
andl
adc
cmp
adc
push
scas
mov
imul
stos
enter
iret
jae
pop
aas
jp
mull
adc
xchg
mov
sbb
arpl
or
xor
jns
cmovae
insl
inc
mov
mov
and
dec
in
daa
stc
ds
enter
dec
fcmovbe
add
push
adc
push
jg
adc
inc
xor
sub
orl
add
aas
ret
out
adc
jg
andl
sti
in
out
dec
scas
cmp
loop
cmpsl
or
stos
jb
inc
jae
push
cltd
cmp
leave
xlat
icebp
je
jmp
loope
push
push
adc
xchg
popa
pop
notb
sbb
lds
jle
or
aaa
sahf
sub
dec
sub
ret
sbb
adc
xor
out
mov
xchg
daa
mov
cmpb
mov
cmp
xchg
out
cli
fwait
adc
loopne
dec
mov
cmp
jl
push
test
inc
aam
sbb
xchg
jo
jmp
jmp
stos
mov
sub
xor
jae
xchg
push
inc
or
xor
iret
cmp
xchg
or
mov
icebp
test
lret
inc
jne
mov
mov
into
stos
dec
sbb
cmp
pop
or
aaa
inc
lods
popa
push
pop
and
mov
aam
hlt
xlat
jp,pt
dec
mov
enter
addr16
mov
dec
dec
hlt
jbe
sbb
cmpsl
aad
adc
jmp
adc
enter
es
sub
fstps
je
sti
clc
fdivl
cltd
divl
mov
testb
mov
aam
or
insb
and
sbb
hlt
xchg
insl
cmpsb
or
inc
ljmp
and
xchg
lea
sub
and
in
xor
xor
add
jmp
leave
dec
inc
and
lret
js
leave
xchg
aam
unpckhps
scas
in
mov
pop
jmp
addr16
xchg
ds
inc
shlb
fidivrs
js
mov
cmp
es
test
movsl
mov
scas
scas
mov
pop
push
stos
xchg
addr16
cmp
cmpsb
sahf
lds
adc
inc
daa
inc
mov
mov
cmpsb
push
je
xchg
repnz
outsb
add
repnz
aas
int
cmp
mov
lds
xorb
pop
ficoms
dec
fldl
je
mov
jg
addr16
aas
gs
imul
fiaddl
jg
sahf
sbb
jg
jecxz
mov
xchg
mov
or
retw
mov
aam
adc
lret
repz
pop
mov
mov
nop
mov
cmpsb
test
movsb
hlt
shlb
push
ljmp
xorl
out
xor
sub
xchg
or
shrl
lret
lods
push
mov
enter
and
std
imul
insb
cmpsl
pusha
aas
cmp
pop
lret
lods
icebp
subl
les
jp
sub
or
fs
les
jae
testl
mov
and
xchg
sub
sbb
xchg
jbe
or
std
mov
gs
sub
adc
or
sub
and
inc
pushf
cmpl
dec
sbb
jae
or
mov
pusha
dec
outsb
stos
lcall
jno
testl
inc
sti
xchg
into
cmp
push
or
xchg
out
shll
adc
inc
sub
mov
cmp
add
cmpl
dec
stos
lahf
repnz
insl
mov
cmp
and
data16
sub
cltd
xlat
xchg
mov
stos
shrl
rclb
scas
negl
out
sbb
and
push
or
jp
sub
les
jge
mov
ja
call
mov
clc
out
jae
fnstenv
mov
jb
mov
rsm
loopne
rcll
jle
push
pop
loope
arpl
das
lea
add
call
pop
stc
in
jns
and
inc
xchg
push
out
fcoms
mov
fistpl
inc
adc
pop
sub
add
movsb
push
clc
xor
mov
popf
test
adc
and
imul
repnz
pop
test
push
test
sbb
mov
cs
fs
rolb
adc
stos
test
je
xorl
lods
fmuls
mov
push
gs
mov
mov
call
pop
jmp
pop
ljmp
push
ficoml
dec
dec
popf
iret
mov
ds
inc
stc
mov
movsb
or
js
mov
add
and
mov
nop
and
fiadds
out
xor
sbb
lret
cmp
sahf
xor
mov
in
mov
push
outsl
cmpsl
jg
pop
loope
push
pop
js
mov
or
xchg
mov
sahf
pop
mov
cmp
int3
add
jnp
sub
or
jbe
out
mov
mov
inc
push
jo
dec
add
push
lock
jmp
cmc
loopne
repz
stc
push
in
js
shr
and
add
add
ja
xor
std
ja
inc
add
or
scas
sbb
orb
test
sbb
fistpll
je
andb
in
gs
pop
pop
leave
bound
cmp
loope
lods
or
mov
add
sbb
jb
sahf
sbb
shl
xor
jecxz
bound
pop
and
xchg
fldcw
push
gs
pusha
adc
sub
lret
pop
inc
xchg
scas
jl
dec
sub
mov
test
aam
xchg
mov
fwait
ret
inc
repz
sbb
testb
add
movsb
bound
mov
lret
sarl
mov
sub
push
imul
ds
mov
pop
pop
mov
jbe
mov
pop
daa
fcoml
push
stos
push
sbb
mov
and
inc
leave
mov
add
inc
push
sub
xchg
outsl
xor
push
adc
xchg
lret
push
jmp
data16
mov
inc
push
mov
inc
jnp
push
dec
push
shrb
scas
xchg
pop
add
sti
inc
in
xchg
jmp
fiaddl
jl
fcoms
lahf
inc
icebp
mov
inc
test
xchg
mov
mov
out
pop
fsubrs
seta
test
js
sub
jno
fisubl
int3
or
pop
and
cmpsb
xchg
fistps
into
rcrl
inc
jae
sub
push
test
mov
xchg
jns
mov
cltd
into
aad
push
aam
or
cli
ret
adc
or
lods
and
jge
pop
stc
inc
leave
stos
adc
sbb
lea
and
sar
dec
into
sbb
icebp
pop
das
aad
imul
push
sub
ss
rolb
lods
push
add
dec
ss
jnp
dec
icebp
ret
mov
fs
loop
push
cmp
je
mov
and
push
sbb
cmp
jmp
xchg
jns
loopne
movsl
daa
mov
dec
mov
fdivl
pop
fdivr
cmp
sahf
add
pop
int
fwait
xor
in
xor
mov
jnp
inc
dec
and
pop
cmp
jle
repnz
imul
stos
push
dec
pop
jg
in
je
lret
test
cmp
scas
into
mov
inc
pop
adc
or
jne
testb
inc
movsl
mov
enter
lods
mov
sar
stos
rolb
lds
cltd
xor
repnz
loop
int3
aad
shrl
mov
sbbl
into
fdivrl
addr16
sahf
dec
rol
pop
nop
repnz
jle
sti
push
gs
fcompl
aaa
xor
sbb
int3
shll
jge
addr16
pop
rcrb
call
int
push
sub
mov
or
and
adc
ja
paddsb
dec
adc
sbb
dec
scas
adc
es
mov
xchg
insb
push
ret
cmp
and
adc
into
pop
aam
fs
pop
in
jge
jecxz
push
mov
nop
lods
and
sub
lcall
cmp
fimuls
fs
ja
xchg
mov
cltd
push
cmpsl
lahf
mov
cmp
arpl
fucomi
sbb
mov
cmp
dec
and
xor
imul
stos
inc
jno
insb
xor
mov
nop
push
jne
jmp
idiv
int
sub
aad
icebp
adc
iret
in
sbb
in
cmc
sub
in
out
fidivl
mov
mov
lock
or
cs
mov
pop
in
jl
sub
adc
mov
jmp
call
rclb
sbb
lret
cmp
dec
xchg
push
outsl
ds
outsl
push
imul
cltd
xchg
pusha
xorb
cmc
cwtl
hlt
adc
sbb
pop
sub
rep
mov
les
mov
sbb
shlb
shrl
adc
sbb
dec
repz
clc
nop
sbb
lods
das
and
gs
dec
and
scas
les
jno
or
pop
sbb
jnp
adc
stos
int3
stos
mov
or
push
int
ficompl
mov
das
sbb
pop
rcrb
sahf
pop
pop
ds
xchg
push
stos
pop
call
out
sub
lods
inc
lds
lahf
xor
sub
sub
mov
mov
cwtl
mov
inc
ss
cmpsb
jp
pusha
test
insl
mov
sbbb
outsl
mov
adc
lret
push
push
daa
call
pop
imul
and
insl
shlb
mov
pusha
mov
leave
jge
inc
fildll
ljmp
sti
loope
cmpsl
orb
pusha
cltd
mov
cmp
stos
pop
and
cs
mov
jge
lea
dec
int
inc
mov
cmpsl
arpl
and
xor
test
mov
xor
xlat
outsl
add
aas
and
push
jl
nop
orl
lret
fcmovnb
pop
scas
subl
adc
jge
mov
cld
mov
inc
data16
fdivl
lods
jns
lods
insl
and
in
les
mov
clc
mov
in
lea
lahf
mov
dec
xchg
sahf
xor
movsb
mov
xor
add
dec
cmp
stc
mov
push
sbb
pop
mov
fwait
mov
xchg
pop
std
and
cli
rcrb
aaa
in
adc
cmpl
imul
xchg
xor
in
in
lds
mov
shlb
mov
cmp
popf
push
int
scas
enter
das
mov
adc
dec
fdivp
lret
mov
xchg
dec
jne
lret
sub
cltd
into
xlat
ret
jle
fldcw
enter
bound
mov
and
lret
and
icebp
cmp
lret
jnp
mov
sahf
jl
cmpsb
sbb
mov
sub
shlb
popa
adc
mov
loope
xchg
mov
subl
mov
dec
jecxz
push
scas
punpcklwd
movb
into
int
and
js
arpl
sbb
push
push
adc
xchg
lret
pop
sub
fstpt
loope
das
in
test
and
mov
pop
fcoms
add
mov
xchg
and
insl
add
test
xchg
roll
repnz
and
orl
fadds
fldenv
les
cld
xchg
sub
or
cmp
cmc
ds
outsb
adc
xlat
mov
mov
cmp
imul
sub
pop
or
mov
insb
adc
icebp
mov
test
and
ss
sub
pushf
ss
mov
into
pushf
xchg
mov
mov
cs
popf
jecxz
repz
jg
sbb
std
inc
cs
jb
jno
mov
daa
loop
dec
inc
push
mov
lret
leave
sbb
mov
push
jecxz
adc
orl
test
nopl
fwait
and
push
test
repz
xchg
fidivl
sbbb
mov
pop
stc
dec
push
rcll
push
insb
xor
ljmp
mov
dec
sbb
jle
in
jnp
or
add
das
jmp
push
mov
or
or
push
cmc
out
mov
pop
cmp
adcl
pop
sub
out
popf
mov
hlt
pop
scas
add
jmp
fsub
pop
mov
jg
mov
inc
loop
push
push
cmp
cmp
dec
xchg
lea
mov
dec
sahf
loop
mov
roll
mov
xor
int
pop
sub
movsb
jp
inc
aam
cmp
sbb
out
stos
cmp
stos
add
mov
pop
cmpl
nop
inc
cmp
lock
in
add
call
fcmovb
divl
stc
xchg
scas
pop
mov
cld
mov
cmpsl
gs
or
pushf
sub
mov
dec
push
fwait
in
popa
pop
pop
scas
insb
inc
icebp
cmp
jge
int3
sarb
imul
mov
std
negb
scas
divb
leave
lods
sbb
ds
js
je
jl
sahf
sbb
sahf
xor
jno
bound
mov
out
push
mov
push
mov
jl
sbb
popa
pop
xchg
or
shll
add
jl
mov
push
cmpsl
andl
mov
mov
sbb
xor
lock
push
out
decl
int
xor
jmp
out
inc
inc
xor
cwtl
aam
mov
roll
push
adc
xchg
adc
lds
in
cwtl
mov
dec
into
pushf
arpl
cmp
push
adc
or
xor
jle
sbb
xchg
out
sarl
fcoms
or
stos
pop
sarl
fstl
pushf
push
in
mov
aas
mov
pop
dec
jmp
fisttpll
cmp
loopne
jp
sbb
clc
xchg
in
pop
pop
fcoms
inc
mov
xchg
ss
negb
jl
aam
dec
imulb
pop
mov
and
jns
mov
pop
dec
pop
add
dec
xchg
mov
sti
pop
inc
sub
sahf
add
outsb
fmull
mov
cmp
rorw
lock
pop
xchg
popf
out
mov
frstor
mov
imul
int
push
mov
fadd
lods
cmpb
movsl
dec
jp
icebp
xor
sti
ss
shll
mov
jmp
mulb
push
aad
popf
inc
cmp
movsl
mov
dec
push
stos
xor
movsl
pop
addr16
fistl
dec
sbb
push
or
mov
jle
sbb
jl
andl
mov
fbstp
je
add
mov
or
cs
mov
inc
cmpsb
sub
dec
neg
add
cmc
push
jp
dec
xor
xchg
jge
jp
movsl
xchg
test
mov
dec
pushf
aad
sbb
cmp
popa
cmpsb
aad
addr16
dec
cmpsl
fistpll
inc
xchg
lret
jle
loop
cmpsl
aas
adc
cltd
sbb
imul
mov
or
push
sahf
mov
or
dec
aam
xchg
push
adc
sbb
int3
fwait
push
pop
jnp
jge
xchg
fldz
fidivrs
mov
jecxz
mov
ret
lcall
pop
or
cmp
lods
lods
addl
into
lret
daa
cs
dec
jnp
mov
jmp
lock
fnsetpm(287
out
std
add
jbe
cmp
jne
push
push
in
or
mov
xor
jbe
ret
jg
cmp
test
pusha
inc
scas
je
push
pop
out
adc
es
idivl
and
sbb
push
incl
inc
sbb
mov
or
jb
sbb
cmp
stos
jge
out
inc
dec
int3
sbb
in
in
lret
push
add
push
add
cmp
pop
push
xchg
xor
stos
and
mov
mov
fidivl
mov
cli
popf
clc
sub
pop
push
stc
sub
lods
xchg
rcrb
mov
jne
outsl
push
rorb
xchg
decb
or
repnz
mov
or
loop
adc
push
pop
xchg
enter
push
pusha
sub
lock
cmp
negb
mov
roll
jle
push
jg
adcl
int
xorb
subl
aas
ret
dec
testb
sub
sbb
dec
cmpsb
je
jmp
scas
dec
mul
xchg
fisttpll
out
ljmp
ja
xchg
add
or
mov
add
adc
add
sbb
pop
xor
cmp
pop
inc
in
adc
ss
int3
push
add
lcall
aas
xor
cs
orl
inc
xor
test
sahf
test
imul
cli
insb
insb
cli
jnp
pusha
repz
pop
xor
aam
lods
pop
cmp
inc
popa
jns
test
dec
inc
cmp
bound
outsl
push
out
in
ret
scas
inc
fsubrl
sbb
mov
push
dec
out
jb
imul
pop
xchg
test
cmp
jp
mov
jo
scas
ja
test
xchg
pop
out
cmpsb
push
push
sbb
int
mov
fdiv
or
dec
mov
mov
outsb
fistl
mov
rcrb
sub
xchg
add
xorb
mov
clc
jbe
scas
push
pop
and
sahf
cld
or
mov
mov
mov
adc
lds
lods
sbb
js
or
pop
push
shl
push
cmp
inc
jl
sarl
enter
mov
xchg
lock
sahf
push
addr16
fmul
mov
shlb
arpl
loope
jnp
sbbl
sbb
out
lcall
je
mov
add
addr16
xchg
or
test
shll
sub
lcall
cmp
sarl
dec
and
push
add
or
mov
jbe
rorb
popa
insl
lea
movsb
fdiv
inc
sub
addr16
in
jo
xchg
fdivrl
mov
adc
scas
repz
insl
or
mov
ds
mov
add
scas
push
imul
sbb
pop
mov
aam
pop
and
inc
mov
fwait
pop
lds
addr16
insb
mov
adc
add
cmp
sub
xor
and
pop
dec
sbb
lods
adc
and
shrb
xor
scas
add
stos
cmp
imul
mov
cmp
aas
inc
jnp
and
cmp
les
push
ficomps
mov
popf
stos
lret
jmp
mov
mov
inc
and
shr
inc
mov
dec
mov
xchg
movsb
push
dec
jne
mov
gs
mov
add
xlat
xor
and
lahf
mov
cmp
dec
jmp
dec
pop
aaa
lret
fwait
sbb
push
or
pop
in
mov
sub
aad
xor
ds
sbb
enter
jno
int3
xlat
daa
clc
mov
dec
jo
sub
cmpsb
sub
mov
adc
hlt
add
ljmp
dec
cmp
pop
js
add
sub
inc
and
push
jecxz
fwait
das
push
add
std
cmpsl
inc
outsb
jge
cld
shrb
add
repnz
lods
mov
dec
xchg
mov
and
mov
scas
lods
sub
adc
pop
into
fistl
add
cmp
pop
push
mov
inc
in
sbb
in
out
jne
bound
push
scas
adc
fists
cmpsb
mov
cmp
imul
popa
pushf
and
pop
leave
cmp
shll
mov
adcl
fs
call
out
jge
or
pop
cli
sbb
ret
in
push
test
test
popf
lds
sti
pop
pushf
add
mov
sub
add
adc
insl
int
inc
xchg
mov
sahf
mov
adc
jnp
pop
lret
mov
push
idivl
clc
pop
jg
mov
stos
sahf
dec
fcomps
loopne
lcall
es
and
aam
pushf
sub
xor
pushf
mov
mov
arpl
out
jl
xor
cmp
leave
std
das
nop
and
ljmp
xor
push
push
cli
pop
frstor
test
mov
push
push
dec
outsb
in
dec
xchg
push
jo
aad
adc
cmpsl
add
popf
imul
add
std
gs
stos
xchg
adc
dec
and
mov
and
movsl
cmp
data16
cwtl
sbb
sbb
imull
clc
lods
scas
arpl
xor
aas
repz
xorl
add
and
mov
jl
mov
js
pusha
jmp
fnsave
cmp
sub
add
fwait
and
into
icebp
xor
pop
pop
xchg
dec
add
ret
mov
push
or
ss
adc
pusha
cmp
mov
sbb
sti
add
in
sahf
add
out
loopne
xchg
adc
jns
out
pop
xchg
push
lods
xor
xor
inc
adc
mov
push
dec
stos
stos
sahf
stos
daa
into
clc
push
pop
inc
mov
cwtl
sbb
and
sub
ret
insb
or
int3
test
fidivs
rcr
fcomi
xchg
mov
cmpsb
cmp
mov
test
loop
jne
dec
pop
gs
jo
fsubs
and
stos
xor
je
loopne
jb
sub
cmp
icebp
aaa
sti
cmpsl
cmp
fwait
xor
mov
or
push
xchg
fimuls
push
aaa
jbe
popf
shll
jp
xor
fsts
enter
pop
adc
xchg
xor
or
dec
and
pop
pop
or
in
cmp
jp
adc
sbb
shrb
jne
and
adc
mov
pop
jnp
sbb
cmp
loop
sbb
pop
into
pop
scas
pop
pop
push
das
xor
pop
je
in
dec
jg
lret
lock
mov
ficompl
test
into
out
mov
not
fnstsw
mov
test
lea
and
dec
cmc
jae
inc
inc
out
mov
arpl
iret
lods
sbbl
jle
into
sahf
pop
and
jae
jecxz
cmpsb
jae
push
cmc
push
out
xor
outsl
xor
xchg
sbb
test
and
inc
sub
and
aaa
int3
sarl
in
cmpsb
jge
inc
popl
pop
pop
pushf
mov
jecxz
stos
lods
adc
push
mov
mov
sub
mov
inc
mov
adc
or
cmp
cmp
into
jg
jnp
das
jge
add
negl
and
jnp
xchg
sbb
shll
adc
push
hlt
js
ja
std
and
pusha
cmc
insl
sahf
sti
sahf
sbb
sbb
loope
pushf
pushf
fiaddl
xchg
or
fsubl
daa
in
fstl
aaa
mov
lret
ss
stos
pop
or
sbbl
int
repnz
dec
movb
xchg
loope
pop
mov
mov
inc
push
inc
ret
mov
cmp
rcrb
xchg
xor
add
and
mov
subl
inc
decl
cmc
fldcw
fcomps
jmp
iret
test
sbb
xchg
cmp
in
mulb
in
icebp
inc
push
jecxz,pn
pop
mov
jbe
fdivl
insb
and
or
jae
lods
loop
dec
inc
push
ss
push
xchg
lret
rcrl
mov
int
inc
push
in
push
mov
leave
xchg
xor
xchg
pop
in
lcall
inc
jae
test
hlt
and
xorb
inc
pop
stc
rol
clc
jns
xor
push
and
mov
dec
xchg
push
popa
or
add
aam
scas
ds
leave
mov
test
dec
popf
mov
cltd
cmpsb
mov
ljmp
sbb
or
mov
sub
ja
out
and
ljmp
xor
jns
ficompl
repnz
testb
addr16
xlat
sti
push
inc
push
in
rcl
and
dec
xchg
fs
out
mov
xor
push
cmp
pop
inc
inc
dec
adc
mov
mov
aas
sub
movsl
xlat
int3
psllw
or
push
mov
adc
and
cld
inc
notb
xor
daa
jle
pusha
fdiv
rorb
mov
pusha
repnz
jp
cmp
scas
nop
adc
add
inc
push
mov
mov
xchg
movsl
cmpsb
out
cli
lahf
inc
icebp
jne
pushf
shl
lahf
mov
dec
cmp
and
push
fildll
fnstcw
bound
cld
xchg
xchg
js
int3
addr16
xchg
mov
lds
hlt
cmp
jge
push
ss
or
cltd
sub
stos
movsb
out
inc
pushf
lahf
imul
push
pop
adc
ds
push
lret
jecxz
icebp
out
fdivrl
outsb
push
sbb
js
and
jg
xor
mov
push
popf
sti
maxps
xor
sahf
push
and
hlt
mov
sub
mov
and
dec
imul
mov
iret
mov
in
and
sar
inc
and
cmp
sbb
mov
or
outsb
and
mov
sub
into
pusha
dec
mov
push
pop
call
pop
mov
ror
cld
fidivs
stos
scas
rorb
push
out
insl
jge
xchg
repz
xchg
pop
jno
push
pop
rcrb
mov
test
movsb
xor
in
sub
add
rclb
pop
int
xor
adc
push
adc
push
clc
pusha
xor
addb
mov
out
in
pop
out
pop
jne
push
jbe
or
rorb
cmpsb
out
and
mov
and
aaa
push
xlat
lods
pushf
dec
scas
pop
mov
cmc
aas
and
int
push
shrl
dec
push
hlt
pop
leave
xchg
adc
and
loop
scas
arpl
testl
dec
inc
jnp
daa
lea
xchg
lods
frstor
dec
aam
out
jp
cmp
cli
ds
lods
lret
loopne
inc
or
push
cli
add
dec
push
and
xchg
jno
push
lock
xor
insl
mov
or
mov
cmp
fisubl
sub
sarl
sub
jnp
jecxz
xorb
cld
mov
iret
push
les
hlt
inc
ret
xchg
subb
pop
in
lock
mov
pop
mov
or
mov
xchg
loopne
push
insl
lret
sar
rorl
adc
stos
sbb
dec
jecxz
cltd
ja
lea
jge
cwtl
pop
mov
mov
cmp
loop
gs
mov
xchg
jg
dec
inc
mov
inc
pop
cmp
pop
mov
sti
jl
out
mov
das
jae
fisttps
outsl
mov
loop
push
int3
adc
ror
push
fimuls
mov
popf
sbb
xor
inc
and
lret
jle
sbb
mov
cmpsl
mov
rcll
mov
ret
lds
jns
jns
mov
pusha
dec
push
inc
and
fnsave
mov
add
inc
aas
sub
mov
cmp
xor
mov
sbb
loope
insb
push
dec
movsl
xchg
ret
mov
mov
or
in
sub
sub
and
adc
fdivrs
scas
dec
sbb
imul
cmp
inc
lods
sahf
cmp
lods
jo
les
aas
lahf
xchg
lea
in
cmp
dec
test
xor
push
imul
jle
insb
xor
mov
loopne
insb
bound
hlt
mov
jns
push
iret
ret
insb
push
add
sub
aaa
movl
sbb
stos
ja
and
inc
enter
shlb
mov
fstps
and
mov
mov
add
mov
pusha
pop
scas
mov
hlt
jno
lcall
aad
outsb
or
ret
adc
lahf
mov
rol
cld
out
sbb
out
outsl
push
pop
xor
cmc
int3
adc
mov
mov
enter
push
mov
xchg
ja
sbb
inc
out
mov
lea
and
bound
icebp
ret
and
pushf
divl
cmp
test
and
push
jb
xchg
movsl
imul
dec
outsl
or
movsb
stc
lods
cmc
cli
clc
popa
aad
scas
repz
stos
sub
nop
mov
dec
pop
es
jns
mov
inc
outsl
jno
and
aaa
frstor
pop
push
dec
xor
pushf
addr16
jp
lds
fucomip
incl
repz
stc
xchg
cli
daa
add
insb
xor
in
inc
fs
push
push
ret
out
push
fsubl
jns
stos
jg
scas
push
icebp
out
xchg
movsb
cmp
xchg
fsubs
push
stos
insb
cwtl
mov
mov
lahf
in
fwait
cmpb
movsl
sub
mov
insl
pop
push
push
outsb
xchg
sbb
rcr
lcall
push
push
push
sub
xchg
pop
adc
out
movsb
sbb
outsl
mov
ds
lds
test
popa
xor
adc
or
push
test
jbe
dec
mov
ds
and
jg
shufps
loope
mov
lock
dec
das
xchg
dec
iret
dec
dec
mov
sub
ret
dec
sarl
icebp
push
jecxz
dec
jg
mov
rcll
aam
and
ret
loopne
das
adc
jae
scas
aas
sbb
sti
or
cli
add
cmp
into
in
cmpsb
cmp
cmc
iret
xchg
fcomps
mul
insb
pop
mov
jbe
arpl
push
jns
enter
mov
mov
sub
push
pusha
in
fimull
cltd
sbb
xor
cs
loopew
in
mov
ljmp
adc
mov
jge
xchg
ret
sarb
pop
fidivrl
test
cmp
stc
inc
out
xchg
xchg
mov
loope
in
in
je
mov
movsb
add
sbb
movsl
mov
inc
jne
fiadds
add
mov
xor
jle
test
sbb
jge
jae
and
lods
outsb
or
push
out
dec
xor
adc
ljmp
loopne
daa
inc
dec
stos
cld
add
cmp
bound
sub
cli
enter
push
divb
jecxz
lret
xor
xchg
pop
loop
leave
ja
insb
cmpsb
add
mov
repz
dec
bound
movl
jnp
mov
add
aam
ds
pop
fxtract
push
push
mov
arpl
cli
cmp
or
fwait
push
pop
jo
imul
sbb
ja
adc
mov
popf
test
les
and
aam
insl
cli
int3
jne
lods
cmp
jo
jbe
xchg
sti
mov
std
ret
int
js
jp
xchg
jno
enter
inc
out
inc
test
dec
jge
lds
dec
jae
clc
in
adc
addr16
clc
push
jge
mov
fnstenv
clc
ds
mov
sbb
xchg
bound
out
lods
sarl
aad
dec
and
cld
mov
imul
mov
dec
add
push
loopne
inc
mov
ss
inc
sbb
pop
repz
jle
lahf
stc
add
mov
add
out
pop
mov
cwtl
inc
mov
mov
sbb
fstpl
outsb
push
clc
shlb
xor
test
mov
xchg
ss
xchg
out
dec
cli
mov
iret
gs
lods
push
pop
and
inc
and
popf
roll
mov
testb
jl
mov
dec
rcll
lea
sbb
mov
mov
ljmp
scas
pop
push
aam
iret
aaa
fs
sbb
xchg
das
fwait
cmpb
or
dec
cmp
mov
movsb
test
and
in
mov
mov
pusha
icebp
jbe
dec
dec
jl
xor
push
jno
call
jecxz
imul
adc
or
imull
jae
test
sti
xchg
stos
pusha
and
sbb
cmp
or
ret
mov
fistpl
ret
std
push
fldl
popa
mov
stos
pop
fsubs
push
lods
push
dec
lods
pop
int3
xchg
test
or
xor
shll
jge
adc
jmp
mov
jb
pop
dec
sub
andb
and
arpl
inc
mov
inc
jnp
push
cmovle
daa
sub
icebp
inc
jl
mov
jge
or
mov
or
inc
ret
mov
es
sti
mov
in
sbb
ret
sbb
lret
scas
jle
mov
dec
leave
lods
cmp
into
mov
xchg
pop
add
ja
dec
stc
adc
into
test
push
cmp
xchg
fs
sbb
mov
icebp
fcmovnbe
push
lock
lods
or
cmpsb
sbb
lods
cli
mov
insl
sub
sti
loope
fdivrs
xchg
test
sahf
rclb
push
push
je
xchg
add
and
sbb
ret
out
mov
ja
sub
lahf
lods
inc
inc
jl
jmp
push
ss
rorl
std
aam
xor
out
mov
mov
and
lods
insl
cwtl
inc
lahf
push
add
out
pop
xchg
xchg
add
cmp
mov
mov
and
mov
and
cs
mov
cld
lds
dec
inc
fstl
xor
inc
fnstenv
int
jb
fsubs
and
cmp
fs
sub
jg
loop
jb
inc
sub
icebp
cmp
rcrb
outsl
cmp
insl
clc
jg
jge
movsb
mov
jns
inc
jnp
or
sub
jnp
xchg
cmp
sbb
sahf
in
outsb
sub
mov
mov
ss
adc
rorl
pusha
dec
cmp
dec
cli
sub
ret
repz
adc
in
movsl
push
enter
shlb
fildl
sub
pop
inc
testb
sbb
or
push
std
dec
mov
out
cmc
inc
cmc
test
or
shrb
mov
add
dec
lcall
sbb
sub
xchg
xor
push
imul
andl
xor
lahf
fwait
add
inc
cmp
ficompl
in
xchg
ss
ds
loope
insl
and
sub
or
daa
lock
and
jmp
dec
stos
mov
and
cltd
out
cmp
push
sarl
insb
adc
adc
xchg
cmp
xor
xchg
or
or
pop
mov
push
cmp
pop
adc
cmpsb
shr
xchg
or
leave
xchg
xor
and
cmc
ljmp
test
ret
test
sbb
and
into
add
mov
xor
inc
push
dec
test
jno
scas
scas
adc
int
ret
in
fmull
jnp
inc
aam
test
mov
rorb
xor
sub
mov
inc
jp
nop
lret
xchg
dec
pop
imul
testl
enter
cmpsl
mov
cmpsl
mov
js
mov
pop
mov
add
test
cmp
aad
xchg
jp
mov
sbb
cmp
pop
cmp
das
pop
sahf
iret
fildl
sarl
sbb
push
push
mov
mov
rorl
gs
repz
add
mov
inc
inc
mov
xorl
add
mov
fstps
cmp
sub
pop
mov
sti
sub
add
ja
dec
pop
pop
mov
xor
sbb
ret
dec
popf
sahf
fwait
push
jo
mov
rorl
and
ficomps
inc
int3
pop
pop
jae
das
mov
jg
sahf
mov
xor
mov
and
sahf
mov
ljmp
fcomps
aas
jg
addl
fsts
push
not
or
mov
ljmp
mov
cs
jae
add
xchg
in
sti
xchg
jmp
and
jno
push
jnp
test
xchg
in
adc
cmpl
stos
sub
or
pop
outsl
jne
cmp
es
mov
jns
or
xor
jno
fldcw
int
and
mov
je
cmp
sbb
shlb
xchg
dec
sbb
stos
outsl
in
sbb
cli
ljmp
rorl
jae
hlt
cmp
repz
or
popa
sub
add
sahf
ja
mov
fstl
iret
dec
xchg
aad
imul
fcomps
test
outsl
adc
push
and
inc
adc
test
adc
icebp
jne
call
out
xlat
xlat
mov
jg
in
sub
xchg
and
push
xlat
jno
inc
adc
inc
fdivl
jbe
jle
push
fisubrs
push
lock
faddp
xor
popa
dec
jo
push
cld
add
lods
cmp
xor
js
mov
lret
insb
int
xor
inc
sbb
sub
fcoms
add
cli
out
push
shlb
add
or
test
dec
fcmovne
sub
xchg
lret
xor
jne
arpl
cmc
jns
dec
js
push
lods
out
insl
jae
loopne
out
mov
iret
cmpsl
lahf
loope
pop
imul
fsubs
xchg
rcr
jg
add
out
push
aam
in
gs
aaa
pushf
pop
sahf
mov
lcall
adc
adc
jne
out
aaa
and
imul
scas
pusha
js
repnz
rorb
xchg
pushf
pop
ljmp
cmpsb
stos
pop
xchg
jecxz
adc
loope
sub
pop
icebp
inc
sub
xchg
push
cmpsl
into
mov
imulb
into
rorl
mov
xor
cmpsb
je,pn
icebp
nop
cmpsl
repz
push
mov
jno
xlat
mov
jge
int
scas
sbb
sbb
inc
fwait
xchg
jno
movl
adc
movb
mov
leave
mov
jns
add
jge
int3
dec
cmp
out
mov
das
or
insb
cwtl
cs
notb
dec
shlb
sub
mov
aad
sbb
mov
lock
sub
dec
loope
lret
push
pop
xchg
inc
pop
enter
mov
fwait
scas
je
js
outsl
mull
sarl
pushf
push
pop
mov
mov
cmp
mov
xchg
pop
push
mov
dec
push
mov
call
pop
movsb
pop
mov
ss
gs
adc
imul
out
mov
hlt
xor
cmpxchg
iret
mov
adc
cli
ds
xor
xchg
or
cmp
enter
popf
call
out
sahf
add
mov
dec
xor
popa
ret
add
push
xchg
movsl
fidivs
lret
cwtl
cmp
xorl
cs
loope
sub
cmp
mov
pusha
lcall
mov
filds
push
int3
jbe
scas
outsb
cli
cwtl
jg
fwait
cld
mov
push
mov
inc
daa
or
xchg
loopne
call
and
push
pop
cmp
insl
cs
cmp
lahf
fwait
cmpsl
adc
stc
outsl
hlt
lcall
mov
imul
into
arpl
mov
sub
adc
iret
fiadds
dec
xor
imul
dec
mov
xchg
clc
movsb
js
pop
xlat
mov
cltd
xor
fneni(8087
sbb
inc
sbb
outsb
push
and
out
push
push
mov
inc
jg
xchg
jo
nop
aaa
popf
inc
cmp
mov
adc
push
push
add
mov
jg
hlt
imull
xchg
xchg
push
inc
mov
jae
faddp
add
xchg
repnz
xor
pop
inc
fldl
mov
lods
mov
mov
idivl
xor
ret
lea
ret
and
das
push
dec
sbb
adc
lret
xorb
cmp
cltd
xchg
addb
es
pop
xor
shlb
adc
cs
scas
or
fiadds
mov
clc
jbe
sub
push
ds
out
sub
dec
fsts
je
sub
ja
mov
enter
inc
and
fwait
cmp
xchg
mov
enter
adc
push
icebp
outsl
xor
and
cld
mov
lods
imul
adc
stc
add
push
aaa
dec
lret
jl
out
ret
dec
daa
or
cltd
sub
ret
cmc
imul
push
adc
subl
loop
mov
hlt
outsb
xor
fwait
aad
data16
stc
arpl
jge
xor
repnz
pop
addr16
int
pushf
aas
movsl
scas
loope
iret
lret
call
pop
mov
dec
jns
jmp
stc
sahf
das
movups
jmp
std
aam
in
fdivrs
mov
pop
push
jns
stc
push
outsb
adcb
lahf
test
cmp
adc
adc
in
xchg
push
iret
fildll
daa
and
jecxz
or
mov
adc
push
mov
inc
jecxz
mov
dec
vmwrite
adc
cmpsl
repnz
xor
fnsave
jge
jnp
inc
gs
add
pusha
mov
jg
loop
decb
ret
lcall
fisubrs
fistps
in
push
fcomps
call
dec
cwtl
sbb
cmp
cmp
pop
enter
outsb
out
mov
test
pop
dec
mov
add
fnstcw
mov
divl
adc
push
jecxz
adc
jl
pop
xor
cmc
cmp
fdivrp
push
xchg
mov
imul
pop
xchg
pushf
xor
pop
mov
lds
adc
aad
mov
adc
inc
mov
gs
and
mov
dec
bound
mov
fidivs
mov
lahf
mov
out
xlat
rolb
fisttpll
fisttpl
or
addr16
cmp
scas
xchg
cmp
pop
icebp
jno
jg
xor
jp
je
xlat
xorl
out
and
lahf
ja
mov
fists
mov
mov
mov
inc
scas
lods
mov
jle
cmc
jo
out
mov
fiaddl
sbb
sub
adc
jo
imul
xor
push
inc
imul
cmp
pop
imul
adc
dec
or
xchg
rol
jmp
fldenv
mov
cmp
stos
add
push
dec
mov
out
js
add
scas
mov
add
mov
jno
jns
xchg
xchg
or
out
mov
dec
mov
outsb
jb
les
adc
mov
jmp
or
jmp
sbb
fsubl
in
push
push
or
mov
jecxz
mov
enter
ljmp
popa
inc
adc
push
mov
pop
inc
jnp
jno
out
pop
mov
mov
xchg
test
cmp
mov
push
adc
loope
mov
leave
fisttpll
mov
aaa
pushf
test
jle
xchg
fistps
xlat
sbb
int
cmp
dec
mov
pop
sub
std
je
cmpsb
lods
imul
dec
in
sbb
testb
xchg
lds
shlb
loopne
xor
imul
dec
fs
out
add
or
or
adc
adc
jl
lods
fisttpl
xchg
int3
js
jae
or
xor
outsl
mov
and
cld
inc
fildl
jmp
xchg
push
mov
jne
dec
jge
pop
sub
pushf
incl
movlps
adc
test
inc
and
mov
jae
xor
mov
mov
ret
test
shrb
cmpsb
out
js
and
or
cmp
flds
adc
fs
pop
or
sub
pop
pop
cmp
fxch
mov
pop
xchg
icebp
and
and
fwait
inc
cmp
lcall
inc
push
xchg
sub
aas
dec
sbb
mov
out
lahf
add
sub
nop
dec
aas
adc
sbb
push
fistpl
pop
add
cwtl
mov
sbb
lret
insl
outsb
mov
inc
stos
scas
xchg
cmp
dec
cmpsb
negb
mov
cmp
int3
sti
and
push
jg
sub
cmp
dec
mov
pop
dec
push
dec
lea
and
xor
aas
insb
xor
push
add
xchg
jae
lds
jo
loopne
sti
pop
icebp
ja
mov
push
xchg
std
or
add
lret
stos
cmpl
mov
add
bound
push
jp
push
out
out
inc
negl
xchg
jg
push
loopne
add
mov
adc
fists
adc
ds
nop
cltd
scas
stc
xor
nopl
aam
cs
mov
shrb
fnstcw
arpl
std
push
adcl
out
push
fistpl
fidivl
ficomps
lret
pop
scas
jo
push
jge
push
sub
push
cs
lods
jp
jno
int
jg
ljmp
pop
mov
jge
jns
leave
inc
xor
ds
pop
add
jp
mov
nop
es
loope
mov
cld
das
xor
inc
add
sub
ljmp
movsb
mov
fcmovne
ja
dec
xor
ds
pushl
daa
xchg
push
jae
inc
cmpsb
outsl
aam
xchg
mov
mov
add
or
stc
mov
xchg
ret
mov
push
out
xchg
xrelease
cld
int
add
mov
cltd
inc
or
sub
cltd
sub
mov
call
xor
and
mov
sub
dec
in
loopne
lods
jo
or
lcall
lods
xchg
inc
xchg
cmp
mov
ret
jns
mov
in
clc
rolb
inc
sahf
hlt
dec
lahf
gs
jne
mov
in
mov
movsb
sub
loop
lea
popa
mov
mov
mov
inc
mov
cltd
mov
aas
cmpsl
push
movsl
cmpsl
adc
jmp
add
movhps
ljmp
lea
psrlq
imul
adc
push
inc
out
test
std
aas
cmc
jnp
test
inc
or
jl
mov
mov
insl
add
jecxz
mov
push
movsb
test
or
xchg
ljmp
push
xchg
sub
mov
rolb
nop
lret
jl
sub
jmp
cmc
popl
push
pushf
push
dec
jbe
jecxz
fcomps
loop
aas
pop
dec
sub
adc
movsl
test
pop
xchg
orl
inc
test
out
jp
aas
imul
mov
mov
mov
push
pcmpgtb
mov
stc
pop
in
lds
sbb
adc
adc
out
mov
mov
fists
popa
sub
xor
dec
sbb
jp
sub
lret
xor
and
or
or
daa
int
ljmp
jge
inc
repnz
adc
pop
pop
xchg
push
fwait
mulb
cmpsb
add
cmpl
clc
loopne
xchg
mov
cmp
lahf
mov
paddw
xlat
pop
insb
xor
popa
add
and
adc
hlt
call
adc
inc
pop
and
lret
test
dec
pop
xor
loop
das
xchg
fstpl
enter
sbb
adc
sarl
dec
fsts
sbb
mov
sub
cwtl
stos
push
inc
movsl
or
jbe
aad
out
mov
and
add
cmp
inc
repnz
aas
js
iret
aam
cmp
shrl
lock
andb
out
push
push
cmp
iret
cs
adc
jge
cltd
sti
sbb
das
and
faddl
mov
xchg
adc
icebp
pop
push
cmp
rorb
cs
jb
add
pop
mov
mov
adc
push
aam
xlat
pop
inc
hlt
call
movsb
jnp
cmp
jne
sbbb
mov
jbe
adc
jae
jbe
push
repz
adc
shrb
pop
jmp
ja
lret
xor
gs
mov
fwait
and
shll
int3
push
imull
aam
mov
xchg
call
aaa
cmpsl
stc
dec
pop
in
inc
or
sbbb
js
into
xchg
mov
scas
out
add
jo
and
add
jmp
xor
dec
inc
dec
sub
xor
mov
and
mov
leave
data16
xchg
ljmp
xlat
nop
push
aad
arpl
sub
notl
int
mov
cmpsl
adc
mov
push
push
and
add
repnz
imul
in
jns
pop
insl
insl
decl
jbe
sbb
or
pop
cmp
mov
addps
pop
dec
jg
push
jl
lds
inc
sti
mov
dec
mov
push
loope
adc
mulb
sub
mov
sbb
mov
push
divl
and
enter
imul
inc
and
push
cmp
xchg
sarb
and
sti
push
mov
pop
mov
push
xor
xrelease
into
sub
aas
mov
cmpl
xchg
push
push
imul
fisttpll
loope
adc
dec
dec
xchg
inc
aaa
and
push
pop
insl
andl
scas
jb
sub
push
call
lret
jno
inc
mov
xor
adc
inc
jno
imul
dec
lret
fs
not
loope
cmpb
jne
in
movsb
loop
jb
pop
mov
push
or
insb
mov
insb
sahf
jnp
mov
mov
in
lahf
mov
jbe
xchg
fdivrs
dec
pop
or
imul
push
cmc
maxps
cs
pusha
sbb
fidivrl
out
ja
lock
dec
mov
mov
xchg
xor
mov
aam
xchg
jp
and
test
xchg
or
mov
stc
ljmp
mov
in
scas
cs
enter
mov
jle
les
in
iret
push
mov
inc
inc
pusha
dec
daa
mov
push
aaa
mov
cmpsl
xlat
xchg
in
jne
pop
and
pushl
repnz
mov
in
movsb
sbb
mov
les
rcr
das
cmp
sbb
outsl
push
xor
popf
push
adc
xlat
mov
data16
ret
lea
mov
push
or
ds
mov
adc
xchg
adc
or
outsb
or
add
popf
je
bound
adc
inc
std
cmc
fdivp
test
push
test
int3
jns
in
ret
stc
mov
inc
xchg
inc
xor
cmp
inc
bound
or
push
int3
jbe
adc
pop
shll
lret
daa
xchg
das
mov
push
test
add
mov
dec
and
or
xchg
fnstenv
mov
cld
mov
dec
ret
rclb
repz
mov
pop
add
xlat
sub
add
orl
pop
xor
test
sub
int3
fs
inc
cwtl
or
add
inc
aam
out
nop
out
ljmp
gs
movsb
ja
fsubl
cmp
shl
push
dec
inc
push
push
add
shlb
cld
das
pop
xor
pop
mov
mov
xor
adc
jns
cmp
xchg
push
nop
mov
out
mov
in
xor
pusha
mov
cmpsb
call
push
testb
push
cmpb
popf
fdivl
pop
and
xor
or
outsb
jecxz
in
aad
fwait
or
movsb
lcall
pop
int
inc
dec
cmp
imul
ret
nop
inc
mov
in
mov
scas
or
or
pop
sbb
mov
jnp
push
xor
push
sbb
mov
pop
add
fs
movsb
andb
test
lds
fcmovnb
mov
sub
lods
adc
pop
pop
or
nop
mov
das
pop
lret
scas
fwait
cld
mov
or
hlt
dec
in
icebp
mov
jae
jmp
daa
dec
fidivrl
in
icebp
lds
stos
or
pop
and
lock
dec
std
pop
movsb
jnp
jo
mov
ja
or
pop
mov
lret
sar
addb
pop
aaa
je
cltd
inc
mov
shll
les
pushf
shlb
push
mov
mov
lea
dec
test
cwtl
stos
loope
das
adc
enter
xchg
jg
sbb
and
mov
jbe
pop
and
shrb
iret
pop
int3
scas
dec
cmp
addr16
mov
xor
xchg
xchg
int
outsb
mov
jp
out
dec
and
pop
addl
imul
aaa
mov
jle
jbe
adc
or
and
dec
out
loopne
push
push
pop
pop
jno
test
push
mov
dec
divb
mov
test
leave
adc
sbbb
call
cltd
and
pop
aas
repnz
mov
imull
scas
incb
insb
js
daa
pushf
neg
xchg
mov
pop
gs
fs
pop
xchg
jb
addr16
sub
add
add
mov
add
lods
pop
xchg
adc
sbb
mull
push
nop
mov
pop
jl
cltd
cmpsl
or
je
sarb
push
data16
addb
in
imull
sbb
or
sub
push
mov
push
mov
and
fidivrl
and
fidivrs
pop
mov
or
hlt
sbb
andb
sti
mov
adc
hlt
jp
sbb
in
shr
enter
pop
rolb
pop
rol
cmc
in
shlb
xchg
clc
and
imul
cld
push
fucomp
and
rclb
mov
mov
addr16
out
out
data16
call
lcall
pop
fs
in
xchg
mov
xor
mov
ret
push
orb
sbbb
shll
xor
stos
mov
inc
xchg
or
mov
das
add
or
mov
insb
test
loop
xchg
sub
mov
mov
mov
sbb
adc
push
test
dec
add
fdiv
mov
jnp
pusha
loope
dec
movsb
enter
fisubs
inc
arpl
arpl
or
jmp
jp
sbb
xor
pop
out
daa
shr
mov
mov
call
mov
dec
loopne
cmp
inc
cwtl
ds
sbb
jge
stos
xor
cmp
js
popa
jecxz
push
and
lret
xchg
jno
xlat
mov
mov
lods
fcoml
cmpsb
jbe
lea
sbb
and
test
and
pop
xor
push
outsl
clc
out
sarl
cli
jl
outsb
mov
push
fmull
mov
jmp
data16
xorb
or
rorl
aam
xchg
out
xor
or
push
add
not
xchg
push
fwait
pop
cltd
movsl
pop
adc
cmp
or
filds
lahf
inc
cmp
jb
pop
rcll
cmp
scas
out
insb
in
fs
imulb
insb
test
loop
cwtl
test
sti
jge
add
cwtl
in
lods
mov
test
das
lcall
cmp
dec
shrl
or
out
jae
fisubrs
adc
test
mov
push
sub
loope
jmp
movsl
bound
push
mov
imul
addr16
arpl
dec
jnp
sub
inc
insl
xchg
test
call
jg
imul
push
sbb
movsl
rcr
rcll
jecxz
mov
cmpsl
push
add
lcall
test
fnstcw
dec
or
ss
pop
cmp
inc
sti
mov
jo
inc
mov
sahf
decb
movb
mov
dec
xor
test
sub
in
xchg
movsb
pushf
xor
arpl
dec
mov
call
test
lock
fldt
mov
out
sub
xchg
xchg
and
pop
iret
sbb
fcmovnb
leave
ss
aam
push
push
and
or
cmp
jbe
push
adc
xchg
inc
lret
dec
xor
pop
fisttpll
aaa
add
pop
mov
aad
imul
cmp
jne
test
jl
xor
adc
pusha
fistps
shrl
fdecstp
push
xor
sbb
loop
outsl
loopne
or
stc
mov
adc
dec
fsts
cmpsb
sub
aas
lret
ljmp
add
lret
xor
ja
dec
inc
int
xchg
mov
mov
cmp
or
gs
sbb
xor
push
push
fimuls
cwtl
jo
or
cmp
lcall
fwait
mov
lock
arpl
push
sbbl
lods
push
sbb
insb
xlat
mov
nopl
xorl
pop
sbb
inc
mov
addr16
jno
fadds
inc
stos
int3
jl
add
pop
sbb
sub
addb
xlat
iret
negl
mov
sbbl
mov
xchg
gs
dec
jb
sub
leave
sti
jmp
cmp
jecxz
or
stos
pop
negl
push
aas
bound
lret
loope
cmp
sarb
aas
gs
inc
dec
jno
mov
jge
je
xchg
shlb
inc
in
pusha
sti
repnz
and
test
xor
bound
movsb
mov
add
stc
insl
jo
xchg
mov
or
cmp
popa
stos
cwtl
push
pop
outsb
or
ret
fsubrl
xchg
sub
out
fucom
xchg
mov
lret
std
dec
shlb
imul
xchg
pop
mov
add
jg
aad
in
xlat
loop
push
xchg
mov
fwait
xchg
dec
repnz
or
shl
mov
sub
movsl
sub
adc
enter
lret
pop
mov
push
xchg
movsl
scas
xchg
push
out
adc
cltd
push
insb
adc
mov
jno
sbb
mov
mov
push
int3
mov
sbb
mov
iret
adc
mov
adc
test
xor
shlb
sbb
daa
push
dec
and
andl
jg
fcmovu
xchg
in
inc
out
fldt
test
arpl
sbb
pop
push
call
nop
dec
sbb
sub
pop
mov
fincstp
test
push
mov
mov
sarb
out
mov
mov
push
mov
fdivrl
es
scas
rcrb
sbb
incl
data16
cmp
xchg
adc
dec
dec
cmp
fmull
dec
mov
push
iret
push
sub
lret
or
ja
into
jl
or
repz
jb
sub
sbb
mov
rorl
outsb
sahf
aaa
int
cld
push
push
mov
dec
mov
adc
nop
and
xchg
shl
adc
and
sbb
ret
cmpb
mov
mov
iretw
lods
mov
mov
ss
xlat
cmpsl
pop
std
or
insl
sub
pop
xor
mov
pop
addr16
mov
xchg
mov
outsl
loop
gs
mov
sbb
clc
jno
pop
xchg
mov
dec
popa
xor
xor
ja
xchg
fistl
sbb
pop
and
jmp
int
pop
imul
xchg
dec
xor
dec
jns
lds
sbb
pop
xchg
push
xor
and
sahf
mov
adc
cli
jnp
cld
xchg
ret
jmp
mov
mov
lcall
loopne
mov
xorb
ljmp
aad
out
loop
inc
sarl
or
jmp
sti
dec
div
pop
lret
loop
jecxz
mov
popa
mov
or
scas
and
nop
sahf
push
inc
xchg
gs
rolb
add
out
adc
add
or
ds
icebp
mov
push
addr16
adc
adc
mov
and
jae
int
xor
fwait
stc
scas
in
pop
xor
mov
dec
dec
xchg
jp
inc
fs
out
add
and
movsl
mov
repnz
addb
push
or
xor
enter
sub
pop
and
call
mov
pusha
cmpsl
inc
out
pop
sarl
clc
out
cmp
cmpsb
aad
xor
outsb
shr
outsl
daa
xor
int
fcoms
mov
add
and
push
das
sub
add
cmp
pushf
sahf
cs
inc
or
pop
xchg
add
mov
jge
pop
lahf
mov
xchg
xor
cs
aas
ret
dec
insl
jb
jae
adc
dec
nop
in
push
ret
ret
xor
inc
ljmp
and
or
inc
arpl
rol
xchg
ja
pop
dec
jle
shlb
mov
mov
push
add
adc
gs
xor
mov
mov
dec
sbb
lret
pop
mov
fs
and
in
sbb
adc
fsubs
scas
xchg
lock
jmp
data16
std
enter
cmp
push
jnp,pn
lcall
cmpsb
cmp
push
add
jns
mov
js
sarl
das
cltd
sub
jnp
cmp
push
push
cmpsb
push
sub
add
mov
dec
and
test
or
dec
fldt
mov
xchg
mov
jo
push
pop
fisubl
test
inc
dec
aam
push
pop
jl
loop
in
xor
xor
adc
and
das
pop
daa
stos
sti
sub
push
pop
mov
mov
loop
push
aas
adc
jo
aam
push
push
in
mov
fcmovnb
and
ret
mov
dec
push
mov
pop
cmp
and
cmc
inc
add
clc
pushf
mov
jb
icebp
mov
hlt
insb
ljmp
pop
xchg
fidivl
and
scas
xor
xor
dec
mov
sub
aas
rorb
adc
nop
xchg
jmp
or
mov
fwait
dec
jb
sbbb
push
fs
dec
ss
or
ret
stos
mov
xchg
popa
ret
mov
aas
ds
dec
call
nop
fnsave
jnp
fwait
icebp
and
bound
in
imul
or
stos
dec
scas
cltd
jmp
mov
leave
lret
in
push
push
adc
push
inc
xor
in
mov
jmp
dec
fidivrl
jbe
dec
mov
insl
les
lret
dec
push
out
jp
hlt
push
or
xchg
sub
mov
pop
les
push
mov
mov
jecxz
imul
orb
enter
daa
xlat
or
mov
inc
ss
cmp
cmp
pop
sbb
pop
aad
jle
shll
xchg
pop
dec
adc
push
sub
lods
aas
adc
mov
lret
lret
aad
out
adc
cltd
inc
repnz
iret
xchg
push
cmpsb
jno
outsl
xchg
lods
jl
fbld
cmp
adc
lcall
sub
lret
cmp
sub
int3
ret
insb
pushf
xlat
dec
ss
pop
in
aaa
orl
imul
mov
mov
in
std
aad
dec
ja
or
or
xchg
push
das
jbe
inc
insl
imul
push
lret
sub
out
ret
ja
add
sahf
movsl
cld
ret
push
je
adc
sbb
in
gs
cld
icebp
adc
xlat
xor
in
push
idivl
popa
xchg
pop
mov
mov
stc
je
lods
add
ljmp
add
sar
jne
pop
pop
xchg
sbb
in
push
insl
cmp
fdivl
shrl
negl
xor
dec
notb
pushf
jae
xor
jg
cli
dec
mov
adc
dec
cmc
daa
pop
imul
icebp
std
out
popf
outsl
pop
sbbl
pop
aad
test
add
add
jl
sbb
mov
data16
jb
stos
sbb
cmp
sub
ficoms
xor
sbb
mov
sbb
xor
nop
data16
push
loopne
out
xchg
jmp
xchg
insb
or
lods
cltd
jle
movsl
add
sahf
adc
cmp
aad
jge
push
les
xlat
bound
std
inc
lret
clc
xchg
dec
jno
push
int3
and
ss
mov
cmp
out
push
sub
int
or
add
lcall
dec
leave
cmp
lcall
addr16
jge
inc
mov
xlat
out
add
fucom
lods
pop
dec
mov
cltd
imul
jg
in
adc
mov
clc
loopne
jmp
scas
repz
das
lret
je
sahf
sbb
xchg
cmc
adc
mov
push
cltd
imul
movsb
shlb
aas
call
leave
inc
rcrl
jo
sub
jo
dec
push
add
push
popa
cmp
pop
add
movl
fs
xor
les
cli
jno
shrb
test
jmp
push
out
test
cmp
imulb
adc
dec
pop
mov
scas
or
inc
inc
mov
cs
xchg
mov
mov
mov
xchg
call
pop
adc
cmpsl
js
xchg
adc
xchg
es
xor
mov
inc
scas
xor
loopne
les
ret
push
scas
jne
or
outsb
pushf
addr16
lock
xchg
sub
je
pop
push
rclb
or
roll
mov
call
xchg
push
jp
shll
addr16
inc
in
icebp
insb
mov
jb
pop
push
inc
out
push
mov
pushf
xlat
mov
xor
cmp
mov
xchg
add
add
loope
dec
cmp
mov
or
mov
in
cltd
lret
adc
js
es
lsl
add
out
scas
outsb
ljmp
adc
xor
pusha
jno
test
insb
sub
shr
out
add
push
mov
jle
xchg
lret
mov
mov
pop
mov
fwait
jg
or
imul
pop
shl
add
inc
sbb
mov
cmp
jae
nop
push
les
fdivrs
je
aaa
jl
sub
stos
in
mov
push
mov
lods
mov
sub
mov
ja
xchg
hlt
test
nop
and
int3
inc
negb
mov
cli
popf
shrb
mov
mov
ds
mov
mov
ja
push
clc
nop
cmp
scas
push
popa
adc
or
in
or
mov
negl
push
pop
or
lahf
xor
xor
jmp
cmc
outsb
xor
cmp
xchg
clc
xlat
mov
outsb
loopne
rcrb
sbb
mov
mov
out
inc
mov
cmpsb
lret
xorl
sbb
mov
lahf
jae
fiaddl
pop
push
pop
adc
pusha
in
xchg
cmp
sub
mov
pop
fwait
mov
rorl
push
int3
nop
adc
xchg
xchg
push
aaa
add
or
test
dec
cmp
mov
jns
ja
jp
leave
cs
cmpsb
fldt
icebp
lahf
movsb
add
jb
daa
imul
aas
clc
cmp
push
fisubrs
push
xlat
fistpl
mov
lret
call
mov
fucomip
dec
pop
aas
xchg
pop
popa
daa
cmp
or
test
scas
iret
fwait
pop
pop
cld
pop
addr16
and
stos
add
jmp
mov
das
push
xor
data16
jnp
rorb
test
arpl
inc
fcmovnu
add
and
icebp
or
loop
dec
addb
mov
icebp
data16
pop
fisubrl
rep
or
cli
cld
sub
cmp
in
mov
jmp
cmp
sub
or
mov
cmpsl
rcll
mov
test
fistps
call
js
xchg
inc
dec
mov
mov
adc
ljmp
pop
lret
outsl
xor
dec
sbb
add
es
in
mov
jp
push
push
dec
jle
mov
xor
mov
jl
push
adc
arpl
mov
sbb
sbb
neg
lds
mov
std
cmpsl
mov
and
or
adc
mov
fwait
xor
dec
inc
inc
dec
xorl
or
ds
xor
in
rcll
dec
cmp
push
xchg
aas
add
lret
mov
out
cltd
loopne
jmp
mov
adc
aaa
push
nop
jg
in
mov
iret
int3
leave
and
mov
dec
enter
inc
nop
adc
into
push
lock
movsb
les
fs
adc
add
lods
fistps
out
sbb
addr16
into
stos
insb
xor
jo
jp
adcb
fcoml
scas
addb
outsb
lods
sbb
adc
sbb
test
and
rcrb
and
roll
movsl
jge
or
hlt
loop
adc
cwtl
hlt
sub
cmp
xchg
bt
arpl
cmp
xlat
push
sub
fstps
inc
fldcw
stos
sbb
std
fstpl
mov
dec
insb
test
mov
xchg
dec
outsl
mov
inc
pop
jge
push
jno
or
and
mov
cmpsl
in
add
ljmp
loope
cmp
push
sub
pop
mov
pop
iret
pop
enter
int3
adc
sub
and
iret
js
gs
outsb
rcll
cmp
push
push
sub
pop
cmp
scas
adc
imul
or
jbe
adc
nop
sti
inc
lds
popf
pop
dec
arpl
popa
mov
dec
sbb
adcb
mov
nop
ja
pop
xchg
sub
outsl
or
mov
in
xchg
cmc
hlt
scas
pusha
jns
leave
xchg
test
pop
filds
fadd
fucomi
bound
add
in
push
popf
add
mov
mov
add
cmc
lods
pop
xor
xchg
sbb
sbb
adc
addr16
mov
loop
mov
mov
mov
sub
sub
fnstenv
imul
adc
mov
push
outsl
imul
xor
dec
push
cld
xchg
mov
xchg
pop
rcrb
aad
movl
push
ja
mov
pusha
mov
push
sbb
repnz
push
cmpsb
sub
dec
test
loop
mov
jns
pop
xor
addr16
push
cld
cmpsl
imull
lods
jecxz
push
frstor
xchg
push
aaa
pushf
jbe
sbb
mov
scas
cmp
outsb
fidivs
or
fwait
out
cmc
xchg
mov
or
orl
outsl
fstl
stc
pop
mov
inc
mov
sub
add
mov
add
arpl
cmc
mov
clc
sbb
jo
jb
adc
adc
ja
les
xchg
pop
jge
add
and
rcrl
out
es
cmpsl
mov
mov
call
push
add
mov
sub
sbb
mov
ret
imul
in
add
jecxz
mov
out
pusha
pop
cmp
xor
lea
add
sbb
movsb
pop
mov
flds
sarb
jb
pop
jb
jg
es
sarl
das
testl
or
out
mov
jns
adc
in
mov
and
pushf
and
lret
in
jo
fistpll
ficoms
jbe
lret
loopne
mov
and
cmp
ss
scas
sbb
mov
mov
cmp
cmpsb
shll
push
iret
or
or
sub
call
mov
out
repz
int3
push
cmpsb
xlat
ljmp
pop
int3
shl
data16
or
sub
mov
int3
mov
bound
push
mov
and
push
lret
mov
push
aas
pop
or
movsb
inc
dec
push
stos
xchg
popf
pop
push
stos
lods
mov
sbb
lds
sbb
js
mov
jns
addr16
mov
ljmp
mov
fst
cmpsb
xor
jecxz
fsubrp
push
cmp
add
mov
mov
test
jae
xchg
mov
and
mov
pop
jg
inc
repnz
xorl
xor
xchg
xchg
sahf
movsl
mov
pop
test
mov
outsb
loop
and
out
loopne
enter
pop
pop
push
inc
jge
ljmp
in
icebp
mov
cwtl
fcoml
or
xchg
lcall
cmp
mov
and
leave
into
pushf
or
mov
and
push
enter
mov
aad
pusha
mov
dec
mov
pop
cmp
stc
and
sbb
fwait
and
mov
lock
int
mov
jmp
shrb
ja
dec
inc
ret
xchg
xor
fwait
push
lret
add
sbb
es
rcll
add
aad
sbb
push
cld
cwtl
scas
inc
rcrl
scas
sub
pop
aas
jns
cmpsl
pop
outsb
push
divb
adc
loop
mov
notl
daa
int
push
jl
fcmovnbe
ljmp
gs
aaa
adc
cmp
xchg
call
orl
adc
sbb
icebp
xor
xchg
lcall
cmp
mov
push
lds
or
mov
inc
cmc
pop
mov
fs
mov
das
into
xlat
pop
dec
ret
mov
ud1
in
and
rolb
sbb
mov
js
leave
jb
imul
adc
mov
int3
pop
push
jb
test
pop
push
mov
pop
push
hlt
mov
call
lret
mov
popa
push
mov
mov
jns
pop
lods
fcomps
dec
mov
lcall
mov
cld
mov
jmp
sub
jp
add
int3
in
jo
es
mov
pushf
lret
out
adc
cmp
sbb
adc
jb
adc
sub
nop
pushf
jns
lahf
lret
add
aam
cmc
mov
inc
fs
cmp
and
lret
mov
add
pop
inc
movsb
popf
mov
aad
xchg
or
adc
lock
pop
and
testl
adc
xchg
cmp
lcall
ds
add
cmp
mov
xlat
xor
dec
xchg
xchg
cmc
insl
dec
fs
dec
or
jns
adc
xlat
push
adc
add
inc
push
adc
hlt
in
ror
sbb
ret
out
ds
add
cmp
stos
pop
out
pop
pop
arpl
push
xchg
shlb
mov
stos
xor
ss
subl
add
daa
sbb
jg
add
push
repnz
lret
rclb
out
repnz
add
xlat
fs
andl
divb
sti
pushl
lret
and
cmp
sub
in
mov
movsb
or
push
lahf
jp
popa
jo
outsb
inc
jne
call
pop
xchg
add
int3
push
lods
and
fcmove
jp
mov
dec
dec
cmp
xchg
dec
dec
lret
xchg
jne
ret
adc
pushf
adc
inc
mov
cmpl
cmp
pop
lock
sub
mov
xor
or
mov
or
fistl
shrb
movsb
insl
and
in
push
push
push
sub
test
ss
and
pusha
adc
ss
ldmxcsr
jg
popa
inc
xchg
inc
sub
adc
or
dec
push
sarl
lret
nop
inc
call
xchg
xchg
daa
or
fldpi
pop
jns
out
add
outsl
popa
xchg
sub
and
lods
sahf
xor
cmp
push
jbe
lret
cmp
cld
jge
jns
add
mov
cltd
cwtl
in
out
dec
outsb
cmpsl
fidivrs
daa
and
sahf
mov
inc
fisubl
es
jno
add
mov
lods
out
mov
imulb
sbb
rorb
or
es
and
cltd
and
jge
push
scas
bound
ret
xchg
cmpsl
mov
ss
dec
ret
pop
mov
sbb
mov
les
pop
pop
add
insl
mov
mov
pop
mov
push
leave
cmpsl
cs
std
lret
mov
mov
out
add
mov
mov
pop
sub
stc
or
test
aas
pop
jle
xchg
ljmp
xchg
outsb
adcl
out
stc
sahf
add
add
xchg
stos
jns
into
cmp
arpl
gs
xor
jmp
push
dec
fidivrl
push
mov
push
jg
jno
jb
push
fnstcw
mov
into
and
mov
lahf
jbe
nop
sarb
sbb
add
cld
mov
rorl
lret
aas
ret
sahf
test
add
in
int3
dec
and
aad
sub
jl
sahf
xchg
xchg
in
push
mov
mov
inc
or
pushf
dec
mov
and
aas
and
sub
mov
test
jg
stc
sbb
sahf
sbb
test
lods
rcrb
sub
or
ret
fimull
pmuludq
sbb
cs
mov
push
fwait
rcr
xor
jle
add
mov
sub
pop
pop
out
lods
inc
popa
cmp
dec
xchg
data16
add
mov
xchg
cmp
push
aas
add
jg
cmp
sbb
pop
das
mov
ljmp
out
pop
lret
mov
push
dec
adc
cmc
orb
push
ret
pop
and
into
cmp
sti
stos
mov
adc
lock
inc
out
imulb
into
jle
push
sbb
mov
mov
sbb
int3
arpl
aas
test
jmp
adc
ds
dec
xor
pop
sahf
clc
push
mov
rcrb
pop
sbbb
add
inc
mov
and
inc
inc
in
cmp
mov
aas
movsb
dec
mov
das
or
hlt
jb
outsb
fistpl
fsubrl
nop
push
or
adc
cmp
neg
outsl
lods
mov
sub
cmpsb
sbb
into
sub
jno
jg
cli
cmp
add
idiv
and
fwait
pop
sysret
inc
xor
mov
or
pop
jmp
inc
iret
mov
filds
jns
nop
mov
lods
adc
cmp
push
adc
jl
movsb
in
xchg
arpl
dec
lods
xchg
into
imul
xchg
jne
xor
mov
ds
cmc
jne
rorb
adc
lock
cli
lods
insl
nop
int3
sbbl
inc
scas
mov
dec
popf
addr16
mov
xchg
push
xchg
inc
cltd
in
and
cmp
push
in
cli
push
leave
jge
pop
mov
testl
add
inc
mov
xor
sub
mov
ss
pop
iret
pop
push
pushf
rcrl
inc
inc
lods
pop
adc
dec
or
mov
jne
into
xchg
fildll
inc
dec
push
sub
aam
pop
adc
mov
jnp
sbb
ds
clc
jg
dec
fwait
add
jns
loope
mov
ret
arpl
shll
cld
cmp
pop
xchg
push
aaa
or
push
add
pop
xchg
std
ja
fcoml
lret
adc
mov
rorl
adc
aad
and
xchg
fisubrl
dec
adc
push
mov
xchg
cs
inc
and
sbb
xor
jno
loopne
sub
fistpl
sti
in
or
aas
pop
pop
iret
inc
adc
mov
xchg
sbb
mov
jg
in
pop
arpl
test
out
mov
cmp
lahf
fs
push
inc
rclb
aad
mov
scas
mov
loopne
lds
out
stos
adc
pushaw
xor
roll
cmp
popa
cli
popf
inc
js
ret
outsl
adc
add
in
jp
mov
jnp
sbb
aad
mov
dec
sub
pop
cld
andl
iret
mov
in
arpl
pop
xchg
push
lods
je
sti
adc
mov
dec
sub
loope
jmp
jbe
xor
pusha
fistpll
aam
insb
mov
icebp
stc
test
xchg
jo
and
push
stc
and
lahf
sbbb
jmp
xchg
mov
shlb
imul
mov
insl
push
pushf
add
fsubs
push
add
or
jo
mov
rcll
sbb
cmp
insb
hlt
dec
inc
and
or
out
das
jae
mov
mov
push
sti
daa
loope
lea
adc
dec
pop
movsl
push
jecxz
or
divl
or
stos
mov
testl
xchg
sti
sti
sbb
pop
adc
xchg
into
and
lret
xchg
scas
out
add
imul
dec
sub
fildl
clc
sbb
sbbl
fldpi
dec
push
loopne
imul
shll
es
xor
in
scas
xchg
pop
lea
imul
and
out
ss
lahf
or
cmpsl
ret
leave
enter
jb
stos
or
mov
add
dec
mov
mov
pop
repz
int3
mov
fdivs
out
sbb
loop
sub
jae
xor
sub
test
inc
xlat
mov
sub
jle
dec
sub
outsb
push
out
mov
movsl
or
and
fldt
aaa
out
sbb
jbe,pn
xchg
std
hlt
stc
stos
lock
das
push
pushf
sbb
add
push
js
xor
scas
insl
test
popa
push
push
mov
es
mov
jns
insl
in
shl
jbe
mov
int3
sbb
sti
fs
fistpll
jge
lods
inc
push
cmp
or
sub
xor
xchg
xor
addr16
jle
inc
clc
push
pop
add
pop
and
test
cmp
sbb
adc
xchg
and
or
jle
out
jae
loop
cwtl
cmc
loop
mov
in
and
jns
mov
xor
adc
adc
fldcw
jns
fbstp
mov
sbb
add
push
push
cmc
or
testb
ljmp
into
pushf
jae
xorb
push
fiaddl
aas
jns
mov
cmp
ret
sahf
xlat
mov
or
pop
xchg
xor
sbb
in
mov
repz
icebp
inc
xbegin
xor
orps
sub
outsb
aad
mov
in
ss
insb
cmp
in
or
dec
cwtl
in
and
jo
jp
mov
mov
cmp
out
loopne
scas
in
data16
lret
insb
push
icebp
es
cmpb
mov
insl
and
outsb
pop
rolb
dec
jge
mov
mov
adc
les
daa
ss
and
jle
mov
xor
adcb
jecxz
add
les
cmc
int
mov
test
imul
xlat
pop
loopne
div
mov
in
test
scas
leave
ljmp
daa
adc
jle
leave
gs
cmp
leave
xor
subl
mov
subb
dec
push
rcrl
mov
rcll
inc
arpl
sub
xchg
inc
adcl
cwtd
mov
test
clc
pushf
dec
daa
and
sti
sub
xchg
stos
inc
cmc
movsb
jmp
mov
fiaddl
xor
dec
mov
fcoml
jnp
loop
in
mov
xchg
mov
or
add
push
pop
jge
arpl
add
lret
out
cmpsl
push
fcoml
daa
das
jbe
ds
or
adc
test
rorl
dec
mov
pop
push
sbb
mov
cmp
lahf
dec
pushf
jle
sbb
dec
inc
adc
das
test
jne
cmpsb
jmp
dec
mov
cmpsb
movsb
lahf
jmp
xor
pushf
mov
lock
in
call
pop
mov
xor
lds
call
xchg
mov
out
popa
adc
dec
shll
pop
pop
jecxz
dec
and
adc
and
push
stos
sti
adc
cmp
push
fsubrl
dec
shlb
cmp
aas
jge
rclb
loop
pop
scas
fistps
call
adc
lock
std
aaa
sub
das
mov
outsl
call
repnz
xchg
rcrl
push
pop
xor
cmp
ljmp
fildl
leave
sub
dec
frstor
lcall
subb
insb
lret
test
mov
pop
jmp
xchg
pusha
or
inc
mov
je
test
mov
xchg
mov
push
icebp
and
aaa
xor
stc
out
aam
inc
pop
inc
fisttpl
xor
push
or
pop
push
cmp
pop
cld
mov
roll
pop
pop
or
rorb
lods
inc
test
popf
out
push
mov
test
sub
jbe
pushl
jbe
push
jp
icebp
cmp
aaa
out
dec
xor
mov
or
lahf
xor
ret
scas
test
cmp
decl
pop
push
loopne
pop
clc
cmpsb
xor
insb
int3
push
clc
mov
sbb
std
mov
mov
scas
std
fs
mov
scas
push
cmc
mov
cwtl
les
xor
mov
and
xor
lock
jb
adc
scas
lahf
enter
and
mov
movsb
clc
inc
lret
jg
sbb
and
out
adcl
or
sbb
cltd
popf
mov
out
dec
cwtl
xchg
fldt
loopne
adc
and
js
in
movsl
stos
movsb
cwtl
ret
test
fcomps
jbe
sbb
adc
jbe
sbb
sub
ljmp
gs
push
pop
mov
jno
dec
inc
inc
and
adc
ret
cmc
push
testl
mov
push
fs
sub
popf
push
jno
and
jge
cmpsl
or
fbld
xor
pushf
ret
xor
shrb
add
or
mov
pop
lret
add
call
jmp
push
adc
inc
push
scas
negl
stos
add
movsb
xchg
pop
jle
std
add
bound
bound
aaa
fsubs
mov
cltd
leave
scas
ret
test
out
add
inc
add
ret
jae
scas
push
iret
mov
insb
inc
loop
xchg
mov
jle
jnp
pop
jo
mov
cli
jl
lds
lods
call
mov
cltd
sub
nop
ret
adc
xchg
icebp
mov
lret
js
pop
and
in
pop
clc
les
sti
pop
test
dec
jne
negl
mov
jp
les
push
sti
sahf
cmp
push
pop
leave
xchg
xchg
lret
stos
psrlq
in
imul
mov
cmp
jecxz
jb
push
mov
cltd
xchg
fwait
iret
roll
idivb
sub
repz
leave
dec
mov
scas
push
into
sti
out
push
cwtl
repz
mov
pop
adc
jecxz
outsb
jo
imul
std
addr16
dec
xor
inc
movsb
inc
lods
or
lret
jge
movsl
pop
cmp
sbb
cmp
push
pop
mov
or
divl
in
std
imul
into
shr
test
negb
stos
sbb
shl
cmpsl
orps
mov
mov
pop
mov
xchg
std
cli
repz
imul
ljmp
pop
andb
jbe
sub
mov
sbb
jbe
cwtl
cltd
mov
call
mov
cmp
adc
iret
push
test
in
mov
stc
push
pusha
lods
mov
sti
xor
lcall
adc
cmp
shr
imul
cmp
pop
in
arpl
subl
scas
sub
stos
negl
fldt
inc
sub
mov
mov
mov
sub
in
cmp
and
pusha
movsb
popa
or
pop
ftst
jne
mov
or
mov
ret
clc
test
sub
mulb
repz
mov
into
xchg
or
enter
or
sbb
push
inc
out
lock
cli
xor
fsubrs
jge
and
push
loope
out
push
out
call
lret
aam
push
lods
mov
adc
ss
adc
icebp
pop
pop
inc
push
adc
lea
jne
pop
push
std
test
and
mov
lds
ret
adc
shrl
and
mov
push
shr
rclb
push
xchg
repz
je
rcrb
sarl
cmpsl
pop
scas
test
es
add
jne
pop
jmp
jo
sub
sbb
push
cmp
adc
mov
aas
arpl
rcll
mov
pop
jl
adc
xchg
dec
sub
fstpt
fstpt
push
pop
add
stc
cmp
sbb
sbb
jle
mov
pop
mov
out
cmc
push
ljmp
iret
adc
leave
jae
mov
mov
popa
jb
lcall
mov
sbb
add
daa
ret
or
je
and
jmp
test
add
xor
mov
lods
cli
adc
push
jge
sub
pop
shlb
idivb
lcall
pop
sahf
xor
int3
xlat
push
stc
hlt
lret
cs
les
add
cmp
mov
add
fcmovb
insb
pop
cmp
iret
mov
jl
mov
sbb
out
loop
push
gs
cmp
cmp
fcmovne
xor
lea
loopne
jecxz
mov
lret
push
sub
popl
dec
dec
mov
mov
cmpsl
mov
jnp
jmp
insl
jp
xchg
and
out
cmp
std
es
sub
push
mov
and
dec
loop
fstpt
cmpsl
mov
mov
cmp
cs
dec
fld
and
sub
inc
add
cmp
out
adc
push
rorb
xchg
cmp
cmp
das
sub
rorl
lcall
add
fiaddl
push
and
push
mov
roll
and
adc
push
xorb
mov
out
bound
jnp
pop
dec
cmpsl
or
cmp
push
aam
xchg
hlt
outsb
cmp
pop
aas
leave
mov
mov
nop
mov
dec
mov
mov
and
daa
jo
leave
out
adc
inc
cli
les
cmp
loop
mov
add
testb
xor
stos
and
xchg
add
div
xchg
inc
int
fcmovnbe
into
outsb
loope
jl
mov
jg
cmp
push
std
jl
mull
or
or
pop
dec
ret
cmp
into
sbb
aad
sbb
push
repz
outsb
aam
xor
out
into
push
adc
fldt
sbb
xchg
shrb
lods
fimuls
aam
in
push
dec
js
sbb
push
jae
mov
cli
push
lret
insb
ljmp
jge
scas
push
insb
push
cmp
sub
xchg
jne
mov
push
mov
rcrb
mov
lods
outsb
sub
mov
dec
sarb
into
in
aam
loop
inc
ret
pop
inc
inc
cwtl
decl
add
insl
jno
dec
mov
sbb
dec
pop
sbb
mov
xchg
cmp
mov
push
xorb
jge
incb
xchg
xorb
or
repnz
fucom
cwtd
inc
in
inc
mov
xor
cmp
mov
pop
or
lods
sti
data16
push
sbb
in
pop
adc
pop
arpl
lds
inc
jmp
push
in
dec
xchg
jnp
and
xchg
cwtl
int3
adc
in
add
lods
loope
sbb
enter
outsb
jecxz
dec
push
adc
pop
bound
sbb
push
imul
dec
in
inc
add
iret
jae
xchg
rorb
add
es
mov
loopne
lret
pop
js
lahf
bound
fmull
xor
loope
add
cwtl
data16
test
pop
addr16
lret
jmp
jo
push
in
mov
cmp
cs
jns
jnp
mov
js
add
in
ror
imul
pop
and
testl
out
sahf
cmpsl
out
mov
ret
out
daa
or
repz
daa
es
imul
jae
mov
mov
js
jle
ret
or
mov
fnsave
jo
mov
stc
dec
sub
jns
fwait
sub
sub
dec
push
mov
iret
ja
fcomip
xor
shlb
sub
rcll
iret
pusha
ja
scas
iret
jns
cwtl
lds
repz
xchg
cltd
std
clc
in
stc
roll
mov
sbb
test
shl
mov
xor
mov
cltd
fs
mov
mov
xchg
fwait
fs
pushf
mov
xlat
push
ljmp
int3
inc
imul
out
cltd
sbb
mov
into
sub
test
dec
les
lret
add
xor
dec
das
push
adc
and
or
sbb
aas
loopne
adc
rorb
es
fld
cmpsb
inc
rol
pop
mov
or
add
cwtl
inc
fildll
push
sti
leave
stc
cld
ds
ljmp
cmp
push
insl
inc
ljmp
fadds
je
scas
xchg
imul
mov
lret
inc
pop
xlat
shll
mov
inc
shll
mov
dec
inc
cwtl
add
inc
push
mov
and
or
dec
bound
loop
jae
test
pop
sbb
rcll
jmp
mov
or
or
inc
ret
roll
pop
lods
or
sbb
popl
push
dec
sbb
aas
lea
inc
imul
pop
mov
leave
imul
sub
outsb
lods
xchg
mov
xchg
mov
mov
and
jno
mov
mov
movsl
cwtl
xchg
xor
pop
xor
test
xchg
jecxz
cltd
lods
lcall
popf
bound
xor
rclb
lahf
shrb
pop
sub
mov
mov
ja
mov
int
ds
dec
rorl
aaa
testb
add
adc
cmp
dec
or
mov
or
jno
test
mov
test
addr16
mov
jmp
mov
popf
mov
mov
arpl
sbb
and
dec
pop
test
inc
std
dec
push
outsl
mov
addr16
pop
inc
scas
pop
sub
in
adc
fwait
leave
popa
mov
jo
ret
sub
add
or
scas
fwait
lret
and
les
nop
loope
cmp
lods
lahf
and
out
pushf
add
adc
dec
adc
lds
adcb
das
int3
xchg
cmp
push
je
leave
adcb
loop
sbb
imul
lock
or
cmp
xchg
popa
les
mov
pop
cmp
aaa
call
add
ds
arpl
push
adcl
mov
out
adc
aas
imul
call
insl
ret
popa
test
imul
push
jno
fwait
push
lahf
imul
fmul
out
dec
notrack
jecxz
jne
adc
movsb
xchg
mov
daa
xlat
call
nop
jo
cltd
jne
dec
xchg
rorb
cmpb
in
gs
sub
mov
roll
xchg
add
mov
cmp
repnz
mov
cmpsl
ret
xor
sti
lret
or
mov
fbstp
rcr
mov
hlt
xchg
ja
rcrl
pop
add
daa
call
adc
inc
fs
int3
add
jns
cmp
outsb
stos
cs
cmp
sbb
test
sub
sub
nop
inc
sti
or
mov
push
icebp
movb
cli
cmp
shl
xchg
inc
adc
iret
pop
imul
inc
sbb
cmc
lret
mov
pop
push
adc
sahf
in
ss
aaa
out
mov
inc
pop
loope
je
mov
or
xchg
inc
push
push
push
mov
dec
inc
loope
test
cmp
dec
leave
xchg
aaa
jne,pn
mov
movsb
lock
fidivl
shrl
loopne
push
daa
loope
mov
ljmp
cmp
cmp
adc
mov
rorl
int
in
pop
pop
in
shrb
push
mov
mov
sub
in
enter
sti
add
call
mov
mov
daa
faddl
dec
in
imul
sbb
mov
movsl
filds
add
mov
push
lock
xor
mov
pop
mov
test
pop
fadd
pop
cmp
stos
stos
sub
rcr
cmpsl
mov
out
fcompl
add
mov
out
cmp
pop
cmp
es
mov
adc
in
movq
inc
scas
shrb
fsts
push
xchg
jmp
add
out
dec
mov
nop
xor
cmp
std
or
lcall
inc
shrl
push
pop
push
mov
es
andl
xchg
sarl
sahf
popl
int3
cs
adc
mov
subl
xchg
mov
lret
int3
in
shll
cmp
adc
xor
dec
mov
or
jbe
jl
inc
xchg
mov
jle
jl
pop
rcl
inc
loop
divl
lret
ljmp
inc
sub
int
xchg
and
lods
int3
popa
and
loop
jo
add
lea
das
dec
aam
dec
cmc
adc
test
std
test
inc
cs
in
jp
stos
mov
sub
movsb
add
cs
push
jecxz
mov
sahf
pop
in
popa
test
dec
ds
loope
addr16
cld
mov
addl
and
fisubrs
sahf
loop
nop
sbb
mov
lock
jae
imul
mov
jmp
push
and
sbb
sub
roll
xchg
xor
pop
test
xchg
pop
pop
xchg
imulb
addr16
or
jns
jnp
adcl
subl
or
xchg
jmp
lret
push
mov
adc
mov
jbe
push
fmull
repz
add
je
mov
hlt
xchg
xlat
jae
rclb
mov
jmp
sub
iret
sbb
xchg
ds
sub
sub
xchg
in
arpl
push
sub
jbe
sub
inc
cmc
loop
mov
xchg
add
sti
iret
fisttpll
pushf
jo
cmpsb
cmp
cmp
fsubrl
int3
push
cs
jg
cmp
dec
inc
shrb
fdivl
and
xchg
js
xchg
pusha
inc
sar
mov
or
cmpps
fdivrs
sbb
fstl
scas
adc
lods
fwait
jo
inc
repnz
xchg
mov
out
out
icebp
imul
and
mov
mov
mov
rclb
mov
icebp
arpl
fldenv
push
fnstcw
cmp
into
push
stc
xor
arpl
or
mov
mov
pusha
sahf
cmp
inc
roll
xchg
and
cmp
and
shlb
push
bound
ds
push
imul
mov
inc
test
mov
push
notb
fdivrs
mov
cmpsl
cs
cmp
test
pusha
fldenv
mov
push
pop
add
or
xchg
loopne
mov
inc
cmp
inc
cmpsl
mov
imul
lds
jae
mov
push
js
mov
pop
fistps
dec
insb
sub
add
mov
jmp
mov
ret
xchg
mov
cmp
fwait
dec
rcll
das
jnp
fwait
lret
xor
aas
and
data16
mov
jecxz
jno
hlt
outsw
lds
cs
das
lods
pop
xor
jb
xor
aas
in
cmp
inc
out
fidivl
out
movsl
mov
test
add
dec
sub
aad
ds
jecxz
mov
push
cli
xchg
xor
push
cwtl
xchg
push
mov
imul
bound
cltd
sub
roll
xor
stos
jmp
adc
hlt
sub
std
or
out
pop
leave
fs
and
mov
je
mov
adc
mov
or
ss
xchg
sub
fwait
negl
xor
mov
push
test
jne
lret
test
sar
hlt
mov
xor
add
fsts
sub
xchg
push
dec
jae
jo
in
pop
push
adc
sub
mov
scas
sbb
loopne
lret
out
ret
mov
enter
adc
mov
test
loopne
cmc
mov
cmp
jmp
mov
pcmpgtw
enter
lret
pop
inc
and
bound
push
fsts
fnstsw
mov
ja
xor
push
daa
dec
pop
push
or
shlb
adc
sarb
loopne
adc
fucom
mov
aad
shll
xchg
lods
mov
fldl
mov
pop
mov
sub
test
adc
sbb
mov
jle
add
test
pop
repz
stc
std
dec
fs
rcrl
lret
out
mov
add
adc
dec
shll
bound
sbb
out
jmp
add
xchg
sbb
ret
test
xchg
mov
jecxz
mov
sbb
push
imull
scas
dec
xor
push
mov
jne
adc
stos
push
jecxz
out
iret
pop
mov
in
add
push
stos
sbbb
loope
add
fisttpll
jbe
or
pusha
fld1
adc
adc
xor
xchg
imul
cmpsl
lds
jo
shrl
jnp
pusha
insl
int3
fisubl
mov
push
sub
xchg
out
mov
pop
je
fadds
pop
jns
ret
cmp
inc
stos
push
dec
fsubrl
lock
xchg
sbbb
bound
mulb
hlt
sub
lcall
out
fucomi
aam
cmp
jbe
mov
jo
fstps
sbb
sbb
add
in
loop
xor
aad
cmpsl
and
movsl
xor
adc
mov
test
jo
daa
pop
jecxz
mov
clc
pusha
repz
mov
mov
repnz
push
add
bound
mov
in
imul
push
pop
in
xor
sbb
or
aad
jp
in
jmp
and
std
cmp
lods
and
dec
or
je
and
call
ljmp
xor
mov
xlat
jne
fcompl
xchg
or
push
paddsb
push
ss
pop
push
mov
sub
jmp
or
mov
xchg
rolb
outsb
inc
or
pop
clc
mov
xor
das
xor
iret
clc
or
mov
fsub
outsb
xor
jne
or
jle
mov
push
cld
rol
lds
aas
and
xchg
shll
mov
dec
xchg
lahf
sarl
dec
cmpl
sub
mov
sub
cli
mov
lahf
in
push
pusha
subb
movsb
pop
xchg
ja
jmp
ret
xor
mov
dec
inc
aam
pop
int3
movsl
inc
enter
pop
xlat
jae
xchg
mov
cmp
stc
or
mov
and
imul
rclb
pusha
into
xchg
mov
add
js
enter
fs
mov
clc
loop
dec
sbb
xor
imul
pop
repz
in
and
lds
lea
mov
test
loopne
dec
adc
pop
iret
jnp
call
sti
push
lods
out
xchg
add
jo
das
mov
pop
out
dec
stc
jbe
cmp
popf
bnd
or
pushf
iret
cmp
repz
sahf
fiaddl
or
xchg
mov
sub
pop
stos
xchg
divl
mov
mov
inc
popa
dec
xchg
mov
lahf
fmul
push
daa
or
mov
mov
in
cld
imul
out
jns
jbe
adc
pop
adc
subb
xchg
test
and
les
test
adc
ret
je
je
int
cli
add
push
aas
push
pop
inc
aas
push
repz
orb
test
mov
adc
mov
push
add
push
fdivs
fst
lahf
adc
jl
fabs
mov
mov
mov
mov
js
and
xor
loop
xchg
pop
dec
pop
lahf
pop
and
scas
push
dec
or
ret
and
gs
clc
ret
xor
shll
jbe
inc
mov
inc
cmp
sbb
push
out
cmc
inc
mov
pop
dec
ss
inc
xor
sbb
mov
mov
pop
imul
fbld
in
lods
out
push
adc
stos
mov
xchg
xor
jne
mov
in
stos
shrl
mov
je
ss
fidivrl
andb
sub
and
gs
sarl
repnz
stc
repz
add
sbb
cmpsb
cld
fcoms
cli
es
dec
pop
fwait
pop
clc
pop
hlt
or
add
cs
sti
int
xor
inc
test
jle
lret
adc
cs
mov
inc
mov
mov
sbb
js
pop
mov
mov
mov
pop
cmp
xchg
push
xlat
push
leave
push
js
stos
ja
push
movsb
nop
ds
add
jne
push
sub
inc
pop
fcmovnbe
lds
shlb
mov
jmp
pop
mov
xchg
add
test
mov
lret
push
fildl
inc
mov
cmp
inc
sbb
popa
icebp
test
adc
lods
shrl
popf
mov
jg
test
pop
inc
xor
sarb
clc
aas
jl
xor
xchg
fwait
inc
gs
lods
sub
xrstors
add
xchg
sub
lahf
xchg
xchg
jb
fidivl
int3
push
repnz
xchg
mov
pop
push
outsb
and
enter
cmp
push
mov
xor
jb
xchg
es
movsb
rcrb
setnp
pop
and
push
dec
data16
test
stc
jecxz
mov
dec
dec
arpl
mov
pusha
jge
roll
or
mov
out
or
push
sahf
cmpsb
out
lods
mov
movb
sub
testl
push
adc
cs
fldenv
push
push
imul
into
outsb
xchg
popf
pop
xor
sub
pop
mov
and
adc
inc
imul
sti
add
push
and
jl
pop
push
xchg
or
mov
xor
std
mov
ds
fcompl
add
ja
nop
cmp
mov
addb
push
xchg
mov
movsl
mov
fsubrl
sbb
in
fs
dec
mov
icebp
addr16
sbbb
outsb
dec
mov
orb
xchg
lock
idivl
imul
pop
lret
lock
cld
cli
mov
rclb
incl
sbb
test
jbe
paddw
mov
dec
mov
xor
mov
popf
push
jno
inc
imul
push
enter
pop
out
cmp
bound
cld
xor
ret
xlat
movsb
dec
js
xchg
jae
cmc
lds
pop
inc
mov
and
push
mov
pop
gs
adc
push
test
mov
hlt
and
in
in
sub
pop
dec
mov
js
nop
xchg
scas
pop
sub
fldcw
cmp
push
mov
notb
outsb
push
and
loop
daa
xchg
ljmp
or
jmp
daa
and
fsubrs
pop
sub
pop
xor
test
and
std
xor
mov
dec
jo
or
mov
pop
test
push
sahf
inc
or
jno
aaa
pop
or
subb
mov
repnz
and
lds
xor
in
pusha
jl
inc
loop
mov
scas
dec
or
cmp
lods
jl
nop
stos
adc
dec
js
sbb
inc
xor
push
and
mov
push
mov
pop
in
pop
cmp
and
sub
sbb
cltd
outsl
jecxz
andl
cmpsb
outsl
sub
jns
pop
mov
pop
push
pop
fbstp
mov
sub
inc
or
xor
and
pushf
imul
decb
les
push
push
fnsetpm(287
xchg
mov
int3
xchg
call
iret
icebp
adc
xor
cmp
cmc
pop
fidivrs
dec
fxch
push
js
test
push
sub
stos
cmpsl
hlt
xchg
xlat
jmp
aam
mov
mov
dec
iret
sub
pop
mov
push
push
addr16
scas
jg
fs
dec
adc
stc
sbb
sbb
push
and
and
dec
inc
push
dec
ret
stos
push
je
and
sti
dec
sarb
das
mov
cmpsb
jge
loop
ljmp
adc
mov
xchg
pop
sub
mov
ds
xchg
clc
dec
pushf
adc
sub
adc
loop
lret
jecxz
enter
or
sub
or
orl
fcmovnu
sbb
loope
push
dec
cltd
stos
sub
popf
and
and
flds
lea
dec
pop
fucomi
adcb
into
cmp
mov
mov
or
jecxz
add
jmp
jo
mov
or
mov
icebp
shrl
les
push
inc
jnp
jb
cmpsl
pop
xchg
mov
sbb
fsts
leave
or
and
loopne
orb
imul
in
xor
adc
jl
bound
push
cmc
push
mov
or
jecxz
insl
add
imul
inc
push
sub
xchg
sbb
mov
subb
rcll
dec
test
xor
jns
lahf
sub
xor
das
cmp
sub
cmp
push
subb
das
xchg
dec
cmp
mov
mov
jle
push
sbb
loop
das
fisubrs
inc
scas
fisttpl
repnz
aad
pop
andl
dec
xor
xor
fwait
in
adc
in
push
push
push
movb
or
or
jmp
imul
orb
out
mov
outsl
sbb
xor
addr16
addr16
jmp
sub
and
push
add
cmpsb
push
jg
and
data16
pushf
jmp
and
outsl
sbb
scas
ja
lock
jmp
movsb
pop
inc
mov
fs
lcall
movsb
incb
pop
dec
es
adc
sub
inc
xor
sbbb
xchg
adc
movsb
aas
mov
insl
les
test
mov
int3
data16
insb
in
ret
inc
inc
dec
icebp
test
sub
add
push
mov
test
pusha
mov
cli
out
sbb
mov
das
lret
jecxz
ficomps
add
aaa
xchg
jl
lods
mov
jbe
cli
or
cmp
insl
roll
ret
imul
sub
dec
insb
mov
xor
pusha
xchg
sbb
cwtl
scas
call
lret
xor
gs
add
push
and
dec
ss
rcr
jbe
mov
test
dec
outsb
cmp
jno
adc
sbb
dec
rcr
enter
xor
sti
out
jle
addr16
outsl
out
push
mov
xchg
add
jg
and
lea
popf
xchg
fs
jle
daa
dec
inc
mov
test
lea
mov
mov
inc
stos
sbb
lods
lcall
or
dec
jg
xorl
cmp
cwtl
mov
data16
fmulp
inc
mov
out
in
orl
jg
xchg
jg
pop
ds
inc
xor
xchg
enter
hlt
mov
cld
pop
leave
fildll
xchg
lods
adc
mov
pusha
repnz
shrl
lea
lds
movsl
sbb
les
movsl
fnstsw
imul
mov
js
mov
lret
jmp
mov
andl
enter
stc
in
jp
ja
outsb
and
ja
xlat
je
fcompl
cmc
xchg
std
sub
jle
and
add
push
mov
pop
mov
mov
lret
mov
les
or
out
gs
mov
loop
inc
lcall
test
into
test
out
mov
clc
push
mov
push
call
xchg
pop
imul
adc
sbb
xor
or
xchg
repnz
jecxz
mov
aaa
std
out
mov
arpl
xchg
mov
jg
lret
lock
popa
pop
stc
mov
mov
lret
dec
push
xchg
mov
int3
pop
and
or
and
aas
adc
dec
les
push
xchg
incb
mul
pop
or
add
scas
adc
testl
add
mov
cmp
leave
ds
lods
cmp
fsts
cmp
fnstenv
pop
jp
mov
mov
jbe
pushl
fbstp
ret
pop
dec
jae
cmp
push
sbb
push
rorl
into
in
jl
add
test
push
out
aam
sub
out
insl
xchg
push
xchg
add
lds
loopne
mov
mov
test
cmpsl
sbb
js
sub
imul
jae
stc
sub
std
js
mov
fidivrl
push
addr16
adcb
or
fistps
cmp
sub
xchg
lret
test
out
fdivrs
popf
shrl
and
xor
scas
cmpsb
out
iret
cmc
and
sub
les
cs
mov
rcrl
out
xchg
adc
fsubl
out
in
mov
add
shrb
lods
ja
sub
inc
fstl
in
xchg
cli
mov
sub
aam
add
sti
or
xchg
xor
cmc
inc
out
ljmp
ret
xor
shr
fistps
or
insl
adc
fistpl
jecxz
mov
ja
pushf
or
inc
rolb
cmpb
xchg
pop
fsubrs
dec
sti
and
sbb
xor
ja
add
lea
add
lahf
sub
mov
ss
ret
fmuls
sub
mov
and
jge
ror
xor
mov
and
jo
jno
mov
sub
push
cltd
popf
sbb
test
sub
jl
shll
push
lods
xchg
iret
cltd
push
and
jle
jmp
fildll
rorl
stc
pop
xor
jg
mov
movsb
bound
repnz
cmpsb
sub
inc
jle
push
lret
push
mov
push
and
push
or
inc
cmc
cltd
push
hlt
mov
rcrl
add
xlat
adcb
insl
nop
dec
pop
repnz
and
and
fidivrs
mov
mov
popl
mov
loop
mov
push
cmpsb
repnz
fcmovnu
jmp
cld
pop
adc
and
sub
cmpsb
mov
incl
jnp
sbb
pop
dec
aad
cmp
sti
push
adc
xor
cli
into
dec
das
dec
std
adcb
lahf
xchg
jbe
in
jnp
addl
ljmp
and
or
pop
mov
int
int3
jge
mov
aaa
push
adc
mov
sub
into
xchg
xchg
inc
inc
sub
insb
ljmp
orl
lods
test
scas
ja
imul
ljmp
shll
pop
fmull
int
add
rcl
mov
cmp
nop
out
lods
jle
je
and
dec
sub
loop
cld
cmc
push
shrl
xor
add
movsl
or
lcall
mov
icebp
or
aam
pop
pusha
pushf
xor
xor
js
and
mov
stc
xchg
mov
dec
lcall
sbb
dec
mov
and
pop
adc
jp
dec
and
add
push
rclb
add
adc
lret
jnp
incl
lcall
lcall
xor
sub
inc
aas
int3
outsl
ja
flds
mov
shr
xor
xchg
outsb
in
pop
push
inc
add
insb
repnz
mov
ja
cmc
add
or
mov
push
push
jb
fsubl
sub
xchg
es
and
xchg
sub
xchg
call
popa
shll
and
mov
pusha
or
pop
imul
aad
js
cli
fistpll
mov
pop
pop
jmp
mov
mov
rclb
dec
dec
and
ret
jge
nop
icebp
pop
pusha
jno
gs
jecxz
jns
loop
push
shl
mov
sbb
dec
lods
jecxz
icebp
jecxz
call
dec
mov
popl
xchg
pop
push
or
mov
mov
mov
movsl
cmp
jmp
jp
cld
mov
hlt
outsl
out
jl
leave
in
push
scas
sub
pop
cmp
in
hlt
dec
adc
scas
jbe
insb
fwait
pop
arpl
push
js
mov
mov
mov
add
cmp
repnz
sub
cltd
jb
repz
xlat
sub
iret
gs
push
cmp
sub
xlat
pop
movsb
into
mov
fsubrp
negl
std
dec
je
je
dec
loope
inc
sub
pop
xor
clc
sarb
loop
lds
cwtl
fdivl
rcl
jg
out
mov
push
aas
out
psrlw
out
xchg
dec
pop
xchg
add
and
cmp
or
or
sub
fldt
mov
movsl
adc
outsl
inc
fwait
push
dec
push
xchg
sbb
jae
arpl
pop
and
adcl
aas
xor
push
adc
cli
lea
sub
adc
jmp
sub
aad
decl
adc
jle
rcrl
xchg
fsubs
and
inc
xor
sbb
sub
or
lea
push
out
xchg
or
pop
or
mov
jg
rcrl
xlat
mov
leave
adc
addr16
push
rcrl
pop
mov
out
movsl
xor
fmuls
sbb
cli
in
mov
inc
in
push
out
subl
pop
push
in
in
cmp
jns
icebp
rcr
and
icebp
or
or
popa
add
or
ds
cmp
dec
test
decl
push
adc
outsb
mov
cmp
cli
and
es
push
or
data16
gs
in
mov
test
lret
negl
testl
out
leave
ljmp
insl
lret
nop
scas
push
out
sarb
or
sahf
popf
movsb
sub
arpl
xlat
xor
adcb
add
mov
inc
push
mov
xchg
push
into
and
jp
cmp
into
stc
loop
nop
jle
jne
or
lcall
and
das
dec
add
das
dec
sub
adcw
test
shrl
sbb
xor
outsl
into
bound
lret
cmp
add
cmp
sub
jno
sub
adc
or
ja
sbb
mov
and
bound
out
repnz
pushf
inc
xchg
call
and
lods
fstps
loopne
inc
cwtl
mov
outsb
cmp
mov
pusha
mov
jle
hlt
arpl
jne
gs
mov
sub
movsb
mov
and
push
sbbb
sub
repnz
jge
cmp
daa
loopne
mov
or
mov
and
ja
sub
xchg
idivb
cld
jbe
cmp
inc
shl
mov
xchg
outsb
inc
data16
ret
pop
mov
mov
add
dec
test
jmp
rol
cmpsb
push
and
push
pop
aas
mov
loop
sahf
inc
out
mov
jb
loopne
stos
adc
pop
xchg
in
sub
sti
pop
xchg
mov
bnd
mov
xor
ljmp
add
adc
stc
pop
jmp
jle
adc
adc
movsl
sbb
es
cmp
gs
xchg
mov
push
push
xlat
aas
adc
jmp
rcrl
repz
ret
push
aad
add
ret
std
xchg
push
movsl
push
cld
arpl
int3
pop
jge
jp
out
or
jp
cld
xor
fsubrl
in
jno
xchg
mov
mov
ffreep
add
adc
sahf
daa
or
push
testl
gs
roll
mov
dec
jns
or
insb
sub
or
out
adc
inc
popa
in
rol
out
and
hlt
sub
sub
stos
mov
pop
and
add
mov
and
dec
into
pop
lret
push
ret
mov
pop
push
pop
xchg
shr
pop
add
jle
sbb
leave
rcrl
cmp
test
push
lret
lods
mov
fwait
xlat
adc
or
test
outsl
imul
push
test
out
sub
aas
mov
movsb
mov
or
pushl
xchg
cmp
cmp
sbb
pop
jns
insb
pop
movsl
mov
mov
test
xchg
inc
js
xlat
pop
adc
loopne
in
sbb
inc
or
ljmp
enter
dec
fs
xchg
test
sub
mov
std
pop
in
clc
in
adc
fsubr
ds
stos
mov
lret
dec
push
jae
xchg
cs
dec
push
jge
insb
cltd
inc
repnz
sbb
ret
sub
push
es
pusha
xchg
jecxz
paddq
cmp
push
ss
adc
lea
fcompl
rolb
repnz
dec
clc
andl
cmp
in
push
jb
std
imul
test
pop
ljmp
gs
cmp
mov
cmp
mov
or
push
in
cmpl
mov
and
pusha
rolb
xor
movb
sub
ss
test
adc
jl
xlat
insb
push
and
pop
sub
pop
imulb
inc
inc
inc
pop
call
xchg
dec
jle,pn
lahf
inc
mov
cmpsb
push
xchg
les
xorb
jb
sahf
mov
test
xor
int3
dec
dec
int3
and
adc
scas
cmpl
lret
adc
jae
jbe
mov
push
lods
es
cmpb
push
cmp
ljmp
lea
gs
scas
frstor
stos
jle
jbe
fidivrl
shll
mov
mov
movsl
ds
jl
xchg
clc
mov
sbb
into
ret
mov
and
cwtl
push
sub
aad
push
dec
mov
data16
fidivl
mov
in
or
xchg
dec
stc
cwtl
notl
xor
jae
loop
xchg
in
incb
pusha
or
add
dec
mov
or
repnz
or
inc
daa
rorb
dec
or
mov
in
inc
lds
cmp
aam
push
push
fdivrs
xchg
stos
clc
int3
decl
leave
loopne
aas
cld
add
arpl
and
fsub
lcall
and
aas
mov
pushf
push
int3
out
stos
repnz
mov
and
or
xor
mov
dec
or
rcr
mov
mov
and
out
jle
or
push
xor
aam
and
jmp
mov
pop
mov
sarb
das
out
cmpsl
lahf
inc
shlb
adc
ret
sahf
rcll
xor
ljmp
mov
test
call
dec
mov
notb
adc
sbb
stc
adc
je
mov
leave
and
enter
leave
test
in
call
pushf
out
clc
jle
sbb
jmp
mov
mov
sbb
sub
jo
ficomps
ss
cmc
scas
aam
sbb
scas
jge
test
add
clc
push
lea
jo
call
scas
dec
jb
sti
xchg
pop
cmp
addr16
shll
cld
fisttpl
xor
add
and
pushf
fs
sub
gs
sar
das
inc
jecxz
pop
mov
aaa
mov
pop
orl
fucomi
jne
sub
cld
mov
xchg
jns
stos
jnp
mov
js
xchg
mov
fs
adc
mov
insl
int3
cltd
mov
pop
dec
fwait
hlt
push
cmp
sbb
or
clc
in
enter
sub
daa
in
test
cmp
jl
jmp
add
cmp
cld
outsb
and
ret
movsb
mov
icebp
out
popa
cmpsb
mov
shlb
cs
clc
push
cli
jmp
push
cli
and
mov
mov
mov
ret
loop
pop
nop
jnp
or
lcall
outsl
push
jne
popa
mov
and
cmpsb
popa
pop
mov
insb
sub
in
stc
xchg
stos
and
mov
add
dec
jmpw
adc
and
pop
pop
imul
mov
pop
sbb
stos
call
xchg
sub
repz
ficoml
pop
roll
adc
jg
sahf
mov
sub
jg
sub
and
cltd
add
lds
sbb
sbb
ljmp
fsub
ja
lds
movsl
std
xor
or
inc
inc
in
fildl
sti
test
sti
and
xor
bswap
rorb
ficoml
push
sbb
mov
mov
xchg
jno
ja
imul
loope
fimull
pop
popa
or
sbb
scas
jae
push
sub
and
jle
cmp
sarb
mov
mov
sbb
push
cmpsb
popf
xor
jo
clc
je
cmp
pop
cmc
and
jbe
outsb
xchg
dec
xor
inc
adc
ret
addr16
xchg
xor
cmp
mov
dec
sbb
sbb
or
imul
pop
sub
pop
inc
mov
cmp
mov
insb
inc
shrb
daa
out
cmp
xchg
mov
sbb
or
inc
xlat
dec
or
loope
loopne
mov
es
call
push
mov
repnz
add
adc
inc
lahf
cs
jno
mov
in
push
gs
insl
test
mov
mov
mov
xchg
addr16
pushf
sbbl
push
sub
add
in
pop
dec
imul
dec
sbb
sub
sub
leave
jnp
sbb
negl
dec
pop
sbb
aad
jno
in
xchg
jle
fidivs
in
aaa
in
mov
std
jle
ror
leave
lds
pop
data16
inc
mov
fmuls
xchg
repnz
mov
jae
popa
imul
stc
mov
mov
cmp
sbbb
sbb
rorb
jno
fldenv
xchg
push
or
mov
iret
jae
cli
xor
clc
jmp
out
mov
mov
stos
mov
sub
aas
scas
push
sbb
insb
jl
out
xchg
cmc
adc
cmpsb
push
jmp
lods
mov
cmp
inc
and
daa
loop
pusha
roll
faddp
sarb
jp
ss
cmpsb
stc
mov
or
jg
mov
in
cmp
scas
jg
inc
stos
xchg
adc
sbb
dec
sti
lcall
hlt
dec
out
xchg
test
nop
or
mov
mov
sbb
cmpsl
fimull
sahf
bound
xor
mov
in
xor
mov
xchg
mov
lea
add
popa
and
sti
add
cmp
xchg
lret
scas
pop
inc
popa
xchg
cli
out
scas
pop
in
in
or
inc
cmc
outsb
fcomps
inc
outsb
mov
push
sahf
outsl
test
loop
loope
dec
les
aaa
std
js
push
sbb
hlt
outsb
or
xchg
pusha
int3
mov
clc
mull
push
pop
ds
jge
fadds
mov
mov
das
and
push
into
loope
shr
lea
std
adc
add
cltd
enter
ret
insb
dec
push
das
fldt
jmp
inc
stc
pop
imul
xchg
idivb
dec
xchg
aam
in
mov
lods
aaa
jno
int3
jle
pushf
jecxz
cmp
or
daa
xor
cwtl
inc
lahf
aam
pop
and
stos
ds
adc
push
xchg
jne
xorl
lea
out
das
insb
or
jge
ret
cmp
xor
cmp
int
icebp
sbb
lods
imulb
ja
lock
xchg
and
roll
and
xor
dec
pop
sub
push
fdivp
cmp
xor
stos
push
insl
add
mov
pop
cs
mov
push
popf
push
sub
pushf
outsb
xchg
daa
je
add
cli
mov
mov
push
sbb
push
stos
xor
mov
mov
lods
daa
fimuls
lods
xchg
rolb
xor
mov
cmpsb
int3
and
mov
mov
mov
loop
dec
xor
out
fildll
bswap
dec
pop
lods
jge
std
xor
jbe
cmp
xor
pop
loope
adc
cltd
mov
pop
jle
or
cmpsl
jl
cmpsb
jecxz
sbb
dec
push
and
inc
mov
in
imul
sub
jb
mov
cmp
lcall
cmp
js
xchg
jno
sub
out
sub
inc
mov
sub
int3
out
xchg
dec
shrl
and
jmp
addr16
lahf
ss
mov
hlt
sub
cmp
fmuls
jbe
and
dec
sahf
stos
mov
mov
jne
inc
ja
mov
sub
mulb
insb
cmp
mov
js
das
xchg
cwtl
in
daa
mov
mov
push
lahf
sbb
jnp
push
mov
mov
push
sti
mov
jbe
add
mov
xchg
xor
and
test
outsb
and
loop
jl
xor
xchg
xchg
pop
fcmovu
or
lcall
xor
lock
popf
scas
or
cmpsl
les
fmulp
dec
mov
fld
popa
nop
mov
dec
and
mov
cmc
into
inc
lret
sbb
add
stos
cmp
pop
push
inc
dec
sarl
xchg
mov
adc
shl
jl
data16
lcall
pop
iret
mov
jbe
xchg
inc
mov
nop
sub
adc
ja
in
xor
in
int
ror
push
outsl
shr
stc
test
xchg
testb
aam
adc
cltd
orl
test
dec
or
stc
xlat
sti
cmp
push
sbb
mov
cltd
in
pop
mov
mov
daa
loope
ds
dec
adc
push
cwtl
stos
cmp
inc
and
int
mov
mov
jmp
mov
repz
lds
push
or
xchg
jle
pop
into
jge
fwait
lahf
add
xor
or
push
sub
fmul
jo
mov
jmp
cmp
mov
inc
adc
imul
pop
rcl
xchg
cmp
pusha
jmp
jo
movsb
inc
mov
jnp
dec
sbb
pop
mov
pop
sbb
sub
pop
xchg
add
scas
mov
movsl
inc
and
sub
shlb
xor
jnp
xlat
cli
test
and
inc
add
nop
leave
mov
mov
loope
int3
int
dec
pop
pop
dec
in
push
fbstp
pop
testl
sbb
loopne
xchg
mov
movsb
adc
divb
cmp
jle
fimull
jns
rorb
add
enter
and
fs
add
push
push
ds
or
xchg
es
in
sbb
popa
or
pop
or
mov
or
addr16
jmp
sbb
pop
cld
lret
push
mov
adc
out
js
mov
loopne
jge
push
inc
sbb
sub
or
and
cs
sub
xor
inc
push
imull
xor
jne
or
enter
xor
jge
scas
dec
pop
mov
mov
sahf
adc
jb,pn
adc
iret
cmp
mov
and
and
adc
mov
jns
xor
popa
push
or
out
lds
sbb
mov
pop
push
lea
jmp
add
or
xor
sub
ja
xor
dec
lock
sbb
enter
pop
lds
mov
xchg
cld
cmp
mull
mov
or
mov
insb
adc
ja
xorb
pop
add
xchg
test
test
aad
decl
mov
xchg
arpl
dec
imul
or
std
out
movd
inc
add
lret
and
mov
ss
rcll
es
ret
push
divb
cmp
and
dec
movsb
or
inc
test
jg
sbb
sbb
loope
or
and
out
ds
test
cld
fmul
mov
mov
cmp
out
data16
and
push
lcall
pusha
sbb
aas
loope
stc
movsb
jmp
fwait
sahf
push
adc
in
xor
push
test
lret
ja
ss
xchg
cmp
mov
adcb
loopne
sbb
mov
sahf
ljmp
shlb
dec
sub
inc
push
lcall
or
cmp
pop
fcompl
imul
cwtl
or
test
mov
push
and
mov
decb
push
and
scas
pop
lahf
sbb
adc
movsl
outsl
orl
adcb
imul
sub
in
fnsave
mov
dec
push
jge
loop
xchg
push
adc
test
sub
std
mov
jae
pop
mov
lods
pop
jp
dec
sbb
push
lods
ljmp
scas
push
ret
ds
out
addr16
in
and
xor
cmpsl
xchg
incl
xchg
rcrb
xchg
imull
test
ret
sbb
std
xlat
orps
push
notl
lds
jne
stos
insl
sub
int3
sub
popa
lods
ficoms
cltd
orl
add
xor
stc
mov
ret
add
jns
cld
cltd
sbb
into
push
dec
and
mov
arpl
mov
stc
rclb
inc
jns
xchg
in
and
xor
jmp
pop
and
pop
shlb
xchg
insl
stos
inc
movsb
mov
dec
cli
and
push
mov
popa
loopne
mov
icebp
or
xor
daa
lods
in
mov
jg
mov
cwtl
mov
aam
sub
das
push
sbb
jne
push
add
mov
lret
ds
jae
test
fldcw
mov
enter
sti
aam
insl
sub
jge
out
stos
and
push
add
mov
std
sbb
or
push
test
stos
in
mov
test
cltd
and
or
bound
cmpsl
lret
repz
repz
cwtl
sub
inc
cli
stc
loope
and
pop
or
or
pop
test
aad
scas
das
sub
cmpsb
push
push
mov
jle
mov
das
mov
pop
div
mov
sbb
mov
pop
push
rclb
jmp
add
jb
out
add
cmp
inc
sub
jns
cmp
lock
out
or
data16
pop
ret
pusha
shll
or
push
jp
repz
cli
cmp
repz
xor
add
push
and
and
mov
out
addr16
bound
jl
sub
dec
sahf
stos
xchg
xchg
pusha
cmpsb
mov
cmp
push
pop
jmp
jno
xor
mov
mov
cmpsb
sub
jle
mov
push
andl
lcall
stos
xor
bound
call
dec
in
pop
pop
push
and
mov
pop
test
xor
pop
jle
test
mov
push
jmp
pop
push
or
js
je
out
mov
sub
adc
test
fcoml
rol
pop
ret
dec
jb
outsl
in
iret
sub
add
pop
int3
pop
jp
bound
ret
jo
jge
imul
mov
xor
cmp
mov
jmp
loope
mov
fists
lds
cwtl
sbb
hlt
mov
cltd
mov
rcrl
sahf
sub
mov
fs
xchg
push
xor
fisttpl
xor
out
or
jp
inc
dec
add
frstor
addb
ds
dec
cli
movsb
add
xor
nop
int
pushf
imul
mov
xchg
sti
mov
sti
xlat
sarb
popa
jo
jb
sub
cltd
test
push
outsl
jb
test
out
jge
push
in
adc
jo
repnz
adc
aad
mov
pop
int
adc
adc
and
mov
std
and
popa
sahf
cld
aas
sahf
cmp
xor
cmpsl
outsb
or
jns
jbe
cmp
inc
std
sar
loope
cwtl
int3
cld
sbb
insb
js
xor
xchg
add
inc
push
mov
lds
xchg
jmp
xlat
iret
imul
add
aaa
pop
cmpsb
pop
clc
inc
iret
rcrb
or
mov
loopne
sub
je
outsl
dec
pop
flds
icebp
sub
push
out
test
cmpsb
push
xor
jbe
out
cmpl
test
loope
pop
dec
nop
leave
add
imul
popf
insb
mov
push
jle
pop
adc
popa
hlt
ja
xchg
xchg
cmp
jge
xchg
loop
cmpsb
add
idivb
and
adc
int
mov
stc
rcl
test
xlat
movsl
js
pop
ss
ret
lea
mov
xchg
jae
jl
movsb
into
test
call
inc
and
pop
inc
xchg
cltd
or
imul
lods
into
stc
icebp
dec
sub
insb
outsb
enter
ds
dec
mov
cmp
into
and
fisttpl
enter
pop
mov
cmp
bound
into
ret
mov
testl
lcall
outsb
mulb
cmc
shrl
adc
cmp
pop
mov
xchg
mull
leave
xor
dec
mov
mov
xchg
cmpsl
lahf
int
mov
shlb
inc
inc
gs
vmovupd
test
aas
cmp
subb
cli
jle
xor
pop
negb
adc
arpl
rcr
ljmp
rcrb
dec
inc
movsb
mov
stos
mov
and
jb
xor
push
movsb
iret
testl
scas
nop
push
mov
in
popa
bound
repnz
inc
scas
and
pop
pop
shlb
icebp
jp
insl
in
xor
ss
cmpsl
loop
fwait
bound
imul
inc
hlt
inc
leave
mov
mov
dec
das
fstpl
mov
lock
in
stc
rcll
xchg
cmp
pop
jmp
clc
jno
mov
mov
sbb
xchg
int3
and
loope
cmp
out
mov
mov
bound
adcb
xchg
cwtl
inc
dec
movsl
inc
adc
insb
int
mov
mov
ficoml
jnp
xor
cltd
cmp
pop
push
xchg
shl
clc
push
test
out
push
loope
pop
pop
dec
ljmp
out
or
pop
mulb
cltd
jb
sub
jmp
inc
mov
cmp
fbstp
xchg
imul
ficoms
and
or
repz
std
and
mov
or
std
test
add
and
xchg
movsb
arpl
cmp
mov
out
jge
add
addr16
icebp
nop
test
mov
lahf
dec
jno
arpl
cmp
mov
lods
lods
adc
xchg
inc
mov
push
fsubp
inc
fsub
mov
jmp
pop
push
mov
xchg
shr
push
in
and
sbb
movsb
push
lret
fwait
ret
mov
or
mov
in
xlat
aaa
or
gs
xchg
in
inc
mov
mov
push
rcrb
dec
sub
addl
or
dec
roll
and
imul
fisttps
jmp
mov
test
mov
xor
out
enter
pop
xor
xor
icebp
imul
add
stc
or
shll
or
push
mov
arpl
jnp
jns
negl
and
int
pusha
adc
imul
mov
ljmp
sahf
cld
add
out
popf
xchg
xor
scas
stc
mov
mov
mov
mov
mov
idivb
cmp
jne
add
sub
test
xor
xor
mov
or
sbb
jmp
outsb
pop
xor
sarb
ja
fnstenv
bound
fimuls
testb
paddsw
mov
ds
mov
mov
jns
outsl
mov
adc
cltd
or
push
sbb
lret
push
adc
adc
or
rorb
push
iret
mov
bound
std
mov
std
aas
ljmp
push
stos
mov
mov
sahf
in
mov
push
call
mov
shll
insb
cmp
call
rcll
push
aam
ds
pop
fdivrl
dec
scas
jmp
arpl
sub
scas
xchg
or
mov
xchg
xchg
sar
pop
mov
ja
mov
leave
push
jnp
std
push
repz
jecxz
loop
mov
mov
cld
mov
sbb
dec
ret
dec
push
fidivrs
les
xchg
cltd
js
dec
inc
pusha
sbb
adc
in
fdivrs
cmp
mov
jne
loop
popa
mov
xchg
rorb
xor
dec
pop
lret
outsb
pop
push
cmp
mull
cmp
fists
add
fldl
inc
mov
push
sub
and
cmp
in
xchg
sahf
pusha
mov
fimull
insl
adc
sub
mov
adc
loop
inc
in
xor
push
pop
movsl
rcrb
js
pop
xchg
push
rcrl
sahf
cmp
lods
sub
insb
daa
pop
test
rcrb
lock
adc
arpl
push
add
out
or
popa
push
dec
ja
pop
sbb
jle
adc
dec
loope
jg
ret
rorl
adc
push
pop
push
jo
popf
xchg
lock
push
loopne
test
iret
fsubs
jo
gs
test
mov
ds
pop
cmpsl
pop
jle
mov
cmpps
or
in
neg
inc
loopne
jl
aam
lods
adc
mov
xor
sbbb
mov
xlat
sahf
sarb
loopne
push
push
daa
inc
rcrl
add
stc
nop
scas
push
std
imul
lds
mov
jae
dec
add
jecxz
pop
js
call
fsts
es
xor
les
imul
or
movaps
lds
dec
sti
cltd
inc
popf
mov
nop
in
push
push
pushf
out
mov
or
ret
jae
or
push
mov
repz
movsb
div
sbb
add
call
cmp
gs
inc
loope
das
mov
repz
add
int3
push
jg
sarl
xchg
sub
mov
ffreep
lret
jecxz
adc
or
cmc
mov
xchg
aaa
lods
mov
repnz
dec
and
xchg
movsl
sbb
pop
dec
add
jle
mov
in
inc
add
add
mov
mov
xor
jno
test
cmp
jge
test
pop
add
jns
jl
pop
push
dec
push
mov
push
in
shr
and
adcb
in
jae
shlb
jns
mov
lret
jno
mov
jecxz
cmp
jp
adc
fwait
and
mov
cmp
xor
mov
or
aaa
test
mov
sbb
and
sub
rorb
mov
adc
jmp
cmpsb
out
ljmp
xor
out
xor
xchg
repnz
stos
xchg
and
inc
movsb
inc
xchg
loopne
dec
jmp
mov
rcrl
mov
jo
sub
xchg
cmpsl
cltd
enter
jb
cmp
pop
outsl
test
lahf
and
shll
jecxz
lret
scas
xor
jno
lods
add
push
xchg
lret
or
mov
jp
dec
cltd
cltd
inc
sbb
cli
pop
addr16
jbe
fwait
mov
fs
adc
rdpmc
in
add
adc
cmp
imul
cwtl
test
mov
arpl
mov
ret
rolb
enter
push
mov
icebp
sub
xchg
jle
popa
das
test
rolb
sti
daa
mov
mov
iret
inc
sbb
fwait
cltd
fld
sbb
and
andb
jno
iret
out
mov
movntq
out
rcr
test
gs
sub
xchg
gs
mov
xorl
pop
shlb
mov
repnz
out
lds
mov
cmp
stc
or
rcll
gs
repz
lods
outsb
popf
in
ja
stos
inc
dec
push
aad
and
lahf
fwait
cli
ljmp
lret
cmp
in
mov
popa
addr16
add
inc
dec
or
lcall
pop
lcall
out
jae
imul
inc
mov
lret
popa
sbb
ret
js
mov
sub
lahf
xchg
sbb
and
jbe
cmp
outsl
sub
adc
xor
push
xchg
sub
cmc
aaa
add
into
shl
dec
adc
sbb
aaa
mov
mov
enter
push
cmp
mov
repnz
jbe
cld
cli
scas
and
js
test
mov
aas
xchg
jmp
mov
sbb
call
fldcw
adcl
and
les
aam
outsb
in
inc
fldl
mov
aaa
ds
dec
in
push
mov
movsl
scas
mov
fldl
scas
jecxz
mov
cs
stos
jnp
xchg
xor
aam
mov
sarl
sbb
push
sub
cli
fldt
xor
sub
lret
jns
loop
out
sub
les
lods
and
sub
imul
add
call
mov
jg
adc
pop
jns
inc
sub
fs
xor
xor
movsb
adc
cmpl
rcrl
test
pop
mov
adc
pop
hlt
ret
sbb
int3
pop
xchg
mov
xchg
ret
in
lret
jg
mov
cs
movsb
lds
jecxz
lods
std
push
rcr
adc
or
mov
xchg
jg
jns
cs
out
sbb
outsb
mov
fisubrs
mov
adc
sti
lods
shll
leave
dec
test
subl
ja
jge
xor
jbe
or
add
lods
push
xor
cmp
push
icebp
inc
pop
sub
jg
sbb
mov
push
jne
sbb
testb
daa
cmp
xchg
mov
in
lcall
sbb
nop
sbb
scas
jne
hlt
call
es
cmp
lock
std
sub
jae
mov
adc
dec
mov
ljmp
orl
shrb
int3
ds
jle
enter
add
in
test
cld
imul
mov
loop
add
cltd
push
cmpsl
insl
mov
mov
adc
sub
out
ljmp
sub
aaa
push
xchg
add
in
outsb
push
jb
std
loopne
cmc
jno
ljmp
fidivl
and
daa
ficoml
ror
cmc
ss
lds
xor
js
cbtw
adc
add
cs
je
push
in
and
jno
aad
rcrl
or
jns
mov
mov
dec
aas
xor
add
xlat
repz
pop
cmc
adc
xor
jp
mov
les
ds
in
mul
and
adc
fwait
xor
out
or
xchg
inc
cmpsl
dec
push
mov
in
add
leave
fisubs
sbb
add
mov
cmc
add
pop
in
out
fs
inc
mov
daa
xchg
jo
in
or
cmpsl
jno
flds
mov
push
leave
popfw
xchg
cmp
pop
push
dec
das
scas
js
icebp
sbb
out
dec
cmp
mov
inc
pop
xorb
xadd
or
pop
test
ja
xchg
cmpsl
shrb
cmpsl
roll
cs
jbe
cltd
inc
nop
or
hlt
daa
ja
sub
xor
outsb
dec
cmpsb
pop
call
adc
adc
adc
addr16
and
ret
in
xlat
rcrb
aaa
and
daa
or
add
sub
inc
sub
lods
rol
test
popf
sub
sbb
int3
dec
push
sbb
enter
mov
out
test
pusha
cwtl
lret
nop
push
fmull
mov
cltd
jno
xchg
sub
fdivr
fwait
adc
shll
das
mov
push
out
cmp
mov
cmp
xlat
adc
out
mov
and
mov
popa
or
in
mov
xlat
xchg
mov
sbb
jge
data16
jnp
xor
xchg
shlb
and
fs
jns
mov
xor
lock
js
ja
and
pusha
stos
ret
inc
mov
ret
lcall
xchg
mov
loop
sub
adc
icebp
pop
push
add
xchg
in
arpl
dec
pop
into
or
and
xor
mov
cmc
cltd
clc
rolb
lea
or
mov
scas
lcall
xchg
enter
cld
fsubs
ficoms
movsl
inc
dec
icebp
xchg
sti
or
inc
outsl
cld
mov
arpl
nop
lods
xorl
mov
or
push
into
pop
pop
xor
shll
into
rcr
and
cmpsl
fwait
mov
pop
cmpsl
ret
pop
or
or
jne
aam
hlt
lcall
int3
cmp
scas
cmp
cmp
call
sub
sbb
sub
sub
jmp
hlt
xor
xchg
popf
pusha
cmpsb
daa
push
push
je
orps
sbb
roll
or
pop
xchg
sub
loopne
pusha
shrb
test
or
test
lcall
cli
xchg
push
sub
bnd
dec
stos
add
push
add
ja
jge
and
jbe
es
lcall
leave
adc
ss
push
and
adc
xchg
js
shlb
and
leave
loop
jnp
sbb
mov
mov
gs
fsubrl
inc
mov
jnp
imul
add
xor
and
or
adc
cwtl
ret
stos
repz
dec
repnz
push
xlat
lds
push
xchg
pusha
stc
aam
ljmp
and
aad
js
cltd
mov
bound
cwtl
sbb
jmp
fs
ss
test
push
hlt
andl
xlat
sbb
jb
jp
hlt
adcb
outsb
bound
fdivrl
mov
stos
ret
aad
inc
insb
icebp
mov
jne
and
movzbl
negb
mov
pushf
ret
mov
push
out
ds
push
icebp
outsb
into
cmp
push
xchg
inc
js
mov
pop
fsqrt
rep
xchg
addr16
inc
or
pop
insl
icebp
lods
adc
out
sbb
cmp
sbb
cs
int
enter
or
jle
adc
lds
sbb
gs
in
sub
pop
xchg
out
and
icebp
sub
test
sbb
mov
xor
int3
push
daa
jb
push
push
push
call
jnp
pop
xchg
cltd
sbb
in
andl
popf
adc
inc
push
ja
js
mov
lock
in
out
sub
cli
xor
and
shrl
or
add
mov
out
outsb
pop
pop
std
sub
rorl
mov
dec
ret
sub
push
nopl
xor
cltd
int
aaa
pop
aam
xor
mov
push
sbb
jae
minps
lahf
and
rol
cltd
push
test
cmpsl
loopne
inc
lock
pop
jnp
jo
scas
aaa
jecxz
sub
fisubrs
sti
jb
mov
mov
in
movsl
dec
lods
add
mov
sbb
mov
repz
cltd
sub
push
lea
gs
xchg
push
aaa
cmp
fiadds
inc
dec
pop
clc
xor
mov
inc
rcll
loop
js
add
je
es
xor
add
ret
pop
and
aad
fadd
dec
test
idivl
loope
shr
xchg
mov
mov
inc
cltd
sarl
ds
push
insl
sbb
inc
fwait
or
dec
out
sub
mov
mov
add
pop
test
xchg
movsl
rcrl
pop
outsb
sbb
xor
and
xor
das
loop
sub
decb
daa
sbb
por
rcrb
xchg
xor
repnz
sub
outsb
out
iret
pusha
into
mov
dec
mov
cmp
fisubs
add
loope
and
mov
xchg
cmc
pop
mov
mov
mov
aaa
push
mov
pusha
mov
aaa
aam
mov
dec
push
push
jno
stc
ja
mov
mov
addb
data16
cmp
addb
sub
add
cmp
pop
jecxz
push
scas
cmp
xor
fwait
adc
fsts
mov
mov
add
xor
xchg
mov
dec
loope
test
jnp
insb
jmp
outsl
dec
dec
mov
sbb
sbb
lret
cltd
push
add
and
cmp
push
pop
xchg
out
jp
pop
cmovl
mov
push
pop
mov
test
cmp
stos
iret
test
mov
sbb
pop
test
jb
pop
lods
scas
lcall
jo
outsl
outsl
inc
xchg
pop
enter
push
es
test
stos
push
iret
xchg
jecxz
sub
cmc
daa
outsb
dec
or
dec
mov
lcall
int3
jl
outsb
imul
cli
in
iret
sub
sub
repz
jmp
shl
inc
dec
sbb
cmpl
pop
movsb
loope
pop
es
stc
xchg
push
hlt
popa
or
or
mov
and
jecxz
adc
and
sbb
or
out
or
xor
inc
xor
add
and
jo
push
mov
adc
subb
repz
add
xchg
sub
push
mov
dec
clc
mov
xlat
lea
mov
loop
int
xor
aad
gs
push
xrelease
sbb
lret
sbb
xchg
inc
lret
pop
adc
sysret
xlat
popa
add
je
jle
jo
and
inc
xor
mov
and
lock
call
fsubp
cmp
out
movl
mov
aas
leave
sbb
add
addl
div
jb
and
lahf
jb
xor
push
imul
rcr
test
add
inc
out
sbb
test
rolb
dec
xchg
mov
inc
xor
daa
mov
sub
test
push
inc
cmp
ds
xchg
xchg
mov
out
cmp
jnp
push
jge
push
adcl
test
xchg
xlat
inc
jb
es
outsl
jne
inc
mov
mov
lea
mov
cmc
movsb
xor
pop
sbb
cmpsl
mov
xor
outsl
jno
mov
jo
pop
mov
push
iret
push
adc
mov
jmp
push
arpl
sub
out
ss
pusha
divb
mov
sbb
pop
cli
shlb
pop
flds
jne
aaa
fmuls
mov
jbe
add
mov
or
jb
push
sbb
cmp
call
pop
xor
lds
mov
andb
ds
movsb
mov
mov
add
cmp
loope
stc
jo
dec
sub
add
xchg
jecxz
ficompl
ret
push
or
xor
sbb
outsb
add
inc
into
add
shrb
mov
dec
scas
sar
in
jmp
imull
cmp
stc
js
adc
enter
sub
outsl
mov
push
jb
push
add
pop
addr16
fstpt
imul
ficoms
int3
popa
pop
and
aaa
dec
or
pop
aaa
jns
lock
jnp
ljmp
sbb
lahf
hlt
mov
sti
into
clts
aas
xor
inc
adcl
adc
lret
in
stos
cmp
gs
inc
hlt
and
or
pop
adc
or
fcmovnbe
test
or
cmp
and
add
fsubrl
mov
into
jp
jno
inc
xor
mov
dec
mov
addr16
sbb
dec
xor
rorl
fs
outsb
loopne
and
stc
cltd
xchg
and
jl
gs
jg
or
lcall
and
push
mov
das
loope
fnstcw
jns
in
pand
jne
enter
stos
into
cmp
gs
clc
ds
inc
add
insl
pushf
pop
hlt
push
je
out
push
sahf
pop
cmp
mov
or
hlt
cld
dec
or
xorl
mov
mov
mov
test
jno
cmp
in
cli
in
gs
xchg
xchg
adcb
pop
or
xor
dec
xor
cmc
mov
mov
jmp
pop
jp
adc
fisubrs
test
mov
cmpsw
adc
in
push
mov
pop
or
or
or
fs
or
cmpsl
and
adcl
test
addl
adc
fsubrp
inc
jb
sub
xchg
jnp
cmp
jecxz
sub
xor
outsb
cmp
nop
fistps
inc
popf
jnp
adc
jl
cld
aam
mov
cmpsl
cmc
inc
data16
outsl
mov
jg
add
popa
push
pop
dec
dec
scas
sbb
xlat
mov
out
jge
subl
mov
fldt
jnp
lret
xchg
out
leave
cmpsl
rorl
aaa
cmp
pop
sbbl
loopne
int3
sub
cmc
out
pop
sub
push
add
jo
mov
add
iret
xor
out
outsl
lret
jl
mov
xchg
add
cli
xor
cmp
cs
data16
clc
jne
adc
rcrl
add
inc
adc
out
and
cld
in
cmp
mov
sarl
fmuls
es
sub
jb
je
add
movsb
fistps
cmp
mov
imul
add
mov
insl
arpl
ljmp
and
and
insl
incl
mov
push
or
pop
and
sar
sarl
pop
cmp
xchg
enter
aas
pusha
arpl
push
push
mov
mov
mov
jle
sahf
bound
out
xor
inc
jg
sbb
arpl
mov
pop
jle
sbb
cmc
fnstcw
subb
es
pop
sti
sbb
daa
ljmp
xor
inc
and
es
pop
adc
mov
mov
dec
and
or
lea
mov
fisubs
lret
mov
inc
jb
fisubl
adc
les
aam
je
loopne
dec
test
fucomp
popf
shlb
data16
dec
movsb
or
push
dec
gs
out
in
pop
push
outsl
push
das
xor
test
outsb
jae
in
ja
int
push
adc
push
cmc
enter
std
in
clc
lods
out
stos
adc
pop
mov
push
and
sti
rorl
fdivrp
cmpsl
bnd
inc
xorl
inc
inc
xorl
iret
pop
sub
jnp
hlt
pop
jle
cmpsl
inc
sti
pop
in
push
sti
aam
pop
xchg
cmp
adc
lret
or
pop
push
xchg
cmovs
xchg
xchg
dec
jo
adc
popa
xor
sbb
or
sub
das
repz
push
loop
fs
lahf
xor
in
jmp
xor
adc
lock
or
mov
pop
inc
movzbl
dec
xchg
mov
lods
and
fsubrl
mov
cmpsl
mov
rorl
stos
fsubs
mov
rorb
aas
jae
stc
mov
pop
push
push
xor
xchg
pop
rcll
stos
aad
cmc
sub
fisttpl
lcall
push
sub
ja
jmp
fisttpll
lods
mov
xlat
into
xchg
mov
or
lds
mov
test
out
mov
lret
repnz
cmp
leave
push
loopne
sbb
inc
icebp
jmp
pop
mov
lret
sub
xor
rclb
cmpsl
inc
shll
movsb
arpl
idivb
sub
pop
sub
fmulp
cmp
xchg
cmp
ds
shlb
and
pop
pop
fcmove
lret
into
pop
mov
jmp
cltd
xchg
test
mov
pop
mov
test
or
sbbl
movsb
lret
push
sbb
adc
stos
lods
addr16
sub
cmpb
loope
pop
fwait
stc
jne
lret
dec
sub
cmpsb
movsb
inc
cmp
cmpsl
gs
fisttpll
mov
adc
lds
movsl
cmp
popa
cwtl
popf
xchg
orps
pushf
popa
lea
insb
push
ror
dec
les
add
cmp
ds
ljmp
mov
icebp
dec
mov
jbe
orb
int
pop
stos
add
and
out
out
pop
jo
mov
dec
das
mov
xchg
scas
lret
bound
pushf
push
roll
cli
pop
pop
test
jl
push
lcall
jge
movsb
addb
test
adc
mov
xchg
dec
cmp
mov
ret
push
cmc
icebp
test
ja
xor
in
pop
xchg
jge
test
aas
test
xchg
movb
xorb
pop
mov
sub
add
xchg
jg
es
mov
hlt
pop
ja
cmp
das
cmp
mov
sbb
jmp
xchg
add
cmpsb
ffreep
insl
mov
xchg
cmp
jns
jge
push
and
push
cmp
mov
push
push
xchg
lea
test
sbb
sbb
jne
cwtl
sub
jae
cli
sub
and
sahf
shrl
out
push
add
push
push
lahf
pop
jg
sarl
xchg
mov
test
push
push
std
cmpsl
outsb
outsl
rcrb
xchg
cmp
int3
sahf
pushf
cmc
and
dec
dec
nop
mov
not
jmp
mull
jl
cmpsl
cmp
xor
shrb
inc
sub
outsb
ret
cmpsl
fwait
stc
mov
inc
inc
ret
jnp
push
jg
xchg
pop
mov
xlat
lret
xchg
cwtl
cli
je
mov
into
mov
lret
xchg
pop
pop
sarb
mov
xlat
clc
xor
add
push
in
mov
jne
popa
mov
daa
testl
sbb
pop
push
imul
or
xlat
and
sahf
xor
bound
inc
or
repnz
jae
stos
adc
imul
xchg
cmpsb
xlat
cmp
fisubl
add
mov
or
mov
or
pop
dec
mov
aaa
orb
or
mov
popf
ret
sarb
inc
lods
lret
es
sub
call
mov
repnz
movsb
leave
xchg
and
mov
dec
lret
stos
pop
cmp
shlb
adc
ficomps
movsl
push
push
sti
aam
jo
mov
xor
cmc
cmp
xchg
popf
aas
mov
jmp
lahf
arpl
sahf
sbb
js
out
push
add
gs
popa
inc
sub
fiadds
pusha
in
push
mov
nop
or
push
ret
push
bound
mov
ficomps
push
cmp
fsubr
shrd
aam
outsb
test
sub
leave
xlat
and
inc
xchg
aas
mov
mov
into
cltd
test
push
ja
adc
cmp
cltd
in
fsubrs
push
inc
mov
push
cmp
cmp
dec
cwtl
int
in
adcb
mov
into
test
in
or
adc
add
mov
scas
pop
xor
cmp
frstor
cmpsb
pop
sti
ror
imul
mov
jg
dec
mov
sub
dec
scas
outsb
repz
rclb
movb
pop
jl
inc
xor
mov
xor
sub
xchg
push
pusha
xlat
xor
xor
sbb
daa
push
mov
cmpsl
lahf
fwait
sub
movsb
fcoms
lret
test
or
popf
call
daa
add
mov
lods
sub
jmp
fcos
cmc
mov
mov
hlt
call
inc
lea
sub
adc
dec
mov
test
jg
ret
movsb
dec
cmp
push
daa
sbb
stos
mov
sub
cmp
les
ss
les
mov
and
data16
sbb
jae
xor
mov
rcr
addr16
cmp
es
pusha
adc
add
and
pop
lret
jnp
loope
rorb
dec
fcoml
sub
shrl
enter
xor
sub
xchg
cltd
orb
cmpsb
sti
pushf
sub
in
adcl
xchg
mov
fdivrl
sub
mov
in
push
mov
add
push
dec
out
shr
sub
cmpl
jb
int
fnsave
pop
ret
imul
bound
xchg
jle
arpl
ljmp
mov
push
fsts
jp
mov
pop
fnstsw
push
testb
inc
or
jl
repz
pop
pushf
shll
ds
lcall
adc
inc
and
ret
xchg
les
das
lret
mov
test
dec
mov
lock
imul
mov
lock
pop
cli
jb
int3
shll
push
cmp
lock
pop
data16
inc
push
out
xchg
adc
sarb
in
testb
repz
mov
sahf
inc
mov
mov
xor
test
popf
mov
inc
rcll
into
push
push
push
jb
inc
jne
pop
and
xor
lds
jns
in
insb
jg
push
insl
lds
xchg
adc
fsubl
leave
pop
adc
cld
sub
repnz
mov
jnp
mov
in
xor
popa
lods
scas
pop
jbe
push
flds
and
int
loop
cmp
mov
jns
in
sbb
fldenv
decl
mov
pop
cmp
aad
cmp
adc
jmp
add
sbb
stos
sahf
or
inc
lahf
mov
mov
test
fadds
stc
or
cmc
es
pop
fisubs
ret
and
cwtl
and
loop
pop
cmpsb
xor
popf
jmp
push
xchg
mov
lock
cmc
lret
out
cmc
jmp
aam
jnp
cmp
ljmp
pop
fstpt
insb
leave
iret
push
push
mov
mov
andb
mov
sub
adc
faddl
mov
je
sbb
push
movsl
test
movsl
inc
aas
addb
sbb
in
and
or
cwtl
push
aad
adc
or
mov
imul
pusha
imul
scas
mov
ret
inc
in
out
jp
and
push
fdivs
mov
cmp
vpxor
ljmp
mov
adc
lock
cmp
ss
addr16
rorl
movsbl
dec
ja
stos
inc
repnz
and
sub
fcom
in
jge
cmpsb
sbb
cmpb
xchg
jp
push
mov
inc
jnp
shl
scas
inc
sbb
fistl
adc
xchg
arpl
loope
rcl
test
jmp
cmp
enter
sub
sbb
aas
in
inc
aam
das
iret
shlb
repz
push
mov
xchg
pop
pop
sti
or
or
adc
jno
bound
push
clc
cmp
xlat
lds
loop
xor
sarl
jno
cld
pop
outsl
jno
mov
pop
lea
add
sbb
push
stos
lret
test
lret
lcall
adc
mov
mov
xchg
sbb
data16
jecxz
movsb
jns
aad
mov
cmp
je
cwtl
or
data16
jp
sub
mov
add
popa
jg
and
test
add
push
call
adc
jnp
mov
pop
shll
xchg
jne
movsl
es
pop
xchg
dec
in
or
int
jecxz
and
test
in
inc
inc
hlt
mov
push
push
xlat
les
sbb
mov
fisubs
jae
sub
add
loop
and
mov
popf
push
sub
fimuls
xor
out
xchg
in
out
stos
xchg
into
imul
jl
inc
int3
jb
iret
aas
leave
mov
push
mov
ret
xchg
loopne
adc
or
ja
xchg
mov
push
add
xchg
inc
cltd
cli
les
sti
outsb
in
jl
ds
add
add
icebp
inc
subl
lcall
push
cmpsl
sub
incb
ret
jecxz
sbb
push
les
stc
sub
jnp
push
outsl
and
int3
in
inc
rol
mov
inc
call
sahf
je
add
jl
add
dec
nop
mov
push
mov
jbe
aam
cmp
js
cmp
sub
pop
shll
enter
or
xor
jecxz
pop
cltd
das
or
out
gs
repz
xor
pushf
dec
xchg
out
inc
xchg
aam
stos
xchg
inc
lods
xchg
fsts
movsb
or
mov
xchg
nop
mov
xlat
dec
pop
jbe
jb
sbb
inc
or
addr16
and
lahf
or
dec
xorl
jae
and
in
push
aam
xor
push
sub
sub
xchg
cld
cld
sub
addb
sahf
loopne
lret
push
pop
sbb
add
mov
jmp
jge
sub
shll
inc
and
ljmp
imul
nop
jp
ret
loop
dec
das
fwait
fs
js
movsb
or
outsl
shrl
negb
jmp
test
aad
dec
loopne
xchg
jl
sub
cmc
jnp
and
sub
mov
lahf
push
loopne
sbb
aad
sbb
test
fwait
imul
sbb
test
fmuls
jg
stos
dec
mov
add
xchg
imul
fisubl
nop
cwtl
sbb
imul
jg
jnp
fs
rorb
std
fucom
or
jl
std
cmc
fisubs
inc
lret
xchg
dec
push
sbb
ret
std
inc
xchg
add
xchg
rcrl
shll
jmp
push
lahf
mov
sti
loopne
testb
imul
push
dec
cmp
std
out
sbb
add
add
pop
push
scas
ret
loop
cs
cli
mov
arpl
jge
jne
aad
ja
xor
push
pop
dec
adc
mov
cmp
sub
movsl
sub
mov
enter
mov
cmp
imul
jl
pop
sub
fadd
push
mov
adc
loop
into
pop
rorb
ror
cmpsb
shll
add
stc
add
scas
push
je
int
sub
xlat
cmp
into
ja
mov
enter
jmp
sbb
stos
dec
or
je
in
mov
outsl
push
xchg
pop
and
int
aam
pop
out
adc
fdivrs
push
lock
aas
xor
and
in
stos
mov
and
lret
ret
sbb
sbb
jge
cwtl
sahf
sub
xchg
dec
and
fsubrs
pop
sbb
icebp
fwait
addl
fisttps
pop
xchg
shl
adc
or
sub
mov
cmp
and
and
aad
dec
popa
xor
push
mov
imul
inc
push
ret
out
push
out
popf
bound
adc
push
shrl
sahf
dec
push
push
push
push
loopne
mov
in
in
pop
xchg
mov
mov
scas
pop
dec
add
xchg
adc
push
cmp
rcrl
repz
mov
and
mov
pop
adc
or
jecxz
xchg
pop
jnp
pop
std
pushw
cmp
adc
jecxz
sub
xchg
jle
lahf
xchg
or
lret
xchg
pusha
popa
sub
push
cmp
cwtl
mov
and
adc
mov
out
or
jge
cld
ret
scas
or
pop
xchg
cmp
fimuls
fdivrp
xchg
lcall
adc
lock
lahf
movsl
test
jge
mov
into
pop
add
in
push
je
inc
add
iret
mov
sub
and
ret
push
mov
inc
sahf
mov
jb
lods
push
repz
test
aaa
and
adc
adc
in
clc
outsl
mov
pop
ficoml
in
push
pop
xchg
adc
jbe
xchg
jmp
loope
notb
es
dec
cmp
rcrl
adc
and
sarl
sbb
std
pop
pop
pop
sub
jno
mov
aas
movsl
sti
icebp
cmpsl
add
pushf
inc
pop
adc
inc
lret
mov
jns
push
xor
inc
inc
and
int3
daa
mov
lods
dec
dec
fucomip
nop
shll
add
mov
add
popf
mov
ret
jl
imull
cli
xor
or
xlat
mov
fs
push
test
icebp
daa
fistpl
sub
test
inc
enter
imul
cwtl
pop
xchg
mov
inc
inc
xchg
ror
pop
xchg
movsl
or
jbe
xor
push
mov
arpl
xchg
addb
aad
imul
xchg
jmp
mov
out
push
lds
cwtl
sub
dec
or
xor
pusha
fwait
hlt
push
mov
imulb
and
out
call
mull
xor
ret
adc
xchg
adc
mov
pop
mov
daa
cmp
in
pop
dec
fcoml
dec
enter
pop
push
daa
or
out
jo
mov
fnstsw
mov
xor
movsl
loop
inc
push
jp
xor
xchg
mov
cmpsl
sbb
adc
lods
sub
xchg
bound
pop
ret
mov
pop
jb
sahf
sbbb
insb
je
jnp
test
test
jo
xor
jne
gs
lods
scas
or
and
pop
mov
outsb
push
dec
inc
mov
outsl
cmp
mov
daa
jnp
es
mov
outsb
loop
fsubs
lret
xorb
mov
ja
fucomip
ss
cld
adc
fs
adc
sbb
andb
jns
mov
adc
call
fcomp
and
and
ret
faddl
sbb
shrl
imul
inc
adc
addl
lcall
xor
rcr
add
inc
rol
shlb
in
aaa
mov
xchg
in
xchg
insl
in
loop
xor
out
pop
data16
pop
cmp
insl
xor
xchg
test
jbe
pop
outsb
pusha
sti
arpl
push
lahf
mov
and
lods
lret
test
jne
jp
mov
xchg
mov
aas
pop
test
add
bound
adcl
push
sbb
lret
in
sub
xchg
ss
sub
cmp
mov
and
dec
test
jge
mov
shrl
jns
push
outsl
cmc
mov
outsl
add
lcall
jle
fcmovb
shll
mov
add
and
sub
sub
or
adc
insb
imul
xchg
push
cmp
pop
rcrl
fs
iret
mov
mov
aas
mov
gs
add
idivl
push
ret
xchg
andl
xchg
xchg
sarb
mov
out
into
mov
movsl
dec
push
add
leavew
dec
add
in
add
aam
push
je
lods
das
push
and
frstor
push
stos
pop
outsb
pop
sbb
hlt
xor
and
cmp
inc
jno
mov
in
push
ljmp
mov
xor
shrl
cmpsb
nop
mov
aad
inc
sub
jg
sbb
and
sub
movsb
and
lcall
loopne
test
cmpl
cmpsl
adc
inc
xor
out
mov
xor
sub
xchg
adc
loope
push
loop
sub
xlat
arpl
mov
dec
push
and
cwtl
inc
stc
nop
pop
lods
int3
loopne
out
pop
dec
scas
mov
xchg
mov
push
ret
jb
divl
add
inc
ret
or
sub
pop
inc
les
xchg
cmp
aaa
decl
xchg
xchg
push
mov
xchg
sub
lret
cltd
inc
xor
inc
lods
mov
cmp
sub
mov
arpl
scas
push
sub
aas
stos
loop
dec
inc
loopne
iret
jns
pop
aad
iret
dec
sub
add
sbb
mov
jge
adc
andb
iret
mov
add
and
sbb
cmp
fdiv
sub
push
mov
add
sbb
dec
xor
jecxz
inc
and
pop
fwait
and
jae
cmp
pop
push
or
hlt
test
xchg
roll
jge
fldl
mov
scas
add
enter
add
push
cwtl
js
jb
mulb
loop
repnz
data16
test
mov
jl
incb
pop
les
xor
mov
xchg
aam
mov
fisttpl
jbe
mov
push
add
loope
dec
ss
popf
add
dec
mov
or
add
outsl
inc
in
int3
repnz
jmp
fstl
aas
int3
hlt
je
mov
add
mov
in
and
outsb
add
mov
xor
pusha
data16
mov
sub
inc
rol
add
xchg
fwait
adc
mov
mov
out
mov
bound
les
jns
cmp
adc
fldt
dec
mov
mov
push
jne
or
cli
push
rcrl
rcrb
cmp
fbld
pop
jecxz
push
popf
pushf
mov
xor
cmpsl
dec
outsl
inc
jmp
jb
enter
adc
lret
scas
add
xor
cmpsb
test
jp
out
sahf
call
or
mov
orl
mov
aaa
mov
push
sbb
mov
add
lret
jno
mov
hlt
push
jnp
fnstenv
aad
jp
addr16
rcl
loop
push
xlat
add
mov
push
test
adc
sbb
icebp
xor
adc
sti
sbb
mov
outsl
mov
aam
mov
adc
bound
push
jecxz
mov
dec
mov
push
int3
xor
pop
add
jp
pop
push
insl
jle
out
push
addr16
or
xchg
mov
jbe
sub
add
lcall
in
imul
xchg
icebp
je
fsubs
rorb
pop
addr16
mov
adc
cmpsl
dec
jae
aaa
pop
stos
adc
jne,pt
push
sub
test
xor
lods
push
daa
cmpsl
xacquire
push
rclb
iret
mov
orl
mov
iret
ds
jns
in
sub
xchg
out
clc
mov
iret
inc
push
addr16
nop
push
in
loop
inc
xor
andl
cltd
xchg
int
and
mov
iret
mov
test
sahf
ret
sbb
bound
mov
inc
stos
jmp
mov
and
cwtl
outsl
pop
push
rorb
clc
cwtl
testb
cmpb
hlt
subb
mov
adc
jp
test
dec
and
les
adc
negb
nop
sti
divl
inc
mov
mov
sar
or
sub
dec
adc
icebp
jb
out
decl
mov
addr16
inc
jnp
test
xor
sub
pop
cmp
inc
inc
inc
popf
repz
inc
mov
add
jge
push
popf
pop
shll
push
add
sbb
rdpmc
out
shll
xchg
xchg
inc
xchg
lock
call
sbb
sub
lcall
inc
jp
jae
pushf
adc
lods
xor
syscall
mov
and
sbb
cmpsb
push
inc
push
orb
xor
or
sahf
lock
ret
mov
out
movsl
cmc
mov
clc
jmp
js
sbb
outsl
frstor
mov
leave
out
adcl
orl
lret
fwait
xchg
or
subb
cmp
test
scas
sbb
in
je
jo
loopne
cmp
push
data16
imul
push
mov
inc
leave
lea
iret
loop
and
sarb
nop
push
mov
dec
adc
inc
popa
cmp
mov
dec
xor
xchg
or
cmpl
rorb
stos
cmp
loopne
dec
insl
sbb
and
pop
sub
sbb
mov
sub
xchg
adc
jno
mov
sub
xchg
mov
out
lahf
outsb
mov
pop
out
pop
lock
sbb
adc
test
gs
lcall
in
insl
shlb
mov
push
mov
das
add
cs
cmp
push
jno
push
mov
adc
xchg
in
adc
add
pop
insl
stos
or
inc
rorb
pop
ss
fwait
dec
sub
bound
outsl
mov
push
mov
call
cltd
push
xor
mov
mov
sbb
shlb
sub
sti
xchg
ds
out
mov
cli
inc
push
sub
lret
jmp
lea
cmp
push
out
enter
inc
fldcw
lcall
mov
cmp
mov
adc
scas
outsb
std
mov
push
xchg
jo
and
je
xchg
leave
loope
pop
mov
fdivr
hlt
dec
cmp
inc
aam
test
ret
ret
sti
leave
pop
in
dec
adc
pop
cld
lods
int3
push
sbb
sbb
clc
push
jnp
inc
mov
push
mov
sbb
dec
mov
hlt
mov
ja
movsb
pop
add
lock
adc
pop
fildl
jb
inc
insb
or
ljmp
lahf
loop
mov
fsubrl
int
rolb
inc
fisubl
mov
sti
pop
into
push
jae
mov
fbstp
fcom
jmp
or
sti
push
shll
xor
and
jnp
jnp
jg
and
push
enter
push
rclb
mov
cmpb
lret
add
mov
imul
pusha
outsb
cwtl
dec
jne
in
cmp
out
and
fisubl
cmp
fdivrl
into
mov
jecxz
ret
shll
ret
cmp
in
cmp
movsb
xchg
gs
mov
lods
mov
sbb
std
jb
rorb
push
cli
jg
cltd
push
jp
lods
imul
xlat
and
mov
jge
cmc
pop
or
mov
inc
xchg
rcl
xor
mov
or
les
stos
popf
push
imul
dec
xlat
hlt
dec
lahf
push
cld
and
jnp
insb
cmovg
rclb
shrb
xchg
xchg
stos
add
gs
push
cmp
push
aaa
adc
cmpsb
data16
cmp
int
xchg
dec
movsl
add
test
jno
mov
addl
imul
shr
mov
sub
pop
iret
push
mov
adc
adc
xchg
xchg
pop
repnz
je
jle
sbb
mov
xor
loope
xchg
movsl
add
pop
test
pop
lcall
in
mov
mov
mov
and
in
inc
jg
xchg
icebp
std
or
mov
mov
mov
insl
lret
dec
je
mov
dec
or
sbb
lret
sub
add
adc
cmpsl
sbb
lds
xchg
fdivp
es
js
xor
repnz
xor
pop
sbbb
xchg
mov
ret
jnp
or
aaa
mov
sbb
dec
xchg
clc
std
loop
and
imul
addr16
lea
or
inc
cmp
ss
dec
test
pmullw
adcl
lods
inc
pop
cmp
fsubrs
shll
cld
fsub
cld
pop
mov
das
in
bound
push
das
push
lret
and
fs
shlb
data16
je
jge
mov
sahf
pop
repnz
add
xchg
filds
jbe
push
xchg
aas
xchg
xlat
sbb
enter
xor
test
sub
aaa
cmc
lret
mov
decb
std
xchg
xchg
fistl
filds
push
xor
jno
js
mov
insl
movsl
pop
cmp
leave
scas
xchg
imul
pop
inc
ljmp
loop
xor
xor
pop
xor
in
inc
test
or
xchg
xor
mov
mov
inc
scas
sub
sbb
cs
fld
jae
add
sbb
sti
sub
and
push
push
inc
popf
jbe
inc
pop
loopne
lcall
xchg
inc
lock
hlt
adc
pop
push
cld
outsb
call
mov
sub
out
push
cmp
movsl
jns
out
add
jo
mov
mov
testl
push
push
jecxz
and
loopne
xchg
mov
lret
add
jge
insb
sbb
add
icebp
out
imul
xchg
pop
inc
mov
push
pop
aam
pop
ljmp
lcall
popa
shr
or
adc
inc
fcmovne
jp
mov
xchg
push
je
sbb
bound
dec
xchg
pop
sahf
dec
jbe
addr16
scas
addr16
lods
mov
mov
or
jb
pop
jle
pushf
sbb
and
xchg
aas
push
in
xchg
movsb
xchg
pop
adc
andb
scas
in
xchg
and
pop
jnp
lods
jle
jbe
into
jae
decl
adc
sub
sub
add
push
xor
int3
mov
dec
inc
enter
add
xchg
push
into
fisubrl
dec
rcrb
jb
sub
imul
mov
popf
test
pop
popf
cmp
mov
sub
dec
mov
add
outsb
adc
pop
das
out
movsl
outsl
pushl
cmp
lea
aam
and
mov
add
jbe
xchg
push
nop
sub
push
js
xchg
inc
sub
test
jo
cmp
add
add
inc
jae
and
xchg
push
rcrl
pop
adc
jbe
mov
mov
out
sahf
loope
adc
jne
or
jbe
push
ja
lret
ret
mov
aam
cmp
dec
out
push
xchg
std
inc
dec
sub
dec
aaa
nop
or
sbb
and
jmp
dec
push
cmp
pop
fisttpl
lcall
add
pushf
sahf
cmp
push
adcb
popa
int
pop
cmpb
orb
lret
mov
cs
dec
nop
push
mov
xchg
and
ret
std
push
adc
mov
sti
cmp
dec
sarb
xchg
push
icebp
scas
dec
test
cmp
enter
hlt
enter
cmp
fdivrl
cld
jb
ret
sbb
bnd
mov
cs
push
rorl
inc
ljmp
movnti
push
repz
movsb
fs
and
or
or
repnz
js
xchg
and
test
lcall
xchg
clc
bound
ret
push
in
dec
nop
ja
sbb
adcb
pop
and
pop
xor
push
mov
pop
mov
jne
fildl
xlat
jecxz
xchg
pusha
cmp
int3
int
push
mov
mov
mov
jl
movsl
jns
add
shlb
and
aas
mov
loope
xor
shll
push
rcrb
sbb
repnz
sbb
scas
xor
fbld
ficomps
xor
hlt
xor
and
lods
xor
lods
les
ja
leave
and
daa
sbb
push
jle
paddusw
loopne
enter
scas
ret
les
lret
scas
adc
sub
inc
pop
xlat
or
mov
js
dec
test
stos
xchg
or
mov
mov
loopne
enter
adc
shlb
cmpsb
and
inc
jae
fildl
jo
notl
xchg
push
stos
jp
cmp
add
adc
xor
dec
mov
sbb
dec
push
push
inc
addb
icebp
insl
cli
je
lock
lahf
je
pop
mov
mov
ret
cmp
loop
xorl
rorl
mov
inc
mov
and
aad
add
mov
pop
push
xor
sbb
mov
repz
push
popf
scas
jl
pop
jge
pop
scas
ret
pop
ja
pop
xchg
xchg
mov
xorb
cmp
and
push
dec
or
popf
mov
mov
push
jecxz
xchg
imul
out
stos
out
cmp
mov
movsb
into
test
mov
mov
dec
cli
out
xor
jmp
sub
std
xor
ds
sbbb
pop
push
xchg
imul
cmpsb
sub
call
push
pop
xor
xor
fs
mov
aam
mov
and
add
mov
fisubrl
jne
push
adc
sub
push
add
or
xor
stos
push
mov
mov
xchg
pop
sub
or
mov
jo
bound
hlt
or
outsl
fstps
loope
mov
xchg
inc
fisttpll
adc
cmpb
and
push
fs
adc
or
push
push
out
clc
scas
adc
test
inc
dec
adc
mov
mov
dec
mov
push
push
lret
idiv
jmp
mov
add
cmp
adc
cmp
mov
test
fldt
insl
gs
mov
xchg
push
movsl
mov
sub
scas
mov
lret
dec
pop
cmp
sbb
out
ja
lret
insl
and
lds
mov
inc
cli
iret
dec
pop
mov
inc
dec
cmpsb
xrelease
or
lret
or
repnz
mov
mov
lock
lret
cld
imulb
push
mov
int
sbb
lahf
sbb
sbb
push
push
mov
mov
jae
out
imul
xchg
sar
dec
mov
sar
test
dec
int
frstor
cmp
call
sbb
xor
dec
in
pusha
js
lret
jmp
add
arpl
jbe
push
je
cmpsb
loopne
movsb
std
sub
xchg
push
clc
flds
mov
ret
mov
sub
dec
mov
xor
cmp
inc
mov
mov
lret
bnd
insl
movaps
repz
cmc
adc
das
mov
ljmp
addr16
add
gs
scas
icebp
jmp
aas
mov
lret
mov
inc
mov
test
xchg
cmp
inc
mov
fidivrs
xchg
in
fs
adc
les
lret
xor
lods
inc
inc
or
cwtl
inc
push
jne
or
inc
sbb
shrl
stos
add
push
std
cmp
mov
fidivrs
aas
and
xchg
adc
mov
sahf
mov
and
xchg
inc
or
mov
pop
bswap
sub
mov
push
jb
mov
inc
int
gs
jbe
sub
daa
fiadds
and
stos
add
ret
outsb
mov
in
pop
in
sub
test
cmp
rcr
stos
and
add
addr16
dec
pop
mov
ja
stc
push
imul
test
jbe
pop
test
mov
icebp
pop
mov
daa
push
dec
movsl
dec
mov
xchg
in
popf
mov
xor
dec
mov
nop
cwtl
movsl
or
mov
aas
xchg
jecxz,pn
lcall
cmp
adc
scas
arpl
jnp
jp
leave
outsb
loopne
out
inc
mov
dec
movsb
and
mov
lods
aas
test
add
inc
jge
and
pop
fmuls
lock
pop
aad
aam
xlat
mov
cmpsb
sahf
cwtl
xor
add
xlat
pusha
inc
mov
cmpsb
fs
outsb
scas
push
mov
shld
pop
jecxz
pop
add
and
jp
push
popa
add
repz
or
pop
and
inc
jne
sbb
pop
pop
push
pop
adc
inc
mov
mov
adc
or
popa
imul
lods
mov
gs
dec
or
call
add
and
test
and
scas
aaa
jb
jno
jb
int
ret
gs
mov
aad
int3
sbb
add
push
testl
in
jge
out
or
lds
lret
adc
rcrl
out
cwtl
xlat
fdivp
stos
not
loopne
filds
aaa
outsb
ret
cmp
adc
sub
les
repnz
lcall
dec
inc
scas
mov
lods
orl
sar
out
test
cmpsb
in
dec
imul
xchg
pop
xor
or
jge
sti
imul
xor
scas
pusha
dec
or
adc
cli
cmpsb
push
or
ret
in
or
sbb
add
loop
rcrb
sub
sbb
clc
mov
out
xchg
push
jle
fbld
andl
nop
jbe
jbe
aam
or
mov
jle
and
inc
jae
mov
lods
sarl
sub
icebp
dec
push
ljmp
pop
adc
cmp
cltd
xor
pushf
adc
push
into
sub
imul
pop
testl
ret
incl
test
or
cmp
jne
inc
imul
xlat
fs
pop
imul
js
dec
rolb
or
mov
mov
gs
fmuls
cmc
hlt
jb
hlt
jo
out
jns
jl
mov
outsb
cwtl
in
push
jmp
imul
mov
data16
and
xchg
sarb
loop
dec
fnstcw
push
aam
insb
adc
or
into
repz
jecxz
mov
aaa
es
mov
testb
mov
outsb
cmpsl
inc
pop
fs
leave
push
push
sbb
xor
mov
movsl
div
or
shll
xorl
mov
jo
pop
mov
loop
out
jp
shrl
mov
add
sahf
rorl
mov
sbb
jl
das
enter
xchg
sbb
mov
push
sbb
lods
lods
pop
stos
sbb
mov
shrb
push
addr16
ret
negl
pop
scas
in
iret
and
dec
xor
xchg
pop
mov
dec
mov
cli
fdiv
dec
fcoml
sub
adc
xchg
iret
test
pusha
rcr
lcall
add
shlb
dec
sahf
movsl
fwait
cmp
arpl
jo
loope
jmp
mov
iret
sbb
stc
cld
pop
sti
hlt
outsl
fdiv
jg
xchg
fs
in
sbb
inc
xchg
mov
adc
cmp
test
ljmp
cmp
pop
mov
or
xchg
int
test
stos
pop
negl
test
xchg
xor
xor
add
lret
push
movsl
adc
lea
pop
fsubr
dec
daa
pusha
xor
std
shl
xor
sti
pop
fsubrs
mov
fs
sub
clc
sub
xchg
clc
mov
bound
mov
mov
loope
or
push
sbb
notl
lods
mov
inc
lahf
or
in
sahf
cwtl
lret
sub
xchg
cli
mov
ret
out
push
inc
sub
adc
stos
std
cwtl
push
and
and
fimuls
movsl
lods
xorb
lret
je
sti
add
pop
push
push
adc
mov
stc
add
push
outsl
repnz
movsb
outsl
inc
pusha
insl
lahf
mov
jns
rcrb
sbb
and
lret
popf
xor
add
mov
cmp
fdiv
iret
mov
pop
ss
mov
je
aas
mov
inc
loop
aad
adc
xor
pop
sub
lcall
aas
test
lcall
push
fdivr
push
mov
rcrl
and
fldl
js
fstpt
test
xchg
ret
dec
cwtl
add
push
or
fidivrs
adc
in
div
cwtl
mov
or
call
dec
lods
sbb
pop
stos
add
loop
jno
inc
test
icebp
inc
add
aad
jmp
push
out
sahf
ret
sub
ret
mov
je
pop
test
dec
test
add
shl
shr
jl
shl
lret
ja
sub
jne
ficompl
jmp
xor
sbb
stc
cmp
les
jecxz
sbb
imul
leave
pop
xchg
mov
mov
scas
std
insl
mov
sbb
mov
inc
mov
push
inc
sub
icebp
mov
mov
xor
or
adc
jmp
cmp
dec
mov
mov
pop
lods
mov
aas
pop
jb
arpl
jp
add
mov
ja
in
and
dec
mov
or
push
or
cmpsl
imul
aaa
test
loop
jmp
aas
mov
lods
sub
mov
lcall
xlat
xor
inc
andl
and
cmp
ja
imul
incb
add
and
idivb
xor
pop
xlat
stos
xchg
les
les
push
mov
sub
iret
lods
rol
sbb
pop
cmp
out
add
adc
mov
and
pusha
out
test
xor
cmp
das
jbe
mov
loopne
gs
cmpsl
or
xor
mov
pop
lahf
ja
and
xchg
push
jo
sub
lods
jne
ljmp
daa
push
popa
cs
adc
movsb
xchg
mov
mov
mov
lods
popf
aad
pop
in
add
inc
in
lret
stos
ret
lock
mov
sbb
and
pop
fists
iret
jp
fstpt
xlat
fwait
mov
mov
pop
jbe
push
cmp
cmpsb
mov
testl
dec
xor
add
cld
jp
scas
test
sbb
or
lea
movsb
rorb
jns
mov
decl
jae
cmpb
jne
jno
adc
aas
mov
jno
and
mov
hlt
mov
sahf
xchg
inc
sub
mov
mov
fnstsw
cli
cmp
mov
ljmp
push
adc
sbb
add
jne
mov
jecxz
rcll
imul
imul
into
mov
jo
stos
lds
jp
mov
mov
out
dec
sbb
pushf
arpl
lahf
sbb
jnp
adc
pop
testl
push
loope
or
test
out
icebp
pop
sbb
mov
imul
xchg
mov
mov
xchg
jmp
xchg
xchg
ficompl
ficoms
addr16
lret
pop
sahf
shlb
pop
mov
dec
pop
pop
icebp
fisubs
cwtl
das
mov
popf
fsubrl
in
sbb
aam
jp
das
pop
mov
ret
test
xchg
cmp
mov
fwait
jb
mov
aad
pusha
popaw
outsl
mov
popf
jns
push
into
jbe
insb
and
roll
cltd
add
loopne
cmp
lea
mov
cmp
sbb
cmp
mov
mov
and
cwtl
add
lods
roll
js
pop
lods
insb
push
popa
jg
jg
xor
cmp
int3
js
inc
pop
out
sub
and
aaa
pop
or
cmp
shl
aas
inc
into
imul
popa
aam
or
inc
fiadds
add
test
pop
cmp
mov
dec
test
fstpl
jl
in
shr
popf
dec
inc
xchg
sub
imul
cmp
xchg
push
popf
push
sub
js
jg
orl
pop
inc
pop
cmp
jb
lds
add
in
adc
les
popf
mov
mov
sbb
inc
mov
adc
aas
ljmp
fnop
push
xchg
ret
or
jl
lods
dec
and
push
aaa
js
hlt
mov
out
push
outsb
mov
fisubrs
xlat
mov
jae
and
jle
popf
inc
or
outsl
mov
push
iret
cmpsl
xchg
mov
imul
lods
scas
mov
sub
jle
fsubl
loope
xchg
and
lea
mov
outsl
jae
cltd
mov
fwait
jmp
test
loop
push
mov
jo
mov
sub
ljmp
push
insb
jns
loope
fistpll
fidivrs
push
adc
mov
add
pop
jno
push
pop
mov
cwtl
out
gs
push
idivb
or
fildl
add
cmp
lods
popf
sbb
xor
das
sahf
pop
add
cs
mov
mov
cld
add
or
inc
lea
add
adc
sbb
xchg
pop
movsl
dec
icebp
test
cltd
sbb
repz
or
cld
inc
notb
jle
mov
outsb
cmpb
ret
add
and
arpl
inc
jb
jo
mov
enter
sbb
mov
les
push
iret
in
sub
pop
xchg
test
fisubl
rolb
push
jle
fcompl
push
shl
xchg
ds
inc
rolb
dec
xchg
cmpsb
lea
push
aas
and
cmpsb
mov
push
cwtl
mov
xchg
lock
cmp
push
imul
js
pop
mov
aad
sbb
ret
pop
test
inc
dec
sub
out
and
je
jno
adc
jno
pop
pop
das
mov
xchg
xor
insb
popf
jae
andl
aam
inc
call
rorl
call
je
fbstp
out
mov
lds
dec
jmp
dec
gs
jmp
out
xor
xchg
into
out
js
arpl
fnstsw
sub
mov
xchg
pop
pushf
pop
xchg
inc
inc
xchg
rcll
xchg
movsl
jmp
loop
fnsave
sub
test
sub
jnp
mov
mov
mov
jae
inc
fiaddl
aam
mov
jnp
aam
sbb
and
or
dec
pop
dec
xchg
mov
jb
fisubs
flds
jno
push
or
test
mov
lods
add
push
mov
adc
push
mov
subb
clc
xchg
mov
popa
mov
fdivp
cmpsb
and
xor
xor
lock
icebp
xor
sti
and
out
pop
sahf
rcrl
jecxz
jg
and
cwtl
hlt
pusha
hlt
in
int3
xor
hlt
shlb
add
nop
mov
sbb
jb
cmc
push
mov
cmp
mov
xor
inc
mov
or
cmc
xor
dec
scas
jle,pn
jl
mov
pop
pop
div
call
std
gs
arpl
dec
pop
inc
sbb
jecxz
dec
adc
inc
mov
rorb
pop
cmp
xor
add
ret
out
dec
or
mov
mov
add
cwtl
xor
lahf
in
cwtl
shlb
push
lret
mov
leave
and
lcall
mov
popa
mov
xor
and
mov
loop
fistps
mov
fcoml
adc
xchg
repz
pop
int
xor
notb
lods
jle
and
push
dec
enter
pop
jge
and
loopne
jl
inc
jl
xchg
push
shrb
out
lret
inc
cld
add
test
clc
rorl
push
in
sbb
pop
pop
xor
push
fmulp
clc
ljmp
inc
dec
lds
aaa
andl
or
sub
movsb
fistl
and
das
jb
pop
insb
into
mov
arpl
and
mov
ret
xor
jp
cli
xchg
aaa
fs
sub
sub
add
or
mov
xchg
les
cmp
or
es
int3
mov
mov
jle
pop
cmp
sbb
mov
cmpsl
mov
jbe
insl
sti
xor
lcall
mov
sbb
fucom
jns
and
aad
sub
aam
daa
imul
mov
jmp
xchg
mov
adc
into
dec
mov
or
or
cmp
xor
in
push
mov
mov
fadd
fistpll
jle
out
jns
adc
test
cmp
mov
cmp
sbb
xor
jae
jl
faddl
and
fldenv
pop
adc
push
inc
mov
adc
mov
js
scas
test
cmp
xor
add
cld
dec
mov
divl
jbe
int
sbb
cmovae
push
or
jns
inc
cli
sbb
addr16
jno
aaa
leave
dec
pusha
lahf
lea
push
mov
daa
outsl
inc
push
jo
int3
cli
xor
cmpsb
push
sahf
sbb
or
sahf
stc
fdivrs
inc
jne
xchg
pusha
lea
pop
mov
lods
add
lret
aaa
scas
inc
mov
pmaxub
lea
rclb
sbb
sbb
addr16
popf
jno
fwait
cmp
cltd
jb
adc
sub
int3
pop
push
mov
mov
imul
or
adc
xor
jecxz
lret
int3
cltd
enter
rcrl
lods
movsl
cmp
xchg
fistpl
sbb
xchg
int3
or
cs
jbe
imul
lea
mov
pop
dec
je
mov
fs
push
gs
cmp
push
jnp
in
loopne
mov
in
inc
add
xchg
jmp
mov
inc
jg
ljmp
inc
dec
imul
movsl
push
xor
stos
mov
loopne
push
add
jl
nop
sbb
dec
inc
adc
popa
scas
pop
mov
insl
cmp
lds
lods
xor
sub
jmp
out
push
xchg
dec
in
das
mov
add
cmc
fsubs
mov
mov
fsub
sub
sbb
xor
cmp
cwtl
xor
scas
lcall
xchg
mov
xchg
jecxz
dec
xchg
leave
sub
outsl
sub
or
lea
cmp
nop
aad
mov
in
mov
aas
mov
fistpll
or
orb
sti
bound
lcall
iret
cs
je
pusha
dec
lcall
cmc
fcoml
in
fstpt
mov
and
xlat
xchg
dec
daa
imul
es
fs
cld
mov
cmpsl
push
add
adc
cld
inc
roll
jbe
stc
insb
aaa
test
or
inc
add
mov
cmp
call
mov
jge
inc
lret
and
mov
mov
adc
pop
mov
jb
stc
pop
sbb
xor
mov
stos
aad
xchg
inc
and
adc
rcrl
rolb
push
std
and
sub
popf
addl
outsl
push
pop
and
sub
call
push
dec
jno
push
cmp
out
adc
xorl
addr16
test
js
hlt
lahf
pushf
push
mov
lret
cwtl
cwtl
xchg
push
xchg
add
lea
shll
lds
jg
scas
loopne
push
xchg
mov
jp
sbb
jmp
dec
dec
orb
int
outsb
xchg
outsb
cs
aad
das
sub
and
dec
popa
mov
pop
out
push
and
or
fwait
xor
xchg
pop
and
xor
test
addr16
ja
enter
outsl
xchg
jne
or
add
cli
aam
cmc
and
push
ss
jns
testl
push
lea
jo
mov
jle
pop
mov
add
mov
sub
popf
dec
sbb
cli
ja
lods
bound
dec
add
fbld
xchg
ljmp
adc
inc
nop
xchg
sar
mov
xor
dec
insl
push
fsubs
inc
ret
and
xchg
stos
mov
out
xchg
adc
negb
sbb
lock
sub
lock
outsb
mov
adc
ret
ret
add
push
outsl
xchg
mov
xor
inc
jmp
xor
mov
jne
int
sar
int3
cld
jecxz
aaa
addr16
pop
scas
lahf
into
addl
mov
mov
test
lcall
mov
jo
rcl
test
cwtl
repz
out
xor
addr16
sbbb
mov
pop
aaa
call
push
das
out
cmp
dec
xchg
or
jp
arpl
insb
ja
dec
shlb
jp
mov
sbb
cmpsl
push
scas
and
pop
and
sub
fnstenv
stos
test
jl
sbb
add
movsb
sub
outsl
mov
mov
imul
dec
add
data16
mov
push
dec
or
daa
push
mov
repz
in
aas
adc
sahf
imul
push
inc
and
cmp
and
dec
arpl
mov
add
or
inc
xchg
idivb
es
loop
stos
or
hlt
lahf
jge
fcmove
or
and
fwait
adc
dec
xor
movsl
xchg
outsl
movsl
rorl
ja
stc
and
notl
push
in
jb
fwait
adc
push
push
mov
xlat
std
dec
and
jo
movsl
mov
movsl
add
adc
jg
or
push
loop
pushf
cwtl
pop
shl
pop
or
shlb
dec
lock
cmp
cli
jl
loope
and
test
paddd
je
jmp
mov
adc
inc
cmc
mov
fcmovnu
xor
sbb
imul
pop
subb
jb
popf
pop
xchg
shl
jns
mov
mov
jbe
mov
mov
gs
dec
mov
inc
test
mov
xchg
sbb
out
ret
loop
sub
dec
gs
shll
rorl
dec
loop
pop
ficoms
fmull
fdivp
dec
jae
inc
imul
lods
std
jb
je
pop
cmp
leave
push
cli
xorb
cmp
push
mov
insb
scas
mov
lock
cmp
aam
daa
xchg
sti
xchg
sub
int
push
xchg
aaa
cmp
xchg
movsl
dec
mov
test
fstpl
lcall
dec
mov
push
jp
idivb
jg
push
mov
pop
jnp
shrl
fcoml
or
mov
xor
js
jecxz
add
dec
dec
or
nop
testb
dec
push
dec
dec
inc
rorb
movsb
cltd
pop
jmp
fadds
push
push
pop
es
int3
push
je
sbb
jl
cmp
and
sbb
imul
cmpsb
adc
cmp
and
jns
aam
lock
fidivl
add
in
xor
outsl
ja
mov
int3
jp
scas
dec
out
sbb
shrb
test
bound
imull
jbe
push
loope
rclb
int
imul
js
xor
pop
inc
or
dec
lea
mov
sbb
mov
hlt
pop
lahf
arpl
mov
daa
sbb
xlat
lods
mov
adc
inc
add
jl
fstl
adc
test
shlb
rolb
jo
js
push
xchg
or
push
popa
addr16
sahf
xor
adc
bsf
dec
pusha
cs
and
adc
add
outsb
sahf
jmp
adc
mov
hlt
cmpsb
cs
outsb
sub
pusha
pop
stos
mov
lds
sub
ljmp
dec
aas
scas
lcall
cmpl
and
adc
and
loop
jns
cmp
stos
adc
dec
stos
jno
decl
hlt
into
mov
and
fnstcw
mov
pop
push
js
adc
xor
push
jno
pop
sti
in
inc
sbb
pop
xchg
dec
mov
lahf
push
ret
push
add
fwait
and
jno
dec
or
out
dec
sti
clc
addl
scas
mov
adc
out
or
out
mov
aas
inc
lret
add
nop
cmpsl
stos
dec
sub
fs
sahf
push
gs
mov
or
xor
loop
ja
push
dec
push
jno
test
imul
pop
aas
add
loopne
jno
dec
fstpl
and
mov
adc
icebp
sub
xor
jmp
sub
dec
js
movb
xchg
fsub
repz
mov
mov
stos
shll
ds
popf
push
mov
mov
das
pop
lcall
mov
add
outsb
fstps
aas
out
xchg
lods
mov
stc
js
outsl
mov
dec
xor
aaa
push
es
gs
int
inc
add
imul
aas
cmp
xlat
es
pop
push
bound
repz
xor
jae
leave
shlb
aad
stc
fdivl
and
jb
lods
insl
lret
es
test
loop
xchg
sbb
into
sbb
dec
in
bound
stc
clc
mov
add
js
sub
xlat
or
xor
mov
fstl
or
movl
push
sbb
leave
je
sbb
sbb
adc
loope
js
loop
sbb
inc
imul
aad
xor
inc
or
fdivrs
lret
dec
pusha
pushf
mov
lods
call
xchg
jne
jg
and
stc
adc
leave
mov
scas
mov
pop
dec
aam
pop
mov
bound
mov
add
pop
and
or
into
adc
cmp
mov
add
push
adc
jnp
out
cmc
fdivrl
pusha
mov
test
dec
mov
imul
xchg
ret
xlat
das
mov
js
mov
sub
push
addb
push
add
std
test
rolb
lods
jle
shl
xchg
ds
enter
rcll
jl
cmp
fnstcw
add
enter
mov
inc
movsl
xor
std
sub
ja
sub
push
idivb
iret
test
jg
dec
adcl
fbstp
cmp
xor
ja
mov
xchg
sarl
in
jo
clc
rorb
jl
js
ss
sub
les
sub
nop
jecxz
cwtl
and
das
xor
fstl
mov
push
push
mov
ja
je
test
ret
aas
pop
cmp
lds
mov
pusha
cmp
inc
and
in
push
fs
xchg
es
inc
lods
sub
ffree
jmp
dec
outsb
call
jo
cmp
adc
xor
jb
or
and
dec
popf
in
outsl
or
xchg
loop
push
shll
stos
mov
xor
mov
add
outsb
fwait
test
sbb
std
test
mov
ret
xor
push
jae
xchg
sbb
xchg
popa
and
jg
popa
roll
sub
mov
rorl
or
insl
cltd
push
addr16
loopne
push
pop
jecxz
es
jge
xchg
lock
xor
dec
jns
movsl
adc
rcr
sbb
cltd
sbb
aam
mov
out
mov
sbb
cltd
pop
adcb
stos
loopne
das
cmp
lcall
cmpsl
fwait
pop
cmp
cmpsb
jns
inc
xlat
xchg
aas
xchg
xchg
dec
xlat
in
into
jo
add
out
inc
ret
cwtl
aad
lret
test
lods
cmp
xchg
push
sub
or
movnti
inc
inc
outsb
jmp
or
pop
cmp
jg
jecxz
mov
add
push
js
dec
and
negl
push
push
shl
fs
lods
cmp
fstl
ffree
mov
mov
or
pop
int
in
xor
pushl
nop
jno
lret
cmpsb
cmp
inc
and
aas
xor
int3
fldcw
sbb
push
lret
mov
shrl
cmp
xor
dec
xchg
sub
mov
movsb
in
mov
jae
int3
jae
fdivrs
cs
add
in
adc
ret
xchg
mov
add
or
xchg
nop
dec
xorl
jne
ret
fdivs
rorb
icebp
bound
adc
not
shll
rdpmc
shll
addl
inc
push
xor
insl
adc
ljmp
nop
lret
and
mov
cmp
test
jmp
divb
mov
add
xchg
jmp
xchg
mov
dec
push
je
mov
push
nop
data16
out
cmp
leave
pop
pop
in
rorb
outsl
icebp
in
sbb
das
xchg
roll
call
mov
lock
ss
rclb
or
roll
sub
cmpsb
shlb
int
lea
mov
push
sub
add
jp
fmuls
sbb
fdivrp
les
movsl
test
dec
lea
pop
orl
sbb
and
out
jno
in
inc
jecxz
imul
inc
dec
aam
loopne
sbb
lds
enter
jmp
aaa
insb
lahf
repz
icebp
mov
inc
and
aaa
fst
aam
lea
or
inc
xchg
inc
ret
orl
mov
push
jge
stc
lods
imul
into
cli
pop
iret
mov
daa
sub
mov
mov
hlt
ffreep
pop
pop
sbb
mov
scas
popa
jge
shlb
sub
cmp
shll
movsl
cmp
pop
sub
lret
or
mov
pop
adc
lret
imul
adc
leave
adc
scas
int
cmp
sbb
cmpl
stos
mov
out
pop
jnp
pop
movsb
andb
in
xchg
xor
push
xchg
dec
repz
js
pop
fidivrs
inc
cmpxchg8b
lret
sbb
fwait
gs
xchg
cmp
adc
cmp
and
mov
mov
shll
mov
sbb
addr16
pushf
xchg
in
std
inc
cld
loope
push
or
push
xchg
dec
enter
repz
sti
stos
scas
sub
out
lret
gs
pop
das
loopne
jecxz
pop
inc
and
push
in
stos
pop
xor
mov
test
cli
outsb
les
pop
mov
xor
lds
repz
jne
jle
push
sbb
mov
repnz
imul
orl
adc
jmp
idivl
jge
addl
cmpsb
stc
xchg
jno
int3
cli
add
repz
inc
mov
addb
dec
leave
add
mul
sub
fistpll
lret
aam
movb
cmp
adc
dec
movsl
out
mov
push
std
mov
int
lahf
and
push
mov
sarb
test
add
inc
jmp
movsb
scas
in
aaa
sub
sbb
shr
xchg
add
bound
ret
orb
std
dec
sahf
xlat
and
jecxz
xchg
jle
add
or
ficoml
add
xchg
add
pop
mov
mov
xor
fidivrs
ret
xchg
mov
sbb
xchg
inc
scas
push
xchg
push
dec
mov
mov
inc
jo
jns
shr
push
loope
inc
xor
jne
dec
xor
pop
xlat
mov
faddl
push
jo
icebp
shll
xlat
jne
or
and
out
loop
pop
scas
imul
inc
repnz
jnp
hlt
add
or
cmc
ss
mov
inc
arpl
loopne
jo
lret
add
or
mov
mov
jbe
push
and
and
jmp
repnz
hlt
pushl
mov
rcr
cmc
ret
adc
cltd
jns
ljmp
push
cmp
loope
xchg
xor
mov
or
sbb
pop
adc
inc
movsl
ret
jae
dec
mov
je
mov
dec
and
pop
jns
pop
jns
sub
fadd
pusha
push
out
push
lods
mov
lods
rorb
loopne
sbb
xchg
das
add
sti
ds
mov
lods
jl
jnp
and
ljmp
xchg
push
mov
mov
fs
jmp
xor
lods
pop
push
cmp
test
xlat
ficoml
je
mov
cmp
in
sbb
add
cli
or
mov
mov
and
out
mov
sbb
pop
loopne
xor
dec
test
push
mov
mov
je
arpl
mov
je
int3
inc
aam
jmp
pop
dec
mov
jo
dec
lods
jns
cmp
lock
sbb
dec
lock
aad
out
enter
ja
loopne
repnz
into
push
cs
sbb
ret
cld
imul
decb
inc
fdiv
pop
mov
pop
xor
cld
jo
mov
mov
xchg
lahf
adc
pop
mov
xor
pusha
into
repz
mov
or
mov
pop
int
popf
mov
imul
fimuls
pop
nop
shrl
inc
jmp
pop
add
inc
lcall
adc
or
mov
mov
or
jo
in
mov
mov
inc
pop
jae
shr
push
push
push
fmuls
mov
xor
mov
dec
pop
or
or
iret
pushf
imul
sahf
sbb
push
add
jecxz
insl
ljmp
fucom
je
push
mov
rorl
mov
push
adc
cltd
loop
or
sbb
mov
cmpsl
stos
adcb
xlat
dec
sbbl
repz
mov
and
dec
and
clc
pop
les
xchg
mov
fisubrl
test
aaa
imul
sub
movsl
insb
lcall
lret
bndldx
and
dec
xchg
fistpll
fcmovu
jg
push
repnz
shrl
ret
xchg
fsts
push
sbb
cmp
test
add
es
jae
mov
pop
pushf
or
and
lods
or
stos
pop
mov
pop
mov
cld
mov
push
sbb
sub
cmp
dec
mov
ror
stos
gs
dec
pop
push
or
imul
sbb
jmp
adc
and
imul
sub
mov
loope
push
dec
cmp
inc
lds
adc
nop
push
cmc
test
popf
repz
fildl
xchg
cmp
arpl
in
pop
mov
push
int
jmp
js
insl
cmp
stc
rorl
push
cwtl
cli
roll
mov
iret
pushf
cmp
jb
stc
xchg
pop
cmp
arpl
push
jo
or
std
fidivl
dec
bound
adc
cmp
inc
inc
dec
adc
fimull
and
test
adc
jne
add
sub
scas
gs
or
andb
dec
pop
test
insl
call
incb
dec
jbe
xchg
cmp
and
inc
mov
jnp
int
in
leave
dec
sub
adc
cmp
into
sub
lds
push
adcb
mov
cmpsb
sbb
in
mov
inc
aad
in
inc
daa
scas
mov
dec
or
xor
sti
testb
push
push
cmp
xor
pop
add
shll
adc
push
out
cli
mov
out
dec
pop
scas
or
lods
out
pop
lret
jne
jb
add
clc
and
loope
push
sbb
call
and
dec
pop
sbbb
push
mov
xchg
sti
mov
sub
into
aam
data16
negl
pop
in
ds
add
inc
mov
movsl
and
scas
enter
jmp
mov
jo
xchg
jbe
negl
xchg
cmp
xchg
dec
hlt
into
mov
lret
fwait
dec
or
nop
icebp
aad
fsts
push
cmp
decl
mov
pop
mov
cmp
add
dec
lret
loop
xchg
shl
std
clc
jns
add
inc
std
repz
and
iret
cld
inc
xchg
cmc
clc
es
fnstsw
inc
lock
pop
hlt
inc
adc
roll
loope
jb
push
popl
testl
enter
xchg
mov
nop
cltd
popf
or
cmpsb
repz
les
enter
mov
lgs
mov
popa
rorl
mulb
xchg
out
push
std
pop
add
sti
inc
lods
repz
adc
arpl
mov
es
sub
into
mov
lods
aaa
out
clc
cmpsb
andl
rcrb
mov
stc
and
mov
out
mov
cmp
dec
add
and
or
aas
repz
push
dec
mov
pusha
jmp
cltd
mov
rcl
jb
adc
push
jne
mov
dec
mov
sub
mov
add
mov
jnp
into
and
sbb
fadds
outsl
xor
mov
mov
mov
ljmp
xchg
int3
xor
int
adc
xor
cmc
mov
daa
or
adc
mov
fsts
push
xor
mov
das
xor
lea
inc
jl
pop
test
mov
adc
cmpsb
jo
push
mov
popl
iret
fdivl
cmpsb
mov
sub
pop
cli
pop
aam
xor
enter
pop
pop
adc
xor
es
aam
dec
sbb
lock
fistpl
negb
je
mov
xrelease
lcall
lret
jb
sbb
sbb
repnz
add
pop
stc
in
fistl
cmpsb
pop
mov
push
sbb
stos
mov
jbe
pop
or
dec
lods
dec
jmp
and
ja
cmp
ret
shrb
sti
mov
sbb
int3
mov
dec
add
dec
xchg
les
inc
pusha
repz
aam
sub
lods
sahf
repnz
adc
mov
xor
out
shrl
adc
add
jg
push
jae
les
adc
divb
dec
and
jl
push
pushf
test
cltd
pop
sbb
pop
cmp
cmp
addb
imul
bound
pop
bnd
lcall
in
popa
adc
dec
inc
xor
cld
roll
dec
pop
pop
jne
and
push
inc
test
push
xchg
push
xchg
popf
mov
mov
and
cmp
cld
insl
clc
add
xchg
ds
leave
and
sbb
rcpps
repz
addb
push
mov
xor
test
fmuls
xchg
shl
inc
les
imul
call
mov
outsb
lds
sub
sahf
int
cmp
cltd
out
mov
sti
ret
test
mov
or
mov
ja
cwtl
jo
aaa
stos
cmpl
push
jmp
push
sub
pop
in
scas
push
lea
lret
cs
iret
sub
std
stc
ja
inc
xor
push
add
repnz
sub
jns
inc
cs
sub
pop
and
cmp
test
dec
cld
ja
gs
clc
inc
cltd
out
inc
sub
xlat
pop
jl
mov
movsl
cmc
mov
xchg
xchg
addr16
adc
fsubrp
lock
xchg
lds
call
pop
test
lret
mov
lahf
jl
jae
push
cmp
jno
leave
fldcw
dec
inc
in
add
cmp
mov
mov
and
xchg
out
repnz
repz
les
mov
xor
inc
cmp
aaa
cmp
aaa
or
outsl
iret
jecxz
fsubp
cmpsb
cmp
pop
sbbb
addr16
test
mov
dec
gs
pop
push
and
test
leave
mov
mov
jle
fwait
jg
mov
cwtl
or
loop
mov
inc
inc
popa
mov
adc
jnp
cs
lcall
roll
outsl
gs
or
add
into
push
test
movsl
cs
adc
subb
stos
arpl
xchg
roll
insl
je
inc
addl
lea
test
fs
mulb
jecxz
outsl
lock
out
aas
xor
xor
roll
roll
and
add
jmp
sbb
subl
cwtl
or
xchg
loope
pushf
sbb
and
adc
mov
idivl
pop
mov
outsb
cmpsl
add
adc
shlb
daa
xlat
repz
add
fs
inc
sub
cmpsb
jnp
cmp
and
dec
xchg
les
fmul
fdivrs
pop
shrl
sbb
movsb
cwtl
pop
cmp
and
frstor
dec
lret
inc
xchg
dec
xor
fcmovnu
xchg
dec
scas
int
fwait
imul
mov
jmp
shrb
cmc
test
jecxz
or
jmp
fsubl
dec
cwtl
dec
push
xchg
dec
out
inc
pop
daa
cmp
jge
aas
sub
xor
or
pushf
inc
mov
mov
fwait
cmpsl
or
fs
lahf
jle
lret
loop
jns
adc
sbb
out
jle
adc
sub
sub
pop
jbe
xchg
je
sub
shrb
stos
jo
sahf
loop
dec
popa
addr16
mov
pop
adc
mov
adc
xchg
stos
hlt
and
in
mov
pusha
cltd
mov
test
push
enter
std
pop
adc
roll
lret
test
push
xor
cmp
adc
add
push
insl
in
out
lods
repnz
jge
or
scas
pop
and
or
shl
sbb
cltd
into
push
and
das
movl
in
mov
mov
adc
jno
rcrb
mov
pop
push
test
lahf
mov
push
iret
jbe
pop
imul
add
roll
dec
in
out
mov
jge
push
stos
xor
mov
push
or
lret
imul
dec
or
mov
test
sahf
push
dec
jl
pop
xor
mov
mov
cmpsb
sti
subb
and
rorl
adc
xor
std
lcall
push
push
movsb
mov
pop
add
ljmp
out
cmp
inc
jp
lahf
lds
mov
imull
cmovbe
in
mov
ret
inc
bound
lcall
xor
mov
add
push
add
cmc
sub
mov
in
scas
repnz
pop
sub
pop
hlt
sti
lds
xchg
add
ret
in
push
jo
inc
dec
daa
and
push
push
faddl
xchg
inc
out
mov
mov
mov
test
add
popf
orb
sub
fcoml
or
pop
lods
or
cmc
xor
cmp
jo
mov
cli
loop
imulb
out
stos
mov
test
hlt
rclb
mov
push
aaa
fcoms
lcall
test
sarl
add
jp
imul
gs
and
push
push
cmpsl
jnp
shlb
fadds
push
xor
push
cmp
mov
ret
aaa
cmpsb
xor
adc
imul
sti
xor
fnstenv
ja
sbb
cmpsb
xchg
sbb
in
jbe
data16
std
imul
pop
repz
and
cmp
into
sbb
std
add
stc
addr16
ss
xchg
mov
loopne
sbb
in
push
hlt
or
mov
inc
je
jnp
stos
fidivs
mov
dec
lds
jno
cmc
cmp
xchg
in
and
mov
daa
leave
push
rorl
push
xor
add
lods
cli
in
and
shlb
mov
jne
mov
fs
aaa
div
mov
fnstsw
inc
xchg
stc
sub
pop
push
xchg
mov
bound
loop
fimuls
xchg
jp
popa
negl
mov
repz
jns
movsb
popf
out
dec
xchg
inc
loop
or
aas
push
enter
add
stc
xor
pop
push
inc
dec
dec
fsubs
xchg
xorl
dec
fcomi
insl
repz
push
lock
pop
dec
inc
clc
loopne
add
sbb
cli
in
ja
xor
xchg
out
idivl
mov
pop
gs
mov
cmpsb
mov
jmp
rorl
add
outsb
cmc
dec
sbb
icebp
lds
xchg
je
or
xor
in
or
in
clc
scas
outsb
mov
shlb
push
les
cmpsb
add
outsb
int
icebp
xorb
cmp
fxch
mov
jmp
cli
loope
aaa
movsb
jno
addb
loopne
lods
je
dec
and
add
jmp
test
insl
xchg
push
sub
push
cmp
fdiv
mov
repnz
sbb
xchg
mov
jmp
pusha
repz
sbb
jmp
push
or
sub
inc
das
add
or
cmp
cmp
sub
dec
aaa
test
rclb
das
mov
or
enter
test
lock
iret
rolb
jno
sbb
mov
outsb
mov
sarl
lret
icebp
push
outsl
lea
or
out
pusha
mov
rcr
ret
mov
inc
test
cwtl
dec
dec
mov
jmp
xlat
ja
pop
ret
mov
out
dec
adcb
cs
cmp
cmpsb
out
adc
js
stos
sbb
mov
or
sahf
dec
loope
push
or
in
les
xlat
imul
lods
or
mov
jbe
repnz
xchg
pop
out
inc
hlt
cmc
xor
outsb
scas
fcomps
pop
pop
add
jo
cltd
push
movb
popa
mov
mov
fstl
inc
and
cmc
adc
loop
pop
mov
pop
sub
enter
stos
sub
push
add
dec
cmp
pop
cmpsl
push
sbb
jmp
fists
int3
inc
jae
stos
lret
outsl
adcb
stc
cmp
or
pop
into
mov
dec
out
sub
or
ret
mov
aaa
in
outsl
add
dec
sbb
cmp
inc
test
pop
jmp
jmp
rorl
in
dec
clc
sbb
xor
xchg
xor
push
xchg
xor
mov
jmp
pop
dec
adc
cli
mov
loope
js,pn
jo
push
xchg
in
loope
cmp
push
jno
inc
add
mov
lods
sub
mov
xor
pop
mov
xor
xchg
sub
fsubs
adc
cmpsb
dec
push
xor
lret
andl
cmc
mov
imul
fstpl
pop
pop
nop
test
dec
add
xchg
cli
lods
sub
pusha
std
jnp
jle
stc
jmp
pop
mov
sbb
lods
das
mov
sub
adc
mov
xchg
pop
cmp
std
dec
inc
ss
sub
aas
jns
clc
xlat
fsubrs
sub
mov
scas
enter
out
jge
xchg
inc
mov
and
jo
mov
xchg
push
shl
popf
clc
ljmp
ret
nop
xchg
push
mov
lods
xor
loopne
adc
jns
repz
adc
je
sbb
cmp
icebp
sti
cmp
xor
cmpsb
andb
sbb
fsubrl
aam
in
ret
xchg
push
sahf
imul
dec
inc
inc
mov
cwtl
fisubl
push
pop
push
mov
dec
or
jmp
insl
inc
push
or
mov
out
out
fdivrl
mov
cmpb
mov
sub
jbe
imul
les
cmp
push
stos
cmp
push
lock
jbe
hlt
push
sti
jo
dec
js
push
stos
in
or
fstcw
adc
int3
xchg
pop
dec
sti
adc
dec
sbb
sbb
cmp
xor
pop
out
mov
mov
inc
sub
xchg
repz
movsl
scas
push
sahf
int
clc
pop
hlt
cmpsl
cli
cmp
lods
fldcw
ja
cmp
jg
push
mov
les
out
xchg
add
imul
mov
js
sub
ficomps
push
icebp
mov
xor
dec
add
xlat
dec
cmp
mov
jmp
dec
rol
sbb
inc
jmp
xor
in
adc
sub
xchg
and
scas
scas
or
test
adc
lret
push
sbb
in
mov
out
add
push
mov
jbe
push
outsl
mov
sub
aam
psubq
sbb
inc
daa
hlt
in
cltd
addr16
pop
mov
dec
mov
daa
data16
push
pop
pop
pop
call
aas
jb
sub
mov
gs
rorb
daa
jecxz
mov
das
iret
loopne
pop
mov
test
xor
popa
outsl
test
or
mov
and
mov
aaa
andl
push
daa
out
addr16
sahf
test
lock
or
mov
sbb
out
fisubl
jg
cli
jge
xor
ss
push
scas
xchg
or
imul
lods
fildll
mov
std
pop
sub
mov
mov
mov
xchg
cmovp
adc
cltd
dec
lahf
pop
stc
jnp
aas
mov
pop
adc
sbb
jle
call
cmc
and
pop
and
ret
and
call
add
ss
loop
mov
inc
popf
or
das
sub
lds
insb
mov
push
call
xor
push
dec
push
mov
enter
in
test
dec
mov
or
push
addb
sbb
pushf
std
dec
jae
or
pop
fiadds
dec
or
push
cltd
shr
nop
xor
fstp
outsb
mov
adc
das
call
xchg
icebp
scas
pop
sahf
flds
int
pop
sti
ja
dec
mov
xchg
jnp
ret
xorl
lock
lods
sahf
scas
mov
jno
scas
push
lock
push
pop
movsb
cmc
roll
inc
in
stc
adcb
ja
pop
xchg
mov
test
dec
xor
cmp
stc
pop
sti
lcall
ret
pop
imul
mov
repnz
or
pop
fcos
cs
dec
scas
lds
fucomi
sub
push
add
jecxz
push
mov
popa
cmpsb
mov
je
loopne
fisubrs
jne
jns
cmp
lret
int
sub
das
mov
pop
or
sbb
lret
js
sub
fmuls
sarl
dec
insb
inc
data16
jp
cwtl
jbe
xchg
ret
stos
popa
adc
mov
sbb
adc
lea
movsl
jb
cltd
imul
mov
roll
cmpsl
pop
iret
rcr
jecxz
sbb
shrb
andb
add
push
movsl
nop
xchg
xchg
adc
jle
dec
inc
sahf
icebp
leave
jmp
xchg
hlt
out
add
adc
fwait
inc
mov
cmp
lea
jl
or
sub
mov
xorb
push
xchg
pop
pushf
addr16
pop
cld
and
dec
mov
inc
mov
or
mov
scas
inc
pop
frstor
cmp
lret
jmp
add
adc
jg
mov
fcompl
xchg
imul
sub
xor
sub
loope
pop
or
int3
sbb
push
push
rcll
fdivr
mov
xor
fiadds
xor
sub
in
repz
cmp
sbb
jbe
xchg
out
mov
das
mov
dec
movsl
movsb
std
mov
inc
mov
lret
add
lods
nop
adc
outsb
and
fsubr
hlt
insb
inc
adc
jb
lock
inc
inc
dec
cmp
popa
pop
cmc
xchg
das
sti
add
and
dec
xor
pop
and
mov
jle
push
sbbl
int3
arpl
arpl
dec
loop
bound
add
test
loope
jmp
shll
sub
sti
jbe
cmc
leave
cmpsl
lret
cmc
and
mov
pop
js
pop
dec
push
lahf
push
inc
push
pop
in
mov
mov
mov
cmp
ret
or
incb
orb
inc
ret
adc
push
lea
and
lods
mov
push
clc
push
xchg
notb
mov
mov
xchg
sbb
add
mov
adc
dec
mov
aad
out
sub
sbb
es
call
stc
in
repnz
sbb
push
cltd
int3
pop
mov
and
popa
enter
sub
sub
test
lds
repz
pop
ret
pop
faddl
sahf
push
pop
insb
pop
nop
push
jne
push
mov
jnp
xor
call
push
dec
add
leave
mov
dec
mul
pop
daa
jb
stos
ret
mov
outsl
pop
push
dec
div
adc
jno
pop
dec
sub
fstl
popa
pusha
hlt
xorb
mov
pop
push
int3
mov
stc
jno
icebp
popa
jno
adc
mov
int3
leave
clc
mov
mov
mov
fisttpll
and
xchg
aaa
and
push
add
mov
in
inc
sbb
mov
jae
add
call
out
clc
sbb
inc
fcoms
sub
cmp
push
mov
loopne
push
cmc
pop
or
jae
mov
into
sbb
mov
sub
cs
xor
mov
xchg
dec
es
imul
jge
push
xchg
or
add
test
test
fnsave
cld
ret
xchg
out
ljmp
shll
push
cmpl
stos
inc
mov
pop
daa
in
popf
jg
cmp
and
arpl
inc
mov
mov
mov
add
push
mov
xchg
sbbb
sbb
push
cmp
mov
btr
fcoms
fnstcw
mov
fcmovne
ja
js
mov
push
loope
push
xor
loope
lods
aam
sbb
jno
stos
mov
aaa
sbb
sahf
loop
stos
inc
jno
scas
and
fldcw
je
lret
mov
aam
cmp
xor
push
mov
incl
lods
es
in
scas
rclb
dec
outsl
ret
push
jo
add
mov
push
es
movsb
insb
push
sub
test
pop
pusha
sbb
les
dec
pop
jge
int
sub
and
insl
cmp
jno
into
iret
mov
mov
or
les
or
out
or
leave
and
lcall
xor
enter
push
lock
add
push
arpl
fbld
scas
xor
ljmp
adc
push
fildl
cltd
loopne
fwait
ss
jmp
push
fstpt
xchg
sbb
dec
add
sub
pop
jle
sbb
cs
int
xor
xor
jns
call
out
push
and
int3
std
sub
testl
and
sar
pop
mov
sub
test
mov
mov
push
xchg
leave
int3
ds
pusha
xor
pop
outsl
cmp
jnp
icebp
lahf
lret
cmpsb
movsl
sbb
cmp
mov
lret
ret
dec
add
push
mov
insb
call
std
scas
xchg
gs
shl
xor
inc
mov
rclb
sbb
aad
adc
push
lods
pop
imul
aaa
mov
ds
xchg
arpl
sub
jne
xor
repz
pop
popf
lock
push
xlat
jae
rorb
sahf
push
stc
push
lea
mov
xor
cmpsl
mov
icebp
jae
mov
jne
mov
cmp
mov
cli
in
incl
lea
or
and
loope
scas
out
nop
sub
or
scas
pop
sub
ja
mov
pop
or
test
sbb
testb
ljmp
pusha
mov
sbb
in
or
and
out
mov
fisubrl
sbb
ss
xchg
add
xchg
pop
sbb
mov
mov
add
inc
lods
push
out
fwait
cmc
jnp
sbb
into
jg
pop
gs
loopne
and
lret
cmp
pop
lock
adc
jmp
cmp
sub
arpl
divb
icebp
jl
jmp
ret
adc
sbb
arpl
call
adc
jle
shl
andb
movsb
scas
jg
push
jnp
jno,pt
adc
dec
cwtl
jno
or
sar
xchg
inc
pop
mov
into
mov
cs
xchg
and
xor
pusha
pop
xchg
push
pmovmskb
fs
mov
outsb
push
movsb
hlt
or
add
call
lods
xchg
fwait
sbb
aaa
sahf
sbb
mov
or
in
mov
push
mov
mov
xchg
sbb
and
xor
and
add
lcall
jg
sub
fimuls
out
rcl
push
outsl
fidivs
push
addb
pop
repnz
in
in
or
jp
in
push
mov
lahf
fninit
popl
push
jno
jl
mov
gs
ret
fmull
leave
enter
int3
jp
jae
add
xchg
sbb
movntq
out
sub
test
test
scas
je
ret
fcom
sbb
jle
mov
cwtl
sar
ds
shl
mov
add
in
pop
dec
adc
xchg
nop
mov
jmp
adc
out
pop
pop
or
mov
aam
sbb
push
pop
cli
mov
fisttpl
jo
repz
dec
inc
lahf
repnz
fimuls
push
mov
mov
jle
rcrl
sarb
sbb
out
imul
inc
rcl
mov
xor
bound
jbe
inc
cmpsl
cs
jecxz,pn
cmc
push
adc
adc
imul
xor
jbe
mov
cmp
pushf
movsb
lock
inc
lods
inc
inc
lret
sti
xchg
pop
into
scas
in
test
adc
sbb
cmp
je
and
pushf
pop
loopne
ss
xchg
mov
gs
add
cmpsb
jge
movsl
dec
mov
ds
and
mov
mov
lcall
push
cmp
and
xorl
loopne
add
ss
lahf
addl
leave
adc
push
pop
arpl
pop
clc
pop
or
xchg
cltd
repz
sbb
sti
or
inc
pop
mov
and
jnp
call
xlat
sbb
cmpsl
push
jl
shr
jg
pop
pop
inc
push
inc
xchg
jo
and
sub
or
pop
sub
mov
pop
push
popa
adc
out
cs
nop
xor
mov
les
jbe
push
lock
xchg
sbbl
push
lahf
inc
inc
lahf
cs
push
test
sub
xlat
fcoml
inc
jae
and
jno
push
pop
sti
cmp
push
arpl
ljmp
cs
clc
mov
inc
push
or
imul
mov
xchg
movsl
adc
pop
sbbl
js
sub
ss
and
test
fildll
sub
aam
mov
xor
mov
xor
mov
popf
sub
inc
sarl
aam
inc
in
and
pop
repnz
leave
into
test
cli
jae
imul
mov
mov
sbb
lret
mov
mov
fmulp
inc
and
fcomp
out
push
cmpsl
mov
divl
pop
xchg
arpl
sbb
imul
mov
jne
and
fdivr
mov
in
sub
push
lods
jg
scas
fisttpll
sub
inc
scas
pop
dec
or
out
stos
out
stc
inc
pop
aam
or
outsb
or
rorl
subb
test
adc
cmpsb
push
and
cmp
adc
xchg
cmp
aaa
push
in
mov
sarb
and
arpl
rclb
and
inc
push
jae
inc
inc
test
fildll
jg
pusha
push
xchg
push
hlt
mov
sub
int3
or
mov
inc
jne
fcoml
jne
repnz
add
inc
mov
repnz
adc
xor
pushf
inc
pop
cmp
xchg
loope
adc
and
add
in
cmp
xchg
pop
rclb
cmpsb
and
mov
xor
xchg
pusha
out
call
mov
insb
push
adc
insl
adc
mov
filds
add
cmp
mov
add
aaa
sub
push
xlat
int3
aam
sti
mov
and
pop
int
add
js
bound
cmp
loope
out
push
mov
jne
imul
jno
pop
popa
js
stos
add
and
cmp
push
je
test
andb
dec
fsubl
ret
fwait
mov
sahf
fidivrl
inc
outsl
push
pop
sbb
push
mov
test
xor
arpl
cmp
or
add
fwait
add
std
xlat
adc
mov
sbb
inc
out
push
stc
and
ss
cmc
aaa
pop
mov
jo
jmp
xchg
repnz
lods
arpl
jg
repnz
movsb
push
gs
push
sbb
pop
inc
or
mov
pop
sbbl
lcall
ficompl
popa
push
push
dec
addr16
ffreep
stc
dec
xchg
inc
enter
repnz
ja
xor
in
and
pop
dec
jne
stos
sahf
pop
cmp
sti
orl
lods
mov
imul
hlt
sti
push
xchg
es
bound
mov
iret
test
push
cs
and
mov
mov
adc
fadds
iret
fimuls
lahf
dec
push
adc
sub
adc
out
lea
test
enter
fs
pusha
test
push
lock
dec
pushf
cmc
jb
sub
or
xor
jnp
add
inc
outsl
sub
shll
addr16
sti
adc
fimull
gs
adc
or
push
lcall
add
push
pop
adc
adc
sarb
sub
cmp
adc
jg
mov
and
xor
bound
mov
adc
jnp
cmp
sbbl
jnp
push
adc
faddl
pop
in
adc
outsl
jbe
xorb
stos
mov
sub
push
enter
pop
out
leave
inc
dec
in
loopne
push
add
and
outsl
cmpsl
pop
ret
fisttpll
cmp
dec
inc
shlb
fsubl
sti
arpl
inc
push
fdivrs
out
mov
push
sbb
dec
std
adc
inc
sti
cmp
sbb
and
add
outsb
insl
push
jbe
adc
pop
pop
xchg
mov
lods
scas
lcall
sbb
adc
pop
inc
push
push
lret
mov
iret
fdivrl
push
stc
stc
lods
pop
fldl
inc
jb
outsb
jecxz
std
sub
xchg
into
ret
mov
fdiv
aaa
popf
aaa
orb
fcom
adc
mov
push
nop
int3
iret
ds
fstl
mov
jmp
add
lods
or
out
fisttps
xchg
and
pop
lds
mov
out
xchg
popa
cmp
shll
fdivr
mov
imul
and
inc
ljmp
and
call
lret
inc
and
add
cltd
ret
and
mov
test
add
dec
data16
and
mov
mov
mov
mov
pop
mov
jle
sbb
and
stos
fucomi
mov
js
mull
mov
mul
or
hlt
jbe
xlat
and
fbstp
sub
inc
push
les
xchg
and
lea
loopne
dec
cmpl
mov
fimull
xchg
lods
pop
ds
inc
incl
out
loope
pop
outsl
adc
scas
mov
dec
test
icebp
les
rcr
sbb
lret
imul
outsb
cmpsb
xchg
ficomps
add
or
mov
jne
mov
mov
mov
pop
jmp
mov
rcr
dec
lds
push
mov
ficoml
mov
pop
loop
int
mov
jne
push
bound
add
add
sarb
lds
dec
push
mov
push
jb
cltd
and
cwtl
dec
xchg
test
mov
dec
repz
adc
rolb
fwait
sub
sbb
xor
dec
fstps
dec
lretw
and
push
jo
sub
hlt
pop
sahf
add
push
cmp
into
xchg
jl
lds
mov
pusha
cmp
inc
and
rolb
mov
insb
or
mov
inc
mov
or
or
insb
xor
sbb
stc
jbe
scas
inc
mov
cmc
arpl
ds
inc
pop
stos
mov
mov
bound
mov
ret
sbb
testl
sarl
sbb
sbb
loope
xor
pop
shll
ljmp
and
ljmp
xor
jecxz
mov
aad
call
imul
out
loopne
fdivs
xchg
pusha
push
repz
jg
popa
clc
testl
cmp
adc
sub
bound
call
and
mov
imul
xchg
cmp
sub
xor
adc
sbb
push
xchg
dec
dec
sub
in
mov
and
dec
and
loopne
fs
inc
inc
outsl
arpl
cmp
ljmp
push
rcll
pop
jns
cmp
int
pop
les
lock
jb
cmc
xor
inc
ljmp
cmp
mov
sahf
and
lcall
pop
int
das
mov
enter
fmull
push
mov
dec
dec
arpl
xlat
dec
aas
imul
adcb
cmp
or
add
mov
stos
adc
push
mov
je
gs
inc
pop
bound
jb
adc
inc
xor
pop
nop
and
jbe
mov
loope
push
lds
cmp
int3
xchg
push
je
sub
aam
jg
call
mov
xor
dec
je
pop
out
or
lret
test
mov
xor
das
rol
mov
mov
jmp
push
fcoms
jne
inc
lods
adc
or
cmp
pop
add
push
pop
das
push
push
mov
cmpsl
fstl
mov
push
xchg
inc
or
aaa
xchg
mov
shl
fsubrs
dec
lret
jle
sub
pop
aas
jo
mov
ret
mov
jb
leave
andl
adc
inc
jae
out
and
stos
cli
cmp
ljmp
sub
mov
or
rolb
mov
das
jl
ja
stos
sub
outsl
idivl
repz
sub
rolb
popf
cmp
pop
add
int3
cmp
mov
imul
outsb
and
mov
sbb
shrb
xor
hlt
mov
push
adc
imul
and
scas
rclb
xchg
mov
push
cmp
ljmp
or
test
xchg
xor
sbb
lds
inc
cwtl
dec
adc
adc
cmp
shrb
jge
cmp
pushf
push
push
and
aas
wbinvd
aad
cs
es
inc
out
cmpb
cmp
add
pop
sbb
sub
das
inc
lcall
xor
fwait
cli
test
std
and
inc
shlb
rorb
mov
xchg
xchg
and
sub
dec
or
cwtl
dec
cmp
call
popf
inc
mov
sbb
das
mov
cmp
dec
push
xor
pop
fmuls
ljmp
mov
pop
dec
pushf
outsb
loope
mov
push
mov
in
test
mov
dec
jp
or
ss
sarb
movsb
pushf
arpl
dec
sbb
mov
inc
aas
fsts
mov
aad
pop
cli
mov
add
jmp
sub
sbb
or
mov
das
or
scas
fadds
cmp
pushf
lahf
xchg
ss
outsl
add
dec
div
xchg
inc
fdivrp
dec
fnstcw
out
mov
dec
dec
out
sbb
mov
lods
xchg
xchg
push
repz
cwtl
ljmp
xor
out
add
lds
push
jbe
adc
push
int
push
fucom
jg
dec
xchg
icebp
pop
test
mov
repz
jmp
les
xchg
mov
hlt
push
jbe
adc
mov
lret
frstpm(287
js
inc
neg
dec
pop
jg
inc
jo
mov
ljmp
cmp
push
imul
jb
loopne,pt
xchg
adc
cmp
movsl
jns
filds
aad
pop
and
std
fmull
jg
pop
movsl
xor
or
fistps
std
cmovbe
cmp
ljmp
cmp
mov
repnz
push
push
in
jge
call
fdivrs
dec
pushf
hlt
out
aam
inc
dec
lds
insl
data16
leave
sbb
sbb
iret
push
xchg
adc
stos
enter
subb
mov
mov
mov
sti
mov
dec
insb
cmc
scas
jno
enter
jne
xchg
outsl
ret
outsl
clc
ss
or
loope
js
xchg
stos
cmp
test
aaa
subl
inc
insl
or
add
in
ljmp
popf
sbb
in
lahf
nop
adc
hlt
pop
dec
sbb
jp
movsb
fidivl
mov
mov
dec
pop
jle
ficomps
pop
shr
loope
or
pop
or
sar
push
fidivrs
arpl
jne
pushf
int3
sub
pusha
push
gs
in
jmp
scas
insl
rolb
and
cmp
daa
xor
inc
jne
lahf
neg
add
add
aad
repz
dec
stos
push
sbb
fnstenv
xchg
push
push
mov
ret
sbb
nop
sti
insl
sti
jle
jge
scas
cs
xor
outsl
mov
and
je
in
push
sti
das
fidivs
mov
in
and
add
jae
movsl
sti
bound
stos
cmp
lods
mov
mov
cmpl
jns
loop
dec
pushf
nop
cld
ds
push
fistl
in
sbb
or
push
je
cltd
pop
or
or
aas
in
data16
xor
add
pusha
inc
pusha
xor
and
xlat
dec
js
xchg
cmp
and
push
push
cmp
adc
mov
sub
mov
fidivl
ja
mov
and
jg
scas
mov
sbb
cmp
and
outsb
fbstp
inc
ret
adc
adcl
sub
inc
push
cmp
pusha
mov
mov
jno
mov
jo
sbb
cmp
lcall
arpl
add
out
sub
dec
xor
fs
dec
mov
push
xchg
imul
shrb
ja
adc
sub
dec
push
rol
cmc
pop
cmpsl
xorb
and
sbb
push
or
push
sti
subl
adc
jns
lds
mov
jl
push
lret
xor
test
cmp
fsubs
mov
push
in
mov
xor
lret
mov
lcall
fwait
push
pop
loop
in
xor
movsb
push
pop
add
aad
nop
sbb
mov
lret
sub
shrl
push
cmp
jecxz
mov
cmpsb
sbbl
sub
dec
xchg
sbb
mov
pop
sbbl
pop
out
xlat
push
lock
push
or
jne
sub
mov
gs
and
out
adc
cwtl
lret
cmpsb
data16
das
lret
aam
sarb
push
jg
cmpsb
push
push
addr16
icebp
pop
js
cwtl
iret
gs
mov
pop
sbb
add
dec
pop
shll
addr16
repnz
bound
test
aam
inc
orl
cwtl
into
add
das
inc
push
sub
mov
adc
xchg
or
lret
fwait
hlt
js
dec
xor
cmpb
sbb
int
repnz
xchg
xor
das
mov
mulw
push
push
incl
test
cmp
aam
dec
in
or
loope
push
dec
push
test
aaa
arpl
add
adc
fldenv
jb
lret
fs
inc
ss
mov
and
incl
jbe
xchg
fs
and
out
mov
lret
enter
mov
into
sahf
mov
je
mov
arpl
ja
adc
lods
fsts
mov
out
in
pop
cmp
adc
loop
jno
lds
rcr
mov
dec
mov
mov
or
cmp
repz
adc
addr16
xor
ds
or
xchg
and
and
mov
int
out
add
enter
nop
sbb
jno
insl
xor
adc
js
bound
xchg
mov
xchg
repz
xchg
fmull
iret
dec
fildl
sub
ficompl
pop
adc
xchg
pop
xchg
stos
in
sbb
or
mov
fs
mov
movsb
mov
mov
mov
arpl
lea
or
inc
push
push
stc
cld
add
jae
sub
insl
xchg
inc
xchg
pop
clc
xchg
xor
mov
push
rcrl
adc
sub
mov
scas
mov
movsl
ljmp
int3
out
out
jno
xlat
test
mov
lock
les
push
fisubrs
lods
sbb
call
jb
in
sbb
mov
shr
mov
pop
push
adc
or
pop
fstpt
es
fwait
leave
jmp
repnz
xchg
dec
jo
xchg
mov
aas
fsub
pop
pop
in
clc
mov
fidivrs
jle
pusha
fs
rolb
or
pusha
jg
inc
cmp
lahf
int
sbb
icebp
xor
fldcw
lahf
xchg
inc
dec
and
mov
cli
addr16
sub
push
movsl
mov
imulb
fsubrl
xor
sbb
gs
mov
mov
dec
pop
jecxz
fisubs
adc
cs
mov
fidivs
mov
in
inc
je
out
repz
jne
push
adc
xchg
xor
movsl
mov
xchg
int3
xor
std
xchg
cmp
rcrl
int3
movsl
fildl
pop
aam
xchg
jmp
and
les
mov
sub
xchg
sub
es
outsb
dec
lods
sub
lret
xchg
int3
adc
mov
popa
aaa
insl
lods
hlt
push
add
cmp
mov
jae
lahf
mov
mov
inc
into
push
leave
in
mov
je
push
sbb
scas
sub
sub
cmp
fs
les
call
das
scas
cmp
mov
or
pop
call
mov
dec
out
mov
outsb
xor
mov
mov
jmp
jns
xor
iret
repnz
test
rorb
imul
daa
insl
pop
jo
add
xor
lcall
enter
cmp
sbb
loopne
sub
rorl
sbb
xchg
pop
popf
adc
add
enter
xor
xor
out
inc
sub
inc
jae
mov
lret
ljmp
mov
sbb
fildll
sub
cmpsb
and
mov
push
lret
xchg
movsb
dec
push
add
leave
cmp
or
scas
jl
movsb
out
repnz
imull
dec
ret
aas
adc
aas
pop
int
mov
out
ljmp
out
fsubrs
cmp
in
push
ss
mov
jnp
dec
fistpl
jp
andl
push
popl
dec
jae
or
test
sbb
push
stos
lret
out
loopne
sbb
sbb
dec
andl
nop
mov
not
cmp
mov
fs
lret
adc
mov
fdivs
mov
xor
xor
and
jg
aas
xor
jb
loopne
sub
ret
mov
pop
add
mov
or
imul
ds
xor
daa
or
and
jns
sbb
mov
fcomps
mov
orl
lea
test
jl
js
in
and
push
jnp
stos
push
movsb
stos
pop
dec
bound
pop
pop
stos
jne
lahf
mov
add
mov
icebp
xlat
ret
mov
subl
popa
dec
adc
and
insl
mov
push
pop
movsl
xor
mov
loopne
shll
out
jg
cli
dec
sahf
xor
xchg
fiaddl
cs
jle
popa
inc
inc
add
ja
js
fbld
std
add
mov
shll
ror
inc
pop
xchg
jo
test
and
xorl
sbb
stos
sbb
fsubrp
or
mov
shll
aas
adcl
aad
cmp
stc
or
test
jnp
add
test
leave
cmp
mov
inc
adc
dec
outsl
cmc
loopne
stos
fsub
mov
mov
and
adc
rcr
scas
jne
xchg
ja
push
ja
xlat
pop
stc
in
mov
lret
xor
orb
jg
scas
pop
push
push
mov
in
fsin
wrmsr
dec
mov
cmp
inc
jne
call
and
mov
mov
inc
xchg
push
testb
je
sub
sbb
xchg
sbb
mov
cmp
gs
dec
pop
arpl
push
scas
jnp
mov
push
xor
jle
adc
jmp
xlat
cmc
jp
cmp
loopne
xchg
pushf
push
pop
outsb
mov
inc
jns
rol
mov
adc
jne
iret
jmp
out
mov
and
shlb
xor
jbe
sub
and
adc
out
xchg
addr16
lods
mov
jp
std
fdiv
nop
rcrb
daa
aad
ljmp
sub
repnz
cmpl
pop
stos
inc
scas
or
inc
test
fmull
pop
inc
pop
cmp
xchg
mov
mov
aaa
outsl
clc
mov
call
inc
jo
sub
mov
aam
rorl
push
sub
add
aad
cmp
mov
jns
xchg
pop
fxch
push
jg
outsl
jmp
mov
sahf
pop
shl
dec
popa
jo
or
ret
fxch
push
nop
cmc
xchg
push
outsl
jno
sahf
insb
stos
pop
ds
cmp
jecxz
add
loope,pt
fs
iret
add
add
fsubr
iret
sbb
aas
xor
dec
adc
mov
inc
sub
subl
inc
and
mov
push
pop
push
pusha
or
jns
adc
scas
icebp
jge
leave
or
lcall
jmp
dec
sbb
sub
add
movsl
das
sti
fstpl
aas
pop
xchg
in
rcl
fidivrs
jge
out
notl
jnp
popf
imull
and
xchg
or
mov
xor
stc
lods
sbb
jae
insl
mov
mov
pop
or
push
fsts
orb
add
pop
pusha
jnp
adc
adc
enter
lea
pop
mov
test
fldl
dec
jp
jb
lods
or
out
inc
subb
mov
mov
jae
into
mov
fsubl
stos
movsb
data16
out
jne
jle
push
clc
add
sarb
adc
and
cmp
add
mov
mov
xchg
stos
ds
pop
fdivs
xchg
dec
adc
sarl
icebp
and
scas
mov
jmp
rorb
adc
jl
jno
dec
nop
cmp
pop
jg
jmp
push
sbbl
leave
fisubrl
lahf
sbb
ss
loope
aaa
ss
popa
mov
jmp
jp
popa
mov
arpl
dec
sti
dec
push
arpl
idivb
sbb
xchg
sub
push
adc
push
and
lods
aam
xor
loopne
call
adc
pop
jno
inc
popa
lret
sub
xchg
adc
push
mov
xchg
and
dec
jo
xchg
hlt
hlt
inc
loop
les
jecxz
mov
jg
ljmp
jge
mov
js
mov
or
or
in
cmp
sub
jmp
sub
pop
call
repz
out
or
sub
cli
dec
test
jae
loopne
popa
sbb
fmuls
cmc
and
movsl
dec
xor
lret
pop
cwtl
lea
push
mov
loop
pop
sbb
ficomps
stos
rcrl
xchg
sub
popf
scas
sub
cmp
lret
and
jno
adc
and
out
clc
ja
mov
inc
shll
test
test
push
xor
das
jg
cmp
mov
or
pop
fidivs
add
dec
push
jae
and
cmp
mov
sbb
test
insb
xchg
icebp
nop
lea
cld
inc
lock
cmpsl
sub
dec
jno
arpl
fwait
js
mov
in
xchg
inc
out
shrl
das
and
add
pop
bound
inc
cmp
ja
adcl
lahf
fxtract
fbld
in
mov
mov
hlt
pop
movsb
out
adc
jae
mov
daa
mov
adc
pop
fisubl
push
ds
out
es
or
inc
insb
mov
std
movsb
adc
or
inc
cmp
or
shr
and
fcoms
push
jae
cld
pop
or
lahf
jecxz
jae
je
adc
mov
cmp
push
adc
push
mov
outsb
es
addl
repz
lret
add
mov
sub
cli
xchg
cmp
leave
and
sbb
jns
ja
or
jo
mov
imul
subl
sti
or
inc
bound
jl
push
insl
shrl
pop
and
sarl
cld
pop
clc
lret
mov
push
fnstenv
repnz
addr16
cmp
ss
gs
adc
dec
imul
inc
xchg
dec
push
insl
xlat
mov
sbb
or
int
sub
outsl
jmp
out
aam
cwtl
test
popa
xor
push
sub
sbb
inc
das
mov
imul
xchg
lock
testb
cld
lcall
out
pop
notl
sbb
mov
stc
pop
mov
cltd
mov
dec
mov
mov
scas
dec
lahf
into
xlat
cmovnp
mov
flds
mov
scas
push
jnp
or
mov
inc
mov
xchg
add
jo
fisttpll
inc
and
jno
inc
pop
scas
jl
iret
cmp
bound
pop
mov
jge
in
inc
jg
cmpsl
xchg
inc
mov
mov
pop
movsl
and
cli
jbe
adc
and
push
dec
mov
xor
push
dec
cltd
mov
mov
mov
jbe
mov
aam
icebp
xchg
fbstp
adc
push
adc
mov
cmpsb
stos
outsl
call
cli
cltd
les
cmp
add
fildl
adc
sbb
cmp
add
repnz
cmpsl
sbb
out
jns
xor
cmp
or
cmpb
inc
sbb
test
cmp
in
jne
ja
jge
popa
mov
cmpsb
pop
fnsave
loope
sbb
inc
addr16
inc
pop
inc
xchg
push
out
mov
add
jecxz
cmc
mov
lock
aad
scas
out
out
mov
sbb
add
mov
filds
jno
jae
xor
dec
adcb
lea
lock
outsl
cmpsb
pusha
fs
pop
push
xchg
arpl
hlt
cmpsl
xchg
repz
add
in
stc
sbb
dec
jns
jge
mov
mov
xor
imul
jecxz
dec
lcall
sbb
adcl
loope
pop
pop
mov
jecxz
sbb
cmpsb
dec
cmova
push
sbb
lcall
incl
mov
push
pop
fldt
jp
in
mov
fucomp
adc
pop
jecxz
aas
xchg
stos
movsl
cmpsb
or
xchg
pop
mov
xchg
cmp
rcrb
stc
movsb
xchg
dec
mov
pushl
pop
jmp
ret
ret
lods
daa
mov
cmp
mov
ja
mov
dec
das
or
fstps
sbb
jmp
dec
cmc
ret
fcoms
pop
pmaxsw
das
sbb
stos
xchg
mov
dec
inc
popf
outsl
mov
dec
fldenv
into
ret
dec
jle
jae
sub
out
shrb
sub
loopne
cmp
out
push
push
mov
sub
dec
das
cs
mov
push
sub
cwtl
sbbl
cmp
mov
push
sub
xchg
shl
je
inc
adc
scas
mov
bound
jge
scas
or
sbb
push
ret
cmp
jno
testl
mov
xor
in
sbb
pop
mov
pop
push
hlt
roll
xor
gs
adc
cs
das
dec
pushf
lret
mov
add
scas
pop
or
lret
cmc
je
cmp
inc
jb
or
aas
popa
xchg
subl
mov
mov
cmp
and
nop
sarl
sbb
jo
jnp
push
pop
movsl
add
ljmp
into
pop
outsb
mov
pusha
shrb
xchg
iret
idiv
push
jecxz
jp
inc
push
pop
notb
pop
xor
dec
stc
icebp
inc
loope
outsl
mov
push
fcompp
imul
insb
xchg
popf
testb
lcall
jae
pop
or
out
xchg
cld
adc
pop
inc
inc
repz
pop
mov
jne
in
adc
out
std
mov
and
or
pushf
out
and
shlb
dec
in
je
mov
int
push
jnp
call
push
sub
and
imul
hlt
test
add
jb
dec
pop
xchg
out
xor
mov
repnz
jae
outsl
aam
hlt
pop
mov
ja,pt
mov
and
lea
dec
daa
mov
mov
stos
mov
jl
fstpl
clc
aaa
cmp
and
movsl
jge
sbb
pop
push
gs
hlt
adc
js
pop
faddl
lods
or
xchg
jg
aas
pop
sub
mov
out
or
js
push
out
in
xchg
fldt
cwtl
mov
adc
ds
enter
bound
push
jmp
loopne
pop
pop
and
cli
mov
sbbb
push
push
xor
adc
jne
iret
mov
and
lods
sub
int
test
cmpsb
and
push
and
ljmp
stos
jle
mov
or
jp
or
sub
test
and
repnz
loopne
daa
sbb
repnz
mov
jg
loop
cmp
sarl
stos
or
repnz
je
mov
or
xchg
add
adc
mov
push
lahf
mov
pop
pop
out
cwtl
icebp
lret
mov
cmpsl
repz
mov
or
negb
mov
rcl
mov
cmp
inc
ljmp
push
push
xchg
enter
inc
push
sti
sti
fistps
in
dec
xchg
in
fldcw
cmpsl
popa
leave
mov
in
mov
ret
cmc
scas
cmc
and
cmp
cli
mov
mov
add
dec
roll
xchg
ss
dec
movsb
or
cmc
pop
rol
lods
inc
adc
in
mov
dec
mov
mov
add
pop
hlt
cmpsl
mov
out
and
aaa
dec
add
mov
jbe
inc
std
cmpsb
outsl
push
mov
lods
adc
ret
mov
dec
cli
push
xchg
jp
ror
sti
push
mov
push
out
inc
shlb
cmpsl
enter
out
decl
jmp
test
xor
jbe
stos
out
pop
jns
cld
dec
std
imul
xor
in
xchg
xor
lahf
outsl
add
nop
in
inc
sub
loopne
mov
or
in
sub
fsts
pop
push
daa
push
loopne
mov
push
aas
fildll
or
cmpsb
cmpsl
lds
std
imul
add
mov
dec
push
sub
or
inc
pusha
pop
std
movsl
subb
leave
les
out
sub
lret
gs
mov
pop
test
push
jmp
test
aam
xchg
inc
adcl
jg
dec
jns
call
std
test
subb
xchg
leave
scas
fwait
pushf
cmp
jmp
idivb
pop
mov
lock
outsl
adc
add
loop
neg
dec
ljmp
pop
fists
ficoml
es
cmpb
dec
int
dec
icebp
mov
mov
popa
pusha
mov
cmpsb
rolb
jnp
xlat
es
and
xchg
adc
cvtps2pd
enter
jp
pop
xchg
ss
mov
xchg
mov
mov
push
dec
sbb
dec
cmp
xor
fsubs
mov
sbb
shld
out
xchg
push
jle
lods
icebp
inc
rep
cli
mov
mov
subb
loop
xchg
sub
xchg
cmp
xchg
imulb
divb
mov
xchg
mov
or
add
pusha
pop
mov
es
pop
pop
sub
mov
or
nop
xlat
daa
rclb
sbbl
pop
and
sbb
out
dec
cmpsl
imul
jle
paddb
pop
jno
repnz
sub
ret
aas
cmp
ljmp
pop
xor
dec
sbbl
sub
out
mov
push
jmp
xor
hlt
xlat
push
clc
sub
pop
mov
mov
insb
ret
xchg
push
aas
pop
sbb
sub
lea
push
hlt
xchg
idivl
cmp
pop
std
out
cmp
cmp
loopne
jae
in
mov
inc
gs
mov
fldcw
mov
adc
add
cmp
pop
divps
mov
sbb
push
and
jb
cmc
sub
das
jae
es
add
pop
sbb
jns
aas
jp
shll
xor
movsl
jp
ds
adc
outsl
out
mov
sbb
adc
cld
lds
int3
lods
adc
jle
leave
jl
lods
mov
ret
repz
dec
and
shl
xor
das
push
imul
sub
aaa
mov
shll
add
sti
cmp
std
xor
jne
outsl
loopne
cmp
je
dec
cmp
imull
sub
pop
and
push
leave
ja
scas
out
int
loopne
push
xchg
inc
mov
stos
test
insb
jns
adc
jecxz
sub
mov
push
jge
cmp
cmp
test
jae
sub
lcall
in
test
push
popf
jne
lret
dec
movsl
scas
push
sub
xchg
inc
in
push
loope
pop
mov
add
in
fwait
add
xlat
or
mov
xchg
fcompl
ljmp
adc
and
fmulp
or
outsl
lahf
inc
dec
mov
mov
test
into
dec
call
mov
stos
mov
movsb
pop
ja
add
rclb
scas
insb
cmp
sbb
outsb
jle
push
pop
adc
and
cmp
cmpsb
mov
mov
nop
cmp
inc
mov
cmp
mov
push
cmp
dec
mov
cld
fsubrs
test
sbb
dec
pop
push
pop
jne
stos
mov
sub
jbe
mov
scas
in
sbb
adc
ficomps
inc
icebp
ja
das
cmp
cmpsb
cmpsl
jno
test
jb
sarb
mov
rclb
cltd
xchg
cmpsb
add
lahf
push
fsubrs
in
mov
dec
xor
or
push
adc
fcomps
lock
adc
aaa
insl
mov
ret
je
std
and
push
outsb
popa
push
fisubl
pop
cmp
push
lods
cmp
adc
lods
movsl
out
cmp
bound
sub
in
mov
mov
or
jno
loopne
into
pop
addr16
aaa
into
clc
loop
ret
adc
jb
mov
cltd
sub
mov
dec
dec
loope
cwtl
out
iret
aaa
push
sub
xchg
inc
pop
pop
sbb
rorl
test
sub
pop
movsl
dec
push
adc
mov
shl
lcall
and
rolb
sarb
lcall
add
hlt
dec
xor
aam
std
loopne
sti
add
jge
movsb
mov
aam
xor
dec
das
neg
gs
mov
inc
xor
fdivs
addr16
stos
fsubrl
in
jne
jo
mov
out
dec
arpl
int
cmpsl
pop
xor
jmp
in
ljmp
daa
and
repnz
movsb
inc
sbb
jl
adc
aad
cmp
jae
sub
ss
adc
mov
inc
add
movb
loop
lret
jae
pop
pop
mov
xchg
sub
adc
sub
xlat
imul
inc
xchg
js
in
negb
cmp
jmp
nop
ret
sbb
daa
dec
popa
and
std
push
xor
insl
pop
sbb
push
addb
and
cmpsb
mov
xlat
scas
push
xor
add
imul
lea
ljmp
mov
jo
push
mov
jns
inc
shll
pop
mov
mov
test
inc
loop
sbb
dec
and
loop
mov
add
mov
mov
fbld
dec
inc
ljmp
lret
inc
inc
sahf
in
push
add
mov
stos
sbb
push
js
xor
push
rorl
stc
daa
aad
cmp
loopne
out
sbb
das
fidivrl
dec
push
push
push
inc
sub
aas
push
cld
scas
push
clc
adc
jne
pop
sub
enter
mov
mov
pop
mov
push
pushf
test
xor
aas
dec
into
or
sub
lods
and
add
mov
or
std
ja
cs
dec
xor
pusha
pop
mov
test
mov
sbb
lock
fiadds
xchg
mov
daa
enter
sub
push
add
jno
sub
cwtl
arpl
mov
jns
aad
fprem1
mov
inc
mov
xchg
mov
fs
mov
adc
leave
arpl
or
out
sbb
lret
dec
xor
mov
rcr
mov
cmp
xchg
pushf
leave
cmp
adc
and
and
cmp
mov
aas
pusha
lock
jnp
sub
in
sbb
dec
fdivrl
out
lock
repz
push
jo
addl
sub
mov
imul
push
mov
addr16
fsubl
stos
lcall
dec
sub
add
sub
push
mov
rorl
and
cmpsl
iret
sar
rcll
xchg
dec
push
fcom
scas
lret
out
imul
mov
roll
cmp
mov
jns
add
movsl
xchg
stc
fildll
dec
out
lods
je
lods
push
sbb
cmp
les
clc
mov
xor
push
inc
pop
cmpsl
out
or
dec
jne
add
movl
push
dec
xchg
add
lea
lret
lods
mov
and
stos
mov
jp
scas
scas
jp
stos
sub
xchg
imul
testb
or
cld
xchg
xlat
cmp
or
cmpsb
movsl
enter
fcmovnu
push
xchg
outsb
pop
pusha
mov
pop
or
lock
sbb
mov
fimuls
cs
add
sti
pop
sub
push
xor
test
and
lret
popa
std
cmp
je
cs
mov
into
jno
shlb
test
push
sub
fadds
fs
sahf
out
stc
xor
loop
lds
mov
or
outsb
ljmp
adc
cli
jecxz
or
xchg
data16
dec
movsl
mov
clc
adc
adc
mov
inc
ss
push
mov
pop
dec
popf
mov
push
push
cmp
sbb
repnz
adc
cmp
out
pop
std
addl
clc
test
push
fildl
pop
pop
arpl
inc
pop
divl
sbb
popa
addb
mov
adc
xchg
xchg
mov
cmp
mov
stos
mov
dec
adc
out
loopne
aam
insl
in
enter
adc
dec
mov
das
ss
pushf
mov
movsl
dec
ljmp
adc
pop
lret
pop
andl
cwtl
sti
mov
leave
cmc
rolb
sbb
lea
xchg
cmp
js
jl
mov
lods
notb
je
fsts
mov
push
shl
sarl
push
fs
pop
hlt
ret
xchg
fs
mov
sti
pop
mov
mov
xrelease
push
dec
fwait
and
out
inc
sub
add
jo
addl
clc
sbb
divps
cmp
xchg
pop
mov
inc
popf
sub
xchg
mov
fwait
into
push
pop
inc
decb
mov
add
xlat
movsb
inc
push
cltd
mov
mov
cltd
ret
xor
cltd
xchg
adc
pop
mov
pop
mov
xchg
fsubrl
inc
jl
imul
repz
xchg
ret
and
into
mov
xchg
inc
jne
test
shrl
pop
sahf
mov
add
fstpt
and
push
pushf
jecxz
pop
std
jbe
or
sbb
aaa
push
hlt
hlt
aad
push
jbe
lcall
add
inc
pop
frstor
xor
fcoms
lret
mov
out
call
cmpsl
cld
aaa
ret
jecxz
test
mov
mov
ja
sbb
mov
nop
idiv
push
mov
ds
jl
out
pop
popa
lret
add
xchg
jne
daa
insl
mov
loop
push
fldt
push
fistl
dec
inc
cmc
add
sbb
cmp
ja
inc
inc
frstor
scas
int
and
fcompl
fs
cld
sbb
jnp
scas
jle
pop
and
test
scas
xlat
xchg
add
imul
jns
jne
or
scas
shll
xor
loopne
mov
xchg
jns
hlt
adc
sub
mov
fsubrs
pop
xchg
in
cmc
loop
lock
cmp
mov
mov
sbb
in
mov
sub
inc
sub
into
test
cmp
jp
mov
shlb
sbb
popa
data16
pop
push
add
addl
dec
mov
addr16
andb
cltd
push
ljmp
dec
lods
fcomps
push
test
xchg
fwait
shrl
xor
stos
cmpsb
gs
insl
lret
pop
sub
sub
sbb
incb
push
ds
sub
mov
imul
sarb
adc
mov
mov
dec
sbb
and
dec
cmpl
daa
popa
xchg
pop
mov
dec
and
das
push
push
dec
sbb
arpl
hlt
adc
inc
pop
sub
mov
lods
mov
xchg
testl
or
ret
aad
loop
sbb
and
cmc
mull
mov
aas
push
and
or
xchg
orl
sub
mov
das
sti
fisubrl
dec
rcl
cwtl
negb
xchg
xor
aas
push
mov
xchg
call
call
jl
adc
out
in
jno
mov
cmp
pop
fisubrs
in
push
mov
pop
mov
pop
loop
daa
imul
or
cmp
inc
in
shrb
gs
push
and
mov
lock
mov
jl
cmp
std
fistps
repnz
xchg
das
mov
aad
std
fmuls
sub
push
push
push
loop
in
xchg
or
xchg
jno
insb
jae
fcoml
nop
nop
adc
addl
shr
arpl
adc
bound
lcall
inc
stos
test
cmc
cwtl
loope
repz
dec
addr16
mov
sbb
cli
sbb
mov
inc
mov
mov
add
addl
hlt
xchg
loopne
int3
test
jecxz
xlat
xor
daa
sub
daa
popa
xor
fimull
sbb
nop
jb
rcrb
or
imul
cmp
sbb
and
iret
add
jae
mov
aad
pop
in
sbb
cmp
cmp
mov
lret
nop
shl
pop
fsub
fisubs
inc
cwtl
jno
push
sbb
mov
adc
sbb
pop
adc
sub
sbb
cmp
rorb
mov
pop
imull
rep
pop
mov
mov
into
sub
repnz
adc
pusha
repnz
jae
mov
adc
jmp
pop
cmp
inc
loop
dec
or
xor
mov
sub
in
addr16
aad
push
lret
xor
dec
leave
cmp
mov
aad
push
int3
or
sti
lds
xchg
jae
xchg
sbb
fsubl
mov
add
mov
jge
and
adc
sbb
and
jbe
inc
jnp
push
test
aam
push
pop
cmp
mov
addr16
or
adc
insl
sbb
jns
and
mov
push
repnz
lahf
repnz
add
daa
shrl
jecxz
and
jae
dec
or
dec
dec
dec
mov
loop
cmp
lods
pop
mov
xchg
mov
mov
loope
test
cltd
shll
xchg
hlt
jne
mov
int3
mov
mov
or
or
dec
xchg
hlt
daa
test
in
mov
fcmovb
push
pop
movb
and
pop
sub
jp
xchg
lret
push
lea
xchg
push
lret
popf
jne
popf
and
das
ret
sbb
adcl
sub
inc
xor
sahf
mov
scas
sub
pushf
push
outsl
in
sar
push
imul
jg
std
data16
bound
jge
inc
xor
adc
pop
pop
xchg
test
cmp
and
sub
and
mov
insl
scas
inc
pop
les
dec
or
fmul
pusha
jb
popa
scas
test
jb
cmp
jbe
shlb
loop
loopne
arpl
out
and
jnp
or
cmp
pop
mov
push
cmp
cs
cwtl
sub
jbe
sub
loopne
or
test
mov
hlt
shll
in
arpl
repnz
bound
int3
aaa
int
cwtl
adc
imul
and
mov
js
test
movsl
mov
leave
cli
data16
jge
mov
cmp
mov
push
xor
fildll
sub
adc
fsts
pop
stos
sbb
xor
shlb
mov
shlb
mov
popa
js
icebp
in
sti
pop
jns
sub
xchg
push
iret
or
repz
jmp
clc
jecxz
lods
fdivrs
cs
popf
stos
pop
and
int
jp
dec
and
fs
dec
push
jne
mov
jl
adc
enter
push
andl
jmp
mov
dec
out
mov
pop
dec
outsb
cmp
cld
imul
out
pop
cmp
in
cltd
pop
and
xchg
int
stc
add
jbe
mov
push
dec
jns
sub
stos
into
leave
push
mov
fnstenv
ds
lcall
pop
sub
test
push
jbe
cmp
xchg
int3
xchg
jo
out
dec
jno
and
ret
sub
adc
jmp
adc
add
dec
dec
test
out
test
imul
addr16
pop
xchg
outsb
loopne
xor
or
mov
test
jg
into
ret
loopne
xor
xchg
lret
sbb
and
cmp
mov
loop
addb
sbb
outsb
sub
loop
rcrl
dec
repnz
rclb
mov
call
imull
mov
sbb
sbb
enter
inc
enter
mov
jecxz
push
dec
ljmp
pop
xchg
sub
in
fcmovu
jae
mov
inc
call
pop
rcl
shll
lock
and
xchg
insl
lret
subb
mov
notb
test
stos
mov
sub
daa
subb
pop
push
clc
and
bound
mov
fmulp
lret
or
lea
dec
sub
ret
fnstcw
hlt
mov
mov
mov
lods
dec
hlt
inc
pop
sub
mov
xchg
in
pop
xchg
fwait
lods
cmpsb
js
or
cmp
sub
push
jge
call
cmp
xchg
ret
stc
jmp
pop
sub
push
push
sub
lock
mov
fsubs
jmp
dec
loop
dec
cmpsb
add
cmp
add
xlat
jae
mov
add
add
xor
ds
insb
aam
add
scas
movsb
sub
lds
jle
sub
hlt
dec
pop
les
aas
lock
cld
push
push
mov
xlat
jbe
mov
adc
mov
loopne
mov
pushf
xor
mov
fsubp
out
xor
jae
mov
mov
cwtl
sahf
mov
fcoml
stos
mov
mov
dec
sub
in
mov
sarl
push
out
daa
ret
xorb
cmp
fnstsw
mov
xor
fcoms
hlt
lods
stos
mov
subl
jge
cmp
leave
mov
mov
push
xor
aad
pop
mov
or
imul
mov
push
out
sub
data16
pop
pop
xchg
arpl
fstl
add
roll
cmp
lods
mov
das
mov
push
push
sub
andl
xchg
mov
pusha
inc
jmp
mov
pop
mov
das
ja
into
xor
or
test
test
dec
jns
scas
push
fsub
ja
mov
dec
mov
mov
stos
rcr
or
fsubs
addr16
faddl
add
fwait
push
mov
ret
sbb
mov
imul
movsl
sbb
mov
cmp
mov
cmp
mov
mov
or
mov
pop
pop
push
add
and
sub
push
shlb
xchg
dec
cmp
ss
dec
inc
mov
and
das
dec
stos
in
mov
roll
lods
fistl
sbbb
arpl
push
sahf
iret
sbb
lahf
xchg
test
xor
sbb
repz
push
movsb
fidivl
mov
rcl
es
ja
call
jmp
mov
or
fildl
push
je
mul
adc
jl
shlb
push
push
clc
push
push
test
add
cwtl
sbb
dec
enter
adcb
xchg
or
and
popa
adc
jmp
xorb
cmpsl
cmp
stc
rcrl
fldt
mov
push
js
repnz
mov
adc
push
sub
push
jg
sti
cs
rcrl
int
leave
push
out
ret
sub
or
jl
jp
cmc
xlat
stc
fs
adc
sahf
inc
ds
xchg
inc
je
ret
and
ss
notb
ror
mov
lcall
movsl
stc
add
mov
inc
adc
cmp
sbb
mov
xlat
ds
or
sbb
ret
sub
sahf
mov
scas
out
fildl
cmp
cmp
aaa
jmp
adc
and
lcall
hlt
orb
shl
lret
and
push
push
fldt
push
xor
outsl
xor
lret
or
mov
mov
push
cmpsl
push
and
cltd
jp
jb
xchg
pop
out
scas
push
inc
int
ret
sbb
inc
mov
mov
inc
push
add
push
mov
sarb
push
int3
leave
jnp
loope
hlt
mov
mov
subl
and
les
cwtl
out
cwtl
enter
jle,pn
mov
push
xor
cmpsl
xor
sbb
movsb
hlt
incb
xchg
jno
mov
pop
or
push
dec
iret
aad
gs
xor
in
std
push
cmp
push
jns
popa
aad
cmovno
pop
xchg
loope
aam
cltd
xor
mov
jecxz
push
aam
mov
loope
mov
adc
adc
and
jmp
pop
icebp
inc
shufps
addl
out
and
xor
fs
push
pusha
or
lods
mov
fs
out
fildl
or
dec
jecxz
cmp
into
fmul
dec
pushf
cmpsb
jge
adc
inc
in
mov
cmpsl
outsl
adc
xor
inc
push
sub
int
je
mov
into
and
test
add
xor
sahf
push
cs
and
lcall
mov
sbb
mov
push
jnp
jne
and
xchg
adc
jns
popf
inc
mov
rclb
cli
lods
xchg
sub
xor
aaa
aas
adc
stos
pop
mov
decb
dec
and
fs
mov
lcall
stc
lret
dec
adc
inc
mov
ficomps
mov
ja
test
insl
cmp
pop
adc
movsl
pop
fists
ja
ljmp
aas
push
hlt
rcrb
in
dec
ds
push
jb
pop
or
cmp
and
mov
into
mov
stos
push
mov
test
pusha
popf
fadd
popa
popf
adc
call
mov
addl
outsb
iret
decw
adc
mov
jo
dec
cmp
rolb
gs
xor
call
ror
scas
add
icebp
jl
push
mov
aam
mov
sbb
push
jno
jbe
dec
mov
lahf
inc
loopne
inc
flds
xor
add
stos
sahf
inc
neg
cmp
enter
mov
or
add
jge
sbb
stos
cmpsb
stos
insl
push
icebp
movsb
mov
out
cld
mov
sbb
aam
mov
xor
outsb
push
jbe
jne
jb
scas
scas
cld
lods
mov
xlat
xor
aaa
insb
lock
add
inc
cmp
add
mov
pop
adc
daa
lds
icebp
jb
fdiv
or
pop
xor
mov
jnp
js
lret
test
jnp
or
push
bound
xorb
dec
addb
loop
and
testb
loopne
sbb
push
hlt
cmp
cmp
stos
out
xor
lret
cltd
rorb
dec
pushf
mov
mov
dec
mov
mov
xor
stc
int3
cmp
cmpsl
mov
xchg
push
sbb
mov
inc
xor
inc
and
mov
inc
fistps
popf
lods
mov
pop
xchg
in
mov
lret
or
cli
mov
mov
and
inc
sbb
jg
jge
repnz
mov
fbld
jecxz
mov
cmpsb
call
inc
dec
jp
and
repz
aam
fisttpll
and
dec
pop
lods
xchg
mov
sbb
aam
jle
lcall
movsl
or
loope
andb
sahf
xor
cld
lock
ja
mov
sub
sbb
adc
pop
cltd
add
vmread
cmp
sub
pop
mov
mov
xchg
andl
pop
sub
inc
dec
add
sbb
jae
leave
loope
jno
mov
jnp
pop
sub
jmp
incl
outsb
adc
testl
adc
sbb
pop
pop
cli
mov
jmp
loope
add
mov
mov
mov
in
int3
test
adc
push
shrb
inc
lret
enter
push
cmp
int3
repnz
push
inc
mov
out
pop
pop
push
into
mov
mov
js
mov
rcrl
xchg
jne
xchg
inc
cwtl
and
fnstenv
ss
ss
iret
imul
in
adc
inc
sub
lcall
dec
lods
and
rcrl
xor
adc
mov
and
int3
mov
addr16
xchg
jl
stos
adc
mov
mov
sub
loop
sbb
outsl
jle
push
call
jbe
outsl
clc
push
test
out
adc
frstor
or
dec
shll
inc
mov
mov
mov
scas
jle
clc
clc
divb
mov
sub
jb
cmpsb
jecxz
and
lds
mov
pop
cmp
push
dec
sbb
fisttps
mov
xor
fwait
cmc
push
jns
sbb
imul
lahf
xchg
xlat
push
fists
test
mov
out
jo
xor
mov
sahf
dec
pop
shrb
xchg
cmp
cmp
lret
dec
ss
leave
fimuls
xchg
lahf
and
pop
lods
test
hlt
adc
push
cwtl
and
jle
and
sub
cmpsb
ds
mov
xor
pop
movl
xorb
lods
fsts
push
aam
scas
daa
xor
ffreep
mov
pop
or
jl
push
addr16
inc
jbe
adc
es
mov
xlat
mov
adc
ficomps
adc
xor
sub
mov
cld
xchg
mov
cmc
pushf
fiaddl
jae
jmp
ja
ljmp
add
jge
pop
repz
inc
or
or
adc
inc
adc
fsubrl
aaa
mov
pop
jecxz
sbb
xor
jmp
sub
int
loop
cmpsw
out
sub
shlb
or
or
sbb
fisttps
pop
jle
cmc
add
enter
test
icebp
and
cli
inc
and
js
push
fadds
mov
jmp
test
filds
cmpsl
jo
add
cli
aad
mov
pop
push
call
enter
or
cmp
and
cmc
shr
xchg
mov
push
in
mov
add
adc
popa
xor
jae
faddl
aad
and
sbb
gs
mov
pop
test
mov
shrl
ds
and
mov
cmp
arpl
fwait
shlb
mov
push
sbb
xchg
fs
andl
lret
out
xor
or
push
out
mov
les
outsb
xchg
test
adc
out
popa
cmp
outsb
ret
dec
mov
scas
xor
cs
adc
cmp
push
dec
popf
and
rolb
out
sub
pusha
cmp
jns
in
sub
lret
mov
daa
int
mov
sub
pop
out
imul
cmp
jl
sar
popf
mov
lds
imul
movsl
bound
insl
and
dec
shll
dec
jmp
incb
xor
push
loope
xchg
mov
sbb
out
lret
adc
sti
into
jp
insl
cwtl
out
enter
dec
lea
adc
cli
and
faddp
xchg
dec
xchg
in
xchg
sahf
notl
mov
push
sarl
jnp
sub
fpatan
imul
mov
iret
sub
lahf
outsb
xchg
push
mov
sbb
mov
or
stc
jmp
inc
aas
fidivrs
insb
sti
push
lahf
add
gs
jecxz
cmc
cmpsl
inc
mov
lock
push
xchg
sarl
frstor
xor
and
sbbb
jle
filds
adc
sub
and
and
cmpsl
movsb
mov
test
add
in
dec
aad
inc
xchg
test
rcr
lea
push
inc
les
clc
push
into
ja
cli
jmp
jp
push
imul
xchg
stos
mov
lds
loopne
aas
aam
daa
lahf
mov
movsl
jne
repz
ljmp
imul
pusha
dec
add
sub
lds
js
xchg
xor
jmp
fisubrl
lods
cli
mov
fistpll
cld
loopne
test
or
imul
inc
adc
dec
mov
popa
xor
ret
shlb
push
xchg
bound
pop
add
inc
push
in
mov
test
cmp
movl
sub
xchg
sub
pop
ret
imul
push
in
ret
push
and
movsb
call
adc
mov
sub
mov
lods
push
or
add
cmp
pop
mov
cmp
ss
add
les
add
dec
ffreep
stc
mov
rorl
cmp
pop
dec
jmp
cltd
push
imul
sbb
stos
cmp
jg
or
sbb
ret
xor
pop
mov
pop
lea
xchg
jae
repz
cli
lea
mov
jnp
sub
pop
xor
mov
mov
dec
push
xor
push
or
imul
adc
jo
jge
adcl
pop
adc
sahf
or
std
mov
jg,pt
fwait
and
repnz
dec
dec
loopne
sub
inc
pushf
jo
data16
and
pop
shlb
sahf
push
fdivs
or
jl
icebp
repz
xor
adc
ret
push
dec
pusha
pop
adc
dec
mov
pop
adc
insl
mov
loope
mov
sahf
mov
cld
mov
jmp
repnz
aas
mov
scas
mov
scas
hlt
or
sarl
sub
addb
mov
rcll
cld
je
rcr
mov
inc
xchg
aaa
dec
arpl
shlb
mov
gs
insl
adc
and
ds
vpmacssdql
lods
arpl
sub
lods
jge
scas
cltd
lock
mov
sarl
in
faddl
dec
xchg
cli
aaa
imul
cwtl
icebp
fsubl
dec
xchg
cmp
push
xor
dec
add
inc
jb
testb
lds
in
in
imul
push
in
sbb
pop
mov
ss
or
and
jb
ret
or
xorb
hlt
in
mov
mov
shl
push
add
divl
pusha
sbb
shlb
xchg
dec
ds
push
push
and
push
pop
fs
fsubp
outsb
dec
jge
test
scas
nop
int3
test
ss
push
iret
push
jp
push
push
loope
fwait
push
mov
inc
xchg
pop
cmp
ja
sub
lahf
xchg
xchg
rorb
fxch
xchg
loope
xchg
jp
mov
lods
add
inc
fldcw
jns
fsubs
dec
movsl
into
int3
jp
mov
dec
xchg
lret
fdivl
mov
and
int
xor
mov
lcall
gs
sbb
lret
push
dec
dec
pusha
popf
sub
mull
sbb
fsubrs
pop
dec
push
add
mov
pop
adc
and
push
mov
nop
lock
xor
iret
lcall
fistpll
lret
lret
hlt
xchg
mov
pop
movsl
mov
outsl
sbb
xor
dec
fildll
in
mov
fisttpl
mov
or
cli
mov
leave
test
icebp
imul
movups
cmp
lret
sub
loopne
imul
add
push
andl
mov
xchg
fsubrp
fcmovnb
dec
mov
in
in
scas
cs
push
sbb
pop
add
mov
ds
adc
push
movsl
sub
cltd
xor
hlt
out
mov
jmp
sbb
or
rcl
cwtl
jp
mov
cmp
incb
aam
leave
nop
ljmp
test
lret
lods
pop
jle
push
xchg
dec
out
iret
out
sbb
adc
sub
sbb
sbb
pop
ret
sub
sbb
sub
dec
cmp
inc
mov
pop
ret
fprem1
add
insl
add
loop
mov
mov
das
cli
sub
sbb
jne
xorb
fwait
sub
sub
cmp
xor
test
insb
stos
mov
popf
push
and
rcrl
push
mov
lcall
mov
push
int
mov
nop
lods
ds
aad
mov
mov
sub
pop
mov
shl
in
jns
fisubl
test
push
sub
ss
ds
outsb
sbb
push
dec
jns
ds
mov
out
mov
sub
cld
enter
cmp
push
das
cmp
pusha
push
movsb
pop
mov
and
jmpw
bound
dec
jecxz
adc
push
push
push
cmp
repz
add
adc
jg
xor
add
popf
push
pop
mov
adc
aam
jb
cmp
mov
adc
aad
sbbl
loop
scas
pop
adc
rorl
in
mov
inc
call
bound
xorl
sbb
aam
and
shrl
inc
sti
mov
jno
adc
andl
jb
push
push
jbe
in
in
add
or
pop
dec
test
lea
andl
adc
jns
faddl
xchg
xorb
std
xor
enter
cmp
rorb
lds
out
stos
ret
pop
test
push
out
push
in
pop
xchg
mov
int
cltd
sti
push
push
pop
push
pop
int
dec
jne
stos
popa
movsl
pop
xlat
cmp
push
std
mov
adc
jne
clc
pop
xchg
cmp
push
push
aaa
pushf
push
xor
add
lods
loopne
xchg
and
ss
sbb
mov
sub
fiaddl
xor
lcall
pop
add
jnp
bnd
push
sub
andl
je
xchg
pushf
lock
push
movsl
fidivrs
xor
aas
iret
xchg
addb
xor
ficoml
in
mov
xor
mov
pop
or
rcll
jbe
cld
add
jmp
loopne
sub
sub
imul
mov
pop
push
mov
add
inc
mov
aad
pop
shr
movb
cs
filds
test
jo
movsb
mov
jno
fdivr
pop
sbb
sti
loope
mov
jno
out
or
xorl
mov
rorl
imul
push
testb
cmp
xchg
test
and
pop
es
js
nop
xchg
shlb
adc
xchg
aaa
xor
sub
and
jnp
movsb
rorl
jb
fsubr
pushf
out
sbb
mov
xlat
xor
dec
ret
and
add
mov
popa
push
out
inc
rcrb
mov
enter
adc
addr16
jnp
jo
adcb
sbb
std
lret
mov
int
xchg
fsubrs
xor
ret
mov
jle
fistpl
inc
and
pop
jl
and
and
insb
inc
cmp
pop
jl
adcl
sub
sub
fdiv
mov
push
repnz
lahf
shrb
adcl
push
sbb
loop
push
jne
int3
push
pop
in
inc
call
outsb
out
mov
test
addl
pop
jnp
mov
in
pop
clc
outsl
lret
sbb
clc
add
xor
fildl
gs
iret
pop
sbb
xor
inc
outsl
out
pop
pop
jno
cltd
mov
adc
mov
or
push
imul
negb
jge
cmp
adc
inc
lds
cmp
sahf
das
or
popa
repnz
mov
push
pop
popf
push
nop
push
xor
jne
jno
scas
jle
pop
pop
push
sbb
mov
loope
inc
js
sbb
int3
ret
movsb
iret
adc
xlat
jno
ljmp
cmp
jg
mov
jg
jecxz
nop
out
lea
inc
cmp
out
arpl
ret
mov
insb
cmp
xchg
aaa
jecxz
or
sbb
adc
push
sarl
shlb
fstps
paddusb
mov
fnstcw
mov
mov
popa
ret
cmp
cmp
ror
pop
test
sbb
rcll
and
mov
in
jl
or
ret
popa
jge
fwait
sbbl
shlb
inc
pop
cltd
cmpsb
aad
xor
pushf
mov
pop
cwtl
cmp
add
xor
arpl
dec
inc
cmp
sbbb
sbb
nop
imul
shlb
cmc
je
xor
test
fistpl
or
jo
jno
mov
ret
mov
xor
int3
sub
xlat
pop
cli
cmp
mov
add
push
cmc
jmp
dec
imul
mov
sub
in
or
loope
div
lret
inc
jle
cmpsl
aaa
or
cmpsb
xor
lret
mov
shlb
loope
push
jbe
loopne
lahf
pop
pop
leave
and
and
mov
sub
pop
mov
and
scas
out
mov
sbb
aaa
pop
push
scas
cli
mov
mov
lcall
sub
in
or
pop
scas
clc
or
dec
jb
bound
clc
je
sarb
cmc
int
mov
push
lds
ret
cmpsl
jo
adc
ret
cmp
mov
and
add
je
arpl
sbb
add
lcall
and
inc
lods
mov
pop
out
pusha
sbb
test
sbb
or
sti
pop
sahf
ja
jge
sbb
lds
and
sub
pop
dec
inc
sbb
das
aam
jp
add
insb
or
inc
cltd
xor
adc
lea
pushf
lods
ja
stc
mov
lods
filds
pop
jge
clc
inc
test
xchg
push
pop
call
fwait
iret
mov
xor
cli
hlt
sti
iret
push
pusha
dec
cmpsl
nop
das
jb
jne
cmp
jp
lds
mov
jmp
push
ds
gs
jnp
or
test
and
jbe
pop
cwtl
pushf
jae
xlat
xor
fdivs
bts
or
ljmp
pop
adc
cmp
sub
jno
xchg
jecxz
fdiv
insb
dec
test
mov
adc
aas
out
daa
mov
lret
xchg
mov
in
sbb
lea
js
mov
sbbl
add
dec
jle
mov
or
mov
call
jge
xor
jge
call
enter
sbb
xor
cld
xor
jp
mov
sub
rorb
aam
dec
push
out
pop
add
pop
movl
enter
pop
add
and
faddl
scas
popf
mov
fs
xchg
frstor
imul
and
sub
mov
cmp
xor
sbb
rorl
fsubrs
test
daa
loope
fwait
adcb
mov
jmp
sub
ds
mov
xchg
loop
xorl
xor
xchg
cltd
movsb
aas
fdivrl
sbb
inc
xor
pop
addr16
pop
pop
aaa
leave
mov
in
sti
pop
andb
adc
std
pushf
xchg
push
popa
pop
mov
mov
cltd
jb
das
mov
dec
pop
scas
mov
nop
movsl
xchg
jno
or
mov
lret
fldcw
jno
js
push
shr
inc
movntq
out
outsl
mov
in
ret
jno
cmp
insw
loope
pop
push
mov
daa
movsl
push
mov
xchg
ret
inc
jne
xchg
or
pop
jp
testb
in
dec
mull
les
jge
imul
jae
imul
insb
cmp
mov
sbb
adc
inc
mov
push
shl
hlt
push
in
xor
cmpsl
scas
jae
fadds
loop
jl
xchg
xor
mov
dec
jbe
test
clc
push
jnp
roll
scas
push
or
cld
dec
iret
insb
imul
adc
and
clc
pop
jp
sbb
sub
adc
dec
inc
mov
mov
adc
xchg
test
push
jo
mov
out
inc
jg
out
xlat
and
sub
bndstx
mov
inc
repnz
es
cli
pop
and
or
cmp
pop
jae
jl
mov
push
xor
fsubs
xor
jle
xor
cmp
in
xlat
nop
fcomi
inc
cmpb
jae
ss
pop
inc
jae
ret
jns
push
add
mov
adc
sahf
cmp
fidivrs
sub
cmp
inc
push
movsb
jmp
addl
fsubs
push
adc
clc
jl
xor
filds
ss
mov
cmp
in
sbbb
xchg
mov
adc
insb
andl
xchg
mov
mov
cmp
push
cmp
mov
sub
cmp
push
or
loopne
inc
rorb
pop
jo
lea
and
and
xchg
and
lds
dec
jnp
adc
cwtl
jg
inc
jnp
jo
sbb
adc
testl
test
aad
sub
push
sub
and
mov
adc
rorb
jb
in
xchg
sub
cmp
clc
call
mov
jo
push
mov
lcall
out
ds
mov
jnp
xchg
mov
cmc
mov
ds
ljmp
cmpsl
and
push
or
jo
mov
adc
push
adc
push
mov
push
outsl
repz
mov
sti
testl
fcomps
jnp
mov
cmc
xor
pop
into
jns
jmp
leave
cmp
dec
mov
std
fbstp
pop
jle
into
cmp
cmp
and
inc
pop
pusha
mov
mov
cmpsl
mov
xchg
mov
nop
std
add
in
fwait
aam
and
fisttpll
mov
clc
dec
dec
ljmp
mov
imul
adc
or
mov
mov
xchg
mov
pop
jbe
sub
clc
mov
mov
pusha
daa
outsb
push
mov
or
mov
mov
dec
sti
insb
call
dec
mov
sbbb
dec
sti
sub
lcall
out
mov
leave
mov
shrl
leave
fwait
bound
rclb
sub
mov
ss
cld
pop
in
adc
inc
adc
aad
cmp
sub
fucomi
jecxz
and
or
dec
je
pop
pushf
dec
cs
push
push
fs
jb
and
add
je
xor
hlt
fcomp
and
sub
pop
negb
test
cmpsw
mov
pop
cld
mov
into
mov
xchg
xor
or
pop
xchg
add
add
jns
dec
call
pop
xor
ret
mov
shll
add
pop
pusha
in
out
cmp
or
add
sbb
lods
lods
test
xor
les
and
fidivrl
jecxz
cmp
mov
mov
pushf
inc
imul
aad
push
mov
pop
ret
daa
mov
testl
outsl
pop
lods
jg
daa
repnz
adc
out
mov
sub
or
insb
inc
adc
test
lock
int3
shll
test
sbb
lods
add
out
add
fildll
loop
fdivs
stos
push
shlb
test
jp
cmp
fprem1
scas
sti
rcr
loope
and
mov
xchg
jbe
in
leave
mov
pusha
mov
xor
jg
inc
mov
push
dec
mov
push
dec
pop
xchg
loop
push
lcall
out
xor
dec
sarb
jbe
jno
add
cli
cmp
mov
arpl
lds
and
in
pop
sbb
push
aad
fcomps
or
bts
lcall
and
xchg
cmp
pop
leave
sbbl
sbb
dec
leave
test
call
leave
and
pop
jne
mov
xor
xchg
push
jge
xchg
jb
idivl
mov
lock
push
xchg
add
xchg
lods
jno
dec
movsb
pop
mov
and
mov
lret
jbe
xor
pop
adc
mov
aaa
ror
mov
outsl
xor
adc
aam
inc
inc
adc
ret
push
add
stc
test
movsl
mov
push
dec
stos
cmpb
out
lcall
out
loope
out
mov
pop
jae
xor
fldenv
inc
rcrb
and
out
mov
and
xor
inc
in
stos
dec
inc
negb
data16
jbe
rcr
lock
jne
dec
lcall
jae
leave
pop
fisttpl
hlt
dec
lods
fiaddl
mov
gs
adc
jg
mov
mov
mov
xchg
ret
pop
push
ret
js
push
xchg
lcall
jbe
fldcw
das
dec
aaa
mov
pop
push
xchg
and
mov
pop
cmp
sbb
dec
pop
shrb
add
and
test
aaa
dec
or
imul
fnstsw
loopne
jb
push
sub
dec
jmp
or
dec
in
insb
mov
repz
shrl
jne
test
mov
loop
aas
data16
push
lcall
into
sbb
push
mov
movsb
cmp
cmp
icebp
roll
iret
insl
movsl
mov
je
fdivs
dec
std
jns
inc
mov
adc
lods
rorb
std
adc
lods
pop
sub
push
lods
cmpsl
push
jecxz
lea
ret
pushf
dec
adc
jo
test
pop
mov
aam
icebp
cmp
dec
divb
scas
enter
jecxz
xor
sub
int
mov
push
pop
inc
inc
int3
stos
and
inc
pop
aad
lods
into
and
outsl
aam
je
pop
adc
dec
push
js
xchg
push
movsb
jg
jp
lcall
xchg
fcom
mov
into
adc
or
mov
add
xchg
scas
push
or
pop
and
xchg
adc
push
inc
aaa
xor
inc
add
sbb
jb
push
push
cwtl
and
sbb
popf
aas
adc
pop
aas
push
mov
add
dec
cwtl
xor
mov
cli
pop
les
xor
es
shl
mov
xor
out
cld
imul
xchg
hlt
or
lahf
mov
notb
adc
cltd
inc
fcmovne
lds
dec
fs
mov
hlt
aas
jb
mov
test
daa
bound
das
sbb
dec
or
xchg
lods
stc
notl
and
out
scas
fdivs
aam
sbb
aam
jmp
inc
add
cmpsb
out
addr16
in
lea
sbb
std
xchg
sbb
or
jle
aam
and
mov
std
rorl
aas
imul
orb
push
cmp
mov
fisttps
out
lret
xchg
pop
lea
cmp
add
ljmp
dec
sahf
dec
mov
shl
rcr
rcrb
push
mov
fbstp
xchg
es
mov
or
sti
data16
mov
stos
test
cwtl
or
stos
or
or
inc
xchg
fisttpll
dec
xlat
data16
scas
cmp
pop
ret
sub
fdivp
xchg
subb
mov
push
aam
pop
xor
pop
cwtl
pop
mov
repnz
nop
or
ret
cwtl
mov
fnstcw
jmp
int3
adc
sbb
xchg
dec
fsubrs
cld
mov
repnz
push
mov
data16
shr
mov
pop
popf
out
inc
imul
cld
cmp
pop
popa
mov
bound
into
and
imul
das
jno
mov
lahf
sub
push
sahf
fnsave
ja
adc
imul
sub
mov
scas
shlb
cmp
sbb
out
loope
movsl
dec
inc
das
test
into
shll
cmp
je
das
and
fsubl
cmp
scas
data16
insl
mov
xor
subb
add
pop
inc
or
jo
xchg
sti
sub
adc
cmp
mov
lahf
sub
out
sub
xor
pop
ja
jae
clc
fdivrs
cltd
dec
push
cltd
ljmp
xchg
out
xor
push
scas
sbb
imul
popa
cwtl
jp
bound
not
sub
cmpsb
je
cmp
sahf
bound
mov
and
sbb
test
addb
push
ret
xor
cltd
jecxz
add
adc
jb
dec
xor
pop
cmc
inc
sbb
jbe
mov
negl
insl
fs
test
repz
loop
push
push
mov
mov
jle
jp
add
imul
orb
dec
pop
sahf
and
js
iret
dec
xlat
call
jb
mov
stc
dec
xor
pop
out
mov
rcl
cltd
or
mov
xchg
arpl
cmp
add
jnp
gs
out
xchg
ss
or
lret
sbb
cmc
push
pop
and
xchg
jle
inc
loop
sbb
sub
mov
add
inc
dec
or
js
cmp
mov
cmc
xorb
xchg
mov
int
dec
loop
inc
divl
sub
adc
cmp
xor
push
fbld
or
and
int
mov
lret
inc
cmpsl
outsl
pop
rcrb
mov
cmp
mov
loop
pop
xor
test
pop
mov
mov
xor
cmc
das
jno
jmp
ret
push
jo
pop
xchg
lahf
add
mov
jl
pop
sbb
inc
enter
push
mov
add
sahf
je
push
movsl
out
icebp
xchg
daa
cmpb
mulb
popa
sub
cmp
cmc
aaa
lahf
outsb
imul
lock
or
aam
mov
rcrl
lahf
push
sahf
loop
icebp
jg
adc
pop
push
mov
jne
pop
fcoms
and
ds
addr16
cmp
lcall
xchg
dec
cmp
leave
xor
ds
and
xor
cmp
adcl
mov
inc
outsl
imul
scas
arpl
gs
xorl
xor
lods
cli
call
pop
pop
or
sbb
sar
aas
int3
or
xlat
orb
in
loop
scas
xchg
jne
or
nop
dec
push
out
jns
aas
pop
sub
dec
mov
andb
pop
rclb
mov
cmp
and
outsl
lret
and
push
ds
and
jle
cltd
ja
aam
fisubs
sbb
add
hlt
fidivl
or
setl
fidivs
clc
push
cwtl
out
mov
jmp
jp
ja
jns
inc
push
cmp
jne
ss
je
dec
and
or
lods
mov
jmp
movsb
imul
movsl
popa
orb
popa
push
int
das
xchg
cmp
dec
movsb
idiv
mov
bound
sub
imul
pusha
mov
cmpsl
xchg
out
mov
and
icebp
test
js
sqrtps
or
xlat
fiadds
lods
les
sbb
fisttps
mov
int
popa
xchg
and
es
dec
mov
xchg
dec
mov
cmc
das
jp
jl
ss
pop
imul
push
in
imul
inc
xchg
jg
xchg
push
xor
add
rol
pop
mov
fwait
and
and
les
repz
xchg
fidivrl
fsubrs
add
inc
fdivrp
xchg
sub
sbb
test
outsl
or
cwtl
sbb
clc
jl
mov
out
call
pushf
out
or
and
cmp
mov
test
jb
push
pop
fbstp
mov
dec
notb
fwait
xor
sbb
mov
add
ret
imulb
out
mov
in
mov
outsb
dec
aaa
push
inc
pusha
mov
test
sarb
call
test
out
xlat
sbb
xor
inc
movsl
add
mov
fcompl
popa
out
adc
nop
push
sub
fwait
mov
sahf
jle
pop
pop
jge
ret
test
in
dec
in
inc
cmp
push
add
inc
cmpsl
stc
enter
pop
aas
sub
xlat
xor
jecxz
ds
xchg
or
adc
mov
cmpsl
jnp
fstpl
mov
arpl
cmovne
sub
pop
inc
pop
inc
mov
scas
push
scas
hlt
pop
jge
fs
xor
inc
mov
dec
pop
adc
cmp
dec
int
or
pusha
imul
push
jmp
jmp
pushf
push
fidivs
or
andl
lahf
cmp
pop
jns
cmp
mov
sbb
repnz
inc
mov
jmp
iret
pop
mov
popa
divl
cmc
dec
add
mov
or
sub
cltd
cmp
loopne
inc
jb
cld
pop
shrb
adc
or
cmp
divl
lds
aad
das
sub
aas
mov
dec
add
jmp
lods
cmc
jns
add
push
clc
repz
repnz
in
fidivrl
out
ljmp
mov
push
cs
cld
mov
addr16
or
flds
sbb
test
sbb
imul
and
stos
pop
pop
fcoml
cmp
aam
outsl
fadds
mov
mov
leave
mov
xchg
jnp
nop
ret
lock
push
shrl
dec
addr16
mov
mov
push
xor
imul
out
loopne
shll
repnz
xor
xor
mov
imul
xor
les
push
rcr
nop
stos
repnz
aam
cwtl
or
inc
cwtl
ret
loop
in
stos
xchg
pop
add
adc
xor
bound
mov
notl
lahf
pop
aam
ss
dec
dec
or
in
aad
adc
sub
or
outsb
enter
hlt
fldpi
or
icebp
shl
jo
lea
cmp
loop
into
sub
xchg
in
in
ficompl
fdivl
cli
ss
pop
add
push
bound
add
loopne
mov
je
mov
pop
add
cs
fcomp
push
lahf
mov
shrb
xlat
push
in
xchg
idivb
cmp
push
gs
dec
jl
push
sbb
mov
mov
inc
add
pushf
adcl
fistpl
inc
lahf
cld
dec
stos
arpl
mov
and
mov
pusha
jne
push
insl
fxch
add
hlt
jno
ljmp
outsl
and
cmp
add
shl
add
mov
and
push
cmpl
dec
gs
mov
repnz
inc
notb
or
xor
jno
testl
mov
fwait
mov
std
push
test
fsubrp
adc
daa
xor
outsl
pop
mov
mov
roll
stos
dec
jns
sub
shrb
lds
or
inc
sti
aad
lods
dec
xor
imul
push
mov
dec
std
cs
aad
lea
lock
adc
jmp
cmp
scas
mov
stos
iret
arpl
inc
jbe
daa
add
inc
fs
mov
push
ss
or
fstpt
xchg
and
jg
adc
cmpb
dec
pop
insb
add
test
add
insl
mov
aaa
aad
es
idivl
dec
rorl
aam
popa
adc
lock
mov
push
arpl
in
psllw
cmp
sbb
pop
or
pop
pop
lahf
repnz
fisubrs
jge
cmpsl
add
xchg
sahf
pop
xor
loope
shl
mov
negl
jecxz
sbb
int3
xchg
mov
mov
ss
inc
das
mov
outsl
gs
orb
inc
leave
sub
pop
daa
cmc
aaa
cmpsl
aam
cs
inc
les
lea
adc
test
in
push
jmp
clc
xor
aas
mov
xor
jne
inc
xor
lods
mov
xor
dec
in
filds
sub
cmpsl
push
repz
ret
ds
push
mov
fs
test
sbb
sub
nop
cld
pop
test
xchg
mov
cmp
shrb
scas
cmp
push
icebp
sbb
fistl
lret
testl
insl
sbb
out
imul
rolb
jnp
loope
and
pop
cmp
bound
pusha
add
insb
mov
cmp
pop
mov
mov
pop
jb
and
mov
sti
xor
jmp
jo
mov
popf
bound
pop
pop
lret
out
out
pop
outsl
cmpsb
adc
insb
adcb
add
mov
mov
or
movsb
dec
push
inc
mov
in
addb
aad
cmpsl
cltd
add
mov
subl
add
scas
sbbb
lret
clc
out
mov
jmp
popf
inc
test
test
mov
push
xchg
pop
les
scas
aas
xor
and
mov
mov
mov
das
push
fwait
cwtl
ljmp
imul
sbb
scas
and
dec
clc
sbb
loop
sbb
or
rorb
xchg
loop
cmc
or
mov
jbe
cmc
call
dec
mov
dec
movsl
sub
es
sub
push
push
pop
fcoml
arpl
jl
adc
lods
in
sub
jmp
aaa
xchg
mov
scas
push
es
push
inc
sbb
leave
mov
mov
sub
mov
or
cmp
jo
imul
xchg
dec
xchg
mov
or
fildll
lcall
push
or
xchg
mov
fsubr
mov
loop
shlb
aaa
xchg
test
dec
fwait
and
fs
adc
sub
lret
mov
adc
daa
mov
mov
jbe
in
mov
mov
pop
lods
or
sub
mov
ljmp
push
sub
mov
xor
cmp
fistpl
push
xchg
adc
das
adc
sub
mov
sbb
sbb
cwtl
ja
cmp
and
mov
ss
or
outsl
ljmp
fimull
add
int3
loopne
adc
pop
test
adc
jle
jnp,pt
xor
inc
roll
fdivrl
clc
dec
jl
lret
ds
push
adc
in
bound
jae
lcall
inc
sbb
lods
cmpsl
outsb
ljmp
inc
ret
fdivs
jnp
cmp
inc
xor
shl
push
push
push
divl
sahf
mov
push
leave
jae
fildll
inc
repnz
xor
hlt
pop
sti
sub
sub
xor
adc
jno
mov
dec
cltd
xor
lcall
inc
neg
ds
sub
xor
bound
repz
add
fwait
loop
repz
xor
push
out
pop
jle
mov
xor
push
push
or
or
mov
adc
cmpsl
sahf
loopne
rcl
jns
shl
out
jno
stos
mov
or
dec
xchg
sbbb
rclb
subl
push
leave
jnp
es
push
or
testl
fmull
pushf
push
loopne
or
ret
pop
inc
add
cli
fmul
pop
js
movsb
add
mov
aam
cs
adc
and
mov
lahf
dec
mov
or
xlat
cmp
mov
dec
shl
lahf
xorl
mov
pop
hlt
nop
sbb
pusha
notb
xor
push
jno
xchg
or
pop
scas
shrb
movsl
xchg
lods
or
iret
sbb
xor
fstpl
aad
or
es
pop
xchg
adc
pop
call
test
mov
xor
outsb
ljmp
and
lret
mov
movsl
jo
lods
adc
negb
pop
push
and
out
ja
mov
push
gs
xchg
call
daa
dec
adc
stos
mov
loope
jp
daa
arpl
test
sti
push
add
push
out
insb
shrb
mov
dec
enter
out
inc
and
mov
push
cmpb
sub
out
mov
mov
dec
dec
and
sti
mov
mov
in
mov
pushl
mov
adc
clc
jne
inc
mov
arpl
push
jb
and
add
test
aad
out
push
aam
sub
push
lea
lods
xor
jne
xchg
popa
loopne
sbb
dec
adc
add
stos
repnz
outsl
out
add
push
jno
aad
mov
jbe
pop
or
data16
jecxz
inc
push
fstps
mov
mov
outsl
adc
add
and
push
jmp
mov
repnz
cmc
insl
inc
loopne
lods
mov
es
ss
inc
daa
lahf
cltd
pop
cmp
daa
jmp
push
nop
jp
xor
jne
pusha
sbb
sub
aas
pop
mov
mov
shll
mov
jno
and
pop
cmp
ret
jae
mov
cmpsl
or
fmul
add
cmpsb
sub
lods
add
dec
xor
sbbl
pop
cmp
stos
pop
dec
hlt
adc
inc
inc
shll
pop
inc
imul
dec
adc
push
jle
cli
out
cmp
ja
jp
xor
push
aam
jnp
inc
xor
cwtl
pop
int
pop
in
cmp
cmp
outsb
fwait
popf
mov
popf
and
cmp
xchg
test
mov
cmpsl
ja
leave
inc
out
mov
xor
ss
das
aaa
in
fimuls
not
jno
mov
stc
mov
lds
pop
dec
mov
into
sub
inc
scas
jge
push
pop
test
dec
cwtl
cmp
int
adc
mov
mov
fmull
xchg
pop
mov
rol
jo
xorb
and
xchg
iret
out
das
adc
cmp
add
es
or
js
add
pop
cmpsl
dec
cmp
clc
in
dec
xchg
push
and
and
cltd
jo
sbb
testb
scas
xchg
jnp
mov
movsl
fs
dec
push
inc
inc
xchg
rorl
pushl
lds
and
xchg
adc
and
dec
movb
insb
fwait
inc
test
loope
jmp
jns
cltd
out
int3
inc
and
pop
or
fistps
in
mov
mov
outsl
pop
bound
mov
add
dec
in
ds
aas
add
sbb
cmpsb
or
push
addb
mov
mov
test
xor
push
fwait
push
adc
aaa
mov
adc
div
pop
stos
sub
dec
test
rolb
jbe
int3
xchg
ds
xchg
xchg
lcall
sbb
stos
mov
pop
pushf
flds
mov
adc
fistl
jnp
lcall
outsb
ja
loope
scas
fdivrl
jns
xor
mov
mov
rclb
out
std
scas
aas
pop
mov
push
cmp
mov
sbb
xor
cmp
mov
sub
imul
lods
iret
add
and
cmp
mov
xchg
std
dec
xchg
cmp
sti
cmp
mov
cmp
sti
and
xor
mov
inc
rcl
inc
add
pop
daa
stos
in
jge
lods
xchg
out
test
int
ficoms
fsubl
sbb
ja
and
push
xlat
push
notb
mov
iret
add
movsl
pusha
ljmp
inc
cmp
cmp
popf
pop
pop
or
test
inc
pop
cltd
mov
pop
test
test
cmc
mov
adc
ret
xchg
or
aas
push
mov
sbb
and
sbb
ret
dec
mov
sub
mov
jl
icebp
or
xor
out
mov
popa
rclb
and
xor
mov
int3
inc
movsb
xor
call
mov
gs
addb
js
notl
push
popa
into
nop
out
jle
fstps
cs
push
and
outsl
lds
jb
xlat
sbb
cmp
cmpsb
das
sub
lcall
icebp
jecxz
push
lret
mul
inc
movsl
dec
stc
dec
and
cli
push
add
sbb
sar
or
or
xor
jno
daa
mov
lret
xchg
jmp
scas
fnstenv
sub
dec
dec
lahf
mov
sub
push
in
mov
or
cmp
movsl
dec
sbb
mov
ret
rcrl
idivb
mov
pusha
clc
addb
bound
push
lcall
add
in
adc
and
fcomi
lahf
mov
stos
xchg
cmc
int
jmpw
loopne
push
sahf
mov
in
xor
jl
inc
push
aas
popf
mov
mov
pop
sub
fisubs
test
mov
fsincos
pop
jns
lea
pop
xchg
or
pop
cld
adc
lret
sub
sub
and
or
ljmp
cmpsb
call
and
jne
push
inc
jbe
mov
mov
repz
fst
cmpsl
add
mov
push
pop
rorb
insb
jmp
add
jno
inc
inc
mov
mov
mov
fdivs
sub
jle
adc
add
rcll
je
shr
mov
pop
push
int
scas
inc
pop
cmpl
mov
cmp
add
mov
repnz
sub
loope
jge
sahf
cmp
loopne
in
clc
outsl
cmc
xchg
sub
fsubr
in
dec
dec
and
in
out
mov
testl
jecxz
lahf
mov
int3
xchg
jo
or
dec
out
stos
jg
sub
dec
or
insb
lahf
je
and
nop
sbb
sub
mov
and
push
iret
jno
push
jno
push
sub
sbb
cmp
loopne
adcl
jnp
sub
xchg
pop
ret
add
sbbb
xchg
mov
gs
sub
add
and
icebp
fbstp
incl
or
mov
push
inc
or
das
adc
dec
push
xchg
adc
cmp
mov
dec
cltd
adc
lahf
pop
cli
ret
int3
pop
mov
in
fisubrs
pop
mov
clc
push
xchg
jb
psubusw
bound
les
test
mov
out
mov
in
push
pusha
adc
out
insb
stos
loope
lock
call
stos
in
into
sub
test
lock
push
mov
mov
stc
xchg
rcrl
push
push
jne
dec
iret
mov
push
decb
and
mov
rcll
daa
jge
daa
inc
into
fchs
inc
jne
cld
inc
ss
adc
cmp
out
ret
mov
insl
xorb
xor
movsbl
fildll
mov
ficoml
fld
bound
mov
test
jo
push
inc
into
out
je
xchg
or
std
daa
fistps
and
mov
jmp
add
and
push
sbb
loop
xchg
stc
stos
push
sbb
or
lock
or
xchg
aad
push
test
xchg
cmc
fsubrs
cwtl
mov
sub
mov
pop
outsb
fxch
outsb
andb
xlat
clc
mov
lock
stc
adc
jbe
dec
arpl
dec
mov
jl
lret
lret
xchg
mov
sbb
clc
testb
dec
insl
lcall
pop
jmp
push
jecxz
add
and
push
std
xor
push
push
loope
nop
mov
jle
icebp
xchg
arpl
xor
xchg
popa
adc
cs
test
addl
jge
icebp
call
repz
outsb
ja
push
cmp
mov
push
adc
leave
dec
cmovl
sbb
test
clc
lret
sahf
sbb
mov
ja
or
scas
inc
inc
shl
xor
add
adc
adc
in
aam
push
and
fsubl
push
push
xchg
stos
xor
pop
adc
xchg
pop
int
cmp
mov
clc
pusha
inc
stos
cmp
ret
or
or
jg
push
cmp
repnz
push
dec
xchg
movsb
mov
fnstsw
fwait
repnz
pop
das
stc
pop
movsl
dec
or
cmpsl
lret
add
fisubl
push
jmp
fistpl
add
xor
scas
jl
fldcw
aas
jmp
in
xchg
jle
xchg
mov
mov
sub
mov
pop
outsb
cld
lret
jno
xor
imul
pop
cmpsb
addb
lock
test
push
int3
sub
adc
push
jecxz
mov
mov
leave
lods
dec
add
inc
gs
push
popf
mov
in
xchg
les
mov
pop
jmp
inc
and
js
in
pop
fists
mov
cmovs
and
jl
or
mov
test
inc
push
mov
jb
fwait
xchg
pop
in
nop
push
jns
xlat
cmp
fildll
ss
in
adc
in
out
mov
jg
jp
jb
scas
je
cli
repnz
and
jns
cmpsl
adc
mov
es
aas
mov
roll
inc
ja
pop
mov
dec
in
test
mov
fst
inc
divl
mov
enter
sbb
lahf
fwait
and
pop
sbb
cld
push
loop
cmpsb
pop
mov
sti
mov
inc
clc
inc
call
rorl
inc
popa
in
and
js
inc
push
mov
dec
lret
in
mov
adc
rclb
icebp
stc
in
repz
dec
call
mov
pushf
mov
mov
pop
and
imul
push
aas
or
pop
outsb
mov
leave
arpl
in
shlb
mov
jecxz
test
fsts
mov
sub
cmpsb
sbb
loopne
inc
iret
xchg
jg
movswl
dec
inc
xor
xor
daa
in
or
mov
lock
sub
sbb
clc
xchg
lock
clc
sub
adc
dec
mov
lret
jae
dec
xor
xchg
stos
call
movl
pop
and
jb
cmpsb
test
pop
jae
jecxz
mov
lcall
icebp
sub
aad
xor
cmp
push
mov
cmc
push
push
xchg
adc
jbe
push
rol
sbb
outsb
push
push
and
mov
repnz
dec
scas
ss
shll
jecxz
dec
stos
and
in
adc
adc
dec
daa
outsl
mov
adc
and
sub
mov
cmp
jle
fistpll
sub
jo
pop
inc
decb
sar
fs
dec
push
test
outsl
mov
adc
in
mov
das
or
lods
dec
push
addr16
aaa
xlat
dec
xor
mov
jg
xchg
arpl
mov
pusha
dec
scas
pop
pop
mov
push
sbb
hlt
xor
stc
push
fists
popa
dec
cmp
add
lods
inc
repz
mov
aas
insl
mov
test
imul
pop
dec
test
mov
std
int3
mov
outsb
pop
mov
adc
subl
scas
sub
mov
adc
shll
daa
and
rcrb
or
adc
dec
pop
cmpsl
pop
insl
loopne
sub
push
jbe
sti
xchg
adc
sbbl
sub
push
out
push
aad
cmpsl
sub
ficompl
cmp
push
and
push
sub
xchg
add
adc
aad
mov
repz
xorl
cwtl
push
hlt
cmp
pop
pop
sbb
jo
mov
add
sbb
jg
mov
adc
aaa
cmpsl
popf
shlb
pop
cmp
and
and
cmp
lcall
gs
jno
mov
pop
inc
das
dec
scas
aam
ljmp
push
sbb
std
xlat
adc
out
push
pushf
sti
enter
loop
xchg
sbb
sbbb
inc
pop
fwait
in
jo
and
add
and
das
cwtl
rorl
loop
stos
sub
push
ret
push
or
out
imul
div
xchg
or
into
int3
cmp
pop
add
in
mov
cmpsb
icebp
pusha
repnz
and
pop
in
mov
ja
jg
pop
mov
jbe
mov
xchg
mov
sub
cmp
cmp
ja
xchg
add
mov
int
lea
dec
mov
jns
ret
bound
bswap
xor
out
aaa
insl
push
out
outsb
bnd
jg
inc
cmp
sbb
mov
test
leave
jge
jbe
mov
mov
lcall
pusha
int3
fcmovbe
xchg
xchg
lods
or
imulb
mov
test
pop
add
minps
les
jne
cmc
pop
jnp
dec
add
cltd
es
xlat
add
ja
jmp
push
xchg
in
lret
dec
jae
daa
pop
test
sbb
xchg
lods
adc
adc
sbb
sub
cmp
dec
filds
adc
and
cmp
loop
cltd
mov
dec
test
jmp
fisubrs
inc
jo
mull
jno
rol
fnstenv
bound
stos
aas
out
pop
loope
adc
clc
dec
and
jae
pop
sbb
fildl
dec
jp
mov
outsb
lods
adc
pusha
out
mov
mov
and
mov
mov
ret
test
inc
dec
sbb
je
mov
sarl
pop
mov
pop
fwait
ss
pop
pop
loopne
push
test
cmp
and
dec
sub
jmp
lods
add
inc
and
js
mov
cmpsl
sbb
test
push
jl
js
push
jbe
popf
gs
xchg
pop
outsl
iret
arpl
pop
cmpl
daa
repnz
adc
cmp
lods
daa
adc
shlb
and
cld
jecxz
in
dec
es
or
sub
movsb
mov
cmpl
dec
inc
push
or
pop
dec
pop
mov
jecxz
aam
push
pusha
sub
and
into
aam
pop
jns
les
jg
jbe
pop
jle
in
sub
xchg
xchg
sbb
js
test
ljmp
aad
sub
lods
dec
loop
inc
push
dec
imul
pushf
adc
stos
fs
xchg
aam
xchg
cmp
or
fists
jnp
cmpb
pop
or
sbb
mov
mov
mov
adc
in
mov
jns
jns
jb
cmp
sbb
dec
ss
dec
push
sbb
push
xchg
adc
into
rorl
dec
adc
or
or
dec
cmp
lahf
data16
shrl
in
push
cs
dec
scas
loop
jnp
cli
pop
lock
mov
stos
push
add
cmpsl
cmp
add
sar
mov
xchg
pop
out
loope
insb
and
test
jo
sbb
sbb
inc
dec
movsb
lods
xchg
dec
jp
sub
nop
scas
sbb
push
lds
mov
in
jg
insb
adc
loope
adc
movsb
fistpll
shl
call
mov
add
incb
cmpsb
in
sub
ljmp
pusha
faddl
fwait
xchg
lods
or
jae
loope
pop
in
call
testb
inc
cmp
ret
sbbb
test
mov
xor
push
ds
mov
mov
sub
lret
and
sti
pop
call
mov
and
sbb
cmp
pop
xchg
mov
fs
and
stos
sti
call
push
dec
call
fnstsw
imul
pop
scas
add
xchg
pop
sbb
pop
clc
mov
mov
jl
jbe
cmp
fucomp
jl,pn
je
inc
rcrl
jg
mov
or
xor
fistpl
jmp
ja
pusha
xchg
cltd
ds
cmp
jle
aam
subb
jae
push
fsts
mov
sub
mov
or
in
mov
jp
scas
add
pop
stos
cmp
jnp
dec
xlat
paddsb
std
dec
daa
and
into
ret
lahf
xchg
mov
pop
and
out
or
sti
push
xchg
loopne
xor
pop
add
sub
xchg
pop
dec
jno
fwait
enter
lods
jno
cs
push
sbb
add
and
andl
mov
scas
cmp
pop
sahf
nop
lds
and
mov
hlt
cmpb
xchg
and
sub
jb
push
sub
mov
xchg
add
pusha
jmp
ficoml
mov
push
xor
aaa
icebp
dec
aad
sbb
inc
push
loope
outsl
nop
jmp
ficoms
test
out
es
scas
mov
ret
test
xchg
outsl
call
adc
add
pop
adc
pop
inc
cmc
or
adc
pop
insl
pusha
mov
arpl
xchg
test
cmp
jno
xor
push
cmp
iret
inc
mov
sbb
xchg
xchg
mov
or
lock
push
and
out
lock
mov
pop
pop
dec
aas
pop
inc
aad
jl
jge
mov
sbb
inc
sbb
dec
and
cmp
mov
sbb
jnp
mov
in
mov
shrb
fwait
sti
xchg
js
fadd
sub
pop
imul
jb
dec
jp
test
cs
cmp
inc
xor
mov
enter
add
test
stc
add
std
mov
lret
pop
fisttpll
movsb
push
dec
out
cmovbe
js
out
push
xchg
cs
shrl
leave
sbb
icebp
ljmp
mov
mov
cmp
sub
or
enter
jl
mov
push
shl
incl
jne
aad
into
orb
shl
int
bound
mov
sub
imul
sub
mov
aad
pop
pop
sahf
stos
mov
stc
fsubs
push
push
sbb
mov
addb
push
call
sub
outsl
mov
jo
dec
and
stos
pop
sub
loope
into
stos
mov
out
and
das
and
mov
insb
fistps
lcall
sub
xlat
xor
addr16
fcoml
lods
mov
cmc
dec
nop
xor
pop
test
pop
mov
fs
enter
shlb
adc
into
in
daa
shl
stos
ljmp
aad
fistps
daa
pushf
sub
pusha
popf
dec
pop
mov
sbb
inc
outsb
fstl
daa
xor
push
imul
pop
pop
js
dec
xchg
outsl
xchg
sub
dec
repnz
sbb
loopne
jae
mov
xor
clc
fcoms
jo
mov
je
adc
dec
or
fcomi
mov
lahf
sahf
pusha
jb
stos
jmp
push
jb
fmuls
iret
fwait
xchg
jae
inc
and
sarl
loope
cmp
neg
subb
adc
inc
fiaddl
inc
mov
xor
std
gs
adc
int
push
punpckldq
std
pop
lock
dec
cwtl
mov
ds
push
dec
jns
dec
lods
push
xor
sbb
hlt
pushl
je
and
xchg
out
stos
push
fsubp
mov
mov
adc
repz
fnstsw
negl
push
mov
push
dec
aaa
sbb
clc
lcall
add
loope
ret
pop
adc
xchg
in
repz
orl
mov
scas
mov
in
adc
and
sbb
jns
aam
sub
mov
les
dec
dec
mov
adc
imul
imul
out
mov
movsb
cmpsl
adc
mov
sarb
push
in
fiaddl
sbb
aaa
ja
fstpl
push
out
cmp
dec
test
loop
add
cmp
lret
sbb
in
xchg
add
add
mov
enter
cmp
jp
fdivrs
leave
inc
or
test
mov
mov
sub
or
push
outsb
lahf
aaa
sub
pop
call
mov
sbb
adc
xchg
pop
stc
mov
fsubs
iret
fprem1
daa
mov
fidivl
movsl
mov
xchg
lret
cmpsl
das
loopne
gs
dec
lea
sub
and
pushf
jo
stos
xor
push
jle
push
lahf
pop
pop
xchg
dec
adc
cmp
jmp
pop
imul
mov
scas
inc
jo
xchg
push
ret
push
pop
mov
xchg
sbb
and
icebp
push
movsl
pop
data16
std
loop
subb
cmp
cltd
mov
das
jl
out
js
and
inc
mov
push
jmp
dec
out
push
in
test
imul
sbb
mov
das
adc
xor
mov
mov
mov
push
movsb
pop
sub
cmpb
xchg
pop
sub
in
sbb
mov
push
popf
popf
mov
fstl
fsubp
push
insl
mov
imull
jmp
cwtl
pop
outsb
fidivrl
js
jg
adcl
mov
inc
je
and
sarl
jl
push
fldenv
xchg
xchg
sbb
outsb
mov
mov
inc
sbb
pop
push
rolb
and
mov
in
arpl
add
test
fildll
sti
mov
pop
jl
and
in
mov
xchg
mov
jg
push
push
fldenv
ss
fsts
outsl
mov
jne
jge
sub
loopne
nop
scas
mov
sahf
xchg
add
xchg
ja
sbb
adc
or
add
negb
ret
in
push
mov
mov
or
mov
out
sub
movsb
xchg
nop
sbb
cld
addr16
divb
test
cmpsb
push
outsl
dec
pusha
ja
push
call
jne
std
hlt
jno
fidivl
xchg
mov
jmp
dec
mov
sbb
fwait
jno
mov
data16
pop
into
stos
push
sub
scas
xor
inc
hlt
mov
fbld
enter
pop
mov
push
repnz
xchg
dec
or
data16
xor
outsb
inc
dec
sahf
fucomi
pop
cmp
fwait
loopw
jle
bound
std
repnz
add
stc
sbb
cmp
push
cmc
movd
loop
mov
aam
push
cmp
mov
adc
mov
jmp
movzwl
and
pop
xchg
es
and
insb
mov
push
jne
xor
add
dec
int
sbbl
jns
fnsave
arpl
mov
and
push
lret
jmp
xchg
push
repz
shl
out
stos
push
movsb
add
and
sbb
xchg
xor
daa
lds
pop
mov
cli
pop
jno
jp
sbb
add
mov
xchg
mov
fwait
call
repnz
lahf
imul
lahf
mov
das
xor
jnp
jg
push
out
add
aad
gs
mov
aad
cmp
xchg
or
sub
scas
sub
fldcw
scas
lahf
in
rolb
mov
stos
mov
pop
fadds
nop
rorl
or
sahf
ss
push
mov
sbb
das
ds
inc
push
insl
ret
iret
fwait
mov
addr16
sbb
push
mov
out
int
fstpl
stos
out
dec
pop
mov
scas
popa
push
inc
gs
mov
mov
sub
fbstp
shr
xor
int
scas
cmc
sub
dec
and
adc
lods
in
push
movb
lret
insl
loopne
test
out
add
fmuls
mov
ret
mov
or
sub
pop
jecxz
mov
icebp
lods
sbb
dec
mov
in
dec
in
cmp
mov
mov
movsl
sbb
jg
clc
lods
xor
into
fwait
mov
test
out
scas
add
shrb
mov
jbe
sub
enter
lds
jno
xchg
pop
std
add
in
or
addr16
mov
shrb
aas
add
loopne
xor
stos
sub
jbe
xor
cmpsl
insl
jnp
inc
shr
push
mov
cmpsb
imul
testb
adc
mov
jmp
test
repnz
jecxz
adc
shlb
stc
cmp
add
mov
sbb
xor
je
ljmp
sbb
lcall
test
lahf
xchg
les
jns
mov
dec
dec
dec
pop
gs
imul
stos
push
mov
leave
ficompl
dec
inc
mov
std
gs
sbb
movsl
fcmove
and
pop
movsb
in
dec
jl
push
jns
rcrl
rclb
inc
dec
in
dec
xchg
pop
fsubl
adcb
fsubr
cs
cwtl
aas
xchg
fmul
sarb
je
stos
cs
inc
aaa
dec
adc
mov
xchg
and
add
dec
out
fs
pushf
sub
xlat
pop
mov
xorb
mov
xor
and
cmp
mov
jle
mov
rol
mov
mov
xchg
xchg
mov
scas
lea
pop
dec
ret
negl
shlb
xlat
shr
fistl
mov
cmp
std
xor
jge
test
pop
mov
inc
mov
addr16
push
and
arpl
adc
mov
rolb
and
pop
fsubrs
sbb
mov
subl
push
in
in
push
inc
jmp
or
fsubrp
xlat
xchg
fsub
mov
test
pop
mov
je
lret
loopne
popa
lret
sbb
dec
in
dec
cmpsl
popf
loopne
jecxz
aas
pop
mov
and
out
imul
ficomps
xchg
or
movsl
sti
lea
jo
sbb
xchg
mov
mov
sbb
clc
xchg
int3
cmc
xchg
jp
mov
movb
movsb
pusha
pop
mov
jno
add
inc
enter
sub
fs
jmp
xchg
ret
std
mov
xchg
inc
shrl
ficompl
testl
inc
aad
rcrb
nop
cmp
aad
xchg
ja
in
mov
pop
popa
push
dec
dec
sbb
mov
mov
add
movsl
hlt
inc
adc
lcall
leave
add
fsubs
and
cmp
insb
mov
lock
and
orb
inc
sbb
lret
jge
mov
imul
ret
cmp
add
dec
cld
stc
mov
aad
fwait
inc
mov
sbb
aaa
fwait
jle
enter
popf
leave
repnz
or
pop
aad
in
cmc
mov
loopne
xorb
rorl
and
idiv
push
or
adc
data16
clc
pop
mov
sbb
mov
push
fistl
mov
and
dec
sbb
xor
inc
add
adc
add
jo
xchg
int
es
fld1
cmp
xchg
int
cmc
xor
rcrb
cmp
sbb
aad
sti
js
fisubrs
jo
or
aaa
iret
sub
repnz
out
push
or
enter
jecxz
into
push
lods
jb
inc
add
leave
lcall
or
or
xchg
add
aaa
jns
inc
js
and
xchg
addb
iret
push
daa
es
and
sub
sub
and
leave
sbb
loopne
scas
sub
fsubs
scas
jo
push
push
repz
jg
pop
repz
repnz
ja
out
mov
mull
push
jl
into
mov
mov
xchg
mov
xor
inc
lret
xchg
and
jge
inc
pop
int
ret
add
xchg
sahf
test
adc
cmpl
inc
pop
adc
daa
fisubrs
test
cmpsl
and
add
lods
icebp
mov
xchg
cltd
push
jg
cld
xchg
aam
xchg
sub
ljmp
fists
or
xor
inc
pop
pop
popf
je
loopne
inc
nop
outsl
cmp
and
lcall
mov
lods
inc
sbb
shrl
mov
mov
push
push
add
fistps
rclb
and
xchg
xorl
pop
and
adc
xchg
ficoml
mov
mov
cwtl
lods
inc
fidivrs
push
pop
pop
int3
rorb
cmpl
out
xor
mov
sbb
pop
sbb
cmp
nop
and
in
movsb
shl
data16
sbb
pop
in
cmp
mov
out
out
dec
mov
popf
push
mov
mov
xchg
ss
jl
andb
shl
clc
es
xor
fxch
bound
mov
fisttps
in
repz
gs
rolb
fwait
ljmp
add
in
cwtl
sub
loopne
inc
loopne
dec
push
in
outsb
call
sti
loopne
lret
imul
xchg
out
imul
clc
xchg
dec
sarb
push
daa
ss
mov
ret
lahf
mov
or
sarb
aas
mov
pop
lahf
daa
sbb
push
mov
loop
das
shlb
dec
fs
imul
dec
pop
jl
cld
out
jns
out
xchg
add
ds
inc
sub
inc
xchg
js
lret
sub
out
mov
gs
push
sbb
stc
xor
dec
std
orb
mov
xchg
add
jmp
jbe
ret
andl
xor
lds
shll
pop
addr16
fsts
scas
frndint
test
xchg
stc
shrb
shrl
clc
fisttpl
ja
xor
movsb
fdiv
call
mov
int
fdivl
out
rcrb
xchg
push
sbb
mov
push
outsl
clc
sbb
cmpb
xor
push
cmc
imul
or
jmp
inc
repz
sbb
cmc
scas
jge
out
or
xchg
cmpsb
popf
enter
jmp
mov
lcall
cmc
push
lods
out
cmp
loope
xchg
fildl
push
cmp
add
xchg
sbb
cmp
mov
ret
lahf
cmp
fisubs
clc
mov
inc
xor
mov
add
pop
mov
or
cmp
push
push
mov
call
mov
pop
cmc
cmp
fwait
add
or
scas
add
add
xor
pop
mov
imul
repnz
mov
ret
mov
fists
call
mov
or
fidivl
fs
adc
mov
mov
jns
jmp
jp
jg
xchg
pop
mov
ljmp
xor
adc
cltd
cmp
in
or
or
xlat
xor
cmc
xor
mov
int
xor
movsl
jae
or
inc
test
ficomps
and
cmp
and
mov
and
cmp
cmp
mov
mov
cli
aas
ja
push
dec
aaa
fnstenv
xchg
push
int
cmp
rcrb
inc
lret
or
jb
sub
inc
mov
aas
incl
sub
xor
aaa
in
mov
pop
mov
test
cs
ret
insl
stos
fimuls
cmp
sti
and
cmpsb
rcr
pop
or
outsb
mov
jb
dec
scas
mov
xchg
cltd
xchg
rcr
mov
adc
inc
test
fiadds
repz
push
fcmovnb
stos
sub
xchg
sarb
xlat
cmp
pop
and
xchg
inc
lret
clc
xchg
push
int3
ret
je
or
and
aad
and
jmp
push
jae
scas
jle
sbb
clc
cmp
daa
clc
mov
add
jl
imul
test
xchg
lret
psllw
dec
push
test
movl
or
popa
fadds
add
xchg
push
xchg
pop
popf
inc
inc
std
test
adc
lahf
out
fsubs
cmpsl
jmp
fucompp
cmp
and
push
inc
mov
push
xchg
fidivrs
mov
mov
les
jge
iret
subl
test
lahf
adc
mov
cmc
pop
shrb
push
movsl
dec
jmp
fsubrs
mov
data16
aad
rol
or
dec
pop
lcall
inc
or
stc
mov
sub
and
in
inc
loopne
add
insb
in
sti
int3
or
cltd
mov
out
pop
iret
dec
inc
jge
in
inc
fdiv
cs
sub
and
lret
shrl
arpl
out
dec
add
xor
and
cs
dec
in
stc
and
movsl
mov
stc
fildl
cmp
and
adc
add
pop
roll
div
sbb
xchg
and
mov
fsubrs
shll
sub
cld
pop
cmp
stos
js
push
fimull
in
push
leave
mov
jo
xchg
mov
xor
mov
xor
bound
insb
enter
push
sbb
orl
dec
mov
outsl
add
daa
int3
push
mov
inc
out
lods
push
dec
hlt
stc
sti
mov
mov
aad
xchg
push
cmpsb
es
xchg
inc
popf
leave
xchg
or
outsl
mov
xchg
aaa
stos
lds
mov
sub
dec
fldcw
rclb
add
arpl
inc
jb
ret
addr16
test
mov
cmp
addb
push
mov
push
sub
mov
fstpl
jl
out
push
push
out
ja
ret
pop
push
fisttpl
repz
add
das
cmp
lods
cmp
orl
mov
add
mov
xlat
lock
fsubr
xchg
ret
jg
fdivr
fstl
adc
je
cmpsl
lods
cmp
mov
shlb
sbb
filds
mov
jnp
arpl
bound
pop
adc
jbe
es
jns
pop
jne
les
icebp
fldenv
sbb
leave
fisttpl
out
inc
pop
stos
dec
out
rclb
cmpsb
push
cmp
mov
mov
push
dec
pop
fs
repnz
cld
arpl
in
leave
clc
xchg
add
movsl
out
not
lods
pop
mov
mov
adc
fwait
addr16
mov
sahf
test
fs
scas
jbe
in
pop
mov
pushf
adc
cs
jp
jnp
lock
jno
into
lock
js
inc
xor
jns
cmp
popa
in
push
lahf
cld
out
icebp
aam
dec
clc
lods
mov
scas
pop
push
cld
mov
fistps
roll
mov
dec
push
mov
sahf
push
inc
mov
cld
push
xor
inc
sbb
mov
cld
push
jmp
xor
rolb
lcall
inc
pop
mov
push
jle
cmc
jns
jnp
xchg
jns
mov
or
imull
sahf
pusha
jns
and
in
mov
jnp
inc
mov
stc
jb
js
push
jnp
xchg
and
repz
fcmovu
lock
or
daa
stc
in
movsb
fwait
dec
mov
dec
cmp
call
loop
in
insl
vfrczpd
fucomi
adcb
repnz
sub
jbe
xchg
mov
add
es
mov
jle
push
outsb
fcoml
test
mov
lods
dec
xchg
lcall
push
jne
cmp
and
rcll
mov
fisttpll
cmp
shlb
loope
test
and
mov
aam
aad
mov
nop
sub
xor
push
jnp
sbb
int
or
out
ss
jbe
loop
jp
jle
pop
std
test
test
cmp
or
movl
dec
jbe
xor
inc
lods
sbb
mov
cmpl
xor
mov
lahf
scas
xor
daa
push
push
out
xor
int3
mov
jl
stos
mov
fstl
xchg
sbb
jb
push
add
xor
mov
mov
fucompp
mov
sub
inc
cmp
inc
inc
mov
pop
or
scas
scas
dec
pop
mov
lahf
mov
sbb
mov
push
roll
dec
jmp
jmp
pop
add
fisubrs
imul
pushf
pop
mov
mov
bswap
loop
ss
inc
and
xchg
stc
cmp
or
mov
js
or
sub
mov
jmp
mov
sbb
fcom
out
jno
xor
or
pop
rcrb
or
lods
enter
outsl
push
aam
mov
push
lds
mov
test
inc
jl
dec
pop
cmp
adc
repz
popf
add
pushf
mov
xchg
add
push
out
cltd
sub
mov
rclb
pop
repz
jecxz
cmp
mov
mov
push
movb
xchg
push
sahf
imul
stc
cmp
sbb
cli
adc
movsl
lahf
vmulpd
stos
nop
xchg
std
mov
in
lret
xchg
inc
mov
icebp
loopne
and
and
test
mov
stc
imul
test
dec
pop
adc
addl
cmp
adc
or
dec
inc
shlb
sti
or
cvttps2pi
mov
icebp
mov
mov
das
and
add
add
fldt
adc
xorb
pop
test
arpl
mov
daa
icebp
sbb
inc
inc
out
cmc
xor
sub
add
aas
adc
mov
add
fsubl
rorb
dec
xchg
cmovb
in
lcall
jno
add
inc
mov
cmp
call
js
and
sarb
sub
int
ret
dec
fisubrs
cmp
sbb
pusha
aad
sbb
jmp
mov
inc
fbld
scas
test
or
fcomps
ficoms
push
popf
bound
outsl
adc
xor
adc
into
inc
out
and
insl
inc
jp
xchg
pusha
repz
mov
mov
mov
mov
push
push
pop
xor
callw
xorl
add
lea
iret
iret
sti
mov
add
push
jmp
out
gs
xchg
int
pop
fistl
push
mov
lock
jecxz
inc
sbb
pop
xchg
sti
mov
and
aaa
lods
fldt
mov
ja
cwtl
lsl
into
xchg
shll
fisttps
pop
decl
sbb
jmp
adc
jp
add
loope
imul
stos
imul
sub
pop
int
sbb
subb
fnstsw
sub
mov
adc
mov
inc
sti
ds
add
xchg
push
mov
lret
mov
dec
adc
dec
jge
lea
cli
jne
dec
add
push
mov
cld
and
xorb
mov
call
repnz
mov
std
cmp
pop
ret
xor
sbb
cmp
add
sub
andl
pop
popa
or
in
sbb
sti
mov
lock
imul
ja
fld
jp
hlt
stos
cmpsb
sub
aaa
leave
rorb
sub
ret
cli
jp
dec
xor
cmpsl
push
mov
icebp
jp
lods
cmp
test
leave
xlat
dec
aas
cmp
adc
mov
aam
out
int3
dec
adc
jne
adc
call
fisubrl
push
cs
mov
lret
mov
ja
leave
daa
lret
stos
and
loope
add
iret
mov
ret
repnz
push
adc
or
loopne
push
std
xchg
in
pop
test
add
gs
or
add
ret
or
test
xor
in
std
add
loope
jmp
xchg
andl
into
xlat
cmpl
outsb
out
in
loop
adc
adc
mov
cmc
jge
inc
movsb
and
sub
lahf
xchg
mov
or
mov
out
push
and
das
xchg
int
mov
in
test
mov
mov
into
mov
movl
cs
aad
orl
xchg
and
lds
pop
popf
std
and
into
nop
test
dec
outsb
cli
add
mov
add
inc
xrelease
sub
jge
shl
add
inc
pop
sbb
or
cld
sti
test
add
jnp
hlt
push
fdivl
cs
scas
mov
icebp
loope
sti
and
out
jg
imul
mov
or
jmp
faddl
add
hlt
cmc
popf
mov
push
pop
hlt
cmc
ljmp
jle
lret
mov
ret
test
push
mov
aaa
pusha
jge
sub
imul
mov
negb
pop
xchg
out
lods
stos
ds
iret
xor
add
xor
cmp
dec
in
popa
adc
mov
mov
fisttpl
nop
push
xchg
or
cmp
mov
cmp
getsec
pop
out
sbb
pop
cmpsb
popf
loop
stos
fcoml
add
daa
xor
mov
xchg
fucomp
out
fdiv
divl
pop
test
xchg
xor
aad
jns
and
cmpsl
je
xor
loope
mov
pop
aas
push
xchg
add
clc
popf
add
stc
jne
and
out
push
sbb
pop
add
pop
test
cli
xor
jge
sub
es
cmp
pop
ret
mov
lret
pop
mov
rcr
and
mov
mov
push
stos
adc
mov
adc
aad
jmp
jb
dec
mov
inc
dec
jl
jmp
xor
sarb
fxch
ljmp
repnz
xchg
mov
xchg
push
je
cmp
dec
lds
mull
add
ljmp
xor
mov
nop
stc
loop
pop
cmpsl
popf
or
fdivs
mov
in
mov
push
aad
fs
inc
into
mov
add
cmp
popa
lock
mov
icebp
cltd
sbb
xchg
scas
ret
into
daa
cmpsl
jecxz
mov
xchg
pop
ret
adc
add
outsb
or
and
fisttpll
sub
ss
jecxz
ljmp
pop
fidivrl
pop
mov
mov
out
fadds
stos
int3
in
ss
and
or
dec
xor
fucom
mov
jbe
inc
inc
inc
mov
mov
sbb
rcll
mov
int3
dec
shll
xchg
jp
jns
mov
sahf
das
or
jge
jne
jno
je
popa
addr16
or
mov
xchg
shll
inc
je
or
and
push
mov
arpl
cmpsl
insb
jns
or
dec
iret
adc
sub
or
movsb
mov
jne
pop
and
xchg
insb
push
insb
mov
push
push
pop
es
dec
fcmovne
inc
dec
adc
ss
ljmp
mov
repnz
mov
dec
mov
rcrb
inc
fisttpll
cld
arpl
push
push
sub
add
mov
cmp
clc
pop
push
pmaddwd
cld
jo
or
mov
rolb
shrb
rcll
jmp
xchg
in
insb
mov
sub
bound
dec
dec
cltd
daa
out
imul
add
js
xchg
sub
push
xchg
mov
psrld
xchg
mov
jne
xlat
sbb
in
scas
imul
mov
lock
inc
loop
sub
int3
das
ficompl
sarl
enter
pop
inc
push
inc
cmp
hlt
mov
ret
data16
stc
mov
stos
adc
inc
in
ret
notb
push
rclb
fildll
and
xor
lods
xchg
lock
dec
or
push
mov
jmp
mov
dec
cmp
push
push
lea
scas
cld
adc
mov
sub
aaa
repz
adc
repnz
fmul
fwait
dec
jp
cmp
nop
cmpsl
mov
in
xchg
jo
lock
test
mov
fwait
lcall
xor
dec
out
push
rsm
leave
js
out
ret
dec
call
stc
xchg
sub
pop
xchg
imul
mov
notl
xor
pop
je
pop
sub
sbbb
mov
imul
jmp
dec
inc
mov
jg
test
xorb
pop
push
pop
or
insl
std
out
cmp
lahf
jl
bound
iret
cld
push
lods
std
es
test
out
mov
test
test
pop
popf
jle
movsb
push
or
out
clc
lds
leave
roll
pop
xchg
dec
outsb
fstpl
cmp
adc
jmp
push
clc
lret
adc
dec
cmp
add
aam
addr16
jmp
mov
into
and
sub
sahf
xchg
adc
push
add
cltd
iret
inc
or
jbe
loop
xor
fs
frstor
dec
sub
insb
outsb
out
lahf
inc
inc
into
fwait
and
fisubrl
loope
in
loop
cmp
mov
or
imul
mov
mov
xor
je
push
daa
sub
ljmp
js
popa
add
dec
outsb
imul
hlt
into
shll
add
into
out
loop
xchg
pop
testb
xor
cmpsb
and
xlat
fld
lcall
add
or
loop
jns
fistpll
cmpsb
cwtl
dec
pop
push
push
cli
les
jl
cld
push
sub
fcompl
mov
add
xchg
dec
stos
cmp
and
inc
dec
rclb
clc
addr16
jg
daa
sti
call
mov
mov
fisttpl
sbb
movsb
loop
cld
adc
sti
fstl
mov
stos
jle
imul
add
fwait
incl
fmuls
pop
jae
pop
inc
gs
or
imul
pop
nop
xor
ss
inc
jecxz
inc
movsl
ds
rorw
xor
insb
enter
inc
mov
sub
loopne
arpl
xlat
push
movd
lods
sub
rolb
mov
scas
mov
fstl
test
mov
adc
out
mov
cmpsl
sbb
fisubl
test
jne
pop
fcomi
mov
int3
and
adc
cmpsb
jecxz
pop
jns
inc
dec
and
aaa
out
out
mov
insl
sub
pop
push
or
push
xchg
or
jle
es
jno
fwait
in
xchg
pop
mov
repnz
dec
lahf
jge
pop
in
aam
adc
inc
and
add
addb
sbb
xchg
mov
cmp
dec
mov
iret
outsl
push
iret
aaa
xchg
fs
out
cmc
mov
pop
out
dec
dec
jnp
pop
and
add
out
jno
aas
pushf
sbb
push
push
pop
mov
gs
ss
sub
jmp
mov
sub
subb
mov
movsl
push
xlat
js
sbb
into
divl
pop
dec
cli
add
fldl
mov
popa
mov
and
loopne
mov
imul
outsb
fwait
push
jge
js
mov
sbb
mov
aaa
in
out
dec
lea
call
jbe
cmp
jge
loope
lock
cs
fdivrl
push
aam
sub
pop
xchg
imul
xchg
cmpsb
jecxz
sub
out
aas
or
dec
pop
jae
add
fisttpll
jne
mov
mov
pop
out
add
sbb
div
inc
cmp
mov
rep
in
ds
scas
cmc
xor
or
mov
jbe
xchg
and
and
and
adc
jns
pop
addr16
sub
cmp
push
pop
mov
aaa
mov
daa
push
test
mov
pop
loopne
push
xchg
leave
sub
mov
sub
push
and
int3
dec
cld
fwait
and
push
sub
test
cmp
mov
mov
mov
pop
ror
das
lods
popa
int
in
sbb
jb
xchg
fwait
sub
cmp
shl
mov
mov
jno
mov
loopne,pn
lock
cmc
in
lods
outsl
mov
hlt
outsl
mulb
repnz
leave
ret
dec
outsb
aaa
xor
mov
lcall
cmp
mov
icebp
lods
fsubs
dec
mov
mov
ret
std
or
out
insb
xchg
jle
fucomp
sbb
scas
rclb
pop
enter
pop
in
test
jns
push
xor
sub
jge
push
mov
test
jl
pop
lret
fadds
dec
xor
push
lods
xchg
inc
test
pop
and
jge
pop
fwait
scas
bound
adc
lods
imul
mov
out
push
inc
bound
jl
sahf
mov
pop
and
cmpsb
cmp
stos
in
cmp
sarl
jae
pop
sbb
ja
mov
inc
into
nop
rorl
repz
das
mov
loopne
pop
test
fwait
mov
xchg
test
xor
in
hlt
out
popf
push
mov
adc
or
cmpsb
or
cmp
jae
faddl
inc
les
popf
in
cli
push
bnd
or
rcr
jnp
sbb
fsub
rcrb
pop
cld
dec
iret
sub
jmp
in
shrl
lods
into
lahf
mov
dec
pop
adc
popf
pop
dec
cmp
cmpsb
or
movsb
shl
je
mov
xchg
sti
cli
in
pusha
xchg
outsb
out
pop
arpl
xchg
adc
fs
out
roll
hlt
inc
aaa
jo
in
shll
jnp
xchg
jno
std
add
and
add
push
fwait
push
mov
popf
fs
aas
push
xor
push
xor
mov
shlb
sarb
dec
or
aas
sahf
outsb
icebp
cs
mull
shlb
xchg
ds
fnstsw
xchg
add
ja
add
pop
lods
cwtl
jo
inc
mov
jno
outsb
arpl
cli
rclb
inc
cmpsl
popa
fs
fisttpll
pop
cltd
insl
out
push
inc
jae
jle
clc
jl
fs
ret
jne
das
mov
sar
adc
test
sub
inc
das
lods
lods
fsubl
adc
sbb
mov
rcl
dec
lcall
fistpll
pop
data16
xlat
dec
or
pop
jno
sbb
enter
xchg
jle
adc
pop
fiadds
inc
fists
fsubrs
addr16
sti
sbb
aad
sbb
add
pop
cmp
aam
ds
ljmp
mov
fdiv
inc
push
call
bound
in
add
mov
mov
mov
adc
cmc
in
rcl
pusha
add
cmovae
and
ljmp
and
cmpsb
mov
movsl
test
push
call
cmp
notb
ret
or
test
fwait
mov
pop
out
inc
mov
cld
leave
cmp
jecxz
and
dec
xchg
cmpsb
punpckhbw
xchg
idiv
and
movsb
mov
sti
lret
mov
xchg
sbb
dec
mov
into
shlb
sar
dec
stos
fbld
pop
orb
lahf
push
mov
mov
jne
xchg
mov
cltd
adc
mov
pop
jnp
ffreep
xchg
testb
fimuls
testb
ret
mov
mov
ja
repnz
insb
pop
jb
ret
hlt
mov
test
fldt
iret
inc
dec
nop
push
je
js
pop
aas
inc
pop
loopne
test
pop
lahf
pop
cli
jne
adc
lock
out
dec
dec
ret
fisttpll
out
sbb
sub
lret
sbb
cmpsl
stos
dec
cmp
jbe
cltd
std
mov
out
daa
pop
and
das
repnz
and
jecxz
add
popf
pop
aaa
jne
out
push
cld
jnp
mov
popf
int
loop
jmp
mov
ds
ror
or
aaa
scas
stos
xchg
loope
jle
push
mov
test
sbb
outsl
pop
sbb
xor
dec
inc
adc
adc
out
out
dec
aad
adc
add
push
or
ret
or
xlat
imul
mov
das
in
jl
mov
iret
push
pop
jge
dec
in
sahf
or
xor
xchg
sub
mov
cli
int
mov
insb
fadds
lea
in
mov
pop
mov
dec
es
sub
lea
leave
ja
das
sbb
dec
test
sti
orl
stos
pop
scas
xor
imul
lea
jo
test
dec
jmp
in
pop
jmp
pop
sub
jp
mov
les
mov
or
pop
mov
in
push
daa
push
scas
pusha
mov
pusha
pushf
cmp
pop
xlat
data16
fwait
mov
cltd
jnp
or
jmp
shr
sbb
loopne
pop
mov
xchg
dec
stc
adc
ret
je
cmp
sub
lds
movsl
and
out
sub
sti
mov
out
push
sti
jmp
pop
mov
pop
out
imul
xchg
pushf
pop
pop
iret
div
fmul
dec
mov
sub
daa
pop
jae
sti
push
pop
stos
ret
xchg
and
fstl
mov
aas
rcrb
jge
scas
outsb
push
jle
sub
or
jae
pop
mov
or
rol
outsb
dec
mov
sbb
scas
test
icebp
ret
jnp
out
mov
jo
mov
call
mov
mov
jp
btr
xchg
es
jno
jl
stos
push
mov
push
xchg
lea
aaa
mov
push
popf
loop
pop
fsubs
insl
mov
in
sub
ret
jo
dec
cltd
mov
test
dec
into
push
jmp
rep
rcrl
fsubrl
pusha
and
or
sub
sahf
push
insb
aaa
leave
lret
mov
fdiv
repz
clc
cmpsb
addr16
dec
bnd
repz
pop
adc
fdiv
aaa
push
call
fdivs
sub
repnz
es
and
test
in
daa
mov
mov
aam
sbb
mov
out
enter
inc
sar
cs
add
jg
fstl
xchg
xlat
add
addb
mov
pop
pusha
call
mov
imul
mov
js
es
aam
insl
dec
push
fcmovb
jb
lea
imul
fdivrl
insl
pop
mov
jno
push
leave
mov
addr16
jmp
xchg
inc
and
les
xor
mov
std
clc
push
sbb
and
add
sbb
popf
jecxz
mov
outsb
add
xor
dec
lods
mov
push
out
outsl
pop
pop
xor
pop
aad
push
test
ss
out
mov
pop
call
bnd
outsb
out
aad
or
aaa
xchg
cmpsb
loopne
fistl
jp
cmp
ficoms
stos
sbb
add
aad
lret
imul
and
cmc
mov
andl
loopne
push
out
incl
ljmp
incb
xchg
xchg
adc
sub
sub
jb
cmp
cli
bound
and
sbb
lock
xchg
and
xor
fists
xchg
std
push
shll
mov
mov
jne,pn
out
push
cmp
mov
and
pop
dec
in
or
mov
out
call
xlat
push
push
loop
jo
fiaddl
mov
outsb
mov
icebp
cwtl
cli
adcb
or
and
or
push
jae
pop
add
pop
out
mov
dec
lret
mov
int3
fnstcw
lods
dec
push
test
dec
adc
sbb
mov
and
test
icebp
mov
lds
je
test
fdivrs
nop
jae
sub
cld
add
mov
fiaddl
inc
jmp
mov
std
mov
cs
popaw
and
test
pop
rcll
mov
dec
pop
inc
fldenv
xchg
jl
adc
adc
ja
cmp
mov
cmp
inc
subl
sti
xor
adc
xchg
sub
fdivs
fistpl
sub
mov
insb
lds
jne
dec
xor
jo
cmp
in
das
stos
mov
jno
pop
ret
sahf
and
mov
pop
int
inc
test
push
jl
jnp
neg
push
rcr
xchg
push
sbb
pop
cmp
stos
push
loope
add
movl
dec
out
push
push
fadd
jmp
je
and
jl
xlat
mov
xchg
fldl
aam
xchg
mov
stos
sbb
lods
pop
jmp
dec
dec
lret
jle
into
adc
mov
add
lods
and
adc
sub
adc
cwtl
fwait
xchg
ss
xchg
push
repnz
mov
cmpsl
xchg
sub
insb
repz
aam
fisubl
rcl
mov
iret
cli
adc
inc
rcll
sbb
gs
arpl
adc
jecxz
out
das
ds
adc
aas
decb
fisubl
and
xchg
fcoms
stos
rolb
andl
test
adc
cmp
jg
aas
outsb
std
cmpsb
or
add
jnp
aad
mov
mov
push
mov
mov
jp
or
in
stos
mov
fsubrp
mov
ja
mov
test
in
cwtl
loope
push
add
test
push
ret
pusha
test
mov
sub
mov
xchg
sub
dec
lret
loop
nop
or
add
lock
sbb
sti
ds
ds
mov
adc
push
dec
ret
pop
pop
inc
mov
shr
mov
push
fldcw
dec
mov
dec
insb
add
xchg
sbb
dec
lret
fwait
int
ret
push
rcrb
lcall
sti
mov
mov
xchg
push
mov
add
push
in
lret
dec
lahf
in
testb
movsb
iret
ss
movsl
mov
lea
or
xor
mov
push
xchg
add
lea
inc
sbb
and
fdivrs
or
fwait
sbb
jbe
test
sbb
jne
jns
mov
fsubr
jp
movsb
add
imul
mov
mov
jb
aas
lret
mov
xchg
push
lret
movsl
jmp
popf
iret
add
aas
repnz
pusha
cld
dec
sbb
add
cld
repnz
cmpsb
mov
inc
bound
cld
outsl
pushf
fs
and
jecxz
scas
and
les
rcrb
lods
adc
sbb
rorb
cmp
in
test
pop
push
addr16
jno
idivl
dec
lods
cmpsb
mov
or
in
test
ret
or
push
mov
mov
xlat
xor
filds
fisttpl
or
inc
outsl
imul
or
push
shrb
xor
sub
sub
inc
ret
adc
sub
call
imul
mov
mov
jns
xchg
sti
lods
daa
repz
cmp
mov
ja
or
xchg
mov
adc
jne
xor
fidivl
and
mov
dec
mov
jl
loope
enter
scas
xchg
pop
dec
shlb
sub
sbb
pop
test
out
xchg
cmp
lock
rcl
and
sarb
dec
inc
pop
jle
push
push
inc
mov
push
add
andl
out
lds
loope
jmp
out
pop
jge
clc
popa
sub
out
popf
in
lret
movsb
sub
outsb
add
idivl
jmp
js
fxch
mov
mov
cli
pop
adc
mov
xchg
lock
mov
je,pn
out
push
aad
inc
setle
jl
add
aas
movaps
aas
icebp
dec
push
mov
mov
repz
ds
jns
xchg
pop
adc
sub
adc
xor
mov
dec
inc
and
shrl
jle
jne
std
test
cwtl
rorb
pop
xor
jae
sub
scas
sbb
mov
inc
out
in
mov
adc
adc
gs
inc
inc
jl
mov
sbb
cwtl
scas
pop
mov
push
fnstsw
xchg
out
testl
aad
mov
loopne
cmc
mov
add
sbbb
xor
xlat
les
xchg
pop
inc
cmp
popf
sar
bound
adc
fcomps
cmc
dec
iret
pop
in
push
mov
and
orb
fildl
test
xor
pop
dec
cltd
call
mov
xchg
or
cmp
mov
adc
cmp
adc
jmp
jl
add
sub
push
push
pop
jae
mov
roll
pop
jp
sub
bound
sbb
movsb
xor
pop
ljmp
je
add
pop
sar
fidivrl
loopne
mov
xor
clc
lcall
push
dec
and
inc
mov
loopne
rcrb
and
cmpsb
pop
aad
mov
push
dec
adc
pop
push
fiaddl
data16
popf
addr16
cwtl
addr16
jno
cmp
add
arpl
rol
aaa
ret
mov
jg
sub
movsl
xor
mov
cmp
sbb
pop
mov
inc
movq
addr16
roll
bound
cmc
dec
sbb
je
or
xor
fisubs
sahf
mov
dec
inc
dec
push
sbbl
and
sbb
lret
out
pop
jp
in
mov
inc
in
cmpsl
mov
dec
repnz
cmpsl
push
cmc
test
out
arpl
dec
jbe
mov
mov
dec
inc
push
xchg
xor
push
aam
ss
pop
out
xchg
add
or
xchg
mov
lret
bound
jno
mov
pop
pop
ljmp
dec
loope
lods
ss
mov
test
cwtl
fiadds
mov
je
ds
lahf
sbb
cmp
xor
xor
insl
cwtl
adc
jl
or
mov
shll
roll
gs
ds
pop
xchg
cmc
rclb
lock
cmp
pop
mov
test
popf
enter
mov
dec
test
mov
ficomps
xchg
and
call
pop
jae
jecxz
icebp
fldt
mov
push
popf
jl
pop
negb
scas
setle
loope
cmp
xchg
lods
sub
mov
mov
pminsw
in
sti
mov
stc
cmp
out
outsb
out
fs
lret
aad
outsb
pop
shl
push
push
pop
dec
mov
mov
add
int3
dec
inc
pop
jmp
jmp
mov
jle
nop
dec
subb
iret
xchg
xor
scas
fnstcw
dec
inc
imul
push
add
shrb
addb
and
add
lret
sub
in
and
cmp
adc
js
xor
push
mov
int3
dec
call
test
cmp
inc
dec
out
jne
pop
jecxz
mov
add
mov
iret
dec
subl
or
fdivrs
dec
mov
int3
fstl
aad
mov
mov
test
xor
mov
mov
mul
sbb
cmp
mov
and
out
sbb
jl
push
pop
out
das
mov
pop
push
xor
mov
mov
jnp
jnp
jb
push
ror
mov
rep
sbb
add
pop
pushf
push
fsub
pop
sub
and
mov
pop
ret
jl
clc
pop
pop
scas
ja
pop
xor
jge
xlat
in
jecxz
sub
sbb
les
xchg
xor
icebp
scas
in
test
arpl
jg
cld
fucomp
mov
sbb
outsl
pop
xchg
scas
mov
jge
add
test
aad
pushf
and
ja
sti
mov
adc
mov
adc
or
loopne
jno
icebp
stos
push
xchg
mov
imul
roll
mov
push
push
inc
cltd
aaa
sbb
movsb
out
lcall
xchg
mov
push
or
stc
daa
mov
cmp
mov
shll
adc
fs
cmpsl
fistpll
adc
cmc
in
add
arpl
adc
sub
in
leave
push
push
sbb
push
jo
add
xchg
add
repz
sbb
xchg
push
xchg
push
imul
cltd
push
insl
hlt
stos
outsb
sub
test
fldcw
cmp
add
mov
cld
and
pop
mov
cltd
add
jbe
call
cmpsb
leave
leave
rcl
mov
je
adc
repnz
mov
cs
adc
or
dec
hlt
jle
xchg
clc
sbb
jo
adc
xchg
iret
pop
fs
orb
stc
jecxz
mov
mov
dec
test
aam
xchg
and
push
lret
and
xor
add
sub
data16
dec
in
xor
inc
mov
scas
and
in
movsl
push
ljmp
repnz
lods
xchg
sbb
movsb
stos
sub
insb
dec
mov
add
xor
xchg
cmp
jmp
mov
sub
faddl
xchg
sbb
cmp
cmp
fs
mov
out
dec
outsl
push
out
push
mov
jge
xchg
xchg
popf
shlb
cmpsl
adc
lret
xor
jno
cmpl
mov
xchg
lret
adc
mov
inc
sub
cli
push
dec
imul
push
mov
test
mov
push
push
mov
cs
push
add
fbstp
pop
push
xor
push
repnz
inc
xchg
insb
in
add
sub
pop
das
sub
leave
inc
pop
punpckldq
add
xchg
mov
icebp
int
ds
sub
mov
shrb
jge
in
xor
enter
daa
repnz
cmpb
and
out
clc
adc
mov
or
testb
cmp
rcr
mov
sbb
imul
fdiv
sub
aas
xchg
push
lock
mov
popf
in
lahf
jmp
orl
out
dec
lea
cmpl
pusha
bound
sbb
cmp
lock
popf
and
outsl
in
dec
adc
hlt
daa
cmpsb
stos
jecxz
and
pop
lock
dec
push
cmp
popa
inc
pushw
ret
mov
data16
pop
jmp
fmull
jle
cli
xchg
sub
xchg
dec
mov
push
xlat
and
mov
clc
dec
out
bts
add
hlt
fwait
pop
hlt
ficoml
xchg
mov
call
jecxz
push
pusha
gs
pop
mov
mov
dec
jl
fstpl
fisubl
daa
add
or
ret
dec
add
fcoml
add
or
add
lret
add
sti
mov
jl
in
lret
fwait
out
cltd
push
pop
pop
mov
dec
test
push
xchg
jo
push
lahf
jbe
cmpsl
and
and
xchg
pop
fisttpl
pop
pop
call
or
test
pushf
lods
aad
out
out
pop
xchg
mov
imul
mov
lcall
mov
icebp
push
xchg
rol
sub
mov
outsb
aas
bound
fimull
push
xchg
and
out
dec
jae
cs
decb
fisttps
sub
roll
pop
or
stc
pop
insb
pop
mov
mov
inc
cmp
xchg
fldt
xchg
addr16
jg
push
fisttpll
stos
adc
in
in
mov
sub
mov
jnp
adc
es
add
jne
insb
mov
popa
pop
cmc
js
add
std
outsl
lret
mov
mov
mov
cmp
xlat
mov
jnp
adc
lods
in
in
xchg
mov
or
es
cmp
popf
ret
addr16
sub
push
inc
add
stos
cmp
xchg
sub
shrl
sti
push
jecxz
mov
fsubrl
mov
mov
in
add
and
sbbb
imul
or
pop
jbe
inc
add
data16
addr16
gs
loop
out
gs
clc
sbb
iret
and
mov
mov
in
push
shll
adc
pop
bound
filds
fldenv
inc
cmc
pop
cmpsl
add
or
sub
cmpsb
mov
ljmp
or
lock
dec
clc
inc
aas
iret
adc
mov
pop
inc
adc
push
mov
add
imul
jne
jle
sti
xchg
into
stos
cmpb
jmp
adc
mov
xchg
negl
mov
push
pop
xor
dec
out
ret
add
pop
jne
xor
cmp
aaa
xor
mov
pop
xchg
arpl
arpl
inc
push
or
pop
popa
cmp
sbbl
jo
roll
cli
mov
fldt
adc
adc
xorb
cli
outsl
sub
sbb
stos
nop
jne
js
incb
or
out
inc
vmaxss
leave
sbb
mov
lods
push
sub
lods
icebp
or
ja
adc
jmp
push
dec
notl
test
sbb
roll
sub
push
sub
addr16
dec
pop
mov
xor
and
cwtl
into
pusha
jno
cmp
cmp
add
aaa
out
bound
gs
xchg
enter
mov
daa
repz
mov
popa
and
ficoml
xor
cmp
cmp
mov
push
push
sbb
pop
dec
dec
out
neg
shll
ss
fs
stos
mov
aad
or
adc
push
pop
xchg
adc
orl
arpl
movsl
push
cli
adc
cmp
lods
xchg
sub
mov
and
leave
repnz
mov
mov
test
xor
mov
mov
pop
sbb
lcall
nop
cmpxchg
mov
push
repnz
jle
xchg
or
add
and
lcall
arpl
sbb
push
push
xor
pop
iret
inc
xor
push
fs
push
pop
aad
xchg
pop
jmp
sarl
sub
loopne
inc
mov
stc
add
rcr
mov
ljmp
xor
xlat
xor
clc
outsb
mov
gs
pop
in
scas
pop
mov
aad
test
xlat
arpl
pop
cmp
cmp
bound
adc
jmp
cld
ljmp
inc
imul
add
xor
pop
lods
mov
sbb
gs
pop
cmp
xor
mov
std
ret
fists
sahf
pop
fisubl
inc
ffreep
xor
std
cmp
loop
xchg
xchg
dec
mov
cmp
insl
andl
or
movsb
jnp
scas
and
nop
jno
ja
sarb
mov
dec
xor
mov
cmpsb
cmp
jb
jge
inc
jae
mov
movsl
push
inc
xor
nop
adc
mov
mov
push
rcrb
mov
xlat
pushf
jl
jle
je
ss
ror
cmp
daa
xchg
xchg
sub
in
sub
or
insl
divl
mov
fmuls
scas
jb
mov
ss
fidivl
add
test
movsl
xchg
loop
int
pop
or
stc
arpl
add
or
data16
fsubrl
loopne
mov
and
mov
sahf
notb
popa
and
jle
push
fsts
xchg
sub
xchg
aaa
insl
adc
dec
fisubs
cmc
je
test
out
popf
test
mov
cmpsl
jno
test
pop
cmp
lds
pop
addl
test
xlat
sbb
inc
testb
loopne
adc
rcll
fs
and
adc
imul
pop
int
push
pushf
jno
fnstcw
fs
movsb
push
mov
inc
lahf
popf
gs
repnz
test
lretw
insl
hlt
cld
mov
movsb
dec
outsb
dec
cmp
push
lods
mov
add
cmp
push
test
mov
pushf
jmp
aaa
pushl
inc
ret
sbb
test
into
int
inc
jbe
pop
rcr
shlb
dec
lret
mov
inc
dec
mov
mov
ret
fmul
xchg
xchg
hlt
cmp
aaa
xchg
mov
add
xchg
mov
dec
push
into
sbb
mov
int
mov
xchg
cmp
mov
mov
adc
inc
mov
imul
cltd
dec
out
loopne
inc
insb
inc
mov
mov
sub
push
mov
xor
mov
sub
push
ja
cli
push
mov
jnp
neg
dec
ret
jmp
xor
leave
jo
loopne
call
jmp
adc
cmp
andb
jge
sub
sahf
movsl
aam
jno
xchg
push
movsl
jmp
mov
jecxz
ret
push
dec
test
popf
push
mov
cs
subb
xor
xor
fiadds
call
and
push
daa
dec
cmpsl
push
cmp
pop
shlb
prefetcht1
inc
inc
and
xor
fsubr
mov
fsub
test
pushf
xchg
inc
cld
sub
arpl
out
cmp
xor
shlb
call
sub
sahf
test
out
cmc
jo
das
cmpsb
add
fadd
loope
xor
lret
les
cmp
into
sbb
and
xchg
cmp
sahf
out
cmp
push
dec
jg
lcall
pushf
jge
aad
daa
je
test
cmp
pop
and
mov
cmpl
push
shrl
adc
mov
negl
popa
imul
loope
pop
ficompl
pop
mov
inc
lods
dec
xchg
adc
pop
xchg
fs
js
ljmp
mov
add
mov
xchg
cmp
aad
inc
xchg
std
mov
mov
jb
leave
imul
scas
sar
in
pop
shlb
notl
adcb
fiadds
push
sbb
mov
mov
inc
ds
cld
cmp
mov
bound
shll
sub
push
sbb
and
cmc
jle
sub
ds
enter
jns
sbb
xchg
and
aas
stos
sbb
popa
inc
push
hlt
jo
or
testb
bound
call
or
pop
movl
adc
mov
cmp
ret
sarl
dec
dec
dec
cmpsl
loop
pop
jb
sub
adc
shll
ds
and
int3
xlat
or
lock
test
jecxz
fs
mov
scas
leave
leave
movb
in
aas
lcall
mov
mov
div
in
mov
adc
inc
dec
std
ja
jp
ds
sub
imul
testb
add
push
dec
arpl
xchg
testb
negl
int3
sbb
iret
or
xchg
ljmp
cltd
mov
mov
or
movsb
lret
pop
mov
inc
mov
dec
jbe
icebp
hlt
pop
jecxz
push
push
ror
das
xchg
test
stc
fcmovbe
sub
mov
bndldx
fidivs
and
aaa
rolb
ret
xor
jno
jge
sbb
push
cmp
cltd
or
ljmp
sbb
mov
mov
sub
ds
cmp
mov
mov
jns
dec
cwtl
test
add
cmp
sbb
xchg
lods
jbe
jno
movsl
gs
jg
xor
addl
cmp
and
ds
int3
push
xor
pusha
cltd
daa
repz
fcoml
add
shll
cs
sahf
ds
jge
mov
add
mov
and
int3
mov
and
mov
nop
push
int3
xor
jns
faddl
adc
lret
jg
and
mov
mov
mov
popf
mull
adc
leave
adc
outsl
inc
sub
aad
add
add
out
cs
lret
imul
push
mov
adc
mov
jo
cmp
int
repz
dec
adc
jns
cmp
int3
mov
or
ds
mov
mov
les
xor
jbe
mov
mov
test
bound
xchg
sbb
iret
jns
push
orl
xchg
xor
add
dec
cmp
push
jmp
mov
cmpsb
inc
fisttpll
lock
add
loope
rcrb
xchg
outsb
mov
test
lea
push
inc
in
leave
into
add
jb
xlat
test
jle
add
call
jmp
divl
aas
rolb
or
mov
push
push
loopne
lods
fsubl
mov
loop
xchg
bound
jne
jecxz
ja
add
adc
dec
repz
or
xor
mov
out
pusha
pushf
test
pop
xor
stos
adc
ret
xlat
mov
add
jmp
mov
sub
pop
enter
and
inc
frstor
sar
jns
sbb
mov
std
cld
lahf
pop
testb
or
cs
repnz
lds
fidivrl
out
lahf
add
pop
aaa
les
xchg
push
in
pusha
dec
jns
icebp
xchg
inc
dec
cmpsb
mov
clc
mov
insb
cwtl
or
lret
sbb
js
add
pushf
gs
icebp
adc
pop
pop
andl
or
bswap
bound
add
stos
nop
repz
cltd
stc
pop
in
mov
sbb
jae
dec
subl
mov
int3
jg
enter
dec
or
mov
fnsave
sub
ret
mov
divl
adc
inc
push
jae
stos
pushf
out
xlat
sub
pushf
enter
adc
iret
insl
and
lcall
xchg
sub
jbe
vmptrst
ret
int3
mov
sub
mov
cmpsl
adc
mov
mov
in
mov
dec
jb
test
les
inc
mov
int
ljmp
js
mov
inc
aad
in
sbb
popf
xchg
jae
test
in
notl
push
pop
or
movsl
outsb
mov
lods
dec
mov
mov
pop
inc
pop
or
cmp
jnp
adc
pop
jp
call
jl
int
out
leave
dec
push
cli
scas
pop
das
inc
in
pop
call
mulb
mov
push
sbbb
shrb
sbb
xchg
notb
iret
jmp
movsl
cmp
or
lret
inc
sahf
cmp
aaa
aam
mov
xchg
or
pushl
aaa
lcall
in
loope
mov
imul
dec
es
add
repnz
mov
mov
into
insl
dec
jmp
jge
pop
lock
ret
aad
push
mov
in
push
add
push
push
js
aad
movsl
sub
clc
bound
movsb
push
cmpsb
popf
sub
mov
aaa
cmc
sub
pop
xor
sub
mov
mulb
sbb
jno
xor
iret
add
test
pop
cmp
xor
sbb
cltd
insl
lret
bound
adc
jae
jmp
in
daa
mov
insl
lea
jp
inc
js
ss
cmp
iret
xchg
in
lea
fstpl
jp
mov
stos
std
or
xor
add
inc
and
pop
or
sub
negb
mov
xchg
push
cmpsb
movsb
sub
stos
ja
lcall
xchg
rorl
pushf
cld
mov
sbb
jno
dec
call
inc
pop
dec
and
cmp
xchg
cmpsb
out
pop
xchg
into
mov
lret
stos
sahf
out
movsb
into
imul
scas
xchg
xchg
es
mov
imul
add
hlt
xor
cmpsb
mov
cmp
cmc
aad
cmp
dec
js
sti
pop
xor
loopne
add
sbb
rcll
cmp
inc
ret
lods
nop
ds
cmp
mov
xor
es
or
popf
es
es
jo
inc
inc
in
xorl
push
xor
sahf
pcmpeqb
jb
lds
sti
movsl
imulb
cmp
mov
sub
stc
fdivrs
pop
mov
xor
hlt
cmp
les
xor
and
pop
mov
outsl
adc
push
and
jnp
lret
mov
mov
sbb
subl
mov
int
add
inc
xchg
pop
ss
cmp
xchg
add
mov
insb
or
lock
cmp
jp
xor
push
xchg
shrb
loope
pusha
adc
fimull
push
pop
jmp
xchg
shll
stos
push
mov
idivl
or
addr16
mov
mov
stos
loopne
xchg
jecxz
jno
pop
cmp
cmp
arpl
adc
movb
stc
rorl
test
dec
cmp
sub
mov
clc
mov
mov
int3
insl
cld
pop
xchg
je
sub
mov
adc
sti
std
inc
shlb
lods
outsb
ret
rol
mov
lahf
lock
out
inc
xchg
dec
lea
add
lret
shll
xor
nop
ds
push
sub
xchg
cmp
inc
es
lock
pop
push
xchg
pushf
xchg
push
stc
shl
nop
loop
mov
pop
cmp
movsb
out
stc
icebp
rcrb
js
dec
aam
jl
arpl
cld
push
or
cmp
out
jne
inc
xchg
int
mov
aad
adc
movsl
mov
aas
mov
popf
mov
xchg
push
leave
adc
jmp
mov
mov
jle
enter
jecxz
inc
inc
repnz
lcall
mov
stos
fisubs
movsl
add
mov
mov
arpl
scas
incb
xor
ss
rorb
lods
mov
mov
stos
mov
and
xchg
adc
inc
push
add
rcrb
xchg
cmc
daa
mov
fidivrs
jns
cld
rcl
fisubl
pop
and
pop
leave
fdivp
sti
test
int
dec
out
loope
push
lea
push
adc
cltd
repz
cmp
jne
push
push
insl
push
mov
sbb
fldenv
pop
xor
int3
hlt
or
push
xchg
xchg
outsb
sbbl
sti
je
fwait
outsl
inc
sbb
inc
mov
jecxz
insb
ljmp
ljmp
jecxz
inc
cmp
sub
aaa
loope
mov
rcr
mov
sub
movsb
pop
ss
bound
push
out
xchg
dec
sarl
sub
jne
dec
pop
mov
ja
mov
xchg
jg
lods
ja
fucom
popf
scas
outsl
push
decl
arpl
push
sub
push
call
sbb
pop
xor
inc
test
inc
lods
dec
rcrl
js
insl
dec
xor
gs
testl
inc
out
add
nop
cmpl
out
out
mov
jecxz
pop
pop
bound
ficompl
mov
imul
adc
mov
mov
loopne
repz
sbb
or
repnz
mov
adc
pushl
and
mov
pop
lds
push
mov
cmpl
push
out
mov
sahf
mov
mov
jno
clc
xchg
sbb
in
mov
insl
jge
push
cltd
jge
add
lahf
lahf
bound
mov
xor
xor
shrb
in
inc
dec
cmp
fadds
in
scas
js
gs
sub
sbb
popl
add
pop
mov
jae
xor
xor
jo
cltd
lods
dec
cmp
pavgw
iret
jae
cmp
inc
cltd
loopne
add
sbb
jo
cmpl
pusha
jmp
scas
push
mov
insl
jg
es
xchg
push
pop
pop
aaa
xchg
jb
int
cmp
popf
push
jae
adc
aaa
fcoml
mov
sbb
stos
int3
and
pop
cmc
into
ss
insl
hlt
and
aaa
aam
mov
jno
test
mov
int3
or
shl
or
and
jg
fwait
jbe
lcall
lods
shl
dec
lahf
adc
in
cmpsl
mov
punpckhwd
adc
sbb
lret
adc
xor
push
ffree
scas
mov
pop
jb
push
sub
aam
pushf
mov
nop
pop
ret
out
rcrb
mov
sbb
add
inc
scas
es
cmp
aad
jae
and
fnstsw
mov
orl
and
movsl
mov
or
ja
out
mov
cmp
loop
jmp
cmp
outsb
jge
stos
and
sahf
xor
sbb
and
adc
cmp
fs
fs
and
cmp
iret
pop
aaa
cmp
aam
jg
xor
jl
sbb
scas
in
pop
xor
inc
or
test
lds
fwait
mov
pushf
insl
xor
mov
cmp
jb
cmp
out
call
push
ret
push
mov
push
sbb
xor
add
dec
push
jecxz
mov
cmpsb
push
pop
xchg
xchg
push
leave
inc
sti
dec
inc
jp
jp
dec
jle
ss
xchg
jge
mov
out
pop
inc
mov
rclb
push
lods
shr
movb
shll
and
pop
mov
mov
addr16
test
ret
jmp
inc
es
or
jecxz
test
jmp
xor
jge
dec
mov
adc
aad
xchg
push
nop
lock
sahf
pop
inc
sub
jnp
jle
jne
mov
mov
push
pop
jmp
dec
mov
push
inc
out
into
mov
test
outsb
mov
sahf
stc
adc
dec
sbb
js
mov
or
or
jge
pop
popa
cs
jle
dec
jmp
neg
mov
pop
int
mov
push
icebp
repnz
loope
xchg
lahf
fwait
repz
add
sub
inc
leave
dec
cld
jno
cmc
dec
pop
jg
lcall
jge
push
lret
pusha
testl
mov
mov
pushl
mull
sbb
int
cld
inc
sbb
mov
fisubl
jl
pusha
pop
add
cmp
sbb
add
and
in
in
xlat
ja
lret
xchg
lods
mov
mov
inc
gs
pushf
pminub
fdivl
jl
insl
and
out
pop
pop
test
movsb
fbld
lahf
xor
jne
cmp
push
rolb
rorl
lds
sub
jo
lds
cwtl
into
jne
cmp
call
mov
lock
jmp
xor
lods
add
mov
pop
xor
sbb
lock
fucomp
and
test
xor
jb
jb
sub
push
dec
inc
mov
ljmp
mov
and
pop
outsb
mov
adc
pusha
outsl
hlt
lods
adc
jg
xor
sbb
ret
js
out
jbe
jmp
xor
xchg
outsb
mov
fiadds
mov
scas
fwait
sbb
xlat
aad
push
dec
ret
xchg
fwait
adc
orb
es
stc
add
iret
xchg
jo
mov
push
outsb
shrb
cmp
mov
loop
sti
lds
in
aad
ss
popa
ror
out
push
mov
mov
orb
inc
xor
mov
mov
sub
cmpsl
dec
pop
nop
cmpl
loopne
fstpl
clc
pop
std
test
pop
sarb
sub
lock
sub
add
loopne
loope
pop
ja
adc
orb
ret
in
mov
scas
lret
orl
mov
sbb
mov
xchg
gs
or
in
inc
pop
out
or
fistps
lahf
xchg
adc
ror
adc
cmpsb
push
push
jmpw
cltd
inc
pusha
pop
pop
outsl
jle
das
xchg
test
mov
lods
je
adc
sbb
lods
jmp
or
stos
add
fwait
dec
aam
js
xchg
out
or
mov
push
in
mov
ret
jg
fiaddl
xchg
adc
int
xlat
mov
pop
std
jnp
jno
mov
or
push
push
adc
int3
popa
cli
mov
sub
les
jecxz
push
out
fcompl
push
pop
jle
mov
cwtl
popf
xchg
cmp
es
lods
push
jmp
cmpsl
jbe
mov
add
into
or
jbe
pop
sbb
push
xchg
stos
inc
sub
hlt
mov
jg
adc
mov
stos
sti
dec
addl
test
pop
adc
xor
cwtl
popa
adc
dec
shlb
lret
dec
inc
mov
imulb
or
or
jno
jge
ss
jle
and
js
aam
add
outsl
or
fists
pop
enter
mov
cmp
decl
mov
mov
sbb
loop
sahf
dec
push
pop
pop
dec
sub
push
out
cmpsb
mov
aaa
sbb
loop
mov
fistpll
loop
inc
cmp
and
or
xchg
outsl
mov
jecxz
mov
addr16
cwtl
lcall
mov
stc
shrl
xor
test
sar
repz
sbb
fstp
out
sub
jo
or
psllw
and
insl
js
and
or
rolb
outsb
pusha
mov
adc
sub
jb
stos
mov
fs
lods
mov
xor
sub
rcl
lock
icebp
push
int3
lret
pop
xchg
jle
int3
std
leave
test
lahf
push
mov
push
push
xchg
sub
dec
std
daa
loop
add
lahf
imul
sahf
mov
inc
dec
adc
cmp
sbb
inc
lea
add
xchg
fs
adc
dec
lock
out
sbb
es
ljmp
loope
leave
add
repnz
call
movsl
sub
jo
xor
sbb
xchg
jmp
adcl
in
push
inc
int
sbb
mov
in
rcrl
and
loope
in
mov
test
mov
xchg
xor
rolb
mov
sub
gs
cmp
sbb
pop
adc
movsl
xchg
xor
jp
inc
call
dec
adc
out
aam
mov
aam
cmp
mov
xchg
xchg
xchg
and
push
dec
mov
xchg
ss
mov
mov
mov
xor
jno
nop
cmp
fldl
in
and
xor
mov
in
and
xchg
xor
mov
inc
xchg
adc
stos
sar
stos
jnp
pop
cmc
sbb
lds
into
mov
xor
stc
test
or
mov
xchg
add
shrb
jae
enter
sub
pop
and
stos
dec
cmp
xor
jmp
lcall
push
out
arpl
push
movsb
loopne
sub
pop
mov
push
cli
gs
sbb
jle
fnstsw
add
mov
cmc
mov
lret
idivb
mov
sub
push
je
mov
aam
push
test
je
daa
or
lea
mov
out
dec
mov
mull
outsl
loop
insb
cwtl
add
mov
insl
fsts
sub
std
scas
add
sub
loopne
xor
es
pop
mov
push
sbb
pop
xlat
stc
iret
dec
xor
xor
sti
sub
jns
loop
bound
es
or
lea
js
inc
push
add
adc
mov
mov
jg
sub
in
sbbl
push
ret
loope
jbe
fildl
lods
cltd
loopne
lock
orl
dec
int
xor
in
push
shrl
int3
cmpsb
jno
movsb
sub
clc
lret
pop
adc
in
sysenter
sbb
cltd
sub
fwait
push
imul
cmpsl
or
in
xchg
xchg
fwait
xlat
bound
push
dec
dec
mov
outsl
dec
int
adc
mov
sbb
fs
adc
mov
cli
loop
lcall
push
pushf
xchg
sahf
gs
push
mov
ret
sbb
or
or
xor
xlat
mov
in
adc
aam
mov
lahf
xchg
data16
cmp
icebp
xor
mull
sbb
xchg
cs
push
push
dec
scas
notl
sahf
inc
shl
insb
push
testl
les
jno
pop
adc
jg
mov
es
loope
sbb
jae
fcomps
pop
out
and
or
or
mov
pop
enter
xchg
jg
cld
shrl
lds
or
ljmp
repnz
js
test
fst
push
rcll
xchg
jo
jnp
mov
add
push
mov
and
inc
out
cmp
in
popf
xchg
jnp
in
rclb
jns
adc
addb
or
sbbl
adc
cld
sbb
int
sbb
mov
fimull
mov
dec
mov
leave
inc
out
sbb
xchg
push
push
push
aas
test
icebp
add
loopne
fwait
or
nop
inc
push
into
push
pop
insb
mov
scas
mov
dec
xchg
inc
icebp
loop
cmpsb
cmpb
cmpsb
loop
add
xchg
ret
dec
inc
dec
xlat
ffreep
scas
dec
push
jae
xchg
cmp
mov
or
inc
push
jg
inc
adc
stc
adc
ret
ds
ret
imul
add
xchg
cmpl
mov
js
cmpl
fidivs
test
xor
pop
fsubrl
out
xchg
sub
sub
rorw
push
adc
mov
sub
int3
mov
and
sahf
mov
shlb
mov
pushf
pop
jp
jbe
mov
dec
xor
lret
call
mulb
ret
pop
ret
subl
jmp
cmp
arpl
add
sahf
into
mov
push
jge
cmpsl
xor
mov
xchg
cmp
jecxz
push
das
adc
push
fwait
icebp
push
adc
getsec
icebp
iret
cmp
mov
jecxz
add
push
cld
nop
sbb
mov
aas
imul
sbb
push
jl
outsb
icebp
add
enter
sbb
lods
into
and
js
fcomp
mov
mov
add
jl
daa
xchg
jno
cmp
cmpsb
jae
push
popf
ret
sbb
bound
add
push
rcrl
xor
sbb
dec
xchg
pop
add
pop
xchg
hlt
out
test
imul
imul
add
and
xor
sub
test
nop
pushf
cmp
data16
inc
xor
mov
mov
mov
cmpsl
or
mov
das
xchg
cs
jb
xchg
pop
in
adc
dec
mov
ret
sub
mov
mov
sahf
lds
vphaddubq
fildll
repnz
jecxz
mov
shrb
or
push
popa
nop
push
loope
dec
mov
pop
dec
cmp
adc
or
pop
lret
in
in
or
mov
sub
call
mov
add
out
sub
jmp
sahf
ds
nop
ja
xor
daa
pop
fwait
sub
mov
sbb
adc
cld
outsb
push
insl
jb
imull
add
push
xchg
and
scas
inc
bound
negl
inc
mov
cmp
loope
inc
xchg
xlat
or
or
pop
jecxz
icebp
in
push
xorl
out
in
pop
icebp
aad
xor
repz
and
pop
and
stc
jl
ret
adc
aad
sub
add
cmpsb
adc
push
mov
loop,pn
jnp
mov
ds
pop
adc
test
push
ja
shll
push
gs
ja
cmp
mov
sub
jl
clc
jp
xchg
je
cmc
pushf
pop
cmp
sbb
lds
jge
fwait
scas
fstpt
jle
dec
adc
xchg
rcrl
iret
divl
xor
pop
add
push
cmpsb
fbstp
inc
ss
arpl
leave
mov
xchg
mov
jmp
push
enter
mov
adc
sahf
push
push
inc
lahf
in
std
in
leave
inc
cmp
popf
lret
data16
or
popa
sub
gs
cmpsb
loope,pn
sbb
mov
xor
xor
fisttps
lods
xor
ja
mov
or
lock
xchg
dec
cmp
in
jle
pushf
faddl
fistpll
pop
sbb
add
sbb
xor
mov
addr16
arpl
insb
jmp
mov
not
ret
or
sbb
loop
mov
xchg
mov
adc
push
clc
ljmp
and
in
test
ret
clc
das
push
sub
ret
pop
pop
jo
jecxz
adc
movsl
std
fisttpl
in
stos
xor
cwtl
mov
xchg
push
jge
fidivs
push
dec
mov
sub
out
mov
sub
mov
icebp
xchg
adc
das
jbe
mov
fsubl
adc
dec
and
inc
addr16
int
mov
fs
call
add
sbb
xorl
sub
testl
pushf
insl
jmp
pop
xor
and
sub
sti
inc
mov
test
std
icebp
inc
aaa
push
cmpsb
cmp
in
loope
ret
ja
jp
sub
add
aam
roll
lahf
fwait
rorb
rclb
mov
xor
pop
or
lock
push
mov
mov
mov
cmp
mov
icebp
in
jmp
std
mov
sbb
mov
clc
xlat
outsl
hlt
xchg
pop
dec
jbe
popa
mov
cli
insl
xor
inc
jle
test
mov
aaa
mov
jmp
test
and
clc
sub
inc
fidivrl
push
leave
jns
mov
inc
aad
gs
lods
xchg
pop
jmp
outsb
cmpl
add
rcrb
inc
mov
das
sbb
lods
shll
cmc
or
shrb
sbb
mov
mov
scas
inc
pop
add
adc
cmp
loop
sbb
int3
jle
sarl
or
cmp
clc
inc
xor
lds
cwtl
pop
sub
div
mov
stos
mov
mov
out
loopne
xor
mov
cmp
mov
xchg
mov
fwait
pop
pop
or
sub
pop
je
jnp
pop
xor
orb
cltd
push
jne,pt
cwtl
jmp
or
andb
loope
cltd
mov
cwtl
fidivl
xor
mov
mov
ljmp
mov
in
fs
loope
mov
int3
test
mov
mov
ss
jecxz
pop
and
std
or
jnp
mov
mov
fsubrs
dec
shll
sbbl
and
insb
movsl
adc
sarl
xchg
fs
and
aaa
sub
imul
sub
movsb
jmp
lahf
hlt
dec
jecxz
int3
iret
jo
push
jne
repnz
xchg
pop
addr16
dec
stos
dec
add
and
lret
and
insb
fildl
test
movsb
popl
mov
sub
inc
mov
push
dec
mov
ror
movsl
in
js
dec
add
add
lods
jl
outsb
je
aaa
jno
fadds
or
stos
jecxz
mov
and
mov
ljmp
fsubrl
aad
lahf
xchg
ret
jecxz
jne
enter
xor
loope
mov
sub
mov
loop
or
std
stos
cmp
les
add
aaa
pop
inc
mov
enter
xchg
xchg
jns
rorb
int
sub
adc
jecxz
mov
pop
pop
int
movsb
adc
sbb
shll
imul
cmp
ret
sbb
inc
dec
cmp
pop
gs
lods
mov
ljmp
lods
sbb
test
popf
pop
cmpsb
sub
pusha
stos
adc
xchg
jae
stos
push
stc
enter
sbb
sahf
movsl
popf
aas
dec
ljmp
inc
adc
pop
mov
adc
mov
out
ucomiss
aas
push
sub
insl
and
jmp
hlt
std
xchg
fcomi
jae
cmc
dec
popf
idivb
leave
cmovs
bound
push
xchg
add
pop
jno
adc
jne
pop
xchg
fistpll
adc
jb,pt
daa
inc
loopne
dec
or
rcll
iret
aaa
cmp
push
mov
sub
push
mov
jl
ljmp
push
out
fwait
pop
sahf
push
push
lds
push
js
xchg
xor
push
pop
push
outsl
sbb
test
aad
aam
in
clc
out
sbb
test
sbb
adcb
cli
mov
mov
fbld
add
dec
das
and
ljmp
add
pop
fsubrs
pop
fiaddl
cltd
repz
aam
adc
in
imul
cmp
mov
lock
dec
pop
pusha
pop
inc
cld
mov
pop
sub
mov
fidivrs
jns
xchg
clc
mov
push
adc
adc
sbb
push
sbb
mov
xchg
inc
push
xor
ret
outsl
bound
adc
add
data16
shrl
sbb
cmpsl
mov
sub
dec
push
mov
sbb
and
sub
and
push
addr16
negb
dec
test
adc
pop
imull
iret
outsl
push
daa
mov
mov
or
jbe
call
stc
pop
je
mov
cmpsl
cmc
imul
fwait
js
repnz
sti
add
test
mov
pushf
jae
out
daa
je
jmp
jmp
sub
rorb
ljmp
mov
xor
in
loopne
sbb
fldt
inc
cmp
out
xchg
push
cmp
pop
sbb
push
cmp
outsb
ficoml
xor
fstpt
jbe
jbe
cmp
daa
dec
addb
xchg
aad
popa
and
repnz
add
movsb
or
fistpl
inc
add
leave
jge
out
push
fs
jle
push
jecxz
dec
popa
xor
nop
mov
popa
popa
jnp
arpl
jnp
fidivrs
mov
mov
loop
sub
fnsetpm(287
adc
lcall
sub
std
aad
sbb
lcall
add
mov
adc
fs
daa
jecxz
pusha
add
ficomps
out
push
rcr
jns
lret
imul
cld
dec
lret
xchg
inc
xor
pop
lods
mov
in
nop
cmp
ds
mov
std
inc
loopne
rcl
sbb
mov
add
pop
aad
test
pop
cmp
ja
push
orb
sbb
cmp
pop
scas
pinsrw
into
je
loopne
mov
xchg
rclb
dec
iret
mov
insl
in
dec
pusha
dec
and
test
fucomip
std
mov
cmpsl
in
outsb
or
fistl
in
pop
xchg
cld
jmp
fs
jo
push
test
xchg
sarb
lods
sbb
and
jbe
push
sub
shrl
ficoms
lods
jle
stos
sub
mov
xchg
fdivs
mov
call
inc
out
iret
imul
xor
cltd
and
mov
sbb
sub
insl
imul
inc
and
stos
pop
ljmp
mov
xchg
mov
cmpsl
xor
inc
inc
roll
shl
cmp
cmp
jle
mov
jp
lds
jl
iret
adc
push
mov
mov
pop
imul
fbld
std
xchg
inc
fs
adcb
imul
add
jmp
pushf
shlb
pop
sahf
adcb
dec
cmp
dec
sbb
pop
cltd
je
jl
jg
fsin
adc
pushf
and
xchg
enter
sbb
pop
out
pop
xchg
cmpsl
and
out
cmp
sbb
sbb
jo
pop
xchg
pushf
mov
bound
loop
rcrl
xchg
cmp
xchg
loope
ja
pop
ljmp
roll
dec
add
jp
rclb
lods
scas
push
rolb
adc
shll
dec
fistpl
imul
fstpt
loopne
push
mov
mov
int
jnp
fwait
testl
or
jae
mov
and
repz
mov
rcrb
ret
push
aam
xlat
lret
mov
pop
pop
lods
dec
js
dec
sbb
mov
int3
pop
test
insl
push
mov
inc
mov
pusha
inc
cmp
mov
stc
cmp
and
adc
lcall
sbb
pop
dec
loop
icebp
push
rcl
xor
pop
les
aad
jmp
xor
rcll
ljmp
call
sbb
xchg
mov
add
in
adc
lea
icebp
jl
enter
test
loopne
adcb
in
adc
jns
icebp
aaa
pop
mov
sbb
into
mov
or
jle
sbb
jne
lea
push
icebp
and
mov
sbb
aaa
fcomps
mov
inc
jbe
adc
push
dec
jg
hlt
jbe
adc
or
jmp
push
lahf
push
notb
xor
ret
mov
dec
addb
and
xchg
dec
or
gs
dec
mov
push
inc
fstpl
pop
pop
test
xor
ja
pusha
or
call
and
shl
rclb
push
and
mov
mov
fadd
movsl
clc
lock
cmpb
jb
mov
pop
sub
stos
fidivrs
fldz
push
pusha
lahf
jmp
out
push
icebp
xor
ljmp
pusha
or
xorl
stos
jb
es
mov
push
lcall
std
dec
or
and
ret
pop
bnd
sub
shrl
mov
pop
adc
aad
adc
push
xchg
mov
push
add
or
mov
push
bound
pop
std
bound
jge
ss
lds
std
sbbb
xlat
int3
push
cmp
out
jle
dec
sarl
popa
enter
daa
sub
mov
sub
les
stos
adc
cli
nop
out
sbb
inc
inc
out
rolb
jb
scas
lret
fistl
add
cmpsb
and
xchg
pusha
pop
sub
or
sub
jne
test
mov
jno
fsubl
iret
xor
xor
xchg
mov
and
jecxz
add
lcall
popa
fldl
inc
push
or
inc
jns
cwtl
inc
pop
std
gs
jmp
mov
sbb
xor
stos
adc
repnz
sub
adc
mov
push
or
cmp
push
dec
notb
push
sub
outsl
rorb
mov
lock
mov
test
daa
sub
and
outsb
jb
ds
and
adc
xor
xchg
adc
dec
dec
or
ss
xchg
lcall
pop
jo
je
andb
mov
mov
mov
sbb
mov
aaa
xor
add
inc
push
mul
and
mov
sbb
xchg
out
dec
push
jmp
hlt
dec
out
imul
xor
push
adc
das
jg
aas
adc
pop
mov
pop
dec
xor
push
adc
pop
daa
lret
int
test
js
arpl
andb
cwtl
adc
xor
mov
repnz
adc
stc
xchg
push
inc
jne
nop
mov
fmuls
mov
and
pop
lcall
xor
cmp
into
movsl
add
mov
sbb
dec
push
push
jle
loop
and
dec
stos
mov
push
jnp
mov
push
js
or
std
cwtl
cs
and
pop
lods
jmp
or
data16
sbb
aad
mov
out
add
fisttpl
fnsave
add
jle
dec
mov
leave
cmp
jmp
add
mov
mull
xchg
repz
and
iret
add
sbb
sbb
dec
stc
test
mov
sub
ror
push
cmpsl
fs
in
fidivrs
mov
mov
insl
mov
lds
mov
cmp
in
sti
add
lcall
sub
test
push
popa
fnstsw
cmp
or
sub
loopne
addb
cli
pop
lea
decb
les
push
aam
addr16
divl
mov
lcall
imul
call
jmp
sub
xbegin
stc
je
in
sarl
fistpll
iret
cld
lret
cwtl
test
imul
lahf
aaa
sarl
cmc
nop
pop
mov
sbb
inc
or
mov
lahf
mov
or
inc
sub
frstor
pop
cmp
out
mov
fisubrs
jo
mov
inc
loopne
lds
movsl
push
fstps
mov
cli
adc
sbb
push
pushf
in
scas
shrl
pop
cmc
rclb
aaa
jbe
cmp
and
je
mov
and
pop
stc
push
mov
adc
inc
arpl
xor
mov
aaa
test
and
out
xor
mov
int3
and
add
inc
jno
mov
andb
jmp
test
add
jge
out
push
sbb
in
ror
xor
mov
mov
orl
mov
icebp
or
lock
sbb
mov
xor
mov
sbbl
movsl
dec
add
mov
leave
mov
lock
movl
push
mov
cli
push
jge
jl
dec
sbb
inc
into
jmp
mov
mov
push
adc
xchg
pusha
or
in
push
pusha
pop
test
xchg
mov
test
popf
jp
sbb
mov
ret
clc
jmp
mov
pop
jno
cmp
mov
mov
sub
mov
clc
cmp
push
sub
cli
testb
stc
jle
es
nop
test
cmp
push
cmpb
fistl
mov
jp
out
lret
into
shll
adc
and
out
mov
mov
ret
or
or
std
mov
xchg
mov
adc
adc
fs
js
sub
mov
jbe
leave
inc
int3
mov
pop
fdivs
mov
stc
fmulp
sub
sbb
pushf
or
stc
aad
sub
or
ret
fwait
jecxz
decl
push
inc
push
int
rcrl
adc
push
mov
mov
xor
sub
cltd
lea
xchg
je
mov
jmp
jo
jnp
push
mov
dec
or
jns
repnz
jb
pop
jno
or
cs
adc
mov
iret
imul
xor
mov
lods
movsl
add
push
iret
inc
lods
mov
test
hlt
pop
imul
jns
out
inc
mov
stos
in
dec
imul
insl
push
shl
shr
sbb
mov
push
sub
sarl
scas
jmp
or
aaa
jp
add
pushf
jno
adcl
mov
mov
gs
mov
jle
dec
push
push
xlat
out
inc
out
arpl
fcomip
push
pusha
mov
lea
popf
jne
inc
cmpsl
mov
test
adc
scas
enter
jb
xchg
rcrb
and
cmp
enter
lea
mov
out
idivb
dec
jp
xchg
mov
pop
std
pop
push
pop
test
dec
inc
add
shll
cmc
in
mov
scas
ljmp
xchg
pop
test
xchg
in
inc
icebp
xor
push
sub
call
mov
xchg
enter
push
xchg
fxch
aaa
sub
iret
sbb
pop
mov
out
cld
push
and
mov
fxch
sti
mov
test
xchg
into
cmpsl
and
fidivl
mov
cmp
jecxz
pop
lods
sbb
dec
jbe
adc
xchg
jno
inc
jge
sbb
test
fiaddl
loop
aam
decl
lock
or
dec
push
mov
out
xchg
and
cli
call
int3
incl
pop
jno
xor
pop
and
cmp
mov
push
jg
xor
es
and
jnp
mov
cmp
ja
and
mov
or
nop
adc
jecxz
push
push
loope
movsl
adc
les
xor
dec
dec
push
push
add
hlt
imul
sub
in
xor
bound
loop
jle
push
orl
mull
push
mov
xchg
or
out
mov
fbstp
push
icebp
out
push
or
or
jbe
add
shrl
ja
popf
cmc
ljmp
repnz
xor
and
insl
ljmp
or
xchg
imul
test
inc
mov
mov
loope
push
in
or
mov
pop
flds
push
xlat
or
sub
jb
pop
out
sti
popl
inc
inc
pop
push
push
jae
push
orl
fidivrl
inc
clc
nop
push
mov
fistl
and
pop
lea
adcl
pop
jne
add
mov
mov
lret
fwait
popf
ds
lahf
rcll
lcall
xchg
iret
sub
ja
mov
lods
daa
inc
out
in
mov
je
push
fs
mov
imul
out
jp
pushf
loopne
mov
call
es
pop
push
mov
dec
pusha
insb
loopne
in
xchg
push
cmp
ss
insl
mov
mov
lods
cs
cmp
xor
pop
lock
js
push
jbe
push
xchg
dec
clc
cltd
incl
and
pop
cmp
jmp
pop
inc
cltd
into
popa
push
jne
xchg
or
cmp
mov
xor
das
jle
jne
jge
sub
les
andb
cmpsb
sar
lock
test
add
out
roll
les
jno
xor
xchg
ficompl
repnz
push
dec
ja
roll
fwait
xchg
scas
in
push
xor
pop
cmp
imul
and
mov
aam
or
popf
mov
das
cmpb
lods
ds
sub
test
aad
xlat
addb
fcmovnu
ja
jg
stc
or
iret
pop
mov
inc
jne
mov
in
arpl
inc
into
xchg
mov
cmpsl
cmp
idivb
hlt
push
push
pop
mov
clc
xor
je
ljmp
inc
ficomps
cwtl
aaa
pop
and
push
es
cmpsl
das
lock
repz
rol
icebp
iret
into
sbb
adc
ret
orl
je
rcr
sti
ljmp
pop
fmull
add
xchg
out
mov
inc
lahf
popa
pop
fs
pop
aam
sti
sbb
scas
cltd
jo
push
pop
aas
pop
test
inc
sarl
cltd
imul
cwtl
jae
xor
into
or
sbb
adc
fdiv
xchg
loop
inc
lahf
inc
in
adc
das
and
and
cmovs
jg
pusha
lahf
inc
aam
ret
mov
shr
dec
or
in
pop
sub
in
cmpsb
xor
inc
call
sar
sahf
in
repnz
xchg
mov
loope
xor
cmp
mov
hlt
clc
in
in
mov
testb
jbe
fisubs
cld
push
enter
mov
ja
les
push
enter
jbe
subb
adc
and
loopne
mov
dec
mov
mov
cwtl
mov
or
inc
mov
clc
and
adc
outsb
mov
mov
add
lods
pusha
mov
xor
jb
lahf
sub
mov
shll
inc
push
ja
bound
arpl
jp
pop
mov
pop
push
out
mov
rorl
mov
push
add
pop
test
iret
sub
xor
stos
popf
mov
int3
negb
jmp
cli
sbb
es
data16
xlat
jno
mov
outsb
cmp
sbb
adc
xchg
insl
cs
sbbl
clc
xchg
jp
sbb
xchg
aam
fwait
lret
es
pushf
xor
mov
add
adc
jo
std
aam
mov
loopne
scas
adc
push
imul
mov
pop
lahf
pushf
fst
cs
cmpsl
mov
out
inc
js
and
push
add
jecxz
inc
and
ja
iret
das
jae
jge
aas
jmp
add
sbb
mov
fucom
fsubl
cmp
fs
sub
popa
test
shrl
out
loope
test
shr
add
jne
cmp
jb
ljmp
sbb
jecxz
fwait
pop
loope
lods
add
idivl
imul
ficompl
mov
cmp
imul
mov
push
pop
arpl
sbb
xlat
fdivl
je
dec
daa
mov
scas
and
adc
or
ljmp
in
ds
test
mov
ljmp
xor
or
jnp
sbb
rcl
clc
sbb
insl
shrl
aas
pop
ret
mov
cmp
testb
int3
dec
call
pop
jl
popa
lcall
and
repz
jl
rcll
dec
xor
cwtl
inc
jnp
decl
outsl
loop
xor
mov
mov
xcrypt-ecb
cmpsl
dec
push
or
into
add
cwtl
jp
jecxz
or
mov
fisttps
in
jge
sub
xchg
xchg
pusha
cmpl
ret
push
or
sti
jae
pop
stos
mov
data16
xor
repnz
jle
or
jmp
lods
inc
or
xorb
arpl
and
into
loopne
mov
pop
jge
pusha
add
insb
inc
nop
mov
daa
mov
pop
xchg
push
stos
mov
inc
jne
leave
xchg
fldt
in
gs
imul
test
aad
icebp
jle
mov
test
out
push
or
mov
shlb
mov
cmpsl
dec
adc
and
fistps
push
es
jnp
mov
or
lods
cltd
sbb
mov
sub
and
cs
sbb
sahf
lahf
sarl
loope
jle
sbb
add
or
ljmp
add
jl
into
leave
ficoml
add
jp
sub
inc
gs
and
testb
xchg
sub
ds
loope
ret
ret
in
stc
mov
es
imul
push
cwtl
nop
faddl
arpl
jb
xchg
rcll
cltd
repz
push
pop
mov
push
stos
sbb
or
mov
aad
sbb
pop
push
vmulsd
in
aaa
jmp
sbb
lcall
jno
data16
movsl
xor
mov
sarb
mov
inc
mov
loop
mov
push
test
adc
testb
inc
jb
add
aas
add
mov
mov
int3
scas
inc
fstl
fucom
aad
rcll
push
pop
test
xchg
sub
jecxz
pop
mov
push
mov
in
outsb
inc
xchg
aam
cs
pop
xchg
rorb
inc
add
in
loop
xchg
shll
push
loope
pusha
enter
cs
and
cwtl
in
mov
jae
arpl
push
ss
xchg
hlt
inc
test
data16
cmc
push
dec
push
fxch
int3
push
xchg
and
ja
add
or
fstpl
repnz
xchg
and
mov
push
nop
adc
dec
std
mov
and
sarb
pop
fs
push
shlb
inc
pop
cli
mov
pusha
pop
jg
push
inc
lds
mov
lock
mov
mov
aad
stc
xchg
xor
and
and
lret
cmp
outsl
mov
inc
call
pop
fwait
adc
pop
xchg
dec
xor
and
adc
cltd
mov
cwtl
lea
xor
call
push
mov
ror
mov
jb
lcall
adc
push
cmp
inc
mov
pop
and
mov
xchg
pop
mov
sti
decb
test
xor
adc
push
ret
adc
insb
push
push
xchg
repz
mov
jo
add
dec
add
dec
push
ret
fcmovu
ss
sub
js
mov
outsl
int
jb
push
cmc
mov
mov
movsb
jl
fistl
int3
into
movsb
lret
push
add
fwait
cs
or
pop
notl
fistps
sub
cs
ds
lahf
jo
test
push
subb
push
test
scas
xor
cli
sbb
insl
out
stos
xchg
jmp
xor
or
popf
daa
daa
dec
mov
sub
fwait
sbb
cmp
or
mov
push
adc
xchg
mov
mov
fcmovnu
cmpl
push
loopne
sbb
jno
gs
fprem1
push
and
in
or
test
or
dec
mov
push
shrl
fcmove
ret
sti
jle
jbe
xor
mov
cmp
dec
lock
jmp
jg
xchg
lahf
adc
inc
ljmp
arpl
push
enter
shlb
mov
aad
mov
sti
scas
inc
push
pop
xchg
subb
test
ds
scas
cli
lea
rolb
cmp
inc
shlb
das
sub
aaa
nop
gs
rolb
pop
and
or
enter
cmp
inc
in
pop
loope
pop
scas
and
mov
mov
or
addb
mov
pop
mov
hlt
lock
cmpsl
sbb
jp
pop
cmpsb
and
out
bound
or
aaa
sbb
ficoms
xchg
inc
nop
adc
ret
mov
lods
stos
andl
sarl
nop
dec
dec
dec
xor
subl
mov
push
int
ret
andl
repz
repz
movsb
mov
push
pop
addb
pop
or
dec
jnp
in
push
sbb
xor
or
test
aas
xchg
in
daa
cmp
test
movsl
dec
dec
cmp
xchg
jg
mov
int
pushf
sub
mov
loopne
int
test
stos
sbb
test
sbb
fcomps
cld
in
sbb
hlt
cmpsb
push
loop
shr
stos
cmp
lods
push
fsubrl
nop
xchg
lea
stos
xchg
icebp
add
add
mov
jmp
mov
cmc
sbb
xchg
add
movsl
fdivrl
mov
or
movsl
add
pop
movsb
js
js
sbb
cmp
in
test
insb
std
push
cmp
mov
cmp
inc
add
pop
xor
and
sbb
dec
jmp
jns
lahf
popf
jo
mov
push
mov
jo
ljmp
push
popf
mov
into
pop
mov
xor
sbb
int
popa
mov
outsb
add
add
bound
out
add
sbb
sbb
cmp
lock
pusha
outsb
mov
mulps
jecxz
sarl
mov
scas
sub
add
jecxz
scas
mov
mov
lods
push
daa
xor
adc
mov
dec
mov
mov
stos
pop
int3
movsb
ret
ja
cmp
cwtl
mov
loope
xorl
add
and
add
lret
pushf
aas
sbb
and
pop
icebp
bound
nop
mov
xchg
add
or
fisubl
jnp
sbb
fdivrs
lret
in
mov
clc
mov
push
jb
jmp
pop
xor
lahf
mov
and
sbb
es
jecxz
cmpl
sbb
rcr
push
or
pop
sbb
in
ret
leave
test
lret
xchg
push
repnz
insl
cmp
inc
and
outsb
fs
int
adc
fsubrs
jg
mov
jbe
cli
arpl
jnp
int
ljmp
adc
push
xchg
jmp
and
cmp
call
sarl
sbb
aam
sub
jl
adc
pop
push
adc
int
pop
sbb
orl
in
pop
or
enter
xor
loopne
stos
aad
pop
es
dec
xor
int3
icebp
bswap
mov
in
sub
out
cwtl
adc
mov
shlb
stos
xchg
xor
adc
pop
jne
insl
stos
arpl
xchg
ljmp
stos
and
jp
pop
ljmp
mov
inc
mov
xor
cli
pop
push
mov
inc
adc
les
imul
and
imul
pop
std
out
mov
mov
repz
stc
pop
mov
cwtl
sub
imul
es
rcrl
sbb
notb
or
aam
jle
xor
push
xor
pop
stos
sbb
ja
popf
testb
inc
adc
pop
sarl
add
fs
fsts
mov
add
pop
push
and
jge
pusha
sbb
xor
cltd
aam
cwtl
xor
push
lcall
jmp
movsb
test
push
cmp
pop
jecxz
dec
or
push
mov
mov
xlat
dec
dec
xchg
subb
mov
dec
cmpb
mov
out
clc
dec
adc
ffreep
mov
and
cmp
jbe
int
mov
push
test
xchg
popa
mov
inc
jne
andl
fsubrs
xor
sbb
lret
ret
ja
dec
mov
sar
lods
mov
or
scas
pop
fdivrs
ja
ja
inc
es
inc
dec
sbbl
test
xchg
outsl
jp
cmp
mov
gs
pop
cwtl
insl
fdivp
ljmp
adc
sbb
and
xor
popf
adc
lds
cmp
dec
mov
fiaddl
cltd
sete
test
jge
jbe
bound
jecxz
mov
test
adc
jns
jl
orb
lods
and
in
cmpsb
ljmp
fcompl
pop
jge
lahf
cli
mov
sbb
jb
pop
pusha
cmc
dec
sarl
test
mov
adc
repz
add
out
mov
xchg
inc
inc
sub
out
mov
xchg
xor
push
mov
sbb
mov
in
inc
mov
outsb
adc
fisubrl
add
std
mov
hlt
jmp
ss
jge
jmp
les
pop
xor
popa
push
xchg
sub
fdivrs
leave
cwtl
pop
xorl
fistl
xchg
out
lahf
jmp
pushf
and
movsb
mov
aaa
mov
xchg
add
lcall
insb
mov
lret
cmp
lods
clc
xorps
cltd
xchg
iret
mov
aaa
enter
shll
lret
pop
nop
test
cmpsl
shr
adc
movsl
aad
cld
jb
pop
leave
mov
ss
dec
enter
icebp
pop
add
lret
mov
sbb
lret
jge
in
pop
rcrl
std
add
pop
int3
xor
movsb
inc
ljmp
or
adc
js
jp
pop
shll
scas
stos
sbbl
mov
sub
sbb
sub
subl
jg
iret
negl
lcall
xorl
xchg
lods
out
shll
lahf
jecxz
jp
fsubp
ret
outsb
orb
lcall
and
jle
aaa
push
push
xchg
mov
push
pusha
mov
sub
aaa
dec
sbb
jmp
addr16
mov
sbb
loopne
cmpsb
cmp
out
testl
jne
fwait
sbb
ret
lret
dec
cmp
int3
arpl
add
cmp
or
rcrl
sbb
mov
sub
int
inc
dec
or
and
inc
mov
dec
outsb
push
movsb
dec
sbb
push
mov
adc
or
add
lods
scas
cmp
sub
pusha
iret
sub
push
mov
mov
xchg
outsl
ja
test
xor
aad
xlat
inc
inc
loope
popa
add
rcl
push
mov
mov
in
mov
imul
insb
ja
in
movsl
jnp
testl
adc
mov
sahf
push
lods
in
pushf
loopne
xor
lea
cmp
jno
das
sub
into
and
jge,pt
add
jge
popf
arpl
add
and
cmp
outsl
aam
cli
jnp
mov
rcll
aas
stos
dec
ss
loope
cmp
mov
lock
imul
sbb
cwtl
out
and
stos
orl
push
scas
pop
mov
in
out
pushf
insl
inc
xchg
movsb
cmp
fst
imul
fdivl
movsl
adc
push
divb
add
dec
popa
sbb
lahf
aam
aas
roll
mov
jns
sub
or
iret
push
and
iret
mov
jnp
je
or
jnp
sub
inc
stos
cmp
mov
stc
scas
xchg
mov
dec
dec
ss
mov
daa
imul
pop
ret
cmpsl
pop
adcl
cmp
clc
push
cmp
andl
addl
push
add
rcrb
and
repz
push
mov
insl
in
push
xchg
orl
pop
push
inc
sub
mov
pop
arpl
jge
adcb
cli
fnstenv
lret
sub
out
jmp
add
ja
out
sbb
mov
addr16
adc
iret
outsb
stos
sbb
mov
or
cmp
mov
mov
xchg
aas
mov
sub
cs
jnp
and
aaa
imul
xor
icebp
addr16
sub
xlat
std
sbb
ss
inc
fldenv
sub
inc
push
aaa
mull
dec
sbb
xor
or
adc
fnstcw
pusha
cld
mov
cltd
stos
jnp
push
mov
cmp
popf
jle
pop
cmpsl
xchg
and
sub
sbb
mov
stos
ljmp
cwtl
sahf
lea
or
jmp
add
enter
fldl
sub
dec
sarl
adc
out
adc
aaa
fwait
lcall
push
mov
or
adc
jp
sub
scas
stc
sub
cli
jle
enter
js
sub
outsl
popf
push
fsubrl
inc
sub
jge
es
std
mov
inc
stc
push
fwait
test
nopl
xor
test
ret
int3
cmp
add
test
cmpl
scas
push
and
pop
std
sub
shrb
mov
aas
sub
mov
orl
jp
mov
mov
mov
in
cmpsb
enter
fsubs
mov
movsb
bound
mov
jge
aas
lret
cmp
cmc
mov
jne
push
je
mov
or
inc
add
dec
dec
pushf
xor
add
xchg
inc
jb
mov
or
iret
stos
movhps
mov
movsl
mov
mov
jns
add
ror
xchg
leave
sub
inc
test
lcall
sub
fs
xchg
xchg
and
or
stc
jmp
rolb
mov
and
hlt
mov
jle
push
iret
shll
adc
jle
inc
xor
push
into
aaa
mov
mov
inc
out
push
dec
shll
push
inc
int3
xor
jecxz
jae
sbb
mov
push
jae
scas
jb
lods
push
xor
stos
cwtl
rclb
xchg
inc
add
pop
nop
fs
je
int
aad
stc
ret
outsl
sbbb
scas
out
loop
pop
out
push
stc
jl
jle
cltd
jnp
insl
add
fdivrp
das
cwtl
in
push
ror
scas
add
test
xchg
jecxz
dec
shrb
push
xchg
sub
xchg
and
aad
jbe
xor
arpl
push
push
jmp
inc
fisttpll
sub
bound
negl
pop
into
dec
fdivl
cmp
mov
sahf
rclb
or
jno
or
inc
mov
test
sahf
fldcw
ret
xchg
push
sbb
subb
lret
pop
rcrl
sub
dec
shl
inc
inc
outsl
and
sbb
mov
clc
cmc
inc
jmp
xchg
xchg
ret
test
dec
iret
fcoms
dec
cmp
cmpsb
cwtl
test
xchg
nop
cld
jns
ds
ret
mov
lds
push
inc
in
cmp
pop
xor
sbb
out
popa
xor
lret
popa
fwait
dec
mov
sub
mov
ret
pop
inc
lea
testb
or
xchg
mov
and
xchg
mov
adc
cmp
cmp
or
int
sub
sub
sub
in
xchg
push
dec
hlt
jae
lods
das
sub
fucomi
add
sti
lds
and
aas
push
inc
ljmp
mov
dec
pop
cmp
sar
inc
ficoml
test
push
xor
xchg
push
mov
jne
in
sbb
push
push
fcmove
cmp
jle
xchg
mov
in
xchg
adc
pcmpgtd
enter
out
adc
shll
cmp
lahf
push
push
or
je
pop
scas
inc
popw
out
mov
lds
mov
insb
jbe
lock
sbb
push
cmp
loope
test
mov
push
push
jns
cmpsl
lods
dec
movsl
loop
inc
stc
scas
lea
xchg
andl
mov
or
les
or
cs
adc
or
jmp
pop
scas
outsl
aaa
adcl
sarl
pop
dec
jmp
cmp
mov
test
xor
inc
cmpsl
dec
insb
jp
jle
pop
or
es
nop
dec
jae
and
push
and
mov
add
nop
adc
repnz
fmull
test
rclb
add
sbb
in
adcb
aaa
dec
sbb
mov
push
movsl
insl
dec
das
test
push
xchg
mov
pusha
popf
subb
lret
test
mov
pusha
into
mov
pop
jmp
loope
and
ds
paddd
test
scas
cmp
ljmp
fs
jae
sbb
pusha
lret
mov
scas
jno
add
loopne
sbb
mov
fucomp
call
hlt
arpl
fs
arpl
mov
stos
or
jmp
loopne
lds
cmc
aad
sbb
jmp
lods
test
xchg
xchg
jecxz
divb
adc
stc
mov
mov
imul
ror
xor
xor
xlat
shlb
les
ja
out
inc
outsl
sbb
pop
and
add
push
daa
dec
push
xor
loopne
pushf
lahf
add
jae
mov
adc
lret
ss
mov
fwait
pop
mov
xchg
jge
mov
nop
rcrb
test
fcomip
pushf
arpl
inc
mov
lods
push
out
decb
xchg
and
inc
sbb
hlt
daa
inc
push
and
xor
adc
add
sbb
mov
push
jnp,pn
sbb
xor
xchg
inc
daa
mov
stos
xchg
clc
ljmp
or
mov
pop
adc
into
mov
dec
insl
lcall
pop
sti
arpl
pop
cltd
imul
out
dec
shrl
je
xor
and
xchg
fdivl
or
dec
imul
lret
inc
jo
jne
popf
fwait
or
loope
xor
inc
mov
cmp
xor
ljmp
lret
int
cli
add
sti
test
mov
outsb
clc
mov
test
and
lock
adc
inc
test
adc
xchg
das
negl
push
sub
fstpt
ret
mov
xchg
cmpsb
call
sbb
stos
shrb
loop
lret
call
pop
dec
jne
add
shrb
or
mov
cmp
push
mov
pop
movsb
pop
inc
stos
add
in
cmp
imul
imul
popa
into
enter
xor
cmp
test
mov
lods
jg
lret
xlat
fwait
test
dec
in
sbb
xchg
jmp
insb
or
popa
imul
sahf
gs
and
repz
pop
cmpsb
mov
rcrb
pop
repz
test
lret
xchg
ss
fcomip
test
pop
in
fbstp
lods
nop
inc
cli
mov
mov
clc
insl
cmp
mov
es
rcrl
cmovnp
mov
in
pop
xchg
jb
push
test
bound
nop
sbb
mull
int3
dec
lods
push
adc
xchg
cmpsb
push
bound
lahf
push
mov
push
xchg
mov
adc
cmp
inc
mov
dec
insl
dec
scas
std
sti
cltd
dec
xlat
sub
push
sub
sahf
in
xchg
out
stos
push
pop
insl
mov
add
sbb
cmp
incl
pop
dec
and
push
mov
imul
repz
cmpsl
push
arpl
mov
popf
mov
dec
fs
mov
out
mov
hlt
sbb
adc
lock
ss
cmpb
js
fiaddl
dec
fistpl
lods
push
dec
shlb
dec
out
test
repz
aad
push
cmp
clc
xor
cmp
pop
fists
pop
dec
es
jnp
js
cld
mov
cli
mov
scas
dec
aad
bound
loopne
daa
rcrb
dec
jp
add
loope
mov
adc
lret
xorb
shl
aas
fcompl
mov
in
pop
cld
dec
jmp
in
xchg
aad
cmp
xchg
sbb
das
sub
out
cmp
ja
fld
or
mov
push
aam
dec
jo
jmp
icebp
xchg
dec
add
push
mov
push
ds
imul
sarl
jbe
or
outsb
test
sub
sub
inc
nop
mov
pop
je
inc
xor
and
cli
dec
cltd
mov
enter
sbb
pop
jno
in
ret
in
mov
adc
dec
int3
cmp
insl
inc
jo
or
popa
lret
and
ljmp
dec
nop
ds
xor
push
dec
dec
mov
scas
mov
stos
mov
add
sub
call
xchg
fisubl
repz
xorb
loopne
outsb
push
pop
inc
pop
out
in
dec
jle
fcmove
out
xor
dec
cmpsl
repnz
aaa
and
rclb
mov
lods
adcl
push
sbb
and
adc
cmp
je
pop
scas
pop
sub
movsl
dec
sub
and
jl
jnp
and
push
sbb
jnp
jecxz
out
sti
sub
jae
jmp
cmp
push
fisttps
pop
loopne
in
jecxz
push
repz
or
cmc
dec
xchg
xor
or
bnd
aam
sbb
mov
or
mov
cmp
mov
test
fisttpl
jmp
xor
mov
xchg
cmp
xor
push
in
stos
xor
xchg
mov
dec
aad
jecxz
jle
adcb
and
pop
aas
jnp
call
gs
or
sahf
andl
push
dec
mov
ja
sbb
jo
mov
das
daa
es
jbe
push
jbe
mov
lret
outsb
out
jne
dec
ss
movsb
shr
in
inc
xchg
ljmp
aam
inc
mov
idivl
popf
shl
xor
mov
shrl
push
test
dec
mov
in
arpl
cmp
repz
push
aas
jno
mov
inc
xchg
dec
mov
pushf
fbstp
and
hlt
outsl
js
jae
lock
std
xchg
daa
add
push
adc
pop
and
fcompl
add
mov
test
jo
mov
dec
mov
cmp
movsl
je
inc
and
xor
fwait
or
mov
mov
addr16
xor
jno
mov
addr16
into
cmpsl
mov
in
dec
and
mov
push
outsb
bound
cmp
mov
mov
iret
fistpll
jo
mov
add
notl
push
dec
lahf
add
or
push
or
xchg
movsl
insl
cs
mov
ds
outsl
pop
mov
out
in
subl
lds
jp
mov
mov
stos
mov
into
iret
subb
adc
movsl
sub
push
add
mov
pop
sub
clc
dec
dec
mov
cwtl
cmp
xchg
inc
out
sbb
and
stc
xchg
data16
push
clc
sbb
xchg
fcomip
das
and
push
lods
in
add
lods
icebp
and
pop
bnd
cmpsl
mov
sbb
inc
dec
nop
mov
scas
bound
shll
adc
mov
inc
daa
adc
inc
push
push
popa
dec
ja
push
jp
outsb
repz
fstps
addb
xchg
sub
mov
out
or
adc
xchg
xor
mov
push
lcall
inc
and
sti
adc
push
decb
xchg
imul
stc
adc
clc
stos
es
repnz
push
xchg
cwtl
imulb
mov
jno
add
mov
or
daa
sub
inc
imul
or
shrl
clc
sbbb
fld
testb
dec
and
mov
xchg
adc
push
cmpsl
fadd
pop
es
pop
clc
clc
pop
sarb
sub
jg
push
add
out
mov
shl
outsb
in
imul
mov
or
jno,pn
pop
sbb
jne
xchg
cmp
repnz
mov
inc
jbe
mov
lcall
lret
cmpsl
mov
cmp
and
sti
sub
cmpsl
in
push
push
push
mov
ja
inc
stos
sbb
jae
call
inc
ret
in
jno
sti
jge
mov
cmp
ja
mov
sbb
add
scas
dec
arpl
mov
pop
out
mov
pop
popl
mov
pushf
mov
andb
dec
adc
or
repnz
xor
sub
xor
adc
pop
inc
mov
fcmovb
cli
inc
shll
inc
lahf
xlat
cmpl
aaa
jae
and
aas
fs
imul
aaa
notl
inc
xor
sub
into
stc
xchg
dec
mov
fs
jbe
imul
out
sbb
lcall
pop
addr16
dec
sbb
push
rclb
push
cmp
aad
push
mov
cmp
sti
scas
pop
xchg
dec
xorl
mov
xchg
inc
test
in
jg
repz
fstl
push
xchg
sbb
sbb
mov
sarb
pushf
out
arpl
aas
adc
aam
or
insl
push
dec
mov
xlat
ret
mov
imul
dec
fcompl
mov
push
pop
push
push
xchg
stc
ss
lock
and
mov
mov
not
out
mov
movups
shr
cwtl
cli
movsb
je
dec
js
ret
sbb
sahf
jno
fs
subl
icebp
daa
loopne
xchg
inc
jecxz
cmp
cmp
les
aam
pop
mov
clc
aad
int
push
movsb
stos
int
mov
imul
dec
push
inc
adcl
push
dec
fbstp
insl
and
cmp
in
push
testb
mov
or
jge
cmp
enter
test
loop
inc
popa
cltd
cmc
outsl
lahf
daa
imul
loope
fcmovnb
xor
mov
pop
cmp
into
and
popf
repz
mov
push
pop
push
inc
xchg
pop
xor
cmc
outsb
sbb
jecxz
aaa
into
add
pop
mov
test
int3
movsb
pop
xchg
xchg
mov
cmp
fisubs
outsl
mov
scas
and
xchg
push
mov
mov
pop
xchg
mov
add
lea
xlat
das
je
imul
repnz
mov
insb
push
loopne
test
jno
cmpl
data16
iret
lds
stos
push
cmpsl
sti
mov
pop
icebp
js
add
lret
jae
notb
push
mov
movsl
jnp
inc
lea
add
inc
and
pop
out
in
fwait
std
out
mov
data16
mov
pop
sbb
jp
in
cs
jb
pop
sbb
cltd
cmpsl
inc
mov
adc
call
jl
lret
sbb
push
mov
jo
sar
add
jne
lods
sarb
js
stos
jmp
dec
clc
sbb
int
sbb
mov
fstps
push
xor
add
adc
leavew
lock
sub
ljmp
mov
sbb
shrl
lock
jmp
lahf
dec
ficoms
aam
scas
pop
pop
movl
or
pop
leave
movsl
nop
pop
mov
sbb
fstp
mov
xchg
fwait
ret
pop
dec
add
insl
mov
jecxz
test
iret
sahf
jo
jns
adc
insl
cmp
and
aad
or
dec
fistps
call
aam
jno
jl
xor
sarb
shlb
adc
std
xchg
jns
inc
mov
and
jb
and
sub
into
add
add
orb
mov
fldt
das
push
lock
add
pop
rclb
loop
sar
lret
push
cld
mov
lahf
lock
pop
stos
inc
aam
xlat
rolb
push
xchg
fsub
sub
add
xchg
sub
fisttpl
dec
test
sti
hlt
das
imul
mov
jnp
mov
mov
cli
ret
cwtl
insl
pop
mov
mov
je
push
nop
or
sahf
int
xchg
push
insb
scas
inc
push
stos
into
push
jae
sbb
fwait
test
push
pop
cmp
fs
pusha
sbb
adc
shll
int
pop
into
insb
push
ds
pop
inc
or
push
shrl
lods
pushf
popa
pop
mov
xor
dec
sbb
xor
xchg
push
jmp
mov
jno
mov
sbb
into
or
cwtl
bound
ja
cmpb
cmp
push
jmp
scas
pop
add
out
cmp
ljmp
rcrl
pop
xor
nop
fiaddl
lock
leave
imul
add
aam
dec
xchg
pop
orb
subl
jnp
dec
into
pop
das
xor
inc
sub
mov
icebp
nop
outsb
ljmp
jne
mov
mov
pop
insl
and
cwtl
shll
ja
lea
cs
dec
in
fs
jecxz
out
je
inc
or
das
ljmp
inc
and
jge
mov
dec
pop
fists
lahf
aam
loopne
pop
imul
sbb
pushf
jge
stos
rcrl
mov
pop
dec
mov
cs
lea
push
push
add
push
pushf
outsb
adc
push
cmpsl
dec
inc
mov
cmc
mov
push
jb
addr16
jnp
mov
imul
sub
arpl
mov
mov
mov
cltd
push
out
int
jne
sti
rcrb
jge
or
push
sub
int
popa
jnp
xchg
dec
gs
es
sub
mov
gs
dec
js
in
add
iret
mov
cmp
cmc
fldl
mov
ret
scas
mov
int
insb
ds
push
lods
es
mov
shll
in
aad
cmp
lds
dec
sub
aad
mov
mov
mov
mov
mov
xchg
stos
sbb
pop
push
lds
pop
pop
sbb
jnp
push
dec
lcall
nop
push
in
sarl
clc
sarb
inc
fsubrp
push
fbstp
je
dec
or
jo
test
stos
notl
dec
pop
sbb
popf
movsl
sbb
gs
sub
xor
mull
sbbl
mov
loope
push
mov
adcb
ljmp
icebp
sti
pop
aam
fiaddl
pop
jo
in
iret
mov
in
cmpxchg
lret
daa
insb
mov
ljmp
mov
sub
pop
jmp
pop
test
fists
xor
das
je
jbe
in
xchg
mov
in
xchg
call
popa
mov
sbb
lahf
mov
hlt
aas
negl
mov
xchg
mov
mov
xchg
mov
inc
adcl
jl
das
lds
push
test
ds
sbb
fs
rorb
aaa
popa
jecxz
sbb
xlat
negb
lds
mov
scas
jae
jo,pt
rclb
xlat
out
leave
hlt
pop
shlb
daa
pop
add
std
pop
xor
addr16
and
lret
adc
sub
popf
nop
mov
ljmp
test
xchg
jle
les
inc
lret
xchg
loope
xor
mov
insb
es
mov
lea
test
jae
pop
lods
push
test
lahf
pop
xchg
outsl
enter
xchg
mov
scas
sub
ret
jg
pop
add
dec
lret
data16
xchg
jg
loop
dec
in
scas
hlt
jle
push
jbe
cmpsb
sbb
loop
dec
pop
mov
add
xlat
imul
nop
add
sub
or
jecxz
xchg
aad
into
cmp
push
inc
in
cld
out
icebp
inc
sub
inc
movsl
jle
sub
movsb
mov
sbb
stos
movsb
das
js
aad
stos
pop
push
test
jmp
stc
cmp
push
pop
lock
sbb
xor
ss
push
pusha
test
cmp
inc
mov
ss
push
xor
mov
ret
mov
push
js
jp
push
test
sbb
adc
or
lcall
add
xchg
pop
or
fmuls
cmp
cmpsb
mov
jp
dec
pushf
in
aas
pushf
mov
adc
ror
nop
jnp
xchg
mov
lea
jne
mov
mov
add
push
lahf
outsb
icebp
aaa
enter
jge
stos
ss
or
fnstsw
or
pop
push
mov
xchg
stos
lock
data16
add
jle
mov
adc
dec
xchg
push
fcompl
lahf
mov
in
into
mov
stos
add
outsl
imul
and
sbb
outsb
in
popa
stos
data16
and
imul
out
test
inc
aam
mov
lods
and
mov
adc
sbb
test
es
rcl
int3
pop
imul
jo
cmpl
call
cmp
mov
ficompl
xor
jbe
push
xor
repnz
push
or
xor
jno
dec
jge
iret
mov
int3
push
subl
cmp
pop
movsl
mov
cmpl
xchg
repnz
sub
ljmp
orl
jns
popa
sub
mov
in
fistpll
pop
mov
int
jg
into
jns
enter
and
mov
loop
mov
iret
and
mov
xchg
andb
icebp
bound
dec
adc
jecxz
push
out
inc
imul
aad
cld
mov
rorl
cmpsb
repnz
mov
and
pop
ret
fimuls
xchg
fldl
jo
xchg
push
xchg
jno
adc
lock
ret
lret
pushf
out
dec
mov
or
xchg
je
test
dec
dec
cmp
movsl
and
fcoms
vminpd
add
add
mov
mov
rclb
std
xor
xchg
stos
idivb
ljmp
dec
mov
dec
dec
cli
inc
xlat
aas
xor
and
cmp
mov
xchg
movl
in
cmp
cmpb
lods
sbb
jg
pop
xor
clc
testb
into
dec
stos
mov
inc
shll
pop
mov
xlat
or
inc
mov
mov
mov
fst
fildll
pop
jne
cltd
sbb
mov
sti
mov
mov
or
sbb
mov
add
pusha
sub
adc
cmp
test
and
stos
or
ficompl
jno
push
shlb
mov
popf
xchg
push
pusha
dec
sbb
aam
push
mov
data16
jle
xor
xchg
int3
cmp
loopne
pop
pop
insl
cmp
sahf
repz
shl
in
jnp
or
inc
sbb
push
or
rdtsc
mov
std
inc
adc
mov
mov
mov
sbb
and
xchg
jmp
movsb
dec
roll
xchg
mov
cs
imul
sub
xor
mov
jno
sub
loopne
nop
push
insb
mov
in
add
and
stos
ss
inc
addr16
or
lcall
inc
jle
xor
fbstp
push
mov
jb
pop
xchg
aas
and
mov
popa
push
add
dec
add
fdivs
push
je
nop
stc
out
fisubs
dec
mov
pop
push
je
arpl
fwait
mov
dec
lea
cs
in
xor
enter
sub
sbb
jno
ds
pushf
and
dec
dec
mov
imul
push
add
cmpsl
repnz
jl
sub
xchg
dec
jle
cwtl
xchg
pop
sub
xor
loopne
lods
xchg
out
push
in
daa
dec
aam
xor
mov
stc
dec
movsl
call
or
sbbb
mov
push
pop
das
insl
arpl
or
xchg
mov
lea
adc
les
sub
in
adc
loope
pop
mov
std
dec
push
cmpsl
mov
hlt
pop
fcomps
and
dec
neg
mov
or
add
out
jns
dec
hlt
add
cmpsl
lcall
pop
lcall
mov
adc
dec
call
or
cmp
pushw
jg
pop
out
sbb
sbb
pop
movsb
inc
mov
pop
int
xchg
push
and
std
int
mov
mov
popl
push
cmc
adc
ja
orb
push
ljmp
cwtl
scas
in
clc
push
mov
push
rclb
test
add
dec
jae
mov
push
cs
lahf
repnz
in
push
xor
cmp
dec
xchg
push
shl
mov
addr16
sbb
sahf
push
hlt
sti
popf
lock
lret
xchg
andl
dec
adc
popa
lds
icebp
mov
sbb
mov
mov
jg
aas
filds
jno
mov
push
pop
loopne
mov
outsb
inc
pop
dec
dec
pushf
orl
pop
push
add
sub
inc
or
out
popf
and
inc
out
mov
ljmp
lods
xor
hlt
ret
xor
and
push
popl
adcb
inc
inc
shl
int3
ficompl
insb
test
mov
pop
cmp
push
pop
mov
pop
ret
adc
xchg
xchg
adc
das
fcomps
mov
into
rolb
mov
out
or
or
loop
mov
mov
decl
add
dec
jno
cmp
loopne
lods
adc
xchg
popf
dec
das
aaa
inc
aaa
movsl
bound
mov
push
push
or
je
into
clc
mov
clc
pop
das
in
add
in
cltd
pop
cmc
xor
and
fisubl
xchg
divb
and
mov
sti
jp
and
cmp
xchg
jg
dec
push
xor
sub
movsl
cld
sbb
js
adc
pushf
insb
mov
stos
mov
jb
imul
gs
movsb
mov
out
cmp
repnz
mov
dec
pop
mov
mov
adc
push
fwait
mov
add
and
push
push
xor
jo
push
shl
lahf
dec
adc
xchg
sti
cli
jg
mov
fimuls
sub
outsb
jb
out
and
das
stc
fstpl
sbb
cwtl
ljmp
daa
lds
cmp
mov
add
fst
or
outsb
ss
mov
jb
leave
xor
mov
addr16
loopnew
mov
cmp
sbb
xchg
lods
addb
xor
push
lret
sahf
addr16
aam
cmp
dec
incb
mov
jl
adc
mov
inc
mov
mov
enter
mov
out
xchg
fldenv
shr
pop
push
leave
lea
testb
or
adc
cmp
pop
popf
inc
movsb
fdecstp
adc
jne
mov
mov
in
imul
je
push
in
cld
mov
pop
stc
lahf
test
scas
jecxz
jecxz
sti
sub
leave
repnz
test
add
stc
jmp
and
fstps
into
lock
sbb
add
mov
js
popf
js
mov
sub
inc
fisubrl
inc
and
and
mov
push
pop
xchg
stc
cmpsb
or
sarl
jns
and
pushf
mov
push
jmp
xor
dec
jnp
cmp
repz
insb
jecxz
sub
stos
sub
fnstenv
insl
xchg
cmp
movsl
pop
call
xlat
dec
pop
icebp
clc
ret
imul
push
and
xchg
xchg
dec
inc
shlb
ds
jnp
pop
push
orl
imul
fidivrl
sbb
daa
test
xchg
es
andb
xlat
aas
cmpsb
and
xor
fildll
or
mov
add
cmpsb
add
insl
sub
xor
sti
pop
cmpsb
mov
dec
mov
push
sub
inc
jg
mov
mov
nop
je
outsb
xor
fmul
nop
jne
das
loopne
daa
add
fisttps
and
scas
mov
arpl
leave
gs
sbb
add
ret
xor
sbb
dec
sahf
dec
out
add
out
push
js
push
pushf
in
push
scas
jmp
xchg
adcl
inc
mov
out
mov
or
cld
inc
sbb
cmp
popf
and
in
sbb
hlt
repnz
add
rcrl
adc
into
pop
sub
inc
rcll
mov
or
xchg
mov
scas
cmp
insl
movsl
test
push
mov
jns
movsb
push
mov
pop
fcoms
mov
cmpsl
movsb
dec
aas
jne
fmulp
mov
insb
jmp
adc
jge
xchg
pop
ljmp
daa
insl
iret
mov
and
push
and
pop
jge
jecxz
mov
and
xchg
sbb
idivl
js
adc
aam
xorps
out
adc
popf
mov
inc
pop
stos
rorl
arpl
jae
aaa
mov
lods
clc
xor
jb
xchg
adc
fs
inc
ds
hlt
xor
test
pop
paddusb
lds
repz
nop
push
ret
cmc
js
xor
xor
cmp
jnp
or
push
rclb
stos
jo
sbbb
pop
popf
jno
jle
stos
or
mov
nop
lods
sahf
movsl
jae
xor
sub
rclb
jp
mov
rolb
add
das
paddq
sub
dec
fistpll
push
lret
xchg
incb
in
inc
loop
sbb
xchg
dec
mov
aaa
pop
mov
pop
aas
jge
leave
subb
pop
mov
dec
add
icebp
jbe
sahf
lret
stc
or
cltd
mov
scas
mov
ja
xlat
in
jns
inc
nop
shlb
xchg
fdivrl
test
push
and
and
inc
jge
test
jb
repz
iret
test
rorb
dec
push
lds
mov
xor
xorl
inc
push
or
outsl
cmpsl
add
rcll
xchg
sbb
xor
test
rclb
testl
mov
mov
and
repnz
das
mov
lret
add
xchg
rolb
arpl
imul
fs
cs
or
sub
inc
enter
adc
fucomi
lcall
cli
sub
aad
mov
sahf
int
pop
je
hlt
clc
shrb
pop
rorb
in
jl
dec
mov
lcall
movsl
mov
leave
or
enter
mov
fistpl
jbe
js
mov
data16
or
out
loop
pop
cmp
jecxz
clc
mov
sahf
mov
jg
add
ljmp
and
push
js
test
data16
dec
popa
pop
shld
xchg
lea
push
shlb
and
mov
test
dec
repz
cli
pop
lock
add
fs
stos
insb
pop
pop
xchg
pop
insb
mov
mov
pusha
pop
fstpl
add
loopne
mov
mov
sub
mov
jns
or
movl
sub
pop
mov
sub
adc
pop
test
add
stos
jl
inc
mov
mov
repz
mov
and
xchg
jae
stos
xor
sub
sub
cmpsl
sub
popl
add
ds
imul
outsl
cmp
ss
or
fisubs
xchg
push
repnz
addl
mov
leave
stos
dec
pop
sti
jns
xor
mov
cmp
pop
xor
or
inc
js
cmp
stc
dec
xchg
ret
mov
out
sbb
leave
ja
xchg
add
mov
popf
mov
aad
addb
cmpb
jns
xlat
mov
hlt
shll
test
add
call
shl
repnz
out
push
sbb
cmp
inc
movsb
or
movsb
lahf
cmp
sarl
clc
cmp
pop
mov
iret
cmpb
addr16
xchg
imul
arpl
test
cld
sub
cmp
leave
mov
movsl
test
add
jae
sub
sub
decl
into
ret
xchg
andb
pushf
jno
jg
or
mov
dec
lcall
dec
mov
mov
and
sub
add
add
jb
xchg
popf
jg
mov
ds
adc
pop
repz
lds
push
je
rcl
cmpsb
or
imul
enter
pop
repnz
cmp
dec
in
sbb
pop
pop
lret
fwait
sbb
shrb
mov
pushf
ret
push
rol
pop
leave
mov
adc
pop
int3
push
jbe
push
mov
inc
enter
xlat
aaa
fwait
sbb
lahf
xchg
addr16
push
xchg
cmp
repnz
repnz
mov
adc
ds
mov
ss
pop
aad
mov
push
out
mov
mov
add
loopne,pt
lds
int
int3
mov
imul
mov
xchg
mov
jmp
call
dec
jbe
movsb
cmp
cs
dec
fwait
push
data16
sar
sti
ds
adc
xor
dec
ret
arpl
dec
xchg
test
scas
leave
insb
cmp
call
and
add
adc
leave
rclb
xor
in
pop
std
mov
mov
lods
ds
jo
addr16
out
mov
add
or
xor
into
int
inc
xor
adc
paddsb
mov
xchg
aas
insl
jbe
ret
ret
cld
add
or
test
mov
outsb
push
cmp
ret
xchg
mov
add
cmpsl
jns
sbb
xchg
push
aas
cmpsb
pop
mov
xchg
push
jmp
filds
mov
aas
lods
mov
std
lods
jo
pop
hlt
aam
inc
dec
ficomps
mov
repnz
fildl
cltd
add
sub
fst
inc
xor
loop
mov
roll
lea
in
push
dec
xchg
je
in
ss
jb
in
xor
popa
inc
icebp
cmc
cmpsb
popa
xor
push
mov
stos
and
jg
pop
arpl
jb
aam
popf
pop
mov
in
roll
std
jmp
and
es
sub
mov
jb
mov
icebp
faddp
in
cmp
and
test
inc
mov
mov
shll
stc
cmpsl
add
inc
nop
imul
pusha
mov
xor
pop
sahf
sbb
rorl
out
ja
dec
scas
cmp
cmp
push
jnp
push
je
fs
loop
cld
inc
aaa
lods
add
fistl
push
les
mov
cmp
loope
pusha
push
mov
nop
adc
out
mov
sub
sbb
sub
fucomip
dec
push
sahf
inc
and
ja
shll
int
pop
das
loope
pushf
mov
cmp
mov
jb
call
xlat
mov
pop
aaa
pushl
xor
pushf
andl
adc
icebp
adc
shr
push
int3
and
sarb
loop
adc
and
jg
popf
adc
out
out
pop
fs
clc
mov
pop
cli
mov
dec
test
test
mov
and
cmpsl
movsl
dec
call
dec
adc
sbb
les
stos
mov
inc
dec
jmp
adc
dec
dec
aam
jo
in
arpl
push
sub
test
js
or
mov
or
pop
sbb
inc
loopne
lea
xor
xchg
mov
push
scas
stc
or
or
dec
xchg
ljmp
out
and
and
push
cmp
mov
les
mov
and
inc
repz
adc
fs
jl
lea
iret
push
xor
jge
and
out
and
sub
scas
in
cmpsl
or
pop
xor
sub
mov
inc
sub
jbe
xchg
sub
test
fwait
pop
lock
sbb
movsl
sbb
mov
stos
sarl
adcb
lcall
xlat
adc
mov
ja
mov
push
mov
mov
lcall
rcll
adc
in
cmp
jmp
test
js
popl
fcompl
andb
or
push
xor
lods
pop
and
pushf
lds
mov
add
lds
mov
pop
xchg
adc
fcmovbe
sbb
adc
inc
pop
imul
or
fildl
dec
dec
test
pop
mov
je
inc
xchg
and
rclb
clc
cltd
mov
ljmp
adc
out
leave
sbb
pushf
fldl
ja
stos
pop
mov
dec
pushf
add
add
mov
cmp
loopne
or
xor
rclb
lahf
aam
ljmp
fs
xchg
adc
mov
sub
adc
push
arpl
adc
out
aaa
jb
pop
cltd
movsb
bound
dec
sbb
inc
frstor
lret
imul
jmp
jp
jnp
mov
sbb
jo
shrl
mov
rcrb
negl
and
jmp
jmp
push
xchg
adc
and
dec
adc
jo
scas
mov
mov
fimull
ret
shr
jno
popf
sub
fcomp
cmp
xlat
push
hlt
fmul
pop
jmp
pop
fstl
cs
mov
add
or
pop
mov
push
add
andb
fisubs
adc
fcoms
mov
pushf
rcrl
jnp
cli
jo
push
xchg
les
bnd
lds
xor
cli
shlb
int3
and
gs
jl
jle
gs
pop
or
lods
sbb
sbb
mov
hlt
adc
mov
nop
sti
jp
mov
bound
xor
sti
imul
dec
hlt
xorl
test
push
xchg
xchg
je
mov
jmp
and
ljmp
and
mov
lea
mov
out
xor
cmpsl
dec
repnz
push
out
xor
xchg
mov
pop
adc
lods
cmpsl
add
hlt
cvttps2pi
mov
movsb
test
and
mov
sbb
lods
jge
cmp
sahf
sbb
or
mov
mov
fsubs
pop
dec
pop
xchg
mov
sub
push
mov
movsb
enter
gs
jno
and
hlt
pop
jnp
lcall
in
sbb
into
lret
jg
inc
add
fdivrl
or
insl
stc
mov
mov
push
inc
pop
cmp
jl
pop
mov
adc
xorl
arpl
sbb
dec
iret
cmp
inc
xchg
or
out
xor
mov
push
add
push
xor
nop
xchg
arpl
stos
cmpl
push
jge
pop
cli
pushf
pop
sti
icebp
rorl
test
push
stos
test
jb
sub
and
jo
mov
inc
dec
push
pop
and
fwait
and
dec
sub
fsubs
bound
or
decb
lea
xlat
mov
or
pusha
fsubl
dec
and
adc
dec
pop
aam
mov
mov
fwait
or
adc
repnz
jle
bound
mov
mov
push
or
in
out
pop
push
mov
xchg
add
lods
mov
ret
xchg
jle
cmpsb
loope
cmp
mov
pop
mov
mov
or
jg
push
cmp
add
cmp
and
sbb
inc
imulb
loope
jae
movsb
xchg
roll
repnz
jp
jae
mov
or
cmp
jo
dec
pop
cld
js
out
lods
add
cmp
jmp
faddl
xor
jo
in
push
or
insb
dec
push
mov
fidivl
inc
xchg
or
pushf
aad
sbb
push
int3
cmpsl
shll
ljmp
into
fldcw
ja
xor
and
call
inc
out
mov
cmp
ja
xor
ds
dec
aad
fidivrs
not
push
stos
cmp
xchg
je
iret
call
mov
mov
adc
add
les
pop
or
test
sbb
sbb
incl
sub
jge
in
or
mov
cmp
ljmp
sbb
je
int3
loop
cmp
adc
out
push
sbb
pop
filds
xchg
movsl
and
mov
mov
mov
xor
pop
mov
or
iret
sbb
mov
add
jmp
es
cmp
jno
test
push
lret
or
ret
shrb
mov
adc
cmovle
xor
ds
bound
mov
jle
push
dec
xor
aas
cmpsl
stos
dec
orb
jno
out
lods
lock
xchg
mov
push
mov
jne
mov
inc
mov
inc
arpl
inc
xor
fld
mov
fs
les
mov
mov
rcrl
jmp
push
clc
out
cli
insl
lds
stos
dec
mov
in
or
cmpsb
ja
jl
cmc
push
shr
scas
push
inc
mov
popa
push
stos
xchg
shl
and
rcrb
das
ret
or
lcall
fwait
adc
gs
loopne
sarl
sub
jno
test
stos
pop
in
gs
jo
xchg
es
or
dec
out
cmp
subb
mull
lret
add
ds
inc
out
lods
insl
int
add
or
jp
mov
and
aam
insb
addr16
stos
mov
mov
pop
addr16
pop
mov
enter
or
aad
sahf
push
test
sub
ds
push
fisttpl
cmp
sbb
rcr
inc
stos
jle
jbe
mov
mov
mov
sbb
imul
push
enter
sarb
and
aam
inc
and
dec
mov
add
rolb
and
bound
push
pop
shrb
mov
sbb
sub
mov
push
daa
cmpsb
mov
movsl
repz
xor
sti
and
mov
push
stos
push
cmpsl
add
mov
fdivl
sarl
pop
in
frstor
mov
mov
jne
inc
inc
mov
push
jo
cmpsb
cmp
mov
lret
ds
into
sbb
repnz
loopne
std
mov
out
xchg
jb
sbb
les
jg
rorb
fmuls
mov
shrl
pop
or
mov
dec
sbb
sbb
iret
xchg
adcb
in
adc
dec
loope
mov
mov
cmp
popf
jae
loopne
sub
jo
pop
push
mov
sub
data16
mov
nop
jmp
sbb
movsl
or
cs
cwtl
lds
inc
mov
xor
fimull
sbb
and
icebp
xor
or
push
pop
shl
cmpb
inc
aas
add
push
sub
inc
mov
lret
pop
int
pusha
xchg
subb
push
add
fnstcw
inc
imul
dec
inc
sub
aam
out
mov
mov
sub
pop
inc
fwait
cmc
add
mov
inc
add
push
add
pop
int3
js,pt
and
shlb
push
jle
ret
add
lahf
test
cmp
push
imul
dec
xlat
adc
push
sub
pop
rol
jbe
jecxz
test
sub
mov
mov
mov
xchg
pop
mov
fcoms
fnsave
lods
xchg
pushf
movsb
insb
mov
fidivs
add
push
inc
jbe
lahf
pop
jns
sub
add
out
imul
push
outsb
inc
adc
inc
cmp
jnp
jns
js
scas
out
sbb
out
rcrb
xor
sbb
xor
or
popf
push
inc
mov
mov
cmp
ljmp
ficompl
pushf
fistps
clc
pop
push
or
xchg
loop
clc
jge
add
lock
aad
dec
es
mov
adc
jns
and
movsb
xchg
adc
popa
sbb
push
into
xor
sub
add
stos
fninit
lret
pop
jnp
or
dec
fwait
inc
imul
mov
sub
imul
inc
add
pop
sbb
lds
xchg
std
pop
or
and
mov
mov
adc
and
mov
mov
pop
nop
call
into
mov
jne
push
cmp
sbb
dec
push
and
pop
pop
imul
sub
ret
mov
popa
push
xchg
pop
jno
mov
insl
add
fildll
sub
into
sbb
int
or
ret
add
cmpsb
adc
arpl
or
fisubrs
int3
mov
mov
call
lock
push
sahf
or
dec
imul
scas
jnp
jmp
or
cltd
sahf
mov
hlt
pop
ljmp
fnstsw
imul
xor
rcr
pop
dec
sbb
repnz
sbb
sahf
out
ds
test
cmpsl
arpl
mov
sbb
cld
cld
lods
out
leave
scas
insl
inc
addw
dec
cmp
shrb
and
mov
sbb
pop
lahf
leave
cmpsl
mov
mov
inc
out
int3
xor
shrl
cs
out
mov
in
popa
js
outsb
arpl
lcall
sbb
sti
data16
in
jae
adc
outsl
push
mov
arpl
and
mov
nop
dec
les
addr16
insl
cltd
test
mov
xchg
daa
iret
std
aam
mov
pop
in
fnstenv
cld
fdivr
ficoms
loop
mov
xor
or
cmc
mov
mov
mov
dec
cmp
ror
and
cmp
inc
cmp
adc
add
or
push
dec
sbb
jge
sub
stos
xor
jmp
fwait
inc
aam
js
repnz
push
mov
xor
mov
insl
iret
pop
inc
ror
pop
rcr
in
pop
pop
mov
push
push
dec
fnstenv
sub
mov
insl
xchg
ja
mov
jge
loopne
cmc
dec
std
inc
xchg
mov
push
mov
or
sbb
mov
rcrb
and
xor
xchg
pop
repz
mov
js
aad
jmp
out
pushf
sbb
cmc
push
mov
inc
xchg
inc
mov
mov
push
sub
lods
sarl
insl
fstps
out
jmp
cmc
gs
sti
push
negl
dec
sub
push
fwait
gs
js
int
xorb
scas
je
and
sti
sbbl
cs
sti
xchg
sbb
ror
movsb
jno
mov
js
pop
les
dec
fildl
sub
adc
nop
mov
jecxz
test
stos
in
test
jge
xchg
cld
mov
and
ja
mov
stc
jno
outsb
pop
loopne
jb
ror
inc
jp
cmpl
imul
notb
sub
je
sbb
cmp
jnp
add
dec
cltd
mov
std
jge
std
in
adc
mov
adc
mov
addr16
ret
aam
dec
push
inc
sahf
push
and
mov
sub
push
icebp
ds
js
mov
ss
push
int
xor
xor
subb
cmp
cs
jge
dec
inc
insb
cmp
mov
inc
xlat
cli
mov
cmp
and
xchg
mov
fcoml
mov
scas
cmp
imul
int3
jp
mov
sahf
and
call
xor
iret
mov
enter
dec
push
ficoms
sbb
mov
stc
mov
adc
xlat
jae
test
outsb
adc
jmp
pop
xor
inc
mov
lret
dec
mov
flds
jmp
out
mov
push
or
push
out
add
pop
ret
aam
or
outsl
push
incb
and
push
aas
insb
inc
int3
stos
xor
and
fildll
pop
xchg
xchg
pop
mov
js,pt
pusha
add
mov
add
cmpsl
push
loopne,pn
andb
jg
fcmove
outsb
inc
add
stos
pop
mov
bound
inc
in
les
insb
popf
mov
lahf
cwtl
mov
subb
addr16
movsl
mov
sub
inc
push
xchg
mov
insb
movsb
hlt
lahf
mov
icebp
or
and
dec
xlat
xchg
or
aad
sbb
stos
adc
pop
insb
pop
pop
je
push
sbb
jne
mov
movsb
std
insl
pushf
je
clc
and
dec
jbe
and
movl
xor
sti
add
xchg
cmpsl
ljmp
or
pop
dec
inc
push
mov
mov
pop
in
cs
fs
cmp
je
xchg
push
imul
add
cmp
inc
scas
insl
xor
cmp
and
lds
sbb
adc
dec
jp
lds
lods
in
and
and
add
lock
std
lds
sub
std
add
sub
orb
icebp
mov
addb
lods
push
xor
sbb
xor
xor
repz
or
leave
mov
and
lea
cmp
adc
pop
sahf
xor
cmpsl
pop
mov
pop
jo
cmp
dec
pop
shlb
pop
push
cmpsb
loopne
fsts
stc
jae
push
add
insl
sbb
push
repz
arpl
sbbb
lret
pop
pop
rorl
sbb
mov
stos
sub
in
dec
ret
adc
ss
inc
in
lods
loopne
enter
js
sahf
aad
fdivrs
cld
mov
jbe
cld
push
shll
xchg
test
int3
push
inc
movswl
sub
cmp
sub
xor
gs
dec
mov
ret
and
fiadds
jns
adc
dec
jno
mov
xchg
mov
jecxz
pop
push
push
out
mov
cmp
mov
leave
push
lret
in
or
out
lock
mov
pop
adc
inc
sti
call
jae
ds
dec
mov
popa
mov
lds
shll
repnz
scas
icebp
test
add
xor
pop
mov
push
sub
sahf
jno
push
movsl
das
cltd
call
inc
pop
push
mov
inc
jecxz
and
js
inc
lods
cld
ja
mov
adc
or
hlt
sbb
cmp
mov
add
mov
mov
or
shl
sub
pmullw
sarl
lock
xor
sti
fwait
gs
xchg
cmpsl
hlt
sarl
popf
test
xchg
jecxz
subl
or
pop
aad
fcmovbe
sahf
stos
das
sti
es
test
addr16
andb
xchg
jecxz
out
clc
xchg
push
push
sub
lods
movsb
lods
out
int3
dec
cmp
data16
xor
xchg
cmpsb
mov
pop
jae
dec
icebp
add
lret
cmp
scas
mov
imull
lock
fimuls
shll
pop
sub
int3
enter
arpl
push
add
xchg
mov
mov
or
pop
cmp
sub
pop
into
and
cs
test
dec
sahf
sub
lock
js
pop
xor
jle
mov
jb
subb
jnp
inc
out
dec
sub
aad
mov
mov
idivb
inc
and
jo
fildll
jbe
push
push
sahf
stos
push
loop
push
cmc
inc
xor
iret
test
arpl
inc
pusha
fbld
jae
sbb
pop
mov
adc
jns
popa
sbb
inc
insb
leave
inc
sbb
mov
sbb
push
insl
dec
fs
andl
aaa
and
data16
inc
push
lcall
add
rol
jmp
fistpl
pop
pop
pop
les
jnp
push
xor
cmp
adc
push
cmp
cs
jnp
bound
bound
movsb
add
addr16
dec
add
fwait
ss
test
sub
inc
jge
push
les
mov
and
mov
std
dec
mov
sub
dec
adc
aas
jg
push
stos
xchg
hlt
ds
cli
test
sbbb
mov
popf
les
mov
mov
les
outsb
and
popa
fisubrs
clc
sbb
xchg
cmp
lods
xor
bound
dec
aam
or
xor
imul
shrb
cli
inc
dec
shrl
nop
std
cli
dec
nop
push
pop
mov
inc
or
pop
out
lahf
neg
and
adc
pop
bound
andl
pop
mov
mov
stos
inc
sbb
adc
add
icebp
jo
das
or
ficoml
mov
test
call
or
push
jge
xchg
push
adc
mov
push
in
ja
cmp
imulb
lahf
popf
xchg
xchg
or
movsl
pop
ret
mov
out
adc
or
xchg
mov
es
arpl
add
xor
icebp
out
or
push
push
sub
in
sahf
ljmp
sub
and
push
push
xchg
imul
fnstenv
gs
mov
into
das
add
cmp
lock
jo
mov
jns
test
sbb
adc
push
je
xor
sub
sub
daa
pop
sbb
mov
call
cmp
pop
imul
xor
mov
jg
stos
inc
ret
out
insb
cmpsl
dec
lret
aam
sub
pop
pop
dec
fisubrs
out
mov
push
movsb
xchg
sbb
test
mov
sub
pushf
movsb
sub
ret
insl
movsb
ljmp
sub
das
imul
dec
dec
adc
test
pushf
add
cmpsl
dec
cmp
neg
in
jne
xor
sbb
mov
fldln2
rcll
mov
jmp
mov
mulb
cmc
adc
cltd
adc
push
cld
jge
test
sub
add
cmp
xchg
adc
pop
inc
outsl
mov
dec
out
stos
int3
imul
out
jne
bound
in
andb
mov
sbb
stos
in
xchg
ret
sbb
rol
in
inc
sti
nop
inc
cmpsl
test
adc
inc
jbe
leave
std
inc
in
add
aaa
mov
in
es
test
pop
cltd
cs
scas
mov
dec
pop
rolb
orb
push
jg
pusha
iret
adc
arpl
add
shlb
mov
das
mov
ret
jne
ficompl
push
shll
jb
repnz
pop
push
inc
or
popa
test
adc
jns
daa
dec
bnd
test
test
sub
icebp
sub
push
popf
and
pop
pslld
int3
call
push
sub
add
notb
fxch
lea
add
mov
orl
dec
mov
test
mov
in
xorb
xlat
pop
popf
imulb
and
dec
xor
cmpsb
outsb
dec
rorl
push
or
mov
add
inc
aad
xlat
daa
mov
imul
mov
adc
fsubrp
jnp
xor
data16
gs
emms
mov
ds
xor
jbe
jge
ljmp
jae
pop
pop
fwait
rorl
repnz
ficomps
mov
int3
xchg
lds
fmul
and
imul
mov
popa
pop
push
mov
and
repnz
dec
negl
sub
in
or
enter
mov
xor
jg
mov
lods
push
mov
inc
xor
inc
clc
hlt
cmpsl
pop
mov
iret
xor
ret
mov
fdivs
xchg
cmp
dec
mov
daa
insb
mov
out
push
call
dec
cltd
daa
pop
jns
fistpll
xor
test
lock
push
mov
cmp
add
icebp
sti
mov
mov
sub
xchg
jmp
loopne
jl
and
mov
jb
mov
push
sub
int
das
jecxz
mov
xlat
lods
pop
fwait
and
xor
push
clc
inc
out
test
outsl
sbb
xchg
jo
dec
or
movsb
mov
jge
in
dec
daa
rol
dec
add
add
dec
mov
sarb
xlat
popa
or
insl
int
mov
enter
repnz
mov
shrb
fists
shlb
loope
fucom
ficoml
popa
mov
pop
or
jb
or
cltd
inc
dec
clc
cmp
adc
jmp
mov
jmp
in
xrelease
data16
orl
mov
and
push
mov
adc
pusha
call
xchg
dec
xchg
jns
xchg
push
hlt
loop
aad
mov
adc
adc
mov
negl
pop
mov
fs
popf
scas
bound
imulb
leave
pop
mov
push
jp
mov
jo
or
or
mov
repz
andl
cmc
test
aam
cmp
mov
imul
rorb
sub
push
push
out
mov
add
scas
loope
pop
movsb
push
ja
jne
xor
add
add
xchg
mov
sbb
or
adc
push
insb
loop
mov
push
out
push
sahf
call
inc
mov
xchg
sbb
les
ret
fadds
xchg
test
test
sub
sub
sbb
pop
dec
pushf
dec
and
xchg
dec
mov
xchg
popf
arpl
movsl
cld
imul
xchg
out
and
stc
cbtw
pop
vpaddsw
testb
lcall
out
dec
and
adc
or
loopne
fsubrs
int
push
data16
enter
cmc
vorps
dec
std
lahf
incl
pop
pop
xlat
and
xchg
sbb
bound
jmp
cmp
das
fs
xor
imul
xchg
mov
mov
inc
jne
bound
cmp
jp
push
int3
in
scas
loopne
pop
shrl
aad
jp
gs
or
mov
jge
sbb
mov
jb
stc
dec
data16
jns
leave
or
or
pop
leave
cmp
add
or
pop
sub
and
jbe
negl
pop
cli
into
mov
jb
and
out
pop
and
out
insb
xchg
cmp
cs
popf
dec
call
sub
sbb
pop
popf
mov
mov
or
clc
iret
in
pop
mov
push
xchg
es
jecxz
dec
pop
popa
negl
cmpsl
fdivr
fs
sub
lahf
jbe
movsl
push
sar
or
cs
ljmp
ja
pop
mov
dec
jecxz
lods
sti
jb
in
fs
push
xchg
push
xlat
scas
movsl
outsb
jne
xor
dec
mov
and
sub
jmp
enter
test
sub
int
test
push
aam
jge
xchg
mov
adc
push
sub
loopne
movsb
repnz
cltd
mov
rcl
mov
mov
mov
out
sarl
mov
decl
inc
push
inc
cmpsl
into
mov
int
push
test
push
mov
fbld
insb
addb
iret
aam
out
xchg
jno
es
fldt
and
xor
cmpsl
push
sub
inc
sar
jnp
adc
dec
insb
je
dec
jnp
jbe
addr16
call
insb
jg
xchg
sarb
mov
and
pop
stos
cmp
mov
shlb
pop
jbe
pop
pop
loop
dec
mov
cli
insl
dec
test
mov
addr16
arpl
hlt
add
sbb
clc
insb
enter
sbb
lds
inc
jmp
dec
jge
jge
or
in
pop
and
shrb
jg
jns
mov
xchg
dec
and
cltd
popf
into
hlt
aam
int
dec
dec
inc
mov
mov
push
push
mov
pop
je
pop
jl
movb
mov
lea
fs
xor
add
jo
inc
and
popa
into
pop
mov
repz
hlt
fcomp
js
push
push
cltd
sub
daa
iret
add
inc
sub
imull
push
fistpll
lods
or
movsb
test
test
scas
dec
add
pop
mov
sbbb
mov
ret
and
ja
iret
push
out
shll
inc
cmp
dec
xor
sar
mov
lahf
dec
js
add
jo
xor
fldl
mov
je
sub
mov
mov
test
out
cmp
sub
mov
mov
sbbl
dec
jle
je
or
mov
and
loop
pop
adc
jg
cli
dec
push
clc
out
movsb
scas
fcmovbe
cwtl
dec
xchg
inc
fsubl
stos
push
xchg
adc
and
lcall
pop
sub
add
test
pop
call
sahf
pop
mov
sub
push
arpl
cmp
stos
dec
mov
insl
rcrb
xchg
jecxz
push
mov
dec
inc
pusha
dec
fsubrs
addr16
in
repz
or
popf
inc
popa
push
sub
ret
loope
loop
loope
push
fisttpll
push
pop
ret
inc
loopne
add
jmp
mov
vrsqrtps
lcall
inc
cltd
call
adc
xchg
ret
stc
mov
ret
jecxz
mov
push
fists
xchg
test
push
jns
mov
push
dec
mov
fcoml
cmpsb
push
mov
and
mov
insl
push
and
pop
pop
enter
xchg
out
sub
pop
and
test
call
ja
fistl
cs
cmp
add
orb
rcll
hlt
mov
sbb
pop
clc
mov
or
subb
inc
les
fisubrl
stos
dec
nop
gs
add
ret
xchg
push
pop
push
jo
std
pop
push
xchg
pop
pop
sbb
push
xchg
outsl
adc
mov
mov
aaa
dec
je
xchg
inc
int
sub
out
cmp
fildll
fstps
cmpsl
sbbb
test
clc
adc
fsub
mov
jb
loop
aad
mov
mov
xchg
test
popa
icebp
mov
je
xorl
adc
xor
xor
sbb
inc
jg
cli
inc
shlb
cmp
add
xchg
sub
outsb
jae
mov
pop
icebp
fnstenv
adc
dec
movsl
sar
mov
sarl
sahf
mov
jbe
push
lret
add
negl
mov
ljmp
mov
call
or
lods
and
sub
mov
mov
mov
movb
jl
addr16
pop
inc
add
xchg
pop
add
imul
mov
in
lahf
les
push
sub
push
stos
test
and
bound
sbb
std
fldcw
pop
dec
mov
outsl
adc
or
adc
inc
shrb
shr
adc
cmp
and
push
cmp
mov
inc
gs
pop
arpl
push
sub
mov
xchg
lret
outsb
bound
ja
mov
and
mov
inc
out
js
bound
add
andl
negb
cmpsb
in
lahf
sbbl
jno
loop
stos
fmull
push
std
in
mov
bound
push
hlt
xchg
pop
adc
ds
cmp
dec
inc
int3
mov
std
push
sti
jp
out
and
mov
adc
mov
addr16
imul
jbe
sar
test
and
jp
mov
sub
sti
icebp
xchg
sbb
idivb
in
fistpll
clc
js
das
push
dec
pop
xchg
push
push
jns
test
mov
mov
jl
ror
mov
shlb
cs
or
and
mov
sub
or
cld
ficoml
data16
push
pop
sar
mov
cmp
sbb
mov
ljmp
aas
mov
dec
mov
imul
sti
push
inc
ds
addb
add
pop
sbb
jae
repz
sub
mov
ljmp
or
push
aaa
cmp
xchg
sub
fsubrs
loopne
xorl
and
adc
fstpl
add
push
mov
pmulhw
push
sbb
pop
dec
fcomps
lahf
and
in
aaa
aad
dec
movl
lcall
bound
repnz
cmp
mov
fsubrs
pop
pop
ret
leave
insl
js
jne
jb
mov
sahf
ficoms
inc
mov
lods
pusha
sub
jg
add
cmpsl
dec
adc
fs
add
cmpsl
int3
xor
mov
popa
and
lcall
stos
je
xchg
test
jbe
sarl
xor
mov
es
add
mov
cld
mov
inc
ret
and
dec
xchg
xor
ret
adc
cmp
in
push
in
push
mov
and
mov
mov
pop
adc
jecxz
jl
push
mov
add
jecxz
sbb
ds
lods
mov
jl
test
cmp
mov
aaa
add
mov
ret
bound
pop
jle
push
out
mov
inc
pop
pop
dec
aaa
ficompl
stc
ja
xchg
je
testl
push
lea
subl
mov
and
mov
fdivrl
pusha
jbe
dec
or
fildl
dec
sbb
sahf
sarl
push
or
cs
addl
dec
pop
das
mov
call
loope
hlt
jbe
lcall
sbb
scas
push
jecxz
in
das
cmpl
out
es
test
andb
push
mov
cmpsl
pop
shrb
jne
arpl
fisttpl
push
xchg
inc
je
stos
shrl
mov
or
shll
xchg
dec
test
mov
xchg
dec
mov
outsl
dec
xlat
lods
xor
mov
pop
jb
adc
in
int3
xor
xlat
mov
movsl
cli
xchg
cmpsl
xchg
loope
lret
mov
std
xor
ficoml
xchg
pop
mov
imul
push
ja
mov
sub
jae
or
das
mov
push
int3
out
fwait
shlb
pop
clc
mov
addb
ret
loope
pop
dec
pop
cmp
sahf
into
dec
mov
fildl
mov
mov
daa
or
sub
filds
stos
inc
int3
sub
pop
sbb
dec
or
pushf
mov
sub
popa
push
pop
xchg
dec
jo
xchg
mov
fisttps
push
mov
jl
cmp
inc
jb
loopne
mov
rclb
out
fistpll
aam
shlb
js
in
mov
cmpsb
jbe
sub
pop
jno
mov
add
xor
jns
popa
mov
push
jle
jmp
arpl
dec
xor
inc
vxorps
add
mov
out
and
cmp
and
out
add
pushw
push
ficoml
lcall
test
xor
adc
inc
jge
inc
scas
jo
pop
test
dec
push
pop
mov
sub
inc
add
mull
sub
inc
fs
sub
into
xor
addr16
lea
sub
and
movsb
rolb
nop
cmpsl
adc
pop
movsb
call
mov
and
or
xor
pop
and
les
mov
orl
push
shll
movsl
sub
mov
jp
les
aad
or
andl
test
push
aaa
subl
and
push
mov
or
xchg
cmp
mov
dec
mov
in
in
aam
jo
or
add
lret
repz
mov
xlat
add
add
push
pop
pusha
xchg
dec
inc
adc
lock
popa
ret
jne
mov
cli
xchg
insl
pop
aam
pop
sub
jmp
cmp
into
jns
popa
and
mov
dec
and
sbb
jge
ret
sahf
dec
rol
jp
adc
pop
jmp
cmpsl
add
push
sbb
pop
lret
mov
and
mov
sbb
outsl
and
negb
xor
or
loop
rcrb
jne
test
mov
test
cs
arpl
jno
sub
in
stos
lock
xchg
nop
ja
mov
cwtl
and
icebp
scas
fldl
add
movsl
insb
nop
test
lahf
scas
sbb
push
cld
mov
inc
cmp
cmp
sub
sbb
jle
loope
fcmovne
push
movsl
outsb
and
testb
and
add
xchg
jp
xor
xor
pop
movsb
cmp
mov
and
sub
insl
or
push
jp
addr16
leave
fdivp
xor
pop
out
inc
xchg
nop
or
cmp
and
sub
loopne
cmpsb
xabort
fistpl
inc
and
and
inc
test
jp
mov
dec
fmull
mov
fs
and
jmp
mov
adc
adc
jns
pop
jbe
mov
push
or
mov
lret
xor
data16
mov
rclb
push
mov
push
ss
cmp
mov
jbe
cmc
call
jge
xchg
cli
inc
cmp
and
xlat
mov
dec
jae
mov
xor
movsb
mov
mov
mov
cmpsl
xor
push
ljmp
je
mov
xor
jl
mov
adc
cmp
pushf
xchg
xor
or
sbb
xchg
aad
adc
in
dec
imul
cltd
jmp
adc
xorb
enter
mov
inc
adc
out
test
mov
fcomps
add
xchg
add
inc
cltd
hlt
xor
fadds
xlat
data16
popa
mov
outsl
int
jp
push
stos
in
add
sahf
gs
lret
mov
and
mov
test
xor
fisttpl
lret
cmc
fwait
adc
stos
jp
nop
loop
jmp
add
sar
jle
add
in
jge
lock
inc
inc
pop
test
popa
or
or
int3
pop
adc
daa
into
jmp
lret
popf
pop
popa
icebp
lds
jns
xor
xor
add
mov
xchg
mov
jle
pop
js
out
mov
cmp
fistl
sahf
out
pop
in
lret
out
out
and
mov
pop
adc
xchg
push
add
fistps
icebp
negl
pop
icebp
pop
in
nop
cmpsb
movsb
dec
mov
das
mov
push
inc
push
xor
lea
inc
ret
sub
dec
cmp
sbb
and
ja
stos
or
adc
in
push
loopne
lods
mov
cwtl
movsl
mov
enter
sarb
push
sbb
cmp
in
pop
adc
add
xor
jecxz
mov
cmc
neg
pop
je
or
loope
push
stos
sbb
or
aad
add
jl
jb
aaa
in
imul
fwait
inc
sbbl
dec
mov
sbb
es
mov
sub
jg
sbb
lahf
clc
jne
in
pop
test
loop
lret
jae
mov
lds
arpl
inc
mov
es
add
push
das
rol
push
xor
mov
movsl
adc
or
push
in
mov
aas
lock
adc
inc
cwtl
fimull
test
iret
mov
addr16
popa
xchg
push
mov
jle
pop
or
pop
mov
mov
sahf
dec
adc
shll
sbb
sub
pop
nop
je
stos
es
and
dec
pop
notb
shlb
sti
xchg
mov
test
les
mov
in
mov
outsl
xchg
cld
insb
cmp
push
adc
push
mov
sub
mov
mov
cmpsb
in
arpl
stos
shll
cmp
xchg
xchg
pushf
push
setge
inc
inc
jb
and
push
xor
ja
test
movsl
dec
or
lods
xchg
xchg
push
out
or
inc
push
dec
sub
pop
daa
jo
sbb
scas
lock
out
pop
jecxz
rcll
fsubs
lods
test
pushf
outsl
dec
sahf
and
push
lds
mov
push
sahf
call
cmp
mov
sbb
dec
jo
cmp
bound
jne
je
clc
sub
xlat
add
movsl
inc
pop
sbb
cwtl
popa
or
mov
mov
out
sbb
bswap
movaps
jge
stos
xor
jecxz
sahf
les
dec
xchg
mov
fwait
into
push
mov
xchg
sbb
repz
stos
mov
jae
movsb
stos
push
bound
xor
cli
xor
mov
fidivl
adc
mov
mov
lds
jo
mov
add
sahf
sbb
jnp
and
mov
repnz
push
mov
pushf
roll
push
fwait
daa
push
mov
xchg
fstpl
cmpsl
pop
ret
stos
es
xchg
lcall
dec
fnstsw
mov
lcall
push
cmp
mov
cltd
jae
jmp
leave
icebp
addr16
orb
or
je
mov
and
push
jge
mov
aam
mov
enter
out
jge
lock
dec
mov
sbb
xor
jo
mov
sub
movsb
aas
xor
mov
fnstenv
inc
xchg
jbe
mov
pusha
ja
sbb
push
pop
cld
dec
sub
or
aas
mov
jno
pop
mov
or
int3
xchg
into
lahf
mov
and
out
lcall
ret
hlt
cmp
mov
movsl
divl
xor
iret
cmp
lods
mov
cmc
mov
inc
repz
sub
js
insb
jecxz
pop
xor
xchg
std
ds
es
cwtl
fimull
jp
ficomps
sbb
aad
lret
loope
sti
int3
outsb
mov
cmp
dec
xor
inc
sub
jle
cmpsl
insl
push
xchg
pop
and
subb
fcoml
adc
xchg
sbbl
adc
fidivrs
push
mov
ja
jo
dec
sbb
pusha
lret
mov
adc
cmp
in
in
sub
mov
in
in
adc
ret
leave
imul
and
pop
stos
push
xchg
adc
mov
shlb
push
mov
mov
cmpl
ljmp
xor
cli
iret
pop
in
mov
nop
out
add
jg
ret
and
lock
rcll
cld
in
js
push
sub
fiadds
aam
imul
rclb
add
mov
xor
lds
insb
and
jge
mov
outsl
cmp
mov
cmp
xchg
mov
repnz
inc
idiv
cmc
stos
push
ljmp
lods
dec
les
sarb
add
xchg
cli
push
dec
cli
mov
cmpsl
mov
addb
or
icebp
mov
adc
push
clc
jmp
inc
jo
dec
lock
in
addr16
jno
jl
xchg
inc
loopne
cmc
mov
aad
daa
dec
addr16
inc
jbe
mov
fildl
xor
hlt
nop
and
jnp
inc
lods
insl
insb
inc
repnz
mov
adc
dec
push
iret
pop
adc
add
add
add
dec
insl
les
outsb
pop
dec
es
and
iret
addr16
popa
adc
jne
iret
repnz
mov
fs
ficomps
sbb
lret
xor
ds
icebp
dec
push
jge
dec
mov
sbbl
dec
lea
imul
icebp
mov
int3
clc
pop
inc
fnstcw
xor
sbb
loop
push
enter
and
push
fcoms
fistpl
jbe
or
adc
loope
xchg
pusha
ss
shl
cli
or
xor
fcomi
push
aas
pop
mov
push
dec
test
mov
movsb
adc
fildll
inc
rorb
hlt
jne
js
sahf
outsl
imul
jge
xchg
mov
out
cwtl
cmp
pop
add
stos
test
clc
sbb
dec
faddl
xchg
mov
inc
outsl
in
rolb
movzwl
cmp
hlt
and
cmp
adc
push
dec
bound
rol
pop
ss
mov
lcall
push
ljmp
enter
inc
pop
test
ja
cmp
cld
ror
add
pop
push
jecxz
fwait
ljmp
pop
inc
out
xlat
js
ljmp
and
cld
lock
scas
push
jae
pop
cs
push
not
adc
inc
je
jnp
int3
or
out
jecxz
mov
lods
jne
mov
add
cmc
mov
mov
test
cmp
mov
push
data16
pop
add
xlat
sarb
jge
popa
into
mov
nop
push
jns
fimuls
xor
inc
icebp
outsl
or
insb
push
outsb
out
std
loope
adc
jle
jns
int3
out
inc
pop
sub
xor
repz
pop
xorl
gs
shl
int
lret
imul
pusha
jb
int
xor
pmullw
pop
push
repz
cmp
adc
inc
cs
roll
xchg
xchg
sbb
jb
pusha
sti
mov
js
addr16
sub
push
les
mov
insb
mov
adc
adc
jp
hlt
ljmp
fs
into
inc
iret
pop
push
test
xchg
or
mov
push
fwait
repnz
mov
ss
jno
ja
pop
outsb
scas
pop
movsb
inc
ficompl
mov
lods
xchg
push
xor
jge
jl
sbb
mov
xor
pop
in
dec
out
adc
jb
pop
xchg
ds
test
push
adc
cltd
pop
dec
push
in
pop
std
stos
movsb
clc
mov
mov
imul
call
loope
mov
pop
or
dec
shrl
xchg
sbb
aam
push
rolb
stos
pop
sbb
mov
pop
mov
and
cld
sbb
arpl
adc
lret
pop
sbbl
shlb
push
add
sbb
loopne
push
adc
stos
das
sub
orl
movsb
sbb
aam
jne
test
xchg
addr16
aam
or
mov
lock
add
and
lahf
in
cwtl
bound
std
jno
jno
sahf
sarl
mov
sbb
in
icebp
sbb
imul
or
mov
dec
pop
es
and
mov
add
cs
mov
add
and
xor
push
and
push
mov
imul
stc
cmc
pop
cmp
outsl
or
scas
inc
jo
jnp
cld
enter
sti
xchg
pop
lods
lcall
pop
sti
jne
mov
cmp
push
jbe
nop
ja
sub
sub
xor
jnp
adc
std
shll
enter
aam
decb
and
push
movsl
mov
cmp
in
cmp
inc
push
push
xchg
shrb
pop
push
push
mov
cmp
pop
lea
mov
jns
cmp
dec
fwait
fs
mov
sbb
xchg
out
movsb
mov
xchg
add
push
pop
lock
mov
fsubr
fiaddl
xor
cmp
pop
push
repz
sarb
lock
cli
and
adc
sbb
inc
mov
xor
push
je
lahf
rolb
ss
cmp
or
push
cmp
xchg
jp,pn
fidivs
mov
xlat
out
inc
add
dec
add
imul
int
loope
inc
bound
dec
test
in
scas
and
cmp
ficoms
pop
mov
xor
loope
cld
ret
pop
test
js
mov
lahf
sbb
lock
jo
mov
mov
sbb
shrl
adc
and
sbb
sub
adc
push
push
mov
jbe
fsubl
sub
push
adc
adc
cmc
mov
dec
lds
movsb
in
or
jmp
in
mov
cmpsl
cwtl
imul
mov
mov
hlt
test
aaa
stc
rcrb
jbe
nop
in
push
loopne
insb
ljmp
cmp
mov
lcall
add
adc
xor
test
rolb
xchg
lods
xchg
mov
sub
sbb
xchg
pop
mov
xchg
cmc
push
adc
inc
mov
xlat
fcmovne
mov
clc
pushf
mov
rcr
add
push
stos
cld
shl
cmp
add
scas
push
jg
imul
pop
inc
ds
aaa
in
push
push
loope
jae
imul
xchg
mov
mov
jp
xchg
imul
mov
stos
repnz
xchg
leave
inc
in
push
mov
fisttpl
std
cld
lds
mov
fs
repnz
and
xchg
cmp
lret
pushf
hlt
mov
or
test
cmp
scas
push
sub
mov
lock
mov
pushf
xchg
and
stos
cli
pop
ret
loopne
xlat
out
xor
sbb
insl
mov
cli
dec
fisttpll
add
jo
cwtl
and
sub
and
or
xchg
adc
fmulp
imul
push
inc
pushf
xchg
rcrl
sbb
cmpsb
mov
and
nopl
xchg
test
inc
jns
out
popf
pop
mov
mov
push
jb
sbb
movsb
mov
popa
jecxz
icebp
leave
mov
or
cmc
push
je
pop
or
mov
in
push
sbb
xor
ds
pop
mov
fwait
pop
pop
outsb
test
test
and
mov
fcoms
push
dec
in
repz
leave
fsubrl
lea
faddl
adc
sub
jns
movsb
dec
dec
js
xor
test
mov
imul
popf
push
inc
and
int
mov
or
rol
jmp
add
je
hlt
pop
jg
push
imul
mov
lahf
shrl
and
lret
adc
insb
mov
mov
shlb
xchg
jmp
outsb
cmpb
pushf
push
xchg
jge
mov
aad
aas
inc
mov
pop
in
sub
call
sub
fdivl
and
cmp
add
jae
flds
sbb
insl
inc
mov
add
xchg
nop
mov
jno
out
ljmp
xlat
dec
fs
sbb
test
ds
pop
pop
xchg
jne
jns
imul
int
mov
jb
stos
pop
call
jecxz
pop
sti
popa
out
add
xor
fidivl
push
das
mulb
add
loop
scas
sub
sub
js
adc
lock
sbbb
xchg
int
ss
inc
sarl
inc
ja
into
lock
rclb
mov
adc
fs
movsl
push
hlt
cmc
in
xor
test
pop
pop
jecxz
inc
jg
mov
cmp
insb
mov
das
aad
inc
daa
mov
xor
inc
push
push
call
imull
in
test
push
mov
cmpsl
pop
add
aas
mov
loope
jg
lods
pop
adc
adc
and
or
pop
push
pop
scas
mov
push
cmp
sbb
pop
xchg
int3
pop
imul
xchg
or
pop
lea
mov
daa
test
fcmove
mov
adc
scas
adc
mov
clc
andb
xchg
lahf
mov
ds
outsb
mov
sbb
push
les
loop
inc
mov
or
sub
mov
loope
adc
das
mov
mov
add
icebp
ja
popa
or
dec
add
scas
insb
insb
sub
xor
cld
in
hlt
mov
xchg
add
setns
or
test
hlt
test
loop
and
mov
xchg
sub
adc
mov
cmp
xchg
xchg
imull
mov
popf
push
jnp
aaa
loope
xor
xor
xchg
inc
hlt
sbb
ds
dec
das
cmpsb
popf
xor
out
test
xlat
lahf
leave
add
shl
les
mov
insb
imul
jmp
adc
jne
shlb
add
and
mov
clc
xchg
mov
out
mov
aam
jnp
jg
repnz
arpl
stos
popa
in
or
enter
xor
push
mov
xchg
pushl
addb
popf
int
scas
jno
mov
subb
test
fwait
xor
add
call
push
scas
fs
lea
fwait
dec
and
dec
pop
pop
dec
pop
pop
insl
inc
jge
sub
js
fisubrs
in
cmpsl
jno
shlb
push
xchg
stos
mov
xor
and
jbe
mov
scas
mov
je
repnz
or
and
stc
movl
pusha
rorl
cmp
xchg
and
cli
dec
add
mov
and
inc
ret
inc
dec
mov
cmpsl
enter
sbb
mov
insl
lock
push
dec
sbb
xchg
or
repnz
xchg
dec
pop
shlb
push
aaa
sahf
cli
cmp
push
pop
mov
bound
sub
xlat
add
out
inc
inc
decb
and
shl
jl
cld
adc
mov
fldt
mov
in
xchg
ret
outsb
sbb
inc
mov
add
popa
jbe
sbbl
in
dec
adc
fistl
lea
out
mov
idivb
cmp
dec
xchg
adc
mov
push
or
addr16
mov
mov
adc
in
popa
mov
xorb
lods
mov
mov
dec
popf
jle
sub
outsb
xlat
loope
and
scas
rcll
mov
xchg
xchg
xchg
mov
pop
pop
bound
push
cmovp
xor
cli
ret
daa
test
mov
shl
sti
mov
nop
xchg
sti
aas
add
adc
shrb
mov
mov
jecxz
adc
pop
mov
aaa
outsl
add
cmpsb
push
mov
adc
xchg
inc
push
mov
push
mov
in
cmc
stc
add
outsl
xchg
leave
in
or
cmp
mov
cmp
mov
pop
inc
inc
sbb
mov
dec
ja
push
cmp
push
xor
dec
hlt
adc
mov
orb
repnz
jmp
xchg
notl
jmp
popa
lahf
lods
sub
pop
pop
js
sub
mov
or
mov
pop
int
jns
sub
mov
in
adcl
out
cld
orb
imul
fwait
scas
repz
or
sub
mov
inc
ljmp
jecxz
push
imul
mov
jl
dec
leave
mov
insb
mov
push
ret
dec
xor
lret
outsb
scas
inc
mov
sbb
ret
jbe
sub
hlt
decl
sbb
sbb
cmpsl
leave
ror
push
jae
cltd
negl
mov
fdivrl
fidivs
mov
aaa
shll
adc
testl
setnp
iret
idivl
loope
mov
adc
sbb
push
aaa
mov
lock
mov
and
push
pop
jb
mov
jecxz
or
in
and
enter
fndisi(8087
and
mov
call
push
enter
xor
and
dec
arpl
sbb
scas
in
movsb
xor
shrb
inc
test
push
pop
imul
cwtl
pop
testl
cmpsl
mov
test
scas
mov
mov
in
push
fwait
iret
int
repnz
aas
aaa
dec
int3
inc
mov
add
mov
cmp
inc
dec
jnp
and
dec
decl
jae
cmpsb
pop
inc
fnsave
push
dec
xchg
pop
iret
cmc
push
cmp
or
jb
jbe
sbb
cmpl
fcomps
or
aas
test
and
out
jl
and
out
aam
fdiv
cmp
in
cmp
push
cmc
pusha
adc
pop
sbb
icebp
iret
push
jns,pn
je
lea
adc
ret
cmc
bound
lods
cld
vmovaps
xor
bound
enter
adc
mov
mov
clc
jmp
das
inc
sbb
lds
add
mov
jne
cld
lods
pop
stos
pop
sbb
insb
pop
mov
shl
xchg
push
in
adc
and
movsl
imul
xchg
mov
mov
addr16
inc
sti
or
cmpsb
jecxz
movhps
out
outsl
dec
leave
jg
xor
and
lcall
pop
xor
push
dec
cmpsl
scas
mov
out
push
stos
aam
adc
dec
adc
cmc
out
inc
xchg
add
pop
xor
mov
je
repz
scas
push
scas
insl
mov
cltd
adc
das
lcall
fwait
mov
cwtl
adc
inc
lock
mov
cmp
mov
push
aam
clc
in
pop
int
add
rcll
cmp
pop
repnz
int
ljmp
jecxz
dec
xchg
sub
inc
test
testb
jle
add
in
imul
or
and
aas
adc
sbb
aaa
shl
xor
insb
xchg
aas
cltd
inc
cli
xor
ljmp
mov
and
mov
xchg
ret
pop
test
mov
stc
xorl
testl
leave
clc
mull
test
or
xor
inc
sub
push
inc
out
out
scas
push
and
or
mov
jmp
pushf
jp
lods
inc
aaa
push
sub
add
and
mov
dec
in
xchg
in
out
test
sbb
inc
lods
into
int
rcl
mov
or
in
idivb
aad
rep
mov
jle
sbb
sbb
mov
test
fndisi(8087
cmp
jno
mov
aaa
mov
outsb
lock
mov
jb
push
sahf
cmpsl
cltd
ja
add
arpl
rorb
outsl
cmp
out
bound
ror
out
cmp
inc
ret
cmp
xchg
lods
add
sbb
call
pop
lahf
xor
or
sub
mov
adc
lcall
cld
mov
shrb
sti
sbb
loop
les
push
ljmp
dec
imul
cmp
aad
sub
sbb
fcom
mov
ss
xor
xchg
test
test
jne
xchg
adc
in
lock
gs
ror
test
fidivrs
aad
lret
jae
rcll
dec
sti
fdivs
and
dec
lcall
lock
mov
push
pop
cmp
jb
xlat
add
lret
dec
push
jb
xor
sbb
addr16
in
jge
and
or
sbb
pop
pop
mov
xchg
cs
xchg
lahf
sarb
popa
jne
pop
int
sarl
add
lock
iret
notb
pop
loopne
sti
enter
pop
decl
rcl
roll
sub
push
cmp
sub
mov
mov
jge
rcr
pop
jae
inc
inc
mov
adc
pop
ja
jp
repz
repnz
or
mov
insl
push
std
and
movsb
aaa
jmp
lock
cmp
popf
sbb
pusha
jo
sbb
pusha
adc
mov
push
ss
adc
push
out
pop
or
pop
push
jns
popf
push
xorps
cmpsb
xchg
add
pusha
loope
decl
pop
cmp
jno
sbb
push
mull
out
mov
fnstenv
push
dec
add
in
int
in
in
sbb
sbb
and
nop
jno
pop
cli
cs
cmp
rorl
fidivrl
addr16
mov
jle
or
enter
mov
or
pusha
xlat
adc
fwait
sbb
insb
mov
outsb
nop
lret
mov
outsb
aaa
stos
push
loopne
cmovns
mov
ret
aas
jno
jb
nop
inc
into
outsb
fidivl
jno
jns
mov
loope
pop
cmpsb
bound
cmp
lea
daa
imul
inc
mov
or
mull
mov
fsubrs
mov
in
loop
es
jecxz
mov
idiv
iret
nop
icebp
and
sbbb
test
sti
test
dec
sub
jb
sarb
movb
xchg
cmpsl
push
cmc
xchg
shl
in
ficoml
mov
jmp
push
test
add
xchg
sbb
lahf
icebp
repz
jb
mov
dec
sti
xchg
cmp
cmp
add
addr16
cmp
or
xor
scas
push
pop
lcall
mov
lret
jmp
divb
xor
xchg
fisubl
clc
xchg
icebp
mov
mov
loop
test
jecxz,pt
fwait
arpl
mov
xchg
sti
popf
out
call
sbbl
pop
cmpsb
repz
cmp
iret
mov
movsl
mov
xchg
test
enter
xchg
add
dec
dec
sbb
jno
or
scas
addr16
iret
pop
cld
mov
int
call
push
rol
xchg
xor
inc
das
mov
and
in
xchg
mov
dec
push
pop
jp
popl
loope
lods
sub
add
gs
mov
roll
dec
mov
out
js
call
pusha
adc
dec
mov
aad
sbb
stos
imul
cmp
fisubrl
imul
insb
cmp
imul
inc
pop
xadd
shrl
int
rolb
cmpsb
adc
and
cmpsl
loope
cmpsl
js
or
jb
inc
fwait
lds
and
cwtl
and
loopne
mov
pop
jl
inc
cmp
aad
or
adcl
int3
pop
inc
incb
mov
pop
pop
xchg
mov
push
sbb
aad
sbb
in
pusha
mov
ljmp
loopne
in
pop
cwtl
jge
lods
sub
jp
inc
dec
dec
movsb
inc
scas
inc
cmc
and
push
pop
lock
sub
xor
sti
loopne
cmp
fwait
mov
dec
cmp
ficoml
fs
jmp
push
je
aaa
cmc
inc
adc
sub
mov
or
repnz
add
push
jnp
mov
cmpsl
adc
cwtl
aad
imul
cwtl
mov
cld
jmp
aad
aaa
push
sbb
inc
fmuls
fcomps
mov
mov
inc
or
dec
or
sub
mov
ret
inc
leave
mov
decb
loopne
xor
dec
imul
fptan
pop
mov
sub
rcll
sahf
sbb
scas
sbb
xor
push
stc
shll
cmpsl
push
arpl
arpl
cmp
sti
addr16
rcr
dec
sbb
xor
fistpl
daa
xor
xchg
add
shl
push
fimuls
adc
and
movsb
sbb
mov
push
int
aaa
dec
mov
iret
rolb
adc
xchg
mov
fdivl
cmp
push
push
mov
mull
mov
rcr
cmp
adc
leave
mov
mov
xchg
daa
gs
pop
daa
in
ds
pop
xchg
addr16
stos
add
push
inc
sub
sarl
mov
ret
movsl
fbld
out
scas
dec
sti
movsb
mull
jp
int3
mov
mov
loop
cmpl
into
dec
shlb
mov
pop
dec
ffree
cmp
mov
cmp
push
je
js
cmp
pop
sbb
add
aaa
add
cmc
aam
lock
subb
dec
insb
lcall
mov
sbb
dec
cmp
call
daa
mov
jmp
mov
jp
insl
mov
in
xchg
push
adc
in
mov
adc
cmp
jmp
pushf
add
xchg
or
loope
dec
cmp
pop
jmp
push
jnp
mov
stos
iret
repz
fistl
lcall
mov
add
idiv
fwait
mov
jne
fidivrs
les
rorl
mov
push
iret
fbld
pop
sub
xor
mov
mov
fucomi
outsl
xchg
rorl
push
das
cmp
mov
mov
rolb
outsl
push
sbb
hlt
clc
fcmovnb
out
dec
inc
push
ret
and
inc
dec
jl
jb
in
sub
cmp
jge
inc
xchg
mov
adc
sbb
sub
mov
ss
data16
pop
lock
push
pop
lcall
cmp
jecxz
push
dec
push
sarl
push
aad
mov
dec
int
fwait
push
repnz
cmp
call
sbb
add
mov
imul
jmp
ficomps
xlat
dec
adc
popf
mov
push
data16
push
or
lahf
dec
mov
lock
push
dec
jmp
add
jl
mov
shlb
stos
push
xor
sbb
out
jns
fstps
xor
movsl
push
push
pop
add
cmpsb
in
inc
mov
ret
jl
or
js
test
dec
jnp
sub
mov
sbb
sub
dec
sbb
sub
jmp
enter
sbb
es
lds
jo
add
xor
add
cli
clc
pop
sbb
mov
jl
push
test
inc
inc
sidtl
mov
sub
adc
aaa
popf
inc
jb
and
sbb
aam
mov
aam
insl
cmp
lea
mov
inc
or
mov
cwtl
jnp
mov
bound
xlat
out
jnp
xchg
sub
push
loop
jb
add
int
mov
mov
mov
fs
std
sbb
enter
pop
icebp
mov
les
adc
xchg
data16
jnp
out
mov
out
lcall
pushf
sub
fwait
and
dec
xlat
adc
je
lock
popf
fldcw
xor
lock
shlb
xor
mov
cmc
xor
lock
cmpsb
pop
ficoml
mov
sub
fdivrl
arpl
hlt
subb
xchg
test
fiadds
aas
pop
std
sbb
mov
sub
fildll
add
cli
shlb
pop
cwtl
int3
sti
xchg
mov
push
cs
test
sbb
gs
inc
mov
and
add
cwtl
pop
push
fsub
mov
loop
jecxz
xor
xchg
fs
pop
fcomps
and
lcall
hlt
movsl
sub
rorl
std
and
movsl
lods
add
cmp
fistps
sub
cli
jge
rorl
fs
iret
xchg
ljmp
pop
call
sub
jp
bound
inc
lahf
cs
hlt
and
jge
dec
xor
xchg
mov
dec
test
adc
dec
pop
fcoms
test
push
or
sbb
xlat
faddp
in
xchg
xor
lcall
jbe
mov
cmpb
mov
rcll
sub
mov
mov
test
pop
repz
mov
divl
ret
lret
or
jle
js
les
js
lcall
rcr
icebp
aad
push
pop
sub
lahf
jmp
xlat
lods
imul
xor
add
adc
xchg
pop
int3
push
fisubrl
cmova
pushl
cmp
pop
clc
lock
mov
cwtl
in
cmp
ja
outsl
sbb
and
sti
test
test
fdivrs
notb
js
sarb
lret
ja
dec
pushf
gs
dec
mov
stos
sub
dec
insl
jnp
jbe
or
mov
sub
push
bound
sbb
sbb
pop
push
pusha
sub
test
or
idiv
mov
bnd
dec
add
fsub
xor
or
add
in
xchg
decl
mov
lods
andl
xchg
dec
inc
imul
dec
dec
outsb
hlt
fnstsw
push
movsb
daa
fs
mov
or
fs
movsl
je
mov
xchg
and
sub
jo
pop
jp
lds
cmc
stos
xchg
pop
shll
jle
mov
stos
xor
dec
fwait
jmp
imul
je
cs
gs
sub
mov
push
jmp
enter
mov
lret
sub
jg
mov
lahf
mov
nop
mov
mov
popa
mov
movsl
lods
inc
xchg
mov
xor
xchg
test
mov
sub
jb
jg
movsb
leave
gs
popaw
adc
mov
std
sub
xor
pusha
sub
or
out
add
jbe
pop
lahf
jbe
xor
jne
xchg
or
stc
xchg
fiadds
or
push
outsb
aaa
in
pop
xchg
pop
mov
pop
in
adc
pop
dec
jae
cltd
test
mov
call
lea
push
mov
aam
push
mov
inc
sub
push
stos
stos
ds
clc
ljmp
movsb
test
shll
jle
pop
js
in
jle
pop
or
inc
imul
arpl
movsl
fnstcw
pop
divl
push
gs
sti
push
pop
mov
insl
dec
push
je
dec
pop
ret
inc
cmp
in
aaa
cltd
pop
xchg
adc
jns
leave
dec
inc
jns
sahf
mov
push
fnsave
lock
adc
push
xchg
push
aaa
mov
fwait
mov
or
je
mov
pop
push
cs
stc
add
mov
or
mov
push
mov
pop
xchg
cmp
add
ficoml
jmp
std
jnp
hlt
push
mov
cmpsb
mov
je
mov
repnz
pop
insl
cmp
sti
and
mov
pop
sbb
lods
lret
jne
mov
dec
xorl
mov
cmpsl
xor
out
mov
cmp
cmc
dec
add
mov
mov
aas
insb
ret
pop
repnz
int3
jecxz
ja
rcrb
cmc
sbb
lods
stos
xchg
pop
xchg
les
and
add
and
popa
ss
adc
fwait
pop
cmp
outsb
ja
or
sbb
cltd
inc
in
cwtl
orl
rorl
addb
les
lret
or
cltd
aad
roll
je
sbb
stos
jmp
jne
cwtl
mov
mov
enter
xorb
or
enter
or
push
pop
lret
jle
jg
movsl
ja
dec
jno
xor
daa
jp
dec
jg
mov
xchg
inc
shr
js
aad
ret
push
mov
out
cmpsb
popa
aas
sbb
xchg
mov
test
mov
in
add
stc
imul
test
xor
insb
pop
lret
je
int
pop
pop
jae
sub
add
mov
or
lea
movsl
aas
sahf
xor
mov
jmp
add
xchg
adc
roll
jns
in
insb
call
movsb
movsl
jecxz
cmp
jecxz
fidivrs
push
enter
arpl
dec
jge
jp
sub
mov
push
cld
pop
lds
shrb
test
les
adc
out
imul
push
adc
xchg
xchg
sbb
xchg
js
adc
cmc
icebp
cli
xor
push
fnsave
test
arpl
inc
test
ljmp
dec
jg
mov
xor
pop
mov
pop
ljmp
mov
repnz
inc
test
add
jno,pt
test
jae
lcall
sub
stc
and
sbb
push
mov
jbe
sbb
and
sub
lods
jne
stos
insl
jle
jl
pop
loopne
xchg
jbe
add
test
push
insl
lods
test
pop
nop
out
cmp
pop
jge
cmovb
pop
pop
jge
icebp
cltd
repz
pop
mov
js
or
sti
mov
ja
mov
bound
mov
out
mov
mov
add
or
push
stos
rorb
scas
mov
jo
xor
lcall
and
sti
fucom
xchg
xchg
aam
push
in
xor
mov
idiv
enter
fcmovnb
mov
push
push
pop
inc
cmpb
mov
test
dec
mov
cmp
cli
test
jecxz
add
pop
lret
les
dec
jge
cmp
or
addr16
rclb
sub
movl
mov
adc
sub
inc
aam
push
and
aaa
cli
call
sub
test
test
loop
xchg
insl
adc
sbb
aam
call
fs
pop
sbbl
cmpsb
lock
jge
inc
xlat
pop
push
es
lods
sub
int
mov
negb
cmp
jmp
add
fidivrs
ret
insb
test
ss
pop
cmp
jge
xor
fld1
cmp
test
or
mov
repnz
mov
add
dec
out
xchg
xchg
hlt
sub
out
outsl
adc
lret
sbb
inc
scas
les
dec
rclb
xor
pop
xchg
pop
out
jecxz
dec
lret
dec
sbb
in
sub
xor
push
or
outsl
xor
pop
mov
out
ljmp
xor
push
adc
push
dec
sbb
pop
cli
lock
sbb
pop
lahf
sbb
mov
ficompl
xor
aad
scas
lods
pop
jmp
rorl
fs
xchg
mov
les
stos
push
xor
es
jl
cld
scas
or
mov
dec
inc
sub
or
push
and
push
push
sub
es
inc
mov
ss
movsb
jno
pop
lds
inc
pop
mov
add
rolb
clc
jl,pn
outsl
in
aas
mov
popf
pop
mov
cltd
jg
xchg
bound
mov
or
je
idivl
rcl
and
test
jp,pt
fstpl
fs
cltd
push
xchg
xchg
test
jae
bound
push
je
mov
sbb
inc
xor
bound
mov
mov
mov
xchg
ja
pop
or
inc
cmp
mov
cmc
add
xchg
jecxz
mov
dec
push
out
pop
xchg
pop
ss
dec
pop
rorb
sbb
mov
dec
mov
sub
adc
aam
pop
repnz
aas
test
in
divl
lahf
icebp
fistps
inc
sbb
fimull
mov
aaa
mov
xchg
or
jl
xor
int
shlb
jno
cli
pop
push
lods
adc
cmp
xor
and
cmpsb
and
loopne
sbb
push
dec
jg
xor
inc
lret
mov
cmpsl
cmp
test
xchg
mov
and
inc
sbb
dec
sbb
ret
insb
clc
out
add
enter
add
arpl
xchg
xor
adc
dec
fsub
mov
ss
cli
negb
mov
jo
test
call
dec
testl
jb
xor
mov
out
mov
and
pop
loope
fisubs
cmpsb
push
fstp
test
push
movsl
stos
aad
mov
scas
leave
push
pop
jnp
xor
pop
rcll
inc
dec
lret
xlat
adc
mov
jecxz
cmpsb
inc
cmp
adc
stos
in
inc
call
mov
cmp
pop
insb
popf
adc
push
adc
cs
es
inc
push
jmp
cli
and
mov
test
ss
push
adc
rorl
cli
jnp
dec
mov
in
inc
ret
in
sub
cwtl
pusha
insl
sbb
lods
xor
clc
mov
cmpsb
mov
xchg
xor
into
jns
pop
mov
push
imulb
mov
out
sub
dec
ljmp
stos
movsb
jle
or
and
or
jae
daa
fdivrs
push
or
loopne
jbe
scas
xor
lret
nopl
mov
sub
dec
push
sti
xor
js
jns
sub
sbb
inc
jno
xchg
or
ljmp
enter
imul
sub
jae
add
jno
lcall
and
mov
int
iret
push
clc
outsl
sbb
popf
adcb
mov
push
imul
jo
sub
sbb
clc
add
push
dec
in
cmpl
jmp
push
stc
aas
pop
fs
push
popa
movsb
int3
cmpsl
push
loopne
cs
cmovo
les
scas
rclb
test
ret
dec
in
loope
add
sub
call
enter
sbb
adc
or
cmp
fimuls
fimuls
xor
push
shll
mov
sbb
jmp
test
imul
inc
pop
xchg
dec
cmpb
mov
cmp
adc
es
out
lret
subl
mov
adcb
shlb
les
push
pop
inc
out
xor
mov
and
loope
push
xor
or
cmp
sbb
cmp
mov
xchg
mov
jge
lret
pop
mov
fdivr
js
cwtl
stos
or
push
lea
repz
cmpsb
je
icebp
xor
fdivs
es
sub
popa
test
and
jae
aas
mov
dec
mov
sbb
in
fwait
mov
mov
test
dec
rcr
shlb
out
dec
mov
and
xchg
sahf
clc
cmpsb
dec
test
xchg
inc
xor
stos
pushf
add
pop
inc
and
iret
and
fcmovu
jp
mov
mov
lods
jle
mov
fstpt
mov
xchg
push
imul
je
or
fld
lcall
mov
or
jg
cmp
fnstenv
roll
and
inc
stc
push
push
mov
bound
inc
xor
repnz
ds
jnp
mov
mov
in
or
shll
test
xchg
xlat
add
jp
pop
fwait
add
test
xchg
adc
and
or
xchg
hlt
push
push
cmp
lock
dec
adc
popf
rol
sahf
xlat
insl
nop
adc
inc
xor
mov
out
shrb
sub
mov
dec
add
dec
adc
sbb
jmp
jae
xchg
rorl
mov
out
add
fstpl
pushf
and
cli
je
ror
ja
loopne
ret
imul
loope
pop
arpl
xchg
outsb
mov
pop
adc
out
lds
sub
ljmp
fcoml
fcompl
jae
shll
bound
add
test
icebp
or
xor
pop
shr
pop
mov
jne
movsl
movsb
jbe
mov
lock
jge
repnz
clc
xor
cwtl
int3
out
cmpsl
mov
xchg
fadd
insl
or
lods
jne
lea
cld
mov
sub
out
inc
imul
mov
sbb
lcall
fdivs
dec
daa
ret
call
fs
das
outsl
scas
sbb
jbe
out
ss
pop
std
lcall
test
jl
sub
adc
lret
mov
dec
sbb
mov
lods
sub
jo
sub
inc
les
imul
add
pop
jns
loopne
out
push
pushf
sub
rclb
in
in
scas
movsb
ss
stos
ret
cwtl
push
add
sub
mov
sbb
punpcklwd
add
in
in
jnp
daa
pop
pop
scas
mov
jecxz
popa
out
pop
xchg
lcall
jo
hlt
mov
loop
in
xor
aad
xchg
sub
or
inc
aas
aam
mov
inc
out
dec
push
into
clc
pop
xor
in
mov
lods
mov
sub
sbb
mov
call
xor
fsubrs
ss
clc
adcl
fs
popa
in
aaa
in
mov
daa
dec
add
pop
xchg
ss
mov
daa
xor
add
shll
mov
sti
dec
mov
dec
fs
sbb
sub
or
mov
pop
pop
or
mov
cld
push
stos
call
gs
xchg
leave
add
xchg
leave
nop
fiadds
mov
out
xchg
test
test
sbb
sbb
mov
test
mov
int
cltd
arpl
insl
cs
sub
test
jbe
and
inc
dec
ffree
les
cmp
loop
js
test
and
dec
orb
pop
les
jno
sub
das
notl
jns
jecxz
in
les
jg
ds
dec
xchg
inc
sti
roll
sbb
jge
pop
mov
sti
xchg
dec
adc
inc
stc
adc
jnp
loope
mov
fwait
js
test
in
sub
rcl
ret
mov
or
pop
pop
imul
dec
rcrl
pop
jg
cwtl
cmpsl
mov
jbe
arpl
in
sub
xchg
je
and
ss
lahf
fnsave
enter
daa
and
pop
pop
stos
adc
out
mov
call
mov
add
jnp
or
mov
xor
dec
pop
daa
dec
out
ss
cmpsl
insb
xor
xchg
pop
mov
pop
pusha
cli
cmp
das
inc
xchg
out
xchg
push
aam
mov
adc
leave
fisubl
arpl
cmp
repnz
insb
push
in
cmp
and
add
pusha
lret
cltd
sbb
sub
xor
xor
adc
fcompl
sub
add
mov
test
bound
jecxz
lret
sbb
jbe
and
xor
adc
icebp
sti
mov
xchg
lock
push
sub
leave
in
or
and
cmpl
cmc
jno
mov
rol
sbb
cmp
es
cmp
ja
mov
xchg
mov
mov
shr
flds
imul
mov
fs
lods
xor
jmp
pop
xor
jo
xchg
call
cmp
fstl
loopne
sub
xchg
sub
mov
jns
loop
mov
test
idiv
jp
test
daa
cmp
mov
popf
adc
adc
mov
adc
push
sub
push
cwtl
scas
sbb
daa
xlat
in
cld
rcll
outsl
mov
subl
push
cld
dec
inc
xor
pop
jg
bound
movsl
xor
xor
movsb
inc
lcall
dec
jae
dec
jmp
outsb
pop
cmpsb
and
and
lds
dec
je
idivl
push
out
inc
das
lret
jmp
jb
aaa
rcrl
orb
jbe
pop
hlt
jge
inc
dec
push
sub
repz
adc
stos
negl
mov
in
mov
push
loop
or
mov
loop
addl
sub
sub
repnz
lret
pop
daa
sub
fdivl
cmpsl
cmp
jmp
pop
cmp
jo
lock
pop
js
inc
mov
sub
in
cmp
punpckhwd
fidivrs
test
pop
and
jns
mov
xor
sub
xchg
cmpsl
xor
push
sahf
adc
push
mov
and
dec
test
test
adc
add
dec
daa
sbb
jne
mov
cmc
or
sbb
sub
xor
sub
fiadds
shrl
insb
sub
je
dec
inc
mov
popf
mov
inc
out
aam
push
cmp
cwtl
xor
outsb
or
popf
add
push
fiaddl
adc
jbe
outsl
clc
pusha
mov
data16
xchg
jg
pop
ficompl
sub
dec
mov
lock
pushf
pop
push
cmp
orl
dec
mov
iret
es
repnz
fdivrs
sbb
mov
clc
xlat
or
call
loope
mov
cmp
mov
cmp
pop
pop
adc
mov
xor
cwtl
dec
outsl
aam
xchg
loop
test
jle
xor
repz
shll
in
mov
in
inc
and
xchg
rclb
scas
sbb
or
add
movsl
neg
sbb
popf
lock
lret
adc
sbb
jecxz
rolb
mov
ss
sub
in
mov
mov
xchg
jmp
clc
and
xor
cltd
mov
push
mov
pop
ja
cmp
ret
sbb
adcb
ds
or
lret
and
mov
pop
jp
add
jns
cmp
loop
shrl
mov
push
ja
push
lcall
aad
mov
adc
insl
push
out
lcall
imull
daa
aas
pop
lods
push
insb
mov
push
inc
fdivrs
testb
movsl
sahf
clc
push
mov
dec
pushf
pop
or
jnp
rcrb
scas
cmp
loop
nop
adc
out
adc
lea
sbb
fidivl
or
pop
outsb
dec
repnz
or
add
jbe
mov
stos
cmpsl
subb
outsl
not
mov
xor
mov
push
xchg
and
cmc
repz
pop
lret
pop
xor
js
xchg
dec
jmp
mov
ds
out
jl
decb
or
inc
inc
dec
sbb
aad
fsubl
cmc
fsubs
mov
jmp
testb
lcall
xchg
outsl
cmpl
cmp
ljmp
loop
and
lahf
inc
inc
jl
outsl
mov
daa
pop
js
sti
push
xor
cmpsb
icebp
dec
negl
xor
cwtl
push
dec
bnd
add
fsubl
mov
jg
xchg
cmp
inc
lods
mov
fcoml
fs
jnp
aam
mov
dec
stos
mov
jge
flds
mov
mov
ss
dec
out
ljmp
insl
inc
hlt
xlat
dec
xchg
adc
and
add
fiadds
dec
push
divl
xchg
or
jne
ss
mov
fadds
or
flds
bound
mov
gs
push
sbb
out
mov
int3
ret
xchg
mulb
pop
mov
in
jecxz
test
lcall
ficoml
sbb
repz
sub
adc
sbb
sbb
cmp
sub
jecxz
sti
cmp
mov
push
add
stos
ja
inc
fcoml
sub
or
inc
cmp
mov
into
lahf
outsl
cmpsb
popa
and
or
xor
inc
push
arpl
fisubl
sub
mov
je
popf
push
sti
aas
dec
daa
mov
adc
cmp
add
insb
xor
mov
mov
fcmovu
lea
mov
xor
mov
inc
jle
xchg
mov
xchg
repnz
xor
notl
nop
jae
ss
aam
popl
call
ds
jp
popa
aaa
cli
dec
bound
daa
add
add
mov
and
jo
lods
stos
push
test
add
sbb
xor
insb
mov
mov
movsb
imul
mov
lods
repnz
sarl
xor
stos
dec
mov
sub
jmp
test
cmc
fwait
pop
fcompl
out
jae
fs
jmp
or
mov
dec
stc
outsb
xchg
and
push
mov
pop
lods
leave
push
or
sbb
mov
sahf
mov
jno
xchg
sub
mov
stc
pop
mov
adc
hlt
pop
in
pop
jb
mov
popf
inc
push
mov
ds
jge
fnstsw
fmulp
arpl
or
mov
push
pop
ret
repz
loope
jnp
stc
shll
ja
push
aaa
or
insb
xchg
ds
aam
call
mov
sarl
lret
cltd
sarl
je
les
xlat
test
mov
inc
js
push
les
aam
in
sahf
pop
dec
aaa
push
out
add
dec
or
sbb
mov
push
add
subl
mov
in
dec
les
mov
rcrb
dec
mov
adc
push
cmpl
lock
xlat
mov
cmpsb
xor
mov
pop
jp
loopne
sbb
mov
outsb
rorb
push
jg
jl
pusha
daa
fcomps
lock
enter
pop
push
scas
pop
dec
sub
fsubs
int
sahf
mov
in
popf
orb
cmp
stc
or
xchg
repnz
loopne
sub
push
lods
inc
insb
sub
das
push
lret
jno
sbbb
pop
sub
aad
adc
das
lahf
ds
or
lahf
loope
adc
push
sbb
aad
push
push
xlat
stos
cwtl
pop
or
push
rolb
mov
xor
pop
les
cli
pop
sti
sar
sbb
fxtract
ret
orb
mov
addl
cs
shll
lret
sti
mov
mov
out
mov
int3
mov
loope
xor
dec
pop
rclb
mov
outsb
pop
leave
sahf
jp
push
jmp
jmp
in
outsb
lret
mov
jbe
stos
sub
test
or
je
push
bound
hlt
pushf
out
das
and
and
in
mov
xchg
cmp
dec
cwtl
pop
into
sbb
hlt
cmc
mov
push
sub
les
int3
lock
and
or
add
push
lock
pop
push
xchg
or
push
mov
mov
aas
push
xchg
jns
push
lods
adc
mov
or
jae
adc
out
repz
test
and
imul
inc
data16
push
and
shrl
pusha
sub
cmp
mov
leave
lcall
cmp
lcall
call
gs
add
bound
dec
jo
not
pop
js
enter
sbb
sub
mov
stc
push
add
dec
cmp
mov
out
push
imul
repz
mov
repz
mov
mov
adc
cmp
push
xchg
loopne
sub
sbb
jo
aas
sub
or
mov
fdivs
cld
push
push
xor
push
mov
rcrb
xlat
jo
imul
sub
or
push
std
or
mov
clc
and
add
out
inc
pop
fidivs
jns
push
dec
les
mov
dec
dec
mov
or
xchg
pop
repz
shlb
shrb
daa
lds
fwait
insl
inc
popa
inc
jmp
mov
jne
push
sahf
cmpsb
lods
fcmovb
xchg
mov
add
and
xchg
aas
mov
dec
out
nop
push
push
test
mov
xadd
lods
mov
cs
jae
sahf
fmulp
inc
in
es
or
inc
mov
sub
mov
xchg
xchg
out
push
add
xchg
orb
mov
ss
lcall
push
adc
insb
dec
arpl
or
repz
dec
mov
jae
rcrb
dec
dec
leave
aaa
or
sahf
icebp
dec
ret
sbb
push
push
rep
test
lods
sbb
xorb
mov
jmp
xchg
scas
push
push
iret
fcomi
iret
mov
mov
xchg
ret
and
int3
lods
scas
mov
mov
add
xor
in
loopne
ret
xor
sbbb
cli
cmp
sub
bound
bound
xchg
jno
inc
cs
lea
mov
cvtps2pi
enter
stc
shll
jle
sbb
dec
mov
cmpsl
std
ret
add
movsb
and
xor
icebp
xchg
aad
xchg
sti
or
cmpsb
adc
iret
and
mov
dec
leave
cld
cwtl
mov
shll
xchg
and
mov
cltd
inc
pop
addr16
mov
lret
je
outsl
mov
fsubl
fisubrs
push
mov
pop
push
shlb
add
sub
mov
cli
int3
push
jno
cmp
lods
cli
data16
pop
pop
test
int3
das
out
mov
call
in
dec
mov
jecxz
insb
mov
rcr
cli
xor
pusha
and
call
add
cmpsl
cmp
popf
cltd
dec
movsb
stos
jno
in
push
sbb
jne
mov
xchg
or
or
dec
fwait
pop
lea
adc
movl
or
stos
imul
jg
dec
lea
ficomps
push
xchg
mov
sbb
js
xchg
jb
dec
cmpsb
ret
in
dec
notb
aad
pop
pop
jae
aas
outsb
mov
jmp
mov
dec
sbb
adc
pmulhw
sti
jo
fisttpl
cmpb
mov
inc
repz
inc
lea
fcoms
pop
xchg
cmp
push
mov
mov
stos
stos
cwtl
jne
hlt
jp
push
add
mov
ja
lcall
xchg
int3
mov
ss
cld
jmp
stc
shlb
push
lahf
mov
inc
andl
inc
xor
push
mov
mov
or
mov
jmp
push
xchg
or
jno
pushf
das
inc
adc
cmp
mov
inc
adc
sbb
mov
bound
pop
cmp
icebp
inc
rcr
xchg
js
inc
lret
push
insl
jl
lds
mov
pop
jle
cmp
loopne
jb
sub
pop
imulb
mov
cld
add
outsb
push
cwtl
sahf
cmp
ja
sbb
cli
orl
mov
lods
cld
test
lret
xor
mov
cmpsl
pushf
pop
jl
cmpsb
pop
int
fnstenv
lcall
pop
enter
lods
inc
cmp
test
jb
dec
push
push
data16
mov
cs
adc
pop
mov
test
lock
sbb
aas
mov
shrl
add
push
aam
ja,pt
mov
xchg
ret
add
pop
dec
daa
sbb
movsw
pop
fistpl
inc
dec
adc
daa
mov
add
cmc
movsl
mov
into
mov
lods
mov
inc
push
lods
pop
mov
shll
cmp
dec
sub
push
ss
lock
and
push
adc
mov
push
or
xor
ss
fstp
js
aam
mov
cmp
lock
inc
inc
sbb
rol
jg
mov
es
and
cmp
add
out
mov
mov
mov
pop
stos
mov
fs
and
xor
push
test
xchg
es
mov
xchg
shlb
lret
and
cmpl
sub
js
ss
push
add
iret
mov
adc
cli
stos
xchg
sub
notb
push
or
jae
mov
addb
dec
das
jae
les
test
sbb
jae
cmp
pop
data16
xor
adc
mov
stos
rclb
mull
jne
push
or
mov
nop
push
lretw
insb
stc
scas
sbbl
cmp
repnz
inc
fstp
sub
pop
jnp
pop
push
xor
ret
cmpsl
lret
adc
pop
test
dec
outsb
push
add
int3
xchg
loope
xor
leave
inc
mov
lods
data16
das
leave
adc
jae,pt
adc
pushf
lods
sub
pushf
stc
pop
xchg
lea
fisubl
cmp
sbb
shll
push
xchg
mov
xchg
fmull
data16
out
push
xchg
loope
gs
sysenter
jmp
mov
ret
mov
push
sbb
or
xchg
ficoms
xchg
pop
scas
dec
stc
add
and
dec
xor
insl
pop
aad
or
mov
mov
bound
shlb
push
out
aas
inc
popf
bound
popa
das
mov
movsl
jbe
repnz
iret
stc
pop
push
adcb
mov
inc
dec
