sbb
add
mov
xchg
fcoml
leave
jecxz
outsl
jne
jle
jno
or
mov
add
loop
cmp
les
icebp
stos
subl
or
pushf
cmpsb
in
add
test
bound
mov
scas
aas
popa
mov
mov
mov
mov
mov
pop
cmp
arpl
mov
sti
jno
adc
nop
lret
lcall
mov
shrl
xor
adc
lret
shlb
cltd
aad
or
xor
pop
imul
push
inc
scas
push
jb
xchg
orl
cmp
add
xchg
sub
adc
cmc
push
cli
cld
mov
in
lret
ja
in
flds
lea
pop
fistps
iret
add
pushf
xchg
dec
dec
mov
out
addr16
test
push
scas
cmp
std
xchg
inc
inc
pop
jno
dec
popa
and
ficomps
shll
scas
fadds
and
sbb
pop
std
scas
pop
push
scas
xor
xor
inc
subl
and
enter
mov
sti
dec
repz
mov
xchg
fs
and
inc
push
pop
pop
clc
inc
int3
sbb
adcl
repnz
jp
cmp
sbb
adc
loop
ss
inc
xchg
mov
mov
sub
lret
add
pop
mov
xor
pop
stos
push
cmc
das
std
and
adc
ljmp
fadd
decl
or
repz
mov
jmp
lods
js
mov
xchg
jnp
mov
sub
icebp
xor
pop
sahf
lods
dec
pop
mov
sbb
inc
xchg
cmp
cli
test
adc
cmp
push
mov
pop
or
imul
sub
push
or
test
stos
iret
pop
icebp
into
and
mov
or
nop
or
jnp
mov
aad
fildl
mov
clc
out
pop
dec
shl
mov
or
mov
push
fmull
mov
shll
lds
pushf
or
push
shll
push
pusha
stc
push
ds
adc
mov
cmpsb
into
int
sbb
shll
and
loop
sbb
ret
adc
divb
add
into
call
lock
add
cwtl
jmp
loope
insl
xor
push
icebp
jno
inc
cmc
cs
aam
jns
popa
in
or
cmp
adc
xor
jge
or
mov
mov
in
sub
ds
das
cmp
lea
add
sbb
or
fwait
jmp
sub
adc
sbb
ja
or
stc
dec
sub
js
pushf
xchg
inc
dec
outsb
jecxz
push
jg
and
add
mov
ret
pop
cmp
and
int
and
imul
add
or
stos
icebp
andb
sbb
insl
cltd
inc
jle
xchg
xor
gs
je
mov
cmp
mov
in
movsb
popa
pusha
lret
std
call
jmp
loope
mov
add
gs
push
imul
lods
xchg
sub
int3
insl
pop
mov
lock
in
fidivrl
rorl
cwtl
jmp
or
and
scas
incl
insb
pop
cmp
dec
int3
dec
push
and
out
ds
inc
testl
jp
mov
xor
fs
xor
lock
popf
clc
or
mov
call
dec
repz
mov
cmp
mov
sarl
dec
fcompl
xchg
mov
mov
dec
dec
mov
xchg
scas
mov
pop
cmp
negl
cmp
jnp
sub
adc
test
and
outsb
or
xchg
ds
and
testl
lods
inc
adc
aam
pop
cmp
mov
pushf
arpl
push
mov
mov
or
dec
aaa
ret
out
inc
test
ljmp
sbb
jecxz
sti
repz
cmp
dec
rcrl
push
push
test
les
jmp
or
outsb
int3
mov
mov
aad
cmp
std
xchg
mov
pusha
or
iret
add
enter
mov
arpl
pop
cmp
sub
stc
aam
gs
mov
dec
or
lret
dec
mov
mov
lods
mov
sti
cmp
sbb
in
out
dec
push
sbb
sub
sti
xlat
cmpsb
insl
leave
pop
decl
data16
popf
mov
jne
adc
mov
aam
add
fisubs
xchg
push
movsb
cmp
mov
sub
jb
or
fcomp
fs
jl
sub
push
sub
sub
dec
faddp
lret
pop
xchg
ret
adc
mov
add
jae
xor
bnd
mov
inc
sahf
daa
cltd
lret
mov
mov
lock
shlb
testl
or
jg
adc
mov
push
jle
hlt
imull
adc
add
test
es
jecxz
lea
cwtl
enter
out
jae
push
repz
outsb
sub
adc
xlat
add
xchg
ja
test
jno
mov
imul
ljmp
ss
mov
icebp
insl
pusha
aaa
lds
insl
aas
das
pop
sbb
pop
test
test
xor
mov
out
stos
out
mov
pop
popa
mov
jg
stc
and
fs
cmpsl
cmc
cmp
and
push
ret
and
fistpll
les
adc
mov
movsl
jo
flds
aas
test
pop
lods
xchg
dec
test
out
push
les
and
push
test
sbb
push
and
daa
mov
xchg
inc
outsb
jg
push
sar
xor
lods
add
mov
iret
jae
inc
es
and
jecxz
push
ja
aas
es
sti
push
movsl
ret
rorb
imul
loope
mov
pushl
mov
sub
or
sub
dec
leave
cmp
push
pop
mov
test
dec
adc
sub
into
imul
pop
push
inc
add
jl
out
adc
imul
cmp
hlt
jno
mov
push
decl
adc
adc
mov
push
pop
push
xor
sbb
out
inc
mull
xlat
stos
lods
lahf
cmp
mov
pop
pop
push
sub
scas
int3
dec
shrl
scas
pop
inc
push
jle
or
jl
mov
or
push
shrl
sbb
adc
inc
shlb
pop
mov
fnsave
mov
xor
nop
es
int
xchg
popf
pusha
pop
jbe
xor
pop
add
movsb
icebp
ret
pop
imul
mov
jg
push
scas
sub
xor
lock
xchg
fwait
add
jmp
test
and
fdivrs
int
add
push
mov
pop
mov
outsb
dec
int
add
cld
stos
test
insb
mov
ret
outsl
mov
push
mov
add
jo
ljmp
les
and
sti
cmp
push
in
cwtl
cmpsb
data16
cltd
mov
popw
into
sbb
outsl
repnz
bound
sbbl
xchg
mov
mov
or
insb
aas
in
adc
cmc
pop
push
rclb
jmp
jg
lock
jno
mov
out
icebp
cwtl
enter
cmp
sub
sbb
add
xor
sbb
jae
out
sahf
fisubrl
mov
mov
hlt
xor
iret
loope
push
cli
xchg
pop
and
jecxz
cmp
pushf
sbb
imul
sub
dec
push
in
dec
xchg
and
pop
call
test
cmp
add
add
jg
out
bound
arpl
sbb
mov
stos
mov
jle
mov
xor
jp
adc
cs
sub
inc
sbb
stos
lahf
mov
idivb
in
xor
mov
sub
rorb
ljmp
push
push
mov
in
or
jb
nop
inc
push
xor
sub
lds
inc
ljmp
dec
insb
fcmovu
adc
sbb
pusha
push
stos
scas
pop
push
ljmp
std
arpl
jl
jbe
dec
int3
mov
adc
cmpsb
mov
mov
inc
push
fsubr
sbb
add
negb
ret
mov
loope
dec
enter
testb
mov
mov
inc
fwait
inc
lods
cmp
mov
sbb
sbb
sub
ret
decl
xor
fldt
mov
popf
andb
pop
mov
rcrb
inc
adc
pushf
push
in
mov
popa
je
std
add
das
push
jne
mov
xorb
push
mov
adc
iret
ficomps
pusha
mov
lods
fisubs
cmp
out
pop
mov
mov
jns
and
lods
orl
stos
fcmovnbe
ret
dec
popa
js
decb
dec
stc
ret
out
add
adc
jno
inc
bound
loopne
out
ljmp
movsb
jecxz
jmp
and
aad
adc
dec
mov
xchg
jp
insb
pop
pop
mov
cltd
push
inc
daa
jmp
fisubrl
xorb
mov
aam
sbb
cmp
push
mov
hlt
adc
in
fdivrs
iret
cs
xchg
pusha
and
test
and
add
insl
or
fs
or
or
test
cmp
mov
les
popa
sti
adc
cmp
dec
ror
cmp
inc
push
pop
popf
ret
shr
inc
or
clc
cld
mov
mov
cs
add
sub
lods
fdivrl
jge
enter
cmpsl
out
repnz
gs
dec
jb
lahf
or
push
jl
and
out
mov
fstpl
jae
inc
and
movsl
cwtl
push
scas
mov
pop
push
push
mov
and
imulb
shlb
icebp
jnp
mov
cmp
jle
xchg
fisubs
jo
and
dec
bound
mov
leave
add
in
dec
mov
cwtl
je
popa
fmuls
lods
push
cld
mov
push
aas
dec
lcall
jbe
orb
in
mov
pop
sbb
add
call
outsl
mov
sbb
dec
lret
fdivs
ljmp
js
mov
adc
jmp
data16
sahf
cmp
mov
mov
cmp
les
cmc
lock
sub
or
mov
push
xchg
push
stos
sbb
add
cmpsl
jne
addb
and
adc
sub
pop
adc
pop
xchg
inc
pop
das
sti
and
sub
xchg
jnp
je
mov
push
inc
or
ret
adcb
add
mov
dec
cmp
imul
fdivrl
add
mov
cltd
adc
dec
sahf
and
jecxz
in
jmp
aam
mov
lock
rcr
mov
arpl
push
fiadds
call
xchg
test
out
cmp
inc
mov
push
and
insl
xor
test
movsl
xchg
cmp
inc
cmp
push
mov
dec
mov
aam
inc
popw
jecxz
out
lahf
testl
add
xor
jg
inc
outsl
mov
jae
mov
sub
jp
sti
push
mov
popf
pushf
lret
inc
sub
mov
pop
pop
icebp
ret
js
jo
cld
dec
filds
ljmp
and
add
or
outsl
cmpsb
insb
or
and
sub
and
pop
sub
xchg
mov
mov
subl
xchg
std
adc
sub
pusha
mov
loope
aad
dec
sahf
add
push
inc
push
jle
sti
out
dec
scas
cmpsl
mov
cmpsl
rorb
sarb
sub
nop
lods
call
xchg
xor
lcall
in
push
lret
test
aad
adc
xchg
bound
jge
in
push
hlt
insb
nop
lds
sti
movntq
out
xchg
fs
add
jns
shl
mov
xchg
fwait
popf
xor
push
aam
dec
lcall
pop
pusha
cmc
sbb
or
popl
xor
xor
sti
pop
jecxz
xlat
outsl
sub
mov
fistl
cmp
nop
les
fsub
jbe
enter
popa
test
lods
add
call
push
pop
sbb
movsb
jge
push
cmpl
xchg
out
into
mov
mov
mov
mov
xor
lods
push
jp
jle
ds
mov
dec
mov
jo
fmuls
mov
mov
sarl
cmp
ficoms
test
dec
cs
loope
mov
mov
jne
subb
fstpt
xchg
dec
cmp
pop
insl
icebp
or
xchg
adc
jg
pushf
lea
cmp
sti
aam
leave
xchg
cli
lods
gs
fsts
mov
leave
jbe
push
mov
jle
rcl
push
add
pushl
sbb
mov
mov
jns,pn
daa
ljmp
adc
pop
dec
and
xchg
outsl
and
sub
pop
jmp
mov
jmp
fs
sbb
push
mov
or
mov
iret
jo
loope
movsb
jge
pushf
push
scas
fbld
mov
xor
fldcw
in
movsb
or
pop
adc
bound
pop
jge
sbb
jns
mov
add
fpatan
stos
rcll
add
icebp
std
fs
imul
and
mov
inc
mov
xor
jo
int3
enter
sbb
pop
popf
leave
aad
push
icebp
ret
movsb
cmp
out
or
jecxz
cwtl
inc
mov
add
test
or
in
mov
faddl
repz
les
cmp
popf
lods
sbb
fs
shll
ret
jl
lret
dec
cld
xor
push
pop
xor
cli
insl
ret
popf
ja
ficompl
mov
jmp
jnp
loopne
fdivrs
jno
dec
mov
lahf
sub
xor
mov
sbb
xchg
xchg
shlb
mov
aad
mov
in
sub
jno
jnp
mov
movsl
push
mov
and
aad
jle
aas
or
in
push
inc
push
pop
mov
xor
orb
rclb
leave
xchg
mov
inc
movb
loope
mov
jae
std
xor
cwtl
xchg
dec
cmp
jae
mov
lods
mov
cmc
cmp
imul
decb
mov
sub
push
std
push
push
mov
fildll
adc
lock
cwtl
shll
cmp
pop
in
int3
pop
push
push
jnp
jb
lods
pop
out
clc
arpl
insb
mov
sub
inc
stc
mov
jg
xchg
sbb
mov
jmp
mov
mov
shll
rol
cmp
jne
mov
jno
aad
xchg
aaa
push
pop
push
dec
icebp
mov
push
mov
sub
aad
cmc
pop
ror
mov
dec
and
rcrl
adc
popf
shll
les
xchg
ret
test
jnp
push
aaa
std
sub
outsl
cmpl
xchg
push
mov
push
xor
insl
jnp
cmp
sub
bound
pop
fisttps
icebp
lds
hlt
xchg
sbb
sub
adc
ds
repz
xchg
out
les
dec
loopne
pushf
lods
out
hlt
hlt
or
addr16
pop
out
push
mov
imul
fcomp
jno
xchg
imul
sahf
sub
jnp
mov
add
ret
mov
fwait
push
ljmp
inc
sahf
mov
out
es
and
je
in
pop
mov
cwtl
push
xchg
cltd
enter
sub
pop
add
test
pop
jo
push
shrl
mov
jnp
lods
daa
int3
mov
push
dec
mov
xor
sub
dec
inc
cmp
push
dec
jae
dec
dec
cmp
or
pop
andb
and
sbb
in
and
xchg
mov
dec
sbb
rolb
and
fs
pop
fidivrl
mov
dec
xchg
jns
push
jno
or
test
test
out
fidivrl
mov
jg
aam
test
test
subl
imul
sti
push
pusha
xchg
inc
aam
rcll
cmp
jb
test
js
add
dec
mov
and
xor
call
out
xor
cmp
pushl
sub
adc
or
repz
stos
shll
ret
mov
adc
or
ffree
xor
xchg
lahf
in
and
jns
sub
fsubl
pop
ljmp
push
fdivr
cmpsb
xchg
sub
xchg
aaa
adc
jb
jp
pop
mov
jbe
push
sti
lods
fwait
fs
dec
inc
dec
fmul
leave
pusha
dec
test
nop
xor
push
xor
mov
adc
pop
or
mov
rolb
jmp
pop
adc
mov
mov
lahf
adc
inc
aad
mov
inc
jno
scas
js
leave
idivb
mov
rclb
or
xchg
shll
into
insl
sub
popa
mov
push
cwtl
out
sti
push
push
or
iret
test
jge
jp
stos
or
push
push
mov
cwtl
inc
mov
push
inc
out
pushf
sub
xchg
xchg
mov
cmc
sti
mov
ret
movsb
or
lds
das
ror
lahf
or
stos
push
xchg
pop
bound
add
pop
dec
cmp
dec
push
add
sbb
mov
sbb
mov
push
inc
mov
fdivs
es
ja
dec
repz
test
ss
push
or
and
push
xor
ror
stc
push
lock
push
mov
out
gs
vpsubsw
push
cmp
mov
ret
lret
sub
popf
lret
xchg
mov
push
xchg
mov
icebp
fldt
sbb
cmp
cmpsb
mov
xchg
outsb
decl
je
lret
sbb
jge
push
les
ret
mov
sarb
pop
ret
xchg
inc
mov
and
imul
dec
cwtl
test
sti
mov
dec
cmpsb
sarl
lcall
push
rclb
adc
ds
push
cmp
mov
pop
adc
jmp
cmp
jo
mov
mov
int
xchg
xchg
dec
lret
dec
jp
sub
and
call
and
pop
lods
aad
icebp
cmpsb
aad
cmp
enter
xchg
sbb
int
cmp
shll
and
pushf
jnp
mov
mov
add
and
dec
mov
cmpsl
or
fdivrs
mov
sbb
pop
insb
mov
outsl
xchg
push
fcmovnbe
add
fs
in
imul
lret
dec
xor
xor
cmpsb
push
adc
adc
fdivrl
pop
ret
jle
adc
stc
imul
cmp
jmp
dec
outsl
cld
iret
push
sbb
lea
loope
sub
shl
xchg
ret
cmp
xlat
mov
cwtl
push
leave
pushf
or
jb
shl
add
inc
jo
lret
mov
xchg
mov
mov
mov
jbe
jge
pushf
and
jno
icebp
cmp
pop
pop
sbb
stos
scas
dec
dec
mov
gs
or
pushf
jae
int3
int
add
imul
pusha
ja
std
jp
xchg
adc
outsb
jle
pop
dec
xchg
jb
mov
mov
inc
jnp
mov
inc
std
cld
frstor
rclb
dec
pop
push
out
movsl
inc
shl
xchg
or
data16
pusha
insb
test
or
mulb
push
lds
leave
cmp
and
cmc
test
test
mov
push
lret
je
mov
push
out
lods
dec
sub
out
or
in
mov
pop
cmpsl
and
jl
out
cli
jb
arpl
xorb
inc
pop
mov
in
int3
push
int
lret
bound
pop
lods
insl
inc
sbb
mov
mov
cmp
push
test
out
testl
pop
inc
cmp
into
mov
cmc
jmp
ss
pop
push
xor
int3
daa
ds
ljmp
push
fisttpl
vmulsd
mov
rcrb
dec
nop
ret
mov
pop
xchg
dec
mov
dec
subl
mov
xchg
sub
ret
push
cmpsl
xchg
cmp
not
pushf
inc
cmpsb
cmp
in
or
test
mov
inc
out
out
mov
mov
jge
ja
xchg
es
nop
fsts
hlt
out
jo
xchg
mov
enter
cli
xor
jb
popf
push
stos
sbb
mov
nop
in
repz
movsb
sbb
dec
bound
jnp
inc
leave
inc
adc
aad
sbb
inc
leave
cmpsl
xlat
lock
in
mov
mov
mov
adc
insl
mov
inc
les
out
or
jbe
cld
sub
cwtl
lret
mov
packuswb
sub
or
ficompl
mov
in
repnz
push
sbb
loop
add
mov
adc
or
lret
cmpsl
out
xchg
xchg
pop
ret
xor
adc
sub
pop
repnz
sti
loop
mov
push
rolb
push
mov
fs
jmp
jmp
sahf
inc
mov
sbb
xor
jge
daa
xor
inc
js
sarb
cltd
sub
push
mov
cmpsb
ss
sbb
pop
jp
sbb
dec
inc
loope
shrb
sahf
and
divl
sbb
jnp
mov
push
push
or
in
mov
pop
jge
pop
inc
dec
lds
inc
inc
cli
sbb
pop
inc
in
orb
iret
dec
dec
xchg
mov
scas
xchg
push
lcall
mov
jge
mov
scas
adc
adc
mov
push
dec
lock
dec
xchg
sbb
jns
or
stos
rep
loope
in
mov
outsb
mov
mov
or
das
jae
inc
mov
out
hlt
pop
mov
out
stos
mov
jbe
jecxz
sbb
add
jmp
testl
mov
push
mov
testl
ret
add
ja
test
nop
ds
pop
mov
mov
and
jmp
lret
dec
mov
std
aad
mov
lret
xchg
add
cmp
xchg
sbb
inc
pop
xchg
xlat
mov
pop
dec
sub
cmpsb
out
lds
mov
outsl
insb
push
lcall
push
nop
lods
out
xchg
add
jecxz
scas
in
fdivl
neg
int
dec
mov
dec
push
inc
cmc
scas
ret
mov
jge
jle
mov
dec
push
cmp
mov
ss
fsubr
xor
daa
lea
inc
ja
rcrl
cmp
stos
cmp
roll
notl
dec
mov
imul
lock
mov
push
xor
std
pop
mov
mov
outsl
lea
lret
push
push
cmpsb
fs
add
jl
jnp
jecxz
inc
mov
and
jb
inc
or
cltd
dec
loop
pop
cwtl
pop
cmc
sub
cltd
jl
cmpb
in
and
cld
ret
xor
incl
cmp
xchg
std
xchg
or
rorb
dec
mov
outsb
fdivs
aad
fwait
mov
inc
add
sub
pcmpeqd
mov
test
rcrl
mov
adc
stos
addr16
test
aam
lock
lret
push
mov
mov
lock
add
lods
mov
fidivl
inc
pop
xor
pop
dec
xchg
stc
xchg
or
imul
xchg
outsb
mov
xchg
rcl
mov
sahf
test
sbb
or
insl
mov
test
lcall
ja
movsl
add
sub
lahf
cs
clc
in
loop
cmp
push
or
jmp
push
xchg
jle
cmpsb
xchg
in
xlat
scas
jecxz
jmp
or
rcrb
in
test
pop
call
xchg
fst
xor
mov
mov
jg
stos
sbb
pop
dec
bound
lods
fisttps
int3
mov
xlat
cmpsl
fs
fstps
xchg
in
adc
cmp
push
adc
aaa
cmp
add
enter
mov
lcall
sbb
sub
add
sbb
mov
jne
fcmovne
leave
movsl
stos
testl
mov
jb
sbb
sub
pop
fsubrs
jae
sbb
data16
or
pushf
aaa
push
sub
ltr
sbb
fisttpll
popl
setbe
aaa
movsb
jg
adc
jmp
jle
mov
jle
fiaddl
push
stos
sub
add
enter
mov
insl
ret
push
cmp
pop
pop
cs
int3
str
jp
daa
stos
jle
shrl
or
icebp
pop
fcomip
mov
push
and
shl
xlat
jb
dec
rcr
mov
stc
arpl
or
push
mov
add
or
push
mov
lret
pop
pop
sub
je
pushf
sbbb
iret
outsb
dec
mov
fwait
mov
sub
push
clc
rcll
and
test
shrb
xlat
sub
pusha
fisttpll
dec
sbbb
movsb
testb
popf
out
xor
add
lret
and
jecxz
test
pop
jbe
mov
outsl
cmp
dec
push
sub
or
imul
sbb
sbb
pop
outsb
rorl
divl
jns
arpl
and
xor
xor
popf
cwtl
jmp
out
mov
xor
adc
iret
push
add
fbstp
orl
inc
out
sbb
adc
prefetch
fldenv
xchg
icebp
lock
push
adc
pop
out
mov
leave
xor
daa
jnp
out
test
int3
inc
das
iret
std
das
mov
cmp
ds
jb
aaa
shrl
adc
lahf
xor
pop
jp
mov
jno
jp
mov
nop
daa
jecxz
dec
add
mov
sahf
dec
fcoml
dec
adc
dec
fnstenv
in
insl
jno
mov
dec
popa
jb
sarl
test
mov
fnstsw
stc
add
mov
sub
sub
adc
jns
pop
jnp
mov
cli
rorl
sub
test
addr16
push
bound
push
shll
aas
sbb
pop
stos
inc
in
pusha
sbb
pop
and
ret
daa
xlat
dec
addr16
inc
dec
out
inc
jbe
rcll
add
in
dec
mov
out
jns
and
mov
push
dec
dec
js
out
mov
jg
in
pusha
sarl
lea
shlb
fldenv
mov
sub
clc
scas
and
daa
push
mov
call
hlt
int
outsl
test
push
pop
fstl
loop
popa
xor
inc
loope
sbb
jge
aam
rcrb
jmp
dec
mov
push
dec
mov
dec
mov
daa
inc
mov
sbb
insb
call
sub
lds
out
call
adc
imul
push
xor
xor
loop
push
cmp
push
call
mov
dec
nop
jmp
dec
sbb
cwtl
jb
xorb
lret
pop
sarl
dec
popa
add
xor
jg
jmp
icebp
aam
std
mov
rolb
inc
xchg
push
and
jecxz
jmp
in
jl
mov
xchg
fidivrs
push
loope
dec
mov
push
push
push
mov
movsb
cmpsb
add
fwait
sub
adc
test
lret
pop
inc
ss
nop
incb
adc
sub
push
inc
mov
push
jle
cmpb
ja
shl
mov
lret
movsl
xor
mov
in
lods
repz
pusha
jb
cmpsb
out
inc
mov
shl
out
inc
test
outsl
jge
xchg
xor
mov
and
jno
jl
add
daa
lds
cmpl
insb
stc
pop
xchg
xchg
push
jae
in
jecxz
pop
nop
cwtl
sbb
addr16
mov
push
ja
js
pop
lods
xor
cmp
in
lods
ud0
sub
ret
jle
out
into
in
scas
mov
push
cmp
leave
leave
mov
jg
ds
movsl
jbe
decb
adc
loop
aam
ja
push
xchg
pushf
add
mov
sbb
jl
and
rcl
adc
les
inc
mov
aaa
cmp
push
dec
and
sbb
jnp
adc
mov
pop
ficoml
outsb
mov
nop
arpl
pop
push
rorl
sahf
repnz
imul
aaa
dec
mov
outsb
outsb
movsl
cmpsl
popa
out
adc
fistpll
movsl
in
cmpsb
jge
sub
sbb
into
inc
dec
push
jl
out
fildl
dec
dec
scas
pop
movsb
std
add
cmpsb
cltd
jecxz
shll
aam
dec
mov
in
xchg
xchg
popa
xchg
pushf
mov
andb
int
in
out
popf
fisttpl
or
lods
jo
add
xlat
inc
stos
das
clc
ret
aaa
jb
sarl
insl
sahf
lret
mov
pop
jns
and
jg
addb
notb
lret
stos
cmp
test
loope
sub
jp
into
mov
xchg
or
enter
jbe
pusha
roll
stos
mov
int
outsl
sbb
hlt
cld
sbb
outsl
cmp
sub
mov
clc
movsl
out
jecxz
nop
jmp
lds
jp
cmp
cmpl
sub
lret
sbb
mov
std
add
mov
fistpl
fldcw
jb
xor
dec
scas
inc
cli
inc
push
adc
sbb
mov
jb
sub
jecxz
jns
mov
mov
jo
icebp
xchg
stos
dec
inc
aam
movsb
xchg
arpl
push
pop
pushf
imul
adc
sbb
add
xchg
cltd
arpl
cmp
out
cwtl
repz
xchg
push
test
ja
push
inc
out
mov
jno
sbb
jp
lods
shl
push
lds
inc
fidivrl
pop
push
ja
cmp
addb
es
mov
xor
mov
xchg
push
lret
lods
jnp
pusha
fdivs
dec
pushf
mov
popa
mov
test
lcall
mov
andl
pop
pop
stos
dec
repnz
in
fldt
and
mov
pushf
sbb
inc
xchg
mov
pop
je
jo
hlt
mov
repz
dec
out
mov
jae
jge
xchg
das
scas
sub
das
insb
mov
add
pop
addr16
lock
xor
stc
ret
or
xor
inc
shll
and
xor
adc
sbb
shll
adc
pop
lods
dec
sbb
pop
outsl
fidivrs
xor
mov
mov
mov
cmpsl
mov
mov
mov
outsl
inc
test
insl
fldenv
in
fisttpl
outsb
movsl
xchg
add
arpl
xor
cmp
lods
cmp
adc
outsb
or
imul
pushf
adc
icebp
not
scas
movsb
adc
out
stos
arpl
dec
fnstcw
push
xchg
jns
adc
dec
call
push
jl
fwait
jb
test
pop
rcl
xor
cmp
mov
mov
cs
pop
inc
das
ror
mov
fs
pop
outsb
jns
int
cmp
dec
inc
repz
xorb
gs
mov
in
addr16
popa
scas
cmp
out
inc
push
sti
sub
or
cmp
sub
push
or
jecxz
fcomip
shll
icebp
push
xchg
mov
stos
xor
dec
mov
mov
or
testb
push
or
filds
cmp
gs
add
insb
movsb
pushf
mov
adc
mov
leave
ret
clc
or
ljmp
in
ja
xchg
test
jbe
sbb
pop
jo
xchg
mov
aas
xor
clc
cmp
popa
iret
and
cmp
fcmovb
xchg
or
sbb
jo
inc
fistpll
outsl
cld
adcb
rol
sub
out
movups
clc
jl
inc
stc
xchg
mov
movb
repnz
add
jae
movsl
mov
popa
xchg
mov
mov
clc
mov
cld
loopne
fistpll
inc
cmpl
mov
cmp
or
adc
jne
lret
in
jne
imul
popf
jp
inc
shrl
push
and
stos
lock
xchg
rorb
lods
sub
and
in
imul
sti
adc
adc
ret
push
xor
push
ret
or
imul
iret
push
dec
xorb
or
inc
je
loopne
inc
xor
mov
mov
add
fsubrl
test
fisubs
mov
ret
mov
add
fwait
mov
and
pop
mov
sub
test
mov
jb
jmp
add
add
imul
cmp
test
lret
lret
scas
repnz
scas
dec
cltd
das
repnz
inc
lock
decl
cwtl
sahf
cmp
adc
icebp
hlt
mulb
adc
add
push
repz
jb
xchg
stc
dec
lcall
jbe
movsb
sbb
add
sbb
mov
stos
test
xchg
pop
stos
push
rorb
mov
in
sub
int
cmp
sti
inc
pop
push
lock
xchg
xor
pusha
lock
daa
idivb
or
fisttps
add
jb
jl
jl
hlt
adc
push
pop
lds
popf
test
sub
iret
ret
push
in
imul
sahf
cs
pop
or
in
int3
cli
rorl
les
call
sub
xchg
jnp
mov
data16
movsl
in
stos
and
cmp
test
dec
and
scas
lods
mov
jno
dec
mov
test
pop
mov
fistps
lock
std
es
orl
sub
add
xchg
mov
pop
icebp
jno
pop
pop
mov
out
inc
jmp
pushf
push
nop
arpl
and
sub
xchg
jno
enter
sbb
mov
or
arpl
dec
cmp
or
push
inc
daa
imul
adc
xchg
and
lret
jle
or
insb
pop
mov
and
pop
mov
test
adc
fwait
adcl
lcall
rcll
lcall
rcr
aad
push
mov
flds
scas
in
xchg
mov
or
mov
fldl
pop
xchg
add
pusha
xchg
mov
cmp
mov
mov
sub
mov
xchg
dec
xchg
cltd
out
in
mov
testl
xchg
out
lret
dec
rcr
js
ljmp
sbb
dec
mov
adc
sbb
adc
pusha
xchg
cs
cmc
mov
pushf
push
or
daa
dec
push
sbb
loope
nop
sub
xor
cmp
scas
xchg
addr16
xchg
js
adc
add
cmpsb
clc
cmp
jno,pn
shrb
pop
lret
push
das
xor
add
inc
add
xor
test
add
add
loopne
mov
jnp
mov
jnp
xor
stos
adc
lods
js
std
dec
and
mov
pop
imull
call
mov
lcall
mov
lcall
aas
sbb
jne
mov
xchg
xchg
bound
fdivs
mov
sbb
push
dec
pop
add
hlt
fidivl
outsb
sbb
and
rcr
out
push
clc
negb
sub
loopne
or
xor
insl
shlb
loope
sbb
and
lret
out
scas
fsubrl
push
adc
xchg
and
lock
popf
jl
mov
xor
aam
dec
xchg
mov
jnp
mov
leave
into
rorb
jg
jbe
sarl
rorl
mov
or
icebp
mov
aam
cmpl
jb
jnp
dec
add
push
sub
sbb
jae
xchg
jecxz
mov
pop
adc
mov
push
mov
lret
xchg
aam
cmc
sub
mov
loop
stc
xchg
sysret
aaa
movq
in
cmp
push
mov
dec
push
bnd
pop
push
lcall
jecxz
pop
push
adc
or
lock
iret
xor
cmp
leave
adcb
ret
sbb
outsl
adc
add
mov
dec
push
xchg
push
mov
push
adc
cld
mov
sbb
lcall
adc
aaa
push
fbstp
addr16
popa
pop
movsb
cwtl
xchg
push
cmp
jne
sbb
test
je
jle
mov
inc
pop
jnp
xchg
cmp
inc
pop
in
sbb
inc
jb
shrl
pop
xchg
aaa
ja
ja
hlt
mov
mov
dec
adc
ds
pop
xchg
push
lret
inc
mov
test
lock
ja
subl
adcl
xchg
stos
mov
nop
xchg
pop
sbb
mov
fcoml
stc
xchg
out
movsl
iret
call
bound
pop
shrl
sbb
xchg
push
mov
xchg
ja
push
loopne
notb
xlat
bound
sub
out
lock
mov
movsb
sbb
repnz
fwait
in
jne
push
test
cmp
inc
int
sbb
mov
imul
xor
stc
mov
pop
pop
jns
mov
test
adc
mov
mov
jge
pop
popa
shlb
fldenv
rcrb
cli
mov
sub
adc
insl
cld
fwait
adc
add
xchg
iret
mov
cmp
mov
insb
test
pop
sub
jmp
roll
mull
in
rcl
fildll
pop
pop
lock
pushf
dec
xchg
push
and
in
cmp
dec
pop
cmpsl
push
or
pop
jecxz
sbb
or
inc
stc
xor
add
aas
aas
pop
cmpsl
or
adcl
mov
pusha
das
push
cmpsl
push
lods
int3
inc
or
int
lds
dec
imul
jle
xor
add
mov
push
dec
popa
inc
sbb
out
pop
enter
xor
sub
push
arpl
movsl
xor
adc
int
ljmp
xchg
mov
and
sbb
push
sbb
jbe
fimuls
mov
jns
aaa
bound
call
add
test
insb
xchg
xchg
and
and
arpl
pop
fadds
pop
push
setl
dec
mov
add
shl
iret
pop
rolb
cld
push
subl
add
mov
push
ror
rcrl
out
lret
shrl
xchg
mov
push
in
mov
out
aad
test
xor
mov
mov
sub
sete
shlb
aad
mov
gs
aam
xchg
cmp
xchg
xchg
mov
inc
shl
repnz
repnz
adc
in
jo
cs
sahf
mov
mov
mov
mov
xchg
inc
out
xor
leave
call
enter
insl
icebp
xchg
mov
sub
jne
lea
mov
or
dec
repnz
aaa
in
push
mov
pop
or
mov
pop
lret
xchg
xor
jnp
movsb
sub
dec
out
test
pop
outsb
dec
aad
push
push
or
sti
inc
test
jl
sbb
call
divl
add
or
or
sbb
mov
int3
push
imul
in
adcb
stos
mov
dec
sbb
sbb
test
ljmp
sbb
sbb
mov
incb
mov
mov
fwait
mov
mov
iret
jo
jbe
dec
outsl
xchg
mov
cmpsl
adc
jg
ja
and
dec
repnz
js
xor
lods
mov
ret
pop
adc
push
fists
fiaddl
xor
mov
scas
and
imul
inc
sahf
mov
fcmovu
or
xorl
pop
xlat
xor
negb
imul
pop
ss
sub
cli
pushf
sbb
push
push
sbb
int3
xor
mov
pop
aam
inc
mov
loope
pop
test
cld
jmp
or
mov
jo
jp
in
scas
mov
push
push
lea
jg
sub
ret
scas
push
add
in
scas
loopne
popa
jne
jbe
rclb
pop
jno
mov
fwait
out
insb
inc
inc
shlb
dec
leave
xor
iret
out
int3
jge
pop
mov
loopne
arpl
call
adc
sub
mov
sub
or
ret
inc
filds
adc
jl
xor
adc
scas
mov
ficompl
stos
pusha
cli
stos
rorb
dec
cmp
inc
sbb
and
and
mov
push
xchg
cwtl
or
sub
mov
add
inc
lock
pop
lea
pusha
mov
sbb
shl
add
dec
xchg
mov
mov
popa
fwait
lret
negl
jo
enter
sbb
and
lret
stc
out
dec
mov
ret
mov
pop
int3
loop
cs
fidivrl
cld
push
jge
stc
daa
inc
cmp
mov
cmp
and
push
inc
sub
jbe
xor
sbb
negl
in
dec
repnz
roll
jle
push
inc
and
scas
pop
jno
cltd
adc
inc
test
sbb
int3
rorb
cmp
pop
or
mov
loope
bound
cmpl
sbb
pop
out
outsb
lahf
mov
add
std
dec
sbb
es
sbb
xorl
dec
mov
cmp
sahf
inc
ljmp
test
test
sbb
mov
mov
mov
mov
pop
mov
movl
adc
repz
iret
mov
or
or
jne
sbb
push
mov
jg
mov
jne
incl
and
jmp
pop
lret
out
jae
testl
inc
or
mov
popf
in
rcrl
enter
addl
mov
cli
and
lret
mov
xor
pop
sbb
inc
cmp
aaa
push
jo
rcrl
xor
jnp
cltd
sbb
scas
inc
xchg
dec
push
inc
cltd
pop
rcrb
add
xchg
mov
sbbb
stc
icebp
push
arpl
dec
and
inc
lds
or
xlat
bound
scas
cmpb
pusha
ret
push
aas
leave
sar
push
lret
sbb
in
jns
mov
sahf
int3
stos
jl
call
pop
jle
cli
and
mov
sub
dec
xchg
mov
or
mov
dec
pusha
test
mov
ds
sub
xchg
jl
jecxz
pop
pop
stos
xchg
repnz
mov
stos
or
fdivrl
push
xchg
or
mov
xchg
xchg
jno
mov
sub
ja
rcrl
jae
and
inc
xor
jecxz
mov
pop
shll
sub
inc
or
sbb
jmp
es
jle
mov
loop
leave
stos
nop
xchg
jmp
jg
jl
arpl
cwtl
xchg
mov
and
or
mov
sbb
shlb
jno
push
daa
addb
xor
mov
lahf
jae
jnp
inc
cmc
xchg
xor
leave
js
cld
lahf
test
aam
je
add
or
and
fdivrl
pop
pop
xor
jbe
adc
cltd
xor
mov
pushf
or
mov
fs
shl
push
cwtl
stc
mov
decl
testb
cwtl
lret
push
jecxz
xchg
pop
int3
jl
out
pop
cmp
lret
xchg
pcmpgtw
jmp
dec
lahf
pop
push
scas
iret
iret
out
je
shl
mov
and
repz
inc
pop
mov
inc
xor
into
rorb
adc
add
mov
jnp
mov
aas
or
dec
in
sbb
mov
repnz
pop
and
out
or
or
jne
sub
xor
mov
mov
hlt
pop
inc
testl
pop
rdpmc
jae
sbb
movsb
or
mov
dec
mov
add
dec
test
add
test
cmp
lahf
daa
insb
push
sbb
loopne
xlat
inc
dec
xor
adc
pop
sub
mov
jo
sbb
cmpsb
pop
leave
mov
mov
mov
push
dec
pop
fs
pop
lods
sbb
aam
rcl
mov
dec
sub
in
dec
divb
or
dec
jb
fs
sbb
mov
jne
test
xchg
push
lods
sbb
or
pop
insb
fs
dec
pushf
jnp
loopne
dec
jecxz
sahf
sbb
push
dec
dec
loope
adc
and
sarl
ret
push
in
paddd
scas
pushf
outsl
mov
xchg
push
mov
leave
aad
stos
sbb
and
push
repz
fadd
repnz
jle
xor
iret
sub
inc
loop
pop
das
adc
aaa
lods
dec
pop
jnp
das
jg
mov
ret
push
or
ja
or
pop
push
stc
scas
push
dec
gs
mov
adc
rcl
jns
pop
fdivrs
je
out
sub
xchg
sbb
jecxz
mov
inc
mov
lcall
mov
cli
jecxz
adc
fsubrs
cmp
outsl
flds
pusha
inc
dec
jno
arpl
popa
out
pop
test
add
loop
cmp
jg
outsl
push
xor
pop
or
ss
in
xchg
or
adc
jmp
jl
mov
pop
xchg
movsb
out
mov
loopne
popa
dec
outsb
sub
mov
inc
test
mov
adc
pushf
sub
and
dec
mov
rorb
dec
bound
dec
mov
xor
pop
sub
cli
or
movsl
sar
sub
mov
cmp
or
shlb
jmp
jo
std
push
xlat
imulb
sub
insb
sub
test
xchg
movsl
mov
mov
outsb
mov
xor
mov
push
imul
jo
loop
push
cltd
ret
mov
adc
cmpsb
xlat
cmpb
adc
test
inc
adc
mov
js
ljmp
mov
push
adc
loopne
cmpsl
lahf
out
ret
pop
push
or
or
inc
sbb
ficomps
mov
xor
mov
stc
fsin
mov
out
shlb
shlb
jge
add
ljmp
and
and
les
sbb
int3
test
pop
inc
jl
xor
in
dec
rep
jg
sub
out
test
inc
cmpps
insb
dec
pop
push
leave
inc
lret
dec
push
aas
orl
cltd
sub
lret
jb
shrb
mov
fistpll
adc
pop
out
je
xor
in
fdivrs
sub
roll
push
pusha
pop
js
mov
sbb
nop
sub
dec
pop
lds
pop
sarl
inc
pop
jecxz
push
mov
loop
shr
lret
out
sbb
inc
add
and
xor
scas
test
and
sub
cli
cmp
jne
inc
mov
or
addr16
adc
dec
lahf
jae
adc
lods
jp
cmp
sub
xor
mov
repnz
or
je
sar
orl
mov
enter
andl
xor
xor
into
sub
gs
jbe
xor
dec
pop
xorb
adc
lea
out
popf
les
shll
int
push
xchg
xchg
and
push
xor
sar
jns
jge
lret
sub
lock
pop
les
xor
xor
loope
and
subb
pop
fmul
push
aam
bound
rolb
push
loope
xchg
in
or
jns
das
mov
mov
int
xor
jo
xchg
adc
xor
inc
scas
sti
xchg
push
daa
jge
xor
in
mov
ljmp
xchg
dec
jne
sbb
xchg
test
xor
shlb
aas
lods
pop
mov
jp
std
cs
adc
or
adc
lock
mov
sub
popa
sub
imul
int3
int
or
pop
jp
fcompl
cmc
shlb
call
mov
xchg
inc
cld
inc
push
mov
into
push
stc
push
popf
dec
sub
test
xchg
mov
out
arpl
movsb
push
fstl
pop
test
sbb
nop
jbe
sahf
mov
repnz
enter
cmc
xchg
insb
cmp
jg
cltd
outsl
xchg
loop
je
addb
out
fwait
js
sti
fld
cmp
push
pop
ret
jle
cmp
scas
or
jne
jnp
xchg
mov
lods
mov
outsb
out
pop
in
pop
icebp
insb
dec
aaa
sub
lea
enter
push
pop
cmp
dec
faddl
mov
xor
or
je
cli
out
pop
loop
push
xchg
xchg
arpl
aaa
sbb
push
ficompl
jmp
pop
fnstcw
cli
mov
bound
pushl
clc
and
cmp
stos
sbb
aaa
decb
mov
js
dec
in
loop
insb
into
ret
dec
cmp
stos
mov
pop
adc
inc
jg
arpl
and
sbb
fbstp
and
sti
push
scas
mov
icebp
or
pop
out
cltd
lret
and
mov
mov
dec
pop
xchg
push
sti
fisubl
sbb
push
pusha
adc
sub
ss
cli
cs
pop
lods
inc
loop
pop
sbb
cli
call
stc
loop
in
test
scas
mov
fdivl
mov
mov
clc
jmp
dec
jnp
ss
pop
xor
das
icebp
mov
cmp
push
xor
lahf
cmpsb
stos
mov
pop
jbe
mov
mov
adc
add
xor
pusha
scas
div
or
sbb
je
clc
mov
stc
testl
jmp
mov
popa
xchg
inc
dec
mov
push
mov
out
icebp
les
in
inc
mov
test
out
push
and
xchg
insb
lahf
push
adc
aad
imul
aaa
mov
mov
pop
fcoms
dec
inc
jno
push
mov
add
inc
mov
rcl
dec
andl
stos
orl
repz
inc
push
or
sbb
mov
fcompl
subl
std
test
lods
push
test
scas
mov
iret
stos
xchg
pop
nop
mov
and
pop
daa
cmp
scas
mov
scas
cmpsl
ja
ljmp
push
sub
and
enter
outsb
dec
and
sbb
sub
imull
adc
icebp
rclb
fsubl
sahf
jp
xchg
clc
outsb
mov
jne
lahf
jnp
outsl
in
push
arpl
and
push
jge
sub
push
add
sub
rolb
or
nop
xchg
mov
test
sbb
sub
shll
js
sub
adc
or
add
call
mov
or
cmc
cmp
scas
add
daa
mov
xchg
add
iret
xor
enter
in
bound
aad
out
js
rolb
jbe
std
dec
or
leave
cmpsb
lods
pushf
aam
shlb
in
pop
dec
inc
insl
aad
xor
xchg
das
xor
add
repnz
mov
rclb
cld
js
enter
shl
insb
xchg
inc
imul
mov
int
loope
mov
mov
or
fimuls
xchg
mov
icebp
cmp
flds
cmp
mulb
xchg
sbb
inc
adc
dec
jle
mov
sub
out
js
xchg
cmc
pop
loope
ljmp
mov
cs
jp
aam
adc
mov
push
pop
adc
mov
in
rcll
pop
les
fiaddl
loop
enter
repz
xor
add
add
xchg
enter
outsl
pop
add
aaa
or
cmp
dec
js
ljmp
and
mov
and
sahf
xchg
xor
test
or
imul
lods
sbb
test
or
inc
mov
add
shlb
pop
shrb
xchg
adc
dec
mov
stc
lcall
int
int
pop
out
xlat
adc
dec
cmc
or
dec
cmpsl
sbb
jge
xlat
movsb
push
push
sbb
pushf
popf
add
orb
shl
dec
int3
cltd
sahf
push
jg
dec
inc
cmp
dec
or
mov
das
stc
inc
sbb
sub
pushl
and
sbb
cwtl
out
pop
mov
repz
jg
and
inc
push
es
xor
or
or
xor
pop
adc
test
mov
ljmp
add
mov
es
enter
sti
lret
lods
dec
mov
bound
movsb
jmp
xchg
adc
out
jg
outsb
adcl
flds
and
aaa
js
movsb
in
push
clc
or
adc
movsb
mov
mov
ljmp
hlt
enter
jo
add
mov
push
jb
xchg
les
add
pop
mov
pop
and
gs
or
out
pop
mov
cmp
lods
push
push
js
sti
cmp
outsl
mov
testl
jmp
xchg
mov
push
adc
jl
fiaddl
jecxz
dec
dec
sub
into
call
hlt
outsb
add
clc
dec
push
inc
jne
mov
outsl
xchg
mov
xchg
cmp
push
es
packuswb
fwait
cwtl
mov
push
jns
in
stos
mov
jno
call
imul
and
repnz
inc
shrb
mov
jle
jnp
and
jl
mov
mov
ljmp
pop
cmpsb
loop
in
mov
int3
ror
xchg
movsl
cmc
and
push
out
mov
mov
cltd
dec
mov
mov
jne
mov
into
cmpsl
es
mov
fstpt
in
ficoms
enter
icebp
fimull
sub
xor
xchg
test
sti
dec
sahf
mov
shl
xorl
popa
mov
popf
xchg
nop
push
and
fcmove
adc
test
lahf
pop
push
lret
and
test
dec
stc
mov
push
dec
jbe
or
mov
ja
lock
pop
cmp
add
scas
mov
sbb
ljmp
in
jl
icebp
rcll
sub
cmpl
mov
insl
and
xchg
jnp
mov
adc
sbb
gs
dec
orl
ret
dec
int
cmc
sub
in
mov
stc
or
and
pop
push
into
icebp
sub
cmp
shll
iret
cwtl
mov
arpl
cmc
test
pop
mov
lret
adc
imull
or
adc
adc
xor
or
js
xor
sar
or
scas
mov
orl
int3
push
divl
imul
xchg
enter
in
adc
and
das
push
orl
clc
sub
sub
lret
jnp
scas
mov
cltd
subl
int3
xchg
add
push
sbb
adc
or
xchg
test
int
mov
xchg
outsb
sub
out
insb
push
or
pop
sbb
popf
test
cmpsl
pop
sub
int
cmp
ret
xchg
enter
push
sbb
push
testb
into
aam
mov
mov
mov
sub
sub
xchg
shrb
pushf
jns
arpl
add
inc
cmp
xchg
pop
mov
inc
outsl
mov
cmpsl
sbb
xchg
pop
jne
jg
movl
rcrb
push
inc
jl
pusha
dec
push
les
jmp
inc
mov
lods
xor
pop
xchg
fldl
popf
testb
call
hlt
fidivrl
cli
or
lret
jbe
sbb
sbbb
jbe
in
push
cmp
pop
pop
sbb
xchg
int3
pop
cmp
clc
cmp
sub
out
fnstsw
sbb
sbb
js
xorb
cli
mov
xchg
adc
mov
sbb
icebp
mov
lahf
popa
nop
pop
addr16
cmp
inc
dec
jmp
sbb
and
inc
xor
mov
aaa
push
lret
push
outsl
jl
push
bound
xchg
out
dec
das
sbb
inc
hlt
mov
dec
mov
xchg
jae
aas
or
mov
mov
nop
sahf
negb
inc
dec
jp
add
adc
jge
ds
repnz
add
cmp
shlb
cmp
cmp
or
push
int3
mov
or
aaa
in
push
cmp
in
push
sub
in
lea
icebp
cld
push
inc
xchg
xor
fidivrl
push
clc
ss
leave
js
shlb
data16
pop
add
adc
xor
sub
int3
push
push
mov
imul
adc
cld
inc
pop
push
inc
in
icebp
dec
in
shr
testb
movl
rorl
test
repz
stos
cwtl
adc
mov
push
fldcw
dec
out
pop
sbb
xor
das
out
xchg
rorl
mov
shlb
aaa
and
insl
aad
jno
xor
mov
aad
cli
push
dec
inc
push
add
fbld
sbb
fwait
xor
shrl
lea
imul
inc
cltd
cmp
push
out
push
adcl
and
and
mov
iret
cmp
xchg
mov
xchg
mov
lods
nop
orb
stos
mov
and
sti
icebp
rcrl
and
mov
filds
mov
repnz
lods
jmp
jno
popa
sub
movsl
sbb
or
jnp
imul
ljmp
int
lret
or
jno
ficoms
int3
and
sbb
cwtl
lahf
lcall
add
cmpsb
fmull
int3
lret
in
jmp
jns
pop
lahf
outsl
add
add
sub
push
flds
and
mov
mov
cli
jo
andb
push
xor
sub
mov
popa
cmp
add
ja
in
pop
jp
js
bound
rorb
mov
in
mov
fs
xor
and
ja
adc
test
negl
cld
xchg
xchg
cltd
lock
xchg
dec
aas
mov
cltd
insb
add
add
pop
fcoms
jmp
add
fimuls
rorl
pop
jge
and
jecxz
mov
mov
mov
aad
arpl
push
cmovge
mov
mov
test
and
test
sub
sub
jmp
cmp
jbe
fcmovb
or
xor
addr16
ds
push
sbb
leave
cmp
add
mov
xor
and
pop
mov
fcoms
or
cmp
add
mov
xchg
jl
sbb
add
inc
syscall
xchg
push
adc
mov
nop
insb
enter
pusha
es
js
xlat
cmp
ja
jmp
movsb
mov
jbe
idiv
shlb
mov
test
out
out
pop
sahf
mov
aam
dec
shrl
loopne
loope
std
in
and
out
and
jg
popa
mov
sub
call
push
cmp
andb
jnp
xchg
cld
xchg
cli
mov
mov
int
dec
adc
fnsave
stos
or
repz
inc
hlt
dec
cmp
cld
push
xchg
es
pop
sbb
or
sbb
ret
imulb
inc
orb
hlt
pushf
fimull
rcll
nop
sub
adc
out
dec
jae
iret
inc
stos
push
cmpl
dec
shrl
fisubrl
add
sub
rcll
pop
int
xchg
mov
loopne
sbb
neg
into
orb
cltd
adcb
mov
lock
pop
pop
sub
jle
adc
mov
mov
pop
daa
fcomps
cmpsb
scas
xchg
lahf
call
mov
cmp
mov
add
popa
leave
in
push
das
sub
cmp
cmpl
ret
or
mov
fstp
mov
jo
imul
mov
and
dec
sub
mov
int
jg
xor
mov
inc
ds
aam
fmull
or
pop
lret
inc
push
add
mov
xchg
outsb
aam
add
dec
lahf
adcb
sub
popl
cmp
jbe
in
mov
xchg
out
leave
dec
and
mov
xor
sbb
lea
fucom
cmp
ja
imul
jg
js
push
xor
and
ljmp
push
and
inc
stos
and
mov
inc
mov
cmpb
decl
ljmp
arpl
and
push
pop
jl
jmp
les
pop
dec
pop
shl
and
rolb
daa
fcoml
inc
xchg
sbb
sub
je
out
push
adc
std
cmp
shlb
mov
sbb
mov
pop
aaa
aam
xor
stos
aas
dec
hlt
xchg
cld
xchg
adc
in
es
out
arpl
mov
aad
loope
jge
pop
aam
push
inc
jae
sti
or
mov
mov
repz
add
sub
pop
into
dec
mov
dec
test
fnstcw
adc
cmp
or
pop
ret
xchg
cmp
scas
int
dec
dec
addr16
mov
adc
cmc
std
lcall
hlt
inc
je
imul
jb
add
sarl
and
sbb
pusha
cltd
test
xor
lock
lea
insb
jbe
mov
repz
data16
pop
xchg
lret
adc
mov
xchg
popf
cmp
roll
gs
dec
and
mov
jns
mov
inc
push
cmp
mov
xor
mov
mov
push
and
mov
inc
cmpsl
xchg
lret
arpl
shr
in
icebp
sbb
pop
inc
push
insl
ret
divl
arpl
push
adc
cwtl
aas
mov
fsubs
mov
decl
push
jle
movsb
adc
std
rep
rorl
stos
xchg
push
sbbl
fs
daa
in
ret
fimull
jnp
push
je
mov
jo
shrb
xchg
and
jo
ficomps
push
repz
cli
pop
pop
loop
inc
iret
lods
cli
push
leave
xorb
mov
push
sub
sub
xor
fstp
inc
or
lds
mov
scas
mov
sub
mov
add
mov
fcmovu
pop
test
js
lahf
stos
enter
lahf
inc
cmp
jo
insl
jmp
add
ficoml
xor
jae
das
jle
cmpsb
int
incl
dec
and
js
or
je
xor
lods
hlt
mov
push
cmp
push
push
pusha
jb
and
outsb
xchg
pop
add
xchg
inc
push
cli
jns
sahf
out
dec
test
addr16
int3
xor
push
movsb
std
rep
inc
sti
dec
sbb
xchg
sbb
xor
sbb
nop
lea
push
push
cltd
dec
jnp
stos
orl
add
scas
popf
jl
sahf
aas
push
movb
cs
fld
cwtl
cmp
fistpll
imul
je
push
sarb
xchg
lea
pop
pop
fcomps
fdivr
jne
and
mov
xchg
mov
jne
and
sbb
pop
mov
subb
ret
notb
mov
and
add
jno
adc
mov
jo
push
stc
cmpsl
cmpsl
lods
scas
out
xchg
push
std
ret
repz
push
sub
sbb
leave
cs
xor
leave
xchg
cmc
push
loop
mov
sbb
enter
pop
pop
insl
sbbl
ret
inc
mov
mov
jmp
add
pop
lods
xchg
icebp
jl
dec
repz
fwait
push
cs
xchg
repnz
out
pusha
jo
data16
add
mov
dec
or
stos
xchg
shrl
mov
pop
sub
hlt
mov
and
repnz
push
imul
popa
dec
pop
out
xor
sbb
lods
call
sub
ljmp
lret
test
cmp
addb
push
or
fcompl
lock
and
mov
pop
mov
movsl
subl
fsubp
loopne
add
mov
loopne
xor
in
shr
cmp
mov
cmpsl
je
mov
pop
or
sbb
mov
add
pop
sbb
mov
enter
imull
pop
lds
pop
add
xor
pop
lretw
divl
aam
push
mov
cmp
decb
insb
call
loope
ja
adc
loop
push
fdivrs
pushl
jl
stos
shll
movsl
arpl
mov
out
inc
sarb
les
in
enter
push
ret
adc
mov
aas
mov
mov
out
je
rcrl
fdivr
mov
add
orb
xchg
mov
mov
mov
test
push
imulw
stc
aam
shl
pop
aas
push
add
imul
fbstp
dec
xchg
aaa
jmp
dec
jl
inc
mov
enter
mov
lock
rclb
popw
test
repz
sbb
mov
push
adc
xchg
cmp
shrl
sub
sti
mov
push
mov
mov
lock
sarb
fldenv
xchg
mov
sub
and
fsubs
cs
or
shlb
imul
mov
push
pop
imul
in
ja
pop
out
sub
adc
push
push
mov
stc
fisubl
jns
mov
idivl
loop
mov
cld
jmp
cmpsb
sbb
push
dec
lahf
mov
insl
insl
jns
in
xchg
int
imul
dec
aas
inc
cltd
lock
bound
ljmp
push
pop
mov
adc
pop
dec
outsb
sbb
mov
jae
push
adc
cmp
inc
cmpsl
addr16
jmp
and
out
ds
xor
and
inc
mov
test
ja
bound
mov
movsb
or
mov
fmul
popf
mov
mov
cli
cmpsb
xchg
xchg
xlat
inc
sbb
jle
stos
inc
popf
and
sub
adc
dec
imulb
aad
call
push
inc
es
jae
xor
lea
mov
ret
sbb
loope
fcmovnu
outsl
sbb
cmp
cmp
sbb
add
dec
xchg
sbb
mov
adc
jno
fdivp
test
mov
rcll
repnz
mov
pushf
lret
fld
sbb
pop
movsb
inc
movaps
push
iret
lea
mov
adc
insb
lret
notl
sbb
pop
sub
loop
int3
cli
dec
clc
pop
push
stos
jecxz
out
xlat
call
gs
mov
mov
mov
sub
jns
rorl
mov
jp
push
push
lret
sahf
or
cmp
add
pop
or
sbb
shlb
cmc
daa
xchg
sbb
pop
rcr
mov
or
js
push
sub
fwait
jmp
inc
fcmovne
mov
inc
fwait
fs
xabort
add
push
idivl
out
lea
pop
jns
dec
das
mov
ficoml
pusha
mov
call
push
popf
adc
adc
mov
ja
mov
xor
adc
inc
pusha
mov
cmpb
or
das
mov
or
dec
xor
mov
mov
mov
ret
pop
out
jns
lods
adc
fnstcw
mov
xchg
je
pop
mov
pop
dec
loope
ljmp
pop
shll
loop
jns
push
pop
jae
hlt
shll
xor
outsl
testl
icebp
dec
imul
xchg
jb
pop
cmp
adc
pop
push
xlat
sarb
clc
push
pop
xchg
add
push
test
or
dec
cmpsl
adc
dec
add
das
ljmp
cmpb
inc
mov
lock
shlb
je
xlat
or
jo
mov
add
adc
mov
jecxz
pop
ret
fnstsw
or
fs
and
mov
cmp
mov
scas
adc
mov
jg
scas
outsb
push
movsl
mov
out
pop
lock
mov
jg
jae
insl
insb
xor
ss
lcall
push
sub
hlt
pop
add
push
loop
mov
cltd
pop
icebp
pop
insb
add
lock
stos
push
or
outsl
test
popf
sub
fstps
xchg
dec
out
imul
lods
cmpsl
push
in
xor
mov
adc
pop
cmp
dec
movsl
cmpsl
jne
sub
test
outsb
and
xor
xor
add
loope
xor
ss
mov
xor
push
jae
sub
sahf
push
or
xor
cmpsb
mov
cmp
or
outsb
cmpsb
movsl
mov
and
cmp
out
push
or
push
iret
repz
dec
movsb
inc
shll
xchg
xorb
fwait
push
xor
ret
xchg
and
scas
or
xor
inc
jns
sub
pmulhuw
int
mov
sarb
insl
in
orl
int
outsl
sahf
and
cltd
jo
mov
stc
jo
int3
sbb
push
adc
fists
push
xchg
lret
rol
pop
aam
lret
jl
dec
dec
or
cld
sbb
test
pop
lret
inc
inc
and
dec
sub
mov
xor
mov
and
xor
mov
aas
sub
stc
jne
inc
imul
dec
sarb
cmpsl
and
idiv
test
scas
inc
cli
dec
dec
lock
outsl
into
adc
popa
sub
out
int
mov
jmp
out
stos
in
ds
data16
int
mov
adc
mov
add
or
lea
xor
push
inc
mov
fwait
in
or
faddl
lods
push
aad
out
sub
sarl
aad
jno,pt
sub
lods
aam
out
rcll
popa
push
xchg
stos
mov
mov
test
jb
pop
int
movsl
test
dec
cmp
rcl
adc
dec
inc
movsl
roll
sbb
cmpsl
es
mov
repz
mov
vpmacsdd
fs
add
and
push
mov
jmp
mov
aaa
xchg
stos
mov
out
clc
sub
or
fmuls
in
mov
movsb
repz
cltd
in
jo
int3
js
xor
jge
fnstenv
add
out
adc
cltd
shl
mov
addb
xor
icebp
sub
push
test
dec
pop
outsl
lret
dec
test
pop
cmp
call
inc
mov
cli
jg
and
rol
pop
inc
or
cli
sti
loope
pop
roll
dec
cmp
mov
inc
pop
aas
push
or
push
sarb
out
add
jno
bound
out
push
mov
mov
xor
mov
inc
adc
loop
push
pop
push
adc
adc
sub
adc
loope
das
mov
push
push
out
jg
jb
sub
js
dec
loope
push
sub
mov
cld
push
clc
xor
jbe,pn
inc
and
or
outsl
mov
inc
xchg
shll
xchg
xchg
mov
and
aad
nop
je
and
clc
mov
lret
push
mov
fwait
sbb
push
mov
gs
adc
stc
mov
mov
xchg
mov
into
push
or
subb
sbb
jecxz
xchg
dec
add
jecxz
jo
pop
adc
mov
pop
xchg
lea
in
push
mov
or
fs
push
jns
mov
mov
ret
fiaddl
data16
leave
imull
pop
or
repnz
dec
pop
cld
imul
push
dec
and
data16
adc
rorb
fcmovnb
shr
lret
sbb
mov
sbbb
push
pop
jo
dec
xor
or
cld
add
cmp
sahf
cmp
adc
fsubrp
das
sub
and
xor
sbb
and
mov
data16
test
adc
inc
pop
movsl
cmp
mov
and
jb
jp
mov
arpl
xchg
dec
jo
idivl
mov
mov
inc
push
mov
popa
pop
ljmp
daa
shrl
sbb
je
dec
cwtl
jecxz
xchg
stos
or
push
loopne
test
mov
out
shl
ss
xor
icebp
push
inc
push
add
mov
cmp
in
mov
movsl
sub
in
xchg
push
push
xchg
repz
mov
in
iret
jp
xchg
dec
mov
xor
mov
stc
lea
scas
sub
loope
js
mov
adc
inc
movsb
lret
in
sbb
cmpsb
cli
push
fstpl
cmp
inc
inc
scas
jo
jle
mov
and
divl
movsb
scas
es
insl
out
popa
loopne
aaa
scas
cltd
repnz
sbb
ljmp
popa
ss
xor
mov
cli
and
imul
mov
or
ror
aam
call
imul
cmp
cs
inc
jp
push
xlat
pushf
cmpsb
xchg
dec
push
cmc
imul
int3
fs
jno
xor
jmp
lret
jne
mov
mov
fcomi
ds
div
or
adc
rcrb
out
mov
addb
cmpsb
pop
dec
andb
ja
sub
jne
push
add
mov
push
lods
ficoms
sub
push
jle
bnd
jecxz
mov
sub
cltd
into
daa
icebp
xor
dec
inc
adc
adcl
mov
outsb
pop
es
mov
cmpsb
mov
lea
mov
es
add
mov
sbb
data16
mov
lahf
iret
mov
popf
add
pop
jo,pt
out
inc
stos
icebp
adc
fwait
xor
popf
mov
fidivs
mov
out
push
sbb
bound
jo
stc
xchg
imul
mov
mov
dec
dec
push
lret
fisttpl
xor
sbb
ss
cmp
xchg
aaa
lock
ljmp
insl
nop
adc
repnz
mov
push
ja
sbb
popf
into
adc
add
fwait
and
or
dec
lahf
arpl
add
or
das
outsl
fisttpll
stos
cmp
inc
ret
sub
mov
xlat
xchg
movsb
outsl
mov
sbb
cld
sub
adc
scas
pop
xchg
sub
test
testl
enter
inc
repz
xchg
dec
iret
scas
mov
rorb
jmp
cmpsl
cmc
pop
push
push
sbb
or
outsb
jg
fs
decb
mov
add
sbb
pop
cmp
pushf
in
pop
inc
xlat
push
push
jb
ja
push
adc
mov
lret
inc
lds
pusha
sub
frstor
into
jno
arpl
xor
cmpsl
adc
mov
xchg
pop
dec
push
xor
add
lret
cmp
test
lea
mov
mov
cld
dec
mov
das
ffreep
scas
dec
into
push
xlat
jmp
adc
dec
std
push
xchg
jecxz
dec
test
cld
lock
popa
in
mov
movsl
jns
lods
adc
jp
mov
leave
jecxz
lahf
call
mov
cmp
lods
mov
into
pop
push
loope
repz
lock
sti
and
adc
sbb
mov
iret
jb
loope
cmpl
jb
inc
pop
popf
scas
jns
inc
jo
pop
in
rorb
xlat
int
push
sbb
mov
repz
adcl
push
sub
cmp
aad
xchg
sbb
xchg
addl
daa
popa
and
es
cmc
mov
pushf
mov
sti
in
iret
mov
jle
push
sbb
aad
adc
sbb
ja
and
mov
jmp
into
lock
cltd
shll
ss
xor
sahf
or
sub
and
cmp
aaa
jnp
test
test
fwait
sbb
cltd
jg
aaa
pop
sub
cmp
movsl
mov
cli
dec
dec
cwtl
fcomps
mov
jbe
and
les
test
and
sbb
dec
xchg
xchg
scas
pop
fidivrl
fwait
mov
sbbb
rol
jmp
push
out
lods
ja
cmp
jmp
xor
stos
mov
out
pushf
lcall
in
jle
mov
push
popa
and
mov
mov
cmpsl
sub
les
add
cmp
inc
icebp
fsubrl
pop
sarb
and
sbb
fwait
sub
fmuls
cmp
pushf
adc
jo
pop
clc
jb
adc
cli
loop
insb
je
push
push
loop
les
or
push
pop
je
test
mov
cwtl
ljmp
mov
test
mov
push
shl
icebp
mov
imul
mov
mov
imul
jb
sti
or
popf
lods
or
imul
jge
pop
popf
and
jb
dec
fwait
iret
out
adc
enter
gs
in
xchg
xchg
decb
fcomi
ds
jecxz
popa
push
sbb
test
fwait
push
loope
neg
shlb
jno
mov
jbe
jnp
xor
out
add
push
pop
cmpl
cmpb
cmpsl
movsl
aas
xlat
jb
hlt
out
or
sub
ja
frndint
mov
jbe
mov
arpl
xchg
and
mov
jo
mov
add
or
sub
cltd
imul
adc
push
mov
dec
mov
push
movzwl
shlb
cmp
and
sbb
ss
inc
shrl
icebp
idiv
or
into
sbb
xchg
mov
imul
pop
jp
jbe
jnp
sti
xchg
fstpt
add
pop
mov
sbb
aas
fnstenv
mov
xchg
pop
fisubs
into
adc
push
and
push
inc
lds
addl
in
pop
jge
lahf
popa
scas
sbb
or
arpl
pushf
ljmp
mov
push
jns
mov
in
rcr
inc
push
push
mov
jb
imul
push
lret
xchg
mov
sbb
fstpt
outsb
sub
int
dec
outsl
jb
push
push
cmp
daa
std
sbb
icebp
dec
or
stos
push
sahf
cmp
imul
lods
pop
stc
jb
push
jmp
cmp
clc
les
jg
aad
mov
push
push
xor
out
fisubrs
dec
pop
clc
pop
gs
lahf
jno
pushf
fldcw
xlat
push
andl
dec
ret
dec
bnd
adc
inc
sbb
or
push
punpckldq
or
adc
nop
add
or
es
stc
push
jbe
repnz
jmp
out
filds
or
jb
dec
and
decl
in
cli
lret
cwtl
mov
mov
jp
stc
lods
push
jl
sbb
xchg
mov
jbe
sbb
fisttpl
das
mov
rcr
add
leave
jp
arpl
push
outsl
mov
cmp
addr16
mov
test
je
int
daa
rcrl
mov
fldcw
dec
push
popa
sbb
or
das
std
insl
push
fnstcw
fstpt
stos
imulb
movl
test
test
mov
sbb
pop
dec
xchg
insl
imul
insb
xlat
shrl
popa
out
xchg
sub
xor
setne
push
js
rcr
mov
insl
xchg
sub
dec
push
stos
inc
dec
rclb
xchg
outsb
xchg
lret
sub
sub
jae
ja
cmpsb
stc
inc
icebp
mov
jmp
push
xchg
push
in
inc
and
adc
mov
adc
ja
sbb
rorl
repnz
adc
inc
into
daa
mov
cmp
fsubl
add
jle
fisttps
pop
push
push
push
adcl
xor
aam
or
cmp
add
mov
xchg
hlt
testb
xor
jle
ljmp
adc
fmul
in
ds
test
imul
dec
cmpsb
cli
jge
cmp
shrl
out
jg
lret
addr16
cld
fisubs
pop
cld
cwtl
inc
mov
jb
rclb
jae
dec
aaa
sbb
sub
inc
xchg
clc
test
pop
sbbb
mov
xor
mov
out
daa
repnz
and
sub
jae
cmpsl
cmpsb
pop
psllq
xchg
mov
sbb
leave
cs
incb
inc
imul
cmpsb
cmp
add
nop
push
std
dec
cmc
int
and
or
adc
mov
repz
ret
ja
sbb
inc
push
push
nop
push
sub
out
fcmovbe
repnz
scas
icebp
loope
rcrl
or
push
in
mulb
ljmp
mov
jl
sub
psubusb
fxtract
popa
cmp
popa
sti
ffree
pop
cmpsb
push
jnp
adc
movsb
icebp
addl
lcall
dec
jge
adc
movsl
inc
enter
xlat
and
nop
subb
and
out
jbe
mov
or
push
mov
rclb
scas
cmc
sbb
xlat
movsb
jo
jbe
mov
aad
ja
lcall
lret
inc
cs
sub
push
dec
leave
jge
stos
add
test
xor
leave
iret
xchg
push
decb
dec
sub
arpl
fs
rcl
data16
pop
out
mov
out
push
adc
das
mov
and
cld
push
movsl
out
arpl
pop
push
sbb
ficoms
inc
jne
jb
mov
std
lea
xor
push
mov
add
push
scas
add
xchg
in
push
mov
fs
es
jle
jae
adc
scas
pushw
ret
das
stos
dec
mov
aas
jnp
cld
mov
jge
cltd
cmp
mov
xchg
cmpsb
or
repnz
cli
sub
xchg
and
fstpt
lds
jbe
xor
jmp
popa
lea
or
adcb
xchg
and
mov
out
in
sub
jae
stos
push
lret
xchg
pop
loope
mov
icebp
mov
jne
push
rolb
push
push
sbb
mov
and
int
xchg
inc
xchg
push
jp
lret
inc
fsubrl
cmp
or
xchg
pop
outsb
xchg
xor
dec
push
ljmp
nop
xchg
or
test
into
jecxz
fcmovnbe
mov
fistpl
push
mov
inc
and
pop
lcall
mov
xor
and
sbb
sbb
lahf
test
cld
scas
mov
jmp
andb
mov
out
xchg
xor
data16
stc
sahf
sti
mov
and
and
js
mov
xchg
loop
scas
shll
cmp
pop
rorb
jge
inc
inc
mov
cmp
mov
inc
mov
test
test
movsl
addb
push
in
dec
push
dec
lea
xchg
push
std
cmpsl
in
sub
xchg
or
jp
cmp
inc
iret
clc
loopne
fnstenv
movsb
mov
daa
mov
lret
or
std
add
add
push
loopne
ret
sarb
stc
pop
out
or
xchg
stos
andl
call
cmp
inc
lcall
jns
fldt
in
xor
xchg
aam
mov
leave
dec
dec
aaa
outsl
mov
or
sub
test
push
sbb
cmpl
pop
cmc
push
mov
adc
pop
xor
js
xchg
xchg
mov
push
add
sbb
push
or
out
push
aam
sub
jp
imul
add
mov
xchg
iret
sbb
mov
add
push
pop
xchg
pop
sbb
hlt
or
stos
fs
jns
jl
jmp
fnclex
sarb
push
pop
inc
loopne
aam
adc
fcmovbe
int3
sub
sahf
lret
and
dec
lds
add
insb
shl
pop
mov
push
aam
fcmovnu
repnz
cli
aam
add
mov
or
sbb
andb
jmp
lods
repz
enter
pop
mov
inc
xor
cmp
push
testb
xor
push
mov
pop
or
mov
scas
sub
dec
push
lahf
insl
jb
hlt
pusha
iret
jnp
out
lds
sub
in
push
loopne
lock
out
pop
mov
sub
lea
cmp
in
push
cmpl
xor
cmp
xchg
inc
cmpsl
jge
inc
hlt
xor
xchg
out
inc
mov
loop
push
cs
pop
shrb
mov
add
xchg
push
iret
and
push
es
arpl
mov
pop
xor
pop
test
mov
mov
or
inc
pop
dec
cmp
nop
pop
fs
mov
mov
dec
sbb
inc
xor
mov
sub
cld
or
loope
pushf
js
mov
xor
addr16
ljmp
inc
inc
data16
and
mov
and
bnd
xlat
mov
inc
hlt
push
out
pop
fwait
adc
negl
in
pop
mov
jle
push
mov
and
daa
in
test
into
jnp
or
ret
push
add
jmp
enter
xorb
cld
dec
mov
adc
pusha
dec
xchg
mov
dec
push
xor
sub
testb
movsl
xor
lret
xchg
mov
xchg
mov
test
outsb
aam
out
xor
dec
test
xchg
dec
push
jb
test
push
cld
in
pop
mov
pop
jp
jl
mov
sbb
inc
pop
test
sub
pushf
mov
orl
ss
out
out
mov
xchg
xor
or
inc
data16
mov
xchg
xchg
inc
mov
aad
sbb
je
nop
inc
and
inc
or
xor
cltd
icebp
sbb
insb
lahf
jnp
mov
insb
jo
sub
lds
lods
add
das
aad
pop
dec
inc
inc
push
push
mov
addb
and
addr16
mov
add
out
out
cmp
outsb
test
fisubrs
pop
int3
popa
iret
cs
dec
daa
jl
stos
insb
push
sub
inc
imul
mov
add
shlb
adc
cmp
xor
mov
dec
jne
push
idivb
in
inc
popa
mov
mov
std
xlat
inc
dec
push
xchg
cmc
lods
mov
jmp
add
adc
stos
imul
mov
rcl
js
cltd
jmp
cwtl
push
or
xchg
push
jbe
fldenv
loop
popa
mov
or
addr16
mov
leave
inc
fistpll
sbb
dec
in
inc
cmc
mov
outsl
ret
xor
enter
xor
clc
fidivrs
adc
inc
clc
fucomip
sub
xor
jl
and
push
xor
pop
je
xchg
cs
and
inc
sbb
mov
and
jae
push
jge
insl
cmp
sub
es
lret
xchg
out
in
in
lret
cmpsb
ss
mov
cmpsb
mov
shlb
adc
fnstcw
cmp
test
sahf
and
mov
push
mov
mov
xchg
jmp
int3
push
mov
subl
mov
jl
fcompl
jb
jo
mov
ds
add
std
adc
and
dec
and
adc
mov
sub
xchg
jne
xor
and
inc
mov
lock
push
adc
rcl
jmp
lcall
push
or
inc
mov
xor
pop
dec
cmp
loop
add
clc
mov
cli
xchg
sbb
or
mov
sub
stos
lea
int3
and
popa
cmp
jns
mov
int
mov
imul
push
xor
call
sub
ficompl
cmc
lock
push
fsubs
jb
cmp
xchg
repnz
inc
sub
jae
je
mov
aad
cmp
and
adc
outsl
cmp
sbb
subl
jbe
lcall
outsb
int3
and
inc
push
int
insb
push
or
dec
movsb
in
xchg
or
jmp
adc
push
out
ret
inc
and
mov
sub
push
inc
cmp
jge
daa
pop
mov
das
pusha
fucom
pop
sub
xor
pop
xchg
add
cmp
insb
dec
andl
jo
lret
jns
cmp
popf
inc
or
filds
out
loope
add
sbb
xchg
lret
test
mov
data16
add
jnp
stos
mov
inc
xor
lods
lcall
fldl
jo
mov
push
dec
add
dec
pop
sub
mov
mov
les
das
inc
iret
adc
dec
xor
int
mov
rolb
pop
sbb
push
mov
popa
sub
xchg
cmpb
in
lock
xchg
and
rolb
and
scas
dec
mov
stos
jp
movsl
movsl
cli
jne
popf
jle
push
dec
movsl
into
lcall
es
push
cs
sbb
add
ljmp
push
cmp
dec
and
fs
cmpb
mov
mov
aaa
loope
fsub
mov
push
stc
sub
cmp
xchg
in
loope
enter
push
jmp
inc
pusha
xchg
test
lock
jae
test
ss
sbb
shlb
sub
jb
push
lcall
jl
push
test
xor
push
inc
es
mov
cltd
xchg
dec
aad
cmp
sub
rorb
sub
imull
leave
xor
fldcw
stos
cmp
sti
cmpb
test
lods
cmpsb
inc
aam
aam
loopne
popf
adcb
sub
andb
add
xchg
in
and
pop
and
pop
xor
fisttpl
pop
mov
pop
fs
ss
out
cwtl
push
xchg
xor
aam
movsb
mov
mov
and
sahf
in
rcrb
cs
cld
mov
xchg
jnp
andl
cs
xchg
cmp
jecxz
cmp
or
xor
adc
mov
jnp
xchg
lock
add
sub
in
imul
int3
mov
sbb
fidivrs
sbb
jae
jg
xchg
repz
es
cmc
shrb
fcoml
icebp
sbb
or
jne
cs
fwait
imul
pop
cs
xchg
add
cmpsl
dec
push
sub
aam
stos
cmp
mov
sarb
loopne
mov
mov
and
add
cmp
adc
mov
addr16
adc
pop
aam
pop
jl
xlat
adc
mov
icebp
mov
xor
aaa
mov
in
jne
xor
fs
bound
das
in
outsb
pusha
jns
pop
jne
addr16
loop
jmp
je
push
outsb
in
mov
andl
shlb
push
adc
or
movb
pop
popf
int
daa
or
xor
mov
jnp
mov
xchg
xor
es
cmpsl
add
ja
addr16
jmp
sar
leave
xor
mov
icebp
aad
mov
lret
ljmp
push
jmp
pop
or
mov
push
in
negl
sbb
mov
mov
in
xchg
lret
mov
mov
mov
fsubrs
pop
scas
sti
popa
popl
cmpsl
fistpl
test
outsl
dec
dec
pop
push
adc
shlb
inc
cltd
int3
inc
adc
jae
mov
pop
push
cli
xchg
outsb
jg
dec
popa
mov
fwait
iret
aad
iret
cmp
jge
and
xchg
xor
mov
notl
movsl
jge
movsl
test
sbb
sahf
dec
xchg
push
cwtl
push
outsl
insl
inc
shl
fiadds
sbb
jl
xor
mov
fisubl
inc
mov
ljmp
or
iret
push
mov
lcall
fwait
jl
mov
in
inc
sarl
push
call
into
sub
nop
insb
fs
mov
mov
add
rcll
mov
scas
shr
int
push
sbb
popa
xor
mov
push
cmp
sahf
sub
sub
cmp
xor
mov
pop
sbb
mov
fists
mov
sub
scas
mov
in
divps
fs
or
jge
or
scas
xchg
dec
inc
jb
fwait
das
subl
bound
push
lock
loop
loop
jmp
mov
mov
mov
push
jle
mov
adc
sub
in
pop
popa
sbb
xor
mov
push
cli
fdivl
push
mov
and
popf
jnp
sbb
sub
inc
rep
insb
imul
jae
mov
cli
adcl
push
je
lock
xchg
sub
and
jnp
jo
xlat
sub
add
or
jecxz
sbb
mov
xor
adc
loopne
inc
cmpsb
leave
cmc
dec
inc
sub
test
imul
ljmp
fbld
data16
in
gs
in
or
test
ss
into
push
sbb
aam
sbb
jl
fdivr
incl
jo
push
cwtl
jp
leave
fcmovu
mov
jmp
xor
xchg
lret
imul
xchg
int
outsl
leave
or
xchg
loop
jno
mov
imul
mov
jecxz
fs
pop
or
xchg
stos
inc
mov
dec
test
daa
lcall
or
jecxz
mov
xchg
popf
mov
mov
imul
cmp
into
gs
jae
add
mov
sub
xlat
jne
or
fisttps
cmp
mov
aas
test
leave
xchg
or
jne
adc
cmp
es
cmpsb
xchg
mov
decl
push
xchg
xlat
mov
fdivr
test
subl
xor
push
pop
insb
xor
mov
add
into
sbb
addr16
push
xchg
nop
xor
gs
and
in
test
sbb
add
jb
xor
cmpsl
and
sub
inc
test
push
cwtl
movl
xchg
cmp
sub
lods
rcrb
sub
jle
sti
mov
sti
jmp
idivl
cmc
rorl
dec
xor
add
js
jno
fmul
pmulhuw
xchg
mov
sub
jmp
push
addr16
mov
and
aaa
in
fsubrl
push
sbb
adc
je
cmpb
sub
mov
scas
jge
in
push
mov
ret
out
hlt
push
lods
sub
add
fld
adc
inc
or
in
sub
pop
popf
sub
push
sub
enter
insb
jmp
daa
cli
aaa
pop
jns
jnp
push
out
pusha
mov
mov
or
imul
scas
cld
mov
mov
sahf
cmp
rcrb
imul
mov
stc
pop
loop
int
xchg
loop
fildll
cmpb
es
loopne
popf
lret
iret
cltd
jg
or
jecxz
sub
shlb
mov
nop
fsubr
jg
add
pop
or
xor
mov
aaa
lods
enter
push
sub
cld
xchg
pop
add
lret
test
test
xchg
outsl
cmp
xchg
fnstsw
ret
lcall
jae
mov
push
mov
mov
test
pop
lods
jp
cmpsl
add
hlt
enter
cmpsb
push
in
xor
pop
sbb
xchg
sub
fldenv
dec
scas
cwtl
andl
outsl
lods
cmpsb
push
repnz
dec
mov
cmc
jg
ss
push
inc
add
jecxz
negb
mov
add
adc
mov
sarb
out
jl
add
xor
test
mov
gs
test
xchg
dec
imull
repz
mov
test
lods
push
imul
push
repnz
shll
fsubs
out
test
sbb
pop
mov
adc
adc
mov
push
icebp
sbb
addb
les
rcrl
mov
in
jns
sub
shlb
mov
add
adc
mov
je
out
sub
sti
add
pop
jne
adc
addr16
ret
xchg
cmp
xor
mov
movl
pop
or
and
imul
xlat
cmp
mul
push
jecxz
imul
int3
fs
lods
xchg
jl
mov
out
adc
fimuls
push
jl
add
scas
adc
in
sub
jo
pop
inc
and
jl
xor
and
fbld
pop
pop
push
sbbb
out
push
data16
or
sbb
inc
rol
and
jns
xlat
jmp
dec
aad
mov
or
gs
mov
cs
inc
int
das
data16
das
insl
movsb
cmp
add
xchg
and
pusha
movsl
mov
scas
in
aam
push
lahf
fs
or
xchg
jns
push
in
stos
pop
mul
xor
and
scas
pop
cmpsl
mov
add
into
dec
je
lods
dec
subb
mov
out
popf
cmp
cld
mov
push
inc
ljmp
movsb
xchg
enter
loopne
cmp
loopne
mov
xchg
jo
gs
add
shl
std
lock
aas
les
add
xor
add
and
je
push
popf
arpl
jne
jmp
movsb
sbb
test
repz
adc
jmp
xchg
in
push
and
in
out
popa
daa
test
loope
hlt
test
pop
in
cmp
pop
shrl
xor
les
push
dec
add
mov
xchg
sbb
adc
into
jnp
push
inc
into
mov
fcmovu
ljmp
testb
cmpl
rol
dec
ret
pushl
push
dec
dec
jae
inc
mov
orl
jo
jp
jl
inc
stc
adc
cld
inc
lods
ds
and
sub
aad
fbld
mov
shrl
and
mov
adc
mov
jno
mov
cmpsb
aam
inc
mov
mov
inc
add
jno
jle
std
mov
xchg
stos
sbb
mov
test
pop
aas
popf
mov
popf
adc
push
cmc
iret
xchg
mov
mov
aad
std
pushf
mov
fs
adc
adc
and
add
and
dec
movsl
ja
iret
enter
mov
aad
and
xchg
pop
call
mov
pop
inc
mov
icebp
popf
out
in
jecxz
mov
cmp
and
inc
mov
adc
into
ljmp
and
stc
dec
sbb
cs
fisubs
shll
inc
mov
outsb
pop
fdivs
cmpsb
mov
or
rorl
outsl
mov
jno
test
pop
std
sarb
dec
cmp
xor
push
call
lods
sahf
adc
mov
push
xor
fidivrs
push
mov
loopne
insb
and
adc
idivl
and
xor
jo
sub
into
mov
and
bound
movsb
fistpll
lea
mov
xchg
pop
or
aaa
and
insb
ss
ljmp
sti
add
ret
mov
or
mov
pusha
das
dec
mov
aas
mov
das
fs
ljmp
dec
xor
jecxz
xchg
iret
pop
or
xor
test
xchg
dec
jecxz
mov
es
cwtl
xchg
mov
jns
imul
add
cmc
xchg
loop
in
popf
clc
lret
push
fwait
negb
movsl
mov
mov
cmpsb
out
ret
sbb
mov
adc
push
clc
and
or
scas
push
leave
das
loope
xor
and
ja
cmc
aam
push
in
xchg
mov
inc
push
mov
jle
push
fs
jmp
push
fs
rcrl
and
and
xchg
adc
adc
inc
sbb
lahf
aaa
mov
jecxz
sub
cmp
scas
and
cmp
shrb
out
lahf
sbbl
pop
cmpsb
pmuludq
push
divb
sub
xor
dec
push
jns
lret
pop
in
xor
roll
mov
cmp
mov
fidivl
cmpsb
test
bound
cmpsb
mov
cmpb
cmp
pop
shlb
pop
add
fs
f2xm1
hlt
test
cmpl
push
and
sti
shl
aam
out
inc
add
std
int
sub
and
xchg
test
fstpl
jno
and
int3
ret
inc
call
inc
icebp
add
aaa
fwait
jg
out
out
or
jbe
movb
lcall
shlb
and
xor
dec
dec
es
sbb
adcb
insl
ror
lock
test
andl
ficomps
mov
call
mov
ret
xchg
dec
push
jle
mov
add
xor
mov
jno
jb
mov
sub
jmp
inc
xor
pop
sbb
xor
bound
xlat
mov
xlat
mov
clc
or
repz
cmp
test
add
xchg
mov
popa
or
xlat
sbb
cmp
mov
adc
dec
flds
cmpsb
lahf
daa
stos
stos
pop
inc
popl
xchg
int
loope
inc
inc
add
mov
loop
push
xor
add
ret
pop
sub
movsb
outsb
jg
mov
rcrb
hlt
adc
jb
push
or
jno
popf
testb
test
jmp
aam
push
pop
movsl
nop
js
fmuls
jge
scas
inc
or
lahf
push
cmp
bound
and
gs
into
repz
int
notl
sub
sub
sbb
push
test
and
pop
mov
out
jmp
fsubrl
and
jb
dec
xchg
dec
push
cmp
lret
xchg
cs
jg
mov
push
xchg
enter
mov
es
les
cs
cmp
mov
movb
lcall
mov
and
stos
iret
add
cmovle
pop
mov
sbb
daa
je
push
inc
pop
adc
and
andb
inc
xor
cmc
mov
mov
adc
pop
fistpl
adc
push
jbe
pop
jns
cmpsl
je
jbe
leave
mov
paddusb
jg
sarb
mov
pop
push
inc
jo
or
xchg
dec
notb
mov
negb
lds
pop
sti
in
xor
shrb
or
fdivr
ficoms
mov
sub
into
cmpsb
lods
test
jb
jno
ds
ljmp
pop
shll
cmp
lea
adc
mov
and
test
icebp
gs
push
lods
sub
and
lds
pop
cld
rolb
test
mov
dec
outsb
fcmovnu
into
fincstp
pop
in
loop
cs
sti
xor
and
ljmp
es
inc
fwait
mov
sbb
cmpl
lea
in
or
adcl
pop
push
or
sbb
mov
xor
cs
leave
rol
out
inc
or
dec
mov
push
pushf
daa
sti
aad
pop
nop
xchg
das
push
std
push
fucomip
mull
je
fildll
cmp
dec
inc
shlb
enter
stos
jg
lods
sub
cmp
leave
dec
or
sub
mov
inc
pop
test
icebp
adc
jb
cmc
sbb
rcrb
lock
sub
add
adc
pushf
mov
push
loop
popa
shlb
insb
cwtl
fcmovnbe
jl
lea
adc
fld
negl
ror
push
inc
push
lea
sub
sub
enter
test
repnz
mov
fdivl
enter
push
adc
imul
movsb
das
mov
aad
dec
lods
mov
push
jl
sub
addr16
mov
mov
hlt
cmp
test
repz
lahf
push
mulb
movl
inc
lds
push
jo
xchg
lret
adc
mov
jns
iret
sbb
jne
cmp
push
dec
mov
inc
popf
xor
and
push
mov
insl
movsl
or
cli
mov
fsub
ljmp
push
out
mov
pop
push
push
or
dec
sub
jae
pop
fnstenv
ret
pop
mov
xchg
dec
pop
xchg
add
and
arpl
outsb
fcomp
scas
pusha
lret
add
and
call
movsl
or
call
ljmp
jne
fistps
daa
xor
mov
test
lods
mov
add
xor
and
loope
push
mov
jl
lea
xchg
fisttps
mov
xor
xor
mov
inc
jne
negl
xchg
mov
je
sbb
or
add
sub
fimuls
test
or
ret
push
call
mov
imul
cmp
xchg
roll
xchg
jno
out
mov
cmc
inc
loope
and
pop
shr
pop
jge
inc
dec
jno
sbb
pusha
inc
test
into
inc
pop
inc
clc
arpl
fildl
jne
pop
popa
in
in
lcall
jno
mov
out
xchg
ljmp
xor
jns
jne
sbb
push
loope
data16
mov
shll
add
push
xor
dec
adc
xchg
call
lds
imul
xor
xor
lret
stc
faddl
movsb
aad
add
fsubrl
cmp
es
lcall
mov
dec
sub
mov
pushf
loop
test
and
push
in
inc
ret
mull
or
shlb
loope
ds
insb
and
cmp
ret
fs
mov
movsb
inc
pop
pop
pushf
pop
hlt
loope
scas
push
out
lea
sub
stc
sub
cs
xor
add
daa
xor
jns
mov
insb
pop
rorb
sarb
inc
aad
popf
push
xchg
aam
sbbb
inc
xchg
dec
in
enter
mov
insb
or
icebp
lret
push
lret
mov
loopne
out
lret
inc
adc
rcl
pop
mov
adc
mov
sub
push
mov
xchg
add
dec
push
ffree
jge
std
sub
push
mov
leave
dec
mov
sbb
mov
dec
es
cmp
cwtl
mov
imul
xchg
mov
cmpsl
aas
pop
and
out
and
call
iret
data16
cmp
in
mov
pop
insb
hlt
pop
outsl
cltd
inc
imul
test
sahf
cmp
xor
lock
shl
push
outsl
cltd
fnstenv
inc
jb
sbb
sbb
icebp
fstl
loop
cmp
insl
les
mov
and
sarb
push
inc
lret
shlb
pop
test
jno
bnd
jl
int3
mov
ja
scas
xchg
mov
push
sub
mov
or
js
add
adc
ljmp
xchg
dec
es
stc
add
mov
andb
aam
es
add
pop
and
jg
ja
dec
sbb
mov
add
cmp
push
mov
mov
push
sbb
gs
pop
pop
inc
inc
mov
mov
imul
and
sarl
imul
shrb
lcall
push
mov
adc
xor
mov
scas
fmuls
jae
rcl
es
xlat
fstps
sub
outsl
daa
stc
sti
sbb
out
xchg
xchg
fisttpl
push
pop
mov
std
dec
push
in
pop
and
xor
test
add
lds
jne
or
gs
cmp
jns
sbb
hlt
mov
xchg
add
cmpsb
out
nop
out
sub
or
push
jp
add
sub
jne
imul
fcmovu
pop
mov
cmp
push
cmc
pop
data16
add
hlt
sbb
int
mov
repz
adc
sbb
fcomip
aaa
sti
out
aam
loopne
fldpi
es
xchg
jp
out
mov
ret
mov
dec
dec
int
jnp
xor
lock
dec
push
cmp
push
imul
fwait
and
cmpsb
aaa
ja
es
xchg
addr16
dec
ja
inc
add
pusha
cmpsb
push
push
adc
dec
cmp
repnz
aas
cmp
push
xor
add
mov
cmp
mov
xchg
sbb
add
test
in
mul
mov
jnp
lds
in
xchg
lret
and
mov
cmpsl
pop
dec
pop
xor
push
mov
loope
inc
orb
outsb
push
sarl
fcomi
cli
dec
std
lock
aam
int3
lods
into
mov
repnz
cli
xor
mov
subl
pop
and
add
imull
xor
dec
aam
mov
es
movsb
enter
fldl
jbe
sub
jmp
mov
sub
iret
push
sbbl
or
sbb
mov
mov
in
jp
add
add
popa
sub
ret
mov
sub
xchg
movsl
ss
stos
data16
adc
negl
pop
icebp
ljmp
mov
sub
icebp
imull
ret
jmp
stc
inc
mov
call
dec
fdivrp
scas
dec
test
clc
hlt
popa
sbb
mov
stos
inc
ret
xchg
stos
stc
loopne
sbb
popf
push
out
rclb
movsl
outsb
or
les
out
inc
add
test
push
imul
lcall
lahf
shlb
cs
lret
aam
out
out
mov
inc
cwtl
jecxz
inc
mov
push
mov
pop
fildll
incb
ret
sub
inc
fs
test
outsl
or
xchg
mov
imul
pop
lahf
pop
xchg
or
shll
inc
and
stos
push
mov
enter
xchg
mov
cwtl
xchg
cmovb
jle
dec
push
mov
ljmp
mov
push
mov
pusha
push
add
mov
mov
dec
jmp
imul
insl
ljmp
jge
cmp
lahf
js
stos
popf
add
testb
cmp
adc
and
arpl
xorl
mov
jmp
mov
out
sub
pop
mov
stos
pushf
int
ret
push
xchg
sub
das
adc
cmp
xchg
inc
stc
mov
jp
cmp
mov
call
ss
adc
cli
in
ss
loop
mov
clc
mov
or
aad
and
xor
mov
mov
clc
pop
mov
bound
decb
pushf
lods
ljmp
jmp
ror
gs
or
mov
and
fsubrp
or
push
test
mov
inc
add
aas
push
pop
cmpl
leave
scas
dec
mov
sbb
mov
xor
cmp
nop
adc
std
pushf
out
sbb
mov
cmpsb
imul
or
movsb
pop
in
movsl
pop
fstpl
mov
imul
adc
cwtl
ret
icebp
addr16
push
stos
sbb
push
repz
dec
xor
fsubrs
enter
lret
or
enter
inc
loope
es
jl
pushf
pop
push
adc
mov
dec
outsb
movsl
xor
inc
movsb
imul
xor
data16
out
sbb
xchg
mov
call
mov
repz
jge
rorb
jp
inc
dec
pop
mov
rep
mov
cs
in
adc
pop
and
bound
mov
mov
push
cmpsl
hlt
mov
cmp
test
cltd
nop
add
adc
xor
jmp
mov
mov
mov
or
inc
mov
test
clc
aad
imul
mov
imul
scas
sbb
pop
cmp
nop
jge
jmp
mov
mov
fistps
jl
lret
lock
mov
ljmp
rcrl
mov
sbb
dec
xchg
and
pop
sbb
insl
dec
inc
test
push
push
mov
arpl
into
jle
mov
mov
sub
ret
cvtdq2ps
out
xchg
mov
push
mov
adc
inc
arpl
fisttps
mov
xor
aas
popf
cmp
or
push
push
sbb
rcl
cmc
cltd
out
inc
movsb
mov
jnp
xor
pop
sbb
out
jge
test
out
mov
je
sub
fsubs
pop
in
mov
mov
xchg
leave
push
gs
sahf
repz
mov
pop
scas
outsl
je
push
xchg
xor
fwait
push
fs
xlat
and
push
fs
jecxz
mov
inc
rcrb
hlt
adc
call
adc
jmp
jg
shrl
fisubl
test
insb
adc
bnd
push
cmpsl
or
and
jmp
mov
lods
fwait
inc
adc
filds
fwait
popf
mov
jmp
sub
setl
pop
add
stos
xchg
iret
xlat
lock
dec
inc
and
sbb
mov
pop
pushf
rorl
adc
out
xchg
inc
fisttpl
inc
sbb
loope
cmp
mov
mov
push
loop
adc
leave
pop
sbb
out
mov
add
mov
lock
mov
testb
jl
inc
scas
ja
icebp
ljmp
xchg
js
lea
and
inc
cmp
jb
pop
inc
push
mov
hlt
std
stos
lcall
push
xchg
sbb
or
push
adc
mov
loop
jnp
adc
mov
arpl
jle
inc
xchg
and
xchg
sbb
int
call
and
into
iret
aaa
cmp
pusha
cmp
mov
mov
xchg
jbe
popa
add
std
mov
andb
mov
pop
jae
mov
cmc
add
jbe
enter
jl
pop
cmp
scas
int3
push
das
mov
cmpsb
push
ffree
xchg
dec
hlt
xchg
lret
sub
rorb
test
mov
lcall
mov
jmp
stos
xlat
imul
fidivl
not
cmp
dec
xor
test
adc
mov
push
inc
push
jmp
repz
in
rcll
dec
test
cmp
cmp
cmp
rcll
add
xor
xor
sbb
lcall
add
rcll
jecxz
lds
push
fnsetpm(287
inc
pusha
cs
testb
pop
jmp
mov
ljmp
jmp
and
movsl
fwait
adc
mov
dec
jl
mov
es
dec
outsl
orb
jbe
cmp
jmp
fs
std
jl
push
mov
adc
test
dec
lods
jmp
stos
push
pushf
inc
cmpb
gs
xlat
lock
inc
add
int
dec
xlat
adc
xor
out
movsb
imul
pop
pop
in
add
imul
cmp
sub
or
sbb
movb
cmp
xchg
lods
fidivs
fs
mov
cmp
push
inc
daa
mov
fisttpll
adc
pop
sbb
dec
fcom
mov
rcrl
cmc
xchg
jno
popa
xlat
mov
xchg
pop
push
lds
into
lock
push
dec
pop
xchg
jmp
cmpsl
xchg
inc
aaa
idivl
mov
push
sbb
in
add
sbb
push
idivl
int
rcrl
les
bound
fildl
cmp
incb
adc
adc
push
push
shlb
pop
insl
cmp
dec
lea
push
push
out
not
xor
cmp
or
sub
das
cmovs
jp
or
sub
sbb
lret
mov
pop
push
jl
ficompl
fnstenv
out
dec
enter
adc
add
push
in
jno
adc
scas
cmp
cld
mov
sub
jns
pop
ljmp
push
cmpsb
stc
ss
icebp
mov
les
fstpl
movsl
push
sbb
cmp
mov
mov
rcll
in
jmp
testl
xor
aam
in
mov
jp
push
mov
in
test
and
mov
xchg
xor
test
add
icebp
jae
sti
sub
enter
cwtl
and
jp
ja
add
inc
push
mov
maskmovq
notl
xchg
jmp
insb
rolb
jmp
pushf
mov
pop
test
repnz
pop
cmpsl
adc
and
add
inc
popa
cmp
sub
and
xchg
xchg
xchg
pop
and
cli
jae
and
cmp
mov
mov
ror
fldl
add
jne
movsl
inc
xor
pop
push
fwait
sub
repz
cld
mov
xor
sarb
push
lahf
mov
dec
inc
or
sub
mov
mov
in
mov
movsl
add
orl
jmp
xchg
xchg
loopne
je
fdivrs
pop
test
sbb
aad
aaa
pop
jle
lfs
sbb
mov
sahf
sbb
jmp
or
stc
xor
aam
sub
push
rcrb
jb
std
arpl
sbb
dec
test
lret
jb
rolb
or
cld
rorb
test
rcll
aas
in
out
xchg
int3
rcrb
test
aam
inc
mov
xchg
icebp
into
sbb
adc
push
movsb
nop
scas
mov
fbstp
adc
xchg
jns
cmp
sbbl
cs
inc
testl
jae
pusha
pop
lret
mov
push
push
lahf
push
outsl
xchg
les
movsb
push
lods
push
es
aam
dec
xchg
clc
mov
add
xor
andb
push
mov
scas
bound
and
icebp
in
xor
add
inc
mov
push
js
fcompl
pop
mov
aad
adc
lret
jmp
add
roll
cmp
cmp
rcl
xchg
lock
jae
fsin
xor
out
push
pushf
or
in
inc
push
add
xchg
and
aad
add
in
pop
inc
xchg
mov
nop
cltd
push
cmpsl
lret
push
je
lods
loop
aad
shlb
mov
xchg
mov
in
lcall
je
out
lcall
push
pushl
dec
cmp
ficomps
lcall
icebp
mov
fstpl
rcrl
jb
xchg
add
pusha
adc
in
pop
or
inc
ds
cmpsb
scas
mov
in
xor
jmp
push
lods
test
adc
std
cmp
xchg
or
sahf
push
dec
xor
mov
jb
xor
push
in
jg
dec
dec
imull
mov
sarb
cmp
dec
sub
cwtl
fnstcw
fcmovnbe
push
daa
fiadds
sbb
arpl
movsl
pusha
push
adcb
pop
imul
jge
into
mov
adc
xchg
mov
and
adc
test
incl
std
jg
jge
sub
hlt
mov
and
dec
je
sbb
out
ss
lds
ss
mov
jbe
dec
mov
mov
push
xchg
shrl
sbb
sub
mov
loop
pop
jle
jb
fiadds
cmp
popf
jns
inc
xor
andl
mov
mov
mov
push
inc
in
je
inc
and
xor
or
mov
imul
xchg
push
mov
mov
test
xchg
imul
dec
sahf
or
xor
adc
mov
fisubrl
xor
rcll
fsubrs
adc
or
dec
push
jl
pop
adc
push
jne
add
inc
xor
hlt
stos
cld
add
push
xchg
mov
dec
lods
dec
pop
mulb
xchg
mov
push
mov
add
inc
fdivl
and
das
add
push
pop
cmp
pop
rorl
mov
outsb
xchg
xor
sub
loop
mov
stos
scas
sub
wbinvd
push
xchg
movsb
push
and
fs
int
cmp
jle
cmpsb
popf
xlat
mov
adcb
fs
jg
fwait
mov
les
adc
call
push
mov
ret
fdivrp
cmp
adc
std
jl
pop
mov
andb
push
xchg
mov
mov
movsb
aas
lods
sbb
cmp
shl
stos
add
ret
inc
and
out
iret
test
sub
push
lods
pop
dec
xchg
aam
inc
mov
adcb
xorb
adc
push
add
fisubs
push
fisubs
push
jb
push
jno
xchg
mov
hlt
mov
and
push
push
test
es
push
mov
icebp
inc
xchg
pusha
jns
or
xorb
jbe
mov
call
xor
adc
lock
data16
or
sub
jg
xor
mov
scas
sub
xchg
cmp
lahf
test
jg
pop
inc
and
sbb
or
jbe
loopne
and
stc
adc
ficoml
shrl
lret
ljmp
inc
cmc
je
sbb
jecxz
es
adc
shll
xor
xchg
enter
stc
test
cmp
sub
mov
movb
lea
inc
insb
cli
adc
jge
xchg
mov
icebp
push
enter
int3
popa
and
mov
test
in
movsb
cmp
add
aaa
hlt
sbb
adc
sahf
es
sub
mov
clc
and
enter
into
dec
mov
out
jle
or
fnstenv
scas
loope
jns
xchg
insl
xchg
ljmp
sub
sbb
mov
mov
scas
dec
sbb
aam
pop
xchg
das
mov
and
dec
push
inc
jnp
mov
add
dec
jge
pop
push
das
int3
sub
jne
or
lcall
push
shr
dec
dec
ja
jmp
mov
or
mov
sbb
arpl
out
jge
pop
jg
mov
cltd
cwtl
pusha
fmull
xlat
cltd
enter
or
aaa
push
add
aas
ljmp
dec
mull
cmpsb
std
mov
xor
push
gs
fs
xlat
or
sub
mov
int3
mov
mov
sbb
hlt
in
fiadds
jb
dec
inc
fs
faddp
movsl
or
js
mov
cs
pop
jg
and
test
insb
push
and
rcrl
sub
out
ret
dec
push
insl
inc
sbb
dec
scas
into
mov
push
jecxz
xchg
add
loopne
lret
aaa
rorl
inc
cmc
arpl
dec
sbb
lret
into
test
dec
mov
nop
jecxz
test
fiaddl
cmp
or
ss
js
stos
xor
cs
inc
jle
ja
cld
das
sub
out
lds
dec
cmp
cld
xchg
adc
jae
je
push
pop
dec
jle
popa
add
jno
push
lret
cmc
add
and
or
pop
adc
aas
push
idivl
mov
fldt
cmp
in
mov
das
cmp
lret
enter
divl
push
imul
mov
sbb
dec
add
lret
jbe
mov
pusha
sub
clc
lods
jo
mov
mov
mov
or
lds
enter
jb,pt
test
cmc
adc
out
std
dec
loope
dec
out
cli
sub
data16
repnz
daa
push
and
into
dec
test
xchg
in
in
xchg
or
and
mov
dec
push
fidivrs
test
mov
mov
push
xchg
mov
imul
loope
add
sub
arpl
out
or
fcmovnu
ja
into
and
adc
sub
pushf
add
imul
mov
test
dec
fwait
mov
and
in
mov
or
in
inc
inc
pop
push
adc
iret
cmp
rcr
mov
popf
jns
addr16
cmp
fiaddl
lahf
rcr
roll
mov
lret
xor
stos
lret
xor
mov
push
cltd
rorb
shrb
jecxz
cmpl
jae
out
ljmp
sti
mov
cltd
shll
int3
cmp
in
push
out
sbb
inc
jecxz
mov
adc
sbb
sbb
push
jmp
icebp
inc
outsb
es
aaa
cmp
xchg
mov
lcall
mov
popl
jns
jae
fstp
in
adc
pop
stc
adc
mov
stos
dec
pop
lds
hlt
and
xchg
out
mov
adc
adc
dec
dec
int3
pop
int3
lds
test
lods
sahf
xchg
push
sbb
out
mov
daa
or
ror
mov
sbb
and
lods
ret
fcmove
sub
out
mov
push
xchg
mov
cmpsl
imul
pop
in
inc
push
imull
push
xchg
leave
mov
inc
test
mov
mov
sub
imul
lcall
rolb
decl
mov
pop
push
mov
addr16
and
call
test
repz
cwtl
adc
rcr
jno
push
das
xchg
add
out
insb
movsb
mov
lods
rorb
pminub
add
adcb
call
inc
cmpsl
scas
pop
repnz
inc
jg
add
jecxz
lock
ret
fcomps
rcr
sub
mov
sub
add
adcl
sbb
in
in
imul
mov
sbb
xor
jno
vpslld
andb
int
jecxz
lahf
add
dec
jne
into
daa
mov
in
mov
lods
pusha
fcmovbe
sub
mov
sahf
std
addl
jae
add
jo
fs
sub
leave
mov
xor
lret
int
setge
cli
sub
fidivrs
push
ljmp
or
stc
cmp
into
mov
dec
aas
adc
mov
cli
pop
movsl
mov
xor
and
movsb
in
push
cmp
aas
xchg
enter
mov
mov
mov
dec
psubq
lock
jecxz
arpl
pop
ret
jnp
pop
popa
popf
mov
pop
bound
jecxz
inc
add
sub
divb
add
push
fcmovnbe
mov
mov
stos
push
dec
mov
lret
push
roll
sbbl
inc
or
sbb
in
decl
cmpsl
xchg
es
iret
inc
inc
movsb
dec
lret
adc
jmp
test
lds
fwait
adc
dec
jbe
dec
jo
icebp
jecxz
subl
inc
cmpsl
in
xchg
adc
jne
test
imul
out
test
mov
mov
xchg
cmpsb
and
sub
add
scas
jmp
jp
insl
stc
jne
clc
inc
inc
fcmovbe
call
movsb
push
push
mov
out
lock
inc
add
lret
pop
rcll
cmp
jge
mov
enter
in
sbb
dec
jecxz
mov
shlb
aam
ficomps
gs
hlt
testb
inc
test
mov
sbb
fildl
in
jb
cmp
push
out
pop
pop
out
push
xchg
cmpsb
in
or
fcmovne
or
add
insl
xor
pop
insl
aaa
test
test
mov
sti
adc
test
rep
int
add
pop
sahf
lret
movsb
ret
and
add
cwtl
jnp
add
inc
lds
cmp
jle
inc
jge
movsl
or
lock
fsubr
cmp
xlat
aam
xchg
cli
sbb
jb
mov
insb
lahf
xor
loopne
jae
addl
inc
sbb
nop
add
mov
jp
pop
lods
jnp
mov
push
inc
into
inc
out
out
mov
push
pop
dec
addr16
jnp
push
iret
xchg
je
jns
shlb
jae
aaa
mov
imul
imul
xchg
pop
mov
xchg
mov
loope
cwtl
lea
rolb
daa
mov
fisubrs
out
xchg
sbb
mov
sub
cmpsb
mov
int
and
dec
test
cmp
xor
insb
and
pop
xchg
xor
test
stc
insl
xor
mov
or
xchg
mov
and
inc
das
fs
imull
and
hlt
and
mov
jp
test
add
jmp
nop
and
push
stos
addr16
xchg
inc
daa
lods
jnp
push
ljmp
inc
add
ljmp
jbe
mov
lcall
mov
jo
out
inc
sbb
xchg
lea
jmp
xchg
insl
sub
xchg
add
mov
outsl
fs
jb
and
fadds
xchg
xchg
dec
aad
clc
mov
mov
xchg
jle
bound
and
in
or
aam
cwtl
mov
pop
sub
push
xchg
mov
dec
sub
mov
sbb
out
enter
sbb
xor
int
cmp
arpl
outsl
movb
dec
mov
sub
movsb
call
mov
outsl
add
out
inc
or
movsl
cs
or
leave
mov
fbld
and
addl
rol
popa
add
dec
pop
mov
decb
or
jbe
dec
mov
add
jl
xor
testb
inc
sub
cmp
mov
mov
daa
cs
jecxz
fst
ss
add
es
sub
xchg
inc
and
pop
mov
cld
jp
push
in
ds
xor
ss
cmc
lods
ja
mov
rorb
stos
jecxz
push
sub
icebp
xor
pusha
dec
aaa
mov
add
andb
pop
cmpsb
xor
push
es
clc
insb
cmpb
fildll
fidivrs
add
adc
mov
lea
frstor
mov
push
mov
in
adc
cwtl
leave
fldcw
cwtl
fwait
inc
jge
add
out
mov
push
or
adc
cmp
xchg
mov
rorb
adc
out
dec
jae
add
dec
stos
iret
jbe
push
std
cld
or
push
push
mov
lahf
and
and
sbb
lahf
xchg
xchg
xchg
pushf
dec
inc
call
fistpll
push
mov
mov
stos
sti
mov
xor
int3
push
mov
mov
es
scas
leave
xor
hlt
fwait
push
fldenv
stos
cltd
add
into
cli
fistps
adc
into
pop
hlt
jb
or
inc
fs
gs
ret
je
jl
lods
push
mov
dec
jl
mov
imul
fdivs
push
sbb
fldt
std
int
adc
push
fwait
adc
push
add
sub
lret
pushf
mov
rcrl
xchg
ja
adc
add
lcall
lods
mov
stos
setle
faddl
data16
pop
into
loop
mull
cltd
and
jmp
fcmovnb
push
cld
shl
mov
xchg
jmp
sbb
in
cwtl
jbe
sub
xchg
dec
fimull
sub
leave
jmp
mov
cmp
pop
pcmpgtd
or
jp
jae
pop
inc
jb
adcb
insl
lret
ret
xchg
mov
xor
test
mov
or
push
cmp
ss
fsubr
and
dec
cmpsb
aaa
ret
fwait
jmp
movsl
pop
cs
xlat
pop
mov
mov
xchg
pop
inc
jbe
in
sbb
push
mov
push
test
daa
mov
cmp
sbbl
xorl
fwait
cmpsb
push
adc
jl
addb
mov
aam
gs
sbb
mov
xor
pmullw
add
dec
inc
and
jnp
out
adc
pop
jmp
mov
xor
inc
pand
cltd
push
pusha
xchg
lret
adc
jbe
inc
push
mov
jbe
pop
lock
sub
loop
fstpl
shr
call
dec
repz
pushf
gs
out
in
mov
andb
cmpb
jge
out
div
cmp
cmp
orb
rolb
pop
repz
push
sbb
fwait
push
sub
mov
dec
cld
add
sbb
test
stos
push
mov
xchg
jmp
adc
xor
popf
mov
mov
push
adc
shll
pop
mov
jo
mov
add
or
repz
cmc
in
sub
mov
lds
rol
push
addb
inc
lods
lahf
aad
and
movsb
xchg
adc
divl
cmp
fcmove
xorl
stos
rol
jle
test
std
iret
mov
cmp
lea
test
sahf
pop
mov
add
adc
icebp
nop
xchg
adc
sub
mov
sub
es
lods
and
mov
test
iret
mov
xchg
push
sbb
mov
clc
movsl
cmp
int3
jno
rolb
aam
in
jmp
test
or
scas
into
movsb
gs
repz
or
lds
outsl
movb
mov
xor
loop
cmp
repz
push
ljmp
or
imul
inc
jno
movsl
pop
popa
fs
int3
pop
pop
sar
pop
or
aam
jns
scas
ret
xor
dec
addb
dec
mov
in
push
orb
push
loope
sbb
xor
lods
push
ret
xor
mov
xor
scas
rclb
adc
popf
pop
ficoms
sbb
push
ret
fisttpll
mov
sub
jne
insb
mov
jmp
xor
or
lods
aaa
cs
mov
sarl
push
mov
shlb
jmp
mov
repz
cmpsb
jns
mov
bound
ja
jae
movsb
sub
testl
mov
sbb
fst
in
insl
fsts
jns
jg
imul
sbb
push
je
and
fincstp
das
add
fnsave
pop
xor
jmp
fnstenv
push
mov
sarb
pusha
lahf
mov
xchg
dec
push
push
sub
adc
lods
sub
rcr
xor
jo
rol
in
pop
xchg
jno
enter
xor
loop
mov
mov
pop
in
popf
js
push
sub
rcr
xchg
jnp
popf
cmp
xchg
sub
and
imul
loopne
xor
jne
andl
mov
adc
out
jg
jne
in
mov
sub
cwtl
pop
mov
jg
jg
out
cmp
sbb
fistpl
sbbl
xor
jl
push
clc
push
dec
sbb
repz
mov
or
loop
addr16
jne
cltd
in
shrb
div
fwait
stos
insb
lcall
and
add
add
repz
insl
mov
hlt
mov
imul
sti
push
mov
bound
dec
push
xchg
push
inc
or
aam
pop
test
shrb
pop
push
xorb
bswap
push
cmp
xchg
test
repz
pusha
mov
sub
sub
and
xchg
mov
in
push
icebp
test
mov
lock
push
rcrl
addl
sub
decl
dec
sbb
es
icebp
jnp
in
in
cli
xchg
pusha
mov
out
pop
call
lods
cmp
dec
repnz
cmc
cmp
pusha
mov
sbb
fs
add
sub
sub
fdivrl
outsb
arpl
sub
pop
lock
or
std
xlat
jecxz
cwtl
frstor
test
and
lea
mov
dec
mov
movsl
xchg
stos
or
imul
push
test
cmp
inc
ret
adc
ror
test
cltd
shr
pushf
mov
insb
rolb
mov
rdmsr
pusha
cmp
cltd
sub
das
fptan
stc
and
dec
das
repnz
push
adc
notb
jb
dec
bound
andb
or
enter
add
mov
dec
and
mov
shlb
jmp
fmull
xchg
xor
add
lret
mov
add
add
les
loop
lock
hlt
daa
lods
mov
repnz
gs
sub
cmp
and
dec
inc
jle
std
fdivrs
jle
or
mov
ljmp
dec
adc
fwait
shlb
dec
push
lret
push
dec
push
stos
nop
iret
and
push
xor
push
sbb
pusha
fmull
xchg
aam
cs
mov
xchg
add
and
sub
xchg
jbe
adc
cmp
in
fs
icebp
xchg
or
je
out
mov
movsb
xor
adc
inc
xor
and
push
fldl2t
xchg
out
or
repnz
popa
pushf
inc
daa
aad
mov
std
jbe
jns
popa
pop
sti
in
fisubl
xor
adc
cmpsl
and
xchg
and
mov
stos
add
xchg
sub
jg
movsb
scas
test
adc
cmp
cmp
and
jb
jae
add
decb
xchg
cwtl
arpl
xchg
mov
cld
sub
mov
jg
addb
cmp
stc
pop
ljmp
data16
mov
call
cmp
jno
push
mov
push
imul
fistpll
mov
rol
xchg
mov
add
popf
jle
rolb
test
lret
add
scas
adc
lcall
pop
scas
lods
push
insl
pop
repnz
pusha
fisubs
xorl
mov
and
jbe
cmpsl
cmc
fldcw
rcll
addr16
adc
int3
and
or
je
inc
decl
push
stos
fstps
mov
inc
ret
in
push
dec
es
into
mov
lds
cmp
ret
out
iret
and
add
push
add
stos
hlt
popf
pop
push
aaa
jns
ret
push
ret
or
ljmp
in
xchg
ret
int3
push
pop
xor
cs
or
push
ja
out
not
in
pop
xor
aad
es
push
sub
dec
mov
sti
rcll
mov
mov
insb
jns
repnz
aas
ret
aas
inc
pop
incl
cmc
out
je
jo
xor
add
out
jne
add
mov
add
jecxz
test
scas
pop
xor
pop
pop
fsts
sub
addl
mov
movsl
mov
xchg
xor
sbb
les
add
rorb
scas
test
jmp
mov
lret
or
pop
adc
jo
push
ret
movsl
out
xchg
mov
loop
insl
inc
pop
inc
cld
lock
inc
jns
mov
pop
sub
int3
shld
add
xchg
xor
jnp
imul
mov
or
push
stos
je
scas
mov
jns
ret
stos
int3
add
imul
xchg
jo
in
sub
bound
and
xor
in
jbe
pop
push
ror
fsubl
fadd
stos
xor
cmp
push
sub
add
out
and
jne
xor
sbb
out
sahf
ret
mov
scas
mov
repnz
clc
lahf
negl
cwtl
xor
ret
xchg
mov
cmc
mov
inc
push
xor
pop
mov
sbb
mov
sbb
fsubrs
mov
xchg
fwait
xchg
mov
pusha
adc
les
mov
dec
sub
cli
sbb
inc
dec
ljmp
pop
std
dec
add
inc
mov
enter
jle
pop
test
sbb
cwtl
mov
in
pop
pop
mov
imul
addb
jp
add
pop
pop
jecxz
cmpsb
xchg
repnz
rorb
sub
sbb
pop
int
pop
push
add
pushf
dec
bound
and
mov
mov
ficoml
incb
cld
jmp
add
fmull
sub
push
push
fs
dec
xor
movsb
aaa
nop
mov
nop
int
movsb
xchg
xchg
add
sbbl
rclb
jmp
mov
and
mov
push
jb
pop
xchg
mov
gs
push
lods
jl
fsts
adc
roll
xor
add
add
repnz
cmp
jns
sbb
cs
in
leave
sbb
xchg
xchg
scas
pop
inc
int3
mov
fsub
jecxz
push
cli
repz
out
fisubrs
inc
sbb
into
adc
push
lcall
cmp
pop
mov
push
or
stos
xchg
add
xchg
hlt
xor
addr16
xor
test
insb
cmc
push
xchg
adc
adc
sbb
daa
xchg
fdivrs
pop
cmpb
sub
mov
loope
jg
icebp
pinsrw
push
gs
mov
mov
xchg
mov
mov
data16
out
pusha
test
mov
addr16
or
loope
aas
sbb
jl
mov
jbe
or
aad
mov
xchg
mov
int3
iret
mov
dec
adcl
push
cmp
outsl
shlb
jl
jne
mov
stos
mov
adc
cltd
push
fwait
sbb
sbb
test
aad
lcall
jno
sbb
push
dec
adc
xchg
add
aaa
cli
pop
jb
and
mulb
add
rcrl
mov
jo
dec
das
ds
sub
jbe
test
xchg
and
js
nop
push
adc
xlat
dec
sub
push
mov
adc
dec
notb
sbb
fsubs
sti
loope
loop
adc
xor
push
xor
insl
addr16
in
adc
cmpl
mov
jns
and
adc
sbb
add
or
int
fdivs
movsl
mov
cmpb
int
fsub
pusha
hlt
or
bound
xchg
jmp
inc
out
mov
mov
or
inc
mov
and
in
xor
xchg
faddl
add
outsb
adc
std
jmp
pop
mov
and
dec
dec
and
out
in
insl
sarl
test
xor
mov
aaa
or
and
xchg
push
lahf
out
roll
mov
outsb
xchg
dec
lods
outsl
adc
mov
call
int3
popf
jg
or
cmp
mov
aas
imulb
jbe
mov
jecxz
sub
xchg
sub
xchg
lcall
push
shlb
imul
mov
addr16
leavew
add
nop
push
and
or
add
mov
inc
xorl
sbb
mov
call
xor
out
or
pusha
jecxz
cmp
jecxz
inc
outsb
and
hlt
cmp
lea
data16
ret
and
mov
dec
add
jecxz
cs
inc
scas
xchg
adcl
cwtl
iret
push
cmp
sbb
adc
xchg
ja
gs
push
inc
cmp
cs
adc
stc
xchg
les
jae
addl
mov
dec
fildl
xchg
ljmp
pop
pop
lods
xor
pop
pop
mov
and
mov
sbb
or
dec
mov
pop
leave
dec
xor
fsubp
movsb
test
sbb
push
ja
sbb
les
insb
sub
inc
jl
jle
sarl
cmpsl
je
mov
cs
out
mov
push
rorb
stc
or
jne
push
rolb
and
clc
fstpt
add
imul
mov
jge
daa
mov
cltd
lods
add
cmp
xor
sbb
sti
jg
lahf
pop
test
cmpsb
inc
in
bnd
in
std
xor
mov
mov
loop
inc
les
jne
add
pusha
mov
imul
jle
mov
jle
test
mov
mov
lea
or
std
mov
push
sbb
cmp
mov
test
inc
stos
jecxz
incl
fdiv
or
mov
pop
sub
xchg
pop
mov
push
add
sbbb
pusha
mov
outsb
cmpsl
cmp
popf
inc
dec
xchg
adcl
dec
in
push
mov
and
sub
fists
jbe
cmc
ficoms
out
push
lds
pop
cmovl
sub
xor
nop
subb
pop
jge
lret
scas
in
fistpll
jecxz
or
mov
sti
adc
inc
dec
mov
fcompl
inc
je
outsb
inc
mov
repz
mov
hlt
pop
cmp
inc
inc
lods
jecxz
in
mov
mov
xor
sub
pop
fidivrl
add
add
add
inc
test
and
mov
leave
dec
repz
sub
decl
mov
cmpsb
cmc
sarb
test
cmp
cmp
aam
xchg
stos
lock
test
inc
sbb
jl
fsubs
mov
sub
xchg
mov
push
or
cmovns
sub
in
ja
shrb
mov
sub
xlat
scas
dec
push
mov
fs
pushf
jg
sub
test
mov
push
int3
or
jmp
cmp
outsb
jle
xchg
sbb
out
push
sbb
jnp
loopne
dec
xor
adcb
xchg
push
into
push
cmp
mov
xchg
out
repnz
es
fldt
lods
leave
outsb
fwait
int3
test
lahf
into
sub
jo
ret
ja
sbb
repz
loop
xchg
ret
sbb
lock
movsb
dec
sbb
cmp
push
in
test
ds
inc
push
imul
and
insb
push
push
in
ds
xchg
clc
lds
inc
sbb
cmp
ret
lret
jbe
mov
movsb
movsl
punpckhdq
outsl
push
pop
aas
inc
inc
cvttps2pi
fs
or
xchg
sub
xchg
je
mov
popl
insb
sbb
mov
int3
cmp
xorl
pop
jae
pop
xchg
popf
ret
xor
push
std
repnz
xchg
enter
in
jge
out
jae
in
cltd
imul
aad
pop
fwait
jns
dec
mov
xchg
imull
push
ret
add
xchg
mov
ss
mov
add
push
pop
xor
sbb
call
aad
rcl
mull
nop
outsl
mov
outsl
cmp
mov
jmp
pop
outsb
bound
fcomi
shll
out
rol
mov
cwtl
and
cli
xchg
cmp
cld
es
sbb
sub
addl
add
xlat
push
das
lds
push
shr
jnp
stos
xlat
lods
sub
scas
or
das
sub
sub
out
inc
adc
and
sub
cmpl
or
mov
sti
cmpl
cltd
mov
push
nop
cmc
xor
inc
pavgw
add
ds
xchg
mov
jns
outsl
sub
scas
into
xor
lds
hlt
imul
mov
outsl
cltd
daa
dec
stos
movl
aad
ret
mov
jp
fmull
call
xor
pop
jp
ja
cmc
add
cltd
add
rcr
in
subl
mov
in
clc
test
or
sbb
push
fstp
iret
adcl
ja
and
cltd
ljmp
push
insb
xor
loope
gs
jne
xor
or
push
test
or
pop
sti
in
in
mov
scas
loope
stos
das
jg
aam
pop
pop
lahf
gs
les
sbb
in
mov
int
add
mov
xchg
inc
pusha
ret
adc
not
push
fnsave
jle
addr16
mov
pop
aaa
jecxz
mov
xchg
cmp
adc
cmp
fldt
cmp
lret
adc
ficomps
pop
dec
roll
je
es
or
sub
dec
mov
mov
mov
push
and
mov
jbe
xchg
push
int3
out
xchg
into
cwtl
rcrl
mov
int3
jbe
cld
mov
test
fimuls
sbb
mov
flds
addr16
popf
sarb
inc
adc
stos
lods
inc
in
push
mov
imul
mov
push
mov
pop
inc
jle
mov
mov
outsl
xchg
inc
insl
push
sbb
pop
ljmp
and
add
aam
push
aam
push
sub
imul
stos
pop
scas
mov
das
push
test
loop
mov
inc
jmp
in
outsl
and
mov
rol
add
xchg
xor
je
scas
xchg
icebp
sbb
int3
fsubp
gs
cmp
sbb
push
inc
icebp
test
fstps
pushf
mov
xor
sub
iret
and
xor
addr16
mov
xchg
fs
push
xor
or
push
je
jo
movsl
push
pop
mov
pop
pop
ds
cmp
iret
subb
mov
mov
sub
add
ljmp
push
mov
scas
cmovnp
cmpsl
mov
mov
cmp
insl
subl
push
xor
push
mov
stc
lods
enter
cwtl
icebp
jb
adc
jno
jo
in
subl
hlt
mov
pop
push
or
lock
sub
dec
and
jnp
jbe
push
pop
jle
adc
aam
mov
gs
push
xlat
repz
sahf
mov
mov
popa
call
leave
xchg
jmp
push
call
inc
je
outsb
and
push
movsb
outsb
inc
bound
and
jb
idiv
and
adc
or
pop
mov
add
into
test
rcll
dec
xchg
jns
in
pop
xchg
add
stos
sbb
or
pop
or
jnp
mov
sarl
xchg
iret
fmulp
test
rcrb
xchg
mov
jae
cs
sub
test
adc
and
test
mov
push
and
call
xor
sbb
cmc
repz
sub
ficomps
data16
xchg
push
mov
mov
leave
mov
cmp
in
mulb
repnz
xor
or
out
fdivrl
inc
cmp
push
je
cmpsb
movsb
imul
sub
pop
jge
push
fwait
pusha
xor
mov
ret
fnstenv
and
xlat
jo
pop
outsb
mov
lahf
ljmp
test
pop
sub
into
add
mov
dec
inc
stc
sub
sahf
push
xchg
push
jge
stos
cmp
pop
pop
loopne
shr
push
rorb
add
and
lods
fisubs
inc
dec
loope
push
ljmp
xor
les
es
lock
orb
cmp
and
rorb
jp
stc
inc
fwait
lahf
cli
repz
test
nop
xchg
cmp
nop
sub
mov
lret
push
das
in
dec
in
popa
mov
and
sbb
je
into
enter
pop
fiaddl
cmpsb
pop
pop
dec
pusha
adc
inc
lahf
aaa
fisubs
shr
and
hlt
or
je
fsubl
cmp
inc
add
xor
icebp
sub
inc
jbe
popf
sbb
jns
hlt
sarl
outsb
iret
in
aas
repz
aaa
push
lahf
push
add
imul
mov
clc
jb
ficomps
ljmp
daa
popf
push
scas
mov
cmp
pop
iret
les
in
outsb
movsl
mov
aad
mov
fucomip
pop
sub
add
add
rclb
loop
popf
outsb
mov
addl
mov
adc
in
cmpl
lea
stos
rcrb
xchg
add
std
data16
xor
xchg
add
clc
pop
out
cmp
outsl
lock
mov
lret
aad
lea
out
or
lahf
sub
cmp
inc
scas
mov
fcomip
clc
iret
xchg
push
mov
fildl
jnp
mov
jbe
mov
mov
pop
push
xchg
mov
add
pop
imul
sub
mov
ljmp
xor
insb
cld
out
cmp
in
aad
jb
add
cmp
test
insb
adc
sbbl
jae
and
movsb
test
test
cwtl
movb
mov
xchg
mov
test
addr16
leave
mov
push
mov
addr16
adc
inc
pop
sub
push
add
cwtl
sbb
clc
fistpll
fists
sbb
or
inc
pop
outsb
dec
push
mov
xchg
mov
pusha
jne
stos
lcall
mov
jle
mov
xor
aad
inc
out
push
add
lret
add
jecxz
cs
jne
popf
ja
pop
jno
cwtl
stc
fsubrs
mov
icebp
jmp
xor
lods
xchg
push
xchg
lea
and
jbe
pop
int
mov
ficomps
inc
jne
addr16
or
and
push
mov
xlat
test
adc
and
nop
das
lods
cmpsb
sbb
mov
sbbl
add
orl
adc
les
outsl
push
or
aad
dec
stos
mov
ljmp
imul
pop
les
and
stc
out
je
inc
adc
dec
push
or
add
shr
add
mov
push
adc
mov
aaa
jp
sub
fsubrs
mov
xor
cltd
ljmp
je,pt
int
shll
insb
insb
in
mov
adc
cmp
lea
push
cmp
test
lcall
inc
scas
sub
mov
rclb
es
cmp
xor
enter
in
testl
cmpsl
jmp
xchg
adc
mov
stos
dec
test
mov
fs
cld
std
fnstcw
std
int3
sbb
outsl
nop
mov
mov
mov
aas
sub
outsl
mov
call
sub
or
pop
push
adc
mov
push
or
xchg
and
bound
inc
dec
cmp
mov
ljmp
jmp
pop
xor
jns
repnz
mov
test
inc
adc
popa
rorb
insb
cmpl
sub
xchg
xorb
inc
cmp
inc
ja
cltd
hlt
pop
jo
and
das
aas
loop
mov
flds
xor
jge
mov
cmpsb
inc
mov
stos
into
clc
shrl
cmpsb
pusha
leave
frstor
or
sbbl
jp
jecxz
pop
in
and
jnp
pushf
aas
mov
sbb
inc
test
mov
sbb
fnstsw
inc
xchg
jno
out
negl
push
pop
aad
arpl
cwtl
mov
add
sti
add
enter
mov
push
mov
xchg
and
lcall
mov
xchg
or
cmc
scas
lcall
pushf
lock
cltd
cwtl
in
in
lds
push
adc
dec
gs
cmpsl
das
iret
jno
mov
ret
jp
mov
xor
jp
pusha
repz
xchg
or
mov
push
fldcw
repnz
push
xchg
int3
pop
cmpsb
add
cltd
outsb
lcall
insb
adc
jns
in
int3
fwait
mov
adc
mov
jmp
shr
xorb
dec
jbe
stc
xlat
and
jb
push
sub
lods
in
in
test
in
inc
into
mov
ret
sbb
mov
dec
std
sub
push
adc
orl
loope
adc
int
adc
or
shll
sbb
mov
lods
lret
mov
push
call
mov
xlat
mov
mov
ljmp
push
or
or
mov
aad
sbbb
push
icebp
sub
test
ds
cli
fdivrs
add
adc
ret
mov
out
test
in
xor
es
mov
inc
mov
daa
xchg
push
pop
push
push
mov
or
cmpl
test
jmp
out
in
sub
mov
pop
mov
push
cwtl
adc
insb
jb
mov
scas
adc
data16
popa
inc
movsb
andl
pop
mov
mov
and
sbb
xor
lods
lea
test
subl
ret
in
sbb
add
subl
pop
call
pop
cmpsb
lea
mov
sub
es
lock
adc
lahf
in
ss
lret
es
cmp
mov
mov
sahf
icebp
scas
pop
fldl
pop
pop
test
jno
aaa
jmp
mov
pop
fidivl
xor
mov
xor
inc
cmpsl
xchg
incb
bound
xchg
mov
data16
inc
push
pop
and
mov
ret
mov
clc
pop
pop
xchg
out
mov
adc
repz
mov
fstpl
cmp
in
jl
xchg
jbe
outsb
test
or
add
je
cli
das
dec
sbb
pop
enter
mov
dec
sbb
sti
outsl
mov
push
addl
sub
sti
inc
cs
jno
jmp
push
fsubl
jns
call
fsubr
and
mov
out
out
dec
and
imul
sbb
cld
fsubr
mov
jp
jle
aam
lret
xor
jg
mov
jo
push
and
movsl
mov
sub
add
xchg
sbb
and
cwtl
pusha
pop
pop
and
leave
int
push
ljmp
mov
inc
dec
jo
fs
in
xlat
xor
inc
dec
cmp
jmp
mov
sbb
clc
mov
pop
sbb
fldenv
jle
xor
pop
mov
mov
adc
or
enter
ja
mov
dec
mov
ss
movsb
les
pop
cmp
mov
rorb
call
mov
in
push
cmp
xchg
jno
dec
xchg
push
movsl
and
mov
or
int3
pop
xor
or
cmp
iret
jae
dec
mulb
push
rcr
mov
mov
inc
add
int3
outsl
jbe,pn
aad
and
dec
or
sub
xlat
movb
pop
inc
push
sbb
fcomps
cmpsb
lret
addr16
sbb
outsl
jo
dec
lds
ss
lods
leave
dec
mov
ret
ds
push
jg
mov
push
inc
popa
pop
mov
testl
out
cli
sub
push
inc
jge
sbbb
stc
ja
pop
loope
aam
mov
cmp
jp
xchg
shlb
xor
loop
std
xchg
inc
nop
in
adc
dec
sti
inc
and
or
adc
mov
sbb
int3
aas
shr
push
and
mov
stc
cmp
cmpsb
push
rclb
pop
jp
mov
popa
pop
sub
inc
cli
inc
notb
out
into
mov
popa
call
pop
pop
jg
hlt
sbb
and
adc
dec
pop
inc
xor
lods
insb
mov
jne
imul
divb
cmp
fcoml
xor
out
dec
sbb
ret
xor
inc
dec
sbb
mov
fiadds
dec
and
xchg
mov
popf
fdivp
push
movsb
in
ret
lcall
sub
jns
mov
test
sbb
ss
jp
inc
sbb
lods
icebp
and
pop
mov
cmpsl
sub
mov
jge
inc
test
notl
cli
xchg
adcb
cwtl
or
and
flds
dec
fldcw
push
dec
mov
test
pop
and
rorb
sub
sub
xor
jno
add
jp,pn
cs
push
xor
pop
std
sbb
fidivrs
sbb
and
dec
popa
stc
out
mov
enter
dec
sbb
mov
cltd
stc
mov
cld
aad
hlt
and
xchg
sbb
jae
mov
movsl
jmp
fcmovb
xchg
data16
and
push
fs
dec
enter
fs
insb
push
int
pop
jp
mov
or
test
sbb
shll
enter
lahf
stc
out
outsl
push
dec
sub
fcoms
mov
xor
sbb
xlat
push
stc
adcb
xchg
nop
sub
call
xchg
jg
mov
sbb
adc
and
sbbl
lea
cmp
mov
ja
or
imull
push
cli
xchg
mov
aad
inc
sub
rcll
insb
and
sub
xchg
hlt
rolb
jge
in
add
outsb
repz
cmp
pop
and
fwait
pop
iret
push
stos
inc
push
js
addr16
pop
sbb
dec
xor
jne
sbb
test
dec
jb
push
je
jmp
cmp
xchg
adc
push
ljmp
cmc
fmul
mov
test
add
test
pop
ret
push
xlat
cltd
sub
jle
xor
test
sbb
scas
fcmovnbe
mov
stc
xor
mov
jp
dec
lock
sahf
adc
jle
les
scas
ficomps
jp
repz
ret
mov
hlt
arpl
and
aam
int3
addr16
pushf
mov
lret
jo
out
mov
outsl
enter
sbb
pop
mov
mov
iret
stos
loop
dec
mov
hlt
icebp
adc
filds
jbe
pop
mov
pushf
stos
mov
push
push
adc
push
sbb
push
enter
dec
fimuls
in
or
jmp
mov
rcrl
stos
sbb
push
xchg
shll
roll
das
pop
jo
push
cli
daa
aam
push
je
pusha
scas
mov
mov
mov
pop
mov
fsts
shll
xor
repz
add
mov
mov
xlat
mov
not
add
fbstp
mov
daa
cli
dec
push
frstor
mov
imul
pop
out
mov
test
jns
mov
pop
ja
add
les
push
push
shrb
jmp
insb
sahf
jo
int
adc
fisubl
cmp
lods
rclb
je
or
mov
xor
sub
popa
loope
dec
in
adc
je
fstps
inc
dec
pop
jbe
mov
leave
out
movsb
fiadds
push
pop
decb
rclb
inc
in
jno
inc
add
enter
or
inc
roll
cmp
push
insb
pushf
in
stc
push
sub
int3
dec
inc
push
mov
negb
repz
lret
into
xor
in
pop
out
mov
loopne
push
pop
push
ds
in
das
sub
pop
sbb
subl
add
fs
or
adc
cmp
sbb
lock
fildll
and
mov
imul
lock
enter
nop
bt
iret
cwtl
lcall
pop
sub
or
fcoms
pop
push
inc
pushf
aam
stos
mov
fstpl
jg
cmp
mov
cwtl
inc
inc
dec
xchg
lahf
es
dec
iret
mov
insl
sub
or
cli
mov
add
or
movsb
push
jne
and
xchg
add
cltd
loopne
lret
cmc
push
jns
xor
lret
and
add
add
in
pushf
fistpl
adc
inc
xor
jb
lods
mov
out
jmp
jno
jb
cmp
aaa
shlb
xchg
inc
sub
mov
and
xchg
mov
ljmp
dec
xlat
lcall
push
push
outsb
lret
decl
pop
fndisi(8087
xlat
in
xor
jmp
ret
int3
jg
push
roll
dec
stos
sub
jge
pop
loope
mov
cmpb
jl
mov
xchg
mov
outsb
jecxz
enter
xchg
adc
mov
dec
mov
xchg
neg
repnz
lds
xchg
push
aaa
pop
inc
jae
push
sub
outsl
arpl
fcomps
pop
jecxz
bound
jo
inc
bound
jno
imul
cmpsl
cld
mov
stos
sub
or
gs
push
mov
rol
enter
push
pusha
xor
push
adc
xlat
mov
adc
lods
sub
push
pop
or
in
dec
push
pop
fnstenv
loopne
in
lds
jo
pop
pop
rol
or
dec
fs
add
imulb
std
or
pushl
gs
and
les
sub
shlb
mov
adc
out
ret
and
ds
das
adc
or
and
pop
jno
add
cmp
and
adc
sti
mov
scas
shl
xchg
and
adc
out
push
cmpsb
or
dec
mov
push
gs
push
xlat
push
fstpl
jne
sbb
out
cmpsl
int3
shr
cmp
jb
test
pop
out
mov
lock
stos
jae
out
pop
adc
out
sub
test
filds
sbbl
shl
fldl2t
dec
mov
sbb
insl
pop
sub
sub
lahf
sub
sbb
mov
push
jnp
es
add
pop
sti
add
push
xchg
or
mov
adc
les
push
mov
subl
pusha
jno
loopne
movsb
mov
pusha
dec
mov
cmp
fildll
dec
push
ja
pop
mov
xor
ficoml
or
pop
add
ss
clc
int3
and
aam
cwtl
cmpsb
in
lret
inc
mov
mov
lahf
xor
mov
xlat
or
insb
pop
cltd
clc
sub
cwtl
mov
sbb
in
cwtl
rcll
aas
daa
enter
cmp
sbb
jp
repnz
fldcw
mov
movsb
xor
adc
inc
insb
cli
sub
xlat
mov
dec
push
jle
hlt
cmpsl
rcrl
xchg
mov
cmp
addb
enter
xchg
arpl
jne
sub
sbb
daa
fistpl
lds
jne
mov
fiadds
lcall
fstp
jle
pop
mov
int
scas
leave
sahf
aaa
out
push
aaa
sbb
mov
popf
bnd
pop
pop
lea
bound
int
sbb
addr16
movsl
packssdw
cmp
scas
or
dec
fldl
mov
fmul
dec
pop
lcall
xor
and
fs
mov
repz
or
ret
add
movsb
iret
ja
mov
jno
ja
popa
ja
jmp
mov
sub
cmp
cmp
jae
mov
or
jl
sub
sub
jecxz
mov
out
jge
pop
sarl
cs
dec
sbb
sub
xlat
add
fldcw
push
pop
leave
mov
in
les
and
adc
jne
xchg
loop
pop
cli
jle
repnz
data16
lods
je
rorb
fnsave
out
adc
mov
add
cmp
push
aas
jns
out
or
and
je
ret
sub
and
pop
xlat
mov
cmp
cmpsl
rcr
mov
sar
dec
dec
xor
int3
add
rorl
stc
jbe
sbb
lea
mov
repz
roll
push
lahf
out
shl
mov
lock
xor
sbb
jl
and
ds
mov
repnz
arpl
sarb
or
fwait
movsl
fsubp
lcall
bound
dec
out
popa
or
mov
stc
push
test
lods
loop
iret
sub
bound
dec
mov
add
nop
cli
fisubrl
xchg
dec
or
stos
pop
pop
jb
pop
or
inc
dec
lods
incl
rolb
in
arpl
jne
movsb
shlb
jmp
test
jbe,pn
sti
push
push
out
xchg
movsb
cmp
lsl
xor
or
sbb
test
negb
ja
data16
xchg
imul
jns
push
add
sub
aam
out
fldcw
jmp
push
in
xor
lds
adc
clc
shll
adc
xor
int
rorl
xchg
mov
insl
testb
jmp
add
repnz
test
inc
adc
popf
outsl
mov
xrelease
movsb
jnp
jmp
add
jns
cmp
xor
xor
stos
inc
ret
sbbb
lcall
je
movsb
dec
push
loop
cmp
sbb
pop
xor
loope
fimuls
ljmp
mov
mov
mov
dec
cmpsb
scas
mov
xchg
xchg
sub
leave
bound
mov
adc
sbb
xchg
fcmovnu
ret
lea
stos
add
and
mov
pop
clc
in
mov
shll
push
fisttpll
push
ficoms
das
inc
call
lock
cli
pop
adcl
das
fsubrp
mov
pop
lret
lds
or
inc
jne
into
scas
out
mov
add
aas
cmpsb
stc
dec
and
mov
lcall
mov
popa
imul
lock
xchg
mov
nop
xchg
lahf
popf
clc
pusha
es
xor
sahf
nop
pusha
or
loope
mov
fisttps
jp
out
mov
cwtl
jl
mov
inc
fs
icebp
clc
inc
xorb
dec
push
rcrb
mov
push
das
jno
add
pop
mov
and
adcb
rclb
cmpsl
mov
out
sub
cld
sahf
push
movsl
repnz
push
fsubr
mov
sbb
xlat
aam
push
inc
fwait
cmp
sbb
hlt
mov
int3
daa
ret
out
cmp
mov
dec
lahf
push
ja
int
push
call
or
sub
fdivrl
push
and
icebp
imul
popa
idiv
cmpsb
pop
dec
out
imul
cmp
inc
or
sti
cmc
and
fstpl
jbe
inc
push
sti
out
jb
xchg
dec
add
mov
jbe
push
mov
jne
mov
pusha
punpcklbw
fimull
add
mov
jae
lret
je
in
inc
sti
lock
xlat
or
xor
mov
sub
out
and
in
lods
mov
ret
clc
roll
add
pop
jbe
and
cmpsl
rorl
in
stos
bound
push
es
sub
dec
sbb
mov
icebp
stos
mov
inc
leave
xchg
addb
add
ja
mov
loop
xor
js
pop
test
std
dec
xor
fdivr
cltd
stos
lods
jg
and
addr16
loopne
mov
out
adc
adc
mov
mov
push
outsl
jp
xor
add
mov
push
cmp
mov
xchg
jle
adc
popf
lods
add
push
movsb
mov
movsb
xor
into
cmp
push
dec
mov
xchg
mov
outsb
pop
aas
or
jge
loopne
fcomps
dec
fisttps
test
enter
xlat
cmp
mov
roll
out
mov
sub
pop
stos
loope
shll
sti
sub
adc
fwait
lds
xor
add
ret
pop
xor
push
loope
xlat
xchg
aas
and
or
or
or
jns
jmp
lock
negb
pop
cwtl
pop
scas
arpl
xchg
push
aas
xchg
push
lret
adcl
cli
sbb
enter
add
pop
mov
sub
mov
fs
push
rcrl
push
push
xchg
xchg
ljmp
pop
lods
test
lods
add
add
stc
out
xlat
rorl
add
mov
xor
fisubrl
pushf
das
push
mov
stos
js
push
icebp
pop
xchg
shrb
aaa
adc
in
add
push
loop
adc
es
jp
mov
and
loope
popa
push
or
xchg
jmp
into
mov
push
loopne
movsb
mov
arpl
sarl
outsb
mov
xlat
xchg
push
jnp
mov
fbld
adc
loopne
test
pop
push
loop
inc
lret
dec
outsl
mov
pop
jp
fdivr
icebp
mov
ret
int3
sub
xchg
or
es
jno
push
inc
das
dec
icebp
jge
ret
daa
enter
cmp
add
sub
dec
push
nop
adc
push
jecxz
icebp
test
cmp
scas
aad
adc
lret
adc
and
dec
ret
xor
push
pop
mov
ja
jp
std
xlat
pop
adc
movsb
xchg
dec
lea
sbb
cmc
push
gs
mov
orl
jae
dec
and
adc
adc
mov
cld
imul
push
or
and
mov
stc
test
sub
and
sub
pusha
mov
pop
inc
mov
in
xchg
call
and
mov
fwait
pushl
jle
pop
lock
push
jmp
sti
pop
stos
test
add
lds
dec
leave
pop
mov
in
xor
inc
loope
mov
dec
xchg
repz
imul
clc
xchg
mov
jle
test
nop
lods
enter
adc
and
cli
push
das
or
jg
inc
inc
jmp
es
xor
fwait
orl
or
add
scas
stc
in
push
js
mov
lea
lods
cmovno
hlt
popa
lea
mov
adc
sbb
bound
stos
flds
pop
mov
aaa
std
adc
fmuls
dec
pop
pop
je
mov
ficomps
dec
inc
inc
daa
andl
pop
pop
in
dec
rep
dec
stos
mov
pop
sahf
lret
imul
or
xor
dec
sbb
inc
jne
sub
mov
mov
dec
into
ret
movsb
and
mov
pop
sarl
fsubp
adc
int3
sub
outsl
mov
push
cmp
adc
and
rcrl
rol
pop
aaa
inc
cmpsb
jl
xchg
js
push
sbb
mov
mulb
mov
pop
jmp
movsb
push
jecxz
popf
dec
push
sbb
pop
rorl
sub
mov
mov
sti
idivb
mov
icebp
outsl
pusha
das
dec
insb
test
rorl
test
cmpsl
xchg
push
mov
jae
insb
ja
jmp
sbb
lock
imul
lods
out
dec
adc
xchg
cmpsb
out
mov
inc
in
sub
fistl
sbb
aas
pop
mov
xorl
sbb
in
notl
mov
and
dec
jno
les
hlt
orl
push
cli
cmp
stc
add
and
inc
addl
add
jmp
loope
out
stc
out
mov
xchg
inc
sbb
aas
cmp
cmp
mov
mov
lcall
mov
scas
inc
lret
ret
xchg
jae
insl
pop
inc
pop
test
repnz
bound
adc
jl
sub
dec
call
or
and
cld
pop
jno
sub
or
decb
add
pop
out
mov
mov
popa
gs
push
scas
mov
lret
sub
and
rcll
dec
sbb
mov
mov
or
mov
stos
iret
mov
mov
scas
cltd
pushf
imul
daa
push
mov
stos
xchg
pop
fcmovu
mov
jns
xchg
rcrb
fld
adc
fxam
ret
push
std
add
ljmp
fistpl
dec
cmp
adc
push
mov
insb
cmp
add
mov
repz
dec
xchg
mov
out
rolb
pop
push
pop
dec
ss
sbb
mull
ljmp
jb
push
xchg
push
outsb
add
gs
test
pop
mov
push
sti
arpl
sarl
je
sub
movsb
and
clc
inc
sbb
fcoms
mov
lahf
aaa
fwait
aaa
and
scas
pop
cmpsl
ljmp
iret
cli
fsubl
jno
fdiv
aad
loopne
ror
rcll
jmp
inc
and
call
sti
pop
add
inc
popf
into
repz
out
xchg
popf
sub
push
js
xor
clc
bound
push
in
sub
fisttps
mov
clc
sub
jmp
jne
clc
leave
xlat
out
cld
sbb
dec
hlt
shrb
pushf
sbb
aaa
sub
hlt
push
lds
das
jns
lock
clc
inc
rorl
add
ret
sub
xchg
cmc
pop
in
rcrb
mulb
inc
rol
sti
cmp
xchg
stos
push
sbb
in
sub
jp
imul
jae
lods
cltd
jne
mov
popa
inc
mov
adc
ja
pop
and
andb
gs
jno
fildl
rolb
xchg
mov
xor
test
add
push
mov
sub
inc
pop
mov
mov
jne
jne
dec
lock
call
push
and
inc
nop
push
mov
xchg
imul
inc
cmp
fwait
dec
or
mov
sub
test
lret
mov
pusha
cmp
cmp
push
stc
dec
loope
inc
gs
add
or
xchg
cmc
xor
push
adc
cmp
test
bnd
popf
xlat
jnp
sub
loopne
jo
fs
xor
inc
stos
inc
and
and
mov
popa
pop
or
outsl
imul
jle
sbb
mov
and
dec
cmp
bound
xchg
xchg
dec
mov
in
pusha
sub
mov
mov
mov
sbb
mov
dec
jne
lea
mov
pop
xchg
push
shrl
mov
lcall
and
pop
fsubp
push
ficoms
ljmp
mov
mov
je
jg
call
xchg
jb
shlb
mov
fidivrs
fs
fisttpl
xor
cli
push
jno
xor
inc
and
adc
or
adc
adc
out
inc
mov
and
es
stc
xchg
scas
jmp
fimuls
testb
mov
aam
stc
push
je
mov
inc
fdivrs
add
cmc
das
out
aas
cmp
add
jbe
jecxz
mov
mov
mov
into
mov
xchg
in
gs
xor
pusha
pop
adc
cmpsb
dec
jb
arpl
ss
xchg
pushf
mov
leave
in
sub
arpl
add
fcompl
out
jmp
iret
jp
lods
sub
jg
adc
mov
adc
jns
lahf
adc
or
add
orb
daa
pop
dec
or
mov
ds
sahf
or
mov
in
int3
lds
stos
cltd
das
or
mov
mov
fs
mov
dec
jnp
mov
mov
cmp
cltd
stos
rcr
orb
sahf
add
sahf
enter
push
cmpsl
inc
and
jmp
mov
js
popa
cs
movsl
pop
flds
push
loopne
out
dec
sti
clc
dec
mov
xchg
xchg
jp
push
adc
dec
dec
or
fisttpll
adc
and
sub
das
lods
fs
pushf
mov
xchg
repnz
push
loope
sti
jb
mov
int3
mov
mov
call
sub
and
xor
or
mov
lahf
and
aam
nop
mov
mov
mov
jo
fldcw
aad
or
dec
fucomp
xchg
inc
sbb
clc
or
adc
fwait
cmp
xchg
pop
scas
fldt
aas
xor
push
adc
mov
dec
mov
scas
inc
rcll
xor
sbb
outsb
xor
aas
flds
sbb
pop
adc
push
enter
mov
fwait
cmp
sub
xchg
sbb
fistpll
popa
or
or
xor
pushf
dec
mov
lock
aas
mov
lahf
dec
daa
sbb
xchg
mov
and
pop
push
inc
clc
sbb
rclb
inc
js
dec
rclb
jae
adc
inc
cmp
push
and
out
mov
sub
push
lahf
cmpsl
push
jbe
shlb
inc
pop
sub
sbb
pop
or
ljmp
dec
or
xor
loop
popf
test
mov
sub
into
add
dec
sti
xchg
adc
jge
insb
popf
cmp
adc
adc
add
xchg
xchg
sbb
sti
icebp
addl
sbb
xchg
jb
add
inc
std
ja
pop
int3
jne
sub
push
and
leave
pop
cmp
push
inc
mov
ret
inc
out
sbb
xchg
or
aad
sbb
scas
add
test
inc
daa
lds
push
xchg
add
clc
rolb
sbb
jnp
pop
sbb
sbb
pop
pop
dec
cmp
pushf
sbb
inc
mov
push
cmpsb
je
push
pop
sbb
stos
add
jnp
sar
xor
xor
icebp
cmp
loop
inc
sbb
sbb
dec
jbe
fsubp
xor
pop
cltd
inc
pop
or
frstor
mov
or
sbb
or
clc
xor
shl
es
icebp
mov
ret
add
pop
arpl
mov
sbb
mov
mov
adc
cmp
dec
lret
loope
repz
inc
mov
xchg
mov
dec
mov
fwait
pushf
or
or
ljmp
pop
inc
es
loope
mov
cs
adcl
push
jnp
idivb
cld
mov
xchg
jo
lea
add
out
inc
dec
mov
and
lea
shrb
fwait
test
les
dec
inc
mov
and
test
bound
dec
lods
and
inc
ss
cmpsb
movsb
xchg
adc
xor
in
popa
jns
insl
xchg
sub
jl
cltd
and
roll
in
loope
dec
add
cmp
push
fwait
jnp
enter
es
rorl
jg
sti
and
loope
loopne
fmul
subb
rol
pop
mov
insb
pop
sbb
leave
fstl
fsubrs
mov
std
repz
popa
push
loopne
jg
test
stos
mov
lods
cltd
hlt
cmp
fstpt
arpl
mov
pop
in
sbb
add
mov
sub
push
pop
call
sti
mov
scas
int3
subb
lret
push
aas
mov
out
dec
dec
jb
xchg
fs
adc
daa
das
adc
xchg
shll
rep
push
xor
dec
js
jnp
inc
testb
xlat
dec
mov
testl
mov
repz
cmpsl
push
adc
pop
mov
mov
add
adcb
or
rorb
addb
xlat
cmp
out
jbe
loopne
hlt
mov
pop
push
or
mov
les
xor
add
movl
test
xor
inc
pop
or
fsts
outsl
hlt
pop
rorl
cmp
adc
inc
push
es
in
push
in
push
icebp
mov
fnstsw
int3
fstpt
xor
rcrb
mov
cltd
sbb
in
shll
jg
ret
sbb
sub
ficomps
xchg
push
cmpl
popa
data16
pop
adc
push
lret
or
mov
mov
cltd
pop
jae
insl
or
data16
in
imul
sti
lods
mov
inc
mov
rolb
mov
fcomps
cmpl
mov
aas
lahf
sub
ja
jo
or
sub
adc
jmp
lds
out
sbb
sbb
push
inc
mov
mov
xor
pop
outsb
or
and
test
mov
adc
loope
add
lret
sbb
or
iret
xchg
cwtl
adc
cmc
lcall
push
sbb
into
addr16
fildl
aaa
and
xlat
and
daa
fistps
call
aas
cltd
lret
xchg
popf
jns
jl
mov
mov
fiaddl
sbb
pop
inc
push
add
clc
test
cmpl
addb
mov
push
inc
fstpt
out
inc
adc
push
cmp
cli
push
leave
std
loopne
mov
movsb
xor
imulb
pusha
hlt
loope
dec
aam
insl
lods
ss
data16
lods
sub
cli
xor
mov
mov
xor
xchg
push
jmp
pop
add
mov
jmp
js
out
pop
psllw
or
push
fidivl
ds
jp
mov
dec
mov
or
pushf
xchg
ljmp
cld
es
rorb
insb
mov
jno
fidivs
sbb
repz
lods
mov
scas
loop
push
cmp
stos
mov
test
fsubrp
mov
jns
pop
popf
mov
sbb
pop
shlb
push
ss
pop
pop
dec
dec
repnz
into
loopne
out
out
mov
ss
sub
dec
add
dec
sbb
sub
xchg
aam
jb
or
jmp
pop
adc
add
or
pushf
sub
or
sarl
call
stos
stos
pop
xchg
loopne
adc
clc
xchg
cmp
ret
out
add
or
dec
filds
out
rol
lret
lcall
movb
std
sarb
out
or
xor
xchg
pop
push
mov
pop
test
xchg
or
pop
rorb
ljmp
aad
test
mov
jns
jg
or
add
lods
mov
into
outsb
shl
insb
cli
mov
daa
jl
loopne
mov
xchg
out
jnp
xchg
movlps
mov
mov
sbb
sub
scas
pop
lods
ja
in
sbb
fwait
push
sbb
and
add
repnz
add
cwtl
iret
jge
jl
sbb
jb
je
lret
ret
lock
rolb
pop
repz
sub
jnp
fwait
or
lahf
add
loope
pop
cmpsl
sub
push
push
popf
sbb
pop
clc
inc
fdivs
daa
jp
in
pop
pop
outsb
jb
cwtl
movsl
push
pop
jle
or
jge
mov
pop
mov
fwait
mov
popa
and
jns
push
shl
lods
xlat
cs
cwtl
lods
imul
loop
or
mov
aam
cmpsb
loop
jne
sub
in
dec
push
mov
cmpb
sbb
adc
cs
iret
sub
pop
mov
cli
sub
jmp
and
and
mov
xchg
push
fs
orl
inc
inc
stos
sbb
pop
subb
jnp
add
mov
mov
int3
cmc
lahf
sub
or
pusha
stc
fisttps
gs
inc
shl
sbb
faddp
lret
inc
lods
cmp
out
psubb
sub
pop
inc
out
ret
pop
push
cmp
ficoml
dec
or
mov
imul
pop
push
mov
movhps
jle
dec
mov
xchg
fidivrl
adc
neg
je
fstl
js
push
and
scas
lret
sub
aam
pop
lods
pop
hlt
or
adcb
mov
and
inc
pop
pop
and
jnp
mov
mov
cli
pusha
inc
lret
adc
pop
push
or
add
in
adc
pop
in
les
sbbl
push
and
and
fidivl
gs
cmpsl
jnp,pn
xor
xorl
push
cld
xchg
push
mov
orb
xchg
xchg
jg
in
loop
mov
negl
idiv
dec
cmp
mov
pop
mov
xorl
mov
dec
sarl
sahf
std
into
adc
sbbb
scas
cltd
push
das
jne
mov
imul
aad
mov
in
sub
or
xlat
stos
rcrl
adc
test
xor
sub
jecxz
pop
js
jno
mov
sbb
push
xor
insl
mov
add
add
push
leave
iret
add
jae
and
jmp
out
and
imul
inc
je
add
mov
pop
test
sti
das
mov
test
and
dec
int
xor
loope
popa
dec
mov
inc
ret
cmpsl
adc
mov
pop
xor
or
jb
test
lods
or
jecxz
inc
push
in
ret
mov
lahf
push
adc
gs
out
xor
or
lock
out
in
addr16
and
jle
stc
push
mov
and
xchg
out
cmp
push
lcall
js
sbb
xchg
sbb
packssdw
imul
dec
mov
push
mov
ror
xor
mov
cmp
int
sbb
test
pop
je
push
push
pop
int3
imul
repz
stos
icebp
popf
testb
xor
dec
ss
insl
nop
inc
jns
xchg
lock
or
cmp
push
mov
dec
cmp
jecxz
mov
outsl
pop
test
icebp
push
add
and
pop
xorl
or
pop
xchg
jno
jno
pop
jbe
in
mov
mov
mov
mov
dec
popf
ss
fnstcw
ficoms
or
mov
mov
pop
jbe
cmpsl
insb
xchg
in
fdivs
xchg
mov
dec
loop
or
fbstp
idivl
or
fsubl
fnsave
test
out
or
pop
fstps
arpl
jge
push
push
cli
push
mov
pop
aam
pop
stos
push
sub
lea
mov
pop
mov
adc
and
pop
jle
loopne
xchg
cli
mov
xchg
add
lods
mov
pop
dec
mov
inc
mov
lret
js
add
ljmp
fildll
xor
inc
outsb
stos
into
jmp
sub
push
pop
or
sahf
dec
mov
adc
add
and
adc
fcoms
jl,pn
imul
rorb
sub
inc
pop
mov
cli
pusha
rorl
mov
cmp
adc
or
cs
stos
dec
mov
gs
and
adc
add
push
mov
push
jb
mov
sti
imul
ss
popa
insb
lret
or
in
dec
loopne
outsl
push
dec
icebp
cld
iret
pop
nop
incl
outsl
das
jle
sbb
int3
lahf
xor
mov
int
bnd
pop
mov
push
int
xchg
enter
cmp
pusha
out
lret
leave
aam
xor
cltd
ljmp
jb
cmp
mov
xchg
loopne
test
or
mov
outsl
imul
add
out
mov
aaa
sti
sub
sub
mov
xchg
iret
pop
loope
xchg
jle
clc
rcrb
loopne
addr16
imul
jg
add
dec
jg
aad
daa
loop
and
mov
fistpl
adc
out
mov
cmp
jns
int
xor
push
push
mov
sahf
add
idivb
xor
or
pop
mov
push
mov
xchg
into
or
inc
sbb
push
dec
push
xchg
call
push
xchg
xchg
mov
jge
cld
xchg
jbe
jbe
or
cmp
jo
adc
inc
cld
xorb
dec
sbb
xor
mov
daa
add
xchg
push
mov
pop
fs
and
mov
cmc
repnz
xor
cmp
repnz
mov
fnstcw
imul
loop
inc
inc
imul
adc
jno
aam
inc
paddw
push
cmc
jbe
cmp
xor
repz
xchg
xchg
in
mov
jle
aaa
mov
sti
enter
push
test
loopne
out
add
adc
in
and
mov
sub
fidivrs
imul
scas
stos
cli
dec
dec
lea
add
or
add
cmp
pusha
or
push
jnp
inc
sarb
adc
pop
add
orb
imul
push
mov
loope
sarb
xchg
icebp
pusha
ret
mov
mov
notb
rcrl
sub
in
dec
repnz
ljmp
xchg
fcmovnb
call
fwait
mov
pushf
lods
push
push
sbb
fisttps
in
jg
xlat
mov
aas
jecxz
pop
xor
out
pop
cltd
sub
and
lock
lods
adc
jp
or
adc
gs
jne
jns
push
shll
xchg
aad
aas
scas
test
fiaddl
je
pop
enter
add
arpl
lea
andps
enter
sbb
das
mov
imul
loopne
out
pushf
sub
cmp
xlat
mov
sahf
imul
xchg
inc
push
fstps
pop
mov
ret
sbb
das
inc
mov
sbb
cmpsb
jnp
and
pop
daa
dec
pop
or
mov
outsb
cltd
jmp
test
repz
or
and
sbb
xchg
jge
into
lcall
mov
daa
xchg
mov
mov
or
xor
xchg
add
sbb
iret
sub
xchg
add
add
cmp
xor
sbb
test
das
iret
mov
inc
or
dec
mov
lds
sti
leave
in
out
mov
or
cmp
cmp
insl
rol
int
push
or
imul
ljmp
test
xchg
fistpll
dec
dec
mov
jle
cmp
xor
mov
fiadds
lds
in
push
loope
pop
gs
lock
pusha
leave
push
mov
lret
push
xor
lcall
loopne
negb
cmpsb
outsb
jle
mov
ret
mov
inc
sar
pop
lea
xor
fsin
mov
sahf
push
in
fcoml
cmp
push
jmp
inc
scas
mov
sub
icebp
lds
aaa
hlt
cld
inc
xchg
pop
sub
xchg
aas
scas
aaa
xchg
orb
or
mov
inc
mov
aaa
lea
sub
cmp
xor
cmp
mov
xchg
ss
outsb
xor
into
pop
jbe
js
add
hlt
cmp
xor
mov
pop
cmp
out
out
mov
push
cmp
xchg
lods
shl
mov
enter
movsb
pop
fisubs
xor
lret
lods
aas
ficoms
jl
pop
sahf
pop
hlt
fs
lods
in
jge
pop
test
mov
mov
call
cld
cmp
xor
ljmp
inc
xor
adc
sbb
or
shll
dec
hlt
repz
popf
gs
fcmovne
mov
mov
push
ret
add
xchg
pop
in
cwtl
aad
int
popa
and
mov
je
sub
pop
insl
fidivl
adc
enter
cli
inc
daa
in
pop
jno
push
add
jmp
push
orl
in
xor
mov
fdivp
cmp
mov
push
sarb
xchg
data16
shr
mov
mov
cmp
and
ds
cmp
pop
mov
inc
rcll
or
mov
mov
mov
stos
sbb
jp
int
fimull
add
lds
ljmp
mov
test
xor
mov
imul
jnp
pop
loope
shll
mov
push
jne
push
daa
movsl
mov
lret
adc
mov
mov
jno
mov
pop
data16
push
cmp
xlat
adc
imul
divl
pop
jmp
repnz
mov
imul
arpl
lret
out
testl
lock
ljmp
push
into
push
scas
movsb
and
fwait
es
inc
pushf
ret
xchg
lods
inc
add
lcallw
dec
and
aas
rcrl
loope
pop
xchg
and
in
cld
adc
stos
mov
lods
dec
jne
lcall
fstps
mov
cs
adc
test
push
leave
mov
xor
sub
ficoms
jne
fs
bnd
bound
add
inc
inc
jge
inc
xlat
daa
add
cmpb
push
sbb
fwait
mov
jp
pop
mov
cli
cmp
int
or
add
mov
sub
mov
sbb
dec
js
jnp
xor
imul
cmpsb
push
rcr
cmp
mov
push
add
cltd
xchg
call
std
xchg
stos
outsl
and
loop
cmp
add
adc
mov
fprem
lods
pushf
mov
insb
cmp
sahf
add
push
lcall
mov
out
push
rclb
mov
fists
popf
cmp
or
push
into
cmpxchg8b
jae
mov
cli
pushf
es
adc
lods
or
adc
not
xor
test
pop
cvtdq2ps
mov
push
imul
lds
mov
je
mov
pop
mov
push
mov
jo
ja
outsl
pop
daa
pop
jno
pop
jge
inc
fld
push
sub
fisttpl
inc
pop
faddp
pop
test
or
xchg
rcl
sbb
sub
fnstenv
pop
or
jmp
sarb
jge
and
out
inc
adc
int3
fcoms
mov
out
adc
mov
pop
pop
dec
pop
mov
mov
inc
cmpsb
test
insb
insb
mov
pop
pop
inc
adc
jo
fwait
outsb
push
mov
mov
into
roll
jmp
fdivs
lea
sub
push
in
pop
imul
pop
adc
in
pop
test
ds
push
fistl
pop
mov
sbb
add
and
xor
and
movsb
dec
mov
mov
lds
push
add
lret
and
shll
scas
inc
dec
pop
mov
stos
cmp
mov
pop
imul
movsl
aad
movsl
out
push
adc
jp
arpl
or
shlb
mov
mov
add
mov
mov
mov
rcll
xchg
sub
in
lret
sbb
add
roll
and
cmp
jb
lock
mov
fistl
cmp
iret
inc
add
ret
arpl
pusha
pusha
jb
mov
call
shlb
mov
ds
mov
pop
xchg
mov
and
cld
aas
popa
mov
jg
or
xchg
test
sbb
mov
dec
imul
pushw
leave
xchg
xor
push
fs
out
push
clc
cmpsl
icebp
mov
pop
rolb
adc
jle
mov
ds
mov
dec
mov
in
das
mov
stos
or
jg
pop
push
mov
jae
aaa
ret
xchg
test
test
int
mov
sub
mov
outsl
jecxz
std
dec
ret
xchg
cmp
rorb
add
in
xlat
lds
mov
outsl
jne
loop
xchg
iret
lahf
mov
fistl
hlt
add
xchg
cli
int
bound
ds
pop
ja
lret
loopne
cmp
lods
xor
cli
addl
adc
fs
mov
adc
mov
push
fisubrl
stos
sub
jbe
rolb
mov
call
pop
les
push
setp
pop
mov
push
sbb
stos
push
jo
scas
test
dec
mov
mov
cmp
mov
lea
sbb
mov
test
fiadds
fcmove
and
and
in
pop
push
adc
cwtl
xchg
cmp
sarb
mov
jb
int
popa
push
or
sub
out
into
mov
lods
test
test
addr16
aam
popa
jno
out
insl
ja
cmpl
mov
ficomps
aaa
dec
sbb
xor
xlat
arpl
or
jo
add
mov
cmpsb
gs
cmc
and
iret
in
lock
xchg
cld
mov
les
mov
xor
dec
mov
ss
cmp
or
cmp
pop
mov
sti
gs
loop
sbb
imul
dec
mov
add
repz
push
adc
mov
xchg
loope
add
inc
movsl
cwtl
add
xchg
push
in
and
mov
dec
cmp
idivb
movsl
push
and
loope
sbb
or
mov
stos
add
out
mov
outsl
lahf
push
push
sbb
xor
mov
mov
repnz
mov
inc
int
inc
xchg
aad
std
jle
in
mov
aaa
int3
fcoms
adc
fbstp
aad
mov
xchg
lds
jne
adc
gs
cmpsb
xor
outsl
ja
and
cwtd
jle
rcr
or
add
lods
push
ficoml
add
jnp
pause
mov
scas
mov
adc
inc
push
nop
jmp
dec
movd
inc
mov
jge
sub
add
mov
and
or
enter
dec
dec
mov
mov
cmpsb
dec
mov
pop
or
jnp
pop
out
xor
lods
outsb
push
add
xchg
popa
and
push
movsb
mov
scas
imul
leave
cmp
ss
ljmp
cmp
pop
lahf
mov
mov
rcll
imull
xchg
jbe
and
stos
add
push
adc
xor
lock
sub
and
shrl
or
gs
pop
jmp
mov
out
sahf
mov
adc
decl
sahf
and
rorb
xchg
cli
mov
loope
adc
mov
mov
movsb
cld
into
dec
dec
cmp
sarb
and
sbb
xchg
fwait
sbb
cli
in
in
popf
jae
pop
dec
das
mov
jmp
stos
aam
lods
loopne
mov
xchg
loop
es
hlt
lea
jae
jb
mov
adc
jecxz
jbe
jecxz
mov
sub
movsl
lret
jmp
push
hlt
aas
cmp
jno
out
and
ficoms
xor
fs
mov
lds
mov
adc
int3
loop
jbe
pushf
cmp
mov
loop
rclb
mov
mov
insl
dec
add
idivl
cmc
add
adcb
cmp
mov
mov
sub
jae
leave
cmp
imul
pop
in
out
fstps
cmp
xchg
or
test
sub
pop
xor
imul
ficompl
aas
int3
and
hlt
sub
inc
sbb
mov
lret
push
leave
out
jne
mov
sub
xlat
inc
nop
ret
xchg
xchg
add
sub
sbb
add
nop
lahf
in
push
test
xlat
out
lahf
add
mov
adc
mov
or
lret
mov
mov
pop
leave
xchg
cmp
xchg
cmp
outsl
mov
inc
push
cmp
cmp
ds
lds
mov
sub
insb
mov
test
pop
pusha
push
rol
popf
popf
add
mov
xchg
mov
std
adc
mov
js
movb
dec
fs
ficoml
cmpsl
or
ja
decb
sbb
stc
add
push
jno
ret
xchg
les
lret
push
es
sarl
inc
xor
rorl
lahf
xchg
fadds
adc
fs
pop
mov
xchg
rcrl
mov
jb
shrb
sahf
mov
and
dec
imul
shll
popf
je
lret
inc
mov
in
cmpsb
xchg
int3
insl
mov
shrb
cs
fdivl
xchg
xor
aam
xor
mov
sbb
pop
jmp
lock
xchg
out
sbb
sbb
push
mov
bound
cmp
xor
inc
push
jmp
std
mov
mov
nop
imul
cltd
dec
adc
aad
sbb
addr16
mov
ficoms
test
adc
xchg
push
lds
and
shlb
fisubrl
lea
std
mov
jo
aaa
xchg
jb
and
sahf
push
mov
or
pushf
sahf
pop
jmp
sub
push
dec
dec
int
jb
shlb
leave
mov
cmp
or
inc
in
jae
mov
ja
mov
xchg
in
sbb
pop
push
dec
inc
fs
outsl
outsl
xchg
and
cmp
adc
cld
pop
pop
fs
call
mov
pop
fs
pushf
and
popf
push
popf
push
ss
adc
inc
pop
insb
jge
mov
mov
out
int3
or
fcmovbe
mov
dec
sbb
leave
xchg
lret
cmp
jl
adc
jmp
ret
hlt
imul
jae
test
lock
add
cmc
ds
arpl
add
call
xor
xor
or
mov
scas
and
stos
out
or
jo
and
dec
adc
das
sbb
popf
mov
cmp
leave
lds
or
pop
enter
outsb
xor
dec
xor
inc
fcomps
enter
or
mov
hlt
int3
pop
mov
insl
js
push
xchg
lds
repz
enter
add
enter
test
cld
mov
cmc
sub
xchg
lods
add
add
cmp
in
aaa
xchg
cmp
add
and
cltd
mov
es
cli
out
clc
dec
fld
lahf
push
ja
outsl
or
lahf
test
in
stc
add
xor
or
sti
add
inc
xor
mov
cmpsl
adc
stos
rclb
daa
gs
repz
push
xchg
repz
mov
sub
hlt
lret
lock
aaa
out
bound
movsl
add
in
rcrl
xchg
fisubl
sahf
or
jo
inc
sar
pop
test
fiadds
cwtl
icebp
dec
inc
out
pop
cwtl
or
idivb
jge
es
inc
push
sbb
sub
outsb
mov
mov
movsb
push
adc
ljmp
arpl
fcoms
fsubrl
movsl
push
lret
add
and
push
adcl
cmpb
sub
inc
imul
dec
adc
insb
in
cli
out
adc
leave
int
rcrl
sti
push
jne
and
mov
js
cmp
xchg
sub
jo
xchg
fldl
call
mov
insl
mov
or
sub
jecxz
adc
aaa
enter
jnp
inc
sub
test
mov
xor
jmp
lods
or
pop
adc
cmpb
out
outsl
sbb
fistpl
in
outsl
cs
lock
sbb
gs
je
jbe
mov
adc
or
adc
add
clc
cmp
call
or
push
lret
mov
dec
sahf
sbb
shl
test
std
jnp
test
jne
cmp
xchg
roll
xchg
or
aad
idivl
rorl
push
test
gs
inc
fiaddl
fs
add
xor
dec
dec
fs
jp
mov
push
repnz
rol
in
pop
sub
mov
mov
out
dec
mov
jecxz
aam
into
cmpsl
cmpsb
fwait
in
pop
inc
adc
xor
cwtl
xchg
or
xchg
insl
xor
mov
jo
cmp
dec
shll
sbb
push
xlat
cmp
push
adc
lods
leave
jno
inc
add
or
xchg
inc
mov
icebp
mov
stc
sbb
jb
loopne
or
pusha
hlt
jp
leave
push
jg
cmp
imul
xchg
mov
mov
sbb
arpl
int
inc
jecxz
sbb
dec
icebp
mov
cmc
incl
sbb
cmp
jle,pn
or
lret
bound
xor
cmp
andb
add
aas
stos
inc
dec
and
sti
add
inc
and
cli
dec
repnz
push
push
mov
inc
inc
int3
mov
call
xchg
hlt
in
add
push
stos
frstor
pmaddwd
daa
mov
dec
in
ret
lea
jmp
movsb
xchg
cs
aad
xchg
sub
mov
cli
fnstsw
push
inc
stc
jne
mov
xchg
dec
mov
jns
sar
mov
lahf
cs
push
xchg
cmc
xchg
test
or
mov
rorb
sbb
scas
in
arpl
pop
lods
push
sub
pop
lret
inc
ljmp
pop
rcr
cmpsb
stos
jno
bound
jmp
out
adc
aas
in
in
and
sbb
test
jo
push
mov
addr16
in
cld
sub
pop
mov
stos
xchg
xchg
bound
and
adc
sbb
add
cmp
sbb
mov
or
push
mov
mov
pop
faddp
int3
cmp
rcrl
in
insb
sar
jmp
xchg
sub
xor
jecxz
in
pop
adc
insl
jne
mov
pop
xchg
xchg
sub
outsl
xchg
lcall
test
add
or
fsubrl
pop
in
xor
jne
lods
xor
iret
sub
mov
xchg
push
adc
pop
mov
call
aad
sub
adc
adc
fsubl
mov
jle
clc
pop
jp
int3
mov
jge
fistpll
and
xchg
mov
and
dec
dec
pop
incl
mov
jbe
rcll
or
mov
xor
push
ljmp
inc
and
xchg
adc
scas
jno
adc
mov
sbb
cs
sub
ret
cmpsl
and
xor
add
daa
bound
push
mov
scas
es
dec
pop
adc
jno
push
cmp
adc
push
or
pop
lods
movsl
rcr
in
jmp
mov
lods
ss
or
pop
jmp
xor
dec
faddl
push
icebp
pop
jl
sbb
jae
sub
and
ljmp
sahf
adc
xor
lahf
lods
mov
nop
push
cmp
sub
lds
xchg
jb
dec
pop
mov
mov
popf
cltd
out
fmul
pop
xchg
xor
decl
inc
push
lea
or
jp
jge
mov
push
in
add
push
mov
pop
cmp
mov
xchg
xchg
enter
jge
sbb
mov
dec
lahf
dec
mov
xorl
test
or
std
imul
rcll
mov
test
insl
mov
add
or
data16
addb
andl
icebp
lcall
mov
mov
pusha
into
rcll
sbb
shlb
rcr
sub
mov
in
dec
testb
pop
mov
jl
inc
popa
enter
stos
lods
jne
stc
outsl
push
jle
mov
mov
loopne
ss
xorl
adc
negb
es
sub
mov
push
adc
pop
sub
call
fistpl
mov
adcl
push
sbb
mov
mov
fadds
mov
and
inc
dec
stos
or
das
insl
dec
ret
mov
mov
loop
mov
fstp
in
lods
into
outsl
mov
xlat
mov
xchg
sbb
in
inc
or
out
jg
sbb
hlt
xchg
jns
sbb
frstor
sub
sbb
stc
mov
in
dec
jae
nop
andl
popa
xchg
sbb
mov
loop
mov
mov
jle
mov
sahf
inc
out
shll
inc
mov
loop
aad
sbb
jnp
dec
cltd
lret
icebp
xor
mov
leave
ret
or
ficoml
repnz
fistpl
movsl
push
sub
mov
mov
jg
pop
mov
adc
mov
sub
repnz
mov
mov
xor
jae
repnz
shl
enter
dec
adcl
ss
xor
int3
fildl
or
scas
mov
rcrb
pop
out
in
push
data16
loope
inc
sub
das
ds
push
xchg
fsubr
adc
mov
hlt
push
mov
adc
and
loope
fists
and
adc
pop
cld
push
inc
pop
jb
add
adc
sbb
movsb
mov
sub
dec
add
cmpsb
dec
mov
add
push
bound
pop
ret
jge
push
pop
cmp
cmp
ret
inc
popa
sbb
cmp
mov
popa
js
jle
xor
outsb
dec
fs
ljmp
mov
push
inc
cmp
push
popf
mov
add
mov
or
or
push
mov
cltd
pop
cmp
xchg
xchg
repz
xchg
and
pop
jmp
add
bound
xor
dec
sbb
mov
or
and
pushf
popf
xlat
sub
insl
mov
gs
xor
add
mov
dec
dec
repz
shlb
adc
enter
adcb
pusha
mov
enter
iret
js
fadd
dec
adc
ja
sbb
inc
mov
fldcw
mov
dec
ja
lock
jecxz
lahf
insb
lods
pop
adc
dec
xor
mov
dec
stos
pop
lock
jge
loop
imul
or
std
dec
sti
xchg
jl
mov
insb
pop
mov
and
adc
cs
cmp
lcall
mov
mov
push
hlt
fucomip
hlt
pop
aam
mov
rcrl
jmp
es
pop
test
and
mov
pop
fcomps
into
sbb
stc
adc
lret
loop
sbb
lock
xchg
fldenv
std
push
mov
aad
addr16
push
mov
iret
pop
xor
movsb
push
inc
jnp
ja
mov
and
lods
xor
shlb
sub
aam
pop
and
sbb
jno
stos
add
jae
lahf
loop
pop
cmpsb
data16
in
out
aad
mov
icebp
int3
push
gs
inc
jno
and
inc
xor
cwtl
and
fdivrs
inc
jge
and
das
sbb
sub
pushf
inc
dec
loope
es
and
sbb
cmp
rcl
cmc
push
push
sbb
cmp
fwait
jle
pop
or
daa
xchg
insb
cld
or
outsb
icebp
add
imul
pop
pop
imulb
jb
cmpl
ret
sub
adc
out
cmp
fidivrs
add
data16
enter
in
sbb
div
rcll
adc
push
dec
jmp
mov
jbe
es
dec
rcr
js
add
cmpxchg
dec
pop
fwait
add
or
sbb
call
or
mov
xchg
mov
adc
sub
test
lcall
cli
popa
mov
inc
bound
adc
pop
call
outsl
popf
out
scas
xchg
push
leave
adc
nop
add
sbb
popf
fcomp
std
dec
notl
fwait
and
push
xchg
xchg
mov
or
repz
dec
loope
dec
push
and
or
fdivrl
int3
repz
je
ja
push
cmpsb
and
cmp
orb
push
repz
jl
aaa
push
pop
into
or
mov
and
lds
xchg
adc
int3
xchg
cmp
mov
data16
dec
ja
movsb
inc
mov
pop
dec
inc
mov
mov
stc
outsl
xchg
lret
push
daa
push
mov
sbb
dec
mov
inc
loopne
test
aas
sbb
mov
mov
int3
sahf
sub
stos
dec
xor
adc
push
cmc
neg
fimull
shrb
jo
or
xchg
lea
ret
or
lahf
push
jp
lods
sbb
inc
xchg
cli
cmp
ja
out
leave
push
orl
js
jb
pop
xor
mov
cltd
ja
pop
push
nop
inc
cmp
inc
sub
jae
pop
add
dec
inc
aaa
cmp
shll
lret
mov
out
mov
rorl
push
and
cmp
les
fwait
mov
cmpsb
inc
mov
ficompl
gs
pop
cmpl
dec
pop
xor
mov
sbb
jnp
mov
mov
xchg
xor
stc
lret
das
add
movsb
push
cmp
fcom
xchg
mov
test
out
pop
xlat
mov
pop
adc
arpl
mov
int3
scas
add
cmpsb
sbb
das
inc
xchg
jae
icebp
pop
push
inc
lret
decl
stos
pop
jo
mov
mov
push
push
ss
aas
std
mov
xlat
or
and
fmul
jle
js
jp
xchg
push
data16
lret
xor
dec
mov
scas
int
dec
sub
and
gs
pop
jb
iret
mov
push
dec
xor
jle
xor
lds
mov
mov
imul
cmp
xchg
adc
loopne
stos
or
arpl
dec
popa
xlat
mov
lcall
sub
out
cltd
mov
dec
fcoml
cmp
mov
mov
push
push
mull
sbb
mov
sbb
sbb
mov
mov
dec
stc
ja
arpl
or
mov
cmpsl
and
imulb
rcl
cmp
mov
and
and
aaa
sbb
push
adc
fstps
jl
mov
mov
movsl
push
xchg
xchg
imul
pop
and
test
mov
movsl
mov
xchg
pop
adc
insl
mov
in
hlt
lcall
mulb
push
pop
jo
ror
nop
cmp
mov
cwtl
cmpsb
ficompl
aad
movsb
push
cmp
push
fs
loop
push
hlt
mov
add
push
cmc
enter
jp
test
dec
hlt
and
lds
jae
adc
cwtl
out
into
int
roll
jmp
push
bound
addr16
jl
cli
test
push
jbe
inc
fs
mov
xchg
adcb
in
add
leave
adc
sub
incl
add
dec
arpl
lea
mov
aam
xor
popf
mov
aam
pop
xor
imul
shrl
pop
push
adc
paddq
out
push
mov
cmp
sbbb
ja
cmc
fwait
leave
mov
aad
scas
mov
xor
sub
mov
pop
fimull
mov
pop
ret
and
xor
mov
rcl
cmpsl
sub
repnz
xorl
lret
mov
mov
mov
out
cmpsl
pop
stos
orb
inc
mov
xor
and
and
into
stos
ja
mov
or
les
pusha
jge
subb
adcb
mov
sub
data16
addr16
mov
cmp
add
cli
xor
cmove
flds
dec
lock
loope
loopne
cmc
xchg
js
scas
sub
jo
sti
cltd
shrb
cmp
add
test
cmpsl
add
lcall
dec
cmp
cmp
and
scas
cmp
cmp
in
or
adc
push
xchg
pop
adc
cmp
mov
xchg
mov
pop
jbe
push
sbb
in
mov
stos
xorl
push
jmp
int
sbb
xorl
pop
or
pop
adc
pop
sbb
sbb
mull
add
or
clc
scas
xchg
data16
pop
xor
and
mov
shrb
pushf
pusha
mov
mov
leave
fisubrs
pop
je
int3
xchg
lock
cs
adc
ret
jp
mov
cmp
pop
test
sahf
cmpsb
dec
mov
jb
inc
jl
or
sarb
bound
dec
mov
movsb
or
push
clc
lods
xlat
sub
and
dec
fwait
sub
add
inc
jmp
lahf
or
inc
cmpsb
subl
rolb
fimuls
cmp
lret
mov
lds
dec
xor
lods
cld
adc
cwtl
ja
mov
ret
loop
xchg
repz
pop
sub
insl
jg
ss
test
push
int
or
movsb
fmull
dec
sub
outsb
ljmp
fwait
dec
xlat
jno
push
add
arpl
fstp
cmp
mov
mov
sahf
loope
mov
nop
frstor
inc
popa
xor
stos
mov
lods
nop
sub
test
sub
pop
flds
aas
inc
pop
jno
and
jae
jmp
in
pushf
mov
or
xchg
addb
stos
lea
push
dec
jl
fnstsw
inc
jnp
mov
stos
aad
fadds
daa
scas
test
pop
mov
xor
aad
sbb
rcll
xchg
in
mov
inc
pop
xor
aam
ret
lods
jg
add
rorb
xor
push
add
mov
pusha
push
mov
and
or
lods
or
test
push
aas
or
rorl
xor
iret
mov
push
lock
xchg
ljmp
scas
sti
jp
movsl
push
dec
jbe
cli
lret
adc
sahf
std
mov
and
xchg
flds
sbbb
fbld
out
loop
shll
mov
and
shr
or
sahf
sub
in
mov
xchg
or
sub
sub
ss
data16
jbe
inc
sar
lret
jb
sbb
adc
fdivrp
mov
cmp
ljmp
dec
push
or
pop
adc
sub
mov
mov
repz
outsb
or
sub
aad
outsb
mov
or
jmp
adc
push
jo
mov
mov
inc
aas
xor
xor
insl
out
add
js
push
sbb
mov
pop
out
add
cld
imul
push
jecxz
mov
rorl
xchg
mov
xchg
add
push
stos
mov
in
pusha
mov
and
lahf
push
negb
addr16
sub
adc
mov
repnz
mov
mov
inc
jo
fcmovb
sbb
pop
push
jmp
cli
incb
jbe
std
mov
pop
xor
fwait
jle
inc
and
jmp
mov
dec
mov
out
pop
sub
xchg
dec
add
cmpsb
ror
fs
loop
jne
dec
orb
bound
test
push
orl
xor
push
lods
mov
bound
sarl
outsl
pop
daa
xor
pop
fbld
xchg
imul
in
jae
pusha
jae
pop
in
fs
xor
cmpsl
cwtl
sbb
roll
je
lods
mov
xchg
repz
lret
loope
dec
jb
rolb
mov
xchg
ret
jo
stos
bound
nop
sub
clc
mov
or
inc
ds
clc
out
ds
repnz
bound
add
arpl
das
popa
mov
cld
pop
loop
outsb
xlat
ja
jns
ljmp
mov
psrlq
xchg
dec
dec
loopne,pn
cmc
add
popf
and
orl
mov
ds
leave
sbb
icebp
ret
rcrb
xchg
popa
daa
dec
shrl
lret
shlb
mov
jecxz
push
adc
xor
push
inc
pop
mov
pop
clc
dec
jbe
adc
pop
or
shll
pop
jle
jnp
pop
dec
push
gs
jg
add
sub
inc
sbb
stos
rorb
cli
sbb
insb
sub
sbb
pop
lea
push
fbstp
pop
ja
movntq
out
mov
hlt
mov
aad
inc
fiadds
add
or
js
dec
cwtl
addr16
pop
pop
jnp
pop
cmpsb
xor
pop
wrmsr
inc
aas
push
xchg
dec
xor
mov
iret
inc
or
push
push
adc
mov
pop
inc
adc
or
mov
dec
int
es
jle
xor
xor
andb
das
fs
jb
dec
jae
add
std
or
stos
xchg
addr16
addr16
lock
pop
push
lds
pop
jp
add
pop
push
shll
out
sbb
jge
rcl
mov
xchg
mov
push
inc
cld
sub
adc
pushf
and
stc
jle
cs
push
xchg
clc
dec
jg
fsubl
cmp
orl
sub
push
push
xchg
test
shl
rcl
sbb
jnp
fstpl
cli
pop
mov
cs
add
hlt
jno
out
cs
out
sbb
and
push
adc
sbb
cld
ja
jns
call
loope
lods
jl
insb
incl
out
mov
fbld
sti
hlt
shrl
mov
int
repz
pop
jecxz
dec
in
inc
and
adc
arpl
push
mov
stos
mov
mov
les
addl
orb
add
into
ret
pop
sbb
subl
sbb
cmp
into
in
lods
lods
stos
push
into
cmpsl
jo
cmp
sub
or
cmpsb
push
out
cmp
inc
pop
imul
pop
inc
movsb
pop
iret
inc
mov
clc
lods
xor
ret
mov
mov
sbb
lret
cmpsl
enter
and
jecxz
and
push
mov
les
xchg
mov
sub
mov
sbb
xor
xor
or
inc
jmp
andb
jne
xchg
push
push
loope
fisubrs
mov
lahf
add
mov
outsb
stc
cmc
and
out
mov
mov
leave
test
adc
ds
jge
cmp
and
call
clc
mov
imul
add
and
lahf
adc
lods
das
mov
dec
push
xchg
fisttpl
jae
stos
ja
call
lea
fwait
push
and
adc
outsl
jmp
dec
andb
push
dec
negl
std
cld
js
ja
mov
jecxz
pop
icebp
pop
bound
cmp
mov
inc
jmp
insb
inc
cmp
pop
ret
data16
jecxz
xor
mov
insl
call
cmp
ja
add
sbb
out
pop
fdiv
pop
mov
add
ljmp
bnd
adc
btsl
inc
dec
push
pop
xchg
ja
or
add
rcr
or
shlb
inc
sahf
out
fs
mov
adc
xchg
int3
fsubl
sub
outsl
js
test
les
mov
mov
aam
rcrl
push
mov
in
adc
pop
jl
cmp
adc
xchg
adc
add
stos
cmpsl
sbb
sub
popf
fiadds
adc
pusha
ucomiss
inc
cmpsl
ret
pop
fadd
pushf
lcall
jg
in
push
sbb
push
rorl
stos
daa
xchg
sahf
push
lahf
rclb
push
cld
mov
rorb
push
std
cs
xorl
push
hlt
insb
pushf
stos
jmp
repnz
punpcklwd
inc
sub
out
ret
xor
and
mov
inc
negb
xor
fcoms
test
in
dec
pop
inc
jbe
sbbb
mov
mov
sub
repz
ret
shlb
push
mov
add
sbb
jb
mov
adc
pop
popf
mov
jb
adc
mov
jb
aam
push
sub
aam
or
in
mov
repnz
inc
lahf
adc
mov
insb
ja
jp
adc
mov
addr16
mov
adc
mov
adc
fildl
loope
adc
inc
pop
lea
out
aam
push
dec
aam
out
inc
mov
inc
cmp
gs
cwtl
add
or
cmc
sbb
test
das
icebp
not
fwait
hlt
enter
mov
mov
xchg
hlt
decl
in
ret
mov
lret
mov
rolb
mov
adc
lea
xor
fstpl
mov
in
mov
cmp
fld
repnz
sbb
inc
ljmp
sub
cld
and
clc
xor
pop
leave
lcall
sub
mov
ja
repz
dec
sub
lds
negl
repnz
mov
call
ds
mov
pusha
mov
push
cmp
adc
stc
call
fstpt
fbstp
mov
mov
je
sbb
sbb
scas
sub
adc
out
shl
lds
pop
jb
and
mov
xchg
rolb
popf
mov
fbstp
mov
test
repnz
into
ret
jmp
fsubrl
inc
clc
es
sar
cmp
icebp
sbb
or
and
jg
mov
in
or
jno
mov
mov
push
dec
fwait
sbb
or
stc
aaa
dec
sbb
loope
mov
popa
incb
clc
js
data16
cmp
nop
ja
push
push
mov
or
mov
in
mulb
shrb
das
ret
sub
pop
lods
and
lret
test
jo
inc
pop
sbb
xor
cmp
jne
pop
dec
inc
xor
out
nop
imul
or
sub
mov
xchg
push
mov
lock
mov
xorl
mov
jg
pop
inc
mov
or
jp
pop
lret
lcall
lret
jecxz
movsb
clc
xor
mov
rorl
and
sbb
adc
adc
adcb
jb
mov
sti
jnp
fisubs
pop
dec
clc
loopne
jmp
mov
jnp
or
pop
psrld
xor
jle
xchg
andb
inc
out
xchg
call
out
mov
add
xchg
adc
add
es
pop
test
cmpl
dec
stos
push
cwtl
mov
cmpsb
fldenv
mov
sbb
test
es
jg
loopne
cmp
subl
jae
cmp
stc
push
cs
insb
xchg
lcall
rclb
or
movsl
aas
loopne
aad
push
mov
aaa
jns
enter
mov
ficoms
fstpl
scas
push
fbld
bound
fbstp
dec
lds
add
aam
popa
mov
insl
lock
cld
ljmp
cli
cwtl
sub
dec
sub
lret
in
mov
daa
aad
inc
xchg
dec
outsb
decl
out
cmp
mov
and
adc
mov
mov
jle
mov
mov
cwtl
fisttpl
cwtl
add
cmp
outsl
cmp
shl
jo
dec
lcall
lcall
loop
push
or
jbe
cli
mov
mov
call
or
dec
xor
jmp
xchg
xorl
dec
je
xchg
mov
add
aam
inc
mov
xor
jns
mov
mov
inc
push
fisubs
daa
and
jnp
xchg
test
xchg
in
outsl
jns
mov
fld
addr16
enter
leave
addl
inc
sub
push
pop
sbb
pop
sbb
adc
dec
sbb
out
push
shlb
jp
cmp
pop
das
in
xchg
lret
sbb
pop
daa
xchg
adc
jecxz
adc
cmp
or
or
add
or
and
lret
insb
xchg
in
nop
sub
icebp
lods
xor
les
faddl
jbe
xor
addl
fs
add
loope
adc
dec
out
mov
ret
fwait
add
daa
push
xchg
dec
faddp
mov
ljmp
inc
addr16
ret
loop
sub
sub
in
pop
xchg
add
or
jl
jns
lea
pushf
sub
xor
inc
clc
add
ret
shll
iret
lret
lock
inc
mov
or
and
xlat
fnstenv
mov
push
mov
mov
in
or
pop
cmpsl
popf
out
js
xor
adc
xor
popf
mov
cmp
fbld
xor
jl
pushf
mov
lcall
jns
sub
faddl
add
out
rcrb
repnz
mov
dec
scas
leave
and
mov
mov
push
ret
popf
outsl
pop
mov
pushl
aam
ja
cmp
icebp
push
shrl
lcall
lods
pop
and
in
adc
fnsave
push
mov
xchg
cld
mov
adc
and
nop
push
add
push
mov
inc
cs
and
popf
sub
call
sbb
sbb
lock
jmp
shll
mov
pop
gs
subl
push
shlb
pop
enter
cmpsl
lds
outsb
xchg
fistpll
or
pop
loop,pn
mov
adc
jb
xchg
push
sub
cmpb
out
lret
sub
push
cltd
inc
jb
aad
pop
mov
leave
leave
sub
jg
fldl
cmpl
inc
test
jnp
mov
stc
in
or
stos
pop
repz
add
jno
pop
fstpt
or
sahf
inc
lea
push
fbstp
dec
pop
subb
test
jge
adc
jle
dec
loop
aas
fsubp
insl
fstpt
mov
iret
sub
stc
or
jbe
xchg
jo
arpl
lods
je
dec
pusha
int3
test
push
or
and
push
aas
push
popa
or
leave
sbb
insb
sbb
ljmp
icebp
pop
xor
test
es
pop
pop
push
movsb
shll
popa
lds
clc
stc
andb
roll
or
movsb
dec
leave
lcall
shl
mov
add
xlat
icebp
or
cmp
notb
lds
aaa
inc
aam
pop
sub
fdivrp
fwait
popa
in
ss
push
leave
mulb
enter
inc
fcomi
int
sub
mov
std
rol
jno
inc
mov
mov
inc
hlt
call
or
outsb
mov
push
cmp
hlt
aam
pop
mov
pop
inc
sub
add
dec
dec
lret
xor
test
cmp
sbb
add
mov
push
cmp
xorb
pop
ds
movsl
mov
push
pop
fdivrp
into
pop
jbe
js
test
dec
daa
in
in
pop
nopl
and
inc
or
mov
sbb
pop
mov
inc
loopne
jb
test
sbb
fs
mov
mov
jbe
insb
dec
xchg
lret
je
sbb
push
nop
fwait
mov
nop
iret
sbb
rcll
jo
fimuls
xlat
rcrl
lret
push
rcll
lahf
lods
lods
jl
mov
xor
or
jae
ret
jp
lret
mov
into
push
imul
jbe
mov
add
pop
in
push
jo
pop
fsub
pop
je
dec
add
adc
loop
dec
sbb
jne
jnp
mov
pop
es
icebp
jge
sbb
push
cmp
xchg
jp
adc
stc
lds
pop
mov
sbb
jecxz
lods
in
insl
aad
mov
jo
out
stos
or
mov
push
pop
and
stos
add
int
in
add
out
stos
outsb
fldt
shlb
cmp
jbe
pop
pop
ret
sbb
ror
dec
pushf
rcl
pop
out
subl
out
adc
fs
mov
xchg
fmul
lret
and
sub
stc
pop
push
lods
pop
loop
sahf
fdivrs
cs
pop
pop
mov
pop
pop
dec
je
xor
mov
add
pop
mov
sub
rolb
mov
jge
inc
ret
sahf
enter
pop
clc
sbb
push
in
mov
jp
mov
out
iret
push
jmp
mov
loopne
mov
stos
mov
push
xor
nop
xor
jns
pop
add
push
mov
popl
or
jmp
lods
add
stos
or
mov
jno
pushf
stos
and
loopne
add
add
stos
movsl
dec
jl
mov
insb
cmp
xchg
lods
xorb
sub
xchg
cmpl
fwait
lahf
cmp
mov
xor
imul
int
loop
shrb
das
je
add
mov
cmpsl
cmpsl
je
push
fists
dec
and
lock
cmpsl
adc
std
xchg
pop
or
cli
daa
and
cmp
jecxz
cmc
rcr
aaa
repz
test
inc
fsubrp
aas
dec
and
jo
std
enter
in
fiadds
inc
mov
popa
cld
jno
or
cmp
add
lcall
xorl
nop
icebp
add
enter
sub
add
jns
subl
test
jb
lret
jne
cmp
js
and
push
dec
arpl
pusha
xchg
pop
cmp
jp
jmp
outsl
xor
and
stos
lds
sub
mov
in
leave
movsl
mov
mov
xchg
jl
adc
push
mov
popf
clc
cld
dec
sbb
cmc
and
jae
push
jge
jp
fwait
iret
pop
push
hlt
inc
or
mov
xchg
jmp
mov
mov
shrb
jae
int
inc
xorb
lahf
cld
sub
into
dec
cltd
daa
push
lcall
aas
rorl
leave
fdiv
lahf
dec
mov
leave
fdivs
mov
pop
mov
jg
ja
mov
mov
iret
nop
cmc
pop
arpl
pop
push
mov
shlb
test
fdivrl
ds
movsb
adc
push
mov
mov
jno
movsb
ds
mov
and
hlt
in
and
or
mov
dec
adc
in
mov
iret
lcall
cmp
and
jno
xchg
dec
test
addr16
jle
lock
lcall
add
cmp
jns
test
push
and
add
mov
sbb
jp
push
repz
xchg
test
mov
push
cmp
lock
push
jno
ja
loop
hlt
xor
fldcw
pop
jb
adc
jne
push
sbb
repnz
cmpb
lret
gs
mov
jge
xlat
test
dec
inc
mov
fstp
clc
lahf
cmp
xchg
shll
inc
or
jae
inc
cmp
pop
mov
mov
mov
into
ds
in
mov
cmpsb
outsl
dec
lret
je
jl
shl
xchg
lods
jmp
loope
adc
jle
rorb
jbe
pop
ficoml
jnp
push
shl
sub
inc
xchg
mov
jbe
inc
aam
xorl
je
mov
push
push
lret
mov
and
clc
xchg
nop
dec
jl
or
mov
cmp
insb
nop
and
jo
aaa
stos
pop
sub
lock
mov
cmp
ret
lret
aam
testb
mov
xchg
insl
roll
pop
xor
push
imul
jne
gs
jle
sub
cmp
shlb
aas
sbb
fildll
xchg
negb
aaa
and
in
adc
cmc
push
or
mov
sbb
aaa
jecxz
dec
test
jge
jmp
aaa
mov
loopne
cld
add
addr16
push
cmpsb
dec
adc
aam
roll
dec
add
fidivs
outsb
js
mov
mov
adcl
lahf
inc
repz
push
sbb
dec
add
daa
test
clc
ljmp
aaa
aad
popa
mov
leave
mov
add
xchg
lods
mov
pushf
adc
xchg
adc
add
xlat
pop
xor
push
mov
xlat
movsl
filds
sti
jae
stos
push
nop
cli
stos
repz
mov
mov
dec
pop
repz
lahf
ss
into
rorl
fwait
sahf
shr
mov
lea
cltd
adc
fstpt
cmp
loope
std
dec
popf
and
mov
lret
lds
and
mov
cli
cltd
ljmp
arpl
and
mov
movsl
sbb
cmp
test
pop
xor
jns
test
jl
es
sub
rcl
shrb
je
lods
inc
icebp
or
lret
cltd
xchg
pop
sub
cli
jbe
adc
daa
xchg
adc
pop
or
push
pop
xor
xor
test
push
movsb
repz
cmp
dec
mov
ret
inc
xor
cmp
cld
add
lret
ds
jle
push
outsl
int3
add
out
push
xor
sbb
sbb
in
mov
cmp
pop
jge
in
sahf
pushf
jne
mov
jle
lock
lahf
push
imul
lret
mov
ret
cltd
cmp
sbb
pop
adc
pushf
jnp
fdivrs
cmpsb
pop
scas
icebp
ljmp
movups
dec
imul
dec
pop
mov
stc
sub
cltd
mov
mov
push
in
jo
xchg
mov
mov
xor
inc
and
in
xchg
lret
dec
push
cltd
lcall
cli
ss
or
aam
pop
adc
scas
lods
mov
lret
test
enter
insb
pop
pop
cmc
adc
sbb
daa
or
ficoml
js
sub
mov
std
lret
pop
cmp
notl
imul
fists
ja
ja
sbb
les
or
lods
inc
loop
test
out
or
movb
mov
pop
pop
adc
xchg
add
lods
sahf
fstpl
cld
pop
mov
std
pop
rcrb
xchg
outsb
movsl
mov
mov
cmpsl
jg
push
mov
push
arpl
lcall
movsl
inc
jg
or
or
jg
jl
push
add
sti
and
loopne
mov
push
out
loopne
xor
fstps
jl
mov
cmovno
icebp
cmc
fs
aad
mov
divl
or
jo
mov
loope
pop
inc
mov
rorl
or
aas
test
and
idivl
mov
mov
loopne
pop
push
and
cltd
sub
je
add
push
xchg
mov
and
cmp
xchg
bound
mov
shl
nop
nop
les
jp
loop
dec
mov
lods
pop
test
xorl
loope
pusha
push
ret
je
jnp
popw
or
leave
jb
sub
mov
mov
xchg
mov
push
xchg
bound
bound
inc
inc
xchg
ud2
ret
jnp
adc
or
int3
adc
addr16
fsub
lds
negl
mov
popl
es
lods
sbb
inc
sub
sub
mov
and
xor
popf
jns
lret
pushf
cmc
pop
or
shll
push
xor
dec
push
inc
fwait
idivl
pushl
imul
sub
bound
adc
jno
sub
shr
stos
out
outsb
test
int
jle
mov
pop
sub
outsb
insb
inc
mov
inc
sbb
leave
shll
ret
sbb
mov
popa
sbb
mov
or
and
and
pop
inc
cmp
dec
lcall
mov
xchg
ficomps
cmpsb
aad
fwait
adc
jmp
mov
sbb
sbb
in
test
pop
aam
popa
mov
mov
dec
cmpsb
outsl
pop
pop
push
arpl
xor
jnp
pop
fidivrl
push
les
xlat
fidivrl
mov
idivb
inc
outsb
push
scas
mov
outsb
fsubr
pop
fsts
fcmovne
mov
jne
mov
cmp
and
arpl
and
cmp
pop
inc
pop
and
jae
cmp
imul
out
lds
lret
jge
scas
imul
mov
psrlq
sub
and
js
je
adc
mov
ljmp
sub
imul
cmp
imul
test
xchg
ret
jb
cmpsl
call
jnp
sbb
or
add
fwait
mov
clc
decb
push
sbb
fwait
sti
mov
imul
mov
ds
scas
jbe
or
or
ret
push
stc
mov
jns
add
cmpb
sahf
hlt
es
movsl
mov
int3
ljmp
mov
push
mov
je
add
fists
pop
cli
std
add
adc
and
pop
jmp
mov
inc
mov
add
cmp
inc
test
test
mov
xlat
cld
xchg
adcl
xchg
xchg
int
pop
out
iret
cli
mov
daa
pop
mov
mov
mov
push
push
loop
or
and
and
mov
sbb
ficomps
repnz
mov
iret
in
xor
xor
jl
iret
es
push
pusha
sub
or
sbb
mov
rolb
add
jge
push
and
into
insb
bound
sbb
stos
rolb
cli
lds
outsl
pop
mov
in
icebp
adc
popf
lret
xor
insl
jle
pushf
sub
jp
cmp
cmpsb
dec
add
mov
ja
sbb
popa
arpl
fsts
mov
movb
pusha
fimull
movsb
sarb
xchg
xor
push
lret
dec
adc
daa
push
jecxz
xchg
jae
xchg
push
pop
xlat
and
loopne
xchg
mov
mov
xchg
mov
xchg
dec
xor
pushf
jo
imul
cmp
fildl
xor
jg
xchg
jnp
sbb
add
loop
lods
inc
and
jp
sbb
test
ljmp
icebp
cmc
aad
or
cmp
in
sub
std
ss
insl
inc
push
addr16
push
add
imul
xorl
and
mov
arpl
and
loop
mov
sub
jbe
jnp
inc
mov
jmp
mov
push
or
mov
dec
mov
cmpsl
push
xor
mov
push
inc
hlt
in
push
sbb
test
fadds
sub
inc
dec
fcoml
mov
jae
cwtl
adc
pop
sub
scas
nop
fistps
jmp
jae
mov
pushf
xchg
ja
xchg
lea
adc
sahf
pop
adc
and
dec
stos
pop
cmp
lock
mov
inc
adc
pushf
dec
dec
mov
subb
stos
pushf
jo
nop
ficoms
xor
insl
pop
pushf
jge
xchg
sub
repz
add
repz
or
jmp
fiadds
cmp
test
stos
jne
or
push
jbe
sbb
jo
jae
mov
lcall
outsb
pop
jp
test
loope
dec
push
les
mov
push
ffree
out
sub
outsb
flds
and
pop
add
inc
xor
pop
cmp
dec
popa
jns
lods
dec
mov
and
pushf
push
cli
xor
or
rcr
fidivrl
and
stos
add
fs
pop
adc
mov
mov
daa
mov
sar
ljmp
mov
xchg
mov
add
adc
and
lret
pop
loopne
mov
lret
or
addr16
sti
outsl
or
leave
adcl
xchg
or
cmp
xchg
mov
xlat
add
pop
lea
fistpll
out
jbe
fdivl
divb
or
mov
fadds
ret
orl
rolb
or
inc
mov
mov
cli
sbb
scas
mov
mov
cmp
mov
adc
outsl
test
pop
dec
xlat
movzwl
fwait
and
loope
daa
cs
test
pusha
sub
sub
and
std
xchg
sub
jne
xchg
dec
xchg
lds
sub
mov
imul
mov
sub
pop
cmp
shrb
add
adc
sub
idivl
mov
cwtl
iret
rcrl
scas
into
movsb
pop
lahf
mov
cwtl
sbb
inc
test
jecxz
and
or
adc
inc
cwtl
xchg
cmovb
pop
mov
loopne
lcall
mov
in
xchg
fbstp
pop
and
js
inc
in
test
stos
std
ret
xor
jge
add
pop
shlb
lea
dec
mov
cmpsb
pop
insb
shll
cwtl
push
movsb
popa
scas
xor
xor
gs
mov
fcompl
push
and
inc
sahf
cld
jno
push
sub
cmp
push
adc
mov
ds
psraw
ret
mov
xor
xor
push
ss
scas
jno
bound
roll
jno
or
dec
or
cld
lret
dec
std
mov
ret
jae
hlt
out
adc
insb
icebp
pop
mov
add
xchg
and
jecxz
push
and
ss
cli
rdpmc
mov
push
pusha
stos
je
lret
dec
push
fdivr
mov
std
popa
or
movsl
in
lea
inc
mov
mov
lret
mov
mov
add
sub
insb
ficompl
mov
or
cld
cld
and
jbe
inc
dec
sbb
nop
out
int
jecxz
push
sbbl
jae
enter
mov
and
mov
out
pop
and
jp
cmp
lds
push
iret
ret
out
scas
cmp
stos
mov
push
jg
jb
adc
test
sub
add
push
insb
arpl
cltd
data16
stos
ljmp
push
mov
hlt
jns
jl
cltd
sbb
mov
xchg
fs
adc
stos
adc
cmp
mov
es
push
out
pop
out
dec
xchg
inc
inc
push
aam
shrb
inc
repnz
pusha
into
mov
repz
pop
xor
mov
pop
mov
mov
addb
loope
loopne
stc
mov
loopne
sarl
mov
sub
inc
arpl
and
call
cmp
lods
das
pop
adc
xchg
js,pt
sub
dec
sbb
mov
addl
test
xor
and
push
push
xlat
xlat
jo
push
dec
insb
call
arpl
mov
std
bound
pop
or
test
sub
dec
add
popa
int3
adc
jmp
fcomps
and
dec
sbb
or
pop
inc
sbb
daa
jns
leave
push
insl
jl
inc
and
fidivrl
mov
sub
adc
mov
sub
and
fistpl
filds
cmp
adcb
outsb
je
lret
jno
imul
call
xor
cmpsl
arpl
rolb
repnz
iret
sub
push
adc
sub
xlat
xchg
pop
push
mov
add
jae
aad
das
out
mov
cmpsl
inc
cwtl
mov
je
add
fucomi
mov
test
jge
adc
and
loopne
sub
xor
add
fidivl
push
outsl
mov
ret
or
fs
inc
mov
das
push
adc
aaa
gs
dec
nop
or
and
dec
je
popa
dec
ljmp
jp
fmul
xorl
push
cmp
or
xor
add
gs
lods
jbe
popf
mov
popl
sbb
out
xor
movsb
in
cli
lret
mov
stos
aas
andl
jne
mov
jp
jle
fsubl
js
jl
adc
sub
ja
int
pop
popa
and
jns
hlt
sbb
jnp
addr16
bound
rcll
icebp
or
call
imul
add
pop
cltd
pop
ret
jp
dec
push
dec
mov
add
arpl
push
mov
addb
xchg
mov
xchg
aaa
outsl
hlt
pop
dec
ljmp
ljmp
fsubrp
je
ss
daa
xchg
cmp
push
or
push
add
ret
inc
cmc
js
sub
sbb
out
sahf
movsb
mov
push
sahf
push
sbb
xchg
cmp
imul
movnti
or
setp
xor
dec
mov
jbe
sub
aas
imul
or
jg
loope
mov
jns
rcrl
dec
pop
pop
bound
fidivrs
les
ds
ljmp
repnz
inc
icebp
push
decl
imul
addb
mov
cs
lret
daa
sub
xchg
dec
test
and
jnp
push
cltd
push
push
jp
mov
cld
adc
pop
and
xor
pop
pop
movl
in
jg
daa
mov
clc
dec
push
orl
sub
rcrl
mov
mov
aas
pop
lock
xor
mov
jb
movsb
mov
fsubl
in
out
mov
negb
adc
in
xor
pop
sub
xor
jne
loope
adc
sbb
je
xchg
and
movsl
and
dec
in
sar
xchg
fadd
jb
sub
movsl
cmp
add
mov
mov
lcall
int3
dec
mov
in
dec
jmp
out
in
mov
loopne
aam
cs
jg
xchg
push
fcmovnbe
loopne
jo
adc
dec
fisubrl
fwait
xor
outsl
stc
push
shlb
and
jb
repnz
je
fisttps
ljmp
insl
and
xchg
pop
lds
push
test
flds
jne
cs
insb
or
xchg
mov
pop
dec
cmp
mov
cs
outsb
lahf
and
sub
lret
flds
mov
pop
and
xor
dec
inc
mov
inc
stc
ret
xchg
push
test
sub
imul
jo
cwtl
add
push
fadds
jle
decb
jb
popa
inc
lods
pop
pusha
in
push
cmp
decb
push
scas
int3
jno
xor
imulb
mov
test
cmp
call
mov
cmpsl
adcb
cmpsb
test
push
test
sahf
ret
xchg
aam
cmp
xor
jbe
cmp
and
aad
cli
inc
dec
cli
daa
jae
sbb
sahf
mov
ficoml
addr16
roll
pop
lds
mov
pop
movsl
fistps
jl
jbe
inc
or
jp
mov
and
das
lcall
cld
cmp
movsl
xchg
inc
dec
xor
sbb
ja
sbb
fcomip
in
fldcw
and
sub
and
xchg
push
inc
loopne
imul
mov
mov
call
fsub
push
daa
mov
xlat
and
adc
inc
mov
test
loope
adcl
test
leave
or
cmpl
js
std
mov
cmp
daa
mov
int3
xchg
xchg
dec
or
je
xchg
jle
push
mov
rcrl
push
cwtl
and
mov
push
pop
ret
cmpl
or
push
fdiv
xchg
cld
and
xor
adc
leave
jmp
mov
xlat
sub
ret
rcrl
cld
or
adc
add
and
add
dec
xchg
lods
sbbb
xor
add
sbb
jbe
push
sbb
mov
in
icebp
lcall
mov
mov
fwait
or
jmp
jns
inc
aaa
ret
inc
cli
cmpsb
mov
stos
in
enter
aas
shlb
mov
outsl
sbb
mov
bound
inc
test
push
jg
push
jns
xchg
sarb
ljmp
push
ds
loopne
jbe
adc
adc
pop
in
bound
mov
in
dec
mov
dec
cli
insl
ljmp
jmp
daa
push
or
jo
cmp
push
mov
lret
repnz
mov
fcomip
cwtl
aaa
stos
adc
and
add
adc
dec
pusha
loopne
clc
sbb
cmp
sbb
js
push
sbb
cmpsl
lods
cmpsl
adc
pop
jne
scas
inc
mov
and
sbb
push
fisubl
mov
pop
in
xchg
mov
adc
dec
movsb
enter
push
imul
xor
adc
sub
stc
sahf
insb
and
pushf
inc
lret
add
mov
bound
inc
mov
or
fisubrs
add
jg
add
jnp
adc
xlat
ds
movsl
insb
loop
lods
xchg
fs
and
loope
stos
push
dec
clc
dec
push
popf
shl
adc
sbb
xchg
insl
xor
dec
dec
push
xchg
test
pusha
int3
data16
test
lea
divl
stos
imul
mov
mov
mov
pop
scas
sbb
shlb
cli
iret
repnz
mov
cwtl
jecxz
bound
rorl
dec
jp
loop
mov
and
outsl
jg
and
fiadds
cmc
xchg
push
mov
movsl
jae
fimull
adc
cmpsl
sbb
pusha
and
lds
and
mov
pop
pop
dec
dec
mov
in
ja
cmp
and
mul
add
lret
pop
or
mov
out
push
mov
cltd
ret
push
jb
dec
dec
testb
sbb
sub
add
stc
je
mov
add
add
xchg
test
xchg
repnz
test
mov
sahf
fmulp
push
dec
daa
je
mov
aas
imul
test
jb
mov
aam
pushw
sub
mov
jnp
test
xor
mov
iret
mov
sbbb
dec
mov
mov
push
adc
push
fwait
lret
cli
sbb
es
cmp
jmp
movsl
insl
addr16
xorl
xor
jp
inc
or
sbb
add
adc
out
int3
mov
loopne
jb
repnz
mov
mov
jbe
mov
dec
mov
shrl
sahf
loopne,pt
mov
lcall
push
ret
adc
aad
sub
arpl
push
or
arpl
hlt
loop
cltd
nop
xchg
jb
mov
and
add
push
fsubrs
jge
push
xchg
and
call
dec
xorb
mov
cmp
popl
sub
nop
jmp
ret
xor
addr16
test
or
push
dec
sbb
mov
loopne
inc
lcall
add
push
mov
cmpsb
pop
adc
fstpt
outsl
sahf
fs
aaa
mov
insb
cmp
mov
dec
pop
out
jbe
sbb
out
xchg
pushf
cmp
dec
push
shrl
sub
rsqrtps
fwait
pop
imul
enter
aas
pop
cwtl
jp
fadd
repz
and
cmc
stos
addr16
std
jno
inc
nop
incb
fs
into
orb
cs
push
cs
loopne
mov
lods
out
push
ret
lcall
rorb
mov
outsb
mov
xlat
imul
dec
pop
sbb
pushf
inc
pop
cmp
add
sbb
sub
rol
loope
xchg
imul
mov
cs
lods
into
mov
push
stos
mov
mov
mov
fwait
dec
ljmp
xorl
inc
sub
mulb
push
pop
jp
and
jae
fisubl
pop
shll
lods
mov
cmp
and
in
dec
outsl
add
in
fnstcw
scas
ljmp
subb
lret
les
push
pop
pop
cmp
inc
push
adc
cs
sahf
jl
scas
cmc
or
out
test
cmc
test
loope
xchg
jae
test
popa
psrld
jnp
or
mov
hlt
pop
aas
xchg
or
or
scas
push
jg
cmp
pop
insb
lcall
jne
push
mov
mov
int3
iret
repz
sbb
fnstcw
jne
scas
pop
divl
mov
mov
push
sbbb
or
movsl
pop
mov
or
cld
jae
cmpsb
ljmp
or
and
mov
mov
or
in
adc
push
addb
xchg
sub
or
testl
push
mov
scas
aad
adc
pusha
pop
mov
test
aad
lcall
pusha
shll
or
into
xchg
sub
nop
stos
insl
test
fsubl
mov
movsb
fistps
pop
mov
push
mov
pop
jno
arpl
nop
jecxz
or
test
and
fiadds
mov
push
arpl
sbb
stos
das
xchg
and
cmp
push
out
dec
cmp
scas
jmp
mov
loope
adc
sbb
sbb
dec
push
jp
xor
scas
or
mov
adc
fcomp
sub
and
aad
push
es
jno
jbe
fnstsw
loopne
mov
add
inc
push
das
mov
scas
fwait
pop
add
jae
fisttpl
sub
cld
movsb
fwait
adc
lret
adc
imul
and
or
pop
cld
fistpll
adc
out
xor
jl
pop
adc
cwtl
stos
jns
movb
pop
jecxz
pop
and
in
jns
inc
and
jnp
dec
xor
jbe
jbe
ficompl
or
adc
xchg
and
jnp
xchg
shr
rol
addl
inc
loopne
idiv
jne
out
call
mov
jno
pop
pop
jbe
je
std
jmp
into
pop
cmp
pushf
xor
sbb
sahf
sub
jb
mov
push
xchg
jnp
mov
jl
dec
pop
stc
or
cmp
aaa
into
into
data16
and
adc
call
mov
fldl
ljmp
push
out
push
sub
iret
or
sbb
cmp
push
jle
adc
data16
mov
mov
xor
sub
adc
sbb
inc
jne
inc
sahf
mov
pop
in
clc
adc
out
push
cld
jecxz
ja
addb
sti
inc
ret
in
daa
push
dec
push
fdivs
out
cs
pusha
bound
mov
dec
cmp
sti
mov
rcll
jno
aas
ja
ja
sub
cmc
sbb
or
xor
lock
sub
aad
mov
outsb
scas
mov
cld
sti
push
nop
or
dec
or
and
push
fwait
cmc
push
test
aas
scas
in
adc
rorb
sbb
sbb
sub
insb
sarl
in
push
gs
fadds
scas
aam
push
daa
sub
mov
jnp
ja
aad
pop
and
lcall
dec
adc
xlat
mov
pop
adc
inc
in
dec
outsl
pop
jmp
fs
pop
nop
push
xor
and
cmp
add
and
pop
es
das
ja
mov
movsb
movsb
in
aam
subl
mov
xchg
cld
rclb
dec
daa
ret
out
sub
dec
mov
and
in
mov
fnsave
popl
lcall
or
daa
sub
and
pusha
pop
and
lods
into
mov
dec
push
pushf
imul
fnstenv
jb
sub
dec
scas
adc
fildll
push
sub
pushf
and
les
scas
xchg
andb
enter
pop
lds
add
ss
rorl
pushf
aad
push
fidivs
sbbb
mov
or
andl
aaa
sbb
add
xor
lea
pushw
cli
shlb
cmp
lods
and
icebp
pop
in
cmp
xchg
mov
sbb
sbb
loop
loope
rorb
cmp
or
mov
in
int3
and
scas
add
and
imul
or
pop
in
gs
cmp
inc
xchg
shlb
movsb
repnz
mov
and
rcrl
push
movsb
ljmp
jle
imulb
bound
adc
sub
cmp
adc
gs
mov
and
xchg
sti
cli
cli
mov
pop
jg
cmp
pop
mov
cmp
mov
fstp
adc
shlb
ss
subl
pop
sbb
inc
mov
push
out
mov
out
push
std
out
jno
dec
fwait
int
fidivrs
ja
jecxz
icebp
jno
inc
sbb
loopne
sbb
inc
dec
scas
xchg
xchg
cmp
orl
addr16
scas
and
mov
dec
cs
inc
mov
outsl
push
pop
sti
pop
sub
cmp
or
jnp
jae
or
out
out
push
mov
adc
pop
ds
or
push
and
stos
jnp
daa
xchg
mov
and
dec
repz
or
out
jae
add
movsb
push
push
sbb
ds
pop
jmp
repnz
shll
sub
pop
cmp
adc
lods
adc
cltd
mov
push
mov
cld
pushf
jecxz
rolb
add
pop
xchg
add
sub
xchg
scas
mov
jnp
outsl
mov
adc
fistps
xor
sub
lahf
mov
jb
xor
shll
adc
lods
jg
movsl
call
aad
cmpsb
sbbb
sti
scas
sbb
lock
xchg
or
sti
or
pop
mov
jno
lods
insb
cwtl
mov
pusha
out
push
and
ss
jb
push
sub
adc
jbe
pushf
popa
adc
stos
sarl
cmp
movsl
fsts
cmp
stos
sahf
in
int3
adc
and
xlat
pop
add
add
mov
mov
and
pop
adc
and
and
push
fcmovne
mov
imul
mov
jge
inc
test
cmp
jl
mov
ja
pushw
add
xchg
pop
fisttpll
daa
lods
xorl
xchg
jge
jecxz
mov
jnp
jmp
test
shll
outsl
jle
cmp
scas
sbb
pop
adc
mov
pop
mov
or
mov
inc
xor
mov
pushf
mov
in
xor
push
xchg
add
pop
test
repnz
mov
cld
push
or
mov
cmp
bnd
pop
and
sub
inc
adc
and
mov
and
push
clc
mov
in
jmp
sbb
push
sbb
pusha
cmpl
dec
rolb
stos
mov
xchg
pop
pusha
sbb
ret
push
inc
cmpsb
add
push
pop
or
mov
imul
jmp
test
xchg
sarl
mov
icebp
out
jl
cmp
aad
lcall
pop
fidivl
bound
push
push
add
inc
fsub
andl
mov
jle
test
cmp
aas
cmpsb
xchg
roll
sbb
movsb
es
fcomps
cmp
das
mov
negl
pop
cmp
adc
out
push
mov
xchg
mov
fcoms
aam
lock
push
leave
dec
xchg
pop
jge
jnp,pt
ds
test
ds
cmp
test
mov
out
mov
fs
insb
xor
inc
sti
push
pop
mov
repnz
jmp
pushf
push
sbb
add
and
xchg
mov
xchg
dec
rclb
add
sub
test
not
fcoms
inc
dec
jl
adc
add
leave
addl
or
loop
andb
add
lahf
xor
cmp
pop
or
add
out
jecxz
xor
aaa
adc
mov
pop
inc
das
sbb
adc
or
fisubrs
rolb
sub
xor
mov
fstl
cmpsb
test
loopne
jns
add
enter
adc
cmpsl
hlt
lock
xor
sbb
jne
mull
data16
lea
fdivrl
movl
dec
shll
mov
jbe
inc
lea
mov
adc
push
cmc
mov
enter
add
data16
mov
in
movsb
divl
adcl
jp
icebp
lods
inc
jmp
and
icebp
push
xor
mov
jle
sub
and
stos
jmp
mov
xchg
xchg
jle
aad
mov
inc
enter
push
jno
outsb
jg
insb
dec
into
mov
mov
fistps
lret
jo
and
jae
dec
or
rcrb
mov
inc
sub
push
repz
test
xchg
inc
clc
test
mov
push
dec
push
stc
mov
fisttpll
fs
lahf
sbb
mulb
mov
or
imul
push
pop
in
and
mov
mov
outsl
adcl
mov
mov
jl
aam
and
outsb
or
pushf
ja
sub
fcompl
gs
and
jmp
shrl
or
jp
add
mov
xor
adc
fisttps
push
xor
call
inc
pushl
or
arpl
mov
rcll
test
enter
test
mov
mov
push
fsin
xchg
insb
sahf
sub
cs
and
push
or
repnz
mov
adc
push
clc
sarb
mov
inc
and
out
inc
xor
xchg
or
das
or
inc
fidivs
jmp
enter
xlat
cmp
lahf
pushf
sub
hlt
dec
enter
int
sbb
push
xor
loopne
sbb
out
mov
xor
pop
mov
inc
sbb
dec
jmp
add
stos
icebp
or
inc
push
add
lcall
pop
ret
bnd
mov
pop
outsb
mov
lds
shl
push
sbb
js
test
jp
movsb
sti
outsl
movsl
jge
xchg
popf
dec
fucomi
mov
xor
mov
or
fs
pop
test
std
cmp
xor
les
cmpsb
jb
push
cmpsl
ret
xchg
in
mov
mov
inc
add
pop
test
insl
repz
cmp
rcl
or
enter
and
lock
loopne
stos
xchg
cmp
push
leavew
mov
in
les
xchg
vmwrite
xchg
insl
inc
movsl
xor
daa
xor
into
idivl
xchg
aas
or
leave
imul
add
fcomip
fdivrl
pop
inc
dec
test
out
jbe
inc
int
and
sahf
cmpsl
mov
pop
inc
dec
and
fistps
mov
jbe
je
lahf
lret
add
into
aas
das
xchg
pop
jle
mov
mov
xlat
mov
loope
sub
pop
or
test
jg
push
ret
int
jge
negb
mov
xchg
jg
adc
cwtl
sarl
lcall
addr16
adcb
jno
push
rolb
sti
sbb
fcomi
scas
rorl
adc
ficomps
mov
rolb
dec
push
inc
sbb
push
xchg
mov
cmc
data16
incb
les
sub
jp
iret
mov
sbb
mov
inc
and
push
incl
sbb
gs
fisttpl
insb
inc
rcrl
adc
mov
adc
mov
icebp
mov
ret
aam
lret
xchg
cld
in
andl
test
push
bnd
adc
shll
scas
fs
sarl
add
jo
aad
insb
cli
add
call
add
jmp
test
movsl
loop
lock
rcl
out
testb
lea
push
popf
scas
or
push
sarb
ljmp
in
push
mov
icebp
add
sbb
xchg
jmp
sahf
inc
jmp
jns
mov
fildl
mov
repz
push
mov
mov
dec
mov
imul
das
add
sub
dec
cs
jg
and
test
mov
call
dec
mov
cmp
decl
mov
loope
lods
pop
repz
push
or
mov
iret
stos
fistps
push
push
call
fimull
cs
cmp
mov
loop
jl
and
and
movsb
push
fistps
sbb
xor
iret
icebp
scas
test
addr16
out
dec
dec
xor
or
ret
or
add
push
cwtl
pop
ljmp
loope
and
inc
xor
or
mov
mov
or
sub
cmpsl
ja
push
sub
xchg
and
fwait
arpl
sub
mov
jo
pushf
mov
xor
xchg
mov
call
aam
mov
cmp
repz
out
xor
loopne
pop
push
in
int
mov
inc
stos
popa
insl
das
bound
jnp
adcl
sti
nop
test
enter
mov
xor
imul
dec
arpl
jb
lret
push
jecxz
icebp
jbe
outsl
pop
sbb
lret
lods
out
push
rclb
lods
in
add
pop
sbb
cmpsl
outsb
stos
in
mov
cltd
out
inc
inc
int
roll
mov
adc
dec
loopne
mov
pop
mov
jp
xchg
aas
data16
sahf
mov
popf
or
mov
repnz
push
mov
ja
and
je
mov
ret
cli
push
repnz
add
xchg
loop
xchg
insb
data16
ss
add
push
xor
lds
mov
fs
cmp
xchg
cmp
xchg
in
xor
mov
cmp
sub
push
stos
sub
mov
mov
iret
and
mov
push
dec
je
mov
jmp
lcall
dec
sub
imul
pusha
rorl
jp
ja
cmp
je
jl
pop
adc
stos
push
cmp
gs
sbb
sahf
fisttpl
push
mov
add
neg
cmp
nop
mov
pop
iret
pop
xor
sbb
subl
jne
lret
out
xor
xchg
sbb
daa
les
ljmp
test
xchg
aaa
and
fadd
js
dec
loop
das
sub
xchg
add
sbb
clc
adc
push
mov
outsl
sahf
cld
push
dec
dec
cmp
dec
push
not
lods
fs
mov
dec
jmp
mov
push
ret
iret
dec
flds
jl
pushf
clc
cwtl
pop
in
sub
cmp
lret
cmp
pusha
mov
dec
xchg
add
sbb
dec
xchg
lods
xor
pop
jg
std
mov
and
add
adc
loopne
mov
imul
mov
rorl
sub
pop
out
sbb
push
scas
ret
xor
inc
mov
push
imul
addl
push
pop
add
clc
int3
outsl
rorl
mov
shlb
outsb
adc
loop
cwtl
xor
gs
inc
loop
or
mov
aam
lret
jmp
jb
in
mov
out
cmpsl
cmp
mov
dec
loopne
push
sub
push
jo
out
sbb
jae
lods
movsl
dec
bound
outsl
mov
add
push
xchg
movsl
pop
xorl
fwait
ror
xor
ljmp
insl
test
mov
and
inc
jmp
mov
repz
jecxz
pushf
inc
sbb
into
push
and
mov
fldcw
test
push
lock
sbb
fxtract
loop
imul
push
sbb
or
pusha
shlb
lock
in
imul
adc
cmpsb
and
negl
jns
mov
shll
mov
leave
push
add
and
rcrb
mov
mov
mov
mov
fsubrs
stos
int3
pop
pop
fldt
das
push
sub
jno
cltd
mov
jecxz
push
pusha
adc
popf
xchg
pop
push
pop
add
pop
adc
out
push
out
and
call
push
test
enter
jecxz
ds
adc
push
xlat
or
pop
sbb
fisubrs
sbb
and
adc
dec
nop
pop
cli
or
inc
adc
pop
dec
cs
jl
aaa
loopne
push
or
pop
mov
stos
insb
mov
xchg
lret
sarl
push
xor
inc
insb
je
outsl
addr16
sahf
dec
fstps
mov
in
loopne
jae
filds
ss
fisubrs
sub
iret
sbb
sub
or
ret
xchg
movsl
xor
mov
sbb
dec
fcompl
adcb
or
jnp
push
xor
test
mov
mov
daa
imul
stos
push
cmp
jmp
insl
repz
mov
popa
movb
testb
lret
sbb
clc
inc
popf
movsl
mov
arpl
and
repnz
sbb
orl
arpl
out
pop
nop
inc
outsl
movsl
bound
mov
xchg
cmc
cmp
sub
cmp
sbb
and
cltd
stos
mov
in
movsb
xchg
jo
gs
inc
jnp
aaa
inc
in
shrb
mov
psrlq
cmp
lods
xor
xchg
cltd
gs
sbb
sub
popa
xchg
sub
sbb
push
add
loopne
imul
inc
gs
pop
pushf
pop
jbe
dec
into
std
popf
jns
mov
leave
into
mov
push
sub
iret
push
inc
jno
jno
lods
nop
push
cmp
push
mov
iret
dec
out
pushf
mov
lods
movsl
lahf
cld
ljmp
outsb
imul
out
fabs
lea
cmp
scas
sarb
mov
xor
pop
inc
sbbl
xchg
cli
imul
xchg
lahf
sbb
mov
or
stc
add
clc
cmp
and
incb
mov
pushf
gs
pop
adc
daa
jns
pop
fucomi
incb
pop
mov
cmp
popf
dec
fdivrl
fldl
sarl
sarb
pop
pop
icebp
stc
pop
clc
xor
push
movsb
pop
xlat
dec
loopw
stc
or
fmuls
adc
mov
adc
and
jp
xor
repnz
cltd
icebp
pop
stos
xchg
les
imul
mov
je
cwtl
dec
sub
repnz
cmp
cld
push
pop
adc
out
inc
lcall
sub
mov
mov
inc
fcoml
negl
out
mov
lret
in
jp
inc
xlat
subb
loope
mov
lods
pop
mov
lds
mov
leave
or
pop
mov
fists
outsb
lock
mov
add
popa
aaa
loopne
int3
data16
mov
out
gs
data16
xchg
mov
and
testl
push
jmp
xchg
insb
fisttps
sahf
inc
mov
fwait
ds
push
pop
movsb
movb
adc
xlat
xlat
loopne
fldcw
push
std
xor
sub
lcall
mov
bound
arpl
leave
dec
cmp
push
inc
pop
mov
es
iret
add
mov
push
mov
cmpsl
mov
mov
jae
jl
jns
jg
pop
pop
lea
imulb
push
fidivrs
sbb
add
ficomps
adcb
cmc
adc
lea
mov
stc
adcb
jp
push
inc
push
mov
sbb
hlt
mov
and
mov
xor
dec
mov
xlat
inc
test
aaa
ficompl
sbbb
mov
pop
inc
xchg
xchg
dec
mov
push
sbb
jno
inc
push
das
enter
and
sbb
popa
mov
popa
fwait
fwait
lea
and
imul
test
iret
push
cmp
stos
fsubl
lods
and
inc
addr16
mov
inc
and
and
xor
sbb
jne
jbe
cmp
in
shr
or
dec
mov
xchg
jb
je
cmp
sbb
or
out
in
insb
hlt
loope
divb
add
push
xchg
shll
push
add
adc
ror
jp
in
into
or
mov
push
jo
xor
jnp
adc
inc
push
sub
imul
cmp
or
in
adc
inc
aaa
cwtl
sar
stc
add
imul
cwtl
add
sbb
adc
in
add
and
imul
push
hlt
incb
stc
jmp
lock
lods
lods
stos
xor
cmp
mov
subb
mov
dec
sbb
xchg
dec
add
cmpsl
lret
bnd
lahf
test
pop
push
mov
cmp
pop
pop
call
push
or
cmp
xchg
xchg
xchg
jp
es
and
cs
or
or
cltd
push
xlat
add
cmp
into
dec
insl
or
fwait
xor
cltd
pop
jecxz
psadbw
jmp
or
jno
arpl
hlt
dec
cmp
and
movsb
lret
sub
xchg
and
imul
pushf
cwtl
sub
ficoml
jae
jge
push
repz
jnp
je
test
mov
test
sahf
cmp
lcall
mov
cli
or
mov
ja
sub
das
cmp
and
xchg
repnz
daa
repz
sbb
inc
imul
adc
mov
leave
je
ret
ja
lods
mov
sbb
sbb
mov
cwtl
hlt
cmp
cmp
add
fnstcw
dec
rclb
ljmp
xchg
xor
xchg
push
xchg
lret
shll
xchg
ljmp
add
mov
dec
fimuls
popf
pop
sbb
mov
jge,pn
jge
xor
lret
mov
dec
loopne
xor
xlat
pop
rclb
adc
rcrl
push
sbb
scas
je
addr16
fwait
add
xor
sub
cmpb
mov
out
pop
sub
cmpsb
inc
pop
jnp
aad
sbb
lret
fdiv
outsl
orb
xchg
add
push
push
sub
cli
hlt
add
mov
scas
mov
fadds
ret
jp
jp
adc
and
inc
mov
mov
aam
jnp
sbb
adc
sub
inc
mov
lods
jp
sbb
es
pop
xchg
daa
add
ss
and
out
or
pop
movsb
adc
in
lods
or
mov
nop
inc
arpl
cltd
xor
mov
xchg
pop
outsb
call
popa
sub
nop
in
les
or
dec
es
movsb
sub
lock
cwtl
iret
push
sbb
adc
loop
fbld
test
pop
xor
cmp
adc
pop
aaa
mov
jl
int
fwait
inc
inc
mov
ds
hlt
aaa
pop
mov
das
and
pop
lahf
mov
out
bound
sub
pop
mov
mov
aam
cwtl
and
xchg
rcr
imul
sahf
jns
jno
incb
enter
jae
out
mov
loope
add
xchg
in
int
iret
clc
sub
repz
aaa
push
lods
sub
insb
and
mov
je
loop
ret
shrl
mov
mov
into
xchg
sahf
mov
push
stc
jno
pop
mov
fdivs
jbe
dec
sbb
fwait
bound
push
inc
push
inc
into
jo
out
rep
movsl
shlb
pop
std
adc
aas
and
lock
iret
jmp
test
push
jmp
push
xchg
aam
mov
in
add
pop
cmc
fstl
mov
mov
xlat
call
fdivrp
jp
fcoml
dec
xor
mov
pop
shlb
mov
push
pop
adc
out
mov
fmuls
cmp
aaa
xlat
call
push
mov
and
fsubrs
jnp
cmp
mov
das
mov
js
cwtl
jg
adc
jle
scas
sub
sub
xor
popf
leave
repz
hlt
add
mov
clc
shlb
jp
jo
leave
es
dec
or
ljmp
lcall
cmc
cmp
clc
cli
out
inc
inc
adc
cmpl
rcll
mov
cmp
push
cmc
enter
mov
clc
jmp
xchg
jns
lret
lods
out
jbe
enter
notl
jge
dec
into
aam
test
push
and
jb
addr16
mov
pop
hlt
divb
cs
fwait
mov
in
imul
int3
rolb
jno
mov
and
adc
or
incl
mov
sub
shrb
ret
jae
sub
push
test
lock
je
jo
cwtl
repz
out
mov
int3
insb
add
je
or
ret
das
dec
lcall
sub
jb
sbb
mov
mov
push
outsb
or
inc
ficomps
inc
jno
sbb
repz
mov
sub
pushf
sbbb
ficoms
mov
rcrb
and
fwait
mov
or
jae
popf
aam
xchg
cmp
cmpsb
nop
dec
stos
fwait
dec
loopne
dec
pop
mov
push
mov
popa
test
inc
test
nop
mov
pop
adc
cmp
inc
repnz
mov
fldt
dec
jb
inc
push
stos
adc
pop
mov
leave
xchg
lds
cli
jmp
sub
outsl
rcl
xlat
ret
jb
shrb
rcrb
movsb
dec
aaa
jle
in
cmp
add
cld
andb
das
sub
aad
sarb
sti
bound
popa
push
cld
dec
jmp
mov
and
inc
imul
mov
mov
mov
iret
jg
mov
orb
jns
and
sub
xor
add
shlb
mov
xor
dec
mov
out
fidivrl
cmp
xchg
repnz
adc
into
dec
call
adc
push
fs
dec
fdivl
push
imul
adc
lods
xor
mov
inc
test
in
test
pop
fsubl
imul
loop
fs
dec
sbb
addb
test
sub
push
mov
mov
mov
or
sbb
dec
leave
rorb
fwait
dec
shll
lods
int3
xchg
cmp
stos
insb
test
mov
addb
lret
call
ret
pop
add
pop
mov
sbb
sub
sbb
notb
jbe
lcall
in
lds
mov
dec
jp
int
rclb
fcomp
add
mov
call
adc
push
push
cmp
pop
mov
int3
mov
in
mov
and
daa
and
je
pop
sub
out
lods
jne
es
xchg
xchg
aas
sbb
outsl
jnp
mov
xor
lahf
jge
fimull
outsl
das
pop
xchg
pushf
push
stc
lock
stos
out
fstps
ss
shl
xchg
xor
sbb
dec
les
out
shrb
cmp
mov
inc
or
test
jecxz
pop
xchg
or
cmp
scas
movsl
inc
clc
mov
das
cmpsl
xchg
popl
jge
sub
es
jp
lock
test
shlb
mov
cmc
movsl
mov
pop
lcall
cmp
fiaddl
jne
aad
inc
leavew
dec
pop
icebp
pop
add
jl
push
roll
lock
xchg
in
dec
das
sarl
shl
cmp
mov
mov
lcall
and
sbb
mov
aaa
daa
inc
les
dec
pop
or
jge
mov
mov
mov
xchg
and
lcall
mov
and
push
or
xchg
add
add
loope
sar
cmpsb
sti
loope
shl
cmp
into
jno
xor
pcmpeqb
or
sahf
mov
test
icebp
sahf
jge
or
fmull
pusha
int
xrstors
inc
in
std
mov
mov
mov
xor
scas
cmp
push
fisttpll
scas
xor
cmp
test
and
lcall
insb
aaa
dec
cmp
cs
mov
push
scas
lea
pop
xor
mov
dec
test
das
push
jb
aas
iret
or
mov
xchg
fbstp
test
in
ret
push
lods
dec
mov
dec
cmp
cld
popf
popa
ljmp
sub
or
ret
cmp
hlt
pop
xchg
dec
adc
out
sub
dec
add
std
je
xor
mov
push
sahf
xor
das
push
cmpsl
into
filds
in
cmc
rolb
imul
cld
imul
lea
in
sarb
jbe
sbbl
testl
cwtl
ds
cmp
mov
jbe
jne
das
jecxz
hlt
out
mov
xor
jg
dec
inc
mov
daa
test
das
loop
or
cmp
sbb
lods
pusha
psrld
movsl
roll
in
jp
dec
mov
subb
pop
push
sub
push
in
dec
mov
imul
mov
and
sti
adc
and
push
sbb
fidivs
cmpsl
mov
je
aam
adc
mov
test
dec
mov
outsl
gs
push
flds
inc
mov
divl
aas
lret
cmp
mov
insl
push
fmuls
dec
mov
fsubl
mov
or
dec
jg
out
cmp
jl
mov
mov
xchg
leave
fisubs
jl
sahf
les
mov
and
std
sub
sub
xor
orb
pop
xchg
xchg
std
lret
out
push
mov
ja
imul
sahf
mov
shr
jecxz
inc
push
and
mov
mov
xor
add
inc
test
cmp
xchg
mov
xor
rcl
insb
test
mov
xor
cmpsb
push
cli
addr16
and
nop
adc
jb
mov
jl
popa
jp
inc
inc
cld
test
rcl
ds
jo
sti
sbb
sub
mov
mov
push
mov
xchg
adc
cmp
mov
add
aaa
mov
fisubl
shl
mov
add
or
cltd
lock
pcmpeqd
fidivs
fwait
imul
outsl
jnp
es
cwtl
jg
adc
mov
lret
sbb
lock
insb
std
mov
arpl
leave
cwtl
xchg
jbe
fmull
sbb
xchg
adc
cmp
lods
xor
scas
pop
mov
push
add
push
push
outsb
mov
lods
push
mov
pop
xor
test
add
cs
es
call
outsb
lcall
es
cmp
decl
fcomi
xchg
sahf
sti
mov
xor
fcomps
mov
into
jp
imul
les
mov
mov
pop
dec
push
je
jae
lcall
pop
dec
or
in
cmp
in
popa
lahf
les
repz
pusha
and
adc
into
lods
xor
inc
cmp
mov
aaa
movsb
lods
loopne
out
cmp
jns
jg
sbb
or
push
lret
jo
jl
dec
fisttps
push
adc
sub
ret
mov
push
mov
daa
int
inc
outsl
mov
mov
mov
push
push
jno
sbb
mov
pop
fldt
inc
xor
dec
mov
repnz
pop
jg
push
sbb
xor
mov
sbb
call
mov
add
cmp
cld
pop
xchg
roll
sub
mov
push
add
mov
xchg
mov
mov
push
add
pop
dec
or
jns
out
push
push
rorb
xor
jmp
popa
cmpsb
adc
push
stos
rdmsr
fs
jb
out
hlt
nop
into
rcl
movsb
and
xor
adc
cmp
test
jae
inc
popa
cmp
aam
out
sbb
jmp
in
sbbb
jp
xor
outsb
pusha
cld
ret
jge
push
shlb
daa
push
and
outsl
cmc
adc
scas
cmp
pop
test
dec
xchg
outsb
dec
test
into
icebp
and
pop
lods
push
push
fstpt
iret
xchg
and
cmp
cmp
clc
pop
scas
das
scas
fidivrs
push
dec
inc
and
fbld
mov
ret
dec
xchg
imulb
pusha
mov
adc
cmp
xor
sub
sbb
mov
bound
notb
cltd
xchg
inc
negb
cli
pop
fidivrl
int3
add
leave
push
jnp
or
push
jns
stc
lds
push
lea
pop
xor
lock
pop
push
mov
sti
jmp
dec
push
into
xchg
jecxz
jmp
cmp
je
add
jno
sarb
fsubp
insl
xor
xchg
mov
inc
out
xchg
sbb
add
cmp
pop
and
je
stc
jae
or
sbb
jge
leave
movsb
hlt
mov
push
sbb
ret
loopne
pop
fs
andl
or
ja
leave
cld
xlat
fwait
xchg
jg
repz
outsl
sub
aam
mov
mulb
cmp
push
js
shll
int
adc
push
inc
and
sub
stos
cmp
loope
fnstcw
xor
adc
mov
sahf
ja
ror
push
xor
cmp
adc
xlat
iret
ds
in
es
sbb
ss
mov
fdivrl
lds
cli
xor
aam
inc
adc
push
or
in
mov
or
idivl
es
dec
inc
enter
movsl
bound
addr16
arpl
jl
xor
faddl
arpl
out
xor
rol
xor
pop
outsb
jo
stc
cmp
lret
aas
sbb
cli
and
test
ds
mov
cmpsb
inc
mov
or
imulb
inc
add
push
and
test
sub
lods
idivl
out
mov
out
lret
jbe
sub
jmp
test
inc
leave
bound
lcall
mov
aad
sahf
fwait
and
data16
sub
gs
dec
dec
cs
push
sub
gs
mov
dec
xchg
sub
imul
jns
out
daa
dec
inc
xor
sbb
pushf
rcrl
int3
inc
mov
das
dec
call
pop
lock
pop
inc
test
jns
pop
jg
pop
bound
rcll
xchg
add
mov
mov
and
pop
push
push
push
inc
adc
test
addr16
and
push
loop
ljmp
insl
cmp
into
int
dec
pop
lods
and
stos
or
add
xchg
inc
icebp
ja
mov
int
out
test
mov
add
lea
fildll
dec
dec
rorb
outsl
sbb
lods
in
jp
cmpsl
fisubrl
push
xchg
xchg
jmp
sub
aaa
movsl
cltd
jecxz
pop
je
jmp
push
and
jns
mov
dec
sbb
das
sub
mov
js
ficoms
cltd
cmp
mov
or
in
mov
lret
mov
daa
mov
or
inc
outsb
jns
int
sbb
jle
jo
dec
ja
sti
xor
xor
mov
scas
les
fucomi
or
or
ds
pushf
mov
dec
iret
jb
inc
xchg
mov
lock
rcrl
and
cld
dec
mov
mov
lods
adc
dec
lret
cmp
mov
stc
jmp
mov
jns
aaa
sub
mov
sbb
inc
sbb
mov
sarl
lods
inc
lods
sub
stos
xor
cmp
test
xchg
or
fnstenv
add
pushf
dec
lods
inc
mov
dec
es
mov
xchg
push
out
pop
mov
or
xchg
into
popf
out
mov
xchg
dec
lds
pusha
adc
dec
cmp
sbb
call
mov
ficoml
stos
cmc
sbbb
pop
xor
ret
push
aam
add
xchg
pop
adc
scas
imul
mov
mov
lcall
cmp
mov
sub
nop
sub
mov
xchg
fimull
mov
dec
sbb
inc
and
in
sahf
jns
xorb
add
or
in
and
popa
xor
jo
xlat
mov
mov
insb
push
les
aad
loop
fiadds
fisubrs
daa
cmpsb
loope
call
dec
jge
dec
mov
outsl
cmp
insw
adc
popf
ljmp
mov
cmpl
aaa
imul
xchg
xchg
pop
push
int3
mov
xlat
mov
aad
sbb
inc
popf
sbbl
mov
lret
sbb
xchg
or
rcll
inc
inc
sub
mov
daa
xchg
add
and
inc
jne
jl
outsl
aaa
lret
inc
jnp
fcomp
jge
jmp
push
fldl
jns
movsb
cld
fnstcw
stos
les
ret
mov
popf
cltd
jbe
dec
inc
cld
sbb
xor
sub
mov
jns
sti
cmp
dec
sub
jnp
sbbb
dec
aam
adc
add
arpl
frstor
add
insb
int3
xor
adc
dec
jne
loope
add
mov
xor
mov
mov
out
jb
jo
mov
scas
push
fldcw
xchg
jge
cmp
push
popl
or
push
das
incl
push
in
pop
mov
jnp
sarb
jbe
and
pusha
fwait
push
lret
sbb
out
mov
loop
je
aad
lret
adc
inc
shrb
jb
pusha
cmp
jb
inc
loop
xchg
mov
leave
mov
loop
call
pop
daa
popa
or
xor
push
das
inc
xchg
and
cmpsb
push
sti
into
pop
ret
pop
mov
sbb
jno
loopne
rcl
mov
les
mov
outsb
add
adc
xor
mov
dec
insb
cs
xchg
mov
xor
enter
sub
xchg
inc
and
loopne
dec
bound
inc
sub
popf
sti
dec
mov
cwtl
out
sub
jbe
fsubs
jmp
sub
leave
lret
ljmp
cwtl
cld
lods
sahf
or
test
in
lods
mov
jmp
paddsb
sub
pop
mov
cmp
imul
ds
sub
push
sti
sbbl
inc
insl
xchg
nop
xchg
cmpsl
adc
push
mov
pop
loop
movsl
sbb
cld
mov
inc
xchg
adc
movsl
jecxz
pop
hlt
dec
jmp
sub
xlat
enter
inc
icebp
add
bound
dec
lcall
imul
repnz
jecxz
sub
into
aas
and
inc
cmp
pusha
add
or
jecxz
add
fiaddl
ljmp
sub
sbb
sub
inc
jne
loop
mov
pop
or
or
fdivs
add
cltd
dec
fwait
popf
jne
cli
push
dec
test
ret
stos
fwait
push
daa
in
mov
mov
jb
add
push
int
stos
push
into
outsl
scas
inc
dec
sbb
xchg
sub
int
inc
sbb
mov
mov
mov
call
jp
jno
inc
add
inc
mov
and
cmp
fsts
std
jecxz
arpl
arpl
adc
addb
adc
jle
dec
dec
sub
dec
push
imul
mov
aas
jle
pop
mov
add
int3
ret
or
adc
scas
xchg
pop
or
sub
nop
clc
lock
fwait
cmp
cmp
mov
push
push
mov
push
stos
into
and
inc
vaddsubpd
add
daa
mov
stos
enter
dec
push
cmp
push
inc
jecxz
lret
dec
daa
pop
std
lret
mov
dec
sbb
jl
in
jl
test
jmp
mov
movsl
inc
mov
cmp
sub
mov
or
and
addr16
inc
lds
cli
shrb
in
fisubrl
add
adc
lret
add
push
push
sub
adcb
inc
dec
popl
jg
shrb
mov
mov
jl
push
bound
aad
push
cmpsl
cmp
push
dec
sub
jne
jmp
insb
push
jge
lcall
test
inc
mov
test
rcrb
ljmp
push
pusha
mov
xchg
jle
aam
and
dec
in
pop
dec
sbb
sub
imul
push
adc
sbb
dec
jecxz
lock
fsubl
in
iret
popa
imul
notb
inc
mov
mov
fbld
or
repnz
xchg
sub
fdivs
lea
imul
movb
stc
sti
lret
jae
jbe
ljmp
cmp
pop
imul
mov
mov
and
lret
stos
repnz
out
mov
push
push
mov
cli
ljmp
popa
scas
inc
call
repz
loopne
sub
adc
movsl
rcll
cld
or
dec
jge
clc
xchg
iret
pop
out
mov
das
inc
adc
xchg
enter
push
jo
inc
sbb
cmp
or
loope
out
xchg
pusha
pop
js
stos
sbb
sub
enter
sbb
aam
das
data16
imul
pop
lods
nop
je
sub
mov
popf
inc
add
inc
dec
dec
jnp
add
mov
xchg
out
sub
data16
sti
fsubrl
sub
aas
sbb
sub
sub
mov
fdivrl
test
lds
stc
xchg
lea
idivl
add
mov
sub
in
aad
popa
ror
jbe
adc
sbb
inc
and
jp
inc
xor
jg
jb
pushf
rcr
xor
jmp
or
inc
add
xlat
loope
test
push
xor
xchg
push
in
subl
mov
or
or
lock
xor
fdivl
mov
testb
push
rorl
pop
fcompl
lahf
ret
daa
xchg
mov
jp
dec
clc
out
lret
sbbb
fdivl
adc
test
and
adc
pop
mov
xchg
jns
mov
ret
daa
jmp
xor
stos
mov
and
clc
push
sub
outsb
movsl
les
mov
or
sarb
dec
xchg
enter
data16
adc
sbb
fdivl
or
add
push
push
fcos
sahf
push
inc
lret
cmp
negl
jle
mov
dec
es
ss
dec
adc
mull
popf
xor
mov
cmp
jb
movsb
popa
jb
inc
push
adc
stc
mov
ds
js
jae
orb
xor
pop
adc
hlt
add
in
xlat
pop
xor
mov
aas
push
push
bnd
push
mov
rolb
mov
push
adc
in
xchg
rclb
pop
mov
pop
sub
aad
jns
fwait
out
sbb
and
or
dec
insl
jge
aam
mov
lods
lock
insb
insb
jb
es
mov
sbb
in
outsl
add
pop
jns
mov
gs
jg
fisubrs
jp
cld
cmp
push
sbb
fisttpll
fs
jecxz
rorb
ljmp
je,pn
mov
shl
rcrb
pop
pop
into
xor
mov
mov
jmp
inc
iret
outsb
xchg
and
push
stos
loop
or
pop
or
daa
mov
fsubrs
imul
outsb
enter
lock
aam
hlt
fsts
push
add
popa
adc
push
out
sbb
xchg
ds
lahf
and
or
add
cmp
mov
push
loopne
mov
xor
aam
adc
sbb
pop
xlat
notl
pop
aas
xor
add
mov
stc
sbb
jb
xlat
sub
enter
sbb
mov
arpl
xchg
adc
loope
xchg
mov
push
mov
repnz
push
mov
sub
push
mov
les
pop
or
push
jge
mov
push
clc
mov
lods
cmp
movsl
mov
bound
pushf
add
call
sub
in
inc
cmp
dec
jmp
xchg
dec
jns
adc
pop
icebp
jp
sub
lcall
rcrb
dec
mov
lds
xor
dec
rorb
jno
ds
and
out
jle
jae
icebp
or
movsl
test
adc
cmp
pushf
pop
addb
stos
shrl
sahf
sbb
in
scas
sbb
lods
fwait
aam
pop
mov
push
stos
mov
ret
push
sbbl
mov
leave
jns
adc
xor
jg
add
or
sub
dec
incb
adc
mov
fstpl
addr16
bound
ds
mov
icebp
ds
jne
push
leave
sti
pop
fmuls
mov
jo
sub
lock
adc
jne,pn
mov
cmp
pop
jno
or
loope
mov
lods
xor
jo
test
or
clc
lods
rcll
imull
arpl
aam
dec
adc
jno
dec
mov
pushf
adcl
loopne
loopne
cmp
subl
push
inc
inc
aad
push
jle
jnp
aas
jae
push
xchg
pop
scas
push
pop
sbb
pop
pop
loope
pop
or
cmpl
lods
mov
icebp
pushf
repnz
shlb
jno
imul
pop
sub
sub
sub
mov
xor
sbb
pop
andl
and
push
add
mov
dec
enter
ds
cld
fcoml
pop
mov
lcall
adc
je
leave
outsl
leave
fistps
xchg
mov
lret
rcrl
xor
cmpsb
stc
loop
sbb
mov
cmp
pop
ds
mov
push
cmp
push
sub
test
int3
add
movsb
mov
movsb
adc
xorl
jno
or
inc
add
sbb
and
mov
push
stos
jae
fsubr
incb
sbb
int3
push
dec
call
pop
dec
inc
jl
inc
xchg
fwait
ret
sbb
inc
fistps
test
dec
pushf
inc
jecxz
sub
or
add
fidivrs
jl
in
pop
cmpsl
fcmovu
nop
js
fcompl
ljmp
jg
out
dec
and
jmp
cvtdq2ps
jge
call
adc
xor
pop
cmp
pop
test
fwait
add
push
jp
add
je
mov
push
xchg
mov
lahf
sub
dec
es
inc
dec
xchg
in
mov
pop
jmp
sbb
popf
addb
cli
add
loopne
test
ja
jge
push
mov
leave
ss
es
loopne
jp
testb
mov
scas
sti
jl
icebp
int3
test
sbb
into
stos
pop
adc
mov
dec
pop
sbb
sbb
pop
imul
bound
lcall
movb
adc
ljmp
add
or
jg
jl
aas
in
xor
lcall
out
cmp
mov
popa
test
add
mov
and
dec
xchg
mov
hlt
cli
lods
dec
jns
leave
sarl
mov
mov
inc
sub
scas
ss
sub
rorl
and
sahf
imulb
mov
cmp
sbb
sarb
nop
mov
cld
push
cmp
mov
mov
dec
lahf
sahf
cmp
mov
decb
push
jl
int
lahf
xchg
js
lret
xchg
and
dec
fbld
leave
push
in
mov
pop
mov
jmp
dec
sbb
mov
mov
cmp
out
jecxz
push
xchg
mov
mov
jle
mov
mov
mov
daa
adc
sbb
or
mov
push
out
xor
leave
clc
jns
ret
push
imul
shrb
aam
mov
and
jbe
ljmp
pop
pushf
ds
js
cwtl
push
sbb
cmp
je
and
fnsave
stc
sbb
movsb
mov
in
test
mov
mov
mov
in
push
mov
decl
cmp
add
call
mov
sbb
outsl
adc
in
lret
xchg
mov
sbb
divb
je
call
mov
cld
sarb
test
shlb
mov
cmp
fldcw
inc
cmp
add
inc
mov
inc
es
or
lds
mov
xchg
ja
push
jecxz
stos
fsub
lock
sub
mov
jmp
gs
push
mov
lods
ljmp
in
jno
mov
fcompl
ja
inc
mov
clc
add
cli
hlt
mov
icebp
pop
xchg
pop
loop
fld
shlb
fdivrs
out
mov
xchg
jns
sbb
test
mov
cli
lahf
arpl
xchg
sbb
xor
lcall
out
xchg
sub
ja
into
push
and
fidivrl
mov
into
adc
jge
pop
nop
push
push
jns
daa
popf
xor
mov
xchg
bound
negb
mov
dec
and
mov
enter
xchg
pop
or
mov
mov
sbb
push
lcall
pop
hlt
pop
sub
pop
iret
pop
jg
add
sti
cmp
add
fldl
rcll
push
arpl
and
add
add
out
sbb
sar
loope
xor
push
jge
push
js
pop
adc
xchg
mov
add
mov
xor
cmp
push
mov
pop
adc
loope
dec
bound
cmp
popf
sub
imul
push
std
mov
fistpl
push
stos
in
outsb
adc
adc
xor
mov
or
xchg
sub
lods
outsl
and
mov
int3
pop
xchg
enter
jmp
movsb
fmuls
sub
popa
pop
mov
rclb
mov
ret
sub
bound
push
in
jmp
pop
sbb
cmp
out
sbb
fwait
out
jbe
jb
inc
cmc
cwtl
lea
mov
sbb
mov
aas
inc
lret
adc
inc
aam
lret
jmp
inc
leave
jl
icebp
fsqrt
or
and
sub
mov
add
shr
fs
cs
negl
stc
daa
pop
enter
inc
jle
sub
into
sub
movl
jmp
nop
push
cli
cmp
outsl
push
loope
mov
int3
jge
cmp
jne
or
mov
int
jne
mov
mov
enter
es
push
mov
inc
imul
cwtl
adc
scas
cmp
loop
xchg
inc
xor
nop
jle
xchg
call
rorb
and
dec
jle
lds
out
aas
adc
and
adc
push
imull
cmpb
lret
adc
fcoms
ret
mov
call
mov
js
dec
xchg
dec
xchg
into
cmpsb
jp
mov
fcompl
daa
movsb
cmpsl
idivl
jb
cmp
rep
push
cmc
sub
sub
sub
push
mov
sbb
mov
sub
dec
inc
mov
js
jmp
in
mov
mov
mov
cli
dec
dec
adc
sarb
std
push
testb
aad
adc
mov
xchg
push
inc
mov
pop
cmpsb
jbe
push
mov
cli
jl
nop
push
stos
lods
out
jl
jmp
fsub
cwtl
inc
ljmp
ja
fidivl
and
push
pusha
push
lcall
sub
sub
loope
lea
dec
adc
and
push
pop
cmp
popa
scas
int
sarl
lods
mov
pop
mov
mov
mov
scas
xor
xchg
loopne
or
dec
mov
mov
sbb
movb
sbb
out
in
negl
sub
scas
ss
popa
pop
movb
and
inc
or
movsb
and
stc
and
ret
add
imul
insl
loopne
data16
push
jmp
sbb
dec
adc
icebp
ret
icebp
pop
scas
ret
push
ljmp
ret
mov
inc
or
add
cmp
fisubrl
sbb
jnp
mov
add
and
mov
adc
data16
scas
cltd
into
cmp
xchg
or
aas
xchg
sahf
fistps
xor
int
add
call
mov
sahf
lahf
pop
mov
addr16
xchg
xor
int
mov
pop
enter
popa
inc
and
cmpsb
sub
fisubrl
or
xchg
adc
lea
movsb
jbe
add
shll
std
add
ljmp
sti
int
jge
sub
bnd
mov
jmp
or
and
scas
xor
mov
outsb
cmc
je
push
or
xchg
add
sahf
push
sbb
stos
repz
jge
cmpsl
push
inc
xlat
sub
sub
rorl
outsl
mov
mov
and
dec
lret
outsb
je
sti
mov
setb
add
test
test
sbb
repz
mov
ljmp
jns
shlb
pushf
xchg
ss
cli
das
dec
sbb
imul
int
or
daa
xchg
and
xchg
inc
and
dec
or
sti
jg
adc
cmpsb
js
xor
fstpl
hlt
fnop
ss
mov
xchg
in
insb
in
jp
sub
and
add
popf
cltd
push
ja
popf
in
add
and
repnz
out
je
sahf
and
add
call
xlat
enter
subl
cmpsl
xchg
outsb
push
inc
cmp
cwtl
repz
ret
idiv
adc
push
aas
xchg
or
mov
es
add
je
xchg
dec
enter
into
addl
pop
xchg
pushf
leave
loope
push
xor
xchg
add
hlt
cmp
push
addr16
sub
lods
and
mov
dec
push
sbb
pushf
add
and
cltd
jnp
jne
dec
sahf
or
hlt
mov
xor
mov
jg
push
dec
scas
popf
js
mov
jge
enter
mov
dec
push
in
fs
xchg
loopne
lock
fstl
test
add
test
movsb
sbb
dec
ja
scas
daa
mov
cmp
xor
push
js
ja
mov
lea
imul
xchg
inc
lock
das
ret
imul
loope
pop
jecxz
mov
loopne
or
add
fnsave
aam
repnz
cs
ja
sub
ret
insb
popf
movsb
add
cmpsb
xor
sbb
lret
push
outsl
sahf
mov
inc
jo
fbstp
push
das
mov
and
stos
or
pushf
sahf
xor
and
xchg
out
call
pop
xchg
test
add
out
bound
jbe
std
call
or
and
cmp
fldenv
hlt
movsb
mov
cmp
mov
and
ret
roll
test
out
or
into
insb
xchg
push
cmpsl
mov
push
loopne
push
mov
mov
dec
pushf
lcall
leave
and
jae
or
insb
addr16
std
dec
call
shll
pop
mov
inc
loopne
cmp
mov
add
enter
imul
sbb
in
or
or
lea
lahf
mov
lods
fidivl
int
rcrb
add
add
and
test
cmc
ljmp
out
mov
fstl
cmp
adc
andb
push
iret
test
popf
mov
int3
cmp
sub
push
filds
aaa
cmpsl
inc
andb
push
lret
cmp
lret
xor
jl
mov
jne
or
repz
adc
lcall
hlt
mov
aas
jb
push
xor
repz
push
enter
dec
push
mov
pop
std
xor
add
dec
dec
dec
mov
mov
or
xor
and
or
movsl
lods
push
sarb
loope
out
enter
fimuls
mov
scas
sbb
popl
inc
imul
int
jle
cld
inc
jb
stos
pop
lods
mov
cmpl
dec
subb
insl
xchg
or
clc
mov
fcomp
add
xlat
mov
push
pop
sub
out
xchg
sub
call
inc
mov
inc
test
mov
sub
cltd
andl
mov
add
and
mov
sbb
pop
inc
jae
out
pop
imul
mov
sub
lcall
fstps
or
mov
cmp
and
mov
cmpsb
in
mov
lea
mov
mov
mov
loop
adc
mov
aaa
es
lods
ljmp
or
test
xlat
je
mov
movsb
or
jmp
rclb
loope
dec
out
mov
inc
cmp
outsl
test
sub
fisttpl
inc
call
in
mov
sti
cmpsl
outsl
dec
gs
xchg
lods
mov
std
mov
ret
jl
scas
popf
sbb
push
pop
pop
movsb
mov
int
push
jle
movsb
shlb
jecxz
inc
cmc
iret
inc
lret
pop
js
clc
jp
pop
xchg
jp
std
adc
mov
mov
inc
call
lock
ret
mov
dec
daa
inc
fstpl
filds
dec
mov
mov
rcrb
je
ret
xor
adc
pop
fwait
int3
jmp
push
in
pop
cmp
rcl
loope
outsl
les
jg
add
movsb
notb
insl
xchg
sub
and
sbb
repnz
out
dec
daa
cmc
sbb
mov
mov
loope
mov
clc
mov
mov
cltd
adc
jb
cmp
aad
push
arpl
bound
cmpsl
lds
dec
xchg
fwait
add
inc
mov
and
int3
xchg
sahf
pop
fcmovu
push
xchg
inc
ljmp
xor
xchg
ja
xor
stos
hlt
add
xlat
xor
pop
mov
jns
lret
cmp
inc
xor
xor
gs
inc
js
outsl
fistpll
loope
mov
repnz
mov
adc
rcr
and
mov
adc
push
addb
mov
loopne
or
leave
gs
dec
sbb
dec
xor
data16
imul
data16
pop
jp
out
daa
sub
fs
push
aad
ja
loopne
and
push
dec
sub
mov
cwtl
mov
aam
xchg
or
sub
repz
sbb
jmp
ret
pop
and
xchg
pop
jge
dec
inc
je
inc
jo
pop
mov
aaa
dec
cmpsb
or
enter
mov
jnp
sbb
mov
or
movsb
push
rolb
xchg
pop
push
dec
xchg
inc
in
or
icebp
pop
xchg
into
and
inc
in
pop
dec
out
fsubrl
lahf
or
imul
jno
mov
or
scas
cmpsb
std
xor
mov
loop
pop
dec
mov
jae
filds
sub
add
fidivs
ljmp
inc
dec
pop
pop
push
cmp
ljmp
shll
out
lods
je
push
mov
pop
or
adc
adcl
sbb
lcall
push
jmp
movsl
cmp
mov
andl
pop
add
or
xchg
jl
pop
icebp
fs
aaa
bound
pop
shrl
in
or
mov
push
ftst
adc
mov
clc
adc
pushf
cli
push
or
and
jno
filds
mov
in
decb
pushf
cltd
lahf
or
js
or
insb
pushf
mov
or
subb
xchg
push
in
test
aam
popa
sbb
pop
mov
ret
jp
sbb
jns
iret
dec
adc
cmp
lea
sti
ja
xor
jnp
loop
fwait
xchg
hlt
jb
mov
dec
cmp
mov
repz
lret
add
in
and
cltd
outsb
push
cmp
clc
lret
inc
dec
mov
mov
out
xlat
pop
xlat
xor
aad
or
sti
jmp
pop
testb
sarl
and
shrl
addr16
jns
adc
sbb
xchg
mov
sbb
loopne
push
inc
cmp
int
les
in
shl
loop
roll
int
jg
mov
jecxz
test
jnp
jno
inc
testl
jge
xor
adc
out
lahf
xchg
or
gs
pop
mov
mov
scas
pop
xchg
scas
mov
pop
jl
xor
mov
inc
ljmp
dec
cmp
inc
and
test
dec
jp
call
sub
mov
lret
jbe
rcll
pop
stos
gs
push
xor
nop
addr16
insl
or
cmp
iret
xor
popf
test
mov
dec
fcoms
fwait
mov
dec
xchg
fs
sbb
gs
cli
add
or
inc
mov
push
push
in
ret
imul
mov
mov
jge
ret
cmc
mov
shl
aam
inc
adc
mov
mov
mov
fs
pop
lods
xor
xor
lret
loope
or
mov
mov
mov
rclb
adc
pop
jo
add
mov
and
enter
arpl
xchg
mov
mov
push
call
mov
or
adc
icebp
mov
ds
ficompl
inc
lret
mov
jnp
pushf
call
add
mov
imul
arpl
cld
pushl
js
adc
xchg
fwait
lahf
xor
lcall
cli
fwait
test
ljmp
lahf
hlt
dec
cmp
mov
add
xchg
call
pusha
pusha
mov
stos
push
loopne
cmpsl
add
or
xlat
aam
pop
jb
popf
lods
push
incl
sbbl
mov
ret
ss
dec
gs
int3
mov
inc
sub
je
inc
mov
pop
push
cmp
gs
mov
outsb
into
sbb
ljmp
push
fsub
adc
decb
iret
push
jne
push
mov
inc
mov
adc
pop
pop
jmp
jne
pop
jmp
pop
mov
lahf
sbb
and
mov
in
ja
test
int3
sbb
and
lock
xchg
clc
jno
fisttpl
lret
mov
inc
pop
push
sbb
xor
outsl
cmpb
mov
dec
pop
add
xchg
mov
push
inc
inc
cli
cmpsl
insl
out
inc
xchg
jmp
jmp
add
inc
test
xchg
push
mov
add
lods
fnstsw
fcomps
xor
pop
pusha
adc
es
adc
gs
or
jo
pop
mov
jg
mov
jmp
inc
shll
sbb
mov
cmc
lahf
xchg
stos
pop
aam
sub
inc
ja
jg
in
sub
cmp
mov
inc
stos
inc
lock
leave
xor
xchg
lret
cmp
jle
insb
mov
push
and
cltd
push
dec
hlt
cli
mov
pop
cli
pop
xchg
cmp
mov
in
ss
insl
cmpb
inc
xchg
fidivs
bound
imull
sbb
jg
jmp
adc
hlt
mov
add
cwtl
push
lahf
loopne
push
adc
fisubrs
push
pop
jae
mov
or
lods
imul
push
xor
cltd
fdivrs
repz
arpl
outsl
mov
or
mov
mov
add
arpl
pop
leave
pop
aam
lret
test
incl
lock
call
sbb
inc
mov
shll
inc
in
ljmp
push
jmp
and
imul
mov
mov
jp
dec
jno
stc
lods
jge
mov
jae
or
popl
sahf
jmp
xchg
aad
push
in
aas
int3
add
es
fcom
shl
dec
test
jecxz
jl
iret
sbbb
add
loope
cmp
mov
dec
pop
dec
mov
pop
push
and
xor
mov
jb
jne
dec
ljmp
xor
inc
xchg
push
mov
add
jecxz
cmp
push
jp
dec
sarb
insb
pop
push
sar
mov
out
pop
adc
adc
cmp
xor
popf
xlat
fs
push
loopne
mov
jl
and
movsb
pushl
cmc
lahf
push
pop
sbb
cmp
xor
lods
xor
popa
inc
or
leave
mov
fistpll
push
in
inc
cltd
jo
mov
idivl
shrb
pusha
mov
mov
scas
pushf
xchg
cmpsb
cmp
sti
xor
sbb
lahf
jne
andl
and
adc
hlt
cld
inc
and
fbstp
push
add
add
mov
sub
pop
sti
in
mov
push
loope
xor
test
push
xchg
je
cmp
sbb
xor
mov
and
int3
cmp
mov
ss
aam
adc
repz
sbb
xchg
cltd
fldt
psrad
add
js
jmp
sar
enter
push
repnz
lds
hlt
test
jbe
jno
inc
arpl
mov
sbb
mov
cmp
add
cmp
jge
out
int
insl
adc
jb
pop
jae
out
rorb
sbb
cmp
out
aad
jp
imul
sarb
pop
and
mov
arpl
js
add
sub
daa
sbb
jb
push
or
mov
dec
adc
inc
mov
and
fdivr
lret
in
out
dec
bnd
or
mov
jnp
fists
pop
adc
adc
mov
sub
aaa
or
cmc
cmp
cld
fsubrs
adc
mov
ljmp
mov
jbe
and
push
mov
push
and
jne
lcall
pop
xchg
es
insl
and
pushf
in
cmpsl
xor
sahf
xor
pop
mov
jl
sbb
adc
inc
leave
lea
pop
aam
jecxz
outsb
or
pop
nop
sub
push
mov
shll
mov
mov
xor
dec
popf
cli
fisttps
dec
insb
mov
in
loope
or
jns
push
mov
fwait
dec
iret
test
fidivs
mov
pop
lahf
stc
pop
std
bound
sub
or
inc
pop
mov
inc
pop
shll
inc
fisubl
dec
pop
inc
cmp
imul
xor
xlat
std
sub
jns
repz
je
mov
ret
sbb
xor
mov
ja
sub
cmc
icebp
repz
cli
pop
and
mov
subb
js
mov
jno
inc
insl
adc
xchg
repz
js
sbb
or
xor
inc
and
or
shrl
cwtl
hlt
faddl
test
aad
xlat
shll
or
lret
repnz
lock
add
cmp
push
push
je
jle
jg
jb
in
pop
jnp
movsl
leave
push
adc
sbbl
and
cltd
push
subb
mov
add
dec
pop
sbb
jnp
mov
sub
ljmp
les
mov
scas
jecxz
jbe
movsb
adc
push
or
dec
shll
pushf
push
sbbb
nop
add
ljmp
mov
mov
jo
jmp
xor
rolb
add
mov
or
xchg
div
fcomip
int
push
add
in
icebp
jb
stos
mov
lea
and
cmp
arpl
and
mov
cmpl
adc
pushf
ljmp
or
push
and
lock
push
outsl
roll
movsb
mov
into
sti
cmpsl
js
lret
pop
dec
loopne
mov
xchg
fsubr
push
std
out
inc
push
mov
loopne
add
sub
sub
mov
sub
rol
lods
inc
call
cmp
popa
add
mov
test
add
rcrb
inc
mov
cmpsl
into
xor
ss
dec
push
call
jno
adc
jmp
cs
inc
sbb
aam
or
and
dec
loopne
push
jmp
inc
pop
hlt
pushf
jecxz
cmp
mov
dec
pop
push
clc
dec
mov
dec
jge
or
xor
jo
mov
test
in
push
pop
push
enter
ret
data16
hlt
push
outsl
test
and
addl
mov
inc
scas
les
int3
shll
dec
enter
xchg
dec
rcl
mov
cltd
jo
fnop
aaa
xchg
add
or
jge
inc
mov
imul
dec
add
adc
sub
mov
or
xchg
push
jle
outsl
enter
lods
mov
mov
outsl
cmp
mov
addr16
mov
lret
repz
rorl
dec
lods
aad
adc
in
xchg
mov
test
jge
rorl
or
orl
mov
mov
notl
rorb
fwait
pop
test
les
or
js
add
mov
pop
js
ss
jl
lahf
mov
add
pop
inc
and
popf
lods
loopne
addb
stc
xchg
adc
inc
xor
stc
push
mov
inc
jne
sub
mov
stos
addr16
xchg
inc
mov
mov
inc
stc
movsl
fprem1
jecxz
sti
daa
addb
movsb
arpl
jnp
dec
xchg
mov
jae
out
inc
mov
or
out
fisttpl
stos
jp
xchg
mov
sbb
addr16
or
test
and
shrl
idivl
dec
pop
adc
out
xchg
movsl
outsl
sarb
popf
mov
in
xor
xchg
jbe
pop
sub
pop
dec
test
cmc
add
dec
dec
out
sbb
pop
jo
pushf
orl
xor
mov
mov
scas
sub
mov
jbe
sub
dec
outsb
push
loope
pop
cltd
push
lcall
xchg
or
or
sbb
jb
out
inc
dec
popf
jae
xor
sbb
dec
imul
cmp
jge
imul
pusha
mov
jne
arpl
jmp
and
mov
cmc
jnp
loop
fisubl
push
into
mov
mov
cld
fstpt
sub
sub
sub
into
notl
popa
jl
mov
jnp
nop
cwtl
lods
lahf
mov
cmp
out
xchg
outsl
adc
sub
push
cmc
add
pushf
decb
outsl
imul
dec
pop
mov
mov
popf
xchg
fistpll
sahf
xor
push
push
xor
inc
cmp
jnp
les
jnp
pop
jnp
mov
ffree
lret
dec
jbe
push
shll
loopne
jne
loopne
sbb
test
in
out
aad
imul
inc
stc
adcb
mov
inc
push
cmp
in
inc
mov
cmp
aas
shrb
jecxz
cmp
dec
mov
add
lock
adc
addr16
adc
mov
mov
jge
rorb
sbbb
push
xor
jo
sub
addr16
ficompl
pushf
push
jnp
sbbb
sahf
mov
jmp
cmp
cld
dec
sbb
push
in
imul
ret
xor
sbb
push
fidivrs
mov
lret
or
pop
mov
pop
adc
js
out
test
cmp
pop
sbb
cmp
push
xchg
test
mov
sbb
push
std
stc
pushf
mov
addr16
loop
je
cltd
xor
rclb
iret
adc
filds
xchg
cld
sbb
pop
lahf
xchg
sbb
lret
jne
daa
adc
cwtl
adc
inc
dec
xchg
mov
repnz
or
push
jbe
pop
sub
mov
les
sub
daa
imul
xchg
sub
mov
imul
mov
xchg
ja
std
mov
sub
pusha
xor
jns
sbbb
pop
inc
cmp
xorl
hlt
ss
xor
inc
mov
mov
mov
xchg
arpl
pushl
push
arpl
push
ds
fnstenv
out
mov
mov
and
xchg
jns
lcall
jl
mov
push
jo
es
push
mov
mulb
xor
or
xor
enter
loopne
in
add
stos
mov
fs
sbb
mov
mov
jae
push
test
shll
pop
jnp
stos
ljmp
mov
xchg
cmp
fs
xlat
push
fs
hlt
jg
movsl
jns
push
hlt
adc
fistl
xor
push
sarl
cmp
mov
shrl
imul
mov
and
xchg
adc
test
push
roll
leave
inc
ret
jne
scas
lock
push
lea
leave
jnp
mov
test
imul
jb
dec
add
in
jecxz
adc
insb
mov
jmp
mov
shrb
negl
pop
cmc
nop
or
jge
shrb
cmp
inc
sbb
and
imul
or
mov
stos
popa
addr16
scas
int3
dec
mov
fisubrs
in
lahf
scas
test
push
clc
sub
mov
jg
dec
push
scas
test
pop
out
xchg
jnp
mov
popf
adc
inc
xchg
in
out
pop
sbb
cmpsl
xor
or
loop
sub
push
add
rcrb
int3
ret
fimull
inc
repz
bound
test
adc
dec
push
lret
mov
ds
add
stos
loop
fisttpll
rcrl
cmc
fs
incl
jg
inc
js
sbb
mov
arpl
add
sbb
jns
xchg
push
add
xor
mov
roll
adc
imul
insb
stos
ds
stc
mov
xchg
test
and
push
push
xor
jb
data16
sbb
adc
pop
aaa
fwait
and
mov
imul
lretw
adc
rcrb
sahf
js
cmp
sbb
sub
mov
ss
cmpb
or
sub
pop
mov
fstpt
fstps
cmpsb
insb
xlat
inc
in
rcll
das
adc
push
ja
gs
divb
int
mov
and
sbb
pop
mov
cld
mov
scas
mov
ret
dec
out
xor
xor
dec
pop
and
mov
lea
push
inc
ljmp
stos
add
mov
rorl
mov
insb
mov
xor
pop
and
fwait
leave
jnp
outsl
adc
sbb
lahf
push
xorl
sbb
js
jb
jbe
inc
adc
inc
mov
aas
sbb
in
fisttps
pop
gs
stos
mov
call
hlt
add
pop
int3
add
ja
jp
test
and
test
adc
mov
push
in
sti
push
imul
jno
push
test
aas
pop
flds
pop
mov
jp
iret
mov
das
xor
cmpsb
lock
rcrb
enter
push
push
cmp
addb
or
jo
push
dec
enter
xchg
arpl
ss
dec
xor
mov
loop
insl
repz
mov
mov
xlat
add
pop
cmc
mov
cs
inc
mov
push
mov
lods
lea
imul
outsb
xor
dec
ds
jg
and
xor
cwtl
jns
int3
lods
cld
inc
jecxz
pushf
push
imul
sub
icebp
cmp
inc
loope
sub
in
add
clc
jnp
jns
cmp
dec
gs
in
jb
xchg
push
push
loopne
mov
es
mov
or
addr16
stos
lds
jbe
out
pop
sub
decl
mov
cmpsb
int3
lea
push
sarl
test
add
aad
rolb
dec
or
shrb
sahf
dec
xor
lea
mov
mov
jl
mov
inc
lret
pop
dec
pop
fs
sbb
push
dec
xor
push
outsb
jg
aad
xchg
xor
dec
add
lods
mov
cmp
add
push
xchg
lret
mov
aaa
mov
test
loop
sbb
je
fsubl
std
pop
or
push
hlt
add
leave
mov
lcall
cld
je
out
xor
push
hlt
test
lret
xlat
cmp
leave
lds
mov
dec
int
xchg
ret
insl
shlb
bound
lea
shl
lods
adc
or
mov
ds
out
outsl
pushf
jns
stos
dec
in
cli
ljmp
ss
push
sub
jecxz
fld
xchg
aaa
pusha
jmp
lahf
ret
mov
inc
std
adc
and
aaa
or
imul
sub
add
sub
sub
xchg
or
daa
mov
leave
or
add
fadd
and
inc
adc
cmpl
xchg
xor
jne
cld
enter
mov
sub
repz
or
or
xor
call
xlat
add
cwtl
pop
mov
dec
sbb
enter
ljmp
mov
les
icebp
fistpll
xchg
ds
stos
mov
push
cwtl
jno
pop
daa
loope
inc
popf
cmp
jo
outsb
stos
xchg
jp
popa
or
fucomp
pop
jg
mov
je
and
jecxz
sbb
repz
test
lret
popa
testb
inc
mov
adc
cmp
popf
inc
xor
popf
std
ljmp
cld
insl
lretw
inc
testb
cmpsb
fidivrs
iret
and
add
in
cmp
mov
adc
movsl
inc
lcall
adc
scas
mov
fstpl
and
sbb
xchg
stos
loopne
mov
lcall
mov
mov
int
adc
loope
jmp
push
int3
push
cmpsl
dec
sub
jmp
pop
out
cmovs
xchg
aad
iret
jmp
jmp
xchg
loope
aas
fsubr
xor
jecxz
out
fwait
pop
cmpsl
pop
jmp
and
fidivl
adc
xor
mov
flds
adc
push
rcll
daa
dec
je
pop
sahf
mov
dec
pop
cmp
mov
sub
mov
jbe
or
jp
or
xchg
movsl
pop
rcrb
sbb
adc
ljmp
cld
and
pop
push
arpl
xchg
idivl
inc
gs
je
jecxz
test
mov
add
sarb
testb
sub
movl
push
xor
aaa
aas
push
movsb
add
xchg
inc
xor
or
test
cmpsb
arpl
dec
shlb
sar
in
push
imul
cmp
outsl
aaa
ret
stos
into
ret
mov
jp
push
repz
pop
arpl
inc
in
outsb
nop
mov
xor
arpl
daa
stc
add
xorb
xor
jle
mov
xchg
shll
lcall
pop
mov
xchg
popa
shll
movsl
jl
imul
ror
dec
in
das
pop
loope
cmp
mov
add
jnp
add
dec
in
loope
out
mov
pop
cmovp
test
push
call
mov
sbb
imul
add
adcb
fsub
push
xchg
pop
aas
or
test
mov
xchg
mov
rcrb
movsb
test
sbb
dec
xchg
dec
xor
sub
lea
int3
sbb
lret
inc
into
xlat
and
popa
mov
popl
fdiv
sarl
movsb
loope
sub
pop
xchg
pop
addr16
mov
lods
stc
jns
jbe
xor
dec
sbb
xchg
stos
cltd
je
xchg
je
pop
lcall
jnp
test
mov
test
aad
loope
jmp
fidivl
stos
outsb
inc
stos
add
push
fmulp
jns
jne
jns
dec
sub
inc
xchg
in
lods
sbb
iret
cmp
mov
in
xchg
fwait
or
iret
push
mov
and
lds
inc
bound
cmp
xor
lcall
mov
aas
sub
sbb
jg
mov
xor
test
mov
test
sub
or
add
add
xchg
jne
inc
xor
arpl
fisttps
popa
inc
mov
lods
cltd
pop
rorl
mov
jo
jo
negb
fdivl
imul
xor
inc
xor
pop
std
mov
fcoml
bound
inc
les
push
cmp
std
aad
outsl
xchg
mov
or
cmp
jmp
dec
fists
dec
or
outsb
and
mov
fmull
sysexit
pop
mov
scas
mov
arpl
add
inc
popa
add
stc
cmp
cmpsl
xor
push
pop
sbb
cld
jb
in
outsl
ljmp
adc
mov
xor
out
test
in
pop
xchg
adc
jno
ss
pusha
loopne
push
dec
icebp
and
stc
xchg
mov
mov
mov
scas
mov
out
jno
and
sbb
fistpl
mov
enter
fistpll
lret
cmp
imul
mov
aas
xor
cmp
scas
mov
mov
aad
aam
mov
or
inc
add
jp
es
gs
nop
out
aaa
out
inc
jl
fmuls
cmp
lret
and
pop
pop
pop
mov
jl
xor
arpl
test
pop
mov
dec
rclb
mov
sbb
pop
andl
add
add
lahf
jg
ljmp
data16
sub
jno
sbb
or
imulb
mov
jbe
push
xor
cmp
cmovae
clc
mov
in
int
int3
punpckhwd
mov
xor
imul
xor
mov
mov
loop
in
xor
mov
js
das
pop
lret
js
mov
mov
xlat
cmpl
push
cmc
adc
aas
shlb
pop
iret
adc
in
fnstcw
orps
scas
pop
stos
out
lods
iret
cmp
clc
jmp
lods
mov
ljmp
xor
cmp
inc
cmpsl
adc
enter
push
cmpsb
dec
mov
hlt
clc
cmp
mov
into
repz
push
fwait
adc
fcomps
add
mov
addr16
hlt
mov
cs
je
sub
daa
or
ret
fisubrs
out
nop
popf
lock
dec
test
lcall
fiaddl
xchg
cmp
adc
iret
sub
inc
call
push
jecxz
fst
mov
push
ret
pop
mov
push
xchg
daa
mov
pop
loope
mov
sub
aaa
jb
mov
mov
cmpsl
lcall
sarb
push
add
jne
int3
inc
scas
push
out
outsl
mov
dec
cmp
leave
mov
addr16
mov
inc
pop
mov
outsb
loop
mov
push
xor
rcrl
leave
mov
pop
jne
xlat
ret
mov
inc
andl
fwait
jno
mov
popf
std
mov
adc
jle
out
xchg
adc
ret
mov
fstl
je
in
jbe
rcll
lret
or
push
jb
pushf
push
int
mov
lods
jp
push
sarl
dec
outsl
push
jmp
jmp
inc
in
add
adc
int
push
popf
add
pop
lock
inc
pop
cmpb
iret
lcall
lahf
icebp
imul
push
sub
popa
xchg
loope
pop
scas
xchg
mov
in
imul
cmp
enter
out
insl
aas
loopne
xchg
sti
sub
movsb
cmpsl
or
xchg
rorl
lea
test
cmpsl
push
mov
add
lods
outsl
jo
add
pop
mov
adc
das
mov
adc
xor
cld
mov
and
scas
mov
pushf
mov
sbb
in
into
pop
and
lock
cmpsb
mov
xchg
insb
cmpsl
aam
mov
xor
jp
ljmp
es
cli
scas
xchg
insb
fsubr
inc
popf
inc
cmp
js
mov
out
sub
pop
cmc
andl
cs
stos
stos
out
psubw
insl
jp
adc
sub
outsb
mov
in
xor
aaa
xchg
pop
mov
and
pop
push
mov
or
in
pop
rcrb
je
xor
jmp
jle
add
stc
rol
mov
sbb
and
cmp
xchg
xor
jo
outsb
inc
push
xor
mov
jge
lods
xor
cmp
dec
jle
outsl
or
sub
out
in
pop
cmpsl
dec
pop
add
dec
cmpsl
sbb
mov
pop
push
and
mov
xchg
loope
lods
out
loope
xlat
cmp
hlt
cmp
repz
add
ret
cmc
mov
push
mov
sbb
adc
std
mov
popa
je
stc
and
xchg
out
iret
inc
pop
clc
mov
fmull
stos
xor
mov
test
scas
std
sub
inc
and
ror
mov
scas
and
into
inc
push
mov
adc
in
xor
inc
and
ljmp
cltd
xchg
mov
lods
mov
pop
jp
ja
insl
fadds
test
lcall
into
std
popw
es
test
and
andl
mov
jo
adc
push
jmp
pop
mov
mov
jmp
cmpsb
rcr
mov
test
adc
add
xchg
lret
dec
jo,pn
cwtl
outsb
insl
push
lahf
mov
lcall
jo
jp
scas
lea
dec
rolb
test
cs
push
add
fs
pop
sarl
sub
mov
xchg
xor
sub
iret
arpl
push
mov
in
testb
xor
hlt
lret
out
mov
pop
xor
jge
add
nop
ret
nop
in
xchg
lock
xor
bound
roll
shrl
jl
enter
nop
sub
sub
inc
shll
cltd
mov
nop
adc
lret
mov
and
icebp
aaa
jb
cld
xchg
cmp
and
scas
cmc
mov
aas
les
daa
mov
test
sub
xor
stos
push
lock
insb
jp
adc
shrb
cmpsb
fwait
popa
inc
push
and
cld
dec
arpl
mov
je
sub
xchg
add
fdivrl
les
dec
mov
popa
push
adc
scas
and
mov
cmp
imul
shll
ror
sti
out
imul
rolb
pushf
clc
push
mov
mov
je
shl
outsl
lock
push
daa
sti
pop
inc
add
adc
cmc
jge
test
inc
xor
imul
xchg
sahf
jnp
dec
or
inc
lcall
fdivr
and
popf
add
cmpsb
insl
or
in
addr16
push
js
mov
mov
cmp
sub
xchg
scas
pop
sub
mov
fsubs
adc
inc
or
add
xchg
orl
push
mov
sahf
cld
arpl
xor
pop
ja
cmpsl
stos
pop
lea
dec
pop
hlt
mov
test
pop
repz
mov
jp
xchg
xchg
dec
push
stc
ss
or
xchg
mov
dec
push
adc
popf
cmp
dec
lock
and
aaa
xor
mov
std
jnp
pop
cmp
cltd
aad
lret
test
sub
das
pop
hlt
xchg
dec
das
adc
xchg
std
loop
outsl
icebp
dec
xchg
test
push
xchg
jmp
sbb
stos
jle
sbb
push
cmc
xchg
inc
or
adc
jle
hlt
rolb
xchg
mov
insb
push
testl
mov
mov
sub
adc
and
xchg
dec
dec
pop
adc
pushf
test
out
jge
shlb
inc
jae
push
subb
loopne
pushf
popf
mov
and
lods
jns
push
cmpsb
mov
push
call
aam
and
and
jne
ja
pop
loop
call
shlb
andb
les
stc
pop
pusha
out
xchg
cli
inc
mov
push
push
pop
mov
aam
mov
std
mov
jne
xchg
out
inc
inc
testl
mov
and
sub
cmp
sub
xchg
outsl
fs
fcmovnb
and
sahf
mov
mov
test
xchg
mov
push
cmp
mov
movsb
mov
mov
pop
sbb
and
xchg
push
clc
cs
pop
enter
mov
cmp
sub
sub
jne
jae
call
mov
dec
call
mov
inc
push
xchg
push
dec
push
inc
int
cmpsb
hlt
sub
dec
aas
mov
jnp,pn
jbe
rorb
loope
repnz
push
or
jmp
fdivs
pushf
xchg
mov
ja
ljmp
adc
mov
sbbl
sbbl
sub
ja
test
adc
dec
and
into
mov
daa
push
dec
lods
inc
mov
mov
sbb
dec
push
mov
xor
mov
push
dec
test
sarb
je
dec
add
dec
or
ret
pop
add
pop
push
dec
adc
test
gs
test
cmpsw
inc
jno
mov
dec
loopne
push
popf
push
push
fcompl
lods
pop
divb
out
outsb
test
es
sbb
mov
cmp
repz
or
mov
and
addr16
icebp
test
or
lock
int
push
sub
test
push
lea
rorl
xor
jmp
and
and
xchg
adc
mov
subl
xchg
mov
scas
and
add
dec
and
jg
outsl
jo
loope
call
mov
or
mov
call
mov
push
pop
outsl
push
shrb
out
call
movsb
xchg
jno
jb
idivl
fcmovb
add
fs
push
gs
sub
xchg
jae
adcb
adc
dec
les
jge
imul
les
jo
mov
fldl
int3
fisttpl
in
jmp
mov
fwait
xchg
jg
ficomps
adc
inc
or
out
arpl
das
push
jmp
sahf
roll
mov
inc
pop
inc
test
daa
xor
jbe
pop
inc
cmp
out
jle
mov
test
sbb
push
mov
xlat
xchg
cmp
loop
loopne
pop
xchg
jae
fwait
or
and
cmp
inc
dec
movsl
mov
test
fsubrl
test
test
push
fsubrl
icebp
insb
jg
and
cltd
cld
xchg
or
cmp
jno
xchg
test
pop
popf
gs
lods
xor
cld
push
insb
bswap
and
test
mov
push
pop
and
subb
subb
and
hlt
push
ds
mov
into
mov
mov
push
imul
xor
mov
in
out
sbb
bnd
push
cmp
pop
imul
adc
into
daa
push
or
dec
push
test
mov
lock
mov
es
or
sbb
jbe
mov
push
rcrb
sbbl
scas
stc
inc
cmp
add
shll
mov
dec
push
xor
insl
dec
adc
mov
fdivr
in
adc
insl
push
ret
or
mov
out
pop
and
jb
push
outsl
mov
cmc
sub
sti
add
add
push
jae
sub
push
push
out
or
mov
sbb
cmpsl
loop
daa
sbb
sub
outsl
shl
loope
mov
into
xchg
mov
in
adc
stc
sub
push
sti
cmp
test
out
cmp
mov
sbb
stc
xchg
xchg
jp
ret
inc
sbb
out
fcoms
push
push
jno
in
es
xor
bound
pusha
cmp
mov
loop
and
sub
mov
adc
leave
loop
test
int
fldcw
mov
mov
int3
mov
cmp
push
xchg
dec
je
or
xor
push
lock
push
jp
lea
mov
pop
mov
mov
fsubrs
and
xchg
test
pop
sub
cmpsl
sub
dec
cld
data16
popa
into
mov
lahf
pop
add
insb
xor
insl
mov
fists
mov
mov
icebp
lock
jns
enter
mov
jmp
je
xor
or
scas
pop
push
push
iret
jne
sahf
jno
pusha
test
inc
xchg
xchg
icebp
pushf
daa
fdivp
std
aas
cmp
rorl
pusha
imul
stc
fldenv
hlt
jg
pop
inc
dec
xchg
cs
outsl
fsubs
lahf
jbe
stos
xor
inc
lcall
test
push
or
shr
push
fcoml
dec
incl
lods
add
js
call
out
rclb
cs
cmp
jg
xor
out
dec
loope
inc
rcrl
icebp
loop
xchg
out
jge
cld
scas
dec
jno
push
cmp
test
dec
imul
out
cmp
mov
jl
and
lock
pop
pop
stos
mov
cltd
inc
push
movsb
mov
inc
sub
call
movsb
stos
cmp
and
aaa
inc
imul
jo
sbb
iret
das
sbb
ljmp
jmp
aas
mov
jns
jg
in
out
xorb
add
jmp
out
icebp
fnstsw
jne
add
dec
and
outsl
jno
mov
inc
ret
test
sti
iret
ret
jne
mov
adc
mov
mov
ds
xchg
sub
push
xlat
dec
inc
mov
sbb
push
sbb
fists
adc
sbb
sub
mov
ja
les
and
push
push
adc
jl
test
out
mov
cltd
pop
cmp
lods
out
imul
jne
ret
push
add
or
xlat
push
sbb
mov
xchg
xchg
clc
outsb
mov
lds
int
insl
aam
push
test
add
or
ficoms
popa
fs
jg
and
test
test
imul
mov
jo
or
out
cmp
pop
mov
and
dec
std
fdivrs
cmp
iret
lods
mov
or
mov
mov
mov
or
dec
dec
fsubrs
pop
cwtl
sub
push
push
test
bound
lret
pop
stos
mov
aam
test
pop
int3
insl
arpl
inc
jae
push
xchg
test
inc
lcall
sbb
jmp
sub
imul
jne
cmp
sub
xchg
mov
test
jne
and
xchg
mov
cmp
and
lcall
sti
jle
ret
mov
daa
xor
cmpsl
loopne
cmp
insb
dec
and
mov
mov
pop
je
jp
incb
mov
dec
into
mov
mov
sub
and
cmp
les
leave
cmp
push
test
in
mov
sbb
stos
call
push
dec
mov
mov
sahf
sbb
mov
push
pop
xor
sub
cmc
loop
cmp
insb
dec
sbb
loopne
sub
add
push
dec
mov
and
iret
inc
fwait
mov
fadds
call
aaa
or
xchg
jae
lds
push
mov
movsl
sub
stos
popa
cmp
jae
pop
xchg
pop
add
push
cmc
adc
sbb
jge
sarb
cmp
sub
fdivrl
xor
pop
int
adc
imul
adc
jmp
fst
sub
xor
aaa
shrl
out
pop
adc
push
lahf
cmpsl
or
mov
push
adc
push
aam
fldt
js
pop
aas
mov
dec
ss
jl
in
jle
adc
mov
mov
xchg
mov
aas
sub
push
aas
jb
mov
test
push
mov
loop
movlps
adc
push
jg
int3
cmpsb
jnp
fidivrs
in
mov
loope
adc
dec
sbb
jmp
inc
into
movl
cs
std
aad
ja,pn
adc
cltd
pusha
adc
xchg
mov
push
pushf
adc
fstpt
lods
mov
dec
xchg
cmpsl
xlat
cmp
cmovne
dec
sahf
test
loop
in
ret
daa
rorl
jg
test
addb
iret
fwait
sysenter
push
adc
cmp
or
andb
cmc
out
push
ret
sbb
add
mov
aam
add
scas
and
and
call
cwtl
fistps
aas
xor
enter
lret
out
subb
adc
xchg
into
xchg
mov
xchg
pop
sub
insb
and
and
aaa
mov
out
stos
add
push
mov
inc
inc
roll
hlt
sub
inc
cs
loope
popa
cmp
or
lock
popa
movsl
fdivrl
xchg
inc
mov
pop
jne
xor
dec
out
dec
add
imul
into
cld
add
sti
daa
pop
outsl
sbb
mov
mov
adc
sbb
int
add
insb
sahf
push
jo
jno
or
ret
mov
push
inc
lea
ud0
xor
sub
out
sarb
xchg
inc
pop
je
mov
js,pt
clc
filds
push
das
test
add
sub
xchg
mov
dec
pop
jp
cmp
pop
push
insl
push
push
and
adc
jnp
into
repnz
mov
inc
xor
xchg
adcl
mov
jno
insb
mov
je
mov
stc
push
and
mov
fimull
lret
insb
jns
fstps
fnsave
outsb
sti
pop
push
test
mov
in
fs
jae
test
pop
pop
xchg
loop
mov
add
pop
fidivs
sbb
pushf
push
or
jl
insl
xchg
fisttps
jns
pop
pop
xchg
aad
xchg
int
mov
fldenv
push
xchg
pop
add
fxch
and
jbe
pop
sbb
in
arpl
ret
and
rcrl
and
test
loopne
scas
and
push
stos
mov
shrl
cld
leave
pushf
lods
andl
fdivr
cmp
adc
into
push
xlat
xchg
dec
fwait
repz
popf
std
test
or
sbbb
lcall
jo
jg
jmp
or
fsubrp
push
or
inc
mov
loope
push
xor
imul
add
adc
lods
adc
xchg
pop
insb
in
stos
inc
insb
testb
fiadds
sarb
lock
mov
mov
and
lcall
stc
jae
sbb
fldenv
lret
out
jg
sbb
cmp
jmp
adc
fsubrl
aam
xchg
cmpb
cli
sub
movsl
cwtl
sti
xchg
jmp
and
mov
sbb
aaa
mov
sbb
dec
add
add
mov
pop
lea
pop
sbb
in
jbe
add
push
mov
mov
mov
frstor
lret
jmp
sbbl
fwait
out
daa
fwait
loope
scas
add
je
dec
aam
mov
dec
sbb
es
jo
mov
and
pop
mov
out
pop
mov
inc
adcb
mov
jne
inc
add
or
mov
adc
ret
and
mov
gs
ljmp
lcall
inc
gs
orb
xor
pop
or
je
movsl
cs
ror
pop
mov
push
push
adc
lds
inc
sub
sbb
or
pop
add
mov
aas
out
jnp
fwait
mov
mov
dec
test
push
mov
fcoms
xchg
mov
std
xchg
xchg
dec
dec
mov
or
lcall
adc
into
xor
pop
inc
dec
jne
jmp
push
mov
pop
dec
std
in
stos
xlat
push
gs
test
mov
xchg
cmpsl
or
mov
test
sub
dec
inc
push
es
inc
mov
add
dec
xchg
xor
and
cmp
xchg
test
or
daa
mov
fidivrs
int3
mov
dec
push
mov
shl
xor
push
xchg
xchg
sbb
paddw
daa
jnp
movsl
insb
cmpsl
mov
sti
mov
in
jecxz
lret
mov
adc
loopne
push
cmp
pop
jb
movb
mov
loop
lea
mov
push
ficomps
addr16
mov
and
sbb
pop
jl
outsl
xlat
sub
es
jae
dec
ss
fbld
cmp
cmp
int
xor
loop
dec
mov
push
xchg
enter
lods
cmp
inc
scas
pop
sub
iret
pop
cmp
out
out
xchg
aad
shrb
and
mov
add
pop
xchg
ret
xchg
pusha
sbb
scas
or
pop
sbb
mov
push
test
cltd
stos
ds
dec
mov
call
in
movsl
ljmp
inc
icebp
arpl
repz
out
pop
sbb
jne
inc
jp
xchg
cwtl
inc
xor
std
je
ja
test
add
or
adc
test
add
sarb
adc
cmpsl
mov
cmp
insb
pusha
xchg
je
jne
mov
inc
imull
xchg
jnp
addb
out
xor
xor
std
or
cmc
mov
or
xor
sti
in
lcall
sub
cmp
xchg
mov
lods
cmp
enter
cmp
insb
jbe
out
sbb
fdiv
aam
mov
push
test
call
lret
mov
xor
jb
ljmp
mov
imul
inc
test
or
int3
xchg
and
bswap
dec
and
loop
inc
dec
mov
xor
xlat
push
fcoms
lahf
ret
mov
mov
xchg
insb
fcmove
pop
es
mov
xchg
jo
mov
push
sbb
mov
add
jmp
loop
jecxz
bound
leave
sti
mov
dec
jmp
call
adc
add
mov
sub
es
pop
cwtl
cwtl
enter
push
loop
pop
mov
xor
pop
mov
cmp
xor
jne
inc
mov
mov
inc
repz
stc
mov
jecxz
xchg
enter
mov
add
push
push
pushf
std
aam
mov
adcl
out
and
test
idiv
lcall
cs
ss
aam
add
popf
mov
stc
sbb
jl
fcmovnbe
pop
in
push
mov
mov
cmp
dec
xchg
subl
lock
or
mov
pop
xlat
pop
or
cmp
stos
es
and
and
movsb
fiadds
loopne
sub
mov
dec
mov
and
and
clc
std
lret
sbb
lods
orl
shll
int
sti
push
inc
pop
jne
out
pop
xchg
loopne
pop
clc
and
ds
lods
lret
add
sahf
insl
pop
cmp
jae
push
outsl
in
fiadds
lret
andb
out
fwait
sbb
push
pop
hlt
int3
push
push
pop
or
test
fs
jmp
push
and
and
sbb
mull
sbb
sbb
mul
push
mov
xchg
sub
mov
lods
cmpsb
das
js
je
dec
icebp
xor
xchg
add
cmp
daa
and
xchg
das
aaa
mov
dec
inc
ret
or
jecxz
jb
inc
fsubl
xor
pushf
imul
aad
jl
sti
cmp
cmp
test
mov
mov
insl
dec
push
add
ret
mov
pushf
xchg
add
clc
mov
data16
add
mov
pop
inc
popa
dec
or
lcall
lret
dec
and
shll
dec
call
add
adc
adcb
or
int
notb
and
dec
pop
pop
push
insb
cmp
ret
adc
inc
ret
sub
outsb
dec
jl
leave
scas
pop
add
pop
sbb
jo
fadd
cmp
inc
movsb
push
dec
insl
inc
sub
out
mov
sbb
push
or
daa
mov
rcll
rol
inc
push
cmp
ja
push
test
sub
pop
into
xor
mov
xchg
repz
cmp
aad
xchg
sbb
enter
sahf
dec
lods
sahf
jl
outsl
inc
enter
rcrl
cltd
or
pop
jge
test
xchg
jne
sbb
mov
jmp
insl
push
je
xorps
lret
loopne
lock
jl
add
mov
jns
xchg
mov
mov
add
and
test
outsl
push
imul
fdivrl
mov
add
loop
int3
fildll
pop
dec
mov
push
mov
cmpsw
lahf
out
addr16
test
fldcw
pop
mov
mov
jns
fidivrs
add
mov
sbb
das
int
pop
ljmp
mov
stos
cs
mov
jp
and
lret
jb
das
xchg
mov
cld
lods
adc
xchg
dec
mov
leave
inc
pop
lock
bound
out
rcl
add
pop
fbstp
xor
insl
xor
subb
push
adcl
jp
dec
xchg
dec
mov
mov
adc
pop
adc
adcb
mov
xchg
xor
sbb
cmpl
loope
outsl
les
testl
jp
adc
push
mov
and
sbb
dec
mov
mov
pop
andl
or
jne
pushf
add
cltd
decl
insl
xor
cmc
add
jge
dec
push
mov
add
hlt
lret
push
insb
mov
mov
js
lret
mov
jg
mov
and
sbb
pop
inc
stc
add
push
sarl
out
aas
mov
xbegin
jg
adc
dec
pop
inc
or
shlb
xor
das
inc
or
iret
mov
adc
push
dec
jg
dec
sti
fisubrl
cmp
hlt
sti
mov
int3
push
pop
shlb
aas
add
cmp
das
stos
pop
pop
cmp
add
aas
add
das
and
lods
add
mov
mov
mov
sti
orb
add
out
imul
push
js
cmpsb
push
movsb
sub
push
mov
jp
gs
inc
xchg
dec
js
je
xchg
jge
test
out
movsb
add
imul
mov
pushf
and
sub
mov
or
stos
int3
fs
sub
dec
out
aad
dec
fnstenv
lock
push
scas
push
push
out
cmp
lret
outsb
xchg
daa
or
cld
or
in
rorb
pusha
fwait
cld
jbe
aaa
in
push
xchg
leave
sub
mov
inc
dec
hlt
in
jp
fistl
adc
movsl
ss
cmp
sbb
xchg
jnp
inc
jb
mov
push
mov
or
push
and
pop
lahf
mul
inc
lea
pushf
jne
sbbb
jl
or
cmp
sbb
aam
adc
inc
jo
imul
jg
je
test
mov
in
ret
aad
adc
mov
leave
jo
cmp
faddp
ljmp
ret
popa
sub
daa
aad
cmp
jecxz
ljmp
or
xchg
add
lds
subb
cld
cmp
jnp
push
sbb
outsl
sbb
sub
or
cld
icebp
outsb
pop
push
push
and
mov
ss
and
adc
pop
xchg
imul
fwait
lahf
and
and
add
push
inc
or
and
int3
lcall
fmull
data16
jnp
nopl
out
jp
cmpsb
cli
int
scas
fld
flds
xchg
mov
int
jnp
pop
push
dec
aad
jle
outsl
jne
jmp
inc
pop
dec
cltd
popf
adc
dec
push
pop
ss
mov
stc
les
cld
sbb
pop
dec
mov
dec
push
sti
loopne
inc
adc
jecxz
cmp
xor
imul
fcomps
insl
fistl
mov
adc
xor
aas
test
clc
and
out
add
jg
idivb
out
ja
xchg
inc
cmp
loop
repz
jle
pop
pop
jbe
lea
int3
arpl
fwait
lods
pop
enter
fmull
jns
jg
sti
inc
sbb
movsb
and
inc
ja
dec
jecxz
pop
and
mov
xchg
js
fwait
loop
mov
jbe
and
mov
push
jno
sub
in
mov
jle
fdivl
mov
inc
aam
call
push
pop
and
add
push
mov
push
fsubrl
cmp
sar
and
insb
adc
xlat
push
xchg
dec
insl
in
mov
leave
fiadds
sbb
jae
sub
jae
jecxz
cli
jecxz
mov
dec
mov
movsb
dec
xchg
pushf
int3
lods
sarb
fs
pop
imul
jb
enter
scas
push
sub
rep
mov
or
inc
popa
dec
mov
mov
pop
test
sbbl
test
std
rcrl
push
adc
adc
lret
mov
pusha
push
out
repnz
jno
cmc
loopne
cltd
cli
push
ss
int3
push
add
xor
enter
shlb
fsubs
add
rorb
jmp
sbb
xor
rorl
dec
cmp
std
cmc
jns
sub
jbe
cmc
push
pop
xchg
in
loope
and
lock
movsb
jge
jno
fldcw
out
inc
insl
mov
mov
ret
ja
lcall
add
stos
pop
in
aaa
ljmp
inc
icebp
xor
aas
roll
xor
jp
xor
test
lods
mov
std
or
int3
cmpsl
push
mov
test
mov
shl
xorl
decb
daa
xchg
cmp
xchg
clc
jl
cltd
mov
add
stc
rclb
adc
mov
aad
sbb
jae
imull
push
pop
stos
es
movsb
bound
xor
sahf
xchg
xor
repnz
jge
out
lds
getsec
xchg
incl
jge
es
sub
push
inc
sbb
mov
dec
mov
aas
out
in
repz
aam
inc
pop
mov
gs
push
rolb
mov
sbb
inc
fwait
cltd
xchg
mov
sub
cmp
or
jmp
xor
fsubr
cmp
mov
sbb
or
or
mov
inc
inc
les
es
add
inc
dec
xchg
xchg
outsb
dec
sub
dec
mov
lds
or
call
inc
pop
and
push
inc
push
cmp
mov
sub
lds
arpl
mov
ja
loopne
in
inc
xchg
mov
int
fmull
ficoml
popf
cli
mov
inc
aam
add
or
loopne
in
repnz
aad
sahf
inc
pop
mov
inc
test
das
rol
xor
inc
xchg
movsb
sbb
jns
mov
in
in
aaa
and
add
mov
mov
stos
pop
arpl
pop
mov
or
and
out
test
xchg
mov
inc
imul
dec
popf
xchg
jbe
push
adc
fdivr
aam
mov
cmp
scas
pop
loopne
pop
outsb
outsl
scas
lret
lods
loopne
shrl
loop
pusha
push
and
pop
push
jo
jge
xchg
fldcw
dec
mov
lock
aad
push
ja
sahf
sbb
pop
push
jbe
cmp
cmp
mov
aad
adcl
ret
add
pop
js
push
loope
pop
arpl
insb
xor
idivl
mov
test
push
mov
in
leave
adc
cmp
loope
test
jo
mov
das
sub
shrl
clc
inc
mov
push
inc
mov
and
fs
pop
mov
push
jne
cli
lret
adc
roll
stc
ficomps
iret
pop
lods
jo
ss
test
inc
pop
adcb
outsb
shrb
dec
insb
fsubs
aad
and
test
mov
decl
cwtl
outsb
loope
ss
das
movsb
xor
fldenv
pushf
fsts
dec
dec
rclb
das
mov
arpl
jo
outsb
push
in
ret
inc
sahf
mov
lahf
mov
addr16
jp
loope
lea
movsb
pushf
mov
ss
mov
dec
jae
push
in
mov
xchg
movsb
cmp
pop
lods
ss
fs
popa
xchg
ljmp
inc
mov
leave
lcall
lea
stos
jle
ljmp
int3
insl
lods
and
jge
and
push
arpl
mov
sbb
jne
push
cli
cld
clc
ljmp
je
shrl
mov
inc
int
push
test
cmc
xlat
sbb
cltd
sub
insb
mov
pop
sub
mov
jl
cmp
mov
or
cli
pop
insb
jle
pop
sbb
fidivrl
jbe
inc
push
and
leave
adc
mov
sub
xchg
pop
push
out
lret
push
adc
add
cmp
repz
call
add
cmp
clc
pushl
fsubr
ja
int
mov
inc
jns
fdivl
call
inc
push
mov
jb
sahf
add
jnp
sub
xchg
mov
sbb
jnp
sahf
add
mov
jp
aas
sub
stos
mov
or
bound
adcl
xor
jecxz
shll
cmovg
jbe
xor
arpl
shlb
jno
xor
cmp
stos
stos
clc
adc
rorl
lock
fistl
cld
sbb
inc
ret
stos
xor
add
push
lods
jmp
dec
cmc
push
loopne
xchg
movsl
popf
mov
ror
or
mov
add
lcall
add
fmuls
rorl
push
lods
loopne
fisubl
xlat
jnp
ja
fidivrl
popa
sub
and
push
inc
add
lcall
cmp
out
pop
xchg
adc
mov
mov
fldcw
inc
out
test
mov
xor
and
cmpsb
pop
movsb
movsl
sbb
sbb
inc
mov
cwtl
cli
sub
out
jnp
mov
xor
push
sbb
les
dec
cmp
out
or
push
das
inc
xor
mov
mov
cwtl
mov
mov
push
dec
jp
sbb
mov
shrb
lods
stos
jno
enter
cltd
sbb
shl
xor
sub
and
xchg
popf
inc
mov
sub
pop
or
cmp
out
inc
jle
mov
push
xchg
sub
mov
push
test
test
mov
in
lods
clc
cmc
lds
jle
addr16
lds
in
shll
xor
bound
or
out
xor
pushf
xchg
xor
pop
dec
push
xchg
les
adc
mov
push
push
push
xor
leave
mov
push
out
jp
mov
lcall
scas
and
pop
nop
fnstenv
popa
andl
cmpsb
and
mov
xor
and
jge
popf
xlat
cmp
mov
outsl
stos
mov
inc
cmp
rclb
mov
cmpsl
pop
addr16
sbb
insl
mov
mov
aas
mov
pop
aam
ja
scas
mov
adc
daa
mov
adc
pushf
or
mov
scas
mov
nop
xchg
test
adc
ss
decb
or
les
lret
sti
shlb
xchg
jl
lcall
in
mov
cmp
aad
cltd
ljmp
xchg
jae
mov
daa
jge
repz
popa
add
mov
lret
jbe
stos
clc
loopne
call
loope
jmp
bound
and
dec
pop
insb
dec
gs
ror
cmc
or
sub
enter
das
add
and
neg
rorl
int
rcrl
stc
das
mov
mov
pop
ds
xchg
mov
dec
clc
mov
loop
dec
sbb
and
add
addl
ljmp
push
sbb
push
push
ficomps
add
pop
stc
inc
push
sub
dec
pop
pop
fcom
jecxz
and
inc
add
rolb
jmp
xchg
dec
ss
dec
mov
into
xchg
push
cmp
mov
mov
shrl
out
lds
addr16
das
int3
popf
add
mov
xor
add
add
or
mov
mov
fs
jno
into
iret
cld
jecxz
push
lcall
clc
cmp
and
cmpsb
ret
lretw
mov
ret
fcmovne
sarl
inc
fwait
test
push
leave
mov
mov
or
inc
inc
adc
dec
fs
mov
pop
push
sbb
nop
cwtl
sub
mov
imul
sub
in
rcrl
iret
xchg
iret
sbb
dec
dec
sar
push
into
lds
jp
shll
and
pop
xor
xchg
inc
in
fdivrp
in
push
jns
movl
roll
bnd
push
adc
fdivs
mov
dec
faddl
out
inc
pop
xor
cs
xchg
cmp
ficomps
push
jg
icebp
xor
fnstenv
cs
push
push
sub
cmp
xchg
add
lret
aam
xchg
and
fwait
in
clc
repnz
mov
testl
ss
add
and
mov
add
mov
fdivrl
aas
jmp
cld
sti
test
decb
lea
iret
or
pop
pop
adc
nop
rol
xchg
jl
or
pop
mov
or
enter
sub
xchg
adc
mov
pusha
add
jno
push
mov
daa
xchg
imul
dec
dec
cli
in
cmp
xlat
cmp
and
hlt
call
aaa
dec
or
jle
push
fnstsw
and
sub
mov
movsl
and
cld
lret
repnz
arpl
loope
in
or
clc
sar
push
jmp
adc
xchg
or
aad
lret
imul
int
clc
push
pop
hlt
mov
sub
outsb
pop
mov
xchg
cmp
or
cmc
sub
mov
jp
adc
pop
xchg
lea
or
mov
je
fucomp
cli
lret
lods
mov
jb
in
ljmp
jmp
out
addb
mov
int3
iret
xchg
popa
add
add
pop
mov
clc
sub
fnstcw
adc
xor
or
add
add
in
cltd
das
xlat
inc
or
stos
sbbb
sbb
test
into
iret
sbb
sbbl
std
pusha
adc
mov
or
cltd
cmp
adc
push
sbb
push
sbb
dec
repnz
cwtl
dec
js
dec
xchg
sbb
pop
push
cmp
xchg
sbb
rcll
push
or
in
lret
icebp
dec
mov
push
fdivrp
and
and
pushf
ret
imul
hlt
cs
shlb
add
mov
imul
and
int3
mov
jo
or
xor
cmp
sarb
inc
cmp
and
movsl
into
ss
fdivrs
add
outsl
jns
or
cld
push
sbb
rol
cmp
cmpsl
mov
xchg
mov
xchg
ja
add
mov
sub
xor
jp
shll
fmull
int
mov
mov
push
xchg
test
inc
lds
or
pop
jge
xchg
ja
decb
dec
fldenv
push
adc
xchg
xchg
lret
push
loopne
sahf
cmp
xor
inc
mov
sub
stos
pop
les
push
mov
ja
sub
sti
cmp
pop
fdivrs
add
popf
frstor
sahf
insb
xor
jae
sbb
mov
push
pop
fcomi
fsub
iret
lds
mov
into
xor
pop
cwtl
cmpsl
ret
inc
cmp
inc
mov
loop
pop
test
pop
inc
mov
lcall
adc
mov
or
sahf
test
out
mov
das
mov
mov
ficomps
dec
ljmp
xor
mov
xorl
aas
outsw
fnstenv
loop
mov
into
xchg
push
lcall
jle
inc
lea
imul
push
push
pop
cmp
sbb
push
adc
jecxz
or
mov
rol
cmp
lret
fidivl
jne
mov
test
scas
lods
fs
inc
push
and
cs
cld
inc
fbstp
fsubrl
mov
scas
sub
pop
cld
push
dec
das
fs
in
sti
sahf
inc
cwtl
jne
or
hlt
fs
popf
xor
jbe
adc
mov
and
aam
or
cmp
insb
mov
faddl
out
ja
in
dec
pop
fcoml
push
js
fsub
sbb
inc
dec
cmp
dec
mov
daa
sbb
outsb
add
gs
je
cmc
dec
cld
hlt
test
xlat
testb
push
mov
arpl
jns
mov
inc
sub
jl
std
cmpsl
mov
xchg
cld
add
nop
je
jno
cs
lea
pop
int3
insl
pop
ljmp
js
mov
outsl
sub
or
lret
inc
fimuls
sbb
je
sub
jo
int
sub
lock
and
mov
call
add
je
mov
push
mov
push
fisubs
leave
jb
xchg
xchg
jnp
sub
push
cmp
dec
add
add
mov
cmpsl
xchg
add
addr16
std
shl
mov
and
mov
jmp
movsb
dec
inc
push
data16
cmp
enter
pop
push
cmp
sahf
dec
ss
jg
pop
pop
mov
add
data16
aaa
pusha
adc
and
inc
iret
xchg
push
xor
fsts
iret
pop
mov
pop
or
push
xchg
mov
mov
xor
add
lods
pop
mov
js
lods
mov
mov
addr16
mov
pop
mov
lcall
cmp
jg
dec
js
cmc
hlt
xchg
push
sub
in
jmp
je
sahf
pop
cld
dec
fcoml
std
cltd
xor
mov
mov
adc
push
pop
push
fbld
xchg
dec
scas
inc
pop
flds
push
dec
add
sbb
and
inc
mov
jmp
adc
stos
outsl
and
sti
stos
stc
or
mov
mov
pop
xchg
sti
cwtl
ret
in
je
ret
stc
dec
inc
mov
or
sbb
outsl
jns
add
jle
popa
jp
roll
imull
out
loopne
out
jle
jg
push
test
mov
pop
pop
lahf
inc
fcoml
mov
sbb
and
cmpsl
add
gs
jmp
scas
stos
outsl
xor
push
xor
fisubrs
pop
dec
sbb
into
cmp
test
cmp
xor
inc
and
insb
in
pop
cmp
xor
insl
loope
and
ljmp
jp
andb
jmp
and
outsl
fs
inc
mov
jne
clc
pop
jns
xchg
mov
cmp
je
push
seta
insb
cmp
test
adc
mov
pop
rcll
fldt
adc
or
jo
sbb
lods
ret
adc
push
jno
shrb
dec
movsb
pop
outsb
dec
mov
jns
mov
adc
pop
push
in
cltd
or
fwait
nop
dec
push
mov
pop
push
bound
xchg
sub
or
loope
stc
sbb
movsl
push
xorl
inc
or
loop
sti
fnstenv
stos
pop
mov
push
pop
pop
or
negb
arpl
add
aam
lret
or
fisttpl
jns
mov
lret
sub
sbb
adc
shrb
ret
sub
js
cmovl
push
dec
jnp
hlt
daa
xor
adc
cmp
aaa
add
popf
sbb
jno
nop/reserved
sahf
sub
sbb
nop
cmpsb
insl
lret
stc
aad
push
dec
mov
loope
xor
jne
pop
rcll
mov
mov
jae
test
jp
pop
sub
rcrb
leave
lahf
pop
iret
jno
xchg
dec
fbld
mov
sub
aaa
call
leave
push
add
divb
jno
idivb
push
pop
mov
lods
push
push
inc
test
ret
out
fcomps
aaa
hlt
repnz
xlat
adc
fstl
in
lea
rclb
stos
aad
pop
idivb
pop
push
mov
insl
jnp
jecxz
cmp
adc
arpl
rorb
push
dec
mov
xchg
cld
jb
popf
xor
mov
xchg
lods
js
pusha
add
sbb
xlat
int3
xor
sbb
dec
pop
mov
stos
and
dec
out
sbb
fidivs
push
jb
aad
xor
sub
es
stc
aaa
pop
cmpsl
sbb
xor
push
addb
pop
add
leave
pop
movsb
mov
ljmp
inc
adc
mov
xor
mov
pop
and
scas
adc
int
sbb
rolb
xchg
lods
imul
push
sub
cs
loop
and
insl
sahf
shlb
movsl
sarb
xchg
xchg
stos
cmp
inc
jmp
dec
das
aas
inc
mov
jae
nop
scas
sub
cmp
mov
push
push
aad
aam
stos
mov
fldt
jo
popl
jmp
mov
xchg
out
and
push
add
jnp
push
inc
inc
jg
jns
lcall
loopne
cmp
cmpsb
mov
cmpsl
outsb
stos
adc
or
jne
pushf
adc
push
push
outsb
adc
mov
je
xchg
push
pop
pop
leave
lahf
pop
dec
jmp
mov
cli
aaa
cmp
clc
in
pop
jge
mov
shl
adc
shll
movsb
loop
add
push
jb
pushf
add
push
cmp
divb
mov
push
mov
daa
push
cmpsl
jge
adc
iret
jo
or
jo
pop
in
add
mov
adc
stc
xor
pop
inc
pushf
add
clc
movsb
xor
imul
fwait
inc
sbb
pop
dec
jb
imul
lret
push
cmp
xchg
ja
cmpsl
xlat
mov
addr16
dec
call
fdivs
subb
fsubrl
inc
aam
jbe
loopne
or
cwtl
sub
jno
jns
or
hlt
inc
jle
fwait
inc
jle
sub
jge
sub
fwait
sbb
and
sbb
shl
ljmp
sub
fildl
out
xchg
pop
jl
xorb
push
icebp
dec
imul
pop
sub
test
cmp
xchg
adc
cmp
mov
leave
adc
push
je
or
cmp
jns
ss
dec
sub
pop
xchg
es
cltd
leave
hlt
xchg
inc
ss
mov
outsl
xor
mov
cmp
mov
and
outsb
test
jmp
mov
cltd
jg
and
push
dec
pusha
ja
jo
mov
lret
sbb
sub
into
inc
mov
xlat
into
lods
or
pop
rcl
mov
sub
and
adcb
lea
sar
pop
sbb
sub
inc
and
shll
mov
mov
testb
repz
data16
sti
sbb
xchg
mov
or
push
jp
jp
dec
mov
icebp
push
movsb
fs
enter
cmp
dec
push
jne
ret
orl
mov
xchg
push
in
inc
pop
test
mov
fnstcw
mov
mov
inc
mov
in
mov
out
dec
ljmp
jge
mov
das
add
sub
push
adc
notb
jbe
mov
or
add
pop
or
and
movsl
jl
pop
test
out
nop
roll
notl
aaa
push
cmc
sbb
jp
popf
mov
imul
mov
or
xor
or
sbb
ja
jl
out
mov
cmp
jmp
sbb
jecxz
push
jmp
add
mov
mov
adc
push
popf
xchg
sbb
mov
push
push
test
jge
lds
adc
ret
and
divb
test
pushf
outsl
or
add
pop
and
call
sub
mov
add
shll
popl
push
cltd
in
fnstcw
push
test
in
add
push
out
sbbl
lock
dec
stos
mov
mov
cmp
mov
adc
ja
mov
aaa
jne
aaa
repz
xor
mov
addr16
sbb
inc
inc
pop
popa
cwtl
inc
pop
gs
sbb
xchg
jno
mov
jbe
into
jae
mov
shll
push
mov
cwtl
roll
ja
stos
push
jecxz
fwait
ljmp
imul
pop
lods
mov
inc
mov
jb
ss
out
mov
xor
push
repz
cmp
mov
aaa
pop
repz
pusha
inc
fcomip
mov
insl
sti
mov
sub
adcl
and
dec
push
aaa
cmpsl
orb
jo
fstpt
mov
mov
inc
outsw
das
add
scas
in
cmpl
leave
movlps
ja
xchg
ret
inc
aas
arpl
mov
push
shll
mov
lods
je
cmp
outsb
pop
pop
lret
jns
lds
cmp
sbb
das
mov
sbb
dec
fldcw
jnp
adc
imulb
and
repz
fstps
in
pop
std
sub
inc
dec
fnsave
mov
jle
pop
pop
jmp
cmc
repz
mov
dec
mov
mov
outsl
or
mov
lcall
shlb
pop
add
mov
push
ljmp
inc
repz
mov
sbbb
les
pop
dec
add
mov
jl
daa
mov
imul
mov
and
pop
pop
cmp
pop
ja
cld
cli
adc
xorl
jne
pop
pop
sub
or
neg
inc
mov
or
xor
in
adc
in
popf
sahf
push
out
pop
movsb
jae
xchg
fs
repz
jbe
movsl
mov
scas
fwait
ret
mov
jl
pop
int3
subb
lahf
in
mov
popl
test
push
icebp
mov
lcall
push
mov
xlat
mov
rcrb
pop
fsubs
je
sbb
out
cmp
fsub
rcrl
pop
test
xchg
out
inc
dec
lock
mov
insl
hlt
jp
daa
sets
pop
mov
icebp
push
jecxz
cmp
cld
adc
jge
inc
loopne
xchg
ljmp
daa
xor
test
or
dec
mov
insl
loop
fs
into
in
or
jo
push
xchg
fcomip
mov
lcall
adc
xor
cmpsb
outsb
sti
push
inc
push
pop
or
ficoml
jg
mov
pop
cmp
jbe
xor
push
xorb
dec
jg
pop
xchg
pop
cmp
push
outsb
ljmp
lahf
add
lahf
mov
fs
dec
sar
xchg
andb
sbb
add
lcall
xchg
mov
movsb
adc
jno
popf
outsb
loope
mov
rcrb
fldt
lahf
into
push
pop
add
add
add
xchg
and
shrb
repz
adc
leave
mov
addr16
jge
test
pop
xor
test
movb
xor
mov
cwtl
jl
in
cs
add
adc
adc
mov
xor
js
inc
cmp
lods
xor
cltd
jb
add
mov
ljmp
subl
jle
pop
ja
sub
decl
xlat
lock
and
push
jmp
lods
cmp
shrb
rolb
jno
or
xchg
and
outsl
pop
jmp
push
aaa
xchg
dec
lcall
dec
cmp
fcompl
inc
push
out
ja
movsl
and
sub
xor
sahf
repz
inc
int
sarl
lcall
mov
dec
data16
movsl
ss
scas
mov
notb
jge
mov
pop
sub
mov
adc
aas
mov
add
pushf
push
inc
outsl
out
xchg
cmp
pop
fistl
lcall
xchg
iret
gs
or
push
adc
sbb
sub
push
jecxz
leave
cmp
or
xchg
xor
ficoml
ffreep
xor
inc
sbb
xchg
ss
sbb
iret
push
jb
cmp
insb
mov
xchg
pop
stc
inc
xor
mov
arpl
jbe
lret
mov
dec
mov
cltd
lea
mov
das
add
nop
int
lahf
push
sub
cli
mov
leave
decl
push
in
xchg
int
add
aad
push
push
inc
movsl
iret
rclb
mov
cwtl
mov
cmp
stc
lret
jbe
popl
outsb
mov
fistl
sub
lods
out
rcr
jno
jl
in
stc
popf
xlat
int3
sub
and
insl
mov
mov
outsl
paddusw
jle
inc
js
mov
fsts
add
push
sub
scas
movsb
mov
loopne
mov
lcall
push
push
test
mov
dec
movsb
subl
aas
test
imul
mov
aam
out
iret
repz
dec
sahf
stos
mov
aaa
leave
outsb
fldl
divb
fsubrs
std
xor
cmp
mov
and
daa
jno
stos
xchg
inc
sub
sbb
and
push
loopne
bnd
mov
pop
pop
xor
loopne
push
outsb
sbb
jmp
int
xlat
cmp
and
cmp
imul
add
adc
xlat
lds
or
dec
js
sub
fsubl
push
sub
insl
jb
inc
leave
sub
xor
xor
test
rcll
push
dec
lods
jnp
aaa
loop
pop
insb
or
or
icebp
aas
sti
and
mov
iret
insl
mov
les
insl
aaa
data16
jp
sbb
push
fsubs
jmp
bound
adc
or
or
inc
add
xchg
loop
mov
push
nop
dec
iret
shll
mov
sbb
xor
into
adc
sub
pop
xlat
push
icebp
or
and
or
lcall
dec
popa
push
push
add
stos
movsl
das
rorl
and
or
das
adc
shll
dec
movsl
js
sub
sub
push
int3
jo
lcall
movsl
jge
inc
dec
inc
inc
mov
push
repz
add
fistpll
mov
adc
stc
mov
aam
flds
stos
test
and
fst
fdivs
in
test
push
or
inc
inc
push
mov
mov
iret
rep
flds
push
mov
lcallw
adc
push
mov
shll
xchg
mov
lret
lods
pushf
mov
push
outsl
jecxz
xor
jl
or
add
jg
insl
or
xor
imul
sbb
mov
inc
inc
sub
jmp
int
ret
aas
xor
ja
sbb
cmp
lds
ficomps
shrl
shll
adc
shl
or
subb
ds
js
xchg
je
fmuls
aas
mov
popf
inc
or
daa
mov
mov
jns
imul
mov
lock
cwtl
push
fsubrl
push
pop
scas
sbb
jl
sub
sbb
mov
aaa
or
das
not
in
jbe
mov
iret
inc
in
mov
cmpsl
dec
xor
ret
pushl
push
add
lahf
out
out
out
ss
push
push
lds
inc
dec
mov
movsb
dec
clc
aad
pop
movsb
imul
repz
adc
push
fbld
inc
or
cmp
shlb
idivl
fdivrl
xor
ljmp
inc
dec
ljmp
in
mov
sub
idivl
js
in
dec
xchg
cmpsb
bswap
or
adc
xchg
arpl
pop
sahf
into
dec
fwait
popf
stos
and
jo
cltd
xor
adc
mov
xchg
pop
sbb
insb
xlat
int
mov
xor
sub
jmp
push
or
xor
mov
sub
mov
mov
fstpt
test
sahf
sahf
xor
popf
mov
xor
in
leave
outsl
loopne
ljmp
sbb
sub
dec
stc
jecxz
cmp
mov
and
imul
lock
dec
gs
dec
or
cmc
scas
push
sub
cwtl
pop
xchg
scas
sarl
push
repnz
sub
test
push
or
sub
xchg
pop
fisttpl
loopne
sbb
ss
mov
adc
test
sbb
movsl
sub
push
loop
xchg
dec
xchg
mov
mov
pop
push
sarl
mov
nop
in
push
notl
shrl
lahf
inc
dec
cs
out
in
shrl
repnz
xchg
push
movsl
mov
imul
xchg
popf
push
movb
jae
ss
xor
adc
jle
push
mov
cmp
xor
or
loop
push
add
inc
in
mov
and
mov
jl
int3
dec
mov
mov
js,pn
fstpt
pushf
lds
and
int
sub
outsb
dec
stc
inc
addr16
lret
xor
jp
andl
add
into
std
sub
or
shrb
add
out
cs
shrl
mov
jb
ljmp
stos
rorb
popf
imul
mov
pushf
push
cli
out
clc
and
rolb
mov
adc
inc
or
mov
outsl
mov
int3
mov
lcall
jl
inc
cpuid
insb
addr16
mov
or
test
jecxz
leave
push
outsl
flds
xor
sub
jne
daa
dec
mov
vpaddd
insb
push
jge
or
daa
mov
movsl
xchg
leave
xor
cmc
enter
jle
jmp
jmp
jl
and
sub
and
pop
ja
arpl
mov
leave
cmp
push
incb
call
lea
pop
iret
ljmp
sbb
lods
mov
dec
ss
push
mov
adc
mov
adc
mov
repnz
and
push
mov
or
sub
aas
or
cmpsb
enter
mov
fsts
cmp
pop
or
or
xchg
ja
lock
lret
sub
jb
sbb
push
jbe
xchg
push
add
and
cmp
jg
jmp
cld
shrb
test
test
stos
cltd
cmc
aaa
iret
sub
pop
and
jo
cmpsl
jmp
outsl
inc
jbe
out
sub
sbb
push
mov
fisubs
push
in
sbb
iret
mov
adcl
fildll
and
inc
xor
cmp
out
jo
dec
jbe
fisttps
xchg
outsb
lcall
mov
xchg
dec
das
fcoml
in
flds
mov
in
lret
pop
js
jbe
or
repz
popf
fisubl
lock
xchg
cli
adcb
daa
adc
mov
cli
cs
sbb
inc
mov
xchg
or
bnd
xchg
xchg
mov
sub
sbb
adc
out
add
mov
testb
std
adc
fstps
mov
repnz
add
repz
cld
inc
or
add
jge
and
or
lret
jp
inc
add
je
stos
sbb
xchg
aam
xor
mov
fwait
shll
rolb
sbb
roll
cmp
mov
push
bound
dec
or
cmp
mov
leave
and
jg
jge
cmp
pushf
push
mov
mov
sub
mov
ds
bound
int
fstps
data16
xchg
ret
pop
loopne
inc
push
out
outsl
add
fiaddl
in
xchg
repnz
and
je
inc
js
in
nop
inc
fs
mov
pop
dec
ret
in
pushf
mov
jecxz
cltd
int3
lods
inc
jo
xor
ljmp
jp
mov
fadds
jmp
adc
test
lds
mov
adc
outsb
rcr
push
ret
dec
dec
roll
sbb
sbb
mov
repnz
ja
and
mov
stc
out
and
mov
int3
movsl
cs
cmc
jnp
dec
or
push
sahf
cmp
enter
push
dec
je
mov
cltd
insb
repz
jae
sub
into
ret
and
xor
in
ret
das
dec
push
arpl
jae
xchg
mov
pop
ret
lcall
ds
int
mov
lahf
pop
adc
in
dec
inc
xor
leave
and
jge
cmp
insb
sub
out
push
aad
mov
shlb
out
xchg
cld
sbbb
adc
sub
cmp
xor
push
cli
sbb
jnp
mov
lret
dec
movb
test
add
aad
imul
shlb
pop
mov
xor
push
sub
jae
mov
xchg
add
insb
arpl
add
jns
imul
and
xchg
das
pushf
mov
lcall
jae
pop
cmp
adc
testl
push
test
hlt
and
add
inc
inc
push
push
inc
andl
push
iret
cld
mov
out
xchg
cmp
jp
mov
loopne
mov
vcvtdq2pd
inc
xor
jle
push
push
fwait
sub
pop
or
sbb
not
les
pop
mov
pop
leave
movsl
std
cltd
movsl
pop
pop
enter
ja
push
and
mov
cmpsl
mov
fistpll
xor
jno
mov
push
push
pop
dec
divb
xchg
mov
insw
xor
xchg
push
cmc
cmp
inc
and
pop
dec
test
pushf
fs
adc
out
add
sub
push
or
mov
and
ljmp
pop
pop
bnd
push
push
mov
inc
push
les
js
mov
xlat
mov
mov
aad
or
cmp
sbb
pop
in
inc
mov
fs
adc
cmp
xchg
out
outsl
leave
or
pop
sbb
cmc
sbb
ss
fmull
ficoml
cld
pop
add
iret
cmpsl
rorb
sahf
ficoml
mov
rolb
adc
sbb
lock
movsb
out
xor
aas
dec
pop
push
and
int3
test
out
mov
daa
xor
jnp
and
andl
sahf
adc
jmp
stc
mov
fld
push
aad
fildll
dec
mov
or
enter
dec
fimuls
pop
call
xchg
insl
scas
cltd
push
shl
popf
pop
adc
repz
pop
addr16
call
dec
mov
fimuls
xor
mov
lret
test
dec
cli
jae
es
js
pop
gs
add
sbb
lods
mulb
add
movl
and
push
mov
add
cwtl
rol
pop
pop
ja
mov
push
mov
movsl
test
mov
mov
arpl
sub
lds
lods
leave
inc
aad
mov
push
mov
int3
xchg
lret
or
lret
mov
mov
loope
sti
lret
cmpl
mov
xchg
adc
inc
call
je
add
inc
ss
or
mov
xchg
das
pop
inc
adc
stos
pop
lea
loop
or
add
mov
or
push
xor
add
imul
inc
pop
aad
stos
sarl
incl
inc
sub
adc
orl
aaa
inc
jle
sarl
idivl
cmpsb
xchg
in
in
xchg
mov
nop
cmp
icebp
call
stos
push
inc
adc
insb
ret
xor
lods
mov
xor
negb
loopne
call
arpl
sbb
aas
repnz
scas
ret
adc
std
pop
sbb
dec
dec
fcmovnbe
push
sbb
aaa
sub
bound
jecxz
js
pop
xchg
aad
xchg
pusha
pop
es
outsb
cmp
outsb
xchg
sbb
movsl
xor
icebp
movsl
push
lret
jo
push
popf
or
popf
dec
mov
jns
add
push
bound
into
push
adc
nop
ret
xlat
xchg
insl
outsb
mov
hlt
fcompl
repz
xor
pop
push
imul
or
inc
xchg
jecxz
jmp
xchg
xchg
sarb
enter
xchg
stos
fs
mov
incl
loopne
xchg
shlb
cltd
ds
lods
jmp
and
sbbl
clc
cmp
shll
adc
dec
in
fndisi(8087
or
fwait
rep
push
inc
enter
jle
mov
cltd
aam
fadds
test
mov
xor
inc
sub
adc
mov
lods
cld
sbb
add
jae
inc
test
dec
arpl
pop
xor
mov
adc
and
nop
push
popa
xor
xor
push
call
or
jae
push
mov
lcall
push
jecxz
pop
xchg
mov
xor
out
dec
sti
lret
mov
xchg
sarl
js
sub
push
adc
dec
lret
ret
gs
pop
outsb
addr16
je
lret
or
test
jge
out
jno
mov
xor
insb
ljmp
hlt
cmp
out
movsl
mov
iret
add
or
jg
xor
stos
adc
fs
dec
mov
cmpb
popf
fwait
and
push
repz
leave
pusha
jmp
mov
aaa
ja
add
sbb
je
adc
push
cmc
cld
sbb
nop
lcall
adc
cmpsb
popa
adc
push
jge
push
out
out
push
add
fisttpl
rclb
pop
mov
cs
mov
shr
movsl
nop
mov
adc
jno
rclb
adc
and
pop
inc
insl
scas
mov
loop
scas
enter
lods
pop
and
push
inc
sbb
cld
xor
mov
sub
pop
test
inc
mov
in
add
xor
xchg
add
out
daa
in
or
cltd
outsb
subl
hlt
push
push
adcl
jbe
aam
pop
flds
jle
mov
test
or
int3
or
jb
cmp
add
test
xor
out
pop
cs
push
cmpsl
xchg
pop
lahf
and
rclb
mov
lock
cmp
imull
pop
mov
cld
xor
cmc
jns,pt
push
inc
out
lret
push
filds
xor
pop
les
sahf
ret
push
xor
pop
movl
mov
out
pushf
mov
add
test
jno
call
int
leave
arpl
js
call
lds
sbb
cli
outsb
add
push
popf
inc
sahf
pop
inc
push
scas
scas
je
mov
sti
dec
ja
inc
and
dec
roll
fisttpll
sbb
inc
push
nop
mov
push
out
mov
test
inc
or
push
cmp
push
std
push
push
data16
ja
adc
test
mov
jge
popf
popf
mov
cmpsl
or
fbstp
scas
pop
fs
pushl
fldlg2
movsb
adc
sbb
xor
mov
cmp
mov
stc
mov
jae
rcr
push
mov
int3
lock
pop
mov
in
mov
orb
int3
sub
inc
jmp
int3
fisubs
js
mov
lea
shrl
std
pop
mov
and
fstpl
cs
cli
cmpsl
sub
xchg
ljmp
pop
dec
jmp
enter
xchg
push
inc
mov
dec
imull
not
and
sbb
add
jns
fdivrp
fwait
sub
jbe
and
or
pop
pop
mov
ficomps
push
imul
xorl
jle
stc
outsb
add
leave
aam
shr
ret
cmp
adc
xchg
inc
test
mov
pusha
loopne
popa
dec
pushf
and
sbb
adc
popa
jg
addr16
pop
out
add
fisubrl
fdiv
fstpt
insb
rorb
fiadds
fxam
cli
adc
imul
insl
jae
pop
push
loopne
into
xor
cmp
xor
sub
stos
pop
hlt
pop
ret
mov
dec
repnz
or
int3
cmp
adc
push
lret
dec
popa
aad
fistps
dec
mov
add
fidivrl
cwtl
add
jmp
loope
out
add
cmp
pop
mov
jle
fwait
or
popf
sarb
insl
in
jns
scas
adc
jns
mov
adc
loop
outsb
insb
cld
push
push
mov
cwtl
pusha
popa
and
movsl
repnz
test
iret
mov
flds
mov
and
nop
push
inc
pop
add
popa
mov
jecxz
sub
in
pusha
out
jnp
outsl
lcall
fsubs
add
imul
dec
and
jnp
jne
hlt
fs
pop
lahf
popf
pop
xor
dec
cmc
scas
ljmp
jb
mov
dec
stos
cs
xlat
jno
aaa
inc
mov
push
push
insl
in
add
mov
dec
negb
and
xor
xor
outsb
inc
shlb
jns
gs
std
subl
repz
inc
or
in
push
adcl
add
out
and
adc
enter
adc
mov
fldz
shr
aas
out
adc
in
inc
andb
push
xchg
lea
xchg
inc
sub
xchg
mov
push
or
loopne
das
adc
aam
insb
jbe
loope
xchg
ss
leave
repnz
and
sbb
jne
es
das
imull
mov
dec
inc
pop
push
loope
pop
loopne
pop
rorl
loopne
das
jno
rcr
jge
mov
jne
jae
inc
repnz
dec
aas
mov
cmp
mov
or
mov
mov
xor
mov
push
sbb
sbb
jecxz
sbb
jns
push
icebp
test
and
les
cmp
ss
repz
xchg
mov
mov
sub
repnz
ds
insl
das
cmp
lods
loopne
mov
into
xorl
clc
adc
sub
lods
xorb
cs
jg
jae
push
std
and
mov
mov
or
in
and
and
icebp
cmc
pop
xchg
mov
push
popa
cld
popf
pop
lea
repz
fldt
cld
mov
dec
dec
or
add
jl
sbb
lods
daa
or
lea
lea
jle
test
mov
into
mov
shl
ret
aad
out
lds
cmc
mov
cmp
cmp
inc
add
dec
sub
mov
dec
iret
jne
ficompl
pop
xor
addb
int
int
mov
pop
and
rcll
negl
ljmp
inc
cmpsb
mov
xchg
push
icebp
lcall
inc
xor
stos
leave
fmull
inc
jmp
test
xchg
sub
dec
and
pop
iret
jecxz
sbb
testl
imul
jp
or
daa
ret
negb
and
lcall
shll
ret
mov
push
jmp
xchg
jb
int3
imul
test
sbb
ficomps
mov
idiv
inc
or
xchg
add
mov
mov
adc
daa
pop
add
jmp
sbb
sbb
mov
pop
andl
mov
cmp
lock
sti
sti
pop
out
shl
int3
push
adcb
repz
mov
in
int
mov
mov
cmp
pusha
gs
enter
stc
cmc
push
push
and
jg
lods
ss
and
dec
aam
and
jge
jp
xchg
xchg
or
rclb
sub
nop
jge
daa
or
out
stos
sbb
dec
int3
or
lcall
lcall
mov
mov
dec
adc
int3
push
jle
cmc
hlt
cmp
push
jb
ret
fs
out
cmp
xchg
vmovsldup
into
incb
jmp
sbbb
fcoms
cmpb
sub
dec
jnp
xorl
adc
loope
jns
mov
push
add
imul
jns
mov
loope
adc
test
xlat
xlat
jp
and
jle
inc
shrl
xchg
sbb
or
aad
into
ret
std
xchg
js,pn
int
fdivrs
arpl
push
xchg
xor
outsl
sub
pushf
jb
adc
testl
daa
and
pop
shll
pop
jb
nop
sub
mov
rclb
xor
pop
lock
mov
fldt
mov
mov
mov
stos
sbb
ljmp
ss
in
jle
frstor
mov
jae
enter
pop
loop
stos
xchg
jg
popf
sbb
pop
lods
cmp
pop
xchg
mov
dec
lods
bound
cmp
mov
dec
jnp
add
jns
popfw
dec
out
pop
dec
gs
mov
and
jne
roll
out
out
and
sarb
dec
dec
jp
leavew
pop
or
fstpl
imul
push
mov
pusha
push
aad
stc
mov
cli
dec
jbe
lret
cmp
cmp
ret
cmp
js
hlt
cmpsl
sub
jns
std
loop
adcb
jb
jns
loope
sub
dec
js
inc
dec
cmp
sub
outsb
jle
fdivl
dec
lret
lret
jb
rcr
push
cmp
push
dec
js
adc
sahf
jmp
jl
cmp
pop
xchg
imul
add
jne
clts
sbb
gs
mov
jg
sbb
inc
push
cmp
sti
mov
out
shll
in
scas
mov
mov
divb
and
jge
daa
jl
mov
fwait
leave
and
sbb
sarl
or
sub
dec
lret
inc
idivb
xor
adc
data16
int
data16
dec
add
inc
pop
loope
pushf
mov
shr
sub
pop
mov
fwait
inc
ret
pop
mov
xchg
xchg
loop
daa
outsb
fwait
xor
stc
fmulp
push
fisttpll
mov
hlt
sahf
popf
xchg
mov
sbb
sahf
sub
xchg
mov
mov
sub
cmc
fwait
pop
mov
jle
mov
in
adc
cli
sbb
adc
lods
sbb
mov
and
loop
rol
xchg
adc
cmp
adc
ljmp
jo
cmp
jno
cmp
jo
inc
dec
in
loop
mov
mov
sbb
mov
into
fildll
cmc
insl
xchg
in
push
aaa
cmp
cwtl
je
popf
mov
inc
jbe
ljmp
lods
stos
repz
outsb
push
push
sub
xchg
movsb
out
fucomip
jo
popf
inc
mov
xchg
int
test
and
sbb
dec
pushf
mov
sar
repz
into
cmc
fwait
cmp
adc
xchg
pop
mov
es
or
cmp
inc
pushf
jb
xchg
roll
mov
and
push
and
shlb
xchg
adc
push
add
daa
lcall
enter
xchg
mov
mov
pushf
repnz
mov
push
or
pop
subl
outsl
mov
ds
mov
push
dec
push
add
aad
jecxz
jmp
mov
add
into
xor
and
mov
or
and
jl
pop
sub
pop
rclb
mov
inc
mov
leave
ret
and
mov
test
dec
mov
daa
push
das
cmp
xchg
lods
pushf
push
out
out
inc
xchg
ret
or
int
or
call
cli
hlt
in
cmp
add
sub
sub
ljmp
mov
push
outsl
and
scas
push
mov
cmp
mov
popf
mov
push
add
pop
fisttpll
nop
and
adc
inc
and
mov
sub
cmp
std
repz
adc
imul
inc
daa
mov
add
cmc
mov
mov
xchg
mov
cmp
inc
sbb
push
push
out
sub
mov
xchg
in
push
jno
xchg
add
dec
loope
call
mov
repz
sbb
fiadds
sbb
out
adc
das
pop
addr16
push
push
call
add
sbb
inc
negb
push
mov
mov
stos
add
pop
xchg
and
push
dec
mov
mov
in
cs
std
neg
jl
pop
mov
sbb
adc
sub
std
push
in
cmp
in
mov
cmp
mov
iret
pop
pop
push
jae
into
mov
insl
lods
push
dec
pop
jge
add
je
pop
jae
mov
lods
add
data16
loop
insl
push
jno
addr16
stc
lods
xor
sub
adc
inc
add
out
mov
mov
pop
sbb
pop
xchg
lahf
insb
nop
adc
mov
adc
adc
aam
pusha
stos
movsb
sahf
in
movsl
push
mov
dec
bound
inc
push
out
gs
cmp
and
sbb
dec
mov
jnp
mov
popa
sub
rorb
jge,pt
cs
push
cmp
daa
mov
xlat
lcall
rcr
pop
test
push
jl
push
sbb
xchg
imul
mov
sbb
lcall
inc
daa
out
cmp
add
jle
adc
sub
loope
fwait
push
mov
xor
sar
mov
mov
mov
push
pop
lds
daa
repnz
mov
imulb
sahf
aam
xor
mov
add
pushf
sub
jge
sti
stos
imul
fidivrl
leave
hlt
xchg
movsl
aad
hlt
fisubs
sti
out
ret
repz
xchg
sub
add
hlt
pop
xor
xchg
bound
adc
popf
repz
sub
dec
orb
ret
data16
pop
dec
or
jecxz
fdivs
jmp
xor
push
inc
lock
jmp
mov
outsb
xchg
jp
and
add
movsb
cltd
dec
lahf
inc
cltd
fbld
push
mov
jp
mov
jns
or
lret
adc
hlt
mov
sti
and
mov
push
clc
mov
mov
xchg
lea
xchg
mov
sbb
ret
sbb
mov
xor
fsubl
push
iret
pop
out
dec
push
or
xchg
mov
outsb
inc
fucom
scas
xor
adc
push
outsb
jle
add
jmp
dec
cwtl
dec
jle
push
and
mov
cs
or
je
push
inc
pushf
stc
sub
sub
pop
xor
shlb
pop
repnz
out
test
lods
xor
iret
or
cmp
and
dec
jns
ljmp
mov
dec
imul
xchg
pop
xchg
lods
out
pop
pusha
pop
dec
xchg
std
pop
fsubl
push
dec
cmp
les
xchg
adc
stc
cmp
xchg
pop
mov
lret
or
pop
into
mov
add
and
adc
adc
out
iret
mov
mov
jge
in
push
cmp
mov
or
scas
cmc
clc
daa
lock
inc
stos
sub
inc
jecxz
sub
jle
mov
cmp
das
lods
lcall
sbb
pop
pusha
notl
or
inc
inc
mov
dec
mov
bound
jecxz
jbe
das
fadds
or
fcmovnu
adc
add
inc
in
adc
iret
push
cmp
lock
and
mov
xor
mov
mov
outsl
pop
xchg
jb
adc
sub
int
cmp
mov
or
cwtl
scas
scas
in
and
dec
inc
jecxz
and
in
loopne
dec
sub
addr16
mov
mov
out
cmp
add
mov
pusha
pop
and
test
push
lds
gs
mov
push
out
jecxz
stos
cmc
ror
mov
dec
xor
and
push
xor
adc
pop
push
mov
or
sub
xor
outsb
mov
popa
xor
aad
inc
push
inc
adc
sahf
xor
jb
mov
addl
push
cmc
pop
es
pop
call
arpl
mov
sbb
and
shrl
nop
cmp
sahf
xlat
dec
sahf
pop
int3
cli
and
repnz
dec
stos
mov
aad
pop
dec
jmp
fs
push
or
push
test
lods
mov
ret
scas
loop
pop
cmc
or
movsl
stc
inc
dec
fldenv
sub
push
insl
sbb
les
gs
rcrb
lahf
arpl
out
add
pop
or
inc
ss
lods
sub
cs
test
icebp
std
dec
sbbl
xchg
int
and
ret
cmp
sahf
mov
inc
aas
iret
cmpsb
inc
sahf
out
and
or
inc
loop
inc
rclb
add
enter
les
lods
lcall
xor
push
sub
xchg
rcrl
test
stc
lret
pop
inc
cmp
fsubl
dec
idivl
push
scas
cmova
mov
std
or
pop
imul
or
cli
dec
cltd
and
sub
xchg
femms
add
add
dec
push
cmp
mov
in
stos
lret
mov
jne
int
adc
jl
iret
es
sbb
adc
test
mov
add
jmp
cli
adc
or
mov
jp
call
adc
adc
call
mov
call
inc
stc
mov
add
mov
mov
stos
push
add
push
fldcw
ja
cmc
popa
clc
mov
xor
clc
fsubrl
or
jmp
pop
aad
imul
push
clc
mov
sahf
mov
outsb
or
int
in
js
jns
mov
or
in
and
out
add
mov
inc
cmp
add
pop
pop
xchg
std
sbb
nop
push
les
mov
hlt
add
fildll
jnp
pop
int
adc
stos
adc
sub
cmc
mov
std
xchg
test
and
jno
jo
loope
jnp
dec
ret
int
dec
jns
daa
gs
and
fld
daa
add
jecxz
popf
mov
push
mov
cmc
sbb
inc
xlat
add
push
xor
pop
inc
and
ss
je
fst
sbb
imul
shll
loope
mov
lret
mov
pop
inc
adc
dec
outsl
dec
sarb
sub
or
xchg
in
cmp
push
aam
xlat
lds
mov
and
jmp
faddl
xchg
fwait
pop
into
jnp
ret
xlat
loopne
stos
mov
repnz
mov
adc
sub
sbb
sub
idivl
push
sbb
jbe
in
jge
sub
test
pusha
in
sub
dec
insl
sbb
xlat
iret
insl
and
push
leave
fwait
push
pop
add
push
jg
sahf
mov
jp
ret
dec
adc
fs
mov
sti
push
fucomi
sbb
mov
lds
xor
call
les
subb
insl
push
dec
popf
adc
insb
data16
sbb
jl
sbbb
js
add
in
sbbl
call
add
jns
push
aaa
sahf
out
hlt
stos
movsb
imul
arpl
gs
sbb
lds
in
push
inc
add
gs
dec
xor
add
insl
cmp
fistps
dec
push
ss
in
jecxz
sub
xchg
addr16
xor
mov
pop
aaa
sahf
xor
movb
pop
xchg
and
and
rcrb
xchg
and
mov
xor
push
xchg
int3
je
sbb
pop
aaa
ljmp
dec
push
adc
mov
pop
ret
or
sbb
adc
les
cs
or
arpl
in
jmp
adc
ret
mov
adc
sub
and
fdivp
add
mov
or
push
imul
hlt
andl
mov
pop
shll
hlt
and
mov
jbe
in
cmp
rclb
test
push
push
iret
sbb
push
sbb
ret
jl
insl
mov
adc
aaa
cmp
push
lret
add
xor
adc
insb
faddl
adc
mov
push
push
hlt
push
into
shrl
in
dec
push
cli
cs
dec
mov
icebp
sbb
cwtl
or
cld
pop
xchg
add
insb
adc
xchg
rcr
pop
daa
mov
sub
mov
mov
xor
je
in
insl
fisubrs
and
repz
cwtl
fcomi
dec
dec
mov
dec
test
hlt
arpl
and
daa
dec
inc
ja
nop
fcmovnbe
pop
scas
jae
cmp
pop
cmp
xor
dec
or
mov
cltd
inc
inc
mov
mov
mov
xchg
xchg
cmc
cltd
add
cmovnp
cltd
push
mull
fldenv
shrl
xor
sub
test
mov
xchg
fs
xchg
pop
ja
jae
ficoml
xor
adc
mov
adc
jecxz
ss
popf
add
inc
pop
popf
jp
jae
mov
push
mov
adc
loop
gs
pop
sarb
jo
in
adc
aas
clc
adc
aaa
sbb
fdivrs
mov
ficompl
adc
add
jp
adc
insb
pop
sarb
jmp
shll
cld
fisubl
es
fsub
mov
push
shlb
dec
stos
sub
gs
pop
test
lret
mov
sub
test
lea
je
push
xchg
and
outsb
pop
cld
sbb
ds
xor
lods
cli
and
cmp
lods
rcl
clc
and
and
push
jecxz
imul
mov
cli
out
dec
test
pop
and
mov
mov
aam
dec
movsb
jp
out
cwtl
rcl
stos
lods
loope
imul
outsb
int
push
pushf
mov
out
test
sbbb
addr16
aam
je
jecxz
and
push
pop
inc
mov
test
insb
pop
rcll
popf
mov
repnz
mov
aaa
mov
adc
cmpsl
jnp
sub
sbb
insl
pop
lret
and
add
lahf
cmp
xor
movsb
adc
cltd
add
ljmp
clc
sub
test
out
int3
jmp
xlat
inc
rcll
xchg
xchg
mov
cs
or
dec
dec
jb
push
mov
push
test
fidivs
iret
jle
xchg
and
iret
outsl
adc
xchg
adc
push
jns
in
cld
mov
or
mov
push
jmp
or
clts
sub
call
outsl
ss
cmpb
das
cli
repnz
push
ljmp
cwtl
add
jg
sbb
and
in
sbb
je
or
mov
hlt
push
cld
xchg
icebp
in
ret
jge
mov
ret
sub
xlat
pop
mov
popf
dec
xor
lret
cwtl
dec
and
add
jmp
sahf
pop
scas
es
add
sub
jp
add
stos
outsb
dec
sbbb
shl
add
cltd
adc
fldt
pushf
gs
push
mov
dec
les
mov
test
fwait
cmp
fcmovnbe
lock
sbb
jb
mov
inc
jbe
mov
and
lods
or
cmp
cwtl
shr
dec
stos
jne
mov
in
test
ret
fldl2t
sub
and
in
xchg
loop
insb
stos
cmc
negb
push
mull
dec
and
in
push
dec
add
jnp
inc
or
push
jg
inc
aam
pop
adc
sbb
and
jl
pop
shlb
pop
and
mov
mov
pop
add
in
pop
fldl
jmp
ja
sbb
sarl
cmpsl
mov
jp
xor
sub
or
xchg
std
lahf
mulb
push
pop
daa
mov
addr16
adc
pusha
scas
push
dec
cmp
and
scas
rcrl
jnp
arpl
xor
push
test
pushf
add
xlat
add
push
enter
clc
push
inc
add
sahf
lret
test
lds
and
add
and
mov
mov
cmp
mov
sbb
out
dec
clc
outsb
mov
pushf
cwtl
mov
push
fisubl
push
ds
pop
inc
aam
cmp
fs
add
jne
cli
lock
xchg
loop
decl
push
xchg
push
jmp
fnstcw
rolb
lret
out
sbb
mov
push
cmp
mov
outsl
pop
sti
int
or
fs
push
adc
out
mov
pop
xchg
push
in
subb
mulb
je
cmp
outsl
or
subl
push
xor
jo
sub
lcall
mov
nop
fbstp
push
call
imul
adc
sub
sub
aad
jl
jb
jno
test
mov
icebp
dec
ss
decb
out
jg
xor
push
stos
fcomps
mov
jp
cld
dec
loope
mov
nop
sub
add
sbb
cmp
lods
neg
or
mov
leave
jge
sti
add
addr16
lods
aad
pop
sub
out
sub
adc
outsl
dec
lds
adc
mov
sub
and
test
sub
xor
xor
adc
adc
add
dec
movsl
cmp
cmpsl
mov
pop
pop
shll
out
xorb
dec
add
mov
insb
cmpl
in
out
cmp
cmp
nop
movsl
add
fcoms
add
add
je
cli
adc
nop
mov
xor
jnp
jbe
daa
arpl
inc
jae
xor
loope
pop
popf
fwait
cwtl
test
nop
jnp
test
ficoml
outsb
cld
insl
sbb
add
jle
xchg
pop
lret
sbb
je
xor
dec
hlt
roll
test
mov
pop
jno
xchg
addr16
insb
cwtl
inc
fwait
movsl
out
dec
cmp
fs
sahf
jg
xor
shlb
cmpsl
push
xor
cmp
ret
dec
cmp
movsl
xchg
dec
mov
sbb
jge
xchg
xor
vmulps
pop
fidivs
stos
mov
and
push
dec
cmp
jmp
xchg
scas
scas
fsqrt
and
sbb
fs
xchg
aaa
shlb
inc
mov
fldcw
mov
sub
hlt
mov
int
dec
rclb
cmp
cld
enter
pop
icebp
hlt
push
sub
movsb
nop
pop
mov
scas
xor
lea
mov
xor
rol
inc
and
mov
xchg
and
sub
inc
dec
sub
xchg
sbb
in
push
jnp
clc
push
sbb
das
movsl
in
mov
pushf
dec
imul
xor
repz
push
fwait
in
push
in
push
adc
inc
in
jecxz
in
clc
lock
push
xchg
ja
sahf
loopne
pop
mov
or
cmpb
scas
fldenv
cmpsb
test
clc
sbb
fadds
dec
outsl
imul
and
jl
mov
icebp
cwtl
push
xchg
je
adc
iret
repnz
stc
cwtl
mull
add
lcall
and
repnz
out
push
sub
adcl
sti
mov
adc
pop
pop
mov
or
pop
stc
mov
push
and
jl
lods
stos
movsl
mov
adc
xchg
push
es
insb
imulb
lods
mov
out
push
or
lcall
push
lds
add
sbb
fcmovb
xchg
add
clc
popa
mov
movsb
subl
gs
push
add
out
adc
fcomp
outsl
jnp
mov
gs
insl
mov
scas
xor
xor
xor
sarb
push
cli
test
mov
lcall
mov
leave
stos
cmp
mov
and
jge
or
sahf
jecxz
xchg
xor
push
sbb
ss
push
xchg
movsb
popa
insb
add
lods
aam
inc
mov
pusha
mov
ret
jg
out
leave
popf
mull
xor
mov
cmp
ds
out
cwtl
stc
push
test
add
mov
loopne
bound
lods
jle
add
cmp
push
cmp
aas
mov
arpl
jae
inc
or
adc
pop
sub
or
popa
leave
aad
push
cmp
pop
jecxz,pn
xor
cmp
mov
imul
repnz
fcomp
icebp
outsl
cltd
and
jg
sbb
stc
add
iret
lahf
sub
repz
test
mov
xchg
adc
imul
or
mov
out
and
lds
mov
pop
mov
arpl
lods
in
inc
outsl
pop
or
jp
jae
jns
mov
inc
das
xchg
mov
enter
pop
mov
dec
lods
mov
push
push
push
pop
rcrb
test
lods
xor
push
sbb
imul
call
inc
shll
lcall
sti
mov
movsl
or
arpl
push
ljmp
pushf
loop
lods
ljmp
in
dec
lods
out
imulb
repz
xor
pop
stc
mov
push
jp
inc
sub
mov
inc
movsb
sub
push
add
stos
mov
push
in
mov
fisubrs
int3
xor
shrb
nop
xorl
pavgw
add
pop
enter
or
daa
cltd
jle
add
push
lods
dec
mov
sub
push
jne
jno
push
pop
ret
adc
or
daa
bnd
insl
cmp
sbb
pop
call
add
pop
jecxz
into
xlat
jmp
fmull
xchg
push
fadds
sbb
add
ja
jo
insb
pop
xchg
inc
inc
mov
dec
stos
aas
hlt
call
inc
xor
inc
stos
sbb
icebp
mov
mov
xchg
add
mov
add
mov
hlt
ljmp
lods
lds
mov
das
fdivrs
call
leave
test
pop
jne
push
stc
dec
adc
pop
es
incb
std
jae
or
shlb
add
mov
adcb
nop
add
and
sbb
push
dec
xor
fidivrl
xlat
les
add
sbb
int
push
into
mov
movsb
cs
mov
xor
in
mov
or
test
pusha
lea
sub
fwait
dec
jge
cmpsl
mov
cltd
stos
sti
aaa
cli
leave
sub
sbb
xorl
xchg
xchg
ret
cld
mov
mov
dec
out
repnz
cs
or
mov
sub
and
les
sbb
pushf
inc
popf
mov
jae
and
mov
sbb
sahf
mov
std
and
loope
pop
or
imul
fimuls
sbb
adc
out
ljmp
jbe
and
xor
sbb
sub
xchg
cwtl
xchg
scas
pushf
lods
icebp
add
fnstcw
pop
mov
mov
das
cwtl
out
xor
stos
adc
lods
adc
cmp
cmpsl
add
cmpsl
mov
xor
insb
or
mov
mov
xor
mov
cmp
fs
adc
xchg
std
push
dec
in
push
out
jns
add
jnp
adc
call
out
ljmp
dec
mov
cli
jne
dec
mov
daa
iret
int
xchg
loop
pop
test
push
mov
cmpsb
xchg
adc
mov
or
scas
lret
and
fstl
out
icebp
cmp
test
inc
push
fs
stos
jb
jmp
and
jne
jmp
pop
fwait
icebp
fwait
arpl
roll
daa
scas
or
imull
jp
jo
jl
leave
cmp
js
jb
sbb
cmc
pop
adc
inc
bound
push
pop
subl
fsubs
imul
lret
movsb
or
or
out
notb
jle
dec
or
fldt
jb
outsb
call
repnz
mov
adc
adc
push
sbb
out
iret
push
add
add
ja
ljmp
push
insl
jp
out
xchg
xor
and
adc
sbb
dec
es
cmp
in
adc
js
insb
pop
lock
sub
xchg
xchg
jbe
jmp
pop
cmpsl
test
push
in
imul
xchg
xor
cli
fmul
test
pop
or
xchg
and
xor
mov
loope
adc
add
push
xchg
cmpsb
jno
push
inc
dec
push
sub
push
lods
movsb
loop
mov
fcoml
inc
cltd
pop
mov
mov
jl
jl
pop
mov
loopne
adc
das
das
push
push
aad
andb
je
shl
or
out
mov
mov
pop
sub
scas
adc
and
repnz
bound
loop
push
add
xchg
popa
mov
insb
sbb
divl
aam
jecxz
jmp
dec
jnp
fs
pushf
jo
repnz
xlat
test
jbe
rcrb
pusha
xor
cwtl
js
leave
push
dec
out
stos
data16
stc
pop
outsb
or
adcb
scas
icebp
pop
add
push
rolb
sbb
test
in
je
cwtl
icebp
adc
xchg
ja
das
and
pop
sbb
fcomps
addl
filds
sub
mov
adc
out
sub
mov
push
xor
mov
sti
push
or
add
arpl
arpl
repnz
jbe
cwtl
inc
sbb
mov
orb
dec
frstor
aam
pop
mov
ds
cld
arpl
add
subl
pop
ss
dec
xchg
add
sbb
shll
jecxz
test
mov
jb
or
inc
test
sub
mov
lcall
or
jns
dec
lahf
mov
repz
pop
mov
dec
cli
ret
mov
lea
cmp
push
icebp
sbb
inc
scas
dec
adc
lret
cmc
pop
xor
xor
jo
pop
dec
test
mov
push
cld
out
shrb
aad
adc
mov
jle
jmp
and
adc
xor
xor
adc
cmp
pop
fnstsw
sbb
mov
pushf
test
aam
hlt
clc
roll
cwtl
das
js
scas
cltd
lcall
sbb
jno
xchg
cmp
lods
mov
out
cmp
sub
sbb
fs
jne
into
inc
pop
jecxz
sti
emms
scas
inc
subl
jge
mov
cld
push
mov
gs
xchg
xchg
cs
cmpsl
sub
std
xor
pusha
mov
jmp
pop
dec
inc
cld
lret
mov
sbb
jae
xchg
lret
repz
xchg
outsl
rorb
lahf
xchg
xor
rcl
cwtl
shl
mov
inc
pop
inc
das
mov
scas
insl
in
or
ret
movsb
push
js
push
mov
popa
mov
mov
rol
les
sub
mov
ja
cwtl
pusha
rorl
scas
add
or
cmovo
inc
xchg
mov
fnsave
gs
jo
pop
into
pop
arpl
sub
or
jnp
or
stos
mov
int3
fwait
push
jae
sbb
xor
and
push
inc
and
push
movntq
out
jns
dec
and
xor
ret
xchg
lods
mov
mov
inc
scas
outsb
fs
xchg
jg
aam
add
repz
test
or
dec
ja
sbb
dec
and
popf
out
xor
clc
loop
push
rcll
sahf
addr16
repnz
jmp
adc
dec
jecxz
fsts
incb
enter
out
std
jmp
out
mov
cmp
mov
mov
pop
testb
lock
jp
sar
jl
mov
sbb
fildll
mov
xchg
test
arpl
mov
adc
adc
in
dec
leave
leave
orl
js
pop
sub
in
subl
mov
daa
cmp
push
add
ja
push
mov
mov
push
shll
cmp
pop
cmpsb
pop
fstps
loopne
outsl
push
cmpsl
cwtl
or
cmp
sbb
adc
mov
push
jae
jne
cmc
fstpt
xchg
incl
add
pop
nop
arpl
cwtl
pop
add
js
mov
cmp
inc
push
pop
lahf
in
or
pop
js
xor
pop
rol
xchg
loopne
dec
push
add
test
in
stc
dec
push
sbb
incl
mov
inc
das
lea
fwait
js
mov
xchg
sub
or
fidivl
rol
rol
or
xchg
jnp
dec
push
loop
jnp
test
movsl
popa
adc
xor
rcrl
lods
inc
out
push
leave
repnz
sbb
jl
les
jge
ja
sbb
jmp
adc
push
loope
ljmp
loop
fcmovne
std
mov
push
mov
mov
pop
daa
cwtl
pusha
leave
xchg
insb
roll
rcll
sbb
subl
sbb
inc
inc
test
cmp
sbb
pop
movsb
inc
shlb
cmpb
cmp
inc
in
mov
dec
xor
loope
lret
popf
arpl
pop
out
push
push
sbb
adc
arpl
mov
std
out
mov
or
repnz
std
call
lcall
ficomps
bound
xor
loopne
pushf
call
pushf
jmp
jo
dec
lret
push
out
mov
mov
adc
push
rcrl
mov
repz
push
cmp
dec
in
les
int3
loop
cwtl
sub
jne
inc
sub
pop
lahf
xor
out
inc
sbb
xchg
and
mov
pop
daa
jecxz
mov
and
xchg
stos
sbb
shll
mov
bnd
jle
inc
add
mov
inc
sbb
sahf
js
xchg
pop
or
and
lea
insb
fcoms
and
lods
popl
jns
xchg
adc
inc
cmpb
mov
sar
scas
cmpb
xor
and
arpl
push
bound
inc
add
repnz
jle
cmpsl
in
dec
mov
loope
imul
add
call
in
daa
mov
dec
xchg
xchg
ffree
arpl
fyl2x
adc
outsb
mov
arpl
xchg
jns
jno
push
rcrb
mov
mov
pop
jae
or
xchg
inc
enter
dec
mov
testb
mov
mov
cmp
hlt
ret
fcoml
nop
popf
jne
jnp
xchg
xchg
pop
pop
dec
adc
mov
and
mov
push
add
fistl
loope
add
int3
rcr
mov
sbb
inc
cli
inc
inc
out
push
cwtl
call
int3
cmp
into
jmp
nop
lcall
outsb
lods
test
dec
xor
xor
lock
xchg
or
out
sti
cwtl
push
mov
push
ret
add
inc
xchg
idivb
lret
popa
or
aas
out
hlt
and
sbb
add
adcl
loope
icebp
mov
aas
das
mov
sub
dec
js
out
sbb
and
sbb
cmpsl
mov
icebp
mov
in
popf
pushf
dec
movlps
push
cwtl
or
fsubr
ffreep
and
cmp
mov
subb
xor
pop
cmp
cmpsb
sbb
dec
inc
sub
jbe
popw
lds
clc
mov
pop
mov
addr16
mov
jnp
adc
sbb
push
push
sbb
xchg
cmpsl
xchg
cmp
repz
push
std
xor
jmp
xlat
iret
xchg
mov
jge
push
sysexit
push
push
out
mov
out
or
xchg
sub
cli
outsl
inc
and
adc
pop
mov
ror
or
sub
insl
scas
or
xchg
mov
xchg
scas
dec
ljmp
andb
cmc
cmp
pop
push
mov
push
pop
inc
ss
xchg
mov
and
xor
jg
fcoml
inc
test
mov
adc
mov
pop
in
xlat
sbbb
mov
fldt
scas
call
mov
cs
stos
mov
test
mov
hlt
push
xor
pusha
or
or
mov
lock
cmpsl
add
xchg
and
rcrb
loopew
mov
dec
fidivrs
movsb
jae
dec
sub
xchg
popf
sub
sbb
test
mov
fwait
test
stos
push
aam
int
aam
cltd
or
push
js
fldt
inc
pop
imul
insb
mov
ret
jnp
iret
or
mov
movsb
fisttpl
mov
or
or
push
leave
loopne
pop
mov
imul
xchg
out
inc
pop
dec
fs
nop
xorb
aas
xlat
incl
jl
or
rorl
jmp
add
lds
cmp
xchg
fsubrl
aam
loope
sub
jae
pop
dec
jp
or
aad
cmp
sbb
andl
jnp
aaa
hlt
add
or
cmpsb
sarl
mov
push
mov
ja
pop
mov
int3
icebp
push
add
mov
leave
sub
rcrb
pop
mov
xchg
lea
out
cld
xchg
movl
pushf
in
lds
sub
leave
adc
stc
outsb
mov
or
cld
pop
mov
sbb
add
mov
xor
adc
dec
lods
adc
sarl
pop
sar
popf
in
mov
dec
mov
sub
xchg
add
pop
add
je
and
mov
mov
lock
enter
adc
jae
rcll
jnp
and
adc
out
xchg
addl
ja
les
and
adc
or
push
cmp
pop
pop
xlat
stos
out
pop
out
adc
sbb
dec
mov
enter
jne
scas
or
enter
stos
sub
lock
scas
dec
fadds
xchg
daa
loop
ret
cmp
loop
and
mov
inc
in
rol
add
out
mov
fnsave
push
mov
scas
mov
pop
daa
and
mov
movsl
pop
dec
popa
sub
les
hlt
fcoml
push
push
loope
push
fistpll
push
pusha
mov
outsl
out
ljmp
pop
mov
xlat
jg
sahf
jmp
daa
into
cltd
movsb
push
mov
lock
mov
or
fidivs
imul
cmp
shlb
cmc
xchg
dec
mov
in
pusha
out
out
mov
pop
cli
mov
aad
xchg
iret
or
test
mov
jbe
cld
jmp
inc
shll
int
das
stc
out
xchg
fbstp
jmp
iret
nop
dec
or
mov
arpl
aas
stc
test
fidivrl
in
nop
mov
lahf
inc
rcl
xor
cld
rcrl
jns
imul
repnz
jmp
and
clc
adc
mov
cmp
mov
or
popa
dec
mov
adc
sbb
mov
push
daa
das
mov
inc
xchg
mov
lods
enter
sub
movsl
out
mov
inc
add
xchg
and
aam
outsb
cmp
xor
stos
pusha
popf
imul
sbb
test
jmp
scas
icebp
push
mov
push
in
insb
shll
dec
push
xlat
adc
ret
lds
fcompl
cmp
ret
add
adc
fwait
cmpsl
lret
cmpsb
cmp
xchg
mov
add
xchg
push
in
push
out
clc
pop
mov
in
movb
sub
or
adc
stos
dec
aas
add
fwait
std
insb
jg
sbb
pop
jg
shl
data16
jecxz
sahf
jge
adc
stc
sarb
adc
push
js
inc
leave
and
je
cmp
xchg
xchg
out
or
push
pusha
filds
xchg
rorb
push
adc
imul
enter
movsl
daa
cli
xchg
inc
cmpsb
aam
jb
add
gs
ss
in
lods
xor
mov
and
into
cmc
cmc
xchg
cmp
sbb
fdivs
jmp
addl
fadd
xchg
rcrl
lods
pop
adc
pusha
xchg
pop
mov
arpl
test
lea
incl
repz
push
fwait
jnp
lock
jecxz
jge
jle
cmc
lock
shrb
cmp
mov
cmpl
mov
inc
mov
xchg
dec
cltd
xor
pop
arpl
adc
cmpsl
aad
cmpsb
adc
or
lcall
fsts
leave
or
mov
daa
test
add
and
sbb
mov
rorl
or
mov
inc
lock
sbb
shrl
or
pop
bndstx
jecxz
gs
pop
push
dec
shrb
and
push
mov
xchg
sbb
cmp
adc
imul
pop
popa
xlat
add
lcall
mov
rorl
fsubr
xchg
je
pop
mov
xchg
lock
mov
in
aad
adc
cmp
xchg
lret
adc
aam
mov
jmp
lea
xor
adc
lods
cmpb
xor
std
push
pop
xchg
lock
loopne
int
cmpsl
es
mov
add
or
push
push
cmp
leave
inc
mov
in
jne
fldt
fbstp
sti
xchg
aad
lahf
dec
test
jge
mov
xor
inc
push
cwtl
into
jne
xor
sub
xor
rcrb
jb
dec
fbld
jbe
movsl
push
jae
adc
jb
and
jl
cltd
int
test
mov
adc
mov
scas
pop
add
pop
and
out
fists
jecxz
stos
fwait
call
sbb
jg
in
and
daa
pop
ret
xor
xchg
inc
sbb
or
sbb
mov
xchg
xor
inc
inc
mov
stos
out
ss
pop
mov
out
test
cld
dec
bound
lods
fldl2t
sbb
adc
int
loope
mov
mov
int3
xor
fistpll
sbb
sarl
mov
aas
inc
leave
movsl
ja
aas
cmp
pop
out
jg
jne
push
sarb
popf
pop
rcrb
or
pop
jmp
mov
adc
push
mov
fst
mov
outsl
data16
mov
mov
arpl
cmpsb
je
push
out
or
jb
js
jns
aam
mov
enter
mov
jle
mov
fdivr
daa
mov
scas
adc
ja
mov
hlt
cmpsb
inc
loopne
dec
dec
cmp
pop
clc
clc
data16
fs
bound
mov
in
je
xchg
inc
aas
push
jecxz
push
popf
aad
sti
xchg
push
add
jmp
cvtpi2ps
scas
cmp
into
and
fisubrl
stos
mov
mov
loope
stc
sti
addl
pop
pop
mov
in
and
sar
xchg
push
cmpsb
out
mov
cld
mov
xchg
jmp
shll
sbb
insl
push
arpl
xlat
xchg
inc
or
inc
jmp
xchg
mov
sub
pop
xor
iret
sahf
pop
in
in
sbb
mov
jae
int3
adc
leave
xchg
xchg
push
leave
mov
loop
sub
test
movsl
pop
pop
adc
xchg
sbb
and
xor
dec
stos
lock
sar
or
mov
daa
cli
xchg
or
pop
xor
mov
add
fsts
scas
xor
pop
mov
ret
lret
sub
popf
jae
movlps
xchg
stos
dec
xchg
xor
arpl
xchg
mov
inc
xchg
jmp
dec
xchg
xor
push
stos
mov
inc
aam
and
loopne
push
aad
addr16
mov
add
xchg
push
mov
or
lea
test
mov
ljmp
mov
jb
xor
adc
arpl
add
andl
mov
lret
out
and
daa
jl
mov
add
mov
inc
and
leave
mov
pop
mov
sub
jp
lds
inc
in
in
and
cltd
shr
pop
pop
push
mov
xchg
in
add
daa
mov
or
in
mov
ja
jns
popf
shlb
sub
dec
fs
in
cs
jne
fcompl
sbb
inc
adc
in
in
mov
push
fstps
dec
lock
std
sub
fs
jge
test
push
sub
data16
inc
and
mov
pop
jg
dec
roll
xchg
fdivs
cmp
shlb
fs
mov
mov
push
bound
dec
pcmpgtb
test
pop
loopne
fucomp
sub
mov
out
push
and
ja
hlt
add
adc
mov
jbe
mov
cmp
scas
cwtl
testb
sahf
popa
mov
sub
and
jecxz
xchg
push
ret
scas
adc
stos
icebp
lret
shl
ss
lahf
pop
xchg
aas
or
jae
subb
cld
iret
mov
lret
push
imul
mov
es
push
and
lcall
faddl
mov
leave
push
sub
idivb
jb
mov
rcll
sub
mov
sbb
or
nop
lods
xchg
insl
sbbb
cmp
loopne
lcall
sti
lret
push
nop
mov
push
inc
mov
lods
adc
cmpsl
pop
push
sbb
pushf
rol
push
push
push
flds
mov
out
shr
and
dec
dec
pushf
fnsave
xor
push
xorl
and
ret
sbbb
cltd
leave
jo
cmpsb
mov
jns
cmpsl
cmp
sbb
or
pusha
enter
xchg
add
ljmp
mov
inc
and
dec
sbb
stos
shrl
mov
cli
fists
fcmovnbe
sbb
add
lods
fdivl
inc
pushf
jne
popa
xchg
outsb
ss
iret
cmp
mov
repnz
jmp
push
add
xlat
sub
das
push
jae
cmpsb
xor
fists
jge
out
roll
or
xchg
adc
lret
mov
mov
adc
cmpsl
inc
dec
iret
and
jno
xor
sbb
jle
inc
push
sub
pop
repnz
ja
mov
test
mov
out
test
es
bound
int
gs
and
mov
fildl
jb
call
mov
movsl
fsubs
jecxz
inc
stos
mov
test
push
adc
inc
int3
mov
mov
mov
fmuls
pop
ds
mov
inc
pop
mov
inc
add
std
sbb
aam
mov
push
push
xchg
data16
mov
fmuls
jns
cltd
lds
push
nop
out
jge
mov
call
sbb
inc
fnstenv
push
jp
pushf
outsb
lock
push
lret
sti
xchg
pusha
loope
or
cmp
popf
jg
pusha
jmp
and
mov
sub
icebp
repnz
sub
adc
sub
dec
cmp
andb
mulb
fwait
mov
mov
dec
push
sti
mov
jp
lods
lods
test
les
and
xchg
jo
sbb
adc
ret
loope,pn
xchg
inc
xchg
jg
mov
sahf
pop
cltd
leave
xchg
cs
cli
cltd
mov
and
push
sub
push
jae
pop
mov
xchg
or
repz
jns
gs
mov
leave
in
fucomip
aaa
hlt
cmpsb
inc
insl
enter
and
js
jle
insb
add
push
sarl
notl
sarl
jmp
adc
adcl
add
ficomps
mov
sub
xchg
cmpsb
push
and
imul
loopne
xchg
add
out
std
pop
dec
cli
push
pop
cli
fbld
mov
pop
sbb
sbb
jbe
ja
dec
sbb
sbb
shr
push
cwtl
lcall
sub
or
mov
loope
jp
lods
xchg
loop
es
cmpsl
xor
add
jb
insb
and
into
cld
jg
fsubs
push
cli
gs
pop
sub
cld
inc
in
mov
mov
pop
dec
xor
and
or
in
or
and
rcr
or
pop
sub
cltd
jb
jnp
sti
aad
fsubrs
repnz
iret
mov
xchg
xchg
ret
cmp
testl
sbb
dec
mov
mov
lea
orl
test
lods
xchg
mov
cmpsl
fsubs
dec
in
ja
mov
add
repnz
cmp
pop
xchg
or
adc
fdivs
mov
outsl
push
daa
pop
into
pusha
inc
filds
mov
repnz
ret
fildl
xchg
push
inc
fcmovbe
lea
fisubl
in
pop
add
fadd
xor
stos
sbb
cld
xor
jle
mov
push
ss
or
lahf
adc
push
iret
pop
mov
shll
and
lock
or
ss
iret
mov
bound
add
iret
testb
out
xchg
dec
dec
dec
mov
xor
push
popf
rorb
jb
mov
xchg
fwait
jne
jge
movsb
es
add
aaa
dec
test
stc
loope
inc
ror
and
cwtl
aad
mov
test
xor
push
jbe
scas
call
loop
in
fxam
les
and
jecxz
rcrb
or
mov
lods
add
das
cwtl
sbb
and
mov
cmc
add
rcll
jnp
adc
mov
mov
dec
hlt
push
shl
jmp
sbb
lods
jbe
aaa
cmc
iret
loope
adc
lods
fisttpl
loop
jl
in
fbld
not
sbbb
test
or
lret
iret
insl
mov
inc
fmuls
enter
xchg
repnz
popa
jbe
icebp
hlt
pop
rol
cmpb
arpl
mov
subb
or
cwtl
mov
ljmp
sbb
mov
mov
mov
in
jo
mov
loopne
shl
jbe
dec
mov
dec
test
add
mov
xchg
ficomps
push
cwtl
cmc
xchg
mov
lcall
xor
pop
test
repnz
cmpb
aad
sbb
sahf
sub
imul
das
adc
nop
mov
dec
cld
sub
jns
out
xlat
dec
adcb
test
mov
mov
mov
sbb
rcrl
inc
loop
sbb
popa
lock
in
fsts
xor
sub
loopne
mov
fdivr
xchg
mov
add
std
cmpsb
push
jns
ret
outsl
push
or
fneni(8087
or
jmp
push
xchg
pop
sbb
cli
sarl
lock
dec
mov
or
xor
shlb
cmp
insl
mov
fistl
cmp
or
aad
xor
inc
adc
shl
leave
pop
mov
sbb
pop
mov
mov
in
shrb
cwtl
cmp
mov
scas
pop
inc
add
dec
imul
xor
mov
or
incl
movsl
pusha
fucomi
xchg
out
push
dec
test
loop
pop
ljmp
jmp
push
push
dec
out
push
mov
rcrl
test
movsl
mov
push
add
outsb
repnz
shlb
sub
inc
sbb
das
and
nop
cltd
fimull
mov
inc
sbb
add
int
jmp
ret
repnz
add
dec
fwait
into
cmpsl
mov
xor
dec
cmp
aam
and
mov
xchg
ds
add
or
lock
mov
rcrb
ss
cmp
testl
movsl
mov
rorl
ja
jg
ret
add
and
rcr
movsl
pop
cmp
call
loope
scas
js
imul
sbb
pop
stos
arpl
jmp
add
lret
enter
int3
sbbb
lods
or
test
jae
rolb
arpl
mov
cwtl
pop
push
mov
pop
mov
nop
js
shrl
pop
scas
shll
roll
or
testl
pop
push
mov
add
testb
mov
mov
adc
pop
test
jns
add
inc
rolb
sbb
ret
lock
cwtl
push
mov
aad
pop
rol
jns
adc
push
pusha
and
int
scas
mov
push
adc
inc
inc
jo
pusha
hlt
ficoms
notb
jb
push
call
cltd
scas
mov
ja
sbb
adc
mov
mov
mov
mov
imul
add
fneni(8087
bound
cmp
mov
shll
cmc
iret
leave
add
pop
xor
arpl
popf
into
fcompl
je
lcall
push
xchg
sub
fists
push
pushf
cmp
insl
scas
pushf
jae
mov
hlt
aam
popa
xor
enter
lds
dec
inc
mov
mov
xlat
xchg
xchg
sub
sbb
inc
jecxz
cmp
outsb
and
ss
jle
std
pusha
add
dec
rcrb
rorl
std
movnti
inc
out
pop
mov
fdivrl
ror
xchg
test
adc
mov
mov
call
jo
cmp
lcall
clc
dec
adc
xor
mov
jle
push
outsb
in
jg
repnz
xchg
jae
xchg
and
cmp
cmovno
clc
shr
sub
sub
jae
sbb
xchg
ja
xor
jo
mov
xchg
push
mov
mov
repnz
filds
in
loope
mov
lret
push
or
aas
push
stc
popf
sbb
adc
sbb
pop
faddp
push
xbegin
movsl
add
xchg
jp
loop,pt
inc
adc
hlt
cmpsl
popf
nop
cmpsb
ljmp
jne
xchg
rcrl
add
cmp
test
mov
pop
enter
arpl
mov
js
xchg
adc
add
jecxz
adc
add
or
jns
test
and
adc
jp
xor
gs
cmpsl
std
inc
outsl
cmp
xchg
rcr
lret
cmpsb
in
mov
fwait
subl
in
loope
nop
movsl
fdiv
and
mov
aad
xor
scas
ja
push
test
fistl
add
xchg
pop
loope
adc
sbb
into
adc
lds
sub
sbb
cmp
cmpsl
in
pop
aam
adc
xchg
sti
ret
or
sbb
lea
pusha
ret
inc
mov
push
shlb
xchg
jle
fistps
adc
cwtl
pop
push
xchg
test
push
push
mov
mov
pusha
shrb
and
jmp
pusha
in
jge
inc
loop
pop
fwait
testb
iret
repz
bound
fdivrs
imul
adc
add
cmp
mov
mov
shld
jnp
sti
cmp
aaa
xchg
push
pusha
mov
cmpsb
cmp
mov
cld
mov
aam
loopne
inc
cmpsb
add
xchg
stc
or
pushf
es
addb
ret
lods
aas
mov
rclb
push
es
adc
es
inc
mov
fildl
push
mov
divb
inc
subb
mov
add
push
shll
fildl
repz
pushf
dec
and
ds
sbb
inc
xor
and
adc
int3
sub
cmp
cwtl
mov
xchg
push
pop
out
das
cmp
lea
and
sub
sbb
sub
mov
dec
movsl
pop
jmp
dec
adc
fcmovnbe
ret
addr16
push
in
clc
xchg
push
sti
fnstsw
mov
push
pop
add
int
je
jg
cld
sahf
pop
push
or
adc
cmp
in
hlt
inc
sahf
in
movsb
jnp
mov
lods
and
insb
xchg
push
lock
scas
cmovae
mov
in
push
mov
or
fs
ret
xchg
cmc
incl
stc
std
cmp
cmp
ljmp
lea
mov
jg
arpl
dec
pop
push
daa
mov
mov
pop
mov
ret
iret
out
push
out
mov
sti
xchg
fcomip
insl
xchg
add
sbb
mov
cmp
test
pop
dec
in
dec
sub
mov
or
jge
mov
sub
rclb
jmp
pop
push
cmp
daa
jb
inc
pop
stos
dec
sub
out
bound
pop
push
mov
lock
jecxz
mov
mov
fidivl
int3
scas
test
cld
push
xchg
pop
cmp
sarb
sbb
jl
cld
fidivrs
pop
int3
subb
loop
xchg
add
sub
cmp
in
xchg
pop
jb
mov
and
stc
test
push
imul
push
push
mov
dec
mov
adc
gs
in
mov
xchg
cmc
sub
mov
inc
inc
xor
mov
inc
cltd
repz
mov
aad
dec
adc
cmpsb
mov
imul
ret
sub
adc
imul
fdivrl
lahf
addl
xorl
jbe
flds
sbb
test
lock
xchg
mov
mov
stos
add
int
mov
rorl
mov
aam
fstpl
jo
inc
stos
mov
mov
cwtl
push
add
sbb
lods
push
mov
or
xchg
add
mov
iret
push
xchg
jg
das
hlt
push
pop
pop
loope
sub
mov
and
ss
push
ss
fwait
push
pusha
mov
loop
fisttpl
xor
jl
out
dec
test
in
jne
insl
inc
jle
out
pop
pop
sbb
addb
push
imul
aaa
mov
fmulp
orl
call
xor
clc
aas
bound
ret
inc
and
inc
add
mov
push
testb
mov
adc
jl
scas
mov
adc
dec
inc
dec
cmp
hlt
insl
inc
mov
repnz
add
popf
add
aad
mov
add
xor
inc
inc
bound
es
add
jl
push
fldt
testb
mov
mov
xchg
xlat
comiss
jnp
add
fdivrs
mov
pop
pop
dec
orl
sbb
jecxz
stos
or
std
xchg
jno
and
shl
mov
iret
shlb
xor
and
xchg
sbb
xchg
fwait
sub
lods
or
jnp
imulw
inc
push
les
rsm
add
je
dec
cmc
pop
jae
push
jg
frstor
pop
rorl
insb
push
jae
ss
cltd
lods
and
popa
push
cmp
bound
fchs
xchg
hlt
jle
outsl
clc
lcall
lds
dec
sbb
sub
fwait
jp
dec
add
rorb
nop
in
mov
cmp
je
in
sub
out
inc
jge
cmp
dec
scas
rorl
dec
in
cmc
push
dec
enter
push
jmp
cmp
xor
cld
filds
aam
aas
sbb
dec
imul
mov
and
xchg
mov
inc
bound
fsubr
mov
std
out
imul
arpl
sbb
and
mov
mov
cwtl
aam
adc
out
mov
std
adc
cmp
cmpsb
std
sbb
sbb
and
fdivrp
jo
lret
divb
aad
mov
mov
mov
or
mov
addb
pop
dec
in
lgs
push
into
pop
push
popf
sub
add
in
rorb
add
xchg
mov
sbbl
aas
push
dec
and
in
cli
shl
sarb
dec
mov
mov
test
xchg
pop
testl
out
pop
and
dec
inc
pop
cmc
stos
mov
add
dec
lods
mov
xchg
sarb
adc
out
jg
rcrl
xor
pop
js
mov
xchg
sub
bound
out
testb
pop
jl
test
add
cmpsl
rorl
in
mov
mov
mov
add
jb
mov
or
xor
inc
pop
inc
adc
sbb
sub
stos
pop
ljmp
and
pushf
dec
pop
xchg
int3
test
mov
push
lcall
xchg
cs
idivl
jae
jb
mov
xchg
fsubrs
clc
out
std
push
dec
sbb
mov
and
cmp
add
test
sub
fs
test
pop
pushf
inc
sbb
repz
inc
sbbb
shlb
push
jae
test
dec
push
inc
inc
pop
cld
rcrb
pop
test
cmpsl
out
dec
sub
incl
mov
jle
fdivp
shll
loopne
add
incb
add
int3
cmp
subl
mov
aad
stos
xchg
cltd
jmp
sti
inc
jb
xchg
repnz
das
lods
adc
xchg
push
cmp
sbb
test
cs
cld
xchg
mov
sahf
out
jge
sub
ret
push
aas
jmp
lods
sbb
mov
dec
ret
push
imul
data16
sarb
and
push
jb
stos
sub
aad
and
push
pushf
sbbl
ja
pop
xor
movsb
int3
push
or
repnz
mov
cmpsb
xor
dec
dec
scas
ss
pop
add
or
mov
cmp
mov
adc
scas
std
mov
and
jmp
mov
jo
arpl
pop
bound
in
add
cmp
std
pop
mov
inc
das
xchg
loopne
sub
mov
jl
fs
fmul
imulb
jecxz
lods
repnz
push
lret
cmpsl
push
push
push
pushfw
sub
fs
clc
jno
leave
ret
sub
pop
outsl
add
lret
add
pop
stos
iret
imul
outsl
int3
mov
rsm
inc
pushf
mov
sbb
mov
insl
and
cmpsl
jp
in
in
pop
lret
xchg
stc
mov
mov
int
lahf
cmp
and
dec
movsb
lret
push
lds
movsl
push
imul
cmc
jo
ja
jb
mov
cmp
lods
push
mov
stc
daa
sub
push
cmp
pop
xchg
sbb
movsb
aam
cmp
js
out
test
or
or
adc
jns
std
or
adc
and
xchg
jns,pn
mov
and
push
in
push
mov
lds
or
xchg
fwait
pop
xor
jecxz
sbb
and
mov
push
addb
cmpsl
xchg
push
or
sbb
jge
pop
in
push
add
xchg
mov
nop
es
fisubs
jl
je
inc
add
mov
aad
enter
cmpsl
fmull
and
sbb
stc
mov
sub
into
adc
imul
int3
xchg
jg
repnz
addr16
xchg
mov
popf
and
pushf
dec
dec
and
test
mov
lahf
xchg
data16
add
or
pop
ja
adc
sbb
mov
xor
sub
dec
mov
sub
roll
xchg
ds
add
addr16
cmp
mov
cmp
lahf
in
jns
push
push
jne
lea
in
popl
xchg
xor
iret
mov
aam
cmc
jg
orb
rol
repnz
jp
pop
cmp
mov
out
mov
dec
in
stos
sahf
mov
jo
out
cmp
add
push
add
popf
nop
lds
add
dec
dec
cltd
add
inc
gs
out
rol
sub
sbb
xchg
in
dec
mov
neg
and
stos
adc
inc
dec
mov
ret
or
retw
daa
fildl
xorb
push
dec
aad
mov
sub
rcrb
push
push
mov
fisubrs
cmc
mov
bnd
xor
cmp
mov
lahf
mov
push
in
stc
pop
in
leave
add
xchg
into
shll
and
xlat
leave
jmp
dec
push
sbb
scas
jle
popf
mov
aas
sbb
xchg
lock
nop
pop
lcall
mov
pop
pop
fmuls
mov
dec
xchg
jmp
and
dec
imul
pop
loopne
xchg
add
je
xor
mov
clc
jmp
mov
sbb
pop
xchg
shll
lds
shlb
jp
popa
xor
addr16
push
inc
leave
and
fimull
cli
xchg
sahf
outsb
shlb
inc
idivb
imulb
ja
out
jge
bound
cld
sbb
fisubs
add
lods
pop
jmp
mov
jmp
cwtl
std
out
bound
xchg
ret
fucomip
push
xchg
inc
pop
push
mov
test
mov
push
sti
cmp
dec
jne
test
dec
push
negb
xchg
aam
pop
xor
mov
sbb
pop
and
iret
xchg
adc
fnstenv
stc
xchg
fwait
jno
shlb
stc
adc
pop
cmp
inc
mov
add
xchg
xchg
cld
jae
mov
adc
jecxz
inc
and
lcall
shr
jl
pop
pop
rcl
and
outsl
enter
rcl
xchg
xor
dec
adc
mov
inc
mov
mov
js
add
icebp
aaa
cmp
push
out
mov
push
test
lcall
pop
mov
loopne
xchg
outsl
or
in
pop
mov
add
ja
idivb
lds
sub
inc
xchg
scas
outsl
in
scas
jae
push
dec
xor
or
pop
adc
lock
lahf
xor
fldt
aas
inc
call
mov
lods
inc
pop
sub
push
inc
dec
inc
dec
mov
call
add
enter
rcrl
jb
sbb
cltd
push
out
out
and
lret
and
ret
and
lods
mov
cmpb
mov
inc
dec
les
mov
mov
xor
insb
add
repz
out
pop
pop
lcall
or
jae
ja
fwait
cmc
xchg
mov
sub
mov
push
aad
ja
cmp
sub
pushf
call
jb
mov
cmp
mov
sbb
pop
idivb
ds
pusha
arpl
out
cmp
dec
add
cmp
icebp
int
or
jle
jno
stos
lds
shl
or
push
test
xor
push
loop
and
xor
sub
lods
cmpsb
or
jmp
in
add
out
xchg
jbe
das
push
cmp
leave
pop
push
push
pushf
ss
fildll
cld
ret
push
repnz
jl
jmp
xor
mov
mov
sub
lds
scas
sbb
test
cmp
test
nop
movsb
pop
fistpl
outsl
mov
stos
cmpsb
push
cli
xchg
jmp
push
inc
shlb
mov
fildll
add
dec
mov
inc
js
ror
addr16
adc
inc
sbb
jae
sbb
sbb
sub
mov
sub
scas
mov
cmc
adc
mov
stos
dec
cli
sti
mov
scas
jae
fcmovne
dec
push
addl
mov
mov
jo
adc
adc
bound
cmp
jmp
adc
cld
push
and
nop
adc
mov
jo
xor
sub
in
sarb
pushf
movsb
pop
lods
sbb
imul
xchg
adc
test
imul
cmpsb
xchg
dec
mov
push
jmp
xor
mov
loopne
xor
dec
mov
jo
outsl
xor
ret
add
xor
cs
cli
mov
sbb
add
in
jbe
daa
fwait
push
jnp
xor
pop
push
mov
cld
imul
cmp
lods
aad
stc
es
push
xchg
fcom
xchg
mov
fnstenv
rcrb
push
push
sahf
jge
rcrl
add
into
push
xor
dec
rclb
xchg
and
sarl
fldt
loopne
jl
dec
lret
repz
stc
aad
pop
inc
add
hlt
xor
pop
loop
sbb
jl
das
mov
sbb
gs
js
out
stos
gs
loopne
and
push
add
jle
ja
test
jp
xlat
jge
test
cmp
lret
lods
dec
add
mov
mov
ljmp
mov
push
xchg
pop
orl
sub
dec
popa
cltd
mov
pop
xor
and
mov
xor
cld
repnz
adc
fcomi
rorl
imul
adc
ja
mov
aaa
and
mov
lods
xor
cmp
push
jbe
mov
sti
cmp
icebp
jmp
call
cmpsl
push
cmp
push
jg
xchg
iret
jmp
movsl
movl
pop
xchg
mov
lock
call
or
hlt
push
in
add
in
jmp
mov
fiaddl
cmp
loope
xchg
cld
inc
imul
jmp
jecxz
xchg
rcrb
scas
xor
jb
or
jmp
mov
cwtl
pop
pusha
lret
hlt
pop
rcll
mov
jae
and
inc
lods
jmp
sub
push
ja
and
pop
push
mov
cmpb
fists
imull
ds
push
dec
add
xor
pop
insl
mov
test
xor
sti
push
mov
out
inc
flds
inc
jmp
iret
sbb
cmc
sbb
popf
inc
icebp
lods
jg
or
scas
int3
jg
ljmp
pop
adc
push
das
push
clc
jle
jmp
movsl
loop
mov
bound
stos
insb
inc
jo
mov
cmc
aam
or
iret
mov
enter
mov
inc
daa
sahf
push
imul
mov
adc
add
inc
mov
mov
xlat
xchg
sub
dec
cmc
mov
xchg
das
test
lods
cmp
addr16
sub
pop
lret
or
fisttpll
flds
movsb
mov
cwtl
ss
jbe
dec
inc
jp
xchg
adc
mov
pop
outsb
cli
push
rcll
mov
dec
int3
in
mov
scas
in
push
xor
dec
cmp
xchg
pop
and
out
mov
push
popa
cwtl
daa
inc
add
es
in
ret
xchg
shlb
stos
cltd
pop
mov
outsl
sarb
inc
adc
mov
cli
jns
mov
je
dec
sbb
dec
cmp
cmpsl
push
outsb
lahf
jle
xchg
lds
dec
cmp
and
sub
push
jmp
sbb
loop
stc
sub
xchg
bound
push
das
adc
pop
stc
gs
xor
cmp
inc
mov
imul
out
ljmp
nop
ss
leave
aas
aad
cmp
inc
outsb
xor
jmp
pop
out
je
test
sbb
pop
stc
ret
ficomps
mov
xchg
mov
scas
push
mov
in
or
dec
pop
jmp
sbb
subb
sti
aad
push
cli
jp
jp
inc
loopne
rcrl
xor
test
inc
jo
sub
pop
and
add
dec
jge
cmp
adc
push
fisubs
sar
pop
das
jae
sub
xorl
repz
cmp
popf
cmp
xlat
dec
sbb
outsl
cmp
fidivs
mov
test
ret
ficompl
sti
nop
scas
ret
movsl
pop
mov
lret
pop
test
ljmp
rolb
push
inc
mov
adc
int
adc
xchg
xor
mov
inc
in
stc
inc
sarl
rcll
shlb
fldz
push
jns
test
pop
gs
les
dec
and
ja
fsubl
fsubp
iret
push
pop
sbb
and
pop
jb
pusha
inc
pop
or
xor
hlt
fdivrs
xchg
sub
in
and
jne
jno
add
pop
xchg
sbb
ljmp
out
add
xchg
cs
int
das
orl
mov
icebp
and
or
mov
dec
adc
vpand
xor
jno
mov
or
hlt
mov
jno
add
lods
dec
out
pusha
frstor
fdivp
xchg
popf
xlat
mov
xor
add
push
or
xchg
andl
inc
push
mov
lret
mov
jmp
jecxz
fwait
and
add
roll
aam
or
pop
sbb
lea
out
sti
and
xchg
or
push
xlat
dec
aaa
push
mov
sub
cmp
int
rol
sub
mov
lock
les
sub
fwait
out
xchg
xor
xor
push
cmpl
js
outsl
popf
dec
xor
out
jge
jp
mov
inc
movsb
or
sbb
out
add
dec
pop
jmp
add
push
jnp
ss
test
jmp
loopne
lock
inc
pop
ja
outsl
xor
test
mov
int
pop
int3
hlt
inc
dec
adc
ficompl
cmp
and
sbb
out
fdivrl
adc
int3
iret
ja
inc
mov
xlat
lock
addr16
mov
xlat
add
pusha
adc
inc
cmpsl
test
jo
aam
push
jns
add
sti
pop
sahf
mov
xor
out
insb
aas
add
pop
addr16
or
sahf
frstor
out
mov
call
sbbb
push
sub
stos
inc
icebp
adc
mov
daa
pop
aaa
cld
sbb
add
jge
jecxz
int
push
mov
or
mov
xor
xchg
mov
jmp
dec
es
test
sub
test
mov
mov
shll
mov
pop
rol
or
sbb
lret
in
lea
mov
bound
jp
adc
aas
jae
xchg
inc
mov
pop
mov
dec
or
pop
out
stos
mov
push
iret
in
jle
daa
in
std
push
fcmove
out
cwtl
add
add
fucom
mov
dec
xchg
test
and
mov
cld
aas
decl
add
es
push
or
push
push
sbb
and
test
pop
sbb
mov
into
stos
lods
add
ds
mov
adc
cltd
shlb
push
jg
ret
mov
cmp
sub
gs
bnd
mov
lods
cwtl
in
inc
jmp
add
lods
xor
hlt
inc
shll
data16
aaa
sarl
sarb
inc
mov
cltd
repz
inc
popa
ds
add
jnp
movsl
jp
ja
and
clc
popa
aad
inc
repnz
and
and
lds
stos
bound
js
push
aad
or
xor
inc
add
cmp
lods
cmp
dec
addl
ljmp
addr16
add
sub
push
mov
mov
ljmp
pushf
push
ljmp
inc
fistpl
lret
ss
leave
sbb
test
jmp
ss
outsb
mov
push
pop
aas
xchg
hlt
or
pop
jg
or
fstpt
xor
cld
mov
pop
xchg
roll
movsb
sar
fists
sub
xor
cmp
lret
cmp
movsb
jl
inc
add
mov
xchg
jno
flds
in
push
scas
adc
dec
inc
hlt
pusha
jmp
je
push
mov
outsl
nop
pop
dec
or
sub
or
ja
jbe
dec
jnp
adc
incl
mov
inc
sti
xchg
mov
pop
bound
mov
xchg
sub
pop
lcall
test
outsb
fildll
sbb
push
adc
loop
mov
or
jnp
mov
inc
nop
adc
sarb
test
and
cmp
inc
imul
outsb
mov
mov
fsubrl
popa
adc
imul
dec
jmp
enter
test
bound
jg
out
push
cmpsb
call
mov
int3
push
xchg
sbb
outsl
and
adc
int
mov
cmc
lret
lea
ret
mov
scas
movsl
fnstcw
xchg
dec
fisubrs
inc
js
jbe
adc
xchg
in
in
popa
sbb
sbb
stos
mov
shlb
adc
xchg
dec
adc
push
icebp
cmc
inc
test
jno
push
mov
add
ficoms
fcmovnbe
cltd
mov
sbb
das
jle
push
std
cmpsl
stc
stc
clc
outsl
pop
xchg
lcall
cld
xlat
in
out
add
and
mov
lahf
mov
incl
sub
insl
xlat
movsl
xor
inc
jge
push
mov
repz
cmp
dec
adc
xchg
sarb
lea
dec
cltd
jge
data16
dec
and
xchg
jno
xchg
inc
inc
ss
repnz
adc
leave
loop
xor
es
les
xchg
jecxz
sahf
sbb
sbb
mov
int
jp
xchg
adc
sub
inc
std
sti
add
cld
mov
pop
repnz
push
cmc
ret
jl
xchg
mov
xchg
cmpsl
mov
jnp
inc
cwtl
pop
hlt
xchg
xchg
insb
out
mov
or
mov
clc
or
lahf
lcall
lahf
or
or
push
adc
pop
push
xchg
push
lea
movsb
stos
ret
jl
cmpsb
cmc
mov
ja
or
lods
xor
stos
xchg
xchg
push
sub
mov
mov
push
xchg
scas
adc
sbb
push
pop
lock
mov
xor
int
and
or
popf
adc
mov
push
inc
lret
test
out
sub
loopne
pop
test
cmp
movsl
sbb
imul
mov
mov
test
lods
mov
clc
xor
lcall
pop
push
cmp
pop
ds
add
add
cmp
cmc
xor
cmp
inc
mov
push
pusha
ljmp
mov
push
arpl
movsb
cmc
add
push
inc
xor
aaa
pop
scas
dec
xchg
push
adc
pop
dec
xchg
popa
cmp
and
stc
push
mov
dec
inc
dec
jns
adc
xchg
push
sbb
scas
test
mov
mov
iret
xchg
or
shrb
jg
push
mov
mov
inc
adc
rcrl
rcll
pop
mov
mov
int
and
in
adc
addr16
nop
movsl
mov
inc
sbb
fwait
cmp
mov
iret
jle
adc
mov
and
dec
pop
sub
aaa
cmpsb
notl
cmp
jns
nop
jae
sub
and
xchg
scas
repz
rorl
ss
mov
pop
mov
cmp
xchg
cmp
xor
sub
mov
incl
mov
mov
mov
popf
inc
jecxz
pop
sbb
cmp
add
std
mov
jg
int3
mov
cmp
lods
push
push
add
out
xchg
jg
fsubr
sbb
lds
aas
mov
jp
mov
popa
test
mov
mov
or
or
jecxz
jno
xchg
jge
call
mov
das
mov
xchg
pop
pop
sahf
adc
repz
call
xchg
sbb
inc
mov
leave
xchg
or
mov
xlat
lcall
jns
dec
insb
dec
cmp
test
mov
jo
cltd
cmp
loope
addr16
xchg
inc
mov
test
mov
repnz
daa
in
sub
and
sbb
ds
or
jp
out
xchg
fidivl
leave
cmpl
cvtpi2ps
add
pop
sbb
fisttpll
inc
mov
push
add
push
fwait
lock
inc
insl
xor
dec
sbb
subb
ficoms
jle
mov
xor
inc
mov
jl
cmp
call
test
rorb
inc
jne
adc
lret
add
sarb
jnp
fimull
sbb
jno
xchg
dec
stos
addb
test
mov
ja
imul
imul
outsl
jo
movsb
pop
sub
imul
or
outsl
roll
xor
bound
hlt
lret
loope
les
sbb
cltd
xchg
mov
mov
jp
jge
icebp
aaa
xor
aas
gs
mov
adc
cmc
jbe
mov
sbb
mov
aaa
fdivrp
pop
stos
adc
push
cmpl
shrl
cmp
mov
or
jl
roll
cltd
dec
sbb
ficoml
and
pushf
mov
stc
add
cld
jge
jbe
jne
hlt
sbb
jg
mov
aad
std
sub
fucomi
es
sbb
stos
mulb
orb
add
add
jbe
ficoml
fsubl
jb
nop
nop
pushl
mov
das
scas
pop
sub
or
fcmove
pop
xchg
shl
mov
push
enter
aaa
and
imulb
aaa
cmp
stc
jne
orl
fistl
fwait
sub
js
jns
iret
stos
fnstenv
xchg
sti
mov
popa
cmpsl
popa
sub
jb
inc
sbbl
jge
daa
nop
icebp
inc
jnp
frstor
jg
cld
and
lcall
or
mov
pop
int
mov
lcall
jecxz
leave
mov
xchg
mov
and
mov
inc
negb
ficomps
ficoml
pop
insl
js
ss
sbb
mov
ret
pop
bound
mov
sbb
mov
pusha
into
fdivrp
std
adc
fidivrs
inc
adc
cmp
mov
push
popa
inc
divb
mov
xchg
cli
jno
add
iret
xor
and
lds
das
jb
mov
push
stos
fildl
imul
aad
or
xor
orb
inc
roll
aas
cmpsb
push
aas
ljmp
push
js
jge
icebp
add
pop
dec
mov
add
jnp
jbe
pop
call
popa
fcoml
cltd
aaa
adc
lods
cwtl
mov
push
in
out
repz
addr16
jo
sbb
jmp
insb
cmpsl
mov
leave
js
popa
ljmp
enter
jns
into
ret
out
pop
jae
std
fdivs
mov
and
inc
push
pop
notb
lret
fdivrp
xchg
and
inc
js
add
cmp
shll
test
cmp
imul
sub
mov
push
add
imul
dec
sbb
outsb
mov
ds
daa
roll
add
ljmp
jmp
sbb
cmc
cwtl
mov
jb
mov
inc
clc
inc
xchg
mov
xor
inc
xorl
pusha
push
xchg
inc
xorl
and
mov
rcrb
add
lods
xor
mov
clc
dec
idiv
mov
out
xor
fstpt
in
add
test
out
cmpsb
and
xchg
mov
or
mov
mov
fs
and
roll
cmp
adc
movsl
dec
dec
bound
push
popa
faddl
cmc
xlat
inc
jno
pop
hlt
push
mov
inc
faddl
sub
dec
js
ret
rorb
push
ret
faddl
ljmp
push
xchg
sahf
inc
jecxz
mov
fsubs
mov
fwait
call
mov
sbb
push
insb
lahf
push
fdivr
dec
fucom
adc
dec
cmp
cs
hlt
enter
cmp
cmp
out
dec
xchg
enter
mov
add
in
mov
lahf
insb
and
fdivrs
mov
xor
in
xor
test
and
add
sbb
adc
mov
jnp
pop
das
push
mov
insb
jbe
adc
daa
pop
mov
popf
adc
call
icebp
movsl
lods
insl
fistl
leave
int3
or
outsl
inc
or
sub
les
lods
push
mov
into
push
mov
xchg
xchg
pusha
nop
xchg
aas
and
test
insl
test
ljmp
hlt
jae
inc
xchg
or
xchg
ss
jbe
cmc
mov
imul
cld
shr
add
push
cmp
adc
xor
std
in
pop
inc
adc
xor
jle
xchg
lahf
dec
mov
mov
sbb
stc
lcall
jg
inc
jae
xlat
outsb
ljmp
cmp
mov
outsb
leave
cmp
rol
inc
xchg
inc
jmp
or
xor
pop
ja
ss
push
aad
jnp
mov
pop
neg
sbb
jae
xor
pop
xchg
dec
inc
dec
inc
out
mov
jmp
or
push
xrelease
ja
insl
sub
es
cmpsb
jnp
and
mov
sti
mov
pop
das
decb
ss
cmp
xlat
dec
add
jecxz
stos
push
scas
data16
sbb
inc
ds
leave
aam
jns
and
jne
roll
mov
insb
in
and
mov
subl
sub
scas
mov
sub
lahf
dec
jb
imul
mov
aad
fucom
into
add
push
cmp
pop
jmp
sub
mov
dec
push
scas
bound
sbb
push
add
rol
dec
xchg
inc
xor
rep
loopne
fadds
sbb
test
inc
cmp
pusha
lcall
das
orb
mov
pushf
add
sbb
jp
rol
dec
pop
pushf
in
xchg
sbb
sub
push
jbe
mov
pushf
and
dec
jns
punpcklwd
mov
adc
fdivl
jno
xchg
jae
mov
daa
std
dec
mov
push
outsb
pop
sbb
stos
ret
adc
jne
inc
and
dec
jo
bndstx
insb
ret
xchg
ror
imul
and
jp
cmp
popf
push
aaa
iret
sub
mov
jl
lds
and
xchg
jbe
in
pop
rorl
jnp
inc
inc
push
mov
inc
gs
incl
gs
xchg
mov
stos
dec
xor
outsb
mov
push
bound
mov
mov
inc
adc
xorb
lahf
inc
xor
jle
mov
dec
inc
mov
add
adc
lea
push
aaa
sti
mull
jno
pop
or
fs
ja
and
ss
mov
test
or
dec
ja
adc
mov
pop
stc
mov
dec
out
in
pop
mov
mov
je
cltd
popf
jmp
mov
sub
mov
fs
mov
jecxz
mov
in
adc
jl
bound
pop
pusha
sub
in
clc
aas
inc
dec
adc
and
pop
push
and
shll
outsl
cmp
and
jno
sbb
fwait
stos
add
in
cmpsb
ss
mov
jbe
data16
addr16
dec
cmpsl
mov
aaa
adc
pop
sbb
dec
xchg
xchg
adc
inc
ljmp
pop
fildl
pop
aam
push
push
sbb
xchg
fs
xchg
repz
sub
imul
sbb
scas
aas
mov
or
push
aas
in
negl
ss
sahf
or
add
aad
addb
mov
das
fwait
mov
inc
adc
pop
out
mov
push
mov
outsb
inc
sub
ret
hlt
mov
shll
cltd
insl
jmp
mov
cmp
xchg
int3
das
add
adc
cltd
lds
hlt
inc
test
dec
insl
inc
cmp
enter
inc
sbb
les
sahf
nop
daa
outsb
jg
dec
add
dec
ljmp
loopne
cmp
sbb
testl
ja
or
bnd
imul
loopne
lock
xor
scas
mov
lahf
cmp
inc
jbe
xchg
icebp
jns
jb
lea
in
push
in
aam
inc
in
cld
and
dec
sti
leave
std
inc
push
ss
add
icebp
sbb
stos
xchg
mov
movsl
lock
adc
repz
aam
aad
jbe
inc
mov
scas
inc
xchg
cmp
test
adc
pop
pop
les
mov
int
lret
in
push
das
xor
xchg
inc
xlat
into
and
push
mov
xor
mov
stc
cli
cmpl
xor
xchg
add
xchg
in
mov
pop
mov
mov
or
aam
xchg
push
and
mov
jg
mov
lods
mov
cwtl
lods
dec
jae
out
outsl
cs
hlt
shll
pusha
push
push
out
xchg
push
call
adc
aad
test
jne
sti
in
testb
adc
add
aaa
fsubp
aas
push
xor
imulb
popa
add
sarb
ret
loopne
dec
loope
xchg
stos
xchg
into
push
pop
add
fidivs
xchg
bound
popl
mov
jmp
adc
add
add
mov
pusha
jg
jl
pop
inc
or
sti
leave
rcr
jae
shlb
adc
pop
mov
aad
mov
push
jne
imul
pop
jmp
rorb
cmp
mov
cli
enter
cmp
mov
jmp
inc
enter
adc
adc
xor
mov
dec
push
mov
pop
push
sub
xchg
push
xchg
xor
pop
jnp
insl
sbbb
lidtl
ss
sbb
mov
and
loopne
xchg
mov
push
in
mov
fdivl
or
popa
fiaddl
xchg
lods
in
int
bound
mov
xor
xor
push
loope
mov
push
je
sbb
add
fs
movsb
push
repz
jbe
sti
push
xchg
xor
scas
lock
jl
fwait
ds
shll
inc
leave
fimull
mov
xor
or
sub
and
push
movsb
xlat
fldl
push
xor
lret
inc
mov
mov
dec
adcb
imul
sbb
jae
inc
inc
mov
pusha
or
push
push
movsb
dec
push
adc
pushf
sub
or
dec
in
cmp
shl
stos
adc
xorb
rcrb
pcmpeqd
jae
mov
mov
adc
mov
aaa
xchg
dec
xor
add
fwait
aad
outsb
xchg
jbe
lock
adc
xchg
jge
inc
cmpl
inc
sub
push
mov
iret
xchg
jle
fdivs
fwait
aaa
in
daa
dec
les
jle
add
push
xor
or
add
mov
xchg
sub
jno
popa
jb
sub
or
insl
addb
lods
mov
stc
mov
test
shll
pop
xor
add
or
in
les
mov
divl
out
jecxz
push
aam
mov
mov
das
add
jle
sbb
scas
and
xchg
mov
add
je
movsl
rcrb
mov
std
push
xor
sub
ret
lock
aaa
sub
sti
sub
adc
icebp
lds
add
fxch
std
mov
jnp
sar
pop
inc
js
or
mov
mov
inc
inc
or
xor
push
cmpsl
insl
dec
out
sub
fstl
cmpsb
test
sbb
lahf
mov
movsw
jecxz
bound
add
jne
test
lock
or
mov
jno
inc
mov
xor
xchg
mov
inc
mov
loop
adc
das
lret
push
adc
ljmp
loop
cmp
ss
lcall
lcall
jge
xchg
fidivs
mov
shrl
inc
pop
add
or
pop
stos
std
aaa
inc
sbb
leave
jb
addb
inc
or
xor
adc
jle
out
das
outsl
aaa
imull
adc
stos
aas
fldenv
test
pushf
into
mov
scas
or
add
xor
cmpsb
push
mov
leave
cmpsb
shl
mov
inc
movsb
jbe
or
lcall
js
outsb
cli
lea
jge
icebp
adc
cmpsl
sarb
xchg
nop
dec
jg
ja
sub
not
inc
icebp
mov
and
mov
adc
lea
mov
mov
pusha
sahf
adc
pop
cli
rolb
aaa
test
push
mov
mov
mov
call
iret
xchg
int3
and
addr16
out
adc
pushf
pop
mov
hlt
or
lock
fsubl
add
push
mov
aad
mov
out
test
mov
push
test
jl
add
repz
cmp
outsl
cmc
das
adc
fwait
cwtl
cmp
pop
push
inc
hlt
out
adc
mov
call
mov
push
mov
dec
add
mov
cmp
test
or
mov
fcom
mov
rclb
enter
ja
cmp
mov
adc
add
xchg
sarl
psrad
and
jecxz
mov
mov
jne
into
call
mulb
jge
xchg
cmpsb
orb
mov
fyl2x
and
fildll
mov
or
jns
pop
into
dec
mov
fbld
sub
pop
je
push
xchg
sarb
sub
inc
add
jecxz
push
xor
imul
inc
mov
repz
sub
addr16
enter
cmc
inc
cmc
pop
stos
add
pop
mov
rcrl
std
lods
mov
and
dec
or
or
sbb
insl
cmp
addl
jns
stos
fsts
inc
pop
and
mov
cmp
mov
fadds
or
and
mov
cmp
dec
jp
shlb
jecxz
lds
cmc
push
push
xor
adc
fisttpl
mov
fsts
jne
push
fildl
add
movsb
jnp,pn
in
inc
and
shrl
dec
jno
dec
loop
xchg
test
movsb
mov
test
sub
push
sbb
lods
aad
cwtl
xor
fisubl
out
es
lds
and
movsb
imul
pop
ret
leave
add
and
xchg
jno
mov
xchg
jo
popa
fbld
ss
scas
decb
lahf
mov
shrl
pop
into
shlb
adc
pop
mov
cmp
js
lahf
lcall
imul
dec
int3
sbb
jo
pop
adc
mov
xchg
add
mov
out
push
cs
or
xor
push
pop
pushf
cs
test
jl
xor
mov
pop
sbb
movsl
jg
sub
mov
pop
sub
cmpsb
push
repz
sti
cli
inc
mov
aad
mov
inc
xor
mov
int
mov
push
les
pusha
xchg
pop
add
loope
lret
pop
lea
inc
mov
adc
movsb
jmp
pop
dec
jb
jmp
xchg
cld
in
push
sbb
lods
outsb
jnp
shll
outsl
inc
pop
xchg
mov
and
xchg
enter
mulb
inc
mov
push
ja
xchg
xchg
loop
jbe
sub
jno
sbb
fcom
push
cmpl
xchg
push
ds
xorl
sub
push
xor
sub
or
or
lods
cltd
xchg
jecxz
mov
sbb
sbb
stos
daa
or
jle
sahf
xchg
pop
cmpb
pop
cli
mov
xchg
std
or
mov
dec
les
lods
cli
je
imul
movl
add
in
mov
add
stos
jno
xchg
hlt
or
jg
sbb
lds
mov
pop
lret
and
sti
leave
ret
xor
push
xchg
stos
push
xchg
jle
int
xchg
sub
fs
js
and
decl
fstpt
bnd
aam
push
dec
xchg
verw
int
push
daa
inc
pop
insb
jp
lods
mov
hlt
cli
or
sahf
jle
xor
lahf
outsb
xor
inc
fistl
pop
or
mov
andb
aam
or
pop
sbb
jne
xchg
pushf
pop
dec
lods
jb
ss
dec
mov
sbb
bound
mov
out
cwtl
cmp
xor
inc
push
rolb
repnz
sar
movsb
mov
cmp
scas
xchg
and
adc
mov
mov
sti
daa
int3
call
scas
test
imul
leave
jmp
inc
leave
dec
xchg
in
stos
mov
cmp
xor
movsb
xor
push
push
xchg
cltd
xchg
repz
sahf
mov
mov
movsb
fdivr
enter
mov
popf
push
rcll
and
imul
in
movsl
cmp
mov
mov
or
dec
rorl
xchg
in
movsb
or
jp
add
and
stos
pop
andb
pop
dec
push
out
arpl
mov
xor
ret
jns
and
movsb
addl
mov
push
or
movsl
mov
iret
bound
lods
in
add
and
movsl
in
int
jmp
push
or
or
ret
adc
pop
test
les
ss
dec
mov
fwait
inc
shrb
into
mov
jp
fxch
push
aaa
std
fildl
test
pop
sysret
mov
imulb
inc
inc
into
cmp
rcrb
and
cld
add
fsubrs
or
repz
xor
xchg
add
adc
mov
jo
int
dec
aad
lret
shlb
dec
test
int
pop
dec
sbb
cltd
pop
xchg
int
mov
rcrb
add
sub
xor
enter
movsb
fisttps
sarl
inc
inc
push
and
movsb
lods
lahf
loop
mov
rcr
lods
andl
xor
ja
dec
jnp
cmp
jae
fnstsw
sbb
or
outsb
and
pushf
xor
inc
jge
stc
jge
jge
sar
mov
enter
inc
test
xor
push
add
gs
sub
xchg
xchg
or
pop
shll
les
push
xor
xchg
repz
cmp
add
inc
cltd
dec
jmp
int3
lcall
jno
pop
jmp
xchg
hlt
ss
add
push
mov
sub
hlt
imul
mov
sti
test
into
mov
inc
out
jae
mul
call
dec
fsubrs
mov
call
mov
jb
xlat
mov
lret
fstl
dec
dec
push
xor
stc
mov
pop
arpl
call
and
lock
rolb
lock
jb,pt
iret
xorb
movsb
in
test
imul
in
and
outsl
inc
sub
in
jl
push
inc
repz
cmc
test
adc
add
cmpb
cmc
rcll
nop
and
insl
sbb
test
ret
pop
mull
ljmp
xchg
out
test
sti
lcall
enter
pop
das
movsb
xor
movsb
hlt
dec
cli
jns
adc
mov
lock
mov
push
mov
test
xchg
ja
call
shll
jl
jle
mov
mov
cvtps2pi
ss
push
leave
xchg
insb
fcmovne
xor
cmpsb
fs
pop
ficomps
cmp
xor
push
mov
add
neg
leave
fsubrl
fndisi(8087
push
aas
xorl
add
push
sahf
repnz
aas
int3
popa
popf
sub
mov
test
mov
ss
pop
sub
icebp
mov
sbb
data16
dec
mov
ss
test
aaa
cld
xor
mov
sub
add
aam
lret
popf
and
fimull
fbstp
jb
mov
shlb
repz
out
out
cltd
cwtl
adcb
push
jl
mov
push
mov
adc
cmpsb
cmc
adc
movzbl
fcompl
mov
mov
arpl
pusha
pop
cmp
mov
inc
mov
pop
inc
cwtl
loope
call
mov
imul
jno
in
dec
push
icebp
hlt
ret
push
jae
pop
pop
push
or
or
adc
xor
movsb
movsb
fldcw
or
xchg
xorb
cmp
fstpt
sbb
pop
repz
pop
jbe
fdivl
pop
and
dec
fdivrs
addl
adc
push
mov
push
xchg
lahf
jp
popf
jmp
mov
push
push
jnp
sub
je
and
xor
add
cmp
movsl
xchg
fstl
inc
mov
ss
cld
cwtl
loope
pop
lds
lods
jle
roll
xchg
out
sub
jle
fsubr
xor
out
fsubp
xchg
test
and
xchg
pusha
aas
mov
inc
jp
jge
adc
or
dec
ficoms
adc
pop
mov
lock
lock
pop
cmc
lds
movsl
adc
dec
jne
ret
mov
jle
sub
mov
push
dec
push
mov
cs
push
jecxz
xchg
out
jmp
out
fcmovu
test
xor
into
mov
add
xchg
cmp
lea
ficoms
shll
addr16
loopne
dec
jp
push
cmp
push
jb
sbb
push
mov
int
popf
xchg
mov
push
add
in
lea
cmpsl
outsl
push
sahf
push
das
add
fdivs
xchg
ret
ror
outsl
in
subl
mov
outsb
xor
and
dec
fsubrl
jnp
ljmp
inc
mov
dec
dec
xor
jmp
cmp
cmp
aam
out
int
cmp
stos
lock
xchg
bound
jbe
iret
mov
inc
dec
les
xlat
addb
jge
jns
pushf
sbbb
imul
jg
jb
int3
jnp
loopne
lcall
cs
sahf
in
call
sahf
push
jge
or
cmp
dec
add
sub
xchg
fs
repnz
popa
add
leave
jl
rcrb
push
mov
ljmp
inc
xor
jno
inc
out
jno
pop
add
iret
fsts
shlb
cmc
icebp
cmpsl
loopne
jg
push
mov
mov
inc
adc
scas
pop
cmp
clc
mov
sub
add
pop
lods
add
std
fidivl
mov
cmp
loop
outsb
jbe
cmpsb
in
shl
mov
filds
push
jno
lods
jmp
cmp
das
imul
xchg
jp
subl
mov
iret
mov
dec
lcall
push
icebp
sub
jle
jp
or
out
cmp
or
push
mov
xor
jle
fsubr
cmpsl
sbb
rorl
jl
xchg
pop
hlt
cmpsb
adc
dec
lods
xchg
sub
xorl
sbb
or
lea
divb
imul
stos
xor
inc
sub
adcb
dec
nop
inc
iret
lea
cmp
jmp
sub
lods
push
lea
out
inc
sbb
cwtl
jg
sti
cmpsl
jecxz
inc
ret
pop
push
divl
insl
andb
pop
pop
mov
icebp
sti
jle
movsl
dec
jl
movsb
cld
sahf
test
or
add
sbb
adc
push
mov
dec
data16
cmp
int3
add
mov
jmp
xorl
in
cmp
jb
test
icebp
push
xor
adc
iret
xchg
adc
mov
inc
adc
in
adc
xor
or
iret
push
movsb
fisubrl
out
jmp
mov
dec
sti
hlt
rclb
cs
jno
rcll
xchg
ret
frstor
fnstsw
xor
ret
stos
daa
xor
test
test
lcall
mov
mov
sbb
test
mov
sub
stc
pop
xorb
mov
mov
ret
dec
arpl
xor
push
cwtl
fisttpll
pop
inc
fwait
jbe
add
adc
mov
mov
mov
int
push
sub
test
or
sub
sti
or
mov
sti
mov
pop
bound
enter
out
add
mov
adc
cltd
scas
dec
mov
jmp
in
pusha
sbb
fcomip
test
push
int3
mov
enter
in
loopne
mov
imul
cwtl
andl
push
or
jecxz
fs
cld
push
mov
sahf
mov
mov
sub
dec
jae
adc
pushaw
fwait
js
push
pop
xlat
lea
mov
cs
and
and
and
push
push
or
sub
push
jne
scas
rcll
mov
arpl
inc
sbb
test
add
icebp
loopne
inc
mov
cld
loopne
sbb
bound
fnstenv
gs
test
and
in
arpl
mov
sbb
xchg
xor
push
pop
fsubrs
add
jne
mov
aam
data16
incl
mov
and
popa
imul
shl
or
jo
stos
lcall
mov
test
xchg
ljmp
loop
loopne
neg
mov
out
or
ret
mov
jg
data16
into
mov
pop
xor
iret
xchg
and
and
fs
cmpsl
cmpsl
out
stc
push
aam
cltd
mov
in
sub
ljmp
add
push
in
and
sbb
int
mov
scas
nop
inc
and
dec
pop
or
mov
jns
loopne
ret
mov
movzbl
hlt
call
bound
push
mov
popf
adc
jne,pn
nop
and
rcll
stos
daa
pop
enter
xlat
test
negl
setl
add
mov
insb
dec
cli
jp
loop
ret
xchg
fisttpl
arpl
out
inc
xchg
fsubrl
scas
imul
arpl
jne
push
adc
and
mov
mov
mov
in
pop
and
mov
mov
mov
jecxz
fmuls
cmpsb
insb
ret
jo
jae
push
mov
mov
jb
or
adc
lcall
aaa
cld
das
inc
leave
addr16
inc
push
stc
divl
add
decb
push
jmp
or
mov
fsubrs
dec
outsb
and
add
mov
or
ds
push
incb
jbe
mov
jle
pop
nop
das
pop
imul
pushf
or
xchg
loope
out
nop
xchg
or
mov
lret
mov
cmp
sub
mov
push
lahf
fdivl
dec
fsubs
std
xor
leave
xor
jl
cld
scas
push
outsb
inc
je
cld
ret
or
sarl
lahf
divl
arpl
popa
cmp
or
mov
adc
int
subl
xchg
fiaddl
pop
add
mov
pop
out
testl
leave
mov
sbb
add
xor
xchg
pop
pop
adc
mov
pop
cmp
fdivs
mov
je
movsb
mov
and
test
jle
ret
fwait
cmp
jg
pusha
call
mov
push
cltd
cwtl
push
and
xchg
push
push
xchg
mov
int
or
outsl
or
imul
int3
adc
ret
add
test
test
cmpsl
outsl
add
push
xchg
xchg
loopne
outsb
mov
hlt
sbb
mov
hlt
inc
mov
shlb
mov
dec
mov
dec
int3
xor
lea
inc
bound
and
mov
int
fistpll
cmp
fstpt
jno
adcb
daa
sahf
addb
mov
outsl
inc
mov
icebp
pop
es
ret
imul
movsl
pop
sti
cmp
mov
pslld
sbb
imull
pop
pop
mov
xor
push
aas
es
les
jmp
inc
mov
sti
dec
sbb
jmp
ljmp
dec
stos
cmp
movsb
mov
ljmp
aam
mov
mov
clc
es
mov
mov
sub
mov
mov
jne
outsl
push
sbb
jle
xor
cmp
jnp
sub
mov
outsb
dec
mov
repnz
outsb
repnz
nop
mov
mov
jnp
scas
sbb
idiv
testl
jnp
add
add
loopne
lock
dec
mov
cmpsl
xchg
jne
cmpl
fstpt
lods
imul
sub
cltd
lahf
cmp
daa
test
push
xchg
loope
gs
mov
popa
mov
xchg
lds
popf
popa
shrl
cmp
cmp
adc
push
push
xor
and
aas
or
jo
aas
lahf
out
pop
push
out
stos
movsl
or
xchg
outsl
fcmovbe
mov
sub
leave
mov
lods
push
inc
jb
ret
dec
jecxz
gs
sbb
jmp
adc
pop
inc
or
jae
lods
in
cmp
ss
sbb
push
rcl
dec
popa
cmpsb
int
jne
mov
and
push
jp
in
je
lods
rorl
loop
xor
or
xor
pop
fs
mov
adc
push
dec
mov
sbb
push
in
mov
inc
mov
into
pop
xchg
gs
jp
mul
fsts
mov
mov
aas
cmpsb
mov
cmp
sbb
mov
add
scas
outsl
mov
xchg
xor
ja
jae
xchg
cwtl
repz
aad
std
push
inc
hlt
and
mov
js
cmp
mov
fs
mov
int3
mov
sbb
bound
pop
dec
xchg
mov
mov
popf
fcom
divb
jecxz
jle
dec
push
fistpl
jle
sub
jle
test
into
sub
sub
mov
fdiv
dec
imul
mov
push
mov
pop
cmpsl
sbb
hlt
jp
mov
mov
les
test
jmp
aad
lret
insb
mov
test
fs
lret
cmp
mov
cmp
divb
mov
subb
loop
push
inc
sub
movsl
dec
shrd
popl
cmpsl
aad
sbb
outsb
jb
mov
inc
outsl
ja
mov
jg
data16
lods
sbb
mov
push
push
call
lods
xor
mov
jae
sub
push
mov
mov
fimuls
orl
ret
imul
mov
es
cmp
in
xor
cmpsb
push
cld
inc
push
outsb
xor
adc
movsl
repz
lods
mov
inc
mov
shlb
inc
hlt
fldz
js
lcall
shl
mov
es
pop
insl
xchg
push
inc
mov
mov
mov
int
aam
sbb
or
cmp
in
fcoml
insb
mov
ret
mov
jle
lods
ret
mov
imul
bound
fmuls
cmp
int3
mov
jbe
rol
push
sub
bt
mov
dec
pop
cmp
inc
cmp
xchg
sbb
adc
mov
pop
push
or
enter
sbb
repz
add
cmp
lret
call
and
imul
cmc
jle
push
add
dec
lret
popa
push
or
jnp
fs
dec
faddl
arpl
cwtl
fcomps
sub
mov
outsb
ret
xchg
call
mov
aam
xchg
adc
fisubl
icebp
add
or
push
sub
cmp
sub
sbbb
scas
fwait
arpl
sbb
fdiv
ja
push
mov
cltd
jge
ss
xchg
dec
push
scas
lahf
and
mov
or
jge
xchg
mov
dec
adc
fdivrs
js
sub
push
or
pop
ds
in
adc
insb
arpl
pop
xchg
into
int
xchg
scas
inc
xchg
sub
and
leave
mov
dec
nop
mov
add
stc
fiaddl
adcl
das
dec
in
ja
cmpsl
in
shrb
or
mov
push
pop
call
aam
mov
imul
addr16
out
dec
cmpsl
int
sbb
fisubrl
ja
aad
pop
orl
sahf
nop
and
shrd
loope
jmp
arpl
shl
xchg
rclb
nop
int
popf
or
je
cli
xor
mov
lods
pop
mov
jns
aaa
lret
bound
jge
and
sbb
fnstenv
xchg
xlat
and
sbb
mov
ret
xor
jl
push
sub
lods
shll
adc
popa
mov
aam
js
or
mov
fidivl
lods
test
mov
loope
cmp
stc
repnz
loope
fsubs
xchg
leave
fnstenv
aas
push
shlb
pop
add
out
xchg
orl
cmp
movsb
push
jp
add
test
repz
or
leave
aas
call
clc
sbb
pop
lods
sub
cmp
fildll
adc
mov
into
xor
push
jo
movsb
cmp
adcb
outsl
scas
push
outsb
sti
push
fisubrs
out
xchg
sarl
sub
add
mov
or
or
pop
xchg
xchg
cld
insl
prefetch
fs
test
xchg
fwait
push
mov
adc
subb
mov
nop
sbb
sti
sbb
adc
repz
rcrl
sti
jp
or
push
rcr
repnz
in
or
add
sbb
into
lods
adc
sbb
fstpt
xor
out
mov
sti
sub
mov
or
test
mov
jle
mov
inc
add
inc
inc
push
xlat
add
inc
mov
and
aam
test
call
loop
test
sbb
xchg
pop
fucomp
or
es
mov
addr16
psubq
inc
in
leave
adc
push
push
es
std
jno
es
fwait
xchg
cwtl
jmp
mov
mov
popf
imul
daa
mov
ja
lcall
bound
cmp
outsb
repnz
pushf
mov
push
sbb
dec
lds
jnp
das
inc
pop
pop
mov
mov
in
repnz
jns
sub
js
cmp
lret
mov
jmp
add
fdivrl
xchg
mov
mov
sbb
repz
adc
jns
sbb
dec
xor
cmp
int3
mov
ret
pushf
clc
cmc
das
dec
cmp
cmp
lret
xorb
xchg
pushf
sti
int
xor
mov
mov
scas
jne
out
or
mov
mov
je
fisttps
scas
jo
out
mov
push
sti
push
imul
dec
xor
fwait
or
movsb
add
lret
repnz
fucom
stos
jecxz
lds
ret
mov
cmpsb
mov
les
adc
aas
jno
sub
mov
popa
movsl
movsb
out
pop
mov
xor
cltd
cmp
stc
jg
loope
shll
repz
ret
inc
jg
fsub
mov
jmp
pop
and
ret
pop
adc
pushf
sahf
xchg
int
add
lds
jns
mov
mov
test
jo
xlat
adc
lea
mov
dec
movsb
jo
fcoml
fdivs
scas
movsl
ret
std
mov
cmp
outsb
pop
out
adc
add
mov
adc
xor
mov
mov
and
out
adc
addr16
cltd
aaa
pop
xchg
xor
lahf
arpl
adc
dec
inc
fisttpll
cmp
adc
add
popf
lahf
mov
pop
add
lds
ja
mov
jnp
adc
lret
scas
push
hlt
dec
daa
mov
xorl
mov
inc
pop
mov
mov
pop
mov
shrl
xor
ret
fwait
adc
cmp
mov
xlat
out
push
test
sbb
and
push
pop
cmpsb
mov
cmp
stos
stos
ret
test
aad
add
push
aam
mov
push
bound
jae
sub
and
dec
jb
push
fwait
jmp
jae
mov
lods
in
push
lock
push
xchg
push
mov
ja
popa
lods
lods
xchg
or
iret
cmc
jne,pn
loope
clc
test
sbb
pushf
sub
jg
ds
mov
sbb
pop
lods
jnp
jno
loope
imul
leave
cmp
or
add
adc
dec
out
xor
cwtl
fdivs
push
dec
sbb
dec
inc
push
sbb
lods
lret
js
inc
aam
inc
dec
stos
in
test
cltd
sbb
iret
out
sub
inc
mov
xor
out
cmpsl
cmpsb
ljmp
cmpsl
gs
xchg
dec
iret
outsl
fxam
jle
aaa
xor
aam
xor
inc
movsl
jae
std
or
jl
pop
insb
push
push
inc
ja
jmp
call
and
lea
mov
jp
aaa
popf
pop
mov
ljmp
xchg
cmp
scas
mov
test
sub
mov
movsb
sub
imul
push
je
adc
inc
setnp
mov
jno
sti
lds
mov
cld
inc
mov
sbb
imul
and
and
xor
push
cltd
arpl
fsubrp
rorl
mov
rcrl
or
ret
or
sbb
pushf
testb
sbb
mov
ret
sarl
dec
inc
imul
out
xor
dec
pop
cmpsl
repnz
and
jo
scas
sbb
sbb
adc
add
clc
xor
mov
adc
cwtl
mov
add
addr16
push
or
jne
mov
test
xchg
push
aaa
int
lea
dec
sub
cmp
mov
jg
stc
or
pop
xchg
in
xor
insl
and
sbb
ret
fimull
and
loope
pop
inc
enter
lahf
mov
adc
js
les
cli
sub
inc
sub
dec
clc
cli
jg
xor
xchg
mov
hlt
or
repz
lahf
push
iret
dec
mov
sbb
or
adc
mov
movsb
insb
scas
dec
stos
fwait
push
roll
or
mov
rolb
push
popa
mov
out
mov
cmp
mov
xlat
cmp
out
icebp
cmp
ret
jb
mov
xor
out
subl
lea
mov
ja
dec
adc
fdiv
scas
cmp
mov
pushf
sub
sbb
sbb
push
mov
mov
mov
push
or
cmc
fisubl
mov
push
add
inc
adc
mov
addl
adcl
rorl
cmp
test
inc
lods
push
xor
verw
push
sahf
inc
aaa
mov
fdiv
jg
jnp
sbb
testl
je
xor
sub
cli
dec
mov
pop
cmc
xchg
lods
aas
jb
cmc
pop
outsl
xchg
ds
xchg
mov
mov
pop
adc
cmp
xchg
mov
push
inc
and
shlb
jb
cmp
mov
push
outsb
jecxz
lds
mov
cli
dec
pop
jmp
adc
lcall
adc
pushf
jge
enter
sub
ljmp
sahf
sbb
mov
lds
adc
test
cmpsl
leave
pushf
rclb
dec
jge
push
push
out
xor
out
xor
jne
xchg
movsb
imul
in
mov
cmp
jns
sbb
pop
cmpsl
dec
xor
mov
and
imul
sub
xchg
aad
insb
jge
lea
cmp
mov
jno
int
shrd
in
push
je
pop
fsubp
pushf
inc
jb
call
arpl
out
jae
and
arpl
icebp
insb
sbb
es
add
sbb
xchg
push
test
adc
std
xor
mov
rcrl
stos
cwtl
adc
inc
xor
cs
addr16
int
inc
lea
jnp
sti
lret
popf
sub
mov
sub
sbb
pop
and
mov
stos
popa
push
xor
into
ds
sbb
add
sbb
subl
enter
add
inc
cli
gs
fbld
pop
mov
andb
mov
movsl
mov
pop
xchg
xor
outsb
xchg
cmc
les
xor
icebp
adc
xchg
or
pop
int
push
xchg
popa
sub
pop
ss
pushf
push
aad
cmp
lock
fistpl
out
xchg
das
aad
sti
jb
pop
jl
jae
adcl
xor
insl
pop
push
cmpsl
jb
mov
xchg
in
stc
jns
shlb
fwait
cmp
xchg
mov
push
test
sub
jne
or
sbb
sub
daa
xor
pop
xchg
add
mov
icebp
fisubs
push
ljmp
jne
jp
icebp
sub
xchg
aas
mov
bound
mov
insl
out
xchg
sbb
ljmp
mov
mov
gs
shl
jle
mov
stos
test
and
cmpsb
pop
pusha
mov
xchg
mov
mov
or
movsb
mov
and
pushf
iret
xor
push
mov
push
dec
lcall
and
mov
mov
loope
andl
jecxz
pop
mov
sub
aad
adc
sbb
cs
mov
scas
rolb
enter
das
rcll
lods
mov
stc
or
mov
push
mov
jbe
outsl
push
and
int
pusha
dec
hlt
repz
out
aas
out
outsl
pop
mov
inc
cmpsb
mov
mov
fsubrs
or
sub
adc
xchg
sarb
xchg
and
mov
in
add
lcall
push
out
popf
aam
sub
jl
ss
into
pop
into
sub
stos
ljmp
sbb
mov
repnz
sub
xorb
mov
pop
sub
sub
or
orb
cmc
mov
dec
and
xchg
ss
cld
call
push
ret
mov
sarb
aad
cmpsb
popf
lea
int
mov
dec
pop
mov
rolb
jp
adc
push
adc
imul
fwait
test
push
jecxz
scas
lret
cwtl
icebp
mov
jae
stos
push
imul
jg
ret
jo
roll
jae
dec
movsl
pushf
jge
sarb
insl
pop
dec
jno
imul
clc
push
dec
repnz
and
sbb
xchg
xchg
sbb
mov
addl
negl
inc
pop
jge
jo
dec
fstpt
popf
jnp
mov
adc
xchg
and
mov
xchg
repnz
sub
cmp
inc
or
dec
push
inc
cmp
ficoms
lret
sbb
mov
inc
pusha
adc
cwtl
push
inc
lret
mov
jmp
pushf
stos
xchg
call
pop
call
mov
sarb
test
add
inc
mov
inc
sbb
mov
xor
or
sub
mov
jecxz
push
clc
jno
xchg
or
cmp
jl
dec
xor
enter
xchg
fstpl
mov
je
cld
ljmp
in
mov
movsb
lods
sbb
fstpt
bound
pop
mov
enter
xor
xchg
cmpl
iret
incb
mov
paddusw
sbb
hlt
push
bound
dec
push
out
sbb
mov
test
xlat
mov
mov
pop
out
orb
cmp
jno
arpl
xchg
mov
gs
mov
std
cmp
repz
test
cmpsb
xchg
jmp
in
ja
rcrl
add
sub
cmp
aaa
sub
scas
les
sbb
xlat
mov
arpl
cmpsb
or
inc
cwtl
mov
mov
test
sbb
ja
lahf
icebp
jno
pop
aam
sahf
pop
inc
xor
test
add
das
mov
jbe
cmp
repnz
insb
pop
adc
and
add
or
arpl
imul
call
call
je
cmp
scas
xor
sbb
imul
xchg
or
lock
outsb
aad
and
jg
addb
inc
ficoms
or
inc
mov
in
cmp
cmpb
ret
in
dec
es
sbb
dec
in
xchg
adc
mov
fisttpl
movsb
dec
pop
adc
jp
ret
adc
mov
cmp
es
push
adc
cmp
jb
insl
cmp
ds
xchg
push
cmpsb
es
add
int3
fcompl
ljmp
pop
in
lds
push
mov
xor
test
andl
mov
xchg
cmp
cmp
push
xor
xor
scas
cmpl
rclb
jl
xchg
repz
add
cs
mov
mov
imul
inc
jg
movsb
or
fnstsw
or
aam
stos
aad
aaa
jmp
cmp
cmovns
push
or
out
bound
jno
mov
lret
adc
out
das
fadds
adc
enter
push
into
addr16
inc
dec
divps
sub
mov
mov
push
pop
jge
daa
gs
fsubrs
dec
xor
mov
ds
into
push
push
mov
lret
aad
mov
mov
mov
or
lods
pop
sub
mov
arpl
inc
xchg
divl
loope
inc
xor
test
mov
push
aas
in
xor
mov
and
add
test
push
shrl
daa
cmp
arpl
js
xor
sub
jmp
dec
sbb
sub
lods
inc
xchg
sbb
dec
loope
and
mov
inc
jb
cmpsl
std
add
lock
xchg
loope
or
loopne
push
inc
aad
fsubrs
int
rolb
mov
inc
pop
push
icebp
icebp
xchg
mov
and
xlat
lea
icebp
ljmp
push
mov
xchg
in
xchg
pop
sub
xchg
fisttpll
dec
repz
mov
cwtl
addl
rorl
pushf
loopne
jnp
pop
cmc
lret
mov
xchg
cmp
jecxz
inc
ret
pushf
sub
out
into
cli
fidivl
scas
sbb
pop
sub
push
or
aam
adc
test
xchg
pop
cmc
shrb
mov
jae
or
inc
stos
loopne
push
cwtl
popf
jns
adc
xchg
xchg
mov
data16
or
sub
adc
adc
loopne
in
pop
cmp
push
inc
enter
mov
pop
inc
shrl
push
test
add
out
sub
add
popa
test
mov
jecxz
and
mov
insb
xor
cltd
test
mov
pop
fwait
dec
pushf
popa
mov
inc
dec
add
jmp
mov
pushf
addl
nop
js
insl
hlt
mov
push
pop
movsb
sarl
loope
or
loopne
subb
mov
or
or
or
xchg
mov
clc
push
adc
inc
mov
fs
out
fs
sub
inc
repnz
lock
int3
es
dec
push
mov
xlat
inc
and
jp
sub
imul
aam
adc
push
ret
inc
cmpsl
xor
out
dec
cmp
jg
xchg
stc
ljmp
jl
adc
mov
imul
pop
mov
pop
out
nop
clc
mov
mov
rol
std
xchg
mov
cmp
xor
lea
xor
mov
cmp
rolb
cmp
and
sub
pop
mov
inc
stos
addr16
or
jo
out
ss
mov
fildl
ds
and
aad
fimuls
xchg
xor
and
cs
inc
adc
movsb
lods
jle
dec
cs
adc
loope
mov
popa
sub
or
add
cmpsl
lods
insl
inc
push
mov
jecxz
jecxz
je
addl
addr16
or
loope
pop
ds
int3
adc
out
sbb
mov
cltd
dec
loopne
scas
lock
pop
pmaxsw
push
mov
pop
repz
cltd
mov
mov
outsb
sbb
in
hlt
cmp
inc
xchg
adc
hlt
pop
xor
inc
shrl
repz
adc
xchg
shll
push
inc
add
jnp
sbb
and
mov
cmpl
stos
mov
scas
pop
xchg
aam
mov
lret
test
pop
pop
mov
push
jns
xchg
add
cltd
lcall
cmp
mov
aas
cmc
mov
mov
dec
scas
arpl
das
cwtl
sub
mov
shlb
les
mov
lods
popa
mov
sbb
add
lcall
shrb
inc
bound
sub
sub
popf
and
dec
into
testl
add
xchg
mov
scas
cwtl
xchg
push
hlt
xchg
jns
inc
dec
push
sbb
dec
xor
loope
rorl
fstl
push
adcb
clc
sbb
aas
add
out
inc
les
xchg
xchg
push
adc
adc
or
and
and
cli
jge
clc
insl
test
mov
and
xlat
repnz
add
sbb
xlat
test
pop
or
fiadds
data16
add
fucomi
out
cltd
lock
into
popa
xor
stos
ret
push
in
in
sbb
popa
les
cmp
js
and
add
stos
into
pushf
mov
mov
lods
inc
repnz
pop
leave
aad
rcll
insb
rcrl
pop
pop
pushf
cmpsb
stos
out
sti
std
mov
popl
out
dec
loope
add
gs
insb
inc
fistl
test
clc
mov
popa
lahf
scas
push
lcall
es
sub
push
mov
mov
test
mov
in
shrl
pop
movsl
jecxz
push
iret
je
mov
in
dec
decb
orl
push
sub
mov
cmp
cmpsl
out
cli
std
adc
inc
iret
jg
je
movsl
rcrl
inc
pop
bound
loopne
nop
push
fcoml
cwtl
jmp
mov
or
imul
push
sub
rolb
jmp
testb
cmp
inc
lea
mov
cmp
das
jle
stc
fdiv
sub
loop
mov
or
outsb
add
and
xor
adc
or
mov
inc
or
sub
cmpb
jb
dec
ret
jmp
imul
rcr
pop
imul
and
sahf
in
push
mov
push
dec
cmp
pop
ss
movsl
jo
pop
lret
pop
mov
gs
push
xor
mov
pop
movsb
push
aas
je
inc
cmp
in
pop
fbstp
std
test
repz
dec
jo
mov
scas
les
pop
stos
push
pop
sbb
enter
xchg
stc
cmpsl
jle
sti
push
xchg
popa
testl
push
sbb
outsb
xchg
sbb
mov
pop
jl
lods
xchg
dec
xor
fildl
adc
test
push
aas
sbb
lahf
fldcw
ret
dec
fidivrl
xlat
mov
xchg
outsl
mov
pop
outsl
sarb
repz
leave
dec
cmpl
mov
cmpsl
xor
into
fiaddl
inc
dec
xchg
inc
inc
fcoml
shl
or
cli
pop
sbb
adc
iret
mov
add
fs
mov
or
xchg
movsb
das
mov
cli
dec
sub
dec
cmp
cmp
jmp
test
loop
nop
repnz
jmp
mov
xchg
cwtl
jmp
push
xchg
cwtl
mov
shlb
mov
push
arpl
mov
ret
and
das
bswap
fs
xchg
pop
roll
or
loopne,pn
in
fiaddl
lret
lods
push
push
mov
int
push
in
jg
mov
enter
out
and
jbe
mov
cmpsb
in
cld
pushf
adc
shl
sub
add
dec
loopne
aam
xor
jmp
jg
lods
pop
add
aam
into
adc
insl
rorb
xchg
adc
cs
into
pop
jo
fidivrs
cltd
mov
sarb
sub
cmpsb
mov
repnz
inc
je
ja
mov
fsubs
sbb
into
inc
test
push
push
cltd
jg
int
shll
mov
pop
sub
pop
ret
call
stos
pop
xor
pop
test
mov
out
jbe
cs
stos
xchg
pop
jnp
call
mov
cli
inc
dec
push
inc
dec
push
sbb
xlat
xor
mov
lcall
pusha
cmp
ljmp
popa
sub
scas
aas
outsb
sub
jle
scas
insl
mov
cli
bound
loop
add
leave
or
in
ret
ret
mov
repz
in
push
loopne
dec
sar
and
mov
aas
pop
xchg
add
xchg
icebp
hlt
push
dec
lret
and
bound
fidivrl
loope
xor
inc
fdivs
sub
sub
add
test
cmp
jge
dec
push
test
pop
lods
jge
or
stc
mov
ret
mov
pop
addr16
ja
pop
cli
repz
rcr
frstor
insb
lea
jl
push
aas
lret
push
mov
stc
sub
scas
jmp
data16
iret
mov
jl
ss
insb
jae
pmaxub
xor
dec
daa
test
fdivrs
inc
sbb
fnstenv
cmp
icebp
sbb
adc
fs
jnp
jl
call
icebp
pop
mov
jb
push
imul
sub
add
cmpsl
ret
cmp
ficomps
adc
push
dec
mov
sbb
mov
mov
add
mov
or
sub
sub
mov
shl
push
mov
add
cmp
les
sbb
shlb
xchg
sahf
lods
mov
jge
lods
call
je
test
adc
in
lods
adc
or
addr16
add
fdivrs
jl
jae
inc
or
pop
add
push
add
sbb
or
inc
push
xor
lret
xlat
sbbb
shrb
or
or
adc
cmp
push
add
inc
cwtl
sub
pop
jmp
dec
stc
data16
daa
cvtdq2ps
cmc
rorl
mov
test
adc
stos
cmp
enter
cmc
fnstcw
ljmp
popa
sbb
and
push
pop
cmpsl
push
insl
shrl
adc
enter
repnz
icebp
jno
ja
cmpl
and
repz
and
xchg
xchg
xchg
insb
add
pop
fisubl
inc
lock
popa
push
pop
inc
cmp
sti
dec
inc
shll
xchg
and
repnz
push
jae
loop
xchg
ja
lcall
jecxz
movsb
insb
inc
push
fcoms
lret
add
jl
xchg
adc
cmp
jp
ja
sub
int3
jnp
and
push
sbb
shl
pop
mov
psrlw
addr16
xchg
incl
inc
aaa
push
cmpl
insb
std
stc
fwait
sub
lcall
pop
dec
inc
test
cmpsb
sahf
mov
or
jg
adc
cli
sub
xchg
mov
push
aaa
jne
or
iret
sub
cld
aas
inc
fistl
pop
js
scas
test
leave
daa
aaa
or
xchg
and
pop
push
sti
sti
jecxz
adc
cmc
movsb
jge
push
adc
push
shll
inc
mov
imul
jge
and
push
bound
imul
sbb
xchg
push
jo
adc
mov
mov
mov
sahf
stc
imul
xor
std
popf
ja
shl
fmull
mov
fistpll
add
dec
out
mov
adc
test
jb
lds
mov
jl
jno
pop
ret
inc
jge
in
and
xchg
sub
or
cwtl
mov
imul
sti
fiadds
cmpsl
cmp
cwtl
xchg
xchg
sti
or
mov
loop
jl
fdiv
shlb
lahf
push
ljmp
int
jno
inc
mov
mov
sub
or
and
xchg
fimuls
sub
les
in
pop
inc
fstps
sbb
aaa
ror
ret
in
pop
xchg
adc
mov
gs
lods
pop
push
mov
cwtl
cli
scas
push
mov
popf
loop
push
jns
cmp
roll
sub
enter
xchg
pop
mov
ret
das
push
cmp
mov
orb
fiaddl
sbb
outsl
sbb
mov
pop
bound
ds
icebp
dec
or
xchg
lods
and
jl
pop
add
pop
sub
ja
nop
aaa
push
xchg
popw
push
xchg
daa
push
xchg
fsub
mov
push
pushf
xchg
push
add
stos
or
dec
fiaddl
aaa
shr
xchg
pop
pop
sub
mov
imull
jp
pop
pop
ficomps
xchg
xchg
push
mov
icebp
in
adc
and
loop
or
cmp
push
xor
mov
pop
jecxz
ss
outsl
rcrb
mov
scas
outsb
sbb
xchg
dec
scas
orb
leave
add
adc
aaa
loopne
jbe
push
lods
mov
inc
push
icebp
insl
arpl
mov
cmp
sub
mov
negb
insl
lock
mov
popl
mov
jnp
xor
mov
pop
pop
js
or
std
cmp
push
jmp
pop
and
mov
pop
sub
jl
iret
addb
ja
pop
cmp
add
cs
dec
dec
xchg
xor
and
pop
cs
cmpsl
cmp
fcom
test
insl
mov
mov
adc
adc
fstpl
scas
jg
in
xchg
xchg
or
lds
push
dec
fstl
out
pop
jmp
bound
out
jecxz
loope
fs
lret
mov
and
je
es
xchg
cmp
fcoms
in
ljmp
sbb
cwtl
mov
inc
fwait
jmp
jno
paddb
out
adc
push
xor
in
aam
movsl
imul
in
mov
mov
sbb
out
adc
pop
mov
aam
in
fistl
cmp
fcoms
mov
cmpb
cmp
lea
xor
lcall
mov
xchg
mov
cmp
aaa
sbb
dec
les
outsb
jno
pop
xchg
mov
call
inc
xor
jp
jge
mov
xchg
fildll
fs
imul
add
push
and
aad
push
inc
fldl
mov
ljmp
fwait
push
pop
out
xorb
sbb
adc
xchg
push
add
pushf
hlt
mov
push
xchg
cmp
mov
sub
xor
jmp
mov
mov
xorl
lds
sbb
and
loopne
sub
xor
ja
scas
mov
fidivrl
addr16
mov
testl
gs
jge
aam
sahf
push
xor
ljmp
adc
lahf
jbe
xchg
ljmp
push
movsl
pusha
inc
pop
out
cmp
rcl
jle
into
stos
adc
fisubl
xor
xor
and
sahf
movsb
xor
pop
mov
test
cmp
sub
sbb
dec
stc
lcall
test
shrb
int
mov
push
ja
or
je
ret
adc
adc
dec
jb
addr16
pop
cli
mov
xchg
jae
and
mov
dec
push
jl
cmpsb
jae
pop
lret
bound
into
fsubs
mov
push
sub
das
aas
cmp
xchg
lea
ljmp
mov
out
mov
ret
movsb
cmpl
arpl
mov
mov
xor
add
inc
cli
pop
nop
pop
ja
cmp
pop
jnp
fcmovnb
mov
scas
or
lods
lods
add
into
stos
and
scas
xchg
add
xor
jp
nop
or
sbb
mov
xchg
ficompl
jae
dec
in
xchg
popf
mov
lret
cs
ret
imul
sbb
iret
sub
jbe
sub
xchg
scas
pop
mov
jmp
add
cwtl
ret
pop
xchg
fildll
iret
ret
mov
jge
hlt
xchg
pop
sub
push
mov
sub
push
jecxz
xchg
add
jno
xchg
aam
mov
mov
sbb
daa
jb
mov
push
stos
mov
into
inc
and
in
mov
mov
dec
cmp
out
in
and
mov
push
or
stc
icebp
pusha
xchg
sub
or
subb
xchg
imul
dec
xor
lods
xchg
adc
cmp
mov
add
je
add
xchg
dec
xlat
mov
cmp
jbe
les
lret
jp
jo
data16
imul
sub
mov
inc
sbb
jg
mov
xor
pop
repz
mov
ljmp
xor
popa
loop
lock
push
in
mov
xor
inc
ficoms
leave
stc
sub
sub
xor
pop
jle
jno
adc
pusha
xor
aas
repnz
and
cmp
insl
enter
lret
xor
fwait
std
sub
fsubrl
mov
sbb
ds
mov
in
rol
cmp
shl
push
mov
aas
idivb
addr16
mov
lret
daa
pusha
lcall
jae
sahf
pusha
cli
xchg
inc
mov
jp
add
aas
int3
mov
adc
xor
shll
or
or
mov
out
mov
je
aas
mov
call
rclb
lock
cmp
dec
xlat
inc
xor
lahf
out
lock
mov
mov
dec
in
shl
jnp
xor
pop
xchg
int
jno
aas
fisttpl
mov
mov
lea
flds
mov
or
cmp
daa
jp
and
outsl
cld
div
xor
inc
pop
xchg
jp
bound
lret
lret
shrl
sub
outsb
and
pop
jge
repz
add
dec
inc
mov
and
cltd
test
cwtl
aam
push
loopne
decl
push
fidivl
pop
cmpsb
push
cltd
xchg
out
cmp
pop
test
mov
fnstenv
mov
mov
js
pop
jg
xchg
movsl
data16
xchg
push
jnp
mov
enter
das
inc
mov
data16
mov
inc
ds
clc
cmp
loopne
push
sbb
xchg
loope
dec
jl
pop
push
dec
ret
lods
mov
push
frstor
mov
js
daa
cmpsb
lret
sti
ja
sbb
sahf
loope
mov
sub
lret
add
in
push
push
mov
add
push
sub
add
ljmp
je
mov
cmpsl
add
dec
sub
inc
adc
xor
movsb
pop
gs
cmp
popf
rclb
mov
dec
jg
out
xor
es
test
out
jb
pop
out
cmc
mov
es
test
sub
mov
jno
xchg
neg
sbb
or
cmp
lock
mov
imul
cltd
inc
loope
xchg
sti
fucomip
xchg
jne
xor
out
cwtl
gs
outsb
xchg
mov
xchg
mov
movsl
add
ficoml
iret
pop
addr16
rol
inc
pop
insl
repz
or
xorl
pop
cmp
leave
mov
enter
mov
sahf
aam
or
add
lock
sub
cmc
stc
mov
pop
insb
pop
jmp
std
out
add
ja
jo
cld
jns
mov
dec
test
or
iret
sub
add
stos
dec
xor
and
push
cld
mov
mov
inc
pop
fwait
cmpsl
aad
xorb
dec
jp
call
ss
movsl
cmp
cmpb
mov
fndisi(8087
out
or
pushf
mov
mov
dec
icebp
sbb
add
jno
dec
dec
ret
outsl
add
mov
and
loope
inc
call
mov
xchg
cmp
dec
int3
outsb
and
xchg
inc
or
or
in
and
mov
or
jbe
out
sbb
cmp
fwait
bound
adc
flds
cmp
lcall
adc
jno
jb
mov
pop
jb
xchg
in
pop
std
push
out
insl
jo
mov
loop
sub
dec
std
testb
push
icebp
add
repnz
or
xchg
stos
outsb
jg
pcmpeqb
movsl
scas
mov
sub
test
scas
mov
popa
stos
pop
jns
mov
add
orl
mov
je
mov
sahf
inc
lahf
cld
mov
dec
pop
fnsave
std
cmc
push
arpl
lcall
adc
call
sti
sub
pop
pop
rorb
push
jecxz
popf
xor
xchg
and
out
jle
adcl
lods
pop
sub
shlb
adc
dec
lcall
xor
stos
je
push
fscale
fdivl
rclb
jl
aad
mov
cmp
lcall
loope
lret
stos
ljmp
jle
lds
dec
inc
sarb
scas
popa
mov
cltd
dec
shr
add
rclb
addr16
jno
sbbb
pusha
mov
sub
outsb
push
lahf
shll
aaa
loope
mov
push
ret
int
imul
add
xlat
push
dec
push
notb
pop
in
sub
out
push
decl
jbe
or
into
add
or
pop
pop
mov
or
lcall
out
fdivs
aad
pop
push
lea
pushf
inc
enter
rcrb
inc
cld
or
cmp
repz
out
and
jge
mov
jge
nop
in
adc
in
pop
sub
inc
xor
jecxz
mov
out
mov
jle
hlt
outsl
int3
loopne
fwait
lret
pop
push
inc
sub
push
pop
xchg
dec
mov
jmp
loope
mov
cmp
frstor
ficoms
lcall
fistpl
add
cwtl
mov
xor
xchg
fistpl
sub
inc
jle
adc
sahf
aas
adc
sbb
scas
out
or
insb
in
jle
lahf
sub
mov
ds
lret
loop
lea
mov
lods
adc
mov
jbe
js
icebp
fisubs
pop
sub
add
aaa
es
inc
les
aas
sbb
ret
mov
sbb
lods
bound
fisubs
mov
popf
clc
and
sub
push
dec
cs
jge
sbb
mul
lcall
dec
jmp
jb
adc
push
aaa
scas
ljmp
mov
fdiv
mov
pop
cld
js
repnz
mov
mov
ljmp
lsl
dec
cmovo
out
ja
mov
ljmp
sub
fmulp
ljmp
fwait
xlat
cmpsb
lods
enter
jne
cmpsb
jecxz
push
jbe
push
xchg
dec
scas
xchg
lods
iret
or
and
inc
cmp
loope
jg
jbe
sbb
arpl
cmp
faddl
mull
cmp
inc
ficoml
sub
adc
pop
std
lds
mov
fs
inc
in
out
or
xor
mov
test
push
cmpsb
repnz
outsl
fldcw
lcall
push
aaa
mov
imul
stc
decw
mov
xchg
int
enter
xchg
mov
push
or
xchg
sti
lret
mov
jno
repz
add
inc
adc
insb
pop
fcoms
stc
mov
add
dec
flds
cmpsb
or
mov
cli
lcall
mov
mov
std
and
ja
insl
enter
mov
fwait
stc
inc
inc
stc
push
fildll
int3
ret
sub
gs
je
push
mov
push
adc
push
loope
jo
cli
xor
in
xchg
in
out
aam
lret
mov
mov
in
lret
aas
test
clc
ljmp
loopne
mov
out
adc
mov
and
or
loopne
mov
adc
jbe
push
sub
in
stc
mov
adc
or
inc
or
and
popf
inc
popa
lea
xor
aas
push
scas
leave
and
lods
gs
add
fisttpll
adc
and
je
jbe
pop
shrl
inc
fs
les
rolb
mov
xchg
cmp
cmp
sub
pop
fisubrs
fsubrl
movb
xor
out
scas
xlat
andb
iret
imul
icebp
sbb
sbb
mov
je
rol
sbb
outsb
sbb
or
nop
incl
and
sub
addr16
pop
cmpsb
bound
aad
or
outsb
stos
add
test
cmp
mov
fxch
jno
sub
sub
outsl
cmp
jle
mov
jbe
xchg
push
adc
lods
sahf
add
sbb
mov
loop
mov
mov
pop
ret
rcrl
lods
mov
fsubrl
rcl
shrl
ret
std
dec
call
test
adc
xchg
xlat
and
scas
pop
mov
push
fmul
es
fs
lods
dec
add
pop
jae
push
sub
and
shr
stos
xchg
adc
pop
adc
jge
mov
jmp
cmp
jle
mov
mov
mov
je
jns
mov
sub
fld
repz
push
aaa
cmp
jae
cmp
xchg
cmp
or
or
into
push
cmp
add
in
cmpl
nop
lea
pop
sub
inc
mov
cwtl
adc
dec
enter
or
icebp
outsb
fimull
jnp
js
adcb
xor
test
and
xor
iret
ja
aaa
test
inc
mov
inc
pop
mov
jnp
xchg
and
inc
jmp
fdivp
mov
aam
mov
lret
adc
push
mov
or
mov
mov
push
push
movsl
icebp
cmpsb
pop
pusha
fs
movsl
cmp
dec
jge
adc
or
movsb
jnp
xor
xchg
jl
pop
and
mov
push
sti
repnz
aaa
stos
inc
loopne
dec
xor
outsl
or
cld
or
lret
cwtl
nop
jl
or
les
mov
mov
lea
mov
fidivl
outsl
sub
and
jp
jns
pop
hlt
lods
xor
loope
test
add
inc
push
dec
sahf
cltd
andl
std
push
cmpsb
and
mov
mov
lock
fldcw
pushf
cmpsl
pop
aad
cmp
es
pop
test
gs
inc
das
and
jbe
add
jbe
cmp
jl
jns
ljmp
pop
loope
cmp
daa
ds
inc
movsb
das
vmread
fwait
mov
xor
test
fnstenv
rorb
ret
testb
nop
cli
dec
mov
mov
cmp
dec
push
adc
jmp
xlat
pop
lcall
cmp
jnp
lea
and
push
cmp
xchg
sbb
outsl
iret
lods
add
dec
popa
scas
inc
adc
xchg
flds
icebp
sahf
scas
inc
push
js
ja
fs
adc
add
ret
insl
push
cmc
mov
dec
fs
imul
rolb
fnstcw
mov
ficomps
pop
mov
push
out
outsb
push
rol
mov
fimull
test
lret
clc
scas
cmp
imul
jp
jecxz
dec
jmp
in
rol
ret
aaa
inc
fisubrl
add
rcr
sub
mov
js
xor
or
push
outsl
sbb
jmp
jmp
jno
sbb
aaa
adc
mov
pop
and
inc
adc
and
xchg
or
pop
sbb
cmp
das
inc
xor
les
jmp
dec
jae
addb
lea
pop
cwtl
shrl
inc
mov
or
dec
xchg
outsl
stos
push
popf
insb
xor
adc
pop
repz
aam
hlt
repz
clc
movsb
add
ss
int
xchg
sbb
xchg
or
cmp
outsl
sbb
add
out
jp
dec
mov
dec
das
dec
mov
shrl
mov
cmp
xchg
repz
fsts
sub
imul
mov
insl
fadd
outsl
xlat
adc
fcmovbe
mov
push
int3
aam
jne
iret
lcall
outsb
jp
sbb
movsb
sahf
pushf
and
call
xchg
movb
fimuls
mov
xor
scas
in
xchg
sbb
into
jmp
pop
mov
call
in
sti
fisubrs
sub
mov
or
jb
fstpt
cs
ds
cmpsb
nop
cwtl
cld
mov
mov
pusha
cld
out
je
mov
enter
sbb
or
ljmp
cmp
cmp
xor
fstl
push
cmp
loopne
scas
rcrb
aas
lods
mov
loopne
leave
cmp
testl
xchg
outsb
aaa
js
sbb
jns
lock
cli
pop
push
mull
add
pop
mov
in
push
popa
testb
sub
test
mov
aas
loop
shll
mov
mov
out
stos
xor
shlb
xchg
add
repz
cltd
cmpsb
xor
jecxz
xchg
sub
xchg
or
cli
lock
xor
sub
or
mov
repnz
gs
jl
das
cs
jl
pop
add
pop
int3
or
xor
divl
repz
pushw
mov
pop
les
push
call
inc
cmp
xchg
imul
jl
addr16
xchg
inc
inc
rorb
daa
decl
push
cmp
cwtl
test
dec
push
push
mov
cmp
cld
mov
xlat
push
das
repz
imul
xchg
jmp
push
push
mov
dec
add
push
shlb
dec
xchg
jg
mov
xor
lock
out
pop
gs
mov
cs
sbb
mov
outsl
insb
mov
and
mov
push
xchg
push
aas
fbld
mov
dec
xchg
divb
inc
jle
dec
aaa
insl
outsl
fs
std
and
push
push
shll
stos
test
int
stc
scas
adc
add
push
sbb
dec
xor
jnp
fists
push
xchg
int
dec
push
and
sbb
imul
ficomps
fsubrl
push
test
and
aam
push
mov
leave
push
add
es
jmp
and
js
jg
lock
int
fs
lret
cmp
mov
repnz
xor
hlt
mov
dec
sub
xchg
inc
or
or
sbb
leave
rol
cmc
cmpsl
fdivs
cmpsl
into
mov
inc
pop
test
sub
outsl
in
mov
lods
int
cmpsb
sbb
mov
mov
cs
rorb
sbb
aad
pop
sub
lret
imul
into
mov
push
ljmp
and
nop
test
fwait
add
pop
push
pop
inc
shll
sub
xor
push
lock
xchg
dec
lods
jae
xor
loop
inc
push
inc
xchg
scas
cmp
or
mov
mov
test
out
pop
push
cmpl
adc
das
fisubrl
mov
and
inc
push
int3
nop
jne
and
push
scas
sub
in
mov
stos
push
and
inc
je
in
mov
sub
ret
gs
sbb
dec
xchg
in
jge
pop
scas
repz
addr16
mov
adc
insb
in
movsb
mov
xor
popf
dec
mov
repz
repz
jae
cld
xchg
test
aam
addl
mov
jns
out
dec
lods
test
mov
xchg
mov
cmpsb
jg
mov
aad
pop
pop
push
outsl
test
adc
dec
aas
push
scas
xor
and
andb
cwtl
pusha
arpl
jmp
lds
ja
aam
not
ds
or
mov
cld
and
pop
jge
cld
mov
into
jns
imul
push
repnz
dec
popa
into
xchg
ret
xchg
and
lods
push
push
and
sub
mov
fadds
outsl
nop
ss
mov
xor
je
push
xor
pop
pop
or
insb
pop
mov
xor
movsb
push
pop
outsl
push
jl
dec
sbb
mov
das
mov
das
sbb
popa
and
jo
dec
cmpsl
jp
dec
jbe
push
sbb
dec
cli
sub
mov
imul
adc
dec
sub
dec
dec
and
ja
jno
fsubl
es
sub
cs
ljmp
cmpb
aam
stos
xchg
pop
scas
xchg
xchg
cmp
imul
push
inc
gs
nop
push
outsl
push
fisttps
pushf
and
les
pop
arpl
jl
xchg
cmp
test
cwtl
cmp
andb
pop
mov
out
aad
jnp
and
dec
shll
or
mov
sub
lret
jmp
or
pop
in
fdiv
jno
popa
and
cmp
or
ss
aaa
mov
sbb
adc
test
stos
pop
ret
fisttps
cwtl
inc
mov
in
add
mov
dec
rclb
call
aam
pusha
add
imul
popa
xor
mov
mov
inc
add
ret
mov
add
pushf
mov
jns
repz
add
out
gs
mov
lods
out
insl
mov
pop
push
and
fldenv
daa
test
xchg
push
dec
or
pop
divb
dec
cmp
xchg
cwtl
sub
lret
mov
pop
sbb
xchg
pop
push
push
outsb
sbb
inc
sbb
xor
adcl
push
data16
adc
int
rolb
andb
test
sbb
add
loope
inc
jle
mov
popf
pop
lret
xor
push
mov
adc
mov
xor
out
int
das
and
and
sbb
in
mov
add
xchg
cmpb
xchg
push
andb
sbb
dec
jo
xchg
data16
jmp
and
add
ja
sbb
pop
jo
mov
scas
sub
and
dec
out
popf
mov
icebp
fwait
mov
mov
test
aaa
cmc
rclb
and
fmull
insl
and
cmovns
mov
popa
sbb
jnp
movsb
push
test
push
enter
sub
cmp
and
rclb
cmpsl
fbstp
outsb
in
bound
stos
loope
les
sub
mov
dec
mov
inc
add
xchg
pusha
repnz
jbe
pop
loop
mov
mov
xor
leave
add
xor
inc
mov
sub
add
subl
dec
mov
mov
stos
mov
outsb
stos
mov
sbb
pop
pushf
test
iret
lahf
daa
loope
xchg
jp
popf
mov
add
xchg
push
hlt
icebp
jp
pop
xchg
loop
insb
idivl
xor
mov
pop
inc
das
int
sub
xchg
cwtl
ret
and
loope
icebp
cli
fimuls
testl
mov
and
cmp
orl
es
push
xorb
or
outsb
xchg
bound
test
xor
in
mov
push
adc
hlt
ret
shll
nop
outsb
imul
jecxz
xlat
aad
lds
xor
jle
insb
aam
test
inc
jecxz
divl
jae
mov
in
push
rclb
pushw
ret
mov
lds
sarb
inc
adc
mov
stc
imul
mov
insb
push
cmp
adc
imul
sbb
shr
or
daa
push
lret
dec
cmp
mov
pop
xchg
gs
popa
shrb
je
fildll
inc
cld
jle
movsb
add
out
sub
inc
imulb
lret
call
mulb
cmp
mov
scas
inc
cltd
popa
andb
enter
insl
add
imul
adc
lock
push
or
std
sbb
test
or
sbb
cmp
jne
rcrb
out
jecxz
xchg
push
jmp
or
push
mov
shll
scas
cs
cs
imul
ja
add
je
xchg
sub
std
add
or
inc
xchg
idivb
cmp
movsb
lock
loop
jne
mov
testb
jmp
push
mov
cmp
movsb
repnz
adc
in
rolb
stos
fadds
sub
jbe
lea
sti
sub
mov
sub
loope
imul
mov
push
adc
adc
repz
and
jno
ret
and
shll
pop
in
xchg
mov
mov
push
ljmp
mov
ljmp
and
rolb
mov
fwait
fs
dec
dec
fnstcw
cli
cmpl
pusha
subb
adc
push
fwait
pop
aam
cs
xchg
sub
sbb
daa
inc
shlb
inc
insl
mov
pop
adc
aam
pushl
mov
xor
out
xchg
ficomps
movsl
mov
aam
dec
addl
subl
movsl
sub
cwtl
mov
xor
pop
add
leave
push
dec
adc
lret
rcll
sub
stc
test
sub
sub
mov
xor
xchg
stc
mov
mov
insb
and
es
ret
iret
jno
lods
and
sahf
xor
sbb
jne
leave
xchg
mov
xchg
mov
nop
cmp
test
sahf
xor
scas
add
xor
jnp
repnz
mov
dec
clc
hlt
xchg
testl
icebp
ljmp
pop
cmpsl
jae
adc
lahf
inc
icebp
dec
xchg
jecxz
mov
shrl
fs
addb
into
cmp
or
fstps
out
lret
lret
inc
lods
push
jbe
jbe
dec
outsb
pop
xor
lcall
sbb
adc
lods
dec
sbb
adc
cmp
xchg
enter
dec
mov
lock
dec
scas
mov
jge
pop
neg
test
add
in
push
push
dec
adc
ja
xchg
xor
das
fisubl
nop
inc
adc
lcall
lds
inc
test
testb
sub
mov
xor
push
imul
ret
jl
scas
ret
jnp
push
cmp
mov
test
jmp
std
fisubl
scas
addr16
loop
dec
and
das
mov
lea
and
cmp
rcl
cwtl
inc
add
mov
aas
inc
and
push
int
jb
adc
dec
inc
shll
out
and
mov
mov
dec
pusha
imul
pop
inc
adc
dec
shlb
jo
sub
jecxz
jle
lret
bound
ljmp
jns
xchg
or
or
and
pusha
sbb
xor
pop
cmp
jns
or
add
mov
mov
dec
cmpl
mov
je
mov
jecxz
adc
fists
jo
shl
xor
pop
xorl
sub
popf
sub
and
mov
cltd
popa
xchg
sbb
shlb
jb
and
adc
icebp
mov
or
push
jo
and
or
in
or
push
aaa
and
int
xchg
sbb
mov
jecxz
add
xor
fcmove
jns
add
sub
pop
and
nop
repnz
adc
pop
pop
pop
push
xorb
jl
inc
mov
jle
xchg
loop
mov
inc
jo
inc
sbb
pop
in
je
test
mov
and
adc
dec
fcomi
fcoms
push
loopne
lret
inc
loope
xlat
mov
and
aaa
idiv
pushf
mov
inc
loop
hlt
push
lret
rolb
xlat
or
pop
aam
sti
and
push
test
scas
add
in
inc
mov
pop
inc
mov
xor
rorl
add
loop
je
ljmp
inc
inc
ret
outsl
out
shlb
test
push
xchg
xchg
popa
pop
dec
dec
stc
mov
pushf
fcomip
push
lods
cmp
test
out
jle
lods
xchg
mov
mov
lahf
mov
rcrl
xchg
push
call
cltd
cwtl
inc
cli
jne
ljmp
dec
int3
jne
mov
mov
xchg
lods
clc
test
stos
or
and
pop
sub
jecxz
loopne
pop
pop
dec
arpl
das
mov
lea
inc
loopne
jecxz
dec
rcl
lahf
aad
dec
jbe
insl
mov
fsubl
push
outsb
or
cmc
test
lods
lcall
cmp
dec
pop
rcrl
data16
sbb
mov
pop
sub
aad
pop
jle
adc
adc
and
cmp
popa
outsb
rorb
sbb
jmp
sub
in
mov
mov
je
inc
loopne
insl
lahf
fbstp
jns
test
int
push
mov
or
nop
sbb
fcomps
gs
mov
mov
imul
push
or
mov
shlb
cmpsl
in
xor
jnp
cmp
sti
cltd
xchg
jp
scas
fcmovb
adc
adc
jo
inc
rcrl
xor
jp
pop
inc
or
andl
push
rcr
dec
repz
call
pushf
pop
jno
imul
add
inc
loopne
push
jle
dec
push
cmpsb
mov
addr16
shl
sti
mov
les
fsubr
sahf
dec
mov
jo
jae
cltd
shlb
mov
jb
sub
xor
cmp
and
fs
mov
jb
ja
loop
jecxz
pop
dec
lock
jge
lahf
or
loopne
fbld
pop
es
dec
inc
sti
imul
aaa
sahf
sahf
cmp
aad
inc
xor
mov
dec
pushf
lahf
insl
lods
fidivs
mov
and
cmp
pop
into
in
push
sub
daa
cmp
xor
mov
fiadds
xor
xchg
clc
pushf
fidivrl
jns
sub
test
jb
pop
mov
mov
dec
pop
add
lods
xchg
iret
loope
mov
cmpsl
scas
xchg
adc
jbe
mov
mov
in
fsubr
mov
mov
jne
imul
inc
cwtl
pop
cmpl
push
pop
int3
pop
push
xor
out
repnz
cld
int3
xchg
xchg
push
lret
jns
xor
jne
stc
cld
and
cmpsb
out
mov
rcll
sub
movb
fisubl
daa
mov
mov
add
add
stos
push
std
fidivs
xor
adc
cmp
push
add
adc
xchg
sub
sbb
push
mov
cmpsl
bound
or
add
xchg
aam
out
fisubs
adc
lea
mov
lret
in
and
sub
call
mov
cwtl
aas
dec
outsb
ljmp
lret
mov
iret
lea
add
adc
add
test
fcom
inc
jmp
jnp
sub
fimuls
cmp
mov
sbb
ss
daa
mov
es
dec
mov
inc
adc
pop
aas
inc
rolb
sub
push
movsl
xchg
scas
dec
shlb
dec
pop
jns
mov
aaa
in
repnz
in
in
jno
fnstenv
and
mov
or
cmc
and
mov
cmp
pop
aam
xchg
test
out
push
in
pop
in
push
mov
hlt
je
leave
mov
jb
xchg
adc
out
in
idivb
pop
jns
loope
push
call
inc
mov
int
inc
in
or
dec
jge
mov
inc
scas
fnstcw
cmpsb
add
push
pop
adc
ss
and
and
cs
rorl
mov
pop
adc
mov
out
lods
insl
adc
ret
les
ss
enter
out
cmp
push
xlat
fisttpll
dec
jle
rol
mov
inc
mov
mov
xor
nop
inc
icebp
jp
cmp
xor
add
or
ret
lods
rolb
add
into
sub
jnp
out
push
sahf
cwtl
inc
int
in
mov
lods
lea
ret
push
xchg
mov
mov
push
mov
inc
sbb
pop
push
adc
test
iret
fists
into
ja
pop
fucomip
andb
outsb
lcall
or
pop
jl
mov
cmp
cmpsb
int
mov
insl
jge
sarb
repz
or
faddp
xlat
out
js
adc
pop
or
cmc
cmp
lods
mov
cmp
faddl
or
in
push
mov
aas
iret
adc
and
jnp
aas
cmpb
and
call
adc
mov
mov
movsl
push
out
sbb
faddl
rolb
or
pop
xor
aaa
adc
xor
leave
mov
incl
cli
or
xor
mov
adc
mov
push
push
inc
sub
jo
mov
into
inc
imul
rcrl
sub
cmp
aad
mov
add
sbb
outsl
add
fadds
and
xchg
flds
mov
ret
int
test
inc
je
adc
fistpl
adc
adc
cmpsl
int3
xchg
jno
pop
cmpsb
lock
pop
jo
sub
fimuls
mov
adc
pushf
ret
cld
scas
mov
repz
xor
or
hlt
mov
sbb
dec
scas
fmuls
stos
fs
push
imul
jno
pop
xchg
fisttpl
cmp
aam
fcompl
jb
pushf
xor
cwtl
subb
and
jl
xlat
andl
shlb
inc
movsl
push
pop
pop
sub
int
mov
js
xor
ja
daa
loop
cmp
inc
out
jmp
fbstp
cmp
sbb
xchg
cltd
dec
mov
jae
inc
add
sub
dec
stos
jne
dec
xchg
pop
xchg
mov
mov
xor
sbb
pushl
jns
cs
fsqrt
mov
movsl
xchg
mul
mov
jmp
imul
mov
dec
inc
adc
out
pop
sti
lods
jg
fwait
outsb
mov
dec
jb
out
xchg
jne
mov
mov
sub
adc
pop
pop
mov
push
and
adc
sbb
jb
data16
push
leave
push
and
jp
repnz
repz
inc
arpl
lcall
jp
push
mov
in
shrb
shll
sbb
insb
adc
ret
repz
jmp
movsb
movsb
sbb
repnz
leave
add
cmp
xchg
out
add
push
icebp
rorb
sub
mov
jecxz
pop
mov
mov
pop
and
nop
xor
push
cs
or
pop
addl
lock
scas
mov
push
jbe
mov
push
test
add
add
ja
fidivl
jae
dec
xor
daa
arpl
vdivps
test
inc
adc
andl
xor
mov
scas
push
out
test
jno
xchg
push
inc
push
movsb
push
pop
mov
pushf
loopne
cmp
push
ss
mov
push
sub
in
sbb
pop
aam
aad
shll
jb
pushf
and
and
and
xchg
fists
addr16
push
aas
lods
pop
daa
hlt
push
jb
pop
jae
icebp
push
iret
shll
icebp
mov
fucomip
es
outsb
fwait
dec
and
push
push
or
cs
jb
lret
scas
cli
clc
push
sarb
and
sar
push
insl
das
aaa
add
rclb
adc
xchg
out
pop
js
int
mov
dec
fnsave
test
and
loope
cmp
jb
outsb
in
jno
mov
ss
test
enter
popf
sub
cmp
andl
fwait
jle
aas
js
xchg
sahf
mov
in
in
out
mov
push
dec
imul
pop
sarl
test
cmpsl
aad
lcall
idivl
adc
pop
jle
clc
jecxz
inc
dec
leave
stos
xor
outsl
push
and
or
fwait
mov
add
stc
sbb
adc
movsb
add
or
int
out
add
fcoml
add
rorl
pop
cmp
mov
ss
js
cwtl
mov
insb
mov
orl
pusha
imul
pop
dec
mov
pop
sub
cmpsl
mov
movsb
js
imul
lock
sbbb
int3
daa
cmp
mov
sbb
ds
loopne
mov
xchg
pop
and
pop
gs
sub
mov
rcll
pop
add
das
inc
dec
jb
je
movsb
jns
pop
aaa
shrl
shrl
mov
mov
add
pop
xor
mov
xchg
push
addr16
lea
fwait
cmpsb
mov
mov
sub
xor
fdivl
test
pop
jp
lret
xor
xchg
pop
insb
pop
sahf
test
xor
aam
scas
mov
in
xchg
and
jle
testl
js
pop
add
clc
jo
mov
inc
iret
daa
fildll
movsl
xchg
add
nop
sbb
xchg
inc
mov
pushf
gs
sbbb
jle
stos
dec
shll
hlt
into
clc
xor
aad
adc
push
push
or
sbb
jge
push
jge
out
push
fcmovne
add
hlt
mov
jge
test
sbb
popa
sub
jae
cmp
popf
and
and
hlt
mov
out
inc
bound
std
push
lret
mov
into
mov
push
loopne
lahf
aas
fiaddl
call
jb
iret
stos
stos
mov
jae
pop
lods
lds
es
incb
mov
rsqrtps
mov
or
or
cmp
imul
lock
mov
stos
push
push
fstpt
jge
mov
je
adc
cmpl
scas
adc
cmp
dec
jl
pusha
push
imul
enter
cli
adc
inc
jp
sarl
dec
lods
push
inc
testl
aam
inc
das
inc
mov
mov
pop
cmpsb
imul
add
shlb
outsb
pusha
scas
push
jbe
add
ret
dec
mov
push
daa
sbbb
pop
jge
inc
jmp
mov
pop
fistpl
aaa
mov
movsl
inc
in
loop
mov
mov
inc
inc
dec
ret
or
cli
cmpsb
imul
inc
inc
push
sub
mov
sbb
add
aad
jg
adc
fdivs
adc
mov
add
pop
push
xchg
mov
sti
jne
orb
out
pop
ja
mov
cmc
in
adc
push
jne
jmp
pop
in
dec
cmpsl
mov
inc
shlb
cmc
jp
jae
sbb
inc
mov
jbe
icebp
lods
lcall
andl
stos
icebp
je
out
and
popf
xchg
xchg
cmpb
scas
add
lds
addr16
faddp
jl
and
call
sbb
aad
add
ljmp
xor
insl
cli
pop
cli
test
sbb
adc
dec
in
push
sub
mov
mov
test
xor
push
xlat
mov
jne
call
flds
lahf
pop
lcall
sahf
out
sbb
and
int
xor
pop
jg
adc
push
mov
mov
push
out
and
mov
sub
pop
mov
lods
push
add
popaw
das
sbb
adc
out
pop
imul
dec
sub
aad
pop
ljmp
jmp
jno
mov
aad
mov
repz
xchg
xchg
mov
xor
cmp
fcomi
aaa
sti
imul
push
lds
cmc
fisubrl
push
xchg
push
sar
popf
imul
inc
stc
popa
xchg
sbb
mov
lds
cmc
sbb
push
imul
ss
add
addr16
loopne
cmc
sub
aas
repz
mov
dec
insb
aam
push
ss
sub
outsl
inc
xor
jne
js
mov
fldenv
movl
cmp
jecxz
psllw
xchg
dec
pushf
adc
mov
xchg
cmpsb
xor
xchg
xor
mov
test
pop
adcb
and
test
xchg
mov
faddl
cmp
les
cmp
cmp
clc
push
stc
mov
movsb
pusha
or
push
adc
andb
and
loopne
imul
arpl
mov
cmp
and
sbb
ret
mov
aad
jb
movsl
dec
shl
cmc
stc
mov
inc
jl
test
xlat
inc
lahf
repz
dec
scas
out
shll
sbb
fs
insb
out
cltd
icebp
gs
movsb
vcvtsd2si
xchg
jae
dec
fldcw
std
mov
push
cmp
in
adc
and
pop
jg
clc
outsl
ror
jb
adc
fildll
jmp
in
daa
mov
adc
testb
mov
orl
pop
lret
or
addb
mov
adc
loope
push
or
xchg
fs
loope
pop
dec
int
pop
cmc
nop
jne
pop
dec
jge
push
mov
push
mov
das
scas
jmp
out
mov
les
jno
cmp
mov
sub
enter
ret
push
xor
jb
nop
inc
mov
and
and
xor
bound
loope
dec
call
lret
mov
rorb
stos
xchg
scas
adc
push
dec
mov
or
jmp
sarb
ret
int
pushf
inc
push
xor
je
inc
mov
or
cmpsb
xchg
fisubl
pop
fisubl
divb
fdivrs
sbb
push
push
icebp
mov
inc
scas
stc
pop
movsl
add
inc
jo
xchg
es
push
repnz
and
test
inc
mov
movsb
inc
arpl
xor
incl
adc
and
lret
out
push
shl
xchg
in
mov
pop
xchg
in
je
mov
jbe
cmp
jp
je
cmpl
xor
enter
xchg
adc
mov
push
or
xor
test
mov
xor
andb
jp
push
xchg
fwait
lahf
mov
mov
adc
dec
insl
mov
jge
clc
cmpsb
in
loop
lahf
lods
pop
cld
fstps
test
mov
inc
clc
icebp
xor
dec
inc
xor
or
mov
push
sub
add
or
popf
rcrl
scas
sub
nop
es
dec
in
jmp
hlt
mov
insl
mov
push
jb
cmp
dec
mov
shr
repz
addr16
test
lret
lahf
in
hlt
ret
push
bound
mov
xor
arpl
nop
mov
in
add
push
cltd
sub
push
adc
adc
fs
inc
adc
test
sti
and
xchg
cmpsb
sbbl
int3
add
insb
cld
lea
jle
pop
data16
movsl
lds
xor
into
sbb
insb
sbb
into
jl
xorb
add
les
test
mov
sub
scas
push
test
xchg
jl
and
mov
enter
ret
rcrl
mov
sub
cmc
xchg
mov
adc
ljmp
jmp
push
sbb
inc
gs
cmp
mov
mov
xchg
and
scas
and
xor
and
inc
jbe
dec
gs
and
cmp
nop
jnp
fs
ja
std
push
rcll
mov
mov
jmp
mov
je
mov
dec
lods
lds
cmpsl
cli
hlt
sub
pop
mov
sbbl
push
jo
scas
stc
scas
push
enter
movsl
int3
or
loop
mov
add
int3
fadd
fst
bound
dec
bsf
insb
push
lcall
dec
ljmp
cmpsb
pop
sbb
ja
ret
pop
xchg
lods
jg
into
bound
cmp
dec
add
mov
pop
lahf
inc
stos
mov
or
movsl
pop
dec
mov
mov
leave
andl
cmp
pop
mov
xchg
in
or
or
imul
push
popa
add
loop
testb
mov
arpl
int3
lret
xchg
add
sbb
add
or
and
popa
cmpsb
movsb
je
add
into
push
scas
and
mov
hlt
loope
cs
push
xor
mov
xor
aam
jno
and
push
pusha
dec
ja
pop
pop
dec
add
dec
sbb
xchg
cmp
mov
and
out
adc
aam
in
lods
fidivrl
filds
jae
and
sub
jnp
add
test
inc
dec
xchg
cs
xor
pop
inc
push
push
sbb
movsb
cmp
sub
psrld
aas
fdivs
jecxz
sarb
jno
sub
mov
ret
cmc
outsb
test
dec
outsb
mov
in
xchg
jno
jo
ja
sub
scas
loop
dec
stos
xchg
test
and
jnp
cmp
out
push
shrb
adc
loop
mov
ficoml
int
pop
aaa
inc
mov
into
cmp
enter
rclb
popa
fbld
cmp
add
outsl
aad
arpl
xor
inc
xchg
test
out
mov
or
bswap
push
push
shl
add
cmp
adc
mov
pop
cs
in
adc
mov
out
in
ss
lods
pop
adc
sahf
sub
pop
rclb
jnp
push
inc
mov
outsb
sbb
inc
and
aam
out
call
jbe
jl
cmp
ficoms
pop
jns
ss
add
jle
adc
or
aas
add
xor
je,pn
push
mov
cmp
dec
inc
frstor
mov
daa
std
imul
insl
jge
pusha
pop
fwait
push
mov
enter
or
sub
xchg
into
xchg
mov
cs
cmp
cmp
js
iret
jl
and
in
push
loopne
mov
mov
lock
fsubrs
inc
in
mov
movsb
jne
loope
jbe
lods
cmp
faddl
int3
inc
xor
les
out
aad
lcall
movsl
shrl
pop
push
dec
pop
fcoml
mov
xchg
cmp
lock
fistl
shlb
mov
in
adc
dec
push
in
jmp
lea
xor
divl
fwait
lock
movsb
dec
sbb
test
add
adc
in
pop
or
fbstp
mov
push
sub
jmp
mov
imul
fisubrl
inc
cli
jb
lcall
shlb
push
aad
sub
sbb
xlat
pop
pop
clc
mov
adc
cmp
pop
mov
push
add
and
lods
mov
lea
mov
push
nop
add
ljmp
mov
call
nop
mulps
add
sub
in
movsl
push
lret
mov
cmp
arpl
ljmp
xor
shlb
mov
cli
dec
repnz
pop
mov
inc
jl
jmp
or
clc
sub
push
bnd
mov
inc
call
fs
jo
mov
mov
int3
call
inc
dec
lock
lods
push
shlb
mov
rorb
dec
mov
dec
iret
sbb
push
sbb
jae
mov
sub
mov
mov
mov
enter
mov
push
sti
hlt
insl
aaa
aam
ret
xlat
xchg
std
inc
sbb
scas
pop
sbb
lock
iret
dec
sub
push
cmp
cli
and
scas
mov
inc
daa
cli
es
cmp
clc
gs
fwait
mov
scas
and
jp
mov
mov
outsb
divb
clc
loopne
clc
aas
add
fildll
jl
cwtl
mov
add
jg
shll
insl
mov
pop
sbb
mov
mov
popf
dec
jo
jnp
stos
lret
aaa
fdivs
add
mov
xor
push
dec
into
xchg
insb
lahf
cs
add
pop
xchg
inc
subb
les
sub
mov
loopne
push
insb
shll
mov
mov
ljmp
fwait
mov
lret
jmp
outsl
jae
sarb
adc
subb
xchg
pop
cwtl
mov
and
daa
inc
cmpsb
js
insb
cmp
pop
adc
cmp
fldenv
pop
roll
push
sar
insl
shll
adc
rolb
popa
setnp
das
pop
jnp
mov
pop
pop
out
fidivrl
mov
mov
ja
rcrl
test
mov
xchg
popf
into
fisttpl
adc
popl
and
pusha
or
dec
add
cli
daa
or
jae
jge
jne
mov
out
inc
mov
in
jmp
cwtl
sub
fwait
push
inc
in
fwait
stos
aaa
jns
add
repnz
test
das
and
ja
hlt
aas
and
pop
mov
push
cwtl
xchg
dec
and
mov
sbb
ficomps
notb
aad
cmp
sub
scas
sbb
lods
push
es
mov
pop
jecxz
in
jp
jne
rcr
int3
mov
mov
cmc
mov
clc
outsl
mov
test
test
inc
mov
mov
out
add
jne
rorl
push
imul
lcall
add
or
pushf
aad
adc
add
fiadds
dec
int
push
inc
ljmp
shl
mov
dec
incl
rclb
mov
xlat
sub
push
loop
in
pushf
and
inc
sbb
mov
jns
test
bound
cli
pop
mov
aas
ja
test
sub
mov
xor
add
mov
mov
mov
mov
pop
cld
ret
dec
ds
mov
loope
nop
cwtl
pop
xor
and
sbb
sub
mov
adc
clc
dec
pop
push
daa
pop
insb
jl
pushw
push
dec
jno
daa
shr
xchg
sub
xor
xchg
mov
mov
sbb
ret
jg
mov
mov
fsts
out
repz
cli
sub
jmp
aad
aas
inc
repz
mov
inc
xlat
xchg
cs
testl
lahf
scas
fidivrs
xor
dec
mov
push
jmp
xor
int
insl
cli
cmp
es
inc
add
aad
xor
int3
xchg
stos
cli
lods
mov
sbb
ljmp
sbb
jbe
loop
stos
or
add
mov
ljmp
jle
repz
sbb
sbb
cs
push
dec
jne
sti
adc
enter
xchg
cli
mov
dec
push
in
cs
inc
dec
leave
mov
inc
test
inc
arpl
push
cltd
dec
adc
mov
test
cmp
mov
int3
jl
in
push
ret
insl
pop
push
cmpsb
ljmp
add
sub
lods
int3
outsb
sub
lret
inc
enter
mov
cmpsb
lret
dec
into
xchg
test
stos
je
inc
cld
dec
in
loope
jmp
jb
mov
cmpsl
outsl
add
std
imul
out
pop
sub
clc
data16
fidivs
into
sbb
cmp
aam
xor
int
sarb
xchg
jb
jmp
stos
mul
cmpsb
rorl
mov
ret
faddp
sbb
cmpsl
mov
cltd
or
mov
mov
dec
fs
subl
hlt
sahf
ss
xchg
adc
mov
inc
sub
fwait
mov
adc
sub
xchg
bswap
outsb
jmp
icebp
push
test
loope
sbb
je
aaa
scas
sub
cli
lods
cmp
xchg
dec
add
pushl
sbb
jb
lret
les
jmp
cmp
sti
sbb
pop
xchg
mov
sbb
je
lods
push
xor
mov
aaa
daa
fdivr
sbb
cltd
xor
imul
dec
push
cs
inc
xchg
mov
add
movsl
fidivs
and
adc
sbb
loope
lahf
negl
pop
call
or
or
push
stos
mov
addr16
adc
sub
jecxz
xor
idiv
jl
xlat
xchg
pop
dec
incl
fs
pop
loope
xchg
pop
or
xor
orb
inc
sub
out
call
out
dec
sbb
xchg
mov
xlat
std
xchg
xor
sub
shll
mov
mov
mov
lcall
icebp
imulb
xchg
jno
cli
dec
mov
add
dec
dec
pushf
inc
xor
scas
pop
mov
add
xor
add
sub
bound
jmp
add
lods
aas
xor
shlb
pop
sarb
sbb
imul
test
ret
mov
xor
lahf
pop
mov
popf
or
scas
outsl
int
imul
jnp
iret
push
mov
push
mov
mov
int
push
decb
jo
mulb
subl
cmp
dec
imul
aam
jmp
testb
add
ljmp
int
sbb
jno
push
sub
inc
das
std
dec
adc
loopne
or
mov
in
leave
push
add
fsincos
in
ret
pop
jmp
mov
jns
out
popa
xor
jo
dec
sbb
push
pop
sbb
dec
roll
xor
add
inc
lods
sub
inc
and
xchg
push
lret
fldt
jmp
push
jge
test
xchg
test
ret
ljmp
mov
es
lret
cld
idivb
fisubrs
xor
lahf
mov
add
adc
pop
mov
mov
inc
std
rclb
fcmovne
add
cld
pop
jl
sbb
mov
inc
sub
insl
fnsave
test
mov
pop
xchg
cmp
mov
sbb
outsb
jb
into
mov
push
and
inc
pop
dec
fcoml
add
inc
js
vmovddup
sbb
mov
mov
jbe
inc
dec
lret
sbb
rclb
ja
fbstp
fwait
inc
roll
lods
cmp
cwtl
mov
roll
dec
stc
sti
test
sbb
stos
xor
sbb
lret
fs
push
add
cmpb
inc
xor
inc
jo
out
popf
xor
xor
mull
xchg
inc
mov
or
iret
movsl
adc
pop
inc
inc
test
jl
dec
into
mull
inc
cwtl
mov
fdivrp
xchg
pop
dec
xor
popf
jns
jb
jmp
xchg
repnz
fidivl
dec
pop
call
subb
pop
adc
push
shll
xor
daa
mov
mov
int3
ds
imul
mov
pop
je
popa
cmp
xchg
jge
popf
push
pop
dec
ficoms
rol
jne
cmp
ret
lahf
mov
and
push
mov
push
arpl
pop
ljmp
ret
xchg
and
fbld
fisubrl
rol
mov
cmpsl
fcomps
cmp
into
lret
and
lsl
mov
mov
ret
insb
mov
pop
push
shlb
jb
pop
cs
cs
les
jle
das
jmp
push
lret
xchg
popf
cli
call
cmc
add
pslld
mov
mov
negb
mov
cli
jmp
pushf
into
pop
clc
icebp
sub
call
leave
andl
test
push
inc
mov
xor
cmp
push
and
sbb
imul
jle
or
repnz
adc
in
das
int3
push
daa
push
cmp
ret
mov
adc
dec
loope
lret
jle
cmp
ret
data16
pop
dec
mov
movsb
lds
push
movsl
out
jle
les
movsb
testb
daa
xor
mov
sti
mov
in
or
stos
outsl
or
fdivl
mov
mov
in
rcrl
sub
out
int3
jno
loop
outsl
push
mov
enter
xchg
scas
cli
iret
pop
sbb
adc
lret
mov
xchg
adc
jmp
pop
enter
jmp
fsubs
sahf
mov
in
jnp
add
add
pushf
sub
jbe
icebp
pop
in
inc
pop
stos
pop
imul
popa
lret
repnz
jmp
inc
dec
imul
or
add
inc
and
sub
sub
testb
inc
mov
sbb
test
push
jmp
cwtl
adcb
loope
mov
rorb
xchg
fimull
pushf
ficomps
pop
pop
inc
mov
and
or
jbe
jns
mov
jecxz
jne
sbb
stos
mov
in
sbb
pop
fnsave
cmp
in
xchg
insb
push
lds
jno
mov
shll
testl
fstpt
dec
push
add
aas
shrb
scas
mov
repz
bound
mov
inc
mov
cmpsl
ds
ret
add
mov
insl
lahf
inc
aam
icebp
mov
lock
jg
mov
xlat
cli
les
push
dec
shrl
testb
lea
mov
daa
imul
or
and
loop
jno
mov
mov
icebp
daa
pop
es
leave
inc
shl
pop
test
jg
mov
mov
loop
mov
inc
sub
or
inc
fs
sub
jns
add
pop
jp
int3
daa
xchg
mov
in
add
repnz
mov
xor
push
xor
bound
nop
cli
cmpl
shlb
ja
movsl
jno
fmull
and
mov
cmpsl
sub
mov
cmc
mov
lds
repz
push
aaa
sbb
adc
push
mov
cmpsb
imul
jecxz
push
aaa
mov
xor
adc
push
or
jae
lds
out
sbb
fwait
sub
push
sub
movsl
pop
sub
xlat
sub
out
adcb
test
stc
unpckhps
out
lret
mov
mov
ss
into
stos
sub
test
repz
fcmove
dec
adc
js
inc
cli
jl
mov
push
jo
dec
test
jns
jmp
sub
subl
pop
push
pop
das
xchg
jmp
xor
loope
sub
pusha
ret
sub
xorb
subl
aaa
les
lods
sbb
or
adc
sarl
int3
pop
and
xchg
ljmp
loop
pop
outsl
sbb
dec
sub
inc
out
stos
pop
aam
clc
adc
push
mov
pop
inc
dec
rcrl
push
lret
ja
stos
push
push
das
pusha
dec
fwait
ljmp
cmp
mov
jbe
cmc
mov
cmp
inc
cltd
add
in
mov
push
sahf
cmpsb
bound
lods
xor
adc
or
outsb
in
sub
pop
stos
jmp
outsb
or
xchg
bound
xchg
mov
sub
jbe
test
sbb
imul
xor
inc
in
scas
sub
in
jne
pop
ret
add
xor
pop
gs
roll
mov
inc
shrl
mov
mov
push
dec
inc
lock
ja
xchg
xchg
mov
jecxz
mov
sub
ror
and
sbb
sub
or
xchg
pusha
xchg
xor
shl
jp
dec
outsl
mov
test
cmp
js
bound
rclb
test
enter
jmp
pop
or
andb
out
hlt
sarb
sub
push
jp
jmp
xchg
mov
mov
je
unpcklps
hlt
sbb
push
mov
jno
xchg
test
fbld
nop
inc
dec
cli
lcall
pop
dec
adcl
or
shl
sbb
cwtl
lcall
outsb
sub
jmp
sub
adc
jl
shrb
in
mov
lds
fwait
sbb
rcr
ficoms
mov
rep
fadd
add
roll
inc
add
push
mov
mov
dec
xor
test
hlt
shrl
inc
lea
inc
std
es
and
pop
xchg
jp
xorl
and
sub
push
outsb
mov
in
jae
pop
push
cltd
pop
hlt
push
mov
xchg
lods
sbb
inc
ja
lret
xorl
xchg
arpl
jo
dec
ficomps
pop
push
dec
push
incl
xor
cmp
inc
rep
cmp
adc
xchg
inc
dec
push
rorl
push
test
rolb
cmpsb
inc
outsb
insl
jecxz
ret
decb
daa
push
mov
mov
sbb
fisttps
inc
fwait
test
push
mulb
fbld
idivb
sar
cmpsl
cmp
scas
mov
rolb
into
jmp
fs
mov
xor
cli
in
and
insb
insb
repnz
popf
and
ror
cmc
push
adc
adc
rcl
into
add
daa
vandnps
push
jbe
push
mov
xchg
mov
xchg
test
add
xor
mov
cld
xor
int
sub
xchg
jns
repz
xor
mov
adc
inc
sbb
mov
or
mov
xchg
or
mov
mov
gs
dec
add
mov
scas
icebp
cmp
jne
scas
lds
cwtl
filds
sub
pop
js
sub
pop
xor
in
mov
stos
dec
mov
into
pop
sbb
loopne
mov
push
je
xor
fbstp
xchg
lods
xor
and
sbb
adc
test
aad
pop
or
fnstenv
mov
adc
xchg
pop
xor
mov
fisubrs
add
repz
push
mov
jno
shll
inc
cmp
inc
xchg
outsb
jnp
scas
mov
mov
cmpsb
les
jne
psubq
cmp
pop
push
lods
cmp
out
push
push
jl
cmp
je
les
pop
mov
aad
add
fcmove
je
jmp
cli
int
push
lods
shll
jmp
dec
mov
jae
test
cmpsl
lret
test
stos
jo
and
xorl
iret
frstor
mov
push
cli
sbb
and
xchg
rolb
sub
in
ss
leave
daa
rorl
and
mov
push
icebp
pop
sbb
or
shr
sbb
xchg
into
xor
repz
rorl
mov
inc
pop
dec
outsl
lahf
imul
jns
mov
pop
inc
push
cmpsl
cwtl
pop
jnp
lock
sub
in
xchg
jl
das
push
outsl
dec
push
loope
ret
mov
and
pop
inc
pop
add
mov
push
mov
pop
pusha
adc
insl
pop
sub
sbb
pop
xchg
xlat
xor
dec
jae
push
mov
jge
sbb
mov
add
in
adc
jne
xor
mov
xchg
and
push
cmc
and
cmp
ds
rorl
add
pop
fsubr
cmp
stos
dec
fldcw
pop
add
mov
mov
test
lret
mov
rcr
jl
cld
mov
add
aas
jmp
out
rcrb
push
into
inc
jne
mov
mov
sub
arpl
and
mov
imul
aaa
mov
xchg
mov
pop
leave
adc
out
insb
bound
imul
push
or
xlat
add
dec
loop
testb
lret
imul
out
jge
adc
mov
loopne
mov
sbb
fidivrs
push
testb
in
or
daa
xchg
ficompl
jl
jne
out
in
cmp
sbb
mov
inc
aad
mov
pop
pusha
in
or
inc
mov
mov
xchg
xchg
mov
pop
icebp
mulb
jge
rdpmc
add
dec
cld
cmp
jb
push
mov
arpl
into
mov
mov
shrl
dec
dec
adc
cmpsl
xor
leave
sub
mov
imul
sub
lret
loope
out
pop
daa
inc
insb
xor
lea
push
aad
lds
aad
sbb
scas
repnz
jmp
pop
clc
xor
cli
loope
pusha
das
add
mov
jo
outsl
cmpl
jl
or
sbbb
loope
push
enter
mov
dec
test
cli
push
int3
inc
inc
cmp
nop
roll
stos
roll
jecxz
mov
jg
sbb
les
into
cmp
int3
flds
sub
mov
outsl
movsl
mov
and
jb
mov
and
xlat
xor
lret
or
scas
and
pmulhuw
es
aas
or
pop
cmpsb
jns
and
jbe
mov
mov
stos
in
or
sbb
lds
pop
loopne
cmp
mov
test
out
and
in
cmp
dec
pop
jmp
dec
mov
add
repnz
jg
sbb
leave
push
std
test
sti
cmc
pop
adc
push
sbbb
cmp
xlat
data16
mov
push
xchg
mov
pop
fdivl
sbb
addr16
lock
pop
arpl
imul
jb
subl
lea
fistps
ret
lret
nop
das
or
mov
cs
popa
sub
adc
ficoms
mov
inc
in
fmuls
popa
sub
fs
iret
push
pop
test
cmp
dec
pop
sub
or
data16
xor
mov
aas
psrlq
insb
mov
je
js
mov
sub
lret
inc
addb
sub
dec
in
mov
mov
aad
hlt
inc
ror
fisubrl
rorb
inc
aaa
mov
call
addr16
dec
cmp
and
push
dec
cmp
add
push
or
adc
mov
adc
mov
sub
sbb
jl
sbbl
outsb
mov
jp
imul
cmc
cmp
push
jge
mov
or
loopne
mov
push
sbb
push
sahf
xor
sub
int
cmp
fistpll
pop
jmp
mov
dec
ret
lock
insb
adc
out
inc
pop
call
mov
movsl
mov
shl
jmp
jmp
xor
mov
sti
sbb
cmpl
ss
ret
negb
shr
jb
pop
notl
js
test
cmpsl
inc
pop
aaa
lcall
loopne
test
js
xchg
pusha
cmp
nop
pop
mov
nop
js
imul
call
test
xchg
xchg
sub
cmp
lea
or
dec
cmpsl
jl
mov
lods
pushf
imul
fnstenv
inc
ljmpw
ficomps
clc
push
dec
mov
and
xchg
rolb
sub
ret
mov
sbb
inc
dec
mov
fidivrs
pop
lock
pop
dec
dec
out
jae
int3
aaa
add
lret
inc
lret
test
mov
jo
or
inc
push
inc
aad
pop
push
enter
lock
js
cmpsl
jae
je
cmpsl
in
push
mov
mov
out
lcall
loope
jecxz
pop
xlat
and
rcrl
loope
leave
mov
idivb
cmp
mov
sub
jmp
jo
ret
xor
fucomp
jmp
push
pop
push
loopne
xchg
ss
js
filds
dec
push
popf
pop
aas
scas
je
cmpsb
test
jo
scas
nop
lods
and
jge
sti
dec
dec
inc
daa
cs
ficoms
xchg
in
jno
mov
add
shll
testl
jecxz
adc
xlat
mov
lods
rcrl
fadds
movsb
addl
adc
lcall
jl
xor
xor
rclb
fcomps
pop
sbb
in
jge
mov
leave
push
into
divb
arpl
xchg
outsl
sbb
add
int
orb
repz
xor
jp
mov
sbbb
orb
cmpsl
sbb
mov
ret
sub
push
mov
xor
mov
push
dec
pop
mov
sbb
addr16
outsl
cltd
in
xchg
mov
pop
pop
cwtl
pop
out
int3
das
push
jne
out
test
and
pop
xor
int3
or
orps
pop
aas
fildl
pop
popa
push
scas
xchg
std
adc
movsl
iret
lds
mov
into
cmp
iret
pusha
fcompl
ficompl
cmp
xor
loope
test
add
aad
jmp
or
pop
mov
sarb
scas
int
das
shl
jl
int
es
xchg
adc
jp
arpl
das
jge
cltd
mov
arpl
sbb
mov
pop
hlt
psrlq
sbb
daa
cmc
mov
inc
fdivl
pop
add
inc
sahf
mov
pop
jp
ljmp
iret
mov
call
adc
mov
imul
pop
ret
daa
adc
push
mov
push
notl
xchg
push
divb
xor
rol
iret
add
daa
lahf
sti
lock
call
pop
fisubs
xorb
sbb
jp
push
xlat
xlat
mov
ljmp
pop
mov
xlat
into
pop
sub
sub
mov
cmp
jb
mov
and
mov
mov
leave
lret
clc
loope
adc
adc
xor
dec
sub
fs
dec
iret
cmp
adc
mov
lahf
mov
mov
js
imul
data16
pop
push
and
xor
cmpsb
jns
jb
and
jmp
scas
aad
inc
lea
jp
loope
js
push
mov
mov
or
in
mov
lcall
ret
mov
lcall
add
xor
sbb
mov
adc
xchg
test
hlt
push
xor
cmp
xchg
pushl
mov
mov
mov
push
mov
fs
adc
fidivrs
add
pop
mov
int3
mov
lock
imul
rol
ret
aad
es
sub
movsl
jo
push
sub
inc
add
and
mov
mov
daa
or
rcr
cld
mov
add
scas
sbb
in
mov
shlb
leave
movsb
je
pop
or
adc
cmp
movsb
aam
cmpsl
inc
inc
lahf
mov
jl
inc
cmp
sbb
sbb
mov
repz
jmp
push
lret
pop
dec
test
stc
repnz
inc
cs
sahf
and
jge
nop
xorb
cmp
test
jp
pop
dec
loop
xchg
popa
test
mov
and
sbb
sub
ds
jg
and
jp
dec
pop
push
lods
push
xchg
imul
xchg
out
mov
shlb
test
test
mov
jae
dec
push
dec
mov
and
aad
inc
xchg
cmpsl
fstl
test
in
cmp
cld
popa
ret
test
jl
pop
into
fwait
mov
or
inc
mov
in
or
pop
xor
ss
sbb
shlb
std
cmpsl
push
mov
jnp
shrl
push
hlt
ljmp
test
xor
lahf
mov
ljmp
out
mov
clc
mov
cmpsl
ljmp
gs
hlt
jecxz
fsubs
or
mov
push
push
xchg
xor
pop
add
jb
enter
into
in
std
mov
inc
ds
inc
jge
lret
call
cmp
jno
inc
xor
dec
cs
stc
xchg
hlt
test
mov
mov
dec
in
and
adc
ret
pop
xlat
sbb
int3
sbb
sti
and
jl
or
and
sbb
scas
add
fldt
clc
pop
push
jb
test
call
pop
xchg
mov
ds
leave
inc
cli
cltd
cmp
add
sub
shll
arpl
jecxz
scas
int3
rcr
shll
gs
mov
xchg
cwtl
nop
sub
pop
mov
xor
out
and
ljmp
mov
mov
adc
sub
int3
ret
fcoms
loope
mov
popf
dec
sahf
into
pusha
lahf
dec
icebp
xor
xor
xor
sub
fsts
xor
arpl
lret
pusha
aam
les
sbbb
xchg
scas
jo
adc
mov
ss
add
xchg
sbb
pop
test
mov
adc
mov
movsl
mov
and
imul
sbb
fs
ljmp
push
cs
in
aad
pop
adc
sub
xor
mov
ja
lea
hlt
out
mov
insl
popa
inc
ss
pushf
stos
push
daa
mov
mov
mov
jb
call
jne
pop
jmp
and
push
popf
xor
mov
and
mov
movsb
cmp
and
repnz
sub
push
xor
gs
bound
in
mov
cmpsb
cmp
xchg
cmp
mov
adc
lret
in
test
inc
icebp
mov
sti
mov
mov
mov
pop
mov
insb
push
xchg
xor
insb
xor
mov
cmp
pop
push
in
and
inc
xor
and
pushf
mov
xor
mov
into
repz
in
push
pop
ss
stos
dec
sub
add
inc
mov
push
or
mov
inc
rolb
cmpsb
xor
mov
ds
cmp
sbb
sub
sbb
cltd
push
and
aam
addb
testb
mov
sbb
xor
rcl
push
test
rolb
inc
xor
adc
aas
movsb
fcomip
cltd
cmp
cmpsl
inc
cli
mov
sbb
cltd
cmp
mov
aad
xor
inc
dec
mov
fldenv
cmp
or
daa
push
in
mov
mov
mov
in
push
out
pop
push
inc
clc
out
lcall
add
push
inc
dec
push
inc
bound
or
pop
mov
push
push
cltd
sub
sbb
in
sub
xor
push
inc
and
sub
es
movsl
and
rolb
pop
xchg
push
sbb
outsb
mov
push
aad
adc
cmp
inc
je
pop
aam
mov
flds
add
and
mov
out
add
add
imul
mov
add
aaa
rcll
add
jo
inc
adc
in
adc
lret
or
andb
mov
cld
mov
mov
fildll
jnp
stos
jnp
dec
pop
arpl
lahf
jge
insl
fidivs
test
test
inc
xor
out
aas
mov
pop
in
cmp
jecxz
inc
sub
pop
push
cltd
sbb
lock
movsb
xor
js
mov
jge
push
stos
shlb
movsl
adc
and
std
lods
mov
movsb
pop
movsl
xor
push
jo
jno
add
imul
inc
lock
cmpb
popa
pop
cwtl
filds
ljmp
clc
repz
mov
ret
ret
xchg
add
pop
mov
in
test
mov
pop
out
cmp
mov
or
mov
inc
xchg
dec
out
sahf
gs
push
inc
outsb
pop
adc
ret
std
xchg
dec
dec
adc
add
dec
enter
pop
aam
pop
add
xchg
push
push
or
call
push
adc
pop
sti
rep
push
lods
aam
mov
jae
jmp
jnp
mov
pop
cli
jno
out
daa
bound
scas
pop
inc
inc
pop
or
adc
push
jb
mov
mov
jbe
adc
sub
cli
popa
sbb
rcll
lock
sub
ds
cmpsl
xor
mov
les
sbbb
push
adc
loopne
iret
mov
xlat
repz
clc
scas
test
mov
loopne
enter
add
add
xor
shl
jae
je
jle
call
sbb
sbb
stos
cmp
jecxz
out
adc
cmp
mov
scas
rcrb
mov
scas
mov
das
xchg
sbb
insb
scas
adc
fmuls
and
lret
gs
sub
inc
sbb
test
cmp
and
repnz
in
xchg
jp
sub
loopne
mov
mov
gs
sbb
pop
mov
cmp
nop
shl
pop
sarb
in
imul
fldenv
mov
test
sahf
push
loop
add
vmwrite
shr
daa
adc
clc
mov
movsb
adc
pushf
hlt
imul
leave
mov
xchg
fisttpll
das
nop
imul
sbb
js
andb
scas
cwtl
push
sbbb
fidivrs
adc
adc
outsl
adc
or
ret
idivb
int3
mov
mov
mov
jnp
and
pop
lds
nop
and
push
shll
enter
push
lods
lds
push
mov
daa
xchg
repz
mov
sbb
xor
lret
ljmp
lock
fwait
hlt
imul
shll
popf
scas
xor
fadds
push
aam
ficoml
jg
rolb
shrb
xor
jmp
jbe
mov
popa
decb
mov
imulb
arpl
popa
and
pop
inc
or
fwait
or
outsb
add
and
lahf
xchg
or
fistpl
push
pop
add
xchg
jp
sbb
sub
mov
pop
dec
movsl
outsb
es
push
cmp
pusha
pop
mov
test
in
or
or
dec
lods
push
xor
aam
jecxz
xchg
pop
fildll
test
mov
ss
rolb
mov
cwtl
mov
xlat
mov
jle
out
fdivrl
in
push
mov
xchg
in
jp
sub
popf
and
inc
cmpsl
pop
lods
xchg
push
pusha
pop
push
adc
sub
mov
jo
sbb
sbb
ret
int
cmp
insb
jae
insb
loopne
jnp
dec
cltd
aam
fdivrs
jb
movsl
sub
sbb
movsl
push
ljmp
mov
and
sbb
imul
pusha
insb
add
arpl
inc
and
add
fistpl
hlt
adc
stos
xchg
pop
lret
add
fs
xchg
dec
dec
add
jne
jno
ret
test
dec
fcompl
adc
add
and
sbb
sub
lea
fistpll
pop
mov
ret
lds
ljmp
leave
xchg
iret
push
jns
arpl
push
stc
scas
out
jbe
pop
in
aaa
into
or
cli
and
mov
lcall
jbe
icebp
add
cld
mov
mov
imul
xchg
xchg
lea
pusha
movsl
jnp
jg
in
or
inc
lret
rclb
xor
cmp
sbb
sahf
sbb
lock
xchg
or
inc
mov
sbb
cmpsl
jno
mull
and
ficompl
inc
das
mov
into
test
fadds
pop
cmp
jbe
je
inc
adc
in
lds
shrl
std
jbe
movsb
cs
pop
sbb
out
addr16
mov
stos
mov
jae
push
fcompl
dec
lret
sti
pop
loopne
es
jecxz
hlt
gs
and
stc
sub
fsubs
aam
lret
sbb
fimull
pop
sub
outsb
inc
mov
jp
or
cwtl
test
inc
add
lret
inc
xor
unpcklps
gs
jmp
jne
xor
add
pop
test
call
mov
test
mov
scas
fs
popa
into
mov
sbb
int3
fs
gs
mov
scas
sti
ret
rcrl
mov
sahf
cmpsb
and
and
dec
add
subb
addr16
outsl
push
test
push
jp
sub
arpl
dec
mov
mov
xchg
sub
push
loope
add
mov
movsb
bound
sub
push
inc
adc
dec
repnz
sub
sahf
aaa
leave
das
dec
mov
inc
adc
sub
xlat
cmp
mov
pop
or
push
addr16
adc
xlat
xchg
push
outsl
test
xadd
sti
jmp
sbbb
ja
lods
or
jno
inc
mov
xor
je
mov
sub
mov
mov
mov
adc
inc
rorb
pushl
clc
mov
pop
push
test
testb
or
cmp
jns
negl
test
es
mov
lock
sub
out
cmpsl
pusha
or
pop
push
ds
mul
subb
test
add
hlt
mov
rol
jne
movsl
jp
sbb
mov
movsl
repz
pop
mov
adc
lahf
add
jge
out
in
dec
xlat
pop
adc
jbe
out
and
imul
insb
cli
or
inc
lcall
xor
mov
mov
push
mov
dec
push
lds
sub
mov
push
je
divl
xchg
mov
scas
sbb
movsl
pop
in
dec
lock
cmc
jg
std
stos
cmpsb
sub
imulb
sbb
stos
inc
loopne
imul
xchg
xchg
movsl
and
repnz
and
hlt
jle
ds
fidivs
in
loop
es
sbb
jb
cld
aad
enter
mov
cmpsb
call
ljmp
mov
aaa
popa
sub
fs
xlat
mov
mov
pop
test
mul
mov
lret
jns
add
jnp
sbb
sbb
mov
lds
mov
push
adc
xchg
test
not
fimull
push
mov
mov
test
dec
push
rsqrtps
shrb
xchg
fisubrl
das
sbb
xor
cmp
xchg
cs
std
fisttpll
xor
add
fisubs
add
mov
scas
js
inc
jns
sahf
push
dec
dec
jle
mov
in
fwait
and
pop
js
pop
in
and
push
lahf
xchg
adc
je
mov
test
das
inc
imul
mov
pop
mov
xor
cmp
das
mov
or
jno
mov
push
in
imul
scas
rolb
fsubl
lods
mov
imul
sub
rclb
sbb
fsubrs
mov
cmp
mov
addr16
int
pop
push
aaa
andl
mov
dec
push
jno
std
and
jne
jg
sbb
cpuid
cmp
xchg
arpl
xchg
jnp
push
mov
xlat
dec
push
dec
popf
das
add
add
cmp
mov
inc
fmull
insb
stos
mov
mov
dec
stc
jecxz
lds
pop
mov
inc
pop
push
mov
sbb
mov
adc
div
ds
jl,pt
pop
inc
mov
lret
cmpl
adc
push
or
dec
xchg
mov
sarl
sahf
push
xchg
arpl
add
dec
out
ret
fsubl
mov
jp
sahf
imul
jmp
cmp
pusha
lods
sti
cmp
or
and
mov
pop
stc
sbb
lods
mov
jp
cmpb
xor
cmpsl
mov
xchg
sahf
adc
loopne
dec
idiv
lret
clc
adc
lock
sbb
push
ja
mov
das
jp
lods
mov
mov
xchg
rcrl
scas
dec
push
test
in
aaa
pop
push
fmull
jp
inc
fcmovnb
cwtl
outsl
lret
add
and
jle
popf
push
call
in
mov
dec
test
into
push
adc
xchg
pop
lcall
and
call
add
iret
loope
sub
out
sti
ss
mov
sahf
push
jecxz
scas
and
pop
repz
jb
push
or
lds
in
iret
orl
sarb
add
jnp
xchg
cmp
aam
sub
mov
mov
imul
xchg
fwait
in
mov
cmp
cwtl
test
lods
mov
mov
lods
mov
loopne
jne
dec
dec
fistpl
xchg
clc
sub
sbb
xchg
sbb
fldenv
dec
xchg
psrad
stos
out
xchg
mov
sbb
ficoml
mov
movsl
xchg
xlat
cmc
mov
ficoml
daa
inc
adcb
imul
mov
cmp
jbe
subb
xor
inc
dec
push
ljmp
pusha
enter
scas
jg
cmpsb
mov
mov
adc
fnstenv
pop
xchg
mov
push
push
add
test
or
popf
pop
fnstcw
dec
mov
xor
mov
dec
and
pop
test
movsb
push
xor
mov
fldl
mov
add
stc
cmp
pop
push
cmp
ret
lret
dec
push
imul
or
into
cs
sbb
pop
loopne
cmp
mov
repz
shlb
fsub
sbb
in
jno
mov
pusha
jb
push
jp
cmp
add
and
xor
adc
jl
hlt
sbb
les
jmp
inc
pop
imul
push
repz
andb
inc
xor
jnp
es
mov
addr16
dec
mov
imul
pop
adc
data16
call
mov
mov
pop
cmp
pop
lods
insb
pop
and
and
xorl
test
sbb
mov
inc
jae
xchg
lds
in
mov
out
add
int3
cmpsl
in
pop
psubsw
repz
sub
pop
jbe
cs
add
push
jae
dec
mov
and
pop
mov
mov
xor
popa
jl
jmp
mov
test
arpl
fidivs
mov
lcall
mov
mov
and
fcoms
cmp
pop
rorb
sub
push
mov
outsl
sub
and
ljmp
loop
lea
push
push
pop
push
or
sbb
xor
mov
ret
pop
mov
jns
das
jmp
fs
push
cmp
push
popa
sbb
push
and
test
aam
lret
clc
clc
adc
push
and
xchg
addr16
fs
lods
add
push
out
out
push
in
mulb
lret
jle
les
cmp
ja
jae
rcl
sbb
sbbl
rcll
and
jg
pop
loope
int
daa
cmpsb
sub
pop
mov
adc
in
cmp
shrl
divl
lret
int
pop
pop
push
mov
pop
or
bndmov
jg
popf
testl
aaa
add
outsl
ljmp
mov
ja
cmp
jo
mov
cwtl
fidivs
mov
mov
inc
test
or
std
popa
mov
loope
jns
or
repz
pop
jmp
push
int3
jge
daa
pop
fimuls
jb
and
nop
outsl
mov
xchg
inc
ret
call
insl
fcompl
push
mov
xchg
fists
inc
outsl
aaa
outsb
mov
mov
ds
fwait
lock
out
push
xchg
bound
sbb
js
sti
in
js
add
das
shrl
aaa
arpl
dec
dec
iret
les
addr16
cmp
dec
pop
cmpsb
xor
dec
roll
and
ret
sub
jno
imul
dec
and
jae
lret
repnz
or
mov
cmp
mov
push
aad
dec
pop
push
in
adcl
jno
popf
cmp
xor
adc
xor
ljmp
sub
aas
repz
inc
adc
lret
add
lods
mov
js
cwtl
ljmp
cmc
jle
int
push
xor
shrb
xchg
or
jecxz
jbe
sbb
mov
pushf
insb
jge
fldl
push
mov
fidivrs
and
cmp
jge
push
enter
or
jmp
cmc
and
dec
dec
cmp
jmp
jp
push
pop
xchg
pop
ret
jle
xorb
sub
test
pop
xor
inc
pop
fdivl
and
outsb
mov
vmwrite
lds
cli
cltd
pop
scas
stos
fsubrs
rcl
xchg
mov
push
dec
es
movsb
inc
pop
jno
xchg
and
adc
psrlw
call
mov
insl
stc
mov
mov
rclb
jl
mov
in
cwtl
sub
lods
push
jb
mov
ja
xor
scas
push
stos
data16
in
loop
aas
jp
vdivps
scas
xchg
jb
nop
and
inc
jle
mov
testl
out
and
imul
bnd
sub
push
sbb
push
int
or
fistps
mov
inc
cld
jno
pop
push
push
insb
aam
adc
pushf
jmp
sub
rcr
imul
add
mov
jo
shrb
inc
push
jle
lret
into
mov
int
std
push
inc
sub
bound
mov
add
mov
sbb
and
cmpsl
xchg
dec
test
scas
repnz
mov
aaa
mov
cmp
adc
clc
out
sub
cmc
cmpsl
push
push
cmp
outsb
in
adc
mov
mov
mov
ljmp
and
pop
fucom
mov
pop
aad
test
adc
push
push
sarb
push
leave
mov
outsl
test
xor
int3
pop
dec
lahf
pop
or
mov
shrb
repz
mov
xchg
sub
addl
or
shll
dec
je
dec
out
cmp
cmpsl
sub
mov
jb
mov
sti
stos
mov
js
xchg
ljmp
ror
shll
jle
adc
fildll
call
fnsave
ret
xor
add
pop
and
pause
stos
test
mov
mov
shl
lcallw
loop
lcall
scas
jae
fs
jl
xchg
cmovb
call
out
mov
addl
sbb
pop
arpl
fcomps
mov
popf
dec
xor
loope
bound
out
stos
inc
sbb
push
punpcklwd
pusha
dec
xchg
stc
fsubrl
out
jl
inc
xchg
push
and
js
rcr
call
fdivl
test
sbb
push
xor
jnp
jg
fstps
aas
scas
push
or
mov
in
jp
jl
sbb
out
gs
cwtl
pop
aas
leave
test
test
sub
repnz
xlat
sub
jl
pushf
sub
cwtl
movsb
cmp
push
sub
cmp
push
cmp
aam
popa
mov
fdivs
stc
inc
mov
je
imul
cmp
cmp
xchg
je
add
or
push
insb
jecxz
movsb
adc
pop
rcl
rcl
and
dec
or
or
std
pusha
jbe
push
xor
stos
adc
and
fisttps
xchg
mov
subl
xchg
push
inc
ljmp
in
arpl
cmp
enter
leave
push
xor
sub
out
xor
in
xchg
inc
xchg
xchg
or
inc
insl
addr16
jecxz
movl
je
mov
inc
imul
cmp
pop
dec
lds
das
imul
adc
test
sbb
pop
in
xchg
into
call
data16
lret
xor
push
stos
inc
adc
push
stos
fldt
cwtl
and
cmpsl
push
movsb
lret
sarb
xchg
stos
mov
in
jg
mov
xchg
push
push
inc
shll
in
inc
jge,pn
mov
hlt
sub
cwtl
inc
dec
adc
mov
aad
lods
dec
push
mov
xchg
jg
ja
mov
sti
push
sub
incb
aam
cmp
dec
push
or
movsb
cmp
xchg
pop
stos
arpl
into
or
loop
add
dec
jae
mov
lret
mov
sbb
or
int3
and
mov
mov
sub
popa
add
jns
sub
sub
pushf
xor
lods
push
and
mov
test
imul
push
dec
lock
and
inc
sbb
int
mov
sbb
cmc
mov
mov
jge
shlb
aaa
sbb
xchg
xor
mov
in
mov
cmpsl
inc
dec
ficoml
orb
lds
jnp
and
addb
ret
jnp
lock
addr16
inc
mov
test
icebp
pusha
push
adc
pop
jmp
xchg
test
jo
sub
in
dec
mov
push
imul
xchg
mov
inc
mov
fstp
push
lock
pop
pop
std
jge
pop
sbb
pop
ret
pop
inc
push
and
or
cmp
stos
filds
enter
adcb
dec
sarb
fadd
dec
sarb
add
stos
lret
cmp
aad
sub
adc
gs
int3
movsb
in
push
dec
std
test
ret
cmp
cmp
jge
enter
push
jno
xchg
popf
ljmp
mov
cltd
sub
sbb
jo
xchg
outsl
shrl
lea
mov
imul
xor
push
mov
imul
mov
std
pop
cmp
mov
sbb
xchg
mov
testl
and
pop
fwait
add
mov
push
pop
in
ss
pushf
pop
mov
imul
lret
inc
adc
fmuls
and
lds
pop
xchg
aam
ffree
or
aad
cmp
dec
int3
and
sub
movsl
pop
aad
inc
cmp
ja
orb
dec
enter
mov
call
fisttps
in
push
push
hlt
ss
mov
dec
fdiv
movsl
add
xchg
pop
pop
push
roll
test
mov
aas
je
mov
dec
lea
movups
mov
out
and
cli
and
mov
ja
je
sar
pop
pop
jns
out
popf
bound
push
mov
pop
scas
daa
jp
adc
repnz
stc
into
sbb
xchg
in
cmp
push
icebp
stos
aaa
fcoml
pop
scas
mov
pop
call
mov
adc
mov
pop
jge
lcall
or
mov
std
cld
sbb
filds
pop
lods
push
scas
pop
cmp
jbe
mov
mov
mov
ss
repnz
add
mov
sbb
mov
ss
das
xchg
rcr
bound
outsl
jmp
lret
bound
sub
in
and
mov
inc
push
or
ret
dec
out
jne
aaa
mov
cmpsl
sbb
mov
cmp
ja
sbb
adc
sbbl
fcmovb
mov
mov
sbb
mov
inc
iret
jmp
mov
fisttps
lds
mov
xor
ret
jo
out
push
mov
jns
nop
push
jp
adc
mov
xchg
jne
loope
inc
push
lods
mov
mov
or
xchg
sub
cmp
orb
clc
enter
push
pusha
mov
lret
jle
push
mov
repz
sub
stc
lds
fldcw
pop
sahf
add
pop
dec
daa
sarb
ret
sub
sub
lock
xchg
shll
add
pushf
in
sbb
xor
jo
addl
std
mov
pop
loopne
sub
jecxz
mov
pop
je
leave
cmp
mov
mov
rcll
rcrl
sbb
cmp
scas
xchg
out
xor
adc
fcmovne
pop
shlb
lods
cmc
gs
jbe
fstpt
or
mov
add
mov
ret
mov
jp
push
mov
loop
pusha
mov
push
sub
addr16
mov
inc
sub
add
jmp
gs
inc
stos
movsb
mov
cmp
addl
pop
lret
sub
jb
in
inc
outsl
ja
in
out
adc
sbb
ss
sti
out
and
mov
cmp
cmpsl
jmp
lret
xchg
jno
imul
int3
sub
or
jae
mov
ret
loopne
mov
in
mov
outsl
pop
rorb
insb
iret
cld
out
int
cmp
jnp
push
int3
adc
int
in
lods
movsl
push
imul
mov
mov
insb
and
sti
pop
fstl
pop
mov
ja
jmp
call
jp
adc
inc
pushf
mov
mov
and
sbb
fwait
sub
add
lret
ret
sbb
fists
popf
mov
decl
shlb
cltd
mov
ss
add
ret
mov
je
insl
pop
outsl
xchg
mov
adc
add
xchg
std
data16
push
inc
lcall
mov
pop
xchg
xor
pop
jb
sub
mov
scas
mov
fistps
jae
stc
out
pop
fsubrp
ja
je
scas
pop
cmp
xchg
test
xchg
xlat
mov
aaa
and
out
outsb
aas
and
jecxz
les
add
dec
or
cmp
dec
mov
stc
add
xor
xlat
loope
int3
push
dec
mov
jns
xchg
fstl
test
cmp
das
jns
pusha
pop
clc
pop
movsb
or
or
je
jmp
dec
dec
cmp
test
icebp
mov
out
into
sbb
fnstenv
mov
je
fidivl
fwait
pop
dec
popf
rcl
stos
dec
push
pop
aas
ret
mov
cmp
sub
icebp
mov
lods
movsl
mov
or
mov
cmp
sub
and
inc
popf
or
mov
push
add
xor
adc
push
jo
jae
enter
inc
movsl
aam
and
pop
insb
dec
add
xchg
popf
enter
shl
xor
mov
jns
ret
adcl
or
and
ss
xchg
push
add
rorl
fcoms
imul
sub
xchg
dec
hlt
xor
pop
mov
inc
mov
sub
fiaddl
dec
fcompl
mov
or
notb
in
mov
jecxz
ficoml
dec
fisubl
cmpsl
mov
cli
dec
std
ds
in
mov
jl
add
jg
sbb
lods
outsb
repz
inc
mov
cmp
xchg
lods
pop
das
pop
inc
cltd
xchg
adc
push
lea
mov
shll
aas
mov
std
shlb
xor
dec
test
jne
adc
cmp
jno
xor
xchg
cmp
insb
fnsave
sbb
jbe
inc
rcll
push
pop
jbe
adc
xor
inc
cmpl
or
stos
nop
or
fmul
mov
repz
or
outsb
popa
pop
out
and
pop
xor
inc
or
cwtl
stc
test
and
jge
adc
pop
sbb
xlat
pushf
xchg
mov
pop
mov
mov
mov
lcall
xchg
push
mov
popf
add
sahf
sarb
shl
sbb
push
push
xchg
in
fs
adc
ficomps
jns,pn
dec
cmpsl
roll
ret
push
cmpsb
repz
push
push
jno
rclb
faddl
inc
lret
rcrl
cmp
mov
and
pop
call
das
test
and
jne
sub
cmp
sub
fists
or
sub
sbb
pushf
mov
push
xlat
fwait
mov
jne
xchg
bnd
sbb
dec
mov
sub
aaa
cmp
dec
lods
cmpb
repz
mov
sub
les
aam
sub
fimuls
mov
sar
push
sub
scas
aaa
daa
lret
jl
out
pusha
sub
jmp
or
fcoml
pop
lahf
push
hlt
pop
mov
iret
scas
cmp
test
out
lock
push
cmp
sbb
xchg
ficomps
test
sub
scas
dec
jns
lret
into
and
shlb
adc
bound
cmc
sbb
dec
pop
inc
test
mov
xchg
insl
lahf
or
lds
movsl
inc
jno
sbb
fwait
push
dec
movb
shll
stos
movsl
loopne
loopne
lods
sbb
enter
sbb
stos
xchg
cmpl
mov
cli
lret
and
fnstsw
ret
jae
and
inc
repnz
cmpsl
mov
sub
and
push
xor
fcomps
ret
and
aad
mov
rcl
int3
ss
outsl
jae
dec
sti
fcmovnu
insb
sub
mov
out
jne
je
inc
xchg
pop
leave
xchg
cwtl
cmp
push
roll
adc
dec
js
lock
dec
pushf
stos
sbb
push
mov
dec
add
mov
push
cwtl
mov
into
jecxz
aam
mov
pusha
inc
push
sbb
jae
mov
stos
dec
ficoms
push
test
mov
inc
daa
mov
test
push
lret
xchg
sub
cli
pop
pop
std
fildll
mov
push
sahf
es
cwtl
test
push
insb
pop
pop
insb
jge
mov
sbb
cmp
inc
imul
push
push
test
adc
sub
or
mov
test
jmp
push
loopne
inc
fistl
pop
stos
push
xor
push
jl
xor
arpl
dec
call
xorl
dec
hlt
push
sub
xchg
sbb
push
andl
dec
or
push
rcrl
push
mov
or
sub
mov
jne
lahf
clc
adc
arpl
mov
dec
mov
add
jno
mov
push
mov
aas
mov
cmp
lock
xchg
movsb
aaa
scas
jns
fnstenv
jbe
rorb
xor
mov
mov
gs
adc
arpl
lods
jno
aad
xor
dec
negb
repz
mov
adc
pop
out
jae
arpl
lahf
cmp
adc
nop
sub
out
outsl
pop
fisubl
cmp
dec
push
mov
rorb
jecxz
and
cmc
xorl
xchg
or
cs
inc
aad
push
push
sbb
sbb
push
mov
xchg
clac
ret
xorb
and
sub
jl
into
in
ja
add
movl
fs
sbb
jae
add
push
test
sbb
push
repnz
pop
dec
sbb
cld
test
xor
enter
mov
pop
add
jae
jg
test
xlat
mov
or
pop
sub
xor
iret
mov
sub
push
in
loope
xor
fcmove
clc
enter
adc
and
ds
ret
js
lahf
xor
sbb
cmp
jmp
mov
mov
popf
inc
ja
fiaddl
inc
sub
pop
mov
ret
je
aas
and
bound
out
xor
sub
std
dec
dec
sub
cld
mov
pop
push
test
jno
mov
push
push
push
lret
adc
inc
xor
loope
out
in
push
pusha
sbb
push
fsubrs
xchg
xchg
adc
aam
shr
dec
in
stos
daa
mov
sbb
push
int
add
push
jle
mov
dec
test
call
mov
into
add
add
mov
jl
push
mov
in
mov
lahf
lea
inc
sub
sbb
cmp
cli
xchg
push
mov
and
gs
popa
jecxz
sahf
aas
or
pop
and
movsl
popa
and
test
mov
ret
fsubrl
lret
fldcw
push
sub
repnz
or
ja
xchg
mov
mov
pop
rcrl
mov
mov
mov
cmc
das
or
roll
cmp
adc
cmp
cmp
lods
roll
lcall
mov
cmpsl
jnp
pop
sub
inc
imul
fisubrl
fcoms
jbe
mov
mov
mov
pop
aam
pop
dec
ret
pushl
and
jecxz
and
mov
test
inc
push
inc
push
jle
hlt
test
stos
push
add
movl
mov
mov
push
ljmp
icebp
enter
cmp
andb
pop
stos
js
jo
stc
jp
xorl
pop
popf
adc
dec
mov
and
aam
stos
int3
repnz
iret
mul
testl
pusha
pushf
ds
test
inc
push
das
shlb
sti
shll
jno
test
lock
insl
dec
fidivrs
fwait
fwait
aaa
add
xor
and
and
add
pop
mov
mov
sub
jns
dec
cmp
in
sbb
and
sub
sub
std
shrl
push
insl
fcoml
add
cltd
push
mov
call
jnp
mov
jae
das
adc
push
cmpsl
push
daa
or
dec
lret
pop
std
push
push
cmp
inc
inc
push
jnp
lds
lods
dec
mov
and
ret
loopne
fmulp
jg
lret
jmp
jnp
dec
mov
roll
lcall
leave
jl
out
xchg
adc
mov
sbb
mov
frstor
adc
imul
dec
addr16
imul
mov
add
cwtl
fdivs
pop
in
mov
add
sub
xor
ret
adc
and
movsb
mov
test
dec
sbb
into
adc
mov
dec
lcall
adc
mov
xor
rcrl
sub
and
jnp
inc
stos
or
sub
cmpsl
xchg
mov
fldenv
mov
xchg
lods
mov
je
lret
decb
pop
jb
mov
test
pop
mov
scas
scas
in
mov
mov
mov
xor
loop
cld
adc
and
shrb
lock
scas
mov
xchg
jle
cmp
negl
dec
push
push
lea
add
cwtl
push
je
pop
inc
ja
xor
outsb
dec
jo
sub
and
lahf
pop
mov
sub
out
pop
xchg
push
out
jne
cmpsl
jmp
push
les
std
lret
dec
into
xchg
xor
cs
cmp
push
xchg
push
push
imull
adc
int3
and
arpl
addr16
adc
movsb
loope
pop
jae
orb
jns
clc
cmpsb
mov
sbb
aaa
adc
fcoms
imul
add
or
sbb
jge
xchg
popa
ljmp
sti
cmc
mov
int3
cmp
pop
push
fs
jo
pop
int
xor
shr
daa
mov
cli
cmp
and
cmp
imul
das
push
and
ret
je
outsl
adc
jge
add
fisttps
mov
adcl
movsl
enter
cmp
std
lcall
mov
test
mov
sub
jo
cmp
jp
mov
cmpsb
shlb
loopne
cmp
sbb
push
insb
sub
movsb
ss
pop
es
sbb
in
adc
cmp
xor
je
scas
outsl
push
test
inc
int
gs
repz
ljmp
jb
rcl
out
ds
rol
ret
sbb
push
mov
mov
popf
adc
ljmp
pop
cmp
jbe
pop
pushf
xor
lods
xchg
jb
mov
jmp
enter
inc
mov
cmc
inc
movsl
in
and
adc
and
std
pop
push
and
sub
push
ja
dec
addr16
mov
mov
or
jbe
je
orl
es
sub
idivb
pop
add
xor
push
movsl
test
lret
fwait
bound
fwait
mov
out
aas
adc
lret
add
mov
adc
fwait
gs
pop
mov
mov
fimull
pop
mov
jge
cwtl
mov
stos
test
sub
xor
sub
xchg
xchg
adc
sbb
dec
sbb
push
test
mov
sbb
mov
cmp
push
cmp
icebp
in
jmp
dec
xchg
xchg
adc
ljmp
jb
enter
lret
inc
jnp
ljmp
cmp
cld
hlt
jecxz
fwait
aam
jbe
iret
pop
sub
dec
sbb
sbb
insl
fdivrl
mov
cmpsl
les
insb
inc
add
adc
jbe
orb
dec
aam
cmp
pop
out
fbstp
push
push
push
popf
test
jns
sti
aad
lcall
in
sbb
pop
add
scas
inc
mov
test
aaa
cltd
jg,pn
sub
aad
sbb
mov
and
lret
cs
pop
sbb
pop
mov
int
inc
scas
shrb
in
aad
jo
les
push
test
aam
add
inc
xor
sbb
sub
in
scas
pop
add
fsubr
sqrtps
xchg
inc
dec
xor
mov
in
mov
cmpsl
lcall
xchg
cmpsl
ss
insb
ja
pop
fcompl
lcall
push
mov
lret
gs
js
aad
xchg
movntps
mov
popa
leave
sub
scas
pop
mov
inc
daa
inc
rcrb
aaa
idiv
movsl
out
sbbl
icebp
jecxz
jl
cmp
sub
insb
xchg
dec
lds
adc
cwtl
mov
out
leave
in
xlat
adc
push
adc
adc
push
fisubs
rcll
pushf
cmp
imul
mov
sub
push
lcall
lds
das
or
pop
jg
sbb
jmp
add
into
in
sub
stos
mov
jb
xchg
pop
xor
cmp
imul
or
xor
adc
inc
fimull
aam
mov
cld
push
in
scas
inc
pop
lock
fnstcw
push
cmp
in
daa
and
and
movsb
sbbl
cmp
imul
js
adc
leave
xorl
movsl
xchg
sbb
xor
lods
jecxz
rcrb
loop
outsl
clc
daa
jno
and
fldenv
clc
popa
icebp
in
pop
mov
pop
cmp
arpl
inc
jns
sub
push
loop
in
enter
nop
mov
xchg
lods
call
cmpl
fsubs
les
mov
push
sub
or
into
adc
in
ds
sbb
sbb
sub
test
jns
or
test
repnz
lock
imull
lods
mov
dec
lea
outsb
out
incb
cld
lfs
movsb
arpl
mov
ss
int3
cmp
fwait
shr
lods
inc
fldl2e
sbb
inc
sbb
inc
sarl
or
cld
aam
xchg
xchg
aas
ja
cltd
adc
insl
inc
out
inc
leave
fstps
pusha
cmp
out
inc
rorb
pop
dec
int
mov
inc
out
lret
mov
int3
jl
or
sti
and
fs
xchg
inc
sarl
push
pop
fistpll
scas
imul
mov
in
out
mov
cmpsb
sub
pop
pushf
and
lcall
fsubl
jmp
and
in
fcomps
cmp
shll
push
jno
jns
lea
jbe
adc
jmp
mov
jg
pop
dec
xorb
stos
je
data16
xor
add
inc
mov
jecxz
lods
ficompl
cli
push
iret
mov
and
push
xchg
and
xchg
mov
xor
iret
jno
in
stc
pop
sub
out
cmpsb
inc
dec
xor
add
dec
xlat
ja
sub
sahf
enter
stos
pop
clc
push
leave
jecxz
pusha
scas
sbb
jecxz
outsb
sbb
jb
lahf
xor
scas
dec
icebp
mov
aam
sub
clc
or
xchg
mov
sbb
mov
ret
push
push
sbb
xor
psubusw
inc
adc
jae
xor
cmp
fisubl
mov
adc
pushl
lret
pmuludq
mov
dec
clc
mov
nop
fistpll
nop
adc
sbb
jbe
nop
sti
add
mov
out
add
dec
xchg
sbb
movsb
adc
push
pusha
or
fsin
hlt
mov
insl
cmpsl
mov
ret
mov
int3
add
mov
jno
dec
dec
popf
test
aad
fldl2t
or
orl
cmp
dec
rcll
sbbl
xchg
movsl
rcrl
dec
ja
stos
xlat
adc
iret
bound
test
ja
imulb
and
lahf
addr16
out
jge
dec
notb
clc
sbb
bnd
pusha
in
cld
fs
pop
lock
cmp
sub
repz
xor
cli
mov
xchg
test
stos
mov
arpl
push
nop
xor
out
inc
stos
xchg
jg
out
xor
ds
push
mov
dec
jmp
inc
cmc
popf
dec
jns
mov
jl
popf
xor
sbb
loop
jge
mov
pusha
pushf
iret
dec
iret
stc
je
or
inc
mov
push
incb
sbb
sub
mov
lret
inc
pop
inc
sbb
inc
push
subb
jbe
daa
pop
out
mov
jbe
jmp
popa
jmp
fdivl
cmp
mov
aas
pop
ss
mov
or
popf
insb
or
cmp
gs
mov
xchg
or
pop
and
pop
in
mov
jmp
add
jl
fmuls
in
pop
dec
adc
js
inc
or
stc
xor
xor
sti
inc
arpl
dec
and
fisubl
add
mov
mov
adc
mov
inc
ds
cld
xor
stos
adc
orb
mov
mov
ljmp
sbb
xchg
push
and
jbe
cltd
sub
mov
jnp
xor
cld
mov
xchg
dec
clc
movsb
sub
out
push
inc
lds
fwait
sbb
push
jo
or
sub
mov
pop
and
mov
ret
sarb
or
sbb
or
rcrb
inc
xlat
pop
mov
rorl
pop
popl
push
pop
sub
jmp
mov
ljmp
jo
test
pop
ret
bound
leave
or
fyl2x
data16
pop
aas
bound
inc
cmp
push
fmull
mov
dec
mov
sbb
adcl
popa
and
pop
mov
mov
pop
scas
dec
adcl
outsl
ja
push
xchg
push
js
add
xor
jl
aaa
xchg
inc
insl
push
repnz
fbstp
in
mov
shr
popf
ret
xor
lea
scas
jl
aad
mov
sbb
rclb
pop
xor
sub
shll
out
daa
imul
shlb
rclb
xor
cmpsl
inc
in
cmp
adc
popa
push
lods
lock
fstpl
fcmovnu
mov
cmpsl
int
cmp
cmp
push
or
test
lret
ja
sahf
jne
cmp
icebp
lret
out
fisubrl
sahf
test
scas
sub
lds
mov
enter
into
js
call
jle
push
and
jb
jle
fistps
shll
add
sbbb
dec
add
lret
push
out
std
sbb
mov
ror
xchg
les
bnd
sbb
ljmp
test
adcb
cwtl
sub
fcmove
xchg
lcall
int
lds
scas
je
icebp
rorb
sbb
repz
pop
fwait
xor
mov
call
xchg
push
xchg
xchg
inc
push
addr16
negl
dec
fcoms
imul
aaa
and
adc
ja
xchg
movsl
lods
push
xchg
cmp
lods
lds
fwait
mov
out
fldcw
je
and
nop
push
nop
pop
in
jmp
leave
jl
mov
pop
jo
and
imul
jp
pop
or
xor
movsl
mov
mov
jle
jmp
fwait
inc
mov
mov
mov
mov
addb
les
negb
or
shlb
ss
inc
je
cmp
outsl
fsubrl
outsb
rolb
pop
or
loopne
mov
pop
ret
loopne
push
jl
dec
jne
sbb
leave
ljmp
mov
out
mov
xchg
pop
or
in
adc
into
popa
push
insl
int3
bound
mov
add
sbb
cmc
outsb
pop
sbb
adc
lret
aaa
sbb
dec
sbb
xchg
pop
xor
sbb
or
mov
mov
add
xor
push
xchg
sbb
nop
adcl
pop
pop
adc
push
bound
loope
xchg
mov
add
out
ret
push
cmc
lock
clc
jbe
jl,pn
inc
jmp
push
add
ljmp
ljmp
add
and
and
xchg
pop
cmp
xor
sbb
push
mov
aam
mov
pop
sti
push
in
xchg
lods
enter
sub
mov
cli
jp
in
cmp
mov
lsl
test
hlt
xor
sbb
call
scas
xor
inc
out
add
xchg
in
adc
pop
inc
cs
fisubrs
pop
adc
or
adc
stos
mov
subb
inc
mov
mov
push
fmull
into
cmpsl
push
mov
sbb
and
cmp
shlb
mov
xchg
cli
mov
xor
push
mov
fsubl
pusha
adc
les
ds
pop
xchg
mov
jae
fstpl
movsl
mov
dec
sbb
mov
sub
cmp
and
and
lea
ss
enter
jl
loop
pop
xchg
push
iret
push
cltd
add
sub
insb
cmp
sub
std
pop
cmp
sbb
push
mov
repz
pop
rol
sarb
mov
sbb
sbb
mov
mov
cmp
in
mov
mov
pop
xchg
inc
mov
cmpl
mov
movsl
leave
push
aaa
test
aad
cmp
insl
xchg
outsb
or
mov
inc
in
mov
sqrtps
add
outsl
cld
push
jmp
adc
in
hlt
arpl
and
movsl
jg
sub
popa
mov
pop
test
loope
inc
adc
mov
bound
cli
std
in
repz
subl
pop
dec
repz
adc
enter
adc
lock
call
leave
movsb
inc
cltd
mov
les
loop
adc
lcall
adc
mov
pop
sub
xor
fcoms
fildl
pop
notb
lods
in
dec
ja
push
popa
nopl
push
sub
inc
iret
outsb
or
and
inc
les
imul
and
stos
ds
xor
add
lret
mov
sub
dec
stc
mov
push
test
xor
jmp
dec
insb
xor
xor
dec
scas
jne
mov
xchg
bnd
andl
sub
lods
mov
sbb
pop
mov
jp
data16
aad
sbbb
cs
movsl
or
sarb
push
out
xor
pop
cwtl
add
jns
out
jecxz
stos
inc
fimull
xchg
xchg
rclb
divl
mov
insb
mov
mov
daa
lcall
xor
loopne
xlat
dec
xchg
pop
scas
cmp
pusha
and
pop
lods
pop
cmp
std
sub
outsb
fbld
push
inc
daa
clc
or
lock
fmul
sahf
rcrb
sbb
lahf
dec
sbb
ss
repz
popa
cmp
imul
and
loop
imul
xchg
loop
fistpll
pop
mov
cmp
xchg
fwait
mov
aas
shrl
popa
mov
insl
and
sub
add
and
fstp
out
jne
cmpsb
ficoml
outsl
in
xor
ficomps
les
dec
pop
movsl
test
pop
mov
mov
mov
mov
adc
iret
push
mov
lds
das
push
add
mov
cltd
mov
loopne
shll
jp
sbb
dec
and
lret
and
mov
cmp
dec
sub
and
jae
and
fcompl
add
pop
sbb
ror
and
in
xchg
movsl
inc
loope
int
jne
push
or
add
jnp
cmpsb
arpl
ds
stc
shll
or
pushf
scas
xor
mov
movsb
dec
add
inc
xor
dec
jo
jno
in
cmpsl
notl
sub
out
das
push
cmp
dec
mov
out
test
cmp
push
in
mov
mov
or
fiadds
bndldx
loop
or
mov
flds
cld
pop
out
lret
jp
les
cs
cli
push
sub
push
push
mov
inc
addl
xchg
sbbl
cmp
jb
inc
scas
or
cmp
push
ficomps
lret
je
enter
pop
lcall
pop
aam
xor
sbb
push
pop
into
jge
aam
jae
mov
fcmovnu
jno
xchg
divb
mov
pop
ret
adc
mov
adc
xchg
adcb
or
mov
aaa
adc
adc
mov
pushf
movsb
aam
cmp
inc
inc
push
hlt
imul
or
adc
xor
dec
push
adc
jno
cwtl
test
xchg
std
mov
loopne
and
mov
popf
mov
fsubr
ret
push
ja
pop
and
jg
fwait
jl
xchg
ljmp
mov
loopne
push
mov
dec
ds
loope
push
and
mov
xor
or
cmp
in
mov
lea
pop
addl
arpl
jnp
ja
cwtl
pop
icebp
push
lahf
dec
pop
add
ds
push
jle
imul
movsl
push
sbb
add
pop
push
cmp
push
or
pusha
pop
fisubl
andb
lret
or
fnstcw
xchg
jmp
scas
sub
fcompl
cmp
xchg
rclb
mov
imul
push
inc
cmp
mov
mov
mov
sbb
cli
dec
pop
mov
sbbb
cmpsl
xchg
hlt
shll
imul
jmp
pop
dec
out
sbb
rcrb
cmpsl
mov
insl
xor
enter
test
loop
roll
lret
mov
lock
mov
in
jmp
daa
cmc
jecxz
fs
repz
adc
decl
ret
mov
pushf
in
out
sub
jbe
leave
add
jecxz
mov
filds
repz
jnp
cmpsl
adc
jbe
je
outsl
daa
mov
xchg
sub
nop
push
pop
scas
adc
dec
mov
xlat
inc
loope
cmp
mov
mov
outsl
ret
pop
inc
mov
mov
mov
fs
stos
ljmp
mov
scas
jbe
in
aaa
idivb
adc
pop
push
int3
cltd
imul
mov
imul
roll
mov
leave
or
cs
mov
test
xorl
xor
sbb
mov
and
mov
jl
insb
jne
push
push
jg
jle
ja
je
ljmp
pop
cmc
mov
push
jecxz
cmp
xor
fimuls
or
cmpsb
movsl
jp
out
cmp
das
mov
hlt
pop
pop
or
mov
in
pop
push
push
jns
xor
arpl
cli
fnsave
cmpsb
popf
lock
xlat
or
andps
mov
push
fcom
cmp
lret
out
mov
dec
dec
ss
cld
lods
ljmp
in
addb
xor
out
cmp
int3
dec
mov
mov
sub
and
push
fnsave
sbb
cli
loope
sub
out
arpl
lcallw
ds
inc
in
sub
push
in
pop
in
push
mov
adc
push
xchg
dec
std
out
dec
jae
idivl
leave
call
cmp
mov
in
adc
mov
dec
and
imul
mov
sbb
cmp
loopne
ret
shlb
mov
jmp
cmp
adc
cmp
fs
addr16
or
cmpsb
pop
loope
shrl
adc
js
pop
idivb
mov
cltd
int
mov
mov
dec
dec
sub
outsl
out
clc
adc
ja,pt
or
jmp
cmc
and
jnp
inc
stos
shrb
lods
pop
push
inc
cld
into
shll
ret
in
insl
dec
jl
and
les
jl
add
pop
mov
adc
push
in
add
sub
xchg
pop
lret
movsb
push
cmp
cmpsl
jmp
push
xchg
popf
add
or
clc
xchg
data16
xchg
or
insb
insb
jg
and
or
cmp
mov
outsb
push
xor
xchg
push
lods
or
inc
mov
mov
xlat
push
adc
add
scas
cmp
divl
shl
daa
xchg
sbb
fisubrs
sub
arpl
mov
dec
in
call
imul
dec
sti
test
stos
jg
ldmxcsr
cmp
into
adc
lcall
js
sarl
mov
sti
dec
cld
fildl
xor
jb
insb
jl
fnsave
mov
add
ret
push
mov
outsb
shrl
jno
inc
pop
jmp
lds
or
push
cltd
shlb
push
je
ret
rorl
mov
mov
or
ja
sub
mov
cmp
xor
mov
int3
sub
dec
arpl
inc
call
or
dec
add
adc
std
sbb
dec
add
mov
push
jecxz
inc
inc
pop
adc
dec
add
xor
push
push
adc
cmpsl
mov
bound
xchg
pop
push
test
sahf
psrlw
adc
stc
fdivrs
inc
leave
or
notb
sub
sub
fimull
pushf
lret
inc
xchg
pop
icebp
cmp
jmp
aad
and
ret
cwtl
jno
sbb
xchg
fdivs
ss
stc
pop
sbb
imul
mov
rcrb
pop
xor
das
subb
aas
fdivr
cmp
add
sbb
mov
leave
fisubs
adc
cmp
cltd
sbb
jo
decl
sub
mov
int
mov
jb
pop
fldt
test
fildll
sbb
mov
jnp
mov
mov
cmp
call
mov
clc
outsb
shlb
dec
jle
sub
xor
xchg
insl
outsb
jle
inc
adc
imul
mov
or
adc
sahf
lods
push
cmp
js
fisubl
mov
je
in
lret
nop
xchg
js
negb
mov
push
or
xchg
push
jns
shr
and
shrb
aas
sti
out
mov
sub
mov
sbb
push
xor
lret
aad
sub
shlb
out
sbb
mov
jle
mov
jbe
jmp
sub
dec
loope
and
mov
sbb
sbb
in
inc
add
lahf
push
mov
xlat
pop
je
shll
lods
pop
sti
mov
rcrb
xchg
pop
pop
inc
dec
and
aaa
and
cmp
mov
out
ss
lcall
movsb
push
in
add
xor
arpl
pop
mov
jae
mov
mov
popf
popa
shl
jno
cmp
movsl
lds
rcll
popa
mov
ljmp
jecxz
out
pusha
lock
idivb
test
imul
xor
jecxz
jecxz
out
adc
jp
lcall
mov
or
les
jo
orl
rorl
xchg
xchg
cwtl
jb
mov
lods
adc
jno
or
jnp
xchg
push
mov
push
add
fldenv
sub
push
je
inc
mov
sub
sub
cmpsb
test
int3
std
ljmp
flds
lds
push
icebp
sti
lods
cltd
mov
sub
stos
daa
bound
ljmp
movsl
xchg
hlt
mov
inc
adc
xchg
fnstenv
pop
ljmp
dec
cmp
stos
out
push
fbld
jmp
push
shll
and
add
pop
out
addr16
mov
mov
add
push
stos
inc
cmp
xchg
pop
cwtl
and
insb
bsf
mov
cwtl
sub
les
enter
sub
ds
or
or
hlt
int3
jnp
push
test
push
xchg
lock
mov
mov
or
sub
cmpsl
outsb
pop
adc
cmc
mov
xchg
mov
je
xor
push
sbb
push
pusha
adc
fwait
mov
xor
adc
sub
xor
aas
jecxz
or
xchg
clc
push
ss
daa
decb
into
cmpsb
xor
and
xchg
loopne
pop
pop
out
pop
lcall
jle
lret
add
and
dec
mov
je
mov
push
iret
out
xchg
mov
popf
addl
jmp
inc
ror
lds
les
mov
ja
fyl2xp1
push
jne
ficoml
adc
test
push
ljmp
mov
adc
push
xchg
inc
sarl
jg
lods
in
lret
mov
dec
inc
xor
ja
xchg
nop
stos
pop
cmp
lret
fs
pop
jne
cwtl
dec
xor
mov
or
push
xchg
lods
out
gs
das
sbb
out
aaa
jmp
sarb
push
fcmovb
bnd
mov
or
jmp
mov
adc
adc
inc
dec
fidivs
push
dec
xor
jns
pushl
add
pushw
sub
or
dec
repz
mov
insl
dec
test
mov
leave
ljmp
loope
int3
in
fbld
inc
jle
into
adc
in
sti
inc
mov
sub
movsl
adc
lock
sbb
scas
push
pop
jp
or
cwtl
sub
insb
jp
adc
jo
mov
cmp
adc
cld
movsb
add
cmp
mov
out
mov
out
inc
js
mov
test
arpl
mov
fwait
dec
cmp
int3
fwait
sti
pop
repz
and
cmpsl
add
adc
inc
clc
movl
test
jno
push
sbb
jae
ret
les
data16
push
mov
movl
icebp
cmp
and
scas
flds
fcom
adc
xchg
mov
and
repnz
sub
mov
cmp
lret
push
cmp
jecxz
sub
in
outsb
jmp
and
insb
mov
test
push
aaa
push
aad
test
jnp
gs
sub
inc
data16
and
xchg
pop
and
scas
pop
loop
pushl
inc
push
jo
sahf
icebp
xchg
jbe
inc
pop
pop
xlat
cmp
call
bound
lret
jbe
aam
jnp
xchg
test
cmp
movsb
lret
adc
out
inc
xchg
jbe
push
xlat
stos
ret
mov
movsl
mov
xchg
cmp
jns
xchg
sbb
push
sahf
shl
imul
cltd
jecxz
out
scas
das
sbb
out
hlt
mov
dec
hlt
imul
jbe
inc
cmp
inc
aaa
sahf
dec
dec
jge
add
and
ud1
mov
mov
dec
fsubrl
lret
insl
mov
nop
js
mov
setp
rorl
ficompl
scas
data16
mov
insb
inc
iret
sub
test
cmp
xor
aam
add
mov
rcl
jo
cmp
cs
mov
sbb
push
adc
frstor
out
adc
ficomps
repnz
std
int
cmp
pop
packuswb
sbb
xchg
pshufw
mov
push
enter
gs
xchg
mov
mov
add
mov
adc
mov
in
cmpsb
pop
xlat
mov
or
mov
enter
addr16
sbb
mov
insl
sub
outsb
rol
mov
aas
cmpsb
and
lahf
and
pop
mov
cmpsb
mov
xchg
add
daa
adc
push
inc
mov
ret
int3
pusha
mov
mov
push
std
clc
mov
jg
test
add
arpl
sub
in
mov
rclb
test
imul
inc
and
xchg
sbb
mov
dec
gs
inc
pop
sbb
ret
sub
or
loop
mov
out
dec
cld
loop
lret
bound
rclb
nopl
push
mov
mov
aaa
push
add
sub
mov
mov
out
jbe
popl
xchg
mov
cmp
hlt
or
stc
rclb
or
sub
add
scas
arpl
aaa
add
lds
mov
dec
sbb
and
mov
mov
loope,pt
js
dec
shll
mov
ljmp
pop
fsubs
notl
rorb
jp
mov
pop
aaa
out
das
cmp
nop
mov
inc
mov
pushf
inc
jp
add
loop
jle
fsubp
sbb
dec
dec
cmp
sbb
adc
mov
popf
rclb
ficompl
ja
ret
es
gs
push
jbe
add
push
ret
mov
fisttpl
push
mov
jmp
add
lea
ret
adc
push
ret
cld
pop
fsubrl
xchg
pop
aad
int3
jmp
fcmove
cld
add
mov
daa
fistpll
sbb
dec
pusha
push
fneni(8087
adc
mov
insl
mov
imul
bswap
sub
jns
xchg
gs
and
enter
add
push
dec
cmp
mov
ror
rorb
jp
push
aaa
mov
mov
sarb
jge
xor
push
lahf
mov
sub
sbb
cmpsl
jg
mov
cmp
mov
mov
lcall
nop
lock
mov
and
and
pop
pop
nop
pop
fld
and
es
repz
jne
xor
dec
cltd
mov
icebp
sub
jae
dec
inc
movsb
decl
cmp
xchg
add
inc
sub
clc
bound
jno
pop
mov
idivl
adc
movsl
scas
xor
add
jecxz
clc
insl
pop
and
test
xchg
or
insl
cli
or
sub
insb
ret
ja
fstpt
and
sub
addl
dec
mov
mov
sbb
leave
adc
adc
mov
cmp
out
adc
jle
movsb
mov
js
cmc
inc
loope
outsl
cwtl
out
jmp
stos
clc
ss
ja
addr16
xorb
mov
scas
add
jb
lahf
imul
fcmovnu
sub
es
pop
jg
mov
inc
ret
je
adc
cmp
mov
std
je
jge
je
jns
xchg
ret
outsb
fs
test
imul
enter
ljmp
push
insl
dec
cmp
imul
rcrb
push
sbb
cwtl
push
aas
jne
lods
data16
jns
negl
push
sbbl
stos
stos
xor
popf
add
sub
pop
movsl
into
push
adc
push
push
mov
int
ret
das
add
xchg
pop
pop
outsb
xorb
mov
sub
nop
adc
and
cmp
das
lret
inc
mov
dec
dec
call
inc
cltd
mov
and
stos
loopne
jl
outsl
jo
ds
sub
jle
mov
ret
mov
mov
xchg
into
dec
icebp
mov
iret
mov
lret
adc
mov
cwtl
insl
cltd
stc
inc
dec
mov
push
xor
xor
repz
mov
aad
jge
sahf
insb
ret
or
mov
mov
dec
push
scas
in
test
mov
aad
fcom
rol
mov
fwait
out
cltd
pop
sub
repnz
inc
add
fistps
loope
dec
jp
jns
cmp
imulb
or
mov
leave
fucomi
das
pop
es
fwait
and
repz
xlat
sbb
pusha
xor
sbb
stc
push
ss
xchg
rcll
ljmp
xlat
pushf
sub
stc
icebp
mov
ds
xchg
cli
or
sub
insb
nop
inc
addr16
xor
imulb
out
pop
sahf
js
lret
push
aaa
pop
data16
sbb
je
add
int
sahf
sub
ja
into
mov
cltd
mov
xchg
repnz
flds
cmpb
mov
cmpsb
imul
dec
out
xor
push
inc
subl
jb
aas
inc
out
imul
push
sbb
testl
arpl
and
push
add
xchg
pop
out
sub
lret
stos
nop
aad
xchg
andb
jnp
ret
ficoms
mov
shlb
data16
les
lea
sbb
popf
xchg
sbb
stos
scas
gs
jo
ret
in
adcl
and
movsb
arpl
outsb
sub
ds
push
mov
sti
dec
stos
ljmp
xchg
mov
aam
cld
cmp
add
outsl
shll
insl
test
jae
jp
rcrb
lahf
xor
xchg
adc
cmp
jo
int3
pop
std
in
mov
ja
mov
push
js
rolb
add
push
jno
ljmp
sarb
sub
mov
jno
push
push
xchg
mov
insl
dec
mov
scas
bound
mov
dec
nop
mov
std
stc
cmc
jns
cmpsb
mov
mov
subb
xchg
xchg
xor
fmuls
fsts
push
sub
ds
clc
mov
mov
ds
mov
dec
sbb
stos
outsb
push
sub
inc
jmp
xchg
js
jne
pop
pusha
pop
aad
push
rcrb
rorb
mov
and
mov
push
xchg
xor
push
in
movl
cmpsb
sub
push
xor
mov
aad
push
in
mov
jbe
cmpsl
stc
outsb
xchg
movsb
dec
dec
repz
or
adcl
adc
test
inc
pop
sbb
push
push
jne
jg,pn
sahf
cltd
xor
lcall
test
inc
lret
vpmulhuw
nop
cld
data16
mov
lds
adc
arpl
xor
sub
es
sbb
mov
pop
mov
sarb
push
pop
and
jecxz
xchg
push
testl
fldenv
in
bound
out
pop
jge
pop
ret
jp
xchg
rorl
loop
mov
pop
jg
inc
rolb
sub
imul
das
mov
or
push
aam
bound
mov
rorb
add
mov
or
insb
test
push
fwait
dec
arpl
arpl
ror
das
mov
movb
push
movsb
imull
sub
cmp
lds
movsl
mul
int3
cwtl
movsl
rclb
mov
push
inc
data16
adc
xor
out
push
dec
xchg
xor
flds
xlat
in
sbb
or
push
in
sbb
dec
enter
cmp
jg
jecxz
mulb
iret
push
pop
xorl
mov
mov
pop
outsl
ss
jmp
das
adc
ja
in
iret
in
or
icebp
inc
dec
in
in
jnp
inc
das
test
sbb
arpl
lcall
mov
les
mov
add
rcrb
adc
adc
dec
sbb
cmp
or
mov
sahf
dec
jmp
and
mov
aaa
ret
pushf
cmp
ss
add
sti
das
push
cmpl
call
and
lcall
dec
xchg
lds
sub
and
push
dec
fdiv
push
adc
movsl
jl
out
ljmp
pop
push
mov
mov
loopne
mov
jno
mov
sbb
addr16
adcb
sub
sub
sub
lods
aam
dec
fsubs
mov
add
cli
pushf
and
fiaddl
mov
fmul
test
dec
mov
cmpsb
aaa
in
shlb
aad
sbb
sbb
scas
lea
sub
jmp
outsb
js
ja
sahf
and
fsubs
and
mov
fidivrl
sahf
mov
enter
stc
or
addr16
and
push
scas
nop
add
addr16
xchg
mov
loope
cmpsl
or
mov
mov
test
rcll
loope
lods
aaa
test
and
idivb
imul
cmc
push
jecxz
gs
ljmp
mov
inc
cld
lods
inc
fisttps
xchg
lock
addr16
xlat
push
mov
dec
rcrl
enter
ret
scas
outsb
insl
addb
lea
js
add
shll
xchg
dec
or
test
test
rcl
loope
cmp
jmp
stc
push
push
add
cmp
or
pop
bound
gs
icebp
cmp
xor
shlb
adc
mov
shll
sbb
cmpb
jecxz
or
lahf
loopne
repz
xor
daa
pushf
idivb
jns
adc
inc
inc
out
icebp
test
enter
aam
popa
in
es
dec
add
mov
dec
jmp
cmc
fdivrs
pushf
mov
xchg
sahf
jp
push
push
pushf
adc
or
add
roll
repz
gs
jns
adc
mov
clc
jbe
movq
and
cli
cmp
mov
inc
jle
xchg
lahf
std
pushf
int3
cmp
xor
jnp
jnp
jnp
shl
mov
mov
sbb
test
sub
mov
sub
jne
dec
xor
jbe
ds
stos
psubsb
cmp
ds
fs
xorb
cmc
jae
loope
rolb
mov
push
cltd
push
jl
dec
lods
movsb
xchg
add
fnstcw
sbb
lcall
xor
push
mov
xor
es
dec
xchg
ficompl
out
movsb
mov
ljmp
jbe
icebp
out
sbb
jbe
lret
cmp
neg
xor
push
xlat
es
inc
mov
lret
or
cmp
fnstenv
icebp
xor
and
cmp
sbb
fildll
movsb
out
dec
aas
notb
imul
stos
or
pop
popa
xlat
mov
int
mov
in
push
cmc
xor
das
fildl
push
into
inc
clc
xchg
shll
imul
push
in
pop
mov
std
out
adc
stc
jg
pop
cmpsb
and
insb
test
mov
out
insl
dec
pop
cwtl
cmp
cld
mov
les
and
push
in
push
cmp
sbb
add
pop
into
gs
fisubrl
sub
cmp
lods
outsb
je
mov
sub
fldenv
inc
sbb
mov
cmc
ljmp
mov
lcall
lret
adc
pushf
imul
lahf
and
sub
aam
insb
mov
jp
dec
stc
jae
inc
jmp
mov
fxch
mov
idivl
jbe
jecxz
or
mov
outsl
out
xor
fsin
std
outsb
dec
jns
add
sbb
std
inc
testb
dec
int
mov
cmp
aam
repnz
addr16
dec
addl
scas
int3
adc
xor
insb
subb
stos
ja
into
or
and
xchg
arpl
xchg
mov
push
mov
aam
repnz
mov
imul
mov
cmp
jae
fwait
pop
popw
inc
jmp
or
inc
pop
mov
clc
add
idivb
inc
cmpsb
sbb
pop
xor
jg
inc
fwait
inc
inc
icebp
dec
clc
sub
cmp
outsb
daa
aaa
mov
push
sub
loop
push
cmp
fnstenv
lods
cmp
fistps
xchg
mov
push
lcall
mov
or
inc
outsb
lcall
std
hlt
push
mov
enter
icebp
mov
adc
dec
push
fimull
or
push
jbe
daa
pop
pop
and
xor
sbb
mov
cmp
dec
mov
and
or
inc
jmp
pop
mov
insl
push
clc
ret
ret
cmp
cltd
mov
stc
jns
fcmovnbe
insl
cltd
cmp
dec
xor
in
lret
mov
add
inc
fbld
incl
adc
insl
popa
adcl
rcll
cmp
sbbb
cltd
push
enter
jno
into
and
dec
inc
icebp
mov
iret
mov
pop
cld
xchg
sub
xor
in
and
jae
inc
les
test
dec
cmp
test
stos
sahf
push
in
in
cwtl
mov
ljmp
mov
shl
sbb
mov
stc
divb
mov
xor
pop
cmp
fisubrs
xchg
outsb
pop
loope
ret
clc
rcl
int
dec
dec
push
ret
dec
dec
lds
fdiv
das
cmpsb
fcoml
arpl
cmp
or
inc
ds
add
mov
cmpsl
xor
or
dec
fs
add
fs
bound
push
add
jnp
and
aam
fimuls
adc
and
xchg
sbb
psubusw
cmp
dec
in
xlat
sbb
fstpl
pop
orb
call
adc
and
and
call
repz
lar
leave
bound
add
filds
and
pop
rcll
mov
pushf
mov
sub
mov
addl
adc
cmc
and
cmpsb
mov
rcrl
add
sbb
inc
pushf
mov
out
test
hlt
jg
mov
pop
or
test
icebp
jno
mov
mov
lea
cmp
xor
and
dec
inc
fisttpl
ret
stos
add
sbb
cmp
mov
int
test
push
into
lahf
xlat
or
mov
movsb
sub
stc
inc
and
gs
or
xchg
lret
jmp
mov
daa
add
jmp
cmp
or
int
in
or
test
sbb
pop
push
dec
pushf
mov
movsl
sahf
add
fidivl
out
xchg
sub
fimull
jle
cmp
adc
std
cmc
mov
lods
fs
mov
push
lods
pop
sub
aam
mov
adc
push
repnz
mov
adc
test
fmull
aad
test
jo
mov
add
mov
pop
inc
cmc
xchg
inc
rorb
in
mov
pop
cmpsl
mov
mov
jns
adc
je
cltd
aam
mull
or
outsb
xchg
je
adc
mov
jmp
ss
addl
pusha
pop
dec
sub
bound
stc
test
mov
shll
mov
insb
loop
idiv
out
sub
les
test
je
pop
jp
push
ljmp
push
hlt
xchg
in
icebp
jns
aaa
push
jmp
pop
adc
mov
or
subl
stos
das
repz
call
sbb
cmp
jnp
das
shl
push
shll
sbb
push
idivb
in
jbe
dec
lods
fs
xchg
adc
mov
mul
jp
or
inc
or
xor
jmp
cmc
shrl
lods
xor
and
xchg
dec
or
pop
outsb
cltd
lea
sub
add
sbb
pop
cltd
push
sub
sbb
xchg
outsw
fmull
and
sbb
addl
je
loope
addl
loope
jmp
dec
push
add
outsl
or
pop
in
push
addl
cwtl
pop
movsl
int3
hlt
movsl
into
ljmp
lret
cltd
mov
cs
dec
int3
lret
jno
lods
jle
xchg
cli
adcl
cmp
pop
push
mov
push
cwtl
out
hlt
scas
pop
adc
gs
aaa
jp
jmp
mov
dec
repnz
into
es
cli
xchg
inc
xor
add
adcl
iret
sti
sub
test
into
sbb
or
insb
xlat
inc
fimuls
icebp
sbb
into
dec
repnz
dec
mov
inc
pop
daa
push
xor
and
jae
popf
insb
int
jne
pop
cmpsl
xchg
or
out
int
scas
push
orl
mov
shll
sub
sbb
inc
test
in
fdivrl
cmp
xor
and
test
lea
adc
dec
mov
sub
test
lds
push
sub
xchg
cmp
pop
jl
cli
in
nop
out
inc
jo
insb
pop
push
test
fldcw
jmp
cmp
pushf
pop
mov
lea
cmpsb
outsb
shl
arpl
adc
outsb
cli
test
in
xlat
stos
sbb
loopne
mov
std
sub
out
mov
adc
and
mov
lods
xlat
adc
inc
test
inc
xlat
mov
jg
xlat
lcall
cli
xor
ret
scas
cmc
loope
dec
inc
sbb
inc
mov
mov
aad
and
mov
adc
jbe
popa
ret
ficoms
xchg
in
mov
push
mov
mov
xchg
aas
test
js
jmp
add
mov
mov
dec
mov
call
sub
out
iret
fstps
lods
loope
cmp
and
test
pop
adc
stc
es
xor
fistpl
out
fsub
in
mov
mov
aad
adc
or
inc
jecxz
xchg
add
int3
mov
mov
push
nop
cli
call
dec
std
inc
mov
mov
cli
jg
cmp
xchg
out
fs
sub
pop
inc
out
cld
out
movsl
jb
clc
fisubrl
fwait
jg
xchg
or
sbb
xchg
inc
add
imul
pop
sub
mov
test
subl
insl
cs
or
arpl
in
add
scas
lods
fisubs
cmp
push
fucomip
xchg
push
add
gs
add
pop
pop
xchg
loope
mov
push
cmpsl
push
dec
mov
mov
call
fists
pop
les
mov
mov
pop
push
fwait
mov
shl
cmpsl
cld
adc
or
mov
cmc
pop
sub
movsl
cwtl
lods
in
sub
rol
and
insb
and
mov
leave
jmp
sub
jb
fnstenv
jle
sub
adc
pop
lea
aas
lcall
adc
mov
hlt
movsb
mov
push
xchg
movsl
cmp
ret
hlt
lock
fwait
jl
push
in
inc
dec
inc
xchg
jge,pn
cmc
inc
pushf
sbb
out
mov
stc
sbb
or
fistl
outsb
jecxz
movsl
popa
sbb
icebp
mov
dec
inc
sbb
lock
aaa
out
push
or
mov
cmp
pop
xchg
daa
hlt
pop
push
jns
push
pop
xchg
mov
push
and
mov
pop
js
scas
push
push
sub
test
push
in
inc
into
inc
adc
pop
scas
bound
addr16
adc
stos
es
xchg
imul
imul
subl
push
mov
mov
shrb
inc
imul
jo
adc
push
xor
sub
add
clc
cmp
out
pop
rcrb
xor
pop
xchg
call
int3
push
jle
dec
xchg
pop
notl
jle
push
inc
fdivp
stos
adc
pop
mov
sbb
xchg
xchg
cld
mov
insb
xchg
andb
push
mov
mov
cmpsb
dec
int3
and
shr
out
jne
jns
insb
loope
dec
test
aad
dec
rcll
or
lcall
mov
inc
in
lcall
mov
rclb
adc
inc
pushf
test
bound
sbb
imul
or
lret
xor
imul
mov
xor
inc
stos
pop
push
add
call
pusha
mov
setg
in
cmp
fwait
pusha
xchg
inc
pop
in
sbb
cmp
in
xchg
inc
pop
adc
lods
mov
les
mov
repz
and
movl
push
or
inc
ficoms
mov
add
nop
mov
loop
jl
pop
sbb
fisubrs
mov
stos
insl
std
int3
or
jle
inc
add
mov
xchg
in
ljmp
jmp
inc
adc
sub
jo
fiadds
mov
adcb
xchg
pop
push
jb
imul
cmp
and
pop
or
xchg
in
push
mov
jnp
mov
dec
testb
jne
repz
rcrb
into
push
pop
xchg
xor
sbb
dec
pop
cli
sub
cmp
fdivs
xlat
xor
inc
roll
add
ret
or
push
adcb
cld
dec
pop
lret
push
jp
xor
push
jg
ja
and
rcrb
pop
cmp
lret
inc
rcrl
mov
pusha
mov
cmp
cmpsl
push
aas
rcl
clc
mov
mov
out
sub
jl
jmp
int3
jb
nop
aam
xor
inc
pop
sbb
sub
cmpsl
and
in
cmp
add
jo
in
into
les
xor
orps
mov
ret
adc
xchg
shrl
jecxz
dec
dec
jns
loop
mov
in
das
pop
mov
idivb
cmp
inc
fnstenv
outsb
pushf
pop
orl
mov
mov
cmpsl
dec
pop
fisttpl
pop
pop
shrb
pop
scas
mov
mov
idivb
inc
add
fcmovnu
fs
cltd
inc
or
xchg
push
lods
pop
pop
fnstcw
cmpsl
test
mov
test
mov
inc
ds
pop
fistl
xlat
or
dec
jg
mov
mov
rolb
fwait
jmp
leave
dec
or
gs
sub
loope
add
mov
lahf
popa
lret
int
push
mov
cmp
push
and
xor
mov
add
ret
sarb
sub
pop
inc
xchg
scas
xchg
cmp
adc
inc
push
cli
pushf
lret
js
iret
xchg
mov
bound
dec
or
add
and
push
dec
movsb
inc
js
jg
push
mov
cmpsl
lret
xchg
pop
cmpb
mov
lods
out
mov
mov
call
dec
sbb
ds
pop
xchg
test
pause
lret
out
arpl
movsl
fwait
mov
ds
cmc
int3
jmp
and
cltd
mov
ret
and
or
xchg
dec
adc
test
pop
add
pop
and
cmp
cmp
mov
fdivrl
call
nop
fistpl
movsl
jae
out
and
shrb
jb
mov
pop
push
movsl
leave
cltd
sahf
or
lret
mov
lock
jl
aad
sub
jl
sub
sub
push
jp
int3
and
and
add
sub
pushf
dec
jo
int
mov
and
xchg
sub
push
fidivrl
lret
ljmp
lret
mov
out
popa
dec
jns
cmp
pop
pop
jg
imul
mov
nop
mov
shl
icebp
mov
lahf
daa
in
mov
mov
jbe
add
imul
mov
add
jmp
mov
int
inc
push
rol
repz
pusha
loop
dec
stos
inc
sahf
daa
out
cmp
aas
mov
inc
pushf
mov
or
and
sub
fistps
and
mov
jno
jne
lea
call
cld
sar
pop
popf
fcomp
adc
cmp
iret
daa
outsl
and
ficompl
dec
xchg
xchg
push
out
adc
out
hlt
mov
movsl
outsl
jnp
pop
dec
xchg
pop
aas
sbb
cmp
addl
pop
add
pop
jmp
push
aad
aam
xchg
jo
lods
xchg
mov
stc
shll
xor
mov
fdivs
pop
aam
and
lahf
lret
or
lods
xor
out
push
add
cltd
lret
sbb
pop
hlt
rclb
xor
mov
mov
ds
jnp
and
mov
adc
mov
add
push
pushf
iret
ss
add
mov
in
mov
mov
in
or
push
negb
es
jmp
loopne
xorb
mov
mov
sub
shll
add
lds
repz
adc
cmp
std
test
mov
sub
in
js
outsl
jmp
mov
dec
aaa
sub
popa
popa
cwtl
pushf
lret
inc
xor
lahf
cmp
inc
je,pt
inc
jp
repnz
sarl
loope
stos
xor
bound
imul
inc
je
mov
jb
ss
fisttps
inc
fimuls
jb
cli
movsl
xor
xchg
ficompl
insl
xor
push
jp
jle
adc
cmpb
movb
shl
adc
mov
repz
std
xor
mov
push
leave
and
imul
inc
mov
pop
push
cmp
insl
adc
aas
ljmp
cmpsl
pop
push
xchg
outsb
mov
fcomps
cmp
lea
pop
ds
mov
imul
add
dec
mov
icebp
dec
jmp
mov
hlt
jb
call
sbb
loope
sbb
loopne
pop
add
push
cmp
add
push
sub
xchg
nop
add
lods
sub
and
push
inc
mov
nop
xchg
loopne
pop
int3
das
lret
imul
mov
push
and
add
lea
mov
cmpl
mov
ret
push
addl
jbe
sbb
push
sub
dec
in
xor
sub
xlat
icebp
addr16
ja
push
sbb
add
test
mov
dec
sub
jp
out
lcall
pop
jp
in
jnp
inc
fdivrs
cmp
subl
push
stc
adc
pop
fistpl
fldcw
inc
mov
jbe
jns
jae
xchg
cli
jnp
loopne
adc
mov
or
test
clc
or
or
cmp
jmp
xor
mov
jge
jno
roll
xlat
jle
std
pop
push
insb
gs
pop
loope
lods
cld
xor
adc
or
mov
test
pusha
scas
push
out
sub
and
call
es
shrl
pop
xor
addl
cmpsl
adc
sbb
jnp
xor
std
xchg
xchg
xor
inc
mov
xor
fists
out
xchg
jno
dec
lods
bound
cltd
dec
add
ds
pusha
sub
jnp
aas
jae
mov
push
xchg
out
cltd
mov
fsts
lcall
int3
jns
lods
je
inc
dec
mov
push
jl
pop
xchg
outsb
fldcw
lcall
out
adc
stos
gs
imul
mov
sub
adc
adc
in
test
movq
cmp
pop
mov
lods
xchg
in
mov
inc
ret
mov
push
repnz
jmp
push
cmp
movsl
js
add
jge
out
out
mov
testl
popa
out
ljmp
lret
jo
rorl
roll
mov
jno
dec
or
or
xchg
filds
mov
and
adc
fs
cmpsl
mov
jo
xor
out
mov
outsl
mov
mov
ja
cmp
or
sub
cmp
es
leave
lods
or
mov
xchg
jne
xchg
pop
xchg
lret
hlt
sub
lret
xchg
jb
xchg
jmp
lds
xchg
add
pop
dec
inc
and
jle
and
popf
nop
jnp
add
out
jmp
ret
cltd
xchg
test
and
push
and
mov
dec
into
stos
jo
push
int3
and
sbb
out
in
lock
mov
faddl
scas
out
pushf
insb
jb
mov
lahf
push
addr16
push
aaa
movsb
icebp
adc
dec
iret
sub
ja
inc
or
mov
push
call
addb
lahf
fwait
sbb
sub
xchg
sbb
lods
jo
shlb
dec
jo
imul
mov
fstpl
pop
sub
test
mov
jge
or
insb
or
cli
or
mov
repnz
sarl
insl
es
popa
hlt
adc
repz
shl
dec
jnp
dec
fstps
mov
lock
fsubrs
and
jnp
xor
adc
js
pop
sub
cmp
mov
inc
fcoml
scas
notb
xor
daa
jns
xchg
test
push
xor
lods
or
push
jecxz
in
xor
push
out
mov
pop
fisubs
cs
cmp
adc
and
fdivs
lahf
mulb
les
in
jp
jle
add
in
scas
xchg
pop
push
adc
sbb
les
stc
scas
enter
popa
push
push
push
int3
fwait
add
aaa
loopne
adc
jbe
sbb
pop
push
mov
popa
mov
add
push
and
dec
out
aas
xchg
ret
sbb
lret
or
add
fs
xchg
adc
and
js
mov
xchg
xchg
dec
rcr
cli
aaa
insl
cld
push
pop
repz
stc
adc
aaa
push
and
fnsave
aaa
ret
insb
jo
testl
aaa
testl
leave
out
xor
mov
sahf
pop
test
mov
iret
sub
hlt
loop
lret
add
jno
mov
jle
js
jae
out
test
fs
dec
add
mov
in
hlt
and
xor
shrl
sbb
out
xor
rcrb
sbb
mov
cli
jecxz
mov
mov
pop
adc
in
fwait
and
mov
fdivrl
pop
out
cmpsl
push
push
ljmp
adc
test
add
or
pop
insb
mov
cltd
pop
popf
lahf
jo
ficoms
and
mov
inc
inc
inc
adc
test
rclb
adc
mov
ja
lds
and
loopne
mov
cltd
fstl
lds
ret
mov
mov
lods
stos
inc
xor
jg
lds
ss
stos
cmp
jmp
adc
push
cmp
jae
gs
insb
arpl
repnz
popa
and
mov
inc
lahf
adc
cmp
clc
cmp
fwait
nop
xorb
pop
out
inc
mov
cwtl
loopne
cwtl
xchg
jmp
mov
mov
dec
cld
pusha
xchg
add
std
push
jg
into
jg
push
xor
adc
mov
les
scas
clc
loopne
push
lret
gs
lret
cmp
jo
dec
sbb
inc
and
mov
aam
adc
fwait
push
mov
in
shlb
cmpsb
push
and
clc
call
mov
in
mov
lahf
decb
rclb
sbb
xchg
inc
and
lods
clc
jge
push
inc
icebp
adc
xor
dec
push
jle
pop
xchg
mov
xor
dec
int
lods
sar
ds
or
fs
cmp
add
popa
insb
cwtl
fprem1
or
cmpsl
test
mov
dec
cmp
ss
mov
add
rorb
sbb
js
outsl
nop
mov
incl
test
les
inc
cwtl
cmpsb
xchg
mov
in
xchg
sbb
adcl
repz
scas
daa
call
scas
fsubrs
jno
or
insb
adc
es
push
in
data16
ret
jne
in
mov
inc
notb
inc
dec
std
aaa
ds
cmp
test
and
pop
adc
mul
addl
or
sbb
sarl
dec
jg
inc
into
jmp
data16
cwtl
das
adc
scas
mov
or
cli
int3
add
js
hlt
cmp
adc
nop
insb
xchg
push
dec
jne
fs
popf
jno
fbstp
adc
ss
jmp
push
dec
in
mov
mov
xor
mov
pop
rcrl
nop
popf
ja
mov
cltd
test
mov
xchg
mov
out
push
lcall
mov
test
fcmovnu
xchg
aam
test
aas
adc
mov
inc
sbb
pop
xor
cltd
mov
movsb
lds
adc
inc
push
es
pop
xchg
int3
inc
or
stc
in
mov
int3
inc
je
dec
xor
pop
lret
or
fcmovne
arpl
ja
hlt
fucom
sbb
shrl
jns
adc
in
movsb
inc
and
ret
ja
push
icebp
insb
lods
dec
push
pop
in
dec
rcrb
push
fwait
mov
adc
jno
mov
jecxz
in
shrl
adc
aaa
xor
outsl
outsl
cmp
aad
outsb
sbb
mov
mov
dec
out
xchg
cmp
mov
pop
adc
add
xchg
mov
in
ret
pop
sbb
and
sub
dec
call
mov
cmp
aas
cmpsl
std
push
jge
lods
mov
add
sbb
add
fistpl
repz
test
into
mov
push
popf
xchg
cs
jmp
scas
imul
cmp
imul
aas
fstps
test
test
mov
ljmp
movsb
loope
popf
pop
ret
jecxz
mov
xor
lahf
rolb
sbb
add
rclb
sub
loope
xchg
ljmp
jmp
ror
movsl
pop
out
clc
inc
push
push
push
push
gs
xlat
cmp
cmp
xchg
and
insl
sub
loope
daa
ret
dec
fists
xchg
pop
dec
cmp
fst
and
das
pop
jne
jae
add
test
insl
lret
enter
and
pop
jmp
outsl
push
xor
dec
fildl
out
and
inc
out
push
dec
imul
pop
stc
scas
jbe
jmp
jge
jno
mov
push
cltd
xchg
ret
cltd
add
lret
and
push
faddp
push
dec
xchg
inc
cmp
xchg
jge
leave
leave
repz
sbbb
adc
mov
insl
inc
inc
imul
jns
dec
pop
sbb
mov
inc
inc
imul
jmp
popa
jmp
push
mov
mov
inc
mov
cs
dec
js
movl
divb
out
loop
jo
arpl
bound
adc
inc
jmp
jle
sbb
stc
sbb
fs
lret
es
pusha
cmc
mov
push
sbb
mov
or
cltd
movsl
int
daa
orl
mov
dec
bnd
pop
add
rclb
jp
rcrb
enter
push
js
cmc
aaa
push
mov
rol
pop
jge
andb
mov
lret
cmp
scas
adc
fwait
pinsrw
test
cmp
stc
pop
mov
ja
adc
mov
clc
cmp
sub
jl
jae
mov
adc
popf
or
pop
xor
mov
clc
mov
pop
cmpl
adc
cltd
repnz
push
adc
and
fisubrl
mov
cmp
pop
popf
cwtl
sbb
push
cmc
mov
xor
es
pusha
rclb
cmp
je
ds
outsb
or
out
ret
inc
and
divl
test
cwtl
ss
jnp
imul
or
dec
xor
and
pop
mov
pop
sub
sub
icebp
addr16
mov
movb
or
xchg
or
imull
cs
daa
inc
push
jmp
lret
outsl
xor
out
mov
inc
lcall
or
mov
cmp
push
lea
push
insl
insl
aaa
mov
addr16
push
mov
dec
ds
mov
or
inc
test
aaa
pop
xor
add
push
inc
call
mov
mov
xor
adc
adc
call
cld
out
mov
push
ljmp
sbb
mov
sti
push
cmc
cs
xchg
or
ret
gs
inc
scas
xor
int
dec
sbb
cmpsl
xchg
cwtl
clc
cwtl
out
rcrl
dec
out
ljmp
jecxz
mov
ljmp
xor
stos
pop
push
popf
and
imul
xor
push
xchg
ret
mov
fmull
mov
movsl
adc
std
cmp
mov
mov
jne
and
dec
pop
sti
adc
loope
cmc
sbb
xlat
rcrb
jecxz
jns
jmp
scas
jg
ret
lret
xchg
sub
cli
dec
mov
setae
ret
xchg
out
dec
and
inc
les
and
mov
jl
inc
shlb
and
ljmp
fistpll
hlt
push
xchg
clc
adc
shll
fdivl
jns
jecxz
in
stc
pop
pop
mov
insb
or
divl
mov
in
jnp
imul
das
jno
frstor
cwtl
insl
sub
mov
rol
aas
ds
shll
neg
sbb
xchg
xor
sbb
xor
and
dec
fmull
jg
nop
xchg
jge
out
push
mov
mov
lcall
adc
hlt
daa
test
scas
push
inc
pop
aas
pop
dec
lahf
divl
pop
mov
mov
pop
cltd
mov
leave
insb
xchg
jno
xorl
es
push
fistl
fs
xlat
daa
pop
mov
cmpsl
add
mov
xchg
sbb
mov
adc
mov
dec
and
push
xchg
nop
mov
push
jnp
roll
jb
adc
xor
movsl
js
sbb
xor
push
pop
subl
ret
aaa
or
aaa
orb
cmp
int
add
cmpsl
lret
sti
fmull
mov
add
push
cld
fstpt
inc
out
out
mov
add
test
push
mov
aam
imul
cs
dec
js
f2xm1
testb
xor
and
repnz
cmp
mov
lds
arpl
inc
push
cmp
pop
push
movsl
jb
push
cli
cmp
rcl
loope,pn
vpcmpeqw
out
xchg
addr16
jb
mov
orl
push
imul
mov
push
lods
adc
jns
sub
sti
pop
xor
pushl
pushf
enter
adc
repz
shrl
loope
pop
popf
mov
in
iret
std
fstpt
lret
movsl
sub
mov
scas
insl
adc
data16
mov
clc
rorb
xlat
imul
xor
es
mov
cltd
mov
mov
fiaddl
insl
push
aas
fnstcw
cltd
xchg
in
add
ljmp
addr16
inc
ret
sub
scas
je
mov
cmpl
jge
mov
lock
sar
or
inc
movsb
icebp
rcll
lcall
xchg
mov
std
jp
mov
test
into
js
nop
mov
jo
adc
jae
mov
outsb
lcall
pusha
aas
testb
lds
push
imul
jge
aam
ja
and
mov
loope
cs
mov
mov
fwait
xor
sbb
jg
cmpsb
nop
shrb
mov
mov
movsb
xchg
popa
incb
addr16
mov
sbb
das
out
ss
decl
inc
sbbl
xor
shl
fists
jns
adc
test
mov
sbb
outsl
jns
xchg
push
std
jp
hlt
push
aaa
jge
pop
adc
pop
and
adc
cmpsb
lds
clc
lods
into
pop
je
sbb
mov
nop
scas
faddl
lret
movsl
fwait
pushf
shll
repnz
pop
xchg
pusha
jno
add
jnp
addb
hlt
mov
jmp
dec
jge
push
ret
aaa
push
pop
movsb
lods
and
cmp
cmp
in
cmp
mov
mov
xor
and
lahf
and
lods
and
movsb
xchg
mov
fsubr
loope
pop
or
subb
xlat
sbb
shrl
xchg
rcl
ds
aas
cmc
dec
outsl
enter
arpl
fisubrs
out
sahf
dec
fwait
push
lds
push
arpl
je
pop
pop
sti
mov
and
inc
imul
jns
das
insl
add
adc
aad
dec
or
addl
test
mov
cmpsl
ret
scas
mov
fcoms
push
popf
dec
out
enter
ja
xor
push
mov
inc
shll
iret
jmp
inc
out
int
sub
jmp
nop
dec
repz
aaa
rorb
daa
faddl
fistl
adc
xor
lahf
fwait
pop
xchg
xor
jmp
mov
add
and
cwtl
cwtl
test
inc
clc
push
imul
iret
inc
shrl
mov
cmpsl
inc
pop
pop
cmp
cmp
jae
inc
scas
daa
xor
jae
imul
js
loop
insb
jns
ret
inc
cwtl
sbb
ret
cs
repz
cltd
sub
adc
sbb
subl
fnsave
xchg
xchg
cltd
out
xor
and
popf
cmp
push
lcall
cmp
hlt
inc
mov
ret
lea
push
mov
cwtl
stc
cwtl
adc
pop
sarl
jnp
leave
dec
in
fcmovu
mov
scas
push
cmp
sbb
mov
daa
sub
fildl
push
sbb
cmc
inc
cmp
xlat
movsl
jo
rorl
xchg
out
fsts
push
int3
daa
test
adc
frstor
ljmp
lods
popf
sub
int
add
ss
ljmp
jbe
test
xchg
hlt
jle
movl
cmp
insb
mov
xlat
stc
push
cmp
addr16
mov
loopne
xor
in
sbb
and
xor
repnz
mov
xchg
sub
nop
mov
push
enter
fnstcw
add
imul
adc
or
push
jnp
in
fisttpl
adc
cmp
sub
insl
popa
xchg
clc
sarb
sti
icebp
xchg
sub
cltd
fldenv
stos
bound
cld
add
idiv
cld
scas
movsl
dec
mov
das
add
inc
cmp
mov
bound
sbb
mov
xor
mov
pop
mov
insb
jno
inc
dec
push
lahf
mov
adc
loopne
dec
adc
std
fs
xlat
sbb
jge
jno
rcrb
dec
adc
xchg
cmc
aam
mov
sbb
movb
jne
jmp
movsb
or
shrb
out
push
cmp
in
add
or
jl
inc
data16
xor
fisttps
outsl
and
push
fwait
cli
outsl
mov
js
adc
pop
cmp
out
out
mov
xor
lret
mov
scas
out
and
sbb
mov
mov
lds
jae
pop
xchg
les
sub
inc
std
bound
push
mov
leave
movsl
push
jbe
and
jg
push
cmp
add
adc
lret
xchg
jl
push
jnp
xor
xchg
addl
mov
test
push
addr16
test
xor
cmp
mov
stos
cld
bswap
ja
cmp
outsl
lods
adc
ss
insl
into
test
jae
push
xchg
dec
adc
dec
sbb
movsl
adcl
jo
mov
in
jo
or
out
hlt
flds
in
loope
mov
push
jp
mov
gs
sbb
mov
and
scas
add
mov
in
pop
stc
add
jns
lcall
out
cmp
cmp
lods
fimull
bound
fcmovne
fistps
ror
rorl
mov
mov
cwtl
cs
aaa
adc
pop
popa
ficomps
xor
jg
pop
cmp
add
pop
iret
sahf
mov
jmp
int3
ds
xor
pusha
jmp
jle
push
cld
call
inc
xor
int3
push
das
popf
push
insl
aam
push
pop
dec
push
xor
xor
inc
mov
shlb
ss
dec
jg
cmc
xchg
lea
push
fcom
jg
into
xor
das
bound
fucom
inc
fadds
cwtl
push
in
fbld
call
movsb
jne
push
loope
js
loope
dec
cmp
mov
ret
popf
stos
fsubr
rcrb
ds
or
add
sahf
mov
scas
sbb
jno
icebp
push
in
enter
sub
sahf
repz
bound
stos
jbe
mov
mov
ret
add
cli
sarb
outsl
xchg
push
int
jp
ja
fisttps
pop
adc
push
mov
jg
scas
mov
out
xor
aas
push
mov
adcl
pop
push
xchg
xor
inc
es
adcb
sbb
dec
sbb
rep
pop
xchg
int
mov
sti
push
ja
sbb
ret
push
dec
mov
nop
pushf
sub
outsb
cs
xchg
pusha
inc
popf
mov
xchg
out
sbb
or
mov
bound
inc
push
mov
popa
lock
dec
das
loopne
aad
dec
in
pop
dec
movb
jb
das
add
lret
or
xor
xor
cli
pop
sarb
jb
jle
pop
inc
cmc
xchg
xchg
in
and
cmp
ret
push
rclb
jne
testl
movl
push
xlat
jb
scas
sub
sarb
jp
push
fstps
pop
out
mov
aad
and
mov
into
pop
popf
cmpsb
int3
push
dec
addr16
nop
out
cmp
fisttps
fisubrs
test
int3
inc
popf
and
add
cmp
std
test
cltd
lcall
mov
jge
fsin
and
cs
mov
pop
in
rcrl
xor
and
in
jg
or
es
sub
push
inc
push
je
ljmp
mov
andb
icebp
call
adc
cmp
jb
push
ja
out
repnz
xchg
fs
into
lock
mov
movl
jbe
add
imul
xlat
mov
xchg
jmp
and
addb
sub
les
dec
xchg
mov
or
adc
repnz
and
pop
push
sbb
mov
mov
nop
xchg
push
jbe
xchg
cmp
pop
add
pop
sbb
xchg
in
sbb
jecxz
ret
and
mov
ret
loope
dec
adc
jns
and
sbb
je
popa
inc
jl
mov
les
add
pop
xchg
filds
add
mov
lods
add
dec
imul
pop
push
mov
or
add
roll
negl
adc
fnsave
sbb
and
cmp
add
push
cpuid
ret
push
jmp
ret
xor
ja
loop
adc
and
push
icebp
mov
xor
mov
and
aaa
inc
cltd
cmpsl
xor
fimuls
movsl
insl
jmp
sbb
repz
sub
sub
adc
fidivl
pop
aam
sti
and
fisttps
je
xor
add
sti
dec
fnsetpm(287
jp
enter
inc
stos
fnsave
fucom
addl
call
lea
repz
mov
js
adc
lcall
inc
xor
xchg
pushf
pop
daa
lret
gs
ja
bound
sti
in
add
pop
in
cs
aaa
test
adc
jo
outsl
and
sbb
cli
cmpsb
imul
out
cs
dec
out
movsb
mov
mov
xchg
mov
adc
pop
inc
add
sub
inc
mov
jns
rol
lds
ja
sarl
arpl
add
adc
sbb
pop
das
movsb
out
mov
loopne
hlt
orl
mov
ja
push
jb
repnz
sbb
mov
and
enter
inc
pusha
ret
sbb
inc
fdivs
outsl
inc
ja
mov
mov
adc
push
test
ja
shlb
fsubl
loope
inc
repnz
dec
jmp
pop
aam
iret
rolb
push
sbb
movsl
pop
jae
or
mov
dec
daa
inc
jle
fucomp
test
iret
or
popf
pop
nop
sub
xor
insl
lods
mov
mov
pop
cmp
rcrb
testl
frstor
fmul
sbbl
out
movsb
and
jp
xchg
ret
jg
hlt
in
insb
pop
es
adc
lds
xor
stc
into
stc
xor
inc
int3
mov
push
lret
add
ja
ljmp
test
jno
mov
mov
sti
mov
add
pop
loop
iret
mov
icebp
add
dec
out
cmpsb
pop
sub
mov
out
add
sub
aaa
ret
xor
and
push
int3
jno
cmp
ret
imul
fsubrs
dec
adc
insb
jecxz
lret
cmp
cltd
ljmp
add
xchg
lock
cmp
sti
jo
mov
cli
data16
in
mov
xchg
adc
out
push
sti
add
insl
mov
cmp
xchg
data16
test
fldl
jb
fcmovnbe
and
add
adc
addr16
jne
jo
inc
add
pop
vpmaxub
add
movsl
pop
and
xor
cli
dec
insb
loope
into
or
sti
loope
in
mov
outsb
in
pop
enter
mov
fisubl
push
jg
sarb
mov
mov
jb
sbb
cmp
sub
addl
jp
xor
rcl
enter
jno
popl
lock
orl
sub
mov
call
jns
sbb
inc
cmp
jp
fidivrs
sub
or
rcrl
cmpsl
fidivl
es
xchg
jae
std
sar
push
xor
fcoms
xchg
int
jge
jne
ja
jbe
add
out
sub
inc
xor
xor
repz
mov
jno
repnz
inc
jle
fimull
aam
inc
cmp
lock
fsubrl
dec
mov
les
fnstenv
and
loope
rcrb
in
jo
das
add
dec
or
loope
shl
push
lret
inc
int3
cmp
insb
test
xor
and
test
lds
mov
ljmp
cmpsb
mov
inc
jg
push
mov
decl
shlb
out
add
rorl
dec
out
fldenv
bound
push
push
xor
data16
add
popa
rorl
mov
xchg
std
adc
sub
mov
push
notb
pop
movsb
mov
fnsetpm(287
xor
push
inc
sbb
les
das
test
sbb
sub
test
add
rcrl
xchg
mov
jg
arpl
add
adc
sub
push
movsb
aaa
pop
and
lods
testb
jae
inc
jp
push
jns
loop
scas
or
lcall
inc
ror
in
rcrb
adc
adc
mov
cmp
lods
mov
mov
ljmp
xor
sub
leave
inc
and
add
push
pop
into
adc
gs
lea
mov
add
pop
cli
leave
pop
mov
push
shll
ss
pop
pop
inc
and
lahf
inc
jne
loop
cmc
push
xchg
mov
fcmovnb
jns
dec
pushf
cld
xchg
sarl
and
xor
add
mov
in
push
lret
subl
jb
mov
sub
xor
mov
add
cld
sub
adcl
pop
hlt
cmpsl
mov
ds
notl
mov
outsl
lock
mov
mov
repz
inc
cmp
jb
pop
adc
sbb
and
rcrl
xor
dec
addb
pop
mov
call
popf
xlat
adc
mov
imul
inc
out
dec
adc
inc
jge
stos
int3
shll
mov
testl
aas
cli
mov
movsb
and
mov
repz
adc
cli
sub
shl
insb
add
jle
adc
jmp
push
cs
xor
cli
ret
fnsave
mov
arpl
push
adc
mov
dec
or
lahf
sahf
inc
lea
cmp
je
popa
jb
aaa
mov
pusha
jnp
mov
add
ljmp
xchg
inc
mov
js
mov
test
push
adc
lret
in
aas
aad
repnz
jl
cmpsb
fstl
mov
lds
sub
icebp
pop
lds
jecxz
mov
cmpsb
cmp
sbbb
mov
jnp
push
imul
jbe
fwait
or
cmp
sub
mov
jne
xchg
in
mov
rcll
xchg
divb
repz
jle
stos
xchg
xor
jne
fdivrs
mov
repnz
fildl
daa
lcall
js
insl
cmp
popf
sbb
xorl
idivl
int3
div
jecxz
inc
and
xchg
sbb
jo
push
mov
dec
pop
loopne
aas
inc
mov
mov
cmp
adc
sub
sbb
pushf
push
fmull
fisttpll
xor
jbe
push
dec
jg
push
dec
xchg
or
sbb
mov
shl
dec
inc
stos
cmp
repnz
sbb
mov
adc
cmpl
out
cmpsb
xor
scas
scas
notb
mov
mov
loop
inc
mov
ret
in
cmp
cmc
jb
sbb
cmpsl
or
xchg
sbb
adc
out
clc
xor
imul
mov
sbb
adc
pop
out
test
inc
fimull
and
stc
in
xchg
movsl
jbe
pop
push
inc
aaa
inc
aam
out
xor
enter
iret
push
adc
push
add
int3
enter
aaa
clc
hlt
and
andl
inc
out
push
jge
sub
into
in
mov
jns
adc
add
dec
dec
imul
ja
mov
jle
inc
stc
add
add
inc
or
insl
std
cmp
push
into
xorl
call
stc
cmpl
sbb
incb
dec
pop
pop
sub
fsubl
in
push
inc
std
movsb
adc
test
add
and
mov
push
dec
mov
sub
sarb
dec
dec
ja
adc
popl
sbb
js
adc
xchg
sbb
cld
jbe
rcrb
loop
cmp
dec
mov
in
sahf
in
sub
mov
std
sbb
lret
lea
fistpl
sub
mov
pop
loop
mov
mov
jns
andl
jo
dec
xchg
outsb
ret
iret
insb
std
adc
shl
fcoml
dec
xor
int
imul
xchg
pop
aad
in
cltd
mov
adc
inc
clc
mov
mov
xchg
lret
lret
sub
mov
out
repz
mov
mov
scas
pop
clc
lea
jl
cmp
sub
in
add
das
mov
or
push
pop
mov
movsl
test
and
shll
pop
sarl
push
fimuls
mov
push
popa
mov
or
cmp
idiv
in
mov
leave
push
add
aad
test
xchg
or
xor
and
inc
xchg
jae
jmp
sub
sbb
iret
xchg
sbb
cmp
out
cli
mov
push
xor
insb
je
xor
iret
movsb
mulb
loopne
cmp
out
inc
add
push
aad
or
inc
das
in
sbb
mov
pop
push
mov
dec
sbb
scas
mov
loope
pop
jno
rclb
mulb
xor
sub
data16
push
sbb
pop
ja
clc
xor
jbe
pop
inc
cs
shl
rorb
adc
gs
lds
xchg
and
add
aaa
mov
scas
sarl
push
xchg
loope
add
aas
lahf
into
xlat
xchg
add
dec
pop
mov
cmp
scas
xor
mov
pop
aas
data16
in
sets
bound
xchg
fstp
mov
loop
dec
push
push
jae
mov
pop
repz
and
test
into
popf
jns
jnp
loope
dec
das
daa
stos
mov
add
and
mov
mov
or
add
push
addr16
adc
test
popa
pop
jae
aas
notl
sub
in
jl
adc
add
pusha
fnstenv
xor
mov
les
idivb
inc
jno
icebp
push
lcall
mov
out
js
daa
lods
test
sbb
insl
pop
push
cmp
ljmp
aad
push
push
jp
push
jmp
inc
push
and
fidivrl
push
mov
aad
fwait
clc
add
ds
jo
enter
mov
pushf
or
push
and
inc
sbb
aad
shrl
pop
mov
inc
rol
cmc
nop
sbb
outsb
and
scas
xchg
int
test
add
mov
outsb
xorl
dec
jnp
test
adc
jp
push
push
dec
xchg
movl
aaa
mov
sbb
mov
fdivrs
jp
jp
je
lret
lea
arpl
rorl
or
jge
rorl
pop
xlat
outsb
xchg
and
iret
mov
pop
or
pop
test
ja
test
xchg
orl
xchg
cmp
insl
adc
lods
aaa
jnp
xlat
fnstcw
jge
movsl
jns
xchg
outsb
sarl
gs
int
add
jp
push
fst
inc
and
test
mov
jbe
in
cmp
inc
adc
js
idivb
jp
hlt
leave
pop
popf
mov
lcall
xor
aaa
and
jle
insl
pop
movsb
dec
divb
jae
sbb
stc
push
leavew
jne
lods
and
fisttpll
cmp
cmp
psraw
cmc
pop
mov
push
xchg
xor
inc
jnp
cmp
mov
stc
mov
loop
int3
addr16
mov
es
sbb
popf
xchg
sbb
int
inc
andb
pop
mov
xor
mov
mov
mov
lret
mov
lods
hlt
std
in
shlb
sub
ja
andl
xor
mull
es
add
rcrb
movsl
jae
cmp
jns
sub
or
jge
mov
sub
sbb
xchg
into
add
pop
or
mov
mov
lea
or
sub
adc
lret
push
in
push
mov
cmc
adc
popa
push
nop
shr
in
sbb
ja
sub
js
aam
iret
sub
jle
pop
sbb
jge
mov
cmp
add
call
jle
sarl
mov
mov
cltd
into
test
push
adc
out
sub
xchg
xchg
mov
sarb
cmpsl
rcl
pop
pop
mov
lret
jnp
int
mov
loopne
cmp
leave
rol
pop
inc
sarl
or
lret
and
stc
popf
push
mov
or
xchg
adc
es
loopne
xchg
push
aad
xchg
adc
ss
xchg
cli
mov
jne,pn
movsb
and
mov
inc
mov
jns
xcrypt-cfb
cmpsl
out
mov
xchg
mov
shll
add
mov
imul
sbb
mov
adc
sar
enter
and
xchg
or
jge
hlt
xor
pushf
adc
dec
movb
les
lods
sti
enter
sbb
pop
stos
adc
mov
repnz
aas
pusha
mov
mov
dec
into
mov
jp
jno
jmp
cmp
aaa
adc
pop
mov
cmp
negl
mov
add
fs
mov
pop
xchg
aam
fldl
xchg
add
ja
and
les
icebp
in
mov
or
fs
movsl
and
jecxz
push
loope
sub
cwtl
sbbb
repnz
jns
mov
pushf
rclb
nop
push
outsl
daa
mov
and
fs
pop
loope
xchg
scas
movsb
dec
fbstp
mov
pop
scas
mov
shll
js
insl
jl
mov
int
arpl
push
ret
inc
cmp
icebp
xchg
xlat
add
mov
pusha
or
movsl
mov
test
movl
call
jge
out
mov
repnz
scas
ljmp
inc
push
nop
jns
test
sub
add
jge
jmp
rolb
lds
jbe
mov
xchg
add
pop
jns
mov
lock
push
popa
clts
xchg
add
leave
rorb
and
adc
je
jg
lds
nop
inc
or
imulb
mov
aam
sbb
fisttpll
mov
in
sbb
sbb
jp
inc
add
or
mov
loopne
in
push
inc
lahf
pop
mov
mov
dec
cmpsb
andb
cmp
push
and
xchg
adc
mov
sub
stc
add
mov
shll
mov
nop
jle
jp
gs
push
xor
enter
shr
cmpsb
mov
adc
sbb
mov
inc
sbb
leave
push
jae
not
ljmp
add
jns
inc
mov
movsl
cmp
in
cld
mov
fbld
jle
jge
ret
lret
arpl
push
push
fwait
inc
jns
pop
cs
shr
pop
dec
popa
imul
add
rcrl
mov
in
adc
out
sub
jp
push
mov
xchg
shr
addb
test
sub
movsb
jp
cmp
aad
jns
notb
pushf
mov
pop
xlat
pop
mov
mov
jb
dec
add
xchg
cmp
nopl
arpl
xchg
adc
lods
xor
pop
es
dec
mov
dec
cmp
xchg
pop
fsubs
cmp
inc
aam
jge
testl
test
scas
mov
mov
jl
jg
mov
data16
inc
xchg
movb
dec
pop
jne
push
add
js
or
insl
imul
add
addl
mov
xor
sbb
dec
leave
cmp
adc
lds
mov
js
lahf
int
pop
mov
push
adc
and
fldl
cmpsl
jecxz
fldl
sub
leave
shrb
sub
jnp
inc
add
movsb
std
mov
gs
cmpsb
adc
jecxz
sbb
mov
mov
mov
fisttps
lcall
fdivr
or
lcall
sbb
adc
std
or
cli
movsl
add
maskmovq
testl
scas
lea
loope
std
int3
in
sub
push
jmp
xor
shl
add
mov
fiaddl
pop
cmp
adc
cmc
dec
xor
xchg
sarb
add
ret
imul
pop
ja
fldenv
pop
test
push
jecxz
pop
jo
ja
loopne
test
sahf
mov
add
push
mov
xor
mov
adc
aas
aam
ret
fucomp
lahf
mov
xor
xor
cwtl
xchg
mov
pop
lret
and
jb
rorb
ds
mov
aam
add
jnp
imull
jmp
pop
mov
push
add
cltd
mov
les
pop
dec
mov
pop
es
xchg
sbb
repz
mov
inc
in
and
xchg
aas
jmp
in
jo
ret
movsb
prefetcht2
ret
scas
fnstsw
int
push
or
lcall
mov
test
lods
mov
lds
mov
std
pop
mov
inc
xchg
fdivrs
int
in
sbb
pop
mov
out
adc
xchg
inc
pop
push
jbe
stos
mov
fisubs
inc
xorb
mov
iret
sub
mov
sub
pop
shrl
jle
shl
shlb
stos
insb
hlt
shrb
jg
xor
mov
pop
mov
imul
xor
gs
sbb
pop
loopne
sbb
imul
hlt
jge
lods
push
inc
add
push
idivb
jp
push
pusha
dec
xchg
mov
in
orb
push
and
cwtl
add
stc
adc
dec
loop
fstps
cmpsl
adc
out
fmuls
insb
mov
fwait
pushf
dec
pop
das
dec
cmpl
add
pop
inc
inc
push
mov
pop
fst
pop
pop
mov
inc
adc
cltd
imul
movsl
adc
ret
fwait
jg
addr16
arpl
je
xchg
outsb
push
xor
jecxz
imul
insl
xchg
add
movsl
js
push
jbe
stos
test
out
add
xchg
adc
lock
pop
imul
sub
test
cld
stos
insb
add
sbb
sbbl
subl
aad
call
push
imul
xchg
push
cs
test
enter
adc
mov
mov
not
ja
insl
cwtl
jbe
push
adc
inc
cld
sub
loope
loopne
sbb
pop
xor
cmp
loopne
cmpsl
loop
mov
push
mov
push
add
mov
fsub
pop
and
cmpsb
xor
jae
es
fnstenv
imul
jecxz
and
xchg
test
and
shlb
in
sub
loope
jae
outsb
jmp
jg
fdivl
mov
aam
roll
in
les
pop
or
jmp
mov
jmp
lahf
inc
aad
js
add
dec
jp
xor
dec
jae
and
insb
xchg
push
mov
rcll
cmp
or
cld
adc
ret
insl
loope
cmp
jo
jae
out
enter
xchg
mov
cmp
outsl
cmp
sbb
or
aad
test
dec
add
push
test
sub
scas
lret
sbb
cmpsb
mov
nop
js
int
add
div
push
pop
ret
inc
lods
jmp
sti
cltd
push
mull
adc
in
adcl
cmpl
mov
aad
fwait
sub
or
mov
andl
or
shlb
adc
bound
dec
cld
sahf
mov
idivl
std
sub
cmp
nop
in
daa
adc
push
test
and
int
mov
adc
or
popf
js
mov
incb
add
cli
jbe
pop
inc
jne
mov
adc
lods
jle
inc
pop
pushf
xlat
cwtl
cmp
scas
fsubrl
jae
mov
arpl
sbb
pop
lea
inc
xchg
inc
and
xchg
xor
ds
ret
xchg
mov
lret
sbb
shrl
push
cs
adc
mov
add
jl
jo
dec
xchg
and
pushw
mov
lret
jmp
add
test
je
pop
mov
cmpsb
cmp
shl
shll
cmp
jno
pop
dec
mov
cmp
cli
sbb
clc
lock
push
push
xchg
push
xor
push
sbb
and
dec
jo
ret
mov
mov
sbb
cs
or
cmp
aas
jl
inc
out
mov
lcall
sbb
cmp
pop
aam
movsl
call
divl
fsubrs
push
call
mov
incl
stos
cltd
xchg
outsb
inc
sub
and
xchg
loope
cmp
dec
and
mov
ficompl
cld
and
push
loope
jo
out
lds
mov
push
inc
test
xchg
repz
pushf
or
or
inc
jge
push
jne
sti
sbb
or
dec
inc
arpl
cmpsl
push
daa
mov
jp
ljmp
sub
mov
mov
push
lret
jno
clc
test
or
lret
dec
popf
mov
cli
bound
xor
lock
out
in
iret
lret
call
in
pop
pop
push
sub
les
dec
test
out
outsb
sbb
movsb
fcmovnbe
mov
or
jecxz
nop
fs
scas
inc
jl
add
movsb
sbb
xor
jno
out
dec
shrb
addr16
mov
gs
pop
or
mov
enter
leave
push
fmuls
push
cmp
hlt
int3
dec
adc
notb
xor
push
divb
xlat
sarb
or
fcoms
add
sbb
lret
std
test
pop
ljmp
sbb
add
dec
mov
or
inc
xchg
pushf
test
aaa
std
dec
pop
movsl
movl
dec
and
in
fnsave
shl
daa
or
fildl
mov
push
and
inc
sub
pop
mov
mov
out
and
ljmp
and
mov
shrl
test
xor
loop
adc
stc
lods
or
mov
mov
mov
int3
add
sti
shlb
sub
push
push
xor
in
mov
sub
div
sbb
fwait
lahf
sbb
pop
xchg
cmp
jo
xchg
or
add
fsubs
cmp
push
xchg
ret
or
loop
jmp
cwtl
imul
dec
mov
stos
inc
sbbl
fucomi
jg
aad
sub
pop
mov
mov
data16
mov
cmp
xchg
adc
insl
aas
ss
lods
dec
push
lcall
cld
lcall
ret
or
mov
and
push
fcmovbe
cmc
in
dec
jno,pt
add
mov
sub
push
nop
stc
or
inc
mov
or
cmc
push
sub
mov
cmpsb
mov
inc
arpl
jl
adc
imul
xchg
into
xchg
dec
adc
js
dec
call
call
and
fs
arpl
andb
or
inc
adc
xor
into
push
call
loope
mov
popf
pushf
mov
sub
ds
mov
sub
out
cmp
shll
mov
push
pop
jle
jp
in
out
sub
xchg
jge
icebp
ret
lahf
xchg
into
sub
cmc
cli
inc
shll
mov
xor
addr16
mov
out
or
xchg
clc
daa
push
hlt
push
jg
and
orb
pushf
sti
inc
or
push
loopne
and
sub
and
mov
pminsw
fstl
push
inc
dec
or
mov
cs
push
pop
cli
sti
mov
mov
aas
xchg
jae
cli
sub
xchg
jg
pop
and
roll
pop
call
lret
pop
adc
enter
loopne
out
insl
insl
jl
pop
jmp
xor
and
aaa
mov
pop
mov
int
cli
in
adc
adc
mov
pushf
inc
in
cmpsl
rcl
imul
js
mov
rorb
imul
bswap
subl
idivb
sbb
les
outsl
xchg
test
inc
add
rcrb
cld
mov
pop
test
inc
mov
mov
jge
cmp
out
mov
fwait
in
pop
pop
mov
fs
pop
cli
add
pop
xchg
aas
sub
sbb
js
imul
int
sbb
lret
or
mov
pushf
rcll
and
adc
mov
lods
mov
pop
adc
or
xor
scas
pop
or
int
mov
mov
mov
in
inc
js
jne
adc
mov
xor
mov
push
or
mov
std
push
dec
je
adc
jnp
fcoml
fisubs
xor
jne
insl
pop
xor
lock
imul
pop
add
sub
stos
sub
in
mov
lcall
jge
push
fs
jb
dec
sti
add
pop
mov
in
bound
fldcw
dec
dec
push
test
test
adc
pop
cmp
jbe
adc
mov
xchg
lods
out
sub
mov
ljmp
dec
stos
mov
add
jmp
xchg
fnstsw
mov
cmpsl
jge
push
sub
pop
scas
mov
or
sub
mov
ja
insl
insl
jne
fnstsw
lcall
jb
imul
je
mov
bound
inc
xor
lea
adc
mov
fwait
sub
jg
xchg
lahf
mov
lcall
in
sbb
dec
lock
ja
jne
mov
mov
jg
ja
push
data16
mov
pop
add
mov
mov
pop
mov
in
sbb
aaa
fstps
insl
or
sub
loopne
inc
pusha
jp
pop
in
jg
loope
xor
and
in
jmp
push
js
mov
push
lea
inc
mov
dec
xor
aaa
pop
pop
mov
iret
lret
shrl
mov
stos
enter
jb
xchg
ljmp
popf
lds
mov
and
jns
aaa
dec
fcoms
aam
loope
inc
cmp
pop
add
xchg
arpl
and
push
cwtl
enter
cmp
ja
pop
mov
leave
mov
pop
pop
mov
nop
dec
or
nop
cld
mov
inc
fstpl
sbb
mov
cwtl
ror
lahf
sbb
jno
dec
jl
imul
and
sbb
test
pop
xlat
cmp
arpl
push
mov
gs
loopne
push
mov
out
mov
pop
mov
fisubrs
je
out
mov
js
mov
xchg
dec
outsb
pop
scas
push
loop
or
mov
jg
push
sub
pusha
xlat
test
testl
aaa
lcall
mov
call
adc
stos
xchg
leave
xlat
pusha
stos
lds
ljmp
int3
addb
add
loopne
ljmp
jecxz
or
pop
ret
aam
test
pop
push
push
stc
mov
repnz
inc
mov
inc
ljmp
fs
scas
scas
mov
movsl
mov
sbb
cmp
jb
lcall
xor
out
mov
mov
mov
in
aaa
std
fwait
add
or
sub
jmp
xor
cmc
subl
clc
test
int3
add
clc
pop
sbb
inc
fstp
in
cmpsb
jle
push
push
mov
push
push
sarb
lahf
or
fs
cmp
jl
cmp
adc
jno
adc
inc
xchg
mov
stos
sarl
outsb
sbb
cwtl
push
mov
xor
lods
mov
jmp
xchg
xchg
andb
popa
rolb
ss
int3
imul
inc
out
sub
and
iret
pop
mov
cmpsl
inc
jl
cmc
inc
pop
leave
lret
fwait
and
xchg
mov
pop
mov
xchg
inc
dec
inc
push
inc
and
xchg
mov
outsl
pop
sub
mov
xchg
inc
mov
inc
fcmovnb
mov
xorb
popa
das
and
and
and
xlat
subb
rcll
clc
fadd
cmp
jbe
gs
adc
loopne
loopne
mov
ss
icebp
fstps
cmpsl
jb
jp
test
sbb
push
out
pop
movsb
repnz
out
pmulhuw
push
ljmp
mov
inc
xchg
pop
dec
and
jns
andl
outsb
mov
ss
inc
out
ds
xchg
adc
lods
cld
jns
dec
jns
aam
leave
sbb
sub
mov
pop
mov
xchg
mov
inc
lcall
mov
mov
popf
mov
repz
and
jl
sub
inc
push
and
xor
int3
outsl
fidivs
iret
movsb
mov
pop
dec
cmp
sti
and
leave
add
shlb
pop
sarl
js
stos
xchg
add
fisttpll
fcmovu
mov
es
jno
addr16
sbb
cmp
jmp
dec
sbb
and
aad
mov
aad
dec
repnz
outsb
cmp
jbe
stos
mov
and
add
and
pushl
or
and
aam
stc
test
lret
cmpsl
fstpt
sbb
mov
test
jae
movsb
xor
pusha
mov
xchg
jbe
fildll
mov
cmp
pop
es
sar
pushl
dec
movsl
call
inc
mov
sbb
rcr
ja
insl
lret
lea
imul
push
mov
push
xor
xchg
xchg
loope
xchg
pop
hlt
addr16
int3
divb
sbb
stos
and
push
mov
jne
loop
sbbl
sahf
pusha
arpl
pop
fs
aas
cmp
jo
push
pop
shrl
lock
loopne
add
adc
mov
sbb
fnsave
add
js
mov
popa
mov
and
or
arpl
pmulhuw
or
add
mov
shll
mov
jb
shll
test
or
pop
or
stos
imul
sahf
and
or
aam
shr
push
cmp
loopne
fdiv
fnstsw
jns
ret
mul
stc
lods
fdivrl
je
out
pushf
lock
inc
inc
or
fucomi
fsubrs
inc
mov
call
test
ljmp
push
idivl
xchg
jbe
pop
sub
lret
mov
scas
xor
ret
jg
mov
or
adc
fimuls
adc
pop
fmull
xchg
icebp
test
in
lret
stos
pop
ss
xchg
shlb
out
ljmp
add
cmp
dec
xchg
and
repnz
dec
insl
lock
and
sahf
sbb
mov
mov
inc
pop
xchg
mov
lods
xchg
hlt
rcll
mov
push
mov
inc
pusha
shlb
js
icebp
js
cmp
mov
fucomip
fisubrl
enter
or
xchg
out
or
repz
jae
rcrl
inc
cmp
outsl
scas
cmp
mov
mov
jns
in
lds
jo
add
fcmovu
or
adc
lods
fwait
adc
mov
in
pushl
xchg
addr16
push
pop
or
xchg
icebp
out
inc
mov
xchg
and
xor
addr16
das
lods
push
mov
adc
fwait
out
hlt
pop
hlt
ss
push
push
sub
sbb
xchg
gs
jl
jno
add
insb
repz
xor
and
adc
daa
jl
dec
mov
movb
sbb
ret
sahf
sub
bound
cmp
mov
hlt
mov
outsb
repnz
inc
xchg
mov
imul
sar
and
out
mov
add
enter
sub
or
cltd
adc
shlb
pop
mov
pop
add
lea
mov
and
mov
pop
int
xchg
arpl
push
dec
inc
lods
mov
sbb
jl
xor
pop
fxch
add
and
push
outsb
dec
sub
xchg
mov
mov
mov
insl
or
scas
sub
inc
loopne
insl
lret
stc
push
or
mov
rcl
and
sbb
sub
ljmp
push
add
mov
sahf
push
adc
out
in
jp
xchg
addb
or
ja
stos
pushf
inc
shll
fwait
int
sub
xchg
mov
mov
mov
add
xor
loopne
adc
pop
movsl
mov
add
leave
sbb
aad
sbb
mov
cmp
loopne
adc
movsl
pop
fcomp
pushf
xlat
popf
mov
repnz
jg
cld
repnz
sarl
iret
loop
sahf
add
in
mov
notl
sar
adc
xchg
aas
popf
addr16
jno
icebp
xor
xchg
out
imul
insb
pop
jbe
or
inc
test
mov
addb
xor
push
ljmp
insb
lds
jbe
inc
test
sahf
add
addr16
mov
shlb
hlt
inc
into
push
jb
test
and
cmp
push
in
int
stos
cld
push
mov
test
jb
cmpsb
je
sti
jle
sbb
sahf
xchg
or
out
stos
push
std
dec
jecxz
cld
pop
pop
out
sti
jg
shrl
popf
das
dec
xor
jmp
ss
nop
jbe
idivl
jae
jmp
jns
mov
movsl
add
and
cmp
xchg
push
cmp
bound
and
jbe
outsb
cmp
jmp
ret
addr16
repz
cmp
jmp
xor
pop
gs
adc
aas
testb
push
jno
ret
jl
mov
xchg
adc
mov
sbb
std
arpl
sub
xchg
mov
push
call
xor
cmp
xchg
lahf
mov
lods
std
inc
cli
dec
cmpsb
dec
insl
fmuls
shl
mov
cmp
insl
iret
and
les
ret
and
or
fisttpll
popf
cmc
fildll
and
pop
jl
sbbl
jg
xchg
imul
xchg
xchg
aaa
sub
mov
dec
mov
dec
pop
xor
cmpsb
into
push
mov
shr
xchg
jecxz
pop
movsl
inc
mov
loop
or
cmp
movsb
cmpsl
fs
test
jno
dec
fcmovu
je
out
and
push
dec
fnstsw
sub
leave
subb
shrb
leave
xor
xlat
popa
pusha
gs
mov
add
pusha
test
xor
adc
add
cmp
mov
mov
sub
inc
sbb
lock
cmp
scas
ds
cmp
push
stc
les
jmp
loopne
lea
add
mov
out
jae
xchg
and
cmpb
push
push
popa
mov
outsb
push
fstpt
xor
pop
mov
mov
push
fs
test
pop
daa
add
or
icebp
adc
adc
lods
pop
or
push
pop
pop
adc
into
loope
push
cltd
mov
push
jge
jns
jb
fwait
pushf
xor
loopne
mov
mov
adc
mov
pushl
ja
mov
add
insb
cmp
mov
adc
inc
jnp
addr16
mov
add
jo
scas
push
and
scas
dec
sbb
jne
lcall
lret
pop
xor
pop
aam
cmp
mov
dec
fnstcw
dec
aam
pop
xor
arpl
push
mov
push
mov
inc
lret
and
sub
mov
pop
xchg
mov
xchg
rol
or
icebp
addr16
cmp
push
push
mov
jg
or
mov
ljmp
mov
ds
ds
sbb
push
daa
sahf
jge
jae
inc
sub
cmp
rorl
and
push
dec
dec
mov
data16
insb
js
xor
decb
inc
add
push
cmp
jp
adc
bswap
int3
ret
out
xor
sbb
sub
pop
aad
or
or
jge
cmpsb
mov
in
mov
ja
loop
aas
jns
mov
cmp
sbb
shll
lret
add
inc
aaa
xchg
dec
dec
pop
inc
maxps
add
ds
into
push
repnz
mov
jge
fs
sbb
jp
mov
shl
push
cmp
pusha
in
ss
pop
aam
int3
lds
dec
push
mov
inc
lret
xchg
loopne
out
sbb
pop
add
sbb
mov
adc
cmpsl
shll
mov
mov
jo
inc
outsb
mov
and
mov
mov
sti
jbe
pusha
mov
pop
scas
xor
cwtl
xor
cmp
or
out
mov
push
lock
out
cmpsb
gs
fwait
dec
jmp
scas
repz
test
outsl
mov
shll
dec
scas
repnz
loopne
and
and
test
fwait
lret
aaa
enter
fucomip
aas
sbb
cmp
icebp
loopne
or
out
push
cmpsb
push
sbb
out
mov
outsb
xchg
imul
mov
dec
jbe
add
push
adc
or
cwtl
in
out
out
dec
cmc
pusha
adc
jo
mov
adc
add
adc
adcb
lock
arpl
mov
iret
in
lods
fcomip
addr16
xor
or
adcb
jns
inc
add
and
cmp
cmpsl
test
sub
xor
mov
mov
mov
loope
inc
mov
or
int3
mov
jmp
pop
sub
mov
cmp
inc
ljmp
ja
repnz
test
mov
lds
shr
sar
leave
jbe
fisttpll
daa
in
lret
std
push
repz
cmp
xlat
rolb
pusha
xor
fldcw
repz
and
and
lar
mov
mov
clc
pushl
fisubs
sbb
xor
or
jns
adc
jb
cmp
inc
lods
loop
imul
std
cwtl
mov
mov
mov
push
cltd
mov
gs
mov
mov
xor
ds
mov
gs
push
jb
add
notl
das
and
mov
adc
dec
xor
pop
push
mov
iret
dec
lret
movsb
push
adc
imul
push
repz
xor
ret
pushf
std
sahf
cmpsl
mov
xchg
in
inc
in
dec
xor
jg
xchg
mov
xchg
dec
rcrl
aas
dec
xchg
sub
cmp
mov
adc
scas
pop
shlb
jecxz
ret
sub
cmp
push
and
dec
or
pop
or
and
mov
push
pop
mov
fidivs
les
test
test
aas
inc
jmp
rcrb
insl
jp
lods
and
inc
push
push
mov
and
push
pop
std
decb
ret
enter
fdivrl
data16
push
adc
cmp
mov
or
push
xchg
movsb
lahf
cmp
xchg
enter
cmp
iret
inc
popl
arpl
mov
into
fsubl
inc
mov
ficoml
imul
sub
test
test
lock
adc
fisttps
rorb
adc
mov
cmp
mov
sti
lds
xlat
out
sub
mov
sub
test
push
mov
stos
jb
scas
and
add
enter
mov
jecxz
dec
adc
mov
sbb
call
sub
js
loop
inc
cmc
adc
pop
rcl
pop
mov
xor
mov
xchg
clc
sub
xchg
lcall
sub
and
dec
adc
cmp
fnstsw
inc
clc
adc
lcall
ja
and
sbb
aaa
push
lea
loope
sbb
jae
lahf
or
xor
sbb
or
mov
lcall
les
mov
mov
sahf
mov
push
testb
aam
test
fists
outsl
stos
xchg
stc
jae
cs
test
cs
das
fwait
icebp
movsb
aam
cmp
sbb
sbb
lcall
mov
jb
or
mov
xor
out
cmp
lahf
addl
jne
push
ror
test
incb
or
mov
cmpsb
add
xchg
and
jb
push
push
cld
in
push
in
ja
ficomps
mov
cmp
xor
jmp
jmp
adc
in
sarl
fiadds
lcall
adc
ror
jbe
add
cld
mov
xor
psrad
sbb
pop
lret
sub
pop
movsl
mov
dec
imulb
xchg
mov
lds
negb
stos
mov
xchg
push
sahf
dec
fdivr
add
xchg
jg
jge
mov
mov
outsb
sbb
mov
rcrb
les
pop
call
add
xlat
stos
lret
mov
and
push
sub
fcoms
dec
xchg
icebp
jno
mov
dec
inc
pop
das
pop
inc
jne
insb
inc
add
mov
and
pop
push
jno
sarl
jl
shr
or
fnsave
cld
lret
push
cmp
mov
stos
cli
es
add
aad
lods
mov
xchg
pop
jg
loope
out
stos
subl
imul
cmpsl
call
sbb
sub
dec
dec
xchg
mov
or
or
and
xchg
or
les
jle
fwait
movsb
pop
push
cwtl
test
fs
std
mov
jns
push
sub
popf
sub
xchg
pop
in
push
daa
dec
int
push
push
popa
dec
push
test
addb
fldl
insl
mov
stc
out
push
mov
inc
lret
fisubl
pop
or
mov
dec
loopne
inc
popl
sti
data16
jmp
lods
xchg
dec
shufps
bound
movsl
shlb
mov
push
cld
cmpsl
inc
and
jne
dec
push
fimuls
adc
xor
aam
aad
cld
and
adc
sub
bound
int
or
arpl
movsb
mov
mov
arpl
mov
xlat
inc
sbb
hlt
jp
fadds
ja
inc
adc
aam
loop
jne
dec
mov
das
or
xor
loopne
cmc
fistpl
mov
jbe
outsl
push
rcrl
js
mov
in
adc
inc
mov
mov
inc
sub
sar
fldl
pop
or
outsb
push
adc
dec
movl
dec
je
loope
mov
imul
filds
mull
push
mov
lret
pop
pop
es
mov
push
xor
mov
or
or
scas
or
dec
and
fisubrs
jne
jge
jmp
xchg
cmc
dec
sti
push
ret
pop
cmpsl
mov
mov
cld
mov
jge
cwtl
inc
insb
test
jecxz
push
inc
scas
mov
dec
aas
lea
sub
fs
dec
push
sarl
ljmp
push
bound
enter
pusha
mov
outsb
push
or
or
loope
arpl
mov
jecxz
cld
push
fcomps
pop
in
dec
lret
fisubrs
pop
dec
pushf
cmpsl
pop
decl
jle
fcoml
imul
in
xchg
int
xchg
pop
movsb
test
sub
jno
popf
cmp
in
aad
aas
adc
mov
jge
ljmp
cmp
xchg
icebp
notl
or
xchg
or
mov
mov
pusha
cmpsl
in
stos
jmp
jmp
in
nop
sub
sub
mov
iret
rorb
push
dec
xchg
mov
test
inc
jne
pop
int
xchg
addb
out
mov
push
push
imul
jmp
pop
stos
mov
inc
xor
stos
into
ret
xchg
sbb
fs
jo
sbb
addr16
incl
scas
pop
xchg
jge
shlb
jne
cmpsl
xchg
repnz
imul
adc
pop
mov
pushf
sub
ffreep
jno
pop
mov
sbb
shrl
dec
ja
bound
xchg
rol
adc
jp
sbb
and
and
fsubrl
add
mov
cmp
mov
leave
mov
sub
loop
mov
dec
mov
stos
dec
sub
mov
pop
cmp
cld
or
fmuls
insb
cli
out
cld
jb
jge
test
jp
daa
inc
fdivrs
ds
mov
push
pop
cs
lock
xchg
jmp
in
daa
les
lea
adc
cmc
dec
pushf
movsl
lahf
mov
bound
out
push
addl
xchg
xchg
sub
fisubs
fs
inc
jae
or
or
test
inc
pop
pop
xor
cmp
xor
lret
les
mov
cwtl
popa
fsubr
ret
xor
rorl
cltd
lea
sbb
fxch
insl
add
mov
adc
xor
ficoml
je
mov
and
sbb
enter
test
call
cltd
or
xlat
mov
subb
ja
cld
mov
loope
jmp
inc
add
ljmp
cmp
mov
and
adc
outsl
aaa
jbe
xchg
imul
inc
cli
pop
pop
xchg
push
push
dec
nop
inc
in
mov
mov
sub
dec
adc
push
mov
inc
loop
repz
mov
sbb
pusha
pushf
out
jle
cmpsb
adc
push
adc
xchg
ret
xor
mov
scas
adc
fcmovu
mov
adc
iret
add
jne
mov
dec
inc
pop
push
xchg
xchg
in
shr
movsb
fs
xchg
leave
stc
adc
mov
loop
push
xlat
es
pop
sbb
mov
cmp
shll
sahf
ja
stos
mov
and
jno
dec
mov
pop
out
or
shll
dec
outsl
inc
scas
ret
push
inc
call
stos
mov
xor
and
lcall
icebp
cli
adc
push
push
out
sar
imul
dec
fs
cltd
mov
sub
lret
jnp
enter
and
pop
mov
insl
std
add
push
push
mov
ds
outsl
cmp
gs
add
xchg
into
clc
mov
push
xchg
pop
repz
push
adc
hlt
xchg
in
enter
out
add
cli
dec
push
mov
outsb
ss
sti
sbb
cmpsl
jns
mov
and
call
scas
mov
idivb
mov
mov
sti
adc
cmp
mov
xor
divl
or
fidivs
shrb
inc
dec
mov
dec
mov
adc
adcl
cs
mov
in
push
xlat
test
adc
push
xor
mov
and
icebp
pop
out
xchg
push
xor
mov
inc
and
insl
scas
cmp
or
jo
ret
hlt
ficomps
ret
hlt
in
cli
shlb
imul
dec
test
iret
xchg
mov
adcb
and
push
fisubl
push
stos
cwtl
mov
mov
arpl
test
shll
xchg
mov
cmp
in
rolb
cs
push
jb
push
jp
and
lret
ret
mov
enter
inc
sbb
loopne
aas
add
je
push
sub
out
mov
in
adc
in
test
push
mov
mov
cmp
fdivp
adc
xchg
call
sbb
ret
sti
push
add
scas
pop
add
iret
leave
lahf
sbb
popf
ret
xor
out
in
cwtl
rcr
testb
pop
shl
pushf
cmp
clc
mov
push
jmp
or
xchg
add
iret
psllw
pop
or
sub
push
jmp
lret
xchg
addr16
gs
jecxz
xchg
dec
out
sub
adc
stos
mov
cmp
add
lret
pop
arpl
fsubp
mov
aaa
pop
imul
mov
ror
clc
mov
lods
sbb
inc
lcall
addr16
mov
push
pop
push
jg
jmp
leave
xchg
or
or
sbb
andb
pop
lds
hlt
insb
lock
mov
das
ja
fwait
push
insl
mov
inc
push
clc
and
xchg
sahf
aaa
in
xlat
push
sbb
push
divps
fldt
dec
xchg
orl
add
call
pop
push
pop
insl
sbb
ss
push
nop
dec
inc
ds
mov
in
and
sti
lcall
or
mov
dec
dec
ret
fdivrs
out
lcall
xor
popa
xlat
repnz
sub
pop
scas
push
pop
jge
adc
in
or
shll
je
fs
movsl
cmp
adc
add
rorl
mov
cmp
fisubrs
and
test
pusha
adc
xor
outsl
out
push
cwtl
aad
iret
divb
stos
test
push
out
and
sub
out
stos
and
or
mov
jecxz
stos
insb
pop
jae
bound
repz
ffreep
push
mov
or
rorb
rorb
push
fwait
mov
inc
ret
orl
cmp
jmp
fisttpl
inc
jl
aad
sub
push
push
int
cmp
mov
and
lahf
push
mov
in
aam
or
cmp
mov
or
fstps
les
mov
jp
dec
gs
jg
sbb
sub
popf
push
cli
jp
repnz
sbb
or
and
inc
jg
dec
ja
clc
mov
aas
subb
inc
sub
xchg
mov
subl
pop
mov
orl
js
fmuls
sub
or
jbe
icebp
xor
outsl
cwtl
sahf
cmpsl
repnz
pop
add
int3
lahf
js
mov
fsqrt
into
fisttpll
jo
imul
add
sbb
cs
push
ror
in
js
pop
xchg
pop
mov
cmp
inc
call
cmpsl
js
mov
in
mov
mov
adc
call
outsl
std
sbb
mov
sub
dec
mov
loopne
xchg
pushf
xor
stc
cmp
stos
xchg
and
test
shll
sub
cmp
repz
add
jnp
leave
sbb
mov
lods
cmp
test
inc
mov
jne
frstor
sub
loop
and
imulb
addr16
sub
pop
icebp
cmpsl
cld
fwait
push
das
mov
cmp
pop
jp
add
into
jecxz
lods
in
notb
stos
jl
out
sbb
shll
push
loop
push
push
inc
ds
js
daa
pop
ss
cld
mov
out
int3
push
or
mov
dec
in
hlt
add
mov
loope
js
imul
and
push
shrl
mov
test
jp
xchg
fnstcw
mov
sub
xor
in
pop
add
pop
stos
and
jae
inc
lods
or
leave
lret
sti
cmp
cmp
and
imul
jle
add
mov
jp
sbb
loope
pop
and
ret
test
addr16
pop
jae
and
xchg
jg
lods
lods
pop
sub
jno
dec
mov
in
testl
lahf
dec
pop
dec
xor
sub
sbb
imul
xor
ret
and
dec
scas
push
push
add
clc
or
insl
xchg
jge
and
movsl
lret
sub
pushf
xor
pusha
popa
scas
and
dec
mov
movsb
movsb
mov
add
mov
shrb
pop
aam
outsb
mov
or
sub
ret
add
dec
push
xchg
and
aas
popl
xchg
jp
cmp
mov
lods
lea
add
loopne
add
dec
and
out
xchg
in
xchg
and
in
pushf
ja
xorb
jae
aam
dec
sub
movsl
daa
push
mov
rorl
clc
les
or
test
sbb
aaa
jp
dec
imul
cmc
popf
add
sbb
xchg
xor
rcrb
cltd
loope
adcb
dec
mov
fildl
std
pop
mov
dec
mov
sbb
insl
mov
add
cmp
pop
daa
cmpps
test
sub
and
scas
iret
andb
mov
aaa
clc
int3
push
je
jmp
xchg
enter
scas
mov
loop
movsl
sar
outsl
pusha
mov
rolb
adcb
mov
mov
pop
imul
sbb
roll
insl
rorb
gs
mov
mov
xchg
mov
inc
xchg
sbb
int
pop
inc
ret
loope
adc
jg
test
pusha
push
jnp
mov
dec
xchg
ja
fs
daa
lds
jo
clc
push
sahf
out
popa
xor
jne
pop
push
jno
pop
mov
daa
sbb
sub
sub
addr16
adc
xorb
vcvtss2sd
jo
gs
or
or
stc
mov
mov
mov
push
jnp
and
push
xchg
shl
xor
dec
jmp
std
test
push
adc
add
xor
xchg
push
test
jnp
sbbl
mov
scas
setne
ljmp
loop
cmpsl
sub
adc
pop
in
mov
add
mov
xor
mov
mov
push
andl
adc
pop
inc
pop
inc
popf
mov
pushf
adc
cmp
dec
pop
in
cli
xchg
test
jae
pop
lahf
mov
add
push
mov
and
sbb
adc
push
adc
stos
sbb
jne
stc
and
outsl
pop
popf
mov
dec
adc
in
pop
sbb
mov
push
push
loop
jl
xchg
xchg
xor
inc
dec
das
mov
jb
outsb
jbe
jne
loope
fdivrs
inc
insl
adc
cmp
jo
roll
stos
xchg
loopne
cmp
cmpsl
push
aad
fmuls
popf
movsb
imul
shll
pushf
ss
rorb
cwtl
outsb
rorl
lock
int3
sub
bnd
mov
in
pop
mov
add
cmp
sub
jno
ret
pusha
and
aad
dec
into
mov
jne
inc
jb
fsubs
mov
int
sub
mov
in
push
in
mov
fbstp
and
inc
jno
push
jmp
pop
sbb
fisubl
mov
mov
cld
jb
fstps
and
push
cld
jg
fs
ss
das
ss
popa
mov
cmp
popf
mov
jmp
aad
imul
mov
add
or
xchg
jns
ret
mov
das
mov
pop
mov
fnstsw
and
mov
outsb
or
xor
fistps
popa
cmpl
pop
sub
lret
pop
aaa
ss
jge
jmp
push
sub
test
and
movsl
sub
push
add
insl
mov
pop
add
movsl
fs
mov
xor
mov
jle
and
xorl
sub
out
or
out
call
push
mov
dec
aam
cmp
pop
iret
stc
xchg
push
loopne
sub
dec
jnp
cmp
es
nop
mov
mov
jg
pop
ja
inc
fsubl
push
rcrb
jns
push
push
lds
into
out
jbe
mov
sbb
push
mov
sbb
lahf
ret
mov
xlat
adc
ret
orb
daa
adc
sbbl
movsb
fldt
sbb
jns
adc
mov
add
push
incl
iret
test
lea
stos
fisttpll
mov
pusha
mov
xchg
ret
icebp
pop
movsl
js
fiadds
cmp
xor
in
cmp
jns
mov
lret
and
xlat
aas
push
mov
or
rcl
ret
pushf
add
daa
loope
aam
mov
test
mov
aaa
addr16
test
ss
mov
or
mov
aad
pop
pop
mov
movsb
mov
push
lock
mov
mov
pop
jmp
fdivrl
aam
mov
add
ljmp
divb
dec
inc
mov
push
pop
sub
cmpsb
push
and
flds
mov
in
arpl
aam
add
adc
stos
pop
addl
or
and
call
or
arpl
mov
outsb
dec
andb
cltd
xor
out
leave
in
inc
leave
test
lds
jno
xchg
fcomps
fdivr
arpl
loopne
push
das
mov
xchg
je
fiadds
adc
iret
imul
repz
stc
mov
cmp
addr16
cmpsb
pop
xchg
and
mov
loopne
stc
jecxz
imul
mov
dec
pop
inc
mov
sahf
mov
pusha
pop
sbb
repz
lods
sahf
ffreep
nop
pop
or
cmp
clc
xchg
vpunpcklwd
pushl
roll
dec
ret
and
leave
or
pop
mov
adc
fsts
jnp
outsb
xor
out
aaa
sarl
jno
ret
into
pop
ffree
sub
aad
pop
in
sahf
mov
notl
push
dec
je
sbb
adc
mov
jmp
in
xor
leave
push
jmp
lret
int3
xchg
and
pop
dec
sub
jmp
pop
loopne
push
inc
xor
loopne
push
scas
cmp
stos
push
movhps
mov
jp
mov
lret
loopne
pop
repnz
or
sbb
mov
dec
push
mov
nop
sub
pop
or
out
inc
cmp
push
mov
inc
jo
jno
ret
insb
sbb
popa
dec
xchg
xor
and
test
xor
jb
enter
lret
cmp
mov
sub
rol
or
jle
cmovo
push
out
bound
inc
xor
ja
iret
in
sub
jnp
jae,pn
into
inc
scas
cmpb
repz
sti
or
and
adc
movsl
or
adcb
adc
cli
inc
mov
daa
ret
je
xchg
lcall
mov
in
xor
dec
fiaddl
or
xor
dec
xor
pmaxub
dec
leave
adc
bound
lret
inc
inc
in
in
sub
stc
ljmp
cmpl
cmpb
or
push
fwait
mov
xor
cmp
fcmovb
outsb
pop
pop
pusha
es
sbb
dec
dec
test
push
lock
popa
and
addr16
mov
daa
adc
jmp
frstor
repnz
lret
stos
cmpb
outsl
fwait
push
and
int
in
xor
add
lock
addb
cltd
paddq
loopne
push
loop
pop
rcll
out
pop
xor
mov
pop
xchg
movsb
dec
ds
adc
stos
pop
inc
outsl
adc
mov
sahf
enter
xchg
sar
shl
jle
lock
cmpsb
rcrl
fistpl
fldt
mov
or
add
addr16
xchg
or
ds
push
das
pop
push
mov
sub
leave
dec
xlat
insl
push
xor
out
fs
in
in
fidivrl
xchg
adc
shr
lahf
outsl
xchg
xchg
push
fsts
test
ficomps
outsb
rep
aad
outsb
ds
call
mov
jl
ljmp
loop
adc
and
outsb
sub
fstpl
dec
xor
and
inc
sbb
in
dec
lahf
inc
cmpsb
cmpsl
cs
push
cmc
out
xchg
data16
inc
mov
test
in
add
push
xchg
fwait
push
les
push
adc
cli
fsub
movsl
loopne
pop
cli
mov
xor
inc
shr
dec
jmp
pop
mov
notl
jae
dec
les
and
pop
ret
stc
sub
lahf
and
xchg
jle
dec
clc
lods
mov
fwait
sub
push
mov
loopne
lret
loopne
cmp
fmul
clc
lock
popa
pop
ficoml
mov
js
shl
cli
push
jnp
scas
mov
gs
lahf
fstps
jne
fbld
mov
mov
stc
lcall
xlat
jmp
shl
xchg
imul
inc
cltd
mov
cmp
test
dec
cmp
enter
mov
dec
xchg
mov
jecxz
or
fsubr
test
sbb
in
cmp
cmp
lahf
cld
into
pop
in
sub
xchg
push
xchg
lds
xor
xor
and
jb
int3
frstor
fs
test
or
dec
jnp
stos
jnp
pop
adc
cwtl
fwait
ljmp
add
cmp
adc
cmpsl
dec
or
lock
or
aad
ds
adc
jo
cmp
xor
jae
cld
lock
dec
out
jo
lret
mov
xchg
mov
aad
sub
jo
cmc
ja
cmp
pop
gs
jns
mov
movb
fistl
lock
push
stc
ds
push
shl
pushf
cmp
dec
push
add
push
pusha
push
jno
mov
lcall
lods
pop
shll
sbb
stos
add
ficompl
jne
jge
inc
pop
js
out
jo
xor
ds
rcr
push
pop
sub
fsubr
test
into
outsb
aad
and
push
push
hlt
cld
or
adc
sub
cmpsb
and
pop
and
jns
icebp
inc
icebp
jecxz
cmp
movsb
lods
mov
and
pop
xchg
and
sbb
mov
icebp
mov
mov
xchg
repnz
mov
push
in
or
mov
and
jge
lcall
jl
xor
daa
add
hlt
cmpsb
jmp
popf
push
pop
lahf
sub
cmpsl
xor
pop
push
lea
testb
pop
popf
gs
fsubrl
aas
cltd
jge
or
mov
addr16
mov
cmp
and
lock
mov
push
hlt
sahf
sub
jle
divl
mov
in
imul
mov
dec
negb
adc
xchg
push
shrl
out
aas
jns
jb
ret
cli
arpl
sbb
shrb
imul
sti
stos
pop
loop
mov
pop
pop
repz
in
mov
sbbl
cmp
pop
outsl
cwtl
pop
pop
push
mov
cltd
loopne
cli
movsl
loop
jmp
cli
xor
push
cltd
lea
mov
and
or
and
or
push
adc
add
call
sarb
sub
pop
jno
decb
arpl
fnstcw
push
rorl
push
cmp
loope
int
std
cmp
sbbb
inc
fsts
push
ret
cmc
pop
subl
adc
popa
mov
sbb
jbe
jge
and
mov
lods
int
sahf
lret
mov
pushf
ret
xlat
arpl
xlat
mov
pusha
mov
ljmp
inc
sub
xchg
xchg
inc
sub
filds
add
movsb
test
adc
dec
jo
xchg
add
push
xor
pop
mov
lods
sub
jae
push
int
lds
lahf
into
rep
int3
xor
cld
js
aam
pushf
int
jns
dec
push
dec
pop
imul
out
mov
cld
mov
jbe
lcall
and
aas
jp
test
cwtl
push
jb,pt
insb
addr16
dec
cmpsb
xchg
jge
int
aam
test
jecxz
sbb
test
ds
out
mov
fs
jns
lea
lahf
gs
push
imul
inc
out
and
outsb
jecxz
js
inc
xchg
lret
and
testl
or
jmp
scas
scas
push
adc
jb
add
loopne
adc
sbb
test
lods
inc
sbbl
push
lds
mov
loopne
daa
adc
enter
cmpsb
jl
mov
in
cld
mov
xor
cltd
push
dec
jmp
insb
mov
faddl
cmp
sahf
xchg
negl
xchg
call
cmpsl
stos
cmpsl
sbb
int3
orb
xchg
mov
dec
sub
ret
xchg
push
rcr
pushf
in
mov
xchg
or
stc
int3
push
popa
stos
sub
lock
notl
fistps
jecxz
testb
js
es
bnd
xchg
or
cmpl
test
sti
inc
inc
push
ret
xor
inc
sbb
int3
pop
cld
stos
dec
mov
sbb
jmp
lcall
std
jmp
pusha
push
andb
mov
sbb
lea
add
sub
fdivs
sub
mov
xor
pop
mov
mov
fld
jl
xchg
jl
sahf
jne
jmp
ja
sub
xchg
xchg
imul
ficoml
dec
sub
mov
mov
mov
sub
and
popf
push
fdivrp
ljmp
repz
ljmp
and
clc
clc
shll
and
mov
push
sub
mov
xor
lahf
or
inc
popf
stos
ds
mov
fisubrs
sti
pop
shrb
add
rolb
ret
in
std
aad
cmp
in
jno
sbb
or
stos
lret
popf
lods
es
xchg
mov
sub
iret
int3
pop
into
outsl
ficomps
inc
mov
divl
adc
divb
and
add
dec
sub
movsl
xchg
xor
xorl
dec
cwtl
test
xchg
sub
fimuls
hlt
hlt
jle
inc
lds
sti
js
test
mov
lret
lds
std
xchg
lods
pop
or
adc
lock
jecxz
mov
push
in
call
in
sbb
mov
call
mov
clc
pop
inc
fisubl
sub
cmp
xor
mov
std
mov
call
or
mov
in
mov
in
xchg
outsb
sub
push
jbe
dec
test
dec
push
or
push
mov
inc
sahf
call
fimull
lock
movsl
pusha
pop
rolb
xchg
cmp
cmp
jb
sub
push
or
je
xchg
lret
xchg
fldt
push
or
loop
lahf
lock
jecxz
mov
test
int3
jbe
xchg
mov
push
push
pop
adc
jmp
lock
pop
mov
fisttpl
fdivrs
inc
cs
mov
fistpl
xor
jl
add
fstps
into
ret
mov
lret
cmp
decl
bound
push
jmp
call
mov
addb
into
fwait
mov
fwait
stos
or
sbb
ljmp
push
sub
push
out
divl
stc
sbb
and
sub
in
ret
sub
jge
pop
sbb
inc
popa
pop
xor
xchg
jp
jp
mov
or
sbb
and
rcrb
pop
fidivrl
fcoml
cmpsb
pop
out
push
sub
push
fs
out
jecxz
cmp
sbb
mov
xchg
imul
fsubrs
pop
test
stos
fcompl
mov
scas
popa
mov
push
push
pushf
sbb
lret
pop
jno
das
inc
movsb
or
das
int
sub
test
scas
rcrb
setnp
xchg
push
adc
repnz
xchg
add
movsb
inc
pop
or
mov
flds
and
ja
out
mov
push
sbb
int3
mov
hlt
ret
adc
xchg
mov
jg
push
faddl
xor
inc
dec
inc
mov
test
fidivrl
adc
cmp
adc
sahf
int3
inc
pop
mov
sub
arpl
outsl
xor
fcom
orb
je
repz
jmp
fmull
jae
sahf
test
push
mov
out
mov
mov
out
paddw
mov
in
jbe
mov
pop
xlat
jb
aam
xchg
jne
xor
jp
jns
pusha
insl
sub
sub
xlat
mov
jge
ficoml
fstps
sarl
daa
ret
lods
mov
mov
or
mov
lret
das
adc
bound
pop
cli
cli
jp
pop
pusha
push
repz
xorl
popf
mov
push
fsubs
mov
jno
sub
int3
aaa
inc
sub
icebp
cmc
pop
mov
dec
push
inc
pop
addr16
icebp
or
gs
and
data16
nop
pop
fisubrs
xchg
mov
push
fnstenv
mov
jecxz
lock
rcll
adc
push
test
xlat
dec
popf
scas
js
stc
repnz
fld
and
mov
test
push
lret
inc
jle
push
cmpsb
xchg
and
ja
mov
sbb
mov
nop
inc
lock
aad
gs
jb
or
cmpl
xchg
cmp
dec
xchg
cwtl
push
cltd
out
leave
push
dec
xchg
xor
push
das
mov
aad
push
sar
mov
std
add
pop
jbe
test
in
loop
in
imul
mov
cmp
xor
xchg
and
add
pusha
pusha
div
pop
mov
xchg
addr16
push
outsb
cwtl
sbb
cltd
iret
pop
inc
call
add
jg
jp
adcb
pop
xor
push
test
mov
push
push
outsl
sub
dec
in
loop
inc
pop
xchg
daa
mov
sbb
ret
pop
les
jecxz
pushf
ds
lods
rclb
mov
je
scas
sbb
inc
enter
lea
into
fiadds
jns
push
inc
jnp
mov
jno
push
push
xor
dec
jp
lods
xor
out
jns
shl
mov
xor
stc
jo
jae
arpl
rcr
push
sbb
int3
xor
inc
sub
ljmp
inc
xchg
cmpsb
daa
ds
mov
scas
notb
out
pop
mov
imul
addr16
jg
loop
mov
daa
jmp
or
jmp
insb
lret
mov
gs
sti
sbb
shlb
mov
subb
iret
add
mov
mov
ret
mov
cmp
mov
adcb
pop
inc
mov
push
sbb
clc
sbb
fistps
cmp
dec
and
jo
lock
daa
mov
adc
out
pop
mov
jb
sbb
pusha
dec
insb
outsl
in
jg
mov
mov
push
out
aad
repnz
lods
dec
mov
std
les
lahf
stos
pop
or
lds
jns
mov
ret
ficomps
cwtl
sub
lcall
enter
je
mov
mov
faddl
ss
stos
enter
add
lret
dec
ret
sbb
push
es
in
cmp
insl
xor
cmp
hlt
idiv
pop
incb
std
mov
mov
adc
push
lret
jmp
dec
lcall
add
cmp
lds
clc
xchg
psubw
adc
int
mov
test
xor
int3
jg
enter
ss
sbb
daa
pop
pop
cmp
pop
push
fisubs
cmc
lahf
adcl
cmpsb
mov
inc
add
mov
dec
lcall
hlt
mov
mov
mov
mov
add
popf
push
xchg
out
xchg
shrl
xorb
outsl
cmc
xchg
add
and
jae
push
ret
inc
jb
popa
fstpl
xchg
and
ret
loopne
mov
mov
push
rcr
scas
scas
les
lahf
dec
inc
dec
mov
and
dec
sbb
sub
loop
pop
jle
xchg
and
pop
add
aaa
mov
ja
out
inc
mov
sub
xor
ffreep
xchg
ljmp
xchg
int3
gs
mov
data16
test
js
pop
mov
mov
lods
loopne
push
into
in
cmpsb
cmp
xor
mov
cmp
add
js
movsl
test
sbb
add
jecxz
xor
fcmove
cmpsb
cmc
dec
jbe
jl
inc
push
xor
fstl
ds
adc
mov
mov
fadd
cmp
ljmp
ss
repnz
xor
and
pop
cltd
jg
sbb
inc
sub
int3
test
cltd
sbb
sub
xor
mov
mov
fcoml
xchg
xchg
lahf
pop
or
dec
daa
ljmp
andl
arpl
jecxz
add
cmp
sbb
and
adc
add
lea
ljmp
imul
xlat
or
addb
push
mov
pop
ljmp
iret
lret
xchg
adc
lcall
inc
xchg
dec
arpl
inc
daa
dec
mov
pop
in
cs
cmp
lret
cmpsb
and
pop
mov
std
int
minps
mov
in
add
rorl
xchg
mov
insb
fldcw
xor
gs
outsb
clc
sub
mov
jb
std
adc
jae
xchg
pop
mov
scas
in
bound
mov
pop
inc
cmpsb
xor
lcall
inc
repz
mov
aas
cmp
inc
push
sub
xchg
les
scas
or
xor
std
mov
cmp
and
pop
ret
fwait
push
std
loop
out
xchg
jge
insl
add
and
dec
nop
pushf
mov
xchg
cmp
pop
adc
and
das
out
cli
mov
mov
pop
push
mov
mov
push
loope
inc
in
mov
imul
mov
pushf
inc
mov
cmp
jbe
imul
mov
idivl
hlt
sbb
imul
or
xor
or
push
xor
and
xchg
jne
lods
jne
cli
gs
inc
mov
fcomps
sub
push
dec
add
pop
jge
xor
xlat
add
mov
mov
fistpll
cmp
les
js
out
add
xchg
dec
fadds
mov
cltd
sub
jbe
pop
lret
or
add
sbb
add
sub
adc
inc
popf
ss
cmpsl
dec
in
lods
xor
xchg
inc
ljmp
cmpsl
adc
pop
pop
jg
jecxz
xchg
sub
add
sub
sarb
jno
and
jae
fiadds
lret
stc
jb
xchg
mov
sub
pop
fcompl
xor
fsubp
xchg
test
dec
call
adc
xchg
adc
push
fwait
out
sbb
push
arpl
sbb
in
jge
push
or
pusha
bound
insb
or
mov
jl
jb
out
jmp
and
pushf
insb
rcl
call
nop
mov
xor
cmp
jp
ljmp
ljmp
cmpsl
push
xchg
xchg
sbb
inc
mov
movsl
mov
xchg
sub
pop
sub
aas
ljmp
adc
cmp
out
pop
or
mov
in
into
insb
fsubrs
and
test
ror
cltd
fcoms
stos
ja
xchg
fildl
loopne
fcomps
cmpsb
insl
sti
shll
and
out
in
outsb
mov
enter
in
ret
cs
nop
mov
inc
pop
test
push
mov
mov
jp
sbb
xor
movsb
lds
mov
jo
test
mov
push
sbb
lcall
fisubs
nop
mov
testl
mov
addl
push
bound
hlt
repnz
push
shlb
ret
mov
push
cmp
movsl
pop
shl
rolb
push
jo
and
jne
inc
inc
xchg
popa
call
mov
dec
fcomp
aam
xor
pusha
inc
mov
mov
mov
cmp
inc
jp
lods
stos
jne
ret
ret
lods
rclb
mov
fnsave
add
pop
mov
jmp
push
mov
jno
test
fildl
add
fs
cmp
dec
dec
jge
add
jg
and
mov
mov
dec
and
dec
mov
jno
aas
pop
mov
aam
mov
pop
and
mov
or
popf
aam
scas
and
repnz
ja
loopne
scas
pop
in
mov
lahf
insb
call
mov
add
pop
fcomi
push
xchg
testl
stc
rcl
cmc
loopne
xor
out
int
xchg
lcall
test
xor
mov
imul
das
xchg
movsb
jno
push
clc
mov
jns
cltd
xchg
adc
movsb
jecxz
push
xchg
lods
and
imull
loopne
xchg
sbb
setl
and
push
jecxz
cmp
lcall
repz
fwait
xor
pop
sub
add
xor
scas
xchg
in
xchg
xchg
es
outsb
outsl
mov
push
call
xor
enter
adc
sub
aam
or
cmpsb
xchg
inc
addr16
insl
sbb
and
stos
xor
shll
or
out
ja
sahf
mov
xchg
push
and
mov
cmpsl
inc
daa
mov
adc
mov
test
test
lret
cmp
jg
icebp
gs
inc
aam
push
mov
add
inc
cmp
xchg
mov
jnp
in
hlt
adc
stos
mov
inc
jns
cwtl
iret
jns
mov
add
sti
add
je
adc
jo
pop
out
inc
mov
or
or
pop
push
add
ds
push
in
ret
push
adc
push
cmp
or
inc
xor
push
movsb
mov
stos
cmp
sahf
je
sbb
dec
jae
lea
inc
xchg
imul
ja
lods
stc
sbb
fisubl
lcall
jmp
mov
jne
add
sub
lock
and
jmp
xor
rcrb
inc
out
mov
pop
jne
fucomi
ds
dec
adc
ja
clc
pop
adc
test
or
push
adc
mov
enter
ret
add
pop
jnp
das
mov
fldt
outsl
lods
imul
in
xor
sahf
sbb
jb
jbe
add
pop
inc
sbb
mov
in
and
data16
inc
or
call
jl
popf
stos
aas
pop
mov
cwtl
mov
sbb
cmp
movsl
repnz
aad
pop
mov
loop
js
aad
rolb
or
dec
cmp
dec
or
cmp
fdivrs
std
mov
mov
rcl
fstps
bound
sti
mov
pusha
sub
sar
jle
mov
xchg
mov
int3
daa
push
repnz
faddl
pusha
and
fnstsw
or
cmc
xchg
std
loopne
cmpb
mov
paddusb
add
jg
idiv
rclb
xor
and
lods
or
mov
cltd
mov
xchg
enter
test
ficompl
pop
or
and
mov
inc
mov
outsl
loopne
cltd
or
das
scas
cwtl
out
push
jmp
mov
lods
nop
mov
ds
and
addr16
lods
xchg
jae
movsb
outsb
or
cmp
jae
mov
cmp
jmp
out
adc
sti
cwtl
mov
mov
and
shll
notb
roll
lds
mov
ds
sub
mov
popa
mov
xor
imul
and
cs
imul
icebp
pop
or
mov
xchg
nop
push
out
jns
ret
loop
jae
sub
or
ret
pop
fimuls
sbb
or
test
push
cmp
adc
pop
clc
ljmp
je
pop
mov
cwtl
ret
dec
mov
dec
mov
cwtl
cmp
lret
repz
aam
adc
pop
inc
add
jne
das
int3
inc
cmp
jnp
adc
lret
or
std
mov
adc
jbe
mov
mov
sub
arpl
inc
aad
jnp
shlb
fnstenv
cmp
cs
mov
push
arpl
mov
lret
pop
pop
leave
push
mov
mov
sbb
mov
cmp
jbe
mov
shrl
mov
push
inc
ljmp
xor
mov
int3
lock
clc
bound
in
jg
mov
inc
das
dec
jp
mov
push
add
outsb
popf
mov
rol
insb
adc
les
push
loope
jmp
daa
mov
ljmp
mov
mov
xor
mov
scas
xchg
cmpsb
sti
inc
movsl
lcall
inc
dec
andb
dec
mov
loope
repz
pop
popf
arpl
cs
and
add
das
outsl
xchg
sub
push
clc
mov
lock
pop
aaa
fldl
leave
cmpsb
mov
movsl
in
push
push
adc
sub
sub
cmp
loope
jl
ficoms
pop
inc
lcall
out
dec
xor
mov
xchg
imul
hlt
in
test
outsl
jg
inc
xchg
iret
in
aas
or
sub
sub
nop
inc
mov
jecxz
mov
ret
mov
xor
lock
sbb
imul
mov
in
cwtl
lahf
das
je
xor
dec
sbb
int3
in
jmp
mov
insl
cmp
out
xchg
js
push
test
push
pop
fnstsw
sbb
push
fsubl
push
shlb
and
dec
into
xchg
xor
pop
int3
jno
notl
mov
mov
hlt
fdivp
mov
cmc
shlb
fwait
scas
ja
push
jl
js
test
xchg
adc
mov
lods
jge
cs
add
inc
dec
fldl
mov
fsts
xchg
outsl
and
adc
sarb
jmp
cmpsb
out
mov
mov
jl
mov
mov
cmp
pop
rclb
movsb
frstor
push
mov
and
push
jo
xor
test
pop
mov
sbb
stos
orb
mov
or
jb
cmpsl
mov
int
mov
and
jns
es
pop
pusha
nop
pop
sub
pop
fwait
add
push
and
sbb
lock
mov
int3
ret
xchg
push
or
bound
sub
mov
ror
adc
push
inc
pop
lods
fldcw
ljmp
frstor
leave
mov
inc
xor
push
sub
jp
mov
sbb
dec
xorl
faddp
mov
mov
leave
inc
mov
clc
mov
bound
xor
pop
cmc
decl
gs
int3
mov
das
lahf
aam
test
pop
sub
add
subl
in
mov
mov
loopne
leave
push
ret
fmuls
in
pop
sarb
aaa
xor
cli
lods
into
pop
in
fistl
jl
popa
mov
jmp
out
shlb
lret
mov
iret
xlat
pop
jo
test
push
sti
inc
stc
inc
testl
cmp
imul
rolb
sub
mov
lret
push
push
nop
inc
flds
xor
incb
ds
rcrl
cmpsl
mov
cs
pusha
and
out
mov
cmp
enter
out
pop
xor
fdivs
sub
aas
enter
inc
sub
into
std
sub
dec
mov
mov
push
and
mov
cmc
stos
mov
movl
pop
mov
xlat
push
xchg
or
ja
lret
dec
lods
loop
leave
jle
mov
adc
fldt
clc
clc
sti
jno
pop
mov
pushf
outsl
int
bound
add
orl
mov
or
out
lret
ja
cmp
or
int
xchg
cmpl
filds
dec
jb
inc
dec
sbb
jle
mov
xchg
add
cmpsb
movntq
xchg
test
push
addr16
movsb
lods
into
xchg
out
jle
out
movsl
fstps
movsb
dec
jno
mov
adc
sub
cli
enter
das
inc
hlt
push
adc
dec
cmp
into
negl
xchg
mov
insl
cmp
cli
inc
xchg
es
ss
cmpsb
dec
adc
imul
pop
popf
fwait
mov
inc
shll
and
mov
iret
mov
xor
iret
xlat
out
das
dec
cmpsb
adc
mov
mov
aam
dec
outsb
scas
pop
push
push
test
push
divl
pop
pop
mov
dec
sub
xchg
xchg
xchg
inc
xor
mov
cmp
xchg
fldl
lret
mov
ficomps
ret
xchg
adc
arpl
inc
mov
sbb
add
les
std
add
push
inc
aad
cmp
jp
sub
lock
stc
jmp
cmp
xchg
push
fcmovnb
clc
push
js
lret
inc
push
push
jle
icebp
pushf
mov
cmpsl
sub
mov
dec
push
add
jbe
sbb
mov
pop
push
lcall
es
xlat
mov
xor
std
mov
push
mov
cmc
cmp
mov
xchg
mov
sub
daa
push
adc
add
pop
mov
pop
cmp
lret
fstpt
inc
mov
jle
cmp
sbbb
aas
push
loope
fsubrp
pop
movsb
lods
or
sahf
ss
cmp
xor
push
in
rcrb
cmp
cli
aaa
inc
addr16
fsubrl
sub
into
iret
repnz
push
jecxz
popf
add
rcll
mov
mov
xor
and
inc
push
inc
andb
xor
mov
rcll
push
incb
push
pop
mov
fs
divl
xchg
cmp
jg
pop
fcmovbe
into
mov
sub
dec
nop
mov
xchg
arpl
addr16
push
or
mov
and
popa
jbe
rclb
dec
mov
das
arpl
dec
sarl
sub
add
mov
out
stc
mov
jl
hlt
rolb
ljmp
out
xchg
data16
dec
iret
fbld
insb
mov
sbb
cli
aaa
xchg
and
adc
push
jmp
lock
rcll
add
push
jb
inc
rcll
jmp
push
sahf
cmp
and
mov
adc
adc
mov
adc
divps
lret
lcall
xor
add
inc
cmpl
xchg
fs
mov
mov
test
leave
lods
jb
pop
fs
fists
cmc
lea
js
dec
jge
pop
jae
dec
add
out
adc
cwtl
add
adc
ja
lret
int3
xchg
jg
mov
scas
sub
sahf
rcll
outsl
and
jns
mov
sbb
cmp
push
test
mov
nop
aad
rcrb
sbb
aaa
cvttps2pi
or
jbe
xor
aaa
ds
out
cli
ja
cwtl
out
adc
adcl
in
xchg
lret
aaa
pop
mov
inc
sbb
sub
neg
mov
out
and
adc
cmovl
push
dec
js
les
sub
jp
pop
shl
stos
push
test
lods
nop
xor
shl
push
dec
insb
jp
fcmovne
icebp
les
inc
loop
mov
dec
mov
or
sub
ja
testl
adc
mov
nop
adc
in
jno
int
lods
mov
lret
cli
clc
popf
loope
inc
jb
mov
rorb
jo
fwait
sbb
xchg
fdivl
xchg
aam
xchg
hlt
bound
dec
pop
aas
pushf
sub
mov
dec
cmp
jg
addr16
jbe
mov
cli
push
cmp
insb
xchg
imul
stos
js
mov
xor
mov
outsl
inc
jecxz
adc
test
inc
jb
pushf
adc
mov
adc
sbb
sub
cs
or
add
push
lcall
adc
xor
inc
adc
adcl
jno
mov
repnz
mov
aas
pop
daa
sbb
dec
fcomps
xchg
pop
dec
cmpb
into
icebp
les
sub
stos
int3
repnz
pop
cmpsb
pop
jmp
nop
negb
pop
sarb
rolb
scas
nop
fldt
and
js
addl
pop
sbbb
ja
fstpt
data16
movsl
or
sti
lock
jmp
mov
ljmp
push
les
xchg
loopne
cmp
mov
les
or
jecxz
add
pop
push
push
add
inc
fimuls
bnd
dec
mov
pop
lcall
cmp
test
xor
fcomp
jp
shrb
push
inc
ja
pop
fs
out
xor
dec
jge
mov
mov
jle
mov
mov
jbe
fisttpl
xchg
das
shll
sbbl
jge
xchg
sbb
mov
mov
stos
push
in
jle
fdivrl
inc
mov
or
jl
jne
pop
cmc
fcomps
stos
jno
les
jae,pt
xor
rcrl
inc
xchg
addr16
pop
and
loope
mov
das
cmp
cs
sti
dec
mov
mov
lods
clc
xor
mov
push
adc
out
jmp
fmull
cmpsl
mov
ret
or
shr
cmp
jmp
dec
mov
das
popf
enter
cmp
adc
popa
outsl
dec
inc
jmp
jb
xchg
cltd
shl
btc
xchg
test
pop
cli
daa
idivb
cmp
aad
mov
or
mov
into
stc
lret
add
lds
in
mov
inc
add
mov
fstpl
mov
and
inc
lret
cmpsl
xchg
ds
fstps
xchg
and
sub
xchg
or
xchg
xchg
add
dec
xchg
add
loop
fisubl
pop
xchg
xchg
pop
clc
movsl
mov
pop
test
mov
gs
pop
mov
add
ret
xchg
sbb
mov
mov
sbb
scas
mov
scas
xor
pop
pop
mov
push
dec
into
cld
sub
lods
gs
cmp
aaa
jg
les
push
pfacc
push
cmp
inc
cmc
sar
shrb
idivb
mov
aam
push
es
mov
dec
mov
in
movsl
out
jnp
mov
mov
roll
xlat
or
sarl
sbb
xor
loop
inc
push
adc
negl
fistps
jl
daa
mov
add
mov
enter
in
dec
or
das
cmp
cmp
add
cmpsl
mov
mov
sbb
adc
dec
or
sbb
sti
cli
out
inc
pushf
insl
aad
por
gs
cmp
inc
pop
sub
jb
and
mov
push
xchg
jnp
ret
jle
push
mov
add
pop
inc
add
push
push
dec
mov
call
mov
pusha
aaa
sub
mov
add
mov
xorb
popf
or
xchg
jo
or
pop
je
jb
adc
lods
pop
xchg
movsl
lods
cmp
cmp
add
cmp
stc
das
xchg
stc
mov
mov
test
fisubrl
cmp
and
fstpt
ret
mov
mov
dec
hlt
test
cmp
and
aad
mov
sub
mov
mov
dec
popa
xor
xchg
dec
mov
mov
imul
aam
adc
add
inc
mov
xlat
pop
or
dec
pop
loope
add
and
push
jne
pop
cmp
cli
fmul
ret
xchg
cmp
out
dec
out
pop
jmp
push
adcl
popa
jo
fists
cli
scas
and
push
cld
insb
push
pop
rorb
mov
inc
sbb
andl
fst
cmpsb
mov
mov
popf
gs
in
adc
int3
dec
mov
stc
sub
push
loope
lret
push
push
test
orb
mov
jecxz
push
int
add
mov
pushf
stc
test
loopne
sti
orl
lock
adc
aaa
shrl
cmp
insl
jle
call
popf
in
and
aam
outsb
mov
daa
xor
push
or
outsl
hlt
inc
inc
sbb
clc
sub
mov
stos
dec
aad
mov
cmpl
ja
jbe
pushf
into
sbb
jno
inc
and
aad
mov
xor
or
pop
mov
outsb
out
mov
incl
xlat
clc
addr16
mov
cli
inc
sub
out
mov
and
sbb
shl
inc
les
shlb
decb
cwtl
lods
add
imulb
jbe
mov
and
shl
mov
cld
sub
test
pop
ret
pop
mov
sbb
mov
jb
out
sahf
cmpsb
dec
push
cmpsb
ficompl
cld
add
cmp
push
mov
iret
mov
out
dec
xlat
jecxz
jge
data16
lret
icebp
in
xchg
mov
mov
fmuls
inc
lods
clc
mov
push
loope
cli
lret
lds
push
sbb
mov
and
insb
and
out
lahf
loopne
add
or
cmp
mov
stos
cmp
dec
loopne
jbe
les
fsubr
adc
add
pop
insl
cmp
orb
cmp
push
sarl
cmp
fdiv
push
mov
adcl
and
inc
mov
dec
shrl
inc
js
push
push
xor
pop
scas
rol
xchg
outsl
test
stc
sarl
push
fs
imul
lret
sub
push
testb
or
inc
sub
loopne
inc
out
std
repnz
mov
cmp
fisubs
addr16
ja
adc
insl
sti
pusha
mul
mov
mov
or
imul
insl
push
jne
inc
out
xchg
jb
cmp
cmp
cli
int3
inc
xor
adc
and
ds
sub
mov
leave
add
sar
fcomp
ds
sbb
movsl
or
in
mov
push
adc
jne
stos
adc
jl
xchg
mov
cmc
nop
adc
mov
fwait
std
es
inc
repnz
mov
push
or
out
fidivrs
fwait
je
dec
cmpsb
ja
and
rclb
into
adc
test
sub
push
xchg
mov
mov
call
or
mov
pop
dec
movsb
inc
icebp
dec
mov
in
in
sbb
cmp
lds
sbbb
add
mov
cmpsl
lret
vmovupd
sub
sarb
fstps
xor
daa
dec
call
mov
pusha
fstpl
neg
jecxz
jo
and
stc
icebp
sarb
xchg
cmp
fdivr
imul
scas
xchg
cmp
adc
xor
mov
push
ja
lods
repnz
mov
inc
jnp
std
mov
mov
stos
cwtl
mov
push
inc
popf
std
and
or
pop
and
pop
das
lea
js
fsubr
cs
cmpsb
pop
mov
or
aaa
sbb
iret
sarl
into
data16
push
xchg
and
imul
jl
je
dec
sbb
hlt
hlt
int3
cmp
jns
dec
pop
adc
push
ja,pt
call
dec
sbb
lds
mov
xchg
frstor
arpl
jae
scas
dec
clc
aad
out
mov
mov
mov
movl
pop
lahf
or
mov
std
sarb
mov
hlt
out
lret
cmp
scas
mov
push
sbb
or
or
lret
push
addr16
movsl
sahf
fwait
lods
shll
or
stos
lahf
inc
inc
aad
jb
push
xchg
xchg
pop
out
sub
lods
lds
adc
add
cmp
and
iret
xorb
call
add
jmp
mov
loop
or
sub
add
mov
pop
sub
outsl
push
cmp
pop
push
add
cmc
sub
inc
mov
es
inc
sub
aam
mov
outsl
mov
popf
insb
rol
mov
les
lahf
stc
pushf
inc
imul
sti
shll
ja
sarl
fcompl
mov
mov
sub
out
mov
js
ljmp
mov
sar
adc
mov
adc
in
jns
rcrb
sti
ret
repz
std
mov
cmp
test
out
mov
push
pop
inc
ja
in
mov
pop
ds
inc
insl
lahf
mov
mov
push
sbb
pop
xchg
mov
pop
jno
sti
pop
inc
cmpsl
addr16
add
adc
sti
mov
and
xchg
ftst
mov
repz
loopne
js
stos
repnz
in
imul
ret
cld
sbb
or
and
xlat
inc
gs
rorb
xlat
mov
inc
inc
dec
repnz
repz
in
mov
sbb
mov
adc
popf
jge
push
mov
sbb
cli
test
aam
fst
rcl
insl
jo
mov
xor
xchg
rcl
andb
xchg
mov
xor
popa
or
inc
xor
cltd
push
jge
xchg
sub
push
or
rcr
push
nop
cmp
subl
add
test
dec
add
dec
jle
call
popf
test
mov
test
mov
push
fidivs
xor
inc
sbb
das
sbb
cmp
scas
out
imul
pop
cmp
add
rorl
gs
lahf
jmp
ficoms
mov
mov
sbb
mov
icebp
mov
cmc
iret
lahf
fdivr
rcll
inc
add
mov
or
pop
pusha
mov
clc
mov
and
mov
pushf
cmpsl
stos
xchg
fsubl
enter
xchg
addr16
pop
fdivr
lahf
sbb
adc
lret
add
lea
fsubrp
out
dec
xchg
mov
lds
adc
sbb
lret
mov
in
xchg
dec
or
popf
inc
pop
lock
pop
adc
stc
ret
int
imul
dec
xor
add
pop
add
jle
repz
into
leave
leave
loope
js
out
cmpsl
movsb
inc
xor
lret
jle
sbb
nop
dec
pop
mov
cld
and
insl
stos
pop
xchg
pop
in
gs
jb
test
lahf
push
push
rcll
add
out
aaa
mov
int3
dec
or
mov
aam
pop
icebp
mov
mov
mov
gs
or
mov
mov
lea
popl
sbb
lds
jle
mov
ja
dec
std
icebp
stc
enter
push
sbb
ret
insb
lahf
scas
lods
int3
fsts
repnz
jmp
sbb
insl
push
arpl
aam
push
jae
cmp
ret
push
jg
sahf
fidivs
in
jbe
xor
ds
sar
ficompl
dec
dec
mov
cmp
divl
fnstsw
inc
and
sbb
pushl
mov
lock
fnsave
or
and
sbb
and
bound
sbb
mov
jp
jnp
xchg
popa
fwait
ret
fstenv
pop
andl
mov
cwtl
inc
mov
jmp
out
jge
push
mov
iret
clc
jns
cmpb
push
xchg
movb
or
bound
fsubrp
xor
lahf
mov
ret
ret
mov
dec
jle
pop
lret
idivl
inc
leave
and
dec
dec
in
inc
or
and
repz
jb
inc
push
fldt
or
jg
stc
pop
call
cmpsb
or
mov
sbb
imul
push
out
ljmp
jle
xchg
adc
mov
andb
incb
cmp
sub
push
int
lods
sahf
cmp
and
lret
jmp
int
leave
xchg
movb
lock
je
cwtl
push
les
dec
outsb
js
les
xchg
or
aas
ficoml
rcrl
aam
jp
dec
xor
adc
scas
ds
ss
xor
enter
shr
cld
mov
add
xchg
imulb
push
rcrl
sbb
mov
clc
xchg
js
int
shlb
push
popf
icebp
jp
pop
mov
pusha
xchg
inc
inc
xchg
neg
adc
lods
ja
inc
cwtl
in
int3
add
adc
xchg
or
ret
hlt
pop
ds
cltd
jbe
pop
or
xor
orb
daa
sar
lret
mov
cld
push
pusha
xor
add
mov
inc
aad
js
mov
push
pop
fucom
xchg
xchg
push
shl
leave
ficoms
mov
mov
mov
sbb
mov
jnp
dec
mov
sbb
lea
mov
mov
in
xchg
stos
add
ret
cmc
mov
sub
out
inc
es
jae
lahf
mov
or
dec
dec
jae
stos
or
xchg
push
xchg
sub
push
cmp
or
mov
sbb
pop
mov
ss
fisttpll
dec
mov
mov
mov
aam
jg
xchg
lcall
add
shl
outsb
loopne
add
int3
mov
xlat
mov
ja
ret
push
inc
std
xchg
cmc
fistpll
pop
jo
enter
dec
imul
test
add
dec
pop
clc
ss
mov
cld
insb
jns
movsb
pop
enter
mov
mov
mov
outsb
and
adc
add
rorl
dec
xor
dec
dec
jns
repz
das
xor
cmp
les
xchg
into
xor
xor
pop
xchg
push
out
ret
mov
les
movsb
out
clc
out
add
js
mov
scas
cld
sub
out
push
cld
ja
popf
roll
xchg
xor
jg
fmull
mov
and
pop
push
imul
loop
jecxz,pn
jb
test
adc
cwtl
pop
in
or
inc
mov
mov
dec
dec
or
ss
out
inc
popa
imul
loopne
add
pop
mov
jbe
and
add
xchg
cmpsl
in
aaa
stos
imul
dec
mov
mov
mov
ret
imulb
cmp
lods
aam
sub
sub
mov
test
mov
cmp
or
push
add
inc
lock
mov
iret
shr
lods
or
js
shlb
test
cmc
inc
fldl2t
inc
dec
pusha
movsl
adc
xor
lods
inc
int
push
add
xor
sbb
insl
and
fnstsw
and
adc
jmp
jnp
test
jle
fwait
xor
decb
cmpsb
lret
and
nop
mov
sahf
je
and
out
pop
xchg
inc
les
stc
addr16
push
pop
and
bound
pop
in
or
jmp
and
fdivrl
mov
dec
xor
push
fdivrs
in
sarb
popf
std
pop
test
in
f2xm1
popa
mov
inc
xchg
jge
or
fimull
xor
ficompl
out
insb
xchg
hlt
xchg
mov
mov
xlat
lods
pop
xlat
cs
jl
decb
jl
clc
pop
push
mov
xchg
hlt
xor
ljmp
mov
lods
and
mov
add
in
sbb
call
xor
or
popf
out
push
fwait
mov
dec
hlt
pop
cmp
sbb
xchg
iret
rclb
mov
cmc
add
fwait
cs
fwait
daa
xor
mov
mov
leave
lds
aas
test
push
push
inc
rcr
test
out
inc
mov
lret
shlb
mov
jno
fists
rep
popa
test
out
outsb
fisubs
xchg
dec
jle
or
ljmp
imul
addl
xchg
mov
jle
xchg
aam
pop
pusha
jo
and
icebp
pop
push
aam
pop
out
xchg
icebp
xchg
cli
mov
test
test
addr16
pop
adc
mov
imul
mov
xor
fdiv
cmp
pop
push
jmp
lret
xchg
xor
leave
inc
sbb
jecxz
sbbl
and
scas
inc
loop
sub
stos
pop
push
aas
inc
insb
inc
mov
insl
mov
icebp
and
stos
lds
out
mov
xlat
mov
std
lods
or
pop
ljmp
cmp
rclb
inc
mov
sbb
insl
or
pop
stc
sub
popa
popf
xor
mov
lock
in
out
inc
iret
psadbw
std
and
add
jecxz
data16
ljmp
xchg
out
xor
jbe
mov
shll
and
ficoml
test
cmp
adc
mov
loop
or
popf
jmp
mov
jecxz
mov
lret
imul
sub
pop
int3
daa
mov
mov
and
mov
sahf
sti
adc
fadds
popf
mov
dec
sub
hlt
ss
movsl
scas
push
cld
cs
cli
cmp
jb
add
bound
sub
imull
loope
imul
cmpsb
inc
mov
jg
lret
sbb
loop
lea
push
jo
cmp
pop
mov
in
ret
in
push
bound
jp
lret
mov
sub
push
lea
cli
outsb
add
in
lret
out
dec
fldenv
fst
push
xor
push
addr16
pop
add
int3
xchg
pop
fildl
adc
arpl
mov
xchg
idiv
popf
mov
jge
mov
sbb
mov
xchg
div
pop
test
jecxz
pop
mov
sbb
sub
mov
js
orb
lock
jle
and
pushf
lock
es
into
jns
js
dec
je
xlat
push
cmp
or
or
out
or
mov
dec
sbbl
push
mov
lods
insl
daa
lret
adc
sub
push
mov
mov
sub
lock
mov
fisttps
jp
xor
mov
or
sub
in
sbb
pop
lret
clc
adc
outsb
dec
mov
pop
and
lret
or
xor
and
and
in
jmp
daa
in
xor
pop
and
xor
jg
inc
jp
stos
add
out
das
cmp
les
mov
or
daa
lds
sbb
int
mov
mov
xchg
loop
dec
or
sub
cmc
test
ja
lcall
and
shl
insb
in
std
mov
dec
or
pop
mov
cli
aas
nop
mov
filds
xchg
jbe
mov
ficoms
ret
jp
sbb
popf
out
cmp
inc
scas
aam
scas
xor
in
test
adcl
jbe
pop
mov
jno
js
das
pop
orps
xor
dec
loopne
adc
inc
xor
mov
cld
ret
sub
fs
lret
shrb
hlt
aaa
imul
cmpsl
loopne
jl
mov
cli
push
int
or
jge
nop
and
scas
inc
jb
lods
add
adc
pushf
push
loop
mov
rol
addr16
or
and
adc
outsl
ljmp
jae
mov
jns
cmp
jecxz
mov
jns
sub
adc
push
mov
and
sub
mov
shlb
pop
fldl
pop
cwtl
ret
pushl
adc
outsl
xor
mov
push
dec
mov
cwtl
push
in
jno
push
popf
dec
jp
shlb
ret
mov
mov
or
outsb
loop
call
sub
and
fldl
fistpll
rcr
ret
call
stc
idivb
dec
jno
out
outsb
inc
sbb
in
fldcw
lock
mov
popa
cmp
icebp
in
jne
sahf
xlat
pop
push
cmp
cmp
pop
mov
sbb
inc
pop
lock
cltd
sub
sub
aad
outsb
mov
pop
orl
daa
xchg
out
test
mov
xchg
dec
cwtl
push
ljmp
fdivl
pop
lds
adc
mov
and
mov
imul
sub
inc
divl
insl
xor
fmul
sbb
fsubrl
cmpsl
jb
notb
cmpsl
nopl
mov
xlat
sbb
fsubs
sbb
aas
mov
fidivs
mov
push
imul
push
pop
sub
mov
and
inc
jg
dec
lret
fisttps
xor
loope
fisubrs
lret
loopne
add
xchg
jmp
int3
test
dec
dec
out
dec
cmp
out
jecxz
idivl
sub
push
mov
scas
fisubl
call
ficomps
mov
pop
es
das
hlt
imul
xchg
cmp
adc
sub
xor
lret
negl
sbbl
stos
mov
push
push
mov
cmp
fmull
pusha
xchg
dec
cli
stos
mov
push
pop
shll
je
mov
cmp
adc
cmpsb
push
inc
mov
jmp
out
pop
bound
mov
sbb
nop
mov
cmp
sub
repnz
lcall
fdivl
and
loope
aaa
dec
cmp
cli
cmp
inc
and
and
and
xor
test
xchg
and
xchg
repz
or
inc
inc
test
outsb
iret
jl
mov
xchg
xchg
adc
cltd
add
cmpsl
pop
testb
dec
mov
xor
fdivp
cmp
lahf
adc
loope
jns
sarb
sbb
adc
std
mov
sbb
xchg
mov
addb
pusha
mov
sbbl
xchg
mov
jge
or
cmp
xor
aas
aad
jmp
ja
inc
and
outsb
addr16
pop
pop
dec
sbb
mov
jae
xor
bound
lds
into
nop
push
ss
aas
adc
jno
push
jbe
inc
add
hlt
lods
sahf
jo
mov
xchg
adc
jae
stc
pop
iret
mov
and
je
fwait
pop
in
inc
ret
mov
js
repnz
cltd
mov
arpl
mov
mov
jns
int
sub
test
sub
into
stos
jnp
jae
xlat
inc
outsl
adc
ret
popf
sub
pop
jnp
sub
pop
push
inc
mov
xchg
cmpsl
int
xchg
imul
xor
ljmp
dec
fildl
fcoml
faddl
into
imul
leave
outsl
adc
loopne
lret
out
inc
and
mov
add
inc
adc
lods
aaa
xor
inc
mov
push
test
xchg
jo
cmp
cmp
mov
mov
lods
out
cmp
push
outsl
aam
xor
adc
in
shr
call
inc
mov
scas
sbb
xor
mov
adc
or
adc
or
enter
pop
pop
ja
inc
addb
jle
das
rclb
fildll
push
push
clc
mov
jae
clc
mov
imul
rcpps
jle
push
push
ljmp
ss
mov
xlat
jl
and
mov
xor
orl
dec
adc
xchg
xlat
lret
mov
scas
mov
daa
cmp
bound
rcll
adc
adc
jmp
outsb
outsb
xchg
sub
out
ret
daa
movsb
push
mov
in
jl
sbb
xchg
push
aaa
insl
iret
fnstenv
or
negl
xor
pop
mov
push
insl
cmpsl
addr16
mov
mov
push
test
add
sbbb
insl
stos
sub
pop
pop
mov
xorl
mov
rorl
sub
fisttpll
mov
mov
lahf
arpl
inc
or
fcomps
scas
dec
frstor
mov
stos
inc
mov
stos
cmp
pop
cmp
mov
xchg
loopne
jo
sbb
jb
jb
sub
xor
scas
popf
daa
or
test
call
mov
in
push
mov
jns
filds
jl
inc
lock
test
sub
sub
adc
xor
push
push
or
in
fwait
dec
rcll
pop
sub
dec
popa
test
loope
xchg
add
jge
mov
nop
xchg
stos
jb
lds
mov
popf
mov
xor
mov
incl
in
fdivrl
filds
dec
mov
test
shll
out
rcrl
cmp
jecxz
push
xrelease
jmp
mov
dec
cmp
insb
or
fiadds
insl
pop
mov
mov
xor
push
jl
into
jnp
fnstenv
inc
rcl
mov
jle
pop
mov
xchg
pop
jne
or
dec
lret
shl
je
inc
xchg
cli
es
scas
push
clc
sub
xor
repz
jne
stc
push
xlat
mov
sbb
nop
push
jb
es
push
in
cmpsb
rep
pop
cmc
les
mov
push
dec
cmpsb
push
mov
movsl
pop
lea
sub
insb
into
mov
ja
rep
sub
rorl
lahf
imul
mov
rorl
mov
cmp
movsl
push
js
inc
cmp
pop
cmp
cmpl
push
lods
xor
and
dec
enter
cmp
push
sti
pop
add
mov
jo
add
push
xlat
pop
or
push
and
daa
or
ljmp
mov
rol
inc
hlt
and
sbbl
adc
test
adc
das
sbb
outsb
pop
or
cld
add
jecxz
cmp
or
jmp
adc
xchg
mov
sbbb
mov
sbb
pop
dec
ds
xor
xchg
xchg
jmp
pop
cltd
mov
mov
movb
cltd
fwait
out
jns
pop
movsb
adc
pop
mov
scas
shl
xchg
out
lret
xor
add
sub
and
mov
imul
or
pop
sub
std
jnp
dec
xor
je
data16
mov
sub
push
out
mov
in
xor
sar
lret
and
adc
inc
jo
and
pop
mov
int3
fistpl
in
std
inc
push
cmp
sub
loopne
cmpsb
adc
jne
inc
push
push
inc
mov
popa
scas
lret
popf
mov
cli
mov
in
pusha
inc
sub
enter
ret
sub
or
je
push
mov
cmp
mov
outsb
dec
cmp
pop
dec
setns
xor
call
mov
not
sub
jl
fdivrl
cmp
sti
jmp
bnd
jnp
ljmp
mov
sub
cmp
fcmovnu
ds
lods
imul
into
ret
add
ds
xchg
sub
addr16
daa
lods
mov
add
mov
sbb
mov
lods
nop
aas
jo
sub
xchg
pop
dec
inc
shl
scas
stos
or
arpl
in
fildll
mov
push
out
js
jno
inc
pop
mov
push
rolb
sub
sbb
cmp
and
int3
jl
in
jne
xchg
or
adc
push
ljmp
push
bound
push
in
mov
imul
in
or
notl
mov
cmpb
jge
scas
jg
daa
out
xor
add
mov
adc
mov
mov
push
lds
ds
cmpsl
ss
sub
sub
lock
mov
dec
and
int
paddb
push
xor
or
sub
dec
imul
mov
nop
cmpsb
inc
mov
fimull
inc
lods
hlt
insl
gs
fistl
cmp
mov
jmp
fcmovbe
test
icebp
and
sbb
lea
std
xor
mov
xor
and
xchg
jg
sbb
sbb
pop
or
mov
aas
popf
push
ss
mov
test
addl
nop
and
inc
out
mov
mov
sbb
nop
test
mov
xchg
enter
dec
or
mov
push
sub
cmp
or
cmpsl
dec
daa
rorl
iret
out
pop
jae
dec
dec
repz
les
pop
js
dec
dec
and
and
mov
insb
sub
mov
and
push
mov
gs
pop
pop
lock
in
test
movl
scas
pop
xchg
adc
mov
add
subl
mov
cmp
iret
jo
pop
cli
xchg
in
or
jo
xchg
jo
sti
mov
je
dec
push
mov
dec
mov
test
inc
mov
outsl
cmp
int3
sbb
and
jg
mov
mov
pop
xlat
sbb
pop
xor
dec
jg
fsubs
outsb
pop
jg
out
roll
xorb
mov
addr16
push
adc
sbb
pop
mov
into
push
xor
or
push
add
pop
cmp
clc
sub
push
xchg
lea
xor
imul
add
xchg
into
inc
add
mov
push
cmp
dec
sahf
jo
and
add
mov
push
inc
pushl
aaa
test
push
add
fsubrl
inc
insl
iret
sbb
repz
or
and
outsb
rcrb
xor
xchg
add
add
jge
xchg
dec
testl
mov
push
adc
popa
aad
lcall
jbe
adcb
test
jne
in
mov
mov
cwtl
incb
or
and
pop
cld
and
inc
sbb
and
repnz
sbb
cmp
sbb
scas
pop
cmp
mov
aam
imul
addb
pop
loop
aaa
inc
mov
add
cltd
sti
inc
inc
sub
xchg
loope
inc
bound
xchg
jb
push
orb
pop
adc
cld
mov
in
arpl
cmp
clc
jb
rcrl
cmp
dec
dec
sub
out
push
adc
cmpsb
int3
hlt
aam
stos
sbbb
fldt
iret
fldl
pop
dec
add
iret
xlat
adc
sub
pop
dec
outsb
push
lods
imul
enter
push
cmpsl
pop
mov
mov
mov
out
testl
clc
inc
aad
loopne
movsb
or
pop
inc
es
in
dec
mov
xchg
mov
gs
call
shl
add
scas
adc
xchg
cmp
inc
add
mov
sbb
xchg
movsl
lahf
call
mov
outsb
cmp
pop
int3
mov
andl
call
cmpsl
das
repnz
fwait
ja
call
add
cli
mov
cmp
push
pop
sahf
lcall
sbbb
dec
jnp
sbb
scas
mov
cmp
pop
subb
fistpll
int
cmp
pop
adc
js
jo
push
test
xchg
cmp
mov
test
push
daa
lret
xchg
in
cmp
sub
dec
sbb
mov
repz
ljmp
sub
test
mov
popf
add
loopne
flds
mov
xchg
addb
push
scas
int
jnp
and
cmc
add
lods
shr
nop
popa
push
enter
lods
sbb
and
call
mov
das
or
ret
push
and
sbb
in
mov
int3
hlt
jmp
pusha
mov
das
push
push
sub
icebp
pause
pop
mov
addb
popa
or
out
xchg
xchg
sub
shrl
push
or
cwtl
pushf
fmuls
gs
sub
dec
inc
adc
pop
dec
imul
insb
sbb
imul
mov
mov
cmc
aad
icebp
pusha
loop
lret
aam
ret
mov
xlat
add
sub
ss
xchg
xlat
xchg
or
addb
loope
ja
notl
add
cld
push
inc
or
jl
js
pop
mov
bound
fcmovnbe
xchg
repz
fdivrs
lods
sbb
insl
mov
dec
pop
adc
cli
ja
push
sbb
pop
subl
data16
xor
xchg
dec
aam
repz
adc
in
or
sarl
cli
push
xorl
push
ret
aam
ss
mov
cmp
test
or
lea
ret
cmc
mov
js
xor
jno
dec
xor
pop
pop
mov
daa
xchg
mov
stc
mov
pop
jno
xlat
std
inc
adc
repnz
mov
dec
push
rcrb
mov
stc
jnp
idivl
sbb
stos
mov
aaa
cmp
pop
mov
jl
pop
add
pop
into
dec
cmpsb
fdivs
imul
pop
imul
loope
jge
sub
mov
adc
jecxz
sarl
inc
xlat
xor
pop
jnp
mov
xchg
shrl
es
and
and
jmp
daa
push
jp
cmpsl
dec
jge
out
shlb
mov
stc
cmp
xlat
fimull
xchg
jne
ds
mov
sbbl
enter
push
add
shrl
mov
aas
mov
push
aas
mov
mov
mov
mov
rclb
jle
and
mov
and
clc
imul
push
xor
dec
pop
fbld
pop
mov
out
shll
lea
mov
cmp
adc
mov
ss
sbb
xchg
pop
dec
jl
out
inc
sbb
outsb
out
jne
sbb
lods
xchg
and
xor
int
dec
ret
inc
jl
into
movsl
arpl
les
pop
mov
xor
cltd
mov
add
rcrb
in
imul
out
lret
lahf
push
int
test
and
das
enter
dec
daa
sbb
push
push
lods
xor
das
enter
addb
and
xor
pusha
test
mov
roll
add
sub
push
fidivs
outsl
fsubrs
pop
inc
jge
ret
movsl
lret
mov
incb
js
sub
push
push
fdivrl
add
mov
inc
xchg
mov
bound
clc
mov
add
mov
insb
dec
loopne
push
xchg
dec
dec
addb
lods
ja
mov
daa
mov
ror
je
ds
jle
pop
mov
mov
mov
jne
loop
cmp
add
sti
sub
mov
ds
aas
fs
inc
cltd
pop
out
mov
test
xchg
xchg
cmpsl
inc
mov
pop
call
mov
add
pop
cli
xchg
stos
test
fdivrs
ds
sbb
divb
cmc
stos
mov
jmp
lea
ljmp
lds
and
adc
div
add
sub
mov
xor
jmp
push
outsb
mov
dec
add
and
push
sbb
jo
sub
mov
cmc
gs
das
pop
xor
add
and
ds
inc
pop
stc
mov
lods
add
dec
outsb
mov
sbb
subb
out
std
adc
jge
jb
adc
jle
mov
add
lret
push
cli
mull
sub
mov
add
sti
xor
stc
leave
sub
xor
mov
xor
leave
in
mov
repz
in
das
adc
xchg
int3
dec
inc
pop
enter
mov
jb
mov
push
arpl
jbe
mov
inc
lret
popf
rcll
inc
in
push
iret
fcmove
jae
in
inc
pop
sti
scas
call
mov
jecxz
arpl
mov
mov
xchg
js
xor
dec
and
je
mov
lahf
sub
mov
adc
mov
inc
adc
sub
sbb
rolb
inc
sub
jae
loop
popl
insb
or
mov
inc
imul
sbb
pop
nop
pop
dec
data16
sbb
fldenv
and
imul
repnz
into
jmp
outsl
push
sbb
mov
xor
sub
push
jo
arpl
clc
shlb
subb
loopne
pop
pop
stos
fs
xor
test
mov
aas
cmpsl
mull
stos
sub
hlt
fcomps
push
lahf
rcl
lods
lahf
cmp
lea
sbb
inc
loope
loopne
int3
insb
pop
test
xchg
cwtl
lock
dec
xchg
lret
ljmp
out
cmpsl
sar
xor
jo
jns
xor
mov
popa
sbb
push
sbb
xor
sbb
js
add
mov
stos
rorb
aaa
mov
push
xor
dec
das
aas
dec
mov
pop
sub
clc
fdivrs
jns
mov
or
outsl
sub
rcrl
scas
pop
fisttpll
arpl
aad
pop
jg
xchg
pop
inc
mov
hlt
loop
cmp
jo
outsb
mov
addr16
sub
sub
test
decb
and
mov
push
shl
dec
jl
xorb
mov
pop
cmp
sbb
out
cltd
into
ficoms
sarb
dec
dec
test
push
in
inc
loope
cli
push
pop
movsb
out
mov
mov
pusha
pop
sub
clc
ds
imul
loopne
lds
sbb
mov
push
hlt
insl
rorb
push
out
out
add
cmp
xor
aam
add
push
sahf
xor
adc
cs
mov
pop
sbb
bound
popa
xor
cwtl
mov
cld
jp
or
add
inc
sbbl
push
movsl
mov
sbb
xchg
cli
mov
std
call
pushf
leave
sub
lahf
test
xchg
xchg
and
jmp
mov
mov
outsl
mov
dec
jae
lahf
mov
and
jno
mov
or
mov
in
mov
xor
fdivrp
and
and
notl
mov
dec
pop
sub
lret
sub
pop
fimuls
jmp
inc
jnp
xchg
dec
xchg
imul
loope
xor
aas
fdivs
or
jno
in
push
imul
xchg
mov
add
test
push
cli
pop
ds
dec
xorl
addb
adc
insb
fisttps
gs
outsl
imul
mov
jmp
iret
or
cltd
daa
int
call
ds
jo
inc
jg
int
lods
jg
mov
dec
push
mov
cli
pop
pop
mov
pop
sbb
mov
xchg
adc
repnz
mov
in
aam
cld
pop
xlat
aaa
das
es
xor
filds
sbb
xchg
xchg
xchg
mov
dec
inc
pop
jmp
test
notb
cmpsl
mov
in
jno
jp
into
aas
push
rcrb
push
js
adcl
cs
lods
dec
sub
inc
rclb
ret
mov
das
jp
into
sub
push
stos
in
sbb
sbb
jg
lods
sarb
mov
add
clc
push
mov
test
cs
jg
or
js
adc
shlb
xor
xor
xchg
sbb
sub
shrb
cli
mov
pop
pop
in
mov
mov
xchg
xor
rolb
je
test
ffree
or
sub
pop
or
and
jge
inc
mov
jb
test
and
outsl
mov
loope
outsl
ret
sti
dec
or
mov
arpl
mov
stos
ret
out
cmp
cmp
cmp
shlb
lret
pop
daa
xchg
jge
mov
stos
mov
insl
cwtl
movsb
je
pop
sub
mov
arpl
mov
test
popf
pushf
cmp
movsl
insl
ljmp
sti
sub
mov
shlb
ja
sub
int
inc
xchg
clc
lret
mov
dec
sub
inc
daa
mov
cmpsb
lcall
dec
xor
sahf
in
push
xchg
mov
dec
lods
fists
jae
data16
das
mov
sub
mov
es
jge
cmp
pop
fwait
scas
jo
inc
idiv
mov
and
call
dec
xchg
pusha
pop
daa
mov
popfw
cmc
push
add
push
inc
mov
or
repz
movsb
in
push
or
ss
xchg
mov
fsubrs
int3
in
les
mov
mov
push
es
cwtl
aad
jg
add
mov
aaa
pop
cmp
xchg
jle,pt
add
sbb
insb
test
xor
push
xor
push
ret
mov
rorb
push
jl
and
and
scas
jb
int
inc
inc
jmp
xchg
sarb
mov
or
sarl
shl
xor
lahf
pop
push
inc
cld
pop
mov
jg
roll
jmp
addb
lret
addr16
ret
mov
std
les
mov
sbb
std
push
and
test
sub
xchg
jo
ja
jae
mov
inc
mov
int
rol
mov
cmp
std
xchg
dec
xchg
lock
pop
fmull
sbb
cld
xor
pop
add
icebp
mov
mov
loop
mov
dec
fldcw
mov
or
mov
stc
xchg
pop
inc
mov
jbe
sahf
dec
mov
in
cld
lds
jp,pn
sbb
pop
jns
jne
lods
cld
lds
sub
push
js
jg
xchg
leave
mov
add
xor
test
jns
adc
leave
popf
ficoml
push
add
fdivs
mov
in
push
cli
out
popf
lds
xor
ds
insl
dec
ja
subl
shrb
leave
pushf
pop
add
addr16
les
cs
nop
out
ja
xor
add
mov
int3
xor
loope
push
ja
and
mov
mov
fiaddl
loope
repnz
shll
cmc
movsb
loope
arpl
fwait
inc
inc
popa
mov
sub
adc
insb
jge
rol
or
enter
push
pop
cmp
nop
jne
outsl
push
shlb
cltd
movsl
xchg
ret
pop
and
mov
popf
xchg
cmpsb
adc
imul
fisttpl
lods
push
xchg
mov
fimull
push
fnsetpm(287
jmp
lods
leave
out
mov
xor
int3
mov
sub
mov
pop
daa
test
adc
and
inc
sub
sub
dec
scas
fwait
gs
js
inc
sbb
xchg
hlt
xchg
xor
testl
pop
pmuludq
dec
rorb
notl
leave
sbb
sbb
push
mov
push
pop
mov
andl
out
sub
xor
mov
push
pop
in
mov
dec
jns
clc
cmp
dec
cmpsb
and
je
mov
pusha
pop
js
mov
push
cld
lcall
in
insb
sbb
xlat
dec
mov
mov
xchg
adc
xchg
ret
mov
dec
ret
mov
mulb
in
sub
xor
lret
or
xchg
ja
fnstenv
test
sbb
adc
and
clc
jbe
sbb
les
sar
std
fimull
loope
decl
push
sub
mov
frstor
jecxz
ret
jns
decl
pushf
lea
xor
xorb
xchg
call
ret
jo
jge
xorl
cs
inc
shrl
sar
mov
pop
sbb
andb
stc
arpl
and
bnd
out
sbb
outsb
imul
sbb
cltd
scas
cs
add
pop
lret
ds
sti
sub
dec
dec
std
lret
pop
mov
ret
jp
jnp
ljmp
outsl
cmp
std
dec
cmc
lods
and
xchg
push
shlb
mov
jb
aad
xor
data16
sbb
int
repnz
pop
or
jae
in
dec
popa
push
scas
sti
mov
pop
push
popf
cli
or
inc
xor
inc
add
mov
ljmp
aaa
or
xchg
dec
pop
push
or
jl
inc
divl
fisubrs
mov
push
mov
lods
mov
inc
mov
dec
xor
push
push
dec
jne
add
pusha
jns
sub
dec
rcrl
je
sahf
pop
jne
shll
fildll
xor
jp
xor
pop
daa
push
mov
push
mov
scas
popa
ret
jae
ret
cmp
adc
sahf
dec
leave
inc
xor
jns
sub
mov
add
xchg
hlt
mov
push
out
mov
lret
aaa
imul
push
imulb
sahf
or
mov
or
adc
xchg
xor
in
pop
lock
jmp
lock
xor
xor
sub
xchg
fbld
cmp
mov
lret
pop
xor
xor
ret
sub
or
xor
mov
mov
in
lcall
mov
fld
jge
mov
adc
inc
js
movsb
rol
dec
lds
xchg
rol
dec
xchg
fisttps
mov
sti
sub
fidivrl
and
imul
out
in
rolb
mov
add
pop
add
je
jns
fsubl
mov
into
mov
ljmp
clc
pop
leave
ret
jo
cmp
out
aaa
aad
pop
inc
outsb
cmc
shlb
cmp
dec
inc
mov
out
inc
ljmp
rclb
add
push
and
sbb
mov
inc
sarl
testb
fstl
inc
aam
pop
or
xor
add
into
mov
push
ljmp
sbb
es
pop
mov
nop
dec
or
es
sub
push
push
mov
jle
push
movsb
sub
inc
fisubrl
loop
mov
xchg
add
ljmp
in
stos
movsl
push
push
ja
xchg
movups
pop
xchg
jne
dec
pushf
dec
ja
pop
repnz
pushf
out
fdivs
dec
lods
fistpl
inc
ret
int3
adc
push
iret
dec
fistl
mov
xor
lcall
mov
sbb
mov
xchg
pop
xchg
xor
and
pop
stc
xchg
xchg
jmp
das
cmp
add
call
xchg
pushf
xor
addl
dec
dec
cmp
scas
sbb
insl
fistpll
and
jge
nop
inc
sti
mov
or
divb
mov
jge
or
bound
push
cltd
sub
and
mov
mov
cmp
test
imul
rcrl
aaa
mov
aaa
jg
lods
add
mov
or
and
push
bound
or
xor
ss
push
sub
jmp
mov
adc
xor
sti
inc
inc
aam
inc
mov
jbe
and
mov
push
sahf
cmp
arpl
cmpsl
lret
sbb
fnstenv
cmp
aam
push
push
jns
sti
mov
cmpsl
daa
and
out
shr
sti
out
and
mov
movsl
cmp
into
in
jns
inc
in
icebp
pop
pop
xor
loope
xor
xchg
arpl
push
mov
adc
sub
and
xchg
stos
sbb
xchg
jge
pop
pop
cmp
xchg
dec
loope
cmc
pop
test
xor
mov
cli
pop
or
and
or
scas
je
cmpsl
and
push
int
jb
in
in
adc
dec
shlb
std
fsts
xor
lret
sub
mov
push
adc
mov
fwait
shrl
pushf
sub
pop
add
filds
out
xor
ja
ja
mov
scas
dec
pop
popf
xor
ds
cs
jp
inc
xchg
dec
jnp
loopne
mov
push
mov
jecxz
fwait
push
es
popf
or
pop
cmp
jle
lahf
push
or
jb
movsl
cmp
daa
cmpsl
cmc
cmp
jmp
lea
jno
xorl
adc
add
xor
sar
into
cwtl
cmpsl
ret
sub
fwait
ljmp
inc
es
addr16
flds
ret
push
adc
mov
xchg
daa
scas
and
test
loope
mov
fs
call
xchg
cmp
xchg
lahf
mov
adc
in
inc
sahf
dec
addr16
or
add
xor
dec
mov
inc
mov
jle
pop
in
std
jle
ret
outsb
or
xchg
int
pop
popf
out
pop
scas
ja
mov
and
jmp
movsl
mov
in
jbe
test
push
insl
fsubs
sub
loopne
imul
enter
shll
inc
and
inc
repnz
jg
scas
sbb
and
inc
adc
mov
filds
jne
fsubr
sbb
sub
adc
loop
arpl
pop
divl
jbe
lods
imul
add
push
mov
nop
fisttps
jle
or
cmpsb
inc
adc
push
repz
ljmp
ds
push
push
jge
mov
cwtl
jl
mov
mov
aas
pop
xchg
mov
imull
int3
je
xchg
mov
cs
jl
mov
outsl
lret
xorl
lcall
mov
pop
xlat
daa
pop
dec
mov
movsb
push
popl
arpl
repz
mov
scas
pushf
repnz
lahf
pop
mov
nop
inc
and
and
cld
enter
stos
mov
sbb
push
or
dec
inc
sub
push
popa
inc
jmp
cmc
jne
jmp
mov
add
int3
decb
adc
in
test
adc
inc
data16
loope
mov
in
mov
dec
or
mov
xchg
cltd
add
shlb
jp
ss
adc
cmp
jg
push
xlat
jge
rcl
fstpl
fidivrl
jle
mov
push
inc
mov
mov
xchg
je
aaa
xor
rcrl
clc
adc
mov
mov
pop
and
dec
and
xor
xchg
jno
jp
add
pop
mov
addb
testl
or
jns
push
sub
push
mov
push
aaa
dec
dec
out
or
fcomip
idiv
hlt
ret
int3
fadds
xchg
nop
lds
shll
xchg
or
lret
xor
fstpt
movsb
insb
inc
mov
out
add
loope
jp
mov
sysret
js
rol
imull
inc
daa
aaa
or
sbb
mov
jl
outsb
fistps
cld
and
sti
jmp
xchg
push
ja
cld
inc
rol
pop
jne
int
cmp
adc
btr
sub
insb
inc
leave
dec
iret
jnp
sti
lods
aam
mov
outsl
roll
push
movl
or
adc
andb
mov
jns
fwait
imul
mov
xor
dec
lods
add
xchg
push
pop
pop
js
je
sbb
sbb
addr16
push
cli
xor
mov
push
pop
or
xor
inc
jno
xor
add
mov
hlt
and
sub
pop
dec
jl
xor
cmp
and
and
sbb
pop
cmp
cmpl
mov
jmp
dec
fstl
sub
adcl
lock
pop
and
stc
iret
mov
dec
imul
addr16
jge
callw
or
imull
sub
loop
mov
lods
mov
addb
cld
pop
test
pusha
inc
scas
jl
bound
mov
xchg
int3
cli
jmp
daa
loopne
bound
dec
dec
dec
push
adc
fadds
lods
sub
js
and
mov
mov
popf
mov
sub
jo
mov
adc
inc
xor
daa
pop
push
jo
mov
cmp
push
xor
sub
cwtl
and
dec
xchg
jge
pushf
xor
stos
hlt
xchg
clc
sti
mov
jno
cli
fisttpl
xchg
cmp
movb
mov
pop
and
or
fstsw
fisttps
jp
pop
dec
cwtl
jne
jecxz
aad
ret
enter
insl
call
mov
es
out
aaa
scas
jl
negb
cwtl
movsl
ficoms
pop
ds
mov
pop
out
mov
xor
fimuls
cmpsb
sbb
sbb
add
daa
xchg
sub
xchg
lcall
out
bound
or
std
sbb
pop
lods
sub
and
adc
out
insl
push
lcall
lret
fldcw
jg
in
lods
jne
or
cmp
jg
shll
mov
xor
fwait
push
movsl
push
push
cli
dec
ja
outsb
ds
mov
into
or
repz
movsb
shrb
adc
orl
sarl
pushf
mov
popf
test
and
fstps
push
pop
push
popw
lds
jl
xchg
sub
fisttpll
clc
ds
sub
test
pop
dec
fldenv
fdivs
jbe
mov
push
mov
test
out
mov
loop
xchg
fstpl
xlat
pop
mul
in
aas
sub
mov
pushf
add
sub
jecxz
mov
in
bound
pop
sbb
aas
pop
ret
mov
xor
das
xor
xor
cmp
hlt
xchg
ja
hlt
pop
ljmp
dec
decb
scas
repz
pinsrw
and
lock
shl
dec
mov
insb
out
andl
cmp
dec
jl
pop
xchg
push
sbb
xchg
in
xchg
mov
mov
lea
out
cmp
fbstp
xlat
sbb
push
mov
imul
dec
imul
mov
xchg
icebp
cmp
fbstp
testl
inc
mov
jmp
data16
leave
sub
add
or
mov
xchg
xchg
divl
cli
mov
arpl
cmc
jg
push
sbb
sbb
scas
ljmp
out
mov
mov
repz
int3
xlat
call
sub
push
push
xor
xchg
mov
pushf
adc
arpl
iret
mov
fdivrl
lret
adc
xchg
jo
fimuls
outsl
sbb
mov
stos
bound
in
jecxz
bound
xchg
dec
int3
mov
stc
xor
lret
test
mov
xor
scas
mov
enter
jecxz
or
jmp
pop
popa
shr
push
mov
xor
pop
sub
mov
div
in
push
test
xchg
aaa
daa
in
sbb
xchg
adc
fcomps
xor
push
jne
and
clc
xchg
test
adc
out
daa
or
push
adc
out
jg
sbb
mov
mov
jo
fwait
mov
shrl
pop
push
cli
jne
into
jae
or
aaa
sub
fists
xchg
mov
inc
test
ds
cmp
mov
sbb
mov
sbb
out
fnsave
pop
add
push
sbb
jo
sub
das
push
push
mov
or
cmc
sti
fstpt
mov
mov
push
dec
fsubrs
lods
push
mov
sub
adc
dec
mov
inc
ja
sti
add
or
jne
repz
inc
cltd
jle
xor
jae
add
lock
pop
aaa
lock
push
mov
add
jne
std
push
dec
mov
out
adc
clc
lods
cmp
xchg
sahf
aam
cmpsl
lahf
jg
mov
aas
pop
cmp
jnp
adc
push
pop
ss
shl
popf
je
aas
lret
shlb
rorl
mov
js
xor
adc
sub
dec
iret
int3
mov
bound
dec
mull
iret
dec
push
int3
fdiv
ret
fcmovnbe
mov
sahf
stc
test
cmp
or
cmc
sub
jo
and
lcall
jo
mov
das
loop
repnz
add
lods
cmp
testb
ljmp
in
fs
in
cli
out
add
lods
cmp
jae
orb
iret
das
daa
mov
shrb
push
jns
lods
or
inc
shlw
mov
xchg
into
negb
lea
aad
push
repnz
fucom
push
xchg
scas
repz
cwtl
inc
fists
stc
xchg
mov
mov
jmp
test
movsb
bnd
lret
mov
aam
aas
xor
es
cmpsb
lcall
aas
pop
jne
xor
xchg
cmp
cmp
dec
jbe
xchg
add
push
jl
push
lret
mov
pop
movsb
sub
into
push
repz
pop
sbb
pop
sub
mov
jmp
dec
rorl
dec
into
fisubrs
cmpsb
or
xor
push
mov
loope
mov
scas
clc
lock
sti
test
sub
testl
mov
sahf
jo
popf
shll
incl
in
out
in
cmp
mov
jo
sbb
mov
shr
inc
cwtl
jae
dec
aaa
sti
and
mov
inc
in
cmp
xor
iret
inc
push
outsl
ss
mov
aad
fimull
jbe
hlt
pop
in
hlt
xor
add
push
test
stos
sub
push
fcmovnb
stos
add
lahf
shl
jecxz
mov
pop
in
test
clc
les
xor
je
cmp
mov
xchg
lahf
cmp
cmp
cltd
or
mov
cs
cwtl
xchg
pop
mov
fstl
ret
andl
dec
loop
mov
mov
out
adc
and
aaa
rolb
xor
push
outsb
ficoms
fsub
out
movsb
adc
mov
lret
cwtl
xchg
mov
jmp
and
into
dec
lods
or
mov
and
jmp
mov
stos
pop
xchg
in
cs
in
in
push
fsubs
cmp
push
shl
andl
pop
cmpsl
negb
ljmp
nop
insl
jecxz
push
shr
mov
sub
enter
insl
cmp
insl
cmpsb
scas
cmpsb
call
pop
xor
add
adc
inc
test
pop
xor
stc
lods
sub
mov
push
insb
dec
cld
mov
nop
je
lods
add
and
pushf
lds
out
add
mov
adc
lods
dec
fsubrs
shll
test
adc
clc
out
cmc
out
push
das
jl
push
jecxz
aas
data16
or
sahf
inc
test
popa
mov
inc
push
scas
ss
mov
pop
clc
ljmp
push
mov
mov
cmpsb
test
pop
push
stos
sub
adc
les
push
or
inc
mov
mov
jnp
inc
add
cmp
xchg
xor
push
adc
or
mov
stc
lahf
cmp
mov
adc
cmp
dec
sub
daa
clc
rsqrtps
cltd
push
push
addr16
mov
mov
repnz
push
iret
jle
xor
dec
insb
movsb
xlat
psllw
aaa
addl
in
xlat
in
sub
test
push
test
and
sub
xchg
mov
cmp
scas
ljmp
lret
xchg
mov
add
out
cmp
mov
jge
push
or
aaa
subl
aad
loop
mov
ret
sbb
subb
inc
pop
stos
fidivrl
xor
cmpsb
sub
mov
scas
jecxz
popa
int
jbe
xchg
shrl
jno
ljmp
mov
xchg
lcall
sub
sub
dec
xchg
mov
out
hlt
mov
outsl
and
test
xchg
and
mov
inc
repz
pushf
in
fmulp
mov
in
in
adc
jae
or
mov
ret
adc
daa
sbb
sub
xchg
rcr
imul
dec
and
mov
mov
dec
cmp
and
out
in
push
xchg
fldenv
mov
mov
nop
jecxz
and
and
push
inc
mov
mov
mov
rcrb
dec
into
out
adc
jnp
inc
inc
shlb
icebp
icebp
int
or
and
pop
clc
loopne
cmpb
daa
inc
into
and
jo
mov
aad
mov
ret
out
cli
or
jl
mov
xchg
dec
lret
push
int
jmp
loopne
mov
mull
lea
cmp
lock
jmp
cmp
sub
loop
dec
mov
test
cmpsl
stos
lods
lea
mov
popl
jb
sub
mov
xor
ds
iret
testb
stc
sbb
lock
adc
or
pop
lods
out
jno
xlat
cmp
lahf
inc
in
sar
shll
lret
scas
sub
or
mov
xchg
fsubs
decb
mov
mov
sub
pop
jg
adc
movl
addr16
sti
inc
sahf
shr
out
cmp
rep
xor
add
jp
lds
push
dec
repz
and
cmp
mov
xor
cmp
lods
jecxz
push
ljmp
int3
nop
cs
cltd
je
add
jns
jecxz
mov
es
pusha
sbb
int3
cmp
cmp
enter
dec
jns
xor
pop
in
jp
push
jne
pop
popa
cmp
xor
xchg
test
lock
aam
mov
repnz
mov
ret
xorb
stos
dec
add
lods
and
subl
inc
and
pop
out
aam
add
cmp
fwait
sub
sbb
sahf
lea
jae
push
leave
ljmp
fld
xchg
sbb
and
sub
add
stos
ljmp
pusha
and
xchg
jecxz
inc
cwtl
fs
pop
insb
ss
mov
popa
in
es
hlt
jl,pt
je
cmp
mov
mov
jbe
xchg
adc
add
gs
pushf
cmp
or
sahf
mov
hlt
xor
cld
adc
sbb
popa
inc
in
add
js
push
out
out
loope
or
mov
xor
jmp
dec
jecxz
sub
nop
lcall
loop
test
out
push
pop
jne
jl
mov
jg
sbb
xor
xor
mov
insl
push
js
loope
mulb
dec
xor
push
xchg
sbb
ficoms
jecxz
call
ljmp
lock
sub
outsb
dec
add
cmp
cmp
movsb
add
push
xor
jmp
xchg
imul
in
rcr
sbb
dec
xor
xor
insb
inc
push
push
mov
or
je
jne
mov
xor
into
xlat
pop
rcl
stos
lret
dec
push
add
lret
mov
push
js
inc
pop
adc
xor
jmp
scas
adc
xorl
adc
pop
cmp
subl
jae
mov
fstps
cmpsl
popf
int
cmpsb
cltd
sbb
mov
mov
ss
ja
xlat
lret
bound
push
nop
cmp
loop
push
imul
and
shll
mov
mov
movsb
cmp
rorl
sub
mull
and
repz
xchg
nop
mov
push
cmp
callw
push
sub
xchg
rorl
mov
stc
add
test
mov
je
shlb
xlat
test
ss
dec
scas
sub
repz
les
adc
or
mov
test
mov
dec
js
stos
cmc
mov
lcall
sub
xor
xor
dec
inc
ljmp
jp
push
loop
flds
les
mov
jno
pop
pushf
lret
dec
test
and
leave
les
sarb
xor
xor
sub
mov
add
test
ja
icebp
adc
sbb
push
jl
lods
enter
pop
cld
ljmp
in
bound
dec
out
dec
andb
ljmp
xchg
mov
lock
stos
pop
ret
cmc
fmul
icebp
jbe
dec
push
sub
and
cltd
mov
mov
mov
fsubl
pop
fistpll
push
out
or
fwait
scas
xorl
push
int3
lahf
fs
cld
movsb
mov
stc
jg
dec
or
push
add
add
mov
in
jg
dec
out
push
xor
insb
mov
gs
lds
popa
cs
and
push
mov
int3
adc
andb
fistpl
ret
mov
dec
add
cli
add
push
jb
jp
sub
mov
out
cld
and
aam
scas
push
and
fs
mov
cwtl
adc
rorb
pop
sbb
lahf
xchg
or
lret
mov
sub
cli
pop
push
fwait
dec
shlb
clc
filds
pop
popw
dec
in
push
xor
bound
xchg
sbb
inc
imul
push
loope
rolb
xchg
inc
lcall
inc
int
bound
popa
insl
lgs
pop
loope
gs
adcb
push
shl
div
pop
shrl
in
mov
hlt
pop
in
imul
sbb
jecxz
add
out
xor
andl
adc
popa
push
mov
jno
scas
test
ljmp
cwtl
es
cmp
sbb
mov
imul
pop
sub
pop
les
in
out
push
xor
push
scas
mov
in
cmpsb
testb
mov
popf
pop
mov
enter
sbb
gs
popf
xor
and
mov
into
imul
and
popa
xorl
jmp
lds
jb
lahf
push
ret
outsb
fucomp
mov
imul
into
lds
insl
jmp
sub
mov
daa
or
test
mov
shrl
in
dec
sbb
lret
test
aaa
gs
cmp
xchg
ret
sbb
lock
pop
je
mov
mov
xor
or
sub
lret
ds
mov
test
imul
mov
mov
fiadds
push
je
test
cmpsb
xacquire
fistpll
sbb
je
and
hlt
mov
mov
gs
inc
lahf
mov
fcomps
push
jg
sub
dec
stc
inc
aad
pusha
mov
bound
inc
int
or
loopne
cmpb
lds
xlat
mov
mov
or
mov
aam
outsb
loopne
mov
inc
int
jge
jns
rclb
fistps
mov
imul
pusha
pop
test
test
lock
add
push
jmp
pusha
iret
and
push
dec
xchg
fdivr
mov
pusha
adc
xchg
mov
mov
call
daa
mov
repnz
nop
pop
and
pop
xchg
cmp
jne
rcll
outsb
xchg
pusha
movsb
pop
out
xchg
ljmp
out
mov
sbb
add
mul
shr
fimull
cmpsb
lret
fdivrs
fisubrs
dec
push
mov
fsubl
in
popa
or
cmc
lods
cmp
jg
pop
sbb
inc
push
sub
bound
fcmove
xor
lret
negl
adc
daa
ret
imul
adc
inc
xchg
in
sbb
xchg
mov
sub
pop
cwtl
enter
lock
pop
stc
cmpb
push
lcall
and
push
insb
inc
addb
test
jnp
out
push
shll
divb
mov
cmc
in
mov
test
xor
fs
jg
test
pop
add
aam
jp
and
sub
inc
out
jecxz
psubb
in
jp
xor
mov
rorb
ja
push
testb
push
xchg
ss
jmp
adc
xor
xchg
cmp
cld
iret
push
jo
sbb
or
mov
jge
inc
outsl
bound
pop
sbb
int3
jp
scas
jae
aam
les
xchg
pop
cmovae
lods
rcrl
sub
mov
dec
or
add
fsubs
push
mov
fdivs
lret
sbb
xchg
add
add
cs
cltd
dec
xchg
xchg
or
push
mov
test
adc
inc
mov
repz
test
leave
jmp
test
pop
in
adc
jnp
fwait
push
push
js
std
lods
add
jl
inc
push
scas
ror
ljmp
mov
jnp
int
int
push
pusha
fidivl
pop
shrl
ds
ljmp
inc
in
pop
sub
inc
push
dec
repnz
push
in
cmc
fisubs
cmc
adc
pop
leave
std
les
jns
pop
cli
nop
mov
ffreep
call
cmp
loope
mov
pop
mov
jle
and
push
cltd
sub
and
aad
leave
jl
mov
sti
and
xchg
mov
fisubrs
decb
test
std
stc
xor
insl
clc
in
jmp
push
xor
add
sub
add
rcrb
jns
lock
xlat
cmp
cld
inc
adc
inc
or
insb
adc
sbb
in
pushf
xlat
xor
inc
or
rcrb
push
fildll
ret
fnstsw
loope
cmpsl
xchg
out
add
inc
into
pop
xorl
sub
imul
dec
addr16
movsb
push
sub
bound
xrelease
xlat
sahf
jge
into
int
xchg
sti
mov
arpl
pop
in
fdivs
or
fnstenv
lods
add
sbb
xchg
pcmpgtw
das
stos
popa
icebp
int
jno
jp
dec
adc
mov
out
inc
or
lock
cmp
lret
adc
rolb
push
int3
mov
imul
jae
sbb
pop
sub
xor
mov
pop
xor
adc
lret
enter
mov
aam
pop
xchg
leave
icebp
and
mov
mov
sub
fadds
sbb
bound
jg
sub
push
addr16
ret
ds
cmp
inc
inc
stc
leave
sbb
cld
jno
inc
popa
in
and
mov
stc
test
scas
push
and
ficompl
jle
fs
jl
out
imul
push
inc
cltd
lret
mov
add
add
pop
xchg
adc
out
mov
sbb
popf
lcall
cmc
bound
fcmovb
inc
ss
jb
pop
and
test
dec
cs
imul
cltd
orb
xchg
inc
nop
and
insl
xor
movsl
sub
jo
aas
test
mov
mov
popf
xchg
cli
roll
sub
mov
push
cld
lock
pop
cwtl
std
mov
mov
cmp
imul
push
ror
inc
pop
lock
mov
loope
sbb
fistpl
out
out
icebp
insl
cmp
loop
insb
xor
hlt
lods
roll
leave
lret
jne,pt
js
add
pop
xchg
arpl
xor
xor
mov
mov
popa
cmpsb
sub
dec
pop
sbb
inc
adc
je
sub
dec
dec
and
jle
lock
outsl
push
outsl
js
jge
icebp
push
fsubrl
ret
nop
xorl
sub
stos
adc
mov
push
ret
orb
push
cmpsb
jns
sbb
in
ror
jle
mov
mov
add
popa
add
test
fwait
out
popf
orb
sub
cmp
fbstp
dec
jl
andb
insb
mov
pop
adc
ja
xorb
movb
roll
inc
lock
sarb
dec
jle
pop
and
pop
pop
movsb
hlt
cmpsl
push
jecxz
rcrl
dec
dec
into
push
ret
es
divb
pop
sbb
jp
and
mov
mov
mov
mov
mov
callw
sbb
loopne
int3
repz
js
push
outsl
mov
stos
fiaddl
rorl
jnp
mov
pop
daa
add
pop
mov
lds
mov
pop
loope
dec
loopne
and
mov
vmovss
ljmp
movsb
int3
repnz
stc
cmpb
lahf
inc
mov
js
mov
mov
out
jnp
sbb
adc
push
ficoml
es
movsl
repnz
mov
pop
in
daa
or
push
leave
imul
test
shll
dec
std
inc
ds
mov
inc
jp
fwait
scas
push
int
sbb
mov
nop
mov
inc
rorb
rclb
adcb
push
adc
xor
out
dec
and
stc
and
mov
aad
popa
adc
int
ffreep
in
imul
lret
insl
and
and
push
out
lods
roll
sub
lea
dec
shr
pop
rolb
add
notb
cmp
push
into
push
jb
xor
mov
jnp
setnp
xchg
mov
mov
push
imul
push
mov
pop
mov
xor
int
ficoml
hlt
add
icebp
jne
mov
ds
inc
inc
jne
mov
negl
cmpsb
les
mov
pop
inc
test
pop
mov
xchg
xlat
mov
cld
cs
insb
push
mov
aad
dec
jmp
pusha
lea
adcl
icebp
sub
pop
ja
pop
cs
fidivl
and
cmpb
mov
pop
lcall
and
xchg
or
adc
daa
scas
into
sbb
rcr
pop
es
shlb
imul
sub
fdiv
fs
mov
mov
test
in
push
inc
jp
mov
clc
push
test
test
cmp
rcl
ret
orl
movsb
into
sbb
jecxz
outsl
icebp
pop
inc
lret
cmc
lods
jp
rorl
mov
mov
loopne
cmp
xchg
nop
push
mov
and
leave
adc
mov
lcall
push
jne
stc
subb
in
cs
adc
add
mov
dec
jbe
fcmovu
mov
jnp
xor
xchg
cmp
push
mov
xchg
dec
xchg
mov
stc
pop
sub
aad
xchg
fs
fldt
mov
in
mov
imul
hlt
pop
andb
out
mov
addl
push
dec
arpl
and
stc
cmp
stos
test
adc
testl
pop
pop
in
push
push
aaa
test
loope
add
add
mov
js
inc
ds
ret
out
pusha
dec
cld
lcall
dec
xchg
lret
lock
pop
pop
cmp
int
test
push
mov
mov
daa
lods
or
pop
adc
gs
mov
mov
push
leave
fadd
jge
subl
les
mov
aam
adc
dec
cmp
xchg
in
pop
ja
repz
lock
fiaddl
lods
pushl
jne
loope
cmp
popf
mov
dec
lahf
xchg
xchg
out
xor
add
add
hlt
dec
in
or
cmp
mov
sub
repnz
test
sti
fimull
push
or
xchg
pop
push
leave
rcrl
jbe
and
xor
ret
xlat
push
out
cmp
sarb
pop
pop
stos
cs
dec
pop
add
mov
mov
push
xor
ss
adc
cmp
xor
sub
aam
stc
loop
jge
jp
add
mov
sbb
pushf
mov
dec
mov
iret
inc
and
or
out
scas
mov
enter
gs
push
scas
push
pop
push
ret
rorb
xchg
inc
inc
fisubs
in
ds
cmc
jae
xchg
adc
jl
add
jne
scas
dec
jp
pop
cmp
out
fmull
and
fs
and
push
add
push
pop
fmuls
movsb
mov
cmp
fwait
adc
and
push
sti
lea
outsb
inc
inc
in
dec
stos
out
mov
adc
lods
pop
aad
insb
stos
mov
sbb
stos
lods
fstp
loope
cmp
enter
mov
jns,pt
cmp
mov
sub
rolb
jns
adc
ret
sbb
sub
xlat
cmc
ss
add
jbe
inc
mov
jns
inc
test
push
sbb
adc
dec
out
jne
aam
mov
sti
mov
mov
jge
nop
jp
cmc
jne
outsl
ljmp
pop
sbb
out
mov
or
test
add
sbb
xor
je
mov
sub
sub
inc
sbb
test
lret
lcall
lods
ja
sti
add
fwait
jae
test
inc
xchg
fimuls
xchg
cmpsb
pop
cmpsl
inc
fwait
push
cs
mov
dec
cmp
rcll
repnz
stos
cmc
iret
test
adc
mov
mov
or
test
ds
mov
stos
dec
add
jb
xchg
or
aad
dec
dec
push
incb
dec
adc
xor
cltd
jge
sahf
push
int
add
push
lods
out
jle
xlat
cmp
cmpsw
cli
das
mov
sbb
xchg
into
pop
pop
cmp
xchg
pop
orb
adc
insb
inc
insb
decb
or
push
xchg
xlat
mov
mov
sbb
pop
popf
inc
lcall
ja
into
inc
mov
loopne
insb
test
xchg
cmc
pop
fcoms
iret
xor
add
out
xor
aad
adc
xor
inc
jnp
push
ja
fcmovu
adc
cmp
sub
pop
and
sub
aam
mov
mov
cs
cmp
in
pop
in
mov
out
inc
or
cmp
pop
iret
test
add
xlat
xor
adc
mov
adc
jp
scas
mov
or
fdiv
add
add
xor
push
push
ja
js
xchg
fidivs
and
mov
jg
inc
or
jmp
aas
xchg
por
mov
or
mov
jle
lea
movsl
mov
in
or
adc
ret
push
xchg
xor
add
std
push
mov
push
addr16
mov
inc
mov
inc
mov
cmp
lods
ret
xor
femms
lahf
lods
xchg
jge
mov
dec
std
dec
jg
jns
or
ret
inc
inc
sbb
add
sbb
pop
sub
mov
add
insb
pop
pop
sub
cmp
mov
popf
pop
sbb
cmp
jae
dec
inc
lret
jl
fwait
pop
and
mov
pop
in
mov
cmpsb
in
in
subl
loopne
pushl
mov
test
stos
sbb
push
loopne
ja
aam
xchg
je
lock
mov
inc
mov
lods
clc
es
cmp
sub
pop
mov
mov
das
add
mov
test
push
adc
ja
push
sbbl
xchg
dec
pop
cmp
xchg
or
cmp
cld
pop
test
mul
lcall
mov
cmp
out
dec
sarl
sbb
or
scas
scas
push
push
jl
jns
popf
mov
je
pop
sahf
cmp
mov
mov
leave
imul
push
jl
roll
jo
rolb
jno
xchg
xor
rcll
adc
mov
inc
xlat
adc
or
das
adc
fidivrs
mov
rcl
jle
rol
ret
mov
outsb
or
mov
or
push
inc
push
mov
std
pushf
jmp
and
xchg
add
and
aas
cmp
inc
mov
cmp
sub
mov
xor
or
add
mov
ret
adc
mov
scas
data16
in
ja
sub
mov
adc
filds
rolb
ljmp
xor
stc
and
lds
sar
cs
mov
pop
add
inc
nop
aad
mov
icebp
popf
imull
xor
ret
adc
cmp
out
xchg
icebp
cltd
fldcw
ja
dec
mov
or
daa
xchg
push
push
xor
adc
jmp
stos
mov
push
add
xor
sub
sbb
or
daa
or
push
jle
dec
in
xor
inc
lahf
push
push
sub
mov
fisttpll
orb
mov
dec
cmp
movsb
mov
and
repnz
scas
adc
jae
mov
movsb
mov
ljmp
xlat
std
lcall
loop
sbb
xor
out
sbb
fildll
fs
call
fnsave
pop
sub
cmpsb
and
mov
inc
pop
mov
dec
mov
push
testb
leave
cmp
or
insb
pushf
and
fisubs
add
add
addr16
aas
mov
mov
test
lahf
dec
jge
testb
or
stos
jecxz
xor
xchg
lds
or
lods
scas
pop
push
or
or
push
cmp
adc
pop
pop
and
out
pushf
fmull
cld
div
test
sti
adc
adc
idiv
rorl
add
pop
jl
add
add
or
call
cmp
clc
int3
xchg
aas
loopne
push
enter
xchg
addb
repz
pop
sahf
mov
sbb
fcmovnu
out
adc
inc
jge
cmp
jbe
jp
push
xchg
test
cmp
xor
cltd
andb
xor
push
insl
or
adc
pop
push
insl
insl
mov
sub
hlt
jnp
test
lock
fwait
mov
out
sub
add
sbb
fisubs
adc
sbb
scas
in
fld
out
mull
sbb
or
movsb
lods
std
sub
or
pop
sar
scas
pop
das
pop
mov
bound
xor
dec
fisttpl
sbb
push
call
or
shrb
xor
fwait
cmpsb
ja
ret
xchg
outsb
popa
not
cld
lahf
or
cmp
jae
cmpsb
jl
dec
rol
mov
cmc
popa
mov
cs
das
xor
cmpsb
xchg
repnz
rcr
enter
inc
scas
sti
sub
jb
mov
daa
ljmp
insb
movsl
cmp
adc
call
rclb
push
cmp
mov
push
add
jg
ljmp
or
push
adc
adc
lahf
cmp
repz
cmpsl
mov
jle
ss
rcrb
xor
mov
mov
cmc
gs
mov
mov
xorl
or
out
mov
add
fdivrl
push
gs
add
out
loop
pop
jno
into
mov
xor
dec
cwtl
or
test
bound
dec
rcrb
jmp
icebp
in
xor
inc
mov
mov
add
or
sub
push
mov
jb
leave
outsb
in
out
and
lahf
or
adc
jmp
sti
psubw
push
in
xchg
jno
cltd
popa
dec
test
inc
dec
sbb
cmp
fidivs
cmp
inc
xchg
dec
into
push
xchg
mov
testb
mov
jecxz
dec
pop
mov
or
mov
push
scas
mov
loope
je
imul
sbb
inc
adc
pop
adc
lahf
or
lds
jmp
sarb
lods
jnp
mov
lcall
and
or
adc
ljmp
movsb
pop
test
lea
pop
lcall
cmc
adc
lcall
xchg
jbe
sub
ja
ljmp
mov
xchg
xor
dec
mov
dec
add
jns
adc
je
stos
sub
imul
lods
popf
mov
bnd
lcall
dec
xor
jecxz
pop
inc
sbb
jge
cmp
dec
push
inc
inc
out
rorb
xor
add
and
sbb
js
inc
mov
pop
test
sub
int
mov
scas
xor
addr16
data16
xor
shll
and
jae
jmp
aaa
addr16
sub
mov
cmovp
sar
ss
in
and
stos
out
stos
scas
and
inc
cltd
mov
mov
pop
out
out
out
mov
pop
outsb
and
or
shr
and
mov
in
iret
in
or
mov
mov
lret
imul
adc
mov
jl
sub
and
jg
in
loop
xchg
inc
add
push
xchg
xchg
inc
nop
lock
mov
inc
jecxz
int
cltd
dec
mov
cs
pop
mov
xchg
xor
sub
dec
xchg
jnp
aad
decb
mov
mull
dec
add
rorl
lds
pop
rep
push
rcrb
push
cmc
mov
pop
fstpt
adc
or
mov
fdivl
adc
fimull
xchg
out
addl
lret
ds
ljmp
fnstenv
mov
jl
dec
sub
dec
daa
inc
mov
ret
pop
sub
mov
movsl
lcall
cltd
stos
loope
mov
or
lahf
mov
adc
mov
xchg
lods
mov
mov
and
insl
adc
adc
imul
jns
fcoml
lcall
das
fidivs
mov
sub
dec
nop
and
xchg
pop
ja
jge
int
rorl
adc
adc
xchg
dec
das
pop
lods
or
lret
push
test
dec
jne
int3
adc
shlb
xchg
std
add
gs
and
dec
jge
in
dec
mull
mov
cmp
and
lea
sub
xchg
cli
inc
and
cmp
mov
lock
and
adc
jge
dec
jp
adc
jl
scas
xchg
lods
dec
pop
std
fldln2
xadd
shll
pusha
cmpsl
daa
aas
inc
push
lret
mov
mov
mov
inc
inc
ja
and
psllw
aam
sti
jg
adc
jns
push
fdivrl
and
jecxz
dec
pop
xchg
dec
lret
test
ljmp
fstpl
xor
xchg
push
addr16
fadds
add
rep
test
icebp
sub
dec
hlt
mov
mov
push
out
dec
ds
push
lahf
dec
out
cmp
mov
xor
jg
dec
mov
add
jb
jl
pusha
testb
push
dec
stos
pusha
adc
into
push
imul
fsubrs
std
faddl
lock
shll
ss
adc
ret
mov
mov
sub
xchg
addr16
cmp
dec
inc
ror
mov
jne
ljmp
cltd
sbb
add
insb
fimuls
mov
and
pop
adc
push
cmp
in
shlb
ret
xchg
xchg
addr16
outsb
out
call
mov
dec
decl
jae
cs
push
mov
xor
cwtl
sub
lods
xchg
xchg
sbb
push
test
addr16
adc
dec
pop
and
pop
sub
into
in
xchg
testb
aam
mov
dec
loopne
mov
mov
out
subb
xchg
mov
aaa
push
std
out
loopne
mov
or
stos
hlt
sahf
xchg
movsl
je
loopne
cmc
push
stos
iret
das
fs
test
inc
iret
cmp
adc
inc
lods
sub
sbb
icebp
add
sub
ret
fcmovnu
mov
dec
mov
mov
adcl
mov
leave
lcall
imul
mov
pusha
and
imul
in
pop
or
push
sbbb
jmp
sbb
xor
dec
enter
popf
sbb
or
cmp
inc
es
imul
mov
pop
jecxz
cmp
aad
rep
xchg
imul
push
pusha
dec
shll
jge
dec
mov
mov
lea
cli
jb
orl
test
push
sbb
pop
ret
push
decb
jne
xchg
mov
rcr
jle
xlat
mov
dec
std
pop
aam
mov
cmpsl
mov
in
stc
mov
test
sbb
sbb
jmp
aam
mov
leave
and
adc
jmp
lcall
cltd
call
test
outsb
mov
sub
into
or
pop
lea
int3
movsb
mov
int3
or
popf
sahf
cmp
popf
int3
pop
clc
lret
gs
mov
js
rolb
call
daa
mov
inc
mov
stos
movsl
fwait
mov
sbb
outsb
out
pushf
loop
dec
lret
mov
sti
mov
mov
fisubrs
leave
lcall
jns
mov
adc
mov
jg
push
in
push
push
fucomip
xchg
lods
fistps
daa
call
pop
popa
es
aam
jmp
mov
pushf
fisubl
mov
adc
jp
mov
in
sahf
rolb
adc
fptan
xchg
test
ja
fistpll
filds
inc
pop
int3
aaa
sub
jo
mul
out
pop
pop
cmpsl
ret
and
in
mov
ror
pusha
or
and
dec
adc
inc
push
dec
sbb
lds
xorb
push
lcall
addl
pop
cmc
ret
jmp
xor
jl
loop,pn
add
jge
xchg
jae
push
dec
test
outsl
sbb
in
imul
and
lahf
sbb
and
shl
push
rol
or
inc
mov
shr
ficoms
jae
pop
xchg
loope
lcall
cwtl
lock
iret
or
cli
in
subb
xchg
mov
sbb
dec
stos
adc
daa
mov
cmp
mov
lock
inc
dec
filds
add
dec
adcl
fistl
dec
xor
in
into
cmp
jnp
mov
adc
pop
mov
stos
pop
fiaddl
and
mov
imul
nop
notl
daa
ja
or
clc
inc
fdivp
ja
xor
loopne
inc
mov
notb
inc
jne
stos
pop
pop
test
ret
stos
rorl
add
cmp
xorb
mov
retw
pop
push
sub
dec
inc
mov
mov
jp
test
pop
in
cmp
push
int3
cmp
cmp
icebp
add
add
shlb
add
push
stos
xor
enter
adc
out
insl
mov
cmpsl
inc
mov
in
daa
mov
aaa
movsb
insb
xor
f2xm1
sbb
hlt
in
add
movsl
jecxz
adc
jle
dec
movsl
jmp
enter
xor
mov
mov
jge
adc
sahf
xchg
adc
cwtl
imul
and
mov
addr16
jmp
call
aam
rclb
es
call
out
movsl
push
pcmpgtd
mull
mov
jge
fwait
xor
or
aas
pop
and
sbb
outsl
xor
loopne
jecxz
xchg
add
inc
pop
jbe
sti
adc
aas
in
xor
mov
mov
inc
pop
imul
mov
pop
cmp
out
mov
jp
in
or
cld
pop
adc
cmp
or
popw
in
or
adc
andb
int3
mov
sahf
leave
pusha
stc
imul
je
rol
faddp
jp
pop
cmp
inc
mov
and
outsl
lea
bound
sub
gs
stc
adcb
sahf
jl
jns
mov
jle
rcll
sub
push
loop
adcl
aad
cmp
push
adcl
dec
int
sbb
movsl
pop
in
dec
icebp
movsl
ljmp
and
repnz
adc
inc
mov
mov
xchg
xorb
add
jge
xor
insb
clc
jecxz
imull
nop
cmp
insl
mov
and
pop
pushf
mov
and
cli
mov
call
fs
aad
sbb
mov
sbb
movsw
cmp
iret
das
enter
in
dec
ss
or
add
gs
sbb
mov
push
jp
jb
xchg
ret
or
daa
adc
inc
scas
push
loopne
shlb
add
pop
cmp
or
mov
cmp
hlt
or
lods
sub
push
sub
mov
fnsave
es
jg
jae
cmp
popf
push
ds
pop
mov
ja
daa
aaa
mov
sarb
les
dec
outsl
popa
loopne
adc
gs
dec
mov
or
into
fdiv
stos
pop
sbb
push
aam
cs
push
ja
test
dec
int
repz
imul
inc
mov
mov
pushf
das
pop
aaa
fimuls
das
mov
aad
push
jb
push
or
test
bound
pop
mov
fmul
xlat
xor
mov
cmpsb
iret
stos
pop
clc
dec
mov
lds
mov
movsb
dec
std
mov
jb
lret
repz
lret
imull
xor
pop
scas
pop
aam
inc
clc
daa
add
cwtl
es
popa
or
or
sub
mov
ds
sub
xor
adc
pop
sbb
testb
inc
lea
lds
push
mov
xchg
sub
jb
sub
cltd
jmp
lahf
movd
out
jecxz
leave
push
jne
je
push
jp
xchg
mov
xchg
inc
out
mov
daa
adc
adc
xchg
add
mov
or
popa
stc
cmpb
cmp
or
clc
push
daa
sbb
mov
push
sbb
sbb
ror
mov
popa
and
in
or
je
push
aaa
sbb
outsb
mov
icebp
pop
mov
push
mov
pop
mov
std
inc
mov
push
aas
icebp
jmp
add
ret
xor
or
inc
inc
mov
push
pushf
not
fxam
mov
jle
imul
lret
bound
out
fidivs
xchg
sub
lea
andb
jb
xchg
mov
aaa
clc
push
sbb
jbe
sub
dec
xor
inc
push
scas
idivl
sbb
outsb
cltd
inc
ret
fstl
rorb
test
push
mov
imul
hlt
bound
ja
sbb
add
scas
ljmp
sbb
scas
or
test
mov
xor
insb
movsb
dec
xchg
addr16
push
and
loope
dec
mov
sub
in
push
stc
push
adcl
push
out
sbb
jecxz
out
andb
mov
push
popf
mov
insl
xor
ficoms
arpl
cwtl
rclb
dec
loop
xchg
mov
orl
fs
or
fsubr
lds
xor
and
cmp
test
loop
shlb
push
adc
leave
xor
sbb
adc
andl
or
rcrb
std
test
fbstp
pop
ds
cwtl
lods
sbb
mov
jle
hlt
add
rcl
out
jae
mov
cmp
pushf
je
xchg
dec
into
cmpsl
sbb
out
dec
or
push
xchg
test
cs
xor
repz
mov
aas
movsb
dec
mov
lcall
pop
in
jmp
fdiv
pop
sbb
or
add
aam
test
dec
pop
sbb
arpl
addb
fcomps
jnp
or
call
jmp
push
sbb
ljmp
xchg
lret
inc
cmc
es
roll
scas
sti
in
dec
cmp
sbb
outsl
pop
leave
sbb
in
cltd
in
icebp
rorb
fwait
test
or
mov
xchg
xlat
mov
pop
into
mov
out
and
pop
sbbl
xlat
pop
in
outsb
lods
push
pop
std
push
mov
xlat
cmp
jmp
fisttps
ret
mov
arpl
out
mov
mov
mov
js
cli
out
test
lea
xchg
fwait
pop
mov
mov
mov
pop
je
add
pop
jge
test
mov
push
int3
setbe
pusha
out
push
es
clc
jle
out
bt
fucomp
jecxz
mov
repnz
push
aaa
jmp
cmp
cmc
in
inc
sbb
or
outsl
fidivs
bound
arpl
addr16
fs
cld
cmp
fwait
pop
jns
andb
add
test
lods
xchg
and
jne
xchg
jne
pop
xchg
cltd
mov
int3
mov
pop
push
cli
les
ficompl
mov
mov
lret
ficoml
sahf
out
inc
popf
js
xchg
scas
add
mov
push
loop
xchg
fs
fidivrl
mov
adc
xchg
pusha
shlb
dec
and
add
fcoml
cmp
je
pop
sub
or
or
out
clc
xchg
mov
cmp
test
mov
xor
push
insb
dec
pop
inc
and
hlt
mov
ret
fdivrp
les
push
aaa
mov
hlt
test
out
pop
or
cwtl
jmp
lret
ljmp
and
jns
pop
pop
sub
jecxz
jae
imul
mov
fistl
iret
jecxz
std
lds
sbb
jmp
icebp
lcall
out
insl
jg
subl
mov
iret
jge
aaa
jp
fistl
mov
pop
xor
scas
inc
fidivrs
mov
mov
pop
mov
cmp
cmp
mov
sbb
je
lds
push
adc
test
lea
int
push
pop
push
cmp
loope
pop
movsb
push
lods
or
jb
in
fwait
subl
lret
add
imul
test
pop
daa
subl
test
add
and
push
mov
sub
ret
in
jnp
inc
testb
das
mov
fs
inc
jne
xor
xor
push
inc
cmpsl
or
addr16
mov
std
cmp
data16
shl
movsl
negb
or
xor
sbb
pusha
push
jo
xor
inc
lock
jae
shl
shrl
popa
jnp
mov
arpl
ja
xchg
cmp
std
sti
subb
pop
rcr
sahf
mov
jmp
jo
add
fdivrs
in
test
test
xchg
xor
repz
dec
out
pop
push
push
call
mov
ret
enter
push
and
add
pop
mov
sbb
ss
fsubr
push
ficoml
fistl
outsl
inc
mov
cli
loope
ss
mov
daa
xchg
push
call
enter
inc
ror
xchg
loopne
cmpb
aaa
mov
sbb
test
out
into
sarl
sbb
mov
fldenv
jmp
inc
and
cmp
mov
lcall
fisubl
pop
rol
xor
lock
jae
xchg
in
xor
cmc
or
pusha
sbb
iret
leave
pushf
lret
shrb
les
push
mov
and
mov
xchg
popf
bound
cmp
xlat
adc
es
dec
add
sbb
cli
in
call
push
mov
popf
sub
mov
fcoml
inc
and
popa
mov
imul
lock
and
mov
addl
fbld
mov
add
test
xchg
sbb
movswl
xor
inc
pop
jb
mov
mov
and
dec
push
call
and
dec
mov
mov
sub
sub
xor
jo
pop
repz
movsb
sub
pop
dec
mov
cmp
xchg
stc
fiaddl
inc
xchg
incl
dec
loop
or
insl
dec
mov
push
jns
xor
push
call
or
outsb
and
mov
push
lods
and
daa
es
sbb
push
mov
or
bound
or
jmp
jno
popa
popa
mov
mov
jbe
sbb
inc
out
shlb
cmp
mov
adc
push
jno
mov
inc
push
scas
sahf
out
xchg
js
and
mov
sarl
jl
leave
mov
out
leave
jne
and
inc
jnp
sar
xor
mov
and
xor
repz
movsl
imul
push
push
out
sbb
pusha
sbb
add
inc
mov
testl
rorl
dec
jle
xchg
addr16
xor
fdivr
xchg
cs
inc
dec
push
dec
cmp
cmp
sub
pop
mov
mov
test
push
jnp
pop
inc
xchg
out
jnp
or
jmp
test
mov
cmp
aad
jae
mov
adc
add
setns
adc
leave
sbb
mov
add
stos
clc
xchg
je
in
and
and
adc
mov
je
jb
mov
adc
int3
and
push
sub
sbb
cld
pop
or
push
inc
pop
arpl
out
mov
test
xlat
xchg
fwait
faddl
add
push
jno
add
xchg
push
xchg
lret
sbb
dec
sbb
xlat
enter
add
or
cmp
mov
pushf
jg
ljmp
mov
jl
lret
insl
mov
insb
pop
fisttpll
sahf
int
sub
or
cwtl
repnz
ss
dec
add
cld
push
cli
insl
push
pop
lock
mov
orb
mov
pop
out
in
push
adc
imulb
mov
cmp
mov
mov
ret
scas
in
mov
aas
jbe
cld
xlat
and
sub
pmulhuw
jg
lret
ljmp
jg
mov
jl
push
xchg
push
mov
mov
ret
add
pusha
std
xor
sub
cs
shlb
lret
imul
sub
test
xor
jns
aam
nop
in
mov
aam
xor
pusha
pop
xor
out
loopne
out
sub
out
mov
mov
add
and
stc
fdivr
dec
cmp
sub
shrl
lea
mov
or
stos
or
pop
lret
sbb
dec
ds
fists
les
imul
mov
pusha
mov
mov
or
sub
popa
lock
cwtl
jp
mov
lea
mov
add
xchg
in
dec
adc
cmp
sahf
fwait
or
xchg
outsl
movsb
lahf
push
cwtl
sub
lea
jp
insb
cwtl
aas
lret
xor
inc
int3
loopne
pushf
push
push
sbb
adc
inc
pop
out
mov
jl
ret
into
orb
jnp
adc
add
data16
dec
adc
in
loope
xchg
xor
cmc
mov
cs
mov
pop
dec
sub
stc
xchg
sbb
je
pop
xchg
in
nop
lods
mov
jns
xchg
fstpl
xor
lods
in
adc
xchg
cli
adc
add
imul
insb
fiadds
hlt
das
int3
rcrb
mov
stos
add
xlat
adc
ficoms
out
xchg
mov
push
mov
xchg
or
jp
xor
cmp
lret
pop
jae
test
dec
aam
pop
inc
es
jbe
dec
mov
outsl
jae
cmp
sbb
ja
or
imul
xor
jno
lret
fdivr
push
dec
and
or
xchg
cmpsb
lret
jb
cmpb
sub
jbe
push
add
jmp
in
mov
rclb
inc
hlt
movsb
shrb
mov
aad
sti
pop
in
sub
adc
jmp
pushfw
push
hlt
orb
inc
rcrb
push
dec
pushf
lock
inc
fsubr
cmpsl
mov
data16
lahf
or
repnz
loope
icebp
movsb
test
pop
xchg
and
in
aaa
xchg
rcrl
push
hlt
inc
jecxz
pop
xor
push
jg
shr
data16
inc
pop
adc
dec
jecxz
xchg
mov
xchg
pop
jecxz
lds
mov
rcl
je
and
cmpsb
aaa
sub
jecxz
repz
mov
lret
test
jbe
mov
es
out
add
xor
adc
rorl
aas
aam
and
xchg
add
mov
testb
out
pop
jmp
push
fldcw
xchg
jae
push
mov
out
rclb
add
xlat
mov
xor
mov
cltd
lahf
dec
sar
pop
lcall
ss
mov
js
clc
mov
mov
cmp
fnstsw
aam
jnp
sti
inc
jecxz
or
mov
pop
leave
test
sub
out
sbbb
dec
and
jnp
dec
fldcw
push
xlat
push
out
mov
insb
mov
mov
iret
dec
outsb
scas
push
cmp
mov
pop
cld
or
sbb
mov
push
daa
pusha
add
movsb
ljmp
pushf
xor
fisttpl
pop
inc
jecxz
testb
fistps
cmc
repnz
test
mov
cmp
cwtl
aaa
lods
sub
push
call
addr16
pop
shrl
roll
jg
mov
popf
mov
icebp
add
popf
cmp
sti
and
mov
cwtl
or
push
movsb
andb
pop
out
push
xchg
add
sub
punpckldq
aas
mov
or
notl
sub
adc
push
mov
ja
inc
lods
roll
pop
inc
add
dec
mov
int3
loopne
add
orb
push
jae
pop
sarl
loopne
push
icebp
imul
dec
hlt
stc
loop
mov
loop
iret
iret
sbb
push
std
bound
mov
or
and
lods
mov
xor
sbb
in
shrb
cmc
insl
inc
popf
xchg
pop
cli
aam
bound
js
push
int3
int
je
inc
rolb
and
lock
xchg
jge
or
xchg
rorb
shlb
ret
pop
stc
sub
xchg
out
lods
jmp
jmp
pop
and
cwtl
sarl
dec
test
shr
lret
dec
roll
push
fucomip
mov
in
test
pusha
jg
out
leave
jnp
inc
aad
xor
cmp
mov
push
add
push
testb
pop
dec
int3
lea
xlat
roll
mov
test
mov
aas
leave
dec
imul
cmp
inc
add
ds
jle
lret
xchg
sub
pushf
and
push
jg
jmp
sbb
gs
dec
insl
stc
nop
sub
aam
in
cmpsl
lds
imul
cmpsb
fcmovnu
imul
je
sbb
mov
xchg
out
mov
xor
repnz
addr16
pop
jne
mov
adc
adc
mov
jb
call
or
inc
out
add
cmc
lods
outsb
mov
outsl
inc
jnp
mov
aad
jecxz
aad
popf
pushf
pop
lods
popf
mov
das
cltd
jnp
mov
ss
jge
xor
movb
push
sub
dec
dec
pop
les
leave
or
pop
mov
mov
out
insl
lcall
sub
cld
mov
add
subl
mov
dec
lods
ffree
imul
add
sub
mov
pop
negl
inc
jne
lret
cli
pop
cli
bnd
mov
push
pop
loop
jl
cwtl
sbb
int3
dec
stos
outsb
inc
inc
sbb
xchg
or
lods
in
ds
ljmp
sbb
jg
push
adc
pop
sub
xchg
sub
cmp
mov
aas
inc
mov
or
add
call
loope
mov
push
inc
addr16
clc
clc
cmp
fldt
js
jae
xchg
mov
xor
arpl
adc
popa
jg
mov
push
les
les
daa
in
pop
jno
ss
push
push
dec
out
push
pop
rorb
aaa
lahf
dec
aam
sbb
and
sbb
lods
lods
dec
nop
loope
pushf
loope
add
mov
xchg
out
inc
rorl
push
clc
add
stos
pop
pop
mov
scas
pop
testb
jns
push
sbb
out
scas
lcall
es
aad
scas
jae
addr16
nop
scas
fst
mov
aaa
mov
sub
cmp
lock
fisttpll
push
sub
movsb
sbb
enter
shl
mov
and
dec
lret
movsb
sub
mov
pop
scas
orb
and
lods
add
or
adc
je
and
inc
cli
shl
mov
jl
fstpt
neg
sub
sub
pop
pushf
inc
inc
cs
imul
sbb
add
adc
into
cld
arpl
or
pusha
pop
out
push
xor
enter
xor
in
in
push
ret
cmp
jno
negb
ja
cltd
dec
call
pop
push
ljmp
mov
adc
orb
insb
cmp
jae
push
adc
xchg
sbb
mov
test
jmp
mov
jo
sbb
jne
jb
add
pushf
xorl
cmp
push
lods
xor
push
push
rcrl
int
mov
dec
xchg
mov
dec
scas
push
ds
xchg
jns
add
roll
addb
ja
dec
stc
daa
je
mov
js
daa
inc
sbb
pop
inc
jmp
push
xor
mov
push
jmp
jb
lods
lret
mov
out
ja
mov
sar
or
sbb
xor
mov
ss
or
enter
cmpsl
pop
pop
sti
ror
out
ljmp
ret
fs
push
lea
xchg
repz
out
sub
aam
in
pop
gs
mov
test
rol
pop
and
mov
stos
imul
push
mov
lret
jb
nop
xchg
outsl
jns
sub
je
cmpsb
mov
ds
negb
jmp
or
dec
ljmp
je
sbb
mov
insl
in
push
jne
rolb
dec
xchg
ljmp
mov
adc
sub
mov
mov
pushf
outsb
sti
outsl
push
cmpsl
rcll
mov
outsl
or
inc
dec
cmp
inc
ucomiss
movsb
sub
fildl
or
mov
fsts
xor
stc
mov
outsl
mov
mov
inc
adc
nop
jg
jno
sbb
pop
rcrl
daa
js
jl
push
cmp
test
or
mov
sbb
loopne
xor
mov
inc
sub
sbb
loope
inc
push
sbb
xchg
cs
movups
sbb
sub
or
ficoml
or
cmc
dec
jo
sub
jne
xor
xor
imul
repnz
xchg
xor
int
push
inc
mov
bound
jmp
lods
adc
lods
je
pop
rclb
orb
aad
xor
nop
lods
dec
adc
push
push
mov
mov
pop
ja
jb
mov
test
pop
jecxz
in
cs
or
xor
leave
icebp
ljmp
inc
inc
mov
xor
cmp
push
test
push
mov
push
dec
mov
test
cmpsl
inc
adc
push
dec
add
std
arpl
mov
jne
into
lret
hlt
ret
sbb
fwait
jle
xor
nop
sub
test
cmpb
xchg
push
pop
in
insb
mov
mov
mov
sbb
aad
in
stc
xchg
xchg
push
xor
int3
movsl
xchg
adc
jp
or
xchg
je
mov
cmc
pop
jno
rorl
mov
add
push
in
inc
pusha
pop
pop
sbb
pop
mov
lcall
ja
loopne
sbb
mov
xchg
ja
repnz
jb
fs
shrb
sarb
mov
ss
mov
pop
fdivrl
adc
test
repz
call
mov
rcl
mov
mov
lahf
adc
and
mov
stos
aad
es
push
repz
fstps
imull
icebp
nop
outsb
add
icebp
daa
xchg
lcall
pop
mov
inc
testl
cmc
insl
pop
into
les
in
pop
pop
hlt
sbb
test
adc
inc
pop
and
movsl
mov
xor
mov
cmp
and
lea
lock
sbb
in
mov
in
cmpsl
sarb
negb
orb
adc
jl
and
jb
bound
adc
cmp
xor
jge
sbb
push
out
lock
shl
cmpsb
sub
daa
hlt
lods
lea
push
fwait
inc
popa
mov
fstpt
adc
js
in
push
adc
mov
sahf
dec
inc
jae
popa
into
pop
cmp
push
cmp
mov
mov
cmpsb
and
mov
stos
mov
insb
movsl
das
jne
lcall
inc
mov
or
add
pusha
cwtl
xchg
jl
popf
and
and
loop
out
fs
ret
nop
mov
xor
and
xor
push
test
mov
xchg
arpl
out
xchg
add
dec
cltd
mov
adc
movsl
sub
sbb
into
push
shrb
sub
pop
fdivrs
orl
shrl
push
out
loope
out
movsb
fnsave
out
test
mov
aaa
jbe
fcomi
adc
and
jnp
shlb
adc
insl
push
test
jno
pand
sub
jnp
cmp
das
iret
scas
aam
xchg
add
loopne
repz
push
jnp
pop
sbb
bound
sahf
sub
jb
call
push
mov
sub
sarb
sti
inc
test
rclb
pop
rcll
mov
and
jmp
out
sbb
ja
mov
push
fisubs
pop
int3
es
in
lds
sub
adc
cmp
push
jbe
mov
mov
loopne
pushf
sub
jae
xchg
dec
insb
xor
nop
dec
mov
sbb
mov
xor
outsb
mov
or
xor
pop
jle
mov
jnp
mov
adc
loope
cmp
out
pop
pop
sub
or
inc
inc
outsb
xor
push
push
push
xchg
inc
jl
mov
int
jns
cld
scas
xchg
inc
lock
xchg
int
push
push
xor
xlat
jns
adc
pop
xchg
call
dec
mov
repz
lea
shlb
pop
cmp
mov
cli
xor
push
shl
add
lods
int
imul
clc
add
movsl
sbb
inc
jg
xchg
std
dec
pop
cltd
jge
out
cmp
inc
int3
stc
outsb
xchg
cli
mov
shll
inc
xor
pop
lods
pop
in
pop
push
push
enter
mov
lahf
ss
add
adc
jp
push
push
xchg
es
jp
inc
outsl
mov
jo
daa
xchg
xchg
push
pop
and
fbstp
and
jle
mov
bnd
add
mov
lock
ret
stos
lods
cmp
rorl
cmp
rol
jecxz
mov
lods
mov
fildll
jmp
fs
pop
ficompl
pop
insb
xchg
push
cmp
icebp
xchg
pop
and
adc
sar
imul
xchg
lds
push
cli
mov
fwait
pop
inc
daa
jg
inc
lds
lods
push
loopne
cmp
cmp
ja
and
cltd
lds
adc
scas
xchg
fistps
jecxz
ret
adc
fwait
movsl
fxch
jns
xchg
sub
and
popa
pop
pop
das
jb
mov
jg
test
ret
int3
push
cmp
xchg
or
jae
mov
push
cs
fidivl
jno
cmpsl
fsubl
lahf
loopne
nop
lcall
unpckhps
xchg
fisubrs
mov
and
mov
adc
lcall
inc
movsl
bnd
into
dec
jle
lods
jmp
stc
adcb
test
push
and
sub
xchg
push
cmp
jno
adc
push
insb
lret
push
sub
inc
loop
xchg
mov
cmp
call
sbb
xor
add
or
sbb
push
and
adc
mov
xchg
movsl
push
push
xchg
push
sti
pop
call
mov
lock
jno
ret
pusha
xchg
pop
pop
jae
outsb
add
not
jo
ret
scas
loope
inc
adc
xor
xchg
faddl
xchg
jmp
orl
cmp
xor
popa
stc
and
es
mov
cmp
xor
mov
add
test
addr16
andl
addr16
flds
popf
xorl
gs
adc
ljmp
outsb
push
es
sbb
in
imul
outsb
cmpsl
xchg
mov
addr16
jne
xor
jo
outsl
fsubrs
push
idivb
in
int3
pop
pop
xchg
sbb
inc
shrb
enter
fldcw
sub
dec
insl
sbb
sub
mov
pop
pop
fistl
xchg
fsubl
mov
xor
aam
cmpsl
imulb
xchg
ds
orl
movsl
mov
dec
mov
std
subl
rorl
inc
and
dec
andb
sbb
stos
sub
pop
int3
std
mov
jno
out
cmpsl
xlat
adc
rcrl
adc
jne
int
and
loope
cmp
inc
mov
in
roll
addr16
add
mov
xchg
push
lock
cmp
cmc
fcmovnbe
cmp
mov
fisttpl
ja
sub
jb
jae
lcall
xchg
sbb
dec
sbb
dec
rorl
aaa
mov
dec
cld
jp
loope
inc
mov
or
shrl
cwtl
push
cmp
push
xor
test
jno
mov
mov
jo
sti
test
arpl
cwtl
xor
imul
out
jnp
fwait
mov
pop
jmp
and
loop
les
cmp
adc
ds
andb
out
sbb
scas
push
inc
mov
mov
sbb
sub
mov
fmuls
mov
push
push
rclb
mov
or
not
push
sub
xor
jbe
cltd
fldlg2
mov
ret
jb
jno
sbb
mov
test
leave
data16
xlat
call
sbb
sbb
add
inc
test
pop
cmp
pusha
adc
sbb
test
fstl
mov
pop
add
mov
shl
adc
xor
xor
jle
das
shl
pop
push
push
pop
int
inc
call
jecxz
push
pop
inc
adc
pop
das
mov
lcall
outsl
or
pop
inc
sbb
stos
addb
xchg
dec
and
mov
push
inc
popa
mov
or
add
popf
jmp
sub
out
or
cmp
subb
rorb
cltd
mov
movsl
jg
loop
jno
mov
cli
aaa
ljmp
aas
addr16
lea
shll
or
ds
push
int
and
bound
or
test
xor
andnps
dec
pop
xchg
bnd
mov
cmpsl
int
mov
aas
pop
mov
mov
jno
dec
inc
dec
int3
imul
enter
inc
push
pop
shrl
and
fxch
and
jg
jno
jo
inc
mov
aad
ret
jno
mov
ds
pop
shrl
inc
pop
je
mov
cwtl
jno
aad
push
das
cmp
sub
mov
sbb
xchg
inc
mov
sub
iret
sbb
pop
xor
pop
or
jmp
cmc
mov
xchg
pop
stos
and
mov
or
fdivl
inc
sub
mov
jmp
jp
and
aaa
mov
subl
mov
popa
out
addr16
into
repnz
push
inc
pop
stc
icebp
iret
testb
xor
in
loop
adcl
lcall
inc
gs
mov
mov
dec
xchg
sub
lods
nop
shlb
out
dec
add
loopne
sub
jecxz
testb
sti
xor
inc
loop
cmc
ljmp
pop
jl
orl
jb
aam
popa
add
incb
mov
sbb
pop
fstpt
dec
popa
or
scas
pop
dec
clc
push
shl
cmp
mov
pop
lods
lahf
pop
dec
mov
jmp
add
dec
psubusb
mov
test
and
icebp
dec
addr16
xor
shll
sub
out
into
inc
jbe
loope
push
imul
add
and
sbb
or
clc
fstpt
fstp
in
jae,pn
pop
dec
and
sub
push
sbb
pop
adc
mov
bound
adc
scas
jp
inc
pop
and
stc
loopne
pop
push
add
lds
outsl
in
sbb
ljmp
sbb
inc
xchg
mov
dec
pop
pop
lods
insl
sbb
jmp
sub
push
movswl
pop
mov
pop
not
add
xchg
sbb
dec
int3
out
push
popa
mov
je
cwtl
adc
imul
pushf
mov
cmp
mov
loop
aaa
sub
sub
sbb
fsubrl
fisttps
test
insl
cmp
lods
inc
cwtl
mov
andl
jecxz
xlat
in
inc
jle
and
mov
mov
push
cmp
stos
iret
push
sbb
sbb
clc
adc
mov
lds
lcall
testl
inc
out
mov
ja
aad
rorb
movl
in
mov
test
push
repz
push
lea
jmp
adc
andl
test
mov
xor
out
lret
lahf
jns
shufps
int
in
lock
inc
imul
sub
test
cmc
jmp
jo
sbb
leave
cmp
sub
cltd
or
add
xor
xor
or
popa
push
rcrb
mov
jb
dec
jbe
add
xor
jns
sbb
sbb
jecxz
cs
sub
repz
addr16
pop
scas
icebp
xor
or
jmp
cs
jg
out
push
mov
jb
dec
fwait
inc
ds
pop
cltd
cmp
mov
pop
sbb
sub
popa
or
loope
aad
shrl
push
cmc
fs
sub
sub
rolb
or
sbb
mov
data16
inc
into
sarl
jecxz
mov
pop
scas
in
cwtl
pop
cmp
mov
aad
lea
addr16
ficomps
mov
daa
mov
cmp
popf
mov
inc
aas
mov
mov
sub
or
bswap
lea
sti
cmpsb
fidivl
jno
das
dec
and
cmp
shrb
int3
mov
out
sub
insl
es
xchg
or
lret
cld
movsl
push
xor
adc
sub
adc
into
js
pop
stos
mov
add
movsl
shll
in
jle
out
clc
mov
gs
mov
test
xor
repz
push
inc
inc
stos
jne
iret
fisubl
cmp
cmp
push
es
nop
lods
push
pop
je
lret
fiaddl
cmp
aas
cmp
out
push
push
cmp
xchg
xor
xchg
mov
sbb
lcall
out
inc
dec
ret
cld
sbb
sub
insb
imul
imul
shlb
push
add
fbstp
xor
jmp
sub
les
sub
enter
icebp
sub
or
mov
sub
sarb
jge
ret
xchg
jae
rcl
mov
stos
mov
add
test
lret
push
into
sub
dec
or
jge
stos
pop
lods
das
popa
xchg
jns
sbb
les
ljmp
xor
stos
repnz
mov
mov
fnstenv
push
and
dec
dec
mov
mov
cmp
jb
xchg
fidivs
xchg
add
stc
jae
outsb
cmp
xor
bound
out
icebp
pusha
out
insl
push
push
jg
cmp
pop
test
mov
hlt
jmp
pushf
or
pop
icebp
inc
inc
out
push
lods
mov
arpl
inc
movl
add
lahf
orl
int3
mov
sti
ja
push
sbb
mov
into
aas
addr16
pop
jb
popl
stos
jae
mov
push
xor
jne
add
fdivs
lret
negl
sbb
push
jb
jecxz
push
or
test
mov
fcoml
lods
dec
add
cmp
notl
mov
scas
mov
hlt
pop
and
mov
popa
ret
popa
mov
xor
rcrb
nop
inc
xchg
push
dec
cwtl
iret
cmp
or
jnp
inc
in
leave
scas
scas
mov
mov
mov
insb
pop
fimuls
inc
push
xchg
sub
out
push
jns
cmc
lods
mov
fwait
jbe
movsl
test
push
and
stos
insl
test
lea
mov
sbb
insb
xchg
popf
movsb
jbe
pop
enter
mov
out
mov
data16
mov
mov
add
std
xor
jo
mov
xchg
dec
loopne
dec
jmp
aam
adc
ret
fsts
xor
xchg
add
fstpl
mov
pop
dec
inc
inc
loop
jle
test
test
mov
dec
sbbl
sbb
ja
cmp
int3
scas
xchg
lea
repz
xlat
dec
cld
cmc
mov
mov
mov
fcmovnbe
mov
imul
inc
fsubp
out
mov
xor
mov
sub
sub
in
rorl
loop
adc
cmpsb
pop
leave
repz
outsl
adc
inc
inc
jmp
jbe
mov
jae
sub
pop
jge
jne
cmp
and
in
jmp
into
stos
sbb
out
and
daa
xorb
mov
push
ljmp
outsl
enter
cs
test
lahf
ss
cli
pop
lock
sti
push
inc
mov
adc
push
cmp
rclb
loope
out
ss
pop
pusha
sbb
fdiv
mov
stos
sahf
lret
inc
xor
aaa
xchg
push
ljmp
orb
mov
add
je
mov
push
popa
xchg
popf
inc
or
jo
out
mov
push
pushl
mov
adcb
sarb
test
jl
ret
cmp
sbb
mov
adc
or
mov
add
inc
push
push
mov
jge
fnstcw
cmp
lea
pop
xchg
divb
les
jbe
inc
in
clc
data16
mov
mov
rolb
dec
shll
scas
mov
sbb
jecxz
mov
test
mov
push
lcall
test
movl
vmovaps
mov
sti
rcrb
sti
ret
cld
pop
push
ljmp
in
loope
daa
jg
xor
and
je
fs
repnz
movd
out
adc
mov
adc
out
mov
ja
pop
cwtl
pop
and
ret
je
int3
xor
push
movsl
into
push
hlt
mov
jb
ret
pusha
pop
js
scas
imul
push
outsb
or
ja
gs
add
jge
lahf
push
sub
and
or
and
push
fsubr
dec
sbb
in
mov
lea
sti
sbb
add
popa
cmp
adcb
jns
jno
or
ljmp
inc
xchg
test
jnp
out
sbb
cld
in
sbbl
sub
push
xor
and
inc
push
rdtsc
push
fimuls
cld
movsl
or
mov
push
inc
mov
ja
cltd
fld
addr16
mov
aaa
add
pushf
fldt
and
loope
aad
cld
push
and
fcom
pop
cmp
mov
cltd
dec
sti
xorw
dec
sbb
mov
int3
xchg
icebp
decl
pop
or
sbb
adc
mov
jmp
jecxz
test
movsb
dec
mov
sbb
push
adc
lock
enter
js
jg
call
gs
add
mov
adc
shlb
push
stos
out
inc
dec
imul
jle
pop
mov
ror
sub
pop
cmp
sub
cmp
lcall
negb
jg
je
dec
jge
lock
add
mov
xor
or
test
test
shlb
cmp
sub
and
lea
mov
and
stc
xor
clc
xor
popf
xor
inc
pop
mov
dec
inc
cltd
jmp
pop
enter
jmp
jb
dec
rcrl
jo
loope
das
dec
scas
jp
push
daa
cmp
xlat
das
pop
pop
mov
orb
testb
push
dec
mov
test
stos
jne
stos
sub
sub
pop
mov
ret
dec
sub
cld
fistpll
shl
or
sarb
jae
das
mov
popf
xchg
scas
pop
pop
popf
ret
loop
pop
ds
rolb
xchg
ret
lods
fdivrs
fidivs
xchg
xor
movl
pop
cmp
pusha
xor
mov
mov
mov
dec
shlb
sbb
cmp
ja
js
push
push
cmp
mov
repnz
dec
sub
mov
cltd
je
pop
movsl
adc
stos
lock
popa
adc
outsl
loopne
ljmp
test
and
xor
lods
push
jb
imul
mov
dec
xchg
aas
inc
sbb
lds
mov
mov
lods
ret
mov
pop
icebp
fldt
mov
arpl
dec
sti
inc
out
push
sbb
fwait
popa
pop
sbb
mov
icebp
xchg
xchg
aam
subb
push
xchg
mov
imul
je
and
xchg
push
inc
popa
ret
fbstp
lahf
sti
pop
cli
push
imull
repz
dec
ror
jmp
cli
mov
shrb
jle
jno
push
ret
sbb
repnz
mov
sub
mov
mov
adc
enter
or
inc
inc
mov
cmp
enter
fisttpll
aam
repnz
mov
sbb
cmp
add
aas
aad
sbb
addb
and
inc
push
add
rcr
imul
cwtl
cmc
pop
xor
lea
xor
jb
push
in
outsl
add
push
or
aas
jmp
je
es
pop
pop
nop
enter
fdiv
fsubp
fistps
mov
cli
orl
mov
test
xchg
sub
push
mov
bound
mov
jge
fidivl
cwtl
repz
mov
mov
pop
pop
mov
adc
adc
clc
and
dec
dec
dec
jecxz
ja
inc
loopne
outsb
stos
push
sub
lcall
out
xor
lahf
add
and
outsl
into
lret
mov
bound
xlat
adc
jmp
jle
add
in
ljmp
inc
lods
loope
in
jge
clc
call
xor
outsb
add
xor
mov
push
int
jl
sbb
xor
test
stos
ds
mov
mov
add
stc
mov
pop
fcmovbe
idivl
inc
es
mov
call
dec
out
cmp
adc
dec
lcall
or
int3
dec
lret
add
mov
push
cli
add
decl
jne
and
nop
je
pushf
mov
mov
or
das
cld
add
arpl
aas
adc
xor
daa
imulb
jmp
ret
sbbl
outsl
xchg
sub
loope
jmp
adc
mov
xor
fldenv
adc
mov
inc
lcall
mov
fidivl
lret
ret
pushf
in
xor
dec
sub
jg
cmp
cmp
inc
outsl
outsl
inc
push
xchg
lcall
push
jge
jbe
shr
jecxz
mov
mov
jo
adc
popa
cmp
fwait
sbbb
pushf
stos
lret
loopne
cmp
imul
stos
inc
push
mov
pop
sbb
pop
mov
dec
lds
dec
ds
mov
cmp
or
push
lahf
notb
dec
rolb
out
rclb
repnz
clc
int
imul
dec
mov
cmp
inc
cs
movsl
mov
inc
inc
orl
rcll
lods
xchg
mov
cwtl
fistpll
pop
or
or
adc
inc
sub
outsl
and
xor
inc
push
or
pop
rcll
rcr
xchg
pop
add
mov
loopne
mov
lcall
and
js
mov
mov
sub
adc
mov
in
popf
or
inc
add
adc
hlt
inc
lods
rolb
mov
and
cmp
dec
js
or
fldt
sub
mov
and
xlat
sbb
inc
push
pop
jle
int
pop
in
dec
lahf
aas
mov
in
fistpl
imul
add
ficoml
cwtl
cmp
je
push
dec
jge
sub
sbb
mov
jne
mov
adc
ss
arpl
jbe
negb
fcomps
push
imul
in
repz
das
lret
insl
insl
ljmp
mov
ljmp
fnstsw
cmp
sub
mov
add
lds
mov
cld
jle
jp
jmp
cwtl
jle
pop
in
push
bound
aas
pop
push
mov
les
push
jg
aaa
inc
out
repnz
sbb
sub
mov
sahf
rcll
gs
pop
es
sub
inc
mov
bound
add
sbb
mov
ret
adc
or
pop
xchg
shrb
lcall
add
ficoml
sub
cmp
lods
test
adc
fsubp
xlat
fisubrl
cmp
lds
lea
mov
sbb
jae
pop
ss
dec
lret
lods
sarb
xor
jno
in
dec
xchg
imul
roll
push
clc
pop
xchg
push
push
insl
stc
dec
inc
mov
test
mov
repnz
and
insb
dec
mov
xchg
imul
lods
repz
jp
mov
adc
int
xchg
inc
lods
pop
cmp
arpl
jnp
xor
jo
mov
imul
ljmp
pop
jg
out
fldcw
out
js
pop
and
pop
mov
mov
sub
cmpsl
fsts
out
cmp
sbb
xlat
lock
push
divl
repz
cld
pusha
test
mov
xlat
je
cmp
mov
test
push
inc
pop
xor
sbb
jnp
negb
lahf
sub
enter
outsl
movsb
aad
cmpsl
xor
ret
pop
jae
jmp
cmp
shrb
lods
xor
push
test
dec
or
sub
xchg
sub
xor
sbb
repz
stc
sbb
subb
movsb
gs
mov
adc
loop
std
les
jmp
and
ljmp
mov
sbb
dec
lods
sahf
jg
mov
clc
xrelease
jmp
jmp
std
lcall
xor
or
fstl
lret
jnp
push
sti
pop
insl
jbe
lret
pop
fisttpll
mov
test
scas
jne
mov
xchg
adc
push
fucomi
push
mov
adc
push
insb
mov
dec
fdiv
xor
outsl
sti
lcall
dec
and
pop
out
sub
pop
mov
orb
mov
test
test
repnz
add
xor
andb
and
ror
xor
movsl
inc
adc
add
or
pop
mov
repz
mov
add
lret
cmp
adc
test
xchg
rorb
and
mov
dec
add
mov
in
push
test
test
pop
lods
call
mov
movsb
in
leave
adc
pop
cmp
xchg
dec
xor
push
push
je
push
mov
jge
xor
or
sub
dec
fstps
xchg
shl
inc
and
mov
leave
sti
add
xchg
and
rclb
xchg
push
push
out
adc
and
adc
add
mov
sbb
scas
inc
push
push
insb
xchg
sbbb
pop
inc
push
pop
push
inc
int3
inc
push
dec
fst
test
push
dec
addl
dec
in
mov
call
cld
decb
out
inc
mov
sub
int3
aaa
mov
push
add
push
add
js
aam
push
jne
or
push
sti
jp
or
jnp
out
out
sbb
sti
imul
subb
arpl
pop
scas
fs
xor
out
push
out
xor
xor
das
pop
dec
orb
pop
sub
xchg
movsl
sbb
sub
je
inc
adc
out
hlt
jle
or
mov
in
pusha
adc
es
fistl
push
cwtl
adcl
test
aaa
fidivrs
sub
or
ret
bound
fidivl
and
jmp
push
jnp
xchg
stc
xor
pop
or
mov
jl
test
das
xchg
sbb
call
iret
push
xor
adc
mov
sbb
sahf
lea
add
mov
add
push
cmpsb
sbb
inc
xor
pop
push
sub
sub
fstpl
fisubrl
int
push
js
cmp
push
adc
aam
mov
out
push
xchg
xchg
push
mov
fimuls
mov
jp
inc
xchg
and
stos
popf
push
fiadds
inc
and
mov
cli
fwait
outsl
push
std
imul
xor
negb
fiaddl
loopne
sbb
xorb
add
lret
inc
sub
push
adc
idivl
cmp
add
fldenv
int
xchg
xchg
xor
movsb
cmpsb
jb
jno
ficoml
fmulp
mov
adc
jns
fdivrl
or
pop
inc
dec
scas
xchg
cld
ljmp
mov
mov
in
jb
mov
cmpsl
sbbl
inc
lods
hlt
xchg
lock
add
lods
dec
inc
imul
xor
xchg
ljmp
cmpsb
test
push
aaa
mov
das
push
push
mov
mov
int
xchg
xchg
or
push
sti
sbb
mov
in
lcall
dec
ret
std
lret
jp
idivb
cmpsl
mov
pop
xchg
mov
and
lahf
cmp
lcall
push
pop
and
xchg
dec
ror
pop
sarb
aas
or
cmp
in
push
inc
les
out
fisubs
int
sub
fs
add
or
cmp
mov
jns
lcall
lds
adc
xchg
push
adc
add
cmp
and
outsb
mov
popa
mov
sub
fstp
ret
add
push
loope
iret
jae
sbb
xor
loope
jns
sbbl
cmp
loope
popf
dec
pop
sbbb
icebp
mov
test
stos
mov
and
and
xor
mov
nop
fnstcw
xchg
lds
jl
subl
aam
cmp
mov
jl
rclb
divl
mov
nop
jp
sahf
jp
and
lea
fwait
ret
pusha
xor
ja
push
and
js
push
jnp
mov
out
orb
arpl
dec
push
pop
mov
jle
lods
lds
sahf
sbb
shrb
rcrb
add
sti
jne
into
xchg
iret
fisubl
aam
test
xchg
add
int3
jp
or
imul
mov
mov
addr16
xlat
cmp
or
ja
imul
fcoml
sub
loop
rorl
out
ret
bound
or
push
mov
push
ds
dec
inc
out
mov
adc
xor
push
or
adc
dec
icebp
in
in
and
mov
mov
and
hlt
xchg
and
mov
movsl
xor
mov
inc
imul
xchg
dec
mov
test
ret
cmp
filds
mov
jge
es
push
lods
jne
hlt
test
or
rorl
out
mov
sub
inc
xchg
push
sbb
cmp
xor
nop
jae
int3
add
sbb
xor
sbb
ret
and
add
test
xchg
inc
cmp
inc
or
jmp
hlt
out
jb
loopne
jne
and
sbb
test
cmpsl
mov
bound
cmp
lock
mov
sbb
or
push
mov
cmc
cmp
test
pop
xlat
bound
push
js
repnz
imul
jg
fldt
loopne
fcomi
cmpsl
bound
in
fnstcw
push
or
test
popf
jne
into
popa
add
js
rclb
out
out
rcr
add
jmp
in
dec
push
outsb
fldcw
and
lods
xchg
jae
rcrl
repz
bound
test
movsl
xor
fs
cmc
sbb
outsl
out
fnstcw
add
je
pop
popa
imul
xchg
icebp
pop
fstl
ss
add
dec
shr
lock
stc
push
lea
pop
dec
cli
adc
in
jae
xchg
adc
out
test
mov
repnz
ret
cmp
bound
test
insb
push
add
cmpsl
add
pop
int
rcll
aaa
mov
inc
dec
scas
popa
sbb
pop
out
lods
push
lret
lods
xlat
les
and
or
jns
gs
mov
or
xchg
mov
frstor
in
mov
add
aad
jecxz
lods
loopne
mov
test
popa
aaa
daa
mov
insb
jg
xchg
adc
daa
jns
hlt
sbb
popa
push
dec
dec
pop
repnz
add
adcb
xchg
aaa
shrb
xchg
call
ja
les
dec
fcoml
rorb
cmp
push
xor
push
mov
jne
jbe
and
inc
and
adc
mov
adc
sahf
dec
push
add
pop
xchg
jle,pn
xlat
mov
inc
mov
pop
mov
sbb
sub
push
pop
pusha
push
add
bound
mov
mov
cmpsb
mov
test
pusha
inc
jmp
dec
hlt
lods
push
mov
fnsave
dec
jg
inc
push
sub
push
cmpl
lds
idivl
lea
icebp
and
ja
fistpl
mov
out
nop
outsb
sbb
or
add
inc
arpl
pop
ljmp
pop
mov
int3
test
cmp
xchg
mov
cmpsl
inc
jmp
pushl
sub
mov
sub
jecxz
mov
shrb
push
xchg
pop
push
lods
jmp
outsl
xor
adc
mov
push
fimull
outsl
xchg
in
jo
sti
push
dec
imul
push
push
das
mov
cmc
cli
in
movsl
xchg
lret
push
inc
mov
cmc
mov
shrb
mov
sub
and
test
mov
popa
sbb
movsl
dec
jecxz
push
xlat
ja
inc
jns
dec
loopne
ss
inc
orb
cmp
add
mov
inc
adc
cli
int
add
insl
adc
mov
repz
sbb
sub
fadds
add
in
fsubs
addr16
adc
pushf
dec
imul
mov
xchg
mov
mov
inc
xlat
scas
jb
btc
cltd
add
push
jmp
stos
or
fbld
adc
push
imul
push
mov
xchg
pop
pop
ja
add
mov
andb
jle
and
mov
popf
jg
cmp
test
ret
push
and
xor
clc
outsb
pop
jle
mov
mov
pop
lock
in
in
xor
mov
repz
sbb
nop
daa
outsl
and
fnstsw
mov
cmc
dec
xchg
popa
adc
out
cwtl
mov
lahf
sti
mov
adc
and
jmp
sub
fisubl
pop
mov
sarl
mov
push
xchg
jg
bound
or
popa
jle
lods
stc
mov
mov
lods
sar
stos
int3
cli
scas
lret
lock
orl
add
arpl
and
cwtl
sbb
loopne
and
jg
enter
mov
pusha
mov
cs
mov
xchg
aas
mov
sub
fs
lcall
out
fldcw
das
lds
fiadds
sbb
mov
and
out
xchg
add
cwtl
inc
pop
fcom
lret
mov
mov
push
bound
cld
cmpsb
pop
shlb
stc
xchg
jle
inc
jo
dec
jne
mov
pop
pop
ljmp
jg
icebp
in
les
inc
cld
lcall
pop
loope
popf
xchg
or
push
xor
out
stc
xchg
cltd
sti
and
dec
das
stos
and
jge
daa
stos
mov
shrb
mov
in
pusha
into
ret
movsb
push
xor
test
pusha
repnz
xor
clc
es
add
sbb
sbb
outsb
pop
repz
add
out
and
mov
lods
mov
fldenv
adc
shlb
push
sbbb
jne
cmp
or
xor
insb
add
sbb
in
movsb
lods
les
push
push
lods
push
cli
in
cmc
cmp
and
int
popa
loopne
jp
lret
or
roll
mov
add
repz
roll
xchg
dec
fwait
aam
add
xor
arpl
push
mov
adc
ja
push
mov
mov
push
jnp
repz
ret
fs
les
pop
push
leave
and
inc
bound
jp
cmpsb
in
cmc
mov
inc
adc
dec
jnp
ss
push
cmp
mov
inc
pop
leave
jne
movsb
test
enter
or
mov
xor
inc
jb
imul
push
mov
mov
mov
dec
xchg
pop
push
pop
mov
mov
imul
mov
adc
les
or
cwtl
mov
pushf
dec
les
cwtl
cwtl
jnp
dec
jle
dec
pop
dec
inc
jb
push
or
push
jl
xchg
das
andl
mov
lret
mov
int
and
mov
sub
xchg
icebp
add
ret
sub
sbb
xor
repz
test
sub
cmp
loop
pop
sti
push
sbb
or
fdivp
mov
arpl
popf
loopne
jmp
adc
subb
cmpsb
movsb
inc
xchg
sbb
popf
fldt
sub
add
fldl
add
sbb
pusha
xor
xchg
fnstenv
subl
cmpsl
xchg
fpatan
fldt
cmp
mov
sub
ja
dec
and
loope
je
mov
sti
nop
jg
enter
stos
nop
lds
sub
jmp
add
adc
ret
dec
push
fnstcw
int3
mov
fdiv
mov
mov
sub
jnp
lahf
or
filds
xor
in
cmp
adc
dec
xchg
mov
or
mov
into
sub
push
fidivrl
push
sub
jae
xchg
push
jnp
gs
lods
cmc
add
mov
cmpb
negb
xor
mov
push
push
lret
sbb
pop
sahf
pop
adc
loope
or
cmp
sub
and
mov
repz
and
sbb
sub
rcl
jo
sbb
add
testl
cmp
sub
mov
lret
and
adc
fcmovnu
or
dec
cmp
stos
lret
cmpsb
cmp
das
mov
cmp
cmpb
jge
test
and
popa
mov
push
cmc
jg
test
iret
pop
scas
insb
lods
push
stos
pusha
add
xor
out
xchg
add
sbb
pushl
imul
add
xchg
aad
jge
lret
mov
fcmove
push
sub
and
sbb
int
stos
mov
jle
pop
cmp
dec
dec
out
mov
adc
loope
mov
inc
pop
jae
imul
adc
xor
mov
xchg
aad
and
and
cmp
arpl
outsb
mov
cmp
movsl
xor
shrb
dec
pop
cmpsb
sbb
dec
test
call
fisttpll
mov
repnz
xor
popa
jge
mov
cwtl
movsl
push
xor
xor
xchg
lret
aam
arpl
push
ret
adc
test
movsb
add
ds
push
dec
lret
mov
pop
pop
js
adc
lods
dec
adc
mov
xchg
out
cs
inc
mov
jp
and
adc
pop
xor
push
push
imul
sbb
repnz
xor
jg
outsb
adc
xor
cmp
rorb
and
rol
sahf
inc
fsub
int
icebp
mov
into
adc
dec
lret
pop
ficoml
dec
out
mov
inc
pop
or
imul
addr16
mov
pop
out
and
add
pop
rol
test
lds
sti
ljmp
xor
std
or
movsl
adc
xchg
hlt
mov
aam
aas
notb
dec
sub
fldcw
shll
mov
push
fstpt
repz
call
popf
outsl
adc
pusha
sbb
mov
icebp
cwtl
xorb
and
dec
cmp
inc
mov
pop
cmpsb
inc
inc
sub
xchg
mov
loopw
mov
pop
mov
ljmp
cmpsb
fsubl
test
pop
or
push
aas
lret
mov
push
xchg
fstpt
sbb
pop
out
enter
ficompl
faddl
pop
fcomps
inc
mov
pop
or
cmc
sub
arpl
jbe
loop
out
ror
pusha
roll
js
lds
cmp
aaa
lds
fcmovnb
inc
sbb
add
xchg
add
mov
and
push
mov
test
adc
imul
outsl
ror
pop
cltd
jg
pop
sbb
xchg
negl
lock
mov
mov
cmpsl
loope
cmp
decb
test
aas
jno
push
cltd
xchg
hlt
sbbb
icebp
scas
pop
dec
in
pop
inc
pop
push
mov
in
inc
xchg
push
mov
add
dec
idiv
jo
xor
push
mov
fidivl
loop
fldenv
ss
movsl
jge
mov
jmp
hlt
pop
in
pop
rclb
push
testl
or
mov
inc
loopne
loopne
mov
pop
xor
test
and
je
mov
cltd
iret
lods
jle
push
add
inc
es
cwtl
insb
aam
inc
jns
and
arpl
iret
pop
jp
push
adc
add
xor
imul
data16
aas
data16
sbb
jb
sub
in
mov
call
bound
leave
inc
jle
sti
mov
xchg
jecxz
push
add
jne
fstps
shll
sbb
in
adc
into
and
pop
jge
mov
shll
mov
aas
mov
or
aaa
adc
lcall
stc
dec
mov
bound
or
push
pop
mov
add
sbb
sub
inc
aam
jmp
dec
lret
jp
and
jae
inc
in
pop
adc
xor
and
rcrb
push
mov
or
cmp
dec
repnz
repz
shl
stc
mov
jecxz
mov
daa
ret
imulb
stos
and
arpl
nop
and
sbb
add
mov
not
push
in
dec
adc
push
push
push
jae
sbb
or
jmp
shufps
sbb
fstl
adc
or
rcrl
adc
es
adc
ret
shrb
out
cmp
ja
or
cmpsb
mov
sbb
ds
and
test
cmp
cmp
adc
int3
popa
xchg
inc
popa
pop
xchg
int3
xchg
push
sbb
pop
fucomp
push
dec
les
lea
imul
and
jl
inc
pop
mov
loop
xor
lret
add
push
mov
aaa
dec
mov
sbb
xorb
cmpsl
push
cmp
mov
mov
filds
fwait
mov
mov
incl
jecxz
lret
adc
andb
stc
pop
fwait
fwait
int
adc
inc
pop
stos
add
lret
iret
jnp
jne
lea
das
push
jns
and
cmp
das
test
popf
mov
int
into
nop
and
rcll
mov
gs
jnp
mov
xchg
mov
pop
fisubl
and
fistl
dec
push
add
aas
xchg
or
outsb
aad
das
mov
lret
popf
pop
neg
pop
mov
rclb
pop
cmc
push
dec
sbb
and
dec
lds
xor
pop
repnz
repnz
push
loopne
lds
cwtl
insl
xchg
ret
xchg
iret
sbb
dec
js
scas
fwait
aas
fs
lret
adc
dec
stos
les
stos
cmp
xor
cli
mov
es
ret
lret
insb
push
adc
sbb
adc
popf
sbb
frstor
add
push
negl
stos
xlat
arpl
lods
xor
jp
dec
cmpsl
adc
and
jae,pt
jle
or
add
adc
sbb
and
inc
ret
ss
sub
sbb
jae
sahf
mov
mov
mov
sti
sub
xchg
outsb
pop
inc
inc
sti
mov
shl
test
testb
push
mov
addr16
mov
stos
mov
and
mov
mov
adc
pop
fs
and
vcmpunord_sps
sti
push
fsubr
fisubs
add
mov
stos
add
in
cmpsl
cld
xchg
sub
jnp
mov
or
add
xchg
jl
dec
sbb
sub
imul
pusha
rorl
jae
mov
or
pop
sarl
pusha
mov
subps
je
sub
sbb
insl
mov
mov
jecxz
xor
pushf
sub
cwtl
pusha
mov
rcll
mov
movsb
xor
mov
jae
jne
push
push
sbb
jb
jb
movsb
xchg
loop
dec
test
inc
enter
test
inc
std
inc
jbe
jae
mov
test
jle
rdtsc
pusha
jle
inc
packsswb
push
addr16
mov
pop
aaa
push
cli
adc
or
mov
add
dec
dec
cwtl
mov
mov
addr16
inc
aas
mov
cmp
mov
enter
push
fisttpll
in
jl
fadd
fisubrs
pop
mov
sbb
stc
js
out
cmp
ret
shll
popf
jecxz
inc
shrb
cltd
out
ret
mov
stc
or
mov
ljmp
addr16
test
ja
cmc
ret
clc
popa
fstl
cmp
pop
inc
sub
mov
std
mov
pop
sbb
fdivrs
cmp
push
enter
xchg
subl
dec
inc
es
xlat
adc
cli
inc
scas
rorl
pop
jnp
lret
and
js
mov
cs
aas
sbb
add
lock
jg
adc
dec
cmc
stc
jb
xchg
mov
sub
mov
jl
mov
lods
mov
fisttpl
mov
and
loop
xchg
leave
in
outsb
test
imull
icebp
popa
aad
dec
cmp
mov
push
lret
movsl
add
subb
jl
sbb
cs
scas
mov
xchg
pop
push
lods
jae
insl
dec
pop
shr
mov
add
js
and
inc
xchg
in
aas
rcrl
nop
xlat
stc
call
xchg
push
jne
rorl
pop
cltd
fldcw
xchg
or
adc
mov
adc
xchg
decl
lahf
into
decl
push
push
repnz
dec
or
push
jg
cmp
call
fdiv
mov
orl
lods
jae
xor
leave
jl
aad
divl
mov
xchg
jge
xlat
pushf
push
jno
mov
pop
cmc
out
push
mov
pop
loop
lds
andl
ljmp
shrl
ret
scas
jg
mov
cmp
cld
or
in
lret
push
jne
leave
add
bound
fdivs
sub
and
xchg
into
dec
fdivl
and
mov
mov
ss
xchg
in
add
iret
add
cld
add
pop
test
inc
sub
test
hlt
out
pop
sbb
test
xchg
jmp
mov
jns
hlt
jne
add
jge
jne
push
and
ljmp
cmp
movsl
fcomps
adc
mov
mov
pop
repnz
jbe
daa
rcll
xor
xchg
pop
mov
or
mov
or
iret
mov
dec
pop
jb
subl
ret
scas
and
aaa
mov
cmp
mov
mov
adc
insb
outsb
push
xchg
xchg
testb
add
pushl
inc
popa
lods
adc
adc
clc
mov
xchg
dec
add
in
js
ds
bswap
loop
xlat
cmp
insl
cltd
test
jb
mov
push
push
mov
push
ret
xor
movsl
repz
push
cmpsb
push
mov
sarb
mov
movl
mov
pop
idivb
cmpsl
add
lret
jle
pushf
lock
sbb
jmp
mov
sbb
xchg
ljmp
sarb
shlb
rorb
les
push
mov
jns
jno
cwtl
leave
mov
add
pop
jle
jle
mov
push
lcall
and
mull
mov
dec
jge
sbb
stos
sahf
mov
jmp
jno
sub
outsb
pop
dec
xor
mov
lods
mov
ror
ja
push
in
adcb
idivb
repnz
cmp
push
add
or
orb
int
dec
stc
jb
push
enter
aaa
inc
aas
aam
ret
in
shl
test
addb
movsl
mov
imul
cmp
cli
or
cmpsb
ds
ret
pop
les
stos
jmp
push
imul
mov
loop
sub
xchg
xor
fnstcw
xor
ds
push
cmp
dec
lds
dec
sti
sbb
jbe
into
stos
mov
stc
xor
push
mov
int
aas
iret
pusha
xchg
sub
ss
jns
mov
filds
std
cmp
test
call
call
xlat
call
cwtl
add
js
nop
add
sbb
ret
test
std
mov
repz
sub
adc
adc
mov
test
dec
cmp
test
adc
inc
pop
lock
shrb
pop
cltd
mov
push
outsb
ret
aad
iret
dec
ds
dec
mov
pop
test
test
sub
xor
sbb
insb
push
fcmovbe
lret
iret
cmc
pop
push
xor
movsl
sub
mov
sahf
shrb
enter
dec
fsubs
rcll
in
jns
jns
out
adc
mov
jb
dec
inc
jp
arpl
adc
in
sbb
and
fbld
mov
ret
out
lahf
xchg
xchg
mov
sub
repz
mov
pop
and
jle
in
and
je
sub
and
mov
stos
xor
inc
sbb
ja
lcall
cmpsl
cmp
sahf
inc
xor
jae
mov
pop
test
jbe
push
and
cmp
popf
dec
xor
nop
sahf
jbe
movsl
mov
jb
sbb
xchg
xor
add
cmp
jb
add
ja
pop
mov
sbb
cs
iret
mov
push
div
pop
mov
mov
cmc
outsb
mov
jno
sarb
cmp
and
je
xchg
xchg
stos
fwait
sbb
data16
and
push
pushf
dec
push
sbb
call
pop
sti
bnd
gs
enter
dec
cmp
adc
push
fbld
mov
cltd
add
xchg
aad
decl
ret
xlat
mov
xchg
out
rol
xchg
dec
cmc
call
cmp
jns
xchg
pop
adc
mov
fists
pusha
cmp
mov
loopne
fcomps
dec
inc
popa
out
adc
movsl
ds
push
hlt
add
sbb
jnp
adc
dec
adc
and
int3
pop
pusha
subb
push
fsub
pop
xor
fcmove
inc
ja
out
daa
shll
mov
add
xchg
push
daa
btc
adc
xor
xor
mov
rcl
mov
repnz
ja
mov
xor
pusha
movsb
jbe
mov
xchg
icebp
rclb
cmp
ret
jno
imul
jno
and
pop
adc
mov
mov
lahf
pop
leave
dec
bound
cmp
push
sbb
mov
addr16
in
pop
add
xor
test
and
pop
xor
sahf
mov
push
clc
xchg
addr16
call
sbb
push
xchg
dec
out
stc
mov
dec
add
shll
aaa
mov
imul
notl
jecxz
in
xor
pop
insb
jmp
mov
lds
gs
enter
pushf
xor
cli
sbb
icebp
rolb
add
add
call
xchg
xchg
ficompl
mov
aas
add
and
xor
fisttps
clc
add
push
sbb
inc
sub
sbb
sub
ficoms
inc
jp
aas
les
mov
je
mov
or
push
pop
xchg
add
jae
and
lret
sbb
fs
dec
js
cld
gs
popa
scas
mov
add
call
pop
movsl
in
pop
pop
xlat
pop
mov
jbe
mov
int3
test
pop
adc
in
dec
cs
mov
jmp
out
push
sbb
arpl
jg
mov
mov
xor
and
xor
dec
aas
in
xor
jl
xchg
dec
orl
iret
add
pop
lcall
mov
pop
and
iret
push
pop
adc
inc
in
cmp
fstpl
enter
and
lds
inc
cwtl
push
fisttps
mov
or
je
out
add
lcall
cmp
and
adc
das
cmp
sub
adc
push
push
mov
sti
ret
imul
repnz
or
stos
jl
int
jle
into
call
jp
cld
fwait
push
xorl
enter
aad
aas
leave
pushf
mov
jle
cmp
pop
roll
daa
cltd
out
jle
data16
ds
subl
mov
jge
bound
xor
sbb
sbb
sti
popa
jne
test
xor
scas
idiv
aam
loop
xor
xchg
jecxz
fisttpl
mov
mov
ss
and
std
lods
pop
sbb
mov
mov
mov
lock
leave
pop
out
mov
push
pop
fcoml
pop
mov
mov
popf
sub
sub
pop
lahf
mov
jmp
cwtl
insl
cmp
pop
ljmp
pop
inc
add
jl
dec
lahf
fs
js
fiadds
aam
icebp
fnstsw
cwtl
and
movsb
push
adc
lea
in
int3
and
fldenv
cmpsl
in
jp
dec
mov
inc
xor
sbb
sbb
ret
lods
cmc
push
sbb
std
xlat
lret
jecxz
or
repz
sub
xlat
cmp
aaa
push
inc
dec
fisubrl
pop
dec
clc
jbe
mov
leave
mov
test
ret
mov
xchg
call
lret
popf
inc
repnz
cs
and
dec
sbb
ljmp
jns
cs
push
mov
fistpl
out
jne
adc
cwtl
sub
fildl
leave
dec
inc
clc
mov
push
or
sub
cmp
cmp
out
xor
sbb
dec
xorb
and
aad
fadds
xor
and
test
push
lds
fimull
shrb
jle
push
or
add
cmc
inc
push
adc
and
sub
movsl
aam
call
inc
call
rorb
leave
add
xchg
push
iret
adc
jno
mov
imul
xor
negl
scas
es
sbb
and
ret
clc
xor
popf
js
push
dec
jae
pop
lods
repnz
inc
mov
jecxz
mov
bound
sbb
xor
xor
mov
or
test
jle
hlt
icebp
ret
sbb
push
pop
stc
jb
pushf
sbb
fisubrl
leave
repnz
hlt
in
arpl
sub
jno
sahf
adc
je
es
mov
adc
and
imul
popf
xlat
les
shlb
pop
xor
leave
mov
sbb
jnp
jp
sbb
jne
stos
push
cmp
inc
pusha
sahf
sti
xor
fistl
hlt
test
repnz
sbb
xchg
mov
in
sub
xor
dec
jg
xor
divb
nop
aad
fs
add
or
and
inc
lock
insl
jg
cld
xchg
and
mov
mov
ljmp
notl
ja
stc
sbb
mov
insl
das
xor
and
scas
adc
sbb
xchg
pushf
adc
jl
loop
add
fwait
and
mov
sahf
sbb
add
fwait
sbb
inc
out
shlb
das
cmp
push
int
pop
imul
ja
or
lds
push
pop
mov
xchg
ljmp
xor
test
cmc
out
test
cld
into
mov
cmpsl
mov
shr
jae
mov
xor
sub
nop
movsl
stc
movsb
jg
ficompl
je
mov
dec
imul
in
xor
sub
enter
inc
push
cs
lret
test
jae
jae
fiadds
scas
inc
sbb
push
lea
inc
fs
loop
mov
idiv
negb
repz
scas
xchg
or
fidivs
gs
inc
jmp
jae
mov
jne
divb
dec
mov
jbe
shrl
mov
mov
add
jns
js
out
add
adc
arpl
mov
popa
lea
push
mov
das
popa
sbb
push
mov
adc
push
push
dec
lds
cmp
lods
faddl
mov
lret
int
jb
or
stos
pop
mov
pop
sbb
movsl
popa
arpl
repz
test
lahf
xchg
jo
jno
lahf
and
sbb
push
cmpsb
cmc
enter
jb
mov
fadd
and
push
add
ret
pop
cs
pop
and
push
cmc
enter
inc
mov
loop
inc
mov
mov
into
mov
fnstcw
test
ds
out
jae
mov
xlat
pop
cmp
dec
adc
cmp
lods
push
jbe
jbe
and
adc
xor
xor
xchg
jl
mov
leave
aas
fiadds
push
push
jge
add
sub
mov
mov
sbb
inc
mov
cmp
sub
leave
sbb
sarl
push
xchg
adc
out
shlb
ja
or
mov
fiadds
outsb
cmpsb
mov
mov
jae
jmp
push
das
cmpsb
aaa
xor
sti
xchg
mov
inc
imul
jns
movsb
ret
insl
aaa
jg
adc
into
mov
mov
mov
adc
cwtl
pop
dec
mov
add
adc
ret
ss
jg
fwait
xchg
popa
adc
add
mov
pop
inc
stos
cmpsb
ret
je
pop
xor
lods
or
cld
sbb
cmpsw
and
fs
setge
sbb
push
add
pop
cli
fistps
dec
adcb
es
scas
mov
div
push
dec
jo
dec
outsl
shll
popf
mov
sub
push
rol
jecxz
sub
fsts
sahf
add
mov
imul
pop
shrb
es
mov
mov
push
mov
test
and
idivl
add
jnp
mov
lea
pop
sbb
popa
imul
aas
sub
adc
aas
sub
aaa
mov
out
jno
jecxz
xor
mov
ja
sahf
in
lods
dec
mov
loop
push
popa
and
inc
ja
pusha
rclb
movsb
stos
pop
cmpsl
jnp
mov
jnp
into
les
inc
push
pop
inc
das
and
aas
mov
scas
out
ss
pop
xchg
repz
sub
xor
sysret
or
movsl
sbb
lods
sahf
stos
outsl
or
xchg
dec
es
mov
stos
cld
sahf
mov
cmpsb
outsl
js
rcrl
cmpsb
js
daa
mov
int3
sarb
jae
in
repz
jns
loop,pn
std
ljmp
out
es
jnp
cli
push
xlat
bound
sub
addb
addb
add
fimuls
std
out
frstor
lahf
push
inc
incl
cmp
test
cmp
dec
mov
pop
xor
dec
add
jns
dec
jecxz
cltd
out
jmp
ret
idivb
mov
lret
in
pop
mov
imul
jno
adc
add
sbb
xchg
mov
dec
cmp
mov
jp
outsl
movsl
cs
dec
push
jne
mov
je
fstpt
dec
push
out
fnsave
cmp
imull
clc
cmpsl
xchg
and
sub
dec
mov
pop
cmpsb
lea
jns
imulb
ficoms
ret
ret
repnz
push
and
sbb
push
loope
inc
mov
xchg
ret
jle
clc
leave
lret
mov
mov
jae
add
cmpsb
adc
adc
call
fnstcw
rolb
mov
sbb
sbb
lods
cwtl
aad
mov
cs
and
xchg
aam
mov
daa
jecxz
xor
xchg
dec
movsb
aam
gs
pop
faddl
hlt
add
outsb
stos
repz
adc
ficoms
mov
inc
leave
fwait
sub
pop
sub
push
js
aas
mov
sarl
push
adc
mov
cmp
and
push
mov
push
xor
stos
or
lret
or
lret
mov
cli
xchg
xchg
stos
push
pop
jnp
xchg
rolb
sbb
scas
jecxz
mov
add
popa
push
pop
loop
cmp
insl
and
sbb
jg
mov
pop
dec
sub
inc
or
cltd
icebp
pop
into
pop
aas
push
sbb
push
cmp
dec
movsl
pop
xchg
das
in
push
xor
je
in
dec
jge
xchg
sub
das
leave
stc
xchg
adc
adc
mov
jg
rcrb
mov
inc
dec
int3
pop
pop
lods
outsb
fs
xor
lahf
push
mov
ljmp
sahf
loope
push
dec
push
add
imul
mov
mov
push
sub
ds
or
fstpl
test
mov
mov
jb
cmp
out
or
data16
cmp
push
adc
dec
xor
int
out
icebp
lret
sbbb
lret
mov
and
scas
hlt
cmpsb
stc
rorb
imul
or
in
jle
cltd
mov
jno
and
cmp
pop
aas
sbb
addr16
jle
jl
loop
xchg
jno
jnp
movsl
pop
cmp
push
cwtl
sub
inc
mov
cmp
lret
cltd
lock
inc
jo
mov
addr16
push
jbe
inc
sub
and
xchg
iret
push
call
sub
nop
sbbb
jle
shrl
inc
sti
xchg
push
pop
or
fadds
add
je
sbb
xchg
movsb
add
aad
mov
lcall
mov
cmp
push
push
fisubrs
in
outsl
pop
xor
daa
das
mov
xchg
mov
pop
sub
iret
mov
inc
and
sub
jns
jmp
inc
add
adc
loop
and
mov
push
jp
sbb
push
adc
cmpxchg
dec
pop
push
xchg
sti
or
push
int
mov
pop
lcall
inc
sbb
adc
icebp
fadds
or
inc
pop
je
les
addl
or
jnp
dec
mov
cltd
mov
out
imul
xor
aaa
daa
aas
js
jbe
mov
punpckhbw
std
lcall
jmp
mov
ficomps
aaa
cmpsl
fcoms
push
in
mov
mov
adc
popf
ret
and
pop
jb
xchg
mov
jecxz
mov
jg
iret
push
fimull
fidivs
cmpsb
popa
xor
xor
sbb
cmpsl
mov
cs
jle
test
loop
push
clc
adc
pop
jo
xor
mov
pop
pushf
xchg
pop
push
in
pop
or
mov
pop
add
mov
call
add
mov
push
into
pop
ret
shll
lret
aam
outsb
int3
imul
movsb
mov
test
cs
idiv
jp
das
shlb
mov
orl
movsb
mov
mov
sub
or
mov
aas
dec
cmpsb
push
sbb
jl
lock
push
andl
mov
adc
fcom
call
mov
lcall
test
jle
mov
fcmovu
jae
popa
mov
inc
push
filds
add
mov
jns
xor
mov
and
int3
setns
loopne
dec
inc
ljmp
aad
dec
adc
add
inc
iret
mov
xchg
push
sbb
lret
xchg
add
pop
adc
jae
xchg
sarl
mov
hlt
mov
xchg
sti
aas
and
sbb
push
loopne
mov
push
inc
mov
mov
mov
sbb
push
or
iret
out
in
fwait
jl
pushf
jmp
dec
ret
into
std
inc
bound
inc
xlat
xor
pop
or
pop
push
fsubrs
movsl
push
icebp
xor
dec
loop
ljmp
jae
je
orl
xor
jne
lret
shll
pusha
outsl
and
sub
into
cld
sub
pop
test
loop
popa
push
jg
xchg
push
dec
lock
push
icebp
sub
dec
jecxz
je
mov
inc
inc
out
jmp
sub
xchg
inc
dec
aaa
dec
js
loopne
sub
mov
mov
sub
mov
jg
mov
inc
push
push
pop
jp
sub
test
cmp
jp
mov
jmp
add
jg
dec
jle
mov
icebp
pop
mov
scas
mov
leave
mov
mov
push
mov
dec
jne
vaddsd
mov
push
lahf
jecxz
adc
fsubs
jnp
add
xor
mov
pop
ret
push
pop
push
jecxz
jg
sbb
sub
jle
pop
or
pop
inc
push
push
or
cmp
mov
dec
xor
cmp
and
mov
js
popf
inc
xlat
in
pop
dec
lock
jg
cmp
push
lods
imul
pop
adc
and
xchg
pop
cmpsb
sbb
push
outsb
xor
stc
addl
jne
scas
and
jl
xor
mov
pop
lret
cli
mov
leave
pop
fildl
and
es
cmp
loopne
addb
sub
cmp
inc
and
push
xchg
sbb
mov
call
mov
add
js
inc
scas
or
adc
sbb
push
scas
sub
lods
icebp
sbb
mov
stos
hlt
pop
out
ret
lock
mov
int3
stc
cld
pop
xchg
test
iret
push
mov
pop
out
xchg
mov
mov
xorl
sub
lock
sti
mov
push
add
fistps
mov
loopne
call
dec
gs
daa
cld
inc
or
ja
jg
bound
sub
testl
adc
cld
cmc
sbb
nop
xchg
pop
cmpsl
sbb
test
aad
push
negb
inc
ja
sbb
jmp
ret
cs
xchg
mov
or
andb
cs
pop
repz
adc
jnp
and
mov
sub
xor
int3
sti
push
loope
adc
mov
and
or
fwait
mov
cmp
shlb
mov
std
addr16
or
test
push
out
addr16
mov
fidivl
test
xchg
mov
fdiv
xor
outsl
aad
and
es
mov
xor
mov
addr16
scas
push
inc
mov
fmul
or
push
dec
mov
addr16
mov
mov
imul
mov
mov
mov
fldl
sub
arpl
fsubrl
aam
fldt
mov
int
mov
mov
hlt
sub
mov
movsl
mov
mov
sarl
repz
jp
add
xor
loopne
clc
mov
sub
dec
ret
dec
fistpl
or
inc
pop
pop
push
jo
test
ss
pop
xor
jbe
fldt
iret
sub
sbb
stos
stos
fcomip
xorl
jle
sub
add
daa
cmpsb
in
xor
jo
cli
arpl
outsb
sti
sub
pop
push
mov
inc
push
inc
icebp
sub
jns
add
int
cs
ret
sub
jnp
fstps
push
sub
or
or
mov
hlt
push
lods
sbb
mov
in
stos
std
jbe
outsl
lcall
lahf
daa
dec
xor
in
outsb
test
sbb
lret
jb
in
lds
nop
mov
loopne
adc
cli
repz
xchg
pop
add
mov
adc
pop
xchg
fcompl
inc
jo
or
xor
sub
scas
test
sbb
cmpsl
pop
js
stos
bound
popa
cmp
or
mov
or
call
shlb
cmp
aad
movsl
adcb
negl
jg
mov
push
cli
dec
les
icebp
dec
or
jbe
pushf
mov
lahf
push
lret
enter
sti
fldcw
test
fstl
sub
loop
add
add
sbb
xchg
push
dec
popa
mov
out
bnd
add
popf
and
cmp
push
mov
add
pusha
cli
and
repnz
mov
stc
out
loope
ror
mov
mov
adc
loopne
pop
sub
loopne
das
divl
or
arpl
jecxz
jg
cmpsl
cs
or
cmp
xchg
cmp
sbb
add
push
push
xchg
out
ret
cmp
test
xchg
enter
mov
movsb
sub
fisttpll
ja
adc
cmc
loope
ljmp
cwtl
mov
adcb
push
sbb
dec
add
lock
ss
cmp
mov
mov
adc
inc
jo
xchg
int3
mov
mov
jl
jb
ljmp
cmpl
add
cmp
ja
imul
fsubr
mov
push
and
aas
xchg
cmp
cmp
adc
cmp
mov
test
dec
stc
fistpll
inc
shll
cli
cwtl
pop
pop
std
sbb
dec
inc
lahf
or
repnz
mov
mov
lods
jl
iret
pusha
mov
pop
insl
mov
lret
add
lret
inc
push
outsl
xor
rolb
sti
rol
xchg
mov
jmp
sarb
xor
dec
jecxz
or
nop
in
jle
out
cld
popf
das
jnp
sbb
xchg
iret
stc
fucomi
mov
xchg
outsb
lea
jg
mov
xor
inc
mov
in
xchg
cld
rcrl
cmp
push
cmp
cmpsl
test
pop
mov
mov
inc
cmp
stc
maskmovq
testl
inc
imul
ret
fwait
hlt
adcl
cmpsl
test
mov
scas
in
adc
mov
mov
pop
outsl
adc
fimull
loop
cmp
stos
leave
divl
jns
stc
js
movsb
dec
mov
jge
inc
cld
aad
push
jecxz
movsl
aas
and
mov
xchg
mov
jge
cmp
xor
pushw
imul
adc
loope
faddp
shll
ss
add
pop
std
icebp
or
pushf
lea
sub
mov
mov
cmp
cmpb
in
cwtl
call
loopne
sbb
lcall
pop
adc
int3
and
ret
sub
inc
jmp
pushf
cwtl
out
cld
pushf
sbb
in
int
mov
or
lods
cmp
int
mov
mov
pop
lods
addl
cmpsb
pop
call
sub
push
iret
add
rcr
xor
adc
and
fidivrs
mov
sub
das
mov
dec
jns
push
inc
push
xchg
addb
xchg
cltd
je
daa
push
jle
sbb
int
push
sbb
movsl
add
inc
jbe
cwtl
fimull
xchg
lds
in
nop
mov
xor
bound
lock
leave
xor
insl
dec
adc
cmpl
clc
jo
pop
addr16
mov
and
aaa
push
mov
out
test
sub
std
sub
cmp
push
roll
mov
out
xor
sub
cmpsb
ds
adc
dec
pusha
cmp
sub
xor
pop
pusha
lods
imul
mov
cmp
adc
aas
push
mov
cmc
in
ljmp
push
popa
stc
jbe
jp
loop
ret
dec
mov
push
cmp
sub
test
stos
mov
mov
xchg
push
sub
mov
js
fdivrs
data16
mov
fbld
fnstenv
cmc
add
stos
xor
aas
lcall
popa
push
mov
flds
cmpsb
lret
repnz
xor
scas
jbe
fs
adc
inc
push
fldt
aaa
mov
pop
pop
and
push
sub
fisubs
mov
jno
pop
outsl
les
push
test
aam
push
inc
jp
scas
enter
loope
cmp
xchg
aad
or
rorb
ficoms
fwait
mov
test
subl
jmp
add
lea
push
fcompl
imul
adc
rorl
lods
pusha
cmp
imulb
cmpsb
and
inc
call
jge
cs
idiv
inc
xor
mov
lret
inc
popf
cmp
sub
int3
fdivs
push
lahf
fadds
or
push
mov
cmp
adcb
dec
xor
inc
das
pop
lret
lret
lret
add
imul
pop
shlb
popf
pop
xlat
jne
outsb
ds
movsb
shrb
mov
adc
jb
addr16
adc
xchg
push
aas
mov
je
lahf
mov
inc
pop
hlt
cmp
shr
adc
addl
insl
or
rorl
movsb
dec
fimuls
inc
dec
mov
adc
ret
aaa
int3
and
pop
mov
scas
inc
rorl
repz
addr16
outsb
repnz
dec
test
popf
jl
into
xor
fstps
stos
mov
je
and
xor
and
test
sub
dec
fwait
sbb
add
loopne
je
or
movsl
xlat
adcb
ja
jle
push
lock
cmp
ret
jo
sub
sub
es
mov
xchg
jge
jg
outsb
and
and
sub
ljmp
ret
push
pusha
push
jmp
xorb
lock
andb
stos
sub
out
cmpsb
call
xlat
mov
lds
bswap
mov
gs
mov
movsl
push
inc
push
enter
cld
cmc
repz
and
inc
cmp
add
les
sti
test
xchg
pop
aas
or
out
or
or
jns
cmc
mov
or
mov
lds
out
cmc
fimuls
inc
popf
dec
push
int3
mov
incb
pop
out
sbb
or
cld
or
ja
nopl
lret
jmp
sub
inc
pop
jmp
mov
mov
test
push
test
mov
ret
sub
lcall
sub
rol
add
jmp
test
cmc
jmp
or
movsb
xor
outsb
add
xlat
fwait
decb
rcl
jmp
int3
and
dec
push
or
rcl
pop
mov
out
dec
add
mov
je
insb
hlt
pavgb
cmp
mov
fmuls
cwtl
lret
adc
inc
xor
fs
jns
jecxz
pop
mov
mov
leave
inc
in
repnz
subb
popf
popf
or
and
cmp
inc
pop
jae
mov
outsl
cmp
dec
stc
inc
data16
into
xor
cs
mov
push
cwtl
std
xchg
lods
fsubrl
aaa
or
rcll
push
addl
adc
lcall
dec
sub
loop
mov
icebp
adc
and
in
fldenv
scas
scas
cmp
bound
inc
lret
xor
movsl
int
xchg
repnz
aas
pushf
or
add
inc
xchg
imull
lock
mov
int3
mov
mov
or
or
dec
push
lds
push
bound
out
outsb
mov
aaa
inc
and
sarl
sbb
xchg
inc
ret
xchg
pop
jp
dec
or
les
sub
mov
cwtl
jge
mov
lahf
mov
push
sub
and
mov
dec
mov
push
repz
mov
cli
jne
inc
bound
sub
in
push
dec
pop
fdivr
xchg
jnp
push
push
add
pusha
andb
pop
mov
shll
mov
pop
cs
dec
popa
test
fsub
imul
test
sub
cmp
out
stos
add
daa
bound
cs
in
mov
cltd
jp
mov
lret
loope
imulb
out
out
testb
cmc
add
xchg
cwtl
daa
xchg
sbb
testl
in
je
jecxz
and
sub
loope
xchg
fwait
pushl
inc
arpl
gs
adc
jg
insb
pop
inc
dec
ret
mov
push
push
push
mov
pop
adc
sbb
iret
in
mov
stc
lahf
lea
test
int
mov
jno
adc
or
sbb
in
or
loopne
and
push
mov
test
std
cltd
mul
stc
mov
aaa
into
lret
mov
jge
sahf
jp
jno
je
pusha
pop
mov
mov
es
push
jne
mov
dec
into
sub
lcall
test
add
sub
add
add
xchg
cmc
das
sbb
add
jne
aad
popf
mov
mov
test
ja
addr16
es
dec
sub
sbb
pop
loope
loop
das
movsl
stos
mov
cmp
mov
dec
out
aam
adc
rcrb
dec
mov
and
and
ficoms
mov
lcall
push
out
aam
scas
repnz
or
mov
mov
jns
push
sub
shrl
mov
je
mov
cmp
xchg
mov
mov
jns
push
pop
sahf
clc
stos
jno
es
dec
pop
repnz
cmp
sub
enter
jne
and
not
and
sub
lcall
jle
in
cmp
xchg
in
cmp
inc
popa
mov
dec
inc
xor
jp
movsb
rolb
mov
nop
inc
aam
mov
sbb
mov
pop
xchg
lahf
or
adc
jmp
fs
lea
call
mov
sti
pop
mov
leave
stc
inc
lcall
call
ficompl
int
xor
mov
inc
jg
das
add
in
inc
loop
xor
fwait
cmp
loope
insb
sbbl
sbb
sub
les
pop
sub
push
movsb
insl
aas
pop
mov
out
mov
or
movsl
divb
mov
adc
mov
xorb
cmp
mov
xor
push
add
pusha
int
sbb
sahf
xchg
lahf
xlat
cs
int
inc
bound
push
test
or
push
and
xchg
stc
jnp
in
loope
dec
mov
ret
or
pop
fyl2x
cmp
sar
or
into
inc
cmp
add
and
das
jne
ljmp
pop
adc
jecxz
stos
bound
fdivr
jne
dec
lret
add
inc
sarb
out
cmpsb
sbb
mov
add
mov
movl
cmp
push
out
cmp
inc
imul
ja
mov
ds
sbb
pop
mov
pop
ja
ss
jg
jmp
in
mov
leave
lds
mov
call
jne
jmp
push
cltd
cmp
clc
cmp
jns
cmpsb
sub
inc
dec
in
cld
cmp
mov
mov
mov
push
cmp
mov
outsb
or
clc
faddl
xor
enter
mov
push
mov
repnz
sarl
push
ljmp
out
pop
fistl
xor
icebp
hlt
pop
xor
cltd
mov
xor
xor
pushf
and
dec
iret
cmp
xchg
pop
adc
and
rcrb
insl
ja
movsl
lcall
aaa
testl
mov
push
inc
int
shll
mov
inc
xchg
mov
data16
movsb
loopne
adc
movsb
inc
push
out
testb
cs
or
popa
cmp
add
push
stos
stos
or
jnp
sub
sahf
in
pop
or
int3
dec
pop
dec
jnp
cmpsb
dec
out
xor
nop
dec
lock
sub
shll
xchg
mov
mov
loopne
jg
int3
outsl
push
mov
loop
push
nop
lahf
or
lods
shrl
sub
push
adc
dec
pop
mov
lock
insb
push
xchg
pop
or
fstpt
in
pop
dec
dec
cwtl
push
addr16
rcrb
ds
mov
sub
stc
leave
cmpsl
fidivrl
push
mov
ret
jb
inc
cld
ja
sub
push
ror
inc
cmp
cld
adc
push
jle,pn
outsb
or
rcll
in
mov
xchg
xchg
jp
add
mov
mov
andl
mov
sahf
xor
push
out
mov
fldl
xchg
loopne
pop
dec
loop
adcl
push
ds
fwait
mov
cld
inc
mov
cmc
or
insb
cmp
rorb
push
xor
push
insl
adc
mov
divl
jbe
in
cmpl
cmpsl
mov
inc
fwait
in
dec
lods
ret
lods
lcall
push
scas
cmp
mov
sbb
pop
inc
xchg
sbb
test
push
push
arpl
sbb
jl
stc
mov
test
arpl
mov
mov
cli
or
jle
xchg
addl
sbb
xchg
add
test
pop
imul
mov
lods
xchg
pop
adc
pop
pop
ret
cmp
xchg
sbb
daa
inc
sub
jl
push
mov
add
cmc
sahf
in
rolb
clc
test
mov
and
push
gs
mov
inc
loop
inc
jns
pop
stc
jae
popf
vshufpd
jl
sbb
jmp
cwtl
fwait
xor
std
and
out
rorl
js
pusha
jl
mov
and
bound
mov
push
lds
fcmovnb
popa
and
jg
pop
mov
cmp
xor
mov
push
lret
dec
sahf
xchg
icebp
jle
popa
lret
inc
stos
adc
out
jecxz
pop
mov
popf
jle
lock
inc
inc
mov
mov
out
mov
or
xchg
dec
mov
jno
les
mov
lds
lods
in
mov
jg
or
aad
jge
sbb
movb
stos
mov
mov
sbbb
cwtl
push
dec
push
inc
cmp
js
jbe
jbe
test
jg
jnp
scas
cmp
mov
pop
mov
or
outsl
push
add
lcall
das
call
or
or
imul
fs
ja
mov
test
stos
popf
mov
jp
cmpsl
xor
or
adc
sub
inc
mov
cltd
cmp
xchg
xchg
sbb
sbb
pop
sub
jecxz
vfmaddsub213ps
push
and
sub
xchg
lret
pop
ret
mul
jecxz
adc
sbb
inc
lcall
mov
in
push
add
insl
or
mov
push
mov
mov
mov
xchg
arpl
mov
pop
sahf
mov
outsl
idiv
cs
adc
movsl
imul
sub
sbb
lods
imul
push
sahf
push
sub
xor
add
xor
lods
in
push
mov
xchg
cli
push
push
leave
icebp
hlt
call
and
dec
add
addl
scas
sbb
shll
xchg
lods
push
xchg
mov
sub
adc
or
das
push
sub
pop
sbb
dec
cmpl
arpl
stos
xchg
es
push
xor
lock
or
mov
leave
inc
adc
cs
cmp
movl
sbb
loopne
scas
pop
mov
mov
dec
and
xor
mov
aas
fsubrs
jns
xorl
mov
clc
jl
xchg
aas
sbbl
test
mov
test
lds
dec
push
jp
movl
mov
js
int3
add
mov
jmp
ja
lods
sbb
cmpsb
push
leave
xchg
lea
mov
icebp
les
dec
or
and
sbb
ja
insb
arpl
inc
in
fs
in
push
andl
adc
mov
fdivs
jl
jg
lock
in
push
push
or
add
jmp
xchg
cmp
ds
mov
or
mov
push
push
mov
lcall
mov
cmpsb
xchg
xchg
or
and
adc
cmc
in
jns
shlb
push
mov
dec
cli
aam
add
mov
pusha
cld
fidivl
lods
xchg
or
dec
std
imul
sub
aaa
dec
mov
popa
pop
aam
rcrb
mov
push
add
popa
pop
loopne
inc
jb
sti
dec
jb
add
and
xchg
imul
xchg
lods
test
mov
das
pop
movsb
jge
shll
mov
shrb
rcrl
or
push
pop
fcompl
adc
inc
and
lea
stc
leave
and
push
cmpsl
sahf
arpl
pop
imul
outsb
jle
add
loopne
jg
mov
leave
pop
lret
inc
imul
scas
mov
repnz
mov
jo
jb
sbb
out
hlt
cwtl
xchg
scas
mov
jns
dec
sarl
jge
sub
inc
andl
mov
pop
fcomip
add
data16
mov
lods
jle
mov
mov
stos
cs
mov
and
jnp
lods
lret
cmp
pop
sub
cmp
jp
sbb
jge
inc
hlt
mov
icebp
fldl
xchg
pop
push
xchg
test
out
into
fisttpl
pusha
sub
sbb
fidivrs
test
jmp
lods
adc
out
push
daa
mov
nop
xchg
int
push
fsubrl
push
adc
cmp
add
mov
push
inc
and
cmpsb
stos
insb
and
inc
sbb
fsubs
and
rcrl
mov
jmp
fsts
inc
sbb
mov
push
dec
movsb
ljmp
cli
cmpsb
xor
insl
jecxz
int
xor
lea
rcll
call
cmp
mov
lds
fadds
dec
arpl
push
push
sub
push
and
call
leave
enter
fildl
mov
inc
push
rcl
mov
push
push
push
xor
mov
mov
insb
mov
es
arpl
adc
imul
dec
add
dec
pop
and
fwait
pop
xchg
mov
test
xor
add
xchg
pop
into
out
pop
xor
pop
push
cmpsl
push
sbb
fldenv
mov
sbb
out
push
cmpsb
and
xchg
push
adc
mov
and
sbb
or
dec
mov
sub
fmuls
js
jecxz
dec
adc
jb
sbb
mov
cmpsl
sbb
pop
into
cwtl
or
mov
mov
mov
cwtl
ret
sahf
mov
mov
pop
ljmp
rol
mul
shlb
shll
mov
ret
inc
and
ret
insl
inc
adc
mov
xchg
or
pop
add
divl
sub
and
mov
sbb
movsl
and
cmp
mov
or
scas
xorl
jecxz
jae
push
pop
sahf
mov
mov
addr16
fldenv
test
in
inc
inc
jl
dec
insl
arpl
aas
repnz
xchg
aam
test
jo
sahf
aad
pushf
sub
decl
pop
cmp
jne
mov
and
mov
test
fsubr
pop
add
jg
icebp
mov
cmp
mov
sbb
and
out
mov
xor
loop
and
jb
out
icebp
xor
out
xchg
cmp
lea
out
test
lds
mov
dec
sbb
and
stc
mov
imul
or
imul
lcall
out
mov
mov
cmp
inc
test
jl
mov
xchg
ja
ffreep
sbb
jl
mov
gs
lock
mov
lcall
sub
nop
fwait
push
int3
aad
mov
das
mov
in
mov
addr16
jmp
sahf
dec
jp
pushl
xchg
mov
out
cmp
jmp
xchg
xor
sub
shll
mov
addb
cwtl
rcl
mov
arpl
dec
push
xchg
adcb
out
jae
out
stc
lods
sub
mov
outsl
mov
xchg
xor
out
sub
test
add
jecxz
mov
popf
dec
push
mov
pop
mov
rorl
mov
pop
xchg
frstor
test
or
mov
jnp
jge
pop
inc
mov
or
fidivrs
mov
adc
js
inc
subb
push
mov
push
adc
mov
and
xchg
sub
les
arpl
mov
nop
sbb
mov
fs
sbb
xchg
cmp
jne
ret
push
cmp
mov
cmpsl
adc
add
jge
pop
push
gs
jmp
and
sub
mov
mov
or
cmp
adc
or
jl
pop
mov
in
mov
mov
mov
dec
nop
cmp
jg
pop
cmpsb
pop
addr16
data16
fisubrl
mov
int
jne
push
mov
add
pop
rcr
fimuls
and
rcl
lret
adc
xchg
pushf
cld
xchg
aam
mov
xchg
sbb
aaa
cmp
xor
ret
push
fisttps
out
daa
andl
icebp
mov
push
in
cli
inc
jge
std
stos
loope
int3
jno
push
jp
adc
fs
movsl
mov
andb
leave
jmp
arpl
movsb
es
xchg
gs
inc
xor
test
push
adc
push
sbb
and
push
decb
sbb
mov
ds
jae
sub
xor
mov
add
jle
adc
insb
inc
cmp
sbb
aam
pop
es
jg
mov
sub
lahf
lcall
and
cmp
xchg
lock
aas
pop
cmp
cmp
lcall
dec
lcall
jns
jns
or
ja
pop
test
mov
cmp
fwait
mov
jbe
loop
pop
or
or
mov
sahf
cmp
and
lods
dec
int3
inc
inc
aad
enter
jl
xchg
push
out
scas
lds
inc
insl
add
das
divb
stos
sti
mov
add
stos
lahf
jne
stos
xlat
outsb
push
xchg
scas
and
int
xchg
xchg
stos
or
aas
cli
repz
and
pop
outsl
aam
adc
fs
dec
je
jo
leave
jne
push
and
mov
mov
pop
fsts
jmp
jb
mov
loop
fs
push
pop
push
xorb
push
dec
out
inc
sub
cmc
aaa
pop
cltd
pop
push
jecxz
jmp
push
and
ljmp
das
pop
dec
ljmp
ljmp
and
sub
dec
add
gs
mov
imul
mov
bound
sub
mov
mov
clc
dec
test
jbe
cmp
jnp
repz
daa
xchg
inc
jecxz
push
movsb
jp
and
add
cmp
mov
aas
je
ja
and
fld
lock
cld
outsb
adc
adc
jmp
popa
push
cmc
test
mov
jge
clc
jae
clc
lods
push
inc
lds
fdivs
inc
cli
fwait
js
or
adc
ljmp
nop
mov
es
lods
jb
adc
sbb
xor
adc
xchg
sbb
jle
sub
rorb
sbb
jmp
add
in
es
inc
loopne
dec
mov
leave
mov
test
shrl
insb
sub
ficomps
add
pushf
in
sub
sarl
ss
fisubl
sbb
mov
subl
out
jbe
addl
cmp
inc
ljmp
loopne
repnz
les
shlb
mov
push
cmp
and
lods
pop
push
sbb
or
push
insl
or
icebp
repnz
fnsave
lods
enter
sbb
sbb
push
outsb
mov
into
xchg
mov
loope
cli
mov
ret
add
and
jns
ds
sti
xor
cmp
lods
lea
add
dec
mov
cmpsl
orl
adc
repz
xchg
jne
xchg
iret
cld
cwtl
push
repz
leave
jno
orb
std
shlb
std
push
sub
sub
fs
in
jg
dec
repnz
adc
int3
sbbl
sbb
inc
jmp
inc
adc
sti
into
sub
pop
test
jl
mov
dec
cwtd
xchg
fcmovbe
sub
mov
mov
sub
or
push
cmpsl
and
xchg
cli
sbbl
imul
adc
sub
xchg
or
out
mov
mov
fistpl
sub
faddl
push
xor
dec
pop
add
sub
or
dec
stc
push
sub
cmpxchg
negl
fldt
mov
cmp
ja
stos
subl
and
lcall
xchg
int3
cmpsb
aad
or
jae
inc
fsubr
fcomps
mov
pop
nop
sarl
sub
mov
movsb
push
loope
xor
and
jo
andb
sub
and
clc
inc
cmp
lods
fwait
pop
push
xor
push
mov
jb
insl
std
cld
scas
push
jp,pt
sub
xchg
cmpsb
js
sub
or
xrelease
cmc
into
and
cmpsb
cmp
data16
cmpsl
imul
sub
cmp
inc
mov
mov
dec
into
dec
scas
dec
inc
push
mov
dec
lods
bound
mov
std
out
out
pop
cwtl
fyl2xp1
add
adcb
or
push
cld
in
aad
hlt
xlat
and
push
dec
and
add
lds
dec
add
out
jle
mov
jno
in
loop
add
popf
cmc
negl
mov
jge
fstpt
sbb
shl
or
sub
out
jmp
out
popa
lock
and
xor
push
call
subb
fists
pop
sub
call
sti
adc
addr16
jle
movsb
cmp
gs
test
add
dec
xor
pop
je
aad
jb
fwait
call
sbb
sbb
cmpsl
pop
xor
ficomps
mov
int
push
add
pop
out
aas
push
push
inc
call
dec
xor
mov
jbe
das
dec
arpl
popl
pop
aad
or
pushl
popa
push
popf
fisttps
movsb
cli
inc
jg
shrb
mov
daa
lods
popf
imul
out
cmp
xchg
dec
ja
push
push
mov
ja
pop
pop
cltd
inc
mov
sub
jnp
hlt
mov
cmpsb
xor
das
pop
into
dec
aas
mov
mov
into
mov
xchg
mov
adc
xchg
movsb
mov
lcall
aaa
jl
mov
leave
mov
dec
pop
mov
pop
dec
push
std
sbb
fstps
or
inc
push
pop
ljmp
xor
cmp
mov
insb
nop
js
fmuls
jge
popa
and
je
das
stos
ja
mov
pop
adc
int
jecxz
lods
mov
mull
mov
and
pop
js
lret
outsb
movsl
mov
fucomp
mov
sub
xor
push
stos
aaa
xchg
lods
adc
sbb
push
jmp
mov
push
fbstp
inc
sub
mov
mov
data16
and
ljmp
sub
jb
add
jno
dec
or
or
sbb
push
stos
add
lea
adc
stc
addl
aad
mov
jo
lods
das
fildl
adc
xchg
inc
cld
sub
addr16
in
push
loope
mov
push
cmp
aas
mov
pop
aad
cmp
sub
sbb
xchg
out
and
add
dec
or
fsubrs
jno
dec
jmp
into
mov
repnz
xor
ror
pusha
lds
stc
jbe
sub
sti
sub
insl
rorl
cmc
pushf
inc
fwait
xchg
mov
add
pop
sbb
fs
cld
mov
or
repz
jb
dec
out
jl
popf
jecxz
jne
dec
push
imul
add
jp
and
mov
lcall
push
sbb
repnz
pop
sbb
xchg
into
pop
shll
add
sub
subb
insl
xor
adc
dec
shr
lds
mulb
fldcw
in
mov
mov
out
sbb
jne
fldl
and
orb
je
in
fnstsw
gs
outsb
inc
sti
mov
gs
lcall
fidivrl
ds
fisubl
inc
rclb
ljmp
mul
pop
test
cmp
add
and
adc
outsl
add
xchg
jno
push
frstor
pushf
movsl
mov
sbb
pop
or
fmul
adc
mov
ja
roll
adc
les
cmp
icebp
and
pop
add
adc
out
orl
xlat
arpl
add
xchg
in
dec
out
cmp
ja
outsb
sbb
or
cld
mov
in
les
fisubrs
stc
test
ja
pop
sub
out
dec
sub
inc
imull
daa
fidivl
fistps
xchg
cmpsb
idivl
outsl
lret
sub
push
pushf
mov
movsb
enter
dec
enter
lods
imul
aaa
rol
daa
inc
call
push
je
mov
orb
push
aas
jae
xchg
or
incb
gs
dec
mov
test
fs
xor
in
mov
mov
cs
pop
das
mov
aad
mov
sub
std
movsb
mov
push
addr16
fwait
nop
fcoms
mov
rcrl
fs
inc
sub
lds
pop
fisubrs
pop
pop
cmp
data16
add
sub
push
mov
inc
dec
adc
cmpb
xchg
xchg
jno
xor
movsl
or
sbb
lcall
dec
mov
out
les
pop
dec
push
ss
xor
loop
jnp
es
mov
ljmp
iret
js
adc
dec
shlb
cmpl
mov
aad
dec
outsl
xchg
cltd
aad
or
jbe
sub
push
test
dec
dec
test
mov
sbb
jge
pop
int3
fists
sahf
aaa
loopne
push
and
out
mov
push
cmpb
fadd
popa
repnz
stos
push
pop
mov
xor
adc
mov
xchg
lcall
inc
test
pop
roll
xchg
stc
pop
in
and
jns
stc
or
inc
into
push
pop
gs
shll
or
mov
sub
cwtl
outsb
cwtl
mov
xchg
fisubrl
outsb
leave
push
daa
in
out
pop
iret
pop
xchg
js
xchg
push
jg
cltd
mov
ja
jecxz
jbe
add
fstpt
pop
jnp
cli
add
mov
push
sub
mov
cmc
jg
jle
fstpl
cmp
lock
repz
lret
cmpsl
ret
sub
loopne
jnp
and
mov
ljmp
mov
out
mov
movsl
fstps
add
daa
movsl
xor
mov
jge
or
jno
jo
add
push
sbb
mov
cmpsl
in
lahf
fists
mov
sub
xor
push
adc
addl
inc
xchg
dec
add
pop
pop
mov
pop
lahf
add
in
roll
jbe
int
and
aad
push
shlb
sub
gs
out
outsb
mov
push
out
in
mov
fidivrl
cmp
mov
flds
xor
ret
daa
leave
imul
push
aam
or
jo
inc
je
lods
orl
scas
addl
es
cmc
out
dec
cs
and
and
adcl
dec
pop
fisubrl
sbb
or
roll
mov
sbb
in
aas
cmp
sub
jo
cld
and
data16
pop
movsb
std
mov
leave
daa
push
data16
sbb
ss
mov
sahf
jo
add
push
or
mov
imul
xchg
or
iret
das
cmp
push
in
enter
out
mov
faddl
stc
and
add
inc
aas
add
push
jno
push
clc
dec
push
in
ret
inc
dec
into
adc
dec
popf
fwait
stos
orl
cs
mov
sub
mov
xchg
and
and
into
ret
sub
cmp
push
popa
daa
or
push
mov
aas
sub
xor
push
jp
movsl
ret
test
mov
aas
push
jg
cltd
cmp
push
stos
arpl
jmp
loopne
in
jbe
cs
fisttpll
cmp
cld
das
in
sub
mov
or
xchg
dec
mov
adc
pop
repnz
dec
jge
adc
idiv
imul
stos
leave
pushf
pop
dec
je
rcrl
pop
aam
mov
pop
repz
lods
jg
mov
movsb
push
imul
mov
ds
mov
aad
sub
adc
adc
pop
sub
movsl
rcrb
add
cmp
cmpsb
out
inc
mov
sub
gs
pop
adc
or
sbb
test
fucompp
cmp
push
dec
leave
test
movsb
lea
mov
out
aam
aas
mov
call
mov
mov
test
fstl
fsubl
mov
jg
rorb
ss
in
mov
sbb
inc
shl
inc
jbe
xor
xchg
out
jle
pop
loope
sub
or
mov
cld
orb
stc
movsl
pushf
inc
or
test
pop
and
push
or
mov
mov
adc
push
mov
les
stos
sub
xor
lahf
inc
cli
mov
decl
mov
cmp
xchg
movsl
xchg
data16
arpl
in
and
push
mull
movsb
push
into
test
out
or
adc
flds
inc
xor
push
aaa
je
jno
rcr
clc
in
test
and
pop
xchg
xchg
inc
int3
and
inc
mov
mov
insl
push
std
negl
aad
cli
push
inc
je
cmpsb
pop
inc
add
add
mov
push
insb
sub
jnp
les
pop
pop
or
inc
mov
and
xorl
mov
add
cmp
jg
stos
mov
fucomip
outsb
jmp
or
sbb
test
outsl
sub
pusha
pop
lcall
cwtl
lds
mov
clc
loope
in
add
mov
aad
cmp
add
push
mov
fisubl
fstps
sbb
xchg
mov
mov
sub
std
sub
cmp
and
cmp
lods
pop
imul
jne
or
cld
out
es
mov
repz
out
aad
push
or
lea
inc
mov
scas
push
jle
enter
and
gs
xor
push
add
fwait
push
and
mov
int3
mov
into
jno
js
adc
xor
jecxz
adc
pop
loope
aad
sti
add
jle
and
sub
sbb
mov
jno
mov
cmp
xchg
stos
mov
fistpl
mov
mov
out
fwait
mov
mov
and
and
cld
mov
aas
sbb
add
roll
mov
test
imul
jg
ss
inc
jmp
lods
pop
jo
mov
dec
inc
movsl
jne
ljmp
daa
or
movsb
jnp
mov
xchg
sub
mov
aaa
sub
add
mov
sbb
jno
mov
mov
jno
imul
test
gs
lcall
or
mov
sub
lods
or
hlt
push
mov
pusha
repz
push
add
and
mov
enter
pusha
sbb
jno
push
jno
xor
mov
push
xchg
xor
add
mov
mov
pop
pop
pop
in
adc
cmp
mov
mov
xchg
cltd
push
hlt
ja
and
push
fmull
rorl
es
sbb
add
pop
es
pop
or
add
pushf
movsl
inc
mov
in
ret
repz
xlat
pop
mov
sub
fsubr
pop
loope
add
pop
insb
sub
shlb
push
sti
movsl
stos
divb
stos
and
arpl
mov
dec
js
adc
push
daa
xor
popa
push
push
insl
jg
pop
es
orb
das
popa
push
xor
popa
or
add
ljmp
xor
push
sbb
test
sub
xor
popa
mov
in
js
add
pop
orl
jle
mov
add
arpl
cmp
mov
das
cmp
pop
inc
add
faddp
sub
fwait
mov
sbb
pop
lahf
push
shr
push
pop
fildl
xlat
cmp
movsb
aam
fmull
std
out
dec
out
xor
cli
xchg
inc
out
fs
rcrl
sbb
pop
xchg
mov
out
outsb
xor
out
or
sub
mov
lods
mov
jns
sub
fs
push
add
cld
cmp
icebp
jge
and
xchg
xchg
ffreep
icebp
mov
inc
mov
pushl
jae
or
stos
ss
in
push
js
sub
cmp
in
add
inc
or
negb
xor
push
pop
orb
icebp
jmp
imul
jmp
mov
sar
pop
mov
popa
or
push
cmpsl
pop
sbb
adc
cmp
adcb
or
scas
sub
sahf
xor
pop
mov
dec
je
mov
or
hlt
mov
jmp
cmp
mov
insb
clc
ds
or
add
jmp
add
xlat
dec
movsb
sbbb
int3
mov
or
and
imul
pop
and
mull
mov
stc
sti
sbb
fwait
push
add
pushf
out
filds
stc
and
mov
in
jl
xor
fisubl
or
pop
xor
inc
jo
jne
mov
jle
push
fcoms
adc
inc
push
lock
mov
aaa
in
mov
dec
mov
stc
hlt
mov
pop
movsl
jl
aam
cmpsl
fildll
mov
adc
pop
mov
add
or
js
test
js
outsb
xchg
dec
dec
jge
jnp
mov
dec
push
hlt
arpl
xchg
push
push
jmp
les
int3
or
dec
insl
and
cmpsl
xchg
lock
sbb
data16
out
dec
add
test
inc
rclb
test
push
rorb
adc
arpl
ljmp
xor
cmp
fs
in
movsb
add
cwtl
sbb
mov
mov
int3
mov
ficoml
cwtl
sbb
mov
aaa
pusha
lcall
loop
outsl
mov
mov
data16
lock
add
scas
jle
mov
xchg
jecxz
in
mov
outsl
mov
cmc
inc
push
imul
dec
iret
xor
cmp
ret
cmp
cmp
in
and
pop
inc
out
addr16
or
ljmp
inc
lods
mov
inc
lds
int
test
xor
hlt
dec
pop
hlt
add
ljmp
movd
adc
or
fdivl
mov
inc
test
xchg
sti
pushf
mov
pop
xorl
pop
push
in
jp
fwait
cmp
ss
test
cli
xchg
jg
or
out
lods
push
stos
adc
int
push
icebp
mov
sub
fucomip
xor
lcall
lods
push
int
std
xchg
das
mov
aas
or
mov
inc
leave
push
rclb
repz
aaa
imul
mov
mov
jb
xor
ds
push
mov
lds
and
pop
lcall
xchg
pop
ret
daa
and
jge
push
xchg
cltd
imul
cmp
dec
lock
cltd
std
jb
cwtl
add
mov
add
out
test
int3
mov
xorb
push
add
and
add
jb
xchg
sub
mov
outsl
arpl
or
iret
cltd
and
mov
and
sbb
dec
imul
das
mov
shll
mov
stc
xchg
das
dec
int3
icebp
xor
lret
adc
inc
mov
pusha
mov
cli
shr
leave
jl
in
fnstcw
sbb
xchg
insl
rcr
lea
jecxz
dec
fisubs
xlat
adc
xor
sbb
xor
cmp
mov
ds
js
push
mov
cltd
mov
inc
inc
jns
xchg
and
scas
pop
out
mov
test
sub
adc
fldenv
roll
ret
sub
pop
addr16
repnz
mov
xchg
call
ds
cmp
sti
cwtl
fidivrl
pop
shl
mov
mov
popa
rorl
incb
push
ds
insl
and
inc
mov
lahf
je
mov
mov
shll
dec
push
mov
add
fisubs
push
mov
mov
fs
xor
hlt
push
jbe
lahf
cmp
sbb
jnp
ljmp
test
mov
dec
clc
ja
push
popf
ret
movsl
repnz
inc
lds
andl
inc
mov
sbb
je
scas
pushf
or
sub
leave
addl
cmp
cmp
or
mov
ja
cmp
sub
push
or
jne
add
in
out
cmp
mov
out
and
sahf
mov
push
add
jbe
pop
bound
push
jmp
fisubrl
sbb
sbb
arpl
insb
fldt
lahf
lods
mov
or
in
xchg
mov
cmpsl
fucomp
icebp
in
in
ret
pop
xor
cwtl
sbb
mov
mov
mov
inc
push
sbb
popa
pushf
daa
in
pusha
jne
test
mov
xchg
pop
mov
lret
cmp
dec
daa
xchg
frstor
cmp
packsswb
sti
jl
insb
mov
dec
xor
xchg
push
addb
rolb
popa
jmp
adc
lret
jge
jmp
mov
cmp
xor
xchg
lgdtl
sbb
mov
or
fsubl
inc
out
mov
push
sbb
inc
and
cmpb
insl
xor
repnz
xchg
in
mov
adc
dec
push
mov
mov
inc
adc
imul
jmp
sti
add
sbb
pop
or
out
repz
push
fistpl
cld
mov
mov
mov
mov
shll
sarl
shl
add
jb
cs
fidivs
movq
pop
inc
add
push
mov
cmp
push
outsb
mov
rol
adc
loop
sub
fnstenv
stos
adc
fiadds
push
cmp
adc
lock
jo
sub
add
in
mov
sbb
mov
jo
shrl
sbb
or
push
push
and
enter
dec
cli
mov
adc
loopne
xchg
hlt
mov
xchg
add
repz
dec
in
shlb
sbb
pop
les
stos
dec
cmp
jl
sbb
ljmp
insl
lahf
push
stos
fldt
lahf
nop
daa
pop
jno
dec
xor
xchg
cmp
dec
pop
aam
or
jmp
or
mov
cmp
cld
sub
test
xor
popa
or
xchg
cmp
sbb
jmp
pop
rcrl
fmull
sub
push
jle
pushf
mov
add
sub
in
jp
shlb
lds
jb
aad
mov
sahf
or
add
icebp
add
sub
lcall
sub
cmp
add
push
cld
inc
arpl
imul
push
lods
mov
jne
dec
insl
movsb
add
in
inc
sbb
popf
mov
jmp
mov
pop
jmp
aaa
into
ljmp
popa
push
stos
bnd
xor
insb
sbb
pushf
ljmp
push
dec
subl
fmulp
sbb
movsb
cmc
jmp
cltd
dec
sti
lahf
push
dec
or
inc
mov
inc
push
aas
outsl
mov
shrb
test
dec
mov
out
cmp
pop
push
xchg
mov
push
and
mov
lods
test
sub
rol
pop
inc
movsl
add
shrb
xor
pop
mov
sub
inc
adc
bound
in
xchg
cmp
jmp
addr16
ljmp
adc
ja
pop
and
dec
inc
pop
lds
or
inc
xchg
xor
cmp
inc
adc
imul
xor
add
test
inc
xchg
pushl
imul
mov
jecxz
cmpsb
push
cmp
xor
xor
incb
icebp
add
loop
cs
sbb
into
pop
jnp
imul
stos
iret
int3
mov
out
mov
es
insl
cmc
shl
jbe
add
lock
test
xlat
adc
lcall
negb
sub
xor
pop
pop
mov
push
rorb
ja
stos
mov
jg
les
adc
cmc
cmp
and
aad
add
adc
sbb
call
dec
jmp
jmp
test
leave
adc
xlat
xor
adc
xchg
push
add
xchg
cmpsb
cmpsb
pop
testb
testl
mov
inc
xor
cmp
jmp
aad
push
and
icebp
sbb
insl
cmp
sub
jno
xor
insl
imull
cmpsb
sub
pop
inc
mov
sbb
adc
inc
aad
fimull
or
or
inc
test
fs
cmpsb
subb
sbb
inc
out
out
add
fcom
and
xor
and
sbb
cmp
mov
test
jnp
in
test
es
xor
pop
adc
and
test
rcrb
enter
xchg
or
loopne
adc
pop
fldt
nop
lods
mov
inc
mov
add
ljmp
shll
insl
push
loop
enter
fisttps
mov
mov
call
sbb
cltd
xor
pop
xorl
jge
test
imul
sbbl
mov
shrb
out
and
ds
aad
aas
inc
les
add
sbb
or
push
or
ret
jno
jmp
jne
mov
pop
dec
in
push
mov
inc
lods
mov
mov
mov
mov
loop
pop
leave
sbb
sti
inc
imul
jb
push
hlt
or
mov
sub
or
filds
inc
out
cmp
test
and
ret
push
inc
sub
mov
call
mov
je
bound
sbb
pop
push
ja
aas
jge
pop
jno
add
icebp
sbb
add
cmpsl
mov
or
cld
sbb
jle
jnp
cwtl
aaa
shrl
add
mov
push
lret
or
mov
xchg
mov
mov
jns
jb
lea
jge
shll
stos
arpl
sbb
testl
sub
mov
xchg
push
mov
in
stc
out
out
push
fcmovne
lods
ds
outsl
fisubrs
adc
mov
pop
sbb
sub
xchg
dec
ds
rcr
or
push
loop
jge
pop
out
push
cmp
add
push
xchg
cmp
not
push
pop
dec
inc
cmp
pop
xor
mov
push
xor
mov
add
adc
clc
add
dec
lds
mov
shll
lcall
insb
in
sub
mov
cwtl
add
call
fucomip
mov
mov
sbb
cmp
mov
popa
stos
ja
jp
fidivs
out
sbb
jge
adc
jb
mov
ficomps
test
fdivp
or
scas
jns
lea
sub
rcrb
add
adc
int
in
adc
fadds
fiaddl
xchg
mov
jae
jb
int
mov
xor
inc
adc
outsl
add
roll
loope
enter
sbb
lret
sahf
sbb
jecxz
inc
and
push
push
mov
mov
ja
lahf
dec
ds
in
sbb
loop
mov
frstor
cmpl
mov
fisubrl
insl
shlb
push
cltd
nop
xchg
adcl
pop
pop
lds
stc
in
pusha
test
ret
sub
mov
in
call
push
outsb
cmp
pop
enter
push
rcrb
addr16
mov
and
sbb
push
cmp
ja
fisttpll
push
and
sub
pop
in
loope
add
enter
repz
lods
xchg
out
jno
ret
xor
cld
xorl
dec
adc
jp
ljmp
cmp
sbb
mov
and
divb
movsl
cltd
aas
add
in
sbb
sbb
cmp
fldenv
int3
repz
jmp
mov
lods
dec
popa
std
cmpsl
push
cltd
jo
out
and
adc
push
jb
sbb
mov
push
fwait
mov
xchg
mulb
fstl
test
push
movsb
outsl
lock
push
repnz
cli
lds
adc
jnp
sar
mov
adc
ficompl
pop
cmp
out
std
fidivrs
add
addb
pop
leave
push
mov
mov
mov
aaa
lods
cld
pop
stc
daa
popf
out
loop
sub
jge
inc
js
daa
loop
into
cli
inc
push
sub
xchg
jno
mov
mov
sti
xor
arpl
jae
shl
je
lcall
mov
enter
cmp
shl
mov
push
pop
dec
imul
aam
or
subl
mov
or
jnp
subb
jns
add
sub
imul
mov
cmp
ret
popa
aad
jns
fs
imul
fadd
mov
add
or
mov
ss
push
in
dec
xchg
out
cmc
test
int3
insb
outsl
sbb
aaa
mov
lret
sbb
imul
or
adc
mov
addr16
jmp
mov
sarb
xchg
stos
push
loop
pushf
inc
sbb
out
pop
sbb
mov
enter
ds
popa
outsl
enter
popa
jmp
add
push
fimull
cmp
out
shrl
jmp
aaa
push
mov
cmpb
loopne
adc
insb
pavgw
shll
sub
cmp
int
ljmp
fistpl
cmpb
pop
movb
pop
fistps
jo
lock
sub
das
xorb
cs
stc
pop
hlt
and
aam
int
mov
xchg
loop
push
mov
push
adc
lret
sub
adc
in
sub
sbb
movsb
cld
aaa
pop
lcall
imulb
stos
or
mov
xchg
sub
xor
movsl
sub
popf
jmp
add
out
xor
loopne
stos
call
std
pop
lea
insb
cmpsb
in
mov
setl
iret
lret
jno
mov
sub
int
movsb
pop
daa
pop
ss
outsl
pop
test
xchg
dec
adc
pop
and
inc
and
sub
and
fimuls
les
xor
sbb
mov
mov
scas
jnp
sbbl
stos
ds
shl
xchg
xor
push
iret
jecxz
lret
jne
nop
push
int3
lahf
lret
sub
push
add
jae
and
addr16
loope
inc
xchg
pop
pop
mov
lea
jnp
outsb
xor
jb
pusha
das
test
mov
js
mov
into
mov
mov
add
push
loop
dec
mov
out
ljmp
jnp
mov
rolb
adc
lds
pusha
jecxz,pn
adc
add
inc
mov
rcrb
cmc
jae
inc
cwtl
clc
mov
add
xchg
jmp
mov
and
dec
cmc
dec
jg
in
mulb
dec
sub
inc
in
mov
push
xchg
lcall
call
dec
and
mov
pop
arpl
lea
sbb
xchg
jae
add
and
mov
imul
fs
sbb
ret
stc
je
scas
mov
and
stos
cmpl
jae
pop
xchg
cmp
imul
lahf
lea
cmpsb
mov
aad
push
cmp
or
fadds
scas
dec
push
aaa
adc
push
shll
sahf
inc
mov
xchg
lret
cmp
jb
jl
push
out
bound
xchg
cli
push
mov
pop
mov
adc
icebp
fimull
jne
es
fstpl
pushw
jne
fcmovne
push
loopne
fiaddl
stos
mov
movsl
test
and
in
insb
fistpll
js
sub
lock
jae
xchg
into
jnp
dec
insl
inc
xor
ret
cs
lahf
cmpsb
pop
inc
test
xor
add
add
adc
mov
loop
ds
leave
push
jns
cmp
repz
xchg
pushf
mov
cmp
dec
jb
mov
xchg
cmpb
add
push
das
or
cmp
sub
decl
inc
sbb
jno
test
outsl
xchg
shll
push
aad
mov
sbb
and
jnp
jns
xor
sbbl
movsb
out
sbb
fidivl
ret
cmc
or
jnp
lret
cs
mov
addb
addr16
lods
jae
scas
mov
pop
xor
insb
lods
or
fimull
inc
cwtl
push
push
cmp
loope
pop
pusha
and
sbb
sub
mov
mov
leave
jl
insb
mov
test
ret
add
pop
orl
mov
jecxz
test
loop
mov
mov
and
iret
mov
fldcw
stc
and
js
into
stc
push
ss
gs
addr16
push
mov
push
push
test
pop
and
mov
sbb
push
aas
test
inc
out
mov
repz
and
rorl
adc
lods
repnz
nop
lcall
out
popf
cs
push
je
pop
mov
nop
xor
enter
repnz
and
dec
test
out
or
pop
adc
xchg
std
jmp
pop
addr16
dec
cmp
mov
adc
out
insl
ljmp
or
dec
sbb
xchg
add
mov
les
imul
in
dec
dec
jecxz
cmp
insl
xchg
ja
scas
mov
aam
jno
inc
addl
shr
mov
fucom
adc
xlat
pop
mov
adc
mov
clc
push
insl
out
xlat
outsb
mov
into
cmpsb
in
sbb
add
cli
adcb
cs
jmp
or
jg
add
int
je
out
clc
jno
add
into
pushf
in
aas
push
inc
gs
mov
push
mov
repnz
movsl
pop
fisttpl
cmp
lds
outsl
mov
xchg
mov
mov
out
imul
fwait
push
or
rcrl
adc
adc
xchg
stos
hlt
data16
loop
cmp
dec
xor
scas
js
shr
push
or
aam
jg
popf
mov
loop
arpl
mov
push
shl
or
rclb
dec
fcmovnb
mov
ficoml
loopne
mov
xor
xor
mov
pop
iret
add
je
push
aad
movsw
mov
push
inc
add
mov
jb
cmp
xor
jns
xchg
ret
jecxz
rorb
jg
movsl
mov
cwtl
std
filds
dec
jg
push
mov
push
es
fwait
roll
mov
mov
repz
arpl
test
sbb
dec
jnp
inc
fwait
xor
adc
rolb
add
loope
mov
in
jbe
mov
lret
lcall
mov
xor
cmp
fisubrs
data16
orl
adc
mov
adcb
ja
ret
mov
mov
jae
mov
cltd
orb
inc
and
in
imul
push
sbb
jecxz
sbb
mov
jbe
lret
out
pop
mov
mov
mov
jne
push
xchg
or
test
jae
jle
jo
adc
idivl
inc
stc
cli
cltd
notl
pusha
lcall
mov
dec
push
mov
cltd
bound
fsub
xchg
push
stc
stos
pop
xor
mov
sub
mov
mov
scas
jge
lret
jo
xchg
or
mov
hlt
loopne
adc
idiv
out
push
xor
rcrb
xor
or
insb
sti
mov
lods
xor
insb
push
add
mov
add
adc
xchg
test
push
iret
sti
jbe
cmc
add
jae
mov
adc
push
mov
jno
fwait
jno
xor
dec
mov
and
inc
fidivl
sbb
adc
mov
and
hlt
sbb
sar
addr16
mov
xor
ja
lahf
repz
int3
adc
dec
inc
pusha
das
xor
bound
in
cmp
imul
fmull
mov
lea
sbb
into
and
cld
adc
sub
enter
mov
js
and
fmulp
cmp
and
cmp
pop
in
stc
lcall
jne
les
out
movsl
pop
adc
mov
lock
shrl
into
pop
dec
or
and
movsb
jge
pop
add
or
xchg
sbb
gs
xlat
mov
mov
out
fcoml
or
jae
inc
pop
jp
clc
mov
stos
push
dec
into
sbb
push
mov
adc
movl
push
int
arpl
neg
frstor
jmp
bswap
cmp
pop
jecxz
mull
push
ja
je
jnp
xor
adc
jl
add
bnd
mov
add
fisttpl
cmpb
adcb
cmp
decb
mov
mov
pop
push
push
notl
adc
in
test
les
stos
lret
jecxz
lea
adc
cld
add
ljmp
mov
jno
fcmovbe
subb
sar
adc
dec
xor
cs
int
pop
dec
pop
inc
movsb
mov
xor
lea
sbb
fsub
pop
outsb
int3
jecxz
pushl
test
notb
shrl
fisubrs
ret
divb
lods
and
gs
jmp
xchg
push
in
xchg
inc
inc
cs
imul
rcrb
sahf
adc
jp
pop
push
sbb
xlat
or
fxch
in
jmp
push
iret
lods
popa
test
cli
orb
push
cli
push
cli
inc
add
mov
into
movsb
gs
subl
xor
sahf
sub
xor
mov
ss
bound
nop
mov
mov
pop
in
mov
fsubl
push
imul
jp
xchg
xor
dec
jecxz
xchg
not
xor
cmp
ds
mov
jge
push
pop
xlat
div
sub
jle
popf
bound
lds
andl
mov
jecxz
sbb
cmp
cmpl
and
push
dec
and
sbb
ret
jne
dec
mov
scas
testb
push
pushf
lock
cwtl
fsubs
lret
add
cs
lret
mov
andl
pushf
das
ljmp
out
add
xor
or
jl
jae
sub
out
rolb
leave
imul
add
xchg
andb
mov
stc
mov
sbb
mov
lret
add
dec
fsqrt
mov
lcall
dec
cli
sbb
dec
clc
mov
sub
lret
inc
in
into
lods
and
pop
movb
sub
test
inc
and
arpl
jl
or
inc
mulb
cmp
pusha
mov
xlat
sbb
dec
vcmpps
adc
fimuls
xchg
rorl
dec
fdivs
xchg
insb
bound
jmp
cmp
scas
inc
dec
das
in
pushf
xchg
aam
xor
lret
xchg
jbe
movsl
stos
insl
pop
pop
fidivs
adc
inc
pop
xchg
or
and
add
icebp
pop
shlb
dec
dec
xchg
lcall
xchg
mov
std
cwtl
sysexit
mov
fiaddl
test
outsb
fisttpll
and
adcl
inc
xorb
inc
and
push
sub
test
jns
and
pop
mov
add
imul
push
mov
and
into
pop
daa
test
ret
lret
jecxz
movsl
xor
push
inc
xchg
das
sahf
mov
adc
imul
std
cmp
cli
push
xchg
jne
fs
adc
icebp
sbbb
out
xchg
lods
mov
mov
add
xorl
iret
insb
cmp
xor
ja
aad
xchg
scas
gs
lret
stos
adc
imul
loop
mov
cld
aas
mov
popa
mov
fcoml
cmc
loop
jnp
ss
loop
pop
xor
jne
cmp
filds
popf
addr16
nop
lods
adc
icebp
adc
mov
and
je
push
and
cmp
xchg
jl
out
cmp
xor
sbb
cs
cmp
mov
inc
ret
out
sub
mov
xchg
pusha
cmc
push
das
jp
aad
dec
insb
or
in
sbb
adc
out
add
and
andl
ficomps
or
dec
xchg
push
inc
ds
sarl
cmp
loopne
lock
aaa
jge
mov
or
repz
adc
fwait
clc
dec
int
and
or
into
xchg
xchg
out
outsb
cli
insl
leave
movsl
cmpsb
sti
call
jge
insl
pop
in
mov
mov
cmpsb
and
dec
bound
fwait
out
or
dec
imul
push
xchg
push
mov
stc
adcl
test
mov
in
jmp
jge
push
cld
rclb
lcall
ja
push
andb
outsb
fstps
aad
add
cmp
scas
mov
mov
jmp
dec
push
into
or
stos
out
mov
out
pushf
inc
aad
loope
enter
xorl
rcll
ljmp
xor
inc
pop
aas
cld
aas
mov
jecxz
or
enter
push
btc
outsl
cmp
aad
inc
mov
mov
inc
xchg
and
add
sub
sbb
sub
cli
and
add
movsl
pop
xchg
pushf
mov
out
mov
out
jp
adc
mov
mulb
fwait
in
loopne
adc
or
cwtl
sub
adc
sub
inc
jmp
xchg
xor
test
in
pop
mov
mov
jo
int3
mov
xchg
xchg
pop
into
push
xor
in
test
pop
mov
mov
shl
nop
fcmovne
dec
mov
add
jns
mov
mov
leave
add
loopne
addr16
sbb
fbstp
shl
test
cmpb
scas
sub
add
mov
jmp
das
push
push
push
push
dec
inc
mov
jp
mov
insl
lahf
jb
inc
inc
movl
adc
or
mov
jecxz
mov
pushaw
fidivrs
iret
out
outsb
daa
dec
fmuls
int
xchg
mov
mov
bound
cs
inc
xchg
add
pop
dec
outsb
dec
shll
xchg
adc
fsts
in
lds
int3
addl
add
mov
jmp
sbb
repnz
hlt
jo
call
mov
imul
outsb
push
ljmp
xchg
dec
or
dec
mov
addl
lret
add
loop
loope
pop
cmp
inc
popf
add
imul
dec
xor
out
pop
orl
imul
inc
mov
inc
out
jecxz
mov
xchg
lret
pop
clc
jnp
scas
dec
ss
test
and
push
adc
xor
in
popf
pop
pop
inc
cmp
das
xor
stos
mov
outsl
sbbb
mov
push
push
aad
sahf
loopne
jl
mov
adc
lods
and
pop
dec
push
mov
outsl
mov
lcall
clc
pop
insl
mov
jnp
test
icebp
adcl
out
jo
scas
shrl
and
adc
in
sub
jb
add
std
pop
fnstcw
ljmp
scas
pushf
les
cld
sbb
jno
pop
xor
inc
fiadds
pop
mov
xor
mov
or
loop
mov
dec
clc
mov
testl
mov
xchg
pop
aaa
shrb
jmp
cmp
and
pop
imul
cmc
dec
xchg
test
adc
sbb
push
fldcw
pop
mov
cmp
dec
fld
xchg
cmp
pop
ficomps
bound
adc
fwait
xor
and
popa
mov
push
pop
movsl
sbb
ljmp
data16
and
dec
mov
outsl
dec
in
mov
ds
insb
fdivs
add
xrelease
ret
loopne
out
jno
jp
pop
mov
jbe
shlb
pusha
test
addr16
jmp
xlat
daa
jmp
clc
push
and
std
dec
int3
mov
in
push
fs
fstps
xchg
scas
inc
pop
mov
sub
xor
aam
out
fucomip
push
decl
adc
inc
pop
sbb
inc
mov
xchg
les
fcmovnb
xor
xchg
test
dec
mov
jo
xor
push
rcll
xchg
lock
pop
cli
subl
pop
cwtl
push
test
or
dec
popa
push
push
push
push
mov
les
out
push
je
daa
jl
aam
in
aam
mov
clc
in
and
insb
sbb
mov
adcb
daa
fcmovnb
idivl
xchg
int3
lcall
pop
ds
push
imul
test
cmp
daa
xorl
add
sbb
xchg
insb
leave
loop
mov
xchg
or
in
and
fistl
call
mov
rclb
test
stc
push
push
push
pushf
jnp
mov
mov
pop
jle
les
clc
pop
imul
mov
xchg
mov
negb
imul
inc
cmpb
pusha
sbb
add
in
je
mov
mov
push
pusha
xchg
dec
pop
pop
iret
fwait
mov
add
repnz
dec
int
mov
addr16
test
pop
cmp
push
nop
sbb
jne
and
mov
testl
xchg
adc
lds
add
fwait
mov
pop
lret
push
push
in
in
notb
jmp
clc
jo
or
rcrl
mov
std
lahf
mov
mov
mov
scas
mov
stos
fstpl
adc
outsl
mov
aas
ret
jb
int3
testl
mov
rcll
sbb
jecxz
push
jl
clc
adc
inc
adc
and
cs
xor
addb
call
xchg
push
mov
jns
mov
icebp
enter
scas
add
scas
rorb
je
test
add
xchg
or
shl
mov
fisttpl
shl
dec
xor
repnz
call
popf
pop
jae
and
js
sbb
insl
inc
sub
rcll
adc
mov
lock
imul
test
out
scas
in
notb
xor
dec
js
les
addb
lds
and
ret
pop
mov
inc
repnz
ja
rorl
jae
dec
cmp
aam
or
sbb
mov
inc
dec
sub
jecxz
cmp
lahf
je
lock
push
insb
cs
sub
out
push
ja
jno
jecxz
jne
movsb
and
cmp
insl
inc
cmpsb
mov
popa
aam
int
mov
dec
cli
add
jle
test
lahf
das
in
push
aad
cld
cmpsb
and
movsl
mov
and
inc
dec
xor
cmp
ret
cs
xchg
pop
imul
popa
jge
jp
mov
fchs
out
cltd
leave
pop
mov
movsb
jmp
rol
ss
aaa
cmpl
stc
jecxz
fwait
xchg
int3
adc
movsb
push
xchg
scas
xchg
ficoml
daa
je
out
ret
pop
lcall
push
sbb
mov
xor
mov
hlt
pop
pop
mov
out
or
cwtl
adc
dec
addr16
cmp
out
fistps
test
inc
sbb
sbb
push
add
in
xchg
pop
imul
in
cmpsb
jp
popf
inc
gs
dec
roll
roll
scas
sub
icebp
pop
push
gs
add
std
andb
jle
inc
fucom
and
gs
ret
xor
insl
shll
stc
sbb
stos
addr16
mov
pop
mov
pop
push
xor
or
sub
fdivs
stos
iret
push
nop
jge
dec
out
and
mov
jge
mov
in
mov
cwtl
dec
push
mov
jp
adc
andl
movsb
rorb
xlat
jo
decl
xchg
mov
push
add
pop
add
test
jae
cmp
das
scas
jmp
push
jne
test
adc
rcr
jnp
push
movl
add
inc
mov
or
cld
call
cmp
imul
call
adc
jle
and
mov
adc
add
das
shll
cmpsb
es
sbb
jae
loop
pop
inc
test
xchg
push
jne
dec
cld
inc
jns
aam
jo
push
aas
pop
movsb
prefetcht1
fs
fs
pop
rclb
or
es
std
xor
pop
adc
mov
mov
stos
sub
js
sahf
mov
or
mov
xchg
push
inc
cmc
xchg
fwait
icebp
popf
gs
rolb
andl
sbb
nop
insb
int3
in
int
iret
fstpl
push
sbb
loop
lds
jbe
fcompl
daa
jmp
div
test
sti
jnp
les
fnstsw
xor
sub
sub
push
and
lock
mov
aad
sbb
ret
cmp
xchg
dec
push
out
pop
lahf
jle
insb
stc
in
into
popf
add
add
stos
and
push
scas
dec
cs
push
push
sbb
mov
inc
leave
aaa
mov
xlat
add
lods
popa
movsb
inc
mov
lret
movsb
scas
sub
addr16
push
stos
sub
movsl
add
insb
sub
mov
je
fwait
pop
ret
add
cmp
shlb
clc
dec
jae
or
in
hlt
leave
out
push
mov
stos
adc
cmp
fucomip
push
into
sahf
pusha
outsb
cmp
or
add
aaa
movlps
roll
out
inc
dec
fistpll
push
fsubrs
fldl2e
sbb
fists
mov
sub
or
fs
mull
hlt
and
pop
cmp
and
lret
int
into
mov
add
xchg
sub
jge
mov
call
mov
repz
loope
fcmovnb
scas
jne
sbb
or
sahf
insl
mov
rclb
repz
outsb
mov
sub
in
push
cmc
insb
mov
and
push
and
xchg
mov
rcrb
and
xchg
xor
mov
or
rcrb
dec
inc
xor
push
sbb
xchg
sbb
in
jecxz
dec
push
dec
movsl
push
daa
xchg
dec
test
stos
mov
xor
xchg
clc
fmul
or
sbb
push
dec
lock
lods
mov
shll
out
fnstsw
sub
jne
jo
lahf
mov
outsl
mov
aas
jecxz
dec
dec
stos
push
lret
sub
push
stc
sbb
adc
stos
and
mov
out
jns
mov
xchg
addb
and
lret
nop
loopne
or
push
xchg
fdivrs
cmp
fbld
mov
push
mov
cmc
pop
jne
stos
stos
jbe
dec
mov
inc
sub
daa
pop
cwtl
aad
iret
stos
adc
shl
adc
lds
stos
or
sbb
subl
and
cmp
lcall
loopne
xor
push
cmp
imul
jp
adc
xlat
loope
aaa
inc
xor
add
mov
cs
adc
add
sbb
mov
andl
hlt
cmp
push
pop
pop
jl
sbbl
adc
lock
rorl
test
add
movsl
rcr
lret
out
xchg
les
sbb
cmpsb
leave
lahf
movl
pop
lods
sarl
mov
lcall
mov
in
dec
push
movsl
call
stos
adc
insl
pcmpgtb
cli
xor
fisubrl
mov
mov
stos
stc
pop
push
jb
mov
lods
scas
push
and
fisttps
andb
dec
xlat
add
iret
aaa
adc
sbb
fisubs
sbb
dec
in
std
lock
cmc
jl
outsl
lods
inc
fnsave
outsb
jns
inc
out
movaps
ret
cwtl
push
sahf
idivb
jecxz
and
ficoml
and
push
adc
cli
xor
cmp
shlb
push
xor
xor
mov
xchg
jg
mov
aam
pop
imul
int
inc
std
out
sbb
xchg
cmp
adc
stos
push
imulb
cli
sti
inc
cmpsl
adc
je
or
pushf
daa
outsb
fimuls
fdivrl
adc
fwait
xor
push
stos
cmp
nop
xchg
aad
xchg
aas
add
mov
push
mov
add
xor
insl
and
and
adc
loope
sub
out
pop
daa
pop
std
sbb
add
inc
aad
xor
scas
jno
and
mov
lcall
sbb
inc
ret
mov
mov
push
popf
aaa
orl
inc
add
imul
push
ljmp
jb
mov
sbb
hlt
aaa
mov
pop
xorl
lcall
movsb
adc
pop
xor
cmp
pop
cmp
inc
loope
push
inc
fimuls
mov
pop
xchg
adc
out
es
test
push
ljmp
jl
mov
jnp
aad
in
lods
int
pop
pop
scas
andb
cmp
inc
pop
push
int
roll
mov
jmp
aas
adc
arpl
aam
iret
test
enter
jns
mov
subb
rcll
xchg
repnz
jo
mov
dec
je
pop
cli
popa
pop
sbb
sbb
xor
sti
cld
out
mov
ficomps
jb
inc
jecxz
push
or
jg
cld
dec
roll
mov
cmc
ret
int
jbe
mov
lds
fs
sub
scas
add
pushf
lds
sahf
outsl
loope
mov
loop
cs
add
aam
or
ja
sbb
push
pushf
pop
pop
aam
mov
imul
adc
arpl
dec
pop
mov
inc
aad
xor
sbb
and
pop
int
cli
sbb
mov
jmp
xchg
inc
xchg
jns
in
ja
aas
jmp
xchg
cmp
jnp
jne
sub
sub
mov
mov
jbe
adc
inc
mov
mov
shll
je,pt
jge
insb
mov
inc
sarl
fdivrp
ds
outsb
loope
dec
sbbl
repz
or
add
stos
icebp
xchg
test
pop
mov
xor
sbb
sbb
pop
and
shlb
hlt
xorb
jns
push
rol
add
sarl
fisubs
filds
ljmp
test
push
out
loop
std
cld
xchg
and
xchg
insl
xchg
fisubrs
pop
outsb
mov
jmp
xorb
jbe
pop
int
or
cmp
pop
nop
mov
nop
pop
ds
push
pop
and
test
mov
dec
jg
daa
adc
fdivs
jns
or
and
fistps
bound
mov
mov
ds
mov
or
cltd
xchg
out
stc
push
push
cli
add
xchg
lods
mov
mov
cmp
and
mov
stos
rcrl
clc
push
lods
adc
adc
arpl
sub
pop
aaa
repnz
in
loop
bound
pop
sbb
push
jns
cld
fs
aaa
testb
js
aam
pop
jl
je
jne
dec
sub
jno
ss
push
adc
fldcw
mov
scas
cld
cli
pushf
lret
nop
push
test
and
push
adc
xor
xchg
mov
out
push
add
data16
cmp
pop
mov
aad
xor
cmp
sbb
call
adc
mov
and
jle
pop
scas
ss
sub
mov
sbb
dec
cmpsb
push
adc
mov
xchg
xor
xor
scas
negl
or
cs
ret
popf
adc
loop
fnsave
xchg
or
bound
mov
mov
jne
mov
out
dec
lea
cltd
ret
inc
maskmovq
leave
xor
push
int3
int3
adc
dec
je
cli
mov
mov
mov
cmp
popa
dec
les
adc
push
and
xor
mov
incl
mov
loop
cmpsb
xchg
xchg
mov
sbb
fndisi(8087
mov
xchg
inc
mov
call
cmpsl
sub
shll
or
sub
ja
jb
int3
into
xchg
mov
pop
xor
add
push
ss
pop
int
les
sub
sbb
cmp
fwait
test
cli
cmpsl
add
movsl
jb
outsl
and
adc
pushf
xor
dec
xchg
cmp
mov
shrb
xor
sti
icebp
hlt
fdivr
gs
and
ret
imul
mulb
adc
inc
icebp
or
mov
dec
or
inc
or
jp
cmp
jbe
push
jle
lret
movsl
pop
xor
daa
shlb
mov
adc
sbb
das
sbb
mov
sub
into
xchg
lret
movsl
cmpsb
outsb
sbb
mov
xorb
rcll
int
xchg
pop
rcrl
cli
and
in
sbb
ljmp
mov
sub
cs
mov
not
mov
addr16
inc
shll
lret
pop
mov
cmpsb
or
aaa
add
adc
fcoml
repnz
push
adc
adc
clc
cmp
sti
sbb
in
loop
jge
out
cwtl
mov
aas
bound
fistpll
jns
sub
cs
sbb
jns
and
and
mov
in
mov
pop
sbb
clc
sbb
cli
xor
cli
jl
mov
cmp
sarl
cli
iret
xchg
push
out
dec
pop
bound
cmc
sbbb
pop
mov
jne
sbb
dec
sub
aas
ljmp
mov
and
xchg
xor
mov
add
shll
xchg
psubusb
stc
stos
inc
fidivs
les
std
xor
xor
fcomip
push
push
in
mov
test
jp
in
push
movsb
pop
xchg
arpl
inc
inc
sub
data16
push
or
sbb
and
shl
push
mov
fwait
je
stc
test
popf
and
cmp
cmpsb
add
ljmp
pop
or
and
hlt
fwait
aad
pop
iret
or
jmp
and
aad
in
pop
mov
dec
test
fmull
test
nop
cs
andb
repz
or
cltd
bound
loopne
inc
mov
sti
inc
aad
repnz
ja
outsb
cmpsb
mov
jmp
icebp
xchg
aaa
and
mov
sub
or
push
in
imul
fcmovnu
repnz
jmp
xor
scas
or
add
out
pop
repz
dec
lds
icebp
xchg
test
xchg
mov
xchg
jno
pop
push
mov
mov
mov
sub
ss
cmp
and
mov
xor
push
push
add
rcrb
adc
dec
adc
push
xchg
addr16
cmpsl
jbe
jmp
jmp
std
pop
push
mov
call
rorb
rcl
ss
cwtl
add
idivb
mov
add
sahf
push
inc
adc
outsb
adc
lods
or
loopne
insl
adc
in
cmp
fldt
je
sub
test
cmpsb
cmpb
mov
imul
fiadds
jle
sbbb
in
cmp
pop
inc
sarl
add
nop
mov
cltd
lods
mov
flds
adc
pop
sti
fld
or
push
mov
fdivr
popf
jb
mov
push
dec
cmp
cltd
andl
mov
in
xchg
mov
iret
in
negl
test
and
nop
lea
sbb
mov
pop
fwait
clc
inc
inc
sti
das
xor
ss
sub
adc
das
xchg
xchg
mov
push
movsb
cmp
push
push
mov
pop
pop
inc
jnp
popa
dec
jmp
dec
in
pop
imul
pop
and
fcoml
add
add
xchg
sub
mov
dec
xchg
push
out
popa
addr16
es
rcrl
pop
push
bound
push
mov
cmp
jp
xor
fidivrs
cmp
test
jb
stc
mov
enter
cmc
inc
nop
cmpsb
or
pop
outsl
push
sub
sbb
or
nop
push
inc
mov
aas
sbb
or
test
test
es
adc
mov
pop
bound
or
mov
mov
lods
std
roll
icebp
addr16
cmp
lds
mov
cmpsl
mov
mov
lea
int
xor
push
lea
mov
leave
pop
push
stc
xchg
dec
mov
push
scas
fs
sbb
jg
jbe
sti
aaa
fcmovnu
sub
dec
push
jge
or
ds
pop
cmpsl
out
xchg
cmp
hlt
fldt
inc
inc
cmp
pop
out
ret
stc
ss
cmpsb
and
dec
push
gs
jl
shll
sar
jmp
mov
mov
mov
push
dec
and
sbb
cmpl
out
push
out
mov
daa
mov
add
xchg
sbb
daa
fisubl
xor
push
insb
rol
add
adc
fwait
bound
idiv
sub
cmp
pop
rolb
int3
push
in
gs
ds
or
gs
imul
adc
jl
movsl
xor
cltd
inc
sti
out
xorb
fsubp
cli
ljmp
add
cmpsb
hlt
in
xchg
xor
frstor
movl
and
xchg
pop
cli
push
push
stc
mov
cli
jl
fistl
ret
cmpb
mov
adc
dec
mov
and
push
loopne
push
movsl
das
int3
int
lods
mulb
or
xchg
nop
cli
adc
push
inc
dec
mov
jo
xchg
ficomps
das
lods
adc
inc
frstor
adc
aaa
cmp
push
pop
in
xor
in
daa
pusha
loopne
dec
xchg
xorl
and
ret
enter
mov
std
scas
in
mov
xchg
int
dec
add
sbb
int3
or
icebp
dec
cmp
add
testl
sahf
and
aad
rcrb
push
xchg
cmp
je
xchg
sbb
aaa
pop
imul
das
dec
leave
xchg
shlb
mov
out
fiadds
sub
and
into
add
cli
in
icebp
inc
adc
arpl
repnz
lea
addb
cmp
xor
pop
loope
dec
js
jle
mov
in
aas
fisttpll
call
sub
enter
mov
lock
pcmpgtw
xchg
sub
or
cld
mov
sub
jp
jle
inc
sbb
or
mov
add
fwait
ss
lods
nop
jbe
enter
imul
or
shll
xchg
or
mov
ja
mov
add
push
popf
xor
stos
test
aaa
arpl
xchg
pop
or
out
js
ja
data16
pop
adc
insb
outsb
adc
inc
push
xchg
sbb
sahf
push
aad
out
jle
mov
mov
push
aam
jnp
test
xor
stos
or
lret
negl
lods
in
and
lods
cltd
mov
fmull
jno
leave
adc
add
mov
cltd
xor
testb
sar
imul
xor
orb
xchg
adc
shlb
lock
repnz
xor
or
mov
sti
mov
scas
or
inc
xchg
dec
arpl
jo
xchg
jnp
jns
jmp
call
jge
inc
and
inc
sarl
mov
call
stos
stc
and
mov
rcl
cmp
arpl
jb
pop
loope
cmc
stos
push
jecxz
lock
data16
setno
call
mov
xchg
inc
jmp
aam
cltd
ret
sub
sub
jmp
sub
repnz
scas
mov
cmp
movsb
pop
mov
scas
mov
sbb
mov
das
lahf
mov
test
pop
gs
mov
pushf
or
popa
push
add
and
aad
repz
orl
xor
xchg
enter
cs
lcall
popa
mov
and
icebp
mov
inc
mov
ljmp
aam
je
jbe
fcmovnbe
jmp
dec
scas
pusha
ret
mov
test
cmp
xchg
fld
stos
inc
jle
fldcw
xchg
ss
int3
ret
xchg
iret
xlat
out
loopne
xor
jns
xchg
cmp
test
jle
ds
lahf
or
mov
aaa
aad
jmp
cltd
cmp
frstor
inc
jne
inc
sub
mov
mov
pop
outsl
sbb
in
add
cld
lea
xchg
pop
xor
push
mov
and
mov
ficompl
mov
jne
xchg
pop
popa
loop
shll
dec
push
mov
into
sub
fidivs
push
mov
jae
movsb
fs
into
pop
xchg
shrl
mov
inc
loopne
jne
mov
fsts
pop
xorb
mov
test
int3
out
leave
insl
cmp
call
daa
dec
cltd
dec
std
fucomp
inc
cmp
xor
xchg
outsl
sbb
mov
xchg
dec
xchg
mov
mov
jnp
dec
inc
push
cmp
ret
cmpsb
aaa
decb
ss
sbb
andl
and
out
sbb
mov
imulb
and
cmpsl
iret
push
sbb
in
out
sti
xchg
xchg
mov
cltd
mov
ja
mov
in
nop
mov
fnstsw
push
cmp
and
mov
mov
dec
mov
mov
in
iret
and
push
aad
sub
ss
sub
xor
xchg
das
ja
into
jecxz
xchg
pop
insb
xchg
aaa
xor
icebp
inc
xor
inc
or
repz
je
pop
and
loop
rorl
mov
sub
sub
push
cmpb
or
test
xchg
xchg
jns
add
and
dec
and
les
scas
push
orb
dec
jbe
je
cmp
push
push
mov
push
or
insb
out
call
push
cmp
adc
jmp
mov
in
sbb
pop
iret
icebp
dec
test
xchg
lods
icebp
mov
repz
push
addb
aaa
test
jnp
ret
imul
fucomp
inc
in
out
aad
andb
flds
push
fsincos
adc
mov
jbe
mov
pop
mov
rol
das
cmp
xorl
insl
inc
mov
rcrl
sub
lret
fimuls
fistpll
int3
jne
loop
mov
jae
push
fs
out
lds
cmpsl
adc
jnp
ljmp
or
stos
xchg
sti
cs
cmp
cld
mov
dec
insb
xor
dec
mov
popa
cmp
lcall
test
in
push
iret
gs
push
bound
mov
and
jb
shrb
ja
xchg
mov
mov
inc
xor
cwtl
inc
icebp
push
mov
adc
pop
xorl
leave
and
pop
gs
xor
push
xchg
iret
pop
mov
xlat
xchg
sub
scas
mov
xor
ja
mov
fimull
fcompl
daa
je
int3
jmp
and
mov
repz
mov
cld
xchg
ret
nop
pop
rcll
bnd
jne
dec
mov
ds
mov
popf
insl
jge
add
out
fsubp
add
push
dec
hlt
in
ds
and
les
pop
jmp
mov
arpl
add
add
notl
mov
stos
pop
je
push
xchg
pop
mov
xchg
loopew,pn
fwait
mov
push
stos
ljmp
jne
lods
and
test
add
push
ret
xor
and
or
pushf
jl
lock
insl
bound
nop
pop
call
mov
decl
mov
inc
pop
push
mov
mov
and
hlt
sti
jb
add
test
fwait
or
shll
and
fsubs
in
mov
jno
mov
scas
ret
pop
jnp
shrb
lods
inc
and
cmpsb
pop
xchg
and
push
add
add
xchg
pop
dec
std
lods
loop
call
mov
mov
call
dec
jbe
xchg
stos
cmp
sbb
outsb
inc
or
stos
test
cmp
imull
loope
sub
movsl
xor
cwtl
fcoml
pop
sbb
mov
out
push
xor
mov
inc
push
lock
fisttpl
je
dec
dec
fidivrs
mov
ds
add
out
push
test
adc
push
dec
pop
cmpsb
mov
mov
jl
fdivr
icebp
add
sahf
push
push
jb
das
jmp
cmpsb
xor
pop
xchg
sub
jg
fisubs
call
mov
inc
scas
push
add
movl
inc
aam
pop
shrb
jbe
mov
dec
cmc
loope
and
mov
xor
repz
test
cmpsl
insb
ret
jmp
imul
jecxz
aad
test
pop
xchg
xchg
scas
cmp
lods
cs
inc
mov
movsl
fnstsw
adc
adc
push
xor
xor
and
add
nop
adc
into
in
test
cs
push
cmpsb
xor
or
and
jns
cmp
lcall
lcall
sbb
add
ficoml
adc
movsb
mov
in
loopne
scas
pop
mov
mov
imul
mov
mov
cltd
xor
dec
jne
ds
push
push
jmp
push
jle
fmuls
pop
fisubs
aam
add
cmp
cs
popa
sub
xchg
mov
and
xchg
scas
jne
mov
mov
mov
adc
lcall
jae
mov
add
mov
push
xor
xchg
mov
xchg
inc
xor
outsl
push
test
aaa
and
mov
stc
mov
ret
in
addb
daa
jb
inc
or
jmp
sbb
mov
and
add
fdivr
mov
movsl
xchg
stos
mov
mov
outsb
push
ljmp
sahf
inc
and
fadd
enter
popa
dec
imul
mov
push
and
cs
sub
mov
pop
jge
pop
insb
bound
out
pop
cmp
aad
xor
or
fs
popa
and
rol
mov
outsb
lcall
xlat
inc
in
xor
stos
shl
stos
roll
mov
xchg
adc
mov
lods
push
dec
inc
and
roll
dec
inc
jl
and
cmp
test
dec
add
adc
iret
mov
pop
jl
and
adcb
jbe
inc
xchg
in
pop
jb
mov
jg
xor
leave
cwtl
sub
int
jo
or
lcall
dec
jle
pop
decb
push
and
orb
rclb
add
call
stc
jp
jno
mov
lea
jb
jl
jecxz
lcall
xchg
jns
xchg
rorb
mov
mul
adc
cmpsb
push
cmp
cld
mov
ret
adc
mov
jle
jle
mov
or
vmovss
mov
lods
inc
in
push
mov
out
ds
hlt
out
fsubrl
add
aas
in
test
jmp
sti
aam
sbb
lcall
sub
mov
pop
sar
ds
push
cli
shrl
test
add
in
pop
call
sbb
xor
push
repnz
jns
lods
test
data16
dec
mov
out
adc
inc
nop
pop
jmp
xor
adc
std
mov
jae
stos
in
les
cmp
add
xor
mov
xor
jmp
ss
pop
fidivs
imul
mov
push
cmpb
xor
sbb
rcll
xchg
imull
push
in
lahf
shlb
add
or
jg
lret
inc
xchg
jl
jmp
insb
icebp
in
cwtl
shl
cld
mov
sub
andb
push
pop
loope
pop
repz
mov
inc
rcr
stc
aad
movl
repz
push
test
xorl
call
insl
cld
dec
jecxz
or
inc
packsswb
lock
add
sub
jb
inc
mov
leave
sub
subb
cmp
out
mov
aas
mov
dec
adc
popa
enter
cmpsl
ret
call
pop
push
mov
push
ror
fnstcw
sbb
lcall
icebp
or
sbb
jno
adc
mov
lea
push
pop
dec
add
pusha
ja
cld
scas
jbe
negb
inc
xchg
xlat
mov
xchg
aad
data16
pop
std
fwait
cmpsb
lea
or
dec
xchg
dec
push
mov
or
cmpsl
or
dec
pusha
ss
jp
cwtl
jns
sahf
lret
out
mov
lret
xchg
aam
jle
jbe
arpl
loop
pop
cmp
ret
test
fsubs
outsl
jl
arpl
fs
xchg
addr16
out
push
call
sbb
mov
jne
cmp
arpl
pop
push
jg
std
and
xor
ret
mov
or
xchg
inc
ds
xchg
cmp
xchg
cmp
pop
cli
fnstsw
int3
sarb
std
fbstp
decb
cmp
stos
pop
pop
pusha
sbb
push
in
out
aas
subb
sub
cmp
das
dec
pop
repz
xor
ret
push
sub
mov
sti
lcall
or
scas
popf
pop
jmp
dec
push
jmp
lea
dec
mov
push
mov
aad
inc
sbb
fwait
dec
rorl
xorl
lcall
inc
mov
shrb
xor
jae
loopne
cltd
push
aas
xlat
push
and
inc
xchg
insl
lods
pop
icebp
movsb
mov
jecxz
xchg
lcall
int
test
adcl
outsl
out
mov
pop
sbb
mov
loope
les
mov
aad
sub
popa
test
les
pop
jl
outsl
rolb
lds
sbbl
aas
or
pop
mov
mov
mov
scas
and
ret
add
dec
lea
xor
pop
aam
fsts
push
add
outsl
iret
jle
movsb
and
xchg
inc
shlb
hlt
fcompl
repnz
fstpt
dec
ficomps
xchg
add
dec
cmp
jp
stc
cmp
ret
xor
fmull
outsb
jp
xchg
mov
jae
jne
xchg
mov
xchg
shll
das
jnp
mov
mov
mov
shlb
subb
mov
adc
filds
imul
shll
mov
mov
popf
cmp
sbb
sbb
add
inc
addb
popa
add
cmp
sbb
or
rcll
jg
ret
sbb
pop
jl
das
xchg
and
lahf
mov
jae
inc
imul
aam
gs
lds
dec
cli
cmp
enter
aam
nop
cwtl
mov
idivb
xor
rcrl
jg
cmp
out
outsl
daa
sahf
push
mov
loop
mov
and
in
out
push
inc
push
push
inc
push
inc
push
in
js
test
shlb
popa
fmull
xor
cs
cmpsb
xor
arpl
lcall
jecxz
mov
xor
or
je
shl
mov
xchg
jle
mov
jmp
bound
into
leave
adc
push
xor
dec
hlt
loope
orl
dec
imul
push
in
idivl
shl
addb
repz
clc
pop
out
ficoms
lea
lods
jo
xchg
dec
pop
fcoml
lods
mov
sub
in
and
jne
loop
sub
pop
mov
dec
mov
dec
and
inc
mov
int
addl
mov
mov
cmp
movntq
pop
popf
mov
add
lret
add
and
or
imul
cmpsb
inc
cld
cmpsl
scas
rcrb
bound
jbe
daa
push
in
dec
xlat
push
or
das
aaa
jnp
lods
add
hlt
mov
enter
int3
push
call
cs
mulb
xchg
and
and
sbb
lret
sahf
test
out
push
mov
mov
lock
xor
mov
inc
arpl
mov
mov
dec
and
push
adc
add
mov
daa
mov
xchg
inc
out
repnz
das
or
inc
jbe
sub
cltd
jp
xor
xchg
jmp
xchg
cli
hlt
adc
pop
xor
dec
jp
pushf
pushf
jg
xor
fbstp
push
xor
pop
es
jnp
adc
mov
push
imul
movsl
adc
in
cmp
push
inc
xchg
sub
pop
pop
int
pusha
add
fistpl
push
and
push
les
iret
inc
mov
sbb
inc
push
xchg
sbb
sahf
dec
push
add
ja
sub
sub
dec
adc
es
lds
inc
or
icebp
mov
xchg
xchg
mov
xchg
adcl
and
sub
sti
js
out
scas
lea
std
int
inc
xor
in
mov
mov
ljmp
inc
sbb
fwait
sub
push
push
inc
mov
mov
les
cmp
in
pop
xor
lea
jl
cmpb
adc
mov
xchg
or
xchg
clc
lods
inc
leave
push
lret
loop
into
fmuls
je
ss
adc
aas
lods
fistl
lods
ret
in
and
roll
mov
pop
cmpl
sub
push
mov
jnp
cmpsb
iret
neg
xchg
xor
xor
pop
ss
loop
jne
arpl
sub
cmpsl
mov
sbb
lods
fiaddl
push
cmp
mov
add
in
ja
inc
dec
jb
jg
dec
cwtl
or
and
inc
imulb
pop
adc
in
xchg
cmp
xchg
addr16
jne
add
lds
add
or
fists
rorl
sub
movsb
or
mov
inc
xchg
bound
cwtl
ret
jmp
enter
jl
or
loop
out
adc
inc
push
test
inc
adc
pop
or
jb
paddd
mov
and
jmp
into
sub
les
rcll
pop
jp
dec
sbb
cmp
aaa
lods
push
jne
mov
inc
jmp
imul
xor
rclb
test
xor
outsl
aaa
fidivrl
in
xchg
sub
jle
fistps
lea
pop
popa
nop
js
jo
inc
jg
fs
in
jo
xor
or
clc
add
insb
ss
std
out
test
xchg
in
movsl
and
fsubl
mov
ss
rcr
cmpsb
xchg
inc
int
add
sbb
mov
cli
xlat
enter
xor
xor
dec
lcall
aaa
hlt
inc
sbb
push
aad
add
es
jns
in
add
push
dec
test
inc
cmpb
out
into
addb
mov
shrl
mov
add
xor
ret
lret
jae
cmp
shrb
and
adc
lcall
add
xlat
movsb
sub
adc
sub
lret
pop
ret
inc
outsb
push
repnz
xchg
ret
and
inc
adc
ljmp
adc
insb
mov
or
and
pop
fsts
int
jbe
mov
sub
inc
mov
movsb
insl
scas
mov
repz
sbb
mov
xor
hlt
sub
into
movsl
mov
ds
sub
jbe
ja
push
xchg
int3
or
and
mov
daa
mov
push
inc
push
cmpsl
inc
out
mov
pop
mov
pop
jmp
call
cmp
movsb
mov
lahf
mov
dec
enter
and
cmp
xchg
std
int3
pushf
inc
mov
and
dec
repz
in
fldl
mov
stos
mov
or
test
mov
xchg
xor
adc
ret
pop
stc
inc
add
cltd
xor
mov
ljmp
cltd
lods
mov
jl
xor
or
test
mov
lods
mov
mov
stos
sbb
push
cwtl
jecxz
push
lret
loopne
aam
jmp
lret
cmp
cld
inc
call
aad
outsl
cltd
scas
shll
mov
int
in
mov
sbb
ds
sbb
cmp
pop
push
mov
arpl
mov
mov
dec
cmpsb
pop
or
mov
lret
inc
bound
or
adc
jp
push
adc
dec
or
fstpt
inc
dec
fcompl
push
sbb
scas
and
mov
cmp
fmuls
xchg
xorl
sbb
movsb
xchg
inc
inc
rol
xor
insb
sub
shlb
mov
loope
lock
mov
mov
sti
xchg
movsb
inc
cltd
ss
int3
imul
insb
mov
or
insb
sub
push
shlb
adc
add
sub
dec
test
mov
mov
blsfill
dec
in
or
xchg
mov
pop
inc
add
loop
xchg
hlt
lahf
andb
xchg
cmp
rol
xchg
fdivp
outsb
lahf
pusha
mov
inc
adc
int3
inc
rcrb
ficoms
mov
pop
out
ret
and
addl
and
into
test
hlt
xchg
sbb
lcall
push
in
repz
sbb
imul
dec
enter
add
mov
inc
push
mov
es
mov
cs
mov
repz
sub
and
fbld
pop
sbb
pop
mov
dec
xchg
scas
xchg
xchg
add
dec
cmp
mov
cmpsl
or
jp
int3
sbb
addb
daa
jmp
lea
pop
std
insb
pusha
jbe
outsl
cmp
fildll
into
cmp
and
es
test
fdivr
mov
jg
cmp
pop
in
stos
enter
mov
sbb
incb
adc
aad
sub
pop
ret
fisttps
fcoml
jge
or
cld
cmp
leave
fs
or
call
inc
pop
xchg
add
repz
lock
mov
out
rcll
jb
iret
mov
push
lcall
cmp
stos
and
mov
nop
scas
sbb
or
es
fldt
or
arpl
mov
cld
insb
push
loop
imul
jle
mov
dec
sbb
pop
mov
jne
or
mov
test
mov
xor
sub
adc
and
shrb
pop
xor
repz
push
sar
lods
add
bound
jg
inc
outsb
or
dec
and
adc
jbe
xchg
testl
inc
jecxz
and
pusha
or
push
add
mov
insl
dec
cmpb
pop
adc
adc
pop
test
hlt
ret
add
cmp
add
inc
call
cmc
inc
push
push
xor
aad
inc
push
lock
lcall
vzeroupper
iret
sub
ja
mov
push
scas
lods
leave
movsb
stos
inc
cmp
mov
add
jae
imul
in
mov
cltd
mov
mov
adc
mov
scas
mov
xor
fdivs
into
cwtl
hlt
and
in
cli
das
lods
loopne
add
xchg
jl
dec
movsl
xchg
mov
mov
cmp
pop
cmp
pop
sbb
xor
ret
enter
dec
stc
ds
aam
orb
inc
psubusb
dec
std
stc
lds
fwait
cmp
addr16
xchg
push
dec
outsb
into
mov
xchg
adc
sub
outsl
roll
fcompl
push
sbb
outsb
pop
imul
inc
add
adc
clc
push
adc
cmpsl
hlt
ds
minps
into
lds
aas
cmp
pop
pop
sbb
mov
icebp
outsl
les
leave
shl
and
adc
seto
mov
push
push
insl
aad
adc
mov
arpl
and
gs
adc
push
sahf
dec
mov
mov
cmp
add
mov
ret
in
sahf
sub
adc
hlt
adc
repnz
ret
fwait
mov
popf
xchg
jge
in
jge
pop
mov
push
jp
push
imul
sbb
cmpsl
sub
jo
fisttpll
popf
jge
push
int
test
dec
cli
jns
aaa
inc
inc
xor
or
cmp
or
les
lret
cwtl
jbe
mov
and
nop
fisttps
xor
mov
push
sbb
rorl
insb
mov
push
cmp
xchg
mov
aam
icebp
popa
jnp
lret
cmp
add
ret
mov
hlt
addr16
ljmp
and
jo
adc
adc
inc
and
call
sahf
jge
cwtl
adc
xchg
std
mov
cs
in
call
and
ljmp
and
test
xlat
loope
pop
ss
push
and
push
pusha
stc
sbb
xchg
data16
dec
cmp
mov
jnp
fildl
and
faddp
sub
xor
int
sbb
and
inc
shrl
lods
rcl
je
leave
and
or
mov
das
cmp
add
mov
pop
lds
movsb
cmpsl
scas
xchg
xor
pop
sbb
xchg
bound
shlb
out
add
enter
dec
mov
shll
sbb
stc
mov
adc
out
fs
jae
push
jl
lods
cmp
fwait
mov
inc
inc
push
push
je
mov
fldcw
mov
sarl
mov
push
mov
popf
sbb
cmove
jbe
mov
out
mov
popa
push
mov
jnp
insl
cmpsb
sbb
push
fadds
or
xor
loope
mov
pop
adc
dec
push
roll
lds
test
jp
mov
fcompl
and
pop
rol
cmpsb
xchg
and
out
sbb
jno
pop
pushf
mov
leave
add
js
and
mov
insb
mov
jecxz
dec
das
mov
adc
xlat
rclb
jmp
add
ds
int3
xchg
push
out
lock
daa
sub
or
movsl
imulb
sub
lcall
cmc
pop
cltd
fisubrl
xchg
inc
inc
lods
or
aam
mov
gs
mov
cmp
xlat
xchg
sbb
pop
in
lea
test
jbe
mov
js
hlt
jp
sbb
hlt
popa
mov
sbb
or
jae
adc
js
cmpsl
lods
cmp
mov
inc
cmp
sbb
jns
pop
dec
cmp
xchg
aaa
je
mov
mov
sub
inc
cwtl
sarl
hlt
stc
push
iret
daa
repnz
movsb
jo
jmp
ja
sbb
mov
data16
fisttpl
loopne
jl
mov
dec
pop
pop
hlt
mov
out
and
and
in
fwait
js
addr16
vmovdqu
js
xchg
cld
jmp
add
mov
inc
inc
js
loopne
jp
pop
sbb
lret
xchg
push
ret
or
adc
push
push
punpckhwd
ss
les
cmp
hlt
jle
dec
lock
insl
icebp
mov
mov
xchg
icebp
gs
incl
out
roll
pop
adc
sub
lret
ljmp
pop
mov
imul
shrb
dec
inc
xchg
inc
cs
mov
lea
add
xor
sbb
mov
pop
and
or
push
jp
lods
jo
lahf
push
mov
xchg
mov
push
vgatherpf1dps
pop
addl
mov
xlat
pop
ds
xchg
jne
inc
cmp
and
bound
push
cmp
xor
dec
aam
out
push
ficoml
ret
xor
test
xor
push
insb
mov
and
movsb
xlat
jns
mov
int
call
xchg
loop
movsb
or
adc
jns
daa
bound
loop
ljmp
jae
xor
dec
inc
and
mov
pusha
adc
cmp
stos
xchg
jp
cmp
or
pusha
sub
and
scas
cmp
sahf
xchg
pop
jo
test
shrl
and
and
scas
enter
xchg
fdivr
cmc
ret
pop
sbbl
hlt
movsb
fwait
pop
or
add
pop
push
out
pop
nop
push
dec
movsl
imul
jecxz
lret
mov
lcall
ljmp
adc
cmpsb
push
cmp
or
sbb
stos
cmpb
cld
xchg
xor
cmp
mov
add
jbe
repz
jbe
jae
and
add
iret
xor
mov
inc
ljmp
mov
pusha
dec
xchg
adc
mov
gs
aam
sbb
movsl
lahf
dec
push
loopne
xor
movsl
xor
mov
mov
or
scas
pop
adc
sub
in
out
sahf
push
outsb
jns
jb
sti
ljmp
xchg
call
jno
sbb
sti
jno
pop
jg
adc
mov
dec
cmpsb
jbe
cwtl
lea
and
je
out
int3
rcl
mov
das
repnz
fldl
cwtl
sub
add
stos
outsl
adc
sub
clc
les
jo
das
sahf
xchg
pop
fucomp
push
dec
jg
pop
subl
icebp
push
cmp
or
lods
add
pop
push
aas
sub
test
cmpsb
mov
add
inc
or
mov
imul
repnz
mov
out
in
mov
sti
mov
and
xchg
adc
dec
jmp
rorb
sbb
out
and
ficomps
push
push
out
dec
add
xchg
cmp
push
icebp
mulb
and
push
fnstenv
jl
mov
mov
fstpl
int3
jp
outsl
jge
mov
das
pop
icebp
pop
stos
xor
mov
xchg
jge
mov
test
mov
fsubs
jp
or
pop
jle
popa
or
bswap
pop
out
cmp
rorl
shlb
cld
in
insb
cmpsb
dec
xchg
or
xchg
sbb
scas
sub
das
push
jle
in
jmp
or
xchg
jp
xchg
int
pusha
sub
out
fidivl
call
xchg
adc
xchg
hlt
in
rcl
int
std
loopne
push
loop
push
jle
fldcw
int
ss
cmpsb
les
pop
push
fdiv
inc
andl
mov
lahf
and
sbbb
clc
sti
push
orb
inc
cmp
inc
xchg
jo
stos
cmc
add
outsl
adc
add
ja
scas
push
xor
aam
and
ljmp
xor
sti
mov
xchg
xor
leave
push
ret
add
xchg
es
mov
repz
add
xor
mov
xchg
es
repnz
push
lods
cltd
fwait
dec
pusha
leave
ficomps
fcmovb
lret
cwtl
mov
xchg
out
imul
push
fwait
xor
shll
xchg
sbb
adc
xchg
outsb
rorb
mov
inc
and
dec
dec
dec
xchg
cmp
inc
fldt
mov
and
clc
and
mov
adc
ljmp
fistpll
dec
push
sub
das
roll
inc
cmp
lret
add
and
lret
dec
dec
lds
jle
data16
lock
jmp
inc
dec
subb
call
jecxz
int
into
ss
fnstsw
push
addl
stos
push
movsl
ljmp
xchg
inc
jp
cwtl
xor
mov
and
mov
movsb
jae
sbb
les
dec
sbb
loopne
je
sbb
xchg
xor
movsl
xor
push
movsb
ficoml
ljmp
or
aad
call
push
mov
mov
test
pop
cmp
in
push
xchg
xchg
mov
xor
es
add
int
xchg
and
fmuls
roll
push
into
icebp
fcomip
jg
bound
subb
dec
adc
and
mov
in
jge
fs
in
xor
sahf
stos
xchg
lock
lea
add
mov
pop
and
movsl
fldt
mov
mov
sbb
out
mov
pop
adcl
adc
cmp
loopne
or
gs
adc
or
jl
sub
jecxz
mov
push
and
testb
pop
adc
inc
jae
or
cwtl
outsb
cli
lahf
lahf
loop
aaa
loop
and
out
xor
and
jno
mov
dec
enter
mov
push
inc
jnp
xor
insb
mov
imul
ror
inc
cmp
les
das
pop
jns
cmp
jns
out
lahf
lds
cli
icebp
sub
stos
cmp
shlb
jg
cld
cld
mov
mov
push
leave
sbb
mov
mov
pop
imul
cmp
lret
fimuls
jmp
and
xchg
jmp
es
je
pop
imul
mov
imul
or
mov
fisubrl
jno
daa
inc
xor
loop
cmp
imul
push
mov
es
xchg
dec
int3
push
mov
mov
push
aaa
add
arpl
pand
jo
mov
sbb
cmpsl
adc
clc
jg
or
or
sti
aaa
mov
sub
jp
or
shlb
cltd
cld
pop
xchg
mov
sbb
ds
push
arpl
cmp
push
push
stos
int
ss
sbb
fs
test
jnp
sbb
add
or
push
rol
mov
std
mov
scas
in
pop
pop
sarb
xchg
sub
ret
or
into
push
xlat
roll
enter
pusha
mov
inc
sub
sbb
mov
aad
das
jnp
push
cmp
pop
pop
test
enter
pop
push
push
and
call
xor
mov
mov
inc
xchg
xor
add
out
hlt
out
int
mov
push
cmp
fimuls
mov
lods
enter
jge
test
or
faddl
insl
dec
js
cld
xor
subb
adc
xor
mov
ret
and
cmp
mov
cwtl
popf
test
aas
sub
inc
dec
xchg
std
and
outsb
int3
and
aam
xchg
fisubrs
in
in
test
and
cld
lret
movsl
pop
mov
mov
xor
mov
inc
pop
popf
fdivrs
sbb
push
and
rcr
ds
sbb
clc
dec
ficomps
pusha
mov
aam
mov
movsb
lret
mov
mov
loop
test
push
int
es
cmp
push
in
shlb
lea
gs
mov
stos
or
mov
push
xor
mov
xchg
popf
fdivrl
fmul
sub
sbb
and
inc
sub
fstpl
lret
mov
jg
sub
jecxz
dec
mov
mov
aad
loop
mov
mov
lock
fists
jmp
lods
jne
mov
testl
out
mov
mov
nop
mov
inc
mov
mov
jge
leave
jge
lds
stos
aam
adc
test
jge
leave
xchg
gs
xchg
pushf
insl
enter
or
movsb
stos
and
mov
lods
mov
pusha
aad
xchg
jmp
sub
sti
das
pop
mov
mov
js
xchg
daa
pop
dec
sub
aam
pop
sbb
ret
add
sub
or
jno
jo
call
adc
inc
je
insl
mov
outsb
jecxz
push
mov
cmp
jg
lret
lret
mov
xchg
test
cld
sub
data16
xchg
lahf
push
outsl
fdivrl
pop
mov
xchg
add
cmp
add
bswap
xor
ret
sti
or
leave
dec
rdpmc
inc
cld
sbb
int
adc
popa
mov
jle
mov
cmp
in
vpshlb
sub
jne
es
js
out
mov
stos
mov
ja
cmp
mov
cmp
rclb
sub
fcompl
mov
or
scas
stc
jle
push
aaa
mov
pop
xor
lods
jge
rolb
data16
xchg
rcl
outsl
jns
mov
outsb
imul
nop
push
push
xorl
adc
iret
icebp
xor
add
std
lods
pop
and
cmp
xorl
dec
mov
xchg
push
fldt
aas
incl
jbe
or
lahf
add
popf
test
or
add
pushf
pop
imul
lock
xchg
cs
xchg
fisubrl
or
push
repz
mov
push
jae
pop
rcll
in
sahf
pop
push
push
mov
popf
std
sbb
add
mov
cmp
lds
sbb
adc
push
cmp
push
insb
loope
loop
pop
pop
xor
jne
js
fistps
clc
pop
js
add
add
dec
jno
sarb
mov
push
fmuls
pop
je
ret
cmp
adc
mov
cld
xchg
add
cwtl
ss
dec
mov
fwait
adc
pop
or
sbb
dec
xchg
pop
test
push
sub
sub
addb
enter
dec
fs
cs
cmpsl
ret
mov
aam
pop
ret
int
sbb
mov
xchg
lods
aad
insl
outsl
popa
xchg
mov
pop
lret
jb
pop
sarb
shlb
imul
cmp
mov
pop
and
fadd
popf
fnstsw
inc
or
and
loopne
js
jecxz
testb
xchg
mov
adc
mov
xchg
sbb
fwait
aad
push
adcb
cwtl
loop
repnz
dec
and
loopne
lahf
les
int
jo
cmp
jle
push
dec
mov
mov
sub
mov
popa
in
dec
add
mov
inc
mov
out
movsb
fiaddl
sbb
mov
jbe
dec
jl
add
cmp
rorb
jo
arpl
rol
inc
cmpsb
into
gs
push
push
sub
popf
mov
fldl2t
sahf
sarb
sbb
clc
adc
arpl
jle
scas
iret
and
pop
ja
das
pop
push
sbb
pop
pop
inc
push
xchg
iret
cs
out
insl
jne
xsave
sub
movsb
cwtl
mov
xor
add
adc
mov
in
aaa
pop
and
fiaddl
es
dec
fsubrl
xor
incl
jmp
stos
mov
push
repnz
cmpsb
cmp
shlb
jns
pop
icebp
frstor
ret
cmpsl
adc
cwtl
jns
dec
dec
imul
lcall
push
ja
adc
fdivp
inc
fwait
pop
push
mov
movsl
xchg
jmp
jb
xchg
rclb
jnp
and
scas
cmp
sbb
cmp
jno
push
jbe
or
xchg
fs
or
gs
cmp
movsl
sahf
out
and
in
arpl
and
pop
xchg
outsb
repz
leave
lcall
xor
repnz
leave
xchg
clc
jmp
mov
test
leave
jl
xchg
arpl
fldenv
insb
or
mov
mov
out
cmp
push
xorb
mov
jno
imul
xchg
xor
repnz
sbb
ret
ret
or
rcll
jl
fwait
test
xchg
rcll
and
mov
aas
cs
lahf
sub
test
jae
std
inc
mov
dec
mov
mov
call
ret
roll
mov
aaa
bswap
cmp
ret
loopne
ret
mov
rclb
shl
or
pop
cmp
or
js
pop
mov
push
pop
gs
repz
test
pushf
pop
mov
sub
int
lahf
xchg
dec
sub
pop
repnz
bound
add
in
fmuls
stos
shl
jmp
lea
pusha
daa
ret
mov
jg
sub
popa
dec
xchg
xchg
inc
ds
adc
sbb
jp
loop
fucomp
xchg
repnz
loop
in
sbb
data16
xor
xor
fisttpl
dec
movsl
mov
aas
cld
mov
dec
mov
cmpsb
jbe
addr16
dec
xor
jae
jns
aad
movsb
sbb
cmp
shrl
add
push
dec
cmp
pop
jo
xchg
aas
or
out
je
into
subb
loope
sub
bound
mov
leave
xchg
jne
jle
movsb
outsb
fsin
jbe
lret
xor
jnp
sarl
xor
aas
cli
cmp
fdivr
cmc
out
scas
inc
push
movsb
jmp
loop
std
out
ss
sarb
mov
jo
dec
adc
push
ror
stos
incl
pop
or
push
adcl
jle
pop
cmp
xor
adc
push
cmc
mov
jp
sarb
in
shr
les
les
cmpsb
in
movsl
lods
cli
cmp
xor
int
jno
in
adc
into
jecxz
xlat
int
push
outsb
repnz
ljmp
out
gs
jecxz
add
ljmp
jne
cltd
loope
mov
push
les
lcall
repz
and
sub
enter
int
xchg
loopne
xchg
cmp
jp
xchg
sbb
scas
lret
aam
sub
jae,pt
or
lea
invd
push
and
enter
scas
loope
imull
inc
dec
sti
inc
std
ja
xchg
adc
xorb
sarb
lret
pop
loope
lods
sbb
ljmp
fs
mov
mov
pop
ss
lea
call
add
mov
test
mov
xchg
push
xorb
call
adc
xchg
xchg
loop,pn
movl
in
jo
or
test
sub
inc
xlat
shlb
xor
sbb
jge
bound
mov
pop
subl
jnp
jo
push
fld1
pop
out
idivb
ja
aam
lret
scas
cmpsb
or
push
repnz
sub
pop
test
cmp
xor
xor
mov
cmpsb
flds
mov
jns
push
ja
inc
add
adc
xchg
out
out
push
pop
int
and
adc
adc
pop
es
mov
push
int
subl
orb
push
or
mov
test
mov
cmp
add
nop
or
cmp
xor
outsb
add
mov
dec
call
out
stc
fsubr
ret
add
fldl
movsl
lretw
fstpt
jle
dec
bound
mov
lea
fbstp
fucomi
inc
sbb
cmpsl
fcompl
push
test
xor
movsb
imul
andb
addr16
mov
lea
mov
jbe
shrb
jecxz
scas
fstpt
adc
add
and
lods
dec
aad
mov
push
mov
and
mov
ror
inc
int3
mov
adc
push
push
insb
fmull
sbb
jnp
or
mov
dec
fadds
ljmp
mov
pop
jp
aad
push
push
pop
flds
jmp
sub
ss
and
mov
sbbl
push
push
mov
iret
sbb
xor
fidivrs
in
mov
addr16
in
mov
jle
cltd
loopne
or
mov
popa
jbe
icebp
xchg
out
jnp
bound
adc
push
dec
add
popf
dec
mov
lahf
lea
jp
enter
int3
cli
xor
push
js
xchg
iret
mov
pusha
xchg
cmp
out
outsl
xchg
ret
jbe
aas
xlat
pop
sar
orb
mov
mov
jl
inc
sbb
ret
aam
loopne
out
dec
out
mov
je
cmpsb
adc
out
inc
xor
jnp
jmp
sahf
push
xorl
sbb
sarl
and
add
loopne
cmpsb
jle
call
adc
dec
lret
out
lods
sbb
xchg
pop
adc
fiadds
xchg
lret
rorl
add
cmp
lcall
adc
js
mov
pop
and
pusha
add
and
xchg
sub
mov
xlat
adc
cmp
lahf
mov
shlb
jno
loopne
xchg
pusha
push
xor
or
sbb
clc
ficoml
pop
test
xchg
ss
popf
jo
stc
mov
pop
inc
movsl
xchg
fildl
jnp
mov
jg
jecxz
mov
es
or
int
repz
cwtl
int
fwait
data16
jo
std
and
or
insb
dec
mov
in
mov
pop
iret
and
or
dec
mov
rcrb
cmp
cmp
pusha
stc
sbb
fisubs
test
mov
pop
dec
roll
inc
fwait
cmpsb
rorl
loop
cli
add
loop
inc
insb
iret
lret
xchg
dec
mov
ss
aam
push
cli
pushf
push
icebp
xchg
mov
scas
loopne
and
in
ljmp
jg
in
leave
je
into
or
fdivr
xchg
divl
std
mov
inc
scas
or
stos
mov
inc
ss
sbb
sub
stos
xor
fcoms
ja
add
mov
add
adc
jb
std
lock
fcom
jle
shl
inc
push
mov
scas
dec
ret
jp
std
notl
les
aad
scas
lret
ja
testl
xchg
jnp
jo
jl
ljmp
sub
rorl
dec
push
lds
cmpsl
pop
jb
lock
ljmp
inc
and
das
add
js
fists
faddp
and
das
jae
std
sbb
xchg
push
sbbb
jp
mov
iret
das
sub
sbbb
mov
cltd
or
cmpsb
mov
cmp
jno
imul
testl
pop
lret
push
ljmp
out
push
idivl
add
js
dec
mov
addr16
in
int
popa
addr16
pop
xor
fadds
pop
shll
loopne
mov
add
mov
stc
mov
pop
push
test
fs
mov
ljmpw
sbbl
inc
or
fstpt
fbstp
jle
lahf
mov
or
add
jo
repz
cmpb
inc
inc
mov
rcrb
lea
cmp
test
and
lds
add
push
icebp
lods
mov
cmp
xchg
cltd
sub
int
fcoml
iret
xlat
gs
mov
jmp
sbb
adc
sbb
mov
arpl
ja
push
arpl
aas
arpl
xchg
xor
aaa
push
inc
xor
insb
push
call
inc
cld
int
jle
sbb
fwait
insl
pop
gs
xchg
pop
mov
xor
gs
test
sub
stos
cmc
jmp
dec
xchg
test
arpl
notb
fimull
or
push
int
fwait
cmpsl
fsts
jb
inc
jg
add
sbb
inc
test
push
add
or
rcll
mov
fdivrl
ret
or
fsts
adc
jae
push
imul
sbb
push
into
test
out
jle
rorb
jle
xchg
dec
dec
lret
in
sub
outsb
aad
je
add
lea
pop
rcl
and
pop
clc
xchg
addr16
and
pushl
icebp
inc
ficoms
add
mov
pop
sub
inc
popf
xor
xchg
push
mov
test
lahf
popf
jae
sti
jbe
stc
dec
push
add
jns
inc
xchg
andl
aam
leave
aas
gs
or
and
add
popf
mov
iret
inc
or
and
or
pop
cmp
sbb
lea
mov
push
push
insl
mov
or
cmp
pop
lods
push
decb
jmp
xor
xor
lret
xchg
sub
xlat
pop
mulb
sub
fisttpl
mov
push
and
mov
push
cmp
into
dec
sub
and
mov
sub
cwtl
inc
or
mov
dec
sub
in
sbb
ficoml
sahf
test
jb
mov
dec
sbb
enter
call
cmp
adc
push
or
adc
mov
jecxz
call
push
jae
in
ret
aas
and
mov
call
sbb
pop
cltd
xchg
inc
xchg
mov
jno
lock
mov
das
scas
jb
xor
in
dec
add
cmpsl
xchg
dec
das
fstpl
push
adc
jne
fdivl
cmp
inc
scas
les
pop
in
cli
jb
mov
out
out
repnz
mov
out
pop
push
sbbb
outsl
cmp
xchg
xor
pop
sbb
fsts
les
cmp
xchg
push
cmp
test
and
call
sub
fcompl
cmp
lcall
daa
fadds
push
pop
sbb
mov
cmp
jnp
lea
imul
f2xm1
jp
out
xor
jo
adc
sbb
jecxz
ret
outsb
fldt
and
ret
and
push
xor
adc
repnz
insl
sub
xchg
xor
and
adc
sbb
ds
insb
or
xchg
jle
js
or
test
fdivs
mov
push
in
cs
addr16
stos
into
shll
pusha
pop
rorl
ret
fdivr
xchg
or
add
dec
je
sahf
divl
insb
mov
rcl
xchg
cmpb
loop
or
repz
mov
dec
dec
sahf
out
jae
fs
mov
sbb
js
repnz
arpl
in
outsb
sub
push
xchg
test
pop
daa
sub
fisttpll
iret
stos
hlt
inc
xor
lock
xor
les
push
out
mov
pop
and
imul
xor
push
xchg
js
clc
sbb
jo
frstor
add
repnz
mov
xchg
sbbb
sbb
mov
pop
dec
xchg
test
andb
outsb
and
ror
xor
imul
daa
pop
data16
ds
jnp
in
add
ret
mov
addr16
push
insl
dec
pop
push
mov
push
sub
mov
movsb
pop
sahf
xchg
pop
and
mov
dec
movsl
sbb
pop
xlat
jae
cmp
int3
xor
push
lret
push
out
push
imul
cld
pusha
mov
sub
insb
sti
pop
fbstp
sahf
je
xor
pop
pushf
pushf
mov
repz
jo
add
pop
rorl
mov
je
adc
mov
fcomp
xchg
mov
ret
dec
pop
sbb
repnz
adc
dec
jne
mov
xchg
nop
xchg
mov
jg
cmc
repz
test
mov
stc
add
out
es
xor
push
out
out
mov
test
sub
adc
xchg
lock
iret
arpl
mov
cmp
hlt
pop
mov
mov
das
add
push
mov
cmp
and
or
jmp
ds
ljmp
cmp
cmp
test
cli
int3
into
subl
xchg
push
inc
sarl
stc
lods
movsb
mov
xchg
mov
or
jno
repnz
fsts
inc
stc
push
cmpsl
movsl
stc
pusha
into
sub
jp
movl
lea
push
loopne
mov
leave
test
cs
inc
mov
pop
cmp
xor
push
dec
or
js
mov
and
mov
add
adc
pop
push
mov
mov
in
popf
gs
popf
pop
or
and
lret
mov
mov
jbe
or
cs
out
cmp
jbe
pop
das
stos
les
push
in
pop
jmp
sti
mov
mov
int
pop
sahf
sarb
add
popf
pushf
dec
out
jp
jle
adc
cmpsb
sbb
out
adc
xor
scas
sbb
adc
mov
cmp
push
scas
orl
fs
cld
push
lret
sub
or
notb
daa
adc
and
push
cmc
and
repnz
insb
dec
cmp
ret
xor
xchg
addr16
outsl
dec
sarl
dec
out
lods
sahf
mov
cmpsb
dec
sbb
ds
mov
push
jmp
scas
gs
iret
inc
mov
popf
xchg
test
aas
pop
sar
sbb
sbb
push
xor
mov
mov
mov
neg
sub
jp
push
sbb
push
mov
pmaddwd
sub
push
push
mov
xchg
add
mov
add
ret
leave
popl
stos
jmp
mov
mov
test
push
mov
aad
popa
in
cmp
pushf
out
call
jle
lahf
push
test
lds
js
jp
dec
testb
in
loope
andl
test
hlt
xchg
enter
mov
enter
jg
adc
xchg
inc
add
scas
push
fdivrs
sbb
cld
rcrb
loop
sub
mov
lcall
mov
test
mov
pop
mov
loope
mov
lods
nop
in
dec
add
jecxz
sarl
cmp
shlb
mov
out
mov
rorl
sbb
movb
dec
sbb
rcl
scas
mov
negb
sbb
jmp
pop
xor
fwait
int
mov
xor
jmp
and
bound
cmp
cli
in
pushf
imul
roll
in
popa
adc
shlb
and
push
sub
adc
pop
lock
orl
ss
popf
call
cmp
push
and
cmp
rol
movsl
sub
pop
cmp
sar
js
fs
push
pop
rorl
leave
shlb
dec
mov
mov
xor
aam
cmc
lcall
push
xor
jbe
xchg
aas
mov
adc
sub
in
add
sub
dec
movsl
stc
mov
mov
xor
in
sbb
inc
cmpsl
and
insb
dec
mov
lcall
in
xor
dec
mov
adc
out
jp
push
out
mov
jo
push
movsl
jbe
rcl
mov
push
jae
mov
ss
pop
xchg
dec
push
or
xor
inc
stos
jl
sti
mov
push
jmp
sub
roll
ficoml
repnz
adc
rorb
lcall
icebp
add
sbb
adc
in
push
insb
imul
imul
nop
subb
sub
xchg
push
imul
imul
adc
cmp
fiaddl
mov
inc
push
sbb
or
out
loopne
dec
and
in
push
fcomp
xor
adc
popa
fimuls
ljmp
lock
xchg
cmp
negb
and
mov
inc
pop
jnp
outsl
fistpl
in
mov
sbb
fiaddl
fbld
dec
add
enter
sbb
push
popf
mov
cmp
add
outsb
mov
sub
aas
adc
bound
shll
in
stos
outsb
aaa
scas
mov
dec
pop
and
jp
mov
sahf
rclb
cltd
jae
lret
xchg
or
dec
cmp
dec
mov
pop
dec
jmp
jecxz
sbb
jg
mov
lret
push
pop
leave
jmp
push
cmpb
ror
enter
xchg
lret
add
inc
add
outsb
mov
outsl
int
xor
pushf
test
sub
and
or
and
xlat
mov
cmc
loope
fwait
mov
data16
sub
ljmp
add
sbb
sub
pop
les
movsl
xchg
xor
sti
jo
jo
add
cli
jl
push
arpl
xor
mov
mov
shr
xchg
lods
inc
jl,pn
in
test
xorl
std
sbb
clc
cmp
sub
cli
mov
test
jo
jmp
cli
rcl
jne
out
and
inc
cmp
sahf
jne
mov
mov
mov
mov
xchg
mov
xor
xchg
jnp
sub
out
mov
add
cmp
addb
xor
lret
push
sub
cmp
jp
ret
xchg
sbb
push
loopne
xchg
or
mov
or
mov
jge
popf
out
popa
push
cli
mov
dec
inc
dec
sbbl
insb
fmull
mov
pushf
add
inc
fmuls
aas
fstl
scas
or
mov
xor
inc
stc
push
cmp
xor
xor
lret
push
mov
inc
sub
sub
shlb
mov
xor
lods
out
jno
jns
mov
add
adc
lret
and
imul
adc
aas
or
ror
sub
aad
add
add
or
cli
icebp
or
stos
fstpl
das
cltd
jmp
orb
popa
fwait
jb
js
pushf
test
movsl
mov
leave
fcomps
arpl
cmpsl
aas
pop
pop
jg
adc
test
mov
es
push
pop
bound
mov
push
lahf
mov
inc
dec
xchg
jo
or
jae
cmp
popf
adc
lds
icebp
cmc
pop
pop
xor
ret
rol
outsl
cli
sahf
sbb
cmp
or
adc
pop
mov
add
add
xchg
enter
xlat
aad
push
lea
test
dec
aas
pop
push
das
mov
add
push
in
lret
pop
ficomps
fwait
das
sub
sahf
sti
adc
and
pop
mov
lods
iret
call
scas
sub
fdivrs
jmp
mov
in
popa
arpl
pop
lea
in
pushf
cltd
dec
adc
fldz
gs
jbe
loope
std
loop
cld
shrb
mov
sbb
lea
imul
jne
dec
outsb
je
lret
mov
mov
sub
scas
mov
pop
lock
mov
add
sub
sub
dec
cs
lods
and
or
mov
shl
popa
mov
out
shrb
or
ret
fildl
test
dec
cmp
mov
jg
push
cmp
mov
dec
xchg
and
in
add
xor
js
stos
adc
mov
or
pop
mov
mov
test
push
adc
fs
cltd
xor
push
xor
shlb
jp
mov
xlat
jb
xlat
cmp
test
xor
ss
neg
movsb
std
cmpb
movsb
sub
dec
fiadds
shlb
lret
cmp
sub
stc
push
cltd
dec
mov
add
leave
popa
shrd
inc
pop
inc
push
mul
cmpsb
das
mov
in
xor
sbb
ds
push
sub
sub
sbb
lret
in
cmp
repnz
pop
xchg
je
mov
lret
fs
push
or
xor
test
sbb
and
jl
push
pop
adc
adc
adc
push
dec
push
xorb
lcall
add
xor
int
xchg
mov
fistps
in
movsl
fidivrs
popf
jae
rorl
lret
rcrl
sub
orl
push
pop
aam
push
xchg
inc
jmp
mov
jle
fisubrl
dec
cld
cmpsb
inc
pop
ret
dec
adc
fldenv
mov
xlat
faddp
cli
call
sbb
mov
adc
aaa
lock
movsb
cmp
cltd
shlb
imul
rclb
sub
xor
cmp
movsl
and
pop
aas
aam
jmp
cmp
inc
dec
lcall
outsb
ror
xchg
sbb
mulb
ret
adc
inc
aam
lock
sahf
cs
test
mov
test
jne
adc
add
daa
lret
pop
pop
in
rclb
ret
sub
movsb
sub
je
ja
jge
and
int3
cld
dec
sbb
in
stc
cltd
xor
sbb
mov
pop
fwait
scas
dec
push
lret
inc
mov
and
inc
push
lods
fiaddl
cmp
and
stos
sbb
loop
enter
sahf
dec
jle
addr16
lods
xchg
sub
aas
leave
cmp
or
sbb
and
add
lahf
fisttpl
stos
loop
xchg
adc
adc
lods
mov
mov
in
cltd
lcall
ljmp
out
fwait
jge
repnz
add
and
pop
lea
das
sarl
mov
stc
xchg
test
cld
les
push
pop
test
scas
dec
es
cmpsb
xchg
rolb
ljmp
mov
and
je
or
adc
repz
mov
cmp
pop
xor
xlat
clc
push
pop
jbe
jmp
fistpl
addr16
pop
push
mov
scas
dec
xchg
dec
int
and
push
inc
nop
bound
pop
sub
js
mov
dec
aad
insl
lods
pop
sbb
iret
adc
push
and
cli
pop
adc
cmp
outsl
loop
adc
jmp
push
out
out
loop
xlat
or
mov
sbb
adc
outsb
sub
and
xchg
es
and
jno
xor
mov
or
jg
int
adc
or
icebp
and
in
xor
shrb
std
pusha
jae
enter
inc
xor
in
lock
mov
xor
mov
add
mov
pop
xor
nop
adcb
dec
cmp
mov
out
sub
mov
cmp
int3
sbb
sbb
jns
push
pop
push
jno
ret
ljmp
jecxz
push
jecxz
in
js
cwtl
sbb
xor
xor
xchg
jbe
cmp
mov
mov
dec
out
repz
pop
shll
in
flds
mov
xlat
clc
int
add
out
mov
add
mov
pop
int
cmp
fs
das
movsl
lods
jmp
pop
cmpsl
xchg
sub
popf
rorl
and
stc
lock
jo
jmp
mov
push
ds
push
sub
cli
cmp
mov
add
jae
inc
push
dec
dec
mov
cmp
lret
mov
push
dec
pop
or
adc
and
xor
mov
outsb
outsb
mov
ret
ret
jo
sarl
cwtl
jne
es
cld
sti
ret
mov
fwait
jne
push
add
mov
inc
outsl
pop
mov
adc
mov
dec
aam
ficoms
subl
jno
int3
push
inc
mov
dec
xor
shlb
lret
inc
gs
or
mov
popa
add
mov
stc
pusha
mov
pop
jno
pop
sbb
ljmp
pop
insb
and
cmp
fninit
mov
xor
pop
mov
fldenv
ljmp
pop
gs
loopne
ljmp
mov
pushf
imul
jnp
sti
dec
flds
add
inc
cwtl
pop
xchg
and
ficoml
jl
lods
jne
sub
out
imul
pop
inc
pop
call
cmp
inc
lds
daa
popa
cld
jecxz
sub
mov
adc
inc
idivl
daa
sub
xor
test
push
negl
mov
sub
cmpsl
jp
in
sahf
sub
pop
in
sbb
xor
xchg
fucomi
push
jl
incl
xor
mov
pop
loope
test
mov
out
xchg
sahf
push
aaa
sbb
sub
ror
pop
cmp
pop
lahf
pop
adc
dec
jne
movsb
push
mov
icebp
stos
lods
scas
cltd
movsb
jecxz
and
daa
cmpsb
das
mulb
xor
std
stc
inc
scas
mov
push
into
popf
or
mov
hlt
jne
xor
pop
mov
icebp
pop
inc
int
xchg
pop
pop
sti
lcall
mov
mov
and
mov
xchg
cmpsl
xor
dec
hlt
cmpsb
push
out
mov
cmp
mov
subl
int3
nop
pop
iret
ret
enter
hlt
push
add
repnz
lcall
and
jbe
pop
pushf
pop
cmp
outsb
xchg
std
ret
aas
enter
loope
xchg
mov
mov
in
sub
xor
or
fdivp
cld
xchg
sbb
cmp
cmp
sub
data16
dec
adc
dec
gs
or
clc
jle
movsl
pop
arpl
cmpsl
pop
push
mov
shlb
cmp
adc
loop
xchg
mov
ljmp
adc
mov
adc
xor
dec
add
loop
add
ficompl
lods
in
push
xchg
or
fstps
aaa
shll
pop
sub
ss
xor
xchg
cmpsl
inc
setno
jl
in
popa
lahf
testb
dec
shl
xchg
or
cmp
cmpsl
and
cmp
mov
jg
fidivl
cltd
dec
iret
xchg
cmp
push
sbb
stos
push
sub
rcll
push
fwait
dec
mov
mov
es
mov
jo
daa
inc
stc
lahf
sbb
add
jns
dec
push
add
rolb
and
int3
pcmpeqw
cmp
inc
push
lret
jecxz
sbb
xor
cmpsb
dec
aam
test
add
sti
test
fbld
mov
shr
call
sub
mov
cmp
mov
shll
rol
inc
rolb
mov
mov
push
pop
rorl
sub
mov
dec
stos
loope
pop
hlt
cltd
pcmpeqd
adcl
push
not
sahf
ja
xchg
xlat
jl
adc
inc
jne
out
call
pushf
sbb
mov
andl
adc
pop
pushf
in
jp
mov
pop
inc
pop
xlat
push
jmp
ljmp
faddl
xchg
xor
das
jecxz
incb
fdivrl
push
addr16
sub
je
mov
dec
dec
jp
hlt
popf
adc
loope
pop
cmp
inc
or
mov
add
or
lret
mov
shll
mov
fdivl
pop
cwtl
int
pop
jmp
popf
ret
bound
in
lock
sarl
xor
or
and
xchg
push
decb
aaa
xchg
sbb
sahf
fwait
test
insb
jl
test
je
lock
push
jo
cmp
icebp
adc
adc
les
hlt
fisubrl
popa
orl
fwait
cmp
xchg
scas
cld
aas
in
inc
sti
xchg
cmp
shlb
pusha
sbb
inc
dec
popaw
inc
mov
mov
imul
loop
test
sbb
or
mov
jno
xbegin
dec
inc
outsb
sbb
xchg
push
hlt
mov
jo
jg
mov
jae
and
sbb
arpl
hlt
icebp
and
or
subb
mov
sbb
ss
int3
scas
jp
clc
dec
data16
xor
xor
xor
subl
push
cmp
or
lahf
imulb
pop
jo
cmpsl
movsl
xor
int
jge
sub
sbb
popf
pop
add
movsb
notb
sub
dec
into
into
sbb
sub
inc
int3
and
or
jmp
or
sub
aas
fdivp
js
sbb
jg
subl
je
pop
or
jge
daa
and
push
repnz
lret
mov
sub
pop
adcb
ss
shl
repz
cltd
outsb
aam
fsubrs
out
int3
fwait
inc
test
lret
arpl
push
or
mov
inc
popf
sbb
lea
sub
lods
movsl
xor
rolb
pop
loope
add
push
test
orl
in
sub
les
les
mov
mov
jns
pop
sub
daa
sbb
pop
push
pop
mov
mov
xor
dec
jae
jno
ds
sbb
pop
out
sbb
inc
test
sbb
add
sti
aas
mov
ja
fmull
pop
out
call
fs
sub
lahf
mov
xchg
pop
sbb
addb
ljmp
pop
or
and
lahf
push
daa
movsl
mov
scas
push
mov
adcl
pushf
fsub
ss
inc
inc
aad
mov
xchg
mov
iret
xchg
bound
out
add
inc
cmp
xor
lret
out
mov
xor
jns
push
adc
add
int3
fidivrs
and
sub
sub
dec
sarb
dec
add
and
sub
lock
nop
shl
outsl
clc
cmp
insb
add
cld
loop
dec
push
out
inc
arpl
cmp
aam
iret
jnp
jno
in
rorl
xchg
gs
xor
movsl
scas
addr16
mov
fsubs
in
or
insl
jae
sbb
dec
cltd
push
or
sti
cwtl
jg
leave
dec
adc
popf
rcrl
mov
cmp
or
xor
jnp
imul
ret
sub
adc
push
lods
mov
lahf
jnp
nop
add
sbb
shll
xorl
cmp
lock
pusha
stc
test
testb
fnsave
dec
mov
sbb
test
push
adc
cli
popf
bound
inc
cmp
fmuls
ret
cmp
push
mov
xor
and
push
fnstsw
mov
int
add
arpl
cmc
mov
xorb
dec
jb
add
test
sarb
and
daa
dec
movsl
xchg
and
iret
jl
rolb
test
sbb
jns
into
je
and
in
test
shlb
push
mov
pop
cwtl
aad
xchg
jne
and
cmp
int
jg
xchg
jae
adc
xor
or
pop
and
test
ja
mov
mov
rol
testb
incb
jg
aas
or
jecxz
jne
arpl
sahf
pop
or
xchg
dec
pop
push
sbb
repnz
xor
mov
xor
arpl
xchg
cmp
xor
xchg
movsl
in
leave
mov
mov
fcomi
xchg
std
pop
mov
sub
fidivrs
pop
push
rcll
out
out
fcoml
mov
jge
movsb
notb
mov
fwait
das
mov
subl
pop
mov
push
lcall
jno,pt
fiaddl
pop
fcomps
xchg
inc
pop
jg
xchg
fisubrs
aaa
notb
pop
xor
xchg
in
scas
inc
sub
sbb
popf
andl
mov
cs
aam
lds
mov
lcall
inc
or
shll
inc
scas
outsb
movsl
inc
pop
mov
nop
cmp
inc
jp
pop
jmp
or
je
jnp
pop
sub
xlat
icebp
repz
inc
inc
adc
mov
jno
mov
or
pop
and
rcll
mov
cmpsl
and
les
pop
xchg
push
jmp
data16
inc
outsl
inc
cmp
push
pop
jl
bound
mov
andl
ja
mov
hlt
inc
cmp
lsl
paddq
loop
pusha
cmpsl
sbb
data16
stc
xchg
xchg
jns
aaa
lods
scas
cltd
fcmovnu
xchg
daa
jg
in
pop
xor
repz
mov
fdiv
pop
push
repnz
mov
lds
and
add
out
in
push
cwtl
icebp
pop
int3
pop
dec
subb
sbb
or
cwtl
out
adc
aas
nop
imul
jecxz
and
pop
imul
jae
dec
lcall
in
xor
xchg
push
cld
dec
dec
push
dec
mov
cmp
out
loop
lret
mov
push
and
cmp
cmp
mov
bound
jecxz
mov
sar
div
mov
rcr
push
and
inc
sarb
imul
ds
add
pop
dec
mov
xor
push
or
xchg
out
movsl
jbe
add
pop
nop
jmp
mov
in
xlat
mov
mov
mov
popf
cmp
dec
test
inc
mov
xchg
mov
ljmp
lods
sub
push
and
mov
xchg
mov
push
in
xchg
leave
jns
out
mov
lret
repnz
faddp
in
vpunpcklwd
iret
pop
pop
or
xor
fcoml
in
fnop
loop
dec
aad
push
and
pop
lcall
mov
mov
adc
mov
das
jnp
lahf
push
fldenv
push
mov
ret
mov
pusha
sbbl
push
out
dec
mov
in
test
sbb
jl
adc
lds
shl
mov
loop
cmp
sbb
les
movsb
std
mov
push
pop
add
or
pop
dec
stc
cli
iret
gs
clc
xchg
fcmovu
fcom
jg
jp
aas
add
xchg
xchg
xchg
inc
xor
mov
jae
adc
xor
xchg
lock
xor
push
imul
inc
negl
sahf
out
add
cmc
xor
push
mov
lods
cwtl
xor
hlt
das
cmpsb
cwtl
mov
fwait
add
mov
lahf
mov
daa
loope
pop
jmp
push
in
mov
and
aad
cmp
and
aam
push
cmp
push
fnstcw
dec
repz
inc
insb
xchg
fisttpll
cmc
or
mov
xchg
cwtl
push
push
js
dec
rcll
adc
add
mov
in
cmp
outsl
push
je
sub
fadds
ds
pop
push
push
adc
fsubs
sbb
imul
sub
test
xchg
mov
loopne
imulb
pop
or
jb
inc
fcmovne
lea
pop
pusha
and
jl
lcall
rep
lods
js
mov
out
sbb
jbe,pt
adc
sub
leave
xchg
adc
sbb
imul
add
imul
aaa
test
cld
xchg
mov
aas
mov
sbb
sbb
inc
loopne
pop
fprem
lods
dec
mov
lahf
cmp
push
add
dec
nop
fcmovbe
insb
xchg
jno
mov
or
ljmp
mov
es
dec
mov
add
rorl
lods
pop
jg
mov
lods
idivl
inc
or
cmpsb
fwait
adc
cli
nop
addr16
push
shlb
mov
sub
out
inc
dec
xchg
fisttpl
fcoms
lcall
mov
jl
mov
pop
pop
xchg
mov
mov
das
inc
and
push
push
mov
sub
add
ja
cmp
ds
pop
mov
lahf
xor
ja
repnz
imul
lahf
pop
out
aad
mov
xor
loop,pt
jmp
les
jl
xchg
sub
das
sbb
mov
cmpsl
mov
das
cmp
sti
push
push
fs
dec
test
inc
lods
push
rcrl
sbb
lahf
in
inc
push
pop
jbe
test
push
fstps
xchg
int3
push
lret
pop
fdivrl
pushf
cmp
jnp
ret
and
in
stos
insb
and
or
insl
rcrl
clc
mov
sub
push
call
push
in
xorb
xor
ret
in
stos
cltd
jnp
and
addr16
push
cmp
mov
stc
dec
sbb
push
ffree
or
or
movsl
divl
out
adc
push
jns
jo
mov
stos
jge
cmc
repnz
iret
or
in
xor
lea
inc
cltd
call
xlat
insb
lea
mov
cmpsb
and
ljmp
add
dec
and
gs
sbb
mov
ficomps
loop
mov
loopne
push
push
sub
mov
pusha
or
dec
aad
jp
mov
cld
and
in
sar
mov
fidivs
scas
jns
gs
pop
mov
mov
mov
clc
push
shlb
rorb
stos
int3
cmpsb
aad
outsb
push
into
jne
lcall
mov
or
cs
cmp
int
clc
jne
and
and
mov
pop
mov
adc
pushf
shll
mov
pop
sti
stos
aaa
in
add
incb
lcall
sub
cmp
mov
mov
mov
icebp
nop
mov
jae
add
pop
fwait
sbb
enter
ja
iret
scas
lods
xchg
cwtl
xor
inc
lock
ss
mov
fistpll
sysenter
sub
aaa
cmpl
xor
fsts
jo
xor
enter
mov
pop
and
xor
pop
imull
add
outsb
and
inc
into
addb
adc
lea
xchg
lea
addl
lods
add
inc
jae
add
pop
lret
icebp
mov
out
cwtl
gs
mov
insb
int
push
mov
push
pop
pop
lods
in
clc
loop
push
adc
jbe
sbb
popf
mov
xchg
btc
std
sub
adc
mov
in
scas
lahf
pop
mov
push
and
test
clc
fildll
mov
lds
xchg
movsb
inc
test
dec
push
sbb
cmpl
rcrb
jb
xor
orl
adc
mov
jo
pop
sub
daa
decl
inc
pop
aad
imul
cltd
insb
ja
mov
cmc
idiv
outsl
ret
pop
xor
out
jae
cmp
lahf
add
xlat
jns
mov
fdivl
loop
repz
cmp
out
jp
mov
sub
or
cwtl
xor
push
cmpsl
sub
daa
jl
mov
std
mov
test
daa
les
shrl
cmpl
aas
mov
mov
xchg
sahf
mov
xorb
mov
test
test
lock
mov
inc
sub
fstpl
fnsave
in
daa
push
sahf
lcall
mov
push
test
xor
incb
cmp
js
jl
ret
enter
repnz
ljmp
into
xor
or
imul
cs
dec
add
xchg
cmp
cld
add
and
stos
dec
mov
add
shll
mov
mov
cmp
xorb
enter
pop
inc
jo
cld
mov
xchg
test
jge
dec
adc
mov
mov
aam
jbe
and
jge
scas
std
sbb
out
stos
mov
push
insl
dec
sbb
hlt
aam
mov
out
outsb
negb
cwtl
xchg
sbb
dec
bound
pop
xlat
mov
aas
stos
andl
lea
rep
es
push
jle
inc
or
xchg
or
xor
push
ss
xchg
inc
mov
add
add
sbb
aad
cmpb
daa
data16
adc
cmp
std
and
xor
lods
xor
xchg
rcrb
outsb
nop
push
add
iret
jl
popf
xlat
lcall
cmpsl
mov
push
rcll
lcall
add
sbb
push
dec
pop
mov
push
pop
pusha
jb
mov
mov
jp
mov
shll
sbb
mov
push
push
ss
dec
xchg
lret
cmp
fisubrs
aam
mov
or
mov
call
mov
ret
mov
add
ja
mov
rolb
dec
popa
mov
mov
pop
pop
hlt
mov
xchg
mov
push
mov
icebp
xor
pushf
dec
inc
aad
in
mov
jmp
test
inc
aas
out
imul
cbtw
push
mov
and
fidivs
push
pop
popa
jne
ljmp
push
pop
sbb
or
cld
and
mov
pushf
jae
xchg
mov
fmul
mov
test
les
testb
imul
aaa
xor
and
stos
jecxz
ja
jo
push
cs
pusha
mov
iret
mov
lock
stos
inc
pop
enter
xchg
dec
mov
xchg
xor
cmp
dec
mov
push
idiv
jle
cmp
or
mov
xchg
mov
pop
scas
leave
jo
sbb
adc
sbb
arpl
rsm
icebp
lret
adc
rol
cmpsl
mov
shlb
and
pusha
enter
lret
add
pop
jns
sbb
fs
in
jnp
mov
das
stc
sub
mov
mov
push
adc
xor
mov
sbbb
mov
dec
or
aam
sbb
dec
or
dec
and
stos
inc
aam
fsts
push
jl
adc
cmp
sub
xlat
repz
inc
fidivrs
push
scas
int3
imul
and
aad
cmp
sub
out
rcll
lahf
add
jnp
lock
xchg
mov
jae
add
loop
sahf
jge
cmp
scas
adc
sub
mov
rep
fisubl
push
sbb
js
mov
subb
or
mov
adcl
push
ja
fnstsw
in
daa
std
or
add
mov
xor
mov
jecxz
and
add
inc
inc
stos
xchg
inc
cmp
push
xchg
xchg
add
add
lods
xlat
jle
pop
pop
fsubrs
jo
movsb
test
xchg
je
adc
lods
test
push
xchg
pop
fs
and
popf
in
cmpsb
mov
sbb
test
mov
mov
into
mov
sub
cmp
scas
sbb
mov
loopne
push
or
pop
cmp
arpl
xor
and
vpminub
dec
cli
mov
xchg
push
push
icebp
ljmp
cs
pop
dec
dec
mov
fsubrs
packuswb
cmp
jae
jae
mov
cmp
pop
mov
xchg
jnp
gs
dec
mov
adc
inc
push
xor
mov
stos
lahf
lods
mov
xchg
and
fisubrs
add
xor
add
inc
fisubl
jae
jb
lret
cmpsl
sahf
mov
pop
rcl
add
dec
push
cmp
dec
movsl
clc
push
pop
iret
mov
imul
gs
adc
stos
xchg
popl
test
mov
stc
inc
xor
repnz
push
sahf
ret
push
daa
cwtl
je
add
sarl
nop
cmp
xchg
mov
addl
push
pop
xchg
cli
pop
sbb
daa
adc
arpl
inc
ficoml
mov
and
lahf
or
inc
cltd
insb
cmp
movsl
lret
hlt
mov
shlb
xor
sub
loope
shll
in
jecxz
call
inc
add
cmpb
lods
int3
call
jne
int
movsb
inc
jae
popa
mov
repnz
mov
test
movsb
xor
gs
pop
xchg
xchg
and
mov
sub
lahf
or
jle
dec
inc
push
xchg
pop
popf
mov
es
hlt
mov
sbb
out
cmp
jo
add
xorl
pop
sub
lret
roll
xchg
push
subl
fistpll
inc
inc
xchg
iret
addr16
popf
arpl
xor
sti
jnp
test
pop
jb
push
dec
fldcw
sahf
cmpb
dec
sub
xlat
mov
mov
mov
xchg
mov
jbe
arpl
pop
clc
movsb
mov
enter
ds
outsl
adc
icebp
pop
inc
jmp
outsb
sahf
xchg
out
xchg
jp
jb
shlb
clc
adc
dec
fnstcw
xchg
dec
cmp
cmp
push
inc
mov
sti
int
mov
or
in
mov
dec
inc
jbe
adc
xorl
inc
stc
sub
cmp
daa
fwait
imul
lret
clc
and
xor
in
aam
insb
xor
ficompl
and
shl
add
inc
mov
xchg
pop
js
cld
cmp
mov
scas
xchg
adc
mov
adc
cli
xorb
fcompl
cwtl
mov
adc
loope
insb
cmp
inc
xorb
and
movb
pop
jne
addl
fwait
mov
out
in
mov
lods
iret
loopne
mov
clc
or
lock
rcrb
iret
sub
xchg
jg
and
mov
add
lea
jle
xchg
fcompl
or
data16
adc
pop
jge
mov
mov
adc
and
ja
pop
ret
push
stos
popa
call
stos
shll
add
jb
xchg
sub
xlat
fidivrl
gs
cmc
sbb
pushf
push
call
lahf
adc
mov
ja
push
pusha
lock
cmp
xor
call
cli
aad
out
nop
into
cs
scas
inc
jle
push
inc
pop
dec
sbb
rolb
pushf
push
into
push
pop
xor
addr16
dec
fs
push
and
push
xor
xchg
pop
or
pop
sub
insb
pop
sub
xchg
fsts
int
add
add
mov
stos
mov
sbb
sub
dec
daa
clc
push
or
fwait
ljmp
loopne
cmp
jmp
sbb
int
mov
and
js
xor
pop
adc
mov
mov
gs
stc
mov
outsb
cmp
mov
or
sbb
js
dec
cmc
mov
push
lods
loope
int3
dec
call
dec
fdivrp
xor
dec
fs
lcall
nop
jnp
hlt
jno
add
mov
cmp
mov
cld
mov
adc
mov
jecxz
nop
adc
xchg
fs
loope
pop
out
lret
fwait
sarl
jno
sbb
xor
mov
or
push
repnz
dec
aam
sbb
sbb
jecxz
cmp
pop
xor
loopne
ret
add
xchg
fisttps
mov
or
and
scas
loopne
out
inc
aad
fisubl
pushl
sbb
mov
fistl
add
mov
push
push
mov
shll
sub
test
sbb
xor
cltd
xlat
and
push
mov
aad
pop
mov
jp
mov
or
pusha
sub
movsb
lahf
mov
jae
sarl
in
mov
fwait
cmp
or
xchg
sbb
and
inc
xchg
inc
cmc
push
into
xchg
fidivrl
and
scas
insl
hlt
or
stos
inc
fdivrp
cmpsb
and
clc
daa
loopne
xchg
divb
imul
ret
cli
push
int3
pop
pop
or
js
int
gs
jns
sub
mov
xchg
fcom
mov
lods
sub
in
fbstp
xchg
ret
jae
xor
cmp
pop
cli
enter
xchg
test
cmp
dec
lahf
or
in
cmp
mov
dec
outsl
inc
mov
and
aaa
dec
fistl
jge
jecxz
dec
sbb
aaa
aam
jnp
dec
jne
mov
push
push
lcall
push
inc
lods
xchg
sub
cmc
dec
pop
pop
jno
cmp
dec
jmp
sub
ljmp
scas
cmpb
dec
pusha
push
or
sti
repnz
sti
sub
or
jmp
ljmp
lcall
fsubs
mov
mov
push
data16
loopne
push
jo
jmp
icebp
test
enter
rcll
jmp
loope
testb
lahf
xchg
mov
mov
add
cmp
daa
jmp
mov
arpl
fwait
xor
aad
int3
loope
out
fisttpll
mov
push
int3
rep
lods
insb
mov
icebp
insl
jns
mov
scas
push
cs
leave
shll
lret
xchg
or
xor
loop
fcmovb
adc
fildl
xchg
movsb
or
out
push
sbb
and
pop
push
imul
mov
es
out
incb
shr
rcrl
xlat
and
dec
pop
shr
push
jecxz
or
in
xchg
mov
aam
add
in
cmp
repz
dec
out
xchg
nop
icebp
out
adc
ret
inc
sbb
and
imull
pusha
sti
add
lods
adc
dec
daa
lods
sub
fidivl
inc
test
cltd
dec
adc
inc
sbb
loope
sub
sbb
insb
cmc
lock
dec
fnstcw
es
mov
or
push
sbbb
mov
js
data16
rorb
xor
mov
mov
xchg
js
clc
xor
cmp
sub
xchg
push
rcrl
aaa
int
cmp
push
sbbb
mov
dec
repnz
mov
sbb
aad
test
pop
pop
dec
jmp
gs
mov
sbb
or
xchg
insl
das
sub
or
fcompl
and
jmp
cwtl
fwait
mov
cmp
sarb
popa
jp
repnz
mov
and
mov
insb
mov
outsb
pusha
shlb
inc
mov
adc
shlb
adc
sub
jge
dec
or
js
sub
pop
xchg
mov
popa
mov
add
jl
out
dec
mov
lea
popa
or
sub
inc
test
mov
ret
pop
jno
ret
iret
jecxz
test
cli
inc
jno
out
cmp
mov
mov
adc
mov
sbb
sbb
xchg
push
and
push
xchg
mov
mov
adc
mov
cli
rcll
dec
push
mov
adc
mov
adc
adc
popa
outsb
cmc
cmp
movsb
dec
push
push
test
js
jp
lret
pop
adc
mov
shrb
jno
lods
sbbl
das
xchg
add
xor
xor
push
add
cmp
sbb
fld
sbb
jb
mov
xchg
add
cmp
test
push
lret
lret
cli
dec
js,pn
xor
dec
insb
leave
xor
loopne
push
pusha
stos
loopne
xchg
xchg
hlt
dec
shl
daa
in
bound
mov
lahf
add
mull
out
rorl
dec
lods
xchg
insb
jae
sbb
sub
out
loope
fildl
mov
aad
mov
fbld
mov
xor
dec
cmp
inc
insl
inc
cs
add
cmc
negb
cmp
or
lcall
mov
pop
jo
arpl
mov
dec
and
sub
stos
xor
jg
cmovno
sti
xorb
dec
andl
cltd
loop
arpl
jg
push
in
pop
sbb
sbbb
iret
imul
lea
iret
pop
push
sbb
adc
push
push
mov
ljmp
shl
aad
mov
push
lret
xor
pop
jae
fs
mov
je
test
pop
das
pop
xorl
mov
faddp
jle
rolb
sbb
gs
jno
imul
and
repnz
test
jl
jp
icebp
pop
cmc
mov
iret
daa
or
scas
lret
mov
repz
mov
xchg
into
xlat
aaa
sub
aaa
addl
call
jge
cs
mov
push
lods
icebp
into
xlat
add
sub
mov
push
sbb
fldl
mov
movsb
inc
out
or
or
or
adc
mov
adc
mov
fisttpll
stos
enter
pusha
or
adc
dec
aam
fcomps
cmc
xor
cmpb
mov
repz
inc
ret
or
loope
fsubrs
cli
mov
test
and
dec
call
out
imul
fsubs
mov
cmp
sub
leave
mov
add
in
mov
mov
jg
movsl
mov
cltd
in
pusha
clc
push
mov
dec
pop
cwtl
mov
or
sarl
mov
push
jb
pop
cli
sbb
sbbb
shrb
movl
insb
jae
cmc
loop
in
je
mov
jno
jp
mov
mov
cs
ret
push
hlt
insb
aad
xchg
in
je
adc
loopne
pushl
push
adc
cmp
jecxz
mov
int3
push
fs
sahf
inc
cmpsl
les
shrb
pop
imul
mov
push
jp
and
insl
mov
push
sbb
mov
push
leave
in
xchg
xchg
xor
xor
imul
mov
in
lea
mov
inc
mov
das
inc
mov
ljmp
les
mov
mov
sub
lahf
and
loopne
pop
stos
divb
repz
in
push
std
sbb
pop
orb
sbb
outsb
pop
and
xchg
inc
cmp
adc
or
js
nop
in
push
dec
movsl
push
sbb
adcb
loop
xor
lahf
sub
cmp
cltd
jno
arpl
bsf
dec
cld
stos
push
mov
ds
cmp
xor
leave
mov
add
cld
ror
inc
adc
sbb
lret
xchg
add
and
push
mov
dec
xchg
mov
inc
mov
aad
int
bound
lret
mov
xor
test
pop
mov
paddusb
std
inc
clc
sbb
pop
push
andb
mov
mov
fcmove
dec
insb
cmp
into
jbe
sti
push
fsub
imul
sub
jnp
lods
aam
aam
out
xor
pop
test
push
mov
cmc
dec
test
mov
ja
jnp
and
in
sub
jge
pop
cld
ljmp
sub
sub
dec
out
pop
add
inc
enter
sub
pop
add
pushf
inc
add
mov
dec
aaa
popa
into
testl
mov
aam
out
mov
inc
sbbl
sbb
xor
mov
push
sbb
mov
inc
cmp
mov
push
jle
pop
xor
push
movsb
jnp
push
fwait
mov
pop
mov
jae
jne
push
sub
xchg
fdiv
xchg
bound
in
mov
or
push
dec
out
inc
and
fwait
andl
push
scas
dec
fisttpl
fnstsw
or
xor
xchg
rcll
jp
clc
pusha
lds
inc
fcom
sub
mov
and
mov
sub
jne
aaa
loop
or
pop
out
clc
loope
pop
cmp
xchg
lods
pop
test
icebp
xor
lock
jl
pusha
mov
inc
ja
cld
mov
std
pop
mov
gs
adc
mov
and
mov
stos
cmpsb
mov
ret
or
mov
loope
jno,pt
dec
push
cmp
cmpsl
sub
cmp
push
mov
out
pop
insl
adc
loope
adc
fcoml
push
dec
pop
addr16
adc
jbe
ja
push
push
push
ret
shl
loop
push
dec
pop
or
stos
lcall
mov
or
inc
loop
sbb
jne
mov
push
cmp
cmc
gs
cwtl
xor
sub
kmovw
xor
push
jmp
mov
sbb
dec
or
dec
in
loop
push
pop
into
loop
mov
les
out
out
fbstp
cmp
and
in
pop
ss
sub
in
pop
mov
mov
movsl
mov
rcrl
sarl
cmpsl
xchg
in
ja
pop
jbe
mov
xchg
add
lahf
aad
in
push
test
popf
lods
mov
mov
jecxz
cmp
and
das
in
mov
push
jae
pop
test
mov
xchg
dec
mov
inc
cmp
jbe
push
sub
mov
jg
mov
das
cli
dec
outsb
xlat
hlt
cs
xor
jmp
movsl
outsb
adc
movsb
pop
xchg
icebp
cltd
lock
imul
lahf
and
jnp
sub
push
mov
pushl
dec
sbb
or
aas
in
orl
rcr
outsb
push
mov
pushl
push
jle
sbb
adc
nop
aad
popa
cmc
and
ljmp
cmp
mov
jmp
add
jo
mov
push
daa
movsl
push
adc
xchg
cmpsl
cltd
dec
pushf
test
sarl
pop
mov
add
sub
xor
nop
sbb
sarb
aas
mov
cmp
rolb
ss
pop
sbb
jg
loope
pop
inc
mov
jecxz
mov
cwtl
ljmp
scas
and
dec
popa
jne
mov
push
jmp
bound
lods
jl
stos
cmc
pop
sub
inc
sub
jno
das
lods
and
aad
vaddps
xchg
add
push
jno
lahf
fdivl
aas
push
mov
inc
in
lods
aaa
sbb
dec
cmpsl
xchg
addb
push
das
std
pop
mov
sub
notb
les
in
sbb
mov
out
sbb
sti
mov
dec
rcl
mov
xlat
out
aad
xor
jne
mov
pop
xor
push
mov
sub
mov
dec
cmp
divb
fadd
sub
stos
xchg
fldcw
fwait
repz
lret
mov
ret
imul
xchg
movlps
rorl
pop
cwtl
scas
pop
push
pop
int3
sbb
scas
push
fdivrl
push
cmp
push
push
adc
inc
add
data16
adc
out
ret
pop
mov
dec
adc
or
pop
mov
int
mov
jg
inc
into
loop
mov
dec
arpl
sub
cmpsl
outsb
sbb
in
rolb
jbe
cmp
or
dec
push
xorl
imul
icebp
aaa
std
push
and
adc
jmp
insl
pop
mov
mov
lods
push
sbb
jmp
dec
ret
mov
idivb
pop
sbb
pop
xchg
mov
jle
xor
movsl
add
aas
sar
cmp
and
jno
outsl
mulb
mov
loop
movsb
imul
loopne
mov
dec
inc
sub
ret
pop
inc
fs
xchg
push
pop
outsl
lret
negl
mov
rcll
aam
lea
push
jl
iret
mov
sbb
subl
push
mov
lods
add
nop
xor
jb
ret
xchg
or
imul
mov
nop
enter
dec
mov
xor
mov
sti
mov
and
xchg
xor
rcrb
rcll
xorl
or
push
mov
outsb
adc
out
bound
lods
add
sub
push
cmp
jbe
in
push
addb
inc
filds
xchg
pop
dec
loope
xor
jge
fs
mov
cmpsb
testl
inc
mov
int3
scas
int
xchg
pop
push
push
jle
ficoml
xor
iret
xchg
movb
jns
divb
in
fmuls
jecxz
jl
sub
icebp
out
or
mov
jnp
mov
je
mov
cld
sbb
dec
push
sub
in
setns
mov
mov
icebp
push
pop
sbb
inc
ret
xor
and
adcl
mov
pop
dec
jmp
push
dec
sbb
xor
jo
xor
loope
pop
push
inc
test
stos
sbb
test
or
cs
jge
inc
lods
ficoml
addr16
out
inc
in
bswap
cltd
mov
in
popa
push
in
gs
dec
lock
std
push
dec
mov
cmp
pop
insb
cmp
pop
cmp
imul
iret
jo
repnz
xor
aad
insl
pop
mov
lahf
into
data16
je
loopne
mov
mov
dec
lock
mov
sbb
sbb
xor
pop
mov
pop
mov
fadd
push
push
add
or
mov
pop
loope
lahf
ss
push
adc
sbb
aad
push
std
and
xchg
out
maskmovq
notl
clc
icebp
stos
cmpsb
mov
enter
add
dec
sti
les
cmc
daa
rcr
and
mov
inc
xchg
ret
inc
in
cmc
addr16
adc
mov
sahf
mov
fcmovb
xchg
cwtl
xchg
gs
aad
dec
sbb
pop
push
lock
repnz
cmp
inc
sahf
popa
ss
stos
ja
inc
dec
and
cmp
mov
pop
pop
jle
lods
lcall
test
push
add
and
xor
dec
jb
push
mov
adc
mov
out
lea
xor
and
lahf
mov
stos
in
xlat
fdivs
cmpsl
insb
div
push
cmp
dec
xchg
enter
xchg
mov
add
jns
int3
xor
mov
inc
sbb
inc
or
ret
jmp
sub
js
ss
data16
into
push
clc
dec
andb
ss
or
out
stos
push
cmpsl
jle
sbb
pop
xchg
and
insb
dec
pop
out
int3
jle,pt
outsl
or
mov
aad
out
adc
in
xchg
jae
cwtl
push
jb
aaa
mov
sub
aam
mov
mov
js
dec
lret
inc
pop
xor
int3
pop
sbb
inc
shl
jl
xor
fwait
pop
outsb
cmp
int3
jb
stc
adc
inc
call
js
inc
sub
sbb
and
fdivl
hlt
xor
lock
and
add
in
sub
ja
lret
mov
xor
rorb
dec
lods
jmp
imul
mov
sarl
xchg
jne
jmp
dec
mov
clc
xor
xorb
mov
lret
rcl
enter
rcr
xchg
inc
leave
mov
nop
push
loope
and
and
mov
jmp
mov
jl
lds
test
add
sbb
in
out
out
pop
inc
inc
scas
js
xlat
xchg
or
clc
jb
sub
jno
stc
or
ret
and
mov
shl
stc
pop
dec
arpl
jne
call
out
mov
push
and
popf
movsb
mov
pop
call
pop
xchg
cli
repnz
in
and
sbb
add
divb
or
push
push
inc
dec
repnz
les
sub
sarb
adc
dec
cmp
add
imul
push
es
push
or
imul
mov
loopne
outsl
divb
xchg
inc
cmp
dec
and
or
adc
cld
in
out
imul
mov
xchg
sarb
shlb
xchg
test
mov
jp
jnp
xor
pop
loopne
outsl
das
add
mov
mov
xlat
mov
fucomip
in
imul
adc
fnstsw
push
adc
insl
cmp
in
mov
jns
dec
push
test
add
clc
xchg
sub
lcall
sti
jmp
cmpb
popa
stc
dec
adc
adc
fsubrl
std
aam
ljmp
pop
jmp
xchg
or
mov
into
inc
xchg
cmpb
mov
jge
mov
inc
jp
loop
insb
push
daa
out
adc
or
mov
hlt
lret
lret
xchg
mov
rep
sbb
push
jge
sahf
mov
mov
push
jecxz
iret
mov
push
mov
xor
add
int3
idivb
jecxz
leave
fstl
jmp
bswap
insl
push
pop
arpl
jle
iret
dec
mov
pop
push
sub
out
mov
mov
stos
or
leave
add
and
fwait
dec
mov
pop
and
xor
mov
mov
ljmp
inc
sbb
unpckhps
js
daa
jbe
xor
test
adc
pop
ret
mov
push
mov
pop
push
jno
adc
fs
cmp
cmp
or
fwait
sbbb
fcomp
cmp
int3
mov
and
adc
mov
mov
ffreep
pop
insl
xor
ror
loop
shl
out
clc
into
mov
and
pop
scas
cwtl
lret
push
out
lcall
pop
int
sbb
mov
je
add
loope
jo
xchg
mov
repz
mov
ret
mov
push
arpl
popf
xchg
test
mov
ljmp
jne
enter
jge
imul
xchg
jns
int
daa
sarb
lds
aaa
int3
insb
mov
or
scas
cmpsl
popf
dec
mov
imul
cmpsb
adc
call
in
je
sahf
mov
or
les
adc
cs
jno
imul
push
pop
fdivp
and
push
lret
and
push
add
inc
sub
out
stos
movsb
or
inc
sti
or
and
out
std
andb
fcoms
icebp
adc
sbb
pop
mov
inc
xchg
push
adc
stos
cmc
mulb
repnz
mov
repz
jg
outsl
lods
xor
or
push
ret
xchg
int3
addr16
in
fstps
in
fsubs
dec
pop
cwtl
out
adc
inc
sbb
and
mov
pop
sbb
cwtl
add
ljmp
dec
mov
mov
or
jbe
jne
sti
jne
adc
sbb
ficomps
int3
mov
arpl
decb
scas
in
fadds
ret
cmp
mov
lods
xchg
add
inc
pop
subl
push
mov
lcall
jb
mov
fdivrs
aas
cld
rclb
out
call
roll
sbb
xchg
push
mov
in
sbb
ret
mov
lea
push
call
es
jl
stos
jecxz
sub
mov
xchg
pop
xchg
mov
int3
sbb
xor
mov
fwait
jp
stos
mov
ret
ljmp
rcll
inc
clc
test
cmpl
mov
lds
adc
dec
or
mov
out
nop
insb
shrl
xchg
or
test
add
xor
lds
mov
test
pusha
mov
add
sbb
adc
dec
and
test
icebp
jecxz
fdivl
xor
jno
pop
push
out
cmc
push
in
mov
std
gs
addb
aaa
call
enter
xchg
ret
jmp
dec
sub
adc
je
mov
xchg
dec
cmp
fsubrs
sbb
shl
push
lea
pusha
add
shll
ret
pop
adc
sti
pop
out
sbb
and
cmp
mov
int3
and
mov
fwait
dec
mov
cmp
rol
sbb
pop
push
mov
adc
sub
sahf
das
sub
rolb
mov
fldl
mov
push
and
dec
cmp
mov
arpl
push
mov
sub
xchg
xchg
movsb
xlat
add
jns
stc
sarl
xchg
fwait
lock
add
lock
push
lock
out
and
push
ja
sbb
mov
adc
dec
sbb
out
xchg
int3
xchg
lods
jnp
lock
subl
add
shll
nop
in
adc
gs
sub
inc
flds
jmp
movsb
or
nop
sbb
test
cmp
dec
and
cmpsl
pop
lods
mov
add
push
int
sbb
adc
jne
hlt
fsts
sub
pop
outsl
ficoml
jo
push
mov
int3
mov
popf
mov
leave
push
inc
cltd
sbb
inc
and
xor
sbb
out
or
cs
test
push
sbb
and
mov
xor
pop
inc
add
jecxz
ret
push
movsb
inc
scas
xchg
or
and
call
shrb
xor
rorl
xchg
lods
jmp
cmp
sbb
or
sbb
icebp
lods
imul
adc
out
ss
jmp
jne
dec
iret
push
or
jne
xchg
mov
dec
notl
jmp
sub
push
in
int3
push
dec
int
mov
stc
outsl
add
bound
test
int3
mov
jg
adc
cmpsl
imul
push
and
mov
mov
lock
fistl
push
pop
cmpb
jmp
sbb
mov
jmp
loopne
cmpsl
xchg
shll
div
aas
mov
repz
pushf
jg
sti
mov
adc
cmpb
into
ja
addr16
test
adc
aam
inc
xchg
xor
ja
div
int3
mov
dec
addr16
test
xor
stc
aad
push
cmp
call
and
sub
cmpsl
jecxz
repnz
aam
in
jg
push
dec
fsts
lds
sbb
mov
sbb
push
icebp
dec
mov
pop
ret
mov
mov
mov
pop
rcll
inc
lods
push
cmp
adc
sub
loop
hlt
sub
nop
icebp
nop
sub
ret
cs
add
ds
jo
out
mov
lock
or
in
aaa
add
clc
add
and
ljmp
lcall
shll
mov
jnp
fimuls
mov
push
cli
ss
shlb
sbb
and
hlt
mov
pop
xchg
or
sub
cmp
test
jg
pop
adc
adc
rorl
add
mov
jp
jo
test
xor
adc
cli
scas
rol
inc
lds
inc
or
cmp
test
mov
jne
adc
and
sbb
in
daa
mov
pushf
jne
movsb
aad
inc
imul
andb
sahf
xchg
jg
push
ret
jge
daa
sbb
mov
mov
jae
loopne
xor
sbb
imul
stos
pop
push
mov
push
addb
cmpsb
lods
adc
mov
ret
ja
jnp
aam
pop
add
dec
push
jb
in
push
mov
test
sub
jl
sub
lea
cltd
pop
fwait
shrb
or
jbe
push
mov
jbe
frstor
mov
jp
movsl
sbb
jo
popf
xlat
int
mov
pop
insl
add
leave
bound
mov
outsl
enter
mov
sub
les
jmp
test
xor
rolb
pushw
xchg
imul
inc
or
stc
jmp
outsl
or
imul
or
andb
out
sar
fldenv
pop
imul
inc
sbb
inc
and
xor
add
jge
out
mov
test
stc
jmp
push
aad
add
shll
xchg
cmp
mov
jl
push
add
stos
fiadds
dec
cli
in
mov
enter
cmp
xor
jns
or
into
xchg
stos
and
ret
popa
sub
and
jge
cltd
mov
mov
xor
push
lret
inc
pop
push
insl
test
push
dec
cmp
nop
stos
sbb
cmpsl
jl
mulb
fcom
push
out
cltd
sbb
nop
incb
push
push
fnsave
pop
push
push
lgs
fstl
xchg
outsl
lret
push
sbb
jae
cmp
outsb
push
enter
sub
adc
adcl
or
mov
mov
push
sub
sahf
jno
les
test
fimuls
aas
xchg
mov
jle
pop
mov
jb
jbe
int3
xchg
lock
xchg
ljmp
push
jae
add
outsb
jmp
fbstp
dec
jb
inc
and
and
fstl
lea
sub
fwait
cmp
pop
jp
mov
or
push
dec
test
repnz
pop
das
outsl
xchg
add
inc
icebp
xor
adc
outsl
mov
cmc
bound
push
dec
rorb
push
xorb
ds
jge
cld
add
push
cmp
sbb
out
ret
cmp
lds
dec
lcall
sbb
loop
xchg
jns
idivl
aas
mov
mov
dec
jmp
mov
sbb
icebp
loope
and
or
cmc
or
push
arpl
sbb
jmp
in
pop
movb
jne
stos
popf
out
jp
mov
sub
mov
xchg
pop
iret
mov
mov
loope
hlt
outsl
dec
lds
push
mov
or
mov
pop
push
add
les
les
xor
sub
int3
pop
or
and
lret
out
daa
and
mov
push
fstp
test
adc
xor
stos
inc
jp
push
int3
fwait
sbb
jmp
cli
add
mov
lcall
and
dec
mov
test
jns
sub
mov
add
loope
mov
sub
pop
inc
mov
jno
pop
xor
roll
mov
fmulp
cmpsl
xor
insl
movsb
xchg
mov
ret
pop
xchg
outsl
gs
mov
stc
jecxz
mov
mov
loop
adc
pop
das
push
jns
aas
pop
jno
cmpsl
cwtl
or
mov
mov
xor
push
push
push
jmp
lcall
aam
stos
mov
mov
iret
addr16
test
scas
add
ja
rclb
jle
mulb
ss
mov
dec
std
loope
push
out
jno
push
sub
sub
or
lahf
and
pop
push
std
cmp
cmpsb
movsb
mov
cmp
or
push
sub
adc
lahf
mov
xchg
mov
int3
add
mov
push
clc
inc
sub
das
add
jl
stc
stc
ljmp
push
push
mov
xchg
cmp
and
testb
jg
add
xor
cltd
movb
and
pushf
mov
add
setbe
rorl
outsb
mov
push
testb
es
sti
cmp
inc
iret
mov
push
std
pushf
jg
jae
insl
inc
jmp
jmp
cmc
xchg
push
pop
adc
cmpsb
into
pop
enter
dec
gs
mov
fnstcw
adc
add
ficoms
mov
cwtl
sbb
aas
cmp
inc
inc
lret
out
dec
loop
inc
push
jb
call
and
mov
jmp
xor
lods
inc
xor
xor
push
mov
nop
jnp
xor
pop
xchg
sub
cmpl
and
dec
imul
movsb
inc
mull
adc
dec
bound
sahf
ss
test
lods
lods
cli
jno
mov
cli
mov
pusha
imul
or
nop
fwait
or
mov
lahf
cld
push
inc
mov
insb
xor
daa
lods
incb
push
jl
movsl
adc
and
mov
mov
outsb
mov
pop
dec
inc
dec
sub
lret
pop
mov
jp
pop
cli
movsb
outsl
cmp
jmp
pushf
or
cmovg
inc
orl
fldl
mov
in
xor
sbb
lcall
or
ljmp
inc
mov
dec
and
test
fidivrl
out
jecxz
mov
sub
dec
ds
imul
js
pop
and
push
into
sub
mov
insb
push
adc
testl
or
mov
lret
xor
and
push
cs
mov
ljmp
hlt
mov
mov
jmp
in
mov
in
test
aam
xor
xor
xchg
pop
mov
arpl
scas
or
and
inc
jge
mov
pop
dec
ss
fstl
sub
incb
mov
mov
mov
iret
or
jl
sbb
leave
inc
ret
and
icebp
sbb
cmp
lahf
add
xor
xchg
add
out
mul
test
out
loopne
push
mov
jnp
ror
mov
inc
pop
repnz
xchg
fnstcw
bound
push
cltd
mov
shrb
insb
and
jge
xlat
dec
in
push
lea
sub
pop
cltd
in
jno
dec
cmpl
lods
add
test
dec
ror
ret
ret
push
push
sub
mov
lods
ljmp
leave
mov
cwtl
xchg
and
pop
repnz
sbb
sahf
xor
dec
mov
sar
jl
xchg
jg
sub
mov
adc
push
in
inc
fmuls
clc
loop
notb
cmp
cmpsl
jae
and
mov
fmul
in
jmp
iret
inc
xchg
mov
jbe
int3
jo
shlb
sub
out
aad
cmp
mov
cmpsl
insl
push
popf
jp
sub
jl
cmpsl
insl
add
pop
sub
fisubrl
fs
push
subb
nop
xchg
subl
pop
sbb
xor
dec
inc
xlat
cmpsl
aaa
add
add
inc
scas
push
sub
in
dec
inc
mov
xchg
mov
xor
and
pop
rorb
fdivr
pusha
push
daa
pusha
bound
in
adc
push
add
mov
fldl
out
push
je
dec
mov
movl
scas
out
ret
sbb
ljmp
cld
scas
push
aas
push
in
sub
dec
mov
scas
jge
daa
mov
pop
adc
mov
inc
mov
out
leave
clc
aad
pop
sub
pop
repnz
stos
sub
pushf
and
push
cmp
xchg
cli
cmc
ja
cmpsl
inc
pop
push
fsubrs
shrl
inc
xchg
loope
loopne
fwait
pop
pop
sub
jp
test
add
cmp
shlb
stc
mov
lret
sahf
adc
jmp
dec
mov
mov
mov
ljmp
mov
pop
inc
cmpsl
gs
lods
inc
mov
cmovne
repnz
hlt
int
in
aad
lock
xlat
in
mov
mov
cmp
scas
rolb
xchg
push
inc
or
mov
out
xor
jp
test
test
and
mov
pushl
repnz
inc
jo
inc
adc
pop
lods
sbb
adc
roll
adc
pop
aaa
insl
scas
and
test
shl
out
push
jle
push
dec
mov
or
bound
sbb
cmpsb
and
jns
mov
jno
lea
mov
lods
push
adc
inc
add
scas
mov
popf
push
stos
stos
outsb
sbb
jns
push
int3
jns
jb
pop
and
mov
cltd
dec
pop
out
dec
cs
or
adc
test
les
iret
sbb
sub
adc
rorl
push
mov
and
ss
dec
fadd
lods
fs
aaa
dec
sub
jns
in
clc
push
mov
and
jl
sarl
mov
push
cmpsl
les
jbe
sahf
mov
fdivrl
mov
sbb
inc
fsts
fwait
push
outsl
daa
mov
mulb
jp
rclb
pushf
adcb
dec
sbb
pop
clc
mov
loop
imul
add
push
xchg
xchg
call
insb
popa
gs
jmp
mov
or
mov
dec
add
in
add
add
mov
pop
popa
movsb
add
inc
mov
push
sbb
ljmp
fcompl
cli
imul
repz
cmc
lret
adcb
mov
std
shlb
out
jno
cmp
orl
dec
jle
int
stc
mov
xor
cmp
ja
addr16
dec
jecxz
pop
mov
and
fildll
cmc
adc
outsl
imul
ljmp
xor
lcall
jno
dec
es
inc
sub
popa
dec
fiaddl
clc
xor
hlt
xlat
fdivl
push
xor
inc
mov
xchg
adc
fcoms
dec
mov
subl
fbstp
jae
dec
mov
arpl
fbstp
mov
jg
mov
movsl
jl
inc
cwtl
mov
and
aas
cmp
xchg
jle
mov
shr
xor
out
dec
out
data16
bound
cmp
inc
in
insl
xchg
push
adc
into
jbe
push
lret
aad
xor
and
xor
pop
xor
dec
pop
movsl
mov
push
sti
les
jge
rorb
ficoml
dec
push
xor
out
xchg
mov
cmp
mov
jne
sub
out
arpl
lods
push
rcrb
add
sti
mov
sbb
mov
shrl
jno
inc
cmp
sub
pop
inc
imul
jb
daa
repnz
or
insb
xor
lcall
and
mov
loope
pop
adc
fiaddl
pop
mov
mov
or
fiadds
mov
pop
inc
das
mov
lret
pop
and
cltd
add
pop
out
xor
mov
leave
imul
mov
rolb
inc
adc
inc
jmp
add
add
out
adcb
or
fs
dec
jns
pop
jecxz
ljmp
xor
push
fstpl
loope
dec
push
adc
xchg
and
mov
test
and
subl
mov
mov
mov
cmc
mov
inc
xor
mov
xor
mov
in
clc
push
pop
ret
xchg
pusha
fldt
adc
mov
adc
test
nop
inc
xchg
xchg
dec
mov
outsb
adc
ds
testl
jle
leave
test
gs
ds
dec
xor
pusha
sub
fcmovbe
lea
scas
dec
movsb
push
dec
stos
loope
inc
dec
cld
int3
add
pop
mov
inc
adc
ficoms
daa
arpl
ds
cmp
cld
or
icebp
fmull
mov
push
clc
xor
mov
test
stc
fcmovbe
stos
fstpl
repz
outsl
movsb
ljmp
inc
fadds
cmp
lds
gs
lock
inc
dec
std
cmpl
int3
test
xchg
out
rcrl
lods
inc
sub
stos
cmp
cmc
lcall
mov
xchg
jb
mov
stos
cmp
mov
sub
pop
or
ljmp
mov
bnd
pop
jge
xchg
loop
out
scas
sub
cmpsl
mov
shlb
test
js
add
sub
jo
jae
cmp
cmp
hlt
or
xchg
cmp
push
shlb
pop
sub
mov
inc
popf
adc
jge
adc
inc
mov
cmp
aas
adc
push
sbb
aam
fs
out
sbb
ja
xor
mov
loopne
lock
movsb
leave
out
and
dec
imul
cmpsl
jl
aaa
aas
stos
push
cmovge
arpl
lock
test
or
imul
test
xor
and
mov
out
pop
add
dec
icebp
scas
mov
scas
lcall
lds
dec
jle
jl
enter
xchg
jle
add
loopne
imul
mov
loopne
fsubs
sbb
imulb
dec
mov
xchg
adc
in
sbbb
cld
inc
rorb
sub
sbb
push
jns
insl
mov
out
lods
xchg
inc
pop
incb
repnz
mov
sbb
ds
test
mov
or
ds
or
icebp
clc
fwait
add
cmp
xchg
mov
jmp
and
addr16
pop
out
push
xchg
mov
test
pop
int
inc
je
push
jnp
outsl
lcall
sbb
fsubs
testb
fisttpll
sub
jge
in
test
and
fistpl
push
mov
ja
dec
outsl
test
or
push
lds
mulb
stc
mov
not
mov
or
jnp
jo
fcmovb
push
sub
lock
jo
stos
insl
bound
mov
test
popa
adc
js
loope
sub
scas
ficoms
or
into
jmp
outsl
inc
and
pop
mov
mov
add
testb
or
or
aaa
addr16
into
sbb
add
and
mov
adcb
mov
mov
insl
call
test
jmp
mov
cvtps2pd
mov
movsl
addl
push
movsb
adc
inc
cmpb
inc
js
test
stc
shrl
call
iret
fisubrl
sti
mov
sahf
mov
cmp
mov
push
push
addr16
jbe
sbb
mov
sub
cmpsl
test
add
push
shll
pop
cmp
das
out
daa
xor
jecxz
stos
add
adc
sbb
jae
dec
gs
cli
pop
push
cmc
popl
ret
test
into
adcl
fildll
into
push
ss
fsubs
ret
andl
jmp
inc
mov
or
push
xchg
ss
add
and
dec
cli
or
add
lcall
js
ret
loop
inc
lods
je
lods
sbb
cmc
sub
jo
jmp
sahf
pop
ret
daa
or
ljmp
inc
or
pop
pushl
mov
xor
int
repnz
sbb
jg
add
jle
fld
arpl
pop
cmpsl
adc
rcr
incb
mov
inc
adc
mov
dec
fdivrl
fdivl
call
loope
in
mov
push
xor
lods
cmp
sub
xor
incb
cmp
pusha
out
add
pop
ja
xor
gs
lcall
xor
mov
shll
push
aad
jecxz
cmp
jo
test
push
fisttpll
mov
sbb
ss
adc
xlat
xchg
daa
fcmovne
test
push
pop
mov
ret
inc
mov
out
cwtl
mov
lods
push
rorb
sbb
mov
and
aad
adcb
or
mov
sbb
cmpsb
mov
xor
adc
pop
cmpsl
mov
and
xchg
lods
fisttpl
fistps
ret
mov
push
mov
repnz
mov
mov
jno
pop
adc
in
out
or
movsb
ja
sbb
fcmove
inc
xchg
push
sbb
int3
mov
scas
rcr
mov
jle
arpl
mov
aas
iret
add
mov
push
mov
adc
push
sti
out
lret
pop
nop
ret
mov
pop
fldl
mov
in
ret
in
stc
push
cmpsl
mov
out
fwait
mov
push
pop
mov
sahf
jmp
push
sub
adcl
repnz
mov
dec
gs
dec
mov
aad
add
out
xchg
andl
mov
inc
sub
inc
add
fucomip
and
inc
sub
inc
rcll
or
call
xchg
mov
inc
xor
fmulp
jne
add
dec
jmp
inc
dec
gs
into
sub
jmp
sbb
mov
sub
repz
pop
pusha
sub
push
pop
leave
adc
push
push
dec
std
push
fbld
imul
inc
cmp
or
jne
stos
mov
cmc
xchg
mov
and
jo
mov
xchg
insl
shll
push
dec
and
and
cmpsl
imul
data16
inc
add
or
xchg
pop
jl
sub
sub
jnp
adc
adc
mov
xorb
mov
decl
cmc
fldt
pop
push
test
rcrb
mov
lds
mov
std
hlt
xor
push
inc
mov
fisubl
in
mov
and
lds
pop
icebp
pop
lret
xchg
loope
xor
mov
ja
or
test
inc
push
push
repnz
mov
adc
xchg
mov
fs
push
dec
hlt
call
ljmp
arpl
iret
shrl
aaa
out
cwtl
aam
xor
adc
movsb
fs
jo
jno
jg
pop
nop
dec
jo
ficomps
stos
or
jne
cmp
pop
sub
and
es
push
or
add
add
scas
add
mov
mov
shr
jg
push
pop
popf
int3
xchg
xchg
into
jmp
pusha
sub
inc
aas
es
mov
jecxz
mov
pop
dec
dec
push
mov
sub
int
insl
add
imul
dec
mov
cmp
loopne
jle
enter
inc
jns
scas
int
sbb
mov
sbb
mov
in
mov
cmp
loope
pop
xchg
cwtl
popf
mov
mov
lods
cli
enter
mov
jmp
dec
test
mov
lahf
add
aas
repnz
pushf
cmc
jmp
sub
addr16
sbb
dec
inc
imul
lea
xchg
add
inc
sbb
sub
leave
push
sar
out
push
rclb
xchg
inc
mov
xor
scas
pop
mov
mov
push
subl
xchg
scas
push
mov
push
mov
scas
int
xor
cmp
push
imul
enter
mov
pop
outsb
push
shrl
push
es
sub
outsl
mov
dec
pop
and
inc
cmp
push
cmc
push
mov
mov
aad
ljmp
sub
addr16
lds
pop
les
jae
lds
clc
pop
push
push
jle
pop
hlt
fwait
sbb
sbb
cmc
popa
push
mov
pop
cmp
addl
dec
push
cmp
je
adc
dec
les
sbb
imul
and
loopne
or
fs
inc
cwtl
cmp
mov
aas
dec
mov
and
insl
jg
shrb
xchg
sahf
stc
repz
jge
jg
mov
jle
in
or
call
and
daa
dec
mov
test
lods
sub
lret
dec
sbb
or
addr16
add
jo
repnz
in
inc
test
push
jmp
mov
cvttps2pi
cmc
shrl
es
das
scas
sbb
cwtl
sarb
cmp
jg
lcall
dec
cs
cmpsl
push
pop
dec
aad
jmp
movsb
jle
sub
jne
fidivl
xor
pop
in
xchg
lea
add
mov
jp
popa
lret
mov
jmp
push
push
dec
adc
adc
inc
dec
aaa
stc
cmp
push
dec
xchg
xchg
stos
pop
pop
jp
mov
mov
imul
inc
and
lds
fiadds
inc
sbb
xchg
pop
push
sbb
mov
pop
cld
push
jnp
out
inc
xor
in
xchg
pop
xor
lret
sti
cmp
jb
lret
stos
rcll
dec
les
hlt
pop
sub
dec
mov
lods
xor
pop
dec
mov
add
push
ja
cmp
push
add
outsb
stc
leave
push
adc
dec
cld
add
and
fwait
adc
cli
inc
adc
jl
lahf
ds
push
sub
mov
mov
les
loopne
mov
mov
stos
and
push
xchg
test
jno
xor
pop
xchg
lods
adc
push
scas
cld
iret
rol
call
push
xor
adc
cltd
fdivl
cs
loope
mov
inc
add
push
inc
lret
loope
inc
or
mov
in
call
lret
mov
test
cmp
jmp
cmp
mov
adc
jns
out
imul
lret
add
inc
and
cmp
insl
lock
adc
and
sahf
inc
dec
mov
mov
jne
sarl
sbb
pop
test
outsl
lods
push
xchg
mov
daa
mov
push
mov
pop
pop
fwait
xchg
and
mov
inc
sbb
mov
xchg
arpl
orb
subb
lret
popf
cmp
js
xor
outsb
xor
call
sahf
out
jo
and
shlb
jle
lea
add
mov
dec
hlt
adc
testb
cmp
sub
mov
jo
sub
in
scas
fiaddl
daa
orb
das
test
rcrb
xor
lret
loopne
push
bound
out
pop
sub
mov
jno
inc
imul
das
push
lret
mov
cmpsb
mov
sahf
pushf
pushl
mov
fwait
lds
xor
fimull
adc
lds
imul
sti
rcrb
insb
mov
ljmp
inc
popf
cmp
and
push
mov
sub
sub
mov
dec
subb
mov
ljmpw
jp
movsb
xrelease
fiadds
mov
pop
rorl
test
pop
lret
xchg
push
and
jle
and
inc
xchg
add
cmp
adc
stc
lods
pop
pop
cwtl
push
mov
sub
orb
jno
jmp
std
mov
repnz
pop
imul
inc
push
repnz
and
lret
mov
fs
cmp
sbb
jb
into
dec
push
dec
jmp
push
push
cmc
cmp
sub
sub
es
int
push
push
sbb
cmp
mov
dec
test
scas
das
lahf
push
out
repz
bound
lcall
xor
pop
mov
mov
test
jnp
fldl
popf
dec
out
jl
mov
inc
sahf
cmc
push
inc
push
jne
fdivl
les
fnstenv
ja
movsl
pop
push
fs
cmc
jnp
cld
and
bound
ljmp
out
shlb
xchg
cmp
cld
incb
rcl
cmp
mov
xchg
pop
inc
fs
cmc
in
cs
lahf
out
popa
push
inc
out
scas
in
je
jp
sub
sbb
and
es
or
rorl
adc
and
movsl
sbb
cld
mov
or
test
dec
jmp
push
jp
xor
lahf
jmp
add
jne
cmp
xchg
out
fisttps
mov
rorb
cmp
es
mov
mov
arpl
pop
xor
xor
lcall
in
inc
cmpsb
jne
pushl
fbstp
fldt
adc
adc
cmp
sbb
add
sub
fidivrs
insb
xchg
stos
adc
or
lock
sahf
vmread
das
add
idivl
add
ljmp
daa
movsl
add
pop
pop
adc
lret
cmpsl
movsl
inc
cli
sbb
pushf
arpl
popa
pop
je
mov
loope
fistpll
movb
xchg
inc
loop
jbe
cwtl
pop
popa
push
nop
stc
inc
cmp
in
xchg
or
jne
xor
in
mov
add
jne
adc
sbb
push
mov
xor
mov
push
les
fdivrs
pushf
sbb
ret
or
cmp
ljmp
mov
mov
inc
sbb
jo
or
fistps
ss
repnz
inc
fisubrs
cmpsl
rsqrtps
sbb
sti
jns
sub
sbb
arpl
add
cwtl
push
xor
stc
jl
or
fadds
pop
inc
fs
fstp
enter
mov
and
sahf
cwtl
push
pop
push
xchg
out
mov
jae
push
sub
fcmovb
jbe
stos
sbbb
popl
data16
pop
mov
hlt
call
push
sahf
hlt
jl
test
and
cli
push
and
sti
xlat
pusha
ret
pop
or
and
jge
or
push
jl
cmpb
cmc
xchg
push
test
xor
cmc
leave
out
mov
movsl
repz
or
insl
dec
sahf
in
test
test
popf
inc
fprem1
push
xor
je
inc
cmc
leave
pop
sbbb
es
xchg
sbb
xor
aas
in
xchg
xor
jmp
sub
fisttps
lret
call
jmp
call
aam
sahf
bound
or
out
dec
mov
fwait
cltd
out
mov
jg
test
adc
jno
loop
mov
jmp
xor
sbb
inc
xchg
push
jle
mov
push
loope
jbe
loopne
mov
mov
out
sbb
rclb
aas
fidivl
xor
push
mov
fidivl
jl
addr16
les
sbb
lods
mov
shll
sbb
xorb
mov
or
out
mov
push
xor
push
cmp
or
push
cld
push
dec
mov
fdivrp
call
and
mov
arpl
or
push
fisttpll
les
push
test
outsl
aaa
pop
jecxz
or
daa
and
xchg
mov
lret
pop
ss
lretw
shll
fiaddl
dec
clc
pushf
sub
aam
lret
dec
lret
es
stos
jne
in
cmp
mov
outsl
in
sub
fninit
nop
inc
xchg
xor
jnp
adc
popf
or
rcrl
aas
push
add
or
lahf
and
cmpsl
and
icebp
bound
pop
pushl
mov
or
jbe
xchg
fdivs
xchg
dec
sub
addb
ljmp
fisubs
mov
arpl
loop
cld
mov
mov
sub
cmc
dec
out
cmp
pop
outsb
outsb
xchg
outsb
sahf
jns
mov
testl
and
jo
push
xchg
mov
push
and
xchg
cwtl
pop
aam
push
mov
fs
rcr
mov
adc
sbb
xchg
loop
jp
and
outsl
arpl
scas
jbe
or
in
sahf
jg
jg
xor
sub
popf
dec
push
cmp
add
jl
scas
push
sub
incl
sbb
es
rcll
cwtl
fwait
mov
sub
andl
in
sahf
pushf
add
repnz
pop
pop
mov
and
mov
push
loope
adc
in
das
push
or
or
xchg
or
jmp
and
stos
lds
test
ret
rcl
xchg
shrb
xchg
mov
dec
xchg
mov
mov
push
pop
iret
lods
and
ljmp
dec
xchg
inc
scas
mov
xchg
gs
es
cmp
call
add
push
push
pop
and
mov
notb
scas
inc
mov
cmp
cmpsb
shr
leave
scas
fsubr
and
sub
cmp
sub
and
cltd
scas
lods
imul
fwait
mov
add
push
cmp
xor
adc
lcall
mov
fwait
int
adc
sub
sub
mov
adc
in
xchg
rcrl
push
cmp
test
mov
mov
push
inc
movsb
loopne
xor
add
xor
pop
insl
add
movb
or
cli
mov
jne
fldl
mov
pushl
sub
dec
or
fistpll
iret
dec
cmp
push
aas
arpl
test
cmp
ret
jge
repz
test
xor
jmp
aam
and
adcb
lret
mov
xchg
fmul
xor
mov
xlat
dec
mov
mov
addr16
pop
pop
push
dec
in
jp
adc
mov
mov
push
inc
add
add
mov
mov
add
push
pop
out
sbb
rorl
jo
mov
aam
repz
sbb
fiaddl
cmc
sahf
out
aam
adc
and
ret
call
lock
inc
sub
out
and
mov
fists
dec
mov
sarl
pop
push
out
sub
mov
sub
shrb
mov
xchg
or
sbb
xor
leave
inc
pusha
movsl
mov
sub
test
and
mov
push
push
icebp
in
lret
in
ljmp
outsb
and
pop
xlat
pop
jns
int
xchg
jmp
mov
rorl
push
mov
int
popa
movsl
leave
stc
out
and
aaa
dec
enter
xchg
ss
adc
lea
dec
add
shl
lcall
popf
pusha
js
jo
sbb
sub
sbb
pop
sbb
cli
xchg
ret
sub
aad
fiaddl
sar
add
sbb
sub
push
or
sbb
mov
dec
xchg
sahf
or
cmp
push
jb
xor
cmc
int
xchg
ja
inc
inc
mov
and
push
aaa
or
cmpsl
xchg
hlt
sahf
lret
rorb
jmp
arpl
icebp
mov
push
cwtl
mov
or
or
bound
out
pop
xchg
lea
js
and
cli
dec
cmpl
ss
mov
and
ljmp
sub
loop
das
mov
lahf
jp
lds
sub
mov
int
pop
inc
aaa
xchg
dec
out
imul
outsl
jae
dec
call
mov
or
add
sub
adc
push
mov
sbb
or
add
adc
std
push
lea
ffreep
or
xchg
push
inc
or
sub
inc
testl
imul
inc
into
imulb
cmpsb
or
daa
fs
fs
outsb
xchg
cli
inc
outsb
hlt
insb
mov
cmp
sbb
xchg
arpl
lret
jo
pop
push
inc
pop
shlb
out
inc
pop
xor
pop
cli
inc
aaa
hlt
andb
xchg
push
pop
xchg
push
negl
ljmp
pop
fdiv
or
cmp
inc
dec
xchg
push
popa
fstps
mov
add
in
cmp
pop
mov
pop
lock
imul
testb
jp
das
mov
push
cmc
lret
decl
add
std
jae
roll
pop
mov
push
jb
pushf
xchg
push
xor
add
xor
cmpb
dec
test
xchg
mov
aas
pop
sub
jle
add
outsb
dec
dec
adc
pop
jp
fisttpl
lcall
movsb
cltd
xchg
lahf
fnstenv
decl
mov
jge
xchg
cmpsb
adc
pop
clc
imul
ret
icebp
nop
mov
es
cwtl
sub
test
sub
iret
adc
adc
jo
sbb
bound
ss
cli
cmp
out
sub
out
pop
in
pop
and
push
mov
ret
sti
xor
rclb
mov
pop
dec
into
out
inc
or
shl
cmp
sub
popa
mov
test
clc
jmp
or
mov
pushf
inc
dec
cmp
dec
out
cmpsl
fld
cli
test
jmp
jecxz
testb
push
xor
pusha
add
divb
and
inc
out
adc
stos
fdivs
inc
repnz
insl
lods
pop
repnz
mov
fcomps
aas
pop
pop
je
mov
insb
arpl
lds
sub
mov
sahf
xchg
mov
adc
and
dec
or
xor
push
inc
jns
repz
orb
pop
push
sub
movsb
mov
mov
xchg
push
jnp
test
push
out
or
call
fwait
movsb
cli
inc
rolb
and
addr16
sbb
aaa
test
int
jo
inc
fdivrs
aaa
out
jb
fldenv
pop
inc
add
insl
fbstp
push
faddl
adc
push
loopne
jg
repz
push
mov
out
popf
cli
and
lods
xor
int3
imul
in
and
daa
and
xchg
jns
notb
loope
sbb
lock
icebp
adc
cs
and
aas
inc
arpl
sub
loopne
and
push
jnp
jmp
arpl
dec
sbb
loope
sbb
push
loopne
push
xchg
pop
push
jbe
lds
sub
cwtl
loopne
inc
xchg
lds
divl
mov
adc
add
outsb
pop
je
cwtl
xor
lahf
js
into
add
sbb
loop
mov
shr
sub
stc
lretw
xchg
jle
loope
sbb
cli
push
rcll
shrb
sbb
imul
mov
movsl
enter
mov
dec
or
pushf
dec
push
xor
add
popf
mov
rcrb
and
aaa
jmp
scas
fs
mov
je
loopne
adc
jle
jnp
and
jl
lcall
dec
mov
orb
mov
push
dec
addr16
lea
jge
xor
cs
sub
jecxz
fmull
jns
xchg
xlat
add
push
addr16
or
shll
std
mov
cmp
dec
in
fistps
aam
xor
sub
jbe
mov
inc
ret
movl
mov
pop
mov
mov
xchg
and
adc
das
mov
dec
popf
xor
imul
jle
mov
iret
out
pop
fisttpl
dec
rcr
sti
xchg
xor
push
add
out
scas
jb
shr
adc
and
mov
inc
push
cmp
jp
inc
push
mov
fdivrp
push
mov
out
cmpsb
dec
dec
push
scas
mov
mov
js
mov
or
jmp
cmp
jge
movb
gs
fcoms
jns
adc
xchg
mov
fwait
fwait
mov
out
scas
jb
call
sub
ficoml
mov
outsl
shrb
pop
push
lret
mov
out
xor
arpl
push
cmp
xchg
push
repnz
cs
fsts
mov
cmpsb
inc
and
cwtl
in
test
rcr
movsl
cmp
lret
adc
xchg
or
push
mov
insb
push
lret
loopne
ret
icebp
xchg
add
dec
jnp
push
ret
in
int3
shlb
mov
push
pop
aaa
fmull
xor
cmpsl
cld
aam
sub
jbe
xchg
out
dec
lods
fmuls
cld
fisttps
out
xchg
cmp
popa
rcr
insb
test
inc
repnz
outsb
push
adc
movsb
push
mov
mov
dec
inc
shrl
jb
sub
inc
pop
stos
pop
sub
inc
test
outsb
push
push
pushf
aad
push
mov
sub
push
aaa
push
xor
movsl
fnsave
mov
mov
sbb
sub
daa
pop
push
insb
mov
adc
or
push
lcall
mov
mov
or
bound
in
sarl
mov
rcr
push
xchg
and
roll
lcall
push
adc
or
adc
iret
jmp
or
loop
cmp
add
inc
es
sub
call
sahf
push
sub
inc
xchg
paddb
push
mov
stos
lds
xor
or
fdivs
xchg
out
xor
push
cmpsl
mov
shrb
jns
dec
repz
pop
loop
mov
bound
pop
rcll
lahf
repz
ljmp
les
sub
aam
jl
pop
movsl
fdivrl
push
xor
ret
adc
movsl
mov
jg
mov
cmp
mov
xor
jo
ja
mov
cmp
negl
sbb
cmpsl
stc
mov
xor
inc
adc
in
aam
ljmp
xchg
jae
and
fcomps
fwait
orb
and
sub
arpl
pop
into
dec
ss
xor
lea
jl,pn
mov
pusha
ret
fs
sahf
lock
sbb
sbb
leave
out
int3
cmp
push
je
or
jmp
sub
mov
mov
daa
ss
adc
rol
adc
mov
pusha
jns
cmpsb
add
jle
and
xchg
dec
loop
ror
enter
lods
fs
ror
pop
add
inc
in
jbe
pop
fwait
mov
js
push
push
js
adc
mov
mov
mov
movsl
pmaxsw
in
xor
mov
in
jb
inc
clc
pop
inc
dec
sub
dec
dec
incl
mov
cmp
aas
dec
lcall
or
mov
scas
lods
push
flds
xchg
mov
pop
adc
or
add
sub
jg
cli
lods
mov
push
mov
lcall
push
rcll
pop
pop
scas
stc
pop
mov
mov
mov
jmp
mov
cltd
push
ds
nop
inc
test
jmp
sahf
push
jmp
inc
jb
mov
rclb
int3
jno
js
jno
cmp
clc
cli
or
and
shrb
mov
and
pop
inc
xchg
daa
loop
repnz
or
jbe
mov
adc
popa
cli
push
push
shlb
fisttps
das
sub
xchg
mov
imul
stos
inc
jbe
mov
sub
push
scas
arpl
or
pop
sahf
testb
out
and
pop
icebp
inc
lret
mov
out
adc
or
mov
mov
sbb
add
insl
mov
sbb
test
mov
sbb
or
xchg
sub
pop
sti
lret
mov
imul
mov
mov
shrb
dec
cltd
cmp
mov
insb
lds
ss
es
lock
mov
push
lret
mov
into
int3
stos
js
jb
popf
or
mov
push
ret
jle
mov
cmpb
jnp
mov
push
add
cmpsl
lock
pusha
push
in
nop
leave
dec
int3
and
sbb
xor
insl
scas
pushf
add
and
enter
mov
jmp
test
dec
push
mov
cli
xor
jns
mov
push
sub
mov
sbb
add
in
dec
adc
or
cmp
ret
outsl
inc
dec
xor
xor
pushf
test
fisubrs
mov
inc
inc
or
fbld
or
test
xchg
jns
or
mov
daa
or
jle
pop
pop
xor
dec
sarl
and
cli
xor
lods
mov
ror
fcomp
imul
lds
nop
out
pushf
test
inc
loop
jne
mov
cmp
mov
sub
daa
sahf
mov
dec
sub
jg
sti
imul
add
add
add
push
arpl
push
mov
xlat
out
ja
pop
sbb
jmp
xchg
into
dec
loop
fidivs
pop
lret
and
decl
xchg
clc
out
sbb
jns
sbb
cli
push
mov
push
loop
dec
cltd
and
sbb
mov
out
loop
rorl
popa
xor
add
lret
xor
cld
fisttps
dec
adc
pop
jne
ljmp
lret
insl
add
stos
mov
sub
fs
jnp
push
subb
or
adc
out
lods
xchg
sub
mov
pop
mov
decb
js
push
inc
adc
sub
insl
rcrl
inc
sti
xor
jecxz
arpl
lods
fdivs
ret
jno
sbb
add
cld
or
push
insl
in
adc
mov
clc
nop
cltd
es
pop
stos
cmp
inc
imulb
dec
mov
jae
les
das
movsl
movl
stos
xor
fldenv
gs
xchg
test
scas
test
das
and
xchg
jg
flds
xchg
sub
jo
daa
shr
addb
lds
movsb
mov
mov
in
xor
ljmp
inc
ret
pop
pop
mov
mov
jp
lcall
sbb
vpshuflw
fisubl
mov
in
and
xor
dec
lds
call
stos
mov
and
sbb
lcall
rcrl
movsl
jo
xor
scas
jle
jg
int3
mov
mov
popf
mov
divb
dec
mov
xchg
or
push
imul
icebp
mov
push
and
jnp
nop
jg
iret
sbbb
mov
jne
cltd
jns
mov
aaa
or
clc
loope
mov
stos
cmpsb
jno
dec
mov
and
ljmp
push
sbb
fcomip
rol
inc
shll
out
sbb
int3
xor
out
inc
scas
mov
dec
sub
int3
jo
and
shll
in
jb
movb
and
push
adc
or
cmp
jbe
pop
xchg
xor
push
and
mov
repz
inc
sub
inc
arpl
incl
sub
ret
in
pop
orb
ret
pushf
out
cmp
jmp
fsts
xchg
cmp
mov
ret
mov
push
loope
xlat
mov
xchg
iret
push
add
loopne
or
pop
scas
push
outsb
inc
aad
inc
hlt
leave
iret
ss
in
cmp
lods
and
xor
addr16
jmp
cld
add
push
add
in
clc
fwait
pusha
imul
fstpt
sbb
sbb
aam
add
arpl
fdiv
and
fdivrp
daa
xor
add
mov
xchg
stc
and
push
in
aas
mov
xchg
out
dec
loopne
out
push
jnp
dec
stc
cmp
mov
lcall
or
mov
lods
test
jno
mov
adc
xchg
std
jg
dec
rolb
rcl
xchg
xor
mov
pop
mov
adcl
sub
xchg
int
dec
mov
push
or
dec
incl
ror
or
xchg
add
fistl
insb
out
pop
xor
cmp
xchg
mov
xchg
sbb
mov
inc
inc
ljmp
mov
inc
mov
jne
outsl
and
cli
inc
pop
test
and
ss
ja
lahf
jg
xchg
add
loopne
inc
dec
sbb
xor
jns
nop
jo
sbb
ljmp
mov
xchg
jae
sub
jnp
test
fidivrs
fs
bound
insl
cmp
nop
mov
pushf
adc
adc
dec
dec
sbb
mov
mov
mov
xchg
lcall
rclw
jp
cwtl
adc
leave
iret
je
mov
xchg
cmpsb
mov
dec
popf
mov
aaa
popf
movsl
push
pop
adc
repnz
ss
ret
scas
bound
repz
incl
sub
mov
roll
adcl
adc
push
mov
dec
push
push
pop
push
mov
sbb
and
push
jno
lods
xor
imulb
adc
jg
xor
add
add
dec
aas
sbb
jge
enter
lahf
call
rolb
mov
aaa
sub
cmp
shll
test
in
sbb
jb
mov
int
testl
test
mov
push
lock
test
rorl
out
and
push
pop
jg
push
ljmp
loopne
sub
xchg
dec
imul
mov
es
xor
cli
mov
loopne
cltd
pop
lea
adc
push
inc
in
mov
pop
mov
lahf
int3
int
push
add
int3
imul
stc
or
mov
orb
and
fdivrl
push
sahf
mov
and
test
ss
mov
mov
roll
and
data16
and
push
mov
cltd
out
lahf
fisubs
ss
add
aam
jnp
mov
adc
arpl
shl
push
call
stos
inc
fimull
push
sbb
fisttpll
mov
nop
dec
inc
jo
dec
or
sbb
pop
andb
jecxz
lods
scas
sarl
lahf
add
add
cwtl
inc
jb
loop
imul
lock
frstor
iret
negl
addb
adc
mov
and
or
cmp
cltd
pushf
test
adc
int
out
inc
in
out
lea
test
cmpsl
dec
aad
stc
pop
popf
add
jo
mov
inc
addr16
adc
or
ja
cltd
rol
mov
sbb
cwtl
or
jo
fidivrl
cmp
ret
pop
jns
hlt
inc
out
imul
push
mov
outsl
test
out
mov
jno
mov
std
pop
fdivrp
add
jae
insb
fistl
out
loope
pop
clc
inc
pop
int3
in
stc
data16
leave
dec
mov
stos
xchg
add
jne
insb
xor
std
enter
sbb
mov
pop
rcr
repz
fnsave
sub
lea
xchg
mov
mov
jl
lret
jno
fmuls
jno
in
dec
xchg
dec
add
or
jp
test
jo
inc
jns
enter
jmp
test
pop
jbe
inc
sbb
xchg
test
cmp
leave
cmp
xor
cld
jno
out
sub
cmpb
mov
imul
popa
jnp
lock
xchg
imul
or
push
mov
xchg
sbb
aad
mov
xchg
xchg
and
mov
sti
dec
stc
pandn
inc
sbbl
mov
push
sbb
addr16
cs
test
cmp
xchg
les
leave
xor
inc
sbb
inc
in
lds
push
xchg
scas
xor
mov
push
aas
shrb
out
push
or
lods
in
inc
dec
pusha
fbld
out
dec
into
push
je
jg
das
aas
cmpb
arpl
and
orb
lods
or
outsb
std
pop
push
xchg
jnp
int
movsb
flds
mov
xchg
add
hlt
ret
out
ljmp
popl
outsb
mov
xchg
dec
push
cltd
add
pop
pop
xlat
aaa
sahf
enter
nop
push
mov
xchg
mov
sbb
repz
cmp
out
jnp
sub
sub
dec
cmp
mov
sub
jmp
jge
stos
outsb
stc
add
mov
or
icebp
add
dec
fnstsw
idivb
clc
rorl
imul
bound
mov
test
ret
sahf
mov
add
aam
jle
lock
pusha
xor
notl
ja
int3
mov
repnz
push
mov
scas
daa
pop
je
repnz
cmp
mov
out
jo
movsb
aam
fld
sbb
push
or
mov
movsb
cld
aaa
add
push
je
out
mov
cld
mov
lods
pop
lret
ljmp
and
sbb
aam
pop
lahf
mov
int
aad
lcall
ljmp
or
addr16
sbb
inc
outsb
or
test
pusha
shld
dec
push
or
jo
mov
pop
xchg
sbb
xchg
or
into
mov
adc
add
out
js
repz
mov
outsb
or
out
xor
outsb
or
and
popf
adc
das
cmpsl
xor
loopne
aaa
dec
lahf
scas
mov
outsl
mov
mov
call
cmp
sub
aad
sbb
or
cmpsb
arpl
xchg
test
mov
push
and
or
sbb
and
aaa
mov
mov
sub
repnz
aam
add
adc
subl
mov
subl
test
lock
push
lock
inc
mov
or
sub
adc
inc
cmp
jb
jns
and
movsb
loop
cmpsb
dec
xchg
cmc
sbb
mov
sub
mov
mov
sub
out
xchg
push
sub
pusha
enter
stos
sub
mov
rcrl
pop
jbe
mov
dec
repnz
pop
push
lods
pop
dec
je
and
push
push
xrelease
mov
inc
inc
sbb
repnz
fstps
sti
cmpsb
inc
xchg
push
or
inc
and
xchg
inc
ror
jae
iret
fisubrl
sbb
loope
ja
lcall
and
out
rorb
xchg
ljmp
movsb
inc
lcall
pop
aas
adc
mov
sbb
or
xchg
push
xchg
push
xchg
jns
push
sbb
cld
xchg
enter
mov
push
xlat
mov
jle
cltd
loope
inc
sbb
push
push
sarl
inc
stos
scas
pusha
dec
jg
mov
out
cmp
loop
xlat
lods
pop
push
jle
out
xchg
mov
int3
test
adc
clc
jo
pop
lret
jns
pop
add
aam
vmulss
push
mov
sub
call
push
fidivrl
pop
push
inc
xchg
fldenv
divb
add
pushf
roll
fidivrs
pop
xor
mov
sub
jl
test
xchg
hlt
aas
scas
push
jp
out
scas
jmp
loopne
mov
test
push
add
imul
addb
pop
std
mov
das
loop
xchg
push
cmp
mov
sbb
negb
inc
sahf
adc
cmp
bnd
push
xchg
insb
pop
data16
cmp
inc
mov
push
adcl
shll
insb
dec
lea
adc
lahf
or
sbb
mov
loope
bound
or
push
pop
incb
adc
add
push
jg
add
jl
push
xchg
iret
std
jo
cmp
rclb
push
outsb
or
pop
dec
pop
adc
enter
cmp
mov
xchg
mov
dec
dec
lock
mov
fimuls
nopl
nop
xchg
stos
inc
and
mov
lahf
mov
mov
das
test
ret
aas
dec
pop
rcrl
mov
out
pusha
push
cmpsb
inc
insb
aas
push
decl
xchg
pop
mov
mov
mov
inc
mov
adc
xchg
cwtl
pop
aad
shll
xor
and
jnp
sbb
jne
pop
call
mov
leave
or
lcall
in
mov
xlat
outsb
jnp
sbbl
lods
stc
jnp
jnp
test
mov
adc
stc
cmp
add
and
stos
fsubs
stos
jne
fldl
xor
shl
fdiv
push
andl
dec
pop
std
push
cmpsl
out
popa
xor
push
dec
mov
adc
xchg
xor
adc
and
and
dec
add
ret
push
pushf
repz
pop
movl
mov
test
inc
adc
lock
pop
push
pop
push
sub
ss
dec
loope
jge
pusha
test
je
xor
je
ffree
pop
into
push
jg
jl
mov
dec
push
or
push
cld
or
sub
mov
imul
push
or
rolb
and
sti
cmp
dec
imul
clc
push
pop
mov
icebp
mov
outsb
adc
add
mov
add
in
sub
xchg
int3
sub
in
movsb
nop
fcompl
div
fnsave
inc
and
jle
test
ds
sbb
and
nop
adc
fnstenv
aas
xchg
jno
xor
sbb
push
add
fsts
sub
jne
cmp
or
jnp
inc
add
addr16
es
clc
or
movsl
test
fists
push
mov
add
sub
mov
or
ret
test
mov
sbbb
push
lret
scas
into
mov
in
jbe
aad
in
push
cmp
adc
test
sti
jge
rol
and
movsb
or
popf
or
out
mov
xchg
cmp
mov
sub
pop
cmc
movsl
xchg
popf
mov
loope
pop
mov
outsl
cmp
mov
lret
in
int
sahf
jno
mov
cmp
mov
mov
js
lcall
cld
adc
add
mov
insb
mov
xor
call
mov
fadd
sbb
mov
arpl
fsubrs
push
scas
rolb
cmp
fs
add
out
mov
dec
cli
ret
jb
and
jmp
sub
aas
cmpsb
inc
xchg
lods
dec
pop
sbb
aas
and
add
mov
dec
mov
mov
xor
mov
or
sbb
jnp
jo
jg
mov
add
xchg
mov
sahf
mov
stc
pop
mov
arpl
iret
mov
aaa
orl
mov
or
aam
jmp
xchg
xchg
int3
or
sti
sarl
shll
pop
cmc
scas
mov
loop
in
pusha
xchg
shlb
jmp
dec
add
ret
in
and
push
adc
inc
xor
leave
cmp
fdivrs
aam
cmpsb
in
test
dec
jnp
imul
lretw
icebp
and
xchg
pop
fistl
xchg
pop
dec
xchg
add
scas
ds
add
sbb
jbe
ds
dec
xchg
mov
pop
lods
add
sahf
jno
cli
movb
adc
adc
and
jg
adc
mov
leave
sahf
lods
movl
push
jg
imul
aas
js
push
adc
and
jno
loop
or
xor
bound
std
pop
loop
and
dec
xchg
dec
mov
adc
scas
cld
enter
fcoml
xor
xchg
sar
xchg
push
icebp
lret
incl
aaa
and
fwait
ja
add
xor
andb
pop
scas
jae
mov
jbe
shl
mov
or
shl
cmpsb
pop
xlat
pop
pop
or
sub
push
dec
cwtl
adc
pop
pop
cwtl
jp
jmp
dec
adc
cltd
push
outsb
jb
add
xor
or
or
inc
mulb
mov
cs
sbbb
jg
sub
xor
addr16
ret
test
adc
stos
aaa
sti
xor
adc
hlt
xchg
cmp
jecxz
das
shrl
inc
mov
es
icebp
mul
adc
inc
icebp
mov
adc
mov
cmp
cli
std
das
adc
push
mov
or
jle
pop
jne
and
and
das
or
orl
or
cmp
outsb
jmp
push
cmp
or
test
aas
lock
out
cltd
mov
test
mov
enter
mov
or
xor
xlat
out
adc
or
pop
fidivrl
or
test
sub
ret
pushf
inc
nop
repz
adc
and
out
mov
std
cmp
and
inc
les
mov
sbb
mov
es
daa
push
mov
jnp
sbb
sub
test
xorl
push
xchg
jno
lock
cmp
xor
ss
out
add
and
adc
cs
xchg
cmc
pop
adc
fldenv
out
test
imul
xchg
mov
xchg
xor
inc
test
push
or
jno
cmp
pusha
jmp
pop
in
mov
aaa
and
lcall
pusha
jp
cmp
sub
popf
out
push
lds
push
lds
push
adc
cmp
addr16
adc
mov
lahf
jae
cmpsl
addb
cmp
mov
imul
push
xchg
mov
stos
sbb
pop
sbb
cli
xchg
mov
jo
lret
pop
dec
adc
rorl
mov
mov
lret
rolb
jg
mov
mov
inc
pop
push
std
jo
mov
mov
push
gs
xor
pop
xchg
ret
daa
daa
fmul
aad
fisttpll
sbb
mov
bnd
xchg
rcrb
mov
sub
shrb
xor
fwait
aaa
inc
mov
pop
dec
das
rcr
mov
pop
push
in
sahf
xor
repz
shlb
sbb
aam
push
nop
lods
cmpl
in
in
lahf
or
in
add
jno
mov
inc
loope
lret
stos
adc
cli
cmp
and
push
jno
sub
mov
jmp
aas
mov
inc
movsb
ret
push
or
mov
xchg
xchg
nop
xor
inc
testl
push
mov
cld
scas
pop
cmp
sarl
push
loop
cmp
test
sbb
scas
push
bound
and
dec
or
jnp
xor
scas
xor
xor
std
adc
dec
addr16
jne
stos
inc
pop
mov
and
lea
adc
scas
xor
xchg
cmp
push
out
test
into
mov
push
pop
xor
je
int3
cwtl
popa
pop
in
stos
lcall
loope
mov
je
pop
mov
adc
add
add
cmp
loop
bound
insl
movsl
push
push
add
pop
or
jno
push
jns
imul
xlat
mov
cmc
push
movsl
inc
push
jmp
bound
or
in
call
cli
mov
push
jge
mov
or
add
jmp
fucomip
mov
movd
inc
jno
pop
add
add
push
cmp
inc
adc
jne
push
mov
adc
repz
enter
and
ljmp
cmp
insl
jl
adc
je
mov
jae
inc
pop
sbb
mov
mov
sbb
adc
sarl
nop
pop
cmpl
sbb
lret
dec
sahf
xor
jns
sbb
lret
xor
mov
xor
lea
mov
xchg
xor
sbb
xchg
dec
adc
lods
int
inc
dec
fidivrs
xchg
and
push
cmp
adc
mov
jl
lea
and
inc
shrl
xchg
imul
jg
faddp
sbb
and
fists
loopne
mov
rolb
ja
sbb
jns
vmwrite
imulb
mov
xchg
mov
push
pop
cmp
cmp
adc
mov
das
and
xchg
in
push
inc
and
imul
iret
dec
imulb
repz
jmp
lahf
and
aaa
push
mov
test
push
int3
sarl
jg
sbb
shr
inc
cmpsl
mov
cmp
dec
xor
adc
inc
dec
xor
out
inc
cmc
leave
jl
inc
cmp
sub
aaa
aam
rcl
stc
ss
stos
aaa
push
push
stos
or
xchg
dec
pop
inc
cmc
stos
push
jle
rorl
popa
xor
inc
and
gs
cmp
std
mov
mov
test
divl
mov
jnp
xchg
popf
sub
push
push
lret
xor
xchg
xor
push
sub
xchg
lods
jmp
cmp
xchg
mov
pop
in
xchg
out
push
scas
cmpsb
mov
imul
sub
push
add
scas
cmpsb
push
jo
or
loop
pop
mov
jo
insb
push
mov
cmp
inc
inc
sub
pop
jle
mov
sbbl
or
xlat
inc
cmp
lahf
pushf
movsb
rcl
mov
loope
aaa
sti
js
loope
cmp
fildll
mov
adc
xor
adcl
jbe
mov
lds
iret
mov
push
les
push
scas
movsl
pop
ss
icebp
pop
test
bound
out
xor
pop
ret
mov
mov
and
pusha
in
mov
dec
sbb
xor
cli
jns
push
cltd
xchg
subb
push
rol
pop
ret
or
pop
sbb
fs
push
mov
mov
loope
ds
xchg
adc
adc
xchg
mov
ret
jnp
je
lea
fs
sbb
fdivl
and
or
pop
outsl
or
sarb
mov
dec
sbb
pop
cmp
fdivrs
sub
push
xor
in
adc
sub
inc
jae,pn
sbb
test
push
jbe
jnp
xchg
adc
push
push
fnstcw
cmp
iret
dec
adc
cmp
cmp
or
lahf
enter
jl
into
xchg
shrl
lea
test
sti
push
loopne
inc
je
and
jecxz
movsb
add
ljmp
adc
xchg
in
pop
inc
xchg
cwtl
js
aas
int
push
xchg
sbb
ret
pop
lret
stos
and
sbb
test
test
arpl
push
adc
test
bnd
iret
xor
das
mov
jge
lea
pop
repz
addr16
sub
inc
pushf
sahf
hlt
divl
mov
ret
and
xchg
push
or
cmp
mov
cmp
lods
xchg
and
mov
pop
and
inc
stos
loope
inc
lods
sarb
adc
jns
push
or
push
into
cmpsl
movsb
cmp
idivl
movsl
jno
push
popf
mov
loop
mov
or
icebp
adc
lods
dec
sbb
js
aad
mov
xchg
mov
mov
inc
push
iret
data16
in
ja
ficomps
jp
in
dec
mov
pop
sbb
testl
inc
dec
sbb
mov
movsb
repz
roll
push
xor
push
bound
xchg
add
or
insl
sahf
pop
loop
pop
imul
fsubl
mov
iret
loop
sub
adc
int
rolb
jbe
mov
or
cmp
enter
loope
jecxz
inc
movsb
xchg
adc
fisttps
or
inc
pop
inc
xchg
mov
push
add
aas
mov
call
ret
popa
enter
popf
mov
daa
adc
xchg
sbb
repz
xor
or
push
movl
and
jmp
adc
xchg
adc
movsl
cmc
pop
scas
adc
jb
dec
int
or
pop
inc
daa
xchg
sbb
in
cwtl
push
test
mov
lods
roll
insl
pop
sbb
lahf
mov
mov
call
roll
xchg
cmp
cmp
push
dec
and
je
arpl
jo
pop
int
test
shlb
jp
or
daa
push
adc
fcoml
daa
jb
push
lods
imul
fwait
lods
mov
push
lods
popaw
imul
out
mov
pop
icebp
sbb
stos
arpl
mov
call
dec
dec
sbb
push
or
sub
ljmp
inc
sub
clc
cmp
jge
dec
daa
dec
dec
out
out
hlt
dec
inc
xor
cli
mov
dec
or
mov
ror
cmp
ljmp
cli
sbb
xchg
das
loope
pop
stos
rolb
cmpsb
mov
nop
mov
mov
cmp
lcall
sbb
cmc
add
dec
mov
mov
push
cmp
daa
test
and
and
jmp
xor
out
mov
leave
fdiv
sti
mov
mov
das
sbb
adc
dec
and
mov
fldcw
xor
aad
repnz
add
into
jns
and
in
arpl
ljmp
jo
push
call
sub
push
call
clc
call
daa
sti
pop
popa
xchg
stos
mov
xchg
dec
dec
or
nop
jg,pn
mov
jmp
ficoms
cmpsb
pop
bound
js
cmp
nop
aaa
jns
add
xchg
or
add
and
xorb
cmc
in
ljmp
adc
lock
push
jge
lret
push
jno
mov
call
pop
loopne
fcomps
ds
add
add
cwtl
dec
test
mov
mov
cmp
sarl
and
cmp
mov
aas
in
fdivrs
jmp
jmp
dec
inc
sbb
sbb
jo
fbld
into
mov
dec
in
inc
in
push
stos
sbb
xchg
cltd
shl
mov
test
faddp
pop
ljmp
inc
mov
sbb
shr
loope
ret
adc
in
stos
test
loope
outsb
push
daa
jnp
cmpsl
adc
fcmovnb
adc
jns
xchg
and
ret
mov
mov
mov
mov
pop
ljmp
lock
les
fidivrl
stos
cli
ret
inc
into
push
jle
add
jmp
or
pop
fnsave
inc
cltd
sbb
cmpsl
add
loop
arpl
cmp
xchg
mov
into
mov
xchg
sub
rorb
jae
inc
sub
mov
int
push
adcl
push
add
movsb
test
and
into
xchg
xchg
xchg
orb
and
in
cmp
lret
xchg
cmpsl
jo
pop
inc
shlb
mov
out
aas
enter
je
and
mov
lods
lea
xchg
jle
push
sub
adc
mov
shrl
push
subl
ljmp
jne
add
cs
clc
add
fists
dec
mov
inc
or
and
out
mov
cltd
inc
dec
sbb
cmpsl
xchg
scas
or
cmpsl
mov
outsl
mov
pop
ret
cli
rcrb
sahf
add
pop
xor
cmpb
out
dec
lods
inc
ds
and
fs
mov
gs
and
sar
push
xor
je
xchg
mov
inc
mov
mov
mov
and
xchg
pop
mov
orl
cmp
ss
dec
sub
inc
adc
sbb
jmp
mov
sub
mov
loope
sbb
cmpsb
pop
lcall
popf
xchg
lock
scas
or
popf
leave
lret
mov
mov
xor
fidivrs
mov
inc
sub
dec
loop
jae
mov
daa
pop
pop
xchg
inc
sbb
cs
jo
push
sbb
aam
mov
gs
xchg
cmpsl
movsl
adc
pop
je
std
out
pop
jecxz
lcall
loope,pn
dec
sub
xor
sarl
lods
inc
mov
js
icebp
cmpsb
repnz
or
sub
push
movsl
std
movsb
stc
icebp
adc
pop
cs
mov
das
test
dec
enter
test
movl
push
push
stos
test
scas
adc
add
mov
mov
cmp
into
cmp
push
sbb
sti
call
jnp
mov
sti
shrl
xchg
aas
jecxz
mov
fistpll
mov
cli
inc
inc
lea
xor
repz
and
dec
push
insb
xchg
xor
jg
ficoms
aam
push
cs
mov
fldt
jl
xor
repz
push
mov
mov
in
aad
push
push
mov
fnsave
data16
push
int
pop
adc
dec
sub
outsl
imul
int
imull
and
push
mov
cmp
movsb
dec
loop
cmp
insb
mov
pop
ss
rcrb
popf
leave
bound
push
xor
in
jo
idiv
jno
aam
test
stos
inc
mov
lds
push
cmc
cmp
shrl
and
sbb
cmpsw
cmpl
fistpl
testl
aas
and
decb
cli
lahf
add
aam
insl
movsl
pop
inc
jecxz
jle
or
pop
mov
insl
fisubrl
mov
repnz
fs
mov
fisttpll
jle
inc
repz
pop
sti
xor
jmp
cmpsl
fcomps
out
add
cltd
adc
les
jno
and
lds
sbb
sahf
sti
xor
shr
lds
pop
ret
lods
add
dec
mov
mov
pop
push
push
adc
dec
cmp
push
stos
cmp
sub
scas
and
dec
fisubrl
mov
sti
test
lock
add
inc
pusha
mov
jmp
xchg
and
lahf
sub
pop
stc
add
aas
mov
sbb
clc
test
dec
mov
push
adcl
ffree
mov
or
cmp
out
mov
cmpsl
cmpsb
sbb
aas
lods
loopne
add
inc
and
sbb
xchg
add
sub
int
fisttps
mov
rcl
add
sub
jo
nop
mov
mov
pop
js
inc
nopw
mov
sub
cs
or
cmp
cltd
add
mov
cmpsl
sub
nop
cmp
das
adc
insl
dec
in
ret
in
scas
mov
ret
loope
rorb
test
xor
jle
icebp
push
rcrb
insl
rcrl
sarl
or
fs
inc
fwait
lods
mov
add
insb
rorl
mov
popa
ret
aaa
mov
jo
insb
cwtl
cmp
lret
rolb
sub
sub
jae
xor
inc
adcl
adc
inc
mov
xchg
cmp
out
lods
lahf
daa
jnp
mov
mov
cmp
sub
popa
das
jns
icebp
jno
rorl
jmp
rcl
movsl
dec
cmp
xor
xor
push
cmp
pushf
cmp
xchg
xor
pusha
out
fsubs
mov
dec
in
mov
sub
in
leave
sub
lahf
or
jge
adc
stos
fdivl
xchg
sbb
push
cmp
sub
jmp
sbbl
movsb
sub
imul
enter
fnstenv
je
pop
popf
pop
push
push
pop
add
les
dec
fsubs
pushf
jb
je,pn
jmp
mov
stos
std
fwait
stos
cmpsb
pop
xor
insl
aas
jecxz
add
pop
int3
lds
cs
hlt
pop
imul
ljmp
sbb
mov
xchg
sub
test
mov
xor
jecxz
jno
mov
sbb
mov
ficoms
shlb
adc
shrb
sbb
adc
lods
in
push
inc
push
aad
pop
iret
jns
jge
push
int
xor
push
imul
dec
movsl
les
call
push
lds
or
mov
out
dec
pusha
xchg
cmp
add
test
fstpl
inc
test
cmpsb
adc
push
cmp
jge
push
mov
fistps
add
add
mov
sbb
mov
mov
mov
scas
enter
cmp
jb
sbb
into
stos
ror
jne
xchg
jmp
mov
imul
je
jb
fwait
out
out
ficompl
dec
das
xchg
mov
mov
into
adc
inc
xchg
xchg
push
nop
ss
outsb
sbb
aaa
outsl
fs
rorb
cs
test
ljmp
lret
cli
inc
and
insb
add
stc
mov
jecxz
push
xor
xchg
or
and
lcall
mov
andl
in
push
cs
in
popf
rclb
and
lret
dec
lock
shl
or
mov
pushf
jb
adc
xor
sarb
inc
rcll
and
lret
cs
push
or
xor
jbe
add
or
and
inc
nop
jbe
push
inc
loop
jg
mov
ret
dec
fwait
addl
mov
lock
push
pusha
stos
lea
xchg
stos
cltd
cmpsb
adc
jmp
sbb
xchg
inc
aas
jle
lcall
outsb
ret
leave
out
gs
jg
cmp
xor
jnp
mov
in
xchg
fwait
xchg
test
jbe
out
push
or
mov
in
sub
sbb
or
das
push
stos
imul
aam
pop
sbb
stos
push
sub
xchg
push
in
sbb
jl
sahf
repz
flds
lods
inc
inc
mov
es
mov
or
cli
in
int
xchg
test
or
sub
mov
mov
mov
xchg
in
out
icebp
ds
sbb
adc
mov
push
jns
js
test
mov
loope
push
fistl
mov
lret
pop
jl
mov
arpl
pop
xchg
insl
xchg
jbe
shrl
push
add
icebp
and
imul
xor
sub
inc
les
lds
insl
sub
sahf
inc
jmp
icebp
sbb
loopnew
test
and
arpl
pop
insb
icebp
test
adc
cmpsl
push
dec
stos
into
test
push
mov
int
rclb
cmc
push
cs
push
xor
fisttps
mov
add
inc
aas
mov
shl
hlt
nop
inc
lds
dec
cmc
vmovaps
mov
mov
cltd
cld
imul
fcoms
jb
mov
ja
xchg
xor
out
lods
std
cltd
mov
jo
mov
insl
int3
pop
add
enter
push
rcrb
fstl
mov
lret
std
lea
ljmp
push
test
mov
inc
pop
and
icebp
nop
repnz
inc
test
cmc
ljmp
sub
add
and
mov
xchg
mov
imul
jmp
shlb
cmp
sub
repnz
rcr
jp
xor
addr16
dec
fucomi
or
and
sub
mov
xor
icebp
push
inc
cmc
mov
jbe
mov
leave
stos
mov
xchg
adc
mul
push
lret
pop
cmc
jbe
jb
jmp
in
int
std
inc
lock
addr16
insb
or
add
mov
or
sub
fldt
add
mov
sbb
gs
fistpll
xchg
jne
jg
dec
and
mov
test
leave
lods
test
clc
scas
push
lret
in
inc
mov
jg
lea
push
sbb
mov
outsl
and
ret
leave
sbb
into
adc
pop
rcll
xchg
adc
aaa
lock
dec
int3
ret
pop
repz
out
push
cltd
jmp
and
push
mov
sub
out
mov
mov
mov
test
cmp
mov
mov
mov
mov
mov
sbb
push
jne
shlb
jle
jne
jb
ret
pop
bound
cs
fs
sbb
pop
dec
mov
mov
and
and
fcomps
roll
loopne
mov
xor
loop
dec
je
hlt
cmp
aas
or
das
dec
cmp
test
repnz
add
sahf
loopne
subl
mov
dec
push
add
mov
fcoms
imul
scas
mov
jo
and
mov
push
aaa
repnz
fdivrs
out
int
sub
pop
xlat
mov
dec
adc
push
mov
leave
mov
sbb
imul
or
out
pushf
outsb
insb
mov
in
imul
sbb
xchg
aad
inc
mov
insb
inc
sub
insb
add
jecxz
inc
popa
cld
fsts
or
data16
push
jmp
sbb
clc
lea
lea
daa
test
loop
mov
aam
sub
lock
or
mov
push
sbb
mov
xchg
sbb
or
inc
aad
fists
sub
pop
mov
cmp
lahf
shll
inc
dec
add
popa
addb
mov
daa
dec
xor
push
mov
xchg
mov
popa
jb
jmp
mov
inc
mov
mov
adc
xorb
setae
mov
rcl
mov
adc
jne
mov
ss
cwtl
dec
out
lahf
push
cwtl
lret
jp
dec
sar
fs
mov
or
jbe
push
daa
lods
scas
xor
jge
mov
out
push
push
negb
fiadds
adc
xchg
into
inc
iret
scas
shrb
ja
clc
or
cmpsb
scas
or
xor
stos
push
lahf
mov
dec
sti
mov
fsubl
fsubrp
cmp
sbb
stos
push
shll
cmp
lahf
cltd
imul
jnp
add
xchg
fsubrp
mov
or
loopne
lcall
cmc
mov
or
push
div
outsb
int3
sub
adc
xchg
mov
dec
stos
xchg
inc
das
sub
add
dec
lret
push
lcall
xor
inc
add
icebp
mov
cwtl
mov
pop
cmpsb
push
shrb
addl
ret
rolb
scas
add
xor
popa
dec
out
and
pop
out
sarl
adc
clc
cmp
outsb
lea
cmp
lea
bound
icebp
xchg
loope
movsl
dec
fstl
int3
mov
pop
les
xchg
in
adc
sahf
std
les
and
fwait
jb,pt
rcr
je
mov
push
jle
adc
test
pop
mov
loop
jp
jae
stos
loopne
subl
ss
fimuls
sbb
lret
xchg
rcrb
lods
jg
push
dec
lret
mov
dec
or
pusha
test
ss
push
int3
cmp
out
stc
inc
jno
scas
jmp
and
inc
std
js
test
mov
int3
xor
pop
mov
mov
popa
dec
mov
shl
mov
adc
in
inc
mov
arpl
xor
pop
popa
insl
dec
data16
mov
sbb
aaa
add
xchg
inc
lret
fs
lea
push
ljmp
fstl
sti
xor
jnp
cmp
mov
pop
mov
inc
mov
mov
outsl
xor
dec
fcmovb
fidivrl
cwtl
dec
andl
outsb
dec
push
out
in
dec
xor
or
int3
in
hlt
sub
jns
data16
inc
cpuid
movsb
xor
cmc
aam
lret
push
adc
in
sub
cmp
mov
into
decl
dec
or
ficoms
ret
add
dec
imul
loop
sub
mov
clc
flds
sub
into
and
js
lds
jno
dec
pop
sbb
insb
pop
add
jmp
dec
push
aaa
repnz
ljmp
add
inc
pushf
add
inc
xchg
xor
adc
test
push
xor
ffreep
cmpb
pop
mov
mov
jne
cmpsb
jl
test
fcoms
mov
imul
lret
or
ret
mov
aas
stos
loope
xchg
pusha
mov
dec
dec
cwtl
lds
out
jecxz
jb
mov
xchg
push
and
jae
cmc
or
xor
into
lods
inc
cld
lock
mov
cli
xchg
subb
jp
lcall
lret
mov
adc
adc
aad
test
inc
mov
xchg
scas
shrb
movsb
sti
fildll
and
lds
and
sub
push
push
cli
mov
lods
rcl
ja
enter
mov
inc
mov
mov
fidivl
aam
or
in
pusha
add
and
mov
insb
ja
jne
xlat
dec
shll
je
xlat
and
push
sbb
mov
push
jmp
jno,pn
arpl
out
xchg
push
inc
ss
adc
mov
daa
aad
fs
lahf
inc
xor
pop
mov
sub
jo
xor
cmp
xor
movsb
cmpsl
jbe
jne
add
insl
fstps
mov
mov
loopne
sarb
fldcw
mov
pop
fs
pop
xor
jge
lock
adc
xor
roll
outsl
mov
jbe
mov
divb
push
repnz
push
mov
jp
iret
arpl
subb
dec
or
addr16
inc
jne
add
insl
pop
andb
in
popl
popa
cmp
sbb
popf
pop
jle
push
jb
sbb
jecxz
popa
mov
sub
popa
cmp
cmp
adcb
flds
xchg
sbb
repz
and
mov
pop
mov
int
xor
test
les
xchg
test
push
lret
dec
add
dec
pusha
mov
pusha
and
ss
in
repz
mov
jl
loop
std
sbb
leave
and
xchg
aad
mov
fnsave
fwait
push
push
push
push
push
jno
jge
bound
xor
inc
pop
mov
lret
mov
call
lret
lret
stos
xchg
in
sub
and
jge
dec
loope
mov
add
inc
pop
nop
es
mov
pop
jle
adc
mov
adc
cld
out
adc
ret
loopne
stos
mov
fisubrl
mov
jmp
add
outsl
jne
jmp
mov
jno
flds
dec
cltd
or
cmp
add
cli
call
and
ljmp
mov
jecxz
data16
jne
shlb
push
punpckhbw
ss
xlat
jecxz
out
stc
mov
xchg
jno
jge
mov
aaa
add
mov
pusha
leave
mov
stos
sti
sub
std
cmp
sbb
jge
cmp
leave
inc
dec
cmp
call
out
sti
lea
jmp
jnp
mov
jmp
sbb
paddd
bound
xor
xlat
or
shll
mov
pushf
or
fnstsw
push
jg
test
cmp
mov
mov
xlat
mov
xor
inc
mov
xchg
stos
push
hlt
int3
jae
mov
add
repnz
movsl
mov
incb
hlt
mov
sbb
push
push
jns
test
and
xchg
test
sub
push
rorl
mov
inc
xchg
xor
and
jae
stos
mov
sbb
inc
push
adcl
push
test
aad
inc
cli
cmp
int
mov
std
fdivrs
loop
xchg
nop
jo
pop
jp
adc
pop
js
cli
xchg
call
jg
daa
mov
pop
push
push
ret
sub
sarl
fs
sub
cmc
mov
and
mov
cmpb
and
loopne
adc
xchg
jb
xor
and
add
mov
mov
ret
cmp
or
pop
jno
xchg
neg
mov
xchg
inc
lock
add
std
or
jns
repz
clc
fs
fdiv
pusha
inc
sub
ret
lock
fistpl
inc
mov
sbb
push
fisttps
mov
push
xor
ja
and
test
jno
and
mov
pop
cmpsb
mov
in
int
daa
xchg
mov
outsl
mov
jle
mov
cli
and
xchg
enter
xchg
fidivl
test
fwait
loope
daa
aas
add
mov
dec
xor
lock
fisubs
sahf
std
mov
aam
je
cmp
aam
ja
mov
xchg
nop
idivb
nop
mov
pushf
vdivpd
cmp
arpl
mov
dec
pop
push
mov
mov
arpl
jae
iret
push
and
jmp
in
addr16
jnp
pop
cmp
mov
push
push
pop
push
idiv
mov
xchg
out
ds
xor
and
dec
mov
out
xor
stos
test
xchg
fisubs
lret
mov
fldl
mov
adc
jecxz
movsl
push
mov
adc
clc
test
mov
add
jns
xor
jae
repnz
mov
scas
add
stos
stos
inc
push
ljmp
pushf
dec
leave
icebp
lods
stc
pop
mov
lahf
shlb
mov
idivl
roll
cmp
adc
js
lahf
adc
pop
aam
inc
les
js
aad
aas
push
es
mov
stc
scas
xchg
sub
cs
test
ret
out
pop
dec
adc
jne
lcall
and
cmp
xchg
cmp
ljmp
insb
daa
ja
loopne
and
adc
inc
mov
cwtl
div
add
enter
loop
out
inc
mov
lahf
jb
js
fidivl
add
jp
xchg
pop
push
push
mov
ljmp
jbe
push
and
popf
inc
or
cmp
and
js
dec
test
jno
push
push
mov
jnp
mov
push
adc
mov
dec
ljmp
pop
in
sti
cld
xchg
test
fnsave
adc
dec
and
dec
and
lea
xor
cltd
xor
mov
add
insl
inc
jp
scas
add
push
and
in
xor
inc
mov
arpl
addr16
jg
push
mov
cmpsb
gs
lock
dec
xor
scas
scas
dec
pop
and
adc
in
cmp
xor
imul
dec
jg
das
shrl
outsb
cmp
jmp
lock
pop
bound
cmp
dec
dec
popf
sub
incb
cmpsl
mov
jg
jge
fcmovbe
std
fistl
test
fstps
daa
mov
xchg
movsl
call
jle
test
cltd
pop
scas
xor
sub
push
push
mov
lret
mov
mov
lret
or
xor
ret
lret
cmp
dec
aad
xor
aad
mov
out
and
into
xchg
das
inc
aad
inc
mov
ljmp
cs
pop
cmp
jae
ja
mov
popf
fxch
mov
mov
test
fwait
jo
or
or
mov
adc
xor
rcl
inc
adc
pusha
daa
lods
xor
inc
lods
sahf
sti
push
add
loope
xor
push
sub
and
add
xchg
sub
test
outsl
push
bound
cmp
subb
xlat
cmp
in
gs
mov
jo
ljmp
fneni(8087
scas
mov
mov
sti
fnstcw
jmp
jp
sahf
and
repz
test
in
clc
pusha
adc
divb
adc
push
inc
push
and
xchg
cmp
test
push
push
inc
rcr
sub
aad
ljmp
inc
loop
xchg
insl
mov
notb
pop
cwtl
repz
lret
inc
mov
data16
loope
ud2
mov
push
ret
mov
das
jmp
mov
lea
sbb
cmpsl
sbb
sarl
imul
movsl
daa
hlt
les
mov
cmpl
test
nop
and
ja
mov
mov
stc
lcall
shlb
aam
lcall
addr16
mov
sahf
xchg
addps
dec
inc
xchg
add
test
in
sub
in
mov
test
sarl
std
push
xchg
notb
out
fsts
mov
and
ret
lahf
or
mov
mov
cli
xlat
sub
jl
cmc
adcl
pop
shrb
and
out
or
orl
fistpll
addb
inc
iret
lock
adc
push
fisttps
inc
dec
aas
or
xchg
stc
cwtl
xchg
roll
mov
jo
mov
in
add
push
push
mov
lret
jle
insb
inc
xor
push
enter
xchg
or
jne
aaa
lret
add
and
and
sbb
hlt
das
cmp
dec
pop
jl
xchg
jns
jno
jbe
stos
nop
pusha
mov
jne
in
push
out
in
jno
daa
mov
leave
aaa
mov
insl
shll
and
jmp
std
xor
push
lock
loop
sub
or
fcmove
mov
push
mov
sub
cli
mov
gs
xor
aaa
sti
sbb
int3
in
jno
dec
push
mov
insb
loope
ret
dec
ds
sarb
outsl
dec
fwait
xor
and
leave
scas
ret
push
adc
mov
push
sbb
sub
ja
into
jp
pushf
or
outsl
orb
cmp
repnz
xchg
adc
iret
or
es
cld
repnz
sbb
rorl
test
repz
lret
dec
and
loope
dec
frstor
jle
fmul
xor
cmp
pushf
inc
mov
xor
mov
in
into
int
fadds
in
outsl
mov
push
fs
xchg
into
mov
mov
mov
cmp
add
jno
fstpl
jecxz
in
add
fidivrl
mov
testl
adc
sbb
jge
xor
dec
addr16
iret
push
pop
inc
pop
lods
cld
pop
sbb
cld
sbb
sub
fimull
fcomip
in
mov
lahf
daa
in
sahf
outsl
std
and
daa
ret
xchg
cmpsl
testb
popa
lock
daa
ficoms
inc
push
test
ss
sbb
sub
pop
inc
adc
sbb
sub
xor
in
test
push
dec
jp
mov
sub
inc
push
aas
mov
adc
xchg
lock
push
clc
inc
sub
mov
ficomps
pop
adc
sbb
in
fiaddl
push
clc
adc
outsb
orl
add
out
je
push
stos
mov
dec
daa
sbb
and
leave
jae
xchg
adc
mov
movsb
sub
inc
inc
ljmp
xlat
adc
ss
mov
sub
fsubrl
test
jecxz
fwait
mov
in
pop
data16
popf
jb
jle
daa
inc
adc
adc
es
in
and
gs
pop
jne
repz
or
lcall
adc
lret
mov
xor
jl
negb
xor
into
dec
lcall
ret
mov
and
or
subl
mov
mov
mov
add
mov
fs
in
cmpsb
pop
sbb
arpl
adc
dec
mov
fwait
subl
dec
sahf
lods
mov
insb
std
outsb
push
repz
lods
mov
addr16
mov
fucomip
xor
les
movl
addl
xchg
mov
jmp
xchg
lahf
and
nop
jle
inc
push
out
enter
arpl
outsb
xor
jl
mov
sti
mov
mov
mov
addr16
or
dec
inc
dec
jns
or
push
mov
cmpsb
sub
or
jnp
mov
and
mov
ret
std
sub
loop
ljmp
rorl
fwait
cltd
cmp
xor
jnp
roll
cmp
pop
or
push
xchg
icebp
cmp
clc
aad
sub
pop
adc
lea
sbb
jb
je
test
aaa
jnp
add
xchg
jae
fcmovb
andl
rol
adc
lret
fldcw
cwtl
cltd
or
mov
or
outsb
subb
pop
int3
mov
das
scas
mov
mov
or
outsb
push
push
int3
xor
xchg
les
mov
out
rcl
sub
mov
xchg
cld
adc
loope
rcrl
nop
scas
stos
pop
adc
jle
lock
push
jns
mov
imul
sbbb
jle
and
jno
jmp
cmpb
xchg
je
repz
xor
test
bound
lods
inc
sub
xchg
movsl
repnz
ret
push
icebp
mov
pop
sbb
cmovl
cmp
fwait
dec
pop
add
pop
xchg
daa
das
xchg
sub
shlb
shl
add
shlb
fwait
ret
xchg
mov
sbb
das
test
xchg
sbb
rclb
test
mov
inc
and
inc
lods
add
cmc
leave
xor
addr16
inc
fldt
dec
cmp
jmp
stos
test
mov
pop
dec
sar
mov
lods
leave
and
mul
lahf
lea
in
lds
mov
lods
popf
sub
pop
cmc
aad
outsl
std
pop
mov
mov
pop
adc
cmp
addr16
sub
mov
mov
push
and
xchg
push
xor
push
dec
fwait
aas
int3
mov
fists
push
iret
fcom
xchg
inc
pop
adc
push
stc
push
test
mov
pop
jb
sub
push
mov
mov
mov
das
push
adc
xchg
mov
movsl
mov
insl
push
jl
xchg
sub
jae
xor
push
sbb
fyl2xp1
sbb
cmp
and
aam
test
lods
mov
stos
out
cmp
xchg
jo
push
xchg
and
push
aas
dec
mov
nop
out
sub
pop
fidivrs
lods
xchg
out
fiadds
xchg
xchg
xchg
sbb
push
mov
xchg
or
fs
dec
xor
dec
incl
inc
push
orl
push
cmp
cmp
mov
dec
ljmp
xor
pop
test
psadbw
daa
insl
shlb
ficompl
and
add
cmp
es
sbb
es
or
mov
adc
pop
pop
sub
jno
pushf
pcmpeqb
ret
inc
or
xor
push
mov
mov
push
clc
shl
push
mov
xor
pop
adc
push
and
sahf
adc
mov
cli
dec
adc
rorb
push
cmpsl
mov
add
mov
lds
inc
shrd
ret
sub
sti
mov
gs
cs
jo
xor
xor
sbb
adc
rolb
jg
nop
mov
or
int3
pop
lods
bound
add
xlat
sar
sbb
aad
sub
push
adc
jg
pusha
fwait
lahf
mov
and
push
dec
jp
fiadds
ret
repz
insl
push
cmpsb
sbb
pop
sub
cld
je
push
and
pop
and
push
xchg
jns
cwtl
lahf
jns
push
mov
lds
mov
push
mov
ljmp
cmp
dec
add
ret
sbb
ds
sarb
sti
add
adc
or
cmp
cwtl
ss
jg
lods
xor
push
pop
inc
sub
jae
xchg
jecxz
ja
lock
inc
pop
push
xchg
and
mov
cmp
leave
dec
bound
gs
daa
adc
mov
ljmp
pop
sub
adc
test
sub
popf
push
test
push
pop
stc
jg
adc
insb
ss
jge
lahf
mov
sub
mov
in
mov
outsb
sbb
pop
mov
pop
lods
js
lret
inc
inc
pop
jle
inc
or
fdivl
lret
fnstcw
jbe
fidivrs
pop
shll
push
or
mov
jl
push
std
orl
mov
mov
mov
sub
xor
push
idivl
cmpsb
mov
fwait
pushl
xor
mov
loopne
loope
adc
xchg
stc
mov
adc
inc
unpckhps
stos
rorl
or
hlt
into
inc
stos
lret
mov
jbe
pop
or
cmc
std
mov
sub
mul
sub
xor
xor
inc
call
jne
dec
lods
ret
pop
test
jmp
aas
xchg
js
push
jl
pop
stc
mov
mov
outsl
mov
xor
mov
or
not
jbe
movsl
mov
fwait
xchg
dec
mov
inc
cmp
mov
dec
mov
shll
inc
in
daa
sbb
leave
mov
cld
in
out
ds
cmpb
jnp
dec
mov
call
sub
sti
and
repz
mov
pop
addr16
push
negl
mov
insb
sub
add
and
outsb
insl
inc
lahf
addr16
cwtl
dec
cwtl
js
dec
dec
mov
xlat
pushf
dec
idivb
sub
aaa
lret
sbb
andl
pop
pusha
int
inc
xor
scas
pop
mov
in
mov
stos
dec
cmpsb
int
lahf
enter
lret
mov
cltd
shrb
mov
call
pop
sbb
inc
mov
imul
arpl
or
in
aaa
cmp
mov
xchg
movb
mov
insb
fidivrs
jnp
inc
adc
xor
in
mov
jl
cmp
outsl
sarl
mov
sti
into
or
fs
jbe
add
xlat
js
dec
inc
leave
lea
jecxz
aam
pop
pop
aam
jecxz
loopne
push
imul
fldenv
jno
mov
or
movsl
mov
mov
pop
jbe
pop
push
jo
inc
movsb
test
mul
jecxz
dec
mov
xor
dec
mov
in
pop
dec
or
jle
rcrb
and
in
sbb
lret
jmp
int3
xchg
outsb
mov
jnp
notl
dec
push
mov
mov
repz
mov
adc
shrl
cmp
lahf
and
sub
mov
stos
lods
cwtl
idivl
mov
pop
mov
leave
mov
xor
mov
es
pop
idivb
decl
cli
and
mov
mov
or
lcall
push
or
xor
imul
repnz
scas
int
mov
imul
xchg
test
iret
hlt
outsb
add
daa
lret
sarb
rol
loope
sbb
stc
push
clc
pop
movsb
icebp
je
insl
sarl
pop
mov
jl
xor
in
movsb
ss
adc
mov
xor
ficoml
jnp
adcl
xor
sub
mov
loopne
mov
sbb
inc
lret
cmp
xchg
or
xchg
gs
inc
adc
dec
mov
mov
jmp
jnp
std
xor
movl
insl
or
jne
cmc
adc
sar
popf
xchg
and
popf
lock
fsubl
stc
sbb
cmp
cmp
and
jbe
mov
add
xchg
mov
andl
in
mov
adc
cmp
push
jle
dec
cwtl
enter
cld
cmp
mov
inc
std
sbb
ljmp
fisubs
in
adc
test
jle
addl
pop
jns
inc
sbb
adcl
mul
mov
pop
or
sub
lea
iret
sbbl
loope
sub
lods
push
xchg
add
mov
push
ror
hlt
pop
decb
mov
aam
pusha
cwtl
pop
adc
or
push
fisubrs
and
dec
inc
xor
xor
lea
andl
cmp
mov
daa
mov
lods
mov
jg
mov
pusha
sbb
inc
and
sbb
mov
mov
jg
inc
cmpsl
mov
hlt
repnz
int3
inc
cmp
sub
pusha
bound
push
cltd
ficompl
fisttpl
push
test
jle
xor
adcb
inc
lret
xchg
fildl
add
jp
pop
xchg
leave
je
or
pop
jle
rcrl
in
mov
stos
hlt
cmp
sub
jne
mov
loop
xchg
push
sbb
xchg
sbb
jb
pop
ss
mov
int
iret
test
test
mov
jmp
jle
or
jle
inc
aam
pop
ret
sbb
fcoms
stc
test
adc
mov
push
pop
inc
or
inc
int3
dec
sbb
into
test
add
xchg
cmc
push
jge
popa
xor
sbb
mov
mov
lret
sub
sti
daa
je
cmp
mov
not
inc
or
das
outsb
insl
mov
dec
xchg
inc
pop
mov
test
push
pop
in
lret
mov
int
fnsave
dec
and
sub
or
mov
test
leave
cmp
push
mov
arpl
mov
aam
mov
sbb
aas
adc
js
add
movsb
mov
mov
mov
cltd
push
mov
dec
jnp
jb
test
xor
call
mov
je
stos
and
sbb
scas
cs
add
mov
scas
in
push
mov
xchg
les
iret
stos
pop
addr16
fdivrl
ret
shlb
pop
xor
dec
imul
mov
movsl
cltd
addr16
adc
popa
mov
and
and
mov
push
push
iret
movb
jo
add
xor
stos
into
pop
int
movsb
inc
dec
and
push
shll
fs
aas
cmpsb
dec
ss
outsl
ret
and
rcll
lods
dec
push
out
bnd
mov
rcrl
or
mov
ds
stos
adc
ds
add
sub
dec
stos
jb
repz
lock
mov
add
adc
inc
fs
sub
lret
pop
adc
mov
fsubrs
push
bound
ds
inc
into
aas
dec
inc
inc
imul
test
repz
rol
xchg
aam
mov
test
mov
dec
adc
push
ljmp
imul
xor
shll
xor
outsl
ret
inc
sbb
mov
and
out
sbb
int
lock
adc
ficoml
scas
int3
mov
repnz
insb
push
jl
bound
xor
mov
fs
mov
pop
push
inc
xchg
push
cmp
cmpsl
xchg
sbb
in
lret
fistps
testl
movsb
xor
pop
xor
xchg
in
push
mov
xor
in
addr16
mov
into
dec
popa
outsb
lret
lock
jbe
popf
dec
movaps
sbb
or
push
fimull
cmp
faddl
sbb
mov
fldcw
mov
std
mov
not
xchg
mov
repnz
push
arpl
or
xor
aam
adc
sub
jb
mov
xor
pop
dec
in
jne
pop
imul
lock
movsb
push
xlat
push
ret
push
mov
jg
sub
sbbl
push
fbld
jns
dec
sbb
sbb
fxch
inc
fistl
push
stos
xchg
inc
inc
je
xchg
pusha
mov
jg
rorl
lahf
mov
inc
inc
sub
js
pop
les
adc
lea
or
add
push
jp
in
stos
cmp
out
stos
test
jnp
jecxz
int
jge
cmp
rclb
xchg
xchg
and
mov
lods
data16
fldpi
sub
stc
adc
fs
repz
imul
xchg
dec
mulb
cmpsb
call
imull
xchg
shrb
pop
out
nop
ss
call
lea
mov
std
cli
repz
rorl
xchg
rcll
xor
filds
clc
dec
lret
sbb
push
cs
mov
mov
or
je
jae
mov
fcompl
inc
jmp
popf
fcom
add
icebp
pop
enter
fsts
mov
push
sbb
cmpsl
gs
rclb
sbb
addr16
xchg
js
jmp
jno
stos
push
xchg
mov
iret
out
in
jns
pop
sti
pop
xlat
dec
add
repnz
xchg
lds
adc
shl
into
xchg
cld
xor
xchg
in
adc
out
or
xchg
popf
sub
xchg
and
movsb
lret
or
popf
xor
stos
push
mov
jge
and
cmp
mov
sbb
xor
mov
push
push
jo
lds
repnz
inc
pop
dec
aas
es
ds
dec
jg
jecxz
loop
imul
mov
inc
loope
mov
dec
lcall
insb
add
adc
xor
push
mov
movsl
in
aad
fadd
push
add
popa
std
jo
fstpt
js
movl
out
mov
daa
mov
mov
fsubrl
adc
mov
mov
or
fsubr
insb
and
jo
and
shlb
add
in
xor
mov
dec
mov
or
and
arpl
add
es
icebp
pop
jae
cld
inc
hlt
aaa
fdivrs
imul
data16
mov
cmp
ja
test
pop
repnz
insb
pushf
scas
pop
ss
xchg
fnstenv
lea
xor
dec
cmpsl
mov
jbe
cmp
es
leave
inc
repnz
fninit
mov
stc
ja
jmp
pop
aas
cwtl
imul
push
stos
push
mov
xchg
dec
cmpsb
dec
push
negl
in
mov
sbb
xor
out
adc
cmp
das
dec
and
fs
sub
popa
push
pop
sbb
dec
fisttpll
mov
fimuls
adc
ljmp
jno
lret
scas
push
jge
push
jb
sbbl
pop
shll
sub
add
adc
adc
leave
cmpsl
or
pop
notb
sub
idivl
clc
rclb
mov
pop
inc
incl
or
cmc
xor
lock
mov
pusha
loope
pop
mov
xor
push
jp
data16
repz
mov
imul
or
pop
sbb
jbe
out
inc
cmpsb
es
xchg
sub
arpl
fcmovne
and
jno
repnz
cmp
ljmp
sarb
cmp
ret
ja
out
scas
inc
sub
pop
mov
loop
in
popa
inc
and
outsl
or
sbb
scas
insl
inc
push
mov
xor
andb
fcmovb
icebp
xor
movsb
loopne
dec
enter
inc
mov
daa
sbb
pop
adc
pop
jno
jl
mov
ficoms
inc
psubsb
dec
sub
xchg
xor
cmp
xlat
inc
ret
fnstsw
fiadds
icebp
out
test
fwait
pop
insb
xchg
or
sbb
xor
cmp
dec
movsb
lods
mov
dec
cmp
rcr
inc
xchg
inc
mov
xor
sub
inc
push
out
mov
and
loope
aas
inc
lret
dec
aaa
adc
lock
pop
push
cmpsb
and
das
inc
js
mov
dec
add
add
adc
out
insl
jmp
iret
push
inc
xor
pop
mov
cmp
mov
dec
adc
push
dec
or
push
daa
into
movlps
cs
xchg
cmp
push
sbb
xchg
jmp
aaa
sti
mov
mov
xor
mov
and
lret
dec
mov
and
mov
subl
sbb
loopne
repnz
data16
in
dec
cmp
push
fnstcw
fisttpll
or
cmp
in
leave
cld
push
sbb
add
cmp
cmp
sbb
ds
js
push
dec
inc
das
inc
ljmp
inc
stc
aas
add
inc
sub
cli
mov
pop
jecxz
lahf
in
xchg
sbb
bound
les
mov
cmpsl
jae
sub
adc
js
cli
add
lret
repnz
insl
popf
inc
cmpsb
cs
rcrl
inc
xrelease
mov
fstpt
fsubrs
jno
rcll
add
test
test
xlat
fisttpl
push
rclb
and
in
outsl
nop
sub
jl
ja
aaa
lret
pop
pop
lcall
fucom
nop
mov
cmp
mov
mov
ret
mov
std
mov
mov
sbb
decb
sbb
inc
insb
push
push
addr16
and
sbb
mov
xlat
jno
mov
in
adc
mov
push
jecxz
jecxz
and
and
pop
mov
test
loope
pop
sub
xchg
pop
ss
jl
aas
add
add
adc
mov
loope
stc
rcr
adc
leave
mov
sbb
outsl
outsb
ds
mov
pushf
stos
es
lahf
roll
notb
testb
sbb
lcall
push
cmc
xor
cwtl
inc
xchg
int
dec
outsl
and
xlat
xchg
mov
mov
test
xchg
fisttpll
fs
sub
cmc
fs
pop
pop
lahf
imul
fwait
lea
inc
jae
fisubrs
push
mov
push
xchg
push
mov
xlat
mov
lods
cmp
idivl
jnp
push
dec
dec
pop
mov
and
cmp
inc
add
enter
adc
dec
cmpsb
sbb
in
push
or
pop
je
adc
add
jp
push
dec
xchg
shr
mov
andb
lret
enter
lahf
mov
orl
mov
add
push
inc
ljmp
andl
xchg
inc
repz
mov
cmp
fst
stos
outsl
pop
push
lret
xlat
dec
mov
push
insl
stos
lods
xchg
pop
test
jl
xchg
shll
inc
addr16
cmpsb
jmp
pop
inc
popa
movsl
sbb
ds
pop
xchg
or
fcomp
je
sub
pushw
or
sbb
fwait
mov
inc
mov
mov
in
dec
or
movsb
xchg
pop
or
or
repz
jle
in
jae
pop
adc
mov
jmp
stos
popf
cs
movntq
push
inc
lods
add
mov
mov
cmc
and
mov
fstp
mov
jae
mov
out
out
stos
outsl
adc
mov
mov
inc
pop
stc
mov
mov
and
or
xchg
dec
add
es
jae
pop
scas
in
shl
shr
or
imul
sub
sub
scas
cmpsb
lock
cmp
mov
ss
or
icebp
and
movq
jge
xor
fistps
push
push
xor
and
mov
pop
adc
test
mov
bound
ljmp
dec
pusha
lods
push
add
imul
mov
cmp
or
xchg
xchg
cltd
in
outsb
add
push
sbb
in
adc
jg
fnsave
inc
loope
out
movsl
testl
ret
pop
adc
and
mov
outsb
adc
lret
push
into
rorb
cmp
add
sbb
fcomip
xor
cwtl
loop
jne
jmp
sbb
inc
ds
stos
add
lods
mov
push
sti
sub
out
std
cmpsl
xchg
mov
add
cltd
add
or
xor
push
dec
inc
jne
rcrl
and
pop
aam
icebp
mov
push
int
jge
aaa
popf
rolb
pusha
es
pop
fmulp
xchg
pop
testb
fiaddl
cmp
sahf
aad
xor
mov
daa
push
push
jnp
mov
cs
cmpsl
mov
cmp
test
mov
add
mov
mov
daa
dec
mov
mov
lock
pop
push
pop
inc
xchg
test
repnz
mov
inc
add
mov
ret
xor
inc
mov
outsl
inc
insb
movsl
aas
les
xchg
dec
xchg
add
popf
jle
xchg
in
pushf
insb
rol
cmpb
ret
and
lahf
push
daa
or
inc
push
jbe
push
inc
mov
push
ljmp
mov
mov
inc
sub
and
inc
jecxz
mov
in
in
and
mov
mov
sub
enter
mov
imul
cld
push
mov
sbb
fwait
push
cli
cmpsb
pop
add
mov
cwtl
rorb
insl
andb
arpl
repnz
push
mov
pop
fmull
mov
leave
ja
ret
inc
push
fstpl
jnp
incl
mov
sub
xchg
in
mov
mov
fs
daa
test
jecxz
adc
ja
sbb
xor
mov
jne
loope
add
or
stc
jp
push
cld
push
rorl
cmp
push
push
imul
out
sbb
mov
bound
in
cmc
xor
jne
in
cmp
ljmp
js
push
mov
arpl
dec
pusha
fsubr
xchg
popf
add
fisubs
xor
cmp
outsl
sub
mov
mov
clc
ja
dec
out
ret
iret
sub
jl
imul
stc
lret
jo
push
ret
fisttps
inc
mull
fildll
xor
sbb
mov
aam
out
and
scas
add
fistl
in
loop
dec
sahf
shrb
in
or
ret
insl
ret
out
fs
imul
daa
insl
bound
jnp
cmc
pop
sbb
and
pop
addr16
xchg
aaa
fsubrs
mov
ret
pop
cmp
out
stos
shll
sub
inc
lahf
sahf
es
js
frstor
je
xor
pop
clc
fsubrs
rcll
mov
iret
cmp
add
and
idivl
sbb
mov
dec
sbb
test
push
fs
das
xchg
fstps
or
inc
xor
jo
cmp
dec
jo
xchg
test
push
add
inc
inc
jg
cwtl
test
jge
ffree
scas
dec
fsubr
adc
scas
fistl
xchg
hlt
push
inc
mov
cwtl
xchg
fisttpll
mov
arpl
shrb
scas
ret
popf
mov
loopne
leave
test
dec
push
faddl
inc
mov
cmp
int3
jne
rcrl
push
scas
hlt
xor
push
aad
mov
decl
rcr
dec
fildl
mov
aam
fiaddl
mov
adc
jnp
xchg
add
shlb
add
sub
mov
inc
cmp
xchg
adc
std
or
es
lcall
scas
popf
insl
out
mov
xor
in
rol
loopne
mov
mov
jb
or
mov
rolb
leave
add
inc
lret
push
das
and
hlt
in
mov
adc
pop
mov
das
dec
mov
loope
add
pop
mov
sub
femms
cmp
imul
jns
pop
test
ds
clc
dec
mov
dec
mov
popa
in
loope
mov
sub
loop
mov
mov
sub
or
rcrb
add
xlat
stc
in
nop
mov
sysexit
sbb
push
cltd
aas
xchg
push
pushf
inc
cmpsb
push
ret
jb
mov
lods
clc
mov
xor
into
hlt
out
pop
stc
or
jae
js
nop
xchg
push
fsubs
sahf
and
mov
rclb
or
enter
sub
fimuls
stos
mov
out
bound
pusha
call
jmp
mov
inc
mov
rcl
scas
sbb
icebp
lods
hlt
mov
cli
cmp
into
xchg
push
cmc
push
jg
test
sbb
enter
lock
jecxz
xor
mov
roll
mov
test
adcl
aas
inc
pop
cltd
inc
hlt
push
aaa
sbb
cmp
cli
scas
fildll
jecxz
sbb
pop
sti
imul
sub
xchg
sub
out
jb,pn
add
jecxz
mov
dec
cltd
out
inc
pushf
jno
push
loopne
inc
out
in
mov
xor
sub
hlt
push
imul
mov
mov
xorb
xlat
or
and
jnp
int3
cwtl
in
pop
lcall
jle
sbb
jecxz
dec
or
shrb
push
jno
loope
lods
push
cli
xchg
andl
adc
test
jae
dec
sbb
push
test
aaa
popf
imul
stc
mov
sbb
or
xor
inc
fwait
xchg
fucomi
sub
jl
push
mov
xchg
push
movsb
mov
mov
xchg
ret
sbb
push
xchg
cmc
in
mov
in
nop
int3
subl
push
or
fisubrl
loopne
adc
loopne
cmp
cmp
xor
or
into
pop
mov
push
ret
jle
or
push
and
xchg
repz
lock
sti
clc
lods
sbb
arpl
bound
mov
je
pusha
inc
lods
jne
sbb
iret
in
jecxz
pusha
and
ss
mov
mov
es
lock
add
pop
iret
insl
adc
sbb
pusha
sub
rcrb
add
icebp
test
xor
dec
mov
jg
xlat
dec
hlt
xlat
pop
inc
test
sub
mov
lahf
into
inc
out
hlt
jp
arpl
rclb
in
mov
lds
inc
xchg
push
scas
mov
or
pop
loope
clc
lahf
movsb
insb
mov
cmp
out
leave
int3
repz
movsl
andl
sarl
and
xor
int3
fistpll
cmp
insl
mov
lahf
inc
mov
rclb
xor
rol
mov
mov
and
scas
sbb
xchg
jmp
mov
lahf
cs
cmp
je
mov
jo
inc
lods
inc
jmp
jp
sbb
test
xchg
cmpsb
dec
daa
fmull
cmp
movsb
das
or
xchg
sub
inc
jne
rcll
insl
ret
outsb
xchg
inc
test
fwait
sar
dec
outsl
in
push
sahf
push
xchg
push
sbb
lcall
dec
jg
sub
xor
out
and
inc
enter
nop
jo
fwait
insl
loopne
mov
rcrl
es
sti
xchg
fldl
mov
dec
into
push
in
jecxz
or
aam
mov
or
xchg
das
popa
cmpsl
shlb
or
movb
pop
xchg
sbb
mov
daa
mov
leave
pop
sti
push
pop
out
arpl
ret
cltd
sub
es
dec
fisubrs
jle
filds
scas
cmpsb
int3
rorb
rorb
adc
mov
adc
scas
gs
inc
mov
sbb
inc
aas
jp
cltd
daa
inc
rol
mov
loope
sub
popf
testb
inc
or
or
xor
xchg
xchg
daa
divb
ret
je
es
cmpsl
mov
cld
jl
jge
lahf
lahf
insl
sti
dec
and
sbb
cmc
insl
mov
insb
push
cmp
push
cmp
or
mov
aaa
lock
jle
ja
stc
mov
shlb
push
iret
shl
add
adc
and
add
jne
lret
fdivrl
mov
mov
rcll
out
clc
push
out
mov
mov
push
and
test
in
pop
sahf
inc
adc
mov
jae
sahf
or
push
xchg
jae
adc
or
scas
dec
lret
test
bound
and
aam
adc
push
xchg
push
dec
call
sbbb
hlt
sbb
xor
frstor
mov
inc
cmpsb
fcmovb
mov
inc
and
pop
popa
jle
shr
and
or
popa
pop
daa
adc
fcompl
daa
ret
push
dec
push
xchg
shl
mov
ja
leave
rorl
in
dec
imul
dec
iret
in
adcb
lahf
fs
dec
inc
inc
pop
std
call
and
aam
dec
mov
aam
popa
adc
jb
pop
jne
jecxz
push
loopne
pop
sarb
stc
inc
flds
xor
sub
adc
ljmp
cmc
jbe
cmp
je
xor
aad
mov
repz
dec
dec
adc
jbe
inc
xorb
sbbl
into
sub
dec
loop
inc
dec
pop
add
mov
sub
es
lret
ljmp
pop
test
aad
pop
mov
outsl
xchg
test
ret
pop
or
cmp
or
rorb
mov
pusha
sbb
inc
ret
push
sbb
mov
test
jne
pop
rorb
insb
jmp
jg
mov
enter
adc
push
int3
xchg
mov
nop
fidivrs
repz
outsl
xor
mov
lods
push
cmp
fbstp
pop
and
shll
push
neg
icebp
loope
in
bound
cmpsb
testb
or
aaa
xlat
mov
test
clc
es
call
nop
mov
insl
cmp
pop
and
lock
addr16
repnz
in
pop
push
dec
xor
test
pop
clc
dec
push
lea
xchg
adc
lods
mov
mov
push
mov
jl
push
inc
and
xor
push
ret
add
movsb
sti
sub
insl
jno
adc
ljmp
adc
cmpsl
jne
fwait
cmp
mov
mov
ja
lds
mov
pop
scas
sub
fsubrl
push
jns
out
sub
sbb
jge,pt
add
push
shrb
jmp
lock
push
or
jo
jbe
pusha
jno
jmp
cmp
add
aas
mov
dec
lods
sub
pop
popf
xor
push
jp
bound
adc
dec
sub
inc
decl
jge
popf
dec
cltd
lock
imul
cs
jmpw
jp
enter
ljmp
leave
jae
or
enter
test
fildl
rcrb
sbb
and
out
shll
cmc
sahf
xchg
test
loopne
cmp
rorl
mov
stc
lcall
cmp
movsb
subb
pop
xchg
arpl
pop
xorl
movsl
rorl
jns
pop
xchg
hlt
loopne
int3
or
into
js
ds
pop
sub
imul
movsl
push
jnp
mov
out
insl
outsb
pop
adc
adc
mov
jno
add
scas
push
sub
cs
push
into
push
ja
mov
cmp
ss
shll
psubsb
nop/reserved
jge
std
insl
mov
test
sub
movsb
mov
cmpsl
push
std
int
jno
jp
sub
test
xchg
jmp
clc
mov
cmp
loop
mov
pop
aaa
pop
fiaddl
sub
adc
fucomi
out
stc
cmp
pop
add
cli
stos
mov
out
sub
mov
inc
lret
clc
jne
cmpsb
leave
lds
adc
cmp
xor
scas
and
xchg
dec
cwtl
adc
mul
cmp
add
aad
inc
out
in
jb
or
arpl
adc
and
pop
popf
mov
scas
mov
iret
sub
paddusw
push
popa
jmp
rclb
sub
dec
lods
or
mov
sbb
je
fstps
scas
push
cmpsb
push
ds
out
inc
fucomip
into
push
cld
mov
push
xor
pop
repz
mov
pop
mov
dec
test
xchg
sbb
out
mov
xlat
arpl
dec
mov
mov
jecxz
clc
mulb
dec
fcoml
imul
cltd
or
mov
scas
xchg
rol
fwait
sbb
test
int3
add
sbb
mov
xor
rclb
or
cmp
outsb
jle
jp
xor
ja
daa
cmpsb
pop
mov
rcll
or
enter
and
pop
mov
mov
mov
mov
sub
cmp
addr16
cmc
gs
jl
cmpsl
xchg
xor
in
stos
mov
xor
mov
repnz
adc
mov
lock
call
xor
popf
adc
test
bound
mov
ret
mov
dec
or
mov
lret
js
call
jne
sti
int3
cmpsl
je
cmp
repnz
xor
jno
push
sahf
pop
dec
jae
jp
cld
adc
sub
movsl
nop
cli
xor
mov
mov
sahf
inc
loop
pop
roll
imul
mov
je
push
addb
fwait
add
mov
mov
nop
sahf
insl
ja
lahf
or
mov
sub
xchg
and
ja
shl
out
in
or
push
xchg
rorl
adc
std
subb
dec
xchg
mov
icebp
mov
std
insl
call
push
adc
lret
jb
pushf
enter
jp
outsb
adc
mov
add
pop
inc
mov
in
cli
mov
adc
popf
push
pop
mov
sub
mov
fcmovnu
cmp
mov
push
aaa
jg
sbb
lret
aas
sbb
stc
cli
out
or
and
mov
gs
sbb
pop
stc
cmp
dec
xchg
aad
aam
xchg
ds
lds
cwtl
leave
pop
popa
pop
jmp
cltd
test
fwait
fildl
scas
mov
ficompl
imul
aam
fimuls
loope
lds
sub
cmc
fs
mov
and
fwait
mov
lret
lea
stc
fsubr
movsb
mov
fstpt
push
nop
jo
icebp
adc
sbb
push
inc
sbb
test
xchg
rcrl
or
jb
bound
gs
pop
aad
mov
pop
mov
sub
xchg
push
movsl
or
mov
pop
movsb
gs
addb
loope
mov
cli
sbb
xor
add
xorb
lock
out
fldt
mov
jge
les
out
cld
sbb
push
mov
jb
adc
nop
repnz
cs
sub
xor
test
dec
addr16
and
sub
xchg
fisttpl
pop
push
push
and
movsl
outsl
adc
movb
mov
xor
lods
push
mov
mov
pop
idivb
cwtl
cmp
push
hlt
loop
imull
push
xlat
mov
jle
push
pop
stos
and
rcll
decb
xchg
sub
loopne
scas
sbbb
and
dec
mov
mov
push
js
ds
mov
sti
dec
cwtl
mov
dec
pop
movb
mov
rcr
pusha
out
sbb
cmp
mov
popa
mov
mov
push
or
mov
repnz
xor
lods
lea
rorb
xchg
divl
sub
sub
call
mov
fwait
xor
push
and
push
cli
fs
mov
ss
aas
mov
add
push
jecxz
repz
scas
xor
rcrb
xchg
xor
sahf
xchg
xorb
mov
stos
scas
shrb
imul
ds
imul
mov
push
sar
sub
adc
cltd
adc
mov
jne
jp
inc
sbb
ja
das
shrl
fcmovb
fmull
shrl
test
in
or
call
sub
xchg
dec
dec
fs
and
mov
lds
mov
sahf
movsl
lcall
stos
dec
push
outsb
and
outsb
push
jae
or
mov
cmc
sub
xchg
gs
jmp
xor
bound
push
and
mov
outsl
jmp
pop
arpl
or
pop
dec
inc
pop
pop
sarl
mov
das
aam
ds
in
pop
lock
test
dec
roll
cmp
jg
and
imul
mov
stc
outsb
orl
inc
or
in
sbb
pop
pop
popf
xlat
push
pop
iret
mov
adc
or
push
cltd
aaa
js
fwait
pop
mov
cli
inc
adc
mov
lahf
or
std
add
movups
add
fldcw
in
aas
pushf
mov
adc
cltd
xor
and
xchg
xchg
rclb
je
inc
mov
xchg
lds
cmp
or
insb
shlb
inc
cmp
cs
cwtl
cltd
int3
or
sbb
adcl
fs
add
mov
inc
jmp
xchg
subl
pop
xchg
imul
push
cwtl
cmpsl
shll
decb
cmpsb
flds
and
movsb
loop
jne
mov
dec
mov
push
xor
dec
add
xchg
ret
movsb
cmp
ficomps
xchg
pop
and
push
pusha
leave
sbb
pop
in
jb
pop
cld
andl
cmpsl
out
and
mov
xchg
and
xchg
mov
xchg
mov
lea
arpl
test
clc
rol
xchg
sbb
in
mov
mov
jb
sub
add
mov
gs
mov
hlt
adcl
xor
pop
mov
pop
andl
std
je
jge
leave
lahf
gs
out
sub
fld
mul
mov
and
fimuls
test
xor
xchg
int3
fsin
xor
push
aaa
xor
add
loop
sahf
or
jecxz
dec
lret
int
fdivrl
test
leave
cmpsb
imul
xchg
int3
frstor
xor
fwait
jbe
cmp
in
mov
andl
popa
pop
aas
movsb
cmc
xchg
in
movsb
sub
or
xchg
push
pushf
cmp
push
sbb
ret
adc
cmp
mov
stc
out
cli
movsb
aaa
pop
cmp
mov
cld
inc
push
pusha
mov
fcompl
mov
cmp
in
lods
in
mov
mov
sbb
inc
mov
and
notl
sub
mov
imul
arpl
xor
fisttpll
pop
and
stos
rorl
jecxz
lret
pusha
mov
shlb
inc
loopne
imul
cmp
or
xchg
jle
mull
push
cmpsl
ret
push
xor
or
cmp
inc
dec
inc
shlb
es
shll
cmp
and
jp
dec
and
sub
inc
or
pop
scas
push
xchg
into
das
pop
fisubl
jmp
push
dec
std
fildl
or
into
movsb
movsl
pusha
arpl
popf
test
iret
cs
jnp
pushf
cmp
pop
inc
xor
mov
shll
push
cs
jg
shll
fwait
test
mov
mov
push
jle
dec
push
inc
cld
xor
pop
jg
pop
aas
lahf
mov
dec
push
xchg
cmp
xor
clc
movsl
aad
div
dec
repz
cld
cmp
popf
fs
push
mov
inc
pop
sub
xchg
inc
test
div
xor
loope
mov
mov
aam
cmp
lea
and
mov
hlt
dec
add
ja
ret
repnz
sbb
outsb
aam
mov
cmpsl
dec
fcmovbe
cmpsb
sarb
xchg
ljmp
repz
sbbl
daa
in
cltd
shlb
popf
xor
hlt
mov
ret
cmpsl
xor
add
cld
aaa
mov
jnp
xchg
mov
rcl
xchg
xchg
sub
cmp
adc
xor
arpl
pop
and
and
mov
cmp
sub
scas
jecxz
jb
ss
mov
cmp
data16
or
cmp
push
clc
jae
inc
sbb
sbb
push
pop
cli
and
add
cmp
and
jg
dec
pusha
int3
add
xchg
push
dec
mov
pop
sub
jnp
pop
ror
lock
jp
mov
movsl
xchg
push
movsb
cmp
adc
dec
jl
adc
mov
add
push
rclb
cmp
xchg
scas
loop
add
insb
mov
or
mov
into
jne
pop
sarb
fnsave
data16
scas
jne
and
lahf
mov
cmp
cmpsb
loop
scas
jnp
ds
aad
leave
cwtl
shll
pop
pop
inc
lods
jmp
and
jecxz
dec
mov
popf
dec
pop
test
ja
dec
fpatan
lahf
push
dec
xchg
stc
add
pop
sub
mov
push
cmp
mov
mov
dec
pop
sbb
das
adc
cli
iret
clc
stc
mov
or
rorl
jp
ret
push
sbb
repz
in
xchg
daa
loop,pn
adc
jb
xchg
push
idiv
jecxz
fcoml
cli
or
ljmp
pop
insb
scas
add
pop
fnstcw
insl
jmp
rcrb
mov
cmpsl
sbb
xlat
gs
mov
cmc
out
cmp
jns
pop
or
mov
sti
push
test
cmp
addr16
xchg
sub
mov
lods
test
cmpsb
or
std
pop
sbb
mov
and
std
and
cmpsb
rcrb
and
or
shll
push
sub
lret
pop
shll
push
or
inc
cmpsl
pop
fdivr
mov
sarb
imul
imul
test
dec
cmpsb
dec
scas
jle
lcall
test
xchg
nop
aaa
adc
push
or
imul
aas
jge
scas
mov
lcall
pop
cmp
adc
sti
dec
mov
mov
dec
push
cmp
ss
movsl
adc
push
mov
in
testb
xor
and
jno
mov
ss
ss
lret
test
push
inc
sub
jmp
ret
jl
add
insl
lret
ret
xchg
movsl
pop
sub
das
and
and
divb
xchg
movsl
jns
inc
dec
imul
iret
stos
rcll
pushf
pop
cld
es
mov
repz
out
add
jae
pop
and
cmpsl
stos
and
and
js
jle
pop
pop
inc
mov
push
mov
mov
dec
pop
mov
push
jae
push
sbb
inc
sbb
mov
std
sub
pop
or
popl
loope
adcl
cmp
fcoml
into
inc
repz
clc
and
pop
aad
and
xor
fmuls
mul
cmp
bnd
ljmp
xchg
mov
sub
pop
adcb
jae
outsb
call
in
loop
arpl
add
ljmp
pop
mov
push
add
ljmp
or
add
cmpsb
cltd
cmp
inc
lret
out
ficomps
into
sbb
stos
lahf
mov
sarb
sub
orl
addr16
inc
fsubp
inc
dec
iret
push
jnp
pop
in
jns
sarl
fxch
jg
and
mov
mov
adc
je
and
adc
mov
add
lret
dec
in
sub
lds
ds
cld
fs
push
cli
and
mov
loop
loope
cmc
xchg
les
jbe
cwtl
mov
or
movaps
shll
xor
ja
ds
dec
add
add
mov
pop
fwait
push
adc
add
push
out
cld
add
mov
data16
sbb
fdivl
jns
push
mov
loope
adc
sbb
pop
cld
and
not
inc
mov
push
cmpl
in
ret
xor
movsb
test
cmp
stos
les
insb
lcall
jmp
mov
or
js
ficomps
rcll
js
icebp
cmpsb
xor
jge
pop
cmp
mov
shrb
xchg
mov
arpl
push
push
inc
bound
add
movntq
add
cmp
and
divb
or
or
pushf
or
cmp
aam
fisttpl
bound
stos
add
fucomip
inc
aas
rorl
lods
inc
fcoml
lock
idiv
fistps
sbbl
sarb
ret
ret
jo
mov
adc
dec
lock
xchg
push
cmp
or
incl
iret
lds
sbbb
vaddss
push
into
xchg
popa
mov
into
mov
sahf
loope
xchg
jae
pop
hlt
dec
imul
lahf
push
faddp
push
pop
push
les
cmpsl
scas
ss
or
out
lods
and
inc
fcmovnb
cmp
test
mov
pop
mov
jle
shll
adc
xor
pop
in
cmc
iret
fdiv
push
dec
cmp
ret
andl
outsl
add
out
push
lods
add
dec
pushf
ds
pop
mov
cs
jecxz
enter
lods
xor
jge
jo
in
dec
adc
out
and
and
fwait
xor
repnz
add
sbb
cmp
fsubrl
mov
repz
pusha
test
xlat
rcrb
ds
lret
and
shr
stos
shlb
pop
jg
push
add
insb
and
in
pop
mov
xor
jno
jnp
pop
push
ss
pop
shll
imul
lret
jbe
cmpsb
cmp
mov
or
rcl
mov
push
and
cld
jne
mov
lock
jl
loop
bound
repz
sahf
inc
popf
sub
jns
push
addr16
mov
push
or
lret
fadds
aam
in
or
out
scas
dec
add
fbld
sub
shlb
jp
pop
adc
xchg
add
mov
xchg
gs
int
mov
std
in
es
pop
mov
push
andb
xchg
cmpsl
push
pop
lret
icebp
movsb
mov
adc
and
popa
mov
adc
mov
shll
xchg
sub
xor
andl
dec
sub
out
aaa
xor
push
mov
and
push
lret
add
jecxz
dec
aaa
pusha
push
cmc
aaa
jb
sbb
scas
mov
jae
insl
test
clc
cli
nop
sub
sbb
xchg
fwait
sahf
jecxz
fs
inc
and
jmp
push
sub
stc
gs
stc
out
fcmovu
fwait
cmp
xchg
test
test
std
sbb
data16
scas
inc
mov
push
inc
add
ds
outsl
das
shlb
and
mov
imul
test
ja
clc
xor
addr16
out
ret
cmp
nop
or
pop
lds
pop
into
sub
mull
in
dec
in
xor
out
cmp
mov
cltd
adc
jecxz
std
jne
popa
jnp
rclb
sbb
or
lret
jbe
mov
mov
rclb
mov
and
and
aas
or
gs
or
xor
fisubs
je
rcll
imul
fdivr
adc
push
mov
sar
int
mov
push
push
lahf
xchg
push
mov
test
loopne
sub
mov
mov
xchg
leave
scas
mov
xor
mov
push
inc
xor
fdivs
call
jecxz
das
pop
jg
and
pop
sub
adc
cmp
out
movsb
popa
rolb
push
jo
divl
gs
pushf
mov
mov
jb
mov
pushf
shll
cmpsb
mov
popa
fwait
inc
daa
xor
mov
sarl
sbb
push
lea
inc
adc
fwait
push
movsb
out
int
scas
adc
leave
dec
test
fwait
xor
dec
lahf
out
enter
or
mov
xchg
jae
je
pop
and
lds
shlb
pop
and
imul
rcl
cmpsl
pop
or
lea
mov
dec
pop
adc
das
shr
fstpt
mov
sbb
xor
loopne
fsubrl
push
sti
test
xchg
and
lods
xchg
jne
test
xchg
cmc
mov
add
insl
lds
lcall
push
and
push
in
scas
push
addr16
out
test
arpl
out
fwait
mov
pop
aas
aam
sub
test
rorl
mov
xchg
mov
in
jno
mov
xchg
inc
jp
jnp
repnz
cwtl
iret
mov
mov
test
loope
and
pop
clc
or
dec
mov
xor
pop
ljmp
lcall
mov
push
adcl
lahf
les
repnz
mov
stos
fmulp
cmp
cmp
push
cld
fildl
aam
fsubrs
imul
adc
pushf
pop
lcall
aad
jle
add
loop
and
sahf
xor
bound
or
jg
mov
inc
outsb
mov
pop
and
push
cmc
sub
push
out
cs
jmp
loope
mov
pop
out
cmp
scas
andl
call
push
jbe
adc
inc
xor
push
sub
sbb
xchg
cmc
scas
push
lods
in
loope
push
repz
mov
mov
repnz
cmp
pop
mov
cwtl
in
mov
sub
pop
fcomps
adc
cli
cmp
fistl
and
arpl
dec
xorb
and
in
dec
mov
xchg
lock
mov
lds
shr
cwtl
mov
sbb
shr
sahf
iret
loope
or
ret
jnp
inc
into
xor
addr16
inc
cltd
push
push
sub
and
push
stc
fxch
pop
call
fisubl
into
arpl
movsl
icebp
es
sarl
jmp
add
cltd
pxor
mov
mov
outsb
into
adc
fs
call
test
int3
mov
enter
dec
xor
jns
mov
add
jb
push
sbb
cmp
aad
mov
es
cmp
int3
int3
test
lods
mov
or
xor
fsubp
cmp
sub
pushf
outsb
and
out
mov
and
push
cmp
les
mov
mov
pusha
fs
and
repz
inc
negb
or
pop
dec
push
pop
or
jl
cwtl
mov
enter
add
jg
maxps
incl
lret
cmp
mov
inc
ret
out
jne
pop
leave
pop
mov
push
push
lea
mov
pop
lahf
ret
in
mov
xor
sgdtl
inc
bound
andb
mov
jecxz
pop
inc
sti
xchg
cmpsl
iret
jae
push
fbld
orl
movsb
push
icebp
adc
sub
push
jne
scas
insl
scas
xchg
mov
sti
andl
jp
lods
outsl
lret
outsl
cmpsl
mov
and
cmp
adc
sub
lds
rcr
add
in
ja
adc
adc
push
addb
sub
lret
push
daa
xchg
in
and
mov
add
jle
in
stos
cmp
arpl
jnp
movsb
ja
es
in
pop
xchg
and
mov
jecxz
dec
push
fimull
dec
inc
negb
cmp
xlat
fs
mov
leave
out
scas
cltd
and
mov
pop
testb
insb
adc
or
vpmovusqw
repnz
pusha
sub
negb
je
sub
in
inc
jo
pusha
add
xchg
mov
aad
out
sub
repnz
fsub
sub
lcall
fsubs
imul
add
xor
cli
test
aaa
pop
sbb
filds
fcoml
sub
addr16
sub
aam
fldt
in
cmp
test
xchg
dec
rcrb
push
cmp
pop
sub
jl
sbb
cmp
jp
pushf
mov
xlat
sub
insl
mov
or
push
nop
push
and
xor
repnz
out
frstor
out
push
jmp
and
dec
hlt
mov
dec
pop
scas
xor
lods
pushw
out
mov
in
jb
test
xchg
pop
andb
in
das
push
dec
jp
mov
int
jl
shll
in
lods
lahf
sub
popa
add
and
pop
push
xor
push
dec
jno
out
lret
or
sbb
aam
and
js
inc
mov
adc
shll
rcll
ret
adc
dec
mov
dec
mov
lret
xchg
les
push
je
dec
add
aam
inc
fsubrs
cmp
icebp
cmp
mov
jmp
or
mov
mov
adc
mov
mov
inc
stc
hlt
inc
lods
neg
out
jbe
dec
out
sti
nop
sub
fistps
and
xchg
push
cmp
cli
lret
and
pop
inc
sub
xchg
sbb
xchg
cmc
sar
lods
lret
jge
int3
pop
dec
dec
in
fxch
loopne
scas
cwtl
push
inc
jns
in
icebp
or
cmp
push
adc
inc
imul
xchg
jg
sarb
clc
and
add
in
fwait
fistpll
insb
sti
add
add
adc
filds
pushf
jb
out
mov
aaa
xor
mov
or
dec
xchg
gs
inc
adc
cmp
fcmovne
add
adc
mov
js
mov
sub
push
inc
cld
mov
sub
jge
sub
pop
imul
adc
clc
inc
sti
popf
fbstp
shlb
test
mov
add
imul
push
pop
xchg
aaa
je
fs
xchg
roll
in
aas
imull
sbb
jmp
in
sahf
ss
mov
mov
sti
ret
in
cmp
xor
cmp
dec
jge
fmul
jno
jno,pn
sub
sbb
in
sahf
jbe
and
xor
lds
and
ljmp
loop
add
mov
dec
push
icebp
dec
ljmp
inc
add
mov
inc
repz
out
fisttpll
movsb
insb
aaa
in
sub
sti
add
test
daa
cmpsb
pop
xchg
popa
jns
test
cltd
dec
test
sahf
add
jbe
das
jg
cmp
inc
mov
in
mov
in
jp
pop
pushf
mov
inc
cmpsl
leave
xor
mov
fwait
stos
clc
or
dec
and
test
sbb
scas
leave
out
shrl
mov
inc
lcall
clc
testb
scas
jns
push
andl
cmc
add
pop
add
jnp
xchg
sub
icebp
lods
hlt
pop
jo
int3
cmp
setl
filds
ja
es
dec
adc
mov
outsl
xor
jmp
rcrb
mov
jg
lret
xor
and
jne
fsts
cmp
xchg
xchg
int
ret
jle
xchg
ret
xchg
pop
dec
sbb
and
insl
sbb
mov
int3
pop
cmpsl
pop
and
fdivrs
adc
outsl
bound
inc
sbb
sbb
iret
in
inc
shr
outsl
or
adc
ss
and
jg
dec
adc
add
iret
fldcw
jle
in
mov
fdivs
or
jno
loop
orl
cli
jnp
xor
out
mov
xchg
lock
arpl
xorb
lds
iret
xlat
jne
inc
mov
sbb
push
push
mov
movsb
loop
mov
add
mov
iret
xchg
repz
jl
bound
jl
push
ds
and
cmpl
jb
aam
ret
pop
outsl
jecxz
mov
in
lahf
rclb
xor
ss
mov
and
xor
mov
sub
sub
out
addr16
fisttpll
out
mov
fdivl
insb
and
xor
push
sti
push
sbb
jecxz,pn
divl
aaa
pop
loop
jmp
push
or
sbb
mov
pushf
fstpt
test
or
stos
and
xchg
dec
int3
out
adc
xor
mov
or
and
mov
mov
insl
sbb
jmp
xor
inc
push
fdivs
ror
jns
pop
loope
inc
push
add
sarl
jbe
outsl
push
call
jbe
dec
outsl
dec
xor
stos
hlt
pop
jno
std
scas
mov
mov
flds
andb
insb
or
and
or
loopne
mov
insl
imul
fcompl
rorb
std
mov
lahf
cmc
and
mov
push
cli
sub
jb
outsl
sub
mov
imull
cmp
leave
lret
pushf
dec
addl
push
sbb
add
add
hlt
cmp
mov
int
negb
pop
mov
dec
sub
test
cwtl
jmp
cs
and
sub
insb
xchg
xor
or
push
push
inc
pop
adc
and
stc
pop
xchg
cmc
call
cwtl
adc
and
jne
test
jmp
sub
nop
dec
jns
sub
rcl
call
test
sti
stos
enter
out
lea
xor
out
aas
add
sub
ds
mov
ljmp
or
sbb
xchg
pushf
pop
test
aad
stos
sub
bts
outsb
loope
dec
jecxz
ds
push
cmp
aas
rorb
subb
in
lock
xor
mov
mov
testl
mov
inc
push
js
mov
mov
sub
pop
jb
imul
add
insl
mov
lea
mov
xchg
fs
test
jbe
scas
adc
sbbb
imul
daa
mov
xchg
inc
sub
fwait
test
daa
adc
add
pop
xor
cltd
mov
stc
xchg
add
mov
loopne
jns
lret
sub
push
mov
in
lock
dec
arpl
mov
sub
lea
addr16
xchg
cs
imul
sbb
mov
aas
mov
imul
movsb
daa
sbb
xor
mov
nop
js
loope
clc
ret
sbb
inc
jb
aad
dec
mov
mov
dec
js
mov
and
xchg
jmp
lret
stc
mov
aas
fidivl
pushf
icebp
jne
out
lods
dec
icebp
sbb
xchg
xchg
inc
pop
or
stc
mov
sub
mov
ret
adc
adc
lea
lds
out
xchg
enter
outsb
cmpsb
in
jnp
invd
push
adc
inc
or
push
jp
pop
js
xchg
pushf
sbb
jle
sbb
jnp
or
outsb
mov
stc
std
inc
inc
or
jmp
jp
orb
insb
hlt
inc
add
and
and
cli
imul
insb
pop
mov
xchg
mov
popf
mov
pushf
out
in
inc
mov
xor
inc
jb
or
mov
fnstcw
outsl
enter
lods
std
pop
out
arpl
call
ret
inc
xor
aad
mov
cli
orl
xor
mov
cmp
sub
fs
repz
arpl
mov
stos
testl
xchg
or
push
loopne
ret
test
mov
xor
call
xor
aas
fninit
or
adc
lea
ds
test
stos
jb
lret
jbe
adc
cmpsb
xor
fsts
cltd
fmul
cli
push
aad
stc
aas
push
inc
lds
lds
insl
cmc
aam
icebp
mov
mov
sbb
out
add
or
jb
or
mov
xor
push
mov
pop
pusha
out
push
fildll
mov
sbb
cmp
mov
mov
mov
mov
cmc
lcall
xor
test
or
and
mov
out
fs
mov
and
sub
add
mov
inc
or
pop
jo
pop
sti
push
leave
pop
cld
dec
pop
in
fiadds
dec
adc
xor
pop
add
rcll
jae
cld
cmc
sub
inc
cmpsl
cs
call
out
mov
cmp
and
aaa
popa
daa
xchg
dec
or
mov
xor
push
cli
stos
mov
jae
push
push
mov
test
push
xchg
cmpsl
cmp
mov
jg
jb
lds
test
fsubrl
xor
ds
test
rcl
out
call
movnti
std
loopne
add
fidivl
outsb
mov
sub
mov
pushf
and
loopne
push
lcall
sbb
sub
insb
xor
pusha
xchg
sub
and
in
add
outsb
push
pop
insl
adc
push
roll
insb
ljmp
inc
pusha
mov
psubsb
fiaddl
rclb
dec
loopne
iret
popf
cwtl
fimull
out
cli
cmpsb
insb
ss
jmp
or
loopne
xor
pushf
cmp
js
cmp
jnp
cmp
jp
mov
testb
cmp
shlb
pop
movsb
adc
xchg
pop
sti
push
out
mov
cltd
lock
jns
xchg
xchg
adc
mov
out
imul
jg
repnz
clc
mov
jge
push
sub
xor
mov
in
js
js
mov
mov
mov
nop
inc
dec
mov
outsb
jge
jno
das
jo
xchg
adc
push
fsts
xchg
mulb
cmpsb
aas
call
pop
loopne
mov
out
mov
pop
ss
pop
cmp
movsb
test
dec
push
cmpb
aad
sahf
sbb
popa
call
fs
jb
ret
sub
or
cwtl
shrb
addr16
add
xchg
jecxz
mov
repnz
daa
test
adc
outsb
imul
gs
loop
fstps
fildl
jo
icebp
xor
pop
push
fcomip
ret
jbe
jnp
sub
adc
cmp
push
outsb
pushl
or
imul
loop
or
pop
xlat
leave
mov
adc
xor
mov
loop
ror
xor
xchg
sub
push
mov
push
in
ljmp
nop
nop
addr16
add
repnz
out
out
std
push
add
jl
push
insb
jecxz
xchg
adcl
add
mov
xor
pop
sbb
cli
test
flds
lock
daa
jo
lret
es
test
sub
and
shll
jmp
xchg
adc
sbb
jmp
adc
mov
and
mov
roll
push
jns
pop
out
jns
jg
adc
not
shll
add
mov
sbb
sbb
push
dec
aaa
call
sub
fwait
pop
push
fs
cmp
inc
push
lds
in
cmp
jmp
je
jl
pop
cmpsb
bound
mov
mov
jp
mov
sahf
ret
mov
les
sti
scas
je
mov
sbb
adc
in
rolb
les
jle
je
aad
sbb
xchg
pop
pop
rorl
cli
sbbb
test
add
ret
push
test
fs
fisubl
mov
mov
dec
repnz
ja
imul
enter
inc
fstpt
sub
and
les
popf
in
insl
push
dec
pop
mov
dec
sti
dec
sbb
jae
mov
clc
rcrb
pop
repz
add
push
clc
popa
lcall
adc
js
sbb
jmp
xchg
push
dec
xchg
ret
dec
sbb
es
out
lahf
sbb
nop
jb
and
int
test
popf
outsb
push
rcrl
shr
loop
xlat
mov
cmp
jp
ljmp
pop
mov
mov
adc
mov
imul
pop
popf
fstps
and
sub
push
sbb
push
xchg
lret
cld
mov
ret
and
arpl
inc
pop
xchg
in
stos
shll
push
push
sbb
adc
lahf
loop
in
lret
insl
sub
leave
sbb
stos
ffreep
xlat
aaa
and
xchg
fsubs
outsl
sbb
test
fcoms
fstpl
and
or
pop
fistpl
xchg
imul
push
cli
xlat
adc
push
pop
pop
stc
mov
mov
pop
rcrl
xchg
adc
dec
movsb
mov
aaa
andl
lcall
xchg
inc
addr16
xchg
sbb
mov
fs
das
mov
test
or
mov
mov
dec
inc
sti
mov
cmp
adc
mov
mov
sub
jge
ja
jg
mov
push
mov
and
pusha
mov
out
mov
xchg
add
loope
or
xchg
xchg
and
jle
sbb
jo
out
fildll
lods
iret
fcmove
pusha
std
into
ja
xor
push
xor
sbb
rcrl
inc
movsl
cmc
xchg
rolb
repz
popa
lock
popf
mov
bound
xor
imul
loop
add
xor
pop
negl
xchg
cmp
sub
cs
and
mov
mov
or
in
adcl
jae
pop
mov
out
or
dec
mov
lret
insb
stos
cmp
mov
push
je
jp
mov
jne
pop
or
or
jmp
psubb
shrl
mov
mov
cltd
arpl
in
das
mov
inc
mull
lcall
add
insl
jg
shll
outsb
adc
movsb
dec
lods
fst
inc
adc
inc
repnz
nop
testl
lods
pop
mov
cmp
mov
mov
jo
outsl
mov
ret
scas
xchg
xor
and
movsl
repnz
test
out
push
mov
cmp
sbb
gs
xchg
push
jle
pop
ss
add
imul
push
pop
cwtl
push
push
iret
and
inc
dec
hlt
repz
adcl
loop
addr16
bound
and
ss
mov
push
mov
aad
daa
sub
xlat
add
push
adc
sbb
fwait
cmp
loopne
into
xor
xor
adc
push
add
xor
mov
testb
and
cmc
dec
mov
mov
movb
les
std
xchg
add
std
or
dec
inc
fabs
sbb
sti
adc
mov
fnstcw
jb
inc
das
pop
into
sub
sbb
dec
xor
jae
cmc
mov
loopne
push
pop
pop
xchg
inc
and
jns
int
test
movsb
cmp
ljmp
mov
mov
push
jno
jg,pt
gs
out
mov
mov
pop
iret
sub
test
inc
int3
xor
lret
daa
jns
decb
sbb
xchg
test
mov
inc
mov
pop
and
cmp
int3
mov
xlat
sar
ja
ljmp
ficompl
daa
mov
adc
ljmp
fs
popa
into
jmp
and
inc
jbe
adc
xor
pop
or
dec
jl
out
jl
pop
cwtl
imul
fstl
int
ds
jmp
jns
xchg
pop
sahf
adcl
out
in
test
loope
dec
stos
jo
adc
mov
xchg
xchg
icebp
pusha
int
mov
enter
inc
xchg
or
xor
out
and
stos
dec
fldenv
nop
jle
mov
subl
fistps
aaa
ret
inc
push
popf
ret
in
mov
sarl
and
xchg
popf
sahf
loope
or
test
inc
sahf
push
pushf
push
aaa
adc
push
or
mov
xchg
jle
fnstenv
mov
mulb
push
out
xchg
icebp
in
test
stos
mov
movsl
and
and
sbb
lock
dec
movsb
adc
lock
imul
leave
clc
fldenv
test
loope
or
push
adc
leave
out
mov
push
inc
mov
out
out
push
sbb
adc
cmp
lcall
stos
insb
leave
out
mov
push
addr16
popf
fdivl
mov
pop
icebp
mov
insl
mov
clc
mov
sub
jl
inc
adc
js
pop
lahf
mov
nop
mov
adc
out
lahf
cld
shll
or
xor
rorb
inc
push
out
pop
sub
mov
pop
jmp
sbb
and
xor
cwtl
mov
shlb
dec
inc
or
and
mov
push
dec
dec
sahf
cmp
pop
mov
sbb
xchg
pop
shrb
jae
cmp
jl
ja
pop
aas
je
andw
cltd
jge
push
cwtl
cmp
sub
dec
fldt
in
sbb
ret
test
adc
jg
testl
out
mov
inc
arpl
push
loope
mov
aas
fs
cmc
mov
dec
adc
xor
fsts
ja
xchg
cld
adc
xchg
insb
fwait
test
mov
xchg
inc
xlat
pop
je
and
sti
int
or
mov
push
jbe
sub
mov
mov
xchg
push
mov
jmp
insb
mov
mov
xchg
and
pop
add
sbb
scas
sti
adc
xchg
shll
aas
je
xchg
jg
popf
nop
test
and
push
pop
roll
fnstcw
je
in
mov
rolb
aas
xchg
hlt
dec
divb
mov
or
icebp
rolb
stc
dec
ret
xchg
jecxz
push
fs
and
sub
mov
fsubrp
sbb
aam
jbe
inc
sbb
aam
mov
std
cld
sub
mov
test
mov
call
int3
fs
lret
mov
cmp
outsb
int
push
int3
sub
lret
pop
jle
out
out
in
loope
sti
cmp
loopne
data16
es
add
cli
lret
cli
fs
mov
pop
mov
lret
jg
add
adc
in
mov
loope,pt
icebp
clc
add
stos
lea
sbb
dec
xor
popa
fists
push
and
sub
loop
or
fwait
mov
sub
mov
repnz
sbb
sbb
fdivs
adc
outsl
lret
ja
in
pop
clc
sahf
test
lea
mov
mov
int3
dec
pmaxub
out
hlt
test
es
pop
addb
xchg
scas
add
dec
incl
sbb
inc
push
lock
push
sub
std
movsb
mov
dec
jmp
pop
lds
daa
mov
jl
test
cmc
adc
jnp
pop
mov
loop
dec
sbb
xchg
push
test
mov
das
into
mov
xchg
mov
mov
notb
xor
cld
mov
test
shlb
jne
push
pop
out
mov
mov
adc
adc
xchg
mov
pop
add
mov
pop
outsl
addr16
gs
ds
ja
outsl
sub
nop
in
sbb
ret
out
cmpsb
mov
lret
and
pop
jbe
rcr
push
pop
mov
hlt
fisubrs
dec
sbb
enter
mov
div
dec
cld
outsl
dec
push
ljmp
inc
add
adc
out
mov
outsb
pop
out
pushf
aad
out
test
push
repz
jae
loope
addl
push
pop
loop
lds
outsl
sbb
loopne
scas
or
and
pop
jmp
sub
faddl
mov
mov
or
repz
mov
pop
inc
test
inc
jno
popf
xchg
mov
leave
mov
inc
mov
js
jecxz
cmp
inc
xor
mov
sub
inc
sbb
mov
out
sbb
cli
fmull
in
jge
int3
mov
imul
into
pop
dec
dec
xchg
insb
data16
mov
sbbl
sub
sbb
icebp
fistpll
data16
mov
aad
xor
sbb
and
mov
lret
pushf
sub
inc
jne
adc
andb
lea
ss
cmp
out
dec
or
push
rcr
das
arpl
jl
into
pusha
mov
ret
aam
and
cmpb
cmpsw
shlb
fwait
push
xchg
les
das
or
dec
lret
imul
sbb
adc
repz
fs
inc
ficomps
cmpsb
xor
dec
mov
mov
pop
icebp
dec
and
and
sarl
rclb
xchg
cmc
int
cmp
cmpl
imul
adc
outsb
movsl
lret
push
sub
in
orb
cld
xchg
addb
pop
mov
cwtl
or
fistpl
or
insl
lret
sbb
mov
lahf
push
aam
push
mull
jno
adc
mov
xlat
xchg
or
orb
lods
fdivr
fstpt
jb
testl
mov
cwtl
jmp
in
and
jns
mov
inc
mov
mov
xor
adc
loopne
lods
stos
fiaddl
nop
inc
data16
pop
pop
mov
sbb
ja,pt
xchg
push
loop
xchg
movsl
fs
push
pop
insb
dec
dec
roll
push
mov
and
bound
pop
and
jae
sti
pop
mov
jnp
lret
dec
mov
out
push
jmp
pop
or
nop
andl
add
lds
mov
aad
jecxz
out
in
add
pop
inc
mov
cmp
stos
lods
dec
shr
test
lods
lock
push
inc
and
repz
pusha
cmc
lret
shlb
xor
dec
insb
sahf
and
stos
mov
dec
mov
push
addb
sbb
cmp
andl
add
ret
lods
test
loopne
mov
cmpl
add
popa
in
or
inc
jp
and
pop
dec
sbb
std
add
dec
mov
js
adc
pop
cmp
test
mov
mov
xor
dec
lock
mov
mov
push
gs
adc
and
loopne
popa
xchg
sub
pop
imul
sub
mov
xchg
mov
shrl
out
mov
add
test
jge,pn
mov
in
push
jle
or
enter
gs
test
pop
xchg
xor
pop
inc
sbb
and
dec
imul
imul
ror
movsb
inc
push
mov
dec
mov
jle
xchg
fisttpl
ret
lds
fstpl
movsb
mov
movsl
push
idivb
mov
fwait
icebp
mov
cltd
add
loop
mov
inc
int3
push
ficomps
inc
jecxz
cs
leave
sub
leave
das
movsl
dec
icebp
adc
xchg
mov
jg
lcall
jae
out
xlat
hlt
divl
mov
rorb
adc
das
jg
mov
call
in
sbb
leave
jg
ds
nop
mov
daa
cwtd
es
movsl
pushf
in
xlat
rcrl
and
inc
mov
dec
cmpb
xchg
pushf
inc
in
sub
mov
mov
cmc
sbb
add
imul
or
or
push
popa
add
sbb
loopne
jnp
ret
jne
ja
int3
push
sbb
scas
insl
cmp
inc
faddl
pushf
mov
lea
xchg
mov
insb
dec
mov
loope
xlat
mov
mov
jns
jle
lock
add
roll
pop
jb
mulb
stos
js
popa
ds
mov
aad
nop
jecxz
imul
test
shlb
dec
es
outsl
lea
fstl
xor
mov
push
iret
ja
pop
and
aaa
cmpsl
repz
pop
push
cmpsb
pop
ss
mov
sub
pushf
cs
pop
aaa
outsb
sbb
imul
dec
xchg
nop
stos
inc
mov
rorb
je
fisubrs
into
push
sarb
push
mov
mov
mov
inc
hlt
mov
mov
adc
adc
lods
daa
pop
outsl
sbb
xor
dec
jp
into
aad
imul
xorl
sbb
adc
aaa
in
xchg
dec
jge
lret
adc
pusha
mov
and
xchg
xchg
jp
outsl
jl
mov
add
push
sti
ja
xchg
arpl
xchg
push
push
outsb
xor
xchg
add
out
cmpsl
addl
outsb
cmp
jne
enter
sub
shlb
jno
iret
inc
loopne
push
jae
scas
js
push
xor
dec
das
or
adc
pop
dec
adc
outsl
js
push
sub
mov
sbb
je
sbb
sub
out
and
pop
ret
pop
arpl
xlat
xchg
jle
test
pop
jge
cltd
fdivs
push
daa
push
popf
movsb
je
xchg
jmp
mov
ljmp
jb
cmpsb
in
data16
and
test
sbb
inc
cwtl
clc
pop
aad
je
ljmp
or
fidivs
mov
jb
mov
fists
andl
sub
insb
rcl
lds
xchg
mov
cmp
sbb
xor
pop
test
icebp
test
jle
lds
jmp
scas
aad
xlat
inc
test
and
sbb
pop
push
or
lock
and
ja
popa
ret
cmp
cmpsl
cmpsl
inc
mov
pop
push
jbe
mov
dec
mov
fstpl
xchg
jno
or
inc
ja
mov
mov
shrl
fwait
jg
fisttpll
or
push
sub
pop
jnp
mov
cmp
dec
cmc
push
push
pop
out
sub
sbb
cmp
gs
cmpsl
jl
cli
lds
leave
jp
je,pn
dec
cmp
sub
dec
xor
mov
in
loop
cwtl
rolb
xor
adc
adc
daa
inc
adc
test
or
mov
cltd
dec
out
lcall
in
fldt
dec
cmpsl
mov
sbb
in
mov
enter
lret
mov
lods
mov
add
fildl
mov
push
push
sbb
pop
cmpsb
rcr
jecxz
adc
push
std
pop
push
sub
in
jmp
add
das
gs
das
and
pop
lods
daa
xor
xchg
sbb
jg
mov
xor
sbb
mov
into
sub
xor
inc
test
imulb
jo
aas
pop
push
scas
xor
xchg
imul
mov
cmpsl
cmp
mov
xlat
mov
out
mov
pop
sbb
fnstsw
inc
lds
or
mov
pop
sub
sbb
mov
stc
sbb
dec
dec
pop
mov
fdivp
push
lret
int3
js
aas
xchg
movsl
icebp
dec
push
add
jge
pop
hlt
jnp
pop
imul
fiadds
in
sbb
test
cltd
push
push
push
pop
repnz
lret
add
mov
mov
loope
sbb
jle
mov
int3
push
lahf
das
push
sub
int3
jg
sub
inc
jne
push
jnp
pop
mov
movsl
sub
lahf
dec
pop
add
push
sarb
std
not
mov
scas
int3
arpl
ss
sahf
imul
test
inc
jle
mov
mov
inc
jle
shlb
sub
sub
shlb
inc
jo
into
ret
or
data16
loope
movb
sbb
sbb
fwait
sarl
add
test
jo
loope
adc
adc
test
pop
sbb
cmp
ficoml
leave
xchg
fcomps
xor
mov
jb
addl
or
stos
inc
daa
test
pushf
ret
aaa
sbb
cwtl
or
jmp
mov
xor
fmul
mov
push
mov
mov
xchg
or
jne
ss
xor
push
bound
mov
aas
arpl
cmpb
lds
xchg
lods
loope
or
aas
or
dec
cwtl
inc
or
mov
or
sarl
jecxz
movl
aam
mov
push
test
and
insl
pop
jle
call
cli
adc
jne
ret
je
inc
das
pop
je
push
enter
pop
nop
and
sbb
cmp
lds
push
dec
pushf
loope
mov
dec
cli
leave
lods
das
or
ret
pop
aas
and
add
pop
xchg
push
idivb
sbb
inc
mull
mov
dec
pop
xlat
shl
mov
arpl
test
or
or
testb
sbb
dec
and
xchg
jae
loop
pop
mov
pop
add
shr
jb
sub
adc
cmp
dec
aas
xchg
filds
lret
ret
and
imul
sti
sub
movsb
xlat
push
adc
cmpsb
popa
mov
dec
icebp
push
adc
lcall
cmp
jmp
js
xchg
and
les
push
cld
movsb
sbb
mov
inc
mov
or
or
shl
push
adc
mov
jecxz
mov
call
and
inc
xchg
jae
dec
gs
nop
fidivrs
pop
call
lcall
jne
in
cltd
repnz
mov
shlb
stos
pushf
ja
dec
adc
lock
jae
pop
dec
lahf
cmp
inc
mov
add
lcall
xor
in
dec
fcmovb
dec
pop
insb
dec
fsubrs
mov
jne
rcl
mul
mov
decl
xor
push
inc
insl
ja
jp
jno
xchg
jg
pop
das
mov
fildl
aad
mov
and
cmp
ret
fistpll
push
sub
jae
sbb
mov
add
sub
loope
data16
aaa
push
push
mov
sub
insb
pop
test
popa
fiadds
sti
sti
xchg
inc
inc
jmp
pop
mov
lock
loop
inc
jp
imul
rcrb
rcrb
fsubrl
stos
cmpsl
sub
and
push
xorl
push
jno
push
mov
xor
mov
leave
lock
es
pop
decb
jne
cs
add
inc
mov
fsubrp
jl
pop
leave
shll
adc
jmp
xor
pop
xlat
sahf
ljmp
and
lock
adc
jb
push
jmp
jp
das
movsb
xchg
add
jno
cmp
imul
pushf
or
pop
mov
hlt
cmp
test
xchg
dec
xchg
cmp
mov
enter
mov
xchg
mov
repz
orb
repnz
cmp
push
sbb
movsb
mov
push
mov
and
and
cltd
in
nop
or
insl
cltd
fstpt
subb
jb
lods
mov
pop
mov
imul
sbb
adc
dec
stos
push
cwtl
and
enter
dec
add
movsl
sbb
push
mov
cltd
cli
lret
es
mov
cmpl
sbb
gs
je
mov
adc
mov
cli
inc
pop
call
lret
push
or
hlt
test
pop
lret
jp
pop
scas
lahf
jno
add
fwait
xchg
adc
add
loope
and
leave
pop
adc
mov
xor
fstps
leave
test
add
inc
and
lods
clc
ljmp
dec
mov
cwtl
add
and
rclb
aad
int3
sbb
mov
jmp
and
mov
scas
lock
push
popf
shlb
mov
bound
jne
and
jp
xor
leave
cmp
fwait
bound
jbe
push
insl
sbb
dec
aaa
sbb
cmp
fimull
outsb
lock
cmpsl
test
jmp
int3
pop
fistl
scas
mov
clc
sub
jae
test
jns
call
bound
mov
pop
cmpsb
movsl
sahf
push
jns
dec
sub
inc
imul
pop
leave
lret
dec
mov
ffreep
pop
test
jl
jg
fnstcw
jne
pushw
push
push
sbb
fldenv
mov
in
jae
cmp
xchg
fadds
sbb
sti
mov
inc
sub
jne
push
popa
dec
ja
sbb
add
jmp
xchg
into
sbb
outsb
in
popf
lret
cmp
shl
push
mov
push
cmp
or
imul
arpl
or
dec
pop
dec
icebp
daa
hlt
divl
mov
in
fisubrs
loope
cmp
lea
sbb
and
sub
mov
arpl
mov
jmp
lods
and
inc
in
xchg
ja
shl
mov
add
into
add
mov
push
popf
jg
and
fidivrs
loop
or
insl
sub
mov
cmpsl
adc
out
inc
xor
and
in
movsl
adc
push
xor
addr16
aam
nop
call
sbb
mov
adc
into
and
shrb
sbb
call
sti
jne
bound
fidivrl
sahf
mov
push
sti
and
adc
cmpb
push
fldcw
cwtl
mov
jmp
in
sub
cmp
adcb
cmp
sahf
into
mov
push
or
push
iret
stos
cmp
mov
test
ja
in
out
cs
push
shrl
leave
mov
add
ret
fstps
cmp
dec
jb
out
int
imul
icebp
out
imul
ss
add
push
and
sub
sub
mov
push
and
adc
pop
add
or
ret
or
cmc
mov
lds
imul
inc
in
lods
lahf
sbb
mov
sahf
inc
mov
pop
aas
cmp
sahf
add
push
aam
xchg
jmp
inc
and
xchg
pop
leave
dec
loopne
out
push
mov
in
fldenv
cmpsl
pop
rcll
mov
add
sub
clc
or
popf
in
cmp
ja
jns
int
xchg
in
hlt
movsl
mov
jb
out
std
sub
dec
popf
or
arpl
loope
xchg
js
add
shl
add
aam
lcall
and
ror
mov
or
cmc
pop
lahf
outsb
fwait
adc
imul
out
xchg
adc
xor
loope
addr16
and
shr
push
adc
xor
xor
mov
jne
cld
mov
xor
call
and
pop
jae
popa
dec
add
mov
cmp
or
call
je
adcb
push
out
cmpsl
rorb
push
push
xor
push
aam
and
push
mov
fsubs
mov
cmp
mov
jae
dec
rcr
sub
sahf
sub
and
inc
xor
imul
push
and
out
popa
call
xchg
and
pusha
adc
pop
xor
lods
jns
movsb
test
or
fwait
and
popf
or
mov
jp
nop
mov
jl
push
lds
cmp
inc
out
jecxz
jmp
push
pop
aad
scas
xchg
out
xchg
addr16
loope
sbb
ucomiss
popa
add
lds
hlt
scas
mov
rcrl
sahf
frstor
adc
inc
fsubs
arpl
ror
dec
mov
inc
mov
push
aas
loopne
xchg
aam
sbb
and
fs
stos
mov
dec
cmp
ja
mov
pop
push
pop
sbb
push
cmp
std
push
pop
and
test
ds
fs
push
or
dec
pop
ds
jle
adc
in
xchg
mov
cli
mov
inc
pop
pop
and
mov
lahf
outsb
out
push
pop
in
and
gs
cld
mov
lcall
mov
cmp
loope
xor
jnp
fildll
testb
xor
outsb
cmp
sbb
fstp
sbb
nop
mov
std
js
stos
mov
stos
jmp
add
stos
popa
inc
iret
pop
fcomps
shl
push
dec
xchg
sbb
cwtl
cmp
repz
jo
cmp
push
ds
enter
aam
insl
lods
js
sub
outsl
ficomps
xor
test
push
mov
xchg
sbb
roll
xorb
sub
aad
adc
xor
es
int3
xlat
adc
push
jbe
loopne
push
jbe
pop
movsb
nop
push
and
test
into
xor
fisttpl
xrelease
push
sub
jb
out
sti
je
lret
mov
mov
mov
daa
pop
dec
add
or
sbb
mov
pop
add
push
shrl
cli
pop
pusha
xchg
sub
sbb
dec
pop
push
test
rcrl
jle
dec
lods
sub
pop
dec
mov
push
out
add
pop
cmc
jno
push
add
mov
sbb
jmp
add
adc
inc
addr16
dec
dec
push
testb
sbb
fcomp
pop
mov
scas
sbb
test
sbb
rclb
and
lods
ljmp
and
jno
add
jmp
mov
js
fisubrs
jmp
mov
jbe
add
test
or
mov
xchg
dec
and
and
xchg
ss
pop
mov
sbb
pusha
clc
lahf
inc
cmp
dec
das
sub
jmp
jecxz
mov
stc
cwtl
dec
mov
shll
and
test
ja
jge
in
pop
cs
inc
pop
cmpsb
pop
repz
sbb
sbb
pop
xchg
clc
dec
cs
push
push
lret
jne
mov
je
hlt
xchg
popa
rorb
add
mov
sti
loop
cli
jns
pop
pop
popf
sbb
jle
insb
dec
ss
and
pop
add
andb
dec
sbb
cmpb
lods
into
add
dec
ret
or
jo
dec
nop
gs
pop
aas
or
inc
int3
sahf
xor
iret
and
push
cmp
inc
inc
outsb
adc
mov
mov
loope
ja
daa
imul
jle
jb
xchg
in
push
test
pop
mov
hlt
iret
sbb
add
loope
mov
mov
fists
ss
and
sahf
inc
push
repz
xchg
jmp
cmp
andb
or
clc
es
call
sbb
inc
outsl
repnz
pop
xchg
icebp
sti
daa
inc
push
movsl
xor
call
lcall
add
outsl
add
xor
pop
out
push
adc
repnz
mov
sbb
sub
dec
pop
ret
add
sub
inc
or
fildll
dec
fdivr
shll
inc
or
add
or
sbb
out
pop
cltd
js
xor
jmp
or
jb
fs
jg
mov
xlat
frstor
movb
dec
or
jmp
push
in
subb
push
or
xor
xchg
and
pop
sub
sahf
nop
popa
mov
push
and
call
cltd
inc
inc
popf
xor
xor
pushf
pop
pop
insb
sub
test
fisubl
sarb
add
loop
dec
mov
mov
add
lahf
mov
mov
movsb
mov
pusha
outsl
cmpsl
fildl
jmp
sbb
lock
jae
js
cmpsl
ret
gs
xchg
push
daa
xchg
imul
pop
ja
xlat
sarl
enter
cld
in
sbb
adc
push
inc
and
gs
adc
or
outsb
lock
mulb
and
rcl
sub
pop
xor
decl
into
lds
push
scas
adc
lret
pop
pushf
xlat
adc
mov
xor
out
out
mov
pop
enter
lock
or
dec
adc
ja
lods
jp
push
call
and
xchg
aad
fsubrl
xor
sti
mov
or
in
bound
mov
cli
dec
aad
mov
inc
push
push
xchg
mov
sahf
push
push
sbbl
cli
inc
push
inc
cmp
test
clc
sti
and
std
rcrb
in
dec
and
sbb
lock
fcmovnb
inc
mov
jne
daa
mov
lcall
loop
cmpsb
inc
inc
scas
loopne
inc
jl
sub
cmp
outsb
adc
sub
ljmp
in
loopne
in
test
mov
mov
sub
ret
pop
in
shl
sub
in
mov
adc
jb
sahf
sbb
sar
sbb
in
pop
mov
sub
lods
das
xchg
inc
cmp
rcl
lcall
cmp
jle
insl
mov
cld
xchg
xor
sub
data16
jne
push
cmp
mov
aas
jnp
push
fmuls
mov
mov
xchg
xchg
mov
sbb
mov
adc
stos
imul
stc
sahf
shll
outsb
cmpsb
or
cmc
fwait
leave
push
mov
mov
adc
adc
inc
imul
imulb
popf
pop
inc
jl
out
cltd
std
cmpsl
adc
int3
or
mov
jge
push
cwtl
jg
mov
or
and
lods
jno
aam
int3
rorb
nop
cmp
fisubs
imul
gs
in
sub
lahf
xor
adc
inc
aad
out
movsb
test
cwtl
add
mov
ret
jge
inc
mov
sbb
movsl
mov
rorl
repnz
jecxz
sbb
insb
popf
mov
jge
add
mov
scas
jg
push
xor
mov
lods
xchg
xor
adc
sub
aad
jle
mov
push
scas
jle
sbb
inc
xor
stc
sbb
cs
pop
cmp
mov
retw
pop
push
aad
pop
mov
mov
sub
out
stos
ret
jp
in
sub
out
iret
sub
adc
cmp
cmp
iret
mov
shll
rclb
outsl
sbb
and
add
inc
gs
add
shrl
or
fisttpl
xor
pusha
mov
insl
push
lahf
andb
es
cmc
xchg
lods
mov
pop
cmp
adc
mov
pop
into
xchg
imul
xor
or
mov
leave
adc
push
call
dec
bound
into
xchg
sbb
push
sbb
mov
push
js
lods
stos
xor
int3
or
nop
adc
or
pop
dec
adc
pop
and
pop
aad
xchg
mov
cmpsl
and
out
stc
cmpsb
inc
subb
test
add
cmp
inc
sub
inc
mov
out
je
mov
inc
fwait
mov
rcll
jbe
addb
mov
rcr
push
push
les
inc
shrb
clc
or
cmpb
lods
push
shl
pop
or
pop
into
ret
gs
sbb
mov
adc
arpl
fcoml
jl
scas
pop
inc
add
ficoml
lods
addr16
sbbl
or
or
les
js
mov
sub
mov
sbb
stos
jle
stos
scas
xchg
dec
xchg
and
jmp
jb
sub
or
mov
and
gs
jmp
arpl
inc
iret
gs
push
xchg
out
data16
arpl
arpl
int
mov
ss
arpl
xor
mov
jge
inc
cmp
pop
cld
xchg
ja
cmpsl
adc
lods
in
inc
movsb
push
int
cmp
xor
in
mov
in
ljmp
lock
push
jnp
lahf
js
jnp
dec
leave
lock
aaa
mov
movsb
hlt
cmp
mov
rolb
dec
xor
pop
push
push
aas
cmp
jle
push
ret
clc
stc
pop
cmpsb
adc
and
out
mov
pop
mov
mov
lret
loop
aad
nop
insb
nop
jne
pop
sbb
jmp
sbb
mov
mov
loopne
jl
repz
and
cmp
in
xchg
lods
pusha
imul
jmp
lea
addr16
mov
rorb
pop
xor
leave
and
nop
mov
xlat
ljmp
xlat
daa
adc
stos
jmp
inc
xchg
repnz
inc
mov
jae
dec
or
in
lock
mov
add
out
pop
or
data16
pop
mov
sbb
lock
mov
inc
cmp
xchg
jecxz
mov
mov
cmp
scas
xchg
call
add
cmp
lret
mov
fwait
jmp
daa
cmp
jmp
dec
ljmp
jmp
mov
jb
pop
add
or
stos
or
es
mov
popf
push
mov
fisttpl
dec
rcl
xor
add
daa
mov
scas
mov
xchg
mov
outsb
jno
ss
push
jecxz
leave
mov
mov
loopne
jbe
out
mov
sub
mov
fstl
subl
pop
insb
daa
mov
sbb
xor
dec
lret
jne
cmpl
inc
addb
das
in
mov
lahf
stos
and
push
je
cmpsl
push
mov
push
dec
test
adc
ljmp
movsb
jl
sbb
push
add
fnsave
adc
mov
icebp
cmp
bound
cld
repz
add
push
in
ljmp
push
enter
dec
test
cmp
stos
addb
inc
jns
jne
mov
adc
out
adc
xlat
jne
cmpsb
or
and
sub
push
in
je
push
data16
inc
sub
push
mov
xor
mov
ds
jbe
pop
cltd
xchg
pop
enter
filds
mov
mov
cmp
fs
ds
loop
sbb
idivb
jp
adc
lods
dec
adc
cmp
mov
scas
in
push
stc
iret
add
xchg
mov
mov
into
dec
mov
mov
mov
push
lcall
add
out
inc
outsb
bound
mov
cmp
cltd
cmpsb
rorb
rorb
sub
sbb
lods
out
push
lret
fsubrl
dec
push
mov
cmc
gs
pop
fisttpl
into
or
or
call
mov
leave
adc
shll
punpcklwd
pop
in
sarb
sbb
mov
sbb
mov
or
add
xchg
inc
imul
stc
push
mov
ljmp
add
push
jg
pop
pop
xchg
fwait
cmpl
aad
es
push
xlat
dec
aam
mov
mov
inc
dec
mov
add
pop
ja
xchg
aam
loop
pop
and
pusha
xor
pop
jb
enter
push
mov
jecxz
lea
hlt
sbb
in
scas
mov
add
and
jl
jecxz
mov
or
mov
mov
scas
test
adc
movsl
das
icebp
pop
sub
xor
cmpb
outsl
pop
jae
repz
dec
sub
dec
ret
xchg
aas
stc
add
cmpsb
jmp
pop
ja
repz
xor
inc
pop
mov
iret
popa
fbstp
fsubrl
pop
adc
lcall
xchg
or
es
cmpsb
outsl
pop
pop
cmp
popf
pushf
push
xor
xchg
or
adc
fstl
mov
and
xchg
scas
dec
xor
mov
cmp
cli
dec
dec
inc
rolb
jb
imul
adc
rclb
and
sub
fisttpl
mov
xor
adc
mov
xchg
lods
fisttpll
insl
adc
mov
pop
xchg
popl
jmp
out
dec
aas
dec
leave
pop
fisubrl
divb
push
out
inc
sbb
xchg
outsl
shrl
sbb
push
adc
add
cmp
insb
cli
pop
pop
dec
in
int3
loop
in
push
je
clc
fmuls
pop
mov
jno
divb
jnp
out
pop
fdivp
into
xor
jno
cmp
push
jae
dec
and
cmp
cmc
mov
ljmp
dec
add
add
dec
lods
push
sbb
push
pop
mov
inc
mov
inc
lret
xor
fldl
pusha
inc
in
or
cmc
insl
lods
jp
push
xchg
psubd
int
into
add
mov
lds
xor
rorb
jb
mov
arpl
into
jns
movsb
dec
rcrb
or
pop
fs
es
add
cmp
cmp
daa
sbb
jbe
and
loop
ja
mov
mov
ret
movsl
dec
in
add
mov
movl
lock
lock
mov
aaa
mov
insl
mov
sub
mov
inc
testb
dec
dec
cmc
xor
push
fstpt
lret
insb
xchg
mov
adc
inc
inc
push
jl
mov
test
cmp
sub
hlt
scas
aas
mov
pop
sbb
pop
fstpl
pop
jne
addr16
not
test
inc
xor
out
sub
lods
int
cmp
loope
out
sbb
lods
lock
scas
outsb
out
mov
jle
push
inc
rol
dec
std
test
in
lret
fidivs
fwait
int3
push
adc
lahf
aad
jl
dec
lock
inc
jl
add
cwtl
dec
clc
add
insl
inc
icebp
lea
test
repz
or
add
hlt
int3
in
xor
test
sbb
test
in
adc
movsb
or
fnstcw
inc
jae
push
stc
std
div
out
je
mov
out
adc
loopne
mov
je
je
popa
bound
push
jl
push
testb
pop
inc
or
sub
pop
outsl
sbb
push
je
popf
loope
add
jno
jnp
mov
pop
cmp
inc
cld
test
mov
and
and
test
or
inc
jge
fbstp
movsb
cltd
pop
push
mov
pop
mov
sbb
js
xor
jo
ds
mov
cltd
mov
sbb
outsb
inc
pop
scas
push
jnp
rcrl
sub
pop
push
mov
mov
outsl
sbbb
mov
push
xorb
das
adc
nop
push
sbb
imul
or
adc
inc
ret
in
push
fwait
jp
test
cld
xchg
adc
std
int
inc
jo
push
js
cmp
sbb
and
js,pt
ljmp
or
clc
mov
push
xor
inc
cmc
sub
stos
fdivs
in
aad
or
movsl
jecxz
rcl
mov
rcl
jb
mov
xor
sub
mov
add
sbb
lods
popf
out
mov
xchg
popl
jae
shlb
out
pop
shrl
pop
and
mov
test
repz
ljmp
xor
sub
arpl
mov
sbb
std
push
imul
fcmovb
mov
jno
clc
push
jmp
dec
aaa
call
inc
sbbl
push
push
push
cld
outsb
cmc
mov
popf
inc
sbb
add
push
jmp
or
push
add
sub
inc
lcall
stos
imul
orb
or
out
in
mov
loope
or
lea
dec
aas
lods
inc
mov
mov
cmp
pop
arpl
movsb
mov
cmpl
cmp
addr16
xchg
mov
sub
dec
sti
push
and
or
sub
mov
ret
popf
fs
outsl
roll
dec
fiaddl
imul
popa
enter
mov
loope
cmp
repnz
aam
dec
xor
pusha
mov
mov
sub
test
ficoms
hlt
movsb
fistpll
test
popa
fmul
dec
xchg
loopne
xor
adc
xor
mov
aaa
dec
test
fwait
cld
lock
cmp
mov
addb
fwait
lods
inc
ljmp
pop
pop
jns
fmull
mov
shrl
pop
xchg
jae
leave
mov
sbb
cmp
xchg
xor
mov
cmp
clc
jecxz
data16
mov
jge
inc
das
and
jb
andl
je
test
fsub
and
jne
scas
fbstp
mov
les
mov
mov
mov
pushf
fnstcw
movsl
adc
mov
vmwrite
js
movsb
xchg
add
and
popa
mov
aad
arpl
popf
lods
and
add
fbstp
sub
movsb
adc
jg
insb
push
nop
mov
sub
jne
pushf
je
or
movb
aam
jmp
jne
pop
mov
shlb
in
scas
pop
notl
scas
aaa
lahf
adc
lods
cmp
rcrl
mov
filds
div
or
icebp
lods
loopne
lahf
sub
jne
je
fwait
out
mov
jl
or
out
mov
pop
mov
or
dec
adc
mov
fiadds
pop
orb
jp
fucom
mov
push
cmpsl
mov
and
movsl
xor
sbb
cmc
mov
add
mov
cld
fidivrl
aad
lret
xor
ret
lcall
shl
lea
inc
ja
dec
adc
mov
aaa
xlat
or
fdivrs
mov
js
lea
sbb
sbb
insl
out
add
jo
xchg
mov
push
dec
and
mov
mov
pop
imul
clc
stc
push
xor
sysenter
adc
and
ret
dec
pop
and
sbb
ljmp
out
imul
fwait
daa
imul
movsl
mov
lret
test
mov
mov
push
nop
cmp
pushf
mov
rol
xlat
test
push
jmp
enter
in
test
cmpsb
adc
pop
in
arpl
mov
adc
jge
mov
fsubrl
dec
sarl
hlt
or
pop
adc
fcomps
add
mov
jge
fistl
adc
je
and
ds
dec
dec
pop
cmpsb
sub
mov
outsb
cmp
inc
addr16
aas
sbb
pop
mov
push
inc
ret
ja
push
xchg
icebp
sub
aam
pop
or
andb
clc
andl
cmp
call
jb
push
xchg
inc
pop
mov
mov
mov
mov
mov
je
add
pop
outsl
jae
loope
xchg
xchg
sbb
fcmovnb
or
insb
add
dec
and
das
xchg
jg
mov
jne
cmp
cmp
push
pop
imul
mov
xchg
add
lea
mov
jecxz
mov
and
test
xlat
jae
push
clc
sub
dec
lds
iret
fldenv
mov
dec
outsl
add
pop
movsl
mov
aam
addr16
movsb
shll
sub
fsubs
xchg
cmc
jns
mov
mov
imull
rcll
gs
gs
repnz
sbb
mov
sub
scas
pop
or
adc
sub
jns
cmpsl
cmp
pushf
mov
adc
dec
pop
add
cmp
mov
aam
dec
scas
aaa
popa
aaa
lock
jecxz
rcl
pop
dec
xchg
flds
dec
cmpsb
add
scas
mov
adc
dec
xor
dec
jecxz
xorb
inc
xchg
or
lds
mov
sarl
imul
lea
sti
jo
pop
aad
stos
and
shlb
lret
xchg
adc
jg
iret
gs
cmp
dec
shlb
test
ret
insl
into
sub
pop
pushf
movsb
nop
lds
push
push
repnz
add
sbb
loop
ds
es
cs
aas
mov
leave
jl
dec
mov
repnz
or
addr16
inc
sbb
rcrb
adc
jnp
mov
insb
mov
cwtl
test
jl
ret
stc
and
pushf
or
in
pop
xchg
jb
fwait
mov
dec
cmp
push
faddl
mov
cmpsl
lock
aam
stos
xor
into
pop
dec
mov
fsts
jbe
mov
mov
mov
push
push
mov
ror
lods
ret
rcrb
negb
sarl
les
jnp
sbb
sbb
cwtl
push
fwait
ljmp
xchg
aas
jl
and
scas
push
jbe
bswap
test
xor
inc
mov
push
scas
jl
in
push
pushf
lds
or
fdivrl
xchg
mov
es
lea
fs
dec
call
push
mov
into
xchg
out
and
nop
in
push
mov
stc
or
insl
inc
xchg
in
mov
and
mov
mov
dec
xor
add
cmpl
cmp
sbb
data16
lret
into
push
dec
mov
and
sub
loopnew
or
xor
imul
sti
lcall
ljmp
mov
mov
jno
cmp
pop
flds
gs
hlt
mov
aam
adc
or
xor
xor
sbb
add
mov
pop
mov
xchg
mov
mov
call
cmp
lea
inc
adc
jmp
addr16
sahf
adc
shlb
xor
hlt
jo
outsl
inc
add
loopne
xor
cwtl
xchg
mov
pop
popa
sub
jmp
cmp
jne
fsubrl
sbb
jne
rcrl
pop
sti
xorb
popa
dec
out
pop
mov
or
jge
jnp,pt
and
int3
lahf
cmp
sbb
xchg
nop
xchg
cmp
test
mov
jecxz
fsub
pop
pop
add
or
and
xchg
std
mov
testb
push
clc
jae
cmp
lcall
negl
mov
xlat
pop
dec
push
inc
test
out
int3
lock
jl
mov
cmpsl
add
fwait
inc
icebp
jmp
lods
adc
jmp
shl
dec
rolb
les
xchg
adc
popf
cmp
jnp
scas
in
and
bound
sahf
mov
scas
mov
inc
mov
es
lods
aam
push
adc
or
mov
jnp
sub
mov
insb
lahf
pop
add
adcb
pop
mov
jne
mov
mov
fdivrl
divb
shrb
hlt
sub
dec
fildll
incl
cmp
mov
pop
ss
sbb
mov
outsl
mov
je
fimuls
jns
std
xor
out
dec
bswap
xchg
cmp
sub
test
mov
mov
bound
outsb
in
inc
cmp
fisttpll
adc
pop
or
imul
pusha
mov
push
test
in
ds
sub
cpuid
les
pop
jg
pop
lahf
stos
push
jne
lods
orl
pop
push
sub
jmp
lea
js
mov
and
xchg
inc
xor
scas
inc
dec
lahf
shl
xchg
stos
icebp
and
xor
out
inc
mov
dec
mov
xchg
pop
insb
in
add
lods
int
pop
push
adc
inc
or
jbe
inc
xchg
data16
loope
pop
xor
and
mov
fbld
lahf
cmp
inc
inc
iret
pop
xor
mov
inc
pusha
mov
inc
cltd
stos
xor
push
sub
aam
pop
mov
mov
dec
or
into
sub
js
out
mov
daa
mov
js,pt
ret
xor
add
ret
adc
and
test
rolb
out
xchg
vpaddq
dec
mov
xor
pop
adc
out
add
pop
pop
xlat
jbe
clc
cld
in
int3
inc
aad
dec
dec
jle
xchg
mov
in
popa
xor
inc
dec
pop
aad
lahf
jmp
popl
pop
push
lret
add
movsl
sbb
xchg
incl
out
addr16
bound
adc
xor
sub
jp
shrl
ss
call
push
imul
in
lock
aad
icebp
addr16
push
movsl
jns
pop
inc
daa
and
inc
mov
andb
mov
ret
cltd
mov
adc
test
jmp
test
and
adc
cmp
in
lahf
fidivs
fs
pop
enter
xchg
shl
inc
frstor
mov
rclb
aam
mov
lock
jo
cltd
push
xchg
push
xor
popf
inc
cmpsb
lret
pop
stos
adc
out
sub
nop
xor
and
jge
out
fs
into
jns
sub
push
mov
pop
div
push
or
sarb
xchg
or
test
stos
lods
addl
inc
inc
sub
add
imul
sub
dec
scas
xchg
mov
call
in
arpl
imul
loop
dec
clc
xor
mov
rcrb
popa
push
sarb
scas
pop
xchg
aas
ljmp
xor
xchg
xor
out
mov
popf
clc
ret
and
mov
and
loope
dec
aad
outsb
ret
imul
sub
jg
pop
lea
push
inc
mov
imul
sbb
rclb
in
inc
sub
mov
pop
addb
mov
lods
xor
adc
cwtl
call
repz
inc
jo
aad
xor
push
pushl
lahf
clc
xchg
push
out
outsb
mov
cld
push
mov
frstor
adc
into
cs
dec
pop
sub
cmpsb
dec
and
les
je
adc
into
and
pop
xor
lock
imul
test
stc
pop
and
test
pusha
push
je
and
inc
sbb
xchg
adc
mov
rorl
or
mov
std
or
pop
xabort
mov
mov
sbb
pop
pop
cmp
pushf
cmp
in
push
lret
aas
xchg
mov
daa
adc
sub
fnstenv
dec
in
push
lods
jmp
jmp
adc
inc
test
mov
jp
jge
jecxz
cmp
add
rcrb
les
push
xor
cld
sbb
imull
mov
mov
and
sahf
fstpl
dec
cmp
jo
lods
jno
and
loope
or
shll
cmp
jmp
sbb
cmp
add
sbb
or
cli
xchg
ja
or
cmp
inc
sti
hlt
int
mov
inc
test
stos
pop
sbb
and
cmp
cwtl
movsb
xor
xchg
lods
inc
cmc
pop
cmp
dec
stos
pop
sti
dec
and
adc
mov
cmpsl
lret
fwait
mov
sti
push
add
pop
push
roll
push
clc
or
xor
sub
inc
stos
cmp
or
cwtl
sub
adc
enter
fsubrs
sub
xor
shrb
push
jae
mov
mov
lea
int3
lahf
fstpl
inc
mov
outsb
xorb
stc
inc
ljmp
push
out
adc
or
lods
cmp
stos
inc
in
jno
adc
ja
jmp
dec
fisubs
out
cmp
aad
stos
mov
xchg
cmpl
and
sbb
pop
cmp
inc
mov
dec
inc
mov
outsl
jl
aaa
aam
pop
cwtl
dec
jns
in
repnz
add
call
lret
addl
lea
rcll
jo
cltd
pop
pusha
imul
popl
loope
das
bound
add
sub
sbb
sbb
addl
xchg
int
add
std
xchg
cmpsb
xor
jbe
jl
mov
cld
jb
jne
mov
jno
test
out
into
dec
div
pop
stos
pop
lods
adc
push
movsb
or
cmpsb
lods
lods
xor
stc
out
jnp
fidivrs
adc
dec
roll
out
push
or
mov
sbb
movsl
jae
sbb
mov
aad
leave
sbb
jbe
int3
pop
imul
adc
adc
gs
xlat
rcll
out
pusha
into
dec
das
pop
stos
cmc
pop
pop
adc
pop
pop
pop
pop
pop
inc
out
popw
push
mov
in
mov
jg
xorb
cmpsb
testl
pop
aaa
int3
push
into
test
and
jne
push
dec
aas
dec
jecxz
mov
sbb
fcmovne
imul
aaa
test
dec
xchg
inc
mov
scas
add
jnp
xchg
push
pushf
scas
xchg
xchg
sbb
xor
out
in
jae
add
or
and
add
in
in
mov
dec
mov
clc
in
in
int
xchg
lahf
cli
outsl
cli
pop
shl
cld
jecxz
in
jmp
add
inc
loope
or
jb
into
jne
xorb
jecxz
mov
dec
xchg
mov
std
popf
inc
and
push
and
mov
popl
test
stos
jae
jo
push
mov
enter
in
cmp
add
dec
out
mov
push
xchg
and
xchg
imul
fld1
divl
sahf
lods
cmpsl
aad
popa
inc
roll
add
inc
adc
out
adc
and
or
ffree
pop
lcall
mull
pop
loope
xchg
add
xchg
fdivs
orb
xchg
in
jl
movsl
out
xor
jge
cli
sub
into
repz
jl
sub
cmp
sbb
and
mov
or
les
add
sub
in
test
lods
jg
pusha
jb
mov
rclb
stos
lock
ret
es
mov
push
cmpsb
add
das
sub
sti
daa
pop
mov
fists
and
les
inc
cmc
in
mov
mov
rorl
push
lea
hlt
and
shll
or
aaa
icebp
dec
lret
mov
fnstenv
xor
mov
shlb
sti
arpl
add
push
push
jno
mov
out
adc
push
adc
xchg
pop
in
dec
push
out
imul
or
bound
and
call
sbb
aaa
stos
cwtl
mov
dec
mov
cmpb
adc
test
and
imul
iret
pop
inc
sub
lds
iret
mov
jl
cmpsb
shlb
cmc
inc
aas
insb
pop
mov
ret
setb
or
mov
into
mov
xchg
ret
insb
addr16
lea
mov
sub
fmuls
jae
fistl
mov
insb
cmp
xchg
xor
cmp
cld
addb
xchg
ret
lds
mov
mov
fdivrl
aam
inc
sub
dec
ret
call
cmpsl
pop
jbe
xchg
subb
xrelease
mulb
jns
iret
scas
out
xlat
mov
cmpsb
sbb
cmc
icebp
push
adc
in
neg
cmp
out
xor
enter
add
mov
shll
rol
test
jae
clc
xchg
and
push
cmp
loop
inc
adc
out
push
test
cltd
inc
push
mov
mov
sbb
ja
inc
ds
jb
fistps
dec
jge
pop
push
or
pop
loopne
fdivl
pop
or
adc
pop
cwtl
imul
call
mov
xchg
in
scas
add
cmp
addl
bound
mov
ret
aam
or
cmp
fistl
ljmp
cmp
sub
mov
ja
mov
ds
data16
rolb
test
jl
in
sbb
imul
add
jg
daa
jge
stos
sub
fwait
insb
or
mov
rcll
dec
addr16
sbb
cmp
mov
mov
xlat
popa
dec
scas
sbb
cmp
and
pop
xchg
fadd
test
rep
add
repnz
into
test
js
scas
sub
rcll
imul
scas
lock
jo
test
fadd
sub
cmpsl
test
mov
out
sub
cmpb
add
cs
jle
out
into
movsl
outsl
xor
xor
cltd
pop
mov
mov
fsubrl
cwtl
ds
fidivs
and
imul
stos
out
dec
outsb
xor
ja
lds
lret
mov
js
mov
ljmp
mov
lods
pop
pop
mov
ficoms
pop
mov
pop
leave
out
lods
pop
scas
push
dec
xchg
inc
in
mov
stc
pop
push
push
add
push
enter
jns
mov
negb
cmpsb
pop
int
add
mov
inc
fdivrl
or
dec
lods
in
xchg
and
xchg
leave
pop
in
popf
clc
sub
and
xchg
or
pop
pop
xor
push
cmc
mov
push
adc
hlt
imul
cli
push
pop
and
xor
or
sahf
push
testl
jbe
cs
bound
or
mov
sub
jmp
adcb
loop
in
xchg
cld
and
je
fldt
or
mov
jns
inc
lcall
shl
mov
push
jns
mov
icebp
mov
enter
sbb
mulb
add
sti
inc
fwait
ret
stos
cmp
arpl
jae
test
push
jae
lock
cmpsl
jnp
imul
jecxz
sbb
push
fnstcw
cmpsl
lret
insl
sbb
xor
ljmp
dec
aam
idivl
imul
inc
je
mov
mov
inc
cmp
sahf
ja
imul
mov
or
stc
push
xor
dec
cmp
les
andb
loop
loop
add
xor
scas
pop
cs
stos
lds
mov
mov
or
cmpsl
enter
xor
out
cli
pushf
or
xor
dec
scas
je
pop
mov
adc
xchg
pop
jecxz
insb
bound
orl
mov
inc
jo
jbe
pop
jl
rol
xchg
jmp
ja
jne
mov
push
loop
pop
rol
push
cmp
daa
addr16
lea
inc
ret
xchg
arpl
inc
es
mov
mov
rcrb
xorb
push
add
sahf
in
add
push
ficomps
shll
fstpt
cmp
mov
dec
dec
rcll
cmp
dec
test
test
fdisi(8087
dec
dec
mov
jg
daa
adc
cwtl
popa
int
hlt
dec
iret
out
dec
mov
adcl
cwtl
xchg
inc
inc
psubusw
push
jbe
mov
inc
mov
aam
or
add
cmp
fwait
dec
out
or
popf
inc
lods
jnp
xor
mov
ror
clc
pop
mov
pusha
hlt
inc
lcall
and
cmp
or
loop
fs
jo
test
movd
lea
mov
das
sbbb
or
xorb
add
dec
cld
ret
pop
jb
js
push
xor
outsb
in
insb
js
dec
adc
in
clc
aaa
fucompp
popf
sub
mov
call
lods
inc
and
ss
cmp
in
scas
out
inc
dec
dec
inc
je
ret
xrelease
xor
push
mov
test
or
lock
or
adc
sbb
ljmp
inc
mov
xor
hlt
outsb
jp
lret
mov
fcom
pusha
int
sub
fucom
sbb
sub
push
push
inc
dec
test
imul
add
cmp
push
mov
mov
movsb
mov
inc
loope
adc
adc
jecxz
jae
andb
mov
mov
xor
sbb
and
ret
dec
cmp
sbb
push
or
xchg
add
popf
andl
push
sub
lcall
push
cmpl
lea
push
cmp
dec
mov
testl
xchg
sarl
cmpsb
ret
mov
jae
mov
into
cmp
mov
dec
add
xor
mov
ret
xlat
xchg
sub
into
int
xchg
ss
shlb
mov
add
pop
sbb
es
and
push
insl
add
out
int
push
rcrl
popl
mov
pop
or
rcrl
mov
into
orl
stc
xor
jnp
push
pop
or
int
push
push
push
add
sarb
xor
xchg
or
cmp
lret
stc
xor
fwait
dec
push
inc
stos
mov
dec
xor
sahf
fistpl
sub
push
push
add
int
xrelease
push
movsl
jg
imul
scas
push
pusha
pop
rcr
leave
lret
jnp
call
jmp
push
in
mov
mov
mov
pushf
jecxz
roll
xchg
sbb
pop
cmp
imul
push
hlt
and
mov
pop
mov
sbb
repz
push
stc
push
push
pop
das
and
int3
fidivrl
pop
adc
nop
and
roll
test
xchg
and
imul
xor
sar
push
xor
test
adc
dec
mov
or
fsubrl
subl
xchg
sahf
add
mov
jno
lock
xchg
ja
mov
xchg
stos
and
xchg
adc
or
xchg
outsl
daa
pop
mov
and
or
test
add
jo
punpckhwd
cmp
lret
xchg
cmp
push
add
sbb
or
imulb
es
orl
pop
sarl
cmp
push
jmp
bound
pop
fcmovne
xchg
out
cmp
jecxz
inc
xor
xor
add
repnz
push
jmp
and
push
push
mov
insl
paddq
fists
fucomp
pop
inc
fimull
mov
mov
in
cltd
dec
mov
sti
sar
inc
add
cmpl
push
xlat
jb
adc
adc
inc
imul
and
inc
outsb
adc
mov
cmpsb
pop
xlat
lret
inc
sub
sub
and
andl
xorl
in
test
inc
sub
dec
clc
es
in
push
out
push
aaa
pop
push
out
iret
and
cmp
sub
jne
mov
shrl
in
add
pop
lcall
daa
rcl
shll
jmp
js
icebp
pop
in
std
mov
sarb
add
decb
push
imul
sarl
mov
pop
pop
cmp
inc
jmp
insb
push
in
gs
clc
xchg
std
jnp
dec
ds
dec
ds
pop
sub
decb
popf
jne
or
rol
add
mov
out
cmp
mov
cmp
clc
mov
test
addr16
push
jae
push
fucomp
hlt
ss
push
cmpsl
push
push
inc
jae
xchg
xchg
mov
xor
xlat
mov
cmc
cmp
pop
dec
pop
xchg
loope
mov
mov
xchg
and
sbb
cmp
adc
jnp
inc
ficoml
mov
xchg
popf
mov
daa
push
rcr
dec
movsl
adc
outsb
add
or
dec
imul
sbb
in
jno
scas
in
xchg
and
jp
pop
hlt
loop
jbe
aam
push
cs
movsb
lret
push
mov
xor
mov
int
push
push
aas
daa
xor
mov
stc
lret
lods
imul
pop
daa
add
movsl
pop
icebp
scas
cmc
mov
jmp
dec
es
dec
fwait
sub
iret
movntq
gs
push
jecxz
rcrb
addb
jle
mov
sahf
ljmp
scas
add
fstpl
aaa
pop
es
daa
push
sub
jmp
add
stos
pop
mov
rcrl
cmp
je
icebp
jmp
cmp
jbe
sbb
orl
or
lods
mov
pop
and
imul
stc
pop
jae
mov
lods
xchg
adc
pushf
sub
mov
jae
lds
mov
sub
cwtl
dec
pop
loop
mov
and
sbb
jo
shll
push
mov
aaa
out
push
add
xchg
pop
mov
mov
or
dec
nop
pop
add
int3
inc
aaa
and
and
sub
push
jp
pop
mov
xor
or
mov
pusha
xor
ja
jnp
jmp
push
cmp
adcb
dec
dec
adc
or
jne
adc
mov
lods
mov
pop
out
jnp
pop
inc
push
daa
xchg
xor
lahf
call
popf
rcrb
fwait
cmp
inc
icebp
icebp
ds
stos
add
repnz
subb
ja
mov
sub
lea
pop
add
test
mov
inc
pop
ret
pusha
sbb
pop
mov
jg
fdivrs
enter
xchg
insl
xor
mov
or
ja
jo
into
lret
sbb
cmp
fists
dec
push
aaa
repz
les
dec
mov
idivl
add
nop
imul
mov
movsb
xor
js
sub
fcoml
mov
jbe
mov
scas
mov
movsl
cmp
mov
jmp
mov
popa
test
jg
cmpsl
je
jne
pop
push
mov
xor
ret
lret
jl
cmpsl
int3
jmp
push
out
mov
movsl
mov
loope
and
dec
fwait
mov
std
sbbb
and
pop
xor
aas
pop
xor
or
shlb
jne
push
pop
cs
mov
push
or
cli
loop
fsts
push
mov
jg
setnp
xor
lret
push
push
clc
add
xor
outsb
sahf
gs
sub
or
dec
mov
mov
add
mov
fs
lret
std
mov
mov
and
shr
adc
mull
sub
and
cld
and
cmp
test
xchg
fisttpl
sarl
add
push
sub
andb
mov
and
push
insl
ljmp
inc
andb
ljmp
les
sbb
cmpsb
enter
jb
stc
mov
and
mov
cmp
test
add
or
aam
mov
jl
jmp
out
jno
and
popa
mov
push
fdivp
add
scas
jecxz
xchg
or
pop
xchg
out
pop
jmp
sbb
add
decb
mov
sti
dec
test
mov
jbe
repnz
lcall
out
add
sub
push
ret
nop
out
out
xchg
and
cmp
push
jmp
push
sbb
add
pop
sub
shlb
lock
cs
dec
repnz
outsb
fsubs
sbb
or
nop
xchg
cwtl
roll
xchg
int3
in
out
in
cli
ljmp
decl
adc
cltd
ja
xor
jne
push
repz
add
popa
inc
fbstp
bswap
scas
fldt
pop
sub
lret
scas
dec
dec
les
sbb
enter
popa
mov
in
repz
js
sub
pop
push
data16
adc
sub
sub
hlt
mov
bound
jge
sub
int3
sub
fcomp
sub
push
out
or
cmc
int
sub
push
cmp
in
rcrl
and
sub
push
out
and
subb
out
pop
adc
shrl
fisttpl
lret
bound
pop
std
mov
gs
out
pop
push
icebp
shrb
or
sub
xchg
jne
inc
ds
push
stos
cli
add
mov
jl
push
xorb
and
xlat
and
cltd
mov
dec
jo
jle
pop
add
into
iret
jne
adc
inc
mov
fwait
sbb
jp
in
outsl
js
mov
in
jne
mov
in
pushf
inc
and
fidivrs
adcl
out
mul
inc
push
mov
mov
lea
cs
fcoml
lods
inc
insb
in
dec
icebp
sbb
adc
mov
in
or
scas
enter
stos
aaa
and
mov
fsub
test
mov
pop
arpl
xor
stos
orb
jge
ret
cmpsl
sbbl
call
scas
jno
bound
icebp
mov
lock
incl
sti
dec
outsb
out
das
movsl
pop
inc
addb
adc
inc
adcb
cmp
xchg
insb
push
aad
inc
inc
xor
test
ljmp
jnp
jle
xor
mov
mov
repz
cs
int3
rorl
in
ss
stos
fcoms
pop
pop
xchg
cmp
aam
jne
inc
pop
in
push
in
outsl
mov
adc
cmp
lock
inc
loope
les
scas
push
jbe
js
pop
sbb
test
popa
loop
or
adc
push
aas
cs
xchg
jmp
dec
jae
sub
xor
pushf
fnsave
cmp
inc
roll
xchg
loopne
fbstp
inc
or
pop
rcr
subl
icebp
jns
mov
push
or
gs
addr16
dec
jl
adc
cmpsb
lea
rcll
mov
sub
sti
dec
cmp
pop
scas
loop
stos
xorb
ror
adc
fisttps
add
ljmp
sbb
cmp
loop
mov
pop
fs
aas
in
fdivrl
jae
decl
jne
and
out
lods
push
pop
sub
lret
pop
je
xor
rol
pcmpgtb
daa
andb
xchg
jne
cs
and
inc
fadds
mov
xchg
inc
stc
dec
out
push
mov
bound
ljmp
lret
in
inc
sbb
xlat
mov
scas
cmp
repz
push
scas
mov
inc
sbb
rcr
and
mov
fiadds
jno
jp
push
jne
in
icebp
or
or
xlat
scas
xlat
in
jne
addb
lods
bound
int
mov
repz
cmp
test
ret
test
ret
and
bound
adc
icebp
adc
ja
cld
inc
or
mov
xchg
movsb
js
jns
loop
pushf
out
jecxz
and
jl
xor
adcb
and
fs
mov
cmp
mov
js
xchg
add
test
addb
rolb
dec
in
les
mov
mov
fwait
data16
rclb
xchg
hlt
repnz
xor
pusha
xchg
and
jecxz
xchg
jle
nop
ret
mov
in
push
push
jle
cmp
pop
daa
mov
out
or
outsl
sbb
icebp
add
sti
sbb
fimuls
int3
xlat
loopne
and
lahf
into
dec
insb
dec
cmp
sahf
out
mov
xlat
leave
dec
mov
loop
mov
jne
pop
mov
and
int
movaps
xchg
or
jmp
mov
inc
jb
scas
and
shrl
int
inc
in
pop
jno
sub
in
mov
mov
lods
ja
loope
in
fcomps
in
push
xor
lahf
rolb
pop
sub
aam
jnp
or
add
pop
iret
repz
xchg
pop
sbb
les
hlt
int3
adc
or
push
repz
inc
daa
inc
mov
fisubs
mov
jg
iret
sbb
sarb
data16
mov
testl
std
xchg
scas
xor
js
int
stc
out
in
divl
pop
ret
lret
and
xchg
jns
sbb
lock
lods
push
xchg
out
add
mov
subb
mov
int3
xchg
pop
xlat
xor
lock
push
loopne
xorl
cmp
jnp
dec
pushl
pop
mov
ds
xchg
mov
mov
imulb
out
push
insw
int3
xchg
enter
xchg
insl
cmp
leave
inc
adc
popf
mov
lret
fs
out
dec
mov
rorl
add
jo
adc
loope
shl
jge
loope
jnp
notb
xchg
dec
mov
les
xor
aaa
dec
cmpsl
jo
andb
sbb
loope
pop
imul
xor
pop
mov
mov
pop
test
xor
cltd
and
aad
xchg
ficomps
dec
mov
enter
loope
xorl
cmp
mov
aaa
cmpsl
xor
icebp
or
dec
or
movsl
sub
dec
jp
icebp
int3
jmp
cmp
adc
xchg
xchg
dec
outsl
arpl
test
cld
shl
in
pushf
mov
xchg
scas
jecxz
cmp
test
cmp
jbe
sub
in
ss
xor
mov
movsl
stos
mov
rcrl
mov
outsl
push
loop
out
or
out
push
xchg
mov
sahf
mov
ja
jl
in
cmpsb
push
movb
jne,pt
ljmp
out
adc
leave
mov
sbb
mov
xchg
into
outsb
out
imul
mov
cmp
daa
xor
adc
je
insl
sbbb
and
xchg
aam
in
repz
sarb
xlat
inc
arpl
stos
add
sbb
sub
mov
fldenv
xor
loopne
jb
test
pop
inc
aad
mov
inc
mov
movlps
and
test
ja
add
ret
cwtl
repz
pop
faddl
inc
xlat
cmc
cmp
mov
jg
arpl
sahf
mov
add
jecxz
sub
out
mov
loopne
rorl
or
pop
gs
fcomp
mov
adc
sahf
aad
add
hlt
je
adc
push
scas
mov
fisubs
dec
mov
push
addr16
adc
ret
stos
cmpsb
mov
mov
arpl
push
cmp
mov
push
popf
inc
sti
repnz
mov
mov
fcmove
xchg
mov
std
in
movsb
jnp
ret
inc
mov
inc
mov
out
int
movsb
das
aad
pushl
and
cmp
lcall
jno
cld
mov
fs
inc
cmp
xor
aas
mov
rcrl
mov
sbb
cmp
push
insl
ret
add
cli
mov
add
stos
jbe
push
jo
loop
push
loopne
insb
jbe
add
dec
fstp
clc
in
add
fstpt
insb
lock
push
adc
sbb
shlb
dec
cmp
stos
sub
xor
fucom
and
stos
cwtl
leave
inc
call
xor
cld
scas
push
test
adc
add
aas
mov
pusha
loopne
call
dec
and
and
loopne
mov
daa
sub
into
mov
in
stos
cld
fsts
dec
pop
repnz
mov
repnz
pop
shlb
adc
mov
adc
dec
int3
mov
in
dec
pop
ljmp
mov
pop
cmc
pop
shlb
mov
pop
fisubrl
xor
clc
aas
and
dec
pop
loope
and
sbbl
repz
out
inc
push
lret
repnz
push
push
jl
cli
xor
pop
outsb
shrb
inc
jb
out
fisttps
cmc
test
sbb
push
xchg
sbb
leave
shl
xor
shlb
fsts
pop
aaa
mov
orl
push
or
jne
pmaddwd
fimull
pop
test
push
outsb
add
mov
dec
imulb
and
push
cmovge
subl
out
clc
lock
cwtl
push
pop
mov
pop
adc
lock
mov
insb
add
and
mov
mov
repz
and
rcrl
xor
push
inc
jl
adc
imul
adc
sbb
loop
rclb
test
jne
je
or
push
push
mov
nop
add
lods
out
ds
mov
mov
inc
fsubl
iret
pop
pop
jle
xchg
mov
lock
add
std
jge
orl
pop
rclb
and
jb
lret
or
jo
mov
lahf
pop
pop
enter
aas
pop
mov
les
aam
pusha
pop
jo
fwait
adc
cmpb
in
adc
and
pusha
xchg
sbb
call
ret
sarl
dec
xor
fadds
cs
fildl
rcrl
sub
or
fisubrs
dec
hlt
jb
mov
inc
fstpt
leavew
mov
mov
enter
pop
mov
ret
loop
popl
jecxz
pop
xor
sti
xchg
pop
dec
cli
arpl
and
xor
fcoms
xchg
or
data16
and
mov
subl
stos
sbb
cmp
repnz
imul
fdivl
mov
pushf
pop
push
mov
or
jne
ficomps
inc
fsubrs
rcrl
cs
mov
sbb
pushf
movsb
mov
cltd
lea
loop
out
stc
mov
pop
xor
xor
sub
sub
lcall
mov
imul
pop
dec
in
fstl
push
fisubl
xor
mov
sbb
adc
sub
cmp
pop
int3
lock
and
fcmovu
cmc
jno
imul
mov
cmp
push
pop
lret
push
xchg
pop
mov
cltd
sti
mull
mov
dec
rorb
jb
insl
mov
sub
sbb
shlb
andb
fsubs
pop
jns
repz
jb
pop
lret
insb
mov
addr16
jnp
inc
fdiv
and
xchg
mov
insl
pop
dec
cmp
mov
xor
xchg
movsb
cmp
lock
fsubrs
stc
pop
sub
or
adc
scas
inc
pushf
test
ljmp
lods
addb
inc
and
cmp
jmp
or
sahf
andb
add
out
dec
add
mov
sbbb
push
mov
push
arpl
pop
push
push
bnd
test
int3
jg
mov
adc
push
repnz
sti
ljmp
sbb
lret
pop
nop
sub
lret
ljmp
or
out
sub
or
lcall
cmp
push
fsubrs
pop
adc
xor
pop
xor
ffreep
gs
dec
imul
sub
jne
mov
outsl
rcrb
lret
in
cltd
and
and
adc
lret
jg
push
sbb
call
aas
out
loope
jns
sbb
xor
dec
inc
sarl
push
add
xor
and
lds
andb
or
movsl
test
in
iret
xchg
popf
mov
pop
mov
xchg
push
dec
jp
shll
xorb
xor
ss
lods
stos
adc
adcb
loope
and
dec
cmp
mov
push
dec
xchg
daa
call
sub
mov
xor
cltd
frstor
cmp
in
fldenv
lock
and
cli
inc
inc
je
xchg
mov
dec
jp
and
pop
and
cmp
jnp
outsl
stos
test
sbb
push
push
jns
mov
jns
xor
lcall
pop
push
sub
push
addl
mov
lea
mov
mul
arpl
pop
in
je
mov
icebp
push
jbe
dec
out
rclb
leave
negl
cmp
decl
int3
adc
and
cmc
lret
test
adc
subb
mov
inc
pop
rorl
inc
mov
mov
sub
pop
or
xor
into
subl
xor
loop
add
outsl
mov
add
push
adc
inc
xchg
stos
out
cmp
pusha
push
lods
scas
dec
cmp
pop
lret
lcall
dec
dec
push
or
cmp
fisttpll
jl
mov
push
out
shrl
sbb
mov
insl
adc
cmpsl
mov
mov
fnstsw
aad
jmp
jle
cmpsb
jle
xchg
sub
mov
out
ret
test
sub
mov
xchg
mov
jbe
cs
or
sti
mov
inc
adcl
ret
push
add
sub
mov
hlt
aas
mov
sbb
sbb
cmc
shlb
cmpsb
mov
pop
jle
shll
push
test
mov
addl
adc
ret
push
out
nop
adc
test
jmp
push
sbb
out
out
out
mov
adc
shrb
xor
xor
sbb
lcall
mov
inc
pop
adc
ficompl
aam
and
bound
sbb
mul
dec
or
stc
jle
sbb
lahf
ret
lret
cmpsb
xchg
mov
or
scas
adc
sbb
sbb
inc
push
shrl
pop
add
push
les
inc
call
xchg
movsb
pop
and
enter
out
cmp
into
jmp
pushf
fdivr
int
aad
inc
insl
and
shll
outsb
cmpxchg
stos
fidivs
push
mov
sar
add
pop
xchg
cwtl
leave
xor
mov
pop
idivb
popf
in
dec
test
test
or
jg
int
xchg
int3
insl
mov
popf
aam
adc
cmpsl
nop
xchg
idivl
cmp
scas
les
xchg
fbstp
xor
pop
add
pop
cmp
pusha
push
into
or
sti
cmpb
mov
stc
in
cmp
and
pop
or
cmp
lret
divl
jecxz
jae
js
fcompl
bound
jg
sti
add
xor
xor
ja
ret
idiv
mov
push
xlat
shld
sbb
xchg
movsb
adc
adc
lret
inc
jae
mov
adc
sbb
roll
adc
cmpsb
std
and
lock
repz
call
push
and
pop
pop
enter
sbb
xor
push
pop
dec
xlat
sbb
jb
xchg
divb
push
mov
das
mov
adc
aas
inc
xor
mov
lock
adc
mov
pusha
sbb
adc
cmpsb
lock
dec
scas
iret
lahf
sbb
dec
les
add
push
in
cwtl
outsl
dec
adcb
popa
shlb
cmp
and
sub
mov
lcall
inc
ror
xchg
adc
jns
es
cmpsb
xchg
push
mov
test
shrb
lret
adc
dec
jns
sub
sub
insl
movsl
lcall
shll
das
xchg
hlt
pusha
mov
fimull
and
jb
jb
repz
rcrb
jg,pn
cmpsl
in
cmp
outsl
push
add
add
in
out
popf
add
ss
icebp
and
mov
stos
cwtl
xchg
incb
jecxz
icebp
mov
popf
cmpsb
mov
cmpsl
fwait
xchg
movsl
or
mov
mov
int
cmp
fdivrp
js
fcmovb
insl
xor
sbb
pop
push
call
cmp
xchg
add
push
stos
insb
jo
mov
jecxz
xchg
lea
das
pop
scas
imul
inc
xor
mov
add
push
push
lock
push
je
nop
notb
sbb
shlb
out
jno
and
mov
out
xor
fs
loop
push
hlt
sub
cmp
xchg
mov
push
ja
inc
pop
and
sbb
sbb
xor
sub
testb
or
and
mov
mov
pop
rcl
sbb
xorb
sub
jnp
jmp
clc
xchg
fisttpl
mov
fidivs
in
inc
fcompl
adc
das
rcll
loope
and
dec
push
sbb
imul
mov
jl
mov
das
negb
nop
or
ja
and
jl
sar
and
in
addr16
mov
das
shll
in
sub
in
in
jno
push
sub
xchg
lds
stc
aas
ljmp
jo
dec
mov
pop
call
cld
pop
inc
cmp
push
xchg
dec
pop
pop
cltd
or
js
and
clc
pop
add
dec
xor
sub
mov
icebp
pop
movsb
xchg
inc
mov
int
dec
push
fadds
or
sub
cmp
xchg
lahf
mov
jns
jns
sub
and
cmp
fisttps
xchg
scas
movsb
and
pop
cs
xchg
push
cmp
fwait
out
ret
cmp
xrelease
adc
lcall
or
rorl
adc
mov
mov
jnp
mov
push
inc
popa
jbe
sub
enter
std
int
sub
or
enter
jmp
pusha
add
popf
bnd
lret
sti
inc
rcl
or
mov
xchg
jae
je
push
or
pushf
rolb
shrl
leave
xchg
sub
mov
stc
xor
pop
subl
shlb
and
rclb
or
sti
loopne
lret
or
or
in
inc
imul
or
jp
xchg
arpl
xor
lods
je
rclb
aam
push
cmpsb
xchg
jecxz
lock
mov
shrl
dec
mov
call
loopne
shll
loopne
je
pop
xor
add
in
push
dec
jp
scas
in
and
out
pop
xchg
cmc
std
lret
call
and
adc
fidivl
jge
or
sub
xchg
adc
xlat
cwtl
mov
and
adc
out
mov
xlat
push
sbbb
ja
xor
loope
xchg
jne
cmp
rolb
fs
sbb
xchg
pause
pminsw
sahf
fadds
andl
ds
ret
sbb
adc
xchg
in
mov
xor
cmp
xchg
mov
jecxz
xacquire
call
xor
fcoml
sub
sub
es
add
and
aas
repnz
jb
mov
loop
fs
jle
jl
and
jl
and
pop
pop
cmp
daa
jns
bound
push
jnp
mov
insl
pop
inc
lds
das
push
pop
inc
in
cmpsl
cwtl
lock
jmp
stc
mov
subb
and
pop
arpl
mov
sarl
jb
lods
xchg
adc
loop
pop
js
or
mov
fwait
jmp
shll
push
rcl
icebp
add
jae
mov
insl
dec
push
dec
jno
inc
popf
mov
popa
test
jae
mov
sbb
xchg
sti
adcb
mov
shl
std
fdivs
nop
dec
out
cwtl
mov
jg
lahf
inc
pop
out
outsl
jae
outsl
scas
jae
test
cmp
xchg
incl
add
pop
in
xchg
fcmovbe
dec
ret
mov
in
xor
mov
cmp
cmp
push
enter
arpl
add
imul
je
add
dec
sahf
into
add
pop
xor
jl
addr16
mov
xor
sub
ret
repz
and
pop
mov
repnz
lods
fcmovb
add
in
pushf
dec
aaa
add
jbe
lods
pop
xlat
out
paddsw
mov
push
nop
cmpsl
aas
lea
mov
cmp
or
lods
add
jnp
test
test
and
or
or
fadd
xchg
mov
dec
jb
and
push
hlt
jge
jmp
dec
gs
jp
push
xchg
pushf
xor
repz
loope
movsl
nop
movsb
xchg
iret
xchg
dec
mov
jns
scas
leave
mov
push
cltd
sub
lea
xchg
mov
sbb
jp
call
jg
lcall
mov
dec
das
aam
jne
sbb
sub
jge
out
or
shrl
xchg
inc
cmp
jne
lock
std
sahf
js
orl
mov
push
hlt
xlat
rclb
and
mov
mov
data16
les
mov
cmpsb
insl
dec
jmpw
stc
ret
dec
shrl
sub
sbb
jmp
adc
aad
imul
jne
rcr
adc
call
cmp
add
mov
cmp
mov
jecxz
leave
fmul
fwait
xchg
push
xor
stos
jb
jb
sub
pop
fs
aam
xlat
dec
xlat
cmp
xchg
cmc
push
repnz
cmp
mov
adc
out
loopne
fsts
push
int3
loopne
mov
fdivrs
xchg
fistpll
pusha
sar
lcall
xor
cmpsl
out
cmp
and
sbb
push
push
sub
xchg
mov
enter
in
jl
es
lods
jl
jns
jno
shl
data16
lret
mov
or
mov
ficompl
negl
cld
pop
push
xchg
in
shr
hlt
dec
jno
mov
or
push
mov
or
pop
or
jl
sbb
sub
mov
pop
repz
push
nop
fsts
out
pop
mov
xor
lret
ds
sub
push
push
ja
xchg
jno
dec
test
ficomps
cld
push
xor
test
gs
lahf
pushw
inc
xchg
pushf
out
push
xchg
enter
lds
in
stc
cmp
faddl
pop
sub
mov
loope
push
stos
je
jns
outsl
lcall
enter
inc
scas
scas
xchg
and
mov
add
ds
mov
cld
pop
and
mov
addr16
bound
fwait
les
stc
enter
out
adc
lahf
fcom
nop
mov
jecxz
lods
pusha
aaa
mov
xchg
or
nop
mov
ficoml
lods
add
std
fcmovbe
dec
push
mov
lret
jl
movsl
test
jle
cwtl
xor
rolb
rorl
fidivl
daa
sbb
xchg
movsb
in
cmp
dec
pop
jp
mov
icebp
adc
dec
popa
cmp
xchg
add
push
dec
ja
mov
jle
jnp
sub
adc
sti
int
int3
sub
out
adc
and
sub
lea
xchg
les
loop
imul
sbb
push
mov
test
mov
jns
clc
sbb
jae
pop
mov
dec
popa
loop
adc
pop
sahf
aas
sub
std
lock
inc
incl
mov
fidivs
lahf
add
inc
push
inc
int
stos
mov
sti
mov
test
xchg
and
daa
in
adc
push
leave
das
pusha
adc
dec
insl
sbb
loopne
xor
pop
test
hlt
in
mov
out
out
js
add
xlat
mov
xor
mov
jns
push
outsb
xchg
fsts
cld
add
cmp
cmpb
adc
mov
xchg
dec
movsl
cltd
and
outsl
shll
je
push
fstpl
mov
add
cmc
jno
popa
pusha
cmp
and
mov
dec
movsb
gs
test
aam
pusha
jbe
add
and
ret
or
and
in
mov
cs
push
out
out
fsubrs
cmp
icebp
push
popa
movsl
dec
scas
int
xchg
sbb
jo
ror
insl
cli
pop
lcall
flds
xchg
push
sarl
cmp
cmpl
xor
sahf
sbb
sub
jmp
jns
mov
inc
outsb
mov
pushf
cmc
jno
outsb
xor
sbb
mov
lods
movsb
jle
sub
cmp
mov
mov
and
stos
mov
xor
gs
jns
mov
cmp
dec
lcall
or
xlat
mov
jl
lods
outsl
dec
dec
aad
jecxz
push
inc
stc
fiaddl
loop
jne
leave
test
xchg
xor
data16
in
jl
push
xor
or
mov
xor
lcall
fidivs
push
out
fs
addr16
out
shll
cmc
or
subl
xchg
pop
fsubr
ret
test
repnz
mov
pop
cmpsl
negb
fucomip
test
or
pop
xchg
sahf
repz
xorb
movsb
lret
inc
adc
popa
shrb
cmp
pop
adc
jecxz
std
pop
adc
pop
fimuls
mov
pop
mov
or
pop
xor
push
mov
mov
dec
sub
jnp
stos
cmp
jae
xor
push
dec
movsb
adc
call
sti
mov
movsb
mov
imul
pop
push
inc
cli
gs
inc
and
nop
add
or
xchg
notl
xchg
inc
jb
inc
add
add
test
mov
cmp
cli
adcl
sbb
jmp
mov
in
xchg
xlat
pop
or
outsl
mov
out
xchg
lcall
stc
les
fbstp
stc
dec
mov
inc
leave
lock
sbb
cmc
jno
cld
sbb
repz
cmpl
dec
leave
adc
xchg
pop
shlb
popf
in
ret
out
out
push
sub
mov
cmpsb
imul
jb
mov
and
adc
lcall
inc
and
push
add
mov
ljmp
cltd
mov
cmp
mov
in
add
inc
in
add
xchg
jge
int
adc
aas
mov
hlt
pop
mov
pop
sbb
xor
lcallw
lahf
rclb
sub
hlt
leave
jbe
sbb
bound
add
cmpsb
nop
fcoms
dec
test
aas
inc
xor
jle
fcompl
pop
dec
dec
xchg
push
push
jae
inc
jbe
sbb
pushf
adc
jge
and
flds
pusha
mov
inc
sahf
sub
jg
pusha
ljmp
pop
dec
cmpsl
push
xchg
push
test
movsl
mov
sarb
xchg
orl
jle
imul
xor
mov
xchg
or
push
mov
push
shl
cmpsl
rclb
push
jecxz
or
pop
add
dec
loop
les
mov
out
jmp
ja
xchg
pop
gs
test
cmp
and
cmp
mov
mov
pop
arpl
mov
push
rorl
xchg
inc
lds
in
xorb
repz
stos
fisttps
sbb
mov
sahf
bound
outsb
scas
mov
cmc
call
xor
call
stc
mov
jnp
lea
arpl
mov
add
push
push
pop
jbe
sub
test
add
jmp
leavew
iret
mov
dec
adc
dec
out
push
inc
fbld
fildl
rclb
jns
cltd
adc
daa
aam
jns
ljmp
sub
and
xlat
fcomp
sbb
ficoml
mov
inc
iret
push
or
mov
inc
add
cwtl
rcrb
xor
mov
daa
sbb
call
rcl
pop
push
les
and
shrb
arpl
dec
loopne
or
inc
out
ljmp
jp
pop
push
or
or
cltd
mov
jl
sbb
hlt
xor
aad
jmp
dec
fmul
loopne
jb
sbb
inc
pop
lds
movsl
lea
mov
mov
ds
loope
jl
or
push
dec
mov
cwtl
jne
into
pop
into
mov
xor
push
addl
cwtl
loopne
std
bound
xchg
into
push
sbb
sub
and
or
aaa
jecxz
rol
arpl
push
jl
dec
mov
popa
xchg
inc
or
nop
lahf
xor
cmp
in
insb
xchg
jl
cs
jp
push
mov
fidivs
imul
aaa
inc
subb
stc
dec
aad
mov
jb
adc
aad
leave
ja
mov
jp,pn
add
movsl
push
jns
lahf
inc
or
jnp
aad
shlb
jmp
scas
sub
lahf
imul
repz
xchg
call
stos
jnp
mov
sbb
repz
mov
dec
filds
push
dec
and
sbb
into
push
test
xlat
stos
sub
pop
push
jbe
loopne
jns
adc
cltd
jp
sti
or
das
xchg
ljmp
lret
idiv
mov
pop
sbb
and
jle
jno
jb
or
jne
loop
xor
push
push
and
mov
add
int
gs
test
cmp
shl
lods
cmpsb
sub
insb
mov
mov
push
into
jecxz
test
jbe
mov
jecxz
adc
pop
mov
jns
sti
pushf
xchg
stc
xchg
dec
push
pop
ret
shl
add
dec
in
iret
mov
subl
xchg
mov
lret
cmp
mov
repnz
setbe
push
lea
cmpsb
aam
lret
jnp
cld
out
lcall
cmpl
sarl
mov
xchg
mov
cmp
mov
rcr
push
loop
pop
cmpb
inc
xor
xor
xchg
jns
cli
jns
loop
mov
in
mov
fisubl
inc
xchg
out
and
cli
js
cltd
push
jb
out
mov
xchg
and
outsb
jg
daa
enter
xchg
cmp
ret
es
stos
int3
jge
fcoms
jae
in
inc
pop
add
add
push
clc
xchg
mov
push
repnz
push
push
add
pop
test
leave
jl
adc
xchg
int
mov
mov
pop
jb
daa
cmp
shrb
push
xchg
fwait
leave
repnz
push
ret
and
cmp
ljmp
mov
xchg
push
mov
fs
lcall
lods
pop
call
xchg
pop
push
or
cmpsb
push
mov
ret
jp
jno
dec
icebp
mov
or
sub
xor
out
dec
jnp
push
or
gs
cmpsl
fcmovb
aas
test
into
lods
fisubl
push
pop
and
dec
xor
out
movsl
es
into
fwait
xchg
sbb
dec
add
adc
mov
sbb
cli
enter
out
sbbl
stos
stos
jno
fwait
negb
fwait
mov
int3
mov
rcrb
sub
push
test
push
dec
and
sarl
xchg
into
dec
sahf
jno
aaa
or
aas
push
sti
insb
dec
ds
cwtl
movsb
shl
mov
ret
mov
ss
jmp
sub
sahf
inc
mov
inc
mov
xchg
scas
inc
rcl
xor
ljmp
or
dec
sbb
xlat
scas
addl
pushf
mov
inc
xchg
aas
fcomip
loopne
movsl
jmp
xor
mov
ds
cmp
in
pop
push
es
jmp
adc
mov
ja
pop
out
dec
adc
popa
xor
adc
jae
xor
mov
cmp
js
mov
jbe
xchg
mov
adc
negl
mov
add
and
iret
jbe
jnp
pcmpeqw
mov
sbbb
in
out
test
in
hlt
push
lcall
jmp
xor
jb
icebp
and
xchg
pop
and
mov
jecxz
fcmovu
test
lcall
dec
ror
nop
pop
xchg
push
or
dec
popa
clc
inc
inc
push
push
ret
pop
push
mov
int3
cmpsb
loope
add
and
mov
movsb
sbb
cmc
pop
mov
test
and
sar
jne
add
fcompl
clc
ror
xor
sub
cs
insl
sub
les
xor
add
add
ss
lret
das
pop
mov
sbbl
ss
repz
and
outsl
fst
pushf
mov
sbb
movsl
cmp
bound
inc
mov
adc
cmp
mov
into
icebp
cmpsb
rcrl
xor
inc
in
xchg
inc
ret
cmp
sti
inc
addr16
movsb
bound
lcall
js
push
shll
jmp
popa
mov
mov
shrl
dec
cmp
jmp
mul
sub
jp
fbld
inc
aaa
hlt
hlt
add
loopne
movsl
inc
adc
fadds
scas
dec
adc
mov
das
sub
iret
imul
andl
ds
inc
xchg
icebp
cmpsb
mov
cli
add
jb
data16
push
adc
cld
mov
fdivrs
sbb
js
and
stc
cli
mov
loope
sahf
into
lock
mov
xchg
dec
outsb
testl
and
lret
push
inc
push
leave
dec
fucomi
sub
dec
mov
in
adc
loope
jp
cs
xlat
cmc
xchg
scas
stos
xchg
orb
loope
lods
jb
mov
in
pop
shll
fmulp
subl
mov
pmullw
lret
in
int3
cmp
push
imul
pop
das
lret
sbb
xchg
test
mov
addr16
xor
mov
xchg
ljmp
adc
push
inc
fwait
jns
insl
dec
jg
cmp
scas
data16
nop
fwait
mov
les
push
xchg
aaa
sbb
addr16
enter
sbb
repz
lcall
lret
mov
dec
shr
aaa
mov
out
ja
mov
sbb
out
lcall
sbb
push
mov
aad
insb
adc
mov
pop
sub
mov
mov
jge
fwait
icebp
std
push
dec
inc
lock
outsb
xchg
jo
cmc
xor
push
pop
mov
gs
mov
or
pop
jno
inc
xchg
std
mov
xchg
vmwrite
rclb
lea
fdivrl
fnstsw
sbb
lret
jo
jl
aad
adc
jae
test
loope
ds
in
fsts
pop
pusha
jecxz
cmpsb
cmp
sbb
dec
int3
pop
mov
jl
xchg
sahf
or
jmp
addl
mov
cltd
jo
lods
xchg
adc
mov
mov
fcomp
sahf
daa
xchg
pop
cmp
pusha
dec
push
mov
mov
mul
jmp
stc
pop
in
jo
cmp
arpl
mov
ljmp
push
mov
jnp
ret
push
shrb
mov
mov
loop
aam
xchg
jnp
pop
cmp
pop
mov
push
sbb
pop
inc
ja
stos
repz
xor
ret
arpl
lods
imul
add
aad
ss
or
xchg
pop
mov
dec
or
sbb
gs
mov
adc
loope
push
outsl
adc
add
dec
call
or
xor
mov
test
pop
fldl
test
mov
push
inc
andb
js
test
fwait
mov
aas
jl
sbb
rorl
xorl
push
jle
call
pusha
pusha
mov
jo
gs
cmpsl
andb
gs
mov
or
fimuls
mov
mov
cld
leave
mov
and
add
jne
mov
lea
jl
leave
and
lods
adc
jmp
xchg
ja
and
jb
jnp
aaa
icebp
daa
aad
pushf
xchg
push
pop
bnd
clc
lock
int
and
add
cmc
adc
add
in
pusha
jle
jo
xchg
xor
or
xor
insl
pop
dec
aam
aad
mov
sbb
pop
jmp
in
or
push
call
sub
jne
mov
mov
add
inc
add
push
sarl
ljmp
aas
jle
push
aad
or
mov
xchg
ret
push
fsubrl
xchg
lea
fldpi
adc
dec
jne
adc
jno
cmpsb
dec
push
rcr
or
xchg
insl
mov
push
jl
inc
xchg
jl
push
dec
mov
das
shrb
ret
inc
or
fisttpll
sbb
xor
lahf
int
lock
mov
in
push
lret
mov
mov
pop
fisttps
mov
or
lret
fmul
int3
add
sar
push
cld
sub
fwait
dec
sti
stc
mov
or
fisubrs
mov
popa
pop
sbb
mov
inc
ror
pop
add
popa
sarl
jmp
xchg
mov
test
cmp
lret
sbb
mov
icebp
stc
lahf
test
scas
in
in
mov
sub
loopne
jae
icebp
cmp
stos
test
mov
mov
cmp
out
add
pop
jp
add
mov
out
sti
call
mov
xor
jl
in
das
sub
mov
add
jge
mov
imul
fsub
cmp
cltd
push
xlat
sub
mov
outsl
cmc
dec
jg
ja
adc
sahf
xchg
rorb
lods
ja
push
insl
cmpsl
mov
and
in
xchg
ret
mov
jg
cmp
adc
repz
ds
jae
fwait
mov
arpl
lret
mov
xchg
push
push
cmpsb
ret
scas
ret
sub
cmp
rcrl
jb
daa
bound
out
dec
xor
dec
orl
xchg
xchg
fyl2x
lret
icebp
pop
pop
push
jo
adc
mov
ret
dec
pop
push
test
fdivrs
cwtl
dec
adc
ss
push
in
lea
pop
push
repz
push
sub
mov
push
push
testl
loope
add
mov
lods
nop
cmp
sbb
adc
into
daa
dec
pop
pop
orb
jne
lods
cmpsb
mov
fstps
pop
rcll
in
inc
andl
push
push
mov
push
mov
mov
jmp
pop
dec
lcall
enter
call
mov
enter
lcall
scas
lods
pop
daa
jmp
pop
imul
outsb
filds
and
push
add
aas
or
scas
je
mov
adc
jnp
cmp
push
lods
cmp
adc
xor
out
in
dec
imul
xchg
insb
or
inc
sub
cwtl
aad
lds
xchg
sub
mov
popf
nop
cmp
das
cmpsl
jae
es
mov
fdivrl
push
mov
loop
ret
fists
xor
je
sub
scas
xchg
push
adc
inc
aaa
les
stos
mov
or
adc
aaa
xor
arpl
add
xor
aad
sbb
cmp
sub
pop
loopne
test
lret
js
mov
cmp
add
dec
xchg
push
pop
inc
xchg
jb
push
and
dec
imul
out
and
dec
pop
cmp
mov
mov
pop
mov
cld
sbb
inc
clc
and
mov
dec
cltd
in
jg
aam
incb
mov
fisubl
sbb
daa
jno
mov
inc
insb
push
adc
shlb
sbb
aam
xlat
mov
mov
out
std
lcall
mov
or
addl
lock
push
js
lds
push
clc
and
pop
mov
jae
das
rcrb
xchg
xchg
cmp
or
xchg
mov
xor
test
cmp
pop
push
imul
or
cmp
dec
cmp
leave
xchg
mov
mov
adc
mov
outsb
dec
sbb
hlt
mov
jg
lret
imul
lret
sub
icebp
insb
cwtl
push
stc
mov
rorb
andb
arpl
cmp
push
addr16
xlat
gs
lret
stc
or
adc
inc
mov
jge
pusha
jle
jne
iret
and
ret
int3
shr
cmc
pushf
mov
and
or
add
popa
cmp
in
jo
lods
jmp
mov
jae
outsl
in
inc
jp
add
push
mov
xchg
add
sub
push
sbb
lea
mov
test
mov
cmp
and
js
inc
xor
mov
cmp
xchg
mov
dec
pusha
dec
mov
mov
fstl
xchg
add
sbb
fistl
fnstsw
sbb
shl
fdivs
icebp
notl
cmpsb
adc
jae
insb
jecxz
mov
addr16
sub
push
addr16
pop
and
xchg
dec
or
loope
loop
jp
pop
hlt
dec
pop
push
dec
mov
aad
mov
mov
fbld
cmc
sub
adc
cmp
jle
mov
loope
xchg
add
icebp
leave
pop
scas
dec
and
mov
insb
mov
pop
fbstp
cmp
bts
mov
outsl
or
icebp
jae
mov
xlat
stc
ret
out
pop
imul
and
mov
negb
adc
add
adc
jp
shrl
lods
pushf
pop
in
dec
or
outsl
jo
call
out
xlat
pop
push
dec
jb
xchg
insl
mov
inc
fidivs
sub
xor
int
lods
sbb
cmp
pop
je
mov
push
jmp
fimull
or
dec
in
loopne
ret
inc
cs
pop
into
pop
sbb
rcr
pop
cmpsl
jmp
insb
mov
outsl
lret
rcll
imul
in
mov
icebp
popa
and
push
mov
or
in
aaa
cmpsl
mov
sub
fcmovne
and
leave
lahf
dec
pop
and
je
mov
clc
int3
push
dec
adc
pop
pop
or
push
mov
cmp
jb
and
das
repnz
hlt
fildll
out
mov
fists
pop
add
mov
data16
xchg
cmp
cli
movsl
sbb
mov
lret
aaa
sbb
and
sub
lcall
lret
ffreep
lods
test
ss
jb
add
pop
loopne
push
jno
daa
mov
mov
push
repnz
inc
xor
rcll
adc
in
mov
jne
jne
mov
or
cmp
cltd
mov
adc
add
inc
add
push
add
and
sbb
mov
in
sbbb
stos
mov
mov
test
and
mov
mov
cmp
sub
jns
test
sub
sbb
sub
out
add
scas
pop
into
mov
mov
into
and
rcll
mov
jmp
fs
xor
sub
std
adc
into
add
mov
xor
scas
int
fnstcw
mov
test
addr16
and
add
fwait
pop
cmp
cli
add
mov
or
push
dec
push
ret
hlt
jns
dec
je
inc
adc
aas
stos
fdiv
mov
pop
dec
inc
jne
jp
or
inc
rorl
mov
jge
xor
leave
add
insb
inc
js
sbbb
in
js
js
out
das
adc
pop
xchg
hlt
imul
xchg
mov
ss
inc
outsb
adc
xchg
jnp
jmp
stc
fwait
and
cmpsb
jbe
and
mov
push
xor
sbbl
adc
xchg
xchg
aaa
jno
test
mov
add
pop
loope
and
mov
cvtdq2ps
jl
xor
cmp
out
xor
xor
std
btr
fs
rclb
andb
les
out
push
ss
or
cmc
lds
es
push
sub
jecxz
jp
loopne
mov
jl
movsl
xchg
js
sub
and
and
xor
cmp
ffree
ss
pop
js
or
mov
test
jge
mov
cs
test
sub
movsb
stos
cmp
imul
test
or
jne
cmpsb
mov
add
xrelease
inc
sbb
popf
push
in
fistps
xchg
scas
xchg
loopne
repz
push
test
mov
cld
loopne
xchg
xchg
popa
mov
inc
cmpb
adc
xor
and
push
into
lea
fcompl
das
mov
call
int
int
xchg
mov
mov
add
pop
adc
sub
shll
mov
cmp
pushf
or
rorl
data16
gs
cltd
ret
push
mov
sub
mov
cmp
idivb
push
mov
stos
ffree
mov
sbb
fdivl
int3
hlt
out
scas
mov
out
add
repz
jmp
or
stos
and
xchg
sbb
leave
sbb
scas
out
aad
in
daa
test
cmpsb
or
push
pop
xchg
aaa
mov
dec
pop
mov
aaa
fmulp
mov
add
mov
jecxz
xor
sub
add
mov
mov
cmpsl
loopne
mov
int
sbb
adc
cmp
orb
xor
loope
fistpl
adcb
sbb
stc
fmull
and
in
xchg
pop
push
jge
fsubrl
sub
mov
subb
jo
inc
jge
xor
out
add
aam
dec
std
sub
leave
imul
cld
and
or
aad
and
scas
out
dec
or
ljmp
aam
subl
mov
arpl
ljmp
test
arpl
adc
cld
daa
or
dec
fadd
cmc
cmp
xor
or
adc
pop
sbb
hlt
in
or
adc
es
leave
pop
sub
add
loopne
add
jns
xor
jg
push
push
repnz
add
cmp
mov
dec
and
ljmp
sbb
push
cmc
xchg
mov
push
insl
loopne
scas
pop
mov
mov
push
pushf
shlb
jns
loopne
xor
ds
inc
out
ret
fidivrl
adc
repz
rcrw
fsub
dec
ror
call
adc
jnp
cmpsb
test
and
punpcklwd
mov
xor
xor
add
cmpl
test
fbstp
mov
dec
cli
adc
push
push
imul
or
mov
pop
adc
lahf
mov
sub
mov
gs
inc
push
je
enter
das
in
pop
pop
out
mov
inc
and
xchg
pop
insb
cmp
mov
lahf
sarl
movsb
dec
cmp
clc
addl
lds
outsl
aas
adc
iret
adc
fisubl
lods
xor
push
push
fmull
inc
clc
fnsave
mov
stc
or
jmp
rclb
xor
addr16
repz
add
loopne
adcb
fs
mov
sbb
pop
popa
bswap
mov
int
das
sub
add
arpl
mov
push
loop
mov
fnstenv
xchg
enter
push
push
hlt
xchg
fwait
pop
orb
dec
mov
stc
mov
dec
movsl
outsl
shll
xor
test
ds
sub
mov
in
xchg
movsb
clc
pop
dec
sti
das
sbb
xchg
xlat
mov
daa
and
inc
dec
rcll
push
mov
sti
add
shr
fstpl
sti
inc
fildll
mov
out
xchg
jo
xor
adc
das
jge
andb
mov
fs
jo
and
jmp
std
es
lea
filds
xor
xchg
mov
jnp
inc
cltd
mov
xor
fmull
jae
out
xor
add
out
pop
scas
shll
pop
fst
xchg
sbb
fstl
mov
mov
aam
dec
xor
jbe
jge
test
in
inc
fxch
leave
jnp
stc
lock
sub
pusha
popl
and
xor
or
pop
stos
icebp
cs
je
xchg
inc
movl
sub
aad
loop
je
lods
inc
ret
loope
addr16
in
in
and
test
sbb
lock
xchg
inc
loop
out
adc
aaa
cli
mov
add
inc
fidivrl
ficoms
xchg
and
and
inc
jne
push
push
data16
fwait
std
sub
push
sbb
jbe
mov
sbb
movsb
adc
in
outsb
cltd
mov
jnp
dec
mov
xor
shlb
pop
push
xchg
fistps
mov
rorl
out
mov
mov
loope
inc
or
jns
adc
mov
inc
stos
ljmp
or
cmpsb
xor
int
stc
ljmp
pop
cmpsb
push
mov
xchg
pop
xchg
pop
nop
in
ljmp
adc
sub
mov
push
mov
dec
mov
iret
dec
mov
add
decb
clc
mov
data16
push
sub
cmc
mov
outsl
lock
leave
push
es
push
movsl
mov
mov
clc
pop
enter
add
and
lds
mov
fstpl
mov
in
or
or
mov
das
scas
add
mov
into
addr16
jo
test
jl
pushf
cs
sub
pop
jmp
inc
loopne
icebp
out
clc
ficomps
push
and
dec
cltd
sbbl
sub
sub
shrl
test
mov
xchg
mov
sbb
out
hlt
push
xchg
jb
add
sahf
scas
push
out
jecxz
nop
xor
fisttpll
loope
jmp
in
ljmp
xchg
xor
add
push
lret
or
out
jns
xchg
test
inc
xchg
lock
in
sbb
es
cmp
push
js
bound
sub
add
out
mov
mov
in
sbb
push
dec
sti
add
xchg
fcoml
ficompl
popa
inc
sub
adc
mov
cmp
xchg
stc
mov
mov
int
pop
xor
mov
jae
dec
xor
dec
mov
and
test
and
push
inc
mov
mov
pop
sti
mov
fisttpl
cmp
or
stos
push
filds
pop
int
jbe
push
popa
push
pop
sbb
jb
repnz
popf
jg
mov
sbb
dec
cmp
cmpb
test
aas
into
negb
push
ret
insl
ds
stc
subl
stc
cmp
mov
and
or
mov
sbb
sbb
mov
pop
pop
cwtl
call
mov
sub
nop
pop
pop
push
out
push
fistl
scas
push
push
xlat
pop
jne
cwtl
loopne
mov
cs
fdivp
out
out
pusha
insl
or
imul
push
mov
test
das
cmpl
stc
pop
lds
xor
xchg
sub
dec
popf
dec
cmp
mov
out
xlat
pop
mov
dec
ljmp
xchg
or
jnp
pop
xor
and
out
and
jmp
sti
or
pop
or
mov
call
jecxz
mov
daa
cmp
mov
das
add
push
jle
mov
sbb
into
mov
push
jae
das
xchg
mov
sub
mov
jb
dec
nop
inc
loop
xchg
out
stos
pop
cli
dec
sti
jmp
mov
idivl
pop
lea
insb
popf
jbe
mov
jbe
mov
rcll
mov
aaa
mov
inc
jp
pop
testb
out
sar
out
mov
push
mov
sub
jmp
clc
pop
scas
rcr
dec
movaps
iret
or
das
inc
mov
xchg
add
loope
sarl
adc
pop
adc
sub
add
ja
mov
mov
scas
cmp
dec
push
sbb
out
inc
fstps
imul
inc
mov
jo
xor
mov
loope
lret
ljmp
adc
in
mov
out
ds
addr16
aaa
cmp
mov
push
mov
adc
cmp
xchg
jle
or
in
inc
jmp
cmpsb
xor
pusha
push
sbb
mov
inc
dec
pusha
jmp
xor
inc
mov
xor
mov
jns
mov
cltd
and
lock
test
mull
in
and
popa
jle
or
aaa
mov
cli
outsb
es
xchg
mov
fidivs
fs
pop
sti
xor
insb
cmpsl
inc
and
nop
fstpl
sub
shrl
fdivrl
mov
xor
daa
inc
xor
bound
ja
cmc
adc
xchg
scas
mov
and
push
xchg
int3
xchg
add
sbb
sub
jp
xchg
xchg
stos
lds
fwait
es
test
cmp
popa
test
iret
mov
push
mov
mov
and
pop
out
adc
add
mov
xchg
jno
xor
pop
xchg
iret
inc
xlat
notl
pop
outsl
xor
push
xchg
cmp
roll
cwtl
and
mov
bound
sarb
xchg
mov
pop
popf
xor
pushl
rcrl
jne
fcoml
pop
pop
ret
sub
mov
fwait
jecxz
inc
int3
xchg
addr16
cmp
aas
ret
ret
xchg
mov
inc
aad
jb
xchg
mov
divl
pop
xchg
outsl
mov
push
add
mov
and
ffreep
iret
xchg
ret
and
and
leave
mov
ljmp
add
sbb
test
adc
sbb
dec
fwait
xchg
push
cwtl
adc
mov
cwtl
fdivrs
mov
ja
sti
out
fmull
sub
and
jbe
hlt
mov
cwtl
sub
sbb
mov
mov
subb
mov
sub
pop
inc
add
push
sbb
pop
test
frstor
xor
push
inc
cmp
inc
test
insb
pop
xor
subl
sbbl
test
mov
mov
es
mov
push
dec
sbb
jl
add
or
mov
arpl
push
xor
shr
add
aaa
cltd
jnp
subl
mov
lcall
jno
outsl
in
std
nop
cltd
and
jge
mov
and
mov
jge
outsb
dec
repz
sarb
mov
mov
pop
jmp
sub
pop
dec
dec
decl
jbe
and
dec
dec
stos
stc
xchg
loopne
sti
repnz
mov
jp
jne
pop
push
test
mov
bound
pop
mov
or
fiaddl
out
out
lret
pop
sbb
mov
push
sbb
jp
cmp
or
ja
insb
cmp
into
jns
cmp
mov
std
cmp
in
mov
or
in
cld
mov
xor
mov
adc
jl
xor
mov
and
jmp
test
xchg
ficoms
sbb
jl
imul
xchg
inc
sub
and
decb
mov
pop
dec
inc
sub
jmp
mov
lds
cltd
addr16
mov
in
jp
shrl
add
adc
jmp
cmpsb
shrl
mov
es
imul
push
movsb
pop
imul
jmp
cltd
cltd
mov
repnz
pushf
push
mov
xchg
sbb
sbb
dec
fisubl
xchg
xor
xchg
test
and
or
into
cmp
or
repz
add
cmp
add
pushf
inc
lret
mov
xchg
nop
pop
cld
cwtl
mov
mov
outsl
push
xchg
jnp
aam
int3
push
icebp
mov
inc
pusha
pop
cli
adc
inc
xchg
stos
es
int
sub
pop
jmp
xor
jnp
pop
mov
insb
mov
dec
or
pop
jnp
and
add
jge
movsl
push
or
cmp
and
sbb
imul
repnz
pop
add
cmp
sub
cmp
incb
clc
aam
cmc
pop
mov
push
shll
movsl
sbb
rolb
add
adc
and
push
add
into
mov
pop
adcl
cs
andb
or
repnz
push
mov
fwait
or
jle
mov
cmp
test
fstpt
mov
addr16
nop
ret
and
jmp
fldl
mov
jmp
rorl
arpl
stos
shl
push
je
cltd
xor
cmp
mov
stos
clc
pop
add
arpl
out
lds
jmp
insb
mov
std
mov
nop
xchg
in
popf
lcall
dec
lret
jns
out
out
add
fcompl
cmpsb
add
jne
mov
mov
das
fmulp
or
push
loopne
mov
pusha
add
lcall
jne
xor
pop
ja
cmp
inc
add
mov
pop
shr
xor
fldenv
fsubr
lcall
rolb
pop
sbb
into
cli
movsl
ljmp
xor
fwait
dec
inc
sbb
pusha
mov
xchg
xlat
outsb
inc
mov
negb
jl
mov
insb
sub
mov
xor
aad
cmp
fcompl
jb
hlt
das
aam
and
in
mov
and
and
arpl
jmp
sub
pop
test
rorl
add
hlt
adc
frstor
sub
roll
jle
mov
sub
mov
lret
test
ret
and
mov
sbbb
or
add
inc
mov
sub
cmp
mov
out
jecxz
das
outsb
jmp
adc
jmp
cmp
arpl
xchg
in
notl
insb
shl
ror
xchg
adc
imul
test
imul
test
add
out
dec
lods
ds
and
xchg
icebp
xchg
pop
in
testb
mov
pop
mov
cs
add
xor
scas
loope
aas
fcomp
mov
push
sub
sahf
cmpl
xor
dec
fidivs
lock
repnz
out
or
push
les
lds
xchg
scas
in
pop
adc
xlat
mov
jp
imul
add
pop
xchg
imul
dec
mov
jne
movsl
fstp
jmp
inc
cmpsl
mov
sbb
lods
adc
insl
xchg
aad
xchg
mov
aas
mov
imulb
cmp
jo
cwtl
std
mov
inc
in
cmc
push
xor
xchg
mov
stc
and
pop
push
arpl
mov
or
stc
mov
add
aam
xor
fcoms
xchg
test
cmp
shll
negl
roll
push
inc
or
add
push
add
insb
cmpsb
fldz
fcmovne
xchg
sub
mov
repz
push
mov
leave
mov
popf
jle
jbe
test
test
cmp
cld
cmc
mov
leave
fs
ljmp
and
mov
hlt
lea
lcall
cmp
and
push
fiaddl
sub
mov
sub
fsub
cwtl
inc
leave
test
xor
sarb
sub
jns
push
pop
stos
pop
mov
movsl
xchg
lea
fs
ret
hlt
ja
scas
mov
fs
dec
jl
je
call
mov
lcall
call
push
jnp
push
lret
xor
mov
cmp
std
xchg
stos
fmul
mov
cmc
mov
shlb
iret
iret
xchg
mov
icebp
dec
das
iret
push
ljmp
push
out
out
jecxz
mov
and
rcll
pushaw
inc
mov
or
cwtl
imul
movsb
test
hlt
insl
push
mov
in
outsb
out
mov
sbb
push
in
jns
mov
push
adc
decb
testl
enter
addr16
mov
popf
cltd
lcall
loope,pt
ror
xchg
cmp
pop
xchg
push
push
cmp
pop
cli
ret
xchg
push
add
mov
fidivs
sbb
push
outsl
dec
imul
pop
cs
xor
fs
or
mov
jbe
mov
xchg
sub
cld
mov
cmp
mov
hlt
jp
roll
cmp
pushf
mov
cs
jae
jmp
bound
out
adc
call
mov
arpl
enter
imul
mov
pusha
pop
mov
mov
cmp
pop
inc
add
movsb
in
in
sarl
iret
sbb
push
mov
cs
push
sbb
rcll
mov
mov
inc
ss
jno
int3
pop
pop
insb
adc
sub
mov
dec
lcall
mov
test
and
fmulp
adc
pop
push
out
arpl
jb
xor
mov
mov
xchg
inc
sbb
out
pop
sub
in
jb
test
dec
push
test
test
sbb
test
mov
add
test
out
movsb
fmull
add
mov
pop
iret
fimull
loop
repnz
push
adc
sbb
add
add
lret
popa
inc
jnp
push
cmp
mov
cwtl
xchg
sahf
pop
xchg
bnd
inc
or
push
shlb
or
push
xor
sbb
inc
adc
cmc
mov
out
xor
iret
mov
jmp
mov
xor
mov
cmp
icebp
bound
and
in
mov
loop
test
jae
ja
in
scas
faddp
pop
push
leave
push
and
adc
mov
pop
addr16
or
inc
dec
or
repz
mulb
fimuls
fdivrp
push
xchg
aad
scas
xchg
jge
jl
cmp
fiaddl
mov
loopne
lret
mov
push
cs
or
jg
sub
pushf
mov
je
pop
movsb
pop
stos
or
outsl
incb
add
cli
sbb
and
push
in
lret
lods
sub
mov
mov
xor
jae
or
adc
jg
lods
das
jnp
daa
xchg
js
sarb
add
out
jge
inc
jno
andb
mov
test
mov
inc
jb
insb
xor
fildll
or
ja
adc
out
scas
or
and
lahf
xchg
std
xchg
xchg
mov
out
mov
mov
outsb
subl
pop
fs
xchg
scas
mov
in
cmp
hlt
lods
sarl
jge
dec
cmp
sub
outsl
test
push
cwtl
push
cmp
mov
cs
stos
cmp
test
adc
xchg
xchg
rcr
rolb
sub
std
mov
xor
jae
adcl
add
aas
insl
into
faddl
fs
jno
ret
adc
dec
fs
lcall
aad
scas
inc
test
mov
cld
push
inc
xlat
or
push
in
test
cli
cwtl
adc
cwtl
mov
inc
cmp
test
mov
jb,pt
sbb
xchg
cld
data16
xchg
mov
dec
mov
push
jge
cmc
icebp
rcrb
sub
mov
addr16
popa
inc
scas
jo
lds
and
adc
jo
lods
inc
adcl
mov
pop
cpuid
hlt
movsb
xchg
add
popf
dec
sbb
mov
sub
dec
pop
push
and
ljmp
nop
cmpsl
xchg
mov
and
hlt
icebp
in
push
adc
dec
loopne
sbb
jnp
cmp
lcall
mov
arpl
add
cmp
and
add
adc
push
shlb
jns
sub
in
popf
and
ror
push
notb
sbb
lahf
or
mov
cmpsb
pop
xchg
ret
pop
repnz
aad
cli
mov
cmpl
fcoms
aad
lea
xchg
repz
lcallw
ffree
enter
dec
iret
loopne
push
out
sub
lock
shll
push
clc
cmp
sbb
push
mov
mov
adc
call
add
shrb
sbb
push
pop
lock
pusha
dec
test
ret
pop
or
js
xor
adc
dec
add
int3
or
add
shll
lods
cld
clc
daa
adc
scas
add
add
push
inc
out
idivb
test
xchg
repz
imul
mov
rcl
pmulhuw
dec
notl
push
push
adc
nop
test
lods
push
imul
lret
xor
inc
and
push
inc
adc
push
cmc
and
jbe
mov
aaa
mov
repz
movb
bnd
lods
xchg
jne
push
addb
inc
pop
add
cltd
fldl
cmp
imul
xchg
or
jmp
ds
mov
cmp
mov
cmp
lock
jg
cmovae
pop
out
mov
jp
push
ljmp
inc
shl
ljmp
adc
int
inc
mov
gs
xor
xor
inc
cmp
mov
push
loopne
adcb
pop
mov
inc
or
sbb
pop
mov
sub
data16
scas
or
insl
sub
inc
add
adc
add
sub
fsubrs
les
xchg
or
out
jge
add
lods
and
push
and
dec
pop
mov
sub
push
cmc
sbb
or
pop
sub
icebp
dec
sti
lahf
lock
daa
pop
jnp
dec
lock
int3
les
mov
std
imul
movsb
mov
dec
cmpsb
stos
jne
adc
cli
mov
cs
adc
in
ss
pop
ja
add
out
scas
cmp
daa
mov
addr16
mov
push
cmp
in
loopne
dec
inc
rclb
leave
rclb
addb
lcall
mov
pusha
aad
sub
push
sbb
jg
std
pop
mov
nop
and
popf
lahf
sbb
pop
jno
adc
mov
sub
sbb
bnd
or
rorl
add
mov
incb
pop
cmp
cmp
fwait
les
xchg
inc
and
outsb
inc
xor
fcompl
jmp
data16
and
stos
xchg
mov
pop
jecxz
or
decl
pusha
mov
daa
mov
push
xchg
mov
mul
ret
and
mov
fwait
js
add
xchg
sti
stc
sub
pop
xchg
popa
aad
rcll
or
outsl
xchg
and
inc
dec
ret
out
popa
std
lret
add
inc
sti
sbb
dec
sub
fsubrs
out
outsl
lods
sbb
pop
pushf
repnz
insl
repz
popf
cs
dec
test
sti
xchg
sbb
push
mov
mov
cmpsl
cmp
stos
mov
aam
inc
sub
mov
jg
mov
and
fstps
inc
in
out
dec
jo
cmp
lahf
jl
in
fistpl
lahf
sti
cmpl
sti
addb
inc
outsl
ss
aam
cwtl
scas
sti
add
stos
sarl
jl
adc
jecxz
dec
flds
into
xlat
cmp
stos
test
call
push
les
inc
mov
cwtl
jae
lret
and
sbb
sub
aad
int3
pop
sub
or
insb
loope
ret
jle
add
sub
imul
cmp
int3
nop
sub
std
cmpb
iret
xor
cmpsb
int
shrl
mov
mov
call
lret
ret
cltd
cmc
loope
into
or
rcrl
cld
outsl
outsl
jge
ds
lcall
dec
fs
mov
push
gs
push
inc
dec
or
cmpsb
lea
jo
out
vmulps
jno
push
loopne
push
or
adc
lock
mov
jp
push
outsb
outsl
outsb
sti
ror
lret
lods
mov
popf
push
sahf
add
ror
pusha
mov
test
pop
push
add
aad
dec
inc
rcrl
adc
add
outsb
mov
aam
adc
lahf
hlt
sti
jae
loop
sub
hlt
out
out
shll
lret
popf
arpl
dec
out
lods
lret
mov
test
pop
adc
adc
mov
mov
stos
aas
call
cmp
insl
fnstcw
int
fmulp
and
xor
js
xchg
xor
adc
lret
fiaddl
xor
out
cmpsl
dec
sub
sahf
fdivs
fwait
outsl
cmp
cmp
mov
les
fldt
dec
fistpll
pop
xor
mov
aas
iret
mov
inc
nop
xor
jns
popf
mov
pop
and
rolb
xchg
les
ret
jnp
cmpsb
lcall
stos
aad
out
cld
cltd
out
mov
pop
adc
lock
xor
cmp
out
cmp
pop
lret
adc
push
mov
jbe
dec
jg
push
sahf
mov
sahf
les
aas
bound
arpl
xchg
lock
push
iret
inc
loope
mov
lock
cmpsb
jle
dec
pop
frstor
inc
or
mov
mov
in
stos
sub
fildl
fnstenv
and
arpl
or
stos
lahf
dec
loop
inc
scas
fs
or
in
mov
test
popf
repnz
mov
mov
add
int3
sub
xor
mov
lahf
ss
lds
jno
lcall
ds
mov
adc
mov
dec
outsl
push
xor
jbe
push
movsb
cmp
cmp
ret
mov
lcall
in
lds
jle
cmpsb
sbb
mov
jb
jnp
inc
fwait
movsb
arpl
das
mov
jae
movsb
xor
shll
mov
jnp
jmp
subb
call
adc
imul
fdivs
sti
loop
lret
sub
insb
dec
dec
sbb
adc
ljmp
sbb
sub
jb
pop
jp
cltd
pop
rcll
fcomps
ja
insl
faddl
and
divb
pushf
insb
dec
aad
popf
jno
jmp
cs
mov
subl
imul
push
jmp
xor
insb
sub
jl
pushf
mov
xorb
jns
mov
lds
lret
out
dec
and
clc
cmp
push
sbb
add
mov
sub
shrb
cmpsb
pusha
cmp
inc
pop
fwait
push
psrlq
rcr
repnz
in
cmp
jmp
pop
or
mov
pop
cli
int3
and
iret
or
test
test
inc
fistl
sbb
cltd
xchg
in
sub
out
clc
xchg
push
ja
cmp
sub
mov
cmp
cmpsl
ljmp
inc
std
add
jl
mov
iret
cmp
test
ljmp
dec
adc
push
nop
outsl
movb
jo
rcrb
or
sbb
sahf
leave
fucomi
mov
add
testl
and
adc
scas
outsb
scas
sbbb
pop
jnp
push
sbb
idivl
sub
mov
inc
shrb
dec
inc
dec
fsubl
iret
mov
jecxz
ret
pushf
pop
jmp
xor
mov
add
call
mov
fldenv
mov
mov
cs
adc
les
divl
int
mov
ljmp
push
lods
dec
int
adc
es
pop
cmp
xchg
pusha
int
notb
add
adc
roll
sub
clc
sub
mov
repz
int
mov
sti
cwtl
mov
xor
adc
xor
jnp
mov
push
lea
mov
icebp
and
cmp
ret
mov
cmp
outsl
add
pop
xchg
das
xchg
cld
jb
xchg
rcrb
cmp
fimuls
add
dec
test
mov
pushf
dec
xor
test
mov
push
lret
test
negl
cmp
push
mov
in
and
add
jnp
xchg
push
fidivrs
fcomi
insl
stc
xchg
pop
push
andb
add
dec
lret
in
sti
int3
adc
push
push
cli
and
jmp
cmpb
cmp
cmp
mov
adc
movsb
adc
cmp
push
mov
jns
aad
mov
scas
mov
push
mov
stos
enter
in
mov
or
stc
test
cmp
push
dec
lock
lret
and
adc
testb
lahf
jmp
lds
jno
inc
jmp
aaa
lahf
adc
adc
test
data16
sub
leave
cmpsb
lret
subl
adc
sbb
and
dec
dec
push
out
inc
push
out
scas
push
cmp
cmp
sbb
out
cmc
mov
dec
ficomps
das
xor
gs
push
adc
mov
fisubrl
push
pop
test
into
mov
mov
loopne
insb
mov
test
xchg
lahf
push
scas
insb
mov
xor
sub
inc
xchg
push
divb
xor
jno
je
dec
adc
out
push
mov
and
dec
shll
push
pop
push
jns
mov
cld
lret
sbb
ret
xchg
mov
xchg
mov
in
test
dec
push
je
mov
jo
dec
orl
push
sbb
fisttps
cmp
adc
mov
divb
imulb
or
or
stc
mov
clc
in
dec
push
rcll
cmc
int3
sub
jle
add
cmpsl
xlat
imull
cmp
ret
mov
cmp
push
stos
icebp
aas
pop
jle
mov
pop
add
dec
lock
test
loopne
pop
fcmovbe
insl
pop
mov
movsl
shlb
out
sahf
aaa
and
lret
fbstp
enter
adc
inc
sbb
popa
cmp
movsb
adc
add
inc
icebp
scas
inc
pop
inc
add
fs
xor
mov
mov
lds
inc
jno
push
xchg
cmp
jg
and
mov
push
xchg
or
pop
add
add
push
bound
pushf
stos
stos
movsb
jne
lods
add
jae
push
fnsave
insl
repz
sahf
pop
scas
sbb
clc
adc
movsl
outsl
ss
lea
ret
stos
lds
mov
lods
mov
fs
data16
lea
ja
adc
scas
push
inc
lods
into
add
xor
enter
cmp
sub
clc
mov
inc
dec
mov
les
mov
dec
jo
popf
xchg
ljmp
pushf
mov
add
into
adc
sub
and
jbe
cmp
insl
mov
cmp
cwtl
outsl
shl
in
sbb
jl
jns
inc
clc
repz
lods
ror
cwtl
lods
or
cmc
adc
pop
or
cmpb
mov
fiadds
bound
gs
add
cld
bound
lods
mov
sub
add
insb
pop
sti
push
add
stc
xchg
sub
xchg
inc
jmp
pop
xor
cmp
jge
call
in
fstl
dec
mov
fstl
push
mov
leave
sbb
je
jmp
test
mov
ret
out
push
push
and
pop
push
add
cwtl
ret
enter
jmp
inc
jp
cmp
add
and
mov
mov
pop
add
adc
jle
jmp
mov
pop
xlat
jp
ret
stos
out
filds
dec
cmp
dec
fisubs
pop
mov
sub
pop
xor
repz
push
or
je
mov
in
jns
cmc
mov
lcall
call
jbe
js
and
lds
jnp
into
adc
cld
mov
jp
leave
fsts
mov
inc
mov
xor
daa
inc
jmp
jne
mov
jecxz
or
lods
push
jo
mov
sbb
xchg
leave
or
std
movsb
mov
or
mov
sbb
aad
movsl
leave
es
push
bound
pushl
subl
clc
stos
sbb
pop
dec
test
pop
pop
sub
std
addr16
sahf
and
jo
pushf
mov
cmpsb
and
mov
aaa
and
femms
into
out
mov
pop
mov
inc
xchg
pop
add
pop
outsl
push
mov
sbbl
pop
mov
dec
push
mov
aad
int
idiv
les
stos
mov
out
popa
sbb
mov
pushf
push
jns
fs
pushf
sub
push
push
andl
xchg
push
orb
push
ja
xchg
loope
or
icebp
mov
and
insl
ret
ljmp
in
sbb
pop
fsubl
das
and
ds
repnz
out
xor
ficoms
fwait
out
xlat
mov
mov
cltd
cmpsb
push
cmpsl
or
xor
inc
insb
xchg
push
fnstcw
adc
loopne
rolb
jge
mov
xor
or
jl
idivl
cmp
add
or
and
pop
xchg
in
and
pop
jg
in
or
mov
incl
shrl
in
sub
stos
push
xchg
adc
mov
and
sub
push
idiv
ret
dec
sub
xchg
add
push
rol
mov
insl
repz
push
push
je
out
push
sahf
sbb
cld
aam
int3
xchg
shrl
cmc
addb
int3
jle
adc
adc
iret
push
ss
and
push
mov
fdivrl
dec
lea
add
test
or
int
or
mov
dec
add
push
pushf
jne
mov
fsub
aad
mov
repz
mov
out
inc
ret
dec
mov
and
pop
ret
jns
cmp
hlt
scas
push
pop
aad
insl
ljmp
in
pop
fmuls
fmuls
cmp
or
xor
movb
imul
lock
push
cmp
jne
add
xchg
sbb
test
and
mov
cmp
sti
stc
dec
loop
pop
lds
adc
popf
dec
dec
jle
add
fdivs
scas
push
push
xor
jl
outsl
imul
mov
loope
popa
lea
fcoml
xor
jecxz
push
testl
aam
add
cmp
add
xchg
fisubs
in
test
cmc
std
xor
sbb
repnz
fsubp
aad
jge
mov
xor
sbb
push
rclb
adc
cli
daa
push
pop
dec
call
mov
jmp
push
dec
mov
insl
cmp
out
cwtl
or
inc
mov
mov
adc
xor
sub
mov
loop
sahf
outsb
mov
mov
movsl
jbe
or
sti
das
jle
adcl
out
ss
jge
pop
stos
push
push
mov
sub
mov
movsb
cmp
arpl
mov
dec
int
lahf
popa
gs
xor
arpl
bound
pop
imul
jmp
sbb
iret
inc
mov
pop
sub
mov
and
rorb
or
mov
outsb
data16
out
xor
sbb
xchg
sbb
mov
inc
sbb
jp
rorb
lock
adc
ror
repnz
xorb
add
inc
shrl
int3
cli
jne
out
inc
fdivrs
stc
xor
xchg
out
jnp
aas
push
dec
push
mov
inc
scas
add
adc
adc
push
jge
push
test
inc
test
inc
insb
or
inc
std
in
xor
dec
pop
jbe
test
mov
mov
pop
sub
inc
icebp
out
test
jmp
xor
cwtl
fidivrs
cmp
outsb
dec
adc
xor
sub
imul
inc
push
loope
lods
pop
scas
jae
pop
je
movsb
ret
pop
pushf
xchg
jl
out
adc
and
mov
cmpsl
xor
and
rcll
clc
mov
add
xor
add
sbbl
imul
test
sub
jne
sti
mov
scas
pop
outsb
mov
pop
xchg
sbb
inc
xor
mov
push
and
mov
mov
and
je
loopne
add
stos
add
jle
adc
dec
and
in
stos
mov
icebp
mov
adc
adc
cltd
inc
fsubr
out
sub
pop
rorl
push
jo
sub
inc
repnz
jecxz
mov
out
push
sti
mov
ss
hlt
test
cmp
fmulp
rolb
push
ds
mov
fwait
ret
in
arpl
jne
in
inc
push
cmp
xchg
cmp
jbe
mov
xor
inc
addr16
and
and
pop
stos
add
mov
icebp
outsb
aas
mov
scas
lret
xor
mov
fildl
mov
negl
push
sbbb
mov
inc
mov
xchg
in
push
sbb
add
iret
sub
scas
repnz
push
enter
xor
jb
fistl
xchg
lcall
or
ljmp
cmp
cli
test
mov
sbb
out
ljmp
bound
popf
adc
sbb
imul
cld
mov
sub
stos
js
scas
into
mov
pop
mov
jae
call
cmp
mov
pop
xchg
lcall
cmp
mov
mov
inc
imul
lcall
fdivrs
es
in
lock
pop
jmp
push
stos
cmp
and
fcomp
adc
es
lea
std
sub
es
loopne
mov
fdivrl
in
pop
shll
mov
jns
push
in
xlat
dec
aad
loopne
cli
aad
js
sub
push
pop
and
sub
cmpl
jmp
pop
lret
mov
and
sahf
es
sbb
js
mov
push
inc
sub
inc
jnp
jne
mov
and
aaa
push
mov
sbb
lods
pop
std
or
pop
jg
jg
jmp
add
inc
cwtl
outsb
mov
lock
inc
arpl
insl
insl
dec
js
aaa
push
and
lock
push
xchg
jp
loopne
jle
mov
out
ljmp
loop
inc
mov
orb
inc
pop
loop
or
mov
ret
rcrb
mov
xchg
out
divb
dec
std
inc
cli
or
mov
xchg
pop
rolb
jne
sbb
pop
popa
int3
pop
cmpsl
lcall
and
sti
jnp
test
mov
cwtl
add
inc
or
cmpsl
das
or
mov
incl
xor
xchg
fisttps
pop
or
and
dec
lret
inc
lea
sbb
pusha
mov
movsl
in
clc
pop
cmp
movsb
pop
lret
lret
sahf
xchg
sub
gs
xor
stos
pop
cmp
nop
dec
imulb
ss
fidivrs
inc
and
adc
daa
mov
mov
mov
lahf
das
movsb
pusha
sub
and
jbe
dec
mov
cmp
test
cmp
push
mov
jno
dec
ss
sbb
jo
mov
cmpb
aad
imul
ror
xchg
rclb
adc
cmp
inc
cs
fstpt
f2xm1
adc
clc
xlat
lods
adc
div
je
mov
gs
adc
sbb
jmp
movsl
push
inc
and
and
jecxz
ss
inc
jp
lea
xor
or
roll
and
cld
sub
aaa
add
in
sub
loop
int
lcall
inc
call
mov
inc
notl
mov
jo
test
pop
shlb
jb
push
lfs
movsl
xorb
sub
sub
cs
dec
gs
xor
adc
adcb
pop
daa
fsubrl
ret
push
outsl
jl
pop
mov
out
push
shll
pop
pop
popa
ficompl
pop
orb
dec
repnz
sti
add
mov
fiadds
add
pop
das
aam
and
mov
in
dec
or
jp
cmp
inc
push
popa
movsb
in
test
or
std
shrl
pop
arpl
mov
popf
aam
icebp
jmp
mov
loopne
decb
sub
lcall
or
ret
sbb
jl
aaa
pop
or
fstpt
sti
mov
bound
mov
aam
push
data16
sahf
cmp
cltd
fistps
into
add
mov
mov
ret
in
rclb
mov
cli
jg
mov
ljmp
mov
lret
cmc
xchg
testb
push
test
daa
clc
pop
push
jg
es
je
jne
fbld
cmpsb
data16
pop
push
mov
mov
mov
pushl
in
mov
push
pusha
sub
xchg
fwait
xchg
xor
and
outsb
ror
adc
pop
mov
hlt
mov
imul
adc
jbe
dec
xor
jb
xchg
sbb
loop
dec
xchg
and
adc
sub
bound
test
mov
jl
sub
data16
mov
jle
imulb
jecxz
mov
cs
sarb
pop
clc
movsb
or
in
neg
dec
pop
ds
lds
and
inc
sbb
xchg
mov
xor
lcall
or
sub
dec
in
adc
xor
jecxz
xchg
and
movsb
std
mov
cmp
adc
stos
jbe
inc
addr16
push
lret
repnz
xchg
add
sub
repnz
mov
ret
push
mov
lret
xchg
lret
adc
sarb
sbb
mov
les
in
xor
sar
inc
fildll
push
movsl
jge
push
jg
scas
push
cwtl
js
pop
repz
sbb
mov
loop
xor
xchg
iret
mov
rclb
aam
mov
dec
inc
cmpsb
pop
test
das
scas
lods
add
daa
push
in
push
movsl
cmp
adc
dec
jns
bnd
loopne
mov
inc
fcomip
cs
pop
test
sbb
arpl
mov
ja
xchg
and
pop
pop
pushf
adc
mov
arpl
dec
push
mov
push
idivb
jmp
in
in
dec
dec
mov
rcll
stos
xchg
or
xchg
imul
mov
lret
inc
dec
or
pop
push
insb
jnp
dec
mov
mov
mov
fstps
jae
add
daa
loop
sbb
movsb
outsl
add
notb
ljmp
movsl
scas
ljmp
shll
mov
xor
cmpsb
daa
orb
int
nop
or
arpl
test
jne
clc
push
xchg
xor
cs
in
lock
lcall
cld
popf
mov
mov
mov
push
cmc
call
cmp
scas
data16
test
dec
adc
jle
xchg
pop
cmp
enter
test
cwtl
mov
inc
and
pop
mov
push
testl
mov
jns
xchg
sub
loop
xchg
sbb
sub
mov
mov
fs
inc
or
xchg
pop
inc
popa
inc
pop
lret
sbb
mov
dec
idivb
xlat
pop
add
push
push
shlb
shrb
xor
xchg
xchg
sbb
popa
fisttps
inc
and
scas
in
push
mov
mov
ds
and
addr16
arpl
xchg
mov
fdivrp
out
mov
repnz
mov
cmp
xlat
push
mov
sbb
push
sahf
clc
dec
rorb
lods
cmp
insb
in
mov
sbbl
cwtl
mov
in
jmp
push
jp
dec
mov
or
jno
add
push
shrb
cmp
adc
xor
push
enter
ljmp
sbb
lds
mov
mov
lret
jo
mov
lods
test
clc
fdivrl
popf
xchg
mov
or
data16
lret
enter
adc
lahf
xchg
mov
test
inc
cmp
leave
xabort
ds
push
adc
scas
and
cmp
jl
mov
mov
mov
pop
stos
xor
push
stc
add
mov
repz
nop
xor
cmp
sti
xchg
sub
dec
mov
pusha
sti
fistps
lods
push
xchg
popa
dec
roll
je
sahf
addr16
loope
inc
push
pop
jp
push
int
std
mov
push
xchg
popf
xchg
fsubrl
inc
test
sub
push
rorl
xlat
sub
in
xor
icebp
fwait
rcrl
jnp
fistpl
std
jle
jns
push
sbb
popf
rcr
insb
outsl
xchg
cmc
arpl
mov
adcb
out
push
jecxz
jle
mov
jb
and
lret
popf
in
push
pushf
mov
in
lahf
out
cmp
push
cmp
adc
inc
shrl
xor
sub
jne
jo
icebp
in
mov
loopne
push
aad
jmp
test
into
dec
add
repz
sahf
jb
popf
call
push
shll
aas
sub
lret
sub
into
push
ret
sbb
je
jge
pushf
jnp
push
adc
movsl
js
adc
or
aam
leave
int3
mov
inc
jle
xchg
fwait
into
stos
std
popf
inc
jmp
in
xor
addr16
inc
dec
stc
ret
mov
rep
and
movsb
filds
push
pusha
inc
lcall
xchg
jg
inc
popl
jae
push
xchg
xchg
loopne
jns
das
or
push
data16
pop
pop
test
or
cmc
mov
fstps
push
nopl
aas
sbb
push
cmp
xchg
sub
icebp
repnz
jp
rcrb
or
insb
lods
hlt
mov
push
jno
ficoms
cs
xchg
cmpb
test
adc
jns
incb
fldcw
jmp
out
sbb
mov
shl
inc
repnz
loope
loop
sbb
push
cmpsb
aad
push
mov
adc
xor
shr
mov
push
adc
mov
push
out
mov
loope
adcl
sub
movsl
bound
push
lcall
movsl
jle
orl
pop
sahf
adc
inc
insl
push
cs
lret
sub
mov
and
sub
jle
test
mov
and
shr
iret
adc
pop
jl
les
mov
lods
loop
fcomps
push
movsb
fsubs
inc
lods
pop
pushf
xlat
leave
pop
add
dec
lcall
and
fisubrl
adc
scas
mov
popa
mov
push
mov
push
in
xor
cmpsb
clc
fnstenv
mov
sti
nop
daa
das
mov
sti
fdivr
inc
int
sbb
push
sub
in
jge
mov
ja
mov
imul
push
xor
mov
scas
adc
arpl
nop
mov
sahf
push
inc
and
mov
or
adc
push
rcrl
and
mov
addr16
dec
mov
cmp
and
adc
into
mov
or
push
lods
push
jp
insl
dec
cmpsl
mov
add
cmpsl
test
add
int3
jge
cmc
dec
inc
movsl
mov
ja
sbb
push
push
inc
in
dec
lcall
cmp
scas
jecxz
mov
lret
insl
daa
loopne
ret
out
insb
inc
mov
sarl
xor
in
icebp
insl
sar
cmp
pop
jl
cmpsb
pop
pop
mov
inc
lret
iret
jp
lret
call
cmpsl
enter
cmp
inc
fisttpl
je
je
dec
outsb
xchg
inc
pop
add
fiadds
adc
iret
mov
xor
sbb
jns
std
and
js
add
dec
cmpsb
test
xchg
into
push
jo
icebp
cwtl
pop
lods
mov
icebp
hlt
inc
mov
addr16
pushf
movsl
pop
test
cmp
fwait
dec
add
ja
movsb
or
mov
cli
lahf
add
sbb
pop
mov
in
das
mov
inc
mov
and
in
pop
pop
xor
jo
sbb
in
jmp
sbbl
xor
push
out
dec
pusha
adc
stos
mov
mov
mov
pusha
loopne
mov
pop
xchg
jo
stos
sub
icebp
imul
push
cmp
or
xchg
lahf
push
mov
das
stos
stos
lods
sbb
stos
in
mov
in
das
aas
ret
cmp
into
cmc
add
inc
cltd
pop
pop
shl
or
mov
ss
fsubrp
sti
mov
push
movsl
or
pop
fmuls
dec
ds
xlat
adcl
sbb
jmp
fmuls
jnp
cmp
pop
add
xor
repnz
jne
push
adc
inc
lahf
inc
add
dec
pusha
sub
inc
mov
mov
bound
mov
cwtl
dec
fdivrs
inc
push
mov
mov
mov
pushf
fsubrl
out
sti
lods
insb
pop
push
repz
dec
test
cs
fistps
mov
test
push
outsb
pop
and
mov
pop
push
lcall
dec
fs
mov
pop
cld
jns
cmp
sbb
data16
lret
jnp
int
pop
popf
cmp
jmp
dec
sub
inc
push
rolb
xchg
or
mov
lock
sub
xchg
or
lahf
dec
movsb
cmp
adc
inc
out
cmp
cmp
sub
jmp
out
arpl
or
loope
frstor
adc
xchg
bound
add
nop
scas
mov
sub
fists
pop
cmp
push
mov
inc
adc
daa
int3
scas
fidivrl
jno
ljmp
in
jae
jmp
xor
pop
add
add
sbb
xor
jmp
scas
xchg
sub
xchg
aam
imul
aaa
imul
mov
push
pop
xlat
sbb
leave
pop
pop
sti
jo
hlt
xchg
and
scas
test
fwait
out
cwtl
pop
pusha
or
aad
and
aas
ret
lahf
jae
dec
mov
pop
add
sub
mov
mov
add
sbbl
idivb
mov
mov
mov
pop
mov
sub
insl
add
lds
aas
imul
cmp
mov
cld
xor
cwtl
das
fisubl
jne
inc
sar
jns
loopne
xchg
clc
push
fisubl
xchg
out
cmp
mov
cwtl
and
push
fistps
aas
pop
out
data16
pop
mov
sbb
dec
xor
imul
loopne,pn
lock
movl
mov
xchg
xchg
dec
divl
cmpl
mov
adcl
xor
push
xor
mov
ds
and
jmp
repz
psraw
stos
imul
mov
jno
or
xchg
xor
xor
add
mov
adcb
dec
lods
or
outsl
je
adc
push
mov
cltd
addr16
dec
scas
popf
mov
loopne
xor
lds
xor
jge
mov
inc
sub
test
mov
jp
popl
sub
pop
cmp
lds
xchg
adc
js
rcr
mull
lret
and
leave
int
mov
cmp
xchg
jbe
aaa
les
int
es
loopne
jle
ljmp
sti
es
fcoms
sbb
mov
in
add
nop
std
lea
jmp
mov
out
pusha
in
push
inc
xor
out
divb
dec
jmp
mov
or
mov
pop
xor
scas
cmp
sub
faddl
ret
sub
popa
push
sbb
mov
ret
jle
sbb
int
push
mov
dec
pusha
sbb
hlt
mov
push
inc
jno
shlb
jle
sub
ds
cmp
shll
jnp
pop
ss
sahf
movsb
dec
test
add
mov
push
rcrb
mov
inc
push
sbb
mov
push
inc
dec
enter
scas
add
outsl
cmc
mov
arpl
fisubs
inc
adc
lods
push
jns
xchg
sbb
mov
jnp
sub
jl
mov
pop
imul
jnp
cli
jo
dec
or
sub
subl
andb
nop
cmc
mov
ss
int
fimuls
loop
mov
jo
leave
repnz
mov
jb
sub
sub
or
pop
jge
jge
fwait
sbb
xchg
shrb
mov
out
inc
pop
ss
add
cwtl
cld
or
mov
popf
mov
pop
jecxz
pop
insl
popf
aam
mov
push
or
fwait
xor
mov
add
push
scas
scas
adc
ficomps
lret
push
in
add
js
stc
stos
xlat
sbb
jb
jb
jge
sub
lret
pushf
in
jo
mov
mov
int3
nop
inc
orl
adc
jle
sub
call
xchg
es
or
jl
dec
lock
inc
lock
rolb
mov
repnz
add
loopne
mov
shll
sbb
jge
and
push
loop
imul
and
dec
lock
out
jp
push
xor
jb
push
mov
cmp
fdivrs
int
loopne
aad
xor
and
cmp
lret
das
clc
mov
popf
inc
ficompl
clc
inc
xchg
imul
sub
xchg
adcb
stc
out
push
inc
xchg
mov
dec
jns
dec
push
in
xchg
out
imul
aam
pop
add
sti
cmpsl
out
inc
cmc
pushl
cmp
mov
divb
shlb
cmp
mov
stc
aas
aas
mov
in
and
lea
mov
int3
daa
ljmp
push
pusha
nop
fwait
jl
or
mov
mov
fidivs
cmovnp
fistl
push
js
fidivs
sbbl
mov
fadds
push
pop
cmpsb
pushf
fisttpll
hlt
xlat
movsl
or
in
aas
sub
aam
aas
cmpsb
and
data16
cmc
pop
and
sti
mov
dec
das
mov
popa
mov
out
leave
or
sbb
aas
mov
sahf
add
mov
loope
mov
push
push
bound
xchg
mov
jb
imul
or
sub
mov
mov
fstpl
gs
fisubl
sbb
jns
movsb
lret
mov
aad
ljmp
mov
out
movsl
push
lea
les
in
jge
cld
nop
popf
xchg
cld
and
xchg
ret
jg
popa
mov
das
sub
push
jnp
sub
aaa
sub
fs
push
cmpsl
pusha
push
in
cs
ficomps
data16
lds
sbb
pop
shr
loop
push
push
jno
aad
mov
push
sbb
jns
xor
notb
bswap
or
sub
xor
shl
jne
jb
in
and
jae
and
jmp
cwtl
fidivs
xchg
adc
sbb
jo
stc
lret
mov
aas
pop
jns
add
insl
mov
jl
jne
jg
xlat
int3
xor
sub
imul
cmp
orl
popa
test
xor
scas
xchg
arpl
cmc
test
add
cmp
mov
out
addr16
sub
mov
shr
xchg
jle
pop
popa
jnp
rorl
stos
outsl
icebp
adc
pop
and
div
mov
fwait
cli
enter
and
and
sub
repz
jnp
mov
xchg
add
stos
add
mov
pop
in
mov
xchg
hlt
dec
pop
push
inc
jnp
ret
arpl
xor
jns
push
mov
stos
clc
jne
cmp
push
jno
and
and
in
dec
cmp
and
jg
push
ljmp
scas
loop
cmpsb
jp
dec
or
insl
pop
movsl
pop
push
lret
insb
dec
mov
cs
mov
push
loope
out
add
sbb
pusha
cmpl
mov
xor
jnp
in
mov
test
jmp
mov
fsubl
dec
add
pushf
xor
or
inc
pop
sbb
lock
add
mov
lret
jne
mov
repnz
or
fdivrs
pop
pusha
arpl
dec
xor
mov
mov
call
divb
leave
aaa
clc
jns
cmp
lods
mov
sub
ret
xor
imul
push
scas
icebp
fdivs
mov
dec
rcrl
mov
pusha
dec
stos
adc
cmp
adc
xor
inc
dec
scas
hlt
mov
insb
adc
sub
test
adc
popa
cmpl
mov
pop
push
fwait
xchg
xor
jecxz
lret
in
mov
das
sub
xor
and
xor
in
jg
nop
jg
cmp
inc
pusha
push
insl
dec
jmp
arpl
cmpsl
cltd
ficompl
push
mov
movsl
xchg
aad
mov
mov
sbb
push
sbb
xchg
mov
lahf
jp
jnp
daa
and
stc
sbb
aaa
sbb
les
sbb
sub
mov
fwait
push
outsb
icebp
fwait
daa
ja
jne
faddl
loopne
or
sbb
fidivrl
inc
sar
mov
out
cmc
cmp
into
sbb
test
pop
lea
rclb
ljmp
inc
pop
clc
push
xlat
sbb
or
test
mov
lret
dec
std
jp
ret
imul
fstl
jg
outsl
scas
cmp
xor
jo
shll
pop
pusha
bound
fimuls
mov
sahf
xchg
pop
xchg
aam
stos
test
pop
mov
adc
rcr
fdivl
pop
fs
gs
lods
jmp
push
push
xchg
jbe
addl
fmuls
jnp
mov
ja
dec
jecxz
arpl
stos
cmpsl
icebp
push
sbb
jge
lcall
ret
rorl
es
fsubl
call
mov
xchg
cwtl
stos
jo
cmp
imul
xchg
std
inc
push
insl
in
fbstp
cltd
xchg
les
mov
scas
outsb
cmp
push
or
cmp
sub
cmpsb
jae
shrl
icebp
cmpsb
in
jnp
push
aas
or
imul
mov
inc
inc
sub
aas
sub
xchg
inc
scas
mov
testb
lcall
pop
pop
xchg
lds
bound
hlt
jecxz
xlat
xchg
sbb
dec
dec
nop
das
xor
sub
movsb
aaa
inc
mov
push
pop
jge
stos
pop
sbb
mov
pop
pop
sub
xchg
mov
icebp
mov
imul
push
dec
add
mov
jmp
imul
mov
ljmp
jmp
jb
cwtl
push
hlt
test
loope
in
fnstsw
and
pop
testb
fdivl
outsl
loopne
sub
and
shrb
insl
push
leave
xor
sub
lret
cmpsb
adc
repnz
out
adc
dec
add
test
dec
xor
ficompl
gs
insl
mov
cs
pop
aad
jne
shll
sbb
enter
decb
stc
idivb
out
jnp
add
std
mov
push
lret
outsl
lock
lret
inc
cmc
and
fdivr
test
notl
cmp
xor
pusha
mov
xor
fcmove
mov
lock
stos
out
push
cmp
js
int
dec
sbb
and
sbb
insb
dec
mov
and
push
int
xchg
push
subb
sub
inc
sbbb
ljmp
js
adc
adc
shlb
push
or
outsb
cmp
sub
shl
in
mov
pusha
add
decl
jns,pt
cwtl
pop
int
cltd
sub
out
mov
ljmp
fists
cmpsl
stos
lcall
push
or
mov
scas
mov
xchg
cmp
shlb
pop
xor
outsb
ljmp
int
sbb
mov
imul
push
test
lahf
sbb
out
add
sbb
mov
shll
cmpsb
clc
fdivl
xchg
ret
pop
pop
xor
insb
out
pop
mov
xor
loope
mov
mov
sub
ret
repnz
mov
xchg
xchg
adc
lret
mov
sub
cli
adc
pusha
sub
sub
mov
call
mov
jge
in
mov
shrb
xchg
addr16
loope
adc
mov
mov
mov
test
xor
movsb
add
lods
ss
sar
icebp
mov
xchg
xchg
call
imul
adc
cwtl
stc
xchg
mov
shrd
cmpb
push
lds
aam
lock
push
push
mov
xor
or
pop
cmp
dec
jmp
mov
inc
adc
fnstenv
mov
and
sub
mov
sub
rcl
pop
cld
adc
adc
or
bound
pop
popf
jno
xchg
jb
push
outsl
data16
fnsetpm(287
push
lcall
mov
test
lret
xlat
cld
fidivs
jbe
add
fnstsw
arpl
push
push
dec
arpl
jae
out
cmp
loop
out
shlb
sbb
sub
fcomps
loopne
popf
dec
push
outsb
lea
rclb
xchg
loopne
mov
enter
divb
ss
ret
int
sbb
out
adc
xchg
inc
jl
cli
pop
or
xchg
test
clc
inc
adc
cmc
jb
dec
push
ds
sub
xor
pop
out
loopne
enter
inc
in
popf
xchg
pop
in
das
mov
daa
jmp
cs
ja
je
xor
loopne
jp
and
mov
ss
xchg
pop
repz
inc
xor
dec
xor
jno
movsl
jl
mov
bound
xchg
ss
jns
mov
push
data16
mov
lea
cld
hlt
cld
aaa
push
push
jno
mov
lcall
push
or
adc
lret
sbb
add
aad
iret
inc
mov
sub
adc
mov
and
lods
xchg
pop
adc
nop
push
pop
dec
call
mov
push
addr16
mov
mov
leave
cmp
imul
pushf
mov
hlt
aad
pop
jp
xchg
inc
subl
mov
test
shrb
je
mov
das
je
hlt
inc
mov
or
int
pop
sbb
adc
push
mov
int
out
nop
xchg
rorb
in
stos
mov
iret
pop
adc
cld
fnstsw
test
lcall
enter
loope
jbe
push
add
xor
xor
daa
rcr
dec
popf
test
xor
mov
mov
ja
imul
cld
jns
xchg
mov
xor
cmc
xchg
pop
and
in
mov
cmpsb
add
out
dec
jl
add
addl
outsl
cmp
and
cmp
xchg
outsl
or
mov
mov
mov
xchg
cmpsb
fst
popf
pop
popf
sarb
xchg
dec
popf
dec
cmp
sub
das
cltd
xchg
stc
data16
out
sub
ljmp
in
idiv
mov
pop
popa
mov
xor
out
loop
cmp
cmp
jno
and
into
shlb
push
fwait
int
xchg
cwtl
inc
inc
repnz
add
dec
aas
mov
in
pop
xchg
push
jge
mov
js
jmp
pop
addr16
jo
mov
cmp
mov
cmpsl
in
add
cmp
xor
adc
popf
jbe
jbe
outsl
enter
les
cmp
push
icebp
dec
cmc
scas
insl
mov
mov
dec
push
pop
mov
dec
add
cmp
test
mov
cmp
mov
push
mov
pop
lock
int
test
stos
xchg
dec
insl
cmp
jl
mov
test
and
mov
aad
lret
adc
mov
pop
pop
sub
out
cs
xlat
dec
inc
aad
xorb
aaa
pop
or
jo
pop
ss
mov
in
mov
xchg
adc
dec
cwtl
pop
add
sbb
cs
test
dec
dec
inc
js
jecxz
or
scas
inc
jge
mov
pop
das
out
sbb
push
jmp
lods
outsl
repz
repnz
rclb
popa
call
pop
stos
inc
ljmp
mov
popf
add
jl
add
les
int3
push
push
and
mov
pop
xor
call
loop
scas
and
aas
lahf
add
jns
cld
sub
out
fnstcw
push
cwtl
test
jbe
popf
jne
insb
mov
add
pop
add
mov
ljmp
jmp
sti
push
out
or
in
or
out
xor
add
or
mov
lahf
movntps
mov
pushf
pop
xchg
inc
addr16
mov
sbb
dec
xchg
mov
jp
mov
dec
das
push
push
dec
movsb
dec
push
popa
dec
push
jne
lods
lds
xchg
cs
jge
lods
wrmsr
or
cmp
cmp
aas
lods
mov
movsl
jmp
iret
fdivrl
daa
adc
add
fisttpll
jge
adc
xor
in
mov
mov
fisttps
popa
mov
inc
repnz
jns
mov
pop
sub
test
xchg
or
mov
lock
or
lret
sbb
jmp
xchg
js
lret
push
and
fnstcw
mov
dec
ss
das
je
mov
repz
int
test
lods
jno
daa
movsb
cli
test
adc
sub
or
lods
outsb
add
push
inc
jge
movsl
sbb
lea
xlat
xchg
gs
pop
loop
ret
cmpsb
scas
orl
call
mov
lods
jae
cwtl
mov
inc
in
mov
mov
movsl
inc
fs
cmp
test
shll
xchg
pop
int3
xchg
xor
xchg
mov
lret
inc
out
push
mov
mov
push
dec
dec
pop
and
call
pop
xchg
jae
mov
fsubl
inc
das
aaa
addr16
je
or
arpl
hlt
lcall
fcompl
dec
imul
out
movsl
outsb
push
outsb
mov
push
aaa
dec
and
pushf
push
and
cmpsl
daa
mov
enter
jb
aam
es
in
in
scas
push
mov
test
insl
mov
inc
push
mov
push
push
scas
in
cld
mov
in
out
dec
insl
pop
loopne
dec
inc
jge
xor
arpl
lock
or
xchg
addl
mov
sbb
fidivs
arpl
jg
std
fsubp
inc
imul
xor
mov
fsubr
push
roll
imul
sbb
push
xchg
cmp
out
ret
jg
xchg
stos
fs
xor
jl
addr16
or
fidivl
pop
adc
adc
xchg
cwtl
cmpsb
sti
pushf
stc
adcb
jle
xor
jp
add
std
push
adc
stc
std
int3
adc
xor
adc
icebp
popa
jp
add
xlat
xchg
mov
mov
adc
rcr
push
mov
dec
decb
pop
bound
cltd
lds
sub
stos
les
inc
and
ss
test
mov
jnp
jne
jg
mov
cltd
aas
push
dec
loop
pop
fadd
inc
ljmp
jp
pop
sbb
rorl
xchg
sub
cmc
sbb
push
xchg
idivl
jb
fcoml
in
daa
fs
mov
cmpl
ret
lret
mov
mov
xchg
mov
dec
xchg
lret
add
into
jp
lahf
ficoms
cmp
test
pop
std
shll
inc
xchg
sub
fcomp
inc
lea
test
pop
push
mov
push
icebp
xchg
mov
push
test
cmc
mov
lods
mov
shll
jae
inc
xchg
out
sub
roll
push
outsb
mov
lea
inc
pop
xor
outsb
xchg
aaa
xchg
add
jns
xchg
adc
mov
imul
gs
bound
test
divl
adc
add
decl
jns
mov
adc
dec
mov
and
nop
adc
dec
in
adc
aam
cmp
outsb
dec
jbe
aas
cmpsl
adc
pushf
loope
or
sub
mov
aam
repnz
mov
mov
outsl
imul
xchg
mov
or
dec
pusha
rol
dec
push
in
filds
dec
xchg
dec
es
aam
and
sub
push
mov
fcoms
aad
jmp
xchg
scas
mov
out
popa
sub
inc
xor
push
xchg
jo
cmc
shrb
mov
xchg
mov
enter
ljmp
jnp
icebp
out
xchg
mov
mov
jnp
xorl
adc
or
out
push
lock
xor
cmp
lcall
adc
outsb
fidivl
cmp
int3
mov
stos
fnstsw
ficoml
push
mov
dec
jle
inc
adc
mov
mov
mov
fstl
cmp
mov
dec
xchg
xor
and
mov
mov
movsl
xor
cmpsl
roll
mov
and
test
std
sarl
push
push
add
mov
inc
cmp
mov
out
inc
loope
aam
push
or
jge
or
add
hlt
and
rorb
add
hlt
sbb
in
cmp
std
dec
sbb
mov
add
hlt
sub
jne
push
jecxz
push
sbb
hlt
push
mov
in
xor
enter
ss
inc
lock
mov
idivl
inc
bound
cmpsb
pop
jmp
cltd
inc
jno
inc
push
cld
mov
outsl
jne
mov
inc
fcomi
adcb
inc
xchg
or
fxam
pop
or
scas
xor
aam
or
xchg
lea
scas
mov
sbb
stc
roll
mov
pop
mov
and
mov
jp
jae
cmpsb
or
stos
cmp
cltd
daa
and
jge
mov
into
pop
or
or
movl
xchg
bound
dec
cmpsb
leave
rclb
dec
dec
jecxz
int
mov
inc
aaa
lods
inc
ja
mov
and
out
lods
sub
dec
xchg
scas
dec
or
sbb
aas
or
stc
and
stc
jns
jg
adc
or
aas
int3
and
mov
incl
fdivs
xchg
pop
cmp
and
hlt
addr16
jp
jp
out
cmpsl
mov
jbe
call
inc
ret
mov
jne
fstps
push
inc
movl
inc
and
lahf
lods
loope
dec
in
jle
jae
faddl
mov
scas
adc
cmp
xchg
mov
inc
push
ficompl
fwait
aaa
movsl
pop
out
add
cmpsl
mov
pop
lcall
pusha
xor
arpl
leave
enter
push
psrad
or
mov
dec
iret
xchg
negb
xor
std
inc
std
mov
fwait
lods
mov
or
cmp
or
idiv
iret
idivb
mov
fnsave
mov
enter
xchg
icebp
pop
shlb
nop
mov
int3
insb
mov
sub
add
dec
loopne
insb
sbb
cli
fndisi(8087
xchg
loop
pop
sarb
jne
add
mov
iret
dec
outsb
adc
jbe
add
push
insb
inc
jno
nop
clc
pop
test
xor
leave
pop
push
shlb
mov
xor
jne
inc
jne
dec
inc
dec
jmp
push
jbe
repnz
xlat
lcall
clc
sbb
dec
rcrl
cli
roll
or
fs
je
repz
dec
mov
int3
ja
cld
fld
dec
lahf
scas
add
mov
mov
popf
lods
mov
dec
cmp
imul
ret
sub
clc
cltd
pop
inc
dec
cwtl
lea
cli
mov
jp
adcb
imul
adc
gs
and
pop
stc
idiv
ret
enter
fucom
int3
mov
das
pop
pop
or
lock
rcr
or
adc
xchg
pop
adc
adc
push
iret
jmp
sub
xor
loope
imull
bound
push
neg
data16
les
push
std
pop
shlb
xchg
adc
dec
xlat
rclb
fdivrp
adc
xor
fnstsw
cmp
js
dec
jbe
sahf
bound
and
dec
sahf
lods
scas
loope
push
lret
insl
xchg
dec
fstl
jmp
xor
jle
adc
insb
mov
orb
loop
shrl
fcoml
aas
into
insb
cmp
imul
movsb
lds
jae
add
ljmp
mov
ljmp
lds
xor
adc
pop
sub
dec
and
scas
and
jmp
xchg
adc
xor
das
icebp
mov
jge
aaa
push
jmp
xchg
out
dec
cmp
ficompl
pushf
shlb
xor
inc
into
xchg
or
sub
jb
sbb
pushf
jae
fnstenv
sub
cmp
sbb
mov
hlt
sahf
popa
mov
inc
mov
scas
aad
xor
jp
or
call
sbb
mov
dec
push
orl
cmc
popf
pop
out
ffreep
dec
lea
and
cmpsl
jb
pop
add
jne
popf
shrb
sbb
repz
and
repnz
xchg
sub
mov
pop
push
das
insb
bound
daa
lret
cmpsl
inc
mov
mov
sub
jp
dec
ds
mov
mov
lods
xchg
mov
iret
pop
cmp
js
xor
test
adc
xchg
pop
stos
xchg
ret
mov
and
iret
movsl
mov
mov
bound
jae
ret
push
ret
aaa
inc
and
mov
mov
shll
xchg
jb
push
xchg
jmp
or
mov
xor
ds
sbb
xchg
aaa
enter
sub
out
inc
sub
ljmp
xchg
outsl
jno
cli
daa
lahf
movsb
ret
jnp
mov
aaa
imul
lock
push
shll
jmp
mov
push
cltd
cmpsb
bound
insb
inc
inc
dec
mov
jmp
jl
dec
lahf
sahf
mov
hlt
insl
sbbb
call
or
push
jae
ljmp
and
mov
icebp
adc
mov
xchg
or
push
bound
xchg
inc
mov
add
pop
std
fidivrl
mov
adc
pop
cmpsb
clc
cli
xchg
dec
faddl
cmc
sub
mov
jne
stos
mov
inc
sbb
loopne
jae
xchg
dec
add
adc
jb
and
lods
xor
ret
and
in
add
sbb
fildll
inc
ds
fdivrp
mov
shl
add
pop
loopne
test
push
int3
in
or
xchg
push
pop
cltd
lock
loop
shll
pop
enter
enter
push
cmpsl
out
sub
xor
lret
adc
std
popf
enter
inc
dec
adc
mov
push
or
cli
sub
and
push
fldt
push
mov
cmp
out
in
das
in
and
dec
scas
mov
jae
test
cmp
test
or
insl
js
xor
lret
and
mov
pop
mov
lock
push
inc
popf
ficomps
mov
xor
dec
add
pop
imul
inc
enter
push
fcmovbe
sbbb
lret
and
sbb
add
xor
adc
out
fucom
out
push
mov
push
cmp
xor
inc
pop
inc
xchg
adc
jp
repz
clc
ljmp
decb
nop
mov
fldenv
icebp
and
fsubs
decb
aad
cmpb
aad
or
addb
out
fcmovbe
mov
ljmp
popf
outsl
mov
pop
or
add
int3
nop
out
bound
int3
gs
sbb
cmpb
push
fwait
pop
pop
inc
add
jno
enter
fnstcw
cmp
sbb
jmp
loop
stc
dec
lahf
ljmp
aas
sbb
addr16
sbb
outsb
sti
fwait
jp
pop
out
push
lea
mov
jbe
inc
xor
sub
cmp
dec
test
addb
mov
fisttpl
mov
or
cmp
jmp
and
cmp
notl
test
add
jp
push
mov
inc
adc
add
mov
mov
xchg
inc
lock
out
inc
mov
xchg
in
stos
pop
mov
push
std
jp
mov
shr
sub
push
jecxz
and
clc
stc
jo
aas
dec
push
dec
ja
jae
xor
ds
push
cmp
xorb
pop
push
mov
pushf
movsl
pushf
adc
lods
pop
test
pop
sbb
in
add
pop
nop
push
in
cmc
dec
shr
test
aam
frstor
cmp
xlat
test
inc
jmp
mov
mov
in
cld
and
sahf
sahf
xchg
xlat
xor
add
jle
fucomip
aas
adc
lea
mov
js
cmp
xchg
sbb
aaa
mov
cli
push
lds
pop
mov
pop
push
decb
cmpsb
mov
add
inc
popf
pushf
push
push
cmp
les
sbb
cmp
rcr
addr16
xor
daa
cltd
pop
sahf
mov
add
mov
and
imul
add
lea
inc
daa
mov
jne
in
xor
adcb
mov
add
aam
leave
fs
int
cmp
lahf
gs
imul
mov
in
fcoms
and
pop
sbb
jp
scas
push
call
and
sbb
fwait
jbe
add
pop
pop
xor
sbb
shll
sbb
dec
mov
addr16
bound
xchg
xlat
iret
pop
fstpt
dec
lea
insb
jge
lock
aas
inc
in
add
mov
sbb
popl
add
sti
jmp
ljmp
sub
data16
clc
mov
and
fcmovne
jecxz
add
cmp
test
adc
cmp
sbb
fs
mov
jg
mov
jnp
jmp
push
sub
inc
add
int
cmp
cmpl
pop
sub
inc
push
mov
cmp
mov
shlb
sub
fcoml
and
lock
icebp
push
pop
fwait
mov
mov
repz
icebp
cwtl
daa
pop
pop
out
clc
outsl
testl
adc
mov
mov
mull
bound
ret
sti
jns
in
mov
scas
les
std
dec
push
pop
lds
lcall
addb
or
lock
jae
cltd
sub
mov
or
in
push
out
lds
test
sub
scas
mov
int3
lock
or
addr16
lods
xor
dec
popa
pextrw
dec
addl
jmp
push
cwtl
mov
addr16
mov
pop
dec
in
int
incb
lock
push
add
imul
dec
ljmp
mov
into
gs
cmp
xchg
and
mov
dec
outsb
les
call
cmp
lock
shlb
insb
arpl
in
es
aaa
in
jle
add
xchg
mov
or
lds
push
aas
inc
das
lods
mov
pushf
sbb
lods
inc
stos
rol
jg
push
scas
cmc
mov
mov
das
dec
out
cmp
xchg
cltd
in
arpl
adc
mov
sbb
jno
sub
xchg
iret
sub
cmp
jp
sti
shl
jg
xchg
sbb
push
rorb
loop
in
xchg
cmp
inc
loopne
and
stos
pop
inc
inc
hlt
and
stos
push
lahf
and
cltd
xor
scas
push
push
mov
scas
mov
fs
lods
push
das
adc
aam
mov
xchg
xchg
dec
cltd
mov
std
das
lock
or
icebp
aad
test
xchg
cmp
rcl
or
xchg
inc
shlb
ret
fldcw
cmp
rorb
icebp
std
dec
add
lret
sahf
sub
adc
call
ds
enter
pop
push
add
mov
xchg
pop
jle
outsb
push
ficompl
mov
dec
in
pop
lahf
cs
and
dec
les
and
sub
xor
lock
enter
setl
mov
push
xchg
fwait
leave
adc
cmc
sbb
js
and
add
loope
sbb
xchg
outsb
pushf
cmp
xchg
push
jne
test
adc
nop
mov
xor
mov
call
or
mov
jnp
push
jne
ja
fimull
push
push
adc
outsb
pop
stos
inc
xchg
and
pop
cmp
pop
adc
inc
mov
dec
mov
or
dec
sarb
es
push
popa
inc
inc
test
mov
and
or
push
stos
arpl
jbe
adc
daa
cmp
adc
mov
xchg
xchg
or
in
pop
shrl
xor
sbb
add
bound
cli
rcrb
scas
xchg
jmp
xlat
arpl
jnp
inc
mov
loopne
xchg
sub
sub
hlt
and
pop
cmp
in
out
pop
outsb
pop
roll
pop
jmp
in
hlt
jb
xchg
aas
mov
ret
pop
add
loopne
sbb
enter
in
in
add
scas
mov
push
das
jge
mov
iret
out
leave
dec
stc
adc
testb
sbb
jecxz
repz
addl
lcall
imul
xchg
adc
jmp
push
rorl
mov
loope
push
arpl
jmp
inc
mov
int
or
mov
fimull
insb
mov
and
test
xor
hlt
icebp
scas
aam
push
mov
idivl
sub
dec
push
lcall
sub
sub
cmp
popf
sbb
add
xlat
lods
and
xor
mov
inc
loope
xchg
cmp
daa
push
aam
push
sbb
xor
repz
nop
cmp
ffreep
adc
cmpsb
leave
lods
jge
xchg
mov
cmpsl
imul
lahf
mov
out
addr16
ja
sub
ja
fs
or
out
ljmp
pop
dec
fcmovnb
jns
incb
je
rclb
adc
leave
loope
push
xor
lahf
xor
out
lahf
pushf
or
dec
outsb
add
push
fwait
mov
sub
iret
pop
inc
cmp
dec
lods
mov
push
outsb
mov
repnz
shrb
lods
test
ret
mov
and
fidivrl
rolb
js
imul
mov
or
clc
outsl
adc
inc
dec
adc
mov
mov
xchg
mov
sub
push
adc
or
out
notl
jb
pop
push
and
lret
mov
inc
mov
stc
xchg
pop
sub
add
stos
cs
jg
js
es
adc
sbb
pop
pop
and
fs
lcall
push
jmp
sti
movsb
fdivl
sub
repz
paddsb
jbe
adc
outsb
inc
addr16
mov
fdivr
mov
cmpsl
enter
loopne
cld
jne
pop
sarb
lods
clc
pop
mov
push
icebp
xor
add
outsl
jno
shrb
add
or
outsl
aaa
pop
and
mov
orl
dec
shr
add
sahf
xchg
es
loope
cs
arpl
sbb
cli
pop
xor
xor
mov
mov
xchg
fxch
mov
mov
pop
aad
inc
xchg
ss
fldt
pop
or
aas
aam
adc
pop
jl
jecxz
mov
and
mov
push
push
into
es
je
sarb
xchg
jae
arpl
movsb
pusha
adc
cmc
mov
mov
dec
sbb
dec
nop
sbb
ds
daa
negl
into
pop
push
mov
push
fdivl
cmpsb
mov
loope
test
dec
in
or
pop
push
loope
in
push
mov
arpl
jmp
ss
xchg
les
call
pop
mov
add
xor
cmpsl
iret
rcll
data16
add
imull
loopne
add
testl
mov
shlb
enter
pop
or
leave
jns
bound
out
jbe
test
lret
out
jns
mov
jle
add
push
add
xor
mov
cmpsl
cmpsl
sub
push
xchg
inc
inc
in
add
add
pop
outsb
outsb
in
mov
adc
or
xor
sub
sti
in
push
divb
pop
lret
jmp
rolb
push
pop
sbb
rorb
cld
adc
push
and
mov
xchg
mov
mov
sahf
arpl
inc
sbb
shlb
sub
mov
adc
aad
mov
add
rcll
cmp
adcb
fnstsw
stos
loop
or
jmp
inc
scas
test
pushf
fisubrl
dec
adc
movl
test
cmpsl
or
mov
gs
pop
repz
icebp
and
ds
insl
ss
inc
push
cmpsb
pushf
sbb
xchg
stc
shll
push
pop
sbb
scas
pop
cmp
popf
jb
dec
push
push
shlb
add
fmuls
popa
push
mov
shlb
pop
dec
imul
lock
movsl
cmp
hlt
mov
dec
sbb
jmp
std
push
sbb
sbb
lret
je
push
pop
push
dec
mov
hlt
xchg
xor
dec
and
scas
inc
int
enter
mov
nop
adc
xor
aam
subl
pop
shl
movl
adc
lods
aad
loop
pop
iret
jns
xor
pop
xchg
mov
xor
xchg
jae
hlt
lahf
adc
or
pop
xchg
xlat
jg
add
gs
mov
data16
fiadds
mov
pop
dec
stos
lret
jmp
pop
push
xchg
jp
sarb
push
and
push
xlat
sbb
repnz
mov
lea
lahf
mov
ds
xor
push
mov
scas
cmp
test
and
test
mov
sub
in
jle
data16
xlat
dec
insb
aad
xchg
mov
mov
or
inc
pop
dec
in
pusha
addr16
mov
push
daa
and
mov
mov
cmp
movsb
or
or
adcl
insl
xchg
push
cmp
cmp
mull
out
jb
es
imul
sahf
push
jge
jnp
outsl
xor
rorb
lahf
mov
cs
shll
in
add
stos
insl
out
test
push
pop
sbb
inc
xchg
xor
mov
cld
insl
hlt
fs
insb
mov
add
mov
jae
movsl
dec
sbb
pop
jns
or
add
repz
pushfw
and
and
jb
lret
adc
or
jmp
imul
into
insl
ja
mov
shl
mov
cmp
jecxz
leave
xor
or
fcompl
mov
popf
add
scas
and
xchg
pop
cmp
jb
out
out
xchg
mov
push
aaa
pushl
inc
clc
xchg
dec
push
faddp
jbe
pop
xor
adcl
sbb
cmpsb
cmpsl
ja
or
add
out
insb
jns
les
insb
cmc
push
lods
sti
push
mov
sbb
movsb
imul
jbe
fsubrl
mov
pusha
cld
jo,pn
inc
insl
adc
and
es
loope
cmpb
jl
jbe
jno
pop
idivl
xor
lea
in
rcll
push
lea
and
mov
jecxz
cltd
xchg
push
and
test
nop
dec
vmwrite
fidivl
scas
add
int3
adc
adc
add
jno
jmp
fwait
jne
fcmovnb
push
adc
mov
int
inc
cld
pop
sahf
in
inc
notb
push
jmp
in
ss
mov
imul
shl
push
xor
xchg
adc
add
lock
and
inc
fwait
andl
test
xchg
add
lcall
ficoml
sbbb
jmp
stos
sub
int
adc
pusha
lods
test
mov
stos
int
dec
mov
pop
mov
jp
mov
pushf
fildl
insb
mov
dec
mov
inc
movsb
repnz
dec
pop
ret
mov
js
aas
xchg
jl
sub
incl
arpl
repnz
ds
aaa
mov
jge
mov
std
shlb
cmp
push
push
fs
dec
in
pop
xlat
mov
cmp
adc
scas
movsb
and
push
aam
dec
jp
pop
movsl
pop
push
xor
push
repz
dec
aam
jmp
mov
imul
dec
cld
int3
sahf
sub
orb
movsb
pushf
jbe
lds
sbb
addr16
adc
clc
and
subb
inc
mov
shrl
jp
push
push
add
jl
enter
or
inc
xchg
jge
dec
rorb
and
sub
mov
test
cmpb
lea
xor
xchg
imull
ret
notb
push
shrl
jle
sub
xor
inc
cld
bound
adc
out
rclb
das
push
loope
daa
lods
sbb
jae
stos
fs
gs
xor
sar
pop
inc
xlat
scas
xchg
mov
dec
std
xchg
aaa
mov
xor
push
shlb
stc
incl
cs
push
ljmp
jmp
and
movsb
push
jg
mov
into
clc
jp
loopne
mov
xchg
stos
jl
std
insl
mov
test
in
adcl
xchg
mov
sbb
pop
ss
mov
insb
out
cmp
mov
test
stos
fisttpl
pop
sbb
push
jnp
insb
jmp
nop
icebp
les
mov
adc
mov
jno
mul
or
add
ret
hlt
dec
iret
mov
cmp
sahf
xchg
mov
aaa
in
xor
sbb
add
lock
ljmp
leave
push
pop
cmp
mov
pushf
enter
jp
adc
jae
cld
loop
or
lea
pop
mov
dec
scas
xchg
rcrb
xor
xor
jns
pop
and
mov
cmc
rclb
fsubs
data16
pop
add
dec
aaa
add
inc
sub
cmpsb
orl
sub
dec
xchg
mov
cmp
outsb
loop
push
push
arpl
inc
xor
mov
inc
xor
addr16
or
daa
dec
shrl
push
por
fadd
jecxz
dec
lret
sub
mov
gs
push
sti
jnp
outsl
cmp
jb
jbe
loope
mov
loop
adc
rcll
lock
stos
or
push
dec
push
push
mov
lock
lods
mov
dec
jb
xchg
fs
std
mov
mov
mov
and
cmp
xchg
inc
mov
ror
xor
lods
and
and
pop
lret
mov
push
cmpsb
imul
pop
lahf
pop
cmp
cmpsb
scas
and
shl
xchg
in
jecxz
push
push
adc
into
mov
pop
arpl
in
insl
testl
aad
cs
popf
push
dec
sub
mov
gs
mov
xchg
inc
call
sbb
cli
jb
mov
into
lret
mov
mov
fisttpl
jp
xchg
jl
cs
fdivr
mov
les
xchg
add
pop
aaa
xchg
or
daa
out
sub
shll
jns
cmpsl
lock
jl
loop
loop
sbb
cmp
loop
dec
cmpsl
push
ljmp
mov
out
fmul
and
js
add
ret
lcall
xor
test
cmp
out
jae
mov
test
cmpl
negb
sbb
inc
les
mov
xchg
xor
sti
nop
stos
cmp
push
or
add
scas
call
xchg
inc
jae
dec
pop
or
sbb
inc
mov
jge
rolb
ret
sbb
mov
icebp
je
pop
pop
lahf
mov
mov
mov
sbb
ret
mov
add
push
stos
stos
pop
and
inc
adc
les
mov
and
mov
cmp
lods
aas
mov
imul
fdivr
push
push
scas
sbb
int
mull
ds
fnstcw
loop
push
bound
enter
inc
push
add
push
jmp
push
adc
dec
fisttps
das
sbb
adcl
lock
shrb
icebp
push
mov
push
in
dec
iret
xchg
cmp
mov
mov
and
mov
xorb
or
and
arpl
pop
cmpl
mov
enter
rcrb
leave
ret
clc
xchg
sub
cltd
std
in
das
inc
mov
jge
push
and
test
shll
xlat
stos
push
faddl
call
add
loopne
lock
jmp
test
js
xchg
jno
sub
in
shrl
xchg
fxch
ds
inc
mov
sbb
push
dec
xlat
and
cli
aam
daa
insl
cli
arpl
push
xlat
add
cmp
lea
jbe
xor
mov
sbb
push
jg
mov
mov
mov
jle
inc
adc
or
adc
rcrl
int3
xchg
dec
scas
nop
repnz
inc
pop
mov
mov
adc
xchg
inc
mov
sub
rcr
sar
add
push
cmp
mov
lds
lock
aaa
adc
into
mov
test
mov
icebp
push
cld
daa
lcall
pop
xor
mov
xor
mov
mov
shll
jne
out
cld
lcall
push
sub
mov
mov
mov
lods
test
sub
out
lods
in
and
testl
dec
jbe
test
imul
sbb
pop
sbb
cmpsl
iret
scas
mulb
test
or
sar
int3
in
push
popa
or
pop
cmp
scas
xchg
xchg
stc
test
repnz
scas
movsl
iret
mov
dec
adc
add
add
mov
shl
jmp
lret
bound
dec
xor
adc
xchg
test
mov
shrb
adc
in
fiadds
cmp
test
mov
lods
fadd
shlb
or
gs
xchg
xor
and
mov
pop
dec
sbb
jne
ret
jb
loopne
jno
jg
xor
or
std
lret
or
mov
call
sbbb
daa
mov
andb
sbb
jns
dec
dec
mov
aam
mov
push
cmpsl
xchg
xchg
testb
ja
in
in
ljmp
xchg
mov
adc
inc
or
or
lret
int3
dec
popa
fs
clc
pop
int
aad
loopne
sbb
sub
out
pushl
mov
loop
out
rorb
pop
mov
sbb
fldcw
call
test
jb
scas
out
shll
lods
lcall
and
sub
mov
mov
enter
fiadds
das
mov
gs
das
lahf
xor
push
in
in
jp
into
pop
mov
bound
push
gs
scas
mov
cltd
scas
push
out
mov
inc
retw
push
in
imul
cmp
xchg
pop
shlb
xor
imul
sbbb
push
inc
add
cmp
sub
inc
add
mov
sub
roll
sbb
and
mov
inc
sub
fistpl
jmp
push
or
repnz
mov
mov
insb
xchg
shll
dec
test
inc
mov
and
dec
cld
cmp
scas
cmovb
aas
cld
and
xor
jle
dec
sarl
fistl
sub
lret
ja
add
sbb
sti
sbb
repz
orb
push
jl
std
imul
and
jl
stos
scas
xlat
imulb
ficoms
pop
xor
xor
xchg
inc
pop
test
test
sarb
dec
push
jge
mov
sub
daa
cmpsl
loope
push
test
out
sbb
cltd
pop
cmc
aam
sbb
cwtl
push
and
dec
icebp
inc
std
push
dec
aas
arpl
push
das
fmull
pop
shll
popa
int
pop
add
and
push
push
aaa
mov
mov
dec
mov
push
or
push
popa
iret
bound
outsb
add
xchg
push
inc
clc
rorl
push
push
rcl
adc
arpl
push
or
fsubrl
imull
sub
xchg
int3
adc
sahf
outsb
and
shl
and
jb
and
ret
cmp
outsl
loop
pusha
mov
xor
insb
inc
fidivl
ljmp
dec
mov
movsl
les
mov
ja
jle
mov
lods
xchg
or
jmp
imul
mov
stos
dec
cwtl
xor
ret
rclb
mov
push
inc
aas
repz
mov
mov
mov
test
xchg
aas
rorb
push
jo
js
nop
repnz
and
sbbb
adc
cltd
and
loop
fisubl
inc
fimuls
or
cmp
push
sub
pop
mov
jl
imul
add
sbb
inc
mov
and
inc
mov
push
js
mov
pop
sub
fmuls
cmc
inc
ret
mov
mov
push
subl
fldt
add
pop
mov
push
jl
or
inc
mov
add
pop
jne
testl
cmpsb
fwait
mov
clc
sbb
adc
jecxz
sub
adc
inc
bound
test
iret
mov
push
leave
mov
fs
push
adc
in
or
cmp
adc
mov
mov
int
mov
adc
test
mov
ljmp
xchg
dec
insl
ss
mov
mov
cs
inc
mov
push
ret
fdivrs
shlb
ror
cmp
push
push
jmp
int3
popa
sarb
dec
ja
jne
pop
and
mov
adc
cld
es
dec
jbe
lods
mov
cmc
push
xor
mov
shrl
pop
lods
inc
movsl
mov
or
les
hlt
pop
ds
sbb
fdivs
jns
call
mov
lods
repnz
repnz
push
fmull
cmp
leave
jmp
ret
mov
add
in
sarb
sub
mov
xor
mov
out
pop
mov
xor
movsb
jo
inc
jnp
jb
sar
vpunpckhwd
movsb
or
pusha
sub
xchg
and
cmp
ss
outsl
sbb
mov
pop
jnp
out
add
push
and
cmp
jae
sub
sub
mov
into
jmp
pop
push
mov
lret
xor
fwait
mov
mov
bound
sbb
movl
jo
test
mov
addr16
lods
in
adc
arpl
aam
loopne
jmp
inc
and
aaa
ror
aaa
ja
push
rorl
addr16
dec
mov
fiadds
push
jbe
dec
sbb
lret
loopne
pushf
jp
out
out
out
das
jno
aaa
inc
iret
je
out
aaa
push
es
jge
jg
add
setbe
fldenv
fstpt
sub
and
sahf
sub
push
sarl
int3
pop
sub
xor
or
push
das
popa
test
push
fldl
out
fidivs
mov
xchg
jg
push
daa
ljmp
inc
mov
ja
popf
pop
pusha
lret
loope
mov
add
ja
hlt
pop
sub
lcall
sbb
jmp
repnz
jne
sbb
jmp
push
or
test
fimuls
jo
cmp
mov
loop
jmp
dec
inc
jae
push
sub
xor
sub
jg
sub
mov
scas
cs
nop
negb
mov
dec
sahf
test
push
cmp
push
cmpsb
xor
fldt
in
adc
cmpl
jae
xchg
push
and
pop
test
mov
or
lcall
fwait
jge
inc
sbb
pop
sbb
popa
call
int
lret
jp
dec
inc
je
outsl
sub
out
add
pop
iret
sbb
xor
mov
fadd
mov
pop
add
shl
mov
movl
lret
jae
insb
int3
fmull
xchg
aad
mov
jp
mov
push
jb
and
popf
sub
cld
pop
ficoml
sbb
cmp
add
scas
dec
inc
pop
aas
out
pop
mov
addr16
fmul
mov
jge
dec
gs
iret
in
fbstp
cltd
fwait
adc
cmp
jno
test
testl
in
mov
and
or
aas
ret
push
xchg
bound
jl
enter
inc
adc
mov
dec
jo
test
scas
loope
push
rorl
nop
jae
fcom
jecxz
jle
dec
loop
mov
rorl
test
fisubrs
fcomps
cmp
lods
inc
xchg
cltd
push
add
dec
pop
fcomps
push
ljmp
dec
in
sub
sahf
or
int3
mov
mov
push
cbtw
fsubl
stc
add
test
add
and
and
jl
subl
pushf
jge
cli
cmp
dec
insl
aam
mov
ds
in
repnz
jp
pop
and
cld
popa
xor
scas
xor
stc
or
scas
leave
lods
push
xchg
test
leave
popa
cmp
xchg
cmpsb
or
mov
insl
mov
test
sub
ljmp
in
gs
adc
shrb
movsl
adc
sbb
jmp
cwtl
push
push
jb
push
sti
jno
imul
lahf
cwtl
cwtl
add
sub
test
sbb
pop
movsl
lahf
pop
xor
jnp
cli
add
aaa
pop
fbld
dec
lods
lods
je
mov
fidivrl
inc
and
cmpsb
and
dec
bnd
or
push
outsl
outsb
mov
jge
ljmp
lcall
sub
xchg
push
dec
pop
out
mov
mov
jbe
mov
push
stos
mov
pop
out
mov
add
jle
push
jae
sbb
adc
outsb
clc
sbb
loop
inc
push
push
add
pop
inc
push
dec
loop
rol
sahf
xchg
dec
out
mov
movsb
cs
scas
inc
fisubl
ror
jecxz
loope
in
movsw
cmp
jmp
repz
loope
mov
or
out
icebp
sub
pop
shlb
arpl
and
out
ret
add
ret
in
cmp
adc
fdivrs
imul
jno
stc
and
jo
push
iret
dec
or
es
imul
xchg
outsl
fistpll
cmpsl
mov
scas
dec
out
sbb
jle
movsb
lock
and
and
jnp
shl
dec
stos
shlb
int
movsl
push
add
pop
fiadds
sub
les
js
sub
lea
xor
mov
ret
in
xor
mov
mov
push
push
test
or
into
push
mov
je
scas
pop
movsb
into
imul
adc
mov
xor
add
es
adc
fsub
xor
add
xchg
cs
sbb
cld
pop
jne
stos
test
in
lods
xchg
rcrl
cli
les
mov
movsb
xlat
jecxz
test
iret
adcb
pop
push
xchg
inc
adc
jle
mov
into
sbb
xchg
sbb
imul
ret
inc
cli
inc
xlat
shrb
cmp
mov
notb
mov
sahf
lods
add
push
cltd
cli
sub
add
int3
scas
cwtl
lret
mov
je
outsl
jbe
rclb
lds
mov
sub
das
mov
dec
or
cmp
mov
insb
jae
test
dec
repnz
aas
push
and
cmp
cmp
dec
and
pop
jns
cmp
dec
jnp
sub
jne
ljmp
ss
lods
rcrl
xchg
test
fwait
in
adc
fcoml
adc
jnp
adc
movsb
mov
mov
imul
ljmp
out
sbb
xchg
dec
rolb
test
adc
xchg
sarb
mov
dec
enter
shr
jno
cltd
xchg
sbb
loop
pop
xchg
cmpsl
xor
mov
sub
inc
add
xchg
pop
mov
pop
cmpsb
insb
or
in
jo
sbb
aaa
sub
xchg
cmp
xor
or
push
mov
lcall
stc
leave
jp
pop
dec
push
jne
push
sub
jmp
vpshlb
xchg
xchg
les
cs
pmaxub
sub
fistpll
hlt
or
in
js
xchg
add
imul
fdivs
pop
inc
and
adc
sarb
movsb
adcb
enter
jns
push
sub
stos
push
mov
and
lahf
push
add
mov
stc
push
xor
testl
lods
mov
xor
and
daa
daa
xor
cs
jle
call
pop
cmp
pop
lcall
sbb
lcall
xor
cs
lahf
lahf
and
xor
cltd
jmp
mov
nop
and
xchg
in
das
xor
das
push
mov
cmp
or
xchg
sub
sbb
leave
fdivrs
stos
or
xchg
cld
dec
mov
pop
rcrl
imul
arpl
sbb
dec
xor
add
mov
push
jae
call
dec
out
jno
jmp
xor
std
pushf
cmp
xchg
repnz
xor
sti
js
enter
js
popa
mov
je
sbb
sub
xor
push
fs
push
in
jnp
das
dec
cmpsb
cmp
push
jno
dec
shrl
push
je
xchg
and
mov
jmp
add
mov
flds
jle
pop
or
lcall
sub
sub
inc
in
mov
adc
jge
clc
adc
das
jne
cmp
ret
xlat
aam
loope
es
loop
popf
popa
push
imul
cmpl
into
sbb
mov
pop
loopne
mov
ja
pop
mov
mov
xor
adc
stos
mov
ret
add
loopne
lahf
call
daa
mov
fcoms
sub
dec
or
test
loopne
pushf
jge
outsb
inc
jbe
pushf
add
fsubr
push
imul
push
cmp
mov
add
sub
lds
inc
or
jmp
in
out
push
das
xchg
mov
outsl
fistpll
loopne
ret
seto
cmp
xor
nop
pop
aas
mov
add
cmp
inc
sarb
out
decl
mov
inc
sbb
stos
sbb
fnstsw
pop
das
add
push
lods
fnsave
int
or
xor
in
add
xchg
or
js
mov
adc
aas
add
mov
xor
xor
jmp
mov
arpl
aam
xchg
jmp
mov
aad
movsb
or
mov
dec
push
rorl
xor
imul
in
lods
pop
sbb
in
lods
sbb
movsl
in
push
das
rclb
cmp
sub
shll
pop
mov
movsb
mov
mov
mov
inc
jl
add
inc
popf
outsw
sub
xor
into
cmp
inc
jns
shrl
pop
aad
aad
add
cmove
nop
ds
sbb
dec
ficoml
mov
pop
in
push
adc
fimuls
push
lds
pop
dec
fwait
sub
sti
lea
nop
loope
loope
pop
rcrl
into
or
mul
add
imul
adc
or
mov
jp
addr16
mov
push
dec
cltd
out
cmp
and
mov
jbe
mov
xor
push
cmp
test
jae
add
stc
fdivrl
int
stos
imul
sahf
jne
add
call
call
jle
out
daa
mulb
xor
andl
stos
xchg
jnp
jg
cli
addr16
xor
test
and
aad
cmp
cltd
cmpsb
cmpsl
shr
icebp
cmp
mull
nopl
cltd
push
int
mov
and
push
jp
mov
mov
push
add
fs
notl
and
xor
mov
ficoml
inc
cs
ffreep
dec
je
jne
adc
loop
ret
ja
add
push
cmp
fwait
mov
sbb
cmp
mull
mov
negb
xchg
mov
int3
lock
jns
push
xchg
enter
repz
push
in
inc
pop
xchg
push
cmpsb
xchg
repnz
mov
mov
imul
icebp
dec
xorl
or
xlat
inc
mov
sub
xchg
stc
xchg
jb
je
shrb
shl
mov
into
dec
pop
mov
add
mov
leave
mov
fldl
cld
add
push
and
lods
faddl
mov
and
out
std
sub
mov
decl
push
or
sbb
cmp
adc
push
xchg
xchg
mov
sarb
lcall
pop
es
mov
adc
inc
icebp
cli
shlb
jg
into
scas
jno
xchg
mov
push
cltd
adc
jp
xlat
mov
int
adc
dec
sub
or
in
push
jge
mov
jp
imul
clc
jg
mov
add
popa
leave
call
xorb
arpl
xlat
lret
xchg
popf
and
das
cld
jns
xchg
jne
and
mov
scas
lea
cwtl
xor
call
ss
ljmp
loope
mov
into
sub
pop
xchg
fildll
xchg
aas
mov
push
push
sbb
fld
jne
aaa
sbb
dec
in
adc
xchg
pushf
out
aas
jl
push
scas
sbb
mov
sub
loope
in
out
mov
je
dec
pop
mov
lret
loope
mov
les
nop
pusha
xchg
rcrl
pop
mov
int
jl
je
lcall
adc
mov
adc
es
push
jg
mov
xor
js
jecxz
add
sarb
lret
adc
add
jmp
cmp
test
mov
testl
and
jge,pt
popf
jecxz
test
popa
ljmp
mov
out
repnz
pop
stos
sbb
push
ljmp
ljmp
mov
sub
pushf
roll
daa
mov
xchg
int3
xor
push
xor
adc
and
int3
movsl
or
shrl
sarl
jne
test
pop
sbb
mov
lea
fnsave
fsubl
movsl
inc
lea
xchg
dec
imul
fabs
lret
out
xchg
pcmpeqb
and
push
daa
and
pushf
daa
xor
nop
aaa
mov
and
je
cmpsl
inc
imul
mov
mov
or
pop
pop
and
inc
xor
mov
mov
int3
in
lret
add
inc
shrb
std
lock
out
push
jo
jp
push
arpl
subb
and
add
add
cmp
daa
movsl
aaa
mov
jg
dec
out
negl
int3
int
cld
cmpsb
cli
xchg
pop
xchg
push
cltd
push
pop
mov
es
mov
jmp
xchg
int3
clc
sahf
dec
stos
aaa
mov
push
fsubl
lret
daa
js
in
int3
loop
mov
push
mov
mov
xchg
arpl
push
insl
fldenv
stos
and
push
subl
mov
jb
mov
xchg
inc
xchg
lods
and
push
cs
add
lahf
and
popa
adc
cmpsl
into
cs
adc
aad
mov
mov
xchg
pop
sbb
and
jnp
cmp
mov
cs
lret
mov
fs
add
jp
clc
cmc
mov
out
cld
lds
insl
add
or
dec
push
insb
loope
add
cmp
or
or
xor
add
or
mov
adcb
int
xchg
xlat
fiaddl
inc
sub
and
add
fimull
inc
out
hlt
lods
rorb
mov
add
into
mov
lods
jle
popa
pop
jnp
and
cmp
cmc
lods
sub
addr16
aaa
dec
lret
mov
test
sub
aam
aad
je
fmuls
jp
outsl
inc
cmpsb
jecxz
jecxz
mov
push
mov
loopne
dec
jmp
ja
mov
sub
adc
rcrb
xchg
sbb
ja
ret
call
dec
test
xchg
in
xor
divl
push
cmp
dec
test
jge
adc
add
sub
loopne
push
aas
adc
sbb
cli
fwait
or
xchg
or
repz
cmp
sahf
lock
or
jnp
mov
mov
ja
enter
mov
lahf
push
in
lock
mov
jae
adc
and
int3
lods
add
notb
xchg
insb
rcrl
jno
xor
or
pop
shl
ficoml
jecxz
xor
pop
divb
js
add
xchg
sbb
xchg
and
imul
or
dec
mov
mov
pop
loopne
cli
dec
in
fistl
pusha
sub
inc
sub
adc
jmp
aaa
mov
lahf
cmpsl
lret
and
lret
dec
push
repz
push
xor
stc
mov
imul
fnstsw
and
mov
mov
sbb
jmp
cmp
xor
pop
popf
push
das
repnz
lret
mov
and
or
xchg
ret
push
fsubl
push
xchg
orb
scas
adc
popa
pusha
xchg
lds
mov
stc
insb
gs
mov
mov
dec
iret
jg
fs
mov
cmp
sbb
and
xchg
push
add
add
cmp
mov
xchg
aad
jmp
es
and
push
dec
jbe
incl
les
dec
int
mov
out
xchg
aas
cmpb
aam
xorl
or
int
sub
add
es
lahf
dec
scas
int3
sbb
rcr
addb
or
mov
xor
out
jecxz
cmpsb
mov
aad
mov
mov
mov
mov
out
adcb
fistpl
rorl
cmp
mov
mulb
add
movsl
sbb
push
pop
and
mov
or
or
cmp
stos
sar
lds
jl
les
push
insl
cmp
cmp
sbbb
push
fistpll
adc
dec
cmp
fldl
in
dec
idivl
or
jecxz
and
int3
leave
inc
lretw
mov
scas
and
lcall
mov
fstpl
in
lret
pusha
push
mov
mov
push
pop
and
inc
or
ret
push
jae
xchg
fwait
xchg
cmp
sub
sti
jne
cmp
pop
xor
das
sahf
sub
xchg
sub
ljmp
sarl
shlb
test
js
loopne
lcall
dec
mov
jae
xor
gs
sbb
push
sub
jl
sbb
cmpsb
sbb
insl
add
arpl
dec
sbb
push
daa
adc
clc
stos
cmpsb
into
mov
fs
iret
addr16
pop
sbb
and
lods
ret
xchg
push
mov
dec
fmuls
push
imul
int
or
adc
dec
cltd
cmp
ret
inc
xchg
loope
xchg
push
add
jmp
push
imul
sbb
pop
sbbb
dec
mov
xchg
fcoml
movhps
push
pop
mov
jmp
pop
mov
stc
jl
inc
mov
popa
js
xor
addr16
xchg
xchg
lods
mov
inc
adc
pop
orb
jle
lea
mov
std
push
inc
adc
push
push
ds
out
pop
popa
sbb
imul
mov
mov
sbb
aad
testb
xor
add
sbb
or
inc
stc
jecxz
adc
cmp
mov
pop
outsb
scas
push
lahf
mov
jb
cmp
push
push
mov
xor
fwait
xchg
jo
add
add
push
sbb
mov
inc
inc
outsl
lret
pop
rcl
aam
mov
mov
ficoms
adc
pop
inc
lcall
mov
add
xchg
imul
cli
mov
js
dec
sbb
and
push
pusha
pop
cmc
add
sub
pop
out
jmp
push
cmp
or
fwait
sbb
movsl
es
gs
popf
popf
lods
push
sahf
aas
ficomps
sysret
aas
outsb
xchg
sbb
jo
pushf
push
ljmp
pop
js
inc
test
lock
out
ds
jb
pop
test
sbb
mov
mov
bound
ret
mov
inc
lahf
out
std
loope
fcmovnbe
xor
in
sarl
cmpsb
stc
jbe
aad
ror
jge
fwait
cli
xchg
and
inc
push
sub
popf
xor
adc
jmp
loop
jno
lods
rcl
mov
mov
mov
pushf
dec
xchg
sub
std
xchg
sub
rcrl
js
and
xchg
insl
push
maskmovq
push
pop
pop
and
mov
push
icebp
fsubs
xor
jb
pop
data16
or
repnz
arpl
lock
incb
aaa
shl
pop
popf
sarb
and
mov
mov
out
das
dec
xor
lahf
sbb
sbb
dec
imul
fwait
sub
in
bswap
mov
sbb
xor
dec
loop
fwait
xchg
hlt
mov
in
loope
add
add
mov
inc
mov
cwtl
xchg
add
pop
sti
sar
popa
pusha
inc
mov
xor
pop
dec
shrb
mov
les
imul
cld
xor
pushf
insl
cld
dec
push
xchg
adc
add
leave
xchg
add
test
and
cltd
rcl
cmp
insl
stos
fidivrl
bound
shlb
dec
out
in
loop
test
lcall
xlat
mov
dec
push
loope
inc
pop
fnstcw
fmuls
push
jne
and
jnp
or
popa
movsb
pop
insl
ret
insb
push
mov
daa
test
add
mov
sbb
add
pushf
fsubl
cmpsb
mov
and
daa
push
mov
mov
int3
ret
enter
mov
or
add
test
mov
out
xchg
leave
test
mov
sbb
cmp
sub
scas
nop
pop
xlat
not
adc
ficoml
cmpsb
pop
mov
pushf
sub
test
in
xlat
loop
pop
mov
jl
inc
mov
and
loop
fs
lret
add
sti
fsubl
stc
mov
fisttpl
call
movsb
jge
pop
lcall
sbb
shll
sub
sbb
mov
xlat
test
test
ret
mov
mov
popa
inc
test
rclb
jnp
mov
aad
ja
fiadds
pop
inc
ja
cld
mov
imul
movsb
je
in
pop
push
dec
clc
cwtl
enter
aad
ret
adc
pop
inc
movl
pop
jle
mov
inc
inc
or
cmpsl
mov
or
movsb
lea
popa
xchg
fldl
pop
push
ret
jp
jmp
mov
inc
adc
das
fildll
or
mov
clc
jns
arpl
xchg
jp
pop
imul
adc
ds
jge
not
and
mov
or
adc
jmp
mov
popf
pop
dec
in
mov
fistpll
mov
mov
stc
dec
repz
addr16
mov
cs
pop
lods
inc
and
and
jecxz
fisubrl
popa
mov
in
xchg
cmpsb
es
mov
mov
fst
jg
cwtl
lods
je
xchg
ss
scas
and
jge
orb
out
mov
push
stos
mov
dec
add
lret
or
cli
int3
ret
jnp
pop
mov
xor
fsubs
dec
pop
and
lret
aam
sub
bndstx
sub
insb
sub
jbe
clc
jmp
stc
js
sub
adc
fidivrl
js
dec
mov
call
out
push
push
out
cld
mov
or
test
or
mov
adc
xchg
test
roll
pop
xchg
js
hlt
sub
add
or
pop
xchg
test
std
xor
cld
mov
dec
or
inc
fsubrl
in
dec
jl
adc
mov
test
mov
sbb
add
sub
jmp
mov
sub
jae
aaa
mov
push
sbb
mov
jne
inc
xor
xchg
js
jns
stos
lcall
jae
xchg
mov
xchg
adc
pop
sub
pop
in
jne
xchg
jnp
repz
stos
sahf
dec
std
mov
jnp
mov
mov
popl
test
mov
dec
jno
xchg
or
movsl
fistps
ret
mov
sarb
in
dec
adc
out
nop
out
or
and
int3
sbb
jp
mov
jmp
cmp
add
jl
loop
sbbl
icebp
mov
lret
scas
mov
icebp
jbe
repz
cmp
neg
fwait
push
in
cld
adc
sahf
mov
cmp
cltd
jo
in
jecxz
add
add
adc
push
mov
mov
cmp
cwtl
pop
xor
jecxz
push
mov
aas
div
dec
leave
add
add
mov
adc
aad
jp
xor
sub
lock
and
mov
mov
out
iret
mov
scas
daa
and
xor
push
pusha
out
add
pop
inc
movl
rcrb
xor
sbb
insb
in
pushf
loopne
dec
out
lcall
adc
scas
sub
xchg
ret
push
sbb
test
nop
dec
daa
sub
outsl
jp
mov
cmp
cmp
es
insl
nop
test
and
xchg
sub
das
loop
je
ds
pop
mov
jbe
hlt
cld
sub
out
test
cmpsb
in
clc
add
test
inc
orl
inc
sub
pop
push
push
clc
in
push
imul
push
shrb
cmp
sbb
stos
fists
jbe
fistps
enter
out
lcall
ucomiss
outsb
sub
in
mov
je
aam
enter
inc
notb
mov
cmp
cmp
mov
in
std
movsb
and
jmp
mov
push
xor
jo
js
xchg
jne
mov
fstpt
lret
nop
sbb
hlt
in
or
xchg
or
cmc
mov
inc
ss
pop
addl
cmp
repz
cltd
and
and
adc
subl
fimuls
and
cmpb
and
mov
insl
cmpsl
aad
jb
cltd
mov
in
jne
jbe
and
push
add
cmp
push
adc
and
inc
jg
and
xorb
xor
pop
ljmp
sbb
sbb
sub
sbb
pop
jp
mov
xor
loope
push
and
stos
fcom
cwtl
mov
push
mov
adc
add
mov
cld
aad
mov
cmp
ss
stos
or
sub
shll
sub
dec
int3
ficoms
arpl
lods
incb
je
xchg
ds
loop
std
addl
testl
imul
xchg
add
sub
es
adc
das
fucomp
inc
imul
test
fs
mov
jmp
and
rcrl
nop
jno
fwait
or
dec
popf
mov
pushf
fisubl
jle
idivb
test
lret
mov
int3
sbb
or
or
sbb
cli
aad
ret
inc
mov
ja
repnz
push
and
push
stos
orb
int3
ret
negl
mov
push
int
aaa
mov
out
rolb
adc
clc
imul
mov
add
sar
sbb
push
push
mov
dec
add
push
jno
dec
aas
sti
xchg
jo
jne
add
mov
dec
lahf
and
jnp
in
lret
push
jle
add
sub
mov
mov
into
inc
push
cmp
stos
out
xchg
in
sbb
dec
iret
gs
cmp
pop
push
in
mov
dec
movsl
inc
leave
bswap
jno
mov
stc
mov
sbb
mov
stos
cmp
and
inc
cltd
into
xchg
fs
insl
xor
pop
arpl
jle
pop
and
lahf
sbb
add
ljmp
cmp
fs
pop
int3
jae
jne
js
lods
push
mov
out
mov
gs
mov
cmp
in
adc
mov
mov
adc
pcmpeqb
mov
xor
dec
mov
scas
pop
dec
xchg
xchg
leave
jnp
adc
lods
xchg
adc
xchg
fists
ja
cmp
repnz
popa
lahf
nop
mov
jmp
mov
adc
push
add
cmc
je
loope
les
inc
xor
mov
pop
cli
subb
mov
addr16
imul
mov
mov
pop
lcall
push
inc
arpl
test
xchg
or
mov
inc
aaa
mov
cs
add
scas
jle
pop
pop
testb
outsb
mov
scas
cmp
mov
xchg
xor
mov
enter
xchg
mov
repnz
xor
aam
cmc
jp
cmp
pop
push
lcall
ds
fs
cs
pushf
repz
subl
push
cli
jecxz
mov
pop
or
cld
and
pop
sub
sahf
push
icebp
cld
jl
dec
std
mov
fs
mov
push
js
xchg
lret
lds
pop
pop
pop
scas
into
shll
insb
lret
pushf
xchg
and
in
push
adc
aad
mov
leave
es
mov
lods
es
or
adc
xor
setae
fstl
in
je
fwait
das
inc
mov
aaa
dec
rcl
fsubs
stos
or
or
mov
or
divb
ret
add
or
sub
sbb
mov
add
lods
xchg
stc
addr16
jb
stos
shr
fcmovnb
jle
adc
mov
sahf
xchg
adc
arpl
loopne
cmp
dec
jge
pushf
pop
lret
add
pop
mov
push
pop
int
sbb
adc
cmpsl
and
or
jo
in
lret
xchg
les
sub
cmp
push
adc
jo
and
movsb
and
sbb
add
loopne
cmp
mov
inc
xchg
mov
push
ret
enter
push
ret
xlat
cld
adc
sub
or
dec
cmp
push
sbb
shrl
setbe
push
cmc
rdpmc
xlat
xchg
rcl
dec
shl
pop
test
mov
je
jno
cmp
push
aas
gs
xchg
popa
mov
pop
jnp
and
jge
or
inc
xchg
jne
xchg
pusha
cmp
ds
andb
ftst
jae
stos
push
movsl
movsb
into
xchg
movsb
dec
rcr
gs
mov
cld
and
inc
in
lfs
out
out
hlt
ss
into
movl
xchg
loopne
add
pop
cmpsb
xchg
or
push
out
mov
rcrb
sbb
loop
shlb
loope
mov
dec
jp
jno
sarl
xor
mov
cmp
inc
fbstp
cmpl
mov
aam
or
inc
test
mov
mov
movsl
and
pop
push
xorl
scas
jbe
scas
fidivs
sti
and
and
jbe
je
sub
in
push
push
cwtl
setg
dec
push
cmp
mov
dec
fs
mov
sub
mov
aad
sbbb
mov
cmp
loopne
xchg
vsubps
jl
je
cmp
pop
xor
and
lods
ds
stos
subl
lock
mov
push
or
dec
js
xor
aam
or
and
jl
xchg
sub
sbb
cltd
inc
dec
inc
pop
push
push
mov
faddl
pop
mov
movsb
xlat
xchg
sub
pop
inc
push
jg
mov
ja
loop
fwait
mov
lret
into
jle
sbb
ret
sbb
push
jmp
pop
xchg
lcall
call
loopne
or
out
popf
test
cmp
cmpsl
outsb
pop
dec
sbb
loop
lahf
cwtl
jbe
mov
ja
in
and
push
add
sar
add
mov
fisttpll
imul
pop
insl
out
inc
dec
pop
rol
les
jle
outsb
pop
les
ret
inc
sbb
add
pop
cld
push
pop
mov
int
sbb
xor
test
jae
cmpsb
stc
das
mov
pop
xchg
sbb
or
cmp
sub
xchg
ljmp
sbb
adc
adc
es
dec
jo
mov
sub
fs
mov
cs
pop
fs
mov
push
sbb
out
loope
inc
rclb
icebp
inc
fisubl
or
xor
getsec
xor
adc
repnz
xchg
adc
push
pop
inc
mov
xchg
dec
xor
push
jl
pop
inc
and
push
mov
into
jae
aad
jbe
scas
cmpsb
cmpsb
fwait
mov
arpl
dec
dec
sbb
aas
mov
jle
call
xlat
rorl
inc
fimuls
loop
lods
jle
mov
mov
pop
mov
je
lcall
bound
sahf
mov
cld
js
ret
outsb
adc
imulb
and
cmpsb
outsb
inc
dec
shlb
sbb
cmc
jb
cld
and
jp
aas
sbb
jno
addb
out
out
xchg
dec
or
dec
and
dec
icebp
lods
sbb
pop
into
jg
mov
out
fldcw
adc
aaa
cmp
cmp
popa
pop
in
cmp
jmp
sbb
sub
mov
or
adc
or
setb
into
bound
add
stos
or
and
push
aad
addr16
or
test
mov
cs
jae
cld
xchg
aam
jns
loop
and
data16
inc
cmp
in
shlb
mov
sub
sbbb
idivb
shll
xchg
mov
mov
movsl
mov
mov
lea
out
inc
or
push
add
fdiv
cmp
sub
insl
pop
add
cmpb
jge
jno
jo
aaa
adc
jno
and
sub
or
mov
mov
movsl
fisttpl
out
mov
shl
adc
push
add
cmpsl
add
mov
xorl
or
adc
pop
loopne
xor
mov
je
fwait
insb
inc
sbb
cmp
cmp
lahf
test
je
cmp
lds
xor
xor
jl
mov
sti
aas
loopne,pn
fldcw
scas
mov
lahf
pop
enter
push
mov
cmp
aam
call
and
add
out
mov
lds
fiaddl
les
notl
pop
sbb
jne
hlt
and
add
test
dec
test
pushf
repz
fsubs
lcall
adc
icebp
dec
adc
push
hlt
out
loope
pop
mov
cli
or
ja
push
aam
inc
sub
cmp
int
sub
mov
ficoms
test
xchg
cmc
mov
fsubr
cmpb
mov
jecxz
ljmp
xlat
out
inc
mov
imul
loop
jns
pusha
mov
aaa
sbb
add
jg
or
in
push
mov
cmp
pop
fdivrs
add
mov
popa
outsl
pop
faddl
adc
lret
mov
add
inc
jnp
mov
cmp
sub
inc
stos
and
mov
es
jno
cmp
xchg
adc
shl
stos
in
jb
jnp
push
sub
sub
cmp
jne
outsb
inc
mov
inc
shl
push
mov
or
add
cld
xor
lcall
sbb
int3
inc
jo
sub
imul
ret
push
repz
lods
add
push
test
xor
adc
incl
jmp
daa
sahf
sub
cmp
addr16
push
icebp
jns
rolb
sbb
notl
ds
push
mov
lret
mov
dec
adc
inc
mov
mov
add
test
das
jne
lds
or
push
xor
aam
jmp
jne
pushf
xchg
and
sub
jle
pop
mov
icebp
pop
jp
push
add
gs
xor
sbb
das
or
xchg
add
fdivr
push
push
add
fcmovb
xor
mov
lods
cld
jecxz
ret
aas
jae
fld
rcll
jo
or
sti
ja
and
mov
mov
or
mov
mov
sbb
pop
fldl
das
stos
push
xor
int
cmpsb
fldt
shlb
fs
imul
mov
repnz
sub
loope
call
mov
fstp
push
mov
nop
adc
pop
xchg
jecxz
push
mov
inc
dec
and
cmpsl
adc
cmpsl
imul
mov
aas
sub
shl
fdivs
xchg
stos
std
inc
dec
mov
orb
pusha
cld
sbb
mov
cmp
sahf
je
shr
insl
lahf
fs
push
popa
cwtl
jge
clc
hlt
mov
rcll
xchg
jp
sbb
cmc
test
mov
inc
cmp
pop
mov
gs
insb
pop
out
test
xchg
adc
cmp
fidivl
sbb
jp
and
cmp
divl
pop
pop
sahf
imul
aad
jge
leave
test
cmc
fdivs
stc
jns
ret
push
cmpl
jbe
out
mov
pop
xchg
fnstenv
and
xor
xchg
loope
mov
mov
mov
cltd
adc
cmpsb
cwtl
stc
or
adc
cmpsb
sub
in
stc
cld
cmp
pop
pop
iret
dec
inc
sbb
mov
ljmp
mov
pop
in
loope
pop
scas
xrelease
lods
popa
mov
icebp
mov
rorl
clc
push
dec
and
inc
out
lock
mov
mov
leave
dec
dec
cmp
pop
jo
mov
mov
sub
js
cmp
imul
test
push
mov
and
xchg
and
addl
mov
idivl
movsb
ja
add
dec
loop
mov
aam
stc
inc
xor
imul
dec
stos
clc
adc
fnstenv
sub
jae
les
pop
jno
cli
xor
repnz
or
push
add
xchg
insl
sbb
shr
cmp
hlt
mov
loopne
rcll
addb
stos
in
in
push
pop
jecxz
gs
pop
test
jae
iret
aas
dec
pop
std
adc
mov
leave
orb
lods
cmp
sub
bound
push
stos
sbb
pop
push
mov
fcos
fcom
cmp
int
xchg
ds
stos
orl
sub
dec
repz
add
xor
addr16
mov
cmp
xchg
ljmp
sub
mov
mov
ret
sti
mov
and
rol
fwait
mov
fdivl
enter
mov
add
jge
js
lea
xchg
pusha
mov
test
jb
scas
sub
das
mov
mov
push
adc
xlat
orb
xor
pop
sub
mov
push
mov
popf
mov
push
pop
sub
add
out
sub
out
adc
jne
nop
lea
shll
cmp
cld
pop
jecxz
outsl
je
jnp
pop
pop
pop
loope
jnp
sbb
notb
daa
daa
dec
lods
mov
into
push
xor
imul
adc
mov
xor
lds
push
lcall
fwait
jns
inc
fisubl
mov
call
outsb
mov
or
mov
mov
and
mov
pusha
pop
cmpsl
pushl
outsb
xor
mov
sub
xor
push
dec
inc
mov
fcompl
and
push
mov
insl
lret
daa
jne
test
pop
sub
stc
jge
xchg
adc
adc
stos
sub
notl
mov
xor
push
cmp
cltd
sub
push
add
cltd
arpl
jecxz
fcmovbe
jg
inc
shrl
addr16
pushf
mov
movsl
into
mov
dec
cmp
test
dec
cltd
mov
out
movsb
add
cmpsl
mov
in
daa
sub
jge
fwait
mov
pushf
or
jns
cmp
outsl
jecxz
jl
push
lcall
test
out
clc
rclb
leave
inc
jae
out
lea
in
xchg
std
adc
and
cli
popf
popa
mov
rorb
dec
dec
dec
subl
daa
ret
push
and
jne
push
repnz
cld
add
jge
cltd
mov
xchg
jmp
loope
call
mov
mov
imul
jmp
pop
jb
push
jno
lods
dec
jmp
adc
out
dec
ret
es
add
push
loopne
stos
fdivrp
mov
adc
mov
mov
loope
jmp
int3
setae
or
sarb
adc
or
add
mov
inc
insb
loope
cmp
leave
js
xor
fdivs
sbb
mov
mov
out
pop
dec
imul
lcall
inc
mov
jp
in
pop
leave
int
sti
inc
push
add
aam
add
orb
in
lock
lret
ror
xchg
notl
out
aaa
stos
test
xchg
cmp
nop
mov
arpl
cmp
mov
jmp
rol
xor
mov
dec
mov
sub
out
cmp
sbb
mov
icebp
pop
sar
fs
mov
fchs
lock
cwtl
jb
cmp
rclb
pop
xchg
insl
inc
sub
mov
out
and
shlb
push
mov
adc
out
jns
daa
repz
xor
sbb
xchg
popf
sti
cmp
int3
xchg
adc
or
cltd
inc
pusha
cmp
adc
sbb
xchg
adc
sbb
jg
sub
mov
lds
xchg
xchg
insl
arpl
fstp
mov
inc
adc
popf
adc
jmp
cltd
lods
stos
pushf
dec
xchg
scas
inc
xchg
pop
pop
das
or
jp
push
fldenv
adc
scas
mov
or
jmp
push
imul
into
sbb
stos
iret
enter
jmp
sbbl
sbb
jne
pushf
icebp
inc
xchg
aaa
ficomps
sub
or
mov
inc
or
add
mov
aad
xor
xor
pushf
cli
stos
jle
mov
jge
insl
inc
pop
insl
xor
add
je
leave
inc
xlat
mov
push
jmp
sbb
imul
mov
or
sub
mov
inc
jecxz
js
loope
mov
push
hlt
dec
inc
shrl
mov
stos
add
push
aas
sub
sub
xlat
cmp
xchg
ss
inc
mov
add
mov
inc
pop
xchg
inc
dec
adc
fcom
mov
test
inc
sub
cli
cmp
cli
lahf
sbb
aam
xor
sbb
push
inc
cmc
mov
out
jno
pop
sti
imul
in
popf
adc
paddsw
jno
add
ret
loopne
fcoms
add
ss
pop
or
mov
das
cmp
pop
dec
fisttps
loop
mov
xor
mov
xchg
or
jmp
cmp
jo
pop
mov
std
mov
cmp
test
outsl
je
xchg
mov
push
sub
movsl
stc
mov
xchg
jle
loopne
dec
jg
adc
ret
out
cwtl
stc
push
push
cmp
sbb
pop
sahf
xchg
mov
adc
sahf
mov
or
subl
fsts
adc
jp
sar
or
and
sbb
mov
xor
pop
je
inc
clc
test
mov
fnsave
daa
lock
mov
repz
xchg
lret
mov
lods
insb
mov
lahf
pop
inc
pop
pop
icebp
inc
add
jge
pop
add
js
sbb
xchg
add
aad
mov
mov
test
jl
sub
test
and
inc
jg
or
cmp
xchg
pop
scas
cs
and
test
push
test
call
mov
iret
test
inc
in
xchg
xchg
mov
inc
push
call
push
jb
subb
loopne
mov
shll
sub
insb
sbb
lret
xor
xlat
add
lods
pop
imull
mov
cmpsl
pop
loop
inc
fisttps
sub
out
mov
outsl
push
js
repnz
ja
inc
sarb
stos
das
and
insb
cmp
pop
xchg
mov
pushf
pop
shrb
jl
sbb
not
jo
cmp
andl
mov
scas
mov
insb
out
out
fdivl
push
and
lcall
sub
jge
ret
cwtl
lea
adc
in
div
mov
cmpsl
mov
js
lea
sahf
test
inc
fistl
dec
js
leave
mov
mov
test
dec
jbe
ret
cmp
dec
jo
cmpsl
push
pop
scas
push
test
pop
iret
js
sub
mov
mov
jge
ret
cmc
std
sub
cmp
ret
pop
inc
xchg
xchg
push
mov
add
jb
dec
dec
movsl
lahf
int
xor
das
cmp
adc
lcall
xorl
nop
inc
cmp
inc
out
fsts
aad
jge
cld
cltd
jae
insb
loope
xor
mov
sub
fwait
mov
push
fsubrl
xchg
xor
push
and
ficomps
mov
test
or
xchg
subb
mov
mov
xor
addl
xchg
mov
dec
mov
adc
in
nop
push
xor
jle
fs
cwtl
pop
cmp
push
lods
jp
push
xor
aad
mov
aam
mov
xor
rcrb
pop
loop
inc
push
repz
adc
add
int3
xchg
out
sbb
cld
pop
nop
repz
or
scas
insl
jne
fwait
in
lret
lods
inc
imul
testl
stos
sub
xor
dec
repz
jle
xchg
data16
loop
nop
repz
mov
popa
shrb
bound
jp
xchg
dec
repz
fnsave
insl
cmpsl
clc
divl
rcl
or
push
mov
sub
sbb
je
arpl
pushf
fs
mov
addr16
add
sti
ret
add
xor
lds
cwtl
popa
popa
mov
sbb
shl
ss
lea
in
mov
push
inc
mov
ficoms
adc
adc
ds
adc
cmpl
sbb
cmp
fwait
aaa
hlt
arpl
dec
mov
flds
addl
fwait
mov
sbb
cmp
sub
out
xor
xchg
fidivs
jp
outsl
outsb
test
mov
mov
pop
divl
ja
jb
int
mov
sbb
cmpb
mov
or
push
enter
mov
mov
dec
dec
mov
data16
and
lret
aaa
mov
shll
ljmp
repnz
ljmp
xor
mov
sarb
cmpsl
xchg
lods
test
mov
pop
inc
lret
lock
jns
inc
add
cmp
test
and
sarb
push
gs
imul
adc
test
stos
push
fs
push
jne
js
popf
sbb
fs
lea
pop
repz
rep
cmp
xchg
lcall
in
add
ds
adc
mov
arpl
and
mov
lcall
mov
and
call
xlat
stos
jp
xchg
cmp
jb
orl
test
sub
lea
pop
dec
jo
incb
aam
jp
es
lods
dec
xor
jl
test
jns
int3
les
ds
pop
xchg
pop
mov
fidivrl
jno
bound
push
jg
call
movsb
pushl
out
mov
popf
mov
daa
mov
adc
push
xchg
xlat
cltd
xchg
and
push
sahf
arpl
lea
stc
add
outsb
scas
adc
decb
lcall
cmc
jge
rcl
pop
fdivrs
pop
icebp
in
arpl
sbb
cmp
pushf
pop
clc
bound
push
dec
lret
cmp
mov
pop
mov
sub
movsb
repnz
aas
incb
cmp
leave
jne
fisttps
clc
insb
pop
mov
mov
and
adc
adc
lock
in
cli
and
adc
and
rolb
pop
push
stos
out
mov
andb
test
in
inc
dec
and
jnp
dec
ds
sub
mov
dec
add
loope
test
and
sbb
or
rorb
insl
push
push
cmp
dec
mov
lea
sbb
inc
pop
das
push
mov
icebp
sti
mov
jg
ret
ret
add
movsl
imul
icebp
roll
xchg
pop
cmpsb
inc
cld
out
fimull
or
or
jmp
loopne
xor
lahf
pop
mov
js
mov
sub
xor
gs
popf
mov
adc
mov
fadds
addr16
adc
lahf
cmp
mov
decl
sbb
loop
mov
js
ret
push
adc
out
mov
ror
inc
dec
inc
aas
push
inc
or
into
mov
fucomi
cmpsb
jae
mov
pusha
scas
jl
sbb
lods
js
test
popf
daa
and
imul
inc
mov
mov
jbe
rolb
adc
jmp
push
mov
jo
jb
testb
and
adcl
es
fcomip
adc
cmp
clc
in
adc
loop
lret
sbb
loope
jo
dec
xchg
iret
xchg
cltd
lods
dec
lret
cmpsl
pop
dec
movsb
hlt
test
insb
in
mov
fcmovb
fcmovnu
cmp
shll
pushf
push
sub
jge
imul
mov
add
push
aam
push
mov
inc
in
fisttps
fs
insb
pop
jo
test
cmc
stos
mov
icebp
inc
xchg
or
sbb
xor
std
xchg
imul
lret
cli
and
cmpb
mov
lea
jbe
adc
pop
mov
sbb
push
pop
std
outsb
out
testb
ja
pop
sbb
popf
push
es
sub
les
mov
sub
cmpb
add
pop
sub
xor
lret
daa
xor
enter
addr16
cwtl
jp
scas
arpl
and
xchg
pop
insl
faddl
xchg
aaa
ds
out
xchg
loope
push
jge
lcall
mov
mov
sbb
xlat
jns
mov
subb
aam
and
ss
dec
scas
repnz
pusha
mov
sbb
enter
lcall
and
push
mov
sbb
testb
in
add
sub
jecxz
adc
sbb
cmpsb
inc
jp
mov
sub
cmp
daa
xlat
js
in
sahf
dec
fmull
sbb
pop
fdivr
mov
mov
xchg
loop
mov
mov
mov
lcall
add
jecxz
xchg
jo
outsl
push
xchg
jo
sub
int3
sub
cmp
test
test
push
punpckldq
dec
popa
cmp
jecxz
aad
push
ja
jnp
add
imul
adc
out
cwtl
call
sbb
xor
dec
add
cli
lcall
shlb
lret
ret
mov
test
out
out
call
test
unpckhps
xchg
in
ja
mov
push
add
xchg
adc
add
ficompl
shlb
and
retw
and
inc
stc
lretw
xchg
mov
or
in
in
arpl
mov
push
dec
sub
js
cltd
xchg
in
xlat
cld
inc
fsubrs
arpl
sub
jecxz
mov
push
scas
jl
add
mov
jnp
pop
add
out
lret
pop
ss
sbb
mov
in
lock
xchg
mov
addr16
arpl
push
and
add
xor
mov
icebp
hlt
xchg
xor
aaa
mov
jecxz
fistps
cmp
cltd
data16
int
sbb
adc
loop
mov
push
jecxz
js
hlt
test
and
lock
insl
jp
push
inc
xchg
int3
sub
add
daa
xor
sub
lea
test
inc
mov
or
jmp
scas
or
fisttpll
adc
js
and
pop
std
cmpsl
loop
xor
cmpsl
arpl
stc
add
popa
inc
mov
sbb
add
stos
lock
adc
in
mov
popf
pop
sub
aad
mov
loop
repnz
inc
mov
inc
stc
pop
sti
sbb
addb
das
and
fnstenv
test
mov
and
add
orb
push
jmp
push
and
mov
inc
jno
ss
jo
scas
sti
pop
dec
je
dec
sub
outsb
jbe
xor
jle
je
into
jecxz
in
push
sbb
out
pop
cs
xchg
mov
seto
lock
sbb
sbb
adc
inc
mov
inc
lock
mov
xor
hlt
push
lcall
mov
out
add
addb
stc
in
mov
adc
and
fldenv
fimuls
and
mov
jbe
fnsave
and
pop
adc
cmpsl
mov
inc
adc
outsl
lret
push
pop
push
lret
cmp
leave
or
jb
xchg
push
loope
mov
mov
add
jb
mov
into
xchg
xchg
pop
shlb
ds
mov
subl
add
ds
das
or
imul
out
pop
sub
xchg
and
xor
pop
push
gs
notl
lods
inc
int3
xchg
repz
dec
lahf
add
jbe
pop
ret
pop
vmptrst
jecxz
cmp
out
jl
leave
lret
lahf
imul
idivb
outsl
dec
loop
dec
hlt
cmp
mov
sbb
push
push
hlt
cmovns
int3
in
cltd
sbb
iret
in
dec
mov
int3
mov
jecxz
dec
int3
push
or
push
push
and
fcomp
into
push
scas
inc
mov
clc
adc
dec
cltd
idivb
mov
jae
leave
add
insb
sub
pop
fdivp
adc
mov
jno
push
int3
adc
sbb
mov
jns
adcb
pop
mov
rol
sahf
test
xchg
in
icebp
mov
add
xor
mov
mov
xor
xchg
enter
test
and
cltd
mov
jb
sahf
rcr
pop
jns
jmp
dec
sbb
jge
jle
or
or
mov
inc
sbb
lret
xchg
aas
xchg
push
and
fisttps
mov
loop
sub
xchg
xlat
jno
and
ja
adc
sub
xor
mov
push
push
xor
ret
pusha
inc
xchg
cmc
push
add
ret
add
push
xchg
popa
inc
inc
and
inc
add
xchg
je
icebp
imul
fwait
xor
mov
roll
cmpsl
jo
fistpll
loop
roll
pop
xchg
dec
das
sbb
data16
out
cmpsl
inc
add
inc
addr16
and
fidivs
mov
lahf
cmp
out
jns
or
dec
sbb
sbb
jle
xor
and
int
or
decl
fstl
movsb
add
push
les
mov
mov
xlat
fs
inc
out
aaa
jae
xchg
fcomps
loope
push
daa
mov
ficoms
mov
shll
sahf
test
pop
jbe
in
imulb
add
mov
in
inc
pop
dec
mov
sbb
imul
icebp
sub
rcrl
sub
sub
adc
push
sbb
mov
lcall
pop
mov
imul
sarl
add
pop
lret
and
sbb
icebp
pop
and
in
mov
fisubs
jo
jb
or
leave
mov
jl
inc
push
add
mov
loop
dec
jne
sub
popa
push
and
jecxz
enter
out
ss
call
dec
jle
pop
lods
testb
add
mov
mov
daa
mov
fwait
cmp
inc
jo
add
dec
push
add
cltd
dec
mov
out
mov
lcall
rorb
sbb
mov
cmp
jno
jmp
cmp
sub
jecxz
gs
js
outsl
pop
sbb
mov
not
mov
fimull
push
jne
lods
shrb
sbb
push
sub
dec
push
inc
clc
dec
fcomip
repz
add
int3
dec
fisubl
shrb
popa
adc
mov
cwtl
inc
mov
mov
mov
out
enter
jns
in
xor
insl
sub
call
jmp
push
lahf
hlt
lcall
or
cmc
call
xlat
mov
or
ljmp
outsl
push
mov
dec
stos
sbb
insl
bsr
test
cmp
mov
inc
cs
fdivp
cli
inc
jg
sub
adc
dec
leave
cmpsl
js
stos
int3
cwtl
stos
mov
mov
stos
pop
mov
sbb
xor
adc
outsb
mov
adc
mov
repz
jbe
mov
sub
sbb
jno
negb
pop
cmpsb
ljmp
pushf
pop
orl
insl
aas
push
sub
cwtl
cmpsl
jb
xchg
loop
inc
sahf
enter
dec
xchg
cltd
dec
push
fnstsw
mov
mov
dec
popf
das
xchg
push
into
xchg
lcall
aam
push
cltd
cmpl
pop
mov
imul
stc
sahf
xchg
cmp
or
add
in
movsl
inc
xor
ds
dec
push
fwait
xor
fdiv
imul
sahf
mov
loopne
sub
mov
push
and
imul
sub
xchg
add
insl
aaa
and
icebp
ja
pop
addb
iret
pop
stos
add
sbb
popf
and
or
gs
insl
pop
adc
sub
clc
cmp
lret
jle
sub
das
or
shrb
lods
pop
lcall
dec
addr16
pop
gs
loopne
sbb
or
fmull
mov
cs
xor
xor
repz
rorl
adc
stos
aad
add
sub
fcoms
repz
loop
push
push
icebp
xchg
pop
jo
pop
adc
outsl
sbb
dec
imul
bound
jle
mov
in
xor
inc
shll
bound
fildll
decl
xor
lods
popf
out
rcrl
xchg
or
mov
pop
pop
adc
cmpsl
xchg
sbb
leave
ljmp
pop
pop
divl
mov
inc
ds
fnstenv
test
int
ja
push
cwtl
lcall
out
jbe
test
fists
jg
inc
gs
cmp
adc
push
lahf
pop
mov
mov
gs
sub
adc
jno
xlat
cli
stc
pop
sub
adc
cmpsb
push
sahf
stc
xor
jmp
arpl
jae
mov
add
jecxz
and
testl
loop
jecxz
rorb
lea
scas
ja
xor
xor
sahf
or
jle
xor
ja
xor
mov
dec
loopne
aad
data16
adcl
push
repz
sbb
cmc
fdivl
fidivrl
push
int
les
cltd
rcrl
bound
inc
add
ror
xchg
ret
jmp
push
aaa
outsl
aas
lret
dec
jecxz
aad
push
cli
cmp
stos
in
and
dec
cmp
mov
sub
insb
jecxz
mov
sbb
nop
es
and
in
push
pop
sub
xor
sbb
insb
cmp
lahf
es
imul
std
ds
loope
aam
ja
add
jecxz
popa
inc
mov
scas
xchg
stc
xchg
dec
mov
out
cmp
aaa
fadds
pop
out
xor
lods
orb
push
mov
lcall
popa
je
xlat
dec
ss
decb
ret
clc
sahf
xor
aad
in
mov
rcrl
mov
dec
adc
add
mov
add
add
mov
loop
jb
push
gs
rcl
mov
sbb
sbbl
lds
rcrb
mov
inc
xor
push
movsl
hlt
mov
pop
adc
orl
subb
cmpsb
arpl
imul
mov
jb
imul
lock
sub
dec
jmp
scas
sub
push
lock
dec
mov
cmpsl
and
inc
lods
mov
xor
imul
push
add
das
and
sarl
inc
xor
bound
ror
mov
aad
mov
mov
cld
jbe
mov
ja
je
dec
jle
xor
into
ficoms
pop
sub
sub
out
shll
cmp
mov
dec
inc
push
lahf
daa
push
enter
sub
int
lods
leave
adc
inc
pushf
fnstcw
pop
rcrb
scas
pushf
aaa
fistpl
fmulp
mov
ss
mov
push
dec
gs
and
jmp
loop
in
pop
in
test
mov
stc
ds
xor
mov
xchg
jae
dec
mov
sahf
out
or
imull
xor
inc
stos
scas
mov
add
fistpll
pop
sub
dec
addl
add
in
pop
jl
js
insb
lret
cmp
inc
je
sub
and
ss
mov
inc
pushf
sbb
cmpsb
lods
and
lock
inc
mov
add
fstpl
popf
test
add
pop
add
ljmp
jmp
lods
pop
les
add
inc
add
dec
inc
pop
inc
dec
push
or
dec
add
loop
gs
in
fisttpl
or
xor
cmpsl
cmp
mov
mov
xlat
inc
outsb
outsl
fcomps
jp
pop
movsb
and
mov
in
mov
aad
test
addr16
xor
test
int
jae
or
movsl
imul
sbb
push
cmp
shll
mov
les
dec
int
stos
into
inc
xor
das
xchg
or
inc
pop
and
hlt
mov
xchg
popa
push
loopne
aad
call
inc
xor
fdivs
sti
mov
das
push
xor
sub
mov
xchg
mov
sbbb
or
xchg
pop
mov
add
fisubl
sti
and
pop
ljmp
cwtl
fistpll
dec
push
xchg
repnz
inc
pop
mov
imul
add
dec
push
ljmp
jge
mov
dec
adc
mov
movsl
push
out
pop
sbb
cmp
jecxz
in
prefetch
or
je
push
sub
jge
into
sub
pop
cmc
ljmp
loope
and
mov
jle
call
sbb
inc
scas
pop
dec
movzbl
call
sub
loop
xor
pop
data16
popf
push
stos
push
xchg
ret
mov
in
inc
and
xor
pop
cmp
xor
inc
stc
mov
faddp
rcl
test
cmp
divl
lahf
rcll
push
xor
dec
add
ret
or
sub
mov
and
aad
imull
mov
mov
loope
popf
lahf
pop
pop
lods
sahf
sub
jge
add
das
fsubr
lods
jbe
mov
les
das
insl
daa
xchg
xchg
ss
cmp
sbb
mov
out
xor
push
mov
dec
insl
and
mov
out
mov
pushf
mov
ret
shll
testb
xchg
mov
and
outsb
ljmp
lcall
cmp
adc
stos
ljmp
ljmp
xchg
ds
sbbl
pushf
pop
inc
lahf
push
test
outsb
push
daa
pop
in
fimuls
sbb
fsubl
push
adc
and
jmp
ror
mov
cmp
loopne
xor
mov
inc
mov
jmp
gs
push
pop
sbb
jge
mov
mov
cmc
lods
dec
negl
dec
int3
cmp
jne
adc
fmuls
stos
and
xchg
popf
out
dec
pop
test
aas
sub
call
negb
push
sbb
repz
pop
sub
ret
pop
mov
xchg
icebp
inc
das
push
cs
insl
roll
bound
pop
cwtl
xor
cmp
adc
push
popa
sbb
repz
push
push
cmp
imul
mov
imul
mov
out
mov
jl
mov
jae
sub
js
scas
les
data16
rorl
push
dec
mov
cmp
fdivrs
xchg
push
loopne
mov
mov
cmp
gs
xchg
dec
ljmp
aam
test
loopne
cmpb
dec
loopne
popf
mov
test
outsb
out
add
xchg
movsb
cltd
add
sbb
xchg
sbb
inc
jno
fsubl
adc
aam
mov
repz
ja
sarb
inc
add
cmp
adc
push
dec
ss
das
imul
mov
mov
pop
cvtps2pd
and
jnp
push
fstpl
jno
inc
fstpl
fs
pop
mov
push
sarb
push
cli
sub
rclb
sbb
sahf
shrb
sbb
dec
movsl
xchg
pmaddwd
push
sub
mov
shrb
pop
fwait
adc
scas
jb
ds
in
push
lret
or
shr
jbe
into
jbe
stc
or
pmaxub
and
outsb
push
shrb
popa
sbb
jo
out
xor
lahf
cltd
jnp
and
out
sub
jmp
cmpsb
push
inc
adc
cmp
out
push
sub
pop
mov
adc
mov
cs
leave
ja
shlb
cmp
sbb
jo
aad
imul
cs
popa
cmp
jnp
rcrb
test
sub
aam
mov
xchg
mov
and
jle
jmp
xchg
sbb
nop
pushf
insl
fisubl
repnz
int
jg
test
int
lret
jmp
in
or
ret
out
fs
xchg
mov
adc
aam
pop
and
fiadds
ficoml
xor
pop
ljmp
xchg
lock
add
insb
adc
outsb
sub
icebp
inc
push
mov
jmp
xor
sbb
shlb
add
aad
pop
mov
sbb
cmc
lock
or
mov
cs
lahf
and
xor
push
mov
outsb
sub
stc
cld
jg
enter
sub
push
add
pop
popf
mov
sbb
mov
add
imul
lret
clc
mov
sbb
inc
cld
pushf
cmc
imul
bound
adc
cwtl
or
inc
sbb
or
cmp
out
outsl
dec
sbb
cs
add
push
nop
and
sub
scas
or
xchg
mov
pusha
gs
mov
jge
add
adc
pushf
mov
push
sub
in
jmp
test
pop
js
test
cmp
in
movsl
cmp
mov
enter
cmp
or
hlt
xor
or
lret
jbe
push
shl
inc
lcall
lcall
imul
dec
inc
pop
pusha
cmp
add
inc
jp
test
inc
mov
inc
mov
lock
das
or
iret
mov
sti
cli
push
and
mov
mov
or
in
mov
cwtl
mov
cwtl
pop
lods
or
and
jbe
push
pop
xor
cs
arpl
mov
xchg
inc
inc
mov
mov
cmpsl
push
test
sbb
pop
dec
inc
mov
andl
mov
pop
jmp
cmc
lcall
aad
and
std
enter
xchg
mov
mov
mov
das
mov
sbb
inc
pop
icebp
addb
ret
push
jnp
adc
imul
push
push
push
fcoml
int3
movsb
sbb
inc
loopne
push
ficompl
jb
push
test
pop
jmp
call
ljmp
out
mov
push
fisttpll
dec
sub
fcomps
gs
push
imul
insb
fwait
cmp
add
mov
dec
ret
or
push
push
pushf
xor
add
mov
pop
push
cmp
xor
fcoms
test
push
inc
fs
and
push
pop
clc
sub
scas
in
out
mov
push
mov
loopne
sar
push
mov
push
aam
dec
xor
test
aaa
pop
out
cmpsl
clc
push
dec
pop
or
enter
sbb
testb
loop
mov
roll
fmuls
sub
mov
dec
in
xlat
aad
movsb
inc
aad
nop
mov
mov
imul
inc
adcb
xchg
stos
sbb
popf
mov
jle
fbstp
je
pop
ret
pop
push
orb
jae
push
push
sbb
lds
ljmp
xor
les
push
xchg
fbstp
gs
and
pop
xor
pop
push
adcb
mov
outsl
jmp
es
out
add
jnp
pmulhw
pop
pusha
dec
addl
ljmp
cmc
pop
in
ds
enter
jbe
mov
ss
mov
push
jbe
out
hlt
lret
jmp
insl
mov
outsb
nop
adc
mov
push
cmc
inc
ja
out
test
mov
mov
sub
sbb
xor
lods
mov
out
cld
mov
leave
push
cmp
in
push
jl
and
mov
jbe
outsb
repnz
xchg
fs
stc
jle
notb
dec
mov
ja
loop,pn
sbb
cmc
lods
pop
bndstx
and
cli
loopne
mov
gs
push
fwait
lcall
pop
clc
clc
pop
les
ja
cmp
cwtl
imul
cmp
pushf
sbb
mov
cmp
mov
cli
sbb
push
fcoms
in
cltd
pop
jmp
and
mov
out
neg
add
jne
inc
movsb
pop
cmpsb
dec
popa
cmp
dec
push
arpl
cmp
jne
subb
jae
xchg
mov
lea
inc
xchg
rcrb
fisttpl
sbb
jnp
jnp
out
xchg
das
int
shrb
scas
adc
push
mov
sahf
fisubrs
add
mov
ja
mov
adc
push
jg
xchg
mov
enter
inc
dec
enter
call
in
or
adc
fstps
out
cmp
stos
in
dec
test
mov
dec
in
lahf
add
sbb
out
jnp
sub
sbb
sub
xchg
aad
xchg
imul
jo
sub
pop
mov
out
lods
loope
mov
xor
xor
sti
in
pop
rcr
sbb
cmc
sbb
cmc
xchg
jo
adcb
fwait
aam
cmpsl
xchg
clc
dec
pop
out
loope
or
jmp
or
cli
fsubs
repz
in
jl
addr16
call
mov
imul
out
popf
fisttps
scas
fidivrs
nopl
mov
decl
jne
mov
mov
notb
dec
inc
cmp
shrl
jp
rcrl
out
and
mov
add
lcall
mov
cs
jns
lret
inc
stc
or
jle
mov
xor
xor
pushf
add
ret
cltd
dec
test
ljmp
lret
inc
mov
sbbb
addr16
jno
les
test
and
mov
pusha
call
mov
xchg
popa
fldenv
or
mov
out
sub
loop
add
aaa
lahf
fcmovne
jmp
xchg
push
and
adc
stos
orl
gs
sahf
cld
negb
mov
mov
fldl
negb
sbb
adc
or
inc
aam
cmp
insl
jb
iret
aad
loope
inc
cmp
stos
xlat
daa
mull
cmp
fwait
ret
iret
push
rcrl
and
rcrl
pop
cli
std
fsubs
xchg
fsubl
ret
es
xorb
lds
cld
dec
jp
inc
dec
inc
sub
sub
sub
xchg
and
aaa
xor
cs
push
pop
mov
xchg
out
sub
xchg
pushf
push
lret
rclb
les
lods
dec
mov
push
add
loope
hlt
mov
rolb
push
daa
push
cmp
mov
frstor
fnstsw
hlt
stc
add
cmp
cmp
mov
cmp
adc
jecxz
xor
mov
push
lcall
or
pushf
daa
jl
dec
cmp
xchg
movsb
ficoml
inc
lea
mov
stos
es
xor
xor
cltd
xchg
adc
outsl
add
adcb
cmpsb
sub
mov
out
mov
in
int
movsl
sbb
fs
sub
test
lcall
jmp
subb
inc
mov
xor
sub
jae
dec
outsl
xor
cli
mov
fildl
stos
jns
inc
js
in
add
adc
mov
sbb
sbb
inc
pop
mov
or
scas
add
push
push
jp
sbb
cmp
adc
add
push
and
pop
loope
mov
mov
dec
ljmp
mov
ret
pop
xor
int
bound
add
int
into
cs
dec
jo
fsubrs
daa
loope
repz
ds
cmp
jp
jns
xor
cmpsb
mov
mov
mov
sub
inc
sbb
push
sbbb
mov
xchg
arpl
cmc
sub
lret
arpl
ret
push
push
mov
mov
shll
mov
int
sbb
test
dec
adc
xor
inc
cld
je
mov
js
pop
in
inc
out
movsl
add
in
fs
pop
dec
insl
push
jae
outsb
xchg
scas
scas
adcb
ror
iret
lret
popf
cmpsl
push
dec
adc
mov
add
push
xchg
scas
cmp
jecxz
mov
push
loopne
in
bound
jo
and
mov
push
inc
xchg
fidivrl
aam
lea
or
jae
mov
insb
pop
mov
add
outsl
xchg
repz
xchg
add
js
cmp
popa
and
jb
in
cmp
add
sahf
sbb
dec
les
cltd
sub
jl
xor
stos
pusha
in
or
xchg
inc
cmpsb
inc
lods
inc
fstpt
cmp
sub
mov
xchg
mov
pop
or
or
je
pusha
out
push
or
mov
testb
or
push
pop
hlt
fs
cltd
mov
je
stc
or
outsb
cmc
mov
cmpsb
jp
mov
mov
imul
mov
test
bound
into
xor
in
pop
lds
pop
hlt
out
imul
xor
jb
xor
mov
repz
lds
lcall
push
js
int3
jle
pop
mov
daa
repnz
or
mov
cltd
adc
mov
out
in
cs
inc
mov
adc
sub
jecxz
pop
call
xchg
subl
push
mov
bound
cmp
inc
arpl
test
fcomps
xchg
sub
movsb
dec
jnp
lahf
push
mov
push
sbb
subb
iret
cmp
jbe
pop
lret
cmp
dec
sub
mov
mov
sbb
iret
lcall
or
jecxz
fs
bound
fcoms
sbb
iret
jne
popa
cmpsb
or
dec
mov
and
xchg
or
fs
push
lods
jl
cmpb
or
or
or
js
mov
inc
fisubl
xchg
int3
adc
push
sbb
pushf
push
mov
and
ret
or
mov
ror
imul
jbe
aas
out
mov
ds
inc
sub
dec
pop
out
dec
xchg
or
xor
mov
mov
dec
dec
imul
test
and
lea
test
pushf
popa
mov
jbe
or
loop
imul
sti
insl
xorb
cmc
popa
test
jg
rcr
push
enter
scas
pop
add
fstp
addr16
lods
outsb
popa
jne
call
sti
fucom
fwait
push
xor
fcoml
inc
sbb
xchg
xchg
pusha
pop
data16
sbb
daa
dec
fstpt
lret
jge
lds
push
test
adc
push
ds
jge
fsts
push
insb
mov
xor
lods
push
jnp
dec
mov
jns
std
test
pusha
jle
add
fsubl
out
fidivrs
mov
fildll
mov
leave
in
mov
or
add
adc
adc
cmpsl
pop
mov
lea
pop
xchg
jle
and
xchg
inc
sbb
jmp
cmp
pop
dec
lahf
subl
xchg
scas
flds
cmc
mov
jp
aas
dec
push
pop
gs
adc
icebp
jae
cli
inc
jo
inc
bound
jbe
enter
scas
fdivrl
scas
push
inc
repz
dec
testb
ss
push
dec
dec
insb
mov
jae
or
stos
int
fwait
adc
or
dec
pushfw
subb
orb
lret
mov
xchg
xor
outsl
stc
out
and
jo
mov
push
mov
adc
sbb
mov
sub
in
aad
cs
jae
hlt
mov
dec
shlb
rorl
daa
pop
xor
dec
stc
dec
jge
pop
adc
mov
rorb
push
add
rcrb
arpl
insl
or
xchg
pop
fmull
xor
loopne
dec
ss
orb
les
lret
movsb
movsb
jo
movsl
and
add
push
fnstsw
push
cmp
stos
jmp
das
cwtl
xchg
pushf
outsl
xor
mov
cld
and
clc
pop
fldenv
lea
cmp
xor
mov
stos
fists
jb
out
xchg
cld
jmp
push
mov
in
jg
int
inc
and
mov
sub
xor
ljmp
mov
push
negl
sbbb
incb
mov
loopne
xchg
cmpsl
stc
sub
insl
xor
fwait
pop
cmc
mov
adc
repz
insl
mov
je
orb
rolb
int3
adc
push
jo
mov
mov
or
test
cmpsl
test
addr16
pop
or
cmp
test
and
leave
stos
sub
aam
pop
fs
ret
sbb
les
outsl
dec
mov
add
mov
dec
cmpsb
fs
mov
xchg
push
test
hlt
sbb
mov
sub
cmpsb
mov
sub
aam
mov
add
dec
ljmp
cli
jg
iret
sub
pop
jg
enter
imul
push
sub
xchg
lea
dec
sub
addl
jae
sbb
aas
pop
sbb
popf
shr
mov
stc
fisttpl
pop
inc
aad
call
outsb
add
icebp
inc
jg
push
mov
repnz
mov
es
rcrl
clc
imul
jecxz
mov
jbe
sub
pushf
mov
movsl
stos
sub
loopne
dec
cmpsb
inc
mov
das
mull
insb
shll
loopne
shl
insb
call
sub
es
stos
mov
push
pop
sub
adc
mov
mov
out
cmc
add
fs
lret
fists
bound
jle
dec
pop
sbb
inc
int3
out
inc
icebp
lock
movsl
adc
cmp
sbb
adc
sub
cli
xor
xor
mov
add
cmpb
mov
testl
dec
out
lock
sbb
sub
lret
jp
test
ja
and
mov
insb
insb
cmp
push
sub
xlat
aaa
xorb
sahf
rclb
inc
xchg
push
sbb
lcall
es
mov
ret
cmp
jbe
sbb
clc
shll
or
jl
loopne
inc
sbb
in
addr16
or
fs
and
mov
rol
aam
shlb
cmpsl
aad
xor
pop
jno
mov
testb
sbb
adc
lds
mov
loope
pop
das
lret
and
pop
jne
fucomip
adc
mov
and
mov
ret
xchg
out
es
aam
pop
or
push
ja
xor
adc
fwait
out
repz
repz
inc
test
push
pop
jo
jne
fiadds
mov
xor
mov
jle
in
mov
pop
jb
incl
bound
movb
inc
pop
push
cmp
cmc
lret
jae
pusha
cmp
shr
andl
dec
es
cltd
mov
popf
mov
jg
cmp
loope
mov
adc
or
push
cmp
aaa
sub
lcall
mov
cs
in
adc
insb
cmc
pop
stos
ja
cld
mov
push
pop
push
sub
inc
mov
jp
xchg
cmp
notb
sbb
add
adc
push
mov
insl
pop
int3
nop
std
cs
mov
scas
rorl
push
out
fucomip
pop
enter
xchg
add
ret
add
lods
xchg
push
jne
ret
popa
jge
xchg
sbb
push
and
sbb
pusha
xor
mov
int
cltd
lcall
mov
dec
ja
inc
mov
mov
jecxz
mov
pop
inc
jp
fdivrs
inc
cmp
xor
lret
cmp
inc
ret
add
mov
cmp
sub
ljmp
fsubr
or
inc
push
or
cli
repnz
in
ret
in
dec
data16
stc
daa
add
dec
push
cmp
adc
cmp
outsb
push
out
and
insb
test
sbb
into
ja
cmp
shlb
aad
sbb
hlt
pop
out
dec
test
mov
cmp
xor
aaa
mov
cltd
inc
pop
stos
cmp
test
addl
inc
fcoml
loopne
shrb
xchg
icebp
adc
dec
adc
out
cmp
mov
cmp
xchg
insl
push
jb
cmpsb
push
adc
mov
or
mov
stc
jl
xor
push
pop
sbbl
jo
xchg
xor
bound
bound
add
js
fcom
ficoml
inc
jl
pop
in
sbb
mov
js
sbb
mov
dec
jno
rorl
add
cltd
insb
push
or
mov
sub
ja
ret
mov
jg
into
daa
jb
repz
lds
inc
inc
fs
mov
jmp
pop
xchg
repz
pop
aas
mov
cltd
into
movsl
adc
out
lods
adc
pop
test
std
call
enter
push
scas
test
xor
int3
sub
fwait
xchg
bound
mov
scas
add
and
sbbb
fld
cmpsl
or
inc
jmp
repz
pop
scas
fcmovnu
dec
pushf
ret
push
enter
lahf
test
sahf
mov
aaa
mov
into
mov
lret
lret
stos
ret
cli
popa
pop
mov
outsl
jnp
into
sub
dec
int
rclb
xor
fsubrl
push
and
pop
cmp
adc
push
out
dec
hlt
or
test
dec
mov
test
sbb
push
mov
add
or
push
jbe
js
mov
push
or
bound
rcll
call
and
mov
or
inc
aam
and
inc
mov
pop
and
jg
je
sbb
lea
mov
outsl
add
outsl
nop
jmp
pop
icebp
and
push
fs
cmp
push
out
jb
dec
push
add
xchg
mov
or
dec
cmp
add
lods
sbb
cmp
insb
leave
jbe
sbb
inc
dec
nop
das
mov
xor
mov
arpl
lret
or
xor
lds
sbb
or
int3
sbb
xchg
xor
xchg
or
je
into
fidivl
sbb
ret
mov
ss
jne
mov
rcl
icebp
pop
mov
lret
mov
jmp
sbb
fiadds
mov
push
mov
sarb
sbbb
xor
sbb
js
xchg
mov
in
loopne
pop
mov
add
add
cmp
arpl
mov
xchg
ja
dec
ret
and
sbb
movsl
push
mov
pop
xor
pop
adc
push
faddl
lret
sub
xor
pop
inc
cmp
shr
jbe
stos
outsl
xor
test
aaa
mov
and
js
dec
mov
dec
xor
aam
jnp
adc
adc
dec
fs
cwtl
stc
cli
sbb
push
lcall
int
add
sti
sub
push
sbb
fwait
cli
inc
loope
dec
inc
dec
pop
outsb
push
sub
sub
insl
lock
jb
pusha
lds
stos
mov
or
push
sarl
sti
jg
add
bnd
out
add
dec
sti
push
push
cmp
mov
adc
rolb
cmp
shll
add
test
pop
in
sarb
lea
xor
std
insl
loope
jo
fcompl
mov
jmp
in
iret
arpl
xor
inc
movsb
add
scas
push
loopne,pn
hlt
cmp
mov
add
dec
add
lahf
enter
and
cmpsb
push
or
frstpm(287
jne
jo
frstor
in
sti
mov
jbe
clc
mov
icebp
jb
jo
notb
dec
les
push
mov
mov
sbb
xor
enter
pop
mov
mov
jle
or
icebp
inc
pop
xor
pushf
arpl
pop
scas
jle,pt
movsb
fwait
push
stc
pop
lock
jecxz
cs
js
lods
mov
cmpsl
andl
add
jne
mov
mov
jae
in
or
dec
push
xor
cmp
xor
enter
cmp
out
cmc
stc
das
data16
pop
lods
xor
stc
cmp
ds
pop
xor
jmp
imul
fsubl
fwait
pop
hlt
mov
mov
ja
pop
stos
les
ljmp
daa
cltd
sarl
push
mov
mov
lods
hlt
into
test
push
insb
je
test
xor
scas
popf
mov
outsb
push
mov
stos
mov
imulb
scas
popf
cmpsl
jno
sbb
fwait
mov
imull
loopne
mov
retw
lock
cmpsl
call
and
scas
jmp
push
addb
negb
imul
adc
aad
lcall
scas
stc
inc
mov
aaa
lret
push
rorl
jne
dec
mov
dec
scas
or
notb
ss
call
fsubrs
loope
mov
mov
orl
xchg
outsl
dec
sub
int
inc
dec
mov
bound
in
jle
push
fistpl
mov
in
xor
dec
gs
mov
xor
das
or
push
sub
xor
sahf
je
add
pop
ret
int3
scas
mov
push
mov
clc
pop
jge
loop
mov
out
cmp
cs
in
lcall
shrl
add
adc
pop
aaa
and
inc
xlat
sbb
nop
or
test
add
adc
adc
jns
fiadds
out
mov
dec
pop
pushf
xchg
mov
pushf
sahf
inc
push
clc
loope
das
dec
push
xchg
outsl
rcr
out
inc
or
fnsave
addr16
jge
and
jo
sahf
mov
inc
clc
xor
mov
sbb
ret
cmpsb
stc
mov
stc
jnp
test
inc
fdivs
outsl
pop
adc
fwait
inc
jae
movsl
fwait
movsb
loopne
jmp
data16
int
mov
push
loopne
rcll
fsubrs
pop
sbb
push
aas
xchg
mov
xor
add
add
and
inc
push
filds
add
push
fistpl
xchg
mov
cmpsl
adc
das
mulb
pop
sub
outsb
and
ds
das
mov
xor
loop
orl
out
lahf
push
loop
xor
cmp
sub
stos
jne
fldenv
lret
popf
enter
xor
push
cld
mov
loope
ror
sbb
lods
scas
cld
les
ss
cmp
inc
sbb
or
xchg
mov
or
jbe
cmp
mov
out
test
jg
inc
movsb
xchg
daa
inc
sti
jo
mov
dec
insb
cmp
nop
rcr
cs
and
pusha
pop
lock
or
leave
out
sbb
inc
dec
data16
addr16
pop
inc
mov
cmpsb
or
test
adc
test
dec
mov
pop
inc
push
mov
stc
jbe
and
xchg
mov
push
and
ficoms
jns
xor
pusha
enter
mov
xchg
sahf
sbb
dec
cmp
cwtl
push
adc
sub
sub
negl
pop
int3
push
dec
mov
inc
out
adc
adc
bound
xor
jbe
notl
pop
mov
dec
test
adc
or
loop
mov
push
loope
add
fmull
and
pop
or
xor
push
add
flds
mov
xchg
adc
std
adc
movsl
xchg
imul
pop
and
out
sbb
sub
lods
repz
sbb
push
sub
test
push
andb
inc
enter
push
mov
xlat
fdiv
pop
cmp
stos
scas
cmp
xor
outsl
adc
add
das
lock
jbe
sub
sub
sub
imul
lret
adc
cmpsb
xor
jnp
inc
ljmp
inc
daa
cmpsl
orps
mov
hlt
repnz
mov
or
idivb
out
jg
cmpsb
or
loop
out
push
xchg
lret
xor
or
mov
mov
sbb
and
mov
and
lods
pop
inc
scas
jmp
ficoms
dec
imul
into
or
mull
cwtl
or
and
sub
xor
insb
fs
test
insl
mov
in
icebp
cmp
or
sbb
adc
mov
add
xchg
neg
leave
jno
ja,pt
out
test
mov
call
xor
push
lcall
sub
roll
mov
test
fdivrl
loope
bnd
push
sbb
cld
inc
mov
int
push
pop
or
inc
test
fdivl
cmp
movsb
lea
xor
loop
dec
stc
out
adc
sub
lds
pop
and
pop
jmp
leave
ret
sub
loop
out
in
xchg
aad
mov
inc
pop
mov
dec
dec
mov
mov
in
mov
lcall
fsubr
adc
or
or
scas
pop
orl
nop
xorl
inc
inc
in
addb
lahf
je
jb
inc
push
push
cwtl
test
xchg
repnz
lcall
inc
mov
sbb
mov
cld
data16
rol
mov
movsl
das
faddl
fs
jg
repz
mov
adc
and
pop
mov
lahf
mov
les
in
pop
dec
iret
xor
pop
nop
push
xchg
add
lock
dec
cmpsb
xchg
out
mov
and
push
pusha
adc
lods
mov
jmp
xor
inc
int3
push
rorb
xor
enter
add
sahf
outsl
xchg
into
in
int3
fwait
mov
stos
sarb
mov
ljmp
cmp
in
pop
or
cmpsb
add
addr16
xor
pop
push
jbe
jo
add
push
arpl
xlat
or
jge
jge
mov
out
es
xor
fcomp
xchg
cmp
outsb
sarb
lret
fldcw
sbb
adcb
test
scas
int3
in
mov
jge
xchg
outsl
flds
fadd
dec
or
shrl
dec
ljmp
shlb
inc
push
inc
scas
negl
xchg
stos
nop
addr16
ja
and
sbb
fisttps
dec
pop
or
hlt
mov
pop
in
insb
sti
cmpsl
push
daa
jecxz
mov
ss
ret
jnp
push
mov
aad
mov
divb
and
and
inc
lahf
jns
ficoms
mov
out
mov
out
mov
cmp
addr16
add
pushl
pusha
or
sarb
adc
xchg
repz
or
cmc
inc
scas
jno
mov
inc
shll
sahf
call
popa
pop
xlat
js
xchg
adc
or
and
pop
pop
dec
loop
jge
cld
mov
stos
pusha
xchg
dec
push
xchg
loope
popa
xchg
pushl
xchg
fnstsw
in
and
es
xchg
ljmp
cmp
stos
push
mov
adc
jno
out
xorb
in
mov
fistl
jbe
sti
inc
xlat
stos
lahf
ljmp
fildll
xor
gs
int3
loopne
es
mov
je
pop
stos
int3
rorl
xchg
in
xor
ja
shl
push
sbb
pop
xchg
xchg
mov
popa
pop
outsl
popa
jb
lret
push
pop
inc
push
call
push
stos
push
xor
cmc
push
enter
insl
sub
cmp
or
jecxz
hlt
mov
jmp
dec
mov
jge
push
xchg
pop
popf
jns
cmpsb
js
or
jecxz
clc
cmp
movsl
cmp
and
sbb
inc
and
inc
mov
addb
test
inc
jl
adc
std
push
adc
xchg
mov
sub
sbb
pop
adc
in
mov
popf
add
add
mov
push
sub
ljmp
cmpsl
hlt
jecxz
dec
inc
jns
dec
mov
fildll
scas
call
int
push
sub
push
and
rolb
add
jnp
int
pop
mov
xlat
roll
push
jo
add
sarb
dec
jns
std
pop
movsb
mov
std
push
jl
sub
push
scas
xchg
cli
push
and
shll
push
mov
cwtl
dec
jns
jnp
push
add
cld
popf
imul
xchg
jge
mov
ja
addr16
jne
add
jno
pusha
sti
inc
jae
and
fidivrs
mov
in
in
into
rorb
mov
hlt
xor
mov
clc
push
inc
out
call
sub
sbb
hlt
imul
out
movsl
jge
inc
pop
jno
clc
adc
scas
out
xchg
pop
mov
jne
es
call
sub
mov
xchg
imul
dec
xchg
sbbl
gs
in
andl
jge
rep
mov
jne
test
add
jnp
mov
inc
jno
sbb
sub
push
roll
je
ss
stos
iret
bound
sbb
add
js
call
xchg
rcrb
sbb
stc
jbe
data16
pop
mov
jns
mov
lea
mov
jp
fs
stos
inc
push
adc
pop
sbb
fs
add
out
fs
lret
pusha
mov
mov
sub
sbb
iret
cmp
xor
adc
std
inc
out
fs
sbb
hlt
xchg
sub
cmp
bound
inc
cmp
scas
test
mov
addr16
add
cmc
dec
or
aam
and
iret
push
sub
popa
pop
xchg
or
stc
push
leave
mov
lahf
mov
pop
ds
nop
sbb
adc
jle
push
aas
or
repz
fisttps
lds
adc
das
push
sbb
mov
inc
rcr
push
loopne
ret
nop
jne
in
push
ds
lcall
rol
adc
push
push
mov
xor
ffree
mov
adc
jne
aad
cmp
xor
mov
loop
cmpsb
es
lods
dec
cmp
shlb
es
aad
out
jns
faddp
scas
out
xor
pop
mov
jns
lods
jno
int3
and
mov
out
in
push
test
xchg
mov
hlt
cmp
pop
mov
fwait
leave
xchg
and
cmpsb
fisubs
or
sarb
ret
mov
clc
lea
mov
call
out
in
inc
jb
lock
loope
test
enter
sub
push
cmc
mov
xorb
add
imul
lret
sub
lods
xchg
xor
addb
xor
fsubrl
dec
sbb
out
dec
adc
push
pop
stos
and
lret
mov
mov
icebp
mov
andl
bound
sbb
inc
xor
sar
dec
hlt
lods
jecxz
shr
stc
stos
sbb
mov
mov
mov
mov
mov
mov
andl
pop
adc
out
sbbl
mov
int3
js
or
lahf
inc
aas
loope
sbb
aaa
stos
push
bound
sar
out
jb
sti
scas
rcll
cmp
test
jmp
mov
jge
lret
pop
enter
scas
add
mov
or
push
sarl
push
pop
cmc
lahf
sub
stos
and
sub
pop
movsl
cli
jb
mov
ja
xchg
sub
dec
add
ss
iret
inc
fwait
out
outsb
cld
dec
jmp
shll
clc
xchg
scas
cs
sub
sbb
mov
add
jae
xchg
push
mov
push
mov
xchg
sbbl
cmp
xchg
scas
popa
jne
adcl
fwait
push
mov
mov
inc
pop
pop
aam
incl
cli
adc
sti
or
jbe
sbb
cs
mov
fcoml
outsb
lcall
sub
adc
xchg
cltd
mov
fldt
fisubrl
pusha
in
mov
xchg
mov
shlb
push
mov
mov
add
pop
dec
xor
mov
adc
and
pop
stos
sbb
cltd
leave
mov
neg
adc
sub
lea
xor
mov
rorb
dec
sbb
int3
jb
cmp
pop
mov
sbb
push
dec
sbb
add
aad
jge
stos
das
mov
repnz
push
mov
out
fisubs
cmpsl
push
adc
jns
sub
fwait
push
cmpsl
mov
aaa
mov
enter
pop
xchg
xchg
pop
outsb
arpl
push
adc
mov
stc
pop
push
in
add
mov
mov
pop
pop
xor
test
dec
fwait
cld
movsl
gs
xor
orb
inc
lods
pop
pop
fsts
int3
xchg
push
jb
stc
fcmovbe
pop
lret
adc
inc
fildll
sarl
idivb
ds
jae
aaa
xchg
ret
sub
test
jle
fs
mov
push
and
aam
popa
filds
negb
dec
jmp
cmpsl
jge
hlt
shl
outsl
out
lods
ljmp
mov
dec
sub
sub
dec
sbb
add
pop
mov
cmp
adc
sbb
push
aad
mov
mov
dec
ss
mov
sbbl
stc
or
push
or
or
andl
jge
sbb
xor
inc
cmc
mov
mov
test
dec
scas
mov
pusha
xchg
fisubrl
aas
out
shrb
jno
movsl
adc
mov
mov
dec
xor
add
mov
inc
out
mov
inc
adc
pop
sub
lds
aam
sbb
fldt
lcall
fldenv
xchg
daa
jge
push
jle
scas
addr16
lods
jp
adc
jno
or
sbb
inc
cs
jb
pop
pop
pop
sub
jnp
dec
out
inc
ja
mov
lea
mov
and
lret
sbb
stc
adc
jne
cmp
adc
shrl
sbbl
popf
push
std
inc
aaa
ss
into
jl
imul
insb
jmp
sub
cli
call
inc
pop
xor
fsubrs
es
sub
xor
lods
in
or
mov
rol
scas
mov
insl
repnz
sub
and
shlb
enter
ss
pusha
fcoml
xchg
test
adc
fldenv
aas
xchg
mov
sub
jle
stc
xor
repz
pushf
mov
lods
mov
xchg
adc
insb
rclb
cli
mov
and
lret
pushf
mov
sub
jns
sarl
ss
fmuls
leave
xchg
mov
lods
xchg
adc
outsb
fisubs
xor
xchg
aaa
inc
loope
ss
enter
pusha
mov
movsl
js
adc
adc
rcrb
dec
les
scas
pop
jbe
xchg
jno
xor
mov
out
or
jp
or
into
xchg
jns
xchg
in
add
into
in
fistl
add
iret
aam
adc
jp
sti
shll
test
add
out
sub
ss
sbb
in
xor
movsb
mov
pop
cltd
fs
xchg
xor
int3
test
into
out
mov
and
lret
imul
inc
inc
mov
mov
nop
cmpsl
mov
js
std
push
jae
pop
repnz
in
add
out
mov
repz
push
or
mov
push
hlt
and
cmp
inc
adc
push
dec
sbb
lcall
and
jmp
inc
cmpsl
or
ljmp
outsb
incl
sub
jmp
lods
das
daa
cld
fsubrl
mov
mov
and
adc
adc
fimull
xchg
scas
mov
pop
inc
rcr
out
jns
adc
out
in
inc
insb
sbbl
sbb
movsl
mov
lahf
sub
nop
out
mov
lret
xchg
daa
sub
std
cld
ror
lret
xorl
int3
sets
xchg
mov
cmp
sub
inc
sahf
fidivrs
dec
xchg
mov
fldcw
sub
lods
fnsave
pop
cwtl
jmp
xchg
data16
sbb
shrl
outsb
sub
xor
aad
sub
mov
mov
or
aas
insb
mov
and
lahf
xor
out
frstor
arpl
mov
int
cmp
cltd
das
lea
pop
adc
adc
jns
repz
push
inc
or
mov
mov
lahf
push
jg
dec
adc
mov
fdivs
movsb
push
imul
jmp
pushf
cmp
nop
dec
scas
scas
or
insl
stc
out
fldcw
sbb
sbb
es
push
mov
xchg
dec
das
jae
sbb
push
and
jge
mov
sub
xchg
jb
pusha
jnp
mov
divb
mov
hlt
mov
int
das
out
xchg
pop
int3
mov
addb
aaa
sbb
out
adc
stos
push
and
adc
adc
sbb
adc
sbbb
loope
dec
pop
lret
shrb
mov
jbe
or
xchg
imul
hlt
add
pop
lods
das
fisubrl
xchg
in
addr16
into
jecxz
movsl
divl
mov
push
cltd
fistps
xor
cmp
mov
lods
insl
sbb
ss
push
push
push
ficompl
les
int3
adc
ja
inc
fisubrs
lods
movsb
cmc
xor
or
mov
pop
rcrb
adc
sbb
inc
jnp
sub
imull
in
pop
adc
iret
adc
addr16
mov
iret
fwait
mov
sub
cmp
mov
adc
and
jnp
jne
pop
out
call
and
outsl
fistps
hlt
mov
lea
dec
sbb
mov
ja
xchg
dec
adc
shrb
scas
xor
out
jecxz
sbbb
repnz
cmp
push
andl
xchg
cs
ss
xor
or
test
into
push
jp
in
loop
addr16
incb
adc
inc
xor
lods
sbb
and
jle
cwtl
mov
jae
loop
and
cmp
xchg
inc
adcl
xchg
xchg
movsb
adc
jbe
dec
ret
in
or
xchg
lret
fdivl
mov
sti
mov
push
dec
popf
pusha
xchg
xchg
pop
enter
cs
jne
mov
pop
pushf
addl
fbld
xlat
lret
mov
xchg
test
lds
pop
cld
or
test
fidivrs
xchg
cwtl
push
clc
xchg
sub
addr16
mov
or
dec
adcb
roll
aaa
movsl
sub
sub
je
pop
rcrl
cld
cmp
test
or
and
sub
dec
mov
mov
imul
in
in
xor
pop
dec
imul
push
push
aad
shr
test
inc
bound
mov
xchg
outsb
mov
sti
xchg
out
mov
pop
fidivrl
adcl
int
xor
push
sahf
ljmp
lods
mov
jmp
sub
loop
cs
push
pop
call
cmp
int3
cli
mov
push
ss
and
mov
mov
cmpl
pop
lds
insl
insb
outsl
mov
ds
push
mov
and
xlat
xchg
mov
pusha
cmp
fucomp
fstps
pushf
jno
shl
pop
add
fisubrs
stc
adc
mov
popf
jle
sbb
jo
sub
aaa
xlat
cmp
or
sahf
in
xchg
pop
jae
jb
cmp
nop
mov
data16
push
scas
cmp
inc
andl
mov
dec
jns
mov
sbb
cmp
insb
loope
mov
std
fadds
repz
and
stos
mov
aas
inc
scas
aas
inc
jbe
sub
mov
pop
stos
js
xchg
sub
outsl
lea
xchg
clc
hlt
xchg
ret
into
push
jne
xor
push
mov
sub
jns
xor
roll
ljmp
add
mov
and
mov
xchg
mov
mov
xchg
jo
xor
aaa
cmc
mov
les
sbb
imul
lret
mov
lods
pop
sub
popl
ficompl
enter
adc
inc
pop
fdivrl
mov
int
test
xchg
loop
cltd
stc
and
ss
xchg
push
cs
inc
stos
insl
sub
mov
mov
lret
shll
lds
or
inc
pop
das
inc
mov
and
out
cmp
inc
sub
lods
pusha
subl
push
leave
or
sub
fisttpl
mov
xchg
outsl
into
imul
jns
cmc
adc
outsl
pop
dec
mov
pop
pop
ret
dec
enter
stos
aad
insl
ds
jle
lods
xor
or
popa
adc
jmp
or
dec
pop
mov
adc
mov
not
mov
lock
daa
mov
jmp
in
data16
mov
adc
hlt
cmp
scas
mov
push
sbb
int3
sar
push
sbb
je
cltd
sbb
mov
movsl
sbb
cltd
jmp
mov
stos
push
popa
js
clc
shrl
andl
imul
call
push
popa
adc
repnz
out
stos
lock
and
jecxz
jg
push
sbb
ljmp
scas
push
test
std
mov
pop
jmp
repz
xor
mov
add
into
cwtl
jb
fs
data16
inc
fnstcw
mov
scas
jnp
jp
cmpsl
cld
sahf
sbb
loope
add
iret
loopne
mov
movsl
sub
fsubl
cmp
stos
sub
shrl
rorb
scas
movsb
cmp
cmp
pop
jns
or
mov
insl
rcrl
add
test
or
ds
pushl
mull
mov
out
scas
decb
mov
arpl
pop
fstpl
dec
pushf
mov
cwtl
out
mov
mov
dec
nop
xor
jne
sbb
clc
and
fwait
xor
sbb
dec
sbb
xor
ss
fistpll
and
popa
andb
in
dec
iret
push
andl
push
rcrl
cmc
sub
dec
cmp
and
and
jge
mov
jnp
mov
or
inc
arpl
inc
mov
rolb
rcl
es
lds
in
cmc
or
jg
xlat
int
rcrl
jmp
imul
mov
push
test
std
stos
les
xchg
dec
sarl
cmove
pop
cmp
jnp
mov
sahf
in
lods
mov
mov
jne
rolb
jbe
mov
lret
test
aam
pop
xchg
adc
sub
adc
lods
adc
xor
sbb
inc
pop
dec
test
std
or
in
inc
pop
cmp
idivb
lret
lahf
loopne
and
sahf
rolb
cltd
inc
jle
out
jle
xor
clc
xchg
mov
jmp
dec
daa
pop
dec
test
cld
hlt
loope
or
loop
jae
les
out
ret
push
mov
leave
sbb
jecxz
adc
and
out
xchg
dec
hlt
arpl
repz
pop
inc
xor
jb
add
cmp
das
add
fldl
fnstenv
jp
cmc
popa
outsl
clc
jo
mull
sub
shrl
and
cli
insl
and
outsb
scas
cmpsl
and
dec
sbb
adc
jno
mov
pop
dec
jo
dec
adc
jl
mov
add
outsb
cmp
jle
push
or
jnp
and
xor
mov
pop
pop
lret
clc
sarl
push
cltd
in
xorb
js
push
lods
mov
xchg
pop
dec
sarb
sbb
pop
es
orb
and
test
in
insl
lret
xlat
jnp
sub
fnsave
arpl
xchg
mov
sti
xor
jb
push
push
shr
insb
adc
dec
inc
sti
mov
pop
pushf
ret
adc
movsl
into
mov
addr16
outsl
xchg
jmp
dec
sahf
jg
cltd
fistpl
sub
pusha
add
dec
xchg
pop
inc
pop
pop
xchg
cmc
addb
xlat
push
fidivrl
test
test
adc
push
in
cmc
fmull
xchg
repz
or
xor
outsb
sbb
sub
jmp
pusha
fiadds
aaa
cmp
lcall
lock
lods
repz
push
test
cmpsl
xorps
xchg
movsb
cmp
and
cmp
sub
inc
arpl
xchg
push
sbb
dec
test
in
push
pop
ss
push
mov
sub
mov
sti
in
push
push
or
jg
mov
cmpsb
mov
pop
orl
lcall
push
jge
add
adc
stc
imul
mov
iret
movsb
testl
scas
movsl
cmp
ss
popa
push
push
stos
scas
and
shr
adc
sbb
fistpll
std
les
js
test
test
arpl
push
sub
or
ja
fists
int
pop
cmc
xor
popf
addr16
sub
aas
mov
cmc
mov
lds
pop
ret
dec
xchg
stos
clc
ljmp
dec
push
push
push
xchg
sub
negb
mov
or
sbb
xor
push
lds
sub
jnp
roll
scas
mov
mov
daa
loope
lds
jmp
dec
int
imul
push
push
ljmp
int3
repnz
add
lods
dec
adc
cmpsb
pop
fs
mov
pop
test
les
push
pusha
popf
add
pop
fsub
das
movsb
fstpl
push
in
or
mov
mov
addl
pop
lock
in
out
mov
imul
lea
xchg
icebp
jns
mov
jle
daa
dec
push
rorl
js
jp
add
push
rep
push
insl
ds
pop
arpl
and
pusha
movsl
push
test
adc
inc
or
loop
pop
lahf
lods
sti
pop
pop
pop
mov
loopne
inc
xor
sahf
mov
insl
pop
sub
pop
lea
mov
jle
pushf
insl
outsl
pop
cmc
xchg
sti
jae
cs
dec
mov
pop
inc
pop
push
xchg
cli
insb
push
inc
data16
pop
loopne
iret
pop
add
imul
ffree
ljmp
in
push
adc
jns
mov
hlt
out
aam
push
repz
int3
xchg
mov
mov
sarb
lret
xor
pop
sbb
pop
fistps
sbb
les
and
pushf
inc
and
sub
imul
movsb
mov
xchg
jne
out
shrl
jno
call
inc
lock
pushf
pop
and
aas
shl
out
sarb
daa
ss
aas
cmc
pop
cli
inc
mov
mov
pop
cwtl
sbbb
sbb
adc
imul
jb
mov
push
ss
dec
and
mov
mov
jg
push
cmp
in
sub
lret
orb
aam
jnp
imul
and
cs
push
jmp
outsb
cltd
out
test
ret
push
iret
lock
fwait
in
ja
rorb
ds
ret
xlat
fs
push
or
pshufw
and
aas
je
and
cmp
push
inc
cmp
and
sbb
insl
push
sbbb
xchg
and
and
sub
into
sti
test
push
aas
or
inc
add
sarl
je
add
sbb
dec
push
clc
push
js
lea
inc
dec
pop
mov
xchg
int
std
test
ret
jle
adc
cmp
or
or
ss
jns
hlt
shrb
xchg
push
mov
jg
sbbl
ss
push
cwtl
add
push
sbb
mov
cmp
lret
xor
add
aaa
rolb
das
xlat
cmc
in
dec
dec
test
shll
cmp
cmp
xor
mov
cmp
out
rolb
xchg
outsl
ret
lea
pop
xchg
sbb
das
and
and
cmc
xchg
int3
xchg
mov
push
jmp
sarl
pop
fldl
sbb
adc
xchg
mov
stos
imul
mov
inc
rol
mov
std
out
mov
mov
jmp
push
dec
jmp
pusha
addr16
or
cmp
jl
xchg
or
insb
cwtl
cli
mov
movq
cmp
cltd
std
push
mov
mov
cmpl
movsbl
movsb
ja
jns
lock
fmulp
add
cmp
lret
js
pusha
ficomps
insb
add
das
xor
insb
mov
orb
jecxz
sbb
fisttpl
pop
jae
imul
mov
ss
stc
push
dec
push
adc
pop
push
cltd
push
call
sbb
jnp
lret
push
mov
stos
scas
ret
inc
mov
in
fcmove
add
pushf
sub
aam
pop
inc
js
and
out
or
test
xor
xor
xchg
popf
adc
movsl
sub
add
xchg
in
in
sub
arpl
adc
cmp
lock
pop
insb
inc
divl
daa
cli
mov
cwtl
cld
xchg
mov
xchg
pop
add
fsub
sarb
or
and
out
push
out
jg
jg
and
sahf
inc
out
or
xor
scas
cld
or
inc
test
xchg
and
fldl
lcall
std
mov
jecxz
lret
test
sbb
bound
jge
mov
xchg
xor
jl
ja
in
mov
mulb
daa
ljmp
inc
inc
push
in
icebp
in
je
sub
sahf
mov
movaps
test
mov
aas
loope
push
adc
inc
add
fcmovne
xchg
shll
xor
daa
cwtl
es
pop
out
testb
outsb
into
mov
inc
popf
fdivrl
push
inc
in
stos
jne
lds
pop
cld
push
int3
sbb
mov
filds
mov
in
sti
xchg
pop
ret
cmp
push
mov
mov
shrl
les
mov
xchg
add
stos
xchg
xchg
inc
fs
loop
and
xchg
outsl
sub
dec
add
scas
popa
add
push
ficoms
jb
cli
pop
mov
mov
lock
dec
aam
bound
test
enter
sahf
movsb
ds
jmp
fs
lock
pushf
push
push
or
add
dec
xchg
sbb
jno
cmp
aad
ret
aas
xchg
mov
add
rorb
push
sbb
je
pop
inc
es
cmpsl
sti
or
inc
mov
push
xor
cltd
and
mov
das
mov
adc
xchg
push
mov
lcall
rcll
cwtl
dec
cs
movsl
adc
aam
dec
std
in
into
push
mov
add
xor
pop
out
lcall
nop
fldcw
xorb
pop
int3
lcall
daa
imul
or
pop
adc
into
push
les
xor
daa
aaa
push
push
inc
adc
pop
fbld
xchg
mov
xchg
push
dec
jge
test
pushf
xor
rcll
stos
es
mov
out
xchg
adc
mov
sub
cmp
pusha
mov
xchg
mov
jmp
popa
lds
in
dec
leave
xchg
inc
sbb
mov
and
xchg
add
cmp
dec
pop
pushf
sub
popa
les
aad
addl
imul
popf
mov
loope,pn
cmpsl
mov
xor
mov
adc
sub
mov
arpl
mov
mov
push
pop
dec
fsubp
mov
push
pop
loope
repz
ja
mov
cmc
sti
outsb
jle
or
add
frstor
dec
fdiv
enter
mov
out
dec
ja
xchg
fs
clc
aam
and
jg
sbb
int3
push
sbb
loope
sahf
pop
in
in
data16
pop
inc
loop
loopne
mov
fs
imul
mov
sbb
in
mov
mov
xor
jae
ret
fcmovu
push
sahf
fsub
pop
ret
sub
xor
mov
inc
test
int3
nop
movsl
hlt
pop
ja
or
xlat
add
and
or
outsl
inc
jnp
insb
pop
sub
pop
xchg
pop
fucomi
cli
add
jge
mov
pop
pushf
mov
adc
ja
jge
addr16
inc
gs
push
jb
out
in
ret
cmp
cmpsb
jno
mov
mov
movsb
shrb
in
xchg
je
fadds
mov
cmp
repnz
xchg
sbb
call
jmp
dec
cmp
sub
or
pop
popa
jo
daa
cmp
fs
and
out
push
bound
inc
pop
in
dec
sti
jnp
jg
cmp
jl
stc
int3
test
stc
jmp
mov
sbb
cltd
out
xchg
aaa
out
mov
cmp
daa
sti
jb
xor
adc
lea
iret
push
sub
jo,pn
jnp
clc
pop
sub
jge
int
or
outsl
push
movsb
mov
cmpsl
cs
and
inc
aad
sbb
mov
xchg
xor
mov
rclb
out
pop
bound
pop
into
stc
mov
mov
push
mov
aas
cld
sub
loopne
call
sbb
clc
shll
sub
mov
jecxz
das
shl
lahf
mov
sbbb
cmp
sbb
in
stc
xchg
jns
cli
fwait
inc
aam
cwtl
int3
mov
dec
in
pop
rcrl
in
pop
scas
inc
shlb
fsubrp
push
imulb
mov
sub
data16
push
pop
les
jge
inc
mov
push
out
nop
mov
dec
mov
imul
adc
sub
ja
jnp
cmp
sub
cmp
sahf
mov
jl
sarb
out
ss
mov
push
out
push
fcompl
arpl
inc
push
push
and
sbb
inc
push
dec
into
push
mov
test
jno
push
insl
fucomp
pop
inc
cmpl
sub
mov
shrb
out
rclb
aaa
shll
pop
cmpsl
icebp
js
mov
lock
out
imul
out
lods
cmc
jb
scas
push
int
add
pop
push
xchg
dec
push
mov
icebp
jp
ljmp
jnp
das
int
in
adc
mov
les
out
lret
bound
repz
rcr
xchg
outsl
and
cli
add
push
pop
insb
cmp
and
mov
int
sbb
ds
ds
mov
adc
mov
inc
mov
push
lret
stos
pop
lcall
outsb
xchg
insl
outsl
push
inc
xor
mov
push
leave
sub
rorl
jae
or
mov
lods
or
ret
pop
nop
and
cmp
inc
movsl
pop
clc
and
jge
movsb
out
adc
fwait
pop
and
pop
push
call
xchg
pop
lahf
mov
mov
cwtl
inc
push
xor
jg
push
push
sub
xlat
push
jno
add
push
cmc
mov
mov
movsl
xchg
mov
andl
jecxz
xor
jp
sahf
lea
cwtl
sti
cs
jmp
dec
arpl
sbb
xchg
loop
pop
cmp
dec
mov
aaa
cmpsl
divl
jmp
push
mov
out
ret
jb
lret
movsb
enter
xchg
push
fcompl
sbb
insl
mov
mov
repz
mov
jb
or
dec
jnp
mov
mov
cmp
xchg
add
out
and
and
mov
add
punpckhdq
bound
jecxz
mov
pop
push
loop
and
sbb
push
test
fwait
pop
movsl
adc
movb
inc
or
lds
aam
clc
pop
dec
jno
pushl
push
push
jo
arpl
movsb
stc
push
jnp
pop
jge
andl
lea
js
jmp
mov
push
pop
es
stos
loopne
inc
push
lds
mov
insl
lret
leave
push
mov
ret
lods
leave
pop
fidivs
fdivrp
add
cmp
fdivr
leave
cmp
pusha
xor
add
xchg
clc
imul
jle
or
jge
and
das
shr
inc
xchg
mov
cld
dec
data16
sub
lgdtl
pop
cmp
adc
jmp
mov
ret
or
mov
push
out
outsb
mov
cld
pop
mov
pop
and
into
test
or
and
jo
add
inc
gs
mov
pop
lods
mov
in
ret
sarl
das
out
sub
popa
mov
inc
mov
or
lahf
add
push
push
xor
sahf
test
out
aas
xlat
or
outsl
mov
or
orb
pop
fs
insl
into
jnp
js
mov
add
fidivs
addb
aas
gs
fxtract
and
lret
es
cwtl
nop
movsl
mov
push
or
sub
mov
insb
idivb
mov
hlt
lret
and
dec
mov
inc
imul
das
push
push
push
int3
fs
fldt
repz
mov
lahf
sub
push
cmp
leave
int
push
pop
call
call
add
ss
adc
sub
add
add
push
imul
pop
inc
out
xor
mov
dec
sbb
lds
inc
es
mov
xor
stos
lahf
ss
add
scas
in
mov
push
cmp
xchg
das
dec
cmp
xor
in
test
les
aaa
popf
decl
neg
mov
test
insl
orl
add
cwtl
mov
cmp
ljmp
push
jl
pop
push
ret
cmc
cmpsb
lds
repnz
sub
ret
cli
out
add
stc
mov
bound
jns
les
pop
sub
icebp
and
xchg
mov
inc
xor
push
xchg
jge
cli
cmpb
adc
test
mov
push
mov
call
mov
daa
mov
hlt
jecxz
jl
aam
gs
pop
out
movsl
out
adc
repnz
sbb
fs
pop
mov
push
mov
nop
lea
push
andl
xchg
imul
inc
dec
or
dec
icebp
add
jns
out
insb
test
mov
pop
mov
or
jno
mov
mov
shll
shl
push
mov
push
into
fmuls
enter
sti
push
pop
push
add
lret
fisttpl
and
imul
sub
fimull
shlb
test
mov
test
xor
xchg
hlt
fnstcw
xor
leave
stos
inc
sub
jne
cli
or
dec
xor
pop
mov
push
fiadds
stos
xor
inc
addl
pop
and
imul
mov
test
scas
cwtl
jg
jl
mov
adc
mov
xor
and
adc
cmp
adc
cmp
push
fisttps
pop
mov
in
inc
repz
xchg
cli
jno
imul
mov
adc
sub
shlb
push
mov
mov
xor
sti
pop
push
sub
xchg
lahf
pop
lahf
sbb
mov
jns
fcmovnb
pop
push
push
mov
dec
dec
fs
cmc
push
pop
mov
aad
mov
pop
cs
jp
js
pop
jp
sub
fcomi
popa
cltd
fildll
movsb
xchg
test
leave
ret
fistpll
aad
push
cli
daa
push
lcall
sub
aas
test
adc
or
adc
cli
jo
xor
or
dec
arpl
push
mov
jns
jo
xlat
lahf
jge
lret
loopne
and
mov
stos
test
mov
cmp
xchg
aad
cs
arpl
testb
lcall
xor
rclb
dec
daa
sbb
jl
jbe
push
mov
mov
xor
lock
lds
in
pop
adc
dec
or
mov
lock
jno
mov
roll
dec
push
push
call
push
mov
jno
pushl
mov
fwait
stc
fstl
jecxz
mov
xchg
insl
inc
jnp
adc
pushf
adc
aam
mov
inc
push
loop
cmp
lret
dec
mov
and
dec
aam
adc
hlt
cmpsb
xor
add
xlat
fiaddl
aam
or
adc
push
xor
cltd
jle
bound
rcrb
cli
push
daa
outsb
jb
push
das
adc
gs
fidivrs
mov
jbe
popf
fimuls
xor
inc
sub
add
sbb
shl
cmp
adc
mov
pushf
cmp
subb
test
dec
pop
rcrb
push
leave
je
lret
ja
adc
jo
orb
scas
cli
daa
jnp
pop
nop
je
std
pop
add
sub
push
cltd
dec
or
jnp
ret
jp
ss
add
pop
ret
jecxz
shl
sbb
dec
lcall
adc
push
ds
mov
cmp
ds
out
mov
ja
cmp
cmp
xor
adc
pusha
mov
and
lcall
shlb
mov
jmp
mov
jmp
lods
ret
cmpsb
scas
fistpll
sub
ret
inc
push
jmp
add
mov
push
mov
aaa
xlat
shlb
pop
outsb
leave
repnz
negb
jge
adc
stos
mov
shll
arpl
popa
ja
test
sbb
sbb
or
repnz
stc
rorl
pop
pop
mov
inc
jae
loope
shlb
movb
pop
xor
pop
test
mov
pop
mov
das
adc
inc
dec
int
cltd
jg
dec
popa
cwtl
daa
xor
pop
cli
push
jle
aas
pusha
adc
pop
jge
into
outsl
inc
cmp
inc
and
dec
xchg
xor
mov
adc
jl
xchg
fildl
add
test
xor
stc
addr16
mov
mov
adc
je
lea
les
sbb
jnp
dec
mov
sbbl
cmp
test
lds
mov
ljmp
lahf
shrl
and
pop
ret
push
repz
lods
ret
jg
out
sub
push
jle
decb
mov
testl
sbb
je
es
mov
jp
push
mov
test
sub
rol
xchg
mov
push
mov
jae
xchg
mov
xchg
xchg
gs
outsb
mov
and
into
xorl
xchg
mov
jnp
js
ret
mov
inc
sub
pop
rorb
fdivr
jne
daa
iret
lret
scas
insb
insb
push
mov
lds
xor
push
mov
insb
push
mov
xchg
cmp
ret
cs
jl
shl
out
arpl
js
loopne
mov
mov
movsb
mov
and
adc
popa
inc
xchg
fdivrs
cltd
stos
sti
xor
cmp
jmp
cli
lods
ss
pop
stos
xor
dec
xchg
sub
sbb
mov
xchg
cmpsl
xorb
insl
mov
int
loope
xchg
sarl
testb
cmc
mov
push
pop
adc
test
push
cli
notl
xchg
ja
xchg
pushf
cmp
mov
pop
mov
insb
dec
sbb
push
cmp
dec
dec
popf
add
xchg
add
orl
mov
dec
mov
adc
test
and
scas
aaa
cmp
mov
andl
add
inc
test
xlat
lock
pop
movsl
cld
mov
shll
mov
lods
ds
jb
mov
lock
push
out
icebp
ret
inc
in
sbb
mov
ficompl
aam
test
adc
jp
push
mov
mov
test
lods
std
mov
jns
adc
mov
push
lods
inc
and
pusha
aaa
loope
stos
movsl
aas
in
and
fdiv
mov
cmpsb
sub
dec
enter
jno
mov
mov
clc
jmp
cli
sub
cmpsl
cmp
mov
jo
repnz
pusha
fistpll
das
inc
js
adc
bswap
fsubl
xchg
ficoms
fcoml
xchg
ret
pushf
bound
push
fcompl
cmp
leave
jp
or
fnstenv
imul
arpl
or
mov
outsb
shll
ret
imul
das
shll
inc
mov
fidivl
xor
push
mov
mov
iret
inc
dec
dec
shlb
pop
rcrb
cli
xchg
out
cmc
addl
xlat
mov
lret
push
xor
pop
ja
xchg
fimuls
popf
xchg
sub
dec
jge
cwtl
pusha
push
mov
lods
mov
pop
and
xchg
inc
mov
jle
lock
loope
jmp
fwait
mov
sbb
sbb
popf
lret
jne
mov
pop
mov
jmp
cmp
iret
jl
add
or
popf
lret
adc
loopne
inc
pushf
es
in
cmp
adc
aas
lods
aad
xchg
ficomps
cmc
sar
sbb
and
fs
ret
jae
push
mov
rcl
les
data16
xchg
cmp
popa
sub
pop
imul
and
dec
jns
adc
sarb
ficompl
dec
iret
fimull
pop
fidivs
and
neg
jb
out
mov
xor
pop
test
xchg
loope
mov
imul
add
cmp
pushf
ret
dec
imulb
lds
mov
pop
aam
daa
mov
pop
mov
pop
xor
inc
rcll
sbbl
test
inc
clc
inc
sbb
and
ss
cwtl
fs
sub
adc
mov
icebp
es
mov
inc
add
clc
sub
sbb
mov
mov
cmpsl
xchg
sbb
leave
or
ret
sbb
lret
xchg
cwtl
add
scas
xchg
movsb
mov
ljmp
inc
lret
sti
jbe
shrb
popa
int3
nop
dec
and
sub
jno
sub
cmp
testl
andl
pop
nop
dec
ret
add
sbb
add
outsb
xor
push
and
jb
nop
sbb
repnz
out
xor
inc
inc
mov
mov
pop
adcl
aad
sub
insb
punpckldq
jg
jbe
pop
jno
mov
fsubrs
ret
hlt
dec
jle
ds
ljmp
or
jae
sahf
rcl
dec
popf
jg
rcl
push
lahf
fmull
dec
outsb
or
mov
or
xchg
dec
sti
fsub
cmp
ss
add
dec
mov
or
push
sbb
mov
jae
nop
lea
movl
and
or
mov
pop
adc
pushf
push
push
icebp
pusha
jge
jae
mov
pop
inc
aad
sbb
and
cltd
jg
in
or
fstl
stc
mov
sahf
adc
aam
mov
xchg
sahf
fs
adc
pop
mov
jecxz
ds
shlb
mov
int
lock
aad
es
sahf
cmp
aaa
push
push
mov
and
mov
int3
imul
adcb
cmpsb
adc
scas
adc
sti
rcrl
jg
orl
gs
cli
scas
lcall
xor
dec
mov
mov
mov
mov
inc
movsl
in
cwtl
shll
pop
cwtl
push
dec
mov
mov
push
mov
mov
test
inc
enter
aas
int
jns
push
shl
mov
mov
outsl
pop
and
addr16
enter
pushfw
test
push
and
ljmp
fs
outsl
outsb
ljmp
cmp
rcll
jmp
add
push
xor
cmpsb
dec
mov
xor
sub
push
xchg
repz
leave
jne
push
push
xor
jecxz
pop
push
lds
mov
hlt
fimuls
sbb
arpl
fdivrs
inc
movsb
movsl
shlb
test
fiadds
aad
push
cld
inc
jg
das
jns
jge
add
add
fbstp
int
popl
xchg
leave
lret
sub
pop
dec
popa
mov
pop
sub
addr16
add
das
repnz
test
push
inc
push
test
or
push
movsl
xorb
mov
in
and
je
popa
jg
in
div
pop
pop
mov
outsl
mov
test
sbb
xlat
push
fisttpl
ljmp
mov
add
lret
out
mov
adc
fistps
add
roll
loop
fldcw
std
mov
es
or
jno
sbb
jns
dec
nop
sti
cmpsl
fistpl
xchg
jg
and
mov
push
jle
shlb
jecxz
cmpl
das
xor
xchg
add
mov
ret
popl
mov
enter
negb
push
inc
pop
aad
imul
xchg
data16
pop
scas
aad
push
fstps
xchg
pusha
stos
sub
insb
sbb
outsb
add
dec
jecxz
sub
rcl
mov
aad
das
es
cltd
out
sbb
jl
roll
cmp
mov
shlb
cmp
and
xchg
data16
sbb
daa
inc
divl
les
movsb
test
subl
mov
ret
enter
inc
lret
insb
or
cld
mov
jno
and
out
sub
lcall
ljmp
cmp
xor
pop
shlb
cmp
add
sub
push
movsl
rcrb
push
stos
push
cld
xchg
dec
add
jge
cmp
and
es
fisubrl
mov
xchg
push
push
pinsrw
inc
dec
addl
test
push
cltd
add
leave
mov
negb
lods
mov
mov
xchg
mov
mov
jecxz
jns
mov
push
les
push
mov
or
mov
sub
pop
mov
scas
jmp
sbb
out
mov
jge
push
cwtl
call
pop
lods
rcl
in
fwait
movsl
mov
sub
ret
scas
mov
sahf
cmp
test
sbb
jns
xor
notb
dec
popf
cmpsl
sar
push
iret
std
in
push
or
lret
or
lret
iret
cmp
inc
lea
mov
mov
loopne
mov
adc
popf
pop
and
sbb
daa
inc
mov
stos
fsts
sub
mov
ss
push
jecxz
stos
call
fs
jbe
decb
xchg
out
adc
test
subl
cmp
xor
js
sub
test
pushf
inc
mov
shll
xchg
std
jbe
xchg
and
mov
testl
lds
adc
mov
bound
call
iret
or
hlt
mov
jmp
fidivrs
pop
push
shrb
sbbb
repnz
shll
xchg
int3
cmp
adc
or
ret
loope
aam
dec
cltd
rdmsr
fsubl
dec
sbb
jmp
mov
mov
cmpsl
inc
pop
push
inc
or
jge,pt
mov
divl
icebp
outsl
shrb
arpl
dec
notb
std
fst
mov
movl
jnp
mov
or
fisubrs
xchg
test
popf
loopne
adc
test
fs
dec
es
into
xchg
insb
shll
xor
ds
and
adc
bound
push
add
lret
cmp
sahf
inc
pop
inc
inc
cli
enter
gs
arpl
subl
cmpsb
movsl
popa
add
decb
test
push
in
sbbl
and
mov
adc
xor
and
sbbb
or
and
mov
push
mov
call
roll
outsl
jns
data16
add
jecxz
xorb
fdivrs
sub
jbe
loopne
repz
popf
enter
mov
mov
loop
mov
iret
push
mov
adc
mov
shr
outsb
jns
negl
movsl
push
mov
test
jno
and
jne
stos
imul
mov
inc
push
sahf
xor
popa
sbb
jecxz
sub
stos
xchg
and
mov
cmpb
mov
aam
mov
xchg
push
sti
sbbb
nop
xor
daa
js
inc
inc
mov
jb
in
mov
test
cmovno
mov
fmull
dec
or
andl
push
insb
shlb
stc
mov
push
xor
arpl
nop
loop
mull
add
jl
pop
mov
inc
movsl
push
test
ds
sub
jge
imul
inc
cmp
or
mov
or
daa
jg
test
add
sbb
xlat
andl
push
std
mov
out
jmp
jp
lea
mov
fdiv
aas
mov
sar
jmp
lcall
pop
mov
cmp
into
pop
std
popa
pop
mov
stc
push
push
ret
aad
shl
cld
mov
cld
ss
test
cld
fcoms
mov
cwtl
sbb
adc
xor
fdivrl
mov
mov
fisubrs
add
clc
add
inc
outsl
stc
dec
flds
jae
adc
sub
push
jecxz
mov
cmp
int
inc
cmp
cmp
add
mov
push
mov
pop
lods
or
push
adc
jle
fisubl
sub
sti
cltd
mov
inc
in
lahf
adc
sahf
add
mov
dec
cmp
fldenv
jo
push
fs
cmpsl
and
out
rcrb
and
sahf
pop
inc
cmp
push
cmp
and
jae
dec
mov
pusha
insl
mov
lock
jecxz
jge
out
mov
mov
lahf
fdivrl
cwtl
add
jmp
daa
mulb
loope
addr16
in
cs
das
adc
test
adc
cmpsl
pop
xchg
xchg
dec
cmp
inc
push
mov
mov
mov
or
pop
xor
adc
or
ffreep
adc
cmpsb
push
test
mov
adc
adc
inc
add
mov
sub
imul
into
dec
sub
mov
xchg
add
sbb
out
pop
sub
mov
data16
arpl
push
sbb
pop
jb
xchg
sub
inc
aas
xlat
add
mov
repnz
sti
or
mov
xchg
sbb
inc
cmpl
mov
xor
ljmp
scas
xor
cmp
jle
jno
leave
ljmp
hlt
sbb
les
rorl
cwtl
fidivrs
ss
xor
pop
sbb
push
lcall
xor
test
scas
xchg
mov
jmp
jae
mov
add
mov
mov
sbb
mov
loop
inc
ror
lods
add
cmp
lods
pop
sbb
and
mov
xor
je
call
dec
push
mov
int
xchg
mov
les
sub
outsb
cmpsl
pop
adc
cmp
xor
mov
mov
jle
mov
inc
sbb
mov
imul
mov
push
or
testl
sti
mov
in
adc
movsl
sahf
jno
mov
cmp
mov
mov
scas
in
xor
es
and
push
jmp
lahf
mov
push
call
cmpsb
push
sub
rcl
mov
cmp
inc
gs
cltd
movsl
dec
int
or
sbb
scas
inc
dec
and
pop
int3
arpl
pusha
imul
lret
mov
add
stc
cmp
cmp
popa
lret
stc
outsb
xchg
dec
mov
sti
movsb
mov
aaa
xor
stos
lods
mov
or
mov
sarl
mov
out
rclb
dec
mov
mov
or
rcr
mov
adc
sahf
fistl
fisubs
adc
lret
xchg
out
clc
mov
repnz
cmp
jp
div
mov
or
hlt
sbb
imul
add
fcoml
enter
xor
stos
mov
hlt
jmp
push
in
hlt
xor
xchg
ret
lods
pop
movsl
sub
cmc
repz
movsb
ret
mov
aad
test
leave
sub
and
lds
jmp
fbld
mov
jge
mov
push
cwtl
inc
pop
sub
icebp
and
pop
orb
aas
dec
ret
xlat
or
mov
leave
or
and
test
xchg
and
jno
xchg
fidivs
cld
popf
fs
mov
cmpsb
push
movsl
addr16
xor
and
lds
jo
add
sbb
or
sbb
jge
fisubs
in
pop
lea
pop
pop
pop
notb
lods
mov
jge
icebp
out
scas
xchg
add
mov
mov
xor
test
mov
fs
xchg
loopne
cwtl
jno
aad
mov
dec
fnstcw
mov
adc
lcall
mov
aaa
incl
mov
mov
lods
mov
adcb
sbbl
push
inc
xchg
xchg
push
lds
jge
inc
xor
push
inc
xor
jns
or
jle
ret
jmp
jae
adc
pop
adc
push
test
mov
adc
mov
inc
mov
mov
hlt
fdivrs
shlb
das
mov
mov
xor
sbb
cmp
and
sub
and
jae
and
stc
cmp
iret
mov
std
pop
dec
adc
lret
mov
push
xor
pop
mov
loope
and
sbb
cmp
mov
cmp
sbb
or
mov
je
mov
sbb
sarb
fcom
popa
pushf
fs
xchg
push
dec
xchg
lcall
in
in
popa
ds
popf
sub
push
ljmp
xor
fwait
or
cmp
sbb
pop
out
arpl
dec
sub
loope
jle
and
aaa
das
negl
jno
pop
mov
adc
jbe
or
adc
mov
or
pop
leave
shrl
aam
data16
pop
sub
mov
sbb
shrb
fstl
jle
outsl
cmp
pushw
push
shrl
test
bound
dec
pop
mov
cmp
sub
push
out
hlt
and
and
adc
mov
das
mov
ficomps
and
incl
xlat
and
out
std
sub
mov
xor
push
cmc
jge
mov
mov
fsub
pop
ss
mov
fcom
jle
jle
dec
push
xchg
sbb
xor
nop
jnp
inc
gs
ret
mov
sub
sbb
fistpl
sbb
ret
inc
pop
push
nop
xor
sbb
jp
arpl
inc
fisubrl
xchg
xchg
lods
shrb
pop
ret
lcall
cmpsb
xchg
rorb
xlat
inc
scas
popa
cmpsl
jg
int3
mov
inc
pop
dec
sbbl
in
call
dec
leave
xchg
jle
xchg
mov
mov
lock
adc
lahf
and
call
lret
stc
or
xchg
sbb
xchg
pop
fisubrl
mov
mov
pop
xlat
pop
mov
sbb
cmpsb
das
push
aaa
jae
scas
sbb
mov
fwait
pop
jne
cmc
test
mov
pop
jecxz
add
or
xor
push
es
sub
and
cmp
insb
or
pusha
shll
out
outsb
lea
ja
cmpsl
stos
jmp
sahf
bound
imul
jg
mov
add
repz
nop
push
aaa
add
jp
and
sub
lcall
dec
popf
mov
adc
mov
rol
push
push
mov
out
out
data16
fimull
popl
cmc
jae
out
ret
sbb
adc
fadds
pop
mov
shrl
add
cmp
popa
and
push
popa
xor
sub
or
add
mov
fwait
ror
outsl
sahf
sbb
in
ljmp
shl
mov
and
inc
xchg
xchg
inc
fidivrl
mov
lea
mov
imul
push
inc
xchg
cmp
cmp
xor
ficompl
repnz
sub
ficompl
nop
pop
xchg
std
push
xor
or
sarl
gs
je
mov
mov
in
adc
add
ss
mov
sbbb
sbb
subl
inc
jb
enter
cmc
jmp
rorl
cmp
push
daa
in
sti
mov
cmp
arpl
pop
sub
std
push
outsl
xchg
divb
adc
out
fbld
pop
popf
call
shlb
clc
cmp
scas
inc
insl
insl
adc
scas
jns
test
test
xorl
js
addr16
int3
mov
adc
mov
clc
addl
fldenv
insb
adc
repz
adc
scas
mov
or
pop
inc
xchg
and
std
lock
xor
mov
xchg
xor
cmpb
repz
pop
jp
fwait
xor
movsb
loop
lock
xchg
fistps
aam
jnp
sub
rolb
in
mov
movsb
mov
pop
ss
insb
xchg
pop
inc
aam
sub
negb
jmp
add
or
loope
in
mov
xor
sub
stos
pusha
fwait
mov
int3
iret
mov
or
jmp
push
mov
jmp
or
fistl
aam
pop
mov
mov
lods
js
sub
pop
sub
sbb
cmc
add
daa
mov
sbb
popf
cmpl
rorl
mov
mov
sbb
stos
xor
out
mov
xchg
ficoms
inc
clc
push
ds
and
imul
jle
test
xor
mov
sbb
inc
mov
gs
and
cmp
xchg
and
in
out
pop
insb
push
in
pop
aaa
mov
nop
mov
dec
dec
push
rcl
or
out
xchg
lahf
inc
jno
adc
adc
mov
mov
add
or
in
addr16
pop
jae
inc
lea
hlt
pop
or
dec
sub
sub
int3
add
xchg
fwait
clc
dec
rcr
mov
cmpsl
xor
das
rorb
ffreep
imul
in
test
das
aad
sbb
mov
shll
adc
xor
push
shrl
cmp
js
jae
nop
lahf
stos
mov
cmp
cmpsb
and
jp
shll
dec
push
daa
cmp
ret
jge
paddsw
test
hlt
popa
out
jl
lret
sub
sbb
test
pop
sub
push
bound
in
mov
dec
jp
sbb
mov
call
shll
test
inc
fnstenv
fbstp
lcall
cmp
call
mul
scas
jb
lret
int
pop
test
lea
pop
jge
std
sti
sahf
jmp
sbb
mov
test
das
std
scas
jne
add
and
sub
xchg
das
sub
jbe
shl
xor
xchg
pop
and
es
inc
aad
mov
imul
push
mov
mov
loop
scas
daa
xchg
cltd
hlt
push
cmp
adc
and
adc
cmpsl
daa
inc
inc
fwait
push
das
sub
add
adc
push
inc
outsl
push
cwtl
and
popa
or
int3
pop
popa
aad
fchs
cmp
jp
in
test
pop
inc
sub
incb
loope
cwtl
push
or
out
icebp
ret
daa
fadd
xor
fcoml
in
mov
imul
push
and
and
sub
and
xlat
jecxz
mov
lods
xchg
mov
fstpt
stos
pop
clc
or
scas
inc
sub
push
imul
or
jb
aas
test
sbb
mov
in
iret
mov
lods
dec
dec
add
addr16
ror
push
pop
inc
lahf
cmpsb
arpl
mov
or
or
sub
jo
jae
movsl
jecxz
in
dec
add
ret
ret
mov
leave
inc
mov
mov
lods
xor
pop
iretw
sbb
shll
data16
shll
fcmovb
cld
sub
nop
fidivrl
lods
cmp
jnp
lock
xorl
xor
push
je
stos
std
into
in
jmp
popf
pop
pop
dec
iret
insb
inc
loopne
mov
loopne
sbb
or
sahf
int
adc
addl
cmpsb
ds
xor
bound
loop
aam
inc
repz
adc
aad
dec
sbb
aaa
std
pusha
fiadds
lea
inc
mov
mov
icebp
push
xchg
pop
pop
fimuls
dec
inc
icebp
cli
pop
jae
insb
cltd
cli
dec
jg
ffreep
in
jmp
push
push
out
mov
cmp
pop
int3
test
stos
adc
aad
cltd
inc
mov
or
adc
xchg
xchg
cwtl
iret
cmp
and
mov
enter
jb
ja
push
pushf
ret
xor
adc
fisttps
push
rcl
mov
ja
hlt
inc
push
mov
inc
mov
scas
adc
mov
xchg
jnp
mov
incl
mov
adc
mov
addl
loop
xor
dec
push
ja
cmc
aaa
test
push
mov
in
xchg
stc
aas
push
xchg
nop
push
sbb
jp
divb
xchg
mov
in
mov
inc
insb
mov
push
test
fisttpll
pop
pop
rorb
add
sub
ficoms
and
fdivr
adc
jecxz
fldl
roll
push
fs
xor
call
enter
outsl
loop
out
cmp
setb
mov
jne
adc
cmpsl
lcall
xor
jb
mov
xor
xchg
adcl
imul
xor
je
jle
cmpxchg
ret
lods
and
cs
ljmp
jnp
outsb
jo
push
ret
cmp
push
in
inc
and
bts
cmp
xlat
and
adc
pop
inc
es
iret
mov
inc
into
mov
sbb
fists
movb
push
cmp
es
add
push
imul
sub
xchg
pop
test
mov
push
ss
adc
into
aas
imul
xchg
rolb
sub
dec
dec
inc
jne
les
push
mov
lods
loope
dec
addr16
sbb
movsl
add
insb
push
dec
mov
dec
inc
ljmp
adc
jmp
mov
and
xchg
cli
sarl
es
stos
xor
xor
iret
iret
lret
mov
out
lret
xlat
mov
ficompl
iret
inc
xlat
and
dec
cli
outsb
mov
popf
pop
jecxz
mov
dec
cmp
rcll
mov
mov
cld
or
fnstsw
leave
xchg
sbb
inc
in
movsb
aaa
adc
xchg
inc
pop
jae
idivb
ds
pop
aam
push
mov
push
mov
inc
in
push
mov
repnz
out
sub
ret
mov
mov
call
ret
arpl
sbb
mov
icebp
into
jns
out
ljmp
lods
bound
scas
data16
pop
es
addr16
lahf
or
gs
std
std
adc
xchg
lret
adc
sbb
into
pop
or
xor
jae
mov
nop
jnp
mov
add
movsb
mov
les
sub
adc
in
dec
or
xchg
cmp
in
in
xchg
cmpsl
xor
idivb
cmpsl
cmp
test
add
cwtl
ljmp
pop
push
dec
clc
jle
push
sub
pop
sahf
add
cmp
mov
mov
sti
xor
lcall
mov
xor
add
in
jge
adc
inc
mov
inc
lahf
sbbl
stc
inc
lds
cmp
or
jp
add
imul
push
push
pop
insb
add
mov
and
repz
add
sahf
aad
xchg
lret
sti
pop
xlat
push
data16
repz
xor
xor
clc
addr16
mov
xlat
pushf
or
adc
mov
dec
outsl
jle
mov
pop
jb
in
add
shlb
inc
das
push
xchg
loope
inc
push
inc
mov
jl
es
jo
jbe
or
xchg
mov
fwait
sub
mov
dec
add
icebp
iret
add
sub
ja
ljmp
jge
inc
and
mov
test
hlt
push
cld
in
jne
cmpsb
dec
add
roll
divb
jb
mov
insb
xchg
decb
loop
pop
das
xchg
fiadds
movsl
loop
inc
lods
pop
pop
out
cld
mov
push
movsb
lods
inc
cmp
mov
in
imul
sbb
and
call
ror
jno
mov
icebp
xor
mov
addb
push
pushf
lahf
std
xchg
movsb
sbb
int3
jl
jp,pn
pop
pop
pop
popa
rclb
fldl
jns
mov
dec
in
nop
aam
fs
ret
fcoms
hlt
fs
out
fisubrs
ret
sbb
test
je
mov
mov
sbb
pushf
inc
das
ret
popa
sbb
pop
pop
pop
adc
or
outsb
or
fstpl
mov
xchg
xor
adc
faddp
dec
inc
cltd
sbbb
rcl
mov
cmc
ret
andl
mov
add
jnp
pop
jnp
aas
out
in
loop
in
lock
shll
cwtl
outsl
xor
sub
and
cmp
rcr
pop
sub
push
jle
lds
aam
ret
pop
mov
insl
mov
push
push
mov
push
inc
shll
pop
clc
push
pop
mov
jne
mov
or
test
pop
orps
fdivs
sbb
sbb
jo
xchg
pop
pop
sarb
jb
mov
and
add
push
daa
cltd
enter
add
test
lret
push
jae
outsl
dec
adc
sbb
push
jnp
jo
inc
push
mov
sub
sub
test
mov
xchg
div
mov
pop
pop
pop
mov
xlat
or
jo
jbe
lea
mov
scas
pop
mov
jbe
push
aam
xchg
dec
scas
popa
decl
cmp
adc
insb
jne
cmp
cmp
jmp
add
loopne
sub
mov
pusha
and
ja
fnsave
cli
cwtl
push
xchg
loopne
sahf
outsl
dec
popf
mov
push
mov
cmpb
lret
sbb
int3
andb
stos
call
mov
pusha
mov
add
cwtl
adc
das
inc
cmp
jge
rorl
mov
clc
mov
out
push
mov
push
mov
out
repz
push
xchg
aad
dec
mov
int3
inc
push
inc
lahf
repz
jge
xchg
add
and
mov
sbb
clc
push
sahf
into
inc
push
cmp
xlat
ds
jae
ret
mov
cmp
gs
jecxz
jnp
pushf
xchg
add
out
ficompl
movsb
push
add
loope
cmp
jb
jmp
mov
jae
jae
cmpsl
outsb
mov
mov
and
jle
scas
adc
and
scas
leave
jae
pop
xor
xorl
cmpsb
pop
push
sbb
dec
sbb
aam
mov
sub
ja
in
sub
outsb
and
lods
push
pushf
daa
cmc
xchg
push
cmp
jg
add
jmp
imul
rorb
mov
lods
push
outsb
jb
xchg
out
fsubrl
imul
mov
fcomps
call
xchg
jle
subl
inc
sbb
mov
lods
cld
arpl
bound
cmp
int3
xchg
mov
cwtl
in
and
fwait
xchg
pop
rclb
push
mov
imul
scas
pop
lods
mov
testb
jae
mov
jecxz
push
mov
mov
inc
lods
stc
adc
mov
lahf
cmp
mov
insl
adc
ret
leave
push
inc
cs
pushf
cmp
lcall
shll
lock
sbb
test
sbb
stc
ss
xchg
jecxz
push
lcall
popa
mov
sbb
dec
pop
mov
ret
and
adc
iret
mov
jp
mov
mov
inc
add
inc
movsb
movsl
dec
jmp
push
or
cmp
out
hlt
push
push
cmp
arpl
dec
fsubl
mov
daa
out
ss
call
pop
cmp
movsb
fidivl
dec
rorl
push
cli
lods
dec
mov
xor
inc
add
mov
fdivrl
mov
fildll
pop
cmpsb
mov
mov
sti
repz
inc
xor
or
sbb
mov
push
sbb
jecxz
dec
js
sub
xchg
and
add
rcrl
fwait
clc
adc
ret
push
adcl
push
data16
pop
testb
or
mov
hlt
inc
sbb
inc
sbb
aaa
xor
arpl
pop
add
test
add
ss
enter
je
xor
mov
aaa
and
lahf
mov
les
push
in
out
sbb
inc
js
pop
scas
push
repz
movhps
inc
sahf
popa
movsl
jge
mov
test
mov
push
enter
xchg
add
mov
pop
test
push
add
sbb
stc
add
fs
push
mov
dec
mov
mov
xorb
dec
mov
push
sbb
pop
sub
mov
outsl
dec
adc
dec
idivl
lea
bound
aam
shlb
rolb
daa
insl
or
cmp
insb
fistpll
in
sti
in
push
inc
xchg
xor
int3
es
nop
mov
mov
adc
xchg
xlat
add
xchg
mov
insl
push
test
add
fldl
hlt
jle
pop
mov
subl
jmp
cmp
push
aam
xorb
dec
popa
pop
ljmp
inc
cmc
sbb
lea
call
stos
sahf
insb
out
pop
mov
mov
mov
inc
lcall
jno
inc
in
pop
cmpsb
leave
loopne
jb
out
hlt
std
int
int
movsl
pop
mul
rolb
outsl
xchg
fidivrs
insl
pop
dec
push
pop
jg
out
or
jbe
push
f2xm1
mov
shr
pop
mov
xchg
loop
lret
or
lret
call
enter
xchg
xlat
push
popf
and
or
gs
sarb
add
sub
mov
xchg
out
or
rorl
push
aaa
sub
xchg
loopne
dec
test
pop
cmpsb
pop
in
mov
mov
xchg
mov
lds
mov
pop
aad
cmp
xlat
mov
rorb
stos
sti
add
aad
push
fstpl
sbb
stos
pop
add
dec
xlat
lods
sbb
pushf
lea
mov
mov
mov
test
rep
js
jo
xchg
inc
pushf
push
adc
sbb
das
xor
cli
jo
mov
imul
gs
or
imul
inc
lcall
jg
pop
dec
xor
movsb
sbb
xchg
sub
jne
iret
leave
xchg
dec
pop
mov
popa
inc
add
je
test
mov
cmpsb
xor
in
mov
dec
enter
rorl
cmp
bound
cmpsb
lds
push
and
push
cmpsb
hlt
ds
push
xchg
and
mov
pop
jge
lea
std
pop
or
dec
adc
mov
lcall
push
and
mov
lret
or
or
call
sub
mov
lock
mov
xor
ds
shrl
add
cwtl
mov
jg
xchg
lods
lods
mov
arpl
mov
icebp
stc
sub
xchg
loope
inc
aas
fdivs
mov
pop
jbe
xor
pop
pop
push
int3
cmp
shlb
enter
nop
sbb
xchg
and
inc
sbb
sahf
and
pop
and
test
out
pop
sub
iret
cmp
cmpsl
mov
push
xchg
add
push
inc
aaa
or
inc
adc
pop
push
and
dec
push
and
das
fst
int
add
shll
stos
out
popa
pop
lods
nop
mov
lock
xor
pop
xor
aad
mov
in
sbb
out
mov
ds
faddl
or
pop
mov
mov
and
std
mov
push
or
das
mov
adc
jno
aam
adc
push
inc
scas
sahf
mov
sbb
test
negb
data16
mov
adc
pop
shll
movsl
idivl
and
push
sub
pop
in
iret
aas
je
mov
insl
sbb
pop
or
ret
cmpsb
jbe
push
test
cwtl
push
sahf
ds
js
jmp
dec
shll
mov
add
lea
xchg
enter
or
xchg
lret
mov
cwtl
out
inc
out
xchg
sti
adc
ret
adc
leave
roll
dec
repz
inc
pop
ja
inc
xchg
aam
repz
jle
clc
fisttpl
push
mov
loopne
sub
adc
stos
mov
sbb
add
dec
addb
cmp
in
xchg
pushf
cmc
adc
mov
dec
ja
mov
mov
push
addb
in
idivb
sarb
push
int3
dec
adcb
movsb
xchg
xchg
pop
xchg
jg
rcrb
sub
xlat
scas
and
and
mov
xchg
cmc
iret
sub
mov
adc
jo
pop
dec
aam
or
mov
jp
jb
test
xor
sbb
aad
subb
xchg
inc
mov
les
sub
popf
xchg
and
aam
movsl
aaa
out
sbb
inc
mov
push
iret
ret
arpl
sbb
lret
sbb
out
test
lds
mov
pop
lahf
jmp
cltd
fs
mov
stc
adcb
mov
mov
sub
popa
decb
adc
stos
jnp
sub
lods
sub
add
jg
movsl
add
inc
cmp
xchg
stos
std
js
jbe
arpl
mov
test
adc
cmp
pop
popf
mov
ljmp
xor
inc
mov
mov
imul
imul
fistps
xchg
aaa
jl
xor
jae
int
pop
xchg
push
loope
stc
pand
add
cmp
mov
test
les
jo
mov
inc
rcrl
push
lods
xchg
decb
xor
mov
or
push
int3
nop
repnz
clc
std
aad
lret
test
popa
mov
and
lods
and
mov
outsb
das
test
mov
or
fdivrl
push
inc
fwait
test
pop
aam
lret
sub
cwtl
out
shlb
mov
test
xor
or
aad
jmp
adc
jl
icebp
lods
xor
cwtl
out
mov
cmp
sahf
notl
pop
lods
add
lret
repnz
jp
dec
movb
stos
xor
pop
mov
dec
pop
stos
fidivs
call
mov
mov
stc
xor
dec
stc
lods
lret
dec
xchg
jmp
inc
xor
sbb
xlat
and
cmp
das
out
ds
and
cs
lret
out
mov
sub
pop
sbb
cli
or
pop
sbb
outsl
xchg
cmp
lock
xlat
cmp
or
push
mov
add
sub
cmp
lods
or
xchg
add
jp
inc
mov
lahf
jmp
dec
push
xor
test
mov
and
outsl
jg
in
inc
addr16
sbb
or
sbb
add
dec
test
je
mov
xchg
dec
ja
jns
xchg
inc
pop
stos
xchg
sbb
mov
loope
ljmp
and
sub
and
inc
dec
outsb
mov
xor
out
pop
jl
aad
fidivrs
mov
repnz
inc
dec
adc
sub
std
daa
in
mov
or
or
add
out
pushf
add
inc
movsb
out
stos
push
pop
insb
loopne
sbb
jl
es
jg
je
cmp
in
cwtl
in
inc
std
pusha
jae
subb
dec
rcll
in
mov
inc
out
shrb
or
inc
jle
into
sbbb
mov
xor
xor
into
sahf
or
or
loope
cmpsl
mov
cmp
ja
inc
out
mov
fwait
test
jge
ret
out
scas
adc
out
xchg
jne
insl
dec
sub
movsb
or
lret
idivb
imul
dec
dec
aad
cmp
mov
xchg
or
fimuls
aam
push
mov
add
movsb
or
sbb
pop
mov
mov
xorb
pop
cmpsl
cmp
add
arpl
out
dec
imul
sbb
pop
pushf
jno
adc
or
xchg
mov
insb
sbb
cmp
insl
cs
cmpsl
ret
hlt
adc
mov
push
lea
mov
cmp
cmc
insb
test
xchg
mov
mov
adc
jbe
scas
in
push
adc
imulb
xorb
sarb
push
ja
mov
adc
push
pushf
add
scas
xchg
pop
fldenv
dec
pop
dec
sub
ficoms
cmp
nop
int
sbb
pop
iret
push
clc
sar
or
das
cltd
test
sub
rcl
dec
push
push
std
jmp
or
in
jne
cwtl
out
lret
out
sar
push
jnp
subb
arpl
dec
loopne
xchg
sbb
int
adc
jno
cli
xor
aaa
out
xchg
mov
popf
push
into
inc
xor
add
mov
fbstp
clc
ret
xchg
xor
lods
cmp
cltd
cmp
fnstcw
rol
adc
out
adc
inc
dec
sub
sahf
sbb
repnz
repz
imull
mov
sbb
push
loop
pop
jns
idivl
sub
sbbb
stc
and
mov
loopne
ja
mov
leave
xor
xor
push
or
adc
mov
cmp
lcall
pop
mov
mov
dec
mov
mov
sbb
stc
push
repz
mov
dec
mov
pop
divl
aam
dec
adc
pop
push
cmp
xchg
ljmp
sarl
in
int
movsb
out
cmpsb
cwtl
in
cmp
loop
xchg
pushf
dec
mov
in
sahf
repnz
sbb
rorl
iret
pop
mov
out
xchg
dec
inc
xor
jnp
xor
cmc
jl
xor
adc
and
adc
jae
add
fstl
mov
movsb
ds
arpl
nop
add
mov
push
xchg
add
loopne
shr
pop
rclb
incl
xor
push
pop
add
lods
fdivrl
mov
int3
cmpsb
icebp
mov
and
adc
dec
std
inc
fs
and
lret
ss
test
loope
lret
and
or
jb
mov
int
insl
inc
mov
mov
stmxcsr
insb
aas
stos
rcr
pop
in
mov
dec
mov
inc
int
pop
les
and
xor
mov
mov
das
fwait
mov
adc
sub
aaa
push
imul
nop
add
xchg
push
aam
inc
dec
rcrb
int3
rcrl
jnp
fsts
pop
sbb
or
or
xlat
mov
imul
stc
push
or
or
insb
cmpsl
cwtl
cld
test
cmpsb
push
cmpsl
cmp
mov
sbb
add
mov
call
dec
hlt
mov
push
adcl
out
push
movsb
fcmovne
mov
ljmp
dec
es
ret
test
mov
popf
stos
dec
sub
xchg
xchg
and
cmp
aad
jmp
mov
or
cmp
sub
adc
xchg
fnsave
push
ljmp
inc
mov
adc
push
into
cs
vpsllw
fistl
pop
pop
or
in
mov
repz
ret
data16
or
add
add
pop
cmp
inc
or
mov
xor
andb
mov
ljmp
imul
lods
mov
stos
insl
mov
add
loope
mov
std
mov
push
and
daa
cmc
xor
adc
ljmp
sub
mov
sahf
ret
dec
leave
cmp
sub
pop
push
out
push
jp
push
in
cmp
mov
cmp
sub
mov
xchg
lea
adc
ds
in
lret
lea
mov
sub
xor
xchg
push
mov
hlt
sub
cmpsl
fidivrs
mov
sbb
nop
cs
loope
dec
insb
scas
xchg
jo
inc
pop
pop
pop
lret
mov
outsb
lret
sbb
xchg
inc
jecxz
stc
rcrb
orb
shl
ja
mov
data16
fs
mov
add
cmp
jns
frstor
outsb
pushf
les
mov
pop
push
mov
add
aad
push
or
pop
mov
jecxz
addr16
test
lcall
and
cmp
lret
jb
sbb
or
mov
rcrl
mov
jle
mov
inc
and
jp
xor
shlb
push
mov
sarl
push
pop
jae
cmpsl
out
cmp
xor
dec
xchg
in
xchg
add
clc
stos
in
out
imul
and
ficoms
scas
or
and
clc
adc
das
sti
rolb
incb
pusha
or
adc
and
in
adc
add
xor
sbb
in
lods
out
popf
ljmp
lods
std
lcall
imul
outsl
aaa
mov
leave
pop
sbb
push
rcrb
mov
dec
add
mov
push
mov
mov
and
daa
lds
cmp
enter
mov
data16
je
sub
outsb
loopne
jecxz
jp
daa
pusha
insb
mov
jnp
frstor
test
jge
mov
jb
adc
add
outsl
scas
xchg
or
movsl
and
sbb
mov
lret
lea
jae
sbb
lds
sbb
loop
mov
xchg
scas
cmp
stos
dec
or
cltd
add
out
ficompl
cwtl
cli
icebp
jle
add
add
inc
or
call
in
add
movsl
sarl
enter
ret
mov
push
fdivp
sbb
xchg
mov
call
in
mov
popa
mov
adcb
sar
jo
and
add
mov
fcompl
xlat
call
add
xlat
add
test
ret
inc
push
xlat
xor
cmp
jo
inc
xor
sar
xorl
or
clc
or
fnstsw
adc
adc
nop
adc
sbb
cwtl
xchg
mov
ret
pop
lods
xchg
mov
test
jno
jp
push
movl
loopne
xchg
jnp
or
popf
dec
jae
lea
dec
enter
jg
ftst
rcrl
in
dec
rcll
push
mov
xchg
out
xlat
lods
cmpsl
mov
mov
xchg
adc
test
mov
adc
dec
push
lcall
sbb
je
hlt
sbb
dec
cltd
jae
push
mov
lods
fcoms
js
cli
mov
pop
xor
cmpsb
scas
es
mov
and
push
cltd
xchg
sub
inc
push
lcall
fmull
or
cwtl
sbb
fisttps
sub
pop
pop
xchg
cltd
pop
dec
xor
int3
and
lock
pop
mov
es
xor
add
push
mov
sbb
fidivl
stc
int
into
mov
cmp
xchg
dec
inc
adc
xchg
out
cld
cmp
test
adc
test
fwait
dec
fs
mov
test
cli
sub
jb
repnz
sub
sbb
xorl
imul
rorl
les
xchg
cmp
pop
hlt
xadd
jne
pop
ljmp
test
pop
push
out
sti
sub
mov
push
sbb
add
lret
adc
mov
inc
dec
mov
aas
xchg
test
mov
inc
xchg
ja
jge
inc
mov
imul
add
icebp
mov
hlt
testl
in
pusha
and
clc
test
adc
cmp
pop
cli
inc
or
sub
dec
insb
cmp
test
lock
dec
cmp
scas
cmpsb
sbb
or
outsl
test
adc
xchg
mov
in
push
addb
cli
xchg
or
mov
cmc
and
adc
push
gs
inc
lret
jecxz
mov
xchg
inc
jbe
repz
cld
lds
rep
add
iret
adc
jecxz
pusha
fwait
lret
mov
adc
xchg
add
mov
cmp
shll
sti
outsl
push
xor
aaa
movsb
ret
dec
sahf
dec
jno
xchg
leave
dec
xor
aad
pop
aam
add
lret
inc
add
outsl
out
cmpsl
setae
or
stc
mov
sbb
lock
push
xlat
sbb
xchg
jg
mov
insb
fsubrl
fs
insl
dec
inc
jmp
mov
mov
jo
mov
jbe
cmc
cmp
out
xor
xchg
pushl
jb
push
lcall
popa
rorb
push
cmc
xchg
xchg
push
cmp
icebp
cmp
jmp
rcrl
xor
mov
sub
jae
cmp
stos
jp
cmp
mov
pop
add
jmp
popa
xor
sub
sub
jle
std
les
xlat
pusha
out
insl
adc
mov
sbb
dec
lret
adc
out
ljmp
xchg
das
cs
xor
mov
push
lret
sbb
adc
add
fists
add
lcall
repz
popa
adc
stos
popa
mov
ror
jo
and
dec
cmp
xor
gs
xchg
orb
jo
add
dec
sbb
mov
push
sbb
sub
mov
scas
mov
mov
aas
scas
test
cmp
sbb
push
dec
cmp
mov
test
mov
inc
cmpsb
xlat
push
mov
jge
jae
pushf
and
loop
dec
bound
or
call
push
test
jle
mov
out
addr16
push
xlat
in
xlat
fistps
inc
adc
inc
int
dec
out
xlat
bound
scas
pop
aam
fxch
mov
shll
mov
aas
mov
pop
mov
xor
pop
test
xchg
rcll
sub
dec
and
pop
jne
lret
mov
test
sar
xchg
ja
in
jmp
jo
sub
leave
inc
xchg
je
jnp
jge
cmp
sbbl
fcmovnu
stc
xchg
add
push
shrb
dec
push
xchg
popa
ret
mov
gs
sbb
cmp
cmp
mov
loop
js
adc
lods
and
je
sahf
inc
test
inc
mov
mov
rorb
xchg
push
test
out
sub
stos
mov
cmp
jp
ljmp
jmp
xchg
bound
sbb
lds
mov
pop
mov
pop
adc
mov
mov
das
sbb
pop
or
mov
out
cwtl
adc
dec
cld
out
aam
aad
in
add
rorl
fstpl
into
sub
pop
es
jns
push
cli
out
add
jl
int
mov
adc
out
lods
inc
pop
cs
pop
lahf
and
ret
incb
iret
shll
sbb
dec
aam
xchg
fs
cmp
jge
cmp
lods
dec
or
pop
add
repnz
pusha
enterw
xchg
mov
add
daa
popa
cld
adc
iret
cmp
js
lret
leave
outsl
or
lret
fmuls
in
sbb
nop
or
in
inc
xor
sbb
lods
inc
hlt
jle
in
push
jae
pop
mov
das
out
call
leave
cmp
add
pop
arpl
mov
adc
arpl
mov
mov
sub
into
loope
jl
fs
xchg
icebp
jl
call
ficoms
test
data16
sbb
add
push
scas
cs
sbb
loopne
mov
es
and
pop
mov
sbb
sbb
and
dec
sbb
adc
loop
sbbl
push
add
adc
in
xchg
mov
in
add
pushf
jmp
enter
hlt
mov
sub
stos
int3
loopne
shr
and
add
dec
imul
hlt
push
stos
cmpsb
xchg
xor
and
ds
mov
mov
adc
push
mov
mov
and
cs
or
arpl
mov
or
repz
push
mov
mov
into
fldl
mov
lcall
fcoml
or
incl
sbb
mov
ret
lret
dec
mov
jae
push
movsb
loop
orl
cmc
mov
int
inc
sub
out
xor
jg
clc
pop
sub
mov
pop
or
outsl
sub
mov
inc
xchg
push
cmpl
mov
das
sbb
cli
pop
lock
addl
fstpt
std
push
das
loop
inc
icebp
xchg
mov
push
xchg
inc
xchg
jge
jecxz
jbe
pushf
xchg
dec
clc
cmp
data16
orb
loopne
rclb
mov
mov
sbb
push
je
ljmp
daa
hlt
and
jg
addr16
inc
sbb
push
dec
shrb
xchg
movsb
test
testl
dec
cs
push
xchg
lahf
mov
xchg
mov
jg
lods
adc
ret
dec
cs
mov
jecxz
push
out
andnps
insertq
xlat
into
mov
cmp
iret
and
ret
pop
push
lock
jno
push
stos
in
add
sbb
or
add
in
mov
outsl
cmpsl
pop
bound
sbb
cmpb
push
je
adc
je
jp
out
aam
inc
sub
mov
mov
les
jns
pop
inc
ljmp
data16
out
jl
jecxz
and
repnz
imul
fistpll
push
pop
mov
inc
cmp
mov
fadd
ss
pop
xchg
in
call
lret
aam
dec
or
push
cmp
xchg
mov
push
aam
rcrb
insb
sbb
scas
movsb
pop
int
dec
inc
jecxz
xchg
pop
lock
bound
cwtl
cmp
fcmovnbe
add
je
mov
inc
scas
dec
xor
data16
mov
ret
add
shl
ja
fwait
arpl
hlt
lret
mov
xchg
mov
inc
sbb
addr16
mov
into
cmpsb
adc
mov
out
sahf
int
insb
sub
inc
fisubrs
stos
outsb
push
and
cmp
leave
sbb
rorb
sti
mov
pop
std
loope
xchg
lret
jne
xchg
insl
add
sbb
in
iret
jge
cltd
fld1
fistpll
dec
loop
scas
mov
int3
add
jp
bound
push
or
jns
jo
movsb
pop
ljmp
jae
mov
pop
lret
incb
test
lret
bound
leave
outsl
in
jae
mov
cmc
fmul
and
mov
jns
adc
push
pop
dec
repnz
dec
add
xchg
in
adc
xchg
xor
test
arpl
in
push
push
nop
rcr
rcl
add
cmp
and
in
adc
cmp
push
and
cwtl
fisubs
outsl
jmp
xor
stos
or
aaa
sbb
sti
je
push
mov
mov
imul
pushf
ja
scas
bound
xchg
sbb
movl
cmp
testb
pop
imul
subl
or
sub
les
dec
into
test
jecxz
je
lods
scas
pop
outsl
push
xchg
xlat
cmp
and
int3
popf
mov
fucomp
mov
cmc
bnd
stc
xlat
sub
mov
roll
pop
fadds
in
cs
test
cld
daa
loope
shrl
data16
pushf
push
and
aam
fst
mov
adc
enter
je
iret
into
jnp
push
iret
sti
inc
icebp
cli
or
xchg
pop
lcall
pop
pop
stc
jb
hlt
jns
notl
shrl
fistl
in
push
outsb
test
and
xor
test
jns
lret
call
pop
push
fnsave
push
xor
mov
pusha
adc
and
push
jp
inc
mov
outsl
xchg
xchg
test
or
inc
inc
gs
dec
dec
sbb
std
outsb
lea
out
sub
icebp
and
and
pop
push
add
daa
pop
in
dec
mov
or
sbb
mov
sar
adc
sti
mov
and
push
data16
jge
jno,pn
data16
lods
cmpsl
fnstenv
mov
int3
inc
popf
gs
scas
sub
cmpsb
jecxz
fidivs
push
popf
arpl
loop
ret
daa
xchg
push
push
ret
int
push
jl
jl
stc
inc
inc
ljmp
into
js
push
inc
ficompl
imul
jecxz
inc
pusha
test
dec
scas
dec
push
pop
test
arpl
pop
cmp
les
fistpll
ja,pn
cmp
jb
into
sub
and
dec
sbb
fistpll
lock
in
mov
cmp
jne
ljmp
fistpl
lahf
or
sub
fldenv
dec
in
mov
add
jge
test
pop
or
adc
xor
mov
in
outsl
or
dec
mov
push
dec
stos
push
add
mov
push
hlt
dec
sub
loop
fcmovbe
movsb
test
pop
push
sbb
dec
dec
push
cmpsl
mull
repnz
mov
inc
inc
shll
lods
or
or
dec
cwtl
sbb
sub
jno
cld
mov
inc
into
jp
cwtl
ja
fsubs
push
fistl
mov
xor
test
cwtl
out
fsubrs
push
shll
xchg
mov
mov
xchg
sti
xchg
or
sbbl
mov
aad
fcoml
mov
jo
dec
inc
dec
sbb
sub
push
dec
and
out
les
mov
mov
mov
mov
add
aam
jno
and
fidivrs
aad
and
pusha
dec
inc
xor
adcl
or
setno
mov
scas
into
mov
or
xchg
jns
insl
push
mov
fucomi
jns
cs
lods
lods
inc
jo
dec
pop
sub
adc
fwait
repz
add
addl
cmp
adcl
out
mov
rclb
and
mov
sbbb
ficoml
mov
inc
pop
jp
sbb
bound
sub
mov
add
and
stc
dec
xlat
push
jg
popa
sbb
nop
lods
pop
inc
pop
or
mov
push
and
pop
inc
jnp
icebp
fdivl
mov
mov
into
mov
dec
jmp
inc
fcompl
mov
xchg
clc
int3
fsts
sahf
imull
data16
mov
addb
sbbb
insb
fs
mov
fs
repz
cmpsb
inc
iret
sbbb
mov
jmp
and
out
xchg
pop
test
rolb
dec
cmp
mov
dec
loop
call
mov
cmpsl
push
lret
and
incb
scas
inc
out
aaa
push
push
rcll
imul
das
mov
mov
mov
addr16
mov
lret
mov
mov
cltd
push
in
imul
out
loop
dec
sbb
lret
push
fprem
jmp
jle
pusha
jb
js
jbe
pusha
push
fnstcw
mov
xorl
out
clc
jo
mov
jno
dec
shlb
decb
pop
inc
sarl
dec
sbb
jp
cld
jb
jnp
in
xor
dec
mov
sbb
dec
out
sbb
mov
into
mov
fldenv
jge
lret
out
fistpll
sbb
xchg
outsb
cwtl
add
rclb
inc
fmull
add
xor
jp
push
test
push
fsubl
or
push
fxsave
in
test
jno
movsl
lret
cmp
lahf
sbb
sarb
lods
cmp
push
loop
movsb
xor
in
test
push
fisttpll
sbb
xor
mov
lock
inc
aas
adc
and
into
mov
push
adc
add
xchg
cmp
outsl
push
push
nop
inc
cmp
sahf
push
xchg
jb
pop
or
outsl
sbb
mov
add
ljmp
out
dec
add
movsl
sbb
xchg
add
or
jmp
mov
pop
jbe
push
and
xchg
out
xchg
inc
xlat
sbb
ja
mov
inc
mov
jecxz
fsub
sbb
mov
das
fisubs
sti
push
scas
pop
cmpsl
xor
sub
push
iret
ret
sbb
mov
push
and
mov
jp
insb
lret
test
mov
push
pop
fistpll
popa
mov
in
mov
daa
mov
imul
sub
push
stos
pop
adc
lds
mov
adc
js
dec
xor
fsubrl
and
sbb
push
lods
xchg
orb
cmp
stos
std
dec
int3
lret
idiv
adc
and
out
dec
fdivr
cmp
push
std
out
fmuls
push
lret
sbb
mov
lods
push
insb
loope
sbb
sti
adc
out
shl
inc
mov
out
dec
and
rorl
cltd
shll
ljmp
cmp
jb
cmp
cmp
into
xchg
add
mov
fdivs
push
in
sub
push
aas
sbb
push
jl
inc
cmp
mov
int
adc
xor
adc
dec
xor
fcomps
pop
mov
insb
jne
repnz
aaa
inc
cmpsb
sub
rorl
mov
add
cwtl
cmpsl
or
stc
mov
mov
pop
out
test
add
add
sti
inc
mov
sbb
xchg
xor
inc
lds
pushf
jge
lds
ret
inc
cltd
cmp
adc
adc
and
jo
mov
insl
popf
jge
xchg
xor
mov
mov
adc
adc
xchg
mov
mov
and
icebp
data16
sub
aad
test
jge
fs
movsb
ficoms
sub
mov
in
jo
fisubs
inc
in
mov
dec
lock
dec
outsb
push
or
and
pop
xchg
inc
push
fucomi
dec
pop
into
push
testl
or
jg
dec
mov
jp
add
mov
rcll
pop
mov
and
push
lret
test
xorl
mov
inc
ss
and
push
mov
mov
dec
cli
xchg
mov
out
aad
adc
bound
jp
aad
dec
in
jg
dec
stos
outsb
cmp
mov
jo
sbb
mov
movsb
pushf
je
repz
lcall
mov
mov
je
adc
pop
or
pop
jae
adc
add
xchg
or
out
aaa
outsl
lods
cwtl
and
sub
gs
inc
icebp
mov
aad
dec
mov
push
add
out
jne
cmp
icebp
lahf
fldz
and
cmp
fisttps
mov
call
sub
popf
fidivrs
pushf
mul
and
leave
push
jle
mov
dec
test
dec
or
dec
dec
pushf
out
adc
add
pop
cli
mov
pop
mov
fldenv
pop
mov
sbb
xor
mov
lret
enter
adc
sbb
orb
push
je
mov
insl
call
cmp
jnp
ffreep
sbb
lods
sti
mov
xchg
xor
ljmp
stc
popa
repnz
jne
or
and
dec
outsl
dec
sti
jno
shrb
aad
cmpsl
into
xchg
sub
mov
lock
mov
jmp
das
test
rolb
fistl
shlb
movsl
clc
repz
in
imul
mov
js
data16
cs
xor
push
aam
mov
jle
adc
cmp
bound
sub
xchg
arpl
adc
and
push
push
cld
mov
enter
sub
jmp
lahf
insl
jne
fcmovnb
mov
in
loopne
mov
add
movsb
mov
int
lret
test
outsl
adc
sbb
repnz
gs
div
jecxz
iret
push
jg
js
stos
in
loope
add
mov
jnp
dec
pop
lret
jae
jns
push
or
fwait
dec
pushf
xchg
xchg
pop
jge
and
jg
cmp
lcall
or
rclb
repz
decl
in
or
pop
sbb
das
rorl
fwait
push
mov
imul
cmp
and
fdivrs
cld
ror
sub
shrb
cli
scas
fiaddl
jnp
std
lret
jge
xor
lret
cs
fwait
out
loopne
inc
lret
mov
cmpb
pushf
rcl
in
jnp
inc
jb
pop
add
mov
inc
pop
xor
jae
or
fnstenv
jo
or
push
test
sbb
rcrl
inc
sub
ficompl
test
pop
and
je
adc
adc
je
push
mov
das
xchg
in
shlb
pop
push
movsl
mov
sub
sub
pushf
sub
loopne
cmpsb
dec
xor
and
add
pop
jle
stos
jno
xchg
insb
ja
mov
mov
iret
push
jns
cmp
movsl
mov
push
pop
lea
pushf
in
out
decl
loopne
fcomps
insl
and
out
es
clc
int
cwtl
inc
push
ja
call
adc
push
jns
out
in
fcomp
mov
jae
pop
ljmp
mov
cmp
jo
sub
and
leave
cltd
sub
adc
push
out
jae
aaa
movb
sbb
js
rolb
cltd
and
aad
psubb
popa
mov
enter
les
xor
or
xchg
sbb
push
mov
jb
adc
adc
ja
out
ficoms
push
cmp
cmp
or
in
jp
nop
ljmp
dec
or
xchg
or
outsb
fldenv
dec
push
mov
iret
out
movsl
ret
jns
out
adc
dec
add
shll
mov
pusha
adc
xchg
into
cmp
mov
outsb
ss
adc
sub
ret
movsb
and
outsl
aam
divl
sub
cmp
je
shlb
scas
mov
scas
imul
jecxz
inc
mov
divl
inc
pop
push
mov
bound
lcall
stos
cmpsb
dec
add
dec
js
mov
mov
loop
add
xor
cld
js
cltd
push
adc
dec
xchg
aaa
pop
pop
cmp
jno
movsb
mov
mov
int
je
and
std
adc
in
in
mov
les
adc
clc
test
aas
inc
in
in
adc
les
and
and
dec
imul
aad
dec
adcb
or
popa
faddl
call
mov
into
mov
loope
sahf
fstl
or
mov
jl
call
outsb
or
in
test
sub
rol
shrb
cld
add
add
sub
insl
fdiv
gs
pop
push
lcall
imul
icebp
fadds
sub
dec
movsl
xlat
mov
and
mov
stc
sti
pop
mov
fcoms
mov
clc
int
out
sbb
jl
or
ljmp
cli
mov
sub
and
push
movsl
nop
adc
outsb
fstpt
ret
mov
lret
aad
mov
out
inc
pusha
and
mov
mov
dec
cmp
test
xor
push
iret
movsb
cmp
pop
rorb
sub
rorl
lods
lret
xchg
mov
or
mov
mov
sar
inc
cmp
in
jns
adc
mov
sahf
shl
xor
pop
sub
add
sti
ds
sbb
and
daa
sbb
push
dec
adc
lods
mov
and
jns
es
fcmovnbe
add
lds
mov
or
cmp
fs
mov
and
mov
arpl
sarb
mov
pop
or
inc
mov
inc
jne
mov
lods
dec
add
xlat
mov
and
jnp
mov
or
int3
cltd
adc
leave
jne
loope
mov
test
test
xor
xchg
leave
adc
mov
inc
inc
and
dec
add
es
sbb
sbb
pop
and
cmp
push
mov
out
dec
or
leave
repz
js
cmp
daa
ljmp
loop
lods
inc
lcall
jecxz
fmull
pop
pop
add
add
imull
aas
push
sbb
mov
mov
push
add
cs
xor
lods
pop
lods
sub
jmp
iret
and
test
jg
mov
add
cmp
push
pop
es
icebp
popa
push
sbb
sub
mov
mov
add
fwait
add
sub
or
mov
adc
push
mov
push
cs
inc
adc
push
xchg
jbe
shlb
and
in
les
jbe
inc
subl
pop
mov
das
sub
xchg
pop
pop
sarb
daa
mov
pop
xlat
fdivrs
xchg
xor
cltd
mov
or
out
xor
leave
xlat
pop
push
pop
leave
roll
xor
movzbl
inc
sub
negl
jecxz
addr16
jbe
mov
into
mov
push
sbb
push
int
cmpsb
mov
pop
cmc
pop
repz
into
clc
fs
imul
cwtl
out
xchg
insl
mov
push
in
dec
or
loope
out
adc
add
stc
rorl
jmp
sbb
int
mov
sbb
add
adc
lahf
and
es
es
lret
fnstcw
mov
in
arpl
pop
mov
pop
repz
mov
adc
pusha
aad
test
cwtl
add
sub
xchg
dec
mov
addr16
sahf
inc
mov
cmpsb
repnz
mov
sub
or
mov
xor
push
ja
rcrl
data16
push
out
inc
fwait
imul
and
and
adc
data16
imul
rorl
xor
nop
sub
mov
ljmp
pop
out
je
jecxz
jne
jp
dec
mov
popf
test
dec
xor
xchg
aad
mov
das
mov
bound
shrl
fisttpll
pop
cmp
aaa
and
shll
sbb
xor
mov
out
movsb
mov
in
ja
mov
dec
or
cld
add
ja
pushf
sbb
repz
dec
or
in
aam
fwait
sub
jmp
hlt
or
stos
jmp
aam
mov
imull
daa
aam
call
adc
mov
mov
lcall
in
shl
push
push
fisttpl
imul
dec
cmp
mov
xchg
in
pop
add
data16
add
jmp
loope
in
mov
call
insl
ja
mov
or
push
mov
pop
mov
and
push
pop
jg
sahf
and
jl
mov
aas
es
je
scas
xchg
jmp
dec
hlt
inc
testl
pusha
pop
sbb
xchg
sahf
std
xchg
cmc
loopne
jbe
fdivr
stc
inc
jne
sbb
jle
test
push
sub
mov
and
push
cmpsb
lcall
push
dec
cmpsb
test
imul
lea
inc
jne
add
fstl
aad
loopne
dec
inc
mov
mulb
mov
and
pop
or
aam
lret
test
stc
outsl
sbb
xchg
push
mov
lods
jp
adc
mov
push
test
push
stc
mov
mov
mov
xor
mov
push
inc
mov
xor
scas
sub
das
add
push
lods
pop
and
popf
jecxz
out
cmp
cmp
or
outsb
orl
daa
and
rcrl
fistpl
setbe
shll
clc
lahf
inc
sahf
frstor
or
pop
pop
fsubl
arpl
mov
mov
addl
and
mov
pop
bswap
sub
loop
jno
ret
adc
sbb
jge
sub
imul
test
jae
popa
mul
inc
jno
pusha
jns
mov
stos
les
leave
stos
arpl
cmc
int3
push
scas
add
push
outsl
lret
adc
lock
pop
movsb
idivb
fdivl
mov
sti
sahf
mov
fimull
mov
pop
or
mov
arpl
xor
jge
adc
mov
dec
sbb
icebp
adc
jne
cmpsb
jb
repz
mov
call
test
inc
xor
add
mov
nop
aad
loopne
cwtl
cmp
and
add
push
add
stos
mov
xor
push
mov
mov
cld
and
mov
loope
ja
jl
outsl
add
movsl
jge
pop
add
ja
fsubrl
dec
adc
pop
aam
rcll
xchg
push
sbb
pop
and
mov
in
push
pop
cwtl
shll
sub
xor
xchg
jae
roll
jmp
aam
cmc
mov
mov
and
test
aas
int
jmp
cmp
or
in
xchg
mov
mov
call
shl
cmp
jne
imul
fisubl
pop
inc
enter
jle
inc
test
cmp
repnz
xor
mov
icebp
es
inc
or
dec
cmp
xor
mov
lods
loop
inc
lea
in
ds
inc
out
rcrb
iret
pop
aad
in
outsb
cltd
jl
lods
adc
daa
daa
gs
xor
shll
add
inc
jo
mov
insl
cmp
jno
in
cmp
xchg
inc
mov
es
out
mov
fs
stc
fidivrl
mov
outsl
ret
out
popa
ds
adc
pop
or
and
das
inc
loopne
inc
test
push
mov
lret
call
jae
xor
push
arpl
fsubrl
mov
xlat
sub
sahf
testl
aam
xchg
jg
test
and
cs
repz
or
mov
pandn
cmpsb
stos
movsb
mov
cli
cmp
addr16
or
or
dec
and
sbb
xchg
mull
rcrb
jecxz
cs
dec
jne
sahf
shll
jg
call
clc
es
pop
inc
iret
add
and
in
out
test
cmp
loop
sbb
ds
je
fdivrl
nop
jno
sbb
andb
lock
addb
xorb
push
outsl
mov
stos
cmpsl
mov
mov
cwtl
mov
imul
sub
arpl
xchg
sti
inc
notl
sbb
jg
jae
lock
out
inc
movsb
dec
mov
loop
lret
sub
dec
arpl
gs
inc
fidivl
mov
xor
aas
cwtl
aam
out
jo
mov
jae
add
and
pop
xlat
ljmp
and
jne
aam
jmp
sbbb
sahf
js
je
inc
cs
lahf
mov
jbe
inc
sbb
pop
aad
and
xchg
das
int3
mov
mov
mov
xchg
xor
stos
int
shl
xchg
lahf
testl
shrb
push
push
adc
sub
aas
dec
lock
dec
pop
nop
fildl
jp
aad
adc
jb
divb
sub
lcall
mov
push
fstpl
lea
or
xchg
pop
pop
sbb
xor
inc
mov
aas
cmpsb
in
out
mov
inc
adc
dec
pop
out
fisubrl
xchg
test
jnp
xchg
ja
mov
cmpsl
sub
fcompl
add
mov
arpl
mov
fcomps
mov
roll
loope
into
das
insl
jmp
mov
or
cmpsl
movsl
xchg
rclb
sbb
mov
xchg
insl
loop
stos
jnp
inc
sbb
adc
and
cltd
das
cmpsl
notb
outsl
push
aad
push
and
ja
push
into
mov
jb
push
push
sbb
and
jb
and
cs
je
sbb
jmp
sbb
sub
xchg
neg
inc
out
les
sarl
xlat
adc
call
arpl
mov
mov
dec
pop
mov
das
pop
or
arpl
add
daa
jle
dec
cmc
jb
cld
xlat
mov
mov
xor
mov
and
sbb
outsl
lahf
mov
out
jle
mov
pop
inc
hlt
adc
aas
sbb
invd
inc
imul
popl
add
rorb
sahf
addr16
xchg
mov
or
or
adc
inc
fwait
push
out
or
add
mov
mov
nop
jmp
shrb
push
mov
sub
es
addr16
cmp
sbb
push
push
sub
test
inc
movsb
sbb
push
mov
and
icebp
sarl
or
gs
nop
dec
insb
cs
xchg
inc
sub
lcall
mov
mov
dec
pop
pop
cmp
data16
xor
xorb
inc
pop
jecxz
fwait
jbe
push
mov
inc
sbb
pop
testl
daa
daa
mov
js
jge
xlat
lret
call
hlt
clc
les
ljmp
add
sub
rorb
cmpsb
sbb
lods
mov
fwait
push
test
ret
mov
jmp
ss
repnz
mov
ret
or
push
cwtl
pop
and
inc
enter
out
push
xlat
xchg
cld
ret
add
gs
xor
out
addr16
push
lods
jo
mov
or
leave
ds
push
jns
scas
xchg
jns
mov
gs
inc
ljmp
jmp
or
mov
jae
add
shll
subb
ja
aaa
adc
dec
mov
add
fwait
mov
xchg
test
into
pop
sbb
loopne
mov
bound
mov
nop
in
test
and
aas
mov
loopne
jno
icebp
in
ret
ret
mov
cmp
test
cmp
cli
cmp
mov
cmp
or
xchg
inc
mov
sub
inc
popl
jne
into
push
mov
jecxz
adc
mov
cmpsl
cwtl
xchg
dec
nop
cli
push
cmpsb
aam
les
xchg
stos
add
push
popf
subb
ret
fsub
and
popa
call
cli
jle
push
imulb
out
adc
ficomps
mov
cmp
fwait
cmc
int
std
push
or
test
aad
lret
mov
push
push
lret
jmp
jo
pop
xchg
data16
cmp
or
push
loopne
jle
adc
xchg
mov
jmp
add
adc
cmp
jns
notb
dec
push
scas
add
inc
rep
sub
pop
lret
jnp
add
sub
pop
or
in
inc
das
xchg
enter
mov
jg
pop
sarb
and
sbb
es
dec
xor
in
std
sti
js
jno
outsl
rclb
mov
into
xchg
fistl
adc
pusha
fnstsw
aad
push
lods
or
pop
or
in
mov
scas
hlt
adc
sub
movsb
iret
inc
shrl
sbbl
xorb
cmpsb
sub
push
or
out
dec
int
negl
mov
cltd
aaa
scas
outsl
sub
in
aam
loop
loop
cmp
cld
sub
sbb
or
pusha
mov
adc
outsl
pop
adc
ss
xor
outsb
lahf
fwait
or
mov
jb
xor
fwait
xor
xor
js
and
pop
movsb
fmull
jbe
lahf
xor
jge
mov
adc
out
or
add
inc
mov
sbbb
jnp
push
mov
or
cmp
mov
negb
xchg
add
pop
fistpl
or
mov
icebp
or
pop
or
dec
in
jl
insl
sbb
inc
xor
and
and
cmpsb
js
lock
aas
add
test
enter
in
add
sbb
pop
mov
xor
add
icebp
pop
cwtl
mov
gs
push
lods
fs
in
dec
dec
insl
scas
mov
jno
push
es
mov
xchg
xchg
push
aad
daa
mov
jp
or
rcrl
or
adc
push
cmc
les
jbe
std
push
imul
cmp
jae
nop
pop
jge
cwtl
cmc
push
xor
or
jae
ret
lock
xchg
pop
inc
popf
shrb
sub
mov
inc
push
push
fsubl
fwait
lret
and
fdivrl
sbb
lea
sub
cmp
or
push
sub
inc
call
mov
icebp
fsubrs
fsubl
mov
and
fs
add
movsb
xchg
jae
popa
mov
adc
lea
stc
out
call
dec
out
lods
dec
cmp
fcmovnbe
fildl
push
or
scas
jge
jge,pt
and
cmp
and
mov
cmp
push
push
gs
lret
dec
nop
xlat
add
pop
enter
roll
addr16
or
adc
inc
imul
dec
addb
cmp
inc
lds
add
arpl
iret
stos
mov
das
or
jl
jp
push
push
loope
aad
push
push
dec
fwait
xchg
popa
jno
jl
push
mov
xor
push
negl
fistpl
sbb
data16
dec
jl
mov
push
gs
and
addr16
ljmp
scas
cs
xchg
test
aaa
mov
fsubs
nop
mov
int
sub
dec
xchg
sbb
rcrl
insl
iret
andl
or
pop
inc
jae
loop
fisttpl
sbb
and
repnz
pop
mov
pop
int3
dec
mov
sub
insb
fildl
ss
repz
jo
mov
push
mov
mov
cmpsb
sub
lcall
sub
imul
pop
xor
sub
mov
fs
inc
jmp
out
out
rcrb
data16
inc
mov
imul
lea
int
lcall
xchg
lea
pop
and
out
pop
pop
scas
sub
xor
adc
push
xchg
lahf
ficoml
push
dec
add
in
pop
dec
sub
dec
cld
inc
xor
xchg
xchg
push
js
repnz
push
dec
fimull
shr
inc
out
xor
sbb
les
je
add
shr
and
mov
lahf
cmp
jns
add
les
aad
mov
outsl
rorl
push
and
and
fcomip
daa
rcll
push
ljmp
push
es
or
hlt
or
leave
lea
je
inc
cs
xchg
or
in
push
xor
and
dec
out
add
push
mov
mov
int3
mov
push
lret
dec
jmp
loopne
insb
rcl
movl
roll
insl
inc
cwtl
push
nop
push
popf
mov
imul
repnz
sysret
xor
xchg
mov
mov
add
cltd
mov
js
cmp
xor
add
xchg
fistpll
cmp
pop
cltd
into
cmpsb
sbb
adc
push
jmp
cmc
das
pop
fidivl
sbb
das
sbb
imul
and
mov
pop
jnp
and
jg
pusha
imul
inc
hlt
mov
xchg
xchg
repz
mov
cmpsb
stos
pushf
ds
mov
xor
int3
pop
mov
inc
xchg
int3
loopne
mov
pop
ja
xchg
mov
mov
mov
call
inc
xchg
mov
mov
bound
push
xchg
mov
orl
jne
mov
jge
aaa
lret
fsts
fstl
imul
dec
and
lods
or
stc
add
jb
cmp
lret
cmp
add
in
or
pand
xlat
mov
mov
cmc
daa
sbb
jnp
out
cmp
add
sarb
scas
sbb
pop
pusha
push
and
das
sub
pop
enter
daa
jle
and
repnz
cltd
in
repz
mulb
lea
pop
cmc
mov
and
mov
fdivrp
jns
or
push
loopne
lock
loope
sbb
adc
push
sbb
in
dec
jg
mov
push
mov
inc
jae
les
jle
pop
adc
push
sbb
push
insb
adc
and
decb
les
dec
mov
incl
sbb
dec
enter
xor
cld
mov
rorb
movsl
in
insb
into
je
out
xchg
cs
out
outsb
add
popa
push
or
pop
lods
push
jle
out
out
cmp
jecxz
pop
jmp
cmpb
mov
call
add
lahf
fmuls
xor
or
rorb
or
xchg
ja
or
pop
inc
add
xchg
xchg
hlt
std
inc
inc
xchg
push
jl
xchg
jne
lret
mov
addl
pop
sbb
pop
mov
jbe
sahf
cmpsl
pop
test
cs
cmp
inc
lahf
cvtps2pd
cs
iret
sub
out
mov
mov
mov
cmp
das
in
sbb
sahf
inc
jecxz
loopne
xlat
dec
hlt
scas
lods
pop
enter
sub
add
mov
loopnew
mov
stos
stos
cmp
or
fdiv
pop
cld
mov
shlb
push
cltd
sub
xor
sub
mov
popa
js
les
mov
xchg
outsl
xor
vdivps
dec
outsb
stc
push
mov
fdivs
push
out
adc
sub
pushf
fisubl
and
cld
jne
dec
mov
pop
inc
add
imul
mov
sbb
or
shl
adcb
imul
mov
xchg
ret
xchg
mov
stos
ret
mov
fdivr
inc
cmp
mov
aad
scas
fisttpl
dec
imul
and
aaa
push
sub
outsb
imul
cmp
data16
cmovb
fmuls
cmp
and
fmull
test
inc
ret
jb
and
or
and
in
mov
aaa
dec
lret
test
leave
push
ss
mov
popa
mov
push
es
push
fildll
jbe
add
xchg
into
popa
push
adc
cmp
out
xor
xchg
fimuls
mov
dec
lret
mov
fwait
decb
dec
cmp
fstps
repnz
out
test
sbb
roll
pop
shl
jns
cmp
int
or
arpl
lret
push
bound
imul
pop
adc
pop
ss
xchg
data16
xor
add
inc
dec
cmc
jecxz
xor
jle
inc
popa
sarl
lret
rorl
out
test
leave
out
xorb
mov
cmp
ret
mov
fildl
jo
sti
in
adc
negb
cmpsl
pop
ret
adc
loopne
xchg
jl
ljmp
push
cmpsl
adc
dec
dec
lods
xlat
inc
jp
lahf
iret
jnp
and
dec
in
dec
repz
imul
mov
pop
jns
add
js
mov
add
enter
mov
xchg
mov
lret
movaps
or
xor
adc
adc
or
mov
ja
cld
mov
jl
into
or
mov
mov
cmpsb
aam
sub
pop
jle
in
movsb
test
push
cltd
mov
test
sbbl
mov
aas
outsl
out
divl
fsubp
daa
dec
dec
xor
out
mov
pop
sti
pop
dec
loopne
data16
loopne
push
aam
sti
add
fs
and
mov
sub
mov
lret
mov
sub
bound
sbb
inc
cmp
cmp
pop
fldl
sub
mov
into
lods
ljmp
pop
xchg
jb
in
inc
pop
stc
cmp
mov
cmp
adc
popf
jae
je
stc
aas
insl
and
xchg
sbb
loope
cld
ss
inc
jmp
ja
pop
xchg
nop
aas
lea
or
xchg
sub
xor
jecxz
push
movsb
test
lret
jae
sub
aaa
fstpl
and
decl
jmp
loopne
pop
rorb
or
je
cltd
icebp
repz
push
sahf
ljmp
sar
jmp
push
icebp
fs
rcl
push
das
mov
sub
leave
fs
js
scas
jle
loope
adc
jl
dec
cmp
sub
pop
mov
fidivrl
xor
test
stc
shll
ljmp
addr16
stos
mov
loope
mov
sub
mov
fwait
cmpsl
adc
movsl
mov
mov
sub
insl
or
mov
inc
aam
shll
stc
adc
push
xchg
sub
test
popa
push
mov
fwait
sbb
push
dec
es
mov
mov
xor
or
mov
inc
xor
das
movsl
shll
testb
cmp
lcall
jmp
repz
mov
mov
mov
lock
popa
gs
test
push
mov
jg
fsubl
jb
sub
imulb
jns
mov
jg
decb
lret
je
sbb
ja
add
cld
push
and
fcoms
jno
mov
rorl
dec
rep
push
push
js
mov
lds
push
jp
xchg
mov
xchg
loope
mov
push
push
cmpl
jge
test
mov
stos
adc
inc
mov
mov
dec
repz
inc
imul
or
test
je
cmp
mov
mull
pushf
lcall
push
repnz
imul
cmp
scas
dec
stc
mov
sub
cmp
xchg
mov
sub
cli
lcall
dec
add
cli
cmpl
out
andl
sbb
stos
ror
jl
pusha
jbe
cld
lret
sub
xchg
jo
mov
mov
test
sub
daa
mov
inc
cmpsb
aad
sbb
out
loopne
adc
aad
mov
outsl
mov
stos
inc
xor
in
movsl
adc
adcl
xor
cli
mov
pusha
jp
sub
or
mov
lahf
mov
pop
push
xorl
bound
and
xor
pop
jge
ds
pushf
mov
ret
lcall
mov
mov
adc
push
dec
nop
and
add
cmp
pusha
hlt
leave
cli
imul
inc
or
repnz
dec
orl
sti
or
insl
push
dec
daa
fildll
fst
outsb
test
loop
adc
mov
test
xchg
push
inc
shrd
or
test
movsb
mov
cmpsl
sbb
icebp
loopne,pt
fimuls
sbb
mov
dec
test
jmp
xor
and
out
rclb
mov
inc
sti
push
test
xchg
lods
sbb
mov
int
pop
xor
sbb
imul
rcr
mov
pop
aas
idiv
or
pop
in
pop
adc
adc
daa
fs
lcall
xor
sub
clc
ja
jb
shll
mov
out
dec
mov
cmpsb
sbb
jae
sarb
push
pusha
pop
dec
cmp
pop
push
popa
or
int3
int
pop
cltd
pop
add
sahf
gs
dec
lcall
add
es
enter
pop
sahf
outsb
adc
test
cwtl
popf
lret
and
or
pushf
xlat
pop
out
adc
pop
push
adc
sub
xlat
sbbb
arpl
pop
mov
inc
lods
jg
inc
add
in
aaa
dec
ds
nop
setb
jl
mov
jmp
mov
cmpsb
push
repz
stc
add
mov
js
mov
mov
add
sub
inc
mov
test
es
fisubs
cmpsb
ljmp
dec
cmp
mov
ja
cld
cmc
add
dec
nop
push
mov
xchg
lcall
cmc
adc
cs
inc
jne
or
or
lahf
out
pop
das
data16
jns
xor
push
notb
sbb
test
xor
aaa
pushf
cltd
cmp
inc
xchg
in
pop
mov
and
adc
xchg
adcb
adc
add
sub
xor
push
mov
adc
xor
out
outsl
aaa
fildl
into
imul
lcall
in
cltd
ret
dec
push
mov
arpl
sbb
dec
sbb
or
or
cmp
std
gs
fisttpl
mov
pop
xchg
imul
push
xchg
movb
cmovle
inc
inc
jg
in
mov
push
cs
xchg
test
cmp
xchg
ret
fptan
sub
xchg
xor
mov
sub
lcall
sub
adc
and
inc
and
push
jmp
das
xor
mov
mov
pmaxsw
cmpsb
cmpl
pushf
and
xor
mov
or
add
ljmp
xchg
sub
bound
jns
fstpt
shrb
stos
sbb
xchg
push
adc
jp
mov
mov
mov
add
in
cli
sbb
xor
repnz
iret
dec
stos
inc
popf
jnp
add
out
fsub
enter
or
mov
or
push
pop
jo
adc
lcall
fadd
add
js,pt
jg
mov
xchg
mov
pop
or
mov
lods
adc
lcall
push
mov
jb
or
xchg
ret
sub
shlb
or
movsl
mov
or
ja
ret
pop
in
leave
xor
mov
push
xor
pop
xchg
std
and
mov
in
mov
and
sbb
mov
push
pop
jb
popa
faddl
add
mov
std
sbb
push
adc
sbb
inc
outsl
push
cmp
dec
xor
pop
jbe
test
and
dec
ja
jmp
dec
sahf
clc
cli
mov
bound
cwtl
xchg
adc
icebp
movsb
adc
cwtl
gs
sub
test
fmull
dec
aas
inc
clc
add
xchg
xchg
cmp
mov
popf
push
or
outsb
arpl
imul
rcr
push
push
in
jmp
mov
out
in
jns
out
and
xchg
test
out
lods
inc
adc
xor
lcall
mov
loop
cld
cmp
mov
fistps
mov
push
repnz
cmp
std
mov
sub
and
adcb
rcrl
int3
cmp
sti
push
add
popl
es
popa
pop
sbbl
push
gs
adc
scas
sub
xchg
inc
adc
xlat
sbb
sub
test
pop
sub
cmpsb
fnstcw
out
push
and
mov
inc
std
nop
xchg
out
lcall
mov
loopne
inc
aaa
jmp
rcrb
dec
rcrl
push
pop
ja
lahf
popf
jmp
fs
rorl
sbb
inc
out
pop
dec
fwait
in
jns
in
jo
jo
xor
push
jl
xor
jae
fisubs
out
fcmovnu
clc
push
jae
ljmp
in
or
mov
jo
jle
sti
and
lahf
mov
jnp
mov
ret
mov
int3
int
adc
fwait
add
push
or
mov
push
cmp
test
idivl
sbb
dec
flds
xor
les
jg
shll
xor
fistpll
outsb
sub
inc
mov
sub
cmp
imul
xor
mov
xorb
cmc
imul
xlat
jo
mov
pop
sbb
and
pop
add
jle
inc
cmp
test
jno
pop
test
add
mov
popf
xchg
fisttpll
jl
sbb
xchg
test
or
pop
mov
ror
ret
lea
aas
loop
mov
aaa
sbb
lahf
jb
inc
lods
rcl
push
jae
stos
xlat
cmp
shrb
iret
sub
daa
sbb
mov
jne
sub
jns
sub
cmp
or
sub
outsb
jnp
cmp
movsl
mov
out
mov
dec
pop
and
xor
sub
or
mov
sbb
test
or
jle
sbbl
add
out
jbe
fisubrl
pop
jb
xor
inc
sbbb
xor
call
fwait
and
sbb
jne
orb
ficoms
lea
pop
insb
aam
push
and
push
mov
jmp
or
cmc
mov
cvtps2pi
in
push
mov
std
repnz
imulb
xor
adc
clc
lret
mov
push
mov
push
les
and
jnp
and
mov
add
fsts
mov
daa
inc
mov
mov
xchg
orl
cwtl
or
test
dec
xchg
mov
inc
idiv
mov
ss
iret
xlat
bound
test
imull
sbb
enter
jnp
add
test
shll
lea
fcomip
adc
push
jl
adc
stc
movsb
sbb
pop
xor
xchg
dec
jmp
popa
in
adc
loopne
in
inc
mov
pop
mov
and
imul
popa
push
test
int3
mov
push
aaa
jae
add
pop
adc
in
mov
xchg
loopne
fucom
fbstp
dec
fdiv
testb
cmp
jbe
mov
shll
cmc
mov
stos
or
cld
add
pop
lods
into
dec
mov
adc
xchg
push
mov
fisttpl
mov
jg
arpl
sti
add
push
loope
sbb
dec
or
iret
cmpsl
xchg
flds
cmc
data16
stos
xorl
sub
push
jle
insb
dec
cld
jg
pop
jl
sub
jne
aaa
shll
arpl
lcall
std
add
popa
fdivrl
cmpsb
mull
sahf
pop
repz
adc
dec
jo
fnstcw
xor
mov
push
addb
mov
cmpsb
clc
or
mov
mov
jno
loopne
push
enterw
push
jb
lea
mov
cmp
fidivl
cltd
ret
adc
cwtl
mov
cmpsl
sbb
stos
scas
cmp
rcl
jo
sub
lret
or
sarb
jb
iret
rorl
sub
mov
jo
xchg
sbb
sbb
scas
mov
sub
fdivl
mov
push
repnz
aad
lds
jb
stos
mov
pop
andl
dec
push
insb
scas
lea
cwtl
lcall
pop
xor
or
mov
cmp
imul
pop
dec
adcl
push
xchg
imul
mov
pop
push
leave
test
jp
pop
rcll
shll
nop
xchg
mov
aad
int
popa
cmp
jecxz
push
addl
lods
dec
and
or
mov
mov
cmp
cmp
sub
push
push
inc
jae
add
pop
icebp
fnsave
jl
jmp
fsubrs
xchg
leave
jnp
fsubrs
mov
loope
in
mov
xor
imul
cltd
mov
inc
fwait
movsb
push
mov
xor
sbb
mov
pop
xchg
cmp
xor
test
fildll
lret
outsl
add
std
in
dec
leave
add
fstps
push
mov
call
and
mov
or
mov
mov
dec
adcb
dec
add
push
sti
ret
daa
fnstsw
clc
push
xchg
bswap
sahf
inc
xor
cli
sub
dec
dec
add
cmpsb
pop
sub
out
addr16
push
rol
mov
mov
push
xor
aaa
push
mov
cmp
movsb
loop
push
aad
inc
imul
repz
out
in
outsb
pop
sbb
int3
cmp
movsb
arpl
inc
ret
cli
cs
xchg
xchg
loop
jbe
pusha
iret
mov
stc
das
aas
mov
cld
rclb
lods
aas
sbb
test
in
data16
xlat
xor
in
adc
add
ret
sbb
inc
fdivrs
daa
jne
lods
dec
lods
cwtl
test
xchg
sbb
lds
scas
cmc
roll
dec
sub
and
lds
jecxz
lea
sarl
shlb
push
or
push
push
mov
push
and
inc
cmp
sbb
xchg
xchg
lret
jmp
out
jp
popa
inc
pop
jbe
nop
xchg
call
jle
sbb
cmpsl
add
push
call
std
inc
rcrb
inc
in
popa
jl
cwtl
pop
cltd
mov
jne
or
push
ds
mov
fucomi
mov
popa
dec
aad
fdivrl
push
jmp
cmp
xor
jge
inc
push
xchg
je
and
sbbb
out
or
repnz
pop
lret
add
adc
xor
add
xchg
xchg
nop
int3
jb
and
mov
mov
out
pop
xchg
push
rcrl
shll
jge
mov
xchg
rcrl
add
outsl
cmp
inc
add
les
adc
inc
xchg
jne
movsb
int
lret
sbb
repz
aam
cmp
div
out
fdivs
insl
mov
js
enter
xchg
sbb
xor
stc
test
shlb
mov
jmp
cmpsl
add
aas
out
les
ja
push
pop
popa
mull
xchg
cld
fidivl
shll
and
pop
test
jl
add
movsl
daa
or
daa
add
mov
mov
or
add
cmpsb
xor
push
das
into
notl
pop
ret
push
ret
or
insb
sahf
ja
icebp
rcrb
jo
jnp
mov
xchg
cmp
lock
aam
hlt
cmp
pop
adcl
imul
xchg
add
xchg
push
dec
pop
push
imul
add
mov
mov
sbb
lret
movsl
int3
cmp
shr
pop
mov
bound
xor
ret
pushf
pushf
jo
nop
aas
adc
dec
or
loope
bound
mov
push
cmp
pop
arpl
xor
loop
adc
insb
mov
mov
jmp
inc
sub
fsts
push
push
ret
and
out
mov
xchg
sbb
sub
pop
adc
cmpb
xor
imul
add
icebp
fcomps
testl
es
sub
test
push
mov
xchg
mov
pop
fdivl
stos
and
lods
nop
mov
push
jmp
mov
pop
lea
sbb
add
fxch
repnz
in
mov
mov
dec
mov
test
orb
sub
mov
in
pop
xor
daa
fwait
aas
xor
sub
sbb
rorl
sbb
push
push
fcmovnbe
and
dec
and
movb
arpl
out
xchg
je
mov
repnz
out
add
jecxz
lds
xchg
mov
adc
popf
mov
push
ror
xchg
cmp
arpl
xor
ret
inc
out
xor
daa
or
das
mov
xchg
loop
xor
xor
daa
icebp
xor
repnz
outsb
iret
mov
out
ret
cmp
sub
dec
cmpl
push
sbb
inc
in
sub
add
repz
cmp
and
xchg
mov
pop
adc
into
xor
jle
sti
sub
nop
cmpsb
xor
into
push
mov
and
or
add
sub
xchg
or
scas
xor
lods
mov
lcall
or
mov
mov
mov
or
cmp
scas
inc
adcb
jecxz
mov
insb
cli
inc
mov
pop
les
sbb
xchg
int3
mov
jne
or
jns
mov
xchg
ljmp
cltd
cs
je
lret
xchg
into
test
xor
imul
call
cmc
inc
fstpl
test
lret
mov
call
inc
and
pop
inc
add
push
and
pop
inc
js
fstl
test
popa
aas
cmpb
xchg
mov
int
mov
add
fildll
jne
push
jge
test
and
popf
cmp
rol
push
inc
mov
sbb
repz
inc
cmp
adc
push
and
test
cmp
loopne
dec
insb
ficoms
jae
jae
push
cs
pop
int3
adc
dec
jmp
lods
jg
rcr
bound
dec
adc
push
movsl
inc
aad
cmp
dec
sub
mov
jl
out
push
pusha
and
xor
or
outsb
std
cs
push
inc
jecxz
call
in
dec
aad
dec
cmp
pop
ret
stc
jnp
mov
pop
pop
push
sub
inc
test
call
outsl
pusha
cmc
cmc
xor
iret
sbb
int
hlt
std
aas
jg
out
dec
xchg
inc
adc
pop
test
testb
mov
sbb
jne
lret
add
mov
shlb
pusha
mov
outsb
repz
movsb
imul
push
cmp
mov
or
sbb
pop
insl
and
lcall
fldenv
cli
dec
jge
pusha
test
roll
jo
jno
enter
mov
dec
jle
pop
sbb
cmp
lret
pop
jle
cmc
or
push
add
mov
or
cmp
xor
pop
sbb
and
in
gs
test
aaa
xor
dec
dec
gs
inc
js
in
add
mov
clc
push
ja
aaa
push
pop
add
pop
push
xchg
out
inc
aas
movsb
hlt
lea
aas
incl
popa
jb
or
dec
out
mov
mov
jb
push
das
and
mov
xchg
sub
inc
loop
outsb
jg
mov
test
pop
push
sbbb
ret
jg
lahf
iret
sub
jb
or
cmpsl
mov
push
ljmp
in
f2xm1
pop
push
in
iret
movsl
xor
push
pop
sub
stos
out
add
in
jle
mov
push
imul
cmp
dec
xor
jmp
adcl
aad
cmp
sarl
and
sti
imul
shrl
pop
sbb
popa
cmpsl
cwtl
add
cmp
in
mov
pushf
mov
cltd
pop
fstpt
or
jp
jg
push
aaa
enter
pop
mov
dec
dec
mov
jge
xchg
xor
or
rcrb
sub
jmp
or
xor
dec
enter
mov
shll
roll
adc
xorl
push
adc
push
jp
adc
or
loopne
es
xchg
jne
or
out
mov
jbe
add
mov
aad
aas
inc
loope
popf
dec
mov
popf
fmull
mov
mov
in
test
or
xchg
dec
arpl
in
xchg
xchg
imul
cld
dec
cmp
addr16
mov
stc
pushf
repnz
dec
cltd
mov
dec
outsl
aaa
add
mov
push
jl
ja
pop
cmp
aam
xchg
mov
xlat
xchg
mov
add
jns
inc
out
mov
ret
adc
mov
andl
pushf
dec
lods
inc
sbb
fcomps
inc
imul
mov
sahf
pop
dec
cmp
mov
jmp
jns
js
dec
sahf
pop
les
fdivrl
scas
and
xor
adc
push
push
outsb
aas
add
movlps
jl
loop
lds
cmp
cmpsb
imulb
iret
inc
ljmp
jns
push
test
mov
hlt
dec
imulb
fcomps
jnp
xchg
push
inc
add
je
dec
testb
pushf
into
aaa
jp
push
mov
movsl
lods
sub
loope
fsubl
testb
adc
jp
cltd
pop
or
iret
in
push
adc
mov
push
or
lock
mov
fmull
push
pop
add
shlb
mov
add
pop
jle
push
sbb
pcmpgtd
fnstcw
sub
adc
push
dec
mov
add
data16
inc
push
fsubrl
dec
xor
lahf
hlt
push
fildl
jo
sub
aas
insl
nop
inc
aam
hlt
xchg
aas
out
add
add
mov
sub
or
ljmp
sbb
adc
push
notl
mov
pop
cmp
sub
imul
shrl
cmp
ljmp
jg
cmp
mov
test
pop
fcomps
loope
mov
push
cmpsl
insb
shll
xchg
jo,pt
sbb
scas
mov
mov
scas
orl
shll
mov
std
sbb
repnz
cmc
mov
popf
push
fs
push
movsl
xor
and
into
fcmovbe
out
and
lahf
ljmp
negl
out
dec
adc
cmp
xlat
pop
and
xorb
or
out
lea
mov
clc
jp
push
orl
outsb
jns
leave
stos
inc
cmp
jmp
mov
mov
inc
push
push
add
imul
loop
in
xchg
cmc
push
loop
stos
lods
jns
sub
js
adc
mov
adc
pop
faddl
idiv
enter
popf
push
push
iret
gs
mov
shlb
je
push
aas
lret
inc
dec
mov
jge
jae
inc
dec
xchg
rcr
pop
add
mov
lret
xor
lds
mov
stos
js
lods
mov
fsubl
cmp
rcrl
call
add
push
imul
xchg
das
cmp
inc
ds
mov
sbb
sub
cli
mov
push
negb
insl
add
aaa
pop
dec
adc
cmp
fcomps
add
cli
pop
repnz
lds
cmpsb
cli
jmp
icebp
addb
pop
fstpl
mov
xor
mov
daa
in
daa
inc
fdiv
aam
lea
scas
loopne
inc
iret
imul
mov
pusha
in
inc
xor
aad
push
ss
jne
cli
orl
fistl
push
rclb
xrelease
dec
pushf
xor
inc
push
xchg
repz
xor
mov
int3
xchg
pusha
dec
jle
lret
in
mul
fistpl
movsl
das
inc
jmp
clc
outsb
and
cmp
repz
cwtl
xchg
sbb
pop
mov
or
gs
int3
ljmp
es
xor
nop
cmp
mov
ret
in
adc
nop
shll
imul
ret
aaa
pop
inc
nop
int3
lods
popa
jno
xchg
mov
sub
inc
je,pt
xor
sub
jmp
cmp
ret
push
xchg
cld
sub
dec
pop
iret
mul
int3
cwtl
pop
imull
loope
jnp
adc
lret
add
enter
pushf
mov
cwtl
push
rorb
int3
shlb
testl
out
pop
mov
cwtl
mov
jae
fisttpll
jb
push
rorb
jo
sbb
cmp
mov
or
scas
cmp
pop
jno
sub
mov
push
push
mov
pop
pop
outsb
in
add
div
mov
inc
pop
jge
in
addl
sbb
add
or
arpl
hlt
std
add
stc
lcall
call
sbb
fbstp
mov
lods
adc
dec
jle
inc
mov
inc
adc
test
push
and
lock
in
pop
sbb
std
lret
jae
add
das
push
stos
adc
jae
test
xchg
subb
scas
pop
jg
std
sbb
or
rcr
mov
popw
fldl
mov
fsubl
push
ret
cmpsb
lahf
dec
cli
or
dec
daa
mov
fmull
jl
or
aaa
ficoms
mov
mov
fldlg2
push
jns
or
push
inc
fcmovu
mov
dec
in
or
mov
add
insl
inc
pusha
mull
dec
nop
pop
push
sbb
mov
sahf
sahf
dec
lea
int3
movsb
sbb
lock
lds
push
xlat
inc
pop
movsb
adc
mov
int3
xor
jl
xchg
imul
movsl
mov
xchg
inc
js
popf
je
notl
push
sub
mov
mov
inc
rcll
insb
call
mov
pusha
jo
inc
in
out
mov
aas
cmp
add
pop
xor
fildl
int
cmp
in
inc
adc
pop
addb
std
shl
outsl
mulb
adc
xchg
ss
out
dec
mov
enter
pushf
xchg
xchg
loop
jl
or
sti
aad
sar
push
inc
push
imul
loop
cmp
mov
test
cmp
stos
inc
push
pop
sbb
jbe
outsl
dec
xor
mov
sub
pop
out
pop
xor
mov
adc
pushf
dec
xchg
fwait
cwtl
movb
xchg
cmp
pop
call
xchg
or
leave
dec
jnp
adc
push
or
iret
mov
cmc
test
and
and
ja
movsl
sbb
fs
jl
jp
push
or
sub
and
jb
aad
pusha
aam
loopne
jne
xor
pop
sbb
pop
imul
dec
xor
mov
and
pop
jnp
or
add
imul
ja
mov
imul
nop
xchg
push
testl
inc
jae
jmp
out
lret
sbb
cmp
arpl
mov
jmp
fsubp
cmp
cmp
jp
mov
ja
ret
inc
and
cmpsb
xor
mov
fstl
into
fcoms
shll
adc
mov
adc
pop
pop
adc
ret
loope
jle
fnstcw
movsb
daa
mov
push
sub
add
mov
jmp
bound
xchg
xchg
popa
mov
fadds
sub
out
xchg
cmpsl
jl
and
pop
xor
dec
stos
fdivs
lods
add
jno
push
loope
mov
push
sbb
test
lods
pop
stos
sahf
add
out
sub
cld
jmp
sub
or
cltd
inc
daa
ja
xchg
xchg
add
push
add
or
cmp
punpckhwd
les
pop
cmp
leave
pop
lods
test
sub
jg
fwait
inc
cli
xor
and
lea
inc
shll
rclb
inc
pop
inc
or
push
fisttpll
dec
xor
loopne
jnp
ja
das
aas
outsb
dec
hlt
test
sarb
pop
mov
xorl
jbe
loope
or
loope
cmp
cmp
and
nop
inc
xor
xchg
jns
jcxz
push
arpl
pop
stos
mov
enter
xchg
mov
mov
notl
nop
shlb
or
sbb
fcmovnb
and
xchg
push
fstpt
out
mov
dec
loope
jno
pop
loop
lcall
fisttps
jno
lret
and
rol
repnz
mov
mov
or
pop
adc
inc
bound
xchg
and
mov
sub
adc
adc
sbb
stos
mov
stos
xchg
movb
movsl
int
shll
in
int3
sbb
cs
outsl
adc
and
leave
sbb
sbbb
sbb
outsl
or
mov
leave
pushf
decb
aad
add
mov
in
jl
mov
les
popa
xchg
xchg
insb
cmp
fbstp
stos
sub
sti
andl
cltd
fwait
mov
inc
scas
xor
out
mov
shrl
push
inc
xor
fsub
movsl
xchg
filds
cli
push
mov
mov
ret
inc
sub
roll
adc
mov
inc
bnd
or
xchg
dec
lock
mov
xlat
repnz
fdivrs
push
rorb
lea
ljmp
in
cltd
out
inc
mov
jle
lret
cmpsl
pop
idivl
adc
movsl
data16
js
lahf
mov
mov
int3
add
xor
sarl
jle
dec
or
test
rolb
xchg
dec
inc
cli
adc
insb
imul
call
inc
push
scas
pop
adc
outsl
leave
xor
fldt
testb
lret
in
js
and
lret
shrl
sub
stc
mov
mov
inc
xchg
popf
push
sub
sahf
xor
out
jo
adc
push
inc
pushw
loope
push
cmp
lods
jge
or
inc
das
mov
les
add
sbb
pop
mov
jns
pop
fisttps
mov
fisubl
jo
jbe
mov
ret
sti
add
adcl
and
add
stc
sbbb
testb
popf
sub
pop
xor
ret
nop
in
cmpsl
int
aad
ficompl
rcll
jl
icebp
mov
mov
es
xchg
sbb
or
insl
and
dec
adc
inc
add
xor
and
inc
fisubl
fidivs
je
test
ljmp
dec
stos
sub
fdivr
mov
pop
mov
mov
rolb
adc
hlt
xchg
outsl
inc
cmp
outsl
fs
mov
leave
movsb
int3
ret
loope
daa
sbb
push
pop
mov
enter
mov
pop
mov
cmpsb
xchg
sub
pop
sbb
sbb
mov
xchg
or
add
cmp
repz
push
scas
jmp
mov
paddusw
fnstenv
fwait
dec
hlt
xor
fnstenv
add
int
js
lea
xor
or
or
imul
jno
dec
pop
inc
cmpsb
rcrl
fsts
sub
ficoms
pop
pop
outsl
call
lahf
sub
imul
imul
xchg
xor
pop
mov
jbe
push
push
add
and
test
mov
sbb
ja
in
push
mov
xchg
inc
jg
xor
lcall
stos
iret
outsb
fiadds
jecxz
int3
cmc
adc
inc
pop
enter
aad
cmc
sub
sbb
mov
pop
mov
hlt
adc
test
or
mov
adc
and
dec
xchg
mov
imul
sarl
and
sub
jp
pop
jmp
popa
sub
lods
test
ffreep
stos
sbb
test
in
popa
fidivs
dec
dec
dec
sub
cmp
adc
aam
in
cld
sbb
inc
aas
and
pop
cltd
fs
jnp
adc
add
mov
icebp
in
mov
aas
lds
sub
cs
pushf
inc
fstpt
andl
pushf
xchg
pop
mov
pop
xor
pop
icebp
dec
and
ljmp
test
or
mov
lea
xor
stos
push
int
cmpsb
sub
daa
cmova
cmpsl
insb
xor
lret
jmp
lds
inc
push
dec
xor
iret
ret
nop
adc
or
fisubl
stos
jns
es
in
mov
aas
mov
inc
push
adc
add
xchg
push
adc
inc
in
sbbb
dec
dec
subl
cmc
test
je
jle
adc
mov
and
leave
iret
js
add
rorb
and
ljmp
adc
test
int3
fists
mov
movsb
pop
cwtl
push
fidivrs
xchg
xchg
xor
insl
mov
int
push
and
jo
mov
push
into
jne
stos
adc
sub
pusha
fbstp
test
push
imul
sbb
cmp
pop
int
sbb
xor
pop
jae
push
packuswb
xchg
push
pusha
testl
into
and
shrb
add
mov
cmp
or
std
aas
scas
mov
enter
nop
loop
cmp
into
lods
mov
adc
rcrl
das
xchg
std
mov
addr16
lret
xor
dec
ret
loope
in
cmp
pop
out
cmp
xor
adc
aam
stc
imul
add
fldt
jge
je
sahf
inc
mov
aad
xchg
test
mov
pop
cmpsl
inc
pop
mull
dec
sbb
cmc
aas
xchg
enter
dec
jbe
mov
int3
into
imul
xor
or
outsb
mov
lods
sbb
movsl
xor
push
data16
xchg
push
fwait
jecxz
pop
in
ss
fbld
mov
into
stos
mov
cmpl
and
push
and
mov
lock
and
adc
std
clc
mov
pushf
inc
pop
xchg
lcall
cmp
outsl
mov
data16
push
sbb
sbb
frstor
xchg
push
adc
pop
addr16
push
push
xchg
dec
jge
or
push
jbe
sbb
push
push
call
mov
out
out
cmp
xchg
mov
out
lea
shll
insb
in
dec
jecxz,pt
cmc
jb
cmp
negb
movsl
pop
gs
jno
es
xchg
sbb
ret
sub
cmp
pop
lods
xor
sub
pop
and
jle
in
popf
mov
mov
shrb
in
gs
ljmp
cmp
mov
mov
jno
sub
test
add
add
movsb
sbb
arpl
andb
mov
lret
cmp
jg
aaa
in
addr16
sbb
sbb
sub
lds
sahf
test
inc
rclb
and
mov
cmpsl
pop
cld
call
leave
dec
insl
lret
stc
lock
test
mov
mov
lea
adc
or
mov
nop
call
loop
shrb
inc
aaa
out
loope
dec
mov
jne
ror
fbld
out
mov
jae
ds
mov
jmp
int
lock
jecxz
sbbb
roll
mov
cmc
lock
into
loopne
out
adc
nop
out
aad
inc
imull
or
sub
xchg
cs
pop
leave
testl
mov
clc
lds
and
push
mov
inc
adc
popa
sub
mov
mov
ljmp
adc
jp
pop
fildl
lods
loopne
nop
sbb
mov
pop
aas
cmpsl
into
xorb
add
xor
repz
xor
sbb
push
dec
dec
sub
xor
mov
xor
leave
cmp
fnstsw
sbb
jp
cmp
cmpl
out
jae
xlat
inc
adc
jae
mov
jge
in
aas
shl
fs
enter
roll
push
push
jnp
xchg
mov
cmp
and
aas
stos
popa
enter
xor
fadds
stos
fisttpll
adc
push
sar
idivb
sahf
jle
out
dec
push
repz
pop
mov
mov
cmp
andb
jg
ss
int
les
xchg
int
dec
insb
icebp
xchg
mov
fstp
sub
jno
inc
push
lcall
mov
sbb
push
fstps
fcoml
cmp
sti
dec
xor
and
out
and
push
xor
sbb
push
int
insl
adc
pop
vpcmpgtd
dec
jge
adc
or
jmp
sbb
pop
push
sbb
in
jle
ds
xchg
rolb
nop
into
mov
rolb
fnsave
gs
jp
pop
mov
pop
cli
clc
jecxz
loop
or
inc
clc
or
loop
inc
stc
push
push
inc
mov
adc
cltd
jp
sbb
lods
cmp
and
mov
push
into
or
sarb
sbb
testb
jno
mov
int3
dec
pop
mov
out
jae
mov
dec
cmp
cmp
and
out
fs
push
test
enter
int
cmp
stc
mov
mov
decl
aam
cltd
insb
jno
cli
frstor
or
movsb
pop
std
adc
mov
sbb
aaa
stos
sbb
sub
inc
xchg
mov
xor
jecxz
scas
cld
cmp
jbe
orl
fidivrl
fdivr
and
out
test
test
mov
mov
xchg
fucomip
cmpsl
dec
adcb
aam
outsl
xchg
mov
cmp
stc
adc
icebp
in
push
or
repz
sbb
push
leave
nop
sbb
mov
lret
pop
or
loop
out
sbb
mov
idivb
and
aas
xchg
into
shrl
mov
push
inc
adc
or
add
sbb
sbb
mov
data16
rorb
or
sti
inc
mov
aam
pop
adc
mov
outsb
xor
out
push
push
cwtl
xchg
and
dec
cmpsl
stos
repnz
pop
and
movl
jne
cli
pop
push
xor
cmc
sub
xor
cld
cmpsb
and
pop
sub
fnstcw
mov
sbb
sub
mov
pop
or
bound
fistl
inc
movsl
lds
outsb
or
add
inc
outsb
inc
cli
and
jg
sti
or
sbb
jp
outsl
adc
rcl
es
fldcw
jne
std
jbe
and
jbe
jmp
call
inc
bnd
inc
mov
dec
and
jmp
aam
and
sbb
xchg
lret
push
sahf
daa
lods
repz
mov
in
push
repnz
lds
rcl
cmp
push
aad
pop
ret
or
jmp
sub
xchg
pop
movsl
pop
stos
test
inc
les
sbb
mov
inc
lahf
mov
mov
push
sbb
lret
adc
mov
ljmp
movsl
aas
add
icebp
and
sbb
and
mov
dec
inc
xor
jmp
lret
ss
sub
mov
pop
sbb
sub
test
add
loopne
xor
inc
sbb
arpl
decl
jp
out
or
sub
jle
in
stos
xchg
pop
mov
movsl
mov
in
popl
aad
mov
mov
mov
push
mov
dec
icebp
stos
pop
cmp
movsb
or
sub
jb
inc
xchg
xor
xchg
les
mov
dec
jecxz
pop
or
out
mov
and
jae
inc
es
ret
and
jp
lret
movsl
push
mov
dec
push
push
xor
push
outsb
insl
jns
out
and
and
push
cmpsb
jnp
pushf
dec
mov
out
ss
push
addr16
scas
movsb
cmpl
sarb
xor
movl
fimuls
xchg
xor
and
xchg
mov
outsb
add
and
test
cmc
inc
mov
xchg
mov
jle
cmp
jl
hlt
mov
out
cmp
out
test
xchg
lods
cmp
pop
jmp
cltd
cmp
cmpsl
es
xchg
inc
push
fisubl
dec
daa
int3
jnp
mov
or
sbb
test
in
dec
pop
aam
and
dec
inc
int3
mov
gs
cmp
icebp
pop
dec
popf
ja
popa
test
test
inc
jns
mov
mov
cmpsb
ljmp
mov
jo
add
outsl
ror
lcall
sbb
insb
inc
add
cmp
xchg
push
pop
sub
cmp
mul
ret
ret
and
pop
enter
sbb
jne
iret
nop
insl
jnp
fs
adc
push
fldt
call
sbb
push
xchg
insl
dec
outsb
and
adcb
jae
xor
pop
inc
push
push
outsl
negl
add
add
insb
fcompl
into
ss
jl
andl
aad
ret
and
xchg
test
fcoml
jnp
or
in
lahf
arpl
movsl
fcomps
test
xor
push
jge
inc
mov
repnz
mov
clc
add
adc
jle
in
sub
lods
inc
lods
subl
scas
jge
push
mov
jmp
psllq
lcall
xor
push
jecxz
rorl
cwtl
pop
dec
leave
fwait
cmp
loop
andl
dec
mov
loope
stos
pop
shll
mov
pusha
or
mov
test
fucomi
or
push
mov
out
fs
test
xchg
jmp
movsl
xchg
add
test
jmp
cld
cmpl
push
bound
sbb
pop
or
je
arpl
xor
lds
and
xlat
clc
ss
sub
out
mov
add
out
push
xsaves
mov
jge,pt
xlat
pop
rclb
xlat
cmp
ficomps
dec
loop
cmp
mov
cmp
dec
push
mov
cltd
js
adc
add
outsl
imul
inc
pushf
xor
lcall
outsb
and
rolb
mov
inc
sub
icebp
xchg
mov
aaa
decl
lods
stos
dec
cltd
xchg
out
out
aad
dec
fwait
outsl
pusha
dec
sub
daa
arpl
inc
push
les
ret
dec
je
js
jns
push
push
aaa
std
rcrb
mov
add
mov
repz
pop
sbb
lods
dec
cli
jns
xchg
add
cld
imul
sbb
add
in
jp
cmp
je
outsb
imul
rclb
pushf
cmpsb
inc
push
jmp
shll
and
mov
pushf
and
pop
mov
cmpsb
fnstcw
iret
enter
sub
pop
out
push
push
jbe
adc
rcrl
mov
lret
inc
xchg
add
subl
sbb
inc
orl
stos
add
addr16
std
add
sete
test
mov
jb
pusha
push
push
jl
dec
int
testl
ljmp
xlat
imul
mov
and
xchg
loop
mov
pop
fxch
push
mov
push
push
xchg
movl
sbb
ror
mov
and
push
test
test
jbe
stc
stos
cmpsb
icebp
sbb
fsubs
repnz
aam
fstpl
decb
jg
inc
inc
mov
stc
repz
dec
and
bound
dec
pop
mov
cmp
xchg
jne
andb
mov
pushf
iret
daa
mov
ficoms
push
call
stos
sub
inc
dec
in
push
or
adc
mov
idivb
cmp
pop
jne
ljmp
mov
sub
add
jne
xchg
mov
pop
das
subb
daa
adc
cltd
cmp
jl
gs
cmpsl
in
xor
mov
dec
inc
aam
mov
pop
scas
inc
mov
nop
or
dec
dec
mov
loope
sbbl
rcrb
mov
jmp
adc
pop
pop
hlt
repz
test
stos
add
and
add
mov
add
sub
or
in
in
scas
out
pop
mov
add
xor
jge
insb
wrmsr
lock
sbb
mov
cwtl
xor
xchg
loop
mov
cmpsl
inc
add
mov
cmc
xor
xor
fsubrs
mul
clc
adc
popf
xchg
addr16
ret
xor
cmc
pop
fldl
leave
jbe
ja
daa
sub
xchg
jns
add
out
fbstp
pop
adcl
nop
inc
nop
xchg
sbb
push
lahf
dec
add
sub
adc
dec
in
jae
ljmp
inc
push
insb
inc
adc
xor
ja
xchg
sub
aam
sbb
in
mov
mov
mov
lock
sub
mov
dec
inc
lock
adc
cmp
sub
jp
sbb
test
dec
lods
fiaddl
test
cmp
and
es
xchg
lcall
jb
int3
cmp
stc
fwait
inc
in
sub
dec
pop
push
jmp
iret
sbb
xor
pop
or
jp
inc
fnstenv
clc
dec
xor
adc
ret
dec
fisttpll
jl
pusha
lods
mov
mov
and
jb
adc
xchg
lods
iret
and
leave
mov
mov
push
insl
mov
dec
xchg
pushf
push
push
push
pop
dec
sbbb
sbb
inc
dec
lahf
adc
rcr
xchg
mov
stos
addr16
mov
imul
mov
mov
gs
out
mov
popf
dec
fiadds
out
insl
add
call
js
insl
and
fdivl
lock
adc
add
inc
nop
fsubs
push
xorb
dec
mov
pop
ret
pop
loopne
mov
jge
mov
push
test
cmpsl
xor
jo
sbb
aaa
xchg
int
imul
push
adc
push
sub
sbbb
jae
push
jecxz
loope
sbb
mov
cli
inc
inc
repnz
mov
insb
cmpsb
sbbb
sbb
test
push
test
arpl
dec
xor
or
sahf
lock
jo
push
mov
call
dec
pop
rorb
xchg
push
adc
or
call
cmp
push
test
jle
gs
adc
xchg
les
or
jae
cmp
imul
scas
bound
mov
std
or
pop
shll
mov
pop
aas
pop
sti
ds
add
push
mov
mov
sarb
sub
mov
int3
in
pop
xor
aad
or
stc
loop
adc
imul
jp
lds
mov
cmpsl
xor
das
sbb
jmp
jg
sub
xor
mov
das
jge
inc
push
push
sub
rol
add
loop
push
pop
xor
or
dec
test
add
adc
sbb
dec
cmpsl
repz
lock
stc
xor
or
lahf
add
cmp
movsl
dec
adc
cmp
pop
std
jbe
or
xchg
or
hlt
jmp
dec
add
bound
or
mov
xor
cmp
mov
int
or
cmp
in
mov
stos
jae
adc
bound
mov
push
call
jno
cmpsl
xchg
mov
cmpsl
out
aaa
push
in
aaa
cmc
and
adc
out
inc
cmp
je
push
test
cmpsl
roll
push
add
iret
out
sub
inc
andl
imul
push
fimull
or
sti
adc
pop
sti
sbb
cmpsb
push
pop
cmp
cmp
out
neg
push
data16
out
movsb
adc
in
in
out
push
sbb
int
inc
in
repz
movsl
xlat
subb
mov
sti
es
insb
pop
or
out
add
dec
lods
nop
cmp
test
aam
bound
cwtl
mov
jmp
pop
fstl
or
jmp
push
mov
add
xchg
jbe
cmpsb
call
lock
test
adc
lock
xchg
and
pop
das
jmp
insb
jnp
cltd
les
jle
test
mov
xchg
sub
lock
loope
das
pushf
mov
push
or
pop
jmp
mov
enter
inc
sub
cmp
dec
cmp
repz
andl
mov
pop
dec
std
xchg
jg
std
add
test
sahf
gs
loop
dec
jmp
movsl
jle
pop
mov
push
int
flds
fsubl
nop
dec
sbb
xor
dec
roll
cmpsl
jle
out
iret
ds
mov
lea
insl
bound
loop,pn
xlat
cmp
push
or
adc
leave
cmp
sbb
mov
lods
push
jo
outsb
mov
jo
es
ss
es
aam
iret
int
pusha
cmp
cmp
pop
dec
dec
int
clc
sub
sub
in
sahf
jns
sarb
inc
stc
pop
adc
pop
and
in
dec
fxch
inc
lods
cmpsb
aad
cmp
add
jecxz
mov
pusha
outsl
outsb
and
xchg
into
push
daa
jg
int
int3
in
sahf
and
sahf
push
cmp
flds
add
push
inc
stos
out
movsb
mov
cmp
add
xor
or
imul
push
jnp
cld
lods
cmpsl
sbb
inc
push
cs
rcr
jge
adc
in
push
xchg
jne
out
aaa
cmc
mov
add
mov
imul
movsb
xchg
loope
imul
sarb
inc
mov
fsubrs
mov
jns
fbstp
pusha
and
cmc
imul
movsb
mov
mov
mov
mov
mov
sub
gs
push
ja
stos
fwait
in
fs
push
cmpl
popf
mov
js
mov
mov
fbstp
pop
sbbl
dec
fs
pop
in
mov
mov
cltd
gs
cmpsl
aas
aad
inc
loopne
and
int
add
cmp
jmp
adc
push
mov
mov
mov
lock
and
fisttpl
inc
cmp
sbb
fldenv
cli
or
and
rcll
test
lock
mov
stos
cmpsl
pop
in
lea
sub
cs
rclb
xchg
lret
cltd
push
or
inc
adc
lahf
cs
fistpl
dec
fsubr
aaa
inc
mov
das
lret
jne
mov
adc
scas
xlat
les
xchg
fstps
outsl
mov
inc
into
fists
sbb
int3
test
inc
pop
subb
add
ljmp
dec
dec
or
icebp
addr16
test
xor
idivb
push
aaa
inc
lea
jge
mov
test
aas
inc
gs
dec
adc
lret
enter
add
fs
add
cmp
or
clc
adc
mov
jne
mov
xchg
scas
fnstsw
rcrl
push
cmc
cwtl
sbb
jnp
into
pop
add
jge
xor
push
cmp
mov
pop
adc
out
xlat
sti
push
inc
popa
mov
pop
enter
and
add
jo
mov
inc
push
adc
jbe
sub
fsts
xor
lods
popf
popa
pop
int3
cmp
mov
xchg
xlat
pop
jmp
fs
jmp
mov
xchg
pop
rol
lahf
cmc
pop
movsl
int
jmp
cmpsb
out
fs
lcall
sbb
imulb
push
sti
shll
mov
cltd
mov
lcall
xchg
sbb
cmpsl
cwtl
daa
inc
xchg
add
push
cmpsl
inc
mov
pop
jbe
lea
jle
cli
ss
divl
mov
adc
pop
daa
push
mov
adcb
outsl
sbb
dec
cmp
jae
sub
jae
pop
dec
add
cmp
repnz
inc
cmc
jg
sbb
adc
cmpl
inc
pop
adc
sbb
push
mov
push
cmp
data16
mov
test
jb
test
mov
ja
andl
lds
xlat
leave
sub
outsl
jnp
loop
mov
inc
jge
cmc
rclb
push
jae
add
xor
subb
out
out
daa
mov
mov
adc
sahf
sbb
fldcw
ja
push
jmp
sub
scas
fdivl
mov
sub
adc
or
push
popaw
push
cmp
out
clc
stos
negl
fdivrs
mov
cmc
popf
lahf
jae
out
jl
movsl
xor
negb
jmp
jne
xlat
adc
adc
xor
gs
fnstenv
jnp
mov
mov
push
mov
push
jne
test
sbb
pop
pop
or
jnp
push
lcallw
into
add
sub
jge
pop
inc
push
stc
push
xchg
leave
pop
std
mov
pop
popl
add
dec
cmp
cs
lods
push
insl
shrb
sub
idivl
sub
or
mov
subl
mov
inc
orl
mov
int
andl
aad
imul
insl
ds
mov
iret
lods
dec
insb
mov
movsl
and
jns
mov
mov
mov
sub
js
outsl
jg
mov
lock
dec
shlb
sub
pop
pop
es
inc
adc
push
or
inc
xor
dec
fstpl
inc
insl
sub
mov
cli
movsb
ret
clc
xor
lods
int
cmp
std
ja
es
push
sbbl
je
xor
loope
pop
jl
cmp
int3
sbb
jbe
repz
mov
shll
or
add
leave
test
push
add
arpl
nop
lret
xchg
mov
inc
stos
stos
dec
mov
cwtl
and
pop
xor
add
mov
sbb
jno
adc
xor
insb
dec
aam
repz
jb,pt
xor
jne
inc
add
icebp
or
push
pushf
popa
rorl
push
xor
push
imul
fwait
cmp
or
dec
sbbl
xchg
lea
aaa
sbb
push
stos
rclb
sub
aas
aaa
mov
ljmp
sbb
hlt
jnp
insb
andl
gs
popa
scas
sub
sbb
fwait
pop
insl
dec
jmp
cmc
mov
xor
aas
test
jp
mov
dec
je
add
push
pop
sbb
roll
js
jns
or
scas
mov
mov
mov
xchg
cmp
sub
mov
notl
pusha
int
incl
mov
in
pushw
fsubrl
sarl
dec
or
ror
std
leave
pop
dec
push
pop
and
dec
xchg
pop
cwtl
ja
jo
xor
mov
imul
mov
mov
sub
push
adc
lcall
sbb
loop
or
daa
aam
cmc
aad
in
cld
lcall
xor
repz
aaa
ret
mov
inc
aaa
sti
jae
insl
mov
aam
push
mov
lret
fcomps
push
or
mov
and
sti
lock
adcl
mov
xchg
pop
cmp
popf
into
shr
adc
test
push
mov
mulb
lock
loop
cmpsl
out
js
outsl
aaa
iret
jae
in
xchg
cmp
mov
or
fcoms
in
adc
and
fsubl
pop
push
push
cmpsl
mov
or
xchg
sub
vpsllq
mov
mov
out
rorl
jg
rcll
aam
fsubs
repz
cmp
int3
in
orb
inc
push
cld
repz
lods
push
adc
cli
sbb
ljmp
sbb
aas
inc
mov
mov
dec
pop
or
test
pop
sarl
push
mov
negb
cld
jg
adc
mov
int3
sub
js
sbb
test
xor
testl
dec
jle
lods
push
sarl
xchg
and
mov
cmp
adc
cmp
add
and
loop
cmovae
add
in
orb
loope
lcall
pusha
nop
imul
jle
adc
cmp
nop
mov
into
js
loope
pop
outsb
mulb
mov
shrd
jge
call
je
out
inc
rcr
sbb
mov
push
or
cmp
mov
roll
ret
data16
rcll
test
adc
mov
ja
pop
mov
mov
dec
and
push
xchg
iret
lea
xchg
add
jo
sbb
fdivrp
pop
and
pop
mov
imul
jno
inc
mov
dec
call
inc
xchg
inc
or
cmp
js
mov
inc
loopne
mov
and
rcll
inc
inc
lods
aas
adc
cs
into
out
cltd
in
or
outsb
repnz
mov
call
fs
fistps
fstpt
mov
aam
xlat
sbb
outsb
add
adc
popa
out
sar
andl
ja
loop
jecxz
ja
adc
or
mov
xor
js
xor
or
stos
and
mov
pop
and
movsl
neg
cli
cli
inc
repz
adcl
mov
mov
and
loopne
js
call
inc
imull
pop
jl
sbbb
sbb
pusha
mov
sbb
test
inc
pop
jno
dec
inc
sub
mov
sub
adcl
out
push
in
and
jge
mov
sub
gs
cmp
sub
push
movsb
hlt
fstpt
jecxz
sbb
or
xor
lods
jg
or
add
xchg
push
sbb
mov
orb
mov
mov
les
sbb
andb
mov
jo
lea
xchg
sub
roll
inc
cmpsl
mov
cmp
sub
adc
push
add
or
in
sbb
cltd
xor
enter
pop
loopne
vmovdqu
ret
add
push
xchg
addl
pop
push
jo
xorl
clc
cmc
mov
add
aam
popf
movsb
lret
test
jne
xchg
xchg
rorl
pop
jne
scas
aas
xchg
inc
stos
xchg
int3
mov
add
sbbl
push
mov
mov
call
iret
loopne
das
push
adc
jbe
cltd
das
test
xor
mov
cmp
push
add
popf
jecxz
stc
fnstsw
dec
pop
adc
mov
hlt
lea
push
loopne
decb
mov
inc
sub
repnz
in
sbb
ss
dec
lret
dec
pop
movsb
js
or
jmp
shl
js
ret
rcr
lret
push
add
mov
mov
pop
sub
sbbl
repnz
add
adc
jmp
imul
pushf
scas
xchg
and
icebp
out
and
lock
sub
jecxz
pop
out
mov
fisttpll
push
or
xchg
sbb
lods
xorl
cmp
jle
mov
adc
sub
mov
pop
out
rcr
clc
insb
dec
xchg
lahf
ret
int3
push
pop
stos
sbb
pop
sbb
jmp
imull
cmpsb
xchg
mov
push
sbb
push
test
push
cld
ljmp
mov
mov
stos
enter
shlb
mov
imul
sbb
adc
push
xchg
dec
js
lahf
fistl
int
and
xchg
adc
xchg
xor
aaa
mov
stos
fnsave
push
icebp
mov
and
jle
mov
mov
enter
pop
jo
mov
out
or
std
jge
xchg
or
cmp
jge
sahf
scas
jb
push
call
jnp
xor
mov
cmpsb
sbb
sbb
jno
out
aas
rcrl
nop
fnstenv
lcall
pusha
mov
mov
or
mov
daa
mov
fimuls
lock
xchg
loopne
ljmp
stos
mov
xorb
addr16
movsb
pop
or
mov
stc
pop
push
mov
incb
pop
sub
imul
pop
mov
jo
lods
pop
mov
mov
xchg
jae
jmp
or
lock
xchg
fcompl
mov
and
sub
push
ja
ja
dec
sub
jns
mov
pusha
or
data16
call
add
dec
cmpsl
stc
sbb
repnz
pop
outsl
or
outsb
cmp
push
and
lahf
fildll
jns
in
aad
add
adc
push
pop
lahf
pop
jmp
es
mov
mov
pushf
ror
nop
addr16
adc
sbb
add
std
jbe
out
lods
in
ja
out
mov
adcl
xlat
stos
inc
ss
in
sub
or
mov
xchg
loopne
fisubrs
and
je
pop
insl
add
mov
xchg
repnz
xor
cmp
cmp
iret
adc
push
xlat
ljmp
pop
cmpsl
loope
xchg
jb
dec
or
mov
xor
push
and
xor
out
sbb
xchg
incl
jmp
xlat
sbb
mov
cmpb
roll
scas
dec
dec
hlt
mov
test
push
inc
scas
inc
bound
push
rorb
sub
out
roll
xchg
push
mov
xchg
imul
mov
push
or
mov
mov
xchg
imul
orl
lods
sahf
cli
fs
adc
xchg
mov
inc
clts
mov
imul
outsl
cmpsb
sahf
pop
inc
jne
adc
outsl
fcoms
ret
mov
dec
dec
jo
or
test
imul
sub
jo
mov
in
in
xchg
idivb
mov
iret
jbe
mov
and
xor
imul
jno
inc
jmp
mov
mov
jl
in
jno
out
gs
pop
imul
or
pop
stc
movsb
fwait
xor
filds
pop
cmp
je
mov
sbbb
push
add
cmc
pop
ljmp
dec
inc
ficompl
nop
test
js
inc
mov
jge
in
mov
rorl
leave
and
jle
push
jmp
loop
adc
cmpsb
add
outsb
or
mov
cmpsb
jmp
fisubs
es
in
adc
dec
inc
adc
push
xchg
insb
jg
out
pop
xchg
cld
jmp
clc
cmp
or
call
mov
mov
sub
mov
jp
mov
sbb
mov
mov
cmpsb
sbb
dec
fdivrl
push
sub
mov
in
jge
inc
add
ret
inc
out
pop
aad
shrb
cmc
cltd
inc
jecxz
test
add
mov
pop
mov
sub
dec
repnz
pusha
or
mov
gs
flds
and
sub
pushf
nop
xor
cmp
fldcw
cmp
or
and
in
ds
pop
add
fsts
ja
or
ss
movsl
insb
push
test
das
movsl
or
and
shrl
lahf
cmp
dec
rol
inc
dec
mov
clc
pop
fs
cmp
shrb
lods
mov
aam
cltd
xchg
adc
sbb
adc
lods
aam
jmp
pop
pop
out
cmovae
mov
cmpsl
lcall
xchg
imul
jp
cli
xacquire
aaa
fdivl
inc
rcl
aas
icebp
xor
mov
fisubl
xchg
jl
bound
push
test
mov
add
sub
jmp
dec
imul
jp
dec
js
xchg
mov
xchg
cmp
mov
sbb
xlat
or
in
dec
ret
adc
ss
movsl
arpl
repnz
ds
ds
and
cltd
test
xor
mov
test
gs
pop
mov
scas
or
sbb
arpl
test
daa
sahf
cwtl
and
jmp
sbb
adc
pusha
mov
inc
jnp
jb
jmp
out
fsubrp
sbb
in
lea
ss
mov
or
ret
xlat
xorb
mov
addb
push
insl
ret
das
adc
sub
or
in
xchg
sbb
lahf
adc
dec
lahf
mov
add
stc
cmpsb
test
mov
repnz
jo
fwait
rol
cltd
cmp
shlb
pop
je
cld
test
pop
xor
fcomp
mov
test
daa
cmp
lahf
dec
bound
add
push
imul
lcall
das
ret
sar
push
adc
into
ffree
cli
add
mov
addr16
cmp
xchg
ret
xor
fmuls
push
arpl
fcomps
cli
sub
loop
fldenv
or
inc
pop
cwtl
into
shlb
dec
inc
inc
icebp
das
int3
and
lods
aas
je
push
inc
pop
sub
adc
mov
fstpl
in
xor
push
and
adc
inc
or
int3
dec
or
pop
comiss
or
sahf
aam
mov
nop
iret
jns
jbe
loope
cli
mov
into
sbb
cmc
adc
jne
jnp
cmp
adc
fmul
add
xchg
cmc
fstpl
cmp
xchg
mov
sbb
ljmp
arpl
fucomp
cmp
stos
orl
sahf
popa
arpl
mov
divb
arpl
lret
ljmp
sahf
jecxz
jne
inc
cmp
rcll
addb
mov
es
or
mov
insb
daa
leave
insb
cmp
pusha
ljmp
dec
jo
fstpl
pop
addr16
lock
push
dec
jp
div
pop
dec
test
xlat
mov
mov
and
or
sarb
push
xor
xor
sbb
jo
int
jmp
adc
test
push
cwtl
mov
cmp
scas
cmp
adc
dec
or
out
ljmp
mov
scas
lahf
rolb
jae
push
movsb
sub
nop
mov
and
mov
cmpsb
xchg
faddl
cmp
fisttps
test
js
loope
mov
fsubl
adc
jns
mov
decb
sub
sbbb
adcl
push
dec
xchg
pusha
lcall
loop
das
mov
loop
jb
aaa
in
jg
out
cmp
pop
mov
xchg
outsb
and
testb
outsl
aad
sub
xlat
aam
xchg
dec
adc
inc
outsb
mov
inc
mov
xor
inc
daa
out
cmc
fldt
pop
rolb
iret
incb
xor
andl
ljmp
lea
push
pusha
and
pop
cmc
and
inc
push
ljmp
xor
lcall
dec
test
xlat
inc
or
gs
mov
jecxz
fs
sub
push
outsl
pusha
mov
hlt
aas
in
test
pop
mov
mov
jecxz
lods
je
out
aam
outsl
lds
jecxz
lret
add
mov
adc
test
subl
imul
int3
sub
cmp
shl
cmpsl
divl
xor
orl
adc
sub
jb
insl
aas
push
ror
fs
cmpsl
lock
aaa
cwtl
inc
faddl
mov
pop
sar
inc
jno
out
test
sarl
sub
enter
mov
jg
paddsw
out
pop
sbb
repz
pop
cltd
pop
sub
cmpl
sti
outsb
sub
push
jecxz
jl
lret
adc
repz
loopne
lahf
cwtl
add
data16
xor
jno
outsb
inc
test
push
shl
pop
pop
jecxz
fidivrl
or
scas
aad
loopne
imul
mov
dec
jo
push
shlb
mov
or
adc
jae
and
out
outsl
test
mov
sahf
lcall
cmp
cwtl
push
fwait
mov
pop
adc
pusha
bound
inc
push
push
mov
test
push
mov
push
adc
ds
jmp
testb
iret
xor
sub
imul
sbb
repz
dec
push
cmp
pushf
xor
aas
adc
push
dec
pop
imul
pusha
mov
dec
jno
pop
rcrl
cltd
inc
insb
jnp
or
and
adc
adcl
jne
in
jge
cwtl
cmpxchg
and
xlat
xchg
sarl
jge
push
sbb
icebp
fldt
iret
fildl
inc
lret
push
out
add
or
insb
jp
popa
pop
adc
imul
jle
test
test
mov
mov
adc
sahf
shl
pop
shl
pushf
pop
or
jns
test
cmp
ftst
loop
lods
add
push
lods
enter
insl
adc
adc
enter
push
les
cmp
pop
inc
fucom
and
pop
and
mov
mov
std
movsl
idivb
mov
or
sub
or
adc
push
fistl
jl,pt
mov
in
stos
sub
imul
out
xor
sbb
push
inc
pop
ds
and
mov
movsl
pop
inc
sbb
xchg
pop
lret
mov
addr16
mov
jg
push
sarl
sub
xchg
sub
loope
push
cli
jle
in
cmpl
je
mov
inc
out
jo
and
sbb
aad
dec
sbb
mulb
lcall
add
inc
pop
aas
inc
les
jnp
dec
sub
sbb
and
sub
outsb
fidivrl
les
aas
mov
fadds
jecxz
add
jmp
in
cld
xor
push
ja
xchg
xchg
addb
aad
inc
ds
lods
push
inc
rolb
mov
ss
cmpsl
adc
hlt
out
sub
ljmp
addr16
insl
popa
sbb
aam
dec
add
loopne
inc
into
fldt
mov
roll
je
pushf
sub
es
sbbb
stos
fnstsw
dec
or
pop
xchg
or
imul
push
loopne
popa
das
sar
out
and
pushf
sbb
adc
push
mov
add
call
pushf
stos
fwait
mov
cld
push
sbb
aam
repnz
int
or
std
mov
pusha
xlat
mov
lock
add
movb
mov
and
lock
scas
push
jno
mov
xor
scas
fnsave
dec
bnd
gs
adc
dec
andb
fldcw
push
jbe
popa
push
push
and
or
and
fidivs
or
shll
mov
xchg
ret
popl
push
test
sub
movsb
xor
mov
mov
mov
inc
idivb
mov
inc
not
push
xchg
push
repz
inc
sbb
addr16
mov
cmp
or
mov
palignr
mov
arpl
push
mov
pop
pop
jmp
inc
orl
lret
sbb
push
fwait
sub
lea
adcl
sub
sub
xor
mov
mov
stc
add
cmp
pop
out
push
xor
pusha
jmp
gs
insb
pop
cmpsl
xchg
xchg
jl
clc
or
inc
or
push
push
push
in
lock
ss
push
mulb
cmp
bound
cmc
sub
jge
out
cmp
std
mov
add
data16
and
sahf
inc
mov
xchg
cmp
push
stos
inc
sbb
push
sub
shll
sarl
int
outsl
pushf
andb
leave
dec
js
push
repz
sub
jae
shr
enter
test
data16
sbb
jle
and
scas
push
pop
fwait
mov
mov
lea
pop
call
outsb
cmp
in
test
ss
dec
rol
mov
shlb
cmc
sub
dec
jae
push
mov
jle
push
arpl
movl
sbb
mov
dec
dec
or
push
pop
insb
jnp
add
js
fisttps
add
daa
mov
mov
pop
add
jns
or
push
jmp
es
pop
mov
iret
inc
dec
loop
popa
cmp
in
xchg
mov
sbb
test
repz
int3
cmpsl
pop
sar
loopne
jo
loopne
dec
cmp
jg
adc
xor
dec
ret
lea
sti
xchg
and
pop
in
das
mov
addr16
push
push
jb
mov
push
mov
adc
xchg
and
sahf
cmp
mov
xchg
sbb
lds
jp
and
sub
sub
add
jle
add
lods
dec
cld
popa
mov
nop
lcall
pop
ss
mov
fsubs
sti
fsubrp
xor
aam
or
inc
xchg
push
int
push
lock
stos
daa
cltd
aaa
pop
aam
mov
add
sbb
fmuls
mov
xchg
xor
pushf
scas
cmp
ret
les
xor
adc
mov
popa
icebp
push
adc
pop
movsl
dec
dec
push
jg
jae
int
data16
adc
push
adc
pop
pop
cmp
pop
movb
pusha
imul
lock
pop
test
add
mov
nop
testl
push
into
jns
js
out
jno
xchg
xor
or
scas
ljmp
filds
data16
mov
mov
inc
ds
lea
movsb
xor
mov
fstp
ret
addr16
sbb
jb
insl
das
fmulp
fwait
inc
xchg
jns
stos
and
addr16
mov
or
aaa
mov
mov
mov
imulb
inc
and
mov
cwtl
lahf
popf
pop
test
xchg
and
cmp
subl
mov
xchg
das
xchg
je
les
jb
dec
push
xor
pop
dec
xor
daa
roll
cmc
xchg
and
fsts
inc
jno
push
mov
mov
xchg
lods
mov
out
push
rorb
mov
mov
jle
jb
push
mov
add
cmc
ss
mov
rorl
insl
pop
std
stos
pushf
cmc
adc
mov
xlat
inc
cmp
mov
cwtl
pop
mov
mov
adc
aam
xor
sub
js
std
stc
pop
add
mov
sbb
cmp
mov
mov
cmp
roll
inc
clc
je
mov
inc
lods
ret
adc
add
sub
sub
mov
push
cli
icebp
sub
sub
mov
clc
pop
sarb
mov
test
mov
push
iret
out
xchg
aam
adc
dec
xchg
dec
lret
push
cwtl
out
bound
xchg
push
inc
add
xchg
aas
push
and
je
and
idivl
leave
cld
mov
pop
jb
out
push
je
sub
fsubrs
push
sbb
add
fidivs
ds
pop
cmc
aam
lcall
cmpsb
clc
jne
xchg
jl
std
scas
push
cmp
pop
sub
insb
cmp
hlt
out
or
mov
mov
fdivl
jp
dec
fmull
xor
outsl
mov
pop
lcall
cmp
aas
xchg
xlat
les
ja
lret
cs
shrb
pop
enter
dec
or
dec
push
push
flds
inc
imul
xchg
add
xchg
jae
push
test
and
mov
sti
pop
pushf
outsb
mov
stos
shrl
in
pop
xor
fistps
aas
mov
jnp
daa
mov
scas
daa
mov
fisttps
jmp
mov
cmc
out
and
das
mov
popa
and
mov
sti
xor
xchg
push
lret
out
xchg
lahf
sti
sahf
lcall
enter
out
js
ds
inc
or
add
fsqrt
pop
cmp
arpl
insb
movsb
mov
shl
cmpsb
or
mov
daa
in
push
dec
imul
xchg
xchg
push
jmp
rorb
mov
out
push
push
cmp
fs
sub
stos
xchg
jmp
cltd
and
sbb
mov
inc
xor
sub
and
fs
addr16
imul
push
and
lahf
pop
dec
add
fucompp
lock
out
jl
mov
add
mov
negl
mov
stc
sar
shrl
cmp
icebp
insl
stos
jne
aaa
fst
bound
mov
pop
push
jbe
aas
clc
xchg
test
out
adc
lcall
xchg
cltd
cmp
stos
push
xor
aaa
lahf
xchg
orl
xchg
ja
inc
out
inc
xchg
sub
ret
insb
fmull
ss
sti
outsl
loopne
push
les
pop
jne
inc
and
test
inc
insb
adc
jecxz
sub
sbb
pop
imul
mov
jae
jne
lret
jg
stc
movb
jl
inc
into
push
push
outsl
xchg
mov
mov
outsb
js
ljmp
xor
adc
push
or
xor
cmp
push
xor
outsb
pop
adc
sub
popf
ror
div
xchg
fstpt
push
call
mov
or
cmp
dec
testl
inc
xor
stos
add
int
xor
pop
loope
sti
and
xchg
shll
sar
xchg
jmp
mov
and
jecxz
pop
mov
dec
test
hlt
dec
mov
mov
mov
aaa
pop
jns
aas
sub
shlb
lea
dec
dec
sbb
ljmp
sahf
lcall
or
aam
push
push
jae
std
dec
loopne
sbb
mov
test
cmpsb
pop
and
mov
pop
cmp
roll
imul
mov
pop
mov
loopne
lods
and
popf
mov
push
adc
in
push
or
lcall
cmp
dec
fsubrl
aas
mov
mov
mov
out
jle
bound
dec
aas
xchg
push
xchg
sub
or
mov
jo
imul
xchg
jmp
cmc
xchg
stos
sub
sub
bound
sub
jno
push
test
and
ret
xchg
xor
gs
fistl
push
xor
clc
lret
jb
out
cwtl
adc
xchg
ljmp
jmp
enter
lea
movsb
movsb
arpl
cmp
cltd
mov
das
add
clc
loopne
sub
push
insl
movsl
ja
mov
std
or
pop
push
inc
ret
std
lahf
adc
out
ss
icebp
sbb
push
sub
mov
and
xlat
sub
sahf
cmp
cwtl
mov
mov
pop
loopne
and
gs
dec
sbb
popa
rcll
push
insb
pop
lds
mov
push
loop
in
mov
div
sbb
push
jno
sti
movsb
cmp
test
js
mov
je
daa
xlat
aas
jp
sahf
dec
mov
push
adc
sbb
mov
push
push
popf
add
push
ret
and
inc
das
fiaddl
movsl
mov
lods
cmp
inc
or
mov
and
insb
test
testl
and
imulb
aam
int
and
adc
int3
or
in
xchg
cmpsl
dec
mov
mov
das
jg
sbb
jno
push
cmpsl
push
adc
or
adc
jp
in
push
pop
stos
and
aam
xchg
lods
jae
mov
add
lcall
sbb
inc
and
repnz
jge
orb
jg
fisttpl
aam
mov
dec
jmp
push
jne
pushf
ret
out
int
cmpsl
icebp
lret
and
mov
mov
push
lods
arpl
push
call
sarl
xchg
mov
test
pop
popa
adc
push
xchg
jnp
jnp
inc
daa
sub
or
jmp
lret
jl
imul
push
sub
xchg
xor
and
sub
add
aam
sub
scas
dec
outsl
add
fldenv
or
addl
sbbl
sub
sub
stos
popf
and
mov
xchg
das
pop
imul
xchg
sub
sti
mov
sub
imul
jecxz
cmp
js
inc
rcrb
dec
lods
or
adcl
test
enter
push
in
jl
in
mov
jbe
sub
enter
xchg
sub
sub
dec
roll
gs
pop
mov
push
cmp
fcmovnb
int
aad
and
outsb
jne
pop
pop
and
pop
pop
cmpsl
or
ret
push
sti
loopne
mov
xchg
fwait
movlps
aas
mov
mov
and
notl
push
aaa
push
mov
push
ss
sub
sbb
mov
repnz
out
sahf
mov
scas
mov
addr16
mov
pop
fldt
fxch
sub
pop
insl
in
and
andb
adc
aaa
cmc
and
mov
pop
icebp
push
movsb
xchg
jl
xor
dec
addr16
push
stos
inc
cmpsl
mov
das
push
popl
mov
test
arpl
stos
xchg
dec
inc
mov
or
push
in
mov
and
fs
sub
pop
mov
jmp
jmp
cmp
sub
pop
pop
out
dec
addl
mov
push
data16
mov
sub
lcall
dec
out
sbb
cmpsb
jns
mov
sbb
xor
mov
add
psrlw
pop
dec
out
inc
ss
shll
and
mov
fucomp
jo
cltd
cld
adc
lea
stos
cmpb
cld
jge
jne
and
jb
adc
add
outsl
inc
and
cmp
or
push
jo
out
mov
dec
scas
sbb
andl
push
mov
push
mov
inc
pop
xchg
jae
idiv
daa
hlt
lock
addr16
rorl
into
les
dec
jmp
shl
cmp
xchg
lcall
sbb
ja
sub
push
call
shlb
fldlg2
adc
ljmp
ret
or
mov
add
xchg
cmp
and
clc
push
mov
cld
and
pop
dec
and
mov
out
pop
xchg
push
xchg
pop
dec
das
push
push
push
mov
mov
inc
sub
jns
fsubrs
int
xchg
es
jnp
add
outsb
mov
lret
jnp
cwtl
add
or
cld
rorl
or
sub
and
lret
outsb
sti
repz
jb
stc
cwtl
cmpsl
mov
rorl
xor
in
ljmp
cld
addr16
adc
and
movsl
jl
pop
sub
test
xchg
insb
leave
dec
cmp
fwait
pop
pop
sbb
mov
mov
bnd
test
add
repnz
xor
aaa
loop
push
fidivrl
adc
cwtl
shll
out
ret
ds
test
je
pop
jno
ret
jle
call
or
inc
adc
hlt
sub
scas
xchg
icebp
lock
jae
scas
lds
call
push
add
push
ljmp
ret
adc
mov
stos
insb
xor
rclb
jne
sbb
subl
fs
push
mov
shrl
out
gs
add
imull
mov
sub
adc
xor
fsubl
mov
inc
pop
dec
jns
ds
pop
push
sub
push
sbb
in
push
addr16
cmpsb
subl
fidivrs
push
mov
pop
xor
cwtl
xchg
stos
or
xor
scas
pushf
push
mov
rcrl
mov
xchg
pop
push
insb
mov
cmc
cmp
or
adc
xchg
dec
subb
jl
mov
pop
loop
cld
pop
and
test
dec
movsl
pop
push
dec
ds
repnz
pop
repnz
mov
mov
ret
push
test
mov
gs
fsts
mov
popa
ja
push
bound
loop
inc
inc
mov
pop
dec
out
jge
fstl
dec
jl
sub
jne
inc
xor
pusha
stos
cmp
inc
insb
cltd
movsl
or
pop
sbb
xchg
dec
xchg
mov
ror
ja
dec
out
jo
and
dec
cli
outsb
sub
cwtl
cmp
dec
mov
cli
popa
push
into
xchg
aam
call
push
ljmp
sahf
call
loop
arpl
mov
sarl
cmpsl
dec
lea
repz
ljmp
dec
rcrb
dec
aam
mov
mov
jo
mov
aaa
push
xchg
adc
fistpll
adc
aas
sbbl
mov
rcll
pop
jo,pt
std
outsb
cmpb
test
jno
aas
fs
push
stc
sub
lods
jmp
xor
rcl
push
imul
ret
lea
cmp
int3
stos
adc
inc
add
hlt
xor
dec
shlb
leave
pop
add
popa
inc
cmp
jecxz
inc
shlb
out
pop
add
pop
es
xchg
jg
sbb
or
sub
mov
mov
pop
and
out
mov
faddp
mov
cmp
sub
mov
xchg
mov
daa
pop
sub
sarb
cltd
mov
orb
in
inc
mov
push
clc
mov
movsl
cs
push
sub
mov
stc
mov
pop
push
cltd
in
pop
sbb
and
mov
mov
mov
pop
mull
jmp
out
fbld
cmpsl
imul
scas
inc
xchg
lea
out
mov
filds
inc
or
cmp
or
js
inc
xor
imul
scas
stc
jmp
outsl
xor
ret
test
lock
dec
sub
pusha
cmp
and
and
adc
ljmp
xchg
jns
add
or
loope
test
ljmp
and
sub
iret
hlt
enter
xor
cmp
mull
inc
add
in
jns
sti
and
andl
rorb
sarl
loopne
loope
adc
icebp
les
and
pop
pop
xchg
stc
pop
in
mov
fdivp
jno
daa
mov
xchg
mov
mov
cwtl
mov
les
hlt
jnp
jo
notb
in
sub
int3
test
mov
mov
xor
pop
push
jb
cld
in
adc
js
pusha
das
and
push
adc
data16
in
dec
jb
cli
clc
fists
xor
cmp
mov
add
rorb
ljmp
mov
sub
je
fwait
les
inc
mov
lds
inc
mov
cmp
into
sbb
cmpl
cmp
into
mov
cmc
jg
fxch
imul
or
jmp
in
sub
and
fs
mov
lea
jmp
and
outsl
or
sbb
lcall
mov
rolb
mov
out
add
or
pop
movsb
pop
aas
jbe
and
cmc
inc
mov
adc
adc
jg
aas
fimull
leave
xchg
in
out
fldcw
inc
mov
aam
stos
and
dec
in
outsb
shr
jno
cs
in
in
cmp
push
mov
pop
outsb
stc
popa
dec
add
out
mov
les
xor
push
and
lahf
test
loopne
sub
cmp
inc
ds
repz
into
cmpsl
mov
sub
sub
sahf
jne
mov
test
xor
out
mov
dec
pusha
xchg
or
pop
or
fwait
scas
push
and
movsl
xor
sbb
mov
iret
test
jmp
jp
xchg
push
inc
sarl
mov
notb
mov
in
mov
jmp
sqrtps
jmp
dec
pushf
dec
and
mov
das
aam
sbb
push
add
test
lahf
push
subb
aaa
jmp
jnp
fs
shl
and
push
sbb
loop
cmp
jp
pop
ljmp
leave
aas
pop
sub
cmc
aas
pushf
add
decl
mov
pop
mov
aam
test
jle
lcall
jo
dec
adc
cmc
pop
mov
call
and
xchg
pusha
clc
adc
leave
sub
je
cmpsb
test
loope
or
pop
jns
dec
cmp
es
xor
test
into
xor
insl
addl
pop
nop
inc
lahf
adc
aaa
por
or
loop
or
fisttpl
sbb
leave
aam
lods
test
dec
jno
adc
test
xor
xchg
ror
inc
test
pop
sbb
mov
fdivrl
cltd
pop
incb
fmul
enter
aas
pop
jnp
push
cmpsb
test
pop
xor
jno
sub
enter
dec
fs
push
xchg
fs
sbb
or
push
es
mov
sbb
xchg
sarl
dec
xor
jp
es
insl
hlt
push
xchg
adc
xor
sub
or
cli
adc
and
pop
vpmaddwd
push
mov
mov
and
into
sahf
int
push
mov
cmp
out
mov
call
and
mov
dec
arpl
push
xor
mov
jp
sti
add
mov
mov
stos
fucomp
out
add
hlt
lds
mov
jne
mov
sbb
fmuls
jns
pop
add
push
adc
aad
dec
sbb
mov
ljmp
mov
xchg
pushf
mov
pop
lret
jg
inc
data16
mov
adc
add
scas
int
rorl
jne
scas
cmp
js
bnd
mov
push
mov
js
stos
testl
sub
mov
or
and
xchg
or
and
xchg
and
push
push
dec
mov
mov
lea
cltd
sar
cmp
stc
stos
fwait
test
and
mov
cmpsl
es
mov
mov
mov
cmp
mov
jp
adc
mov
lret
repz
mov
xchg
cmpsl
add
and
out
add
inc
sti
lcall
loop
sub
mov
dec
adc
lahf
sbb
pop
imul
fldt
push
jae
pop
pop
test
pop
and
sub
lret
and
les
in
adc
xchg
mov
cmp
sbb
leave
sbb
int3
mov
test
inc
pusha
xor
pop
cmpsb
fimuls
adc
pop
into
lods
hlt
cmpb
mov
lret
subb
fwait
out
mov
jecxz
cwtl
std
test
std
leave
bswap
test
push
jb
fidivs
dec
push
mov
jne
mov
jno
or
aaa
mov
pop
or
std
inc
jnp
iret
mov
jo
inc
in
stc
mov
fmuls
cmp
jg
jno
adc
les
sbb
xor
test
sbb
add
outsb
add
mov
ja
test
push
add
hlt
sub
and
lahf
insb
jne
mov
iret
out
xlat
imul
les
and
imul
loop
push
stos
dec
je
sbb
jle
outsl
in
and
fisttpll
jne
mov
jb
insl
sub
mov
inc
xchg
aam
dec
inc
fildll
sub
cmpb
xchg
push
repnz
ds
or
popl
cld
in
adc
sti
sarb
sbb
adc
orl
es
lret
mov
repz
jno
outsb
dec
fisttpl
and
xor
xlat
sbb
inc
nop
jae
xchg
movsl
push
les
push
mov
jmp
sub
inc
movsb
imul
arpl
mov
add
fcmovnbe
mov
and
dec
add
addl
ss
outsb
movb
xor
iret
outsl
sub
mov
xchg
scas
add
out
sbb
pop
mov
push
mov
push
mov
ja
adc
adc
and
xor
inc
loopne
in
cmp
out
cs
fs
fsubrl
ss
dec
mov
stos
lods
aaa
test
sbb
mov
xlat
fisubl
adc
jge
lahf
int
stos
cs
cmp
out
fisttpl
pop
dec
rol
pop
mov
and
mov
jo
sub
dec
out
test
push
std
adc
ret
xor
jle
or
iret
fistl
andl
mov
repnz
ljmp
cli
inc
lahf
pop
xchg
pop
or
push
int3
loop
int3
xchg
repz
ret
or
sahf
lods
js
enter
cwtl
lods
push
pop
dec
xor
sbb
dec
jecxz
sub
xchg
cli
mov
ret
lods
in
pop
push
out
xchg
lret
push
sub
cmp
rcrb
or
insb
cs
mov
arpl
lahf
adc
jle
xchg
jae
out
gs
sbb
cmp
in
add
enter
dec
nop
inc
push
js
in
fidivs
adc
xchg
sub
and
stos
bound
inc
mov
mov
fiadds
leave
pop
leave
outsl
jne
mov
in
jecxz
das
sbb
jg
jp
mov
push
cld
fs
js
push
xor
fwait
xor
orb
lea
xchg
out
xor
xlat
push
push
inc
cmp
lret
iret
fadds
out
jne
insb
mov
cltd
mov
pop
fadds
mov
push
push
mov
xor
call
jg
lret
pop
fildl
addr16
in
or
popf
stos
and
sub
iret
mov
adc
ja
jbe
push
repnz
frstor
pop
out
and
pop
sub
out
pop
int
int3
push
test
xchg
jno
dec
add
pop
pop
dec
stc
or
repz
mov
jp
inc
testl
cmp
adc
mov
outsb
test
fldcw
mov
icebp
pop
jmp
in
loopne
push
out
sub
dec
dec
jb
push
or
cmpsb
jle
negb
xor
pcmpgtd
dec
push
test
and
xor
inc
insb
jge
jle
xor
add
xchg
sub
mov
int3
lcall
fimuls
inc
shll
mov
scas
test
pop
mov
in
cmp
mov
pop
ret
or
es
std
adc
xchg
adc
clc
aad
cmc
and
cs
incb
push
lods
jge
mov
fildll
xlat
fstp
lods
mov
inc
daa
call
push
sub
adcl
fsubl
xorb
imulb
loope
xchg
xchg
cmp
xchg
pop
stos
cld
cmp
pop
pop
movsb
jecxz
jp
imul
cmp
mov
lahf
sub
cmp
aam
js
ret
cmp
add
int3
xor
cmpsl
mov
dec
adc
mov
loop
jl
inc
dec
pusha
cmp
push
mov
dec
andb
imul
or
sarl
pop
and
outsb
and
hlt
mov
aad
dec
sbb
cli
imul
inc
cli
addr16
cmp
xchg
bound
addw
faddp
fdivr
pop
xchg
ja
push
lds
xchg
movsb
nop
insl
icebp
fwait
imul
cmp
subb
js
pop
and
push
out
mov
std
push
cmp
dec
popf
popa
push
and
ja
scas
and
pop
inc
mov
pop
rol
xchg
cmp
call
cmp
cmpsb
mov
jnp
cmp
lock
les
dec
dec
repnz
sub
lods
or
jbe
pop
jge
dec
cmpsl
sahf
mov
push
mov
mov
dec
in
sbb
cmp
jl
mov
mov
cmp
jmp
xchg
shll
dec
inc
dec
test
pop
mov
mov
adc
adc
or
jns
adcb
sbb
mov
mov
add
pushf
sbb
test
push
sbbb
pusha
and
inc
cmpb
and
pop
les
xchg
jg
and
inc
cmc
stc
mov
push
cmp
addr16
sbb
sti
lds
popa
jae
xchg
jge
aad
cltd
adc
cmpsl
jl
cmp
jnp
jle
xchg
mov
cmp
cs
push
sbb
es
out
push
pop
mov
pop
rclb
fldl
lods
clc
xor
sbbl
sub
jne
daa
xor
inc
rcrl
int3
pushf
sbb
cmp
push
pop
jo
pop
push
sarb
test
fadd
xchg
lods
pop
mov
sbb
push
cmc
or
and
stos
js
push
adc
xor
cmp
inc
ss
pop
cmp
mov
inc
cmpsb
arpl
add
rol
out
jg
xor
mov
mov
jo
shll
addb
ret
outsb
add
ss
and
adc
outsl
push
pop
shl
insb
movsl
pop
and
push
cmpsb
push
and
sbb
mov
push
sbb
test
shll
loopne
stos
popa
jge
bound
xchg
rolb
nop
mov
pushf
jecxz
dec
cmpsl
push
mov
mov
pop
push
push
pop
add
pop
popa
out
dec
imul
sbb
iret
fidivs
mov
mov
mov
cmc
cld
adcb
fsubrs
mov
int
lock
sbb
xchg
movsb
mov
leave
out
mov
lret
lods
add
push
dec
xchg
leavew
mov
push
pop
cli
cmp
mov
and
cmp
jl
jge
inc
in
fcompl
cld
rorb
aam
cwtl
xchg
loope
fs
jnp
ja
mov
ret
inc
jae
lret
mov
pop
sub
dec
enter
jg
mov
or
scas
cmc
lea
inc
push
jns
in
mov
pop
sub
mov
and
subl
pop
cwtl
loopne
cmp
inc
jb
add
inc
cmc
sar
jb
cmpsl
dec
pop
ja
icebp
pop
mov
push
roll
push
xor
cmp
inc
sti
cld
mov
insl
dec
movsb
cld
xchg
cmc
pop
das
fwait
shlb
shrl
xor
shrb
addb
into
push
jmp
mov
push
xor
jecxz
sti
std
jno
pop
pop
icebp
scas
into
shll
jle
mov
mov
out
xor
pop
jno
and
popa
or
add
xchg
outsb
jmp
inc
clc
lret
out
xlat
aad
aam
daa
ljmp
jmp
nop
les
cli
gs
add
mov
mov
sbb
stos
lea
lods
loopne
jg
shl
into
negb
nop
rolb
push
xchg
mov
stc
shll
sub
aas
push
and
fwait
mov
int3
imul
xor
mov
loopne
fcmovnb
jecxz
loop
and
addb
push
jmp
aas
xorb
and
fwait
adc
xchg
pop
pop
cmp
inc
jp
or
addr16
cmp
outsb
movsb
lahf
sbb
data16
adc
xchg
outsb
sub
adc
loopne
andl
inc
add
add
out
cwtl
dec
mov
lcall
dec
loop
cmc
jle
jg
in
mov
mov
dec
xchg
cmc
jae
mov
ja
jb
and
aaa
stos
loopne
or
leave
movsl
in
ret
xor
cmc
lahf
add
cs
lret
dec
sub
jge
push
insl
imul
cmp
sarl
test
mov
sbb
icebp
or
aas
leave
cmp
adc
mov
pop
jnp
fldenv
shll
mov
cmc
aad
das
dec
loope
mov
rcrl
push
mov
lcall
shl
pop
sub
and
sti
test
outsl
add
rclb
sti
sbb
lea
out
cltd
mov
xchg
xor
out
mov
and
pop
lret
dec
cmpsb
mov
sbb
pop
and
leave
lcall
out
xor
test
in
jle
out
mov
pop
dec
adc
mov
scas
pop
add
iret
sarl
xor
sub
cmp
sub
adcb
cmp
cmpsb
arpl
in
push
ja
sbb
xlat
pushf
adc
int
jecxz
sbb
pop
call
cmp
mov
stos
sub
out
dec
enter
rcrb
ds
jl
sbb
dec
insb
add
xchg
cli
nop
dec
ret
loop
mov
lods
lds
or
adc
loope
fdivrs
sbb
mov
sbb
mov
fmull
ljmp
xchg
je
iret
lahf
in
xlat
cmpsb
mov
je
sbb
sub
lcall
xor
in
and
pushf
popf
outsb
fs
push
cmpsb
out
std
adc
push
mov
xchg
int
fchs
not
adc
xchg
sbb
bound
mov
push
mov
or
add
decl
jmp
mov
xchg
mov
mov
or
ljmp
in
mov
clc
inc
in
sub
lcall
inc
std
mov
pop
aam
mov
jne
pop
adc
cmpsb
icebp
pop
in
ss
and
inc
fsubl
jmp
lahf
loop
xlat
dec
enter
loopne
mov
outsb
xor
fiaddl
cmp
lcall
add
sub
arpl
mov
mov
clts
inc
push
popa
es
pusha
popl
add
out
inc
mov
lods
ja
pop
dec
xchg
test
push
push
push
jne
inc
repnz
stos
lret
imul
mov
in
cmp
push
inc
test
jb
and
jge
or
nop
jg
cmp
push
inc
das
pop
add
push
xchg
push
mov
repz
popf
xor
push
out
das
ljmp
rcrb
es
dec
ret
add
ljmp
test
mov
and
jns
mov
or
and
aas
dec
add
in
bound
xor
lods
or
xorl
and
dec
adc
pop
das
xchg
cli
movb
out
add
iret
jg
fs
dec
jge
mov
and
jp
loop
mov
fcoms
adc
inc
xor
lea
negb
clc
jb
incl
pop
lods
fxch
xor
push
orl
frstor
loop
fsubrs
fisubrs
aaa
test
jo
xchg
inc
inc
cmp
mov
jge
loopne
or
or
out
sbb
test
cmp
lock
push
inc
xchg
sbb
hlt
mov
cmp
xchg
mov
ja
add
xchg
add
ja
cmp
mov
push
stc
lcall
imul
loop
push
mov
add
cmpsl
jnp
jae
stos
xchg
adc
xor
pop
and
pop
inc
push
sub
imulb
xchg
les
imul
je
dec
int
lea
or
movsb
idiv
sub
inc
add
dec
testb
or
add
add
mov
or
les
mov
fs
sbb
sti
clc
jbe
fnstenv
lock
sti
mov
repnz
sarl
lds
lods
xchg
xchg
out
pop
xchg
add
out
push
adcb
and
push
dec
jecxz
or
popa
inc
sub
and
push
fucom
and
es
jo
pop
in
mov
adc
dec
gs
xchg
cmp
mov
jae
jns
outsl
inc
iret
in
add
cwtl
outsb
sahf
and
push
cmc
iret
mov
adc
int
xor
in
aam
push
out
mov
mov
movsb
mov
or
ja
adc
jne
or
mov
jmp
or
je
push
mov
lret
lahf
ja
pusha
decl
bound
jnp
xchg
sarb
sbb
xlat
lret
pusha
test
push
aam
mov
xor
sub
dec
inc
lcall
push
jbe
ret
or
mov
sahf
daa
sub
xchg
negl
or
and
loope
popa
jp
sbb
jo
sub
dec
test
sahf
mov
rcrl
pop
clc
mov
or
sbb
lret
aad
outsb
xchg
cmpsl
stc
mov
cmp
gs
mov
out
icebp
outsl
inc
and
lret
cmp
pusha
add
add
xlat
dec
clc
insb
stos
mov
out
jp
lcall
clc
cmc
or
loope
jne
imulb
jns
jne
mov
dec
xor
jle
lea
out
out
sbb
push
ss
mov
xlat
fdivrl
xchg
popa
cmp
inc
sti
push
imul
outsl
pop
aas
dec
xchg
jge
inc
out
dec
xor
pusha
cmpsb
movsb
mov
notb
adc
xor
outsl
aad
es
mov
repz
in
add
add
loop
and
cmpsl
sub
pop
pop
into
cmp
scas
cmp
jne
sarl
adc
fdivs
ret
popf
and
dec
cmpl
xor
movsb
pushf
sbb
loop
outsl
inc
mov
mov
cmpsl
int3
xor
and
or
adc
jecxz
arpl
inc
xchg
xchg
jg
xor
in
inc
outsl
adc
insb
jle
imul
lods
movsb
roll
gs
mov
fs
cmp
sbb
outsl
dec
dec
shr
add
xchg
popa
ljmp
mov
xlat
lcall
cwtl
xlat
sub
ds
mov
pop
mov
jae
mov
add
xor
push
test
push
inc
cwtl
pop
xchg
or
jno
daa
cmp
sbbb
repz
cmp
adc
cmpsb
lds
xchg
jge
das
dec
pop
inc
mov
ret
loopne
jl
cmp
xlat
jecxz
roll
stc
insb
xor
lcall
mov
and
leave
arpl
imul
mov
push
add
hlt
sub
lcall
fwait
insl
aas
sub
sahf
cmp
sbb
shll
push
nop
sbb
mov
dec
jl
in
shll
es
or
int
fildll
cmp
fildl
outsb
mov
shl
mov
dec
adc
mov
int
push
rcll
mov
sub
adcl
popa
push
mov
mov
add
lcall
xchg
sti
rorl
in
fsts
dec
mov
in
adcl
lea
aad
mov
mov
cmp
sti
push
add
inc
fwait
test
sti
jne
pop
and
inc
idivb
out
adc
stc
jmp
sub
sub
test
iret
pop
stos
xchg
rorb
pop
pusha
jae
adcb
inc
mov
ja
inc
mov
mov
sbb
mov
loope
mov
loop
stc
or
jne,pn
clc
out
push
mov
dec
sub
int
cmpsb
lret
outsb
push
mov
push
mov
loope
test
push
js
jo
lcall
add
xchg
aaa
xchg
mov
test
push
jne
decb
adc
shr
call
es
aas
lret
ja
rolb
sbb
stos
and
mov
xor
or
sar
hlt
ror
push
jp
ljmp
dec
data16
repnz
mov
fnstsw
f2xm1
sub
fld
add
adc
movsl
mov
jno
xor
out
adc
mov
jne
cmp
bound
sub
xor
mov
mov
fidivs
cmpsl
andl
mov
lcall
sarb
jge
mov
jl
mov
cld
sub
stos
fs
popa
lods
aam
xchg
mov
pop
add
cwtl
pop
cli
ds
ljmp
aas
cmp
jle
fdivl
cmp
cmp
pushf
pop
push
aas
outsl
je
inc
or
imulb
sbb
xchg
push
jae
pop
sbb
fbld
out
jp
sbb
push
mov
hlt
out
lret
or
fists
out
mov
arpl
xchg
iret
sbb
ss
inc
mov
inc
or
jmp
sub
jecxz
test
cs
stos
scas
out
das
dec
in
adc
inc
adc
sbb
push
mov
ja
cmpsb
les
imul
cmpsl
rorl
mov
adc
sbbb
cmp
movsl
xlat
imul
pop
or
gs
dec
jecxz
stc
movsl
add
int
fists
nop
pop
jle
add
sbb
repnz
sub
mov
push
ficoml
imul
pop
loope
xchg
mov
out
xchg
push
bound
and
fisubrs
adc
ja
insb
cmpsb
ret
push
and
in
adc
gs
mov
subb
sbb
adc
dec
mov
push
imul
out
stc
add
mov
jl
mov
rorb
cmp
fsubrl
imul
enter
and
jb
into
push
mov
push
pop
aam
jmp
les
pop
clc
mov
mov
or
cs
popa
and
jbe
sbbl
or
fldl
jno
push
imul
add
pop
ss
js
mov
or
hlt
mov
aas
sub
cmc
in
pop
sub
aam
bswap
nop
fidivrl
or
in
fldcw
lock
cltd
push
ljmp
cmc
push
push
sub
mov
jnp
jnp
insl
or
cmpsb
or
lods
push
loop
pop
add
test
or
and
movsl
or
cmp
mov
js
inc
in
cmp
js
mov
insb
push
cmp
cltd
gs
fimuls
pop
dec
loope
ret
add
inc
lock
in
sarl
inc
aad
iret
cmpsl
mov
cmp
pop
dec
fidivs
fwait
lcall
fists
lds
pop
mov
mov
addr16
daa
clc
test
or
fstpl
mov
loop
cmp
pop
xor
jne
mov
loopne
sub
popa
pop
jb
lret
mov
sti
insl
xchg
lret
loopne
movsl
movsb
add
xchg
imul
stos
repnz
sbb
fcoml
outsl
fadd
push
push
ror
jns
inc
push
jl
into
test
lods
push
mov
adc
pop
ljmp
jb
push
cmp
xchg
out
cmp
pop
mov
xchg
rcll
shll
mov
sub
cmp
cmp
sub
xchg
xorb
cmpsl
mov
fmull
sbb
enter
sub
cmovne
test
adc
mov
xchg
outsl
pop
js
scas
mov
mov
pop
out
movsl
leave
hlt
ja
mov
push
and
and
mov
ret
clc
sub
jmp
or
xchg
insl
fisubs
in
in
repnz
jns
ja
cmc
mov
sub
les
popa
and
movsb
jae
jecxz
ss
dec
lret
in
dec
test
movsb
into
or
mov
bound
in
and
add
sub
dec
xlat
dec
leave
shr
cmc
loope
cli
testl
mov
jg
add
int3
pop
jge
nop
dec
mov
pop
jo,pn
add
lret
or
mov
das
and
mov
sbb
cmpsl
push
inc
stos
xchg
xor
fwait
in
jne
loope
xchg
add
mov
sub
mov
push
sbb
ss
inc
scas
mov
pop
cmp
push
or
int3
ret
clc
xor
enter
in
inc
xor
pop
inc
scas
lcall
xor
mov
jns
pop
mov
jnp
orb
insb
push
les
or
sbb
mov
lea
faddl
negb
xor
cli
cld
adc
repz
mov
fiaddl
popf
and
cmp
push
add
and
or
into
imull
out
dec
xchg
int
fcmovb
rdmsr
lahf
sbb
aaa
scas
repz
lret
sbb
daa
fsubr
jl
lcall
xchg
lods
sbb
pop
mov
aaa
cmc
sbb
mov
pop
dec
lock
fsts
stos
mov
mov
pop
inc
xor
sbb
mov
xchg
mov
loope
fisubrl
daa
sahf
fldcw
jb
or
cmp
lock
rcll
mov
pop
mov
shl
fistpl
push
loope
mov
sbb
add
lahf
mov
cmp
add
xor
test
jne
cmp
push
cmpsb
xor
sti
dec
lods
in
sub
sbb
pop
push
int
out
shl
or
cli
cmp
jb
mov
sti
inc
mov
mov
add
sbb
jae
pop
mov
sub
es
pop
daa
jae
out
ficompl
pop
bound
mov
out
cwtl
into
and
push
stc
lea
repz
cmp
cs
ljmp
dec
ds
or
push
adc
cmp
xchg
ja
mov
xchg
rclb
lea
std
cmp
inc
out
fwait
aaa
lods
adc
adc
call
or
subb
adc
mov
inc
test
push
adc
xor
sbb
mov
loopne
jecxz
adc
sub
pop
hlt
call
cmp
mov
popf
mov
out
sete
and
les
cmp
gs
xor
and
xchg
addr16
cmc
sbb
xlat
jb
xor
hlt
cmc
and
in
sbb
ret
jnp
nop
sub
mov
cmpsl
adc
popf
cs
lret
nop
inc
and
scas
int3
sub
jp
ds
in
push
push
add
dec
add
push
sbb
dec
jae
nop
adc
jmp
or
pop
mov
jne
xchg
mov
mov
dec
adc
out
pop
adc
fistpl
sub
pop
or
pop
dec
popf
lock
and
ror
adc
push
fistps
jge
fwait
push
xor
scas
xor
xchg
test
hlt
cmp
mov
mov
ljmp
jnp
dec
aad
les
xor
or
mov
arpl
xchg
inc
aad
push
outsb
dec
mov
push
test
lock
push
mov
lods
jne
cmp
jns
stos
lahf
or
mov
add
push
lcall
call
in
std
pushf
add
jl
push
mov
jl
andl
out
adc
cmp
mov
in
adc
ljmp
pop
push
mov
adc
loop
push
inc
push
ljmp
xchg
push
outsl
pop
cmc
xchg
lret
outsl
sbb
cwtl
enter
xchg
xor
and
les
or
or
lcall
sarl
or
push
arpl
and
xchg
fists
push
roll
dec
dec
jo
repnz
sub
test
sub
test
cmp
cs
mov
aaa
cmp
mov
or
leave
sarl
ljmp
js
sub
mov
pop
lds
sub
and
shrb
loop
icebp
mov
jmp
insb
or
daa
mov
lea
inc
aam
int3
popf
rolb
lea
ja
outsl
rorl
sub
dec
sub
sbbl
out
ss
sbb
sub
jnp
mov
jo
sti
or
sub
sub
cmp
in
icebp
cs
inc
jmp
xchg
add
xchg
inc
push
fcoml
pushf
fldenv
cmp
ds
add
push
fstp
xchg
or
adc
push
sub
mov
insb
or
jp
add
xchg
adc
cmp
sbb
push
insl
ret
lock
shrl
ficoms
call
jnp
sbb
jae
cli
outsl
sbb
sub
fcoms
loopne
int3
rcrb
mov
mov
addb
cmp
adc
xor
pop
mov
jl
pop
xchg
pop
xlat
imul
xorb
lret
pop
lcall
inc
fistps
dec
sahf
mov
addr16
fcompl
mov
es
lock
jbe
shr
cmp
insl
repnz
fs
dec
gs
out
addr16
mov
js
adc
xchg
mov
das
adc
cmc
stc
popf
lods
pop
sti
inc
push
fidivs
lds
xchg
fdivs
fwait
movsl
dec
push
cs
test
int
bound
or
out
cmp
jp
add
jl
mov
in
in
jmp
loopne
mov
fldcw
cmpsl
or
or
outsb
push
mov
sub
xchg
inc
lret
lods
xor
jecxz
pushf
loop
cmpsl
xchg
mov
pop
sbb
mov
ljmp
adc
push
ds
sub
dec
and
sbb
mov
pop
add
sbb
fcmovnb
dec
mov
push
rcl
cmp
es
sub
and
rcll
push
xor
jne
xor
mov
sbb
test
iret
sbb
pop
cmp
and
inc
ret
inc
inc
pop
movsb
mov
inc
jno
or
orl
mov
mov
andb
call
fsubrl
or
icebp
ds
clc
mov
out
inc
js
cmp
inc
sahf
into
mov
popf
push
es
add
mov
fsubl
add
cmp
inc
lods
fcompl
les
push
mov
pop
loopne
push
cwtl
or
enter
movsl
divb
xchg
pop
xchg
jle
aad
xchg
jl
or
xlat
sub
add
jns
mov
mov
cld
xchg
xchg
sarl
xchg
jp
push
call
cwtl
out
inc
sahf
inc
cmp
pop
dec
mov
inc
lock
in
xchg
pop
inc
push
shlb
mov
pop
sbb
arpl
cmp
and
pop
inc
mov
cmp
push
sahf
mov
mov
ficompl
push
das
popf
subl
les
subb
mov
jle
push
out
and
cmp
clc
fsubrs
mov
dec
sbb
addb
adc
decb
xchg
gs
pusha
inc
cmpsl
pop
dec
outsl
mov
jl
data16
push
das
icebp
mov
jo
dec
xchg
mov
push
insl
fistpll
jmp
addr16
dec
cltd
lret
dec
adc
dec
mov
sub
das
cmp
shl
push
or
push
push
aad
push
cwtl
dec
jo
dec
ja,pn
sbb
jmp
xchg
fstpl
addr16
nop
out
aad
sub
insl
js
hlt
or
clc
dec
xchg
sbb
fs
outsb
les
push
dec
imul
sbb
pop
inc
cli
lahf
mov
in
pop
cmp
mov
cmpsb
and
mov
in
and
push
pop
data16
aas
in
lods
sub
mov
push
pop
icebp
lods
xchg
add
mov
idivl
scas
xor
dec
outsl
add
incb
cmovnp
inc
dec
pusha
pop
jo
mov
jne
mov
and
mov
imul
jge
or
jl
sbb
xor
pop
cmp
pop
xor
idivb
popf
dec
and
push
add
dec
and
std
fdivs
stos
scas
test
ja
push
push
mov
mov
xchg
jns
lcall
jecxz
dec
sbb
mov
and
addr16
mov
mov
mov
hlt
mov
insl
jecxz
inc
popf
stc
stos
and
scas
add
ss
lock
xchg
movsb
adc
dec
and
mov
jge
inc
sbb
add
out
cmp
jbe
jg
inc
dec
decl
cli
adc
mov
insb
jle
inc
ja
movsb
cwtl
sarb
out
and
inc
lock
scas
cmc
mov
mov
bound
imul
add
or
adc
in
pop
cmp
fistpl
loop
push
shlb
and
dec
push
hlt
pop
pop
jmp
pop
int
addl
out
pop
pop
or
fnstcw
and
dec
scas
dec
popf
pop
pop
fiadds
pop
adc
xchg
or
popa
and
jo
imul
inc
xchg
push
inc
scas
out
lods
mov
pop
fstps
mov
jp
sbb
fcomip
or
scas
das
les
shrb
ret
xor
in
inc
mov
test
jl
in
fsubrl
add
inc
cmpb
ds
scas
mov
outsl
leave
jnp
out
fdivr
jae
jbe
bound
shll
pop
xchg
jns
stc
lds
jg
aaa
repnz
pop
lods
call
add
mov
jno
icebp
sub
popa
loop
dec
test
inc
jge
stos
fistpll
pusha
inc
jns
xchg
push
lahf
ljmp
jne
inc
push
dec
push
aas
pop
and
scas
in
pushf
stc
xor
ror
mov
dec
ja
push
inc
fnstsw
push
xor
dec
dec
stos
jle
js
clc
std
push
adc
addr16
xchg
insl
inc
xlat
mov
inc
push
mov
cld
stos
mov
xchg
call
push
out
xchg
imul
enter
lds
push
mov
pop
inc
sbb
les
punpckhdq
jne
arpl
sbb
pop
fwait
jae
nop
repz
mov
sub
insl
lret
push
imul
mov
and
push
add
sar
into
fwait
cmpb
mov
mov
pop
push
int3
or
mov
into
lret
cltd
mov
sub
adc
orb
in
lods
mov
push
xchg
adc
stos
daa
ficompl
das
outsl
into
scas
cld
jl
adc
divb
nop
pop
and
lock
add
push
cmp
xor
mov
clc
fsubrl
or
xor
sub
cmp
mov
inc
lods
imul
call
jno
lds
and
mov
sub
push
inc
jno
ja
stos
xor
mov
adc
mov
or
xor
xor
sub
aaa
out
les
add
jp
jb
ds
int
nop
cmpsl
orb
sahf
inc
mov
fsts
ret
es
adc
xchg
addr16
loope
jae
test
rclb
ret
push
nop
pop
inc
lahf
mov
mov
mov
mov
cmp
enter
mov
jl
gs
es
jmp
dec
mov
add
mov
hlt
push
xlat
shrb
jo
push
in
sbbb
lods
sbb
outsl
mov
xor
cld
in
mov
std
dec
mov
std
adc
and
adc
loopne
sub
movsb
out
dec
mov
and
pop
xchg
jl
cmp
mov
cmp
push
mov
xchg
sbb
jno
push
sahf
clc
ret
scas
mov
push
dec
adc
insl
test
daa
inc
ret
fwait
and
stc
lock
sub
das
roll
jno
pop
lods
push
fs
pusha
xchg
andb
mov
cmp
lret
inc
jmp
cmpsb
mov
xchg
xor
add
inc
cmc
adc
shlb
cmc
in
je
addr16
test
or
dec
jns
or
dec
sbb
in
jg
roll
mov
push
cmpb
rorl
dec
cmpb
cmp
sub
mov
out
adc
int
push
inc
sbb
cmp
mov
xchg
outsl
fildll
push
xor
jo
ljmp
or
add
jp
cmp
adcb
inc
clc
inc
pusha
push
fidivl
add
mov
out
cwtl
or
inc
and
jno
xor
sbb
hlt
xchg
mov
mov
mov
push
xchg
ja
sub
xchg
movsl
mov
dec
inc
add
sti
pop
jle
lods
cs
pop
shl
xchg
mov
xchg
mov
ret
daa
mov
loope
xor
adc
dec
mov
pushf
sub
dec
adc
lahf
enter
call
xcrypt-cfb
cmpsl
loope
mov
mov
ja
int
xchg
mov
and
cwtl
sbb
cmp
mov
ja
loopne
and
fs
test
mov
and
mov
push
xor
sbb
out
cmp
add
add
adc
mov
cltd
and
mov
sub
scas
jbe
in
jge
xchg
lcall
pop
pushf
mov
fsub
shll
stc
cmp
jb
mov
push
adc
adc
ss
ret
lods
mov
and
push
mov
mov
xchg
hlt
popa
fwait
mov
push
mov
pusha
fcmovnb
arpl
or
loope
sbb
mov
insb
fstpt
cs
loop
lds
xchg
imul
sbb
loop
shlb
xchg
fistl
add
mov
test
add
inc
test
stos
inc
push
mov
and
sti
fisubs
scas
into
filds
dec
mov
add
into
inc
out
pop
inc
hlt
or
pop
dec
into
mov
push
repnz
pop
lret
sub
insl
nop
arpl
rclb
mov
adc
or
subl
lods
fld
rorb
mov
iretw
jns
fisubs
cs
add
inc
imul
fisttpll
and
jp
mov
stos
cmc
test
or
pop
push
xor
push
mov
sarl
or
rcrb
sarl
xor
mov
sbb
sahf
inc
cmpl
stos
mov
mulb
add
cmp
dec
lahf
sbb
adc
mov
fidivl
and
or
int
jae
xor
push
out
push
dec
les
pop
scas
cwtl
pop
lcall
sub
push
cmp
out
ficoml
loopne
jle
xor
pop
or
and
push
lret
jns
jne
adc
mov
stos
lods
dec
iret
shll
push
ds
repz
test
mov
mov
fildl
in
mov
adc
dec
adc
sub
push
sti
mov
enter
jge
bound
or
mov
sbb
cli
mov
out
sbbb
mov
and
adc
test
movzwl
add
adc
pop
lods
mov
ja
mov
xor
popf
cmp
sbb
cmpl
ret
out
lea
xor
or
xor
add
call
push
cmp
pop
repz
push
push
dec
imul
aas
dec
cmp
xchg
or
orl
cmp
dec
hlt
out
sti
in
inc
addb
lock
ret
mov
cmp
aas
inc
jp
mov
inc
cmpsl
das
and
sub
repz
cmp
int3
cmp
push
hlt
and
int
mov
inc
mov
cmp
adcl
dec
add
xor
mov
pop
out
leave
dec
hlt
cmpsb
aad
cmpl
insl
xchg
fwait
enter
sbb
push
mov
ror
jbe
mov
cld
and
out
mul
loop
sub
jae
mov
or
test
adcb
pop
mov
lock
add
fldl
xor
insb
sarb
test
mov
lret
shll
std
popf
ss
into
xchg
jnp
and
jl
pop
icebp
inc
rcrb
inc
cmp
fs
test
in
int3
out
dec
add
je
adc
ret
into
push
orl
pop
shr
cmp
rclb
mov
mov
mov
push
add
cmp
xchg
pop
xchg
test
scas
mov
or
push
mov
cli
vmwrite
lods
imul
xor
insl
sahf
mov
nop
push
data16
xor
cmp
insb
addr16
jmp
mov
stos
lods
outsl
into
mov
scas
sar
shrl
rorl
mov
inc
lods
cli
int
push
aaa
mov
insb
push
pushl
ret
mov
cld
or
xor
test
mov
mov
imul
into
pop
sbb
repz
les
call
loopne
and
mov
adc
sbb
jbe
sub
pop
push
dec
xchg
jnp
test
inc
out
es
mov
daa
leave
gs
lock
add
cmp
cmp
inc
testl
xchg
add
out
bound
dec
mov
sahf
flds
or
adc
rolb
std
jne
cmp
mov
pop
sbb
cmp
sub
icebp
and
out
push
inc
inc
sub
test
ss
pop
dec
mov
outsb
mov
inc
test
inc
mov
arpl
js
or
js
mov
mov
inc
in
icebp
mov
das
es
shrl
enter
or
mov
hlt
add
cwtl
scas
es
inc
xor
adc
fisttpll
adc
adc
out
cli
subl
sahf
inc
add
and
adc
pushf
arpl
xchg
jle
inc
ja
scas
pop
in
imul
adc
mov
dec
jne
xor
shlb
cmp
sub
lock
pushf
jno
data16
add
sub
mov
ret
adc
jnp
rcrb
or
test
mov
outsl
shrb
lea
xchg
cmp
lahf
push
rclb
loopne
data16
gs
pop
scas
and
mov
sbb
inc
xchg
lock
ds
mov
sub
xor
inc
dec
mov
dec
add
out
sub
movsl
scas
cmp
mov
jl
or
xor
out
push
add
ss
out
insl
dec
or
inc
and
cmp
sbb
addr16
pop
cmpsl
jl
jo
mov
add
iret
sbb
hlt
pop
wrmsr
loop
xor
pop
xchg
add
mov
add
ljmp
mov
xchg
imul
mov
sbb
test
xor
sar
push
out
fimuls
movsl
mov
dec
repz
fildll
aam
inc
dec
pop
movsb
jnp
icebp
jecxz
xor
stos
add
test
mov
mov
mov
aas
dec
add
or
jns
jle
or
cmp
inc
pop
xlat
dec
push
adc
xchg
jnp
pop
out
xor
enter
inc
xchg
mov
xlat
jg
stos
or
xlat
xchg
adc
scas
or
int3
sbb
in
enter
pop
xchg
lds
sqrtps
push
call
stc
dec
fcomps
cmpsb
pop
xor
dec
out
jae
in
xchg
push
push
and
add
inc
xchg
mov
or
inc
push
mov
cmp
cmpsl
push
addr16
push
enter
inc
xchg
add
fwait
or
jmp
jae
add
imul
out
lret
push
sbb
repnz
cmp
dec
rcll
xchg
push
pop
push
loopne
in
sti
test
arpl
insl
gs
les
fldt
mov
cmc
aas
mov
or
jno
xor
movsl
cmp
addr16
push
mov
push
jb
inc
shl
push
dec
dec
sbb
pop
sub
sub
ret
std
les
mov
mov
dec
fwait
pop
negb
dec
decl
or
inc
sahf
add
xor
xor
xchg
fdiv
sti
adc
dec
daa
insb
outsb
pop
push
sarl
stos
scas
outsb
int
jo
aaa
nop
dec
push
mov
movsb
jl
mov
adc
dec
mov
or
sub
xchg
sbb
adc
frstor
mov
pop
and
pop
cmp
mov
rorb
mov
xchg
insb
pop
cmp
dec
cmc
dec
add
jp
mov
or
notl
rorl
xchg
or
je
push
lock
sub
out
push
xor
inc
fwait
pop
orl
jns
pushf
ret
or
add
xchg
mov
imul
push
scas
ja
jns
sbbb
cmc
pop
jecxz
leave
jbe
loope
push
cmp
gs
mov
xor
shlb
ret
shlb
inc
pop
cwtl
pop
sub
pop
jp
push
mov
sub
stos
popa
adc
std
movsb
add
inc
cmc
ficoms
into
add
xor
rolb
jmp
in
popf
shlb
lret
dec
mov
enter
push
push
rcl
cmp
and
repz
push
fcomps
pop
push
fdivrs
adc
cwtl
addl
and
and
or
addr16
mov
add
cmp
sbb
dec
sub
dec
gs
and
push
inc
pushl
ds
push
jno
lods
int3
orb
insl
lods
push
mov
inc
ss
push
mov
mov
jecxz
mov
xchg
cltd
mov
daa
test
nopl
sar
stc
xchg
or
in
sbb
mov
pop
mov
lods
rorl
scas
push
lds
pop
shlb
jmp
xlat
stos
or
clc
xchg
in
popf
aad
xchg
lcall
lods
push
lods
gs
outsb
cmp
or
sub
es
es
lret
mov
sub
lret
sti
and
lds
sar
hlt
andb
mov
popa
and
hlt
mov
xor
dec
mov
xor
sub
movsb
icebp
adc
daa
out
lahf
pop
or
test
jnp
mov
mov
lea
popf
int
mov
sub
add
scas
aad
xchg
add
pop
and
pop
jp
loop
pop
fwait
int3
inc
dec
inc
push
jne
mov
fwait
popf
add
cmp
lahf
xor
lock
test
shlb
jnp
icebp
add
insl
push
pop
xor
movsb
int3
sub
inc
addl
xor
test
sub
rcll
lods
js
loop
and
sbb
jmp
popa
adc
pop
int
das
enter
repz
xor
mov
pop
sbb
fsubrs
nop
inc
js
notb
divb
shl
fsubr
cmp
jns
daa
icebp
add
jmp
decl
cli
and
sbb
sbb
push
xor
dec
cmp
adc
in
rorl
inc
lds
addr16
cmpsb
dec
jns
mov
enter
pop
stc
lea
push
or
jl
sub
pop
or
add
fdivr
push
enter
enter
jns
dec
in
loopne
pop
xchg
push
inc
es
test
adc
add
mov
into
ret
test
mov
adc
cmpsl
aas
jl
adc
cmc
xor
xor
loope
and
and
out
and
sub
push
test
fimull
pop
fs
xchg
addr16
xchg
cmp
mov
fmuls
push
mov
outsl
out
mov
pushf
mov
imul
pop
sub
jnp
inc
xor
xor
and
or
adc
or
pmuludq
xchg
sub
push
lcall
rorb
xchg
mov
aas
das
push
scas
mov
jecxz
jg
jne
fwait
ds
dec
sbb
arpl
or
cmc
loop
js
push
jne
pop
insb
xor
xchg
icebp
pop
clc
mov
sbb
pop
sub
inc
push
add
imul
enter
notl
mov
lahf
mov
adc
orl
scas
jns
nop
fwait
and
lahf
sub
or
xchg
cmc
jno
xor
mov
jmp
mov
or
push
stos
fcoml
cs
sbb
imul
mov
in
ljmp
fstpt
add
xchg
enter
mov
std
fmuls
dec
xchg
pop
mov
sti
mov
int3
jno
jle
rcll
adc
sbb
pusha
sbb
adc
mov
ret
mov
imul
mov
mov
roll
jle
push
popf
ljmp
mov
mov
mov
scas
adc
xchg
fisubrs
cwtl
and
and
cmpsb
sbb
inc
inc
mov
xchg
scas
mov
cmpb
and
mov
les
push
dec
xchg
fwait
cmpsb
dec
adc
ss
mov
scas
in
xchg
repnz
or
mov
ss
fadds
sbb
rorb
xchg
call
int
sbb
jns
pop
test
mov
fdivrl
mov
push
mov
cs
aas
pop
xchg
movsb
xor
and
dec
pop
or
arpl
aam
mov
aad
imul
js
xor
dec
scas
mov
dec
jbe
sub
shl
ret
lds
and
lret
pop
xor
sbb
pextrw
jle
bnd
jge
fcomp
inc
pop
adc
xchg
mulb
and
loope
std
xchg
sbb
jns
cmpsb
jle
mov
hlt
dec
and
xchg
das
lret
xchg
dec
movsl
cmc
ret
inc
push
inc
xlat
mov
test
shrb
mov
cmp
pop
pop
jp
mov
or
es
dec
pop
ret
aam
mov
mov
stc
and
roll
sbb
cmp
pop
idivb
push
pop
sub
mov
sbb
stos
add
aad
cmp
in
ret
sub
xchg
mov
fwait
push
pop
ljmp
sarl
cli
dec
test
sbb
scas
test
sub
in
pop
cs
jmp
pop
fnstenv
jbe
lock
inc
in
hlt
jmp
popa
fldcw
cld
and
push
lret
jae
sbb
adc
push
fmuls
shrb
push
test
sub
jns
mov
jl
imul
scas
xchg
pop
sbbl
push
add
lret
sahf
push
loopne
inc
mov
mov
std
jno
mov
cli
popa
idiv
repz
inc
ds
andb
repz
push
iret
mov
and
xchg
sar
lock
push
mov
ss
fs
adc
adc
pop
gs
movsl
es
jg
push
test
mov
pop
lods
stc
inc
fdivrl
outsl
arpl
sbb
aam
pop
sub
adc
shlb
xchg
push
push
xchg
cmpsb
imul
xchg
pop
lret
mov
scas
add
incl
inc
push
sarl
lds
leave
daa
push
rclb
inc
fwait
fwait
lcall
ljmp
jp
add
out
fstpl
xor
xor
cmp
outsl
cwtl
sbb
pop
pop
aad
pop
jbe
and
stos
jbe
cli
leave
in
out
add
les
dec
or
xor
scas
dec
mov
xchg
mov
pop
shll
jmp
inc
sbb
je
jl
sub
pop
in
cmpsb
icebp
jl
test
pop
test
inc
shlb
addb
stc
popw
leave
lea
xchg
mov
mov
mov
cmpsl
fmul
mov
add
mov
inc
mov
jbe
lea
leave
dec
sbb
cmp
sbb
stos
add
jmp
dec
cld
push
test
nop
jne
sub
sbb
movsl
xchg
push
cmpsb
cld
cltd
sbb
stc
xchg
mov
mov
or
and
test
jle
daa
bound
js
sbb
cmp
inc
inc
ljmp
arpl
xchg
adc
pushf
dec
orb
fistps
daa
in
push
or
xchg
jp
in
int3
cmpsb
sti
jmp
jne
in
jg
cwtl
test
add
cld
cld
push
stos
repnz
adc
lret
xor
iret
jg
lods
rcrl
lret
mov
push
dec
xchg
aad
sub
mov
adc
xchg
jecxz
out
sbb
arpl
rorb
lcall
jmp
fdivrl
repz
mov
adc
les
fwait
repnz
add
jl
out
pop
scas
dec
sti
ljmp
stc
dec
std
in
or
inc
ret
sub
insl
mov
call
bound
pop
outsb
sbb
xchg
adc
mov
sbb
xchg
mov
dec
out
inc
cmpsl
mov
jnp
push
mov
loop
les
xchg
or
mov
add
sub
popf
ret
jo
out
jae
xor
jl
ret
test
and
cmp
rcr
jne
pop
jo
shll
icebp
xchg
push
bound
gs
add
sarl
arpl
out
mov
mov
and
xor
cltd
leave
mov
cmc
iret
sbb
dec
adc
mov
jmp
sub
mov
sti
mov
jo
mov
sbb
mov
xlat
outsl
dec
es
xchg
loope
pop
mov
or
add
leave
stos
cli
and
jne
testb
cmpsl
cmp
filds
cltd
test
adc
xchg
popa
inc
jne
xchg
mov
aaa
outsl
xor
sub
in
jns
cmc
jp
cmp
mov
out
shl
icebp
pop
stc
pop
sbb
cld
jbe
or
mov
mov
icebp
jnp
mov
and
insl
cld
inc
and
jmp
ret
dec
sbb
push
push
cli
push
sub
xor
mov
data16
in
xlat
outsl
subl
lret
xor
push
pop
and
mov
cmp
cmp
sbb
fisubrs
mov
pop
sbb
mov
push
ftst
fsubrl
mov
cmpsl
pop
sbb
or
leave
dec
dec
or
aad
jbe
cld
pop
sub
sbb
lret
cmpsl
popf
pop
gs
mov
cmp
fs
scas
mov
inc
cmp
cmp
pop
loop
push
jg
mov
sbb
pushf
and
xchg
and
cmpsb
test
cmp
ja
fadds
sub
mov
aaa
adc
adc
imul
push
loop
dec
xchg
push
dec
clc
xchg
popf
divb
sahf
mov
jae
pop
and
aad
jmp
jae
push
cmpsb
mov
cmp
rep
inc
ret
hlt
fsubrl
dec
adc
pand
shrl
push
xchg
and
mov
mov
fistps
lds
xchg
mov
mov
mov
pop
xchg
dec
emms
out
xlat
in
mov
and
xor
cwtl
cmpsb
jp
inc
adc
lods
out
fbld
mov
mov
adc
loope
imulb
sbb
xchg
mov
fldenv
jnp
out
aaa
jl
dec
sbb
cmpsb
inc
mov
mov
outsl
es
dec
cltd
lret
lea
out
cmpsl
mov
add
xor
negb
cmpsb
ds
jb
push
movsl
or
popf
mov
mov
rol
mov
pop
arpl
jae
mov
movsl
push
mov
cmp
sub
test
daa
subl
jp
imul
cmp
sub
xchg
mov
jecxz
jno
aas
aaa
push
xchg
fimuls
subb
sbb
pop
repnz
cld
shrl
mov
push
scas
sbb
std
inc
pop
pop
xchg
ljmp
mov
imul
inc
aam
sub
pop
mov
fdivl
popa
and
push
or
cwtl
mov
jns
aaa
push
xchg
pop
or
add
xchg
mov
jge
mov
mov
inc
push
mov
hlt
loop
or
xor
mov
jge
out
push
xor
int3
sub
fistl
in
cmp
fdivp
lods
cmpl
pop
jl
xor
push
lock
pop
push
dec
mov
sahf
push
cmp
arpl
test
popa
aam
jbe
mov
and
nop
cli
dec
sub
push
inc
test
jl
fsubrs
mov
or
hlt
test
cmp
lods
mov
mov
popa
es
jmp
aaa
or
sbb
andl
adc
sbb
loopne
dec
shll
or
sti
mov
mov
mov
shr
pop
ds
call
sub
loop
inc
enter
and
cli
push
clc
and
leave
data16
dec
jecxz
sub
aas
sarl
es
in
cmp
xchg
and
mov
mov
cmpsb
mov
mov
inc
repz
adc
fmulp
stos
sub
mov
adc
fsub
call
cmp
xor
call
xchg
fxch
addb
insb
iret
and
pop
das
fiaddl
xor
lret
pop
clc
test
ffree
jl
int3
sahf
mov
cwtl
xor
or
mov
dec
fildll
dec
mov
push
flds
aas
or
mov
mov
scas
lcall
fisubrl
mov
mov
xchg
sbb
stos
jecxz
int
cwtl
or
inc
or
mov
imul
sub
sbbl
jmp
push
xchg
std
inc
das
hlt
out
or
adc
add
lock
mov
sbb
je
lds
mov
into
dec
mov
pop
mov
inc
ds
jle
jae
mov
mov
scas
dec
clc
ds
insl
xchg
lock
in
mov
ret
pop
popa
popl
fidivrs
xchg
loope
in
mov
js
out
rcrb
cs
and
mov
sbb
movsb
xor
ds
xor
sub
sarl
sbbb
mov
cmp
lods
mov
faddl
mov
mov
mov
pop
mov
sbb
mov
into
dec
nop
xstore-rng
cmpsl
xorb
cmp
lret
shl
and
xchg
movsb
aad
jb
je
pop
aaa
outsb
dec
pop
fadd
push
cltd
jge
mov
jno
fdivs
jl
pushl
lahf
pop
add
sbb
inc
sti
imul
icebp
mov
push
mov
lret
nop
mov
sub
stos
mov
cli
add
mov
jbe
das
xor
cwtl
mov
sarb
addr16
testb
mov
push
in
sbb
and
or
fwait
adcb
cmpsb
mov
push
mov
inc
mov
dec
pop
ds
xchg
shlb
cmp
or
inc
mov
cld
pop
and
inc
aaa
bound
cwtl
cmp
push
iret
cmpsb
or
dec
ret
inc
sar
out
pop
rcrl
jl
and
fnstenv
cmp
cld
andb
xor
daa
ss
addb
bound
push
adc
mov
inc
icebp
shl
fdivl
jl
das
in
lea
jb
ja
repnz
in
fwait
jne
mov
leave
mov
loop
pop
mov
push
sub
xchg
push
cltd
inc
imul
mov
movsl
jge
imul
inc
hlt
aam
mov
and
pop
push
in
xor
inc
jbe
add
ror
jo
stos
hlt
adc
mov
and
rorl
push
pusha
cmpsl
push
mov
sub
push
and
outsb
mov
mov
adc
xchg
xor
mov
nop
negl
pop
push
aad
cmp
subl
mov
or
inc
push
push
jo
test
repz
lret
scas
imul
iret
jecxz
inc
movb
orl
or
push
cmp
jp
test
inc
in
push
mov
aam
int3
int3
ucomiss
sahf
outsl
fbld
mov
push
jnp
mov
jmp
and
inc
clc
dec
sbb
sub
inc
mov
cmp
xlat
iret
xchg
mov
dec
movsb
insb
inc
out
fdivrs
jae
test
mov
or
fimull
ret
cli
mov
pushf
clc
jno
in
lea
in
ret
lock
mov
incl
shld
xor
sahf
mov
cwtl
test
jmp
fidivrs
push
cmp
sbb
fsubr
popa
jl
inc
adc
xchg
ret
insl
xadd
stc
xchg
insl
inc
lock
mov
sti
and
dec
in
rcrl
negl
or
rep
enter
or
ljmp
dec
xchg
push
jns
popf
cmp
cmp
sbb
mov
cmpb
sbb
xor
int3
repnz
pop
add
jg
push
imul
xor
sub
mov
push
lods
mov
mov
and
fadd
jne
out
fcomip
sub
mov
sti
mov
adc
xor
bound
jg
sub
int3
out
les
jne
rep
xlat
adcb
jp
jne
push
insl
fisubl
jmp
push
sub
xor
out
push
shrl
pop
int
bound
js
mov
jge
cmpsb
subl
repnz
mov
pop
push
sub
pop
push
xchg
jg
notb
dec
iret
bound
xor
fisubs
jno
jp
fcoms
jo
pop
pop
sub
or
mov
shrd
xor
in
mov
pop
xlat
pop
stos
push
sarb
vpmullw
inc
aam
cmp
pushf
push
roll
imul
icebp
or
dec
in
loop
cltd
inc
mov
mov
ret
mov
ljmp
sbb
lods
pop
add
sahf
push
std
or
jo
jp
adc
lods
ds
rcl
xor
loopne
je
ja
sub
mov
in
dec
ljmp
lods
add
sahf
fmull
pop
mov
fs
in
std
iret
in
pusha
dec
sbb
movsl
js
inc
and
mov
sub
cli
jle
dec
fnstcw
stos
ret
repnz
sbb
call
popf
enter
cmp
xor
or
pop
cmp
movb
or
ljmp
sbb
fwait
jae
jb
and
xchg
icebp
out
imul
push
loope
shrb
add
dec
mov
scas
adc
scas
ss
movsb
jae
loop
xorl
inc
cli
push
stos
xor
cmp
dec
or
adc
dec
in
outsl
outsl
push
cmp
push
loopne
adc
push
addr16
or
mov
mov
subl
mov
stos
pusha
popa
aas
or
mov
call
fidivrs
in
inc
repz
cmpsl
orb
outsl
dec
push
roll
cltd
fldln2
pop
shrb
sbb
cltd
mov
call
sbb
ljmp
out
fidivrl
nop
mov
xchg
rcl
mov
aas
mov
test
mov
mov
std
jno
sub
inc
loop
inc
cmp
das
xor
data16
mov
xchg
bound
pop
mov
pop
bound
jbe
pop
pop
mov
dec
mov
xlat
pop
sub
roll
cmp
push
or
cld
mov
hlt
jae
out
pop
mov
dec
lcall
int3
lcall
mov
jae
cmp
or
jecxz
sti
mov
cltd
imul
inc
adc
idiv
push
fwait
call
insl
mov
push
lret
xor
mov
gs
cmp
hlt
scas
gs
jl
dec
dec
cmp
nop
xorl
lret
xchg
imul
cs
add
test
mov
push
repz
jo
movsl
mov
jp
inc
gs
shufps
sarb
pop
das
das
rorb
clc
inc
pusha
jle
mov
test
jnp
pushf
loop
in
cmp
enter
add
adc
mov
ljmp
sbb
lret
mov
mov
es
mov
incl
loop
inc
sahf
or
bound
mov
or
dec
mov
es
cmpsb
sbb
sbb
dec
xor
sahf
push
xchg
icebp
in
idivl
in
mulps
negb
cld
gs
sub
arpl
aam
inc
ljmp
push
bound
mov
fsubs
movsb
in
mov
inc
sub
jecxz
ret
add
push
pop
imul
mov
insb
fiadds
lock
push
movsb
dec
push
sub
mov
or
aas
jecxz
aam
icebp
sub
push
arpl
bound
lahf
stos
push
enter
mov
scas
push
pop
pop
push
ret
jge
shrl
test
push
pop
pop
call
mov
cmc
sti
dec
mov
fldl
clc
add
jge
mov
subb
inc
cwtl
cld
aaa
mov
das
fdivl
add
pop
std
in
xorl
cmp
and
mov
addr16
lret
add
pop
sti
int
cli
int
lcall
jnp
add
loope
or
adc
jmp
mov
addb
adc
repz
pop
sub
adc
cs
je
xorb
shl
ljmp
imul
scas
adc
add
mov
xor
lods
xchg
pop
sbb
lods
xor
sbb
adc
pop
popf
inc
jne
std
jb
xchg
xor
or
push
ss
inc
ficompl
fs
cmc
nop
sub
imul
or
pop
xchg
loop
push
fs
dec
dec
lods
stos
lahf
out
sub
bound
mov
imul
aaa
push
push
stos
inc
xor
rorb
in
call
fistpl
lahf
call
ds
imul
push
adc
call
mov
jg
cwtl
cltd
loopne
aad
pop
cli
ss
clc
jl
lds
mov
repnz
inc
shll
in
in
icebp
mov
loop
pop
mov
xchg
test
inc
cmp
imul
stc
sarb
inc
add
insl
push
mov
ret
std
addr16
cmp
fnstsw
cmp
in
adc
cltd
and
dec
cmp
mov
adcl
test
ret
dec
nop
es
jl
aaa
outsb
jnp
lds
jnp
fldenv
dec
movsb
repz
jbe
jg
leave
push
lret
jbe
outsl
jl
push
fsubrl
in
lfs
dec
xchg
pop
mov
popa
cmp
je
sub
mov
mulb
pop
mov
ss
cltd
out
push
sbb
outsl
fdivrp
cmp
mov
or
das
roll
jge
pop
imul
mov
movb
mov
cmpsl
and
pop
addr16
push
add
fcmove
inc
inc
push
loop
mov
adc
mov
jmp
inc
push
xchg
test
iret
cmpsb
arpl
xor
sub
sti
cmp
or
loopne
adc
mov
cmp
scas
jo
xchg
test
mov
push
and
imul
andl
ljmp
outsb
pop
sbb
xor
pop
sub
mov
add
out
mov
xchg
ja
xchg
push
out
inc
outsl
xor
repnz
sub
les
jecxz
and
dec
lock
push
jb
enter
inc
xchg
adc
xchg
adc
xor
loope
sbbl
and
mov
fucom
push
xchg
popf
push
imul
jb
add
cltd
pushf
xchg
inc
imul
or
mov
pop
sub
int
cmpsl
mov
orl
cmpsb
dec
out
les
bound
inc
mov
mov
xchg
ror
adc
dec
in
xchg
push
pop
xor
add
sbb
std
repz
xchg
sub
movl
ljmp
xor
xchg
adc
dec
shlb
mov
or
pop
add
test
cmp
cld
in
in
icebp
sahf
and
stc
dec
sub
ret
cmp
test
mov
outsl
xchg
movsl
int
and
hlt
and
pop
mov
mov
xchg
pop
mov
mov
int3
je
inc
and
daa
xchg
cmpsl
cmp
test
dec
push
addr16
sti
mov
js
lds
imul
mov
or
xchg
orb
shrl
adc
jecxz
cmp
cmpsl
test
nop
xchg
and
arpl
xchg
xlat
mov
aaa
push
into
scas
inc
dec
fldl
jns
outsb
and
mov
jae
scas
mov
cmc
sbb
jl
jns
lret
daa
pop
xlat
jl
lods
popf
sbb
or
pop
sbb
loop
imul
mov
sbb
dec
lods
adc
inc
pusha
stc
lret
adc
jge
cmp
lods
dec
mov
les
push
insl
ljmp
mov
std
stos
sub
or
xchg
cld
into
add
mov
icebp
out
popa
int3
shl
pop
pop
call
push
push
lahf
sub
jecxz
jl
negb
std
xor
cld
dec
outsb
inc
movsb
les
inc
out
xorl
push
adc
jns
lea
adc
fidivrl
test
lahf
jns
add
leave
mov
mov
xor
iret
cmp
fnstsw
push
mov
and
dec
lock
ret
test
int3
mov
repz
fs
xchg
lock
rorl
fwait
aaa
cwtl
movsb
rcr
add
inc
or
rorl
mov
sbb
mov
pushf
out
mov
fcompl
aad
pop
stos
xlat
scas
aaa
xchg
shlb
lcall
std
push
shlb
mov
mov
inc
push
ret
add
stos
sbb
jecxz
rcrl
dec
out
adc
or
cmp
dec
out
test
out
rolb
repz
jg
scas
test
cld
shlb
into
enter
arpl
je
xchg
xchg
loopne
mov
cmp
sub
in
inc
loope
insl
stos
or
sub
je
dec
jmp
adcb
js
loopne
xchg
outsl
xchg
cmp
shlb
cmc
bound
cmpl
psrlw
inc
mov
mov
call
inc
jae
aam
push
imul
push
shrb
lret
mov
addr16
cmp
bound
or
add
int3
popf
mov
and
in
jnp
pop
fwait
push
loopne
push
cs
outsb
jle
push
ret
nop
cmp
adc
bound
or
popf
loop
movsl
aaa
push
arpl
fdivrs
adcb
call
inc
cmp
xchg
fwait
push
in
dec
jb
jp
iret
jle
sub
dec
lret
sbb
ja
mov
pop
aam
jo
sbb
pop
xor
cli
mov
mov
ss
out
std
outsl
cmpsb
hlt
hlt
fcomps
xchg
jge
adc
dec
idiv
or
pop
mov
cwtl
push
mov
cmpsb
sahf
jl
mov
xor
dec
xor
jbe
and
sahf
jne
lods
fdivs
dec
leave
cmp
stos
cmp
sbbl
jne
mov
rcrl
mov
sub
dec
stos
outsb
sub
cs
sbb
arpl
ud1
sub
jb
stos
jae
mull
out
jp
loop
frstpm(287
stc
mov
or
pop
aad
outsl
jge
inc
and
jg
pop
xor
pusha
lds
dec
sbb
stc
stos
js
cli
dec
int
dec
xchg
push
sub
imul
aaa
imul
rorb
sbb
jl
mov
movsb
push
in
dec
ja
fs
cwtl
xchg
jl
int3
sub
pushf
mull
clts
and
cmp
mov
sbb
xor
outsb
cmpsl
fs
or
in
paddsb
pop
inc
je
push
or
and
popa
xchg
push
cltd
aaa
rolb
fstpl
sub
std
jno
push
fsubrl
ss
mov
repz
push
andl
and
nop
and
div
adc
aad
test
jp
or
jle
stc
jecxz
push
push
sbb
clc
xchg
add
imul
xlat
enter
outsl
xchg
pop
and
inc
sbb
jo
loopne
dec
std
jno
mov
test
sbb
lret
push
or
lret
xor
jmp
jb
xor
xor
in
push
loopne
mov
jb
aam
xor
add
push
pop
dec
pop
mov
inc
adc
outsb
lahf
lods
dec
shll
loop
je
cltd
cli
nop
adc
lcall
loopne,pt
inc
es
adc
clc
aas
mov
adc
jl
add
push
jmp
mov
cmp
outsl
adc
clc
stc
dec
mov
cmp
sbb
jge
push
cmp
ljmp
mov
leave
insb
xor
fstpl
xor
inc
jmp
pop
jns
adc
mov
sbb
or
les
jmp
xor
pop
cmpsb
mov
aaa
imul
loop
adc
or
jae
and
mov
fwait
pop
sub
add
jmp
sbb
jno
inc
push
add
dec
add
push
push
outsl
adc
aaa
sbb
inc
mov
sub
push
outsb
in
jb
or
and
cwtl
out
outsl
or
or
push
pop
jae
mov
cld
sbb
mov
jge
sub
sub
sahf
adc
push
insl
or
insb
or
loopne
mov
push
je
imulb
imul
repnz
push
ss
dec
mov
mov
xchg
inc
pop
add
jnp
or
test
adc
testb
dec
xchg
jle
test
loopne
adc
test
mov
out
and
pop
popa
outsb
loope
jg
aad
mov
push
pop
cmpsb
pop
pop
and
push
pop
setg
sbb
fsubl
popf
loop
dec
outsb
adc
jle
dec
sbb
test
sahf
mov
jle
sti
sbb
mov
xor
and
jp
bound
ss
insb
imul
xchg
mov
stos
pop
stc
in
jle
hlt
iret
jge
cs
mov
lcall
lret
ficoms
out
orb
stos
xchg
or
mov
popf
sub
out
push
dec
mov
cmc
shl
iret
xchg
push
mov
and
push
jmp
mov
ret
xor
mov
mov
ja
mov
jp
out
clc
adc
adc
inc
aaa
mov
stos
movsb
lea
aas
clc
aaa
push
jmp
movsb
xchg
xchg
jae
push
ret
inc
mov
test
mov
sub
loopne
sbb
hlt
mov
ret
movsl
mov
cld
dec
js
movsl
inc
pop
xchg
pop
and
cltd
dec
daa
pop
aaa
stc
outsl
scas
movsb
push
jbe
fcmovnb
sub
xchg
imul
push
int3
out
push
xchg
bound
add
cli
sti
lret
and
adc
jne
pusha
cmp
or
mov
or
lcall
popa
repnz
xor
test
inc
inc
inc
push
mov
mov
fistps
mov
jp
loopne
xor
mov
cs
ds
and
in
shll
jecxz
into
aad
cs
mov
imul
cs
inc
dec
xchg
fisttpl
or
jp
or
add
scas
jmp
out
popa
pop
out
push
push
in
ret
test
mov
loopne
fistps
and
jo
push
fiaddl
pop
rcrl
hlt
leave
addr16
adc
sahf
das
cmp
pop
orl
stc
or
nop
je
mov
mov
sarb
mov
std
lock
sbb
imul
jns
add
in
mov
test
shll
cmp
clc
mov
roll
rcr
pushf
or
int
dec
add
lcall
pusha
repnz
dec
pushf
cmp
xchg
outsl
adc
dec
pop
addr16
les
leave
fcomps
xchg
movsb
dec
mov
hlt
fcomps
xor
jg
clc
adc
ja
xor
cmc
mov
ja
jo
ja
fdivrs
pop
mov
imul
mov
push
jge
cltd
xchg
loop
add
mov
cmp
mov
pop
sub
fstl
repz
orl
pop
bnd
sbb
pop
sub
rep
movsb
adc
test
cmc
jl
and
sub
cli
nop
std
dec
mov
or
in
inc
ljmp
cmc
fwait
mov
inc
cli
mov
iret
cmp
push
shlb
fistl
js
mov
sbb
shlb
arpl
push
xchg
inc
scas
sub
addr16
or
shll
adc
sub
and
pop
inc
push
and
test
movb
xchg
add
sbb
dec
mov
inc
add
pop
inc
jmp
outsl
push
xlat
cmp
add
xchg
sub
ret
repz
push
loopne
or
jno
notl
lret
daa
mov
repz
sub
push
push
das
imul
adc
push
je
add
mov
inc
imul
mov
negb
xorb
adc
enter
push
insb
fildl
pop
push
mov
ss
and
jmp
xor
cwtl
cld
cltd
jmp
jo
insl
sti
rcl
adc
mov
shl
and
cmc
stc
nop
mov
mov
mov
and
lock
jns
sub
pop
xabort
sub
or
aas
repz
jns
xor
mov
mov
iret
pusha
icebp
or
push
imul
aad
fnsave
dec
pop
in
in
mov
pushl
push
shrb
add
jae
adc
cmp
movsl
into
cmp
jmp
mov
push
rorb
adc
inc
std
add
adc
mov
push
dec
loope
inc
pop
xor
push
mov
pop
jne
js
adc
inc
xchg
pop
push
insl
es
fdivp
stc
xor
xchg
popf
mov
ds
and
jecxz
pop
test
aas
jnp
ss
xchg
mov
movb
movsb
hlt
mov
mov
jns
xchg
imul
repnz
push
ret
sahf
or
xchg
sahf
lret
leave
mov
mov
popf
arpl
les
and
xor
movsb
cmpsl
and
push
sarl
fbstp
and
xor
icebp
xor
mov
sub
call
lret
fnstenv
arpl
push
xchg
mov
adc
dec
mov
pop
fidivs
pop
fisttps
push
ret
xchg
sub
inc
cltd
inc
stc
dec
bound
mov
outsl
loope
inc
out
xor
pop
cld
jl
mov
xchg
imulb
sbb
cmp
roll
mov
mov
or
mov
adc
sub
aam
pop
call
lahf
or
mov
sub
xchg
test
scas
out
outsl
dec
jl
stos
mov
mov
push
inc
jae
mov
mov
add
pop
ja
test
jp
out
jle,pt
test
sub
int3
aam
cmp
xlat
gs
lcall
ja
add
push
lahf
and
inc
xchg
les
dec
jp
mov
push
notb
std
adc
pop
push
scas
cmp
lcall
ffree
dec
sbb
jecxz
cmpsl
mov
mov
imul
test
jp
jnp
bound
and
cmpsl
jae
adc
mov
lock
test
or
push
add
ret
inc
scas
outsl
pop
bound
in
inc
loop
mov
jp
pop
in
sub
or
out
lds
sbb
pop
add
add
mov
push
andl
out
mov
inc
fwait
add
pushf
insl
pop
rorl
call
les
repnz
pop
adc
fisttpl
jg
movb
mull
cs
pusha
xorl
pop
rep
adc
cmp
xchg
mov
mov
cld
add
mov
sbb
xor
fwait
out
xor
aas
sub
ljmp
data16
xrelease
aad
pop
pop
testl
mov
fidivs
adc
loop
pop
roll
push
or
cmp
ja
cmpsl
nop
inc
rorl
rolb
int3
outsl
sbbb
dec
pop
mov
cwtl
xor
sbb
cs
mov
clc
sub
mov
sub
orl
sahf
xor
sbb
and
adc
cmp
outsl
int3
outsb
aam
cmp
add
push
cmc
hlt
sarb
int3
add
cltd
and
add
add
in
xlat
into
mov
fisubs
mov
mov
clc
sti
scas
jo
movsb
cmp
xor
mov
dec
scas
mov
lret
and
adc
jae
popf
mov
push
ljmp
cmpsl
pop
jge
mov
dec
dec
mov
pusha
xchg
or
adc
lret
loope
je
cs
sub
cmp
xlat
call
jo
jg
js
or
out
add
dec
jbe
int3
adc
fistl
and
cli
cmp
rorb
sarb
dec
ret
ja
popf
andb
ljmp
mov
clc
pop
or
cmp
icebp
shlb
jb
dec
jge
je
shr
mov
ss
pop
mov
and
in
imulb
and
jns
lret
subl
bound
into
lcall
lahf
lods
sbb
aad
sub
push
push
test
jecxz
outsb
and
jb
xchg
mov
sti
aad
inc
push
mov
xchg
scas
xlat
insl
int
and
and
movsb
fs
xchg
pop
divb
add
or
jnp
adc
lea
mov
sbb
adc
mov
inc
cmp
popa
shrb
pop
mov
cmpsl
dec
lahf
mov
call
je
jno
fs
shrl
sbb
fisubrl
push
fcmovu
sub
iret
pop
in
sub
sub
xor
lea
inc
int
inc
or
imul
lods
jmp
ds
sbb
sbb
or
lods
jbe
outsl
sub
das
ss
nop
imul
xor
stos
push
jge,pt
add
out
xchg
push
insb
lahf
xor
inc
fwait
daa
jmp
ja
inc
push
mov
xchg
mov
adc
xor
leave
inc
rolb
lock
dec
mov
adc
or
xor
xchg
push
jae
mov
adc
ljmp
imul
jb
pusha
ret
nop
sub
out
jbe
add
mov
mov
cmp
les
sbb
mov
push
mov
fldl
dec
lds
push
sub
orl
subb
jmp
cld
sbb
fistps
push
sbb
or
push
sub
xor
dec
rolb
loop
jp
lock
repnz
mov
push
aaa
push
jle
push
test
and
int3
shrb
push
imul
ss
lds
inc
add
adc
in
push
daa
push
lods
and
mov
out
jle
add
rcr
dec
pop
xchg
inc
sub
push
cld
andb
das
popa
leave
cmc
xchg
nop
sub
and
inc
push
insb
adc
sub
les
aam
nop
out
xchg
adc
clc
lds
call
pop
cmp
pop
cwtl
std
jle
pop
xchg
icebp
dec
sbb
and
cmp
enter
sbb
shrl
fcom
ljmp
arpl
xor
lods
lds
data16
cmc
mov
pop
dec
andb
inc
aam
ror
ret
stos
test
insb
sub
into
mov
xchg
cmp
inc
imul
inc
xchg
scas
movsl
sar
rorl
pop
ret
xchg
sub
push
mov
test
add
add
pop
mov
aas
subb
int3
ss
push
mov
std
xor
cmp
mov
jmp
outsl
or
xchg
stos
out
pop
mov
cmp
gs
adc
inc
push
int3
dec
mov
insl
fldcw
push
add
ds
push
push
mov
adc
xchg
xchg
xor
fcoms
and
fistps
dec
rcll
fwait
insl
pushf
shlb
add
dec
pop
sub
sub
sbb
adc
stc
fwait
inc
xlat
fdiv
jno
std
test
inc
mov
add
outsb
outsb
mov
pusha
jno
push
ss
lods
ja
mov
inc
dec
bndldx
and
inc
adcb
or
xchg
inc
adc
mov
and
cltd
je
lds
jle
aad
pop
popf
pop
addl
ret
ret
lods
cmc
xchg
dec
xor
aaa
xor
sub
movsl
fnstenv
xor
jmp
rorb
add
in
test
push
lods
roll
rcll
inc
imul
cld
xchg
push
xor
push
arpl
jno
mov
mov
mov
sub
add
shrl
jnp
sbb
rolb
sti
cmpb
push
inc
pop
mov
push
call
scas
add
frstor
mov
cli
ret
aas
pop
push
push
inc
lds
mov
das
mov
ja
shll
aas
mov
mov
dec
dec
rolb
in
sbb
pop
in
push
fmull
or
push
aas
and
mov
mov
mov
test
stos
loop
rcrb
add
xchg
jns
adc
in
jecxz
inc
dec
xor
lcall
inc
push
mov
in
push
or
xlat
aam
out
or
sbbb
in
stos
in
xor
fldenv
mov
out
fcoml
xor
inc
dec
fisubrl
jmp
push
mov
mov
mov
out
icebp
mov
es
add
mov
das
jge
lret
push
outsl
mov
mov
jnp
sbb
or
sbb
inc
mov
lahf
dec
imul
and
pop
mov
out
and
sub
jb
sub
fstps
imul
test
sahf
aad
lcall
xor
jmp
ljmp
mov
sahf
mov
sbb
les
jmp
decl
mov
jl
dec
test
push
les
sub
shrl
cmpsb
mov
stos
pop
jo
pushf
mov
loopne
pop
addr16
in
inc
or
mov
dec
or
xor
push
jecxz
jge
jo
pop
sbb
mov
mov
sti
nop
in
lcall
and
sbbb
cwtl
push
pop
enter
jae
push
adc
sbb
aam
jp
lcall
jge
jecxz
out
cmovne
push
scas
cmpl
add
pop
adc
hlt
add
outsl
in
cld
jnp
dec
in
mov
adc
adc
pop
adc
stc
xor
dec
jecxz
popl
sub
add
xor
cmp
push
xor
rcll
mov
and
hlt
outsb
xchg
pop
mov
out
lahf
scas
xlat
fs
cmp
rolb
jb
pop
or
jns
sub
xchg
jp
add
xor
movsl
stc
push
cmp
sbb
icebp
push
xchg
jbe
mov
pushf
and
daa
mov
mov
sbb
inc
add
and
lods
stos
mov
jl
push
js
mov
push
pop
sahf
add
push
sbb
cmpb
outsl
orb
inc
lahf
shlb
cmp
mov
icebp
repnz
dec
mov
movsl
stos
fldenv
std
popf
or
sbb
inc
hlt
sbbl
data16
dec
jo
push
stos
dec
pop
add
sti
mov
sbb
add
fiadds
sbb
xor
push
xchg
nop
imul
inc
setge
nop
mov
mov
test
int3
jbe
fdivs
loop
shll
out
dec
push
ss
shr
fsubrp
dec
in
or
sbb
fmull
ds
pop
fwait
stos
add
dec
sbb
fmull
adc
pop
cmp
sbb
cmpsl
ret
int
leave
mov
cs
or
mov
sbb
push
pop
jb
push
pop
pop
sti
dec
sbb
mov
sti
stos
cmp
cmp
cltd
sub
dec
inc
test
pop
mov
sub
pop
cmpsb
fldt
push
sub
shrl
xchg
or
add
repnz
mov
repnz
cmc
ret
adcl
int3
sbb
mov
aad
mov
je
sbb
bound
cmc
lock
aad
xor
addr16
fists
mov
dec
adc
ficompl
lods
sub
add
nop
scas
les
adc
clc
stos
pop
jmp
or
push
pop
inc
clc
leave
push
push
push
cmp
push
je
hlt
mov
adc
inc
push
scas
imul
ret
inc
push
jb
adc
add
mov
insl
cmp
pop
arpl
and
mov
fcompl
dec
vmulpd
shll
mov
pusha
stos
mov
lret
adc
xchg
repnz
pop
jae
add
adc
in
mov
add
or
inc
out
inc
iret
xorb
xchg
repz
test
mov
sub
push
add
adc
cmp
jp
dec
lahf
fcomps
push
idivl
out
pushf
push
jns
cld
enter
cmpl
push
and
dec
mov
cmp
mov
mov
bound
sbb
hlt
sbb
fnstenv
test
jg
xchg
mov
in
es
or
fucom
add
fcmovnb
xchg
and
sub
mov
mov
push
pop
dec
mov
xor
in
sub
jo
jae
in
clc
scas
mov
fs
lret
mov
cmp
push
hlt
out
inc
mov
or
or
or
lods
push
repnz
xor
aaa
sub
out
mov
or
jmp
aam
jg
pop
sbb
xor
jmp
add
mov
mov
mov
loopne
fwait
and
mov
xchg
fwait
inc
lea
xor
cld
popf
pop
fisubl
xor
orl
cmpb
jmp
pop
sbb
adcb
test
addl
lock
negl
add
adc
mov
aam
icebp
out
mov
sub
andb
sti
popa
fwait
test
fwait
push
cmp
ret
rcrl
cs
jg
sbb
inc
js
mov
jge
mov
cmp
cmpsl
and
dec
and
ljmp
outsl
add
insl
xchg
ja
jb
shl
mov
push
dec
scas
pop
ljmp
jb
pushl
fstl
addr16
repnz
test
pop
arpl
pusha
mov
in
pop
bound
pushl
add
fimuls
bound
loope
daa
mov
xor
aaa
std
test
push
add
lret
mov
push
and
aaa
mov
jl
sub
je
outsl
lock
ret
ljmp
out
or
xchg
add
xchg
mov
or
pop
dec
popf
cld
ja
add
daa
xlat
sbb
int
mov
push
push
sbb
subb
sbb
xlat
mov
xchg
dec
add
and
mov
call
andb
cmpb
jnp
scas
push
gs
add
xor
das
dec
add
outsl
cmpsl
push
xchg
or
pop
pop
mov
cli
repz
leave
and
int
sub
aaa
mov
imul
jge
fsubl
adc
mov
data16
mov
jle
cmpsl
pop
arpl
std
fs
scas
out
inc
jl
sbb
stos
test
add
pusha
insl
test
adc
dec
mov
mov
popa
jae
filds
jns
fs
sub
pop
push
jns
lret
add
jb
adc
rcrb
mov
push
stos
ss
hlt
jecxz
lods
jae
mov
rcrb
mov
stc
mov
insb
or
loope
sti
mov
out
addr16
push
inc
into
bound
inc
push
daa
mov
mov
rcrb
hlt
pop
mov
xor
xlat
pop
sbb
or
push
sub
jge
pop
dec
lcall
fisttpl
jne
repnz
decb
lcall
filds
sbb
mov
xchg
or
iret
sub
push
mov
and
push
repnz
test
repz
jge
add
daa
hlt
in
inc
lods
or
mov
shll
adc
insb
xchg
fists
pop
into
cld
shlb
or
shlb
inc
adc
orl
or
xchg
or
sbb
out
mov
push
push
push
mov
out
cwtl
jbe
dec
mov
stc
fwait
mov
ljmp
cmpsb
out
mov
mov
mov
cli
std
imul
popf
or
and
pushf
jae
andl
stos
cmc
int3
stos
jmp
sarl
mov
adc
aaa
loop
or
jmp
aam
xchg
inc
inc
pop
jne
mov
pop
xchg
xchg
iret
mov
sahf
ljmp
pop
iret
in
jno
lea
cmp
push
fldl
dec
cli
scas
xchg
cli
pop
call
mov
sbb
mov
add
xchg
outsb
fisttpll
lds
inc
cmpb
push
stos
dec
icebp
mov
ja
cmpsb
in
or
movsl
test
cmpsl
mov
xchg
in
xlat
repz
cltd
push
popa
push
mov
mov
push
lods
mov
out
in
rolb
rcrl
sbb
clc
mov
push
nop
jmp
sbb
scas
sub
out
push
cs
js
mov
popa
and
inc
dec
inc
mov
out
in
movsb
fsubrs
test
mov
xor
push
ror
scas
inc
xchg
bound
popf
test
push
test
shrl
adc
mov
repz
jle
test
ljmp
mov
mov
cwtl
fisttpl
imul
ds
lcall
mov
movsb
mov
sbb
outsb
cwtl
jns
std
repnz
and
xor
push
cmp
jg
pop
es
push
fsubl
xchg
add
mov
aad
xchg
fwait
mov
xchg
adc
scas
ljmp
mov
loopne
pop
or
test
pop
mov
xor
pushf
decb
and
adcl
icebp
shll
out
inc
add
mov
mov
cmp
and
cwtl
sahf
scas
pusha
mov
leave
xchg
mov
pop
push
mov
sub
mov
sub
mov
dec
jl
mov
inc
in
mov
in
or
shll
hlt
in
cmp
cmp
mov
pop
shrb
stos
or
add
decb
cmp
or
loope
mov
mov
pusha
sbb
dec
lods
push
insl
aaa
aas
fcmovb
xchg
std
mov
pminub
adc
pop
push
loopne
fsubp
imul
rep
arpl
xor
and
test
mov
xor
cltd
out
imul
int
outsl
mov
repnz
dec
pop
xchg
dec
xor
ret
jo
cs
or
movsl
aam
outsl
in
out
mov
pop
popf
or
jnp
in
lahf
cld
fs
lea
std
jae
cmpsl
mov
ja
paddsb
cs
add
xor
lods
mov
mov
pop
mov
fs
sbb
aaa
xchg
sub
mov
out
js
mov
mov
fcoms
shll
out
mov
sbb
mov
inc
cmpsl
js
add
scas
cmp
scas
lds
aas
pop
pop
sarl
or
jle
push
push
mov
cld
push
xor
fiaddl
aam
push
dec
adc
popa
sbb
hlt
test
mov
sahf
sbbl
inc
shl
mov
jmp
pop
rolb
jp
in
mulb
hlt
push
mov
inc
add
mov
lock
and
shlb
imul
test
in
mov
and
sbb
pusha
cmp
fsub
outsl
mov
add
shll
arpl
sbb
cmpsb
rorb
aaa
push
push
lods
mov
out
adc
dec
xchg
jl
mov
jecxz
andb
test
xchg
xor
mov
fidivrs
mov
and
jo
inc
cmp
cmpl
shll
fimuls
hlt
push
fimuls
inc
xchg
sbb
jge
mov
shl
fidivrl
jg
test
xchg
roll
mov
inc
cmp
loopne
mov
out
jo
lcall
stos
dec
xorl
clc
fdivs
fidivs
in
sbb
mov
lahf
mov
es
cmpsb
mov
fdivl
xchg
add
sub
loope
mov
push
movsb
gs
fbstp
mov
sbb
pop
dec
data16
xchg
lahf
sbb
or
mov
cmp
iret
or
mov
lret
das
sbb
xchg
popa
pop
jne
fisttpll
jecxz
lcall
xchg
inc
adc
fisttps
push
push
jl
cld
call
icebp
enter
inc
sub
sub
leave
stos
and
jbe
sbb
pop
out
sub
jle
mov
test
jp
ficomps
inc
and
fnstenv
push
rsm
sahf
sbb
pop
xchg
jae
insl
enter
or
or
popa
push
cmp
in
push
icebp
fwait
aad
sahf
rcr
mov
imul
xor
cltd
jno
arpl
or
cmpsb
das
sbb
fsts
gs
pusha
incb
inc
xchg
mov
fwait
stc
add
loope
pop
or
cmp
fwait
mov
dec
dec
lahf
dec
mov
hlt
out
dec
mov
xor
xchg
lcall
mov
sbb
out
sbb
jmp
gs
rcrl
cmp
fnstsw
test
or
sbbl
cmp
icebp
or
add
in
lahf
mov
jne
jmp
pop
jmp
mov
out
inc
mov
xor
test
add
aam
jp
cltd
sbb
xchg
ja
cli
das
scas
in
mov
ds
test
and
add
dec
mov
or
mov
or
das
jno
out
add
xchg
stos
xor
pop
mov
inc
ds
dec
pop
push
sub
cmpsl
adc
jl
xorl
fildll
into
jbe
add
bound
add
pop
push
adc
mov
sbb
mov
mov
or
insb
leave
mov
mov
jg
mov
push
lret
jp
xlat
cltd
dec
xchg
pop
test
mov
inc
mov
mov
scas
mov
sbb
es
outsb
and
sarb
das
jbe
mov
data16
mov
dec
sarb
loope
icebp
dec
in
stos
dec
rorb
clc
stos
cmp
ss
movsb
mov
movsl
shr
pop
sbb
push
out
push
push
leave
enter
mov
cmpsb
aas
aas
push
pop
cwtl
std
mov
pop
sbb
mov
xchg
pop
sub
add
jne
or
or
and
icebp
sbb
flds
leave
mov
mov
and
dec
sub
sbb
sbb
jge
jp
inc
pop
pop
jecxz
fistpll
test
lods
cli
mov
out
adc
sbb
xor
cltd
mov
cltd
cmp
out
cmp
nop
dec
in
inc
scas
insb
jmp
filds
pop
pop
inc
push
fbstp
xchg
xchg
movsb
mov
push
xor
loope
sahf
fisubrl
addr16
mov
cmp
xchg
add
lock
push
add
bound
sarl
ret
inc
cmp
adc
icebp
call
mov
out
xchg
cmp
and
es
data16
clc
or
popa
shlw
stos
sbb
sti
push
stos
mov
cmp
dec
xor
push
adc
push
ljmp
mov
jle
pusha
pushf
outsb
inc
jle
xchg
cld
in
scas
xchg
xchg
mov
pop
icebp
xchg
aaa
push
jle
js
stos
lcall
mov
mov
xchg
jp
sub
pop
and
cwtl
clc
adc
icebp
ret
jmp
in
or
adc
cs
or
mov
cmpsb
mov
xchg
fcoml
jle
pusha
stos
outsb
pop
dec
cltd
idivl
xchg
gs
jnp
or
adc
add
pop
add
cmc
orl
pushf
pop
out
enter
jb
pop
mov
pop
push
and
adc
sub
jns
rorb
dec
jecxz
pop
xchg
xchg
hlt
sbb
bound
arpl
dec
mov
inc
ljmp
fdiv
xchg
mov
inc
mov
lods
movb
stos
sub
pop
popf
lahf
push
mov
ja
inc
in
inc
mov
inc
push
dec
out
mov
inc
test
fucom
test
das
test
test
mov
insl
pop
mov
or
mov
dec
ret
sbb
mov
cli
jg
aam
xor
inc
aam
scas
pop
xchg
sub
nop
sub
lods
inc
inc
mov
ret
fcompl
and
int3
push
mov
and
fdivrl
jg
test
mov
out
xchg
push
add
sarl
sub
cmp
sub
imul
push
mov
fucomip
fptan
subb
jecxz
mov
cmp
inc
mov
mov
repz
scas
leave
lods
sbb
test
bound
mov
xor
fistpl
and
int
aad
out
mov
mov
xor
test
and
je
or
add
jns
cmp
scas
and
xchg
push
insb
nop
outsl
inc
xchg
dec
mov
push
cmc
mov
fs
push
cwtl
push
incb
cltd
add
bound
sbb
xchg
xchg
outsl
in
loopne
inc
mov
cmpsl
fistps
mov
adc
sbb
xor
sbb
jge
sub
cs
mov
xchg
cmpsb
icebp
jno
mov
mov
movaps
or
out
js
insl
dec
leave
mov
jbe
stos
fwait
addr16
and
mov
push
or
lret
aaa
mov
push
jb
sub
addr16
pop
mov
cmp
inc
cmc
insl
outsb
cmpsb
add
jb
mov
cld
cmp
lods
cmc
icebp
sub
sbb
ja
and
movsl
pop
jmp
dec
mov
add
in
outsb
or
insb
out
add
xchg
fmul
test
movsl
cmovle
mov
sti
push
aaa
or
sub
out
sub
push
ss
popf
frstor
mov
adc
mov
push
inc
out
popf
lea
popf
in
out
call
scas
cltd
adc
fdivrl
out
mov
push
popf
jno
lods
lock
push
scas
sbb
mov
push
push
push
mov
push
push
jg
mov
popa
icebp
or
sbb
sub
jb
ja
movsb
stos
adc
mov
stc
mov
and
movsb
push
in
nop
cmp
sub
xchg
and
jo
test
in
mov
adc
dec
lret
cmc
roll
cmpsl
mov
ss
fs
into
mov
push
xor
orb
pushf
sub
test
add
jae
test
out
push
outsb
mov
or
stc
push
dec
test
sahf
and
into
pop
ret
jno
sub
inc
int3
in
add
in
fdivrl
mov
adc
push
loop
sti
mov
mov
mov
inc
sbb
sub
ret
pop
mov
add
hlt
pop
pop
mov
imul
adc
imul
and
or
cmp
adc
sbb
popa
jae
es
xchg
pop
mov
dec
pop
pusha
lret
js
bound
xor
mov
dec
or
pop
fcomps
imul
in
aaa
popf
mov
cs
xchg
test
mov
lahf
cmpsl
out
xchg
and
add
sbb
xor
js
sbb
jl
sbbl
rcrb
popl
out
xchg
mov
fnstenv
mov
mov
pop
stos
insl
movsb
pop
addl
jo
xchg
push
fnstsw
add
sbb
arpl
aad
xor
jl
add
inc
hlt
xor
mov
xchg
xchg
testl
enter
mov
hlt
cmp
push
and
lods
loop
fstl
jo
out
lock
fmulp
popf
jge
adc
popa
push
mov
test
scas
jb
hlt
int3
jb
fwait
or
sub
les
jae
inc
xor
loope
add
sub
adc
ds
movsl
rorl
insb
pop
add
pop
jno
int
xor
xchg
jl
inc
pop
or
cmp
adc
cmp
and
out
cmp
jb
pop
dec
cmp
cltd
inc
daa
push
mov
orl
xor
cmp
sahf
adc
inc
mov
inc
or
icebp
jb
mov
gs
push
push
adc
inc
lods
pop
imull
shlb
push
mov
test
and
pop
push
dec
out
push
fisttpl
adcl
and
sbb
scas
jge
cmp
mov
js
mov
or
insb
aas
pop
dec
mov
xchg
bnd
xchg
mov
leave
hlt
xchg
inc
data16
inc
leave
xlat
jl
push
cwtl
stc
push
pushf
lock
xchg
mov
adc
lcall
cmp
insb
dec
in
dec
mov
in
notl
inc
mov
dec
test
jne
jecxz
loope
cmp
jl,pn
or
sti
and
out
test
pop
loopne
lret
mov
pusha
mov
bound
mov
in
fwait
adc
cmp
stos
sbb
inc
jmp
or
lea
gs
cmp
mov
and
fs
mov
nop
jbe
push
jb
adc
test
cmp
pop
in
jg
cli
mov
pop
xchg
xchg
or
pushf
xlat
mov
inc
sbb
pop
jno
aaa
repz
mov
out
add
lcall
xchg
ljmp
inc
aam
jmp
xchg
repz
xchg
es
push
adc
adc
push
cwtl
test
jae
cmpsl
aaa
mov
sbb
sti
js
imull
lea
in
xor
mov
bound
test
push
cmp
imul
lahf
and
ret
ds
das
dec
popf
daa
cmp
popa
adc
enter
lahf
mov
jp
xor
mov
dec
mov
popa
jmp
adc
jb
fsubl
dec
ljmp
fists
sub
dec
loopne
adc
movsb
xchg
pop
loop
repnz
sbb
adc
adc
and
nop
push
fwait
adc
mov
pop
outsb
xor
in
mov
mov
pop
ror
cmpsb
insb
sbb
xchg
leave
je
icebp
xor
test
fcos
sbbl
pop
cmp
insl
jne
or
cwtl
data16
sub
xor
call
adc
enter
mov
sub
ficoms
das
cwtd
imul
cmpsl
cmp
mov
adc
mov
inc
xor
push
pop
inc
outsl
movsb
incb
je
das
popf
inc
jl
jl
sti
scas
shll
loopne
adc
ret
popf
fsubr
mov
pop
cmpsb
les
bound
jmp
jle
les
mov
adc
mov
out
enter
out
insl
or
ljmp
addr16
cmp
xchg
sahf
les
mov
xor
add
inc
fwait
negb
shrl
clc
dec
int
push
aas
dec
lret
inc
inc
scas
mov
mov
sbb
lret
xchg
arpl
ret
stc
ljmp
outsl
mov
mov
mov
out
mov
jns
cmp
sub
jbe
xchg
dec
ror
xor
icebp
cmpsl
fmull
fisubl
dec
shrl
out
xor
out
jg
movsb
or
scas
aad
repz
lea
stc
and
mov
or
es
in
pop
in
pop
mov
xor
shr
lods
adc
jno
mov
out
push
add
adc
ds
mov
or
adc
pop
xor
clc
dec
jmp
jae
xchg
sbbb
stos
mov
xor
iret
mov
bound
ret
imul
stc
movsl
das
bound
icebp
test
icebp
in
dec
repz
cmp
pop
xor
ljmp
rclb
or
pop
sahf
jnp
pop
xlat
mov
lahf
inc
call
imul
call
out
mov
call
pop
cmp
movsb
push
cld
push
adc
fwait
mov
mov
sub
int
int
sub
cmpsb
mov
jne
out
ja
xchg
dec
adc
push
out
dec
xchg
pop
inc
xchg
mov
mov
mov
ss
mov
jbe
test
cmp
dec
mov
stos
in
std
or
or
lcall
xor
fstpt
jnp
mov
xchg
mov
pusha
bound
leave
mov
jle
test
insb
mov
cltd
push
pop
orb
inc
scas
add
mov
aad
loope
popa
leave
push
xchg
daa
js
out
rcr
add
jns
fwait
data16
sub
pop
and
dec
rcr
pop
pop
mov
popf
int3
xlat
pop
ljmp
or
sbb
pop
insb
js
roll
xchg
dec
add
shlb
add
xchg
cmp
pop
jmp
movsl
loope
jmp
mov
andb
loope
push
fucomip
and
les
push
fwait
test
daa
popf
enter
or
mov
mov
xchg
js
jb
aas
cmp
mov
cmp
sahf
adc
scas
lods
aam
xlat
cmp
insb
ffree
stos
mov
shlb
scas
lods
outsl
int3
mov
enter
nop
fmull
pop
xchg
insl
pop
aam
push
insl
push
dec
loop
int
add
dec
imul
ja
xor
xchg
lret
sbb
cli
popf
pop
mov
sub
mov
aam
mov
data16
stos
outsl
call
outsl
inc
jno
jns
imul
cmpsb
xor
daa
icebp
dec
xor
push
sub
mov
out
pop
dec
inc
jbe
pop
addr16
jmp
push
inc
addr16
aad
xchg
push
lds
divb
jb
std
push
xlat
cs
add
popf
inc
into
push
or
sar
fildll
push
ret
inc
mov
aad
test
enter
mov
nop
or
std
xchg
mov
scas
daa
scas
call
jl
leave
inc
or
sbb
jb
and
popf
scas
mov
outsb
adc
fsubl
adc
roll
in
sbb
les
aas
xor
clc
sub
jbe
rclb
pusha
shlb
fs
pop
out
jecxz
aad
in
pop
xor
clc
adc
loope
test
mov
xlat
lods
leave
arpl
cs
js
sbb
add
out
ret
cmp
jg
insl
lds
mov
adc
faddp
mov
inc
mov
leave
push
mov
and
movsl
movsb
in
xchg
in
jo
fxch
xlat
ror
jo
mov
xor
arpl
mov
je
push
fwait
push
mov
cmp
jnp
ja
idiv
movsb
movsl
icebp
cwtl
inc
xchg
push
sub
in
nop
int
xor
push
sub
nop
call
mov
jg
dec
stos
dec
pop
es
xor
xchg
icebp
mov
mov
mov
test
scas
jmp
pop
sub
mov
jnp
add
dec
fisubrl
pop
sbb
sti
jb
das
jne
pop
and
jecxz
outsl
shrb
mov
jmp
or
sbb
or
mov
xor
xchg
cld
mov
lret
stc
mov
jnp
out
inc
cmpsb
fwait
cwtl
aas
mov
test
jmp
test
jge
dec
add
punpckhbw
outsl
sbb
or
ljmp
mov
push
daa
out
sbb
sub
cltd
inc
pop
push
pusha
add
out
scas
repnz
xor
in
loop
test
je
xchg
clc
xchg
inc
lods
mov
in
dec
jae
mov
ljmp
push
dec
lcall
insl
outsb
mov
cmpsb
dec
fistpl
fcmovb
xor
lods
pop
add
mov
cmp
sbb
or
xchg
mov
pushf
inc
adc
jns
das
cmc
xor
jg
xchg
sub
rorb
and
clc
shll
aad
dec
int
cmp
mov
pop
or
push
and
mov
or
push
jno
inc
es
sub
inc
aas
mull
cs
or
sbb
add
dec
mov
sub
add
repz
jb
es
or
push
mov
xlat
xor
repz
leave
inc
hlt
stos
fimull
loop
or
out
jecxz
ffree
pop
mov
or
mov
and
cmp
xor
jb
lcall
lcall
or
loopne
jne
mov
cmpsl
dec
adc
lods
mov
stos
aad
pop
and
popa
int3
loopne
mov
pop
outsl
mov
pop
push
cmc
pushf
mov
and
push
leave
mov
sub
ret
ret
movsl
incb
mov
clc
leave
or
cmp
test
aas
stos
loop
pop
xor
push
cmp
or
or
pop
repnz
es
test
push
imul
jp
mov
jb
out
test
stc
push
imulb
and
cld
dec
in
movsl
mov
dec
or
psubsb
imulb
push
imul
pusha
xchg
aaa
mov
xchg
add
sbb
ljmp
ret
mov
pushl
push
lods
arpl
cmpsb
or
xchg
xor
repz
xor
inc
imul
jle
imul
iret
pop
icebp
adc
mov
add
push
outsb
aam
mov
stc
jmp
out
jne
lcall
jne
inc
fnstenv
xor
push
sub
sbb
inc
int
loop
and
test
lret
dec
shrb
cmp
insl
in
lret
add
push
cltd
push
mov
xchg
daa
jo
lods
lock
iret
dec
stc
and
cli
xchg
xor
in
ja
shrl
sbb
inc
push
ret
es
xor
fcomps
xchg
cltd
in
lds
dec
aaa
cmp
dec
dec
xor
les
pop
mov
cmp
ds
ja
aam
xchg
jae
add
clc
ljmp
ret
add
push
adc
inc
jp
dec
push
je
call
pusha
adc
mov
mov
mov
call
std
jae
scas
inc
cmp
push
or
mov
or
lock
cs
lret
or
sub
out
add
adc
sbb
inc
inc
out
movsb
leave
dec
gs
pop
cmp
inc
adc
fbld
cltd
pop
mov
stc
loopne
insb
dec
fcoml
loope
lea
inc
int
movhps
fwait
jmp
mov
dec
push
push
jmp
inc
adc
adc
jnp
lret
sub
xchg
mov
add
popf
aaa
cld
jo
out
aaa
sbb
pop
mov
in
inc
or
pop
mov
dec
pop
cmp
aas
cld
loop
popa
scas
pop
xchg
stos
cmp
or
push
fisttpl
test
jg
std
sub
mov
popa
lods
mov
mov
pcmpeqw
xor
outsb
mov
adc
push
dec
mov
sbb
lods
popf
or
xlat
iret
repnz
xchg
pop
xor
iret
int3
insl
mov
inc
test
and
cmpsb
addr16
mov
sub
mov
sub
add
ds
sub
cld
dec
mov
or
push
push
jecxz
out
push
loop
gs
sbb
aaa
jle
jl
je
lahf
inc
lds
cmp
push
sbb
sti
adc
jg
jne
lods
dec
aas
sbb
lahf
and
addl
xor
mov
and
repnz
or
jmp
cmp
mov
or
dec
negb
aad
or
cmp
insl
push
or
mov
in
loope
xchg
repnz
xchg
scas
sub
fwait
mov
pop
mov
enter
rcll
movsb
inc
or
mov
fcoml
push
lret
sbb
inc
mov
inc
mov
aas
mov
push
pop
shrl
fimull
shrl
sub
lods
cmc
sbb
addb
or
push
loop
adc
loope
les
cmp
and
cmpsl
call
loop
pusha
daa
rolb
mov
int
test
push
pop
and
sahf
notb
xchg
xor
in
ret
sub
test
mov
scas
out
popf
push
jo
xor
pop
out
nop
pop
cmp
adc
gs
push
shlb
cld
aas
push
cmpsl
mov
pop
or
push
inc
or
mov
gs
jb,pn
fmulp
ret
mov
lods
jns
adc
cwtl
mov
idiv
popa
arpl
call
addb
pop
mov
lahf
inc
sub
pop
ds
inc
mov
push
adc
icebp
and
inc
out
shll
adc
xor
es
cmp
cld
hlt
hlt
imul
mov
pusha
ja
pop
ror
jae
and
aas
sbb
mov
in
repz
std
pop
and
sbb
mov
popa
movsb
shr
add
es
sahf
insl
mov
cmp
arpl
scas
push
cmp
jns
mov
mov
and
imul
inc
mov
jmp
movsl
insb
sbb
or
pop
lds
mov
shll
negb
in
mov
jecxz
adc
mov
mov
fldenv
scas
push
pop
cmpsb
rcrb
popa
clc
icebp
or
out
lds
int
call
inc
shrl
add
out
xchg
imul
inc
rcr
xor
jmp
nop
mov
mov
test
jnp
pushf
inc
push
sbb
jmp
inc
mov
mov
imul
push
dec
xor
mov
pop
mov
fmulp
mov
pop
pop
test
pop
xchg
subb
scas
in
adcl
in
ret
mov
jo
inc
mov
and
test
or
pop
sbb
push
aam
adc
mov
sbb
push
or
mov
filds
popf
adc
adc
test
loop
ret
cmp
ret
movsb
ss
pushf
imul
lea
inc
test
das
mov
push
imul
ds
pop
hlt
xchg
nop
adc
imul
sarb
mov
sbb
repnz
vpaddq
xchg
cli
in
jae
cmpsb
add
add
sbb
ljmp
enter
sbb
sahf
and
add
or
rcrl
add
cmc
out
test
mov
je
das
xchg
jmp
movsl
int3
les
mov
cmc
xchg
cmp
gs
insl
lahf
lea
testl
dec
inc
dec
aam
and
xor
jae
imull
inc
xchg
cli
lret
fdiv
lahf
lcall
xchg
or
mov
xchg
and
cmpsl
call
aaa
add
pop
xchg
xchg
jmp
cmp
push
sbb
cs
push
cmpsb
out
mov
sub
mov
pushf
xchg
jge
inc
into
std
pop
shr
lahf
les
or
dec
out
inc
mov
cli
in
and
pusha
out
es
and
out
hlt
je
sub
sahf
xchg
scas
adc
out
push
add
imul
pop
into
and
outsl
aad
push
cmc
repz
sbb
dec
jb
in
inc
cmc
cmc
cmc
xor
mov
adc
lret
stos
xor
fdivrs
sbb
ja
xlat
int3
out
lods
inc
aad
add
aam
mov
lea
mov
mov
xchg
jo
xor
clc
pushf
mov
xadd
cmp
lahf
lret
push
mov
jns
inc
mov
inc
pop
jl
mov
mov
jne
cs
insb
sub
test
in
popf
movsb
loopne
sub
xor
jg
rorl
mov
adc
add
push
xchg
mov
inc
ret
push
hlt
stos
and
xchg
adc
pop
dec
push
out
int3
inc
mov
jp
leave
out
out
sub
mov
ds
ss
lock
pop
nop
dec
mov
call
lret
mov
sbb
xchg
movsb
mov
mov
aam
mov
jns
je
cmp
aaa
push
sbb
out
in
out
movsb
repnz
test
test
mov
cld
rcrl
cltd
cmp
bnd
or
dec
bound
movsb
cmp
xor
sarb
sti
int3
cli
inc
jns
test
std
dec
bound
fimull
xor
hlt
call
mov
jbe,pn
outsb
jl
hlt
out
push
add
jbe
je
adc
pusha
or
push
and
lods
jo
pop
insl
xor
add
adc
cmp
movsl
mov
cmpsb
xor
lea
cmp
lahf
int3
ss
push
daa
dec
mov
pop
out
scas
aaa
and
add
mov
andb
scas
popa
testl
rorb
sub
ljmp
xchg
xor
ret
fadd
stos
aaa
enter
orl
xor
cld
dec
or
dec
out
dec
cmpsl
pushf
divb
inc
mov
mov
lods
push
inc
jg
stc
mov
jnp
arpl
pusha
sub
push
jg
orl
inc
data16
clc
dec
les
fimuls
daa
ret
inc
xchg
lods
cmp
decb
pop
or
mov
add
xchg
lret
js
incl
jg
lret
cltd
pushf
leave
rol
adc
loope
mov
or
insb
dec
xchg
fbstp
mov
fistps
sbb
dec
ljmp
xor
clc
adcl
jl
or
push
dec
cltd
or
cmpsb
mov
jle
in
mov
jp
or
sbb
cs
loop
cmp
xor
aad
dec
pop
lahf
jle
sbbb
cmp
push
xor
sub
jbe
hlt
hlt
stos
inc
xchg
jge
xor
repnz
into
stc
mov
inc
test
mov
int
movsl
ret
mov
out
sahf
jg
push
divb
push
int3
pusha
add
bound
in
mov
int
fdivrs
rcr
divb
xor
cwtl
jno
subb
sbb
loop
sti
mov
ret
jne
pop
add
push
mov
das
push
push
js
in
aaa
and
mov
test
mov
fs
lret
push
xor
sbb
shrb
xchg
data16
ret
dec
sbb
in
inc
into
mov
insb
enter
jnp
pop
sub
mov
add
or
shrl
jo
jb
pop
loopne
push
enter
cmp
mov
ret
mov
mov
jge
mov
cli
ljmp
lds
dec
ficompl
and
jmp
xchg
decb
les
push
cltd
pop
arpl
xchg
roll
cmp
negb
jmp
mov
insl
pop
cmp
push
ljmp
movsl
jns
jb
inc
lods
jne
mov
cmp
jmp
jecxz
jne
and
pushl
out
jg
push
jae
xor
ja
or
mov
data16
and
das
mov
aaa
inc
rcpps
xchg
scas
push
dec
dec
and
shrb
shll
jb
inc
fnstcw
or
cmp
cmpl
jg
xchg
lea
loopne
test
les
mov
sub
inc
ss
xor
cmp
clc
out
pop
pop
dec
das
mov
cmpb
jo
roll
dec
xchg
inc
xchg
das
sti
stos
jl
mov
mov
push
mov
hlt
idivb
lcall
repnz
shll
cmp
xchg
add
dec
inc
enter
or
ret
cmp
jbe
mov
sub
rcrb
inc
jmp
or
jns
pusha
mov
pop
lcall
mov
test
cmp
fucom
pop
pop
and
dec
ret
je
aas
sub
sarb
pop
out
out
je
xchg
out
dec
daa
sbb
arpl
jmp
adc
in
sub
push
mov
scas
sbb
std
aam
aaa
cltd
test
xchg
inc
xor
cmp
xchg
lahf
shl
jae
mov
mov
lret
jle
sub
icebp
and
mov
sbb
cmp
inc
test
les
xchg
jecxz
ds
xorb
mov
push
stos
sub
xchg
stos
bound
nop
inc
push
lock
and
insl
xlat
insb
jbe
mov
inc
xchg
out
mov
xor
es
pop
js
repz
dec
adc
fucomp
ret
adc
mov
cwtl
enter
add
and
sbb
pop
stos
xor
rcr
shlb
dec
add
pop
lahf
enter
inc
data16
out
lret
popa
data16
add
adc
pop
dec
lcall
sbbl
pusha
lret
aad
scas
mulb
icebp
movsl
jl
aaa
mull
add
xchg
xor
or
sub
xor
movsl
lea
push
inc
add
dec
addl
sbb
out
lock
rcll
adc
aad
mov
jne
cmp
push
jns
aas
pop
and
dec
fld1
cmp
push
jnp
pusha
lret
sub
and
insl
push
xor
fdivs
xlat
shl
adc
into
in
stos
push
test
popa
push
ljmp
sub
or
dec
cmpl
or
bound
add
loopne
jp
aad
jp
adc
jmp
mov
mov
dec
inc
push
sub
and
jns
mov
mov
popa
mov
mov
push
xchg
flds
pop
adc
mov
dec
addr16
icebp
fsubp
pusha
aaa
cmpsl
fnsave
sti
and
sub
and
out
xchg
xchg
scas
insl
inc
daa
sbb
mov
data16
test
ja
movb
add
mov
imul
jne
fildl
adc
out
in
inc
cld
fsubl
mov
xor
pop
pop
xchg
pop
es
jno
push
aad
lcall
imul
sub
push
dec
add
mov
mov
adc
lret
xor
xor
loope
pop
jbe
jo
xor
loopne
mov
pop
or
data16
shlw
loop
cltd
mov
inc
mov
push
rcrl
dec
test
lret
adc
test
lret
into
cwtl
les
push
jns
shrl
sub
ljmp
pop
mov
add
jmp
outsl
mov
pop
shlb
xlat
add
cmp
xchg
iret
lahf
lds
push
lods
sub
lret
movsb
pusha
jbe
aam
push
push
clc
repnz
mov
mov
or
pop
idivl
cmpsl
outsb
mov
orl
lret
push
fnsave
cld
outsb
xor
aas
int3
cmpb
push
sbb
jmp
adc
stos
push
mov
cld
imul
aas
outsl
jmp
and
push
es
lret
les
out
fsub
cltd
repnz
push
scas
test
mov
sahf
fwait
sbb
pop
in
xor
aad
and
jbe
cmpsl
imul
dec
sbb
or
push
scas
push
call
push
scas
cmpsl
pop
enter
jmp
out
sbb
inc
dec
mov
shrl
leave
mov
pop
mov
mov
xor
sbb
sbb
fwait
or
inc
pop
mov
test
and
pushf
idivl
sbb
in
push
divb
pushf
test
movsb
xchg
xchg
push
int
mov
ror
pop
int
jl
cmp
fsubs
or
fstps
push
stc
xor
test
inc
xchg
adc
mov
mov
xchg
lea
into
out
movb
or
scas
in
fdivrs
jb
sub
cwtl
in
bound
adc
mov
test
idivb
push
mov
cmp
rcrl
jae
aaa
add
pop
mov
cmc
fnsave
xlat
push
cmpsl
sbb
call
cld
push
jp
jne
sub
les
mov
punpcklwd
notl
pop
fsubl
jb
fcomi
jbe
pop
fnop
sti
cli
insb
xor
cltd
add
jmp
sub
sub
and
add
jne
cmpsl
jp
dec
stos
sti
mov
stc
jb
and
ljmp
mov
cmp
jo
int3
call
xor
push
or
div
push
cmp
cmp
sub
xchg
call
fcmove
adc
fistpll
mov
push
fcmovne
inc
cs
lea
std
mov
std
push
sub
addl
sbb
jmp
xlat
mov
jle
adc
adc
xchg
outsl
add
mov
std
movsb
dec
xor
dec
or
inc
sub
cli
addl
je
mov
pop
mov
lea
je
fxch
mov
push
mov
out
pop
vphsubbw
and
out
adcb
stos
dec
xchg
cmpsl
xor
xchg
testl
sbb
insl
inc
push
mov
aas
test
sbb
outsl
enter
jb
adc
cmp
popf
pop
push
pop
inc
popf
popf
cmpsb
xor
lock
pop
aad
xor
icebp
mov
jno
scas
adc
cld
test
cmc
dec
adc
call
cli
jno
mov
call
scas
inc
ss
cmp
cli
enter
pop
sbb
test
add
scas
repz
in
or
mov
icebp
sahf
stc
cs
pop
outsb
mov
out
push
stos
sub
test
es
xchg
mov
or
out
ss
ja
lods
int
into
rcrl
dec
inc
lods
stos
out
jg
mov
dec
lods
cwtl
xchg
or
push
pushf
cmpsl
push
sub
leave
pop
inc
xor
xchg
dec
or
stos
push
sahf
data16
xor
jecxz
jge
xchg
ljmp
sar
or
push
adc
inc
mov
jne
lret
scas
sub
pop
or
enter
push
mov
leave
ret
push
arpl
push
jns
shrb
je
inc
scas
mov
loop
lret
adc
aad
pop
xchg
sub
aas
adc
cwtl
mov
ss
loopne
xor
xor
enter
outsl
repnz
xchg
rcrl
cmp
fstpl
stos
call
mov
out
popf
jae
adc
test
add
fld1
gs
imulb
fdivr
leave
xchg
mov
inc
icebp
fcoms
dec
std
xor
jbe
and
stos
push
cs
pop
mov
mov
popa
fbld
cmc
out
cmp
gs
call
jbe
inc
bound
aas
out
add
lods
arpl
insb
mov
cmpsb
xchg
lds
aad
sbb
ror
gs
or
cmp
and
mov
cmpsl
lcall
add
push
data16
jge
sub
roll
aad
push
insb
inc
push
cltd
cwtl
inc
sbbl
mov
dec
cmpsl
pop
dec
inc
ret
xor
cmp
mov
lds
sbb
dec
cltd
mov
subl
sbb
push
pop
adc
hlt
and
sub
xchg
cmpsb
cmp
mov
jae
mov
cmc
movsb
xlat
cmp
xlat
jo
cmc
lahf
fcoms
mov
jg
xor
dec
rorl
dec
sti
aam
imul
cmp
or
pusha
pushf
xor
cmp
mov
jbe
js
shll
push
int
pushf
std
loop
push
pop
stc
and
cld
mov
mov
loopew
imul
push
and
adc
and
mov
and
jbe
mov
and
push
mov
in
stos
pop
add
cmpsb
popf
pop
adc
into
pushf
test
std
pushl
sahf
pop
add
es
sbb
xchg
mov
or
pop
mov
dec
fwait
jge
popf
inc
rcl
cmpsl
scas
sub
xchg
cmp
loop
xchg
jecxz
jg
pop
arpl
aas
mov
call
mov
sub
jbe
nop
push
xor
lcall
movsb
sarb
jne,pt
es
adc
xor
pop
mov
push
fsubs
xor
jge
push
xor
movsl
test
popa
dec
insl
mov
ljmp
fsts
xlat
orl
sbb
push
rorl
rorl
sahf
out
adc
pusha
inc
cmc
out
daa
mov
sbb
mov
or
jo
rclb
adc
adc
mov
cmc
push
lahf
sub
ja
aad
lods
push
scas
jmp
in
hlt
jnp
mov
ds
xchg
xlat
adc
xchg
dec
xchg
imul
mov
push
xchg
jge
out
fdivrl
mov
loopne
adc
jo
mov
jmp
jg
jns
outsl
int3
pop
stc
add
mov
jl
jnp
xor
sbbl
fisubl
insb
movsb
imul
popf
inc
dec
adc
rorb
rcrl
in
jp
pusha
jns
ljmp
add
pop
fidivl
hlt
fistps
inc
add
cmpsl
insl
mov
or
lcall
in
lret
loopne
loop
cmp
adc
es
xor
js
arpl
push
push
mov
fdivr
es
push
push
mov
mov
daa
sub
cwtl
fwait
bound
aaa
loop
mov
fs
outsb
jae
icebp
mov
int
bound
loopne
mov
xor
mov
or
cmp
push
fnstcw
xchg
xor
shll
cmpb
ljmp
xor
loopne
push
std
inc
push
iret
addr16
stos
sahf
pop
push
aam
aam
pop
stos
test
rolb
es
in
lods
adc
xlat
or
pop
mov
enter
dec
dec
xchg
mov
ret
fcoms
clc
shlb
aas
shlb
je
dec
xchg
pop
dec
pop
call
lds
push
pop
mov
xchg
jns
fs
insb
pop
cli
test
orb
sbb
inc
push
cmpsl
out
fisttpl
and
fimuls
mov
sbb
dec
rcll
nop
xcrypt-cbc
cmpsl
shrl
cli
cmp
cmpsb
mov
pushf
out
imul
andb
cs
or
pop
sub
fincstp
arpl
add
add
ror
fnstsw
mov
iret
ljmp
inc
shl
xor
or
mov
in
push
sbb
ljmp
add
pop
mov
out
ljmp
pop
call
fidivs
stos
rol
popf
push
jbe
rol
lods
pop
xor
adc
pop
mov
push
xor
repz
hlt
lods
add
out
ds
aaa
nop
fsub
mov
movsb
lahf
out
dec
dec
xor
cmp
stos
add
adc
xchg
mov
loopne
push
lods
adc
dec
dec
jg
xor
lods
mov
dec
imul
lock
or
sub
inc
insb
push
lret
mov
xchg
bound
sub
mov
and
lods
aad
lret
outsb
rorl
xchg
bound
popa
mov
addb
jo
repz
and
mov
jge
adc
unpckhps
int3
imul
push
mov
cmp
sbb
fisubrs
decl
sbbb
add
add
sbb
ret
pop
pop
mov
mov
icebp
mov
xchg
sub
xchg
cld
jmp
jle
fisubrs
jecxz
orb
mov
xchg
xchg
cld
push
repz
inc
sbb
dec
pusha
jo
inc
aad
dec
pop
jmp
jb
cmc
arpl
mov
inc
loopne
add
enter
test
jge
fisubrs
add
iret
int
psadbw
pop
in
or
das
out
xchg
ret
cmpsb
sbb
repz
add
fimuls
pop
cwtl
mov
stos
mov
fnstsw
ja
sub
in
icebp
sub
int
ja
mov
fmuls
pop
mov
movsb
jbe
fcmovnu
inc
into
inc
or
in
adc
mov
or
jne
pop
cmp
imul
sahf
inc
and
pop
jno
dec
pop
cmpsl
outsl
ficomps
dec
js
rcr
data16
jo
jo
mov
aas
sub
sub
lret
int3
out
xor
dec
lock
sbb
pop
movsl
push
cmpsl
add
inc
inc
xchg
xchg
pop
inc
mov
and
or
test
pop
and
sub
in
mov
cmp
out
pop
clc
mov
cmp
mov
lea
mov
mov
pushf
hlt
and
mov
sub
popa
fwait
inc
pop
sbb
adc
mov
inc
and
and
or
cmp
pop
jmp
push
push
addl
jnp
push
loopne
xchg
cltd
push
jp
push
mov
and
aad
in
jecxz
int
dec
fcompl
mov
lcall
aad
mov
out
mov
int3
stc
or
popf
sarl
aam
stos
sbb
outsl
cltd
cmpb
dec
cmp
in
fcmovnu
or
test
lods
loop
je
jl
outsb
xor
cmp
sbb
adc
inc
aaa
nop
push
jbe,pn
jl
dec
out
sub
lret
mov
pop
aaa
loopne
xor
jl
xchg
lret
xchg
vmovups
push
test
arpl
test
dec
enter
jge
add
sbb
push
pop
imul
push
inc
and
stos
jb
mov
test
inc
dec
insl
jecxz
pop
test
divl
and
mov
test
pushf
dec
inc
jb
fwait
pop
movsb
repnz
cmp
cmp
push
cs
add
xchg
xchg
adcl
es
add
ss
xor
mov
decl
jne
jecxz
into
fmull
xor
sbb
bound
rcrl
daa
pop
sbb
push
out
int
int
cmp
lock
sbb
outsl
mov
stc
push
out
sbb
cmp
dec
dec
int
lret
xchg
and
mov
xchg
mov
test
shrl
jb
push
jne
icebp
les
stos
xor
mov
push
xor
cmpsl
je
fcoml
mov
or
gs
test
outsb
icebp
push
inc
push
cmp
or
push
fistps
xchg
or
in
xchg
sbb
jmp
mov
popa
aam
dec
sub
lret
test
mov
repz
dec
pop
icebp
ret
fstl
fwait
daa
lea
bound
and
fcoml
imul
xor
mov
inc
popf
sbbb
and
xchg
cmp
push
push
scas
sub
mov
xor
cmp
cmc
adc
inc
dec
mov
inc
jg
in
jecxz
jb
and
push
and
xchg
popa
jmp
lcall
inc
cmp
out
cmp
stos
sbb
mov
add
mov
sti
or
pop
rorb
lret
mov
cmp
push
ret
xchg
aam
inc
ficoms
leave
dec
cmc
imul
shl
nop
shlb
leave
push
scas
movsl
or
inc
adc
movsl
adc
mov
mov
jbe
cwtl
inc
out
fisttpll
pop
or
lea
pop
adc
xlat
cmp
adc
adc
sbb
add
jge
pop
mov
mov
jge
mov
jmp
outsl
cmp
ljmp
xor
stos
fmul
ds
cmp
loopne
adc
scas
push
sub
idivl
mov
and
or
aam
and
or
rclb
call
sbb
fcomi
adc
adc
cld
cmp
test
inc
mov
movsb
jb
ss
aas
lcall
mov
lea
lret
cwtl
xor
lahf
aas
cmpsl
jecxz
out
sbb
cmp
ret
push
inc
mov
and
out
jp
cmpsl
fists
jne
cs
adc
mov
movsb
push
push
lret
into
rcll
arpl
push
sbb
inc
mov
fs
mov
cmpsl
int
es
dec
lcall
or
cmp
xor
lods
nop
fwait
js
loopne
gs
dec
push
or
push
xchg
rep
jbe
xor
fwait
jno
out
dec
pop
cmc
fwait
lds
push
test
jnp
adc
push
mov
mov
jnp
jge
cmp
out
in
jo
cmc
repz
dec
jb
movsl
pop
out
call
add
xlat
push
aaa
out
loopne
mov
shll
adc
inc
lods
roll
push
mov
sub
daa
test
and
jmp
and
pop
pop
icebp
push
mov
popa
and
jmp
mov
or
iret
jl
andl
adc
inc
lret
jo
in
popf
stc
mov
adc
in
inc
pushf
mov
shlb
xchg
push
mov
xor
imul
fisubl
scas
rcr
pop
insb
clc
inc
push
repz
adc
mov
clc
pusha
dec
mov
sbb
sti
push
dec
mov
inc
ds
adc
push
push
mov
icebp
and
nop
aas
and
imul
mov
fsubl
fnstcw
mov
mov
ret
shr
pop
jbe
jno
stos
push
cltd
jecxz
lahf
insl
jb
push
dec
pop
outsl
jle
push
mov
push
push
jle
adc
cli
orb
mov
xchg
imul
dec
mov
mov
lret
or
pop
cltd
adc
test
pushf
test
sar
inc
jg
sub
in
jno
push
mov
aaa
pop
pop
setg
dec
std
out
mov
mov
sbb
inc
test
add
pop
and
dec
es
xchg
adc
aaa
mov
mov
pop
aam
fldenv
movzwl
add
movb
xchg
sbb
mov
mov
pusha
inc
cmpsb
in
mov
fcomp
jo
insb
clc
sub
popa
ja
jne
xchg
sbb
pusha
sub
adc
std
push
ljmp
adc
je
dec
es
inc
cmp
notb
inc
dec
push
or
mov
or
icebp
jg
scas
inc
sub
push
xchg
xchg
mov
dec
xorl
mov
clc
cs
jae
cmp
mov
push
aas
lea
movsl
cmp
sub
pop
mov
sbb
ja
cmp
test
dec
es
or
add
xchg
jg
mov
lret
imul
ljmp
outsb
fistpl
in
sbb
stos
or
mov
jb
xchg
arpl
dec
mov
insl
jge
pop
fistpl
sbb
cmpsl
inc
lods
jnp
mov
inc
fbld
xchg
pop
add
jmp
ja
dec
cmp
adc
and
out
lea
jge
out
push
test
inc
dec
or
xor
out
andl
mov
cwtl
mov
sbb
xor
mov
jmp
enter
lret
cmp
push
pop
push
pop
lahf
outsb
out
out
pop
addr16
xchg
push
cmp
jmp
js
xor
les
mov
or
xchg
pop
out
jp
or
std
add
jp
shlb
push
lret
fcompl
jne
adc
movsl
loope
inc
sub
stos
mov
ret
mov
cmp
call
lods
test
popf
sbbb
adc
ret
xor
add
push
nop
dec
insb
jmp
mov
in
or
jno
imul
cwtl
aaa
and
subb
sbbl
mov
lods
rol
fsubs
adc
cmp
mov
dec
mov
imul
int
add
std
aas
mov
mul
xchg
aad
subb
jge
jae
xor
ud1
jp
cmp
insl
ss
sbb
xor
cmp
inc
push
sbb
dec
xchg
movsl
sbb
popaw
push
push
notl
into
lcall
pop
jmp
pusha
mov
adc
insb
mov
not
decl
lcall
test
sub
push
movsb
mov
ss
sbb
and
movsl
mov
cmpsb
inc
cmp
xchg
fdivrp
pusha
adc
clc
or
sbb
outsl
or
fcompl
je
arpl
sbb
lock
xor
or
loop
imull
push
cltd
sub
add
daa
sub
sub
sbb
cmc
bound
nop
pop
dec
jle
xor
cmp
jecxz
mov
cwtl
jae
stc
pop
sub
pop
add
into
movsb
ja
and
repnz
addb
xor
xchg
xchg
sbb
add
jp
bound
fsubrp
adc
out
lods
imul
lcall
and
mov
jb
push
repnz
cld
jo
mov
fldenv
in
pop
mov
sub
loopne
sub
or
pop
mov
ja
in
call
sub
mov
inc
test
daa
xor
sbb
pushw
sarl
cmp
mov
in
push
test
xlat
mov
sar
inc
test
test
mov
xchg
into
jg
cwtl
test
cmp
xchg
inc
adcl
adc
pop
lock
cmp
lcall
fwait
out
mov
jbe
test
add
mov
sbb
rol
enter
out
jb
sti
or
imul
sbb
push
scas
subl
mov
sbb
stos
aad
iret
and
mov
inc
arpl
pop
mov
push
lock
jns
imul
pop
inc
cmpsl
sub
in
cwtl
ficoml
cmp
mov
push
xchg
sub
clc
loopne
push
shufps
mov
ficoms
icebp
pop
int3
inc
loop
cmp
repz
cltd
js
mov
lods
add
add
xor
mov
addr16
inc
mov
imul
xchg
aam
xchg
inc
ljmp
into
out
es
dec
xor
lods
inc
sti
leave
dec
cmpb
ss
sub
in
jmp
pop
mov
movsl
movsb
cld
lcall
adc
dec
lahf
test
mov
ss
and
popa
idivl
mov
xor
jb
stos
inc
cli
fwait
cmpsb
outsb
push
dec
adc
jmp
es
adc
das
adc
in
cmp
push
lahf
push
jl
or
inc
dec
adcb
adc
dec
or
bound
or
xor
out
lret
inc
add
xor
and
adc
jp
out
pop
ret
iret
fnstcw
and
and
jl
dec
arpl
sbb
sbb
mov
dec
sar
hlt
mov
inc
addl
out
push
aad
sbb
dec
aad
push
stc
sub
clc
push
xchg
xchg
notb
inc
pop
das
adcb
lods
icebp
dec
mov
xchg
mov
and
repz
sbb
jmp
mov
in
mov
sub
call
mov
and
and
adc
jmp
fldt
insl
jo
mov
sahf
sbb
pop
sti
push
loopne
jmp
sbbb
and
arpl
push
aaa
dec
push
push
repnz
les
arpl
popa
push
push
shlb
push
scas
and
clc
movsb
lock
mov
out
ret
sub
out
int3
xchg
ljmp
mov
movsb
shl
stos
push
pop
rorl
sahf
addr16
add
out
push
cmp
inc
cmpb
jns
jle
test
adc
xor
ds
or
mov
inc
jno
xchg
psrad
sbb
sub
push
cwtl
jb
rcll
push
mov
jo
test
cmc
lahf
cmpsb
add
loop
out
and
out
das
lds
mov
mov
inc
and
fcmovnb
mov
push
mov
daa
stos
sbb
jnp
cwtl
or
mov
xor
dec
shll
inc
or
mov
adc
aas
shll
outsl
push
repnz
jne
mov
jne
pop
push
cmp
jne
add
xchg
rcrl
jnp
mov
jo
mov
cmpsl
int
and
lret
mov
fs
cwtl
test
mov
dec
sarl
jnp
adc
mov
add
je
jns
cltd
out
adc
sub
xchg
pop
aaa
lds
and
aad
repnz
jno
pop
ret
dec
aas
movsl
bound
shrb
mov
add
pop
dec
dec
inc
xor
mulb
aam
mov
dec
sub
pop
mov
xchg
pop
mov
hlt
lret
out
pusha
inc
xchg
push
jp
sub
xor
xlat
pop
and
and
push
mov
mov
out
hlt
add
jcxz
jne
push
pop
mov
cmp
lock
dec
jge
sbb
into
sbb
scas
dec
int3
test
les
add
shrl
cmc
ja
repz
mov
je
mov
cli
aad
divl
sub
add
jbe
ja
popf
pushf
call
sub
movb
mov
cmp
fldcw
cld
iret
xchg
cmp
jmp
jl
push
daa
test
mov
cmpsl
lret
jae
adcl
fldcw
std
push
xor
cs
sbbl
adc
cli
dec
and
adcl
xor
das
xchg
sub
adc
fcomip
pusha
push
sbb
out
in
lcall
into
mov
stc
or
rcr
jg
jmp
jae
mov
lret
adc
sub
loope
loope
and
jle
cs
jne
mov
push
cmpsb
push
ret
pop
scas
out
repnz
sub
fs
pop
popa
sub
pop
lods
and
xchg
mov
mov
sbb
aaa
mov
sub
inc
push
jae
push
loopne
insb
xchg
dec
xor
fdivrp
mov
mov
aam
or
jns
mov
mov
popf
adc
jae
in
movsw
scas
divb
shlb
pop
adc
dec
push
rcrb
push
shrb
popf
loop
sarb
or
movsb
and
fwait
xchg
std
scas
push
jns
and
inc
mov
and
mov
ret
pop
and
adc
adc
push
inc
adc
push
xchg
or
push
fdivrs
scas
inc
push
inc
fcomps
outsl
jns
scas
insl
test
xchg
sub
inc
call
jle
dec
sti
push
stc
jg
add
push
loope
subb
arpl
cwtl
popa
or
jnp
xchg
aad
stc
mul
jnp
pop
pop
xchg
cmp
in
inc
xchg
and
dec
pop
lcall
pop
xor
scas
inc
ss
jp
inc
mov
test
xchg
ret
movsb
add
or
mov
js
test
xor
mov
sbb
push
cli
jmp
les
popa
push
mull
in
cmp
mov
jp
pushf
xor
fs
mov
stos
mov
cmc
jmp
cmp
dec
pop
push
jb
mov
lcall
pushf
inc
inc
call
iret
aad
in
mov
mov
addr16
cmp
mov
repz
pop
rorl
icebp
adc
pop
fcmovne
sbb
sub
jge
jne
jne
pop
jp
cmpsl
movsl
sub
loopne
xchg
lahf
movb
shlb
int3
jns
xchg
mov
adc
mov
mov
outsl
inc
adc
es
fdiv
insb
add
mov
icebp
push
fcomp
ja
jno
adc
divl
pushf
push
pop
orb
dec
pop
test
int
xchg
mov
add
dec
mov
leave
mov
inc
adc
orl
cmp
ret
pop
cmpsl
mov
or
repnz
jns
aaa
je
ljmp
in
xor
xor
mov
jno
mov
sub
das
je
sahf
xchg
adc
pushf
mov
mov
pop
cmp
mov
add
mov
or
fidivs
ret
aaa
imul
idivl
daa
js
lret
cs
jae
xchg
mov
jp
into
in
imul
add
out
mov
cs
sub
movsl
int3
cmp
stos
fildll
jae
push
push
outsb
jmp
add
add
nop
arpl
jbe
inc
inc
inc
pop
fldl
pop
xor
scas
ret
es
jno
fidivl
push
sahf
or
push
cmpsb
xor
adc
fmuls
adc
test
dec
dec
mov
fimull
jnp
dec
sub
dec
cmp
clc
add
enter
lods
jle
in
in
aas
xchg
jae
mov
mov
adc
or
mov
jno
lret
dec
pop
stos
insb
ret
xchg
xor
stos
pop
xchg
cld
ja
xor
jbe
movsl
stos
lea
inc
lcall
xchg
sti
imul
sub
ds
fucom
lcall
out
gs
je
iret
jl
xchg
stc
mov
rcll
sub
cld
cmp
arpl
lea
xchg
ffreep
ret
int
mov
ds
repnz
mov
mov
popf
in
push
icebp
mov
mov
dec
loope
fbstp
inc
and
testl
mov
xor
imul
test
out
cmp
mov
pusha
je
mov
insb
push
or
fdivrp
inc
xor
loope
icebp
pop
push
xchg
gs
xchg
in
cmp
ljmp
mov
cmp
sub
sub
jne
fldt
std
add
movsl
jle
nop
jl
sbb
inc
mov
hlt
jno
lcall
push
stos
push
push
rcll
add
daa
fsts
cmc
push
pop
xchg
push
inc
repnz
pop
xchg
pop
pop
dec
mov
cld
jge
aas
dec
rolb
mov
jo
into
pop
std
jmp
inc
addr16
and
jae
jl
pop
cs
xchg
movsl
scas
adc
scas
and
mov
jbe
jp
andb
pop
pop
adc
js
and
imul
pop
mov
fnstenv
jg
or
cld
push
mov
mov
cmc
xchg
repz
or
mov
or
or
mov
lahf
test
sbb
or
sub
inc
les
sub
lods
or
cmp
push
es
or
cmp
test
push
test
fucomip
add
pop
push
sbb
in
or
stos
jnp
dec
lret
jle,pn
dec
fisttpll
push
dec
push
pop
inc
xchg
push
es
push
pop
dec
push
jg
cmp
test
mov
aad
pop
scas
addr16
mov
fnstsw
fstl
push
int3
stos
cmp
mov
loope
pop
mov
sahf
shrl
es
sub
or
imul
and
cld
mov
and
adc
mov
out
popa
push
xchg
mov
dec
pop
dec
roll
pop
je
aas
dec
push
sub
or
add
or
pop
movsl
pop
sub
out
loop
aad
add
xor
or
repz
xchg
mov
or
pop
out
sub
inc
fs
cmp
mov
in
incl
xlat
scas
add
sbb
add
in
pop
std
js
push
scas
repz
gs
out
and
test
mov
stos
sbb
imul
mov
push
pop
push
pop
jl
imul
ret
dec
dec
adc
movsb
ds
pop
in
shll
xchg
sbb
out
dec
adcl
mov
rcll
dec
pop
cld
inc
cltd
adc
sbbb
pop
andb
popf
scas
pop
js
jb
jmp
lret
mov
sbb
sbb
mov
mov
lret
and
je
test
icebp
out
xor
out
mov
in
cli
call
jbe
out
adc
xor
sti
jo
mov
in
adc
or
fsubr
arpl
push
rcrl
je
jecxz
dec
add
imul
dec
lahf
mov
ss
push
inc
popa
xor
ds
sbb
adcb
enter
lret
pop
adc
nop
movsl
iret
int3
into
pop
or
scas
mov
xor
mov
movsb
mov
pusha
in
ds
loope
inc
push
insb
rcrb
mov
sbb
test
sub
xor
cmp
jbe
dec
cltd
add
mov
mov
mov
mov
out
es
adc
mov
andb
sub
lret
mov
dec
lock
in
xchg
add
add
ljmp
aad
xor
mov
clc
aad
lahf
jb
mov
cmc
mov
mov
and
sub
and
cmp
dec
repnz
mov
jne
cmc
arpl
inc
push
push
jb
into
ds
bound
and
xchg
loopne
je
test
sti
sub
ficoml
fstps
cmp
pop
das
arpl
dec
sti
xor
inc
mov
xchg
inc
rdtsc
lea
jg
mov
push
mov
movsb
jno
or
out
sub
cmp
xchg
mov
fimuls
jmp
rorl
mov
mov
pop
leave
mov
lea
inc
jle
aas
hlt
pop
ss
ret
js
stos
aad
mov
inc
dec
pop
imul
and
add
pop
fs
into
js
in
xchg
cltd
ds
mov
or
lds
dec
lods
aam
cmp
xlat
pop
and
cmp
sbb
mov
jge
or
mov
test
fs
cld
push
inc
scas
dec
in
lods
xchg
add
adc
sbb
setnp
and
gs
popf
mov
aam
sub
outsl
lret
testb
in
jmp
lea
in
aaa
adc
pop
pusha
cwtl
xchg
out
std
es
jl
adc
jo
lds
shlb
sub
js
insl
cld
and
adc
stc
insl
mov
rcrb
adc
xchg
add
push
inc
and
or
mov
pop
jl
test
push
bound
adc
xor
mov
sub
cs
push
cmp
std
loopne
mov
push
adc
mov
stos
mov
sar
xchg
inc
add
out
adc
in
mov
sahf
dec
xchg
pop
xchg
xchg
or
sbb
jb
or
rcrl
push
btr
jae
cmpsb
stos
push
fiaddl
pop
daa
sti
dec
lods
ds
jle
cli
add
pop
pop
dec
lret
push
out
or
xor
adc
cmp
shlb
stos
loop
jmp
inc
cmpsb
and
int3
std
inc
movsl
arpl
sbb
fcomps
pop
hlt
push
pushf
addb
clc
xchg
or
mov
or
sbb
cmp
sub
xor
das
xor
in
bnd
loopne
test
dec
dec
shlb
sti
sub
test
add
cmp
aad
xor
adc
and
mov
jb
add
push
bound
mov
add
sbb
mov
mov
aad
sub
mov
adc
inc
xchg
jo
xchg
outsl
test
dec
sbb
jecxz
mov
repnz
stos
jmp
iret
iret
push
lret
inc
dec
fldt
jae
adc
inc
jns
or
clc
cmpsl
jg
lahf
xor
jbe
lcall
mov
xor
or
loopne
lds
fs
add
andl
fsubrl
add
stc
lds
inc
roll
es
mov
pop
push
push
dec
stos
lahf
cmpsl
jmp
xlat
insb
into
add
xchg
push
mov
jb
enter
jp
hlt
loope
add
jmp
adc
ret
repz
mov
ss
jae
mov
loop
test
iret
sbb
inc
jo
push
xchg
ret
popf
ds
js
mov
xchg
loop
pop
jno
xor
mov
fs
insb
jle
lcall
incb
mov
outsl
divl
mov
imul
int
mov
push
in
cmp
int
pop
and
jbe
pop
jge
mov
sub
mov
mov
xchg
aas
test
inc
call
push
imul
xchg
or
jb
and
bound
fldenv
out
mov
and
sbb
pushf
test
es
sbb
dec
mov
and
shrl
stos
aas
mov
mov
mov
scas
xlat
fildl
inc
leave
shrb
popa
pop
cmp
push
cmp
mov
dec
mov
pop
pop
lea
loop
xchg
jo
sbbb
push
cld
out
pop
xlat
mov
out
in
cld
adc
mull
add
or
sarl
test
femms
mov
add
adc
outsb
imul
sbb
xlat
push
movsb
push
aad
insb
mov
rol
int
iret
js
rcrb
lahf
cmc
ja
push
cmp
cld
xor
popf
mov
mov
cli
push
out
adc
xchg
cmp
mov
inc
insl
adc
clc
insl
push
cs
lock
repnz
movsb
imul
mov
inc
push
dec
dec
repnz
insl
inc
call
dec
xchg
inc
or
rclb
dec
inc
mov
es
iret
xchg
shll
xor
inc
imul
mov
or
test
jns
shll
xor
arpl
or
scas
hlt
sahf
movsl
dec
cwtl
inc
dec
mov
and
ljmp
inc
sub
sub
rcrb
jae
ficomps
into
orb
cltd
push
cmpsl
xchg
lahf
mov
cld
sti
jmp
ret
aad
mov
push
add
cmp
out
mov
shll
and
frstor
loope
ret
movsb
js
les
dec
or
xor
bound
and
mov
cmp
cmp
jne
into
mov
test
or
fistps
leave
fistpl
ss
pop
enter
repz
cmpl
jae
xor
or
arpl
mov
push
mov
in
push
xchg
and
adcb
pushl
inc
jmp
jb
pop
aas
push
stos
mov
inc
ficoms
xchg
in
sti
inc
aas
insl
test
jae
jo
fsubl
and
lret
push
aad
mov
mov
xchg
cmc
add
fisubrs
pop
jge
inc
xchg
mov
fidivrs
jmp
pop
or
in
pop
call
insl
dec
lret
lret
mov
leave
dec
jne
fisttpll
lret
inc
mov
stc
push
call
or
add
shll
dec
add
mov
int
mov
push
orl
hlt
push
mov
mov
pop
inc
add
call
pop
xchg
je
lcall
jmp
cmp
mov
fimull
add
xor
mov
push
and
lcall
aas
rcr
sahf
add
sub
loope
notb
pop
xor
xor
subl
jmp
xlat
leave
imul
out
xchg
cmc
enter
shl
xor
xlat
sbb
inc
roll
sbb
pop
xor
jno
push
inc
ljmp
cmp
or
cmp
push
inc
mov
addr16
ret
int
jecxz
mov
lahf
shlb
pop
in
js
lret
xchg
and
sub
data16
cmp
adc
in
mov
in
fs
xchg
iret
xchg
mov
outsl
movsb
aam
fidivl
add
das
lods
xchg
or
ljmp
mov
cmp
xlat
and
adc
mov
fists
out
lea
xor
insl
repz
les
scas
mov
cli
sti
int3
add
pop
lret
push
leave
push
adc
mov
in
add
imul
and
cmp
mov
sub
ficompl
call
leave
sbb
or
into
jp
mov
inc
mov
out
test
push
push
sub
mov
shl
sarb
nop
dec
mov
pusha
mov
cwtl
inc
add
ss
adc
repz
daa
inc
add
fisubrs
mov
push
pop
add
int3
fcomip
aam
add
or
arpl
int3
push
leave
fmuls
pop
pop
loopne
cmp
pop
mov
push
out
mov
loope
mov
pop
xlat
fidivrs
fisubrs
sub
adc
mov
test
add
xor
inc
jg
stos
mov
iret
andb
aas
and
sar
lods
and
sbb
push
ss
filds
stc
sbb
ja
lret
mov
mov
and
pop
lock
out
test
push
cs
mov
add
lock
add
sbb
shll
fdivrl
or
lea
push
and
push
mov
stc
mov
jmp
cltd
mov
mov
adc
pop
pushf
in
int3
rorb
movsb
push
dec
ss
out
and
into
sbb
jns
adc
mov
dec
insl
mov
movsl
or
adcb
into
cwtl
xlat
pop
popa
leave
aam
xchg
and
mov
dec
jge
int
mov
xor
lret
stc
mov
test
xor
pusha
mov
out
mov
inc
or
aas
nop
jmp
pushf
and
daa
adc
outsl
test
xchg
mov
lds
add
into
mov
dec
push
in
fdivl
and
mov
cmc
push
clc
cli
dec
fs
stos
ret
xor
sti
subb
test
pop
push
pop
mov
mov
or
sti
xchg
push
and
lret
jp
clc
dec
lret
mov
stos
imul
aam
xchg
aas
push
inc
arpl
es
imul
and
sbb
int
sub
mov
mov
adcb
idivl
cmc
ret
pusha
mov
movsb
pop
leave
fdivrp
add
mov
mov
outsl
dec
movsl
js
xor
add
out
imul
sbb
dec
push
xor
jno
fsts
xchg
das
pop
push
mov
cld
push
inc
hlt
push
mov
push
inc
adc
pop
add
ds
out
mov
xchg
lock
int3
clc
cltd
jmp
hlt
mov
test
data16
cmp
mov
repz
call
adc
neg
dec
test
cmpsl
push
inc
test
xchg
sbb
and
mov
adc
dec
dec
enter
add
add
test
mov
xchg
adc
lahf
out
popa
push
pop
arpl
pop
xchg
les
es
nop
pop
sahf
inc
gs
bound
sub
insl
jecxz
test
in
xor
nop
mov
sar
sahf
in
xor
shlb
aas
mov
sub
leavew
sub
cmp
sbb
pop
and
xchg
lock
pop
aaa
inc
jo
cwtl
xchg
mov
idiv
scas
sahf
bound
or
push
mov
mov
or
sahf
sarl
sub
and
jb
out
rcl
std
dec
adcb
and
pop
in
je
sub
pop
sbb
pop
xchg
repnz
inc
adc
push
sbb
ja
stos
xchg
add
stc
lods
mov
xchg
xlat
mov
mov
aad
xor
push
popa
mov
inc
add
mov
push
inc
inc
dec
add
push
push
int
jo
cmp
mov
movsb
fildll
rol
mov
test
js
nop
push
stos
test
dec
cwtl
or
sbbl
jp
add
js
sbb
fsubs
repnz
sub
mov
add
jne
push
lahf
or
out
insl
movsb
call
xchg
in
in
xchg
inc
scas
enter
xchg
aad
enter
xchg
ds
hlt
aaa
movsb
inc
stc
aad
add
sub
add
and
jl
cli
pushf
mov
insl
push
aaa
mov
inc
pushf
jnp
push
xor
cmc
in
cmp
jbe
jp
jns
xor
int3
loop
aas
int
push
dec
ja
scas
imul
iret
sub
filds
mov
inc
outsb
sub
cmpsb
std
imul
adcb
outsb
mull
add
sbb
adc
out
mov
cmp
xor
inc
cmpsb
add
pop
insl
test
inc
mov
jmp
repnz
xor
jmp
mov
in
xchg
popl
push
repz
and
jns
into
cmpsb
pop
push
movsl
fcmovnu
fistpll
jns
fwait
sbb
add
xor
sbb
or
int
dec
pop
test
sub
loop
pop
push
ja
sbb
insl
add
jns
push
lods
into
pop
pop
mov
mov
cwtl
rcrb
adc
cmp
bound
pop
lea
cmpsb
push
daa
in
testb
orl
inc
cmp
fnstsw
icebp
aad
mov
pop
and
pop
enter
mov
pop
daa
push
pop
shrb
clc
aaa
pop
mov
inc
inc
enter
mov
addr16
xor
push
test
test
inc
jae
imul
sub
fbstp
push
push
out
or
jg
rorl
fwait
sti
or
adc
push
aad
insb
shrb
xchg
cld
cmp
mov
cmp
push
in
pop
sbb
jne
pop
and
push
aam
dec
or
call
out
push
mov
cmpsl
ljmp
clc
dec
dec
test
mov
and
stos
movb
les
scas
call
add
push
mov
push
jg
cmp
mov
inc
dec
xchg
cmp
sbb
sahf
aaa
add
jmp
aaa
in
push
xor
ret
cmc
stos
mov
push
sbb
cltd
icebp
jmp
es
sub
sbb
ja
fisttpll
in
xor
adc
mov
jo
jnp
jp
hlt
int
adc
aam
movsl
pop
cltd
mov
cmp
enter
xacquire
outsb
imul
insl
or
push
jg
loopne
and
xchg
jg
xchg
mov
dec
xchg
ja
daa
popa
outsl
fistpll
es
les
xchg
push
xor
mov
gs
frstpm(287
push
incb
adc
inc
inc
pop
out
lret
fmuls
mov
es
sub
insb
fisttpl
lcall
jecxz
jmp
mov
xor
cmpsb
movsl
or
rcrl
ficoms
pop
jo
add
and
sub
push
mov
add
out
mov
xchg
add
fldt
pop
ljmp
mov
rcll
sbb
push
adc
inc
pop
fnstenv
jg
inc
cltd
test
jo
ljmp
cmc
popl
mov
inc
in
orl
mov
xlat
ror
fdivl
pushf
xchg
sbb
popa
inc
lea
xchg
jne
insb
out
outsl
aam
sbb
push
outsl
cmp
jp
mov
or
inc
sub
mov
adc
fnstsw
lock
ds
adc
imul
aam
addr16
pop
jae
rol
xor
sahf
es
stos
stos
fbld
add
test
or
in
pushf
lcall
mov
xchg
hlt
subb
pop
xor
sub
or
imul
inc
inc
fsubs
rcrl
push
and
repnz
mov
pusha
cmp
pusha
xor
cmp
lcall
xchg
mov
subb
ss
cmp
and
and
icebp
jb
push
cld
jne
push
dec
cwtl
pushf
mov
xor
pop
sbbl
fldt
pop
movsl
pop
jg
test
push
cmpsb
xorb
jge
aam
jecxz
lods
sub
push
loope
cltd
push
gs
add
pop
push
mov
int3
insl
out
fs
mov
cwtl
jns
jmpw
mov
sub
push
js
xor
or
incl
mov
jbe
shlb
or
push
sub
pusha
xchg
sti
ds
jns
inc
mov
aad
mov
push
sbb
in
mov
mov
cmc
stc
std
imul
xchg
adc
add
test
cwtl
push
js
pop
or
xlat
mov
stos
repnz
adc
push
inc
sub
pop
popf
xor
push
dec
mov
mov
xchg
mov
jbe
mov
rolb
jno
shrb
mov
subb
cwtl
into
mov
mov
aam
out
adc
ljmp
lock
cmp
mov
pop
mov
fsubl
jae
sti
xchg
inc
popa
mov
dec
int3
roll
stc
leave
mov
adc
cmc
pop
add
pop
lods
push
jmp
mov
mov
adc
sti
dec
sbb
lods
jns
add
adc
sub
sarl
pop
xchg
dec
sub
mov
mov
test
notb
push
pushl
lods
xchg
jg
and
clc
xchg
push
xchg
xchg
aad
mov
xchg
in
popf
movsb
inc
lret
outsl
call
int3
jnp
mov
pop
fistpll
movsb
mov
outsl
mov
scas
pop
ret
lds
aam
push
mov
les
or
out
gs
cmp
ds
mov
popf
sub
mov
adc
push
or
push
xor
add
sbb
cld
xor
xchg
ja
stos
fwait
mov
xchg
test
test
and
sub
push
test
dec
rcrl
lcall
loop
push
jo
cltd
das
lret
test
mov
in
push
and
jge
cmp
das
xor
add
sbb
mov
mov
fsubp
sahf
je
into
mov
dec
jecxz
inc
daa
and
lock
jbe
add
test
cmp
mov
stc
loopne
mov
dec
lds
ret
imul
push
fs
sahf
inc
pop
push
pop
aaa
popf
gs
and
pop
sbb
cmp
enter
pop
adc
lret
xchg
jp
lahf
sbb
cltd
add
test
mov
pop
out
add
addl
fnstenv
or
fwait
icebp
cmpsb
fistpll
jmp
pop
lcall
cmc
lret
sbb
pop
les
push
lret
pop
adcb
sarl
aam
arpl
jp
adc
inc
push
ret
inc
out
push
sub
adc
pop
mov
sub
mov
ret
push
mov
mov
enter
mov
mov
shrb
xor
add
rolb
aas
les
call
inc
mov
sbb
cmpsl
push
loope
loopne
mov
sbb
push
xor
cli
jb
mov
lret
pop
dec
mov
lcall
fwait
mov
jmp
out
outsl
jbe
dec
fisubrs
xchg
and
cmp
icebp
jp
and
push
and
jmp
cld
out
mov
fsubr
cs
inc
or
into
adc
xchg
repz
cmpsl
cmpsb
inc
mov
out
outsl
aas
mov
push
outsb
int3
shrb
mov
sbb
shr
fwait
adc
add
inc
das
sbb
and
mov
sbb
out
mov
push
fcmovnb
idivb
pop
mov
aaa
and
ljmp
lahf
sub
push
jb
cmpsb
xchg
sbb
sahf
jecxz
sbb
das
xchg
pop
pop
fs
jne
mov
cmpsl
popa
les
clc
outsl
jbe
mov
cmp
jnp
lock
mov
jle
mov
in
lods
inc
pop
and
imul
xor
sbb
lock
int3
aam
cmc
pop
sbb
test
push
cwtl
push
nop
push
jle
test
std
add
jmp
rol
and
or
test
inc
jns
push
es
push
scas
sub
add
sbb
push
lods
jno
mov
out
mov
fisubrl
sbb
add
cld
js
push
adc
xchg
cld
dec
or
addr16
out
outsl
int3
inc
or
xlat
inc
dec
ret
pop
iret
dec
and
and
jg
mov
adc
sbb
hlt
xchg
bound
jecxz
stos
jmp
les
cmpl
mov
xchg
mov
cli
cwtl
cwtl
sbb
mov
out
sub
gs
push
ret
cmc
rol
into
xor
xlat
ret
outsb
shrl
sbb
sub
mov
iret
loop
stos
scas
scas
cs
cmp
pop
pop
pusha
sti
xor
and
fsts
pusha
nop
xchg
int
xor
into
dec
cmc
out
mov
arpl
mov
xchg
and
mov
inc
fst
dec
jb
shrb
stos
jb
push
xchg
repnz
sub
ljmp
inc
jno
inc
aas
xchg
rclb
push
mov
mov
jo
sti
push
lahf
add
push
in
cmc
int3
stc
mov
sub
cmp
imul
lods
pushf
jg
clc
in
dec
movsl
mov
push
mul
jns
cmp
mov
mov
xlat
nop
xlat
xlat
mov
inc
xor
sub
or
in
sti
ss
lods
sbb
enter
xor
popa
xor
push
scas
popa
fs
fsubs
pop
insl
mov
stos
push
ror
jl
imul
or
enter
nop
cltd
out
dec
pop
mov
inc
int
icebp
xchg
inc
pop
in
inc
outsl
xchg
xchg
ja
arpl
dec
push
adc
mov
pop
and
mov
bound
push
into
pushl
mov
fidivrl
divl
in
and
test
xchg
aam
sbb
mov
pop
das
out
test
dec
hlt
pop
ret
movsb
add
xor
adc
add
sbb
mov
pop
pop
les
sbb
cmpsl
je
dec
arpl
jmp
xchg
inc
adc
fisttpll
fstl
out
mov
jno
or
enter
jp
cmc
inc
fsubl
xchg
cmp
int
test
jnp
pop
pop
mov
aam
inc
popa
pop
pop
push
sbb
ficoml
jne
sub
lcall
mov
and
xchg
jmp
jge
addr16
sub
cld
push
jae
loopne
addr16
test
rcrl
in
imul
cmp
pusha
outsl
call
pop
pop
les
icebp
xchg
cmp
mov
add
xor
fisubl
in
mov
je
mov
push
push
repnz
pop
sbb
test
mov
fs
jge
push
std
sahf
jno
dec
mov
ret
js
out
push
imul
sbb
mov
lea
psrad
xor
cwtl
lahf
addr16
out
pop
sbb
data16
inc
cmp
jmp
sti
push
push
outsl
xchg
fildl
jno
xorl
push
or
aas
popa
add
loope
in
push
push
xchg
out
insb
fsts
mov
fdivrs
out
hlt
push
adc
out
fmull
xchg
and
dec
or
xchg
cmp
inc
push
push
xor
dec
xchg
mov
xchg
je
push
into
cld
push
fs
mov
jo
pop
leave
imul
mov
out
xor
aaa
cli
in
dec
push
jne
mov
dec
dec
inc
xor
mov
mov
push
dec
out
out
into
add
aas
test
push
cs
outsl
mov
push
jecxz
mov
or
clc
mov
out
stos
xchg
das
mov
loopne
jle
dec
lcall
cld
js
and
lret
cmp
jns
or
and
dec
jmp
test
cmp
loopne
hlt
insb
inc
int3
sub
adc
scas
sbb
stos
ss
scas
pushf
sub
xchg
in
loope
fcmovne
aas
movsl
xor
scas
xlat
sbb
loop
aas
sub
cmp
adc
mov
stos
and
sub
loopne
ret
adc
mov
or
mov
sbbb
imul
lcall
fsubr
push
inc
sub
int
or
mov
cmp
bound
mov
sahf
push
and
push
in
push
jns
les
loope
inc
shrl
nop
daa
ja
jp
mov
jbe
sub
mov
add
lods
jge
aaa
xchg
sbb
dec
outsl
ljmp
jp
daa
andb
sarb
in
in
outsb
mov
sti
xor
mov
insl
or
pop
push
sub
mov
xchg
fwait
mov
sti
cmc
dec
add
in
push
jg
testl
insl
sub
into
repz
dec
pop
int3
scas
inc
cltd
out
jbe
test
in
adc
fidivrl
cld
scas
lret
insl
push
jmp
pop
push
cli
jmp
jl
or
aaa
movl
fsubl
adc
jmp
jl
cwtl
les
sub
pop
ficoms
mov
xor
dec
bound
pop
test
outsb
data16
push
xchg
fsubl
adc
rorl
pop
or
arpl
rcr
sbb
mov
ret
mov
and
mov
lret
cs
ds
and
jb
dec
mov
mov
cmpsb
dec
mov
or
mov
repz
xlat
pusha
and
xor
test
outsl
test
and
clc
into
mov
shlb
clc
inc
fisubl
out
sbbl
fmuls
mov
pusha
data16
add
orb
cltd
mov
inc
lds
addr16
mov
push
popa
stc
fbstp
jae
mov
inc
push
outsb
sbb
xor
xchg
loopne
aas
sub
bound
mov
dec
pushf
movsl
mov
mov
lods
push
jbe
movsl
faddl
pop
jne
push
mov
add
pop
cmpsl
jp
mov
fidivrs
jle
xor
xchg
or
add
jno
mov
cwtl
fwait
dec
sub
mov
pop
jl
cld
outsb
jmp
flds
test
xor
ljmp
push
add
gs
lahf
lds
adc
testl
into
xchg
imul
mov
or
loope
popa
jne
ret
mov
leave
cmpsb
ljmp
shrl
nop
cmp
loope
sahf
and
jo
pop
bound
mov
imul
jno
inc
adc
xchg
xchg
cmp
pop
test
mov
and
ret
cmp
xor
lock
nop/reserved
or
fistpll
imul
mov
cmpsb
lret
mov
sti
mov
fidivs
adc
jo
pop
hlt
fstps
ds
push
sti
xor
into
cmpsb
mov
jno
or
sahf
fdivrs
loop
xorl
and
sti
mov
popf
jp
pop
xor
push
test
pushf
xor
mov
jne
add
mov
adc
lcall
fucomi
or
les
cs
loopne
adc
repz
or
aam
cmp
in
mov
and
lahf
inc
xor
lret
push
call
test
imul
adc
xor
add
push
lods
or
mov
xor
xor
and
stc
jno
call
test
inc
es
mov
pop
mov
pop
adc
pop
test
rcr
jp
dec
rolb
dec
or
rcll
add
movsb
aam
mov
adc
mov
lock
enter
sarl
popf
outsb
sbb
sbb
ret
fisubrl
lods
popa
xchg
rcl
outsl
xchg
xor
cmc
aad
cwtl
mov
add
sbbl
cmp
push
cmp
mov
jnp
lahf
notb
push
mov
in
add
adcb
dec
and
push
push
push
adc
std
icebp
pop
mov
popa
fbld
fisubrl
inc
in
inc
hlt
xchg
push
sbbb
pushf
shlb
cli
adc
inc
pusha
adc
xchg
addl
and
fadd
inc
push
insl
lock
scas
aam
loope
push
js
outsl
movsl
scas
cmp
jnp
or
popf
mov
xchg
dec
xchg
ja
lcall
pop
xor
or
add
fwait
paddd
repz
les
test
into
sub
add
mov
jge
sub
out
adc
push
arpl
jae
sbb
inc
pop
js,pt
inc
push
xor
or
dec
or
jle
insb
and
jnp
sub
jge
mov
push
add
pop
sahf
es
sub
sbb
icebp
cmpl
fwait
mov
add
jp
testb
stos
aam
sbb
cmpb
mov
pop
xor
aas
loopne
das
mov
sbb
inc
adcb
punpckhwd
sub
stos
jmp
sub
push
stc
jge
insb
aam
hlt
dec
push
sti
ficompl
shll
lods
test
jnp
mov
jae
inc
dec
adc
mov
xchg
cmp
push
xor
das
jno
in
xchg
std
cmc
test
subl
rcr
cwtl
shll
or
rcll
dec
int3
jmp
icebp
mov
clc
push
fcompl
sbb
xlat
lret
inc
ss
jnp
pop
dec
xlat
pop
es
lods
int
arpl
insl
mov
pop
mov
jae
mov
mov
clc
sub
fiadds
frstor
jnp
mov
arpl
mov
lea
jb
inc
pop
in
repnz
cwtl
aaa
pop
mull
xor
mov
xor
jge
pop
jle
pop
mov
xchg
sub
mov
inc
ficoml
inc
pop
mov
mov
xor
and
insl
xchg
iret
lahf
ljmp
outsl
sbb
outsb
imul
pop
jae
push
xchg
jnp
orb
icebp
jne
push
nop
mov
enter
lret
sub
iret
lods
push
push
mov
sbb
loop
mov
push
xchg
mov
out
jmp
es
popl
add
sub
cld
jo
insl
jge
inc
mov
fs
and
rcpps
sub
int
aad
xlat
lods
stos
adc
push
repz
or
mov
push
dec
or
jns
add
sahf
stos
and
push
loopne
rorb
cmc
fistpl
fcomi
xchg
push
sbb
jl
lock
mov
mulb
or
test
pushf
jns
push
push
idivl
xchg
push
push
in
mov
adc
jno
adc
roll
dec
xchg
iret
mov
imul
int3
ficompl
xchg
nop
fistl
addr16
xchg
mov
sbb
ljmp
and
cmpsl
icebp
popf
outsb
mov
xor
cmc
loopne
xchg
lret
xor
movsl
lea
pop
popa
movb
jae
xchg
sbb
adc
cmp
aam
std
xchg
jge
pop
dec
data16
ss
dec
or
sti
addr16
bswap
and
cmpsb
cli
jbe
rol
or
nop
inc
xor
jg
sbb
imull
push
jne
or
inc
push
fbstp
js
arpl
sbb
cmp
fs
lods
push
sbb
adc
mov
scas
cli
jl
enter
clc
add
pop
jno
cwtl
cmpl
shlb
mov
cli
mov
rorb
and
shrl
adc
jecxz
imul
fadds
xchg
test
sarl
ret
xor
mov
push
dec
jle
xor
icebp
notl
or
cltd
ja
xor
fwait
push
aas
in
out
adc
and
push
adc
into
xchg
icebp
jae
pusha
ret
fwait
push
mov
lahf
jg
push
xchg
rolb
jmp
idivb
inc
push
cmpsb
sub
jno
mov
dec
jmp
sahf
das
or
pop
push
xchg
xor
dec
daa
push
stc
jb
fcoml
in
jp
daa
inc
add
lret
popf
faddl
int3
inc
push
rclb
xchg
es
adc
cmp
mov
sahf
dec
leave
cli
stos
xor
inc
pop
and
aaa
cmp
mov
shll
sbb
dec
into
cld
cltd
mov
sub
in
sti
mov
push
mov
xor
lock
movsb
mov
inc
pop
sbb
out
and
insl
sub
jns
call
inc
mov
cmpb
js
xor
dec
mov
andb
jne
pop
jns
fmul
vmovss
mov
lock
pop
pop
outsb
aad
sbb
cli
mov
push
testl
jge
xchg
loopne
mov
popf
adc
sbb
mov
cmpsb
and
sbb
jne
int
add
jns
repz
mov
into
fwait
dec
mov
xchg
push
shll
fs
cmpsb
sar
pushf
cli
cmpb
xor
je
or
fstpl
ffree
push
jns
fwait
ud1
sub
int3
mov
fisttpl
fxch
fstpt
pusha
test
adc
in
call
daa
rcll
divl
adc
and
lds
enter
sbb
stos
xor
call
cmpsl
adc
mov
add
mov
rorb
iret
leave
hlt
xchg
insl
pop
test
test
out
jns
out
and
pop
outsl
mov
add
push
mov
jns
ds
rcrb
sbb
xchg
in
icebp
xchg
imul
mov
add
cmpsb
mov
inc
cmp
sarb
inc
les
mov
insb
push
or
cmp
push
popa
and
mov
retw
clc
es
xor
xor
cltd
lretw
lods
adc
in
fbld
mov
movsl
or
popf
pop
mov
dec
lcall
out
cmpsl
aaa
pop
fildl
les
jne
dec
xor
jge
mov
lods
repnz
dec
pop
das
sub
inc
jecxz
push
arpl
xchg
enter
rcr
push
push
insl
repnz
repnz
arpl
loop
out
adc
testl
lret
paddusw
stos
inc
mov
and
or
sbb
pop
fcmove
xlat
adc
or
cld
cwtl
sbb
rclb
cld
mov
lods
push
pop
dec
sbb
push
imul
dec
mov
std
mov
lods
call
sahf
jl
push
je
add
enter
shl
dec
loope
test
daa
pushf
stc
inc
lods
iret
lock
mov
push
push
dec
or
inc
dec
pop
pop
pop
pop
xor
out
int3
xchg
stc
pop
es
andl
jno
cld
xchg
adc
pop
pop
lods
sahf
or
jmp
add
pop
xor
mov
fwait
push
dec
mov
inc
int3
lds
movsl
or
push
aaa
cmpsb
mov
incl
xlat
mov
dec
dec
mov
sti
mov
int
test
push
enter
lea
pop
es
sbb
xchg
cmpsl
vpaddusb
sbb
test
in
ljmp
test
lock
pop
mov
ja
and
mov
in
popf
mov
dec
loopne
inc
fcmove
test
outsb
ficoml
sbb
jle
rcrb
lahf
dec
push
dec
enter
mov
jge
repz
dec
inc
adc
mov
jno
mov
out
mov
pushf
sub
repz
cmp
test
jp
shll
xor
ficoml
lahf
pushf
popa
pop
pop
jecxz
inc
scas
jl
or
xor
rolb
push
arpl
xchg
mov
push
inc
jne
lock
std
mov
pushf
insb
in
stc
mov
in
ss
shl
je
jb
pop
cmp
dec
inc
mov
scas
jecxz
inc
fwait
or
mov
jne
inc
xor
out
push
sub
push
lahf
adc
pop
jge
or
pop
sub
xchg
mov
adcl
loopne
fwait
push
and
sbb
jmp
adc
pop
sbb
test
or
mov
jns
shrl
and
movsb
jo
aam
dec
std
bnd
subl
in
sarl
scas
push
scas
popa
mov
stos
in
decb
sbb
das
push
cmc
cmp
ss
leave
mov
jle
jnp
cmp
int3
das
lret
test
mov
scas
and
dec
popa
or
lods
dec
or
push
idivl
or
push
inc
test
cli
mov
aas
jle
mov
and
jno
addb
and
lods
pusha
xchg
adc
test
lods
cmp
dec
mov
out
inc
sub
dec
lods
in
gs
je
mov
sub
mov
stos
mov
stc
jbe
mov
and
stos
mov
adc
mov
xchg
jecxz
cmp
dec
mov
fmull
inc
js
xchg
lret
or
icebp
push
int3
jmp
icebp
and
cltd
out
imul
test
loope
xchg
mov
push
dec
cmpsb
xchg
and
out
mov
mov
sub
loop
leave
push
sti
cmpsb
push
jnp
push
mov
adc
movsb
js
add
and
mov
out
inc
pop
test
adc
lahf
in
hlt
mov
mov
pusha
push
ret
mov
js
or
rcrb
std
push
add
icebp
or
sub
pop
jl
call
addb
inc
xor
jae
mov
and
add
lods
or
stc
outsb
js
add
inc
xchg
idivb
loope
lds
mov
push
rol
inc
mov
subb
das
xchg
in
pusha
or
or
fldl2e
mov
pusha
pop
push
xchg
cmp
mov
adc
add
and
jg
cmp
mov
jp
cmc
jg
inc
aam
fildll
aaa
roll
xchg
das
dec
lock
fwait
mov
cmp
mov
mov
inc
enter
push
call
sar
in
push
or
mov
push
cmp
ret
inc
rorb
inc
int
sbb
rol
jno
nop
test
mov
pop
push
cmp
je
lret
adc
cmp
mov
dec
adc
or
pushf
adc
mov
popa
adc
cmpsb
sbb
js
cld
sti
adc
xor
cmp
inc
popa
adc
add
test
je
mov
jo
sahf
in
pop
xor
xor
jae
fistpl
mov
push
sub
inc
lahf
adc
adc
stos
push
add
in
mov
xchg
pop
test
inc
fldenv
ficomps
lret
movsb
lahf
stos
add
dec
in
adc
js
dec
nop
mov
push
mov
mov
push
call
jnp
imul
es
pushf
push
push
cld
outsl
mov
dec
inc
mov
pop
mov
add
or
sub
mov
js
aam
pop
xchg
and
iret
mov
adc
hlt
inc
outsb
jb
mov
hlt
lahf
jge
ficompl
inc
cmpb
data16
jmp
int
leave
inc
test
xor
out
xchg
pop
inc
mov
call
mov
cmp
popa
and
dec
mov
add
leave
cli
jmp
test
or
std
mov
adc
movsb
scas
push
mov
jl
push
ret
sbb
inc
in
push
cmp
sub
addl
das
ljmp
xchg
insb
ret
loop
les
cmpxchg
dec
sub
push
hlt
pop
andl
lret
int
aad
aad
pusha
mov
ret
loopne
in
cmp
ret
es
sti
test
cli
out
mov
add
in
cltd
in
xor
pop
mulb
stos
and
xchg
shlb
sarb
ljmp
add
mov
mov
sbb
mov
ljmp
cld
fdivs
addl
nop
sub
lods
inc
lret
sahf
mov
mov
inc
push
out
loop
daa
cmc
pop
addb
xor
mov
inc
xchg
loop
mov
gs
mov
mov
xchg
jns
sbb
dec
testl
ret
pop
and
push
negb
daa
push
clc
xchg
add
add
cmpsl
mov
es
sahf
data16
inc
dec
cmp
rorb
mov
push
lods
xlat
pop
gs
jno
jne
loopne
add
andl
outsb
mov
add
fisubrs
sub
or
add
lods
xchg
push
mov
test
out
scas
in
or
lret
add
adc
cmp
cmp
fs
lds
cmc
in
mov
andl
insb
sbb
imul
mov
and
sub
pushf
jb
sub
lcall
aad
inc
test
imul
pop
push
lods
cmpsb
jb
in
jge
cli
stos
stos
inc
in
ja
outsb
jns
jecxz
mov
in
dec
aaa
outsb
std
push
enter
mov
jp
mov
jge
aas
dec
dec
stos
mov
mov
lods
gs
fists
ds
sub
push
scas
ss
jnp
pop
cmp
add
cli
jp
iret
ljmp
scas
nop
jle
or
inc
stos
sbb
mov
dec
add
or
je
insb
jl
xchg
xlat
sub
les
push
mov
or
inc
jecxz
pop
loope
sbb
pop
pop
loope
imulb
sub
push
call
or
sar
mov
das
loop
inc
sbb
mov
aaa
push
movsb
rcll
xor
hlt
or
lods
call
loope
pop
cmpsl
and
mov
hlt
stc
mov
fldcw
es
xchg
mov
mov
aaa
jg
sbb
popa
fcoms
and
loopne
icebp
pop
dec
and
ds
sbb
in
adcl
cmp
aaa
adc
push
push
mov
cmp
push
into
mov
outsb
add
test
jp
bound
xchg
adc
add
iret
add
fwait
adc
mov
pop
mov
jae
test
adc
xchg
inc
mov
test
lods
idivb
icebp
out
xchg
inc
push
and
or
cld
div
jne
pmaddwd
je
mov
sub
sbb
loopne
sub
add
add
dec
mov
dec
les
mov
int3
cmp
dec
cmp
daa
mov
xchg
out
data16
fistl
rolb
and
pop
cmpsl
sahf
fcmovne
sub
mov
push
lods
xchg
dec
loope
mov
aas
pop
lds
aad
cmp
shl
dec
fiadds
push
in
inc
cmp
dec
rclb
pop
inc
mov
mov
and
push
iret
mov
xchg
adc
test
push
sbb
push
and
jmp
push
xchg
lods
adc
repz
lock
cmp
jge
setb
and
daa
testl
loope
cli
rorb
cmp
mov
sbb
cmp
cld
sub
rcrb
sarl
mov
ret
push
or
or
ds
int3
pop
or
in
std
ficoml
inc
lea
aad
loopne
fcoms
mov
cmc
pop
loope
aad
loop
xchg
and
in
loope
mov
sbb
add
adc
clc
fdivrl
fwait
sbb
test
mov
in
divb
mov
bound
mov
dec
pop
push
fs
sbb
bound
lret
jo
jno
mov
test
ljmp
or
int
inc
aad
inc
stos
sub
daa
jbe
xor
dec
push
ds
adc
ds
pop
nop
jne
jmp
xchg
add
aaa
mov
mov
jnp
ds
mov
add
jp
rcr
xchg
sbb
xor
jbe
mov
push
scas
aas
xchg
mov
fs
jecxz
pop
inc
sub
and
sub
pop
sbb
push
sub
mov
ds
and
and
roll
cmp
int3
mov
std
into
mov
scas
mov
out
das
adc
mov
xchg
sub
add
int3
pop
or
pushf
push
xor
les
sbb
stos
push
stc
dec
stc
addr16
pop
lret
decb
mov
std
xor
cmp
jne
pop
nop
jp
in
jbe
or
xchg
aas
cli
sub
daa
rcrb
cs
xchg
subl
or
inc
mov
adc
bound
iret
pop
inc
hlt
cli
cs
mov
or
das
rcrl
dec
dec
shl
cmpsl
cs
push
rcrb
pop
adc
gs
cmp
mov
and
lds
and
enter
inc
pop
enter
sub
je
xor
mov
jmp
aam
aad
movsl
adc
faddp
inc
mov
mov
lcall
ret
and
mov
cltd
xor
cmpsb
hlt
nop
outsb
dec
insb
dec
rorb
pop
adc
add
sti
loope
scas
and
aaa
xor
aas
inc
hlt
mov
imul
insl
lods
mov
dec
shlb
jnp
lcall
xor
mov
jle
inc
ficoml
icebp
and
rcrb
xchg
jno
adc
jno
pop
pop
fstp
push
stc
int
jl
fildll
int
and
push
aad
cmpsl
insb
mov
movsb
sti
in
psraw
inc
test
xchg
jb
scas
rcl
std
add
jb
fs
cmpsl
mov
jo
cwtl
sbb
push
dec
jge
adc
aad
leave
xchg
push
out
sbb
cmp
hlt
jo
lods
jbe
lods
mov
mov
add
sbb
enter
ret
jnp
outsb
push
fnstenv
mov
mov
popf
cltd
sub
mov
bound
push
pop
cli
mov
imul
push
testb
sbb
xlat
gs
loop
jecxz
push
cmpsl
pusha
xchg
movsl
xlat
leave
decl
pop
stos
repz
es
pop
xchg
in
iret
fistpl
sti
dec
inc
xchg
ljmp
cmpsb
xor
xchg
mov
mov
sti
insb
lock
push
cwtl
sti
gs
iret
pop
pop
and
pop
mov
cmp
and
cltd
stc
jns
xorl
xor
add
sbb
and
stos
push
xor
jmp
cmp
test
arpl
lods
test
pop
das
fisttpll
arpl
pop
xchg
push
or
inc
jae
sbb
inc
outsl
gs
rcll
mov
pop
mov
sub
mov
repnz
jnp
mov
adc
mov
jl
mov
iret
movsb
in
inc
fildl
pop
dec
cmp
mov
xchg
or
mov
pop
mov
scas
pop
mov
ret
cmp
push
bound
adc
mov
fsubs
out
test
add
jae
xor
xchg
int3
imulb
xchg
ss
cmovs
xchg
jp
dec
adc
lahf
mov
jbe
movb
xchg
cmp
and
inc
push
dec
xchg
mov
or
aad
cld
fucompp
jns
lcall
into
cwtl
and
test
adc
dec
dec
movups
sub
or
leave
xchg
push
repz
pop
push
xor
clc
ss
subb
je
adc
push
mov
rcrb
jl
push
lock
push
dec
push
insb
jo
mov
imul
dec
packuswb
and
sbb
es
inc
lods
push
int3
ljmp
cmp
fildll
cmpl
mov
test
or
push
push
xchg
push
adc
into
clc
sbb
fdivs
or
cmp
mov
lods
push
movq
mov
or
inc
sbb
adc
call
jne
addr16
dec
js
outsb
dec
loope
or
loop
inc
dec
sub
std
push
call
insl
sub
or
aam
mov
jns
and
mov
test
xor
movsl
daa
and
mov
fstps
in
scas
lods
into
std
mov
mov
cmpsb
sarb
cwtl
xlat
outsl
rcl
in
mov
imul
dec
or
pop
je
in
es
pop
ljmp
call
cmpsl
xchg
shlb
insl
cmp
or
mov
fs
arpl
push
mov
sbb
sub
inc
push
movsb
lods
jnp
add
pusha
dec
pop
and
inc
sub
out
in
mov
stos
sbbl
loope
addr16
out
fistpl
cmp
insl
dec
adcl
loop
hlt
mov
push
jmp
sbb
lcall
inc
hlt
xchg
ja
add
out
repnz
jae
mov
pusha
ja
sub
xchg
fs
repnz
ss
xchg
aas
pop
sbb
jl
jae
test
push
or
xchg
xor
ss
nop
cwtl
jb
sub
xchg
inc
cmp
lock
jo
inc
jb
cmp
ret
cmp
insb
jo
aam
mov
in
push
out
xchg
repz
lock
sti
loopne
dec
mov
mov
or
mov
sub
imul
es
push
sbb
dec
jnp
outsb
stc
push
or
push
and
and
clc
jne
add
pop
mov
xor
ja
fwait
nop
sbb
in
lahf
mov
pop
loope
pop
sti
xor
in
mov
scas
push
xchg
xchg
shrb
ret
out
loope
inc
in
lods
popa
sbb
dec
jno
shll
jns
out
jecxz
test
sub
dec
imul
xchg
jns
sub
cltd
negb
stos
in
adc
mov
or
cmp
data16
movsb
ljmp
movsl
cmpsb
sahf
mov
rcl
scas
notb
nop
xchg
jae
leave
in
int3
cmp
xchg
cmpb
nop
jmp
and
xchg
incl
repz
sti
jmp
lods
inc
pop
push
popa
jecxz
jle
mov
lahf
sbb
dec
lock
lahf
and
ret
adc
sahf
xor
and
fisttpl
cltd
inc
aas
popa
mov
sub
fmul
mov
test
lret
shrl
out
adc
test
cmp
fwait
stc
popa
mov
fstps
gs
mov
ss
call
shl
dec
adc
mov
add
push
push
mov
loopne
sbb
popa
movsl
sbb
mov
and
out
in
add
int3
xchg
xchg
mov
cmp
cmp
cmc
mov
call
movsl
cmpsl
sbb
movsl
xchg
sbb
out
jle
int
fdivr
popa
in
or
xchg
xor
in
mov
repnz
and
daa
movsl
out
in
jns
pop
outsl
inc
jbe
imul
mov
dec
stos
ljmp
rorb
lock
and
inc
sub
jg
mov
add
dec
daa
in
mov
adc
popa
jecxz
adc
fisttps
dec
cmp
push
mov
mov
repnz
into
int
dec
cld
into
js
popa
in
jne
in
jp
push
popa
pop
dec
adc
inc
pop
roll
pop
or
cmp
sbb
gs
push
addr16
les
sbb
cld
das
mov
mov
pop
xor
jge
and
ss
mov
pop
cwtl
aaa
inc
insb
push
push
sbb
stos
stos
push
and
aad
cmp
insb
xor
mov
insb
sbb
movsb
sub
inc
mov
sbb
push
ret
int3
jb
push
out
or
mov
push
xchg
jns
xchg
js
pushf
mov
lahf
pop
out
ret
in
lea
and
fisubrl
clc
fisubrs
call
dec
stc
mov
out
cmp
outsl
cmp
imul
cmpsb
addb
leave
gs
xlat
out
scas
int3
fiadds
jae
ffree
mov
dec
daa
inc
lret
push
cmp
mov
loopne
out
fcmovbe
add
adc
stos
loope
mov
dec
xchg
int3
mov
mov
push
inc
cmpsb
push
mov
mov
push
xchg
stc
push
sahf
int
fsubrl
push
mov
lods
xor
or
and
jnp
jmp
cmpsl
repz
xor
in
cld
dec
xchg
mov
gs
jmp
dec
xchg
mov
loop
std
aad
and
mov
fnstenv
test
or
ficoml
dec
out
xchg
jp
and
pusha
outsb
neg
mov
ret
lcall
mov
cmp
scas
or
out
xor
push
int3
dec
jmp
orb
inc
pop
inc
mov
xor
adc
push
lods
sti
sbb
lcall
mov
pop
xchg
out
movmskps
xor
jno
idivl
arpl
pushf
dec
js
mov
xor
loop
mov
cld
inc
push
pop
incl
pop
jno
adc
pop
dec
cs
loop
xor
adc
loopne
mov
ljmp
in
jnp
push
and
lds
bound
ficoms
or
aaa
xor
dec
jp
mov
mov
jno
pop
scas
fldenv
adc
outsb
jecxz
pop
fwait
pop
xlat
lcall
jo
cmpsl
or
adc
add
pushf
or
push
inc
xor
jnp
pusha
popa
pop
dec
shlb
adc
scas
jbe
loop
popf
cs
test
das
shrb
hlt
mov
pop
pop
jmp
add
hlt
cwtl
or
outsb
loop
enter
sub
xchg
aad
push
jbe
jbe
out
mov
icebp
cmp
cli
fwait
add
jnp
dec
or
adc
lret
jno
aas
or
call
aam
mov
jnp
cmp
das
testb
or
addr16
mov
mov
jmp
into
mov
jl
mov
insl
notl
inc
shl
ret
add
mov
jl
mov
pop
addr16
fnsave
fs
jns
xchg
cld
roll
cmpsb
or
pop
out
insl
dec
mov
cwtl
dec
sbbb
faddl
adc
xchg
outsb
add
subl
push
dec
enter
fs
aam
mov
in
popf
fldl
aas
sub
sub
lret
add
xor
stos
sub
xor
sub
sub
or
mov
mov
outsl
cmpsb
sbb
loop
sub
pop
mov
adc
jnp
or
fstps
dec
add
pop
scas
shlb
lcall
lods
push
addr16
js
push
and
aas
mov
and
xchg
int
mov
pop
inc
sub
push
lods
loop
fwait
in
cmpsl
push
ss
jns
ret
pusha
jns
xchg
add
or
scas
push
into
aaa
add
sbb
das
xor
outsb
mov
test
pop
push
out
int3
in
es
int3
rcll
out
cmp
pop
cld
dec
scas
adc
pop
pop
sbb
sbb
xorl
lods
roll
xchg
out
es
push
rorl
jns
ja
cmp
std
pop
jmp
aam
mov
dec
imul
cmp
xchg
fistpll
push
mov
lods
xchg
jb
das
jno
mov
bound
aas
inc
jge
rorb
inc
mov
testl
lahf
jno
push
inc
stc
lock
stos
ja
cmp
stc
and
lds
dec
rcrb
in
mov
gs
test
inc
dec
imul
movsb
and
lods
jno
enter
jmp
pop
icebp
push
pop
lcall
mov
sbb
push
adc
test
mov
sub
sbb
jno
testl
jmp
scas
adc
rolb
cli
or
add
pushf
adc
jb
fcmovu
daa
pop
inc
mov
repz
sbb
xchg
loop
scas
jnp
ret
orl
ret
mov
xchg
into
xchg
out
xor
mov
in
out
dec
call
leave
addr16
jecxz
push
fldt
js
arpl
or
leave
movsb
addl
mov
push
mov
add
sbb
push
cmp
pop
jmp
movlps
lcall
mov
leave
in
mull
adc
cmp
dec
xor
cmp
dec
mov
mov
inc
stos
fidivl
mov
cmp
es
cmp
imull
push
jne
pushf
push
pusha
aam
scas
repnz
xor
mov
push
or
mov
fcmovnb
xchg
cli
fs
in
add
fwait
ret
add
mov
ret
sub
and
mov
nop
lds
dec
imul
push
inc
cwtl
adc
rcll
pop
bound
mov
adc
pushf
lret
ffreep
and
xchg
lods
test
sub
inc
add
jbe
idiv
mov
or
ss
jbe
cmc
in
dec
scas
mov
pushf
push
test
add
sbb
out
mov
sub
gs
shlb
popf
enter
adc
test
sub
mov
shl
cmpsb
inc
adc
sub
fdivrl
cld
insb
lods
icebp
inc
fwait
sbb
sub
mov
dec
cli
into
call
pop
inc
push
fistps
jnp
mov
ret
push
loopne
lahf
outsb
jns
sbb
call
mov
shl
lods
das
lods
xchg
mov
ret
dec
add
push
in
ja
lds
or
lahf
mov
lahf
fsubl
aas
movsl
and
out
mov
push
mov
cmp
data16
and
or
loop
andb
ret
add
xchg
daa
imulb
xchg
mov
in
scas
fidivs
mov
lock
enter
fildll
inc
mov
jp
sbb
jmp
push
push
fs
sqrtps
jecxz
jmp
ror
push
jno
ret
xor
popa
jb
mov
jbe
dec
mov
xor
inc
mov
cmp
lds
or
push
jne
cmp
ret
ret
dec
or
lcall
lods
xor
fwait
adc
test
mov
fs
sbb
xor
dec
xchg
sub
sub
out
push
mov
inc
inc
or
xor
pusha
inc
push
mov
mov
mov
jbe
xchg
xchg
mov
ficompl
cltd
xor
andl
call
cltd
roll
sub
xlat
xchg
mov
repz
push
push
in
push
imul
mov
sti
pop
mov
les
les
pusha
stc
lcall
iret
mov
xor
mov
jecxz
mov
pop
inc
sahf
out
pop
ret
outsb
push
aas
shlb
pop
fisttps
and
insb
sbb
lods
jo
cmp
inc
lahf
shlb
dec
xor
mov
mov
xchg
clc
imul
stos
mov
lcall
and
xor
lock
arpl
mov
or
leave
jg
jae
mov
jge
loop
paddq
push
mov
lcall
jae
add
mov
stos
lcall
leave
and
mov
sbb
sbb
xor
xchg
sbb
dec
jo
mov
stos
xor
or
rcll
pop
call
call
ds
pop
mov
mov
inc
jp
adc
dec
pop
test
in
outsl
popa
loope
and
shlb
xor
mov
add
jne
fcomps
mov
xlat
stos
pop
stos
mov
shl
push
fisubrs
iret
int
loop
mov
cmp
adc
xchg
push
xor
hlt
jns
test
sub
mov
psadbw
and
pop
sarl
jo
mov
fisubrl
xchg
aaa
dec
pop
popf
mov
cmpsb
mov
loopne
je
jb
out
xchg
scas
jecxz
and
icebp
xor
pop
mov
lahf
fcmovbe
in
enter
call
out
std
pop
movsb
or
or
mov
or
push
jecxz
mov
cmp
jo
ret
fwait
test
mov
fs
in
cmp
add
jecxz,pt
xor
mov
insb
push
jae
daa
jnp
sarb
fistpll
orb
fwait
cmp
sbb
shlb
dec
sub
push
outsb
inc
add
and
xor
ss
hlt
outsb
dec
gs
aas
addr16
xor
and
int
std
xchg
lods
cmp
mov
xor
int
mov
leave
mov
pop
fldl
sbb
cmp
push
add
mov
outsl
outsb
add
stos
loop
insb
dec
push
xchg
leave
or
call
mov
jno
and
jle
jp
sub
or
lcall
cmp
testb
call
sub
pop
cmpsl
push
push
in
xlat
lock
mov
fs
ret
mov
aam
ljmp
push
sub
fcomip
and
dec
mov
outsl
aaa
mov
dec
pop
mov
enter
loope
shll
je
sbb
xchg
into
mov
aad
ljmp
pusha
mov
sar
mov
mul
fsubl
jae
add
arpl
push
in
pop
mov
mov
stc
xchg
adc
hlt
lea
movsl
push
nop
int
test
adc
into
ret
fcmovb
jp
jne
insl
mov
adc
movsl
jmp
in
cs
test
add
pop
test
pop
jb
addr16
and
or
mov
mov
adc
shlb
lret
xor
pop
jnp
fdivr
push
and
inc
mov
je
sarl
ljmp
imul
inc
and
lea
pop
sbb
imul
lahf
cmc
addr16
inc
pop
push
lock
or
mov
in
repz
lcall
cmp
adc
and
dec
xor
mov
inc
test
loop
jp
pusha
icebp
mov
cwtl
aas
mull
xor
dec
add
or
repz
sti
stos
xor
enter
cmpl
mov
sti
enter
mov
jg
lds
shrb
adc
cwtl
in
mov
jnp
mov
pop
sub
popf
push
jecxz
inc
sbb
and
int
pop
std
push
cwtl
mov
andb
adc
dec
or
cmp
in
int3
add
push
dec
xchg
add
in
push
es
jb
out
pop
and
rclb
lahf
and
inc
push
in
xchg
jecxz
sub
pop
cmp
mov
dec
std
inc
adc
test
cmpb
movsl
arpl
cmp
jmp
push
push
popf
and
fcmove
pop
bound
push
sbb
dec
sub
loope
cwtl
je
or
add
dec
scas
nop
mov
imul
fists
xor
movsb
xchg
add
mov
mov
les
push
or
data16
in
cli
lods
sbb
jg
clc
aam
add
mov
insb
push
xchg
jge
xchg
sahf
aam
pusha
inc
dec
shl
fdivrs
push
clc
cmp
sbb
pop
adc
inc
or
insl
inc
dec
aad
sbb
push
shll
ljmp
imul
clc
mov
jmp
ret
sbb
push
add
inc
inc
lahf
jp
testl
in
hlt
pandn
movsl
mov
imul
hlt
or
dec
pop
bswap
xchg
pop
mov
xchg
or
mov
push
cld
lcall
inc
xchg
sbb
jo
push
sbb
adc
cmpb
mov
iret
mov
ret
out
jp
adc
test
fstpt
scas
xor
jle
fsubl
scas
cmp
fisubrs
sub
xchg
pop
repz
in
mov
ljmp
repz
mov
sub
mov
mov
add
mov
in
outsb
aam
jecxz
pop
outsb
je
stos
xlat
jecxz
das
adc
stos
mov
test
stos
mov
ja
or
or
cltd
jmp
push
cmp
dec
jmp
lea
rcll
lock
repz
xchg
sub
lret
and
cmpsl
test
das
jo
clc
sub
push
sub
pop
cltd
push
bound
pop
std
mov
ret
lds
iret
rcrb
lret
repz
dec
mov
mov
mov
cmpsb
sub
mov
jno
sahf
add
pop
scas
je
scas
popf
lods
adc
movsb
pop
add
dec
sub
mov
mov
jecxz
fcmovbe
add
push
mov
sbb
inc
lds
lcall
or
sub
jo
dec
sbb
xor
int
cmp
and
mov
dec
push
iret
mov
iret
cmc
out
mov
or
sbb
jno
sbb
push
xchg
inc
pop
cli
sub
pop
dec
and
jmp
scas
jo
xchg
enter
insb
xchg
xchg
lret
push
inc
jmp
mov
add
bound
out
cmp
dec
pop
mov
xor
or
mov
xchg
jns
das
icebp
cld
inc
add
push
loope
jmp
cmp
inc
dec
xchg
cld
add
mov
jno
in
dec
xor
scas
sbbb
lock
mov
mov
xlat
mov
loope
pusha
out
push
mov
jg
push
sbb
int
cld
arpl
test
cld
push
mov
xor
inc
cltd
sub
movsl
sub
out
imull
ljmp
sbb
inc
mov
in
xchg
daa
fisttpl
popa
mov
xchg
xor
mov
pop
jne
loopne
or
xchg
xchg
mov
add
and
pop
pop
xchg
mov
lea
orl
cmp
inc
iret
das
mov
and
je
repz
inc
out
ret
mov
inc
push
xchg
aaa
mov
dec
xchg
lods
adc
xlat
aaa
ds
lret
rorb
jg
les
test
or
and
push
dec
cmp
inc
iret
adc
xchg
lcall
mov
push
add
jg
outsl
addr16
mov
ds
add
shlb
adc
pop
in
mov
mulb
mov
add
ss
ss
mov
pushf
dec
cld
gs
adcb
sub
lcall
cld
int3
pop
xchg
fsubrl
int
inc
movsb
mov
cltd
add
inc
xchg
aaa
or
addr16
xor
pop
stos
jae
sub
testl
shlb
into
lea
mov
les
subl
mov
cmpb
mov
add
leave
es
inc
sbb
and
or
clc
add
inc
pop
mov
negl
lret
inc
pushf
std
pop
jg
pop
insb
out
loop
int3
sbb
mov
xchg
add
cli
pop
pop
jmp
int3
or
aam
fldcw
scas
lods
mov
cs
and
mov
cmp
daa
cs
into
mov
insb
mov
sarb
aam
mov
xchg
fldl
push
mov
jno
leave
icebp
pushf
loope
insb
movsb
dec
movsl
push
pop
test
into
pop
or
data16
pop
and
xchg
jne
sub
push
lret
xor
fdivs
into
cmc
mov
ss
nop
out
dec
dec
in
adc
gs
out
xor
push
lds
fisubrs
add
nop
sti
bound
ja
popa
cmp
dec
jne
mov
xor
add
push
mov
std
jmp
imul
cltd
xlat
pushf
dec
mov
ret
lods
rdpmc
jmp
mov
xchg
mov
jnp
aam
or
loop
inc
movsl
xchg
xchg
push
and
dec
cmc
movsl
mov
imul
or
and
std
dec
xchg
sub
loop
push
sbb
dec
jns
mov
jno
cld
loope
sbb
popf
lock
pushf
push
push
pop
sub
push
out
push
les
arpl
loope
xor
xor
fcomip
jnp
xor
cld
test
imul
rep
jne
pop
fcomip
daa
xor
nop
sbb
or
dec
xchg
mov
pop
sahf
push
sub
mov
sbbl
test
push
pusha
adc
out
push
xor
pop
cmp
imul
jmp
adc
sbbl
enter
add
mov
add
jbe
sub
jmp
jmp
sbb
lret
orb
and
mov
add
or
pop
rol
repz
jmp
js
sbb
xchg
push
xor
mov
inc
aaa
adc
daa
jp
stos
adc
pop
sub
pop
lcall
loopne
ficompl
cwtl
push
jl
mov
inc
dec
pop
cmpsb
out
popa
pop
cwtl
xchg
xchg
jns
pop
enter
push
cmpb
jb
adc
in
adc
clc
sbb
mov
sbb
int3
push
enter
mov
inc
xor
add
outsl
mov
xchg
dec
and
ror
jns
mov
jo
ds
fldt
fisttpl
jbe
jecxz
sbb
xor
push
cld
mov
cli
push
je
fnstsw
mov
mov
mov
push
imul
out
pop
xchg
loop
pop
jmp
or
push
adcb
lods
hlt
enter
popf
cmc
out
and
cli
add
dec
cmp
or
add
push
negb
cwtl
push
jae
xchg
push
jmp
or
pop
cs
clc
outsb
xor
xchg
xor
sub
test
xor
out
je,pn
pushf
ficoml
cmp
xchg
and
cmp
cmpsb
cmp
bound
lcall
xchg
outsl
mov
pop
push
and
and
lcall
in
mov
lods
mov
jo
sahf
call
movsb
cmp
in
sbb
push
sub
mov
xchg
mov
ret
movsl
sub
mov
sub
leave
mov
test
test
ret
fisttpll
dec
stc
in
in
push
inc
iret
dec
push
dec
or
sbb
scas
sti
mov
fs
out
xchg
scas
pop
mov
repnz
dec
add
xchg
mov
lock
out
sub
addl
mov
lret
push
test
aaa
push
js
cmp
mov
std
mov
cmp
daa
daa
or
push
jbe
mov
push
push
xchg
out
pop
adc
fcmovnu
xchg
cmp
imul
adc
into
inc
outsl
push
lret
adc
outsb
fmull
and
shlb
cmovle
lret
and
fisttpl
or
in
pop
sub
cwtl
gs
add
fidivrl
mov
jge
cmc
daa
out
xchg
add
mov
add
xor
pusha
in
loopne
sub
rcll
test
fdivrs
in
add
cltd
inc
lea
repz
push
insl
xlat
data16
in
jno
scas
test
add
push
pop
push
js
cmp
icebp
lds
push
mov
and
inc
inc
xor
vunpckhps
mov
imul
adc
lret
xchg
mov
push
mov
aad
pusha
inc
into
in
lods
mov
pop
mov
test
pop
adc
jo
mov
out
in
push
sub
loop
jge
fcomip
pop
mov
addr16
mov
cs
fldenv
mov
insl
dec
xchg
sub
mov
inc
ljmp
and
fldenv
daa
sti
ret
cmpsl
dec
add
movsl
and
push
add
pop
xor
pop
in
jae
ja
cwtl
jbe
loopne
iret
sbb
and
push
jecxz
push
scas
cmpsb
movsl
les
mov
out
push
sti
hlt
lcall
nop
fs
out
in
lret
jb
mov
mov
xor
popf
pop
sbb
pop
les
nop
and
xor
imul
add
xlat
fidivrs
pop
push
stc
xchg
outsl
jge
roll
test
mov
mov
loop
cmp
pushf
and
lcall
push
addr16
subb
pop
mov
mov
or
ficoms
out
adc
das
xchg
and
loope
imul
in
mov
stos
sahf
mov
jns
imul
cmc
jmp
rorb
inc
js
das
xchg
mov
mov
cmp
or
and
iret
inc
inc
pushf
push
and
push
mov
lock
push
ror
loopne
insb
out
and
lds
test
sub
lahf
popf
inc
out
fs
jbe
mov
mov
xor
jle
dec
aas
into
dec
cli
bound
xchg
inc
xor
pop
lods
add
jge
fwait
iret
pop
lock
add
lods
in
into
repnz
insb
out
in
or
push
dec
pop
ja
cmpl
stc
jns
or
dec
pop
in
dec
push
in
jbe
sbb
flds
hlt
pop
mov
fs
icebp
xchg
and
jne
jg
lret
xlat
faddl
call
shll
fisttps
inc
leave
push
es
push
pop
push
cmp
xchg
xorl
ljmp
xrelease
aad
pop
mov
bound
add
inc
cli
mov
les
insl
jae
jg
and
test
shrb
mov
xchg
dec
push
or
movsl
sbb
sub
jl
icebp
dec
mov
cltd
push
inc
sub
aam
lea
push
test
dec
je
or
jbe
xor
sahf
outsl
fistpl
sub
cmp
insl
mov
aas
int
imul
push
adc
xlat
test
push
or
push
fsubl
or
add
lock
add
loope
add
pop
das
sbb
scas
in
pop
and
nop
fsubs
ret
jbe
and
cwtl
lret
inc
je
push
es
and
push
lods
sbb
int
add
int
jmp
shll
add
sub
test
push
lret
inc
aad
push
inc
test
or
mov
add
push
rorl
mov
xchg
shrl
stos
leave
cmp
dec
fstp
mov
pop
add
outsl
or
ret
mov
push
jo
lret
leave
pop
movsb
cmpsl
dec
push
pop
jns
out
loope
insl
mov
push
pop
jae
rep
mov
int
mov
fucomi
push
rcr
incl
xor
mov
xchg
es
fsubrl
sub
sti
mov
js
xor
aam
icebp
add
inc
pop
pop
xor
add
in
js
sar
mov
cmp
mov
adc
test
jg
mov
pushf
hlt
push
fs
cmp
xchg
jne
mov
fidivl
dec
adc
loopne
mov
or
adc
and
loop
sbb
test
wrmsr
xchg
outsl
adc
jl,pn
and
or
sub
pop
sub
sbb
fs
fmuls
pop
inc
lret
fucomi
aam
outsl
pop
inc
sbb
rcrl
sub
sbb
imull
push
xor
pushw
out
jg
fwait
dec
insb
cmp
popa
pop
jl
add
arpl
adc
fistpl
adc
sub
or
shlb
ljmp
add
add
sahf
int3
fldenv
cmpsl
fldl
sub
lods
pop
xor
add
dec
cmp
pop
adc
lods
es
mov
ss
dec
arpl
mov
jbe
test
or
adc
mov
push
lods
cmp
movsb
dec
adc
mov
out
sub
xchg
ret
fnstenv
add
int
xlat
push
jns
lret
xchg
imul
stos
daa
jne
dec
cmpsl
test
aaa
jecxz
subb
inc
add
ret
fildl
mov
mov
adc
mov
dec
add
shll
test
fdivrs
adc
out
adc
call
repz
out
dec
mov
pop
and
cmpl
push
and
xor
jb
rcl
add
loopne
sub
sarb
orl
cltd
cltd
pop
mul
fldt
jmp
test
or
mov
iret
sub
cmp
push
leave
or
mov
mov
arpl
mov
iret
xchg
addr16
push
adc
mov
out
cmp
pop
dec
insb
mov
cmp
cmp
adc
stos
ja
add
sti
in
lret
sub
mov
outsl
fstpl
dec
dec
leave
push
je
mov
lahf
test
mov
movsl
fstl
mov
mov
xor
das
mov
pop
rclb
cmp
jnp
inc
mov
sbbb
xlat
out
movb
inc
and
loopne
cmp
fistpl
int
into
lret
jo
pop
cmp
aaa
add
xchg
cmp
mov
outsb
mov
xor
sbbb
hlt
int
sub
lea
test
pop
mov
in
pop
lret
outsl
stc
hlt
xchg
jmp
mov
jge
sbb
push
cwtl
out
adc
xor
push
xchg
dec
repnz
push
scas
lods
jb
push
mov
push
les
and
jbe
insb
push
addr16
sub
stc
pop
pop
or
test
test
xchg
pop
iret
popa
push
ja
inc
ds
loope
mov
xor
sub
out
inc
insl
sbb
mov
cli
adc
cli
push
add
pop
push
jno
jbe
pop
call
push
sub
xor
fisttpll
mov
mov
adc
or
xchg
cwtl
rclb
sbb
pop
lret
push
daa
push
aad
aaa
jae
cli
into
mov
pop
jge
clc
mov
data16
sti
jns
xchg
test
or
insl
cmc
lock
xor
mov
insb
iret
stos
ret
sub
cmp
lahf
daa
mov
dec
sub
sti
ljmp
and
or
popl
pop
in
sub
xor
insl
nop
stos
addr16
clc
jle
xlat
cmpsl
test
or
stos
outsl
sbb
push
jb
mov
sbb
xchg
mov
xorb
xor
aas
movsl
mov
xor
dec
mov
xchg
arpl
xchg
add
pop
lods
cli
loope
xchg
pop
mov
cld
ficomps
xchg
je
sbb
add
push
xor
lock
stos
imull
sub
add
add
nop
push
lock
cs
imul
rcrb
inc
adc
pop
mov
test
in
pop
push
and
sahf
dec
stc
xor
outsl
jle
cmp
mulb
cmp
jne
insl
jg
inc
cli
insl
lcall
popl
outsb
pop
pusha
mov
rcrb
push
mov
repnz
add
lods
xchg
adc
pop
pop
mov
lds
repz
iret
jo
sbb
inc
lea
push
enter
fistpl
adc
arpl
mov
imul
std
notl
cmc
mov
test
sbb
pop
cli
push
int
adc
mov
in
stos
lock
lret
xchg
out
cmp
ja
repnz
mov
ret
lahf
xchg
pop
loope
fucom
or
aam
movsl
loop
loopne
jns
jp
daa
imull
pop
sub
xchg
hlt
stc
imul
xchg
loopne
or
pop
adc
xor
add
call
ficoms
lds
loope
fbld
jl
in
lret
or
popf
jno
stos
jmp
inc
push
cmpsb
in
adc
pop
pop
adc
outsb
push
push
lret
aas
div
xlat
scas
daa
fmull
cs
bnd
je
xchg
dec
and
lea
addb
inc
fdecstp
adc
or
adc
dec
pop
and
and
and
sbb
xchg
xchg
xor
dec
add
aaa
hlt
into
and
or
and
sar
and
leave
jb
and
std
ja
int3
loope
add
xchg
outsb
pop
lret
mov
gs
imul
daa
insl
dec
pop
jb
mov
loopne
imul
and
sahf
xchg
outsb
ret
out
cmc
inc
or
push
ljmp
loope
xchg
sti
cltd
mov
mov
xlat
cwtl
xorb
mov
pop
cmc
mov
aaa
add
js
cmp
xchg
out
decb
movsl
mov
js
popa
pop
nop
cld
fistpl
dec
out
imul
push
je
cmpb
mov
sbbl
mov
or
adc
mov
sub
jb
lock
lds
sub
fsubs
or
add
jle
gs
push
jae
inc
mov
pop
pop
pop
xchg
or
jge
sbb
jbe
mov
cmpsb
xchg
xlat
dec
pop
cmp
pusha
pop
in
sbb
aas
xchg
js
cltd
mov
inc
aad
lahf
cmp
stos
mov
jge
mov
cs
fwait
and
pusha
and
mov
mov
xchg
clc
pop
xor
pop
push
xchg
adc
xchg
add
fwait
mov
cmp
xchg
jle
mov
jae
jl
mov
into
fisttpl
arpl
lods
test
fisttpl
shlb
jno
lcall
sbb
imulb
pusha
and
int3
test
push
leave
fidivs
adc
and
mov
push
push
dec
popf
aaa
cmp
lahf
cs
push
mov
fdivrl
inc
testb
lea
inc
aam
or
cli
subl
adc
fildl
push
ljmp
adc
add
cmp
cmpsl
popa
mov
push
pop
les
jno
mov
inc
fnstenv
pop
pop
pop
fs
test
roll
lds
cmp
out
adc
cld
popf
dec
or
stc
mov
jae
bnd
jo
iret
je
inc
inc
int3
add
xchg
shrl
out
dec
or
aad
addl
and
out
rcr
add
jmp
enter
loop
jle
enter
loope
sbb
push
dec
jg
mov
mov
mov
or
insb
cmp
mov
add
faddl
jecxz
xor
mov
sub
pop
or
pop
jo
mov
mov
fidivrs
mov
push
adc
dec
or
dec
int
xor
mov
jp
stc
xor
icebp
dec
imul
push
fs
pop
imul
incb
pop
adc
ds
sbb
cmp
pusha
jnp
in
adc
lcall
pop
jne
hlt
movsb
inc
mov
insl
mov
pushl
jmp
xor
daa
stc
mov
jnp
cmp
aad
cmpsb
jb
inc
add
shlb
mov
aam
pop
ret
outsb
mov
cmp
leave
out
or
das
imul
dec
push
and
ljmp
pop
sbb
iret
das
je
push
cli
push
sbb
inc
cmp
lahf
insl
xchg
sbb
adc
pop
xchg
dec
xchg
pop
push
sub
popf
es
ret
aam
nop
mov
out
inc
rcrb
rorl
mov
pop
xor
jae
adc
adc
jnp
jmp
pop
fimull
shlb
loopne
les
mov
ljmp
js
mov
es
pop
cmpl
cmp
and
andl
bnd
xchg
inc
add
xor
mov
inc
mov
mov
outsb
popf
adcb
popf
cmpsb
sbb
xchg
insl
test
mov
in
mov
insl
xor
push
incl
inc
adc
lods
mov
mov
mov
cmp
xchg
xchg
push
inc
and
push
or
sbb
notl
push
fdivl
pop
imul
gs
movsb
cltd
cmp
mov
call
cmp
sub
das
dec
sub
push
sbb
push
movsb
scas
cmpsb
ss
fisubrs
adc
cld
stos
or
lea
inc
xorb
xchg
lahf
jmp
aam
inc
cmp
rorl
inc
or
fsubrs
inc
popa
sbb
dec
pop
retw
je
xchg
and
iret
enter
pop
clc
call
rorb
or
aam
and
jg
imul
jecxz
roll
sarl
push
pop
cmp
jl
lods
inc
jp
aas
pop
fnsave
sbb
or
dec
and
add
shlb
sub
popa
mov
loop
xchg
sub
std
push
sbb
mov
stc
sbb
and
mov
push
jg
adc
dec
fcomp
jne
sub
push
xchg
or
cmpsl
pop
xor
lods
sbb
lahf
and
cmpsl
add
sbb
jecxz
movsl
mov
andl
or
imul
xchg
pusha
dec
imul
das
addb
adc
jmp
mov
scas
xor
and
push
sub
sarb
fcmovne
mov
mov
std
shrl
dec
or
cmp
mov
clc
cmp
jge
xor
lea
not
add
jbe
jbe
dec
stos
sbb
xchg
cli
sahf
iret
fdiv
and
insl
mov
add
popa
push
mov
push
and
push
rcrb
ret
fisubrl
inc
pop
bnd
jbe
jge
xchg
mov
insb
or
push
repz
push
xor
shrb
lds
sbb
sbb
aad
push
push
xor
rcrb
test
das
add
fsubr
dec
cli
ret
rclb
iret
xlat
pop
in
lret
and
loop
inc
cs
lea
loopne
and
jle
pop
mov
daa
test
dec
xchg
in
or
xchg
xor
cmc
in
cs
mov
adc
out
out
sub
jp
mov
add
inc
mov
lret
loopne
cwtl
lret
scas
insl
cmc
push
or
mov
aad
insb
cmpsb
sahf
test
adc
xlat
and
adc
pop
pop
push
push
in
inc
test
movsb
mov
and
cld
mov
pusha
clc
dec
les
mov
movsl
loop
ds
xchg
addr16
push
bound
adc
and
in
je
jb
mov
lea
pushf
xor
jb
jae
pop
fiaddl
fnstsw
mov
and
adc
es
sub
sahf
ret
fmul
push
push
inc
inc
and
xor
jae
lcall
push
call
inc
and
ret
ds
stos
mov
add
aad
mov
push
imul
mov
mov
lahf
push
pop
and
xor
cmc
mov
pusha
gs
dec
jns
xchg
cltd
xchg
jecxz
loopne
mov
xor
mov
fstpl
and
push
dec
insb
outsl
fsubrl
mov
div
cmpsl
mov
jl
loopne
cmp
push
fnstsw
xchg
mov
and
or
dec
or
sti
div
pusha
ss
test
mov
or
inc
sbb
add
shll
scas
push
mov
imul
mov
jge
scas
sub
xor
inc
lret
and
and
scas
mov
mov
adc
mov
in
jmp
xor
lds
stos
popa
daa
stos
js
stos
adc
push
movsb
fisubs
adc
sub
inc
cs
sarl
cmp
add
sbb
decb
push
sbb
filds
push
ret
bound
lea
push
fcoml
and
xchg
arpl
dec
add
cli
mov
push
stc
repnz
cltd
add
push
mov
mov
push
xor
or
push
or
mov
cmpsl
in
cltd
dec
mov
dec
shll
dec
lcall
mov
mov
gs
cmpsb
or
mov
stos
xchg
pop
dec
lds
in
jl
jp
test
jmp
in
sar
fdivs
call
aaa
mov
push
add
or
ror
push
and
cmp
in
pop
mov
adc
push
shrb
popa
xor
add
fistpll
icebp
cmp
adc
sar
adc
adc
fstps
add
cmp
cmp
scas
dec
dec
cmpsl
jns
sub
outsb
or
into
xchg
dec
sub
std
fidivl
mov
test
scas
dec
dec
sbb
xchg
sub
or
pop
and
btr
jnp
mov
mov
mov
imul
or
add
inc
inc
aam
adcb
test
into
push
mov
mov
pop
or
lods
aam
cmpsb
jae
popf
fmuls
push
mov
and
testl
shl
inc
fs
scas
sbb
mov
push
jnp
enter
std
jle
mov
cmc
cmc
les
rolb
pop
dec
or
xchg
stc
pop
pusha
sub
inc
jg
rdmsr
mov
cli
pop
jae
pop
rolb
cmpsl
jp
jo
and
test
in
or
sbb
jecxz
into
or
adc
cmp
adc
sbb
mov
xorl
xchg
in
clc
push
adc
sub
dec
cli
push
push
add
test
cmc
xchg
ja
out
in
dec
stc
idivb
lods
inc
ret
iret
or
mov
int3
bound
jns
pop
mov
lret
test
push
outsb
iret
movsb
ds
pop
or
mov
cmpsl
sbb
jg
inc
sub
push
imul
test
sub
inc
or
adc
loop
push
imul
push
mov
xchg
sbb
pop
adc
xlat
sahf
cmpsl
jbe
in
sbb
push
jg
sti
mov
in
repnz
mov
je
ret
popf
or
xchg
mov
inc
mov
lods
ss
push
sbb
adc
cli
xor
inc
leave
ljmp
das
inc
stos
pusha
inc
jle
add
add
out
sbb
sbb
xor
push
rol
push
jp
push
jle
mov
cmpsb
jnp
adc
sbb
adc
dec
push
test
inc
repz
push
jnp
push
mov
xor
out
out
mov
sub
cmp
or
les
pop
xor
jno
push
sbb
lea
das
int
push
xchg
jle
xor
mov
inc
mov
push
cmpsl
lret
popa
lahf
add
push
mov
frstor
dec
enter
add
sbb
jle
push
pop
aas
adc
adc
xchg
cmp
dec
cmp
fcompl
pop
cmpsb
mov
push
jne
inc
mov
mov
repnz
out
or
in
mov
cmp
lret
mov
push
sbb
insb
adc
aaa
fwait
popl
sbb
outsl
xor
mov
shll
pop
inc
lods
out
cmp
add
sbb
add
mov
mov
mov
test
push
ficomps
xchg
pop
fnstsw
fimull
xchg
dec
ret
jle
xlat
imul
mov
movsb
sub
add
dec
lods
dec
scas
mov
fninit
xor
adc
adc
out
int3
scas
sarl
cmp
inc
incb
cltd
outsl
ror
push
lcall
sbb
jmp
mov
or
sti
mov
mov
into
test
dec
add
xchg
inc
inc
dec
outsl
jo
enter
into
cmp
jle
fisubl
fnstenv
gs
mov
jno
push
cmc
xchg
adc
xchg
cli
rcrb
sbb
sti
mov
cmc
sub
mov
insl
sbb
adcb
fadds
sahf
mov
cmpsb
fwait
test
out
in
fistl
adc
jno
sbb
cmp
add
jbe
pop
test
jnp
jbe
cmp
adc
and
inc
xlat
dec
movsl
push
or
xor
mov
out
lock
jl
add
xor
adc
mov
cltd
pop
out
lock
repz
fidivrl
mov
mov
or
xchg
outsl
mov
out
out
xor
mov
rcrb
mov
cmovne
dec
pop
pop
mov
je
cs
mov
and
dec
lock
sub
test
xchg
or
cld
cs
mov
cmc
cmp
pop
jmp
lret
adc
outsb
jmp
call
jo
bound
sbbl
cmp
jp
mov
xor
or
inc
pop
testl
push
aas
stos
cwtl
adc
sub
push
mov
mov
iret
xchg
pusha
sbb
fsubrl
call
push
xchg
sbb
sbb
fidivrs
bound
and
cld
lods
data16
fdiv
scas
pop
mov
xor
inc
call
push
mov
sti
vpcmpgtb
xor
fs
or
pop
xorl
lret
jge
cmc
imul
in
dec
xor
outsl
js
repz
pop
jae
shlb
jo
loopne
cmp
sbb
lods
rcr
adc
or
fcmovbe
xchg
subl
rolb
xchg
jl
push
add
jnp
ds
pop
cmp
push
aam
mov
xchg
jle
add
lods
jp
xchg
add
push
cmp
into
cli
add
adc
push
dec
dec
rcrl
fstpl
jae
dec
mov
mov
loope
mov
or
and
jo
imulb
push
nop
loope
push
fcomps
lret
mov
lods
jno
lods
adc
adc
lcall
ljmp
adc
mov
sub
adc
sub
gs
loope
push
adc
movsl
xor
loop
test
cmp
or
cmp
fnstsw
out
test
push
mov
daa
mov
repnz
loope
imulb
xchg
sbb
fists
dec
jbe
das
mov
pushf
and
inc
cmp
or
add
sbb
sahf
les
hlt
cwtl
int
ss
or
aaa
mov
adc
push
int3
xchg
inc
mov
lods
jge
mov
in
out
jg
sbb
in
int3
xor
inc
scas
inc
addl
cmpsl
scas
cltd
out
add
lods
sbb
mov
lds
pop
ret
rorl
clc
aad
mov
cmp
ja
push
or
mov
repnz
sbb
nop
scas
adc
jno
push
and
adc
inc
mov
out
push
scas
in
xchg
mov
ret
push
test
xor
xchg
fnsave
push
mov
out
pop
cli
sbb
dec
pop
insb
rolb
ja
fcomip
adc
movsb
adc
add
mov
in
xchg
mov
test
and
cmp
cmpsl
cmp
call
pusha
jge
lods
mov
jne
test
sbb
popa
cmp
sbb
dec
cmp
xor
sti
stos
notb
and
jp
daa
sbb
insl
stos
lahf
sub
mov
add
add
inc
scas
cmc
psubw
pop
vcvttpd2dqy
jg
mov
jecxz
jecxz
or
ret
das
cmp
xor
xchg
jg
cmp
sub
loope
arpl
jl
mov
pop
in
cmp
dec
pcmpgtw
jo
pop
jg
push
push
pop
dec
mov
and
add
aam
lock
imull
loope
mov
sub
dec
or
xor
imul
or
push
mov
popa
pusha
and
jb
mov
xchg
fidivrl
or
lock
fwait
ret
cltd
in
pushf
jecxz
ss
xchg
pusha
hlt
or
pop
lock
inc
mov
ja
repnz
mov
sahf
cmpsb
sbb
or
fstl
dec
jo
xchg
mov
push
push
insb
rorb
or
sub
outsb
cmc
sub
out
pusha
arpl
pushw
jnp
add
mov
push
std
mov
push
xor
jns
xchg
mov
imul
stc
pop
push
adc
aad
xchg
data16
push
aaa
scas
sub
or
xchg
jne
rorl
inc
sub
ljmp
icebp
jmp
jbe
pop
mov
sub
push
sbb
jp
mov
dec
mov
or
cmc
test
ss
push
inc
dec
std
cmp
inc
jo
ret
call
into
add
int
test
fmull
pop
xor
xor
lods
outsb
push
xchg
mov
shll
xchg
or
xor
add
mov
fadd
cmp
inc
or
test
sbb
mov
mov
adc
xchg
and
pushf
in
lock
mov
seta
pop
testl
inc
ror
sub
adc
je
lods
adc
cwtl
gs
push
jp
sbb
adc
xor
xchg
jge
sbb
cld
jg
addr16
sbb
sub
das
dec
les
insl
dec
fisubs
cmpsb
mov
dec
jb
xchg
inc
ss
shlb
arpl
xor
sub
hlt
je
jg
sti
adc
pop
les
jg
dec
adc
loop
and
push
inc
popa
rcrl
lock
in
imul
jbe
push
sbb
mov
pop
loopne,pt
ljmp
add
xchg
out
fsts
xor
dec
jo
xchg
dec
add
cmpsl
int
sub
lds
aad
arpl
and
aas
pop
js
jne
lret
cmp
sub
in
jbe
pop
loopne
insl
sub
mov
add
mov
aaa
pop
scas
loop
int3
sub
cmp
loop
dec
int3
popf
mov
jbe
sub
add
jno
frstor
je
fldcw
xchg
sbb
adc
jl
add
or
lods
jle
lahf
and
insl
dec
imul
dec
mov
or
cli
add
scas
jo
pop
lods
pusha
add
enter
repz
mov
aas
lea
shl
add
bound
aas
dec
mulb
inc
add
inc
inc
mov
fcoml
mov
cltd
jge
fistps
stos
add
pop
xchg
jno
push
in
sub
ja
pushf
pop
test
cmp
daa
movsb
and
mov
ret
xchg
int3
mov
dec
dec
rep
xor
call
jle
sbb
jnp
int
cs
dec
in
aam
adc
dec
repz
aad
pop
dec
cltd
int
dec
fwait
sub
mov
mov
push
sub
int
repz
incb
mov
cltd
and
aaa
clc
sub
sbbl
lcall
lret
rcll
fs
lret
decb
lahf
fadds
cld
popa
push
and
jmp
jl
mov
cmp
es
sbb
push
hlt
stos
cli
sbb
pop
sar
aam
dec
test
and
jae
xchg
popf
cmp
mov
mov
ja
lds
xchg
jecxz
lcall
cld
and
adc
test
or
jno
cwtl
sbb
dec
and
jb
add
xor
mov
loopne
and
pop
push
xchg
jmp
pop
in
sti
mov
cwtl
add
out
xor
pop
xor
out
mov
push
movb
inc
cmp
push
mov
daa
cmc
ja
test
data16
mov
xchg
stc
ret
enter
pop
lods
mov
inc
cmp
cwtl
sub
addr16
xchg
call
mov
lret
out
push
fsubp
add
aas
push
and
and
dec
ret
mov
cmc
mov
loop
lock
and
bound
mov
adc
push
icebp
or
jmp
push
push
repnz
addr16
jb
aad
cs
cmp
dec
push
bound
pop
push
mov
or
out
bound
shll
out
jl
mov
addr16
push
pop
jmp
mov
lcall
lds
loopne
iret
scas
mov
in
mov
in
int3
jno
iret
bound
das
fnstsw
addl
mov
mov
dec
cmp
or
ret
mov
ja
xor
and
ss
arpl
rclb
push
inc
fsubl
cmp
dec
mov
jp
and
or
or
or
pop
popf
rcr
out
mov
xchg
andb
fstps
adc
sub
les
inc
dec
test
adc
adc
nop
ret
push
lret
out
or
aam
loop
jnp
fiadds
pop
mov
es
push
sub
jb
out
inc
jbe
test
mov
je
in
out
fucomi
pop
out
mov
insb
lods
stc
les
sbb
fldenv
adc
outsb
shlb
jle
jecxz
stos
jp
xchg
jecxz
fimuls
cmp
into
jo
or
jge
jne
pop
movsb
fistps
mov
or
ret
push
sti
xchg
jb
fbstp
lds
int
je
and
push
orl
in
push
cmpsb
sub
lock
mov
xchg
dec
das
adc
mov
fcmovu
mov
inc
insl
gs
std
xchg
adc
or
movsl
fsubs
std
push
dec
fbstp
jnp
or
sbb
pop
movsb
add
or
xor
mov
enter
xchg
inc
mov
sub
push
adc
rcrb
fldcw
mov
lcall
in
test
cmpsl
push
aas
jb
dec
xor
ret
lods
std
sarb
out
mov
mov
mov
add
lret
lods
loopne
movsb
jb
jns
pop
inc
cli
sahf
lea
aas
test
aas
mov
xchg
std
and
jo
dec
push
push
scas
sub
jne
mov
mov
cmp
mov
jg
cli
pop
movsl
jae
xchg
sahf
pop
jge
inc
repz
cli
aam
enter
jp
sti
and
mov
cs
or
daa
sub
xchg
insb
mov
fdivrl
roll
xchg
cmp
dec
ret
sub
jge
inc
lods
sub
mov
sbb
cli
test
pop
insb
adc
in
sbb
mov
loopne
in
inc
sbb
push
push
js
mov
stc
scas
xlat
int
pusha
dec
int3
nop
jae
inc
jmp
lahf
mov
mov
mov
mov
pop
mov
mov
add
mov
testl
mov
aad
mov
call
lcall
sbbl
sti
cmp
adc
repz
mov
nop
sti
xchg
ja
fwait
lea
xor
push
imul
dec
cmp
iret
add
in
and
test
sbb
pusha
cltd
add
call
mov
lret
jne
xchg
insb
sub
lret
cltd
das
push
push
or
cmpsb
cmp
jns
cmp
add
dec
lret
and
movsl
leave
dec
test
pop
inc
andb
loop
sbb
repz
jbe
ret
stos
jo
daa
das
mov
lods
cmp
fsubrl
jp
mov
adc
mov
mov
inc
xor
add
xchg
mov
scas
sub
or
inc
mov
daa
xor
and
outsb
mov
sub
or
movsl
pop
imul
mov
jle
ss
insb
lret
ret
sbb
repz
cmp
mov
daa
cmpsl
fcmovnu
pop
std
or
addl
dec
xorb
add
xor
test
push
inc
jbe
sub
push
gs
lods
or
inc
leave
ret
cli
int
add
in
cli
mov
sub
add
push
test
cwtl
daa
movsb
sbb
std
fldl2t
pop
fwait
test
ret
sbb
test
frndint
adc
cmc
mov
inc
in
jns
push
mov
pop
adc
add
imul
frstor
ja
ds
dec
pop
test
stos
xor
decl
stc
push
lret
cmpl
je
sub
scas
insl
pop
pop
pop
aam
in
popa
mov
dec
cltd
jmp
movsb
jl
notl
cmp
std
ret
pop
xchg
push
cmpb
popa
mov
mov
cmpsl
inc
jmp
inc
pop
ret
ret
cmp
jbe
mov
lock
adc
popl
pop
pop
sub
outsb
es
cmc
push
mov
pop
and
mov
loop
ds
sahf
fsubr
and
ss
std
iret
movsl
cmpsb
jnp
sub
cmp
mov
inc
pcmpgtw
dec
cld
push
aaa
andb
mov
lret
jbe
gs
mov
ret
pop
imul
mov
insb
sub
das
fsubr
xor
pop
je
outsl
xchg
int3
loope
enter
xchg
push
js
jg
les
fs
shlw
xchg
jae
frstor
inc
mov
ds
pop
mov
mov
push
in
and
ljmp
arpl
pop
xor
mov
or
sub
mov
adc
fidivl
mov
sbb
jbe
or
push
push
xorb
popa
mov
push
std
gs
popf
jo
jge
sahf
inc
fwait
test
popa
mov
and
cmp
aad
cmp
push
push
adcb
fdivr
popf
loopne
je
sub
stc
movsb
aam
clc
pushf
push
sbb
xchg
push
loope
in
addr16
mov
leave
sub
xor
pop
inc
loop
push
jbe
cmp
mov
out
jle
xlat
dec
int3
popa
leave
movsb
rclb
inc
aam
ds
mov
call
mov
hlt
stos
jmp
std
mov
pop
pop
xor
jmp
xor
pop
xchg
dec
adc
sbb
add
xor
in
outsl
xchg
mov
mov
daa
stc
add
xchg
mov
in
or
adc
in
clc
fisubrs
jns
or
in
inc
mov
xchg
ret
imulb
imul
sub
jmp
std
push
jo
push
adcl
jbe
pop
or
rcrl
cli
popf
jbe
enter
popa
xchg
or
int
mov
inc
mov
aam
mov
ljmp
test
pop
sub
xor
bound
add
push
dec
stc
adc
rcl
in
pop
outsl
mov
xchg
ret
mov
pop
ss
jl
jbe
ss
ret
and
fmuls
aaa
inc
leave
movsb
outsl
inc
out
ficoml
mov
mov
xchg
lock
xlat
out
ret
and
ror
sbb
stc
scas
dec
sahf
inc
xchg
add
pusha
inc
mov
pop
clc
pop
sbb
imul
mov
add
testb
shr
sub
jmp
adc
inc
jmp
add
pop
jo
orb
out
popf
je
scas
icebp
sbb
sbb
sub
addr16
fwait
scas
out
gs
pop
adc
sbb
and
jns
outsb
sbb
arpl
adc
aam
std
imul
mov
jns
and
jns
xchg
aaa
add
jmp
sbb
sub
neg
cld
xor
in
pop
mov
jnp
cmp
adcl
jg
mov
sub
ret
arpl
fisubrl
in
xchg
sub
insl
cmp
sub
lretw
inc
stc
sub
hlt
idivl
scas
push
sbb
jo
push
mov
ds
fcmovnb
jp
xlat
cmp
addr16
cmp
jmp
inc
call
xchg
push
xchg
out
js
push
repz
pop
inc
mov
ficoml
arpl
bound
insb
cmp
mov
xchg
cmp
cltd
dec
sbb
movsb
xor
rcrb
mov
add
and
cmp
xor
popf
push
movsl
bound
imul
icebp
lds
or
outsl
rcrl
ds
pop
pop
xor
ss
scas
inc
lods
mov
cmp
sbb
xor
mov
inc
sahf
jb
mov
xor
push
jl
jle
mov
int
cmpsb
push
or
iret
push
test
icebp
jo
lcall
push
divl
xchg
dec
fwait
mov
add
pushf
ja
loope
shr
dec
out
scas
mov
movsb
mov
mov
rorb
mov
cmp
notl
and
call
adc
mov
jnp
fwait
sub
test
aam
sub
fnstsw
setge
stc
cmp
movsb
cli
inc
imul
push
mov
push
dec
movsb
dec
hlt
mov
daa
jno
and
jb
push
stos
xchg
cmp
dec
jns
add
arpl
lea
sub
je
stos
test
adc
mov
lock
jbe
roll
cmc
stc
enter
int
fidivl
popf
mov
lods
lds
inc
repnz
jnp
inc
mov
mov
loopne
jp
aas
loop
mov
imul
cmp
das
sub
xchg
mov
leave
mov
ss
out
ss
jmp
ja,pn
pop
pop
push
mov
mov
ds
scas
add
test
xchg
rorb
mov
xchg
push
in
mov
in
pop
and
test
les
mov
push
ret
cmp
stc
dec
jae
mov
mov
pop
adc
das
in
mov
inc
in
or
outsl
mov
sub
js
shll
gs
mov
add
cwtl
xlat
sub
test
outsb
fdiv
inc
xlat
leave
xchg
in
and
xor
inc
mov
test
or
push
mov
mov
aam
pop
xor
lock
xchg
stos
pop
hlt
shlb
mov
outsb
sbb
inc
fisubrl
sarl
jb
mov
cmpsb
jp
and
pop
ret
sub
rcll
mov
jmp
imul
shlb
jge
es
or
add
jae
add
popa
mov
cmp
testb
inc
aas
fs
vcvtss2si
pusha
add
aam
adc
je
xchg
push
cmp
jae
mov
push
adc
and
xchg
jmp
or
xchg
xor
push
cmpsb
xchg
sti
mov
mov
mov
push
xor
dec
mov
push
bound
mov
adc
mov
adc
push
mov
xchg
repnz
test
scas
hlt
fwait
cltd
int
jbe
xchg
dec
fildll
cmp
push
jle
into
mov
je
and
in
mov
push
leave
icebp
sbb
mov
es
stos
fs
fsubl
lds
xchg
gs
shl
ror
sbb
sarl
movsb
jns
cmp
inc
out
fs
mull
and
and
mov
pop
test
bound
nop
inc
dec
add
jge
push
in
pusha
mov
dec
lods
fidivl
push
std
jns
pop
cld
jnp
sbb
movsl
call
dec
pop
mov
jb
lock
mov
jnp
adc
outsb
add
sbb
stos
in
fldl
outsl
lods
xlat
jmp
ljmp
mov
jae
mov
xor
loope
or
je
ja
adc
inc
mov
pop
mov
shrl
push
ret
fwait
insb
orl
loope
nop
imul
inc
push
xor
inc
js
push
sub
jmp
andl
ljmp
fwait
es
fidivrl
ds
pop
loop
and
push
out
out
lcall
push
or
popa
push
int
xchg
pop
sub
push
call
mov
adc
and
xchg
and
jno
subl
pop
in
mov
or
push
lods
jmp
shll
movsb
xchg
xchg
out
filds
enter
lods
outsb
iret
test
mulb
and
push
sbb
dec
insl
cmp
jne
jb
shrl
dec
cmp
or
mov
xchg
cmp
sti
call
push
lods
adc
mov
cmpb
adc
nop
xchg
inc
scas
cmc
in
lods
pop
inc
js
mov
jmp
or
push
xorb
xchg
sub
mov
inc
sbb
inc
cld
add
inc
das
mov
push
lcall
loope
ret
mov
cltd
fsubrl
je
and
inc
out
mov
movsl
mov
ljmp
xlat
xchg
mov
sub
fisubrs
jp
sub
push
out
dec
imulb
sbb
adc
and
pop
dec
mov
mov
mov
add
popa
adc
adc
mov
in
sbb
push
add
jae
scas
cmc
push
inc
pop
popa
clc
or
aad
lret
mov
push
lret
mov
jno
mov
add
xorl
sub
test
sti
movsl
in
fdivrs
fcmovnbe
lahf
and
fdivl
mov
xor
jo
pop
and
cmpsb
imul
jl
sbb
or
push
repz
lds
and
inc
cmpsb
push
mov
jp
mov
push
xchg
mov
mov
leave
fstpl
xor
mov
scas
daa
mov
dec
and
xchg
sbb
loop
inc
int3
imul
cmc
inc
arpl
lahf
xor
lock
push
ss
out
data16
add
dec
add
shll
mov
adc
int3
xor
not
leave
jb
jle
sbb
iret
push
sbb
and
mov
and
push
int
xchg
call
pusha
insl
mov
xchg
insb
arpl
stc
push
jge
icebp
clc
incl
and
mov
shrl
dec
stos
jmp
fnstsw
push
outsb
jl
test
add
mov
inc
adc
jle
stc
psubd
jb
lods
inc
adc
cwtl
andb
add
lret
pop
into
fcmove
push
jno
stc
call
ss
pop
cmpsb
jl
loopne
mov
add
dec
ss
or
push
pop
in
adc
adc
sub
test
add
and
add
xor
ret
or
jb
cmc
iret
iret
shr
pop
idivl
outsb
mulb
das
jmp
cltd
enter
jmp
popl
sub
ret
cmp
mov
adc
fnstsw
mov
stos
or
leave
clc
data16
xchg
mov
and
scas
xchg
fisubs
mov
cmp
push
int
bound
insb
dec
mov
push
lea
cmpsb
gs
or
loop
lock
int3
shll
sarl
mov
mov
sub
xor
imul
add
mov
sbb
jp
loop
lret
push
sub
push
lea
in
sarb
je
xchg
ret
cmp
jae
cmpsl
mov
mov
xchg
pop
mov
mov
jo
pop
sub
inc
movsb
iret
jle
std
ja
fsubs
xor
lret
ja
insb
xor
sahf
xchg
ljmp
dec
movsb
addr16
repnz
sbb
out
cld
loopne
mulb
cltd
sti
cmpl
mov
enter
dec
mov
inc
stc
ds
fs
cwtl
and
xlat
out
mov
push
cmp
ds
xchg
and
xchg
sub
stos
in
push
int3
push
nop
test
sbb
inc
cld
and
aaa
idivl
mov
push
jecxz
pop
inc
hlt
bound
push
sbb
adc
adcb
mov
cs
cmc
or
andb
repnz
repz
cmp
pusha
and
sbb
sbb
pop
mov
stos
clc
sbb
push
mov
je
mov
arpl
pop
push
cmc
mov
rcrl
pop
xchg
insl
pop
rcl
or
gs
mov
fnstcw
xor
cmp
adc
xchg
or
mov
test
iret
decl
cmp
lret
fstp
xchg
inc
jmp
lock
add
movnti
adc
mov
jp
add
rcr
mov
imul
scas
pusha
in
shll
mov
cmc
mov
mov
loopne
loopne
jns
push
cmp
nop
or
xchg
mov
lock
adc
adc
fisttpl
loopne
testl
xchg
shrb
and
int3
xor
push
push
jns
in
sbb
and
xlat
jb
xor
xchg
mov
mov
sub
insl
inc
ss
jb
sub
cli
in
add
loope
pop
and
inc
adcb
inc
xor
aas
pop
lcall
jb
cmp
icebp
xchg
add
add
xchg
push
jae
popf
sbb
rorb
bound
jecxz
sbb
insb
push
add
xor
jns
out
rorb
xchg
aas
xor
push
incl
dec
push
inc
fstps
out
out
in
adc
add
xor
mov
push
xchg
mov
jmp
insb
pop
dec
in
push
xchg
daa
imull
mov
test
or
mov
in
sahf
sbb
js
cmp
sub
sub
mov
lahf
pop
xchg
push
loop
addl
dec
or
loope
arpl
testb
dec
cwtl
mov
mov
daa
sbb
aad
out
dec
fildll
add
xchg
out
pop
daa
rcl
mov
jmp
or
mov
pop
push
dec
fstpt
mov
addr16
les
repnz
mov
or
in
enter
push
push
leave
imul
jp
lock
insl
xor
jo
addr16
sub
outsl
xlat
cmp
lds
ficoml
mov
sbb
std
aas
sbb
mov
outsb
push
nop
out
repz
push
pop
cwtl
popf
aam
mov
cmp
mov
mov
aam
jae
xor
fisubrl
aaa
cmp
pop
pusha
push
fistpl
xor
push
xchg
push
gs
loopne
mov
cwtl
xchg
std
xor
pusha
sub
xchg
push
dec
pop
test
movsb
movsl
ljmp
sub
das
mov
cmp
xchg
adc
add
mov
in
stos
push
stc
pop
ja
enter
sub
xchg
out
sbb
test
fdivp
dec
out
subb
or
std
or
pusha
mov
add
inc
sbb
cmp
xor
xor
stos
cmp
mov
std
fbstp
adc
shlb
cmp
insl
pop
mov
mov
rol
xchg
filds
out
faddp
cld
pusha
mov
rcll
out
mov
ret
jl
das
test
outsl
pop
dec
sti
add
fwait
add
mov
bound
in
add
jge
lea
xchg
sub
aaa
ja
lock
xor
in
push
adc
push
mov
imul
inc
cmpsb
mov
repnz
icebp
test
dec
outsl
or
lods
fwait
jo
cmc
sbb
mov
xchg
loope
mov
add
inc
in
sub
scas
or
leave
rol
push
lret
pop
mov
sub
cld
rol
and
aad
loop
lcall
dec
fisubl
jp
js
jae
pcmpgtb
mov
sti
ret
inc
fisttps
dec
cmpsl
push
pop
and
cmovns
jmp
ret
pushf
daa
out
mov
add
imul
fstl
adc
cmpsb
pop
sahf
mov
pusha
fs
adc
and
sbb
imul
shrl
dec
out
inc
cmpsl
push
jo
mov
push
mov
sbb
test
in
shrl
xor
xlat
mov
add
outsl
mov
movl
and
dec
in
adc
push
sbb
scas
icebp
xchg
scas
aad
push
jmp
adc
outsb
stos
daa
orps
lret
test
cmp
xlat
sub
rcr
dec
jmp
push
pushf
xchg
test
adc
andb
pop
mov
lock
cmc
or
pop
daa
jno
or
das
xchg
dec
jb
mov
lods
out
mov
dec
arpl
add
push
mov
bound
imul
cmp
clc
fidivrs
pop
push
ss
dec
jmpw
rol
test
sbb
movsl
xchg
jg
mov
jmp
inc
jae
add
testb
xor
jne,pt
aam
xchg
mov
notb
cmpsl
mov
mov
hlt
je
jbe
mov
out
cs
aam
fwait
mov
inc
daa
lret
cmc
jnp
sbb
jo
push
addl
pop
stc
cmp
dec
mov
jg
and
sub
cltd
or
jns
sub
iret
loopne
dec
das
loopne
mov
pop
cmp
mov
add
pop
out
xor
inc
jecxz
and
inc
das
adc
push
scas
in
jns
negb
mov
cmp
xchg
leave
fcoms
scas
pushf
pop
lret
mov
mov
xor
outsb
mov
orb
hlt
add
iret
sub
or
push
aas
cmp
adc
dec
mov
cli
repz
fbld
ja
jmp
pushf
fcomi
xlat
push
add
inc
sub
stos
outsl
les
pop
shlb
outsb
mov
scas
out
fists
repz
test
leave
add
stos
push
push
xchg
outsl
aam
xor
loopne
les
adc
arpl
jecxz
stos
icebp
xor
xor
sbb
out
jp
push
pop
dec
or
xor
enter
loope
adc
add
out
xchg
mov
inc
mov
fistl
pop
les
dec
cmpsl
mov
imul
push
dec
mov
mov
cmp
or
ja
pop
sbb
jbe
incb
adc
sub
pop
call
scas
push
sub
add
add
or
lahf
and
jle
fldenv
inc
daa
push
jnp
xchg
push
adc
adc
add
cmp
in
cmp
test
sub
push
test
test
sub
lea
test
and
lahf
dec
add
in
mov
push
add
pop
or
call
mov
in
inc
mov
jp
and
sbb
mov
push
in
loop
shll
jg
add
inc
sqrtps
das
xor
ds
pushf
push
inc
cmp
pop
jle
pop
ja
mull
shlb
dec
jecxz
add
xchg
leave
or
mov
rolb
fnstenv
mov
ljmp
dec
cmp
mov
sarb
jne
js
xchg
sar
pop
push
mov
dec
and
sbb
xor
in
ljmp
icebp
mov
mov
in
div
sbb
sub
pop
ror
sub
lcall
iret
out
push
popf
push
xchg
push
into
sub
jmp
faddl
movsl
sub
rorl
imul
and
jns
push
adc
test
pop
or
fwait
push
jb
mov
pop
das
xchg
rcll
dec
lahf
int
popf
aam
fidivrl
out
inc
aad
push
dec
cmp
int
sub
add
cmp
add
pop
or
rorb
mov
out
sub
or
sbb
test
sub
clc
daa
das
or
movsb
add
fdivs
pop
in
jns
cwtl
decb
outsl
ret
or
aam
call
dec
fwait
lret
js
cli
mov
mov
out
add
mov
scas
gs
sbb
mov
fcompl
sti
test
mov
subb
or
int
jp
and
fcmovb
mov
ss
inc
js
or
movhps
in
fisubs
pop
mov
test
add
aam
js
cmp
mov
jns
in
and
mov
and
test
out
and
pusha
push
fdivs
xor
rcrl
push
mov
inc
jp
push
sub
mov
pop
test
jl
es
movsl
lock
lock
jmp
repnz
jno
into
loopne
pop
lods
mov
add
hlt
and
xor
int3
andb
iret
es
mov
add
mov
ljmp
enter
pop
xlat
mov
stc
iret
mov
rcll
sbbl
push
cmp
xchg
movsb
cmpsb
cld
adc
mov
mov
movlps
sub
xchg
push
lcall
mov
dec
out
popa
hlt
or
mov
inc
fildll
iret
inc
jnp
jns
add
ret
cli
mov
sbb
push
repnz
sbbb
push
adcl
repnz
and
pop
fmull
test
xchg
xchg
add
ret
imul
or
scas
pop
and
icebp
aad
rorb
and
sbb
xchg
and
lods
cltd
xor
mov
dec
mov
jbe
pushl
dec
inc
fisubs
cmp
clc
out
pop
jmp
mov
pop
into
xchg
xor
mov
push
hlt
rorb
call
pop
mov
mov
push
int3
js
out
inc
mov
lods
dec
fisubs
xchg
push
pop
call
aam
sbb
xchg
scas
in
mov
cmp
test
mov
dec
cmp
cmp
mov
ret
test
call
adc
or
fbld
movb
pop
inc
cmpsl
cmc
cmp
mov
pop
sbb
aaa
ds
xorb
lods
scas
imull
xchg
mov
aam
test
cmp
mov
filds
cld
ljmp
scas
orb
xchg
and
pushf
insb
out
lcall
adcb
icebp
push
in
push
lods
adc
mov
divb
lcall
aas
sub
adc
enter
sub
and
mov
mov
cmp
enter
lret
add
loop
mov
jle
aaa
pushf
imul
xor
or
out
repnz
sbb
insl
pop
push
adc
mov
inc
inc
or
cs
sahf
sbb
ja
push
xchg
fdivrs
add
mov
mov
mov
and
subb
xor
repnz
or
jmp
dec
fistpll
out
lds
push
or
mov
adc
sti
test
dec
or
insb
jbe
lds
add
cmpb
jae
in
rcrl
add
or
xchg
sarl
out
dec
push
jl
lock
dec
sti
inc
stos
mov
push
jg
cld
push
aad
add
sbb
imul
addr16
daa
imul
jg
mov
xor
sbb
inc
pop
add
mov
outsb
cmp
nop
add
jb
dec
sub
cmp
mov
xchg
push
test
sbb
gs
popa
pop
cmp
mov
mov
or
repnz
mov
and
ja
test
daa
xchg
cmpsl
push
cli
shrb
outsb
repz
push
lret
cmpl
xor
nop
leave
add
popf
ret
push
cltd
mov
mov
int
cmp
jns
aaa
push
lahf
aam
jge
arpl
xor
xor
push
add
pusha
mov
xor
ret
lods
jnp
cltd
into
xor
xor
stc
sub
arpl
ret
in
xchg
xchg
adc
aaa
daa
pop
cmp
pop
mov
fmull
cmpb
mov
pop
dec
add
xor
xchg
jl
out
andl
dec
and
test
in
test
or
in
push
cmp
sbb
mov
jae
cmp
push
jg
adc
add
ja
cmc
fscale
ret
or
jmp
xor
jno
cmpsb
and
mov
repz
mov
stc
scas
imul
scas
ffreep
xchg
adc
cmp
aaa
mov
sub
pop
mov
iret
lret
sar
jo
outsl
outsl
out
nop
lahf
mov
leave
push
mov
sbb
sub
xchg
aaa
lahf
aad
dec
or
mov
adc
adc
and
mov
cmp
jge
xor
movb
sbb
mov
sub
add
xchg
ss
xchg
jnp
aas
in
jae
xlat
jno
dec
inc
loop
xor
inc
int3
dec
cmp
cmp
hlt
mov
movsb
xchg
adc
pop
pop
in
mov
nop
jno
shll
loope
test
jp
adc
xlat
fdivr
cld
cmp
mov
data16
outsb
xchg
cmc
mov
pop
aaa
repnz
xchg
frstor
sub
adc
test
mov
mov
or
dec
dec
std
jo
jae
dec
sbb
sub
xchg
dec
test
and
mov
jbe
mov
fimuls
out
dec
xchg
addr16
jge
stos
sub
xor
decb
push
and
lahf
or
and
cmp
movsl
or
jmp
cmp
lods
out
cmc
push
loopne
cmp
or
fnsave
int
pop
mov
xorb
js
add
jmp
xchg
hlt
aaa
add
stos
and
aas
add
cmp
mov
es
lds
and
sti
out
push
mov
mov
add
cmp
fdivs
add
mov
test
cmpsb
repnz
mov
cmc
bound
xchg
jg
add
pop
dec
sbb
mov
inc
int3
jge
push
addb
cmc
out
call
dec
ret
pushf
or
movsl
jge
cli
fadds
stc
push
mov
sbb
insl
add
pavgb
add
jno
fld
rclb
xchg
mov
lock
inc
test
xlat
mov
mov
fldlg2
mov
in
inc
ljmp
outsl
push
imul
cli
fwait
iret
xor
add
ret
add
jno
arpl
mov
iret
imul
sub
fsubrs
xchg
in
and
add
sub
mov
or
xor
popl
jnp
loop
cmp
movsl
in
sbb
ret
cmp
or
pushf
fidivl
mov
call
pop
lods
sar
jge
rcrb
sub
outsb
out
clc
jbe
movsb
jno
aad
test
das
inc
mov
imul
call
aam
mov
loopne
xor
push
push
shll
or
insb
mov
lods
mov
int
sbb
jle
xor
sbb
outsb
mov
mov
arpl
movsl
pop
adc
inc
lock
iret
mov
jb
push
jle
push
inc
out
sub
ja
sbb
and
mov
orb
mov
mov
mov
xchg
xchg
or
arpl
inc
pop
subb
daa
add
lds
lcall
mov
pop
inc
cmp
push
dec
arpl
sub
insl
xchg
hlt
les
jle
outsb
shr
mov
clc
imul
cmp
out
aad
pop
movsl
shll
or
test
pop
hlt
in
sbb
adc
jnp
rcrl
bound
jp
in
jg
mov
push
cmp
add
sub
out
xchg
sbb
or
cmp
pop
aaa
mov
jno
jmp
insb
sub
lods
mov
pop
pop
push
add
sbb
insl
cs
push
jae
or
cmpsb
add
jg
hlt
pop
xor
pop
aad
dec
nop
test
push
jg
push
xchg
std
stos
add
cs
pop
cwtl
sub
add
ds
or
test
jae
and
pop
test
jae
add
imul
mov
jbe
dec
jmp
scas
xchg
int3
decl
sbb
sub
insl
bound
pop
mov
and
movsb
das
dec
jbe
mov
in
mov
xchg
push
fnstsw
jge
icebp
mov
mov
push
add
mov
xor
mov
cs
inc
mov
push
mov
inc
nop
fsubrl
mov
jge
push
movsl
push
mov
daa
jne
int
mov
mov
push
test
inc
ds
push
mov
int3
cmp
pop
or
push
pop
outsl
mov
inc
or
insl
sub
pop
ja
mov
xchg
ret
push
sbb
popf
add
adc
fwait
mov
or
mov
es
xor
in
addl
mov
pop
in
fisttpll
sahf
gs
fadds
jge
les
in
push
ret
loope
mov
lods
mov
push
inc
hlt
pop
push
jge
lret
jnp
loopne
adc
adc
mov
mov
jecxz
add
int
ss
or
bound
pop
jg
pop
push
mov
or
call
or
or
xor
mov
adc
sub
rcll
push
mov
ds
sbb
adc
stc
adc
push
push
mov
and
clc
mov
sub
not
jns
lcall
fildl
mov
out
pop
dec
jmp
aam
popf
das
into
jno
icebp
xchg
std
xchg
mov
rcrl
lret
sub
bound
arpl
popf
adc
fsts
fadds
cmp
inc
shl
lock
and
xlat
sar
or
cmpsl
sub
sub
in
nop
lcall
stos
and
mov
add
cmp
dec
enter
and
loope
icebp
cmpsl
mov
sub
adc
ret
and
enter
out
or
movsb
ret
mov
sub
inc
adc
rol
movsl
lods
mov
aam
dec
push
push
jnp
jns
or
pop
stos
fstpt
add
test
jg
cwtl
cmc
popf
int
jo
sahf
aaa
cld
add
push
xor
push
iret
faddl
rol
loopne
xor
dec
mov
pop
ljmp
in
outsl
jecxz
fbld
mov
in
stos
add
mov
pop
lahf
jnp
mov
or
and
inc
push
lret
cmp
cmp
jecxz
out
xor
aam
push
xchg
andl
add
aam
aas
dec
fcomps
xor
push
xor
pop
and
jns
popa
lods
test
bound
pop
push
lea
push
jbe
daa
testl
dec
cli
test
test
jl
push
jbe
dec
insl
outsl
xchg
test
jge
xchg
cs
fistps
clc
push
loope
jge
popa
inc
push
shlb
push
push
bound
push
pop
int3
mov
or
jb
subb
rorl
repz
xor
cwtl
notb
aam
and
lret
pop
jmp
pop
in
jns
or
popa
mov
in
ds
inc
adc
in
scas
mov
imul
addl
push
shlb
mov
lods
push
cmp
lods
mov
push
or
mov
nop
dec
pop
mov
aas
xchg
repnz
lods
leave
mov
and
xlat
popf
repz
daa
mov
cmc
repz
bound
mov
out
enter
loopne
mov
and
gs
dec
push
pop
or
xchg
addr16
loope
lods
les
fdivrs
int
stc
gs
xor
scas
out
inc
in
cmc
sub
dec
call
jo
xchg
jl
test
sub
ret
sub
sbb
sub
das
cmp
lret
or
pop
xchg
call
push
lods
sbb
adc
out
add
clc
adc
xchg
mov
mov
cmp
lret
aad
add
mov
xor
mov
imul
test
jle
mov
loopne
push
jbe
adc
cli
repnz
jl
aas
push
cmp
mov
mov
xor
pop
dec
and
pusha
dec
lahf
ja
mov
lods
pop
adcb
jl
push
outsb
outsb
lret
clc
fimuls
in
and
adc
or
int
pop
test
mov
divl
add
jge
fcomip
push
cmp
and
nop
inc
dec
testb
mov
loope
das
into
bound
data16
shrb
mov
sbb
pop
and
cmp
or
and
mov
jl
ss
jb
sub
ret
loope
add
das
lds
or
pushf
adcb
push
or
subb
push
stos
std
inc
stc
dec
lods
bound
cmpsb
in
fcmove
jmp
ret
cs
sub
scas
mov
mov
mov
sub
sti
xchg
cmp
xor
mov
inc
in
adc
stos
lods
test
and
jp
fcmovnb
or
les
test
fidivrl
and
in
jecxz
mov
sbb
add
imul
add
addr16
push
xchg
jbe
mov
int3
push
lcall
xor
popl
clc
pop
leave
xchg
sbb
or
and
inc
jbe
inc
insl
imul
lea
and
cmp
fsubrl
sbb
jg
outsl
lea
out
incb
add
es
arpl
xchg
sub
jno
das
cwtl
push
lock
int3
mov
test
je
dec
test
inc
push
lret
cmp
fists
jle
repz
dec
xchg
jp
outsb
inc
mov
lock
fs
push
shrl
mov
push
adc
push
inc
popa
lahf
lret
cs
or
xor
adc
inc
adc
cld
ficoms
dec
mov
jo
xchg
push
or
aaa
ljmp
out
mov
or
repnz
xor
jg
xchg
addr16
pop
inc
inc
ljmp
adc
int
pop
dec
in
es
inc
pop
jo
add
enter
pop
mov
lret
push
popf
add
cmp
imul
pop
or
enter
xchg
jg
inc
pusha
pusha
mov
cltd
fbstp
rcr
out
pop
aaa
in
mov
pop
inc
and
aad
or
xchg
mulw
mov
int
adc
pop
jl
stos
ljmp
jge
imul
cli
sti
cmp
loop
dec
in
pop
std
dec
jne
mov
fcoms
mov
xor
std
icebp
mov
int3
mov
push
int3
push
enter
out
pop
add
sub
rcrb
push
dec
lds
pop
xchg
adc
pop
jbe
lock
repz
and
pop
aaa
repz
call
int
pop
mov
daa
jo
fistps
mov
cmp
jns
dec
daa
xor
and
xor
hlt
xlat
cmpsl
mov
rorl
push
aam
mov
mov
xchg
cld
call
jnp
push
lret
in
cmc
rorb
jns
movsl
outsl
fistps
jnp
scas
pop
imul
iret
imull
push
subl
sbb
scas
push
daa
arpl
arpl
je
dec
ljmp
aad
inc
inc
cmpsb
lahf
add
imul
and
mov
rcll
sti
mov
mov
sbb
rcl
cltd
jge
mov
sar
sub
xor
je
shl
test
leave
movsb
mov
mov
xchg
enter
cmpsb
les
mov
dec
xor
add
adc
mov
pop
or
pop
push
int3
and
mov
std
in
shrb
test
movsl
add
jmp
xor
jnp
inc
mov
mov
mov
pop
ss
sub
rcrl
cld
sbb
pop
lods
inc
lret
add
fcompl
subl
mov
arpl
cmc
push
movsb
adc
xchg
pop
shl
addr16
imul
sbb
mov
scas
ja
mov
dec
fwait
jns
lret
adc
inc
cmp
in
jnp
mov
int
inc
lret
sub
pop
jmp
mov
pop
enter
or
bound
sub
cmpsb
adc
std
sub
push
cmp
dec
cmp
in
cltd
inc
lahf
neg
cmp
mov
aad
adc
nop
and
mov
cmp
xchg
pop
mov
cmp
or
push
mov
mov
sub
cmp
pushf
pushf
cmp
and
sarl
push
stos
push
mov
jno
pop
cmp
xor
mov
cmpsl
inc
lock
cmp
out
bound
xchg
xchg
popa
ficompl
popa
ja
pop
push
ret
mov
loop
cmpsl
lret
xor
mov
mov
ja
xchg
fwait
aaa
pop
outsl
cmc
cmp
inc
out
pop
into
mov
jmp
inc
mov
pop
cmp
inc
ja
aam
shl
scas
mov
shr
pop
pop
outsb
stc
push
frstor
cmp
pop
sub
int3
mov
xchg
outsb
ficoms
outsb
lret
sub
push
mov
ja
xchg
mov
loopne
add
sbb
mov
push
sbb
sbb
ret
sub
cmp
adc
lods
xchg
jns
cmp
mov
cmp
lds
insl
int
and
scas
dec
imul
add
pop
jge
pop
movsl
je
sub
mov
inc
sub
adc
repz
movl
inc
sub
adc
leave
add
mov
dec
mov
xchg
jl
imul
loope
cmp
and
jne
sahf
mov
or
sbb
in
inc
xchg
stos
sub
push
and
movl
fidivs
fs
cmpsl
iret
sub
insl
xor
sub
cmp
cs
xor
mov
std
cmp
push
add
or
aad
stos
mov
aam
push
mov
pop
mov
jle
sbb
cmp
nop
daa
xchg
cmp
xor
mov
lcall
mov
loope
push
sbb
fmuls
mov
sub
hlt
rcr
loope
movsb
pop
bnd
add
lods
sub
hlt
jl
movsb
sub
pop
test
xchg
and
lods
lret
inc
and
sbb
jae
mov
mov
mov
inc
mov
push
xchg
jg
mov
dec
jae
cmp
or
aad
cmpsb
inc
scas
cmp
or
dec
fsubs
jne
mov
push
xchg
shlb
xchg
nop
jmp
push
cmp
pop
nop
dec
dec
nop
rcrb
mov
outsl
outsb
sub
gs
fdivp
mov
sbb
xchg
int3
sub
xchg
repz
jns
mov
faddl
xor
push
push
repz
pusha
sub
fnstenv
or
out
pop
adc
dec
popf
jo,pt
or
js
adc
arpl
loope
inc
sub
test
subb
xor
stos
dec
add
and
mov
mov
lock
push
or
mov
fists
dec
xchg
outsb
jl
or
movsl
jge
outsb
inc
inc
sub
mov
jbe
jb
jb
add
in
leave
imul
pop
push
test
roll
jno
ljmp
and
lahf
jp
jg
js
in
push
fxch
imul
fbstp
push
ret
inc
loop
cltd
push
dec
loopne
jecxz
mov
adc
push
enter
rclb
fbstp
push
sub
sbb
js
or
mov
fs
lods
sub
scas
xor
push
movl
or
pop
aas
imul
in
mov
mov
add
inc
shlb
dec
jb
push
dec
pop
sbb
sbb
sbb
jae
and
or
inc
inc
je
loop
fstps
push
js
aaa
push
hlt
dec
push
xchg
adc
jmp
adc
icebp
cmp
cmp
xchg
cmp
inc
adc
scas
or
fsubs
inc
sub
pop
in
dec
rclb
sub
xor
inc
sbb
push
xchg
ret
add
stc
mov
out
cmp
sbb
mov
mov
in
mov
adc
cmc
push
push
sbb
loope
ljmp
xchg
jo
and
sub
pop
xchg
sti
jle
in
mov
xor
lcall
shld
je
loopne
mov
push
mov
dec
add
or
lods
lcall
or
jb
int3
fbld
jp
jne
jg
xor
sub
xchg
mov
mov
into
xchg
inc
adc
jno
xor
pop
outsl
mull
add
loop
mov
lret
jne
in
cmp
push
mov
stc
mov
rcr
shrb
mov
inc
pop
inc
sbb
fst
sub
fucomp
dec
and
mov
jecxz
or
fs
cs
inc
sub
sbb
add
aad
cmc
sti
inc
sbb
addb
pop
push
fistpl
or
or
mov
ret
adc
adc
int3
push
pop
int
xor
push
dec
mov
lods
inc
adc
xchg
popa
or
stos
lret
ret
pop
test
enter
ja
es
sub
dec
movsbl
pop
jb
jmp
fbstp
popf
int
adc
das
jge
pop
shll
stos
hlt
inc
xlat
lret
and
xor
mov
enter
iret
pop
xor
je
hlt
xchg
jle
add
ja
std
cmpsb
lret
adcb
dec
mov
aad
fcomi
sbb
inc
fcomps
or
popf
or
fmuls
mov
add
xchg
shlb
ljmp
sbb
jne
mov
push
incb
or
mov
inc
out
pop
xchg
insb
mov
jno
je
xor
movsl
out
mov
pop
push
jecxz
pop
dec
adc
and
lret
mov
fcoms
add
fwait
lods
jae
aam
pusha
dec
push
rorb
xchg
xchg
orb
outsl
mov
sbb
enter
roll
or
scas
movsl
in
cmp
ds
adc
and
add
gs
loope
add
das
push
sbb
jbe
dec
or
mov
pusha
jmp
pop
mov
loope
das
fwait
dec
dec
stos
incb
pop
loope
lcall
mov
out
pop
push
or
pop
jno
test
test
andl
lds
push
out
or
push
imul
jns
xchg
sbb
lds
cmp
popa
cmp
adc
subb
pushf
jae
push
inc
in
sub
cmp
in
sahf
out
push
inc
mov
pop
icebp
add
lcall
lods
pop
shrb
push
sbb
enter
shrl
mov
cmp
push
pop
insl
enter
mov
enter
clc
xor
loop
out
mov
pop
lods
imul
sub
loop
outsl
out
in
mov
xchg
cli
and
dec
pop
leave
cmp
lock
out
push
jecxz
mov
xor
xlat
sahf
or
xchg
sarb
icebp
and
adc
mov
dec
sub
popa
mov
lea
cmc
mov
js
sbb
loop
push
das
mov
jns
repnz
icebp
rcrb
aad
sbb
js
sbb
mov
xor
sbb
rcll
mov
jmp
sbb
mov
xchg
scas
sahf
outsl
sub
addr16
in
push
out
pop
xlat
inc
or
inc
loope
cmc
or
jnp
shll
int3
pop
xchg
mov
cmpsl
outsb
cli
sub
jmp
movsb
inc
sahf
jmp
repz
fisubrl
aaa
jle
mov
popf
sub
sbb
popa
xor
mov
pop
cmpl
dec
lods
jnp
outsb
aas
jbe
xor
out
mov
sahf
outsl
add
repnz
inc
icebp
xor
cs
lds
hlt
push
xor
mov
ja
scas
or
movsl
sbb
jle
movsb
int3
scas
iret
fmul
scas
xor
aaa
push
push
js
xchg
sarb
sub
pop
jle
push
and
imul
aas
add
iret
and
les
mov
andb
loop
ja
sbb
sbb
outsl
xorb
lret
xor
enter
hlt
mov
pop
movsl
movsb
divb
fwait
insl
cmpsl
mov
fwait
loope
ret
arpl
rcrb
dec
add
lahf
pop
or
cmpsb
sbb
mov
test
mov
out
out
or
pop
int3
jae
test
push
dec
out
pop
push
mov
lock
leave
mov
sbb
or
pop
cs
sub
mov
sub
pop
mov
hlt
push
iret
lds
inc
daa
sbb
icebp
ds
enter
in
sbb
js
pop
or
fsubrl
pop
leave
and
mov
or
mov
mov
sti
and
out
jnp
fldt
push
test
push
mov
mov
adc
mov
lahf
outsb
popl
bswap
fstl
mov
inc
movsl
push
cmpsb
stos
lcall
pop
add
mov
sbb
fnstsw
xchg
jl
mov
mov
repnz
mov
fidivs
int
aaa
aaa
xor
nop
fildl
pop
xchg
call
jbe
push
push
cmp
into
in
repz
shlb
inc
mov
shrl
aam
lea
or
add
fwait
ret
pop
idivb
jo
lods
push
loope
jl
int
jns
imul
jge
sbb
outsb
or
pop
fimuls
in
jl
push
xor
jnp
push
adc
jnp
mov
xchg
xorb
cmp
inc
std
adc
imul
push
sub
jno
loopne
and
xor
je
push
rorl
enter
fwait
mov
call
testb
dec
mov
in
xor
jmp
gs
cmpsb
mov
jg
lahf
adc
inc
push
lret
fs
xor
sbb
cmp
inc
pop
pop
aas
xor
add
aam
adc
xchg
xchg
outsb
xor
sbb
lock
adc
adc
cmp
push
mov
pop
shll
sub
repnz
pop
adc
add
fs
or
stc
or
rcrl
ljmp
xor
dec
jmp
pop
clc
imul
pusha
and
test
out
sbb
xchg
xor
sbb
rorb
push
xorb
sub
or
dec
psrad
jns
mov
popa
sbbb
ss
repz
das
mov
scas
mov
imul
jbe
scas
ficomps
jle
mov
jg
push
mov
dec
xchg
mov
inc
and
jnp
or
scas
or
lock
mov
movsb
call
addr16
inc
push
cmp
daa
fisubl
inc
rep
sub
add
lods
mov
cli
dec
cmp
fiaddl
mov
cmpsb
add
pop
push
mov
lcall
call
repz
mov
aad
xchg
mov
dec
xchg
ret
nop
and
ds
int3
iret
in
jo
adc
jg
ljmp
fwait
mov
jmp
je
adc
adc
sub
imul
ds
and
shlb
lods
popa
mov
add
mov
sub
addr16
mov
fs
int
rclb
sti
fcmove
xchg
mov
adc
or
sahf
in
pop
ret
shl
or
adc
dec
daa
xchg
add
fcompl
add
pusha
xor
mov
mov
sub
adc
pop
andl
out
pop
stos
push
mov
adc
sub
push
test
push
or
xor
mov
test
out
cmp
or
aaa
dec
nop
faddp
mov
in
mov
and
dec
repz
push
cs
sbb
gs
jo
adc
out
jo
fisubrs
mov
outsl
insl
pop
jb
sub
pushf
popa
shrl
sub
dec
sbb
pop
cmpsb
sti
popa
xrstors
and
sahf
dec
aaa
inc
adc
jmp
jg
cvtps2pd
js
fstps
dec
xchg
mov
lea
pushf
add
jne
sarb
fisttpll
in
bound
out
call
push
push
mov
popf
push
pop
dec
jae
aad
pop
jle
or
fcomps
cmp
fisttps
xor
add
in
inc
sbb
jo
jo
and
sahf
test
in
jmp
fprem
add
pop
mov
fnstcw
cli
fld
aam
mov
or
insb
stos
lea
sarb
sbb
loopne
mov
xlat
pusha
jb
inc
add
out
out
push
jno
pop
lret
test
and
leave
mov
lret
sbb
insb
out
enter
dec
add
and
pop
cli
xchg
add
icebp
ja
pop
lahf
lret
in
movl
clc
inc
inc
lret
incl
jno
jmp
or
fmul
mov
mov
pop
jne
fimuls
int
into
mov
repnz
sub
sbb
sarl
fs
int
sub
push
insl
xchg
dec
xchg
ja
pusha
inc
clc
push
sti
xor
lret
push
jmp
cmc
shll
std
jns
and
push
fldenv
xchg
icebp
dec
fwait
lcall
fists
add
stc
pop
pop
jmp
outsl
mov
jno
and
xor
and
aam
and
shll
roll
shll
adc
out
jge
jo
add
test
push
les
push
jbe
jl
rcrl
and
fnsave
aaa
sbb
push
mov
mov
and
stos
cli
sarb
nop
int3
xchg
mov
push
sbb
mov
cli
adc
mov
ss
popa
jae
mov
std
repz
aam
out
jb
adc
mov
repz
push
adc
inc
push
ret
inc
and
mov
mov
xchg
lahf
les
push
mov
pop
in
jne
cli
xchg
mov
xchg
pop
sub
jno
and
gs
dec
shl
pop
andb
jmp
add
lds
dec
in
les
mov
iret
or
nop
mov
adc
imulb
shr
cmp
ret
jmp
push
rolb
push
mov
std
cs
push
data16
cmp
out
push
andl
mov
or
pop
or
nop
push
movb
pop
shll
push
loop
cmp
repnz
leave
leave
or
xchg
and
cmp
insl
fiaddl
mov
popa
push
mov
imul
loop
mov
mov
pop
lret
rorl
scas
push
jne
mov
pushf
cs
push
out
iret
mov
test
out
ffree
jmp
data16
fnsave
sti
data16
pusha
pop
push
ds
icebp
fucomi
and
push
jb
pop
inc
ljmp
mov
add
jp
sbb
inc
repnz
push
adcl
push
cmc
or
sub
sahf
mov
sahf
push
jb
into
mov
stos
push
lods
test
pop
jle
mov
loopne
fwait
icebp
test
mov
out
pxor
push
jmp
sarb
rcrl
hlt
int3
sbb
mov
pop
ret
pop
mov
enter
pop
js
mov
pop
mov
mov
push
test
mov
inc
pop
pop
in
cltd
ret
subb
std
mov
lahf
shr
inc
je
jmp
add
neg
lock
mov
push
sub
sbb
push
repnz
sbbb
cmp
loopne
test
push
bound
ror
sbb
shrl
rcr
movsb
push
or
divps
outsl
adc
bound
jne
mov
in
sub
sbb
add
outsb
or
rorl
sub
gs
out
pushf
xlat
ljmp
enter
dec
sbb
stos
insl
movsl
repz
dec
cmp
pusha
pop
sarl
in
xchg
mov
scas
jne
stc
cmp
xchg
and
jae
aad
insb
push
push
lea
stos
inc
outsl
add
mov
clc
js
xor
mov
sbb
loop
inc
mov
call
sub
popf
cmp
adc
mov
int3
in
rolb
movsb
jno
fstpl
mov
push
fsubp
mov
fsts
jmp
jg
arpl
sbb
lret
shll
imul
xchg
or
dec
sbb
test
mov
xchg
adc
stc
or
imul
loope
enter
dec
daa
fcmovnbe
inc
lcall
ja
orb
jb
mov
popa
shrb
test
lds
out
sub
outsl
pop
cltd
fistpll
jmp
pop
sbb
loopne
inc
call
in
mov
enter
fidivs
rep
repnz
jbe
gs
and
idiv
adc
bound
jno
xor
icebp
sub
std
adc
and
fstp
ljmp
mov
rcl
fwait
mov
loope
or
pop
adc
int
jg
iret
jns
shll
push
mov
mov
mov
dec
fdiv
mov
cmp
and
inc
push
dec
bound
ds
adc
inc
in
sbb
stos
jp
and
imul
daa
movsl
xor
push
add
imul
xor
mov
inc
inc
das
ds
or
pop
xchg
push
ret
mov
adc
out
enter
test
pop
jmp
mov
cmp
imul
add
jg
shlb
push
scas
xchg
adc
mov
mov
push
cwtl
bound
mov
shlb
loop
push
mov
adc
jne
lock
mov
sub
lods
push
cmpsb
andb
jb
fnstenv
or
mov
and
lock
addr16
cmp
or
out
or
or
in
rcrl
xor
cmpsl
push
sbbl
ss
cmc
mov
gs
je
push
mov
aas
xor
add
add
scas
insb
jns
mov
cmp
in
rorl
sbb
sub
out
pop
sahf
rcrb
insl
push
cltd
ret
pop
adc
xlat
pop
sbb
repz
mov
push
stos
sahf
pop
jb
inc
fcompl
xchg
mov
test
mov
add
xchg
test
mov
jbe
mov
scas
jle
push
mov
push
movsl
adc
out
inc
pop
in
ret
jnp
lcall
lea
lret
dec
jno
cld
fwait
inc
mov
jmp
aas
pop
sbb
lcall
or
push
leave
and
dec
arpl
idivl
shrl
dec
sub
add
int3
adc
ss
imul
insb
in
add
push
xor
xor
and
cmpsb
inc
rclb
arpl
divb
jmp
loopne
pusha
shlb
jo
cltd
jae
or
adc
jp
das
dec
inc
mov
pop
mov
xchg
lahf
subb
cs
shlb
pop
aaa
and
pop
mov
xchg
lret
adc
pop
xor
sbb
inc
mov
divb
jl
cs
cmp
fsubs
into
out
ljmp
mov
jno
aam
rol
das
aad
cmpsb
pop
and
xchg
push
sbb
ficoms
dec
jnp
shr
jl
add
mov
dec
fcoms
div
adc
insl
int3
nop
jl
cmp
cmp
aaa
sarb
sub
imul
sub
inc
into
inc
repz
lcall
jae
mov
dec
pop
aam
ss
and
lret
test
test
adc
mov
scas
jne
push
sub
jae
add
pusha
jo
ja
outsl
xchg
inc
dec
bound
mov
fdivr
adc
inc
ret
in
pop
mov
or
icebp
mov
scas
lret
sbb
mov
lods
cmpsl
movsb
std
push
jg
dec
stos
enter
call
test
loope
cs
imul
add
mov
out
push
sub
xchg
push
mov
es
clc
js
in
cmp
inc
lcall
sub
gs
xor
fs
inc
rol
cs
mov
movsb
dec
sub
push
ljmp
mov
jle
cmp
mov
aas
jmp
mov
icebp
pop
sub
pop
push
fnstenv
inc
xchg
push
rcrb
mov
jno
or
jp
pusha
enter
sbb
add
mov
xchg
inc
subl
fidivrs
shlb
shl
sub
faddp
cmp
mov
mov
push
and
xor
lahf
pop
das
sbb
rclb
subb
mov
pusha
mov
scas
lods
loop
pusha
jmp
aas
inc
xchg
je
or
xchg
xor
xor
inc
ja
fwait
xor
test
int3
pushf
insl
push
jl
aaa
popa
adc
inc
cwtl
in
negb
lods
fcomps
lock
jne
jl
mov
mov
cld
js
cs
mov
cld
cs
and
mov
loope
sub
xchg
add
lahf
leave
xchg
sub
in
pop
daa
add
lcall
ret
nop
dec
adcb
cmpsb
dec
push
sarb
mov
mov
jg
pop
inc
mov
pop
sub
push
dec
inc
pop
in
xchg
mov
cmp
xchg
pop
mov
dec
lods
xchg
xor
das
dec
mov
sub
jp
into
mov
mov
add
mov
xor
xchg
aad
pop
dec
xor
movsl
maskmovq
les
xor
test
fstpt
push
sahf
xor
xchg
and
pop
setae
mov
dec
push
mov
std
cs
add
mov
arpl
or
adc
jns
daa
leave
inc
iret
inc
or
xchg
outsb
stc
jbe
add
dec
and
rclb
shlb
inc
inc
add
mov
cmpsb
inc
ror
pop
sbb
lods
cmp
mov
daa
int
adc
inc
cmp
das
xor
pop
push
test
xor
mov
xchg
mov
movsl
ss
mov
adc
adc
repz
dec
imul
scas
cmp
jo
ljmp
or
scas
xchg
dec
inc
cmp
or
notl
push
sub
and
popa
jl
loope
aas
sbb
inc
test
je
cltd
cmp
jnp
mov
aam
fsub
sbb
add
pusha
sbb
jp
add
jae
pop
aad
or
icebp
je
adc
inc
into
jo
xlat
loopne
js
cmp
mov
cmp
daa
rorb
out
rcll
push
test
pop
inc
mov
sub
or
xchg
arpl
jl
dec
nop
or
xchg
or
jmp
pop
dec
sbb
addr16
mov
bound
mov
xorl
and
mov
insl
in
aaa
pop
push
iret
fwait
pop
stc
mov
jne
fwait
xchg
and
mov
cli
lahf
xor
in
jb
pop
mov
sarl
mov
imul
in
lahf
push
add
or
add
pop
pop
fsub
mov
jge
call
dec
pop
or
mov
push
mov
dec
pop
mov
jno
or
jle
lods
enter
hlt
decl
fwait
loop
out
pop
mov
inc
cwtl
jns
add
out
pop
dec
xor
pop
cld
mov
xchg
cmpsb
or
add
push
xchg
add
stos
or
dec
mov
jge
xchg
jno
adcb
xchg
jg
cmp
out
outsl
outsb
jb
imul
daa
lea
leave
leave
mov
inc
sub
mov
das
es
imul
push
repz
cmp
sbb
cltd
dec
cld
push
in
hlt
sbb
push
and
test
and
or
pop
lahf
pop
sub
mov
mov
mov
scas
dec
adc
fwait
ja
mov
jp
or
sub
dec
push
sub
mov
movb
pop
ret
mov
daa
jmp
mov
hlt
outsl
cmp
mov
ljmp
nop
mov
pop
out
sbb
and
sahf
pop
jl
xor
inc
pop
mov
or
aaa
or
adc
mov
in
push
movsb
stos
xlat
cmpsb
or
divl
mov
jp
pop
pop
bound
rcll
mov
lods
mulb
xchg
in
lods
and
jmp
and
push
ret
aaa
pop
inc
stos
xchg
decb
lods
sti
negl
and
adc
cltd
or
mov
jge
negb
mov
fwait
inc
mov
adc
cwtl
pop
pop
and
shrb
rclb
outsb
or
cs
sar
add
or
sbb
adc
filds
jl
mov
loopne
cwtl
mov
xor
mov
push
or
pop
add
adc
pop
pop
js
mov
and
pop
lahf
sbbl
or
adc
mov
insl
arpl
lods
and
pop
jnp
out
jl
pusha
mov
arpl
lretw
jl
in
mov
adc
sbb
inc
dec
jge
stc
lods
test
xchg
and
and
mov
xacquire
xor
inc
aam
xor
mov
xchg
shl
pop
into
les
mov
jae
lret
xchg
pop
loope
lret
mov
adc
ret
gs
inc
clts
mov
subb
popa
mov
cmp
into
jmp
push
push
pop
sarb
mov
cmp
in
ss
and
imul
out
adc
push
fldt
stc
mov
lret
dec
popf
jp
add
inc
sbb
lret
imul
rcl
pushf
lock
xchg
pop
fdivrs
jo
inc
test
inc
popa
jl
stos
stos
cmp
push
pop
fstl
pushf
jns
inc
pop
adc
clc
add
mov
mov
add
sbb
mov
push
add
and
xlat
pusha
jns
mov
dec
mov
add
mov
in
xorb
in
dec
or
mov
add
sarl
pop
dec
dec
dec
cmp
pop
pop
insb
jg
mov
addr16
fsts
adc
jae
insl
in
or
fmul
xchg
add
push
or
mov
div
jb
pop
aam
sub
or
sub
int3
mov
pop
add
ja
popa
inc
cmp
hlt
and
jmp
fsub
lret
pop
xor
lahf
std
jge
lret
outsb
add
xchg
mov
out
xor
stos
adc
scas
sub
add
aad
pop
mov
add
pop
pop
gs
jne
es
dec
or
pop
pop
mov
imul
cwtl
lcall
push
mov
inc
movsl
xchg
int3
or
inc
outsb
out
stc
push
adc
mov
jae
mov
pop
das
stc
adc
std
or
in
sbb
pop
pop
pop
fcomps
repnz
hlt
pop
ffreep
or
push
mov
sbb
dec
pop
aaa
repnz
mov
adc
jo
std
cmpsl
dec
shlb
les
addb
jge
jnp
lea
xlat
xchg
adc
rorb
mov
pop
popa
mov
and
sub
mov
mov
add
andl
jne
movsl
cli
dec
shrb
loopne
outsb
xchg
mov
sub
sbb
in
notb
add
mov
jmp
cwtl
repnz
push
and
popa
clc
mov
xor
fidivl
scas
stc
jne
sahf
mov
pop
pop
fiaddl
xor
and
shlb
insb
xor
sbb
repz
in
mov
scas
xor
scas
jne
repz
push
popa
rcl
iret
jg
xchg
lods
inc
xchg
cmp
jo
daa
push
sub
dec
mov
push
cmp
bound
pushf
repz
les
rep
xchg
imul
stos
lcallw
scas
xchg
daa
daa
xchg
lcall
xlat
push
fninit
jb
lods
mov
fsubs
sub
bnd
fistpl
stos
stos
adcb
xchg
push
adc
jnp
roll
movzwl
xor
outsb
push
sti
jle
fdivr
xchg
aas
sub
test
mov
addl
pop
pop
insb
popa
push
js
out
addr16
jnp
jp
sti
pop
xchg
int3
test
lds
push
jle
inc
cmpsb
jg
gs
and
es
fldcw
fadds
cli
orl
xor
out
xor
dec
sarl
js
add
cwtl
xchg
mov
jle
icebp
aad
lds
inc
arpl
mov
ficompl
jb
sbb
add
jmp
test
test
mov
mov
dec
adc
push
fildll
inc
adc
cmc
sbb
scas
inc
scas
sub
and
adc
pushf
test
fptan
js
in
fsubrp
and
orl
mov
mov
jmp
jp
cmp
sub
push
jo
bound
cmpsb
popa
mov
aam
sbb
test
jns
insl
and
pop
inc
lock
dec
xchg
mov
test
fs
push
and
mov
stc
sub
sahf
aas
in
xor
cmpsb
insb
mov
test
xor
xchg
sbb
push
sbb
sub
add
inc
icebp
dec
fmul
insl
sub
imul
nop
cmpsl
cmp
les
jle
imul
clc
icebp
cmp
push
add
sti
lods
and
out
lret
hlt
add
jbe
xlat
mov
dec
ljmp
gs
dec
push
imul
aaa
aas
mov
sbb
lds
pop
imul
cld
push
hlt
mov
imul
mov
cmpsb
stc
aas
sbb
pop
pop
dec
dec
inc
and
aam
hlt
mov
out
inc
cmpsb
xor
pop
lods
es
int3
xchg
sub
es
adc
out
stos
push
sbb
inc
clc
popa
ret
ror
xchg
pop
xchg
sahf
lcall
cmp
sbb
insl
stc
dec
dec
mov
xchg
ja
gs
out
aad
sbb
push
jle
daa
push
insb
mov
sub
in
jle
neg
fdivrs
in
testl
pop
push
sub
mov
push
cmp
shrb
sub
inc
lahf
push
and
and
call
nop
mov
scas
and
subb
ljmp
dec
es
out
dec
cmpsb
cmpsl
popf
inc
mov
cmp
xlat
or
or
stos
sbb
addb
les
sti
jne
mov
lahf
arpl
inc
jp
or
and
jge
cmp
arpl
daa
fdivs
cltd
jne
adc
pushl
negb
inc
cltd
add
test
cmc
adc
adc
inc
and
rorb
lods
add
dec
mov
cmpsb
xchg
push
push
push
sub
movsl
out
je
inc
shlb
cmpsl
pop
pusha
ljmp
ficoms
adc
aas
out
fwait
sbb
aam
jl
pop
adcb
por
pusha
negl
arpl
bound
xor
mov
jns
xchg
loopne
mov
add
dec
add
push
and
mov
fnstsw
lods
xchg
mov
stos
outsl
cmp
test
mov
mov
pop
sbb
cmpsl
int
jno
and
out
je
xor
inc
mov
fsubs
fprem1
mov
rcrb
cs
or
jno
daa
or
repnz
pop
mov
dec
inc
insb
mov
push
bound
or
sbb
mov
test
jno
or
jl
insb
mov
test
lock
dec
xorl
insl
das
add
push
pop
mov
push
rcll
scas
dec
xor
andb
icebp
aas
cmp
sbb
sarl
mov
jmp
stos
popa
loop
sub
in
cmc
mov
out
js
inc
mov
push
lods
scas
mov
lods
test
aas
aam
sbb
mov
call
jecxz
mov
daa
mov
testb
pop
inc
and
cmp
enter
pop
out
inc
mov
sbb
sbb
andb
push
into
dec
push
in
popa
lea
cld
fneni(8087
push
cwtl
push
fwait
fbstp
jmp
mov
inc
inc
pop
jle
jo
jl
push
stos
sub
xor
xchg
xchg
pop
sar
fdivs
dec
xchg
jp
mov
mov
xor
xchg
xchg
outsb
mov
aas
mov
mov
mov
jne
cmp
dec
test
shll
cmc
popa
jne
mov
inc
mov
inc
mov
negb
xchg
sub
mov
push
jge
dec
in
xchg
andl
aas
mov
add
xchg
out
pop
ljmp
jmp
mov
jns
test
popa
test
adc
push
xor
cmpsl
in
pusha
mov
lcall
clc
xchg
insl
js
xchg
jne
cmp
jo
repz
mov
jns
lods
call
adc
inc
out
pop
inc
mov
movsl
add
out
rcrl
lea
movsb
hlt
jno
push
lods
mov
or
mov
int
push
add
lcall
jl
addl
mov
push
sub
sbb
inc
fcmovnbe
cmp
test
mov
icebp
mov
cmp
mov
cltd
stos
and
mov
jne
call
aas
pusha
xlat
xchg
fmuls
sub
aad
push
cld
sub
sbb
jae
clc
movsl
arpl
or
ds
sub
and
xchg
mov
sbb
cmp
sub
stos
es
or
std
add
add
mov
pusha
sti
xor
pop
cmp
pop
dec
cwtl
push
imul
xchg
inc
shrl
in
sti
push
mov
pop
lods
jecxz
mov
notb
xchg
dec
mov
cmp
or
movsb
ja
jl
mov
out
jge
out
imul
inc
mov
xor
adc
adc
mov
push
movsl
inc
adc
gs
inc
sbb
dec
sbb
push
popf
shr
or
cmc
push
dec
pop
mov
pop
add
or
or
or
jecxz
imul
mov
xor
inc
dec
jnp
in
and
jle
movsl
filds
add
ffreep
dec
out
lret
dec
xor
and
mov
dec
mul
mov
out
pusha
outsl
insl
dec
jo
sub
lea
cmpsb
into
dec
pop
icebp
or
mov
out
jp
cs
out
sub
cmp
shl
sbbb
add
jae
dec
scas
test
scas
cmc
scas
xlat
in
stos
dec
mov
pop
push
mov
lods
xor
or
ss
out
and
cmpsb
dec
inc
insl
pop
inc
xor
push
xchg
push
jmp
mov
out
xchg
pop
jbe
stos
fldenv
push
xor
push
shl
fs
mov
or
push
repnz
dec
test
jno
call
data16
cwtl
sarl
in
cs
shrb
xor
lods
sub
repnz
push
ljmp
mov
loop
cmpsb
icebp
push
clc
insl
jns
xorl
adc
lahf
push
xor
mov
push
dec
cmc
ficompl
mov
rolb
sub
mov
adc
enter
mov
sti
in
daa
push
jp
push
sub
push
add
mov
sub
mov
cmp
push
popf
mov
iret
add
inc
popa
nop
aam
daa
jecxz
dec
pop
sub
fcoml
xor
sub
loope
gs
repz
or
sbb
xlat
sahf
jb
bound
add
inc
popa
std
fs
push
repnz
dec
mov
ja
test
mov
adc
cmpsb
icebp
fbld
jno
inc
into
mov
sti
xchg
adc
inc
mov
lahf
mov
sbb
maskmovq
cmp
call
outsl
and
arpl
adc
int
mulb
add
pop
out
lods
push
insb
xchg
orb
jg
add
iret
std
les
mov
mov
lods
sub
mov
push
dec
push
cmp
fcoml
mov
cmp
mov
insb
pop
add
sub
daa
rep
rcrb
adc
xor
xor
pop
inc
mov
cmp
mov
push
dec
cmp
inc
and
mov
loope
test
nop
addb
jg
mov
mov
xor
xchg
nop
sub
add
lods
les
les
lahf
xor
enter
js
xor
pop
or
or
inc
enter
cmc
pop
lahf
jecxz
loope
imul
imul
testb
das
jg
inc
mov
sbb
loopne
xor
fwait
xorb
out
pop
in
aad
push
iret
or
push
xchg
femms
push
xchg
or
push
icebp
xchg
imull
and
mov
mov
into
icebp
mov
or
imul
js
scas
ret
mov
push
test
pop
lcall
dec
jo
inc
cmp
and
call
add
mov
mov
movsb
es
sbb
popa
jmp
xchg
jne
sbb
xchg
bound
push
sub
xor
dec
sar
notl
xchg
adc
fidivl
dec
loopne
xor
jecxz
frstpm(287
fwait
ret
xchg
inc
mov
or
pop
divb
cmp
mov
je
mov
das
mov
jno
xchg
ss
pop
mov
addr16
add
aad
cltd
call
popa
sarb
mov
dec
in
mov
faddl
aaa
or
cmpsb
cld
add
in
mov
jge
inc
int
loopne
adc
inc
cmp
icebp
bound
pop
xchg
lret
in
pusha
iret
jle
ret
sbb
scas
add
in
adc
loop
mov
stc
dec
push
inc
mov
stos
push
sbb
pop
outsb
int
fistpll
and
out
movsb
mov
in
adc
add
mov
jle
push
adc
nop
jle
sub
ds
fildl
cmp
or
out
and
test
rep
imul
fcmove
int
pop
mov
jno
ret
test
jne
loop
mov
push
mov
ret
enter
mov
les
in
fbstp
sbb
push
pop
adc
pop
insl
je
adcl
pop
shrd
ljmp
pop
fdivrs
ret
add
fwait
sar
mov
xchg
dec
xchg
fldt
out
dec
jge
pushf
out
adc
fildl
or
iret
jbe
push
lahf
out
mov
adc
icebp
scas
gs
push
adc
fmul
xchg
cmp
out
push
out
jl
dec
inc
and
push
push
add
pop
les
push
xchg
pop
scas
adc
and
ljmp
arpl
cmpsl
je
jne
sbb
scas
repz
insb
nop
std
jae
mov
mov
sub
aaa
aas
shr
push
les
lahf
insl
jns
xchg
outsl
xchg
inc
and
repz
pop
mov
in
test
xchg
subb
mov
mov
ds
sub
jo
mov
cmc
inc
pusha
call
sbb
push
mov
add
cld
mov
jl
movsl
pusha
xlat
push
pop
int
or
cmpsb
mov
pop
pop
push
and
inc
cltd
into
sbb
sbb
cmp
ds
mov
rcll
shrl
pop
jb
jge
je
movsb
sub
in
mov
mov
lock
jmp
test
or
pop
xlat
cs
cmp
pop
leave
dec
mov
daa
push
test
and
out
mov
jnp
js
movsb
clc
cwtl
lea
push
andb
xlat
push
pop
mov
test
pop
or
cmp
test
mull
scas
or
mov
adc
lret
sbb
dec
inc
mov
push
mov
cs
and
add
mov
add
mov
lret
pop
inc
cmp
jg
out
dec
cmp
fsts
jne
das
adc
push
ret
movsl
mov
and
push
test
mov
push
out
sub
mov
call
pop
push
lcall
sub
adc
cli
lcall
adc
sahf
dec
cmp
dec
jne
cmpb
pop
movsl
sub
dec
lahf
and
mov
sbb
sarl
sub
loope
movsl
inc
cmpsb
aas
dec
pusha
inc
xor
mov
xchg
dec
xchg
jl
jne
push
lea
les
andl
imul
xor
cmp
out
lgdtl
sbbb
fcomi
inc
fwait
sbb
xlat
es
scas
inc
and
xchg
inc
pushf
pushf
or
test
inc
mov
out
aaa
das
xchg
or
fsubl
sbb
jb
mov
push
fsubl
dec
popf
dec
cs
test
out
sti
push
sub
or
shll
pushl
cs
adc
dec
clc
mov
call
xchg
sbb
mov
mov
jne
and
hlt
loop
pop
loopne
mov
mov
inc
rol
push
sub
jne
cs
js
movsb
cmp
sbb
add
aam
mov
adc
pop
mov
movsb
into
lahf
ret
push
jle
stc
cmp
ds
dec
push
mov
clc
fwait
xor
and
sbb
pop
add
cmp
mov
ljmp
sti
loop
sbb
mov
hlt
test
xor
or
xchg
ds
jne
push
movsl
pop
push
insl
ret
std
arpl
scas
xchg
inc
mov
int3
xchg
sahf
orb
sti
fbld
mov
adc
icebp
inc
scas
cmp
push
dec
fsubrs
fcmovb
pop
repnz
push
in
push
mov
xorl
xchg
dec
cmp
push
jno
jecxz
mov
or
popf
push
push
pop
andb
or
aas
pop
mov
aaa
mov
inc
fbld
cmpsb
mov
loopne
or
xlat
jno
sbb
add
push
es
fs
cld
cmp
into
lods
xchg
mov
cmp
jo
aad
add
sub
xchg
push
mov
mov
jecxz
push
pushf
ret
jl
insb
push
stos
popf
inc
or
test
sbb
mov
cmp
aaa
pop
cmp
nop
popa
pushf
or
mov
cltd
inc
cmp
popa
loope
pop
xchg
in
jecxz
xchg
mov
ja
jge
in
andb
jl
or
cs
sub
arpl
cld
lcall
mov
or
dec
sub
mov
jno
testl
add
enter
in
xchg
xchg
jo
push
jmp
nop
out
sbb
mov
push
sub
daa
hlt
aas
aaa
add
pop
jns
push
sbb
jl
add
and
out
loopne
mov
pop
adcb
cmp
sub
test
jbe
outsl
fldl
aam
mov
xchg
cmpsb
mov
pop
bound
lret
push
bound
add
icebp
sub
and
pusha
in
add
mov
dec
roll
xchg
test
mov
cli
in
jb
lret
cwtl
test
push
nop
in
nop
aam
dec
lahf
das
lret
std
fst
loop
dec
add
inc
sbb
cmpsl
stc
mov
sbb
jle
notb
ja
sub
aaa
inc
mov
lock
mov
fs
push
popf
mov
jl
dec
es
push
out
pop
jle
dec
sub
jl
cmp
mov
sbb
mov
fadds
inc
and
hlt
dec
sarb
mov
xchg
iret
out
or
pop
mov
dec
add
mov
outsl
jg
iret
xchg
mov
or
sbb
pop
add
lock
jno
fsubr
lods
bnd
int
xchg
jae
push
lahf
pusha
sub
mov
and
xchg
inc
sbb
sub
inc
push
xor
cmp
mov
sbb
sub
jle
out
int3
add
jge
cmc
mov
cmp
test
std
xchg
lahf
in
push
daa
cmpsl
pop
jl
or
xchg
push
lcall
decl
out
iret
in
pop
and
pushf
in
add
aas
fistl
enter
outsb
repz
scas
cli
xchg
in
es
and
cmp
shrb
push
pusha
jo
ja
hlt
popa
jo
imul
xor
xchg
or
sbb
filds
mov
ret
pop
mov
dec
jmp
jae
aas
or
adc
jg
pop
and
repz
lods
fcom
outsl
cmpsb
lahf
rcl
jl
pop
fsts
insl
jnp
add
pop
jo
mov
dec
lods
stc
xchg
cmpsl
sub
and
mov
pop
arpl
or
jg
fldcw
pop
sub
pop
or
jmp
mov
cmp
ret
fwait
mov
clc
xor
in
icebp
std
andl
cli
cmp
mov
inc
repz
xchg
or
iret
dec
idiv
pop
lods
sbb
adc
sbb
popf
ja
jecxz
mov
inc
dec
les
aad
cmpsb
out
lret
rcr
push
adc
cmp
push
and
pop
fstpl
inc
adc
sbb
mull
shrl
mov
mov
pop
xor
mov
jmp
jbe
cmpsb
push
in
cmpsl
push
and
sub
in
sbb
ret
in
adc
mov
xor
faddl
testl
push
jns
add
mov
mov
roll
mov
jae
fcompl
jns
xlat
out
jb
adc
xchg
int
mulb
es
push
adc
xchg
and
lea
cmp
mov
ss
clc
pusha
and
xchg
mov
push
xlat
cmp
jbe
out
jo
xchg
inc
cld
cmp
pop
repnz
or
dec
je
int
xchg
enter
call
push
popf
sub
and
add
rcrl
scas
push
je
pop
jg
pusha
jl
shr
sbb
loope
xchg
xor
or
inc
xchg
push
xchg
aas
mov
into
xchg
ds
add
adc
call
test
fs
dec
add
lret
dec
addr16
pop
aad
sub
repnz
sbbl
xor
ret
leave
lahf
inc
sarb
jecxz
mov
cmp
jns
psubd
push
cmp
jg
sarb
lret
mov
jl
sahf
add
inc
mov
dec
negl
pop
and
arpl
dec
xor
test
stos
adc
mov
xor
insw
cmp
mov
add
dec
repz
rcl
into
cs
fcmovnbe
imul
push
jno
leave
lds
mov
shrl
popa
hlt
pop
sbb
mov
leave
stos
xorl
in
adc
ficompl
inc
ret
mov
mov
jge
jnp
pushf
sbb
inc
mov
mov
fsubs
gs
and
xchg
mov
jmp
adc
jp
mov
mov
push
sub
ljmp
cmp
mov
and
outsb
outsl
movsl
ss
jae
add
les
pcmpgtw
cmp
push
orl
dec
dec
inc
mov
fisubl
push
bound
ret
push
push
sub
push
imul
add
stos
dec
inc
jo
or
int3
cmp
xchg
push
int3
mov
mov
cmp
into
add
rcll
scas
ja
scas
cld
push
xchg
jecxz
movsl
adc
cld
mov
pop
repnz
stos
movsl
xor
push
fbld
out
lds
scas
repz
push
stos
dec
xchg
cld
out
std
je
dec
es
int3
sub
popf
xor
sbb
and
sub
notl
mov
add
jle
mov
adc
jae
divl
xor
mov
jp
fadds
xor
adc
fs
jae
addb
jbe
xchg
lret
xor
push
mov
adcl
pusha
jle
xchg
push
cmp
push
xchg
push
sarb
mov
xor
test
div
mov
in
pop
pushf
adc
pop
dec
cld
add
adc
dec
jb
adc
sub
iret
dec
out
mov
hlt
loopne
das
je
dec
test
fildl
insb
test
mov
jne
test
js
adcl
sub
icebp
mov
shlb
dec
std
lods
loope
imul
sbb
xor
jecxz
shll
int
js
dec
in
push
iret
mov
popa
jl
cmp
mov
popa
push
pop
addr16
fcoms
mov
add
loopne
stc
push
dec
mov
mov
clc
push
sub
inc
mov
je
dec
sbb
js
jecxz
adc
repz
mov
loope
inc
xchg
or
test
in
add
stos
mov
rcrb
add
inc
leave
or
push
xchg
rorb
inc
sub
and
stos
or
pop
pop
insb
cli
mov
inc
cmc
out
mov
sub
or
lock
lea
sub
shll
cmp
xor
mov
push
pushf
push
push
add
popa
in
cld
jmp
das
pop
shrb
jbe
cli
scas
fldcw
sub
ds
inc
cmpsl
xor
lods
inc
or
add
mov
xchg
adc
test
mov
xchg
movntq
out
imul
addl
out
js
es
inc
fsubrl
pop
sbb
and
lods
and
jg
repnz
or
in
repz
sahf
es
and
dec
stc
sbb
dec
xchg
sub
mov
in
in
or
notl
xor
push
adc
sti
incl
stos
ds
push
in
jns
ret
jo
cmp
imulb
arpl
in
das
push
lds
insb
add
lods
xchg
sahf
imulb
cmp
std
push
rcl
scas
adc
add
sbb
pop
outsl
fcmovnu
mov
pop
add
sub
mov
sahf
add
and
sub
or
cld
inc
fdivs
mov
pop
add
iret
push
xchg
fwait
sbb
pop
or
dec
clc
pop
les
push
in
xor
cmp
outsl
pop
jnp
xchg
push
push
jns
xchg
mov
inc
pop
mov
sbb
mov
test
out
push
test
sub
inc
lret
add
dec
stc
stos
nop
xor
and
mov
xchg
jge
cltd
inc
aaa
xchg
repnz
aas
xchg
mov
jb
and
mov
sub
shrb
imul
push
es
les
cltd
sub
sub
dec
cmpsl
sbb
in
dec
mov
fdivl
loopne
rolb
iret
cmp
out
stc
clc
shll
nop
jg
mov
movsb
out
fs
push
dec
ret
dec
icebp
popf
mov
push
les
sub
ror
ja
dec
insl
inc
and
push
pop
adc
pop
push
sbb
push
cs
aad
aad
sub
pop
out
outsb
pop
mov
or
xchg
pushf
sti
mov
pop
addr16
sti
rcrl
mov
pop
jg
dec
inc
push
aad
adc
fmul
aam
test
add
or
cmpb
insl
bound
xchg
jno
jnp
jbe
push
mov
pop
bnd
cmp
cmp
enter
push
in
sub
or
pop
and
daa
in
std
adc
sti
out
mov
loope
cltd
popl
mov
mov
sahf
jg
mov
inc
arpl
mov
inc
stc
sub
imul
vmovdqu
or
gs
push
jmp
stos
jle
cmp
push
xchg
dec
call
pushf
xchg
in
mov
push
and
ss
xor
add
jns
dec
cmp
and
sub
add
cwtl
mov
mov
out
loope
lds
or
test
test
aad
mov
lahf
fidivs
pop
es
sbb
push
or
or
jl
mov
mov
mov
jmp
fidivl
stc
push
xor
lret
les
sub
aam
cmp
add
mov
mov
inc
loope
loope,pt
test
inc
add
add
imul
fdivrl
movsl
addr16
pop
adc
xor
mov
cltd
test
mov
stos
jno
cmc
in
int3
rclb
sub
sahf
ljmp
repnz
fdivrs
hlt
fst
stos
in
or
iret
inc
das
mov
loop
movl
fxch
or
jp
mov
ret
mov
icebp
mov
outsl
repnz
loopne
xor
lret
ss
mov
aad
enter
xchg
stos
test
addl
adc
shl
push
jle
out
mov
add
jo
sbb
push
mov
dec
ret
iret
adc
dec
lret
jns
loope
push
jnp
clc
das
bound
insl
dec
add
add
pop
add
xchg
hlt
lahf
lods
and
mov
cmp
out
and
fnop
stos
rol
aaa
sbb
xchg
inc
roll
mov
sbb
dec
mov
xchg
sbbb
loopne
jecxz
call
mov
lret
mov
lret
mov
xor
or
jo
push
hlt
add
fldt
mov
lods
into
fs
shll
cmpsl
push
je
inc
adc
ss
dec
int3
pop
cld
jbe
test
or
lods
mov
addr16
enter
decl
adc
enter
jno
mov
sbb
aas
xor
subl
int3
cmp
call
mov
xchg
sub
iret
dec
mov
out
in
popf
rorl
inc
lret
xlat
jp
stos
out
out
xchg
sbb
enter
flds
xlat
lcall
adc
and
sub
xchg
repnz
or
outsl
leave
sarl
jecxz
jb
xor
imul
and
cmpsb
scas
sub
mov
sub
pop
inc
jecxz
add
insb
arpl
sub
push
mov
pop
aaa
inc
addr16
cmpsl
xchg
int3
mov
jge
inc
push
xor
stos
in
inc
jbe
push
xor
cmp
push
flds
push
aas
xchg
mov
divb
pushf
pop
nop
jp
push
rcrl
mov
jl
push
das
xchg
data16
mov
mov
jbe
rclb
jns
xchg
iret
hlt
aad
rol
jmp
mov
dec
adc
mov
sub
or
mov
daa
adc
lock
aaa
in
test
clc
int3
xchg
notl
or
ds
out
in
outsb
fnstsw
sub
sbb
xchg
sub
mov
fstps
mov
dec
sahf
lret
xchg
out
out
mov
ds
mov
cli
mov
xchg
imul
pop
sub
mov
sbb
adc
ret
mov
enter
mov
mov
test
scas
out
xchg
dec
addr16
out
fsub
sti
mov
xor
adcb
shll
shl
roll
mov
push
jb
xlat
sub
jp
lahf
inc
push
lods
ret
out
fst
out
add
ret
mov
lea
mov
sbb
cs
jo
shlb
lahf
js
movsl
lods
rclb
ret
fsubs
pop
andl
jl
mov
mov
jp
aam
cmpsl
adc
or
push
adc
je,pn
in
mov
or
mov
imulb
xchg
cmp
and
cld
lods
mov
push
push
je
dec
gs
je
aad
inc
cmpsl
xchg
into
dec
hlt
cmpsl
mov
int
lret
push
fnstenv
imul
mov
jns
out
lret
dec
and
jbe
pop
mov
icebp
popf
out
sbb
enter
lods
ja
mov
or
stos
pop
push
add
aas
mov
popa
int
fcmovb
mov
jb
jg
mov
inc
push
jno
sub
jbe
insl
push
push
jp
std
je,pt
enter
inc
push
mov
lret
or
xchg
fidivl
xchg
inc
nop
mov
cmp
loopne
push
sub
dec
in
fstps
push
std
mov
and
mov
fisubs
pop
pop
or
aam
mov
push
dec
jge
out
push
jnp
adc
daa
inc
dec
insb
call
inc
push
nop
or
cs
outsl
in
imul
out
sbb
dec
clc
aad
mov
jo
into
imul
insl
test
mov
cmp
xor
mov
and
xchg
or
jge
in
adc
gs
sub
push
outsl
outsl
sbb
orb
add
jmp
dec
push
test
es
mov
mov
call
dec
xor
call
xor
icebp
xchg
xor
or
das
mov
xchg
rclb
jecxz
push
cmp
aas
jbe
sti
test
pop
andl
adc
jp
daa
cmc
mov
imul
out
cmc
loop
add
repz
push
bnd
shll
push
stc
lods
iret
shrb
lret
dec
sub
aaa
insl
add
bound
xlat
mov
shll
push
xor
pop
mov
inc
jle
cli
add
nop
repnz
into
sbb
cmp
clc
adc
cmpl
jns
xor
std
mov
cmp
push
ret
or
pop
push
jmp
inc
sbb
lahf
pushf
lahf
push
xchg
inc
fcomp
inc
cmp
inc
push
mov
or
clc
enter
jno
mov
mov
push
push
inc
pop
outsb
les
daa
adc
nop
pop
fwait
push
adc
mov
jmp
push
pop
adc
repnz
dec
mov
leave
and
inc
hlt
add
js
add
rolb
in
jmp
aaa
mov
pop
mov
cmpsb
jg
mov
movsl
loope
and
mov
cmp
pop
xchg
and
pop
dec
repz
fsubl
js
mov
dec
hlt
xchg
and
sub
add
testl
shrl
mov
sbb
insl
pop
fs
icebp
das
fiadds
bound
adc
sbb
dec
nop
pusha
imul
inc
push
fsub
mov
addr16
mov
pusha
lds
xor
ficomps
sarb
mov
xor
hlt
inc
sbb
add
jo
popa
out
arpl
outsb
out
push
out
dec
repnz
adc
aaa
je
cmp
mov
lods
shll
add
in
pusha
sbb
dec
and
and
insl
xor
adc
test
mov
popf
xchg
mov
push
lea
rcll
mov
dec
repz
divb
xchg
and
cmpsl
out
imul
lahf
push
movsb
in
dec
into
cmp
add
js
stos
lret
lods
cmp
mov
xor
push
sbb
cmpsl
xor
dec
rclb
and
mov
shlb
adc
pop
scas
jae
inc
mov
xchg
outsl
shll
and
movsb
flds
add
xor
add
cmc
scas
call
fcomps
pop
pop
pop
adcl
in
mov
mov
cmp
push
push
or
test
push
mov
xor
aaa
mov
or
pop
adc
aas
jl
push
shrl
push
sbbl
sbb
cmp
bound
jecxz
pop
cmp
shrb
add
nop
rcrb
xchg
gs
ljmp
xchg
lcall
jp
in
in
clc
adc
sbb
jb
leave
inc
clts
lea
add
arpl
sbb
gs
das
mov
pop
cltd
mov
adc
aam
pushf
fildll
push
add
mov
fsubrs
jecxz
in
fs
cmpsl
add
cmp
outsb
inc
jmp
sahf
cli
addr16
xlat
adc
roll
or
mov
stos
sbb
in
mov
jne
leave
pop
cs
xchg
cwtl
mov
mov
lds
repnz
into
es
cmp
cmp
pop
repz
stos
mov
inc
sahf
push
inc
mov
ds
inc
and
push
push
dec
outsb
shlb
cmp
addr16
xor
pop
daa
popf
push
mov
jne
mov
xchg
sbb
lods
mov
test
or
xlat
jne
aam
fsubl
fnstcw
mov
xchg
aaa
pusha
sub
pop
pop
sbb
fnstcw
fsub
dec
cmp
imul
in
jbe
mov
mov
movsb
push
and
lret
daa
adc
aad
mov
adc
adc
or
cmp
jecxz
cwtl
push
jno
push
cmp
adc
and
test
dec
mov
jb
xchg
xor
aam
push
scas
jmp
loopne
cmp
push
les
push
ret
fildll
arpl
loop
or
push
sbb
xlat
decb
jbe
jb
sub
sbb
addr16
das
mov
add
scas
and
aad
and
testl
cmp
push
pop
imul
pop
ret
pop
scas
je
cmp
xchg
js
jno
lods
jo
test
cmpsb
xor
aam
popa
loopne
mov
push
xchg
add
aam
out
jecxz
xchg
push
jl
int3
pop
test
or
call
insl
mov
pop
mov
adc
jmp
mov
pop
fimuls
jg
fwait
stc
pop
xchg
icebp
in
inc
lcall
lcall
cmovg
aam
fadds
out
clc
dec
and
jmp
sub
decl
scas
cmpsb
out
push
aas
pop
cmp
push
sbb
fwait
js
pop
lret
pop
sbb
loop
addl
or
sub
sbb
ds
insl
inc
mov
cmpsl
cmpsl
push
dec
fdivrl
fldenv
clc
cld
les
lahf
je
imul
scas
ja
cld
ret
or
xchg
jb
adc
outsl
shl
mov
and
les
fists
icebp
jb
jecxz
and
push
mov
inc
es
addl
fdivrs
jo
hlt
jbe
sbb
dec
mov
jo
mov
mov
fisttpl
inc
pop
in
fadds
rcrb
jbe
rolb
cmp
mov
das
add
jnp
xchg
ds
das
mov
and
jecxz
in
mov
xchg
daa
test
inc
xchg
pusha
in
lret
je
mov
js
negl
and
mov
sbb
add
fisttpl
xlat
andl
adc
xorb
pop
arpl
add
std
mov
nop
insb
xor
mov
dec
cmp
mov
or
cmp
iret
test
fwait
xchg
clc
lret
mov
adc
scas
iret
cwtl
push
inc
dec
cli
inc
mov
add
cmp
sub
and
in
repz
loop
enter
testl
gs
adc
out
push
enter
and
pop
push
daa
sbb
and
ss
mov
add
imull
cmpsb
mov
dec
mov
test
jb
xor
cmpsl
push
and
test
adc
imul
xchg
stos
jns
sub
jge
std
push
ret
or
ja
xor
sub
outsb
xchg
add
iret
xor
xchg
shrd
fwait
push
dec
das
pop
mov
orl
lock
movsl
add
dec
dec
sarl
xchg
out
pushf
inc
out
ret
daa
add
stos
or
jecxz
js
hlt
cmpsb
cli
xchg
test
jg
imul
push
add
or
xchg
lods
ss
lret
fstpt
mov
ljmp
in
fstpt
lret
jmp
ret
and
dec
cmp
mov
aaa
jle
jg
or
repz
mov
jae
dec
dec
aam
movsl
xor
scas
inc
repz
in
xor
mov
mov
pop
or
inc
nop
xchg
inc
es
and
in
add
sub
jno
pop
and
xchg
mov
aad
sub
xchg
push
data16
testb
dec
fdivr
sbb
shll
mov
out
das
cmp
cmp
scas
push
rcll
or
in
sti
cmpsl
xchg
addr16
int
xchg
lret
inc
insb
in
outsb
and
repnz
adc
lods
cwtl
push
dec
and
sahf
repz
dec
ret
jae
xor
push
dec
xchg
sbb
and
movsb
outsb
or
cmp
adc
xchg
cs
cld
sbb
xor
mov
sbb
jbe
mov
lds
daa
mov
into
mov
movsl
lahf
sub
out
rorl
fnsave
enter
hlt
stos
outsb
sbb
cld
inc
mov
movb
jae
xorb
mov
and
push
aaa
in
cs
jecxz
pmaxub
test
dec
bound
clc
mov
cli
cmp
jp
jge
movsl
adc
sub
jl
test
out
jbe
xchg
jmp
push
mov
or
xor
mov
push
fwait
mov
in
pop
mov
or
ds
or
sub
fnstenv
jns
inc
je
ja
jo
or
je
icebp
push
stos
cs
outsb
je
cltd
outsl
mov
mov
cwtl
pop
ds
xchg
out
leave
rclb
pop
outsl
cwtl
dec
pop
rorl
pop
rclb
xchg
jmp
cmpsl
sbb
inc
adc
repnz
aad
add
gs
mov
lods
xchg
movsl
mov
inc
scas
cmpsb
xchg
and
out
jno
and
inc
xchg
in
push
inc
scas
cmp
shl
jns
lret
jmp
xchg
sahf
incl
hlt
xor
mov
pop
push
xchg
mov
int
inc
push
cmp
mov
jb
pop
pusha
add
insb
pop
sahf
mov
pop
das
dec
mov
sarb
outsb
cmp
and
das
lahf
mull
loopne
sub
shlb
scas
jmp
out
cli
xchg
push
fstpt
or
cmp
sahf
cmc
lea
xchg
inc
ds
mov
inc
mov
add
or
jle
iret
insb
jbe
sahf
cmp
loope
cmp
imul
ret
shrl
fcoml
jae
xchg
mov
out
pop
xchg
jmp
pop
mov
outsb
xchg
or
test
cmp
mov
imul
push
add
push
inc
insl
push
sub
cltd
mov
adc
insb
inc
std
cmpl
add
push
or
bound
xor
aam
into
mov
int
test
notb
mov
mov
xchg
aaa
dec
mov
sub
fwait
dec
jle
cmc
fiaddl
mov
cmp
icebp
jns
stos
cmp
lods
enter
xchg
xchg
inc
sahf
pop
pop
inc
mov
ret
ss
lret
dec
jg
jb
adc
mov
xlat
adc
and
lahf
sbb
jecxz
stc
cs
gs
loop
cmp
or
push
and
jp
or
pusha
inc
cmp
pop
jne
lret
xor
nop
ds
sbb
mov
lock
mov
fdivp
icebp
aam
sarl
mov
mov
xor
arpl
adc
roll
outsl
cmc
sbb
nop
pushl
inc
mov
mov
sbb
iret
mov
test
inc
cltd
fistl
xchg
cltd
ret
jl
data16
popf
push
addr16
mov
mov
test
int3
push
fcoms
push
aam
imul
shl
leave
insl
xor
mov
push
cmp
jmp
and
sbb
mov
mov
ss
mov
mov
aad
adc
jecxz
mov
add
mov
push
sub
jb
dec
mov
sbb
sub
bound
rorl
insb
addr16
xor
test
jne
fdivl
and
cltd
hlt
popf
scas
int3
jmp
push
and
ljmp
jle
iret
popf
and
mov
sarb
xor
movsb
sar
and
xor
mov
out
stos
and
test
mov
aas
aad
dec
aam
mov
or
fildll
add
jbe
insl
jo
pop
imulb
sbb
jp
arpl
cld
push
mov
jle
and
sbb
mov
mov
ds
std
xor
sbb
mov
lds
fstl
jae
adc
fcmovne
fdivl
cli
push
inc
out
lds
xchg
sbb
popf
sbb
lret
inc
mov
mov
insl
sbb
cmc
arpl
and
shl
les
push
sub
f2xm1
dec
sbb
mov
push
ss
mov
and
xlat
sbb
stos
adc
push
inc
iret
sub
or
sub
add
xchg
mov
mov
xchg
pop
pop
shlb
or
lret
add
mov
xchg
mov
loop
int
pop
icebp
cmpsl
out
cld
adcb
dec
or
pushf
roll
nop
cmpxchg
push
loopne
popa
test
jle
pusha
int3
pop
pop
lret
xor
inc
push
mov
das
cmp
push
roll
push
cmp
jbe
jl
insl
addr16
aad
push
xlat
and
cmp
push
mov
insb
movsb
out
sbb
cld
xor
inc
out
icebp
jecxz
cmp
lcall
and
in
outsb
jmp
mov
add
xchg
or
xchg
hlt
imulb
add
pop
das
cwtl
add
inc
ficoml
test
add
mov
cmp
vpmaxub
shll
push
xchg
popa
mov
push
dec
aam
aaa
mov
jae
dec
xlat
les
or
movsb
or
mull
repz
aaa
xor
dec
adc
add
aad
repz
aas
mov
lret
in
jmp
enter
test
popa
lea
mov
sbb
pushf
das
stc
aam
mov
fidivrs
nop
jg
xchg
inc
xor
pop
lods
dec
lock
push
pop
enter
sub
pop
cmc
bound
loope
hlt
sbb
std
mov
add
mov
rcll
lcall
xor
icebp
add
mov
mov
dec
rolb
push
adc
sbb
or
outsl
cmp
xor
mov
mov
dec
scas
pop
fucom
insl
in
test
xor
jno
sbb
ljmp
clc
aad
fimull
jno
out
test
mov
icebp
lcall
push
or
mov
and
cwtl
addr16
adc
ret
fcoml
fwait
nop
leave
add
loop
push
xor
xchg
mov
fwait
xor
add
cmp
std
lret
mov
mov
cld
imul
xor
adc
popa
hlt
sub
test
cmpsl
sbb
dec
sti
sti
insl
sbb
popf
sbb
dec
out
xorb
lahf
ds
inc
fbld
clc
shl
or
lret
push
es
pop
adc
push
adc
add
push
rorb
dec
sbb
iret
cmp
or
or
insb
add
or
mov
jbe
in
aaa
or
iret
fbstp
xor
fdivp
xor
shll
push
jne
scas
mov
and
inc
loop
mov
aaa
push
adc
push
and
movsl
int
mov
cmpsl
jnp
adc
xor
jo
int3
lahf
es
xchg
and
int3
adc
add
mov
push
add
shr
xchg
jmp
js
push
and
add
xor
add
out
out
adc
sti
fidivs
movsb
outsb
pop
sbb
push
jle
call
sub
sbb
std
mov
and
adc
mov
popf
push
test
xor
inc
pusha
mov
mov
jmp
out
jbe
pop
repnz
xor
pop
mov
dec
lahf
xchg
cmp
lods
bnd
or
fmuls
cmp
addr16
aad
sub
pop
cmp
movsb
test
ss
aad
mov
mov
in
les
xchg
mov
pop
xor
fistps
ja
add
mov
ret
aaa
enter
adc
pop
mov
roll
adc
inc
push
nop
push
xchg
mov
xor
lret
adc
imulb
sti
push
negb
inc
xor
jg
jge
fnstenv
push
mov
inc
shrb
mov
jle
pop
xchg
sbb
jg
and
pop
sub
or
fidivrl
sti
ljmp
add
xchg
pop
fcompl
pop
mov
test
lcall
lea
inc
push
push
cmp
imul
and
test
sar
test
fstps
cmp
jno
movl
insl
xorb
mov
cltd
daa
push
mov
dec
dec
mov
jo
insl
sub
adc
lods
mov
nop
dec
push
dec
mov
lds
sarb
mov
sub
adc
adc
imul
roll
and
add
mov
in
nop
negb
ss
scas
dec
pop
lods
xchg
xor
addl
or
pushf
ja
shll
js
push
bound
inc
and
es
add
dec
and
loope
inc
sbb
shlb
imul
lea
popa
inc
jbe
sahf
std
in
les
dec
push
js
enter
arpl
sbb
outsb
push
cs
push
mov
jge
add
add
mov
jp
rcll
shrb
movq
sbb
pusha
clc
dec
aas
aad
pop
push
push
pop
in
or
aas
sti
repnz
jo
lcall
xchg
cmp
cltd
cmp
jle
fnsave
sarl
mov
sbb
int3
cmp
fcomi
ds
ret
push
jl
ljmp
jb
xchg
test
addr16
pop
adc
xor
inc
imul
sub
push
inc
pop
notl
pop
and
inc
mov
mov
gs
pop
testl
in
sbb
cmpsl
shlb
xchg
adc
cmpsl
and
mov
sub
adc
pop
test
outsb
pop
arpl
stos
xor
sbb
jle
ljmp
flds
lret
xchg
aam
cld
sbb
add
popa
and
es
loopne
es
lcall
or
test
jae
sbb
adc
filds
sub
jmp
fwait
shlb
movsl
inc
daa
dec
movsl
rorl
pop
or
mov
test
lahf
fidivs
imul
int
sbb
out
out
xor
xchg
inc
xor
lods
xchg
icebp
lcall
bound
psubusw
jp
fs
inc
mov
incb
dec
or
pop
popa
shll
test
cmp
in
sbb
lcall
fstl
cli
inc
sbb
das
mov
cs
pop
mov
in
fs
ljmp
jne
sbb
lcall
mov
lret
test
xor
xchg
lcall
mov
shlb
fisubl
lock
cmpsb
add
mov
adc
js
inc
push
dec
rcrb
shrl
jge
cmp
fsubrl
inc
jne
sub
xlat
sbb
mov
ret
cmp
push
je
icebp
fwait
outsb
push
pushf
lcall
call
push
xor
call
sub
js
add
loop
ja
inc
sbb
ret
lret
sub
shrl
xchg
push
nop
pop
or
fildll
mov
iret
and
push
fnstenv
clc
xlat
in
test
test
xchg
pop
pop
lret
shll
iret
out
les
cmp
movb
pop
fstps
mov
sbb
push
mov
push
push
stos
iret
add
and
xchg
mov
andb
xchg
push
or
inc
scas
mov
push
in
xor
jle
sub
int
cmpsl
es
pop
dec
repnz
inc
mov
test
mov
inc
xchg
sbb
xchg
enter
cmp
sub
outsl
icebp
fnstenv
lret
in
mov
push
push
iret
emms
sarl
pop
inc
push
add
jmp
inc
push
fsubs
push
sbb
jle
icebp
add
or
pusha
pop
cwtl
test
cmp
in
jecxz,pn
sub
cwtl
fisubrl
mov
jg
xchg
in
cmp
jnp
in
add
das
and
shrl
inc
xor
mov
mov
es
ret
es
mov
mov
stos
movsl
sahf
mov
xlat
dec
jae
pop
bound
dec
test
daa
cmpsb
jae
mov
push
repnz
in
pusha
les
jne
xchg
xchg
pop
jge
imul
mov
pop
or
das
add
mov
or
xor
mov
lahf
adc
repz
outsl
pushw
jbe
mov
pushf
out
or
mov
mov
shl
jae
xchg
js
mov
mov
cmpsl
jle
insb
pop
jl
cli
dec
fstpt
mov
movsl
jecxz
cli
and
mov
push
jno
push
fisubl
imul
push
lock
add
cmpsl
pop
push
rcl
pop
push
add
and
dec
mov
incb
and
jnp
jmp
movsl
push
imul
push
cmp
andl
in
test
les
xor
push
fwait
pop
xor
xchg
popl
pop
mov
push
stos
repnz
xor
stos
and
out
popf
out
or
jl
fstpt
insb
cwtl
popa
and
jb
xor
aam
xor
inc
sbb
inc
es
mov
cmp
dec
mov
lods
inc
sbb
mov
bound
jne
jns
inc
mov
ficoms
push
sub
jle
arpl
pop
and
sub
out
add
insb
push
cmp
mov
repz
lock
fmuls
fistpl
xchg
test
mov
dec
push
dec
shl
clc
mov
loopne
mov
dec
xor
cli
mov
enter
cmp
outsb
ret
lret
rcll
mov
or
or
ss
shll
aas
cwtl
addl
mov
mov
fidivrl
das
inc
dec
or
xchg
clc
movsb
fadds
lea
jb
mov
xchg
fsts
push
add
adcb
ljmp
int3
aaa
sbb
mov
mov
std
shll
and
jns
push
icebp
inc
test
pop
leave
cmp
aaa
add
cmp
out
stc
fidivrs
stos
cwtl
push
jecxz
mov
or
mov
inc
and
fwait
into
jmp
push
sbb
cmp
test
cli
call
mov
pushf
cmp
and
mov
cmc
xor
lahf
aas
cs
xlat
ja
pop
cmpl
sbb
dec
inc
bound
int3
adc
or
lcall
outsb
test
cmp
pop
cmp
sub
lret
sbb
cwtl
scas
popf
xchg
sub
int
mov
aam
out
add
test
inc
pusha
jne
scas
inc
lock
jg,pn
in
xchg
mov
leave
ret
mov
xorl
int
sub
cmc
inc
xchg
inc
bnd
ljmp
pushf
jmp
lods
lret
inc
test
add
cmp
sbb
fistpl
cwtl
pop
xor
jge
and
loop
xor
mov
push
push
mov
lds
or
cmc
xchg
aaa
clc
push
insl
shrb
jb
mov
ret
stc
xchg
pop
and
pop
addr16
xchg
dec
mov
int3
xor
pop
sarb
push
sti
imul
test
mov
cmp
inc
sbb
test
ss
ljmp
idivb
xchg
sti
test
jmp
lods
sub
jbe
addr16
aam
addl
test
adcb
fdivrs
stos
add
cmc
sarb
mov
loop
fimuls
sbb
add
push
xchg
arpl
pop
movsl
mov
xchg
inc
cmc
inc
inc
sahf
aas
sub
addr16
mov
fisttps
pop
lcall
jb
pop
pusha
mov
mov
sbb
jne
fldenv
cld
xchg
sbbl
push
mov
mov
add
xor
jo
cli
jo
inc
push
aas
fwait
dec
jge
ljmp
lcall
mov
push
out
and
pop
inc
stos
fwait
js
sub
adc
and
test
test
jne
push
xchg
or
ds
sbb
pextrw
add
in
sbb
mov
xor
mov
test
mov
lret
inc
inc
inc
sbb
pushf
fimuls
addr16
push
rcll
inc
outsl
xor
es
adc
shrb
es
cmp
leave
xchg
iret
ret
mov
fs
data16
outsl
roll
mov
ret
inc
test
ss
shll
push
das
or
cmc
enter
mov
je
ds
mov
imul
adc
jl
mov
outsl
jge
ficompl
push
andl
mov
sub
xor
gs
movsl
pusha
nop
pushf
xchg
mov
mov
in
inc
or
sub
and
test
xchg
aas
dec
mov
jb
es
imul
in
mov
mov
jae
cmp
cmpsb
and
xchg
roll
push
cmp
movsb
add
loope
mov
outsb
jb
sbb
icebp
lods
jne
sub
das
shll
or
or
inc
push
sbb
inc
std
jp
mov
lret
inc
cmp
lret
jns
mov
pop
jnp
pusha
or
adc
inc
add
jg
pop
into
hlt
fdivrl
aam
lds
imul
js
popf
add
sub
dec
fsubr
jecxz
xchg
cltd
mov
movsl
stc
xchg
cmp
aaa
fcmove
pop
es
aas
push
pop
push
cli
push
xor
into
dec
push
adc
mov
je
xchg
xor
lfs
shll
sub
int
jecxz
jo
inc
add
dec
mov
es
testb
mov
xchg
pop
jmp
cmpb
loope
lret
scas
adc
cmp
sbb
mov
pop
push
in
ja
xchg
ret
add
xorl
sbb
into
aas
test
insl
dec
sti
jle
in
adc
imul
mov
into
or
or
pushl
mov
sbbl
in
shll
scas
inc
nop
push
add
mov
mov
add
shll
pop
cwtl
hlt
aam
cmp
xchg
ret
inc
pop
pushf
sub
dec
popa
sar
out
xchg
in
cs
adc
ret
push
mov
pop
adc
adc
aad
adc
xor
in
das
xchg
fstl
pop
sbb
adc
jl
pop
adc
dec
add
mov
xor
test
adc
div
jb
push
mov
xchg
daa
mov
and
adc
add
loopnew
test
repz
xchg
mov
adc
test
mov
nop
mov
xchg
imul
iret
ret
fldenv
mov
push
inc
outsb
cmc
sbb
push
pusha
sub
or
and
mov
inc
fadd
popf
xchg
pusha
pop
dec
dec
cmpsb
pop
sub
cmp
cmp
push
loop
add
jae
int3
ljmp
out
fdivrl
jl
jle
aad
jnp
inc
sti
push
cmpsb
mov
mov
arpl
and
push
or
mov
mov
inc
xor
and
clc
xor
push
in
stos
cmp
or
cs
push
push
push
cmc
ficoml
out
and
les
int3
mov
pop
xor
insl
jle
dec
hlt
lods
stc
std
or
ja
into
xchg
inc
popa
mov
pop
dec
daa
push
int
bound
sub
dec
sbb
loop
out
aad
mov
ret
lea
jnp
xor
or
adc
dec
or
adc
data16
ret
push
pushf
test
add
cltd
and
cmp
cltd
mov
push
rorb
fbld
xchg
pop
insl
xor
arpl
jbe
imull
xchg
jl
push
inc
jne
test
pop
inc
loopne
lcall
lods
fstpt
scas
pushf
and
mov
jns
ret
sub
adc
mov
xchg
mov
pop
sub
mov
add
aaa
scas
or
sbb
mov
out
lret
and
fs
ljmp
loopne
xor
jmp
ds
popf
inc
mov
add
sub
jo
lock
mov
subb
jle
inc
ficoml
push
stos
in
in
push
cmp
ljmp
stc
dec
inc
repz
popa
jge
mov
push
or
jecxz
mov
nop
sub
int
and
fwait
scas
mov
push
jno
mov
sub
shll
cmp
repnz
mov
lea
and
adc
lcall
scas
dec
movl
cli
push
xchg
jo
adc
popf
inc
xor
lds
lea
mov
aad
xchg
add
or
jl
movsb
in
push
push
ja
mov
adc
test
ljmp
push
data16
fdivrl
cwtl
in
add
cwtl
rcl
mov
cmp
in
push
in
mov
xchg
idivb
adc
push
pop
xchg
into
int3
adc
push
lcall
nop
mov
cmovp
mov
in
mov
xor
out
pushf
mov
add
sbb
pop
jp
mull
repnz
jo
mov
pushf
cwtl
je
jp
test
pop
sbb
stc
arpl
cld
hlt
aaa
or
dec
adc
cwtl
inc
imul
xchg
clc
inc
pushf
insb
adc
add
add
out
ljmp
pop
mov
nop
rolb
test
je
ret
inc
or
ss
mov
sahf
sbb
cmpsb
sti
mov
mov
or
notb
adc
push
cmpsb
test
cli
push
xchg
push
shll
pop
adc
xor
dec
out
scas
dec
jbe
lods
pop
xchg
push
fmuls
imul
cmpsl
cli
xchg
sbbl
frstor
repnz
gs
dec
icebp
jno
cmp
shll
cmp
add
mov
aad
mov
imul
mov
sub
imul
or
mov
int3
out
inc
or
mov
push
mov
cmpsl
inc
mov
dec
mov
sbb
xchg
cmpsb
xchg
mov
lret
xchg
aaa
lret
pop
imulb
idivl
es
add
orl
jecxz
push
dec
sub
stos
cmc
ret
or
mov
push
mov
das
mov
imul
pop
sub
lds
inc
icebp
rcll
dec
jl
inc
ret
cmpsb
daa
lods
pop
sbb
mov
mov
nop
sti
addb
mov
sbb
out
sub
mov
sahf
movq
push
clc
pop
jge
pop
push
je
icebp
sub
mov
cld
adc
lods
movsl
or
iret
pop
dec
and
mov
enter
movsl
icebp
xor
push
fdivrs
mov
lcallw
push
lcall
pushf
fstpl
in
mov
pop
mov
mov
stc
stos
mov
fadds
add
push
divl
push
aam
shrl
mov
sub
jp
decl
arpl
lcall
add
push
push
cltd
or
scas
shlb
insl
imul
mov
ds
mov
dec
push
lret
ret
add
inc
cltd
je
sarb
mov
int
or
jg
repnz
dec
stos
dec
add
jle
jbe
fcmove
mov
push
push
jo
jbe
loopne
mov
repnz
cmp
sub
movsb
mov
mov
mov
popa
jnp
pop
stc
xchg
fsincos
lods
xor
dec
pop
add
pop
addl
call
lret
cmp
xchg
lods
cmp
adc
imul
jg
lahf
push
xchg
fwait
outsb
call
pop
mov
es
jp
mov
mov
add
jno
push
push
dec
push
test
arpl
cli
hlt
dec
outsb
fldln2
inc
cmp
sub
shr
movsl
xlat
lea
xchg
xlat
add
movsl
into
fwait
mov
jp
push
mov
sub
push
lds
sbb
scas
mov
mov
jmp
and
fbld
cs
aam
sub
mov
test
push
xlat
jle
ja
cmp
mov
stos
cmp
mov
xor
dec
and
scas
cmp
dec
add
cmp
test
xor
adc
out
add
inc
cmpsb
imul
sub
cmp
sub
add
jno
icebp
cwtl
push
jge
jne
pop
gs
fs
fbstp
adc
dec
into
cwtl
xchg
jne
iret
sbb
sbb
push
jmp
stos
test
loop
in
mov
addr16
sti
xor
and
cld
sbb
lea
or
lea
sbb
pop
rolb
sbb
adc
sbb
xchg
mov
xchg
test
out
out
mov
pop
int
jmp
cmp
fwait
mov
or
mov
pop
dec
je
sub
lock
mov
shrl
imul
inc
jnp
repz
cli
clc
push
cli
std
das
call
adc
dec
unpckhps
mov
pop
xchg
mov
movsl
loope
push
movl
push
jae
and
jp
pop
sub
dec
jg,pn
sub
aas
push
and
mov
popa
and
das
dec
and
dec
mov
out
inc
inc
adc
pop
xchg
xchg
cmp
or
xor
inc
add
out
sub
adc
mov
sbb
lret
shrb
insb
add
int3
cwtl
pop
lahf
lods
cmc
pop
fsubp
pop
mov
and
adc
lea
enter
jbe
jns
sbb
bound
add
mov
outsb
or
or
fidivrl
ljmp
scas
popa
sub
sarl
xchg
movsl
lret
lods
dec
push
fwait
les
mov
xor
outsb
mov
mov
sub
mov
leave
xor
sbb
inc
add
sbbl
arpl
mov
xchg
dec
inc
enter
adc
fcmovnb
cld
jbe
or
ror
das
mul
daa
xchg
repnz
insb
xchg
adc
adc
das
push
xchg
or
sahf
pop
shrb
shl
fwait
ror
cmova
adcl
mov
and
mov
inc
and
dec
clc
in
and
sub
mov
in
sbb
or
cmpsl
mov
mov
mov
and
add
xchg
test
insl
test
lods
inc
inc
out
sub
imul
pop
push
cli
enter
out
ret
shll
lret
out
pop
mov
and
cmp
mov
rclb
daa
pop
into
jmp
lods
add
adc
out
fdivl
mov
cmp
mov
scas
fucom
enter
add
cwtl
and
mov
je
sub
jo
xchg
jmp
shl
into
mov
xchg
lahf
add
pop
or
adc
rolb
fbld
leave
mov
es
mov
add
cmp
call
adc
cmc
stc
sub
adc
loopne
inc
add
and
lods
adcb
cmp
jp
cmpsl
call
mov
mov
jnp
insb
jbe
pop
and
rorl
aad
and
in
ficoml
inc
pushf
jge
nop
in
inc
xchg
add
xchg
mov
jmp
repz
or
pop
cmp
lret
lds
imul
inc
rcr
add
in
pop
outsl
stos
jnp
pop
pop
xchg
test
push
subl
inc
mov
pop
pop
fistps
leave
cltd
pop
adc
dec
and
je
lods
and
movsb
cmp
sbb
lahf
stos
pop
dec
mov
jp
mov
inc
mov
dec
xchg
hlt
xor
jecxz
or
mov
fsubl
fdivrp
ror
sahf
pop
cmpb
mov
sub
inc
fbstp
jp
dec
cmp
mov
arpl
mulb
mov
repz
xchg
dec
ret
jp
mov
daa
stc
inc
pop
dec
scas
dec
sbb
cmpsl
decl
push
iret
fdivp
xchg
movsb
ss
xlat
add
call
sub
jecxz
int3
dec
sub
mov
sbbl
ret
sub
xor
push
sbb
lret
pop
jb
les
jmp
cmp
out
daa
inc
sub
lds
andb
adc
outsl
addr16
xchg
call
sbb
out
cwtl
mov
mov
pop
adc
rcrb
icebp
mov
fnstcw
ds
test
popa
fs
scas
inc
shr
movsl
rorb
pop
pop
das
adc
les
jo
cs
and
inc
xchg
push
mov
loope
mov
int
mov
jae
mov
test
xchg
push
loopne
int3
mov
inc
cmp
out
xchg
ficompl
jmp
mov
ljmp
or
imul
fidivl
fildll
xchg
out
loopne
mov
jp
inc
addr16
xlat
xor
sar
out
loopne
adc
push
mov
or
aaa
pusha
sub
jb
ljmp
sahf
pushf
mov
popa
pop
ja
mov
pop
int3
gs
jnp
adc
sub
lods
sbb
adc
xchg
lods
xor
sbb
xlat
dec
in
sbb
pop
into
hlt
cmpsb
add
stos
pop
add
and
lahf
sbbb
dec
jne
cmpsb
pushf
inc
cmc
es
in
cmp
xor
fadds
stos
cli
stos
not
xchg
loopne
xor
out
into
dec
test
sub
xchg
ja
cmp
push
pop
add
cmpsl
sti
or
imul
mov
jo
mov
rolb
push
mov
push
fidivrl
enter
stc
mov
mov
adc
bnd
xchg
and
xor
xor
ret
stc
dec
mov
imul
pop
and
stos
mov
sahf
jns
rclb
fistps
push
mov
mov
cmp
lahf
roll
lcall
in
loop
adc
mov
jp
pushl
scas
mov
int3
jge
popa
xor
movsb
sarb
dec
into
iret
or
test
stos
je
data16
inc
arpl
arpl
xchg
in
loop
cmp
lret
enter
push
dec
mov
push
push
cmpsl
movq
test
and
cmpsb
ret
inc
arpl
cld
xorb
dec
mov
shrl
inc
lahf
hlt
xchg
xor
clc
and
pop
mov
test
mov
sarb
loopne
fwait
shl
dec
xchg
and
lahf
sbb
jge
sub
js
xor
cltd
mov
outsb
sahf
add
or
daa
push
push
lcall
mov
fcoml
ret
xchg
cltd
data16
mov
outsb
cmc
sbb
les
inc
xor
and
stos
outsl
cs
mov
and
cmc
push
add
nop
sub
or
cltd
movb
cmp
add
es
xchg
sbbb
jne
xchg
jp
mov
in
mov
sbb
sbb
xchg
movsl
mov
lds
push
adc
sbb
pop
ljmp
jge
inc
xchg
dec
jge
push
xlat
fnstsw
jno
mov
aad
lods
or
je
or
lock
mov
cli
lret
bound
out
push
sbb
test
sbb
lret
mov
out
lds
cmpsl
cmc
ret
rolb
or
cmp
mov
inc
xor
outsb
popa
stc
lret
scas
movsl
jb
lea
cmc
xor
mov
mov
mov
xchg
std
cmpl
insb
mov
sbb
inc
ja
stos
aam
pop
push
shll
mov
daa
add
dec
movsb
fsubp
fwait
cld
or
stos
xchg
dec
xchg
mov
aam
movsb
or
mov
xchg
jge
sbb
adc
pop
stos
inc
scas
sbb
inc
int
idiv
lds
dec
xchg
jp
inc
gs
xor
xor
inc
fstps
call
mov
jns
test
stc
cli
jo
dec
cwtl
sub
mov
xchg
enter
add
jp
icebp
dec
push
call
cmpsl
mov
gs
xchg
push
push
adc
shrb
lods
out
xlat
in
out
jecxz
mov
pop
jmp
das
mov
dec
jge
mov
pop
fprem
lret
jp
mov
pop
or
xor
mov
bound
mov
mov
push
inc
fistl
cltd
mov
cli
mov
adcl
sbb
push
aad
push
loopne
ds
mov
and
dec
lea
rorl
inc
mov
repnz
and
mov
mov
mov
jp
in
mov
xchg
mov
lret
outsl
or
ret
xchg
sbb
hlt
aas
mov
mov
mov
jp
scas
mov
insl
mov
pop
inc
mov
rorb
mov
stos
ja
cmc
add
imul
jno
les
xchg
ret
pushw
pop
mov
push
sub
ret
lret
jecxz
dec
push
out
in
push
aad
cmp
rcl
lock
das
jmp
popa
mov
gs
sub
stc
je
add
data16
lahf
es
cmp
jg
fdivrl
nop
subl
sbb
fdivrp
mov
and
loopne
mov
and
nop
mov
subl
push
dec
jns
rcrl
subb
mov
scas
push
clc
orb
iret
mov
scas
mov
int
sbb
cmp
movsl
xchg
inc
repz
bound
jle,pt
mov
aad
or
pop
or
jne
roll
xchg
or
xlat
lahf
lea
sbb
jle
call
dec
jo
mov
ret
xchg
xor
push
data16
daa
mov
jne
dec
dec
call
pop
push
int
popa
mov
push
and
inc
mov
sbb
repz
mul
push
and
inc
add
mov
xchg
mov
movsl
in
pop
sti
push
cltd
adc
jecxz
sti
add
sbb
dec
lcall
pusha
mov
push
stos
inc
pop
fimull
xor
cltd
std
out
outsl
xor
pop
pushf
lret
ja
push
lret
adc
notl
jae
fucomp
mov
lds
sbb
repnz
cmpb
mov
outsl
adcb
sub
loope
push
mov
decl
in
jl
loopne
cmpsb
das
xchg
xchg
pop
mov
das
xchg
lds
jbe
icebp
cli
xor
add
jmp
cld
aaa
aas
sbb
adc
bound
dec
leave
pop
jbe
sub
ljmp
loopne
lret
pop
daa
mov
rcl
mov
pop
jae
pop
add
stc
dec
jmp
mov
stc
adc
add
mov
jbe
sbb
mov
jb
mov
push
adc
mov
and
testl
sbb
pop
icebp
aaa
into
loopne
mov
cld
lock
mov
mov
jo
pop
jnp
scas
mov
nop
insl
xchg
subb
ss
push
push
xor
int
pop
mov
or
testb
adc
test
cld
sub
call
in
mov
cmc
repz
in
je
mov
pusha
mov
ja
orl
sbb
mov
mov
hlt
xchg
mov
fisubrl
cmp
inc
mov
add
inc
out
or
dec
sbb
cmp
insl
cmp
es
lret
xchg
leave
repnz
in
out
sub
sbbb
dec
mov
jge
dec
cltd
cmp
popa
shll
dec
push
pop
jmp
lea
or
test
inc
jo
dec
je
dec
outsb
xor
cltd
inc
xchg
and
sub
jae
jnp
imul
into
testl
lds
mov
push
push
inc
or
shrb
int3
stos
mov
jnp
or
xchg
mov
jo
leave
push
push
sti
in
pop
mov
xor
divb
mov
fdivrp
mov
xlat
daa
fisubrs
inc
and
in
push
scas
sub
cmp
loope
sub
pop
push
or
andl
sub
xchg
pmuludq
movsb
pop
or
es
mov
fldt
mov
fwait
test
ret
out
inc
and
mul
out
call
aad
sbb
leave
jo
rcr
setg
mov
or
fildl
mov
in
loope
cmp
movsb
testl
clc
cmp
sub
xchg
xchg
mov
xchg
xor
mov
pushf
cmp
xorl
pop
and
gs
out
stos
into
jecxz
jmp
js
or
add
and
daa
jl
shlb
jns
repz
xor
ret
imul
lods
pop
or
mov
addr16
stos
mov
push
and
xchg
mul
add
adc
ja
mov
add
jmp
pop
lds
cmp
xor
xchg
push
aam
mov
lret
movsb
rcrl
jp
repnz
sbb
sbb
mov
popa
test
int
xchg
test
jbe
xchg
and
jg
jp
fxch
sub
out
mov
xchg
cmp
sbb
lds
lock
pop
cli
jbe
push
das
pop
inc
movsb
push
fdivrl
jp
sbb
push
inc
out
stos
fisubl
push
adc
je
dec
push
ds
pushf
cmp
nop
nop
xchg
divl
add
inc
lret
jns
mov
fldl
sub
arpl
pusha
xchg
arpl
and
movsb
std
mov
stos
mov
or
and
add
popa
mov
fbld
das
int3
xchg
in
or
loop
adc
mov
and
lods
lds
sbb
test
pop
into
rcll
sub
ss
sar
add
dec
and
stos
dec
lods
sbb
rclb
imul
decb
and
aam
mov
imul
es
add
ljmp
imulb
mov
mov
mov
cmc
mov
xchg
dec
sub
pop
test
sub
jp
daa
mov
mov
das
les
movb
jb
mov
subl
cltd
pop
orl
pushf
mov
inc
fsubrs
adc
pop
inc
sub
sbb
adc
inc
loope
fsubl
test
dec
inc
mov
and
inc
push
xchg
xchg
andl
lahf
xor
ja
notb
cld
lcall
out
aad
xchg
or
mov
mov
mov
add
cmp
inc
jecxz
dec
xchg
fwait
into
int3
jne
mov
ret
add
int
loope
add
dec
and
cmp
mov
test
mov
out
in
fcmovb
cltd
dec
pop
inc
stos
mov
mov
addb
jge
mov
enter
leave
enter
repz
lahf
cld
mov
fstpl
push
and
movb
mov
mulb
jecxz
out
sub
fcmove
in
inc
mov
leave
dec
mov
mov
push
add
mov
mov
arpl
mov
movsl
add
inc
je
iret
add
imul
test
sub
add
push
mov
idivb
mov
scas
sbb
call
rcl
inc
mov
outsb
dec
inc
addl
sbb
cmpsb
mov
mov
fdiv
popa
dec
pop
test
out
popf
mov
int
mov
mov
mov
test
lcall
rcl
adc
fstpt
jo
mov
jecxz
push
mov
sub
les
cmp
add
add
in
jp
test
push
fwait
in
xchg
xor
int3
incb
daa
pusha
push
pop
or
stos
mov
push
sub
stos
jns
jbe
pop
and
test
push
jo
xchg
push
in
jecxz
popa
cmp
je
xchg
popf
mov
push
inc
mov
andb
inc
dec
adc
repz
mov
adc
sbb
mov
and
cmpsb
pop
inc
or
fistpl
cmp
sar
imul
into
addl
lcall
mov
fbstp
push
dec
fimuls
pop
int3
add
sub
outsl
xchg
add
shlb
push
shrb
mov
shll
cltd
adc
fwait
jb
cmpsb
jae
enter
and
add
sub
pop
andb
mov
push
pusha
ret
hlt
mov
jmp
test
fists
fildl
push
and
jnp
inc
shll
imulb
adc
daa
ljmp
push
repnz
mov
pop
jge
pop
cltd
sahf
xchg
cli
xchg
jl
movsb
imul
bound
sub
in
pusha
push
cmc
bswap
aam
xchg
sbb
paddsb
lock
jnp
mov
fisttpll
les
stos
sub
lret
pop
jmp
ds
inc
xor
in
dec
add
dec
pop
cwtl
jge
ss
mov
mov
shl
addl
push
in
outsl
or
jnp
adc
jbe
test
in
push
mov
fcomps
adc
adc
cmp
sub
fcoml
test
jecxz
and
cmp
rcrb
outsb
clc
btcl
cmp
lahf
fldcw
outsl
mov
movsb
lcall
dec
sbbl
mov
shlb
or
int3
lahf
xor
or
sub
pop
bnd
mov
xor
jp
fisubrs
xchg
rcll
inc
loope
and
or
xchg
sbb
in
sbb
mov
icebp
loopne
adc
cmp
mov
mov
sub
push
fidivs
adc
mov
pop
lock
fidivs
out
pop
das
lahf
push
xchg
mov
mov
mov
push
outsb
push
xor
mov
bound
jmp
mov
addr16
add
pushf
xlat
ja
or
jecxz
push
and
insl
jge
cmp
lcall
jb
sub
push
and
add
movsl
xchg
loop
jg
mov
adc
dec
into
jns
lret
stc
jg
loopne
push
test
insl
push
into
out
adc
js
cli
adc
jg
jo
jge
xchg
into
sti
xchg
add
das
nop
lahf
loope
sub
xchg
loope
shr
pop
ret
and
mov
jbe
xchg
sbb
shl
dec
jle
add
pop
call
or
in
push
push
and
rorl
xor
mov
mov
cmp
repz
jno
lret
std
inc
call
das
mov
dec
mov
and
push
mov
imul
fsubl
xor
cmpsb
iret
pop
xor
mov
mov
cmpsl
and
repz
cwtl
mov
adc
xor
mov
les
push
fdivrl
or
jmp
fistl
pop
fisttpll
repz
subl
dec
jne
xlat
pushf
sbb
js
rcrl
pop
ja
cmp
rcrb
xchg
sbb
and
mov
stc
push
test
sbb
pusha
or
adc
or
push
mov
popa
in
mov
add
rcrb
bound
xor
pop
xchg
adc
cmpb
mov
and
dec
data16
adc
stos
sub
sbb
adc
ficomps
in
jne
or
push
repnz
add
push
sub
fwait
sub
xor
cmp
cmpsl
test
iret
pop
mov
mov
jg
mov
xor
cld
sub
sub
std
push
fldl
mov
adc
jo
xor
mov
out
xchg
or
xor
xor
inc
mov
push
pop
sarl
iret
out
jne
int3
adc
fs
mov
daa
sub
jmp
inc
adc
sbb
jns
sbb
call
outsl
mov
inc
getsec
mov
rol
cmp
loope
push
in
icebp
xchg
ljmp
inc
inc
adcb
sbb
ljmp
cmpsl
dec
gs
sbb
fidivs
add
mov
cmp
scas
dec
adc
dec
cmpsb
cmc
adc
nop
test
xchg
dec
mov
stos
sub
add
jno
pop
sub
mov
jmp
cs
rolb
dec
ja
mov
aas
ja
and
aaa
push
pop
xor
and
mov
pop
xchg
jno
xorl
in
repz
inc
fnsave
push
sti
pop
xor
jle
adc
stos
cmpb
cmp
std
je
pop
push
dec
daa
mov
jecxz
inc
xchg
sahf
int3
xchg
outsb
jne
out
mov
gs
xchg
xor
test
cmpsb
dec
sbb
gs
sub
lods
xor
push
out
dec
xor
movsb
xlat
pop
movsl
dec
inc
enter
imul
test
mov
sbb
push
lahf
sbb
roll
ds
xchg
push
inc
pop
and
bound
xchg
movsl
add
mov
jmp
add
pop
movsl
pop
jae
cs
in
inc
pop
mov
xchg
mov
push
orl
xorb
push
or
in
dec
fs
add
sub
rcr
imulb
xor
or
jno
rorl
jae
jle
fimull
and
mov
leave
add
dec
inc
sgdtl
fbld
stc
test
out
into
mov
fisubrl
js
mov
push
and
mov
icebp
iret
mov
movsl
and
push
lods
jl
cmp
push
add
std
adc
into
cmp
dec
jo
mov
and
jge
test
xchg
push
gs
insb
cwtl
inc
loope
adc
dec
inc
cmp
ja
and
lds
lods
inc
adc
sbb
cmp
cmp
fnstsw
test
mov
cmp
test
ffree
es
scas
pop
xchg
add
cmp
xchg
negl
je
sbb
addr16
mov
xor
pop
repnz
cltd
jae
fstl
cmc
les
mov
cmp
adc
imulb
bound
xchg
cmp
xchg
insl
daa
sbb
xchg
gs
test
sahf
cmpsb
xchg
insb
pop
inc
cmp
lret
test
sbb
mov
aaa
outsb
push
andb
insl
lret
orb
mov
ret
mov
xor
enter
xchg
push
xor
push
out
loope
into
dec
push
fidivl
pop
mov
or
dec
xor
out
mov
push
fisttpll
clc
pop
adc
push
push
mov
inc
enter
push
sbb
xor
xchg
cs
sub
mov
test
int
pop
mov
sbb
into
adc
fisubs
pop
rcrb
and
insb
mov
sarl
fdivs
iret
inc
inc
jmp
and
cs
push
jmp
divb
mov
in
pop
xor
push
fmull
add
jns
je
inc
jae
add
push
jl,pt
jbe
shlb
pop
cmpsl
mov
jg
sbb
cmp
shrl
testl
aad
fisubs
iret
out
lret
enter
imul
xor
dec
push
mov
jo
xor
mov
mov
fs
mov
shld
or
xorl
xchg
jne,pn
sbb
mov
negb
inc
push
xchg
popf
incl
scas
push
adc
jo
sub
mov
xchg
stos
fbld
dec
or
xor
inc
shll
arpl
mov
testl
aad
mov
subb
arpl
pop
mov
adc
das
iret
jnp
stos
pop
pop
push
dec
shll
roll
out
sbb
outsl
and
fnstsw
mov
jb
pop
mov
xchg
sbb
pop
fsubp
stc
call
xchg
ret
and
add
jge
orb
ja
cmpsl
sti
arpl
popa
lcall
jns
jne
fstpt
mov
cli
jp
cmc
cmp
xchg
fs
push
push
lock
push
fisubl
imul
pop
in
cmp
add
aas
dec
mov
repz
test
sub
jg
add
mov
sbb
int
inc
xlat
cmp
or
stos
je
cltd
andl
dec
adc
dec
pop
dec
jnp
lds
jge
xor
mov
push
sub
scas
adc
fisubrs
push
mov
daa
bound
int
nop
sub
adc
cmp
lcall
mov
cwtl
rolb
repnz
ds
pusha
mov
push
mov
add
out
add
iret
ds
aas
or
cmp
push
icebp
mov
pop
mov
mov
add
mov
add
cmp
lods
dec
lret
rol
jecxz
aaa
xlat
cmp
push
pop
cmp
rclb
notl
test
sti
cld
leave
aaa
adc
or
popf
aad
iret
divl
enter
int
jb
dec
jge
std
pop
jo
test
cmp
and
jge
xor
mov
push
sbb
or
sbb
jle
imul
sub
into
and
xor
pop
inc
sti
inc
testl
jmp
ja
rorb
mov
sbb
jmp
xchg
inc
rcll
jbe
sbbb
push
xchg
xchg
je
jmp
add
push
sti
mov
dec
ss
mov
cld
int
xchg
imull
bound
ljmp
and
std
movsb
sub
xchg
sahf
cli
add
ds
cmp
cmpsb
enter
or
jnp
cmp
push
adcb
icebp
dec
mov
daa
add
push
mov
out
scas
scas
xchg
adc
inc
cmp
pop
lock
enter
out
or
sbb
mov
mov
lea
arpl
pop
dec
sbb
or
or
fldl
dec
and
je
and
pop
xchg
lods
mov
test
mul
in
icebp
mov
push
sub
dec
insl
push
iret
fsubs
jle
pusha
repnz
push
cs
xor
mov
cmp
mov
pop
andl
js
subb
movsl
arpl
jp
xchg
test
js
aaa
pop
mov
in
leave
movsb
iret
xor
xchg
popf
shl
mov
dec
mov
jno
rclb
dec
out
out
sbb
dec
arpl
inc
xchg
in
cmpsb
outsl
sarb
add
sub
jnp
pop
lea
pop
jle
cmc
call
mov
xor
aad
aam
jmp
popf
sub
cmc
cli
dec
ja
out
dec
rol
mov
pop
fisttpll
adc
mov
dec
outsb
popf
fwait
adc
pushaw
rolb
mov
inc
xchg
loop
je
jl
mov
cmp
cwtl
pop
out
mul
fwait
add
sub
mov
mov
vandps
dec
and
xchg
mov
xor
das
in
rcrb
dec
fiadds
push
xlat
cmp
sar
mov
jg
ja
xchg
aam
cmp
movsl
stos
dec
push
push
leave
xchg
mov
cmpsb
push
and
adc
push
in
jbe
mov
mull
popf
out
pop
dec
mov
adc
inc
cmpl
shll
aam
insb
mov
adc
das
fcoml
push
cmpl
dec
sbb
movsb
ret
imul
cmpsl
jns
dec
adc
sub
pop
mov
mov
out
shrb
movsl
insl
popa
mov
mov
xchg
test
xor
dec
xchg
push
jae
je
push
mov
outsl
mov
or
aam
mov
or
idivl
arpl
xchg
arpl
sub
or
popf
sbb
movsb
int3
lds
jbe
mov
aam
sbb
mov
loopne
in
jge
add
mov
jp
icebp
insl
stc
sbb
dec
fsts
xor
stos
in
sahf
jo
movsb
aam
mov
xchg
dec
mov
sbb
inc
psubusw
or
mov
outsb
mov
jmp
in
inc
sbb
push
pusha
mov
pop
repz
xor
and
sub
fs
adc
pop
and
shl
sub
outsb
or
or
add
sub
mov
xor
jb
mov
or
out
sub
mov
pop
mov
clc
aad
push
jle
pushl
jno
out
push
mov
movsl
mov
jp
out
test
insb
push
pop
out
jno
pop
mov
add
inc
fwait
mov
fimull
push
pop
jne
cmp
adc
mov
adcb
jl
lock
jmp
cmp
or
pushf
xor
cmpsl
lea
mov
push
pop
imul
xchg
mov
xchg
repz
imul
cmp
fadd
xor
out
push
xor
push
xchg
pop
clc
fidivs
add
je
lods
in
pop
add
fbstp
jno
jnp
in
sub
pop
jbe
add
xchg
les
push
call
pop
ja
pop
js
cmp
xchg
pop
sub
sub
inc
nop
dec
sbb
outsb
add
sub
push
push
dec
lea
sbb
dec
mov
jne
insl
push
xchg
divb
or
fstps
cltd
cmp
inc
jmp
aaa
cmp
inc
cs
add
sub
mov
ret
out
mov
push
out
mov
mov
mov
ret
mov
push
xchg
push
fcomi
shrb
pusha
mov
inc
push
add
xor
popf
fdivrl
cmpsb
mov
sub
mov
mov
icebp
outsb
jle
scas
insl
insb
dec
fisttpll
push
das
and
and
icebp
mov
inc
mov
xor
or
cmc
jbe
jno
inc
inc
jecxz
dec
ret
notb
loopne
mov
fsub
out
lcall
jg
std
mov
xorl
rcr
sub
or
adc
arpl
roll
jmp
mov
sub
fnstenv
jbe
xlat
popf
inc
push
mov
dec
inc
sub
and
adc
dec
outsl
insl
insl
push
cmc
jns
mov
jg
mov
jle
push
jno
out
xchg
movsb
lock
ss
and
movsb
repz
subl
cld
stc
test
push
shl
pusha
cmc
cmp
in
adcb
into
mov
pusha
add
xor
mov
mov
jne
cs
sbb
ljmp
outsl
fs
rcll
xor
and
jg
dec
std
aam
iret
jo
lods
ljmp
pop
jmp
mov
paddw
mov
pop
lcall
mov
mov
adcl
cmp
sub
dec
sub
or
and
mov
mov
jg
pusha
ds
jp
lcall
ret
pop
fbld
jbe
push
cmc
mov
mov
test
sub
push
roll
jae
jb
cld
xchg
mov
mov
lret
sub
insb
cmc
pop
inc
jecxz
addr16
mov
in
mov
xchg
insb
lods
cld
xchg
into
out
nop
mov
rorl
nop
hlt
imul
aam
lcall
stc
movsb
lods
cwtl
xor
inc
pop
add
push
add
pop
sub
in
jno
loopne
fwait
lcall
sub
insb
cmp
cs
ljmp
adc
adc
out
mov
jbe
clc
cmc
jbe
inc
stc
lahf
ljmp
js
hlt
sarb
aam
xor
or
stc
aad
stos
jecxz
push
cmpsl
js
adcb
test
stos
imul
mov
rcrb
jl
sbb
daa
or
xchg
in
adc
pop
pop
jmp
mov
add
in
es
int
add
add
inc
out
imul
scas
xor
ret
pop
xor
fldt
cltd
jg
fsts
movsb
in
push
dec
mov
pop
mov
les
lods
insl
push
sub
scas
lahf
cmp
xchg
loop
fldt
mov
sbb
inc
sahf
scas
jo
mov
add
jmp
or
lea
negb
pop
sub
add
enter
andb
adc
clc
cmpsb
jmp
cwtl
mov
clc
lea
rcll
ret
dec
sub
movsl
push
sub
dec
out
sahf
jl
mov
dec
pop
aam
jle
adc
ja
cld
inc
adc
popa
mov
and
mov
cmpsb
and
jno
add
in
mov
cmp
mov
push
jle
add
roll
test
mov
sbb
push
sub
mov
add
jbe
xchg
loope
and
in
add
push
movsb
scas
mov
pop
push
or
jl
out
pop
jecxz
mov
fcomps
push
or
mov
sbb
jae
xor
movsl
std
pop
lock
fsincos
fwait
dec
jp
push
mov
push
in
mov
testb
std
aad
mov
sub
lea
daa
push
jmp
pop
dec
jne
outsb
push
pop
aam
arpl
test
nop
sbb
fdivs
inc
mov
clc
mov
int
push
sub
mov
fld
mov
clc
jp
out
or
adc
mov
sub
out
addb
call
jp
add
pop
movsb
adc
mov
jns
push
jmp
mov
and
dec
stos
arpl
push
jp
div
dec
and
faddl
mov
gs
insb
cmp
insl
cmpsb
rolb
ds
cmpsl
dec
cmpb
shll
or
or
cmc
xchg
pusha
imul
aam
aam
pusha
out
scas
out
mov
jo
cli
mov
xchg
aaa
jmp
pusha
int3
rorl
gs
lods
mov
lret
movsl
dec
or
add
arpl
xchg
jp
and
arpl
jge
filds
mov
out
lret
xadd
into
frstor
into
ljmp
xchg
inc
stos
dec
es
repnz
test
mov
pushf
test
mov
out
iret
xchg
nop
sbb
gs
mov
push
inc
sbb
or
or
test
sbb
inc
pop
loop
xlat
out
push
lock
cmp
sarb
shll
rclb
push
sub
cli
push
test
mov
lea
sub
inc
jg
or
add
and
xchg
sahf
rorl
in
in
mov
or
das
lahf
mov
imul
ret
sub
inc
test
add
loope
loope
pop
push
cld
ja
add
sub
leave
or
in
je
mov
out
testl
loopne
sub
sahf
pop
mov
jae
loopne
bound
pop
or
shlb
xor
inc
mov
or
push
xchg
adc
sbb
sbb
aad
add
xor
pusha
pop
xor
data16
mov
out
lret
inc
outsl
or
lea
sbb
jmp
fdivr
jmp
jge
daa
sub
sbb
xchg
dec
js
push
jg
rcrb
sti
and
nop
push
rolb
clc
mov
adc
or
push
cmc
pop
repz
inc
jb
mov
roll
sub
cwtl
sub
cmc
popf
test
sbb
inc
iret
cmp
hlt
rcrl
les
mov
rcrl
mov
clc
daa
fnsave
cs
add
sbb
test
int3
dec
lea
push
fidivl
mov
rorb
cmp
push
int3
sub
adc
add
sub
shlb
add
sbb
push
xchg
js
dec
lcall
dec
sbb
inc
sub
scas
shll
fmull
inc
mov
pop
inc
call
or
xlat
xchg
pop
adc
or
xchg
test
test
cmp
jne
dec
jmp
push
mov
stos
mov
sub
sub
cwtl
dec
lea
ret
jae
add
scas
popa
arpl
sub
popa
gs
aaa
aaa
cmp
lcall
mov
dec
push
or
lock
fwait
imul
imul
and
and
inc
pushf
cmpsl
call
jl
add
xchg
push
dec
pop
cmpsb
and
pop
rcll
mov
adc
aas
sahf
shr
adc
mov
cmp
sbb
stos
pop
popa
pop
imulb
push
xchg
push
xchg
pop
mov
xchg
adc
sbb
call
push
jno
mov
je
jb
cmc
adc
repnz
sahf
sub
dec
mov
push
pop
jb
jo
mov
fiaddl
es
cli
hlt
imul
in
ss
clc
popa
popa
dec
sbb
cld
push
or
out
xchg
sub
mov
sbbb
sbb
stc
jmp
cmc
in
or
push
inc
dec
xchg
adc
mov
mov
push
push
adc
and
cltd
fists
shll
es
mov
jno
xchg
aaa
cmpsb
movsl
jp
scas
cmp
xchg
lea
lea
mov
and
out
sub
pop
aas
cmp
bound
pinsrw
pop
icebp
rcll
jecxz
rorb
push
imul
and
dec
mov
adc
imul
sub
je
sub
xchg
addr16
sub
mul
sbb
mov
sbb
sbb
pop
adc
mov
fstpt
dec
or
xor
ss
enter
xor
test
cmp
data16
scas
aam
sbbl
cli
fdivl
mov
mov
sbb
and
cmp
dec
push
dec
decb
inc
popf
mov
pop
mov
sbb
dec
inc
lea
mov
cmp
movsb
xor
fidivrl
xchg
inc
sbb
mov
insl
sbb
mov
loop
xchg
popl
mov
cmpsb
mov
adc
lcallw
in
mov
jg
push
fwait
jmp
and
scas
cmp
jne
jo
dec
lock
ret
cs
nop
adc
repz
fninit
and
sub
sub
pop
ficomps
dec
push
shrl
stos
sbb
adc
pop
xchg
push
loop
ret
and
dec
icebp
pop
in
fidivs
movb
jb
jg
or
sub
add
test
pop
scas
insb
xlat
es
test
jmp
or
inc
pusha
mov
mov
mov
aas
adc
mov
loope
outsb
inc
sbb
mov
xor
roll
mov
jmp
jmp
or
pop
add
scas
pop
add
push
stos
mov
cmp
imul
adc
jge
sub
sub
sub
xchg
inc
cmc
pop
dec
pop
cwtl
leave
mov
fsubs
sahf
cs
cmp
cmp
fiaddl
mov
aam
mov
adc
popa
add
jecxz
push
scas
outsl
mov
jo
neg
jb
lods
push
sub
test
jae
mov
jae
cmp
add
addl
pop
inc
rcll
imul
repz
jmp
sti
repz
xor
aad
mov
cmp
std
or
xchg
in
xchg
fcomi
mov
mov
int3
mov
jl
cmp
mov
pop
xor
pop
sbb
xchg
dec
popf
inc
xchg
jmp
sbb
rcll
cmp
jmp
fsubl
jns
inc
cmpsb
cli
mov
ror
or
fcoml
ret
lods
scas
mov
sbb
cmp
push
mov
xchg
xor
movsl
scas
addb
mov
sub
pushf
pop
adc
lea
push
sbb
sahf
movsb
push
or
mov
xchg
mov
test
cmp
cld
cmovbe
dec
mov
jge
fiadds
scas
scas
jno
movsb
and
fldt
and
inc
aaa
popa
inc
in
lret
inc
push
nop
iret
dec
mov
jae
je
push
sbbb
push
lret
mov
dec
pop
jmp
bswap
mov
es
inc
fstps
sbb
stc
sub
jne
mov
outsl
mov
js
pusha
movl
lock
rorb
dec
ljmp
push
cmp
push
call
shrb
push
test
sbb
lock
sub
notb
and
push
jmp
fldl
push
add
cwtl
push
cmp
out
jecxz
sbb
sbb
cld
cmp
outsl
cli
mov
mov
insb
dec
cli
push
sbb
and
scas
push
nop
in
mov
pushl
and
out
enter
adc
mov
incb
jae
int3
dec
pop
out
cs
shl
cmpsl
sbb
or
daa
shrb
add
scas
sub
in
stos
xchg
gs
pushf
mov
mov
icebp
and
dec
popa
cs
popa
fldl
sub
mov
xor
xchg
xor
enter
jecxz
mov
mov
jbe
nop
je
aaa
in
sbb
sbb
ret
sbb
jecxz
shr
cld
jno
addr16
push
adc
jbe
dec
mov
add
icebp
in
pop
mov
ret
or
adc
inc
xor
pop
leave
xchg
aad
rolb
enter
addr16
stos
dec
rcll
incb
in
pusha
jge
testb
mov
stos
or
mov
scas
mov
or
push
add
sub
adc
call
xchg
enter
mov
push
fists
imul
adc
pop
jnp
jne
nop
aaa
mov
fldl
cltd
pop
push
lea
push
scas
mov
fwait
sti
pop
mov
std
loop
dec
push
dec
dec
xchg
mov
shr
pop
pop
aad
mov
ja
divb
out
fcomps
mov
push
cltd
shl
pusha
or
xchg
mov
and
pop
insl
add
popf
aad
dec
mov
mov
mov
outsb
dec
or
adc
enter
out
cmp
aam
inc
cs
or
and
cmp
add
cmp
or
xchg
fwait
movsl
scas
dec
inc
mov
frstor
scas
mov
pop
in
fistps
mov
cmp
inc
adc
repz
ret
mov
lret
jge
in
test
loopne
rcrl
xchg
scas
fstps
shl
test
cmc
das
lret
in
mov
cmc
dec
cwtl
xchg
js
adcl
sar
rorl
xchg
fdivl
ss
cmp
adc
pop
out
insb
mov
cmp
jp
js
jno
sbb
cmpsb
add
rcrb
les
jmp
lcall
insl
xlat
jns
mov
testb
push
jb
inc
movsb
push
push
jecxz
mov
pop
and
cmp
xor
in
decb
int
outsl
hlt
pop
push
mov
push
mov
fdivs
cmp
and
hlt
sub
mov
icebp
in
fcoms
sahf
pop
fldcw
fimuls
mov
or
and
sub
je
cmp
jo
pop
addr16
jns
or
cltd
and
lcall
mov
in
pop
mov
icebp
out
lret
aaa
inc
push
repnz
sub
mov
insl
xchg
adc
or
stos
push
enter
dec
lahf
aam
stos
dec
ret
lock
add
cmova
mov
insl
scas
jb
ljmp
add
push
shrb
mov
lret
adcl
notb
and
ficomps
jo
not
lods
test
ret
dec
add
in
mov
out
pop
pop
shlb
fcomp
daa
js
ret
adc
inc
test
ja
rolb
xchg
stos
sbb
and
mov
xchg
aam
outsl
sub
data16
adc
xchg
cs
mov
lret
sub
pop
outsl
mov
pushl
adc
xchg
sbb
xchg
sbb
adcl
popa
adc
jno
pop
ret
mov
lret
in
jb
in
sbb
fucomip
jle
mov
jne
dec
mov
scas
mov
loopne
andb
cmp
popf
outsl
pop
insl
cs
jns
mov
mov
mov
call
movsl
popa
hlt
or
cmp
stos
popf
es
push
dec
lret
cli
pop
das
xlat
int3
cwtl
add
cmp
push
xchg
lods
pusha
pop
stos
pop
imul
sbb
mov
push
fidivl
xor
shll
cmpsb
sahf
sbbl
inc
test
jae
movsb
iret
jmp
xor
lahf
mov
out
aaa
cmp
test
sbb
mov
daa
sub
jne
pop
cmc
test
mov
inc
mov
cmp
xlat
cli
int3
pop
aas
in
or
ss
loopne
pop
mov
in
int3
subl
sbb
shrl
dec
jne
lret
not
ljmp
movsl
add
bound
mov
std
add
jb
addr16
pop
dec
push
jg
push
pop
subl
add
inc
sbb
les
fmuls
add
loopne
aad
ret
adc
adc
cmp
decl
fs
fwait
inc
aad
inc
mov
divl
push
push
pushf
call
cmp
cmp
les
jge
inc
das
cmc
imul
push
fsub
and
fcmovnbe
adc
movsl
dec
dec
ss
jge
xrelease
push
dec
add
mov
or
fwait
xor
clc
mov
out
fsubl
ret
rclb
in
int
inc
or
test
push
jle
pop
lds
sbbb
inc
mov
ret
lret
shl
cli
xchg
and
scas
lods
push
ljmp
shlb
dec
pop
inc
jecxz
enter
inc
testl
sti
mov
int
aam
push
test
imul
stc
daa
inc
in
jmp
std
jbe
mov
out
mov
das
sbb
xor
mov
cmp
js
push
inc
mov
je
mov
cltd
jmp
ss
jne
arpl
mov
scas
lock
adc
in
cli
jno
stos
xchg
xor
cmp
cmp
mov
mov
or
out
inc
enter
push
adc
ljmp
ret
rclb
dec
pop
push
aaa
rorl
xchg
mov
ret
leave
jno
shrl
or
cmpsl
mov
scas
cmp
adc
repz
sahf
ss
mov
inc
and
pushf
test
es
mov
adc
fimull
sti
ljmp
cmp
pop
pop
push
jp
test
iret
adc
jg
lcall
adc
push
xchg
pop
add
ss
into
mov
outsb
jmp
fs
cwtl
pop
cmp
adc
mov
aam
dec
jne
jno
jecxz
gs
adc
pop
ror
pushf
inc
sarl
enter
cmp
mov
pop
enter
mov
mov
sub
and
cmpsb
mov
nop
sub
in
adc
arpl
pop
imul
shrb
xor
gs
mov
into
inc
ret
fwait
inc
lcall
dec
or
dec
adc
mov
mov
push
loope
mov
dec
lret
add
jp
jnp
cmpsb
movsl
pop
test
clc
cltd
sub
pop
sub
mov
imul
pop
jle
xor
dec
test
popa
push
mov
add
mov
sar
int3
push
cmp
xor
pop
lock
mul
sbb
loope
std
add
xchg
in
xlat
pop
insb
imul
add
and
dec
sar
outsb
or
fmull
test
xchg
mov
adcl
out
cmpsl
mov
mov
sub
pop
outsb
xchg
shlb
test
xchg
mov
pop
push
push
adc
dec
mov
mov
lea
es
push
and
inc
sub
inc
xchg
movsl
les
frstor
les
stos
or
incb
lahf
in
mov
adc
sti
lds
ret
jne
je
scas
xor
adc
pop
lds
sarl
scas
ds
cmp
cmp
dec
jae
lret
dec
insl
sub
mov
inc
lds
sarl
lret
jno
cmp
jg
xchg
pop
cmp
test
mov
mov
movsl
js
fistpl
stos
iret
xchg
insb
lahf
in
and
pop
pop
mov
dec
adc
pop
out
gs
push
out
mov
jb
aam
icebp
mov
lret
mov
inc
test
inc
repnz
clc
movsb
or
pop
lods
jp
push
insl
enter
shl
ds
mov
arpl
sahf
adc
clc
xchg
jle
mov
sti
into
add
ret
popa
mov
out
fcmovnb
test
mov
adc
sub
xor
mov
rcrl
dec
xchg
pop
outsl
inc
dec
xor
test
jo
enter
cmp
or
inc
dec
test
push
push
das
lods
xchg
sbb
inc
push
pop
mov
pop
mov
fdivrl
sbb
call
push
in
cltd
in
xor
push
pop
dec
fs
in
out
aaa
cmpsb
sub
popf
xor
dec
xor
push
sub
pop
pop
inc
pop
pop
repz
xor
iret
in
inc
xchg
outsb
mov
fldl
stc
loope
xor
add
int3
push
icebp
add
addl
mov
orl
in
xchg
pop
out
pushf
dec
add
sbb
mov
lods
inc
xchg
in
lods
fwait
xor
loopne
push
jcxz
and
push
mov
mov
stos
leave
or
pop
lods
daa
lods
add
cmp
rol
cmp
cmp
xor
mov
adc
pop
push
lods
movsl
jae
leave
fsts
subl
mov
cld
ret
adc
dec
popf
or
adc
bound
push
imul
cmp
push
lret
orl
and
mov
popa
sbb
adc
imull
mov
add
leave
push
and
test
ss
or
and
mov
sbb
pop
ds
jb
push
xor
xchg
pusha
sarb
xchg
mov
and
cmp
mov
into
jb
or
cld
ljmp
iret
scas
push
add
jbe
xchg
pop
dec
and
int3
jo
cmp
cmp
ficompl
cmp
test
sti
pushf
push
faddl
loop
xchg
les
movsl
mov
xchg
jbe
pop
clc
rol
lods
dec
mov
jb
add
mov
or
push
xchg
lds
mov
lock
mov
lcall
or
and
rep
push
inc
repz
xorb
inc
add
and
dec
fisubl
jo
cmp
cmp
arpl
cld
sbb
inc
nop
repnz
inc
mov
jno
mov
mov
rcll
data16
add
gs
xchg
or
pop
inc
in
fdivrl
enter
mov
mov
stos
hlt
imul
out
add
fnstsw
lods
xchg
adc
sti
jecxz
std
pop
sub
sarb
pop
out
loop
sub
aam
or
cmp
inc
lret
cli
js
aas
or
ljmp
les
aaa
or
ds
cli
addb
pop
sarb
ret
sub
test
ss
ss
aad
add
cmp
pusha
inc
sbb
pop
push
in
out
inc
notl
mov
inc
sbbl
sub
sbb
and
adc
pop
lods
aaa
mov
adc
mov
xchg
fidivl
inc
and
lock
mov
or
mov
jge
mov
mov
mov
sub
pop
dec
ljmp
inc
pop
iret
mov
ss
int
inc
inc
add
xor
data16
mov
out
jmp
pop
cltd
dec
dec
lret
popa
sahf
push
test
jp
xchg
sbb
lods
and
push
js
pop
mov
dec
int3
xchg
inc
out
inc
mov
fsubr
fwait
aas
das
cld
mov
mov
je
or
lahf
adc
test
sub
xor
mov
mov
cld
pop
pop
icebp
std
shrb
outsl
ficoml
ds
movsl
push
jo
xchg
pop
adc
sub
dec
xchg
dec
mov
adc
ljmp
bound
push
sub
int
dec
rcrl
gs
lods
xchg
data16
mov
xchg
sti
mov
int3
js
rclb
pop
je
mov
xchg
pop
fbstp
push
mov
lcall
xchg
xchg
or
shlb
mov
sbb
iret
nop
mov
add
xor
fistpl
xchg
call
mov
xor
lret
add
out
xor
ds
push
lock
pop
nop
mov
jne
and
test
enter
pop
xor
jle
shlb
sti
dec
pop
dec
push
push
mov
mov
cmpsb
pop
push
dec
sbb
xor
push
mov
dec
jne
add
leave
es
push
sbb
lds
hlt
dec
in
ljmp
das
push
std
psrad
gs
push
loopne
xor
add
daa
jecxz
push
lock
jbe
aad
mov
cmc
or
mov
add
or
mov
out
or
xchg
cmp
popa
pusha
test
gs
mov
cmpsb
movsl
out
dec
jp
std
mov
sarl
dec
movsl
jne
popa
insl
les
pop
sub
mov
rclb
imul
subl
popa
or
lahf
sti
push
xchg
sbb
addb
xchg
test
mov
mov
je
jle
add
sub
lock
call
subl
movsb
or
and
xchg
inc
jg
adcl
ffreep
push
aas
flds
sub
shrl
sub
add
adc
push
mov
mov
out
push
div
or
sub
adcl
rorl
popa
push
into
xor
mov
shrb
popf
sub
in
iret
mov
and
and
dec
in
sarl
fistpl
stc
in
jecxz
icebp
and
jbe
mov
add
dec
push
addr16
push
jge
mov
jg
pop
inc
jge
inc
repnz
inc
lds
sbb
push
adc
or
jnp
aam
dec
inc
fcmovu
xchg
add
push
push
cmp
jecxz
cwtl
aaa
notb
fstps
mov
pop
fstpt
pop
cmp
in
xor
filds
ror
xchg
jle
pop
mov
xchg
aad
test
jmp
jae
insl
addr16
sti
popl
and
dec
outsb
adc
mov
mov
mov
icebp
sbbb
inc
xchg
testb
rclb
mov
loop
sub
dec
mov
cmc
xlat
push
mov
fisubl
mov
ja
fmulp
iret
inc
out
pop
pop
lret
cmp
jb
inc
pop
inc
add
xchg
fldt
loop
sbb
mov
mov
repnz
inc
cmp
unpcklps
xchg
fs
jle
or
xchg
call
sub
sub
mov
inc
xchg
add
popa
cmp
fbld
mov
pop
mov
lods
ss
mov
dec
jle
test
mov
mov
add
fldl
mov
in
cmp
das
jnp
mov
shl
add
jo
sub
test
imul
aad
pushf
sbb
fiaddl
out
mov
mov
fnstsw
sub
mov
sbb
fiaddl
dec
stos
movsb
cmp
jecxz
sub
fdivr
icebp
ffree
push
out
cld
or
js
mov
shl
orb
rcr
fadds
mov
add
push
mov
dec
pop
pop
fcmove
xchg
dec
js
or
pop
inc
lock
lods
xor
xor
add
xchg
dec
jmp
sub
jl
add
mov
mov
dec
add
jl
xor
orl
xor
jne
mov
call
mov
mov
jecxz
fwait
jb
scas
pushfw
add
shlb
lock
jp
pop
sbb
movsl
mov
insl
jnp
jae
in
mov
clc
push
mov
in
aaa
stc
push
lret
pop
lret
inc
mov
lea
std
fmull
inc
testb
mov
imul
lea
adc
push
stos
cld
pop
inc
outsl
dec
es
sub
popa
ljmp
sbb
ret
cltd
pop
inc
pop
fstps
fstpl
adc
ss
test
xor
pop
inc
lret
int3
fisubrl
pushf
xlat
mov
movb
mov
addr16
jno
dec
fstp
xchg
loop
dec
imul
dec
jl
inc
sbb
out
or
inc
mov
movsw
xor
jno
flds
test
xchg
iret
enter
sbbb
popf
push
out
shlb
and
lret
cmpsl
add
cli
loop
nop
mov
mov
xor
aad
mov
push
pop
lret
push
mov
mov
clc
lods
aaa
xlat
sub
int3
gs
xor
stos
xchg
and
push
test
out
add
push
dec
notb
dec
jle
or
and
fistl
aad
fs
sub
or
and
mov
jne
call
outsl
shrl
fadd
hlt
scas
jns
int
jge
into
enter
idivb
repnz
dec
mov
push
push
sti
adc
cmpsl
xchg
or
sub
push
data16
mov
pop
cmp
or
aas
cmpsl
fidivl
stos
and
pop
and
mov
fimull
pop
and
mov
adc
testl
push
out
stc
xor
push
sbb
push
daa
mov
daa
scas
orl
data16
std
xlat
inc
roll
cwtl
mov
jb
adcl
fldenv
push
mov
cmp
lock
fcmovne
filds
enter
enter
add
push
sub
subl
std
mov
xchg
sub
inc
test
push
cli
bound
call
jle
mov
stos
hlt
adc
sti
or
daa
std
push
pop
and
insb
loop
push
data16
rcr
das
sub
mov
lea
cmp
or
test
cltd
dec
xchg
pushf
push
sub
lock
nop
insb
jne
sub
in
je
inc
inc
out
test
and
mov
dec
mov
jne
pop
jp
push
xchg
out
hlt
arpl
adc
clc
aam
andl
push
cmp
inc
int
sbb
adc
mov
or
jnp
imull
aad
rcrb
and
clc
mov
fldl
sahf
jne
arpl
inc
mov
in
dec
jo
outsl
dec
or
repz
and
pop
out
popa
outsb
mov
outsb
rolb
iret
add
out
outsl
xor
jmp
je
stc
jmp
sahf
mov
test
cmp
in
cmp
bound
cmpsb
or
psraw
adc
mov
push
aaa
mov
das
pusha
loopne
push
jns
dec
inc
add
jnp
popf
out
shr
ret
out
divl
popf
repz
cs
sub
cltd
jb
sub
and
lea
jae
scas
cmp
sahf
imul
xchg
push
add
add
push
sub
outsl
outsl
shrl
shrl
lods
xchg
bnd
xchg
push
inc
pop
js
arpl
dec
push
inc
rorb
pop
adcl
sahf
inc
lcall
ret
fiaddl
cltd
jno
jg
mov
shll
stc
loop
pop
cs
ss
ret
jns
dec
jg
add
xchg
ljmp
popf
inc
outsl
loop
test
fcomps
and
mov
pop
pushf
pushf
pop
push
dec
pop
add
mov
movsl
dec
push
mov
jns
inc
jns
mov
jmp
sahf
mov
xchg
shrl
xchg
push
cli
inc
in
stc
mov
jmp
jns
or
int
mov
adc
je
jle
mov
les
clc
ret
mov
add
ss
loope
pop
cmp
pop
lods
pop
xchg
fs
mov
push
mov
push
mov
dec
nop
dec
jne
or
dec
pop
insl
adc
lock
test
jnp
jnp
push
jnp
sub
cmp
pusha
mov
iret
repz
mov
dec
mov
aas
jp
aas
in
mov
jo
push
out
xor
adc
push
pop
out
mov
sub
testb
or
and
es
sti
arpl
sbb
sub
xor
lods
or
int
fsubrs
adc
push
ficomps
mov
outsb
xchg
lds
test
negl
inc
adc
mov
lcall
jb
lods
mov
push
adc
pop
push
int
sub
lea
je
inc
cmp
repnz
fwait
clc
clts
pop
ds
mov
out
push
inc
sbb
loop
sub
rclb
mov
cmp
push
jg
mov
insl
in
orb
lret
in
test
or
mov
rol
push
pop
gs
shll
sbb
insl
jae
mov
cmp
xchg
sub
xchg
xor
jo
enter
adc
xchg
and
xor
insb
loop
adcb
xchg
xor
les
push
sbb
fstps
add
jb
push
mov
dec
inc
bound
or
sub
out
push
add
adc
and
inc
lods
ja
xor
mov
or
daa
sbb
psrlq
pushf
scas
lea
cltd
cmp
mov
mov
xor
push
enter
pop
fnstcw
or
hlt
ret
addr16
and
mov
test
jl
int3
add
into
xchg
and
pusha
aaa
sub
fcoms
xchg
jl
xchg
repnz
daa
cmc
and
jne
loope
imul
jl
jg
nop
add
pop
clc
pop
sbb
scas
pop
xchg
mov
and
pop
push
jno
rcll
lret
xor
in
mov
and
jmp
add
test
pop
sbb
flds
repz
in
and
testl
cld
xchg
and
push
pusha
cld
xchg
aad
xchg
pop
sbb
fldcw
mov
or
xchg
and
lods
push
dec
mov
lods
cmp
shrl
icebp
ds
fists
dec
or
mov
popa
fsts
jl
inc
xchg
gs
push
mov
inc
call
and
rorl
ss
rcll
add
into
imul
inc
in
ret
xchg
jne
subb
imul
mov
adc
ja
sbb
aam
or
lods
add
out
es
aas
pop
cs
cwtl
es
xor
pusha
push
jo
dec
push
shrb
or
arpl
dec
icebp
xor
fldcw
outsl
sbb
push
adc
add
xor
sbb
cmp
faddl
fcomp
dec
cmpsl
movsb
pop
sbb
imul
add
inc
inc
movsb
cmp
sub
xchg
aad
cmpsb
jo
sub
or
xor
push
sub
icebp
scas
xor
add
xor
imull
aad
pop
mov
sub
and
push
push
enter
sub
mov
mov
xadd
jl
lahf
imul
out
sbb
aas
loope
push
mov
es
jle
sbb
xchg
add
enter
hlt
push
nop
nop
test
lock
sub
mov
jle
orl
ljmp
lcall
xlat
pop
dec
pop
shr
decl
sbb
addb
xchg
cmpl
adc
sub
pop
cmp
or
sbb
xchg
ljmp
pop
and
lds
cmpsl
aaa
xlat
jl
mov
ret
jb
movsl
jae
cmpsl
repz
seta
subb
sub
add
in
inc
das
xchg
dec
sbb
mov
push
data16
fcmove
and
pop
in
fdivrl
jnp
sub
mov
orb
lcall
stc
btr
fidivrs
or
or
or
push
mov
int3
dec
enter
sarl
jecxz
imul
jmp
mov
je
inc
lahf
mov
jp
rolb
bound
std
add
andb
in
push
lods
or
mov
inc
std
out
out
add
lret
sub
adc
jl
cmpsl
cmp
imul
or
lcall
or
xor
push
lret
jo
xor
inc
ja
loopne
pop
mov
xchg
ret
sub
aam
decl
repz
test
scas
xchg
jno
pop
and
mov
in
pop
inc
lcall
dec
dec
xor
andl
adc
mov
fdivl
imul
jecxz
xchg
pop
ficoms
popa
into
adc
mov
sub
jno
lret
cmpsb
push
testb
xchg
int3
jne
push
rclb
cmpsl
in
mov
loopne
or
dec
mov
sbb
ret
cld
ss
cs
add
notl
pop
jne
xchg
cmp
and
cltd
int3
loopne
push
xchg
mov
mov
push
in
out
cld
inc
test
or
sarb
xor
imul
les
push
push
gs
jae
stc
cli
lock
jo
push
push
in
inc
jle
cmpsb
xchg
jp
adc
inc
push
push
fbld
dec
hlt
mov
loop
inc
pop
in
stos
cmp
imul
orl
in
cltd
int
pop
mov
rcr
aaa
ret
rcrl
or
add
cmp
jle
sbb
movsl
or
inc
mov
and
xchg
push
sbb
clc
pop
int
fwait
outsl
xchg
cmp
adc
add
and
mov
pop
lods
hlt
xchg
pop
addb
das
pop
clc
std
aad
out
leave
cmp
sub
inc
fdiv
cmpl
push
xlat
and
xor
pop
sub
enter
repnz
jmp
cli
and
shl
jmp
bound
jmp
lea
mov
daa
test
mov
xchg
jle
rorl
rorb
pop
lret
mov
es
push
mov
xchg
gs
push
popf
fnstenv
cmp
sub
mov
popa
inc
ljmp
and
inc
insb
and
fisttpl
pop
lea
movsb
pop
pop
adc
or
sbb
inc
in
cs
dec
addr16
fdivrs
insb
rcll
aaa
sbbb
or
popa
mov
xchg
out
loop
mov
inc
cmpsl
adc
push
call
pop
insb
aam
fistl
pop
cli
mov
imul
cli
mov
lds
or
lods
or
jb
xchg
push
in
pop
lods
ror
push
sbb
sar
int3
and
adc
loop
mov
jne
mov
pop
push
mov
out
pushfw
push
push
mov
sbb
add
enter
jno
push
sub
iret
lds
dec
mov
outsb
mov
out
out
in
adc
xor
cmp
adc
mov
cmp
lds
mov
pop
iret
aad
loop
mov
jp
pop
push
or
mov
inc
mov
cmp
mov
mov
out
sub
pop
inc
or
bsr
mov
add
dec
fcomps
mov
jbe
jecxz
mov
sbb
inc
sub
pop
rcrb
call
inc
push
cmp
jns
inc
sub
mov
mov
shl
push
jle
jb
decl
inc
add
jnp
and
jmp
repnz
and
mov
jbe
std
imulb
rcrl
pop
mov
xchg
mov
jecxz
xor
mov
pop
popf
cli
lds
icebp
and
mov
push
adc
orl
repz
imul
sar
inc
mov
adc
roll
gs
loop
ja
adc
xor
hlt
sub
ret
mov
xchg
test
pop
fisttpll
test
ss
int
gs
and
notl
adc
das
lea
in
jp
push
or
xchg
mov
ds
fstl
dec
xor
jb
xchg
out
lods
pop
pop
inc
icebp
pop
mov
inc
xchg
push
mov
pop
lret
test
inc
cwtl
xchg
cmp
mov
sub
pop
cs
loop
adc
xchg
shlb
mov
mov
hlt
or
add
or
lahf
pop
ds
sub
dec
mov
leave
subl
outsl
xchg
in
adc
mov
xor
daa
mov
jmp
push
out
divl
sahf
pop
mov
mov
cld
sarb
and
in
sbb
mov
mov
arpl
adc
or
popf
cltd
outsl
xor
push
outsb
fistl
lahf
mov
jl
xor
hlt
mov
pop
repz
add
cmp
ljmp
mov
ds
es
or
mov
mov
outsb
mov
lahf
xchg
push
call
rcrl
ret
js
mov
push
push
addl
call
and
jg
dec
ret
xor
mov
in
vmovntdq
push
pop
xor
fwait
pop
lds
jl
xor
adc
mov
sbb
and
lahf
adc
inc
pusha
sbb
jp
inc
mov
xchg
ret
movsb
and
adc
or
iret
xchg
mov
mov
jmp
xor
loopne
js
inc
cs
sbb
mov
popf
out
add
mov
enter
flds
inc
xchg
cli
je
dec
sarl
sbb
int
test
insl
mov
test
sub
jno
jns
fs
dec
inc
sub
add
repnz
mov
subl
xchg
push
pop
pop
cli
xor
cmp
dec
add
outsb
adc
cmp
mov
je
mov
adc
cmp
lock
or
adcb
iret
aaa
icebp
mov
repnz
cli
sbb
shl
mov
sbb
subb
add
mov
jae
mov
xchg
push
std
popf
add
mov
mov
dec
adc
pop
test
cld
int3
pop
cld
ror
inc
loopne
xchg
and
iret
lods
jl
ljmp
pop
arpl
mov
mov
pop
out
lods
jnp
or
addl
jb
loop
mov
or
mov
adc
lahf
jecxz
rcr
and
mov
notb
or
lock
repnz
stos
or
push
clc
xor
inc
sub
pop
mov
jmp
mov
push
push
mov
lock
xor
sbb
sahf
cmp
addl
xor
adc
addl
cmp
lret
roll
out
repnz
cmpsl
mov
adc
sub
xor
xchg
clc
cwtl
adc
lahf
mov
add
and
repz
dec
push
shrl
push
xor
bound
inc
data16
repnz
xchg
mov
in
jnp
cli
sub
les
daa
add
stc
scas
cmpsl
xor
andl
jge
mov
test
add
lea
cmp
in
insl
rolb
cmpsb
js
in
aaa
shr
shrl
mov
push
fiaddl
nop
push
repz
xor
mov
adc
cmp
ficomps
cwtl
mov
jne
arpl
push
cmpsl
fsubrl
loope
xor
mov
fisubl
enter
ret
lds
sbb
pop
testl
jno
fiaddl
in
in
adc
mov
ud0
jecxz
cmp
fucomi
push
mov
pop
mov
pop
push
repnz
push
test
les
jmp
lahf
fidivl
mov
loopne
mov
test
xchg
cltd
inc
cmp
sbb
mov
cltd
es
mov
sub
out
notb
sarl
add
addb
or
iret
stos
stos
ret
jbe
pop
ret
fsubrl
inc
cmp
sub
sbb
xchg
push
pop
xor
inc
mov
mov
xor
je
cmp
mov
cmpb
repnz
xor
and
mov
ret
mov
or
mov
pop
mov
mov
mov
outsb
iret
xor
xor
dec
js
fsubr
loop
fbstp
lods
xor
shll
pushf
mov
aad
dec
hlt
fcmovb
adc
lds
mov
add
je
sub
jo
inc
addr16
or
xor
jae
movsl
loope
test
push
mov
or
mov
cmc
mov
lock
subb
ds
rcr
in
out
icebp
inc
ret
mov
les
jno
fucomip
call
pop
add
add
test
lds
inc
adc
xor
cli
test
pushf
ds
dec
movsb
inc
cmp
rcll
xchg
mov
or
daa
cwtl
sti
daa
test
mov
insl
stos
xchg
jno
xchg
arpl
int
sbb
sti
iret
mov
lcall
sbb
inc
pusha
stos
loope
sbb
mov
addb
fs
iret
jle
sahf
adc
adc
fdiv
xchg
sbb
aaa
jecxz
mov
pop
lahf
mov
test
push
jne
push
dec
aas
outsl
rcrl
into
ljmp
mov
cmc
push
pop
rorl
and
fs
add
insb
in
fwait
daa
scas
jmp
pusha
div
data16
pop
add
test
and
inc
sbb
out
pop
imul
bound
mov
arpl
popa
enter
or
push
sub
cli
andb
mov
xchg
cmpsl
pop
xorl
sub
adc
dec
push
push
clc
daa
jne
mov
adc
mov
cwtl
shl
inc
pop
movsb
pop
mov
ret
cltd
mov
in
mov
cltd
push
outsl
mov
pop
adc
cmc
xchg
inc
dec
scas
mov
test
mov
in
xor
pop
adc
mov
pop
aam
mov
outsl
add
push
sahf
mov
dec
add
cmp
popa
inc
cwtl
les
repz
push
leave
sarl
pop
or
out
push
sarl
xchg
outsl
inc
jb
enter
rclb
jl
xchg
jnp
pop
push
dec
push
push
loopne
scas
xor
aam
fsubl
icebp
inc
xchg
in
outsb
add
push
jl
sbb
jmp
sub
xor
pushf
push
out
int
rorl
lods
pop
sbb
jae
insl
adc
incl
jg
mov
sbb
push
iret
in
mov
jno
mov
cmc
scas
mov
xchg
lock
call
mov
mov
mov
insl
in
mov
add
lret
outsl
pop
inc
or
pop
mov
jmp
mov
daa
sti
add
xor
jge
movsl
push
push
and
test
lret
rcrl
sti
scas
jnp
adc
mov
or
mov
add
cmp
mov
imul
mov
movsb
sub
stc
insb
push
icebp
aaa
out
cmp
sub
mov
andl
inc
int
mov
mov
add
adc
sub
aam
mov
rol
cmp
cmp
xchg
movsl
mov
mov
pop
fwait
cmp
fmull
inc
clc
jno
xor
xchg
mov
fadds
mov
fnsave
lds
or
sub
and
adc
fistpl
jle
xchg
xor
arpl
jne
jbe
sub
rolb
jno
mov
cmp
fisttpll
inc
cmp
dec
push
iret
mov
add
sub
adcb
stos
and
rcrb
pop
imul
sbb
mov
add
cltd
cmpsl
test
mov
scas
out
loopne
loop
out
xchg
push
rorb
mov
or
mov
mov
jns
daa
faddp
lods
popf
nop
fidivl
mov
cmc
add
andnps
jp
aaa
sub
insb
push
sub
cmpsb
test
add
jmp
jge
add
loop
mov
stc
rolb
and
ret
and
pcmpeqd
sahf
xor
stos
pop
inc
xor
pop
jmp
or
push
push
into
js
mov
out
shrl
adc
std
fiaddl
negl
sbb
mov
push
loope
pop
xor
add
int3
les
ja
jle
push
push
cmpsl
repz
sbb
lret
xor
out
lods
and
outsb
sub
push
push
push
and
and
movsb
addr16
movsl
bnd
movsb
mov
cmp
rclb
jne
adc
push
pop
ss
sub
loop
sub
lahf
or
sub
pop
dec
clc
lret
jo
lods
inc
sbb
stos
insb
out
and
xchg
xchg
jge
mulb
bound
or
in
mov
sbb
or
push
stos
rcrl
xor
xchg
mov
inc
enter
add
cmp
popa
sbb
push
lods
mov
pop
scas
clc
neg
sbb
cmp
jl
iret
mov
and
jmp
mov
addr16
das
xor
xchg
xor
adc
pop
pop
out
xor
or
rcrl
test
fstps
or
push
ret
push
mov
mov
or
sub
pop
ja
and
in
icebp
cmp
sub
and
leave
hlt
lret
xor
pop
xchg
jno
sub
and
mov
data16
xor
inc
xchg
push
or
adc
cwtl
mov
test
outsb
mov
sbb
push
and
js
nop
mov
repz
pop
lret
xchg
test
or
pop
shll
xor
pop
test
mov
int3
or
adc
iret
into
push
and
xchg
subl
cmp
adc
xor
sarb
xchg
jmp
sti
xor
adc
mov
mov
cmp
ret
fsts
mov
outsl
mov
dec
fdivrl
adc
fsub
inc
push
cmp
add
mov
dec
push
push
xorl
insl
sub
mov
dec
pop
aam
shll
scas
push
pushf
aad
mov
sbb
pop
jle
imul
popa
lcall
mov
stos
daa
jb
and
cmp
out
imul
cs
mov
scas
lret
or
cmp
pop
arpl
fmuls
sub
shl
push
mov
push
pop
out
repnz
in
aaa
js
lds
sbb
push
sahf
add
mov
repnz
pop
fldl
or
xor
mov
ljmp
cmp
add
mov
inc
pop
outsb
int
repz
jnp
pushf
inc
fidivl
xor
cmpsb
pop
adc
aaa
adc
in
sub
cmp
sub
stos
jl
jge
les
push
bswap
cmc
adc
fs
imulb
push
and
adc
jb
mov
lods
jecxz
sub
cmp
push
into
mov
mov
pop
add
jmp
jne
xor
sbbl
pop
stos
push
gs
jns
ljmp
incl
xchg
adc
mov
incb
xchg
arpl
add
push
add
imul
rcrl
lret
into
mov
mov
inc
nop
push
or
or
vmovlpd
sub
jl
fiadds
dec
mov
pushf
arpl
xor
mov
fmul
push
push
out
mov
cmp
nop
mov
and
sti
dec
jne
out
inc
mov
test
xor
das
out
mov
xor
mov
icebp
out
jae
pop
mov
mov
cld
shl
out
sbb
aam
pushf
inc
or
pop
inc
mov
sbb
inc
push
mov
enter
ss
shrb
cmpsl
and
pop
push
push
push
mov
mov
mov
mov
pop
aaa
sbb
and
dec
lock
pusha
aaa
call
xchg
notb
cli
sahf
fxch
repz
xor
bound
dec
jg
inc
call
and
mov
sub
aad
call
pushf
push
cmp
movsl
lahf
sahf
cmp
or
xchg
pop
out
xlat
ss
and
rolb
push
push
mov
xchg
pop
ficompl
cs
lods
fimuls
nop
test
jg
xor
mov
push
push
fndisi(8087
mov
sub
mov
sbb
nop
out
and
inc
sbb
sub
sbb
and
dec
scas
iret
lds
push
push
subl
and
shl
xor
movsl
pusha
push
xlat
iret
jbe
cmp
popf
mov
int
test
xchg
imul
insl
in
shrb
or
leave
fisubl
je
cmp
pop
or
dec
add
aam
inc
ljmp
pushl
push
dec
push
gs
xchg
cmpsb
sub
mov
jmp
shrl
out
jbe
mov
push
xor
xchg
and
mov
cs
lcall
jle
fwait
jecxz
mov
inc
pop
xor
cmp
mov
jp
inc
aaa
dec
ss
in
jo
test
sarl
addr16
aam
outsl
shrb
dec
in
sub
adc
jmp
mov
mov
shrb
add
out
ret
push
movsl
fisubs
mov
rorl
ljmp
lahf
rolb
xor
cmp
movl
push
mov
lret
inc
mov
mov
pusha
pushf
xor
out
pop
xor
lret
sub
and
mov
jl
dec
pop
cmp
mov
and
fnstsw
cmpsb
movsb
xchg
jl
lods
test
rolb
mov
ficomps
add
imul
jp
es
imul
mov
mov
into
icebp
cs
iret
jg
repz
inc
lahf
and
jbe
add
mov
sti
sub
rorl
mov
test
xchg
popf
xor
push
outsl
mov
add
rcr
or
mov
pushf
push
dec
pop
insb
sbb
jne
aas
lahf
jbe
jmp
jb
mov
mov
adc
and
add
call
cltd
ficomps
mov
popa
fdivrs
inc
sbb
jle
loop
sahf
sbb
inc
sub
pop
ret
inc
mov
arpl
pushf
jmp
cld
xlat
pop
int3
add
and
iret
popf
sbbl
stos
dec
loopne
inc
in
mov
pop
push
or
pop
sbb
mov
jo
jge
or
aam
shlb
mov
sbb
lcall
outsb
mov
push
hlt
movsb
popf
xchg
inc
push
add
in
cmp
imulb
repz
outsb
lahf
jle
xchg
or
into
jle
in
int
dec
shrl
push
lock
rol
cmc
sbb
shl
iret
sbb
addr16
bound
mov
out
jle
mov
xchg
adc
movsl
dec
ret
rol
movsl
stos
mov
ljmp
popa
dec
push
and
jecxz
xchg
push
or
add
mov
xchg
iret
and
ljmp
mov
pop
testb
leave
cmp
addr16
sub
sub
and
test
jle
js
dec
cmpsb
icebp
jl
pop
mov
jo
jbe
out
and
ljmp
jp
roll
fisttpl
cli
adc
das
xor
aaa
lods
mov
jns
or
jnp
fdivs
in
fidivrl
testb
inc
loope
clc
and
stos
in
xchg
xchg
or
clc
insb
xor
xchg
inc
xchg
inc
pushf
push
and
lcall
int3
sub
fwait
aaa
mov
hlt
push
insb
pop
idivl
dec
sub
fistpll
ljmp
sub
or
mov
sbb
sub
mov
or
cmp
mov
xchg
movsl
mov
cmp
callw
add
mov
mov
and
fldenv
mov
arpl
cmpl
inc
sub
push
js
xor
pusha
mov
test
dec
or
or
or
fwait
dec
pop
andl
mov
jmp
or
inc
jb
stos
mov
xor
shl
cmc
jo
and
gs
sub
pop
jns
loopne
aaa
jns
lahf
or
fidivrl
push
or
xchg
adc
xor
outsb
mov
push
xor
pop
pop
sarb
hlt
popa
push
jl
dec
push
push
mov
jecxz
xor
mov
test
inc
xor
cmpl
sbb
push
shll
dec
aaa
fs
jecxz
push
mov
mov
imul
adc
jp
jmp
and
cli
jl
pop
ror
ja
xor
adc
pop
add
mov
data16
outsl
test
rclb
enter
adc
flds
jns
je
xchg
inc
push
lds
out
push
repz
pop
cltd
filds
inc
push
push
inc
icebp
call
adc
pop
push
jae
popa
push
and
subl
lret
hlt
add
sub
push
scas
pop
aaa
dec
sub
ljmp
mov
popa
cltd
cmp
sbb
rcr
call
adc
in
xchg
adc
scas
dec
repz
aas
scas
mov
mov
mov
jns
and
popf
cmp
lcall
mov
subb
sbb
pop
stos
pop
xlat
mov
inc
rcrb
shrb
shlb
jns
mov
imul
jno
cmp
imul
mov
mov
mov
sub
aaa
fnsave
mov
push
lcall
iret
scas
into
inc
mov
pop
adc
and
lea
ljmp
push
mov
jge
loope
pop
out
adc
lea
mov
test
mov
aam
adc
pop
add
pop
dec
sbb
push
in
fldt
out
adc
decl
add
or
adc
ljmp
pop
push
xchg
std
mov
jle
fadd
jmp
add
rol
rolb
sbb
mov
pop
cmp
xor
out
pop
movsb
dec
in
imul
rcl
pop
xor
pusha
rorl
jo
push
mov
inc
out
dec
mov
daa
lea
gs
pop
lods
push
out
scas
sbb
xchg
inc
and
mov
lret
cltd
lock
dec
inc
les
js
adc
sar
mov
jmp
lcall
popf
enter
adc
mov
pop
aad
pop
mov
cmp
stc
xchg
insl
mov
rcrb
es
xchg
scas
mov
int
scas
ss
inc
mov
sarl
mov
out
cmp
dec
sbb
hlt
and
push
movsb
inc
outsl
pushf
mov
fildll
jo
aas
incb
push
lods
jp
repz
lea
jns
dec
ret
clc
mov
mov
xor
fbld
sbb
loope
outsb
xchg
dec
jecxz
sub
andl
jno
xchg
pop
and
mov
sahf
pop
inc
sub
xchg
out
xor
add
test
test
sahf
xchg
cmp
ret
lods
imul
out
in
hlt
stos
sbb
vpsrad
in
std
or
insb
jle
inc
mov
push
lahf
enter
fsubp
decb
pusha
xchg
stc
loope
fidivrs
push
inc
push
mov
xchg
imul
add
pop
mov
dec
add
sbb
sbb
test
roll
iret
movsb
push
mov
pop
mov
aas
pop
mov
xchg
stos
add
aaa
add
sub
das
push
es
icebp
ret
movsl
mov
xchg
arpl
mov
daa
fbld
sub
dec
loope
lods
adc
dec
sarl
xchg
lods
push
sbb
xchg
pop
cld
bound
gs
and
jl
inc
lock
xor
mov
pop
mov
loopne
sub
sbb
subl
aas
repnz
aam
sbb
xchg
adc
mov
je
imul
mov
sbb
fidivs
push
das
xchg
inc
cld
or
push
mov
mov
sub
icebp
int3
fs
add
inc
sbb
sti
xor
and
out
fstpt
dec
out
add
and
mov
xor
sub
mov
rorb
adc
adc
push
mov
add
inc
nop
mov
out
ss
cli
icebp
clc
sbb
xor
sub
adc
xchg
movsl
lods
gs
sub
mov
mov
jno
das
mov
pop
jmp
out
pop
ret
adcb
in
dec
leave
fldt
pushf
inc
sbbl
repnz
cmpb
mov
xchg
mov
cmp
or
jge
pop
cli
ficomps
pop
jnp
movsl
loopne
pop
or
xchg
aam
and
rcrl
push
jae
pop
mulb
xor
sbb
out
js
shll
dec
mov
jle
push
dec
stos
pusha
enter
int
mov
sbb
cmp
push
xchg
mov
cli
mov
or
test
jb
add
cld
or
mov
jae
bound
jp
and
test
inc
xor
sbb
xorl
jle
cwtl
or
dec
sub
loop
jecxz
inc
add
dec
in
pop
loope
stos
cmp
pop
xchg
push
mov
jecxz
fldl
popf
xchg
out
lods
dec
or
jne
dec
pop
hlt
or
jae
div
lcall
ret
push
and
jns
dec
inc
shlb
scas
or
mov
rcl
mov
loope
mov
jle
xchg
add
dec
xor
in
aaa
std
adc
les
rorb
into
xchg
push
mov
mov
out
mov
rorb
jmp
mov
push
lods
andl
cltd
xor
test
lret
pop
xorl
xor
cmp
mov
das
adc
inc
push
mov
push
fdivl
cmc
hlt
int3
add
mov
inc
pushf
fnstsw
xchg
andb
mov
add
imul
icebp
jnp
mov
and
xor
dec
xchg
lret
jnp
mov
mov
mov
sub
push
dec
imul
jle
scas
xchg
adc
cmp
add
jno
std
xchg
push
cmp
loop
fcmovu
push
cmc
or
jl
push
fldcw
sub
ljmp
push
fildll
dec
movsb
mov
push
mov
mov
push
popa
into
cltd
xor
mov
iret
xor
scas
in
cmp
clc
add
aam
fsubrl
jl
adc
push
leave
outsl
dec
movsl
jl
loop
fimull
mov
push
jne
divl
icebp
dec
and
mov
xchg
dec
add
or
jl
in
shrl
mull
decb
xor
push
sbb
dec
sub
dec
pushf
mov
fnstsw
sbbb
and
dec
test
push
daa
subl
and
nop
pop
dec
call
sub
push
sbb
add
fiaddl
mov
pop
or
stos
sbb
cs
xchg
fisttpll
pop
mov
mov
jbe
cmp
subb
add
or
mov
add
mov
sbb
add
stc
or
push
sbb
andb
out
jne
sbb
stos
adc
mov
incl
add
jle
adc
cwtl
push
sub
shrb
xchg
mov
xor
and
dec
pop
nop
addb
jg
inc
sbb
and
add
shll
dec
mov
ljmp
mov
shl
stos
or
pop
jne
movsl
jae
dec
jmp
out
addr16
inc
popf
call
push
loopne
mov
sarb
and
xchg
flds
imul
xor
into
sbbl
sti
mov
fiadds
rorb
inc
and
mov
jg
out
add
test
ja
mov
cmp
jae
aas
test
xor
mov
ror
pop
ret
mov
mov
jmp
push
mov
lock
jne
out
fimull
gs
mov
out
arpl
gs
xor
xchg
xor
je
jp
mov
shll
dec
in
inc
test
loop
lods
mov
xor
jbe
xor
pop
push
sub
push
cs
mov
jle
mov
js
nop
iret
dec
pop
push
int
bnd
lods
call
and
cmp
xlat
ss
sbb
in
jge
nop
shl
push
pop
cmc
andl
out
or
xlat
dec
in
mov
enter
movsl
inc
sub
push
fidivs
sub
lret
mov
sbb
mov
mov
hlt
dec
je
movsl
adc
inc
jb
cmpsb
adc
mov
xor
sahf
mov
pop
and
or
inc
mov
stos
adc
aad
cmpsl
stc
in
out
pop
hlt
add
repz
sub
in
xchg
jbe
cs
or
mov
aad
cmp
mov
loopne
int3
movsb
pushl
mov
cmp
cmc
xor
inc
icebp
fsubrs
imul
in
stos
imul
push
insb
pop
or
sub
dec
pop
jb
aam
cmc
cmp
aam
mov
or
pop
pop
filds
mov
jno
adc
inc
and
das
ret
mov
xchg
jbe
cmp
xor
loop
js
icebp
cmp
nop
imul
imul
les
jmp
push
push
cmpsl
fidivrs
push
mov
test
sub
cmp
popa
in
fstpl
mov
rcrl
icebp
pop
shlb
pop
sbb
push
mov
mov
sub
jmp
inc
aaa
or
bound
stc
mov
cmp
cmpsb
out
sarl
popf
popa
sub
mov
cmpsl
sbb
fidivrl
pop
xor
fiaddl
xor
jae
jo
push
int3
xor
mov
push
sahf
sbb
push
push
insl
ss
hlt
stos
je
mov
sbb
std
aam
rcrl
mov
clc
clc
shl
mov
addl
xchg
into
cmp
repnz
cmp
test
and
push
push
in
ljmp
gs
sbb
pop
lret
push
push
xchg
test
xor
adc
cmpsb
inc
adc
lcall
ja
push
add
push
cli
push
sbb
fucom
push
inc
inc
mov
repnz
jb
stos
cmp
es
repz
es
mov
insb
out
faddl
and
icebp
inc
adc
pop
stc
jbe
inc
dec
fsubp
pop
dec
add
and
cld
cmp
add
ss
out
rclb
subb
sub
inc
aaa
icebp
inc
or
adcb
lods
push
jmp
loop
push
stc
imul
xchg
arpl
je
mov
push
insl
ds
ret
mov
lret
push
mov
rclb
pop
jns
lea
popf
rcrb
cli
stos
or
mov
lcall
rcll
push
and
cwtl
mov
leave
imul
add
call
fidivs
rep
mov
cmp
add
xor
pop
shlb
xchg
in
popf
test
aaa
or
test
out
daa
fisubl
and
mov
lds
mov
mov
xlat
adc
mov
push
xor
enter
adc
xchg
push
xor
fistps
sub
or
pop
dec
inc
movsb
sahf
push
mov
test
hlt
push
cmpsb
mov
inc
ss
scas
add
and
jmp
leave
mov
mov
fimull
hlt
cs
dec
cli
dec
leave
and
fisubl
dec
sub
aaa
in
dec
mov
ss
dec
push
ss
ss
out
and
fcompl
imul
mov
js
ret
aas
and
dec
arpl
mov
push
inc
xlat
adc
fs
movsl
ret
push
sbb
dec
or
mov
pop
push
add
mov
mov
in
test
sub
out
fnstsw
and
sbbl
dec
mov
jecxz
push
xchg
dec
push
adc
xchg
test
cmp
dec
stos
or
push
lret
or
enter
pop
daa
add
push
inc
les
cli
lock
stc
mov
pusha
jae
add
stos
roll
fidivrl
pop
cmp
lcall
cwtl
bound
or
data16
aas
dec
push
jo
or
daa
scas
push
or
popf
push
loope
inc
loope
cli
jl
rorb
mov
push
fadd
mov
and
lds
fucomp
add
test
mov
fwait
push
add
aam
push
mov
scas
sarl
xor
subl
lods
xor
fptan
loopne
inc
xor
enter
xorl
aaa
sbb
loopne
push
or
aam
xchg
pusha
or
xor
jp
or
ds
rorb
dec
das
repnz
mov
cmp
jl
sub
mov
sbb
sub
sahf
inc
cmp
jl
leave
xchg
mov
or
and
cwtl
xchg
add
push
fcomip
lods
push
faddl
leave
dec
push
dec
in
int
clc
jecxz
fs
cmp
iret
out
out
jb
loopne
out
jb
push
cmpl
or
push
mov
pusha
icebp
xchg
jne
bound
and
pop
xchg
adc
dec
xchg
push
imul
scas
sbb
lret
popa
pop
inc
fwait
push
jg
and
scas
cmpb
stos
js
mov
xchg
shr
js
mov
push
outsb
adc
mov
in
fs
xchg
jnp
es
sbbl
mov
xchg
mov
into
lock
pop
out
sbb
inc
and
lret
cltd
jne
pushf
add
pop
mov
fisubs
jo
dec
mov
xchg
and
adc
pop
sbb
aas
pop
xchg
inc
mov
int
das
and
int
pop
xchg
ficomps
mov
test
gs
pop
stos
jle
mov
fcmove
sar
bound
add
pop
pop
mov
xchg
xor
out
fstps
mov
cld
or
pop
mov
lea
js
iret
sbb
cmc
cli
repz
cltd
push
mov
test
push
mov
hlt
leave
lahf
cwtl
dec
ret
dec
int3
xor
js
lods
sub
loope
or
mov
lea
sbb
cli
or
repz
lret
outsl
add
dec
out
jo
fsub
or
adc
mov
adc
call
cwtl
das
shl
into
push
mov
mov
mov
pop
lock
mov
push
sbb
je
daa
xchg
cmp
icebp
stos
xchg
lods
pop
ljmp
fsubrs
mov
outsb
or
push
cmpsb
xchg
rorl
push
and
je
cmpb
adc
jle
ret
cmp
outsb
ja
push
gs
movsb
mov
dec
scas
leave
xchg
inc
jge
fmul
xchg
inc
fcmovnb
pop
xor
fnsave
lcall
out
pop
fsubs
dec
mov
mov
xchg
icebp
orl
out
sbb
fcmovb
clc
pop
xor
dec
fimuls
stc
pop
jecxz
test
addl
xor
add
stos
or
outsl
mov
jne
jno
movsl
cmp
sbb
fmull
aaa
iret
cvtdq2ps
mov
dec
mov
dec
out
jge
fildl
sti
sbb
jns
call
lods
mov
sub
ja
orl
rorb
mov
add
pop
loop
or
jbe
push
jae
jns
inc
stos
sub
int3
inc
add
xor
xchg
sbb
add
or
cwtl
movsl
mov
testl
dec
push
dec
push
cmp
faddp
in
or
jne
loop
sbb
sub
repz
orl
mov
movsl
inc
js
xor
gs
push
into
popa
push
rorb
sbb
cmp
pop
jp
rcll
xchg
stos
mov
add
dec
xchg
aam
int3
test
and
repz
out
xor
lds
sbb
cld
push
cli
xchg
xchg
adc
add
loop
js
ss
mov
mov
mov
push
aam
inc
stc
arpl
mov
in
cmp
lret
adc
dec
stc
jb
or
out
mov
jns,pn
inc
add
fstl
shlb
mov
xchg
mov
add
jg
mov
outsl
and
push
adc
ja
push
pop
inc
cltd
enter
ffreep
push
test
data16
push
cmp
xor
andb
cmc
push
sbb
sbb
call
dec
push
push
dec
xchg
mov
fnstsw
adc
xchg
push
mov
lret
pop
daa
ljmp
cltd
daa
jl
xchg
jmp
test
call
push
jle
fiadds
bnd
adc
sbb
and
xchg
test
dec
push
int3
mov
es
add
cmpsl
xor
icebp
dec
and
cmc
icebp
lahf
movsb
mov
add
add
jge
notl
add
loopne
ret
aaa
scas
into
adc
jecxz
jecxz
mov
popa
int
cmp
lcall
xor
pop
stos
divl
fnstenv
dec
or
mov
in
scas
jo
lods
inc
mov
sub
and
daa
xchg
testl
sahf
cmpsb
or
dec
cmpsb
inc
les
xor
fcmove
shrl
popa
push
filds
xchg
loope
mov
add
jmp
push
dec
addr16
leave
push
sub
icebp
rorb
out
and
or
pxor
sub
push
xchg
xchg
pop
xchg
setne
jle
cmp
lcall
push
mov
push
inc
lahf
imul
outsl
pop
nop
cmp
insl
xchg
push
push
inc
push
es
ret
mov
and
fldl
dec
sub
sti
or
ss
cmp
cmp
xchg
aas
inc
jo
fbstp
pop
xchg
xor
sahf
andb
and
xlat
dec
adcl
mov
sti
sub
fimuls
lods
bound
mov
sqrtps
inc
xchg
sub
jl
adc
cmp
cmp
sti
sbb
daa
mov
arpl
jle
rcrb
pop
jle
or
loope
jl
pop
sbb
sbb
pop
inc
pop
cli
cmp
sub
rcrl
in
sub
sub
mov
xlat
loopne
mov
inc
jl
jne
bound
mov
cmc
mov
dec
std
pop
les
pop
dec
fs
or
cs
sarb
and
lods
lcall
and
ror
sbb
jmp
outsb
idiv
sub
mov
in
pusha
dec
pop
mov
je
aaa
in
stc
adc
cwtl
fwait
sub
sbb
push
pop
cmp
sub
mov
xchg
mov
enter
subb
fnstenv
lods
dec
push
jmp
push
inc
cmpsl
push
dec
xchg
sbb
cmpsb
fsubrl
out
enter
and
mov
jae
jmp
sahf
xlat
inc
enter
dec
hlt
mov
push
sbb
mov
movl
sbb
or
or
pop
mov
cmpsl
lock
int3
ret
sub
cs
adc
in
mov
mov
js
loopne
inc
xchg
or
dec
push
mov
mov
in
sar
rorl
pusha
fildll
cmp
sbb
jbe
add
inc
lods
cli
loop
jns
jae
pusha
cmpsb
test
and
loopne
inc
into
xchg
roll
int
imul
ret
into
push
mov
mov
orb
jge
sub
es
fsts
out
lahf
or
sti
in
inc
lods
cmpsl
stc
lods
cmp
xchg
lcall
cmp
int
clc
lea
pop
outsb
dec
insb
call
in
mov
nop
mov
sbb
pop
stc
jmp
or
jbe
dec
mov
je
hlt
or
int
mov
sub
fwait
jmp
pop
mov
inc
push
xchg
pop
into
adc
test
inc
pop
push
pop
insl
cmp
mov
cld
xor
test
mov
mov
add
mov
pop
xchg
cmpsl
mov
push
inc
cmpsl
mov
xchg
leave
adcb
and
sub
negl
xor
dec
addb
mov
mov
or
out
rcl
mov
rorb
sub
and
sub
sti
aaa
xor
movsb
cltd
jbe
out
mov
mov
or
jmp
add
into
lcall
or
add
pop
sub
and
fnstcw
mov
cmp
adc
jne
lds
jge
mov
jae
or
inc
ret
imul
cs
out
ljmp
xor
pop
inc
mov
lcall
enter
sub
xchg
mov
mov
mov
sub
arpl
dec
push
inc
sarl
mov
imul
cs
sub
rcrb
call
cmc
xor
push
push
sub
mov
pop
out
je
fwait
mov
xor
fidivrs
dec
ljmp
cmpsb
ss
popf
enter
and
pop
dec
and
sub
mov
cmpsl
push
adc
movsb
push
sub
aas
movsb
sbb
add
xchg
adc
xchg
xor
and
jg
pop
xor
data16
idivl
sbb
fwait
pop
sbb
xchg
mov
pop
and
add
lock
pop
mov
push
or
fistl
xchg
lds
xchg
lods
sub
mov
inc
pop
jne
stos
pop
pop
mov
adc
jne
daa
scas
pop
call
psllw
jb
nop
arpl
insb
in
loopne
push
xchg
insl
xor
jge
adc
pushf
adc
jb
sbb
push
mov
pop
lret
xchg
xchg
pop
subb
inc
js
movsl
mov
lods
ja,pn
jmp
push
sbb
dec
mov
inc
and
fsubrp
jp
movsb
cwtl
loop
ret
adc
test
push
scas
fdivs
lcall
stos
sbbl
push
xchg
stos
mov
xor
icebp
mov
mov
pop
outsb
cmpl
ret
lcall
out
adc
mov
testb
cs
xchg
cs
mov
push
dec
out
out
cmc
dec
fs
leave
sbb
mov
and
push
adcl
and
addr16
dec
ds
arpl
pushf
jp
or
mov
std
test
sub
mov
and
icebp
pushf
rsm
insl
divl
lock
pop
lahf
mov
and
or
fisubrl
adc
rolb
dec
aaa
xlat
test
adc
sbb
mov
pusha
stc
inc
mov
dec
cmp
mov
inc
ja
sub
push
dec
rclb
imul
dec
or
xlat
lds
mov
ljmp
les
mov
jbe
fcomp
sbb
mov
inc
sti
movsl
xchg
insb
xchg
mov
dec
gs
out
fdivrs
mov
cmp
cmp
pop
fcompl
inc
sub
mov
xchg
and
push
pop
lahf
sbb
mov
test
in
es
shll
repz
pop
mov
in
xor
adc
adc
sbb
inc
xchg
scas
clc
cwtl
adcl
xor
xchg
mov
ret
push
push
mov
push
adcb
dec
and
push
jg
pop
into
cmc
sub
mov
dec
and
dec
push
push
int
pop
stc
out
add
daa
cmpsl
mov
cli
aas
mov
aas
data16
sarl
subl
mov
and
out
push
movsl
jb
add
jns
mov
adc
clc
cs
adcb
xor
lods
mov
stos
dec
ss
insl
fadds
jns
call
and
jno
or
and
out
xchg
inc
andl
xor
popf
fs
repz
mov
lods
loopne
xor
sahf
adc
shll
and
pusha
push
xchg
mov
push
stos
inc
pop
das
push
stos
pusha
xor
loope
iret
repnz
pop
sbb
test
nop
mull
mov
jo
mov
fnsave
sub
cmp
lea
cmp
insb
sbb
dec
ja
push
or
loopne
sbb
aaa
leave
cmpsl
shr
jns
pop
mov
sbb
push
insl
xor
push
leave
dec
xor
xor
adc
aam
mov
xchg
jo
or
mov
stos
cmpl
fstl
inc
cmpsb
lahf
push
stos
in
cmc
ds
fcmovnb
xchg
lea
pop
mov
mov
mov
and
bound
in
mov
loop
and
aad
or
fcoms
cmpb
push
adc
push
adc
popa
loop
popf
jo
mov
rcrb
int
lcall
fistps
mov
enter
cmp
xchg
pop
js
sub
lcall
jg
cltd
pop
int
and
lods
xor
sarb
cmpsl
imul
push
iret
mov
xchg
lret
out
mov
in
push
inc
xor
push
cltd
jp
pop
ret
pusha
sbbb
sidtl
push
mov
sbb
popa
movsl
mov
cld
push
push
out
fbstp
sbb
test
pop
xchg
push
fxch
sub
lods
mov
dec
cmp
xor
dec
std
lret
cmpsl
lcall
sbbl
pop
inc
imul
ds
mov
sub
in
test
adc
loopne
out
and
mov
roll
add
push
jge
push
or
pop
dec
cmp
nop
lret
test
jecxz
aas
repnz
jno
outsb
or
sub
jle
mov
hlt
mov
pop
jp
jle
sti
pop
mov
pop
outsb
mov
cltd
jl
repz
xchg
in
loope
cs
adc
lds
mov
inc
andb
dec
jno
mov
or
cwtl
mov
add
fwait
imul
xchg
jecxz
cmp
lds
aam
nop
inc
mov
xor
sub
or
adc
dec
sub
loopne
sbb
gs
arpl
mov
sbb
popa
push
cmc
int
adc
icebp
dec
pop
and
cltd
stc
inc
dec
adc
mov
mov
daa
pop
loopne
and
sti
lods
cmp
insl
ljmp
and
repnz
or
push
shlb
jnp
sti
cwtl
stc
xchg
mov
orb
fbld
inc
lock
popa
xor
cmp
test
pop
or
dec
mov
loopne
int
pop
outsl
fst
xor
xor
add
pop
arpl
jl
xchg
lock
out
icebp
push
stc
aas
add
lret
sbb
fbstp
xchg
inc
inc
addr16
call
pop
and
dec
cmp
sub
fs
mov
adc
movsl
sbb
ds
sbb
mov
in
flds
sub
jmp
sub
add
je
cmp
mov
nop
fisubl
push
insl
insb
cmpsb
idiv
lock
pusha
jns
inc
mov
push
xor
add
xchg
jo
insb
pushf
popf
dec
mov
sub
cs
xchg
jb
shl
in
incb
js
lock
add
mov
mov
es
aaa
mov
into
les
ds
mov
imull
loopne
push
push
jge
add
push
test
sbb
mov
inc
add
jno
push
jnp
mov
push
insl
and
and
mov
pop
movsl
rorb
push
test
out
filds
xchg
xchg
cs
daa
cmpsb
stos
mov
in
sub
jg
jecxz
test
mov
cmp
shll
sub
push
cmp
push
mov
popa
inc
loopne
xlat
in
mov
mov
add
xor
addr16
jmp
loopne
int3
inc
mov
cmp
push
cmp
and
mov
pop
cmpb
add
cmp
sarl
insl
cmp
jecxz
or
sar
sbbb
lcall
popf
sub
cs
cwtl
data16
loop
imul
pop
push
lds
sub
xorl
repnz
rcrl
add
or
cmp
scas
mov
aad
out
jl
sub
cld
and
xlat
iret
fdivp
dec
adc
mov
pop
das
xchg
es
repz
fst
js
sbb
lods
sub
ret
push
inc
jbe
jmp
neg
call
aam
push
xor
sbb
fs
adc
shll
in
mov
cmp
dec
pop
mov
xorl
push
lahf
xchg
or
xchg
dec
outsl
rolb
jb
xchg
aas
sbb
enter
push
shrl
ret
add
cwtl
xor
pop
mov
xlat
cmp
dec
daa
lods
or
push
imul
pop
jns
fbstp
ret
mov
pushf
push
jge
bound
push
popa
imul
adc
popa
pushf
push
ds
fs
cltd
adc
test
adc
je
lock
mov
push
ja
cmc
adc
sbb
pop
cs
pop
jae
jp
dec
xlat
pusha
jns
imul
lods
xor
jl
addr16
call
cmpsl
xchg
cmc
push
mov
mov
mov
xor
push
pop
add
jle
xlat
out
adc
cmp
test
xchg
cmpsl
aas
xchg
adcl
or
pop
lahf
xlat
and
inc
cmp
sbb
fidivl
mov
mov
mov
gs
jge
js
aaa
push
push
inc
pop
mov
lret
xchg
daa
movsl
push
sbb
jno
pop
mov
fsubs
push
testl
xor
stos
xor
sbb
loopne
loop
pusha
jmp
cld
add
sbb
push
cmp
xchg
imul
sbb
outsl
dec
push
mov
dec
mov
push
movsl
mov
xchg
stc
xchg
xor
push
push
addl
mov
shlb
shr
cld
scas
lock
out
ss
stos
or
rcrl
lret
mov
add
popf
loop
dec
pop
mov
xchg
and
dec
push
test
add
pop
aad
lock
roll
pop
sub
xlat
lock
jl
jns
lods
popa
adc
insl
ja
stc
cmp
outsb
idivl
jo
dec
pop
lods
add
mov
pop
into
pusha
daa
push
jae
push
inc
lods
or
pop
adc
insl
pop
and
pop
push
rcrl
imul
lret
fdivl
adc
add
sbb
push
ljmp
cwtl
ret
pop
xor
jl
push
sub
xor
div
adc
stc
enter
test
adc
dec
je
pop
jbe
sahf
out
sub
scas
hlt
add
test
jb
mov
or
cmp
fsubs
les
in
pop
sub
jb
mov
aad
inc
fnsave
cmp
sbb
cwtl
loope
clc
jne
add
pop
jg
loopne
cmp
cmp
nop
push
xorb
pop
and
cltd
mov
xor
and
mov
cmp
mov
sbb
xchg
lock
adc
jae
test
inc
dec
ret
xor
out
js
xchg
stc
sub
lods
shrl
adc
rcr
cmp
testl
jg
cli
dec
icebp
repnz
push
jecxz
rolb
xor
push
and
mov
sbb
fisubrl
mov
xor
ja
sub
mov
or
inc
icebp
push
std
cmp
jne
addr16
int3
cmpsl
mov
jns
sub
sub
mov
xchg
les
xor
jg
sbb
cmp
sub
pop
sub
mov
mov
pop
mov
jmp
cmp
fisubl
ss
adc
sbb
or
xchg
pop
sbb
cmpsl
cmpsb
mov
adc
fildll
stos
imul
ds
std
add
stc
cld
or
sub
add
and
cli
mov
mov
inc
inc
push
xchg
jp
or
sub
or
pop
hlt
sbb
sbb
jmp
pop
push
jbe
mov
sti
fdivs
rorb
push
sub
int3
pop
jp
bndldx
jae
rcl
add
icebp
adc
call
push
lahf
adc
mov
pop
cld
xchg
arpl
mov
xchg
pop
add
loop
dec
xchg
adc
in
xchg
negb
mov
push
push
push
sub
jl
movsl
jae
pop
movsl
shrd
mov
push
clc
jecxz
sub
stc
push
in
mov
rol
mov
mov
pop
shlb
jecxz
bound
scas
lods
pop
jnp
mov
sbb
xor
mov
repnz
cmp
mov
and
rcl
and
mov
and
and
cmc
dec
push
cmp
aaa
sbb
inc
iret
mov
inc
push
inc
and
mov
cmp
xor
push
or
cmp
dec
xor
xchg
or
lods
or
inc
inc
into
pushf
shlb
inc
pop
or
mov
cli
sti
cmpsl
dec
push
push
in
inc
mov
and
sbb
mov
test
dec
leave
or
pop
ret
lahf
sarl
loopne
adc
add
lret
aam
xchg
and
shl
sbb
aad
cwtl
jae
jmp
lcall
femms
mov
add
xor
push
mov
pop
inc
out
movhlps
pop
inc
inc
jmp
pop
mov
cmp
pusha
jp
shrb
mov
outsb
ss
loope
jno,pn
adc
and
or
loope
inc
inc
rorl
and
cmpsb
xor
push
cmp
cld
jae
scas
shr
xchg
sarb
mov
push
cwtl
popa
les
cmpsb
shrl
adc
loop
loopne
nop
pop
dec
inc
aam
shll
xchg
stos
xor
ret
ds
rcr
into
lahf
xchg
daa
cmp
pop
xchg
xchg
out
fsubrl
mov
inc
fwait
mov
pop
ja
fimull
bound
jns
pushaw
lods
fsubrl
or
mov
nop
jb
ljmp
pop
lcall
xor
cmp
and
ss
stc
aad
in
add
pop
and
leave
lahf
adc
gs
inc
xor
out
jp
daa
pop
adc
jecxz
xor
xor
sbb
imul
imul
dec
sub
loopne
mov
mov
dec
sbb
imul
sub
sbb
sub
mov
xchg
inc
lods
inc
loopne
jmp
mov
xchg
addr16
fwait
mov
dec
sbb
insl
xchg
xor
jnp
mov
int
rcrl
adc
xchg
scas
xor
adc
jl
aas
adc
mov
imul
mov
es
jb
mov
lods
mov
movsb
fldenv
sbb
arpl
xor
add
push
jb
push
bound
sti
mov
fs
dec
rcll
cltd
sub
jmp
cmp
xchg
enter
mov
addr16
mov
sar
and
add
iret
daa
bound
rolb
or
mov
imul
pusha
push
mov
push
addr16
lods
xor
aas
cmp
loopne
add
inc
ljmp
leave
adc
sbbl
pop
lods
insl
decl
adc
cltd
xor
cmc
das
cltd
cli
sbb
test
jno
sbb
repnz
dec
loope
lds
loopne
test
or
and
cmp
mov
mov
stos
dec
cmp
popf
test
jbe
stos
sbb
adc
ficompl
mov
imul
gs
test
inc
decb
push
gs
xor
push
fwait
shr
mov
out
mov
inc
cltd
cmpsb
lods
pop
push
add
cld
inc
xchg
inc
pop
sarb
insl
aaa
aad
lret
inc
push
cmp
pop
jbe
das
and
jnp
push
les
in
add
adc
mov
dec
sbb
inc
fistpl
movsb
mov
paddd
mov
dec
ljmp
mov
aam
push
sub
and
pop
scas
add
movsl
fsubl
mov
std
inc
in
xchg
jbe
daa
in
sub
ret
les
ss
sub
adc
adc
mov
adc
cmp
js
pop
fnsave
sub
js
sbb
jle
mov
cmpsl
lret
adc
arpl
fdivs
xor
stos
mov
xchg
sbb
js
arpl
xchg
int
orb
jmp
lcall
jno
enter
insb
sarl
insb
mov
adcl
pop
xchg
dec
and
mov
lret
test
sbb
sbb
scas
call
movsb
xchg
jg
test
rcll
xchg
cmpsb
dec
fbld
scas
jmp
jmp
insl
adc
stos
xchg
pop
pop
sbb
xor
rorb
aad
mov
into
mov
mov
xor
push
into
xor
lods
fwait
sub
mov
repz
push
lahf
test
inc
xchg
nop
cmpsb
inc
pushf
mov
jo
push
push
sub
in
ficoms
pushf
divb
aad
sub
out
add
push
mov
pop
movsl
daa
mov
mov
icebp
cmpsb
xor
sub
enter
popf
mov
and
push
popf
call
xchg
sub
stos
inc
pusha
xor
xchg
mul
push
testb
sbb
dec
test
xchg
ds
jnp
sbb
xchg
sbbb
arpl
shlb
dec
inc
sub
ljmp
ficomps
jecxz
cmp
xchg
mov
xchg
pop
adc
cmc
ljmp
stos
or
loop
xchg
push
push
inc
xor
or
sbb
xchg
sub
pop
ret
jmp
xchg
pop
fs
sbb
pusha
mov
jno
jecxz
jne
arpl
jns
cmc
shll
fadd
or
jmp
mov
iret
push
cmp
gs
insb
lods
and
pop
ljmp
sti
jo
mov
rorb
aam
test
insl
push
fs
cmp
mov
jecxz
inc
xchg
leave
scas
lods
cmp
jge
fs
hlt
shrl
rclb
test
jns
or
clc
mov
loop
push
adc
jecxz
xchg
inc
stc
mov
das
or
mov
std
push
lahf
std
push
loop
mov
push
ss
push
push
xor
add
bound
add
lahf
jno
or
jmp
or
push
xor
movsl
mov
dec
out
xorl
xchg
std
mov
fldt
insl
jns
repz
jns
hlt
pop
mov
rorl
cltd
lds
sub
mull
add
loope
out
xchg
out
and
add
cmpsb
add
push
dec
rolb
cli
jg
mov
aam
int3
dec
mov
das
call
mov
cmp
xchg
jmp
aad
and
mov
or
lret
push
movsl
and
sub
xchg
mov
cmp
jle
jmp
scas
pop
pushf
add
ss
mov
cmp
pop
addb
mov
jno
loopne
frstor
clc
jb
dec
sub
out
roll
jae
xchg
jmp
xor
jno
cmp
test
xor
mov
push
cltd
loopne
test
jnp
lea
stos
loopne
xchg
scas
shrb
or
lcall
loopne
lea
scas
loop
xor
fucomp
dec
stos
pop
out
fstpl
enter
or
les
sbb
inc
loope
pushf
jno
daa
iret
pop
imul
int
and
les
sub
xchg
pop
in
pop
imul
cltd
sbb
mov
adc
adc
sbb
cmp
xchg
and
jle
out
add
xor
and
test
scas
fxch
enter
adc
push
test
addr16
xchg
mov
outsb
clc
cwtl
stos
xchg
mov
push
out
or
push
mov
dec
negl
jecxz
mov
mov
dec
jecxz
out
push
je
rcl
mov
pop
cld
xor
xor
loopne
sub
pop
pop
xor
or
or
push
add
push
std
out
stc
loopne
push
push
dec
jbe
out
dec
imul
ja
mov
aas
fimull
flds
lods
pop
sbb
movb
xchg
mov
mov
lods
xlat
fwait
mov
mov
jbe
sbbb
adc
sub
or
or
sbbl
and
cmpl
mov
jmp
mov
inc
lcall
xchg
pop
loop
adc
cltd
mov
push
jae
sub
pop
dec
jge
test
scas
hlt
push
popa
bswap
into
push
cs
or
dec
cmpps
popf
xchg
inc
lahf
jmp
mov
adc
and
jbe
sub
ret
movsb
cmpsb
xor
add
lret
jmp
rolb
pop
popf
and
or
test
into
mov
cmp
add
enter
daa
jecxz
adc
jne
lret
mov
nop
inc
mov
push
lahf
in
and
int3
add
dec
and
sbb
adc
iret
jbe
jmp
in
xlat
sbb
pop
jp
rcrl
inc
fcomip
js
pop
divl
sbb
mov
cs
ja
push
jmp
xchg
push
testl
repnz
mov
adc
jbe
cltd
xchg
jg
stos
andb
pusha
gs
xor
in
xor
mov
and
jge
loopne
ss
test
addr16
lds
ret
pop
test
daa
mov
pop
sub
fidivl
xchg
inc
adc
nop
and
cmp
lcall
clc
outsb
aam
push
mov
fcoml
xor
adc
ss
into
mov
cmc
nop
cld
jp
sahf
ficompl
dec
scas
mov
test
mov
ds
xor
ja
clc
and
mov
shr
pushf
stos
and
add
xchg
pop
sub
and
xchg
mov
mov
and
fistl
jg
std
or
stos
fs
add
pop
lcall
stc
sub
ficoms
fdiv
cmpsl
mov
pop
push
jo
inc
or
std
loope
pop
pop
lods
xchg
outsl
ds
out
jg
cmp
mov
fdivl
in
outsl
popf
cmpb
mov
insl
jae
jle
pusha
pushaw
in
fsubs
mov
addb
adc
pusha
clc
fadds
jae
push
pop
sub
ja
cmp
ja
les
mov
ret
popa
xlat
adc
call
jbe
sbb
mov
addr16
ret
xorb
setae
lahf
lcall
int
xchg
rol
lock
inc
idivb
inc
lea
lret
sbb
cmp
rcl
rcrb
ja
mov
adc
bound
in
stc
in
in
sti
inc
std
hlt
inc
popf
mov
loope
lds
es
popa
ret
shl
pop
xlat
sub
mov
lods
lea
mov
das
test
stc
pop
lcall
sub
and
scas
into
cmp
inc
inc
pop
out
add
call
and
xor
mov
xchg
scas
sti
cmpsb
cmp
adc
xchg
inc
inc
insl
cmp
je
pop
pushl
xor
movsb
cmp
mov
mov
sbb
gs
ds
or
ret
les
stc
mov
imul
aad
test
test
inc
dec
sbb
dec
dec
jbe
add
enter
outsl
and
imul
gs
cmp
sub
jbe
mov
out
inc
movsl
xchg
push
or
fmull
or
filds
sti
loop
pop
xchg
idivl
faddl
jne
test
xlat
test
dec
outsb
xor
imul
and
mov
repnz
movsl
ss
loopne
adc
push
and
cmpsb
sub
dec
jns
mov
mov
pop
call
shlb
in
sub
fsubrp
das
lds
repnz
or
inc
sbb
scas
std
movsb
fildl
lods
test
cmp
popa
inc
or
arpl
ret
jp
jnp
fsubs
adc
fcomip
xor
mov
mov
push
dec
cmp
loop
mov
loopne
push
mov
fildl
add
add
cli
arpl
jl
shlb
cli
jnp
ja
rep
xchg
scas
in
out
dec
push
and
call
jle
jecxz
adc
jno
sbb
mov
lds
push
lahf
cmp
xchg
enter
je
loopne
scas
not
sub
mov
test
sbb
jg
enter
test
inc
jbe
jecxz
scas
call
jne
sbb
fnop
addr16
lret
test
test
jp
mov
push
fimuls
jno
pop
mov
idivb
inc
stc
in
or
mov
xchg
mov
inc
loope
add
jp
addb
adc
ja
pushf
mov
ja
lds
lock
xchg
cmp
aaa
push
mov
fisttpll
mov
ret
pushf
sbb
cmpsb
imul
mov
cmp
ss
jmp
pop
sub
out
mov
xchg
popa
fistpll
jo
stos
fiadds
out
scas
leave
in
leave
fsubrs
or
jns
push
mov
sbb
add
not
xor
loopne
and
je
bound
pop
xchg
add
ljmp
xchg
divb
iret
mov
jmp
fadd
addl
mov
mov
out
loopne
mov
ficoms
mov
fisttpl
enter
dec
xor
iret
es
sti
jg
inc
loop
cmp
push
je
mov
xchg
dec
insl
sbb
les
cmp
imul
out
xchg
xor
mov
daa
shlb
xor
sahf
cld
lea
cmpsb
cld
movsb
mov
mov
aad
sub
rolb
mov
adc
data16
arpl
lods
fiaddl
mov
inc
rorb
mov
stos
jle
cltd
sub
adc
lret
cld
jmp
inc
aaa
mov
repnz
ret
bnd
dec
push
rorl
daa
and
pop
add
scas
dec
idivb
mov
cld
jl
sti
dec
icebp
scas
cltd
lds
fs
out
mov
clc
or
mov
xchg
cmc
and
test
lods
dec
push
add
mov
cmpsb
es
shrl
aas
xor
sub
fstl
xor
pop
cmp
int3
jo
imul
mov
and
lea
jp
repnz
addb
test
in
out
aaa
cmp
and
xor
outsb
gs
push
testl
lods
das
stc
int3
mov
jo
sbb
movsl
mov
push
mov
mov
jmp
outsl
inc
mov
test
repnz
and
nop
and
loop
sbb
cmp
xchg
cwtl
or
pop
inc
outsl
push
imul
test
or
setle
scas
filds
ss
add
fbstp
mov
pop
jecxz
sbb
in
mov
push
nop
inc
lock
out
lock
xor
stos
jo
push
pop
jg
ret
and
loop
push
cmp
mov
out
lods
insl
jno
adc
xor
cmc
notl
adc
fadds
icebp
std
mov
xor
inc
push
dec
lods
add
outsb
xor
inc
or
aaa
and
xlat
cli
push
pop
mov
dec
inc
pusha
add
inc
add
jne
mov
sti
jo
hlt
jbe
gs
stos
inc
ret
loop
sub
jbe
push
sarb
xor
push
push
in
fstpl
jns
xor
notl
cmp
adc
fsubrl
loop
loopne
in
leave
push
sti
hlt
push
stos
jle,pn
or
xor
out
pushf
out
test
sub
dec
sub
push
mov
jne
jnp
xchg
mov
jmp
jne
rcrl
fldcw
out
cmovnp
shl
or
stos
sub
dec
lock
dec
clc
push
lods
divl
dec
sbb
dec
ret
es
jge
pop
fists
dec
mov
cld
xchg
and
data16
inc
dec
sbb
cld
inc
in
inc
insl
sbb
push
outsb
sub
ljmp
jo
add
jnp
mov
addr16
mov
adc
adc
cmpsb
test
aad
shrl
mov
sbbl
push
ret
imul
bound
popa
pop
fwait
pop
jg
mov
sti
test
jmp
xchg
out
mov
add
sti
mov
ret
push
pop
arpl
lcall
arpl
test
popa
jb,pn
cmpsl
fsubrs
cmpsb
int3
push
into
jbe
test
and
inc
dec
sbb
fstpl
out
mov
pop
inc
jb
test
adc
fs
rol
jl
mov
pusha
jmp
shl
pop
sub
add
add
cmp
jl
stos
icebp
insl
loopne
mov
push
cmpsl
into
xchg
out
nop
negl
jb
jnp
xor
and
push
ss
jo
fcom
add
jo
ljmp
mov
out
test
test
out
js
push
pop
mov
or
call
je
outsb
sbb
or
lods
cmp
xor
out
call
cmpsl
mov
mov
and
inc
add
xchg
loope
pop
dec
dec
dec
and
xor
xchg
mov
dec
sahf
and
call
bound
jmp
mov
sti
loop
testl
sub
mov
dec
adcb
xor
jo
pop
mov
sub
xrelease
mov
add
sbbl
sub
outsl
mov
mov
nop
in
add
mov
jo
cmc
sbb
aas
xchg
xor
aad
mov
cltd
jo
fbstp
ds
addr16
cwtl
mov
xchg
jae
fldcw
stos
inc
push
arpl
mov
jo
iret
xchg
lock
jns
nopl
out
pop
adc
mov
hlt
rcr
sbb
sbb
xchg
aas
jge
in
lea
sub
xchg
rorl
rcll
stos
arpl
sbb
sbb
repz
push
push
mov
push
shr
lock
sahf
insb
test
mov
mov
fmull
std
jae
xor
bound
jbe
mov
sbb
push
or
lea
aam
mov
jp
stos
lahf
movsl
add
add
je
mov
add
js
ficoms
add
jmp
or
test
jo
imul
hlt
loop
out
sbb
je
loope
push
mov
fwait
imul
imul
ret
mov
xor
stc
ret
mov
scas
sub
into
cmpsl
icebp
mov
mov
pop
aas
sahf
mov
dec
pop
ret
pop
repz
cmc
int3
pop
mov
cli
inc
mov
pop
pusha
jmp
xchg
fnstsw
loopew
inc
lock
push
arpl
in
ss
or
in
sub
outsl
xchg
cmp
inc
shlb
scas
sbb
fsts
and
into
mov
sbb
xchg
mov
jne
mov
subl
pop
fwait
cwtl
das
cltd
or
mov
dec
xor
stos
andl
aad
inc
daa
mov
mov
and
mov
data16
adc
enter
inc
nop
rep
std
push
aas
adc
sbb
adc
sbb
mov
fwait
jl
push
shrl
or
ret
jns
sbb
out
mov
mov
or
and
pop
and
push
repz
daa
aam
lock
vmovq
lods
loope
lret
dec
inc
pop
aad
in
aad
test
push
test
dec
xchg
es
xchg
sub
fimull
lea
ss
push
pop
jns
int3
jae
std
lea
in
mov
addb
sarl
pop
je
ror
bound
inc
add
clc
sbb
mov
sub
pop
rcrb
xor
pop
lea
cmc
dec
sbb
cmp
mov
sbb
dec
imul
outsb
sahf
ja
test
in
in
dec
fwait
cmp
and
xor
mov
pop
push
dec
rorl
insl
or
fwait
mov
dec
std
xor
pop
mov
bound
aas
daa
dec
cwtl
inc
push
mov
push
pop
aas
mov
mov
hlt
in
test
out
sub
aam
test
cmp
cli
test
sub
rclb
shll
test
push
iret
xor
roll
xchg
xor
push
jb
inc
mov
mov
adc
xor
rclb
cltd
dec
push
cmpsb
rcr
loop
push
inc
daa
enter
daa
sub
je
pop
jbe
jl
in
int
int3
or
sti
xor
or
sub
or
add
movsb
and
scas
orb
mov
xchg
mov
subl
xor
rclb
mov
pop
adc
sub
cmpsb
movsb
in
cmc
fldl
mov
xor
call
mov
mov
lahf
shrb
xchg
out
arpl
addr16
mov
and
push
and
pop
outsl
mov
mov
cwtl
mov
test
mov
adc
dec
push
stos
dec
dec
pop
mulb
pop
ss
sub
into
in
lock
add
lahf
std
push
daa
fdivs
fimuls
jmp
mov
dec
cltd
pop
jo
stos
js
mov
in
repnz
pop
pusha
lcall
repz
es
in
outsl
pop
ljmp
or
jne
jl
insb
inc
js
scas
inc
inc
daa
in
test
mov
scas
pop
and
fyl2xp1
fidivrl
inc
stos
data16
aaa
dec
into
test
repnz
jecxz
sbb
cld
bound
add
fisubrs
push
sarl
in
rcr
jae
push
and
test
gs
push
push
or
push
cmpsb
insb
sbb
pop
addr16
icebp
xor
hlt
fsub
lret
push
inc
jmp
sbb
jne
add
test
fldcw
add
out
shl
fidivs
loope
xor
mov
adc
lret
mov
lea
lcall
iret
int
fs
xchg
jecxz
fmuls
hlt
movsb
icebp
cmpb
shrl
shlb
in
ret
push
clc
jmp
add
and
hlt
add
dec
fnstcw
sbb
pusha
movsb
rorb
sbb
sbb
push
adc
shl
test
push
call
push
jl
sub
insb
sbb
dec
and
xchg
subb
pop
jp
andl
jne
mov
inc
push
push
scas
and
mov
jl
stos
xor
sub
inc
outsb
lods
or
leave
shlb
mov
call
or
pop
hlt
stos
inc
jnp
add
ja
out
push
lods
sbb
pop
jo
xor
cld
xlat
add
push
insl
stos
dec
push
cmp
cmp
inc
test
ss
mov
cs
lret
push
cmpsl
lret
mov
cld
cmpsl
cli
mov
xor
imull
aas
test
pop
xor
dec
cmp
jnp
popf
xor
iret
mov
jbe
xchg
or
dec
sub
leave
pop
daa
imul
xorb
aam
leave
jle
xor
dec
sbb
aaa
aam
int
xor
mov
fcomip
adc
push
adc
insl
mov
ja
arpl
into
mov
lret
cmpsl
jp
aad
add
mov
mov
add
jmp
xchg
mov
pop
mov
lcall
cmp
jmp
addl
and
xchg
orb
adc
pop
xchg
imul
lret
dec
ret
fiaddl
inc
mov
scas
cmc
sbb
jecxz
and
xor
sbb
pop
aas
ss
shlb
inc
push
cmp
jne
das
inc
sub
stos
pop
notb
out
or
outsl
fcoml
in
jbe
roll
jecxz
in
int
hlt
inc
pop
aas
push
jmp
das
push
adc
cmp
sbb
nop
dec
jb
aad
in
or
push
adc
imulb
jl
mov
mov
jno
push
and
cmp
cmp
adc
or
adc
pop
int
fs
subb
jae
lret
jb
outsb
fisttps
sbb
cmp
out
jp
jne
mov
add
mov
mov
and
jg
pop
dec
aam
lret
aad
lock
outsb
fildl
xchg
push
daa
int
sti
inc
and
push
sbb
mov
std
cmp
pop
ss
pop
arpl
std
dec
jg
mov
cmp
xor
mov
loope
movsb
mov
ficompl
xor
adc
mov
push
mov
out
aas
mov
inc
in
add
pop
adc
out
jns
fdivrp
pop
push
ds
jle
cmpsb
call
jns
iret
or
repz
mov
mov
test
pop
test
and
jo
jge
sbbl
inc
fwait
inc
fs
xchg
shl
inc
icebp
scas
mov
or
das
aam
leave
dec
mov
mov
or
insb
add
data16
sbb
mov
je
fidivs
push
mov
push
icebp
loope
mov
pushf
jmp
mov
fmuls
movsb
jmp
ret
add
dec
or
mov
jo
jge
dec
dec
or
das
aam
sbb
cmp
pop
adc
fwait
mov
dec
ret
push
mov
loopne
pop
xor
lret
jb
adc
cmp
mov
push
mov
bound
dec
or
je
int
sahf
mov
jge
mov
jbe
jg
stos
jns
cmc
jecxz
les
xor
push
pushf
popf
mov
jle
insb
aaa
push
mov
sub
mov
add
pusha
mov
test
sub
fstpt
add
lcall
mov
addl
push
subl
es
sub
xchg
jnp
sub
cmpsb
pop
mov
lret
lret
dec
call
out
call
fsts
ljmp
jmp
cmp
adc
cmp
mov
adc
add
daa
inc
pop
sbbb
xor
mov
jmp
mov
clc
lcall
mov
jl
mov
dec
dec
repz
sbb
fbstp
lods
shll
xchg
scas
stc
scas
adc
ja
push
pushf
push
push
cmc
pop
les
ret
dec
mov
cwtl
xor
sbb
mov
shlb
cmp
mov
movsl
ret
rorl
inc
es
sbb
outsb
cmp
xchg
cmp
stos
insb
shld
loop
mov
fucom
sub
pop
iret
push
push
outsb
cmc
or
xor
pop
jnp
popf
push
pushf
stc
inc
sub
add
inc
int
inc
and
push
lods
fst
jge
adc
mov
mov
cmc
arpl
ljmp
xor
xchg
jle
je
mov
xchg
fdivrp
cltd
es
push
push
mov
mov
jp
out
cmp
jo
fcomi
pop
xchg
adc
sub
jmp
sbb
inc
xor
inc
mov
lods
mov
jb
or
lahf
and
lods
jbe
jne
clc
icebp
gs
cltd
out
mov
rclb
fmull
sub
cmpsl
sbbb
jae
into
ss
icebp
mov
rorb
or
mov
mov
cld
xor
xchg
push
cmp
jae
mov
and
adc
cs
push
dec
mov
add
pop
and
out
push
out
cltd
mov
les
jecxz
push
jg
push
mov
sub
cmpsb
es
push
test
fucomp
subb
fcmovnbe
decb
mov
imul
test
scas
sub
mov
mov
xchg
adc
sub
cmp
or
lods
dec
js
cmp
dec
pop
andb
and
gs
xchg
std
or
xor
cld
ret
xor
mov
cwtl
andl
dec
mov
mov
into
hlt
js
fdiv
mov
xchg
das
nop
pop
rclb
pop
push
lahf
rcll
mov
cld
adcl
cld
sbb
daa
leave
pop
mov
and
pop
push
xor
cmp
jmp
xchg
mov
adcl
push
mov
xor
sar
adc
pinsrw
sub
pop
icebp
fs
sbb
cmp
or
or
mov
push
ljmp
test
movsb
sbb
xchg
das
lods
test
adc
leave
push
pop
mov
jge
shrl
lods
and
jb
sub
xchg
test
cmpsl
insl
addl
fwait
push
insl
fdivl
adc
add
ljmp
mov
sarl
ja
sbb
rcrb
push
inc
mov
cltd
adc
lods
mov
jg
or
xor
shr
xor
sub
xchg
das
mov
test
sbb
ljmp
iret
cmpsl
inc
xor
inc
cltd
stc
sahf
leave
inc
in
stos
xor
mov
int3
dec
xor
jnp
pop
jmp
es
jno
fdivrl
and
or
faddl
jp
ds
rcr
int
cwtl
int
icebp
mov
daa
in
jecxz
dec
into
stos
cwtl
stos
shrb
and
in
sbb
sub
sarb
out
movsb
insb
sub
pop
sub
pusha
shr
inc
pop
cmp
add
mov
in
lret
cmp
mov
pop
dec
pop
inc
inc
test
sahf
jle
pop
int3
or
fmuls
sub
ficoms
xor
addr16
push
sub
out
ljmp
scas
jbe
out
inc
push
testb
ja
enter
push
pop
or
sub
mov
mov
sub
or
leave
and
movl
imul
jne
xchg
aaa
adc
js
es
lock
push
sbb
inc
idivl
popa
pop
das
cs
inc
xchg
cmp
and
in
cmpsb
insb
xorb
rolb
mov
test
jne
xor
cwtl
cmp
test
sbb
sbb
xor
dec
in
adc
shlb
ror
jl
pop
jae
ss
sbb
fwait
test
sbb
add
test
and
mov
into
dec
mov
sbb
loope
add
xlat
fmul
loop
das
sub
pop
push
lahf
out
daa
rorl
jmp
fmul
cmp
stos
mov
loop
insl
push
sbb
push
pusha
dec
movsb
in
loop
push
cs
lret
inc
es
je
int3
jnp
nop
mov
dec
lods
arpl
cli
fbstp
int3
gs
adc
lahf
mov
stc
xchg
cmp
dec
stos
adc
cmp
fs
sbb
mov
call
xchg
lods
mov
fimull
adc
adc
inc
subb
stos
push
pop
insb
xor
lods
jl
mov
dec
mov
mov
push
movsl
hlt
lret
add
xchg
dec
jns
xor
cwtl
xchg
scas
pop
or
adcb
movsl
stos
fcmovnu
pusha
xchg
add
cmp
loope
popa
cmpsl
cmp
jle
out
adc
fildl
jns
inc
adc
push
push
cli
mov
push
dec
inc
rcrl
out
mov
cli
xor
das
cs
or
call
lret
clc
inc
call
les
in
and
sub
or
insb
pop
cmpsl
cmc
rolb
rolb
jle
xchg
test
pop
inc
xchg
leave
add
popf
lds
imul
push
push
xor
scas
out
ja
adc
aam
and
xor
push
jl
adc
mov
mov
arpl
outsl
clc
xchg
xchg
ds
inc
mov
lods
dec
jecxz
mov
xchg
ret
inc
adc
sub
push
pop
cwtl
insb
ret
icebp
loop
cli
imul
fists
pop
fisttps
loope
jns
fnstenv
dec
jg
xorl
push
movsb
out
sbb
pop
stos
push
outsb
and
es
push
rcrb
or
push
mov
loopne
call
lcall
rcl
loopne
mov
push
jbe
xchg
aam
xchg
aas
sub
sti
sub
inc
lds
sbb
mov
in
outsb
mov
adc
add
lcall
add
jb
loop
sub
fxch
pop
and
adc
popa
mov
jmp
jnp
inc
bound
push
or
inc
scas
mov
incb
mov
call
iret
pop
and
push
sbb
rorb
cli
sbb
ja
pusha
xlat
rorl
dec
nop
aas
adc
sbb
adc
jo
pop
mov
sahf
xchg
mov
mov
fs
sbb
dec
in
movl
xchg
rclb
mov
movsb
inc
outsl
scas
pop
xor
xchg
xchg
inc
icebp
stos
adc
xchg
and
lret
call
maskmovq
notl
mov
mov
inc
xchg
std
out
aam
scas
adcl
out
xchg
jmp
xor
pop
lods
cli
or
bound
add
sbb
arpl
adc
dec
arpl
pusha
pop
push
sbb
cmpsb
int
insl
adc
cmpsl
andb
lods
xchg
test
jb
inc
push
loopne
jb
cmp
lea
cmp
ss
cwtl
std
aaa
add
inc
fwait
cli
cmpsl
hlt
cmp
je
lock
add
lea
lock
cmc
xchg
fsubr
mov
addr16
mov
and
not
enter
cmp
sbb
lods
lcall
enter
xor
int3
ds
dec
into
in
cmp
xor
cwtl
loopne
filds
insb
repz
ss
lock
sahf
jne
out
mov
xor
mov
jnp
adc
ret
idivb
out
mov
dec
inc
add
inc
pop
xchg
rcll
cmpsl
rcrl
inc
jns
rorl
add
and
inc
loop
rclb
jo
int3
aas
fs
push
shr
sub
repnz
dec
xlat
movsb
push
push
jb
out
scas
cmp
mov
std
mov
xor
xadd
vmovaps
rclb
ljmp
pop
scas
sub
jp
xchg
mov
test
test
les
or
mov
adc
iret
idiv
jg
adc
push
push
loope
stc
test
xorl
dec
divb
push
aad
fsubrl
call
cli
push
add
fldl
mov
jecxz
pop
lock
mov
mov
dec
push
pop
sahf
flds
mov
nop
ret
sub
sbb
sbb
mov
inc
xchg
sbb
add
pop
cmp
test
xchg
jmp
ljmp
xchg
fidivs
loope
mov
adc
push
loopne
mov
divb
outsl
ja
scas
shr
into
popa
ss
pop
jle
aas
and
adc
adc
jmp
pop
xor
xchg
inc
lret
insl
sbb
pop
pop
push
pop
adc
nop
push
scas
call
mov
lds
jne
testb
test
push
lods
out
sbb
fstpl
rcl
xchg
jo
or
mov
adc
fisubl
sbb
and
fcom
push
or
pop
xorl
dec
outsb
out
jg
xor
jl
insb
cltd
xor
mov
pusha
add
mov
sbb
inc
imul
mov
cli
imul
push
iret
dec
dec
fcmove
mov
mov
fadds
jne
inc
test
mov
cld
jl
cmpl
inc
add
cmp
or
lea
shlb
es
jle
pop
fdivrs
inc
test
adc
add
cli
mov
ja
pop
inc
stc
push
push
jmp
xor
push
or
cmp
scas
add
inc
jl
in
fcmovu
inc
test
sub
dec
sbb
adc
sbbl
rclb
push
cmp
pop
push
dec
and
push
repnz
xorl
mov
jmp
jo
lret
ja
rcl
lods
ds
add
xor
cmp
mov
and
sbb
pushf
and
adc
add
xchg
adc
push
ss
dec
ds
push
xchg
xchg
in
adc
ja
sub
in
cli
and
jecxz
and
data16
jmp
add
mov
pop
mov
idivl
add
cwtl
cmpsb
mov
push
pop
call
lods
push
adc
leave
xor
mov
loope
lahf
cltd
sbbb
inc
add
cmpsl
out
fs
mov
in
cld
xor
pop
mov
lods
fildll
mov
addr16
sahf
orb
imul
lods
or
pushf
mov
stos
cmc
jae
add
dec
adc
lods
test
call
mov
and
dec
jmp
pushf
std
mov
fnstsw
inc
mov
jo
jb
and
jge
adc
in
fdivrl
xchg
adcb
sbb
adc
add
cli
inc
aad
sti
js
mov
sbb
gs
arpl
aad
aas
pushf
adc
jle
lock
inc
in
je
cmp
xchg
mov
mov
xor
xlat
push
push
pop
dec
sub
mov
mov
inc
cmp
adc
fsubrl
add
loope
pop
cmp
jl
inc
cmpsl
loope
push
cs
push
or
ljmp
push
cld
push
mov
inc
inc
repnz
mov
pop
inc
xchg
loope
and
test
jbe
out
push
lods
into
pop
lds
inc
insl
jo
cld
mov
pop
add
fadd
cmpsl
add
in
and
mov
xor
cs
push
rorb
lcall
pop
sbb
pop
shrl
clc
fisubl
sbb
stos
pop
ret
mov
sub
dec
mov
es
add
add
cmp
mov
mov
xor
scas
sub
icebp
pshufw
jne
rcrl
xor
cld
loop
lods
lods
mov
mov
lods
pop
rcr
sbb
clc
or
insl
and
xchg
xchg
rcll
mov
add
mov
sbb
adc
lods
enter
or
cli
or
shrl
gs
je
mov
jl
out
cmp
lock
subl
jne
ret
jnp
pop
cmp
mov
addr16
xor
and
cltd
jae
cltd
je
mov
xchg
fnstcw
mov
push
jmp
movsb
aam
std
mov
cs
mov
lahf
jne
and
sahf
mov
movsb
pop
fbld
insl
dec
outsl
inc
sti
hlt
mov
ds
xchg
std
leave
push
adc
es
dec
push
adc
push
mov
sti
in
fs
call
in
dec
es
pop
aam
pop
pop
sahf
sub
jle
pop
inc
sub
mov
rclb
fwait
cmp
fsts
ret
inc
sbb
dec
test
ljmp
stos
stc
pop
jmp
int3
rcr
cmpsb
fwait
push
inc
jp
xchg
inc
inc
adc
es
movsl
cmp
out
test
cmp
pop
clc
pop
dec
fucomp
test
or
xchg
xchg
and
movb
aam
adc
adc
push
mov
cmp
jp
mov
stos
jae
test
xor
sbb
sub
lcall
xlat
pop
or
out
hlt
push
call
inc
xor
xchg
jo
mov
add
mov
sub
fld
jle
lahf
insl
nop
sti
test
mov
and
adc
pop
xor
push
repnz
mov
decl
pop
and
inc
lods
insb
push
call
fisttpll
jg
je
mov
cli
sahf
daa
cmpb
lock
mov
adc
jmp
sub
jp
int
xchg
shrb
push
fistl
int
xchg
adcl
xor
bound
enter
sbb
add
ds
mov
jb
sbb
pop
fadd
mov
pop
jmp
test
and
pminsw
hlt
int3
xchg
xor
mov
fidivrs
dec
mov
jne
cwtl
push
test
or
imull
push
mov
dec
inc
imul
es
mov
pop
ds
data16
orl
mov
push
mov
dec
ret
stc
pop
xchg
jb
arpl
jge
outsb
sub
pop
mov
add
push
adc
pop
mov
sbb
std
into
xchg
out
data16
or
lds
adc
sbb
popf
pop
xor
sahf
inc
and
test
sub
testb
aas
push
and
pop
in
pushf
mov
jnp
xchg
shll
add
dec
jne
xor
push
sahf
jns
mov
enter
fs
add
pop
in
dec
sarb
enter
inc
and
mov
fdivl
jmp
mov
divb
dec
pop
add
cmp
call
xor
lcall
sub
shr
in
sub
shl
add
das
add
and
pop
imul
sub
loope
iret
or
jo
aam
lret
insb
movsl
push
shl
cmpsb
fxch
pop
inc
cmpsb
cmp
lods
enter
jmp
loopne
pop
dec
push
xchg
lock
cmp
and
jge
cmp
dec
dec
adc
mov
inc
jae
aas
dec
ret
inc
and
fs
fadd
mov
pop
daa
mov
arpl
adc
sub
sbb
push
popa
lahf
nop
and
pop
and
iret
test
popa
mov
dec
or
mov
data16
sbb
inc
dec
mov
out
and
dec
push
cmp
or
dec
jne
cs
sbb
mov
push
nop
in
mov
fsubr
mov
push
clc
cmp
enter
xchg
testl
ja
fwait
cmpsl
hlt
sbb
lahf
pop
int
push
mov
jnp
int
mov
movsb
dec
mov
lcall
mov
pop
push
hlt
mov
int
loop
repz
cmp
jae,pn
xchg
ret
cmpsb
xorb
loop
or
sub
sti
outsl
loopne
xor
imul
mov
cltd
aas
sbb
ficomps
rorb
dec
sbb
cmp
and
test
imul
cltd
stos
fs
in
shrl
jnp
jmp
xor
xlat
aas
movsl
dec
inc
mov
pusha
sub
js
stos
or
jbe
pop
ss
jmp
jge
fistpll
lea
or
pushf
lods
sti
push
aaa
mov
pusha
lret
icebp
lds
adc
sub
pushf
jl
test
mov
mov
out
outsl
arpl
cmc
xchg
into
lods
xchg
mov
ret
jne
aaa
roll
les
stos
stos
mov
xor
push
jnp
xor
push
out
xchg
push
xor
and
ret
sbb
orl
das
scas
jno
adcb
test
jb
hlt
or
sbb
mov
je
repnz
dec
and
add
mov
or
filds
pop
shrb
xchg
mov
xor
pop
aas
lcall
sbb
jl
xchg
sub
roll
insl
push
out
jmp
push
popa
cwtl
fs
mov
shr
add
insb
mov
shlb
jno
jo
jmp
pop
cmpsl
inc
sbb
fsts
stc
data16
nop
adc
push
nop
add
adcl
repz
cmp
jmp
xor
cmpsb
adc
mov
xchg
cwtl
adc
cld
mov
jecxz
imul
jle
mov
adc
inc
lods
and
aam
cld
xor
scas
mov
lea
cmpsb
dec
insl
mov
jb
push
push
pop
adc
js
mov
jo
outsl
mov
jno
pop
jae
fnstenv
hlt
adc
jo
data16
inc
into
in
nop
fwait
cmp
mov
or
loope
push
adc
lcall
outsb
dec
fldt
mov
push
stos
or
dec
arpl
cmp
dec
jae
dec
add
dec
aas
shlb
lods
pop
xchg
dec
cmc
dec
imul
mov
nop
repnz
add
fdivrl
test
sbb
xchg
out
jg
sbb
mov
ret
mov
pop
mov
and
xchg
jns
xchg
xchg
ret
sub
sbb
adc
inc
jecxz
push
pushf
test
cltd
and
aam
loope
sbb
dec
out
out
adc
ja
push
jge
shll
and
outsl
dec
dec
inc
insb
or
inc
add
add
mov
rcrb
xor
call
les
dec
inc
xchg
push
js
inc
mov
icebp
xor
lods
scas
jp
movsl
in
fs
add
xor
ret
loopne
xor
jl
sahf
inc
scas
or
xchg
daa
sbb
shlb
out
xchg
mov
icebp
sti
repz
pushf
mov
es
mov
sub
movsl
rcrl
rcrb
adcb
mov
push
cli
xchg
mov
rorl
push
inc
push
rol
std
mov
lret
scas
mov
pusha
push
test
aas
dec
lock
sbbl
adc
shll
jo
mov
scas
or
dec
push
mov
push
lock
fistps
cli
pop
xorb
xor
jb
lcall
lock
mov
mov
aas
jno
loope
imul
adc
adc
mov
xchg
xchg
mov
add
mov
sbb
enter
mov
mov
insb
idivl
pop
movsl
push
stos
std
mov
ror
mov
jl
adc
push
addr16
js
add
or
adc
sub
xor
pushf
xor
jns
out
pop
dec
aad
fdiv
lret
mov
repz
ljmp
bound
jg
in
pop
es
lret
dec
addb
or
push
jl
pop
mov
in
bound
pop
push
movsb
push
jl
pop
loopne
dec
imul
imul
jmp
cmp
aas
imul
dec
idiv
adc
push
insl
jg
ret
sub
pop
scas
adc
xor
lahf
lcall
sub
fidivl
mov
emms
rcrb
daa
sub
or
sbb
sub
pop
mov
add
ljmp
jne
out
loope
mov
cld
mov
icebp
pop
mov
pop
jno
pushl
sub
ja
xchg
jl
cmpsl
add
int3
sbb
clc
cld
mov
jp
int
enterw
mov
inc
xor
and
add
mov
mov
mov
adc
in
pop
cmc
add
mov
iret
and
fldenv
out
dec
fldcw
cmpsb
rorl
push
into
adc
pop
push
add
jl
ss
adc
fs
pop
shrl
xor
add
imul
dec
xor
sarb
icebp
fildll
out
cwtl
xlat
xor
and
adc
inc
push
inc
setp
jne
les
inc
lret
mov
js
cmp
aaa
inc
sub
stc
add
sbb
mov
adc
test
loopne
sub
sbb
push
les
sbb
push
xchg
sbb
sub
and
lret
jb
fwait
in
leave
xor
fmul
mov
outsb
aaa
dec
pop
mov
push
sbb
sar
lcall
adc
jns
sbb
outsb
bound
cmpsb
mov
push
inc
and
or
aam
inc
fidivrs
mov
lds
lea
jecxz
sub
push
mov
sub
add
out
push
push
sbb
mov
push
mov
sub
mov
scas
pushf
and
or
mov
dec
fldt
jmp
iret
inc
and
mov
pop
mov
in
out
pusha
rcrl
dec
inc
cmpsl
in
or
and
test
dec
mov
iret
xchg
popf
or
mov
mov
insl
dec
ret
push
add
les
dec
and
xchg
mov
jecxz
insl
jo
mov
stos
rorl
xchg
repnz
push
shll
cmp
inc
xlat
clc
mov
push
pop
shrl
xchg
add
add
push
mov
mul
mov
ljmp
roll
sub
mov
popf
or
stos
pop
and
mov
mov
int
insb
jmp
mov
loop
dec
push
shlb
xlat
xchg
imul
rcll
jmp
sub
addr16
vpavgw
lret
and
xlat
push
andb
mov
mov
mov
test
daa
dec
cld
push
mov
sub
mov
nop
xchg
pop
jp
in
mov
stos
dec
ljmp
lret
push
adc
cmp
jl
lds
arpl
inc
movsb
ss
sub
pop
lods
mov
rorb
iret
push
loopne
ss
popf
sub
adcb
or
aad
ret
sub
ret
inc
inc
pop
je
lea
jnp
mov
mov
jmp
int
addr16
shl
ret
call
xchg
and
outsb
add
in
test
adc
adc
mov
jle
leave
aas
frstor
lret
jg
mov
cld
or
ja
pushf
mov
jb
mov
dec
push
sti
pop
sub
inc
mov
xchg
std
sbb
and
cwtl
js
stos
shll
adc
lahf
add
pop
out
push
inc
mov
popa
mov
push
inc
jecxz
ds
imulb
or
jmp
pop
stos
or
adc
mov
sbb
add
mov
cmpsl
mov
pop
jo
shl
dec
sub
inc
sbb
add
and
je
adc
mov
popa
push
mov
cs
dec
xchg
mov
push
lret
or
and
pop
jp
orb
bound
adc
inc
clc
add
sub
inc
dec
negb
adc
jl
mov
fsubrl
scas
data16
outsl
ret
xchg
imul
add
pop
inc
cmpsb
xor
mov
movsb
sti
mov
sbb
nop
pop
sbb
out
jp
and
in
scas
sub
imul
mov
pop
mov
movsb
cmp
pop
mov
jle
add
adc
adc
lea
xor
push
std
scas
mov
xor
jge
pop
jle
loopne
jmp
call
adc
fsubrl
push
lods
mov
and
in
jae
mov
repnz
dec
addr16
shll
mov
lret
in
xor
or
add
mov
inc
or
fdivrl
inc
and
cld
out
xor
subb
sahf
outsl
or
fdivl
mov
pushf
call
dec
pop
jp
cmp
das
pop
sbb
pop
hlt
or
adc
lret
test
sub
pushf
sbb
dec
mov
xor
insl
clc
in
push
out
mov
xor
mov
mov
ret
jne
scas
push
push
xchg
mov
fldt
inc
xchg
ljmp
ljmp
jg
push
sahf
jnp
dec
test
cltd
sub
xor
loopne
pop
push
and
test
pop
jb
mov
sbb
sub
xchg
pop
sub
mov
mov
xor
pop
les
adc
in
sub
insl
jecxz
jbe
repz
fldcw
mov
stos
pusha
lea
jbe
adc
lcall
sarl
and
xor
cmpsb
cmp
pop
lret
sar
ds
fcoml
je
lods
sub
lds
or
mov
mov
shl
sub
xor
test
nop
inc
aad
push
add
inc
jo
mov
xlat
popf
insl
shl
xor
inc
cmp
mov
jno
pop
fmuls
xchg
add
mov
jne
pop
rorl
xchg
and
xchg
fadd
out
ror
leave
inc
mov
int
lret
ss
movsl
das
mov
nop
and
or
in
push
ss
or
orl
fcoml
xchg
xor
lahf
pushf
cli
mov
inc
sbb
sub
stos
mov
clc
cmc
sbb
push
jle
push
xchg
jb
addb
fwait
inc
insb
inc
and
es
cmp
js
popf
enter
lds
or
push
add
cmp
cmp
mov
mov
cmpsl
nop
int3
pop
dec
adc
loope
xor
xor
ds
test
hlt
sub
jbe
add
rorb
push
lods
sbbb
in
arpl
and
dec
inc
adc
pop
dec
test
sbbl
or
jns
pop
sbb
sbb
push
mov
pop
leave
cmp
lods
fcoms
std
cmp
sub
sbb
fs
leave
divb
or
and
mov
push
dec
repnz
add
push
mov
or
hlt
mov
repnz
insb
or
push
or
cmp
jo
dec
loopne
shll
adc
mov
mov
iret
scas
lea
pop
adc
jecxz
movsl
push
pop
or
ret
sub
js
lods
dec
dec
mov
in
pop
push
bnd
sub
in
and
jg
insl
into
js
cmovg
xor
inc
sbb
fcmovb
xor
shrl
in
fwait
mov
pusha
jno
aaa
incl
ret
mov
push
sub
sub
mov
gs
xor
sti
xor
lret
jmp
sub
sbbl
dec
scas
rorb
mov
dec
mov
cmpsl
lahf
dec
add
out
and
push
or
mov
pop
push
jecxz
iret
and
stos
test
sub
inc
dec
mov
and
test
pop
int3
sub
mov
cmp
mov
jl
jb
loopne
mov
mov
shlb
adc
xchg
imul
cmpsl
push
xor
adc
mov
sub
xor
pop
pusha
negb
xor
imul
adc
dec
cmp
jg
ret
lods
inc
mov
popa
test
push
loop
ds
or
jp
push
mov
mov
mov
mov
cmpsl
pop
aaa
mov
mov
mov
sub
mov
call
out
test
stos
jp
loopne
imul
and
lret
mov
icebp
scas
cmp
cmp
or
call
xor
push
push
dec
fdivrl
jle
jne
add
or
out
mov
add
mov
and
push
les
paddusb
mov
mov
test
pop
int3
or
adc
insl
int3
fistl
ds
jecxz
int
imul
push
outsb
inc
ljmp
cmpsl
shrl
in
enter
in
cmp
sbb
sub
cwtl
xor
cmp
in
fdivs
cwtl
arpl
push
js
pop
push
aaa
xchg
jae
loope
flds
pusha
push
xor
leave
lcall
int3
inc
push
push
pop
mov
lods
ds
xchg
jge
push
sbb
xchg
push
in
or
or
cmc
mov
and
jb
xchg
arpl
pop
sub
testb
mov
mov
mov
add
in
fildll
insl
movb
lea
out
dec
daa
push
and
gs
lods
lock
cli
fucom
testb
outsl
push
insb
lret
loope
enter
lock
mov
stos
jns
lret
insb
aas
popa
add
dec
mov
mov
enter
xchg
jg
and
test
pop
fs
in
push
lcall
lock
loop
shl
inc
push
ss
sub
fiaddl
repnz
out
inc
push
sbb
pushl
pop
cltd
les
mov
dec
int3
push
lds
mov
ja
jo
loope
rcrb
and
or
lea
rcll
pop
out
mov
inc
repz
cwtl
jb
ret
xlat
cmc
pop
mov
arpl
in
push
test
aad
cmp
out
jo
mov
sbb
push
push
bound
mov
jp
fisttpll
push
sub
xchg
pop
idivb
loopne
es
jmp
pusha
or
jb
icebp
arpl
jb
fidivs
adc
imul
pop
inc
push
ficomps
pop
popf
push
repnz
in
out
filds
push
sbb
mov
pop
jne
aad
in
pop
outsb
mov
rdpmc
xchg
adc
mov
xor
jnp
or
mov
mov
dec
push
pop
mov
or
sub
xlat
dec
mov
imul
mov
andb
repnz
cmp
adc
xchg
sahf
lods
push
nop
test
aam
outsb
xchg
in
inc
ret
daa
push
mov
mov
mov
fldcw
and
rorl
lret
dec
and
cmp
aad
add
mov
pop
repz
fists
push
das
xchg
dec
cwtl
push
insb
les
in
sbb
popf
lcall
cltd
dec
pop
test
movsb
pop
in
pop
mov
xchg
stc
ljmp
add
xor
cli
sahf
scas
out
push
adc
push
jp
xor
sub
pop
cli
and
test
rorb
fnsave
push
or
stc
inc
loopne
lock
cli
in
int3
clc
adc
inc
shlb
cmp
mov
cmp
in
jmp
jo
mov
dec
dec
push
sub
jns
in
negb
cli
mov
in
inc
int
jl
ljmp
out
sti
pop
and
sbb
or
dec
mov
imul
sti
das
push
cmpsb
and
test
out
mov
jae
pop
cmpsb
adc
mov
or
mov
sti
jge
jmp
out
or
rcl
in
dec
jmp
adc
f2xm1
push
dec
cmp
outsl
push
jns
push
add
out
dec
add
clc
dec
jl
loopne
daa
jae
ror
addb
mov
std
cltd
movsb
pop
push
push
std
xchg
push
xor
xor
dec
mov
loope
movsb
fidivs
movsl
fildll
js
xchg
insb
test
fnstsw
shrl
and
cld
and
pop
xor
in
popa
pop
jp
pop
cmp
cltd
mov
xchg
mov
xchg
sarb
decb
pusha
mov
in
adc
and
mov
xorb
test
ds
push
rcrl
and
xchg
call
inc
vfmsubadd213ps
or
sti
data16
inc
pop
enter
pop
es
and
mov
sahf
incl
and
shrl
fdivrs
xchg
mov
shr
ljmp
jne
push
xor
mov
sbb
in
insl
push
push
iret
outsb
int3
jle
adc
pop
in
arpl
aaa
mov
call
int3
mov
mov
ds
adc
shr
push
shlb
inc
test
mov
mov
jg
and
inc
aas
xchg
jnp
xor
aad
cs
es
push
jl
xor
cltd
cmp
mov
dec
filds
mov
sbbb
loope
sbb
adc
mov
mov
push
addb
sti
adcb
shrb
xor
adc
sti
add
xchg
call
repnz
xor
sbb
popf
add
stos
out
sub
mov
pmaxsw
pushf
shr
inc
sub
scas
and
add
mov
inc
lcall
and
pop
cmpsl
push
scas
cld
cwtl
int
jmp
jnp
jl
or
xor
iret
inc
rorl
mov
cltd
scas
cltd
ljmp
xor
or
movsb
xchg
adc
mov
cmp
sub
adc
push
cmpsl
int
push
jl
push
aad
int3
cs
mov
subl
stos
notl
mov
in
cs
pop
push
dec
aam
mov
inc
jno
cmpsl
cs
ja
mov
add
es
ss
in
je
and
xchg
stos
mov
lds
sbb
andb
cltd
outsb
xor
insb
mov
outsl
inc
fdivrs
or
pop
shll
fbld
mov
xchg
out
out
inc
or
daa
mov
xchg
dec
push
sub
lods
sbb
mov
dec
mov
inc
mov
clc
gs
mov
out
cmp
push
insb
push
pop
push
sahf
pop
aad
loope
xor
mov
sbb
mov
andl
mov
inc
jl
gs
dec
sti
shll
jl
or
roll
pop
mov
popa
push
sub
je
bound
pop
test
dec
pop
jbe
clc
gs
inc
pop
in
ret
xchg
mov
adc
inc
mov
inc
add
cmp
add
push
jp
stc
lods
fs
mov
inc
iret
jmp
xor
sbb
mov
loop
out
movsl
xchg
in
fwait
addr16
lret
or
in
aaa
push
push
adc
int3
dec
imul
adc
lret
push
cmp
inc
xor
mov
dec
jle
out
pop
adc
fs
dec
push
imul
and
pop
jl
mov
xorl
cltd
xchg
add
scas
and
stc
xor
sbb
leave
cmpsb
fldt
xor
mov
fdivrl
mov
push
inc
dec
xorb
lods
pop
bound
mov
out
inc
ljmp
inc
loope
or
shlb
jnp
mov
jecxz
jno
lods
cltd
mov
sarb
adc
pop
ffreep
mov
sbbl
jmp
mov
sti
pop
inc
test
inc
outsb
dec
sbb
aam
stos
cmpsl
mov
enter
addr16
sbb
jge
fists
jg
imul
icebp
rclb
pop
jb
dec
insl
in
xor
cmp
scas
dec
lcall
xor
jecxz
je
movd
sub
das
sub
in
lods
jmp
cmpsl
push
or
outsl
dec
add
cli
and
jmp
fimuls
in
push
or
fld
cltd
ljmp
repnz
ds
sbb
stos
icebp
and
aas
lock
mov
mov
imul
cltd
or
fdivrs
fs
inc
sti
mov
mov
pusha
push
mov
or
je
sub
mov
loop
mov
cmp
push
add
cwtl
or
scas
jnp
clc
add
imulb
mov
xchg
sbb
out
cmp
jecxz
lahf
inc
mov
popa
pop
inc
jl
jo
inc
lock
loope
sub
fldcw
xchg
or
pop
xorl
xchg
sbb
cli
push
adc
pop
daa
das
inc
cltd
sub
call
sub
push
mov
cs
cmp
inc
lods
into
aam
add
popf
and
loop
ds
cmp
das
loopne
and
test
inc
inc
cli
clc
pop
fdivs
adc
xchg
aad
xor
test
inc
outsl
mov
push
dec
lods
dec
cld
mov
notb
fucomi
es
addr16
iret
mov
jbe
or
sbb
clc
aad
sbb
xchg
pop
dec
mov
test
mov
xor
lcall
loop
lcall
mov
jne
inc
aam
and
push
jo
rol
outsb
adc
mov
ja
and
aaa
xor
lcall
in
cmp
inc
and
mov
aas
pop
stos
sbb
out
mov
sub
dec
das
push
xchg
imul
ficoml
cltd
jno
ret
ljmp
cli
add
xchg
fstpt
js
es
rcrb
and
ljmp
addr16
fbstp
addr16
lahf
gs
pop
xchg
mov
lods
inc
in
aam
gs
adc
imul
jmp
sbb
sbb
cli
add
and
insl
scas
jno
jns
and
gs
pushf
sub
mov
int3
pop
jle
or
add
add
mov
fmulp
pop
xchg
mov
sarb
inc
and
in
mov
inc
je
push
shrl
xor
mov
inc
dec
outsl
mov
cmp
cmp
imul
sbb
mov
negl
cmpsl
or
add
shlb
ret
sub
jmp
testb
cltd
fisttps
jb
aas
ret
nop
fwait
movsb
repz
enter
xchg
sub
clc
inc
push
pop
dec
add
repnz
push
lds
fs
int
in
cmp
mov
jb
mov
shlb
or
ss
adc
mov
xchg
ja
pushf
outsb
or
pop
ret
imul
das
inc
jmp
leave
imul
and
jmp
mov
stc
mov
push
push
adc
jg
shrb
add
fldcw
mov
in
add
adc
push
ret
sarl
fs
ja
mov
dec
lret
or
adc
mov
je
std
inc
xchg
dec
push
aam
dec
push
test
lods
jmp
jmp
es
cmp
lock
mulb
call
iret
jb
push
adcb
hlt
roll
inc
arpl
add
rolb
push
jo
cmp
loopne
or
fstpl
mov
es
push
imul
xchg
ret
aas
into
xor
and
subb
cmp
movsb
ret
xor
xchg
les
lock
sub
xor
insl
and
in
mov
call
loope
call
mov
xor
fstps
sbb
movsb
mov
je
les
xchg
pop
jno
scas
mov
dec
sub
xchg
stc
frstor
in
movsb
cmp
test
sub
stos
je
dec
data16
cwtl
mov
mov
xorl
sbb
cld
add
and
iret
out
inc
leave
adc
inc
aaa
sbb
test
sahf
adc
inc
fwait
jp
add
js
loop
fnstcw
dec
inc
push
jl
xchg
cmp
rcr
scas
cmp
incl
lock
test
xor
in
pop
dec
je
push
insl
in
jnp,pt
lahf
cmpsl
or
ds
xor
dec
mov
pop
call
wbinvd
sub
xor
aad
and
adc
add
imulb
inc
lahf
sar
dec
scas
and
inc
adc
pop
das
and
pop
int
shl
js
or
inc
mov
lea
lret
andl
sahf
push
or
adcb
gs
fdivs
popf
scas
xchg
lea
and
dec
es
addr16
sub
adc
outsl
mov
movsb
shr
fisubrs
xchg
test
mov
dec
jp
call
mov
xor
leave
jno
incb
xor
fstl
out
ljmp
cltd
fdivr
neg
xchg
clc
mov
mov
insl
adc
fiadds
push
out
daa
push
arpl
ds
adc
mov
arpl
push
mov
out
xorl
adcb
mov
mov
pop
clc
stos
push
add
adc
fsubs
push
xor
push
daa
xchg
xchg
nop
cltd
mov
test
xchg
mov
sbb
dec
ljmp
pop
ret
xchg
aad
mov
iret
out
test
iret
mov
cmp
dec
fldt
xor
cmp
gs
sbb
pop
fcmovnbe
ret
cmp
sub
mov
jne
rcrl
test
cmc
xor
loop
out
arpl
inc
or
inc
orb
sub
ds
aad
orl
aas
dec
arpl
jle
sbb
out
dec
pop
pop
outsb
pop
xor
pop
pop
mov
shl
jbe
and
dec
xchg
sbb
loope
and
or
lret
repz
jne
or
mov
mov
dec
movsb
add
bound
mov
cmp
mov
ret
outsb
fstpl
and
pushf
scas
and
rol
inc
mov
sbb
sbb
jl
in
jne
in
xor
hlt
hlt
negl
push
movsl
pop
push
mov
cmp
inc
out
mov
jne
aaa
fiaddl
inc
leave
clc
or
loopne
imul
xor
in
cmp
lock
pop
insl
xchg
ficoml
add
dec
add
js
cmp
es
or
lret
fbstp
fs
cli
in
cmp
xor
jge
jae
rcr
aam
mov
test
pop
cmp
popf
dec
out
lods
pop
jae
icebp
test
sbb
or
push
stos
out
add
and
push
xor
xchg
fcmovnb
mov
mov
inc
xor
daa
rol
in
or
movsb
mov
jl
mov
inc
add
and
decb
pop
push
mov
out
pop
stos
ljmp
imull
lret
sub
lret
inc
mov
mov
jp
cwtl
pop
cmovl
jae
adcb
or
fisttps
bound
sub
mov
cld
inc
lahf
push
or
mov
sahf
push
scas
dec
mov
movsb
or
adc
or
inc
push
lea
loope
inc
stc
lock
ret
test
popa
je
jb
or
enter
pop
sahf
cmp
cltd
pop
mov
loopne
xchg
daa
mov
stos
subb
mov
cwtl
das
xlat
cld
cmp
leave
xchg
aad
in
bound
cmp
sbb
or
xchg
movsl
addr16
gs
xchg
add
push
or
mov
fistps
outsl
xor
mov
mov
cmp
shld
xor
cmp
xorl
and
aam
jg
inc
hlt
push
mov
idivb
ja
lahf
and
mov
scas
mulb
push
xchg
lahf
inc
inc
adc
mov
adc
neg
cmpsl
xor
mov
pop
pop
xchg
push
pop
lock
push
jnp
test
fcoml
xchg
pop
fs
pop
repz
hlt
pop
fmul
mov
ljmp
neg
pusha
sti
int3
std
out
stc
push
fmuls
sbb
jmp
pop
popf
and
jg
cmpsb
in
inc
mov
stos
lods
outsb
dec
mov
dec
lahf
mov
sub
pop
xor
jne
push
subb
sbb
lcall
sbb
jnp
ret
jo
jo
mov
and
mov
mov
fildll
shll
aam
push
and
push
sarl
inc
out
sarb
jl
push
xor
cld
mov
repz
clc
cwtl
add
sbb
rcll
xchg
inc
insb
inc
fisubrs
iret
in
popa
fwait
movsb
adc
je
adc
xchg
pop
or
repnz
mov
addr16
add
push
lock
jl
lods
int
xchg
clc
adc
ja
gs
dec
ficoms
adc
and
shrl
or
adc
fidivs
loopne
xor
loopne
iret
mov
in
lcall
iret
idivb
stos
or
ud1
add
mov
xor
cld
popf
test
adc
sub
jle
sbb
lock
aam
jle
addb
jp
cwtl
mov
or
dec
jl
outsb
push
fistps
pop
push
outsb
ret
and
or
cmp
stc
movsb
out
roll
add
cli
xchg
cmp
fisttpll
cmpsl
pushf
ficompl
insb
call
mov
lea
xchg
and
mov
lods
pop
push
das
mov
dec
pop
lahf
mov
sbb
jne
in
or
adc
dec
push
xor
pop
fnstsw
mov
pushf
div
enter
mov
push
xor
cltd
mov
outsl
and
xor
mov
leave
push
pop
dec
add
shlb
or
cli
mov
xor
loop
idivl
shlb
mov
mov
jo
movsl
mov
insb
xor
inc
loop
pusha
insl
dec
dec
or
mov
pop
cmp
pop
cmp
popl
adc
lret
nop
fwait
cmp
icebp
fpatan
jecxz
shl
mov
out
adc
lds
push
mov
bound
add
test
nop
lds
mov
lret
movb
inc
movsl
jg
pusha
adc
cmpsb
mov
sbb
popf
jbe
jge
repz
test
out
lods
and
ja
sahf
sti
push
jne
push
mov
push
clc
sbb
clc
aad
xlat
push
loop
leave
xchg
scas
mov
adc
and
mov
pop
es
stos
xchg
adcb
ds
pop
pop
std
sub
cmpsb
dec
and
xchg
xor
mov
jmp
mov
push
mov
ss
hlt
and
adc
cmc
hlt
cs
jp
stc
sahf
mov
js
out
stos
xor
fiadds
jo
and
mov
cmp
dec
out
inc
pop
inc
fldpi
shll
jg
mov
aaa
adc
push
cmpsl
adc
adc
dec
jno
lret
dec
cmp
call
cltd
in
aaa
mov
test
addb
cmp
sub
ret
cmp
push
outsl
mov
add
cli
popa
icebp
ret
push
mov
ja
mov
add
icebp
lret
leave
mov
insl
mov
lods
pop
out
mov
xchg
fcoml
les
mov
jno
mov
and
pop
in
sbb
fs
xchg
jmp
push
mov
push
jb
lods
loope
sbb
aas
mov
rcl
iret
add
scas
cmpsl
test
aam
sbb
imul
cltd
mov
js
add
jb
add
sbb
add
push
and
test
ret
insb
inc
out
popa
inc
xchg
and
test
nop
sbb
call
cmp
sub
adcb
xchg
pushf
sub
jbe
sbb
lods
lahf
mov
cmp
aad
mov
insl
testb
mov
jno
cwtl
je
mov
stos
push
out
or
lret
ja
mov
sub
fstps
lods
je
insl
dec
int
mov
dec
stos
sti
loope
std
aaa
add
scas
jecxz
push
stos
push
into
les
xor
inc
push
pop
jo
lret
fnstcw
loope
aaa
fnstenv
sbb
mov
lods
cmc
or
pop
cld
adc
mov
mov
or
cmp
xchg
addr16
mov
pop
ret
fneni(8087
adc
push
push
or
icebp
addr16
aam
divl
repz
add
xor
ret
pop
gs
mov
je
int3
inc
fs
leave
loop
push
test
mov
sahf
bound
out
xchg
jae
dec
jne
icebp
jno
pop
adc
ljmp
xchg
or
mov
jnp
int3
add
jecxz
movsb
xor
ds
dec
jno
push
enter
jg
mov
cmp
int
out
fldenv
insb
test
jp
cmpsb
mov
inc
stos
or
sahf
sub
jle
mov
pop
cmpb
jae
push
sahf
xor
cmp
imul
add
sahf
shll
repnz
ds
push
bnd
movsb
add
stc
cmp
dec
inc
add
cld
outsb
jo
inc
rcrl
lcall
adc
dec
sub
inc
scas
add
test
adc
imul
cwtl
data16
adc
cltd
pop
arpl
mov
andb
fs
scas
push
xor
scas
add
xchg
xor
out
sub
jge
mov
push
out
mov
insb
imul
insb
cmp
sbb
imul
data16
loop
and
xor
mov
adc
or
and
xor
jle
ljmp
mov
sub
mov
cmp
jmp
stos
imul
sbb
xchg
int3
movsb
outsb
mov
cli
xor
les
mov
icebp
xchg
sub
and
and
inc
shlb
pop
dec
rcll
jns
enter
lods
rorb
xor
push
out
xor
jbe
mov
jmp
jae
lahf
xor
jp
xchg
out
mov
sbb
addr16
icebp
xor
pop
pop
cltd
int
mov
jp
xchg
ret
cmp
dec
jns
mov
movsb
fldenv
and
stos
cli
mov
mov
adc
mov
rorb
inc
fcomps
pop
xor
mov
mov
lock
lret
push
jle
adcb
and
lock
cmp
inc
fistpll
sbb
cmp
or
in
jnp
gs
jp
pop
push
aas
leave
push
push
pushf
add
cmpsb
mov
loopne
das
push
and
mov
pop
shll
cmp
scas
arpl
cmp
mov
push
and
push
push
dec
jns
mov
mov
sbb
sbb
mov
mov
and
gs
xchg
out
orb
mov
lret
int
sbb
in
ja,pn
sbb
fiaddl
out
in
or
pop
insl
and
orl
fisttpll
adc
xchg
xor
xchg
popa
das
gs
ds
les
xchg
sub
mov
xor
pop
mov
push
jp
lock
xor
loop
mov
xor
sbb
add
sub
xlat
xor
in
notb
pop
popf
xchg
bound
sbb
clc
je
xchg
mov
nop
daa
loopne
aaa
pop
icebp
cmc
pop
inc
adc
and
iret
enter
mov
in
int
cltd
int3
inc
insb
mov
aad
xor
aam
psubusw
or
je
int
sub
mov
cmp
cmp
movsb
movl
aad
js
test
aas
movsb
push
movq
out
loope
addr16
add
and
xchg
mov
adc
mov
cmpsb
aaa
addr16
cmp
aad
sahf
test
pop
fimull
mov
sahf
pusha
lret
or
insb
lods
sub
sbb
popf
mov
or
std
xor
in
mov
data16
loope
test
pop
test
out
or
int
mov
shlb
je
mov
dec
fxch
jle
and
cmp
fxam
repnz
aam
and
mov
inc
call
mov
outsb
dec
in
xchg
lds
insl
xlat
or
inc
fdivr
cmp
test
adc
xchg
mov
repnz
test
or
ja
lds
cmpb
stc
inc
xor
jge
pushf
psllq
sub
mov
aad
rcl
subb
push
cmp
enter
adc
idivl
std
icebp
mov
sbb
aas
sub
nop
push
aad
mov
test
imul
rclb
mov
packsswb
test
pop
adc
mov
add
aad
jge
shrl
jp
mov
pop
fisubrs
imul
push
inc
jne
adc
lods
sbb
jbe
mov
jle
lret
xchg
pop
pusha
xor
icebp
in
cwtl
push
pop
in
dec
jnp
aam
movsb
sbb
shlb
test
mov
cmpsb
lods
sbb
stc
pusha
mov
pop
and
leave
hlt
je
movsb
imul
sub
push
into
in
js
cmp
sub
push
cwtl
jp
mov
push
adc
pop
jg
scas
cmp
mov
ret
scas
in
andl
mov
outsl
enter
movsb
shlb
mov
pop
or
outsb
sub
jecxz
movq
inc
xor
in
cmp
iret
mov
push
mov
test
xlat
dec
push
mov
jl
outsb
push
pop
out
sub
xchg
dec
mov
lods
adc
jno
icebp
push
incl
icebp
jge
call
std
hlt
mov
insl
jne
sub
lcall
pop
aam
jns
pusha
aad
and
xchg
insl
mov
out
loop
ss
call
mov
rorl
dec
mov
pushf
push
xchg
sub
jp
pop
inc
pop
jo
addr16
jne
jl
inc
jle
inc
add
cld
dec
push
sbb
mov
mov
dec
mov
dec
xchg
loopne
andb
out
movsb
outsb
pop
clc
lods
dec
cmp
aaa
pop
insl
add
and
rorb
sub
clc
add
xor
sbb
sub
inc
test
mov
pop
mov
sub
stos
data16
rcrl
sub
jne
inc
lahf
xor
xchg
repnz
sub
cld
and
outsl
loope
out
add
pop
fcmovnbe
or
movb
mov
movsl
in
fidivl
and
and
bound
push
je
xchg
nop
cmp
mov
imul
faddp
cmc
mov
aad
mov
inc
cmc
orb
ror
inc
and
jmp
push
cmpsb
idiv
or
lret
push
std
lds
xor
sbb
sub
insl
xor
mov
push
ds
xor
leave
fisttps
popf
outsl
and
cmpsl
mov
xchg
imul
in
andb
sbb
leave
and
or
testl
cs
imul
into
jae
sub
repz
jmp
int
sub
xrelease
jbe
enter
test
xlat
pop
push
imul
aam
test
fstpt
iret
jae
inc
jnp
fdivl
int3
add
dec
jnp
push
imul
daa
mov
jno
fsubr
cmp
xlat
push
dec
rcr
lahf
mov
push
push
mov
cmc
imul
nop
shr
insl
add
pop
arpl
adc
inc
cmpl
repnz
lret
int3
pusha
imul
hlt
and
sbb
inc
leave
adc
add
out
xchg
popa
int
xchg
xor
aas
xor
lea
cltd
std
cmp
xor
aad
insl
int3
mov
and
cs
aam
pop
sbbl
and
push
xchg
sub
inc
sbb
imul
cld
ret
and
mov
aas
jb
cmp
je
inc
lret
mov
sub
scas
and
fisubl
xlat
xchg
push
fsubl
or
int3
daa
jnp
add
or
pusha
adc
sbb
jmp
mov
stc
adc
cmp
iret
sbb
rol
xor
out
pop
sbb
out
mov
sub
popa
aad
mov
es
nop
rorl
xchg
lods
mov
dec
xor
push
cmpsl
js
adc
faddl
outsb
mov
insb
sub
int
and
sahf
jmp
shl
cmpsb
ja
xor
repz
data16
sbb
pusha
popf
loope
xor
jnp
in
push
push
addb
icebp
mov
test
push
add
push
in
imul
pusha
cmp
xorl
out
ljmp
mov
jne
inc
push
cli
mov
pop
mov
test
outsl
inc
cmp
sub
into
test
sbb
push
pusha
sbb
pop
cmp
mov
dec
mov
and
test
fisubrl
adc
les
loop
jns
pop
xor
mov
lcall
mov
mov
xchg
cmp
stc
les
push
into
leave
pop
hlt
add
xchg
lret
jl
jae
arpl
mov
orb
lcall
or
outsb
jg
clc
in
adc
inc
and
pop
hlt
fidivrs
loopne
fnstsw
pushf
nop
xchg
fwait
outsb
cld
xchg
inc
sbb
add
push
mov
mov
lods
mov
fidivrs
xchg
xor
cli
push
push
bound
shll
fists
jae
daa
aas
nop
insb
xor
inc
mov
shlb
lock
mov
fcom
movsl
out
and
cmpsl
fmull
in
adc
mov
lods
in
push
xor
sub
fs
in
jne
mov
sub
test
sub
ss
negb
stos
pop
lds
lods
push
sarl
ds
stc
pushf
xor
inc
sub
outsl
add
lock
mov
int
push
xor
inc
pop
shll
sub
jp
lret
add
mov
xchg
mov
xlat
mov
ficoml
leave
push
xchg
jecxz
movsl
out
rorb
rclb
and
xor
cmpsl
lret
aas
out
cmp
mov
push
add
lcall
sbb
adc
jmp
mov
push
in
jp
shrl
lods
fs
mov
repnz
int
push
add
scas
shrl
inc
cmp
popa
inc
push
leave
shll
lret
sahf
xor
or
cmp
repnz
aaa
sti
dec
cld
ret
in
sub
lds
or
sbb
inc
jo
sub
in
push
or
sbb
stos
mov
scas
push
or
jno
add
sub
sbb
fldcw
jo
mov
push
stc
into
jae
adc
call
sbb
mov
lds
xor
loopne
roll
sub
mov
cmpsb
imul
pusha
sbb
loop
mov
loope
push
dec
int3
xchg
ret
push
mov
mov
pop
sbb
adc
add
sbb
push
or
sub
sbbb
shlb
dec
data16
mov
sub
shlb
lret
ss
dec
scas
faddp
mov
sbb
enter
lret
or
inc
ss
aaa
nop
xor
lods
clc
inc
dec
ret
clc
push
xor
xor
pop
pop
cmpsl
in
and
sub
add
outsb
pop
cld
xchg
xor
pop
xor
pop
es
iret
std
push
imul
push
pop
adc
addb
popa
xor
jns
mov
pusha
pop
dec
mov
dec
fdiv
sbb
jle
and
and
mov
cmc
sahf
xor
call
out
pusha
pop
jne
cld
icebp
push
sbb
outsb
xchg
fiadds
nop
fldt
in
cmp
iret
mov
jp
rcrl
fsub
push
icebp
sub
subb
stc
sub
stos
ja
fwait
out
sahf
push
xchg
je
icebp
jge
insb
push
mov
js
xor
call
leave
and
and
jmp
push
or
jl
sti
or
push
mov
jle
mov
loope
repz
js
xor
and
sbb
mov
das
cmpsl
loop
das
cmp
xchg
es
lds
daa
adc
int3
insb
mov
xchg
mull
fsubp
stc
in
data16
mov
popf
push
pop
sarl
icebp
enter
mov
rcrl
xchg
icebp
sbb
push
pop
push
pop
rcr
rolb
cmp
adc
or
xor
mov
pop
cwtl
dec
jg
dec
imul
lahf
push
adc
jne
sarb
add
sbb
mov
jno
popa
arpl
fcompl
dec
outsb
orb
xchg
scas
ljmp
or
call
ja
push
sub
mov
stos
push
mov
aas
out
mov
sub
data16
adc
mov
adc
ljmp
bnd
xchg
jnp
and
repnz
or
dec
fstpl
xor
stos
test
cmpsl
pop
mov
xor
lock
popa
ficompl
jne
leave
mul
xlat
sub
in
test
add
xor
aam
lock
xor
fcmovu
mov
in
mov
ret
outsl
inc
int3
pusha
leave
in
cmpb
std
rcrb
xor
or
dec
push
mov
stos
mov
adc
inc
mov
es
sti
shrb
les
add
das
lods
stos
je
push
ss
je
jp
cmp
xchg
push
cmp
test
adcb
jae
inc
icebp
xchg
ror
push
repz
cld
push
jno
push
mov
mov
xor
out
int3
push
aaa
cwtl
sbb
xchg
cmp
add
push
mov
push
sbb
aad
in
sub
lret
push
push
loopne
loope
or
rcrl
jno
insb
sub
mov
xchg
xor
jb
lret
mov
and
test
data16
or
inc
sub
imul
fdiv
mov
in
cmpsl
stos
in
dec
pop
in
scas
addb
std
ja
xchg
xchg
test
fcoms
test
inc
mov
stos
mov
or
mov
hlt
sarl
inc
add
sbb
push
out
fcmovb
fldt
xchg
notb
jecxz
jmp
sti
jle
sbb
mov
inc
leave
sbb
fwait
ror
cmpsl
inc
or
sahf
xchg
int
sbb
nop
ret
dec
or
inc
xor
push
dec
paddusw
xor
shl
jge
mov
or
je
mov
xchg
mov
rcrb
cmp
xchg
fucom
div
adc
sub
mov
push
sbb
mov
pusha
out
test
aaa
sahf
dec
inc
xlat
inc
inc
int
sub
in
in
xor
out
jb
xchg
mov
sub
ret
and
pushf
aas
negb
inc
adc
clc
imul
mov
xor
push
lahf
test
push
cmp
mov
jle
mov
lds
aad
std
cwtl
ja,pn
fcmovnu
sub
hlt
popl
xchg
int3
icebp
and
mov
pop
dec
js
xchg
mov
dec
jmp
add
sub
jbe
jg
sbb
ret
xor
inc
xchg
cld
fdivp
push
std
xlat
jbe
insb
sub
sbb
mov
pop
out
dec
outsb
insb
mov
addr16
aaa
ret
mov
dec
sub
inc
lret
mov
inc
or
in
or
inc
nop
out
sub
and
fwait
repz
loope
out
shl
sub
adc
lret
cmp
mov
cmp
push
jno
movsl
arpl
loope
and
push
add
cmp
push
imul
jmp
in
push
jnp
aad
add
mov
mov
test
mov
xchg
imulb
fwait
into
xchg
aaa
inc
test
pop
push
sub
inc
fwait
mov
cmp
ret
jl
mov
pushf
sahf
andl
pusha
movl
imul
fldcw
pusha
in
fsubrs
shlb
jno
lea
cmp
sbb
inc
decl
fsubl
in
sahf
repz
inc
test
mov
sbbb
mov
ljmp
adc
movsl
cmc
xchg
aam
imul
enter
mov
bound
xchg
push
mov
cmpsb
daa
adc
shl
fbld
mov
pop
shrb
dec
dec
or
sahf
in
xchg
mov
inc
push
or
jne
std
popf
sahf
es
mov
sub
std
dec
jnp
cmp
jne
das
sbb
add
push
sbb
xor
inc
decl
jne
into
insb
arpl
mov
dec
lret
daa
movsl
ljmp
jne
mov
pop
xor
mov
mov
and
jg
scas
dec
dec
mov
out
dec
repz
xor
pop
mov
or
repz
mov
xor
xchg
cmp
gs
sar
fnstcw
dec
jb
insl
lcall
shlb
pop
xor
sub
dec
inc
xor
popf
test
popf
dec
aam
out
aam
pop
cwtl
inc
out
mov
enter
scas
in
cmp
xchg
mov
mov
mov
xchg
out
add
les
rolb
inc
mull
subb
daa
and
lcall
sbb
addb
xor
cmp
repz
inc
pop
nop
jbe
mov
std
mov
mov
adc
inc
mov
jns
aad
sbb
lcall
jmp
push
jp
aas
pop
fmuls
mov
out
sti
mov
jg
scas
data16
pop
push
add
lods
push
pushf
sarb
jp
xchg
aas
mov
popa
or
or
fs
cld
test
mov
adc
inc
jb
add
ss
and
dec
xor
fimuls
out
cmp
jmp
nop
cmp
xchg
out
lods
mov
and
push
jae
into
pop
cmp
movsb
push
fdivrl
nop
and
push
inc
jo
or
mov
out
add
shlb
adc
adc
leave
loope
rcl
mov
jbe
lods
pop
les
xor
sahf
jecxz
sbb
sti
gs
xlat
push
sbb
addl
pop
push
and
xor
ss
push
cltd
lret
jns
xor
push
je
jmp
mov
pop
push
outsb
stc
mov
push
into
adc
xchg
mov
ret
push
in
sti
sarl
jg
pop
or
adc
leave
rorl
xor
or
bound
push
mov
popa
insb
hlt
negl
or
scas
adc
je
stc
dec
sahf
mov
mov
rcl
es
iret
dec
cs
pop
data16
iret
mov
or
cwtl
fdivs
mov
push
xchg
movsl
lcall
out
add
inc
mov
inc
nopl
inc
xchg
pushf
jnp
pavgb
jmp
sbb
and
shl
jno
cmp
inc
xor
pop
dec
jle
mov
lea
or
imul
loop
mov
and
cmp
push
pop
subb
mov
xchg
jnp
fistpl
pop
cld
mov
inc
mov
xor
repz
xor
fidivs
dec
insb
fiadds
out
xchg
sti
mov
test
and
cmpsl
andb
add
inc
jb
push
sbb
xchg
or
test
push
arpl
stos
push
dec
mov
fsubrl
mov
jne
out
push
add
nop
cmp
push
fbld
mov
sub
cmp
inc
mov
inc
mov
pop
in
out
sbb
into
test
bound
movsb
testl
test
mov
jp
shl
stc
inc
inc
push
nop
lahf
mov
inc
je
push
pusha
and
mov
idivb
lahf
pusha
mov
dec
loopne
in
push
fdivrs
xor
fdivl
dec
mov
jg
popf
mov
lods
sbb
xlat
jae
dec
out
pop
pushf
fisttpl
sub
out
mov
mov
inc
add
je
enter
lcall
das
insb
inc
call
sbb
paddsb
fsubrs
and
loopne
mov
push
imul
fidivs
cmp
inc
psllq
xlat
out
sbb
test
adc
fsub
inc
mov
test
movsb
xchg
cmp
xor
and
xor
add
mov
pop
jne
test
pop
xor
push
dec
add
xor
repz
pop
fwait
jl
inc
andnps
xchg
fmull
mov
insl
popa
push
addr16
shrl
cmp
adc
mov
adc
lret
pop
inc
aaa
andl
push
andl
push
and
mov
jge
sbb
jne
clc
sbb
and
lods
gs
push
rorl
pusha
fmuls
lcall
fwait
sbb
icebp
idivb
idivl
mov
fwait
ss
sub
and
ja
pop
js
insl
adc
movsl
std
mov
std
fimuls
mov
insb
xlat
test
cwtl
or
push
std
sub
xchg
aad
mov
jae
xorl
xchg
cmp
sti
inc
nop
bound
mov
dec
andb
cli
xchg
jl
cmpsb
cmpsl
out
push
lret
cmp
or
arpl
mov
jae
fcmovnu
std
adcb
push
ret
adc
inc
sbb
ss
push
imul
movsb
push
and
out
jmp
ss
jno
mov
adc
dec
test
cmpsl
jns
aaa
jge
pop
ja
pop
add
and
clc
cmc
lahf
pop
and
call
rcrb
push
xorl
lahf
stos
jo
movb
sub
or
jecxz
mov
mov
mov
cmp
cmp
pop
sub
xchg
test
jno
dec
fistl
mov
fistpll
cmp
xchg
stos
cmp
mov
out
inc
adc
pop
jle
inc
push
int
jno
or
mov
sub
lods
arpl
pop
test
and
jb
sub
ret
das
cmp
jecxz
das
out
lds
shll
sub
div
xor
xor
sbb
sbb
jbe
sub
sub
cli
push
mov
into
ja
mov
dec
mov
in
sahf
mov
fcmovu
lea
jmp
pop
ja
and
mov
repnz
dec
ret
stos
outsl
out
jno
mov
jle
xchg
cmp
inc
sbb
xchg
xor
and
jbe
mov
inc
iret
dec
int
jle
sarl
cmp
stos
aas
adc
popf
dec
sub
or
sub
mov
dec
push
rorb
add
inc
scas
push
dec
mov
hlt
ja
xor
repnz
movsb
mov
iret
mov
xor
shrl
or
lods
mov
pop
mov
pop
notb
stc
and
out
roll
fisttps
sbb
adc
mov
ja
inc
xor
xchg
mov
and
sbb
adc
dec
pushf
cltd
into
mov
xchg
cmp
jne
ret
movl
std
fnstsw
sbb
dec
pop
inc
lods
mov
incb
jbe
stos
iret
xor
mov
mov
in
mov
mov
jecxz
fs
or
pop
mov
mov
je
lock
jbe
lods
shlb
popf
inc
pop
jo
lock
cmp
cmp
sub
jge
push
sti
jns
ljmp
add
lea
ds
fs
popa
loopne
stos
cmpl
call
push
popa
dec
test
mov
mov
lock
movl
fisubrs
inc
aas
mov
inc
xchg
push
push
mov
lret
out
cld
mov
arpl
dec
lods
mov
out
push
test
pop
daa
push
repnz
loopne
jg
addr16
push
or
cmpsl
lahf
rcr
addl
fs
add
and
add
dec
and
jne
test
mov
movsb
dec
or
pop
shll
lods
movsb
push
sbb
stos
xchg
cmpsb
js
mov
sub
inc
xchg
mov
pusha
mov
jg
xchg
insl
dec
aaa
push
mov
addb
push
sub
arpl
in
mov
inc
fwait
or
hlt
cmp
cltd
bnd
push
jno
push
jne
frstor
popa
test
sarb
cli
mov
lods
add
sbb
mov
pop
mov
insb
mov
push
cmp
lods
sub
push
pushf
jg
cmp
mov
insl
iret
dec
lea
mov
cltd
cmp
adc
add
ret
and
popf
cwtl
fwait
cmp
push
mov
scas
and
hlt
mov
mov
mov
mov
dec
addr16
or
xchg
jbe
fcmove
shrl
inc
xor
xlat
pop
fisubs
inc
pop
in
dec
and
in
mov
ljmp
pop
lock
xchg
lahf
add
push
sahf
xchg
xchg
out
mov
jbe
mov
daa
fs
mov
push
sbb
cli
fwait
mov
mov
mov
cmp
jae
xchg
lret
imul
jmp
mov
xchg
pushf
popa
dec
jno
ds
sub
in
add
jo
out
movsl
jmp
mov
or
push
sbb
xchg
hlt
movsl
jbe
cwtl
inc
sti
fndisi(8087
ss
push
mull
insb
cmp
inc
stos
xchg
or
and
cltd
cmp
mov
cli
ja
addb
call
and
sbbb
mov
xchg
mov
scas
fbstp
sub
pop
ljmp
in
sbb
and
jg
inc
sbb
xchg
mov
xor
pop
addr16
push
adc
iret
mov
push
sti
cwtl
dec
push
lea
xor
cmpsb
stos
xor
das
pop
ss
sub
imul
xchg
add
ds
movsb
jo
sub
cwtl
mov
call
sub
add
ljmp
or
cs
add
aas
stos
xor
aas
arpl
push
cmp
inc
push
sbb
mov
inc
fwait
sub
dec
call
sbb
mov
jbe
mov
cli
cmc
popa
js
fadds
loop
outsl
sub
fadds
jp
in
int
popa
sbb
shrl
cmpsl
mov
inc
xchg
outsb
btc
sbb
push
nop
lret
cmpsl
lods
pop
mov
xor
sbb
test
xor
inc
lock
mov
cmp
xchg
mov
dec
icebp
inc
mov
cmp
inc
xchg
out
out
ljmp
aam
push
sbb
mov
scas
dec
mov
jae
movsb
jge
pusha
add
scas
or
outsl
into
aaa
ret
out
daa
lock
mov
icebp
scas
insb
inc
push
aas
sub
cmc
and
push
add
cltd
fs
dec
adc
lcall
in
jae
insl
push
mov
rcll
lock
ret
adc
push
sbb
sbb
sub
orl
jecxz
addr16
aaa
or
push
negl
lret
in
data16
inc
out
addl
xchg
cmpsl
test
push
icebp
popf
ret
fadds
daa
add
mov
add
ret
pop
je
loop
push
popf
jecxz
cld
hlt
cmp
mov
out
sub
addr16
mov
fwait
inc
dec
inc
aaa
js
or
cmp
cmp
and
imul
mov
mov
insb
test
jno
or
not
and
mov
daa
jl
lds
scas
sub
xchg
sub
hlt
mov
jl
dec
dec
dec
movq
push
mov
hlt
or
cli
out
push
xchg
push
rclb
mov
push
sbb
inc
cltd
dec
jl
dec
mov
or
insl
int
sub
inc
adc
roll
int3
push
idivb
jge
jnp
pop
push
jmp
push
mov
cmpsl
push
xchg
in
push
fldt
lods
test
adc
fstps
out
xchg
dec
mov
lods
jmp
mov
inc
iret
add
mov
insl
push
pusha
in
lock
in
mov
xchg
mov
fisubrs
mov
xchg
mov
das
jp
sbb
sbb
lret
xchg
inc
dec
mov
mov
cli
imul
xchg
imul
lcall
add
pop
ret
pop
or
cmp
jge
fs
mov
sti
push
jp
pop
inc
scas
mov
or
and
out
daa
xor
pushf
mov
pop
dec
dec
pushf
xchg
xchg
push
xor
repnz
clc
push
jle
loope
test
sub
sub
cmpsb
cmpsb
lahf
imul
dec
xchg
xchg
js
xchg
test
jl
stos
xchg
jecxz
push
pop
sub
push
sbb
push
in
test
mov
inc
jbe
add
jg
mov
dec
movsl
es
mov
dec
add
lods
cmp
lcall
xor
rcrl
sbb
roll
cmp
jl
xchg
jb
mov
sub
pop
leave
fs
jno
cltd
dec
mov
test
mov
call
pop
lret
movsb
pop
inc
adc
nop
push
cmc
mov
andb
les
mov
sbb
sub
jbe
fisttpl
and
cmp
fwait
cmp
iret
cld
mov
cmp
mov
jns
inc
xchg
daa
mov
nop
cmp
ds
out
mov
adc
and
mov
insb
pop
pop
cmc
mov
fwait
out
pop
fistps
mov
and
inc
sbb
xchg
xor
pop
or
cmpsb
pop
pop
mov
js
je
xor
pop
ret
mov
ja
pop
xchg
or
mov
js
inc
add
pop
ja
mov
jg
sub
push
sahf
fdivl
jecxz
out
enter
push
popa
shrl
es
pop
mov
sub
or
sub
inc
ja
xchg
mov
fsubl
out
mov
inc
cwtl
mov
call
iret
mov
cmp
mov
nop
arpl
into
mov
dec
enter
les
daa
sub
push
lods
cli
cmp
or
mov
pushf
mov
fisttpl
std
ret
add
cmp
test
inc
sar
pop
mov
std
aas
lret
scas
lret
mov
fs
inc
test
mov
and
sbb
and
shlb
xchg
jecxz
and
mov
add
ljmp
mov
or
cmc
cltd
cmp
imul
push
jne
cmp
adc
testb
or
mov
add
xor
sbb
test
or
mov
nop
mov
es
add
stos
sbb
pushf
or
stos
out
cmp
mov
aaa
sub
push
xor
mov
inc
sbb
pop
sar
ja
cmp
fmulp
test
xor
add
aam
mov
sbb
and
pop
adc
out
jg
test
test
fidivrl
faddl
gs
or
lcall
shrb
pop
lods
sub
test
mov
lcall
aad
test
mov
int
xor
mov
cmp
sub
das
cltd
lods
or
iret
pop
push
dec
aad
mov
inc
rorl
imul
mov
pop
fidivl
sub
lcall
hlt
jp
jns
jne
add
cmp
mov
inc
cmp
enter
add
lods
in
mov
into
push
and
stc
jb
inc
ret
fwait
loope
mov
fistpll
cmp
stos
jb
push
mov
jns
lods
dec
frstpm(287
lret
andb
dec
mov
mov
stos
mov
adc
in
fistps
loopne
pop
adc
in
inc
mov
mov
push
iret
fs
push
dec
pop
arpl
mov
push
and
enter
pop
testl
mov
test
ss
mov
add
jg
fdivr
xchg
pop
enter
repnz
loopne
jo
mov
outsl
adc
orl
push
gs
push
aaa
push
int3
jl
or
push
fidivrs
lods
mov
sar
jp
and
rorl
stc
int
and
mov
mov
jecxz
lock
inc
sbb
out
push
loopne
jl
xor
jnp
std
inc
push
cmpsb
jmp
sub
dec
mov
jg
and
ficoml
cmp
icebp
arpl
in
scas
lret
cmp
xor
imul
xchg
cs
rorb
add
xchg
dec
loopne
push
sbb
mov
mov
xchg
popa
mov
ret
leave
ja
cmp
pop
sbb
push
cmc
mov
sub
aad
jp
sarb
lds
insb
mov
jp
repnz
clc
das
push
pusha
mov
fiaddl
push
lea
mov
int3
ret
push
jg
cmp
push
xor
inc
rcll
add
rclb
repnz
cltd
jb
rcl
jp
andl
push
xchg
rcl
push
adc
daa
jne
pop
jecxz
cmovne
aaa
lods
rcrl
xor
stos
dec
clc
movsb
cwtl
lret
incl
cmp
push
mov
pop
ret
outsl
sub
mov
add
dec
xchg
sub
jecxz
add
js
rcll
cmp
push
fbstp
dec
outsl
and
orl
mov
pop
aaa
outsl
mov
imul
inc
aad
push
or
xchg
lds
ret
adc
fld
sub
call
loope
cmp
jns
mov
add
cmp
rcll
dec
pop
ret
rcll
mov
mov
mov
mov
leave
pop
and
pop
mov
dec
mov
inc
adc
shll
inc
fildl
jg
or
cmp
mov
bound
sti
cs
cltd
add
push
pop
ljmp
lock
mov
pop
les
xchg
dec
xchg
pop
arpl
xchg
mov
andb
stc
xchg
jb
sub
mov
rcr
int
add
mov
lea
inc
mov
filds
in
cmc
orb
imul
inc
fisubs
mov
cmc
fidivrs
imul
lods
jg
jns
test
and
adc
xor
sbb
adc
mov
inc
pop
or
jbe
xor
dec
mov
mov
test
push
push
sahf
jle
sahf
mov
into
lock
adc
xchg
sbb
and
sub
add
mov
test
ja
xchg
cmp
test
emms
ss
xchg
nop
sti
mov
add
ljmp
leave
addr16
out
push
repz
mov
cld
mov
inc
cmc
fwait
aad
daa
inc
sub
ret
popa
jp
jne
shl
outsl
fdivs
push
pop
and
iret
lods
lea
xchg
js
iret
lds
xor
mov
out
scas
pop
movsl
or
push
mov
mov
shrb
sti
mov
add
out
pop
cmp
pusha
xchg
lahf
leave
fisubl
aaa
push
lret
stc
popa
pop
std
or
ja
or
mov
xchg
into
leave
pop
mov
xchg
rcl
leave
adc
mov
xor
rorb
adc
add
insl
ss
pshufw
sbb
aam
jae
cmp
add
jg
out
cmp
sti
add
aas
xor
fwait
int3
or
in
rorl
std
mov
and
sbb
mov
add
in
adc
dec
test
subb
mov
test
es
and
fisttpll
sub
sarb
sbb
nop
mov
gs
add
lahf
mov
pop
or
mov
inc
xchg
add
cmp
add
push
fcomps
sub
xchg
repnz
or
or
sbb
sbb
icebp
mov
cmpsb
pop
sbb
mov
jge
push
dec
aas
test
aas
or
pop
add
ljmp
int
xchg
push
pop
mov
outsb
fidivrl
xchg
subb
popf
pushf
pop
ss
mov
jnp
xor
push
add
pushf
cs
hlt
mov
pop
mov
push
in
imul
jmp
jns
imul
outsb
inc
xchg
sahf
fcmovbe
lods
and
push
addb
pop
cmp
movsb
call
push
faddl
scas
adc
inc
sub
mov
daa
movsb
xchg
jge
xor
dec
mov
sub
ret
ret
pop
unpckhps
rol
push
dec
rolb
ret
xchg
ja
jo
loope
xchg
mov
bound
jg
pop
mov
add
xor
fs
nop
mov
pusha
mov
icebp
mov
ret
jmp
xchg
push
mov
jmp
push
fiadds
mov
fidivs
insl
aas
mov
dec
pop
mov
jo
fldenv
roll
mov
pop
xchg
mov
sarb
test
rcl
out
add
pusha
nop
push
push
imul
inc
dec
mov
dec
mov
xor
and
or
cmp
xor
imul
inc
sub
xor
sbb
stos
stos
adc
and
push
or
sbb
mov
mov
mov
mov
aad
sub
inc
icebp
aaa
pop
adc
push
sub
lret
jno
add
sub
push
push
dec
sub
cli
sbb
adc
push
mov
in
repz
or
pop
inc
sbb
adc
shlb
mov
xchg
adc
in
popa
xor
idivl
imul
mov
add
push
or
mov
push
xchg
sub
data16
insl
mov
pop
jae
jae
insl
adcl
js
and
repnz
movaps
dec
jnp
leave
push
sbbb
fnsetpm(287
lcall
lea
out
ror
mov
lahf
adc
xor
or
xchg
cwtl
arpl
test
mov
lock
pop
pop
push
adc
add
stc
pop
jo
test
das
and
adc
mov
data16
mov
out
lcall
popf
les
xadd
sbb
sbb
xchg
xor
fcoml
fucomip
je
fdivs
xor
or
movsb
lfs
add
inc
inc
int
in
out
jmp
and
push
and
fsts
mov
push
push
dec
hlt
lea
in
shl
shld
and
cmpl
out
ret
mov
mov
mov
aas
xchg
enter
sahf
ja
cmpsb
mov
clc
neg
sub
dec
das
movsl
aas
orb
xchg
mov
scas
mov
mov
jno
xchg
pop
or
aam
enter
fisubl
dec
jmp
mov
int3
aas
lret
sbb
stos
inc
xor
sub
lret
ja
xor
jo
fmull
jae
mov
mov
ljmp
loopne
daa
cld
fcoms
jbe
mov
push
out
pop
push
rcll
pushf
les
dec
cmp
lea
aam
push
sub
inc
add
testl
divps
and
mov
sub
lahf
cli
or
dec
jmp
cmp
cmpsb
sbb
fadd
fsubrl
pop
add
shr
imul
mov
mov
sub
std
lock
aaa
cmp
scas
lcall
hlt
icebp
out
aaa
xchg
add
xchg
mov
outsl
sti
cltd
cltd
jmp
roll
repz
xchg
js
int3
push
and
sbb
push
lahf
das
cltd
into
test
pextrw
xchg
mov
dec
sub
jo
jns
out
out
popl
in
int3
xor
add
out
pop
push
insb
test
int
mov
pop
mov
lock
nop
or
sub
jnp
movsl
js
xchg
pmaxub
loop
rep
adc
dec
arpl
xor
sub
mov
jbe
inc
dec
repz
or
pop
xchg
mov
jl
mov
imul
jae
adc
mov
testl
xor
in
xchg
sub
scas
popa
ss
fiaddl
adc
jle
inc
cmp
sub
shr
sbb
or
hlt
lret
sub
ss
int
mov
sbbl
inc
inc
fcoml
inc
addr16
inc
sbb
test
jbe
in
xchg
cltd
loope
adc
push
sub
faddl
mov
and
dec
inc
jbe
lret
gs
jbe
cmp
add
jp
dec
hlt
ret
mov
xchg
mov
and
xor
dec
iret
xor
nop
jbe
sub
mov
test
and
adc
push
scas
xlat
scas
jl
cmp
pop
sarl
in
xchg
fs
in
fwait
in
pusha
cmpsb
xchg
test
aad
xlat
jl
inc
cld
xchg
or
push
dec
icebp
cli
ja
and
data16
lods
mov
push
es
and
fsubs
or
cmpsb
stos
mov
stc
mov
add
scas
pushf
pop
movsl
pushf
lcall
sub
push
loop
js
test
movsb
pushw
mov
je
sub
cmc
sub
jnp
mov
xor
insb
adc
ja
jb
xchg
mov
bound
jno
sarl
jb
push
and
push
mov
xchg
xor
sbb
mov
int3
xor
call
jecxz
loop
mov
fildll
popa
pop
jae
add
addr16
movsb
inc
and
jbe
sub
inc
push
addb
or
inc
cwtl
rcrl
or
bound
cltd
js
inc
stos
push
xor
arpl
into
and
leave
sub
hlt
adc
xor
adc
adc
fnstcw
mov
scas
int3
mov
or
daa
pop
insb
sbb
test
sub
inc
imul
rcrb
cli
cmp
subl
movsw
mov
or
gs
pop
hlt
pop
pusha
repnz
mov
inc
fistpl
shll
cmp
mov
movsl
adc
shr
dec
sbb
pop
leave
aad
push
xor
sub
sbb
xchg
mov
lods
js
cs
pushf
pop
mov
lock
mov
pop
pop
mov
pop
mov
adc
inc
xor
or
and
mov
adc
js
push
test
lret
lret
idiv
loop
mov
fwait
push
hlt
scas
std
ja
adc
jmp
jmp
cmp
es
inc
push
movsb
mov
mov
filds
jno,pt
jle
mov
xchg
imul
inc
idivb
dec
mov
or
ficoml
call
inc
mov
sub
xlat
mov
out
mov
jbe
les
jae
shl
dec
shlb
call
and
add
cmp
rcrl
popa
cld
cmp
test
adc
sub
adc
js
stc
outsl
jecxz
adc
cmp
cmc
out
sub
push
mov
dec
fmull
pushf
imul
mov
jbe
and
ja
mov
push
push
imulb
xchg
lock
mov
lahf
adc
cmpsb
add
inc
ljmp
cs
jg
pop
iret
imul
bound
or
push
mov
das
dec
out
js
adc
pop
push
stos
adc
leave
in
adc
scas
jmp
inc
inc
outsl
es
out
scas
in
push
aad
pop
hlt
or
std
push
sbb
jecxz
xor
or
add
cwtl
repnz
mov
cmp
mov
cmc
inc
ret
paddusb
dec
jl
and
into
mov
push
les
repz
dec
stos
addr16
into
clc
xchg
mov
pop
adc
sbb
push
fucomp
push
mov
adc
std
dec
sbb
test
test
loop
cmp
roll
xlat
cmpsl
mov
xor
mov
inc
or
xor
sbb
cwtl
adc
data16
or
daa
repnz
popa
insb
je
call
roll
push
cmpsl
mov
ret
or
xchg
cmp
mov
fldl
loop
popf
jecxz
inc
dec
mov
imul
sbb
sbb
ja
xor
aad
jae
shrl
pop
push
insl
mov
jo
popa
pop
inc
push
jp
inc
push
xchg
xchg
xchg
push
cmpb
sub
mov
ss
std
and
pop
out
push
repz
add
shlb
test
push
jl
inc
icebp
jo
divl
pop
call
adc
sub
test
pusha
mov
and
loop
std
lahf
xchg
push
fs
and
push
push
aaa
sbb
cmp
mov
xor
jge
insl
lods
repnz
inc
inc
push
or
aaa
sub
aad
jge
adc
aam
ljmp
lcall
fisubrl
push
popa
and
sub
in
lret
mov
iret
jge
add
push
test
or
mov
hlt
push
xchg
cmp
cmpsl
aam
or
pop
lcall
mov
fwait
stos
dec
pop
adc
das
ljmp
mov
xchg
addb
inc
filds
rolb
shll
dec
pusha
sub
xchg
xchg
testb
sub
push
or
mov
push
movsb
cmp
jle
adc
mov
in
jo
ret
call
xor
pop
aam
or
xchg
xchg
pop
and
arpl
fisttps
cmp
lea
fisttpl
inc
pop
out
push
mov
or
fdivr
or
jnp
pop
stos
loope
dec
scas
inc
xchg
fmuls
mov
add
outsb
fsubrl
in
adc
cmc
jecxz
cmp
xor
or
xchg
stos
stos
mov
pop
int3
inc
ret
xchg
arpl
rcrl
popa
sbb
outsb
in
ds
or
outsl
inc
sub
scas
dec
mov
pop
loope
ss
and
rol
int
xchg
mov
mov
jg
adc
pop
sub
pushf
mov
inc
gs
mov
aad
dec
inc
sahf
xchg
adc
sbb
sti
xchg
bnd
xchg
jnp
stc
out
test
fdivrs
add
out
or
xlat
cmpsb
xor
call
inc
loop
es
ret
xor
hlt
pop
loopne
int
push
jo
cmp
xlat
sahf
les
mov
notl
out
lods
sbb
jmp
sarl
pop
cmc
out
mov
push
jp
call
ja
xchg
out
lods
adc
mov
cmp
mov
push
imul
ljmp
sbb
inc
cltd
cmp
es
pop
xchg
xchg
hlt
aas
jne
sbb
cmc
sbbb
clc
bound
xchg
dec
sahf
int3
lea
sub
shlb
pop
and
jle
adc
pop
and
mov
loop
ja
and
or
test
test
and
fisttps
mov
and
and
sub
xor
mov
jg
decb
movsl
dec
fsubrl
add
mov
pop
mov
pop
dec
shll
mov
push
lods
mov
lret
rclb
test
rep
jne
push
mov
cmp
fs
stos
aas
leave
sbb
mov
inc
and
mov
xor
daa
or
scas
andb
je
mov
fucomp
adc
test
andl
xchg
cs
repz
in
outsl
dec
mov
enter
mov
sbb
or
imul
pop
and
stos
scas
xor
js
add
cmpsb
push
xchg
mov
push
push
fsubr
cmp
cmp
lods
add
add
pop
out
push
pusha
jbe
pop
inc
ss
cmp
jge
push
xchg
imul
enter
jb
pop
inc
dec
inc
iret
es
add
xchg
push
idiv
add
fnstcw
test
jp
sbb
pop
orb
jge
stos
loopne
adc
cmp
push
mov
pop
mov
aaa
in
es
dec
mov
push
cmp
sub
xchg
jo
sub
add
push
mov
push
icebp
loopne
push
nop
cli
testl
sbb
xlat
or
sbb
mov
fwait
xor
mov
jmp
call
pop
xchg
repz
loopne
lea
loope
mov
mov
outsb
jo
push
sbb
mov
jg
and
sbb
scas
insb
imul
xchg
mov
dec
jmp
mov
sbb
lea
out
adc
mov
rorb
out
sbb
out
out
cmpsb
and
mov
mov
ret
and
in
arpl
loop
inc
clc
scas
pop
cltd
dec
test
sbb
out
mov
out
push
xor
dec
dec
push
xchg
xchg
pop
ret
fnstenv
push
add
or
loop
add
test
clc
jl
out
mov
pop
lcall
stos
xchg
inc
loopne
jmp
sub
cmp
loope
cmp
imul
pop
sub
adc
aas
outsb
shrb
xchg
add
test
repnz
enter
jbe
or
xor
loop
mov
gs
cmp
mov
mov
aaa
sbb
mov
mov
rcl
add
pop
or
xchg
mov
inc
test
jecxz
cmpsb
cmp
inc
sbb
push
popa
sbb
clc
cmp
cwtl
inc
nop
lods
xor
inc
push
ret
cld
arpl
imul
stos
adc
mov
ss
out
dec
call
das
lods
inc
inc
rorl
insb
fistpl
xchg
sbb
mov
insb
xchg
pop
and
jns
in
adcl
add
dec
fisttpll
pop
jmp
out
rcr
mov
arpl
sbb
gs
fs
jo
sub
cld
lret
addr16
dec
cmpsb
enter
sbb
jecxz
insl
mov
jmp
push
sbb
xchg
es
xchg
mov
dec
ret
or
bound
mov
sub
test
dec
inc
arpl
jno
cmpsl
nop
outsl
pop
cmp
clc
xchg
jl
xor
pop
lcall
cmp
cmp
mov
loopne
and
insb
xchg
mov
xchg
nop
inc
push
pusha
sbb
add
cmp
bound
or
push
popa
mov
sti
test
jecxz
inc
repz
test
inc
imull
mov
sbb
ret
add
pusha
fadds
cltd
push
push
xlat
aas
cmc
gs
aas
mov
roll
int
pop
dec
rolb
ret
push
lret
stos
lahf
and
sti
roll
pop
aaa
pop
sahf
loopne
dec
shll
jo
mov
push
dec
and
fistps
and
push
xor
cmp
inc
push
mov
xchg
push
xchg
repz
sub
loopne
fmull
pop
int
sbb
shr
sub
pop
leave
loop
and
enter
roll
push
inc
sub
mov
push
fsubl
cwtl
daa
repnz
pop
lahf
add
pop
rolb
sti
mov
cmc
cli
dec
add
loopne
bound
or
test
xchg
enter
jg
push
fsubrl
sub
mov
xchg
shl
cmp
cmp
xor
fisttpl
cmp
sbb
insb
pop
les
dec
push
movsb
pop
sub
jmp
cmpsb
aas
fwait
sti
sti
mov
pushf
inc
aaa
and
sbb
jae
adc
pmulhw
data16
push
clc
into
push
mov
xchg
lret
or
loop
iret
shl
mov
add
mov
cmp
mov
pop
loope
out
shlb
xor
sbb
cmpsb
rclb
decl
xchg
lds
mov
or
jns
adc
adc
mov
icebp
shll
dec
mov
and
lret
jo
les
hlt
push
mov
sub
in
data16
dec
inc
inc
dec
aas
mov
mov
fidivrl
ja
in
into
cmpl
mov
cmpsl
sahf
dec
jp
fnstcw
mov
out
call
xchg
testl
out
scas
inc
in
adc
or
ret
add
or
into
pop
fidivrs
fmul
pop
mov
fadd
xchg
loop
mov
sarl
shrl
fst
fcoml
cmp
clc
data16
ds
sub
xor
and
sub
jnp
sbb
ret
lock
jae
dec
mov
mov
sub
push
pop
pminsw
fs
xchg
shrl
sbb
aad
mov
mov
gs
aas
dec
lcall
add
hlt
jmp
add
bound
xor
jbe
xorb
test
call
mov
dec
repnz
and
out
cwtl
pop
add
jo
dec
bnd
aaa
mov
or
inc
in
and
sub
pop
sbb
adc
mov
aaa
in
dec
stos
test
mov
push
mov
cmpsb
ljmp
adc
xchg
and
cwtl
or
ret
nop
jno
pop
mov
js
push
leave
jg
and
ret
movsl
leave
jle
out
std
add
or
and
sarl
shrl
jns
ss
lret
gs
dec
popf
xchg
lea
scas
xor
fld
and
insb
js
or
int3
in
xor
jno
xor
jno
mov
stc
push
and
cwtl
incl
fimuls
push
out
insb
xor
pop
or
fdivl
ja
adcb
insl
or
popa
sub
dec
inc
fs
cmp
test
addr16
push
movsl
sahf
xor
add
dec
push
lea
cltd
aaa
or
xchg
es
sub
mov
mulb
mov
or
jae
mov
outsb
imul
add
jns
icebp
cmpsl
dec
xorb
int3
repnz
push
jg
jmp
fsubr
outsb
mov
sbb
ds
jmp
lahf
xchg
inc
cmp
lods
fisubrs
sbb
pop
cltd
neg
pop
ljmp
adc
popf
ss
popa
and
ret
lock
out
fisubs
cmc
lods
jns
sbb
inc
pop
fcomp
push
aaa
ret
out
sub
sti
mov
ret
sub
jns
pop
jle
ds
push
adc
push
xchg
lods
nop
in
add
sbb
inc
cwtl
mov
aas
in
adc
mov
test
adc
jae
fstpl
sub
aaa
negl
pusha
xacquire
push
aaa
cmp
pop
sbb
cwtl
mov
mov
mov
sti
scas
xchg
cld
sarl
sub
push
dec
inc
push
xor
fidivs
stc
std
cmp
dec
mov
inc
push
push
cmp
sbb
inc
jb
pop
sub
jne
pop
or
pop
repz
cs
clc
sarb
fimuls
xor
mov
pop
lds
mov
xor
push
insl
in
rcr
dec
sub
mov
cmp
icebp
mov
cld
aaa
xchg
icebp
mov
bound
xchg
lret
lds
adc
test
adc
inc
adc
jns
mov
test
notb
pop
cmp
imul
dec
and
sbb
cs
call
cwtl
adc
lea
inc
ret
mov
cwtl
dec
xchg
dec
push
pop
adc
adcl
cmpsb
fcmovnbe
test
adc
ds
in
bound
imul
mulb
mov
out
arpl
imul
loop
sar
lods
shrl
pop
fs
or
in
in
out
sub
mov
add
lahf
insb
insb
test
lahf
testb
out
pop
repz
rclb
sub
in
leave
mov
sti
cs
fcompl
in
hlt
jne
mov
into
add
jecxz
into
ja
cmp
xlat
test
and
pop
cmp
push
lahf
pop
pop
xor
mov
xchg
or
orl
call
fdivrs
push
movsb
lods
sbb
pop
int
clc
add
lds
int3
xchg
jbe
dec
inc
inc
pushf
cmc
jb
subb
push
jge
cmpsb
daa
adc
push
sti
out
in
mov
lods
push
inc
jo
mov
decb
aam
push
dec
addb
ficoms
icebp
inc
and
inc
loope
xchg
xlat
test
pop
loope
xlat
pop
imul
pusha
adc
sbb
jge
arpl
mov
sti
icebp
lea
cmc
jmp
push
ds
ljmp
cmp
movsb
shll
or
mov
push
dec
clc
sbb
stos
test
incb
sbb
adc
add
push
cltd
das
jne
in
push
loop
xor
call
insl
push
frstor
iret
and
pop
sub
cmc
sbb
and
pop
jo
outsb
mov
scas
lods
daa
sub
mov
jb
dec
mov
addr16
adc
xchg
mov
cmpsl
sub
mov
in
in
insb
dec
dec
cmp
mov
jno
movsl
cmpsb
aad
jl
jmp
fimuls
arpl
sub
add
mov
popa
xor
mov
into
ss
add
adc
add
insl
mov
mov
cltd
shlb
inc
push
in
leavew
and
insb
ss
shr
in
jo
repz
fwait
xchg
in
test
addr16
test
push
sahf
inc
stos
cwtl
out
add
mov
pop
pusha
lods
and
fwait
scas
pop
clc
jo
in
xlat
push
out
xchg
cmpsb
pop
pop
int3
stc
sbb
aad
mov
shlb
mov
dec
imul
and
add
xchg
mov
dec
push
mov
fmuls
pusha
xor
rcll
push
cmp
insl
rolb
jp
je
mov
adc
adc
fbld
icebp
mov
mov
fucom
mov
xchg
xlat
xorb
les
mov
push
roll
decl
xor
outsl
fldl2t
push
push
jmp
inc
lret
jl
out
sbb
and
xchg
sbb
lahf
mov
xchg
mov
shl
sbb
adc
into
ficoms
and
daa
xor
and
je
sub
or
sub
icebp
testl
and
mul
mov
push
jno
je
sbb
fwait
adc
iret
aad
in
insl
jl
rcrl
mov
pop
aas
pop
or
leave
gs
jmp
ret
add
leave
xchg
in
jbe
and
into
int3
push
addb
out
in
jg
leave
dec
xor
repnz
in
dec
add
cmp
fldl2e
jno
cmp
push
mov
mov
cmpsl
mov
subb
subl
mov
xor
fs
cli
or
push
adc
aam
jl
scas
and
or
pop
inc
dec
repnz
and
shl
xchg
movsb
in
mov
adc
jle
filds
mov
mov
bound
ja
mov
push
pop
loop
jbe
inc
leave
pop
sub
popl
inc
rolb
fwait
mov
inc
dec
sbb
add
inc
outsl
dec
insl
and
call
pop
mov
cmpsb
fs
arpl
dec
jb
xlat
push
push
nop
or
into
mov
and
das
mov
pop
in
in
push
lods
int
test
jge
push
int
loope
adc
hlt
insl
jns
sbb
mov
les
mov
rol
xchg
shl
adc
cli
arpl
dec
xor
sbb
jle
icebp
mov
mov
lret
cwtl
or
sub
loope
add
mov
sbbb
das
lods
int
ret
sar
jge
adc
jp
outsl
add
popa
cmp
ds
jge
dec
pop
xchg
outsl
add
rcr
mov
jle
or
cmp
out
inc
fstl
jle
adc
lcall
adc
or
and
xchg
test
xor
mov
fisubl
ud0
cwtl
push
inc
jmp
scas
cmp
loope
out
sub
and
xchg
add
mov
mov
sbb
jno
xor
ret
mov
sbb
xchg
add
sbb
loop
mov
pop
add
mulb
popf
std
imul
adc
pop
dec
sbb
lods
sti
fwait
shll
mov
vpsrad
js
out
xchg
imul
icebp
jp
inc
pop
push
dec
in
push
test
or
adc
bound
add
mov
push
sbb
sarl
or
adc
out
std
sbb
push
xchg
out
xchg
cmp
imul
cmpsb
dec
mov
push
mov
mov
mov
xor
data16
std
inc
outsl
cwtl
add
pop
adc
loope
jp
pusha
adcl
push
jno
test
push
scas
insl
add
mov
movsl
scas
jmp
imul
jns
test
out
clc
sahf
popf
dec
mov
pushl
dec
push
and
filds
repnz
adc
xchg
les
pop
mov
add
scas
insb
xor
mov
mov
jp
and
sbb
ljmp
inc
in
insb
add
into
push
adc
and
mov
popf
push
add
test
pusha
in
dec
xor
adc
xchg
cmp
scas
push
sub
and
test
xchg
and
push
xchg
cmpsb
shrl
mov
mov
mov
mov
mov
jmp
mov
mov
or
rorl
aad
in
sbbl
mov
ret
rclb
pushf
test
inc
scas
mov
ret
push
cltd
add
push
out
sub
cmp
stos
cmpsb
mov
inc
loop
into
sti
pop
hlt
pushf
pop
push
into
sub
add
sahf
std
dec
testb
mov
pusha
pushf
dec
push
pop
icebp
sbb
or
adc
jl
fwait
jmp
adc
jecxz
mov
inc
dec
out
pop
dec
aam
mov
mov
or
inc
xor
pop
test
add
push
push
add
inc
jns
in
ja
lds
jmp
aaa
jbe
stos
ljmp
lock
jnp
sti
sar
incb
mov
pop
lods
into
out
cmp
test
addl
push
xor
sbb
scas
fidivrs
inc
push
jle
inc
jno
inc
call
add
inc
adc
ret
sbb
or
faddl
cmpsl
movsl
call
adc
fbld
ss
cmpsb
mov
xor
mov
add
call
lods
sbb
daa
pop
lods
push
pushf
lods
and
inc
push
push
scas
mov
mov
jmp
dec
jecxz
jne
mov
in
popa
jge
fwait
cmc
in
pop
int3
and
inc
pop
lret
push
xchg
leave
testl
and
jecxz
clc
push
aaa
dec
xor
pop
into
pop
add
ljmp
xor
js
popa
imul
lea
lock
pop
adc
je
inc
dec
cltd
xchg
add
popa
sbb
ss
pop
cwtl
push
jno
jb
fdiv
cwtl
mov
rolb
push
cs
push
test
std
fmul
push
in
leave
int
add
inc
fcmovb
test
jb
loope
mov
add
into
dec
mov
hlt
mov
das
push
imul
in
sbb
mov
push
into
jmp
loope
int
loop
xor
in
outsb
mov
popf
sbb
fnstcw
shll
or
cmp
pop
pop
mov
cmpl
dec
movsb
lock
push
jp
jae
int
mov
movsb
inc
push
xchg
daa
mov
dec
testl
xorb
icebp
dec
rclb
adc
sub
mov
enter
mov
les
cmp
or
or
sub
add
ljmp
cmp
mov
mov
adc
pop
aas
inc
and
ds
in
sub
sbb
push
das
pop
add
leave
das
js
mov
inc
sub
sbb
and
adc
ficomps
mov
jp
pop
sbb
xchg
fisubs
faddl
sbb
jbe
test
sbb
movsl
sahf
xor
iret
mov
add
adcb
movsl
sub
imul
and
mov
repz
jp
ja
push
ret
add
jne
mov
dec
jg
dec
jmp
std
pop
stos
lret
sub
loope
lods
arpl
push
daa
sub
incb
pop
ds
jne
mov
shll
pop
jb
push
jns
jp
pop
jno
cmp
cmp
and
int
pop
mov
mov
imul
xchg
jb
mov
cmp
in
fldt
cmc
xchg
dec
js
and
and
adc
shll
mov
stos
fst
mulb
push
fwait
pop
inc
rcll
adc
jge
movsl
adc
pop
dec
mov
and
call
mov
inc
lods
popa
mov
or
rcll
and
ja
loop,pn
outsb
inc
gs
ret
lret
aam
mov
mov
dec
and
and
cld
mov
fldcw
int3
adc
sub
xchg
popa
jns
sahf
aam
xchg
mov
adc
pop
adc
insb
adc
lcall
shrl
or
aaa
stc
sbbb
mov
xor
stc
xor
sub
sbb
mov
faddl
out
insl
aad
lds
pmaxub
xchg
lcall
imul
jbe
loope
cli
stos
test
popa
inc
xor
in
adc
ficoml
js
addr16
or
daa
pushf
rcl
movsb
jle
or
mov
outsb
rolb
data16
dec
mov
pop
push
xor
psrlq
mov
mov
stc
sbb
adc
test
xchg
dec
adc
xor
push
pop
push
lret
cli
mov
mov
pop
mov
cmp
dec
sbb
arpl
adc
xor
jbe
cltd
mov
insl
inc
outsl
jbe
jb
xchg
xor
lock
push
ljmp
into
mov
sub
mov
inc
movsl
dec
repnz
in
pushl
mov
ss
cwtl
ss
push
into
pushf
mov
sbb
lods
cmp
inc
jo
mov
mov
and
ja
mov
sub
xchg
rolb
test
iret
or
sbb
jo
jne
mov
pop
mov
lds
push
ror
cmp
std
mov
pop
lea
sarb
xor
popa
nop
mov
scas
mov
inc
enter
jg
and
sub
arpl
push
insb
sub
lock
add
addr16
daa
mov
mov
push
pop
or
lret
int
cmpsl
insb
cmpsl
dec
mov
push
loope
ret
es
rorb
outsb
mov
dec
or
fdivr
in
mov
and
xlat
cmp
push
les
fisttpll
mov
pop
gs
xchg
push
add
jo
ret
jae
add
push
ljmp
push
mov
push
push
or
mov
ret
shl
dec
adc
or
idiv
push
stc
xor
push
jne
adc
mov
jmp
dec
mov
xchg
dec
lea
sbb
jp
mov
adc
add
or
xor
cli
pop
cwtl
or
jp
push
pop
and
les
push
lods
lret
ret
xchg
add
jg
les
or
mov
dec
sbb
jle
sbb
jnp
or
addr16
imul
sub
mov
mov
cmp
lods
jmp
pop
scas
popa
cmp
repz
pop
push
xchg
stc
aam
mov
jnp
mov
nop
sub
sbb
out
jmp
sbb
fcmovnu
push
fiaddl
clc
and
add
movsl
aad
insb
nop
mov
xchg
jne
std
icebp
adc
adc
test
mov
and
xchg
mov
or
mov
pop
push
inc
enter
mov
lcall
sbb
js
rolb
mov
add
jp
test
rep
dec
xor
mov
sub
daa
pop
xor
test
idivl
add
aas
sarl
mov
pand
sub
cld
inc
jbe
push
dec
xchg
dec
leave
fisubl
pop
mov
test
fldenv
sbb
pop
sub
lret
fiaddl
or
xor
stos
jecxz
test
push
int3
cmp
fcomps
repz
daa
imul
xchg
out
lock
out
mov
push
inc
int3
aaa
mov
in
xchg
lods
cmp
lret
push
test
lds
ffree
jl
imul
jno
pshufw
lret
sub
mov
test
repnz
cmc
push
cmc
mov
pushf
xlat
test
pop
jb
add
pop
and
push
lahf
arpl
sbb
mov
loope
or
loopne
jo
je
add
and
in
mov
pop
mov
inc
insb
int3
push
and
inc
lret
test
mov
push
push
jecxz
test
hlt
push
shl
lcall
fidivrl
lret
pop
arpl
aam
repnz
push
inc
jecxz
add
je
popa
or
pop
mov
addl
adc
test
push
cli
movsl
imul
or
add
mov
mov
push
stos
sub
mov
xchg
xor
xor
push
inc
cmp
subl
ja
xchg
dec
dec
pop
cltd
lret
scas
sbb
adc
lahf
xor
sbbb
jno
je
div
adc
ja
sub
scas
xor
push
in
add
push
pop
lods
xchg
mov
jp
insl
push
jo
cltd
pop
mov
stc
lods
or
mov
out
daa
dec
fstp
test
dec
fmuls
ds
fistps
jl
sub
mov
and
mov
push
pop
sarb
add
inc
lahf
lea
and
lret
sub
xlat
push
mov
cwtl
jmp
call
fldenv
pushf
adc
lahf
bound
mov
lret
inc
dec
fwait
xor
adc
scas
popf
sbb
mov
mov
jg
iret
lretw
mov
jnp
mov
aas
mov
decb
sub
jns
xchg
mov
call
jmp
inc
inc
sbb
inc
cmp
mov
jge
fcoml
idivl
lea
jns
enter
inc
and
sub
mov
mov
xor
pop
push
lods
push
add
ja
mov
daa
dec
inc
jp
clc
int3
push
mov
xor
push
test
pop
sub
fidivrl
xchg
bound
lea
push
xorl
jae
sub
pop
push
in
or
in
aaa
cmpsb
jne
in
in
ljmp
adc
sbb
call
movsl
add
out
adc
mov
movsl
ljmp
or
sti
je
xchg
ficoms
inc
loope
or
dec
add
cmp
cmc
cli
pop
mov
xchg
mov
mov
enter
imul
pop
and
jle
sub
in
sbbl
sub
lock
clc
push
sub
in
cmp
push
test
cmp
jl
lahf
fidivrl
cwtl
jecxz
xor
pop
leave
pop
mov
jmp
or
int3
pop
das
xor
les
push
sub
fsubl
jmp
inc
sbb
mov
dec
mov
aam
scas
out
sbb
movsb
fisubs
gs
test
imul
add
xchg
mov
push
xchg
test
cld
orb
adc
xor
lods
mov
xchg
sub
jge
mov
pushf
xchg
pusha
dec
add
addb
xchg
je
loopne
in
cltd
dec
sub
enter
sbb
xchg
cwtl
outsl
add
jo
aas
sbb
jg
and
out
lea
sti
sbb
mov
out
addr16
fwait
mov
rorl
add
cli
or
icebp
mov
mov
mov
sub
stos
mov
scas
sub
mov
xor
and
dec
sti
ja
in
cmp
fsubl
lds
dec
repnz
pop
push
js
push
test
aad
call
mov
fcomip
pop
scas
ja
movsl
add
cld
enter
fimuls
mov
xchg
aam
sbb
outsl
ss
jo
cmc
out
lcall
and
outsb
or
mov
inc
add
mov
cs
mov
and
add
sbb
out
jb
repnz
insb
scas
hlt
lds
cltd
lret
cmp
neg
xor
int3
pushl
pop
sbb
adc
fistps
xorl
or
or
fldt
jae
or
push
fs
push
add
repz
sti
andl
cmpsb
jle
ds
pop
adc
fs
divb
jg
movsb
and
scas
and
mov
push
dec
pop
shrl
or
or
sbb
jns
movsl
je
je
stos
or
outsl
cmpsb
mov
cmp
cmpsb
popf
xchg
dec
and
das
enter
add
mov
and
push
xor
ljmp
popa
cmpb
jle
mov
mov
cmpsb
xchg
cmp
dec
repnz
sbb
test
fadd
sub
mov
mov
out
nop
je
jns
int3
js
insl
insl
pushl
repnz
subb
imul
dec
jecxz
adc
mov
xchg
xchg
and
or
shlb
add
daa
adc
arpl
xor
push
data16
inc
sub
dec
pop
adc
mov
hlt
daa
xchg
stc
popa
cltd
xchg
fwait
int
push
jge
inc
mov
jge
loopne
mov
mov
fstpt
xchg
mov
ret
enter
sbb
mov
jmp
adc
fadd
inc
imul
push
stos
sub
mov
pop
mov
orl
mov
and
mov
mov
or
hlt
outsb
popa
jo
pop
or
and
stos
sahf
or
rcrl
out
inc
push
mov
loop
push
push
and
lcall
xchg
or
outsl
lret
jge
outsb
stos
test
ss
mov
in
mov
jecxz
nop
push
cli
fs
xchg
pop
jnp
mov
jns
add
add
mov
cmp
dec
inc
clc
jge
jae
mov
xchg
nop
dec
aas
xor
mov
mov
das
sub
pushf
pop
imul
or
pop
mov
cmp
xchg
or
cs
mov
mov
cmp
mov
adc
fimuls
ret
in
icebp
xor
shrb
fmul
jo
div
push
jb
xchg
xor
push
add
aaa
mov
sahf
inc
inc
lea
dec
test
mov
dec
pop
sub
inc
xor
enter
ja
dec
and
jae
push
or
xchg
and
sbb
mov
addr16
cmp
js
ss
push
in
cmp
or
data16
lods
push
mov
cmp
iret
inc
dec
daa
lds
jle
sbb
mov
mov
inc
adc
unpcklps
and
cmp
pop
negb
adc
pop
dec
cli
mov
mov
push
and
cs
mov
aaa
test
sub
lock
rolb
and
inc
xchg
mov
outsl
ret
push
ficoml
dec
jg
scas
bswap
andb
xchg
and
int3
icebp
pop
imul
inc
lock
xchg
or
jmp
inc
jbe
pop
mulb
popa
pop
dec
fstpl
fiadds
std
daa
subl
adc
nop
adc
addr16
lahf
add
mov
mov
sub
xor
xchg
sbb
test
jge
push
in
cwtl
ljmp
fs
jae
inc
subb
and
adcl
xchg
movsb
sub
testb
mov
add
and
pop
jno
jbe
or
aam
xchg
push
movsb
pop
lock
push
sbb
pop
out
and
les
aaa
xchg
mov
pop
clc
inc
fnstenv
sub
insl
cmp
lods
scas
mov
imul
insb
or
test
ljmp
roll
rorb
dec
test
pushf
push
pop
and
sub
xor
dec
mov
js
cmp
sub
xor
popf
xchg
popa
in
clc
in
mov
mov
ja
dec
ficomps
push
sub
or
cmp
rorl
stos
into
lods
in
sbb
pop
shlb
ss
outsb
dec
mov
aas
imul
cwtl
mov
popa
cmpsb
imul
sbb
cmpsb
addr16
les
mov
das
shrl
push
inc
pop
mov
pop
jo
cltd
das
out
inc
jne
outsl
mov
add
in
in
push
xor
stos
push
lods
popa
adc
inc
movsl
xchg
dec
or
dec
mov
out
aad
pusha
aas
loop
jne
sub
data16
push
inc
jb
fsubrs
pop
nop
adc
test
in
and
or
rorb
inc
and
sub
lods
jg
push
mov
cmp
clc
xor
subb
aad
sbb
sub
mov
dec
jbe
and
imul
sub
xchg
dec
cld
sbb
inc
imul
in
push
cmp
rep
lret
sbb
dec
enter
jecxz
xor
adc
cmp
popf
jecxz
jecxz
out
sub
out
aam
test
les
out
aas
test
cltd
xchg
xchg
mov
jp
add
fisubrl
cmp
jecxz
dec
push
push
popf
popf
xor
sbb
mov
mov
lds
movsl
jno
pop
lahf
push
std
pop
out
scas
test
sub
movsb
mov
loopne
adc
adc
ss
lret
pop
stc
xlat
push
push
adc
add
and
loope
sti
adcb
imul
mov
lea
add
fildl
fdivrl
icebp
jo
loop
xchg
push
jnp
mov
cs
jns
sub
test
and
mov
lods
packsswb
jo
cld
jmp
or
out
cltd
lahf
js
dec
or
pop
sbb
cmpsb
push
dec
sub
shl
adc
enter
ja
push
es
sbb
repz
int
push
jmp
inc
pop
xor
dec
add
or
inc
pop
sbb
and
out
mov
popf
mov
repz
movq
inc
xlat
xor
mov
into
pop
lahf
mov
cmpsl
call
push
mov
mov
inc
inc
jge
jle
push
lret
jmp
push
mov
cli
sbb
icebp
mov
stos
fwait
cmp
std
iret
push
push
mov
add
clc
jo
and
paddsb
adc
pop
push
loopne
ret
pop
out
iret
dec
sub
mov
arpl
mov
push
das
jae
sbb
mulps
add
jmp
dec
sti
sarb
mov
cmp
cmp
push
add
mov
add
mov
cmpsl
lea
adc
mov
aaa
int
jb
gs
jns
mov
xor
outsb
rcl
mov
inc
sub
aas
lock
cwtl
jl
jns
dec
mov
inc
or
push
sbb
nop
cs
and
mov
incb
mov
mov
jmp
in
mulb
pop
enter
push
arpl
mov
pop
fidivrs
sahf
cmc
mov
and
jg
lea
inc
insb
adc
iret
mov
sub
dec
aad
test
in
xchg
lea
ret
sahf
inc
push
imul
sbb
mov
push
iret
mov
add
fildl
test
mov
outsb
push
loopne
ja
fists
iret
movsl
xchg
push
or
popa
mov
jp
je
test
adc
pop
xor
push
jle
or
mov
xor
int3
in
sub
jge
fmul
ret
les
roll
pop
lcall
aam
arpl
xchg
or
cwtl
gs
pandn
cld
push
data16
xchg
mov
ficoml
push
iret
movsl
icebp
sbb
test
mov
adc
dec
jmp
or
pandn
dec
cmpb
and
jg
sahf
jecxz
and
or
xchg
sbb
mov
test
push
divl
pop
jne
out
movsb
jmp
in
push
xchg
lret
xchg
je
lea
je
mov
sub
mov
enter
cltd
in
dec
addb
inc
xchg
das
xchg
out
mov
lods
ficomps
cmp
push
shll
fisttpl
fbld
sbb
cltd
adc
jmp
push
js
and
adc
and
mov
movsb
or
div
lahf
jl
cs
in
push
jnp
mov
andb
jmp
loopne
movsb
jo
test
out
push
cwtl
adc
and
out
flds
rorb
xor
xor
movsl
dec
fisttps
test
sub
inc
adc
cld
imul
stos
sub
dec
lea
mov
xchg
jmp
inc
insl
jg
cmp
or
inc
cld
daa
inc
jnp
mov
pop
loopne
out
mov
xor
mov
scas
daa
xor
cltd
sbb
fs
jnp
mov
clc
add
ret
sbb
sbb
enter
stos
dec
jo
sbb
pop
pop
fistps
mov
ljmp
loope
jl
ljmp
push
in
and
push
gs
aam
shl
sbb
push
ja
cmp
mov
dec
sbb
push
pop
pushl
mov
dec
negb
dec
mov
pop
jmp
sub
fbld
xchg
mov
fwait
adc
pop
jne
test
loope
in
cmp
nop
mov
aam
xlat
jo
mov
jl
inc
setge
fists
clc
xlat
imull
sahf
cwtl
cmp
cmp
jg
sub
pop
sub
and
sub
aaa
ja
dec
or
icebp
orl
lret
or
int
shlb
fldenv
loop
rcll
outsl
xchg
xchg
sub
cmpsb
pushf
add
ljmp
jae
jmp
pop
out
xchg
cs
sarl
lea
push
sahf
scas
mov
push
inc
pop
push
or
in
dec
inc
lds
in
lahf
iret
inc
loope
pusha
add
lahf
and
loop
dec
in
mov
dec
lret
add
roll
shlb
jecxz
sahf
mov
inc
int
sti
cli
push
in
mov
out
loop
inc
sub
push
or
push
sbb
pop
add
pop
mov
jns
xchg
lds
xor
pop
push
movsb
jle
xor
dec
add
stc
xchg
scas
pop
xchg
lcall
leave
push
das
xchg
jle
mov
inc
incl
push
outsb
test
cwtl
movsb
cli
add
aad
mov
push
jno
xchg
xchg
pop
inc
stos
sti
dec
lods
sub
mov
pop
sub
mov
jle
les
dec
cmp
jne
cmc
add
mov
out
xor
push
push
jbe
mov
xor
xchg
aaa
push
sarb
push
lods
jnp
lods
mov
iret
fnsave
hlt
iret
mov
rol
push
aaa
jp
push
pusha
aas
jmp
sub
push
test
repnz
lahf
fsts
std
imul
aam
popa
cld
cmp
add
jb
xchg
push
popa
std
and
shr
ljmp
vminpd
cmp
int
test
nop
mov
push
jbe
or
xchg
test
stc
scas
sbb
sti
pop
fcomps
pop
inc
les
stos
bound
cs
in
jle
mov
dec
adc
jp
adc
jnp
dec
outsl
mov
adc
jl
cmp
popf
push
or
jno
les
push
lods
daa
push
pusha
cmp
aas
jnp
pusha
xchg
insb
lcall
pop
pop
repnz
cmp
imul
dec
xchg
mov
jne
push
inc
dec
push
sbb
adc
iret
mov
xchg
in
or
out
ds
mov
lods
mov
cmpsl
das
and
add
xor
sbb
repnz
aad
sbb
out
pop
in
mov
mov
add
adc
xchg
sti
xchg
and
fs
rclb
repnz
movsl
xlat
xchg
push
aad
adc
aas
lret
popa
test
test
or
cli
xchg
sbb
mov
and
push
fisubl
outsb
roll
push
fwait
jecxz
adc
sbb
and
cmp
cmp
test
mov
sub
cmp
mov
xchg
mov
shlb
inc
mov
or
mov
pop
sub
lods
lret
fdivrs
mov
dec
xchg
imull
imul
mov
jae
jmp
lea
fisubs
popa
testb
xchg
or
mov
sbb
popa
hlt
mov
sbb
imul
jns
adc
adc
xchg
rcrb
inc
push
into
mov
pop
mov
mov
in
pop
or
popf
pop
ds
jno
jbe
dec
addr16
pusha
dec
adc
in
pop
dec
inc
in
lods
cmp
ret
sti
dec
orl
in
sub
jne
rol
pop
je
mov
sbb
sub
cmp
adc
shrl
shrl
cmp
repz
stos
std
push
fcompl
xchg
sbb
or
xchg
test
movsb
ficoms
inc
push
xchg
xchg
inc
ljmp
xchg
mov
loopne
out
movsl
push
pop
incb
pop
sbb
xorb
out
dec
xlat
pop
pop
mov
jns
pop
cmp
jl
insl
push
movsl
int3
sub
dec
fdivl
cmp
mov
pop
ret
mov
ds
xchg
pop
std
ret
ds
xlat
mov
push
test
xchg
sub
adc
push
dec
pop
fdivl
xor
sbb
inc
or
cmp
push
adc
pushf
and
test
adc
mov
ret
cmpsl
rol
jnp
push
sub
loope
leave
out
divb
mov
mov
jecxz
fwait
enter
je
fcompl
inc
and
test
push
lds
jl
test
xorb
fnstcw
jb
outsb
pop
mov
mov
adc
sub
adc
cmp
out
lret
push
cmpl
jnp
sbb
je
fsubs
xchg
sub
sarb
loope
in
pop
loope
mov
and
daa
aam
push
lock
mov
cmp
pop
test
aas
push
or
loopne
ficoms
sbb
cmc
sbb
fs
jg
outsl
bound
pop
mov
jp
xor
pop
mov
inc
in
push
push
sbb
orb
shll
dec
aas
cmp
and
mov
popa
jae
sub
std
test
push
ljmp
int3
dec
push
xchg
imul
addr16
outsl
xchg
lods
leave
nop
leave
xor
jne
pop
shll
jae
mov
sbb
shll
mov
jecxz
loop
mov
mov
fsubl
subl
stos
movsl
jmp
loop
sub
jmp
jns
dec
sub
repnz
ret
bound
pop
ss
add
push
sub
fcmovb
data16
jmp
lea
inc
ret
mov
xor
sub
imul
inc
icebp
in
pop
xchg
sbb
mov
rcrl
pop
dec
sti
xchg
sarl
push
inc
mov
push
jecxz
call
mov
dec
jmp
mov
es
in
pop
xchg
out
outsb
push
fdivrp
addb
and
jae
ja
lcall
ficoms
popa
mov
hlt
pop
enter
cmp
or
push
push
outsl
testl
imul
ds
xor
jnp
pop
pushl
iret
and
das
mov
mov
mov
pop
fwait
lea
fiaddl
sub
leave
mov
mov
pushf
iret
cmp
nop
mov
shl
iret
pusha
sbb
test
loop
popa
mov
pop
ljmp
imul
cld
pop
mov
push
push
js
jmp
pop
push
inc
lret
fs
imul
push
xchg
pop
mov
mov
mov
and
and
scas
adc
sbb
sbb
push
xchg
decb
xor
xor
inc
inc
and
pop
jg
mov
add
gs
fadds
and
ds
outsl
xchg
jp
daa
cmp
lea
sbb
stc
dec
sub
mov
jl
mov
lcall
push
daa
loopne
jo
lods
mov
inc
mov
gs
std
movsb
fcomps
push
hlt
lahf
mov
arpl
popf
je
dec
pushf
pop
jl
mov
cli
aas
mov
dec
popf
mov
jnp
add
stos
and
loope
hlt
out
and
in
sbb
push
frstor
ficoms
dec
loopne
imul
rorl
mov
push
jecxz
fnstcw
adc
jbe
fdivr
adc
mov
xchg
jmp
push
or
in
cltd
cmp
push
out
xorl
in
pop
mov
fdivl
adc
mov
xorb
icebp
mov
test
stos
push
push
rcrl
sub
or
push
insb
iret
es
pop
rcrb
mov
ljmp
sbb
dec
aad
mov
insb
xor
ret
adc
jae
icebp
fcmovbe
test
mov
or
xchg
imul
lea
inc
loopne
shrb
loope
rorb
add
into
sbb
insb
xchg
je
loope
lret
pop
sahf
ret
dec
mov
mov
movsl
fcmovne
cmp
or
lcall
rcrb
xor
popf
jmp
ds
mov
outsb
inc
jge
mov
popf
lret
je
les
lods
adc
pop
dec
add
test
daa
xchg
stc
cli
pop
push
ret
loope
into
fwait
outsl
lock
arpl
xor
rcrb
test
leave
mov
lods
fdivrl
push
pop
pop
test
dec
jnp
jp
xchg
dec
incl
filds
mov
call
fwait
cmp
mov
dec
dec
mov
out
data16
push
fwait
push
mov
js
js
fwait
jg
mov
je
fstl
cmpsb
and
sbbb
shll
inc
shll
aaa
jmp
pop
insl
and
sbb
cmp
in
push
filds
xor
orb
jg
jb
mov
cwtl
pop
or
mov
testb
mov
mov
int3
sub
push
cltd
mov
dec
aad
mov
bound
imul
jne
cmpsb
xor
pop
ss
add
and
into
mov
ret
xor
fsts
std
pop
dec
jecxz
cmp
jne
insb
mov
inc
mov
insb
cwtl
ja
mov
lahf
les
cs
insb
ja
call
cwtl
adc
dec
xor
mov
fcomps
scas
add
je
sbb
sahf
or
sbb
and
out
xchg
or
aam
sahf
cli
loop
in
mov
dec
jne
out
or
fwait
adc
fstps
mov
ljmp
push
imul
mov
outsl
fdivr
lods
add
cmp
ds
test
addr16
int
cmp
fists
mov
pop
je
mov
jge
inc
push
pop
sub
mov
pop
loopne
sbb
xchg
xor
insb
inc
lret
addl
fdivrs
rolb
mov
inc
cmp
xor
dec
leave
stos
pushf
add
push
push
imul
or
jle
mov
jp
lods
insb
mov
xorl
scas
rcr
repnz
pop
and
out
loopne
dec
movq
or
cmp
inc
int
fwait
outsl
sti
ficomps
out
in
mov
push
loop
sbb
pushf
add
dec
fdivrl
into
xor
push
aad
icebp
mov
push
out
mov
xchg
jmp
mov
test
fsubp
ja
sahf
std
outsl
mov
push
pop
inc
jnp
scas
pop
das
mov
outsl
int
mov
out
cmp
scas
sti
or
aas
mov
mov
xchg
lods
outsb
add
dec
xor
ja
mov
mov
std
test
out
inc
pop
cmpsl
fiadds
popa
adc
jp
or
push
sar
jmp
es
outsl
adc
or
fsubp
mov
and
push
movsb
or
push
out
das
sti
mov
leave
pop
movsl
pushf
lahf
les
leave
sarb
mov
mov
inc
or
adc
push
popf
outsl
aam
pop
nop
mov
pop
inc
mov
mov
xor
xchg
xchg
cmp
fistpll
call
mov
prefetcht1
repz
pop
mov
mov
fcmovnb
mov
mov
mov
leave
dec
fdivl
jbe
cmp
out
push
iret
xor
jo
adc
mov
jecxz
or
xchg
or
lds
lret
out
aad
dec
dec
push
ljmp
mov
jge
sub
test
inc
cmp
out
idivl
jb
cwtl
movsl
lret
jb
pop
movsl
push
sti
testl
icebp
imul
pop
adc
mov
push
fucomip
xor
aad
sbb
push
and
out
inc
test
insb
cmpsb
out
jae
push
arpl
mov
cltd
hlt
xor
cmp
xchg
fwait
dec
cmp
sub
dec
cmp
sub
xor
mov
mov
cltd
pushf
fstl
das
sbb
je
mov
imul
leave
jnp
inc
pop
fwait
stc
sub
add
out
fwait
test
pop
or
jmp
movsl
ljmp
cmp
rcrb
mov
repnz
mov
jg
aas
testb
ljmp
sub
inc
xchg
jmp
mov
mul
push
jae
and
jae
cmp
mov
stos
mov
jns
sbbl
test
adc
sbb
sub
aas
ja
ror
stos
sbb
rcll
into
rcrl
mov
sahf
mov
pushf
sub
add
aam
fwait
cmpsl
shrb
sahf
sahf
and
test
pop
js
cmp
or
jns
pop
dec
ljmp
sub
sbb
and
and
push
cmp
push
imul
mov
mov
adc
mov
pusha
into
lret
pop
push
imul
ljmp
and
sub
stc
xor
mov
jno
and
inc
aad
inc
insl
sbb
xchg
adc
cmc
inc
xchg
cmp
jb
pop
xchg
jle
loope
inc
push
std
jne
add
xchg
push
jno
ret
nop
push
jle
mov
pop
into
fwait
out
scas
iret
inc
test
xchg
sbbb
into
repnz
inc
dec
pop
jecxz
loope
in
repnz
fwait
ja
push
sbb
push
lock
xchg
lea
cmp
pop
idivb
rcrl
fcompl
push
jmp
outsl
xor
sbb
jae
pop
test
sbb
testl
mov
pushf
push
sti
es
hlt
iret
stc
sub
cltd
or
jno
dec
pop
sbb
ds
into
lods
fisttpl
dec
add
jb
nop
stos
add
inc
outsl
mov
negb
leave
adc
jnp
in
mov
gs
outsl
mov
jno
xchg
xorl
repnz
ret
out
push
mov
cmp
ds
std
sbb
dec
jl
fsubr
sar
inc
add
adc
adc
fsubr
inc
aam
fs
cmc
das
mov
or
aam
jno
mov
jb
aas
ds
mov
les
ja
pop
adc
rcrl
and
jno
stos
mov
ficomps
insl
lahf
movb
inc
sub
jecxz
in
bound
insb
ret
int3
add
mov
and
pop
enter
lods
push
adc
push
rorb
fstps
stc
mov
cs
fdiv
sarl
cli
and
sbb
mov
xchg
inc
xchg
mov
repnz
cs
sbb
xchg
or
xlat
mov
mov
and
mov
lods
rcrb
mov
pop
imul
mov
shlb
jp
dec
out
outsb
repnz
clc
mov
je
iret
xchg
insb
je
leave
call
push
test
in
or
jae
mov
jmp
cmp
fwait
add
outsb
mov
sahf
adc
pop
fs
jo
lods
jae
jge
adcl
repz
aas
xchg
sarb
xorb
mov
sbb
shl
es
sbb
imul
dec
stos
jle
addr16
mov
imul
push
or
ror
and
push
in
rolb
movsb
lret
nop
mov
push
fcompl
rorb
ljmp
inc
clc
nop
js
xchg
insl
pop
and
mov
inc
jo
sti
mov
xor
sarl
sbb
and
sarl
inc
icebp
negl
jne
cmp
xchg
dec
inc
dec
xchg
pop
fsts
rcll
mov
inc
fbld
jne
stc
loopne
pop
add
pushf
pop
sub
imul
cwtl
cltd
add
nop
jge
push
dec
inc
lock
jge
fwait
popa
jg
pop
push
sbb
out
cwtl
adc
push
cmp
clc
dec
mull
push
repz
sarb
cmpsb
mov
dec
dec
je
test
push
pop
aad
cwtl
xor
cwtl
xchg
lds
fildl
adc
xchg
and
sbb
les
pop
mov
mov
into
dec
aam
orb
ret
outsl
pop
mov
cwtl
mov
push
call
insl
andb
test
mov
fs
daa
push
pusha
cmp
jne
pop
push
rcrb
jmp
or
fsubrl
sbb
out
ds
rcr
mov
adc
mov
out
imul
mov
sub
fwait
repz
outsl
data16
call
or
add
xor
out
lret
icebp
add
mov
cmp
ficoml
cmpsb
pushf
inc
cwtl
pop
iret
cmpsl
sub
addl
cmp
add
sti
jle
inc
xchg
mov
jl
cmpsl
pop
mov
jb
adc
lret
out
sti
mov
mov
movsb
mov
fsubrl
repz
cmp
jmp
imul
js
pushf
lods
mov
jg
not
and
xlat
pop
lret
xchg
daa
xchg
lods
pop
or
into
jle
or
jnp
lock
adc
movsb
lods
cmpsb
movsl
repnz
or
cmp
mov
pop
shl
and
sahf
cmp
cmp
jo
sub
test
movsb
mov
push
sarl
jb
jns
lds
fs
arpl
test
or
pop
into
test
pop
in
cmp
bound
call
adc
pusha
mov
mov
out
inc
pop
test
movsb
test
aam
mov
lret
popf
bnd
clc
mov
call
or
xor
jg
ret
or
aam
aad
iret
fadd
lods
je
pop
mov
xor
pop
rcr
xor
sub
mov
add
pop
ljmp
jmp
or
cmpsl
dec
push
adc
ret
mul
ljmp
cs
sub
push
mov
cmp
aam
outsb
dec
jl
mov
pushl
inc
mov
pop
cld
mov
sbb
inc
push
mov
dec
pop
fisttps
and
in
rorl
xchg
cmp
pushf
fists
bndstx
js
mov
sbb
mov
ret
xchg
sub
adc
xlat
mov
repz
push
cmc
adc
les
jno
gs
cmp
or
push
out
fadds
pop
popa
repz
push
call
mov
cli
mov
sub
pop
push
lds
or
mov
push
in
xchg
cmp
repnz
das
in
js
mov
xchg
jae
or
adc
iret
je
dec
mov
jbe
aas
xor
push
fstpl
and
push
jl
mov
mov
and
lcall
pushf
outsl
pop
push
xchg
push
shrb
adc
ja
cmp
lock
push
dec
aaa
pop
inc
mov
or
out
sub
daa
and
push
adc
add
push
shlb
push
lods
inc
xor
jg
mov
nop
mov
es
or
fwait
sbb
pop
adc
fucom
adc
xorl
ffreep
cmpsl
es
fnstcw
decb
in
call
in
mov
insl
mov
lods
jg
or
sbb
push
int
jae
or
repnz
idivl
cmp
cmc
dec
ljmp
mov
mov
mov
test
jmp
push
in
pop
pop
xchg
xchg
lea
pop
cmp
psubq
dec
cmp
mov
movsb
arpl
xchg
lods
add
inc
repz
xorl
or
jno
dec
sub
xchg
mov
xchg
cld
lock
push
cmp
dec
or
jl
adc
cmp
insl
pop
repnz
pop
mov
add
repz
dec
movsb
pop
movsl
pop
fidivrl
adc
es
mov
mov
mov
or
call
rorb
sub
sub
cwtl
add
pop
arpl
dec
or
pop
outsl
rclb
das
or
sbb
ds
mov
pop
insl
arpl
pop
and
mov
adc
add
pop
cmp
ja
pop
ja
mov
inc
loopne
cltd
push
mov
push
mov
mov
je
punpckhdq
pop
or
push
sbb
leave
stos
push
data16
xchg
jbe
mov
popa
xchg
or
mov
lock
mov
push
int
push
rcrl
jmp
cltd
sub
or
mov
jle
jbe
cmp
pop
orb
fnstcw
cmp
out
lcall
es
add
mov
or
mov
fidivrl
pop
jo
xor
xor
xchg
push
stos
cmp
das
fistpl
push
cmpsb
mov
fisubrl
outsb
xchg
push
dec
mov
pop
pop
fisttps
daa
mov
mov
sbb
ss
dec
cmp
cmp
inc
dec
popf
fwait
mov
lret
add
daa
stos
cmp
push
test
cmp
jp
mov
shll
inc
shlb
cmp
and
mov
out
mov
cmp
xchg
mov
xor
add
aad
movsl
xchg
and
xchg
movsb
icebp
sti
icebp
xor
mov
mov
mov
xchg
cmp
push
lock
pop
aam
shrd
adc
inc
ljmp
mov
mov
lea
and
push
sub
jno
pop
int
add
jecxz
out
stos
push
add
rolb
mov
pop
int3
sar
fmull
lahf
ret
jb
adc
enter
test
notb
movsl
mov
add
lret
cmpsl
dec
push
clc
aam
cs
inc
pop
es
sbb
push
fsubrs
fwait
sbbb
cli
jo
jecxz
dec
mov
and
push
mov
xchg
loop
in
sti
sbbb
push
pusha
pop
mov
addr16
xchg
cmp
adc
inc
mov
std
sbb
aaa
xchg
adc
cwtl
or
mov
or
sbb
add
sub
leave
push
fisttpll
stos
fprem1
fs
or
out
movl
pop
mov
dec
cmp
jb
iret
pop
and
pop
dec
scas
xor
scas
sub
daa
test
mov
std
cwtl
gs
jmp
cmpsl
es
fdivrl
repz
sub
mov
adc
jae
pop
or
scas
add
je
insl
lret
xchg
sbb
xchg
data16
sbb
loope
cmp
xchg
cmp
xchg
dec
sar
mov
mov
add
lods
pop
xor
or
shl
arpl
das
jnp
pop
cli
lock
pop
fldcw
insb
cmpsb
adc
orb
in
inc
mov
jo
test
xchg
lcall
es
shrb
sysexit
jmp
ds
icebp
sbb
adc
xlat
sbb
insb
scas
out
test
jmp
fimull
adc
sub
dec
lea
aad
xchg
lcall
push
mov
je
mov
mov
inc
enter
cmp
gs
sbb
in
and
mov
push
cmp
add
pop
pop
pop
push
or
fildl
mov
popf
cli
loop
pop
fisubrs
gs
lea
lret
sbbb
dec
push
mov
or
mov
mov
hlt
ljmp
shlb
xchg
movsl
pop
mov
arpl
cmpsl
imul
divb
stc
mov
pop
inc
sbb
cld
pop
pop
cltd
or
pop
dec
aas
aaa
pop
loope
mov
test
mov
iret
loopne
jp
jns
leave
cld
or
out
inc
lods
add
dec
mov
lea
mov
stc
pop
test
scas
mov
and
dec
mov
gs
cs
jb
xchg
push
jle
fwait
xor
bound
fldenv
jmp
inc
mov
mov
cltd
loopne
pop
add
mov
jo
xor
jae
popa
pop
cmp
adc
movsb
jnp
cli
scas
out
insl
addr16
les
testl
in
dec
int3
push
mov
sub
or
sub
cld
fldcw
xchg
stos
push
ljmp
iret
xchg
inc
pop
dec
pop
mov
cmp
cld
nop
mov
xchg
arpl
shll
iret
xor
mov
int3
add
out
lret
jmp
sbb
aad
sub
push
mov
push
mov
mov
adcl
adc
aam
stc
cltd
sub
mov
test
add
mov
jl
mov
sbb
outsb
pop
or
int
shl
imul
push
shrb
pusha
push
stos
pop
out
mov
stos
lahf
xchg
push
mov
loopne
dec
in
inc
iret
lahf
enter
lock
outsb
cmp
movsl
xor
mov
std
pop
mov
pop
test
xor
xchg
adc
cmpsl
add
enter
fldenv
cmp
sbb
lcall
loop
shlb
pop
add
jmp
cltd
mov
jne
lcall
lods
mov
pushf
adc
inc
dec
aam
mov
ret
test
imul
mov
mov
inc
mov
mov
mov
push
mov
out
insb
sub
in
mov
jmp
or
adc
mov
punpcklwd
pop
popf
pop
shrl
push
addr16
and
pop
negl
pop
mov
push
inc
lods
repz
lock
or
or
and
test
les
sbb
add
pushf
xor
pop
aad
sahf
in
lcall
pop
inc
mov
fisubl
jl
xlat
enter
cmpsb
mov
add
movsb
or
sub
mov
add
push
shrl
lods
sbb
dec
jge
dec
xchg
das
nop
mov
push
cwtl
pop
sub
dec
fimull
hlt
scas
mov
rcll
push
test
mov
fisubrl
cmpsb
cmp
insl
dec
sub
mov
xchg
mov
mov
cmp
and
adc
inc
es
mov
out
dec
cmp
add
aas
test
add
cld
insl
mov
mov
ljmp
xor
out
jae
jns
mov
into
add
push
dec
add
repnz
cmp
arpl
or
cmp
aas
dec
inc
lods
sub
add
push
push
mov
pop
mov
filds
mov
push
aad
inc
lcall
pop
popa
stc
es
add
or
and
inc
add
push
aam
dec
shrl
fnsave
orb
mov
jno
jns
mov
or
clc
iret
repz
inc
adc
jge
mov
bound
lods
jae
mov
pushf
pop
enter
negl
popa
sub
mov
fchs
lea
aaa
loopne
jne
add
lret
ret
daa
loope
xlat
lret
outsl
or
pop
or
jp
outsl
lea
je
pop
sbb
lods
adc
and
rcrl
aaa
cmpsl
repnz
daa
dec
xchg
aad
inc
gs
das
adc
or
xor
arpl
xor
add
inc
xchg
stos
aas
jle
pop
int3
jmp
jnp
cmpsb
inc
cltd
sbb
adc
pop
jbe
mov
jmp
push
fdivl
ja
aaa
fdivs
repnz
je
loop
adc
int
mov
mov
cltd
ret
adc
std
and
inc
pop
mov
dec
test
out
imul
inc
jecxz
out
add
stos
inc
jle
cmp
imul
scas
xchg
add
pop
or
test
cli
popf
or
rolb
and
inc
stos
sahf
push
imul
push
jle
xor
movsl
insb
test
sub
inc
call
add
punpckhwd
xlat
iret
adcl
inc
cltd
and
sahf
dec
jecxz
push
gs
loopne
dec
int3
mov
scas
mov
mov
add
mov
int
xlat
mov
movsb
rorb
in
fsts
mov
cld
mov
popf
mov
mov
in
pusha
xchg
adc
in
mov
out
jbe
or
sub
add
push
outsb
sar
icebp
adc
inc
xchg
push
jp
sub
adc
and
push
lret
daa
fdivrl
mov
dec
push
mov
test
lds
mov
sbb
hlt
push
sbb
and
mov
dec
lods
push
pop
push
xchg
call
jmp
inc
sub
jle
insl
add
mov
jmp
neg
iret
jne
sbb
mov
sbb
lods
popa
inc
mov
ret
shll
cld
sarl
sub
cmp
fadd
lret
sbb
cmpsl
xchg
pop
addb
mov
or
adcb
adc
aaa
xor
mov
adc
notl
jmp
into
adc
js
mov
pop
jo
sbb
fnsave
push
leave
push
gs
mov
sbbl
scas
mov
pop
mov
jg
addb
jl
and
mov
pop
mov
lret
sub
fwait
out
dec
aad
or
xor
jo,pt
push
rcrl
mov
cwtl
jle
inc
inc
mov
scas
call
add
sbb
rcrl
xchg
add
adc
fidivrs
test
cld
dec
mov
test
movsl
test
add
jns
cld
jae
out
and
mov
test
mov
stos
or
mov
outsb
add
mov
xchg
sahf
sub
dec
shrb
push
push
push
lret
push
nop
jg
and
inc
shlb
sbb
arpl
cltd
mov
add
sub
shr
movsb
scas
adc
sub
in
test
mov
jae
ss
addr16
stos
es
lds
sbbl
lret
cmc
add
out
rcrb
pushf
enter
xchg
push
xchg
xor
mov
push
cmp
popa
aam
and
shll
sbb
xchg
movsl
loope
adc
out
test
mov
outsb
fidivrs
out
popa
fisubl
in
mov
mov
into
dec
jp
cwtl
push
push
cmp
inc
call
arpl
les
data16
xchg
inc
push
test
decl
pop
mov
loope
pop
dec
inc
bound
popa
in
iret
push
mov
lret
mov
movsb
divps
xchg
jge
jnp
dec
add
cld
adc
repnz
add
or
pop
jbe
std
aam
out
cmp
and
out
mov
xchg
push
enter
jp
add
out
rorb
je
aas
xchg
and
test
inc
push
cmp
daa
jno
ret
adc
popf
sbbb
mov
repz
fwait
cmp
and
ja
iret
mov
fsubrp
jl
xchg
stc
fsubrs
fbld
push
fcompl
xchg
das
xor
pop
subb
inc
inc
cmp
movsb
xchg
enter
sti
push
aas
fdivrp
jb
jnp
dec
stc
or
dec
hlt
in
ret
or
jge
mov
lods
and
push
subl
jo
mov
dec
jge
or
addr16
jmp
cld
lahf
mov
cmp
push
mov
mov
pop
loop
gs
cmc
scas
scas
nop
lods
jge
push
jle
les
js
mov
dec
push
lock
or
lahf
sti
sbb
or
and
test
out
idivb
adcl
push
inc
xchg
cmpsb
sub
adcl
pop
addr16
cld
in
mov
stos
dec
ret
jle
in
xor
jbe
pop
jmp
inc
push
mov
push
jmp
mov
xor
sbb
loop
xchg
fistpl
arpl
ljmp
test
adc
call
pop
mov
push
jae
fst
or
push
adc
lods
and
shlb
test
mov
pop
xor
sahf
ret
mov
jne
sub
sbbb
cmpb
in
cmc
stc
cwtl
sbb
into
adc
stc
iret
or
add
mov
mov
outsb
rol
jnp
out
sbb
sti
fnsave
lcall
aaa
mov
sahf
sbb
xor
mov
mov
daa
pop
rcrl
mov
cs
mov
out
mov
mov
enter
cli
inc
loop
insl
sahf
push
push
cli
jnp
add
int
jmp
inc
sahf
call
cltd
xorb
in
push
ds
jmp
sub
dec
and
jecxz
stc
push
adc
test
mov
lret
jo
pusha
xchg
in
cld
fcom
scas
xchg
pop
mov
add
out
testb
xchg
pop
test
jae
and
pop
pop
aas
fisttpll
repz
lcall
xor
ret
xor
xor
cwtl
stos
sbb
popf
inc
inc
pop
shl
push
jae
xchg
sub
jae
pop
pop
scas
lock
lock
add
in
push
aaa
or
mov
xor
aaa
fs
push
adc
lds
int
xchg
and
mov
subb
cmp
xchg
mov
mov
or
mov
mov
mov
idivb
es
jecxz
scas
push
dec
andl
or
or
jge
mov
and
add
inc
shl
mov
jmp
push
ljmp
dec
sub
sarb
xchg
mov
add
lcall
dec
insl
xchg
fildl
mov
xor
pusha
push
xchg
push
fidivrl
fsubrl
xor
adc
and
sbb
loopne
out
fisttpll
stc
dec
pop
xchg
mov
adc
outsb
pop
cmp
stos
mov
and
cmpsl
cmc
mov
pop
mov
and
and
lcall
sub
xchg
pop
int
inc
enter
pop
call
repz
in
imul
adc
xlat
loope
jl
adc
dec
lock
test
mov
push
mov
mov
shlb
es
ret
cmp
jo
bound
inc
mov
movsl
adc
lds
and
sub
pop
xlat
pusha
pop
and
call
fistpl
adc
inc
std
jbe
call
and
nop
sub
pusha
jecxz
out
dec
int3
testl
jnp
adc
loop
adc
adc
add
arpl
adc
and
xchg
mov
sub
dec
dec
stc
pop
idiv
fwait
and
lret
jbe
shlb
test
mov
cmp
pop
iret
or
insb
inc
adc
mov
xchg
xchg
ret
sub
pop
pop
add
dec
pop
lods
je
xor
or
fcomi
jno
jmp
stos
sub
jb
stc
jle
sbb
mov
inc
fisttpl
aam
es
xchg
orl
jmp
mov
aaa
mov
mov
imul
lds
stos
test
adc
mov
inc
sub
jae
aas
sub
mov
ret
rcrl
cli
cwtl
xor
or
xor
dec
data16
inc
jl
add
cli
push
aad
insb
pop
pop
fnstcw
mov
faddl
nop
sti
or
mov
cmp
scas
out
inc
xchg
and
add
daa
leave
test
pop
lret
out
int
adc
testl
xor
add
dec
xchg
xor
idivb
popa
and
xchg
jb
mov
stc
xor
sub
mov
xchg
pusha
repnz
cmp
popf
scas
insb
adc
out
xor
lods
adcl
dec
adc
inc
inc
call
fisttps
movsl
fstpl
adc
mov
mov
xor
add
xor
outsb
xlat
iret
scas
jecxz
mov
sbb
lds
sub
mov
lea
in
imul
xchg
push
mov
jl
lock
push
lahf
fwait
sbb
cmp
test
push
dec
in
rolb
push
jns
mov
push
mov
ljmp
shl
sub
and
scas
pop
xor
mov
push
notl
aad
into
jl
shll
mov
es
in
push
sub
pop
cmp
and
into
nop
bound
fwait
add
jp
mov
jno
lahf
inc
inc
jo,pn
cmc
pop
pop
scas
inc
das
adc
pop
test
lods
xor
xchg
ss
pop
shlb
dec
dec
and
pusha
mov
inc
adc
push
lock
mov
insl
hlt
stos
fsubrs
lea
mov
jmp
ds
sti
and
pop
shlb
xor
sub
jge
or
into
mov
js
add
mov
push
pop
nop
lahf
pop
nop
jecxz
mov
fists
fldl
mov
icebp
fidivrl
shlb
jne
cmpsb
adc
sub
push
sahf
movl
ds
jbe
lahf
cmp
pop
mov
in
in
add
xchg
cld
add
or
pop
rol
cmp
sbb
xor
xor
jp
imul
xor
dec
and
test
cmp
test
adc
test
cmpsb
push
mov
pop
mov
xor
pop
cmc
bound
sti
out
repnz
pop
push
sbb
sbb
hlt
lret
inc
mov
or
jge
push
mov
push
punpckhwd
pop
xlat
jb
xchg
fistl
xlat
ljmp
jecxz
shlb
incl
push
gs
mov
jae
movl
xor
or
repnz
dec
inc
and
fimuls
jecxz
jo
dec
xchg
jmp
pop
cli
pop
mov
inc
mov
xor
jmp
fs
shll
and
xchg
popf
stos
mov
cltd
xor
push
add
sbb
xlat
jb
leave
cmp
movsb
sti
loop
mov
mov
jmp
jns
lea
mov
mov
js
push
pusha
mov
add
and
dec
or
jb
enter
push
subb
fs
cltd
xor
mov
xchg
sub
xchg
in
pop
sbb
mov
or
sbb
mov
and
mov
sub
clc
inc
daa
cmp
mov
mov
xchg
stos
scas
pop
les
adc
addb
ljmp
xchg
lahf
jnp
push
adc
dec
data16
sbb
sti
je
data16
addr16
hlt
pop
cmp
pop
addr16
int3
push
pop
hlt
pushf
mov
aas
es
out
movsb
ss
shrb
adc
xchg
in
pop
out
inc
rcll
or
pop
fs
jae
movsb
sbbb
outsl
dec
movsb
fisubl
mov
lcall
adc
fnsave
pop
xchg
xor
pop
mov
sub
pusha
or
push
inc
aaa
cmp
out
add
popf
push
int3
or
das
push
and
or
insb
les
xchg
ret
mov
inc
decb
mov
in
push
cmp
mov
cmc
sub
xchg
outsb
test
rcll
int3
jns
inc
ljmp
das
lods
add
and
jne
mov
cmpsb
pushf
and
lds
pop
or
jmp
mov
pop
xchg
sub
push
pop
xlat
or
jmp
dec
out
sarl
imulb
adc
or
aad
mov
mov
mov
pop
je
into
jb
ret
fwait
jle
push
pushf
sbb
sti
push
bound
xchg
pop
cmp
mov
dec
mov
aad
add
and
adc
dec
ja
jmp
mov
pushf
push
sbb
pop
in
add
fdivr
push
jne
jne
mov
int
scas
sub
and
ficoml
add
loop
sahf
dec
mov
sbb
fisttps
jecxz
sub
ljmp
mov
jmp
mov
mov
mov
dec
push
outsl
hlt
or
je
xchg
fsubs
xchg
data16
add
xchg
push
ficoms
mov
jne
and
rorl
mov
cli
icebp
push
jno
jbe
adc
xchg
les
push
or
sub
test
invd
cmp
sbb
mov
or
cmp
aad
rcrl
shlb
daa
jno
mov
jmp
lds
and
pop
inc
pop
stc
loope
aam
jo
pop
mov
lret
pop
jl
pop
jge
dec
out
adc
cmc
cmp
cmc
outsb
lods
mov
imul
shl
adc
sub
lea
inc
das
and
pushf
jno
dec
inc
pop
mov
fdiv
fbstp
pusha
push
push
push
inc
xor
stos
bnd
mov
jl
mov
rcrl
stc
cwtl
test
mov
adc
sbb
adc
cmp
pop
xlat
cmp
cmp
add
lods
mov
xor
and
mov
mov
lods
dec
dec
daa
jae
adc
fisttpll
rcr
mov
stc
dec
pop
inc
aad
inc
cmp
adc
mov
adcb
cmp
fcomps
sahf
push
mov
repz
scas
ret
je
mov
push
mov
cmp
push
adcb
lahf
xor
popf
stos
mov
ret
pop
test
rcll
out
mov
out
test
hlt
pop
loopne
push
ret
xor
loopne
inc
sbb
push
xor
adc
sbb
pop
lock
xlat
aad
test
sbb
loopne
aaa
test
jbe
adc
in
scas
imul
in
jg
cmpsl
rclb
pop
into
enter
out
js
xor
dec
xor
insl
jo
or
dec
mov
xor
xor
subb
lret
dec
insb
outsl
fiaddl
ds
in
sbb
stc
mov
dec
push
xchg
repnz
jo
mov
stos
mov
loope
sbb
and
std
inc
lahf
cmp
fldt
xor
test
insl
insl
cld
cmp
add
pushf
xchg
mov
add
sbb
mov
aad
xchg
mov
jno
lcall
sbb
lret
cmp
pop
inc
jns
dec
out
lahf
mov
mov
or
cpuid
xor
stos
lcall
push
sbbb
rcll
rcll
idiv
lea
stos
dec
stos
dec
shrb
clc
psubb
cmpsl
pop
lods
pusha
jg
hlt
and
cmp
fs
loop
push
pop
icebp
insl
int
das
stos
push
movsl
pop
lret
jo
ret
adc
insb
fsubrl
ret
enter
xorb
dec
add
or
call
mov
stc
add
fldcw
imul
in
insb
dec
xor
lock
add
rcll
pop
movsb
mov
add
out
shl
jecxz
mov
inc
jl
or
in
fldl2e
add
adc
fisubrl
or
cli
es
fldt
imul
dec
rcrb
xchg
cmpsb
cltd
fdivs
mov
ljmp
jmp
lcall
test
inc
jl
in
pop
mov
scas
popf
cmp
clc
fxch
xor
mov
fimull
sub
push
iret
mov
fucomip
stc
cmp
aad
xchg
and
ss
and
ljmp
xor
sbb
xchg
aam
xchg
lcall
pop
add
push
or
jecxz
and
repz
cmp
xchg
cmpsb
gs
inc
sub
addb
sub
shll
ret
mov
xchg
inc
loopne
out
push
add
jg
jbe
jg
jge
or
pusha
popf
das
xchg
daa
add
jecxz
cli
jecxz
aas
je
stos
sub
repnz
out
ds
xchg
xlat
test
xchg
scas
rorl
jno
xchg
mov
or
xchg
orl
lea
icebp
cmp
mov
adc
ja
dec
jle
icebp
out
add
fcoms
aas
push
sbb
add
rcl
xchg
repnz
mov
inc
std
and
insl
pop
lret
in
movsl
pop
arpl
xor
pop
xchg
sub
jb
mov
lret
sbb
dec
in
outsl
cmp
dec
cs
jns
aam
push
push
sub
adc
mov
cmp
push
fldl
push
and
fisubs
out
or
xchg
cmp
push
mov
aas
int3
out
cltd
mov
lods
cmp
lcall
add
adc
mov
test
adc
mov
addr16
rcrl
jno
sub
ret
xchg
pop
pop
test
loop
out
out
test
out
fldcw
dec
imulb
mov
dec
jo
inc
adc
xchg
pop
push
nop
or
in
cmp
mov
cmp
push
or
sbb
sub
push
sub
insl
push
outsb
or
sti
mov
aas
cmc
dec
mov
sub
mov
cmpsb
cmp
out
push
ss
lods
inc
push
test
mov
mov
mov
mov
sub
cmpsl
pushf
dec
dec
dec
ret
data16
jne
jg
outsl
imul
shl
cmp
es
adc
hlt
mov
push
pop
mul
cmp
sub
sbb
adc
jae
jae
add
prefetcht0
cli
and
dec
mov
jnp
in
pop
dec
ljmp
xor
xchg
ror
add
jae
in
test
mov
cmp
je
ss
ss
add
push
sub
clc
or
and
rolb
ror
cli
movsb
lds
xor
push
xchg
lcall
inc
imul
jl
js,pt
jle
and
ja
ja
leave
jge
xchg
andb
fwait
push
or
and
jmp
adc
sbb
ficoms
jp
ret
pop
movsl
arpl
mov
cli
scas
add
in
cli
push
xchg
jb
call
sahf
and
stos
sbb
stc
jne
lock
cmpsl
loope
ds
mov
inc
xor
ljmp
outsl
mov
pop
and
xchg
jle
mov
loope
test
gs
jle
sub
rclb
inc
insb
std
add
mov
dec
xchg
xchg
or
lret
cmp
pop
pop
mov
add
mov
negl
das
xchg
ja
xor
dec
lahf
add
jae
adc
js
movsb
out
xor
xchg
xorb
icebp
adc
add
addr16
lret
test
xchg
xchg
sub
mov
push
incl
dec
outsl
aaa
test
fs
fnsave
cmp
fdivs
stc
jmp
into
pop
lea
out
jnp
outsb
or
push
sub
mov
push
push
mov
movsb
mov
xor
fmuls
dec
pop
js
pop
mov
fwait
in
cli
mov
repz
cmp
repz
fsubrl
xor
loop
mov
loopne
cmpsl
out
xor
mov
mov
xor
dec
out
sub
aas
stos
and
lds
or
xchg
mov
lahf
call
add
xchg
and
dec
cwtl
aas
add
in
rcll
imul
adc
icebp
out
loop
mov
sbb
filds
jp
and
loop
test
imul
stos
pusha
sbb
mov
lock
mov
and
fdivrs
dec
pushf
int3
adc
nop
out
int
movsl
push
ljmp
movsl
sbb
call
sub
sbb
enter
mov
jecxz
jle
out
or
enter
mov
mov
push
mov
sub
mov
cld
pop
in
sub
enter
mov
fldenv
push
sub
leave
inc
jl
pop
pop
cmp
mov
movsl
ljmp
xchg
sub
xor
pop
mov
dec
repnz
mov
repnz
mov
mov
and
jns
adc
mov
shll
sbb
adc
cmpsb
push
pop
jmp
push
mov
repnz
dec
imul
arpl
fstps
call
insb
call
xchg
pop
scas
mov
sbb
mov
jl
cmpl
test
dec
xchg
sbb
test
fsubl
sbb
shl
dec
xor
fsubrl
add
es
cmp
pushf
lret
xor
jb
dec
add
mov
decb
inc
ror
and
movsl
pavgb
or
pop
test
mov
cmp
les
leave
mov
cltd
test
loope
add
xchg
cmp
mov
loope
shl
adc
sbb
dec
xchg
sahf
pop
fdivr
adc
mov
mov
push
test
mov
mov
sub
cli
pop
inc
jecxz
ja
imul
sbb
ljmp
mov
sub
loope
cmc
adc
mov
mov
mov
mov
repz
jbe
jae
fstps
sub
movsl
loope
or
xor
jmp
fidivrs
mov
ja
int
adc
adc
lahf
rcrl
lret
shll
push
lds
add
imul
mov
mov
lods
mov
mov
and
mov
push
xlat
sub
outsl
pop
mov
orb
sub
ret
js
or
insl
sbb
mov
test
push
mov
enter
popa
cs
cmpsb
mov
std
dec
mov
lret
pop
and
push
or
call
stos
sub
push
ret
dec
fcompl
test
shld
mov
push
push
dec
test
adc
and
rcll
add
ja
neg
inc
shll
sbb
push
mov
fwait
inc
sbb
das
lods
cs
or
or
mov
jmp
lock
fsubs
shrb
test
xchg
sub
xchg
xchg
mov
push
lcall
out
icebp
xor
addb
xor
or
cld
ds
jo
inc
lock
push
cmp
adc
push
sub
pushf
sub
mov
stc
push
sahf
inc
xchg
loop
push
push
push
gs
jno
mov
sub
push
mov
jae
add
push
jb
xchg
out
sbb
insb
hlt
push
testl
aam
mov
push
mov
jae
movsl
xchg
andl
cld
add
xchg
pop
jmp
enter
or
or
mov
cli
mov
shlb
cmpsb
adcb
popa
movb
fwait
dec
lods
rcl
call
faddl
leave
cmpsl
push
loopne
aad
mov
push
pusha
scas
inc
push
cltd
cmp
sub
xor
fstps
mov
and
mov
xchg
outsb
xor
std
cltd
push
daa
xor
or
jnp
pop
lea
xor
repnz
jecxz
jo
ja
int
out
cmp
add
cli
adc
xchg
adc
dec
sub
fs
arpl
sub
int
adc
fisubrl
movsl
fs
dec
and
sahf
lock
and
push
aaa
cmp
cmp
fdiv
pop
push
stc
fildll
addr16
adc
xchg
mov
pop
mov
xchg
adc
mov
jne
into
aaa
cmp
loop
jmp
loope
xchg
das
jp
icebp
mov
xchg
ds
call
fwait
movsb
xor
lret
push
jns
mov
mov
add
inc
inc
mov
lahf
aaa
out
sub
daa
cli
cmp
xor
andl
outsl
pop
mov
or
lcall
pop
mov
scas
mov
jno
adc
sbb
sub
jmp
iret
test
pop
inc
arpl
inc
xchg
add
xor
gs
repz
xor
call
cli
mov
arpl
mov
loope
aaa
sbb
movsb
leave
dec
sbb
mov
push
sbb
pop
jg
mov
loopne
cwtl
xor
das
cld
adc
xchg
mov
cmp
xor
mov
add
adc
iret
jno
int
xor
stos
cld
and
mov
xor
mov
xor
ret
adc
push
sub
mov
and
int
sbb
into
repz
lret
dec
paddusb
push
stos
daa
inc
dec
ss
dec
cmp
lock
push
insb
cmpsb
dec
fnstenv
adcb
je
outsl
dec
lods
or
cmp
pop
mov
fnstsw
inc
adc
dec
mov
fxch
mov
imul
xchg
dec
lahf
cmc
fwait
mov
mov
fcomi
dec
jp
mov
xor
nop
lods
rol
sbb
and
nop
fidivs
insl
repnz
xlat
out
mov
inc
xchg
xchg
pop
jmp
sbb
adc
ret
fldenv
pop
inc
or
push
mov
das
stc
shlb
pop
mov
sbb
jge
in
cld
dec
cmp
popa
mov
xor
jmp
loop
and
sub
push
cmpsb
adc
cmp
xor
dec
xor
sub
lret
pop
into
push
dec
loope
cmp
mov
adc
in
jge
int
sbb
test
cwtl
pop
mov
push
cmp
xchg
call
xchg
mov
pop
mov
pop
cmc
dec
xchg
popf
mov
ss
repz
adc
mov
mov
mov
in
mov
jge
add
mov
mov
sti
jb
add
sub
hlt
sub
gs
xor
hlt
in
add
fdivrl
pop
movsl
pop
jmp
cmp
push
sbb
inc
negb
inc
test
jecxz
test
test
inc
rorl
inc
rorb
fidivrs
add
in
pop
push
leave
leave
jnp
push
addl
xor
pop
cmp
and
cld
push
adc
mov
sarl
pop
pop
les
lret
call
mov
dec
int
out
jl
and
cmp
into
xchg
add
cmp
and
xor
sarl
and
repz
adc
mov
push
cmpsb
push
add
push
notb
xchg
jae
or
add
incl
and
les
mov
adc
sub
lret
dec
lahf
daa
mov
adc
add
lret
daa
mov
ss
xor
aad
xor
pushf
jo
stos
fneni(8087
dec
repnz
jg
in
pusha
adc
or
test
push
stc
stos
cs
adc
ljmp
add
shrb
scas
popa
enter
arpl
mov
fildll
and
int3
sub
jp
mov
mov
divl
jnp
xor
xor
xor
adc
push
fwait
pop
popf
sbb
loop
rcr
pop
inc
mov
mov
pop
mov
ja
adc
out
fxam
cmp
call
test
rolb
test
pop
dec
aam
adc
and
adc
loope
mov
scas
sbb
push
je
push
inc
test
dec
imull
and
push
mov
shll
and
sub
lret
lcall
push
push
push
mov
fcoms
mov
in
sahf
addr16
xlat
pop
adc
dec
subl
inc
fnstenv
scas
adc
lods
cwtl
dec
mov
inc
jnp
stos
in
adc
add
fstp
and
pop
jno
pop
scas
enter
fldpi
hlt
mov
and
push
push
jp
jno
mov
mov
negb
push
jecxz
add
add
iret
std
jo
push
sarl
jle
pop
aaa
xchg
rcr
mov
ljmp
jg
fsts
movsl
lds
xor
movsb
xor
testb
jmp
lods
push
or
int
stos
adc
xor
loope
inc
dec
push
rolb
xchg
inc
cld
in
shlb
ret
inc
bound
sbb
loop
shll
and
push
loop
cmpsb
rorl
out
pop
dec
inc
mulb
jne
stos
pop
push
add
in
and
in
inc
add
inc
or
xchg
idivl
sbb
in
jns
cli
out
inc
xor
jecxz
pop
pop
cmp
dec
pop
push
aad
cmpsb
inc
out
test
ffreep
fdivrs
icebp
xchg
cmpsb
mov
sbb
add
mov
or
and
cmp
push
cs
pop
cmpsl
push
sub
jne
int3
mov
add
jne
pop
ret
cmp
mov
stos
cli
bound
lret
inc
or
push
daa
ret
mov
push
imul
push
out
mov
cld
ja
xor
sbb
mov
loopne
loope
dec
push
ror
movsb
sbb
xchg
xor
fcmovbe
out
es
pop
push
mov
sahf
push
mov
ret
xchg
enter
ret
push
push
and
xlat
aam
inc
gs
faddl
mov
adc
orb
imul
mov
mov
jb
nop
or
mov
mov
jns
pop
xor
test
das
mov
and
cli
inc
lods
loop
fisttpll
dec
movsb
dec
pop
fsubl
and
sti
dec
fwait
dec
and
inc
mov
mov
jmp
lds
jmp
add
mov
imul
mov
sub
ret
lret
out
icebp
lock
adc
jmp
inc
scas
fistpl
xorl
mov
push
mov
pop
enter
fdivs
push
xchg
lcall
aas
pop
xor
cmp
jb
jge
adc
test
shll
insb
add
arpl
xor
or
dec
or
fbstp
js
fs
movsl
dec
or
jae
mov
int
adc
insb
or
dec
cmp
pop
imul
jecxz
cmpb
mov
cmp
jge
pusha
lahf
xchg
test
cmc
arpl
inc
lods
leave
add
fisubl
jns
inc
repz
sarl
sbb
push
sbb
lock
jmp
and
cmp
pop
in
in
push
in
or
in
mov
xchg
out
and
mov
fmul
lods
pop
jp
rcrb
dec
and
lcall
mov
push
push
pop
mov
pop
xchg
daa
jl
scas
int
outsl
mov
setb
mov
cld
push
ljmp
and
mov
out
rorb
xchg
imul
xchg
in
imul
xchg
sti
scas
cmp
stos
mov
xor
push
orb
in
das
or
xchg
mov
push
cmc
xchg
imul
dec
out
adc
mov
add
jo
test
xor
and
mov
hlt
push
xchg
cmpsl
inc
hlt
fsubrs
outsb
sbb
es
mov
adcl
icebp
inc
jle
mov
pop
xchg
push
in
jecxz
jp
xorb
movsl
xor
sbb
jne
adc
or
push
out
shlb
mov
dec
xchg
das
sbb
inc
into
popf
std
and
jae
out
hlt
pop
and
lods
imul
xor
je
loope
out
or
sti
xchg
push
cmpsl
push
incb
mov
clc
sbbb
lods
stos
imul
push
xchg
adc
cld
dec
sub
lret
sub
insb
ret
adcb
sub
sbb
xchg
push
outsl
xor
mov
movsb
imul
cmp
and
loope
adc
adc
sbbl
xor
out
jne
cmc
repnz
shll
movsb
cmp
lods
pop
xchg
movsl
das
sub
xor
cmp
imul
push
fcoms
xchg
jb
jnp
lahf
sbbb
adc
lret
inc
sub
sti
adcl
mov
push
mov
or
pop
aaa
repz
mov
loop
or
jge
xchg
enter
cld
mov
sahf
test
ret
mov
jle
stos
pop
xchg
cmp
pop
sti
call
cmpb
mov
icebp
inc
fmul
jmp
jb
push
cmc
leave
sub
add
add
shl
xchg
dec
call
lahf
xchg
cld
xchg
push
stos
fs
jo
sbb
xchg
fistpll
pop
inc
cwtl
pop
test
jo
in
shlb
or
and
add
repnz
push
xchg
lock
clc
sbb
pop
in
leave
cltd
das
mov
mul
mov
sub
or
or
stos
jbe
sbb
mov
cmp
pop
test
shll
xchg
je
ljmp
pop
jbe
loopne
push
push
push
shrl
ret
xorb
lock
es
xor
push
pop
sbb
xor
jno
ss
push
push
add
xor
or
call
out
rorl
cmp
adc
icebp
cmp
into
cli
xchg
cli
je
jnp
and
sub
jl
mov
pop
dec
lret
sub
pop
or
pop
cwtl
push
test
ret
ss
xor
push
xchg
mov
lcall
jno
aad
repz
dec
jle
mov
dec
xor
adc
add
xchg
add
test
mov
and
inc
cld
sbb
inc
sub
popa
movsl
sbb
aam
and
sbb
cli
fistps
mov
dec
imul
call
lret
and
aaa
or
and
rorl
or
aam
hlt
dec
mov
mov
inc
mov
int3
mov
ret
sub
movsl
mov
dec
insb
dec
imul
cmp
sbb
xchg
addb
sub
jbe
jle
sbb
sub
sub
mov
test
cld
ja
scas
out
add
jno
lea
out
or
push
sub
std
xchg
xlat
in
scas
hlt
cmp
inc
pop
out
cmp
sub
repnz
roll
dec
insb
xchg
add
cld
mov
ret
cmc
lds
mov
mov
push
fs
lret
cmp
mov
cmpsb
cmc
pusha
popa
test
push
fsts
call
pop
adc
xchg
add
iret
and
icebp
cmp
adc
inc
add
pop
pop
xor
aad
mov
hlt
xchg
pop
nop
aam
cmpsl
cmpsb
and
cmp
scas
push
je
or
pop
mov
jne
sub
lahf
aad
or
inc
mov
adc
ljmp
popa
aad
insl
mov
ja
and
repnz
aas
addr16
loopne
movsb
xchg
xchg
xchg
push
sub
arpl
and
fs
cmpb
mov
fwait
adc
add
lret
insb
ss
and
sbb
pop
shrl
in
xchg
adc
out
sbb
push
push
inc
inc
mov
insb
and
les
aas
mov
or
xchg
pop
out
pop
add
aaa
mov
fwait
cmp
push
mov
mov
cmp
or
cltd
cmp
jp
inc
push
daa
xor
enter
clc
xchg
daa
loopne
or
std
adc
mov
sub
and
xchg
ror
mov
imul
jp
dec
xchg
or
xchg
repnz
xchg
mov
cmp
push
test
mov
je
mov
fs
fsubr
and
repnz
jae
frstor
rolb
ja
dec
movsb
sahf
in
notl
inc
pusha
or
out
cli
loop
fcmovnu
daa
cltd
dec
fnstcw
js
out
push
sbb
jo
add
mov
adc
loop
add
cmp
fldl
mov
aad
jae
sub
test
out
imul
rcll
adc
test
add
add
mov
dec
imul
lret
mov
in
mov
xchg
in
add
stc
lods
pop
movq
jl
push
mov
movsb
js
mov
and
cmp
sbb
mov
fimull
cltd
movsb
push
rorl
mov
add
rorl
mov
dec
sub
repnz
dec
sub
push
jae
jb
loopne
jne
sahf
and
cmp
mov
adc
jmp
mov
mov
sbb
daa
negl
pusha
inc
clc
aad
cld
mov
xchg
adc
jmp
bound
mov
sub
and
mov
rcr
push
imul
cmp
mov
mov
ret
mov
mov
inc
xchg
scas
iret
daa
test
lds
lea
mov
cli
cmp
xchg
jno,pt
sbb
and
xor
test
dec
push
push
adc
sub
fwait
movsb
aam
and
cmp
adc
repnz
cld
mov
and
js
xor
sbb
in
fidivl
mov
push
shl
lods
hlt
mov
lret
sbb
and
sahf
sahf
lcall
or
pop
pop
pop
cmc
sbb
mov
add
dec
fwait
pushf
ret
jecxz
xor
cmp
sahf
xor
and
push
pop
es
lret
lcall
pop
sub
add
pop
loop
sbb
fldt
and
mov
pop
mov
inc
and
stc
xchg
mov
repz
jmp
pop
js
shll
cmpsb
pushl
cmpsl
rolb
andl
movsl
push
push
xchg
rcrl
pop
cmp
imul
adc
xchg
stos
ret
scas
je
ljmp
adc
insb
iret
loope
jbe
cmp
test
hlt
rolb
ret
aad
sub
cwtl
xor
jge
shll
aas
mov
call
mov
jne
mov
dec
das
add
in
rcrl
sbb
stos
fsts
sub
pop
call
inc
mov
sbb
and
push
push
and
xchg
ja
adc
and
dec
test
pop
into
rcrl
iret
push
jno
push
mov
push
mov
jae
adc
mov
outsb
xchg
loop
jo
dec
stc
push
jns
cmc
jb,pn
in
cmp
movsl
insb
mov
cs
mov
cld
mov
xchg
hlt
push
or
out
scas
pusha
fwait
sbbb
aas
lods
add
fimull
mov
lds
cmp
add
ljmp
fwait
lret
insb
cmc
out
out
dec
sub
cmp
dec
shll
sbb
es
clc
or
mov
add
lds
mov
pop
fnstenv
in
test
enter
xchg
jbe
mov
jp
xor
sbb
shrl
cld
pop
stos
dec
bound
stos
data16
mov
xchg
sbb
xchg
out
or
nop
lods
mov
push
sub
jge
and
mov
push
lcall
sbb
jl
mov
mov
fwait
push
int3
pop
push
out
cmpsl
imul
push
mov
rcrb
push
and
gs
jmp
das
adc
or
sub
and
sub
sbb
adcb
cmpsb
mov
xchg
mov
or
sarb
test
mov
inc
arpl
pop
push
lcall
jmp
jge
inc
sbb
daa
push
mov
je
add
jbe
pop
pop
inc
aam
aas
cmove
mov
pushf
jne
stos
and
mov
ds
imul
and
mov
add
ljmp
mov
mov
cmpsl
adc
fisubs
cwtl
fsubr
push
mov
loop
ficoml
insb
adc
pushf
test
mov
or
xlat
dec
mov
stos
int3
addb
fstpl
bound
je
daa
test
cmp
js
les
pop
jl
xor
js
sbb
in
ja
movsb
push
insb
pop
test
push
dec
fildll
push
cmpsb
jno
in
jno
sub
movsl
jl
xor
jnp
push
jae
pop
adc
ds
mov
in
mov
push
aad
jl
in
push
pop
testb
push
inc
add
or
inc
mov
sub
fdivl
popa
aad
shlb
mov
ret
sahf
faddl
sbb
push
mov
clc
fs
push
sub
clc
sbb
je
dec
outsb
xor
cmp
aam
push
jmp
out
and
xor
inc
xor
mov
sbbb
rep
xchg
fwait
sub
pop
rcrb
push
outsl
cld
aas
push
xlat
fdivl
movsb
xchg
popf
mov
out
xchg
cld
inc
cs
stos
cld
pop
clc
jne
xor
jne
add
add
inc
cli
cld
jae
repz
movaps
sub
insb
bsr
mov
cwtl
push
outsl
or
mov
pusha
mov
or
mov
xor
push
das
sti
xchg
test
out
adc
std
xor
adc
sub
rorl
pop
pusha
and
mov
cmp
pop
dec
xchg
add
arpl
cwtl
sub
dec
push
add
ja
or
mov
pop
fnstcw
inc
xchg
pop
jl
push
stos
push
outsl
ror
jmp
sti
add
push
mov
nop
or
lahf
pop
push
rolb
inc
movsw
push
pushf
and
add
add
xchg
icebp
sub
out
lahf
imul
adc
xlat
jmp
inc
jns
xor
movsl
cmp
or
mov
add
inc
xor
outsl
daa
mov
inc
shll
cmpsb
bound
and
and
pop
fadd
cs
xor
push
int3
xlat
or
bound
ret
lock
jb
xor
ds
fwait
add
incb
loopne
movsb
push
dec
cmp
adc
repnz
inc
je
js
pop
jmp
repnz
fucomp
add
stos
nop
mov
in
scas
sbb
push
test
add
dec
add
leave
jnp
mov
aas
lahf
repnz
sub
adc
div
addr16
roll
push
fistps
or
cmp
dec
and
push
aam
jae
or
mov
sbb
mov
std
mov
icebp
mov
add
test
aas
out
cltd
not
xchg
rcrb
and
xor
pop
loope
dec
lds
jb
fadds
aam
repz
xor
xchg
notb
cltd
add
mov
xor
in
cmp
leave
jb
mov
orb
test
int3
pop
push
test
mull
pushf
subl
mov
inc
outsb
dec
not
dec
pop
xchg
jno
or
imul
adc
mov
xchg
neg
xchg
jne
or
cmp
daa
sub
icebp
mov
je
rolb
push
dec
add
mov
xor
imulb
push
stos
pop
jecxz
sahf
push
ljmp
inc
push
and
out
sub
dec
into
jnp
xorl
dec
or
sbb
jge
push
mov
mov
sub
xchg
jmp
mov
jg
xchg
mov
sub
xchg
imul
mov
shlb
jo
jp
lock
lods
cmpsb
sbb
inc
test
aam
outsl
loop
adc
add
cmp
push
repnz
jecxz
mov
test
adc
sbb
sub
mov
xor
push
test
mov
out
aaa
mov
lret
movsb
push
jmp
sbb
cld
adc
dec
cmc
pop
or
jnp
out
ja
flds
cltd
xchg
fs
test
fisttpll
push
addr16
cmp
imulb
sub
fsubs
xchg
pop
sub
pcmpgtw
dec
mov
das
inc
mov
push
mov
lret
jo
in
sub
sub
inc
mov
jbe
pusha
imul
pop
jns
ja
sub
je
jno
movsb
pop
jmp
jp
lcall
add
aam
cmpsl
fcomps
rcll
add
test
or
dec
sbb
pop
mov
shll
fistps
add
sbbb
pop
jb
cmpl
adc
insb
insb
mov
inc
aam
out
das
incl
lret
cltd
je
gs
mov
cmp
dec
cmp
add
push
mov
loopne
xor
std
ja
outsl
xchg
dec
into
mov
call
sub
out
aas
insl
sti
xchg
out
xchg
daa
gs
cmp
loop
sub
pop
test
push
test
push
add
cmp
ret
cmp
mov
mov
outsb
insb
cltd
inc
popa
mov
inc
adc
mov
sub
mov
fidivs
cmc
or
xor
std
loopne
jbe
test
xor
insl
push
not
mov
xchg
push
push
mov
sti
lcall
xchg
frstor
sti
mov
cmpsb
cmp
iret
shrb
insb
insb
fwait
sbb
divb
dec
jns
cmc
sbb
test
ret
jge
sub
outsb
stos
dec
enter
lret
mov
aam
xor
xlat
xchg
push
sahf
sub
or
clc
call
mov
inc
cmp
sbb
stos
int3
mov
mov
mov
mull
daa
dec
adc
push
leave
xor
push
sub
pop
shll
ss
insl
lock
rolb
sbb
or
outsl
cli
stc
in
sbb
rorb
mov
sbb
pop
xor
jb
jecxz
repz
adc
fsubl
fstpl
gs
ljmp
cmp
cmp
inc
not
jp
jmp
mov
sbb
test
lcall
cs
add
push
repnz
fistpl
inc
sub
mov
jle
insb
add
lea
loop
outsb
and
xchg
shlb
loop
test
mov
push
std
mov
ss
mov
std
pusha
and
ds
cltd
in
andl
jg
repnz
stos
dec
pop
xchg
xchg
sub
add
pop
pop
sbb
dec
mov
pop
jnp
insb
cltd
mov
out
pop
xchg
inc
sub
rclb
jmp
cs
sbb
pop
dec
sub
xchg
fldl
adc
dec
cwtl
les
mov
dec
pop
add
and
in
pop
repnz
inc
scas
dec
or
lea
dec
mov
sbb
cmp
cltd
ljmp
pop
incl
and
cmp
push
adc
sahf
sbb
andl
inc
inc
xchg
hlt
inc
testl
aam
push
icebp
pusha
add
test
fcmovbe
jecxz
cmpl
lds
sbb
add
lods
cmc
arpl
mov
cmp
inc
rorb
and
notb
dec
mov
lods
xchg
cltd
pop
cld
in
cli
ljmp
stos
loope
shrl
inc
add
mov
dec
iret
imul
stos
jno
pop
xchg
lock
adc
xor
in
dec
in
dec
pop
pop
push
mov
cmp
ret
int
rorl
mov
orl
daa
xchg
out
insb
test
daa
stos
into
std
mov
pop
mov
xor
push
jmp
ljmp
icebp
repnz
out
fsubrp
push
mov
add
mov
cmp
ficomps
dec
push
lahf
pop
push
jne
int3
pop
loopne
jecxz
add
repz
xlat
mov
popf
dec
add
add
mov
lahf
rorl
xor
mov
mov
in
push
mov
xlat
sbb
mov
in
sub
mov
movsl
insb
test
sbb
lods
outsl
ljmp
cmpsl
clc
scas
rcrl
xor
sbb
loop
cmp
in
ror
cmp
jbe
in
rorl
mov
aaa
push
out
int
add
nop
iret
sub
rcr
adc
lock
sub
stos
addr16
out
sbb
aaa
stc
aas
sahf
inc
stos
rorb
adc
lea
ret
call
adc
icebp
mov
adc
push
mov
jp
pushf
push
je
outsb
mov
fcoml
lock
fiaddl
arpl
rolb
negb
xor
xchg
jecxz
xchg
scas
out
xchg
sti
xor
sti
inc
daa
jle
mov
cmc
mov
fisubs
jmp
scas
mov
mov
mov
push
popf
mov
cltd
inc
in
mov
cmp
icebp
inc
mov
popa
lahf
cmc
lahf
rcll
lock
ss
lahf
std
sar
xchg
stc
pop
icebp
cltd
xchg
rorl
ja
rcl
shrl
insl
hlt
pop
sbb
scas
jl
sbb
push
push
imul
add
and
pusha
sbb
cltd
iret
std
in
nop
jle
xor
loopne
iret
pop
fldcw
outsb
cmpsb
push
inc
or
popa
cmp
and
mov
add
test
loopne
xchg
sbb
shll
mov
mov
fisubrl
push
mov
mov
pusha
mov
mov
sub
shr
add
fisttpll
jne
sbb
push
adc
jb
dec
jg
xor
and
aas
imul
fprem
out
data16
push
mov
push
dec
add
sbb
fidivrs
cltd
jb
push
cmc
mov
out
ret
fidivs
lods
jle
push
sbb
scas
in
jmp
lret
in
mov
push
ret
add
shll
das
fnsave
xchg
xchg
loope
das
pop
jb
cmp
jecxz
icebp
cwtl
cmp
mov
adc
push
push
ljmp
adcb
data16
hlt
cmpsb
rcrl
cmpl
out
imul
mov
fcomp
stos
add
pop
jo
dec
cld
pop
pop
cwtl
pop
into
movsl
fsubs
pop
inc
outsb
jmp
jg
ret
scas
das
pop
rcll
xabort
mov
mov
pop
aaa
cmp
mov
inc
inc
std
sub
loopew
mov
or
in
in
fbld
adc
ja
jge
fnstsw
mov
orb
out
dec
adc
pop
shrl
in
jge
cli
es
jmp
add
loop
lret
rclb
inc
fst
sbb
add
cli
xchg
xor
sbb
scas
pushf
pop
jbe
push
and
push
ficoms
sbb
jmp
push
jns
lcall
popf
imulb
mov
repz
scas
push
cs
inc
push
je
xor
popf
arpl
fmuls
ret
out
imul
lds
sbb
cmp
mov
test
add
push
jp
add
insl
pushf
in
pushf
mov
insb
push
mov
sbb
aaa
adc
insl
mov
fsubrl
adc
arpl
cmp
mov
push
pusha
dec
loope
or
xor
push
jne
mov
repnz
jne
pop
and
aad
jnp
jo
xchg
mov
in
sbb
in
imul
inc
clc
dec
out
lods
loope
cmp
fimull
ds
ljmp
pop
push
lret
cmp
in
jmp
inc
js
sub
cmpb
roll
leave
add
in
mov
push
out
sbb
subl
xchg
in
jg
pop
push
mov
js
dec
outsb
or
cwtl
jge
mov
stc
les
pop
lahf
dec
mov
add
dec
enter
lahf
inc
dec
add
orl
out
in
or
sub
je
lods
pop
inc
js
out
add
xchg
ljmp
xor
adc
add
jae
xor
mov
xchg
xchg
dec
dec
mov
ja
mov
inc
lods
push
xchg
and
fsubrs
jae
movsb
jle
or
test
cmp
sub
cltd
add
repz
push
scas
std
jle
pushf
cmc
lods
mov
rol
out
std
sbbb
cmpsl
push
pop
cmp
cmp
add
fs
cmp
jg
int3
out
arpl
mov
or
xchg
arpl
xchg
jns
mov
mov
cmp
dec
dec
xchg
lahf
icebp
test
js
sbbl
stc
dec
inc
ljmp
sub
cmpsb
pop
cmp
ss
push
xor
cmp
int3
mov
repz
mov
xchg
or
cmpsl
mov
mov
in
fstpt
lock
loop
xor
popa
inc
arpl
mov
lods
fdivs
add
or
xor
pop
dec
cmpsl
daa
dec
arpl
rorl
or
cltd
and
stos
and
and
lods
scas
xor
lods
int
dec
popf
repnz
jmp
xchg
jp
xor
xchg
add
inc
test
sbb
xchg
addr16
dec
sti
mov
in
xor
push
adc
cmpsb
std
ja
push
das
cli
mov
jne
adc
ja
and
and
cmp
or
mov
cmp
and
pop
mov
cli
xlat
mul
fiaddl
pop
sarl
mov
in
aam
push
sub
mov
jl
push
sub
lcall
push
pop
enter
or
hlt
lahf
cmc
mov
jns
pusha
mov
sbb
jnp
cmc
sub
loop
jl
sbb
lds
sbb
leave
int3
bound
xorl
sub
movsl
push
adc
es
ret
jns
jnp
sbb
aad
pop
std
xor
adc
xchg
jmp
dec
inc
mov
adcl
das
add
sub
in
imul
popf
or
mov
fsubs
fsubs
push
xchg
jmp
movsb
pushf
pop
fxch
mov
stc
les
arpl
movsb
or
out
mulb
ja
mov
cmp
iret
add
mov
daa
xor
pushf
dec
daa
enter
or
cmc
mov
mov
jnp
addr16
rclb
shll
out
cmp
add
lods
popf
sub
call
cmp
pop
icebp
xor
add
ret
dec
addb
push
cmp
sub
bound
push
in
fadd
call
mov
pop
jbe
pushf
mov
cmpsb
jle
mov
lods
sub
mov
imul
adc
jmp
stos
cli
pop
stc
or
mov
aad
arpl
sarl
cltd
xor
cmpsb
repnz
jo
xchg
stc
cmpsb
imul
mov
cld
das
sti
lods
add
inc
je
or
shrb
fbstp
add
jmp
xor
and
aad
and
scas
hlt
lcall
sbb
push
inc
data16
cmp
inc
jmp
aaa
lret
inc
mov
xchg
fs
jmp
xor
dec
inc
out
jmp
or
ds
stos
cmp
push
aas
jge
xlat
push
xorb
jns
test
mov
lahf
mov
adc
ret
cmc
jge
mov
shll
into
mov
cld
sub
in
jo
inc
nop
mov
jp
mov
aam
mov
insl
push
push
jae
dec
cltd
xor
addb
int3
inc
sbb
cmp
movsl
adc
sbb
bound
inc
sbb
rclb
inc
mov
cmp
dec
and
negb
add
mov
mov
jecxz
mov
pop
gs
fs
lret
call
and
std
scas
stc
mov
enter
insb
inc
js
mov
xor
lods
insb
jno
mov
add
imull
pusha
fbstp
sbb
bnd
jnp
adc
mov
pop
addr16
sysexit
push
lods
xchg
cltd
pop
jo
mov
cmpsb
inc
ljmp
and
sbb
mov
adc
sub
ss
jmp
test
jno
add
stc
sub
pop
mov
jecxz
mov
repnz
popf
lcall
iret
jne
dec
sbb
rcll
dec
push
jne
jmp
shr
stos
leave
ret
icebp
into
cmpsl
decl
or
fadds
mov
inc
and
cmp
and
leave
cwtl
fld
xor
push
mov
jl
lahf
pop
inc
das
push
or
push
jmp
test
imul
leave
jbe
jg
jo
stos
hlt
mov
jns
push
int
jnp
mov
xor
pop
fildll
nop
setbe
mov
cmp
gs
bound
or
outsb
mov
shll
pop
jno
das
lcall
adc
mov
aaa
fucomp
or
jl
test
pushf
out
mov
popf
cmp
pop
xchg
imul
rol
mov
shl
cld
or
mov
rcrl
aas
push
jnp
pop
gs
out
shll
jge
in
or
cmpsl
mov
sbb
and
shll
std
and
nop
dec
xchg
int
iret
jle
mov
mov
mov
ret
adc
lods
in
cmpsb
push
std
sbb
mov
arpl
add
mov
in
ret
scas
sub
js
dec
pop
push
pop
loope
pusha
cltd
mov
leave
mov
scas
xchg
pop
fldl
jns
mov
pop
insl
enter
xor
add
inc
rol
jne
shrb
mov
enter
mov
sub
sti
outsb
sbb
jmp
jle
pushf
push
jg
clc
stos
mov
xchg
pusha
push
push
mov
sar
dec
stc
xlat
icebp
test
push
outsl
adc
outsb
cmp
inc
sbb
xor
in
adc
bound
sub
iretw
test
mov
test
mov
jo
cmp
cmp
mov
stos
clc
out
std
ret
imul
mov
jge
cld
or
lcall
adc
xchg
push
and
pop
imul
fisttpll
and
test
dec
xchg
push
scas
jne,pn
pop
cmp
rclb
push
imul
push
jo
loop
andl
lds
das
xchg
clc
jbe
adcl
dec
fs
jmp
xor
sbb
push
stc
test
or
inc
mov
repnz
xor
xchg
sbb
into
and
mov
xchg
lcall
jecxz
cmp
dec
lret
aam
cs
in
movsl
and
pop
cmpsl
jecxz
js
sbb
inc
xor
data16
push
test
mov
sub
sbb
or
pop
xor
push
adc
insb
xor
outsb
prefetchnta
jl
je
jno
rcl
pop
hlt
imul
stc
push
inc
adc
in
in
lret
and
shlb
jle
xor
xor
xor
leave
mov
lock
popf
and
test
add
test
into
dec
scas
cs
pusha
or
adc
repnz
jl
ss
inc
xchg
orb
xor
or
mov
cld
push
fisttpll
fistpl
xchg
add
stos
mov
loopne
or
mov
xor
mov
add
fdivr
shld
rolb
sarb
inc
cwtl
clc
fwait
lods
or
mov
or
clc
lahf
stos
sbb
inc
imul
cmpsb
sbb
xchg
pop
out
xor
out
cmp
sub
sbb
dec
push
xchg
jle
cmc
mov
lock
dec
repnz
lock
or
or
lods
out
insb
fimuls
leave
jmp
inc
ret
jbe
pop
test
les
xchg
lods
inc
std
leave
mov
lds
xchg
cmp
mov
inc
mov
pop
punpckhdq
pop
daa
iret
das
out
xor
out
push
mov
add
and
jnp
sub
mov
inc
test
std
cli
nop
jae
sbb
cmpsb
and
test
adc
jmp
in
lret
jnp
pop
xchg
test
cmp
xchg
orl
inc
mov
fists
mov
xchg
lock
cmp
pop
inc
cli
inc
mov
push
sarb
jge
shlb
inc
sub
dec
imull
xor
dec
xlat
or
imul
ljmp
jl
lahf
cmp
push
inc
ret
jne
clc
fcoms
repnz
fwait
xchg
jmp
stos
mov
xor
adc
ret
pop
imul
cmpsl
or
cli
jg
pushf
shll
call
inc
loope
mov
pop
xchg
hlt
push
xchg
sbb
mov
enter
and
sub
push
aaa
fdivrp
out
push
stos
in
push
pop
inc
push
mov
dec
inc
inc
cmpsb
dec
xorb
cmp
lock
gs
mov
jno
pushf
sub
imulb
call
adc
adc
adc
mov
or
fldcw
fnstcw
mov
sbb
ja
por
jbe
movsl
push
pop
sub
test
sub
cmp
jl
xor
fmull
cld
shrl
xchg
divb
adc
xchg
add
pop
or
out
dec
call
mov
xchg
pop
xchg
push
mov
sbb
adc
cld
or
pop
outsl
jg
or
xchg
adc
and
mov
insb
fisttps
cld
shrl
mov
outsl
enter
jecxz
idivb
in
push
aam
out
rclb
mov
lock
ljmp
mov
sub
out
xchg
test
imul
sbb
cmp
rol
push
xchg
ljmp
add
mov
fwait
iret
adc
add
xor
daa
jns
lds
loop
repnz
push
aam
push
in
dec
sub
pop
ret
cmp
push
xchg
insl
adc
inc
and
fidivrl
and
cmp
inc
outsb
out
das
test
sarb
mov
loopne
dec
test
mov
sbb
ljmp
xchg
je
sbb
and
jo
mov
adcb
clc
cmpsb
push
mov
call
xlat
loop
push
jl
mov
pop
dec
jo
inc
sub
push
lcall
xor
mov
inc
inc
push
sub
sbb
sbb
mov
out
test
outsl
add
ds
cmp
pop
out
sub
pop
or
sbb
cmpsb
xor
sarw
or
fwait
pop
push
xor
repz
xchg
mov
mov
cmp
xchg
jecxz
call
and
cmp
lcall
and
jae
loope
xchg
push
or
and
mov
inc
aam
aaa
ds
add
aas
xchg
js
push
out
mov
dec
push
addr16
and
addr16
and
ja
fdiv
popa
outsl
cltd
xchg
ss
cmp
std
jge
mov
pop
scas
fs
pop
or
clc
lea
sub
shl
mov
xor
sub
and
pushl
clc
mov
add
std
rcrl
in
movsl
xlat
or
in
mov
push
push
mov
xchg
and
dec
sarb
push
scas
mov
cmp
jecxz
sub
or
add
lds
inc
push
js
repz
enter
daa
imul
shr
testl
icebp
ret
repz
mov
sbb
cmp
cmpsb
stc
call
mov
clc
pop
arpl
push
aaa
pop
mov
xchg
xchg
rcrb
mov
mov
xchg
std
shufps
fidivl
imul
mov
out
xor
add
loope
mov
adc
cmp
push
test
fcomip
popa
gs
lock
lret
inc
mov
flds
shlb
and
mov
inc
cli
imul
cmp
fwait
repnz
xlat
filds
pop
in
or
dec
ja
scas
push
push
dec
push
lret
or
repnz
pop
cwtl
clc
shufps
xchg
mov
cmp
mov
lock
or
outsb
or
push
in
mov
aam
mov
mov
add
dec
mov
out
fisubrl
xchg
mov
fbstp
adc
jno
xchg
dec
mov
popa
xlat
or
aas
in
outsb
arpl
sbb
mov
push
or
sti
or
jecxz
bound
and
orb
jne
vpsubw
inc
xor
mov
add
add
mov
sbb
rcll
dec
roll
pushf
mov
into
sbb
push
mov
sbb
dec
mov
and
dec
and
movl
cli
xor
loope
jns
mov
je
push
push
pinsrw
sub
repnz
shlb
push
enter
and
xchg
dec
inc
movsb
cwtl
xchg
sbb
aam
lock
push
xchg
mov
sahf
repz
pop
sahf
pop
xchg
jne
xchg
xchg
cli
inc
aad
mov
push
push
jecxz
fsubs
push
mov
push
jg
mov
fnstcw
arpl
dec
lea
mov
fistl
pop
int3
iret
push
and
ljmp
lahf
inc
movsb
ret
xchg
push
lcall
xor
cmp
jae
add
jmp
orl
dec
sbb
lahf
stc
and
insb
cmpsl
sub
xor
into
mov
movsl
xor
fildl
mov
sub
loope
dec
insb
in
test
decl
xchg
xorl
pushf
stos
or
popf
push
and
inc
mov
xchg
inc
sbb
stc
lret
aas
cltd
dec
adc
push
in
push
int3
in
xchg
inc
inc
jb
repnz
cmpsb
outsl
inc
mov
pop
dec
enter
cmp
jg
push
push
mov
push
iret
dec
call
fiaddl
sub
xor
out
jnp
fmuls
pop
add
clc
sbb
std
adc
fcmovnbe
xor
mov
jne
cltd
sarb
lcall
sub
arpl
mov
test
sbb
aas
add
cmp
dec
aad
lock
adc
inc
push
sbb
and
je
stos
fimuls
and
or
dec
xchg
cmp
push
push
cmp
leave
cwtl
aad
cmp
mov
inc
mov
xchg
xchg
and
jo
adc
fcomps
cmp
pop
out
and
inc
sbb
xchg
sub
sbb
xlat
add
test
adc
sbb
clc
cmp
dec
out
sub
shrl
xor
icebp
inc
setne
and
and
cmpsb
ret
insl
fistps
xchg
jecxz
jbe
aaa
fnstcw
mov
inc
xor
jae
sub
cmpl
lods
mov
mov
rclb
test
in
int3
mov
loopne
in
mov
xor
lock
xor
jbe
sub
cmc
or
loopne
lock
gs
adc
mov
mov
lcall
pusha
rclb
xchg
jmp
nop
cmpsl
xchg
mov
add
loopw
call
popf
test
pop
outsl
stc
out
fs
insb
sub
push
out
xchg
fscale
add
mov
mov
out
dec
fcom
neg
pushl
xlat
mov
sbb
imul
xor
pop
out
loope
call
cwtl
jae
jl
loope
arpl
mov
ficoms
mov
adc
scas
dec
push
xor
inc
mov
divb
dec
imul
xor
aaa
pop
mov
push
lods
sbb
pop
mov
mov
inc
xchg
mov
or
scas
pusha
sub
push
cmp
clc
pop
repz
xorl
fbstp
dec
lret
ss
or
pop
mov
pushf
test
sbb
in
cs
jae
push
or
push
add
adc
loop
lods
xchg
in
imul
rep
xchg
cmpb
sbb
clc
aam
iret
inc
lods
aaa
shll
outsw
mov
fstps
mov
movsl
in
in
dec
out
aas
xchg
jnp
fs
mov
repnz
popa
sbb
mov
mov
out
lods
pushf
ja
jmp
add
jbe
xor
mov
xchg
ja
and
fcompl
dec
push
inc
and
mov
cltd
jecxz
add
mov
push
and
sbb
jl
test
xchg
imul
fidivrl
repz
add
sbb
cs
cmp
dec
sub
fiadds
ret
jns
scas
adc
pop
test
xchg
mov
mov
and
outsb
push
cmpsb
rorl
jnp
rolb
je
jb
xchg
xor
jnp
jmp
ljmp
outsl
adcb
mov
inc
int3
sbb
xchg
aad
loopne
rclb
cs
mov
ret
gs
xor
daa
sarl
adc
stos
inc
test
cmpsb
xor
scas
loopne
inc
jl
stos
dec
iret
jp
cmp
and
enterw
iret
mov
xchg
test
xor
jge
xor
jbe
cmpsb
jb
pop
cld
test
leave
fists
pusha
push
std
fwait
lods
iret
sub
inc
dec
arpl
push
pushf
and
test
dec
pop
jbe
scas
loop
push
stos
push
push
lret
inc
ja
dec
mov
inc
sbb
inc
sar
fs
inc
push
jge
pop
lret
ds
sub
fsubl
push
xchg
xchg
cli
cld
js
icebp
push
pop
push
dec
mov
shlb
repz
jns
xor
xchg
filds
xchg
xchg
testl
fsubl
and
arpl
ret
inc
out
cmp
pushf
aas
ja
ror
pop
adc
fisttpl
mov
in
cld
xor
dec
lahf
enter
push
ret
je
or
push
in
inc
mov
out
cltd
jno
mov
mov
push
add
loopne
xchg
rclb
mov
in
cmpl
or
clc
nop
pop
xchg
mov
icebp
mov
sub
scas
movsb
fxch
jp
jns
jle
jl
addps
push
xchg
repz
cmp
inc
imul
imul
ficomps
test
mov
into
xor
imul
jp
pop
or
es
xchg
enter
xor
pop
sub
into
pop
ja
cs
popf
in
mov
int
mov
fisubl
movsb
adc
mov
cmpb
pop
mov
xorb
jb
int3
in
dec
mov
cmp
dec
popl
xchg
mov
repnz
mov
mov
pop
mov
loope
jne
push
sub
pushf
jg
stc
sub
sub
das
and
mov
sbbl
sarl
adc
mov
fsub
jne
and
adc
mov
push
add
mov
sarl
dec
pop
outsl
pop
adc
lds
js
cwtl
bound
jno
pushf
cli
jae
sub
ss
mov
clc
pop
sbb
orl
hlt
xchg
pop
or
adc
filds
sbb
dec
sbb
dec
sub
leave
inc
pop
divb
lret
xor
pop
imul
and
enter
sub
xchg
std
pop
mov
mov
loope
or
cmp
loop
mov
in
scas
out
rcrl
add
cmpsl
nop
sbb
popf
lock
lock
popf
insb
imul
pusha
mov
lods
cwtl
pop
adc
int3
add
cli
jl
jl
sbb
gs
icebp
add
aad
mov
popa
sti
fcomip
mov
dec
push
fnstenv
ret
xor
clc
adc
inc
add
adc
pop
xchg
test
loope
lods
mov
inc
jecxz
xchg
inc
incl
pop
inc
sti
mov
dec
out
icebp
lods
and
cmp
into
jecxz
cltd
inc
clc
jge
adc
pop
addr16
xor
push
ss
stos
stc
repz
inc
xchg
out
mov
aaa
lahf
or
mov
add
sbb
aad
sub
sub
xor
loope
aas
push
stos
popf
pusha
cmp
roll
inc
xchg
sub
xchg
ret
cmpb
push
rcrl
daa
sbbl
shlb
popf
cmpsl
jne
cltd
cmp
int
jb
shl
sbb
or
loop
jl
cmp
and
out
push
insb
shll
cmc
inc
cld
leave
outsb
push
sti
or
push
mov
sbb
sbb
sbb
into
dec
jg
cltd
mov
bound
mov
int3
sub
xchg
cmp
cltd
xchg
cs
sti
sub
add
xchg
addr16
notb
test
out
adc
out
rclb
push
lret
jb
add
and
mov
add
and
push
mov
mov
cwtl
pop
js
inc
ja
push
add
fcompl
xchg
jae
lods
add
add
mov
jb
dec
pushl
inc
push
mov
and
sbb
push
mov
sbb
in
push
push
or
faddp
pusha
int
sbb
push
or
mov
xchg
dec
inc
clc
mov
bound
repnz
sub
xchg
push
sahf
test
addr16
and
scas
ret
xchg
mov
jae
xorl
sbb
std
das
lcall
add
dec
and
pop
sbb
mov
rorl
repz
push
addb
lods
xchg
mov
mov
addb
and
cmp
push
jb
xchg
cmc
pop
arpl
sbb
and
fcompl
sbbl
fdivl
loope
fcompl
shlb
xor
mov
cltd
or
jmp
mov
ljmp
test
scas
push
sub
mov
add
jno
int
xor
mov
add
pop
lea
imull
and
mov
dec
mov
in
rcl
out
pushf
jno
pop
xchg
xorb
enter
inc
aaa
pushf
xor
mov
inc
push
test
inc
add
sub
into
xchg
mov
daa
aaa
fcomps
lock
hlt
mov
in
sahf
dec
mov
pop
cwtl
dec
xchg
mov
lods
dec
mov
jae
cltd
inc
push
into
enter
or
scas
jbe
mov
scas
sbb
mov
push
xchg
sub
pop
push
fildl
inc
mov
xchg
lahf
or
in
push
dec
inc
mov
sbb
mov
mov
mov
repnz
ret
add
in
xchg
adcb
add
push
and
sbb
jmp
cs
xchg
arpl
xchg
imul
movsb
aad
sub
jp
aaa
jno
fidivrl
xor
jle
jle
jp
and
sbb
add
bound
and
ljmp
push
mov
mov
xchg
ja
call
fiadds
sub
aas
data16
iret
xor
and
inc
lea
adc
dec
ja
test
stos
pop
outsl
dec
lret
addl
inc
xchg
jle
mov
jne
shl
gs
mov
pop
jg
pop
dec
mov
shr
in
inc
or
add
out
mov
ret
jg
jno
sahf
decl
into
push
loop
sub
out
mov
sub
and
aaa
stos
popf
inc
sti
xchg
or
repnz
popa
push
mov
daa
inc
nop
pop
cmp
hlt
enter
lahf
pop
add
sarl
arpl
mov
int3
push
das
xor
fnsave
call
cmp
xorl
sub
pop
pop
out
mov
xor
add
push
jne
addl
adc
lcall
dec
push
mov
out
gs
into
mov
aad
inc
pop
mov
mov
mov
inc
and
jne
xchg
sub
xor
xchg
sub
nop
xchg
add
sub
push
in
pop
arpl
fcomps
xor
fcompl
jge
adc
out
xchg
ja
xchg
dec
adc
test
sti
out
mov
jl
out
mov
sbb
arpl
clc
sahf
mov
sub
jnp
daa
mov
xor
push
cmp
aas
sub
mov
fstpl
popa
popa
lahf
pop
repz
imul
rclb
je
adc
jmp
js
mov
ds
bound
or
or
addr16
xlat
mov
mov
xchg
out
xor
fidivl
dec
idivl
pop
push
into
mull
jle
sbb
andl
fisubrl
jecxz
dec
xor
xor
jns
aam
xor
xchg
outsb
out
cmpsl
jno
xorl
cmp
cwtl
loopne
xor
lock
lret
scas
fidivrl
loope
sub
lods
and
add
addl
pop
xchg
push
loope
outsb
fcoml
fstpl
mov
sti
push
fdivl
xchg
lods
jg
push
cwtl
mov
sbb
out
lods
js
inc
pop
daa
cmc
aad
sbb
push
lds
cltd
mov
cmp
jmp
cmp
push
stos
inc
popf
shrl
mov
sbb
sbb
dec
leave
movsl
lahf
pop
pop
inc
incl
sbb
lods
into
les
data16
insb
cld
out
sub
and
sbb
repnz
dec
outsl
jnp
addr16
push
test
das
or
in
enter
sbb
inc
sahf
shll
inc
js
jno
adc
fs
aam
aad
test
mov
fnsave
mov
scas
sub
push
insl
xchg
je
cld
xchg
mov
push
lret
out
clc
push
scas
call
xor
lret
push
pop
mov
rolb
out
int3
mov
sub
pop
fdivrl
sbb
cs
rdmsr
cwtl
clc
lock
mov
pop
gs
cwtl
push
fwait
pop
out
xor
aaa
iret
sub
lea
mulb
mov
mov
push
and
push
shl
dec
in
shll
push
movsb
movsb
ja
inc
or
pop
dec
cs
filds
gs
push
fs
inc
pop
or
fs
cmp
ret
in
push
leave
xor
push
repnz
loope
jl
adc
mov
roll
mov
out
push
jecxz
inc
adc
add
cmpsl
add
and
cmpb
bound
and
jecxz
mov
arpl
andb
push
outsl
inc
clc
scas
stos
lock
mov
movsb
repz
ss
stc
js
xchg
pop
jle
pusha
mov
adc
adc
cld
ss
lds
sub
dec
rorl
in
or
pusha
pop
lahf
push
into
lods
dec
fistpll
subb
test
data16
sarb
mov
add
cmpsb
repnz
cli
dec
push
sub
sub
sub
fistpl
push
or
dec
push
or
cmpsb
mov
adc
pop
pushf
sub
mov
inc
inc
jb
cmp
into
sbb
or
inc
inc
orb
gs
xor
jp
bound
or
js
lods
sbb
cmpl
mov
push
mov
add
adc
pop
fwait
loopne
cwtl
or
in
sub
mov
imul
jo
jns
adc
rorl
aas
push
cwtl
cmp
adc
mov
popa
lret
xor
mov
pop
lea
loope
fs
dec
shlb
stos
jb
fsubr
jge
inc
mov
fcoml
sbb
sbbl
cmp
ss
jb
leave
mov
imul
test
loopne
cld
sbb
aas
or
pop
call
lds
movsb
ret
xor
shr
jge
sahf
rcll
imul
js
pop
xor
ret
psubusb
and
push
lods
hlt
and
imul
dec
adc
scas
enter
sbb
pop
pop
fisttpll
inc
mov
adc
ljmp
inc
dec
shl
or
xor
arpl
movsb
pop
mov
cmpb
jl
inc
jb
cmpsl
adc
loop
test
xchg
and
repnz
jmp
test
push
fs
push
jp
mov
call
enter
dec
dec
fwait
jmp
test
addr16
cmp
sbb
das
lock
push
adc
sbb
cs
and
xchg
jg
mov
adc
fists
adc
inc
lahf
add
xor
div
test
mov
lcall
lret
movsl
or
or
jb
inc
pop
jnp
adc
movsl
dec
cmp
out
jmp
lds
pop
in
out
mov
ljmp
mov
mov
add
cmpsb
fdivrs
out
sbb
cmp
jge
sbb
movsb
daa
mov
shll
cmp
cld
mov
imul
hlt
sub
jecxz
andb
xor
idivl
sub
sti
leave
push
in
movsl
rclb
in
adc
lock
mov
sbb
or
divb
or
data16
xacquire
movl
shrl
lods
push
loopne
out
addr16
out
jns
lods
sbb
xchg
sbb
test
jle
ret
push
out
xor
push
push
pop
pop
cwtl
hlt
movsb
mov
adc
jg
mov
adc
rcll
sub
xchg
mov
mov
jno
int3
bnd
pop
hlt
aas
mov
mov
sub
in
ret
movsb
add
lods
jns
and
or
lret
xchg
jl
and
pop
insb
mov
cmp
cmp
loop
frstor
adc
push
xor
adc
xchg
cs
popf
xchg
insl
cmp
mov
mov
fstl
jmp
addl
adc
fidivl
ja
xchg
dec
test
stos
pop
stc
inc
and
add
xor
sub
idivl
fstpl
hlt
sub
or
repnz
lock
loop
ret
jmp
mov
inc
mov
ljmp
lret
aam
inc
dec
jmp
movsb
stos
xchg
mov
iret
loop
out
sub
lods
pusha
fldenv
in
pop
inc
dec
fwait
ret
and
jb
or
mov
in
xchg
sbb
aas
xchg
pusha
xlat
mov
nop
xor
inc
ds
outsb
aaa
jp
pop
lcall
push
inc
push
mov
push
inc
bound
aad
sti
or
rcll
mov
dec
adc
lods
push
aam
out
or
mov
cld
adc
add
outsl
lret
in
push
out
jne
stos
xchg
lea
out
ss
jo
inc
jp
call
pop
test
mov
xchg
sub
fimull
out
xchg
cmp
cs
mov
mov
dec
dec
add
mov
std
inc
inc
repz
lock
inc
pushf
xor
push
jg
dec
leave
xor
dec
jns
iret
pusha
add
lock
addr16
imul
nop
sub
das
imull
add
cmp
sti
inc
and
loopne
mov
iret
sub
sbb
inc
jns
jmp
jl
shlb
or
test
mov
ss
push
dec
push
addb
or
xor
stc
mov
mov
and
rep
push
in
nop
incb
and
cmp
mov
sub
leave
dec
dec
mov
loope
popa
or
cmp
mov
mov
push
mov
mov
test
jne
xor
leave
pushf
xchg
cld
and
jne
sbb
ja
loopne
sub
scas
and
jns
out
lahf
ja
xchg
add
lret
sbb
ficompl
jmp
test
fdivs
cmpb
lods
dec
in
sub
subb
add
and
out
pop
jp
xor
aaa
xchg
imul
mov
out
pop
fs
jne
ret
scas
outsb
and
loop
fwait
adc
rorb
inc
sti
clc
inc
sti
jns
or
outsb
cwtl
lret
pop
aad
pop
mov
cwtl
adc
fisttpl
aad
subb
loope
or
sub
dec
ja
fnstcw
jbe
sbb
pusha
fucomp
cli
mov
jmp
inc
test
js,pt
jb
cmpsb
bound
scas
jg
jnp
pop
jge
hlt
push
mov
call
mov
loopne
add
rcrl
sub
adc
sahf
iret
rcr
fisttps
popa
jle
in
xchg
cli
aad
cmp
das
mov
push
imul
xorb
xor
outsl
je
imul
out
jle
in
cmp
adc
add
or
dec
jecxz
inc
sub
cwtl
jne
mov
xchg
inc
push
sbb
scas
pop
jle
dec
xchg
pop
jne
hlt
xchg
ljmp
ljmp
inc
pop
sub
mov
in
jecxz
pop
test
mov
pop
in
lods
lods
push
aaa
push
xchg
jae
bound
arpl
mov
mov
pop
jge
pop
lahf
cmp
out
lds
lret
pop
cmp
push
pushf
lcall
or
fwait
test
cli
in
xlat
jl
push
arpl
je
mov
hlt
insl
cmp
add
jns
js
scas
mov
pushf
cs
xchg
gs
test
or
enter
mov
push
xchg
sub
pop
in
xlat
mov
ljmp
mov
cmp
push
loopne
inc
fidivl
aas
lea
dec
lret
clc
mov
jo
ds
mov
ja
addl
bound
aaa
orl
jnp
icebp
adc
hlt
fstpt
icebp
sbb
dec
adc
andb
pop
inc
pusha
cs
popf
jo
sub
fistps
jl
lcall
or
aad
jne
mov
mov
xor
cmp
cmp
rclb
mov
adc
cltd
adc
xchg
sub
call
ret
cltd
int
aam
in
pop
icebp
stos
mov
cmp
ror
fwait
ja
cld
out
pop
pop
ret
push
push
inc
and
sarb
fwait
dec
mov
xchg
in
cld
ja
fmull
les
sbb
clc
rcl
lahf
loop
test
and
lahf
xchg
xchg
shll
scas
jl
shr
ds
jnp
nop
pop
mov
dec
or
ficoms
stos
sbb
xchg
mov
adc
push
hlt
mov
aaa
in
cwtl
cmpsb
div
adcb
scas
orl
fistpl
inc
xchg
jnp
repnz
jnp
outsb
inc
xorl
stos
aas
aas
les
pushf
mov
imul
pop
fucom
push
and
pusha
shr
adc
in
jecxz
test
aas
fcoms
arpl
loop
mov
fwait
daa
cwtl
xchg
cmp
popa
sbb
adcl
jbe
testb
test
loopne
jmp
mov
push
imul
push
xchg
jns
stos
test
mov
sti
mov
arpl
sub
scas
xor
xchg
hlt
mov
sub
rcrl
enter
call
mov
xchg
loopne
lock
dec
bound
loop
sub
sbb
push
loope
imul
insb
add
dec
cwtl
fs
mov
and
cmp
xor
lret
or
push
or
push
push
push
mov
mov
mov
arpl
inc
sahf
hlt
lea
stos
ss
jb
cmp
mov
mov
fldt
adc
or
idivl
pop
daa
fstl
xor
mov
xchg
sub
xor
jecxz
cwtl
movsl
jne
dec
repnz
sub
std
or
push
gs
jne
fists
xchg
cmp
sbb
xchg
add
lahf
pop
out
fstl
sbb
mov
pop
xchg
push
imul
xchg
outsb
stc
lcall
ss
jne
rcrb
xor
cmc
sub
cmp
adc
sbb
jmp
lods
mov
sbb
sti
xchg
popa
dec
popf
insb
or
jge
inc
push
lock
rcl
dec
or
cmp
and
add
cmpsl
adc
push
shl
movsb
icebp
xor
cld
in
mov
mov
loop
cltd
push
popa
push
ja
fwait
sbb
arpl
outsl
and
ror
mov
inc
in
mov
add
adc
mov
push
popa
push
add
pushf
sbb
xor
adc
aas
cwtl
mov
sub
xchg
pop
sbb
sbb
repnz
push
pop
movsb
das
add
icebp
jno
cmp
sub
cmp
cmp
jle
dec
xchg
int3
mov
jns
lret
stos
scas
or
dec
jae
lds
pop
cmp
daa
xor
popf
daa
jge
out
mov
and
cld
jb
ret
pop
fbstp
mov
fnstcw
push
std
cld
jbe
fcmovne
insl
xor
inc
sub
jne
mov
pop
lds
mov
mov
scas
push
bound
and
cltd
stc
inc
adc
xor
cmp
arpl
or
ljmp
cmp
cld
loopne
notl
mul
scas
addr16
add
fildll
lcall
ret
pop
mov
lods
dec
lea
pushf
dec
jecxz
repz
dec
cmp
dec
xchg
jle
cmp
pop
rcll
scas
cli
or
icebp
xchg
imul
inc
stos
or
lods
mov
pop
add
and
mov
adc
lock
adc
jbe
jle
pop
shr
int3
jge
dec
hlt
inc
mov
inc
cmp
jae
or
dec
dec
push
xor
cld
stos
or
xor
push
fisttpll
out
sub
imul
js
jne
or
fisttpl
and
adc
xchg
pusha
ret
and
xor
push
repnz
mov
push
fcmovnb
cmp
dec
pop
mov
mov
sbb
mov
dec
inc
cltd
fstl
shrl
gs
inc
pop
repz
push
push
test
jne
xor
adc
test
inc
andl
stos
push
or
es
lea
and
out
shlb
cmp
ljmp
jb
push
jbe
or
scas
ffreep
push
sbb
push
xor
sub
sub
cltd
push
xor
lods
push
test
jl
les
xor
cmp
bound
ljmp
adc
iret
pop
xchg
addl
insl
mov
pop
jno
adc
inc
sbb
add
mov
rorl
je
inc
pushf
add
cmp
in
adc
iret
call
sub
or
inc
ljmp
shlb
adc
sub
or
shr
bnd
cmc
cli
push
cld
and
orl
leave
sbb
lret
add
mov
sbb
mov
cmp
push
push
int
cmp
gs
add
jp
nop
roll
in
push
rol
xchg
rcr
mov
rorl
mov
outsl
repz
cmp
dec
xor
mov
adc
lret
jp
out
pop
push
arpl
sbb
leave
cmp
dec
inc
sub
lcall
mov
xor
pop
cmp
in
adc
dec
push
jl
xor
rclb
inc
jmp
je
or
clc
iret
dec
jmp
adc
shrb
sbb
ljmp
push
jl
and
int
mov
jle
das
sbb
add
or
cmp
push
lods
cmp
arpl
sbb
xor
es
lods
mov
pop
inc
frstor
enter
mov
ret
pushf
int
nop
and
or
inc
arpl
push
out
loop
imul
adc
shlb
aas
popf
imul
fiadds
andb
xchg
cltd
es
in
loopne
add
aas
mov
mov
push
ljmp
icebp
add
icebp
cmp
or
int
sub
cltd
mov
push
sub
out
lret
notl
mov
or
ds
cmp
mov
dec
decl
arpl
sarl
test
sbb
sbb
xchg
jmp
mov
popf
cmpsb
dec
mov
pop
and
test
sbb
data16
lcall
testl
sub
out
xlat
scas
jge
sub
sub
cmpsl
movsb
and
sbb
mov
fdivl
in
loopne
mov
sbb
es
ljmp
cmp
and
push
insb
into
loop
mov
lret
mov
roll
aad
mov
push
cmp
adc
ret
das
mov
mov
jmp
adc
cld
adc
insb
insb
sub
and
push
push
sub
ss
xor
adc
xchg
lea
dec
cmp
imul
add
lock
call
xchg
pop
lock
fnstsw
inc
push
pop
adc
dec
pop
mov
or
mov
subl
mov
jg
and
sbb
mov
icebp
or
cmp
adc
pop
jb
movsb
add
rcll
jo
pop
cmp
jl
sbb
xchg
fldlg2
pop
movsl
sbb
jb
stos
adc
cmp
mov
xchg
lret
test
jae
fwait
push
loop
dec
and
sbb
and
test
mov
repz
push
mov
movsl
cmp
and
enter
sar
inc
cli
cmp
add
add
inc
das
jp
xchg
lea
iret
xchg
icebp
into
mov
pop
popa
xor
mov
aas
rclb
inc
push
lea
call
adc
repnz
and
dec
jno
sub
xchg
movsb
mov
dec
xchg
adc
pop
or
dec
cmp
sub
cld
sbb
push
jae
xchg
push
pop
stc
pusha
push
pop
pop
push
js
ffreep
clc
in
mov
xor
adcl
jo
xchg
fsubrs
mov
cld
add
push
jmp
adc
add
xlat
inc
imul
push
mov
mov
xor
and
ret
fs
out
jle
mov
fdiv
das
out
outsb
es
jp
negb
shll
inc
pop
lods
push
fiaddl
insl
test
cmp
ret
sbb
mov
lods
fsubs
xchg
in
rorl
movsb
xchg
sti
out
cmp
sbb
jae
mov
or
fcom
cltd
push
add
jnp
xlat
mov
inc
stos
fsub
in
gs
mov
test
mov
xor
add
sbb
push
out
out
repnz
jg
incb
pop
negb
es
mov
adc
fcmovnu
outsb
imul
cmpl
xor
cwtl
adc
fcoms
cmpsl
sbb
aas
ret
test
jno
pop
out
cltd
xchg
inc
in
cmp
jp
add
xor
adc
dec
shll
xor
pop
lcall
cmpl
mov
lar
mov
lahf
and
xor
aaa
mov
sbb
in
jnp
je
cli
jae
shlb
xchg
or
push
or
sti
loopne
sbb
inc
or
test
aaa
hlt
test
xchg
lods
pop
negb
lock
outsb
ljmp
adc
or
sbb
scas
repz
sbb
dec
dec
movsl
jno
jo
sbb
sbb
pop
aad
jno
aaa
je
cmpsb
sub
insb
inc
jns
movsl
sub
incb
xchg
shlb
pushf
out
cld
ds
and
addr16
scas
ja
fs
aad
stos
iret
dec
pop
shrb
jmp
es
mov
or
jg
xchg
fsubs
cld
xchg
jnp
inc
mov
lret
icebp
std
fmuls
jmp
cmp
or
add
jg
rcll
leave
pop
hlt
xchg
lea
sub
mov
loopne
mov
pop
jmp
insb
call
pop
sbb
ret
cmp
test
mov
add
push
mov
clc
inc
lods
in
test
sub
adc
add
into
arpl
rcrb
sti
outsb
out
outsl
or
push
loop
mov
mov
adc
xor
mov
imul
cld
adc
dec
lds
adc
je
lahf
push
pop
mov
repnz
faddp
jbe
mov
addl
gs
jg
or
adc
pop
insl
push
or
ljmp
nop
clc
inc
arpl
mov
das
in
sbb
bound
xchg
dec
icebp
movsl
mov
test
add
and
lret
pop
pop
add
mov
and
xor
cmp
cs
in
or
fnstenv
mov
das
test
test
fisttpll
and
mov
and
lahf
or
enter
jns
lret
sub
in
fs
mov
cmpsl
pop
mov
imull
andl
lcall
push
andb
sbb
test
sbb
movsl
add
sub
icebp
dec
les
call
outsb
pop
jne
pop
xlat
xor
or
lea
jg
fsub
daa
adc
xchg
sbb
aam
in
add
sarb
lcall
cs
xchg
mov
adc
jae
cmc
mov
push
sbb
xlat
or
xor
daa
inc
addl
dec
sbb
outsb
push
or
sub
sub
cli
sbb
sub
sbb
fisttpl
mov
nop
xor
nop
sub
jp
arpl
roll
shr
clc
push
or
mov
loopne
fs
fisttpll
sub
mulb
dec
xchg
and
pop
call
ficoml
popa
and
fsts
jne
es
xor
sbb
push
fsubrs
xchg
lret
cmp
mov
push
fwait
or
dec
aam
push
cwtl
mov
cmp
sub
popf
test
push
mov
pop
and
cmp
out
dec
sub
or
sti
mov
add
cmp
popf
lcall
cld
mov
test
or
add
push
add
mov
cmpsb
stc
mov
test
jl
sub
clc
flds
sbb
fildll
adc
or
stc
aas
adcl
mov
loope
iret
cmpb
outsb
dec
shll
lods
and
jle
xchg
cmp
inc
rcll
and
ja
fdivrs
mov
xor
mov
or
add
sbb
test
cmp
cmpl
jle
daa
lds
mov
adc
push
das
add
sbb
int
mov
jno
mov
push
cmpsl
mov
jo
rorl
sub
dec
adcb
ret
lahf
xchg
jle
and
lcall
loope
xor
add
push
fs
std
inc
adc
scas
pop
inc
push
adc
mov
xor
mov
jge
pop
mov
rcrb
pop
add
mov
and
inc
in
aaa
test
into
movsb
fistps
lea
hlt
pop
jbe
adc
cmp
push
std
mov
push
pop
push
adc
sub
into
cmpsl
adc
out
jne
jecxz
lcall
fs
test
pop
cld
pop
imul
sbb
add
pop
addr16
test
and
imul
push
sub
mov
fsubr
jl
popl
push
repz
clc
dec
dec
sub
lds
repz
movsb
add
jg
xor
fiadds
xchg
push
jb
pop
outsb
rcrb
push
mov
mov
mov
and
into
add
and
or
mov
xor
mov
repz
fwait
mov
adc
jae
je
popa
in
pop
jge
dec
mov
sahf
pop
push
or
jge
xchg
movsl
scas
ljmp
xor
mov
fs
pop
cmp
lods
pop
repz
inc
sub
mov
fwait
sub
aaa
mov
shrb
int3
xchg
cmc
jmp
scas
dec
xchg
dec
mov
fs
dec
mov
inc
hlt
or
js
mov
inc
ret
jne
rcrb
jnp
mov
jge
shll
mov
pop
xchg
dec
push
loopne
dec
add
sbb
dec
jns
jbe
mov
jbe
addl
ret
cmp
in
fidivl
jp
faddp
dec
in
int3
sahf
out
ljmp
dec
and
fs
cwtl
aaa
jecxz
loop
sbb
cmpsl
pop
xchg
adc
out
ljmp
jae
outsl
test
pop
je
in
xor
mov
inc
xchg
aas
push
add
stos
loop
sbb
jmp
jnp
mov
enter
test
or
or
push
loope
inc
ffree
jg
movsl
orl
scas
in
mov
inc
fs
int3
sub
mov
mov
mov
je
dec
push
jbe
xor
and
ljmp
push
data16
jo
adc
scas
cmp
pushf
das
subl
or
cmp
mov
sbb
add
jle
js
pop
out
add
fbld
scas
out
mov
dec
fwait
xchg
push
movsl
pop
imul
in
jo
mov
das
sbb
jge
or
mov
cmpsl
jge
jmp
jp
cmp
cmp
rcrl
sub
into
in
push
lret
aam
lock
addr16
push
pushf
stos
dec
adc
jo
mov
sbb
test
xor
enter
mov
inc
mov
sbb
push
mull
out
aaa
adc
and
pop
mov
and
in
mov
pop
stos
loopne
ret
adc
adc
fcmovnu
cmpsl
cmp
add
mov
jo
cli
pusha
jns
push
xor
les
lahf
dec
jns
fldt
test
jp
rorb
loope
test
xor
enter
mov
jns
cmp
lret
sbb
ds
cmp
xchg
xor
jne
pop
or
mov
rcrl
lea
ds
dec
jnp
cmp
add
adc
or
xlat
cld
mov
sahf
fwait
imul
push
mov
out
mov
lods
daa
inc
dec
mov
dec
lds
cmpsl
rcl
jo
clc
cld
cs
add
test
gs
cltd
push
pushf
cmp
call
les
or
and
dec
shll
outsl
add
scas
loop
pop
push
jbe
jmp
fidivs
pop
sbb
or
sub
rorb
push
movl
mov
sbb
gs
repnz
add
mov
mov
dec
pop
add
add
cltd
fcomip
push
addr16
into
add
xchg
adc
xchg
sub
lret
xchg
ret
aam
cmp
xor
and
enter
pop
das
cmpsb
dec
jae
dec
subl
lret
out
push
mov
add
roll
pop
sbb
and
and
xchg
jge
or
scas
sub
sti
mov
sub
negb
pop
jnp
jnp
sub
fs
mov
jmp
dec
ret
sbb
cmp
sub
arpl
jge
xor
fsts
mov
addr16
int
imul
pop
aaa
fcom
cltd
mov
cmp
repnz
divl
imul
mov
xor
insb
lds
neg
mov
xchg
xchg
cmp
dec
test
daa
bound
cmpsl
clc
ljmp
lcall
and
xor
sub
mov
and
xchg
sbb
addr16
jns
nop
xchg
jnp
je
dec
stos
add
cmp
add
cli
lods
fnsave
fdivs
into
clc
imul
outsb
sbb
mov
imul
faddp
mov
mov
dec
add
rorb
mov
in
popf
pop
pushf
and
mov
push
inc
insl
nopl
ja
sub
mov
fucomip
pop
lcall
push
rorb
test
jmp
cmpsb
and
pop
mov
cmp
jno
andl
adc
out
mov
mov
hlt
xchg
xchg
mov
pop
std
push
push
aam
cmp
fistps
push
mov
inc
pop
cmp
jbe
mov
loop
scas
mov
jo
fldt
mov
jp
dec
cmp
mov
mov
xchg
add
mov
jg
dec
test
pop
hlt
jns
loopne
call
jne
mov
push
ret
sbb
jmp
das
es
stos
arpl
outsl
lds
push
iret
fsubrl
jecxz
mov
sub
jge
rorb
sbb
mov
scas
movsl
sbb
cmp
mov
je
jp
bound
adc
cmp
fisttps
adc
inc
shll
es
std
pop
mov
or
movb
lret
push
call
jmp
scas
or
mov
mov
scas
mov
popw
push
shrl
test
inc
dec
pop
sbb
jp
cmp
or
sub
dec
ja
cltd
loop
scas
mov
out
jg
xchg
mov
mov
rclb
scas
dec
add
sub
push
pop
cmp
mov
int3
ja
push
mov
push
cmp
jbe
fwait
addr16
outsb
jne
mov
test
sbb
jp
pop
xor
sub
inc
subb
mov
int3
in
loop
pop
jl
in
sub
test
movsl
arpl
scas
pop
into
in
sbb
xlat
xor
dec
jge
roll
xchg
imul
mov
fimuls
fdivr
shll
and
sub
aad
push
fidivrl
sub
js
scas
mov
inc
loop
mov
clc
mov
lods
bound
fdivr
and
add
fcomi
in
dec
movsb
mov
test
stos
repnz
inc
lahf
js
lret
push
or
cli
mov
test
les
fidivl
mov
sub
xchg
sub
mov
sub
jne
mov
dec
cmp
popa
mov
aam
mov
mov
cld
arpl
dec
sub
push
cwtl
dec
and
xchg
push
mov
call
loopne
mov
das
adc
lret
mov
jle
or
std
pop
cld
fwait
cltd
call
or
cmp
or
push
jnp
add
sbbb
push
outsl
and
fimull
and
icebp
mov
addb
lret
and
pop
mov
dec
aad
xchg
icebp
pop
dec
into
iret
lcall
int
xchg
icebp
clc
lcall
fadds
ja
inc
mov
jnp
pop
push
xchg
rcrb
xor
lret
inc
xorb
pop
in
lret
stos
xor
mov
sub
fcoms
push
mov
shlb
cmpsl
mov
or
xchg
loopne
call
jp
enter
push
frstor
xchg
jg
es
mov
fsubrs
or
mov
in
neg
aas
sti
jo
into
sbb
push
roll
xor
into
in
ret
jo
cmpsl
pop
pusha
das
sub
aas
cmc
inc
jb
lds
jmp
push
mov
js
loopne
cmp
fnstenvs
dec
int
stc
lods
and
stc
repnz
sti
mov
scas
adc
xchg
ljmp
shlb
aam
ljmp
sub
or
add
fsts
sahf
inc
negb
stos
add
dec
int
movsl
sti
inc
lcall
imulb
jg
aad
in
enter
xchg
mov
jo
pop
pop
out
cmpl
popa
xchg
xchg
call
cmc
mov
ja
dec
stos
xchg
xchg
add
pop
pop
idivb
out
sti
dec
movsl
int3
sub
add
dec
loop
sbb
or
and
and
lods
add
fdiv
jg
jnp
xor
cmpsl
add
sbb
or
sbb
std
xchg
dec
popa
das
push
das
xor
inc
and
loope
mov
sbb
in
stc
jg
scas
xchg
adc
lods
popf
aam
jns
mov
push
fldt
lahf
pop
notl
aam
sub
scas
push
shl
pop
pop
inc
mov
jmp
push
out
cmpsb
add
iret
xor
push
xor
je
cmp
xor
imul
sub
xchg
xchg
aas
sbb
cmp
or
orl
mov
dec
push
and
cs
mov
fcmove
cmpsl
cmpl
icebp
inc
sub
in
push
out
mov
nop
imul
sarl
lock
mov
call
sub
cmpsl
push
loop
mov
arpl
repz
insl
outsl
movsl
movsb
movsl
mov
push
daa
sub
jne
into
inc
jo
cmp
rorb
aas
mov
mov
mov
xor
jge
adc
stos
cwtl
loope
mov
push
cld
dec
add
or
push
lret
rorb
imul
cmp
mov
sbb
sub
cs
jl
jno
pushf
stc
cmc
int
test
inc
pop
adc
popa
sub
sbb
xor
mov
sbb
mov
jmp
jmp
xchg
cmp
iret
cmp
push
test
xor
push
popf
jo
xor
bound
test
or
cmp
mov
inc
adc
addr16
into
test
imul
mov
clc
mov
imulb
mov
hlt
fists
scas
inc
dec
xor
pop
xor
dec
push
dec
lea
mov
mov
ror
push
jb
addl
std
rcrb
xchg
push
ds
fldenv
sti
push
sub
adc
in
pop
in
negl
shlb
cmp
inc
inc
sbb
ss
xor
or
push
xor
nop
packssdw
pop
fwait
mov
cwtl
dec
mov
cmpsb
mov
subb
mov
inc
jecxz
int
sbb
push
testb
dec
int
xchg
test
mov
add
sub
dec
lcall
pop
arpl
mov
mov
ret
popl
sub
bound
jbe
adc
and
ret
mov
cmp
sub
xor
lcall
push
repnz
dec
mov
mov
mov
sahf
push
add
push
repz
rcll
dec
mov
push
cmp
mov
cmp
lret
lods
arpl
bound
scas
mov
mov
aam
or
jae
push
and
add
popf
in
cmp
mov
cs
or
pop
cmp
push
rol
addr16
jno
pop
imul
stc
push
imul
inc
jge
enter
sbb
add
or
sub
scas
adc
xchg
int3
out
add
pop
push
jmp
sahf
inc
jbe
mov
sbb
out
test
inc
inc
fs
into
mov
dec
and
stos
xchg
insl
shrl
jg
imul
movsl
pop
aas
test
sbb
bsr
mov
in
xor
ret
inc
mov
int3
pop
dec
add
pop
pop
sbb
mov
pop
iret
das
sub
loopne
fcomps
scas
add
push
cmpsb
shr
pop
adc
mov
xor
movsl
bound
fimull
lock
sub
decl
add
sbb
and
xchg
cwtl
pop
fnstsw
imul
cmpsl
add
lds
sub
push
xchg
cld
cs
sbbl
jne
push
pushf
sbb
cmp
mov
jno
push
data16
outsl
push
or
and
arpl
pusha
pop
das
xor
test
mov
out
cmp
pop
mov
or
test
daa
aam
push
int
dec
mov
mov
stos
es
jl
jecxz
sti
iret
jns
pop
adc
gs
push
in
test
xchg
dec
adc
imul
imul
push
movsl
in
add
or
xchg
mov
pop
or
in
cmp
lea
inc
mov
xchg
popa
xor
jp
mov
jmp
or
or
and
dec
ret
scas
sarl
repnz
jnp
dec
and
lret
sub
mov
sbb
call
cli
inc
xor
mov
ret
fcomps
ss
insb
or
push
fisubrs
testl
dec
push
mov
sub
insb
inc
xchg
cli
pop
test
les
dec
in
cmp
or
test
test
leave
dec
cmp
and
sub
sbb
mov
aam
pop
and
pop
test
sub
notb
adc
mov
out
or
pushaw
rcrb
into
loopne
xchg
pop
js
stos
jb
lods
or
sub
nop
bound
btc
js
sub
ret
xor
push
pop
fdivr
mov
xchg
pop
insb
jg
jne
adc
jno
mov
ljmp
push
cmp
movsl
and
xlat
sbb
cmp
mov
xorl
loop
or
xor
mov
jmp
aam
adc
gs
subb
dec
leave
sahf
fisubl
aaa
sahf
xchg
das
pop
cmp
aad
or
in
bound
loope
xchg
pop
xor
in
test
pop
pop
and
push
cmp
les
subl
in
mov
into
sub
inc
jp
mov
dec
data16
xorl
jns
outsb
adcb
pop
loop
rolb
push
lret
push
mov
sbb
xchg
and
jl
mov
lahf
jge
mov
decb
add
or
in
cltd
mov
inc
jno
loopne
push
push
shlb
jo
ret
fwait
mov
fisubl
mov
mov
sbb
pop
int
xchg
cmp
sbb
xchg
adc
push
cmp
fstpt
pop
or
cmc
xor
fnstcw
arpl
and
xchg
out
jmp
dec
pop
jmp
or
popa
ss
scas
xor
adc
push
jns
into
aaa
jns
je
xor
mov
lcall
pop
loope
pop
fidivl
sbb
xor
repz
fwait
push
out
mov
fidivl
mov
cmp
fmuls
das
lea
mov
cvtps2pi
ljmp
mov
stos
mov
mov
push
mov
stos
pop
cmpsl
fldcw
sbb
dec
cmp
pushf
shlb
stos
lret
cmpsl
les
ljmp
sub
leave
in
jmp
cmp
inc
xor
inc
ret
jns
sbb
out
cmp
addr16
ja
jge
pop
int3
movsb
or
sub
push
push
xor
mov
into
orb
sub
or
in
and
sbb
jns
mov
inc
out
inc
test
cmp
idiv
bnd
push
fxtract
add
jb
xchg
movsb
ds
in
aad
shll
aad
ja
dec
lret
orl
bnd
into
aad
lods
push
call
push
adc
std
jo
mov
jb
mov
xchg
and
xor
jb
sbb
movsb
imul
cmc
fidivrs
stc
loope
mov
pop
test
push
test
pop
clc
pusha
subl
and
push
lds
bound
in
jo
movsb
sub
xor
sub
mov
push
push
cld
icebp
daa
jle
mov
add
sbbb
cwtl
mov
pop
sub
mov
cmpsl
pop
cld
mov
aaa
mov
lods
popa
iret
mov
lods
pop
iret
es
dec
inc
push
push
int
add
ret
mov
gs
push
imul
dec
scas
adc
and
fnstcw
aas
inc
sbb
scas
mov
push
pop
insl
movntq
out
cmp
adc
lds
jbe
hlt
dec
inc
mov
fmull
pop
js
or
insb
inc
in
scas
mov
mov
push
imul
mov
test
jae
lods
push
lcall
lock
mov
test
stos
cmp
fidivl
and
and
adc
movsl
mov
hlt
mov
mov
sub
pop
pop
xacquire
dec
jns
mov
repnz
xchg
in
rorb
adc
sbb
inc
test
mov
cld
incb
jb
fs
mov
dec
push
add
inc
mov
sub
ss
lret
mov
lds
hlt
push
sub
xor
jb
popa
scas
iret
dec
sub
sub
xchg
jecxz
adc
push
fmuls
xchg
jnp
jns
pusha
jo
pop
orl
leave
push
imul
adc
jle
mov
loop
fcoml
gs
sbb
adcl
add
outsl
les
int
jbe
jo
incl
pop
inc
out
push
popf
xchg
sti
test
mov
xor
addr16
sbb
sbb
add
pop
loopne
dec
in
fstp
pop
xchg
dec
insb
ds
aad
fucomp
movsl
popf
add
shlb
inc
sub
or
repz
lret
ret
mov
mov
push
cmp
mov
mov
lods
adc
fidivl
out
inc
mul
iret
into
jo
cli
js
iret
repz
adc
dec
stc
lea
mov
mov
push
js
aad
pop
loop
add
sbb
dec
pop
push
pusha
jns
sbb
clc
pop
lret
jecxz
adc
mov
push
mov
mov
mov
dec
in
jns
std
xor
inc
add
popa
out
adc
jl
mov
in
imul
sub
xchg
push
mov
out
data16
inc
aam
test
in
inc
inc
cmc
stos
fdivrl
mov
push
lods
add
jo
xchg
xor
out
push
xlat
push
xchg
cmc
sub
in
aad
sbb
push
cmpsb
sbb
fcompl
xchg
in
lret
jmp
push
inc
xor
lock
mov
sbb
out
into
or
ret
push
fisubl
lods
xor
or
ljmp
lea
fs
ja
aaa
xchg
lock
and
faddl
adc
cltd
pop
cwtl
ret
jmp
les
cmpsl
inc
lret
adc
ja
push
sub
into
push
mov
xor
mov
cmc
jg
mov
pop
lahf
jb
jge,pn
mov
dec
nop
andl
mov
pop
in
mov
addl
bound
xchg
cmc
in
dec
loopne
lock
sbb
addr16
mov
adc
ljmp
and
and
cwtl
mov
mov
lods
sti
cwtl
repz
xchg
xchg
xchg
mov
pop
jle
pop
push
push
ds
loopne
mov
shl
fnstenv
insl
shl
out
cmpsl
mull
ja
mov
les
xchg
into
mov
cs
arpl
xchg
push
ss
lahf
dec
sub
dec
lcall
sub
out
in
mov
repnz
and
push
cmc
out
sbb
mov
rclb
jecxz
mov
out
test
adc
rcll
sub
es
pop
lods
loopne
jnp
jmp
lahf
inc
int
mov
add
sub
mov
mov
jns
sub
push
mov
ljmp
sahf
mov
xchg
or
adcl
test
test
pop
mov
add
push
je
and
xchg
push
xlat
jp
sbb
mov
insb
xchg
scas
push
or
dec
ds
pop
shl
xchg
pop
dec
jo
fidivrl
dec
aaa
je
add
out
push
daa
std
cmp
push
push
xchg
push
cmp
pop
lods
je
int3
icebp
push
test
dec
pushl
xlat
cmp
aaa
and
daa
addr16
xchg
iret
int3
fstpt
lret
jbe
imul
or
cld
addr16
mov
xchg
push
dec
stos
inc
mov
mov
xchg
out
xchg
mov
jno
insb
mov
pop
push
clc
insl
xor
lahf
xlat
aaa
mov
xchg
or
dec
incb
xchg
xorb
stos
add
jb
gs
cmp
fstl
lea
jp
lock
frstor
addr16
dec
sub
das
xor
push
daa
jne
xor
cmp
sarl
out
cmpsl
and
fbstp
xchg
popa
test
jne
movsl
jmp
sbb
mov
popa
sahf
loopne
add
loope
or
jg
loop
insl
popf
sub
out
mov
out
imul
gs
popa
pop
pop
or
mov
cmp
xor
outsl
ljmp
mov
mov
jp
shrb
push
add
pop
xchg
push
imul
mov
or
inc
mov
cwtl
and
aad
and
mov
cmp
xor
lret
sbb
std
fsubrs
repz
xor
stos
dec
outsb
mov
xchg
ds
sbb
and
push
test
sti
cltd
inc
jo
add
popf
inc
jmp
cmp
arpl
push
pop
mov
out
js
sbb
adc
mov
loopne
pushf
pushf
cld
or
in
lret
insl
adcb
popf
out
jns
outsb
adc
cmp
stos
mov
and
and
sub
lret
je
cmp
pop
sbb
and
iret
jns
sub
sub
clc
jb
adc
shl
add
out
adc
idivl
inc
in
pop
mov
inc
or
icebp
fstcw
xchg
fnstcw
insb
movsb
notb
push
pop
pop
scas
cltd
stos
ret
cld
ret
fwait
pop
adc
movsb
nop
xchg
pop
jo
int3
pushl
lea
nop
push
negl
movsl
adc
jbe
sbb
lcall
sbb
xchg
stc
setnp
fisttpl
mov
rol
iret
enter
idivl
or
xchg
mov
xchg
enter
xchg
mov
fs
push
jno
adc
stos
fwait
cmp
call
incl
cs
and
outsl
and
rol
jae
cmpsl
mov
add
add
add
int
inc
aaa
add
std
pop
lods
push
mov
sbb
scas
sub
jp
push
add
jbe
aaa
mov
inc
sub
xlat
in
xchg
fisttps
pop
fcompl
xlat
outsl
adc
jecxz
arpl
aam
push
fbld
xchg
pop
adc
cmp
mov
or
out
mov
xchg
dec
pop
movsb
lret
sti
inc
dec
movb
inc
or
push
push
ljmp
sub
icebp
jge
mov
cwtl
mov
xchg
in
lock
out
repz
inc
repnz
add
mov
xchg
xchg
or
not
sbb
pop
jge
mov
dec
stos
sbb
mov
fldt
int3
mov
push
in
test
xlat
out
out
sahf
icebp
outsl
iret
popa
dec
rcll
jmp
popf
out
stos
mov
rclb
mov
subb
cmpb
sbbb
push
mov
stos
dec
xor
scas
pop
data16
xor
aaa
psrad
add
cmp
xlat
iret
jg
mov
pop
add
mov
inc
popa
inc
sub
and
imul
rolb
into
cmp
mov
push
imul
mov
pushf
mov
mov
rcrl
lret
popf
lret
out
mov
fs
add
mov
push
dec
xor
and
paddb
fs
fldcw
adc
add
arpl
lds
add
dec
dec
fisubrs
pop
out
lret
rcr
cmp
sub
int3
into
rorl
push
sahf
and
and
sub
add
xchg
stc
mov
add
in
ret
mov
push
pop
ret
sbb
mov
imul
cmpsl
push
mov
adc
lds
popf
ljmp
scas
adc
test
bound
test
pop
jnp
push
jne
pop
test
pop
js
ficoms
pop
push
jmp
daa
inc
pop
inc
insb
les
mov
pop
clc
cmc
sar
in
sub
nop
outsl
mov
xor
cmp
rorb
filds
pop
ret
dec
loope
cmp
scas
inc
stos
dec
ljmp
stc
cmc
cmp
push
insb
add
push
push
out
pop
add
mov
popa
add
shll
inc
nop
mov
or
loopne
push
xlat
sub
mov
mov
ret
outsb
pop
pop
push
jmp
mov
fldcw
dec
sub
pushf
dec
cmp
sbb
dec
clc
vorps
aam
out
jne
inc
cmpl
jge
mov
xchg
lcall
mull
dec
xchg
adc
mov
addb
sbb
fidivs
lods
movsl
jge
add
push
xor
out
jno
fwait
mov
xchg
lahf
movsb
sbb
xchg
jmp
loope
push
cmc
xchg
dec
jbe
stc
add
jl
mov
aam
daa
ss
and
sub
lea
jo
scas
setae
pop
nop
jae
mov
push
push
jp
adc
call
imul
mov
int
dec
pusha
hlt
leave
mov
inc
loope
jmp
inc
hlt
gs
push
lcall
dec
cmpsb
sub
das
add
sbb
mov
xorb
xchg
adc
or
std
sub
inc
and
mov
call
call
add
scas
in
mov
insl
cltd
xor
stos
jp
cmp
mov
add
pop
dec
ljmp
cld
inc
mov
pop
stos
cmp
sub
cli
inc
add
loope
dec
loop
fs
adc
dec
int3
mov
in
loopne
sub
mov
add
add
fldt
push
dec
inc
mov
inc
xor
inc
enter
jp
in
inc
cmp
push
lcall
adc
ret
clc
lret
mov
push
shl
int
icebp
add
cs
bound
sub
int3
ret
inc
jns
imull
mov
fisttpll
cmp
push
cld
out
dec
lock
jg
pop
pop
add
adc
scas
sub
ljmp
xor
negl
movsb
jp
push
shll
insb
jg
leave
mov
icebp
lods
jmp
lods
insl
add
mov
icebp
fadds
icebp
dec
sbb
push
push
mov
and
sub
in
pusha
adc
gs
mov
ror
mov
inc
jge
adc
fxch
mov
sbb
dec
adc
push
cwtl
xor
mov
add
leave
leave
fincstp
sarl
inc
sbb
mov
cmpsb
push
mov
xor
aad
jb
in
cmp
call
sub
dec
lret
pop
sbb
mov
sub
xchg
insb
mov
xchg
inc
mov
outsb
test
ja
mov
or
push
fldenv
icebp
jb
sub
push
and
mov
jle
sub
adcl
mov
popf
dec
mov
inc
cltd
xchg
mov
adc
popf
cmp
lods
hlt
imul
hlt
mov
sub
ljmp
xchg
sbb
and
movsb
hlt
out
cmpsl
push
dec
test
cmp
mov
jne
pusha
mov
inc
and
jno
and
push
sbb
imul
clc
jmp
pop
cmpsl
cmpsb
loop
adc
fistpl
aaa
loop
cmpsb
mov
mov
mov
xchg
sbb
sbb
cltd
sub
outsl
pop
push
mov
insl
mov
mov
fildl
sbb
ret
xchg
syscall
idivl
push
in
sbb
divb
sar
jbe
lret
iret
xor
xchg
ret
inc
lods
cmc
xchg
mov
xchg
dec
push
and
inc
push
ja
in
bound
adc
ds
out
cs
sub
lret
jne
insb
repz
lret
xchg
push
dec
cmpsl
xchg
fisubrs
imul
dec
mov
notb
jmp
mov
aas
stc
inc
fwait
rcl
lds
jge
cmc
pop
arpl
lahf
jge
clc
mov
or
push
out
mov
jmp
fdivrl
pop
sub
mov
mov
aaa
cmp
mov
push
stos
stos
push
and
push
ss
je
je
std
dec
adc
in
push
es
pop
std
lcall
mov
jo
mov
dec
pop
jbe
jle
adc
stc
outsb
pop
jl
daa
divb
gs
loopne
iret
dec
into
sub
lea
xchg
push
movsl
push
movsl
fcmovu
test
mov
in
or
xor
or
dec
in
and
xor
daa
movsb
ret
mov
lods
cmp
xchg
test
sbb
mov
cmpsb
das
loope
cltd
inc
aas
insl
push
pop
mov
xchg
mov
sub
lea
jo
inc
addl
nop
mov
push
out
mov
pop
cmpsl
or
shll
outsl
xor
inc
imul
movsl
and
iret
jo
cmp
jmp
cltd
iret
sbb
dec
sub
jae
adc
push
arpl
stos
sahf
loop
jb
out
sub
pop
popa
lods
or
nop
push
cmp
or
pop
shrb
out
shr
aam
mov
repz
mov
inc
std
add
mov
mov
dec
fnstcw
cmc
icebp
fnstenv
xor
push
cltd
int
jb
fsubrl
inc
shl
inc
pop
and
fisttps
in
and
loopne
xchg
adcb
jae
scas
fwait
cli
lret
dec
js
cld
and
pop
cmp
fdivr
jmp
fsts
pop
insb
mov
xor
xchg
dec
dec
data16
xor
mov
sub
and
mov
push
sub
mov
stos
jle
mov
mov
add
loope
mov
insl
mov
jbe
rorb
adc
sar
sub
xor
pop
movsb
inc
xchg
sbb
jmp
jno
inc
xchg
lds
das
jmp
xor
xchg
loop
add
movsb
iret
or
push
cmp
sbb
dec
sbb
aaa
fimuls
pop
jno
cld
lret
or
fwait
inc
js
inc
or
lret
cmp
mov
pmullw
xchg
das
leave
fs
pop
adc
fs
aad
xor
out
sti
adc
lcall
andl
loope
daa
dec
fidivrs
add
lahf
out
push
or
ret
imul
xchg
add
pop
and
cmc
jns
or
cmp
mov
lcall
imul
stos
sti
xor
mov
mov
addb
jge
decb
aas
fcompl
push
adc
lret
and
pop
lods
sti
pop
mov
ret
pusha
xor
dec
jne
cmp
arpl
add
add
push
jmp
data16
pushf
ret
lea
lods
xchg
sbbb
gs
mov
and
iret
addr16
loop
in
cmp
jae
mov
dec
sbb
fwait
int
mov
cld
test
dec
ss
out
popa
and
jns
cmp
test
and
stos
mov
aad
mov
addr16
lret
repz
xor
fsts
dec
cmc
or
insl
loop
xchg
cmp
pop
add
adc
mov
or
add
add
es
lods
testb
jle
andb
mov
bound
xchg
cmpsb
divl
xchg
mov
out
mov
adc
outsl
adc
aaa
popa
call
mov
sbb
cmp
adc
ficoml
jecxz
cli
xchg
sbb
mov
jge
popa
dec
rolb
movsl
mov
icebp
nop
ret
sub
adcb
ret
pop
inc
imul
sbb
outsl
js
adc
mov
fidivs
lret
xor
push
push
cld
rcr
adc
movsl
jbe
xor
jp
outsl
clc
dec
popf
sub
jg
and
popa
inc
jne
repnz
push
push
rcl
les
iret
add
cmpb
inc
mov
rorl
scas
push
sub
addr16
dec
cmp
in
mov
and
pop
leave
int3
adc
iret
dec
clc
pop
inc
pop
inc
push
jo
push
movsb
mov
pop
ss
lret
popf
lea
pop
das
dec
cmc
outsl
je
fcompl
xor
pop
lret
jo
push
jbe
popf
xor
inc
push
aam
sbb
jne
xchg
mov
mov
dec
dec
pop
sub
mov
pop
mov
mov
or
inc
jmp
popl
xchg
xor
call
movb
push
cmpsl
adc
jmp
and
stc
sbb
or
xor
in
and
add
jecxz
out
pop
push
push
pop
or
jae
stc
or
adc
add
cmp
dec
aam
cmpb
mov
fcmovbe
fcoml
addb
popf
inc
out
mov
mov
dec
dec
xor
mull
fwait
pop
inc
xor
jmp
out
add
push
and
inc
nop
inc
std
jp
sub
test
sahf
sub
shlb
pop
pusha
cmp
sbb
call
mov
insb
push
jp
push
fdivrs
adc
cli
fbld
dec
push
inc
fnstcw
inc
cmp
arpl
nop
das
push
fldenv
push
xor
mov
in
add
mov
cmp
xor
jno
test
sbb
arpl
add
mov
inc
mov
addr16
call
or
mov
ret
daa
push
pop
xchg
and
cwtl
add
andb
cmp
mov
sbb
sbb
cmpsb
aaa
push
bound
arpl
inc
jl
popa
dec
push
test
enter
outsb
arpl
sbb
dec
push
lds
xor
mov
iret
jnp
xorl
cmp
adc
mov
rcll
inc
mov
mov
xchg
fldl2e
mov
and
popa
fwait
push
mov
or
fiadds
jp
mov
gs
mov
jge
scas
cmpsl
add
movd
add
popf
fildll
inc
dec
stos
outsl
or
pusha
push
mov
stc
test
dec
mov
xchg
cltd
or
lahf
dec
or
and
mov
add
aaa
push
int
mov
les
add
pop
imul
mov
iret
cmp
sbb
inc
inc
loopne
jnp
ds
mov
rorb
mov
adc
sub
lock
dec
mov
movsl
add
xor
mov
test
sub
fnsetpm(287
adc
cmpl
adc
push
sub
pop
iret
cltd
icebp
stos
mov
enter
push
pop
test
jne
icebp
adc
icebp
rorb
cld
push
push
sub
mov
sub
iret
pop
shrl
push
imul
in
nop
add
mov
in
insl
push
lea
ja
popf
adc
or
pop
add
or
xor
push
scas
jle
fisttpll
fcompl
dec
idivl
add
push
out
fiaddl
inc
lahf
inc
je
push
pop
jnp
jle
jg
or
mov
in
jp
mov
shll
cmp
enter
pop
xchg
icebp
pusha
popa
push
sub
insb
sbbl
push
das
sahf
hlt
movsl
shl
push
das
jns
xor
jb
lds
lock
adc
xor
sahf
aas
pop
dec
add
and
fsubs
dec
add
xchg
outsb
xchg
xchg
pop
mov
dec
jb
inc
adcl
and
sbb
xchg
out
fstps
dec
hlt
out
pop
sbb
cmp
enter
mov
cmp
adc
xchg
push
push
push
arpl
sbb
jmp
pusha
sub
cli
fwait
sub
push
insl
pop
sub
je
and
cmp
mov
in
popa
cmpsb
mov
les
inc
mov
cmpsl
pop
sbb
xorb
cs
popf
ss
dec
push
push
and
push
push
fstps
mov
je
jle
push
loopne
rcrl
clc
mov
xchg
push
fwait
loopne
movsl
adc
arpl
adc
into
lret
jnp
std
jae
jg
pop
xchg
les
adc
mov
movsl
fmuls
dec
mov
pop
pop
mov
hlt
dec
in
mov
or
adc
dec
xchg
xchg
jo
xlat
sub
les
mov
and
imull
ds
or
sub
ja
pop
dec
cmpsl
bnd
inc
aad
aas
outsb
xor
aaa
push
mov
dec
js
sbbb
cltd
in
shll
or
inc
movsl
loop
cmp
mov
jns
cmp
mov
mov
dec
mov
repz
mov
mov
out
or
int3
jle
test
repnz
fiadds
adc
std
icebp
push
cld
jae
cmp
insl
xor
sbb
adc
mov
jg
add
jb
inc
mov
jge
xchg
jmp
mov
and
pop
adc
sub
add
cmpl
cli
repnz
push
fildl
pop
xorl
dec
nop
pushf
pop
repnz
lods
hlt
test
dec
cltd
inc
ss
sub
add
fwait
das
bound
adc
xor
mov
cltd
and
mov
jecxz
cli
dec
js
pop
idivb
nop
lock
daa
jmp
fstp
ja
insl
adc
lret
movsl
or
in
xchg
stos
lds
mov
pop
lahf
movsl
push
sbb
test
mov
mov
jns
jmp
ss
inc
jge
into
loope
mov
in
outsl
dec
leave
mov
mov
in
incl
cmp
xchg
mov
mov
adcb
orb
hlt
ss
aas
jge
fnstcw
in
cwtl
stc
cmp
push
inc
fidivrl
fnstsw
les
fistpll
push
ret
call
and
fs
mov
in
inc
xor
mov
sub
adcb
sub
hlt
pop
int3
mov
fs
scas
rcrb
data16
mov
out
fsubs
sub
mov
mov
cltd
xchg
movzwl
jns
mov
jmp
add
mov
or
loopne
loope
std
bound
inc
icebp
inc
mov
into
fs
pop
dec
mov
hlt
in
out
bound
xchg
into
ret
lcall
and
dec
or
dec
arpl
jns
clc
add
mov
mov
mov
jbe
dec
mov
pop
aaa
daa
sahf
dec
cltd
pop
mov
pop
push
jge
stos
rolb
ret
pushf
adc
hlt
fucomip
pop
jecxz
in
sub
push
sbb
adc
std
cmp
mov
xchg
mov
xor
fisubrs
ds
out
adc
pop
fiaddl
cli
adc
daa
pusha
int
sub
pop
aad
cmp
push
jae
jo
fldt
jo
and
mov
int
add
movsl
fstpt
jmp
insl
sbb
push
jge
movl
aam
enter
jbe
adc
sti
aaa
xchg
or
adc
lods
shrl
jp
xchg
lods
xchg
push
ljmp
mov
imul
gs
addr16
testl
push
outsl
xchg
push
jno
add
pop
xchg
mov
fisubrs
jg
mov
icebp
je
xor
xor
cmpsl
adc
repz
or
jnp
addr16
ds
into
sub
leave
lds
lods
popa
lcall
add
mov
xor
push
mov
or
mov
mov
or
jnp
icebp
cwtl
mov
push
xlat
sti
mov
enter
aas
sub
push
xor
addl
sbb
daa
mov
popa
dec
and
xchg
xor
jo
call
cmp
sub
jecxz
pop
cli
fcmovu
cltd
dec
loope
inc
lds
mov
out
mov
imul
push
mov
and
sbb
test
and
inc
jnp
fisubrl
push
mov
out
loop
ret
ficoms
mov
repnz
sbb
mov
jmp
ds
fsubs
xor
add
pop
add
outsl
hlt
sub
ret
xchg
sbb
inc
xchg
sbb
push
adc
push
mov
sub
mov
loope
fists
fwait
cmp
cwtl
lods
jns
and
cli
pusha
mov
dec
shrl
sti
mov
xor
push
mov
pop
in
je
mov
sti
test
popa
adc
imul
pop
dec
cmpsb
dec
pop
rolb
xor
mov
push
ficompl
mov
ja
add
push
mov
pop
shl
or
jl
loope
imul
adc
pop
xchg
leave
lret
jne
sahf
jecxz
adc
push
pop
fbstp
pop
xchg
lea
movsb
inc
cli
pop
data16
daa
rcrl
add
filds
push
cmp
out
sbb
jno
arpl
lret
cmp
mov
xchg
mov
into
xchg
mov
subb
xor
add
addr16
outsl
and
lea
cld
pop
fistpll
or
ret
idivb
push
add
or
mov
jno
mov
adc
cmp
add
outsb
stos
jne
out
imul
inc
cmp
fwait
imul
dec
add
in
lea
inc
cmp
in
das
scas
dec
push
sbb
dec
lods
aad
push
out
aam
adc
push
mov
lds
fstps
or
mov
ret
arpl
add
add
call
dec
mov
loopne
mov
leave
out
xchg
cmpsl
outsl
inc
aam
push
call
add
mov
adc
cmp
call
shrl
int
fucomi
add
xchg
mov
daa
daa
inc
and
jnp
cmp
jl
pop
fwait
out
mov
mov
jl
testl
movsb
mov
pop
inc
mov
adc
out
or
jg
xchg
in
out
sub
adcb
icebp
jne
in
add
add
insl
and
out
in
or
je
jl
sub
leave
incb
fsts
jecxz
shll
stc
xor
repnz
sub
push
adc
in
std
stos
or
xlat
jmp
pop
sub
add
je
in
xchg
jle
lods
testl
cmp
mov
cmpb
icebp
lods
lock
imul
jge
mov
add
outsl
and
lods
inc
fcmovnu
aam
mov
jmp
shlb
sub
std
inc
jl
pusha
xchg
push
push
sti
daa
jecxz
ss
lods
inc
add
mov
stos
pop
or
movsb
movsl
dec
bound
fdivrl
fidivrs
push
xchg
arpl
mov
jle
pop
imul
fnsave
scas
adcb
lods
enter
sub
out
and
stos
enter
mov
cmpsl
cwtl
inc
shrl
enter
fwait
aaa
hlt
loope
shll
adc
shl
lock
loop
icebp
shll
jb
enter
inc
cmpsb
sbb
int3
or
push
shrl
pop
mov
faddl
cmp
mov
xchg
cmpsb
cmp
dec
mov
jno
sarl
daa
ds
ret
pop
mov
ficomps
mov
sbb
cmpsb
ljmp
rcrb
test
push
and
jl
pop
insl
mov
inc
insb
pop
push
lcall
mov
scas
dec
shrb
cmp
add
mul
push
testl
or
or
sahf
das
dec
inc
jbe
popl
insb
mov
cmp
mov
mov
add
lcall
sub
shlb
loope
xchg
xchg
pusha
nop
test
sub
loopne
dec
ret
push
add
pop
mov
adc
adc
int
sbb
or
fwait
xchg
cltd
mov
in
xchg
lea
fs
mov
inc
fsubrs
mov
cmpsb
iret
sahf
push
mov
sahf
dec
push
jmp
iret
sbb
xchg
mov
pushf
inc
cmc
push
in
cmp
mov
jp
sub
jge
cmp
jp
out
xchg
aaa
sbb
sub
stos
idivb
dec
scas
dec
js
psubw
push
xor
mov
inc
mov
adc
repnz
jb
mov
xchg
dec
pop
aam
clc
and
repz
jle
mov
repnz
aaa
push
icebp
sbb
jle
lret
adc
pop
stos
jl
add
call
shrl
inc
arpl
mov
cmp
sbb
int
notl
and
mov
sbb
adc
jo
pusha
pop
scas
das
sahf
dec
bound
jmp
pop
mov
shlb
addr16
adc
pushf
sbb
jl
or
stc
pop
stc
fimuls
mov
imul
hlt
add
adc
lds
pushf
pushf
sub
xchg
lods
mov
clc
sbb
pop
out
jns
int
cmpsb
cmpsl
scas
mov
jae
cmp
add
ds
cmc
sbb
ficompl
xor
inc
push
mov
jp
loopne
fs
mov
testb
jmp
cwtl
xor
push
add
push
adc
mov
or
insl
xchg
clc
push
add
pop
pop
daa
mov
subb
mov
call
dec
xor
repnz
and
outsl
or
shlb
pop
fisttpll
insb
out
test
xchg
lds
ret
jnp
inc
push
dec
nop
je
cs
ror
push
subb
enter
add
jns
dec
sbb
dec
mov
sahf
sub
sbb
inc
cmpsb
adc
lock
bound
sarb
inc
xchg
mov
jmp
pusha
jo
mov
sbb
enter
js
int3
aam
mov
sub
shrl
and
add
jecxz
loop
idivb
ds
xor
hlt
adc
testb
cmp
jae
imul
daa
sbb
jnp
ficoms
inc
fnsave
and
push
std
hlt
push
fiaddl
lds
fiaddl
jb
cmp
push
call
cmp
imull
push
add
dec
xchg
cltd
addr16
xchg
sbb
xor
popa
dec
dec
into
pop
xchg
xchg
imul
stc
data16
scas
inc
jp
sub
out
pop
decl
mov
or
clc
mov
push
sbb
js
out
mov
mov
jge
test
enter
call
insb
aas
xchg
out
xor
les
lock
cli
mov
iret
out
xlat
js
cmp
and
cmpsb
popa
push
add
and
cmp
mov
out
add
std
rorl
xor
repz
push
fmull
dec
pop
cwtl
dec
cltd
orps
mov
mov
adc
ja
jb
push
in
lds
sbb
subb
mov
xor
mov
xor
pop
cmp
ds
subl
mov
mov
add
outsb
lcall
aaa
fildl
or
inc
cmp
xor
gs
repz
sbb
or
daa
int3
jg
add
dec
lea
outsb
pop
mov
lahf
sbb
rorl
jp
mov
pop
push
adc
push
mov
xchg
push
test
push
icebp
cwtl
or
loop
xchg
add
inc
repnz
sub
inc
cmp
push
mov
fbstp
repz
mov
sub
mov
lret
push
adc
and
aad
lods
and
imul
sbb
outsl
sub
int3
fdivrs
push
mov
pop
jae
shufps
push
loopne
mov
in
leave
test
jg
adc
addr16
and
xchg
sbb
mov
frstor
lahf
cmpsl
stos
jno
add
or
cs
out
cs
mov
xor
inc
mov
fidivrs
dec
shl
ret
outsb
pusha
filds
aaa
pop
pop
push
cld
pop
sbb
jmp
adc
mov
adc
mov
loope
mov
mov
stos
adc
xchg
movsl
dec
int
sahf
iret
aaa
cli
dec
hlt
ficoms
into
enter
inc
std
xlat
adc
pop
cmp
shll
loop
ja
in
incb
imul
imul
and
push
jp
adc
aad
lock
sarb
arpl
cmp
xor
mov
ret
movsl
andb
popf
dec
ja
sub
aaa
ret
mov
jle
pop
fsubrp
shl
push
push
mov
cld
sbb
xor
cmp
fstp
xchg
or
das
inc
iret
fwait
cmc
in
test
fs
jns
cmp
xor
pop
inc
sti
arpl
dec
div
adc
sub
or
sbb
cs
xor
loope
xchg
dec
or
mov
or
scas
arpl
lds
xor
add
mov
ud0
fcoms
iret
outsb
rcrb
call
cmp
or
dec
aam
jo
aad
push
jae
int
add
pop
mov
and
xchg
popl
adc
outsb
jge
push
hlt
and
xor
mov
xchg
mov
lods
stos
mov
jle
add
lret
fstpt
in
in
inc
nop
nop
loopne
dec
cwtl
daa
lods
pop
scas
jmp
cmp
sub
decl
jmp
mov
add
cwtl
mov
pop
les
movsl
inc
xchg
xchg
aaa
out
in
jne
push
daa
hlt
clc
test
leave
mov
nop
sub
out
adc
add
imul
pusha
pop
icebp
lods
dec
out
xor
cli
or
lahf
push
mov
icebp
pop
aaa
mov
in
inc
push
out
add
or
inc
inc
jl
outsb
aad
shlb
lret
xor
pop
ss
scas
cld
int
xchg
xchg
icebp
cmp
loop
ret
mov
pop
push
scas
sub
pop
test
push
icebp
jle
sub
dec
std
ret
inc
fcmove
dec
aam
and
and
inc
sub
pusha
clc
cmp
sub
xchg
lret
fsqrt
dec
outsb
mov
sub
sub
lret
inc
pushl
jb
xchg
daa
dec
pop
mov
adc
jg
lcall
movb
push
sar
cwtl
mov
adc
pusha
push
adc
divl
jne
inc
mov
imul
inc
scas
sbb
and
pop
sbb
jb
mov
mov
sub
mov
pop
pop
lret
xor
adc
cmp
jmp
sahf
outsb
sub
out
cwtl
mov
fs
ror
mov
lret
addb
jno
dec
cmp
and
xlat
mov
cmc
in
inc
mov
xchg
addr16
mov
imul
out
mov
lret
mov
sbb
add
push
stc
fs
in
xor
sub
jmp
cmp
and
push
or
clc
mov
or
dec
outsb
xchg
jl
or
addb
jp
bound
out
and
stc
and
arpl
lods
dec
iret
gs
leave
push
xor
adc
cs
inc
xchg
mov
xor
push
aad
fidivs
sub
daa
and
and
loopne
pop
xchg
jmp
pop
hlt
xchg
arpl
adc
pop
xchg
push
in
jg
push
inc
pop
in
mov
loop
cltd
cmc
push
repz
mov
mov
das
arpl
xchg
push
test
sub
sub
xchg
add
lahf
mov
push
adc
stos
jae
cli
and
jl
jg
jecxz
shll
repnz
jb
fwait
sbb
jl
dec
adc
pop
pop
popf
std
push
fwait
in
jae
dec
jo
mov
sbb
inc
inc
aaa
inc
das
cmp
pusha
xchg
cmp
or
shlb
loop
es
je
movsl
into
dec
jnp
cli
fimull
and
outsl
or
mov
repnz
sahf
sarl
cmpsb
dec
inc
aad
cmc
mov
lret
ljmp
orl
out
inc
es
into
xchg
and
mov
or
pop
repz
push
push
dec
and
mov
or
inc
sub
sub
adc
and
int
adc
sub
pop
test
dec
jne
xchg
dec
pop
jp
add
out
stos
sbb
iret
cmc
stc
int3
mov
std
inc
ret
shrb
push
cmp
dec
loopne
fs
xor
and
and
jmp
fcmovnb
sub
jno
mov
ljmp
jg
xchg
xlat
mov
or
push
add
push
jne
rolb
movsb
and
jmp
dec
or
cmp
movsl
lods
mov
xlat
out
pop
jg
or
pop
test
jno
scas
xor
fbld
sbb
xchg
cwtl
add
mov
or
xchg
pop
push
ds
xchg
das
sub
xchg
and
jle
lret
push
ret
pop
in
mov
in
mov
stc
imul
and
cmp
aaa
xor
cwtl
sub
jle
inc
sub
inc
xor
ret
mov
dec
xor
in
jo
mov
repnz
adc
pop
inc
mov
repnz
cmp
imul
popf
jae
rcrl
adc
repz
push
xlat
push
xchg
adcl
movsl
mov
add
sbb
data16
mov
xchg
add
stc
and
jno
les
hlt
divl
or
sarl
loop
mov
lods
cmp
adcl
push
cwtl
adc
push
add
inc
in
out
loope
lret
ret
sub
scas
or
ret
roll
inc
stc
test
nop
mov
ja
mov
pushf
adc
pop
enter
insb
push
imul
pop
arpl
push
out
add
xchg
rcrl
mov
out
pop
sbb
and
arpl
jb
es
jg
pop
sbb
xchg
into
lret
aam
test
cmp
fwait
popa
lea
push
and
imul
aas
inc
pushf
fincstp
push
inc
and
sub
xchg
arpl
mov
pop
pop
fcompl
jecxz
push
call
movsl
sub
xor
jecxz
addr16
outsl
fcoml
xchg
vpinsrw
test
ja
repnz
mov
jnp
xor
adc
out
ljmp
add
ja
in
mov
mov
hlt
mov
outsb
jp
in
orl
sbb
sub
sub
outsb
imul
pop
lds
lods
nop
test
jbe
pop
sahf
adc
movsb
stos
dec
xchg
imul
push
mov
loopne
inc
rcll
push
add
popa
dec
test
and
and
andb
xchg
scas
lods
xchg
pushf
mov
sbb
add
call
pop
xor
out
cmp
adc
int
push
sarb
scas
xchg
ror
sub
mov
xchg
rcl
scas
push
xlat
fwait
pop
cmc
push
fcompl
jecxz
fyl2x
inc
mov
shrb
push
add
mov
out
mov
cmc
out
scas
xor
out
mov
in
mov
adc
xor
add
and
push
fldenv
push
sbb
fmull
js
xchg
hlt
fldl
mov
cmp
cs
insl
cmp
pop
xchg
jno
aas
loopne
mov
lock
inc
inc
push
pop
sbb
jmp
aad
cmpsb
sub
jge
xchg
pop
loop
adc
out
mov
jne
fs
ficompl
dec
adc
test
mov
pusha
push
push
push
inc
jp
xor
lea
xchg
mov
mov
mov
push
mov
popa
test
sub
sub
bound
ljmp
sbb
fs
and
pop
and
stc
movl
jno
icebp
fisubs
sub
jbe
lret
inc
fwait
cmp
mov
pop
in
cs
jnp
or
add
push
popf
and
pop
push
mov
data16
or
stos
jg
lods
xchg
sarl
adc
mul
sbb
sarl
and
add
cmpsl
ret
ficompl
add
xchg
pop
jmp
push
inc
sbbl
addr16
mov
jns
inc
lret
add
cmc
leave
lods
sti
jae
inc
dec
in
lahf
mov
cmp
test
nop
mov
mov
es
fincstp
xchg
dec
sbb
xor
sbb
dec
cmpsb
aas
push
fisubs
sub
aaa
notb
fisubrl
stos
lahf
mov
std
or
xchg
std
ret
int
push
outsl
cltd
mov
pop
cs
sbb
mov
inc
dec
sub
jecxz
das
fmuls
mov
out
mov
adc
es
mov
gs
and
iret
or
or
div
sbbl
movsb
mov
les
lods
lods
mov
add
jmp
je
or
test
outsb
mov
cmp
mov
and
mov
mov
les
and
fs
sahf
aas
push
push
mov
jmp
fsubrs
mov
push
fwait
inc
std
mov
push
cmp
ret
jo
test
cwtl
dec
mov
xchg
clc
jg
xor
push
sub
sbb
xor
js
mov
sbb
and
fstpt
and
adc
in
xlat
sub
push
movsb
andl
sti
jno
imul
cmp
xchg
lds
repnz
imulb
xor
xchg
jecxz
push
loopne
jnp
icebp
jb
sbb
test
sahf
and
dec
movsl
cltd
lock
mov
loopne
jne
ja
or
mov
or
pop
ret
jnp
lods
call
xlat
addr16
fidivrl
mov
or
inc
sbb
notl
pop
imul
sbb
and
out
mov
add
mov
cmpsl
out
xchg
mov
mov
sub
imul
addr16
push
stos
mov
jb
dec
jp
sub
pop
inc
jmp
push
aas
xchg
fistl
xchg
mov
sub
daa
sub
sbb
mov
add
frstor
shrb
in
pop
lret
jp
sbb
test
lea
sbb
cmp
loopne
repnz
dec
mov
push
add
loopne
sub
adcb
push
add
cmp
cmp
push
fldt
rorl
push
cmpsb
jne
bound
daa
fildl
imul
scas
negb
sbb
push
cmp
sub
jecxz
xchg
jbe
pusha
aam
in
jne
jl
push
loopne
sub
pop
xchg
dec
push
mov
mov
sbb
imul
rorb
or
mov
push
nop
inc
adc
sarl
push
orl
stc
mov
insl
push
pop
arpl
aam
subl
push
cmovbe
pop
add
mov
lods
mov
push
test
cmpl
icebp
mov
inc
dec
movsl
mov
aam
movsl
push
movsb
pop
call
sbb
out
loope
outsl
add
loope
ja
pop
lea
inc
mov
jl
mul
add
notl
ret
rorl
pop
scas
xchg
lret
das
mov
hlt
dec
jle
jle
or
mov
mov
and
mov
mov
jb
add
add
int3
inc
mov
into
pop
cmp
insb
das
inc
je
daa
arpl
out
jne
pusha
cmp
xor
js
xlat
push
xchg
shlb
lock
das
jne
dec
mov
xchg
mov
mov
pop
xor
and
sahf
jns
sbb
out
inc
mov
jecxz
ret
pop
and
js
rcrb
or
dec
cmpsl
push
mov
push
pop
hlt
addr16
add
mov
xchg
cmp
in
mov
dec
lahf
ljmp
dec
pop
hlt
xchg
lea
mov
cs
test
add
sbb
mov
mov
adc
pop
call
pop
int
pop
mov
iret
inc
cltd
insl
xchg
sbb
lret
ror
mov
or
ret
sahf
add
movsl
fdivl
xlat
inc
jae
jle
sbb
les
loopne
lods
test
push
mov
stc
cmp
scas
fsubrl
mov
push
fnsave
ret
mov
xorb
loope
and
fdivrl
clc
ret
lea
pop
dec
fwait
or
icebp
lods
aaa
jne
mov
jg
sarl
push
rclb
cmp
rclb
clc
imul
mov
lods
test
cmc
shlb
pop
lret
dec
shrb
or
mov
jae
lods
arpl
popa
inc
loope
test
mov
sbb
int3
or
xor
mov
pop
sbb
out
out
stos
fnstcw
xor
push
arpl
mov
loop
cmp
mov
sbb
xchg
addb
and
lods
inc
and
add
lods
pop
sbb
divb
xor
stos
iret
adc
jbe
mov
ret
jne
cmp
mov
sbb
push
pop
add
cmp
cltd
dec
mov
emms
cmc
mov
stc
add
idivl
push
pusha
scas
shl
push
pop
addr16
add
into
push
push
mov
mov
movsb
push
push
shlb
inc
nop
mov
cs
out
in
and
pop
loope
push
and
lock
pushf
cmpsl
lcall
and
enter
mov
stc
imul
push
cmpsl
xlat
and
dec
int
jmp
cmpsl
adc
mov
mov
xor
sbb
xor
lret
ficoms
pushf
inc
mull
xchg
mov
lret
insb
stos
pop
iret
out
add
sbb
jmp
xchg
sahf
ds
dec
mov
orl
pop
pusha
pop
jle
jle
sbb
inc
insb
nop
jae
insl
pop
fnstenv
fcmovb
xchg
cmp
dec
fistpll
enter
xor
insb
and
mov
fldlg2
adc
decl
popf
in
adc
out
jnp
sbb
cmc
hlt
imul
and
imul
orl
mov
fmul
bound
ret
cmp
mov
scas
sub
cmp
push
enter
add
in
sbbb
dec
mov
cmp
inc
movsb
mov
xor
pushl
xchg
fsubr
push
sub
or
mov
cmpsb
je
lret
inc
cli
mov
jnp
xor
es
mov
sbb
clc
jbe
or
jge
inc
add
sbb
mov
xor
cmp
cwtl
loope
xor
mov
add
stos
jle
es
dec
pop
or
mov
xchg
stc
push
adc
lock
shll
mov
test
cmc
movsb
fnstcw
std
out
mov
jo
add
sub
pop
sub
sub
out
stos
fidivs
movsb
jbe
fistl
movsl
insb
inc
xchg
jne
jbe
sub
out
cmp
inc
sahf
and
test
sbb
or
bound
xor
lock
int
or
gs
cwtl
push
mov
sbb
mov
mov
rclb
mov
mov
in
and
jle
mov
je
mov
inc
fstpt
push
sub
and
sub
out
aas
mov
test
popa
mov
sub
cmp
iret
xchg
cmp
scas
push
aam
loopne
jno
mov
outsl
shrb
stos
pop
fistl
ljmp
mulb
inc
int3
dec
jnp
mov
cwtl
or
out
push
mov
mov
xchg
out
add
sub
mov
out
xchg
mov
sbb
cs
dec
inc
std
test
daa
push
adc
sbb
rorb
sbb
sbb
cmc
inc
aas
sbb
and
pop
inc
in
mov
xor
xorl
adc
xchg
jmp
test
xchg
adcb
xchg
mov
cwtl
inc
pop
push
cmc
loopne
adcl
daa
lcall
or
xor
dec
and
js
jle
mov
dec
arpl
stc
inc
fnstcw
mov
jnp
scas
dec
add
push
sbb
cwtl
sub
cmp
jb
and
idivl
ret
cmp
or
call
roll
mov
pop
jbe
mov
sub
push
pop
mov
mov
mov
leave
jbe
add
je
rolb
pusha
in
insl
mov
fmull
outsl
std
mul
stos
jb
addl
xchg
mov
adcb
lcall
rcrb
inc
std
lea
sbb
dec
ficompl
mov
or
or
nop
icebp
inc
sbb
lahf
jmp
add
lods
cmpsb
mov
ljmp
sbb
loopne
inc
in
ret
out
pusha
push
pop
test
cmp
ret
sub
hlt
fisubs
cmpl
sub
cli
sub
imul
gs
stos
lock
push
or
sarb
js
push
nop
jl
xchg
fnstenv
imul
sqrtps
sbb
notb
jge
imul
add
cmp
inc
xchg
pop
mov
xor
hlt
lock
pop
cmp
or
cmp
out
sarl
std
test
clc
and
sub
mov
mov
mov
pop
aaa
mov
mulb
stc
inc
je
or
jne
aad
adc
push
adc
mov
pop
aaa
cltd
jg
add
cmp
dec
data16
leave
sub
xchg
das
push
inc
dec
pop
inc
stc
inc
sarl
jge
sbbl
xchg
push
jmp
cmp
scas
push
aas
mov
cli
cmp
andl
dec
lret
jns
sbb
or
or
mov
fcomps
xor
pop
pop
push
in
pop
lret
outsl
mov
imul
gs
loope
pop
orb
xchg
mov
inc
and
lret
mov
jbe
popf
mov
mov
mov
leave
cmp
stos
adc
call
mov
fs
jecxz
fwait
push
jmp
jo
xor
fbstp
push
ret
loope
cmpsl
mov
cld
sbbb
cmpsl
and
test
pop
pop
cli
cmp
mov
cmp
mov
jbe
orb
jo
add
insl
ret
xchg
leave
pop
add
dec
outsb
ret
mov
push
popf
dec
out
int3
scas
sarl
pusha
ret
call
gs
or
arpl
out
cltd
mov
call
xor
pop
mov
mov
xorl
fisttpll
jnp
adc
push
xchg
cmp
dec
jbe
rcrb
push
popf
lods
sahf
mov
sub
loopne
mov
jno
movsl
push
dec
xor
mov
dec
dec
cmp
push
sbb
lds
lahf
popl
jge
or
fwait
cltd
nop
jp
sub
mov
push
xor
hlt
inc
or
sub
sbb
jl
pop
adc
pop
inc
adc
or
bts
or
dec
ret
mov
push
in
stos
pop
and
lea
dec
loope
push
dec
inc
pop
xor
inc
daa
xchg
jae
shll
pop
popf
fsubrl
fs
pop
lret
xchg
add
stos
inc
nop
sbb
and
jne
fsubr
insl
repnz
xchg
ss
cmp
daa
mov
jnp
mov
adc
mov
adc
andb
jno
les
add
arpl
and
push
int
xchg
les
jo
sbb
les
cs
dec
xor
mov
loope
dec
bound
mov
cmp
repnz
push
sub
push
addr16
mov
add
and
inc
bound
in
lods
aaa
fcomip
jne
xor
or
push
in
shlb
dec
movsl
mov
shll
inc
daa
mov
orl
add
cmpsb
inc
jb
or
into
add
and
lcall
imul
dec
mov
and
shr
jns
ja
push
pop
mov
mov
and
filds
cmp
pop
and
push
inc
jp
pop
nopl
xlat
iret
add
pusha
mov
xor
mov
inc
xor
pusha
push
jl
pop
xchg
dec
mov
adc
mov
pop
or
popf
xchg
or
enter
inc
insb
ficomps
adc
sbb
bound
or
lret
jp
cmp
sbb
sahf
sbb
sub
inc
outsl
cmpsl
pop
dec
sbb
clc
sub
movl
cmp
sbb
lcall
xchg
dec
cld
sub
mov
enter
gs
jnp
das
cmp
cmp
add
lret
inc
movl
dec
mov
push
or
movsl
ret
push
lret
push
std
andl
int3
movsl
outsl
push
mov
push
or
mov
sahf
pushf
mov
insb
sub
hlt
jno
cmp
mov
mov
into
fmulp
out
call
lea
mov
rcrb
pusha
mov
in
popf
fidivrs
adc
shll
scas
je
int3
in
push
inc
ds
sub
daa
mov
ss
adc
arpl
call
shrb
pushf
mov
push
out
push
test
jge
movsb
and
mov
mov
fidivrl
inc
data16
mov
dec
mov
std
mov
xchg
repz
mov
jge
and
add
jbe
sbb
jbe
popf
inc
cwtl
pop
or
sbb
push
mov
repnz
mov
adc
aas
inc
sbb
lods
dec
sahf
loopne
sbb
popf
mul
or
mov
fwait
mov
jae
mov
jno
mov
int
sahf
js
push
shl
lahf
outsl
jl
push
mov
rcl
in
and
test
xchg
movsl
or
sbb
ds
jp
push
test
jg
mov
lods
mov
into
sbb
pop
nop
lock
lcall
inc
loope
push
jns
dec
sahf
or
iret
sub
inc
sbb
jmp
dec
gs
cmp
adc
imul
int3
inc
mov
mov
sbb
pop
int3
mov
cmp
xchg
pushf
cld
push
lds
fcmovnbe
jl
incl
jo
lea
and
jno
in
jno
or
sub
mov
loopne
push
je
mov
stos
jb
jmp
rcr
dec
test
sar
lods
fnstcw
test
pop
fwait
xor
mov
loop
andb
in
push
dec
xchg
insl
aam
fimull
ljmp
in
sahf
imul
inc
cs
lret
scas
inc
mov
mov
lret
mov
cmc
mov
cmpsl
xor
out
mov
add
push
mov
jmp
pop
pop
fisubl
ljmp
int3
jg
fnstenv
dec
gs
xchg
sti
cli
lock
lods
loope
mov
and
mov
cmp
dec
inc
mov
mov
jl
mov
mov
sbb
xchg
cmp
dec
enter
xchg
shll
jmp
mov
jne
xchg
insl
dec
cmp
fwait
cmpsl
xor
rcll
daa
mov
fstl
push
in
dec
or
rcl
jmp
pop
daa
inc
fnstenv
mov
mov
pop
cwtl
push
ret
lock
nop
adc
addr16
pusha
or
clc
adc
lods
push
outsb
test
jns
push
test
xor
lea
popf
xchg
insb
mov
cmc
filds
sub
in
or
popf
and
or
lods
add
std
fisubrl
mov
fstpl
das
xchg
push
je
sbb
jne
dec
inc
lea
ret
mov
repnz
and
js
and
cld
dec
add
cld
and
push
out
movsb
aad
adcl
icebp
stc
sti
hlt
fidivl
jnp
push
iret
out
fcomps
and
shll
and
jb
inc
or
sbb
repz
loopne
push
fwait
sub
or
mov
mov
cmp
push
add
movsl
sub
scas
mov
add
mov
dec
lcall
mov
push
pop
jae
fimull
and
shl
mov
mov
cld
xor
lock
lcall
das
mov
add
outsb
cwtl
aad
les
sbb
lret
push
fsubl
push
pop
leave
inc
sbb
inc
sbb
lahf
stos
pop
andb
es
sub
inc
scas
into
and
lret
jnp
iret
xor
rol
mov
adc
dec
jae
lcall
in
sbbb
jno
je
jp
insb
lret
stos
push
jns
push
xchg
ret
xchg
movsb
sbb
and
out
jg
popf
rcrl
leave
out
or
dec
daa
dec
adcb
and
and
xorb
icebp
jg
and
adc
cli
xchg
xor
push
adc
mov
xor
jne
lret
out
push
mov
fsubrl
sub
fs
xchg
cs
and
xor
add
loope
mov
pop
pop
mov
insb
and
mov
popf
mov
sahf
jns
mov
test
mov
ret
cmpsl
fstl
outsl
adc
jmp
cmp
mov
xor
mov
dec
xlat
aad
push
bswap
stc
lret
lret
in
mov
pop
nop
push
pop
mov
mov
push
inc
jb
xor
pop
push
pop
adcl
jo
ds
cmp
lret
mov
int
addr16
sbb
ds
pop
mov
clc
lods
sub
cmp
mov
cmp
xchg
cmp
xor
test
rcr
ja
push
add
mov
jg
rclb
dec
mov
dec
mov
hlt
pusha
cld
sti
mov
xchg
sub
mov
xchg
in
pop
xchg
push
mov
imul
out
and
jb
push
sub
fildl
int
sar
loopne
sbb
sub
aad
add
idivb
xor
movsl
push
dec
mov
int
pusha
pop
aam
pop
je
jecxz
std
outsb
outsb
iret
jecxz
addr16
into
push
stos
sub
and
cmc
jae
dec
jne
negb
pop
icebp
cmp
mov
push
mul
je
in
cmp
xchg
push
jecxz,pn
adc
popa
xchg
test
jmp
lds
dec
vpsllw
aas
lret
inc
mov
out
stc
fmulp
push
push
les
pop
cmpsb
jne
in
and
mov
push
jb
fucomi
mov
scas
inc
dec
sbb
sahf
xlat
out
dec
mov
pop
hlt
leave
mov
add
cmpsb
inc
mov
test
xchg
fldenv
gs
insl
lods
out
inc
lea
pop
fwait
and
js
pusha
mov
xor
add
jle
and
mov
mov
cmpsb
inc
fldt
xor
sar
dec
dec
jg
test
xlat
aam
inc
dec
cwtl
outsb
push
or
inc
cmc
and
sti
or
xchg
inc
xor
adc
repnz
aaa
stos
mov
and
add
idivl
scas
push
mov
xchg
mov
pop
jl
ljmp
mov
stos
xor
add
cltd
add
call
nop
iret
inc
pop
adc
nop
pop
int3
jmp
mov
mov
sar
sub
outsb
bound
sahf
mov
adc
iret
jbe
dec
in
mov
mov
insb
call
sti
and
repnz
or
ss
sub
cs
cltd
js
jp
outsl
insl
mov
aas
mov
insb
mov
ret
dec
or
cmc
jne
adc
pushf
jae
xor
or
xchg
or
mov
bound
cmp
mov
ja
mov
or
lahf
cli
call
sbb
ret
cmp
sbb
cmc
movsl
cmpsb
cmp
mov
sbb
mov
mov
je
ss
sbb
cld
sbb
cmp
mov
jo
mov
rcrl
je
push
leave
icebp
xchg
cmpsl
fs
cmc
or
pop
fstpl
stos
cld
mov
jo
or
stc
sub
gs
leave
mov
add
inc
dec
fisubl
cmc
out
testw
movsl
sub
stos
push
mov
mov
pop
and
dec
sahf
pop
out
mov
aam
mov
xor
mov
lds
sub
outsl
popf
addr16
lret
gs
and
pushf
enter
mov
pushf
push
push
ret
mov
or
fdivl
dec
or
add
dec
in
sub
adcb
mov
gs
sub
rorb
jne
or
adc
push
in
fistpll
mov
test
in
or
dec
mov
mov
inc
push
xor
or
adc
ficompl
mov
xchg
pop
add
fxch
pop
or
jnp
es
mov
aam
adc
ja
dec
cmp
sbb
push
jns
xchg
das
nop
mov
mov
mov
imul
lahf
inc
lods
popa
or
mov
fst
jne
xchg
repnz
push
icebp
xor
pop
aaa
movsb
aam
testl
pusha
aad
inc
loope
mov
xchg
hlt
sbb
push
cmp
xor
fcomi
shlb
xor
mov
pop
xchg
fstpl
cs
push
bound
xor
sbb
add
push
jno
or
stos
mov
pop
jne,pt
add
dec
into
ljmp
lods
pop
xlat
movsl
insb
scas
fwait
adc
xor
enter
je
inc
inc
add
fisttpl
push
pop
xlat
ficoml
idivl
pusha
push
jns
fstpl
jecxz
movsb
mov
mov
mov
mov
sub
insb
repnz
test
ljmp
fdivl
cwtl
sub
fsubrl
pop
outsl
jae
nop
inc
int3
xor
leave
test
leave
iret
shlb
lcall
dec
add
imul
fwait
addr16
mov
jnp
pop
nop
es
lret
xor
sahf
mov
cmp
aam
adc
cmp
loopne
lock
and
xchg
or
cld
pop
mov
cmc
push
les
sti
popf
lds
cltd
push
sbb
dec
cld
xchg
cwtl
fistps
add
lret
push
cmp
xor
shrb
je
repz
jb
pop
data16
fs
mov
dec
xorb
cmp
cld
shrl
pop
xchg
test
and
inc
or
lods
mov
cmpsl
jnp
pusha
pop
mov
mov
xor
mov
test
roll
mov
hlt
pop
loopne
andb
xchg
adc
into
out
insb
and
dec
in
shll
dec
shrb
push
lahf
ret
add
cmp
mov
xchg
xchg
mov
mov
inc
insl
push
and
fwait
push
xchg
sub
inc
das
test
xor
fxch
jmp
test
add
sbb
mov
cmpsb
notb
adc
xchg
push
xor
imul
jecxz
icebp
repnz
cltd
pop
add
dec
mov
xchg
sub
push
test
jmp
jmp
push
addr16
call
xor
and
mov
jns
jnp
scas
dec
imul
inc
test
jp
add
ss
loopne
fstpt
pop
adcl
or
dec
in
cmp
jmp
cli
test
jecxz
mov
rcl
add
lds
xor
sub
jmp
jbe
int3
lea
xor
out
daa
lea
push
mov
shrl
imul
adc
add
lret
dec
out
xlat
sbb
fisubrs
shrl
out
cs
jae
pop
lret
outsb
test
jo
aam
repnz
insl
fidivrs
xchg
inc
xchg
es
sarb
jbe
sbb
call
or
enter
push
jle
out
jecxz
mov
fiadds
hlt
outsl
cmpl
movsl
inc
adc
pop
add
jno
inc
sbb
cs
mov
push
int3
ja
add
pop
adc
ljmp
out
das
dec
cmpsb
cmp
stos
mov
fisttpl
lret
add
mov
jb
rorl
cwtl
outsl
pop
pop
inc
xor
xor
daa
lahf
sbb
and
pop
pop
js
inc
ljmp
mov
in
mov
pop
mov
mov
es
lret
lock
push
fldt
xchg
mov
mov
paddusw
xchg
adc
xchg
pop
inc
outsb
jmp
sti
mov
or
jae
push
xor
mov
mov
jl
fisttpll
sub
push
test
jnp
inc
sbbl
mov
out
add
adc
add
cli
or
pop
in
cmp
or
hlt
test
addr16
outsb
sbb
nop
mov
sti
ds
pop
cmpsb
pop
add
mov
adc
rcrl
cmp
insb
mov
mov
mov
or
add
cs
mov
in
gs
adc
sbb
sti
das
jb
nop
ret
outsb
std
pop
adc
nop
mov
mov
nop
iret
adc
dec
fsubrs
and
xchg
pushf
sti
sbb
and
jo
xchg
in
lods
or
icebp
lret
cmp
sti
repz
push
dec
in
pop
jns
insl
mov
adc
jl
push
flds
test
cmpsb
push
push
add
repnz
loop
repnz
xchg
xor
pop
xchg
out
pop
scas
sti
sbb
inc
ja
das
push
rclb
mov
adc
xorb
mov
mov
or
jns
hlt
pop
test
ss
sbb
hlt
jg
mov
xor
xor
cmpsb
and
push
mov
push
jne
and
xchg
inc
push
push
popl
or
inc
push
xor
push
mov
insl
jae
mov
pop
xchg
decl
jp
pop
hlt
mov
cmc
movl
clc
test
sub
cmp
jno
lcall
cmp
and
add
cmp
aaa
out
lahf
cmp
xchg
push
push
data16
xor
lods
inc
mov
or
cli
jl
dec
dec
iret
mov
popf
insb
jne
pop
mov
add
jmp
jns
cld
cmp
mov
push
cld
in
sbb
lret
push
aad
nop
jl
std
ret
testl
and
push
add
or
pop
inc
xor
clc
push
adc
enter
xor
andl
jmp
daa
dec
jns
or
and
jecxz
sarb
les
inc
xor
sub
push
add
popa
xlat
add
inc
clc
add
testb
outsl
mov
repz
add
sbb
xor
xor
sub
adc
jmp
push
mov
or
int3
inc
mov
push
push
lods
loope
inc
dec
lahf
pop
cmp
pop
jbe
cmp
xchg
push
outsl
mov
mov
movsl
jge
xchg
sub
adc
dec
idivb
cli
xor
sbb
jae
mov
cmpsl
pop
sub
pop
sub
push
xlat
fisttpl
xchg
sbb
nop
push
mov
mov
cwtl
fldt
in
and
es
or
sar
cltd
sbb
loop
mov
lcall
iret
insl
gs
dec
int3
xlat
in
push
clc
adc
out
repnz
mov
lods
out
addl
mov
dec
jg
loope
xor
ljmp
movsl
xor
hlt
sbb
or
fs
and
mov
inc
inc
aaa
andl
pop
fcoml
mov
enter
ljmp
sbb
and
rcr
inc
cmp
cli
cwtl
sbbl
sub
enter
cli
out
mov
xor
faddl
testb
loopne
leave
adc
fdivl
imull
jbe
adc
jecxz
mov
std
and
fldt
jo
dec
jae
shrb
arpl
imull
cmp
xchg
sbb
call
and
xchg
or
sbb
jae
jge
jns
jl
mov
out
push
mov
cmp
xchg
cmp
cli
movsl
int
and
sub
add
mov
test
sbb
pop
cmp
dec
ja
mov
jle
lock
adc
in
sub
mov
pop
rcrb
mov
jp
dec
mov
push
add
fdivs
sub
in
inc
mov
mov
mov
mov
cmp
jae
pop
out
fdivs
cli
decb
loop
dec
pop
sub
out
xor
daa
stc
mov
adcl
repz
and
std
into
and
fwait
iret
push
fistpll
push
cmpsl
dec
rorb
jl
data16
jns
mov
inc
imul
jmp
xchg
fldt
pop
aaa
lret
jb
test
movsl
xchg
lods
jbe
push
sti
mov
pop
mov
shrb
or
std
movsb
pop
mov
jp
adc
sub
dec
mov
jecxz
mov
outsl
aas
stc
int
shll
sbb
jle
cs
aaa
test
xchg
adc
cmp
addl
mov
mov
mov
pop
mov
jmp
mov
ljmp
data16
aam
addr16
push
cmp
dec
cli
jno
bound
xor
sub
arpl
dec
sbb
cmp
jle
cmp
xor
out
es
xlat
rclb
out
jb
adc
arpl
or
dec
inc
das
cmp
jnp
jg
and
mov
cmpsl
lods
add
mov
pop
jp
cmc
adc
inc
and
int
push
mov
stos
inc
repnz
cmc
pushf
decl
lds
imul
rclb
xor
sbb
xorb
jo,pn
mov
fisttps
pop
mov
push
movsl
lods
pop
lods
shlb
lahf
loopne
imul
hlt
std
fsubrs
or
nop
mov
sub
push
lahf
adc
jl
out
mov
mov
dec
cmpsl
ret
cmp
jmp
mov
mov
hlt
push
out
mov
int
mov
js
pop
xchg
sub
jnp
inc
jno
push
clc
test
outsl
and
mov
xchg
lds
mov
xor
and
sub
jbe
push
lods
nop
xor
cmp
in
test
jb
mov
popa
push
mov
adc
jecxz
cmpsl
fcompl
jl
mov
or
mov
push
pop
into
lret
hlt
xor
lret
xor
push
mov
add
adc
imul
jnp
pop
mov
lods
stc
xchg
sub
lods
test
cmp
arpl
test
sub
clc
pop
mov
mov
jnp
mov
pop
xor
fisubrl
mov
jmp
xchg
sub
stc
adc
loop
in
ljmp
sub
add
push
sbb
adc
je
shr
xor
add
ret
xchg
dec
mov
test
mov
arpl
or
orl
xchg
mov
aad
aas
mov
inc
out
mov
outsb
xchg
repz
data16
addr16
xchg
cmp
lea
dec
pop
lds
lret
iret
mov
xchg
fnstsw
sub
or
mov
pusha
shrl
in
jl
adc
jp
jb
mov
and
fsubr
loop
pop
adc
scas
mov
pop
sbb
mov
jae
and
pop
cmpsl
out
decb
mov
out
outsb
sbb
or
sbb
xor
mov
inc
imul
adc
in
lahf
imul
pop
in
pushf
in
out
int
in
jno
push
test
jnp
cmc
outsl
mov
sub
nop
pop
add
aad
ret
arpl
inc
test
sub
roll
sarb
pop
xchg
mov
jmp
mov
or
insb
das
imul
push
xchg
incb
out
or
mov
dec
jecxz
push
lea
pop
aaa
cmc
jb
push
mov
push
call
in
addl
mov
jmp
jae
enter
mov
or
lret
cli
punpckhbw
xchg
push
sbb
jne
pop
les
cmp
rclb
dec
dec
xchg
xchg
adc
sbb
lcall
scas
cld
mov
inc
movb
pop
jecxz
fstpt
xchg
lods
adc
daa
mov
dec
ds
je
and
insl
cmpsb
dec
mov
into
loope
jo
and
ss
cmp
adc
nop
lret
push
repz
movsl
stc
or
call
push
pause
in
outsb
lret
popa
push
or
adc
inc
add
loopne
cmc
cmp
out
shlb
cli
into
sahf
loope
andl
stos
imul
in
aam
mov
or
rolb
sub
lcall
lret
fnstenv
xor
sub
cmp
pop
outsb
jecxz
adc
or
mov
push
lret
orb
inc
in
out
xchg
lret
mov
sub
mov
fiadds
insb
into
xchg
out
jno
outsl
lods
fidivrs
aaa
add
mov
das
ss
inc
fsubrs
jno
inc
insl
fcomip
aaa
push
shlb
fisubl
loopne
pusha
jo
adc
cmp
pop
fdivl
popa
push
int
pop
push
mov
xchg
xor
xchg
arpl
jbe
jne
adc
pop
hlt
lods
daa
push
mov
popa
mov
sti
cli
int
sti
rcrb
jb
cmpl
cwtl
das
stos
lahf
lods
gs
inc
je
cmpsb
data16
lret
out
dec
lahf
lcall
sbb
testb
sarl
rorb
push
pop
push
and
add
dec
scas
or
or
aaa
test
repnz
push
aaa
and
push
sub
pop
hlt
cwtl
aad
loopne
arpl
mov
cmp
cmpsb
pushf
idivb
cmpsl
fistps
cs
call
xor
loop
iret
xor
andb
mov
pop
xor
lret
pop
sbb
adc
cmp
sub
gs
sbb
subb
xchg
fwait
cmp
out
adc
inc
clc
mov
xchg
imulb
jno
mov
fisttpll
cmp
mov
aam
pusha
lahf
mov
jecxz
xchg
test
mov
mov
ret
sti
cld
push
push
pop
push
xchg
ss
ljmp
xchg
pop
mov
mov
inc
mov
push
ficompl
mov
into
xchg
stos
lahf
std
adc
in
sub
test
mov
call
mov
mov
stos
sysret
loopne
rcll
lahf
or
jl
in
test
iret
xchg
mov
and
jmp
pop
mov
xchg
repz
stc
cmpsb
pop
push
and
mov
and
pusha
jg
sbb
test
inc
js
fsts
movsb
jp
add
mov
mov
in
adc
or
movsl
pop
adc
jbe
xchg
mov
mov
push
adc
and
xlat
cmp
icebp
xchg
mov
adc
inc
aad
loope
sbb
idivl
sub
or
popf
sub
cmpsl
xorl
notb
in
inc
call
orl
fwait
cwtl
iret
sub
adc
cli
bnd
mov
jae
pop
outsb
out
pop
pop
or
jne
aaa
aas
fdivs
push
scas
inc
nop
xchg
mov
pop
aam
je
mov
cmc
jb
scas
cmp
push
pop
ret
aam
pusha
mov
mov
cmp
jl
and
pop
pop
dec
mov
mov
js
xlat
aad
outsl
xor
stc
push
or
outsl
sbb
cwtl
stos
cwtl
dec
ja
nop
mov
imul
loopne
jno
cwtl
lds
mov
cmp
and
adcl
adc
stos
mov
sbb
faddp
leave
add
mov
sub
sbb
xchg
leave
or
jno
adc
xor
fsts
sbb
sti
movsl
clc
mov
cmp
out
inc
ja
mov
jmp
jle
jl
push
inc
push
inc
orb
or
pop
add
cmp
int
mov
inc
ds
adc
xor
xor
mov
les
sub
call
popf
xchg
jno
xor
bound
and
cmpsb
sahf
mov
cmpsb
xchg
dec
mov
adc
stos
cmpsb
inc
adc
add
ja
mov
fucomip
cs
stc
and
inc
xor
or
sub
push
xor
lret
inc
rol
cli
popa
fiadds
mov
cmc
out
mov
pushf
xchg
add
iret
lods
daa
xor
adc
out
push
stos
dec
mov
int3
sub
fldenv
in
test
aad
sbb
int
xlat
popf
jmp
mov
mov
and
int
aad
mov
sbb
out
jns
aam
mov
fdivs
fnstenv
jb
je
mov
stos
das
push
ja
sub
imul
ds
ja
addr16
xchg
adc
outsb
aad
sbb
xchg
xlat
mov
xor
dec
mov
jae
jg
es
adc
lahf
ficompl
mov
mov
mov
or
mov
repz
xor
andl
stos
out
push
or
in
inc
xchg
dec
dec
icebp
xchg
sbb
pop
mov
cmp
jns
xorl
cmp
stos
and
sti
lock
sub
clc
sub
push
mov
fiadds
fldt
xchg
in
push
dec
fidivl
xchg
test
ret
fmulp
cmp
into
int3
sub
mov
mov
pop
mov
pop
sub
lea
and
push
shr
and
mov
sub
aad
mov
jecxz
and
cmp
movsl
nop
repz
jp
add
push
jne
lret
add
dec
inc
or
jp
push
or
xor
dec
dec
pop
jnp
push
je
mov
jbe
jg
out
add
pop
jge
mov
jnp
inc
mov
push
cmpsl
ljmp
cwtl
mov
cmp
jne
jg
adc
jmp
sbb
lcall
test
les
push
xchg
insl
fwait
scas
mov
ret
cmp
or
inc
imul
aam
mov
mov
mov
clc
out
push
push
test
sti
stos
pop
push
or
test
mov
imul
in
cmp
push
mov
aad
jne
xor
pusha
sub
push
add
ds
sbb
cltd
adc
cmc
xchg
pop
jle
movsb
ficoms
adc
sahf
push
movsl
sahf
lods
push
or
mov
dec
jge
fists
inc
sbb
and
bt
ret
or
jp
xchg
sbb
push
xchg
aas
mov
jns
xor
popa
jbe
cld
dec
test
scas
or
add
das
inc
das
pop
fdivrp
or
lea
negb
stc
jg
aas
cld
test
xchg
cmp
scas
les
mov
jno
shll
mov
or
and
stc
lods
loop
mov
sbb
mulb
mov
cmp
mov
sbb
mov
push
sbb
inc
pop
orb
xchg
clc
xor
ret
sahf
mov
gs
aad
ja
pxor
xchg
sahf
fstl
jb
sahf
lahf
jp
pop
sbb
sub
mov
fsubl
mov
repnz
int3
inc
filds
jnp
loopne
daa
insb
and
repnz
adc
pop
sub
mov
push
dec
inc
jnp
scas
les
orl
scas
fistpl
dec
lret
loope
fcoms
loop
mov
add
adc
push
stos
mov
mov
mov
fwait
lcall
dec
in
dec
and
leave
push
mov
mov
mov
pop
jmp
xor
divl
gs
pop
cmp
mov
push
cmpsb
or
lret
les
jbe
hlt
xchg
jnp
pop
adc
mov
mov
sub
push
cmp
je
les
je
stc
in
cmp
sub
xchg
sub
mov
add
dec
shlb
fists
push
push
inc
mov
mov
push
fs
inc
sub
cmpsl
std
or
out
jno
nop
pop
add
dec
jg
mov
into
push
ret
mov
mov
dec
jno
pop
pop
mov
out
scas
test
jb
jae
cli
pop
out
and
fdivp
lods
sbb
sub
inc
sub
iret
inc
loope
int
adc
pusha
loope
inc
inc
inc
pop
add
movsl
xchg
pop
scas
rcrl
push
push
dec
push
lea
push
mov
int3
jp
xchg
arpl
lcall
pop
push
cmp
jmp
popf
mov
fcoms
mov
arpl
shl
cmp
enter
cmp
add
add
cli
add
xor
std
or
jno
jnp
jmp
mov
add
leave
pushl
mov
xchg
rcll
dec
ljmp
daa
sbb
sbb
cmp
cmpsb
jnp
stos
rcrl
xchg
leave
mov
pop
cmpsl
cmp
fldenv
fists
fsubl
sub
push
sub
iret
rolb
mov
aaa
sbb
jns
jl
jne
push
mov
addl
inc
loop
aad
add
scas
enter
dec
xchg
pop
lcall
lahf
pop
rol
jnp
call
mov
das
stos
cmpsl
cmp
out
into
xchg
cmp
dec
ss
sbb
and
into
test
pop
cmp
mov
fnstcw
cwtl
fsts
mov
inc
push
add
sub
inc
mov
in
rclb
in
dec
mov
fstl
sub
sti
popf
inc
ljmp
lahf
in
push
je
out
sahf
sub
add
or
mov
lahf
mov
loopne
fnstcw
pop
lcall
and
nop
bound
imull
jecxz
push
scas
lret
js
mov
sahf
out
mov
fstpt
and
add
inc
push
push
sbb
repnz
adc
in
jl
push
aam
stos
and
cmpsb
cmpl
negl
insl
fucom
fidivrl
cmp
cli
std
mov
aad
xchg
out
arpl
fldt
outsl
pop
xchg
cmp
dec
mov
add
pushf
mov
mov
movsb
cmp
sbbb
add
mov
push
lcall
rorl
popl
pop
adc
push
imul
xor
ja
inc
push
inc
mov
or
popf
jecxz
adc
andl
adc
loope
ljmp
sub
or
mov
jl
mov
pop
cmc
mov
jmp
xchg
in
xchg
loop
and
xlat
push
cmp
lahf
stc
fbstp
add
sub
insb
shrl
ret
mov
sub
addr16
je
lods
inc
fldz
insb
adc
inc
ljmp
mov
gs
test
xchg
jne
incl
rcr
sub
mov
lock
dec
or
mul
push
divl
jbe
cmp
js
cmp
jg
inc
dec
push
pop
lods
and
icebp
or
push
jnp
iret
cmp
cmc
jnp
sbb
ds
xchg
icebp
test
cld
jae
fmuls
and
ss
xor
aaa
cmp
into
fwait
in
insl
sbbb
mov
jne
and
add
imul
xchg
imul
out
into
shl
add
or
xchg
cmp
stos
sub
outsl
jp
dec
fists
fdivrl
xchg
jbe
out
adc
ficoms
or
and
xchg
fs
xchg
insl
imulb
sahf
mov
dec
fcompl
mov
gs
dec
xor
fcoms
or
xor
xor
imul
aad
les
fisttpll
xchg
inc
mov
idivb
out
aad
sahf
ss
push
cli
jp
or
mov
or
mov
inc
and
outsb
rdpmc
stc
sub
sub
xorl
and
dec
and
push
dec
or
sbb
xlat
sub
pusha
xor
mov
mov
lds
xor
pop
or
mov
push
movsb
pop
lcall
rorb
popf
jle
mov
stc
stos
pop
inc
xchg
mov
mov
call
fnstcw
and
mov
loop
mov
push
xchg
sbb
shrb
cmp
ret
rclb
xchg
pusha
popa
jmp
sbb
or
faddl
dec
ds
add
or
push
roll
fsubl
aaa
rolb
and
js
push
push
mov
mov
mov
push
arpl
sbb
cmp
cmp
iret
dec
xchg
js
mov
lret
pop
pop
or
movsb
cli
aaa
cmpsl
sahf
and
sub
or
stc
mov
xlat
jg
jecxz
fwait
xchg
je
movsl
add
movsb
fucom
mov
mov
stos
stos
mov
mov
xlat
leave
xchg
and
jnp
dec
push
out
and
adc
lock
adc
test
fcmovbe
cli
sub
test
xchg
negl
jae
mov
mov
jg
daa
insl
test
jg
inc
xor
or
jno
sahf
jb
adc
mov
mov
add
jle
sub
mov
sbb
popf
xor
and
inc
jl
ljmp
loope
push
into
nop
out
addb
pop
idivl
mov
mov
and
pop
setne
stc
out
popf
aaa
mov
cmp
or
or
cld
outsl
in
jo
inc
dec
in
popa
in
mov
xor
xchg
in
movsb
cmp
cmp
add
pop
scas
cs
pushf
in
dec
push
sbb
and
jb
loop
push
and
or
out
repnz
add
push
in
inc
aaa
xchg
sar
mov
hlt
lock
movsl
js
ja
cmp
mov
push
xchg
inc
fsub
xor
jle
sti
stos
test
mov
ret
mov
stc
shlb
push
mov
jle
shlb
cmp
cmp
dec
mov
push
lea
mov
push
sub
stc
nop
add
mul
cmpsl
jae
andl
fldt
push
aaa
jb
cmp
adc
push
adc
mov
sbb
jecxz
mov
sbb
cmp
stos
cmp
push
adc
jno
cmp
xchg
arpl
movsl
rolb
fldt
jbe
out
ljmp
fnstsw
mov
ror
lea
mov
std
add
jmp
dec
stos
insl
std
arpl
push
mov
sub
or
loopne
jl
cs
pop
loopne
push
ljmp
add
sub
stc
lock
movsl
xchg
inc
mov
outsl
es
jecxz
and
xor
pop
clc
push
lea
stc
xchg
cld
loopne
hlt
out
mov
mov
fisttps
mov
or
mov
cmp
mov
push
rclb
adc
jbe
jb
xor
stos
mov
inc
pop
mov
xor
mov
int3
loope
lret
lock
xor
cwtl
rolb
jl
pop
cmpsl
xchg
inc
test
jg
imul
imul
and
pop
rcrl
sarl
and
and
loop
adc
mov
mov
rol
xchg
inc
sub
dec
and
xchg
adc
ljmp
std
je
insl
sbb
mov
fimull
ljmp
mov
lds
pop
xchg
ljmp
pop
jnp
pop
and
jne
aaa
jns
inc
adc
pop
sub
jo
pop
mov
sarl
xchg
pop
sbb
mov
test
cmp
mov
mov
in
sub
cmp
repz
nop
fcoml
add
sahf
inc
pop
movsl
inc
inc
stos
or
push
movsb
mov
cli
cmp
repz
repz
lret
ret
mov
pop
cmp
dec
setb
lods
jg
inc
aam
das
and
aaa
fs
ret
lret
out
cmp
mov
cmpsl
and
test
cmp
mov
and
jae
inc
cmp
push
jne
inc
loopne
dec
lret
iret
sbb
fcoms
and
lcall
testl
loopne
inc
xchg
into
cmp
xchg
xchg
adcb
cmpsb
loope
cmp
sub
insl
pop
mov
and
mov
imul
lock
data16
ds
mov
sbb
gs
sbb
mov
daa
scas
cmpsl
aaa
mov
fdivs
rolb
cmpb
push
or
js
adc
sbb
add
push
dec
je
lds
iret
xchg
in
stos
jb
add
cmp
pop
ret
outsb
scas
mov
sti
sbb
fbld
sbb
mov
out
push
jns
add
dec
sbbl
pop
cmp
mov
sbb
jne
outsb
adc
mov
fwait
sbbb
fcmovbe
scas
push
stos
out
loope
ljmp
lock
or
rdmsr
and
jmp
bound
jns
in
imul
or
and
mov
mov
inc
or
add
dec
sub
or
jne
jne
faddp
mov
and
mov
push
inc
and
fstpl
push
mov
sarb
jle
pushf
jge
or
mov
inc
fcomps
movsl
ficoml
mov
dec
jbe
jns
pop
sub
mov
out
insl
mov
pop
xor
jle
xchg
cmp
push
imul
scas
popa
add
stc
mov
leave
jbe
dec
adc
and
xchg
xor
movsl
icebp
inc
or
movsb
stos
jecxz
jns
and
xchg
mov
rcl
test
or
sbb
mov
inc
or
loop
popa
sub
scas
shlb
inc
push
mov
mov
add
cmp
mov
mov
jp
adc
or
mull
mov
aad
call
lcall
jns
add
test
outsb
and
popf
lcall
mov
popa
and
or
xchg
in
je
imul
clc
dec
sti
dec
mov
inc
mov
imul
mov
dec
ficoml
out
inc
inc
add
repz
sbbl
ret
insl
cmpsb
inc
pop
xchg
add
sub
movsl
in
popa
aaa
add
jle
adc
or
mov
test
ret
pop
imul
jecxz
aad
call
inc
inc
cld
inc
lods
sbb
push
jmp
cmp
in
pop
and
xchg
push
and
pop
cwtl
inc
push
fld
negl
mov
ret
adc
divl
inc
xchg
push
mulb
cwtl
fcmovu
out
popf
mov
imul
fstl
adcb
pop
shl
test
stos
clc
mov
fisubrl
daa
mov
test
pop
std
push
in
daa
pop
cmp
adc
and
mov
loop
movsb
rcrb
ret
out
mov
xchg
sbb
pop
pop
dec
clc
adc
push
ljmp
shl
add
in
les
pop
outsl
movsl
ss
pop
popa
fstps
insb
addl
adc
push
out
aas
lds
pop
mov
jnp
in
shlb
sbb
pop
out
pop
int3
fbstp
stos
mov
sahf
out
scas
jb
adc
in
in
jns
imul
cmp
jecxz
mov
cmpsl
ss
cmpsl
jno
pop
lret
mov
mov
mov
jl
shll
imul
cmp
cmp
loopne
lds
cmpsl
jle
lods
xchg
cs
cmp
inc
mov
jne
mov
xchg
rol
dec
je
movsb
mov
bound
adc
xchg
pushf
or
dec
cmpsl
loop
mov
xchg
mov
mov
jp
push
jp
subb
or
shrb
inc
lret
mov
dec
add
in
movsb
je
mov
fldcw
and
cld
sub
fdivs
sarb
sub
mov
jmp
lods
loope
push
add
out
insl
stc
mov
fisubrl
bound
add
shlb
mov
lock
lea
jae
es
push
ljmp
lret
mov
jnp
in
sub
out
xor
cmp
pop
adc
bound
inc
rcr
fiadds
push
jp
mov
aad
hlt
pop
push
enter
dec
int
test
aad
leave
test
lea
movsb
jmp
jg
into
jge
loop
adc
adc
and
les
xor
inc
xchg
daa
add
jge
imul
mov
dec
outsb
mov
inc
cs
mov
sbb
in
sbb
or
aas
stc
das
xlat
sti
nop
xor
jae
ds
stos
lods
inc
popa
push
scas
lret
mov
sbb
popa
pop
pop
mov
scas
out
hlt
pushf
and
and
in
mov
stos
xor
scas
mov
mov
xchg
and
icebp
int3
sub
or
mov
ud0
jb
or
cs
mov
xchg
mov
imul
adc
mov
mov
es
lock
cmpsl
add
test
daa
dec
arpl
bound
mov
mov
repz
xor
xchg
ja
iret
adc
dec
cmp
ja
sbb
add
xor
push
stos
test
mov
aad
or
inc
lahf
mov
fidivl
mov
jnp
ret
pop
xor
aaa
hlt
es
jmp
push
rorl
push
inc
or
lods
jl
jno
dec
sub
pop
ret
insl
clc
push
sbb
stos
xor
and
add
nop
repz
dec
cli
fiadds
fcompl
pop
pop
push
inc
arpl
or
add
mov
sbb
push
jne
dec
out
push
in
mov
push
sub
mov
ljmp
cld
jo
jo
aad
sub
inc
push
repz
shll
shlb
in
repnz
fs
xchg
pop
dec
imul
mov
pop
stos
push
out
lcall
pop
push
mov
xor
cmp
fisubs
adc
pop
push
loop
or
test
push
push
ds
movsl
out
es
mov
int
cmpsl
push
les
sub
aas
push
sbb
mov
loopne
sbb
cmp
sub
or
pop
mov
aaa
mov
pop
xchg
push
aad
test
add
shll
lods
in
test
lods
pop
outsl
cmp
sti
bound
movsb
sahf
jns
inc
push
mov
pop
adc
mov
push
mov
pop
popa
gs
fs
sbb
clc
and
cmp
sub
test
lds
mov
push
sbb
mov
aam
fwait
cwtl
fidivrs
stc
jnp
out
ljmp
mov
mov
sahf
stc
pop
loope
pop
xchg
inc
outsb
push
fdiv
xchg
push
decb
and
stos
mov
lds
fs
xor
inc
jle
jns
dec
or
imul
in
in
inc
in
pushf
stos
iret
dec
mov
leave
cltd
movsl
mov
fsubl
mov
cltd
fdivrl
sbb
and
popf
ljmp
loopne
enter
loopne
popf
mov
pop
cwtl
in
xchg
cltd
data16
cmpsb
add
icebp
clc
and
mov
sbbl
jno
adc
ds
mov
stos
mov
inc
jbe
subl
or
pop
mov
jecxz
xor
pop
mov
in
ret
dec
mov
jo
xor
mov
loop
sbbb
dec
dec
pop
cmp
fmulp
xchg
sbb
adc
mov
and
push
inc
cmp
mov
outsb
xchg
cmp
movsl
inc
loope
clc
sarl
jb
jb
loopne
xor
call
pop
hlt
daa
push
mov
fs
dec
xor
mov
ljmp
cwtl
inc
clc
decb
aas
adc
mov
cmp
arpl
lock
jnp
lock
cmp
mov
cmp
jae
push
xchg
pushf
loopne
fstpt
push
and
mov
lahf
divl
sarb
or
push
lret
sub
out
outsl
and
dec
lret
test
xchg
lods
add
lods
jge
add
cmp
jno
das
int
data16
jno
in
sub
inc
push
sub
bound
dec
inc
leave
jne
mov
mov
int
lahf
inc
dec
pop
movbe
cmpsb
mov
adc
clc
add
cmp
fistl
cltd
sarl
cwtl
jmp
rcrb
or
leave
into
outsl
pop
pop
stos
in
xchg
enter
dec
or
mov
push
and
push
dec
jle
std
push
lret
insb
mov
xchg
xchg
jnp
mov
jns
lds
jl
addr16
ret
insb
xchg
dec
mov
insl
cltd
xor
mov
scas
xlat
pop
push
xchg
pop
add
jae
jbe
test
adc
mov
stc
add
aad
lods
xor
js
cmp
test
popa
pop
mov
aam
pop
xor
sbb
leave
sbb
dec
cmp
xlat
invd
jge
push
jge
push
dec
pop
int3
or
cmp
push
dec
sbb
loop
xchg
jae
sub
jne
in
adc
cmp
push
out
cld
loop
inc
pop
test
jns
ror
inc
adc
mov
and
loop
fnsave
pop
add
das
jle
insb
jno
stos
int3
push
add
xchg
fiadds
push
out
cmc
inc
push
aad
adc
or
push
add
ljmp
iret
and
sub
and
mov
int
mov
mov
int3
adc
jb
negb
int
adc
repz
xor
les
gs
push
jno
sub
add
lcall
mov
aam
pop
into
xchg
mov
imul
cmc
add
push
insb
adc
dec
rolb
lea
jecxz
cmp
pop
sub
push
sti
ds
jg
add
xchg
loope
and
fstpt
pop
out
fucomi
sbb
lea
xchg
pop
pop
mov
fdivrs
test
adc
adc
xchg
fwait
mov
test
jecxz
sbb
jae
add
mov
xchg
addr16
clc
jecxz
dec
xor
xor
sbb
psubsw
outsb
inc
out
or
out
dec
inc
aas
xchg
mov
pop
mov
inc
leave
mov
std
mov
mov
pushf
loope
adc
mov
lcall
mov
add
xor
rorb
mov
shrl
popf
or
mov
iret
pop
mov
push
mov
into
mov
fwait
sub
pop
push
pop
pop
add
repz
mov
mov
test
popf
fdivrs
pusha
gs
adc
setb
inc
iret
addr16
loopne
jg
sub
scas
mov
xor
aas
movsl
jp
in
stos
mov
enter
lcall
int
ds
xlat
data16
out
je
out
mov
sbb
data16
sbb
sub
xchg
adcl
pop
roll
sub
jns
mov
cmpsb
sbb
nop
lret
daa
in
lahf
xchg
mov
sbb
or
rclb
jp
in
jg
adc
mov
inc
shl
shrl
xchg
mov
popa
jbe
sbb
mov
loope
mov
or
xchg
cs
pop
lods
stos
mov
mov
mov
mov
inc
aad
movsl
dec
dec
out
aam
xchg
icebp
push
js
sbb
add
mov
push
sub
popf
and
popf
fsts
das
scas
lds
xchg
pop
add
pop
hlt
cmc
mov
mov
pop
int3
lahf
sbb
mov
test
mov
jp
popl
mov
fs
fcom
add
negl
or
jbe
fimuls
mov
or
push
pop
jge
rcrl
dec
mov
sub
and
out
inc
stc
nop
cmp
outsb
lea
rorb
push
mov
xor
stos
sub
cs
mov
xor
inc
dec
jle
sbb
lods
jo
mov
in
mov
cmpsl
movntq
xchg
or
add
arpl
push
sahf
and
sub
mov
in
dec
sub
cmp
leave
in
stc
paddb
sub
lret
pop
pop
shrb
mov
das
xchg
add
fisubs
pop
shr
fldt
aam
dec
mov
je
add
faddl
lret
cmp
pop
dec
iret
shl
mov
nop
jle
dec
movsb
inc
sbb
add
pop
xchg
icebp
bound
lahf
scas
or
test
mov
sti
mov
push
arpl
pushf
cmpsl
fdecstp
inc
sub
cmp
pop
imul
jle
xchg
xchg
mov
js
test
insl
dec
sub
inc
je
repz
inc
sti
lcall
jo
jns
lret
icebp
shlb
in
bound
in
movsl
or
push
xor
xchg
mov
cmp
push
ds
mov
in
out
push
sub
pusha
ds
fistpl
sub
dec
into
jo
hlt
dec
pushf
inc
mov
inc
ss
xchg
mov
pop
ljmp
mov
in
jp
out
jge
outsb
cmp
fdivs
test
cs
scas
jnp
sbb
inc
push
push
jae
xor
push
in
inc
xchg
daa
jecxz
insb
push
lret
pop
lods
ds
and
inc
in
pop
outsb
pavgw
movsb
jae
ljmp
mov
into
lods
xchg
mov
lea
cmpsl
dec
xchg
mov
cmp
fstpt
aad
lret
or
mov
les
sbb
inc
aad
movsl
sub
or
sub
enter
push
sbb
call
push
mov
jl
adc
into
notl
popf
cmpl
mov
stos
add
lret
scas
into
mov
aas
stos
dec
xchg
mov
pop
data16
push
sbb
cmc
mov
mov
jnp
mov
mov
add
in
shrb
push
outsb
out
aas
cmpsb
or
and
js
xor
popf
pushf
enter
mov
dec
cld
fisubrl
icebp
inc
rorl
fxch
test
in
pop
push
mov
mov
push
mov
jnp
jecxz
cmpsl
jecxz
xor
or
fwait
addr16
mov
rcrb
xor
inc
pop
adc
sbb
les
andl
ret
pushf
pusha
scas
inc
or
lock
inc
mov
jmp
and
add
xchg
jmp
out
xchg
push
mov
mov
pop
es
sbb
push
xlat
in
mov
lea
mov
loopne
fldcw
sub
sbb
mov
mov
mov
mov
ret
pusha
add
ror
bnd
pop
cmp
and
mov
sub
xchg
sbb
shll
pop
out
imul
dec
sub
rorl
cmpsb
push
sti
jns
std
xchg
fldln2
jnp
mov
mov
dec
dec
and
mov
mov
mov
ret
dec
rorb
jns
sbb
shrl
lods
push
jmp
lret
add
cmc
loopne
inc
fcmovb
mov
das
cld
pop
inc
in
stos
out
mov
jle
mov
movb
jb
mov
inc
out
mov
arpl
test
adc
les
insl
out
aas
sub
lahf
jl
and
in
lds
rcrb
add
sahf
imul
pop
xor
lods
ja
arpl
js
jb
lret
dec
insb
mov
push
scas
sbb
popa
jg
push
repz
add
adc
pop
gs
shlb
sub
jle
out
mov
and
jns
push
scas
aaa
sub
inc
mov
push
jecxz
mov
js
push
mov
pop
ja
lea
shrb
scas
pop
cmp
mov
inc
dec
jo
jne
xchg
andl
inc
dec
mov
lock
mov
or
rcrl
push
insb
inc
popf
push
ljmp
sarb
gs
shll
fbld
lahf
jbe
or
adc
mov
aas
enter
and
fnstenv
add
sarl
dec
fwait
push
rol
lret
cs
push
xor
sbb
lods
notb
mov
inc
rcrb
jmp
xchg
lcall
sub
jl
sbb
xchg
fsubl
jl
shll
lcall
xchg
into
xchg
mov
add
icebp
test
xchg
stos
push
dec
jbe
adc
ficompl
test
orl
and
rcll
xchg
pop
out
cli
add
stos
inc
imul
movl
pop
scas
lahf
aam
pcmpeqb
mov
mov
push
out
cmp
jg
sbb
js
add
lcall
and
dec
mov
xchg
xlat
rolb
mov
add
and
xchg
nop
fs
aam
in
fildl
ret
jb
add
push
incl
bound
inc
test
xchg
ss
dec
cmp
dec
mov
call
push
push
sbb
scas
push
jg
add
add
test
and
aas
dec
rcll
lahf
dec
filds
mov
pop
in
cli
inc
lods
pop
add
sub
es
jne
icebp
nop
dec
add
jmp
test
into
cmp
add
lock
mov
fs
data16
mov
or
loope
dec
scas
mov
loop
popf
and
xchg
std
loopne
xchg
leave
push
mov
in
add
mov
arpl
lcall
dec
jo
xor
pop
fimuls
pop
out
cmpsb
sbbb
add
jg
jge
inc
and
into
pop
xorb
shr
divl
arpl
lock
mov
cmp
sbbb
mov
mov
pushf
out
mov
ja
call
testl
push
bound
adc
mov
and
pop
add
jne
adc
mov
mov
sub
xchg
adc
xchg
or
xor
inc
mov
hlt
jb
sbb
jmp
mov
je
xchg
into
mov
pusha
adc
call
inc
mov
mov
fmul
out
dec
fildll
lea
dec
xchg
jae
cmp
inc
rcrb
inc
out
xor
hlt
mov
lahf
inc
aas
pusha
movsl
out
or
push
ret
rcll
or
pop
jo
rolb
push
ljmp
jecxz
push
ficompl
es
push
imul
imul
xor
xchg
cmp
mov
movsb
mov
jl
int
pop
icebp
mov
xchg
xor
add
pop
popa
pop
mov
int
mov
mov
subb
or
cmpb
dec
add
ret
add
jnp
push
out
fistps
mov
pop
shrd
fsubl
inc
xchg
subl
jl
test
jo
cld
icebp
mov
in
imul
fnstsw
pop
cwtl
das
adc
dec
les
pop
and
mov
addl
sarb
sbb
and
fs
sub
and
repz
scas
jnp
loop
das
leave
push
or
mov
sub
dec
adc
repz
jg
or
outsb
push
jbe
arpl
and
pushf
sub
mov
and
bts
ficoms
or
xor
adc
out
sti
rorl
std
repz
or
dec
sbb
sub
mov
mov
sbb
rcrb
imul
dec
sbb
push
mov
cmpsb
inc
xor
sbb
lds
mov
xlat
push
sbb
add
fdiv
inc
add
push
pusha
rcr
dec
inc
sub
mov
adc
mov
xchg
xor
mov
in
inc
mov
xor
sub
push
fidivl
dec
jbe
push
adc
push
arpl
dec
dec
in
add
sarl
shl
add
push
jns
fstpt
fcoms
fdivl
adcl
ljmp
movsl
aaa
xlat
adcl
sbb
cmc
mov
jne
in
loopne
dec
lret
xor
das
negb
addl
or
mov
cmp
xor
mov
mov
jb
push
mov
mov
fldl
iret
lds
jbe
cmc
pop
frndint
sbb
push
xorb
mov
pop
cmp
aas
jle
aaa
fs
push
fst
fldcw
movsl
adc
lret
or
fcoms
mov
mov
shlb
push
dec
cmc
cmp
sbb
dec
push
inc
push
inc
jns
dec
push
aas
push
sbb
dec
lret
push
clc
push
es
xor
push
out
stos
pop
fs
xchg
mov
add
imul
cmpsb
adcl
loopne
aas
push
adc
pop
pop
dec
fs
jne
mov
mov
loopne
std
arpl
adc
xchg
rolb
lods
mov
in
inc
loope
cmc
inc
outsl
insb
outsb
stos
ljmp
sbb
ror
aaa
pop
inc
sti
int3
cwtl
mov
push
mov
test
xor
bound
xchg
daa
mov
arpl
popf
jb
adcb
jbe
ss
mov
cmp
das
popf
and
mov
or
xor
loopne
adcl
add
iret
fld
ja
add
or
push
outsb
add
add
dec
in
pcmpeqb
mov
nop
cmpsb
mov
xor
mov
repnz
push
sub
jecxz
test
pop
jne
mov
hlt
ret
ds
dec
and
push
pop
sub
or
outsb
dec
jecxz
shrb
push
mov
cmpb
mov
movsl
add
cmpsb
adc
pop
mov
jbe
ret
inc
push
add
dec
inc
push
mov
leave
mov
push
cmp
add
loopne
in
mov
inc
outsl
cvttps2pi
test
jnp
mov
adc
jnp
fmull
je
add
sbb
movsl
mov
imulb
jae
std
sub
pushf
push
movsb
sahf
stc
test
shlb
rorb
push
daa
test
test
das
leave
les
jge
pop
and
inc
mov
pushf
imul
adc
repnz
jge
and
cmp
sbb
movsb
popf
fwait
mov
je
mov
push
sbb
or
xchg
dec
scas
sub
lret
mov
int
fimull
mov
sub
out
xor
jmp
sbb
dec
xlat
clc
xchg
adc
inc
hlt
ficoms
mov
je
jle
sub
hlt
loope
adc
shll
cmp
test
or
decl
repnz
stos
leave
pop
xchg
pop
xchg
push
mov
loope
loop
insl
push
cmpsb
dec
es
cmp
std
mov
adc
dec
lods
test
jbe
push
loope
fldcw
fs
cld
popa
jmp
jns
sahf
lds
xor
xor
ret
sbb
xorl
or
pop
bnd
iret
nop
push
push
xor
xor
stos
add
repnz
aas
aad
in
pop
pop
mov
mov
iret
iret
mov
cs
shrb
inc
fidivs
cmp
inc
mov
cmp
lcall
sub
mov
push
mov
sub
out
out
mov
lcall
repz
das
pop
sub
sbb
loop
inc
arpl
mov
test
cmpsl
cmpsl
jle
aas
sub
pop
xchg
pop
sbb
xchg
jp
or
cmpb
rcrb
inc
mov
js
inc
arpl
pusha
sub
jo
sub
sub
lods
lea
call
clc
adc
mov
cmp
ljmp
dec
imul
lahf
push
addr16
and
ds
and
push
dec
rcrb
cmp
jns
mov
add
in
dec
push
jle,pn
divb
das
lcall
inc
push
inc
pop
imul
ret
xchg
ror
add
gs
mov
sbb
jge
inc
xor
int
push
testb
mov
or
xor
int
sub
cmpb
dec
sbb
pop
fwait
cmp
and
jae
xchg
adc
pop
outsl
sbb
lahf
fistpl
int3
shrb
mov
sahf
js
mov
test
xor
pop
xchg
dec
jnp
adc
pushf
ss
leave
sub
shr
or
ljmp
iret
sbb
out
pushf
pop
cld
add
xchg
dec
sub
lock
cwtl
mov
sub
and
out
loop
add
lcall
fcmovne
dec
pop
add
and
add
mov
inc
adc
js
sub
fistpll
or
and
ljmp
inc
lods
mov
jle
jmp
adc
mov
inc
test
mov
imul
mov
or
xchg
cmp
xor
test
xchg
icebp
int
inc
subb
jmp
fwait
test
push
ret
dec
setno
jl
shlb
push
cld
mov
dec
jge
sub
imul
dec
push
loope
mulb
pop
dec
or
sbb
shll
scas
push
shlb
ret
xor
shrb
cmp
test
adc
push
mov
or
cmpsl
mov
and
mov
xchg
ficoms
fwait
cmp
jge
inc
jl
fsts
push
les
pop
loopne
iret
jg
jo
sub
cli
and
jge
test
outsb
mov
int3
inc
sub
idivb
les
nop
add
lcall
dec
mov
inc
icebp
adc
std
sar
cltd
mov
stc
mov
mov
test
dec
xchg
popa
pop
adc
pushf
xlat
mov
xor
hlt
inc
lds
shrb
scas
adc
ficompl
lds
mov
mov
xchg
movsl
sbb
roll
test
test
shl
popa
xor
clc
mov
jl
pop
adc
outsb
cmp
mov
fimuls
mov
mov
xchg
adc
jo
inc
mov
lods
in
sub
mov
dec
gs
ja
repnz
data16
sbb
out
sbb
inc
xlat
nop
cmp
add
and
adc
mov
mov
xor
sub
popf
in
dec
scas
inc
movsl
mov
xchg
push
bound
addl
pop
sbb
cld
sub
cmp
mov
mov
mov
movsl
or
dec
xchg
ja
add
hlt
adc
pop
sahf
and
mov
sub
das
divl
pop
xchg
mov
cs
cmp
lea
sub
outsb
jnp
sub
push
repz
inc
xor
loope
sub
push
xorb
xor
xor
sub
mov
adc
leave
call
jb
mov
std
xchg
xlat
lret
add
pop
fs
xlat
sbb
add
sbb
ds
in
push
lods
push
xchg
rolb
inc
and
adc
cmpsb
mov
sbb
in
mov
test
add
sbb
xchg
pushf
adc
inc
imul
mov
lods
aad
rclb
ficoms
and
adc
mov
adc
push
mov
cltd
arpl
adc
fs
pop
cmp
mov
call
sbb
shlb
test
push
stos
out
loop
gs
lods
leave
test
inc
push
lods
mov
iret
in
fwait
add
push
in
adc
jbe
lahf
jbe
sarl
and
rcrb
scas
clc
mov
mov
in
data16
addr16
xor
lea
fmul
stos
idivl
lods
sahf
or
cs
jno
sbb
mov
sti
mov
shrl
iret
fadds
mov
stos
jecxz
imul
pop
xchg
in
cmp
cli
xchg
inc
insl
mov
or
jae
divb
je
movsl
mov
and
push
movsl
aas
mov
pop
pop
iret
cmc
rcrb
mov
scas
out
lods
imul
stos
imul
jno
pop
cmp
mov
pop
test
adc
cmp
loope
push
pop
xor
imul
and
pminub
pushf
daa
dec
fs
repnz
jg
pop
les
dec
loop
cmp
dec
inc
mov
mov
fcompl
pop
pop
cmp
xorl
negb
scas
jp
fcomps
test
jno
cmp
subl
call
mov
out
ss
mov
or
mov
mov
dec
cld
aam
loopne
addr16
gs
call
test
pop
mov
mov
mov
mov
mulb
inc
dec
lcall
mov
call
add
arpl
dec
fmul
mov
cmp
xchg
aad
fisubs
cmp
mov
jp
sbb
jbe
pop
push
xchg
add
mov
pushf
adc
mov
stos
outsb
pushf
push
cmpsb
push
xor
imul
xchg
das
sub
lock
jno
mul
ret
lret
repz
les
out
pop
in
dec
mov
ds
icebp
mov
push
jge
leave
in
xorl
push
mov
mov
mov
mov
imul
mov
fs
orl
ret
leave
popa
xchg
lret
cmc
cltd
jo
or
cld
jns
and
jmp
mov
dec
jnp
dec
lock
out
lcall
or
cli
mov
xor
or
sub
mov
sub
leave
loop
and
in
and
sbb
mov
sar
test
push
adcb
insb
xchg
lds
dec
push
pop
jno
cmp
inc
inc
scas
cld
mov
jno
sbb
int
and
ss
fwait
adc
popa
and
int
inc
jl
imul
jmp
int
enter
push
or
jbe
jbe
insb
and
fs
daa
sbb
xor
lods
sbb
xchg
inc
fdivrp
nop
and
sub
test
sbb
xchg
mov
mov
dec
or
lahf
xor
fdivrs
cmp
mov
lgs
test
stc
xchg
dec
lock
iret
sarl
mov
push
or
sbb
jecxz
imul
sub
xchg
inc
cmp
and
and
add
into
xchg
faddl
mov
je
nop
xchg
mov
push
inc
call
rolb
jg
shrl
mov
test
sbb
int
leave
out
mov
je
mov
push
pushw
out
inc
add
faddl
push
call
push
cmpsl
jle
lods
mov
pop
scas
mov
cmp
push
clc
nop
sbb
enter
pop
push
jmp
xor
ljmp
push
int
xchg
mov
push
dec
sub
dec
inc
push
lock
in
add
dec
stos
mov
orl
jns
push
fnsave
jle
sub
daa
xor
mov
add
and
hlt
adc
mov
adc
mov
popa
es
inc
push
add
jle
loope
enterw
xchg
and
fwait
enter
pop
in
or
insb
adc
push
sbbb
cmpsb
adc
movsb
mov
pop
fwait
addl
mov
cmpb
jno
push
mull
int3
popf
push
and
addl
dec
jmp
and
push
mov
cmp
mov
xchg
add
xlat
xor
jo
out
jecxz
lods
dec
and
mov
xchg
push
inc
in
cmpsb
and
add
repnz
cltd
sub
in
cwtl
dec
in
out
repz
popf
outsb
in
cmp
sahf
movsb
cmpsl
xor
xor
jbe
jbe
std
sahf
mov
sbb
mov
sub
mov
adc
jbe
mov
xlat
insl
stc
mov
inc
mov
outsb
pusha
movsl
lcall
cld
arpl
jp
fisubrs
sub
mov
push
pop
adc
outsl
aas
je
pop
insb
popf
gs
jne
push
xor
shrl
xchg
dec
xchg
cli
sub
out
inc
insl
push
or
xchg
jg
mov
bound
pushw
scas
pop
inc
cli
ficomps
mov
scas
ficoms
popf
outsb
dec
cmp
fsubrs
sahf
fisubs
cmc
dec
push
in
scas
sti
bound
mov
adc
dec
jl
outsb
out
xor
out
cld
sbb
repz
inc
push
icebp
push
cmp
xchg
cmp
imul
scas
mov
std
call
or
jp
push
pop
sbb
jecxz
mov
insb
out
sub
lods
sub
mov
rcl
dec
sbb
push
test
push
pop
or
mov
mov
repz
xor
fisttpll
sub
cmp
pop
je
aaa
jecxz
add
xchg
test
insl
sbb
aad
addr16
out
andl
aas
movsl
loopne
aaa
mov
push
data16
cmp
div
mov
dec
cs
adc
les
out
jmp
repnz
in
nop
daa
ja
push
jnp
jl
and
adc
pop
ljmp
addr16
inc
fmull
into
dec
repz
xchg
inc
sub
xor
shr
jo
out
gs
mov
shrl
and
inc
dec
dec
add
lock
es
outsl
push
jb
pop
jne
add
jbe
aaa
dec
mov
cmp
add
sti
inc
bound
pop
mov
cmpsb
outsb
add
fwait
ret
dec
fbld
bound
xchg
repz
and
jmp
and
or
repz
pop
clc
rcll
adc
inc
scas
sub
mov
sbb
add
mov
pop
std
daa
jne
pushf
pop
xor
mov
sahf
jge
fmuls
clc
xor
xchg
jbe
pop
push
iret
adc
and
scas
int
jns
int
mov
dec
jbe
mov
add
mov
mov
imul
and
loopne
enter
ljmp
push
mov
cwtl
pop
xchg
pop
lods
popa
jo
sbb
lods
mov
daa
jmp
pop
pusha
movsb
in
adc
repnz
outsl
bound
and
xchg
xchg
mov
inc
cmp
push
or
dec
mov
sub
je
in
cld
lods
sub
cld
gs
push
stos
scas
into
pop
test
or
jno
inc
mov
xchg
testl
pop
mov
lods
or
pushf
inc
dec
mov
rol
sbb
pop
clc
push
inc
ss
cli
addl
xlat
sti
outsb
jmp
out
pop
adc
pop
jo
push
jp
jge
lods
insl
popf
cmpb
push
sbb
push
aad
cmc
cltd
jns
scas
sbb
or
mov
movsb
mov
jns
insl
cltd
sub
mov
xlat
mov
inc
fwait
scas
xor
insl
xchg
sbb
stc
fdiv
out
jl
jne
jp
and
enter
or
shl
popf
push
sub
or
repnz
xor
aas
xchg
movsl
loopne
jno
es
xlat
and
out
mov
je
test
outsl
xchg
push
push
cmp
rcl
pop
pushl
and
lds
add
xchg
popf
push
mov
jge
lods
aad
dec
in
shrl
in
inc
mov
push
sbbb
sub
cmp
jecxz
pop
xor
xchg
das
cmp
push
sub
loop
dec
cmp
pop
sub
aas
and
icebp
push
cmpsl
xchg
loop
loope
mov
cmp
inc
push
mov
push
out
mov
mov
inc
fst
xor
dec
xchg
jb
cmp
dec
out
loope
int
repnz
adc
inc
gs
jne
frstor
sbb
xor
fbld
jo
mov
jle
icebp
fstpt
mov
push
int3
mov
inc
lret
cwtl
add
out
inc
iret
lret
and
test
or
sub
das
cmp
xor
ljmp
jmp
xchg
subb
push
aas
add
sbb
cmpsl
inc
ret
mov
pop
roll
jmp
adc
cmovs
out
lahf
int
dec
in
jne
aaa
or
push
push
adc
stos
cld
shll
stc
xchg
xor
imul
dec
hlt
cmp
mov
int3
push
xchg
adc
fsubl
jbe
mov
imul
les
mov
adc
test
je
mov
or
lret
add
add
stos
pop
xor
add
in
mov
out
push
jmp
mov
mov
adcb
outsb
shlb
cmp
in
fnstsw
mulb
or
sbb
lods
popa
insl
shll
faddl
aaa
and
jmp
mov
dec
add
xor
sub
inc
push
mov
aas
jb
sahf
push
insl
mov
arpl
sub
adc
pushf
inc
aam
ja
fdivl
mov
int3
shl
adc
and
fucomp
push
add
mov
in
decb
loope
add
test
int3
sub
pop
add
dec
jae
mov
add
nop
ds
cmpsb
cwtl
inc
in
sbb
bound
mov
inc
mov
aaa
sub
and
sub
push
jb
insl
lds
sub
int
push
frstor
popf
inc
xchg
loope
sarb
push
jg
outsl
jae
cmpsl
aaa
xchg
sbbl
fs
lods
cmp
xor
jmp
rol
movl
movsl
in
inc
sbb
sub
test
imul
and
mov
das
iret
mov
adc
cli
movsl
cli
fcoml
cltd
into
fists
mov
cltd
adc
popf
lds
xlat
jge
adc
pop
xchg
jb
cli
xchg
mov
stos
stc
imul
inc
popf
xor
aas
mov
repz
adc
jbe
outsb
adc
mov
in
jno
lret
and
mov
mov
adc
dec
mov
add
shll
aad
in
adc
data16
stc
add
fiaddl
mov
pop
iret
ret
je
mov
icebp
mov
frndint
dec
scas
or
pop
push
or
stc
push
je
mov
inc
loop
xchg
leave
or
add
jecxz
fwait
enter
pop
cmp
cmpsl
imul
insb
jae
sbbb
or
imul
mov
xchg
jecxz
pop
in
cld
enter
in
mov
xchg
mov
mov
adc
push
or
sub
pop
daa
sub
and
sub
divl
inc
out
nop
xchg
and
sti
jb
dec
jo
incl
jg
push
test
fs
inc
paddsb
lea
adc
pop
jo
mov
sti
orb
les
aam
jno
or
xchg
std
xchg
xchg
mov
pop
into
adc
pop
testl
push
mov
jno
out
pop
or
fucomi
xor
xor
and
ljmp
std
add
sbb
lcall
or
mov
mov
cmp
jno
pusha
sbb
nop
repnz
loop
faddl
ror
gs
jl
enter
pushl
jmp
pop
cwtl
mov
outsl
ret
and
sbb
out
jge
sub
cmp
sbb
and
imul
test
dec
aaa
subl
loope
pop
pop
jo
sbb
fisubrs
testb
int3
les
mov
dec
or
in
mov
dec
loope
jge
inc
scas
xchg
mov
push
repnz
imul
mov
mov
dec
xor
push
inc
cmp
ljmp
sub
adc
je
xchg
sahf
test
addr16
sarl
push
loop
jmp
ljmp
in
mov
and
test
mov
ss
mov
push
mov
mov
sbb
inc
insl
arpl
addl
xchg
into
subb
xchg
loop
je
movsb
push
sub
rclb
xor
inc
ret
int
repz
mov
mov
sbb
test
sub
lds
out
push
test
insb
push
or
mov
xchg
mov
fisubl
jae
mov
sbb
mov
pop
cli
xor
repnz
cmpsb
pop
xchg
popl
loopne
rorl
ja
lahf
cmp
adc
add
xor
int
sar
mov
pop
inc
shrb
sbb
js
lds
jno
and
ret
je
mov
xor
lret
pop
sub
iret
xchg
xchg
pop
sbb
push
lret
pop
jnp
lahf
cmpsb
aam
adc
scas
jp
fisttpll
xor
daa
jmp
into
int3
xchg
mov
in
scas
sub
daa
mov
xor
decl
push
hlt
pop
mov
cli
test
loope
leave
incb
shl
mov
cwtl
cwtl
js
cmp
clc
push
xlat
test
cmp
mov
in
pop
stc
jg
jne
cmp
inc
or
je
add
lods
cmp
stos
cmc
addb
aaa
push
cmp
push
mov
aas
pop
mov
std
sbb
add
rclb
mov
lret
je
push
pop
cmp
sub
xor
add
lahf
enter
out
sbb
js
lcall
call
call
pusha
maskmovq
idivl
xlat
nop
inc
add
pop
divl
mov
fdiv
dec
imul
rorb
add
xlat
mov
subb
dec
dec
xor
sbb
mov
push
xchg
lcall
sub
or
sub
lret
mov
clc
lret
movsl
pop
jne
addr16
mov
rcrb
cld
pusha
ja
pop
sarb
icebp
mov
push
push
testl
push
out
dec
inc
mov
cli
or
aas
dec
loop
imulb
jp
dec
mov
adc
and
dec
jle
fiadds
pop
iret
out
jbe
push
insb
inc
inc
popf
pop
loope
fidivrs
mov
mov
inc
add
incb
or
jp
pop
icebp
dec
fs
hlt
ds
insb
cmp
cltd
dec
lods
lods
sub
and
jp
rolb
xor
dec
fcmove
push
xchg
sti
in
xor
in
jl
push
push
mov
and
js
icebp
in
xchg
out
pop
cmc
or
add
rclb
stos
fisttps
push
adc
xchg
push
mov
movsb
rcr
adc
out
cmpsb
sub
sar
xchg
or
add
loopne
mov
nop
sbb
mov
xor
inc
mov
and
mov
movb
mov
mov
and
roll
mov
xor
pop
fadd
iret
adc
mulb
sub
dec
lock
jnp
jno
loope
dec
mov
add
fsubl
bound
pop
sub
dec
mov
std
jle
out
sbb
lods
mov
mov
fdivrp
mov
cmp
sbb
mov
jmp
outsb
mov
xlat
lcall
push
dec
adc
aaa
pop
push
ret
data16
out
cmc
dec
xchg
mov
stc
mov
or
out
mov
xchg
xchg
and
mov
jo
clc
rclb
fldt
mov
mov
cmp
je
enter
mov
or
subb
enter
push
jbe
frndint
cmpsl
pop
hlt
shrl
cmpsl
push
outsl
push
xchg
rclb
repz
in
and
jp
sbb
adc
in
jmp
arpl
jo
aaa
mov
mov
dec
int3
pushf
pop
dec
mov
into
loop
push
xlat
and
push
xchg
sub
sbb
sub
movsl
ret
mov
xchg
and
test
mov
mov
shrl
adcl
and
push
test
fnstenv
sub
int
adc
addr16
pop
mov
mov
push
out
add
ffree
mov
xchg
popf
mov
cmp
testl
jp
mov
jns
lods
div
aas
mov
bound
fsts
fdivs
nop
mov
rol
inc
dec
mov
test
or
push
push
mov
in
je
jns
pop
mov
je
fs
jp
int
xchg
pop
jne
sbb
or
jp
add
or
xchg
push
inc
pop
cmpsb
scas
mov
mov
loope
and
lea
push
sub
push
sti
sub
popf
outsb
or
cmp
sub
adc
jbe
daa
jecxz
fwait
rorb
xchg
push
fs
adc
lods
test
mov
aad
push
and
push
dec
inc
xchg
xchg
inc
lcall
mov
repz
mov
and
sub
jbe
inc
push
adc
fstl
sub
jl
fistps
pop
jle
or
stc
dec
aam
mov
mov
nop
enter
test
push
fadds
ds
mov
outsl
dec
fsubrs
fidivs
or
dec
adc
popa
jae
jbe
incl
shll
faddl
mov
push
lds
add
call
iret
pop
rorl
fimuls
lods
inc
pop
cmc
sub
xchg
mov
and
out
inc
pop
adc
je
cmp
cmp
sbb
pop
push
xor
cmpl
jg
shlb
leave
incb
pop
xor
pop
add
lock
iret
andl
xchg
or
or
sbb
dec
mov
mov
push
xor
push
pop
jg
xchg
cmpb
cli
mov
jbe
mov
ret
and
push
sarb
test
jb
push
sub
outsb
mov
dec
or
int3
push
imul
cwtl
inc
jmp
and
mov
arpl
inc
mov
and
inc
dec
adc
cli
fnstcw
test
sarb
mov
mov
inc
movsb
push
push
inc
mov
push
mov
hlt
roll
or
sbb
scas
aaa
xor
jns
ljmp
dec
icebp
mov
daa
dec
xchg
mov
xchg
pop
sub
adc
jns
repz
sub
mov
jae
jl
adc
mov
adc
std
xor
leave
cwtl
lret
aad
cmpsl
pop
jmp
insl
cltd
jno,pt
roll
add
cli
daa
mov
push
dec
enter
imul
dec
ljmp
add
loope
arpl
loopne
add
xchg
iret
add
push
mul
mov
cs
add
jne
or
or
jb
scas
mov
mov
push
movsl
rol
repnz
lcall
rorl
pop
push
xchg
in
lret
stos
out
jle
subb
sub
test
in
dec
lock
adcl
jp
popa
jns
mov
cmpsl
xchg
mov
jecxz
fcomi
out
and
ljmp
adc
stc
rcll
sub
dec
test
icebp
sub
bnd
pop
jecxz
rclb
cmp
out
sub
aas
pop
ss
int3
or
cmp
movsbl
sub
or
or
stos
pop
adc
adc
mov
pusha
pop
jbe
inc
mov
cs
dec
mov
adc
pop
es
test
int3
ljmp
add
shll
mov
pop
mov
adc
lea
pop
sub
sahf
mov
ret
mov
pop
in
dec
sub
loopne
dec
mov
jecxz
mov
call
shlb
lods
xchg
pop
and
lock
cmp
jp
cwtl
int3
sbb
xchg
je
nop
movsb
addb
jge
sub
ret
jo
sbb
stos
clc
pusha
sbb
lcall
or
shrl
mov
mov
sahf
mov
push
mov
fnstsw
ss
push
test
push
sub
jbe
ficoml
sub
nop
arpl
dec
xor
xchg
in
pop
fistl
mov
mov
rolb
movsl
je
loope
xlat
dec
sub
mov
ror
pusha
ficompl
jge
rcrl
pop
add
out
pop
mov
icebp
fnstenv
rcll
out
xor
loopne
adc
cltd
shrb
sar
or
mov
mov
test
push
dec
xchg
outsb
iret
test
jl
push
je
dec
mov
out
shrb
xchg
push
adc
mov
ret
cmp
movsb
mov
call
addb
cmpsl
inc
mov
xchg
push
cmp
mov
jae
cmp
out
adc
dec
nop
ret
fbld
sarb
jo
lret
jo
inc
ljmp
xchg
insb
cld
add
mov
test
mov
incl
add
mov
test
dec
cmp
mov
sbb
add
mulb
inc
jl
mov
sbb
mov
inc
outsl
mov
ror
sub
sti
ror
push
imul
adc
and
xor
sbb
in
mov
loope
jge,pt
test
xor
fcomip
xchg
mov
add
inc
and
pushf
shl
mov
lock
lods
rol
cmp
cmp
push
dec
lea
loopne
dec
int
and
popa
jle
loop
xchg
ss
cmpsb
jbe
icebp
and
aam
ja
mov
pop
cmc
subl
push
repnz
arpl
pop
add
ja
mov
mov
pop
dec
fisttpll
or
inc
inc
mov
dec
enter
add
leave
aas
xchg
mov
dec
fdivrs
stos
mov
cmpsl
push
xor
push
mov
and
add
pop
ja
fcmovne
test
mov
sbb
xchg
mov
cli
sbb
mov
fs
ret
addr16
dec
test
lahf
mov
fildl
aaa
fcompp
outsl
cmp
jge
cltd
test
imul
lock
sbb
cmp
in
jns
push
cs
push
lods
stos
push
xor
and
xor
sbb
sbb
pop
mov
push
nop
aas
xchg
jg
cmpsb
mov
add
push
dec
outsb
push
or
lret
add
mov
sub
adc
addl
mov
adc
in
mov
pop
and
mov
cmpsl
repnz
es
cmpsb
ficompl
and
out
cmpsb
leave
dec
sbb
ljmp
mov
shrl
rolb
cmp
nop
dec
xor
dec
daa
push
dec
sbb
mov
in
sbbl
rcl
int3
push
xor
dec
pop
xlat
xor
stos
mov
cwtl
cmpsb
mov
sti
push
adcb
inc
js
mov
stc
sti
pushf
stos
add
push
xor
jnp
add
push
dec
stos
adc
into
mov
daa
repnz
imul
std
push
adc
lret
dec
push
sbb
out
cmp
dec
or
stos
loop
push
les
rolb
lcall
loope
xor
nop
inc
xchg
inc
sub
inc
push
fmulp
pop
ret
popa
jbe
outsb
iret
mov
rorb
jmp
andb
push
repz
ret
jecxz
inc
cmp
in
lcall
popf
cmpsb
adc
gs
pop
dec
mov
je
fildl
stos
xor
iret
xor
pop
test
cmp
sub
cli
pop
and
int3
ficoml
dec
iret
pop
cmp
test
stos
sbb
aaa
daa
mov
and
movups
pop
xor
loope
adc
out
bnd
sbb
sbb
or
xchg
es
inc
int
push
stc
mov
out
es
cmp
insl
jecxz
push
imul
mov
inc
and
add
mov
cmp
mov
int3
mov
cmp
addl
jno
shlb
push
dec
cmp
mov
dec
jns
adc
and
jge
in
and
stc
jne
mov
iret
mov
dec
xor
and
mov
xchg
mov
xor
xchg
imul
pop
stc
xor
cmp
rcrb
lds
sub
cmp
sti
std
inc
mov
sub
and
sbb
outsb
fidivs
push
pop
faddp
pop
mov
cmp
pop
imul
sbb
lret
loop
data16
leave
push
jecxz
mov
jb
fnstsw
sbb
int3
loopne
adc
dec
push
pop
adc
aas
inc
mov
fldl
lea
add
pop
es
mov
js
shlb
lahf
xchg
mov
pop
test
ss
fildl
adc
xor
mov
or
cmpsb
nop
test
mov
cmpl
xchg
mov
push
outsl
fdivrl
ss
sub
cmp
inc
cmp
add
xchg
mov
stc
inc
mov
xlat
adc
hlt
lret
fdivr
loopew
xor
pop
dec
pushf
out
aad
mov
scas
scas
sti
loop
dec
lock
popa
mov
sbb
into
das
fldenv
loope
sahf
mov
push
outsb
dec
push
jle
jns
inc
outsl
sub
xor
dec
pop
das
sbb
pop
sub
xchg
mov
sbb
push
pop
inc
sbb
sub
and
push
out
mov
scas
cld
ret
push
lods
jne
cmpsb
jp
cld
nop
sub
dec
cmp
xor
sub
xorb
lcall
arpl
pop
adc
cli
iret
sbb
jmp
cmp
dec
addr16
shll
and
xchg
jbe
fidivrs
xor
jne
stos
js
xchg
lret
and
dec
test
push
xchg
pop
or
dec
inc
imul
cwtl
flds
lods
in
xchg
enter
mov
dec
out
sarb
mov
xchg
outsb
push
scas
inc
or
push
sbb
jns
xlat
scas
je
addr16
jno
movl
pop
fiaddl
shrb
cmp
sbb
adc
repnz
pop
jecxz
int3
xlat
pop
adc
mov
push
push
orl
ss
push
pop
sti
mov
pop
inc
sub
scas
mov
xorb
adc
popf
imul
test
hlt
push
mov
popf
aas
orl
fldlg2
dec
inc
insb
mov
adc
pop
std
xor
cmp
mov
test
jno
xchg
out
pop
xchg
subb
neg
imul
out
test
mov
jl
lock
lods
cmc
sbb
sbb
sub
inc
inc
mov
lods
xor
lock
xor
xchg
outsl
jb
insl
test
pop
or
inc
inc
or
xchg
je
sti
repz
stos
inc
ret
inc
stos
ret
pop
mov
pop
jmp
mov
push
stc
out
sub
psrlw
push
push
clc
scas
adc
mov
lock
mov
out
sbb
fists
mov
jae
daa
jo
shlb
daa
push
rcr
jnp
add
popa
pop
insb
cmp
push
leave
and
int3
mov
adc
push
add
in
imul
mov
clc
fstpt
inc
push
jno
push
cmp
adc
insb
sub
mov
shll
jg
fsubs
inc
mov
add
cmp
lods
cmp
mov
inc
jg
pop
ds
lahf
adc
cmpsl
popa
or
out
mov
out
cmp
lods
ret
jle
hlt
movsb
add
and
scas
outsb
mov
cmp
dec
pop
int
dec
jge
movsl
jo
jne,pn
repnz
pusha
mov
arpl
and
and
rcrb
addr16
sbb
or
pop
sti
sarl
pop
jle
xor
pop
or
inc
in
data16
cmpsb
fwait
push
subb
sbb
test
fnstsw
stos
mov
dec
pop
aas
mov
out
sbb
out
dec
fcoml
int3
cmpsb
popa
sahf
insb
lods
out
or
jl
outsl
ret
dec
ficoml
jne
add
ret
sub
mov
loope
and
adc
pushf
int
fsub
clc
bsr
ret
pop
daa
sbb
dec
arpl
pop
push
fldl
dec
faddl
mov
aas
jl
pop
or
out
pop
js
les
shll
mov
xchg
iret
push
lret
or
stc
jno
out
add
shll
aam
fimuls
jne
push
test
mov
aaa
cmp
mov
mov
insl
adc
test
jg
dec
jle
dec
or
jbe
loopne
aad
lods
push
fildl
and
xor
push
jg
pop
rorb
aam
shr
cli
adc
testl
dec
mov
orl
push
sbb
test
inc
out
jbe
js
mov
movsl
shlb
fcmovne
push
cmpsl
movsl
mov
inc
mov
addr16
push
adc
add
cmp
push
sbb
jbe
mov
stos
push
imul
aaa
xor
icebp
std
or
lock
dec
aad
xabort
mov
cmpsl
ds
fcoml
mov
xor
mov
iret
fisttps
repnz
and
adc
xchg
xor
fstps
std
adc
jnp
jo
or
dec
into
sub
nop
inc
stc
jnp
or
scas
mov
scas
orb
inc
pop
sti
pushf
mov
sbb
int3
jl
neg
pop
or
push
lods
mov
std
sbb
sbb
or
xor
xor
cmpsl
inc
mov
das
pop
loope
repz
test
sbb
push
stc
jbe
mov
and
pop
and
outsl
inc
mulps
imul
mov
nop
call
shlb
mov
inc
popf
popa
shrl
arpl
xor
mov
and
and
xorb
iret
rcrb
adc
scas
sbb
or
stos
pusha
push
popa
repnz
test
fistpll
and
stos
cmp
lcall
hlt
push
cmpsb
nop
jecxz
or
jmp
sar
aas
sbb
sub
dec
outsl
out
pusha
fildl
shrb
mov
movsl
mov
fcompp
push
mov
mov
cmp
xor
dec
arpl
pushf
mov
jbe
mov
pop
mov
mov
int
pushf
pop
sbb
scas
inc
cmp
pop
cwtl
xor
fwait
lret
insl
sub
sub
lret
int
jle
dec
mul
pushf
jmp
pop
cmp
stos
bound
sub
sub
xchg
pop
mov
out
mov
and
stc
dec
cltd
pushf
mov
dec
xchg
int3
lret
repz
jo
jecxz
push
cmp
ror
hlt
je
out
das
std
or
out
mov
test
arpl
stos
das
mov
pop
shrb
cmc
fs
imul
arpl
inc
adc
inc
adc
jl
fdivrl
push
mov
ret
and
xor
loopne
fs
sbb
mov
jns
test
scas
sahf
and
mov
pusha
adc
jbe
and
jge
dec
mov
xchg
imulb
das
ja
push
jns
imul
jne
mov
jp
aam
dec
fwait
out
inc
ja
or
clc
mov
sub
sti
bound
push
inc
mov
jecxz
fwait
testb
int3
mov
mov
mov
mov
sarl
cmp
mov
sub
mov
add
sub
jae
arpl
ret
orl
fisubrs
xor
cli
push
mov
sub
xchg
stos
mov
jae
js
test
xor
add
in
mov
scas
je
mov
push
jmp
aas
or
mov
mov
sbb
sbb
mov
nop
mov
and
mov
xchg
pop
sub
loopne
insb
in
negb
rcrb
ljmp
das
daa
mov
lret
icebp
mov
out
dec
call
adc
movsb
fstps
sbb
outsb
fstl
lods
fstpl
fiadds
or
int
pop
xchg
sbb
xlat
and
sahf
jecxz
mov
jl
mov
sub
xchg
stc
push
sbb
adc
push
rorl
pop
cld
sub
sub
shlb
mov
std
addl
push
push
test
adc
sbb
enter
cwtl
or
sti
cli
mov
aaa
mov
clc
and
ja
lock
in
repz
cmp
or
xchg
sbb
pop
jge
aam
movsl
aad
cmp
fdivs
push
pushf
test
jae
push
icebp
sub
lds
int
adc
clc
and
push
std
sub
push
fmulp
insl
leave
pop
fmul
addr16
testl
fadds
jg
das
repz
fisttps
jno
hlt
loopne
adc
fadds
daa
outsb
or
leave
adc
icebp
rcrb
into
aas
adc
repnz
aam
sub
je
and
clc
sub
rclb
lret
lret
mov
xchg
mov
div
scas
mul
cmp
sbbl
cmp
dec
or
call
subl
sub
pop
nop
aaa
cmpsb
paddusw
push
bound
ja
mov
js
lock
rcll
lcall
xor
add
pop
pop
test
int3
cmp
or
cmp
cmp
pop
sbb
or
sub
std
insb
out
push
adc
mov
aaa
mov
in
pop
push
iret
icebp
inc
or
pop
outsb
icebp
inc
jnp
mov
add
mov
push
sbbb
test
movsb
jbe
pop
addps
dec
xchg
jl
cmp
ljmp
cmp
cmp
je
jg
jmp
in
sbb
dec
ret
xor
dec
or
ljmp
dec
repz
in
negl
fsubrs
jle
jo
test
and
and
mov
jmp
sbbb
adc
cmp
mov
inc
out
or
popa
mov
fisttpl
hlt
mov
pop
into
addr16
clc
jno
les
ss
jns
repnz
mov
xchg
js
sub
cmc
sbb
inc
adc
rcll
notb
stc
sub
xchg
and
ja
into
jo
rcrl
sub
lret
aaa
movsb
cmp
push
mov
jecxz
add
and
xor
mul
lcall
daa
pop
push
sub
clc
aad
sbb
sbb
cmp
fldenv
or
lcall
push
hlt
mov
mov
xchg
ss
cli
repnz
pop
or
js
dec
imul
and
sub
hlt
push
mov
sub
add
jnp
add
jo
push
sbb
sbb
lcall
push
pslld
dec
das
icebp
in
insb
jge
lds
xor
jae
pop
xor
dec
dec
sub
jle
dec
xchg
sahf
paddsw
or
mov
cmp
rol
xchg
xlat
mov
mov
loopne
dec
pusha
jo
xchg
enter
insl
imul
out
ret
jne
ret
scas
mov
pop
popa
xchg
pop
shll
cmp
addl
jo
lret
ja
add
inc
les
movsb
sub
popf
lods
lods
dec
mov
cmp
stos
lock
int
push
js
mov
sti
into
iret
jmp
or
or
data16
inc
fwait
inc
cld
lods
mov
stos
movsl
or
scas
out
add
shr
std
or
jne
lods
push
pop
cli
outsb
sbb
dec
cmp
dec
scas
inc
adc
pop
daa
gs
scas
or
cld
inc
cld
ror
shrl
cmc
pop
lods
test
rcr
xchg
lock
jp
adc
in
aam
inc
add
adc
cmp
sub
push
sahf
jmp
adc
jo
xor
mov
aaa
aas
xchg
notl
add
js
out
es
xor
cld
mov
sbb
sub
jmp
dec
inc
inc
add
dec
lds
dec
jnp
test
sub
ljmp
aam
mov
sbb
out
jae
insl
scas
outsl
daa
pushf
xlat
loope
inc
in
aaa
mov
mov
adc
pop
fwait
adc
xor
stc
mov
rcrb
mov
mov
dec
bound
sti
ljmp
inc
mov
jp
nop
push
rorl
xchg
imul
sbb
femms
pop
movsl
fcmovu
shlb
loop
jbe
fbstp
sub
dec
xchg
mov
fcoml
mov
dec
push
pop
scas
cmp
cmp
adc
mov
icebp
add
out
inc
jno
sbb
xorb
and
fs
psubb
cmp
int3
mov
jmp
jge
lea
adc
stos
shr
jge
cmpsb
fmuls
cmp
sbb
cmp
je
cld
hlt
jno
or
push
sub
pop
outsl
insb
dec
in
dec
mov
add
test
xlat
imul
jae
stc
mov
mov
add
cld
test
sbb
inc
outsl
and
jne
js
push
push
add
mov
dec
mov
add
mov
int3
sub
inc
scas
outsl
dec
sub
clc
adc
xor
pop
and
scas
mov
clc
or
std
lods
imul
lahf
ja
pop
jmp
repz
and
mov
pop
mov
push
pop
jmp
xchg
and
gs
or
insl
aaa
notl
mov
sbb
mov
dec
cmc
ljmp
add
or
add
push
in
inc
shl
cmp
shl
test
imul
xor
pusha
sbb
jae
or
lods
daa
jae
roll
popf
mov
fstpl
ljmp
mov
ss
fwait
add
sti
or
mov
dec
mov
mov
bnd
push
dec
push
pusha
ja
adc
les
lahf
inc
pop
push
add
rcl
sbb
ror
xlat
cmp
and
rorb
outsb
cmp
jo
lahf
pop
bnd
ficoml
fmull
mov
insl
fcoml
gs
nop
jne
shlb
cmp
lods
or
in
cwtl
sub
in
lahf
dec
dec
dec
repz
lea
xchg
mov
adc
xchg
xor
sbb
int
pop
inc
mov
idiv
stos
and
lea
cmp
out
int
add
in
push
scas
mov
lea
mov
jno
adc
je
sbb
jmp
pop
popa
add
jnp
loope
sub
jnp
mov
sbb
subb
imul
xchg
scas
xchg
and
cmp
sub
jo
mov
mov
ss
fcompl
mov
lcall
cmp
xor
jo
xchg
mov
ljmp
pop
popa
or
mov
mov
test
adc
and
sbbb
push
stc
je
jmp
push
pop
xor
pop
sbb
int
clc
int3
jne
fidivl
popf
decb
int
data16
pop
adc
std
jge
leave
sub
jb
cld
aad
dec
fxch
adc
stc
aas
js
div
inc
sub
sahf
repz
push
stc
fs
dec
sub
cmc
loope
sbbb
repz
and
xchg
out
in
mov
sub
dec
cmpb
aas
dec
mov
sub
push
push
rorl
inc
adcl
jg
mov
imul
xchg
iret
ja
dec
out
loope
outsb
popa
pop
les
sbb
int
jmp
jno
pcmpgtb
sti
jbe
std
dec
bound
fisubl
in
mov
sub
xor
ja
cmp
stos
push
in
or
or
or
lds
enter
and
xor
jnp
popa
cmpsb
mov
hlt
jp
xchg
jno
sub
aas
push
sbb
into
mov
xchg
and
adc
fiaddl
clc
ret
sub
enter
loopne
xchg
movsb
jb
mov
and
cwtl
fnstenv
xor
aaa
mov
aad
sbb
add
mov
dec
movsl
arpl
ja
neg
adcl
iret
inc
sbb
enter
psraw
popa
pop
fmuls
lock
add
sbb
push
jmp
mov
mov
xchg
or
enter
cmp
arpl
clc
nop
jns
bound
inc
out
enter
les
inc
and
xorb
lcall
push
fs
lret
inc
int
in
data16
aaa
or
aam
add
mov
jne
add
daa
sar
nop
shrl
stc
clc
push
mov
jmp
lahf
cmp
int3
test
movsb
gs
adc
or
data16
in
movsb
lcall
mov
je
stos
inc
mov
loope
sahf
dec
jnp
pop
adcl
leave
push
pusha
sbb
loope
ret
mov
sahf
add
lods
or
lods
fsubrl
rcll
sub
gs
adc
cmpsl
xchg
jnp
test
xchg
outsb
dec
inc
cmp
mov
or
scas
push
add
js
jp
enter
mov
gs
adc
sub
in
loop
xorl
pop
rcrl
jo
hlt
out
dec
popf
xchg
add
jno
add
test
push
fisubs
cmp
pop
lods
and
push
sti
mov
xchg
push
test
out
lods
fsts
fnsave
in
std
ficompl
jae
xchg
ret
das
daa
cmp
rorl
enter
cmp
lds
or
imul
or
fdivs
pop
insl
test
mov
ret
sub
aam
pusha
jnp
cli
out
int3
into
dec
lock
in
arpl
jo
stos
inc
push
inc
fsubl
lods
int3
in
jg
push
or
push
cmp
xor
test
pop
dec
outsb
ret
xchg
fcmove
mov
push
mov
pop
addb
push
lret
inc
mov
sbb
cmp
sti
jmp
fs
pop
hlt
push
mov
js
push
adc
mov
arpl
xor
adc
out
ficomps
cmpsb
sbb
jge
movsl
mov
mov
daa
stos
mov
bound
add
fsub
dec
mov
sbb
aas
pop
gs
insl
adc
iret
hlt
jl
test
in
pop
cli
mov
cmp
xor
movl
fs
pop
xor
out
pop
xor
push
aaa
les
jnp
not
out
mov
xchg
mov
xchg
jbe
and
xchg
int
mov
push
pop
mov
push
pop
test
popf
orb
add
jne
push
adc
and
inc
fmul
inc
clc
xor
aam
jne
pop
push
mov
mov
mov
push
push
stos
cmp
in
mov
jge
jae
call
cmp
rcrl
repz
leave
xlat
cmc
in
imul
dec
std
pop
pop
stos
inc
dec
sbb
pop
mov
mov
fnsave
daa
lods
pop
lods
dec
mov
xor
xchg
pop
cmp
popf
ret
aas
xchg
clc
lret
outsl
aam
jge
test
push
or
cltd
cmp
call
xchg
jo
cltd
mov
cmp
aad
fsubs
dec
xchg
prefetch
in
arpl
sbb
and
aas
jns
int3
cmp
out
shrl
into
ret
jo
and
inc
lahf
sbb
mov
std
jns
inc
or
or
cmp
add
sbb
xor
pop
dec
fcmovnb
cmp
jbe
stos
xorl
ficompl
inc
inc
ficoms
call
bound
mov
movl
mov
loopne
mov
and
rorl
fs
shlb
leave
addr16
fwait
popa
outsb
cmpb
pop
clc
mov
xchg
jecxz
dec
adc
ljmp
sahf
push
mov
cmp
loopne
and
mov
add
enter
andl
shll
mov
pop
pop
xchg
fs
mov
jecxz
and
sbb
lock
xlat
xor
mov
xchg
mov
pop
jmp
int
aaa
dec
jae
push
pop
fsubs
xchg
bound
daa
inc
cltd
jp
mov
jnp
dec
insl
fmul
test
arpl
shlb
push
jo
jmp
fisttps
je
pop
bound
mov
shlb
sub
lods
iret
jnp
dec
aaa
pop
and
test
sub
int
test
xor
cmp
jne
jp
jmp
inc
push
mov
push
xor
scas
subb
lcall
gs
in
pop
adc
fimuls
pop
sarb
mov
add
cli
adc
cmp
and
xchg
add
into
inc
int3
xor
mov
enter
lret
push
inc
push
stc
fbstp
loopne
popa
pop
cmpsl
imul
or
out
inc
shll
fildll
nop
jns
aas
or
cmp
cmp
dec
push
aam
into
push
loope
cmpl
loopne
lret
adc
shlb
es
pop
fildll
sbb
outsl
ss
mov
adc
push
out
insl
push
jo
sub
fwait
jae
dec
sub
or
cmpsb
into
inc
xchg
xor
cmp
xchg
push
push
mov
not
pop
jge
push
into
repnz
pop
cwtl
ret
bound
adc
add
xchg
ljmp
xor
stos
in
loopne
ficoms
outsl
outsl
jge
movsb
test
leave
push
fldl
dec
add
adc
inc
rcrl
sbb
pop
xor
and
cmp
pop
jle
cmp
out
scas
sub
mov
mov
pop
jg
adc
xchg
and
adcl
sbb
mov
mov
pushf
test
jle,pn
xor
and
outsl
clc
add
leave
lock
mov
int3
xchg
mov
fsts
or
cmpb
or
mov
sub
inc
test
mov
mov
cmp
push
out
inc
cmp
fwait
popf
mov
arpl
dec
xor
cmc
test
mov
in
xchg
lods
dec
ret
push
jns
imul
adc
subb
lock
leave
ftst
mov
mov
rorl
mov
rcr
pop
dec
jno
push
adc
and
mov
push
jle
and
data16
push
loop
ds
imulb
sbb
movsb
ja
xor
insl
test
stos
add
add
mov
fcoms
test
push
hlt
imul
xor
mov
hlt
cmc
jae
or
insb
mov
mov
dec
jb
and
pushf
push
dec
sub
popf
jae
in
sbb
out
call
repz
mov
mov
addr16
jp
or
cmpsl
leave
jnp
mov
rorl
aam
sbb
test
xlat
jb
pushl
ljmp
mov
or
jle
push
das
xchg
xchg
cmp
stos
into
js
lds
in
neg
adcb
dec
cmpsb
lahf
pop
mov
lods
ljmp
jp
roll
xor
imul
and
gs
jmp
sub
and
clc
xor
out
lret
and
fistpll
cmp
mov
dec
decl
add
ret
iret
xchg
push
cld
arpl
pop
test
adc
movl
pop
sbb
insb
cmp
push
cmp
jno
fnstsw
mov
jecxz
nop
sbb
and
mov
xor
adc
push
pop
inc
sahf
push
out
adc
incb
dec
pusha
movsl
xcrypt-ctr
cmpsl
fstps
into
xchg
rcr
gs
aad
push
mov
pop
pop
ds
rcll
xor
int3
icebp
cs
jno
and
pop
or
pushf
dec
adc
lcall
ret
fwait
mov
cli
lret
or
push
in
or
jnp
push
fisttpl
xchg
jle
jo
ja
out
inc
xchg
loope
dec
inc
mov
inc
push
test
mov
adc
xchg
push
push
push
or
push
mov
jmp
mov
test
in
loope
gs
loope
mov
outsl
xchg
outsl
out
jle
push
pop
in
mov
cmp
xlat
nop
xor
cli
repz
ja
jb
push
dec
ret
jg
mov
jl
mov
xchg
inc
push
sub
xchg
inc
xor
stos
sub
pop
cmp
push
dec
xchg
xor
push
leave
movb
enter
and
mov
push
mov
and
in
ficomps
stos
jle
xor
call
ds
repnz
outsb
fldl
in
mov
pop
cmpl
push
pushf
inc
pusha
ret
ss
cmpsb
adc
jno
aam
adc
xor
inc
inc
push
dec
mov
insl
cmp
lret
pushf
loope
repnz
cmpsl
push
jg
adc
adc
sahf
fisttpl
repz
pop
or
enter
loopne
lret
jge
cmp
lcall
cli
arpl
cltd
sti
push
std
jbe
adc
mov
mov
shl
mov
add
jl
sub
lds
nop
aam
xchg
outsb
xor
and
stc
sub
jb
ret
call
inc
cmpsb
adc
sub
pop
outsb
out
inc
imul
xor
inc
rorl
mov
mov
sbb
push
xchg
subb
in
push
mov
out
loopne
inc
imulb
jnp
les
ret
dec
mov
sahf
dec
dec
cwtl
cmp
dec
push
loopne
div
fisubl
into
jae
ja
mov
fwait
xchg
sti
and
add
push
js
add
or
dec
add
jns
and
fidivrs
cli
cmp
jo
inc
nop
in
mov
rcrb
sti
dec
jo
sbb
dec
mov
jns
pop
fimuls
xchg
mov
pop
into
inc
ret
out
popl
lcall
and
push
iret
jne
aaa
stc
in
cmpsl
inc
aaa
mov
rolb
jno
sbb
scas
xchg
movsl
mov
mov
mov
cmp
fbld
and
mov
mov
or
into
dec
shll
inc
aad
xor
pop
ds
in
cmp
fbstp
cli
cli
call
std
sbb
loop
insl
cmpsb
sub
mov
mov
add
popa
fildl
inc
in
inc
push
fmulp
les
leave
or
out
fsts
mov
imul
call
xchg
in
sub
cwtl
int
addr16
rorb
inc
movsl
fiadds
pop
jbe
inc
jmp
xchg
cltd
push
lods
les
shlb
popa
loopne
push
mov
dec
inc
mov
lahf
scas
pop
mov
stos
jb
push
sbb
mov
sbb
sarb
jge
stos
jmp
mov
jnp
lods
stos
pusha
adc
or
push
pause
mov
xchg
and
add
decb
mov
stc
out
push
and
sub
ja
cmpsl
xchg
xchg
daa
sarb
cs
out
stos
dec
loop
stos
dec
ja
jle
dec
out
sarb
lea
aas
arpl
jnp
out
cmc
xorl
sbb
clc
cmp
xchg
pop
mov
popa
mov
test
mov
cltd
popf
imull
dec
test
add
cmc
dec
insb
mov
add
pop
stc
ja
sbb
int
pop
adc
fbstp
mov
jb
insb
add
arpl
inc
pop
or
gs
sbb
sbb
out
pop
mov
popa
ret
out
fists
jb
nop
adc
and
cmp
mov
jbe
ds
adc
sub
fidivs
xor
shll
push
cmpsb
mov
jnp
stc
lods
push
js
stos
xchg
out
or
daa
cmp
stos
std
mov
shr
int
jnp
dec
inc
stos
push
pop
fs
mov
pop
movl
pop
fnstcw
push
outsl
sub
rorl
sbb
mov
imul
ss
je
xchg
push
pop
add
jmp
jl
loopne
daa
cli
test
fidivrl
rcrb
or
cltd
cmp
or
adc
mov
in
jmp
hlt
ret
adc
push
push
or
scas
xchg
pop
ret
fsubp
mov
or
xor
xchg
insb
popa
test
lds
clc
or
gs
ret
sbb
push
or
sub
nop
jae
jmp
jne
pop
dec
jne
jne
insb
pop
push
fcompl
ret
mov
pop
fwait
dec
xlat
lcall
cwtl
mov
out
lcall
sbb
cmovno
lahf
stos
in
mov
outsl
pop
push
mov
arpl
pop
add
das
pop
std
mov
xchg
and
jb
jmp
xchg
adc
ss
xor
into
push
or
outsb
mov
jbe
cmp
fcmovnbe
xchg
je
pop
stc
jbe
mov
sbb
or
hlt
stc
imul
imul
dec
push
ret
cmc
or
lds
imul
and
push
les
adc
lcall
iret
addr16
pop
xchg
mov
adc
in
sbb
and
add
push
xor
inc
and
stc
mov
lods
addr16
push
clc
cld
loopne
mov
inc
add
xor
sbb
pushf
into
mov
or
call
mov
aam
xchg
mov
adc
loope
roll
jge
mov
xor
xchg
jno
fcom
add
ljmp
subb
mov
ds
fisttpll
push
add
inc
adc
loop
roll
fiadds
std
mov
push
movsl
xchg
mov
mov
ret
mov
test
add
lret
movsb
cmpsb
lock
add
bound
aas
pop
dec
inc
ja
xchg
cs
push
rorl
repnz
push
inc
jnp
movsw
mov
pushf
xlat
mov
notb
mov
mov
add
push
sub
in
in
stc
sub
add
sub
xchg
in
aaa
jl
cmpsl
and
outsb
jg
data16
or
push
mov
or
fbld
mov
aam
outsl
add
call
xchg
movlps
xchg
sub
fists
adc
lods
mov
cmpsb
dec
push
xor
push
xor
lcall
xchg
stos
jl
ds
shlb
mov
add
xchg
nop
inc
test
adc
adc
cltd
stos
stos
mov
aam
es
outsb
adc
pusha
nop
mov
fstps
in
pop
add
cli
add
fldcw
les
mov
popa
mov
or
push
and
mov
repnz
cmpsl
imul
sbb
adc
cmp
pop
add
inc
movsb
lods
dec
jecxz
cwtl
add
or
mov
ret
pop
or
add
and
arpl
sub
push
jmp
pop
ret
lods
aas
sbb
jg
xchg
rorb
jmp
pop
in
sbb
cs
cmp
leave
xchg
ljmp
in
jnp
dec
aad
inc
mov
es
divb
leave
mov
test
push
sahf
push
mov
test
push
push
test
push
das
daa
fdivrl
lret
xchg
fidivs
mov
dec
push
adc
sti
lahf
out
lret
and
add
sbb
xchg
lds
fcomip
cmp
adc
shl
jnp
mov
fldt
add
mov
negl
inc
push
push
jge
repz
les
jnp
cmpsl
dec
add
xlat
movsb
sub
jl
in
or
and
push
out
mov
lea
jne
add
out
pop
adcb
adc
mov
mov
add
pusha
iret
xlat
sub
aam
arpl
jmp
fstl
arpl
mov
daa
add
movsb
xchg
lds
cltd
test
mov
shl
cli
lahf
in
into
or
lahf
mov
xchg
bnd
or
adc
fstpt
adc
cmpsb
cmp
and
dec
inc
xchg
pop
inc
xchg
in
or
xchg
mov
inc
mov
popa
jmp
sbb
xor
sub
push
out
mov
lahf
cmpsl
arpl
in
daa
or
les
mov
cmp
pop
shrb
jae
inc
inc
mov
xchg
and
xchg
movsl
mov
or
lea
nop
enter
sub
inc
adc
scas
je
es
cltd
push
xchg
dec
aad
xchg
sbb
addl
sub
adc
xor
dec
mov
stc
adc
sbb
xor
sub
insb
inc
mov
dec
pop
mov
or
fdivrl
test
xchg
out
mov
outsl
out
inc
movsl
scas
push
pop
clc
ret
and
aaa
inc
pop
pop
fld
or
mov
stc
imul
mov
or
xor
mov
movsb
mov
enter
fstpt
pop
xchg
push
mov
pop
hlt
cmc
fbstp
imul
pop
xor
outsb
dec
cld
mov
jae
and
cmp
jb
xor
dec
push
shrl
or
subb
loope
popf
out
test
icebp
orb
or
push
es
cwtl
cs
mov
mov
mov
shll
aad
femms
rcl
les
add
aas
adc
clc
shll
sbbb
scas
mov
out
stc
and
test
or
sbb
fwait
shr
cs
jo
outsl
pop
push
inc
xor
mov
imul
cmp
test
xor
jae
dec
sub
out
jl
gs
movsl
dec
out
add
repnz
test
fisttps
mov
in
out
sub
stos
mov
pusha
pop
daa
in
add
cmpsl
mov
dec
lock
mov
gs
lcall
push
jle
mov
lods
aam
mov
cmp
je
xchg
push
cmp
add
and
mov
xor
mov
in
shlb
test
sbb
in
aam
mov
pop
jp
and
jge
fbstp
ja
out
pop
jns
pop
test
ss
icebp
jmp
in
ficoml
pop
xchg
rclb
mov
sbb
leave
dec
inc
cmpsb
pop
addl
int3
out
mov
jmp
mov
test
or
mov
loope
stos
mov
push
icebp
cmp
mov
test
push
aad
dec
cwtl
xor
sub
cld
and
add
or
ss
pop
cmp
ds
mov
pop
fldl
cmp
in
rcrb
xchg
lods
push
dec
aam
cltd
cmpsb
fadds
mov
or
jmp
mov
ficomps
stos
push
sbb
xchg
push
dec
cmc
inc
sub
add
mov
out
aas
jno
stos
lret
stos
je
push
mov
sarb
pushf
push
dec
lea
mov
add
xchg
jns
mov
mov
xor
push
decl
stc
nop
out
aas
push
mov
xchg
jmp
ficompl
cmp
cmp
js
jnp
sbb
outsb
mov
andb
xchg
mov
pusha
ljmp
mov
xchg
stos
idiv
pop
add
mov
daa
dec
xor
jae
xor
aas
mov
and
iret
xchg
mov
frstor
cmp
call
fdivrl
mov
pop
cs
dec
jmp
les
dec
decb
push
xor
insb
cltd
aad
mov
lds
movsb
pushl
fldt
sarl
out
aad
cmpsb
and
and
jo
rcrb
and
pop
sahf
das
mov
dec
xchg
sub
stos
and
sub
jge
mov
or
cs
pop
enter
int
stc
adc
pop
mov
nop
rcl
jbe
mov
stos
xchg
ja
mov
rcll
aam
pop
mov
loopne
jne
inc
pop
and
pusha
ficompl
call
outsl
imulb
das
ds
adc
andb
es
push
mov
div
loope
xchg
aad
mov
pop
cs
adc
push
xchg
sub
or
daa
sbb
xchg
sub
gs
test
push
jg
dec
mov
mov
push
popf
mov
inc
mov
push
mov
adc
in
inc
fnstenv
adc
imul
cmp
dec
inc
sbb
or
loop
mov
rcrb
xchg
or
sub
shl
and
pop
cmp
and
mov
out
mov
jg
dec
fs
jmp
lods
cltd
jae
xor
mov
mov
push
imul
imul
aam
fcoms
insl
pop
or
jle
testb
outsl
mov
mov
or
imul
sbb
inc
or
shl
mov
leave
push
jne
call
or
mov
es
jg
mov
in
xchg
out
mov
sub
xchg
sahf
mov
jle
test
addl
or
outsl
jmp
dec
push
es
xchg
sbb
subl
mov
dec
sahf
fstl
mov
push
shrl
jns
pop
adc
orl
mov
je
fistpl
mov
loopne
frstor
sub
xor
and
xchg
mov
imul
push
xlat
cmpsl
mov
sub
out
faddp
sbb
lret
jecxz
rol
add
faddl
mov
dec
outsb
repz
insl
push
xor
outsb
les
enter
in
ss
pop
lods
pop
dec
lock
pop
imul
in
out
push
jl
imul
sbb
popf
mov
cmp
xchg
cmp
pop
mov
movsl
and
sub
int
fwait
xor
int
clc
arpl
adc
pop
popa
in
inc
movsl
sbb
sbb
add
pop
movsl
jae
adc
fidivrs
mov
mov
dec
into
mov
fiadds
fwait
jecxz
es
pusha
mov
mov
fiadds
rcrb
das
push
sub
and
dec
and
pop
xchg
sub
in
inc
push
add
popf
jae
iret
fwait
cmp
and
mov
fisttpll
mov
dec
dec
jo
outsb
cmp
sub
insb
scas
subb
push
inc
inc
cmpsl
loopne
cwtl
scas
pop
mov
mov
adc
adc
dec
aas
mov
lods
hlt
les
mov
dec
mov
jecxz
sub
push
xchg
mov
popa
cld
cmp
loope
and
jnp
jge
clc
inc
cli
xor
ret
aam
pop
outsl
dec
or
imul
and
and
mov
cmp
inc
sub
es
push
notb
bound
jne
fucomi
insl
jnp
jle
push
adc
icebp
add
xlat
aam
pop
out
dec
inc
push
inc
jmp
nop
out
dec
in
mov
sahf
in
aad
testb
adc
cmp
inc
lret
push
cld
pop
imulb
xchg
dec
dec
sbb
aas
pop
insl
orb
mov
imul
jns
mov
popa
es
push
adc
xchg
push
dec
fs
lahf
pop
rcll
nop
cmpsb
loope
stos
push
xor
out
sti
movsl
inc
nop
mov
push
orb
sub
outsb
lds
maskmovq
idivl
jno
repz
mov
fwait
lret
negl
jl
sbb
jle
jb
xchg
xchg
or
je
mov
add
pop
mov
fnstenv
xor
mov
jo
adc
lock
sub
cmp
cld
test
inc
jbe
mov
out
leave
pop
lcall
test
jp
pop
dec
rorl
test
dec
cmc
test
push
loop
lret
scas
addl
lds
mov
xchg
adc
aaa
jmp
call
int
das
bound
mov
out
stos
inc
xor
dec
sbb
sbb
sub
push
imul
std
mov
and
sbb
pusha
pop
xor
sarl
mov
shrb
push
mov
xchg
cmc
aam
insb
adc
in
arpl
and
and
dec
dec
sub
xor
and
xor
fwait
mov
dec
xor
jle
fwait
movsb
mov
pop
mov
fidivrs
leave
push
sbb
push
fs
cmp
push
cmpsb
mov
jle
inc
pop
scas
cmc
dec
pushf
mov
testb
add
push
dec
insl
lods
adc
cmp
inc
and
push
and
out
xor
lea
std
dec
xchg
mov
aad
loope
iret
jo
gs
lret
or
inc
add
iret
loop
push
lahf
mov
xor
dec
or
je
dec
xchg
loopne
dec
mov
scas
cmp
cmp
jle
faddp
movsl
cmpsb
jge
xor
lret
jns
push
xor
mov
mov
stos
roll
js
sbb
and
addr16
pop
cmc
pop
js
test
in
push
jbe
clc
test
mov
fildl
xchg
arpl
call
jnp
ss
out
mov
push
mov
out
enter
sbb
sbb
hlt
add
fdivrl
jno
dec
push
inc
fdivrp
dec
in
icebp
add
push
jle
jle
stos
inc
repnz
or
aad
dec
cmpsl
cmp
mov
jge
inc
je
jecxz
cmp
outsb
sahf
mov
and
imul
push
xchg
sub
sub
cmp
jnp
xchg
int
jno
sbb
mov
shll
mov
xor
sub
into
daa
xchg
mov
xlat
mov
inc
out
dec
xor
and
mov
ljmp
fcomps
lds
cltd
sbb
gs
insl
or
pop
or
or
jb
xchg
sbb
xor
pop
ds
dec
xchg
jecxz
popa
outsl
cmpsb
jg
inc
mov
movsb
test
popf
jbe
fs
cmp
dec
lret
push
arpl
into
ret
add
in
js
imul
leave
lods
ret
mov
ljmp
insb
cmp
sbb
mov
std
xchg
dec
ret
push
out
push
pop
dec
andl
mov
mov
stos
test
xor
mov
dec
dec
jmp
jecxz
out
jnp
lods
push
xor
arpl
dec
jecxz
xchg
popa
divb
sbb
push
sbb
xchg
iret
jbe
mov
pop
inc
push
mov
pop
in
mov
loop
fcmovbe
cmp
iret
lock
mov
outsb
or
loop
sbb
popa
sub
outsl
ds
sti
xchg
push
mov
sbb
push
pusha
pop
cmp
lods
out
dec
sbb
jne
int3
lods
movsb
mov
pushf
scas
cwtl
inc
movsl
fimull
xchg
adc
mov
sub
or
fwait
mov
mov
dec
loop
stos
arpl
insl
aam
or
ljmp
jbe
sub
inc
xchg
idivl
pushf
aaa
jle
repz
cwtl
les
icebp
insl
push
or
push
adc
out
cld
xchg
and
in
mov
lock
aam
loop
lret
daa
mov
pusha
out
call
outsb
and
xor
xchg
sbb
out
cmp
dec
jnp
mov
add
ja
push
xor
dec
ds
mov
es
addr16
jmp
lea
clc
add
shl
sbb
adc
in
xchg
push
iret
mov
cmp
ret
shl
push
add
stos
sbb
call
jnp
cld
sub
mov
pop
bound
cli
movsb
and
daa
xor
or
jmp
sbb
add
lods
inc
mov
repnz
sub
pushf
test
dec
hlt
sarb
mov
aam
aas
pop
xor
and
sub
jno
call
xchg
cld
mov
pop
mov
mov
cmp
negb
pusha
xor
add
flds
aad
inc
shlb
pop
rclb
cmpsl
test
ja
mov
push
outsb
pop
inc
or
push
insl
stos
jl
mov
in
jbe
push
out
add
xor
ss
in
sbb
jg
xor
jle
xor
sub
inc
and
jne
insl
and
xor
dec
movsb
out
inc
rorl
pop
hlt
ror
stos
movl
pushf
pop
in
xor
mov
outsl
fists
mov
cmp
or
xchg
icebp
addr16
inc
incl
es
dec
push
mov
xchg
cmc
mov
test
adc
scas
push
xchg
rclb
mov
arpl
sahf
std
xchg
in
mov
jle
ss
or
inc
adc
ja
in
cmp
insl
pop
or
fucom
aam
rolb
xchg
decl
sbb
flds
pusha
ljmp
push
aad
mov
cmp
sbbl
mov
jl
xor
loope
xor
and
test
xchg
inc
mov
push
cmp
jge
xchg
sbb
je
xlat
xchg
rcll
xchg
std
jecxz
jle
sti
cmc
dec
rcl
orb
push
shll
and
mov
scas
add
mov
push
fsts
in
pusha
push
push
or
dec
cmp
stc
cmpsl
push
inc
daa
mov
and
jns
push
mov
push
fwait
je
pop
add
jp
dec
jae
cwtl
push
xchg
dec
mov
test
sub
es
add
into
fmull
shl
pop
test
xchg
out
xchg
push
call
mov
push
inc
pop
add
scas
arpl
pop
lods
sbb
mov
xchg
or
sahf
aaa
cld
jl
dec
inc
pop
enter
add
push
dec
mov
jno
test
push
push
add
adc
das
sbb
cltd
imul
lods
out
sub
and
bound
fs
sbb
jns
push
sub
cmpsl
imul
xchg
std
aas
lret
cmp
nop
sub
mov
lret
mov
lcall
aas
and
roll
add
js
mov
sbb
sti
xchg
and
cmc
xchg
sub
faddl
cmp
dec
lea
test
call
mov
adc
push
cmp
jge
sub
call
ficoml
inc
lcall
inc
rcll
ds
outsb
inc
xchg
lahf
dec
mov
push
xor
push
xchg
decl
sbb
pop
mov
iret
xorl
mov
mov
cwtl
stc
decb
push
push
jmp
orb
cmc
call
in
mov
xor
sub
pop
ret
mov
lahf
push
ds
fimuls
adc
xor
ffree
aaa
inc
clc
out
movb
xchg
xorl
dec
lds
stos
mov
and
stos
add
mov
and
adc
mov
fstpl
jns
or
notl
lret
lahf
call
xchg
push
mov
outsl
sbb
jmp
xor
jecxz
push
sarb
es
negl
mov
push
dec
lret
add
adcb
enter
loop
pop
sarl
adc
mov
xor
add
cmp
in
shlb
shll
and
cmp
cmpsl
mov
out
sub
jg
dec
out
mov
clc
and
cmc
jmp
push
adc
cmp
pop
mov
mov
les
xor
loop
faddl
mov
push
mov
cli
mov
cmp
and
mov
das
leave
test
flds
add
inc
or
cmp
test
mov
stos
loop,pt
lds
xor
movsl
jne
jl
popf
adc
push
xchg
aas
inc
rcrl
fstpl
ret
pop
fcomip
push
shrl
imulb
rcl
pop
sub
into
dec
pop
xchg
ss
repz
leave
in
sbb
das
in
mov
add
test
mov
jp
lcall
outsb
shll
dec
push
cmp
sbb
push
fcomps
loopne
push
mov
scas
cmp
push
rorl
arpl
loop
int
push
lock
mov
or
aam
sbb
adc
mov
mov
aad
pop
test
aas
aam
or
sub
add
lods
mov
fwait
adc
mov
sti
rcll
cmp
sbb
xchg
pop
and
daa
ds
push
scas
dec
jbe
cli
int3
dec
leave
test
rcrb
dec
rcl
cmp
or
mov
enter
and
fsubrl
pop
arpl
cli
add
push
or
dec
aad
loope
mov
mov
fwait
incb
ret
adc
imul
es
mov
pop
popa
lcall
dec
fstpl
insb
sbb
aaa
mov
dec
int3
loope
jnp
or
inc
push
scas
or
push
int3
or
popf
jl
das
aam
jo
fsts
mov
test
mov
jl
jecxz
inc
mov
aad
mov
movl
cmpsl
sbb
scas
mov
int3
test
jbe
fildll
fs
clc
xchg
push
inc
adc
mov
jecxz
mov
mov
inc
sbb
loop
mov
push
call
outsl
add
push
sbb
dec
push
xor
dec
mov
sbb
sbb
test
push
mov
mov
jecxz
mov
icebp
mov
es
dec
pop
cmp
add
orb
cli
fcompl
mov
lods
fcmove
rcl
gs
jb
xchg
mov
jne
outsl
lret
repz
addl
xor
xor
xor
push
ret
subb
mov
mov
lea
div
jp
xor
or
xor
aam
adc
pop
into
dec
sbb
mov
or
xor
mov
inc
stos
and
lea
inc
dec
xchg
mov
mov
lcall
jge
cmp
dec
mov
test
lcall
cli
aaa
gs
not
test
dec
test
cmp
ret
aas
xchg
lret
outsl
or
or
lahf
mov
leave
push
inc
sbbb
sbb
mov
jge
pop
out
into
stos
jmp
mov
xor
xchg
and
out
aam
xor
pop
icebp
push
mov
push
jmp
aad
push
clc
pop
test
test
iret
das
mov
dec
outsb
cmpsl
ret
imul
cmc
pusha
jmp
ret
jle
or
lds
mov
repnz
cmpsb
loope
dec
push
and
ds
xorb
cmp
data16
push
cmp
in
sub
jg
mov
jmp
rclb
cld
dec
push
or
mov
jle
arpl
pop
inc
mov
mov
mov
xlat
push
dec
adc
sbb
mov
jge
jae
jge
jnp
mull
cmpsl
mov
mov
adc
jge
or
inc
cwtl
call
mov
addr16
mov
xor
addr16
and
push
lds
and
es
mov
inc
pop
or
fst
xor
mov
adc
cmpsl
ja
je
dec
pop
hlt
in
sbb
and
adcb
mov
bound
dec
jg
xor
dec
imul
sub
inc
aaa
cmp
inc
lret
xchg
and
lahf
sub
sbb
lret
sub
fsubrs
in
jae
and
jp
fbstp
adc
ss
xor
lds
inc
js
lahf
sbb
test
dec
scas
xchg
pop
jg
cmc
xchg
jg
loope
outsb
jmp
insb
and
sub
jno
lods
stc
mov
xchg
cmp
inc
sarb
push
pop
das
shlb
pop
lds
pop
ret
cmp
push
icebp
mov
dec
jmp
add
jne
and
repz
push
mov
mov
test
jnp
in
pop
sbb
daa
push
icebp
movsb
jecxz
lds
inc
aam
mov
cmc
lret
dec
jmp
sbb
fsubs
outsb
stos
movsl
cli
push
sub
jg
into
xor
xor
or
push
aad
ss
jl
xor
int3
xchg
fists
arpl
xor
faddl
das
jp
sub
sarl
push
and
popa
xchg
mov
inc
jno
fsubl
and
cwtl
pusha
movsb
arpl
mov
pop
add
and
inc
xchg
shlb
shlb
push
jmp
out
imul
nop
xchg
shlb
sub
fidivs
imul
fs
mov
mov
adc
jmp
fcomp
push
and
std
dec
fwait
daa
jns
pusha
scas
into
push
ret
fwait
push
mov
fsubrs
dec
pop
cmp
dec
scas
xor
adc
cmpsb
sbb
jns
mov
mov
loop
fisubrs
mov
fs
imul
xchg
in
nop
mov
dec
stc
scas
loop
dec
pop
fisubl
lock
push
add
and
xor
data16
lret
and
pop
movsb
imul
push
xlat
mov
movsb
fmuls
shlb
scas
js
jl
lahf
jecxz
cld
or
mov
in
jae
and
push
and
cld
sub
fs
or
mov
cmp
mov
mov
lcall
xor
xchg
adc
ret
push
dec
push
sahf
xchg
adc
mov
imul
push
stc
jmp
sbb
lea
push
adc
cmp
lds
fwait
pop
ficomps
jl
roll
or
pop
add
or
push
pop
add
add
adc
dec
je
pop
lock
and
add
dec
test
xor
push
out
jne
movsb
mov
scas
and
pop
jle
je
mov
fcmove
loop
outsl
lret
lods
jecxz,pn
ret
mov
int3
das
mov
loopne
xor
lret
dec
pusha
jle
cmpsl
ret
xor
ficomps
adc
arpl
push
adc
pushf
rcrb
pop
lea
cltd
test
xchg
add
int3
aaa
inc
sub
lds
mov
and
into
mov
dec
pop
mov
xchg
bound
and
lock
gs
mov
into
daa
pop
insl
jns
js
cmp
mov
pop
rorl
mov
stc
rcrl
arpl
lahf
dec
scas
inc
fld1
daa
jb
inc
outsb
loop
sub
pop
ja
mov
inc
fwait
orb
out
rcrl
sarl
fimull
ja
mov
fwait
test
js
clc
sar
fcmovnb
repz
mov
ljmp
icebp
push
or
inc
inc
push
push
sub
bound
lahf
dec
leave
push
jmp
mov
movsb
das
xor
fsubrl
sub
inc
push
pop
stc
or
repnz
inc
inc
fisubrs
lret
data16
testl
and
ret
push
xor
cmpsl
pusha
add
mov
xor
lods
sbb
push
sub
dec
pop
gs
ret
out
stos
daa
cmp
orl
fwait
cmp
into
loop
pop
mov
ret
push
lods
das
push
mov
ljmp
pop
daa
sbb
orl
inc
arpl
push
int
jmp
out
sbb
inc
or
js
inc
aas
sbb
mov
hlt
jne
mov
push
or
cmp
cmp
lcall
leave
popa
scas
fistl
dec
cmp
push
js
pop
loop
xchg
jns
int
sub
or
incb
dec
jbe
mov
jnp
ror
push
xor
stc
in
jle
cmp
in
dec
pop
les
mov
flds
or
jo
test
xchg
mov
test
mov
xor
mov
pop
mov
fimuls
popa
les
mov
inc
testl
imul
mov
aad
cmp
test
lcall
loop
or
aas
cmpsb
xor
imulb
mov
int
test
jmp
mov
mov
jge
cmp
pushf
add
push
xchg
popf
loop
and
in
and
push
pop
movb
sarl
add
cwtl
jmp
shlb
pop
mov
imul
fistpl
cmp
fsubrl
inc
xchg
push
jp
out
les
hlt
stos
pop
insb
test
lahf
pop
shl
sub
mov
in
push
dec
out
cltd
mov
sbb
inc
sbb
es
test
sbb
push
test
xor
mov
xchg
mov
mov
mov
pop
xchg
scas
test
cmpsb
fsubs
lcall
sbb
lods
or
dec
sbb
add
out
push
or
xor
jge
cmp
ffree
xchg
arpl
fcoms
pop
push
in
and
adc
dec
xchg
lcall
push
pop
xchg
dec
test
push
data16
jno
add
adc
cmpsb
mov
mov
roll
imul
inc
pop
or
imul
adcl
cli
test
lret
daa
std
mov
stos
mov
jmp
xchg
loop
add
push
mov
rcrb
sub
xchg
ret
xchg
cmp
lock
cld
daa
jge,pt
cmp
aas
adc
cmc
movsl
nop
mov
les
lahf
movsl
nop
push
xor
pop
frstor
mov
lcall
push
aas
xchg
push
daa
adc
inc
lret
out
or
and
xchg
scas
xchg
aas
sbb
push
cld
testl
adc
leave
cmpsb
sahf
pop
lods
test
mov
insl
pop
sub
imull
xor
int3
sub
sub
mov
and
les
mov
cmp
mov
mov
push
push
mov
sbb
sbb
mov
xor
iret
and
scas
sub
fcomps
aad
lcall
daa
mov
out
jbe
repz
aad
pop
jge
arpl
xchg
push
inc
je
testb
scas
push
push
xor
bound
inc
jb
dec
loop
jge
dec
xor
mov
or
xchg
ret
mov
or
push
mov
push
sbb
pop
xchg
sbb
ja
dec
mov
adc
addr16
das
jb
pop
pop
mov
scas
jle
sti
pop
mov
add
cmp
dec
xor
dec
inc
in
loope
push
xchg
dec
mov
push
mov
pop
and
inc
lret
sub
inc
push
mov
cltd
arpl
stos
dec
and
adc
test
inc
sub
sbb
push
xchg
sbb
sbb
es
and
push
stos
not
out
int
adc
aaa
sub
aas
sbb
leave
mov
int3
mov
cltd
loope
xor
add
test
pop
clc
ret
or
dec
mov
jle
sbb
out
cmp
loop
inc
ljmp
mov
pop
repz
push
dec
pop
jg
xchg
aaa
or
aam
push
lret
push
out
cmp
push
inc
scas
popf
inc
cld
pop
dec
mov
jnp
mov
add
fmulp
cmc
and
arpl
lock
je
pop
lods
in
add
adc
fistpll
daa
mov
and
inc
loopne
sahf
popf
xlat
add
cmp
sti
cmp
sbb
and
xor
pop
inc
in
psubb
and
shlb
sti
mov
fbld
sbb
mov
pop
daa
cmp
pop
fistpl
push
push
incb
jo
mov
mov
loopne
in
add
andl
shrl
repnz
adc
or
and
jae
jle
jns
cmp
setl
iret
xchg
mov
sub
adc
pop
jecxz
cmpl
lods
cmc
xchg
push
jbe
jg
sub
inc
push
js
shl
pop
in
fsubs
imul
and
inc
cltd
es
sub
mov
dec
sbb
jl
addr16
inc
cmpb
push
mov
test
adc
incb
mov
int
xor
idivb
add
and
sahf
or
sbb
cmp
or
xor
mov
adc
or
mov
call
inc
aas
xlat
sub
dec
and
test
clc
inc
add
xchg
mov
cld
testl
jne
pop
das
jae
adc
xor
xchg
movsb
sbb
mov
std
inc
jge
sbb
arpl
js
push
add
mov
mov
jae
lods
add
gs
and
dec
mov
stos
outsb
adc
or
addr16
test
mov
add
dec
xor
cmp
and
add
sbb
jae
lds
push
jmp
in
out
mov
mov
adc
stos
dec
pop
and
cmp
repnz
push
mov
pop
jns
je
loopne
add
ds
in
popa
jne
es
lcall
pusha
dec
pop
xor
daa
in
add
and
iret
sub
dec
inc
aas
push
sbb
lahf
ret
das
inc
dec
fcmovnu
daa
bound
pop
clc
mov
lret
sbb
push
pushf
dec
pop
cmp
and
ja
push
pushf
sahf
pop
pop
lea
sub
aas
fsubrs
out
sarb
mov
lret
inc
sub
push
mov
mov
lods
push
addb
stos
dec
sbb
jnp
and
adc
into
push
out
js
into
mov
in
dec
fld
jg
negl
jmp
inc
jmp
sub
inc
pushf
aad
push
sub
enter
pop
loop
add
rolb
cld
in
fbld
mov
mov
rcll
mov
cltd
dec
or
or
and
add
test
mov
into
xor
xchg
outsb
add
push
adc
rcrl
pop
cmp
cmp
call
mov
xlat
lods
sbb
popl
sarl
adc
push
and
mov
sbbb
jp
mov
mov
insb
inc
mov
stc
addl
mov
stos
cld
test
inc
cli
ror
stos
mov
orb
loopne
jg
mov
js
cli
pop
pushf
xchg
push
movsb
xorb
cmpsl
and
fcmovb
push
mov
or
out
adc
scas
add
adc
jle
shl
pop
push
add
int
les
hlt
adcb
lds
test
loop
mov
inc
sub
insl
pop
stc
jp
stos
es
insb
ret
dec
xorb
xchg
sbb
mov
xor
mov
es
cmc
leave
fwait
test
sub
sbb
loopne
sub
lret
lea
or
mov
lahf
icebp
loope
xor
loop
in
cli
in
inc
cmp
mov
adc
aam
sub
jnp
push
dec
popa
fsubl
jb
sub
and
popf
in
clc
add
sbb
push
add
es
ror
es
mov
scas
repz
ret
inc
sti
mov
push
imul
in
in
ja
jecxz
xor
in
jl
sub
test
and
or
cmp
adc
xlat
stos
out
jae
rorl
dec
mov
and
andl
and
fnstcw
test
test
movsl
pop
int3
sbb
cmovl
sti
or
mov
pop
mov
add
push
push
leave
cmp
mov
adc
aas
das
xchg
xor
hlt
push
roll
cmp
fiaddl
mov
test
mov
sbb
sub
sbb
jecxz
xchg
pop
dec
insl
xchg
ret
dec
mov
mov
push
push
fcomip
and
push
and
sub
adc
out
cli
ja
inc
push
adc
mov
xor
gs
iret
and
sbb
xor
cmp
ror
mov
and
pusha
sub
dec
je
imul
mov
xchg
fisttpll
or
xchg
pop
cld
pop
ja
inc
out
lahf
mov
cld
inc
addb
scas
add
lds
and
mov
mov
push
push
mov
popf
sbb
cltd
mov
xor
outsl
leave
jb
in
mov
push
lea
int
xor
imul
popf
jecxz
imul
leave
xchg
sub
js
imul
cwtl
jb
bound
mov
mov
push
test
dec
test
in
jo
fcmovnu
mov
pop
ret
mov
test
fisttpl
pop
mov
arpl
sub
mov
testb
pop
mov
push
shll
in
push
sub
xchg
xor
mov
pushf
and
lods
inc
in
fisubrs
lcall
call
outsl
pop
adc
xor
cmp
out
pop
cli
ds
dec
pop
arpl
leave
sub
sub
jle
inc
xchg
inc
out
icebp
inc
es
push
push
push
loopne
adc
iret
aam
dec
imulb
cli
jp
sbb
sub
xorb
inc
add
fcomip
add
mov
push
or
shrl
inc
cli
mov
cmc
ret
pop
in
clc
fildl
dec
cmp
xor
aas
sub
add
mov
call
mov
sbb
ret
fldt
es
pushf
lock
outsb
inc
mov
sar
call
pop
dec
test
cli
cmp
cmp
xlat
mov
lea
addb
into
mov
jbe
mov
adcb
pop
or
jae
xor
rorl
icebp
xlat
lock
icebp
dec
cmp
incl
addb
mov
dec
sub
repnz
pop
xchg
nop
adcl
cmpsl
and
xchg
out
repz
shll
dec
xchg
mov
jle
fmull
jecxz
int3
mov
mov
mov
mov
inc
mov
loopne
dec
stos
push
bt
adcl
imul
adc
fcmovnu
loopne
jle
mov
xchg
aad
adc
mov
mov
jl
subl
imul
lods
dec
pushf
popl
cltd
push
dec
push
cmpsb
cmp
mov
adc
pop
dec
popa
jecxz
in
popf
sahf
jmp
sbb
in
mov
mov
xchg
jp
push
xchg
mov
sub
adc
mov
fisubs
iret
xchg
dec
fistl
iret
data16
sub
mov
dec
lret
push
rcr
push
xor
dec
jge
int3
aad
dec
sub
pusha
insb
lcall
inc
inc
loope
repnz
mov
arpl
pushf
loopne
sbbb
sbb
xchg
and
adc
roll
mov
mov
inc
jg
mov
sub
mov
in
pop
arpl
jecxz
pop
popf
sub
pop
arpl
cli
jmp
sbb
insl
out
fnstcw
push
imul
fidivrl
popa
movsb
push
ds
bound
xchg
mov
popf
jle
movsl
in
and
scas
out
cmp
push
xor
test
mov
subb
scas
cmp
fdivs
add
dec
mov
in
orl
aas
arpl
lea
pop
lcall
mov
push
mov
xor
push
push
xchg
dec
xchg
test
xchg
mov
mov
dec
or
pop
ljmp
outsb
xchg
dec
stos
inc
clc
data16
idiv
popa
int
test
sub
jg
pop
je
mov
fs
mov
xchg
cwtl
lahf
adc
xor
ret
ss
aad
enter
imul
push
mov
push
mov
push
sti
push
cmp
std
adc
or
jae
xor
je
sbb
mov
test
pop
iret
out
push
mov
inc
fwait
push
dec
mov
add
or
xchg
and
push
xchg
mov
dec
lahf
push
sub
xchg
adc
xorb
sub
dec
jmp
cwtl
mov
inc
scas
inc
mov
fmul
sbb
mov
ds
inc
push
imul
in
call
int
push
add
xchg
ds
out
fisttps
sub
ret
daa
sbb
popf
es
popf
sub
fs
std
and
mov
rorl
out
das
xchg
mov
test
xchg
shlb
xchg
push
fsubrl
or
inc
outsb
fimuls
push
xchg
pop
adc
xchg
into
mov
add
cmp
add
pusha
ret
shlb
call
mov
inc
ds
adc
iret
mov
mov
in
hlt
aaa
pop
push
aaa
push
mov
mov
jns
js
repnz
popa
mov
xchg
jo
adc
mov
filds
push
jmp
adc
test
xor
cld
cli
addr16
sbb
inc
push
lds
adc
lods
rcll
xchg
cmpsb
fstps
lcall
or
popa
xor
sbb
mov
fwait
mov
aas
jge
mov
int3
hlt
lods
mov
aad
xchg
jns
fnclex
in
add
bound
jae
sbb
pop
ja
mov
adc
mov
out
leave
push
sub
adc
cmp
pop
mov
pop
inc
lods
or
push
scas
rorl
fildl
xor
add
cltd
xchg
nop
inc
std
pop
pusha
or
dec
rorb
or
iret
ds
mov
dec
mov
pop
sti
arpl
fwait
lcall
jnp
inc
cltd
insl
push
or
lret
jg
aad
mov
stc
lea
adc
aad
cmp
lock
pusha
fs
daa
roll
xchg
repz
pop
movsb
loope
sahf
xchg
aad
ja
imul
sbb
mov
push
cmp
mov
jle
pop
add
rorb
jg
pop
mov
sbb
mov
nop
or
cmc
out
cmp
fbld
push
test
mov
mov
sub
sbb
in
sbb
testb
push
adc
mov
mov
sub
mov
lret
lahf
movsl
in
sub
mov
imul
mov
icebp
cmpsl
pusha
repnz
or
popa
add
push
in
sahf
mov
jp
fwait
mov
cmp
test
push
dec
inc
push
pop
jne
sub
addr16
add
pop
push
xchg
push
fdivs
jp
pop
and
cmp
into
addr16
xchg
pop
pushf
fwait
sti
xor
movsl
mov
lahf
dec
test
test
sar
enter
mov
inc
pop
xorb
ficompl
mov
push
fs
enter
in
sbb
fisttpll
sbb
outsl
mov
data16
mov
cmpsl
stos
in
out
lea
and
stos
mov
inc
cld
lret
and
stos
js,pn
in
shll
sub
sbb
clc
cltd
xchg
js
jae
loopne
jl
or
or
into
jle
add
push
data16
scas
mov
lods
cmp
inc
incl
cli
cmp
fstpt
das
xchg
lea
xchg
mov
mov
setns
push
jge
test
imul
inc
mov
imul
roll
push
pop
or
ds
sub
ds
push
pushf
mov
cs
or
lock
push
and
pop
push
out
jmp
mov
dec
sbb
mov
adc
inc
dec
test
in
mov
sbb
xor
cmp
add
repz
jnp
int
popf
push
xchg
add
or
xchg
push
insb
add
sbb
aas
mov
inc
mov
pop
pop
testb
cmpsb
push
in
push
sbb
js
daa
adc
lods
stos
mov
inc
decb
jmp
push
nop
sbb
mov
test
xor
lods
adc
mov
add
daa
rorb
mov
into
push
ficomps
lods
shll
scas
ds
mov
mov
rcrb
fldenv
dec
ret
push
sbb
repnz
cmc
mov
add
ror
fisttps
sti
jae
xor
push
mov
push
popa
fstpt
aad
pop
ja
xchg
inc
aad
loop
mov
pop
ja
jl
push
and
lds
xchg
add
and
sub
daa
scas
jg
mov
lea
inc
inc
lahf
jmp
outsb
pop
adc
imul
mov
inc
add
sub
es
rcrl
sub
mov
pop
push
in
cmp
push
sub
cs
add
jo
fwait
sbb
and
fsub
andb
add
popf
bound
or
inc
andb
out
outsl
pop
fsubrp
sbbl
and
lock
pop
lods
inc
and
int
rcrl
dec
mov
sub
add
xor
cmp
cwtl
repz
cwtl
adc
xchg
loop
aas
fistps
sub
pusha
test
test
push
ficomps
int
es
lea
std
in
sub
loop
inc
or
sub
nop
out
ljmp
fisubl
mov
mov
xlat
leave
push
and
out
out
adc
sbb
xchg
xchg
adc
shlb
mov
frstor
push
fistpl
sbb
jecxz
mov
adc
mov
cmp
dec
sbb
dec
ljmp
bound
repnz
ljmp
jne
cwtl
clc
fmul
mov
mov
in
mov
and
cmpsl
shrl
incb
ret
sub
popa
xor
rcrl
ss
sbb
jnp
inc
scas
inc
into
cmp
add
jg
faddl
xchg
cmpsb
or
or
pop
pop
add
fdivl
add
push
lahf
xor
out
pop
iret
enter
mov
jb
aam
pop
inc
or
push
call
insb
stos
lock
popf
jae
or
leave
jo
adc
dec
idivl
xor
dec
or
mov
imul
pop
fisttpll
xchg
jns
sbb
mov
pop
aaa
jb
pop
or
pop
cmp
pop
lods
lcall
sbb
subb
lea
jle
xchg
fimull
out
mov
mov
add
cld
popa
sub
pop
add
push
test
pop
and
jae
cli
inc
clc
movb
in
jne
xor
or
ror
fsubrl
out
or
jnp,pn
jge
pushf
xorl
arpl
aam
sub
mov
lahf
xor
add
mov
clc
xchg
push
jb
sahf
lahf
ljmp
insl
xchg
loop
popf
dec
out
adc
cwtl
sbb
hlt
cmp
cmp
pop
hlt
mov
loop
mov
shlb
push
lea
adc
cmp
dec
out
xchg
inc
sub
scas
mov
enter
pop
mov
cwtl
or
adc
loope
das
xchg
or
test
cwtl
aad
imul
jle
ljmp
leave
aas
and
arpl
outsb
xor
cwtl
test
sub
adc
jb
stos
or
or
pop
push
roll
mov
push
inc
pop
push
pop
inc
add
add
in
call
jns
addr16
fsubrp
leave
lcall
push
frstor
call
gs
or
sbb
idivl
in
hlt
xchg
hlt
lods
fwait
sub
push
pop
cli
inc
enter
or
push
out
and
mov
add
lds
ds
repz
add
insl
xchg
icebp
lea
and
jge
mov
icebp
jecxz
sbb
ss
push
mov
inc
insb
das
mov
push
xor
int3
icebp
addb
test
push
inc
in
jle
push
pop
mov
xor
test
mov
mov
xor
inc
cs
sti
aaa
jns
repz
jmp
aas
pop
and
fadd
lret
loope
mov
pusha
mov
jae
push
or
rcll
icebp
add
test
mov
insl
xor
mov
inc
repz
stos
push
mov
or
repz
adc
sbb
lea
jo
and
flds
xor
out
pop
fsubs
mov
xchg
enter
aas
xor
push
cmp
push
gs
jge
jns
jno
fucom
push
mov
hlt
shrl
push
jp
mov
mov
test
cmp
lds
rcll
and
mov
or
jns
rolb
sahf
out
test
jbe
lods
fdivrs
clc
in
push
inc
filds
pop
popf
mov
push
ds
fcomi
cmp
out
mov
jmp
sbb
cld
mov
adc
stos
shlb
mov
shl
aaa
pop
add
add
mov
adc
pop
xor
sbb
adc
pop
out
adc
cmc
xchg
mov
mov
sbb
gs
gs
cmp
xor
lcall
mov
out
push
out
movsb
inc
rcrb
scas
mov
adc
test
mov
sbb
mov
add
sub
lds
sbb
and
jb
pop
xchg
xchg
movsb
adcb
adc
push
inc
fs
add
inc
add
or
das
inc
sub
mov
add
mov
xorl
mov
jp
movhps
stos
cmp
cs
iret
cmp
xor
jg
sahf
ds
dec
jmp
mov
push
test
fstpl
adc
int3
xor
ss
jno
jmp
shlb
adc
inc
push
movsb
xchg
jle
insl
iret
push
stc
xor
cmp
fsubrl
filds
jnp
pop
in
cltd
hlt
out
or
mov
sbb
xorb
testb
repz
sbb
cld
cmpsl
xor
lods
push
cmpl
lock
jns
imul
push
das
pop
inc
sbb
xchg
pop
cmpsb
insb
scas
mov
call
jb
add
pop
push
jb
scas
mov
nopl
push
repz
cmovns
dec
mov
xor
pusha
push
fstpt
cmpsl
pop
in
xchg
sub
cltd
push
add
daa
add
adc
add
imul
cwtl
outsl
xchg
lret
sub
mov
out
xor
cwtl
mov
sbb
dec
popf
pop
mov
add
mov
inc
mov
into
in
cmc
sub
xchg
jg
or
pop
insl
and
dec
enter
or
dec
xorb
addr16
call
rcr
mov
dec
xor
test
negl
or
xchg
repz
jp
lds
push
leavew
mov
or
sub
cld
or
cmp
cmp
add
or
mov
call
inc
rcrb
push
les
out
jle
dec
sub
loopne
push
jo
lods
pop
aad
add
push
mov
jne
mov
push
sbbl
std
sbb
push
inc
inc
icebp
xor
out
arpl
out
movsb
jge
rcll
xchg
inc
sub
scas
bound
inc
notb
mov
or
cltd
test
mov
cld
ja
cld
mov
mov
jnp
imul
fcmovb
fisttpl
cmpsl
xchg
xor
scas
or
cmpsl
adc
test
outsl
cld
pop
xchg
mov
pop
dec
les
fbld
push
xor
mov
cs
jp
in
mov
sarl
cmpsl
imul
cmp
xchg
xchg
mov
iret
mov
leave
adcl
das
cwtl
push
adc
sbb
mov
mov
cmpsb
outsl
mov
and
popf
in
xchg
sub
repz
test
xchg
iret
jmp
into
sbb
and
mov
es
mov
hlt
pushf
cld
inc
cwtl
adcb
and
clc
sub
pop
xchg
popa
xchg
jecxz
mov
mov
out
mov
daa
pop
imul
lret
jl
sbb
testl
popl
outsb
into
adc
fs
mov
and
dec
aam
xor
push
mulb
dec
dec
sbb
adc
pop
ss
cmp
cli
das
mov
fdivl
lock
bound
leave
movsl
jnp
sahf
pop
xor
xchg
xor
push
add
add
cld
lods
aas
repnz
mov
lea
pop
ljmp
addb
adcl
mov
outsl
in
mov
mov
ret
push
mov
and
iret
mov
dec
inc
cmp
jle
arpl
mull
arpl
fcmovb
cmp
or
mov
and
jnp
test
mov
cltd
mov
mov
cld
pop
jl
lods
mov
ljmp
sbb
in
scas
shll
insb
not
mov
sub
popa
cmp
jge
dec
xchg
out
sbbl
adc
loopne
and
lret
push
push
mov
cmp
mov
xchg
xor
fs
test
rorb
sub
cmp
push
clc
testb
icebp
jne
sub
mov
rclb
dec
add
xchg
scas
orb
mov
add
jg
push
cmpsl
xchg
sub
add
orl
fwait
xchg
jae
rorl
push
mov
cmpsl
mov
hlt
and
pop
adc
not
fbld
jbe
repnz
mov
imul
rolb
mov
inc
mov
pop
push
sbb
pop
dec
loopne
ret
mov
insb
xchg
lahf
in
pop
cmpsb
mul
xchg
sbb
inc
movsb
mov
test
cltd
into
ljmp
cmp
mov
notb
push
cmp
lcall
and
fnstsw
test
lods
adc
lahf
cmpsb
into
cwtl
inc
push
xchg
mov
xor
leave
lret
popf
dec
dec
loope
aas
leave
cs
loopne,pt
xor
add
mov
pop
rcl
jecxz
jmp
xchg
in
adc
ja
cmpsb
add
jecxz
dec
inc
addr16
testl
nop
push
and
std
xchg
jp
jbe
fisttpll
pusha
add
xchg
jne
daa
lods
xchg
fnstcw
das
sbb
insb
sahf
sub
js
pop
mov
and
mov
pop
imul
fildll
pop
mov
dec
mov
dec
jb
lea
movsb
shrl
mov
dec
mov
or
lods
add
mov
mov
loop
sub
fwait
call
xlat
rol
ja
and
sbb
ss
daa
in
int3
cmc
push
or
nop
push
sbb
insb
cmpsl
inc
sub
iret
push
adc
dec
std
mov
jb
add
test
or
sub
mov
je
dec
pop
push
and
jbe
mov
shl
add
cmpsl
lods
mov
ret
mov
or
pop
add
gs
stos
insl
pop
xchg
sub
ja
addr16
add
fdivrs
adc
mov
test
xchg
add
mov
ss
popf
imul
mov
es
cmpsl
clc
sub
fistpl
sbb
pop
aas
xlat
and
std
test
or
movsl
shlb
aas
cmp
nop
push
dec
push
cs
pop
loop
test
inc
mov
pop
imul
push
sbb
dec
cld
dec
jae
lahf
jnp
out
mov
scas
pushf
pusha
xor
fdiv
xor
aas
mov
jmp
incl
insl
test
inc
cld
dec
ss
scas
mov
test
sbb
gs
fwait
lock
pop
pop
lahf
bound
and
jg
and
fwait
icebp
and
mov
cmp
dec
inc
pop
sti
mov
cs
aad
movl
fimull
push
cmovno
jnp
jns
int
rep
jle
mov
push
push
xchg
out
shrl
scas
xchg
repnz
cmpsb
xchg
test
and
inc
mov
sti
xor
push
int
xchg
sub
lods
jne
inc
mov
lods
fwait
in
adc
dec
imul
pop
mov
xchg
sbb
cmp
lret
rolb
push
std
test
push
lcall
mov
in
clc
lret
jmp
add
into
xor
addr16
mov
scas
xchg
pop
insb
pop
xor
les
mov
push
xor
lcall
jle
js
push
mov
mov
nop
andb
test
mov
pop
aad
inc
dec
jge
jbe
pop
mov
aam
mov
outsl
bound
or
icebp
push
xchg
xlat
dec
xor
lret
movsl
cwtl
inc
es
add
pushl
adc
fimull
xchg
jecxz
xchg
xor
add
push
popf
jbe
jae
ds
lcall
out
pop
mov
jl
data16
add
and
out
repnz
mov
movsl
jno
add
lret
lcall
push
jb
fdivrl
fcmovnu
dec
dec
fwait
bound
scas
rclb
adc
jge
sahf
jp
jp
push
loop
jge
add
mov
mov
arpl
mov
sbb
data16
sub
dec
cltd
fwait
subb
and
mov
xlat
mov
bound
ja
pop
push
fst
mov
fcompl
or
adc
xchg
pop
cmp
ret
jle
adc
ljmp
enter
dec
insl
sbb
inc
leavew
push
dec
or
stos
daa
jmp
fstpt
mov
sub
push
fcom
mov
dec
or
cmc
mov
mov
xor
mov
imul
or
jb
inc
addl
xchg
lret
rol
mov
fisubl
popf
pop
mull
int3
xchg
add
dec
icebp
xor
negl
arpl
push
sbb
mov
pop
and
push
cli
jno
sub
cld
aad
fdivp
imulb
jmp
xchg
insb
in
xlat
test
xchg
call
outsb
add
daa
push
jns
cld
mov
jae
call
jns
adc
pop
rolb
or
iret
das
ret
mov
sahf
stos
les
cli
cmp
or
inc
outsb
sub
inc
fcmovne
jmp
hlt
in
enter
add
xchg
mov
mov
lds
jecxz
hlt
mov
jecxz
scas
rolb
jle,pn
mov
imul
xchg
jg
mov
pop
loope
mov
xlat
sub
push
sub
jp
stos
dec
out
or
outsl
test
insb
adc
push
pop
out
lock
cmp
fistps
xchg
cs
and
push
mov
into
or
pop
pop
add
data16
ret
jb
or
xchg
aam
pushf
scas
mov
cli
ja
and
je
das
sbb
ds
mov
mov
scas
pop
jne
push
pop
push
lret
jp
xchg
lret
insb
clc
popf
sbb
jae
je
enter
addr16
test
out
push
push
push
dec
push
flds
rcrb
out
into
dec
daa
xchg
push
cmp
pop
xchg
xor
daa
or
inc
and
leave
adc
dec
cltd
and
add
xchg
pop
es
mov
adc
adcb
dec
mov
mov
or
scas
aas
in
shrb
das
aaa
push
scas
jno
pop
pushf
loop
call
cltd
std
inc
inc
es
test
das
ja
mov
inc
sbb
int3
test
add
bnd
repz
pushf
and
pop
test
pop
mov
sbb
jmp
mov
sti
int3
mov
sub
sub
push
cmp
push
push
ret
jg
popa
pusha
enter
lods
sub
xadd
mov
cltd
pop
or
pop
jmp
cld
or
mov
dec
and
adc
out
scas
mov
push
fiaddl
add
popf
insl
inc
xchg
xor
jo
mov
movsl
fildl
push
test
es
jne
cmpl
and
or
pushf
sub
cmp
bound
inc
js
notl
sub
cmp
jecxz
mulb
adc
jo
mov
roll
jb
stc
and
pop
dec
dec
mov
xchg
subl
pop
data16
gs
or
inc
add
and
sbb
sbb
loope
fs
pop
in
and
inc
jns
movsb
call
jne
mov
rorl
xor
dec
in
gs
aas
jge
mov
mov
lret
fmull
jno
push
out
dec
hlt
pusha
mov
xor
mov
or
popf
push
insl
xchg
scas
cmp
in
or
mov
jge
jbe
push
push
add
shr
lods
push
movsb
outsb
push
xchg
push
and
cmpsl
mov
outsl
lds
mov
push
ret
sahf
mov
out
int3
inc
shl
dec
mov
fwait
or
fstps
adc
clc
inc
scas
cmpsl
adc
add
lds
cmp
iret
mov
aam
orb
inc
cld
arpl
adc
outsb
ljmp
inc
loopw
out
push
ljmp
rolb
push
push
cmp
or
jnp
add
mov
out
adc
and
loopne
pop
lods
insb
dec
insl
sub
out
adc
sbb
mov
dec
inc
test
stc
mov
xor
movsl
pop
out
inc
repnz
xor
and
mov
mov
sub
dec
jp
dec
pop
xchg
jge
inc
sbbl
lret
pop
data16
dec
sub
int3
xor
mov
jo
jg
mov
xchg
fdivrs
test
scas
js
and
movsl
jnp
dec
lcall
xchg
push
sbb
push
shrb
imul
lds
push
test
mov
out
push
push
jg
test
pusha
push
test
pop
jbe
sub
aam
lock
std
xlat
cli
sub
mov
xchg
in
fidivl
cli
subl
pop
gs
mov
cs
test
aaa
push
leave
adc
lods
pop
mov
and
icebp
fcomp
andb
sub
mov
popf
sbb
inc
adcb
dec
sbb
mov
mov
adc
pop
ret
and
fimuls
mov
adc
loopne
icebp
push
daa
imul
jg
jg
mov
fwait
push
jne
sbb
hlt
xor
push
out
scas
xlat
xor
mov
inc
mov
mov
inc
mov
xor
mov
repz
pop
stos
sbb
pop
lret
mov
out
sbb
inc
inc
xchg
inc
fisubl
add
xchg
jp
jl
stos
shrl
rcll
dec
sarl
xor
push
movsb
gs
outsl
sub
fisubrs
mov
mov
jg
push
jb
sbb
imull
scas
sub
sbb
push
xor
out
mov
pop
jge
imul
mov
dec
inc
outsb
jmp
js
pop
mov
mov
aaa
jb
inc
out
mov
dec
scas
mov
aas
cmp
push
hlt
int
into
rol
cwtl
out
jb
mov
mov
and
mov
sbb
xor
jg
imul
mov
sub
or
sub
inc
sub
xor
rcl
push
xchg
mov
push
pusha
mov
cmp
pop
std
mov
outsl
sub
add
in
ljmp
xor
in
stc
arpl
js
js
ret
xor
imul
lcall
fidivrs
rcrb
push
inc
push
rorl
imul
out
lea
lock
push
jb
dec
push
aaa
and
flds
inc
mov
xlat
push
mov
add
xor
push
jmp
xlat
pop
jge
xlat
movsb
ja
lods
lds
adc
lea
clc
shlb
xchg
xor
sarl
dec
adc
gs
xlat
pop
jl
daa
push
daa
add
adc
adc
pop
lret
push
adc
stc
xchg
imul
push
in
clc
xor
scas
or
std
and
test
mov
sbb
repz
pop
enter
aaa
jae
jecxz
sar
push
push
and
sub
dec
es
movsb
notl
push
and
ja
mov
inc
out
aad
adc
add
fstpt
inc
testb
jae
pop
push
loopne
mov
les
ret
inc
repz
sbb
mov
lods
add
shll
gs
push
inc
dec
adc
and
xor
sbb
pop
push
mov
jge
mov
loop
mov
xchg
movsl
or
test
mov
dec
mov
into
cmpsb
je
addl
adc
cmp
xor
movsb
sub
push
sub
dec
lods
xchg
scas
andb
and
sub
mov
and
stc
add
leave
enter
lret
pop
push
adc
loop
dec
pop
inc
jg
or
daa
jg
call
rolb
mov
sarb
scas
xchg
pop
enter
sub
popf
dec
cmp
stos
movsb
jo
addr16
out
dec
mov
repnz
pop
dec
fists
mov
add
xor
fwait
jns
bound
repnz
dec
sub
or
cmp
cmp
test
les
je
inc
mov
and
mov
into
xchg
mov
push
dec
bound
mov
dec
pusha
cmp
fimull
sar
cli
add
dec
push
inc
xlat
jno
scas
push
jle
ljmp
xchg
inc
sub
mov
arpl
fwait
adc
jp
mov
fcompl
pop
or
mov
dec
mov
testb
jge
xor
sbb
sub
insl
add
or
dec
adc
inc
pop
mov
pop
mov
es
push
gs
in
push
ret
lcall
push
jo
pop
or
out
lods
int
adc
inc
push
push
pop
mov
mov
adc
cmc
mov
test
jnp
negl
sar
aam
dec
push
sub
mov
add
push
es
cmp
out
push
mov
fldt
xchg
fimull
push
sub
sbb
mov
cmp
movsb
xchg
mov
mov
jo
ret
scas
inc
push
ss
xor
mov
lahf
movsl
mov
dec
ror
insb
ret
test
decb
xor
lds
dec
inc
adc
sahf
jp
sub
lods
push
xchg
add
dec
jns
pop
aas
icebp
mov
negb
add
rorb
gs
dec
fidivrs
push
jge
lcall
jmp
jp
cmp
sub
inc
imul
pop
leave
and
add
cmpsl
mov
aam
cmp
fcoml
les
popf
sbb
sbb
loop
jb
ljmp
or
test
jo
adc
std
test
insb
shl
push
imul
shl
addr16
mov
push
lret
inc
xor
lcall
aad
je
xchg
mov
xchg
jae
push
mov
xchg
cmp
stos
pop
and
pop
cmp
push
xor
aam
bound
fucomp
cs
dec
ss
sbb
shlb
sub
inc
outsb
fs
mov
add
lods
out
inc
pop
lcall
lret
pop
lret
adc
shl
add
mov
mov
mov
in
dec
pop
fs
push
lds
jae
cs
ret
addr16
mov
mov
sub
fiaddl
fmul
or
lcall
push
jne
stos
pop
dec
pop
inc
ret
in
nop
nop
jb
out
sar
sahf
sbb
jge
shrb
and
dec
add
loopne
es
sub
out
out
test
cli
fmuls
lods
pop
insl
ror
fwait
jmp
cmpsb
adcb
dec
xor
xchg
pop
xchg
iret
bound
jno
mov
mov
sbb
or
mov
adc
test
fidivrs
or
inc
mov
inc
sti
push
fcoms
fwait
inc
aam
sbb
sub
icebp
jge
lea
ret
xchg
inc
push
push
and
test
pop
out
dec
icebp
xor
mov
jno
add
roll
stc
pop
outsb
mov
icebp
sub
loope
les
or
cmp
fdivr
or
xchg
jecxz
xchg
dec
notl
adc
jae
mov
es
nop
add
xor
clc
and
dec
dec
push
cmp
xchg
xchg
xchg
jnp
mov
xor
mov
sub
jecxz
and
cmp
mov
imul
arpl
fmuls
hlt
xchg
and
fwait
push
sub
jbe
or
mov
enter
dec
push
roll
movsb
dec
mov
lahf
lods
sbb
movsb
inc
addr16
xchg
out
stos
ja
out
popa
imul
into
pusha
aam
cmp
xchg
mov
push
es
xor
int3
int3
mov
add
mov
lods
gs
das
or
or
cmpsl
jo
les
mov
fiadds
pop
xchg
fildl
push
movsl
mov
idivb
mov
or
mov
pusha
jne
lods
adc
stos
xchg
adc
xor
fisubrl
inc
adc
xlat
scas
sbb
in
or
jns
mov
add
and
add
jo
push
sub
fmuls
push
mov
stc
rorl
mov
xchg
je
stc
outsb
jnp
call
ja
adc
outsl
jge
sarb
cmp
push
jmp
cmp
jg
dec
mov
push
jecxz
negb
cmpl
in
loopne
mov
ja
and
jp
add
shl
sbb
clc
lock
ret
adc
icebp
dec
test
sarb
fwait
sbb
cmp
mov
sbb
lock
fistpll
cmp
sbb
rol
cli
in
pop
mov
adc
int3
lods
mov
enter
xlat
fimuls
imul
dec
out
xor
test
add
mov
loope
in
outsb
pop
int
loop
lock
int3
adc
aad
into
int3
movsb
shlb
and
icebp
scas
add
test
xchg
dec
shlb
jecxz
bound
dec
cmp
cmp
adc
xor
cltd
pop
testb
inc
xor
insb
stc
loop
pop
xor
adc
gs
mov
sub
or
mov
lock
inc
mov
cmp
les
cmp
mull
and
jge
jp
add
inc
mov
pop
rcrl
cmp
add
pop
sub
mov
xchg
add
mov
sub
test
in
xchg
inc
hlt
shr
cmp
jno
rolb
test
hlt
int
iret
cmpsb
push
orb
xor
aad
rcrl
mov
icebp
jno
cmpsl
fmull
outsl
sarb
xorl
les
pusha
mov
push
adc
cmp
fdivrl
mov
sahf
push
subb
jmp
sahf
pusha
lcall
inc
cmp
movsb
add
dec
scas
pop
fwait
add
pop
int3
ret
rorb
or
mov
add
test
pop
outsl
cmpsb
aaa
jg
rorb
fdivrl
es
jnp
pop
out
add
or
fstp
jl
push
je
or
lret
push
mov
xchg
cmp
mov
iret
pop
dec
sahf
ljmp
and
and
ljmp
jae
or
ljmp
ds
mov
mov
jg
enter
jl
in
notb
sahf
push
lahf
push
xchg
leave
xchg
pushf
dec
xor
pop
adc
insl
gs
ss
jne
or
pop
mov
insl
pop
push
loop
cmp
ja
dec
insl
or
mov
adc
mov
jmp
cld
lods
cmp
jnp
mov
mov
mov
and
mov
and
dec
clc
js
popf
iret
subl
jl
dec
xor
outsl
push
imul
cmp
addr16
xor
subl
or
pop
add
lock
sub
lods
das
ljmp
stc
jp
cwtl
xchg
jg
mov
nop
pop
sbb
mov
ret
xor
push
out
push
jne
and
popf
loop
mov
push
sbb
pop
test
pusha
addw
pop
jb
push
jne
rcrb
pop
pop
or
es
xor
lahf
addr16
sbb
aaa
dec
push
or
les
push
fildl
popa
add
sbbl
or
cld
sbb
inc
dec
daa
xchg
cwtl
jne
add
in
cmp
mov
mov
test
xchg
out
adc
mov
push
ret
lock
test
loopne
repz
or
jmp
lds
and
cmp
or
sbb
cmpsl
jl
out
pop
mov
into
mov
int3
iret
adc
mov
push
jmp
pushf
lret
mov
enter
xor
les
stos
push
sbb
push
dec
dec
scas
sub
test
jg
jno
push
pop
jno
dec
bound
push
and
scas
das
in
cli
cmp
push
mov
push
and
mov
clc
push
aad
push
sbb
aam
loopne
or
add
and
shll
leave
sti
movsb
mov
int
in
cmp
sbb
out
adc
fldcw
push
ret
push
push
sub
shll
push
ret
into
and
fsts
in
in
js
and
dec
jg
ucomiss
pop
stos
xchg
je
scas
cmp
aas
aaa
shlb
pop
adc
jne
or
jmp
jl
lcall
paddw
fs
jle
mov
inc
push
cmpsl
mov
push
push
inc
ret
mov
mov
pop
cmp
mov
inc
daa
dec
xchg
subb
pushf
inc
cmpsb
xchg
movsb
inc
or
mov
lret
out
inc
loope
and
mov
outsb
mov
notb
jmp
xchg
shl
xor
push
in
pop
inc
adc
dec
add
pop
loopne
xor
mov
adc
aaa
rcll
push
int3
push
adc
jle
mov
fdivrl
nop
cmpsl
fisttpl
adc
sbb
cli
ljmp
mov
dec
xchg
cltd
pop
inc
pushf
and
fldcw
imul
cmc
dec
lods
push
mov
sub
test
jb
das
mov
xchg
imul
pop
push
adc
test
bound
movsb
xor
test
out
fisubs
sub
and
cmp
subl
je
add
xor
cmp
pop
jns
pushf
cli
out
test
mov
fisubl
or
pop
pop
sbb
iret
mov
or
cmp
push
dec
outsl
inc
in
shrb
cmp
adc
xchg
das
clc
xchg
outsl
mov
jbe
mov
mov
mov
insb
push
pusha
andl
pop
mov
insl
and
stos
jmp
xor
in
fdivr
daa
push
push
int
std
outsl
jbe
jmp
fwait
mov
cmpsl
movsl
xor
pushf
or
cmp
pusha
leave
movsl
cmp
adc
push
jbe
clc
lods
inc
inc
sbb
mov
pop
dec
jbe
inc
adc
add
fmulp
lock
mov
push
jne
sbb
lahf
xor
rolb
imulb
sbb
mov
or
in
mov
adc
push
cmp
lret
xchg
sbb
push
or
adcl
lea
pushl
fildl
bound
xchg
je
cwtl
add
pusha
int
idivb
stos
push
and
inc
dec
mull
mov
shll
inc
add
sti
adc
stos
les
adc
jno
cmpb
xor
std
inc
bound
mov
lcall
popf
ret
hlt
mov
jb
pop
aas
arpl
ljmp
mov
sbb
popf
out
or
cmpb
adc
les
into
jo
popa
pop
in
ljmp
lret
inc
mov
mov
mov
or
lods
add
arpl
lds
pop
or
mov
dec
filds
ret
je
jle
je
enter
arpl
loopne
mov
jle
stos
push
aam
xchg
orb
push
inc
mov
mov
andl
leave
or
or
xchg
mov
mov
cli
or
jle
rcrl
loopne
gs
lea
lea
stos
jae
jp
jecxz
push
pop
jg
lahf
cmp
inc
daa
mov
aaa
push
pop
cli
lahf
inc
xor
stos
push
fwait
sub
lahf
sbb
cmpl
pop
cmp
jbe
sti
and
push
cmp
rclb
inc
push
fistl
hlt
mov
dec
mov
lea
fs
clc
or
adc
imul
ret
jp
sub
mov
imulb
jl
inc
lret
lods
adc
ljmp
or
out
ss
lret
sahf
adc
fidivs
mov
add
rol
stc
mov
dec
mov
mov
arpl
xchg
mov
jb
mov
aad
clc
cltd
mov
pop
mov
inc
hlt
jmp
sahf
inc
ret
cmpsl
or
push
cmp
fwait
or
mov
push
es
pop
push
push
pop
pop
lea
jae
mov
sti
repnz
ja
out
and
imul
push
aaa
iret
xor
fbstp
push
orb
rcll
aas
jg
mov
and
in
loop
cmovl
adc
xchg
nop
add
out
js
fimuls
scas
pop
daa
inc
pop
sub
jmp
lods
jnp
sbb
shl
ret
and
scas
xchg
rcr
dec
fcoml
repz
fildl
dec
sub
cmc
lret
xor
mov
dec
sub
pop
in
add
fs
inc
adc
fmuls
sti
mov
push
dec
rorb
subb
jo
or
pop
inc
cld
mov
jge
jno
or
adc
sidtl
clc
mov
dec
lcall
push
je
or
xor
add
jp
adc
push
or
jmp
push
dec
inc
ss
cmc
mov
xchg
mov
ret
add
xchg
add
xor
push
dec
bound
adc
inc
cltd
xchg
and
jp
cld
movsb
icebp
mov
into
mov
dec
shll
sbb
sti
testb
repz
movsl
stos
xchg
adc
cld
sbbl
pop
pop
sti
and
ja
inc
mov
cld
test
int3
int
fistpll
enter
mov
popf
adc
out
inc
pop
xchg
pop
sbb
sbb
push
jb
inc
loop
xchg
mov
sbb
push
and
cmp
push
daa
jo
in
icebp
ss
or
cmp
sbb
rcll
and
mov
outsb
sub
ja
mov
xchg
xor
push
sbb
lret
cmp
dec
push
jns
or
test
sbb
or
fidivrl
and
dec
add
lcall
clc
push
fisubs
fnsave
out
adc
lcall
mov
call
or
les
and
popf
push
or
adc
aad
pop
push
jl
stos
insb
and
jg
cwtl
and
mov
mov
and
mov
imul
sub
jno
sbb
pop
mov
pop
inc
add
inc
pop
gs
sbb
sbb
mov
mov
and
lret
pop
inc
jle
lds
pop
and
mov
mov
sub
mov
je
cld
push
mov
add
mov
cmp
add
je
fiadds
and
test
adc
inc
jnp
cmp
in
loop
push
mov
push
cmpb
out
ss
stos
sub
test
jg
loopne
pop
dec
inc
sarl
mov
mov
iret
arpl
shlb
movntps
adc
pop
ret
pop
fs
add
sub
ror
loope
push
iret
aam
or
dec
lea
and
movups
add
sti
xchg
sbb
and
ja
pop
std
fnstenv
movsl
inc
pop
xor
test
cltd
inc
lods
je
xchg
or
pop
int
lods
and
xor
sbb
inc
and
fidivs
sarb
jecxz
addb
add
xchg
out
mov
add
ljmp
and
stos
sub
jae
push
pop
imul
mov
adc
insl
addb
imul
adc
or
adc
jnp
dec
sub
xor
fcomps
inc
test
add
aaa
js
adc
xor
loope
dec
pop
xchg
mov
xor
inc
dec
stc
test
add
pop
ret
dec
fdivp
lret
add
popa
orl
dec
sbb
fs
cli
pop
test
shll
mov
xlat
cmpsl
xchg
enter
add
pushf
xor
xchg
sbb
sbb
inc
movd
gs
lods
adc
test
loopne
cmp
and
outsb
test
lods
addr16
cmc
push
scas
cmpsb
add
mov
pop
out
mov
ret
and
ds
stos
aam
mov
mov
push
arpl
jmp
pop
out
and
scas
ja
lahf
cltd
ror
aad
insl
loop
hlt
lret
or
pop
dec
push
or
add
jle
pop
sub
sub
sahf
testb
adcl
inc
sbb
pop
push
mov
sbb
fstps
mov
jg
add
fiadds
inc
int3
dec
inc
and
stos
fisttps
add
les
lret
js
addr16
mov
nop
mov
pop
and
mov
push
inc
add
cmp
in
stc
clc
loop
and
add
and
cmp
push
mov
mov
fwait
das
sub
adc
and
test
test
cmp
sbbb
pop
imulb
stos
mov
dec
xchg
test
mov
and
inc
jo
xor
ss
loop
outsl
adc
mov
sbb
sbb
jb
pop
sub
xchg
popf
mov
or
je
sbbl
addr16
test
mov
scas
aad
pop
mov
push
dec
ficomps
aad
inc
fidivrl
xchg
scas
lods
or
andb
repnz
andb
in
movsb
popa
jp
testl
test
inc
lcall
jmp
mov
push
les
test
lods
cmp
test
and
adc
push
fs
vcvttps2dq
sbb
jmp
inc
or
jb
leave
jmp
jo
adc
insb
bound
push
int
lcall
data16
mov
mov
mov
jmp
mov
in
sub
call
gs
sub
out
fsubs
mov
or
pop
jb
xor
dec
cmpsl
leave
sti
fsub
mov
xchg
xor
fldl2e
mov
dec
jge
cwtl
or
mov
popa
and
and
push
notb
lret
add
mov
shr
lcall
fs
push
and
in
push
dec
aad
mov
sub
out
add
cwtl
dec
push
pop
call
xor
inc
arpl
call
pop
lds
nop
add
add
in
adc
sub
aam
sarb
movsl
rcl
mov
cs
push
subb
and
pop
cmc
mov
jl
mov
icebp
dec
pop
adc
nop
pop
mov
insb
xor
das
or
mov
lods
fdivs
jne
mov
sar
xor
bound
insb
enter
mov
movsl
mov
sbb
xor
mov
outsb
lea
and
push
pop
rcrb
xor
adc
leave
rcr
in
test
pop
idivl
jmp
leave
aaa
adc
inc
cmc
add
lahf
xchg
pop
cmpsl
stos
lret
cmp
dec
xchg
add
xchg
mov
addr16
push
inc
add
std
not
in
movsb
dec
sarl
pushf
loop
pop
ffree
mov
jle
adc
andb
sbb
xor
inc
fsubrs
pop
cld
sbb
pop
xor
aad
ret
mov
dec
adc
cmpsl
mov
call
js
negl
push
add
adc
cltd
fistps
sbb
mov
or
cmc
adc
or
shr
pop
and
pop
insb
pop
pop
jmp
mov
frstor
xor
cli
sbb
and
pushf
mov
loop
sbb
mov
scas
jbe
and
or
sbb
lcall
stc
sbb
lods
in
pop
inc
or
xor
jmp
andb
out
es
jmp
test
mov
test
sub
mov
sti
cwtl
pop
rorb
enter
fwait
cmp
dec
xor
and
inc
cld
loopne
xchg
sbb
rol
sub
stos
sbb
jg
ljmp
adc
in
shrl
test
iret
cmp
movsl
mov
jae
mov
xorl
sub
mov
hlt
push
pop
fidivrs
sub
imul
sub
lret
mov
fldenv
dec
sti
mov
lods
in
das
jae
push
xchg
pop
movsl
pop
roll
in
loope
mov
push
repnz
xor
xor
and
sub
les
mov
sbb
add
dec
mov
sub
mov
and
rorb
xor
add
pusha
bound
gs
mov
mov
jae
lods
arpl
xchg
inc
push
out
aad
jp
enter
sub
xlat
or
xor
mulb
xor
sbb
mov
sbb
xchg
cmpsb
lods
pop
fdivp
lds
mov
add
xchg
mov
popa
aas
pop
push
ss
jno
lods
loopne
sub
aad
stos
pop
leave
leave
add
loope
cwtl
fisttpl
cmp
call
xchg
mov
fcmovnu
addr16
movsb
and
mov
push
fs
pop
int
xchg
mov
daa
imul
jo
cmp
addr16
stos
vpaddsb
pop
jmp
adc
imul
xchg
mov
into
and
sbb
imul
lcall
jae
lcall
inc
in
out
xor
xchg
scas
shlb
and
sub
jmp
pop
xchg
outsb
insl
clc
ret
dec
sbbb
pop
mov
int
jmp
pop
push
sbb
add
sbb
push
push
neg
jmp
ja
call
int3
sbb
fldl
push
and
jmp
and
popf
incl
push
pop
add
add
xchg
pop
out
cmp
pusha
cmp
icebp
stc
jle
mov
pop
adc
into
mov
add
lea
ds
sub
cmp
inc
je
fwait
je
add
xchg
push
fcmovnb
sti
dec
and
fst
jecxz
cmpsb
push
sbb
repnz
les
rcrl
jno
stos
jb
xor
icebp
sbb
xchg
sub
loopne
bound
enter
dec
cltd
xor
xchg
or
cmpsl
cwtl
xchg
out
jge
jo
je
loop
sub
xchg
cmc
mov
loopne
vpandn
push
lods
loopne
rclb
push
cmc
outsb
mov
mov
inc
pop
mov
ret
adc
rorb
or
jnp
push
cmp
repnz
mov
push
push
add
loope
loope
dec
mov
ret
data16
fdivl
loope
or
jns
push
sub
mov
test
mov
out
out
aaa
lahf
rcr
lret
outsl
fmuls
and
adc
sbb
push
lahf
out
jmp
icebp
pop
scas
inc
xor
xchg
push
or
aam
inc
imul
push
jecxz
jo
shrl
sahf
mov
loope
inc
push
sub
das
lcall
sahf
or
xor
mov
scas
xchg
cmp
sbb
push
jae
fildl
dec
lcall
in
ds
stc
dec
test
enter
mov
xchg
insb
test
in
cmp
aas
inc
outsl
and
xchg
mov
and
std
nop
pop
adc
movsl
lret
fwait
dec
add
andl
pop
popa
pop
cwtl
push
push
test
mov
jmp
aam
sbb
push
cli
sub
aas
adc
push
jbe
xorl
stc
xchg
int3
xchg
in
popf
adc
inc
std
sub
adc
jge
sbb
sub
adc
hlt
or
inc
out
ret
xchg
or
xchg
test
sahf
cmpsb
adc
daa
int
mulps
leave
inc
xor
call
lahf
add
cmp
div
shrb
fs
and
jge
scas
test
push
cld
in
scas
loope
jmp
jne
and
cltd
pop
jg
mov
xorb
loopne
dec
inc
shlb
cmp
addr16
fs
cs
into
das
mov
fidivrs
xchg
push
call
push
push
stc
push
js
mov
repz
lods
push
add
dec
sub
out
movsb
push
insl
stos
inc
jne
mov
jb
addr16
or
push
push
add
xchg
pusha
pushf
jb
ss
into
mov
jbe
test
jecxz
scas
lock
push
subl
cmp
insl
pop
dec
sbb
pop
mov
pop
or
jl
leave
int3
cmpsb
lods
loopne,pn
push
xorl
push
or
clc
sti
xor
in
mov
inc
mov
ja
sub
adc
fnstcw
loop
scas
or
in
pop
out
adc
mov
xor
xchg
inc
aaa
jecxz
adc
call
xchg
rcr
and
rorl
imul
outsl
clc
repz
rep
lock
lret
nop
mov
xorb
sbb
imul
scas
test
insb
lret
cs
nop
pop
fcmovnbe
fidivs
xchg
and
rcr
jo
inc
lods
mov
pushf
sbb
jnp
sbb
pop
aaa
jg
fcoms
stos
cmp
mov
add
sti
je,pt
xchg
inc
in
adc
jecxz
ret
mov
adc
or
mov
and
cmp
sahf
in
mov
das
insl
jno
jns
addr16
aaa
mov
shll
out
ja
inc
daa
sti
adc
or
jp
add
push
clc
scas
cmpsl
sbb
enter
mov
or
xchg
dec
pop
push
stos
imul
outsb
mov
xchg
add
dec
inc
stos
aam
sub
mov
ret
loop
sub
sub
daa
fdivs
and
fstl
fcmovnbe
dec
mov
pop
data16
stos
mov
mov
in
jnp
imul
repnz
movsl
outsb
sahf
into
and
aad
adc
xlat
mov
lock
ja
dec
dec
jbe
xchg
int
test
mov
fiadds
adc
call
jb
cs
pop
fwait
adc
push
adcl
xor
dec
push
add
bound
das
repz
mov
das
sbb
adc
mov
imul
andb
jnp
daa
shl
mov
mov
add
mov
jp
mov
pop
scas
test
fwait
mov
imul
adc
add
mov
testb
ss
mov
pop
out
test
fmull
inc
or
pop
lea
mov
xor
call
adc
lods
icebp
jg
out
dec
aaa
stos
pop
push
ljmp
pushl
les
ja
cmp
fmul
add
push
push
test
fcomip
pop
fdivrs
mov
jbe
lret
lcall
jp
mov
push
cltd
cmp
sbb
les
test
sbb
mov
add
test
popa
test
out
mov
mov
cld
repz
jmp
push
fldl
mov
cmpsl
add
pushf
mov
pop
lds
orb
insb
sbb
dec
out
xor
insb
sub
test
fadds
jne
pop
push
xlat
inc
lret
leave
mov
lea
adc
mov
jge
outsl
out
outsl
mov
out
lock
cmp
adc
in
test
int
leave
sub
lock
stos
pop
mov
fidivrl
jecxz
push
dec
xchg
xchg
hlt
cmp
cmp
in
push
mov
aad
leave
imul
cwtl
sbb
adc
loopne
adc
leave
jge
xor
cs
or
pop
je
orl
repz
jo
ret
inc
jns
mov
dec
rclb
xor
and
je
lcall
movsl
jnp
aam
jge
jg
dec
outsb
int
xchg
mov
cmp
rcl
cmc
cwtl
mov
hlt
pop
mov
mov
outsl
stos
fucomi
dec
sarl
adc
xchg
data16
cmpsb
aaa
cltd
jp
mov
in
or
pop
dec
or
cs
jo
xor
ret
insb
fbld
mov
inc
xor
and
push
fwait
and
loop
sahf
sub
add
jns
xchg
nop
lods
outsb
xchg
cli
arpl
inc
outsl
add
loopne
or
sbb
and
inc
sbb
sbb
jecxz
cmp
jae
sub
aas
clc
mov
dec
into
scas
rcll
or
xor
in
or
pop
mov
xor
sbb
arpl
xor
insl
inc
and
dec
nop
mov
pop
sbb
fwait
inc
push
cmc
and
ficompl
mov
jnp
das
mov
mov
jne
cli
add
jo
xor
push
dec
push
and
cltd
inc
jne
roll
xor
pushf
sbb
loopne
cmpsl
mov
fidivs
jle
imul
sarb
push
mov
inc
jne
add
inc
dec
xor
mov
in
cmp
loop
xor
hlt
cwtl
add
aad
inc
scas
jo
jns
ret
mov
add
cwtl
je
jp
outsl
mov
add
cmc
dec
add
cmp
mov
pop
or
inc
mov
mov
sbb
mov
lds
lret
or
dec
jae
inc
mov
dec
add
xlat
push
sub
adc
xchg
mov
repnz
shll
inc
sub
jne
mov
pop
arpl
popf
jnp
frstor
aaa
push
and
hlt
jecxz
dec
sarl
in
pusha
pop
add
imul
les
rcrl
ss
lahf
xor
imull
cmp
mov
jae
pusha
inc
inc
jmp
jo
mov
popl
cld
imul
xchg
jp
cli
xor
xor
mov
xchg
mov
push
ljmp
mov
xchg
insl
inc
leave
repz
xor
xor
mov
mov
sti
addr16
stos
pop
pop
inc
mov
dec
cmpsl
jle
insb
roll
add
repz
lods
pop
enter
into
popf
cmpsb
fdivl
pop
inc
mov
sub
jns
gs
mov
push
loop
adc
jle
xchg
lods
jnp
in
mov
xchg
scas
xchg
sbbb
pop
sar
xlat
ljmp
pushl
aas
outsb
push
loop
dec
xchg
lods
inc
jnp
enter
cltd
add
jo
rorl
out
adc
test
dec
sub
lods
sbb
arpl
test
movhps
lds
mov
mov
mov
outsb
dec
in
sbb
sub
fnstenv
sub
mov
xchg
cmp
sub
and
addl
jge
pop
movsl
xchg
fbld
jl
sbb
sub
test
into
out
ljmp
inc
push
bound
shlb
push
inc
lcall
sub
xchg
dec
rcll
add
mov
push
out
cmp
mov
aaa
in
outsb
aam
call
aas
pusha
mov
std
fucomip
push
xor
inc
cmpsb
in
xor
shl
test
cmp
push
sub
mov
popf
dec
insb
pop
sti
test
dec
xchg
and
mov
dec
loopne
je
inc
and
ljmp
and
jle
sbb
movsb
dec
xchg
mov
sub
sub
outsb
xor
cmp
or
sar
adcb
sub
fisttps
std
add
xlat
sbb
rorb
stos
punpckhdq
pushf
cmp
pop
hlt
stos
sub
cs
fwait
jl
bound
sbb
sbb
xchg
add
std
mov
ret
jl
lcall
in
add
push
xor
jo
rorb
adc
movsb
push
inc
jle
addr16
sub
mov
movaps
adc
in
inc
insl
std
mov
xchg
mov
subb
adc
ret
sbb
jo
push
xlat
xchg
ss
pop
dec
sub
mov
mov
icebp
jbe
cmp
mov
mov
push
cmp
mov
lock
mov
je
cwtl
sbb
xor
and
lea
lret
jecxz
leave
pop
in
cmpsb
jl
stos
dec
and
sarl
xlat
jge
push
ret
ja
cwtl
sti
or
cmp
pop
icebp
pop
xor
adcl
lods
and
xchg
add
jl
mov
cmpsl
je
mov
fdivrs
adc
adc
lret
jbe
dec
inc
loopne
sbb
mov
lds
movlhps
jnp
out
or
repnz
rol
adc
push
idivb
in
dec
mov
or
inc
sbb
sub
je
outsl
dec
sub
mov
mov
popf
dec
std
mov
mov
add
shll
push
dec
dec
push
rol
es
lahf
xor
lahf
cmpsl
sbb
mov
add
mov
mov
sub
repz
mov
ljmp
inc
push
mov
push
dec
out
aas
xor
enter
inc
mov
pop
lock
cwtl
push
in
and
cmc
adc
es
scas
mov
jecxz
lock
les
das
dec
add
jmp
shl
lock
fistps
stos
aam
sarb
or
pop
iret
addr16
inc
jle
pop
mov
adc
pop
lea
hlt
adc
add
fldenv
jecxz
ret
cltd
cmpsl
fistl
pusha
or
mov
cmp
fstl
pop
inc
mov
popf
mov
add
jle
outsb
push
loop
loop
mov
ljmp
jmp
lahf
icebp
xor
xchg
in
push
add
adc
out
xor
leave
ss
or
inc
shll
shll
das
ja
jl
lds
rcrb
xor
fdivrp
pop
orl
mov
cmp
jno
jbe
fmull
cmp
repz
in
movsl
arpl
fs
mov
mov
sbb
out
shl
cmp
ret
xor
lret
xchg
addr16
popa
mov
lret
xbegin
mov
dec
sbb
or
mov
sbb
or
iret
out
aam
pop
mov
xor
in
mov
mov
and
adc
fistpll
mov
aaa
cmp
les
xchg
arpl
ret
mov
mov
outsl
mov
push
inc
mov
int3
int3
push
xor
pop
mov
out
lock
xchg
clc
outsb
mov
pop
movsl
and
or
dec
in
cmp
and
jae
scas
testl
loope
xchg
je
movsb
stos
xor
xor
dec
fcomp
rclb
mov
lahf
push
xor
sub
aam
cmpsb
cmp
pop
push
mov
or
int3
add
pop
push
loope
pop
fisttps
mov
insl
dec
jnp
push
jge
sahf
ret
push
push
imul
daa
sub
ds
repz
and
pushf
nop
rcl
mov
scas
ss
mov
dec
mov
nop
sub
mov
inc
sti
sahf
mov
rcr
mov
adc
cmp
lds
lods
adc
xor
or
stc
cmp
pop
shlb
lods
pop
repnz
inc
cld
out
pop
inc
mov
insb
lock
xchg
shr
push
push
mov
ja
aas
bnd
in
mov
cmp
mov
add
xlat
or
jae
dec
sbb
test
repnz
jmp
add
inc
lods
movsl
rcll
pop
add
jnp
dec
adc
imul
inc
jb
fdivrp
sub
movsl
lds
pop
fs
mov
dec
and
jle
push
xor
inc
nop
xchg
popaw
sbb
pop
cmc
aad
int
das
or
sarb
stos
jge
xchg
mov
lcall
mov
das
in
mov
or
dec
pop
add
fwait
mov
fwait
enter
stc
fdivl
int3
jl
push
push
dec
pop
xorb
push
lahf
mov
cld
ss
es
push
push
jge
or
mov
sbb
movsb
imul
inc
test
shr
pop
sti
mov
in
xor
cmpsl
adc
aaa
imul
fildl
add
lods
jae
cmp
test
push
push
dec
jns
and
cmp
addr16
xchg
sbb
test
leave
jno
jno
push
xchg
fsub
xor
lods
jo
stos
aad
inc
stos
xchg
iret
js
xchg
stos
xchg
inc
dec
roll
or
jmp
daa
cltd
in
imull
mov
lcall
push
repnz
mov
xor
jecxz
xchg
or
lahf
lods
outsl
nop
inc
xor
scas
xchg
inc
out
data16
pop
imul
mov
jns
xor
jno
in
cwtl
cmp
movb
imul
sbb
dec
jge
inc
push
mov
ds
mov
in
dec
lcall
mov
loopne
inc
aaa
inc
gs
loop
xor
and
xchg
mov
sub
mov
push
xor
sbb
xorl
imul
mov
push
test
dec
jno
fs
loop
mov
movsb
cmp
test
pop
cwtl
mov
mov
ret
mov
push
test
and
push
jg
sbb
loop
inc
pop
call
push
negl
pop
ss
add
test
pop
add
stos
andl
in
sbb
mov
jle
and
xchg
dec
dec
gs
fbld
pop
cli
shl
cmp
aam
test
pop
pop
push
sub
lahf
or
outsl
faddp
push
test
xchg
hlt
test
xchg
mov
or
sub
push
xchg
repz
in
stc
shlb
xor
les
sub
popa
out
mov
inc
dec
bound
push
icebp
jns
sub
mov
push
rolb
ss
fidivrl
xchg
int3
push
std
mov
out
jne
jae
insl
xor
rolb
mov
dec
xorl
sbb
pop
sbb
pop
mov
test
leave
mov
fldt
ret
int3
add
mov
lock
repz
add
jg
inc
and
xor
das
xor
in
repnz
gs
loopne
push
jp
xchg
push
inc
pop
jmp
mov
xlat
mov
leave
addr16
pop
das
push
aas
xor
mov
aad
sbb
sbb
leave
dec
push
push
je
push
movsl
fs
xchg
or
insl
lock
sbb
lret
xor
jne
imul
add
xor
lahf
test
clc
mov
mov
pop
cld
mov
test
out
pop
jbe
cmp
stos
fcompl
mov
pop
daa
lret
cmp
inc
mov
push
pop
shll
xor
jo
imul
int3
add
xchg
or
mov
fs
pop
jmp
fsubr
and
repz
daa
add
inc
push
xchg
je
mov
dec
fstl
lret
push
mov
addl
int
inc
inc
subb
mov
dec
ja
fldcw
inc
and
adcb
sahf
push
cmpsl
sub
test
pop
inc
imul
scas
cmp
mov
pop
jle
cmpsl
aas
loop
les
sbb
push
sub
pop
add
push
pop
fidivs
xor
lahf
shrb
in
enter
daa
adc
mov
cmp
das
lret
cmp
movsb
lock
lods
popa
mov
push
gs
jmp
je
outsl
sub
pop
sub
insb
pop
out
aas
lcall
sbb
mov
out
xchg
imul
in
and
insl
sub
das
into
sub
sbb
and
sub
ds
repnz
jnp
movsb
repz
or
idiv
and
push
sub
jle
sub
xor
aad
cs
xchg
bswap
xchg
fs
sub
sahf
cmp
xor
mov
and
fucom
adc
adc
dec
and
sti
mov
shll
jl
push
popa
pop
inc
ret
fisubs
cmc
sarb
icebp
lcall
sub
ret
xlat
pop
negl
fdivrs
pop
ja
movzwl
xchg
pushf
cmp
aam
push
bound
and
push
into
inc
lods
and
movsl
dec
call
inc
pop
int
pop
or
push
xor
bnd
push
xor
notb
mov
cmpsl
shrb
cwtl
add
test
mov
mov
pop
mov
out
unpckhps
cwtl
pushf
mov
cmp
rclb
fcoml
out
aaa
mov
scas
add
mov
jg
push
add
cld
mov
dec
fbstp
js
hlt
jns
xchg
divl
pop
and
loop
repnz
subl
imul
repz
or
cld
pusha
pop
data16
xor
enter
xchg
mov
test
xchg
out
xlat
ficomps
mov
adc
rol
mov
pop
addb
sub
xchg
ss
jno
sbbb
scas
sub
xchg
cmp
rol
iret
lods
fcom
pop
cltd
pop
xor
xchg
or
lahf
outsl
ljmp
mov
push
jae
lret
or
add
inc
shrl
mov
jle
add
sar
leave
sub
jmp
inc
mov
mov
out
inc
cwtl
movsl
mov
jge
push
cmp
xor
sub
fistps
rolb
fwait
mov
mov
jp
pop
das
loop
aam
mov
stc
xor
cltd
das
loopne
mov
jmp
add
cmp
inc
add
pop
sbb
cmpsl
testb
dec
outsl
xchg
lea
sub
clc
and
adc
out
imul
inc
and
pop
cmp
dec
mov
mov
mov
repz
add
into
sub
sbb
imul
mov
pop
imul
lret
js
shr
mov
test
and
jmp
hlt
xchg
out
mov
add
stos
scas
cmc
sbb
push
cmp
cltd
hlt
jle
xchg
mov
fwait
or
jno
js
xorb
loop
popl
ret
adc
loope
leave
mov
rorl
sub
imul
in
decl
test
pop
andl
imul
push
test
sub
pushf
push
push
mov
pop
insb
test
jmp
sub
mov
clc
popf
notb
lret
stc
imul
dec
icebp
lret
dec
dec
add
out
int3
insb
adc
pop
data16
mov
fnstenv
cmp
loopne
or
jae
cmc
fldt
jb
mov
test
adc
shll
sub
shl
push
pop
inc
sbb
fisubrs
xor
mov
sbb
or
imul
mov
in
rolb
mov
add
hlt
repz
jno
sbb
repnz
pop
xchg
xor
outsb
clc
in
iret
movl
aas
xor
xchg
sbb
xchg
test
movsl
test
call
jl
dec
xchg
gs
mov
aas
movsb
clc
mov
jns
sub
cmp
in
mov
xchg
mov
pop
inc
push
or
xchg
aas
xor
xchg
fwait
ja
push
test
scas
push
sarb
adc
imul
ret
xor
stos
cmpsl
scas
in
xchg
mov
xor
jne
ds
lret
stos
jo
xor
mov
addr16
pop
dec
arpl
xchg
insl
lock
push
mov
or
into
sbbl
int3
rol
mov
jge
mov
dec
loop
xchg
mov
dec
nop
push
loop
leave
jbe
xor
inc
bound
imull
call
jno
jo
sbb
dec
sbb
ljmp
popf
mov
aad
call
fildll
mov
mov
addr16
and
push
hlt
cmp
fwait
pop
sub
nop
cmp
mov
imul
hlt
inc
ds
loop
int
sbb
pop
mov
dec
add
cli
movsl
pop
pop
shrl
or
cmp
mov
lods
fisttpl
push
pop
sarl
cmp
add
push
inc
mov
iret
in
cmp
jae
aaa
dec
rclb
popa
jbe
fsubrp
xlat
jne
mov
sub
loope
fsubl
rorl
les
lcall
pushf
sbb
mov
lret
negb
aad
mov
out
adc
inc
ja
cmc
or
xchg
rorb
outsb
mov
ljmp
inc
loop
and
cmp
fdivl
xor
pop
xor
mov
dec
clc
out
mov
inc
into
push
je
push
add
jo
adc
push
add
or
shll
adc
adc
scas
test
cltd
add
inc
lret
xchg
popa
fldt
and
jle
xchg
imul
push
xchg
gs
loop
xor
lcall
dec
dec
add
add
aam
aas
sbb
sbb
mov
push
daa
mov
cmc
sysexit
mov
xor
inc
xchg
loopne
cmpsl
fnstcw
imul
js
add
das
ror
popf
xor
ja
pushl
insb
fisubs
inc
in
adc
enter
enter
mov
mov
adc
jae
and
cmp
testl
inc
gs
sub
mov
out
fs
mov
out
pusha
sub
enter
int3
dec
pop
out
ds
movsl
mov
data16
pop
fistpll
enter
mov
and
js
test
fsubl
xor
ljmp
and
adc
ljmp
mov
push
cmp
xor
and
dec
stos
shll
adc
and
xchg
mov
pop
dec
push
leave
sahf
jmp
sbb
fucomp
insl
pop
lcall
and
std
sbb
add
ljmp
inc
in
add
pusha
mov
testb
loop
mov
nop
sub
insb
cmp
adc
xor
repz
cmp
pop
mov
fstpt
addr16
mov
dec
xor
gs
lret
inc
mov
outsl
push
movsb
cltd
int3
dec
cmp
jne
out
lret
cmp
add
repz
xchg
inc
iret
adc
jo
out
outsl
into
jne
inc
sbb
jmp
jns
xor
mov
mov
pop
orb
add
mov
jae
xor
sub
divb
lock
int3
push
xchg
out
and
outsl
and
cmc
mov
movsl
add
dec
dec
add
jecxz
adc
sbb
fwait
mov
pop
lea
jp
std
icebp
sahf
into
je
rcrl
cs
jmp
in
les
mov
dec
pop
xchg
int
sahf
cwtl
mov
lock
lods
cmpb
mov
int3
xchg
decl
popf
dec
dec
ljmp
popa
push
push
sahf
adc
cmp
push
leave
and
andl
dec
push
jne
or
add
mov
outsb
push
cmp
call
rcl
and
arpl
xor
and
dec
mov
sbb
push
push
orb
adc
cwtl
ss
ret
mov
jae
push
cli
sub
in
inc
aaa
cmp
pmuludq
push
or
pushf
inc
pop
push
lahf
push
add
nop
test
adc
mov
popa
stc
inc
lahf
adc
push
pop
aas
frstor
jle
pop
push
xchg
dec
imul
test
sbb
push
pop
cmc
push
movsb
jecxz
popa
addr16
inc
stos
sti
inc
xor
rcl
add
add
xor
pop
faddl
mov
sub
mov
mov
dec
inc
int3
jno
mov
lods
movsb
add
mov
enter
pop
stos
stc
test
ljmp
dec
mov
mov
fs
and
mov
or
dec
inc
add
in
sahf
mov
sub
popa
xor
inc
sbb
les
shl
mov
pop
inc
push
xchg
je
nop
or
subl
lcall
insl
mov
outsl
xor
int3
ljmp
mov
jp
cmpsb
sub
pop
mov
jne
cli
or
rcr
pop
cmp
pop
xor
jmp
cmp
mov
add
hlt
jnp
loopne
shlb
sar
addr16
dec
adc
rclb
inc
dec
xchg
xor
ret
sub
dec
xchg
dec
push
cmp
jns
into
fiadds
hlt
rclb
mov
cmc
dec
ljmp
dec
sbb
aad
fs
cld
lods
adc
add
ss
pop
jg
outsb
dec
nop
adc
test
lds
stc
push
jae
inc
jno
or
pushw
iret
push
mov
scas
mov
add
jnp
inc
inc
lcall
sbb
push
adc
sarl
sub
add
xchg
jbe
mov
jp
pop
stos
mov
xlat
addb
stos
loopne
add
rcl
mov
xchg
lret
sub
push
sbb
rol
mov
scas
cmp
mov
stos
mov
inc
jge
jge
aam
mov
outsl
or
outsl
pop
fxtract
jp
aas
rcr
scas
rorb
repz
int3
dec
jbe
jecxz
mov
insb
sbb
mov
lret
sbb
cmp
jp
decl
mov
ds
and
xchg
pop
xchg
vzeroall
scas
inc
xchg
cld
adc
scas
outsl
shl
push
insl
jge
ficomps
sbb
outsb
std
mov
jnp
ret
pop
cmp
sbb
mov
dec
sbb
mov
cs
push
adc
xchg
push
rcl
xchg
mov
dec
insl
adc
xor
or
mov
fisttps
sbb
push
sti
aad
cmp
or
sbb
daa
or
shlb
ja
add
bound
enter
das
insb
das
xor
shrb
jecxz
mov
jb
test
add
and
inc
repnz
and
mov
sub
jo
lahf
push
xor
jnp
and
negl
and
xlat
in
out
adc
dec
cmc
movsl
lds
outsl
lahf
out
push
loopne
mov
movsl
nop
push
mov
mov
iret
shll
push
jl
push
add
ja
loope
ror
lds
iret
pop
fistpl
sbbl
int3
or
or
fmulp
lods
pop
ss
sbb
in
outsb
imul
cmpb
loopne
xchg
into
cmp
in
mov
pop
mov
inc
pop
pop
adc
lcall
fisubl
push
je
adc
and
out
add
cmp
ret
aaa
lret
js
adc
pop
or
testb
cwtl
fstl
iret
add
rclb
out
subb
sti
rcr
scas
leave
cwtl
mov
add
test
outsl
fisubrs
jecxz
movb
and
and
scas
movsl
idivb
xor
ret
je
outsb
imulb
jno
shll
movsb
xlat
mov
sub
jno
idivb
push
fsubs
dec
stc
mov
data16
cmp
cmc
into
inc
addr16
dec
mov
inc
leave
in
das
fs
nop
and
nopl
cmp
fstl
sahf
and
pop
adc
sbb
xchg
sub
push
mul
loopne
mov
add
leave
jmp
sbb
mov
xchg
push
mov
pushl
subl
cmc
sub
lret
sbb
arpl
mov
jmp
cmc
ret
and
data16
in
punpckhwd
jo
inc
addr16
roll
insb
dec
ss
aas
mov
stos
imul
aam
popa
xor
push
outsl
cld
jae
sub
loop
ficompl
dec
loop
sahf
je
rcrb
stc
jbe
lcall
xchg
sahf
push
out
adc
pop
xchg
cmp
cmp
mov
hlt
cld
in
js
jae
int3
jmp
out
movsb
stos
fistl
or
or
xor
out
js
popa
mov
xchg
repz
xchg
shll
sub
lret
andl
ja
or
fnstsw
jge
test
lahf
mov
gs
fsubp
scas
mov
or
out
cli
cmp
es
jno
repnz
in
add
std
and
movsl
and
stos
movsb
adc
mov
adc
push
and
sub
cmpsb
mov
clc
iret
in
inc
jnp
lret
and
dec
cmpl
flds
sub
jae
repnz
cmpsl
jl
aad
insb
adc
pop
or
mov
inc
xor
movl
dec
push
rclb
jecxz
sahf
lods
mov
lahf
push
pop
lock
arpl
pop
xchg
stc
mov
clc
dec
fmul
fstpl
inc
adc
adc
xchg
loopne
fstpl
pop
je
pop
or
add
xor
lods
sbb
adc
add
mov
fcomip
rorl
and
add
ficomps
out
and
cmpsb
mov
xchg
test
xor
into
stos
and
out
add
scas
test
lea
xor
push
pop
mov
es
fcmovnbe
mov
pushf
mov
cld
mov
insb
sbb
mov
nop
mov
jns
pop
or
fdivrs
push
jle
es
jne
pop
popa
dec
test
cmp
cmp
dec
aad
lods
int
add
xor
js
add
jl
mov
hlt
and
jecxz
adc
adc
lret
and
in
sbb
std
jb
fisubl
xchg
sbb
push
ficoms
pusha
push
xor
lcall
sub
xchg
lret
bound
mov
les
mov
pop
cwtl
and
push
pop
sbb
push
dec
pusha
ret
cmp
lods
push
mov
or
and
ja
in
xor
in
mov
into
pusha
mov
lahf
stc
sbb
jg
fwait
aas
jmp
ret
and
sbb
push
xchg
and
popa
fimuls
mov
or
sbb
inc
call
fdivrp
sub
fisubl
in
popaw
push
test
sbb
pop
xorl
or
mov
daa
stc
out
pop
out
imul
pop
dec
aam
push
ret
jl
mov
lahf
or
xlat
xchg
xor
adc
xchg
lret
or
xor
fdivrs
add
loope
xor
fcomps
addb
mov
cli
out
lds
push
fldcw
add
lock
ret
lret
cmp
pop
jno
sbb
dec
mov
lcall
xchg
inc
pop
sbb
in
sbb
inc
rorb
leave
mov
and
fcoml
out
pop
pop
push
cmp
movsb
and
mov
push
push
mov
cld
cmpsl
test
aad
cmpsl
add
jns
ds
adc
mov
dec
and
push
mov
aaa
rolb
addr16
xchg
adc
mov
les
int3
orl
mov
jnp
iret
inc
scas
or
rorb
mov
pop
idivl
ja
mov
jmp
adc
test
adc
xor
test
insb
cs
testb
shl
push
mov
lea
pop
mov
testl
call
ficomps
ss
movsl
jne
pop
pop
pop
jmp
daa
pushf
mov
xor
add
xor
inc
push
fdivs
leave
sub
jns
outsb
push
adcl
arpl
or
loopne
nop
in
ret
aam
inc
push
push
enter
jbe
in
inc
push
push
jle
clc
or
std
std
pushf
dec
aam
lds
out
cmpb
push
into
fisttpll
jg
push
jmp
add
mov
pop
gs
rcrl
sahf
xchg
imul
insb
aaa
bound
cmpsl
or
mov
sbb
mov
mov
push
or
jno
push
fnstcw
mov
mov
jae
test
fisubrl
push
inc
int3
xor
mov
cmp
push
leave
loop
push
pop
movsb
ret
scas
mov
add
cmc
dec
jae
dec
repz
aas
cmpl
rorl
xchg
xchg
in
pop
cmp
leave
pop
mov
sub
dec
xor
inc
clc
pop
mov
outsb
inc
aaa
cmp
cmpsb
ret
orb
jl
mov
jbe
jl
sub
mov
leave
fbld
sbb
loope
pop
ljmp
out
cmp
cli
xor
inc
xor
adc
fsubl
inc
cmc
dec
sbb
jns
cld
test
andl
ret
cwtl
dec
int
mov
sahf
faddp
push
inc
outsl
mov
pop
ljmp
popf
adc
ss
dec
lret
dec
jb
mov
pop
xchg
sbbb
mov
cltd
mov
inc
scas
adc
je
into
jo
das
sti
addl
and
dec
sbb
mov
std
lret
sub
and
leave
rorl
lock
mov
testl
fcoml
sbb
sbb
adc
fldcw
loopne
jbe
setb
mov
les
mov
fs
hlt
mov
cmp
inc
xlat
dec
iret
push
mov
pop
cmc
adc
movsl
fwait
mov
mov
dec
inc
je
ret
lods
pop
inc
fs
call
sbb
mov
push
jne
enter
pusha
push
das
sti
jp
push
xor
xor
aad
sbb
adc
add
cli
aaa
test
notl
mulb
pop
into
dec
shll
loopne
cltd
dec
inc
cmp
mov
mov
movsb
inc
pop
int
sar
lods
rolb
je
scas
out
out
xchg
insb
push
jecxz
lds
aam
cmpsb
xchg
cmp
mov
sub
add
js
lret
out
repz
std
xor
cmpsb
inc
rcr
iret
xchg
fwait
xchg
pop
and
fistps
ret
xor
jbe
add
lock
lea
inc
and
or
gs
shlb
test
in
and
lds
fcmovne
mov
adc
rorb
sub
jbe
jmp
in
xor
test
arpl
mov
inc
test
ret
xor
xor
pop
dec
loop
pop
icebp
xchg
movsb
nop
mov
cs
sbb
int3
pop
lods
rcll
xchg
or
aaa
daa
les
rcrb
hlt
cmp
lods
adc
push
cmp
loop
lock
jecxz
add
in
pop
fcoml
adc
shll
push
loopne
dec
sub
add
daa
inc
xchg
scas
adc
enter
fiaddl
es
gs
jl
mov
mov
sbb
jp
cltd
popf
rorb
adc
pop
in
imul
xchg
out
push
cmp
call
cmp
sub
pop
fnstcw
in
xchg
push
pop
cmp
cld
inc
sbb
mov
mov
push
in
iret
pop
mov
ljmp
cmp
mov
mov
hlt
jnp
or
cmp
sbb
in
push
dec
or
mov
cmp
mov
insb
pop
mov
and
jae
es
push
and
push
mov
popf
xchg
add
hlt
fwait
repz
add
sbb
mov
pusha
mov
aas
notl
xchg
sub
or
cmpsb
add
sbb
mov
sbb
ss
push
sbb
scas
or
mov
push
shlb
pop
push
sahf
push
jns
cmp
sahf
sbbb
jns
call
push
inc
cltd
xchg
icebp
out
mov
xchg
sti
inc
cli
fsubrl
dec
mov
rol
xchg
scas
cs
jmp
jno
pushf
cmp
popf
push
pop
mov
jne
test
stc
sub
rcl
xlat
xchg
lds
nop
lahf
pop
sub
shr
pop
mov
mov
hlt
insl
into
clc
pusha
inc
movl
lret
arpl
pop
divl
iret
dec
in
aam
mov
std
rcll
xchg
rcll
mov
unpcklps
mov
shrb
mov
and
and
add
repz
jae
sarb
daa
xchg
imul
xor
jg
out
bound
jbe
popl
push
mov
cmpl
nop
pop
adc
cmp
hlt
lret
loopne
add
in
xchg
xlat
daa
pushl
mov
mov
and
adc
movsb
push
imul
xor
jne
jo,pn
out
lock
push
loop
sub
jnp
ret
in
or
pop
add
jns
push
inc
mov
lret
adc
call
xchg
jg
push
mov
incl
mov
cmc
or
jo
out
sbb
and
aad
in
lods
adc
mov
lods
mov
push
jbe
sbb
pushf
mov
loope
hlt
push
or
xor
pop
aam
xor
inc
out
cli
lods
pop
test
pop
stos
in
fisttpl
jmp
inc
lahf
subl
sbb
pop
bound
add
pop
insl
xchg
icebp
pop
cld
push
addr16
data16
push
adc
and
sarl
leave
roll
out
sub
aas
inc
cmpsb
leave
int
scas
out
popf
add
scas
arpl
fmuls
mov
aaa
imul
sub
outsl
mov
mov
xor
call
popa
pop
adc
fucomp
js
pop
fwait
adcl
adc
mov
dec
out
sub
gs
cltd
pop
mov
add
jecxz
adcb
ljmp
dec
adc
adc
xor
jmp
or
cwtl
mov
andb
mov
xchg
xchg
ret
jl
rorl
inc
mov
ss
mov
ficoms
rcrl
add
add
aas
out
add
cmpsb
cmpsl
sub
and
and
add
mov
pop
push
xor
aad
outsl
scas
pop
daa
lds
aas
pushl
add
push
mov
dec
xlat
es
xchg
sbb
popf
out
dec
jmp
pop
rorl
fidivl
fadd
cmp
dec
loop
pop
adc
xorb
movsl
loopne
mov
sti
insb
movzwl
jp
hlt
mov
xchg
and
dec
adc
test
and
fwait
add
mov
lret
loop
nop
sbb
into
in
insl
xchg
inc
daa
adc
cmp
push
adc
mov
add
mov
in
std
insl
fstps
mov
cmp
push
sub
lcall
push
add
pop
sbb
das
cmp
pop
xchg
pop
adc
mov
data16
ds
ja
xchg
and
jmp
adc
adc
mov
adc
dec
in
adc
fbld
movsb
jo
add
mov
stos
inc
int3
pop
push
test
fistps
jbe
cmp
mov
adcb
and
push
aad
xchg
fildll
in
sarb
cvtps2pi
leave
adc
jb
jae
lods
rolb
leave
and
test
lea
or
jb
mov
xlat
mov
add
imul
aam
daa
insb
inc
jl
insl
add
mov
or
dec
and
imul
dec
pop
add
sbb
das
and
dec
fmuls
adc
xor
and
imul
shrl
jle
jecxz
inc
inc
jno
ss
pushf
jmp
jns
xor
fmulp
jg
sub
sahf
pop
mov
lea
xchg
test
mov
xchg
mov
cltd
sbb
jmp
and
repz
ss
push
adc
or
icebp
scas
mov
daa
push
andl
out
in
push
push
jmp
out
or
jns
fnsave
xchg
dec
fst
push
ds
hlt
mov
popf
inc
xchg
or
movsb
jmp
jns
or
jmp
or
ret
rclb
and
cmp
pop
leave
xor
jge
lds
xor
popf
or
nop
jb
les
inc
cli
hlt
rclb
cmpsl
pop
mov
ja
pop
xchg
movsb
cltd
out
jecxz
out
or
aas
ds
dec
mov
cmp
cmp
ret
loope
mov
nop
movl
dec
adc
add
stos
sbb
ficompl
xlat
lods
mov
or
push
jbe
inc
and
test
jp
adc
fdivrs
fcomip
out
out
pop
test
testl
inc
jl
xor
adc
loop
shll
mulb
lret
adc
xor
int3
add
push
jns
mov
roll
jle
ja
dec
lcall
sub
jp
pop
call
bound
pop
sbb
mov
test
fildl
es
pushf
cmp
insb
jo
fisubl
mov
push
cli
xchg
nop
aas
xor
mov
xor
lret
jle
cmp
jl
lods
aad
mov
and
xor
idivl
in
pop
out
cmp
pop
add
xor
xor
orl
bound
fidivl
add
insb
mov
ja
mov
pop
cmp
inc
testb
jae
lds
cmp
fisttps
repnz
ret
int
sbb
push
mov
xor
mov
jg
push
inc
mov
push
sub
pop
popa
rclb
stos
gs
out
jl
cmc
lods
dec
push
fisttpl
mov
dec
cmc
mov
add
stos
negb
xor
jne
enter
mov
cld
pop
inc
out
push
sbb
imulb
adcb
or
xchg
push
and
add
adc
mov
fidivl
mov
sbb
add
or
inc
scas
jne
add
int
jge
testb
nop
clc
dec
pop
lahf
aas
or
mov
lods
es
cmpsl
out
test
or
pop
das
inc
rcrl
addps
pop
dec
enter
iret
movsb
rolb
mov
data16
pop
test
sub
adc
inc
mov
push
xor
adc
adc
push
jo
or
lea
or
lods
pop
test
pop
push
leave
dec
fchs
mov
adc
insb
mov
rorb
cltd
jbe
xlat
leave
mov
mov
jb
jle
out
out
fildll
clc
push
js
out
dec
or
sbb
dec
stos
daa
dec
jno
cmpsb
and
fbstp
add
add
int3
mov
xor
jo
inc
scas
mov
fxam
outsb
adc
xorb
xlat
call
aaa
lahf
leave
dec
idivb
lock
outsl
cltd
add
jle
pop
sub
sub
lcall
ds
jmp
or
adc
fst
sbb
mov
cmp
out
lahf
sbb
gs
shl
addr16
jge
ljmp
cltd
or
addr16
push
out
jae
pushf
loop
sbb
push
adc
lcall
movl
push
test
push
xor
aas
std
xchg
rcll
ljmp
ret
push
add
out
add
and
arpl
adc
cmp
sahf
dec
jl
lea
nop
movsb
rorl
data16
xchg
addr16
imul
cmpsl
pop
cmovnp
std
xor
xlat
neg
fsubs
mov
lds
sbb
xor
jmp
cmp
mov
mov
in
jle
mov
shlb
lret
dec
loopne
and
cmc
or
je
andb
or
pop
xlat
pushf
push
inc
pop
daa
sub
clc
clc
shll
popa
push
rol
mov
inc
jbe
sub
ja
sti
or
das
into
lock
mov
es
out
xor
mov
pop
outsb
pop
mov
aaa
icebp
mov
in
pop
xlat
es
mov
sti
push
and
mov
hlt
push
pop
xor
push
and
push
push
add
mov
call
mov
call
fisubrl
pop
mov
rcll
sbb
loopne
lcall
pop
out
push
pop
iret
aad
cmp
xor
fists
mov
out
daa
sub
enter
pop
rorl
pop
sbb
bnd
repnz
aad
int3
imul
jbe
add
mov
roll
ja
rcll
jmp
cmc
scas
aaa
jle
rclb
sub
or
shll
loope
cli
int3
stos
aad
adc
fisubrs
mov
inc
arpl
into
inc
and
mov
adc
fists
movsb
rclb
mov
stos
in
mov
pusha
mov
sbbl
mov
mov
inc
mov
cli
shll
adc
mov
ds
or
cmp
lret
out
xchg
in
inc
into
test
xlat
arpl
jmp
jo
adc
push
cmp
movsb
repz
mov
jne
lret
push
or
mov
push
pop
shll
inc
enter
lret
xor
mov
adc
div
push
lcall
das
push
lods
inc
pop
rolb
nop
adc
jns
pop
out
adcl
fistl
add
ret
jge
cmp
mov
cld
cmp
push
mov
sub
xchg
je
imul
push
sub
push
push
push
mov
out
add
mov
iret
nop
stos
pop
out
and
xorb
mov
lods
sbbl
sub
push
dec
push
cmpsl
les
imul
mov
in
sahf
lods
lcall
sti
jne
insb
inc
mov
xor
or
in
aam
mov
adc
nop
test
mov
into
dec
mov
jbe
push
mov
lods
out
push
cld
es
and
fdivr
out
push
hlt
aaa
or
cvtps2pi
pushf
dec
inc
push
je
sbb
dec
jne
xchg
insb
cltd
add
popf
mov
rcrb
push
or
in
je
jbe
mov
cs
mov
dec
daa
dec
sarl
push
jb
cmp
test
and
mov
test
or
inc
jns
inc
stos
lea
js
pushf
loopne
add
jns
lock
mov
mov
lahf
xor
mov
sbb
in
outsb
andl
xchg
mov
idivl
rorl
stc
jno
mov
pop
nop
xchg
fcmovnb
cmp
not
test
lock
adc
mov
lea
xor
popl
mov
lret
xlat
pop
xor
jo
nopl
pop
mov
push
movsb
leave
rorb
loope
inc
inc
loopne
push
and
mov
inc
xchg
shlb
cs
xor
gs
xor
cltd
sbb
mov
fistpl
inc
rcr
mov
jns
nop
lret
int3
mov
sub
filds
xchg
dec
cmp
mov
jno
out
test
mov
lcall
xor
in
mov
loope
dec
mov
push
ret
ss
pop
xor
xor
adc
mov
das
movsb
push
dec
or
xor
in
clc
sbb
sbb
mov
cmp
iret
sbb
pushf
ret
push
add
add
push
lcall
xchg
or
lea
in
lcall
push
push
xchg
cmpsb
loopne
repnz
jle
fisubs
push
and
shr
mov
pusha
dec
or
sbb
test
pop
and
mov
sub
sub
dec
mov
sbb
jnp
xchg
lea
stc
cmp
nop
das
adc
out
out
sub
sti
pop
test
pusha
icebp
lcall
mov
push
jge
sarb
shrb
mov
stos
xchg
ficompl
pop
cld
cld
xchg
sahf
je
stos
popa
xor
inc
iret
mov
dec
dec
mov
pusha
and
inc
adc
xchg
cmpsb
inc
fs
rorb
add
cmpb
lcall
and
int
xor
cmc
inc
add
orl
push
or
mov
test
daa
mov
push
das
pop
xor
fwait
out
sub
push
leave
jp
adc
aaa
xchg
push
std
fbld
adc
mov
mov
mov
mov
add
dec
push
pop
sbb
ja
mov
addl
cmp
jle
mov
push
arpl
jb
mov
cmp
sbb
repz
adc
fcmovne
addr16
mov
int
ja
imul
cmp
nop
push
scas
jle
push
and
or
xchg
je
sbb
jge
pop
mov
es
cmp
mov
enter
mov
cmpsl
adc
add
movsl
or
and
add
scas
stos
sbb
sahf
lret
push
mov
push
pushf
xchg
aas
inc
jno
sub
and
jbe
jae
mov
mov
or
dec
adc
push
fstps
aad
cld
stc
dec
popf
loope
cwtl
cmc
mov
aad
notl
psubsw
daa
mov
clc
jl
popf
dec
addr16
jbe
aas
xchg
out
into
mov
rcrl
fiaddl
push
rorl
popf
clc
pop
xor
mov
in
xor
xchg
mov
sub
pusha
bound
pop
cmp
insl
ds
xchg
mov
test
adc
cwtl
aas
iret
icebp
sbb
insl
or
shll
imul
lods
mov
subb
jae
adc
inc
jns
jg
cmpsl
add
mov
sbb
mov
pop
cmc
xor
add
daa
adc
fcmove
or
scas
sub
inc
pop
jno
jmp
xor
int
sbb
ss
lea
fimuls
insb
cmp
sbb
or
push
imul
je
adc
mov
pop
pop
xor
clc
mov
inc
or
clc
dec
cltd
xchg
imul
repz
pop
mov
lock
int3
mov
adc
pop
jp
adc
cwtl
inc
test
adc
es
mov
jbe
addr16
pop
dec
imul
fcmovb
xchg
fstl
jne
cmp
int3
and
jbe
xor
ret
inc
xlat
js
andb
add
je
int3
mov
lret
sub
xchg
fnstenv
push
and
clc
dec
fwait
pop
in
arpl
je
xchg
pop
std
xchg
or
jmp
fnsave
leave
addr16
sbb
sbb
or
and
adc
pusha
stc
mov
int3
jecxz
and
push
in
inc
andb
push
gs
mov
sbb
gs
push
stos
mov
scas
test
jle
mov
in
rorb
jge
mov
outsl
stos
aam
jne
ja
cmp
pop
add
fucomi
cli
test
sahf
sti
xor
cmc
sbb
ret
xlat
mov
je
rcll
mov
add
enter
jbe
cmp
in
cltd
pop
add
sbb
cli
mov
mov
icebp
mov
cmp
dec
cmc
add
sahf
mov
das
push
inc
adc
test
and
and
push
lea
push
xchg
je
insb
lret
repnz
sub
sub
adc
sbb
fsubs
adc
fwait
das
gs
sbb
mov
mov
int3
inc
mov
push
inc
popf
movsl
cmp
jo
ds
add
or
es
fwait
xor
call
jmp
dec
aaa
cmp
or
mov
jmp
fwait
add
mov
and
xchg
cmpsl
in
and
test
shl
mov
mov
repz
fstl
cltd
cltd
pushf
and
fnstcw
std
hlt
clc
adc
les
lock
loop
cltd
sub
xlat
xlat
sbb
ljmp
adc
out
push
aad
pushf
mov
mov
xor
sub
je
cld
push
mov
mov
test
xchg
test
ret
cltd
xlat
adc
les
in
mov
mov
push
lods
loop
in
dec
adc
fs
inc
adc
insb
dec
and
mov
inc
mov
adc
movsl
movsl
ja
scas
lock
mov
mov
push
fdivr
jae
push
call
or
movsb
adc
dec
fwait
pop
std
push
dec
aas
or
shrl
iret
mov
dec
pushf
jmp
pop
das
gs
sbb
out
pop
lock
jae
vpunpckldq
loop
mov
dec
jmp
fs
test
xor
es
daa
mov
fucomip
popf
adc
int
repz
sbb
test
push
out
mov
cmp
into
loopne
adc
insl
mov
mov
dec
das
rcr
andl
adc
and
jecxz
leave
inc
jns
hlt
mov
or
sub
pop
out
xchg
lock
aam
jecxz
xor
jmp
addr16
lock
push
mov
mov
xchg
pop
and
out
shr
in
jae
inc
mov
iretw
xchg
sub
sub
push
sbb
test
out
cmp
pushf
mov
mov
mov
mov
shll
je
jge
jbe
arpl
insl
testl
xor
outsb
cmp
push
test
ficompl
xchg
lahf
pop
sub
push
addr16
sub
stc
push
sbb
dec
jne
cld
decb
pushf
cmpsl
rclb
jno
jo
pop
mov
and
jno
adc
dec
push
jns
jge
movsl
lods
pushf
add
jp
jb
addl
test
imul
movsb
mov
rclb
aad
cmpb
mov
jl
jb
repnz
sahf
gs
jns
lret
repnz
push
cmp
mov
mov
and
pushf
subb
pop
pop
sub
sub
push
insl
out
or
addr16
lret
sub
popf
mov
int3
popf
mov
push
sub
test
add
ret
and
dec
inc
jb
push
inc
pop
xor
adcb
sbb
out
or
cmp
xor
sub
pop
cmc
movsb
fidivl
lcall
jle
push
mov
dec
xchg
ret
sbb
sbb
jo
sahf
pop
rcrb
outsl
mov
dec
mov
es
bound
xlat
dec
pop
mov
jmp
mov
xlat
mov
xor
xor
out
and
in
add
xchg
daa
je
dec
arpl
pop
inc
mov
jg
mov
lock
sbb
sbb
aaa
pop
out
lods
mov
in
cwtl
dec
xchg
push
cmp
inc
outsl
add
push
dec
jns
cwtl
inc
out
and
aad
push
jo
cmp
fidivs
in
mov
clc
icebp
xor
cwtl
pop
shll
ror
mov
pusha
out
shl
sub
xchg
movsb
sub
or
cmp
adc
adc
hlt
aaa
insl
sub
jge
lret
imul
sbb
or
mov
xchg
jl
stc
bound
es
addr16
aaa
call
xchg
push
movsl
mov
addl
sub
ss
test
popa
mov
ja
bound
push
imul
dec
enter
sub
adcb
push
ficoml
les
mov
rorl
jecxz
arpl
data16
cli
push
scas
stos
cmpb
movsb
add
fwait
mov
fldl
roll
inc
cld
inc
push
sub
inc
adc
xchg
out
and
and
jb
mov
push
jbe
sar
xlat
ret
inc
xchg
fs
mov
push
hlt
cmpsb
mov
jmp
cld
sti
imul
mov
mov
rcll
adc
popf
adc
add
clc
out
fildll
and
mov
scas
dec
add
pop
adc
dec
adc
sbb
push
xchg
jge
pushf
push
pusha
ficoml
fildl
ret
dec
adc
fistps
fdivl
js
inc
movsl
and
fwait
adcb
std
cmp
aad
mov
xchg
insl
adc
pop
int
ret
icebp
pop
or
loop
out
lahf
pushw
or
pop
cmp
mov
movsb
test
jae
dec
sub
xor
daa
cld
stos
pusha
inc
repnz
cwtl
out
xor
jle
lahf
mov
push
test
xor
inc
mov
lahf
lret
xor
xchg
dec
fldenv
addl
mov
xor
pop
adc
jmp
push
loope
xorb
push
aam
sti
inc
outsl
movsl
dec
mov
inc
jp
jp
lahf
enter
cmpsb
ja
mov
dec
mov
mov
xchg
push
in
push
mov
jbe
jb
bound
addr16
xor
lock
mov
dec
jp
mov
mov
dec
jp
inc
xor
push
mov
imul
pushf
inc
adc
es
out
icebp
fidivs
and
mov
push
mov
stos
mov
push
jp
leave
cmp
jmp
in
arpl
sub
mov
cld
das
jmp
out
insb
outsl
movsl
adc
add
and
fimuls
mov
pop
push
out
pop
int3
pop
aaa
loopne
adcb
arpl
jge
shl
xchg
shl
adc
jl
test
inc
fnstenv
mov
jbe
sbb
jae
movsb
xchg
outsl
addr16
outsl
mov
ja
jno
dec
inc
es
ljmp
push
xchg
shrl
dec
scas
pop
cmp
xor
and
mov
pop
ljmp
ret
fucomip
xchg
shrb
mov
pop
cltd
ljmp
mov
cmp
inc
into
popa
stos
jp
mov
or
mov
out
xchg
es
mov
add
lods
adc
xor
sub
cmp
pop
or
jecxz
xchg
and
adc
mov
mov
mov
lahf
adc
rol
push
bnd
sub
mov
ja
fisubl
pop
jns
push
mov
cmp
push
jp
and
mov
sbb
cmp
into
or
sub
inc
out
pop
decb
mov
adc
mov
lods
nop
aad
mov
cmp
inc
mov
xor
fcmovbe
dec
in
adc
cmc
mov
cmpsl
pop
push
dec
mov
sbb
je
test
fldt
mov
push
js
xchg
or
scas
jnp
test
sub
xchg
rcll
fldln2
imull
inc
adc
movsl
add
dec
int3
pop
jp
adc
loope
xchg
mov
outsl
incb
push
iret
xor
imul
dec
andb
and
hlt
dec
inc
jg
dec
jns
movsb
cmp
mov
push
mov
aas
inc
movsb
loope
push
xor
lea
mov
lods
das
test
mov
mov
ja
push
or
mov
xor
insl
adc
xor
dec
js
ficoml
mov
scas
cmp
imul
pop
add
sub
je
xchg
inc
xor
test
addb
sbbb
push
dec
add
mov
lods
addb
lret
inc
jge
mov
fdivrs
stos
xor
fucomi
and
out
imul
xchg
sub
gs
mov
xchg
sbb
iret
mov
adc
mov
fwait
inc
mov
jbe
sbbl
and
call
pop
cmp
add
sbb
push
or
fwait
cmp
bound
aaa
push
lods
and
sub
add
hlt
cwtl
in
jmp
mov
xchg
dec
fisubrs
jle
test
bound
or
sub
fs
jne
loopne
cld
adc
and
pop
jp
lret
add
loope
xor
fsubs
xor
or
mov
mov
and
aad
or
jo
jp
orl
fwait
inc
or
push
lcall
or
add
pop
dec
push
insl
or
xchg
cmp
aam
pop
xchg
sbb
es
out
gs
sub
fldcw
adc
pop
push
lret
xorb
std
mov
pop
lcall
sub
jbe
push
mov
outsb
xchg
in
test
popl
addr16
lock
push
repnz
or
pop
rorb
or
and
jo
mov
popf
cmc
dec
lret
es
xchg
lock
out
sbb
bnd
jo
mov
adc
pop
sub
repnz
sahf
add
sbb
ret
movsl
sub
ss
arpl
inc
movsl
enter
lods
push
enter
insl
push
call
and
fwait
aas
aaa
rcll
jne
jne
dec
ja
hlt
vmovaps
loopne
subb
out
mov
and
into
int3
add
pop
xor
push
push
mov
xchg
sbb
sbb
pop
addr16
xchg
mov
addb
fucomi
jg
mov
fs
enter
push
dec
mov
ds
mov
push
ret
cmp
sub
std
jne
std
sub
jecxz
inc
or
rcl
dec
and
pop
pop
inc
mov
pop
icebp
fsubrp
adc
in
pop
adc
dec
or
lods
jne
mov
xchg
fadd
sub
sbb
push
lcall
jbe
xchg
test
xor
out
xchg
stos
cmc
cmp
push
mov
xchg
adc
fcmovnbe
or
ss
dec
or
pusha
movsl
add
xchg
sbb
push
icebp
repz
sbb
mov
insb
add
xor
dec
dec
ficomps
or
sbb
outsb
push
icebp
cmp
pop
gs
sbb
cmp
call
imul
push
repnz
xchg
leave
dec
lret
movsb
push
call
aas
mov
or
ficomps
adc
int
jno
cmp
push
jl
jmp
or
js
push
stos
jecxz
dec
jb
cmp
adc
rcrl
scas
jecxz
cmp
int
fwait
out
jle
mov
adc
and
push
push
lock
fwait
push
inc
mov
sbb
ja
push
hlt
imul
inc
push
pop
mov
ret
shrb
add
sbb
xchg
fcoml
loope
cmp
add
sti
pop
mov
arpl
loopne
and
or
jecxz
dec
sub
testl
call
call
pop
dec
rolb
addr16
enter
sahf
out
aad
mov
mov
popa
mov
out
gs
pop
jbe
aas
xchg
inc
mov
push
repnz
lods
sahf
popa
test
cli
lds
sbb
pushf
test
mov
mov
sbbl
jb
push
aad
mov
mov
ss
jns
stos
mov
mov
dec
out
add
shlb
ja
insb
inc
jmp
sub
lahf
mul
lahf
push
mov
rcrl
pop
pop
pop
and
ret
push
sbb
jl
filds
arpl
push
mov
adc
or
test
jno
rcrl
subl
mov
and
fstl
movsb
xor
xchg
sub
mov
or
dec
add
mov
fidivrs
jg
jl
scas
dec
in
pusha
sbb
lahf
xchg
and
sub
cmp
jne
nop
vpmovzxbw
arpl
fadd
out
push
sub
lods
lcall
scas
shlb
jle
inc
fst
gs
or
mov
mov
sub
shlb
inc
cmpl
push
out
push
inc
push
shlb
add
gs
cli
adc
push
adc
xor
out
fstps
fstl
inc
int
loop
cmp
lds
movsl
sbb
ss
and
xorl
pop
std
cmpsb
inc
xchg
aas
mov
movsb
in
cmp
xchg
iret
adc
dec
sub
sub
push
mov
mov
and
test
push
add
and
jge
int3
data16
icebp
pop
jp
loopne
push
stos
cmp
cmp
test
clc
and
dec
cwtl
mov
fwait
mov
sbb
jb
pop
xchg
das
push
push
mov
gs
pop
and
pop
push
or
je
sub
mov
out
add
xchg
sub
addl
mov
fnstcw
xor
adc
out
mov
push
push
sbb
loop
jae
adc
int3
and
das
mov
lds
mov
scas
andb
out
hlt
mov
mov
out
loopne
or
mov
popa
stc
jbe
and
adc
and
lcall
push
cmc
sahf
test
iret
repz
dec
repz
pop
xchg
dec
ret
hlt
cmp
cli
cmp
call
sahf
push
sbb
dec
inc
xchg
fcomp
mov
lds
xchg
sti
fistps
sti
test
stos
or
outsl
test
aaa
push
in
testl
push
fcoms
mov
in
aam
adc
lock
nop
aas
mov
movsb
sub
scas
push
lods
xchg
jbe
pop
dec
sbb
out
cmp
xchg
xchg
and
dec
jl
xchg
rorl
pop
cwtl
pop
andl
push
mov
jg
pop
jp
cli
jmp
push
sub
xor
sbb
mov
int3
lds
xchg
out
push
prefetcht2
ss
inc
test
mov
dec
sti
rcll
daa
xor
cmp
movsb
sub
sarb
js
fidivs
in
add
pop
mov
fwait
ds
loope
repz
mov
fildl
inc
push
es
out
pop
and
jb
icebp
push
add
in
pop
ret
sbb
aam
xchg
push
je
mov
lcall
fwait
outsb
adc
xchg
adc
push
push
js
mov
adc
mov
pop
movsl
lret
popa
movsb
je
push
out
jae
test
out
in
push
push
and
outsb
test
xchg
dec
lods
fimull
dec
sahf
divps
dec
nop
leave
mov
mov
jne
js
push
leave
pop
int3
pushl
cmp
dec
repnz
ja
in
xchg
mov
out
push
adc
rolb
mov
pop
and
imul
xor
mov
pop
inc
shrl
jb
push
mov
ficoms
sti
push
out
xchg
xor
int
adc
out
nop
popa
int3
in
pop
outsb
mov
jp
inc
aad
test
xor
dec
insl
movsl
addr16
imul
add
jge
pop
movsb
mov
in
push
mov
fldl2e
mov
mov
mov
dec
aas
sahf
stos
xlat
pusha
sbb
jno
cmc
repz
push
push
cld
dec
cwtl
adc
mov
test
jp
add
movsb
rcl
aam
mov
push
arpl
cmpl
push
push
popf
mov
jne
outsb
out
call
sbb
inc
mov
sub
push
mov
pop
mov
and
arpl
rcrl
jne
mov
out
jl
in
push
push
ret
inc
cltd
stos
incl
scas
adc
pop
mov
and
out
sbb
scas
push
dec
push
mov
pop
mov
fstl
inc
pop
sub
lret
js
lock
xor
push
mov
cmc
lods
repz
in
insb
aad
mov
out
mov
pop
sbb
sti
outsb
mov
jmp
fmulp
or
push
dec
je
cli
mov
sbb
pop
xor
mov
mov
or
mov
mov
scas
in
push
jl
out
les
fdivl
mov
fwait
das
xchg
jle
popa
pop
rep
arpl
push
faddl
ds
and
cmp
push
idiv
nop
sub
and
jno
jecxz
mov
jne
mov
mov
xor
rcrl
je
cmc
push
inc
fldt
leave
sbb
cmp
mov
dec
pusha
or
jne
shll
mov
lds
adc
xchg
adc
in
orl
mov
repnz
mov
add
dec
bound
mov
insl
cmp
cli
ficoml
out
push
dec
adc
repnz
stc
in
test
xchg
fs
stos
mov
adc
xchg
xor
mov
mov
xor
scas
dec
inc
push
pop
int3
fldenv
adc
push
jmp
test
loop
out
mov
test
mov
ret
or
jno
fsubs
rcrb
adc
out
push
das
hlt
and
adc
test
nop
mov
cmp
cmp
and
outsl
pop
pop
mov
sbbl
popf
jle
sbb
inc
sbb
push
rol
sti
xchg
fwait
arpl
dec
pop
cltd
pop
dec
fwait
add
inc
xchg
pop
dec
or
neg
fst
push
xor
sbb
mov
dec
inc
cmpsb
shlb
or
mov
cmp
and
jnp
pop
das
mov
popa
je
shl
adc
mov
std
inc
rcrb
fs
xchg
dec
mov
mov
mov
dec
pop
cmpxchg
pop
loopne
mov
mov
inc
bnd
push
shrb
jmp
test
pop
sbb
push
jne
inc
jg
pop
fwait
bound
pop
push
movzbl
or
xor
mov
cmp
mov
addb
xor
sub
xor
add
push
subb
pusha
cli
add
js
mov
cmc
clc
stos
mull
mov
lret
out
adc
les
adcl
xchg
inc
cmpsb
jmp
sub
dec
and
or
xor
mov
jmp
jbe
cs
movl
lret
mov
into
cmp
out
pushl
or
ss
in
sub
mov
pop
test
push
scas
add
inc
cltd
sbbb
xchg
xlat
sti
jns
pop
dec
dec
fwait
mov
dec
fwait
aaa
mov
jae
into
add
iret
sub
mov
and
ror
lret
out
testl
out
push
out
mov
cmp
ja
lea
scas
aad
xor
es
or
mov
push
push
scas
push
mov
sahf
or
jmp
mov
popf
mov
jbe
mov
rolb
fucomi
push
arpl
out
cmp
mov
ds
loop
in
pop
mov
dec
sub
lock
and
mov
ljmp
jmp
xchg
push
lds
sti
paddb
lds
mov
outsb
cmp
xchg
cmc
outsb
adc
rcl
cmp
mov
jno
jecxz
mov
push
dec
int
out
call
cmp
or
in
mov
mov
out
fisubs
push
inc
jmp
nop
stos
sbb
adc
push
fists
dec
sub
lret
insb
int3
xor
mov
decl
fisubrs
and
cmpl
jae
add
mov
call
jge
pop
test
cmp
ljmp
outsb
cmp
xor
je
pop
fadds
dec
xor
dec
leave
push
adc
push
nop
out
cmpl
pushf
shrb
popa
test
pushf
sbb
cmpsb
cwtl
shlb
mov
adc
pushf
pop
hlt
push
movsb
dec
lret
sub
pop
or
addr16
mov
add
mov
movsb
push
pop
rcrb
mov
mov
lcall
lfs
sub
test
pushf
test
scas
sbb
mov
push
lret
add
sbb
push
mov
and
stos
dec
aas
mov
mov
test
jle
add
xchg
loopne
cmpsb
outsb
imul
xlat
jecxz
inc
sub
rcll
push
mov
xchg
jbe
sbb
sub
rorb
push
sub
and
int3
gs
lods
push
or
leave
and
ds
sub
fbstp
mov
cltd
push
pop
dec
pusha
andb
or
addr16
les
mov
sub
pop
cmc
xchg
jno
push
lret
loopne
xchg
test
ds
pop
pop
inc
inc
icebp
xchg
popa
pop
dec
ja
xchg
jns
jmp
dec
mov
sub
mov
lahf
sahf
ret
lret
mov
pop
addl
jge
adc
das
cmp
adc
mov
jp
pop
pop
fsubl
clc
mov
fdivl
pop
xor
subb
adc
movsb
int
popf
test
dec
pop
xchg
in
pop
cs
fstl
aad
mov
fisttps
push
dec
jb
and
insb
fdivs
add
dec
nop
jecxz
pop
lret
stos
cmpsl
shll
clc
adc
pop
mov
das
popf
cmc
fbstp
popf
mov
adc
dec
jbe
lret
xor
jl
pop
pop
xlat
into
dec
rcrb
jmp
xor
out
sub
std
push
xchg
rolb
and
inc
mov
xor
rorl
xor
stos
or
orl
and
inc
and
scas
cmpsb
mov
and
sub
aad
mov
ljmp
push
mov
and
xchg
outsb
out
jno
in
outsl
xchg
xor
sbb
and
pushf
xor
sbb
scas
loopne
mov
popf
enter
sub
adc
pop
testl
cmp
inc
mov
scas
cmpsl
mov
movsl
cmc
dec
repnz
mov
mov
or
mov
sbb
push
xor
pop
in
xchg
mov
sbb
or
xchg
in
mov
mov
sbbl
into
cmpsb
test
loopne
jle
aaa
lret
mov
xor
test
xchg
loopne
mov
dec
imul
fbld
mov
or
lret
addr16
rolb
mov
mov
andb
ret
jno
jns
adc
stc
xor
mov
lcall
xchg
xchg
push
inc
adcl
adc
add
je
js
mov
in
pop
dec
cltd
out
call
xor
ret
sbb
daa
cmp
pop
imul
adc
out
aaa
push
in
and
lret
push
popa
push
xchg
sbb
push
push
mov
fildl
iret
mov
add
xchg
mov
lock
sub
push
adc
ss
pop
loop
and
mov
ret
shrb
jp
mov
push
xor
movsl
mov
mov
lcall
loop
xchg
stos
cmp
xor
bound
outsb
sub
jl
fisubl
cmp
add
test
add
dec
psubsb
adc
mov
leave
xor
lahf
outsb
push
icebp
rcrl
jecxz
push
fdivl
sahf
int3
test
adc
test
mov
or
mov
movb
scas
push
test
pop
xor
nop
push
jecxz
imul
dec
adc
or
lret
cmp
lock
push
dec
imul
jb
mov
fs
jle
sbb
nop
push
and
out
mov
add
ss
jno
adc
inc
inc
ss
xchg
push
cltd
test
mov
push
pushf
xlat
cmpsb
stos
cmpsb
pop
cli
test
mov
xchg
sti
cmpsb
aad
push
add
cli
lahf
inc
mov
mov
jle
loop
popa
xchg
mov
mov
pop
loop
mov
xchg
xor
test
and
cmp
mov
or
xchg
xor
sarl
call
mov
add
pop
int3
test
mov
fdivrs
sub
lods
clc
mov
mov
mov
dec
cld
xchg
mov
decl
push
xchg
xchg
sti
add
mov
addr16
fnstsw
push
out
add
inc
into
mull
cli
stos
divb
sbb
dec
arpl
and
cmp
orl
mov
aaa
fninit
or
pop
xchg
pop
movsb
fsqrt
xchg
ljmp
push
mov
or
cltd
jbe
sub
pop
add
adcl
cmpsb
push
inc
icebp
dec
fidivl
push
pop
inc
mov
push
sub
or
lock
js
sbb
hlt
ljmp
pop
pop
jmp
pop
test
xor
and
sub
adc
cmp
xor
mov
mov
jb
out
add
jb
shrl
sbb
int3
xor
or
cmp
in
jbe
pop
sbb
insl
mov
sbb
add
adc
dec
lods
aas
sub
dec
daa
icebp
jge
jecxz
movsb
call
mov
pop
call
nop
mov
fcomi
arpl
mov
or
jbe
jns
imul
outsl
aas
jbe
cld
mov
inc
cmp
push
fiaddl
inc
and
sahf
fwait
out
or
sbb
lea
xchg
lods
push
stc
enter
mov
jbe
sbb
sbb
cwtl
pop
iret
mov
xchg
sub
out
push
jno
mov
ss
mov
fsubrl
dec
pop
sbb
ret
mov
jae
repz
or
xor
pop
sbbl
cli
xchg
imul
mov
mov
and
testb
int
push
pop
inc
adc
jo
and
mov
pop
and
lods
adc
inc
xor
jmp
or
adc
outsl
lods
ljmp
jo
cmp
cmpsb
inc
out
dec
add
jp
test
xchg
mov
dec
jmp
fs
xor
mov
ja
push
and
or
mov
dec
mov
mov
push
or
push
dec
inc
fsubs
inc
fs
add
and
rclb
inc
dec
mov
int
push
js
inc
inc
adc
dec
insl
sbb
fsts
in
sub
js
push
inc
mov
jne
mov
sbb
outsl
cli
fucomip
aad
sub
sahf
mov
xor
pop
divb
mov
adc
jo
lret
pop
push
ds
sbb
cld
ffree
xchg
mov
fiadds
push
push
arpl
inc
test
or
push
aas
xor
cwtl
mov
and
sbb
rolb
pop
mov
xor
and
dec
call
bnd
ficoml
movsb
cmpsb
jo
xchg
pop
outsl
adc
popa
or
icebp
lds
out
ret
sahf
jo
fldenv
jp
in
mull
imul
jo
pushf
scas
orl
sub
inc
movsl
addr16
inc
out
xor
stos
mov
sbb
jno
daa
sbb
test
mov
mov
or
push
popf
in
mov
cli
sub
mov
mov
sbb
popa
stos
ficomps
adc
cli
loopne
adc
in
adc
cmc
adc
jl
les
add
mov
jne,pt
pop
fwait
js
hlt
out
cmp
rcl
pop
add
cmp
out
jno
out
cs
pop
dec
cmp
push
adc
sarb
ljmp
mulb
mov
xchg
add
cmp
mov
xchg
mov
insb
pop
push
adc
das
push
cmp
xchg
cwtl
outsl
rol
pop
rol
fidivs
jmp
jecxz
dec
mov
or
jb
cwtl
addr16
cltd
jl
add
inc
inc
xchg
jecxz
cmp
add
rcrl
iret
or
push
add
push
push
fistpl
subb
xchg
mov
outsl
jmp
sahf
sbb
mov
lahf
les
cmpsl
or
not
scas
aam
out
add
pop
mov
mov
jmp
inc
shrl
loope
adc
pop
mov
adc
lock
flds
repz
repnz
fnstsw
dec
in
stos
sahf
push
sub
pop
mov
aad
nop
mov
mov
or
stos
push
dec
and
dec
cltd
jnp
cs
fmull
xlat
clc
ja
ja
fcomp
in
mov
stos
sbb
pop
fdivl
movsb
fadd
inc
and
mov
fcoml
push
les
pop
push
shlb
lea
mov
hlt
or
insl
and
mov
call
loop
je
test
fnstcw
jns
lret
xlat
mov
inc
andb
ficoms
mull
imulb
xor
orl
mov
mov
mov
popa
push
mov
scas
or
xor
jmp
mov
sahf
fdivs
dec
fwait
mov
ss
ljmp
add
fwait
leave
or
les
rclb
cld
loope
adc
mov
cmp
movsb
inc
xor
add
cmp
fsubs
or
mov
jns
adc
jae
add
pushf
mov
add
sub
in
jp
mov
jmp
das
xchg
scas
cmp
push
xchg
imul
cmc
sbb
int
xchg
push
dec
mov
jg
jecxz
jp
test
pop
add
inc
jl
pop
mov
mov
into
inc
pop
dec
inc
pop
aam
ret
or
add
hlt
out
jo
into
mov
in
lds
mov
insb
fimuls
insl
cmpsb
fmuls
jmp
scas
cmpsl
imul
cli
mov
test
mov
cmp
pop
adcl
xor
movsl
test
pmuludq
pusha
sub
adc
or
inc
mov
cmp
mov
pop
subl
jecxz
fists
insl
testl
sarb
add
jl
sbb
or
out
lea
dec
dec
sbb
add
xlat
int
ds
lods
adc
in
mov
adc
fsubr
pop
paddusw
cmpsl
cmp
stos
mov
and
imul
xor
mov
xchg
pushf
mov
push
xor
scas
ret
inc
aas
mov
mov
das
pusha
out
lahf
adc
or
jae
fsts
push
out
mov
pop
test
je
das
and
xchg
pop
imul
sbb
jo
mov
dec
lret
pop
sbb
and
mov
mov
mov
xor
nop
mov
cmpsb
jnp
xchg
push
loope
inc
ja
out
stc
repnz
adc
filds
insl
dec
mov
les
xchg
js
test
xor
push
jae
fwait
mov
ret
add
arpl
mov
sti
jbe
dec
mov
xchg
cmp
push
in
add
dec
arpl
loopne
orl
sbb
lret
sbb
outsb
xchg
pusha
imul
pusha
mov
sarb
js
orb
lods
sbb
mov
mov
popa
and
dec
data16
enter
sub
fadds
lods
push
sbb
mov
sbb
testl
dec
push
and
leave
pusha
sub
cli
and
adc
call
push
lret
mov
shrb
in
ret
dec
aam
and
shlb
xor
cmpsb
dec
daa
pop
shll
flds
cmp
add
jne
jmp
enter
ret
scas
xor
fmull
xor
jnp
outsl
cli
push
cld
mov
repnz
adc
shr
xor
add
das
mov
fnsetpm(287
lods
ja
popf
mov
xor
adc
lods
js
mov
pop
adc
mov
xorl
xchg
cmp
imul
push
mov
popf
push
mov
jb
cld
in
repz
sub
xchg
add
pop
sub
nop
push
push
jns
mov
fisubrs
fisubs
in
sti
popa
int
data16
pop
pop
cmp
ficoml
pushf
mov
imul
xchg
add
lret
cli
orl
adc
jbe
roll
sbb
sub
bound
mov
mov
aaa
xchg
dec
test
inc
xchg
aas
mov
hlt
clc
or
or
test
push
mov
cmp
aas
mov
fstpt
pop
out
addr16
ds
ds
in
shr
call
sbb
sbb
and
sbb
pop
cmp
hlt
aam
or
aad
add
ds
and
add
push
adc
xor
push
adc
adc
movsb
and
ss
arpl
ja
cmp
mov
xchg
lods
sbb
int
arpl
out
ficoms
mov
loop
dec
pushf
fidivs
dec
ret
call
mov
rcr
mov
xchg
add
pop
lahf
add
pop
out
shr
ret
jbe
xchg
fisubrl
lcall
test
out
mov
mulb
mov
cltd
inc
add
cmp
cld
mov
aad
pop
ljmp
ficoms
xchg
mov
xor
call
pop
or
std
pop
stc
das
ficomps
cs
jg
inc
mov
cld
jno
mov
popf
stos
pushl
js
xchg
clc
in
out
push
rolb
outsb
es
mov
cli
test
scas
popa
mov
in
push
loop
sub
mov
mov
in
mov
pushf
pushf
mov
inc
cwtl
mov
push
push
add
addb
mov
sub
cltd
aas
xchg
pop
iret
aaa
and
push
fimull
xchg
fs
inc
push
dec
test
jp
ja
or
and
mov
sbb
mov
sub
mov
ja
sbb
in
into
dec
es
cli
insl
data16
scas
jnp
stos
pop
add
out
sub
psubsw
and
flds
fstl
lret
ljmp
sahf
sbb
loope
push
push
leave
cmpb
sub
hlt
mov
sbb
add
xchg
inc
movsl
xchg
jae
adc
leave
into
imulb
ljmp
and
xchg
loope
nop
fcompp
pop
mov
sti
jne
mov
jge
add
rolb
and
adc
sub
loope
call
popa
pop
shll
lods
std
pop
jo
or
test
mov
add
cmp
mov
shr
and
mov
add
popf
fists
lcall
pop
out
insl
aad
mov
dec
rclb
ss
sub
nop
std
outsb
cli
add
jmp
xor
into
movsl
ljmp
fdivrl
fstps
pop
jg
xchg
pop
out
jl
cmp
mov
push
jae
push
pop
add
mov
mov
adc
dec
outsb
xchg
or
shlb
bound
pop
je
aad
jge
popa
mov
and
orl
xchg
ret
mov
mov
fnstsw
inc
cmp
ljmp
shl
mov
mov
xlat
sub
cltd
xor
or
sbb
inc
push
in
jge
imul
sbb
mov
inc
xor
push
lds
push
enter
add
mov
lock
mov
and
jg
mov
inc
psadbw
aad
push
xlat
stc
stc
stc
addr16
shlb
mov
inc
stos
inc
or
inc
add
roll
adc
cmpl
js
inc
add
inc
insl
sbb
rorb
push
add
mov
xor
cmpsb
cmc
shl
and
movsb
cmc
inc
gs
dec
jb
adc
cmp
test
jno
lcall
imul
push
rclb
or
ret
in
out
jle
into
negb
iret
mov
loopne
dec
adc
imul
mov
sub
pop
popf
mov
sbb
arpl
sbb
sbb
xchg
pop
sub
movsb
fwait
push
inc
jl
mov
pop
mov
add
ljmp
push
mov
xchg
sub
out
decb
dec
stos
pop
int
jno
dec
inc
mov
mov
and
and
ret
jb
or
addb
mov
xchg
hlt
sbb
xchg
sti
push
jae
cmpsl
shl
push
pushf
mov
out
cwtl
push
add
push
test
repnz
lret
and
sbbl
cmpsl
and
jne
push
adc
pop
cltd
push
and
test
dec
daa
sub
mov
je
repnz
enter
bound
pop
pop
jo
sub
orb
jl
fsts
test
mov
mov
cmp
fstpt
sbb
bound
mov
in
lods
push
and
pop
inc
jb
push
call
jmp
xor
sub
adc
js
divl
insl
mov
xchg
es
jge
test
out
mull
inc
pop
mov
pusha
popf
jle
jmp
sub
xor
insb
dec
lahf
mov
bound
loopne
into
mov
pop
add
dec
loope
xchg
cmpsb
bound
push
insb
push
cwtl
sbb
ffreep
out
xchg
push
das
add
into
fcmovnu
daa
std
stos
mov
stos
fwait
cli
push
add
cmpsb
mov
sub
cmp
lods
pop
clc
outsl
or
or
push
jno
adc
push
aas
inc
mov
outsl
shll
fnstcw
sub
cld
sub
adc
lret
andl
sub
shll
aad
sbb
icebp
ljmp
push
mov
in
xor
cmp
jnp
mov
add
mov
dec
sbb
pop
dec
or
out
add
lret
push
push
xchg
jp
lock
jl
out
pop
movsl
jb
pop
push
mov
jae
mov
or
dec
div
fwait
ss
or
xor
psubb
lahf
push
xchg
outsb
int3
inc
sbb
mov
cmp
pop
jne
pop
or
inc
cltd
lods
and
or
mov
cmpl
xor
dec
mov
add
lret
fwait
or
cmpsl
pop
pop
fstps
fstps
lret
push
pop
pop
clc
stos
mov
push
push
ds
cwtl
mov
repz
fsubr
das
sbb
scas
jno
mov
xchg
jecxz
xchg
push
cltd
subb
stos
or
lahf
ljmp
inc
cmp
adc
cwtl
es
loop
ret
pop
test
sbb
bound
xor
je
inc
mov
icebp
mov
mov
add
jmp
fnstsw
mov
cmp
sub
xor
decl
rcrb
les
aaa
mov
addr16
inc
push
scas
mov
mov
in
dec
rorl
inc
jmp
testb
sbb
lock
andb
jno
jg
dec
mov
sub
imul
ss
or
mov
loopne
sbb
jg
imul
out
mov
xchg
adc
jo
out
xor
pop
sbb
das
xlat
fstpt
adc
pop
fmuls
imul
bound
shll
dec
sbb
les
es
add
push
mov
mov
out
mov
in
adc
mov
push
xchg
push
iret
aam
pop
xlat
cmp
xchg
loopne
pop
out
popa
subb
mov
mov
shll
out
xchg
data16
fucom
mov
pop
lret
sub
jl
mov
insl
gs
xor
jge
rcr
pop
scas
jmp
jle
push
fldt
call
ret
mov
bound
inc
in
arpl
daa
adc
xchg
testl
mov
fwait
mov
xchg
cmp
adc
into
loopne
dec
in
fwait
sahf
mov
dec
pop
or
adc
jmp
pop
add
outsl
daa
or
loope
aam
push
sbb
mov
sti
xlat
xor
stos
mov
out
sbb
ljmp
jl
xor
les
scas
mov
push
pop
enter
and
push
out
psrlw
xchg
xor
les
mov
roll
cltd
into
add
pop
jecxz
stos
into
inc
mov
nop
sub
stos
adc
xchg
ja
das
addl
and
add
mov
mov
imul
push
xchg
xchg
xor
fwait
and
insb
mov
sahf
add
xor
adc
iret
cmp
test
out
mov
cmp
fstl
and
dec
mov
es
faddp
ret
cltd
mov
cmp
jge
mov
sbb
cmc
push
xor
std
xor
sub
pinsrw
js
popl
insb
out
pushf
in
inc
dec
mov
aas
arpl
pop
adc
adc
call
inc
addr16
jmp
mov
cmp
rolb
lahf
addb
sub
inc
sub
int
fildll
push
gs
lods
icebp
or
push
sbbl
hlt
push
mov
scas
fldt
cmp
repnz
fcmove
arpl
aad
mov
xor
jne
enter
jnp
imul
insw
mov
mov
into
stos
popa
in
arpl
or
inc
mov
adcl
ja
into
loope
push
pop
mov
pop
push
cmp
mov
sbb
fstpt
xchg
pop
dec
pop
inc
roll
mov
gs
sahf
push
and
xor
xor
sbb
inc
pop
and
jg
dec
and
pop
ret
aas
les
inc
cwtl
loop
adc
push
cltd
in
test
push
aas
js
or
orl
lds
call
repz
test
cmc
sbb
inc
inc
xor
lret
push
bound
lret
and
lret
pop
inc
js
imul
pop
stos
out
mov
js
push
pop
fsubrl
push
sbb
hlt
lea
addr16
test
stos
mov
pop
roll
push
nop
iret
fxch
xchg
pop
xorl
es
test
lock
ds
sbb
es
lahf
sti
add
test
ret
push
mov
test
mov
lods
push
dec
mov
pop
pushf
lcall
daa
lahf
sub
cmp
and
add
cs
and
in
and
cmp
xor
pop
inc
fbld
xchg
xor
das
loopw
decl
jp
ret
outsb
ret
inc
jg
scas
into
push
insb
dec
lods
or
in
dec
xchg
addr16
cmp
jno
loopne
or
enter
rcl
or
sub
lods
xchg
or
mov
popa
stc
add
dec
out
push
xlat
roll
sub
dec
adc
push
adc
test
sbb
rorl
int
jae
fsubrl
and
push
clc
ljmp
sbb
inc
inc
add
add
pop
lods
cltd
les
iret
fst
data16
push
in
jo
lods
scas
jp
nop
cmp
mov
pop
mov
lea
lahf
xchg
gs
pushf
stos
and
popw
int
out
loop
mov
xchg
inc
jle
stos
dec
addb
and
jecxz
and
and
mov
mov
clc
aaa
ret
mov
push
cmp
adc
and
sbbl
mov
and
pushf
or
sub
xor
mov
and
testb
rcrl
add
outsl
push
jbe
loope
mov
int
mov
dec
add
jl
adcl
jns
sbb
out
or
adc
imul
aaa
je
jg
mov
dec
out
add
mov
fmuls
nop
mov
out
test
mov
xor
push
pusha
ja
jns
sub
inc
cltd
adc
inc
sbb
push
ljmp
int
dec
fnstsw
fwait
dec
cltd
movsb
movsb
xor
mov
test
jb
int3
ret
dec
mull
clc
sahf
mov
mov
lods
sub
shl
shll
and
xchg
add
bound
jecxz
fnstenv
fdivrp
test
and
test
xor
rol
add
jge
cld
add
rcr
mov
mov
int3
xchg
shrl
mov
jne
je
adc
push
out
sti
push
adc
aad
shl
lock
iret
js
mov
xchg
scas
jno
sub
or
unpcklps
cmp
mov
enter
in
jns
dec
mov
aas
fsubl
push
sub
popa
jle
inc
pop
in
jns
xor
cwtl
in
dec
iret
addr16
enter
pop
test
cmpsl
das
fildll
out
mov
sbb
xor
push
stos
xchg
inc
jp
inc
mov
push
repnz
mov
and
push
stc
mov
xchg
push
shl
outsb
leave
jl
cmp
pop
pop
push
rcll
mov
jae
xchg
jecxz
dec
pop
add
into
or
pop
push
or
jge
xchg
cmp
je
xor
jp
filds
clc
inc
sbb
push
add
and
or
pop
lock
cli
mov
fmuls
pop
jecxz
in
push
fcomi
in
dec
jae
mov
mov
xorb
daa
stc
mov
adc
out
lret
leave
lret
mov
sahf
or
sbbl
push
push
add
aaa
inc
int
cmp
push
js
cmp
pop
dec
out
and
jne
push
push
insb
lock
pop
scas
xchg
daa
jae
aam
hlt
rcl
adc
mov
adc
inc
xchg
jb
lret
les
mov
pop
mov
mov
scas
dec
gs
cmc
jge
clc
xor
pusha
xor
jae
add
xchg
int3
inc
pop
pop
or
or
pop
fcomps
jno
out
lock
icebp
jbe
pop
mov
sbb
dec
mov
cmp
jb
js
jnp
xor
mov
rcll
imul
inc
jl
fsubr
push
repz
insb
xchg
jae
or
loop
mov
lods
cmp
sbb
pop
sbb
incl
push
pop
mov
sarb
and
mov
movb
push
pop
out
nop
pop
lds
sbb
fldenv
lods
jne
aad
fwait
aaa
sarl
push
fistpll
mov
and
pop
loope
sahf
dec
mul
in
mov
aad
inc
lret
mov
adc
fldt
jae
sbb
sbb
lods
mov
pop
lret
sub
test
movsb
push
pushf
in
imul
pusha
jae
pop
lods
jmp
pop
inc
push
pushf
repz
push
add
push
cmc
testb
and
ret
pop
push
loope
add
fsub
xchg
sub
ret
rcrb
hlt
addr16
in
pop
fsubr
ljmp
popl
xor
loope
pop
std
xchg
push
pop
sub
adc
aad
in
xlat
and
fwait
shlb
dec
mov
push
dec
xchg
mov
out
mov
fsts
cmp
imul
xor
jecxz
xchg
stos
add
cmp
jae
xlat
add
jecxz
out
cs
das
addr16
test
adc
arpl
mov
sub
mov
ret
push
sbb
ret
pop
push
addr16
jno
sub
dec
inc
inc
push
inc
lods
cmp
fmuls
fisubrs
insl
ja
test
push
in
xchg
cmp
inc
loope
cmc
mov
fldenv
jne
ss
bound
lret
or
sub
push
movsb
aam
or
ljmp
stc
push
add
jmp
movsb
xor
push
push
push
rorb
insb
fsubrl
push
or
jns
fwait
call
add
aaa
mov
ss
inc
in
push
std
jle
dec
push
fwait
movsb
enter
hlt
xchg
cmp
jo
push
fldl
or
jp
out
fst
dec
pop
lods
call
adc
pop
cmpb
cmpsb
xor
fildll
fiadds
xchg
xchg
jb
pop
xor
ds
pop
sbb
sub
adc
fnsave
enter
stos
or
inc
mov
popl
xor
or
xor
sbb
popa
es
push
in
xchg
xor
mov
xchg
push
stos
fmuls
jg
adc
es
imul
mull
mov
jle
je
sub
or
mov
pop
bound
pop
imul
add
dec
mov
inc
mov
cmc
jns
pop
daa
inc
psrad
jge
jb
push
es
or
mov
xchg
add
xchg
mov
push
iret
adc
and
test
and
sbb
or
lcall
sub
cmp
or
loope
ret
inc
mov
sbb
inc
push
jbe
sbb
cmp
sahf
pushf
aas
mov
sarl
test
xor
imul
sarl
push
mov
adc
inc
push
pop
cmp
imul
call
mov
jl
decb
shll
mov
inc
add
inc
mov
ss
cmp
adc
or
or
lret
shll
add
pop
add
cmp
mov
ficoml
sarl
mov
xchg
cmp
jns
and
ljmp
dec
xchg
jbe
inc
jb
cmp
xchg
stos
gs
jns
inc
mov
movsb
mov
lahf
lods
xor
dec
dec
pop
push
cli
or
scas
das
xchg
das
movl
imul
cmc
ss
xchg
inc
stos
jo
push
push
add
das
nop
cs
addl
mov
dec
aam
nop
test
xchg
test
fdivp
arpl
sub
and
ja
mul
sbb
orl
int3
fnstcw
jg
jl
aaa
xor
dec
test
out
ucomiss
pop
das
push
jno
lds
push
test
out
lea
xchg
scas
pop
lret
fidivs
loopne
pop
scas
mov
lahf
jle
clc
mov
sar
into
ja
mov
sbb
jl
or
cmp
and
cld
mov
jo
data16
or
dec
jl
pop
inc
pop
sti
or
test
pop
loop
jmp
or
shrb
pop
stc
jo
rep
cli
stos
dec
push
ficoml
add
push
adc
cwtl
mov
or
mov
int3
inc
stc
xlat
bswap
xor
dec
sti
stos
xor
push
ret
dec
dec
loope
mull
loop
jbe
in
adc
popf
adc
mov
test
lret
add
adc
pop
jg
lods
imul
push
push
pop
xchg
push
push
mov
xlat
lea
int
mov
and
lds
insb
pusha
sub
adc
mov
xor
sub
fcoms
inc
shrb
test
lret
callw
loopne
popl
mov
test
fidivs
test
repnz
adc
cmp
xchg
inc
inc
xor
sbb
push
pop
les
out
in
in
stos
xchg
lods
mov
in
jo
push
mov
inc
and
mov
fidivrl
repnz
push
sub
fisubrl
fdiv
aas
sub
scas
jl
push
push
pop
sub
mov
decb
push
xchg
sub
into
hlt
lret
shlb
adc
sub
jbe
xor
cwtl
enter
sarl
cmpl
out
push
int
out
xchg
popa
sarl
cmpsb
scas
nop
sarb
push
mov
xchg
sbb
xchg
dec
jecxz
aad
mov
fmull
std
push
adc
mov
pop
sub
dec
jb
sub
jns
ret
cmp
and
out
aad
incl
add
scas
dec
or
stc
out
fsubs
fstpt
ret
pusha
push
movsl
dec
xor
push
push
jnp,pn
or
inc
sbb
cmp
aaa
test
sbb
mov
inc
mov
idivl
stos
fadds
js
xchg
arpl
adc
outsl
jno
sbb
outsl
sub
inc
invd
mov
push
pop
addr16
into
loope
pusha
filds
xchg
pusha
cmp
cltd
jl
sti
imul
pop
rclb
push
ret
sub
add
jmp
lcall
std
pop
test
test
mov
mov
cwtl
jl
jg
stos
out
jbe
ficoms
mov
sbb
fcmovnu
and
push
adc
and
insb
mov
loope
or
sbb
in
or
fsubr
daa
mov
stos
aad
ret
mov
push
sbb
test
daa
mov
repnz
inc
addr16
testl
dec
xchg
mov
sarl
jnp
pop
mov
iret
test
or
mov
push
cmpsl
sahf
in
lds
xchg
in
out
add
cli
dec
push
mov
pushw
jecxz
inc
into
out
xor
xor
rcll
sti
push
and
mov
jmp
mov
adc
mov
mov
fistpl
sub
mov
push
arpl
xlat
push
jge
pop
mov
and
rolb
mov
subb
cltd
out
vpslld
cmpsl
divb
jnp
cmp
cmpsl
jne
es
mov
mov
outsl
mov
and
push
popf
in
repz
jo
cmp
call
inc
mov
pusha
jae
dec
add
divl
jb
test
outsb
fisubrs
xchg
fisubl
or
mov
clc
divb
xchg
insb
into
push
push
mov
call
xor
cmpsl
push
je
jge
push
je
sbb
pop
xor
repnz
cmp
bound
push
ret
decl
mov
ret
ja
push
xchg
int
jae
adc
mov
popf
xchg
push
jne
stos
xor
call
xchg
arpl
cmp
xchg
loopne
inc
in
mov
stos
iret
das
mov
in
mov
xor
arpl
inc
loop
mov
rcr
in
js
imul
popf
lods
adc
or
loop
or
jo
cmp
mov
hlt
add
ljmp
and
outsb
aaa
dec
imul
cmp
jl
iret
push
dec
mov
inc
xchg
pushf
stos
test
or
js
les
insb
sbb
jb
adc
mov
lea
es
mov
or
xchg
out
mov
stos
xchg
jns
mov
xchg
mov
stc
repnz
cmp
pop
call
add
cmp
imul
adc
cwtl
mov
sti
push
repz
xor
dec
add
add
fstpl
dec
scas
jnp
jmp
pslld
stc
das
dec
std
inc
inc
idiv
sbb
mov
cwtl
ja
mov
jle
sub
stos
mov
jno
aaa
sarl
loopne
imul
jne
fcom
test
mov
roll
cmpsb
cs
sbb
ffreep
scas
push
push
xor
in
push
out
insb
sbb
dec
cmpsb
dec
xor
mov
sbb
push
cmp
shrb
adc
xchg
orl
cmp
mov
mov
xchg
or
loopne
xor
adcb
jne
sbb
cwtl
xchg
dec
mov
sbb
jg
inc
daa
add
sbb
in
pop
push
bound
mov
pushf
imulb
cwtl
sub
mov
lods
xor
or
mov
in
loop
sbb
jmp
cmpb
jp
push
out
push
das
cmc
push
pop
sti
outsl
es
out
inc
mov
xchg
imul
sbb
bound
add
pushf
sub
pop
scas
or
fidivs
adc
sti
jb
sub
pop
std
fs
jp
xor
cmp
cld
sbbl
cwtl
gs
aaa
test
cmpsb
adc
jl
lret
add
dec
orb
jb
inc
mov
push
dec
inc
das
jmp
cmp
cmp
sub
cs
lods
iret
xchg
fcmovbe
inc
xchg
in
outsb
sbb
sbbl
adc
movsl
ja
rclb
adc
jnp
dec
mov
sbb
jb
and
and
hlt
lret
das
pop
lret
xchg
lahf
lods
jo
arpl
scas
pop
or
pushf
add
inc
popf
daa
ss
xor
fcoml
inc
cmpsb
mov
jb
jnp
movsb
in
lea
cmc
repz
mov
call
movsl
sbb
mov
add
fbstp
mov
pop
mov
movl
pusha
pop
icebp
or
or
jne
iret
fnstenv
adc
hlt
sub
or
and
out
loope
fstps
lods
jnp
cmp
jp
rcll
sub
cmpsl
lea
cmp
fnstsw
adc
or
xor
mov
shr
mov
pop
shll
jne
arpl
aaa
jle
add
in
mov
or
and
sbb
add
fnstenv
xchg
mov
push
hlt
repz
clc
addl
cs
or
arpl
leave
adc
repnz
cld
jns
mov
push
adc
movsb
add
xchg
jne
jo
or
push
adc
rorb
inc
jg
pop
add
clc
and
lds
mov
pop
mov
xchg
out
inc
lahf
out
dec
shl
cwtl
or
mov
stos
cwtl
inc
mov
jecxz
push
push
ror
jp
shll
xchg
lea
mov
sahf
xchg
hlt
mov
pop
jecxz
mov
adc
in
lret
adc
or
mov
int
adc
jae
inc
jmp
add
mov
scas
scas
std
cmpsb
push
in
out
mov
iret
aam
sbb
das
or
inc
dec
int3
adc
mov
gs
jmp
sbb
loope
mov
mov
inc
push
rcrl
pop
enter
sub
pop
mov
daa
xor
xor
xlat
sub
add
in
aam
and
sub
arpl
mov
hlt
inc
cmpsb
fdivrs
in
sarb
loope
imul
cltd
iret
mov
movsb
mov
sub
push
sbb
inc
lock
mov
push
aam
popf
mov
cmp
xchg
push
ja
loope
sbb
push
aad
call
fs
lret
push
jmp
and
add
xchg
cmp
fisubrl
mov
negb
pusha
iret
mov
repz
mov
ja
out
orb
rolb
ret
test
mov
push
inc
inc
call
fadds
mov
call
xor
cwtl
cmp
xlat
jb
pop
ret
scas
push
fldt
cmpsl
jne
inc
fbstp
outsl
mov
push
outsb
pop
loope
mov
std
lds
mov
enter
into
jo
xor
lret
fnsave
push
stos
jb
popa
mov
cmp
push
fbld
fninit
inc
add
or
popl
pop
sub
hlt
popa
xor
xor
adcb
lock
add
pusha
pop
cmp
xor
sarl
and
jecxz
mov
xor
loop
jl
sbb
cmp
mov
xchg
cltd
fstp
sub
iret
fsubs
lods
loopne
das
cmc
arpl
xchg
mov
pop
or
add
rolb
lcall
fcmovnb
sbb
mov
es
leave
mov
push
pop
add
mov
shrl
push
data16
push
push
lods
sub
mov
sahf
pop
outsb
xor
mov
pushf
ret
xchg
lods
sbbl
cwtl
repz
xor
inc
sbb
lahf
pop
xor
clc
pop
jl
and
fildl
xor
push
test
mov
adc
rcrl
movsb
and
adc
scas
adc
cmp
nop
stc
or
sub
in
shr
sbb
rcr
and
movsb
inc
jne
inc
loopne
or
push
scas
xor
jns
inc
mov
fwait
nop
fadds
out
test
lds
enter
mov
jmp
fdivr
addr16
add
inc
cld
popa
push
fsub
orb
lock
cmp
dec
mov
pop
stc
xor
pusha
std
mov
repz
out
or
js
enter
mov
repz
aaa
lahf
sub
mov
mov
add
and
and
inc
jecxz
xlat
cmp
pushl
push
mov
lret
and
and
int3
data16
ret
std
aad
leave
rcrb
and
or
int3
pop
das
and
data16
stos
mov
cmpsb
aas
int3
jbe
push
push
adc
mov
js
xchg
jae
xor
sahf
popa
mov
inc
es
daa
dec
into
outsb
int3
add
or
add
jge
sbb
mov
jp
fwait
mov
mov
push
int3
fs
and
sarl
push
addr16
rclb
cltd
setne
jae
inc
sbb
andl
clc
mov
dec
aad
jae
mov
fisubs
std
aam
sub
or
jae
shll
lods
xor
out
add
or
add
pop
push
movsl
dec
cmpsl
xchg
lock
test
out
addr16
pop
and
xlat
ss
shlb
or
mov
push
pop
enter
sub
mov
addr16
cltd
daa
les
inc
adc
fnstsw
pop
lahf
lods
mov
bound
loope
in
aam
pop
out
xor
jecxz
outsl
and
sbb
xor
add
and
add
cmp
adc
rcrl
dec
and
je
iret
shlb
fildll
sub
sub
sti
push
jnp
loopne
addl
data16
out
sub
lret
dec
sarl
in
aaa
test
mov
mov
inc
fldt
mov
or
mov
mov
movsb
shl
xchg
jbe
icebp
or
test
es
mov
pop
jno
mov
xchg
cs
add
or
cltd
xor
xor
mov
pushf
scas
cmp
pop
stos
fdivrl
and
fucom
sub
out
mov
cltd
rorl
sbb
cltd
fstl
jno
cmp
and
xlat
pop
out
add
cmp
jle
aaa
arpl
adc
je
cmp
push
jge
and
and
mov
int
dec
leave
js
push
cltd
fbld
arpl
repnz
cmpsb
sub
icebp
shll
icebp
or
and
cmpsl
sbb
in
lret
inc
pushf
inc
enter
jge
sahf
ret
jo
faddp
ret
dec
inc
arpl
mov
adc
xor
sbb
xchg
pop
stos
add
mov
sahf
jmp
xor
lahf
pushf
fcompl
cmpsl
pop
pop
lahf
repnz
mov
mov
dec
pop
dec
cmp
iret
aas
lret
in
cmp
adc
cli
stos
sbb
cltd
xchg
xor
mov
loop
rcrb
and
push
jge
cwtl
mov
ja
push
adc
fldcw
int3
mov
inc
and
divl
adc
sbbl
push
inc
in
adc
or
and
es
adc
data16
scas
mov
mov
push
pusha
cmpsb
jp
stos
aam
cltd
push
into
rorb
inc
jo
mov
jb
cmp
cli
int
cmp
aas
stc
lret
jle
cltd
cltd
ret
push
fstpt
or
push
mov
sub
pop
cli
test
in
and
mov
shrl
nop
or
stos
sbb
movsl
adc
test
cmp
roll
jns
cmp
call
sub
rcll
js
repnz
mov
ficoml
cli
in
adc
push
ret
mov
stos
jp
xor
add
pusha
shr
ss
push
movsl
mov
add
cs
lea
mov
push
push
outsb
mov
sti
int3
lods
push
xor
cmc
or
insl
dec
arpl
ret
popl
stc
call
push
iret
repz
fdivs
dec
fnstenv
bound
insb
sub
bound
lcall
icebp
aam
push
sbb
add
xchg
adc
lock
int3
pop
mov
outsl
adc
push
xor
adc
push
ret
jbe
imul
clc
jbe
movsb
nop
les
or
or
nop
jg
lcall
fdivrs
push
insl
lods
jp
stos
hlt
pusha
and
scas
ja
iret
stos
xchg
push
adc
bound
pop
jp
dec
popf
ljmp
push
aam
pop
xchg
sbbb
pop
push
jno
xchg
fdivrl
lock
xchg
outsb
cmp
imul
and
and
lods
fnstenv
into
shlb
cmpsl
ficoms
dec
lret
loopne
xchg
out
call
test
ret
inc
and
mov
lcall
jg
jbe
adc
sub
addl
fadds
movsl
in
mov
rcrb
es
pushf
movsb
cmp
fidivrs
mov
jp
push
jns
mov
int3
iret
xor
sbb
int
sarl
inc
leave
loop
sub
xchg
ljmp
push
push
vpminsw
fisttps
mov
cld
add
cmovb
xor
pop
mov
adc
enter
clc
adc
pusha
stc
inc
mov
fs
xor
ret
sbb
xchg
mov
push
in
inc
lret
cld
jne
aam
jmp
or
lds
xor
mov
cmp
pop
lock
mov
int3
dec
sahf
iret
aas
hlt
data16
mov
adc
data16
adc
sub
fwait
or
fwait
sbb
add
and
mov
sub
adc
clc
dec
sub
xchg
xor
dec
scas
sbb
popf
rolb
add
in
xor
test
aas
sub
or
mov
jmp
fadd
lods
mov
fdivrs
mov
mov
clc
xor
in
add
xor
mov
sbb
add
test
push
jmp
std
je
and
or
int3
and
mov
imul
sbb
xor
fildl
inc
mov
mov
gs
leave
jecxz
or
call
fcoml
xor
and
add
xor
pop
pushl
adc
jle
cmp
push
xchg
rcl
lret
adc
mov
insl
sarb
adc
inc
fstpl
lds
call
push
aam
jae
mov
sarl
jp
cmp
push
push
push
mov
jge
aam
lret
push
jecxz
lret
xchg
add
scas
call
das
mov
out
shlb
push
clc
je
pop
cmp
hlt
nop
mov
fists
pop
imul
add
aam
or
call
sub
aad
or
sbb
stos
cmp
pop
mov
adc
test
int
mov
and
pop
repnz
pop
mov
mov
andl
pop
inc
imul
and
mov
movb
xor
pusha
fadds
das
lock
add
mov
adc
sbb
dec
sarl
push
mov
xchg
inc
ret
shr
cmp
pop
xchg
xchg
mov
icebp
cwtl
cld
fwait
or
int3
mov
movsb
enter
ss
loopne
aam
mov
icebp
out
fwait
and
pusha
xchg
mov
mov
aad
mov
push
add
shrl
gs
fsub
adc
loopne
cmp
pop
sub
sub
movl
popf
in
jbe
rclb
push
popa
push
or
sti
mov
inc
pushf
outsb
mov
shrb
cmc
das
xchg
inc
es
cmp
xchg
inc
jmp
popf
scas
or
cmp
popa
dec
xchg
sbb
daa
mov
and
and
push
das
xchg
frstor
in
pop
cmc
cli
lea
mov
lcall
sub
mov
lret
sarl
cmpl
cmp
mov
cmpsl
out
lret
xchg
in
test
dec
enter
cmpsl
out
or
psllq
mov
pop
or
xchg
jecxz
jmp
ss
cmp
xor
push
xlat
jbe
add
sub
fnsave
orl
test
out
inc
sub
call
hlt
jo
cmp
das
pop
repz
mov
or
lahf
mov
xchg
dec
unpcklps
jnp
dec
inc
add
sbb
or
pop
xor
pop
std
scas
sbb
push
mov
test
mov
std
clc
xchg
ret
dec
mov
xchg
inc
adc
pop
dec
sbb
jno
stc
adc
out
int
mov
ljmp
mov
and
mov
sbb
std
push
inc
ja
mov
xchg
je
add
movsb
add
fs
jl
push
aaa
dec
rcrl
xor
mov
jmp
aad
inc
cltd
xchg
adc
iret
js
sub
arpl
xchg
sub
mov
jns
mov
mov
lret
cmp
lahf
jmp
cwtl
adc
jb
push
inc
and
mov
push
in
outsb
xlat
adc
shl
xchg
imul
jg
aam
jnp
jb
data16
orl
add
mov
sbb
ss
jno,pt
popa
es
stc
mov
ret
cmp
mov
test
ja
and
fwait
mov
call
call
xchg
arpl
subb
cltd
out
loop
dec
stc
movsl
loope
inc
test
mov
stc
mov
lds
leave
imul
int3
test
inc
or
mov
out
mov
pusha
imul
pavgw
enter
outsl
std
mov
cmc
leave
imul
xchg
sub
push
xchg
mov
fimull
int
andb
subl
cmc
mov
loop
aad
adc
pusha
xchg
pushf
or
mov
add
sbb
mov
out
fwait
cltd
jnp
mov
cmc
and
add
gs
jecxz
movsb
sub
jbe
data16
sbb
stos
mov
inc
popl
cltd
jmp
ds
mov
mov
cmp
shll
roll
sbb
pop
adc
mov
pop
or
and
aas
pusha
pop
xchg
add
mov
sbb
int
aad
lods
out
lock
or
mov
jle
scas
roll
xor
test
inc
cmpsb
mov
loope
cli
dec
adc
or
in
jne
aas
jno
push
mov
xchg
cltd
divl
into
mov
ljmp
sbb
jb
push
lahf
adc
outsl
push
pop
mov
dec
dec
xor
repz
mov
enter
mov
and
xchg
test
loope
xchg
pop
sbb
sub
cmpsb
popf
dec
iret
sbb
shr
cmp
movsb
dec
and
jp
mov
lds
lock
xchg
mov
add
jg
ss
out
outsl
sbb
js
aam
xchg
sub
sarb
lods
add
xlat
test
push
mov
xor
stc
fldenv
xchg
jb
jo
mov
mov
sahf
and
sbb
cmp
push
je
mov
inc
cmpsl
lret
fsubp
mov
dec
cmp
xor
xor
leave
adcl
popf
mov
mov
mov
push
mov
in
int3
insb
or
cmc
pusha
xchg
notb
pop
dec
mov
fadds
dec
xchg
xor
dec
sub
add
lock
sbb
daa
cmpsb
aas
sbb
mov
cmp
mov
popa
xor
mov
movsl
adc
lcall
movsl
lcall
jne
sbb
mov
push
cld
out
sub
add
cltd
inc
pop
cmp
or
pop
xchg
mov
shrb
push
sub
add
dec
push
or
push
pop
add
mul
or
cwtl
inc
mov
pop
movsl
or
jp
or
sub
mov
xchg
and
dec
out
idivb
popf
sub
xchg
or
inc
inc
push
xor
push
cmp
mov
push
pop
imul
popl
and
add
jecxz
push
xchg
jb
inc
and
mov
pop
adc
shrl
repz
fadd
je
jbe
pop
mov
xchg
inc
sbb
mov
adc
mov
sbb
rcll
jb
sti
adc
sahf
cmp
push
cwtl
pop
xor
mov
mov
sbbl
push
dec
inc
jb
mov
aam
push
adc
mov
inc
aam
addr16
sti
mov
mov
pop
rcrb
lret
xlat
pop
test
inc
pop
sub
pop
aad
or
mov
jmp
inc
dec
subl
js
mov
dec
imul
jp
add
aaa
add
mov
int3
cld
cmpsb
mov
icebp
inc
mov
cmp
pop
adc
xorb
jl
je
out
cmpl
push
sub
mov
js
push
movsl
arpl
xchg
adc
movsb
leave
out
rolb
loop
xor
adc
fimull
imul
je
mov
out
test
loopne
push
out
xorb
cli
pop
fs
pop
push
rcll
lods
rolb
test
dec
sub
movsb
push
adc
fstpl
lods
shrb
jge
aas
jge
int3
xor
jle
mov
aaa
dec
add
fstpt
mov
push
mov
cmp
pop
xchg
movsb
imul
dec
add
test
lret
enter
inc
inc
xchg
loop
insb
pop
andb
in
xchg
jl
and
adc
nop
or
outsl
mov
std
bound
mov
pop
inc
out
in
xchg
bound
jg
dec
sub
out
ljmp
or
cwtl
and
jg
cmp
aad
testl
and
outsl
fsubr
out
fsts
xor
out
dec
xlat
sub
or
int
mov
mov
sti
push
mov
out
adc
clc
cmpsl
or
jns
imul
xchg
repnz
ret
imul
lahf
in
dec
lods
xchg
dec
cmp
imul
nop
fwait
lret
add
jo
adcl
fwait
sarl
or
add
ret
inc
xor
dec
aad
inc
xchg
add
xchg
int3
push
pushl
icebp
add
xchg
add
js
inc
out
mov
repnz
ja
ror
mov
mov
inc
cmp
loopne
negb
into
pop
testb
hlt
pop
jmp
fildl
mov
ficomps
dec
push
daa
xchg
stos
cwtl
cmp
dec
inc
lods
repz
mov
mov
jnp
rorb
sub
adc
mov
ss
or
ljmp
push
mov
lods
pop
push
mov
xor
insl
mov
cmp
and
leave
xor
mov
orb
fisubrs
sbb
add
ds
adc
mov
movsl
cmp
add
int3
add
ja
ja
sub
pop
mov
cwtl
pop
inc
and
jmp
mov
shlb
jecxz
stc
outsb
fwait
dec
push
push
mov
stc
mov
and
pop
pop
sub
add
pusha
in
xchg
jmp
dec
das
inc
sbb
pop
adc
push
je
sbb
inc
xor
or
jle
idivl
enter
cmp
std
dec
clc
jmp
or
push
cmp
xor
ja
mov
jnp
sbb
test
es
xchg
incl
aad
sbb
and
cmp
decl
popf
rcll
fldenv
push
mov
loope
pop
inc
pop
push
imul
sub
sti
inc
or
out
pop
mov
dec
jno
dec
scas
cmp
test
lods
inc
or
xchg
sbbb
pop
xchg
movsb
test
iret
adc
cmpsl
lret
xlat
jmp
cmp
icebp
rcrl
mov
icebp
shll
add
jp
mov
imul
lock
int3
or
pop
in
add
push
outsl
and
push
and
scas
mov
leave
add
add
daa
or
int
pushf
and
sbb
in
push
add
gs
mov
push
ja
push
sub
inc
test
and
add
add
push
push
mov
or
jg
in
in
lea
sahf
ds
add
xchg
dec
push
push
or
mov
aas
aas
jecxz
xchg
in
pop
mov
js
xchg
add
sar
lcall
popa
jbe
inc
lret
cli
das
sbb
out
push
cmovl
push
clc
fimuls
xor
lret
jb
xchg
xor
daa
fdivl
pop
or
stos
aam
dec
push
jae
out
xchg
jnp
repnz
dec
or
mov
mov
mov
push
xchg
cmp
pop
movsb
dec
and
stos
mov
adc
aad
and
cltd
push
adc
loope
cltd
popa
insb
inc
dec
arpl
pop
pop
or
cld
or
mov
jne
sub
pop
fst
mov
push
jb
pusha
adc
loope
movsb
loop
xlat
mov
dec
cltd
sub
xchg
rcll
aad
repz
add
mov
and
cmpsl
jo
mov
sbb
cmpsb
sub
xchg
popf
cmpsb
xor
es
jg
jmp
pop
in
adc
cwtl
mov
fstps
adc
jg
xchg
mov
jp
es
sbb
sbb
loopne
jg
lahf
icebp
jmp
mov
sub
ja
lea
and
aad
sbb
push
ss
pop
jae
psrlq
filds
push
ds
int3
xchg
out
nop
aas
subb
mov
adc
rorb
std
mov
mov
stc
pushf
push
xchg
ret
mov
les
pusha
jle
in
movsl
lods
push
add
into
or
sbb
ret
xchg
jbe
mov
ds
mov
jno
outsb
xchg
mov
shll
sbb
popf
cmp
dec
dec
lahf
inc
push
inc
xchg
call
mov
inc
insb
and
jne
fidivrs
push
mov
imul
subb
push
cmc
sti
adc
sahf
cmp
jge
xchg
icebp
dec
cmp
cwtl
ret
xor
inc
add
mov
and
scas
out
push
xchg
loope
xchg
js
in
in
sbb
imulb
jns
addr16
pusha
mov
imul
int
stos
inc
into
fcomps
xchg
scas
cmpsl
xor
mov
xor
xor
bound
lods
icebp
shr
bound
sub
push
stos
push
lahf
popa
es
mov
cwtl
sub
jns
mov
sub
fimull
jle
mov
movsb
fucomi
push
repnz
gs
popa
mov
adc
xlat
sbb
fdivl
out
out
pusha
cmp
push
sbb
xor
pop
pop
jmp
xchg
lahf
insl
loopne
or
clc
lock
sarb
cs
cwtl
out
xchg
loopne
cmpsl
jl
out
jbe
outsl
in
fnstsw
mov
popl
push
inc
cmpsl
inc
sub
mov
jge
jmp
fsubrl
rol
je
mov
outsl
xor
popa
cmpsl
in
add
adc
adc
lock
cmp
cmp
mov
push
inc
mov
and
data16
stc
orb
cmp
out
xchg
pushf
fwait
sbb
add
sub
mov
nop
in
xchg
mov
add
adc
pop
packsswb
or
and
pop
cmp
repz
push
sub
sbb
and
sbb
inc
imul
inc
fisubl
pop
mov
addr16
xchg
out
cmpsl
jne
sbb
xchg
inc
xorb
xchg
xchg
in
inc
push
mov
test
mov
xlat
test
cs
scas
fisttps
fldl
insl
mov
xchg
jecxz
add
pop
stos
sbb
cltd
cmp
push
inc
clc
lock
xchg
xlat
pop
add
pusha
jb
push
inc
cmp
mov
push
mov
fisttpll
test
sub
subl
mov
mov
jle
call
jns
fbld
ss
sbb
pop
jno
ret
and
and
mov
mov
subb
lahf
ret
inc
sbb
mov
out
sbb
mov
es
push
mov
imul
mov
js
sbb
stc
mov
mov
fistps
inc
inc
inc
scas
js
outsl
xchg
xlat
mov
mov
adc
fcoms
pop
ja
jb
ret
push
aad
push
mov
bound
dec
xlat
sub
stos
xchg
in
sahf
fstl
in
inc
insl
rorl
jp
mov
dec
push
xchg
lds
mov
ja
mov
dec
mov
sub
add
inc
call
push
cli
in
out
push
xor
add
bnd
jo
loope
lods
stc
dec
inc
addb
sub
outsl
jb
and
dec
xchg
jl
fldenv
jg
dec
mov
and
clc
into
pusha
popa
popf
push
loop
xchg
sti
or
mov
push
sub
sub
icebp
repz
scas
rolb
gs
jno
mov
mov
repnz
outsb
imul
push
cmovbe
scas
xchg
shrl
add
xlat
out
xor
and
dec
jp
fildl
js
push
pusha
fwait
test
mov
mov
les
and
jno
test
sbb
adc
lea
mov
cwtl
sbb
dec
rcr
hlt
push
or
adc
mulb
ret
xor
outsl
xor
xor
pop
outsb
adc
js
mov
mov
stc
and
aas
sbb
into
adc
add
in
stc
mov
pop
add
sbb
and
outsb
lret
jb
sub
fwait
into
mov
cmp
repz
push
jo
mov
inc
mov
xchg
fwait
xor
outsl
mov
popa
fwait
add
xchg
push
sub
jnp
jne
add
xchg
nop
pop
pop
sbb
mov
shrl
inc
mov
push
cmpsb
outsl
dec
dec
outsl
pop
or
rorb
aaa
cmp
leave
jg
cmpl
arpl
sub
mov
mov
lret
inc
sahf
xor
clc
clc
scas
add
dec
xor
add
das
jg
stos
out
ret
xor
adc
xchg
push
xchg
hlt
daa
das
int3
in
pushf
inc
dec
dec
addr16
es
pop
xor
push
aaa
out
sub
mov
cmp
pop
fldenv
push
jns
sub
mov
inc
jle
mulb
out
and
pop
jmp
popl
mov
or
jnp
adc
adc
bound
mov
test
xor
xchg
loop
xor
sarl
mov
xor
hlt
sub
push
and
mov
cmc
mov
scas
cmpsb
aas
jl
sbbl
sti
sti
loopne
pusha
xor
dec
xor
jo
aad
mov
sub
push
push
testl
sbb
ds
sbb
rolb
ret
fildll
mov
out
ljmp
xor
cmp
dec
dec
popf
ljmp
popa
outsl
dec
jb
dec
mov
testl
aam
sbb
aad
or
rcll
push
xchg
adc
or
mov
je
xor
sub
adc
les
imul
imul
push
daa
mov
jns
xchg
jne
mov
mov
jmp
pop
mov
cs
ds
xor
in
sar
mov
cmp
cmp
xchg
data16
data16
xor
enter
mov
test
fsubl
inc
cmpsb
out
push
lcall
repnz
push
jl
fistl
mov
sbb
dec
jne
and
adcb
xlat
add
lock
cli
jmp
mov
inc
pop
repz
inc
push
pop
and
roll
inc
lahf
outsb
and
push
roll
ljmp
inc
jnp
mov
inc
les
push
shll
mov
mov
jae
and
inc
or
push
push
mov
call
add
xor
inc
iret
ret
in
orb
or
fistps
dec
outsl
cmp
add
mov
cltd
mov
dec
out
pop
sbb
mov
cmpsl
or
flds
push
mov
cmpsl
sbb
mov
jne
shlb
imul
cmp
inc
ror
jmp
mov
lcall
xchg
icebp
pop
std
jne
xor
lods
push
in
add
out
insb
popf
add
and
ljmp
dec
or
sbb
mov
rclb
ss
dec
sarb
lock
xor
mov
jge
ja
mov
es
call
lea
sbb
mov
pushf
mov
lret
shll
or
mov
mov
fs
push
add
mov
and
idiv
add
das
push
movsb
ja
sbb
cmp
push
cli
mov
mov
mov
jg
jnp
int3
mov
dec
sbb
addl
ss
aad
enter
inc
jno
pop
inc
push
jb
or
mov
enter
adc
cltd
pop
clc
or
xchg
jae
loop
je
push
int3
xlat
inc
les
in
int3
addb
pusha
dec
and
jno
call
jnp
cld
sbb
mov
sarl
or
adc
cmp
lock
add
ljmp
andl
fsubs
pop
out
jno
ss
les
loop
cmpsl
fs
ret
fwait
mov
mov
dec
loope
sub
mov
jo
loope
loope
andl
int
adcl
sub
jb
sub
fs
sub
lret
mov
jmp
fisttpll
icebp
stos
inc
fs
adc
mov
scas
call
mov
lret
mov
rol
pop
xchg
xor
ljmp
repnz
cmp
loope
ja
insb
pop
pop
push
fmuls
sbb
or
repz
mov
add
fisttpll
and
cmpb
std
mov
jo
xor
fmulp
mov
dec
sti
mov
and
test
popf
cmc
pushf
aaa
jge
xchg
or
pop
pop
inc
adc
cwtl
daa
push
jno
jmp
sahf
fs
int
in
mov
jns
stos
pop
and
aad
mov
pop
mov
xchg
fcoms
mov
bound
jns
xor
fmul
sub
push
imul
push
loope
in
mov
add
xor
inc
negb
xor
ds
mov
in
ljmp
mov
aas
aad
popa
movsl
dec
jb
inc
iret
das
cli
imul
pop
jns
xchg
fcmovnb
cmp
mov
cmp
mov
int3
jne
in
and
jle
cmp
xchg
fs
outsl
xor
adc
and
mov
add
xchg
add
gs
cli
out
aam
loop
out
ss
jnp
mov
test
insl
lock
frstor
push
jb
xorb
mov
movsb
out
scas
enter
pop
jge
xlat
clc
sub
inc
pop
es
adc
add
scas
push
inc
jne
lahf
test
sub
loope
iret
push
lcall
jbe
push
push
push
push
inc
xchg
mov
add
xlat
loop
les
js
test
daa
arpl
adc
test
repz
std
fnstenv
iret
cmp
mov
mov
jecxz
dec
sub
xchg
iret
xor
xor
mov
mov
dec
cwtl
push
mov
pushf
jae
push
adc
les
inc
sysret
out
aaa
sahf
jecxz
jecxz
aam
sbb
sbb
xchg
lock
cmp
adc
push
and
xchg
lods
adc
cmp
fcmovnu
fcoml
ja
dec
sub
cmc
cmpl
xor
inc
mov
es
mov
mov
icebp
xchg
or
pop
mov
cld
stc
dec
pushf
loop
adc
aaa
enter
sub
xchg
mov
mov
cld
sti
bound
lret
push
mov
mov
jecxz
mov
cmp
adc
xor
adc
mov
aaa
cmp
es
xchg
xor
or
out
into
cwtl
push
add
lock
xor
fiaddl
push
aaa
or
mov
jne
pop
and
out
add
ljmp
xorl
addb
mov
jle
int3
lods
mov
and
sub
push
xchg
add
fs
xchg
mov
repz
es
xor
mov
xchg
pop
pop
mov
movb
movsl
pop
push
inc
ljmp
cmp
sbb
add
shr
scas
and
fisttps
mov
push
add
loope
aad
in
mov
vmptrld
jl
and
pop
ja
mull
fsubl
add
mov
or
add
add
in
push
dec
mov
test
roll
popa
mov
or
cmp
and
imul
mov
movsl
js
mov
mov
ret
mov
ljmp
xor
add
and
xor
mov
cmp
mov
popa
cs
into
push
mov
hlt
outsl
mov
stos
jo
and
mov
sbb
shlb
mov
nop
xchg
lret
inc
in
and
push
aam
xchg
mov
mov
pop
xor
and
xor
das
mov
clc
popa
ja
adc
into
fisttpl
add
dec
jne
and
xchg
or
cwtl
xchg
sbb
jmp
cmc
jmp
mov
clc
jmp
pop
xchg
outsb
int
adc
cld
ljmp
push
push
add
sbb
fcomps
mov
mov
in
test
mov
das
xor
sbb
fwait
test
jmp
sbb
lods
ret
add
sarl
stc
push
lods
lret
push
loop
sbb
mov
dec
loopne
dec
jno
mov
push
hlt
add
xor
lahf
inc
and
test
push
mov
add
push
or
mov
mov
int3
jae
aas
xchg
repz
mov
cmp
ret
in
mov
add
jl
cli
leave
pusha
cmpsb
out
mov
cmpsl
lods
dec
xchg
cmc
lahf
xchg
es
aas
out
lret
mov
aam
mov
jae
test
std
decb
insl
jns
call
xchg
push
mov
jo
sub
div
mov
sti
pop
adc
adc
pop
in
and
cmpsl
adc
xor
and
hlt
dec
mov
sub
xchg
mov
pop
mov
sub
sub
sub
or
mov
out
aad
add
fistl
fs
pop
mov
sub
iret
jp
cmpsb
fwait
and
add
xchg
jb
lods
or
jl
pop
testl
lock
cmp
leave
sahf
xchg
leave
pop
push
add
or
out
ficompl
or
mov
add
dec
push
jae
popa
lahf
xchg
xchg
cmp
fs
xchg
cmp
inc
dec
mov
leave
and
sub
in
sub
dec
gs
lods
cs
xchg
test
std
jb,pt
mov
jge
or
pushf
ljmp
pop
es
pop
adc
in
in
sub
pop
inc
enter
cmp
push
movsb
mov
aad
pusha
and
mov
call
cmp
jmp
out
imul
outsb
enter
mov
dec
test
mov
xchg
or
jo
mov
bound
in
aam
lahf
mov
mov
xor
cli
cmp
mov
test
push
cmp
inc
sub
mov
out
out
cmc
add
imul
push
fdivrl
adc
lahf
mov
sbbl
dec
clc
push
mov
jae
das
pop
pop
into
sbb
xchg
out
push
jno
leave
inc
cmpsb
jae
adc
mov
cmp
lret
rcrb
cmpsb
cli
nop
sbb
dec
xchg
sbb
and
xchg
sbb
inc
stos
mov
fdivl
xorl
cltd
mov
cli
mov
pusha
fcmovne
imull
add
mov
bound
add
sbb
loope
lods
loope
and
mov
fildl
negb
jl
nop
arpl
push
pusha
out
subl
insb
inc
mov
sub
add
cli
dec
incl
fadd
jmp
popf
lret
and
lahf
ljmp
or
lret
repnz
dec
mov
jecxz
lock
mov
and
pop
clc
sbb
mov
xor
aad
lods
push
jge
mov
dec
fcmovnu
cmpsl
jnp
into
push
add
ss
mov
sbb
cld
or
mov
add
lret
sbb
enter
inc
ret
and
mov
stos
or
mov
jo,pt
jl
in
xchg
mov
mov
or
dec
mov
push
and
or
andb
test
jb
mov
push
push
pop
xor
ret
xchg
pop
dec
lds
scas
cmp
pop
lods
mov
mov
test
xor
insb
add
xchg
push
or
mov
jg
cs
test
and
mov
xchg
mov
jno
aaa
aam
repnz
gs
lcall
pop
popa
fs
insl
mov
mov
adc
cmp
push
mov
roll
fcoml
and
or
jns
fildll
mov
ds
mov
leave
leave
stos
push
sbb
jp
in
add
xor
pop
add
dec
mov
cmp
les
cli
or
mov
enter
mov
cltd
add
aad
xor
out
push
pop
repz
movsl
imul
ret
xlat
jg
cmc
fstpt
dec
mov
or
sub
xor
andl
cmpsl
dec
dec
push
in
int
push
xchg
and
int
push
inc
in
cmp
mov
dec
in
sti
adcb
sti
inc
sar
jecxz
mov
cmpsb
adc
jb
jbe
push
movsb
push
add
rolb
fucomi
movsb
cmp
es
test
push
fsubrl
or
pop
out
pop
in
xlat
lea
dec
lock
or
pushf
xchg
jmp
jne
rorb
ljmp
pop
sub
xor
mov
das
enter
in
mov
popa
loop
movsl
pop
jge
fdivrl
clc
xor
stc
mov
lahf
jno
and
or
cmp
or
add
push
sbb
fimuls
and
mov
daa
jp
jge
adc
push
add
mov
iret
pusha
push
fidivl
loope
popa
xor
mov
enter
loopne
fs
xchg
jge
or
data16
adc
cld
push
stc
mov
mov
ja
mov
bswap
gs
cmp
mov
lret
imul
pop
int3
sbb
xorb
ficomps
sub
stc
dec
adc
inc
lcall
js
mov
negb
cmp
or
xchg
stc
push
adc
sub
mov
sbbb
pop
cmp
pop
add
ds
je
inc
insb
repz
xor
in
inc
imul
adc
lret
push
lods
test
cmp
xchg
mov
popf
xlat
adc
out
movsb
enter
mov
lahf
xor
adc
cmp
hlt
sub
leave
icebp
rcr
jb
pop
imul
jle
or
pop
jp
pop
test
mov
sub
inc
aam
sub
negl
les
std
sbb
das
cmp
mov
inc
add
jmp
lods
test
adc
out
cmp
shrb
xlat
xor
sub
div
cmpsb
pusha
addr16
stos
pop
stos
and
xlat
outsb
movsl
push
add
mov
fisubl
lods
or
pop
lds
jae
sub
es
pop
xor
popa
jnp
sub
shr
sub
js
in
mov
adc
in
dec
lock
mov
xor
push
inc
mov
adc
in
and
adc
xor
sbb
bswap
test
sbb
aad
cmc
add
inc
cmpsb
vcmpps
push
imul
mov
push
movsl
mov
pusha
shll
gs
in
and
dec
incl
pop
xor
gs
mov
sub
sbb
fst
popf
loope
xor
dec
outsl
in
xchg
xchg
or
enter
wbinvd
mov
rorl
sbb
rcll
fs
sbb
pop
pslld
push
not
mov
fcoml
pushf
sbb
jb
mov
daa
pop
xor
mov
xor
daa
dec
mov
mov
mov
xchg
dec
adcl
out
ss
fcompl
icebp
das
adc
xchg
cli
pushf
xor
sub
pushf
hlt
dec
lods
roll
or
add
mov
push
jl
jg
inc
jne
inc
xchg
aas
lahf
out
inc
arpl
stc
call
scas
push
mov
sbb
lret
aas
jge
inc
sub
mov
add
in
push
mov
push
xchg
xchg
das
outsb
fs
pop
addr16
and
sbb
fwait
insb
jno
mov
ret
loop
mov
pop
mov
adc
loopne
lret
sub
ljmp
push
ds
pop
cmp
das
shll
in
mov
popa
sbb
jne
lret
jb
fsubrs
jne
inc
mov
or
add
pop
push
and
pop
incb
cmp
leave
push
inc
xor
arpl
add
bound
lahf
lods
lret
jb
push
or
addr16
add
mov
xor
dec
push
lcall
push
fwait
rcll
jl
adcb
in
cmp
cmc
add
or
mov
and
sti
js
inc
cmp
iret
adc
add
push
stc
or
jbe
xchg
jle
popf
inc
sub
ljmp
sbb
inc
mov
das
xor
push
cmp
notl
ds
enter
imul
cmp
xchg
jecxz
lcall
add
adc
and
movsl
inc
lds
lret
stc
add
aaa
cli
inc
in
xchg
aad
and
mov
lret
icebp
cmp
andl
pop
xchg
outsl
movsl
and
in
xlat
mov
mov
push
ja
outsl
shrl
jmp
or
aaa
movsb
popf
outsb
or
out
mov
mov
test
sbb
or
mov
mov
adc
xchg
pop
sub
daa
shl
cld
xchg
mov
bound
fwait
cmpsl
jne
lret
add
rorb
xchg
jno
adc
aas
mov
xor
jae
and
or
mov
add
add
mov
loop
popa
ffree
in
in
aam
scas
inc
and
leave
mov
sarl
push
fidivrs
hlt
xchg
mov
pop
fldl
cli
cmp
pop
lahf
push
lcall
xor
fiadds
out
testb
xchg
mov
mov
push
shlb
pop
inc
daa
mov
repnz
daa
pop
inc
xor
mov
fidivrs
lock
pusha
or
jb
lret
jle
xchg
and
cmp
fs
shlb
cltd
and
stc
rcll
fnsave
cmp
push
jecxz
push
fimuls
jmp
scas
cmp
repz
and
jmp
push
test
mov
cli
je
add
pop
aad
pop
loopne
in
aas
dec
and
cmp
sub
mov
cmc
mov
repnz
lret
sbb
xor
and
pop
mov
orl
jb
xchg
and
int
inc
ljmp
les
push
jnp
lret
mov
cmp
or
jae
add
shlb
in
adc
add
mov
sbb
test
mov
xchg
add
int
sarl
adc
js
icebp
movl
dec
cmp
mov
aaa
addl
test
push
js
push
cmp
inc
cmp
aad
hlt
out
sub
jno
nop
lock
jl
mov
sbb
fisttps
fucomi
xor
ret
jge
les
rcll
mov
jnp
or
sbb
jp
mov
xor
int3
mov
mov
or
mov
dec
aam
enter
mov
fs
cmp
sbb
test
pop
xor
aas
and
cmp
inc
xchg
pop
dec
aas
dec
and
fbld
int
mov
sbb
push
lahf
cld
push
clc
test
int3
dec
xchg
shrb
xor
inc
mov
add
lcall
inc
mov
adc
adc
mov
sub
push
pop
mov
adc
pusha
mov
xchg
mov
jb
mov
pop
cmp
ss
mov
dec
mov
stos
xor
pop
nop
ret
mov
adc
leave
addr16
xchg
loop
adc
jle
mov
xor
inc
lods
popf
jbe
mov
cmp
in
cmc
push
aad
add
mov
dec
lock
adc
bound
xlat
xor
outsl
inc
xor
dec
xchg
mov
xor
inc
je
cmp
push
std
leave
notb
add
xlat
imul
ljmp
icebp
mov
push
inc
fdivrp
pop
out
add
jb
dec
das
popa
cmp
mov
pop
test
dec
mov
movsb
icebp
xchg
xor
cmp
sub
addl
sbb
xchg
xor
push
pop
add
inc
cmp
xor
mov
outsb
xchg
push
mov
lods
repz
fcomps
add
je
jno
aad
gs
imul
iret
or
jp
imul
jge
jno
pop
mov
pop
and
stc
fdivl
dec
xchg
or
shrb
lcall
adc
pop
push
daa
cmc
enter
inc
mov
mov
push
mov
bound
inc
xor
mov
adcw
mov
or
data16
pop
fs
and
ret
nop
jno
cmpsb
push
call
int
aaa
flds
push
jg
into
dec
je
sbb
cmc
addr16
sub
cmp
mov
xchg
mov
mov
and
movsb
std
push
pusha
mov
adc
pop
mov
add
movsb
leave
hlt
cld
cmc
inc
pop
add
aas
push
into
leave
and
adc
fs
or
xchg
jmp
fs
xchg
or
jno
sarl
std
and
push
mov
sti
pop
roll
std
adc
idivl
push
cmpsb
jne
adc
imul
loop
pop
sarl
sarl
loop
outsb
add
daa
insl
sbb
mull
pop
lock
mov
fidivrs
in
out
test
dec
xchg
dec
insl
push
cwtl
cmp
mov
fwait
push
icebp
aaa
sbb
mov
pushf
mov
rcl
adc
ja
lods
clc
jo
ss
adc
and
std
add
xchg
sbb
cld
stos
mov
imul
stos
mov
lahf
add
xchg
dec
jno
popa
es
int
mov
xor
cs
dec
mov
clc
andb
and
hlt
in
por
push
or
cmp
fcmovnb
lods
aaa
and
call
fldt
je
mov
es
xchg
clc
cltd
adc
xlat
push
mov
mov
or
cwtl
scas
dec
cmp
fwait
push
lods
sbb
pushf
aas
orb
or
sahf
stos
imul
or
adc
push
repnz
sbb
inc
daa
repz
div
xchg
lret
and
fmuls
and
ss
push
sub
movsb
sbb
sbb
xor
hlt
and
xlat
imulb
jns
push
cmpsl
dec
mov
ds
jge
lcall
pop
loopne
cmp
lds
in
xchg
mov
cmp
rcrb
or
pusha
ds
sbb
pushf
inc
xor
cmp
jg
xchg
js
xchg
aas
pop
or
ds
ljmp
aaa
lea
lret
mov
cwtl
test
pushf
pushf
inc
lret
mov
jmp
out
ja
xor
outsl
pop
dec
rorb
inc
pop
inc
xchg
adc
sub
xchg
pop
std
add
mov
push
mov
inc
mov
and
sbb
aad
xchg
stc
cmp
stc
sub
lahf
repnz
inc
or
lcall
mov
fwait
mov
mov
jmp
adc
jno
mov
mov
lahf
jle
and
test
lea
insb
outsl
jl
push
mov
cmp
jno
rcll
jae
iret
cwtl
cmp
bound
sbb
cwtl
pop
inc
inc
push
in
pushf
mov
add
xlat
jmp
inc
dec
add
mov
in
ljmp
pop
pop
gs
fbld
adc
out
lahf
ficoms
imul
in
test
jmp
jo
adc
or
mov
xor
cwtl
mov
xchg
in
add
mov
shlb
push
jmp
outsb
push
pop
jmp
or
jns
shrb
xchg
lods
push
jne
adc
or
lods
xchg
lcall
fstl
pop
adc
dec
mov
faddl
shl
add
lods
jae
ljmp
dec
aas
aam
jmp
cmp
into
sbbb
cmpsb
loop
dec
or
push
push
lret
jb
and
scas
out
fst
icebp
mov
ss
push
cmp
mov
sbbl
dec
aad
imul
orl
enter
cmp
int3
nop
shrl
mov
and
mov
and
add
push
jl
pop
mov
cmc
test
arpl
sbb
lods
test
scas
inc
dec
cwtl
leave
inc
ja
or
jbe
push
push
repz
cmp
fdivrs
sahf
sarb
aaa
loope
xchg
mov
repnz
sbbb
push
cmp
outsl
push
pop
aas
pushf
addr16
aaa
mov
xchg
dec
pop
xchg
pop
mov
sbb
mul
cmp
cmovb
icebp
or
push
jmp
pop
pavgw
jnp
inc
movsb
xor
lea
imul
pop
cmp
daa
push
xor
into
popf
movsb
mov
in
fst
lret
dec
movsl
jb
movsl
jmp
aaa
pop
push
cmp
xor
fs
add
movsl
shrb
leave
dec
fsave
cs
das
jb
in
sbb
add
mov
dec
inc
fsubr
repz
imul
push
ljmp
dec
je
call
push
stos
testl
push
out
bound
fcom
pop
cmp
ja
lods
or
xlat
movsl
add
aad
dec
adc
test
or
out
xorl
or
add
jns
push
or
or
cmp
mov
xor
mov
mov
xchg
jge
mov
movsb
iret
mov
and
xor
stos
outsl
je
lods
cmpsb
push
mov
or
cmp
mov
popa
repz
ret
add
adc
xchg
inc
and
xor
std
pop
pusha
lods
pop
pop
repz
xchg
and
in
add
pop
cmp
and
jg
jae
pushf
inc
test
movsb
pop
dec
sbb
cmp
adc
sub
dec
and
mov
push
dec
sub
loope
sub
add
bound
jmp
mov
lret
pop
dec
add
out
iret
ds
sub
aam
repz
out
cmpsb
cli
out
dec
or
ja
call
lock
sub
fildll
jl
sahf
or
enter
pushf
mov
inc
dec
add
neg
and
xor
push
xchg
jns
int
xchg
push
push
adc
mov
sbb
pop
rcrl
es
or
frstor
mov
outsl
arpl
push
xor
test
push
lahf
mov
jbe
or
into
mov
inc
add
sbb
cmp
out
jecxz
shrb
cld
lcall
mov
je
push
cmp
mov
popf
jnp
outsl
push
pop
call
xchg
jp
adc
add
fcmovnbe
add
shll
test
rolb
mov
sub
add
jp
arpl
int
pop
pop
stc
repz
xor
cld
jg
sbb
jmp
cmp
ja
icebp
xchg
sub
sbb
jge
scas
jmp
push
mov
jp
daa
cmp
push
add
mov
into
push
enter
testl
xor
movsl
mov
int3
cmp
adc
pop
scas
loopne
or
das
mull
jl
icebp
lea
adc
push
dec
sub
pop
aas
inc
lret
mov
movsl
fimull
insl
jb
and
pop
and
sbb
ret
push
adc
mov
insb
xchg
lea
and
movb
shl
and
adc
mov
pop
dec
out
aaa
cmp
pop
ja
lcall
and
rcl
jno
mov
push
int3
jne
dec
push
stos
repnz
xchg
shlb
out
mov
inc
leave
rcll
and
lds
vpaddsw
cmp
rcr
std
dec
mov
test
fisttpl
repnz
or
jecxz
nop
push
cmp
jno
adc
jbe
arpl
mov
popf
push
fstpt
inc
cs
ret
push
imul
cli
out
pop
clc
pop
fdivrl
sub
and
insl
pop
fstl
out
sbb
popa
pop
pop
enter
imul
sarl
test
add
lcall
xchg
ffreep
in
gs
fmuls
dec
shl
int3
jae
inc
dec
xchg
jns
add
push
jp
xlat
xchg
repnz
lahf
mov
pop
pop
cmovo
test
loop
or
xchg
subb
popf
scas
mov
fisubrs
xchg
push
jl
add
dec
leave
lret
stos
inc
mov
pushf
inc
jo
fisttpll
xacquire
xchg
dec
sub
xchg
insl
push
xor
jne
dec
rep
clc
xchg
loope
add
mov
jge
pop
cwtl
hlt
sbb
lret
cmpsb
adc
inc
js
mov
loope
lea
mov
xchg
bound
jecxz
and
lock
jge
mov
mulb
mov
mov
addr16
jl
jle
jae
bound
aaa
pop
or
or
adc
decl
fwait
stos
sub
movntq
aaa
mov
std
iret
mov
and
sbbb
pop
jne
dec
clc
out
adc
imul
fldenv
ret
push
jl
popf
or
in
mov
sub
mov
sbb
es
bound
fildl
pop
pop
cmp
aam
cltd
fdivrl
in
mov
out
ret
testl
mov
and
out
js
lds
push
pushf
lds
insb
or
add
mov
and
ljmp
cmc
stos
push
cmp
mov
pop
cmp
mov
mov
push
sti
and
mov
popl
fbld
das
push
pusha
daa
jb
dec
bsr
xor
dec
idivb
loop
std
outsb
adc
in
xor
mov
xorl
in
push
cmp
jl
pop
shlb
lret
loopne
gs
mov
push
enter
fs
mov
dec
pop
push
roll
xchg
add
mov
ss
sti
fucomp
test
mov
iret
sub
clc
js
or
cmp
lcall
into
sub
sub
test
jle
in
aas
pop
mov
push
mov
cltd
mov
xor
inc
mov
or
lods
xor
call
jmp
xor
pushf
aaa
aaa
scas
leave
std
xchg
xor
lret
mov
nop
lcall
xor
rcl
loope
push
or
pop
cmp
sub
cmp
pop
or
fcoms
cs
add
andl
cmp
cmp
jge
stc
movsb
mov
in
adc
mov
and
push
add
neg
push
xchg
int
pop
lds
mov
mov
sub
push
punpckldq
in
mov
xor
pop
inc
cmp
add
push
hlt
xchg
mov
xor
push
repnz
loop
jae
js
ja
jecxz
xchg
das
jae
pop
into
orl
jg
out
or
pop
cmp
addr16
mov
test
mov
mov
mov
inc
or
mov
test
gs
add
xchg
dec
sbb
arpl
lock
jb
ret
inc
cwtl
mov
push
or
mov
xor
shlb
sar
lcall
or
lds
xchg
xchg
decl
popf
mov
in
and
popf
cmpsb
add
cmp
and
rclb
mov
mov
addl
lock
pop
mov
lret
adc
and
jp
or
mov
out
pop
xlat
lcall
fnstcw
or
movsb
aaa
jmp
seta
call
mov
pushf
je
out
add
clc
filds
inc
and
insl
loopne
mov
repnz
addr16
adc
jg
in
pop
test
shr
orb
inc
dec
pop
cmpsl
iret
aaa
jl
xchg
loop
push
test
sub
xor
addr16
es
imul
and
icebp
push
fcmovne
sub
ljmp
dec
shrl
ljmp
fisubrs
cmp
jl
sbb
divb
mov
xorb
popl
or
repnz
push
mov
push
xchg
mov
ret
aaa
push
push
sub
xor
cmp
orb
fisubl
scas
push
lcall
dec
nop
mov
sub
sarb
hlt
loopne
xchg
mov
call
test
and
push
adc
cmp
inc
mov
out
test
aam
ljmp
push
sbb
repz
pop
rolb
inc
mov
add
adc
xor
subl
adc
or
jmp
jg
mov
cs
sahf
cmp
inc
or
mov
jecxz
orl
fcoml
pop
das
mov
inc
inc
cmp
sbb
mov
mov
or
mov
mov
xor
mov
arpl
adc
jmp
xchg
fildl
lock
mov
lret
icebp
outsl
xchg
fdivrl
repz
outsb
int
sub
je
xchg
push
mov
pop
lahf
add
out
cwtl
hlt
pop
adc
pop
es
cmpxchg
ret
dec
imul
add
jp
insb
xlat
rclb
nop
and
out
sbb
dec
stos
data16
out
pop
shl
in
popa
push
inc
cmpl
adc
fchs
lahf
jne
xchg
dec
push
insl
dec
adc
dec
add
inc
rol
clc
dec
repz
inc
fidivrl
insb
inc
icebp
mov
mov
and
lods
xchg
mov
inc
fidivrs
push
jne
out
or
xor
mov
cmp
int3
stos
inc
jo
xor
inc
push
addr16
pop
repz
call
mov
jge
fdivrl
test
push
xchg
xor
push
out
xchg
imul
mov
sbb
shr
or
pop
or
repz
mov
dec
mov
add
jnp
xor
ret
sub
lcall
push
xchg
gs
mov
in
repz
mov
loope
xor
inc
ljmp
mov
jno
dec
sbb
mov
fsubr
sub
push
mov
scas
jmp
xor
int
cli
aad
mov
sbb
hlt
in
jnp
and
mov
repnz
aam
in
shl
loope
xor
xchg
or
pushf
dec
repnz
shrb
aad
mov
inc
adc
stc
scas
push
imul
rcll
dec
cmc
hlt
pushf
sbb
shrb
jo
les
jne
push
push
inc
xor
aam
hlt
sbb
data16
mov
mov
cmp
xchg
insl
inc
stos
add
xchg
insb
and
jne
xor
pop
inc
mov
jnp
in
xor
dec
sbb
mov
mov
cmp
mov
aad
inc
mov
dec
call
fsts
mov
mov
pop
mov
inc
add
stos
loope
fwait
sbb
xchg
cmp
es
stc
mov
push
mov
and
stc
jnp
out
ljmp
xchg
into
imul
arpl
and
sub
mov
es
rep
xor
pop
cmp
or
push
jns
test
fwait
or
sbb
or
xchg
sub
push
pop
ret
mov
je
adc
push
sbb
enter
add
nop
jle
aam
sbb
jae
movsl
ret
pushf
push
lret
and
push
icebp
outsb
xchg
xchg
in
cmpsb
xor
dec
pop
js
idivb
das
mov
shlb
frstor
mov
jbe
jl
pusha
aad
lcall
fisubrs
cld
fadds
cmc
mov
in
scas
fldpi
in
mov
shlb
xchg
mov
dec
pop
jl
call
lea
fidivl
push
jl
push
in
and
sbb
out
dec
scas
fdivrs
loope
adc
jg
stos
js
das
inc
mov
dec
out
das
in
std
pusha
pop
mov
cmp
out
sarb
jne
add
js
mov
push
xor
add
push
enter
rorb
xchg
adc
sti
sbb
push
push
jae
mov
mov
out
enter
xchg
lock
int
push
jne
inc
lods
les
popa
or
rol
test
out
shl
aad
xchg
xchg
dec
cli
adc
in
test
mov
dec
add
mov
and
jae
jmp
mov
sub
mov
stc
push
add
data16
mov
daa
andb
and
jne
fs
or
mov
sbb
or
inc
in
ret
jae
loop
pop
add
fsubl
ret
fsubrs
jg
ja
test
stos
xlat
jp
pusha
movsl
inc
in
push
aam
pushf
les
and
mov
sbb
lcall
cltd
mov
lods
mov
cmpsl
mov
mov
pop
js
cmc
jmp
add
mov
jle
cltd
es
outsb
shrb
and
mov
dec
push
jb
pop
scas
shlb
jp
arpl
test
xor
cmp
pop
subl
std
in
ljmp
mov
mov
mov
adc
icebp
push
lret
xor
add
pop
adc
cmp
inc
lods
ficoml
pop
rcrb
jb
jae
dec
sub
in
and
scas
jbe
icebp
sub
mov
gs
stc
dec
ret
push
push
pusha
pushf
les
test
subl
pop
arpl
ret
ja
add
mov
in
shrb
cmp
inc
enter
mov
xchg
lcall
bound
shlb
into
cmp
addr16
andb
test
mov
repz
pop
mov
xorb
xchg
xor
xchg
xchg
ss
rorb
mov
fmuls
cmp
xchg
dec
fsts
mov
insl
dec
lods
into
iret
dec
sub
pinsrw
push
mov
push
and
shll
adc
aaa
movsl
mov
sub
mov
jb
inc
movsb
mov
jbe
call
jbe
and
and
loop
js
add
push
push
cmp
mov
or
pop
fwait
in
and
sbb
cmc
sbb
jge
aaa
inc
fsts
or
and
jl
push
dec
pop
loopne
cmp
hlt
int
sub
inc
lods
push
jle
and
cmp
mov
cmp
jno
sub
cwtl
add
in
imul
aad
imul
jae
fnstcw
push
rcl
pop
sarl
pop
mov
inc
cmpb
pop
jbe
loope
push
hlt
sbb
inc
xchg
orl
jle
add
xchg
out
fldl
add
mov
jbe
inc
inc
pusha
cmc
mov
dec
out
cmp
mov
inc
aad
arpl
jne
and
test
jg
test
scas
or
int3
sub
push
sarb
jecxz
popf
adc
sbb
fildl
push
aas
out
inc
xor
jl
add
add
ror
movsb
cmp
mov
jmp
add
adc
xor
sbb
or
sbb
out
fwait
inc
xchg
out
inc
loope
mov
andb
jo
in
leave
inc
ret
sarb
mov
aaa
xchg
pop
mov
into
test
adc
mov
cmc
shll
aam
icebp
in
pop
mov
lgs
sbb
aaa
dec
inc
push
movsb
inc
xchg
cmpsl
rolb
push
jo
mov
sub
mov
mov
push
adc
loop
scas
pusha
mov
stc
xchg
inc
bound
loopne
or
shlb
cmp
mov
jmp
movsb
mov
mov
mov
sbb
xchg
insl
jne
and
sbb
mov
outsl
push
int3
push
add
inc
and
in
sub
add
fidivl
les
pop
ficompl
ret
js
das
mov
jne
test
loop
cmp
sub
sub
roll
mov
cmp
aas
leave
xchg
imul
dec
cmp
cwtl
mov
mov
mov
fcmove
insb
imul
or
loope
adc
pushf
test
or
in
test
std
lret
dec
lahf
addl
inc
inc
aam
add
xchg
mov
sub
xor
jb
popa
outsl
mov
mov
mov
or
mov
fstp
jg
sub
cli
cli
idiv
fcomps
out
hlt
imul
mov
xchg
cmpsb
loop
jns
cli
mov
rorl
fmulp
push
lret
xchg
xor
push
scas
push
or
and
popa
lods
in
xchg
sbb
mov
test
jmp
xor
gs
nop
adc
cmp
adc
mov
adc
mov
inc
cwtl
mov
lret
dec
push
cld
shrb
push
pop
sbb
js
mov
jnp
movsb
mov
aaa
outsl
or
les
outsl
xchg
mov
clc
push
jb
rol
ffreep
inc
popf
or
mov
popa
int
mov
jge
mov
mov
adcb
mov
xchg
push
call
and
aaa
stos
xor
aaa
push
inc
pop
adc
retw
enter
cmp
sahf
jo
inc
loop
insb
jle
repnz
mov
ret
repnz
sahf
mov
add
sbb
ret
addr16
leave
mov
or
adc
loope
testb
es
js
mov
xchg
xchg
fstpl
mov
push
cltd
sbb
pop
frstor
cwtl
fstpl
inc
repz
mov
mov
inc
pop
daa
sub
jp
mov
into
sub
int3
in
xorb
insl
or
jne
bound
lahf
bound
ret
mov
jb
lea
scas
ja
fisubs
leave
jnp
cmp
adc
inc
inc
jo
pop
pop
jbe
mov
add
subl
inc
sub
add
cmovg
inc
insl
fdivrl
cmp
jg
cmp
xchg
push
fmull
cmp
push
fisttps
pop
mov
lret
mov
push
sub
shll
xor
cmp
and
js
adc
dec
iret
or
sub
cmp
addl
test
mov
mov
push
add
call
mov
das
stos
cmp
xor
ficoms
clc
loopne
adc
dec
cmp
lock
hlt
leave
lret
xchg
iret
imul
push
aaa
pop
mov
mov
lock
push
inc
mov
mov
inc
popa
jne
sbb
mov
inc
cmc
xchg
aaa
or
mov
xorb
mov
sub
adcl
adc
and
lahf
mov
jae
add
xor
pop
push
shll
rclb
sbb
fldenv
jne
mov
pop
mov
test
mov
iret
adc
or
mov
cmp
xchg
pop
out
inc
nop
into
cmp
pop
dec
cmp
lret
fistps
or
cli
mov
and
incb
scas
cmpsl
enter
sbb
pop
dec
test
sbb
mov
arpl
adc
out
lock
fidivs
dec
pop
rcll
rorl
pop
and
mov
inc
sub
je
popa
cwtl
das
dec
xor
pop
push
dec
xor
lods
sahf
jle
mov
rorl
mov
push
push
arpl
popa
xchg
jecxz
mov
mov
mov
mov
jae
pop
lar
stos
leave
sbb
movsl
in
stc
icebp
mov
outsb
xchg
sub
adc
iret
jb
xchg
adc
jns
inc
and
movsb
pop
imul
lcall
shrb
sbb
sbb
loopne
cmp
ljmp
and
sti
fcoms
mov
mov
fisubrs
lods
mov
jnp
cmp
add
jmp
cmp
jne
repnz
xchg
test
pop
jmp
sub
aam
push
enter
cmp
mov
inc
sub
aaa
mov
push
fildll
cmpsb
pushf
mov
subb
lods
cmp
loope
mov
jns
ljmp
mov
sub
sbb
fsubr
es
cmp
inc
xor
fs
dec
out
aad
add
dec
pop
mov
cld
cmp
lea
shlb
pop
add
push
das
pop
cltd
jmp
clc
test
popf
cmp
loope
xor
or
shrl
test
and
sbb
inc
jns
push
movsl
lahf
mov
adc
push
std
adc
mull
jg
sbb
rorl
pop
imul
or
mov
mov
mov
xorb
mov
cmp
jne
mov
rolb
or
aaa
div
cli
add
mov
loop
sbb
pop
cld
stc
push
xor
stos
cwtl
lods
pushf
push
or
xor
fs
fwait
mov
call
inc
ljmp
daa
mov
cmc
or
and
jmp
movsl
dec
cmpsl
scas
sarb
xchg
sbb
adc
iret
js
mov
mov
inc
ret
mov
push
dec
stos
fwait
repnz
add
and
add
movsb
jo
jnp
sub
data16
and
ljmp
inc
fnsave
fcomps
sub
daa
cmp
imul
dec
addr16
mov
inc
fs
std
pop
sbb
dec
xchg
jp
sub
mov
dec
jl
loope
xor
or
icebp
mov
out
pop
mov
push
dec
inc
scas
sbb
inc
add
jle
mov
push
lcall
inc
push
fdivrl
pop
add
jl
dec
aas
shll
mov
iret
ja
push
mov
pushf
bound
ja
jle
mov
subl
aam
dec
ret
aam
in
out
jmp
movb
pop
addb
add
mov
pop
and
mull
cmp
fimull
cmp
adc
add
jb
mov
or
or
inc
adcb
enter
fists
neg
push
into
stc
rcrb
sti
add
mov
push
mov
cltd
mov
mov
stos
dec
xchg
xchg
aas
adc
andb
and
stos
cld
mov
fldcw
push
sahf
mov
out
cwtl
dec
stos
mov
or
xor
adc
sub
int
dec
jge
in
dec
cmpsb
cmp
inc
ljmp
adc
fstpt
lcall
fsub
cltd
hlt
nop
xchg
popa
daa
stos
pop
mov
fs
jecxz
fcoms
sbb
mov
dec
sti
jns
sbb
pushf
dec
inc
pushf
into
mov
xlat
stc
mov
xlat
fmuls
inc
push
mov
sbbb
push
pushf
fwait
sbb
jecxz
xchg
sahf
and
ss
test
or
mov
das
into
xlat
jecxz
fcmovnbe
sbb
in
pusha
mov
pop
in
add
js
repz
or
clc
test
lahf
pop
push
cwtl
fdivr
cmp
sub
sahf
les
leave
pop
xor
and
jnp
or
push
dec
adc
lcall
adc
aas
adc
jge
pusha
push
mov
sub
ds
mov
insb
insb
test
ds
inc
icebp
int3
inc
rolb
jecxz
dec
aas
ljmp
inc
mov
jb
mov
dec
mov
jnp
cwtl
xchg
add
notl
pop
push
cmp
cmpsb
jg
cwtl
pop
push
cmp
shlb
call
js
repnz
add
loope
cmp
mov
lahf
jmp
dec
roll
adc
mov
fcoml
jbe
mov
dec
inc
daa
jge
adcb
mov
in
cmp
push
mov
cmp
xchg
dec
xor
das
jne
sbb
mov
test
jne
inc
leave
jp,pn
mov
lahf
xor
ret
or
sbb
jns
lret
pop
cwtl
ljmp
in
lods
mov
dec
or
aaa
lcall
jbe
int
scas
cltd
fucomp
cld
pop
push
daa
loopne
movsb
popa
cmp
mov
lahf
ja
jecxz
inc
mov
lahf
sbb
and
pop
mov
insb
loopne
mov
pop
dec
inc
jg
mov
xor
adc
fwait
inc
repz
loop
push
ds
int
nop
xor
nop
mulb
ret
dec
fcompl
adc
testb
or
xor
jecxz
sub
inc
cwtl
jns
jmp
out
insb
je
lret
or
xor
and
sub
cmp
imul
arpl
push
push
mov
adc
add
ss
mov
int
int
rolb
xor
popa
lods
divb
xchg
ffree
and
mov
mov
arpl
jno
cmp
xchg
test
and
mov
in
mov
jg
cmc
mov
jae
inc
push
and
add
sbb
xchg
mov
cmc
xor
dec
cwtl
mov
sbb
ljmp
mov
iretw
je
stc
popf
xor
je
cs
mov
gs
mov
xor
cmp
jbe
in
and
pop
insb
addr16
push
fisubs
call
xchg
jo
inc
test
cmpl
mov
loop
inc
cmp
pusha
movsl
cmp
inc
mov
or
mov
idivl
iret
xor
or
jno
jne
cltd
inc
subl
and
lcall
xorb
pop
insb
sarl
sub
jge
pop
fs
sub
inc
mov
test
push
nop
std
daa
lret
cmp
add
or
arpl
push
sbbl
int
aas
adc
mov
jle
aam
push
out
mov
fsubl
xchg
pop
dec
and
add
mov
fcomp
pop
notb
scas
divb
dec
jmp
out
push
enter
pop
sarb
fsubs
add
aaa
mov
sub
adc
cmp
and
xor
add
decl
sahf
movsb
mov
xchg
es
test
jae
push
xchg
ds
outsl
hlt
mov
dec
lods
test
fmull
cmp
or
mov
xchg
mov
clc
out
mov
sub
iret
pop
int3
fwait
sub
sbb
jmp
cmp
aad
jnp
cmp
mov
ss
lds
mov
clc
add
push
sti
ret
and
or
mov
jmp
adc
xchg
jecxz
imul
mov
leave
call
rorb
lret
mov
mov
push
popa
mov
and
xor
xchg
xchg
fs
sti
and
mov
jbe
pop
xor
xchg
cmc
xchg
orb
xor
stos
dec
xor
jae
popf
mov
jecxz
mov
call
lcall
xchg
test
dec
test
mov
jnp
inc
push
cmp
ljmp
lret
es
jl
popf
test
hlt
cmc
push
or
adc
push
xchg
xchg
ret
sbb
imul
movsb
ret
push
xchg
repnz
outsb
mov
adc
adc
out
mov
xchg
filds
jecxz
fnsave
and
and
fbld
push
sub
cmp
dec
cmpb
xchg
jne
adc
or
cli
pop
or
ds
mov
dec
outsb
adc
jle
xor
int3
fwait
aas
data16
andl
pop
mov
jge
leave
fstpl
das
and
cmpsb
mov
loop
fidivl
call
mov
ljmp
aaa
rolb
and
jbe
shrb
sbb
mov
mov
sbb
pop
mov
jmp
xor
push
jns
mov
xor
jg
add
dec
fimuls
push
and
fcomps
lahf
lcall
xchg
mull
rorl
and
shlb
jp
sbb
inc
push
adc
mov
imul
cmp
mov
add
bound
ljmp
jge
fcoms
arpl
dec
stos
sub
inc
adc
jb
les
addr16
dec
mov
ficomps
in
loope
push
mov
add
fisubrs
inc
pcmpgtd
call
sub
mov
lcall
mov
sysret
and
test
xchg
add
js
sbb
pop
insb
mov
or
adc
sbb
cmp
sub
mov
add
ss
jl
faddl
icebp
mov
lods
fnstsw
cs
jle
push
push
pop
sarb
pop
ds
cmp
add
insl
mov
clc
mov
sbb
sub
mov
stc
pushf
repz
add
adc
pop
jns
jg
movsbl
fucompp
dec
cs
mov
pop
dec
fiadds
sbb
out
mov
test
push
lods
mov
cmp
in
fldl
sbb
jnp
mov
jp
in
push
enter
icebp
lock
movsl
lds
jno
stc
fs
sbb
ret
xchg
ds
pop
cmp
mov
pop
lret
sti
das
test
cmp
dec
in
pop
jecxz
pop
pop
out
sbb
push
sbb
rcrb
pop
call
dec
mov
and
je
mov
mov
pop
mov
xchg
xor
hlt
jg
das
mov
pop
jno
outsb
jno
dec
or
outsl
lock
fnsave
inc
pop
sahf
mov
aad
cmp
jecxz
lahf
inc
fbld
xchg
repnz
movsl
jecxz
pop
cli
cmp
cmp
popa
clc
fs
and
pop
pop
fwait
fs
push
addr16
jae
sub
mov
data16
cmc
pushf
xor
adc
mov
scas
mov
ds
andb
ret
dec
jns
cmpsb
int3
push
repz
jnp
cmc
xor
xor
jb
test
dec
fidivl
mov
dec
mov
out
push
mov
jne
add
fdiv
out
movsl
mov
insl
insb
insb
inc
dec
mov
pop
cmp
and
sub
add
loope
fwait
sub
jg
fdivl
xor
cmpsb
int3
push
mov
cmp
cli
mov
imul
mov
mov
mov
out
pop
outsl
jp
adc
xchg
xorb
sbb
push
sbb
cld
in
fcmovnb
pop
mov
jae
mov
xorb
jo
xlat
jb
scas
cltd
sub
pusha
push
and
dec
push
call
stos
jns
in
jae
into
mov
xchg
xor
leave
loope
iret
mov
cmpsl
mov
cmp
jns
push
pop
mull
mov
mov
pop
sbb
jne
push
sub
pop
sub
sbb
ret
mov
mov
adc
out
int
cwtl
cmpsl
packuswb
daa
mov
popa
and
test
dec
sbb
les
push
jg
bound
sahf
imul
mov
scas
mov
cmp
push
push
xchg
xchg
add
nop
mov
fdivrl
lods
pop
and
or
jecxz
or
popf
push
mov
fstl
adc
pop
stc
cmp
outsl
mov
sub
stos
mov
inc
cmpl
add
xor
aad
xorb
and
int3
imul
outsl
test
sbb
xchg
into
xchg
pop
and
push
sarb
adc
jbe
xchg
test
sbb
inc
jo
int
mov
dec
pop
sbb
in
pop
stos
lea
roll
out
mov
sub
je
movsl
xchg
and
xor
sti
in
clc
jp
movsb
pusha
loope
cmpsl
and
insl
pop
jmp
and
cld
xchg
cli
mov
inc
push
sub
sar
inc
or
xchg
push
mull
and
pop
jne
inc
jge
jo
mov
fisttpll
push
cmpsb
fists
dec
adc
lea
fisttpll
and
dec
pop
icebp
xchg
test
sbb
cmp
leave
pop
fs
enter
mov
setl
lret
adc
add
adc
and
loop
cli
popf
iret
popa
test
xchg
and
push
dec
mov
lahf
xor
push
int
cs
mul
or
decb
pop
into
imul
mov
int3
jne
loop
or
xchg
out
gs
ret
mov
stos
mov
mov
cwtl
mov
cwtl
gs
or
dec
cmp
icebp
hlt
add
xchg
ja
adc
and
jbe
mov
and
stc
cltd
out
test
xor
sahf
and
mov
push
rorb
xor
icebp
inc
adc
loopne
mov
pop
xor
sub
rcr
cmp
popa
les
insb
jnp
fwait
imul
out
or
mov
icebp
sahf
cmp
cs
inc
sub
mov
lcall
mov
mov
xor
xor
cld
push
push
rcrl
lea
cwtl
cmp
pop
mov
out
arpl
rcr
out
shlb
mov
hlt
pop
cmp
sub
cmp
pop
imul
movsl
mov
add
aas
cmc
hlt
mov
pusha
push
xor
shlb
dec
loop
fs
icebp
mov
mov
cmp
int
pushf
daa
mov
test
push
xor
and
mov
pushf
or
gs
sub
daa
scas
loopne
dec
insl
mov
iret
int
push
sbb
push
push
test
test
push
scas
movsb
or
add
loope
pminsw
cwtl
cmpsb
mov
popf
xor
loopne
xchg
lret
xchg
imull
mov
or
mov
out
pop
inc
pop
test
movsl
ss
movsl
cmpsb
mov
int
sub
inc
push
rcll
lock
xor
roll
add
lea
inc
jl
push
inc
aam
repz
sbb
leave
jmp
and
or
out
ds
jbe
adc
xchg
pop
sub
in
sete
bound
in
out
fs
adc
lods
insb
jge
int
mov
inc
jle
insl
xchg
jnp
lret
fstps
enter
pop
lea
mov
xchg
and
insb
mov
shll
and
pop
out
mov
sub
and
sub
mov
xchg
div
movsl
sbb
sahf
jns
int
mov
mov
add
outsb
inc
lds
jne
fisttpll
xchg
sub
jbe
pusha
bound
xchg
mov
push
ja
push
push
cmp
movsb
pusha
dec
aam
xchg
pop
stc
shrb
adc
not
pop
test
ja
bound
inc
adc
pop
xchg
bound
inc
sub
lods
mov
arpl
nop
xchg
fldt
sarb
sahf
ljmp
repnz
or
xchg
fiaddl
add
movsl
shlb
and
jnp
mov
mov
jmp
inc
hlt
fldt
fwait
inc
and
dec
or
iret
cli
mov
daa
push
push
or
insb
inc
jo
pop
inc
out
out
cltd
lock
je
xor
dec
ficoml
push
sub
outsb
inc
in
xchg
icebp
js
pop
pop
int3
enter
outsb
mov
sbb
in
pusha
push
incl
push
mov
pop
fdiv
lods
adc
mov
xchg
addr16
or
pop
sub
mov
mov
lcall
add
add
or
test
xchg
mov
xchg
imul
das
pop
and
adc
and
xchg
jg
adcl
pop
lret
movsb
popf
insl
pop
inc
jne
es
rcr
test
repz
insb
test
or
fildll
fists
lock
dec
aad
aas
jns
push
pop
jp
sbb
rorl
pop
jne
cmp
and
testl
sub
dec
or
pushf
mov
push
dec
into
aaa
adc
and
repnz
mov
mov
ljmp
xchg
dec
pop
ljmp
shll
dec
mov
and
push
in
push
fisubrs
jecxz
sub
sar
cmpsb
xchg
aam
sar
add
loop
dec
je
and
pop
or
and
or
and
lds
lret
sbb
mov
int
or
mov
and
lret
lcall
xor
ret
in
hlt
stc
loopne
or
inc
dec
lods
pop
pop
xchg
adc
or
jbe
dec
xchg
lds
cs
pushf
icebp
and
jg
and
dec
mov
stc
pusha
icebp
or
enter
xchg
pop
jae
lret
in
aaa
outsl
cmpsl
or
add
out
cmp
out
mov
aas
push
fisubs
unpcklps
repnz
ss
dec
std
xlat
inc
jbe
jmp
xor
cmc
aaa
lret
adc
cmp
ss
inc
daa
sbb
mov
xor
sbb
repnz
subl
dec
mov
sbb
loope
stos
fisttpl
insb
mov
lahf
add
sub
dec
movsl
imul
pop
fsubs
out
ds
inc
stos
mov
out
add
add
ljmp
or
movsb
push
push
xchg
pop
mov
sub
sub
mov
aad
inc
call
aaa
nop
les
xor
arpl
daa
xchg
sahf
dec
or
sbb
xchg
cmp
jo
or
enter
loope
adc
loop,pn
mov
cmpsl
iret
lea
hlt
xchg
mov
xor
push
xor
jb
lret
push
clc
and
pushf
out
pop
aad
sbb
mov
sub
xchg
movsl
lcall
xchg
adc
jb
mov
data16
mov
xchg
lcall
insl
cmpsl
ror
hlt
popf
jbe
test
stos
movsl
inc
lahf
cmpb
in
cld
in
ret
std
jno
out
lret
enter
pop
or
and
sbbl
gs
xor
in
and
lods
data16
cmpsl
jnp
mov
xor
sbb
push
xor
adc
clc
cmp
sbb
stos
gs
inc
or
out
mov
add
cmp
nop
into
adc
orps
bound
subb
pop
les
jbe
dec
out
cmp
call
movsl
shll
add
pop
dec
jno
or
pop
icebp
xor
jns
mov
ret
popa
mov
jae
mov
fistps
idivl
cltd
rorl
fisubrs
jmp
scas
les
cmp
add
pushf
mov
inc
popa
sarl
mov
sbb
sub
push
int3
xabort
stc
or
push
add
xor
dec
jecxz
adc
dec
inc
dec
xchg
xchg
gs
adc
aad
sbb
sbb
jae
xchg
loope
sbb
lods
xchg
inc
jo
stos
in
shrl
test
pop
aam
out
jmp
sbb
pop
mov
aas
mov
xchg
inc
mov
pop
mov
push
mov
repz
out
jle
inc
mov
or
test
xor
mov
pusha
mov
inc
cmp
xchg
jae
push
mov
or
sbb
xchg
outsl
loop
out
mov
sbb
xor
mov
leave
ljmp
jecxz
popa
js
add
testb
xchg
and
testb
push
push
cmc
inc
xchg
push
data16
movsb
cltd
adc
xchg
insb
sub
lds
xchg
xor
cltd
xor
jae
xchg
cltd
dec
pop
test
jno
mov
out
and
add
dec
pop
lods
adc
ror
shr
bound
xor
xor
push
mov
push
cmc
and
push
loop
dec
dec
cmpsl
adc
jmp
ret
movl
sub
stc
adc
fiaddl
lods
mov
push
adc
xchg
mov
add
mov
inc
je,pn
dec
jmp
fmuls
mov
cmc
nop
mov
aas
cmpsb
push
adc
int
loope
imul
aad
jbe
test
adc
mov
sbbb
cmpsl
add
mov
je
imul
lock
xor
dec
mov
sarl
hlt
stos
push
call
pop
daa
inc
jle
xchg
iret
test
test
test
push
and
jb
hlt
ret
mov
cltd
jae
inc
or
lret
in
inc
push
ljmp
jge
or
mov
and
xchg
pop
sbb
pop
inc
out
rol
dec
mov
add
inc
push
stc
mov
rorb
andl
cwtl
hlt
into
jmp
pop
and
and
sbb
and
and
test
in
sub
sbb
ja
out
mov
sbb
xor
lret
mov
dec
outsb
je
aam
cmc
cld
sub
and
mov
nop
daa
cld
cmpsb
jne
in
jbe
jg
je
fisubl
int
and
cmp
ret
iret
lds
ret
in
dec
mov
inc
shrl
loop
mov
inc
loope
mov
stc
aam
leave
sbb
or
outsl
idivb
popa
cld
xchg
call
push
push
lods
pop
mov
scas
mov
mov
xor
mov
mov
test
shlb
jbe
jo
or
push
insl
les
push
jge
xor
push
adc
mov
ds
sbb
aas
aad
popa
xlat
js,pn
mov
fldt
addr16
and
or
ljmp
clc
pop
push
inc
jns
pop
out
mov
loop
stc
cwtl
and
jo
jg
pop
repnz
aaa
movsb
jbe
add
sub
lea
or
fiadds
arpl
out
push
and
mov
mov
pop
mov
inc
mov
jo
cltd
jle
add
nop
rcl
push
fwait
xchg
clc
jle
repnz
jne
das
ds
push
jae
cwtl
lds
les
mov
sub
cmp
scas
addr16
ja
dec
test
and
pop
jbe
cld
sub
lea
aas
push
sub
sti
adc
cmp
scas
leave
push
dec
xchg
inc
loopne
fstpt
ret
jb
xchg
je
les
and
lcall
mov
add
movsb
xchg
repnz
clc
adc
adc
and
popf
ret
test
add
jne
gs
sub
dec
icebp
jg
popf
js
cmpl
sub
bound
adc
jb
enter
in
mov
mov
aas
mov
xchg
out
cmp
cmpsl
sahf
sub
je
jno
xchg
sub
mov
inc
pusha
in
xor
subps
xchg
test
xor
dec
xchg
jae
jmp
mov
test
mov
cmc
lahf
aas
push
out
es
push
adc
sub
xchg
mov
add
add
dec
imul
out
or
rolb
adc
in
icebp
scas
cmc
pop
fdivl
adc
adc
cmpsl
mov
sub
sbb
out
das
pop
int3
outsl
dec
pop
or
ret
popf
pusha
xchg
inc
add
or
mov
xor
outsl
cs
cmp
mov
rcll
inc
push
add
cltd
mov
dec
sbb
stos
inc
push
int3
cltd
aam
lock
in
data16
pop
stc
sbb
push
sub
insl
or
push
sbb
push
xchg
mov
mov
jno
xchg
dec
sub
sub
imul
negb
ja
mov
adc
sets
data16
dec
or
fwait
xchg
pop
mov
ret
pop
dec
push
call
pusha
inc
fdivs
jp
adc
cmp
aam
lock
ret
fldl
inc
fsubrs
xor
mov
cmp
mov
call
into
or
sub
jne
cmp
popa
adc
push
cmp
gs
mov
xor
scas
fsts
in
adc
mov
mov
sub
das
and
movsb
das
dec
je
iret
je
outsl
iret
imul
push
and
xor
repnz
js
hlt
push
pushf
aad
xchg
lahf
data16
sub
push
js
outsl
pop
sahf
cmp
repz
call
inc
add
sti
mov
xchg
mov
mov
dec
int3
in
mov
xchg
lahf
xor
nop
sbb
inc
mov
xor
adc
and
dec
jmp
repnz
pop
nop
push
mov
sub
int
cmpsl
pushf
sbb
ja
daa
push
das
jne
push
jns,pn
fstl
xchg
sbb
add
cmpsl
xchg
sti
cmpsb
stos
jmp
add
shll
push
into
and
dec
scas
rorb
repnz
test
pop
mov
mov
inc
fstps
jmp
push
addr16
xchg
xchg
sbb
icebp
adc
stc
push
arpl
sub
lea
mov
mov
inc
mov
lods
cltd
lcall
sbb
pop
dec
out
shl
sub
sub
push
mov
es
mov
pop
sbb
xchg
mov
out
insb
push
addl
imul
sbb
push
jb
in
push
mov
xchg
sbb
mov
jle
das
mov
loopne
inc
dec
stc
cld
inc
int3
ret
mov
add
cmp
jge
mov
jae
scas
shlb
xchg
sub
and
orl
insl
sub
pop
ds
test
sti
adc
stos
rorl
test
daa
fs
aam
mov
clc
lock
lds
adc
add
stos
subb
mov
push
xchg
loop
adc
inc
mull
cmpsl
stos
mull
mov
das
out
adc
sub
stos
in
ljmp
hlt
mov
in
fnstsw
xchg
lods
icebp
mov
sbb
sub
hlt
cwtl
loop
mov
in
sub
cmp
mov
dec
or
out
stos
mov
adc
cmpb
mov
xchg
push
movsl
inc
or
jmp
aaa
lods
movsl
rorl
adc
mov
add
je
sub
and
outsb
insl
imul
xor
xchg
mov
inc
test
rdmsr
mov
addr16
cwtl
sbbl
add
mov
je
push
and
adc
dec
movsb
cmpsl
sub
test
fiaddl
cs
add
jle
popf
adc
ljmp
and
xchg
adc
pop
sub
mov
sti
sbbb
and
in
lods
fwait
adc
in
clc
add
push
shl
sbb
jl
jno
aaa
nop
push
movsl
sbb
xchg
int3
cmc
mov
mov
dec
dec
shll
mov
fistl
jp
inc
mov
sub
sub
lahf
out
inc
enter
adcb
dec
push
pop
pop
and
and
insl
hlt
and
inc
addr16
and
les
inc
pop
adc
fnsave
leave
scas
xor
bound
push
pop
push
xor
push
nop
ss
int
mov
fcomp
cmpl
sub
lods
loop
sub
and
push
in
push
push
lret
in
out
xchg
xor
test
mov
mov
pop
pop
repnz
push
cmp
jmp
xchg
mov
fldlg2
aam
test
cmp
pop
subb
outsb
testl
mov
loopne
push
or
dec
and
lods
movsb
lock
mov
mov
rorl
add
pop
fst
add
adc
jl
divl
ror
fnstsw
adc
pop
or
sub
xor
repz
ds
enter
or
cmpsl
pusha
pop
push
mov
popa
xchg
lret
sub
sti
sub
adc
in
fwait
pusha
cmp
divl
jbe
xchg
test
mov
and
bnd
jns
clc
mov
adc
jns
fnstsw
aas
rcr
cli
mov
mov
jno
add
fiaddl
pushf
inc
cmp
insb
mov
enter
or
fdiv
mov
mov
add
fiaddl
inc
cmp
pop
enter
xchg
sahf
jp
or
repz
mov
les
add
adc
fimuls
adcb
loopne
jb
mov
dec
mov
sub
mov
stc
and
xlat
xor
cmp
inc
pop
idiv
cs
in
std
bound
mov
sti
repz
adc
nop
scas
lahf
out
addb
push
pop
inc
sahf
test
xchg
test
lds
or
adc
push
jecxz
push
xchg
or
fdivr
cmp
div
test
test
out
arpl
adc
pop
es
xor
pop
hlt
fs
mov
movsb
xchg
rolb
pop
jmp
fcmovbe
scas
jmp
imul
mov
ds
aas
add
int3
cs
or
sub
push
popf
mov
push
ljmp
mov
incl
dec
pop
push
int
fsubrs
mov
aam
popf
fldenv
and
mov
cmp
pop
int
and
loopne
mov
je
mov
dec
call
fcmovnbe
cld
jl
push
aad
icebp
or
cs
mov
les
test
outsl
aam
cmp
push
mov
int
jmp
cmpsb
cmpsl
jge
xchg
pop
loope
repnz
leave
adc
in
test
mov
add
dec
imul
lcall
sub
xor
fucomp
aas
js
enter
js
pop
cmpsb
pop
mov
leave
lods
inc
dec
gs
push
mov
mov
mov
mov
outsl
push
addb
scas
loopne
and
out
add
and
and
mov
mov
push
mov
mov
jmp
test
repnz
dec
daa
dec
rorl
xlat
ljmp
out
in
shll
and
mov
mov
ss
add
out
gs
and
xchg
js
push
mov
or
mov
cmp
sbbl
lea
je
pushf
lock
mov
test
xlat
pop
cmpsb
dec
pop
fcompl
pop
lock
adc
dec
std
mov
mov
dec
and
test
dec
xchg
push
mov
pusha
mov
aaa
add
mov
lret
lcall
cltd
mov
sub
scas
mov
lret
loop
lahf
cli
enter
jns
jg
ljmp
jg
mov
gs
aaa
dec
xorl
ret
adc
push
jge
adc
mov
mov
adc
dec
outsl
out
pop
add
and
jg
dec
and
add
and
pop
xor
xchg
int3
add
mov
in
test
cs
xchg
les
lock
popf
pop
inc
loop
adc
scas
pop
jno
mov
bound
int3
ljmp
iret
mov
adc
jno
scas
or
dec
ror
mov
and
rcrb
mov
fistps
xlat
mov
lods
mov
in
fstl
jp
enter
push
adc
jl
movsl
add
xor
sbb
leave
jns
cmp
mov
mov
jl
sbb
inc
leave
jnp
loope
push
add
pop
aas
adc
cmp
pop
adc
push
inc
cmp
das
jb
mov
mov
xor
cmpsb
pushf
add
out
mov
aas
adc
mov
mov
in
mov
imul
inc
push
or
cs
sti
mov
xor
in
addr16
js
sbb
test
lret
aad
jae
or
jbe
xor
xor
mov
enter
divl
add
scas
jp
mov
std
cmc
std
mov
ret
stos
insl
inc
xor
pop
dec
push
jnp
pop
mov
inc
pusha
std
inc
and
imul
push
add
push
iret
push
popf
jb
add
inc
hlt
rcrl
inc
repz
add
sbb
out
std
push
jnp
and
mov
sbb
pop
popa
jecxz
test
hlt
out
ja
add
lret
sbb
pusha
fdiv
loop
fsts
cmp
cld
scas
in
jne
pop
sti
jg
push
push
ret
repnz
cmp
push
loop
inc
add
xchg
xchg
test
add
mov
sti
xchg
sub
rolb
xlat
aaa
enter
test
ja
push
cmp
divb
push
mov
push
cs
je
cmpsl
inc
cmp
pop
lcall
sub
mull
imul
add
addl
xor
test
dec
ja
stc
xlat
inc
jae
scas
rcll
push
test
push
pop
sti
push
fcomip
cwtl
stc
jg
lods
test
mov
jo
push
xor
lods
push
adc
and
sub
lcall
popfw
rcrl
push
rcrl
enter
add
ljmp
aam
or
pop
lret
xor
pop
sub
sbb
test
xchg
lea
sahf
movsl
xor
mov
fnsetpm(287
pop
mov
mov
xor
and
loopne
push
lea
movsl
stc
sub
jno
xor
pusha
imul
adc
test
push
aad
xchg
out
mov
dec
out
dec
pushf
mov
pop
scas
mov
aas
pop
pop
imul
add
ffreep
and
mov
insl
push
inc
adc
in
mov
mov
fiadds
ficoml
mov
sti
or
out
or
loope
fwait
inc
in
add
pop
into
pop
xor
stos
adcb
mov
leave
cmpsl
dec
jb
fs
ret
out
and
mov
mov
mov
out
fs
rorl
testb
push
pop
je
cmp
pop
cmp
mov
jg
pop
lcall
and
push
pop
sti
sarl
inc
iret
rolb
push
lods
mov
cmp
ror
push
sbb
inc
andl
dec
xor
push
xor
adc
mov
int
push
adc
add
inc
push
jne
loop
dec
popf
push
mov
movsl
push
fs
inc
in
mov
mov
daa
aam
sahf
cmpl
xchg
jns
bound
dec
stos
and
pop
push
incl
fmull
pop
cmp
inc
xor
or
jmp
push
inc
lods
push
das
or
mov
jl
mov
clc
out
hlt
xchg
inc
cwtl
scas
xchg
fstpt
cmp
mov
push
mov
clc
or
push
and
cmp
jg
std
jo
inc
lods
stos
add
cmpxchg
and
jne
bound
push
inc
and
mov
push
xchg
or
pop
mov
pop
inc
out
xchg
sarb
lcall
sbb
adc
pop
xor
ret
mov
xor
cmpsb
ja
in
mov
cwtl
sbb
insb
ljmp
mov
loope
sarb
negb
movsl
jbe
cwtl
je
lret
roll
adc
cltd
loope
clc
inc
adc
pushf
jmp
add
dec
outsl
repnz
xchg
fiadds
repz
push
mov
dec
lret
or
sbb
sub
jnp
sub
lahf
dec
addb
aam
xor
mov
mov
fs
fstp
int3
xor
push
push
jo
xchg
arpl
mov
dec
sub
add
cmp
inc
pushf
loop
xor
mov
sbb
cwtl
adc
sub
adc
aam
and
stos
jnp
std
lods
or
pop
popf
inc
test
push
xor
addr16
rep
or
add
mov
pslld
mov
sbb
cmp
pop
cli
mov
mov
andl
dec
push
cs
mov
mov
loopne
add
xchg
enter
pop
enter
roll
hlt
mov
popa
or
push
pop
cld
jns
ss
or
jno
rorl
popf
aas
jmp
mov
push
mov
lea
jg
mov
push
stos
cmp
add
insl
pop
or
stos
aam
and
dec
rcl
sub
mov
lcall
fwait
or
dec
ljmp
or
xor
movsl
mov
push
sahf
push
cld
pop
je
xor
inc
mov
in
pop
testl
adc
sarb
fisttps
lcall
js
adc
cmp
mov
in
mov
maskmovq
add
sbbb
pop
push
cmp
jnp
mov
mov
xchg
adc
imul
push
pop
cli
push
inc
mov
add
sbb
dec
aas
test
insl
shr
rorl
mov
jle
cmp
test
add
xchg
push
or
mov
mov
bound
nop
out
and
fcmovne
out
addb
loope
cmpsb
lret
fcom
adc
jl
push
icebp
and
adc
push
push
jl
mov
jg
insl
sbb
cld
out
mov
xchg
jae
sub
aad
mov
stc
add
jmp
filds
or
xchg
push
push
addb
xchg
mov
adc
inc
lcall
mov
lret
xchg
pop
mov
inc
out
sub
xchg
rclb
jo
cmpsl
mov
out
and
inc
es
clc
xor
xchg
movsl
jae
mov
out
cwtl
push
xchg
lea
jb
cld
jg
cltd
push
mov
adc
jle
push
push
pop
fdivr
and
lods
dec
out
aas
les
pop
dec
outsb
xor
mov
rolb
dec
mov
jg
scas
jle
and
add
movsl
mov
mov
lcall
cwtl
in
pop
lahf
in
xchg
lds
lcall
rorb
popa
out
aam
cmp
sbb
mov
movsb
push
fiadds
mov
xor
fdivp
movsl
subl
xchg
aad
cmp
in
add
mov
pop
mov
fstpl
xchg
jb
or
inc
out
in
pop
ljmp
icebp
outsb
dec
jmp
fs
mov
mov
lds
adc
mov
int
xor
dec
and
sub
stos
dec
xor
out
add
cli
add
xor
fcoms
mov
mov
add
jmp
xlat
cmp
xchg
mov
add
imul
cld
mov
popa
sti
pop
mov
repnz
push
push
pop
aas
cmp
loope
shrb
mov
int3
cltd
shl
pop
repz
mov
adc
sahf
mov
nop
fmull
mov
mov
mov
daa
sbb
pusha
jb
sub
inc
mov
insl
and
inc
cmp
in
imul
dec
lods
sub
dec
call
fwait
dec
int
adc
push
aaa
test
mov
jle
add
push
jmp
loopne
adc
mov
les
pop
lret
pop
fistl
aad
jmp
cmp
lds
xchg
mov
in
outsb
fcoms
adc
dec
inc
mov
or
sbb
popf
in
jno
addl
push
enter
push
or
jbe
dec
pop
data16
push
enter
lods
mov
or
jne
sbb
test
div
xor
jp
dec
je
addr16
jge
aam
or
sti
jge
pop
sbbb
andl
roll
xor
mov
movsl
inc
xchg
jmp
jecxz
repz
push
dec
adc
notb
pop
enter
xor
jl
lock
mov
dec
jmp
test
stos
sbb
js
popa
lret
pop
ror
inc
lods
insl
lcall
sbb
dec
repz
fst
aas
sub
xor
mov
adc
scas
jnp
stos
cmc
sbb
test
push
lret
push
lret
jb
fwait
arpl
in
test
adc
sarb
dec
inc
loope
fsubs
je
mov
adc
adc
mov
or
mov
lods
push
xchg
jne
xchg
xchg
lahf
xchg
popf
lods
roll
mov
add
movsl
pusha
pushf
cld
cs
pop
std
mov
xchg
out
push
les
imul
pop
jmp
adc
adc
ret
in
push
in
sub
ljmp
mov
and
jge
pop
jmp
fcmovb
and
stc
movsb
xchg
mov
xchg
fisttpl
pop
and
popa
push
clc
xchg
adc
sbb
into
or
negl
iret
ja
arpl
and
fildl
xor
add
rcrl
push
jne
jge
out
popf
pop
mov
jp
cs
jae
ret
lahf
mov
push
je
push
out
mov
int
enter
adc
ficompl
or
sub
rcrl
arpl
xchg
jmp
pop
mov
sub
mov
or
dec
bound
push
dec
inc
insl
sub
pop
inc
fsts
lock
inc
pop
sbb
add
push
add
jg
mov
push
dec
insb
cli
xchg
mov
mov
in
sbb
cld
fdiv
frndint
les
mov
add
test
cmp
mov
mov
inc
jle
mov
rcll
pushl
movsb
xor
cld
mov
sti
pop
pop
sti
dec
insb
movsb
repnz
out
mov
inc
es
pop
out
fisubrl
test
xchg
jo
or
cmp
xchg
sbb
addr16
mov
push
movsl
icebp
fstps
mov
inc
je
test
mov
jno
in
in
ret
insb
out
call
scas
addl
push
lods
cwtl
mov
bndstx
inc
leave
xchg
dec
xorl
pop
adc
jmp
sub
sub
insb
push
jg
dec
mov
out
add
leave
shll
inc
aas
sub
add
iret
jnp
sub
hlt
push
xchg
xchg
mov
xlat
push
icebp
and
push
sub
add
sbb
cmp
shlb
xchg
ret
sub
pop
dec
fnstenv
xor
pop
sub
sub
mov
shrl
fldl
jp
iret
stc
jnp
out
adc
push
lods
xchg
push
mov
pop
das
or
cmp
or
mov
xchg
cmp
je
jecxz
add
xor
or
jecxz
pop
mov
push
imul
pop
dec
inc
cld
dec
xchg
sbb
call
fwait
or
js
pop
mov
adc
clc
dec
mov
neg
outsl
enter
cli
sarl
inc
testb
es
jecxz
sub
xchg
xchg
ja
xchg
fsubl
pop
sbb
adc
rcrb
adc
xor
lcall
cmp
or
and
shrb
mov
fmull
ret
lock
cmp
out
dec
addl
je
lds
rcl
add
sbb
or
lock
sub
push
lods
adc
or
mov
lods
xchg
inc
cmp
push
xchg
dec
and
loope
leave
push
xchg
push
jbe
and
jb
xchg
mov
popa
xchg
lret
rol
icebp
pop
mov
lahf
in
in
mov
mov
daa
rorb
loope
fst
clc
sbb
push
push
and
or
dec
inc
shll
xor
call
movsb
pop
sbb
das
stc
cmp
mov
fadd
mov
add
mov
loop
fnstsw
out
out
adc
mov
les
rorl
test
cmp
jmp
dec
scas
stos
addb
lods
outsl
cmovno
mov
sahf
jge
imull
inc
aad
rcrb
push
or
pop
jmp
cmpsb
or
dec
fidivrs
scas
shrl
pop
mov
inc
pop
ljmp
hlt
mov
ds
or
sahf
jecxz
ds
ret
in
loop
clc
sbbl
push
pop
mov
lret
mov
ret
mov
dec
ret
les
sub
push
pop
dec
adc
in
repz
xchg
rcrl
enter
enter
pop
sbb
pop
fnsave
fs
cld
mov
frstor
inc
push
imul
cli
out
in
lcall
repnz
inc
add
movsl
sub
and
and
cwtl
push
jg
enter
testl
push
aad
jnp
push
jno
xor
das
dec
xlat
adc
xor
cmp
mov
add
cmpsl
mov
loop
jmp
jecxz
inc
xor
inc
enter
push
sbb
adc
out
int
cltd
push
neg
pop
sub
loope
mov
lds
rcr
je,pt
rorb
lahf
push
ficoms
dec
mov
jno
popa
cmp
inc
adc
ljmp
fistl
push
inc
aaa
sahf
mov
inc
call
or
adc
inc
jecxz
jle
jmp
push
das
adc
or
lds
jp
and
sub
pop
dec
push
sarl
sahf
mov
stos
mov
clc
adc
xchg
sub
inc
jo
jbe
adc
cmpsb
sbb
lods
mov
fs
adc
pop
dec
sbbb
and
daa
enter
outsb
xor
mov
icebp
jbe
sbb
in
gs
add
out
fnsave
xor
sbb
pusha
inc
mov
mov
xlat
mov
push
dec
ljmp
sbb
mov
cmp
pop
stos
mov
leave
js
xor
push
int
mov
fs
mov
mov
inc
or
jp
lods
jp
jbe
int
adc
jns
mov
pop
and
les
enter
outsl
inc
push
loopne
sbb
pop
sub
pop
fdivs
xorb
or
cmpsb
jmp
jbe
lods
clc
push
mov
popa
inc
loopne
repnz
ret
jb
dec
xchg
cmpsl
out
mov
sbb
adc
daa
xchg
cmpl
and
or
addb
mov
add
aad
xchg
test
je
add
jecxz
jge
add
aaa
mov
push
outsb
pcmpgtw
std
test
mov
mov
in
or
add
sarl
idivb
pusha
adc
push
jl
mov
int3
in
inc
adc
pop
add
es
push
scas
lahf
inc
out
xchg
sub
mull
fs
push
rorb
cmpsl
pop
out
sbb
lret
xorl
push
cmc
ret
mov
in
inc
or
bound
je
xor
pop
icebp
push
movsb
adc
dec
push
adc
rcll
fisubrs
idivl
repnz
add
push
sub
push
enter
out
popf
sub
stos
dec
jecxz
cmpl
in
add
cli
mov
into
lar
fwait
mov
mov
lea
cld
fstl
aaa
fldenv
mov
aaa
movlps
inc
mov
rcrl
fistpl
pop
xor
das
jae
cmp
shrl
stc
pop
and
push
out
cmp
rorb
jae
dec
push
sbb
xor
lods
dec
push
addb
adc
xor
or
out
call
xchg
aas
xchg
ja
imulb
mov
mov
stos
and
or
or
adc
cltd
lds
jb
pop
ret
call
push
outsl
outsl
sti
push
lods
pop
daa
cmp
test
inc
push
lahf
lret
mov
pop
aaa
lds
xchg
mov
push
imul
mov
popa
test
mov
fcomps
adc
cs
cmp
jne
jns
mov
ds
popa
mov
ljmp
mov
xor
xchg
aas
or
daa
mov
sub
cltd
mov
imul
xchg
jno
mov
sub
mov
out
and
addl
mov
testb
and
sbb
sbb
cli
sub
xor
inc
pop
popa
xor
xchg
push
push
sub
mov
pushf
push
loopne
leave
fidivs
push
insb
lahf
inc
out
pop
push
mov
iret
adc
pop
and
adc
push
mov
xchg
fwait
jae
pop
movsb
gs
call
lret
aas
test
jnp
negl
scas
mov
icebp
cmc
andb
and
cltd
enter
cmove
test
xchg
inc
or
in
cli
sbb
pop
addr16
xor
vpmulhuw
dec
out
adc
fcmovnbe
nop
sbb
xchg
lea
and
call
xor
call
das
data16
dec
into
iret
pop
mov
insb
xchg
gs
mov
lahf
sbb
push
jmp
mov
fisubrl
xchg
outsl
outsl
addr16
sbb
sti
test
mov
push
pushf
inc
xchg
cmpsb
adc
das
mov
add
cmpsb
sub
sub
xchg
iret
mov
xchg
movsl
dec
mov
and
mov
inc
cld
add
lds
sub
stc
loope
dec
jo
lahf
imul
fdivl
mov
jo
adc
cmp
cmp
ret
pop
repz
shll
jno,pn
int3
adc
jno
outsb
testb
cmp
fsubs
lea
cld
jmp
shlb
sbb
loopne
sbb
std
in
fisttps
mov
out
mov
cld
add
pop
add
and
add
mov
adc
mov
dec
adc
jecxz
sti
mov
repz
and
cmp
iret
scas
in
dec
lahf
mov
mov
mov
cmc
sub
fsubr
fmull
fcmovne
sti
mov
rcll
mov
jg
pusha
xchg
mov
or
scas
out
es
clc
in
mov
int
sub
push
fsubrl
lret
out
mov
push
ljmp
lea
shlb
outsl
xchg
mov
fdivrl
dec
xchg
aam
cli
popa
or
push
repz
cltd
jl
enter
inc
mov
test
aas
insl
leave
in
dec
leave
ret
pop
cld
leave
ficoms
repz
mov
adc
sub
and
ret
adc
js
adc
jmp
test
pop
pop
adcl
pop
dec
push
mov
inc
push
testb
xchg
scas
jmp
test
push
lcall
mov
into
hlt
ljmp
movsl
pop
mov
pop
mov
data16
cs
je
and
jns
js
xchg
inc
push
js
sub
inc
adc
repz
and
jbe
fistpll
mov
pop
xchg
xchg
pop
push
jo
loop
xchg
leave
mov
adc
iret
loop
cmovbe
lods
lds
mov
out
push
ljmp
push
fcmovbe
stc
cmpl
pop
shl
stos
enter
aam
and
cmpsb
mov
pop
and
fstpl
out
lret
push
add
mov
add
rorl
fidivl
fildll
cli
es
or
lret
jl
mov
xchg
idivl
add
add
sbb
inc
testl
mov
orl
cmpsl
adc
idivl
inc
int3
cld
inc
or
dec
jle
sarb
sbb
mov
xor
adc
sti
mov
dec
jl
and
mov
int
push
loopne
or
cmp
xor
loopne
pop
push
cmpsl
sub
jne
push
adc
out
mov
mov
xorl
push
in
ja
dec
pop
mov
fcoml
pop
pop
xchg
xchg
call
jbe
popa
loope
cmpsl
imull
addr16
out
pushf
cmc
ljmp
shll
mov
pause
insb
add
push
cmpsb
stc
test
enter
leave
jl
pop
sub
fldl
inc
out
cmp
cmpsb
dec
rcrb
jno
inc
add
xchg
push
fldenv
jbe
jp
das
mov
and
std
fbld
loope
sbb
xor
push
xor
jecxz
mov
mov
pop
test
or
xchg
loope
insb
or
insl
push
fidivs
ja
sbb
jno
sti
popl
fidivs
addr16
sub
jne
outsl
adc
rclb
in
int
shlb
mov
in
cbtw
mov
out
xor
mov
les
sbb
sbb
mov
push
shrl
pop
cmp
mov
add
ss
mov
push
xlat
inc
btc
cwtl
fwait
daa
stos
mov
lahf
xchg
mov
pop
repz
adc
jecxz
push
jne
js
out
pop
cmp
push
or
pushl
lea
lret
push
fidivs
sub
jge
outsl
dec
inc
dec
pop
mov
insb
ret
insb
xchg
ljmp
xor
push
sbb
sbb
mov
mov
push
ds
fistps
xor
sub
or
mov
movsb
and
dec
pop
jb
push
out
rorb
cli
add
mov
dec
stc
xchg
push
mov
inc
inc
jno
shlb
dec
mov
aaa
push
std
sarb
fstl
pop
dec
cwtl
jnp
or
into
xor
aad
and
push
test
xchg
dec
xchg
or
insl
jmp
call
lock
loope
std
nop
jb
jo
aas
cmp
insb
sbb
out
lret
pop
or
loop
push
sub
dec
pop
mov
ja
ss
sti
adc
mov
jb
gs
jmp
jle
sbb
repz
sub
sbbl
adc
out
xchg
pop
pop
addr16
adc
pop
mov
or
inc
adc
out
test
pushf
clc
mov
mov
adc
add
xchg
mov
testl
jne
movsb
add
mov
adc
sti
pop
xchg
inc
jne
int3
les
lahf
mov
xchg
insb
sub
stos
mov
dec
xchg
inc
sub
pop
cmp
fs
xor
int
jmp
stos
testb
in
ljmp
mov
pop
dec
fildl
mov
js
add
pop
in
cli
jnp
add
ja
xchg
xor
xor
mov
add
out
leave
loope
cmp
aaa
cmp
ret
add
and
sub
mov
inc
mov
xchg
les
mov
ss
xchg
insb
lahf
mov
push
imull
in
lret
pop
ret
test
je
into
sbb
mov
cltd
clc
push
je
and
repnz
mov
sub
dec
scas
mov
cmp
dec
stos
dec
push
inc
movsb
cs
outsl
push
leave
jg
gs
cmpsb
pslld
mov
inc
lcall
inc
lods
cmp
push
xor
out
inc
sti
or
aad
dec
fmul
fwait
je
rcrl
aaa
sbb
loope
mov
adc
and
clc
imul
jl
cmp
out
lcall
jo
add
adcb
into
outsb
jae
inc
movsw
iret
into
fdivs
xlat
mov
xor
outsl
sub
leave
push
mov
cmp
arpl
out
inc
lds
out
xor
movsl
ja
cmp
jl
mov
inc
movsl
cmp
fisubl
and
sarb
adc
ja
dec
adcb
ficompl
mov
loop
xchg
dec
aam
pop
in
sbbb
inc
popf
inc
inc
and
in
add
in
sub
rcrl
je
test
lods
adc
notl
sar
cs
and
mov
push
inc
dec
orl
sub
or
mov
and
fsubr
ret
scas
xor
leave
sub
outsb
adc
ja
icebp
iret
push
and
mov
mov
in
test
stos
pop
rol
dec
jl
adc
dec
pop
push
imul
jmp
adc
rcll
insb
cmc
pop
or
jl
ds
jle
push
jbe
or
cmp
repnz
sbb
sbb
ret
je
jne
rep
cmpsl
dec
push
mov
sbbb
notb
jb
mov
cmp
add
cmpsb
jg
es
fwait
ljmp
inc
into
mov
shll
rcrb
jg
sub
sbb
lods
mov
and
out
subl
mov
in
add
xor
push
push
idivl
inc
inc
js
mov
dec
sbb
push
ja
nop
daa
dec
mov
je
sar
cwtl
inc
and
xchg
popf
ja
movsl
xchg
dec
fisttpll
out
in
mov
dec
shll
xchg
adc
push
fwait
cmc
cli
mov
jne
mov
ds
dec
dec
leave
jmp
fisttpl
xchg
in
popl
scas
das
into
pop
push
in
imul
add
insl
sub
mov
lcall
mov
repnz
daa
cmpsb
add
shl
rclb
mov
aam
mov
std
in
pop
mov
xchg
sub
or
sbb
notb
mov
daa
mov
sub
lods
in
cld
out
pop
pushw
movsb
aam
stos
xlat
rorl
sbb
xor
rolb
aad
or
insb
insl
add
lods
aad
mov
test
lret
sahf
jns
clc
iret
sub
imul
iret
cmc
adc
into
add
xchg
fisubs
and
or
mov
adc
fistpll
sahf
sbb
cmp
pushl
std
pop
pop
rorl
cmp
push
iret
aam
aad
stos
or
mov
andl
loopne
clc
jmp
dec
loop
push
mov
or
sbb
jge
int
xchg
mov
and
clc
inc
mov
mov
shll
adc
mov
repz
jbe
das
cmp
push
pop
lahf
adc
ret
jecxz
push
int
jp
leave
and
sbb
fisttpll
stos
je
loop
out
or
mov
pop
data16
mov
jmp
pop
push
notb
sbb
cmp
imul
adc
mov
outsb
dec
gs
insl
mov
push
add
xchg
scas
sbb
sbbb
pop
mov
dec
push
sbb
mov
cmp
push
filds
leave
sbb
fcoml
out
mov
fcomps
push
sbb
mov
adc
cs
cmp
mov
js
scas
psrad
scas
test
movzbl
imul
test
cmp
imul
jmp
lahf
stos
dec
jecxz
and
jle
dec
idivb
mov
xor
sbb
mov
jge
cmp
mov
cmp
mov
addr16
cmp
jb
mov
pop
outsb
add
daa
imul
std
ret
repz
xchg
cs
lcall
cmpsl
shrl
out
call
push
test
xchg
add
test
pop
rorl
sub
jmp
cmc
mov
lods
ret
shrl
insl
cmpsb
pop
adc
dec
and
jl
fstpt
pop
inc
mov
aas
testb
popf
fs
jbe
sbb
clc
jno
hlt
clc
out
jmp
ret
or
dec
pop
fcompl
shll
out
gs
pop
leave
mov
xchg
cld
sbb
jno
into
subb
je
mov
es
jne
test
stos
aaa
inc
clc
aaa
pop
fsubrs
fldcw
xor
adc
es
ret
jno
mov
outsb
insl
jbe
sub
pop
jecxz
mov
dec
ljmp
push
js
repz
dec
cmp
aas
cld
dec
mov
iret
nop
add
hlt
jae
in
add
cmp
add
mov
cs
cmp
sbb
or
dec
jp
adc
dec
lods
insb
arpl
mov
jle
std
xchg
je
ret
sub
outsl
cmpsl
cmp
imul
dec
stos
repnz
mov
pop
cmp
stc
ret
enterw
fistps
outsl
mov
xchg
push
int
ror
push
or
out
mov
mov
sub
inc
dec
bound
xchg
aam
out
fadds
xchg
cmc
mov
inc
fxch
mov
mov
aam
xchg
mov
sti
aaa
adc
mov
mov
xor
imul
pushf
and
mov
into
mov
dec
mov
inc
cmp
fsubrp
ds
es
mov
mov
lret
mov
dec
clc
add
or
lea
xor
xor
je
shl
jge
mov
sti
movsb
sbb
jb
outsl
cmpsl
dec
inc
enter
stc
mov
mov
cli
jne
add
mov
mov
lods
mov
xchg
in
xor
jnp
jg
aam
sar
jle
dec
pop
hlt
dec
arpl
adcb
mov
sbb
sub
movsl
shl
cld
imul
mov
dec
jecxz
repz
mov
inc
xchg
cmp
push
popf
jp
sbb
lods
pushf
jne
scas
cli
out
jge
jl
lods
mov
adc
hlt
sbb
stos
dec
int3
mov
inc
ret
jle
mov
inc
add
adc
sbb
mov
outsl
into
cmp
lock
in
xchg
mov
pushf
jo
jl
push
frstor
pushf
fcoms
mov
adc
inc
jge
push
jmp
out
jl
daa
mov
jnp
pop
daa
imul
sub
test
arpl
test
nop
bnd
aad
test
and
int
outsl
sub
sub
cmp
jg
scas
adc
arpl
ret
push
inc
sub
lret
cli
jle
loope
jo
enter
xchg
js
mov
mov
ret
mov
outsl
mov
sub
xchg
aas
xchg
insb
nop
dec
and
imul
es
jp
mov
and
or
es
int3
lret
cmp
cmp
mov
sub
stos
lds
stos
adc
sbbl
mov
jp
sub
push
stos
xchg
lcall
and
clc
xchg
test
clc
xchg
xchg
mov
jmp
stc
mov
cmp
call
cmpsb
mov
fmuls
push
push
lods
cmp
cmpb
cmpsl
inc
push
fbstp
sub
bound
sub
mov
cmp
push
hlt
jno
out
cmp
cmpsb
xchg
sub
fadd
insl
int3
mov
pushf
adc
popf
push
pop
js
stos
out
pushf
aam
xchg
scas
roll
sub
cmp
pop
int3
xchg
test
out
outsb
in
sti
dec
inc
add
nop
mov
or
mov
into
jge
hlt
andl
hlt
les
lret
pop
js
cmp
pop
push
popa
cmc
cld
fcmovnu
push
out
sbb
dec
imul
inc
dec
mov
mov
add
dec
cmpsl
xor
xchg
loop
jp
std
call
xchg
fwait
mov
popf
or
cmc
cmpsb
dec
cli
cmc
js
pop
bound
aas
cmp
lds
lds
pop
push
dec
rol
fistpll
in
mov
and
loop
inc
dec
stos
test
xchg
push
fistl
mov
pop
sbb
xor
repnz
test
bound
in
fcompl
and
ficompl
dec
mov
shll
enter
add
rep
adc
mov
cmpsb
lea
push
movsl
pusha
pop
xchg
cmc
jecxz
sub
in
add
jmp
inc
jmp
lret
sahf
adc
arpl
jl
andl
jg
push
sub
insb
popa
pop
clc
lahf
pop
xchg
mov
jl
dec
sbb
xchg
pop
mov
adc
mov
sbb
sahf
in
pop
add
jp
dec
jl
sbb
inc
xor
dec
jno
sbb
mov
aad
xchg
mov
push
push
aad
test
sbb
fcomi
cmpsb
ds
shlb
aam
jb
push
adcl
xor
adc
inc
mov
jbe
inc
or
push
fsub
les
js
int3
mov
xor
ret
pop
cmp
insb
repnz
inc
adc
enter
iret
andl
push
xor
xchg
lahf
das
lahf
imul
mov
dec
cltd
mov
push
mov
pushf
sub
es
ret
arpl
insb
repz
sbb
inc
adc
mov
mov
or
jnp
loop
pop
imul
fbstp
adc
aaa
pop
repz
fwait
lock
lds
push
pop
xchg
pcmpgtw
jno
lods
inc
mov
add
insl
mov
movsl
and
insb
in
into
pushl
rcl
leave
ljmp
mov
cld
lcall
fisubrs
aam
push
mov
pop
shll
ja
jge
out
mov
xchg
push
cmp
cmp
mov
icebp
aam
mov
xchg
mov
negl
cmp
sbb
or
andb
inc
add
sub
shlb
or
ret
and
push
sub
add
adc
pop
pop
int
and
daa
jecxz
ja
add
xchg
jb
adc
arpl
inc
adc
lods
xor
shlb
mov
xlat
loopne
dec
mov
ret
orl
pop
jmp
rorl
jnp
das
out
mov
faddl
popf
sub
xchg
mov
mov
push
or
mov
sub
fcoms
pop
in
pop
iret
daa
leave
cltd
mov
lret
fdivl
jne
shll
imul
pushf
push
insl
mov
adc
in
rolb
push
jge
rclb
mov
jp
out
in
pop
cmp
fsubs
mov
jo
sbb
jmp
push
mov
int
push
xor
in
test
adc
andb
mov
test
inc
pushf
out
pusha
enter
cltd
ss
xor
cltd
stos
xor
add
mov
xor
fs
ficoms
mov
mov
rol
add
out
sbb
jae
fmuls
decb
pop
decb
lods
mov
sub
shll
xor
push
dec
les
cmp
scas
movsl
push
mov
push
push
fwait
cmp
fsubrp
addr16
pusha
pop
inc
mov
mov
arpl
add
pop
stos
sub
dec
cld
and
jae
loope
daa
mov
push
and
mov
enter
and
jae
rorl
js
sbb
ja
pop
jmp
jbe
loope
es
lahf
push
inc
nop
cmpb
sahf
cmp
fs
or
dec
xchg
repz
jo
into
cmp
popa
loopne
push
cmc
inc
sbb
inc
lods
cmpsl
inc
sub
out
ljmp
in
cmpsb
idivl
mov
or
adc
mov
pop
and
fimull
or
or
xchg
call
jl
xor
push
mov
and
mov
push
shll
cmp
xchg
mov
rcrl
cmp
fsubrl
inc
jne
sub
lret
in
stc
lahf
adc
cwtl
mov
push
fidivl
sub
int
cmp
hlt
adc
inc
cmpb
ret
jecxz
sub
jge
jbe
int3
mov
dec
sti
addb
stc
xor
inc
xchg
cmp
and
xlat
js
outsb
mov
push
and
jns
lcall
cmovb
or
icebp
dec
sbb
fcomps
cmp
or
aas
ffree
push
and
mov
shrb
scas
mov
sub
in
cld
inc
filds
inc
mov
sbb
imul
cmpsb
and
sub
mov
lahf
out
sti
scas
mov
stc
icebp
test
lcall
jae
fsubrs
jo
jmp
push
jp
fists
ljmp
pop
inc
mov
in
clc
mov
pop
pop
or
std
and
stos
out
push
push
xor
push
jno
jmp
cli
aad
es
dec
mov
sti
push
xchg
xchg
jb
pop
lret
sbb
loope
mov
sbb
fucom
xor
movsb
lret
lcall
inc
cli
xchg
sub
inc
loope
push
out
mov
and
inc
or
into
adc
icebp
sbb
rclb
push
push
stos
in
jo
jae
in
mov
ret
add
cmc
push
popf
jecxz
mov
inc
adc
sbb
jae
shl
dec
mov
shrb
enter
sub
xor
adc
pop
mov
mov
icebp
out
aas
shrl
aaa
clc
xchg
arpl
repz
push
jns
pop
daa
pop
cld
stc
fwait
icebp
iret
xor
cmp
xor
jno
jae
inc
pop
outsb
push
jg
mov
cmpsl
ljmp
cmp
pop
inc
mov
scas
xchg
xor
jns
movsb
scas
push
push
popa
lods
cmp
jno
xor
sbb
xor
add
jge
imul
and
and
and
add
or
cmp
call
divl
repnz
mov
loopne
sub
out
add
les
movsl
in
imulb
nop
xchg
cmp
iret
xor
aaa
shll
gs
mov
xor
push
les
insb
mov
jle
je
lret
fldt
mov
or
pop
popf
and
insb
jns
xchg
sarl
cmpsl
js
lahf
repz
cmc
cltd
cltd
movsl
test
aam
std
cld
stos
adc
mov
inc
sbb
sub
dec
sbbl
call
pop
xchg
lret
mov
jecxz
sub
outsb
pop
adc
jo
pushf
aad
lds
test
scas
inc
push
mov
lcall
mov
xchg
cmp
stc
sbb
inc
push
xchg
cmp
rcr
fs
jl
clc
sub
xchg
push
pop
dec
loopne
out
jge
in
mov
addr16
mov
xchg
cmp
mov
rorl
fldcw
push
sbb
dec
les
or
pop
push
cld
mov
cmp
fstps
les
jns
stc
mov
js
pop
or
lret
gs
adc
mov
fnstenv
push
repnz
mov
or
xchg
movsl
and
scas
ret
lds
divl
mov
cmp
inc
scas
push
push
fmul
xchg
out
movsb
ficoml
add
fcmovnbe
add
fsubr
or
sbb
fdivrs
and
outsb
clc
loop
cmp
ja
pop
mov
pushf
ja
arpl
sub
out
pusha
adc
jb
jns
add
lret
push
repnz
fcomi
jl
test
in
pop
mov
mov
loope
mov
jmp
pop
mov
add
and
stos
xchg
mov
mov
push
loopne
out
add
xor
mov
sarb
out
out
mov
stos
insb
pop
adc
test
sahf
ljmp
push
or
jl
mov
std
lret
fcomi
jmp
sbb
jg
cli
in
les
cwtl
push
das
or
int
or
jle
idivl
data16
or
fists
cmp
rol
aas
fmuls
dec
jmp
aam
sarl
or
gs
fsubrs
leave
mov
push
mov
xor
pop
mov
dec
sub
cmpl
jmp
push
and
icebp
and
mov
xor
stos
adc
jecxz
ja
or
rcr
push
js
ret
mov
data16
dec
dec
pop
cmp
in
mov
cltd
inc
aas
adc
mov
pushf
jb
mov
idiv
mov
or
test
repnz
rcll
in
out
ljmp
push
cwtl
outsb
mov
push
sbb
add
flds
xchg
xchg
pop
xchg
sbb
cmp
inc
mov
inc
jnp
xchg
add
sub
fisttps
add
cmpb
or
cmp
push
xchg
fistl
dec
inc
dec
sbb
pop
in
lea
andl
enter
mov
sbb
popf
mov
pusha
adc
pop
insl
push
movsl
mov
pop
mov
pop
cs
mov
jo,pt
mov
dec
daa
inc
dec
stc
jge
fsubrl
dec
das
jecxz
inc
push
push
clc
lods
push
aaa
mov
pop
add
les
inc
inc
adc
aad
dec
jg
out
jno
xor
mov
xchg
sub
pusha
or
sahf
sub
fisubrl
mov
pop
sbb
lods
inc
cmp
hlt
jge
mov
fisttpl
scas
mov
jnp
pop
pop
xor
mov
fdivs
mov
adc
hlt
das
pop
xchg
js
and
ds
xchg
mov
fcoml
push
cltd
sub
std
mov
addr16
or
flds
faddl
hlt
mov
repnz
scas
push
fsts
inc
ret
daa
jno
aam
leave
stos
or
fisttpl
push
xchg
xor
xchg
sbb
xor
adc
dec
pop
je
insb
data16
mov
mov
dec
jl
mov
aas
sub
test
imul
jg
or
sub
cmp
mov
repz
fdivp
into
sbb
pop
lret
sbb
addl
push
jge
dec
outsb
test
sub
addr16
adcl
add
pop
mov
inc
pop
cwtl
inc
push
xchg
pop
das
sbb
xor
mov
cmpsb
icebp
enter
cmc
mov
ds
jmp
jno
mov
jb
jle
sti
xchg
jle
outsl
daa
xor
mov
bound
mov
lret
pushf
scas
mov
fdivs
push
pop
fcomp
sbb
cmp
sbb
push
leave
jnp
shr
test
fwait
push
cmpsb
mov
jge
aas
cmpsl
icebp
inc
pop
aam
out
sbbb
or
ret
icebp
pop
scas
out
loopne
push
pop
aam
cmpsb
dec
mov
fwait
xchg
jnp
jae
out
dec
lcall
add
lret
out
movsb
scas
sbb
repz
les
jnp
imul
jg
loop
mov
insb
pop
add
mov
xor
xor
popf
jae
daa
test
scas
push
push
mov
loopne
and
sub
mov
cmp
insl
push
xchg
and
jecxz
xor
out
test
and
mov
daa
jb
mov
int3
fisubrl
push
out
sbb
out
dec
add
mov
jecxz
mov
inc
adc
rcr
testb
loop
jmp
sub
xchg
xor
mov
xchg
push
ret
jnp
js
lret
inc
rclb
mov
dec
call
mov
adc
xchg
cli
lds
scas
cmp
inc
or
xor
adc
mov
popf
xchg
adcl
clc
xchg
dec
add
add
ja
dec
sub
push
dec
out
loopne
xchg
es
dec
mov
test
mov
pop
and
xor
mov
data16
sub
xchg
jmp
inc
xor
mov
ret
fsubrs
sub
mov
mov
push
test
pop
out
inc
popa
movsb
or
add
lods
test
mov
ja
inc
cmpl
cmp
pop
jnp
lahf
pop
lcall
stos
aas
dec
stos
adc
aad
cmp
inc
pop
shlb
sbbl
addr16
out
push
sarl
sub
or
lcall
ss
scas
popa
sti
cmpsb
out
lret
and
jl
mov
into
shrb
cmp
cli
xchg
loop
add
push
rcrl
cli
push
mov
bound
mov
xchg
rorb
pop
inc
aaa
lret
in
inc
xchg
mov
jne
in
push
outsb
std
mov
aad
xchg
not
jmp
sub
mov
xchg
mov
es
test
rclb
scas
mov
cmp
dec
mov
sbb
pop
jno
mov
int3
test
je
mov
cmp
ljmp
arpl
sarl
sub
ja
pminsw
fcmovu
mov
lods
int3
lods
jmp
pushf
mov
or
cmc
hlt
ret
dec
fldt
push
cmp
cmp
aas
dec
sub
ja
cmpsb
mov
xchg
cld
data16
test
adc
scas
xor
icebp
mov
inc
gs
adc
pushaw
or
sub
and
push
sbbl
xlat
aam
lods
scas
mov
pop
int
dec
scas
ds
imul
inc
in
jno
push
sbb
inc
js
mov
outsb
bound
xchg
inc
mov
mov
cmp
add
mov
sahf
push
aam
xchg
test
xor
cmpb
lahf
jns
mov
dec
sub
jb
scas
cltd
call
inc
and
mov
and
cmpb
int
xchg
cs
loopne
call
mov
cmp
in
std
sarb
fnstsw
pop
jmp
push
or
test
push
dec
jb
sub
xor
shll
sub
shr
in
jne
jne
cmp
inc
lret
jns
sbb
test
inc
roll
dec
aas
ja
mul
cmp
mov
mov
push
mov
outsl
pushf
lea
and
pop
fidivrl
mov
sub
mov
mov
in
sub
xchg
jb
dec
popa
into
xchg
mov
jbe
jge
push
out
mov
jl
cmp
into
jno
mov
aad
sub
xchg
es
mov
push
pop
xchg
fnsave
mov
cmp
data16
pop
mov
add
add
fwait
sub
mov
mov
cli
xor
xchg
xor
cld
mov
pop
add
xor
mov
xchg
push
jmp
add
and
add
inc
and
call
aad
add
das
lock
lret
cwtl
inc
test
scas
adc
lods
mov
rorl
pop
imull
cmc
jge
lcall
rcrl
arpl
push
jp
mov
sbb
push
jmp
mov
insb
jae
nop
mov
mov
inc
push
in
outsb
dec
pusha
or
pop
mov
out
push
adc
push
pop
add
je
mov
jae
pushf
mov
xor
iret
data16
xchg
pop
loopne
inc
push
jae
std
inc
pop
notl
adc
or
bound
jnp
push
scas
adc
je
out
mov
fwait
push
sbb
stos
push
cmp
cwtl
pop
jge
or
xchg
cmp
mov
lahf
nop
adc
pop
xchg
ret
and
out
loop
addl
divb
xor
ficomps
andl
or
lock
ja
das
and
xchg
sar
xchg
bound
subl
add
inc
pop
movsb
lds
js
movsb
pusha
outsl
andl
jle,pn
mov
scas
lret
lret
adc
adc
xchg
jecxz
ficomps
loopne
repz
std
out
add
pop
add
dec
dec
decb
pop
push
iret
xchg
fnsave
mov
mov
fs
mov
xlat
fwait
movsb
adc
aas
std
cmc
in
aas
or
inc
cs
out
mov
sbb
jne
cs
fsubrp
negl
pop
ljmp
push
mov
out
jae
push
sbb
mov
out
or
movsl
popa
jb
cs
fcomps
es
cltd
sub
enter
sub
jl
repz
jnp
mov
xchg
cmp
push
and
cmc
scas
xor
dec
push
mov
bound
decb
sub
lret
icebp
dec
loope
test
sahf
outsl
push
nop
arpl
repnz
jno
or
jno
test
mov
sub
xchg
jns
stos
xchg
and
push
out
aad
sbb
push
add
jle
adc
sub
adc
xor
jne
out
in
sub
movsb
push
lahf
inc
cmp
mov
ret
cmp
mov
dec
loopne
mov
mov
and
pusha
pop
mov
xlat
mov
adc
adc
std
sarl
scas
dec
mov
jae
pop
jbe
leave
mov
stos
adc
mov
inc
mov
or
test
out
xchg
pop
add
lret
arpl
repnz
lret
insl
mov
cltd
xchg
int3
loop
sbb
inc
pusha
lret
cmc
hlt
das
je
repnz
mov
out
jno
inc
mov
lar
adc
into
addr16
mov
out
xor
sbb
adc
lods
jmp
outsl
xor
stos
pop
addr16
xchg
hlt
in
bound
add
rcl
cmp
jle
loope
lcall
cmp
outsl
hlt
ja
or
mov
insl
mov
es
lea
and
jg
pusha
insl
xchg
imulb
cwtl
xchg
roll
pusha
dec
pop
and
repz
pop
ret
mov
xor
inc
mov
cltd
lods
sub
enterw
loope
cltd
cmp
shrb
fmull
cli
jns
ret
jle
push
mov
jns
add
push
movsl
mov
inc
sub
movsb
adc
and
or
pop
xchg
xor
mov
clc
xlat
repnz
jle
mov
andl
mov
xchg
push
in
into
enter
push
lret
pop
xchg
stc
dec
inc
xor
jnp
pop
fdivrs
cmp
mov
popa
mov
mov
pop
and
adc
mov
adc
sbb
out
inc
pop
and
jo
lcall
aas
or
shlb
andl
out
and
mov
xchg
aas
orb
rcrb
and
call
inc
pop
frstor
jg
ljmp
ret
and
jg
sbb
daa
xchg
imul
and
sar
loop
pop
dec
mov
push
out
jle
xchg
movsl
shll
xor
cli
xlat
out
xchg
cmp
orl
inc
pop
jbe
cs
icebp
inc
inc
insl
into
and
gs
push
mov
jns
cmpsb
mov
xchg
adc
movsb
mov
cmpsl
and
cmp
xor
movsb
xor
push
jecxz
mov
add
cli
and
push
call
adc
lret
cmc
pop
mov
inc
and
push
call
and
jp
fwait
repnz
stos
or
clc
mov
sbb
push
add
test
xchg
out
jg
mov
movsb
add
push
mov
fmuls
xor
cmp
fs
jbe,pt
mov
popf
jl
mov
sub
dec
or
cmp
fsubs
nop
adc
mov
pop
imul
push
sahf
and
lods
clc
cmp
ret
jnp
loopne
fadds
test
fld
xchg
shl
adc
or
adc
stos
mov
xor
arpl
add
jge
test
out
outsb
dec
inc
adc
and
imul
cld
sub
or
pop
jae
iret
lea
jb
lret
pusha
mov
sub
je
push
scas
sbb
xchg
xchg
cwtl
sub
cmpb
push
xchg
or
and
mov
dec
aad
rcrb
lods
mov
adcb
or
mov
rorl
mov
scas
inc
mov
rclb
cmp
fsubs
out
add
addr16
pusha
loopne
sbb
push
dec
imul
jbe
sti
push
gs
jge
jecxz
inc
and
out
mov
repnz
stos
fwait
add
out
add
jae
cmp
test
cmpsb
and
gs
sbb
cli
hlt
ja
mov
mov
rcll
aas
je
aaa
loop
mov
lret
repz
push
mov
std
je
xor
xor
jecxz
leave
or
das
cmp
imul
repz
inc
push
scas
lcall
add
sbb
mov
dec
xchg
xor
fisttps
fsubrl
out
jnp
leave
ret
hlt
imul
lods
nop
imul
js
das
inc
pop
mov
pop
inc
push
daa
cmp
mov
arpl
cmp
fiaddl
das
jae
movsb
mov
inc
or
mov
push
movsb
push
out
sbbl
loopne
ss
nop
push
add
repnz
mov
push
mov
ja
inc
sub
in
cmc
ret
cmpb
jg
inc
aaa
mov
push
cmp
jb
push
movsl
dec
pop
movsl
sbb
test
and
cmp
daa
sub
pop
cmp
movsb
mov
in
loope
mov
rcll
xchg
nop
aas
pushf
cmpsb
mov
stos
inc
int
outsb
stos
shl
push
int
std
stc
out
cmpb
adc
into
nop
scas
xlat
mov
xchg
das
loope
pop
ja
jmp
in
pusha
jg
out
mov
add
inc
fmull
mov
push
pusha
add
pop
scas
push
lods
mov
sub
mul
fwait
sbb
pop
push
dec
mov
and
mov
rorb
mov
push
jg
sub
mov
enter
and
int
dec
push
xlat
std
inc
imul
jecxz
push
popa
mov
sbb
inc
sub
jg
scas
xchg
rorb
test
in
jp
jmp
pop
add
sti
rcll
sahf
lods
aad
inc
sahf
sbb
jb
adc
flds
pusha
mov
outsl
fstpt
out
jnp
push
cmp
bound
fnstenv
inc
or
xor
test
out
inc
sbb
es
pop
push
pop
jae
adc
push
inc
push
fs
loopne
int3
adc
cli
pop
mov
mov
enter
inc
sbb
bound
xchg
mov
dec
xchg
mov
xchg
into
fsts
sti
inc
jb
push
aad
adc
inc
or
in
jg
enter
fwait
and
insl
push
sbb
sub
xor
lret
mov
add
jbe
cmp
and
decb
mov
in
ss
adc
cli
inc
jmp
push
jns
andb
cld
mov
add
cld
shll
shll
pusha
xchg
test
push
mov
dec
mov
xchg
mov
or
add
out
pushf
pop
mov
jp
xchg
jl
adc
add
repnz
xor
leave
fdivrl
in
addl
or
cwtl
push
or
adc
ret
test
inc
or
mov
out
cmpsb
xchg
push
push
jmp
mov
mov
rcll
repnz
push
stos
jg
imul
es
adc
mov
mov
and
mov
loopne
and
ja
mov
mov
and
int
adc
mov
setp
and
add
aad
inc
nop
adc
aam
or
lods
addr16
mov
sbb
xchg
imul
outsl
xor
jno
pop
xor
adc
in
sbb
inc
subl
or
je
pushf
js
push
or
push
xchg
add
aam
cltd
jnp
cmpsb
mov
or
add
pop
jl
and
or
std
fisttps
arpl
outsl
cmc
push
int3
fsubrs
clc
gs
repz
xchg
jp
ljmp
std
mov
sbb
das
inc
testl
cmpsl
push
sub
add
cs
dec
shlb
pop
sbb
mov
sub
jnp
pop
shrb
push
lret
arpl
push
dec
or
es
cmp
inc
jb
jp
push
popf
push
fisubrs
popa
push
mov
jecxz
cmp
pop
adc
add
fldt
in
sahf
int
cpuid
pop
shlb
inc
lret
rep
popf
and
mov
or
fs
bound
and
into
and
fdivs
jp
in
ficoms
xchg
adcb
mov
push
call
xchg
cmp
movsl
dec
and
mov
push
lret
imul
lock
into
mov
pop
cmpsl
mov
loopne
lret
sub
mov
cmp
pop
mov
mov
dec
cmpsb
inc
xor
outsl
mulb
pop
aaa
and
cmp
in
in
daa
fcompl
push
adc
and
in
push
es
cmp
sbb
lods
mov
xchg
mov
lock
xchg
xchg
sahf
fdivl
xchg
sub
cmp
mov
hlt
mov
scas
cmp
fbld
or
cmp
pop
mov
pushf
inc
dec
add
in
add
and
ds
gs
pop
repz
jae
std
or
nop
dec
pop
dec
xchg
std
mov
xor
push
out
daa
test
adc
xchg
ljmp
lahf
iret
xchg
in
std
xchg
pop
jmp
pop
adc
jbe
in
jle
mov
cmpsl
push
loopne
pop
push
mov
push
jne
mov
insb
in
mov
cld
mov
imul
and
cld
xor
mov
es
jmp
call
in
sub
cli
jbe
xor
into
hlt
push
push
and
jb
je
jno
add
jp
nop
fimuls
dec
adc
ss
xchg
xchg
mov
adc
cmpsl
fisttps
mov
jno
pop
rcr
or
pop
xor
in
mov
cs
fistps
sti
cmpsl
adc
push
rorb
ja
shrb
mov
push
icebp
ror
dec
addl
pop
push
test
inc
popf
or
adc
mov
add
mov
leave
xchg
iret
dec
daa
push
aas
mov
mov
sbb
aam
xor
xchg
mov
loop
dec
in
shrl
fs
and
sub
lret
lret
sbb
xchg
rclb
out
pop
aaa
push
dec
mov
leave
cmpsl
ret
and
mov
jae
sub
jnp
in
out
insl
and
imul
cmp
ljmp
sub
push
pop
call
popa
push
push
pop
ret
push
and
push
aaa
mov
add
xchg
push
push
xchg
addb
test
jnp
jo
adc
mov
sub
inc
mov
imul
pop
repz
add
sbb
pop
or
cltd
movsb
and
push
lods
mov
push
add
and
sbbl
adc
loope
cmpsl
popf
loop
inc
adc
mov
and
and
xchg
enter
sub
cld
xchg
sti
jmp
pop
addr16
out
jge
sub
adc
jmp
sar
ds
imul
scas
flds
mov
icebp
push
adc
or
jne
inc
dec
xor
adc
stos
mov
lds
test
out
jl
mov
jl
adc
adc
stc
inc
dec
jp
xchg
xchg
sub
test
mov
cmp
xlat
ja
mov
xchg
jne
inc
mov
adc
mov
into
mov
jg
insb
into
stos
dec
push
add
pop
cmp
sub
into
testl
mov
cwtl
leave
test
dec
ret
jo
sbb
out
adc
ss
std
cmovae
nop
jo
mov
xchg
inc
fcmovu
adc
inc
add
popf
divl
aaa
mov
lret
fs
pop
and
cmpsl
shlb
pop
mov
xor
push
dec
jb
lcall
mull
cmp
pushf
inc
mov
js
and
iret
dec
cmpsb
add
mov
and
jno
mov
jae
mov
ret
jge
popaw
outsb
dec
inc
enter
sub
dec
test
push
jo
sbb
movsl
in
stc
jbe
loope
leave
imul
push
icebp
sbb
sub
mov
dec
adc
imul
repnz
add
jbe
jae
dec
inc
lods
push
pusha
arpl
inc
and
ja
cmp
sbb
push
fidivrs
subl
cmp
jne
cmp
pop
add
sub
fldl
mov
dec
fadds
push
jle
dec
cli
pop
fnstcw
pop
push
hlt
fsubrs
test
stos
jle
inc
movsb
enter
inc
mov
stos
sub
lret
insb
sub
fisubl
shll
enter
cltd
sti
lods
inc
dec
xchg
add
and
aad
xchg
jl
pop
test
mov
xor
and
movsl
mov
pmaxsw
xchg
push
jb
leave
das
out
sti
fsubrs
pop
pop
cli
scas
ss
and
sahf
cltd
pop
pop
mov
jne
fs
and
cmp
imul
adc
jecxz
pop
and
test
jl
and
adcl
sbb
std
and
subb
pushf
mov
pop
sti
sahf
sbb
jno
out
data16
cmp
adc
mov
jne
push
div
sub
mov
lret
mov
int
xor
into
sub
bound
inc
jecxz
inc
pusha
call
cmc
in
ds
or
adc
add
xchg
cltd
int
cmp
ljmp
mov
push
jmp
mov
pop
sbb
sub
aad
leave
out
cmp
push
icebp
mov
cwtl
fcomp
int3
xchg
aaa
dec
or
jne
inc
fdivrs
push
int
mov
lods
xchg
add
add
mov
daa
or
jb
movsl
pop
data16
aam
add
ljmp
jae
call
sti
dec
aaa
push
xchg
push
mov
sti
pushf
cmpl
aad
and
jne
or
lret
les
push
xchg
andb
ljmp
imull
ds
jae
fcompl
mov
mov
mov
lods
imul
popf
mov
fsubr
insb
sbb
pushf
aad
adc
mov
stos
mov
out
int3
jecxz,pt
shll
sahf
inc
mov
cmp
push
cmc
in
push
inc
sub
pop
dec
outsb
aam
jb
mov
xchg
notl
stos
pop
das
add
cmp
mov
dec
dec
loop
pop
push
dec
repz
mov
xchg
out
pop
sub
orb
sub
test
pop
add
jnp
cld
rclb
sbb
ret
adc
pop
sbb
mov
inc
add
xor
loopne
ljmp
lods
rcr
les
lahf
icebp
mov
lcall
test
lods
push
fcompl
repnz
pop
pop
add
dec
lcall
jp
aas
test
lcall
xchg
mov
loope
xchg
in
jne
mov
jne
cmpsb
jg
test
adc
sub
xchg
mov
mov
in
repnz
movsb
dec
or
leave
push
movsb
add
stos
ljmp
pop
dec
or
cli
xor
jge
cs
lea
testl
and
cwtl
xlat
mov
repz
aas
jp
aaa
xor
push
ds
pop
or
mov
cmp
push
cmp
cli
jno
repz
or
jle
mov
rol
xor
or
jecxz
mov
push
mov
aas
jne
adc
mov
mov
sub
mov
push
loope
leave
adc
pop
stos
clc
fwait
xchg
data16
push
scas
in
and
enter
ja
loop
xlat
push
mov
pop
js
sar
cmp
lret
push
int
rcll
scas
inc
ja
lock
sbb
cmpsl
mov
cmp
clc
bound
ret
daa
push
inc
inc
push
sarb
call
out
into
mov
sub
lds
or
stc
pop
icebp
add
push
mov
stos
push
daa
xor
mov
add
or
repz
add
and
cmpsl
pop
ds
shll
ljmp
stos
shll
bound
fldt
sub
pusha
lods
dec
jge
int
in
xchg
leave
fs
loop
and
ret
inc
and
inc
fadds
mov
mov
cmp
int
ficoml
out
or
jae
cmpsb
hlt
mov
adc
adc
inc
push
addr16
shlb
jo
jmp
or
in
dec
in
cmpsl
push
sahf
ds
aaa
arpl
and
inc
or
popa
inc
cmp
int
in
fildl
sbb
add
call
adc
push
lods
es
test
fldt
jl
pop
call
testl
mov
popa
xchg
or
xchg
xchg
mulb
lods
push
lret
les
popa
sub
imul
mov
repz
mov
ss
cmp
xchg
sbb
cmp
xchg
or
outsl
push
dec
pop
out
lret
mov
enter
xlat
lock
test
pop
lcall
dec
call
cmp
ret
pop
sub
int
std
ucomiss
push
popa
cmpsb
ficoml
test
mov
adc
int3
in
xor
aad
xor
pop
push
or
daa
dec
in
in
sbb
cmpsl
cmp
add
fcomip
pop
and
inc
sbbb
sub
out
cltd
sbb
stos
xor
add
in
cmc
rcrl
je
out
adc
xchg
addr16
xchg
bound
mov
adc
mov
imul
ret
sahf
nop
loop
repnz
sub
pop
mov
mov
js
cmc
xchg
sub
lock
sbb
push
sub
loop
nop
push
out
mov
mov
lock
push
jmp
shlb
push
sbb
inc
xor
xor
push
dec
dec
xor
nop
xor
sbb
lret
enter
shrb
xchg
sbb
jbe
fstpt
pop
sahf
insl
adc
inc
lea
dec
iret
xchg
bound
mov
movsl
cmc
dec
das
mov
jb
into
insb
leave
cld
test
jp
testb
jbe
mov
add
aaa
outsb
mov
jne
subb
std
pop
add
sbb
inc
aas
mov
out
xchg
jg
mov
or
ret
lcall
ja
pop
push
jg
loop
inc
add
rcll
scas
mov
ljmp
xchg
mov
sub
scas
inc
inc
push
or
ret
aam
xor
adc
imul
bound
les
stc
insl
adc
test
push
arpl
jl
jbe
cmp
adc
pop
push
inc
mov
mov
xor
aas
test
leave
dec
bswap
or
add
sbb
adc
inc
movsb
jl
and
mov
in
cs
or
outsl
orb
fidivs
mov
adc
aad
mov
dec
mov
xchg
cmp
mov
jno
xor
sub
cmp
rorl
lcall
jo
fistpll
mov
pop
aam
cmpl
jle
or
in
mov
sbb
and
cmp
and
cmp
out
add
mov
ret
nop
aas
xlat
xor
pusha
popa
pop
mov
sbb
add
sub
inc
jl
pop
in
aam
cld
mov
sbb
jmp
jno
jmp
std
cmpsb
sbb
outsl
mov
shrb
add
out
fildll
xor
dec
sub
pop
push
push
out
shlb
cmp
lds
shl
fsts
adc
push
je
cli
popa
subl
or
mov
push
test
lock
stos
enter
jbe
mov
dec
jle
imul
out
sti
bound
loop
es
ss
add
pop
testb
jbe
out
movsb
add
mov
jns
ficoml
daa
cmp
or
call
add
mov
fsts
movsl
sbb
je
mov
idiv
out
dec
push
sbb
add
pop
add
sub
jmp
mov
dec
add
shlb
xor
jecxz
call
fsubrs
adc
push
sub
leave
iret
push
clc
es
inc
test
jb
lahf
fcomp
shlb
test
cmp
loope
push
cmpsl
pop
cmp
mov
outsl
mov
test
mov
mov
lock
mov
sub
jno
test
xor
enter
and
adc
into
mov
cld
flds
push
xor
mov
push
mov
das
addb
shll
ret
mov
xchg
pop
repz
test
je
lea
out
pop
in
push
arpl
stos
inc
mov
inc
flds
mov
pop
pop
aaa
imul
cmp
cmpsl
in
movsb
ret
push
pop
sti
test
enter
mov
inc
movsl
addr16
mov
xor
mov
inc
mov
lea
enter
push
aas
sbb
out
out
mov
dec
aad
xor
xor
add
pop
arpl
or
cmp
mov
popf
sub
les
lret
sbb
add
mov
jle
pop
pop
stc
ss
xchg
mov
ljmp
xchg
adc
xor
sub
adc
xchg
insb
ja
out
dec
and
mov
push
jns
scas
cmp
xor
or
mov
dec
int
mov
mov
push
fucomp
dec
nop
test
xchg
add
mov
sahf
push
dec
rcrl
dec
dec
int
add
jns
dec
andl
in
inc
add
je
jl
adc
and
or
add
push
subl
push
inc
iret
pop
and
insb
imul
and
les
xor
sbb
lret
stc
cmp
sbb
fsts
js
inc
cld
or
xchg
jae
xor
xchg
movsl
and
jno
mov
or
mov
or
jb
push
fstps
dec
lock
insl
lret
data16
les
sbb
sub
aad
push
xchg
out
pop
movsl
fstl
mov
fstpl
fwait
xchg
nop
stos
cld
and
mov
fs
cld
mov
jb
add
push
cmp
mov
add
repz
push
mov
jae
in
sub
fdivrs
lcall
imul
jae
sub
movsl
cmp
stos
xchg
cmp
scas
or
dec
xor
inc
xchg
jbe
std
lret
inc
adcl
inc
cmp
ret
movsl
jo
imul
inc
sbb
out
and
enter
cmp
fstps
sbb
inc
sub
rcr
loope
push
push
add
and
negl
jle
push
pusha
mov
sbb
jl
addr16
pop
jae
popf
sub
and
lock
xor
or
mov
pushl
xor
fimull
mov
jnp
adc
loop
dec
xchg
aas
nop
add
decl
out
hlt
jnp
jmp
and
jno,pt
dec
cli
data16
dec
cmp
pop
cmc
jb
aaa
les
pushf
jecxz
sub
add
jae
cmpsb
cmp
fdivrl
push
cmc
fucomi
fs
mov
jns
fwait
ds
cmc
lods
mov
mov
xchg
lods
fisubrl
xchg
fwait
push
add
xchg
call
cmp
push
gs
xor
mov
jl
sub
push
or
xor
fcmovnu
cmpsl
pop
add
ja
pop
jle
sub
test
pop
rol
fsubl
lods
pop
gs
dec
imul
lret
out
cmc
cmpsb
inc
xor
push
inc
mov
cmpsl
shrb
aam
inc
cs
push
push
mov
mov
popa
fwait
or
sar
loopne
cld
leave
bound
mov
inc
sub
ret
cwtl
repnz
rcl
ret
filds
and
mov
mov
xor
cmpsl
xchg
cwtl
adc
fists
scas
lret
adc
aad
cmp
push
inc
in
movsb
push
xor
adc
in
pop
bound
lret
subl
lods
out
and
mov
data16
ret
fwait
xchg
in
inc
inc
jno
das
adc
out
cmp
loop
and
test
hlt
mov
pop
mov
push
pop
imul
xor
inc
outsl
mov
cs
inc
sbb
hlt
inc
stc
cmpl
dec
outsb
pushf
loope
mov
pushl
or
sbb
movsb
sub
inc
mov
in
inc
mov
pop
jne
ss
mov
rol
dec
vunpcklps
sbb
aaa
xchg
cmpsl
add
add
push
fwait
sub
subl
int3
sub
shll
scas
aaa
jnp
and
mov
adc
sub
inc
fdivl
fwait
xor
test
pop
or
add
cmpb
sub
rcrl
pop
push
data16
or
mov
or
inc
jnp
or
loope
inc
addl
das
les
sbb
out
add
movsb
flds
test
cmpsl
cmpsb
aas
popf
lret
test
or
sub
inc
pushf
xor
push
xchg
ja
push
xchg
fwait
std
mov
add
sub
insl
cltd
mov
mov
mov
mov
ret
in
mov
cmc
xor
gs
pop
jo
adc
adc
lods
fwait
rcll
addr16
pop
xchg
xchg
rclb
out
rorl
cmc
test
in
inc
mov
and
out
mov
sahf
sub
cmp
push
icebp
int
fcmove
in
ficoml
sbb
aas
pop
or
cmc
xchg
cld
sub
aad
sub
rcll
hlt
add
enter
push
jnp
rcll
mov
dec
dec
adc
lock
push
and
cmovb
in
or
sub
push
lods
xor
int
pop
or
cltd
outsl
mov
adc
loopne
call
pop
inc
xor
cli
popa
cmp
dec
mov
sub
xlat
mov
arpl
mov
ret
and
cli
lods
push
movsb
sub
xlat
adc
mov
cltd
mov
dec
push
adc
add
negl
mov
sbb
shrb
into
push
and
sub
pop
daa
xchg
std
add
int
bound
push
out
lods
inc
test
mov
inc
rorl
push
int3
popa
pop
ret
sub
jbe
cmp
rorb
jle
dec
js
fwait
pop
mov
mov
sbb
mov
inc
add
xor
mov
add
add
cltd
and
lods
xor
mov
mov
push
loopne
sahf
inc
bound
xchg
or
dec
ds
push
clc
repz
mov
imulb
fwait
mov
lods
mov
inc
ss
sbb
popa
mov
movb
arpl
add
repz
ljmp
popa
sbb
pop
inc
cmpsb
ds
lcall
lret
or
lds
outsl
push
jle,pn
jne
decb
mov
clc
lea
adc
xor
loope
jnp
dec
and
add
int3
inc
jmp
dec
sahf
js
xor
adcb
stos
cld
cmp
addr16
xor
dec
andl
add
scas
ds
push
ljmp
shl
cmpl
adc
sub
jne
test
mov
fldenv
andb
lods
cwtl
inc
xchg
ds
mov
aas
aas
stc
fld
cwtl
shll
xchg
arpl
mov
mov
mov
mov
fdivs
jno
addl
push
mov
and
test
cwtl
and
jg
xchg
in
mov
orb
sub
jo
jno
xor
stc
adc
nop
add
cltd
in
les
movsb
dec
mov
xchg
notb
data16
int3
cmp
mov
dec
rclb
push
es
pop
push
push
adc
lds
jmp
inc
or
add
xor
inc
aaa
fisttpl
ds
push
push
dec
stc
aaa
cmp
cmp
jecxz
jae
mov
daa
int3
jecxz
sbb
and
sbb
adc
sbb
js
add
mov
repnz
pop
adc
inc
adc
test
int
add
or
in
jle
inc
lods
mov
fs
and
mov
out
movsl
mov
daa
jg
aaa
mov
aaa
shll
push
outsl
hlt
mov
lock
pop
jmp
push
adc
adc
pop
lods
add
push
ds
mov
addb
orb
inc
dec
fmull
lcall
adc
lods
inc
dec
out
outsb
flds
outsb
lret
shlb
into
jecxz
sub
adc
shrb
xor
pushf
mov
adc
or
lods
mov
jne
add
mov
inc
pop
cmp
popf
cmpsl
mov
in
ret
insb
adc
test
outsl
subl
das
sbb
mov
or
enter
pop
neg
xor
in
xchg
xor
cmp
or
mov
and
movsl
push
mov
cmp
add
andl
mov
inc
outsl
enter
cmp
pop
dec
movsl
pop
mov
cmp
push
in
movsb
sbb
stos
inc
sub
inc
add
outsl
negl
cli
ret
arpl
out
xchg
dec
test
or
fmul
lea
int3
test
lret
jecxz
xchg
jb
ret
sub
push
xchg
push
adc
out
jns
mov
clc
outsb
mov
dec
push
movsb
adc
adc
stos
lods
loop
lret
imul
sti
dec
push
push
pop
in
jmp
imul
lds
pop
cmp
push
sub
imul
mov
fsts
je
cwtl
cmp
or
xor
iret
ss
mov
jae
rcrb
cmpsl
test
jg
cmp
ret
outsl
clc
cld
shrb
sti
lock
movsl
out
sub
lret
stc
mov
cmp
shlb
xchg
sub
inc
jo
mov
fs
mov
jne
cmpl
int3
sarl
imul
inc
and
xchg
imul
add
test
femms
dec
adcl
lret
or
movsl
std
jae
aad
fimuls
lods
sub
data16
cld
incl
or
fsubl
int3
lods
sub
push
jnp
mov
mov
decb
xchg
stos
pusha
out
idivl
rcrb
fstps
ficoml
adc
aas
popf
mov
fisttps
cs
pop
les
jp
out
mov
test
fisubl
dec
faddp
dec
jecxz
or
cltd
fnstenv
push
lret
jge
popa
or
fcomps
cwtl
jecxz
jl
outsl
imul
cmp
xor
nop
call
add
pop
arpl
mov
leave
xor
mov
out
jmp
fiadds
lret
fcoml
cmp
test
cmpsb
mov
mov
fs
dec
sbb
pop
clc
sub
sbbl
inc
pop
mov
add
int
cmp
xchg
mov
cwtl
mov
sub
mov
cmp
sbb
or
pop
shrl
aaa
movsl
adc
jo
adc
popf
aaa
out
mov
iret
mov
loop
push
pusha
insl
add
ret
jo
dec
jno
mov
daa
adc
roll
jecxz
push
or
fstpt
cli
sbb
stc
dec
xchg
ljmp
jb
fnstcw
add
pop
hlt
push
jbe
sbb
int3
sub
scas
sbb
lcall
popa
lock
sbb
inc
jbe
cmp
ljmp
xor
cli
iret
int3
add
and
jmp
pushf
and
mov
ret
shll
cwtl
jle
mov
add
jo
outsb
xor
jb
adc
sbb
sub
pop
sub
cmp
mov
push
jns
inc
sub
outsl
scas
fisubl
in
ljmp
leave
dec
dec
push
addb
out
dec
mov
mov
xor
and
mov
mov
adc
lret
loopne
insb
test
dec
push
push
xor
mov
pop
test
outsl
jl
test
dec
sbb
jecxz
push
das
add
push
in
pop
into
mov
int3
sbb
cmp
out
pop
ret
dec
dec
or
lret
mov
dec
roll
popf
adc
dec
jae
lods
out
inc
mov
es
and
movsl
pop
icebp
cmp
xchg
sub
cmp
gs
fldcw
testl
arpl
pop
cmp
mov
xchg
arpl
or
jecxz
pop
adc
gs
jle
int
jge
push
jp
fstps
jns
subl
cmpb
fnstcw
pop
lahf
add
andl
mov
cmpsb
cmp
hlt
add
pop
in
daa
scas
sbb
add
jno
mov
xor
loop
test
shrb
in
das
pop
or
int
cmp
loopne
adc
jmp
stc
in
mov
push
xor
leave
push
lods
xor
fs
adc
push
hlt
bound
insl
outsb
xchg
xlat
add
and
push
jge
cmpb
inc
adc
or
cmp
clc
xchg
jmp
xchg
mov
jmp
fcmovnb
and
xorl
or
lahf
and
mov
jecxz
ret
jns
test
arpl
or
jo
data16
inc
test
mov
lods
nop
jb
or
loopne
ss
rol
and
sbb
aas
and
jb
pop
mulb
inc
gs
mov
xchg
or
pop
incl
jl
dec
neg
pusha
fwait
pop
mulb
sub
frstor
xor
jg
int3
lock
ret
adc
lods
incb
loop
insb
popa
fildll
mov
rorb
and
dec
addl
imul
mov
mov
mov
data16
test
jnp
mov
mov
enter
aas
sarl
cwtl
jge
sbb
pop
mov
gs
scas
sbb
aaa
leave
sbb
xchg
inc
push
push
cmp
ret
jae
or
pop
or
mov
and
js
push
lds
xorl
aaa
pop
cmpsb
cmp
enter
arpl
stos
pop
sbb
data16
sbb
shlb
pop
lock
mov
into
andl
mov
outsl
mov
pop
and
shlb
repz
add
into
faddl
cld
mov
not
pop
loope
fstl
mov
sub
popf
es
ss
xchg
incb
jne
pushf
or
fnstcw
mov
mov
mov
out
mov
js
add
ss
roll
jns
test
push
cltd
ds
sub
mov
mov
push
pushf
mov
xchg
push
loopne
outsb
xchg
sbb
pop
vunpcklpd
repz
inc
lcall
es
test
sub
fcmovnu
and
cmp
mov
mov
int3
xchg
jb
push
lret
xchg
jle
dec
dec
loop
es
jge
and
outsb
lock
adc
lcall
push
mov
push
cmpsl
pop
jo
jmp
cmp
push
sub
mov
xchg
mov
push
jo
and
mov
push
pop
ljmp
push
bound
mov
stos
inc
movb
gs
adc
fs
leave
jmp
mov
je
inc
jge
dec
or
scas
out
jle
stos
imul
xchg
xor
mov
into
push
insb
int3
jne
fisubl
lods
pop
add
pop
jbe
int
mov
shrl
push
or
out
rorb
repz
and
cmp
repnz
push
arpl
mov
aad
sub
loop
insl
or
mov
xor
js
xchg
out
jecxz
jne
jecxz
push
dec
xchg
stc
lret
movsb
fstl
mov
fwait
outsb
stc
lock
enter
mov
jl
out
xor
insb
xchg
lods
and
cmp
pop
mov
inc
popf
and
fwait
aad
inc
popf
dec
les
sbb
mov
imul
cmp
call
xchg
int
jmp
mov
cwtl
dec
in
enter
adc
mov
movsb
cwtl
and
mov
inc
sbb
inc
mov
je
push
inc
mov
sub
iret
addl
or
sahf
rorl
aad
fcomip
lds
mov
pop
orb
shll
popf
xor
movsl
or
jg
repnz
mov
repnz
sbb
pop
and
cli
test
sub
dec
sbb
mov
ret
push
aaa
and
js
stos
ljmp
xchg
movb
outsl
mov
sbb
insb
lods
jle
ds
xchg
xchg
jb
mov
pop
fcompp
scas
xchg
sub
mov
inc
push
or
loopne
dec
js
jb
jno
fistpl
dec
cmp
movsb
loopne
mov
mov
sub
or
add
pop
loopne
stos
lds
lock
xor
mov
cmp
cs
adc
jns
inc
lcall
mov
jmp
loope
idivb
imul
push
cmp
inc
leave
shr
fcoms
mov
jl
push
sbb
mov
adc
sub
add
sub
xchg
mov
mov
jecxz
pop
cs
sti
pop
and
sub
xchg
dec
test
dec
ja
fadds
out
cmp
pop
sub
jbe
jle
sarl
jg
add
js
inc
xchg
je
push
js
arpl
jne
lahf
jmp
mov
outsb
imul
loopne
lcall
add
inc
and
shll
push
jb
sbb
push
or
call
into
or
rorb
push
mov
sbb
test
fdivrl
stc
cmp
pop
sbb
stos
inc
mov
cmp
hlt
xchg
jl
cmp
rclb
cmp
andw
imul
in
mov
leave
shrl
in
mov
jo
add
xchg
inc
mov
pushf
ss
lcall
lods
fldcw
inc
cmp
xor
loop
push
icebp
stos
stos
out
adc
xor
fcoms
bound
adc
cwtl
stos
jno
idivb
and
adcl
lods
adc
dec
mov
dec
scas
lods
dec
and
out
int3
aad
mov
and
in
pop
add
jl
sbb
and
lret
push
or
movsl
or
sub
mov
sbb
mov
pop
enter
and
cmp
adc
popf
std
pop
test
or
mov
sub
enter
push
ret
pop
push
xchg
scas
lahf
xchg
push
inc
stos
sub
lds
and
clc
xchg
jg
ror
push
mov
je
enter
xchg
das
jl
sbb
sbbb
shl
dec
testb
add
jle
popf
shrb
nop
outsl
pop
out
pop
sub
fcomip
out
sahf
cmpsb
sub
mov
stos
movsl
stos
mov
lahf
negb
jo
or
cmp
sbb
jb
cmpsb
pop
stos
jmp
loope
mov
push
mov
lea
sbb
test
data16
mov
dec
lds
sub
xor
mov
mov
mov
inc
push
inc
ljmp
aaa
sti
xchg
in
adc
cmova
inc
out
xchg
lods
push
mov
dec
xchg
adc
cmp
cmpb
xor
xchg
pop
aas
icebp
adc
xor
mov
sbb
cmp
push
aad
cmp
and
ljmp
add
pop
add
scas
arpl
jae
pop
push
mov
or
cwtl
mov
mov
in
inc
push
cwtl
push
and
out
add
add
pushf
xchg
add
add
lods
and
cli
out
mov
push
dec
dec
jns
pop
clc
fimuls
ret
jmp
std
mov
or
fwait
xlat
xchg
mov
shrb
nop
fistpl
fadd
pop
ret
fcoml
adc
je
mov
mov
mov
push
xchg
or
jmp
and
push
and
in
addb
inc
cmp
push
jmp
es
leave
jno
scas
mov
insb
sbb
mov
ja
out
jbe
nop
in
mov
inc
xlat
fcompl
test
cmpsl
rol
or
sub
dec
adcl
test
mov
inc
notb
lds
mov
xor
pop
sub
shlb
and
push
xchg
cmc
and
test
jmp
dec
mov
and
addr16
cmp
jle
mov
or
inc
and
add
pusha
inc
inc
jmp
pop
out
aaa
adc
cmp
fdivrp
sbb
cmpsb
xchg
insl
negl
scas
cmc
xchg
or
clc
outsb
adc
jl
imul
adc
xor
out
loopne
out
add
mov
icebp
dec
mov
mov
scas
leave
dec
shll
js
dec
adc
and
movsb
dec
mov
test
or
int
mov
xchg
dec
movsl
popl
adc
clc
sub
adc
cld
pop
mov
push
daa
int
scas
mov
jmp
mov
imul
leave
aaa
xchg
cmpsl
push
jae
mov
push
or
push
dec
sbb
xchg
xor
jne
in
dec
pushf
sbb
lea
fldenv
push
decl
jae
outsb
adc
pop
push
popa
lcall
daa
rolb
adc
rcrl
mov
mov
dec
movsb
push
ss
sbb
ss
sbb
mov
push
xchg
out
adc
bound
jge
aas
xor
push
xor
cltd
push
pop
sahf
test
adc
xor
insl
icebp
dec
cmc
sahf
jne
ljmp
and
add
scas
inc
and
fisttps
mov
fisttpll
outsb
mov
cmp
mov
push
mov
test
sub
adcl
cmpsl
pop
iret
in
pop
outsb
sbb
add
adc
fldt
jecxz
jg
cmp
cltd
add
aas
mov
outsb
and
lds
cmp
adc
jbe
mov
filds
or
mov
aaa
jl
andb
scas
int3
fimuls
inc
in
lahf
fidivl
shlb
push
jecxz
cmp
nop
mov
sbb
arpl
mov
sub
int
out
popf
into
aad
jae
lock
xchg
les
and
shlb
shlb
xchg
icebp
cmp
faddp
add
ljmp
pop
lock
jl
jmp
sbb
xorb
mov
inc
sub
icebp
ret
xor
xor
aad
hlt
adc
push
sarl
mov
cmpsb
cmp
popf
cltd
mov
sti
out
push
shl
add
push
push
mov
scas
repnz
lret
dec
popf
or
dec
pop
icebp
testb
push
cmp
sub
js
ja
mov
enter
push
jmp
iret
mov
ffree
in
ficomps
pop
ficomps
inc
cmpsb
leave
mov
call
sub
fistl
call
and
and
call
push
xor
out
sahf
stos
sbb
sub
out
push
or
cli
ffree
add
push
outsb
jp
dec
fwait
cmp
lods
ljmp
dec
dec
xor
mov
push
daa
add
imul
into
fcmovne
addr16
pop
dec
cltd
sbb
mov
push
addr16
loope
jl
sub
mov
daa
cmp
mov
cmpsl
lock
dec
mov
xchg
popf
push
andb
ret
mov
aaa
jge
ret
movsb
mov
pop
fs
sbb
loopne
fs
pop
mov
and
lods
and
cmp
jp
mov
jb
jecxz
clc
xchg
push
fiadds
adc
repz
les
repnz
and
test
stos
jp
and
ljmp
data16
daa
pusha
and
cmp
cmp
adc
insb
push
btc
jle
rolb
mov
push
inc
ss
sbb
nop
arpl
push
test
sbb
and
jg
rcrl
pop
push
gs
push
loope
arpl
cmp
aas
out
and
push
or
fs
and
movsb
nop
jmp
jl
xor
push
sti
scas
das
int
dec
cwtl
mov
shll
cld
adc
push
loopne
leave
int3
jno
stc
ret
add
pop
cmp
inc
rorb
test
into
xchg
sub
outsb
in
fmuls
cmpl
mov
int
sbb
stos
jle
popl
xchg
insl
movsl
pop
sahf
jecxz
jnp
les
mov
or
mov
decl
jp
mov
movsb
fisubrl
lds
jbe
jle
mov
dec
and
xor
push
mov
push
pushf
inc
cmp
inc
movsl
adc
jno
mov
push
icebp
rolb
hlt
ds
pop
jbe
or
cmp
ss
orb
enter
mov
mov
out
jg
inc
nop
sarb
xchg
adc
push
in
pop
stos
out
loope
dec
xor
in
adc
in
pop
push
pop
fwait
or
xchg
jns
mov
push
outsl
call
push
jg
mov
idivb
daa
sahf
aam
fbld
pop
cli
add
insl
jns
dec
pop
sbb
daa
jl
xor
pop
imul
mov
jne
mov
push
and
mov
cmpsl
dec
sbb
mov
aam
xchg
xor
mov
sbb
sub
mov
icebp
pop
mov
lcall
mov
decb
out
imul
fdivs
inc
sahf
push
stos
cwtl
arpl
inc
scas
test
notl
insl
cmp
dec
xchg
outsb
inc
sub
pushf
lods
es
jmp
loop
roll
fs
push
insb
les
mov
shr
mov
enter
and
das
into
out
ret
scas
movsl
xchg
add
mov
outsb
jecxz
push
mov
or
mov
fistpl
mov
fs
out
add
aaa
add
in
stos
inc
repnz
mov
call
call
loop
in
fcoms
pop
pop
pop
pop
notb
xor
fs
popa
and
jp
dec
xlat
loopne
out
xchg
lods
sub
push
repnz
inc
lea
pushf
movsb
add
mov
call
cmpsb
enter
incl
inc
pop
test
mov
loopne
mov
xor
jecxz
adc
cltd
scas
iret
xor
mov
sub
inc
arpl
rcrl
cmpsl
lock
push
or
ret
insl
mov
shrb
loop
pop
ljmp
xchg
cmp
mov
pop
enter
roll
push
sub
cwtl
dec
pop
sub
test
dec
jmp
adc
ret
fists
dec
repnz
cmp
mov
cwtl
setbe
ljmp
cmpsb
test
jle
mov
xchg
jae
push
jge
inc
pusha
dec
mov
je
in
cmp
sub
jb
shll
inc
data16
xor
mov
add
pop
or
add
add
or
jne
jmp
jmp
mov
outsl
pop
and
scas
popf
call
or
fdivl
pop
xor
add
jnp
xchg
adc
add
popf
testl
stos
push
popf
insl
lock
push
push
mov
mov
mov
daa
ljmp
mov
cmc
jae
sbb
or
adc
sub
or
decl
adc
mov
sbbl
sub
out
xor
mov
dec
inc
lods
ja
fsubrl
cmc
inc
mov
or
dec
and
ret
in
stc
pop
mov
jge
lcall
xlat
and
or
add
push
gs
sub
jge
mov
jns
aas
pop
push
push
sbb
inc
fcmovb
mov
out
icebp
inc
mov
stc
icebp
call
aaa
negb
shrb
pop
sbbb
jmp
mov
repnz
add
popf
dec
dec
dec
sahf
sti
mov
stos
lods
mov
das
lret
sub
daa
cwtl
sbbb
data16
cmp
xlat
test
lods
xlat
call
scas
mov
jno
jmp
push
xchg
les
ret
aas
fisubrs
out
jae
and
pop
mov
repnz
push
jnp
xchg
pop
lods
and
cmp
repz
sub
cmp
and
sub
cmovae
movsb
mov
mov
lret
out
lret
inc
sub
xorb
das
aad
and
xor
fwait
sub
add
push
lcall
sbb
in
aad
js
mov
popa
call
or
repz
adc
pop
pusha
insb
cmp
dec
cmpsb
and
jb
jnp
jne
jae
cld
mov
adc
mov
repz
ljmp
popa
mov
imul
repz
test
push
movl
pusha
jno
adc
mov
fsubs
mov
subb
add
dec
int3
push
leave
ret
ficoms
pop
shr
or
xchg
push
in
adc
cmpl
mov
sub
adc
lods
push
lea
test
xor
cmp
sahf
jg
xchg
sub
mov
lods
sbb
inc
adc
adcl
dec
outsl
adc
mov
fidivs
pop
les
lahf
jno
jg
test
and
sarb
out
xchg
mov
out
jecxz
in
dec
cmp
jo
outsl
xor
lea
pop
inc
arpl
ret
dec
xchg
sbb
sbb
inc
push
or
daa
stos
pop
pop
xchg
xor
xor
fsubp
sub
xor
sbb
cltd
cmp
subb
out
repnz
xor
and
cmp
int
jl
xor
lea
aam
mov
add
mov
fisttps
scas
sbb
xchg
mov
xor
xchg
push
mov
add
inc
bound
out
imul
imul
js
call
pop
push
std
mov
push
lcall
xor
cmpsl
mov
mov
js
int
mov
dec
insl
add
cmpxchg8b
xor
test
mov
ss
js
push
shrb
out
lods
std
les
icebp
call
fsts
mov
adc
dec
cmpsl
int3
xor
sbb
mov
into
push
add
hlt
jb
mov
fbstp
int3
jnp
enter
jl
push
out
xlat
cmp
add
repnz
loopne
add
sub
nop
sub
cmc
mov
mov
jecxz
mov
xchg
mov
sub
jl
mov
aas
dec
push
sub
sbb
sbb
xchg
scas
and
pushf
lret
rcr
js
xchg
dec
aas
add
out
dec
push
sbb
imul
imul
sahf
arpl
rcrb
stc
icebp
ja
pop
push
adc
add
add
add
mov
cmp
or
inc
mov
lret
xchg
xchg
xchg
cmp
jmp
adc
stos
imul
in
out
adc
mov
ljmp
es
inc
mov
mov
rcrl
jo
push
rorb
sarb
cmpsl
sub
out
roll
xor
sbb
fmuls
adc
mov
daa
push
sbb
dec
std
lahf
xchg
fs
mov
mov
jbe
out
and
or
jo
xchg
dec
lret
xchg
enter
add
aaa
sbb
out
push
pop
adc
dec
sbb
push
mov
dec
fcmovnbe
xchg
sbb
xor
jmp
xor
call
sub
out
mov
push
mov
test
jle
mov
push
cmp
add
int
ret
jmp
or
test
adc
into
shr
fimuls
je
xchg
dec
lahf
mov
push
sbb
outsl
cmc
and
or
xor
mov
mov
int
sbb
lcall
mull
pop
movsb
shlb
pop
mov
clc
adc
sbb
push
test
fisubl
dec
inc
push
dec
lret
adc
mov
lcall
add
sub
jecxz
fsubl
pop
aad
mov
push
scas
bound
inc
test
popf
push
or
decl
arpl
insl
jb
push
imul
adc
dec
aaa
pop
clc
imul
mov
in
lds
jge
cmp
test
inc
xchg
orl
out
adc
inc
xorb
leave
xchg
repnz
ret
pop
and
sub
test
mov
sub
sbb
inc
sub
leave
cmc
jecxz
rcll
jae
pusha
inc
shlb
or
pop
push
xor
add
in
iret
fwait
rcrl
jl
mov
adc
mov
lock
shll
iret
sub
jbe
and
and
mov
in
out
xchg
mov
ss
cltd
xchg
mov
pop
push
jl
mov
dec
xchg
mov
mov
pop
push
xchg
sbb
mov
sbb
insb
push
pop
adc
xor
out
mov
mov
push
mov
add
adc
mov
shl
lahf
xchg
inc
sbb
inc
xchg
fwait
xlat
mov
add
pop
push
mov
xchg
int3
in
dec
xchg
popf
sub
mov
fcmovnbe
jb
out
sbb
repz
cli
add
loop
jmp
fisubrs
ret
xchg
sub
cmpsl
mov
movsb
test
cltd
dec
test
or
stc
xchg
or
dec
cli
sbb
notb
sarl
dec
cmp
sbb
xor
cld
mov
cmp
outsb
std
movsb
pop
cmpsb
inc
push
arpl
es
cmp
pop
or
dec
jg
adcl
out
add
adc
jl
inc
lods
dec
rcrl
pop
popf
testb
data16
push
test
mov
mov
cltd
sbb
stc
xorl
mov
xchg
aad
sti
into
fisttps
call
xor
or
into
cmpsl
stos
test
push
das
push
push
imul
addr16
push
xor
popa
jp
sub
out
in
shrb
inc
ds
in
test
mov
xchg
scas
inc
pop
pop
and
jo
enter
in
aad
mov
sbb
dec
pop
bound
push
hlt
sahf
jg
sbb
out
test
and
lcall
shll
cwtl
mov
addr16
xchg
bound
stc
scas
xchg
inc
mov
lcall
pop
cmc
test
iret
in
mov
in
push
push
aaa
xor
xchg
jne
sbb
jnp
pop
xchg
scas
mov
in
daa
xchg
pusha
dec
lods
lock
jne
shrb
das
xor
add
mov
imul
cmp
adc
inc
in
fidivrs
lahf
xchg
sub
pop
aad
mov
scas
or
dec
shll
loope
jno
and
in
add
add
inc
notb
push
mov
or
dec
call
inc
rcl
xchg
das
xor
in
test
and
push
jge
clc
adc
add
cmp
sahf
and
call
and
pop
call
xchg
and
cmova
in
push
cmp
xchg
adc
rorb
aad
jmp
mov
mov
dec
shll
ja
mov
xchg
jns
jnp
lret
cmpsb
fwait
add
cs
inc
in
imul
mov
xchg
cmp
and
xchg
sub
ss
leave
mov
or
and
dec
sbb
idivb
inc
adc
push
push
loopne
test
pop
mov
mov
in
cmp
iret
mov
sub
jg
cli
rolb
out
ret
xor
cmp
jbe
mov
movsb
int
push
fsubrp
sub
pop
test
in
xlat
cmp
mov
add
sbbl
je
cmp
std
or
push
mov
lods
aad
or
sbb
addr16
cld
popa
mov
sub
jns
loopne
test
adc
scas
lds
pop
cmp
jne
dec
repnz
adc
jbe
sbb
mov
or
push
js
mov
leave
xor
repz
sahf
in
pop
mov
aam
cmpsb
sbb
leave
les
mov
and
mov
push
inc
in
push
pop
shrl
cli
mov
pop
loop
inc
shrl
push
test
std
adc
stos
pop
sbb
mov
pop
into
or
xor
rorb
pop
out
rcr
lahf
movsb
ret
cmp
movsl
aam
sbb
notb
cmp
and
jns
cmpsl
sbbb
fisubrl
rorb
fcoml
into
jne
ds
add
lods
jne
in
xchg
pop
pop
cmpl
fnsave
loope
aas
cmpsl
test
push
outsb
jmp
add
in
in
mov
out
test
repz
enter
fcmovnbe
orl
jbe
rcrl
fisttpl
xchg
movsb
gs
hlt
mov
outsb
adc
mov
sub
xlat
or
enter
push
faddl
lea
ljmp
std
fsubrs
fcomps
add
push
cli
mov
cld
shll
push
lock
cmp
xchg
jmp
jmp
inc
loopne
out
xor
lea
and
add
and
adc
jbe
test
and
push
shlb
pop
daa
pop
repnz
loop
dec
mov
sub
data16
fdivrs
lret
lahf
jb
fld
outsl
and
and
stos
test
sub
ljmp
mov
in
pop
sti
adc
loopne
aad
ss
cmc
jae
sub
into
or
and
fists
pop
mov
leave
push
sbb
mov
fsubs
mov
xlat
mov
lahf
pusha
popf
cmp
jno
and
in
das
jl
lods
dec
xor
jg
pop
push
test
jmp
lret
add
or
inc
in
adc
xchg
fsubrl
daa
xchg
mov
pop
loopne
push
or
rclb
lret
mov
lret
mov
or
bound
test
movsl
pop
into
mov
scas
or
std
fdivl
sbb
insb
ljmp
lods
jg
adc
xchg
push
or
sub
jno
xchg
xor
sbb
inc
sbb
into
push
mov
int3
insb
dec
and
decb
stos
and
outsb
loopne
js
js
pxor
mov
add
ret
and
pusha
in
push
int
xor
mov
icebp
xor
lods
pop
mov
fnsave
repnz
out
sbb
mov
add
shl
scas
adc
xor
pushf
repz
mov
mov
jno
and
repz
dec
lret
mov
movsb
and
stc
push
jne
test
mov
in
scas
and
sub
sbb
leave
rcll
mov
add
mov
aas
rcl
xchg
fcomp
test
mov
lahf
push
sarb
mov
dec
mov
ss
xor
adc
mov
inc
insl
mov
cmp
lock
xchg
sbb
mov
sarb
adc
outsl
test
xchg
or
lock
add
daa
dec
adcl
xorl
shufps
xor
dec
shll
arpl
sahf
add
jae
dec
cmp
cmp
ror
out
mov
jb
xchg
adc
pop
cmp
stc
or
jge
aad
fbstp
imul
jecxz
adc
pop
test
dec
cmp
xchg
lret
pop
cltd
push
jb
push
cmpsl
dec
mov
test
xchg
adc
mov
bndstx
inc
lea
ret
mov
pslld
dec
or
sar
xor
sbb
stos
fcmovnu
inc
xor
jmp
aad
mov
push
xchg
popa
into
add
lret
cmp
lahf
lret
add
cmpsl
jae
xchg
out
sbb
sub
scas
push
inc
push
dec
cs
loope
mov
mov
cmp
rep
adc
or
fstl
dec
jb
jb
xor
daa
sub
cmc
pusha
sub
rorl
add
and
push
xor
and
outsb
xchg
in
addr16
aad
xor
pop
repz
sub
mov
loop
daa
aad
push
int
in
ds
cltd
mov
mov
dec
push
pop
push
jg
cmp
lret
push
xorb
out
xor
imul
xchg
ficoml
jl
add
jmp
sub
xor
push
divb
sub
mov
clc
cld
mov
inc
out
out
jp
insl
or
test
pop
push
mov
fwait
jle
xchg
stos
jbe
rorl
or
xchg
out
shrl
mov
repnz
xchg
cwtl
mov
stc
xchg
adc
and
sti
or
and
scas
jno
mov
subb
imul
imul
or
pop
push
pop
mov
pop
cmp
sarl
outsl
mov
popa
mov
popa
mov
outsl
jg
ret
subw
push
pop
popa
sti
lret
push
popf
fcomp
mov
cmp
sub
or
fmuls
adc
push
sub
lret
inc
enter
dec
ret
sahf
ror
cld
xlat
xchg
mov
xor
and
cs
leave
xchg
sub
inc
daa
mov
rolb
fstpt
pop
stos
test
les
jmp
sbb
jl
jle
out
cmp
gs
adc
dec
inc
pop
dec
lret
cld
insl
cmp
xor
imull
mov
sub
mov
xor
ret
stc
popf
jb
xchg
pushf
daa
cmc
aas
jne
stos
lcall
inc
les
mov
add
fistl
jo
dec
or
or
cmp
mov
loopne
push
mov
sti
mov
cmp
cmp
add
test
push
test
daa
insb
lret
fs
clc
dec
mov
jnp
cs
loopne
lds
stos
and
cmp
dec
lahf
push
ss
dec
mov
leave
enter
lock
push
pop
mov
rorw
aaa
ret
inc
cmova
sub
bound
enter
stc
enter
std
ret
notl
jo
push
inc
ljmp
mov
cmp
stc
lret
dec
xor
fbstp
enter
push
cmc
in
add
or
jbe
bound
in
stc
xchg
in
jmp
and
sti
addr16
push
out
cmp
add
es
sub
out
fucomp
dec
dec
stc
adc
clc
fwait
sbb
xchg
sub
cmpsb
enter
arpl
mov
xchg
in
stos
dec
les
aad
xlat
xor
dec
mov
dec
mov
nop
mov
jp
sub
mov
jmp
es
into
test
rcrl
repnz
mov
in
jb
inc
inc
jmp
jb
pop
fsubrl
xchg
pop
ja
xor
lods
inc
inc
loop
cld
push
jbe
cld
pop
sbb
cmp
push
push
push
incb
pushf
or
mov
pop
adc
sbb
std
push
lds
loop
inc
adcb
push
outsb
adc
xchg
mov
loope
shll
icebp
aas
mov
lea
mov
add
scas
sub
fs
mov
shl
into
push
ss
fstpl
repz
mov
dec
movsb
push
ljmp
popf
test
add
rcll
xchg
sbb
ljmp
or
leave
jb
cmc
data16
mov
or
jo
icebp
push
push
sub
sub
xor
aaa
xchg
sbb
clc
adc
sbb
data16
divb
gs
or
lea
mov
in
js
push
pop
rcl
mov
outsb
jnp
cwtl
fstps
ret
xor
mov
sbb
mov
pop
dec
mov
dec
push
fnstsw
idiv
dec
int
dec
inc
inc
sarb
addr16
cmc
mov
pop
test
push
pop
xchg
xchg
mov
dec
int
aam
jg
das
aam
inc
sbb
adc
mov
xor
jecxz
das
lea
ret
cmp
dec
cmp
xor
cmp
repz
dec
xchg
popa
jae
inc
pusha
inc
mov
pop
pop
lods
sbb
and
xchg
aas
pop
mov
push
pushf
in
xor
loope
add
lea
jge
push
cmp
lret
mov
mov
in
mov
call
and
xchg
dec
out
pushf
pop
test
daa
stc
adc
aaa
in
and
jl
and
orl
repz
addl
fnstsw
pop
ret
jae
mov
inc
pusha
push
mov
push
std
test
int
push
mov
shl
mov
test
dec
add
xchg
cmp
pop
mov
repz
add
sti
xor
insb
or
jns
cltd
loop
daa
cmp
push
aad
sahf
mov
mov
fcom
iret
sub
adc
xchg
insb
out
hlt
leave
push
test
rcrb
sub
repnz
out
scas
sbb
hlt
leave
fisubl
call
aam
fdiv
push
mov
leave
sbbl
inc
xchg
cld
jb
insb
inc
loope
and
sbb
rcll
xchg
lret
fwait
test
cmpsb
pop
call
cli
scas
adc
sbb
cmp
leave
fstl
aam
addr16
test
movsb
xchg
out
daa
jge
jp
push
mov
and
inc
inc
scas
repnz
or
outsb
mov
gs
mov
sarb
in
aad
ficoms
xor
imul
jle
clc
mov
adc
mov
cmp
pop
mov
aam
pop
daa
scas
loop
push
jp
bound
push
subb
push
mov
xchg
mov
push
dec
and
jmp
jle
ret
in
add
sub
jns
mov
and
xor
mov
mov
out
nop
xor
movsb
mov
push
add
sub
sbb
stos
push
arpl
cmp
lcall
sbb
adc
lcall
outsb
dec
out
insl
inc
jae
aas
cmpsl
inc
lret
mov
mov
pop
xchg
mov
adc
xchg
sbb
stos
inc
dec
add
xor
lret
sarl
loop
pop
mov
sbb
mov
ds
jo
lods
xchg
les
push
fs
pop
stc
mov
xchg
inc
inc
mov
insl
arpl
dec
cmp
andl
sub
imul
movsl
into
dec
lret
push
add
rolb
repnz
add
dec
repnz
fwait
test
mov
mov
push
rcrb
jne
sbb
adc
dec
ja
or
out
lret
cmp
sahf
test
xchg
enter
inc
dec
or
mov
divl
out
imul
clc
inc
add
rclb
mov
clc
inc
mov
mov
dec
xor
adc
or
test
fs
add
mov
pop
jmp
jb
popa
das
imul
mov
mov
lock
popf
aaa
test
repnz
mov
popf
jmp
adc
push
cwtl
test
repnz
add
push
cmp
pushf
mov
push
movsl
xor
adc
xor
mov
idivl
jb
cmp
fwait
mov
call
adc
or
cmovns
movsb
mov
popa
mov
push
cmpsl
xor
icebp
js
xchg
xor
mov
mov
in
or
jns
in
lods
pushf
insl
adc
mov
test
repnz
mov
adc
repz
lea
lret
xor
addl
jns
lock
or
stos
xchg
bswap
fisubrl
inc
cmp
jg
fistps
jmp
jp
push
mov
lcall
popa
icebp
xchg
in
mov
xchg
jecxz
dec
push
fisttpll
loop
outsl
iret
jbe
mov
lret
or
push
push
xchg
xor
jl
int
cltd
xor
mov
mov
lods
jge
mov
test
gs
js
in
cmp
cs
mov
cmc
sti
pop
push
pop
pop
xchg
cmpsb
or
test
push
out
pop
dec
aaa
je
push
lds
inc
jmp
test
add
nop
push
stc
adc
pop
mov
mov
dec
cli
out
pop
stc
pusha
or
fwait
xor
scas
les
or
jmp
push
jmp
mov
push
cmpsb
cmpsb
mov
push
mov
mov
std
ret
ss
jae
jbe
adc
xchg
shlb
xor
inc
push
pop
pop
add
pop
mov
mulb
lea
cli
sbb
fcompl
bound
popa
mov
nop
popa
adc
imul
aad
in
lods
mov
loope
into
in
mov
lcall
pusha
sbb
dec
adc
and
and
pop
jae
cmp
xchg
mov
test
fsub
int
in
mov
stos
and
shrb
xchg
add
pop
mov
mov
in
addl
jmp
cmpsb
fldl
sbb
inc
xchg
mov
adc
cmp
add
and
scas
fs
mov
cld
adc
jle
jmp
mov
je
in
xor
mov
bound
in
les
dec
and
xor
inc
cs
mov
sub
iret
bound
add
mov
add
mov
sub
adcb
neg
insl
into
xlat
dec
xchg
jmp
addr16
add
out
lahf
jmp
inc
and
or
push
das
push
stos
rolb
xor
push
jge
cld
nop
fimull
mov
es
scas
imul
lods
inc
iret
cld
mov
shr
sbb
xchg
leave
mov
stos
cli
and
bound
push
gs
jns
add
sbbl
movsb
repnz
adcl
fsubl
mov
push
jmp
data16
nop
xchg
push
lds
gs
scas
sbb
push
jge
fdivs
fidivl
push
inc
daa
les
mov
push
push
push
stos
sarb
mov
aad
push
cmp
fcmovbe
outsl
add
mov
inc
repnz
sahf
out
push
push
lret
stos
jnp
mov
push
inc
dec
or
push
push
sub
aas
sbb
pushf
ja
stos
adc
imull
jg
test
push
aad
addb
sbb
inc
hlt
pop
pop
jno
mov
loope
or
rorl
jmp
sub
push
xchg
sti
jecxz
xchg
arpl
data16
xchg
jae
call
dec
outsl
xchg
fmull
and
mov
in
add
xor
fiadds
lret
inc
outsl
dec
sub
push
pop
and
mov
das
js
pushf
in
jbe
mov
xchg
test
notl
lea
xlat
mov
sbb
mov
imul
stc
sbb
into
cmp
or
ljmp
push
out
jns
add
and
rcrb
cld
dec
inc
jg
andb
jbe
xor
lock
enter
out
mov
pop
mov
popf
aam
out
lahf
loope
lcall
sti
mov
mov
jmp
cmp
or
inc
out
rcl
stos
faddl
fcmove
pop
cs
jo
jg
sub
push
xchg
sahf
push
push
stos
pop
out
pop
cmp
loopnew
cs
mov
mov
dec
sarl
stc
jmp
ljmp
cmpsl
mov
mov
push
iret
lahf
mov
jmp
shr
es
sbb
sub
leave
mov
sbb
incb
xchg
loopne
lock
int3
inc
pop
adc
adc
lcall
ss
sti
dec
cmp
adc
jb
jne
out
cmp
mov
lret
and
mov
cli
std
xor
inc
shlb
jae
or
pop
and
dec
mov
subl
dec
popf
fimull
pop
divl
clc
sbb
adc
xor
ret
insl
jg
xchg
insb
add
lock
add
sub
fiaddl
dec
stos
add
cmp
and
mov
fidivl
push
push
sub
sahf
jmp
cmp
fldenv
pop
imul
int
dec
cld
jl
mov
mov
and
nop
fistps
jecxz
dec
aam
mov
ja
mov
mov
loopne
in
mov
enter
jnp
inc
je
insb
in
mov
out
je
cmp
add
hlt
cmp
xor
test
outsb
pop
jge
push
cmp
insb
pop
xlat
rolb
dec
lea
inc
outsl
jbe
pop
jnp
ss
or
cmp
cmp
and
repz
js
mov
pop
sbb
in
mov
cmp
cmp
imul
pop
or
insl
addb
fcmovnu
dec
dec
xchg
rolb
dec
push
sub
and
cltd
loop
aas
push
outsl
sub
incb
out
cmpsl
adc
ja
jle
jle
xor
hlt
mov
inc
enter
mov
mov
ljmp
ftst
jbe
xlat
push
in
pop
pop
xor
les
adc
sub
jp
and
in
sbbl
pop
movlps
pop
jecxz
push
push
jmp
dec
mov
mov
out
movsb
popf
add
lea
xchg
lods
rcrl
pop
push
clc
mov
adc
add
jg
into
mov
dec
cmp
loop
dec
sar
out
sahf
ret
sub
idivb
aaa
ds
sbbb
xor
mov
and
pop
outsl
out
pop
aam
mov
enter
es
aam
in
add
lods
ja
jbe
pop
pushf
dec
hlt
adc
scas
test
aam
inc
add
aad
and
pop
mov
and
adc
adc
jmp
mov
dec
scas
pop
aaa
mov
adc
in
xor
shl
lds
jl
jnp
push
sub
cmp
mov
lret
cmp
xchg
pop
iret
pop
pusha
push
ss
jmp
or
test
mov
stos
arpl
lods
js
and
dec
addl
mov
adc
icebp
sub
pusha
insb
aad
inc
lock
bound
or
jo
mov
adc
ret
mov
push
divb
daa
xor
mov
je
sub
orb
lock
mov
int
imul
fisubrs
xor
sub
shrb
std
negl
mov
cs
rolb
xchg
cld
mov
sbb
clc
rolb
or
lea
mov
clc
aad
jno
sbb
mov
sahf
daa
outsb
cltd
sub
les
cltd
aaa
jae
aaa
iret
scas
mov
jno
add
cmpb
mov
notb
ja
test
xor
sbb
cmp
add
inc
std
sub
popa
ss
ss
dec
mov
xchg
lea
adc
loop
pop
subl
push
dec
imul
sub
jnp
pop
inc
dec
jno
fists
std
dec
or
ljmp
nop
loopne
flds
adc
ljmp
and
jbe
in
aas
xchg
pop
aad
push
fs
xor
or
test
jns
popa
lret
jge
cltd
movsl
push
pop
jae
mov
call
popf
mov
and
cmpsb
mov
pop
mov
int3
push
int3
add
push
in
xchg
mov
mov
xchg
inc
sub
mov
bound
lea
mov
popf
xchg
or
push
inc
mov
pop
mov
jmp
fbstp
mov
dec
push
shrl
jecxz
sti
orl
cmc
inc
xor
sub
test
int
jl
and
add
xor
add
outsl
test
aad
out
or
icebp
cmp
ds
je
lock
in
outsb
mov
mov
aas
adc
scas
or
xor
inc
lret
dec
jne
inc
out
div
idiv
mov
jae
jl
arpl
aas
fwait
adc
push
jnp
ljmp
xchg
mov
test
dec
or
insl
leave
jp
stos
push
data16
mov
test
mov
gs
clc
outsb
mov
jne
cmpsb
pop
mov
cmp
sbb
adc
jbe
dec
insl
mov
into
adc
nop
jno
fldl
sbb
mov
mov
fsubl
mov
out
ja
dec
or
cmp
cli
and
or
sbb
or
mov
fcomip
mov
int
mov
cmpb
shlb
hlt
dec
mov
insl
pop
jle
adc
aas
mov
mov
dec
fistps
and
int
das
xorb
sub
add
data16
mov
enter
lret
add
cmp
das
mov
inc
stc
xchg
test
xor
dec
insl
in
xor
test
rol
push
pushf
add
repz
xor
and
push
ret
clc
xor
xor
lahf
cmp
jo
sbb
sbb
js
mov
jb
data16
imull
xchg
int3
outsb
dec
in
inc
hlt
sbb
rcl
std
and
pop
movntq
pop
push
sub
dec
dec
mov
call
nop
sub
aam
call
mov
cmp
pop
rorb
andb
and
jb
iret
dec
je
jnp
cmpsb
mov
pop
fisubrl
pop
cld
lcall
mov
cmc
shll
add
inc
xor
cltd
push
test
jns
pop
and
inc
add
mov
mov
fsubrs
mov
ret
pop
bound
outsl
icebp
xchg
rolb
dec
fdivr
adc
clc
push
push
push
jecxz
lods
dec
imul
mov
cmpsl
push
adc
int3
adc
cmp
testl
imul
addb
mov
fdivrs
adc
inc
cmp
leave
sbb
popf
ds
roll
jb
mov
xchg
cmp
iret
xchg
hlt
aas
in
add
leave
jmp
into
scas
or
push
push
ret
sub
xchg
in
shrl
sub
pop
dec
in
mov
xchg
adc
sub
test
xchg
gs
mov
push
icebp
orb
fmull
xlat
das
add
cltd
std
or
mov
cltd
lds
idivl
scas
fadd
imul
out
cli
mov
mov
lret
in
pop
cs
xchg
and
rep
cmp
or
mov
cmovae
icebp
cmpsb
mov
lods
cmp
push
dec
ljmp
sbb
daa
lods
xchg
dec
dec
lret
mov
repnz
test
add
fisttpll
xchg
and
cli
fnstsw
cmp
je
inc
xchg
add
push
xchg
cmpsl
dec
cld
ret
cwtl
or
clc
stos
pop
jmp
inc
pop
pop
mov
xor
xchg
cmpsl
flds
sarb
and
lahf
cmc
pop
sbb
sahf
sub
out
cmp
cmp
fdivrl
je
loop
mov
popa
mov
or
inc
fcoml
xchg
ds
add
pop
aaa
mov
aas
push
cmp
repz
or
jae
je
cmp
imul
mov
pushf
imul
pop
or
aad
and
sub
adc
jno
xorb
sbb
pop
or
jnp
mov
push
mov
movsb
sbb
jmp
out
loopne
sti
mov
test
and
or
aas
loop
xor
mov
test
mov
mov
ret
int3
rolb
dec
inc
in
mov
xor
and
push
dec
movsl
loope
stc
fistps
daa
imul
lods
sbb
pushf
lea
pop
jo
cmc
mov
outsl
leave
mov
xor
bound
shlb
dec
loop
sbb
push
push
lcall
sub
daa
xchg
in
jns
movsb
add
ret
xor
sub
dec
mov
in
out
mov
cmp
in
mov
adc
jns
sti
xor
or
int3
jns
adc
pop
and
sub
sbbb
bound
push
add
mov
adc
sub
mov
push
and
mov
push
mov
pop
addr16
lret
push
mov
insl
jmp
cs
sbb
fnsave
je
cmp
add
int3
sbb
push
inc
mov
addl
mov
out
cmp
jns
xorl
fisttpl
jae
add
cmp
add
inc
dec
cmp
mov
std
outsl
data16
inc
or
hlt
lds
fwait
inc
pushf
pop
out
mov
mov
mov
push
and
and
pop
and
lret
imul
es
in
xchg
cmp
int3
adc
aad
sub
jne
stos
sub
ror
sbb
loop
dec
insb
rcr
jp
sbb
or
scas
jo
movl
pop
and
test
pusha
sbb
add
cltd
cmp
addb
js
sti
dec
inc
push
leave
jmp
adc
pusha
iret
aam
pop
jg
mov
ret
in
push
inc
in
and
arpl
push
add
fdivrs
cmp
xchg
push
mov
adc
lret
arpl
test
nop
mov
les
xor
xchg
cmp
xchg
add
loopne
inc
push
adc
nop
xchg
mov
cltd
lahf
adc
mov
inc
movl
jnp
jne
push
and
repnz
pop
sbb
rcl
cs
outsl
test
loopne
loope
sub
inc
fcompl
cmp
pop
xlat
push
mov
sarl
in
mov
inc
clc
js
cmp
jbe
pushf
add
dec
lcall
dec
fs
xchg
dec
cmpsl
mov
xchg
fldenv
fs
fisubrs
pop
stc
cmp
call
push
sti
xchg
fbld
mov
imul
xor
jmp
sbb
rolb
push
or
mov
jbe
fs
ljmp
hlt
mov
and
jmp
jne
dec
data16
arpl
dec
push
repz
mov
popa
and
cmpsb
movsb
stos
addl
stos
iret
in
xor
fs
psubsb
jecxz
rorb
fs
cwtl
dec
stos
rcrl
test
scas
call
sbb
addr16
or
inc
adc
inc
daa
mov
sub
shll
sub
adc
mov
xor
mov
frstor
mov
mov
in
lcall
xchg
and
lret
cmp
mov
mov
arpl
adc
daa
sbb
dec
loope
jle
push
fs
subb
xchg
jno
or
lods
sub
movsb
bound
lret
lds
mov
mov
int3
sbb
fnstenv
jge
mov
nop
cmpsb
lret
popf
mov
jb
ret
test
push
jl
xchg
mov
gs
push
dec
pop
xchg
inc
fcoms
cmp
incb
adc
push
loopne
adcl
push
cmc
adc
pop
sub
fistpll
enter
fdivl
xchg
lahf
jbe
adc
adcl
inc
sahf
push
mov
int
aad
addr16
xchg
xor
sbb
jae
xchg
js
es
cmpsb
and
xchg
pop
inc
sbb
sub
sub
mov
jg
pop
dec
ds
and
sarl
mov
fiadds
into
mov
mov
cmp
popa
xchg
std
dec
mov
std
push
push
cmp
xchg
into
movsl
mov
rdtsc
xchg
push
sbb
sti
pushw
pop
pmaxub
imul
pop
cmp
adc
pop
js
ret
mov
sarb
popa
sbb
inc
enter
and
add
test
jle
jmp
movsb
adc
adc
fdivp
jecxz
outsb
ret
sub
pop
out
dec
push
jmp
or
sbbl
test
lret
xorl
and
les
cs
decl
or
or
push
cmpsb
push
outsb
pushf
xor
sbb
jnp
jae
xchg
outsb
xor
jecxz
dec
idiv
cmp
test
in
jns
and
jae
push
xorl
pop
mov
cld
cltd
fdivrs
mov
xchg
or
sbb
icebp
gs
pop
hlt
pop
fs
ja
or
mov
inc
clc
adc
or
jp
sarb
inc
stos
cmp
nop
sahf
push
dec
das
fisttpll
mov
movsb
or
or
jb
mov
xchg
int3
jne
pop
shll
mov
lods
jmp
das
jns
push
testl
fwait
les
ds
pop
mov
rcr
ret
cmpsl
aas
aaa
jo
test
fwait
cmp
add
inc
pop
inc
sub
xchg
repz
gs
cmp
or
scas
add
add
lcall
lods
xchg
pop
sub
fisubs
lea
cmp
loop
adc
lret
dec
stos
aaa
jbe
pusha
mov
pushf
insb
jbe
adc
jbe
pusha
xchg
xor
or
mov
xor
shr
jns
icebp
jmp
cmp
adc
int3
addb
popa
notl
push
das
mov
pop
dec
ret
mov
je
lods
adc
inc
or
nop
mov
xor
xor
loopne
pop
jecxz
shlb
mov
jge
cmp
shrl
xchg
xchg
lret
gs
int3
ds
ret
xor
mov
and
fwait
pop
jecxz
fs
test
repnz
push
add
cwtl
enter
subl
adc
adc
push
lds
ficoml
adc
dec
out
xor
pop
cmpb
repz
adc
sub
fs
xor
les
jmp
jmp
jle
pop
jnp
or
xor
mov
dec
pop
xor
imul
jecxz
in
add
push
push
cld
fisttps
xor
jnp
mov
xchg
iret
mov
test
icebp
jmp
mov
inc
mov
stos
scas
ds
pop
adc
outsl
pusha
int3
jae
or
int
adc
mov
imul
loope
pop
dec
out
or
out
cmp
mov
pop
ret
inc
fldcw
pop
inc
incl
adc
movsb
xchg
adc
pop
xchg
scas
inc
pop
sbb
out
shr
sarl
sub
shrb
jmp
nop
mov
and
xor
add
mov
add
aam
push
jo
and
es
arpl
sbb
mov
dec
cmpsb
cmp
fdivrl
sbb
jns
outsb
mov
loope
sub
inc
in
sbb
push
aaa
test
add
adc
lcall
adc
sub
mov
mov
addr16
cmpsl
or
mov
pop
mov
or
stos
mov
sbb
shl
test
pop
popf
dec
aam
inc
in
repnz
sub
decb
sbb
lea
dec
mov
mov
push
inc
shr
cmc
add
inc
ds
jb
inc
pop
fs
inc
jnp
lret
dec
and
leave
arpl
aam
cs
and
dec
cld
pop
xor
jmp
push
lcall
push
sub
dec
mov
adcb
fmul
ret
lcall
inc
push
data16
inc
adc
mov
mov
aaa
ret
and
xchg
test
mov
push
xchg
mov
xchg
dec
fcoms
fsubp
stc
xor
xchg
hlt
mov
das
in
lret
or
mov
sahf
imul
mov
loopne
jno
shll
push
dec
jbe
sahf
jb
shlb
pop
sbb
dec
mov
fs
mov
sub
cld
and
and
fbstp
mov
sub
adc
xchg
mov
sbb
sti
jge
mov
popf
and
fistl
and
ret
test
adc
jo
pop
jmp
pop
lea
stc
or
cld
stc
adc
jmp
js
xchg
xlat
aaa
mov
cli
add
add
mov
inc
add
out
jno
stc
xchg
mov
jl
mov
jmp
andb
adc
add
pop
push
adc
xchg
jns
pop
sbb
scas
xchg
cmpsl
test
jnp
arpl
fstpt
inc
sub
pop
ja
xchg
dec
jo
xchg
ja
lods
push
jno
sbb
pop
lret
push
mov
clc
adc
sbb
scas
mov
lret
pop
adc
sbbb
test
into
xchg
push
add
mov
dec
sub
addr16
in
loope
test
cmc
pop
sub
or
out
movsl
ljmp
rcrl
lds
lret
inc
gs
arpl
adc
dec
inc
dec
sub
mov
lcall
mov
jns
pop
inc
mov
cmpsl
xor
repz
push
push
in
pop
push
pop
ret
cmp
ret
inc
adc
das
repnz
mov
scas
or
sub
push
and
xor
jecxz
add
xchg
outsb
imul
push
jae
sub
inc
xchg
loope
adc
scas
scas
push
sub
mov
fwait
inc
je
jbe
dec
fisubrs
lods
mov
les
stos
dec
leave
and
loopne
into
sbb
aad
and
movsb
mov
lods
push
jl
icebp
addb
scas
push
adc
adc
gs
lcall
xchg
inc
xor
fisubl
loop
mov
mov
insb
nop
jle
push
fsubp
lret
push
pop
and
imull
sub
inc
imul
mov
pushf
xchg
das
fwait
xor
inc
cmpb
sbb
cmpsb
movsl
jl
out
jg
xchg
jl
call
data16
sbb
jmp
xor
fsubs
mov
out
inc
jl
out
lret
jg
in
out
pop
xchg
rorl
inc
adc
int3
cmp
jge
jp
in
sub
xchg
je
jg
cmp
mov
xchg
lahf
push
nop
shlb
fistps
mov
pop
pop
arpl
ret
std
in
adc
or
stos
push
out
push
movsl
xor
pusha
ljmp
mov
and
fcompl
mov
ret
jl
out
xor
pop
aad
mov
lahf
pushf
jns
nopl
pop
aad
push
jb
lock
fs
cwtl
jl
rcll
jl
sub
js
push
jns
mov
lea
add
xchg
push
push
xlat
xlat
dec
sbb
loop
add
fdivrl
popa
vdivpd
nop
or
int3
push
lea
cmpsl
mov
mov
loope,pn
lret
or
mov
xor
shr
out
inc
mov
test
mov
out
pop
mov
inc
jb
and
leave
add
dec
daa
cmp
sub
lret
add
push
pop
pop
push
stos
enter
into
pusha
popa
and
pop
sbb
shl
jne
andps
jbe
pop
clc
xchg
sti
sbb
cltd
sub
push
aas
iret
lret
sbb
pop
lods
inc
out
in
mov
repz
dec
bnd
inc
std
aaa
inc
repnz
mov
loope
xchg
ret
dec
das
addr16
incb
inc
jl
ljmp
mov
insb
test
lods
loopne
popf
pusha
cli
xor
add
lock
aam
adc
bound
in
les
xchg
mov
test
push
sarl
sbb
mov
xchg
sub
pusha
adc
dec
mov
jnp
mov
shr
test
ret
aad
adcl
sub
insl
xorl
fiaddl
es
das
add
adc
out
mov
lods
mov
sub
mov
xchg
mov
int
mov
xor
or
in
mov
rcr
dec
pop
inc
lods
add
xor
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
out
or
movsl
xchg
push
imul
and
mov
into
or
cltd
sahf
mov
push
sub
aam
sti
or
or
scas
arpl
inc
cmpsb
bound
fsubrs
jae
jmp
jae
and
loope
inc
mov
mov
or
add
mov
mov
call
cmc
mov
cltd
adc
mov
out
jmp
inc
clc
or
out
aaa
add
push
or
lea
jg
mov
mov
xchg
xchg
and
adc
stos
add
xor
sbb
cwtl
test
mov
rclb
fdivrs
xchg
mov
pop
pop
mov
xchg
cmp
inc
pusha
xchg
call
or
xor
fdivs
push
sbb
test
inc
add
mov
adc
jle
cmp
mov
insb
addr16
pop
lcall
sbb
int3
dec
and
icebp
ja
jnp
adc
pop
lods
add
sbb
lods
stc
inc
test
adc
aaa
outsb
movb
pop
add
std
dec
pop
add
pop
cmp
pop
stos
loop
das
dec
lret
loop
add
cmp
js
lods
or
inc
sbb
sub
xchg
lock
lcall
xor
ja
sbb
mov
push
popf
xchg
cmp
dec
push
cs
push
rclb
pop
lret
sbb
addr16
sti
test
arpl
adc
jge
jl
mov
mov
es
jns
popf
lods
adc
push
mov
xchg
addb
jb
cld
jge
add
pusha
mov
cmp
sahf
jae
rolb
dec
sub
and
cmp
mov
lods
jo
dec
in
in
push
cltd
mov
adc
imul
sbb
pop
push
jnp
lahf
out
jl
aas
and
outsl
jg
cmp
cmpsb
test
mov
mov
xor
lock
cmp
mov
xor
pop
add
jmp
pop
pusha
cmp
das
out
push
fistpll
into
nop
pusha
xor
shlb
dec
test
inc
jno
add
int
mov
pop
jno
pop
xchg
add
xlat
ds
jmp
adc
pop
and
lret
add
negl
js
cmpl
inc
dec
aad
repz
stc
push
and
rolb
add
loope
add
out
pop
inc
sub
aad
sti
dec
ja
cmpsb
mov
inc
jbe
lods
dec
arpl
ja
pusha
cmp
mov
scas
leave
jne
push
push
cmp
cmpsl
sub
dec
scas
sbb
jmp
inc
comiss
sub
call
dec
stos
cmpsl
je
dec
pop
test
and
dec
or
lock
inc
jne
es
fs
in
outsl
xor
sbb
fcomp
jmp
test
leave
xchg
out
mov
push
or
mov
jecxz
sahf
cmpsl
sbb
xchg
loop
mov
repnz
xor
punpckhwd
fmul
lods
adc
inc
sub
mov
mov
jg
fwait
push
adc
call
js
fcomp
sbb
and
dec
lret
cmp
adc
xchg
push
inc
mov
cmp
ja
jns
adc
hlt
in
xorl
mov
enter
sbb
dec
xchg
repnz
mov
mov
push
lahf
call
out
sbb
rolb
mov
lea
test
outsb
and
push
sbb
mov
iret
leave
xchg
mov
xor
lcall
jne
sbb
mov
movsl
arpl
push
dec
dec
push
test
inc
add
ja
lcall
adc
nop
push
xchg
pop
stos
fbld
push
jle
mov
or
bound
or
mov
int3
mov
mov
cld
mov
add
ss
rolb
sub
sbb
faddl
fsts
jnp
clc
push
notb
lods
shrl
int3
aam
gs
movsb
jns
mov
xchg
xchg
lods
xor
jmp
aam
mov
jae
dec
ds
pushf
test
sbb
cmp
outsb
cmpsl
in
push
dec
cmpsl
adcb
pop
jb
mov
xchg
test
lock
pop
or
xor
hlt
push
push
sub
lock
inc
fimuls
mov
nop
and
test
loope
fdivr
mov
and
and
push
jmp
add
cld
sbbl
movsl
xchg
movsb
mov
hlt
inc
jg
movsl
xor
jle
sbb
lods
adc
sub
and
sub
repz
adc
testb
jnp
dec
sub
ret
cltd
movl
jmp
adc
test
cwtl
mov
mov
mov
shrl
mov
xchg
enter
jle
aam
push
add
in
push
and
pusha
cs
popa
mov
imul
aas
dec
add
int3
push
nop
mov
shl
cmp
iret
push
repz
mov
outsb
pop
cmp
lea
lds
fstpl
in
sub
out
or
testb
dec
jnp
clc
push
lahf
stc
mov
jne
loopne
cmpsb
les
pop
out
cli
cwtl
test
xlat
in
popa
dec
cwtl
push
sbb
cmp
jle
outsl
cwtl
add
call
dec
movhlps
xchg
sarb
stc
enter
clc
lods
loopne
sahf
fidivl
loop
lahf
lods
mov
push
push
fs
outsb
pushf
push
fisttpl
and
clc
call
dec
jmp
loop
out
daa
xor
xchg
test
lcall
cltd
incb
adc
loop
jne
fucomi
jmp
mov
lret
in
pop
inc
push
mov
ds
push
pop
push
cld
push
jno
pop
pushaw
xchg
ret
das
movsl
outsb
int3
fdivs
daa
iret
shl
int
int
push
rcrl
popf
movsl
cli
and
lock
inc
push
push
dec
mov
add
xchg
xchg
popf
ret
xchg
add
enter
cmp
xchg
test
xor
mov
es
fwait
push
outsl
pushf
bound
cmp
cwtl
jb
notl
lock
jl
mov
fwait
pop
fwait
push
sub
push
std
and
inc
std
les
or
popa
mov
cmc
outsl
pop
mov
ja
mov
xor
jmp
scas
mov
mov
pop
jnp
cmp
dec
insb
das
out
xor
mov
mov
repnz
add
pop
nop
sti
mov
lret
xchg
add
inc
hlt
pop
inc
fidivs
std
jmp
imul
xor
stos
jg
aaa
out
lods
inc
dec
mov
cs
loop
and
pop
dec
ljmp
pop
jle
out
mov
daa
jecxz
loopne
cmc
loop
lret
mov
add
mov
add
xchg
fsubrl
das
mov
ljmp
movsb
repz
das
dec
imul
lods
add
push
xchg
xlat
jge
sub
push
add
sbb
sbb
fwait
and
mov
push
pop
push
cmpsb
mov
mov
jg
push
sbbl
cwtl
pop
mov
dec
fstps
jne
icebp
mov
jmp
jge
dec
lds
mov
std
cmpsb
inc
out
cltd
jns
adc
aaa
mov
rol
dec
cmc
gs
fistpll
adc
loopne
cmp
push
test
clc
add
inc
cmovge
mov
aam
xor
hlt
daa
push
xor
jo
lret
inc
jo
dec
pop
or
inc
cwtl
pop
push
push
aaa
ja
test
pop
and
xor
mov
mov
out
pop
ss
test
das
cmc
scas
jge
mov
ja
push
cwtl
pop
loop
aas
and
and
pop
mov
pop
das
xor
out
add
mov
lods
or
ret
push
xor
sub
out
sbb
mov
aam
xchg
sub
inc
rclb
cli
mov
mov
cmp
stos
das
mov
imul
mov
stc
roll
pop
decb
movsl
dec
sub
push
loopne
aam
xor
sub
ror
sbb
repz
mov
aad
test
clc
out
mov
outsl
int3
xchg
jo
mov
mov
cmp
mov
int3
inc
pop
fstl
in
mov
js
outsb
fimuls
pop
outsl
cld
outsb
cmp
mov
adc
ret
or
inc
mov
adcl
mov
push
imul
mov
push
ret
cmpb
push
out
les
sbb
mov
xchg
pusha
cmp
ret
mov
xchg
push
shrb
or
xchg
int3
add
ficomps
fisubl
stos
rolb
xor
inc
outsb
dec
or
call
popa
push
hlt
mov
push
push
aam
or
sbb
xchg
adc
jb
jecxz
imul
out
out
iret
xor
fistpl
mov
xchg
cs
cmpb
rcrb
inc
fidivl
int3
stos
xchg
in
popa
stos
sub
or
outsl
and
sahf
int
cwtl
call
mov
imul
int
fisubrs
xor
or
popa
and
xor
popa
adc
adc
lret
daa
iret
rcr
push
sub
int
sub
stos
lret
out
adc
add
mov
push
sbb
dec
data16
rcll
test
loopne
sub
ficoml
lea
xchg
pusha
lods
xchg
addl
in
xchg
dec
scas
or
out
addr16
aad
inc
lahf
inc
fcomps
push
lret
pusha
mov
push
out
jbe
repz
fwait
sbbb
outsb
jl
lods
mov
dec
lret
aam
mov
jmp
pop
out
sbb
lds
inc
cmp
pop
add
and
test
mov
pop
pop
cs
bound
jmp
sbb
out
js
cmp
mov
cld
jge
clc
cwtl
xchg
rcrb
cwtl
xchg
repnz
std
pop
xchg
fisttpl
insl
mov
cmp
mov
aad
mov
push
into
sti
push
adc
jno
xor
fwait
repnz
adc
scas
pop
les
js
pop
fldcw
std
cmp
je
cld
inc
cmp
jne
pop
sbb
cltd
mov
xchg
adc
hlt
fadds
cwtl
mov
push
lds
xchg
adc
in
insb
and
push
test
pushf
fsubs
jae
and
pop
cltd
pop
dec
push
std
mov
or
lods
iret
add
test
jge
add
fdivl
pop
ror
aad
stc
gs
into
stos
and
jl
fbld
mov
sbb
inc
leave
les
adc
cmpl
in
push
pop
mov
mov
stos
sub
sbb
jae
jge
and
and
sarl
cs
adcl
push
sbb
ret
push
js
data16
roll
sub
fsub
adc
push
pop
cmp
pop
inc
test
push
adc
cs
ljmp
scas
int3
inc
outsl
loopne
into
mov
push
pop
nop
xchg
daa
cmp
loopne
sub
scas
cs
jbe
push
outsl
dec
adc
mov
out
stos
sub
pop
leave
outsl
mov
cmpsl
push
sbb
sub
cs
inc
push
ret
jp
jbe
push
cltd
sub
push
faddl
and
out
ja
je
insb
xchg
mov
or
movsl
jg
pusha
fprem1
nop
xchg
insl
xchg
push
cmpl
sbb
or
ret
cli
and
out
ljmp
js
sub
jp
push
insb
lcall
xchg
jle
sub
pop
push
lds
pusha
out
outsl
cmp
xor
lock
mov
inc
fildl
ret
adcl
test
pop
push
rcrb
cmp
ja
adc
popf
btc
imul
icebp
cltd
scas
cld
sbb
scas
mov
in
jns
mov
insb
enter
xor
roll
push
xor
sbb
cmpsb
add
push
mov
mov
fisttpl
fistps
mov
and
pop
insl
cld
inc
cs
lock
icebp
cwtl
test
or
jle
mov
add
inc
sub
es
daa
cmp
xchg
pop
xor
pop
mov
repz
mov
in
xor
mov
mov
mov
add
push
pop
mov
inc
add
fwait
inc
fstps
inc
mov
fcomi
mov
pop
xorb
sbbb
cbtw
pop
xchg
xorb
movl
sbb
in
popf
or
jo
mov
into
ss
aas
pop
test
jecxz
cs
cmp
jp
sbbb
arpl
sti
or
add
pop
cmp
sub
xchg
xchg
fstpt
sub
or
jg
sbb
daa
or
or
daa
mov
int
lret
jnp
loop
test
mov
inc
inc
push
leave
mov
sbb
and
andl
inc
ljmp
and
je
adc
push
pusha
xor
pop
and
dec
inc
or
mov
loopne
and
xchg
ficomps
jnp
fldenv
out
cld
sbbl
cmp
sti
or
push
push
mov
cmp
cmp
mov
mov
les
inc
pop
cmp
cwtl
iret
orl
xor
push
insl
and
sti
jbe
lock
imul
lock
ret
or
stos
sub
out
pushf
out
mov
jns
add
cmp
dec
jns
cwtl
das
call
js
mov
mov
int3
push
push
mov
lock
mulb
xchg
xchg
je
mov
inc
mov
dec
jl
fsqrt
cmp
outsl
rcrl
xchg
xchg
adc
jns
aam
xchg
clc
outsb
pop
add
and
dec
pavgb
lods
mov
outsb
lret
sub
loop
fmul
mov
push
cwtl
imul
xchg
icebp
daa
clc
call
movsl
inc
shrb
sbb
rcll
push
fldt
cmp
mov
ror
push
adc
sub
lods
repnz
pop
addr16
ret
subb
xchg
sbb
aaa
mov
xor
pop
or
or
mov
pop
leave
mov
or
out
lock
inc
sub
jecxz
sbb
test
push
mov
jne
sub
out
fists
pop
imul
les
or
mov
pop
lock
mov
iret
push
xchg
cmc
mov
orl
mov
stos
and
div
jbe
inc
xchg
xor
test
or
test
fwait
xlat
popf
cmp
fistpl
cmpsl
sbb
clc
adc
sarb
pop
imulb
mov
and
sbb
in
clc
push
aad
lcall
push
js
xchg
notb
lret
pop
int3
xchg
lahf
pop
lcall
xchg
jmp
sub
mov
out
jl
and
adc
cmp
push
andb
mov
pop
rol
test
sub
ja
pop
aas
pop
arpl
mov
mov
xorb
inc
aaa
mov
add
add
mov
aaa
lcall
stc
and
inc
dec
lods
sbb
add
jbe
pop
cmp
arpl
jb
test
push
adc
dec
cmp
out
cld
mov
int3
push
nop
push
ss
es
std
lcall
jg
cmpb
ret
adc
sysret
adc
mov
and
daa
and
sahf
aaa
mov
cmp
pop
lcall
rolb
sub
push
pushf
cs
fdivl
mov
jg
scas
xor
mov
cltd
pop
or
jle
arpl
xor
and
mov
movsl
arpl
jno
imul
jg
cmp
inc
fs
in
jb
ja
dec
push
pop
test
test
or
fistpll
and
mov
pushf
adc
lcall
jne
outsb
xchg
dec
or
pop
or
jecxz
mov
xchg
rcll
insb
decb
sbb
jnp
ret
push
dec
cmpsb
vcmppd
jle
or
flds
sbb
cmp
pop
lds
pop
icebp
imul
or
imulb
sbb
lea
or
imul
mov
jmp
scas
fldenv
lea
mov
lret
iret
xchg
pusha
pushf
mov
lods
popl
not
dec
and
sub
out
cmp
shr
push
inc
ss
cltd
aad
mov
data16
mov
ds
loope
inc
mov
je
mov
pop
or
out
lds
push
or
addl
hlt
push
mov
ret
ja
and
xchg
arpl
lcall
mov
push
jge
sub
jae
sub
sub
jg
scas
mov
ss
nop
or
sub
icebp
sbb
mov
fldt
xlat
jne
or
lds
xchg
xor
dec
xlat
dec
mov
mov
jp
dec
addl
cld
test
mov
cmp
outsl
fxch
xchg
jbe
dec
sub
popf
out
lock
pop
push
lds
insl
jge
daa
aad
lret
cmp
frstpm(287
xchg
fistpl
mov
jge
jmp
lea
fnstcw
cmp
daa
shl
adc
push
popf
aam
test
test
add
enter
xor
lods
btc
jno
adc
mov
aaa
sub
mov
or
jl
mov
cmp
push
pop
push
jmp
fs
insl
mov
push
lahf
nop
and
pop
gs
dec
cmp
fnstcw
push
sub
jle
jmp
mov
jno
ja
pop
roll
pop
sub
mov
mov
lods
pop
mov
lret
leave
stc
push
inc
add
and
jae
sub
add
pop
loopne
outsb
xchg
xchg
mov
hlt
adc
sub
and
mov
bound
das
sti
pop
adcb
retw
cmpsb
fwait
xor
aaa
pushf
faddp
out
test
popa
sti
and
jl
jmp
loope
mov
cmp
outsb
mov
das
test
push
pop
je
xchg
daa
push
pandn
push
aam
xchg
mov
inc
lods
pop
mov
mov
inc
mov
mov
pop
int
aam
pusha
sub
lods
jns
mov
mov
das
mov
cltd
stos
push
pxor
jns
jecxz
lea
xor
mov
jns
int3
out
push
sbb
adc
push
inc
and
xor
push
bound
mov
add
xchg
mov
cmpsl
add
repnz
mov
daa
inc
dec
mov
aad
sbb
inc
stos
pop
movsb
aaa
push
jl
aaa
mov
adc
push
mov
pop
rorb
int
cld
dec
sti
enter
loop
pop
mov
cmp
sbb
cs
pop
jg
mov
and
rcll
lahf
mov
sub
adc
loopne
mov
std
and
lret
out
scas
mov
das
mov
sbb
lea
leave
stc
xchg
dec
mov
mov
jns
imul
push
sbb
int3
out
mov
sbb
mov
push
mov
lret
dec
adc
mov
and
fcmovne
test
cmp
shrl
and
lds
outsb
dec
sbb
inc
xchg
mov
inc
pop
cmp
cmc
mov
and
xchg
call
jb
and
xor
inc
mov
and
cmp
rol
dec
mov
mov
pop
xor
shl
into
xor
test
jg
xor
adc
pop
int
push
mov
setnp
daa
pop
pop
mov
jge
mov
sbb
out
lea
es
mov
and
cmp
mov
fsts
xchg
lods
out
mov
push
sarl
mov
dec
pop
cmp
mov
pop
fcmovnu
jmp
loop
loopne
pushf
xor
iret
or
arpl
sub
cmpsl
outsb
xor
test
pusha
pop
lds
cld
or
inc
mov
lahf
and
lea
lcall
int3
jne
cmp
int3
aad
mov
mov
pusha
std
jg
xlat
jbe
enter
faddl
call
xchg
mulb
pop
loopne
mov
shll
enter
out
test
or
subl
cmp
xor
jle
shl
dec
xlat
sbb
jp
xchg
mov
popf
movsl
or
sub
loopne
ljmp
verr
pop
jmp
cmp
xchg
ja
sbb
fsubrp
test
cs
jmp
decb
pop
pushf
std
ljmp
sbb
sbb
sub
lds
and
jb
and
dec
xchg
fldt
icebp
in
cli
push
enter
push
rclb
adc
fisubs
ret
jno
enter
mov
outsl
push
or
pop
vpavgw
fidivs
loopne
loopne
mov
sub
int
mov
mov
ret
xchg
xorl
sub
mov
push
rcr
lods
xchg
and
mov
rcr
jb
nop
mov
push
inc
push
mov
mov
lds
inc
lods
cmp
stos
notb
xor
or
jge
pusha
mov
out
out
dec
popf
popf
jl
pop
jg
out
fs
push
sub
cld
and
arpl
fimull
mov
push
xchg
sbb
jle
and
mov
pop
sbb
xchg
dec
mov
inc
js
lods
jg
fscale
push
add
jl
push
xor
jecxz
mov
cmp
aam
push
loope
pushf
cmp
sarl
cmp
in
jmp
cmp
fisttpl
xchg
push
jo
movsb
sub
rolb
dec
lods
pop
inc
test
mov
jmp
adc
shr
insb
arpl
lods
push
shrl
jb
jne
mov
xchg
add
jns
jge
mov
adc
lcall
cmp
push
notl
mov
das
and
rcrl
add
pop
inc
es
or
in
sbb
fsubl
in
and
addl
adc
sub
jmp
push
push
pop
sub
sub
adc
mov
jg
in
or
imul
cmpsl
and
mov
aas
cmp
mov
test
sbb
sahf
xchg
imul
cmp
or
ja
jns
pop
test
pop
jp
jo
fadds
jo
sahf
fstpl
xchg
hlt
jle
jl
mov
jnp
scas
xchg
sub
push
adc
les
out
sbb
xchg
out
orb
mov
pop
mov
cwtl
fwait
mov
popa
lahf
xchg
or
call
sbb
repz
das
enter
stc
sbb
into
call
sbb
mov
and
sbb
xchg
test
mov
sarl
and
and
stc
mov
push
dec
das
mov
jecxz
or
ja
scas
pop
and
add
mov
and
lret
lock
sbb
pop
fs
ss
mov
ret
ficompl
rclb
je
test
mov
mov
sbbb
lcall
pusha
aam
xor
cld
bound
imul
repnz
lods
inc
adcb
mov
sub
pop
into
push
pop
mov
or
fidivl
aaa
xor
pop
and
adc
test
jnp
rcrl
pushf
adc
cli
or
mov
jne
adc
mov
inc
pop
out
das
out
loope
mov
xor
or
test
pop
addr16
dec
xchg
push
add
cs
inc
stos
out
jo
icebp
adc
scas
xchg
das
shrb
scas
je
sub
andb
out
popl
mov
jb
in
fyl2xp1
lods
pop
mov
cmp
push
lods
lock
sarb
fwait
inc
dec
sahf
fdivs
lods
sub
sub
jno
mov
clc
xchg
mov
cmp
jbe
aas
and
mov
and
fsubrl
aad
push
sbb
cli
aas
jecxz
sar
dec
xchg
pop
inc
daa
inc
mov
div
outsl
sbb
cmpsl
xchg
push
fdivrp
jle
jmp
aaa
sbb
mov
pop
cmpsb
lret
jne
movsb
out
cmpsb
add
lret
inc
cli
jge
lea
aas
daa
andl
push
push
jp
dec
push
or
arpl
inc
or
mov
or
cmp
clc
movsb
mov
push
lods
rorl
notl
and
push
in
mov
sub
jge
pop
arpl
push
mov
xchg
arpl
repnz
subl
insl
xor
sbb
aad
jns
sbbb
inc
mov
push
inc
xlat
insb
mov
inc
pop
mov
xchg
sahf
cmp
fsubl
jge
add
dec
in
jne
lock
and
into
jnp
cmp
addb
sbb
and
mov
cmp
xchg
inc
push
mov
jnp
aad
sahf
sub
push
sbb
pop
cmpsb
out
dec
mov
jbe
stos
push
incl
pop
inc
push
aaa
fldt
pop
xor
xchg
mov
sub
add
sub
xor
add
ljmp
sub
cmp
fiadds
imul
add
gs
sbbl
and
or
sarl
cli
popf
ljmp
push
jae
cwtl
loopne
dec
or
xor
insl
fnstenv
or
pusha
dec
frstor
xchg
push
cmpsl
jae
and
lret
cmp
jmp
lea
push
repnz
push
sbb
pusha
std
xlat
enter
hlt
and
pop
inc
popa
scas
mov
and
inc
adc
push
scas
mov
dec
repnz
sbbb
jnp
fiaddl
mov
rcr
int3
sub
jo
pop
fwait
movsl
mov
and
pop
imul
faddl
adc
fwait
xchg
push
or
add
xchg
mov
lcall
mov
loope
or
in
adc
jl
inc
int3
push
lods
scas
out
dec
sub
lret
push
movsl
mov
xchg
or
jge
aaa
lods
xchg
inc
cmp
xor
test
lock
andb
mov
sbb
out
mov
cmp
jmp
mov
sbb
movsb
jmp
mov
jp
scas
or
lcall
jnp
and
scas
aaa
dec
iret
mov
xsaves
and
or
daa
ret
mov
fnsave
arpl
ss
xchg
adc
js
push
or
pop
mov
iret
frstor
out
xor
mov
sub
cwtl
cmpsb
xchg
shrb
out
sahf
push
dec
add
lret
icebp
subl
cld
jo
adc
shll
mov
hlt
xor
jl
movsl
push
jmp
js
mov
mov
cwtl
push
jg
cmp
push
mov
das
sub
clc
xor
rcl
sbb
lea
xor
test
dec
ret
lcall
or
mov
adc
jns
pop
inc
mov
xchg
adc
jmp
or
push
ss
xchg
mov
cmp
adcl
push
subb
sti
dec
enter
call
mov
cmc
into
shrb
ds
call
push
cmp
pop
test
nop
add
dec
add
sbb
jne
cmp
das
jl
cmp
xchg
adc
insb
ljmp
cwtl
xchg
adc
movsl
in
call
mov
test
aas
scas
insb
es
es
jg
mov
or
xor
icebp
lret
jmp
popa
pop
or
mov
cmpsb
cmp
mov
sahf
mov
pminsw
jnp
stc
lods
out
aam
xor
cltd
repz
adc
cmp
jo
sbb
mov
sysenter
and
sub
mov
ret
out
scas
out
lcall
testb
xchg
dec
vpunpcklbw
and
push
js
add
popa
popf
dec
jns
xor
xchg
dec
mov
out
fsubrp
xchg
push
jno
loope
mov
faddl
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fdivr
outsb
add
sti
outsb
add
outsb
