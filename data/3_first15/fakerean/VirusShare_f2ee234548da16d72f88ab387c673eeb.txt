mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
lock
add
jmp
xchg
movsb
add
add
add
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
fildl
inc
add
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
cmp
add
ret
add
movsl
int3
inc
add
mov
add
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
pop
ret
rolb
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
adc
inc
add
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
shl
inc
add
inc
insb
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
insl
roll
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
jne
inc
add
add
inc
jp
add
push
cld
inc
add
fidivrl
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
iret
ret
inc
add
add
cmpl
ret
inc
add
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
and
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xchg
inc
add
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
jbe
inc
add
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
rol
inc
add
push
ja
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
or
inc
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
inc
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
ret
call
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
ud0
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
add
inc
add
cmp
fs
add
add
mov
mov
mov
les
stos
add
filds
add
add
jp
xlat
xchg
cli
add
add
add
cmpsb
mov
call
add
xchg
push
push
push
push
push
push
push
call
lds
into
jmp
add
add
icebp
fxch
add
lcall
je
add
add
add
mov
add
add
out
jle
add
pop
add
imul
jae
aam
leave
negb
add
push
add
lcall
inc
in
push
push
lea
push
push
push
push
lea
push
call
add
add
test
push
mov
lods
add
pop
in
imul
cld
jns
cltd
test
subb
add
jbe
rcrl
add
add
add
enter
add
add
sar
add
add
fdivs
add
add
lcall
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
addr16
add
xchg
add
movl
add
mov
pusha
pop
out
les
shlb
leave
add
leave
xchg
addb
cmc
jmp
add
in
xchg
leave
cmc
mov
add
add
loopne
mov
rolb
xchg
pop
push
sahf
mov
in
loopne
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jecxz
add
cltd
add
pushf
xchg
cwtl
add
out
loopne
rcr
add
add
jne
bound
ret
add
jno
into
loopne
cwtl
add
mov
fldl
jle
mov
sub
pop
push
push
push
push
lea
push
push
push
push
call
movb
pop
add
mov
add
push
scas
add
add
mov
add
bound
add
leave
mov
add
add
icebp
pop
pop
add
clc
add
rolb
jbe
add
add
jns
add
xlat
add
cmpb
lcall
jge
add
call
push
push
push
call
idivl
add
int
add
loopne
xchg
add
fsubr
add
mov
add
mov
add
add
add
popf
test
test
xchg
xchg
pusha
cltd
repnz
jp
mov
add
xchg
sub
pop
push
call
push
push
push
lea
push
lea
push
push
push
push
call
jnp
push
out
add
mov
rorb
ljmp
add
addl
mov
int3
lock
add
iret
add
xchg
push
js
add
mov
pop
loop
mov
std
int
mov
pop
pusha
out
add
add
idivb
in
loopne
jmp
push
push
push
push
push
push
push
call
jmp
mov
movsl
arpl
mov
mov
pop
add
add
loopne
test
xchg
mov
test
cli
jne
push
add
lcall
push
push
push
push
push
call
mov
test
mov
jp
call
jb
jne
add
out
add
add
add
repnz
sub
pop
mov
mov
push
lea
push
push
push
push
push
push
push
push
push
call
mov
out
mov
cwtl
jae
add
add
xlat
add
add
add
add
ljmp
data16
jecxz
xchg
xchg
imul
lcall
imul
cmp
lock
enter
sub
pop
add
add
push
push
call
lock
add
arpl
jl
mov
sar
mov
aad
pop
fs
xchg
add
jnp
lret
add
xchg
pushf
iret
add
scas
add
int3
mov
mov
call
test
in
add
add
ret
popa
inc
add
push
push
call
jno
add
add
jp
add
popa
mov
add
xchg
add
outsl
add
add
pushf
mov
jle
add
add
add
mov
add
add
add
pop
add
add
pop
add
repz
adc
mov
jecxz
sub
push
xor
add
xor
ror
lea
ror
sub
pop
sub
inc
sub
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
imul
push
add
push
add
hlt
add
push
subb
fiadds
out
push
addb
movsl
add
add
testb
out
fistpll
push
add
scas
lods
lods
test
in
fdivr
lcall
jne
call
push
push
push
push
push
push
call
in
jle
jae
stos
mov
add
scas
add
add
add
icebp
add
add
ljmp
add
xchg
lea
mov
lcall
inc
lock
push
push
push
push
push
push
call
push
jns
mov
in
stc
mov
add
add
lods
pop
gs
insb
add
mov
int
mov
add
les
mov
loopne
pop
add
movsl
loop
andl
negb
pop
push
roll
mov
jno
stc
add
jl
add
popf
add
sub
pop
movl
push
push
push
call
xchg
icebp
stos
mov
iret
add
add
cwtl
add
bound
cwtl
mov
add
add
loopne
testb
pop
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
jo
mov
roll
jnp
call
mov
add
add
add
add
data16
add
add
jl
pop
outsl
mulb
add
mov
add
cld
jo
add
lcall
pushl
push
push
lea
push
push
push
push
push
call
std
fildl
nop
icebp
cltd
add
mov
xchg
add
stos
sahf
add
stos
add
rcll
lock
mov
lret
mov
add
pop
sti
jnp
add
mov
rcrl
scas
mov
add
in
in
lcall
jne
push
push
lea
push
push
push
call
out
ljmp
fwait
icebp
push
js
add
xchg
addr16
add
add
jp
add
testb
stos
sahf
icebp
push
xchg
add
xchg
jne
fnsetpm(287
into
ja
imul
mov
ficoms
lret
add
add
add
arpl
std
add
add
add
add
add
sub
pop
call
push
push
push
call
add
imul
bound
js
loop
jns
out
into
fwait
scas
pop
jl
into
push
add
add
movsl
add
pushl
push
lea
push
push
push
call
fdivs
add
lea
movb
js
mov
in
jge
into
jne
add
add
loopne
xchg
ficomps
add
leave
add
int3
push
add
imul
xchg
xchg
add
mov
add
add
lcall
jne
push
push
push
push
push
push
push
call
mov
add
add
add
add
add
add
mov
mov
add
add
add
mov
cmpsl
add
add
lods
stos
pushf
add
outsl
fadds
jle
nop
pop
sub
pop
call
push
push
shr
push
xor
add
add
sub
sub
inc
pop
xor
not
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
fsubp
mov
add
bound
call
lahf
add
jecxz
mov
jbe
jl
add
mov
out
cmpsb
ja
xchg
add
les
fstps
cld
cmc
mov
jno
add
add
add
in
add
lcall
jne
call
push
push
push
lea
push
lea
push
push
push
push
push
call
test
lods
cmpsl
add
add
mov
imul
shr
add
in
iret
addb
add
add
add
pop
nop
jbe
add
add
inc
push
push
add
shl
shr
push
or
inc
add
dec
rol
shr
sub
sub
pop
dec
pop
push
push
push
push
push
push
lea
push
call
sahf
add
xchg
loop
add
push
jbe
jle
xchg
add
add
add
jnp
movl
add
iret
add
xchg
movsl
push
push
add
loop
int3
sarl
test
add
add
add
lods
stos
xchg
movsb
add
add
addl
loop
add
mov
js
insb
cmpsb
fstps
sub
pop
push
push
lea
push
push
lea
push
push
call
testl
fldl
divb
sbbb
add
add
add
add
jp
jo
scas
add
jb
shl
jns
test
enter
xlat
arpl
add
xchg
pushf
in
jge
push
shl
add
add
jle
mov
add
in
add
add
pop
outsl
testl
mov
je
in
in
pop
push
call
push
push
push
lea
push
push
push
push
push
call
add
cld
pop
cmpsl
add
mov
ljmp
stos
add
add
push
lcall
add
popa
out
add
add
ljmp
jl
add
add
add
add
jecxz
in
mov
add
int3
jo
push
mov
jns
sub
pop
mov
push
lea
push
lea
push
call
add
pop
mov
jp
lret
addb
aam
add
add
add
xchg
add
mov
stc
mov
loop
mov
add
add
data16
add
divl
add
xchg
xchg
mov
loop
in
hlt
lcall
push
push
push
call
mov
aam
xchg
add
add
add
xchg
add
pop
movsl
add
jmp
xorb
jae
imul
lds
hlt
add
push
hlt
push
mov
je
loop
jp
stos
iret
add
addb
add
js
add
hlt
lcall
mov
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
mov
jns
pop
mov
add
sti
pusha
jb
add
mov
insb
cmpsb
add
cli
add
add
loope
jnp
xchg
add
add
add
add
add
add
xlat
lock
shll
sub
push
add
push
mov
add
pop
in
push
push
push
push
push
push
push
push
push
call
fcmovbe
lcall
add
add
add
outsl
mov
flds
shl
mov
scas
pop
push
add
cmc
mov
xchg
fadds
add
add
pop
add
in
add
jno
add
add
negb
add
out
mov
add
add
fisttpll
gs
pop
add
push
lea
push
push
lea
push
call
add
add
fiadds
data16
add
xor
stos
push
add
add
lock
add
cmpsl
fdivl
add
addl
or
jmp
pushf
add
scas
add
fsts
lcall
ret
popa
inc
add
push
push
push
lea
push
push
push
push
push
push
call
cli
add
jne
mov
xchg
repnz
add
add
add
pop
bound
cmpsb
stc
out
leave
loopne
xchg
mov
stos
out
add
add
jo
xchg
sub
pop
mov
xor
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
pop
mov
into
add
add
mov
add
add
push
movsb
add
add
iret
std
jl
add
cmpsl
sub
pop
add
push
push
lea
push
push
call
js
add
fadds
popf
test
mov
out
add
fmulp
aad
add
add
add
add
add
add
roll
outsl
scas
negl
add
lock
lcall
push
push
push
push
push
push
push
push
call
add
jmp
add
ja
fstpl
add
out
add
push
icebp
xlat
add
mov
add
add
add
loopne
sub
pop
mov
push
push
push
push
push
call
mov
cltd
add
movsl
movl
add
movsb
add
lods
add
mov
add
lcall
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
popa
addr16
movb
jecxz
push
mov
mov
jae
lea
add
add
add
stos
lods
out
add
add
cwtl
je
jno
add
add
leave
mov
add
add
ror
push
jp
andb
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
rol
add
add
hlt
mov
xchg
xchg
add
scas
scas
add
jne
scas
add
add
sti
stos
pop
lret
add
mov
mov
add
mov
out
jmp
add
ret
xchg
cmpsb
loopne
sub
pop
add
pop
push
push
push
lea
push
push
push
call
add
lock
fcompl
mov
add
pop
add
gs
xlat
mov
movsl
push
addb
add
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
add
mov
add
add
add
jb
mov
stc
push
bound
add
ljmp
add
add
rol
in
loopne
lcall
or
push
push
push
lea
push
push
push
push
call
add
add
add
add
add
add
test
test
add
add
lret
add
add
les
add
add
add
rolb
add
add
add
bound
test
add
push
add
jns
fidivrs
xchg
popl
aam
add
jb
xchg
add
add
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
hlt
int
mov
lds
push
sarb
mov
add
add
stos
add
add
add
add
stos
fistps
cld
stc
lea
add
add
add
nop
fadd
add
hlt
cltd
add
push
push
push
push
push
lea
push
call
add
add
add
add
add
add
out
add
add
mov
add
int3
add
insb
push
add
inc
or
adc
call
out
add
fcmovu
imul
xchg
add
push
out
frstor
add
stc
add
add
mov
iret
push
arpl
push
pop
lock
add
int3
mov
add
mov
out
sti
aam
int
add
lea
clc
lcall
enter
bound
lea
push
lea
push
push
push
push
push
push
call
lcall
stos
mov
add
add
scas
addb
in
out
in
mov
add
mov
in
leave
add
data16
cmpsb
mov
sub
pop
rep
pop
push
push
lea
push
push
push
call
add
mov
add
xchg
jne
mov
add
mov
shl
add
xchg
add
jo
pusha
sahf
add
add
jnp
out
loop
hlt
mov
add
roll
mov
fcoms
add
add
roll
add
cwtl
pushf
xlat
ljmp
lcall
pop
hlt
push
push
call
add
in
add
add
loop
add
add
add
add
add
sti
leave
mov
cld
in
test
xchg
add
add
mov
in
clc
pop
add
add
push
push
push
lea
push
call
add
add
jmp
into
jae
ja
add
add
add
popa
in
add
add
jmp
add
add
in
lock
lcall
ret
popa
inc
add
push
push
push
push
lea
push
push
push
push
push
push
call
mov
mov
jno
add
mov
push
add
mov
jae
push
mov
frstpm(287
add
push
add
flds
mov
stc
sub
pop
mov
xor
push
lea
push
call
sbbl
add
jo
repnz
add
add
add
add
aad
add
mov
mov
sub
pop
mov
xor
push
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
pop
imul
mov
cmc
fsts
shl
sbbb
cmpsb
add
scas
cli
cld
ja
add
mov
add
lahf
push
add
shl
mov
cld
mov
cli
pusha
add
outsl
mov
add
imul
sub
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
push
fdivr
nop
mov
add
test
add
aad
push
jne
imul
cmpl
bound
les
mov
lret
shl
add
pop
repnz
jp
add
add
add
sub
pop
add
push
lea
push
push
call
xchg
rcl
xlat
push
add
add
insb
jge
sahf
int
test
pop
leave
jns
add
mov
lahf
add
testb
iret
sarb
add
std
sahf
add
jno
add
add
add
cmpsl
add
add
add
std
push
add
mov
sarb
add
add
mov
in
hlt
lcall
ret
inc
inc
pop
add
push
shl
not
ror
pop
mov
push
push
sub
push
or
inc
add
shr
add
sub
ror
ror
add
pop
ror
add
ror
pop
push
add
pop
pushl
call
push
push
push
call
ret
add
loopne
push
int
add
add
add
push
mov
xchg
add
fwait
add
add
out
addb
fadds
arpl
shrb
lcall
add
adc
add
push
not
push
sub
add
shr
add
sub
ror
pop
inc
pop
push
ror
sub
pop
push
push
not
dec
inc
rol
pop
push
call
push
push
push
push
lea
push
lea
push
push
push
push
push
call
insb
add
push
stc
hlt
xchg
lea
mov
mov
add
add
shll
add
add
jecxz
scas
mov
add
je
loop
add
sub
pop
mov
push
inc
rol
pop
push
push
push
push
push
push
push
call
divl
xchg
add
add
pop
add
idivb
frstor
mov
clc
mov
add
add
int3
add
add
imul
rolb
cld
pop
add
test
add
fsubrp
clc
push
les
sub
pop
push
push
sub
pop
mov
push
xor
not
sub
pop
add
push
sub
add
xor
pop
add
push
xor
lea
add
pop
add
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
jnp
sti
add
add
add
add
rcrl
cmpsl
add
add
add
add
add
mov
add
fincstp
std
addr16
fcmovnu
ljmp
jecxz
rol
sub
pop
xor
push
push
push
push
push
push
lea
push
lea
push
call
aam
add
loope
jmp
xchg
arpl
mov
rcl
add
ret
ficoml
les
arpl
sub
pop
add
push
push
push
lea
push
push
call
add
add
add
mov
fwait
add
enter
pop
incb
jmp
add
cli
jb
jle
add
add
arpl
add
add
into
add
push
mov
add
push
sub
pop
add
push
xor
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
add
add
mov
jae
repnz
add
pushf
add
mov
mov
xchg
add
ret
sub
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
filds
cmpsb
add
test
aad
stc
push
mov
jl
call
add
xchg
pop
int3
cltd
pushf
add
sti
imul
add
add
jecxz
add
sub
pop
xor
push
lea
push
push
push
call
filds
add
fwait
push
xchg
add
addl
add
scas
pusha
add
into
jmp
add
pop
add
imul
push
rolb
add
les
mov
jns
cmc
add
add
add
leave
js
add
arpl
scas
add
leave
sub
pop
add
push
dec
dec
rol
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
out
add
icebp
add
icebp
aam
sar
add
add
fiaddl
pop
data16
add
data16
addb
jmp
lods
imul
add
in
fcomps
mov
xor
push
add
rol
sub
pop
rep
push
sub
pop
mov
xor
push
shr
add
pop
or
je
mov
push
push
push
lea
push
push
lea
push
call
add
imul
add
popa
cmpsl
loopne
push
in
cwtl
ja
leave
add
add
xchg
add
add
mov
shlb
jb
in
mov
adc
mov
pop
pop
add
add
lcall
xor
push
push
push
push
push
lea
push
call
jecxz
jns
adc
pop
add
xlat
add
data16
fs
add
movsl
pop
movsl
jo
add
add
add
xchg
cmc
push
jnp
js
out
enter
xchg
aam
ja
pop
add
jae
add
pop
pop
addl
add
pop
jle
sub
pop
add
push
push
call
add
add
jnp
xchg
mov
pusha
jl
add
scas
add
enter
cmpsl
call
push
mov
add
lcall
push
sbb
adc
push
lea
push
lea
push
lea
push
push
push
push
call
fadds
pushf
lahf
jb
push
add
jecxz
or
mov
add
fisttpll
add
mov
rcrb
std
push
add
jb
jb
jnp
add
add
mov
pop
xchg
add
jl
add
fldenv
push
pop
mov
sub
pop
add
push
push
lea
push
push
push
push
push
push
call
lret
add
add
jl
fwait
cmpsl
add
add
add
fsubrl
add
mov
pop
add
add
mov
add
add
pop
testb
add
mov
lcall
jne
push
push
push
call
mov
mov
jno
add
nop
add
add
add
add
mov
fadds
pop
add
add
add
gs
clc
popf
js
repnz
in
popf
repnz
iret
add
push
in
cmpsb
add
ja
ret
add
out
push
xchg
add
lods
sub
pop
mov
xor
push
rol
sub
pop
add
pop
push
dec
pop
rep
mov
push
push
lea
push
call
mov
imul
add
popl
cmpsb
jge
shrl
add
jo
jl
mov
bound
add
jbe
sub
pop
xor
push
push
push
call
add
add
mov
fwait
xlat
jp
imul
add
sar
out
add
and
push
shll
pop
add
les
add
push
lea
push
push
push
push
call
in
mov
add
addb
data16
add
clc
lret
icebp
out
in
movsl
mov
mov
mov
pop
add
xor
mov
aam
jge
cltd
jnp
mov
out
rolb
add
mov
cmpsb
push
mov
mov
lcall
leave
je
push
shl
shl
pop
mov
push
sub
rol
add
pop
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
cmpsl
mov
lcall
add
add
pop
pushf
nop
push
popf
enter
cmpsb
add
add
addl
movsb
jge
add
loop
add
lcall
add
out
mov
pop
mov
sub
pop
add
push
sub
add
pop
rep
push
push
push
lea
push
push
push
call
outsl
push
add
mov
add
mov
push
movl
add
filds
add
addb
scas
add
push
mov
pop
push
push
sub
push
xor
add
ror
shr
sub
xor
lea
pop
rol
inc
not
add
pop
push
push
push
push
call
add
add
leave
pop
mov
mov
imul
add
leave
scas
clc
fwait
jo
stos
pusha
add
mov
mov
lcall
mov
push
push
lea
push
push
push
push
push
push
call
add
lea
shrl
pop
jge
in
jnp
int3
add
lock
stos
add
cmc
add
imul
add
rcr
cmpsb
add
add
push
jno
add
add
mov
xchg
hlt
test
mov
clc
xchg
xchg
lcall
jmp
jmp
push
out
movsb
mov
jp
nop
pop
jne
in
loopne
lcall
insl
hlt
push
sub
shr
pop
mov
jmp
push
push
lea
push
push
call
icebp
out
push
add
mov
add
cmpsb
mov
add
push
add
fdivrs
vpcomud
add
jno
mov
pushw
fwait
sar
add
jmp
jp
push
add
add
add
add
xchg
nop
mov
in
lock
lcall
push
push
push
push
lea
push
call
aad
mov
scas
add
fdivrs
jl
ret
jle
pop
shlb
add
jno
out
add
pop
sahf
push
push
js
pushf
leave
mov
lahf
add
add
add
add
add
test
add
add
fiaddl
add
in
push
dec
pop
add
push
push
push
push
push
push
call
std
mov
jmp
outsl
ret
jo
add
frstor
add
sahf
lahf
pop
add
js
lret
lahf
insb
add
add
add
lret
mov
xchg
jl
add
push
mov
test
lret
push
iret
pop
mov
add
add
push
push
lea
push
push
push
call
in
add
rolb
lods
add
sti
popl
xchg
movsl
std
add
imul
jnp
add
test
add
loop
scas
into
bound
add
add
pop
mov
fidivrs
lcall
push
push
push
call
je
add
add
jmp
aad
in
add
add
roll
flds
roll
mov
add
mov
js
cwtl
pop
mov
mov
add
add
call
mov
mov
cmc
add
add
out
mov
xchg
jecxz
add
in
clc
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
leave
jne
arpl
js
cmpsl
mov
add
js
addb
addr16
test
mov
loope
std
ret
aad
rolb
add
mov
ret
pop
add
js
pusha
add
shl
leave
add
add
clc
add
jmp
test
lret
repnz
add
test
in
fcomps
inc
cld
push
push
push
lea
push
call
add
add
out
testl
add
add
mov
jl
mov
add
jmp
mov
xlat
popf
rolb
gs
add
add
add
add
lcall
sub
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
pop
jle
mov
aad
add
insb
push
aam
stos
jo
add
cli
add
pop
cmpsl
add
in
testl
add
fcompl
pop
push
sub
not
ror
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
lods
add
add
jb
mov
in
aad
push
lods
add
fcompl
add
mov
add
push
mov
add
in
mov
data16
movsb
test
add
in
pop
mov
add
in
fcompl
push
push
lea
push
push
lea
push
push
call
jo
pop
add
xchg
sti
std
ret
scas
add
xchg
movsl
mov
mov
mov
frstor
hlt
push
scas
mov
loopne
mov
fsubl
bnd
in
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
in
add
fildl
add
jmp
add
rcl
lcall
add
add
mov
sahf
mov
loop
add
add
into
rolb
rolb
mov
add
cli
bound
push
add
add
rolb
mov
add
lahf
cld
iret
lahf
lret
lock
fisubs
in
in
mov
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
ja
mov
rolb
lock
divb
mov
add
add
add
add
scas
add
movsb
add
filds
movb
xchg
lods
add
mov
push
xchg
xchg
pop
push
sarb
cmc
lret
add
lret
call
in
fdivr
lcall
clc
push
push
push
push
lea
push
push
push
push
call
xchg
cli
add
jmp
add
in
cmpsb
mov
add
add
mov
jns
pusha
push
jge
js
sbbl
mov
in
loopne
lcall
push
push
push
lea
push
push
push
push
push
call
lcall
loop
add
mov
movsb
add
lods
sahf
sahf
add
out
mov
clc
repnz
add
lahf
mov
add
rcr
push
pop
sub
pop
push
push
push
sub
add
pop
push
push
ror
pop
movl
addl
push
add
rol
sub
pop
test
je
push
pop
mov
push
lea
push
push
push
call
andb
add
add
add
ja
enter
push
mov
cmp
add
mov
movsb
mov
mov
add
add
push
rorl
pop
pop
push
sub
lea
pop
pop
pop
push
push
call
add
sahf
ftst
js
imul
add
add
add
mov
add
mov
add
add
aam
arpl
add
mov
xchg
out
xlat
mov
mov
add
add
add
add
add
add
ret
push
push
call
cmpsl
add
mov
xchg
add
add
lods
fadds
shl
out
add
add
lret
add
out
add
sti
sub
pop
push
push
lea
push
push
push
call
xchg
mov
loopne
test
pop
pop
push
add
in
add
add
push
push
not
add
add
mov
lret
aam
jbe
fcomp
add
je
in
mov
out
testb
into
pop
cld
jbe
in
add
in
lock
mov
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
jb
filds
in
jb
add
cld
jnp
sti
add
push
add
loop
add
test
jecxz
add
fldl
ljmp
bound
in
add
jp
xchg
add
testb
jle
push
mov
lcall
cld
push
push
lea
push
push
call
add
pop
scas
stc
push
add
out
add
mov
int3
popf
add
icebp
arpl
add
jae
adcb
add
push
pop
jecxz
pop
jns
in
hlt
lcall
push
push
push
push
push
call
iret
pushf
rcll
add
add
call
jno
add
mov
push
push
filds
fidivs
add
sar
pop
flds
sub
pop
push
push
push
lea
push
push
call
jle
bound
add
pop
add
add
add
pop
jle
fcomps
mov
add
add
lods
iret
add
mov
mov
jns
push
testb
out
push
add
std
int3
add
add
insb
add
pop
testl
addl
push
push
push
push
lea
push
push
call
mov
loopne
xlat
leave
movsl
fiaddl
out
add
add
xchg
iret
add
jnp
mov
add
add
add
push
push
movsb
nop
add
add
mov
in
call
std
cli
call
ficompl
inc
cld
pushl
push
shr
lea
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
loope
add
clc
add
add
lret
xchg
arpl
cld
mov
add
mov
add
push
jne
aad
call
in
fdivr
lcall
mov
incl
test
call
pop
mov
push
push
call
hlt
out
add
mov
mov
fsub
add
mov
insb
leave
int3
out
add
add
add
mov
add
lcall
addr16
shll
add
out
add
fadds
out
in
in
lcall
pop
push
lea
push
push
push
push
lea
push
call
scas
lock
mov
add
add
add
popf
xchg
push
xchg
fwait
add
add
lds
mov
jmp
lock
add
sub
pop
pop
push
push
lea
push
push
push
push
call
add
aam
add
xchg
xchg
fwait
shlb
add
add
xchg
test
xchg
add
flds
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
call
fucom
add
ret
add
add
mov
mov
js
add
add
mov
add
mov
repnz
test
add
add
mov
add
sub
pop
leave
push
dec
pop
ret
push
not
shl
pop
push
push
ror
pop
mov
push
lea
add
inc
pop
add
push
push
push
push
push
call
je
jge
in
cwtl
jno
push
mov
lret
add
pusha
add
add
nop
into
hlt
add
into
push
fstps
out
add
push
pop
lea
mov
popf
push
mov
add
pop
popf
xchg
mov
mov
sub
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
iret
add
stos
mov
cwtl
fadds
mov
lcall
add
mov
lods
add
jge
mov
add
mov
add
stos
loopne
add
push
dec
pop
movl
push
add
not
xor
not
pop
push
push
add
pop
call
push
push
push
call
out
test
add
add
add
cwtl
mov
leave
jmp
add
in
add
test
outsl
lock
in
sub
pop
push
call
push
push
push
lea
push
call
add
enter
clc
add
add
mov
into
in
add
add
lahf
in
mov
add
popa
sti
loopne
mov
add
add
add
push
lods
add
add
add
push
add
mov
xchg
jmp
add
push
jne
fdivrl
lahf
icebp
add
lcall
insl
cld
add
not
rol
pop
cmpl
jne
push
xor
sub
pop
pop
pop
push
pop
pop
push
push
call
xchg
jmp
loope
add
add
loopne
add
int3
shr
cwtl
add
add
in
add
movl
add
sub
pop
pop
push
add
pop
leave
ret
push
sub
lea
add
pop
push
mov
push
sub
pop
add
push
push
push
push
push
call
repnz
add
jp
mov
add
mov
add
add
add
lods
notl
rcr
add
add
aam
add
add
enter
imul
pop
add
add
add
loop
ficompl
repnz
pop
push
push
sub
pop
push
push
add
sub
pop
push
push
ror
pop
push
push
push
push
push
push
call
add
add
add
xchg
add
add
bound
xchg
add
xchg
mov
jge
mov
js
add
add
inc
or
inc
cmp
lea
push
lea
push
push
push
lea
push
push
push
push
call
pop
rolb
add
stc
add
ror
push
mov
add
add
imul
jb
add
loopne
je
repnz
push
jle
clc
add
sub
pop
sub
mov
push
lea
push
call
add
mov
xchg
add
cwtl
imul
add
add
add
out
arpl
pushf
jmp
mov
mov
add
lret
shll
add
mov
jle
add
add
jl
add
add
add
push
add
jp
mov
in
clc
pop
shr
push
push
call
add
add
xchg
mov
add
cmpsl
cmc
mov
out
add
fadds
add
jbe
orb
lods
hlt
aam
int3
add
add
sub
pop
add
push
shl
xor
pop
mov
push
xor
xor
pop
mov
push
push
lea
push
push
push
call
imul
aam
add
data16
add
fdiv
push
cltd
add
add
jne
scas
add
mov
mov
add
mov
push
push
add
cld
jo
roll
testb
mov
pop
clc
add
lcall
inc
or
lea
not
pop
add
push
rol
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
call
xchg
imul
add
movsl
scas
add
cmc
pop
pushf
rclb
popf
addr16
popa
rcr
add
ja
add
add
aad
add
add
pop
jo
sti
lock
add
nop
nop
nop
nop
cmp
jne
push
ror
inc
pop
cmp
jne
push
xor
pop
mov
movl
push
inc
pop
jmp
push
rol
shl
not
pop
mov
mov
push
push
lea
push
call
loope
loopne
in
fs
jl
fs
out
add
in
add
pop
test
ja
cli
movsl
mov
add
add
mov
movl
cld
std
mov
add
orl
ret
shlb
mov
loope
mov
sub
pop
sub
jne
push
lea
push
push
call
in
add
scas
push
add
rol
add
fcom
out
add
mov
mov
in
test
add
add
outsl
lock
fwait
mov
add
test
jae
popf
jae
add
lret
test
les
lcall
addl
pop
mov
push
push
push
push
push
push
call
add
add
add
movl
xlat
add
add
add
mov
mov
xchg
xchg
mov
lret
add
add
add
lcall
add
add
jmp
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
out
flds
leave
movb
in
add
mov
lods
add
lahf
xlat
add
scas
add
add
mul
cmp
neg
jle
outsl
mov
mov
loopne
add
je
jge
add
add
addl
fildl
lcall
inc
cld
push
add
shl
shr
pop
mov
push
lea
push
call
add
incb
les
add
out
jne
mov
push
test
xchg
test
add
add
mov
add
add
add
jecxz
aam
add
mov
cli
add
add
pusha
and
add
ja
pop
loope
enter
lcall
push
sub
pop
cmp
jne
push
sub
pop
mov
movl
push
push
push
call
jp
jmp
add
add
mov
ret
fildl
add
popf
add
enter
add
jl
loopne
mov
mov
in
lods
add
add
xchg
push
add
add
add
fildll
repnz
in
hlt
pop
jmp
push
sub
pop
mov
push
shr
add
pop
cmpw
jne
mov
push
add
rol
pop
movl
push
push
push
push
push
call
out
out
add
xlat
popa
add
jne
lcall
add
add
xchg
add
add
stos
add
test
jnp
add
xchg
int3
push
mov
in
in
lcall
or
add
xor
add
push
add
add
pop
pop
push
shr
ror
pop
mov
mov
push
lea
push
lea
push
push
call
pop
mulb
add
lret
add
jmp
xchg
mov
push
add
lret
add
lea
in
add
shlb
loope
cmc
push
stc
roll
loop
sub
pop
mov
push
push
xor
shr
dec
push
or
inc
add
sub
rol
shl
shr
sub
ror
pop
shl
dec
pop
push
dec
shr
pop
push
call
push
sub
not
add
pop
cmpl
je
push
push
shl
sub
push
xor
add
shr
sub
lea
pop
lea
pop
push
not
ror
sub
sub
pop
push
push
push
push
push
push
push
push
call
add
push
into
pop
mov
roll
add
pop
add
lods
add
imul
add
add
repnz
add
imul
loop
enter
add
mov
call
in
in
call
cmpl
je
push
push
dec
rol
push
sub
add
lea
sub
sub
pop
rol
shr
pop
push
push
push
push
push
call
add
scas
fcmovbe
test
nop
pop
push
mov
fwait
mov
add
push
jne
push
xchg
xchg
xlat
add
scas
pop
add
aad
rorb
roll
add
jno
xor
xchg
add
add
in
in
pop
push
push
shl
dec
pop
call
cmpl
je
push
push
ror
inc
inc
push
push
pop
add
shr
not
sub
lea
lea
pop
ror
pop
push
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
stos
lret
add
mov
add
jns
add
movsb
mov
mov
mov
mov
mov
mov
rorb
add
jnp
add
push
lea
push
push
call
add
lret
movsl
pop
add
loop
mov
mov
xlat
xor
addl
add
ret
xchg
mov
push
add
add
into
add
add
mov
out
mov
add
fnstcw
fstp
out
add
rolb
mov
add
xorl
hlt
pop
cmpl
je
push
push
add
add
shl
push
push
pop
add
sub
sub
lea
inc
pop
sub
not
add
pop
push
lea
add
pop
push
push
push
lea
push
lea
push
lea
push
call
mov
lock
add
shll
add
mov
add
std
add
sti
loopne
push
add
lock
add
xchg
cmp
add
pop
loopne
add
pop
std
jo
pop
xchg
stos
clc
stos
les
negl
add
add
add
xchg
jb
push
mov
push
mov
lcall
inc
add
cmpl
je
push
push
sub
push
or
not
add
sub
rol
pop
sub
lea
dec
pop
push
xor
dec
pop
push
push
push
push
push
lea
push
call
add
cwtl
addr16
mov
add
mov
repnz
ja
lret
movsl
mov
jl
lods
shlb
add
test
testl
add
add
add
mov
add
pop
outsl
roll
xor
shll
cmp
push
pop
cmpl
je
push
push
ror
ror
dec
ror
push
sub
add
rol
sub
add
pop
add
pop
push
push
call
in
push
mov
jae
push
mov
cwtl
lds
pop
pop
add
add
jp
mov
movb
filds
in
add
cmc
scas
mov
sub
pop
push
push
lea
push
push
push
call
pop
add
imul
xchg
add
add
mov
mov
jb
add
jae
sahf
mov
lcall
add
add
add
lcall
fidivs
add
xor
pop
cmpl
je
push
push
inc
push
or
inc
add
sub
xor
add
shr
not
pop
rol
pop
push
push
push
push
call
add
add
leave
fidivrl
add
popf
idivl
mov
jne
outsl
xchg
mov
add
add
mov
push
insb
add
add
mov
data16
popa
jae
add
xchg
xchg
scas
popl
orl
push
pop
call
cmpl
je
push
push
lea
inc
push
xor
add
dec
ror
dec
sub
not
shl
ror
shr
pop
ror
pop
push
rol
inc
pop
push
push
xor
rol
pop
call
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
scas
add
leave
add
add
in
xchg
add
mov
add
push
shl
add
add
add
fwait
add
add
pop
add
push
add
imul
cmpl
je
push
push
push
and
add
sub
add
sub
rol
rol
sub
pop
xor
pop
push
push
push
push
lea
push
push
push
call
push
add
mov
add
add
hlt
mov
add
hlt
ja
cwtl
mov
enter
jae
add
add
add
loope
iret
mov
mov
add
add
add
add
add
add
rolb
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
jb
jo
cwtl
mov
mov
pop
imul
jge
hlt
mov
add
mov
add
add
xchg
jmp
xchg
in
add
hlt
add
mov
hlt
jle
enter
sub
pop
call
cmpl
je
push
push
ror
add
push
and
add
shr
sub
not
add
lea
rol
pop
dec
pop
push
push
push
push
push
lea
push
push
call
mov
jmp
jbe
repnz
ret
add
mov
add
jl
add
pusha
add
mov
add
leave
sahf
call
addb
mov
add
mov
jnp
fldenv
add
add
add
add
out
sub
pop
push
push
lea
pop
call
push
inc
pop
cmpl
je
push
push
add
dec
sub
ror
push
or
inc
add
dec
sub
shl
pop
dec
not
lea
sub
pop
push
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
enter
arpl
add
add
faddl
push
add
std
add
add
testb
pusha
rolb
insb
push
lret
push
push
xchg
hlt
push
add
jle
stos
add
add
test
in
fcompl
adc
inc
shl
dec
sub
pop
cmpl
je
push
push
dec
push
xor
add
ror
ror
sub
add
lea
pop
add
rol
dec
pop
push
push
push
push
push
push
push
push
call
fs
jo
call
add
jecxz
add
pop
add
mov
ja
test
leave
mov
fcmovu
add
test
rolb
add
mov
add
add
jns
in
pop
cmpl
mov
pushf
aam
push
add
jo
add
add
jns
add
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
ljmp
mov
roll
fldl
loop
mov
fldl
mov
mov
mov
faddl
push
add
add
add
lret
test
sti
loop
pop
clc
add
jle
loop
mov
mov
add
in
add
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
cli
xchg
jl
mov
mov
add
in
lahf
add
jb
add
fnsave
add
jb
add
cmc
add
mov
add
imul
gs
add
outsl
jecxz
add
add
fwait
mov
jle
movsb
jl
add
add
cmpsl
mov
add
in
sub
pop
cmpl
jne
mov
push
push
push
push
lea
push
call
add
push
push
mov
add
add
mov
stos
out
add
add
xchg
jnp
add
cmpsl
add
adc
fs
mov
imul
pop
jae
in
in
pop
movl
push
not
inc
pop
jmp
xor
push
dec
inc
shl
pop
pop
pop
push
rol
not
rol
add
pop
pop
push
ror
sub
sub
pop
pop
leave
push
push
push
push
push
lea
push
push
call
add
mov
add
add
add
mov
add
lcall
in
repnz
fadds
push
in
add
out
add
lret
les
jne
add
add
add
in
ret
push
lea
push
push
push
push
call
mov
add
filds
add
jle
lcall
pop
add
add
add
repnz
xorl
mov
push
enter
jns
mov
add
gs
add
push
push
add
in
loop
add
movsl
out
in
in
lcall
push
rol
pop
mov
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
jae
lods
mov
rolb
jns
rolb
lcall
add
mov
mov
cmc
incb
xchg
test
mov
loope
push
sbb
scas
mov
pushf
ja
add
pop
add
mov
jns
loop
add
add
add
mov
roll
pop
cmpl
jne
push
push
not
add
ror
push
push
pop
add
rol
sub
inc
sub
lea
ror
pop
add
sub
pop
push
push
push
push
push
lea
push
push
call
pop
jmp
cmpb
add
adc
push
lds
add
add
lret
add
pushf
sub
pop
pushl
call
push
sub
add
lea
pop
push
push
push
push
push
push
push
push
push
call
pop
mov
jb
into
add
arpl
add
les
add
scas
fucomi
out
faddl
pop
fld
xchg
jbe
fadds
mov
add
add
shrb
addl
push
in
jae
add
add
bound
aad
into
add
in
loopne
lcall
shr
dec
sbb
add
mov
mov
fcmovnb
out
dec
pop
cmpl
je
cmpl
jne
push
add
pop
mov
push
xor
ror
ror
add
pop
call
push
push
add
push
or
inc
add
sub
sub
lea
pop
shr
add
sub
pop
push
push
lea
push
call
push
add
pusha
pop
jae
cli
add
nop
xchg
mov
bound
fwait
mov
mov
cld
mov
mov
arpl
gs
adcl
sahf
mov
mov
sub
pop
pushl
push
shr
pop
call
push
lea
pop
lea
push
push
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
insb
loope
add
add
hlt
sti
mov
cmpb
int
add
cltd
add
add
popf
sub
pop
push
push
push
dec
add
rol
pop
call
push
inc
not
dec
pop
ret
push
push
push
push
push
push
push
push
call
faddl
pop
loopne
xchg
add
int
ret
cltd
add
jbe
in
xchg
push
jmp
add
stos
mov
ljmp
add
mov
fiaddl
je
add
cmpsb
jo
add
lcall
cmpsb
sbb
add
repz
shr
pop
cmpl
jne
push
push
ror
push
or
inc
add
sub
dec
not
pop
shr
sub
shr
pop
push
add
inc
lea
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
add
scas
cmpsb
mov
add
lea
lods
out
jl
data16
fsubrp
lahf
add
hlt
add
add
pop
ja
mov
add
mov
add
hlt
add
add
je
mov
outsl
scas
je
mov
xchg
fsubrs
jae
add
jae
sahf
add
lcall
jmp
add
push
push
push
lea
push
lea
push
push
call
enter
add
mov
jecxz
add
add
loop
fcomps
movb
push
bound
nop
push
loop
stos
add
out
cmpsl
xchg
lods
add
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
movl
movsl
call
aam
push
add
add
pop
add
clc
sarl
ror
mov
aam
repnz
add
add
add
jecxz
in
fdivr
lcall
rclb
push
push
push
push
push
push
call
add
mov
add
mov
gs
jae
data16
lea
sahf
add
add
mov
fstps
pop
add
add
mov
push
fisubs
fmull
mov
jns
sub
pop
jmp
cmpl
jne
push
xor
pop
mov
push
push
push
push
push
push
call
insb
jnp
xchg
xlat
add
enter
lods
out
xchg
mov
add
repnz
addb
add
pop
mov
push
lea
push
lea
push
push
push
call
push
call
add
mov
divl
les
imul
add
pop
add
jecxz
arpl
add
add
add
loope
add
add
jle
add
add
lcall
push
push
push
push
call
add
popf
push
pop
jns
mov
add
in
dec
cmc
out
lret
jp
jmp
rolb
jl
aad
add
xchg
add
add
mov
add
add
add
loop
ror
cld
jge
aam
add
std
aad
mov
cmpsl
repnz
mov
clc
xchg
lods
sub
push
scas
pop
js
add
test
xchg
xchg
movsb
in
add
in
lock
lcall
daa
push
add
push
push
shl
push
push
pop
add
shr
xor
sub
not
dec
add
add
pop
rol
pop
push
push
lea
push
push
push
lea
push
lea
push
call
add
jno
cli
addr16
lds
insb
add
pop
add
add
test
add
add
bound
jno
jge
jmp
add
faddl
add
add
mov
incb
jne
push
xor
add
pop
call
call
push
push
dec
push
or
not
add
add
sub
sub
sub
shr
dec
pop
sub
shr
add
pop
push
sub
inc
pop
pushl
push
push
push
call
outsl
add
popf
in
add
add
out
movsb
add
mov
loop
cli
add
add
push
mov
add
add
fiadds
aad
les
add
cld
add
hlt
roll
add
add
out
jl
mov
sub
pop
call
call
push
push
dec
push
push
pop
add
rol
ror
not
sub
rol
pop
add
add
ror
shr
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
pop
push
sahf
sahf
mov
out
cltd
add
ja
cmpsl
add
add
add
add
imul
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
push
call
jle
cld
mov
stos
add
push
xchg
mov
add
call
pop
int3
add
in
add
push
add
sub
pop
call
push
push
add
add
lea
dec
push
xor
add
lea
sub
xor
lea
pop
sub
pop
push
rol
xor
sub
add
pop
pushl
push
ror
not
rol
xor
pop
call
lea
push
push
push
push
push
push
lea
push
push
push
call
ja
in
add
incb
add
add
add
add
jmp
stc
mov
xchg
fucomp
gs
clc
mov
lahf
add
pop
jns
iret
add
in
fcompl
push
pop
call
push
push
add
push
and
add
rol
sub
ror
add
dec
add
pop
xor
shr
pop
push
push
push
push
push
lea
push
push
call
push
add
push
jmp
mov
add
add
mov
add
clc
fiaddl
add
popf
outsl
add
add
mov
mov
mov
pop
add
fiadds
stos
add
loopne
stos
iret
add
xchg
add
sub
pop
pushl
push
lea
dec
xor
pop
call
push
shr
add
inc
pop
call
push
push
shr
push
or
not
add
add
add
sub
lea
sub
shl
pop
rol
ror
sub
pop
push
push
push
push
lea
push
call
jmp
repnz
sub
add
xchg
test
iret
add
mov
sti
mov
push
add
int
clc
add
notb
add
test
add
in
pop
ja
add
pop
mov
enter
in
pop
pushl
call
push
rol
sub
ror
xor
pop
call
push
push
ror
sub
inc
push
or
inc
add
ror
sub
sub
not
dec
pop
rol
add
xor
pop
push
dec
pop
pushl
call
push
lea
push
push
push
push
call
add
add
aad
stos
pushf
mov
add
nop
add
add
int3
fwait
mov
loop
mov
add
push
pop
cli
mov
push
add
loopne
add
add
loope
in
in
lcall
rorb
ljmp
fdivrs
stos
shr
push
xor
add
ror
sub
shl
shl
pop
inc
pop
push
push
push
call
ficompl
flds
imul
clc
cmpsl
in
loop
jae
add
imull
mov
mov
insb
jae
mov
add
fadds
lods
sub
pop
pushl
push
xor
shl
sub
pop
call
push
push
not
pop
call
push
push
not
add
add
dec
push
push
pop
add
lea
xor
dec
sub
rol
pop
lea
pop
push
push
push
push
lea
push
call
add
mov
add
scas
add
mov
lret
enter
add
add
add
pop
pop
int3
mov
repnz
int3
add
add
js
add
jl
mov
aad
out
lret
xchg
add
xchg
pop
add
in
in
lcall
jne
push
sub
pop
call
push
lea
push
push
lea
push
call
mov
lahf
rcr
cmc
push
add
pushf
add
out
jne
scas
clc
insb
lods
pop
add
pop
lret
fildl
int
loopne
push
insb
cli
mov
add
add
rorb
imull
push
shl
push
or
inc
add
xor
sub
sub
rol
xor
pop
add
pop
push
sub
sub
pop
pushl
push
push
push
push
push
push
call
add
std
cwtl
mov
pop
add
mov
lcall
mov
add
add
pushf
xchg
fdivr
roll
pop
call
push
mov
add
in
call
add
push
push
push
lea
push
lea
push
push
call
movl
in
add
pop
lea
add
clc
enter
out
int3
add
xchg
loop
add
add
sub
pop
pushl
push
push
call
add
fs
mov
add
pop
mov
scas
xchg
mov
fldl
add
add
repnz
in
sti
scas
arpl
xchg
shll
add
add
movsb
push
jp
add
add
xchg
stos
add
add
andb
mov
sub
pop
call
push
push
shl
push
sub
add
shl
sub
rol
shl
not
pop
ror
dec
inc
xor
pop
push
rol
add
add
pop
pushl
push
push
push
push
push
push
push
call
test
mov
add
add
sahf
leave
xchg
add
add
add
pop
jae
call
add
mov
cmc
jecxz
add
add
lcall
lret
add
out
or
push
add
push
and
add
shr
sub
add
pop
not
dec
add
dec
pop
push
push
sub
rol
shl
push
and
add
add
shr
shl
lea
sub
ror
pop
shl
add
pop
push
pop
call
push
push
inc
rol
ror
push
push
pop
add
sub
add
sub
rol
pop
rol
dec
add
pop
push
not
pop
pushl
push
not
rol
pop
call
push
rol
pop
mov
lea
push
shl
lea
pop
lea
push
push
push
lea
push
push
call
mov
stos
sti
add
add
aad
push
mov
xchg
add
mov
ret
push
sub
pop
push
push
shl
pop
push
push
rol
xor
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
pop
add
cli
add
fidivl
repnz
add
add
add
mov
add
addb
cli
flds
add
fistl
add
add
mov
xchg
mov
lret
fsubr
add
pusha
aad
pop
add
aam
fisubrl
roll
add
pop
push
push
push
rol
pop
push
push
lea
push
push
push
push
push
push
call
ja
mov
add
lds
mov
rolb
add
add
sarl
scas
push
add
data16
out
add
add
fwait
jp
mov
ret
in
gs
mov
xorl
test
jae
jp
mov
out
add
fcoml
push
mov
hlt
add
pushl
push
push
call
jl
je
mov
jns
mov
fwait
jae
cld
enter
and
enter
add
add
jno
jb
jle
add
add
mov
add
add
shrb
pop
call
push
push
rol
lea
dec
push
push
pop
add
shr
sub
sub
lea
shr
ror
pop
not
sub
ror
pop
push
pop
pushl
push
push
push
push
lea
push
push
lea
push
call
mov
cmc
jns
add
cld
aam
mov
add
out
mov
sti
add
add
jbe
add
add
mov
std
add
add
jp
pop
jns
test
outsl
xlat
imul
push
movsb
push
add
repnz
add
test
mov
lcall
mov
jecxz
xchg
add
mov
sub
pop
call
call
push
sub
pop
mov
push
shr
ror
pop
pop
push
push
push
call
push
les
add
jecxz
in
add
in
int3
icebp
hlt
push
xchg
lret
mov
add
add
jne
mov
add
add
add
cmpsb
movsb
add
jl
add
add
in
movb
int3
stc
mov
dec
jne
push
add
sub
sub
pop
jmp
push
push
push
lea
push
push
push
push
push
push
call
add
rcl
add
push
add
insb
pop
lods
leave
push
jmp
add
add
gs
add
loope
mov
sub
pop
call
push
push
shr
push
xor
add
dec
sub
shr
lea
ror
add
pop
add
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
cld
in
add
push
jmp
int3
mov
cli
lods
lds
add
lea
mov
add
call
stos
lock
mov
cltd
sub
pop
pushl
push
not
pop
call
push
push
push
call
add
add
lret
mov
sti
xchg
add
cmpsl
mov
jo
jp
mov
rolb
push
mov
add
jge
push
in
add
in
hlt
pop
push
call
push
push
push
call
add
cmpsl
jmp
add
pop
push
add
lret
add
rcl
mov
or
sti
cwtl
in
cld
mov
rcrl
pop
add
cmc
push
rcr
add
add
add
add
int3
add
add
push
mov
push
add
mov
fstp
mov
jmp
data16
sub
pop
mov
push
add
pop
lea
push
push
xor
add
push
sub
add
sub
ror
sub
dec
pop
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
xchg
fwait
add
sti
push
add
add
mov
fildll
add
mov
add
xchg
int3
mov
into
imul
jne
mov
mov
incb
xchg
add
mov
add
mov
xchg
aad
add
add
add
add
pop
nop
test
in
fdivr
lcall
jne
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
jl
lahf
add
add
add
add
mov
pusha
out
into
jnp
add
xchg
add
pusha
add
add
add
roll
add
std
sub
pop
push
push
xor
pop
call
push
push
xor
push
and
add
sub
sub
shr
dec
xor
pop
not
add
pop
push
push
push
push
call
add
jo
movsl
add
add
xchg
mov
jns
cltd
cmpsl
add
movsl
rolb
add
add
add
mov
loope
arpl
mov
add
pusha
add
add
jne
lea
mov
add
lcall
jne
push
push
push
push
call
ret
addl
pop
mov
imul
popf
mov
mov
mov
jp
xchg
jae
sti
add
add
sub
pop
call
call
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
cltd
jno
fsub
xlat
add
add
into
add
add
rolb
out
insb
add
add
mov
add
cld
pop
jbe
testb
add
add
nop
add
stos
add
add
add
mov
pop
xchg
cmc
jl
add
lcall
inc
cld
push
sub
sub
pop
lea
push
push
add
xor
push
and
add
sub
add
sub
pop
xor
sub
pop
push
sub
sub
dec
pop
pushl
call
push
lea
push
push
call
xchg
rolb
add
scas
add
mov
jmp
pop
aam
add
add
push
lods
shrl
pop
icebp
add
add
out
cmc
pop
hlt
in
push
xchg
lret
mov
xchg
jmp
cli
test
xchg
add
mov
hlt
imul
add
popl
add
add
pop
imul
in
hlt
lcall
add
push
shl
shl
pop
push
push
lea
sub
rol
pop
push
push
push
rol
xor
pop
pushl
push
push
push
sub
add
inc
ror
not
sub
ror
shl
pop
sub
add
sub
pop
push
shl
not
add
shl
pop
push
push
push
push
push
push
push
push
call
add
aam
add
push
popa
test
add
add
jno
repnz
int
rorb
add
mov
xchg
ficompl
addl
jo
loop
add
lock
nop
mov
lock
add
add
mov
jno
addl
pop
sub
pop
call
push
push
shr
push
push
pop
add
add
not
dec
inc
sub
inc
pop
shr
pop
push
push
push
push
lea
push
push
lea
push
push
call
push
mov
mov
lcall
add
loopne
mov
out
mov
pop
call
clc
add
in
mov
data16
jecxz
add
add
add
imul
xchg
add
add
add
add
data16
pop
addr16
test
add
jne
push
xor
not
shl
pop
call
push
lea
push
push
push
call
jne
push
iret
hlt
jnp
pop
enter
add
int3
add
xchg
fldl
arpl
push
lcall
lret
add
outsl
pop
add
add
clc
cmpsb
iret
add
lods
js
lret
cmc
enter
push
add
add
add
mov
hlt
nop
loop
mov
cmpsb
insb
repnz
mov
in
lock
lcall
call
push
lea
push
lea
push
push
call
stc
add
add
add
mov
jle
add
add
jbe
pop
xlat
mov
add
add
insb
add
xlat
outsl
mov
cmc
scas
add
cli
add
mov
pop
mov
push
xchg
into
add
jl
add
xchg
add
add
pop
lahf
push
int
in
in
lcall
shrb
push
rorl
or
not
add
not
shl
xor
sub
add
sub
pop
xor
xor
pop
push
shl
pop
pushl
push
xor
ror
xor
pop
call
push
sub
pop
call
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
sub
mov
add
cltd
jae
outsl
jp
lahf
add
mov
lods
add
je
pop
lock
add
mov
jno
mov
loope
mov
add
lcall
jle
add
push
dec
pop
pushl
push
push
push
push
push
push
push
call
sahf
pop
stos
out
pop
popf
xchg
add
push
mov
addl
add
testb
pop
add
add
add
add
mov
andl
add
jecxz
hlt
jno
add
add
add
jo
lahf
add
mov
insb
rcll
lcall
mov
push
rol
add
pop
jmp
push
push
lea
push
and
add
dec
xor
sub
inc
ror
sub
shr
pop
ror
pop
push
lea
push
lea
push
call
les
add
add
rcr
add
cmpsb
push
out
add
frstor
add
mov
lock
rcr
test
ret
arpl
add
add
add
jno
jecxz
fcomps
out
mov
jecxz
in
hlt
lcall
jne
push
rol
sub
pop
call
push
push
lea
push
push
push
lea
push
call
pop
xchg
popl
cld
add
out
add
add
add
fnstcw
in
loope
add
aad
add
xchg
add
add
xchg
push
cltd
add
add
lds
in
in
lcall
shrb
mov
xlat
push
xor
inc
push
and
add
lea
add
add
sub
add
sub
shr
pop
add
shr
pop
push
push
push
call
icebp
stc
jmp
add
xchg
pop
add
add
roll
add
add
add
mov
cltd
add
push
push
add
add
lcall
jne
push
push
push
push
push
push
push
push
call
add
scas
add
mov
nop
push
add
jmp
popl
incb
stc
aam
jecxz
add
stos
add
fs
add
add
pop
movsb
loope
add
sub
pop
call
push
inc
sub
pop
push
call
push
sub
xor
dec
pop
leave
push
add
dec
lea
pop
add
push
shl
sub
ror
pop
pop
pop
push
push
push
push
push
lea
push
push
call
push
mov
mov
jne
add
push
call
jp
add
rcl
add
cmc
add
add
in
in
pop
push
sub
pop
pop
leave
push
push
push
push
call
add
andl
add
add
add
lock
add
xchg
mov
in
loopne
loop
add
add
add
test
popa
jecxz
add
int
jecxz
lods
push
out
add
add
hlt
in
add
push
add
jne
add
stc
pop
add
lcall
les
push
push
push
push
push
push
push
lea
push
call
and
add
add
add
pop
add
fsubs
pop
add
add
subl
jne
je
mov
add
push
push
push
push
push
push
call
arpl
rolb
arpl
add
mov
add
rolb
jno
add
add
iret
push
outsl
add
lods
cmc
scas
out
add
mov
mov
add
add
pop
icebp
mov
jge
add
data16
sub
pop
leave
push
lea
pop
ret
push
inc
add
shr
not
pop
push
mov
push
xor
pop
cmpl
jne
mov
push
push
push
push
call
loope
movsb
add
scas
stos
mov
add
hlt
add
loope
sahf
mov
lret
jmp
add
xorb
xorl
add
scas
out
jne
add
add
add
movl
shll
int
add
rolb
leave
add
lcall
jno
add
push
inc
xor
rol
pop
mov
push
push
push
push
call
fisttpll
add
leave
add
mov
mov
add
call
mov
add
add
xchg
add
rorb
add
add
fists
add
add
mov
and
xor
push
push
push
lea
push
call
add
arpl
lods
pop
iret
xchg
ljmp
icebp
add
xorl
add
add
sahf
test
add
xchg
jns
shrl
lock
xor
add
push
push
push
lea
push
push
push
push
push
push
push
call
pop
lcall
add
push
pop
add
add
add
outsl
and
add
in
je
add
bound
pop
movl
add
jecxz
mov
sub
pop
xor
dec
push
xor
shr
inc
pop
sub
jmp
push
rol
pop
sub
push
lea
push
push
lea
push
call
add
lods
mov
add
add
add
add
add
mov
mov
repnz
push
add
jne
cmpsl
xchg
add
popa
add
add
add
pop
add
fcmovne
pusha
add
add
clc
flds
mov
in
lock
lcall
xor
fcmovb
ret
lods
pop
pop
push
push
push
push
push
push
lea
push
push
call
pop
jns
in
add
mov
jecxz
push
test
scas
add
mov
rclb
icebp
mov
stos
aam
mov
xchg
mov
mov
sub
pop
sub
push
pop
cmp
jne
push
push
push
call
mov
data16
pop
mov
mov
mov
into
sub
lret
icebp
loope
loopne
push
pop
roll
add
push
push
subb
add
add
pop
push
add
scas
out
mov
pop
push
add
fidivrl
pop
lret
add
in
hlt
pop
mov
lea
push
push
lea
push
push
lea
push
call
out
add
shll
mov
add
add
pop
jle
add
vpunpckldq
add
data16
out
test
cmpsl
pushf
movl
add
push
mov
add
push
add
in
in
pop
sub
push
rol
not
pop
mov
push
add
add
pop
shr
push
sub
lea
sub
not
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
add
jb
jo
scas
ror
leave
call
jp
jecxz
add
add
add
fwait
add
lcall
jmp
xor
xor
stc
push
lea
push
push
push
lea
push
push
call
mov
add
lahf
add
in
out
into
add
test
jno
addr16
add
fs
int
addb
mov
sti
push
arpl
movsl
scas
add
mov
rclb
ret
add
mov
add
in
loopne
pop
push
push
call
stc
add
push
push
leave
stos
add
add
test
test
cmpsb
scas
add
addb
add
aam
mov
testl
loop
rolb
add
add
movl
out
add
mov
sub
pop
shr
push
push
push
push
push
call
add
add
ljmp
add
xchg
add
push
add
stc
add
add
arpl
add
add
xchg
std
jne
cmpsl
pop
imul
mov
rcr
add
mov
xchg
test
add
add
xchg
leave
lret
adc
add
sub
pop
and
push
shr
xor
sub
pop
sub
cmp
jne
push
push
push
call
add
addb
add
cwtl
xchg
pop
aam
add
add
xchg
add
lcall
lock
add
add
push
add
sti
movb
add
lahf
lret
add
add
add
leave
push
lcall
ret
push
shr
ror
sub
rol
pop
push
mov
push
sub
xor
pop
add
push
push
shl
dec
xor
pop
push
push
pop
push
push
push
push
call
add
add
push
jmp
jp
add
test
add
add
fwait
add
push
pushf
add
hlt
mov
add
add
add
mov
mov
fisubs
out
mov
add
cmpsl
sub
pop
push
push
push
push
lea
push
call
jo
add
std
add
add
hlt
add
add
add
lret
add
fsubrl
jnp
add
lds
add
push
in
in
hlt
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
test
mov
add
add
faddl
addb
jp
push
add
pop
jb
add
add
add
pop
in
xlat
fmuls
movsl
add
rol
cltd
ljmp
add
cmc
nop
add
add
lods
add
add
jp
in
fdivr
lcall
push
cmp
pop
sub
mov
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
fdivs
roll
into
out
jle
imul
jp
jl
push
mov
fstps
xchg
pusha
outsl
push
add
loope
popf
testl
pusha
add
ljmp
fucomp
pop
add
add
in
mov
js
add
shlb
mov
add
lret
faddl
mov
out
add
out
stos
add
test
add
lahf
movsb
loop
cli
cmpsl
add
cld
cltd
add
mov
add
add
test
testl
jo
jb
into
mov
rolb
ficoml
shlb
pop
mov
push
dec
sub
pop
add
push
push
call
pop
xchg
in
add
add
add
add
add
add
add
add
int
add
fwait
add
std
add
imul
fcomps
add
add
rcrb
gs
add
imul
add
in
sub
pop
mov
push
rol
add
sub
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
push
add
mov
add
add
cld
push
add
shr
loop
add
jecxz
xchg
in
out
cmpsl
push
mov
rcrl
add
add
add
add
mov
mov
sub
mov
add
mov
xor
mov
push
push
push
push
push
call
mov
mov
add
pop
add
aam
je
add
out
mov
into
add
stos
add
add
add
movsb
mov
mov
ret
sti
add
out
mov
add
mov
mov
add
mov
add
and
push
push
call
push
jbe
xchg
add
mov
jl
jns
lcall
lret
add
repnz
xchg
mull
sahf
xchg
rolb
and
hlt
pop
and
push
call
int
push
add
out
subb
xchg
add
testl
out
pop
ret
add
jle
add
mov
hlt
add
mov
out
int3
mov
addl
xchg
push
sub
pop
rol
push
shl
dec
dec
pop
xor
inc
push
xor
not
inc
pop
cmpb
jne
push
lea
push
call
add
hlt
popa
add
scas
jl
mov
lahf
push
popa
loopne
add
in
add
xchg
into
xchg
rol
incb
jne
add
je
std
fists
test
icebp
jne
lods
in
jnp
roll
sub
pop
add
push
push
call
mov
add
push
je
in
jp
jle
add
lds
mov
add
call
loopne
push
lahf
mov
sahf
out
add
clc
lcall
inc
or
test
ret
adc
ror
dec
pop
cmpl
jne
push
push
push
lea
push
call
push
add
add
fmull
mov
mov
mov
add
jecxz
scas
add
add
mov
add
add
xchg
fldl
rclb
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
pop
add
add
test
xchg
xchg
add
add
push
jb
add
rolb
js
add
add
sub
pop
pop
push
sub
pop
pop
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
faddl
sti
addl
add
mov
lock
fadds
aad
add
aam
scas
roll
aad
jmp
add
add
add
aad
add
mov
jns
bound
xchg
add
scas
jb
lret
pop
mov
add
add
add
imul
pop
leave
ret
push
push
push
push
call
fs
fiadds
add
pop
aad
add
push
add
outsl
mov
add
xchg
repnz
in
imul
iret
sahf
mov
add
sti
scas
jns
add
mov
push
adcl
lahf
add
xlat
cmpsl
add
leave
add
aam
add
add
add
cli
add
add
in
lock
mov
push
sub
not
rol
pop
add
push
shl
pop
push
push
push
lea
push
push
push
push
call
mov
mov
jl
mov
add
repnz
add
mov
pop
add
mov
bound
shl
cmpsb
mov
add
add
add
roll
add
add
cmpsl
add
add
scas
add
lcall
push
sub
inc
pop
add
mov
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
sahf
icebp
add
lods
bound
std
add
xchg
add
rclb
cmpsb
push
stc
mov
mov
nop
jae
mov
add
add
xchg
mov
lcall
testl
push
lea
push
push
push
call
fiaddl
out
add
jnp
add
add
add
push
ja
mov
mov
add
iret
add
add
iret
movsb
add
cmpsl
addr16
add
fcoml
sub
pop
pop
push
push
lea
push
call
add
add
cmpsl
add
mov
add
scas
insb
out
scas
add
stos
test
add
stos
add
add
in
hlt
lcall
add
xchg
mov
push
push
call
mov
pop
gs
lds
add
mov
shlb
add
flds
test
add
rcr
lea
test
push
addr16
out
in
hlt
lcall
call
push
push
push
call
nop
add
pop
jae
enter
cli
add
add
out
add
lods
mov
out
divl
pop
add
flds
loop
add
add
add
out
test
add
roll
call
insb
jecxz
sub
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
loope
test
xchg
push
jno
push
fcmovbe
add
fcomps
outsl
shll
pop
rolb
add
add
add
incb
fiaddl
movsl
enter
subl
push
aad
ficomps
add
jns
add
xchg
movb
cmc
add
add
ja
in
fcomps
push
push
push
push
call
add
mov
lods
lea
enter
add
sti
movsb
jle
jne
mov
out
pop
jl
add
add
sti
push
js
int
movsb
mov
pop
gs
add
fiaddl
fs
mov
add
gs
xchg
add
mov
je
pushf
xchg
jne
imul
add
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
popf
mov
jb
shl
mov
mov
cltd
f2xm1
cld
mov
popa
jnp
add
add
mov
add
fsts
add
lcall
push
sub
ror
not
add
pop
pop
pop
push
xor
pop
leave
push
push
push
push
push
call
rolb
sahf
pusha
jp
add
add
mov
add
add
pop
jle
xchg
add
int
mov
pop
add
test
mov
add
pop
scas
add
jnp
data16
ja
int
add
lea
int3
add
pop
push
add
pop
sub
pop
ret
push
push
not
pop
mov
push
xor
dec
pop
add
push
push
push
push
lea
push
push
push
call
add
std
ljmp
jnp
roll
add
popl
pop
xchg
add
pop
pusha
push
mov
in
in
push
push
push
add
sub
not
pop
push
push
shl
dec
pop
push
mov
push
add
sub
shl
pop
push
push
push
push
push
call
add
add
pop
cli
add
add
cld
pushf
mov
je
add
movsl
pop
loop
add
mov
add
push
add
pushf
push
add
mov
pop
xchg
mov
add
hlt
lret
shr
add
sub
pop
pop
lea
push
shl
pop
sub
push
push
push
lea
push
lea
push
push
push
push
push
call
stos
mov
loope
rolb
mov
fnstcw
xchg
add
add
add
xchg
mov
out
in
mov
fwait
cli
cld
scas
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
add
jecxz
jnp
shll
add
iret
add
leave
mov
add
pusha
add
pop
add
cmc
add
add
shlb
add
loopne
out
cwtl
out
cmpsw
cwtl
add
add
ljmp
add
add
push
push
in
cmpsb
popa
out
arpl
out
mov
fildl
addr16
jno
add
xorb
add
add
add
add
pusha
mov
push
add
xchg
sar
add
push
push
xchg
add
add
add
mov
push
add
scas
add
in
add
filds
sub
pop
add
push
xor
pop
mov
add
push
lea
push
push
push
push
push
push
push
push
call
movsl
add
iret
fiadds
leavew
cmpsb
add
lret
add
lret
add
test
push
ja
popa
mov
insb
out
sti
add
mov
loope
add
sub
pop
pushl
push
shl
rol
pop
popl
push
push
call
add
add
xchg
xchg
mov
add
aad
xchg
xchg
jge
faddl
iret
mov
popa
mov
mov
add
lcall
jnp
push
add
rol
inc
pop
add
push
push
push
call
add
jnp
xchg
popf
add
popa
add
add
add
bound
lds
scas
testl
cld
out
add
xchg
add
clc
fcmovnu
add
xchg
xorb
rorl
fisubs
mov
add
mov
hlt
lcall
notb
shr
pop
lea
push
ror
sub
pop
mov
add
push
sub
rol
dec
pop
xor
push
xor
pop
rol
push
not
add
sub
pop
nop
push
push
push
push
call
stos
pop
addr16
add
cwtl
add
sub
test
int3
lret
lret
sarb
add
add
int3
mov
add
out
jno
add
xchg
add
mov
pop
mov
test
xchg
jnp
fistps
jp
add
mov
in
lock
lcall
push
dec
rol
xor
pop
xor
nop
push
push
push
push
push
push
push
push
lea
push
call
add
mov
test
rcrb
lea
add
add
out
int3
arpl
add
mov
loopne
mov
sub
pop
nop
inc
push
sub
ror
pop
nop
push
lea
push
push
push
lea
push
lea
push
push
call
add
loopne
xchg
cltd
add
add
add
leave
jns
filds
add
sti
add
cmpsb
scas
add
add
pop
jmp
add
push
arpl
add
cli
mov
std
je
add
add
jl
in
in
lcall
push
sub
pop
cmpb
jne
push
xor
pop
add
push
xor
not
pop
nop
push
push
lea
push
push
call
add
ret
jne
fildl
add
add
jl
add
out
add
repnz
add
add
add
add
jmp
movsl
add
iret
js
push
pop
cld
add
lcall
cmp
je
push
sub
sub
dec
xor
pop
nop
nop
push
lea
push
push
call
add
add
lods
fcoms
rcl
add
add
xchg
add
add
stos
mov
imul
add
pop
jecxz
fcoms
add
add
add
add
aad
scas
jnp
mov
xchg
out
xchg
imul
sahf
add
mov
loope
mov
fldl
lcall
nop
push
lea
not
ror
pop
nop
cmp
jb
push
push
push
push
push
call
add
push
mov
mov
push
in
jb
loop
stos
jp
add
mov
into
fs
addl
add
xchg
iret
add
rol
sub
pop
xor
push
lea
push
call
mov
add
xchg
mov
push
jae
mov
clc
jmp
add
xchg
add
mov
add
mov
add
into
ja
jle
stos
jp
add
jno
mov
add
add
gs
add
add
add
add
cmc
add
mov
add
sub
pop
jmp
push
sub
pop
mov
push
push
lea
push
push
push
call
xchg
push
mov
add
xchg
loope
incb
jo
icebp
add
test
add
add
je
add
mov
scas
add
pop
add
add
out
rcl
mov
add
iret
mov
loope
bound
lcall
rcll
ret
testl
mov
jb
add
rol
add
pop
mov
add
push
sub
inc
add
not
pop
mov
xor
push
pop
xor
shl
push
rol
shr
sub
pop
xor
push
push
push
lea
push
call
add
xchg
xchg
add
add
mov
out
lea
addl
sti
mov
add
mov
push
ljmp
iret
aad
add
add
stos
hlt
add
int
cld
pushf
sub
pop
shl
push
dec
pop
xor
push
inc
sub
pop
shl
xor
push
push
push
push
push
push
push
lea
push
call
incb
jle
leave
lock
add
mov
jo
jbe
jle
add
jmp
add
mov
jp
icebp
out
mov
scas
add
jmp
sub
pop
mov
push
push
push
call
rcll
add
add
xchg
mov
push
call
add
add
add
ja
les
add
add
cmc
jb
test
loop
mov
mov
add
push
pop
add
aad
add
hlt
lcall
inc
hlt
push
sub
lea
not
pop
pop
push
push
call
pop
jb
mov
mov
add
push
add
fiaddl
add
pop
jp
pop
iret
mov
not
mov
add
add
add
jmp
add
add
mov
cmc
repnz
add
xorb
add
fldl
mov
lcall
push
push
push
push
lea
push
call
pusha
jge
add
loopne
add
pop
gs
add
mov
add
mov
jns
fs
out
pop
subb
add
lcall
push
ror
pop
pop
push
push
push
push
push
call
add
aam
pop
jmp
test
jle
mov
movsb
push
sahf
in
add
push
add
add
add
call
add
pusha
add
add
mov
rolb
movsb
in
test
add
ljmp
add
xchg
andb
jb
add
sub
pop
leave
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
jnp
add
add
add
into
imul
test
pop
pop
add
add
popa
jne
fildll
add
loope
sahf
out
add
add
add
pop
xchg
add
add
or
push
push
add
pop
mov
push
shl
pop
push
push
push
lea
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
push
movsl
andb
jbe
rcrb
in
ja
add
add
lret
insb
push
mov
lock
shlb
push
mov
mov
cld
cmpsl
arpl
add
stc
mov
loopne
lcall
dec
or
adc
ret
push
lea
pop
mov
test
je
push
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
loope
add
add
add
xlat
shrl
popf
aam
add
fstp
rorl
add
roll
add
mov
test
je
push
not
sub
dec
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
cli
add
add
add
in
add
add
add
jnp
add
mov
add
jmp
mov
mov
cmc
mov
jecxz
clc
xchg
add
xchg
incb
out
shrl
add
mov
testl
or
sub
rol
shr
pop
mov
inc
push
add
lea
pop
cmp
je
push
push
push
lea
push
push
push
push
call
stos
jmp
lcall
iret
arpl
xchg
add
add
imul
mov
add
add
mov
xlat
sahf
test
add
add
sahf
xchg
std
sub
pop
test
je
push
sub
pop
mov
inc
push
shr
dec
add
pop
cmp
je
test
jne
push
add
ror
pop
xor
push
add
add
add
pop
pop
pop
push
push
push
push
call
add
loopne
push
mov
clc
add
roll
mov
lcall
jmp
add
cli
add
jnp
push
add
xchg
jo
movb
jp
push
jbe
add
out
add
add
add
mov
add
xchg
scas
mov
icebp
jns
add
pop
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
push
push
mov
ljmp
add
mov
add
ljmp
add
out
rcl
iret
adcl
xchg
add
add
fiadds
add
pop
pusha
add
add
add
arpl
in
fcompl
ret
push
push
lea
push
lea
push
push
push
call
call
les
pop
mov
add
lahf
add
add
add
lret
stos
push
jb
add
pusha
ljmp
fadds
add
cmpsl
fdivp
add
add
pop
hlt
add
add
add
xlat
jp
mov
add
add
sub
pop
mov
push
ror
pop
inc
push
shl
add
pop
cmp
jne
lea
push
lea
push
call
mov
add
add
in
leave
add
add
lea
add
mov
add
negl
lods
add
add
jo
add
add
lcall
popa
add
dec
ds
push
push
push
push
push
push
call
add
add
mov
add
add
aad
ja
lods
add
addb
add
add
pop
cmpsb
out
mov
add
pop
add
mov
add
add
add
xlat
add
bound
pop
add
mov
stc
aam
mov
in
in
lcall
in
test
add
add
iret
add
pop
add
push
lea
push
push
push
push
push
call
in
fwait
jmp
add
jo
mov
loopne
add
add
mov
cmpsb
push
mov
mov
add
mov
call
add
stc
mov
add
add
add
add
test
mov
jb
add
cld
arpl
xchg
js
pusha
mov
lods
add
add
add
add
testb
pop
cmp
jne
push
pop
mov
push
not
shl
sub
dec
pop
test
je
push
not
shr
ror
pop
mov
add
push
shl
pop
cmp
je
push
pop
jmp
xor
push
pop
pop
pop
push
push
push
push
push
push
call
mov
ret
pop
pop
add
add
fwait
lea
sti
add
iret
jnp
addb
fadds
push
add
cmpsl
xchg
jge
add
add
lret
add
mov
outsl
add
movsl
out
fsubs
add
add
add
mov
aam
in
call
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
push
in
add
add
xlat
subl
imul
add
add
add
pusha
add
cltd
popf
add
add
gs
add
add
add
fwait
mov
scas
push
lock
les
rclb
push
sub
pop
leave
push
push
push
push
push
push
push
push
call
add
add
jo
add
roll
lahf
add
jo
add
arpl
clc
mov
mov
add
add
cwtl
call
add
add
add
loopne
ret
push
pop
lea
push
rol
pop
pop
push
lea
push
call
add
add
add
fcmovnu
lret
mov
add
add
add
xorb
adcl
idivl
add
hlt
mov
add
add
sarl
xchg
out
mov
add
movsb
mov
lret
add
add
mov
sub
pop
pop
push
shr
pop
pop
push
dec
add
pop
pop
leave
push
shl
pop
ret
push
push
push
call
popa
fs
mov
add
add
mov
loope
mov
cwtl
mov
clc
mov
stos
add
add
add
aam
jle
add
sub
repnz
pop
mov
push
not
add
lea
pop
pop
pop
push
ror
rol
pop
pop
push
push
lea
push
push
call
test
push
stc
mov
mov
jno
insb
lods
add
in
pop
add
add
add
icebp
sub
pop
pop
push
push
push
push
push
push
call
cmpsl
call
push
add
popa
add
add
lods
jbe
add
add
in
add
jne
add
mov
out
mov
add
add
add
mov
add
push
add
add
pop
ret
xor
cmp
ja
cmp
xor
adc
and
adc
pop
cmp
stos
icebp
cmp
xor
adc
jb
adc
cmp
mov
fisttpll
sbb
out
mov
dec
popf
xor
fistps
js
pop
daa
popa
push
in
addr16
pop
mov
inc
aam
push
inc
cmp
mov
xlat
cmp
stos
fwait
repnz
lods
and
call
push
insl
loopne
and
andl
adc
inc
call
shll
sub
cmp
mov
pop
dec
cmp
xchg
jne
pop
scas
pop
ss
dec
divb
pusha
stos
fs
pop
or
jnp
in
sbb
dec
or
pop
mov
push
jns
mov
add
clc
fnstenv
ret
outsb
push
dec
xor
inc
cld
sub
pop
mov
xorb
mov
imul
insb
inc
xchg
jmp
cmc
mov
scas
ret
and
sub
xlat
lds
ret
dec
fcomps
and
repz
mov
ret
sbb
dec
mov
out
jmp
mov
push
jg,pn
jo
adc
add
lret
sub
cmpb
and
mov
cmp
and
xchg
mov
and
jecxz
cld
decb
fsubrl
ja
lds
cmp
xlat
xor
iret
and
push
cwtl
movsl
adc
add
or
pop
pop
lret
aam
dec
out
xchg
arpl
scas
inc
das
mov
adc
in
cmp
into
and
dec
adc
lock
jg
xchg
out
mov
mov
int3
loop
aaa
test
jge
jg
stc
mov
sub
test
push
push
mov
jnp
sbb
test
aas
and
or
mov
aam
pop
jl
nop
lcall
fsubl
inc
inc
scas
dec
jne
mov
inc
cmp
mov
lods
inc
jg
dec
in
and
lahf
std
imul
inc
push
je
jl
lcall
ljmp
ficoml
sub
outsl
mov
and
adc
cmp
push
pushf
inc
adc
lcall
arpl
sar
shl
test
es
xchg
xchg
imul
cwtl
ljmp
jne
aaa
dec
pop
xchg
mov
inc
aas
icebp
push
lret
pop
sarb
or
jmp
mov
add
andb
xor
icebp
push
jmp
push
je
pushw
ljmp
js
jmp
jge
xchg
mul
push
or
fiadds
test
jmp
or
sbb
clc
mov
push
xchg
cmp
xor
std
aaa
jl
push
jne
loopne
add
outsb
dec
clc
lahf
addl
cmp
negb
cmp
aam
xorb
shl
xor
cs
jmp
sbb
sbb
inc
pop
sbb
stc
fwait
test
mov
pop
daa
mov
add
mov
ds
or
xor
lret
mov
push
dec
mov
jns
adcb
jb
cmp
push
jmp
addl
xor
mov
mov
gs
pop
pop
cli
add
mov
lea
arpl
outsb
nop
mov
sbb
js
add
sti
enter
add
fsts
mov
cli
mov
jg
cli
cmpsb
push
push
or
inc
mov
js
sub
aas
mov
cmp
push
mov
dec
sbb
add
out
jg
les
addb
jbe
xchg
sub
lret
pop
mov
test
cld
adc
dec
outsl
out
subb
or
sbb
aam
in
cmpsl
cmc
sbb
dec
es
inc
addr16
aas
inc
xor
dec
pop
bound
test
adc
data16
pand
arpl
or
mov
xchg
sbb
frstpm(287
xchg
test
in
sahf
lea
sub
sbb
iret
mov
adc
idivb
jne
push
or
sahf
das
loop
bound
stos
add
sub
pop
push
mov
mov
push
loop
sbb
cmc
negl
jb
mov
cmp
and
mov
outsl
mul
not
lret
jp
sbb
bound
cmp
les
or
ljmp
jl
loopne
mov
movsb
xchg
test
in
hlt
fcoml
adc
stos
and
jp
mov
sbb
ficoms
mov
test
mov
xor
adcl
pop
jo
jno
xchg
inc
outsb
test
sub
inc
mov
and
loop
ss
stc
test
xchg
mov
adc
outsb
xchg
fwait
aad
jbe
sbb
fs
adcl
js
lcall
push
and
xor
call
adc
jnp
ret
lock
pop
repnz
xor
sbb
mov
std
inc
lea
xchg
pop
sub
addr16
xchg
lcall
pop
loopne
push
insb
add
filds
pop
mov
pop
lea
push
mov
mov
loop
push
jle
icebp
fiaddl
lahf
jle
inc
dec
mov
push
movsb
out
pop
iret
push
pushf
sub
mov
addr16
dec
lret
insl
push
int
jno
xchg
jbe
lock
push
out
mov
cmp
sub
mov
arpl
fisttpll
jl
mov
pop
xchg
or
bound
aas
jb
jae,pn
insl
sti
or
inc
test
push
cmp
inc
or
roll
sbb
push
and
arpl
mov
or
into
sbb
xchg
mov
loope
movsl
cmp
dec
lods
mov
mov
pop
jo
cmp
cltd
fcmovnb
dec
clc
shlb
lahf
mov
cli
add
xchg
lahf
xchg
faddl
add
xchg
mov
add
enter
dec
mov
pop
lret
aam
insl
cmp
push
and
sbb
gs
stos
pop
scas
lea
dec
jns
scas
int3
lods
sub
dec
sti
stos
push
or
mov
mov
push
sbb
andl
xor
test
and
arpl
mov
cmp
add
cli
mov
dec
sahf
xchg
ds
xor
jge
xorb
adc
int3
or
cmp
jecxz
in
rorb
add
jle
sub
or
inc
and
or
pop
inc
inc
repz
pushf
pop
xchg
mov
test
add
xlat
add
fists
xor
push
or
mov
jae
repz
hlt
and
ret
add
imul
sub
jp
and
mov
jno
mov
jle
dec
mov
sbb
in
cmp
sub
andl
push
lods
jmp
push
pop
data16
cmpsb
aas
mov
push
or
mov
ret
xchg
imul
in
cmp
scas
mov
dec
push
xchg
ret
pop
test
mov
cmp
aam
mov
pop
mov
pop
push
or
push
inc
pop
xor
mov
jecxz
xor
loope
movb
aaa
jg
and
or
out
jne
mov
in
mov
xchg
test
mov
adcl
insb
js
sub
mov
aam
scas
mov
sahf
fsubs
test
pusha
mov
sub
xor
jno
test
sbb
mov
out
cwtl
cwtl
mov
and
sbb
jns
push
fcoml
cwtl
cmp
arpl
inc
xchg
mov
lods
outsl
push
repnz
adc
add
mov
push
in
hlt
xchg
lock
push
cltd
jno
rolb
jmp
stos
inc
inc
mov
aad
fadds
mov
div
xor
fisttps
cs
lcall
testl
ss
push
adc
sbb
push
cwtl
mov
sbb
push
mov
or
mov
loope
lret
insb
inc
xor
jg
aaa
adc
dec
xor
insl
jmp
pop
jmp
add
outsl
pop
cmpsb
add
jge
jp
jae
mov
dec
loopne
mov
mov
cmc
int3
lret
movsl
sub
inc
js
ret
xchg
movsl
add
cmp
jmp
add
shr
push
sahf
bound
aas
xchg
gs
inc
push
mov
mov
fsubrs
pop
mov
jecxz
dec
mov
aas
mov
xchg
scas
stc
push
xorb
addr16
push
repnz
shll
lods
cmp
mov
push
inc
enter
mov
jnp
bound
sbbb
pop
call
add
cmp
cwtl
and
and
xor
adc
out
nop
jb
out
das
scas
pop
out
test
add
fnop
jge
jnp
bound
cmp
mov
inc
mov
enter
xchg
adc
add
add
dec
jo
fadd
loope
ds
sub
pop
jmp
out
cmp
out
jno
mov
or
mov
jns
push
outsl
mov
add
pop
inc
jb
cmc
call
xchg
cmp
scas
jb
ljmp
and
add
movsb
push
cli
adc
and
add
in
icebp
sbb
in
mov
cld
push
and
cmp
je
scas
add
jbe
mov
int3
shlb
pop
bswap
cmpsb
jmp
or
push
test
jmp
loop
scas
xor
les
ret
push
and
lret
mov
int
stos
es
jl
inc
icebp
inc
data16
fstpl
dec
mov
jns,pn
push
sub
adc
adc
add
in
mov
mov
push
outsb
repz
mov
dec
in
loope
ljmp
bound
xchg
loop
daa
mulps
mov
inc
mov
int
clc
arpl
or
mov
cli
js
push
lods
mov
fistl
icebp
pop
sbb
fstl
push
push
clc
lahf
adc
adc
add
lret
mov
in
fcmovu
or
dec
xor
mov
cmc
mov
arpl
dec
fwait
xor
inc
icebp
mov
push
sti
aad
mov
fdivs
inc
stos
dec
cmp
inc
lods
repnz
icebp
pop
xchg
jl
call
cmpsb
xchg
in
aad
jmp
jp
push
out
dec
pop
mov
mov
inc
mov
push
xor
hlt
test
fsub
add
jl
movsb
fidivl
push
sbb
gs
inc
loope
clc
lea
push
stc
gs
pop
sub
push
push
jge
daa
inc
jle
sbb
stos
push
ret
dec
xor
inc
mov
nop
inc
js
mov
or
mov
leave
mov
lea
mov
int3
pop
fisubrl
aam
sub
pop
int3
adc
push
ja
cs
pop
sub
sbb
mov
mov
idivl
lahf
mov
dec
aad
add
push
ret
add
push
mov
xor
test
and
add
pop
jns
cmp
xor
jle
mov
inc
mov
mov
push
aam
adc
lds
aad
dec
xor
decb
xor
or
pop
fs
mov
push
sub
imul
add
fsubr
fidivrs
jb
mov
cmp
mov
lret
pop
mov
jo
inc
fcomps
push
in
in
leave
pop
add
pop
ds
rcrl
imul
shrb
das
add
ret
sar
aas
mov
out
and
add
imul
sbb
xlat
sub
cltd
and
dec
fadds
add
sub
out
sbb
or
mov
xchg
test
or
mov
jbe
cmp
jmp
cmp
out
xor
jg
shlb
cmp
sti
mov
mov
stos
mov
in
adc
enter
std
xchg
mov
xor
xlat
mov
sbb
xchg
fildll
cli
loopne
or
rcrb
sbb
lds
ss
and
mov
int3
popa
dec
sbb
pop
out
cmp
xchg
jae
fiadds
shl
ds
xchg
lods
inc
add
and
movsl
inc
fldt
data16
cwtl
inc
fsub
fs
cld
cmp
enter
push
cs
enter
fst
mov
adc
xchg
mov
stc
sub
js
dec
pop
jge
and
dec
iret
das
outsb
out
popa
insl
sub
mov
imul
adc
test
outsb
lea
iret
in
mov
pop
inc
and
cltd
rcl
sbb
imul
adc
push
enter
xchg
out
mov
inc
inc
xor
mov
sub
outsb
cmp
movsb
sbb
gs
dec
mov
stc
imul
in
outsl
jae
lret
mov
cmc
iret
sbb
push
pusha
movsb
jmp
fiaddl
mov
pop
lods
shr
sub
lret
dec
addr16
push
gs
mov
xlat
and
xchg
enter
or
pop
mov
xchg
aad
ja
xchg
push
pop
enter
pop
dec
inc
lods
lock
pop
xor
movups
mov
dec
cmp
pop
jecxz
and
xchg
lods
cmpsl
movsl
and
das
mov
and
aam
xor
dec
cmpsl
dec
es
mov
sub
scas
test
stc
cwtl
cmp
cwtl
lret
mov
rol
into
push
mov
scas
in
adc
sbb
add
add
inc
in
rcll
loope
shl
mov
cld
mov
xchg
dec
pop
mov
xchg
rol
pop
xor
xor
test
jae
andl
ret
cwtl
enter
cmp
mov
aas
push
xor
jecxz
dec
jno
xchg
lcall
cli
imul
mull
pop
popa
mov
decl
jne
adc
inc
mov
rcll
in
or
and
decb
jnp
repz
xor
cld
dec
pop
add
sbb
cmp
data16
xor
test
std
out
loopne
in
icebp
incl
pop
fwait
add
cli
pop
outsl
test
lcall
push
sti
cmp
push
xor
in
pop
cmpsl
xlat
mov
push
scas
pop
mov
xor
enter
cwtl
ficomps
add
stos
bound
rcll
out
cmp
lret
cs
cmpsb
jae
add
rcrb
data16
push
pushf
lock
xchg
cmp
pop
imull
xor
pop
dec
stos
addr16
mov
jne
test
pop
jecxz
imul
inc
jg
xlat
sahf
fildl
xor
arpl
repnz
movsb
fucom
xchg
cmc
pop
fsubrl
mov
aas
adc
or
out
pop
in
jg
idivl
fwait
or
add
xor
mov
addb
push
jle
pop
add
pop
cmpl
add
mov
sbb
pop
icebp
stc
out
call
sbb
inc
je
bound
fisubrs
testl
test
inc
mov
movl
fidivrs
xchg
dec
jp
or
pusha
add
jae
in
jb
inc
jg
not
mov
data16
sahf
repz
pop
insl
js
popf
aaa
cmc
and
in
insb
aam
nop
icebp
dec
jnp
inc
cmp
sub
in
loop
sbb
xchg
pushf
imul
les
cli
mov
mov
in
popa
push
mov
jo
adcl
mov
cmpsb
pop
mov
xchg
and
insb
push
jb
xlat
int3
fistl
mov
int
jne
fs
outsb
mov
out
aas
mov
pop
imul
lock
dec
mov
inc
repz
xor
xchg
and
test
inc
and
cmp
lret
out
mov
shll
inc
jo
stc
jg
lahf
outsl
mov
cwtl
mov
cmpsb
push
stos
xchg
out
in
sub
ret
pop
stos
fldcw
mov
insb
adc
jae
pop
inc
enter
fdivp
mov
js
xchg
call
loop
iret
sub
clc
xchg
into
outsb
cmp
sbb
xor
rcr
sub
pop
das
mov
mov
out
push
dec
imul
aaa
xor
jae
popf
xchg
int3
iret
rolb
sub
out
gs
cmpsb
mov
push
enter
pusha
push
movsb
inc
mov
aaa
rcrl
push
mov
and
int
mov
sub
ror
sarb
testl
in
enter
scas
pop
mov
daa
pop
fadd
cld
aaa
adc
lcall
iret
aas
mov
gs
sbb
xor
addb
pop
lahf
bound
pusha
pop
in
lock
dec
xor
or
arpl
and
lock
pop
hlt
fprem
pushf
sbb
das
hlt
stos
push
les
dec
jl
cmp
mov
loopne
adcl
out
xchg
mov
add
jl
mov
fxch
fdivrl
push
aas
out
ds
lcall
sub
inc
cmc
js
repnz
jp
dec
mov
pop
iret
xor
mov
ret
push
mov
sbbl
sbb
xor
mov
and
cmp
out
jno
push
fcmovnu
and
out
sbb
inc
cmp
mov
loop
sahf
sub
adc
xor
and
dec
xchg
mov
xchg
mov
adc
push
out
mov
cmp
cli
std
xchg
int3
lret
mov
mov
pushl
sarl
cli
insl
push
xchg
push
inc
scas
cmpsb
test
lods
lods
mov
mov
sub
jnp
push
out
and
outsl
idiv
enter
push
jnp
daa
sti
clc
imul
inc
cmp
dec
mov
dec
ret
jl
shrb
addr16
push
fstpt
xchg
cmp
mov
mov
pop
pop
xchg
jo
sbb
push
sub
pop
in
mov
mov
aam
in
xor
cmp
mov
lcall
lds
into
movsb
adc
lret
shrb
fmuls
push
add
and
inc
sbb
xchg
xchg
adc
push
adc
repz
sbb
out
mov
xlat
pop
outsb
iret
push
fisubl
mov
push
xor
imul
int3
fstpl
push
jbe
xor
in
cwtl
cmp
movsl
pop
cmp
mov
insl
dec
jle
jg
jg
or
outsl
or
das
push
addl
pop
sub
pop
mov
or
lods
lahf
pop
push
aad
sbb
cmpsb
test
mov
inc
sub
ret
jo
test
adc
sbb
popa
ret
lea
addb
imul
orb
imul
jecxz
shl
mov
jp
jo
int3
jns
div
ret
out
ja
mov
hlt
out
or
xchg
cmpsb
es
das
andl
push
push
sbb
mov
add
inc
cwtl
pop
sbbb
sub
leave
mov
loopne
xor
jo
jne
cltd
cmovl
cwtl
and
mov
add
mov
popa
loope
mov
scas
jno
nop
jg
dec
jne
sbb
shlb
xlat
aas
sub
cmp
cltd
push
test
in
fsts
fsubrs
lcall
mov
and
test
mov
aaa
xchg
addr16
dec
idivl
push
fnsave
imul
xchg
xor
icebp
faddp
out
mov
cmp
je
daa
push
or
push
hlt
mov
fnstcw
out
adc
pop
ret
imul
lret
add
mov
add
fisubl
ss
in
cs
je
xor
push
into
and
push
add
lsl
int3
arpl
test
mov
cmpsl
not
push
cmp
inc
movsl
inc
es
sbb
pop
lret
je
outsb
inc
mov
xchg
push
shl
iret
mov
test
or
xchg
push
test
insl
in
sub
cmp
repnz
xchg
push
xchg
push
mov
dec
in
out
outsl
cmp
pop
jnp
mov
pop
or
mov
adc
inc
sub
mov
and
cmp
call
out
aam
sub
lret
insb
xor
out
test
daa
arpl
push
leave
sbb
pusha
repnz
or
fcoms
sub
cmp
aam
imul
mov
dec
out
inc
dec
push
popf
add
inc
stc
xchg
mov
xor
add
inc
dec
mov
dec
pop
sbb
add
xchg
hlt
xor
inc
pop
sbb
insb
jnp
lock
je
mov
shrl
fucomip
cli
stos
push
or
xchg
cmpsl
popa
faddl
std
pop
loop
pop
cmpsl
dec
jnp
int3
movsl
mov
iret
jp
pop
push
pusha
push
sub
lds
pop
inc
inc
outsb
cwtl
flds
in
push
popa
repz
ss
cmp
inc
sti
mov
add
rclb
repz
inc
je
inc
sbb
scas
sbb
add
push
push
mov
lea
ret
addb
ficoml
decl
insl
cmp
or
daa
push
jp
bound
aam
loopne
sub
test
insb
ljmp
movsb
fisubl
mov
sbb
dec
cmc
lcall
jbe
or
lods
dec
add
pop
clc
dec
cmp
mov
mov
orl
je
xchg
cmp
daa
and
test
push
cmc
cs
cmp
and
adcb
xchg
xchg
cmc
ss
test
repz
mov
push
ljmp
jg
pop
mov
mov
pop
adc
push
cmp
dec
add
pop
shrb
xchg
inc
sub
and
jne
push
inc
jmp
out
xor
jb
sahf
xor
push
lea
loope
dec
jne
jecxz
sbb
push
adc
or
outsl
sbb
icebp
xor
push
xchg
jl
pop
xlat
push
nop
in
mov
scas
inc
xchg
inc
in
sbb
add
add
pop
in
mov
ret
nop
arpl
pop
cmc
mov
mov
call
dec
mov
cmpsl
test
xor
mov
mov
sub
repz
addr16
ss
jne
ret
mov
cmp
xor
mov
xor
and
mov
jecxz
cmp
push
cltd
imul
mov
mov
push
daa
jo
in
xor
pop
int3
fcmovnu
inc
sti
rolb
xchg
insl
sub
cli
push
push
ja
mov
jmp
cmp
dec
mov
push
sahf
lret
mov
shrb
lods
sbb
rcll
icebp
hlt
jb
cltd
xor
sbbb
mov
dec
lock
push
sub
sub
add
inc
popf
push
lret
pop
mov
add
cmpsb
mov
pop
mov
add
mov
xor
add
in
add
mov
imul
sub
jg
ds
push
mov
inc
filds
fisttpl
pushf
imul
in
mov
xchg
js
adc
mov
imul
out
jp
pop
test
jnp
sahf
xor
dec
xor
scas
aas
sub
adc
sbb
pop
push
mov
jne
mulb
adc
lea
mov
jns
lret
xor
xor
or
lret
sub
pop
mov
and
mov
cmpsb
jl
and
jp
push
js
in
cmp
cmpsl
xchg
cmp
dec
aaa
adc
loope
cmpsb
rcrb
or
sbb
sbb
or
xchg
enter
jge
jno
mov
mov
inc
adc
pop
repnz
inc
add
jge
jg
inc
cmp
mov
sbb
fsubrp
cmp
das
pop
mov
les
lret
xchg
je
lods
out
pop
mov
inc
sar
insb
xchg
mov
fisubrl
push
mov
xor
push
leave
jnp
fldl
jbe
and
or
mov
ljmp
pop
mov
adc
jp
addr16
cmp
fdivrl
cmp
dec
cwtl
inc
loopne
sbb
mov
push
ret
sbb
je
mov
push
mov
leave
pop
xlat
aam
and
ret
cmp
in
movsl
arpl
adc
pop
adc
sub
je
xchg
pop
je
mov
test
ds
loop
mov
nop
cmp
push
popf
push
data16
movsl
negb
mov
cmp
cmp
iret
inc
lds
js
sbbl
xchg
sub
cmpsl
imul
ret
icebp
mov
bound
or
mov
int
add
fildll
dec
adc
ss
adc
mov
shlb
inc
idivb
or
mov
sub
push
and
into
cwtl
lea
ja
push
lret
pop
lret
and
or
dec
sub
divl
ffree
pop
mov
sub
dec
add
add
adc
pop
push
jno
pop
int3
inc
pusha
mov
enter
sbb
shll
mov
or
adc
shll
fnstcw
in
xchg
cmp
and
add
mull
pop
or
and
cmp
sbb
xchg
movsb
mov
inc
pop
shll
push
xchg
test
fidivrs
aad
cld
lahf
ds
popa
sbb
fistpl
test
mov
add
dec
pop
inc
push
ds
pop
lea
dec
scas
add
add
sub
fdivrs
cmp
js
dec
push
push
push
stc
mov
xor
mov
push
jp
adc
xor
xchg
or
adc
imul
xor
push
jns
mov
pop
mov
pop
push
inc
adc
mov
sub
pusha
pop
pushf
andb
aad
pop
xor
or
jmp
shr
cmp
or
lret
cmp
into
negb
sub
adc
lock
mov
sub
add
fs
push
or
xor
ljmp
sbb
mov
xchg
out
out
sarl
lcall
push
rcl
lods
sbb
mov
sbb
out
in
sub
imul
sub
xchg
or
lret
xchg
pop
pop
out
lcall
dec
xchg
and
pop
and
or
xchg
loopne
add
push
test
call
sub
pop
test
in
mov
add
jg
pop
xor
ss
jmp
xlat
das
int3
mov
fildll
ret
sbb
mov
insl
push
stc
and
push
clc
xchg
ficomps
mov
insb
cmp
xchg
dec
push
xchg
insb
sbb
int
pop
scas
mov
xchg
imull
jne
push
sarb
jb
sub
int3
jne
cld
clc
jns
adc
jg
mov
dec
xor
into
xor
add
lock
push
or
xor
shlb
mov
inc
test
dec
or
call
xacquire
rclb
cmc
sub
xor
push
pop
inc
in
aaa
inc
into
mov
mov
add
fsubs
scas
aas
loope
jg
or
ds
pop
mov
add
sbb
test
xchg
out
mov
loop
xchg
mov
bound
sti
jmp
and
xchg
mov
test
lret
sub
mov
mov
sub
test
dec
gs
jbe
frstor
pop
js
insb
imul
stc
mull
add
addr16
jnp
dec
roll
cmp
cmpsl
pop
iret
mov
pop
test
cmp
and
ss
cli
enter
and
xchg
jb
or
scas
repz
imul
int3
mov
inc
pop
mov
clc
cmp
hlt
xor
int3
and
sub
sbb
push
out
leave
add
ss
mov
fsubrs
hlt
mov
xor
cmp
pop
sahf
repnz
rorb
xor
lods
popf
dec
aad
mov
sub
pop
mov
adc
xchg
and
int
jnp
or
jo
cltd
add
dec
push
roll
pop
hlt
mov
mov
out
jp
mov
jns
lahf
add
and
sbb
pop
inc
lods
mov
push
adc
push
daa
xchg
movb
mov
rolb
fs
jbe
xchg
dec
pop
jns
in
add
fldcw
mov
sub
adc
sbb
lods
sbb
icebp
hlt
xor
test
add
lret
sub
sub
sub
and
pop
leave
aam
sub
fwait
sub
mov
loop
nop
loop
pop
movsl
xor
scas
shll
cmp
pop
inc
lods
ljmp
xchg
fwait
scas
push
jp
imul
test
dec
pop
ss
push
cmc
sbb
test
add
cmpsl
or
mov
or
inc
adc
add
mov
outsl
mov
dec
sar
hlt
push
sub
push
adc
jge
jbe
adc
rclb
cmpsw
and
ret
sub
sub
adc
dec
mov
loopne
sbbl
and
enter
fstps
pop
or
cmp
ljmp
dec
cmpsl
sbb
mov
cwtl
adcb
pop
jb
ljmp
mov
or
or
mov
int3
fisubl
jg
mov
loop,pn
fisttpl
mov
mov
mov
test
fwait
shl
mul
xchg
and
adc
rolb
mov
cmp
mov
mov
add
ficompl
lds
jecxz
jno
rcrl
std
clc
je
pop
add
inc
insl
stos
cld
rcll
repnz
out
int
iret
aas
scas
jbe
inc
fisubrl
cs
std
fdivs
add
mov
or
es
movntps
mov
jge
xlat
cmc
movhlps
imul
inc
out
repz
hlt
cmp
adc
sbb
sbb
int
aam
adc
in
outsb
loop
mov
fists
mov
sbb
iret
fiaddl
push
pop
outsl
stc
mov
sub
fildl
sbbb
les
adc
cwtl
mov
mov
cmp
inc
mov
dec
push
iret
bound
std
inc
and
sahf
mov
push
dec
mov
das
mov
xchg
add
lock
mov
mov
sahf
dec
xlat
jne
jno
ret
xchg
push
cmp
fst
mov
es
shlb
jbe,pn
push
cmpl
jmp
std
loope
fldenv
test
sahf
cmp
lret
sbb
pop
leave
lret
in
jle
xor
xor
in
lea
aas
add
sbb
add
add
stc
test
out
gs
inc
fbstp
inc
jne
popf
lcall
hlt
mov
loope
repnz
cmp
mov
aam
mov
or
ss
es
outsb
outsl
call
rol
jo
loop
pop
mov
imul
rcll
and
int
jecxz
pop
xor
stc
out
imulb
clc
sub
xor
aad
out
sarl
sub
inc
movsb
movsb
push
jb
jmp
jnp
push
icebp
popa
int
jo
or
add
in
mov
fistpll
icebp
dec
arpl
jno
adc
shlb
dec
pushf
pushf
mov
and
enter
dec
lret
xor
xchg
sar
push
adc
inc
lahf
lret
xchg
push
in
daa
mov
stc
sahf
addr16
pusha
ret
lds
dec
out
mov
adc
push
xchg
aas
repz
sub
adc
inc
adc
or
lods
push
ret
inc
and
inc
es
cmp
xchg
movsb
ja
scas
mov
aad
adc
iret
mov
jg
js
js
daa
pop
jae
xchg
in
fisttpll
arpl
mov
bound
xchg
push
mov
cmp
add
xor
dec
xchg
inc
iret
jo
ret
jno
xchg
loope
or
push
or
mov
pop
jecxz
insb
dec
xchg
xchg
cmpsb
out
add
mov
mov
sti
cmpsl
jecxz
cli
mov
ret
jge
fnstenv
cmc
add
ss
jg
test
xchg
xor
stos
mov
pop
lea
dec
outsl
out
or
push
ljmp
insb
ret
inc
or
fldl
sti
out
inc
repnz
xchg
mov
inc
int3
enter
add
pop
sub
iret
int
ds
inc
int
cwtl
adc
cld
fwait
push
inc
fnstenv
scas
ja
popl
pop
negl
stos
inc
ds
lds
jl
sub
imul
mov
cs
sbb
roll
add
pop
add
lods
shrl
mov
xor
jb
mov
lahf
repz
stos
mov
loop
test
mov
dec
in
mov
arpl
jg
out
pop
or
mov
mov
cmpsl
inc
aas
iret
jmp
sti
mov
enter
xor
imul
ret
adc
push
out
inc
ljmp
adc
arpl
sti
scas
test
and
sbb
pop
dec
lcall
xor
push
jmp
cmp
adc
icebp
or
mov
es
dec
pop
nop
insl
or
cmp
stc
jecxz
xchg
mov
repz
add
subl
dec
dec
lods
std
lret
mov
lea
adc
sub
sahf
dec
sub
pop
gs
mov
lock
add
sub
mov
cmp
mov
enter
popa
dec
add
and
in
cmc
pop
adc
and
ss
xor
lods
cltd
sbb
pop
orl
sbb
pop
flds
inc
jg
jb
push
xor
nop
in
test
sbb
loop
push
daa
loope
mov
pop
js
and
xor
in
test
sti
mov
add
in
aas
clc
or
ss
out
xor
lahf
fdivrs
mov
and
and
and
filds
cs
mov
or
std
mov
xor
out
jns
movsb
outsb
stc
bound
aad
inc
xchg
cli
aam
or
insb
pop
ret
repnz
add
lock
test
pop
ja
in
test
add
lcall
mov
clc
and
sbb
and
and
sub
das
call
xchg
adc
mov
insl
into
and
mulb
inc
cmp
ja
dec
or
mov
and
pushf
push
popf
cmpsb
shl
xor
cmpsw
push
cmp
jae
mov
push
or
ret
pop
inc
cmp
popf
xchg
dec
inc
call
inc
fisttps
push
shlb
xor
fstps
inc
pop
mov
dec
xlat
inc
movsl
outsl
adc
sub
cmp
insl
mov
mov
mov
ficompl
xchg
mov
or
cmpsb
add
or
xchg
xchg
add
push
mov
jp
xor
ljmp
test
jne
insl
push
int
jmp
insl
aas
scas
jne
jecxz
or
dec
sub
sahf
fdivrp
xchg
shll
jne
xchg
int3
or
push
push
sbb
cmp
sbb
sbb
lods
push
testl
push
movsl
cmc
jnp
cmpsb
push
mov
ret
pop
cmpsb
orb
jo
mov
mov
hlt
imulb
outsl
jns
cltd
push
loopne
push
test
rcr
pop
testb
stos
mov
xor
push
cmp
add
je
pusha
xchg
imul
gs
and
add
imul
mov
sbb
adc
or
xor
mov
or
cld
ds
push
mov
fmul
imul
adc
or
popf
pop
cmpsb
sbb
dec
outsl
add
sbb
frstor
outsl
cmpsb
mov
pop
adc
push
movhps
sti
push
pop
jo
dec
or
xchg
and
je
pop
mov
popa
xchg
pop
repz
mov
loope
ja
sbb
fucomi
sbbl
adcl
and
out
stos
mov
push
jmp
pusha
daa
or
xchg
mov
xchg
andb
dec
shr
and
hlt
xchg
xchg
clc
xchg
movsb
insl
icebp
xchg
sub
sbb
mov
or
in
or
call
and
add
test
mov
mov
stc
mov
or
sbb
or
insl
push
imul
insl
sbb
jmp
gs
es
ret
add
fs
mov
jle
xor
sbb
lock
push
push
and
shrl
dec
push
add
popa
imul
rcrb
mov
test
pushf
adc
repz
and
sub
int3
jecxz
test
cld
mov
pop
fnstsw
ret
jmp
jnp
push
aas
xchg
pop
xor
stos
cmpb
or
add
mov
ljmp
jae
rcll
push
jbe
mov
in
jnp
adc
movsb
pop
loope
pop
test
scas
dec
jle
lcall
inc
push
inc
shl
push
cmovge
fistpll
insb
mov
sub
jne
mov
in
push
push
cld
lcall
notl
out
push
fldenv
les
pop
pushf
dec
xchg
mov
adc
xchg
adc
dec
daa
pop
aas
jnp
dec
mov
mov
rdtsc
mov
jnp
mov
mov
jo
or
inc
inc
cmp
jge
adc
inc
scas
iret
mov
mov
scas
orl
cmc
ljmp
ret
and
mov
fildl
and
lcall
jnp
pop
fistl
adc
jb,pt
imulb
push
mov
loope
push
mov
mov
mov
nop
mov
jbe
pop
sub
scas
loop
mov
popa
sub
test
xchg
scas
repnz
sub
fidivrl
int
lahf
out
sbb
imul
orb
mov
mov
pushf
pusha
jno
or
sbb
dec
push
lods
mov
mov
jo
repnz
and
push
pop
push
lods
inc
push
pop
jno
inc
jns
inc
and
cmp
mov
aad
jle
fsubs
cwtl
mov
clc
jo
cmpsb
jno
fsubr
movsl
negb
in
lea
cld
dec
cmp
xchg
jns
mov
test
pavgw
not
jne
mov
popl
xchg
dec
xor
cmpsl
enter
push
push
cmpsb
mov
xor
int
out
add
in
sbb
or
fimuls
outsb
loop
add
loopne
pop
mov
cmpsb
out
nop
adc
inc
mov
les
or
jnp
cwtl
sbb
xchg
jp
bound
mov
or
stos
ljmp
lcall
std
in
mov
shlb
mov
mov
dec
pop
sub
cmp
jnp
or
cmc
xor
cld
stos
mov
push
push
jle
xchg
nop
pop
adc
fidivl
sbb
fcompl
xchg
aas
outsl
orl
mov
push
xchg
aad
test
mov
pop
aas
push
xor
sar
mov
outsl
cmp
iret
std
xchg
and
fstpt
jle
inc
jno
ss
loopne
cmp
adc
rolb
loop
insl
jbe
sub
push
dec
gs
fdivrp
lods
jno
jbe
xchg
mov
inc
ds
xlat
jo
hlt
mov
lods
fildll
cmp
in
ja
iret
push
xchg
idivl
in
and
js
cld
icebp
test
addl
aaa
inc
push
imul
in
int
jl
mov
sub
pop
mov
test
push
ljmp
divb
mov
xor
or
fcompl
movsl
pop
adc
and
mov
addr16
repz
dec
cli
mov
xchg
dec
push
push
add
push
inc
push
pop
jl
pusha
xor
xlat
pop
mov
out
movsl
out
imul
pop
stos
pop
and
adc
cmp
icebp
adc
lahf
rclb
aaa
cmpsl
rolb
xchg
clc
scas
leave
std
sub
ljmp
dec
imulb
lods
mov
dec
adc
push
jg
jae
sti
sub
js
push
mov
mov
xchg
add
or
dec
test
or
push
mov
add
xchg
mov
rcrb
sub
or
in
lret
sub
rorb
pop
lret
leave
mov
sub
jmp
xchg
xchg
lret
aas
mov
sti
mov
add
lds
lods
and
mov
mov
dec
clc
lods
stc
push
les
call
pop
cmp
and
jae
out
loope
icebp
jecxz
mov
jp
fs
loop
loopne
out
mull
stos
xchg
mov
jp
cli
jno
in
enter
and
xlat
into
loope
mov
fbstp
pop
mov
pushf
push
popl
loope
in
ficomps
movsb
pushf
ds
popf
pxor
pop
push
mov
or
and
ljmp
mov
aad
push
js
add
mov
mov
mov
js
ja
adc
mov
jmp
aas
out
cmp
mov
lret
les
rdtsc
inc
xor
and
xchg
cmpb
das
dec
push
inc
cmc
push
or
sub
pop
jg
into
fstps
push
cmc
fwait
mov
dec
loop
inc
ret
mov
add
loopne
je
fstp
ljmp
adcl
xor
mov
arpl
insb
insl
dec
arpl
adc
arpl
bound
lahf
enter
ret
sbb
cli
push
repnz
and
stc
cld
mov
imul
and
adc
push
sbb
sub
xchg
lcall
sub
cmc
cmpb
push
jmp
dec
pusha
mov
out
jge
xchg
jle
stc
sub
sub
jle
adc
add
or
mov
or
adc
dec
push
inc
cmp
mov
std
pusha
cmp
sbb
cmpsb
ljmp
les
fdiv
jge
negl
das
and
mov
mov
orb
xor
sub
push
inc
flds
imul
xorl
sar
movsb
jge
and
mov
stos
xchg
mov
dec
jb
insl
int3
fcmovb
sbb
loop
ss
push
mov
repnz
bound
sbb
aaa
fmull
mov
dec
scas
and
pop
rcr
mov
in
pop
icebp
push
mov
or
enter
mov
push
js
out
inc
sbb
ds
mov
push
cmp
sbb
mov
bound
mov
popa
sbb
out
xchg
imul
xor
jl
xchg
in
sub
out
test
sub
rclb
gs
or
or
and
mov
jmp
or
xorb
stos
cmc
lods
sbb
lods
imul
in
pushf
and
xchg
mov
jns
movsl
fbld
in
cld
aaa
cwtl
andb
sahf
jmp
push
aaa
test
sahf
adc
cltd
mov
ds
pop
inc
mov
fwait
movsb
cmpsl
inc
sarl
gs
xchg
pop
mov
jno
pop
jmp
mov
int3
dec
cmp
imul
jne
jb
inc
movsl
hlt
dec
push
push
and
aaa
or
and
cmp
jb
or
lock
mov
aas
lds
mov
pusha
divl
aaa
dec
sbb
scas
inc
jle
pop
inc
xor
cmp
mov
xchg
or
arpl
cmpl
pop
je
in
and
movsl
inc
fisubrl
adc
inc
das
cmp
pop
mov
pop
addb
xor
push
xor
xchg
adc
popl
les
jns
add
pusha
fcompl
in
jg
mov
out
mov
xchg
andl
testl
arpl
inc
movsl
repnz
popa
or
push
rcrl
std
lods
mov
mov
neg
push
jno
sub
mov
outsb
pop
inc
das
xlat
lret
ljmp
inc
lds
and
jne
sub
outsb
popa
imul
ds
shrb
push
sbb
test
mov
pop
mov
pop
lret
pop
add
push
icebp
push
xlat
xchg
clc
xchg
and
pop
pushf
fs
call
mov
push
jb
xlat
ds
sub
mov
mov
daa
xor
mov
mov
cli
cmp
lcall
xchg
cwtl
int3
test
cmp
xchg
mov
orb
mov
repz
xchg
ljmp
jmp
sahf
data16
iret
outsl
mov
push
add
je
add
dec
dec
imul
xchg
sub
mov
cmpsl
repz
xchg
jns
rcl
cli
jecxz
sub
jb
and
lahf
not
dec
in
jb
negl
xchg
push
cltd
xchg
or
xchg
or
das
pop
cltd
nop
stos
cmp
mov
sub
lods
gs
pop
out
cli
bound
mov
outsl
xor
stos
mov
or
push
mov
movsb
sti
shll
xlat
adc
mov
ret
out
ljmp
xchg
and
imul
inc
nop
push
aas
imul
fcoml
aas
iret
jle
out
pop
cltd
add
pushf
jp
in
pusha
push
jae
stos
aam
cmpsb
dec
add
cmp
test
hlt
jge
push
xor
fwait
dec
sahf
inc
dec
xor
mov
iret
and
jp
adc
or
mov
jo
dec
fbstp
inc
mov
aas
loop
mov
out
jno
xchg
pop
add
lahf
jmp
out
stos
xchg
jo
sbb
sub
add
divl
bound
dec
mov
push
jle
sbb
std
std
insb
mov
aam
cmp
fstl
fadds
push
inc
sahf
aas
inc
adc
aas
in
pusha
jecxz
cwtl
rorl
xor
mov
insl
leave
mov
pop
and
cmp
mov
lcall
jge
stos
xor
out
repz
mov
xchg
stos
pop
idivb
pusha
lret
jle
jne
divb
popa
mov
sarb
add
je
sub
inc
xchg
inc
pop
xor
cwtl
or
stc
cld
fwait
push
pop
lea
popf
jb
cmp
xchg
mov
inc
sbb
xchg
cltd
stos
sbb
or
mov
jb
jbe
add
mov
push
jmp
dec
mov
adc
xor
adc
sub
pop
or
cmp
out
push
iret
lret
call
jp
stos
cwtl
in
outsb
jl
sti
mov
lret
push
imul
and
xor
scas
xor
inc
mov
jae
fmul
je
inc
fnstsw
in
push
sub
xchg
lods
mov
xlat
xor
dec
aam
ljmp
xor
sbb
push
hlt
ret
or
dec
push
pop
lret
lret
adc
sub
and
and
rcrb
addr16
loop
sbb
sub
sub
je
mov
mov
mov
jno
jb
add
sub
mov
aad
outsb
cwtl
adc
les
and
inc
movsb
add
pop
pop
js
shl
outsb
inc
mov
lock
mov
frstor
xchg
xchg
adc
xchg
loop
pusha
loop
hlt
fsubs
ror
dec
into
mov
js
shlb
cmpsl
aam
movsl
fildll
push
add
insb
ljmp
daa
mov
iret
pop
push
dec
fsubr
test
or
out
ja
jne
icebp
jmp
sbb
aad
dec
popa
inc
push
xlat
jge
jle
ret
mov
iret
pop
addr16
add
adc
ja
inc
push
xchg
and
mov
fwait
das
dec
xor
push
push
xor
imul
aad
add
leave
mov
add
clc
cmpsl
negb
jo
je
les
mov
or
cmp
cmpsb
mov
sbb
aaa
cwtl
ficomps
jae
les
stc
mov
cmp
sub
lea
and
inc
jno
lods
cwtl
inc
cld
stos
pop
aam
cmpsl
das
push
loopne
mov
loope
outsb
arpl
mov
cmp
jne
clc
sbb
and
xchg
jmp
or
mov
mov
sub
jle
repnz
inc
jno
jnp
pushf
mov
push
mov
push
adc
sbb
lahf
lods
nop
cs
fs
add
dec
es
inc
sbb
lea
addr16
rcrb
or
cmp
insl
cmp
inc
or
push
subb
inc
cmp
lods
out
sub
jne,pn
pminsw
lret
repz
pop
sub
paddusb
test
push
jbe
and
nop
imul
bound
fwait
out
sbb
and
lahf
dec
mov
addr16
imul
xchg
pop
jnp
and
int3
lea
dec
pop
jp
insl
mov
aad
out
adc
and
test
in
inc
xchg
jb
sbb
cmp
pop
mov
pop
ljmp
dec
pop
push
js
loopne
fnstcw
adc
mov
movsb
jle
cmp
xor
push
adcb
imul
pop
lret
jo
inc
out
jmp
hlt
inc
pop
clc
ret
jb
jno
dec
test
aam
cwtl
push
sbb
scas
call
int3
sbb
push
test
std
mov
jno
push
sub
inc
jl
xor
xor
adc
data16
or
cltd
inc
sahf
insb
negl
outsl
jnp
sbb
lock
mov
push
add
out
pop
mov
mov
dec
out
cmpsb
jge
fildl
ds
fmuls
je
ja
inc
test
xchg
sub
scas
scas
xor
or
mov
out
and
cmp
push
xor
movsl
dec
notl
pop
mov
cmpsl
dec
push
push
stos
ret
lahf
dec
std
std
dec
mov
mov
repnz
jb
adc
aas
std
pop
pushf
notb
cmp
in
mov
int3
cld
loope
cwtl
adc
test
and
or
cmp
inc
iret
jmp
or
jo
pop
dec
adc
bound
cmp
or
jo
sbb
mov
jg
xchg
sbb
ds
pop
inc
mov
xchg
loope
addr16
fmull
and
mov
mov
add
in
and
test
sbb
pop
mov
mov
loope
repz
cmp
imul
fdivrp
lds
inc
pop
outsb
mov
xchg
out
or
inc
adcl
gs
sbb
push
dec
inc
cltd
inc
lret
sub
aam
popa
xor
shrl
stos
xchg
fmul
mov
mov
add
adc
dec
cmp
test
test
sbb
popf
xor
add
sbb
jnp
jp
in
jge
test
stc
aad
or
xor
sahf
xor
jl
testl
dec
xor
fwait
adc
test
sub
test
popa
arpl
loopne
lods
int
push
mov
add
cwtl
mov
pop
add
js
push
and
cmpsl
sub
icebp
add
out
mov
push
cwtl
aad
ret
push
mov
adc
cli
lods
xchg
out
push
push
add
cmp
scas
or
out
sti
xchg
xchg
in
test
cwtl
dec
hlt
mov
jle
pop
stos
mov
stos
outsl
jae
sbb
cmc
jno
mov
hlt
lods
fidivrl
pushf
inc
cmp
adc
popf
pop
shlb
xchg
pop
mov
std
fdiv
sbb
test
int3
nop
in
mov
fdiv
cmp
mov
dec
insb
ss
jmp
mov
hlt
shlb
out
mov
ljmp
fisubl
xchg
pop
rcl
cltd
mov
rcl
jae
es
mov
mov
or
jg
stos
pop
jge
adc
jecxz
cs
mov
pop
fmull
lcall
jno
subb
addl
sbb
cmp
dec
jg
and
dec
test
insb
adc
mov
sub
push
jnp
xor
lds
cltd
jge
cld
jno
cmp
ret
jnp
movsb
adc
daa
aas
jmp
sub
or
add
xchg
xor
arpl
js
lds
out
jae
pop
add
test
fcoms
jbe
cwtl
xchg
ds
cmp
int
cld
and
mov
dec
test
jns
pop
dec
lcall
sbb
xchg
nop
xchg
lahf
cmpsl
cmpb
lock
or
mov
stos
mov
sbb
pop
cmp
xor
rol
popf
lock
mov
push
testl
call
out
add
mov
sub
lret
ljmp
iret
call
pop
push
cmp
js
inc
add
shlb
mov
add
std
arpl
bound
loopne
mov
xor
pop
scas
pop
add
push
lcall
in
mov
repz
mov
imul
add
adc
addr16
cld
cld
movsl
call
in
pop
stos
jmp
sbbb
aas
xchg
outsl
dec
faddp
lret
mov
cld
int
std
scas
mov
xchg
mov
lock
popa
push
aam
sub
cmc
and
in
fldcw
outsl
test
into
cwtl
inc
leave
in
sub
jecxz
and
push
lcall
inc
mov
xchg
push
inc
rcll
mov
jbe
enter
out
pusha
jl
and
jae
fstl
pop
push
outsb
es
adc
jmp
push
mov
xchg
mov
xchg
negl
int
sub
pop
sbb
or
lcall
outsb
leave
lea
movsb
movsl
popa
mov
lret
out
jne
movsl
arpl
jne
mov
jno
mov
loop
stos
fisttps
movsb
sub
xchg
fs
jno
sub
and
xchg
in
mov
inc
ss
insl
cmp
sti
sbb
fmuls
inc
pop
fistl
pop
scas
psrlw
test
pop
mov
xchg
mov
add
pop
sub
inc
add
lahf
clc
dec
pop
sbb
mov
daa
push
pop
mov
shlb
fdivrl
jmp
aam
mov
stos
fsubl
cmp
push
pop
jns
mov
jb
cli
xchg
xor
or
or
and
jbe
add
js
mov
and
inc
adc
lahf
das
jb
outsl
les
pusha
fsubr
cmp
cmp
rcrb
les
pusha
mov
jb
test
jle
or
inc
shll
callw
and
pop
test
bound
rolb
rclb
imul
sbb
cmpsl
ja
outsb
imul
sarl
sub
mov
stos
out
pop
fucomp
flds
jbe
outsb
ss
mov
xchg
in
jnp
test
ret
in
test
bound
cli
jbe
fnstcw
mov
les
mov
sahf
fidivl
out
scas
fwait
sarl
adc
or
into
inc
push
dec
das
pop
cmc
sarb
sbb
movsb
sbb
rolb
jge
sbbb
inc
in
repnz
dec
insb
mov
pusha
leave
mov
xor
mov
call
and
adc
test
dec
pop
ds
ret
push
lahf
cmp
lret
jp
mov
dec
push
pop
ds
and
push
jo
ror
cli
xor
ds
dec
jnp
test
pushf
jbe
jmp
or
mov
jae
movsl
cmc
repz
pop
xor
jmp
pop
aas
popf
cltd
orl
out
nop
lahf
mov
call
and
mov
sub
out
xor
pop
or
stos
mov
add
push
cwtl
stc
cmp
pusha
out
in
xor
add
in
out
adc
int
mov
fndisi(8087
mov
daa
xor
xor
nop
mov
jle
jmp
cmp
add
fs
and
call
stos
dec
iret
xchg
das
jle
jmp
mov
jmp
loope
adc
sub
out
adc
and
repnz
cmpl
lea
repz
enter
adc
into
adc
shrl
popa
lahf
gs
inc
mov
xor
xchg
fmuls
push
inc
outsb
sub
ret
negl
pop
test
fistl
mov
pop
xchg
cmc
aas
repnz
daa
out
mov
cmpsl
add
mov
jle
pop
jnp
in
xor
mov
cmpsl
stc
aaa
jl
mov
inc
lock
pop
notl
mov
sub
xor
lock
in
in
mov
loop
cwtl
cmpsb
cmp
and
add
sbb
jge
mov
jb
xchg
aas
jnp
je
pop
cmp
pop
add
pop
xchg
fcomps
sahf
xor
push
shll
in
cmpsb
sti
jmp
imul
js
pusha
sahf
ja
out
loope
nop
jae
out
cmc
add
loope
dec
pop
inc
pop
inc
jno
lcall
popl
flds
jle
jae
pop
arpl
movsb
adc
jge
stos
xchg
add
jge
jmp
ret
mov
ja
mov
cli
mov
imull
and
fistps
cmp
dec
adc
aaa
or
xchg
push
ja,pn
andb
outsl
imul
mov
jae
ficoms
out
out
pusha
repz
inc
popl
and
lahf
jg
jmp
movsl
xchg
pop
or
jno
mov
cmp
push
repnz
push
loop
das
pop
mov
stos
cmpsl
rcrb
in
leave
dec
and
les
and
inc
mov
ficompl
adc
and
push
pop
les
in
into
dec
fstpl
imul
pop
out
ljmp
idivb
add
adc
cmp
push
mov
add
sarl
or
out
push
push
fidivrl
push
push
and
and
insl
mov
jle
mov
pop
fildl
and
dec
mov
sbb
ss
sbb
repz
mov
mov
inc
dec
xchg
xlat
shrl
test
push
je
xor
mov
xchg
popa
data16
pop
add
sbb
movb
mov
sbb
scas
stc
fcoml
sarb
mov
test
lret
push
pop
sarb
jb
outsl
test
insl
popf
pop
jno
cld
and
sub
lock
pop
jo
shll
jmp
rolb
ja
add
cmc
pushf
add
inc
mov
add
lea
in
mov
popa
push
dec
sub
dec
outsl
insb
test
adc
xchg
ljmp
fwait
xchg
inc
out
cld
jg
data16
inc
addr16
sub
sbb
cltd
pop
mov
jle
movsl
je
sub
pop
add
scas
mov
inc
scas
sub
and
jbe
popa
sbb
pop
jecxz
out
lea
push
call
mov
adc
mov
push
xor
ss
xor
shlb
cmp
imul
inc
loopne
test
out
adc
xchg
and
mov
lds
movsb
xor
loope
dec
sub
int
iret
fcomp
out
ljmp
adc
adc
mov
stos
clc
mov
clc
lret
out
jne
loop
add
pop
push
ffreep
pop
outsl
push
mov
pop
mov
inc
movsb
dec
and
cmp
inc
pcmpgtb
cmp
sbb
out
mov
ljmp
sub
or
aam
lcall
shlb
dec
mov
fidivrl
stos
pop
in
flds
jp
lods
mov
dec
in
mov
mov
lods
dec
dec
mov
movsl
sbb
add
xchg
addr16
in
loop
imul
pop
mov
dec
shrl
push
aam
out
xchg
cs
pop
repnz
sbb
js
xlat
fstps
xor
push
mov
and
xchg
mov
xlat
and
scas
call
sbb
xchg
loope
and
cmp
fidivl
bound
dec
xchg
int3
inc
inc
rorl
push
stc
stos
adc
fcmovnu
adc
sbb
mov
popf
dec
cmp
test
mov
adc
pop
imul
lret
shlb
and
inc
xor
imul
repz
cwtl
and
sub
adc
scas
mov
or
rolb
inc
lret
jns
xor
aad
ljmp
xor
fisttpl
add
out
sub
push
pop
mov
adc
pop
and
sub
or
out
gs
and
mov
inc
sbb
ss
fs
cmp
movsl
mov
int3
xor
cmp
dec
movsb
xchg
xor
dec
clc
inc
in
inc
push
fs
mov
cmp
stc
xlat
ljmp
and
sub
push
loopw
xlat
mov
pop
pusha
scas
push
mov
shll
push
cwtl
aad
gs
mov
loope
push
iret
inc
popa
push
mov
add
aas
sbb
addr16
lds
cmp
cltd
mov
or
add
es
push
push
xchg
fs
adc
mov
mov
push
into
shrl
xchg
scas
call
cli
dec
cmp
push
mov
outsl
hlt
scas
or
jg
pop
sbbl
pop
add
fistps
jp
enter
pop
mov
subl
jnp
push
push
subb
iret
rolb
ja
imul
lds
mov
dec
pop
add
inc
xor
in
push
clc
lret
leave
ret
push
pop
lock
jecxz
into
cmp
push
shl
jg
js
cmpsl
inc
adc
jg
in
sub
loope
and
xchg
mov
inc
sbb
ret
adc
std
out
sbb
outsb
sbb
dec
mov
fnstcw
imul
in
repz
jne
mov
pop
cld
ja
or
outsl
orl
aad
sbb
je
outsl
add
pop
adc
and
lds
cs
push
or
mov
or
mov
pop
ljmp
pusha
pop
fnsave
dec
movsb
cmp
sub
fsubp
inc
push
add
je
jbe
jns
inc
sbb
lods
jne
nop
stos
jnp
pusha
xchg
add
xchg
std
xlat
repz
push
push
add
testb
js
lret
mov
shll
ja
arpl
push
inc
inc
xchg
mov
mov
out
gs
pop
add
arpl
lret
xor
loop
adc
xor
cmpsl
or
pop
mov
js
dec
and
fisttpll
cli
sbb
dec
fwait
leave
mov
stos
xor
ja
shll
inc
pop
mov
neg
jl
jb
cmpb
icebp
in
cmp
adc
out
add
xchg
scas
jge
sbb
xchg
std
es
jno
mov
rcll
leave
loopne
lods
and
and
movsb
pop
adc
push
mov
notb
testl
insl
inc
sti
sbb
add
jecxz
ljmp
pop
push
loop
push
xorb
test
subb
sbb
mov
je
movlps
push
push
push
cmp
jne
fsubs
ljmp
test
cmp
cmc
enter
cmpsl
test
or
popa
aam
mov
movsl
mov
rorl
lods
test
mov
int
push
lock
aaa
dec
mov
xor
stc
scas
out
push
gs
iret
scas
data16
lret
fidivrl
movsl
fdivl
lret
not
mov
ja
mov
mov
fiaddl
jp
push
mov
dec
popa
dec
fistpll
hlt
bound
push
das
adc
mov
popf
push
test
sub
je
in
pop
ret
dec
and
jmp
out
ret
pushf
xor
dec
inc
loope
adc
cmpsb
fisttpl
fildll
pop
cmp
outsl
add
mov
push
pop
xlat
jns
into
test
mov
xor
out
add
cmp
ret
imul
ficoml
es
mov
lods
ret
adc
sarb
pop
fucom
mov
dec
or
pop
dec
outsl
cs
jbe
or
lret
test
gs
add
xchg
dec
cmp
dec
andl
push
xor
dec
pop
les
inc
mov
dec
je
cs
arpl
mov
or
sti
cmc
add
sub
or
pop
jb
out
mov
dec
insb
int3
jle
test
pop
call
jp
sbb
popa
cmpsl
and
pop
movsb
add
mov
dec
push
pop
lea
push
xchg
add
xchg
sti
inc
popf
add
dec
or
add
jns
rep
movsl
hlt
mov
inc
cld
jmp
cmc
dec
jbe
popf
stos
push
adc
je
movsb
xchg
add
and
mov
add
mov
pop
sub
movsb
dec
mov
mov
cmp
int
outsb
imulb
call
or
mov
fisttpl
and
adc
jmp
jno
lahf
ds
jge
fnsave
jg
popf
cmp
mov
outsl
rorb
cmp
test
add
adc
int3
inc
popf
nop
xor
int3
add
icebp
xchg
pop
mov
sbb
mov
mov
xchg
loope
sti
dec
cwtl
or
adc
push
into
cld
jp
mov
test
mov
inc
jae
dec
imul
movsl
sub
movsb
xchg
jns
imul
jecxz
xchg
or
or
lds
int3
jnp
cmpsl
xlat
jno
xchg
adc
fcoms
mov
scas
icebp
jo
idivl
inc
push
and
push
cli
xchg
insl
fsubrp
cwtl
repz
cmpsl
jae
mov
fcoms
inc
fildll
jle
cmpsl
in
inc
and
jae
inc
sub
xor
sbb
jb
call
addr16
mov
dec
not
fbld
scas
rcrl
call
lods
mov
cs
xor
pop
in
jge
movsb
cwtl
inc
mov
ss
mov
pop
sbb
outsl
leave
pop
fbstp
adc
or
mov
mov
cmp
int
lods
fldl
sbb
addr16
or
mov
pop
lret
pmaxsw
in
jae
enter
mov
pop
int3
xlat
fcmovnb
adc
mov
xorl
aad
pop
xor
test
fsubs
rcll
into
pop
pop
mov
stos
xor
push
out
lcall
enter
or
xor
inc
fcoml
add
mov
push
std
nop
int
insl
ljmp
jns
sahf
data16
subl
sub
jns
loope
fstps
or
or
roll
imul
test
loopne
push
imul
jmp
outsb
adcl
push
and
cmp
daa
popf
inc
jg
pop
popf
test
mov
and
hlt
push
in
ret
jae
and
aad
cmpsl
push
pop
xchg
sub
into
sti
pop
push
int3
clc
mov
ljmp
mov
scas
mov
inc
popf
insl
int
mov
xor
dec
xlat
cmp
sbb
imul
pop
push
sub
loop
pop
aad
inc
inc
popf
mov
xorb
or
adc
and
test
aaa
pop
push
scas
and
js
out
test
ja
jmp
adc
cmp
cmpsl
icebp
out
sub
js
cmpl
add
movsb
dec
gs
cmp
nop
xor
hlt
aaa
std
mov
cmp
ss
mov
ss
push
jae
pop
fstps
hlt
cmpsl
push
sbb
test
mov
push
and
fsin
fcomps
nop
mov
mov
sbb
call
std
int
rol
adc
xchg
xchg
mov
fisttpll
mov
cmp
pop
out
iret
ljmp
in
adc
fnstcw
mov
pushf
mov
jge
lcall
mov
sbb
mov
sbb
xor
xchg
pop
cmp
clc
cmpsl
lcall
repz
mov
ret
xchg
in
jnp
loopne
jl
dec
loop
cmp
xor
movsb
mov
mov
mov
jnp
inc
ret
int
sbb
outsb
push
mov
in
xor
add
test
out
shll
add
sbb
test
daa
dec
inc
movsb
nop
push
fidivl
mov
lds
dec
pop
xchg
mov
xor
arpl
pop
push
mov
push
sub
fistpl
inc
stc
into
dec
add
cmpsb
mov
test
repz
pop
or
xchg
adc
les
xorb
in
lods
xor
arpl
dec
pop
pop
in
jge
lret
and
fldt
xchg
push
adc
mov
or
adc
sbb
iret
lret
jl
push
out
mov
mov
sub
sbb
mov
scas
adc
aad
sbbl
sbb
xorb
sbb
xor
pop
cli
xchg
rcrl
popa
stc
and
or
xchg
insl
or
cmpsb
inc
or
sbb
sub
sbb
je
cmp
leave
sti
shrl
stc
ja
addr16
sahf
idivl
lret
nop
and
cwtl
sbb
sbb
sahf
or
test
xchg
scas
jns
imul
xor
xchg
dec
arpl
xchg
push
and
clc
xchg
xchg
xchg
test
lcall
sbb
das
push
mov
icebp
and
jp
pop
and
daa
sub
cmp
mov
outsl
fcmovb
jnp
mov
lds
cs
add
sub
sbb
movsl
sub
or
subl
test
aas
filds
or
add
bound
outsl
mov
sbb
jb
mov
fidivrs
out
std
push
push
mov
bound
sub
and
out
xchg
rol
repnz
hlt
cmp
adc
push
fwait
negb
xchg
dec
push
dec
popf
dec
pushl
adc
inc
inc
imull
in
mov
xor
mov
jmp
adc
add
mov
std
in
addl
xchg
xchg
repnz
cmp
add
stos
push
stos
dec
pop
call
and
pop
jl
sbb
jae
mov
cmpsl
xchg
shrl
mov
mov
fdivrl
pop
arpl
es
repz
mov
mov
mov
mov
lea
and
mov
add
sbb
lock
shrl
xchg
insl
pop
js
aad
aad
mov
xchg
cmpsl
push
sub
dec
daa
push
mov
ret
cmpsl
add
jge
ljmp
push
sbb
jecxz
and
mov
dec
xor
jo
pop
ds
aad
mulb
mov
cmc
add
and
adc
test
fs
fsubp
mov
lods
and
dec
cltd
jmp
or
mov
cltd
xor
je
mov
mov
add
push
dec
or
xchg
inc
int3
and
cmpsl
inc
bound
or
mov
push
push
shll
stos
mov
add
add
gs
dec
mov
cs
mov
pop
cmp
je
cmp
inc
ja
ja
inc
movsb
push
sub
mov
rorl
sbb
inc
xchg
jle
mov
rcr
or
lcall
fs
pop
mov
inc
and
ret
adc
mov
mov
imul
and
fs
arpl
mov
mov
stc
je
loop
push
ja
clc
pop
addr16
movsb
push
and
add
popf
add
cltd
aaa
inc
dec
xor
cld
mov
mov
push
push
scas
js
dec
jbe
lds
xchg
jge
popa
and
xor
xchg
sbb
aad
push
data16
ret
hlt
xchg
scas
pop
ss
shl
inc
pushf
pop
icebp
scas
aad
pop
jb
fisubs
shrb
xor
in
xor
daa
mov
outsb
dec
cmp
insl
cmp
add
test
into
cmpsl
or
dec
jo
je
add
jmp
cmc
dec
mul
jnp
movsl
rcpps
push
pop
je
mov
pop
xchg
lock
xor
push
sbb
push
pop
mov
mov
inc
push
scas
dec
pop
test
mov
loop
in
mov
call
ss
pop
ror
dec
adc
or
and
ds
loope
jae
push
das
inc
inc
loope
jb
lahf
xor
lret
sub
cmp
and
shr
mov
inc
scas
les
sbb
xchg
mov
lods
out
xchg
sbb
cld
sub
popa
jno
mov
and
testl
or
test
inc
in
and
pop
mov
test
inc
and
enter
xchg
add
xchg
mov
in
and
jo
test
dec
js
ret
test
add
iret
rcll
fdivrs
test
cmp
call
adcl
cmc
xor
push
inc
movsb
int3
xchg
aad
dec
pop
outsb
sub
pop
adc
loopne
mov
sub
pop
mov
sub
mov
or
add
testb
gs
mov
push
inc
mov
movsb
push
lcall
sbb
stos
data16
fstpt
pusha
orb
rcll
cltd
mov
adc
lret
xchg
shll
int3
bound
cli
incb
data16
je
dec
mov
movsb
addl
aad
movsb
push
xchg
mov
fwait
dec
popf
mov
mov
mov
sbb
arpl
cltd
lret
add
es
or
cmp
mov
inc
add
test
cmpsl
mov
rorl
insb
cmp
aaa
or
testl
rcr
sbb
std
lcall
popa
lret
jae
aas
in
fadd
mov
jmp
nop
movsb
sbb
cmpsl
push
cwtl
es
mov
fcmovb
lcall
movsl
pop
es
std
int3
pop
cmp
adc
call
xor
lret
iret
enter
xchg
pop
mov
inc
adc
mov
jmp
test
hlt
in
mov
loopne
cmp
inc
pop
cmp
and
fwait
and
jmp
in
arpl
sbb
call
ja
test
mov
mov
roll
lds
stos
add
and
mov
fnstenv
loope
in
dec
xor
dec
mov
jno
popf
jns
call
das
sub
stos
mul
sub
inc
mov
pop
add
notl
push
xchg
icebp
cmpsb
lret
and
jbe
lea
movsb
mov
mov
out
fdivrl
jo
and
idiv
testl
std
popf
add
stc
mov
aad
and
ficompl
mov
add
aad
inc
add
sahf
ds
call
adc
shl
sub
ror
push
mov
pushl
jmp
sub
in
leave
jg
jg
sub
sbb
pushf
jne
out
jge
sbb
mov
pusha
mov
ror
inc
test
fisubrs
xor
pop
div
loopne
sbb
mov
mov
pop
mov
cld
ljmp
jg
or
sbb
xor
and
hlt
cmp
lahf
add
enter
insl
mov
ret
xchg
cmpsb
mov
sub
hlt
ljmp
test
sbbb
xchg
test
xchg
adc
fildll
mov
mov
mov
sub
cmc
clc
and
aaa
mov
xor
test
inc
xchg
daa
stos
inc
addl
xchg
fmuls
sbb
fdivrs
sbbl
xchg
lds
jns
push
adc
leave
add
fidivrl
cmpsl
shr
dec
fisubl
cltd
je
in
mov
inc
cld
cmp
jp
mov
in
icebp
aam
jns
in
icebp
pop
lret
bound
test
mov
and
enter
push
pusha
xor
jmp
shrl
sbb
outsl
movsb
sahf
inc
pop
and
aas
jge
sub
out
and
bound
aam
inc
adc
sbb
andb
loop
jp
push
lods
push
push
imul
lea
std
aaa
and
jmp
data16
test
mov
daa
repnz
jecxz
cmpsl
dec
mov
xchg
in
lahf
cmp
aas
jl
sub
xor
mov
dec
into
xor
cmpsl
xchg
ficompl
pavgw
fwait
push
adc
cmp
lock
jo
fstps
lods
in
dec
inc
and
push
loopne
jecxz
rcrl
adc
mov
shr
mov
into
in
sub
bound
add
jae
xchg
mov
cmp
sub
outsl
paddusw
adc
push
gs
arpl
pushf
jecxz
out
sub
fidivrl
adc
cwtl
sahf
mov
jnp
loopne
cmp
imul
popf
in
mov
cs
fistl
nop
xchg
push
fadd
ret
rorb
push
xchg
jecxz
xor
inc
gs
dec
and
cmpsb
dec
loope
cmpsb
mov
and
pop
pop
ja
shl
push
addr16
ss
std
ret
mov
fiaddl
lahf
jbe
shlb
sarl
fsubrp
push
test
push
js
es
int3
es
test
inc
mov
or
pop
loope
stos
adc
xchg
xchg
add
cmpsb
pushf
ds
dec
out
es
hlt
roll
sbb
or
cs
je
ds
push
dec
cmpl
dec
fistl
or
adc
xchg
aam
or
pusha
ret
mov
push
es
loope
int
out
data16
or
comiss
mov
jecxz
dec
cli
jnp
xor
dec
xor
pop
aas
std
loope
pusha
mov
in
push
mov
jg
or
in
xor
das
dec
xlat
pop
mov
sti
cld
sar
jb
push
mov
punpckhdq
jl
push
jge
xchg
clc
pop
popf
pop
jecxz
arpl
xchg
inc
es
inc
popa
cs
inc
addr16
cli
push
cmp
bound
mov
clc
adc
adc
test
sbb
mov
enter
lahf
fldt
dec
jp
inc
jae
and
cmp
sub
imul
xor
shlb
jle
push
inc
dec
addr16
pop
imul
jb
mov
gs
mov
mov
cwtl
orb
pusha
mov
pusha
push
aaa
cmp
cmp
int3
loop
sbb
or
add
outsb
mov
fucomi
ffree
xor
lods
imul
add
stc
test
xchg
sahf
outsl
stc
in
shll
cmpsl
sbb
push
dec
mov
dec
sbb
int3
mov
fidivrs
nop
sahf
xor
clc
ss
out
jg
lock
insb
sub
xlat
js
test
call
pop
mov
aam
mov
movsl
std
cld
dec
jmp
add
adc
bound
sub
sub
or
or
or
and
jecxz
push
mov
lods
cmp
jl
lret
pop
fldt
out
mov
je
fdivs
and
dec
push
das
outsw
inc
push
jbe
aam
push
or
cmp
inc
and
arpl
pop
aaa
addb
dec
cmpb
and
jo
mov
mov
loope
std
aaa
test
xchg
sbb
insl
and
mov
push
inc
pushf
aaa
jmp
jp
mov
pop
shll
popa
jl
cs
shrl
daa
repnz
inc
dec
andl
sbb
repz
mov
out
push
lea
push
out
xor
mov
add
jmp
or
sub
iret
sub
adc
cltd
adc
das
inc
out
xchg
ret
inc
xor
push
sbb
mov
jns
jnp
lahf
hlt
mov
addr16
pop
dec
xchg
ss
mov
or
pop
pop
fdivs
mov
mov
jmp
aas
cltd
push
jmp
into
in
sub
imul
dec
enter
aad
add
inc
xor
mov
aas
xor
pushf
adc
xor
xchg
sbb
aad
xor
fwait
cmpsl
jmp
in
not
out
ret
mov
push
push
das
mov
gs
fildll
lock
mov
inc
rorb
icebp
popf
fsubrs
dec
jle
lea
pushw
int
fildll
ljmp
or
xor
dec
in
outsb
and
scas
pop
arpl
push
push
push
pop
aam
xchg
ret
jne,pn
or
mov
sarb
fidivl
mov
lea
jp
fistps
je
xor
adc
test
sahf
arpl
mov
loop
mov
sub
push
test
jl
mov
dec
pop
adc
or
shrl
xchg
popf
std
adc
mov
jb
jb
adc
push
mov
in
in
pop
fcmovb
data16
in
adcl
fildll
fdivr
iret
mov
adc
push
stos
dec
out
xchg
loope
or
cmpsl
pop
sahf
arpl
jle
ja
xchg
fs
mov
push
jecxz
mov
inc
and
add
fiaddl
fwait
int
sarb
fs
and
cli
out
scas
outsb
cmc
push
int
jecxz
add
insl
jns
sub
inc
fs
inc
lds
xchg
and
cmp
scas
mov
jb
xchg
pop
lahf
fistpl
xchg
or
call
pop
lods
fisubl
loope
pop
insl
xchg
dec
xchg
insb
mov
adc
idiv
ret
mov
cmp
cmp
sti
inc
pop
sarl
mov
out
popa
nop
inc
and
cmp
movsl
sbb
insb
sbb
adc
push
fcoms
sub
dec
or
xchg
cmp
call
cltd
pop
ret
adc
shlb
mov
test
xor
pop
or
xchg
sub
jle
inc
into
pop
insl
ficomps
sub
gs
ss
enter
rcll
fcoms
or
push
dec
insl
mov
aaa
cld
je
rclb
divb
xor
mov
add
fimuls
adc
les
pop
xor
rcrl
sbb
lcall
insb
das
aaa
ljmp
fdivp
jnp
jne
mov
testl
xchg
cwtl
fbstp
sub
mov
xor
pushf
inc
pop
jne
sbb
out
adc
sahf
mov
xor
mov
cmp
andb
rcr
loopne
cmp
xchg
out
out
adc
out
sbb
andl
inc
aad
test
mov
subb
push
ljmp
jbe
push
rorl
data16
cmp
outsb
aas
je
jp
sbb
aad
pop
subl
rol
mov
or
xchg
ss
in
fcompl
mov
pop
ljmp
lods
daa
xchg
sarl
inc
cld
push
mov
cltd
lds
xchg
mov
xor
aam
xor
xlat
sti
test
lods
mov
xchg
fbld
jle
sbb
insl
push
movb
push
add
or
pop
and
xor
cld
dec
lods
xor
xorl
lea
js
add
sarl
scas
mov
mov
dec
ja
add
push
je
or
call
rcll
mov
add
or
iret
adc
sub
int3
lcall
push
cmp
push
sub
loop
xor
es
sub
in
js
pop
add
ret
add
sbb
jmp
dec
mov
lahf
xchg
jb
test
xchg
pop
enter
xlat
push
mov
mov
inc
stos
addr16
jns
les
xlat
lds
xchg
insb
std
sub
cltd
pop
push
loopne
orl
or
xor
out
and
fabs
cli
inc
ss
pop
lret
sar
aam
stc
cli
push
xchg
mov
mov
gs
jne
dec
push
popf
pop
pushf
mov
ja
das
jb
cld
lock
andb
sahf
and
mov
mov
std
mov
or
aas
ljmp
les
cltd
adc
mov
cmp
dec
movsb
adc
xor
mov
call
out
stc
inc
dec
mov
xor
je
pop
lret
mov
mov
mov
jne
ja
sub
sbb
popa
lcall
inc
cmp
lret
fdivs
sbb
xchg
movl
fnsave
and
or
dec
dec
loopne
inc
and
data16
imul
mov
enter
inc
lods
adc
popf
dec
jno
das
fcoms
mov
jg
fs
sbb
js
xchg
add
pop
pop
fnstenv
std
and
mov
div
fbld
and
cmp
pop
lahf
cld
or
pusha
xor
bound
xchg
xor
leave
inc
fdivrs
sub
data16
xor
les
or
fdivs
testl
adc
cmc
mov
aaa
cmp
pop
std
mov
pop
dec
add
out
out
scas
dec
mov
loope
movsl
sub
cmp
lret
add
daa
push
orl
clc
shlb
cwtl
pop
repnz
and
testl
add
int
je
into
push
ficoms
xor
repz
sub
test
es
mov
daa
in
lcall
sub
shll
xchg
pop
cmp
mov
push
cltd
jns
xor
es
push
sbb
rclb
xor
mov
mov
cmp
ret
popa
inc
scas
cmp
stos
push
in
push
mov
pop
fwait
addb
or
dec
push
cmp
je
and
fbstp
outsl
mov
and
cmp
push
into
sub
dec
push
mov
mov
push
pop
loopne
mov
ret
int
xchg
xchg
sarb
xor
add
xor
jns
inc
or
clc
sbb
push
pop
xchg
add
jnp
in
repnz
div
arpl
outsb
out
dec
xor
aaa
fldcw
dec
cmp
fs
sub
mov
out
sbb
insl
mov
insl
les
ds
xorl
xchg
ja
or
cld
popf
add
or
outsb
sub
mov
dec
arpl
subb
jb
add
jl
jbe
mov
xchg
mov
testl
rol
sbb
pop
mul
loopne
shll
movsl
int
fdivrl
loopne
in
aas
into
push
jle
sub
mov
addr16
sarl
addr16
nop
stc
fidivrl
je
mov
cmpsl
inc
push
cmp
mov
xorb
cli
sbb
out
je
xorb
out
fs
xchg
and
int3
arpl
push
mov
xchg
xchg
push
mov
popf
push
ljmp
fs
dec
xor
out
dec
in
sahf
adc
xchg
or
mov
pinsrw
sub
or
jns
fidivl
adc
cwtl
pop
pop
mov
jo
je
lret
dec
mov
push
mov
test
fstps
js
bound
stos
xchg
jae
xor
mov
jns
in
nop
sub
push
mov
sbb
push
lret
jmp
push
movb
xchg
cwtl
xor
add
adc
repnz
rcl
cmpsl
lret
rol
orl
add
fidivrs
out
and
xlat
xor
shlb
rol
cvtps2pd
or
mov
adc
sub
mov
outsb
pop
imul
idivb
push
jbe
ret
fs
push
sbb
dec
lods
push
adc
mov
movl
mov
cmc
fnstcw
xor
mov
popa
xlat
xor
push
out
inc
out
pop
mov
filds
xor
mov
in
cli
jo
or
xchg
xchg
jne
jge
call
int
xor
cmp
mov
gs
dec
pop
push
fadd
pushfw
enter
xor
mov
adc
mov
rcrl
clc
xchg
int
jmp
xor
push
pop
or
je
cld
sahf
icebp
add
pop
sub
lcall
xchg
je
lock
jmp
xchg
sub
mov
add
mov
jb
in
or
lret
xchg
das
out
sbb
xor
enter
test
mov
scas
pop
push
xchg
jl
popf
inc
out
xchg
xchg
sub
jecxz
es
pop
addl
repz
mov
das
in
ja
cs
dec
push
popa
popa
or
push
mov
inc
dec
in
xor
cmpsb
or
dec
inc
mov
inc
push
addr16
popa
inc
xchg
add
inc
jne
inc
jb
iret
sub
adc
xor
notb
mov
mov
pop
daa
push
aaa
xor
fwait
mov
out
mov
dec
add
shl
loopne
cmp
push
sbb
mov
xor
outsb
shlb
adc
repnz
dec
jae
cmp
add
adc
stos
xchg
repz
outsb
shlb
dec
mov
andb
adc
xchg
in
push
jmp
pop
add
and
imul
inc
xchg
xchg
jecxz
cmpl
jae
lret
xchg
popa
cmp
dec
call
inc
push
adc
inc
xor
xor
addr16
addr16
jl
test
jle
jnp
mov
pop
js
mov
out
adc
repnz
fnstsw
repz
cmp
sub
sbb
cli
push
fwait
outsl
ret
jmp
fnsave
pop
mov
jle
push
mov
push
mov
mov
sti
mov
int3
adc
mov
pop
push
fwait
inc
cmpsl
lret
inc
nop
aad
jmp
push
pop
cmp
inc
and
fcom
pop
test
sbb
pusha
mov
std
mov
les
mov
divb
in
cltd
popa
and
scas
or
inc
in
sti
inc
or
jo
adc
fnstcw
push
add
jb
ss
sbb
cmp
add
lcall
pop
xchg
inc
add
je
adc
int
adc
out
lahf
sbb
xchg
adcl
xchg
and
fidivrs
push
dec
sbb
push
hlt
addr16
mov
out
out
adc
scas
cwtl
pop
add
push
repz
lahf
mov
push
scas
stos
test
aas
xchg
mov
test
mov
dec
mov
adc
bound
pop
insl
lcall
std
mov
and
loope
aas
xchg
add
sahf
stc
mov
repz
fmull
inc
js
push
jbe
int3
ret
adc
xchg
aad
popa
aas
sub
push
leave
push
icebp
xchg
out
cmp
idivl
or
ret
sbb
mov
inc
sub
pop
mov
test
stos
dec
aas
cwtl
sbb
lcall
xchg
stos
cmpsl
mov
mov
jns
xor
sub
xor
push
mov
clc
addr16
and
es
popf
test
lods
adc
jle
xchg
outsl
dec
shll
arpl
jl
adc
call
cmpsb
add
jbe
add
pop
in
xor
xchg
adc
dec
pop
lods
or
inc
frstor
enter
and
stc
clc
mov
daa
scas
dec
xchg
dec
adc
outsl
mov
mov
pop
add
fsubl
or
mov
test
ret
data16
inc
mov
sbbb
or
sub
and
inc
fdivl
inc
jo
push
dec
gs
ret
inc
mov
je
rorb
outsb
test
inc
cmp
pop
dec
aaa
roll
jmp
cwtl
jno
xlat
mov
jae
outsb
inc
insb
xor
pop
xchg
mov
push
lcall
xchg
push
jo
xchg
jae
mov
pop
data16
pop
adc
test
sbb
aaa
test
xor
inc
mov
push
inc
xlat
jae
iret
pop
and
repz
sbb
jbe
jg
into
ficomps
pop
loope
dec
popa
test
shl
addl
ljmp
pop
test
mov
adc
inc
leave
cmp
stc
mov
leave
cmp
xor
in
add
iret
mov
xor
stc
fidivrl
dec
fimull
nop
gs
and
in
loopne
or
daa
loope
cmc
in
sti
js
cwtl
mov
lahf
cmp
cmpsl
mov
sbb
rcrl
push
push
and
clc
mov
cmp
popf
and
adc
daa
xlat
lret
or
xor
push
push
cs
imul
push
sub
add
sbbl
inc
test
sbb
jp
out
cld
sub
inc
sbb
fcompl
sub
int
pushf
push
mov
xchg
mov
fbld
testb
jle
dec
ret
sbb
xchg
xchg
mov
add
ss
hlt
insl
xchg
push
push
aaa
xchg
das
call
push
jl
rcrl
pushf
pushf
mov
leave
dec
scas
sub
jmp
in
or
stos
in
clc
jbe
cmp
push
or
mov
adc
fwait
adc
outsl
call
fisubrl
xchg
into
dec
ret
sub
jbe
or
aad
je
in
das
or
sub
and
lahf
push
push
mov
and
add
adc
into
xor
das
jecxz
and
and
sub
mov
push
repnz
sbb
hlt
shrb
xor
inc
and
ja
cmp
inc
xchg
scas
in
mov
adc
loopne
ret
mov
and
insl
and
aaa
jp
enter
or
fstps
and
inc
cmp
add
adc
fnstsw
mov
xor
aas
xor
out
sub
jge
pop
sbb
xor
pop
sbb
sub
cmp
leave
mov
add
test
push
cmp
fimuls
mov
sahf
sti
into
xor
cmp
sarl
roll
xorl
jnp
xchg
out
sbb
lret
jne
leave
xchg
xchg
mov
mov
fucomp
imul
sarb
call
fucom
mov
cmp
pop
xor
faddl
sub
lret
adcl
adc
cs
sbb
gs
xchg
pop
sbb
jl
ljmp
xchg
push
inc
pop
andb
cli
and
inc
adc
xchg
and
hlt
mov
xchg
or
and
cmp
cmp
inc
xor
mov
add
adc
xor
push
jl
jle
dec
mov
cmp
imul
xor
fcomip
mov
pop
stc
mov
cld
push
xorb
jnp
pop
push
lds
and
and
sub
ret
xlat
pop
dec
push
dec
std
push
mov
ret
mov
mov
sbb
lahf
jae
sub
cmpsl
dec
test
test
repz
mov
fildll
cmp
xchg
into
sbb
int
mov
adc
aas
cmpsb
adc
mov
jecxz
int
jg
lahf
and
dec
jecxz
pop
call
setbe
rolb
push
pop
mov
xchg
mov
push
and
je
lea
inc
sbb
jg
fiaddl
sbb
scas
adc
and
sub
inc
pop
mov
es
xchg
fmuls
lahf
test
loopne
xor
push
or
into
mov
scas
daa
and
fiaddl
lock
sub
stc
sbb
ret
das
idivb
inc
lds
popf
lret
push
sbb
push
sbb
mov
jno
and
xor
mov
push
fwait
mov
ljmp
leave
in
je
in
lds
mov
mov
inc
sbb
xlat
arpl
mov
mov
lea
and
jl
inc
mov
lcall
xchg
push
dec
cmp
cld
dec
cmpsl
mov
popf
cwtl
cmp
incl
cld
scas
scas
test
or
mov
rcrb
outsl
subb
rcrb
mov
mov
dec
xorl
push
in
and
pop
cmp
inc
sub
repz
push
inc
int3
xchg
xorl
mov
cltd
ss
dec
cli
and
xor
add
xchg
jge
jp
xchg
insb
imul
and
xchg
jecxz
mov
jle
jne
pop
outsl
shll
pop
xchg
out
xor
lds
xchg
pop
hlt
jb
sbb
fs
jecxz
xor
push
cs
or
cmp
pushl
inc
ss
push
icebp
fsub
jbe
xchg
inc
push
cmp
fstl
adc
mov
test
or
push
dec
jg
mov
mov
and
arpl
cmc
cwtl
in
sbb
push
xchg
mov
adc
mov
insl
pmuludq
or
jno
fs
filds
gs
pop
push
fsubr
sahf
out
adc
mov
inc
aas
xchg
xor
and
inc
daa
sub
jne,pt
xchg
ss
jge
cmp
xchg
scas
and
push
fnstsw
pop
xor
mov
pop
inc
cmp
or
and
pop
lock
movsl
stos
add
test
mov
jmp
mov
push
xchg
xor
aas
xchg
insl
stos
jo
in
jb
mov
cmp
mov
mov
lods
xchg
jmp
scas
test
popa
aad
addr16
scas
pop
and
jp
dec
das
push
das
jl
div
ljmp
jnp
cmpxchg
icebp
jae
cli
iret
movsl
jl
movsl
rclb
daa
sbb
testl
pop
lds
fcmovbe
loope
sbb
jns
fcom
outsb
ss
inc
fwait
stos
adcl
xchg
pop
fldt
adc
mov
test
les
push
in
lock
shl
ret
test
cmc
push
add
pop
jp
outsl
std
stos
pushf
aad
push
push
cmp
loop
cld
cmpb
jb
cmp
mov
or
sub
dec
pushf
fwait
cmp
gs
outsb
pop
mov
repnz
jmp
dec
ljmp
mov
ss
jno
fbstp
adc
mov
movsb
add
inc
inc
ja
cli
sub
adc
repnz
push
jge
ljmp
int
xchg
adc
jp
sbb
and
jnp
dec
hlt
push
ss
notb
sbbb
cmpsb
jo
pop
scas
shlb
and
adc
jge
loope
xor
jnp
xchg
mov
sub
pop
jns
push
enter
jb
lcall
out
in
sub
out
jae
test
mov
and
andb
mov
popf
jne
adc
jo
lock
xlat
movsb
push
pop
mov
or
sub
js
sbb
mov
sub
mov
mov
lods
int
xor
test
pop
cmp
in
cltd
movl
test
pslld
imul
jne
adc
popa
xchg
push
loopne
and
mov
jno
dec
loop
iret
jge
pusha
dec
xor
mov
push
mov
loop
mov
push
adc
xchg
outsb
inc
loope
insb
cltd
cmc
mul
jbe
sahf
push
les
or
xchg
in
push
add
lret
push
mov
or
cmp
daa
push
inc
loop
sub
inc
sar
mov
or
push
xchg
leave
xor
adc
dec
mov
and
jno
jp
inc
arpl
lock
insb
daa
sub
xchg
sub
push
daa
pop
mov
push
mov
adc
inc
and
fimull
sbb
pop
push
dec
pop
xchg
das
imul
mov
lods
mov
out
dec
lret
rcrl
jo
outsb
lock
and
jg
push
pop
xlat
enter
test
clc
mov
dec
inc
or
xorl
ret
sbb
fmul
mov
and
icebp
popf
mov
xchg
xchg
test
pop
xlat
cmpsl
sbb
pop
cmpsb
cli
sbb
add
jb
jmp
int3
testl
adc
jbe
cs
call
repz
aas
ficoml
fisubrs
and
push
mov
imul
pop
mov
cltd
js
pop
mov
xchg
lock
xchg
push
push
loope
inc
out
mov
stc
jnp
cmpsl
pusha
dec
or
dec
leave
xchg
push
aam
xor
inc
rol
pushf
mov
fwait
lahf
stos
inc
push
dec
imul
scas
in
jns
hlt
adc
jmp
ss
iret
stc
lods
lret
addr16
cmp
clc
xor
sbb
mov
repz
xchg
dec
or
int3
orb
xchg
jl
cs
int
push
shrb
data16
ret
in
daa
jns
mov
xor
enter
inc
cld
pusha
cwtl
push
xchg
dec
mov
nop
mov
push
pop
xor
insb
scas
movsb
push
bound
popf
test
pusha
xchg
neg
mov
inc
jno
sub
movsb
fildl
fnstsw
or
inc
push
pop
xor
push
int
in
jp
pop
sbb
cmpsb
dec
and
xchg
adc
cmp
mov
push
clc
in
push
mov
sub
mov
mov
sar
pop
nop
push
and
inc
sub
sub
dec
sbb
push
jne
aam
mov
leave
int3
pop
lcall
out
pop
scas
movl
adc
out
test
rol
and
cmp
cld
jge
add
jne
xchg
inc
pop
cli
fisubl
pop
int
lret
pop
xor
cltd
arpl
xchg
hlt
inc
fidivl
mov
inc
xchg
out
mov
inc
xchg
pop
mov
out
test
mov
data16
push
add
mov
lahf
gs
cs
push
movb
rorl
subl
das
adc
jo
in
adc
movsl
je
or
fidivl
in
xor
sub
test
mov
inc
sbb
jne
cld
xchg
aad
scas
dec
pop
push
push
mov
lds
gs
add
push
sbb
pop
loopne
xorb
mov
test
insl
jne
adc
fsubrl
adc
cld
push
push
movsl
and
out
cmp
inc
in
mov
push
sarl
aas
push
in
addr16
sub
xchg
sbb
sbb
cltd
cmpsl
sub
aam
and
inc
cltd
and
rorl
cli
mov
aas
lds
nop
test
lret
dec
pop
add
rclb
push
cmpsb
add
outsb
push
fsubl
int3
negb
loope
icebp
dec
fstps
cmp
and
mov
pop
aad
movsl
or
pusha
pop
inc
xchg
je
and
mov
cltd
inc
subb
call
or
notl
pop
test
cmp
cmp
leave
stc
pop
ret
adc
std
jecxz
cmp
cmpsb
into
push
mov
repz
mov
sbb
imul
pop
js
add
repz
jne
mov
les
xor
pop
cld
or
addr16
mov
ss
mov
jl
int3
mov
xor
inc
sub
fcoms
or
or
sub
xchg
mov
jb
push
and
add
pop
lahf
adc
mov
imul
push
mov
adc
or
add
cli
test
ret
mov
dec
rcl
and
push
movsb
cmp
jmp
xlat
sub
int
cmpsl
xor
sbb
inc
sub
test
faddl
mov
stos
mov
outsb
push
movsl
mov
push
int3
inc
add
mov
jne
es
ds
and
test
rcrb
push
loope
int
std
sub
rclb
adc
stc
fiaddl
push
ficoms
out
icebp
xor
sbb
aad
jle
mov
mov
xchg
mov
inc
mov
mov
cmp
add
in
aaa
push
xor
cli
imul
idiv
js
addr16
into
push
imul
les
sub
mov
xor
shlb
ret
mov
inc
cwtl
adc
cmc
inc
mov
das
nop
add
addr16
xor
lahf
jecxz
push
sub
jo
int3
pop
add
add
enter
jg
and
inc
aas
push
pop
and
rclb
adc
sub
push
outsl
xchg
push
dec
xor
and
aaa
xor
adc
push
dec
inc
dec
sub
mov
xor
negl
cwtl
insl
mov
jbe
cmp
xchg
jbe
inc
movsl
mov
add
or
mov
dec
sbb
dec
int
arpl
xor
cmc
imul
xor
sub
out
push
inc
inc
push
ret
lret
in
mov
inc
mov
cwtl
pop
sti
mov
pop
inc
pop
pop
lods
pop
ret
mov
mov
jb
adc
out
je
sub
mov
jns
jb
adc
xchg
frstor
mov
icebp
xchg
shlb
and
mov
fnstenv
out
pop
pop
pop
dec
jae
jl
sub
es
out
sbb
pop
cwtl
xor
sbb
scas
mov
ja
ss
insb
rcll
pop
sub
shlb
ljmp
adc
inc
insl
xorb
jg
cmp
cli
mov
cmp
cltd
lods
pop
popf
jge
shrl
mov
pop
cmpb
xchg
push
mov
mov
lret
and
and
jmp
dec
push
aas
xlat
je
ja
scas
fdiv
enter
xchg
jmp
adc
sbb
sub
out
xor
mov
xchg
pop
int3
mov
adc
into
dec
jno
adc
xor
pop
xchg
shl
and
mov
push
ja
idivl
xor
mov
dec
fisubrs
push
mov
mov
push
outsb
outsb
out
mov
cmp
jl
jb
push
ss
cmc
add
push
push
aam
jg
mov
scas
daa
jle
pop
dec
test
cmc
dec
and
imul
stc
cltd
jmp
dec
sub
cmp
jmp
outsl
sbb
mov
mov
jns
dec
mov
pop
aas
lock
mov
lds
or
aam
push
push
jmp
bound
nop
and
inc
scas
mov
push
and
jno
sbb
subb
mov
dec
scas
jle
cmc
jge
pop
in
inc
xchg
inc
into
xchg
cmp
in
sbb
and
insb
sbb
mov
ficomps
cmpsl
outsb
inc
or
jae
sbb
mov
rorb
cmp
pop
scas
sub
enter
orb
jmp
sbb
mov
dec
fisttpl
cmp
or
xor
or
or
mov
sbb
mov
sub
js
cmp
aad
and
push
mov
add
enter
and
sub
sahf
cmc
cmp
jnp
pop
lret
jg
cmp
mov
jl
jp
sbb
xor
mov
mov
rolb
rolb
into
or
push
adc
xor
pop
mov
fldl2e
push
jno
push
repnz
push
inc
enter
jb
push
mov
add
mov
jb
mov
mov
or
add
hlt
fistl
loope
push
test
cli
ret
jae
pop
cld
sti
sbbl
mov
lock
push
orl
push
push
xchg
xor
sub
fwait
rdmsr
ficoms
stc
stc
xchg
cmc
addr16
aad
mov
addr16
or
out
inc
push
cmp
popf
pusha
cld
adc
sbb
cli
divl
mov
sub
mov
pop
mov
inc
inc
inc
iret
mov
jno
call
test
aas
and
in
mov
test
or
call
ljmp
hlt
dec
fs
push
rcrb
mov
fdivs
xchg
cmp
or
in
push
and
cmpsb
mov
xor
imul
mov
adc
orl
bound
popf
lods
shl
jle
cmp
xchg
sub
out
mov
nop/reserved
sub
push
and
and
int3
fs
jbe
push
enter
push
sub
inc
fwait
lret
sbb
inc
jl
loope
test
setnp
icebp
out
cmpsl
cmp
xlat
cmp
das
mov
jle
sub
mov
jnp
inc
mov
jg
xchg
or
push
cld
inc
sbb
pop
jne
sbbl
fwait
test
paddusb
sub
jno
push
je
cmpsb
pusha
add
sbb
into
push
aad
negb
mov
inc
push
pop
mov
ja
jb
jmp
adc
leave
dec
fstpl
pushf
test
jl
test
dec
popa
mov
xchg
fwait
add
cmpsl
lret
in
sbb
and
mov
xor
jg
out
sub
dec
sbb
xlat
mov
pop
rorl
bound
mov
les
inc
lcall
dec
cmc
sub
mov
mov
mov
rcrb
int3
push
adc
jecxz
je
xchg
or
insb
adc
and
jecxz
testb
pop
mov
or
dec
push
iret
push
jmp
mov
fnstenv
adc
mov
fistpl
hlt
popf
sub
ret
jmp
sub
mov
in
push
mov
xchg
sbb
test
mov
pusha
xor
cld
and
iret
cltd
xor
dec
pop
and
or
lcall
rcrb
jle
pop
imul
or
pop
pop
fisubrs
fldl2e
inc
aam
push
dec
lret
je
mov
push
dec
outsb
mov
pop
rcl
test
and
push
push
fdivrp
adcb
int3
cli
test
mov
pop
das
shl
xchg
daa
jle
jl
pop
cltd
inc
scas
sbb
rolb
test
xchg
pushf
cmpl
or
fmull
repz
insb
sarl
subb
cmpsl
mov
push
ja
sub
popf
lods
jnp
mov
dec
out
cmp
in
inc
add
mov
or
addr16
mov
cmpsb
test
pop
loop
xchg
std
or
shrl
sub
inc
imul
hlt
fs
insb
mov
cmp
pusha
jmp
xor
mov
push
push
out
push
dec
clc
repnz
ljmp
mov
paddusw
enter
outsl
xor
lahf
xchg
in
lahf
sub
mov
sbb
or
xor
or
or
fisttpl
mov
stos
jne
outsb
adc
in
xor
mov
notl
add
adc
mov
mov
pop
dec
sbb
inc
rolb
imul
sbbb
je
add
xchg
and
aas
inc
mov
xchg
mov
xor
push
xor
dec
pusha
cmp
xchg
pop
mov
sti
lahf
test
dec
mov
dec
inc
dec
in
shlb
jge
fists
jnp
jp
inc
jbe
iret
scas
loop
xchg
push
add
cmp
repz
gs
mov
dec
add
ljmp
insl
mov
cmp
sti
scas
sub
mov
and
dec
rcrl
xchg
cs
fnstcw
lods
ljmp
shll
adc
testl
add
jmp
add
pop
mov
inc
out
cli
testb
insl
push
bnd
mov
cs
mov
inc
dec
mov
inc
popf
push
mov
mov
dec
mov
mov
fwait
adcb
xor
popa
cmp
or
lret
out
or
mov
ja
mov
cmp
jo
lock
mov
xchg
mov
adc
icebp
adc
arpl
xor
xor
xchg
andl
mov
jg
jo
add
in
adc
jbe
mov
sub
fucomip
ss
mov
enter
sbb
imul
and
pop
int3
and
inc
lock
cmpsl
inc
fldcw
add
stos
decb
arpl
lcall
cld
scas
movsl
jg
pushf
les
adc
jg
lock
loop
mov
inc
jp
cmc
ja
ds
push
and
cmpb
xor
and
add
or
leave
inc
js
aas
sub
sbb
xchg
pop
cmp
popf
ss
shrl
scas
ret
sbb
xchg
stos
and
sbbb
repnz
cmp
imul
test
inc
jle
enter
sub
push
fcompl
in
or
arpl
insl
insl
xor
jg
pushf
shl
cmc
out
push
ret
xchg
mov
data16
clc
adc
and
jmp
push
enter
inc
pop
mov
inc
push
cmpsb
mov
mov
fsub
inc
xchg
xchg
and
lock
in
mov
mov
and
and
in
icebp
inc
jnp
or
jle
dec
test
inc
jno
invd
fld
mov
sub
mull
insb
jge
fsubr
imul
fistl
cs
or
mov
cltd
sbbb
aas
sti
pop
mov
lods
mov
mov
xor
cld
fmul
nop
shr
icebp
outsb
scas
xor
xor
sbb
adc
clc
fcompl
ja
movsb
enter
test
sbb
pop
inc
fnstenv
lcall
inc
mov
push
pop
inc
push
out
jle
pusha
int3
cs
cmp
leave
mov
ljmp
sbb
push
imul
repz
adc
and
aaa
sub
sbb
addb
rcrb
mov
imul
daa
pop
mov
jmp
add
and
sahf
sub
or
roll
sbb
xor
xor
ret
adc
dec
xor
lret
cmp
and
cmc
xchg
aas
pop
add
inc
bound
dec
push
xor
push
dec
and
dec
aad
stc
xchg
repz
mov
mov
adc
outsb
or
shlb
ss
pop
std
into
shlb
imul
in
shlb
stos
imul
mov
insb
mov
jbe
imul
pushf
cld
and
jle
mov
dec
movsb
je
cmpsl
xor
addr16
mov
sbb
enter
out
or
jp
mov
hlt
test
inc
test
je
lods
or
jns
xchg
xchg
push
inc
jg
fsave
stos
addb
or
bound
imul
mov
insl
mov
in
push
adc
stos
or
lds
lret
sbb
daa
inc
inc
cmpl
mov
sbb
stc
cmpsb
adc
xor
mov
pushf
mov
jnp
inc
addr16
adc
jmp
mov
sub
adc
xchg
dec
mov
or
push
fwait
repnz
pop
push
shll
pop
das
pop
push
push
mov
int
push
inc
push
sub
push
enter
sub
out
mov
jbe
gs
lcall
fldenv
mov
xlat
cmp
aam
and
push
test
pop
jecxz
sub
cmp
fiadds
mov
mov
mov
fidivl
addb
mov
pushf
test
xchg
out
je
icebp
and
inc
pop
adc
inc
inc
jg
sbb
cmp
jae
fistpl
jnp
int3
addr16
sahf
lock
mov
aad
outsb
faddl
and
orl
pusha
ljmp
mov
inc
mov
cli
mov
jp
repnz
push
cmp
xchg
icebp
xorb
aaa
cli
rcrl
sub
xlat
jno
in
bnd
in
push
dec
shll
pop
lcall
in
orb
das
jbe
adc
cmp
jecxz
adc
add
jae
int3
cld
imul
mov
je
mov
push
xor
loopne
shl
hlt
mov
dec
jne
es
insl
add
imul
out
data16
sti
xchg
loop
sbbb
dec
inc
or
cmpl
frstor
sub
or
cs
adc
popa
mov
sbb
mov
jo
orb
mov
shrl
and
push
add
in
inc
stos
ret
jl
mov
or
cmpl
dec
dec
dec
dec
xchg
jmp
sti
lds
clc
imulb
dec
popa
mov
loope
mov
xor
mov
stc
call
push
cltd
or
lds
mov
rclb
leave
leavew
cmc
push
pop
stos
ja
ds
xchg
outsl
out
jb
sbb
or
leave
and
adc
movsb
push
shll
inc
dec
push
pop
cmp
mov
lds
adc
ret
sbb
das
jo
or
pop
inc
outsb
push
jbe
jge
pop
push
pop
mov
mov
xchg
out
daa
and
loope
rclb
xchg
inc
into
add
rcrl
xchg
inc
sub
or
inc
dec
and
inc
outsl
data16
add
and
mov
cmpsl
mov
cs
sbb
cld
imul
add
arpl
pop
push
pop
repz
cmp
inc
inc
test
into
or
mull
test
stos
pop
ret
call
jbe
jb
mov
testb
into
pushf
jecxz
mov
mov
inc
pop
lret
mov
dec
test
mov
fbstp
jecxz
dec
arpl
jle
insl
xor
fcmovnu
or
fwait
push
xchg
fs
xchg
dec
and
and
mov
xchg
jl
test
push
stos
sub
arpl
cmc
push
stc
cmp
outsb
cmc
repz
ret
je
push
outsl
cmpsb
mov
mov
add
movsl
jne
pop
mov
cmp
in
push
jecxz
xlat
pop
adc
pusha
pusha
push
lahf
sti
adc
dec
add
push
inc
loopne
push
stos
shr
dec
jns
pop
inc
cmp
cli
lret
lods
inc
outsl
and
sub
or
inc
jne
les
mov
or
sub
adc
lahf
lods
inc
outsl
xchg
scas
ds
jno
or
outsl
mov
mov
faddl
jns
push
mov
pop
pop
jbe
ds
pusha
jmp
pop
addl
call
pop
sbb
pop
in
dec
je
mull
and
iret
test
jmp
mov
movntq
movlhps
popa
dec
and
fstpl
add
jecxz
aam
sbb
jb
int3
dec
adcb
sbb
into
in
movsb
das
cwtl
inc
cmpl
mov
mov
sti
sbb
es
mov
orl
call
decb
cwtl
rcrl
ret
adc
push
arpl
xchg
jl
cs
scas
rcrb
enter
ret
fs
aad
fstl
xchg
and
fsubr
out
dec
adc
jbe
add
sub
add
push
adc
and
scas
bound
mov
mov
testl
pusha
push
sub
push
lods
jge
lods
je
pop
sub
scas
mov
or
cmp
push
aam
cmp
test
add
push
test
addr16
xchg
pop
stc
loope
fstl
push
aas
dec
dec
andl
data16
rorb
shll
pop
jns
jno
add
pop
in
int3
cs
cld
xchg
ret
lret
push
pushf
pop
rcrl
fistpll
bound
addb
in
fsubrp
jmp
inc
mov
dec
mov
push
adc
fimull
leave
adcb
aam
sbb
arpl
outsl
dec
shl
cmp
xchg
leave
stos
pop
cmp
cmpsl
pop
push
xchg
outsl
and
bound
add
movl
sub
fnstenv
mov
xor
pop
ljmp
cld
cmp
arpl
and
in
loop
roll
add
insb
jle
inc
into
mov
xlat
dec
out
mov
rcrl
lods
orl
clc
ret
int
cmpsl
cltd
jle
jnp
ljmp
test
cmpsb
rclb
lods
ds
mov
mov
jbe
loope
popa
dec
mov
push
mov
jb
sub
xor
sub
dec
pop
in
or
sub
jg
aad
lahf
in
in
insl
cltd
inc
adc
jmp
fdivl
pop
add
mov
loopne
mov
insl
jmp
or
and
sti
clc
mov
sub
mov
xchg
and
xchg
lahf
sbb
adc
insl
and
jo
add
mov
iret
test
mov
cbtw
add
daa
mov
rolb
xchg
out
inc
insl
or
pop
xlat
out
imull
mov
or
cmc
enter
imul
fisttpll
dec
pop
add
cmpb
adc
jo
xchg
sahf
std
inc
push
and
shll
leave
pusha
scas
sbb
and
stc
outsl
rcl
mov
jmp
cmp
in
fdivrs
pop
testl
out
mov
incb
and
sar
in
or
mov
inc
scas
adc
sub
mov
dec
pop
hlt
mov
lret
nop
repnz
mov
xchg
mov
push
test
jmp
lods
imul
into
mov
loope
jle
push
nop
arpl
or
add
insl
jb
mov
in
out
or
sbb
or
aad
dec
or
add
test
dec
xchg
cmp
cltd
cmp
xlat
dec
pusha
leave
arpl
int3
stos
xor
mov
in
mov
xor
push
mov
adc
test
lock
pop
mov
mov
arpl
fmuls
fistl
adc
dec
cmp
fwait
popa
cs
into
into
dec
bound
jb
lret
cmp
jbe
fucom
outsl
imull
cmp
into
add
inc
adc
fisubrs
add
xchg
lret
cmpsb
push
insb
loopne
dec
repz
xor
sub
out
sub
outsb
int
mov
xor
push
popa
mov
push
dec
lret
sub
cmpsb
lret
fisubl
shll
shrl
jmp
scas
mov
push
dec
fwait
push
xchg
lret
xlat
je
lds
es
and
test
mov
int3
in
mov
in
and
loopne
fcmovbe
mov
push
movsl
loope
insb
imul
lock
pop
xchg
movsl
cmp
adc
sbb
mov
or
aad
scas
push
push
push
dec
faddl
sbb
adc
mov
or
pavgb
shll
adc
in
cmpsb
cltd
mov
sub
les
es
das
insb
add
xor
subb
out
dec
ljmp
dec
subl
add
cmpsb
dec
int3
mov
inc
cld
push
xchg
mov
jg
daa
mov
add
gs
hlt
jge
aaa
loope
leave
jle
imul
sti
imul
mov
jnp
dec
orl
ljmp
xor
leave
xchg
mov
dec
das
pop
repnz
mov
or
popf
xor
xchg
jge
xor
push
js
fs
daa
jmp
and
mov
dec
xchg
xchg
and
mov
addl
aad
and
aad
dec
or
roll
cwtl
cltd
mov
dec
lods
dec
into
out
movsb
movb
ret
sub
cli
or
jecxz
or
fsubl
jo
mov
cs
add
push
jmp
pop
pusha
pusha
pop
je
push
out
mov
dec
mov
ret
xchg
xor
cltd
dec
pushf
imul
push
pop
jmp
stos
into
pushf
cmpsl
mov
dec
pop
shr
dec
dec
mov
sbb
decb
jmp
je
push
sub
popa
pushf
test
testl
adc
push
push
fs
pop
pushf
or
in
pop
push
ffree
ret
mov
xchg
mov
xor
and
or
iret
add
mov
mov
out
adc
lahf
xchg
repnz
arpl
fwait
rclb
arpl
mov
jg
xor
lret
aas
adc
dec
inc
popf
push
shl
sarb
xlat
pusha
loope
enter
test
adc
das
stos
leave
xor
xchg
dec
push
out
scas
jmp
in
sbb
jno
xchg
xor
daa
push
mov
sub
dec
xlat
dec
daa
and
mov
inc
inc
adc
pop
std
mov
mov
pop
mov
adc
or
adc
mov
loope
push
mov
sahf
jae
dec
or
lret
or
add
pop
roll
cmpb
xchg
fnstcw
mov
jmp
insb
movsl
sahf
push
sbb
inc
and
pop
out
ljmp
jp
add
outsl
out
in
cwtl
repz
push
or
in
xor
fcmovnu
sub
or
sub
testb
test
lcall
jno
mull
jl
insl
or
add
out
clc
mov
fcoms
jle
inc
inc
loop
iret
mov
lret
jae
jo
std
jo
sub
jmp
push
mov
int3
fs
je
enter
popa
or
gs
popa
ret
insl
or
out
cli
xchg
repnz
adc
lock
lea
add
sub
imul
adc
out
fs
in
mov
test
ret
aad
cmp
push
adcl
test
mov
lods
xchg
iret
adc
or
jnp
pop
add
insb
cltd
mov
mov
mov
das
lds
push
lods
jge
or
or
jno
inc
mov
int3
push
push
jnp
cmp
jne
or
fcmovbe
fucomip
xchg
mov
pop
repz
mov
inc
mov
ret
scas
fstps
inc
rcr
nop
roll
jo
nop
jae
pusha
fsubs
mov
icebp
mov
popa
mov
push
into
push
jae,pn
testb
mov
out
mov
bound
mov
xchg
inc
inc
mov
hlt
push
add
add
pop
fdivl
push
mov
test
das
push
adc
jmp
or
adc
int
scas
testb
sbb
je
pop
jmp
outsl
into
scas
push
scas
cmpsb
call
ret
dec
inc
fcmovu
xchg
cs
sub
ja
mov
sti
scas
mov
add
mov
aaa
mov
out
sti
stos
adc
lret
xor
and
out
test
arpl
fcomp
pcmpeqw
cmp
inc
dec
pop
dec
jbe
pop
push
mov
push
dec
jecxz
das
mov
mov
ljmp
sbb
cltd
mov
jo
mov
xchg
pop
sbb
fstps
inc
inc
push
mov
sub
xchg
xor
mov
icebp
aaa
push
push
inc
arpl
in
test
inc
inc
filds
aad
cmp
lahf
push
shlb
add
push
int
ljmp
sbbb
popa
inc
loopne
daa
fcoml
das
adcb
sbbb
out
scas
mul
in
push
xor
adc
mov
push
jg
xchg
jne
repz
imul
pushf
adc
mov
pop
xchg
lds
fmuls
lcall
daa
jne
sub
int
sbb
and
mov
notb
pop
mov
pushf
pop
add
sbb
pop
mov
jge
aam
ret
xchg
fxch
bnd
in
xor
dec
pop
xorl
loope
in
mulb
daa
stos
push
or
test
or
fsts
daa
jne
push
shl
lock
aam
sub
lret
push
rol
fwait
aad
jg
in
addr16
test
out
aam
and
pop
stos
pop
and
movsb
cli
add
jp
or
stc
xchg
test
xchg
imul
rol
xlat
outsl
lods
leave
out
jo
mov
out
loope
sbb
dec
insl
ss
cmp
mov
pop
sbb
jl
jno
hlt
dec
xor
add
push
jmp
ficompl
sub
int
xchg
repz
in
add
or
sub
insl
or
ret
cmp
out
push
adc
ffree
mov
jno
data16
iret
sbb
fistpll
testl
lods
add
dec
ljmp
cltd
pop
jbe
int3
je
enter
nop
ds
pop
pop
cmp
dec
dec
scas
loopne
sbb
lret
mov
sarl
lds
inc
hlt
outsb
loope
dec
push
xchg
inc
mov
les
cs
mov
mov
push
and
and
push
jne
ret
push
cmp
insl
xor
lahf
je
movsl
push
lods
xchg
xor
cli
loopne
ret
cmp
filds
inc
pop
push
sub
popf
push
loopne
dec
pop
xlat
out
pop
scas
xchg
or
add
jg
inc
repnz
or
jae
cld
idivl
sbb
mov
sub
jmp
pop
inc
sbb
cli
inc
add
lea
push
jnp
add
mov
popa
fnsave
and
fmull
cmc
xor
testb
orl
sbb
mov
dec
xchg
jno
push
push
test
jnp
repz
xchg
imul
xchg
jae
fiadds
pop
icebp
outsb
out
mov
push
icebp
mov
or
lock
into
fchs
rorl
imul
sub
jo
pushf
inc
jmp
pop
test
inc
jp
xchg
mov
popf
mov
xor
inc
fwait
bound
outsb
jg
sub
test
mov
lea
push
cmp
xor
out
xor
ds
mov
shlb
xor
movsl
pop
mov
rcrb
pusha
lret
add
sti
stos
adc
repnz
adc
xlat
mov
dec
cmpl
cmp
sbb
xchg
out
and
sub
mov
mov
cmp
movsb
push
cmp
stos
stos
dec
aad
lahf
add
mov
xor
loopne
dec
push
rclb
gs
cmp
test
mov
aas
repz
xchg
daa
fsubp
ret
inc
mov
push
in
mov
pop
fs
outsb
pop
xchg
inc
or
outsl
fisttpl
insl
xlat
pop
cmp
mov
in
hlt
lcall
mov
pop
sbb
push
addl
ficomps
movsl
inc
add
ficompl
and
add
sub
arpl
loope
dec
mov
xchg
mov
repz
mov
mov
xchg
add
xchg
cmp
inc
outsl
mov
ffreep
mov
clc
sbb
shlb
outsl
mov
test
mov
cmpsb
mov
and
add
push
xlat
dec
dec
insb
mov
movsl
std
icebp
mov
das
dec
mov
inc
repz
jecxz
aaa
idivb
xor
pop
xchg
orb
clc
mov
xchg
cmp
adc
inc
xorb
iret
ljmp
push
xor
sub
out
scas
jae
repz
xchg
pop
andl
sbb
push
jl
dec
lds
lret
sub
mov
jge
aam
add
daa
lcall
mov
xor
lahf
in
out
dec
mov
mov
sbb
pop
iret
popa
adc
dec
ret
out
mov
out
sbb
addr16
test
adc
mov
inc
jecxz
fistpl
xchg
mov
ret
cvttps2pi
dec
xor
cli
cmp
mov
repz
cmpsl
cmp
and
mov
sarb
flds
xchg
sti
loope
lret
adc
pop
push
add
lea
or
loopne
and
std
fldcw
jne
sbb
xchg
xchg
pop
inc
sti
scas
pop
incb
mov
mov
and
out
sub
inc
mov
imul
sbb
cmp
push
push
or
lret
add
int
xchg
notb
nop
ljmp
mov
sub
fwait
lock
push
fcomp
push
and
lock
jb
and
xchg
mov
inc
hlt
xchg
add
gs
iret
cmp
sub
push
out
mov
inc
xchg
sub
jg
fistl
or
add
push
xchg
es
or
mov
xchg
cs
cmp
call
adc
push
mov
cmp
xchg
clc
pop
daa
pop
popf
sbb
jmp
ljmp
xchg
movsb
pop
insl
push
jne
adc
xor
aad
xchg
enter
mov
dec
and
cmp
push
add
in
popa
jecxz
shrb
ret
jecxz
xor
addr16
imul
pop
pop
and
mov
mov
sbb
orb
cld
mov
sbb
mov
and
loope
push
out
sbb
adc
aam
mov
cmc
test
nop
push
inc
mov
sub
add
cmpsb
fucomip
xlat
mov
in
cmpsl
pop
sub
cli
mov
mov
sbb
pop
xchg
fidivrs
mov
icebp
test
sub
pop
call
dec
movsb
sub
cmp
xchg
mov
inc
leave
rcrl
test
sub
mov
xchg
loopne
sbb
fadds
inc
inc
add
popf
lret
push
insl
in
mov
mov
in
cmpsb
loopne
xchg
push
filds
fcmove
xchg
leave
les
in
dec
cmpsl
adc
mov
mov
movsl
push
scas
jl
cmpsl
fcomi
sbb
or
sbb
jne
icebp
mov
xor
popa
int
aad
push
rsm
adc
xor
xchg
int3
outsl
jo
cmp
xchg
mov
dec
out
xchg
and
test
add
sahf
jae
sub
fistps
jg
jae
negl
je
fwait
bound
dec
xchg
fs
ret
pop
mov
adc
decl
out
cli
out
into
sbb
cmp
xchg
int3
mov
or
jae
sbb
hlt
adc
push
in
and
subb
cmp
shl
push
lods
xor
mov
cmp
jl
dec
xchg
notb
cwtl
sbb
cmp
neg
push
jae
dec
imul
fmull
iret
movsb
sbb
lods
loope
adc
mov
outsb
ss
cmp
inc
shrl
cmc
leave
mov
popf
outsl
test
pop
mov
and
mov
cwtl
pop
mov
in
je
pop
sbb
punpckldq
inc
scas
lods
les
xchg
cmp
pop
ds
xchg
js
pop
dec
push
mov
test
repnz
adcb
inc
aam
mov
xor
aam
or
dec
loope
sub
mov
mov
test
pop
push
aas
fdivl
or
cld
imul
rcrl
shlb
out
shlb
or
sub
or
insb
pop
sub
dec
xchg
jmp
xorb
mov
push
pop
xchg
cmpsl
jl
cmp
mov
test
pushf
mov
xchg
xchg
fldcw
mov
sub
push
cmp
mov
fs
inc
inc
lods
cwtl
pusha
adc
push
pop
mov
dec
adc
mov
sub
fadds
mov
int
rorb
stc
pushf
mov
push
adc
lret
test
mov
leave
jbe
sbb
and
pop
add
xor
xchg
mov
outsb
xchg
pop
inc
or
cmp
jge
cmp
sbb
in
push
pop
pop
mov
mov
leave
out
dec
lcall
addb
dec
inc
cmc
dec
push
pop
mov
in
int
dec
dec
ja
shrl
push
ljmp
iret
cmp
mov
pop
data16
mov
fdivs
or
fs
cmp
subl
lret
stos
xchg
mov
cs
insl
or
cmp
pop
scas
push
mov
fisubrl
sub
out
jns
shll
cltd
es
popa
or
ja
std
xchg
pop
jl
dec
pop
dec
add
stos
icebp
jne
mov
mov
in
ds
leave
movsb
push
inc
fldl
shlb
mov
push
call
mov
pusha
mov
out
xchg
add
xor
or
pop
mov
in
icebp
mull
scas
xor
stos
arpl
sbb
sbbl
testl
ss
hlt
mov
push
daa
jecxz
or
mov
lds
call
xlat
rolb
sbb
aam
cmp
mov
xor
iret
xor
push
dec
jbe
lahf
and
add
in
xchg
into
int
popa
inc
xchg
sub
push
jecxz
sub
xchg
test
out
inc
mov
fxch
and
aaa
out
nop
jecxz
add
sti
scas
jnp
stos
push
adc
xchg
mov
mov
mov
mov
mov
fs
in
mov
jno
sub
sub
xor
outsl
aaa
lock
mov
repz
push
xchg
movsb
inc
negl
aaa
dec
cmp
mov
sti
xor
das
std
testb
arpl
xor
sub
add
clc
pop
push
xchg
pushl
lret
lcall
pop
or
icebp
pop
jne
dec
mov
aam
test
out
dec
sub
leave
xchg
xchg
roll
dec
jmp
shr
jl
jge
sbb
adc
imul
push
outsl
adc
or
lds
or
xchg
xchg
push
push
insb
inc
ret
push
fwait
scas
mov
xlat
xor
mov
insl
fnstsw
fstpl
pop
cmp
scas
cmp
add
dec
test
out
nop
mov
or
repnz
inc
push
addl
adc
call
jg
mov
sbb
stos
insb
push
cwtl
sub
sub
pop
jle
aam
adc
dec
dec
stos
test
out
inc
jmp
add
sub
inc
push
cmp
popf
xchg
stc
pop
push
sub
jecxz
test
fistl
lcall
out
leave
cmp
fwait
xchg
in
sti
in
setno
aas
mov
repnz
inc
and
pop
sub
jp
push
and
shll
fnstcw
or
mov
push
dec
cmp
cmc
mov
cltd
and
adcb
xchg
aad
mov
loop
fwait
cltd
es
inc
jmp
cmpl
dec
lahf
les
xchg
loop
mov
dec
les
lcall
mov
int3
cmpsb
loope
pop
inc
jmp
lods
in
or
sarb
ss
test
sub
dec
insl
pusha
cmp
test
jbe
movsl
cmp
sub
out
lds
dec
into
insl
inc
mov
in
push
pushf
sub
mov
ret
fnstsw
aam
lret
xorl
data16
sbb
push
mov
test
fldenvs
or
and
hlt
lret
cmc
orb
cmp
cltd
add
inc
xor
jb
dec
sbb
and
fs
repnz
sarl
pop
lock
movsl
inc
mov
and
push
fldt
insl
mov
sbb
adc
cmp
jle
pop
lods
mov
ds
sbb
lret
jne,pt
or
inc
jnp
mov
pop
aam
cld
jg
aas
xor
stos
stos
or
lret
add
xor
add
loope
cmp
mov
sub
lds
dec
stc
xchg
pop
adc
int3
sbb
jge
ljmp
lcall
insl
mov
push
imul
enter
mov
mov
adc
and
mov
mov
clc
push
cwtl
adc
xor
mull
dec
add
mov
xor
add
movsl
lock
jle
js
mov
mov
cmp
adc
popa
sbb
sub
in
icebp
push
cmc
push
inc
es
int
sbb
xchg
call
xchg
xor
pop
or
cmp
pushf
mov
lcall
push
sbbb
movsl
popf
aam
or
jl
pop
rcrb
pop
rcr
sbb
leave
push
mov
or
movsb
xchg
insb
les
rcr
lahf
fnsave
pop
addr16
xchg
jp
in
xchg
jns
je
lahf
shl
or
daa
dec
lcall
push
add
adc
sbb
dec
dec
jp
push
test
pop
jmp
ljmp
cmp
dec
add
or
aas
sub
ja
xchg
sbb
add
int3
jo
mov
lods
sub
nop
jns
sbb
repz
push
repnz
jns
or
xor
hlt
clc
pop
orb
mov
jb
out
mov
mov
push
inc
adc
mov
mov
xchg
cltd
inc
aam
sbb
dec
int3
dec
test
pop
jno
mov
or
mov
movsl
out
mov
adcb
stos
sub
and
sub
mov
bound
imul
xchg
test
lcall
push
mov
push
push
mov
int
cwtl
cmp
and
sub
jne
cmp
jo
popf
and
ret
pop
add
movl
mov
sti
adc
ret
mov
loop
mov
adc
mov
xor
lret
daa
mov
sbb
fidivl
sub
mov
shrb
dec
sahf
jle
xchg
in
fwait
pusha
aaa
pushf
lahf
mov
addr16
in
fistl
xchg
mov
jb
xchg
ljmp
xchg
fwait
pop
dec
outsb
dec
ret
xchg
jne
pop
cmp
xchg
cmc
movb
lahf
movsb
inc
cld
arpl
movsb
fldt
fstpl
sti
popl
sub
inc
cld
int
sbb
call
sub
ljmp
enter
push
mov
enter
xchg
divb
fisubrl
outsl
std
insl
ret
and
fincstp
leave
mov
es
xorb
rcll
jns
shlb
sbb
jne
xor
fsubrs
sbb
cltd
jns
jecxz
push
sete
sub
inc
aam
lods
mov
adc
dec
rolb
xchg
out
sbb
scas
das
in
jae
push
neg
jno
das
lcall
fisubrs
dec
dec
mov
jae
lcall
push
fiadds
shl
subl
mov
lcall
outsb
popf
shlb
pop
or
cwtl
mov
pop
mov
mov
shll
rorb
in
sub
out
repz
mov
push
sbb
inc
cltd
xor
lods
imul
sub
pop
test
pusha
dec
and
and
rcrb
hlt
leave
clc
xchg
inc
in
push
inc
repnz
push
sub
mov
cmp
cmc
movsl
mov
inc
dec
movsl
data16
icebp
xor
leave
mov
lds
mov
add
ficompl
cltd
sbb
aas
fcoms
ds
imulb
pop
pop
cmpps
xchg
adc
mov
lods
mov
add
test
sub
int3
cmp
jge
pushf
aas
insl
scas
or
pop
mov
sub
sbb
push
jno
out
fdivrl
subl
mov
repz
cmpsl
and
shll
leave
sub
jo
push
push
add
cltd
je
mov
dec
push
pop
adc
bound
mov
sbb
push
mov
fistpl
jmp
stos
ljmp
les
mov
mov
es
jp
dec
xor
inc
jnp
sbb
or
lcall
or
xor
jl
pop
mov
into
sbb
jge
sub
clc
adc
mov
in
adc
and
fs
xor
in
mov
fcompl
cwtl
fisubl
mov
call
xor
leave
pop
inc
insb
jmp
aad
sbb
mov
movsl
lret
xor
in
lcall
lea
mov
jg
push
cmpsb
lea
jmp
or
mov
mov
add
jne
and
mov
popf
mov
and
fisubrl
jbe
sbbb
jl
js
and
xchg
jmp
pop
lret
and
and
pop
aam
sub
push
mov
ja
push
aam
mov
cs
cmpsb
gs
xor
mov
mov
and
in
adc
inc
push
repz
in
jg
xchg
dec
or
push
pop
jecxz
scas
imul
jnp
push
in
inc
pusha
sub
dec
sbb
jae
or
fs
fimull
pop
lahf
xlat
lret
repz
idivb
xor
xchg
xchg
les
pop
inc
inc
popa
ljmp
mov
or
lcall
lods
sub
les
test
ds
shrb
ds
xchg
mov
std
or
jge
lods
test
push
aad
sbb
loopne
xchg
enter
mov
lcall
pop
xchg
and
or
dec
in
push
cmp
fisubrs
loopne
dec
and
pop
sbb
mov
imul
push
stos
es
jno
mov
sbb
push
cmp
movsl
sbb
inc
repz
lock
cmp
pop
inc
dec
jb
mov
inc
movsb
mov
jo
mov
btrl
orb
sub
fsubrl
in
shlb
mov
sub
mov
mov
aaa
cmp
mov
push
push
and
jp
add
dec
push
add
div
dec
cmp
fdivrs
ljmp
fistpll
mov
fisttps
sub
inc
push
std
mov
cmp
mov
mulb
or
pop
xor
jg
mov
mov
scas
lods
popa
mov
adc
push
mov
xchg
cmpsb
gs
or
rcr
aam
jno
adc
movsl
inc
jmp
mov
and
jle
xchg
push
cmpsb
ret
idiv
daa
insb
daa
adc
fldl
test
push
cli
xor
mov
imul
sbb
mov
xchg
dec
xchg
jg
call
mov
sbb
call
scas
jle
or
popa
push
mov
jb
dec
aas
mov
xchg
sbb
shl
xchg
fcomps
dec
rcr
mov
imul
rcll
loop
dec
cmp
into
inc
ret
sbbl
ret
idivb
into
jg
stc
jl
dec
xchg
dec
jne
stos
fstl
fld
into
pop
jne
xor
aas
or
cld
mov
mov
clc
lcall
aad
divl
xor
jb
jle
test
sub
jnp
mov
bound
xor
pop
mov
int3
lock
mov
outsb
push
stos
mov
xchg
das
aas
into
sarl
out
in
je
test
outsl
addb
js
mov
jg
movsb
dec
add
addl
push
fstpl
test
test
and
jo
mov
fucom
ljmp
es
rcrb
inc
insl
pop
rorb
lea
mulb
in
xor
sti
repz
jle
rcll
xchg
inc
stos
add
adc
lret
adc
inc
repnz
jecxz
mov
xchg
inc
sub
jbe
and
mov
into
inc
inc
push
in
sbb
addr16
movsb
mov
lock
dec
dec
stc
fcompl
stos
mov
sub
fimull
cmp
dec
cmp
movsb
fsubrs
loope
mov
sbb
mov
xor
aaa
sti
mov
inc
daa
shlb
addr16
or
and
loopne
popa
cmpsl
pushw
adc
inc
lahf
cmp
fstp
dec
pop
js
and
jns
jmp
cli
sbb
cs
pop
lret
push
arpl
jne
xchg
mov
mov
frstor
pop
adc
rcr
cwtl
sub
inc
das
lds
xlat
in
mov
imul
and
or
shrl
or
xchg
cmp
or
xchg
and
mov
or
push
mov
lret
sbb
cs
or
lret
movsb
sbb
insb
cwtl
pop
popa
xchg
jge
push
jge
scas
push
hlt
sbb
inc
movsb
rol
cmpsb
lods
cmpsb
shr
pop
sbb
cmpsl
cmp
arpl
xchg
xchg
pop
ljmp
aam
mov
shlb
data16
jmp
fidivrl
fcompl
ds
rcrl
mov
lret
stc
in
loope
jae
lcall
dec
fs
aam
mov
jb
mov
int3
mov
xchg
cmc
sub
xchg
dec
dec
mov
inc
mov
mov
outsl
cmovns
adc
das
mov
subl
add
mov
cmc
or
xchg
xchg
lret
daa
sbb
xchg
shl
gs
bound
mov
aaa
mov
pushf
outsb
add
pop
pushl
add
out
mov
adc
add
pop
call
mov
mov
ljmp
iret
lahf
inc
mov
xchg
std
fcomps
pop
mov
out
pop
mov
jne
call
loopne
fstpt
aam
dec
adcl
repnz
pop
jbe
imul
imul
xchg
hlt
paddd
mov
and
orl
push
popf
sub
lret
mov
jae
out
cmc
lods
out
pop
mov
aas
aas
scas
dec
push
aaa
int3
xchg
inc
pop
int
popf
sub
iret
dec
mov
mov
outsl
fwait
jmp
lea
js
sbb
adc
nop
fs
in
sbb
jo
ffree
stos
ficomps
mov
iret
outsl
xor
and
imul
sub
int3
cli
push
ja
lahf
lcall
pop
cmp
add
jle
sbb
push
leave
std
jmp
pop
movsl
mov
inc
sub
or
ret
ret
negl
jno
daa
fwait
inc
iret
in
les
jns
fwait
stos
es
or
and
jg
sahf
in
pop
sub
cmp
adc
mov
mov
in
cs
std
ret
lahf
gs
xor
insl
stc
rol
push
pusha
xor
jno
enter
fs
in
xlat
inc
rcrl
out
movsb
fdivr
xchg
xchg
loop
or
jns
dec
xchg
mov
fsts
repnz
xor
pop
aaa
testl
mov
out
int3
sbb
mov
inc
outsl
addr16
mov
push
mov
dec
sbb
inc
xor
in
lcall
rol
dec
jo
push
ljmp
das
inc
outsl
scas
mov
sub
mov
fildll
lret
mov
fwait
in
mov
leave
aad
xchg
fidivs
pop
lds
movsb
cmp
fmul
jbe
bound
mov
lods
xor
jecxz
loopne
or
jns
shll
rorb
sti
push
aam
inc
xor
jns
test
pop
loop
icebp
mov
mov
paddb
jbe
ljmp
out
cmp
xor
lods
fimuls
aaa
and
push
xlat
sub
dec
sbb
mov
add
sub
push
mov
mov
fldenv
sahf
leave
cltd
mov
add
mov
xchg
cltd
cltd
dec
mov
int3
pop
insb
or
lea
bound
sub
shrb
pop
arpl
sarl
hlt
setno
adc
aad
movsb
inc
fcmovbe
loope
insl
out
mov
jle
testl
dec
jle
test
jle
adc
push
scas
popa
xor
pop
mov
inc
jl
ljmp
mov
add
pop
gs
jb
xchg
fs
mov
shlb
mov
sbb
pop
dec
push
fadd
popa
imul
popf
mov
enter
push
cmpsl
fcompl
xchg
lods
cltd
sbb
popa
adc
nop
push
imul
fwait
scas
jne
dec
fxch
mov
test
ja
test
out
adc
add
mov
inc
bound
and
xchg
sbb
out
or
sub
inc
dec
mov
sub
and
jg
inc
and
dec
mov
jmp
data16
out
or
pushf
out
ficompl
inc
hlt
outsb
scas
push
sub
xchg
jns
xchg
push
loop
jg
repnz
sub
lahf
cmp
jbe
or
mov
shl
fdivp
mov
jge
icebp
cmp
xor
movsb
scas
daa
out
mov
pop
xlat
mov
dec
mov
mov
leave
ret
add
or
rcl
pop
ljmp
pop
push
and
inc
xchg
inc
xchg
lds
arpl
ret
ficompl
das
gs
inc
mov
mov
out
loope,pn
sub
aaa
sbb
scas
or
adc
sbb
cld
adc
adc
inc
pusha
subl
shlb
xchg
mov
adc
pop
sub
fistpll
call
and
mov
into
sbb
std
mov
xchg
dec
xchg
mov
mov
mov
push
test
ljmp
mov
cltd
fadd
sbb
iret
lods
icebp
imul
rclb
jne
mov
loope
cmp
lret
cmp
popl
xor
fldcw
shl
mov
cmp
xor
fisttpll
test
push
pop
arpl
adc
clc
leave
mov
add
xchg
push
cmpl
gs
imul
cmc
mov
imul
sub
sub
xchg
push
mov
outsl
ret
nop
xor
sarb
cmp
push
ja
inc
and
clc
cwtl
out
in
pushf
lock
nop
sbb
xor
push
add
arpl
cmp
enter
inc
sub
push
add
imul
in
insb
movsb
inc
fsubs
pusha
pop
sub
mov
insb
pop
push
sub
jle
lock
dec
adc
inc
outsl
xchg
out
mov
leave
sub
xchg
jecxz
data16
scas
lcall
push
fldenv
out
sub
es
mov
stos
lret
mov
nop
mov
push
call
negb
arpl
or
mov
mov
movb
and
inc
movsb
cltd
insl
inc
mov
pop
add
pushf
scas
lahf
loope
shll
stos
cmp
das
into
test
adc
xor
xchg
rcrl
add
and
roll
lret
sbb
cmp
mov
fisubl
mov
sub
xlat
xchg
psllq
push
dec
lock
fnsave
pop
hlt
mov
mov
les
mov
lods
xorb
outsl
adc
lods
pop
mov
test
pop
stc
inc
popa
fldenv
out
mov
and
in
push
pushf
mov
popf
in
jo
push
setle
stc
xor
mov
testl
imul
jbe
xor
xchg
cld
stc
mov
fstpt
sub
xchg
cld
mov
test
fiadds
adc
pop
or
lret
dec
mov
mov
pop
xchg
cmp
xor
arpl
xchg
mov
add
sbb
push
cmp
pop
das
enter
flds
insb
and
jmp
insb
js
push
clc
cmp
int
jg
xchg
inc
adc
or
call
add
aam
in
addr16
and
dec
cwtl
in
or
pop
ficomps
push
sbb
mov
pushf
shlb
daa
push
sbb
mov
mov
pop
pushf
adc
movsl
fldenv
subl
mov
popa
clc
push
mov
sub
nop
inc
push
fucomip
pop
insb
pop
jmp
dec
adc
dec
mov
sbb
lret
sbb
imul
xor
xchg
das
ja
pop
xlat
rcr
and
mov
clc
xchg
pushf
mov
cmp
loope
ret
stc
je
push
cmp
dec
inc
cmp
push
mov
in
bswap
cmp
nop
ds
sub
and
jmp
ret
sub
arpl
push
inc
pop
push
jae
jmp
jp
cmp
sahf
mov
cld
sub
notb
mov
inc
push
inc
cli
imull
jg
andl
fs
imul
pop
pop
rorl
fsubrl
movsl
jns
es
mov
mov
sahf
inc
mov
lahf
jg
xor
mov
cld
push
lea
lret
inc
jecxz
mov
jne
dec
dec
lock
movb
aam
mov
pop
adc
lret
pop
push
stos
insb
xor
ror
mov
dec
jge
out
cli
push
in
push
les
xor
hlt
cmc
add
inc
inc
fstpt
aaa
pop
inc
mov
data16
push
pop
jge
jg
in
fidivl
popf
scas
lret
xchg
inc
test
aaa
movq
mov
add
inc
sbb
xor
pop
push
or
repz
pushf
jns
dec
push
mov
stos
mov
lcall
mov
push
aam
jnp
pop
shrb
jp
mov
aaa
mov
dec
inc
sub
xchg
jge
leave
aaa
push
xchg
mov
lcall
xchg
dec
dec
mov
push
jns
leave
xor
jg
out
mov
mov
xor
add
adcb
xor
xchg
mov
inc
sub
sahf
push
loopne
add
cmp
mov
data16
and
push
add
into
pop
xor
shll
pushf
xor
outsl
sub
xlat
or
sub
mov
gs
mov
inc
sahf
and
cmp
jb
mov
out
es
js
inc
fldt
mov
in
mov
push
jmp
inc
cmp
sti
in
sbb
pop
xor
test
lds
dec
stc
xor
inc
clc
mov
inc
sub
push
jecxz
jle
shlb
pop
insb
lock
shll
popl
xchg
sbb
lds
insb
push
int3
les
push
pop
push
scas
fs
loope
jg
addl
or
inc
stos
mov
or
into
cmp
out
xor
mov
cmpsb
inc
jmp
loopne
cmc
dec
imul
outsl
imul
divb
add
pusha
cmp
cli
aad
fs
cmpsb
ret
loop
stos
mov
call
cli
enter
insb
out
mov
cld
jbe
sub
xchg
mov
fsub
test
imul
push
mov
sub
bnd
shlb
pusha
push
fs
and
aad
inc
jg
in
pop
aas
scas
push
cmp
inc
neg
lret
mov
aaa
fldt
sub
push
or
xlat
push
rcrb
hlt
add
xchg
arpl
cmp
mov
xchg
mov
into
lcall
pop
popl
mov
gs
lret
cwtl
or
mov
ss
in
push
es
loope
add
sub
int3
ficoms
cld
xchg
xor
mov
mov
fsubl
imul
xor
xor
jmp
shll
xlat
out
mov
mov
or
sbb
xchg
dec
imul
push
xor
arpl
into
jno
ss
pop
xchg
or
jne
xchg
ljmp
dec
pusha
imul
out
xchg
lock
push
mov
in
dec
filds
pusha
cli
pop
arpl
mov
add
subl
pop
jae
cmp
cmc
jmp
outsl
arpl
push
cltd
inc
adc
or
lahf
scas
pusha
xchg
fistpll
pop
js
aad
sbbl
push
fiadds
push
retw
mov
imul
adc
ret
mov
inc
push
cmp
movsl
inc
push
dec
gs
test
mov
dec
add
cmp
lea
or
sbb
into
les
add
sbb
int3
xchg
cmp
imul
inc
jecxz
sub
movsl
pop
adc
fildll
jb
insl
shrl
cmc
jmp
arpl
ja
mov
aam
jge
mov
sbb
sbb
nop
icebp
ret
inc
add
xchg
jne
in
movsl
or
lret
inc
bound
fisttpl
fs
or
sti
xchg
enter
fbld
dec
sbb
push
fisubl
or
andl
addr16
stos
jae
hlt
out
mov
lret
sbb
or
jp
out
mov
or
fisttps
movsb
mov
lahf
in
test
inc
cwtl
mov
stos
cmp
in
mov
pop
jl
push
pop
inc
inc
js
jle
inc
push
arpl
pop
xchg
or
and
bnd
sbb
out
mov
and
mov
push
lods
xchg
pop
bound
sbb
pusha
jle
call
cmpsb
out
nop
arpl
mov
push
addb
mov
pop
cmc
or
or
stc
ljmp
lods
mov
pushf
xchg
sub
cwtl
dec
push
cmpsb
je
add
pcmpgtd
inc
push
pop
mov
loop
cmc
outsl
xor
sahf
rcrb
clc
ret
leave
xchg
xor
repz
icebp
inc
and
jbe
xchg
cmp
mov
jmp
fimuls
cmc
mov
xchg
or
cmp
inc
jp
mov
outsb
in
push
aas
insb
aam
ja
loope
xchg
nop
in
sbb
pop
mov
xor
lods
fwait
xchg
lods
ret
das
xor
jmp
mov
flds
xlat
xchg
out
lods
or
shl
xchg
dec
cmp
int
pushf
pop
mov
aad
add
mov
cmp
inc
mov
push
insb
movsl
stos
mov
push
inc
test
test
pushf
add
and
movsl
sub
sub
jo
mov
rol
cmp
pop
xchg
push
mov
push
lret
mov
popa
lret
test
jle
jl
and
xchg
sti
cmp
jbe
mov
js
dec
push
sahf
fiadds
popf
cmc
clc
mov
es
jg
inc
dec
sarb
aaa
daa
mov
xor
mov
enter
sbb
roll
data16
std
dec
cli
mov
outsl
call
dec
xor
in
jno
fbstp
mul
pop
add
sbb
fsubrl
adc
arpl
pushf
xchg
mov
lods
test
movsl
sbb
jno
jae
pop
pop
xchg
cmp
out
int
loope
popa
jmp
in
mov
ret
lcall
in
mov
add
jmp
mov
push
pop
inc
cltd
movsb
xor
mov
jecxz
ss
sbb
mov
repnz
dec
or
sub
clc
jne
sti
out
mov
adc
clc
loop
adc
lods
sub
mov
or
inc
loope
hlt
mov
sbb
std
dec
mov
mov
push
movsb
xor
mov
xor
mov
stc
fdivrs
out
aaa
xchg
sbb
xor
cmpsl
ss
sbb
scas
pop
or
adc
ss
mov
dec
and
lret
mov
fstp
xlat
pop
out
popf
sub
xor
dec
or
push
cwtl
insb
arpl
fldl
sbb
xchg
js
push
xchg
inc
ja
int
jb,pn
mov
leave
add
sbb
or
mov
push
negb
ret
imul
adc
push
jle
jmp
pushf
inc
pushf
jae
add
and
push
ss
push
fdivl
jmp
in
popf
mov
pop
popf
xor
adc
and
inc
mov
push
mov
dec
xchg
mov
addr16
push
cmpsl
inc
arpl
leave
fwait
jae
outsb
arpl
pop
pop
push
gs
lret
cmpsl
lahf
pop
adc
adc
xchg
int
call
push
in
adc
mov
mov
movsl
cmp
aad
dec
fcoml
lret
sarl
sub
scas
push
push
aam
clc
mov
and
adc
fists
pusha
movsb
adc
push
xorb
add
lret
int3
adc
ljmp
cmp
gs
mov
or
xchg
daa
mov
sbb
clc
test
add
add
mov
stc
dec
loope
cwtl
adc
cmpsl
or
or
inc
mov
dec
loope
sub
pop
lret
sahf
fstps
xor
inc
mov
cs
xor
enter
shl
aad
call
nop
mov
push
add
lock
insl
aad
add
pop
cmp
aam
jle
inc
dec
mov
pop
fwait
pop
xor
cmp
push
stos
mov
xor
jb
push
lcall
lret
mov
mov
mull
jecxz
lahf
xchg
popa
push
push
lods
iret
pop
loop
out
and
popa
popf
add
mov
les
mov
push
cmpsb
dec
adc
sub
shlb
or
hlt
ja
pop
cmpsb
mov
in
sahf
ds
jns
popa
mov
aam
in
leave
loopne
add
outsb
mov
cmp
popa
adc
fiadds
xor
dec
sbb
clc
cmp
mov
push
add
jp
mov
jne
cmp
mov
ret
jo
divb
ljmp
xchg
inc
test
mov
cltd
xchg
popa
mov
mov
cmpsl
jge
sub
scas
dec
data16
data16
or
mov
mov
mov
mov
lds
xor
sub
push
sbb
jle
sti
mov
mov
fst
cli
sbb
push
jmp
and
stos
gs
cmpb
jae
lock
dec
cmp
cmp
jg
sbb
xchg
jmp
scas
mov
ret
cmpsl
data16
pop
lret
scas
pushf
add
xor
mov
push
rcl
rcll
jle
and
incl
mov
dec
test
mov
cld
aaa
lret
es
cltd
pop
pop
cwtl
iret
cmp
test
les
xor
xchg
jbe
pop
mov
sub
xchg
xchg
lret
mov
and
data16
int3
sub
jp
fstps
and
dec
push
sarl
xor
popf
push
test
les
push
inc
sbb
sti
jl
pop
js
inc
add
inc
pop
outsl
xchg
xchg
dec
sub
add
cmpl
jp
sub
push
fs
push
and
repz
pop
icebp
cmpb
adc
lret
sbb
xor
loop
lahf
xlat
and
mov
and
jns
fildl
mov
sti
xor
mov
fcoml
push
fmul
test
pop
lahf
and
pop
jnp
repz
mov
ja
fs
inc
lahf
inc
adc
clc
jns
shlb
sub
jbe
or
aaa
add
jg
and
xchg
jecxz
cmpsw
adc
cmp
fs
dec
clc
mov
jae
insb
mov
js
es
cmp
call
dec
mov
fistps
test
test
out
xor
leave
in
inc
jg,pn
imul
adc
push
sbb
nop
call
pop
push
mov
pusha
lahf
lds
mov
ja
scas
mov
jp
icebp
stos
inc
addr16
adc
imul
xor
jl
adc
into
inc
out
daa
mov
sbb
xchg
pop
arpl
and
mov
mov
in
or
movsb
in
inc
mov
adc
fldcw
jp
mov
bound
rclb
ficoml
dec
add
aam
mov
jnp
cmp
ss
adc
lcall
adc
jno
sbb
stos
dec
pop
pop
jne
adc
xchg
jno
cmpsl
push
or
xor
fidivrl
jp
sub
xor
out
xchg
movsl
stos
jge
pop
popf
sub
sbb
or
inc
mov
repnz
push
pop
jg
loopne
lret
jmp
loop
faddp
jne
sub
cmc
mov
out
mov
xchg
adc
cs
int
addl
push
test
rcl
lods
sbb
outsl
cltd
movsb
das
addr16
push
pop
cmp
add
cmpsb
inc
push
jl
adc
inc
iret
stc
xchg
xor
cmpb
cmp
add
imul
out
jb
lock
popf
push
pop
call
jbe
xor
mov
lahf
mov
call
push
fadds
xchg
push
pusha
mov
iret
scas
addr16
cwtl
jno
cli
jge
adc
mov
mov
fcoms
mov
and
or
rolb
addr16
pushl
xor
test
pusha
dec
lcall
xor
mov
dec
and
sub
sbb
inc
pusha
xchg
ret
cld
fimull
push
push
add
shr
cmp
cmpsl
lcall
enter
mov
mov
lcall
mov
incb
push
cwtl
das
scas
cltd
push
lds
push
cmp
xor
insw
inc
sub
je
cmp
xchg
cmp
mov
mov
mov
mov
mulb
inc
jecxz
jl
fnstsw
dec
int3
sbbl
test
mov
outsl
jmp
sub
push
pushf
mov
sbb
xor
adc
pop
popf
call
out
push
add
cwtl
jle
push
add
inc
clc
push
nop
mov
lahf
fstpt
push
mov
jl
mov
mov
add
jecxz
mov
add
inc
lods
xchg
daa
xlat
inc
pop
xor
xchg
sbb
sbb
mov
or
cmp
out
cli
xchg
mov
sbb
push
dec
ljmp
in
das
pop
scas
fucomip
addr16
xchg
fsub
addr16
jne
popa
subl
mov
dec
clc
mov
lods
dec
xor
movsl
std
lds
push
cli
push
fsts
icebp
sti
movsb
cmpsl
cmpsl
mov
data16
jbe
out
inc
inc
into
xor
xor
int3
ss
test
jecxz
movsb
lcall
mov
outsb
rcrb
data16
jecxz
inc
popf
mov
xchg
xchg
ljmp
pop
xor
cmpsl
or
lret
mov
insl
mov
inc
xor
and
add
cmp
and
jle
add
mull
in
push
pushf
adcl
loop
mov
andb
mov
imul
out
jno
in
lret
jno
jo
pop
iret
sbb
iret
aam
je
call
gs
ja
xor
mov
aad
dec
aam
push
jg
roll
int
xor
pop
fbld
dec
leave
xor
cs
unpcklps
loope
je
into
pop
jp
mov
scas
cmp
xchg
ja
mov
push
in
std
pop
jecxz
js
lcall
in
mov
andl
and
adc
repz
lret
pop
push
and
push
rcr
jp
scas
sub
cmc
aas
addr16
test
sub
and
inc
inc
call
lret
outsl
cwtl
out
inc
in
sarl
pop
js
mov
js
ja
jmp
dec
into
repz
cli
subl
loop
cltd
rclb
aad
inc
sub
stos
jb
mov
lods
in
mov
and
and
stc
dec
ljmp
adc
test
scas
repnz
sub
xor
fadds
push
mov
imul
mov
and
xchg
push
push
mov
push
jmp
hlt
add
leave
jge
ds
fsts
ficomps
xor
cmp
and
popa
pop
adc
mov
inc
stos
mov
aam
jb
cld
and
aas
xchg
push
notl
mov
jnp
mov
jbe
movsb
mov
mov
in
lds
iret
mov
in
fs
jbe
aaa
xchg
in
or
lods
xchg
rcrl
out
add
sbb
lret
add
test
mov
jno
out
inc
jmp
insb
xchg
lods
sub
rolb
xor
outsb
jbe
cmp
imul
push
jnp
dec
popw
mov
push
ja
add
push
pop
fidivrl
loope
dec
aad
adc
icebp
es
call
aaa
xchg
dec
and
hlt
int
fcomi
inc
dec
xchg
adc
sahf
mov
pusha
sub
popf
aad
into
ficomps
push
outsb
jge
fcoms
cmp
inc
or
jg
mov
mov
cmpsb
bound
mov
popa
clc
cwtl
test
ret
inc
scas
sbb
cltd
push
xchg
rcrl
mov
cmp
jbe
fcoml
jmp
sub
rorl
fistpl
pop
loopne
dec
dec
shrb
push
lahf
outsb
push
jge
or
repz
jmp
xchg
cmpsl
movsb
fbld
or
shrl
adc
xor
cmp
and
sbb
inc
adc
movl
lods
pop
sbb
shrl
or
pop
jno
jg
js
mov
push
jecxz
and
pop
mov
mov
add
mov
add
mov
popa
shlb
out
rclb
mov
stc
jmp
stos
add
inc
xor
xchg
add
add
jp
scas
sub
ds
fwait
sti
sub
movsb
pop
push
mov
mov
xchg
xchg
imul
leave
push
push
lea
cmp
dec
popa
jl
movsb
and
test
cmpsb
jle
push
sbb
hlt
je
push
inc
push
out
push
xor
mov
mov
push
pusha
daa
jmp
and
xchg
cmpsl
push
push
inc
in
push
sub
inc
test
jb
stc
add
dec
cmp
call
sti
mov
cmpsl
rep
inc
xchg
cmp
xor
daa
jecxz
pop
aam
and
incl
arpl
mov
xor
aaa
sub
xlat
outsb
ds
xor
cmp
scas
mov
int
pop
and
out
shll
xor
jp
sbb
jb
xchg
jle
push
add
mov
or
in
xchg
mov
dec
inc
jb
test
je
inc
lea
stos
or
adc
subb
jbe
in
out
clc
dec
mov
sub
sbb
icebp
fldpi
adc
xchg
stos
jecxz
movlps
into
push
fmul
push
fstps
packuswb
sub
adc
adc
mov
pop
dec
movsl
orb
jbe
add
mov
outsb
fimuls
in
mov
sbb
push
dec
dec
push
cmp
repz
leave
ljmp
mov
sbb
leave
cmp
lods
dec
iret
rcrl
or
xchg
sbb
add
inc
test
xchg
sbb
adc
xlat
mov
les
inc
adc
fdiv
dec
inc
mov
xor
ss
rolb
sub
je
pusha
sub
loope
repnz
repnz
hlt
jmp
shlb
xchg
add
daa
and
pusha
and
fs
push
in
push
lds
aad
iret
shll
test
lahf
mov
loopne
les
dec
mov
in
orl
lcall
mov
and
or
push
xchg
loop
jo
sbb
cmp
mov
push
inc
fiadds
fstps
jns
scas
gs
add
jp
lods
ret
jb
cmp
shl
fiaddl
mov
mov
xor
xorb
repnz
imul
add
scas
pop
ret
cld
and
and
sub
adc
sub
in
dec
jp
and
push
in
adc
rcrb
cmp
push
scas
ds
push
std
daa
inc
ds
enter
cwtl
call
dec
xchg
mov
iret
fwait
jnp
icebp
int3
outsb
cmpsl
mov
mov
jb
add
ret
inc
pop
xor
int
add
mov
push
and
in
cmpb
sbb
xor
scas
outsb
in
cmpsb
aaa
mov
call
mov
in
mov
sub
loop
or
jmp
pop
das
mov
xor
mov
clc
xchg
dec
fnstenv
cld
adc
addr16
rolb
fidivrs
fistpll
inc
test
test
aaa
movsb
cld
dec
pop
push
fstpt
adc
push
into
pop
sbb
mov
outsb
scas
xchg
fldt
mov
shrb
jb
lcall
xchg
icebp
add
mov
ficompl
push
rorb
or
scas
adc
imul
testl
or
movsl
out
leave
inc
xor
mov
outsl
ljmp
sub
ret
cltd
dec
in
push
xor
mov
sahf
out
aas
xchg
into
dec
adc
stc
test
je
data16
sub
jb
stos
ljmp
lret
popf
lods
sub
dec
out
std
mov
mov
mov
add
pop
xor
jnp
inc
inc
popa
xor
cmp
inc
mov
push
jae
in
leave
push
loop
mov
ret
jl
adc
adc
es
je
xchg
sub
outsb
jno
fimull
sbb
jg
inc
repnz
xchg
mov
sub
xchg
mov
inc
xor
pop
je
pop
and
and
cmp
test
fsubs
cmp
jnp
lret
jl
and
jecxz
clts
push
push
aaa
jae
xchg
sbb
cmp
and
inc
insb
or
cmp
daa
sub
dec
cwtl
int
jmp
lcall
sub
je
imulb
sbb
outsl
stc
lahf
xchg
xor
fsts
xor
pop
hlt
cli
sbb
pop
fmull
scas
ja
sub
pop
sub
mov
inc
les
cmc
cmc
ds
test
add
pop
or
aad
in
push
daa
adc
shll
int
shlb
scas
xchg
mov
xor
rolb
sub
fs
mov
dec
rorl
inc
lea
push
cltd
add
mov
pop
cmp
int3
jns
jne
jbe
stc
jnp
and
mov
sbb
mov
inc
dec
clc
adc
or
add
sub
dec
mov
or
mov
arpl
cltd
push
mov
inc
pop
jl
insb
fwait
imul
or
push
jnp
inc
pop
popf
adc
push
int
in
arpl
mov
mov
dec
sub
les
imul
sbb
fcompl
sarl
dec
scas
pop
lock
lcall
and
dec
jg
ja
dec
xor
outsl
test
inc
mov
test
gs
fnsave
and
mov
test
movsb
push
mulb
sbb
movsl
das
filds
int3
inc
fstl
mov
addr16
scas
arpl
cmpsl
xor
scas
mov
out
adc
jnp
push
lahf
sbb
jmp
push
cmc
sub
sub
and
lock
mov
dec
dec
in
ret
int
mov
rcll
sbb
sbb
sbb
mov
sub
or
loop
pusha
out
out
daa
icebp
adc
mov
lods
cli
insb
out
mov
mov
inc
add
jno
mov
sub
mov
fldl
addr16
push
jg
jne
mov
or
adc
int3
stos
icebp
ja
imul
xor
jle
nop
mov
mov
or
mov
insl
cltd
ljmp
push
jg
add
mov
dec
dec
dec
or
stos
adc
out
lock
jp
xor
enter
out
arpl
cmp
aam
fldl
subb
pop
andb
push
xlat
push
cmpsl
inc
jb
inc
ffreep
fs
shl
jmp
jnp
mov
pop
in
ljmp
mov
sub
fldl
fs
popf
call
jb
jmp
mov
cmp
std
and
cmpl
pop
addr16
movlps
add
int3
insl
mov
inc
stos
sbb
ret
cmpl
xor
lret
mov
jb
add
or
jg
bound
addr16
xchg
aam
lret
les
cmc
fmuls
les
mov
rolb
test
mov
or
scas
jge
inc
jo
xchg
gs
pop
stc
push
cmp
in
icebp
fsubl
or
cld
stos
shlb
push
jl
adc
pop
scas
lcall
test
mov
pop
pop
mov
imul
lret
push
addr16
adc
out
xor
movsb
mov
imul
clc
out
fnstenv
jp
lods
adc
movsb
push
jae
enter
pop
aam
jge
dec
ljmp
add
jle
pop
imul
cmc
in
inc
rcr
xor
repnz
idivl
pop
dec
pop
xor
sbb
and
js
aad
mov
mov
adc
push
mov
mov
mov
push
stos
test
in
clc
test
rorb
cmp
jne
call
xor
cmpsl
xchg
jbe
push
and
inc
sahf
roll
dec
xor
aad
inc
jp
jbe
fwait
scas
inc
out
or
mov
jmp
hlt
lods
mov
push
mov
xor
fbld
inc
cltd
out
jb
fstl
addl
sbb
push
or
jnp
xchg
pop
pop
mov
sub
call
ffree
sti
adc
mov
pusha
lret
ret
cmpsb
jnp
cli
lcall
jg
sub
and
dec
imul
pop
imul
pop
adc
inc
fnstenv
cltd
and
dec
dec
pop
cmp
mov
stos
lods
xorl
enter
xchg
int3
mov
insb
dec
ficoml
std
jg
hlt
mov
mov
sahf
mov
sbb
xchg
into
ret
push
lcall
dec
adcb
stos
push
or
jo
sub
pop
hlt
cmp
mov
mov
in
sub
xchg
push
add
not
adc
stos
std
mov
std
stos
jno
push
daa
test
push
outsb
orl
jl
je
jne
js
or
adc
mov
scas
popa
fmulp
cmpsb
and
adc
push
or
out
lea
gs
pop
mov
lds
mov
jbe
pop
rcr
fsubrs
das
adc
pop
je
ja
jbe
lret
jecxz
mov
add
pusha
cld
inc
ret
pop
test
xor
scas
mov
movsl
push
mov
inc
rol
xchg
test
and
sub
xchg
aas
cmova
push
push
dec
lods
or
xor
test
rclb
or
jbe
pop
int3
sbb
ds
lods
cmp
in
lds
adc
xor
push
push
sub
cld
loopne
into
aam
dec
jmp
je
dec
jb
pop
inc
or
std
inc
and
pusha
mov
dec
or
test
bound
aaa
jg
mov
xchg
popf
add
xchg
push
mov
sub
mov
push
imul
pop
cmpsl
addr16
cmp
fs
jge
sarl
mov
ror
out
mov
mov
and
lret
mov
rcl
add
jbe
imul
pop
xor
sub
or
mov
inc
jp
and
test
pop
mov
push
out
out
or
in
mov
ret
repz
fs
aad
sub
cmpsb
jns
adc
ds
push
repnz
das
sub
cltd
stc
jne
push
jg
ljmp
leave
dec
cmp
imul
std
test
jl
rcrb
test
lret
fst
lock
lea
xor
or
dec
scas
out
mov
adc
fsts
xor
jae
cltd
cld
pop
mov
push
mov
push
jo
daa
int
inc
and
int3
mov
icebp
mov
jmp
fwait
daa
jns
jl
ret
ret
mov
xchg
ljmp
test
lahf
inc
mov
pop
dec
pop
std
add
push
cmp
ss
sar
inc
addr16
pop
lret
or
mov
jns
popf
sub
cmp
mov
lds
inc
adc
in
sbb
in
ffree
or
call
notl
lock
mov
iret
ds
out
add
sbb
mov
aaa
imul
shl
push
mov
aaa
dec
sbb
jb
ja
and
mov
repz
xor
dec
ret
pop
cmpb
into
jnp
mov
std
pop
push
fwait
push
pop
fcomip
cld
loope
jne
lret
mov
ret
or
adc
sub
fdiv
aad
js
dec
daa
jnp
cmc
sub
loop
rorl
push
mov
xchg
clc
ss
aam
mov
loope
js
mov
loopne
int3
push
cmp
pop
mov
cltd
cmpsb
push
pop
and
mov
add
xchg
js
iret
inc
stc
insl
call
dec
xchg
bound
bound
outsb
jb
fdivrl
sub
cli
imul
cmp
inc
jge
rolb
outsl
adc
lock
pop
ficomps
addr16
loope
push
cmpsb
lret
pop
test
pop
and
mov
scas
ficoms
xor
pushf
imul
pop
ja
xchg
inc
popf
jg
adc
jns
ja
jb
pushf
mov
mov
mov
sub
je
jl
pop
cmp
xor
ret
xchg
sub
scas
adc
int3
dec
adc
dec
cmpb
jmp
cmpb
js
fstl
adc
xchg
lcall
jo
xchg
xlat
mov
lds
repz
push
xor
jge
add
mov
add
int3
xor
dec
call
rol
mov
xorl
or
and
pushf
xor
popa
cld
pop
adc
mov
adc
jp
dec
hlt
sub
jae
outsl
mov
aas
jle
insl
xchg
mov
lret
loop
sti
inc
insb
pop
xor
sbb
std
cmp
cmp
and
shr
xchg
pop
enter
dec
xchg
movb
movsl
repz
insl
shll
xlat
inc
push
sub
adc
into
fisubl
or
aam
cmp
dec
or
scas
les
ds
test
pushf
cwtl
add
dec
xchg
add
mov
imul
mov
rorl
cmpsb
scas
cld
adc
dec
iret
loop
jp
cmpsb
cmc
les
mov
sub
mov
jbe
adc
xchg
push
clc
pop
xlat
dec
or
sub
mov
scas
int
dec
and
movsl
mov
movsb
lods
aad
enter
scas
cmp
mov
jmp
stos
in
push
xor
xor
jp
xchg
cli
pop
add
and
std
pop
or
jne
insl
idivb
in
pop
or
icebp
negb
lcall
xchg
scas
push
mov
adc
shl
cmp
pushl
xchg
xchg
lahf
sub
pop
or
fisubl
and
mov
sbb
psubusw
popf
addr16
sbb
cmp
xlat
dec
cmpb
addr16
leave
das
cmp
sti
pop
sub
or
movsl
lods
lea
cmp
mov
sub
orl
shl
in
rcrb
xchg
daa
inc
sbb
pop
adc
xchg
inc
inc
rcr
inc
xor
jns
scas
xchg
xor
pop
sti
test
cli
lret
jb
or
ds
sahf
insl
outsl
cmp
adc
test
lds
and
xchg
xchg
sbb
es
ss
adc
ds
mov
mov
and
mov
xor
lret
add
push
mov
in
shl
xchg
mov
mov
or
testl
clc
jo
add
fwait
cmp
mov
sbb
and
movsb
jae
cmpsl
cmpsb
andb
sub
out
push
dec
jnp
mov
mov
scas
mov
pusha
xchg
fs
scas
jae
push
cmpb
adc
loop
lock
ljmp
jns
int3
repnz
bound
dec
rcrb
mov
movsl
scas
loop
paddq
push
adc
mov
push
jmp
mov
dec
sbb
imul
movsl
xchg
sub
pop
mov
cltd
jo
jb
mov
out
sahf
push
dec
mov
cwtl
push
mov
nop
and
dec
add
pop
fstp
mov
cs
pop
in
xlat
ret
les
decb
ljmp
add
sahf
fildll
shrb
test
push
xchg
inc
inc
in
cli
jnp
iret
inc
mov
repnz
xor
sub
or
sar
stos
mov
jae
out
sbb
jns
jnp
pop
cmp
std
inc
mov
xchg
push
cmp
sbb
and
fstpl
fwait
inc
mov
int3
sub
push
cmp
rcrb
mov
add
add
cmp
pop
dec
cmpsb
jnp
or
dec
xchg
dec
cmc
sub
aad
inc
ret
cmpsl
loop
adc
imull
add
ja
xchg
add
jne
scas
mov
sub
inc
fadds
pusha
outsl
leave
loop
jge
roll
sbb
mov
pop
mov
cmpb
and
dec
jge
in
dec
and
fnstenv
gs
dec
sbb
sarb
jns
ret
outsb
adc
fcomp
push
xchg
imul
push
ret
adc
test
cmpb
push
ret
inc
sub
in
int3
xor
cs
cld
push
lcall
push
sahf
xchg
mov
inc
pop
push
or
inc
add
jns
mov
pop
jb
iret
adc
xchg
pop
jno
arpl
pop
pop
pop
hlt
push
inc
fwait
push
jecxz
not
mov
push
jb
mov
aaa
cmp
xchg
aaa
push
jmp
add
xchg
pop
jecxz
inc
inc
ljmp
adcl
push
das
sbb
mov
imul
mov
or
sbb
aad
xor
add
out
mov
mov
movsb
mov
hlt
push
orb
stc
je
mov
ret
sbb
push
sbb
cmp
add
cmp
and
stos
jne
incl
dec
sbb
dec
or
or
and
loope
or
inc
out
lea
pop
inc
inc
jae
insb
or
jg
scas
mov
loop
xchg
inc
test
push
cmc
lcall
cmpsb
ds
xor
adc
aad
adc
fcomip
and
rol
outsb
hlt
mov
pusha
pop
push
pop
outsb
insl
rcrb
pop
sub
pop
sub
out
testb
inc
add
jl
xor
jg
scas
push
push
mov
out
add
lcall
pop
mov
loope
push
in
daa
pop
sub
mov
cmpl
push
mov
rclb
cmp
jo
cltd
or
aam
test
xchg
push
inc
bound
mov
jnp
mov
int
cmp
mov
in
ss
out
pop
je
pop
shl
popa
inc
sbb
mov
in
cli
cmp
lret
mov
out
icebp
in
ret
pushf
mov
add
fnstcw
xchg
or
sbb
gs
cwtl
sub
push
add
cld
push
adc
cmp
rcr
cs
mov
jns
xchg
in
pop
push
das
je
repnz
imul
mov
int3
push
lods
jno
or
jmp
push
xor
xchg
or
lret
loope
inc
add
xchg
div
xor
inc
pop
cmpsl
stos
loop
cmpsl
mov
mov
cld
mov
inc
imul
jge
add
pop
sbb
popf
stos
sbb
sti
mov
cmp
les
mov
addr16
movsb
dec
add
in
cld
frstor
xchg
cmp
jle
push
jecxz
sbb
bound
xor
call
cmp
jo
cmp
mov
xor
lea
inc
xor
jnp
sbb
addr16
adc
out
dec
mov
ss
push
out
mov
test
xlat
pop
adc
sbb
repz
jns
pop
in
jmp
lret
mov
sbb
aaa
push
jl
cli
push
lods
cmp
out
xchg
cltd
inc
push
push
dec
fldcw
pop
jns
and
xor
andl
xchg
pushf
mov
frstor
leave
xchg
pop
sbb
jne
push
mov
pop
or
aas
imul
lds
aad
test
pop
jae
xorb
jp
mov
xor
cmp
push
inc
shrl
xchg
cmp
stos
push
cmpsl
loopne
sub
into
lods
fcmovu
imul
sub
cwtl
pop
cli
jo
xor
push
lock
dec
sub
xchg
fmull
jno
cld
and
xchg
add
sti
mov
add
mov
shll
mov
mov
cmp
pushf
cmc
int
add
add
mov
out
jg
test
imul
jmp
sbb
cltd
or
push
add
mov
bound
ret
adc
mull
xlat
into
inc
pop
testl
lods
cmp
xor
cmpb
dec
mov
and
mov
repnz
push
lds
cmp
push
loope
fcompl
fst
dec
leave
cmp
jg
jp
or
pop
loop
fnstcw
idivl
sbb
xorb
push
cmp
pop
cmp
daa
ss
ss
mov
aam
cli
xchg
insb
lea
sbb
sub
or
repz
dec
in
sub
xchg
jae
mov
jbe
xchg
lcall
dec
and
sbb
add
fdivrl
xchg
je
movsb
aaa
adc
ror
lcall
jmp
insb
mov
in
mov
xor
dec
xor
cmp
cwtl
xor
xor
cmc
ret
push
daa
ret
mov
add
xchg
pop
push
or
jnp
dec
in
clc
xlat
or
jo
mov
mov
adc
lock
nop
pop
test
jns
jmp
into
cwtl
ss
sub
inc
lock
sbbl
push
pop
xor
mov
add
lea
outsb
cltd
jmp
sbb
dec
out
or
cmp
test
enter
inc
mov
js
dec
xor
cmpsl
xor
imul
sbb
dec
mov
mov
rcll
cmp
ss
stc
mov
in
push
xor
iret
cmpsb
mov
pusha
xor
mov
frndint
push
pop
adc
jg
rclb
outsl
shl
shl
sbb
sti
insl
sbb
mov
lret
pop
loope
mov
movsl
lods
js
push
test
js
dec
mov
popf
cli
adc
int
mov
test
int3
fs
mov
shlb
sub
sbb
jnp
jg
pop
aaa
addb
mov
xchg
sub
test
je
ds
stos
or
xchg
xchg
fdivs
or
or
inc
or
inc
xlat
add
lock
outsl
adc
loope
pop
mov
cmp
add
fcoms
rcrb
pusha
adc
mov
dec
cwtl
clc
loop
popf
shll
sbbl
into
or
das
scas
mov
clc
and
push
sti
aad
xor
push
out
xchg
xlat
mov
add
inc
cmp
dec
inc
test
adc
cmp
inc
outsb
aad
cmpb
aaa
adc
or
xor
call
xor
jmp
hlt
lods
insl
inc
test
jnp
in
outsl
aad
xchg
pop
mov
mov
imul
out
pop
addr16
lret
mov
aad
dec
pop
push
sarl
pusha
push
movsl
inc
mov
inc
clc
in
sub
push
aam
int
inc
inc
xchg
lahf
mov
add
xor
out
cmp
in
or
mov
lods
mov
out
xor
imul
mov
mov
push
inc
fwait
push
jecxz
and
jno
andb
aam
js
mov
cli
jnp
mov
jl
lcall
insl
aam
cmpsl
push
jb
imul
pop
out
shlb
mov
leave
or
nop
jnp
addl
sbb
push
outsl
or
xchg
arpl
pop
inc
pop
popa
mov
xchg
push
aad
hlt
jmp
mov
xchg
jle
cmc
mov
mov
aaa
sbb
add
movsb
jge
sub
ljmp
dec
jg
pop
mov
pop
in
pop
xor
xor
in
ds
mov
dec
add
sub
inc
and
cmp
subb
into
jp
jmp
mov
nop
dec
dec
cltd
repnz
lret
jg
ret
ror
cltd
mov
popf
popf
jg
jnp
pop
pop
gs
dec
mov
sub
mov
in
lahf
fdiv
cmp
scas
push
mov
scas
inc
add
outsb
or
jbe
sub
dec
push
mov
cmp
xchg
data16
ficoml
dec
push
std
loop
cmpsl
pop
lods
aam
mov
mov
or
push
test
out
test
add
aaa
inc
cmp
or
cmp
dec
lea
sbb
subb
cld
jbe
pop
jne
and
mov
mov
cmpsl
push
dec
iret
or
xor
outsb
ret
lock
and
scas
ja
lods
sbb
xlat
movsl
int
test
fwait
bound
lea
jno
xor
sbbb
lds
mov
mov
imul
and
lret
xchg
movsb
rclb
inc
stc
ficoml
pop
je
in
fstl
mov
sbb
enter
pop
dec
lcall
jmp
xchg
or
add
cmp
cmp
sbb
mov
sbb
out
cmp
ret
pop
out
jne
and
push
push
shl
pop
cmp
es
push
xchg
mov
lods
ret
xchg
jbe
cwtl
inc
fsubrp
sub
mov
aam
stos
dec
icebp
out
imul
sbb
hlt
mov
fistpll
jnp
in
jo
daa
notb
push
stos
cli
lock
jl
insl
rcrb
aaa
les
enter
sbb
iret
pushf
cmp
shrb
mov
or
or
insl
and
lcall
inc
cmp
aas
add
dec
int
movnti
mov
fwait
ljmp
gs
ljmp
xor
addr16
lea
mov
pop
fwait
push
jnp
ja
repz
adc
push
lcall
push
sub
ret
into
adc
jl
dec
mov
shrl
adc
andl
mov
clc
dec
sub
mov
outsl
cmp
and
cmpsl
or
jbe
sarl
mov
add
mov
sti
xchg
mov
aad
jp
jb
dec
mov
icebp
push
or
out
adc
hlt
add
pop
es
bound
xchg
push
fstl
cmpsb
mov
shr
rcrl
xchg
cmp
cpuid
int
lea
inc
bnd
adc
test
cmc
and
pop
mov
dec
pop
mov
sahf
outsl
call
sbb
sub
xchg
adc
pop
icebp
mov
adc
addl
mov
dec
int3
icebp
dec
cmp
popf
pop
or
sub
shll
or
es
fstpl
push
sub
inc
mov
hlt
xlat
cmpsb
pushf
push
test
xchg
popf
dec
in
ljmp
jmp
clc
or
push
lods
lret
dec
mov
jle
mov
pop
addl
jmp
inc
push
sbb
int3
inc
push
test
rcr
pop
mov
dec
mov
daa
cmc
lcall
push
inc
push
xchg
cmp
stos
sbb
xchg
cmpsb
jnp
insb
sub
xor
dec
inc
add
dec
push
push
mov
inc
jp
mov
mov
add
jge
mov
or
xchg
shlb
push
je
xlat
ja
test
ja
pop
aas
jae
push
call
fdivr
add
and
mov
push
mov
cmc
jle
ja
fstp
call
lret
fwait
pop
das
shr
out
push
or
shl
push
mov
nop
pop
icebp
popa
sub
aaa
xchg
inc
or
es
xor
stc
adc
adc
pop
sbb
pop
ret
push
mov
mov
push
outsl
mov
pop
adc
cmp
dec
push
push
push
cmp
sbb
sbb
mov
xor
gs
xchg
dec
cmpsb
adc
xchg
iret
jg
dec
test
jae
pushf
mov
loop
outsb
xchg
shrl
xor
xor
scas
and
rcrb
adcb
sbb
jmp
mov
jnp
pop
icebp
std
leave
cld
push
fnstsw
outsl
or
out
lret
js
fstp
xor
mov
cs
xor
xor
aad
lea
dec
test
int
pop
mov
in
pop
inc
and
cld
pop
jle
jmp
aam
lahf
ss
cmp
ret
jae
scas
lods
les
ljmp
push
ljmp
sbb
add
dec
mov
or
mov
jge
fadds
jmp
sbb
divb
stos
inc
mov
inc
in
cmp
jl
adc
xchg
aas
dec
sbb
arpl
cs
cs
cmp
xchg
adc
and
adc
gs
divb
inc
push
push
push
adc
outsl
dec
pop
jge
pop
dec
dec
push
insb
xchg
push
lahf
or
dec
nop
adc
inc
xchg
fisubl
stos
jae
lods
test
loop
dec
dec
inc
add
xchg
mov
insl
adc
sbb
cmp
dec
scas
or
popa
lret
pusha
cli
push
push
insl
sahf
iret
push
movsl
add
pop
add
mov
lods
in
cli
xlat
insb
loopne
push
addr16
adc
bound
add
shr
or
push
inc
cmp
push
sbbb
and
pushf
fcompl
pop
xchg
pop
icebp
sub
xor
cltd
ror
jno
add
jno
arpl
push
and
push
repz
pushf
xlat
div
insb
aad
ds
cmp
sbb
sbb
test
fs
fimull
mov
outsb
jecxz
or
push
testb
ror
and
xchg
push
imul
pop
mov
mov
or
push
dec
sub
push
adc
stos
roll
add
xchg
xor
sub
mov
cmpsb
out
je
imul
iret
add
sub
and
into
dec
add
lret
xchg
jmp
cmp
dec
pop
xchg
jl
dec
aam
mov
aad
out
sub
imul
ljmp
or
rcll
das
dec
out
int3
sar
xchg
push
mov
in
outsl
in
int
inc
ret
out
movl
fs
insl
addr16
mov
dec
mov
sbb
adc
jmp
pushf
push
orl
aas
scas
push
push
pop
jns
inc
mov
cmp
cmpb
inc
or
adc
push
fwait
pop
enter
xchg
dec
outsb
scas
into
dec
scas
adc
jle
mov
popf
fwait
cli
dec
or
stos
lret
test
cwtl
pusha
movsb
xor
cmp
xlat
jg
jns
xchg
shrl
and
mov
ja
adc
dec
int
pop
pusha
push
inc
out
fistps
inc
sub
lock
sbb
cmp
movb
inc
and
mov
inc
xor
cld
in
inc
hlt
xor
cmpsl
sbb
cs
call
popf
adc
pop
mov
shlb
mov
adcb
dec
cltd
lods
add
lret
stc
xor
sub
sub
xchg
ret
test
jecxz
adc
shll
adc
sub
lahf
outsb
bnd
cmp
or
push
add
sbbl
inc
out
adc
pop
pop
notb
mov
cmpsb
pop
lret
sbb
js
ret
mov
aad
sahf
pop
sti
loope
xor
xchg
jo
cwtl
ja
lds
daa
pop
mov
popa
lds
addr16
pop
pop
push
xchg
xor
jge
fdivr
and
and
pop
stos
inc
mov
sub
adc
out
sbb
out
dec
int3
flds
repz
push
xor
inc
out
and
test
cmc
test
pop
movsl
loop
jle
mov
scas
aam
mov
cmp
out
pop
inc
jb
mov
lret
add
fnstenv
xchg
fcoml
inc
mov
mov
ret
and
mov
ret
jecxz
xor
enter
and
jne
jb
in
adc
popa
ljmp
mov
sub
and
lock
and
mov
out
mov
lret
mov
push
pop
ret
out
cmp
push
inc
notl
ret
subl
sub
idiv
int
fwait
sahf
aaa
ljmp
jnp
pop
ror
add
add
jnp
int
ror
mov
outsb
jb
inc
add
ja
add
int3
ror
das
lock
ret
stos
mov
imul
xorb
jnp
cmpb
sub
mov
cmpsb
shrb
push
inc
push
sti
rcrl
or
clc
sti
add
repnz
in
inc
ficoms
fsub
aas
popa
cmpsb
xlat
lock
int
inc
pop
sahf
jnp
dec
std
mov
or
aad
cmpsb
xor
add
iret
mov
add
ds
mov
mov
add
jl
scas
insl
mov
jp
adc
into
pusha
push
fildl
jp
or
adc
int
mov
lret
lods
mov
push
mov
int3
movsb
outsb
mov
std
adc
test
fbstp
idivb
push
add
cmpl
dec
mov
mov
pop
mov
cmp
pop
xor
fwait
pop
mov
cwtl
mov
je
sub
sti
pop
pop
mov
pop
into
inc
mov
mov
dec
inc
hlt
addl
jl
push
pop
outsl
sahf
jno
cs
xchg
push
mov
and
pop
jno
fxch
jmp
push
xor
lret
rclb
cmp
mov
xchg
loope
add
jb
mov
mov
or
add
cli
sarb
fsubs
fcom
push
mov
aad
in
lea
mov
push
jecxz
inc
cwtl
add
mov
dec
decb
mov
jmp
mov
pop
dec
push
push
or
stc
aaa
stos
pop
test
jmp
push
mov
jle
push
stos
sbb
mov
xor
xchg
inc
add
or
mov
fildll
cli
les
jp
data16
push
xor
pop
inc
cmp
xchg
push
cwtl
cmp
jmp
into
xchg
inc
or
ljmp
mov
enter
add
hlt
stos
rcrb
popa
mov
jae
outsl
orb
cmp
repnz
shl
pop
jecxz
stc
fisubrs
and
fldcw
rol
int3
jle
neg
xchg
insb
inc
add
test
lock
mov
dec
jp
or
dec
dec
mov
test
stos
xor
add
sub
mov
jbe
loopne
outsl
int
mov
loope
fwait
or
pop
pushf
jg
mov
mov
aam
sbb
pop
mov
out
adc
les
fnsave
push
lea
and
mov
loopne
fwait
pop
addb
test
leave
in
push
jb
push
shl
negl
push
ret
and
cmc
divb
fsubrl
mov
sbb
push
and
xchg
mov
push
mov
mov
jbe
test
inc
test
ljmp
test
mov
fisttps
popa
xlat
jle
outsl
in
push
xchg
cmp
mov
enter
int
or
daa
push
cmp
mov
rcrl
dec
cmpl
dec
jg
sti
sub
das
in
sbb
mov
bound
lock
incl
pop
enter
mov
lcall
scas
mov
in
jno
ja
movsl
sub
and
ljmp
pop
lea
addl
popf
mov
call
lods
daa
icebp
xchg
xor
mul
test
jbe
or
and
inc
insl
mov
pop
or
faddl
outsb
jp
jmp
lods
scas
test
in
movsl
mov
add
cli
jns
add
mov
ds
les
popa
mov
cmp
ss
int3
pop
mov
jmp
push
and
mov
xor
andl
dec
mov
xchg
dec
popf
mov
pop
sbb
push
je
fists
jbe
mov
pusha
jge
push
cmpsl
data16
push
jbe
pop
cmpsl
mov
movb
test
inc
adc
dec
sbb
push
add
fiadds
call
out
pop
pop
lods
loop
jae
inc
scas
lds
xchg
flds
xor
rorl
test
in
dec
and
call
dec
sbb
mov
loope
int3
adc
jnp
sub
cld
xor
and
lods
jg
ret
cmp
mov
pop
je
add
mov
insb
push
fcomps
int3
cwtl
and
push
arpl
fldt
lods
mov
cld
enter
test
mov
inc
out
sub
sub
ret
jp
in
roll
cld
fwait
mov
sbb
imul
dec
xchg
cmp
xchg
aam
fsubrl
jp
push
nop
shlb
jle
das
pop
or
cmp
and
sub
cld
push
xchg
jp
mov
add
adc
adc
in
mov
push
stos
daa
popf
les
jmp
ja
sbb
mov
lcall
pop
movb
pop
dec
inc
out
pusha
lret
stc
inc
std
imul
enter
and
outsb
std
adc
add
pop
jl
inc
pop
sbb
dec
jno
adc
loopne
dec
xchg
lcall
stos
hlt
xchg
adc
jo
fdivrp
mov
add
leave
divl
insb
and
movsl
dec
pusha
mov
test
data16
xchg
iret
cwtl
das
and
sbb
mov
push
cmp
nop
inc
push
data16
lret
stos
pop
aas
mov
adc
and
in
leave
xor
mov
into
outsl
jno
cmp
push
int
jae
sub
sub
loopne
jmp
mov
outsl
sar
fcompl
mov
stos
inc
out
test
loopne
xchg
or
sbb
and
dec
stos
dec
fnstcw
adc
xor
jnp
and
stos
jne
setne
addb
fcoms
shrl
negl
lret
mov
scas
push
ds
imulb
push
cs
xchg
ss
stos
rorb
xchg
adc
test
leave
vaddsubpd
jb
in
dec
lds
push
call
adc
dec
enter
pushf
movsl
inc
jno
push
xchg
cmc
sub
sub
mov
nop
test
xchg
xor
xlat
sub
mov
adc
ljmp
ficoml
dec
enter
xor
jmp
lret
nop
push
enter
sti
icebp
sub
pop
xorb
enter
cmp
mov
pop
hlt
movsl
subb
lret
iret
neg
vmread
pop
sub
test
dec
sbb
push
lahf
cmp
fsubrl
jge
sub
pop
aad
add
jb
in
cmpsb
mov
cli
sub
dec
bound
push
data16
cmp
decl
jmp
mov
jmp
into
adc
rcrb
or
lahf
jge
jbe
lock
rcrl
push
xor
movb
mov
ss
pusha
in
into
std
fbld
subb
adc
test
data16
std
ds
mov
pop
cmp
jbe
lods
sbb
adc
das
dec
cltd
sbb
xor
dec
adc
mov
inc
push
xor
out
cmp
pop
addb
pop
xor
push
scas
sbb
dec
sbb
adcb
lahf
xchg
fistl
xchg
push
sar
aad
jg
lea
pop
xchg
sbb
dec
aas
out
and
leave
and
ss
rcr
pop
ficomps
subb
jbe
adc
mov
in
call
icebp
mov
or
mov
or
aas
xchg
leave
mov
out
loope
xchg
sbb
cmp
pop
repnz
sub
cmpsl
shlb
in
mov
ja
icebp
jne
xor
iret
cmp
and
ljmp
mov
psraw
jg
mov
xor
stos
jno
lds
sub
xor
or
fstl
xchg
lock
add
push
fidivs
enter
jns
push
push
pop
arpl
or
xor
stc
aas
bound
mov
repnz
push
xor
push
incl
cmpsb
jbe
lods
sti
xorl
xchg
fldenv
test
jb
ljmp
ficompl
xchg
sbb
sub
mov
push
inc
mov
bound
dec
aad
sbb
dec
or
inc
xlat
jb,pn
add
jmp
lock
push
in
test
fnsave
push
jno
out
rcrb
lods
addr16
push
mov
push
push
push
jle
cwtl
adc
ja
sub
sbb
movsl
xor
int
jb
cmp
inc
xlat
inc
mov
sub
jb
mov
lods
andb
pop
pop
roll
adc
lds
xchg
not
into
sti
sub
inc
in
or
movsb
mov
mov
lods
test
and
or
adc
in
imul
lcall
iret
jl
orb
adc
sub
daa
pop
pop
outsl
in
or
dec
fnsave
rorl
cmp
push
adc
loope
or
pop
xchg
imul
mov
mov
js
mov
pop
out
dec
mov
mov
outsb
test
enter
loop
add
mov
pop
lcall
call
or
adc
mov
addr16
dec
js
int
clc
add
jmp
pop
das
lret
out
inc
pop
and
mov
sbb
sar
lahf
and
rcr
pop
xchg
jo
or
cld
mulb
nop
test
and
test
repnz
movsb
xchg
scas
aas
cli
into
mov
sbb
pop
loop
vlddqu
push
lcall
xor
and
jbe
rcrl
xchg
mov
sahf
or
jns
adc
mov
xor
dec
or
gs
test
test
xrelease
push
xlat
sahf
popa
out
xor
shl
mov
jae
packuswb
mov
mov
mov
jmp
imul
lret
jnp
dec
popf
dec
and
cmp
pop
adc
test
pusha
rcll
out
sbb
mov
stos
pop
pop
sti
jno
repnz
mov
mov
ret
test
mov
xor
cmp
sub
pop
mov
enter
lds
jnp
add
adc
ja
pop
mov
cmp
push
mov
pop
add
sub
jge
shlb
push
pop
cmpsb
mov
repnz
cmp
push
in
pop
mov
pop
outsl
xchg
sbb
and
and
inc
and
and
sbbb
xorb
cltd
in
dec
jns
in
push
add
movsb
xchg
fstps
cmp
pop
mov
jmp
loope
call
pop
push
test
outsb
adc
push
hlt
mov
iret
dec
sarl
out
and
and
xor
or
xchg
in
out
js
xor
sub
add
lea
xchg
push
xchg
clc
in
shr
fwait
add
mov
mov
enter
sbb
xor
ror
xor
mov
mov
fsubl
fwait
scas
roll
push
ret
dec
pop
je
mov
mov
lock
nop
push
mov
push
test
lds
outsl
loopne
add
lahf
add
clc
dec
cs
inc
xacquire
test
cmpsl
add
scas
jbe
add
in
out
add
and
mov
xchg
and
xchg
xchg
mov
and
shlb
xor
aam
xor
addr16
pop
push
push
xchg
scas
les
js
fisttpll
jno
rcrb
je
loop
mov
mov
pop
cld
or
mov
notl
dec
sub
sbb
mov
push
and
test
popf
or
mov
stc
jp
pop
push
shlb
scas
mov
and
sub
sbb
sarl
sbb
push
das
lcall
mov
into
popf
xlat
lds
fists
es
jge
lods
out
push
cld
inc
in
and
ja
mov
cmp
rclb
vucomisd
cmp
push
jns
ja
mov
lock
mov
cmp
xor
and
ja
fisttps
fwait
dec
addr16
push
and
mov
ss
xchg
js
inc
mov
add
xchg
xchg
adc
rcrb
adc
adc
enter
fildl
enter
mov
xchg
inc
pop
cmp
shl
rolb
xor
loop
insb
mov
mov
xor
mov
aaa
test
js
pop
lock
mov
repnz
sahf
movsb
ja
add
xor
push
enter
fadds
or
imul
mov
jno
sub
ds
stos
hlt
xchg
in
ss
jo
push
insb
jnp
jns
ss
std
mov
and
js
pop
mov
aam
add
push
add
mov
push
mov
inc
jge
jle
repz
icebp
or
and
nop
lret
repnz
gs
lods
mov
sub
out
pushf
and
mov
fidivs
out
sub
dec
push
dec
push
les
test
dec
dec
mov
repz
ja
or
int3
inc
shlb
inc
mov
lcall
testl
insb
je
sbb
mov
lock
pop
pop
inc
adc
cmp
sbb
sbb
adc
xchg
inc
lds
pushf
xor
les
movsb
and
pop
and
xor
cmpsl
or
jg
jns
shlb
ret
test
xor
nop
sbb
mov
popa
sub
dec
mov
ja
popl
mov
adc
push
imulb
or
out
and
and
and
ljmp
xchg
mov
adc
xor
test
and
inc
mov
or
mov
and
or
sbb
fwait
hlt
mov
dec
loope
push
lods
neg
daa
cltd
testb
fists
push
cmp
mov
jp
jmp
dec
cmp
mov
dec
fdivrl
push
loop
cmp
shll
imull
pop
xchg
adc
add
dec
in
clc
icebp
les
lds
je
cs
pop
cmp
inc
pop
xlat
int
mov
outsb
lahf
testb
movl
jmp
push
sbb
push
mov
jp
pop
int3
sbb
xchg
adc
cs
or
sbb
add
fucomip
les
pop
fdivrs
movsl
jb
jge
cmp
es
outsl
dec
lds
sbb
insl
adc
add
mov
sbb
into
mov
adc
mov
and
lods
inc
inc
imul
popf
in
insb
adc
and
ljmp
ljmp
shll
decl
bnd
aas
pop
pop
cmp
or
icebp
test
adc
je
shr
je
jp
stos
cmp
fucomip
adc
aaa
cmpsl
xchg
aam
add
fldt
jge
sbb
sbb
clc
lahf
fdiv
icebp
push
fucomip
lods
xchg
scas
pop
sbb
mov
sub
xchg
fnstsw
push
js
stos
mov
das
shll
xchg
sub
mov
lcall
outsl
push
sar
mov
iret
call
cmc
cmp
xchg
sub
lods
inc
pop
fsubrs
test
popf
dec
pushf
xor
mov
popa
stos
icebp
sbb
jno
sahf
or
adc
mov
stos
mov
push
or
lret
pop
or
lahf
enter
dec
xor
mov
shlb
dec
subl
jg
lods
jne
jge
push
rcrb
stc
sub
aad
clc
jo
mov
fnstsw
cmp
insl
jnp
out
add
aas
shl
pavgb
ss
out
stos
outsl
scas
in
pop
pop
pop
lret
iret
test
mov
pusha
loopne
aad
ss
repz
je
lret
gs
add
xor
repnz
or
orb
cmovle
xchg
jmp
mov
movsl
fnstenv
jp
xor
push
cmp
rcr
and
int
push
push
insl
cmpsl
mov
int3
xor
jp
inc
outsl
mov
jl
adc
bound
mov
xchg
out
repz
xchg
sub
jg
ds
cmp
test
pop
std
jge
pushf
sbb
xor
fnstsw
xchg
sbb
lahf
scas
addl
dec
cmp
aaa
adc
imul
dec
mov
push
xchg
lds
addb
imul
icebp
lods
or
mov
xor
test
daa
pop
mov
mov
testl
sub
pop
sahf
dec
and
scas
push
sbbb
xchg
and
cmp
pop
mov
mov
cmpsb
adc
and
fmul
fnstcw
lock
je
repnz
mov
fstpl
scas
cld
sub
cld
stos
rcrl
jns
bound
fbstp
xchg
test
mov
aaa
cwtl
movsb
and
push
mov
divb
or
jle
aas
rolb
mov
lods
cmp
inc
xchg
ret
stos
nop
js
adc
add
dec
dec
cltd
pop
jae
mov
insb
iret
popf
sahf
lea
sub
mov
nop
and
push
pop
and
or
jb
test
rol
dec
fwait
repz
push
jno
sbb
and
fidivs
cwtl
xlat
fs
es
mov
inc
adc
dec
xchg
outsb
cli
fwait
aad
xor
enter
jg
mov
push
popf
cmp
dec
and
and
xchg
jbe
test
loop
call
sbb
mov
loope
aad
dec
xor
cmp
std
inc
mov
mov
pusha
aam
popa
adc
xchg
xor
loope
in
push
adc
and
lahf
sub
xchg
les
mov
stos
loop
mov
repnz
or
fwait
cld
push
cmp
shll
and
mov
pop
fldenv
into
das
dec
int3
mov
cmp
popa
jno
lahf
push
incb
cmp
les
xor
rcrb
ror
sbb
dec
pop
mov
pop
insb
sbb
jge
push
les
cmc
mov
mov
cli
add
mov
movsl
add
xor
cwtl
mov
cltd
inc
add
dec
imul
icebp
pop
pop
data16
or
stos
in
lret
scas
inc
cmp
mov
test
ret
sbb
orl
dec
xchg
adcb
pop
cwtl
addr16
mov
mov
lea
jle
int3
icebp
rclb
xlat
ror
mov
imul
mov
cs
mov
adc
out
xor
in
xchg
pop
pop
popa
fs
xchg
add
and
pop
lods
int3
jg
fdivr
mov
std
outsb
mov
mov
fdivl
push
or
lret
insl
and
lds
in
push
add
mov
in
scas
sar
andb
pop
lds
leave
jnp
hlt
jmp
sbb
mov
insl
cld
xchg
pop
sub
jmp
outsb
daa
cmp
fucomip
pushf
add
xorb
cmpsl
adc
cmp
push
jnp
cmp
daa
lret
fistpl
mov
bound
xchg
sub
ljmp
cmpsl
jmp
mov
movb
mov
or
pop
mov
cmp
mov
add
jae
xor
mov
call
xlat
add
aam
jp
xor
ja
int3
mov
cld
mov
out
pusha
mov
jp
pop
xchg
shlb
je
cmp
gs
dec
pushf
mov
adc
mov
xchg
and
cmp
dec
out
jne
jbe
ror
and
push
cmpsb
mov
jmp
fs
das
or
arpl
aam
cs
in
inc
fsubl
jmp
dec
push
fdiv
gs
cmp
lods
xchg
std
pop
pop
add
lods
dec
bound
jle
dec
pop
xor
mov
xchg
cmp
pop
xchg
xchg
xor
imul
cltd
lret
push
cwtl
aam
push
sub
mov
pop
inc
adc
repz
inc
pop
xchg
mov
cltd
stos
popa
loope
push
sti
repz
shrl
or
rorl
jne
psrld
loope
cmp
sub
mov
jo
xchg
sarl
fidivrl
xchg
xchg
pop
mov
lea
ljmp
mov
fyl2xp1
mov
push
fnstenv
or
mov
push
lcall
xchg
inc
sub
pop
cld
pop
inc
sub
cmp
xchg
inc
mov
es
loopne
xchg
jne
jp
adc
cmp
jns
mov
repnz
xchg
fdivl
sbbl
mov
aam
sar
mov
push
call
pop
and
fdivs
xchg
mov
fistpll
and
aad
mov
mov
xor
adc
xor
and
mov
jl
rolb
xor
and
rclb
addr16
pushf
dec
add
pop
fwait
xor
ret
inc
sti
lret
pop
inc
outsl
fld
pop
cmpsb
xor
push
dec
lea
fsubrl
pop
cmpsb
push
pop
cmpsb
hlt
jb
xor
sub
movsb
shll
or
mov
cli
bound
stos
popf
push
cvtps2pi
std
ret
mov
loop
jp
pop
xchg
xchg
add
push
jmp
popa
es
xchg
and
and
sbb
cld
test
pushf
xor
cmp
xor
jne
scas
sarb
outsb
pop
pushf
je
sbb
lea
or
imul
sbb
push
in
fbld
inc
sub
mov
adc
in
jecxz
mov
sub
ss
dec
inc
xor
mov
out
cmpsb
push
aad
subl
mov
sbb
mov
daa
xchg
mov
pop
xor
cmp
fildll
pop
mov
andl
cmp
push
jmp
push
clc
pop
movsl
mov
rcr
call
test
inc
cmpsb
aam
in
jmp
je
jp
mov
aam
push
xchg
mov
cmp
and
mov
out
out
ja
jno
xchg
xor
out
or
scas
dec
movsb
in
sub
outsb
loop
inc
outsb
pop
arpl
mov
add
push
cltd
cs
jecxz
jge
dec
cmpsl
jp
lea
add
mov
cmp
andl
stc
mov
ds
mov
mov
outsb
jle
jmp
adc
movsb
xchg
dec
movsb
mov
or
adc
int3
ja
and
cmpsb
xor
pop
test
jecxz
out
iret
xchg
sub
cld
das
add
testl
dec
shll
fucom
scas
add
call
sub
pop
adc
fildl
push
fldt
test
cmp
pushf
mov
dec
data16
lods
and
cmp
mov
xchg
popf
or
cs
repz
mov
mov
push
aad
imul
inc
mov
out
mov
mov
lahf
ljmp
push
sbb
xchg
inc
add
mov
cltd
mov
adc
xchg
into
xchg
add
clc
cwtl
mov
sahf
sbb
push
push
and
or
mov
lock
sub
mov
je
sub
pop
mov
cs
cmp
std
fiadds
adc
das
pop
loop
ljmp
or
jo
sbb
jmp
prefetch
or
in
bound
cltd
pop
repz
jle
mov
sbb
xchg
pop
cmpsl
popf
fimull
or
or
ljmpw
mov
mov
xchg
cmp
add
sub
jo
cli
js
testl
mov
push
jl
popf
adc
and
outsl
std
sub
aaa
cmp
idivl
call
dec
sbb
leave
nop
insl
mov
test
inc
jmp
cmpsl
imulb
cli
xor
movsl
jns,pt
into
lret
and
push
jb
mov
into
fistps
jl
out
xchg
stc
push
xlat
ret
fldt
jp
xor
cltd
xchg
sbb
cltd
pusha
sbb
ret
inc
jecxz
pop
loope
mov
and
or
xor
out
pop
pusha
fcmovnb
aad
loope
pop
dec
sub
imul
mov
das
stos
lods
mov
lret
or
sub
cwtl
out
or
and
cli
jnp
addr16
or
paddusw
dec
sbb
mov
add
popf
or
sub
cmp
ja
mov
adc
stos
dec
adc
mov
push
mov
inc
xchg
jl,pt
push
add
sub
js
lcall
lcall
jnp
inc
icebp
mov
scas
sub
push
fiaddl
out
rclb
push
xchg
lcall
xorl
inc
xor
jg
stos
jno
lods
pop
repnz
mov
pop
test
or
dec
xlat
sub
pop
jb
pop
testl
xchg
xor
iret
scas
mov
push
push
mull
xor
mov
pushf
pop
inc
pop
jae
dec
inc
test
out
mov
mov
pop
xchg
in
xchg
in
jo
add
add
inc
mov
xchg
dec
inc
aad
or
in
mov
fwait
and
in
sbb
ds
pop
mov
orl
mov
mov
dec
add
pop
jns
or
pop
sbbb
hlt
int3
mov
jbe
and
jl
sti
cmpsb
mov
repz
xlat
sub
insl
and
or
sub
mov
pop
mov
inc
jb
mov
jmp
and
imul
adc
lods
addl
incl
jno
insb
sub
loop
cmp
push
or
fsubl
jne
jae
das
lods
push
lods
or
sahf
push
push
cmp
mov
fidivrs
dec
out
adc
aam
add
outsb
dec
mov
push
jns
pop
gs
sarb
mov
mov
lock
xchg
adc
inc
mov
test
fcomps
lods
mov
lcall
cmp
sbb
push
push
rclb
adc
sti
pushf
cmp
xchg
adc
xchg
inc
cmp
sub
or
mov
jge
imul
data16
mov
testb
ja
push
sbb
lds
jb
sub
mov
sti
iret
mov
mov
rclb
adcl
das
mov
popa
jo
test
mov
adc
iret
nop
sub
cmpb
shlb
pop
dec
fildl
movsl
mov
xor
and
mov
cmp
or
repz
xor
xlat
aad
sarl
fisubrl
jno
mov
sbb
add
sub
dec
test
lahf
movsb
jl
jecxz
mov
pop
sbb
cmpsl
or
in
in
cmp
cmp
xchg
xor
dec
sbb
sarb
push
ret
jl
inc
sarl
adc
enter
lret
xchg
push
adc
jl
ror
stos
std
call
add
cmp
ljmp
icebp
enter
push
mov
test
insb
mov
mov
sahf
sub
xchg
push
pusha
fldl2t
mov
pusha
notb
add
bound
inc
movsl
fs
jb
dec
mov
inc
and
xchg
test
mov
popa
test
push
adc
rcrl
xchg
mov
or
aaa
sbb
stos
mov
adc
mov
jge
jmp
and
pop
xchg
or
je
xchg
add
pop
sahf
sbbl
in
sub
mov
and
xchg
jo
add
add
pop
xchg
out
sbb
jle
cmp
sbb
js
mov
jne
push
test
ljmp
stos
jno
xor
aaa
xchg
outsl
sbb
adc
cmp
jne
pop
xor
jecxz
aas
mov
out
xchg
cwtl
inc
mov
adc
jne
jae
movsb
repnz
and
mov
dec
sub
sbb
int3
cmp
jae
mov
movsl
js
and
lret
mov
add
mov
pop
leave
in
mov
push
push
insl
addr16
or
push
psrlq
fdivs
xor
cli
push
push
addr16
push
mov
add
adc
neg
dec
movsb
int3
xchg
es
in
imul
mov
cmc
push
in
push
pop
adc
cld
adc
es
fwait
enter
out
mov
hlt
jmp
xor
lahf
dec
inc
cmpsl
mov
movsl
mov
mov
pop
push
outsb
xlat
decl
aad
sbb
das
hlt
ret
inc
in
jmp
push
mov
and
arpl
lcall
sti
jno
mov
pop
cli
repz
xor
scas
xor
sete
shl
jge
sub
shlb
addr16
cmp
sar
sahf
fucomip
int
add
or
aaa
cltd
mov
cmp
enter
adc
xor
pusha
clc
pop
cmp
das
stos
jbe
xchg
cmpsb
mov
push
pop
dec
push
dec
and
aad
shl
orb
fisubs
int
loopne
mov
ret
mov
jnp
mov
andb
mov
out
dec
jge
pop
rorb
add
sbb
adc
add
mov
pop
pop
mov
shlw
cmp
clc
insb
sete
int
and
xchg
aas
movsb
dec
div
loopne
mov
push
sarb
push
sbb
adc
andl
pusha
mov
jnp
add
andb
adc
das
scas
rcll
or
mov
and
adc
ret
cmc
adc
pop
ret
add
scas
pop
sahf
push
and
arpl
mov
nop
outsl
mov
add
lock
cmp
push
outsb
pop
arpl
inc
dec
test
xor
arpl
test
ficompl
or
out
iret
aad
mov
cmpsl
lods
add
data16
push
xlat
jge
or
add
cmpl
xchg
imul
and
sub
mov
and
adc
mov
dec
mov
or
icebp
enter
aad
sub
insl
cs
movsb
dec
sbb
add
fcmovne
fisttpl
push
iret
cli
jecxz
dec
in
call
inc
imull
jmp
adcb
dec
call
sbb
shl
repz
mov
adc
pop
lea
dec
push
iret
stos
jl
insl
mov
or
jecxz
testl
adc
dec
test
xlat
imul
and
nop
push
mulb
stos
lahf
out
mov
test
ljmp
mov
inc
cmp
mov
or
fsubrs
mov
xchg
minps
cmp
dec
inc
aaa
fcompl
adc
outsl
jnp
out
cmp
pop
sub
ror
mov
mov
out
lods
sub
adc
fistpl
xchg
push
repnz
or
pop
shll
adc
adc
jmp
cltd
imul
cmp
subb
outsb
jecxz
push
mov
dec
imul
dec
pusha
loope
xlat
or
outsl
add
nop
loopne
jmp
sarb
jl
fwait
cmp
hlt
shll
or
in
outsl
jns
xor
push
push
stos
xchg
inc
rcll
cmp
daa
add
xchg
filds
je
ret
cs
push
cmpsb
mov
adc
mov
pusha
adc
cmp
loop
test
jg
dec
pop
push
cli
pop
mov
in
cmc
call
ror
ret
mov
lods
cmp
xor
add
fisttpl
fdivp
pop
int3
mov
or
and
jno
mov
push
out
xor
cltd
sahf
mov
pop
jb
hlt
xor
or
mov
stos
wrmsr
cld
rcll
mov
sub
mov
pop
mov
into
mov
push
add
dec
dec
pop
mov
inc
ficoml
jle
repz
jg
or
outsl
pop
inc
xlat
aaa
mov
mov
mov
into
fcoml
nop
push
sbb
int
pop
movsb
lods
pop
and
xorl
ss
lock
xor
cmp
push
jns
repnz
lcall
adc
aad
inc
pop
clc
cmp
sbb
mov
mov
pop
mulb
rorb
out
mov
push
or
imul
and
cmp
push
repnz
orl
fdivl
lea
inc
add
adc
mov
fstl
out
mov
and
icebp
lret
xchg
shll
inc
sbb
mov
add
mov
push
cmp
cmp
ss
jno
andl
aam
pop
mov
mov
adc
jbe
or
mov
mov
xchg
cmpsl
fs
sti
pop
ror
je
insb
pop
mov
and
cmpsb
cld
arpl
xor
in
int3
add
fidivrl
nop
pop
sub
in
mov
push
mov
je
cs
call
lea
lock
sub
sub
movsb
or
loop
mov
mov
xchg
mov
sti
push
popa
mov
jne
lods
dec
mov
loope
clc
mov
lret
xlat
sub
aaa
hlt
mov
jno
nop
pop
lods
and
mov
ja
fnstenv
xor
pushw
mov
mov
push
inc
fdivrl
cmpsl
out
lahf
xchg
fldl
pop
aas
shrl
leave
lret
gs
pop
push
inc
inc
or
adc
mov
cli
adc
inc
lds
jbe
push
or
xor
mov
or
repz
adc
dec
in
sub
dec
pop
test
jg
mov
push
rorb
mov
lea
lods
pushf
in
pop
pop
cmc
repz
or
inc
mov
popa
xor
andb
mov
sbb
clc
orl
or
push
test
and
fmuls
mov
jo
addl
shrb
fldl
in
jne
add
push
add
cmpsb
jle
lahf
addl
ror
insl
push
jecxz
lret
out
aas
iret
lcall
push
out
out
add
mov
cs
sub
data16
das
lock
adc
sbb
movsb
test
dec
pop
je
loope
mov
sub
adc
pop
cli
lods
aad
pushf
and
xor
mov
lcall
mov
daa
mov
mov
cld
fisubrs
es
pop
loop
mov
ds
push
mov
lahf
sbb
add
orb
shrb
cmpsl
push
and
sbb
imul
cmpsb
xor
cmpsl
jo
inc
dec
pop
dec
arpl
arpl
gs
mov
add
pop
in
jno
jge
test
or
adc
std
pushf
add
out
pop
push
xchg
imul
ljmp
stos
test
mov
sub
and
div
add
mov
xchg
or
js
mov
cltd
and
in
insl
sub
cld
jcxz
add
sbb
bound
addr16
mov
addr16
ss
jno
push
adc
fld
jns
popf
inc
pop
mov
lcall
ljmp
mov
stc
xorps
dec
cli
loop
push
adc
inc
jl
mov
data16
cmp
iret
dec
rcrb
mov
add
cmpl
lret
inc
push
add
push
adc
loop
int3
mov
xchg
pop
fwait
popa
xor
add
ja
insb
mov
push
ffree
or
sbb
adcl
add
dec
jno
cmp
inc
mov
dec
std
in
daa
imul
nop
push
or
cmp
sbb
xor
inc
adc
jle
mov
inc
xchg
sub
enter
mov
cmp
andb
or
sub
or
test
mov
fbld
pop
cmpsb
out
pop
push
out
in
or
or
and
arpl
jo
and
mov
scas
xchg
fdivr
ljmp
jmp
mov
cwtl
inc
iret
mov
jne
or
in
inc
jmp
mov
mulb
stos
ret
adc
rcrl
lea
pop
loop
aas
adc
sbb
push
inc
mov
jecxz
popa
xor
cmp
add
sbb
aas
xchg
push
ss
flds
pop
cmovno
inc
pusha
test
cmp
push
pop
mov
jmp
mov
xor
data16
lcall
inc
daa
icebp
jno
or
xchg
inc
movsl
ret
adc
pop
inc
imul
xchg
dec
sbb
je
add
pusha
mov
mov
dec
dec
mov
or
jg
xor
test
in
or
je,pt
movsl
movsb
adc
dec
scas
pop
pop
cwtl
fprem
mov
rclb
dec
push
dec
jecxz
adc
popl
sub
lock
or
mov
sbb
iret
stos
push
mov
push
push
xchg
ss
mov
movsb
mov
mov
xor
inc
dec
rcr
enter
cs
test
mov
mov
enter
xchg
push
push
mov
xchg
shlb
cmp
cmpsb
sub
sbb
inc
mov
pushf
cmpl
xchg
xchg
xchg
hlt
or
jp
push
repnz
mov
mov
test
or
pop
lcall
mov
inc
insb
data16
pop
adc
data16
sbb
lock
scas
jno
addr16
fadd
test
lods
mov
sub
arpl
std
lcall
movl
jbe
mov
adc
mov
cli
dec
dec
push
repnz
sti
mov
cmp
cmp
jmp
in
std
nop
mov
push
arpl
nop
ljmp
sub
lods
xchg
or
push
lcall
sub
lret
and
cwtl
pop
adc
inc
aad
and
dec
mov
rclb
fcmovnb
push
xchg
outsl
leave
outsl
push
cmpsb
mov
xor
lea
pop
fnsave
cmp
outsb
addl
sahf
insl
lcall
inc
lret
mov
in
loop
stc
stos
xor
arpl
aad
sbb
add
movsb
movsl
call
int3
out
fists
jmp
flds
lcall
sub
adc
inc
cli
movsl
pop
es
add
adc
sub
jb
daa
cmpsb
sti
fwait
xchg
dec
cmp
xchg
imul
loopne
jb
cmp
sub
or
cmp
push
cmp
fiadds
test
cmp
xor
fwait
push
out
pop
icebp
and
pop
rorl
mov
stos
and
jns
add
jle
data16
fsubs
cmp
enter
or
dec
out
dec
fldl
dec
mov
xor
ret
pop
jp
gs
ss
dec
pop
out
sti
inc
inc
clc
jb
mov
out
adc
pop
add
mov
mov
cltd
inc
test
pop
popf
test
std
int
movlps
cmp
pushf
clc
test
pushf
psrad
mull
pop
mov
repnz
pop
dec
cmp
pop
rorb
hlt
cli
push
fisttpll
jmp
and
pop
push
std
cli
fstpl
jb
pop
out
jbe
movsb
mov
ss
pop
aas
cwtl
and
addr16
cld
xchg
je
sbb
fcoml
lcall
lods
lds
insb
and
loopne
and
sub
cmpl
cmp
repnz
and
xchg
mov
sbb
or
mov
pusha
push
lock
cmc
inc
cld
and
fwait
int3
popf
inc
outsl
sbbb
maxps
dec
mov
or
sbb
mov
test
ffree
dec
out
or
sbb
stos
imul
pop
test
lock
ret
inc
fs
pushf
lea
stc
cmp
mov
aaa
add
ret
sub
mov
push
xchg
bound
imul
ljmp
xchg
or
jne
push
dec
sbbb
out
push
sarb
pop
lahf
mov
out
and
xchg
xchg
dec
pop
sub
sbb
lods
cmp
jge
pop
dec
jbe
daa
lods
imul
and
js
jle
int3
inc
hlt
xchg
imul
inc
push
scas
aaa
fadd
adc
pop
mov
adcb
lea
add
mov
jb
aam
pop
mov
jns
mov
xchg
xlat
leave
mov
mov
sbb
adc
jecxz
lcall
call
idivl
aam
ret
int
outsb
lcall
fcoml
rcll
out
mov
or
and
movsl
mov
mov
bound
inc
mov
and
lcall
cmp
xor
fs
xchg
jg
add
or
xor
int3
mov
loopne
add
push
xor
addr16
sti
mov
repz
cmp
loopne
mov
pusha
dec
jno
mov
pushf
inc
inc
mov
in
cmp
jcxz
xchg
je
rol
or
mov
sub
jge
push
test
lods
pop
jge
mov
xchg
cmc
pusha
int3
push
ret
loope
cwtl
outsl
or
push
jp
addl
iret
sbb
or
mov
push
ss
or
lret
jae
int
push
dec
jns
scas
sub
filds
xor
cmp
xchg
dec
adc
mov
lds
or
cmp
push
push
or
andl
fsubr
ret
inc
push
dec
cmc
sbb
ljmp
cmp
pop
lret
lcall
cwtl
dec
cs
gs
adc
lds
cmp
adc
mov
into
mov
jo
fwait
jne
shlb
mov
int
mov
cmp
or
xchg
inc
jmp
and
test
xor
nop
lock
loopne
adc
enter
div
and
or
loope
es
das
in
test
push
jnp
cmp
xchg
lret
cmp
pop
gs
cmc
cwtl
dec
jns
inc
xchg
test
out
test
inc
adc
mov
jnp
push
mov
mov
cltd
inc
cmc
cltd
sub
push
pop
xlat
ret
into
int
jg
xchg
test
cld
mov
in
or
mov
mov
xor
rcll
mov
inc
jbe
add
das
subl
cmpsl
mov
mov
lock
outsb
jo
jge
je
mov
icebp
js
inc
adc
shrb
mov
call
xlat
mov
pushf
cs
test
incb
fistl
dec
and
nop
cltd
xchg
xor
add
mov
pop
rcr
inc
jb
adc
sti
and
jg
pop
rcrb
fdiv
xchg
mov
stos
inc
mov
adc
inc
sti
mov
stc
out
int3
and
jp
les
std
mov
xchg
or
cmc
xor
and
sbb
mov
icebp
dec
xor
jp
nop
divl
in
fstpt
sub
xorb
nop
lcall
in
push
adc
jno
add
stos
cmp
push
daa
inc
add
test
dec
lret
xor
lock
inc
xchg
mov
or
clc
push
out
inc
fisubrl
stc
mov
rcll
xchg
pop
popf
pshufw
aam
mov
jmp
push
dec
adcl
add
out
pop
adc
arpl
adc
int3
mov
adc
jne
mov
shlb
lcall
std
shll
xchg
pop
pop
stos
mov
cs
cmp
cmpl
bound
mov
dec
pop
mov
mov
sbb
clc
subl
adc
pop
xchg
ret
mov
es
mov
jno
loope
cmp
mov
das
sbb
inc
cli
test
cmp
adc
test
push
mov
ljmp
xchg
mov
xchg
pop
ljmp
adc
inc
mov
imul
cld
roll
in
jae,pt
push
jbe
into
mov
add
fmul
xor
sbb
inc
sub
pop
push
adc
push
and
cmp
fldt
pushf
pop
mov
aas
inc
mov
xlat
imul
and
dec
pop
xchg
mov
xchg
push
popa
fstl
cwtl
add
inc
out
dec
packssdw
dec
and
xor
mov
mov
cmp
sbbb
addr16
jecxz
decb
hlt
cmp
dec
in
rolb
lea
or
psubb
pop
mov
lods
fisttpll
stc
aaa
jl
cld
sbb
jo
lds
mov
fldenv
add
or
inc
inc
shrb
scas
and
push
pusha
inc
push
testl
clc
dec
repnz
jge
push
jg
mov
xchg
fmull
adc
daa
push
in
and
or
jp
xchg
ja
sbb
sub
add
int3
or
sbb
sti
enter
psubusw
cs
cmpsl
mov
mov
push
into
leave
ds
add
mov
je
fcomi
adc
add
aaa
push
repnz
jnp
or
scas
push
cs
test
lret
out
das
fucomp
pop
xor
jge
leave
int3
in
daa
js
cmp
ret
jns
mov
aas
xchg
xchg
push
push
fisttpll
in
dec
jmp
stos
push
cmp
add
mov
cli
out
iret
mov
mov
push
out
sbb
in
sub
cmpsb
sub
movsl
sbb
mov
cmpsl
sarb
stc
mov
cmp
loope
pusha
pop
subl
nop
lods
cmp
enter
and
add
push
mov
in
mov
sub
sbb
adc
aaa
adc
dec
mov
cld
xchg
ds
test
out
xchg
inc
sbb
ret
mov
jne
leave
out
ficoms
cmpsl
ficoml
out
aas
cmpsb
pop
fsubrl
mov
cmp
xor
andb
dec
sbb
jmp
clc
in
xor
sbb
sbb
and
xor
iret
jmp
fs
pop
repz
xor
es
add
mov
cmp
pop
stos
cmpsl
or
sub
fnsave
cmp
adc
es
xor
adc
sbb
mov
test
and
cmp
xchg
leave
fcoms
inc
ja
mov
out
inc
push
jno
test
pop
inc
xor
cmp
lods
xor
cmpsb
sbb
or
mov
das
or
mov
xchg
add
fidivs
or
sbb
test
ds
or
push
in
sbb
jp
fidivrl
or
jno
shll
and
in
jmp
push
fmulp
inc
loop
mov
or
ljmp
xchg
scas
sbb
sbb
jle
jg
fistpll
inc
xor
inc
jmp
fstpt
pop
xor
and
inc
push
push
not
mov
addl
push
popl
xor
sub
xor
ror
das
mov
mov
adc
pop
lret
inc
test
sub
add
aas
stos
add
adc
stc
jae
mov
out
imul
imul
adc
adc
ficomps
icebp
cmc
aad
fwait
jb
xchg
out
jne
mov
xor
in
ljmp
push
not
xor
test
andl
cld
test
add
leave
xchg
shll
cmpsl
xchg
xchg
ds
mov
movb
in
adc
jns
loopne
ljmp
ret
movsb
movsb
mov
aas
add
rcrl
jnp
jno
lret
cltd
or
adc
inc
xor
rorb
jo
imulb
push
ja
cmp
dec
movb
xlat
jbe
movsb
mov
fs
xor
or
insb
test
mov
out
pusha
clc
jg
popf
or
mov
adc
mov
push
adc
call
xchg
pop
lret
mov
rolb
dec
outsl
xor
loop
pop
and
imul
in
or
jg
int
pop
ja
pop
shl
std
pop
or
loopne
adc
insb
cmp
das
inc
aad
mov
es
movsl
bound
sbb
mov
shrl
mov
dec
dec
xor
xchg
and
cwtl
sbb
mov
jae
sbb
jl
aad
cmp
js
cli
lcall
test
jno
dec
adc
and
mov
mov
inc
inc
pusha
push
mov
mov
das
out
scas
fcmove
add
lods
iret
sbb
jbe
jp
flds
xchg
xchg
and
or
inc
sbb
nop
sub
scas
movsl
pop
std
out
int
js
cs
cmpsb
jns
or
popf
scas
dec
adc
jg
popf
clc
xchg
nop
or
loopne
lods
xchg
cld
aam
xor
imul
cmp
jl
or
push
jnp
dec
xorb
xor
sar
lds
add
andl
adc
fisttps
xchg
mov
xchg
cmp
vcvtsi2ssl
mov
mov
roll
lods
or
pop
dec
cs
fcomp
inc
sub
repnz
push
shll
add
inc
mov
cmp
aad
dec
into
inc
jb
scas
mov
orl
or
nop
pop
and
push
or
scas
push
stc
inc
jl
or
mov
cmc
movsb
inc
int
pop
stos
insl
test
ret
cld
mov
in
pushf
or
sbb
xchg
sbb
mov
sti
int3
pop
js
inc
shll
or
mov
mov
mov
and
arpl
test
nop
cmp
jp
call
movb
cmp
jns
stc
ret
lods
adc
test
test
or
push
out
das
sbb
cmp
pop
clc
test
push
repz
popa
adc
mov
mov
inc
imul
mov
lock
push
sbb
push
pusha
fcompl
mov
mov
mov
mov
xchg
outsl
cmpsl
fildll
inc
aam
stc
mov
or
fucomp
jmp
mov
inc
dec
rcr
repnz
jle
mov
int3
pop
push
fsubrl
repnz
ret
imul
je
push
rcr
mov
cmp
mov
cmp
pop
rcrb
iret
ret
icebp
data16
jnp
mov
mov
pop
jecxz
sub
addr16
pop
sti
xorl
cwtl
movsl
test
push
xor
push
aad
adc
mov
push
test
jnp
loopne
sub
jmp
inc
gs
out
outsl
inc
xor
ret
jnp
dec
add
cwtl
sub
sub
fwait
xor
repnz
mov
fimull
add
xor
mov
xchg
loop
xchg
call
jge
test
mov
aas
push
call
sbb
jnp
pop
cmp
mov
sti
lcall
je
das
jno
pop
dec
gs
mov
push
mov
mov
arpl
roll
ss
inc
aam
jne
lret
imulb
xor
in
fiaddl
sbb
ror
push
or
mov
hlt
testl
mov
lret
push
ret
jg
mov
cltd
adc
mov
icebp
and
dec
sub
mov
cld
daa
pop
add
jno
int
outsb
dec
adc
cmpsb
stc
mov
mov
sbb
jb
dec
in
mov
stos
mov
add
mov
andl
cmp
in
out
or
xor
scas
fs
hlt
pop
cld
test
sbb
inc
pusha
cwtl
addr16
cld
fldt
push
movl
stos
inc
sbb
dec
xchg
popa
cmpsl
jo
mov
lret
pop
das
pushl
mov
lea
pop
jns
movsb
xchg
push
test
jg
xlat
push
mov
popf
ret
lret
loop
cltd
test
jno
scas
push
repz
repz
add
mov
out
mov
adc
test
xchg
cwtl
leave
sbb
imul
lret
imul
cmp
nop
inc
ficomps
mov
fdivrl
movsb
in
incb
push
inc
test
or
mov
or
xchg
into
fsub
mov
pushf
cmpsb
fimuls
flds
fiaddl
sub
cmpsl
lret
xorb
nop
daa
or
mov
lcall
xor
roll
ror
ficoms
test
repz
leave
lock
jbe
cmp
push
and
inc
xchg
mov
mov
lret
dec
or
popa
and
or
adcb
xchg
push
in
mov
dec
rolb
sbb
mov
lret
dec
adc
push
shlb
mov
fs
cmp
xor
mov
clc
pop
in
stos
mov
stc
cmp
jp
mov
pushf
out
pop
push
jle
pop
push
mov
mov
inc
jecxz
repnz
scas
scas
fcompl
mov
in
xchg
pop
xchg
imul
xchg
push
mov
decl
aaa
dec
ret
jmp
ds
fs
lock
das
in
ja
pop
popl
rclb
push
sub
inc
sub
push
cld
inc
in
pop
test
xor
cmp
sub
scas
scas
lahf
mov
push
scas
outsb
xor
cli
insl
xchg
in
dec
les
mov
imul
fmul
imul
mov
inc
sbb
push
xor
testb
cmp
add
ret
push
aaa
sub
aad
push
in
jecxz
addr16
fistps
xor
add
insl
pop
cwtl
fcoms
js
add
or
push
aaa
inc
pop
jmp
xor
mov
pushf
jno
mov
lock
mov
ret
shlb
enter
fwait
js
or
sub
mov
popf
test
dec
aad
popa
add
call
jne
lret
xor
sarl
and
ja
sub
repnz
les
inc
mov
insl
je
mov
in
rcr
adc
add
push
jae
push
mov
push
xchg
cmp
sub
pop
rorb
push
icebp
cmp
loop
cmp
ljmp
dec
or
aam
and
sub
and
sub
mov
xor
call
not
xchg
int3
ficompl
das
mov
dec
add
mov
or
std
mov
jne
xor
test
mov
cs
sub
ret
fnstenv
rcll
jbe
xchg
mov
mull
dec
das
mov
sbb
and
pop
push
mov
cmp
fldcw
popf
mov
ljmp
and
in
pop
dec
mov
movsb
movsb
pop
data16
idivl
nop
mov
mov
lea
dec
pusha
std
adc
into
dec
cli
jge
and
rcll
sbb
jg
jbe
shl
xchg
push
movsb
iret
or
add
sbb
pop
push
mov
add
jmp
fs
insl
xchg
les
sbb
data16
mov
jno
lret
cmp
ret
hlt
add
fdivl
jecxz
enter
add
cmpb
push
jnp
bound
or
ud1
mov
cmp
jb
jmp
movsl
or
js
arpl
outsb
rolb
push
jno
jnp
mov
ljmp
and
icebp
sbb
ror
js
add
inc
add
inc
push
cmpsl
push
inc
rcrl
cmp
xchg
cmp
pusha
aas
push
scas
pop
or
sahf
jo
les
inc
dec
and
xchg
jmp
pop
mov
or
je
andb
sti
and
clc
sbb
mov
aaa
sub
daa
mov
outsb
push
sahf
mov
add
ret
out
jno
adc
jae
outsl
dec
add
pushf
cmc
mov
shll
add
sahf
adc
iret
call
jmp
dec
out
sub
mov
movsl
test
mull
mov
xchg
cwtl
push
xchg
cmp
int3
stos
dec
xchg
mov
je
js
pop
push
mov
in
pop
mov
imul
decl
pop
jmp
xorb
inc
add
aaa
or
inc
push
lock
push
imul
ss
sarw
mov
adc
sar
xor
rolb
shrb
pop
and
addl
sbb
out
adc
inc
pop
ja
pop
data16
data16
cmp
sbb
dec
out
sbb
mov
sub
int3
lcall
push
adc
inc
je
mov
mov
push
pop
pop
push
pusha
xor
test
mov
mov
xor
pop
cmp
jmp
push
cwtl
pop
and
test
hlt
sub
testb
scas
push
adc
outsb
mov
sbb
jg
lcall
andb
xor
xor
xchg
inc
jl
xor
sbb
jbe
inc
test
sbb
cmpb
adc
adc
push
inc
js
jecxz
imul
fs
movsl
mov
fxch
in
pushf
negb
rolb
out
dec
out
sub
int
stc
mov
out
push
xor
inc
pop
lock
popa
cmp
jbe
sbb
fdivl
cmc
adc
mov
jne
and
mov
das
dec
xchg
cmpsl
pop
xor
cmpsb
cmpl
xchg
mov
sbb
mov
xor
adc
or
pop
xchg
out
fsubr
into
incb
cwtl
in
stc
daa
xor
push
shll
fcmovnb
enter
divb
xor
test
mov
and
fs
mov
les
sub
cmc
xchg
pushl
enter
addr16
lea
and
jle
mov
pop
xchg
shrb
jp
adc
push
stc
loopne
xlat
cli
mov
or
pusha
push
add
test
pushw
fldenv
sbb
fimuls
jb
push
js
jmp
in
sub
sbb
inc
xor
ret
mov
out
sbb
adc
scas
cmp
or
iret
or
outsl
or
push
cli
mov
pop
push
loope
pop
mov
jg
inc
dec
lahf
lds
insl
mov
cs
mov
xor
mov
cmpsb
aad
andb
mov
nop
adc
xchg
xchg
push
sub
mov
inc
mov
scas
mov
mov
dec
sahf
pop
sti
gs
fcmove
out
shlb
popf
pop
or
xorb
fcmovnu
mov
fidivrs
ss
sbb
inc
mov
lret
aas
mov
out
sbb
add
or
jo
and
in
lret
insb
xor
push
or
js,pn
in
jl
loop
mov
mov
xor
es
push
dec
je
xchg
rcrl
xchg
mull
or
pop
jno
or
out
stos
mov
fwait
jae
sbb
stos
cmpb
xor
lea
lock
push
pop
push
das
sarl
hlt
mov
mov
imul
fldcw
jae
dec
mov
jg
lahf
cmc
mov
mov
cmp
jp
pop
out
out
out
pop
push
js
call
jp
loop
test
xchg
loop
lods
push
inc
ds
cli
shll
mov
xchg
jg
adc
cmpb
xor
in
incl
in
xchg
jb
jg
movsl
dec
aam
adc
imulb
insb
fnstenv
sbb
gs
ja
lock
sub
dec
xchg
in
or
fcoml
xchg
dec
push
test
mov
sub
and
sbb
mov
repnz
adc
mov
mov
mov
add
push
xor
and
incl
dec
xlat
push
sti
test
lcall
fbld
mov
pushf
inc
sbb
mov
push
mov
add
cmc
test
sbb
inc
pushf
das
out
out
mov
bnd
mov
scas
clc
mov
sahf
cli
jne
push
adc
popa
push
fwait
and
push
xchg
subb
test
hlt
stos
sub
jbe
ja
out
push
sbb
cmp
lcall
jae
in
aas
xor
sbb
loopne
pop
test
out
push
fildll
dec
jge
pushf
movsb
and
test
cltd
lret
mov
dec
pop
pusha
das
add
sub
mov
fxtract
adc
hlt
xor
add
sbb
ret
and
mul
push
adc
dec
dec
mov
adc
js
jne
inc
gs
sbb
movsl
and
ficompl
test
das
lock
sahf
iret
nop
dec
push
dec
push
cltd
adc
out
shll
pop
ss
mov
dec
leave
mov
dec
filds
cmpsb
add
into
dec
mov
pushf
ds
inc
mov
jmp
push
cmpsb
adc
mov
cmp
jmp
fwait
insl
bound
cmp
add
mov
jl
push
push
insl
add
pushf
add
pop
jne
popa
cmp
pop
mov
sti
test
add
data16
fbstp
in
je
in
sti
dec
xor
ret
push
push
inc
leave
adc
rol
iret
add
insb
int3
je
inc
pop
or
sti
pop
shlb
mov
jl
jecxz
mov
cwtl
sahf
int3
movsb
sub
lods
shlb
sub
scas
add
adcl
add
pop
dec
imul
imul
and
push
mov
mov
cmc
jbe
mov
pop
mov
xchg
iret
js
jnp,pn
das
jge
adc
fwait
sbb
loope
ds
outsb
xor
push
shll
fcoml
outsb
movsb
xchg
sub
aad
xor
out
das
outsb
mov
mov
jb
insl
ds
cltd
sub
dec
std
sub
jns
int3
pop
adc
jecxz
mov
loope
jecxz
in
or
scas
add
jl
mov
mov
ss
out
iret
or
xchg
lods
add
fdivrs
inc
iret
mov
inc
cmp
dec
lods
ret
das
xchg
inc
dec
imul
jnp
lods
jnp
bound
into
jl
xor
dec
cmp
mov
mov
xor
xor
pop
idiv
ficomps
lret
jne
iret
sahf
mov
test
sub
or
mov
pop
sbb
adc
xchg
inc
mov
std
in
pop
int
cmp
dec
in
mov
sbb
sbb
add
arpl
dec
test
inc
mov
and
faddl
outsb
sub
cli
ret
or
jbe
mov
fistpl
cmp
icebp
xchg
mov
inc
lods
adc
outsl
sbb
aas
sub
push
mov
in
push
cmp
hlt
push
loope
push
dec
lcall
rcll
or
pop
mov
mov
jae
mov
and
iret
aam
push
mov
xor
sub
ja
pushf
cmpsb
xor
hlt
in
stc
cwtl
or
lods
dec
sbb
ret
add
jp
xchg
add
mov
pusha
push
inc
xor
insb
out
mov
adc
test
popf
push
mov
stos
outsl
jle
add
xor
cmp
ss
xchg
fistpl
bound
xlat
inc
rolb
xor
cmp
stos
inc
iret
idivl
and
pop
sahf
in
dec
pushl
cmp
or
mov
je
and
inc
mov
fnsave
jne
mov
add
fs
mov
rol
sub
xor
push
push
and
movsb
imul
cmp
sahf
lahf
sub
fdivr
push
and
aad
iret
pop
sahf
xchg
aaa
fnstenv
cmc
ljmp
leave
les
jns
repz
push
mov
sbb
add
mov
jmp
fildll
aam
push
mov
leave
and
add
pop
sbb
fsubrl
test
mov
sbb
push
out
addb
je
push
popf
mov
mov
lcall
or
push
or
cmp
xchg
push
mov
into
xor
mov
mov
popa
inc
cmp
mov
int
xlat
shlb
add
sub
sahf
sti
mov
js
in
push
inc
push
cmpsl
mov
sbb
dec
cli
dec
clc
and
jb
into
jle
jge
or
fcompl
cld
xor
loopne
lcall
mov
cmp
add
outsb
scas
add
pop
sub
and
aam
push
loopne
inc
jmp
jmp
pop
shr
call
lcall
and
cmp
std
out
cmpsb
leave
jnp
sti
ds
adc
adc
and
inc
xor
das
mov
pop
lds
pop
testb
add
sahf
cmpsl
jmp
inc
sub
shll
mov
iret
cmp
lcall
add
jb
mov
mov
aad
lods
sub
sub
mov
inc
sbb
aas
push
inc
imul
jmp
out
mov
or
mov
mov
inc
pop
or
push
orb
mov
prefetchw
outsb
stos
cmc
rcrb
cmp
mov
mov
xchg
das
daa
add
mov
rol
inc
inc
mov
or
sbb
call
and
int3
es
jmp
push
ret
and
test
sbb
jbe
les
xlat
push
push
loop
sub
dec
adc
out
iret
mov
rep
add
movsl
mov
pop
ficoml
orb
mov
imul
jge
andb
fnstcw
js
rorb
scas
or
out
xor
cmp
lock
ret
sbb
daa
cmpsl
mov
cmpsb
call
xorl
repz
or
mov
push
mov
bound
scas
inc
xor
add
lret
pop
arpl
push
insb
in
cmp
loopne
repz
or
stos
push
mov
sbbl
ret
imul
das
xor
fsubs
push
cmpsb
inc
popa
lahf
adc
scas
sub
jbe
inc
mov
mov
mov
push
stos
ja
repz
mov
pop
dec
nop
sub
push
sarb
dec
fwait
mov
pop
aam
mov
std
sub
cmp
sbb
loop
cmpsl
push
push
fxch
cli
sub
aad
out
inc
mov
jo
jg
xor
scas
gs
in
cltd
shlb
mov
mov
dec
lretw
cmp
cmp
orl
xor
jle
cmp
xor
xchg
ljmp
adc
or
jne
xchg
jg
sahf
out
rolb
or
jge
or
pop
mov
stos
pop
jg
and
into
or
aas
mov
popa
cmp
sti
sbbl
add
stos
test
repnz
stos
test
icebp
xor
xor
loope
dec
mov
fmulp
enter
orb
add
sbb
inc
push
dec
xchg
adc
mov
jge
push
rcrl
add
dec
aam
test
test
or
mov
jmp
mov
shrb
popa
inc
add
lahf
ja
push
xor
adc
or
mov
repz
clc
ret
int
push
inc
mov
outsb
test
pushf
xor
push
or
or
jne
inc
jno
sbb
push
fwait
push
xor
hlt
xchg
js
addr16
xor
jnp
pusha
pop
xorb
pushf
add
in
pop
cmp
pop
add
push
xor
fcmovu
mov
paddd
inc
lock
movsl
push
mov
fdivr
mov
fistpl
and
daa
mov
lea
lret
cmpsb
ja
inc
in
sbb
jg
xor
add
xorl
cmpsl
or
jnp
aad
sbb
mov
mov
fsubrs
mov
stos
leave
pop
call
ret
cwtl
mov
hlt
jae
mov
mulb
push
rcr
jmp
push
aas
push
push
xlat
xlat
aas
out
jle
push
jo
out
jp
outsb
cwtl
addr16
jo
cmp
sbb
adc
sahf
dec
sbb
push
call
ds
xchg
loopne
inc
adc
jns
mov
push
sub
in
jecxz
mov
lock
shll
push
jns
pusha
jecxz
shlb
aad
ljmp
inc
mov
jae
mov
bnd
add
cmp
pop
lret
lea
xchg
aas
out
add
lock
je
aas
stos
int
mov
ja
or
nop
jg
repnz
les
mov
xor
jl
lds
pop
xor
sarb
jl
je
inc
push
cmpsl
xchg
das
mov
std
dec
test
dec
push
sbb
test
xor
push
icebp
dec
fdivrs
popf
jo
jecxz
in
xor
mov
int3
popa
mov
push
xchg
pop
cmp
cmp
in
mov
jp
lahf
xchg
stos
xor
cmpsl
loope
fldcw
cmpsl
mov
mov
imul
xor
inc
je
sbb
xchg
xor
or
in
lods
and
mov
cmpsb
mov
pop
aam
and
shll
push
jns
les
inc
mov
add
sub
lahf
outsl
xchg
dec
mov
mov
stc
aad
xchg
xor
ficomps
stos
adc
mov
pop
mov
in
insb
jmp
mov
or
test
aad
insl
mov
dec
pop
sbb
jns
mov
fwait
inc
dec
orl
fcmovnu
xor
scas
ss
pop
cld
fdivrs
sbb
dec
mov
dec
mov
sti
mov
shrb
insl
mov
or
jmp
mov
pop
push
mov
lahf
jns
adc
mov
fmul
aad
sub
mov
lea
and
jbe
fsubrs
cli
je
or
or
push
inc
inc
sbb
dec
and
aad
cmpsl
xchg
lcall
aaa
insl
daa
jnp
test
fnsave
pop
xchg
mov
dec
arpl
dec
jno
into
dec
fildll
ret
call
fucomip
fdivr
cmp
or
lahf
repz
cli
rolb
and
add
addl
pop
or
pop
jb
mov
jg
mov
cli
icebp
xor
aam
mov
aad
dec
pop
push
jns
pusha
stos
or
test
cmp
movsb
inc
lods
sub
and
xor
and
jnp
lds
fsubl
adc
ret
subl
int
cmc
dec
and
daa
mov
pop
mov
pushf
fsts
outsl
dec
outsb
fucom
sub
pop
int3
lea
orb
lods
sbb
insb
pop
add
jge
aaa
xor
fsubr
cmp
and
mov
jo
rcl
stc
daa
jmp
mov
mov
push
xchg
pop
imul
in
mov
sub
mov
imulb
arpl
aas
xor
jle
xchg
into
sbb
or
cs
cwtl
seto
cmpsb
or
xor
popf
movsb
inc
push
mov
jae
aam
ret
or
nop
cld
cld
std
mov
test
mov
pushaw
aaa
ret
inc
sub
mov
addb
int
cmp
xor
rorb
cwtl
mov
or
loope
jns
pop
lret
fiaddl
adc
idivl
sbb
cmp
pop
ret
iret
loope
xor
icebp
jmp
jae
xchg
push
adc
sbb
push
cmp
fxam
nop
dec
out
adc
outsl
inc
repnz
pop
inc
mov
out
scas
jae
ljmp
test
inc
loopne
xor
jbe
push
jg
es
dec
dec
jmp
inc
mov
shr
pushf
and
pop
xchg
addr16
pop
in
add
call
popf
fisubrs
cs
daa
hlt
cmp
daa
dec
mov
mov
cmp
cli
adc
and
outsb
mov
sub
sub
dec
jns
jle
mov
sub
popf
pop
xor
scas
decl
sbb
cwtl
push
sbb
xor
cs
push
add
mov
pop
jecxz
pop
aam
push
pop
add
or
mov
test
or
faddl
xor
test
lret
adc
je
sbb
fcoms
dec
xor
ficompl
lcall
adc
and
cmpsl
cmp
and
aaa
or
fstl
adc
nop
lods
pop
icebp
lds
jns
fsubrp
rcrl
pop
aad
or
xor
pushf
mov
daa
les
push
lods
dec
xchg
shll
arpl
sbb
push
stos
test
mov
pop
jbe
rcrl
int
jl
and
pop
ss
shufps
jge
gs
jns
cli
fldt
push
dec
mov
push
cwtl
fwait
cmp
xchg
out
fucomi
cmp
cmc
iret
cmp
rorl
std
loope
sub
lea
sub
jb
jmp
inc
roll
or
sahf
ljmp
pop
fldcw
out
or
or
sarl
xor
int3
lods
xchg
cmp
js
les
test
cmpsl
xchg
les
in
out
les
mov
push
xchg
mov
xor
shl
fnsave
scas
addr16
mul
test
jle
ja
adc
stos
adc
pop
or
adc
loop
les
rolb
mov
lret
push
mov
lret
jl
jmp
lock
inc
and
ljmp
and
push
sbb
xor
int3
add
and
ret
xchg
xchg
insb
repnz
push
or
mov
sbb
push
sub
das
in
lea
mov
inc
sbb
ljmp
sbb
pop
rclb
leave
mov
mov
in
test
push
mov
idivb
adc
andl
mov
xlat
in
adc
sub
std
lock
dec
ss
enter
cld
push
sbbb
dec
arpl
aaa
add
mov
mov
adc
add
dec
adc
sbb
cmp
jo
jle
jo
sub
outsl
imul
loopne
adc
addr16
cwtl
ja
out
xor
sbb
inc
mov
jg
add
and
push
fcoms
lret
in
push
lods
adc
adc
cmpl
xlat
sbb
mov
add
ret
xchg
cld
ljmp
mov
inc
out
inc
test
sub
jl
mov
sbb
test
xchg
popa
mov
arpl
or
mov
pop
xchg
call
inc
js
enter
push
mov
add
aam
imul
or
sbb
fwait
jecxz
les
outsl
out
popf
mov
stos
xchg
iret
push
andb
mov
push
or
xor
and
dec
loopne
jmp
and
and
fwait
mul
mov
out
pop
adcl
mov
or
push
int
ja
mov
mov
mov
sbbb
jnp
add
push
pop
ss
adc
fadd
cmp
mov
adc
in
in
aam
inc
sbb
jecxz
dec
ss
imul
repnz
pop
incl
pop
lea
stos
movsl
inc
std
inc
icebp
xor
xchg
scas
xchg
imul
test
cmp
add
out
cmpsb
test
mov
adc
cld
in
movsb
or
or
lock
push
cmp
loopne
or
sahf
and
mov
loope
xchg
sti
sbb
mov
shrl
push
sbb
jecxz
push
dec
mov
dec
pop
and
ljmp
add
fldl
aam
xorl
add
lds
mov
push
xchg
mov
push
inc
inc
les
test
sbb
inc
stos
ret
je
pop
imul
mov
cli
push
shll
push
pop
dec
or
hlt
arpl
cmpsb
pop
mov
sbb
out
push
in
adc
int
and
in
xchg
lods
mov
cwtl
mov
sub
xorl
shrb
jne
aas
test
in
into
push
stc
sarl
push
sbb
notb
popf
xor
aad
xorb
pop
add
loope
mov
rorb
nop
cmp
das
dec
sarl
lahf
jae
add
imul
jae
jae
es
jmp
sub
das
ja
mov
pop
dec
js
dec
pop
orl
ss
xlat
xchg
jns
fwait
cmc
sbb
xchg
dec
jg
adc
insl
xlat
insl
inc
xchg
cmp
xchg
xor
fdivr
sub
mov
xchg
xchg
mov
mov
jbe
mov
frstpm(287
push
adc
and
mov
push
adc
cld
pop
mov
lds
xor
xor
in
movsl
sub
int3
and
fs
out
pop
xchg
out
push
movsb
dec
fidivrs
loope
xor
pop
fwait
mov
pop
fidivs
stos
adc
sub
cltd
pop
adc
mov
push
cmp
adc
jmp
fnstsw
cmp
scas
lahf
mov
testl
nop
out
sbb
inc
fldcw
loop
lret
test
fiaddl
xor
fwait
xor
out
mov
dec
xchg
in
mov
inc
enter
pop
fsubrs
sbb
mov
adc
jnp
test
and
pusha
subb
imull
jecxz
add
jnp
ds
dec
xchg
aas
lcall
pop
mov
pusha
sub
dec
push
xor
push
mov
stc
lret
je
push
aad
std
in
out
aam
pop
leave
mov
mov
mov
xor
int3
inc
and
aas
sarb
mov
insb
and
cld
push
sub
addr16
fmull
and
jmp
jae
or
inc
and
neg
xor
inc
ja
jl
adc
not
aas
xchg
xor
xorl
incl
icebp
subb
scas
mov
fcmovne
pop
and
xor
cmc
pop
pop
sbb
xor
xor
inc
and
cmp
xor
test
jnp
ss
sub
xchg
ss
lret
ss
xchg
cmpb
call
jns
cmc
fisubs
push
ds
add
test
dec
or
in
push
adc
xchg
enter
push
mov
nop
iret
jbe
cmp
psubd
dec
into
jne
ja
sub
or
cld
fmul
sbb
testb
dec
jb
push
ret
mov
nop
enter
add
mov
add
cltd
aam
out
xchg
mov
cmp
push
xchg
mov
sbb
xor
fisubs
mov
and
outsb
or
xchg
xor
cmp
inc
jns
mov
clc
adc
pop
sub
pop
and
fucomp
mov
outsl
cmpsl
je
pushl
js
xchg
push
negl
insb
add
ficompl
xchg
or
and
clc
dec
adc
adc
rolb
pop
loope
add
mov
shrb
pop
out
adc
loopne
lods
mov
or
mov
flds
ja
bound
idivl
add
in
popf
or
movsb
add
cmp
sub
mov
imul
icebp
jecxz
inc
and
push
add
sbb
scas
mov
popa
out
lret
dec
lea
nop
popf
push
into
cs
ja
dec
std
repnz
adc
fisttpl
and
inc
nop
aaa
jb
repnz
add
inc
jo
add
sbb
mov
fisttpl
imul
fidivl
jno
or
nop
sarl
mov
outsb
add
mov
nop
push
xchg
and
lods
std
scas
fcom
enter
inc
push
ss
mov
pop
mov
push
jecxz
mov
or
dec
mov
jns
aad
mov
jle
pop
sub
push
popf
outsl
push
inc
mov
adc
mov
cmp
cmpl
push
sub
pop
test
push
pop
pusha
mov
mov
push
dec
stos
dec
es
insl
push
adc
test
cmpsl
fcmovne
test
scas
xchg
js
test
push
mov
dec
and
add
inc
rorb
jmp
pop
xchg
inc
in
adc
push
adc
in
push
and
cwtl
mov
jge
iret
lock
xlat
insl
aad
lds
pop
loopne
mov
sahf
jp
ljmp
add
enter
shll
out
push
push
add
ret
adc
push
call
mov
mov
jmp
ficomps
call
push
inc
ja
imul
call
sub
cmpsl
les
pop
sbb
enter
aam
xchg
xlat
adc
xchg
addl
adc
push
and
lods
js
mov
enter
loop
sbb
inc
xchg
pandn
sbb
xchg
cmp
les
lea
dec
lret
es
out
pop
add
jg
rcll
xchg
in
sbb
dec
ljmp
and
fwait
mov
push
repnz
cmc
mov
call
inc
pop
lcall
aad
in
push
hlt
shll
cmp
sti
adc
jle
fs
push
loop
es
movsl
dec
inc
and
push
imul
jl
add
cmp
xor
add
add
inc
or
int3
je
mov
stos
cwtl
aad
testb
pop
mov
out
xchg
xor
int3
data16
push
push
mov
jmp
add
ds
adcl
mov
cmpsb
insl
sbb
das
sbb
dec
cmp
cmpsl
mov
mov
xor
add
into
mov
cmp
dec
cmp
arpl
sub
cwtl
push
mov
loope
jns
insb
push
mov
xchg
fwait
xchg
insb
add
pusha
test
in
xchg
out
lahf
enter
jb
fbld
and
add
addr16
lahf
dec
lods
mov
and
or
inc
sahf
push
xor
xor
cmp
xchg
mov
rcrl
cmp
iret
rcrl
or
sub
xor
cmp
jb
testb
push
sbb
pop
dec
sub
inc
or
pop
and
jb
rorl
popf
mov
xor
dec
sbb
popa
lea
mov
pop
cmp
pop
push
jp
lock
adcl
ljmp
jb
mov
test
xchg
arpl
adc
pop
pop
sbb
mov
mov
adc
adc
aas
pop
frstor
sahf
and
dec
xor
mov
shr
pushf
pop
call
cmpsl
aad
add
sbb
adc
cmpsb
mov
loopne
pminub
imul
adc
push
xlat
sbb
sbb
outsl
test
and
jge
xor
jbe
decl
inc
outsl
jo
aas
jno
call
jb
ficoms
lods
lcall
ljmp
shrb
dec
fadds
outsb
fsubs
sbb
fnstsw
cmp
scas
cltd
sub
xchg
imull
mov
sub
sahf
aas
dec
xchg
push
addl
add
and
mov
pop
xchg
ss
loopne
test
xor
cmp
add
adc
outsl
movsl
mov
sbb
dec
pop
inc
cmp
pop
inc
adc
pop
ficoms
out
imul
add
or
xor
mov
xor
bound
mov
and
jnp
std
inc
mov
insl
dec
enter
fnstsw
aam
cmc
test
push
mov
cli
pushf
arpl
mov
adc
cmpsb
adc
stc
cmp
mov
xor
sbb
sbbb
sahf
inc
push
rolb
fwait
out
in
mov
aam
gs
aas
inc
rorl
idiv
into
dec
fwait
mov
push
sbb
mov
xchg
jp
dec
add
sub
jbe
bound
cmpsl
pusha
iret
or
pop
fistpl
push
lock
stos
gs
push
push
ljmp
stc
pop
pop
dec
add
dec
add
scas
or
rorl
sarb
mov
push
and
mov
dec
fsub
dec
sahf
das
in
imul
or
repz
adc
rep
lret
pop
mov
or
mov
sbb
adc
popf
cmpsb
stos
push
push
xchg
inc
or
sbb
pop
insb
mov
xchg
movsb
rcrl
or
adc
pop
fs
rolb
or
xchg
mov
imull
ja
add
mov
mov
push
popf
add
fdivrs
loop
inc
pop
xor
popf
sahf
sbb
pop
lret
lcall
push
test
psrlq
jecxz
pop
jo
jmp
stos
dec
leave
or
lea
push
lea
cwtl
push
arpl
inc
fisttpll
adc
lods
mov
inc
dec
dec
aad
sbb
rcrb
push
ficoms
insb
ljmp
ds
mov
inc
jne
test
aad
js
lret
int3
sbb
cmpsb
pushf
cmp
test
bound
cltd
mov
mov
xchg
jnp
sub
adc
adcl
ficoms
push
js
push
aam
mov
sbb
jl
pop
leave
repz
stc
lcall
xchg
dec
fwait
mov
and
push
jge
mov
adc
pop
incl
imul
mov
fcomp
fdivrl
in
imul
add
js
mov
fwait
sti
fwait
fwait
clc
jmp
fcoms
stos
and
outsb
das
xor
mov
inc
or
inc
mov
fwait
mov
arpl
pop
mov
insb
jge
pushf
insb
decl
cmpsb
jo
in
jne
or
hlt
xchg
imul
icebp
pop
mov
test
mov
xchg
cs
jge
and
pop
push
jnp
scas
ffree
pushf
or
fwait
push
xchg
popf
cmp
jo
popf
dec
mov
les
cmc
hlt
sub
ja
mov
inc
push
sbb
je
inc
repz
imul
fistl
jmp
mov
pop
je
sbbb
adc
mov
aam
test
ss
cmpsl
or
enter
jae
mov
add
cmp
mov
xchg
dec
lock
add
pusha
ljmp
xchg
pop
push
in
lcall
pop
mov
add
insl
adc
push
addr16
clc
inc
add
orl
xchg
stos
cld
adc
pushf
push
cwtl
lret
push
mov
pop
and
inc
mov
lods
fdivrs
push
ret
lods
rcr
push
int
lahf
cmpsl
arpl
popa
leave
cltd
loope
push
sub
pusha
adc
and
or
adc
loopne
out
mov
call
insl
inc
ret
lahf
in
xchg
data16
nop
push
pop
sti
sti
aas
addr16
adc
dec
inc
mov
jle
or
cmp
adcl
arpl
mov
bound
insl
pop
mov
lods
mov
sbb
adc
mov
gs
xor
xchg
fsts
scas
cmp
cmc
mov
pop
leave
jmp
imul
lods
and
mov
popa
mov
dec
or
lds
sub
push
lods
dec
inc
test
inc
mov
fwait
scas
jns
cmpsb
cmc
add
adc
ret
mov
jg
cmp
or
test
add
insl
in
adc
insb
pop
pop
loope
pop
aaa
push
adc
fldl
add
iret
mov
sbb
gs
mov
call
mov
jo
in
mov
xchg
and
inc
pop
cltd
push
test
mov
cwtl
pop
mov
int
and
dec
lahf
or
pop
push
fadds
in
xor
push
popa
sbb
enter
les
scas
pop
ret
push
pop
out
push
aam
xchg
cmp
lods
fadds
lahf
sub
lret
stos
jb
push
inc
cmpsb
fld
pop
sub
dec
xacquire
jecxz
rcrb
lret
cmp
lret
ret
push
xchg
mov
pushf
push
adc
jbe
mov
cmp
pop
test
mov
stos
adc
cltd
jmp
divb
pop
cmp
mov
rcll
mov
xor
stos
les
sbb
xor
es
inc
sbb
cmp
cmp
mov
push
add
shlb
loopne
repnz
repz
out
fists
or
fstpt
cmp
in
stc
lea
jae
out
jae
pop
or
mov
or
lcall
jle
cmc
lock
sarb
loope
rorb
roll
pop
adc
push
adc
dec
mov
mov
xchg
rcll
jo
cs
mov
shlb
xchg
std
push
js
sti
js
xchg
xchg
arpl
fnstsw
pop
add
ljmp
adc
cmp
add
jg
push
sbb
mov
jo
fiaddl
cltd
out
ljmp
cmpsl
scas
int
iret
sub
pushf
imul
mull
insb
ljmp
pop
mov
idiv
jb
lea
mov
push
stc
sbb
mov
pop
mov
arpl
rcl
sbb
nop
xor
cli
add
out
jne
dec
sub
in
incl
shll
repz
idivl
lcall
sub
sti
fucomip
mov
imul
mov
mov
aam
adc
popf
add
ror
cmpsl
xchg
fmull
shlb
xor
jp
test
pop
and
mov
inc
cltd
lock
inc
jp
push
test
popf
push
or
in
fwait
cmpsl
test
dec
nop
gs
addr16
mov
jbe
push
sar
scas
bound
popa
or
lea
lock
cs
movsl
jp
mov
icebp
inc
out
push
in
adc
dec
inc
addb
dec
je
adc
mov
push
pop
movsb
xchg
sbb
fsub
fnstcw
mov
es
inc
xchg
sbb
inc
sub
outsl
arpl
cwtl
cmp
rolb
leave
lods
pop
dec
inc
aas
or
mov
pop
cli
pop
pop
movsl
packsswb
and
fs
lock
mov
jecxz
clc
jge
push
sub
mov
cwtl
push
lret
shll
inc
pop
movsb
mov
lcall
mov
sti
arpl
pop
daa
adc
fs
xor
pushf
pop
out
mov
cmp
faddp
adc
dec
jnp
inc
and
push
inc
mov
lea
flds
aaa
aas
dec
cmovns
test
dec
mov
icebp
pop
xchg
push
fsubrp
movsl
addr16
inc
test
fldt
imul
jne
das
and
in
jecxz
cs
push
out
or
test
sti
and
gs
mov
xchg
jl
loop
mov
aad
js
mov
rol
push
mov
test
jo
and
movsb
mov
jmp
jge
sub
inc
jno
push
jp
adc
movsl
fcmovne
xchg
dec
jbe
lods
add
in
lods
or
scas
test
cli
pop
lods
sbb
pop
and
inc
hlt
pusha
aad
jbe
sbb
movsb
jg
push
xchg
sub
pop
jo
xor
cmp
gs
imul
outsl
or
gs
push
mov
lods
cli
or
pop
add
adc
mov
fimull
lret
lods
xchg
pop
rcl
fisttpll
sti
sub
jg
cwtl
jno
inc
aaa
inc
shlb
lret
loopne
pop
pop
xor
jp
adc
mov
inc
cmp
lock
fistpl
leave
add
clc
mov
ljmp
mov
or
jmp
jns
xor
pushf
dec
test
jo
test
mov
leave
lods
test
pop
aas
test
scas
jecxz
ja
jo
cmp
dec
mov
outsl
sbb
jns
xchg
out
loopne
xor
sbb
pop
addr16
loop
cmc
dec
pop
pop
jg
mov
mov
mov
clc
cmc
cli
cmpb
roll
je
adc
lret
cwtl
pop
ja
dec
call
movl
aas
outsl
jae
repnz
repnz
icebp
lock
mov
xchg
out
xchg
and
cwtl
cmp
jb
out
xchg
jp
xchg
adc
and
pop
mov
xor
xor
popa
mov
or
cmp
imul
dec
sahf
dec
and
cmpsb
lea
inc
and
test
jns
call
pop
test
dec
mov
test
add
orl
mov
pop
mov
inc
es
push
and
shr
mov
jne
xor
cmc
xchg
loope
mov
cmp
sub
mov
add
clc
xchg
lea
inc
pop
ljmp
lret
cmp
xchg
test
ds
insb
xchg
out
or
test
dec
int3
push
xorl
pusha
jmp
pushf
inc
push
idiv
test
sub
sbb
pop
fimull
jmp
movsb
in
mov
testl
dec
in
or
push
test
pusha
mov
fistl
notb
jl
push
mov
jae,pn
pop
jg
mov
nop
psraw
cmp
mov
mov
mov
lds
jmp
sbb
inc
push
and
ss
adc
lret
push
movsl
ljmp
jp
jne
xchg
cmc
adcl
sbb
dec
loopne
in
mov
xor
inc
or
outsl
fdivp
xchg
mov
ljmp
out
fs
xlat
mov
mov
aaa
lahf
arpl
jmp
pop
fwait
out
ja
mov
stos
adc
fidivrl
xchg
div
jp
insb
sbb
pop
jns
dec
or
lret
dec
mov
in
popf
inc
push
in
dec
jp
and
xor
cld
mov
jg
xchg
test
enter
test
xchg
nop
cmp
test
out
jnp
xchg
fwait
jne
mov
sub
jb
pop
inc
adc
xor
jnp
loopne
out
dec
add
cmc
hlt
div
fldcw
int3
mov
jle
adc
mov
mov
or
popa
dec
pop
mov
out
shll
repnz
mov
mov
outsb
outsb
fisttpl
clc
xchg
jae
mov
enter
stos
stos
je
js
and
lret
adc
xor
subl
out
je
cmp
cwtl
stos
cmp
mov
lcall
loopne
and
jge
inc
shlb
mov
fiadds
xor
mov
xchg
scas
sbb
xchg
add
pop
cwtl
jb
mov
xorb
test
call
lea
or
inc
clc
jge
rcrb
and
xchg
add
mov
call
and
clc
and
xchg
data16
stos
pop
cmp
jmp
pop
jecxz
out
stc
mov
push
outsl
add
imul
push
movsl
std
cmp
sbb
divl
jge
jl
xchg
jp
mov
sbb
rcr
sbb
arpl
or
icebp
decl
xchg
dec
fbld
cmp
push
add
aaa
xchg
sbb
sahf
dec
popf
divb
pusha
adc
mov
jo
stos
dec
js
pop
sub
jns
inc
push
popf
inc
imul
lahf
rclb
mov
aam
mov
add
fldt
xor
mov
push
cwtl
inc
pop
in
xchg
add
fisttpl
lcall
push
push
push
adc
inc
add
nop
loopne
mov
pop
jo
in
mov
mov
mov
pop
js
push
push
subl
push
loop
or
shlb
push
or
lahf
cli
mov
scas
outsb
dec
xchg
mov
mov
lahf
out
sbbb
mov
xchg
jg
gs
es
dec
jmp
fisubrl
push
push
stos
dec
push
cmp
and
fsubs
dec
pop
cmp
sub
test
loopne
xchg
jb
pop
sub
pop
aaa
cli
lock
js
loope
dec
add
jae
cmp
outsl
cmp
dec
mov
sbb
push
xchg
adc
xor
push
xor
cmp
xor
xchg
jp
pop
pushf
rcr
or
jb
inc
and
and
push
rolb
icebp
dec
sub
cmc
xchg
sbb
push
int
push
aad
xchg
or
push
jns
mov
lds
stc
fbstp
fnstenv
repnz
repz
inc
xchg
pop
and
push
sub
aaa
jecxz
mov
rolb
and
mov
push
push
sub
jae
and
mov
outsl
dec
lods
mov
mov
mov
xchg
fxtract
or
mov
jno
adc
popl
scas
imul
imul
xor
nop
pushf
pop
repz
add
adc
sub
sbb
fsts
stc
lcall
jb
test
sub
lods
lods
and
loope
add
inc
nop
inc
sbb
cmc
push
pop
or
out
iret
rcll
imul
push
rol
test
push
jg
or
mov
int3
popf
push
dec
divb
call
xlat
jecxz
mov
call
xor
fistl
mov
jl
cmc
mov
bswap
jae
mov
add
stc
dec
aad
fldl
and
bound
mov
pop
mov
not
ja
adc
xor
adc
and
and
jp
mov
lods
jo
jle
xchg
mov
mov
mov
lcall
shrb
xchg
mov
lea
dec
das
push
lahf
test
std
or
or
jg
adc
sub
jae
in
dec
mov
dec
jb
ret
mov
pop
addb
popa
leave
rcrb
adc
bound
dec
mov
or
cmp
rorb
leave
inc
adc
sbb
arpl
ljmp
and
push
push
sbb
imul
mov
rcrb
inc
adc
les
fdivl
cli
std
sbb
stos
xor
add
mov
aas
jmp
cmp
lea
mov
in
mov
pop
xchg
arpl
xor
out
mov
iret
jge
xor
inc
mov
loopne
stos
jno
pusha
adc
xchg
into
outsb
int3
fcompl
insl
sti
enter
mov
test
jne
adc
xchg
fstpt
push
ret
lds
sub
repz
pop
clc
flds
push
jl
pop
push
jnp
sbb
pop
sbb
inc
fs
test
icebp
dec
jb
xchg
outsl
dec
xchg
in
cli
add
jb
cmpsb
pop
push
adc
inc
aas
fcomip
cmpsb
js
aam
sarl
lret
dec
adc
outsb
fs
mov
repnz
ljmp
mov
dec
pop
mov
shll
and
ss
fsts
in
mov
fcoms
xchg
or
sbb
xchg
popf
push
mov
add
xor
movsl
sub
call
xor
aad
jo
enter
xor
pop
cmp
repz
push
imul
xlat
mov
sti
pushf
in
aam
jae
sbb
into
rclb
ja
mov
jb
shlb
cmp
addl
xorl
xor
cmp
stc
sbb
dec
in
xchg
pop
or
lea
bnd
sbb
xor
addr16
cmp
fwait
hlt
fisttpl
push
out
lcall
out
mov
in
arpl
add
clc
jle
or
push
jmp
push
xchg
sub
xlat
lret
dec
lock
fsubs
xchg
data16
movsl
push
negl
icebp
pop
imul
pusha
scas
ss
or
and
outsl
and
inc
pop
cmp
add
arpl
push
out
ss
int3
inc
out
xchg
mov
inc
add
cld
fdivrl
xchg
iret
jb
fmul
push
adc
mov
into
ficoms
push
mov
adc
sbb
mov
xchg
rorl
inc
push
xor
mov
rcrb
lret
lock
std
loope
and
jno
clc
jecxz
push
and
mov
sbb
insb
and
pop
aad
rdtsc
imul
sub
test
inc
push
lods
mov
mov
jb
fistpll
jmp
lock
std
add
mov
insb
lret
ret
insb
in
fcoml
mov
dec
add
pop
pop
mov
sbb
fidivs
cmpsb
sbb
stos
xchg
pop
and
inc
test
adc
ss
push
sub
lret
bound
bound
sti
int
hlt
push
lods
and
lods
andl
add
inc
adc
dec
and
cltd
mov
mov
out
mov
xchg
cs
pop
in
rcl
pusha
cmp
aaa
jl
xchg
stos
aam
adc
int3
xchg
adc
cmp
xor
mov
add
sbbb
push
sbb
out
int
pop
roll
lret
in
dec
adc
imul
xchg
xor
clc
subb
imul
test
ficoms
out
and
movsb
fst
xor
out
xchg
dec
ljmp
jg
mov
jmp
xchg
mov
int
push
add
sahf
xchg
sub
out
pop
es
or
xor
das
out
insb
sti
lret
loope
lret
icebp
sahf
fwait
mov
xchg
jl
inc
rcl
fstpl
adc
mov
inc
inc
cmp
sbb
loope
mov
decl
pop
sub
fldenv
stos
mov
push
and
jp
sbb
or
mov
imul
test
jbe
popa
pop
into
insb
mov
adc
call
add
cld
push
sub
or
dec
dec
dec
and
and
insb
sbb
mov
test
cmp
sub
shll
push
xor
mov
pop
pop
adc
in
sbb
jbe
sbb
pushf
call
cwtl
jbe
lock
aaa
mov
fistpl
mulb
jno
mov
divl
lcall
inc
lods
jmp
cmpsb
xchg
ret
dec
mov
clc
imul
and
lea
xor
aam
xchg
mov
mov
hlt
in
jge
jne
inc
xor
movsl
outsb
enter
cli
out
loopne
adc
adc
push
divb
lods
pusha
xor
ffreep
dec
sub
scas
outsb
lods
fwait
push
cltd
addr16
add
mov
adc
fsubl
and
movsb
and
scas
mov
mov
sbb
out
das
das
fiaddl
and
push
pop
or
addr16
lock
lret
out
popa
cwtl
pop
cs
inc
loopne
pushf
fcoms
lock
inc
into
or
aas
jecxz
push
xchg
xor
sbb
popf
adc
sbb
xor
pop
sbb
xor
sub
mov
jmp
ficomps
testb
icebp
imulb
xchg
inc
inc
adc
or
es
push
pushf
push
in
xchg
mov
cmpsl
jnp
fcoml
fisttpl
aad
and
push
ss
mov
subl
add
daa
dec
movsb
dec
lret
fnstcw
add
push
imul
jg
sub
or
pop
cli
sahf
xchg
push
xor
in
out
pop
mov
push
sbb
add
mov
push
jnp
xor
dec
dec
sbb
lea
aad
mov
les
addr16
push
mov
cwtl
xor
into
enter
dec
loope
pop
pop
adc
test
push
mov
push
aad
sub
inc
or
das
cmpsb
stc
mov
pop
mov
add
or
sbb
and
lea
stos
ljmp
cmpsl
fmull
or
xor
mov
clc
push
daa
mov
test
ss
ljmp
ds
dec
cmp
push
push
xchg
and
push
push
add
je
adc
sub
pop
aaa
cmpb
mov
icebp
lcall
jecxz
push
leave
sub
mov
popf
in
outsl
hlt
pop
faddl
jge
mov
sbb
inc
ret
push
mov
push
inc
mov
mov
cmp
pop
inc
cmpsl
pushf
scas
pop
add
pop
jne
mov
mov
sub
out
xlat
add
mov
or
jg
adc
stc
icebp
mov
adc
cmp
lods
inc
cmp
nop
jno
addr16
outsl
es
int
xchg
shll
lock
fwait
shlb
push
xorb
test
fisubrl
pop
std
bound
scas
push
inc
lahf
push
movsb
out
lock
jb
sub
data16
pop
mov
or
ret
add
iret
mov
dec
data16
cmp
cwtl
loope
fidivs
je
mov
scas
sbb
push
mov
xor
lret
inc
adc
sar
and
add
arpl
push
xchg
pop
sbb
ret
add
cmp
mov
mov
out
int
jl
cmp
push
pop
jl
mov
gs
arpl
dec
mov
add
add
push
add
cld
adc
cmp
and
fsincos
push
in
inc
imul
jp
nop
ss
xchg
outsl
push
mov
pop
sbb
xchg
cmpsl
sbb
cmpsb
dec
adcb
daa
mov
mov
test
inc
sub
mov
or
dec
sbb
subb
inc
arpl
popa
and
push
or
int
mov
add
mov
sub
xchg
cmp
jno
mov
pop
push
outsb
sub
pop
in
rcl
xchg
jns
jge
and
xchg
cwtl
cmpsl
push
shld
and
fiaddl
inc
jp
cmpb
mov
adc
xchg
data16
loope
fwait
jo
add
jno
lret
adc
rcll
test
int
ds
xchg
xchg
xorl
xor
adc
mov
jne
pop
shlb
gs
and
jae
xchg
out
push
push
mov
dec
mov
mov
gs
loope
dec
mov
mov
pop
add
xlat
mov
jno
ss
orl
icebp
xor
mov
les
or
mov
xor
call
nop
mov
sahf
inc
push
cmp
pop
jbe
gs
push
mov
rcll
xlat
jae
pusha
roll
pop
mov
test
adc
into
aad
ficoml
das
mul
fs
arpl
lret
and
push
ret
and
loop,pn
jbe,pt
or
push
sub
enter
fs
roll
lods
adc
xor
pop
lahf
xchg
push
push
xor
lcall
int
inc
bound
int
mov
aam
lods
stos
xchg
mov
fwait
shrb
cmp
inc
and
push
loope
cltd
jl
movsl
adc
dec
sbb
outsb
into
mov
movsl
int3
and
add
bound
xor
loopne
fists
aad
fwait
sub
push
inc
lahf
jbe
loope
loopne
xor
or
adc
es
xchg
lret
int
mov
out
flds
inc
xchg
rcrb
les
loope
push
pop
sahf
in
and
in
test
or
xchg
pop
mov
stos
call
sub
mov
in
jg
xor
push
sbb
rorb
xchg
sbb
aaa
push
cmp
lcall
xor
or
adc
imul
mov
pop
xchg
mov
stos
shl
cmp
inc
shll
dec
inc
inc
lods
pop
pushf
pop
cmpb
lahf
out
aaa
das
or
out
pop
mov
vrcpps
mov
push
dec
xor
mov
mov
jns
push
sbb
add
out
xor
sub
outsb
push
test
sbbb
negl
stos
jb
test
inc
fisubrl
mov
cmp
inc
xor
arpl
xor
and
sbb
jl,pt
xchg
mov
xchg
mov
or
push
hlt
sub
adc
mov
arpl
std
push
push
pop
rcrb
clc
scas
rcll
dec
in
and
pop
ret
sar
into
adc
adc
pop
mov
fcmovnb
adc
jae
xor
inc
or
mov
insb
dec
inc
or
fisttps
sbb
mov
out
pop
inc
push
adc
jb
cmp
jl
aam
sbb
push
mov
in
add
jne
lea
jmp
repnz
hlt
ret
xchg
jb
clc
ret
test
cmp
mov
pushf
jmp
imul
pop
lret
mov
jne
roll
push
xorb
call
loopne
jnp
out
pop
les
sbb
out
or
cs
call
daa
fstpl
cwtl
xchg
sbb
cmp
shrl
leave
xchg
imul
loope
xchg
jge
repz
sbb
cmp
add
push
sahf
aam
test
pusha
loopne
cmp
or
repz
shll
cmpsb
push
push
faddp
and
scas
push
adc
jp
rclb
push
xor
insl
mov
scas
jnp
cmp
jge
mov
lods
mov
pop
mov
data16
mov
adc
push
and
jmp
mov
sbb
aad
cmpsb
push
arpl
pop
shll
add
ret
mov
xchg
sub
sub
cmp
hlt
mov
imul
fs
fisubl
test
rclb
jno
or
cld
movsl
int3
lcall
inc
int3
mov
xchg
xchg
fs
sub
loope
dec
cmp
add
mov
mov
mov
add
adc
sahf
jg
pop
mov
adc
push
cmc
dec
int
cmp
sbb
mov
or
ja
cmp
push
popf
sub
lret
pop
or
ds
rcrb
sub
pop
outsl
sahf
jl,pt
fnstenv
fnsave
addr16
mov
int
sbb
xor
andl
setge
pop
in
cmp
adc
imul
pop
lock
push
inc
popf
roll
rclb
lahf
dec
jl
mov
ret
mov
imul
xlat
pop
in
sbb
jne
mov
jge
inc
adcl
das
adc
daa
xchg
xlat
fs
stos
pop
push
pop
cs
aad
std
cmp
mov
sub
xchg
mov
shll
xchg
add
nop
iret
js
sbb
sbb
aas
pop
ljmp
loope
aad
cmp
out
shlb
or
sbb
lcall
dec
div
adc
sbb
and
mov
iret
aad
mov
stos
xchg
test
mov
in
mov
xchg
aas
aaa
cld
sub
inc
pop
rclb
pop
dec
ljmp
mov
fnstenv
outsb
or
jo
repz
repz
test
add
aam
xchg
sbb
fs
into
or
mov
lods
mov
orl
mov
pop
pusha
mov
or
lock
cmp
pop
or
fadds
ret
push
bound
out
loop
mov
push
ficoms
daa
xchg
cld
or
fisubl
add
push
mov
xor
lahf
ret
jecxz
pop
and
mov
push
ret
xor
fistpl
imul
inc
loope
popa
ja
mov
mov
mov
cli
xor
test
lahf
or
jecxz
repnz
cmp
out
mov
test
sbb
sbbb
jg
lahf
xor
mov
pop
je
push
xchg
cmp
pop
pop
jae
dec
adcl
sub
loope
dec
add
push
push
loop
mov
or
popa
popa
sub
push
lods
add
hlt
cwtl
adc
js
sbb
shll
or
mov
cmp
dec
xor
add
pop
or
and
ss
adc
adc
pop
rcrb
xchg
and
lret
cld
outsb
mov
je
shll
fcomps
ficompl
pop
fidivs
xor
and
mov
cmc
mov
xor
adcl
xchg
mov
push
scas
push
and
push
mov
or
insl
clc
loope
or
sub
jnp
out
sbb
vorpd
les
jb
mov
ds
sbb
jne
shrb
sub
mov
arpl
push
jle
mov
sbb
shl
lods
mov
xchg
add
fcoms
in
clc
je
adc
test
sbb
xor
xor
xor
int
sub
and
cmp
and
scas
test
sahf
lds
and
arpl
cwtl
popf
xchg
cmp
lods
mov
adc
pop
and
out
std
inc
or
add
fcmovbe
pop
cwtl
bound
into
aad
ret
mov
cmp
sbb
in
orb
aad
sar
out
movsb
das
loopne
ret
insl
mov
ljmp
jmp
ss
jnp
aas
je
pop
inc
mov
cmpsb
add
add
loopne
testl
sbb
les
add
insb
or
pop
rclb
sbb
cmpsb
adc
fsubl
pushf
lea
mov
mov
outsl
pop
or
bound
or
push
pop
sti
jmp
fists
sub
icebp
inc
mov
push
nop
out
call
imul
popa
pop
dec
fwait
mov
jmp
push
addr16
jp
mov
adc
cmpsl
jno
roll
pop
xor
mulb
sub
mov
lret
mov
mov
pop
lret
xor
scas
adc
inc
bswap
jne
sub
xchg
out
ds
jp
fldcw
pop
pushf
popf
sbb
leave
aad
pop
ret
sbb
dec
or
mov
mov
pop
lea
mov
fists
sub
or
outsl
cmp
cmp
aam
cmpsb
and
xchg
dec
call
and
repnz
cmp
jnp
or
cwtl
out
gs
inc
scas
inc
repz
arpl
pop
push
cmp
push
fstpl
pushf
cld
rorl
jb
adc
jge
mov
inc
test
decb
hlt
jbe
std
aad
rcl
test
jo
or
jno
inc
int
xor
ds
inc
pop
les
icebp
dec
pop
mov
or
fisubl
nop
icebp
in
pop
in
insl
addr16
cmp
add
or
idiv
clc
iret
in
sahf
push
xchg
xor
sbb
fs
inc
push
outsl
stos
jge
push
dec
add
out
xorl
or
or
mov
mov
and
add
out
xchg
push
sub
test
sbb
int
pop
inc
sub
pusha
inc
xor
test
rcrl
imul
and
sbb
sub
loope
or
sbb
sahf
sub
push
cwtl
pop
and
mov
mov
imul
or
pop
or
in
mov
aad
adc
push
xchg
dec
call
lea
adc
sub
test
cmp
adc
push
cmp
or
aas
mov
pusha
pop
mov
or
inc
bound
into
pop
push
push
mov
test
shrl
inc
xchg
xchg
sbb
jle
shlb
dec
fisubl
jae
repnz
mov
xchg
mov
aaa
sub
sti
mov
loope
push
mov
inc
lds
leave
jo
adc
xchg
movsb
mov
push
pop
loop
test
hlt
or
mov
cmc
cmpb
cld
adc
lock
cld
sbb
xchg
subl
fistl
mov
gs
xchg
fdiv
mov
pop
mov
test
shrb
add
push
xchg
mov
dec
ds
lret
xchg
sub
add
out
fbstp
or
loop
jl
clc
repz
pop
cs
mov
pop
xchg
cmpsl
in
jne
inc
cmpl
std
xor
jb
push
loop
ljmp
push
push
es
les
cli
xor
movsl
loopne
cltd
popfw
fldenv
hlt
adc
dec
sti
fisubrs
add
mov
icebp
inc
nop
jmp
inc
push
xchg
fcoms
arpl
mov
mov
ss
xchg
cltd
dec
inc
or
stos
cwtl
and
fisttpl
das
js
call
jb
pushf
out
inc
xchg
out
inc
cmp
mov
addr16
jmp
pop
adc
fbstp
out
lahf
or
sub
and
pop
decl
dec
pusha
inc
cwtl
ljmp
push
jecxz
test
popf
js
lea
sbbl
lods
sbb
flds
arpl
iret
push
xor
cli
cmp
lea
insl
ljmp
jle
push
cltd
ror
roll
adc
mov
in
sarb
cmp
out
int
inc
rorb
inc
xchg
rolb
xor
xchg
aad
or
xchg
fdiv
test
addb
xchg
sbb
push
shlb
call
xchg
inc
hlt
push
cld
aaa
jl
or
clc
pop
and
rcll
inc
mov
cmp
in
mov
sbb
fwait
negl
lock
in
dec
adc
adc
mov
fidivrs
sbb
out
adc
rcll
push
add
mov
ror
mov
xor
jmp
mov
and
lea
js
mov
repnz
addl
inc
clc
sbbl
orl
push
std
mov
ret
pusha
adc
fs
inc
inc
mov
mov
dec
sub
cmc
sbb
mov
jl
adc
sub
fcompl
push
pop
in
or
jmp
inc
int3
push
push
xchg
sahf
dec
shll
repz
fxrstor
xchg
and
mov
and
and
pop
add
xor
jno
sub
add
and
pop
movsl
cld
movsl
lods
xchg
aas
push
aaa
arpl
lret
insb
jnp
and
in
add
mov
mov
pop
test
jmp
fwait
cltd
pop
pop
das
adc
mov
in
popf
mov
xchg
mov
adc
sahf
in
hlt
pop
cmp
aam
mov
iret
push
jns
loop
addr16
push
and
xchg
mov
lahf
sbb
push
mov
sub
divl
and
sbb
sbb
int
popa
sbb
adc
and
cwtl
clc
jbe
xchg
loopne
push
sbbb
and
inc
sub
pushf
rcrb
xchg
pop
mov
mov
arpl
mov
add
cmp
jnp
fdivrs
inc
lahf
push
bound
ss
leave
mov
adc
sub
pop
inc
xchg
and
popa
xor
sahf
sub
test
xor
or
sub
sbb
mov
adc
pop
adc
sahf
das
leave
and
outsb
fcoml
push
and
repz
in
out
inc
inc
ret
stos
cmc
pop
sub
enter
pop
push
jmp
pop
nop
and
jecxz
cmp
cmc
mov
mov
jmp
dec
sbb
push
inc
push
dec
mov
ret
jns
aaa
pushf
mov
int
pop
popf
nop
jge
pushf
dec
cltd
jnp
add
mov
pop
mov
repnz
cmp
mov
into
xchg
jne
bound
push
fucomp
lds
ds
lret
or
sub
sti
add
mov
mov
adc
not
push
cmpl
loop
lods
stos
adc
xchg
lahf
cmp
bound
mov
rcrb
mov
cmp
fcmovne
xchg
sbb
add
pop
call
sub
fmuls
dec
inc
ljmp
jecxz
popl
incb
mov
pop
fisubrl
sbb
and
mov
push
cli
adc
sbb
push
inc
pushf
shll
int3
xor
xchg
outsb
outsl
jo
mov
orl
stos
sbb
test
call
shlb
pop
add
pop
movsb
push
xchg
mov
mov
xchg
sbb
mov
mov
mov
scas
fs
popa
test
call
iret
push
inc
aam
test
std
js
fld
out
and
adc
mov
push
jne
arpl
dec
mov
mov
xor
push
mov
aam
jb
loopne
subl
lock
sub
aam
aad
add
pop
lret
mov
fildl
hlt
push
inc
mov
sbb
mov
pop
js
out
jg
leave
xlat
adc
inc
mov
aas
mov
pop
in
mov
stos
and
cwtl
shlb
mov
mov
inc
adc
cs
mov
in
fbstp
fisttpll
jg
imull
test
aam
and
pop
dec
cmpsb
stc
inc
jb
xor
out
div
mov
jmp
or
out
iret
mov
add
lea
xchg
scas
ds
sbb
mov
or
mov
sahf
jecxz
lcall
fistl
ljmp
cmpsb
stos
out
nop
int3
jae
mov
sub
mov
js
mov
sub
inc
aaa
cmpsb
ret
test
mov
jmp
or
adc
cmovb
xlat
idiv
xlat
pushf
cmpsl
xchg
dec
shll
mov
jns
daa
fdivs
imul
jmp
xchg
enter
jmp
aaa
mov
mov
jecxz
dec
and
repz
xor
sbb
dec
sub
mov
dec
std
xchg
loopne
sbb
inc
mov
and
test
pop
lcall
scas
outsl
jle
xchg
or
mov
pop
aas
inc
lock
xchg
test
cmpsb
and
cwtl
jae
out
xchg
pop
xorl
repz
cs
pop
lods
jae
jmp
shrl
pushf
add
fistps
xchg
lock
or
jbe
es
or
daa
dec
nop
addr16
ljmp
xchg
push
xor
xchg
dec
mov
or
mov
dec
je
cld
fnsave
inc
iret
mov
push
test
xchg
iret
jl
push
pop
fisubrs
lret
lahf
leave
fnstsw
xchg
popa
test
mov
mov
ret
cmp
mov
jecxz
fnclex
add
cwtl
push
inc
adc
mov
xchg
icebp
jmp
lahf
es
sbb
ret
lret
cli
pop
mov
or
mov
push
mov
cli
orb
test
jne
mov
adc
adc
sub
imulb
js
bndldx
repz
in
mov
sub
push
mov
or
into
cmpsb
adc
or
les
hlt
fistps
mov
and
xchg
fstl
sbb
andb
and
cwtl
xlat
shrl
adc
cmpsb
mov
xor
dec
nop
int3
xchg
lret
pop
xor
xor
push
mov
rclb
in
xor
rclb
imul
mov
gs
push
xchg
push
sub
or
cli
mov
xor
test
leave
xor
out
and
pop
pushf
sub
push
sub
rorb
enter
push
mov
adc
ret
cwtl
lds
jae
cld
and
dec
ret
lea
xchg
shll
stc
aad
xor
cmc
aam
mov
fcomps
jb
dec
push
sbb
sub
or
add
add
cwtl
mov
stc
stc
mov
lcall
sub
stos
push
stos
test
jbe
push
mov
mov
outsl
ds
sub
mov
adc
lea
and
lds
xchg
mov
int3
xchg
add
add
push
sbb
lds
mov
and
pop
xchg
mov
shr
push
enter
sub
data16
or
loop
mov
mov
mov
into
or
insb
leave
cmp
jnp
push
fists
jmp
sub
pushf
out
inc
or
movsl
stos
fidivrs
mov
hlt
pop
outsb
loop
out
test
and
mov
cmpsl
cs
fs
cmc
js
mov
push
ss
add
pop
and
sub
inc
xchg
mov
push
nop
push
cs
repz
lock
mov
mov
lods
pop
int3
lds
inc
fs
adc
clc
push
hlt
cltd
rolb
out
xor
jo
lods
add
pushf
push
jl
jnp
jecxz
ja
and
mov
add
cld
mov
sub
bound
mov
dec
fstps
rcrb
mov
pop
sbb
mov
movsl
and
ret
shll
push
test
popf
stos
cli
inc
dec
out
sbb
xor
push
fdivs
callw
push
aaa
insl
jo
testl
mov
fisttps
xchg
xor
pop
inc
lret
push
dec
cld
nop
mov
or
dec
scas
lret
cmpl
jl
cld
jb
dec
mov
jp
sbb
lea
stos
dec
sti
test
out
inc
icebp
and
sub
call
add
and
xor
add
test
mov
mov
pushf
cltd
mov
jle
jge
add
xchg
xchg
adc
mov
loop
lcall
imul
mov
mov
orl
and
js
jns
sbb
into
xor
mov
rorb
clc
js
sub
mov
xor
fisttpll
cli
in
je
pop
dec
and
adc
leave
cmc
fstps
insb
xchg
xchg
lret
lock
jo
jns
lahf
mov
sub
or
fmuls
mov
push
fwait
mov
cli
inc
mov
lock
out
fwait
in
jae
mov
jmp
jmp
leave
outsl
aaa
cmp
incl
aam
sub
shll
loopne
jp
faddp
stc
mov
icebp
or
pusha
cmp
js
wbinvd
inc
not
jge
sbb
enter
mov
test
and
fdiv
scas
sbb
hlt
and
stos
das
addb
or
pop
cmp
push
push
mov
add
cltd
adc
jnp
mov
mov
or
push
and
bound
inc
out
loope
ljmp
cltd
xlat
jp
lods
sti
sbb
cmp
inc
lret
leave
int
add
fists
stos
fsubl
cmp
mov
inc
mov
jns
push
js
mov
dec
daa
int3
jno
pop
jns
incl
jecxz
mov
in
outsl
push
cmp
sub
lret
daa
fdivrs
das
movsl
jns
jge
jb
xor
fisubs
stos
repz
or
jecxz
in
and
mov
xchg
mov
in
push
sub
cwtl
add
popf
add
sub
dec
jge
mov
jo
subps
push
adc
or
push
add
out
xor
insl
pop
in
into
ret
push
xchg
push
movsl
add
mov
stc
cmp
outsb
mov
aam
jp
outsl
jle
and
leave
xchg
mov
sbb
xchg
and
nop
bswap
xor
and
es
jnp
out
sbb
loop
xchg
inc
cmp
push
sbb
cmp
xchg
and
adc
into
adc
mov
jo
orl
movsl
inc
insl
movsl
or
hlt
iret
push
loope
mov
lret
iret
aaa
add
add
movsb
cmp
testb
je
jmp
in
subl
jle
cmp
enter
add
fcomps
xor
pop
mov
or
setg
add
mov
fs
fidivrl
push
data16
ss
mov
shrl
mov
lcall
or
and
aam
xor
imul
gs
xor
inc
pop
sub
test
sub
ret
cld
movsb
or
pop
dec
push
pop
and
cwtl
clc
sub
lods
fs
daa
loope
popa
shlb
xor
aaa
mov
test
mov
xor
sbb
push
and
xor
xchg
rcrl
ret
idiv
mov
pop
aaa
xor
sub
mov
movsb
icebp
ljmp
sbb
mov
mov
mov
xchg
lods
fnclex
sahf
add
xor
push
shlb
xchg
push
or
inc
xchg
std
sarl
stos
adc
mov
lods
fiadds
jg
pusha
mov
xor
ljmp
aad
scas
push
imul
cli
mov
mov
jmp
push
aas
pop
cmp
xchg
lahf
nop
stos
cs
or
or
cwtl
ja
lds
inc
out
or
pop
add
data16
inc
imul
mov
fnstsw
xchg
push
adc
rclb
or
decb
cmp
das
iret
mov
jnp
sbb
mov
insw
xchg
popf
out
mov
popf
iret
sbb
hlt
out
das
jne
negb
outsl
pop
insb
xchg
and
std
sarl
je
cmpsb
jnp
jg,pt
sbb
lock
movsb
popf
movsb
xor
xor
jbe
xchg
je
out
xchg
iret
arpl
push
add
push
std
fldt
xchg
test
inc
faddl
or
push
ds
push
clc
xchg
xlat
mov
pop
pusha
adcl
inc
sub
and
fmuls
inc
shr
mov
lahf
mov
add
aas
aaa
fucom
cmp
sti
inc
cmp
pop
sbb
lahf
fdivrl
pop
pop
sbb
add
sbb
inc
mov
xchg
test
xor
dec
mov
cmp
aas
rolb
fisubrs
mov
test
test
lods
jp
stos
jbe
sti
faddl
xchg
pop
xchg
lds
iret
adc
ja
push
cltd
mov
mov
cmpsl
jb
mov
add
scas
movsl
arpl
ffreep
mov
inc
pushf
mov
jge
push
jns
mov
and
cltd
pop
xchg
pop
inc
cmp
sbb
addl
xchg
sahf
std
push
popa
adc
cmpsl
rorl
ljmp
incb
jae
ljmp
sbb
cmp
mov
xlat
mov
pop
sbb
add
push
je
aad
dec
fbstp
aaa
test
outsb
mov
pop
and
cmp
pusha
sub
inc
shr
add
mov
jge
scas
lea
stc
adc
imul
rolb
pop
adc
sbb
loopne
inc
clc
arpl
fwait
or
inc
jmp
push
dec
out
es
adc
push
fcmovnbe
lods
push
sbb
mov
rcll
jae
ljmpw
inc
jecxz
pop
adc
movw
hlt
sbb
mov
notb
push
adc
ja
std
mov
es
adc
pop
push
add
mov
inc
and
inc
mov
mov
mov
sbb
add
add
inc
dec
pop
out
mov
pop
cmp
insl
mov
in
fbld
movsl
inc
mov
dec
mov
int
pop
cmpsl
in
fdivp
dec
arpl
jb
dec
pop
stos
sbbb
addr16
inc
aaa
pop
cltd
aad
popa
mov
int
and
ret
mov
dec
into
sub
insl
jmp
xor
das
sti
jae
into
cmpsb
xor
ss
dec
iret
pop
pop
sarb
cmp
push
inc
dec
adc
mov
sarb
xchg
push
cmpb
jns
pop
sbb
int
ss
mov
dec
add
fisubs
aad
mov
sub
mov
aaa
inc
ss
outsl
loopne
sub
rcrb
xor
push
push
or
ja
outsb
lock
mov
jecxz
pushf
test
and
enter
movsl
scas
sbb
xchg
mov
int
pop
xor
into
jns
divb
loope
pop
inc
insb
push
mull
jl
bound
jae
jle
jns
sarb
sahf
js
dec
pusha
subl
push
inc
xor
repz
xchg
xchg
xchg
pop
inc
movsb
ucomiss
pop
xchg
and
jo
jb
mov
dec
nop
in
sbb
and
out
std
jecxz
repz
in
ret
outsb
xchg
icebp
cmc
pushf
popf
pop
enter
push
jp
jl
push
gs
shl
or
das
adc
ret
mov
xor
xlat
mov
popa
sbb
aad
testb
stc
sbb
outsl
cltd
mov
or
bound
inc
lahf
mov
pushf
popa
imul
stc
in
adc
lods
mov
shlb
outsb
or
les
or
mov
psubsb
push
lahf
and
movsb
cmp
pop
cld
imul
jecxz
jb
sub
cmp
gs
ss
sbb
lods
pop
mov
jo
mov
inc
sti
ret
adc
inc
cmc
sbb
xor
push
cli
cmp
ds
lret
jmp
test
xor
cld
lcall
insl
fisubs
xchg
or
aad
jle
mov
mov
jns,pn
aad
lret
adc
std
mov
outsl
sti
ljmp
leave
lods
divl
movsb
aam
xchg
gs
in
mov
leave
jno
scas
insl
mov
xchg
rolb
insb
add
inc
mov
les
xchg
push
movsl
dec
pop
dec
cmp
pop
lcall
jb
cmp
faddl
inc
jle
cli
test
pop
ja
xor
shl
jae
adc
movsl
std
and
mov
mov
es
loope
fstpt
mov
mov
imul
loope
test
xor
cmpsl
rorl
mov
into
repnz
mov
xchg
jecxz
ror
aas
mov
fldl
and
push
add
fnsave
push
jno
add
jmp
mov
fwait
mov
sbb
pop
dec
icebp
xlat
adc
push
fldt
jge
frstor
xor
add
add
or
insl
mov
xchg
xchg
movsl
pop
int3
shll
fs
mov
push
out
mov
push
mov
jb
addb
ret
mov
idivb
test
rorb
pop
leave
lods
lods
sbb
and
fidivl
pop
xchg
aam
xchg
inc
jne
in
ret
adc
in
lret
jle
fwait
aaa
sub
or
xor
push
pop
jbe
adc
ss
xor
xchg
xchg
push
and
dec
jl
ret
push
insb
out
jp
push
adcb
jns
lret
pop
sub
repnz
fs
inc
fidivrl
nop
data16
lahf
sub
das
push
leave
mov
and
out
push
mov
pop
dec
je
push
jp
add
sahf
daa
push
xor
xchg
in
pop
mov
sahf
in
fimull
in
outsb
adc
push
loop
loop
pop
pusha
and
push
sub
pop
pusha
jno
in
enter
rcrl
ss
lods
mov
sbb
in
dec
xchg
loop
xchg
sbb
mov
mov
out
mov
mov
dec
pop
inc
lcall
push
pslld
push
dec
dec
xchg
sub
mov
mov
mov
xor
mov
lea
inc
lea
xlat
jnp
mov
ljmp
pusha
adcb
outsb
loopne
in
push
ret
lret
popf
adc
js
add
jne
jmp
out
cltd
lock
jecxz
push
jae
jle
addr16
fcmovu
cwtl
mov
jecxz
test
mov
loope
das
dec
push
pop
retw
sbb
loope
daa
xchg
sub
adc
out
push
popa
mov
vmread
lods
sub
push
lods
std
jb
and
hlt
int3
push
fs
sub
rcl
and
sub
js
inc
ret
sub
call
mov
push
xchg
ss
pusha
jle
insl
xchg
fcomps
dec
mov
sbb
sbb
lcall
inc
int
xchg
or
ficoml
arpl
pop
aam
sub
movsb
and
ret
or
scas
popa
push
test
xchg
adc
insl
shlb
jp
insl
stos
repz
mov
inc
popa
adc
jecxz,pn
hlt
ret
into
pop
mov
stc
jle
mov
es
push
aas
and
mov
xor
dec
xchg
stc
inc
push
nop
pop
negl
call
lea
pop
xor
or
mov
adc
mov
lea
inc
ljmp
adc
lahf
mov
loop
sahf
cmp
xchg
pop
jb
pop
sub
cs
lahf
jae
pop
pop
int3
or
jno
fisubrl
pushf
hlt
scas
adc
xchg
add
adc
sbb
dec
std
negb
mov
sti
loop
xor
push
cmpsl
sti
pusha
and
dec
sarb
jl
fwait
jae
leave
cmp
cld
push
leave
mov
aaa
insl
add
dec
push
insb
out
jmp
push
imul
dec
cmpsl
pop
inc
mov
push
mov
mov
mov
test
cmc
mov
rcrb
or
loope
jae
mov
imul
data16
enter
andl
adc
inc
xlat
fdiv
leave
xor
inc
ret
insb
jbe
mov
mov
sub
inc
pop
ret
les
hlt
push
dec
lret
sub
xorl
sbb
data16
dec
and
adc
dec
roll
cvttps2pi
rcrl
xor
cmp
ret
cli
adc
pop
test
rorb
or
out
je
or
and
ret
jo
dec
sbb
jno
scas
adc
lods
add
sbb
dec
push
mov
xor
mov
fcoml
jmp
cli
mov
scas
sub
dec
es
jns
sbb
inc
push
and
aas
into
addr16
lds
js
scas
adc
fsubr
push
fwait
mov
movsl
mov
inc
arpl
push
rorb
imul
sbb
jnp
mov
mov
mov
cmp
and
cli
sub
sar
jl
lods
shlb
daa
adcb
rol
xchg
leave
and
enter
ds
sbb
movl
inc
pop
shl
cmpsl
sbb
icebp
ja
mov
add
xor
mov
add
leave
pop
fs
sahf
addr16
jno
xchg
pop
xchg
shl
movsl
or
mov
mov
in
sub
shrl
add
and
shll
in
cs
clc
inc
mov
test
loopne
insl
js
bound
je
pop
mov
insl
ja
mov
xorl
xchg
pop
xchg
sub
aam
xor
push
sub
lcall
pop
or
mov
lea
sbb
jns
je
pop
imul
mov
shrl
xchg
push
int3
movsb
lods
loopne
sbb
aaa
xorb
and
sub
pop
cmpb
mov
out
into
push
arpl
dec
jmp
in
cli
xor
scas
add
adcl
sbb
dec
iret
popf
sbb
lods
mov
mov
int3
mov
pop
pop
call
mov
mov
push
rorb
js
fildll
loopne
mov
loope
leave
cmp
jno
gs
test
xor
mov
mov
jo
jae
out
andl
add
divl
test
jge
scas
mov
cmp
out
cmp
jb
lds
nop
std
mov
cmpsb
xchg
mov
outsl
in
in
les
mov
dec
inc
lea
xchg
dec
push
dec
lods
dec
mov
loope
pop
push
or
inc
xchg
mov
adc
popf
or
in
inc
std
nop
int3
mov
and
xorl
jbe
cs
cmp
dec
dec
movsb
je
mov
std
ret
cld
mov
push
mov
scas
mov
scas
bound
jl
inc
add
scas
rcrb
push
xchg
lods
jne
ljmp
loopne
ljmp
and
xor
inc
shll
fsubl
and
les
inc
shll
dec
or
push
mov
outsl
push
inc
out
frstor
mov
sti
dec
adc
cmp
or
rcll
fstpt
hlt
cmp
mov
sub
mov
stos
xor
int
sub
add
in
jne
negb
out
mov
mov
aas
enter
push
mov
mov
xor
mov
das
mov
mov
aaa
test
ja
dec
loope
pop
adc
adc
bound
adc
int3
jo
mov
cmp
popf
jns
cmpsl
adc
std
add
aam
sub
sahf
js,pn
inc
push
lds
dec
cmp
adc
enter
jne
xchg
stc
les
lcall
jl
cmp
icebp
stc
adcl
xchg
cmp
stc
mov
push
mov
popa
icebp
in
lea
inc
and
mov
sub
orl
scas
push
cmc
jmp
push
sbb
inc
push
sbb
outsl
mov
add
or
std
adc
and
xor
sbb
jge
jo
xchg
cmp
les
jl
mov
dec
adc
js
dec
and
in
adc
pop
or
lea
cmova
mov
pop
dec
jge
push
add
pop
aam
addr16
je
mov
cmp
sub
push
ss
push
int
leave
mov
xor
dec
leave
ja
ffree
mov
jo
test
xchg
push
mov
pop
and
shrb
call
pop
roll
and
push
sahf
mulb
xchg
xor
or
pushf
mov
lds
jae
jns
cwtl
cmc
sub
sahf
insl
nop
push
add
std
mov
test
fldenv
cmp
inc
sbb
in
adc
mov
divb
mov
int3
sbb
aam
enter
push
add
pop
and
test
sahf
fs
mov
or
cmp
dec
leave
shlb
dec
loopne
lea
inc
jb
daa
inc
loope
fs
sub
pop
lcall
push
add
inc
inc
sarb
push
inc
pusha
lcall
mov
and
dec
lds
xchg
icebp
mov
adc
leave
cmp
mov
js
loop
js
rep
sarl
js
xchg
push
lods
or
imul
pop
cmp
push
les
mov
or
jne
pop
popf
sub
dec
arpl
lods
andl
sub
std
push
cs
xor
jne
xor
int
shrd
lcall
lcall
push
sub
lods
dec
repz
dec
xchg
or
or
outsl
lods
mov
push
add
je
add
push
xlat
xchg
fcom
int
sbb
jle
sub
jo
imul
xor
cmp
sbb
or
and
notb
sub
cmp
movsb
xor
sbb
fwait
lds
xchg
int
add
ds
stos
test
into
fstpl
pushf
xlat
int
daa
pop
adc
cmpsb
sbb
add
lods
push
fpatan
and
push
sahf
push
pop
lret
mov
je
stc
and
in
movsl
mov
mov
xchg
adc
scas
mov
jmp
js
test
cs
xchg
test
mov
mov
push
push
inc
fdivs
push
subb
repz
pop
mov
and
out
pop
pop
es
movaps
xor
dec
sbb
movsb
and
xor
and
lock
sub
hlt
sarl
sub
adcb
add
cld
decl
js
lahf
add
add
or
sub
dec
xchg
mov
ljmp
aas
mov
or
sub
cli
mov
push
iret
push
cld
pop
adc
xchg
mov
cmp
popf
mov
xor
jg
rorb
clc
sarb
push
stos
into
arpl
in
and
pop
mov
mov
cmp
es
cmp
movsb
or
inc
add
ss
imul
cmpsl
adc
jge
mov
mov
dec
adc
push
rorl
lret
mov
push
and
shl
push
bound
cli
pop
mov
xchg
jbe
andb
sbb
xchg
lock
fnstcw
pushf
enter
ja
sbbl
dec
pop
pop
addr16
ljmp
jno
stos
pushf
pop
lret
pop
stc
pop
jae
cmp
std
jl
out
int
fists
negl
lods
cmp
shll
dec
in
loopne
repnz
call
adc
jae
pushf
pop
scas
add
jo
out
subl
jecxz
orl
jge
jg
pop
cli
mov
sub
jmp
movsl
leave
inc
movsb
negb
mov
call
mov
or
add
jno
negl
inc
inc
push
fs
xchg
mov
ds
mov
fwait
enter
out
pop
dec
dec
test
jmp
ss
sub
add
sbb
inc
pop
sbb
inc
push
or
fistpl
mov
push
dec
cmpsb
pop
je
and
stos
inc
sbb
xchg
add
frndint
or
sbb
sbb
lcall
insb
dec
fcoml
jle
sub
test
pop
adc
jmp
fldcw
popa
pop
movsb
aam
popf
in
movsl
movsl
rol
pop
or
jl
lret
push
inc
and
enter
xchg
jb
daa
stos
insb
mov
xor
mov
add
cltd
pusha
fldenv
mov
lret
fildll
out
push
daa
pop
adc
xlat
push
xchg
popa
dec
out
adc
cmpsb
aad
mov
popa
pop
xor
push
lods
xorl
cmp
cmp
dec
pop
mov
in
cmp
or
jge
std
shl
cld
xchg
arpl
int
and
scas
jbe
test
push
rclb
dec
xchg
cmp
outsl
lret
popa
fsubrs
fld
lret
aaa
mov
dec
inc
and
xchg
dec
out
cmpsl
roll
xchg
and
lods
insl
mov
loop
and
cltd
ljmp
cmp
jle
add
add
adc
stos
xchg
pop
loop
and
js
add
pop
adc
sbb
pop
xor
inc
or
cld
sbb
test
xor
div
sbb
mov
loop
fstpl
test
std
and
mov
sbb
jae
push
xchg
bound
divb
or
scas
jmp
mov
data16
xchg
mov
pop
insb
push
mov
push
gs
mov
imul
es
mov
loope
ret
ret
dec
lea
movnti
add
ret
jae
movsl
fidivrs
xchg
mov
lock
or
lcall
adc
mov
cmp
mov
gs
dec
push
or
sbb
ja
pop
les
sbb
nop
adc
inc
iret
loope,pt
test
hlt
in
or
scas
push
sub
cmp
cs
fcomip
lcall
incb
imul
aas
nop
js
jb
xchg
push
enter
in
vcvttpd2dqx
pop
lods
cmp
in
pop
sub
cmc
inc
push
mov
xchg
inc
dec
ljmp
xchg
mov
test
xor
test
xchg
out
add
sub
fcmovb
loop
lea
dec
mov
mov
cmc
inc
xchg
data16
hlt
sbb
lea
mov
lock
loope
fldenv
adc
insb
jbe
pop
ss
pop
aad
cmpl
cmp
fadds
sub
adc
lea
repz
std
aaa
jecxz
push
imul
inc
or
inc
loopne
lret
subb
emms
xor
mov
xchg
sti
addl
sub
inc
inc
aas
jo
lock
add
jnp
jl
fdivl
lds
jae
test
mov
in
idivl
outsb
scas
sahf
push
repz
bound
jge
xchg
insb
out
arpl
scas
mov
lock
ds
mov
cmp
and
push
mov
aam
and
jno
push
loope
and
mov
mov
jmp
in
in
inc
sub
hlt
push
xor
shll
lods
mov
inc
xchg
dec
mov
cwtl
bound
test
and
repz
movsl
cmp
mov
out
jmp
scas
out
or
iret
aam
divb
and
xchg
sti
arpl
cmc
mov
sar
mov
test
subl
inc
cmpl
imul
aad
sahf
mov
psraw
inc
push
mov
xchg
pop
jno
and
fs
mov
jae
scas
movsb
and
fcoms
and
ja
test
addb
call
fs
divb
roll
inc
in
mov
and
jp,pt
xlat
popa
jl
pop
jne
pusha
xor
into
cmp
xorb
out
mov
jmp
imull
jns
jge
je
je
xchg
rolb
fwait
sbb
or
dec
or
sub
push
cmc
pop
mov
iret
dec
inc
cmc
lock
sbb
inc
out
fstl
inc
pop
xor
std
jo
int
dec
mov
nop
mov
imul
rclb
pop
lcall
and
call
or
mov
int
aam
sbb
add
es
sbb
mov
jb
lods
inc
shll
cmp
les
pop
cmc
or
mov
inc
cltd
out
subl
popf
sbb
popa
inc
pop
dec
pop
mov
mov
rcrb
nop
cmp
lret
loopne
mov
sbb
lods
ret
cltd
inc
int
cmp
inc
jno,pt
jno
push
xchg
aad
push
lret
mov
xorb
and
mov
fsubrl
in
dec
or
pop
xor
decb
mov
dec
and
aaa
dec
roll
mov
xchg
pop
sub
mov
test
cmc
addr16
loopne
shrb
rclb
mov
cmp
adc
incb
add
xchg
inc
test
pop
xchg
xchg
lahf
js
ja
lahf
mov
jecxz
fcoml
jnp
cmpsl
push
subb
push
mov
push
ss
jbe
xchg
push
jp
sub
pop
xchg
into
and
inc
pop
mov
jle
je
xor
mov
aaa
clc
add
jbe
das
mov
adc
jno
scas
imul
sub
bound
es
hlt
aaa
and
fldl
jo
inc
movsl
mov
push
out
std
sbb
idivl
in
jns
lahf
push
lahf
jnp
nop
in
push
lcall
sbb
pop
and
dec
push
dec
dec
push
jns
loope
loop
adc
sbb
xor
fwait
in
shr
mov
ret
in
pop
mov
jo
leave
sarl
aaa
cmpsl
mov
adc
jne
adc
sti
sub
int
out
dec
dec
xchg
xchg
daa
fstp
add
mov
inc
mov
or
pop
in
sti
xchg
and
sbbl
clc
mov
xchg
mov
mov
xchg
mov
push
sbb
push
or
sahf
cli
pop
repnz
movsl
mov
dec
jle
and
into
jmp
gs
xchg
xchg
popa
sub
sar
mov
pop
push
add
lcall
or
sbb
xor
mov
stc
pop
and
cs
jg
aam
and
xlat
sub
in
inc
iret
rcrb
sahf
mov
repz
jecxz
stos
cmp
pop
out
addr16
addl
jl
hlt
jg
scas
mov
aas
xchg
and
filds
xor
out
xchg
movsb
ds
jmp
repz
mov
loope
add
push
cmp
daa
cmc
jl
sbb
and
xchg
andb
dec
mov
mov
lds
xor
mov
cltd
bound
loopne
imull
cmp
clc
mov
dec
and
mov
stos
inc
decb
add
ljmp
dec
pop
and
add
fiaddl
into
xor
div
inc
gs
stc
or
loopne
adc
and
rol
fcmovne
xlat
xor
leave
daa
xchg
les
negl
pusha
imul
cmp
inc
adc
push
cmp
scas
subb
push
ficomps
stos
lea
sub
mov
cmpl
lods
xor
out
test
fsts
dec
dec
std
rolb
movsb
clc
jo
jg
mov
rcrb
inc
mov
icebp
sub
push
mov
sbb
and
negl
inc
out
add
movsl
sub
les
push
mov
loope,pn
orl
fcmovb
movb
cmp
sbb
or
loopne
jb
imul
fwait
sub
push
fisttpll
scas
pop
pop
out
pop
int
shl
ret
add
cwtl
jge
stos
ret
jmp
call
cmpsb
push
nop
fistpl
shrl
jae
pop
mov
xor
je
push
jmp
mov
adc
and
popa
xor
icebp
jmp
inc
mov
fnsave
jecxz
in
jo
ss
mov
jnp
stos
addr16
enter
cld
pop
daa
sub
nop
sahf
push
enter
adc
jno
subl
iret
cmpsb
dec
add
cwtl
enter
call
cmpsb
cli
mov
or
mov
adc
outsl
jae
scas
sbb
aad
test
arpl
adc
mov
mov
push
add
outsb
or
push
jbe
jo
test
and
adc
dec
call
jge
ja
mov
inc
mov
gs
jae
nop
xchg
lret
and
insb
imul
insl
ret
shlb
repnz
imul
xchg
gs
shlb
cwtl
shl
jae
out
test
scas
dec
push
inc
out
push
popf
inc
es
jbe
jl
add
cwtl
push
movsl
lock
add
fld1
test
out
xchg
jmp
cmc
mov
xor
jmp
add
pusha
push
rorb
jp
stos
fsub
push
clc
pop
adc
pop
xor
cmpl
sahf
ss
push
cli
push
mov
mov
outsb
mov
cmp
test
aas
outsl
pop
inc
rorb
fisubrs
push
lret
shl
push
iret
sub
outsl
xchg
out
cld
mov
sub
adc
mov
ret
cmp
ss
cmpsl
fs
sbb
mov
repnz
icebp
ret
or
clc
imul
rcrb
fs
push
lock
inc
movsb
ljmp
jl
dec
push
imul
addb
cwtl
and
jge
add
sub
sbb
leave
scas
rcl
lds
fdivs
aam
sti
mov
int
sbb
repnz
sarb
rclb
jecxz
inc
cmpl
add
movsb
push
push
shlb
inc
dec
popl
mov
int
adc
sbb
fdivrs
js
cmp
or
repz
call
and
mov
fsubl
inc
cmp
and
mov
insl
mov
ret
int3
arpl
mov
aam
mov
aam
adc
mov
or
setae
roll
popa
adc
ret
cmpsb
mov
mov
dec
or
mov
scas
out
fcomps
fnsave
xchg
ror
or
or
cmp
lock
lahf
jle
fninit
mov
stos
mov
add
mov
rcrb
fcompl
gs
or
addl
stos
mov
gs
push
mov
loopne
push
add
sub
frstor
test
roll
and
mov
sub
test
mov
xchg
adc
mov
pop
add
pcmpgtb
xor
sub
testb
push
jns
stos
push
aaa
xchg
dec
fdivrl
or
and
out
repnz
bound
jecxz
nop
cmpsl
or
xchg
cld
jle
ja
enter
push
setl
cmp
mov
addb
add
repz
cmpsl
loopne
dec
mov
aad
aad
jne
mov
aaa
xchg
xchg
push
push
push
or
and
sbb
mov
jecxz
ss
shl
rclb
inc
movsb
cs
and
ljmp
sbb
stc
pop
out
cwtl
and
scas
aas
dec
jp
ljmp
jns
cltd
mov
out
xchg
int
sti
jle
pop
int3
dec
and
dec
sbb
iret
movsb
std
notl
mov
xor
in
jp
ret
fists
clc
mov
and
adc
cmp
push
mov
mov
lock
dec
mov
sbb
test
mov
dec
data16
repz
sub
inc
jno
push
out
dec
sub
repz
mov
fstl
mov
movsl
in
iret
shll
add
pop
dec
sbb
cmc
movsb
sahf
xor
or
mov
mov
cmp
cmp
adc
push
mov
ret
aas
sbb
hlt
fsubr
adc
stc
xchg
fcomps
jg
mov
out
movsl
inc
jmp
std
jae
cmp
pop
popf
mov
mov
mov
sbb
lods
cmovg
das
add
cli
mov
jbe
arpl
pop
daa
sti
lock
jno
sarb
lret
or
in
mov
jae
mov
cmpsl
dec
arpl
sti
dec
dec
enter
sbb
repz
jmp
mov
lcall
dec
add
and
lds
in
aas
mov
lds
adc
jnp
lds
and
insb
call
outsl
aam
pop
xor
mov
xchg
cmpb
and
sbb
test
out
jae
ret
stc
shll
xchg
pop
int3
mov
xor
and
pop
mov
stc
in
mov
cli
test
sti
pusha
rol
cltd
xchg
push
out
out
ja
repz
int3
xor
push
jmp
push
test
fsub
inc
sbb
pop
mov
pop
stc
fst
test
xchg
fisttps
jl
icebp
sbb
shlb
mov
jg
xchg
xchg
shlb
inc
add
mov
and
aaa
dec
xchg
jbe
stos
mov
cwtl
push
dec
jbe
lods
fwait
add
xor
jne
add
xchg
mov
int
fadds
xchg
and
test
fiaddl
xchg
cmp
cmp
pop
mov
orb
pop
mov
adc
fistpl
inc
dec
sub
mov
lret
std
into
mov
jl
add
mov
testb
sub
add
xchg
lds
dec
lods
repz
or
movsl
inc
mov
cs
dec
mov
sub
mov
xchg
sub
pop
mov
ja
and
sub
inc
gs
pop
shl
dec
cmpsb
movsl
in
xchg
cmp
ljmp
inc
sub
in
gs
ljmp
jp
sbb
cmpsl
dec
push
cmpb
sbb
leave
and
icebp
xor
and
int
jg
xchg
mov
fistpll
mov
dec
xchg
insb
push
xor
push
mov
scas
imul
mov
bound
pop
sub
scas
sbb
xor
test
pop
or
sbb
xor
xlat
or
cs
stos
jno
inc
ret
mov
or
jbe
lds
adc
inc
dec
call
cmp
cld
lcall
scas
popa
mov
in
dec
repz
jp
and
cmc
outsl
push
aam
mov
jbe
sbb
ss
mov
fiaddl
dec
dec
repnz
and
inc
mov
hlt
ljmp
mov
jae
test
and
push
mov
sub
xchg
lods
lea
push
sbb
insb
stos
push
cmc
jae
aaa
push
jbe
xchg
jbe
imul
pop
aaa
pop
jl
xchg
and
dec
aas
inc
mov
cmpsl
pop
pushf
mov
cmp
dec
and
mov
push
daa
adcb
fnstenv
addl
xor
cmp
dec
sti
outsb
cmpsl
push
xchg
fsubr
inc
popa
dec
fisubs
push
shlb
inc
icebp
aas
mov
in
jne
xor
cmp
into
dec
push
je
push
cmp
js
and
stc
stos
xor
sub
mov
int3
test
out
adc
out
push
mov
test
xchg
andb
ficomps
sub
pop
pushf
mov
inc
fs
shll
jmp
fs
fiadds
xor
inc
fildll
mov
icebp
cmp
inc
cwtl
popl
inc
in
les
imul
sbb
orl
das
mov
sub
push
mov
jge
mov
push
dec
pop
std
std
xchg
mov
pop
inc
push
sub
dec
adc
repz
mov
pop
and
push
dec
cmpsb
xchg
pop
and
add
jb
hlt
cmp
inc
fldenv
out
cmp
jb
jp
mov
jb
jle
shrl
fimuls
mov
inc
lret
outsl
pop
sub
test
jno
loope
repz
lret
loope
stc
or
aad
jecxz
sub
iret
pushf
inc
popf
inc
cmp
sbbb
mov
insb
push
xchg
adc
push
gs
stos
mov
inc
fdivrp
pop
aas
and
sbb
jge
jno
repnz
lcall
dec
out
imul
mov
int
mov
push
pop
xchg
stos
push
cmpsl
and
inc
aaa
inc
sub
adc
call
ljmp
mov
lahf
adc
lret
aaa
enter
fisttpll
testl
mov
pop
inc
gs
jns
push
xchg
jge
inc
test
call
loop
add
jmp
and
pop
bound
imul
shlb
xor
xor
fwait
je
int
mull
rcll
xchg
dec
add
lock
mov
add
lock
pop
mov
inc
mov
mov
pop
xor
cmp
push
jge
mov
mov
push
sbb
push
xchg
test
push
adc
sub
out
jge
mov
imul
or
and
mov
std
adc
jne
je
push
mov
adc
imul
shl
cmp
cmp
add
loop
mov
stos
hlt
pop
das
and
divl
and
das
xchg
nop
xchg
bound
mov
das
jae
add
or
lea
jg
test
mov
jecxz
or
push
xchg
idivb
push
inc
fs
imul
mov
shlb
mov
test
mov
add
inc
push
popa
addl
movsb
xchg
outsb
shlb
jle
pop
and
xchg
outsl
lcall
mov
mov
mov
push
in
pop
mov
add
jb
push
lret
sub
xor
cli
out
mov
mov
sub
ret
dec
and
icebp
in
cmc
sbb
mov
jge
popa
adc
dec
stos
cmc
negl
mov
dec
adc
mul
xor
movsl
repnz
ret
std
arpl
xchg
push
sahf
dec
mov
pop
or
cmc
in
aas
js
rorb
jnp
in
stc
inc
imulb
push
andl
push
lret
lret
add
cmpsl
lret
adc
ret
jecxz
mull
clc
sbb
xchg
rorl
inc
pop
test
add
enter
pop
call
call
loopne
dec
cmc
pop
mov
inc
aas
sti
dec
inc
test
btc
sub
xchg
nop
mov
and
pop
jl
dec
std
cli
and
xor
xor
cmpl
jg
imull
inc
mov
add
loop
sbb
xor
pop
aaa
cmp
xor
xchg
scas
lods
lcall
push
hlt
xor
push
mov
mov
xchg
dec
in
push
aad
mov
inc
addr16
dec
pop
and
and
fdivl
mov
insb
jmp
and
fdivl
mov
sbb
push
push
subb
mov
sub
test
rorl
xor
sbb
jge
push
inc
adc
mov
cmpl
sbb
flds
pop
xlat
xchg
xchg
test
cs
cmp
insb
mov
and
dec
or
push
adc
int
loopne
adc
cmp
push
adc
add
into
mov
push
scas
push
push
dec
jns
popa
mov
add
mov
mov
xchg
leave
cs
lock
data16
adc
ret
adc
cmp
out
add
shlb
lea
std
mov
inc
sbb
test
and
mov
std
movsl
pop
dec
lea
jo
scas
addr16
pop
xchg
fs
and
inc
dec
or
call
in
test
aad
mov
push
fadd
push
lret
add
into
inc
inc
add
mov
jle
fucom
and
mov
jle
andb
shrb
je
push
icebp
in
leave
push
xchg
adcb
nop
stc
in
and
lcall
fwait
data16
pusha
int
mov
nop
aam
xor
push
js
stc
data16
mov
loope
fstl
inc
stc
aad
in
repz
fadd
add
adc
fs
insl
mov
xlat
insl
push
xor
popf
add
or
adc
aas
sub
pop
mov
fildl
push
fidivl
push
mov
movsb
push
xlat
mov
sbb
jge
ret
mov
les
ljmp
push
xchg
out
mov
imul
dec
fsubl
shlb
subl
lods
cmovnp
lcall
jbe
mov
jns
scas
xor
pop
ficomps
cltd
mov
or
mov
sbbb
adc
ficoml
js
icebp
arpl
ficompl
jle
push
pop
scas
add
pop
lcall
les
dec
jp
inc
mov
inc
les
inc
imul
mov
adc
imul
loope
aas
push
rorb
cmc
push
jo
out
in
pop
add
pop
mov
mov
fidivl
call
stos
sub
pop
les
lret
cwtl
xor
jle
stos
push
dec
push
mov
pop
mov
push
lods
and
jns
out
outsl
movsb
fiadds
sub
call
xchg
leave
arpl
aam
popl
dec
mov
call
jno
xor
adc
sub
cmp
jae
in
in
loope
les
adc
outsl
mov
or
lods
sbb
rorl
mov
mov
mov
decb
enter
jb
inc
cli
shl
and
mov
xchg
adc
fcmovnbe
mov
pop
jp
lds
pop
inc
jno
push
jo
jp
inc
mov
cmp
in
and
pusha
sbb
jg
popa
cmp
sbb
xchg
inc
je
repnz
push
jg
scas
jge
iret
jne
push
inc
mov
in
or
mov
and
popa
cltd
push
cmp
sahf
orb
loopew
repnz
xlat
std
ds
push
out
xchg
add
out
addps
or
adc
ljmp
xchg
push
cmp
sub
sbb
jbe
jge
cmpsl
stc
inc
xchg
sbb
lds
jle
int
jge
movsl
push
dec
mov
mov
mov
and
mov
pop
adc
imulb
iret
push
push
and
ret
loopne
jne
stos
mov
scas
or
jne
leave
push
stos
cmp
aaa
jecxz
frstor
loope
mov
fdivrs
pop
mov
add
push
jp
cmp
adc
pop
jl,pn
jg
add
lcall
addr16
adc
mov
and
fbstp
or
rclb
cld
cltd
je
call
mov
pop
jne
fdivr
popf
mov
rcrb
clc
sbb
lret
in
ja
fwait
bound
xchg
mov
jo
movsb
aaa
add
fbld
mov
sahf
jge
cmovbe
mov
in
jns
loope
adc
test
ljmp
mov
xchg
xchg
dec
dec
sub
into
mov
sbb
push
inc
or
dec
pop
ucomiss
xchg
testb
repz
imul
push
dec
push
test
roll
scas
mov
rclb
mov
call
sub
lock
sub
lea
mov
xchg
jno
js
repnz
sub
cmp
aad
sub
adc
jbe
ljmp
sti
pop
push
lret
sarl
scas
mov
shll
dec
push
stc
int3
ja
push
movsl
out
rep
mov
cmpsb
mov
pusha
jmp
clc
loopne
jne
leave
add
sub
push
or
cltd
pop
js
in
loop
dec
loop
daa
xchg
cmc
mov
rcl
out
push
hlt
inc
mov
cwtl
cmp
mov
add
in
iret
cmp
out
fadd
mov
add
addl
cli
cmpl
jg
add
aas
rcll
hlt
negb
mov
dec
jmp
sbb
fiaddl
ss
add
incb
xchg
pop
inc
lea
pop
stos
push
in
ret
cmp
mov
push
leave
add
add
mov
dec
shl
jbe
jbe
xchg
insb
jb
sbb
jo
pop
cld
ja
dec
popa
movsb
jl
iret
ret
jmp
pusha
jecxz
in
in
lods
cltd
cmp
ljmp
jns
mov
xchg
fdivp
cltd
addr16
fistpll
aam
xchg
fsubl
aaa
aas
and
inc
cs
fsubrl
dec
adc
mov
aad
bnd
jne
jl
jecxz
leave
xor
push
pusha
jne
fsubr
mov
popa
imul
cs
lds
or
sub
push
mov
js
cltd
aad
add
dec
mov
out
adc
dec
ljmp
adc
es
mov
ret
jbe
adc
mov
lret
jge
arpl
mov
test
xor
out
jp
cwtl
ret
dec
repnz
cmc
mov
cmp
das
lock
add
sbb
sub
hlt
mov
repnz
mov
xchg
cmpsb
cwtl
andl
xchg
lods
and
out
imul
popa
dec
fadds
cmpl
push
push
push
mov
stos
xor
cmp
xchg
and
leave
ss
ljmp
lcall
int3
fs
xchg
and
lcall
inc
loope
push
mov
ret
lret
arpl
and
lock
fdivrs
sub
add
loope
rclb
aas
ljmp
js
stos
pop
xchg
in
add
xchg
or
sbb
pop
movsl
jbe
das
jae
jbe
bound
sub
aaa
pop
pushl
mov
jae
lods
sar
push
pop
xor
lods
notb
movsl
fcmovne
addr16
fmul
cltd
xor
aam
sti
sub
ror
iret
cwtl
xlat
sub
aad
out
mov
or
fwait
adc
mov
popa
les
push
jp
jecxz
aas
sbb
movsb
enter
ret
add
sahf
loope
insl
pusha
add
ds
addr16
cmp
rcll
rcrl
sti
cmpl
inc
cmc
jo
xchg
jle
mov
dec
outsl
cs
icebp
jnp
xchg
dec
outsb
fistpl
into
mov
mov
xor
xlat
add
cwtl
adc
fldpi
fcoms
mov
push
jnp
icebp
repz
xchg
dec
jb
mov
cwtl
mov
add
inc
mov
out
or
mov
dec
sbb
sub
jecxz
xor
pop
loopne
push
sbb
push
push
ja
daa
mov
push
xchg
mov
std
out
fcoml
mov
dec
xor
push
xchg
scas
push
add
pop
add
jo
gs
add
sbb
add
sbb
pop
dec
jg
pop
imul
mov
imul
add
shl
pusha
fs
sbb
or
cld
scas
fmul
out
dec
test
mov
fistpl
mov
test
stos
pushf
insb
cmpsb
js
dec
pushf
pop
mov
push
sti
inc
aad
xor
rol
sub
fmuls
lcall
mov
pop
mov
loope
fmull
cmp
mov
sub
stos
call
cmc
es
inc
xor
pop
es
or
pop
sbb
test
loopne
xor
push
negb
xchg
sub
adc
cmp
cwtl
lret
push
xor
sti
sub
cmp
jmp
pop
push
or
lahf
cmp
push
nop
jo
dec
hlt
push
test
jge
xchg
into
dec
xor
iret
sahf
lods
jno
jle
dec
mov
out
outsl
fdivs
mov
insl
aam
aam
loopne
imulb
adc
cmp
inc
mov
notl
rorb
cmp
cmp
cmp
clc
ljmp
mov
stos
adc
pop
inc
loopnew
inc
fbld
fsubl
repnz
dec
dec
jecxz
loope
sbb
lock
push
adc
sbb
inc
out
adc
daa
jl
cmp
sub
hlt
mov
icebp
les
mov
jnp
enter
adc
jno
repnz
sbb
jnp
gs
push
scas
cmp
addr16
push
scas
mov
imul
test
inc
sub
in
push
stos
psllq
xor
mov
push
jle
out
push
push
pop
adc
jl
mov
sub
add
shlb
lahf
jae
popa
inc
hlt
or
mov
sbb
sarl
pop
jg
pop
mov
jp
xor
push
pop
jmp
sbb
sahf
stos
jl
popf
lcall
add
add
sti
push
loopne
or
test
mov
mov
aaa
pop
popl
mov
lock
xchg
mov
les
ficoml
adc
pop
in
pop
xchg
push
mov
arpl
dec
dec
jge
je
inc
sbbl
data16
jo
inc
inc
cs
cmp
lock
mov
scas
mov
hlt
testl
pushf
xchg
rcll
dec
sub
or
push
jbe
push
or
pop
fisubrs
push
jmp
xchg
imul
mov
sbb
inc
lods
in
jge
adc
rclb
jp
push
orl
inc
mov
lds
and
adc
sahf
es
test
fisubrl
cld
xor
mov
mov
push
push
cmp
inc
push
or
out
ds
pusha
xor
cmp
mov
lock
stos
lret
and
cld
and
sbb
les
mov
inc
adc
dec
cmpsl
std
inc
shlb
jl
shrb
inc
or
inc
jl
shll
xchg
int
cmp
jae
mov
jbe
xchg
ds
add
sub
push
and
je
mov
xlat
js
lcall
inc
arpl
sbb
add
dec
mov
les
push
sub
push
movsb
test
xlat
mov
add
fisubs
pop
fildl
jnp
aaa
ljmp
scas
call
pop
cwtl
repz
adc
dec
ja
stos
cmpsb
in
xor
sbb
sub
aaa
push
jo
addb
pushf
cltd
jb
push
aad
ret
out
push
and
aaa
jns
cmp
jns
or
mov
repz
mov
jle
cmpsl
lds
test
rcrl
sbb
push
push
pop
fnstsw
test
dec
add
xor
notl
mov
push
xchg
movsl
pusha
lds
iret
lods
stc
lcall
test
pop
icebp
decl
ret
add
rcl
pop
cmp
cmpsb
das
test
and
push
pop
mov
mov
test
xchg
push
pop
jle
mov
faddp
jmp
push
int
pop
aaa
mov
in
cmp
adc
and
shll
repnz
sarl
push
adc
hlt
xchg
sub
sub
xlat
int3
xchg
and
sub
xor
adc
lods
jmp
or
xor
cmpsb
iret
push
mov
dec
movl
add
lea
or
shll
stc
pop
psrld
mov
sub
fldlg2
fsubrp
and
imul
int
loope
push
jp
paddq
popa
pop
add
jno
lcall
jge
out
xlat
imulb
ficoms
cmp
data16
push
test
aam
jp
mov
adc
lods
cmp
cmc
aad
flds
andb
loopew
cmp
pop
inc
js
sarb
hlt
push
mov
aad
dec
sub
and
push
push
push
bound
std
pop
add
mov
dec
push
pop
notl
add
xchg
add
push
jge
xor
sub
mov
mov
push
stos
jle
out
xchg
iret
out
cmp
sub
pop
sub
lahf
adc
mov
mov
mov
xchg
push
jl
sahf
sbb
rcrl
mov
mov
xor
mov
cs
idiv
push
mov
popa
inc
nop
mov
sbb
mov
insl
adc
out
lcall
or
push
cmc
xchg
jge
push
inc
stos
or
adc
imul
addb
lea
sahf
hlt
dec
mov
mov
addr16
xchg
data16
sbb
adc
stc
imul
mov
jb
mov
adc
mov
sub
adc
imul
inc
repz
push
les
lods
mov
cs
cmc
pop
repnz
repnz
imul
jb
call
test
sub
mov
xor
rorl
test
fwait
cmp
addr16
fistps
sar
mov
cltd
outsb
repnz
add
das
gs
pop
xchg
outsl
and
mov
fucom
sub
rcl
fcmovbe
lea
insl
cmp
movaps
mov
add
push
xchg
xchg
jge
nop
cli
das
pop
sub
cmpl
arpl
loop
rorb
add
add
data16
sub
outsb
inc
mov
inc
xchg
or
cmp
das
pop
fnstsw
addb
cs
adc
or
cmpsb
xchg
imul
cmp
and
xchg
mov
add
dec
clc
jmp
into
push
cmp
xor
and
jp
jae
adc
je
jge
xor
scas
dec
enter
inc
push
arpl
sbb
jbe
add
inc
push
push
icebp
pop
dec
push
jmp
mov
mov
rorb
das
arpl
sbbl
xchg
insl
clc
xchg
flds
jl
xchg
xor
test
iret
fs
movsl
push
fucomi
dec
mov
add
fdivr
inc
xor
xchg
dec
fldt
fcmove
arpl
ljmp
lret
mov
pop
neg
dec
jl
xor
sbb
pop
jp
das
shll
pop
rol
fisttpll
into
pusha
scas
and
les
fisubl
pushf
and
lret
sub
mov
lock
mov
jecxz
jp
je
popf
stos
mov
cwtl
lret
dec
inc
fcom
xor
sub
nop
cld
test
pop
orps
test
cmp
push
xor
insb
data16
pop
cmp
aad
pop
adc
lock
stos
jnp
dec
push
test
inc
pop
jl
pop
ja
and
xor
lahf
mov
xor
movsl
int
ret
cli
cld
es
sbb
fcomps
insb
push
pop
lret
jo
sbbb
movsl
lahf
push
fwait
adc
xlat
test
sbb
xlat
mov
mov
inc
sub
adc
mov
aam
test
sbb
lea
cmp
insl
or
adc
shll
arpl
call
sbb
stc
xorl
and
sub
cld
movsb
or
jecxz
xchg
pushf
jb
adc
shll
xchg
cs
xchg
int3
push
dec
dec
icebp
mov
mov
add
aam
pusha
pushf
xor
cmp
das
mov
popf
mov
sahf
inc
mov
sbb
jmp
inc
aam
mov
loop
inc
adc
sub
pushf
and
lcall
xchg
xor
dec
add
xchg
outsl
mov
jp
mov
movsb
std
movsb
cwtl
mov
lcall
jnp
jo
arpl
in
mov
lea
and
sti
jmp
les
inc
add
ret
fs
or
fwait
nop
lahf
pushw
insl
pop
aaa
xor
sti
cs
fcmovnu
mov
scas
mov
js
push
mov
push
cld
mov
add
sti
jg
out
mov
mov
shlb
fisubrl
shrl
jle
cmp
in
test
dec
cld
push
mov
in
fs
out
sub
insl
or
jp
arpl
xchg
add
sti
add
cmp
invd
jno
sub
insb
leave
pop
sbb
pop
or
iret
ret
or
popa
jno
popf
dec
jb
loopne
sub
cmc
cmp
and
fdivrs
push
xor
pop
cmp
or
xchg
sub
inc
cmpsl
mov
bswap
jae
add
mov
lret
mov
xor
sahf
push
jno
pop
push
pop
pop
call
xlat
xor
notl
sti
add
sub
cwtl
jnp
mov
iret
pop
cmpxchg8b
mov
pop
repz
xor
xchg
ljmp
lcall
std
in
or
fsts
lret
cld
xor
loope
ficoms
mov
dec
fldcw
xchg
in
dec
mov
in
ret
sub
xchg
push
rcl
mov
sbb
ja
add
loope
xor
jg
cmp
jno
pop
xor
xchg
pop
sbbl
es
and
repnz
shl
inc
bnd
fs
adc
js
fs
gs
iret
adc
mov
and
sub
sbbb
into
jle
ficoml
daa
fbld
or
nop
aaa
imul
in
aas
inc
popa
ret
jns
push
sbb
push
sbb
nop
mov
xchg
mov
pusha
fimuls
faddp
stos
lock
mov
fnstsw
cmp
xchg
xchg
cwtl
std
push
dec
jmp
cli
das
adc
lock
popa
lret
mov
dec
popa
pop
jge
pushf
outsl
xor
insl
mov
or
stc
scas
mov
je
imul
fwait
push
clc
std
pusha
lods
in
xchg
jne
pop
gs
xchg
jns
adc
daa
imul
sub
add
cmp
push
ja
loopne
and
sbb
pop
mov
sub
and
daa
stc
shrl
jge
push
pop
push
inc
enter
cmp
xchg
pop
add
jo
arpl
cs
xchg
neg
stos
pop
or
lea
xchg
scas
mov
push
push
lcall
mov
mov
fists
xlat
add
data16
jmp
dec
cmpsl
movsl
test
mov
out
push
aad
sbb
mov
push
fcoml
sub
cmp
jb
inc
cmp
adc
mov
aaa
mov
xor
inc
hlt
jp
fwait
dec
scas
push
bound
pop
addb
or
stc
ljmp
xor
aas
jae
add
mov
leave
test
adc
fnstsw
mov
out
or
enter
lds
out
scas
jbe
js
shl
sbb
mov
in
jo
sahf
cmc
dec
mov
jbe
xchg
or
in
test
stos
push
push
sub
xchg
add
jmp
loope
pop
xchg
jp
adc
mov
xlat
dec
stos
and
jno
imul
dec
lds
dec
jge
sub
mov
or
or
arpl
jecxz
sub
mov
sub
or
sbb
testb
xchg
dec
scas
dec
loopne
mov
xchg
xor
hlt
es
ret
or
hlt
loope
notb
shll
dec
pusha
cmp
fucomi
shll
jns
xor
xchg
aad
xlat
mov
or
and
adcl
je
or
std
lods
mov
or
and
add
cmp
fisubrs
sti
pop
fnsave
andb
scas
ficompl
and
mov
jmp
mov
loop
pop
inc
fnsave
fstl
dec
cltd
in
mov
mov
shrb
pop
xchg
dec
pop
push
xor
mov
movsb
into
and
popa
and
stos
inc
divl
adc
pusha
cltd
aaa
jns
cmpb
xchg
lds
push
data16
xlat
pusha
repz
lahf
jnp
cmc
nop
cmpl
sub
pop
or
rol
mov
or
or
jmp
mov
ds
pop
aam
mov
bound
lahf
inc
test
es
sub
outsb
fldl
bound
or
jnp
inc
adc
push
lock
cmp
push
mov
xchg
sub
push
inc
push
cmp
mov
pushf
mov
cltd
aas
jne
inc
idivl
and
dec
lock
imul
leave
add
dec
add
mov
call
jle
xchg
inc
cmp
add
sbb
fists
orl
cmp
mov
dec
leave
jne
inc
mov
loop
mov
xchg
sub
imul
mov
sbb
push
push
sub
lahf
jp
sub
aam
je
cmp
js
xor
sub
mov
cmp
ss
sti
inc
or
adc
faddl
cmp
jae
pop
xlat
test
pop
lcall
mov
push
mov
jb
rcll
push
outsl
push
out
or
push
add
ficoms
xor
insl
fadd
push
sbb
aad
xor
xchg
lods
jmp
shrl
fwait
adc
cli
movb
mov
in
cltd
rsqrtps
mov
outsb
push
mov
fs
xor
cmpsb
shll
insl
mov
pop
imul
test
xchg
xchg
pop
pop
xor
fwait
ja
xchg
in
sub
sub
xchg
movsl
shl
push
daa
je
cmpl
les
and
dec
or
mov
call
lods
or
out
insb
rcr
cmc
adc
dec
sub
or
mov
mov
xchg
mov
hlt
fsubp
fstpt
xchg
stos
jle
dec
mov
sbb
rcl
mov
push
test
icebp
fnstsw
sbb
inc
pop
repz
push
ja
andl
add
xor
out
loopne
mov
rcrb
test
lahf
jmp
jg
je
mov
jne
out
or
add
mov
jne
sahf
cwtl
xchg
mov
mov
adc
dec
test
sub
ret
cwtl
in
push
and
test
neg
cmp
lods
cmp
mov
fwait
inc
ret
fs
push
cmpsb
aas
popf
lds
adc
and
jg
xor
lret
jo
mov
jmp
popa
iret
in
mov
sbbl
aas
add
mull
inc
sbb
repz
dec
xor
lods
test
adc
scas
xor
hlt
out
cltd
sub
sbb
repz
aad
push
add
jg
inc
xor
dec
pop
jno
or
test
or
and
subb
loope
push
pop
lods
in
push
gs
add
aad
mov
loopne
icebp
inc
push
xchg
mov
inc
int
sbb
and
jmp
sub
enter
add
pusha
stos
mov
shrl
or
test
test
xchg
xchg
lods
xor
mov
add
andl
inc
push
or
mov
fldl
loopne
enter
out
out
fwait
orl
inc
inc
xlat
jg
in
shl
push
mov
enter
mov
leave
or
sahf
aam
ds
xchg
cmp
or
or
lods
outsl
arpl
xor
xchg
and
shll
mov
daa
ljmp
loope
inc
mov
mulb
and
int3
subl
popf
cwtl
mov
sub
xchg
out
mov
fs
gs
out
mov
and
cmp
push
aaa
xor
or
adc
push
adc
lock
sahf
mov
dec
inc
outsl
pop
out
cmpsb
pop
in
scas
mov
cmp
jns
push
call
mov
dec
ds
sub
mov
cmc
inc
cld
ja
and
lods
outsb
pop
and
insb
inc
mov
jle,pn
addr16
add
cltd
lea
cltd
enter
ja
adc
lods
cwtl
cli
mov
pop
stc
ljmp
xchg
dec
int
push
cmp
test
ss
int3
mov
adc
lret
int
in
sahf
and
aaa
and
mov
ret
arpl
mov
imul
inc
lods
fisttps
pushf
dec
popf
jns
inc
aam
stc
out
test
pop
repnz
or
loop
xchg
fs
je
sub
dec
scas
repz
add
lcall
pushf
or
jne
jns
cmc
hlt
mov
jbe
imul
jle
out
fcompl
cs
pop
lret
loope
add
push
and
pop
xchg
cltd
test
pop
lods
jmp
cltd
inc
cld
inc
bound
in
pop
nop
sti
push
dec
enter
shr
or
mov
push
mov
and
jg
addb
cwtl
mov
cmp
stc
movsl
mov
or
lcall
xor
cmpsl
push
cmpsl
movsb
xor
lret
mov
cltd
dec
shll
cmp
mov
repz
loopne
inc
xchg
mov
stos
fisttpl
lods
push
in
jne
adc
mov
xor
lahf
pop
adc
lods
jmp
stc
pop
cld
pop
mov
clc
mov
xor
xchg
cs
pushf
rcrb
outsl
lods
imul
and
pop
jecxz
dec
cmp
xor
aad
sub
std
mov
out
pop
sbb
mov
xor
mov
xor
cmp
jecxz
cli
mov
imull
shll
xchg
leave
ds
into
mov
sbb
or
clc
test
shlb
sbbl
xor
inc
clc
mov
out
and
inc
shll
iret
jp
and
mov
les
repz
in
mov
movsb
mov
int3
jno
es
fsub
add
xor
je
notl
aam
test
cmc
adc
inc
es
mov
in
pop
fldenv
enter
les
mov
jp
cmp
xchg
int
push
out
ljmp
adc
and
fwait
dec
imul
imul
bsf
int
inc
mov
sbb
iret
mov
scas
jmp
aas
jl
xchg
inc
adc
cmpsb
cmpsl
les
jno
xor
mov
push
cltd
xchg
ja
out
js
add
jno
out
cmp
enter
sbb
out
jle
sub
push
inc
mov
sub
bnd
lock
inc
jg
enter
xchg
jb
mov
icebp
sarb
fwait
insb
mov
int3
adc
aaa
icebp
push
inc
cli
std
add
js
sbb
mov
js
push
push
jp
adc
or
sbb
dec
repnz
dec
lret
fwait
inc
clc
outsl
aaa
push
pushf
test
sub
push
jecxz
lods
adc
xchg
pop
sar
sub
cmp
movsb
aas
inc
lock
mov
xchg
mov
paddq
xchg
fmull
add
push
mov
dec
cmpsb
cmp
fs
mov
dec
and
sbb
data16
and
fisubrl
decl
je
lret
lret
repz
js
repnz
inc
lret
xchg
enter
mov
adc
dec
loope
and
lcall
xchg
stc
add
dec
stos
test
pusha
outsl
add
push
shll
popa
pop
mov
inc
mov
clc
mov
incb
and
out
ror
shlb
ja
or
data16
cmp
jnp
adc
xchg
ljmp
push
aas
imul
cmp
jge
push
or
pop
je
inc
cmpsl
out
sbb
xor
in
call
aad
push
mov
les
pop
movl
pusha
jp
outsl
pop
push
hlt
xchg
fs
push
xor
mov
pop
cltd
mov
int
pop
mov
bound
fildl
aad
pop
pop
rcr
outsl
out
push
fstps
jbe
add
rorl
inc
shll
fidivs
pop
cld
lahf
scas
jmp
mov
jo
jmp
cmp
std
daa
or
jle,pn
xchg
cmp
add
push
popa
push
push
or
pop
mov
adc
shl
mov
xor
cs
lods
aas
jg
or
sti
cs
iret
test
cmp
pop
jecxz
insl
dec
hlt
lods
xor
lret
cmpl
jl
loop
xor
sub
mov
stos
mov
inc
fidivrs
sub
inc
scas
dec
push
adc
add
leave
mov
push
xchg
shl
mov
insb
inc
lds
repz
ss
stc
cmp
sbb
and
lods
cmp
das
inc
push
mov
lret
fnstsw
fs
cmpsb
sbb
rorb
adc
xchg
xor
sbb
cmp
push
popf
clc
fmuls
and
adc
pop
lret
jo
sbb
mov
xchg
sub
icebp
popa
mov
lret
push
inc
adc
sub
aaa
lret
xor
mov
sub
pop
into
cltd
call
push
out
dec
es
cmp
ds
in
pushf
inc
push
das
aam
xor
cltd
aam
mov
jg
sub
icebp
fsubl
enter
ret
and
stc
shrl
add
nop
notl
imul
dec
ret
xor
fidivrl
pop
stos
jmp
xchg
jae
iret
leave
js
scas
mov
sbb
addr16
mov
xchg
call
mov
mov
dec
ja
dec
and
test
in
std
xor
and
ficoml
add
das
sbb
xorl
das
sbb
test
xor
pop
outsl
fiaddl
stos
sbb
stos
sbb
hlt
and
dec
pop
add
fsubl
rcl
pop
or
add
roll
sarb
cltd
push
lahf
addr16
xchg
inc
xchg
test
xchg
test
or
push
lret
xor
iret
push
pop
fnstsw
pop
jecxz
adc
stc
fs
push
mov
cmp
test
testl
decl
or
enter
insb
or
jmp
ret
out
add
and
leave
jo
sbb
shl
in
icebp
fwait
call
in
push
pop
mov
and
cltd
addb
inc
pop
and
xlat
fimuls
sti
xchg
jbe
xchg
ja
xor
mov
xor
cli
pop
sbbl
shrb
pop
loope
test
icebp
inc
adc
dec
and
imul
pop
inc
pop
pop
and
pop
out
pop
dec
jmp
cmp
loop
dec
jg
mov
xchg
mov
jno
cmp
jnp
ret
dec
lcall
jge
icebp
ljmp
mov
fisubrs
cwtl
mov
loopne
xchg
cs
mov
fistpl
pop
dec
mov
add
push
inc
mov
cli
das
lds
insl
call
add
mov
call
cmpsl
addr16
and
lret
inc
jmp
cs
mov
dec
fnstcw
andb
dec
xchg
or
dec
in
push
lock
out
xor
add
pop
and
push
or
xor
inc
in
fistps
test
lcall
andb
xchg
or
and
ljmp
sub
sbb
mov
mov
mov
lods
nop
and
stc
jbe
lea
cmp
outsl
jns
dec
movsb
loopne
addb
pusha
xchg
dec
mov
add
sbb
addr16
pop
lock
in
aam
int3
pop
xchg
ret
inc
inc
push
pop
push
test
sub
and
mov
mov
scas
rcrb
mov
in
inc
xchg
pinsrw
mov
aad
xchg
push
xor
sbb
aam
adc
inc
out
sub
cld
xor
int
cwtl
and
and
cmp
jae
pop
fwait
mov
rorl
pop
mov
jp
fmull
fidivl
cld
gs
icebp
adc
xchg
xor
movsl
pop
and
sub
or
shll
call
inc
or
add
lcall
loope
cmp
leave
inc
mov
and
xor
and
mov
lea
loope
or
inc
lods
push
rclb
xchg
aas
adc
add
cmp
mov
mov
xor
or
mov
lahf
in
sub
sbb
sub
adc
rcll
cmpsl
mov
cmpsb
mov
mov
fldenv
pop
mov
jno
mov
dec
arpl
xor
icebp
test
adc
mov
mov
in
mov
cltd
dec
sub
mov
push
cmp
push
cmp
adc
ss
xor
jae
cwtl
aaa
cmp
ffreep
hlt
cmp
popf
mov
fidivl
mov
mov
in
pop
aad
sar
rorl
sahf
es
in
ss
inc
inc
fisubl
in
add
jge
roll
push
aam
push
cmpsb
xor
ljmp
loop
mov
test
imul
or
jb
xor
les
fstl
loope
roll
mov
les
test
cwtl
rcrb
loopne
movsb
mov
popa
mov
ljmp
xchg
adc
out
mov
mov
xlat
mov
pop
int
fadds
fdivl
xor
pop
loopne
dec
pop
cwtl
lahf
sbb
cli
sbb
mov
std
dec
cmc
leave
popa
daa
lock
addb
mulb
adc
sub
push
inc
adc
cmp
push
jg
push
xchg
push
add
aaa
jne
stc
fs
in
pop
xchg
mov
sbb
fcmovbe
jns
xchg
push
cmpb
push
mov
mov
cmpsb
or
lods
popa
ror
in
cmp
call
call
pop
mov
mov
xor
pop
mov
mov
insb
mov
stc
jge
mov
push
call
lods
mov
repnz
rclb
sub
or
push
mov
and
inc
fwait
mov
lret
push
and
adc
clc
ss
xchg
jp
push
pop
fsub
xchg
dec
icebp
les
outsl
jge
cmp
sarb
jns
call
and
dec
divb
int3
out
mov
sbb
mov
mov
sahf
bound
stos
xor
shll
and
xchg
xchg
sub
xchg
push
dec
fcoml
cld
ret
xchg
out
mov
sbb
popf
or
negl
xchg
cmp
clc
pop
adc
in
lcall
dec
hlt
xchg
enter
insl
adc
jle
xchg
aad
repz
inc
xchg
fsubrl
inc
aad
test
sbb
enter
or
sub
fsubrl
inc
popf
jp
mov
pop
fimull
iret
or
and
lods
bound
outsl
idivl
shll
mov
test
cmpsl
jmp
xchg
or
out
sub
in
lods
push
in
jecxz
cltd
jno
dec
fdivp
xchg
xor
popa
andl
jmp
jnp
cmp
mov
int
mov
inc
xchg
mov
pop
add
pop
std
bound
je
dec
xchg
add
ljmp
loope
jp
mov
xchg
add
rolb
adc
cld
inc
repz
pop
add
outsb
mov
xchg
mov
sub
lcall
push
bound
int3
or
xlat
test
mov
mov
andl
js
sbb
pop
mov
mov
adc
fildl
lea
xchg
insb
scas
arpl
mov
shl
test
fisttpll
test
sub
fwait
or
stos
incl
inc
mov
addl
or
add
add
or
lahf
inc
jae
imul
mov
loope
stos
in
pop
lds
fldcw
shrl
test
jge
lret
adc
inc
outsl
cwtl
test
in
cmc
cs
out
mov
push
push
popf
add
and
jb
jle
lods
cmp
sbb
mov
mov
out
mov
add
repz
mov
imul
jns
cwtl
repnz
cltd
xchg
js
adc
insb
mov
sbb
mov
mov
adc
xchg
inc
sbbb
xlat
xor
and
push
dec
cmp
insl
movsb
mov
sub
cmpsl
stos
jno
and
and
insl
mov
out
jb
xchg
jp
popf
dec
sub
pop
jp
mov
ret
inc
push
mov
or
xor
sub
pushf
sub
inc
mov
lret
imul
pop
loope
add
lods
in
and
push
pop
pop
sbb
xchg
out
test
mov
loope
arpl
mov
int3
mov
mov
fsts
nop
cmpsb
enter
mov
jo
std
push
test
mov
and
push
lret
cmp
push
ss
jae
dec
xchg
scas
xchg
shl
aaa
das
daa
mov
push
sub
lds
push
arpl
mov
add
stos
mov
lods
fbstp
popa
push
push
add
insb
shr
sbb
sbb
and
push
adc
mov
aam
test
add
xchg
fs
jno
and
sub
sti
leave
jae
jae
scas
cmpb
test
mulb
or
cmpsb
lods
cmp
out
mov
sub
lahf
mov
ror
pop
fisubs
pop
cmp
aaa
lcall
jl
pop
loope
rolb
stc
inc
push
lret
push
jns
pop
push
aas
into
insl
or
setp
push
sub
pop
and
sbbl
dec
jp
push
push
jb
clc
xchg
jge
mov
js
and
and
add
mov
xor
insl
cmpsl
pop
xlat
imul
xchg
pop
add
inc
imulb
ret
sbb
je
movsb
xchg
frstor
subb
pop
sbb
movsb
sbb
xchg
lods
push
inc
mov
pusha
lds
dec
adc
in
fwait
xchg
mov
or
mov
rcll
sub
lds
xor
loop
add
je
cmp
adc
fadds
adc
cld
cmpl
shll
out
pop
xor
dec
mov
gs
xor
rol
ret
int3
push
jecxz
int3
xor
hlt
sub
fwait
nop
ljmp
out
lret
aaa
mov
test
mov
cli
mov
movsb
dec
movsb
xchg
add
mov
les
gs
cmp
pop
setb
js
test
and
add
and
add
and
nop
inc
add
dec
lahf
ret
or
pop
xor
push
jnp
in
pop
mov
stc
adc
add
fwait
mov
add
mov
enter
fwait
ljmp
out
dec
into
push
loope
mov
dec
mov
popa
push
jae
jnp
fimuls
imul
xchg
test
cltd
insl
push
test
push
in
imul
int3
sub
inc
adc
cmp
outsb
sub
cmpsb
sti
jnp
lahf
stc
je
rcpps
test
cltd
fcoml
rclb
xchg
pop
je
test
mov
cli
mov
int
pop
sub
push
lcall
lcall
shlb
cs
jae
loop
add
adc
cmc
insl
sub
or
pop
mov
pop
rcll
mov
testb
xchg
clc
sar
jno
iret
mov
push
rcl
push
lahf
outsl
push
aas
ljmp
mov
test
dec
ret
mov
sbb
xor
and
jo
rorb
push
rorb
xlat
xor
jnp
in
test
pop
inc
shr
aam
int
dec
inc
or
inc
push
mov
adc
bound
and
test
test
add
js
xchg
imul
jo
mov
pop
inc
dec
mov
dec
bound
push
jb
dec
dec
cs
mov
cs
nop
outsl
loopne
sub
out
jno
cmpsl
fidivrs
sub
sub
dec
std
rorl
ret
lods
dec
loope
pop
adc
mov
sti
inc
lods
les
loope
sub
ret
add
jo
xchg
sbb
inc
mov
in
or
jmp
push
fwait
add
cmp
sub
adc
sbb
imul
pop
je
outsb
sub
outsl
jp
and
jbe
aaa
andb
in
jge
push
push
push
les
fcmovb
imul
xorl
push
lret
jge
das
aam
mov
gs
lods
daa
dec
fnsave
xor
out
pop
or
clc
pusha
mov
and
arpl
sarl
iret
daa
leave
test
fsubrl
cmp
pusha
xchg
rcrl
push
dec
cltd
in
call
rolb
in
in
jmp
dec
cmp
fwait
outsl
push
push
sub
xchg
cmp
rclb
and
or
stc
das
call
cwtl
imul
int3
push
ret
ds
jl
lds
outsl
push
mov
rcl
mov
std
into
xchg
mov
div
push
pusha
iret
cmp
add
outsb
ss
pop
insb
inc
fwait
mov
call
popa
out
mov
pop
pop
fldt
mov
mov
jne
cmp
jo
push
loope
js
movsb
test
stc
loop
xor
dec
dec
mov
add
mov
repnz
push
out
ds
out
stc
mov
mov
push
lret
jle
insl
cmp
punpckhwd
jne
jecxz
and
push
mov
or
inc
aaa
xor
pop
mov
sbb
dec
inc
imul
into
xchg
dec
cwtl
leave
sub
into
out
ss
push
pop
mov
jmp
adc
push
push
repnz
jo
or
das
popa
imul
in
sbb
push
fnsave
xor
aaa
lcall
mov
adc
jecxz
sbb
sbb
shll
bound
push
push
int
xchg
ja
loopne
mov
jae
mov
aas
ds
xchg
into
out
leave
jg
pop
pop
jge
popl
std
mov
add
push
les
mov
push
subl
jp
ret
fadds
fst
xor
add
pushf
in
xor
ret
les
add
mov
dec
test
push
mov
mov
xchg
out
sahf
and
jne
testb
enter
lods
ror
sbb
adc
subl
cmpsb
insl
push
popf
jp
mov
mov
pop
leave
adc
sbb
shll
push
mov
jne
hlt
aad
push
sti
rcr
cmpsb
mov
pop
and
jne
inc
cld
rcl
sbb
and
push
gs
mov
stos
or
rclb
cmp
ljmp
popf
sarb
arpl
pop
cmp
cmpb
add
cltd
ret
jp
sub
dec
pusha
popf
adc
pop
dec
adcb
add
mov
mov
add
das
mov
in
fwait
leave
scas
sbbb
dec
cmp
pop
shll
jmp
cmp
cmp
es
or
aas
pop
cmp
xor
push
jecxz
stos
jp
push
pop
mov
arpl
add
test
cmp
xor
cmp
sarl
xor
repz
lret
out
clc
in
push
lock
clc
das
mov
fimull
das
daa
cld
cmp
push
into
sbb
xchg
adc
or
nop
pop
xor
jle
repnz
or
pop
xchg
sub
in
int
gs
enter
popa
sahf
into
jns
pop
shrb
and
mov
mov
mov
imull
adcl
adc
inc
cmc
pop
adc
imul
dec
push
outsl
lcall
pop
mov
sti
pop
insl
in
jae
inc
aaa
jl
push
xchg
iret
and
mov
pop
shll
pop
pop
jne
sqrtps
pusha
push
push
lcall
test
stc
xor
or
addl
test
rcrl
sahf
jle
ret
push
data16
mov
jecxz
and
out
es
jns
and
add
xor
push
aam
cmpsb
xchg
jmp
aam
imul
negb
loop
imul
jne
mov
inc
pandn
jp
in
adc
leave
mov
aad
lods
adc
mov
jl
inc
imul
fwait
sub
cmp
aad
sub
data16
cs
mull
or
stc
enter
xchg
mov
pop
enter
xlat
repz
mov
jg
xchg
out
mov
test
fs
push
sbb
daa
out
fcom
mov
mov
adc
inc
mov
test
push
jmp
dec
ja
lcall
fidivs
leave
jae
jbe
jmp
lock
sub
adc
cmpl
mov
das
pop
sarl
subb
adc
ljmp
enter
cmp
or
pop
shll
ret
movsb
movsb
cmpsl
lods
jmp
aam
xchg
por
vpunpckhqdq
lds
insl
push
dec
out
jge
ret
xor
or
add
push
arpl
mov
dec
or
add
sar
mov
push
adc
mov
mov
loop
arpl
adc
adc
push
mov
inc
aas
jl
adc
mov
dec
ljmp
sub
outsl
cmp
in
add
stc
mov
stc
push
fs
push
or
lock
adc
lahf
loope
cltd
or
imul
in
and
sbb
lock
sbb
jmp
jne
gs
call
adc
mov
es
cmc
imul
mov
inc
setns
xchg
and
push
stos
je
outsb
push
in
enter
mov
addr16
sahf
xchg
enter
push
js
stos
mov
mov
pop
repnz
pop
jg
jno
icebp
push
loopne
out
and
or
jl
push
daa
aaa
cmp
jecxz
ret
hlt
loop
mov
push
sub
push
std
ret
cmc
fwait
xlat
std
pop
adc
xor
sbb
fsts
pop
ret
and
call
aam
or
jbe
inc
sub
out
in
inc
adc
inc
pusha
jle
mov
ja
mov
pop
loope
cmovg
andl
fdivrp
dec
adc
call
cs
xchg
lret
aam
popa
jmp
std
mov
push
fidivrs
inc
cmc
and
mov
cmp
adc
dec
or
xchg
repnz
stc
imul
and
push
jp
fwait
sub
push
sti
imul
dec
xchg
ja
cld
adc
cmp
int
push
push
mov
cmp
add
aas
cltd
inc
push
cmp
mov
adc
inc
stos
xor
jae
shl
test
fwait
push
inc
pop
cmp
syscall
test
pop
pop
inc
fstp
jbe
popf
cs
jecxz
or
and
sbb
xor
fs
outsb
push
mov
sbb
xor
mov
sub
lods
jo
stos
fiadds
int3
out
inc
push
adc
loope
ljmp
in
adc
stc
ja
inc
sub
pop
fs
movsb
add
out
out
push
std
sbb
test
out
pusha
sbb
inc
cli
imul
dec
fstl
repnz
inc
xchg
daa
push
iret
push
push
loopne
sbb
mov
dec
arpl
jbe
lods
add
xlat
cmpsl
mov
cld
loope
xchg
xor
mov
mov
fsts
inc
scas
test
lods
int
out
push
sbb
test
cmpsl
mov
icebp
push
fldcw
mov
sub
pop
add
fildl
jmp
xchg
jne
xchg
loop
lods
inc
lea
lods
ljmp
pcmpeqw
xchg
lret
fisubrs
insb
push
mov
adc
les
stc
push
aas
dec
lcall
test
dec
jge
out
dec
cwtl
adc
pop
mov
xchg
jecxz
lahf
insb
mov
sub
bound
and
movsb
jbe
loopne
jle
inc
add
cs
add
test
pop
xchg
sti
dec
call
or
in
and
shl
in
push
sbb
jg
xchg
mov
pop
sbb
popf
inc
sub
lods
sub
pop
adc
mull
jns
mov
bound
scas
jp
pop
pop
pop
lods
mov
jp
sub
adc
hlt
dec
xor
sbb
sarb
out
push
lret
cmp
mov
stc
popf
add
cwtl
daa
inc
cmp
movq
push
cld
dec
call
sahf
shll
jge
sarl
pop
pop
inc
inc
fcompl
or
shl
pop
jns
and
ljmp
dec
loop
dec
push
jo
dec
stos
fimuls
js
sub
scas
add
lret
xchg
test
pop
aaa
jae
addb
das
sbb
sbb
jge
sti
js
pusha
je
scas
xchg
fidivrs
cmp
fwait
sbb
or
scas
aam
and
cmp
cltd
popf
xor
cmc
xchg
mov
and
inc
pusha
pop
and
mov
dec
xor
fwait
outsl
mov
ret
test
add
mov
push
fists
xor
mov
int3
outsl
lret
dec
movsl
pop
mov
fsubs
jle
and
fs
xlat
icebp
out
sub
ds
push
dec
outsb
push
test
faddp
xchg
adcl
mov
pop
sbb
and
stc
insl
lock
jbe
std
xor
mov
es
insl
push
int3
xchg
pop
cmp
mov
adc
inc
in
inc
andb
cmpsb
ds
gs
jne
inc
jg
pusha
in
dec
mov
inc
scas
out
stos
mov
test
std
jno
xchg
sbb
into
cmpsl
dec
mov
pop
fwait
loopne
setp
lods
xor
xchg
cmp
dec
lret
outsl
hlt
repz
jne
xor
push
cmp
inc
xor
out
adcl
push
stos
dec
cmp
mov
js
stc
dec
icebp
sub
aam
lahf
jl
jo
push
call
sub
ret
cmp
hlt
data16
stos
fwait
mov
int
stc
mov
xchg
adc
daa
data16
lahf
out
or
test
sbb
xor
sbb
cmp
inc
and
insb
lahf
test
scas
jns
loop
mov
clc
in
mov
mov
and
cmc
aad
jmp
sub
jl
add
mov
repnz
xchg
mov
mov
sub
pop
push
sub
and
or
lret
lret
pop
sbb
incl
sub
dec
loopne
pushf
ret
push
ret
into
mov
addr16
cs
mov
arpl
ss
push
dec
movsl
out
or
push
push
test
xchg
inc
mov
pop
xchg
mov
hlt
addr16
rol
mov
cmpl
xchg
fstp
sub
outsl
jns
cltd
fists
lcall
mov
out
mov
icebp
mov
sbb
mov
or
pop
enter
and
jno
pushf
scas
push
push
cwtl
xchg
loope
push
scas
sbb
int3
xor
xchg
fcomps
mov
add
sarl
mov
jbe
addr16
jb
xorl
divb
jmp
iret
push
mov
repz
mov
cmp
xchg
sbb
pop
orl
rcl
in
mov
mov
dec
mov
into
sub
loope
jae
jne
cmpsb
sbbb
pop
pop
push
inc
push
cmpsb
push
hlt
fwait
dec
xlat
stos
out
cmp
push
mov
into
lods
jecxz
lods
lcall
into
rcll
gs
sub
scas
ja
mov
ret
in
sti
sbb
push
shrl
ss
mov
mov
sarl
jl
shlb
cmpsb
pop
and
jge
mov
rol
xchg
outsb
sub
sub
and
cwtl
push
push
mov
sub
xor
loop
mov
mov
or
loop
or
fstps
xchg
pop
pop
mov
mov
rclb
pop
lea
push
xchg
adc
adc
push
mov
scas
push
divl
or
adc
dec
je
adc
xchg
movsb
test
sbb
std
mov
out
cmpb
cs
jnp
adc
and
movsb
mov
add
bswap
icebp
mov
enter
add
stos
fdivrs
or
dec
lret
lcall
fsubp
inc
mov
paddsw
cmp
ja
push
mov
movsb
dec
xchg
addr16
jle
or
js
jno
testb
and
sbb
mov
addr16
dec
push
push
xor
xchg
fdivrl
cmp
dec
lods
cltd
aad
mov
pop
lods
fnstcw
shlb
js
sbb
fsts
iret
bts
jp
jecxz
aaa
mov
fldl
sbb
pop
insl
test
jne
xor
xor
imull
xchg
int3
insl
iret
shr
jmp
daa
lcall
mov
xlat
out
cwtl
mov
mov
mov
dec
orb
sub
xor
inc
mov
mov
imul
leave
lcall
mov
roll
mov
ja
mov
sbb
push
idivb
ret
inc
ret
add
pop
outsl
xor
xchg
sbb
dec
jne
shrl
or
mov
xchg
xor
cmp
iret
nop
jns
ficomps
ret
push
lcall
inc
mov
sar
pop
push
js
xchg
insl
add
imul
or
fisubrs
xor
and
add
sub
adcl
mov
fistpl
pop
and
fs
fdivl
pop
sbb
push
cmp
pop
pop
pop
add
jg
mov
std
mov
in
fsts
mov
aad
add
scas
inc
lea
ds
sub
xchg
pop
pop
xchg
jnp
aas
xchg
cmp
stos
flds
cmpsb
push
xor
test
stos
dec
and
daa
mull
rolb
loope
outsl
sti
das
mov
in
pusha
ljmp
inc
sub
sbb
xchg
scas
jl
pushf
daa
popa
aam
or
jb
jno
std
loopne
xor
sti
stos
movsb
lahf
test
in
cmp
ss
xor
mov
mov
cmpsb
rcll
test
xor
adc
ret
mov
loopne
sub
call
cmp
outsb
mov
insl
ds
push
sbb
movsl
mov
pop
sbb
lock
js
dec
popa
ret
ret
jg
test
mov
std
inc
dec
and
sti
push
out
mov
or
ljmp
les
cmp
pop
push
mov
sbb
enter
fistpl
push
fdivrs
pusha
out
scas
mov
int3
cmpsl
cmp
fldenv
mov
xchg
out
pop
add
fsubp
fisubrl
shlb
dec
into
push
lret
xchg
inc
mov
lds
pusha
xchg
add
ds
fcompl
mov
jbe
inc
inc
inc
push
inc
cmpsb
fcompl
cs
dec
ret
or
cmpsb
sysexit
push
inc
mov
push
mov
push
jae
sbb
shl
aas
mov
and
xor
pop
jg
mov
sti
es
sbb
mov
call
ret
add
cs
and
push
sar
xor
daa
js
mov
cmp
cmp
xchg
adc
pop
aas
mov
adc
sub
jo
outsb
inc
popa
xchg
bts
dec
and
inc
js
sbb
or
xor
out
or
sub
test
jno
pusha
xor
mov
sub
pop
popa
xchg
call
ret
repz
or
cld
add
cmp
in
xchg
jl
out
push
in
cld
in
daa
pop
mov
add
daa
ret
adc
fmulp
push
pop
loope
pop
fildll
sub
xchg
mov
mov
nop
fwait
xor
mov
add
push
push
pop
or
mov
cmp
inc
xor
faddl
cmc
xchg
and
pop
dec
adc
or
inc
idivl
das
imul
jne
lods
clc
mov
pop
jnp
mov
or
push
jne
in
insb
jb
sbb
ret
cmp
ljmp
push
mov
jge
jb
adc
mov
mov
std
sub
xchg
and
and
mov
outsb
push
je
or
xchg
sbb
and
push
inc
xor
movl
std
fisttpll
mov
nop
sbb
in
mov
sbb
ret
adc
sbb
push
xor
push
push
sarl
repz
ret
xor
ja
pushf
repz
idiv
push
jmp
sub
arpl
call
mov
ret
insl
hlt
lret
mov
clc
xor
mov
clc
lahf
pop
lcall
mov
inc
jle
mov
ret
dec
mov
int
mov
ss
sti
js
sub
cmpsl
dec
or
clc
fldt
add
mov
sbb
mov
movsl
xor
add
push
bound
mov
jl
or
jle
cmp
mov
adc
ret
jg
push
xlat
outsl
out
pop
imul
xchg
outsb
mov
adc
aas
fdivrl
add
int
xchg
cmc
movsl
cmp
aaa
pop
and
jecxz
out
mov
jl
xchg
lock
pop
dec
insl
in
lret
push
jno
ror
add
xchg
fwait
jg
clc
ljmp
cmp
jmp
pop
notb
and
mov
fcompp
stos
xchg
ljmp
pusha
outsb
fistps
pusha
cmp
cmc
xchg
in
ret
aad
test
xchg
cmp
fnstenv
mov
and
adc
jecxz
aaa
dec
add
jle
enter
loopne
gs
cmc
ret
pop
or
dec
roll
add
add
ja
gs
mov
adc
pusha
dec
dec
mov
inc
fs
cmp
push
loopne
cmp
sti
insl
ds
jbe
ss
cmp
jno
cmp
shl
jp
mov
mov
dec
mov
gs
shll
cmp
dec
out
test
inc
cs
pop
or
push
ficoms
add
xor
movsl
xchg
divl
sahf
adc
stc
jae
and
jl
cwtl
and
bound
push
add
lods
pop
mov
mov
orl
repnz
jmp
insl
mov
popf
sub
xchg
loope
les
mov
loop
in
push
aas
sub
mov
dec
imul
sbb
sbb
cmp
enter
ja
and
push
dec
adc
cltd
xchg
in
dec
xchg
loopne
out
pop
loope
cltd
pop
dec
push
pop
std
pop
mov
enter
xor
adc
std
arpl
adc
pop
or
cmp
jae
iret
inc
lock
jmp
sub
sbb
inc
cmp
je
sti
cmp
nop
rolb
cmp
lock
mov
fstps
mov
dec
xor
jo
add
out
add
or
movsl
leave
or
sub
out
cmp
stos
outsl
mov
lds
jecxz
lods
jnp
lods
mov
in
fcmovbe
push
jle
int3
pop
push
mov
out
js
pop
repz
in
test
jecxz
cwtl
shr
inc
inc
jmp
xchg
nop
ret
sahf
mov
push
test
add
dec
xchg
mov
mov
push
sbb
mov
push
sbbb
xlat
mov
daa
bound
jmp
xor
stos
xchg
insb
dec
cmc
push
outsl
fsubrs
lock
cmp
sub
xchg
adc
pop
rorl
dec
ss
jno
loop
pop
cmp
call
add
inc
scas
popf
push
mov
cld
loop
sbb
mov
sub
leave
adc
xor
aad
cmp
push
mov
mov
pushf
xor
dec
sbbl
pop
xor
enter
ds
shlb
mov
xchg
sub
lods
sbb
xchg
jno
mov
mov
popf
or
inc
mov
pop
ljmp
and
or
ficomps
xor
cmpsb
xchg
xor
daa
pop
push
push
lcall
ljmp
mov
in
jbe
xchg
test
ss
fadd
xchg
adc
divb
inc
mov
lods
jno
out
mov
push
ljmp
xor
divb
sub
mov
or
xchg
into
iret
add
xor
sbb
jp
xchg
clc
mov
lds
hlt
es
mov
push
std
adc
loop
sti
imul
inc
stc
clc
cli
out
sbb
ds
lods
xchg
popf
dec
push
ret
inc
dec
mov
and
add
dec
add
add
inc
cld
movl
in
cld
scas
pop
cmp
lret
cmp
sbb
sub
loop
push
in
into
or
xchg
nop
lods
fldl
push
ficompl
xlat
cltd
and
xlat
cld
sar
mov
sahf
int3
cwtl
cmp
icebp
lea
or
imul
rorb
icebp
icebp
lret
mov
sub
dec
sti
outsl
sub
sbb
mov
ljmp
je
jge
or
pop
stc
repnz
inc
push
ds
xchg
xor
push
jp
push
fildll
add
loop
mov
cmp
jg
add
mov
fnstsw
pop
iret
dec
scas
cmpsb
outsl
dec
cld
mov
adc
popa
gs
dec
stc
stos
mov
sbb
aaa
std
dec
cmp
sub
popf
les
and
dec
sbb
fs
push
cmpsb
mov
sbb
jne
add
xchg
push
sbb
mov
cvtsi2sd
xor
int3
into
mov
mov
mov
loope
fmulp
roll
cwtd
popa
cmp
sti
sbbl
jo
mov
addr16
xchg
and
mov
fstl
pop
inc
aas
nop
into
imul
ja
lahf
orb
mov
jg
mov
je
pop
std
dec
movsl
out
enter
jae
xorl
xor
es
sti
pop
ret
push
les
je
repz
testb
push
out
and
dec
jne
adc
sbb
ds
cltd
sub
inc
imul
lahf
call
lods
mov
pop
dec
stc
push
leave
or
dec
jl
in
int3
jge
jle
inc
movsl
lret
inc
test
ret
test
add
lea
fbld
dec
addl
int
lret
ret
test
loopne
ljmp
jno
xor
xor
mov
imul
jle
and
sahf
inc
int3
es
mov
cmpsl
scas
push
mov
das
jmp
shrl
push
add
or
outsb
xor
out
mov
scas
sbb
scas
or
jg
fcoml
ljmp
sbb
pop
ljmp
pop
mov
mov
and
mov
add
push
dec
gs
cmp
fdivr
jae
repnz
dec
outsl
jecxz
xor
shrl
push
lds
cmp
pop
or
test
inc
fbstp
xchg
mull
mov
ret
cs
nop
mov
in
add
adc
adc
mov
mov
and
es
cmp
lds
mov
adc
sbb
cmp
xor
sub
xor
sarb
inc
aad
jae
lret
mov
jl
fs
sbb
cld
adc
mov
outsb
pop
xchg
mov
lods
sbb
jne
push
repnz
jo
sub
mov
mov
sahf
out
outsl
cwtl
sahf
imul
fisttpll
cmp
and
adc
and
mov
dec
cwtl
mov
sbb
jno
dec
mov
loop
jl
inc
ret
sub
mov
xchg
cli
pop
in
jnp
cltd
stos
mov
leave
xor
sub
jecxz
ss
mov
xlat
lods
and
jecxz
lcall
pop
inc
lea
shll
add
xchg
dec
pop
push
enter
enter
xor
cmp
dec
or
in
popa
outsl
stc
mov
stos
imul
jbe
int3
fdivrs
pop
jb
movsl
add
das
push
jnp
or
dec
rorl
dec
jmp
dec
inc
sub
cwtl
add
sub
test
cmpsb
cmp
inc
sub
xlat
data16
aad
cltd
jl
jno
push
sbb
or
icebp
jns
aad
fisttps
sbb
lret
out
jl
mov
cs
movsb
mov
fdivrs
inc
mov
or
pop
sar
add
mov
dec
aam
pop
cwtl
add
add
mov
ds
jo
in
and
sti
in
sub
addl
rolb
sub
push
popa
inc
scas
mov
out
pop
sahf
jp
sbb
add
in
pop
faddl
sub
ja
test
fcoms
and
sub
or
imul
or
pusha
pop
adc
addr16
push
mov
mov
cmp
push
dec
push
insb
cmpsb
in
jp
push
cmp
popa
notl
flds
and
adc
pop
lock
ljmp
push
fsubr
mov
lahf
cmp
lret
jecxz
pop
inc
lock
cmp
adc
aad
or
loope
pop
lahf
cltd
sbbb
dec
iret
mov
push
ret
sarl
lret
jg
out
aam
addb
mov
jl
push
fsubrl
ret
cmp
mov
mull
lahf
ss
icebp
sub
sbb
jg
or
outsl
adc
mov
rcrl
arpl
ret
imul
sbb
roll
xlat
push
push
xchg
push
je
ret
loopne
rolb
cmpsb
lods
xchg
aas
cmp
push
loopne
outsl
pop
xchg
out
add
xor
jne
xchg
cmpl
flds
mov
int3
jno
jmp
mov
push
pop
fcmovbe
add
andb
arpl
arpl
lret
shll
or
loope
cwtl
incl
or
mov
xchg
xor
sbb
and
bound
cmc
in
in
mov
mov
push
addr16
andl
fldl
fidivl
xchg
movsl
mov
push
push
lods
and
pop
aad
clc
xor
call
out
cmp
repnz
lea
lods
das
inc
or
mov
mov
add
pushf
mov
sub
xor
lahf
out
add
sbb
pop
cs
lds
jno
or
sub
adc
scas
xchg
mov
call
dec
loop
jbe
out
sbb
imul
call
aas
xchg
in
testl
outsb
ret
cmp
aaa
add
or
mov
push
cmp
and
and
test
ds
sub
test
movsl
xchg
iret
in
and
mov
int
mov
sbbb
js
call
mov
fmulp
mov
xchg
jle
mov
sti
cmp
jo
cli
les
cli
repnz
mov
jne
lcall
pop
dec
add
sub
das
inc
dec
inc
xchg
shll
mov
xor
es
push
xchg
xchg
cmc
pop
dec
lret
stos
cmpsb
nop
jle
jae
js
xor
decl
mov
fcoms
sahf
test
movsl
sbb
mov
cli
jg
mov
ja
loop
out
inc
mov
test
mov
mov
xor
or
loopne
es
lea
mov
and
xchg
outsb
jl
jo
push
and
and
int
cmpsb
xchg
cmp
jb
hlt
xchg
mov
pop
push
dec
fdivl
mov
test
cwtl
loopne
jp
push
out
push
pushf
or
push
push
push
mov
gs
pop
inc
inc
ret
xchg
mov
cmc
adc
and
dec
pop
fstl
xor
xor
mov
gs
mov
sbb
mov
int
lret
mov
les
cmp
add
in
jnp
add
cmp
mov
in
jmp
adc
mov
test
fldl
iret
addl
cmp
cld
iret
cltd
push
outsl
shl
stc
adc
and
repnz
adc
icebp
push
lcall
fbld
add
sbb
in
shr
fisttps
pop
adc
push
icebp
idiv
xchg
jmp
das
mov
repz
adcb
mov
inc
and
jge
sbb
push
inc
add
mov
out
mov
jg
fimuls
cld
incl
cmpsl
add
rorl
stos
loop
inc
popa
lret
vmovsldup
dec
scas
cli
lcall
or
mov
fs
inc
and
pop
cli
pusha
pop
popa
or
adc
cmpb
pop
stos
jbe
pop
arpl
push
mov
fdivl
xchg
ror
sti
push
hlt
mov
add
psrlq
mov
popa
test
mov
add
inc
sub
fstpl
std
in
data16
adc
cmp
mov
jge
inc
jns
mov
pop
mov
mov
adc
push
ja
xchg
xchg
mov
jmp
out
cmpsb
aas
test
gs
ret
cwtl
jg
inc
cmpsb
iret
cmp
or
jp
je
push
inc
dec
ficoms
in
lds
pop
scas
popa
jae
cmp
push
push
out
adc
clc
repnz
jno
das
cmpsb
mov
mov
push
lods
dec
scas
inc
stos
dec
fimuls
mov
fsubs
clc
push
sbb
push
mov
jnp
shl
sti
int3
mov
jo
pop
xor
mov
in
xchg
sbb
outsl
and
in
out
out
adc
inc
nopl
lcall
or
inc
lods
sub
addr16
mov
push
push
cmp
movsl
in
fistl
cmp
push
out
push
dec
mov
incb
or
loop
loope
mov
dec
inc
jb
sbb
cmpsb
cld
cltd
popl
imul
in
shrl
mov
shl
and
jg
ljmp
jge
mov
hlt
addr16
andl
or
pop
arpl
push
and
cmp
mov
mov
cltd
sub
mov
mov
jno
cmp
mov
in
mov
fldenvs
mov
jnp
or
jbe
in
test
push
push
sarl
dec
dec
mov
ret
aad
mov
scas
fsubs
out
push
lods
jecxz
adc
iret
mov
loop
mov
add
sbb
mov
mull
mov
in
stos
shlb
mov
das
mov
enter
adc
ja
popa
pop
hlt
dec
bound
mov
pop
cmpsb
int3
mov
xor
fwait
mov
xchg
ret
jnp
mov
lods
push
aaa
mov
rcrb
cmp
shrl
xchg
test
stos
jmp
mov
jns
sbb
ss
jl
stos
rorb
dec
scas
sahf
inc
out
pop
sahf
xor
fs
movsl
pop
arpl
int
inc
scas
pop
rcll
movsb
pop
scas
xor
jno
inc
xor
mov
out
out
xor
xlat
lods
dec
mov
fimuls
adc
xchg
repnz
pop
jp
sub
xor
jb
or
mov
aas
scas
pop
add
into
inc
mov
cmp
je
into
call
add
adc
iret
ror
ljmp
cmp
es
push
ret
jb
push
inc
test
and
sbb
arpl
push
sub
sub
inc
rcrl
leave
mov
add
sbb
js
jb
out
dec
lea
add
es
mov
cmp
ss
sub
ds
loop
xor
insl
sub
inc
pop
mov
xor
rclb
test
inc
nop
sbb
mov
test
push
mov
jecxz
std
xor
push
pop
fdivrs
push
xor
popf
in
cld
pop
xchg
cmpsb
inc
push
xor
icebp
lock
push
fsubr
stos
pop
aaa
call
test
cld
push
xor
inc
out
xchg
inc
int3
out
push
pop
add
xor
pop
cltd
inc
ds
and
sbb
out
add
push
in
cmp
fmuls
dec
leave
mov
ljmp
inc
xchg
xchg
test
int3
dec
sbbl
ja
add
mov
cmp
sub
push
inc
out
stos
add
xorb
call
mov
je
dec
out
pusha
jle
inc
add
jp
sahf
mov
sub
or
lock
in
stos
cmp
test
ret
jbe
or
or
je
clc
insb
sub
cmp
push
pop
adc
inc
dec
es
jno
nop
mov
and
inc
push
shl
repnz
sbb
lock
jns
mov
icebp
cmovno
insb
test
test
dec
int3
sbb
jmp
pop
sti
push
out
or
loop
popf
outsb
sub
out
jno
aas
adc
lahf
punpckldq
jecxz
lods
les
clc
cmp
mov
xor
jae
adc
adcb
in
dec
stc
mov
xchg
adc
push
xchg
xchg
sub
adc
sbb
mov
adc
add
pop
cmc
into
xchg
cld
dec
enter
sahf
jp
cmp
testb
push
pop
push
bnd
loope
xor
and
sarl
in
cmp
cmpsb
or
adc
adc
fcompl
push
push
stc
ss
lods
ret
js
in
imul
push
adc
inc
push
insl
add
scas
es
adc
aam
js
adcb
jecxz
or
daa
mov
xor
sub
fwait
pop
movsb
repnz
outsb
and
in
adcl
mov
pop
xor
xchg
scas
mov
sbbl
test
lcall
mov
pushf
or
xchg
fisubrs
inc
fucom
aaa
pop
jge
mov
clc
xchg
inc
sti
in
sahf
test
scas
adc
cmp
ret
aad
ss
cmp
push
popf
xchg
iret
fwait
dec
jge
movsb
scas
clc
xor
leave
test
ret
sub
mov
xchg
cwtl
mov
lcall
mov
push
pop
mov
sub
test
mov
cmpl
ds
fidivs
jp
xor
imul
add
and
clc
test
lods
cltd
insl
test
imul
and
cltd
push
mov
or
mulb
aad
pop
ja
sarl
or
lods
and
mov
mov
nop
stos
lcall
sbbb
ss
or
xchg
xchg
sub
sti
popa
cs
and
ret
mov
test
out
lods
xchg
fwait
push
das
push
mov
test
shll
mov
dec
mov
loope
xchg
enter
lret
mov
shll
push
cmpsl
repnz
pop
adcl
imul
push
testl
inc
xchg
je
xchg
mov
adc
cmpsl
or
sub
add
fldenv
jmp
inc
out
xlat
mov
pop
dec
outsl
xchg
in
adcb
ja
inc
xor
ss
adc
pusha
mov
out
sub
or
sub
mov
rol
jl
mov
in
inc
push
std
or
pop
dec
les
insl
pop
int
sub
mov
scas
fbld
out
push
imul
mov
xchg
dec
jo
inc
stos
cmp
fstpt
sbb
jmp
shll
fistl
mov
mov
icebp
lret
daa
loopne
repnz
cmp
mov
out
push
in
out
rcl
sub
imul
sbb
je
xor
sub
sub
jge
ljmp
and
dec
mov
mov
mov
add
jns
fisubrs
mov
sub
imul
fiadds
xchg
cltd
and
insb
add
xchg
pushf
mov
pop
and
or
pushf
mov
cmp
sub
fcoml
dec
popf
movsw
in
mov
pusha
fstps
mov
jmp
mov
and
cmc
push
xchg
scas
aad
and
pusha
std
pop
stos
fcoml
inc
int
sbb
sub
imul
movb
jg
jne
bound
add
outsb
sub
push
loope
xchg
cmp
inc
stos
movsl
mov
loopne
jnp
insl
inc
nop
iret
add
jns
mulps
jmp
xor
lret
clc
jle
xor
pop
outsb
cmp
out
inc
mov
rcr
cs
shlb
orb
mov
shr
lcall
in
outsl
xchg
nop
or
cmp
sub
stc
mov
dec
in
xchg
jle
pop
pushf
push
mov
mov
inc
sub
lea
add
mov
lods
fidivrl
stos
xchg
scas
imul
adc
sbb
fbld
xor
int3
aam
push
mov
rorl
inc
cli
aam
add
ljmp
popf
sbb
sbb
sub
and
loope
adc
mov
icebp
sarl
mov
pop
cld
or
mov
scas
xchg
call
dec
add
jge
dec
mov
cvtps2pi
xor
or
popf
jle
or
jb
or
test
cmp
fdivs
shl
add
push
movsb
icebp
jnp
mov
xor
pop
mov
dec
push
or
test
popa
daa
pop
push
ljmp
test
jmp
ret
pop
pop
shlb
jns
mov
xchg
lods
pop
adc
jecxz
subl
dec
imul
popa
xchg
ss
in
sti
xor
mov
xor
jae
mov
add
jmp
rorl
xchg
sub
mov
lret
inc
push
sbb
ja
push
mov
mov
inc
inc
les
test
cltd
inc
andb
or
lock
jns
cmp
fs
stc
adcl
mov
addr16
adc
jp
gs
arpl
mov
and
push
sub
xor
out
int
in
and
add
dec
hlt
lcall
dec
ja
jae
push
jb
mov
mov
fdivl
or
leave
rclb
add
jl
lret
fistps
loopne,pn
sbb
and
mov
js
out
test
ds
movsl
add
pop
jecxz
mov
stos
sahf
es
mov
and
je
jmp
jne
mov
lret
jne
jg
inc
xchg
data16
scas
sbb
mov
mov
aad
inc
inc
cmpsb
mov
adc
movsb
and
insl
mov
sub
fisttpll
mov
leave
xchg
pop
imull
add
and
mov
push
ljmp
aaa
pop
loopne
mul
testl
mov
or
rcrl
js
dec
add
fmull
sub
xchg
sbb
in
rcll
sub
mov
cli
jecxz
mov
mov
inc
imul
test
mov
cltd
mov
mov
push
and
adc
cli
mov
mov
call
lahf
lds
push
aad
push
sub
loope
xchg
out
push
leave
sbb
cltd
push
sub
mov
xchg
mov
out
cmc
lock
in
idivb
daa
ja
jmp
cmp
mov
sahf
arpl
shrb
imul
inc
sbb
shlb
jne
rorl
jl
jmp
mov
js
mov
fsubrl
scas
add
movsl
aaa
loopne
ret
popl
fwait
bound
fwait
dec
shll
data16
cltd
xlat
xor
push
arpl
sbb
insb
sub
push
push
call
mov
nop
loop
lahf
pop
sbbb
sbb
loopne
gs
xchg
bound
jo
imul
lahf
mull
mov
repnz
bound
mov
orb
jmp
push
xor
xor
sub
fisttpl
sti
movsl
push
hlt
or
ret
xchg
add
sbb
pop
mov
mov
and
enter
push
mov
in
loopne
aam
testb
jl
mov
inc
xchg
mov
mov
pop
inc
and
cmp
adc
outsl
stos
aaa
shr
mov
jbe
in
mov
sar
cmp
out
out
jb
das
mov
pusha
cwtl
sbb
push
shll
inc
ficoms
loopne
sub
mov
test
int3
sub
loop
scas
mov
sub
jno
addr16
repz
sbb
idivl
mov
ret
and
stc
add
loopne
outsb
scas
adc
dec
jb
inc
mov
in
xchg
xchg
and
mov
or
aas
call
out
xor
outsb
ja
add
xchg
jp
adc
std
jbe
and
dec
add
outsb
xlat
pop
rclb
fadds
daa
push
and
inc
ljmp
xor
fidivl
aad
jnp
adc
fidivrs
push
jo
xor
and
aaa
add
outsl
ss
xor
repnz
enter
aam
fidivs
iret
enter
rcrl
jno
mov
movsl
popf
xchg
xchg
fabs
pop
sbb
xchg
ljmp
mov
xchg
xor
lds
adc
xlat
std
adc
cmp
jecxz
jle
mov
dec
mov
dec
push
out
pop
pop
test
lods
inc
jp
loop
test
imul
jp
or
hlt
push
dec
jg
aaa
sti
dec
add
mov
mov
sbb
hlt
and
xchg
jno
adc
mov
push
mov
in
xor
xchg
in
call
xlat
sti
xchg
pop
lods
mov
push
repz
inc
inc
je
push
lock
test
ficoms
xchg
adcb
lods
pushf
call
jne
cmp
push
cwtl
cmp
sub
std
xlat
cmp
mov
cld
dec
cmpsb
out
xchg
xor
xor
inc
test
jg
add
ret
outsl
pushf
xor
jge
pusha
test
jge
sbb
add
imul
lcall
and
imul
dec
lea
test
mov
div
add
add
push
hlt
dec
or
jmp
in
jmp
les
xor
add
adcb
and
pop
adc
gs
outsb
mov
dec
mov
rcrb
add
sbb
push
test
dec
ss
xor
mov
add
jae
in
fnstcw
aad
sar
imul
cmp
cmp
ds
dec
inc
in
test
fs
cwtl
cmp
adc
adc
stc
pop
or
movsl
dec
jle
sub
in
or
xor
adc
lock
lret
movsb
mov
add
rclb
loopne
sub
pop
adc
sar
mov
push
xchg
adc
push
xchg
dec
and
add
pop
jmp
gs
mov
and
movsl
mov
lds
and
dec
es
pop
mov
mov
adc
and
xchg
out
movsb
xchg
xchg
int
dec
push
mov
addr16
sbb
inc
push
xor
pusha
subl
jl
and
or
mov
jno
hlt
add
and
cmp
adc
jno
scas
pop
mov
out
es
adc
adc
lahf
mov
add
arpl
mov
out
or
and
xchg
scas
sarl
xchg
icebp
mov
repnz
xor
jae
xor
mov
xorb
out
mov
stos
mov
pop
sbb
or
popf
js
cmpsb
subl
lods
mov
int
mov
call
hlt
push
in
add
dec
add
jae
roll
cmp
xor
mov
mov
data16
xor
xchg
ret
xor
call
add
push
aas
outsl
push
adc
mov
adc
stos
mov
jg
mov
enter
sbb
or
adc
jp
and
sub
push
inc
jmp
mov
ret
aaa
andl
rcl
out
rorl
into
pop
mov
or
lds
pusha
jg
dec
mov
cmpsl
adc
jae
out
mov
int
jmp
dec
adc
popf
arpl
pop
jle
xchg
inc
push
jmp
out
jmp
pop
ja
lods
jl
out
mov
adc
out
adc
and
sarb
loop
add
add
in
and
mov
mov
fmull
lahf
cmpsl
xchg
aad
jecxz
ret
jb
dec
stos
outsl
inc
jbe
rdmsr
mov
cwtl
dec
test
pop
dec
outsb
jne
push
cmpsb
bnd
sti
out
mov
lret
addb
pusha
loop
int
adc
or
mov
xor
mov
repz
andl
shll
jmp
mov
cmp
dec
divl
xor
or
rcll
das
or
or
gs
xchg
lea
xor
inc
clc
push
cmpsb
out
mov
movsb
lea
shll
xchg
fisttps
int
xorb
jno
jle
push
adc
stos
jae
and
push
ret
jecxz
movsb
popf
and
push
xor
je
push
adc
aaa
mov
lock
arpl
cwtl
int
add
pushf
sub
movl
push
mov
hlt
mov
lret
mov
sarl
jnp
pop
test
ds
jg
inc
dec
mov
or
jno
out
push
int3
ds
push
xchg
dec
mov
jg
sbb
inc
pop
sahf
sbb
arpl
fstpl
dec
imul
aaa
insb
movsb
sub
pop
jns
leave
pusha
data16
pushl
lahf
or
sbb
int
mov
repnz
fnstenv
out
adc
cmp
arpl
pop
fstpl
into
mov
or
mov
out
adc
push
cmp
and
ss
jg
cmp
test
fs
inc
jecxz
push
lea
imul
notb
add
cmc
pop
das
xchg
jns
lea
pop
pushf
idivl
and
cmp
inc
subl
and
test
cmpl
jl
sti
hlt
inc
cwtl
mov
das
sbb
adc
imulb
fidivl
mov
jo
cmp
mov
and
loopne
add
xchg
je
cmpsb
cli
out
and
out
out
xchg
fimull
xchg
into
fildll
sub
js
mov
rorl
and
dec
jae
cmp
test
dec
filds
mov
dec
push
sub
mov
xchg
jns
push
repz
mov
and
int
xlat
mov
pop
inc
push
cmp
loope
sti
daa
out
cmc
xor
call
out
jl
daa
dec
movsb
sbbb
into
adc
or
push
lods
leave
out
filds
mov
out
adc
xor
xchg
add
push
je
adc
mov
testl
push
inc
mov
lret
popa
cmp
cmpsb
mov
mov
or
cli
pop
jb
hlt
les
adc
pop
push
pushf
in
cld
cmp
outsl
daa
sbbb
push
loopne
push
cmp
sub
and
mov
orl
mov
out
imul
adc
aas
push
insl
in
js
add
xchg
mov
dec
mov
add
imull
mov
push
mov
jo
jp
mov
insl
test
movsb
stos
in
sub
push
je
lret
ud0
filds
cwtl
add
dec
xor
dec
inc
mov
push
dec
movsb
mov
outsl
stc
lahf
mov
cmpsl
mov
clc
icebp
sti
or
lcall
push
adc
loop
lods
adc
stc
into
and
mov
iret
inc
shlb
loop
nop
popa
shl
sbb
imul
ja
pop
cs
clc
bound
fcomp
pop
hlt
lds
push
test
data16
push
std
dec
xchg
fstpl
xchg
mov
out
and
ret
scas
or
into
in
mov
jbe
stos
xor
push
test
out
sub
add
lcall
adcb
sbb
in
inc
jb
stos
push
lcall
popf
cmp
inc
addr16
inc
jge
popf
dec
scas
sbbb
lds
mov
fwait
cwtl
enter
add
xor
sbb
adc
in
out
sub
movsb
shll
iret
test
mov
jecxz
jl
mov
mov
inc
xor
fdiv
jb
mov
add
add
clc
xor
xor
cmp
jo
adc
leave
xor
or
lcall
jg
nop
sub
inc
inc
jns
mov
or
das
sub
mov
dec
cmc
and
mov
cmp
xchg
jb
fdivrs
movsl
iret
xorb
and
xchg
incl
addr16
js
test
fidivrl
xchg
push
mov
jae
mov
lods
push
sbb
cld
mov
imul
adc
mov
xor
push
jg
jecxz
mov
hlt
xor
mov
sub
or
jl
hlt
std
dec
xchg
pusha
fiadds
fimuls
fadds
gs
mov
cmp
mov
and
addr16
pop
dec
xchg
sub
mov
dec
imul
int3
mov
xchg
dec
mov
cmp
rorl
add
in
jg
test
sub
fdivrs
hlt
mov
mov
mov
ja
out
stos
mov
cmp
xchg
inc
jno
ret
fwait
push
aad
lock
out
fld
jb
xchg
in
sahf
push
fs
and
icebp
lds
adc
out
addb
mov
mov
scas
push
push
or
xchg
pusha
mov
incb
adc
cmpsl
or
leave
inc
sbb
push
cmp
add
outsl
gs
push
sbb
call
mov
mov
jbe
cmp
mov
xor
aas
pop
mov
mov
add
sbb
nop
ss
jl
mov
push
fs
gs
push
arpl
xchg
cmp
cmp
neg
ljmp
mov
push
cmp
lcall
and
out
jge
aaa
dec
add
test
mov
xchg
xor
xchg
inc
jmp
cmpsb
adc
shr
pop
sti
shll
mov
xchg
inc
out
mov
nop
dec
dec
xor
icebp
cmp
aad
dec
les
ror
cmpsb
pop
jbe
mov
jg
cltd
int3
push
jb
jge
dec
js
inc
stos
icebp
xor
outsl
jmp
sub
cmp
stos
cs
arpl
imul
outsb
aaa
popa
sub
pop
imul
hlt
arpl
mov
nop
mov
jecxz
dec
push
outsl
pop
popf
pop
xchg
ret
xor
jle
and
cltd
sub
mov
mov
sahf
int
push
jp
inc
sbb
or
insb
adc
pop
mov
fcoms
aad
pop
lods
xchg
mov
sarb
sbb
lcall
js
cmp
js
cli
pop
mov
inc
dec
adcb
pop
jb
fs
add
push
xchg
imul
mov
push
sbb
icebp
fwait
loop
in
icebp
andb
sti
xchg
sbb
dec
pop
xchg
hlt
inc
lods
push
sbb
sub
inc
mov
out
mov
mov
xchg
adc
fadds
shll
addr16
xchg
lds
mov
dec
cwtl
jne
inc
adc
addl
push
sti
add
nop
add
sub
cmpsl
jbe
xor
or
or
add
loopne
loop
xor
mov
mov
arpl
out
jp
hlt
cmp
out
jmp
jne
jp
pop
mov
into
ja
sub
flds
sub
mov
dec
ss
iret
iret
fadd
cld
xor
xchg
push
imul
call
cmp
data16
xor
movsb
mov
out
fldl
and
push
fcmovu
jmp
inc
mov
jae
mov
cmpb
mov
mov
dec
xor
ret
jne
lret
cmpsl
mov
aaa
push
dec
pop
mov
mov
pop
popf
jnp
jbe
loopne
cmc
jne
ffree
xchg
push
das
sub
das
add
pushf
cmp
mov
mov
xchg
stos
mov
pop
mov
test
inc
pop
push
pop
inc
push
stc
push
adc
js
mull
hlt
xor
je
scas
xor
loope
or
cmpsl
lret
orb
shr
shlb
add
cmp
std
js
out
loope
ficomps
mov
xchg
inc
jb
xchg
fwait
add
adc
sub
addr16
lds
mov
pop
cmc
imul
mov
inc
add
or
fcomp
dec
test
ficomps
adc
scas
cmp
xor
pop
pushf
out
pop
filds
ja
xchg
jl
dec
sahf
jp
out
mov
xchg
repnz
mov
scas
dec
aaa
pop
ficoml
fmul
lcall
adc
stc
pop
stos
fwait
ret
or
inc
jl
jmp
scas
xchg
add
xchg
push
push
sbbl
out
iret
jae
push
test
mov
xorb
mov
in
outsl
cmpsb
test
sahf
push
adc
sbb
pop
sahf
imul
or
xchg
xchg
jbe
sub
xor
ljmp
mov
adc
sahf
lahf
xor
lds
jnp
scas
sbb
pop
add
push
push
sbb
rolb
psraw
cmp
jno
popa
sti
cmp
sub
into
add
xchg
bound
and
rclb
jmp
in
fnstenv
pop
lahf
faddl
bound
inc
or
add
mov
push
outsl
cs
popa
jge
in
adc
pxor
int3
mov
loopne
push
or
lahf
and
inc
aad
lea
and
sbb
les
mov
test
fildll
add
sbb
leave
push
mov
in
int
xor
rcrl
lea
and
and
mov
std
push
dec
lods
push
and
lret
xorb
in
sbb
sbb
sbb
stc
lret
aad
adc
xchg
call
mov
std
stc
movsb
xor
insb
cmp
jecxz
adc
dec
jno
rclb
mov
adc
adc
aas
jo
jo
xchg
cmp
jno
push
shrl
xor
outsb
cmp
push
mov
out
cld
popf
mov
aam
cmc
jmp
cltd
cmp
movsl
loopne
out
mov
mov
outsl
out
lahf
push
sarl
enter
xor
cmpl
shrb
arpl
shlb
out
int3
mov
add
push
mov
push
lret
fsub
jo
addb
lret
push
xor
sub
sbb
repnz
lahf
xchg
nop
fisttps
push
out
stos
sbb
fdivr
mov
xchg
inc
sbb
test
mov
iret
popa
mov
fdivl
in
push
mov
pop
sbb
insb
push
clc
lret
scas
loopne
shlb
lods
loope
dec
jns
adc
inc
xchg
inc
xor
dec
fcoml
push
inc
mov
push
ret
cltd
cmp
cmpsl
iret
pop
cmpsl
mov
aas
inc
sub
mov
mov
icebp
jecxz
enter
sti
jae
mov
jp
push
inc
jae
jp
sbb
xchg
call
mov
sahf
das
xor
ja
adc
mov
rcll
adcl
insb
in
push
daa
inc
loop
push
xchg
sub
inc
jo
mov
push
cs
sbb
movsl
popf
push
jmp
popa
ret
jb
pop
leave
hlt
mov
pop
dec
lds
int3
imul
xchg
or
add
mov
sub
push
movsl
or
mov
push
pop
ljmp
imul
cmpsb
sub
mov
leave
repnz
jmp
mov
mov
sti
mov
inc
outsl
or
pop
cld
mov
xchg
xchg
and
out
jb
pop
ss
icebp
or
xor
xchg
sub
jmp
cmpsl
sbb
or
push
and
fildl
cli
pop
and
je
ja
inc
pop
jecxz
push
cmc
adc
mov
mov
cmp
mov
test
mov
out
in
subb
iret
dec
fbstp
pop
jno
inc
xchg
out
jp
out
call
push
mov
lds
xchg
cmp
inc
mov
adc
aam
adc
stc
test
mov
stos
inc
cmp
loope
repz
dec
mov
sub
aam
pop
in
notb
bound
push
jmp
xor
sahf
mov
xor
dec
je
negl
movsb
call
mov
in
dec
add
insb
add
and
gs
mov
mov
and
rcrb
add
inc
cs
scas
loope
loopne
popa
fs
lods
sahf
fldl
orl
xchg
fnstenv
mov
je
fstpt
inc
sub
fidivl
add
inc
jecxz
inc
daa
aas
imul
cmp
mov
and
mov
jl
icebp
jg
or
inc
mov
das
add
xor
pushl
loope
jae
and
inc
addb
xchg
and
cli
outsb
stos
mov
inc
ds
xor
pop
push
mov
pop
mov
or
ret
fisttpl
notb
and
popf
push
sbb
and
xlat
fcomps
int3
lods
mov
xchg
aam
fsub
lods
aaa
mov
dec
mov
push
mov
cmp
icebp
xchg
push
xchg
jge
and
adc
jg
mov
call
rcl
inc
cmpsl
imul
mov
sub
mov
sahf
clc
mov
fcompl
pop
jns
lret
sbb
add
in
mov
mov
lret
push
jb
stc
sbb
ret
mov
test
lds
iret
int
mov
movsb
in
xor
daa
ss
outsl
fdivl
popa
and
or
mov
out
or
pop
aam
xchg
arpl
inc
sbb
stos
pushl
cmp
add
mull
and
jns
dec
xorl
frstpm(287
dec
ljmp
repz
out
test
xchg
mov
pop
and
movsb
pop
dec
jne
shll
fwait
scas
push
mov
cmpsb
or
mov
dec
pop
nop
mov
out
mov
test
jne
sub
in
push
movsl
mov
or
aad
mov
out
mov
sarb
sub
clc
mov
hlt
pop
mov
lret
cwtl
mov
mov
adc
rcrl
xchg
inc
fucomp
push
mov
pop
addr16
adc
xchg
xor
loope
cmp
add
jns
xor
clc
mov
ret
popa
dec
add
cmp
or
rorl
mov
loope
mov
outsb
dec
jno
sub
mov
xor
aas
and
jae
adc
jno
inc
xor
stc
imul
inc
repnz
lds
outsb
or
and
dec
rcrb
pop
sub
pop
ss
adc
rcll
dec
cmp
lcall
movl
and
test
adc
xor
xor
mov
push
jno
das
inc
sub
notl
dec
lods
add
bound
sbb
mov
fcoms
jmp
setle
and
pop
inc
push
add
adc
push
adc
pop
adc
ficompl
cmp
and
fadds
push
in
movsb
mov
stos
loopne
je
or
push
dec
or
sbb
mov
cltd
std
jmp
imul
jecxz
fwait
in
fisttpl
dec
testl
loopne
pop
fnsave
in
faddl
lea
popf
aam
mov
cmpps
jno
xchg
daa
or
push
push
jecxz
in
mov
xchg
cmp
cmp
js
cs
lahf
movsl
cs
mov
shlb
sar
push
mov
adc
dec
das
mov
rol
movsb
xlat
repz
in
rolb
xchg
mov
xor
int
pop
iret
mov
inc
dec
lret
popa
jnp
repz
jb
int3
mov
cmp
faddl
jl
jbe,pt
lds
fimull
aaa
lods
xchg
add
loope
jbe
das
insb
aam
andl
mov
insb
mov
out
fs
pushf
pop
or
sub
rclb
adc
std
push
test
cmp
jae
xchg
xor
mov
cmp
fnstcw
sahf
xor
xor
xchg
dec
test
in
ljmp
fsts
in
cmpsl
push
sub
xchg
into
pop
orl
xchg
fldl
into
fnstsw
jecxz
ja
pop
pop
cli
rcr
in
stc
int3
xchg
sbb
fiadds
lret
adc
aaa
js
fisubs
jg,pn
lock
and
lock
mov
fadds
mov
pop
lods
xchg
icebp
fsubs
pop
ret
scas
out
cmp
icebp
and
repnz
fisubrs
les
clc
outsb
shrl
push
push
imul
jns
add
sub
xchg
loope
sub
xchg
push
inc
stos
pop
imul
lcall
inc
jge
mov
push
sbb
lea
push
cli
sbb
jb
call
cltd
sub
sub
adc
jnp
adc
dec
pop
shrb
inc
ret
mov
call
test
cmp
sub
mov
adc
xchg
cwtl
sub
pop
adc
xorl
pop
in
test
aam
iret
inc
imull
insl
pop
fnsave
pop
cmp
fmull
out
das
sbb
jae
pop
add
cmp
push
jae
popa
sarb
pop
xchg
sahf
jecxz
leave
clc
mov
lds
in
push
imul
sbbb
ret
popf
jb
fidivs
jns
pop
test
sbb
test
dec
call
jno
leave
mov
sbb
gs
popf
test
cwtl
and
adc
gs
sbb
inc
or
xchg
xchg
cwtl
cli
fildl
jo
inc
push
mov
mov
cs
and
stos
mov
dec
push
cli
rolb
add
mov
mov
call
sbb
inc
add
addr16
ror
lret
and
arpl
mov
stc
add
dec
mov
das
scas
mov
mov
adc
dec
mov
inc
dec
mov
les
xchg
jl
mov
add
leave
int
mov
mov
jb
in
inc
xchg
inc
repnz
inc
push
xor
in
ret
cmc
jns
roll
dec
or
stos
rolb
sub
xor
mov
cmpsl
cmp
sbb
faddl
mov
outsb
loopne
lea
test
xor
lods
out
jae
add
and
sbb
sub
aam
rclb
sub
mov
inc
jne
lods
sub
fimuls
xchg
sub
out
xchg
inc
cmpsb
lahf
adc
push
cmp
mov
mov
fsubrl
push
cltd
lahf
mov
fidivrs
mov
mov
subb
inc
les
stc
lock
dec
or
jae
lods
stos
add
dec
rcl
jp
out
pop
push
push
push
js
sub
mov
push
jl
ftst
cmpsl
call
es
repnz
shl
and
outsl
mov
fsubs
push
jae
mov
jmp
ja
sbb
out
out
ror
pop
mov
fcompl
xchg
sbbl
insl
jbe
das
mov
call
leave
and
jge
popa
fstpt
mov
shrb
mov
call
enter
in
mov
xlat
mov
jnp
mov
mov
xor
xchg
cmp
in
es
push
and
add
lret
push
pop
jo
jecxz
add
ret
jp
sub
adc
jbe
xorl
outsl
stc
inc
idivl
mov
sarl
pop
inc
inc
imull
pop
lahf
jb
sbb
les
jge
ret
jg,pt
shll
dec
add
xchg
mov
sbb
cmp
fisttps
clc
leave
mov
enter
cmp
loop
jne
stos
adc
les
adc
inc
std
pop
jno
pop
lods
xorb
jmp
cmp
push
loop
mov
aam
jne
jne
pop
fwait
cmp
adc
cmpsl
xor
in
outsl
mov
cs
es
adc
push
outsl
mov
cmp
rorb
fwait
js
xchg
div
mov
sbb
pop
jne
add
dec
ss
adc
das
pop
out
pop
dec
pop
ret
adc
add
sbb
mov
xlat
data16
je
mov
push
jnp
nop
mov
add
sbb
ret
enter
mov
repnz
sbbb
das
dec
add
es
add
pop
insl
pop
ss
dec
sbb
daa
pop
fcmovb
cltd
jmp
mov
repz
fwait
dec
pop
bound
mov
push
call
cmpsl
add
mov
mov
or
popf
movl
pop
sub
jle
aad
test
mov
es
pop
pop
xor
adc
std
jmp
cmp
sti
xchg
push
dec
adc
push
or
addr16
clc
dec
xchg
aaa
or
add
sub
push
js
fists
jns
cs
mov
movsb
sbb
pop
dec
inc
clc
jmp
or
mov
sahf
adc
mov
adc
cmp
clc
test
cwtl
les
push
or
rcll
jmp
stos
jle
push
or
sub
test
cs
push
loope
xchg
push
in
or
xor
lds
sub
jecxz
imul
push
lds
lahf
outsb
cmp
and
sbbl
mov
lahf
loop
loopne
popf
add
xchg
stc
cmpsb
cmp
scas
test
fdivs
sub
mov
subl
mov
cmp
les
or
pop
jl
push
cs
add
insl
jno
scas
enter
rorb
mov
jle
pop
repz
xor
pop
sub
fcomps
mov
dec
sub
sbb
sti
jmp
call
sar
xchg
mov
filds
aam
cmp
mov
imul
frstor
sbb
mov
cmpsl
sti
fidivrl
shlb
popa
fildl
xchg
dec
jp
xchg
or
es
sarb
and
mov
es
lock
out
adc
xchg
and
in
jnp
fldl
mov
and
ret
das
sbb
mov
cmpsl
nop
add
popf
cltd
push
nop
pop
int3
pop
ljmp
sti
pop
dec
adc
pop
mov
jae
loope
sbb
jle
mov
bound
push
ja
aaa
cwtl
ret
sub
out
and
ja
mov
fdivs
call
stos
out
or
dec
mov
or
into
mov
scas
test
ljmp
shlb
xchg
jne
fwait
lahf
lock
adc
aas
imul
enter
clc
cmp
adc
dec
xchg
or
outsl
insl
push
pop
mov
jmp
sbb
mov
insb
cmp
mov
std
mov
inc
mov
xchg
loopne
jmp
int
cmpsl
lods
scas
mov
xchg
cmp
sub
mov
imul
push
dec
and
push
dec
jl
fwait
xor
ret
fmuls
std
int
lret
or
sub
insl
inc
in
adc
jp
aaa
or
fldt
fadd
xchg
jne
sti
jns
jg
ja
adc
jle
notl
mov
jne
lahf
cwtl
xchg
sub
add
test
push
sbbl
cltd
jns
ret
fcomps
mov
rorl
divb
lods
fisttpll
add
mulps
jmp
and
adc
and
fldl2e
xlat
rclb
ret
push
iret
inc
or
cmpsb
test
jmp
stc
mov
leave
xchg
in
sahf
xchg
fsubr
mov
pop
pop
add
and
cmp
mov
test
dec
sbb
xor
jns
sti
mov
fnsave
stos
test
popa
adc
or
cmp
sahf
dec
mov
mov
data16
jne
decl
cmc
out
mov
js
jmp
inc
pop
dec
and
fidivl
rcl
ds
insl
adc
ret
mov
pop
or
fcom
arpl
in
mov
xchg
ret
sbb
stos
sbb
inc
aam
lods
dec
sbb
pusha
sbb
xor
loope
jno
stc
xor
lods
cmp
pop
daa
ja
xor
out
push
xchg
outsb
dec
sbb
mov
or
sub
int
xchg
loopew
sub
add
push
sbb
rcl
dec
rorb
inc
pop
pop
stc
adc
out
movsl
mov
daa
ds
add
fistps
mov
add
jmp
cltd
cmpsl
incl
dec
ss
int3
add
xchg
cmp
dec
into
pop
in
std
lock
adc
sahf
cmovbe
fwait
cmc
lock
lahf
pop
popf
negl
mov
loopne
xor
sbb
push
xor
and
inc
jg
dec
mov
mov
push
insb
mov
loope
xchg
lea
mov
push
or
mov
enter
mov
sbb
insb
mov
mov
arpl
push
mov
loope
cmp
gs
cmp
add
cmp
jbe
and
mov
dec
jno
aad
push
push
xchg
cmp
outsl
inc
fcompl
aaa
lret
or
pusha
push
mov
aam
inc
js
dec
shl
addr16
nop
mov
cmp
bound
out
shlb
inc
icebp
lea
aaa
or
push
lcall
stos
sbb
inc
rorl
inc
ret
insb
sub
test
repnz
and
xor
fmull
idivl
mov
cli
cmp
lods
inc
inc
and
orl
jle
addl
icebp
inc
ficomps
aaa
rcl
jae
push
das
xchg
inc
jg
xchg
mov
cmp
neg
adc
push
addr16
push
inc
call
sbb
fwait
xchg
cmpsb
xor
fildl
adc
push
push
test
ja
fbstp
inc
xchg
xor
mov
fcmovb
fstps
stc
je
sarl
cmpsb
aam
out
aam
mov
add
not
and
jle
add
cld
into
mov
mov
dec
xchg
stos
lret
aas
std
dec
xchg
pop
adcl
mov
push
lods
pop
js
ds
pop
push
rolb
cmp
xchg
inc
cmpsl
loope
ds
mov
mov
push
shll
dec
loope
jmp
imul
sti
xchg
clc
stc
adc
jp
dec
jne
mov
xchg
mov
hlt
or
stos
imul
jecxz
outsl
hlt
pop
mov
shll
popf
mov
jae
rorl
fnsetpm(287
sbbl
mov
adc
cmp
hlt
es
sub
xlat
and
mov
cmp
push
popa
sbb
int3
sub
pop
sarl
or
ret
std
add
test
pop
mov
lods
mov
and
popa
aad
out
addr16
jb
jns
movsb
add
xchg
sub
push
mov
xchg
fsubp
out
iret
fmull
pop
aad
xor
dec
or
lret
rol
inc
dec
push
cmpsl
shl
mov
sbb
sbb
pop
pop
cmp
mov
sbb
cli
aad
pushf
xchg
cmp
sub
lret
sarl
in
bound
inc
cmpsb
jno
mov
inc
test
ds
pusha
add
mov
aam
fldenv
leave
sti
pop
stc
lock
dec
jns
push
cmc
ja
inc
pop
orb
cmp
stc
mov
mov
cmpsb
ds
xor
movsb
and
sub
mov
nop
aam
sti
fstpt
mov
movsb
push
mov
pop
lret
pop
pop
insb
data16
jae
cmc
or
out
in
xchg
xor
jnp
das
adc
lcall
fdivrl
push
cmpsl
vmwrite
add
outsb
bound
cmp
data16
shlb
cmp
mov
pop
shl
call
mov
xorl
leave
pop
xlat
scas
mov
lahf
imul
push
xchg
cmp
jo
mov
mov
mov
pusha
int
arpl
add
xchg
shll
lods
cmp
aas
mov
pop
lds
mov
lock
cltd
stos
insl
aad
fcomi
std
movsb
bound
xchg
lods
mov
add
pop
incb
xchg
scas
push
or
je
pop
mov
rclb
xchg
ljmp
mov
cmc
push
push
shrl
testl
mov
pop
ficompl
shl
jl
ret
or
xchg
imul
add
mov
bound
and
jnp
xchg
lret
mov
pop
cmp
dec
dec
jge
xchg
and
sub
dec
mov
jbe
mov
mov
pop
mov
outsb
imul
mov
out
fs
into
fsubrs
sbb
mov
adc
inc
add
push
xor
outsb
out
subl
dec
push
fisttps
shll
pop
shrb
sub
idivl
push
call
inc
sti
push
pop
jne
mov
scas
imul
inc
fs
aaa
jg
psubb
subl
outsl
fs
cmp
out
psllq
jns
addr16
and
xchg
inc
pop
dec
mov
pop
xorb
mov
negl
and
paddusb
test
xchg
push
or
push
nop
daa
cld
cmp
imull
cld
js
test
push
xchg
inc
push
int
pop
adc
fmul
xor
fistpll
sub
shlb
push
lahf
lods
dec
pop
push
gs
call
insb
fs
pop
sbb
fldt
pushf
fdivrp
cmp
sbb
xor
mov
in
pushf
add
ljmp
adc
aam
adc
loopne
mov
and
xchg
mov
mov
in
pop
mov
das
push
push
in
data16
mov
lahf
or
out
insb
aas
je
out
lock
xchg
sahf
add
dec
daa
negl
stos
xchg
lock
ds
out
lds
mov
xor
sub
mov
lods
or
repz
inc
pop
xchg
jle
mov
loopne
xchg
mov
pusha
mov
cld
xchg
cmpsl
mov
or
frstor
inc
dec
dec
enter
mov
sti
stc
enter
pop
and
int
or
insl
js
inc
adc
aam
xchg
test
add
mov
hlt
je
bound
or
xor
les
bound
lahf
add
jo
xchg
cmpsb
imul
adc
daa
scas
push
popf
add
pop
add
push
fbstp
stos
test
movsb
xor
pop
jle
push
fbld
jp
popf
lret
sbb
andl
inc
cli
daa
or
es
jl
sti
inc
and
sub
mov
faddl
xchg
push
in
add
mov
mov
popl
les
cmp
jg,pn
out
outsl
cmpsb
imul
inc
fwait
pop
aam
sahf
mov
js
std
cs
ret
test
cli
shl
movsl
sub
movl
in
or
popa
shll
add
testl
add
cli
out
inc
inc
sub
pop
fdivs
sbb
and
std
jb
lods
int3
shll
push
imul
mov
pop
mulb
xor
xchg
pop
dec
outsl
cmp
cmp
mov
mov
push
pop
xchg
ret
insl
mov
or
pop
cmp
sarl
je
xlat
inc
inc
sbb
out
fidivs
jle
and
xor
adc
cmp
fistps
stc
mov
and
insb
mov
add
jmp
xchg
push
or
stos
push
mov
aas
loope
cmc
test
adc
and
flds
mov
rep
cwtl
enter
sbb
jle
pusha
xchg
jbe
inc
out
shrl
cwtl
mov
mov
jo
mov
lret
mov
sub
scas
sub
mov
in
mov
cmp
in
mov
stos
jb
call
xchg
ja
gs
mov
rorl
xor
mov
mov
sub
mov
shrb
sub
repnz
inc
mov
dec
es
mov
cmpsb
fadd
enter
outsl
pop
sbbb
push
push
filds
mov
popa
sti
movsl
jno
push
pop
lahf
xchg
adc
jo
inc
and
aas
cmc
jge
xchg
dec
hlt
or
lods
dec
mov
loopne
test
xor
adc
mov
cmpsl
inc
imul
gs
xor
std
xor
fsubrl
pop
or
adcb
fiaddl
mov
xor
jo
pop
mov
cmpsl
pop
mov
and
pop
mov
add
jbe
fstpl
push
adc
inc
cld
cmc
xrelease
cmp
inc
daa
insl
xchg
insl
add
test
pushf
outsl
jno
add
dec
sbb
stos
mulb
loopne
jmp
fwait
jb
rep
into
clc
das
cwtl
and
sahf
sub
add
in
add
std
jl
cmpb
cwtl
mov
dec
outsb
jne
daa
insb
and
push
fidivl
mov
and
in
mov
into
xchg
push
lcall
mov
xchg
or
hlt
jns
ret
popa
clc
mov
hlt
mov
xor
jl
addr16
push
dec
mov
bound
jo
mov
xor
xor
sub
mov
dec
scas
sahf
jb
sub
pop
pop
cld
sub
stos
stos
cmp
cmp
rcrl
mov
lahf
xchg
dec
sub
es
out
clc
push
std
xorl
test
enter
popf
and
push
sub
ja
or
int3
push
mov
inc
sub
mov
jne
in
and
aaa
stc
in
fwait
inc
sub
insb
in
cmp
sub
and
push
mov
scas
shlb
mov
cmpsl
into
mov
and
jb
test
test
movsb
cwtl
xor
sbb
and
mov
sub
xor
enter
xor
lcall
insb
jmp
mov
xchg
shl
and
lret
scas
jmp
dec
sub
inc
pop
cld
mov
pop
cmp
cmpsb
sub
mov
xchg
shrd
lods
push
jp
lahf
mov
popa
push
das
int3
jmp
jne
push
pop
notl
mov
std
xlat
adc
and
lods
les
int3
loopne
add
pop
push
or
pushf
inc
xorb
cmp
add
fwait
sub
pop
xor
xor
pop
insl
movsl
xchg
mov
rorl
subb
inc
in
and
int3
ja
roll
xchg
data16
cmp
addl
lret
mov
sub
or
push
in
sbb
into
fdivr
addr16
sbb
mov
in
nopl
incl
je
mov
aad
xor
out
cmp
jmp
fiadds
repz
dec
movsl
movsl
gs
inc
xor
or
xlat
and
push
and
cmp
lret
and
dec
dec
icebp
rcll
mov
inc
cmc
add
push
push
cld
out
dec
or
scas
movsb
ret
in
loopne
mov
push
mov
es
jmp
mov
lods
hlt
push
js
xchg
stos
out
lods
xlat
dec
adc
or
out
fldenv
test
lods
jl
jle
push
es
dec
jbe
push
sahf
dec
mov
xchg
jb
iret
addr16
inc
das
lea
imul
in
push
hlt
lret
sub
adc
mov
pop
aas
std
push
sahf
mov
mov
fistps
push
sahf
dec
ss
fwait
jp
adc
and
shll
and
push
cmp
and
mov
xchg
and
aas
sub
clc
es
call
push
push
cmp
test
stc
push
repnz
insl
jbe
jl
pop
xlat
push
or
cmpsb
gs
adc
cld
faddl
xor
xor
bound
incb
sub
push
mov
sub
or
sub
insl
mov
enter
imul
jp
lcall
daa
sbb
sub
inc
push
push
jge
frstor
inc
jno
addr16
jle
mov
pop
mov
jno
jmp
out
push
or
fs
jmp
pop
jl
jl
sbb
in
cmpsb
js
dec
icebp
pop
add
inc
arpl
cmp
add
divb
and
lret
mov
aaa
push
loope
data16
mov
andb
in
testb
or
cmp
mov
and
mov
insb
pusha
adc
pop
pop
mov
pop
adc
cli
and
xchg
ret
inc
dec
stos
mov
and
popa
stc
pop
xchg
aad
outsl
push
add
nopl
sub
icebp
push
shrb
xor
test
into
jns
nop
sbb
dec
cwtl
out
test
sub
sbb
scas
lods
lcall
clc
push
imul
push
inc
push
mov
xchg
in
mov
or
aaa
mov
push
rcll
mov
fidivs
sub
ret
inc
sbb
cwtl
mov
mov
mov
loope
jno
cltd
xchg
mov
mov
nop
int
push
push
jle
push
fs
mov
dec
xor
lea
rcll
push
sub
idivl
sti
aad
fnstcw
pop
jmp
dec
ret
mov
adcb
jl
xchg
add
imull
push
add
ljmp
lock
orb
mov
or
aam
jns
xlat
mov
add
les
dec
fisubl
nop
xor
iret
adc
jb
lcall
sub
mov
inc
in
test
push
xchg
sbb
sti
mov
dec
jg
fs
hlt
push
ljmp
push
fwait
and
or
pop
mov
popa
icebp
fistps
in
fsubrs
movsl
xchg
xor
insb
xchg
fsubr
push
push
dec
push
push
push
fnstcw
add
or
scas
lret
filds
loopne
dec
sub
xchg
outsb
dec
jbe
mov
loope
xchg
sub
jl
push
xchg
ret
data16
out
mov
pop
and
xchg
enter
push
outsb
popf
cmp
mov
inc
jle
setns
push
sub
imull
xchg
inc
rorl
popa
pop
js
jns
and
dec
int3
jbe
pop
inc
inc
mov
emms
cmp
mov
call
insb
cmp
je
mov
aam
xlat
popa
cmp
sub
bound
arpl
rcl
ret
rcrl
popf
mov
fisubrs
adcl
ret
mov
mov
shl
lret
test
pop
and
je
lret
lcall
pop
jae
fcomps
jle
cmpsb
ja
and
adc
ss
aas
addb
and
sbb
stos
aas
int
dec
mov
leave
fsubs
lret
xor
xor
lahf
push
push
add
and
jmp
nop
in
in
sbb
stos
push
or
xor
test
or
and
sub
cmp
out
inc
sar
ret
notl
push
mov
mov
lods
leave
push
out
fbstp
enter
mov
pop
imul
movsl
cmc
mov
dec
cli
jnp
dec
inc
fdivrs
sub
rclb
int
ret
pop
lret
cli
push
in
inc
in
bound
es
ret
arpl
push
into
loope
cwtl
repz
push
aad
fcom
adcl
mov
movsl
hlt
imul
pop
push
mov
test
add
outsl
add
lcall
sbb
mov
lock
pusha
jno
mov
mov
in
xlat
out
je
cmp
imul
pop
jne
xlat
push
push
mov
mov
xor
dec
decl
movsb
adc
out
test
pop
sub
shll
fstpl
in
jnp
shrl
pushf
mul
mov
push
leave
push
add
pusha
outsb
xchg
sbb
mov
mov
push
push
stos
sub
adc
jecxz
mov
iret
and
out
and
clc
test
cmp
mov
mov
dec
fld
or
out
sar
loop
push
and
pop
jo
cmp
scas
xchg
xchg
jle
mov
mov
push
and
xor
mov
fwait
hlt
dec
xchg
xchg
pop
fcompl
es
je
int
gs
jo
xchg
push
fldcw
insl
in
cmp
clc
or
ja
cs
mov
inc
fucomi
jge
mov
lcall
or
icebp
call
clc
jl
xchg
or
aam
push
inc
loop
jo
push
rolb
ss
aad
imul
inc
pop
mov
sub
in
loope
rol
mov
and
rorl
xchg
outsb
dec
test
xlat
shl
scas
fimull
nop
icebp
and
dec
enter
lods
jg
ret
and
imul
rcrb
div
and
dec
push
dec
lock
unpcklps
dec
into
or
dec
cmp
dec
push
cmc
add
pop
in
jecxz
push
mov
push
bound
hlt
mov
idiv
cld
scas
push
mov
pop
mov
aam
dec
fsubrp
cmp
enter
and
into
cmp
les
pop
stos
add
mov
add
jmp
inc
fstps
pop
jge
les
mov
cmp
mov
daa
add
imul
dec
mov
in
xor
ret
pop
lods
sbb
mov
mov
cltd
pop
aad
test
loopne
inc
inc
jo
pop
stc
ljmp
aam
xor
jecxz
gs
dec
and
out
lret
iret
dec
fwait
fwait
push
pop
sbb
lods
push
xor
in
inc
dec
adc
sbb
sub
aad
test
fisttpll
sbb
je
cmpsb
out
cltd
xchg
sldt
js
outsl
or
lock
ljmp
push
stos
outsl
mov
or
fcomip
insb
iret
mov
push
add
daa
lret
fcompl
aas
jmp
adc
mov
adc
flds
rcl
mov
mov
jbe
add
in
hlt
dec
les
mov
cmp
pop
adc
mov
mov
push
jmp
stos
adc
lahf
and
lods
js
adcl
pop
pop
repnz
lds
inc
sarb
imul
dec
xor
mov
loope
testb
mov
stos
or
test
and
repnz
cmc
scas
inc
outsb
or
or
call
inc
lods
or
jb
pop
ret
jns
cmpsb
insb
mov
roll
jns
jb
cltd
js
xchg
push
movsl
add
inc
dec
sub
xor
hlt
ret
loope
push
fs
push
lahf
mov
jo
insl
in
in
mov
aaa
cwtl
fdivl
mov
adc
pop
outsl
push
inc
sahf
pop
cmp
sbb
xchg
jae
xchg
lahf
repnz
mov
mov
sbb
aas
lds
adc
in
stos
xor
stc
mov
sbb
dec
jecxz
inc
sub
mov
movb
aas
ja
sub
test
inc
xor
dec
ja
clc
test
mov
dec
fildll
xchg
mov
inc
rclb
imul
mov
mov
sahf
dec
push
mov
repz
test
or
ret
pop
lret
mov
push
out
sub
mov
movl
inc
insl
test
daa
mov
fwait
cmc
hlt
lahf
shlb
aad
jle
icebp
cmpsl
dec
pop
adc
inc
dec
sub
sbb
sbb
in
mov
cmp
fcoms
lcall
popf
jno
bound
mov
dec
mov
cs
mov
mov
adc
or
jecxz
xor
addr16
cwtl
lahf
pop
std
int3
ret
mov
loope
stos
ret
repz
outsb
pusha
xchg
sbb
cmp
mov
imul
call
adcb
xchg
ja
les
sbb
fstpt
leave
arpl
mov
adc
push
lcall
xchg
and
iret
dec
pop
mov
lcall
stos
out
jo
mov
test
or
sbb
popf
jl
sub
and
inc
mov
decl
sbb
xor
mov
lods
push
mov
packssdw
imul
fwait
lods
and
push
clc
add
dec
out
add
je
nop
pop
jb
add
imul
pop
test
or
jnp
test
mov
cmpsb
sbb
arpl
pop
mov
pop
dec
pop
neg
cmp
fistpl
or
push
xchg
xor
aam
push
mov
sbb
fildll
hlt
rcr
call
jge
pop
xchg
cmp
scas
ljmp
sbb
mov
mov
test
das
pop
sti
loopne
sbb
mov
aas
cmpsl
mull
push
xor
lea
out
mov
je
jne
xchg
pop
mov
fnsave
xchg
out
shrb
clc
mov
push
outsl
mov
icebp
sub
aad
lahf
ret
lret
mov
lret
lret
in
lret
stos
jo
cmp
testl
aad
mov
bound
movsb
and
push
adc
test
cmpsl
dec
inc
in
jnp
pop
push
arpl
outsl
addr16
dec
cld
arpl
jge
dec
jns
fs
shl
add
pop
and
adc
stos
sbb
jmp
cld
js
xchg
mov
stos
mov
add
scas
popf
iret
loopne
jg
jnp
and
dec
add
lods
cmp
outsb
cwtl
mull
mov
pushf
and
repz
push
test
out
mov
cmp
shlb
nop
inc
les
ljmp
mov
cli
insb
inc
test
icebp
call
arpl
lods
in
shrb
bound
mov
test
push
push
negl
dec
jl
lahf
aad
cmp
fwait
dec
out
xor
and
mov
jp
adc
mov
movsb
and
push
dec
orps
enter
jae
in
fbld
fdivrl
outsb
and
movsl
push
fldt
jne
mov
mov
scas
les
ljmp
subl
adc
inc
in
into
pop
lret
dec
jnp
stos
add
fwait
add
ds
xchg
movsl
lfs
xchg
lock
mov
pop
xchg
jecxz
xchg
dec
loop
lret
mov
daa
iret
add
ss
ror
add
jecxz
mov
xchg
xchg
cmp
outsl
icebp
mov
xchg
add
mov
push
push
loop
in
cmp
lahf
cmpsb
or
push
mov
fsts
cmp
std
push
ljmp
iret
mov
xlat
cs
out
lods
pop
aas
lret
jp
mov
adc
mov
pop
jmp
dec
rcrb
and
and
cmp
xchg
js
sbb
inc
mov
stc
mov
jle
ja
add
cwtl
xchg
jge
pop
pushl
push
rcll
pop
test
jns
rcl
fidivrs
insl
add
hlt
ret
xchg
les
push
arpl
cmp
rcll
inc
xchg
cmp
fwait
adc
pop
arpl
lea
inc
mov
jnp
movsb
lods
lods
jge
ja
pushf
sar
mov
dec
pop
mov
xchg
imul
imul
fisttpll
ja
sub
cmpb
jns
cli
subb
std
dec
dec
scas
add
pop
mov
daa
int
jp
mov
lahf
push
inc
lock
mov
mov
fmulp
adc
lock
ret
jns
cli
dec
add
inc
jmp
and
pop
scas
lds
daa
shr
add
pop
cmpsb
mov
pop
ret
xor
inc
imul
mov
xchg
lret
and
adc
int3
int3
cmp
cmp
push
out
lods
jo
ret
insb
addl
xor
dec
ja
mov
mov
adc
fmulp
stc
jl
or
cmpsl
cmp
lock
adc
mov
push
rclb
addr16
cli
out
jbe
xchg
dec
aaa
xchg
sub
arpl
pop
js
fs
jp
cmp
pop
jecxz
and
or
scas
cmp
shrl
add
sub
push
mov
faddl
sub
ficomps
mov
adc
cmc
mov
cmp
xor
or
and
ret
aas
pop
orl
popa
sbb
mov
pop
in
je
lahf
cmp
jl
data16
xor
loop
adc
dec
mov
lea
mov
insb
fisubrs
aas
je,pn
add
cmpsb
inc
pop
push
ds
ror
pop
insl
fdivrs
lcall
and
mov
mov
rorb
les
jb
popf
adc
dec
xor
out
push
daa
cmpsb
loope
jae
or
xor
jmp
rcrl
and
and
sbb
mov
outsl
mov
add
movsb
repz
jae
loop
pop
lcall
jp
lea
and
xchg
cli
add
loopne
push
sub
push
cmc
cmpsb
mov
loopne
xchg
inc
popa
mov
fbstp
stc
rorl
loopne
cmp
mov
stc
mov
mov
xchg
lret
fstpl
sbb
loop
aas
insl
pop
hlt
into
lret
iret
scas
push
mov
sub
clc
dec
pushf
xchg
repnz
fldt
pop
stc
clc
push
fs
test
out
in
pcmpeqd
daa
jno
pop
fldt
clc
sbb
mov
aad
ret
stos
clc
ja
test
pop
testl
add
lahf
cmp
inc
adc
xor
fbstp
push
je
dec
sub
mov
xchg
out
dec
or
lea
jmp
nop
xor
mov
cli
add
scas
dec
inc
xlat
bound
dec
int
xchg
push
mov
or
sbb
pop
inc
inc
mov
sub
rolb
mov
in
mov
call
arpl
out
popa
pop
lea
lods
loopne
decb
ret
jg
out
jle
mov
inc
sbb
add
insl
or
aad
pop
stc
das
cwtl
sbb
mov
or
pop
mov
mov
ljmp
xor
mov
push
cli
rcll
mov
pop
or
cmp
orb
inc
ret
push
adcb
test
add
lods
pop
sbb
cwtl
mov
and
ss
rcll
imul
pop
sub
mov
mov
lret
sbb
imul
les
add
scas
outsl
sbb
inc
insb
pop
fistl
daa
mov
aam
xor
push
pop
push
popa
push
xor
adc
mov
xchg
loop
push
stos
loopne
or
inc
insb
push
jmp
sub
nop
ret
fwait
push
out
lods
stc
xchg
fdivrs
inc
imul
fsubrl
and
xchg
adc
mov
aam
lahf
out
sbb
int
loop
repnz
popf
sti
mov
lods
mov
sub
push
ficoms
fimuls
push
mov
dec
mov
mov
pop
daa
or
outsl
ljmp
push
scas
dec
mov
mov
in
pop
push
mov
mov
xchg
testl
popa
sbb
or
pop
in
jns
stos
sub
sbb
roll
mov
adc
pop
insb
push
sti
inc
sti
cld
and
pushf
cmpsb
and
lret
cmp
shll
xor
pusha
sub
cmp
pop
shll
gs
faddl
dec
rorl
xchg
dec
ret
mov
fsubrs
and
add
and
popf
fs
pop
push
jnp
pcmpgtw
sub
sbb
repz
icebp
xlat
lahf
xor
xchg
mov
mov
imul
jns
into
in
je
xorb
push
xchg
into
mov
dec
add
xchg
add
loop
inc
add
scas
test
cmp
push
mov
or
loope
nop
or
movsl
mov
cmp
push
stos
cmpsl
or
pop
dec
mov
or
mov
fs
inc
cld
mov
dec
sti
mov
aam
popa
rorb
jecxz
cmpsl
xlat
ss
fcmovne
mov
jae
mov
xor
and
jp
jge
mov
ss
pop
loop
sub
lods
jecxz
fwait
ret
mov
jnp
movsb
sub
lahf
pop
xchg
or
mov
imul
adc
daa
or
jg
in
xor
pusha
popf
xlat
int
sbb
sub
xchg
add
test
lods
mov
xchg
push
xor
adc
jnp
lahf
xchg
popf
jg
push
aaa
inc
cltd
inc
dec
loope
sub
pop
mov
andl
in
jmp
in
test
or
jae
xchg
cli
aaa
xchg
and
or
popa
sub
xchg
mov
rcrl
sbb
popa
cltd
mov
aas
fidivs
out
jno
movsb
loopne
cmp
jmp
movsb
daa
ja
fs
imul
sub
lea
pop
push
sbb
pop
xor
and
ret
sbbb
cmpsl
and
inc
sbb
cmpsl
fs
and
movsb
loop
inc
sbb
lea
in
repz
and
stc
inc
mov
pop
jnp
orl
int3
and
dec
daa
sbb
mov
rclb
shlb
sub
loope
int
shll
dec
sub
rol
stc
push
pop
daa
out
cmp
mov
inc
mov
lcall
pop
dec
mov
dec
add
filds
fdivrl
and
bound
outsb
jle
inc
xchg
fcoms
scas
or
sub
shll
test
mov
xor
jg
subl
loope
or
lret
repz
std
inc
lret
jo
mov
test
filds
loop
inc
xchg
rcll
iret
lret
in
cmp
aad
push
sub
add
ficoms
mov
and
outsb
mov
notb
cli
jns
mov
and
daa
mov
pop
jnp
xor
jnp
data16
lcall
data16
mov
inc
xchg
repnz
push
jno
aam
movsl
jne
in
cs
sbb
pushf
xor
inc
xchg
ljmp
movsb
sbb
mov
adc
jb
xlat
ret
leave
popf
test
inc
rorb
lret
adc
incb
xorl
je
pop
orl
xchg
sarl
lret
out
push
dec
mov
mov
shll
scas
mov
outsb
sbb
xchg
sar
das
addb
stc
inc
jmp
dec
fidivl
pop
shll
xchg
aad
push
add
cmc
mov
cmp
xchg
and
fwait
mov
mov
dec
in
fwait
mov
push
test
xchg
bound
jnp
ja
std
add
out
std
jae
fdivr
or
out
xor
xor
push
dec
lods
xor
mov
popf
mov
loope
xor
push
and
mov
adc
rclb
cwtl
fildll
pop
xor
outsb
aas
push
jp
outsb
xchg
aas
insl
or
daa
fwait
pusha
add
int3
out
jle
cmp
mov
sbb
lcall
lret
and
cmp
push
and
adc
sub
fmul
dec
hlt
adc
fldcw
shl
lret
jne
loopne
lahf
mov
call
xor
sub
xchg
sbb
jg
add
je
nop
dec
xchg
adc
outsb
jmp
in
mov
sub
jne
and
jmp
nop
xor
cmp
inc
or
inc
roll
data16
jae
adc
xchg
test
add
cmpsb
push
mov
lret
push
xor
mov
pop
push
mov
test
jge
push
and
ret
ret
xchg
arpl
jnp
sbb
pop
out
test
add
test
pop
scas
or
dec
js
mov
xchg
cmp
xchg
and
data16
mov
enter
pop
cwtl
sub
mov
mov
xchg
jns
xchg
shll
in
jb
inc
ja
pop
jbe
jmp
fistpl
push
test
test
pop
jno
stos
adc
sub
sbb
xchg
xchg
int
jle
pop
xchg
rcrb
jno
dec
mov
stc
add
loop
and
cld
inc
jl
cmc
js
inc
and
stos
pop
xchg
cmp
cmp
jge
sub
fistpl
sub
pop
adcb
or
xchg
hlt
push
aad
mov
pop
push
adc
xchg
adc
mov
int3
mov
cmc
sub
orl
dec
pop
cs
mov
and
lock
int3
idivl
pushf
adc
nop
pop
and
inc
std
mov
add
jns
lds
and
sarl
call
std
dec
aam
mov
out
push
stc
push
and
movsl
cmp
into
mov
and
lods
xlat
lret
and
dec
cli
jge
mov
dec
stc
add
repz
test
aad
mov
cs
je
enter
hlt
sbb
dec
push
jb
test
js
adc
hlt
roll
jg
push
in
inc
lea
dec
jecxz
mov
jns
repz
call
xchg
xorb
insl
sub
inc
and
lods
clc
pop
fistpll
jno
xor
outsb
dec
jmp
fs
xchg
gs
movsl
push
mov
jno
pop
cs
leave
pop
mov
imul
cld
repz
movsb
and
xchg
or
fdivrl
dec
enter
xchg
ss
cmp
xor
hlt
pop
mov
sub
out
cld
dec
aas
sbb
out
xchg
testb
fimull
leave
inc
add
dec
dec
lock
adc
loopne
jo
mov
mov
loopne
cmp
fisubrs
xchg
sub
or
xor
enter
dec
fistpl
pop
mov
repz
dec
cmp
sub
mov
into
dec
push
stc
lahf
xor
pop
paddb
in
push
fisubrl
int
cmpsl
adc
lahf
adc
cmpsl
hlt
cs
cmp
mov
movsb
cmp
xchg
or
call
test
inc
xchg
test
jae
dec
and
ret
cmpsl
fucomip
daa
jecxz
and
imul
add
mov
mov
lea
mov
cmpsb
rorl
push
call
adc
ret
imul
and
imul
mov
leave
xchg
add
test
cmpsb
iret
out
jnp
xor
loopne
or
mov
outsl
js
adc
test
adc
outsb
mov
stos
bound
ret
sbb
cmpsl
mov
mov
pop
outsb
rcll
sbb
ret
mov
iret
pop
ljmp
movsb
push
mov
mov
and
add
and
adc
lea
push
inc
test
sbb
ret
inc
je
iret
xorl
pushw
mov
sti
outsl
mov
xchg
pop
adc
loop
mov
stc
xor
loop
dec
cmpb
leave
push
mov
dec
xchg
out
fldt
fnsetpm(287
aam
push
push
je
sti
pop
mov
push
sbb
mov
shlb
jp
xchg
or
dec
outsb
dec
call
inc
loope
icebp
pop
xchg
pop
aas
push
mov
fdivs
test
push
cld
add
stc
or
imulb
mov
add
repz
lret
xchg
ret
mov
test
scas
add
cwtl
shl
jns
mov
add
popa
movb
add
xchg
xor
das
rolb
xchg
lcall
mov
lret
es
inc
mov
or
aad
cs
test
lods
mov
push
mov
repnz
and
sbbl
mov
addr16
cmp
out
mov
dec
mov
xor
stos
or
movsl
push
hlt
fmul
fs
in
or
jge
in
add
das
js
fisubl
les
pop
pusha
sahf
inc
and
add
insl
sub
xchg
scas
inc
mov
mov
cmpsb
xor
pop
mov
push
cmp
fisubl
stos
jp
xor
or
inc
push
mul
popf
cmpsl
jmp
mov
xlat
mov
pop
mov
rcll
sub
ja
cmp
cmp
sarl
outsb
or
repz
and
ret
mov
leave
pop
mov
push
test
addr16
xchg
out
shlb
push
mov
ret
pushf
jae
into
ss
cmpsb
icebp
mov
mov
inc
mov
inc
inc
rcr
hlt
pop
push
mov
push
dec
inc
outsb
or
jbe
lock
sar
cmp
scas
nop
pop
xchg
push
pop
mov
push
jne
mov
xchg
test
jle
adc
je
pop
dec
pop
scas
aaa
push
jp
lods
mov
lods
std
rcll
dec
jecxz
out
mov
adc
stc
test
pop
shlb
fst
dec
and
popf
pop
and
les
push
sub
cli
pusha
mov
xlat
scas
and
mov
shlb
shl
movsl
into
pop
or
fiaddl
sbb
push
daa
insb
ljmp
daa
mov
lret
push
addl
movsl
aad
js
sub
or
jnp
scas
or
xchg
daa
test
and
pushl
popf
cmp
inc
cmpsl
pop
sarl
data16
lret
push
mov
loopne
mov
jg
cmp
sbb
dec
pushf
fisttpll
dec
dec
out
out
mov
scas
cmp
scas
pop
stos
hlt
xchg
cld
jp
mov
or
mov
jb
jecxz
dec
push
adc
dec
shl
adc
adc
push
adc
in
push
out
adc
repnz
lods
adc
outsb
ja
int3
dec
adc
movsb
lods
xchg
enter
mov
jmp
pop
fnstcw
or
pop
xchg
dec
daa
jo
adc
insl
and
sub
clc
pop
xchg
xchg
paddq
dec
sub
out
int
xchg
pop
fists
adc
insb
push
sub
and
scas
sbb
fisubl
test
subb
add
dec
sbb
jecxz
pop
std
xor
fistl
mov
mov
sub
ja
shr
push
clc
mov
arpl
scas
frstor
xchg
xor
pop
addr16
lea
loope
jl
movsl
xchg
jle,pt
push
and
jbe
outsb
xor
cwtl
nop
pop
xor
push
mov
push
test
mov
or
ss
arpl
mov
or
jecxz
adc
dec
or
stos
and
fs
flds
mov
mov
in
ret
cmp
iret
sub
js
and
cli
test
inc
addr16
adc
inc
add
aaa
clc
rclb
lret
dec
dec
sbb
loope
lds
mov
bound
out
divb
push
add
orl
cwtl
mov
fnstsw
push
mov
cwtl
fs
adc
dec
adc
xor
sbb
fcoml
dec
lret
frstor
call
sbb
imul
stc
sbb
add
xchg
cld
xor
push
imul
int3
inc
ficoml
mov
cltd
dec
testl
jbe
dec
cmc
out
fdiv
fidivs
fld
cmpsl
setns
movsl
arpl
jp
call
dec
int
mov
cltd
loopne
mov
lahf
xchg
xchg
clc
cmp
loopne
fbstp
int3
sub
mov
data16
or
idivl
scas
insb
sbb
jo
shr
ljmp
xor
xor
popa
mov
pop
ffreep
ror
xchg
test
jne
xchg
das
decb
cmp
or
jmp
ja
test
sbb
stos
loop
out
and
sbb
xor
ficoml
cltd
jle
cwtl
mov
mov
dec
mov
push
pop
jnp
pushf
adc
jmp
mov
es
cmc
sbb
xor
jmp
adc
shll
pop
fdivrp
lock
push
sbb
lock
jle
je
push
inc
sub
out
sub
sbb
mov
aas
dec
adc
mov
out
ficoml
xchg
xor
xchg
mov
add
popl
fs
divb
ret
mov
sub
xchg
add
stc
cltd
sbb
sub
push
gs
adc
outsb
in
adc
jle
mov
xchg
cs
insl
outsl
aaa
cs
mov
lock
shlb
add
and
inc
xor
pop
xchg
cmp
push
dec
hlt
mov
cwtl
mov
mov
xchg
inc
sub
jg
aad
add
jo
and
aam
movsb
test
sbb
push
inc
mov
pop
out
and
adc
push
leave
jnp
shll
inc
mov
jle
pop
lock
les
jo
sahf
push
sub
daa
mov
mulb
incl
into
jnp
enter
xor
inc
mov
add
rclb
je
add
sub
sbb
add
scas
cmp
add
fisubl
mov
jns
and
jmp
jns
pop
jne
and
mov
xor
mov
dec
jecxz
xchg
pop
xchg
xchg
fimuls
lock
sbb
mov
dec
jnp
sub
xchg
xchg
pop
adc
rorl
inc
cld
mov
sbb
pop
or
add
or
icebp
aad
test
orw
mov
idivl
cwtl
push
ljmp
mov
pop
dec
cmp
fwait
pop
mov
subb
lods
mov
in
xor
push
lret
dec
push
xor
sbb
sub
aad
call
sub
hlt
xchg
push
cld
inc
mov
ljmp
cmp
cli
mov
jge
pop
lahf
jb
pop
mov
mov
jns
mov
add
jmp
popa
cmp
aam
xlat
xor
test
aas
cs
mov
js
mov
pop
jmp
fldl
cmp
loop
lcall
and
nop
aad
cltd
xor
inc
jmp
inc
jmp
outsb
cmp
lds
adc
pop
leave
iret
jecxz
inc
adc
lea
mull
inc
popa
lret
enter
rcl
push
xor
int3
dec
jno
xor
add
in
mov
shrb
sbb
lret
mov
mov
xor
hlt
cmpsb
mov
fldt
xlat
inc
loop
inc
sarl
xchg
mov
adc
into
or
jno
loopne
mov
xchg
jne
repz
sbb
jbe
enter
push
pop
push
xchg
sub
mov
scas
test
repz
fadd
cmp
xor
mov
cld
add
rcr
fwait
bound
mov
dec
inc
lret
add
mov
pop
aas
int
mov
in
loop
pop
jno
sub
xorb
mov
xor
ljmp
jnp
jb
sbb
xor
lds
mov
xor
add
sub
jns
inc
shlb
scas
xchg
lods
jl
dec
dec
shlb
mov
shrl
mov
stos
out
xchg
mov
xchg
movsb
imul
stc
lds
push
inc
jle
cmp
and
xor
in
push
ret
pop
subb
fdiv
push
mov
push
mov
dec
and
dec
bound
mov
jmp
or
adc
cli
xlat
pop
sbb
lods
add
mov
xchg
popf
test
in
mov
push
cmp
add
lock
cmp
loope
clc
addr16
push
fidivrs
es
insl
xor
ja
mov
call
xlat
sbbb
insb
cmc
jae
cmpsl
loopne
movsl
popa
or
lods
cmp
inc
and
std
iret
dec
add
mov
repz
pop
jge
add
in
enter
mov
jnp
jmp
cmc
js
cmp
out
mulb
fst
pop
cmp
dec
inc
xchg
inc
pop
push
sarl
jmp
gs
pop
sub
test
inc
pop
je
xchg
mov
mov
push
pop
cli
nop
lahf
sub
jae
lds
xor
in
leave
mov
push
imul
stos
sbb
int3
lret
outsl
xor
and
cltd
mov
daa
fldl
xor
dec
lcall
jl
enter
pop
jp
jecxz
scas
mov
icebp
lcallw
jge
cmc
push
imul
clc
ds
setae
pop
inc
sbb
xchg
or
stos
insl
loop
xlat
dec
jecxz
or
xchg
pop
scas
cwtl
daa
pop
mov
call
pop
and
and
movsl
repz
addr16
xlat
fidivrl
mov
jno
sbbb
subb
xchg
xchg
xchg
insb
pop
daa
lods
fstps
hlt
stos
dec
pushf
gs
push
cmp
push
xchg
jo
xchg
mov
xchg
leave
and
mov
mov
hlt
cmpsb
inc
and
test
leave
ret
push
sahf
add
cmp
outsb
ret
adc
subb
sbb
daa
sbb
adc
das
or
cmp
out
aaa
repz
shlb
sub
cmp
mov
push
mov
lods
pusha
pop
add
and
popf
rcll
pop
and
push
rcrb
inc
inc
leave
mov
test
jecxz
push
mov
mov
dec
inc
or
rcrl
mov
push
xchg
dec
insb
les
gs
out
scas
add
mov
into
dec
fcoml
mov
adc
push
cmp
dec
xor
sbb
inc
inc
cmpsl
cmpl
in
cmpsl
mov
jno
xchg
es
movsb
out
out
mov
mov
push
jl
push
xor
dec
adc
mov
in
mov
sub
dec
adc
adc
mov
dec
imul
or
or
popa
jmp
cmp
shlb
xchg
mov
jg
and
lea
xor
cmpb
pusha
jo
cmp
mov
cwtl
mov
out
add
lahf
leave
push
pusha
lea
mov
in
sahf
hlt
rorb
loope
cmp
adcb
insb
jg
push
stos
loop
sub
das
xchg
jne
shlb
aas
imul
push
jbe
jb
faddl
mov
xchg
mov
movsb
lods
pop
xor
mov
sti
cmp
pop
cmpsb
push
cwtl
test
in
in
mov
insb
cmp
jmp
pop
jne
xchg
jne
call
ret
dec
xchg
fwait
add
dec
not
pop
xor
fcmove
mov
mov
xchg
mov
add
enter
dec
insb
dec
dec
jne
jmp
test
lea
push
mov
loope
lea
xor
push
add
test
inc
das
xchg
add
nop
jmp
test
nop
xchg
adc
jbe
pop
in
mov
js,pt
out
sub
popf
mov
and
mov
out
jle
mov
imul
pop
in
leave
pop
fsubrs
je
scas
add
in
divb
fs
addl
sbb
call
cli
cwtl
mov
clc
xchg
pop
sub
cmp
sub
andl
sub
cmp
rcr
pop
pop
xor
dec
mov
mov
and
push
push
fwait
addl
mov
aaa
sub
add
xchg
rcr
loope
push
cmp
in
adc
push
mov
jnp
push
cli
adc
test
cmp
pop
lahf
dec
popa
cwtl
icebp
pop
aad
ljmp
pop
mov
test
inc
and
fwait
int3
add
dec
lret
or
and
sbb
pop
xor
fldl
jl
js
pusha
dec
fs
jmp
xlat
outsl
movsb
sub
mov
invd
dec
mov
cmp
push
mov
sbb
pop
cmp
jg
lahf
xor
pop
testl
aam
mov
cld
out
pop
cmc
das
int
adc
cmp
lahf
jne
ret
dec
cmpsl
insl
les
or
leave
scas
repnz
xchg
pop
inc
cld
mov
adc
inc
sbb
dec
mov
cmp
add
sbb
mov
fucom
test
pop
pushf
mov
fldt
push
sub
pusha
sarl
mov
adc
dec
mov
push
mov
xchg
pop
dec
mov
push
inc
out
adc
adc
call
xor
cli
push
xchg
mov
inc
xchg
jne
daa
fdivr
sub
ret
cmpsl
push
leave
add
sbb
mull
mov
jg
jnp
push
sahf
or
stos
and
ret
mov
sbb
rcr
test
jnp
mov
out
fadds
jbe
sbb
sbb
js
notb
pop
cmpsl
push
fisttpll
jb
sub
xor
mov
add
lahf
push
sub
sahf
pop
push
and
dec
in
push
fists
icebp
xchg
cmc
in
das
loope
sub
pop
mov
inc
dec
enter
cwtl
lods
incb
inc
popf
into
xchg
test
and
test
mov
adc
push
les
ss
mov
dec
xchg
fdivr
push
outsl
aad
loopne
sub
pop
or
adc
or
inc
mov
cmp
xchg
sub
insl
stc
cwtd
mov
xor
lock
xor
mov
adc
push
out
sbb
rcrb
xor
xchg
jl
jns
ror
sub
sbb
popa
dec
in
push
insl
mov
sarb
xchg
inc
jge
pop
mov
push
push
and
fcomps
mov
iret
push
xlat
jno
mov
scas
push
or
aaa
mov
pop
mov
cmpl
jnp
loopne
in
mov
dec
imul
adcl
push
xor
scas
add
out
daa
or
call
push
xchg
std
sahf
test
dec
enter
sub
or
sti
mov
push
loope
cmpsb
test
cmp
vpcmpgtw
xchg
fdivs
mov
outsb
bound
lods
lret
in
and
ljmp
mov
inc
add
pop
adc
lods
pop
addr16
std
fdivl
add
and
cmc
mov
jl
dec
andl
dec
jbe
xchg
and
mov
repz
jecxz
jge
ja
pusha
stos
inc
sub
sahf
push
add
fdivrs
jmp
insb
add
mov
or
xorb
inc
sub
mov
ds
jb
mov
mov
outsl
aaa
adc
adc
mov
lds
out
dec
sub
arpl
outsb
jae
and
mov
and
sarl
into
data16
jb
in
mov
setae
jae
add
in
je
clc
adc
repz
mov
lret
sub
push
push
dec
cs
movsb
shlb
jge
cmpsw
aaa
stos
fsts
rorb
and
test
into
jmp
or
ret
cli
mov
push
stc
ds
xchg
pushf
lods
add
xchg
fs
jae
inc
mov
faddl
cmp
jbe
adc
xchg
sbb
aad
pop
xor
pop
xor
imul
mov
jne
int
out
out
push
inc
push
push
xor
push
or
pop
lock
xchg
dec
push
int3
arpl
pop
outsb
es
lcall
aaa
mov
inc
add
stos
xor
fldt
mov
out
mov
outsl
das
cs
adc
mov
sbb
mov
fsubs
lcall
lods
imul
pushaw
inc
dec
sbb
xor
addb
pushf
xchg
gs
mov
mov
outsb
rclb
pop
sub
imul
ret
flds
shll
addb
in
sub
jo
inc
popf
dec
and
xchg
mov
lods
cmp
mov
fdivrl
push
int
cmp
push
sbb
xchg
jmp
push
xchg
xchg
repnz
cmp
inc
cmp
in
cmpsb
test
cmp
add
cmpsl
xchg
sub
lock
jbe
loope
adcl
adc
pop
into
mov
or
cltd
js
ret
loopne
push
jge
test
rclb
cmpsb
xchg
xchg
js
cmp
out
cmp
scas
or
adc
cmp
in
xchg
fsubl
mov
popa
mov
jg
shlb
add
push
push
mov
fsubrp
fs
and
cmpsl
and
mov
and
or
mov
pushf
les
in
add
sahf
ret
insl
adc
stos
xchg
inc
cld
repz
sahf
arpl
inc
clc
ror
or
xor
aas
out
jp
outsb
xchg
adc
inc
push
ljmp
call
pop
cmp
ss
add
ja
inc
dec
subl
scas
repz
cmc
xchg
mov
mov
cmp
mov
movsb
imul
and
pop
pop
rclb
mov
cld
and
or
jo
pop
mov
xchg
cmp
sbb
ljmp
cmp
and
xchg
or
lret
rolb
sub
sahf
push
icebp
sbb
push
fidivrl
gs
outsb
ret
add
test
lock
add
or
sbb
xor
mov
into
loopne
mov
sub
repnz
lret
fcom
pop
or
daa
dec
aam
cmp
in
aad
pop
mov
cmpsb
cmc
and
in
lods
push
dec
cmp
push
movsl
ljmp
insb
add
xchg
mov
sub
icebp
adc
jge
push
aas
xor
and
xchg
outsb
sbb
jo
ja
adc
push
add
mov
xor
loope
xchg
fwait
mov
and
pop
cmp
jae
leave
cmp
adc
adc
xchg
xchg
sub
lds
xchg
enter
stos
rol
rcrb
mov
xor
inc
push
fsubrs
inc
dec
mov
testl
add
lret
sub
push
pop
outsb
dec
stc
cli
es
mov
jmp
fdiv
sbb
push
xchg
sub
nop
xorl
fidivl
pop
pop
mov
lods
cmpsl
outsl
das
jns
push
mov
cmpsb
in
pop
repz
out
iret
jecxz
mov
out
fidivrl
and
cmp
push
je
jno,pt
inc
fsubl
fs
mov
in
inc
inc
xchg
xor
fldt
dec
imul
arpl
lret
push
scas
pop
les
pop
aad
test
mov
shrl
pop
cmp
in
stos
pop
xchg
xor
fdivs
test
test
push
add
sarl
ret
xchg
cltd
inc
inc
xchg
sub
pop
cmpb
xchg
dec
test
sbb
and
pusha
movsb
clc
inc
adcl
arpl
sbb
push
sbbl
sbb
in
sbb
mov
stos
fwait
or
xchg
js
mov
mov
mov
nop
adcl
jns
jle
aas
sub
out
rcrb
aaa
inc
loop
pop
clc
sbb
inc
outsl
pop
dec
jne
cmpsb
movsb
sbb
lret
orl
jge
ss
fcmovb
movsb
jns
or
aam
aaa
je
or
xorl
mov
add
lcall
inc
push
int3
les
mov
inc
mov
inc
pop
mulb
pop
das
cltd
pop
push
pusha
push
mov
xchg
mov
add
addl
ficoml
sbb
and
mov
addr16
adc
mov
lods
out
mov
xchg
mov
jnp
dec
jp
sbb
push
dec
mov
push
ljmp
movsl
xor
cmp
lock
adcb
aas
stc
dec
loop
mov
dec
xchg
cmp
add
fnstcw
push
clc
xchg
mov
into
enter
loope
xor
or
sahf
dec
xchg
leave
mov
cmpb
fldt
imul
mov
adc
out
lahf
sahf
ljmp
cmp
dec
fs
xor
rcrl
in
lret
pop
movd
loop
jb
mov
mov
cld
loopne
int
dec
cmp
cld
icebp
mov
popf
xchg
movsl
xor
xchg
scas
aaa
fs
jle
cmp
jmp
xchg
jmp
jne
in
pusha
ret
inc
and
shrl
xor
outsb
loope
fadds
xlat
mov
lcall
movsl
lea
bound
mov
inc
out
nop
and
loop
fs
fstps
and
lret
add
shlb
xchg
jbe
addr16
lahf
pop
sbb
sbb
push
inc
rclb
fcomp
adc
lcall
insl
pop
stos
call
xchg
fcoms
sbb
xor
cmp
xchg
xchg
popa
sub
pop
out
dec
movsl
pop
mov
inc
fsubrl
mov
loop
pop
cmp
gs
inc
mov
mov
xor
out
scas
inc
in
jae
fdivp
ja
out
scas
imul
test
pop
fisttpll
dec
push
mov
pop
sbb
sbb
leave
out
popa
inc
sub
xor
push
jl
xchg
jbe
xchg
mov
push
pusha
fisubs
mov
push
sbb
add
sub
cld
cmp
cmp
insl
sbb
movsl
pop
xchg
push
leave
imul
push
xor
pop
call
mov
push
in
pop
add
shlb
cmpsl
sub
cmp
adc
addr16
out
minps
add
push
fs
pop
pop
ljmp
or
xlat
das
sbb
les
mov
stc
cmc
inc
pop
scas
mov
imul
test
loop
stos
cwtl
add
fbstp
jmp
inc
sub
jmp
or
scas
lods
mov
test
mov
insl
lea
ds
cmpb
das
movsb
lods
inc
cmp
jb
fcomp
mov
pop
jecxz
loop
lret
mov
xchg
xchg
andb
fsubrs
dec
mov
ss
push
aaa
cwtl
loop
les
dec
sarb
sti
mov
sbb
sub
cmp
cli
cli
push
call
sub
loop
lcall
or
scas
roll
hlt
xor
jnp
xchg
fcomps
dec
fwait
lods
push
js
and
int3
sbb
xor
aad
xchg
mov
fdivr
jno
jno
mov
inc
add
ja
adc
stos
or
nop
test
mov
cmp
inc
test
jbe
scas
push
sbb
ret
sub
push
sub
add
imul
cmp
stc
jnp
dec
fmull
daa
in
jg
popa
xchg
testb
in
sbb
adc
push
addr16
push
fbld
or
cmp
sub
mov
int3
pusha
jp
inc
xchg
push
xchg
mov
andb
dec
dec
xchg
sub
das
ror
pop
dec
push
cmp
pop
xchg
into
insb
jge
xchg
xchg
mov
imul
inc
mov
lcall
sahf
imull
xchg
jecxz
in
push
xchg
repnz
or
andl
xor
dec
sbb
cli
in
lahf
adc
aad
fwait
mov
mov
or
add
ljmp
pusha
add
cmp
fists
inc
mov
cwtl
xchg
and
fstl
pushf
mov
adc
sbb
xchg
icebp
cmp
imul
lahf
jge
je
dec
mov
data16
pusha
pop
sub
adc
dec
adcl
test
mov
push
test
jmp
xchg
fwait
cmpsl
mov
mov
clc
push
dec
dec
insb
mov
cmpsl
xorb
leave
push
pop
hlt
add
in
mov
mov
jb
in
add
dec
jp
adc
daa
imul
push
stos
mov
loopne
cmpsl
sub
xor
mov
ljmp
movsl
mov
xchg
inc
xchg
xor
fisttpll
and
push
mov
pop
inc
lds
sub
inc
lcall
ret
xor
movsb
and
popf
cmpsb
pop
insl
add
mov
fs
aad
addb
out
mov
inc
bound
mov
adc
cmp
push
dec
jmp
movsb
xor
push
cmp
adc
aas
imul
xchg
cwtl
add
js
out
test
fsubrs
push
xchg
int
mov
in
dec
add
push
out
dec
dec
sbb
sub
mov
int
repnz
cmp
pop
and
jge
cmpsb
push
jo
cmp
sahf
adc
jge
cwtl
adc
dec
in
xchg
add
fstpl
xchg
sbbl
lods
sub
jecxz
sbb
mov
in
fildll
cmp
or
add
adcl
lahf
cli
cmp
dec
stos
lods
pop
and
sub
pop
cmpsl
test
mov
mov
and
test
push
dec
fcomp
inc
aas
outsl
push
or
mov
ret
pusha
pop
cmpsb
or
outsb
cmp
in
fsubrp
clc
imul
or
popf
cmc
stos
sub
xchg
dec
ret
or
cs
xchg
movsl
pop
fcmove
mov
xor
xor
jecxz
push
mov
divl
push
dec
loope
repnz
sbb
movsl
leave
dec
jge
jne
enter
mov
or
jmp
iret
add
test
mov
punpckhdq
mov
shrb
push
bound
in
int
lods
out
in
in
ss
sbbl
shll
out
mov
cmp
and
cmp
das
sbb
dec
or
lret
ja
cld
test
fbstp
test
movsb
jnp
add
jb
sbb
dec
jne
stc
icebp
cwtl
out
sbb
icebp
into
jge
mov
mov
xlat
dec
jbe
mov
jae
divl
sub
xchg
or
push
pop
cmc
out
lds
shr
rorl
pop
dec
push
mov
mov
mov
stos
mov
sti
push
adc
pop
rorl
mov
mov
lcall
jp
mov
repnz
scas
adc
add
cltd
dec
cmpsl
add
fst
jno
fidivrs
out
test
and
mov
int3
pushf
xor
pop
loope
push
adc
fadds
js
cmpsl
repnz
mov
cli
imul
dec
mov
push
lahf
and
ret
shrb
aas
inc
mov
mov
std
xor
push
addl
ficomps
or
scas
inc
add
add
jmp
loopne
fsubr
mov
xchg
fisubs
into
rorb
int
testb
inc
jno
mov
cmp
adc
arpl
imul
loop
push
dec
sub
jge
mov
mov
sub
popa
sbb
jns
arpl
and
andl
loop
inc
add
mov
in
mov
std
jne
ret
push
mov
pop
pop
subl
clc
les
shrl
push
pop
cwtl
mov
push
xchg
pop
dec
xchg
jge
rcll
in
adc
inc
mov
scas
dec
mov
sub
jg
or
cmp
movsb
insl
pop
subl
sbb
sbb
xchg
scas
cmpl
imul
lret
inc
shl
jae
or
jge
mov
pop
xchg
shrb
fucomi
pusha
mov
clc
jae
or
add
mov
daa
cmp
arpl
fs
mov
mov
pop
in
in
rcrl
outsb
aas
push
test
fsubs
mov
xor
adc
jb
aam
push
adc
into
in
cld
sbb
mov
aad
call
enter
fsubr
out
add
cmp
add
sbb
pop
mov
fadd
scas
leave
xchg
sub
push
scas
into
into
xchg
inc
daa
mov
iret
xchg
cmp
orb
jge
push
jno
pushf
mov
mov
ret
adc
nop
sbb
mov
lcall
in
insb
or
cs
jae
sti
pusha
cli
sbbl
xchg
mov
sub
gs
mov
sahf
js
data16
cs
fists
in
in
sub
inc
pop
cwtl
xchg
pop
shrb
dec
cmp
shll
push
jno
push
mov
xchg
rcrb
adc
test
pop
enter
mov
xchg
faddl
ret
mov
ja
jl
mov
test
orl
jle
push
pop
data16
push
push
lahf
xor
rolb
add
cmp
xor
and
neg
in
fisubl
sbb
sbb
push
enter
fsts
addr16
sbb
addb
sbbl
test
xchg
fists
lret
imulb
push
xor
xor
mov
or
jle
mov
sbb
jmp
cmpsl
lahf
arpl
xor
xchg
sub
jo
iret
or
sbb
push
pop
in
jns
hlt
stc
mov
movsl
xlat
cmc
push
cmp
rclb
icebp
dec
sbb
push
xchg
mov
das
cwtl
pop
lods
leave
lret
stos
fldl
adc
and
jb
js
jmp
test
xor
fisttpll
inc
pop
cmp
in
jge
mov
aaa
pop
mov
fildl
pop
jl
mov
fiaddl
mov
xchg
imul
xlat
adc
inc
call
push
ret
push
dec
mov
and
adc
xor
cld
mov
xor
mov
shufps
mov
dec
mov
vpshab
add
lds
cmp
push
imul
imul
aam
cmp
push
sahf
addl
outsb
call
enter
push
cmp
enter
leave
aas
clc
fadd
lcall
mov
lods
or
test
rcll
jmp
rcll
or
in
xchg
push
and
cmp
mov
dec
pop
push
add
imul
adc
mov
insl
lahf
inc
xor
xchg
in
xchg
xchg
mov
out
repz
inc
jno
mov
popa
inc
pop
inc
add
es
mov
enter
imul
cmp
mov
dec
into
jb
dec
je
jmp
js
addr16
cs
popf
push
pushf
mov
gs
xchg
sub
mov
fcompl
xor
dec
nop
mov
adc
in
cltd
pushf
stos
fisubrs
mov
sub
cwtl
mov
mov
xchg
add
cli
bound
fsubl
popa
sbbl
repnz
adc
and
ret
sbb
pop
inc
sbb
rcll
inc
aam
adc
or
add
mov
mov
pop
cmpsl
and
cmp
jg
fdivl
jne
lds
movsl
pop
mov
lods
mov
push
lret
orb
imul
mov
pop
outsb
inc
push
jb
mov
mov
cwtl
das
sbb
movhps
ds
mov
mov
lock
ret
in
jl
mov
mov
in
mov
leave
inc
pop
push
popl
mov
jmp
mov
ljmp
ljmp
fldl
inc
xor
jnp
cmp
pushf
pop
add
inc
sub
add
sub
lahf
jp
addr16
fimuls
loopne
mov
insb
pop
pop
roll
jnp
push
ficoms
xor
dec
cmpsl
int
lds
rol
adc
fbstp
test
dec
add
and
leave
dec
xor
xchg
xlat
cld
cmc
movsb
sbb
add
lcall
movsl
lds
pop
sub
push
mov
pop
push
fildl
mov
in
adc
roll
fnstcw
call
sahf
out
cli
push
mov
push
fistps
xor
and
lock
and
test
iret
xor
mov
pop
insl
mov
inc
pop
xor
and
sbb
sbb
pusha
push
or
inc
int
sar
xchg
or
cmpsl
outsl
add
sbb
fs
insl
add
out
imul
and
pop
add
cltd
daa
jl
push
jbe
cmp
cld
imul
add
cmp
stos
fldl
jle
jb
xor
test
mov
inc
addr16
fstpt
adc
xchg
mov
rorl
mov
inc
roll
hlt
cmp
dec
mov
cld
clc
lea
xor
int3
pop
xchg
int
outsl
push
ljmp
mov
add
cwtl
jae
push
rorb
push
icebp
into
xor
cmp
or
scas
stos
jl
in
dec
leave
aas
inc
push
sahf
fistl
mov
push
and
dec
jmp
pop
fiaddl
xchg
movb
cmp
std
push
stc
mov
pop
rcll
jnp
loop
fcmove
test
mov
fcoml
xchg
mov
and
cwtl
pop
sub
push
inc
jo
cmp
test
cmp
mov
fsubs
push
push
adc
cltd
mov
cs
dec
iret
cld
xorb
dec
xchg
sbb
gs
xor
ret
aad
in
jecxz
cmp
pop
ljmp
adc
sahf
shlb
notb
mov
into
into
std
sbb
flds
sub
mov
fcmovu
int
call
inc
fwait
aad
loopne
or
mov
jg
icebp
insb
pop
fstpt
xchg
pop
jg
fwait
dec
xchg
pop
xchg
mov
scas
push
jbe
jno,pt
xchg
ja
mov
mov
std
loope
mov
bound
jmp
fwait
cli
ds
outsb
sub
cmp
in
lret
lock
pop
push
mov
mov
subb
enter
repz
cmp
loopne
mov
cmpb
and
xchg
inc
add
add
cmpsl
scas
mov
xor
iret
mov
out
cmc
ficomps
push
test
leave
or
ds
or
mov
adc
insl
popf
mov
sahf
sub
lahf
pop
call
mov
aad
xchg
dec
or
mov
test
imul
ds
push
jae
enter
push
cmp
mov
test
add
cmp
inc
scas
test
or
mov
scas
push
xor
repz
int3
clc
popf
sti
rcrl
jns
fs
jg
addr16
dec
lods
lds
in
mov
popf
sti
int3
nop
adc
sub
ljmp
mov
adc
daa
sub
lds
cmp
scas
icebp
cmp
sbb
aas
sbb
loop
adc
sub
stos
push
sub
cli
adc
xchg
jo
jo
in
cmp
mov
js
jns
mov
push
xchg
cmp
ret
or
es
mov
mov
ljmp
jl
icebp
lahf
bound
jg
imul
fdivl
test
out
push
test
inc
cmpsb
fstl
es
jae
xchg
call
idiv
mov
mov
adc
push
std
pop
sbb
jnp
xchg
xchg
loop
mov
mov
add
jecxz
mov
push
dec
jg
gs
popa
pop
xchg
clc
cmpsl
addl
lcall
adc
xchg
xchg
jno
mov
popf
jp,pt
dec
xchg
aam
xor
js
mov
jo
bound
mov
not
inc
pop
mov
lahf
jne
jb
mov
inc
fldcw
xor
mov
adc
xchg
xor
jo
xlat
sbb
out
mov
xchg
lock
mov
enter
mov
jns
sub
jo
xchg
push
and
imul
data16
push
inc
mov
jae
push
cltd
pop
cmp
imul
pop
gs
stos
cwtl
or
cmp
insl
pop
insl
sbb
xlat
jne
fcoml
aam
pushf
les
cmp
clc
test
clc
mov
sub
scas
xchg
push
mov
movsb
popa
repz
push
xchg
stos
jl
add
mov
add
adc
mov
movsl
or
popl
cs
movsb
fnstenv
inc
fwait
jno
jecxz
leave
imul
roll
push
jb
adc
popa
or
jle
add
mov
or
stc
cmp
test
xlat
lods
mov
shr
and
dec
push
pop
sbb
push
scas
pushf
mov
dec
scas
inc
movsb
mov
add
mov
xchg
stc
ret
insb
add
sub
out
xchg
pop
pop
testl
ss
inc
es
incb
in
adc
jns
sub
inc
dec
sub
pop
cmp
loop
push
int3
out
std
int
xor
dec
orb
jmp
arpl
xorb
mov
cld
pop
inc
fld
cmp
xor
imul
loope
and
in
scas
push
xchg
leave
rcr
jmp
or
inc
into
jecxz
jmp
divl
mov
mov
into
pop
inc
sbb
mov
pop
and
mov
pop
std
sbb
lret
addb
mov
xor
mov
pop
outsb
pusha
sbb
test
icebp
div
scas
adc
int
cmp
add
pop
jb
mov
push
js
sbb
add
inc
sub
push
jecxz
adc
or
and
neg
stos
mov
jno
shr
dec
or
pop
mov
xchg
jmp
clc
add
clc
jnp
imul
inc
shll
lds
sbb
daa
ffree
and
sarl
inc
mov
xlat
cmp
pop
mov
mov
bound
pop
jnp
inc
pop
clc
cmp
cltd
dec
xor
mov
pushf
test
aas
stos
out
push
mov
pop
jp
fnstcw
dec
jno
or
test
mov
fsub
mov
ret
jne
pusha
dec
pop
xor
jl
pop
mov
cmp
cmp
out
mov
lods
dec
and
sahf
nop
or
movsb
xchg
pop
shrl
mov
fwait
push
and
push
mov
cmpsb
jg
out
fsub
or
xchg
sub
adc
inc
adc
xlat
stos
xchg
pop
xchg
pop
xlat
push
dec
cwtl
test
pop
inc
sbb
xor
lret
lret
lcall
add
shl
or
repz
nop
mov
mov
stos
cmp
imul
scas
pop
cmpsl
xchg
push
nop
xchg
inc
out
mov
leave
pop
jne
jmp
xor
pusha
cltd
add
pop
cmp
pop
in
pop
imul
loop
pushf
test
clc
leave
jp
imul
mov
out
ja
pop
mov
out
das
rolb
pop
mov
push
test
aas
fisubl
sbb
cmpsb
cld
sbbl
cmc
andb
cmpsb
jp
push
inc
jge
sbb
jnp
push
pop
mov
jnp
add
push
jbe
les
cmp
lods
shr
pop
sub
lret
cmpsl
shl
sbb
outsb
fnstcw
mov
aas
aam
jle
mov
add
sahf
movb
ds
inc
lret
ficompl
sahf
out
punpckhwd
xchg
push
pop
pop
movl
mov
repnz
icebp
rorb
dec
sub
dec
stos
out
jns
cmp
push
hlt
jg
pop
mov
xor
lret
ret
push
lea
jbe
int
mov
jmp
mov
push
and
mov
push
shl
in
sbb
or
add
das
pop
cld
sbb
in
jo
into
jp
sub
cmp
arpl
sbb
and
fldenv
mov
popf
adc
push
jns
pop
jns
sahf
psubsw
lcall
test
inc
mov
xchg
sbb
push
js
fsub
inc
mov
adcl
cs
add
pusha
mov
fcmovu
loop
mov
sar
mov
or
xchg
lret
mov
int
push
push
pop
add
repnz
daa
aam
aas
sahf
jno
jle
mov
outsb
lahf
or
adc
clc
sbb
mov
insl
clc
mov
adc
add
cmp
cmp
jecxz
inc
insb
push
jle
ret
cmp
mov
push
paddsb
orb
or
scas
in
dec
mov
mov
and
orl
in
sbb
jl
fbstp
mov
ljmp
out
iret
pop
jle
fsubr
pop
cmpb
lret
iret
cwtl
jo
clc
sarb
jecxz
sub
fidivs
lods
and
push
int
fists
push
push
or
mov
pop
imul
sub
adc
mov
stos
ds
xor
fistl
xor
sub
adc
fidivrl
cmpsl
add
aad
lahf
lret
idiv
outsl
rclb
push
aad
rorl
loope
add
rolb
cltd
or
aam
or
inc
xchg
shr
loopne
test
adc
rolb
sub
or
pop
aad
xor
dec
mov
cli
pop
pop
in
and
shlb
push
imul
cwtl
sub
sbb
or
aas
sahf
cs
sahf
lahf
jmpw
test
adcb
stc
push
mov
nop
mov
inc
or
dec
mov
xchg
enter
das
or
mov
imul
outsl
or
pop
add
xor
jbe
notl
iret
shll
in
aam
mov
adc
repz
mov
pop
imulb
adc
hlt
inc
movsl
cmpb
cmp
pop
stos
fs
jns
sbb
insl
hlt
outsb
mov
cmp
sub
pop
inc
push
cmp
and
cmc
mov
insl
cmc
cs
ret
sub
sbb
mov
orb
push
scas
cli
pop
divb
sub
sub
pop
orl
aad
popa
dec
jae
adc
jo
mov
into
ss
lock
pop
mov
push
xchg
adc
stos
in
push
jge
std
jecxz
adc
mov
into
out
dec
sub
or
sbbb
inc
lret
out
xor
pop
pop
sub
sub
gs
jle
not
sbb
sbb
push
call
xchg
and
xchg
mov
repnz
cmp
lods
outsl
sub
and
sub
lock
mov
or
test
arpl
out
mov
imul
mov
pushf
xor
sbb
cmpsl
outsl
iret
inc
and
arpl
loop
outsl
repnz
lcall
mov
test
add
fyl2x
out
adc
mov
daa
push
scas
cmp
xchg
jnp
dec
in
inc
jecxz
add
in
mov
dec
daa
lds
outsb
aas
xor
js
insb
jno
push
push
scas
outsl
jg
mov
call
dec
test
fs
ljmp
loop
stos
jle
mov
or
scas
sbb
push
and
pop
pop
lods
mov
pop
rolb
fistpll
push
pop
or
add
adc
lea
add
gs
mov
xchg
add
fidivs
add
sub
jnp
jb
out
stos
add
in
fists
arpl
sbb
movsb
add
in
inc
cmp
sti
xchg
dec
jg
aam
mov
sbb
inc
or
jnp
xchg
and
divl
fdivl
mov
xor
std
ds
jns
lret
sbb
js
lret
mov
pop
pop
leave
mov
adc
popf
ficoms
adc
inc
cmp
pop
ljmp
jo
fcmovnbe
jl
imul
mov
xchg
mov
stos
pop
ljmp
shl
push
lea
nop
cmp
bound
sub
xchg
scas
mov
or
mov
push
les
data16
jnp
xchg
addr16
push
push
notb
pusha
lea
adc
pop
or
sub
mov
mov
mov
add
or
nop
xchg
mov
icebp
fildll
xchg
mov
ja
out
dec
faddl
add
les
es
insb
sbb
xor
pop
xchg
add
cmp
mov
dec
xchg
lea
and
sub
fistps
lock
in
outsb
ffree
inc
divl
mov
cmp
mov
push
fwait
lds
pop
lea
mov
pop
push
arpl
inc
jno
xchg
or
dec
mov
movsl
cmpsb
call
cmpsl
inc
cmp
push
int
and
fwait
push
push
out
in
push
adc
mov
and
jae
pop
and
fisubrs
xchg
push
cmp
add
mov
jnp
cmpsl
ljmp
mov
push
stc
xchg
shl
js
lds
push
js
xor
mov
dec
sbb
cmpsb
lret
mov
pop
dec
daa
outsl
fnstcw
inc
nop
nop
push
cmpsb
cs
int3
lret
lods
shrl
mov
jmp
aam
in
adc
jge
rcrb
push
inc
cmp
adc
adc
mov
push
mov
jnp
mov
cmp
ret
test
in
ja
sarl
dec
xchg
loopne
xchg
sub
mov
cmpsb
pop
aas
sbb
lods
jo
test
mov
clc
push
adc
xchg
sbb
stos
mov
or
out
push
je
sub
insb
loop
ja
out
xor
stos
push
cmc
lret
sub
mov
or
adc
aam
push
ret
inc
push
imul
test
mov
js
mov
pusha
les
sbbl
pop
sbb
and
pusha
pop
add
sbbl
inc
mov
lods
mov
push
ss
xor
xor
mov
push
icebp
push
pusha
mov
sub
test
mov
xlat
xchg
mov
xchg
jecxz
dec
pop
out
insb
repz
and
push
cmp
bound
fnsave
sub
push
in
mov
xor
stos
outsb
push
inc
and
sub
jg
arpl
inc
shrl
or
add
and
psllw
add
jmp
xor
push
popa
inc
cmp
sub
pop
sub
jb,pt
and
adc
pushf
xor
xor
mov
lods
push
inc
or
ret
cmp
loopne
daa
mov
or
cmp
icebp
xor
aaa
in
std
sbb
push
dec
xorl
out
mov
movsl
jl
and
mov
mov
adc
rorl
arpl
jbe
clc
pop
mov
imul
inc
inc
fldt
and
movsl
cmp
lret
pop
js
loop
xchg
jg
jo
scas
sahf
movsb
das
clc
mov
insb
push
aas
in
add
cmp
jge
xor
or
lret
lock
mov
mulb
fyl2xp1
sub
push
fdivrs
adc
shl
popa
mov
mov
nop
dec
out
dec
lcall
inc
outsl
mov
mov
sahf
add
mov
lds
ds
leave
iret
lock
sub
add
push
stos
notl
dec
lods
int3
mov
jecxz
cmp
loopne
imul
cmp
push
push
add
xlat
shrb
shll
aad
mov
loope
jae
out
repz
sub
sarl
jno
jg
cmc
and
out
xor
mov
call
sub
loop
add
lods
pushf
fs
ret
add
hlt
clc
in
andb
or
fcomip
adc
test
test
mov
jmp
inc
hlt
int3
jecxz
push
fwait
imul
mov
mov
or
dec
mov
repnz
sar
insb
add
fsubs
pop
imul
inc
mov
hlt
in
jbe
mov
inc
push
in
sbb
pushf
movsl
xor
push
stos
js
mov
ret
and
and
pop
popf
fwait
jecxz
cltd
sub
or
cmp
cmp
addr16
jo
shll
inc
xchg
inc
sbb
sbbl
pop
inc
add
xor
filds
sub
jg
jb
std
cs
cmp
push
outsb
push
dec
push
jmp
aas
fisubrl
stos
addb
xorb
push
out
pop
mov
in
test
xchg
ja
push
cmp
in
cltd
xor
pop
mov
or
push
pop
jge
sti
outsb
cmp
push
aam
dec
jne
mov
xchg
dec
ror
ret
xchg
mov
in
pop
and
push
adc
mov
pop
mov
daa
ds
popa
lret
xchg
fsubl
pop
and
mov
rcll
xchg
popf
cmc
pop
jle
sub
add
mov
mov
add
inc
sub
push
lahf
jb
adc
dec
cmpsb
cmpsl
pop
in
push
mov
xor
mov
lcall
cwtl
loope
clc
mov
popf
cmp
push
add
push
shll
stos
insb
xchg
in
rcll
fdivr
je
push
jnp
mov
mov
adc
ret
rclb
dec
xor
pop
out
out
aaa
clc
int
cmp
pop
mov
cmpsb
outsb
stos
out
jne
test
fwait
pop
dec
xchg
stc
test
push
mov
and
setne
cmp
mov
xchg
sub
xor
ja
insl
pop
adc
lret
int
jo
dec
out
adc
xor
adc
jae
insl
movsl
sahf
inc
mov
in
jecxz
push
mov
cltd
push
push
push
and
mov
mov
fiaddl
jae
mov
jno
add
add
cs
mov
aam
or
jecxz
jle
xor
pop
jbe
push
pushf
push
mov
pop
sbb
int
pop
fs
or
hlt
pop
ret
es
fwait
sub
sub
orb
ljmp
aaa
inc
lds
cmp
mov
lods
jecxz
add
sbb
fcomp
in
mov
dec
jmp
movsb
sbb
nop
xlat
cmp
icebp
out
add
sub
and
push
fdivp
hlt
mov
mov
push
or
lods
rcr
fmull
daa
adc
ret
js
push
gs
cmc
cmc
xchg
cmp
xchg
outsb
inc
rolb
mov
cli
push
mov
jae
mov
mov
pop
mov
or
or
arpl
jp
cs
subb
or
and
pop
lcall
and
out
and
loop
sar
xor
jecxz
and
xchg
mov
fwait
fs
pop
push
jg
daa
mov
popa
in
es
aas
hlt
pop
mov
mov
cmp
adc
mov
lock
mov
test
lods
adc
movsb
add
fimull
imul
cmc
rcrl
jmp
adc
clc
pop
je
or
rorb
pop
in
xor
or
add
and
call
jo
add
sbb
jl
rolb
gs
fidivl
sub
xchg
sub
pusha
sub
mov
out
lods
movsb
fdivrl
adc
sbb
adc
dec
and
sub
mov
xchg
xor
cmp
mov
mov
movsb
mov
push
or
pop
sbb
int3
dec
fwait
fs
push
dec
in
call
mov
mov
xchg
fsts
jb
in
sub
xchg
mov
rcrb
rorb
or
mov
inc
pop
jne
sbb
jbe
sbbl
into
dec
push
outsl
cld
inc
or
movsl
inc
sahf
mov
mov
cmpsb
jle
ss
aad
loopne
fistl
ljmp
sub
inc
mov
inc
adc
xchg
jns
roll
mull
jno
mov
cmc
or
cmp
sub
idiv
cmc
mov
inc
pusha
pop
mov
mov
jl
sub
dec
sbb
lahf
ss
sar
out
jnp
lea
in
dec
inc
add
and
call
mov
mov
xor
or
lret
icebp
adc
lcall
sub
add
into
push
sti
xchg
mov
aaa
enter
push
lcall
cmp
pushf
repnz
es
xor
sub
or
mov
sbb
or
or
cmp
push
mov
sbb
fbld
hlt
aam
adcb
out
repz
jo
arpl
test
loopne
adc
fimull
icebp
add
or
mov
push
mov
lret
js
in
xchg
shll
dec
sub
xor
xlat
fdivrp
les
mov
repz
lret
and
mov
mov
lahf
es
add
notb
ds
test
inc
test
test
pop
ja
mov
addr16
loope
sub
loope
fisttps
sbb
and
js
sarb
into
inc
inc
icebp
adc
or
out
lret
ja
jne
popa
jmp
iret
scas
pushf
gs
das
shrl
adc
into
jns
mov
xor
lock
and
dec
xchg
jl
repz
cmp
rorb
jmp
mov
mov
dec
shll
rcrl
jnp
or
fistl
mov
xchg
fistpll
xchg
adc
jno
inc
out
pop
inc
rsqrtps
and
jmp
movsb
jb
push
or
and
push
scas
mov
js
or
mov
pop
inc
stos
xor
fwait
loopne
outsl
adc
iret
movsl
in
test
aad
xor
pop
cmc
dec
divl
push
pop
aam
xchg
dec
sar
jge
inc
pop
pusha
lahf
xor
dec
int
cmpsl
and
out
sti
repz
dec
bound
add
sti
insl
or
outsl
or
jbe
dec
or
mov
in
enter
sub
add
and
mov
hlt
enter
sti
andl
dec
jecxz
fstps
daa
inc
loope
adc
dec
xlat
inc
popa
jne
fwait
and
dec
iret
sub
sub
xchg
mov
and
hlt
mov
xor
addr16
aas
xor
cli
repz
icebp
loope
out
xor
or
add
je
ret
imul
fwait
mov
add
xchg
imul
imul
and
aas
leave
dec
pop
and
sahf
sub
xchg
inc
lods
add
cmp
imul
and
push
mov
mov
in
fdivl
icebp
xor
insb
inc
push
cmp
arpl
sub
stc
sti
jno
pop
cmpsl
mov
mov
lret
fwait
sub
pushfw
fwait
push
jns
sub
push
adc
cmp
mov
aas
xor
mov
out
cmc
lods
out
and
sar
fsubl
insl
mov
sti
jno
xor
mov
jns
ffree
push
mov
dec
jge
mov
push
mov
push
sbb
test
jp
iret
mov
xor
push
push
inc
ljmp
xchg
cwtl
shl
nop
pushl
test
xchg
pop
les
jecxz
push
mov
sub
jle
mov
pusha
push
int3
or
add
andl
hlt
punpckhbw
push
mov
push
sub
ja
fcmovb
fidivrs
testb
push
dec
or
data16
sub
int
aam
pop
mov
adc
sarb
cld
stos
iret
fwait
push
inc
adc
stos
or
fldcw
inc
das
fisubrl
cmp
push
add
bound
mov
add
xor
adc
cld
or
or
jge
or
lea
aad
mov
call
jb
or
sbb
jns
in
pop
and
push
adc
pop
inc
cmpsb
xor
pop
cwtl
push
shll
push
mov
xchg
mov
adc
fldenv
out
sbb
outsb
xchg
mov
stc
mov
mov
dec
std
icebp
adc
stos
incb
and
loope
in
sarl
push
xchg
cmp
fsubrs
and
mov
clc
and
mov
sbb
and
lock
mov
push
mov
sbb
cmp
scas
jae
sbb
mov
lahf
ljmp
lods
js
arpl
jne
push
fnstcw
out
scas
xor
xorb
hlt
ret
pop
enter
or
int3
jg
jae
xchg
or
jne
mov
and
loop
dec
iret
scas
mov
xchg
pop
push
add
add
leave
push
push
xor
repnz
test
mov
mov
add
cmpsb
sbb
adc
lds
out
pop
add
push
lcall
insb
xchg
adc
push
notl
cld
andb
mov
dec
add
jecxz
jmp
outsl
bound
insl
clc
push
out
ja
inc
iret
daa
jl
inc
lods
iret
or
bound
lar
xchg
mov
jne
das
arpl
push
lods
lahf
ss
push
inc
sbb
mov
sbb
lret
ret
rorl
scas
adc
mov
ret
test
adc
cmp
lods
pushl
xchg
xor
mov
mov
pop
add
fs
stos
xchg
push
lret
xchg
or
subl
in
mov
lret
or
insb
rorl
mov
dec
pop
or
cmp
lea
sub
xchg
inc
addb
push
stos
rcll
mov
dec
pop
imul
iret
es
es
cmc
and
dec
incb
fstps
xor
cmc
adc
jno
lock
sbb
in
fcomps
and
out
xor
into
int
jmp
mov
jnp
mov
sahf
adc
cld
in
or
push
push
pop
jbe
lods
movsl
sbb
adc
idiv
mov
mov
fstpt
lcall
add
lahf
pop
subb
push
adc
addr16
subb
xor
out
mov
insb
movsl
inc
insb
movb
pop
xor
push
sbb
pop
pop
add
psubsb
mov
mov
xchg
ret
or
insb
mov
pop
jecxz
sub
and
outsb
ds
sub
enter
and
pop
in
xor
xorb
sub
xlat
mov
mov
sub
cltd
ljmp
arpl
fdiv
dec
inc
xor
cmp
sub
sbb
or
xchg
jg
jae
push
sarb
incl
fwait
loop
iret
je
xlat
sub
ret
jp
pop
push
enter
mov
repnz
add
imul
mov
pusha
dec
lret
or
inc
fimuls
cmp
pop
sbb
ljmp
and
mov
add
add
jo
jns
pop
leave
sahf
mov
sub
dec
enter
xor
push
sub
add
and
out
repz
pop
mov
adc
fwait
mov
popf
sbb
xchg
enter
mov
mov
mov
lahf
cmc
add
inc
add
xlat
gs
add
aas
lret
call
cmp
mov
and
lock
rolb
outsb
xlat
test
or
mov
pop
sbb
or
jb
pop
push
test
lods
das
xchg
or
push
call
divl
pusha
das
das
cld
lods
inc
loope
pop
push
cmp
lahf
out
inc
mov
adc
inc
inc
push
mov
mov
jg
push
jns
add
rcl
scas
push
pusha
add
sub
test
cmc
sub
jmp
cld
out
test
adc
mov
add
push
or
aam
jmp
inc
jne
nop
les
push
pop
in
push
lret
mov
dec
mov
xchg
mov
push
cli
pop
aad
pop
cmp
add
movsl
push
stc
sbb
mov
cmc
cmp
and
push
sub
xchg
enter
fwait
mov
and
xlat
sbb
jg
pusha
outsb
mov
arpl
bound
mov
push
jae
inc
inc
and
out
mov
std
inc
loop
and
push
jp
loopne
push
movsb
aaa
testl
cwtl
xchg
fs
cmpsb
pop
inc
out
insb
push
pop
jl
divb
sbb
inc
mov
inc
jp
jns
or
add
xchg
loope
pop
add
fs
push
and
int
or
rol
pushf
ja
xchg
mov
ss
xor
cmpl
and
cmpsl
inc
fsubrs
mov
cmp
inc
pop
inc
aas
or
aad
or
dec
pop
cs
stc
jp
lcall
push
gs
push
push
popa
int
clc
mov
mov
xchg
gs
xor
nop
xchg
jle
rcrl
xchg
mov
xchg
lods
xlat
sub
mov
mov
sub
inc
pop
push
lcall
xchg
adc
sarb
push
bound
xor
repz
or
mov
jo
das
movsb
nop
pop
mov
fidivrl
jl
mov
xchg
ror
inc
mov
jge
aam
rcrl
jo
test
and
mov
adc
leave
repz
aas
insl
mov
jmp
push
shrl
cwtl
and
mov
dec
jmp
fs
pop
sahf
dec
cld
jbe
icebp
jae
jnp
sub
lret
in
inc
jl
cltd
cmp
insb
in
xchg
lret
adc
mov
mov
inc
jg
andb
aas
enter
mov
jle
adc
inc
sahf
mov
adc
out
xor
lret
dec
xor
mov
fadds
stos
mov
sub
and
mov
movsl
cmp
std
iret
push
lcall
je
add
stos
jmp
add
cwtl
mov
xor
dec
xor
and
scas
push
ret
jb
test
sub
push
or
adc
cmp
sarl
mov
daa
adc
nop
adc
pop
out
mov
mov
fidivs
jl
add
adc
cmpsl
add
dec
xchg
repz
mov
push
sahf
inc
arpl
inc
mov
int
call
lret
mov
xor
gs
jbe
in
mov
jmp
int3
inc
mov
cmpsl
sub
in
jns
sbb
call
push
dec
imulb
and
ss
or
push
rcr
icebp
es
cmp
jmp
mull
sub
aaa
xor
lods
mov
fimuls
xchg
std
and
adc
cmpsl
imul
push
xchg
bound
aas
jne
rolb
mov
jbe
push
mov
sbb
sbb
mov
fists
pusha
xor
pop
mov
shrb
daa
jmp
and
xchg
sbb
pop
dec
fidivl
out
testl
jae
inc
fs
jmp
mov
jno
out
daa
sahf
sbb
fstpt
lea
push
gs
mov
sti
jmp
loop
cmp
int3
aas
push
lods
fildll
xor
xorl
pop
jge
xchg
jno
or
cld
fbstp
lds
fldenv
clc
jb
in
jl
and
loopne
or
fisttpl
dec
movsb
jmp
mov
outsb
gs
fsubl
xchg
cmp
xorb
inc
pop
add
mov
and
repnz
mov
lret
stc
imulb
mov
xor
bnd
mov
mov
cmp
loopne
push
nop
lock
xchg
mov
insl
scas
js
orl
cs
push
int3
jno
rclb
xor
mov
scas
cli
nop
cmp
shl
adc
mov
in
daa
popa
imul
fimull
and
adc
fiadds
xor
aas
in
insl
jne
mov
sbb
loop
sahf
push
adc
push
dec
cmpsb
lds
xchg
outsl
into
ret
ffreep
ret
aam
sub
out
stos
adc
jnp
rol
mov
cmp
ss
jbe
add
sub
mov
test
pop
in
sbb
fwait
xchg
mov
fdivl
push
inc
loop
push
pop
push
jmp
insb
mov
roll
xor
fwait
call
jo
push
jb
stos
or
or
std
add
fisttpll
adc
daa
mov
xchg
cli
popa
pop
sti
jl
xchg
cmp
add
flds
movsb
add
adc
xor
pop
jle
sub
mov
pop
sbb
pop
scas
or
ljmp
or
sub
mov
push
pushf
in
arpl
bound
xor
test
sub
pop
out
in
sbb
gs
fs
mov
int
sbb
inc
int3
stos
jno
and
dec
fs
push
push
loope
pop
imulb
xchg
nop
dec
push
sub
aam
jg
dec
push
out
inc
fbld
mov
daa
pop
ljmp
fcom
push
fiaddl
sub
or
push
and
imul
sbb
xor
jge
arpl
cmp
lret
out
rorb
mov
int3
xchg
cmpsb
xchg
push
rcl
inc
out
sub
and
or
mov
fmull
or
xorl
mov
lea
ss
lock
push
bound
lods
out
mov
or
sahf
sbb
xor
lret
push
std
divb
mov
mov
and
aad
fimull
inc
dec
stc
jb
es
leave
sbb
sbb
xor
enter
adc
sti
dec
xchg
xchg
inc
and
push
sbb
xchg
loop
movsl
js
xchg
mov
xchg
data16
mov
mov
call
outsl
mov
stc
mov
addb
lahf
dec
mov
sbb
loop
jo
pushf
or
ret
fnsave
jae
movsl
jl
xlat
fsubr
cmp
arpl
test
xchg
cmc
mov
imul
cwtl
fbld
and
xchg
lcall
jg
insl
cld
sub
sub
jmp
xchg
xchg
insl
mov
dec
aaa
dec
inc
test
jo
xchg
mulb
add
sarb
inc
mov
pop
les
lods
add
push
mov
pop
lret
lahf
test
dec
xchg
orl
popf
xor
cs
je
jae
bound
fimull
sbb
jg
sub
fwait
mov
enter
sbb
repz
pop
sub
hlt
mov
cmc
sbb
cmpsl
push
sbb
popf
bound
pop
xchg
add
push
push
iret
push
dec
xchg
mov
test
cmp
push
xor
dec
pop
xor
cmpsl
sbb
in
iret
enter
aad
push
cmpsb
mov
fbld
or
fists
stos
or
lcall
out
or
iret
or
push
push
dec
or
stc
xchg
cmpsb
or
in
sbb
mov
out
jae
sbbb
mov
ret
cld
leave
push
fwait
shr
roll
out
dec
movsb
add
out
imul
xor
loop
stc
sbb
xchg
mov
adc
test
fistps
mov
or
imull
pop
adc
cmpb
dec
pop
test
inc
popf
and
je
rolb
mov
jae
mov
adc
sbb
mov
push
mov
push
lahf
out
test
test
dec
sbb
pusha
aaa
sti
ret
or
iret
sbb
xor
fwait
pusha
cmp
dec
sub
andl
inc
cmp
mull
jg
push
bound
insb
adc
xchg
add
into
sub
rorb
pop
sub
adc
sbb
out
sbb
jg
enter
or
mov
pmaxsw
push
mov
fisttpl
jne
pop
jg
or
cmp
jno
push
inc
mov
or
ret
icebp
add
cld
push
loope
aam
sbb
jae
fistpl
lock
xor
hlt
std
leave
pop
sbb
divb
cmpsl
lret
fmull
jge
pop
mov
sbb
fwait
pusha
add
sub
lcall
cli
stos
push
lahf
int3
shll
fstps
pushf
imul
lret
int
daa
sub
shlb
sbb
pusha
and
xor
sbb
xchg
xor
and
xchg
pop
xchg
stos
adc
cmp
sbb
pop
insl
and
jb
sub
xchg
sahf
adc
addr16
cmpb
mov
orb
xchg
jle
not
mov
push
and
xchg
stc
clc
mov
pop
push
lds
xchg
jnp
fwait
iret
aaa
scas
loope
pop
arpl
pop
mov
mov
pop
jge
xchg
xor
insb
loopne
add
adc
outsb
xor
jae
notl
inc
enter
mov
sub
loopne
or
stos
jl
adc
pop
fwait
ss
add
jmp
ss
pop
adc
mov
fs
fsubl
andb
outsb
jecxz
in
push
clc
sbb
std
sbb
mov
das
cmp
cmp
fsubl
sbb
and
popa
jns
lret
jbe
mov
enter
inc
xchg
xchg
mov
mov
in
insb
or
adc
pusha
insl
pop
sahf
add
enter
cs
mov
sti
xor
or
fcompl
fcmovne
pop
xchg
add
test
sbb
sbb
jno
xchg
sub
add
add
inc
adc
jns
das
jg
jmp
out
aam
xor
jnp
or
imul
cmpsb
je
cltd
add
sbb
ljmp
outsb
jo
outsb
fs
stc
jl
cmc
sub
mov
lock
aam
leave
out
xchg
mov
mov
and
jne
or
pop
aas
cltd
jne
jne
inc
sbb
jg
push
mov
call
es
push
movsb
inc
pop
negl
sbb
push
and
sbb
xor
xchg
mov
es
xor
pushf
push
sbb
adc
fwait
push
nop
xchg
mov
js
inc
pop
jg
ss
stos
pop
xor
ret
sub
cwtl
stos
xchg
std
cmp
xchg
jecxz
stc
or
xchg
cmpsb
pop
xlat
jmp
adc
lds
mov
aam
notl
aam
add
cmp
mov
movnti
pop
insl
xor
mov
dec
call
and
push
push
repz
add
dec
xchg
adc
mov
sahf
enter
outsl
xor
mov
aad
adc
cmp
sarl
jge
sub
or
mov
cmpsl
test
lods
and
adc
jb
jo
call
daa
push
ss
sbb
xor
add
loopne
out
push
mov
and
in
aaa
push
add
inc
cmp
jle
cmpsb
cwtl
insl
in
and
in
hlt
or
lahf
mov
int3
mov
add
hlt
sahf
nop
imul
loope
in
xor
insb
jnp
sti
fwait
ljmp
jnp
xor
mov
pop
or
mov
and
mov
add
xlat
cmp
push
in
jg
loopne
int
xchg
sahf
shrb
cmp
test
or
jg
out
jno
mov
pop
push
fidivs
sub
lcall
ss
shrl
faddp
jb
pop
push
mov
test
pop
push
jb
call
shll
cmpsb
test
adc
popa
cmp
es
inc
inc
lret
out
hlt
push
ret
hlt
mov
inc
dec
xor
push
imul
in
push
pop
pop
fmul
pop
sti
sbb
xor
aam
inc
icebp
adc
movsb
or
and
push
outsb
bnd
dec
mov
xchg
into
rcrb
flds
lock
ficoms
mov
add
mov
inc
mov
aas
xor
daa
jns
inc
fidivrs
pop
je
pop
aad
xor
out
or
bound
cmp
sbb
add
int
mov
fs
ret
pusha
or
cmp
xor
cmp
or
imul
xchg
inc
sbb
cmp
pop
xchg
in
mov
inc
sahf
push
andl
push
push
movsl
bound
call
shll
mov
ret
rcll
lods
popa
fimull
out
leave
pop
add
cmp
cwtl
jbe
pop
adc
call
mov
dec
int
addr16
and
popa
ficoms
jne
xchg
fldt
in
enter
lea
inc
inc
xor
lret
fwait
testb
pop
test
insl
repz
jmp
in
pop
and
sti
jns
ds
inc
mov
mov
mov
and
or
adc
and
lods
imulb
xor
fldcw
jne
rcrl
jp
test
xchg
sbb
js
mov
icebp
inc
cmp
cld
imul
push
cld
xchg
inc
jg
test
ffree
in
pop
jecxz
mov
mov
test
jl
add
fcomps
loop
inc
jbe
sub
ds
imul
and
sub
dec
int3
rcrl
pushl
je
inc
clc
mov
fsubrl
cmp
and
or
out
mov
movsl
xor
mov
imul
jns
subl
enter
dec
sbb
xor
mov
out
stos
daa
sbb
push
mov
adc
xchg
cltd
inc
mov
test
loopne
pop
fucomi
pop
xchg
pusha
mov
imul
sahf
lods
sarl
xchg
dec
cmp
add
les
mov
pop
ja
inc
push
incl
movsb
sub
pop
add
sbb
mov
jne
cmpsb
or
mov
arpl
clc
lock
leave
and
outsb
aad
sub
leave
movsb
jl
movsb
imul
fs
mov
movsl
mov
adc
inc
inc
push
dec
pop
push
js
xchg
in
or
and
inc
scas
add
cmpsb
lcall
cmp
leave
mov
xor
adc
subl
mov
in
xor
pop
pop
aaa
out
mov
int
shll
pop
jecxz
cwtl
sub
xor
sbb
xor
mov
scas
inc
sbb
shl
mov
popa
jl
xchg
sub
cli
in
xor
popa
push
pop
jle
clc
sahf
lcall
mov
jle
js
jb
lret
mov
adc
push
and
es
cmp
mov
das
push
movsl
inc
das
mov
mov
icebp
and
gs
xor
dec
test
xor
rol
push
dec
jecxz
xor
mov
bound
mov
mov
mov
test
je
jle
in
cmp
mov
and
repz
inc
xchg
and
aad
scas
mov
in
xor
cmp
in
cmp
pushf
arpl
sbb
jle
mov
sub
jbe
es
push
dec
mov
dec
mov
call
movsb
aas
dec
inc
mov
add
jo
cmpsb
les
ret
fisttpl
xchg
cmp
add
int3
movsb
popa
test
loopne
xor
adc
dec
sub
hlt
decl
mov
jecxz
or
adc
out
and
shr
imul
popa
hlt
ja
dec
and
pusha
xchg
inc
les
icebp
pop
cwtl
movsb
outsl
lds
test
rorb
ffreep
push
aaa
add
and
and
push
and
imul
or
dec
and
lock
mov
pop
imul
fs
inc
fsubrs
sub
add
stos
add
cs
mov
pop
lods
inc
jo
addl
sbb
rorb
sub
jg
fistpl
dec
mov
jl
mov
lods
xchg
in
scas
negb
xlat
push
out
xchg
adcb
dec
jae
mov
fwait
pop
scas
dec
xchg
inc
incl
movsl
xor
pop
sbb
add
xor
sub
xchg
dec
lret
pushf
add
xchg
mov
jp
lods
push
or
sbb
stos
adc
sbbl
hlt
push
sbb
push
xchg
outsb
mov
or
insb
int3
and
adc
dec
aas
cmp
je
mov
jle
mov
ds
aam
xor
mov
mov
xchg
and
push
dec
cmpsl
daa
addl
repz
xor
je
lret
pop
mov
sbb
pop
cmp
cmp
cwtl
testl
add
adc
es
hlt
jne
sub
jg
aad
mov
insl
push
maskmovq
idivl
shll
test
jecxz
sub
dec
movsb
faddl
loopne
inc
inc
add
ss
fstps
dec
adc
push
mov
mov
jb
mov
dec
xchg
xor
mov
xor
mov
jge
sbb
pop
xlat
add
mov
pop
inc
lods
push
mov
push
mov
insb
dec
fdivr
fmuls
inc
dec
push
in
xor
jge
jmp
fstpl
or
testl
adc
adc
sub
fs
stos
xchg
xchg
mov
jne
pop
mov
dec
mov
pop
jo
cmc
xchg
inc
pop
jns
subl
lds
sbb
mov
movsb
cli
mov
xor
movsb
lret
in
aam
and
adcl
movb
adc
inc
imul
cmp
pop
nop
out
jnp
rcll
mov
popf
pop
scas
and
mov
dec
cmp
jmp
loopne
sbb
sbb
arpl
loope
push
sub
arpl
xchg
and
or
daa
gs
adc
test
test
push
mov
lods
jns
adc
adc
fisubrs
xor
das
pop
push
int3
sbb
hlt
lods
bound
xlat
out
lret
pop
ds
inc
pop
jbe
ret
stos
rolb
out
adc
cmp
popa
and
decl
pop
andb
cmp
sub
sbb
int
jnp
lods
scas
sbb
xor
cwtl
data16
mov
mov
xor
inc
mov
dec
jo
push
sub
and
pop
xchg
ljmp
mov
jle
and
ret
stc
cmp
pop
mov
mov
ss
adc
ss
fstpt
das
ja
push
push
sahf
movsl
repz
pop
stos
out
xor
icebp
enter
cmpsl
in
icebp
lods
in
pushf
popf
dec
inc
adc
in
inc
lcall
adc
xor
xor
fbld
push
out
pop
movsb
lcall
shll
icebp
and
fbld
adc
push
and
jg
pop
into
inc
mov
repz
data16
int3
xlat
jo
aaa
jns
cmp
push
jo
rcrb
leave
aam
fwait
or
cmp
lock
aas
test
imul
push
mov
push
jmp
cmc
push
addr16
scas
repz
pop
lods
sbbb
gs
add
sub
jae
daa
sahf
ja
or
fidivrs
pop
push
lea
xchg
test
sbb
sub
cmp
cwtl
jo
stc
sub
sar
popf
push
cmpsl
test
jnp,pt
jge
inc
xor
push
add
pop
loope
out
add
call
push
cmp
fs
cmp
call
and
std
lods
pop
add
dec
sub
sahf
ljmp
pop
pop
sbb
dec
mov
rcl
jmp
or
sub
loope
fwait
adc
push
sahf
scas
inc
sbb
pop
test
lahf
sub
ret
add
push
rclb
mov
inc
les
dec
fnstenv
xchg
jns
or
pusha
xlat
fsubs
cmc
add
leave
lret
aam
jae
mov
rcl
cwtl
fcmovbe
push
cmp
es
mov
jmp
xor
dec
dec
sbbb
mov
rcl
or
push
orl
loop
js
repnz
ds
xchg
in
xor
cmp
sbb
arpl
subl
jne
into
xor
and
movsb
repz
test
scas
int3
jae
orb
mov
xor
pop
cmp
sbb
in
subb
cltd
shr
jns
push
out
or
mov
cmp
push
mov
or
cmc
push
jg
in
imul
sub
repnz
hlt
sti
fisubl
jbe
pop
pop
and
incl
jbe
xor
testb
fcmove
ljmp
xorl
mov
and
fcomps
and
movb
insb
or
xor
lret
in
push
jl
int
je
jg
dec
adc
lods
popf
mov
inc
daa
lcall
or
hlt
ret
lret
in
adc
in
fcomip
aas
sub
dec
in
in
stos
jmp
mov
push
sahf
sbb
cmc
mov
mov
push
add
sbb
jp
pop
scas
mov
xchg
mov
test
lock
lret
mov
jl
ss
push
inc
lcall
cmp
fwait
lods
loopne
jmp
mov
test
dec
int3
fsubl
repnz
jmp
adc
dec
cmp
ret
and
inc
xchg
fcmovnb
inc
lods
loope
imul
fimuls
push
cmpsl
cmp
mov
pop
pop
pop
push
fbld
or
test
in
cltd
in
cmpl
xor
je
mov
notb
fildl
xor
adc
mov
sub
addr16
mov
clc
inc
or
gs
push
adc
add
xchg
dec
movsb
jle
je
mov
ret
xor
jp
loope
pusha
xchg
mov
adc
xor
enter
lret
mov
dec
jl
sbb
mov
pop
pop
into
mov
jae
leave
sub
sub
scas
shll
lcall
push
iret
fcmovnb
popf
dec
ja
mov
es
call
sbb
loope
out
in
pop
fldl
roll
adc
xchg
sub
addb
add
ljmp
fwait
or
fs
xchg
div
int3
pushf
xor
xor
jge
jae
sub
mov
cmpsl
hlt
jae
jns
sub
xor
pop
mov
in
dec
mov
jns
lahf
push
or
sahf
test
jb
outsb
xor
or
dec
pushf
in
dec
scas
test
mov
sbb
ljmp
je
lahf
xchg
xchg
sub
mov
push
dec
cmp
xor
sbb
mov
cmpsl
push
jnp
es
mov
mov
ret
jae
xchg
int3
in
je
ret
pop
xor
xchg
ds
loope
clc
adc
in
fwait
repz
add
nop
sahf
movsl
icebp
inc
in
pop
inc
or
adc
sub
outsb
push
gs
leave
push
mov
fdivs
pop
test
push
sbb
test
or
imul
lock
leave
das
jno
or
inc
ljmp
cmpsl
add
shl
jns
lods
rorb
sub
movsb
cmp
jo
daa
in
mov
xor
add
mov
xchg
adc
inc
les
mov
orl
cmp
aad
xor
mov
cwtl
jb
inc
jno
adc
or
sub
dec
loope
xchg
add
outsb
dec
mov
inc
mov
cmp
cwtl
mov
or
mov
pextrw
pop
mov
mov
mov
jge
lret
dec
test
dec
mov
inc
mov
jmp
add
imul
div
pushw
loopne
lret
fistl
inc
int
mov
xor
fbstp
nop
cmp
dec
inc
popa
mov
mov
mov
aaa
xor
in
mov
xorb
pop
or
call
repnz
shrl
xchg
mov
pop
repz
test
enter
add
jl
dec
lahf
xor
xor
and
incl
mov
scas
cmp
test
xchg
repz
daa
push
cmp
push
leave
mov
testl
push
adc
inc
jp
adc
pop
cwtl
out
jns
popa
adc
sbb
xor
push
sti
subb
call
push
leave
rcl
push
mov
ljmp
sbb
push
pop
movsl
fldt
outsb
daa
cmp
and
movsl
cwtl
jno
sbb
sub
mov
cld
into
mov
std
dec
jge
sbb
mov
mov
mov
das
mov
jecxz
hlt
ljmp
fwait
mov
pop
xchg
jbe
and
lcall
mov
outsl
mov
arpl
test
sbb
sub
push
cmp
adc
loop
cmp
fistps
mov
cmpsb
cld
iret
loop
xchg
ja
mov
adc
dec
sbb
jp
mov
xor
mov
inc
jnp
xchg
test
dec
test
or
icebp
cld
xor
je
add
mov
push
dec
lods
sahf
dec
jae
adc
mov
pop
aas
dec
and
ficoml
in
xor
adc
fimull
popf
in
cmp
jae
add
push
jp
lods
mov
or
and
in
outsb
mov
test
cmp
mov
cmp
sbb
popf
cmc
insb
pop
insl
ss
and
cmp
addr16
pop
lret
inc
xor
addl
cs
xchg
xchg
cmpsl
idiv
je
dec
sub
push
pop
xchg
sub
mov
xor
out
and
push
push
dec
xchg
xor
test
adc
repnz
in
cld
lds
push
inc
jns
hlt
sub
sbb
test
and
xchg
dec
lret
ret
adc
out
mov
ds
les
stc
dec
mov
fimuls
push
call
mov
in
hlt
adc
push
clc
xchg
xorb
mov
arpl
dec
jmp
aaa
das
adc
or
fs
movsb
adc
mov
inc
mov
cwtl
fdivr
mov
test
fiaddl
mov
dec
xor
push
sub
inc
inc
hlt
les
sub
or
outsl
add
sbb
iret
add
rcrb
jg
fidivs
inc
sti
sbb
fst
jp
scas
lock
mov
inc
sbb
xlat
pop
insl
sbb
stos
into
or
leave
bound
pop
andl
push
sbb
test
es
dec
jne
outsb
icebp
add
addb
lea
mov
in
clc
and
dec
sti
cmp
push
aas
into
iret
inc
sbb
aad
pop
sbb
inc
outsb
bound
stc
mov
mov
xchg
pop
xor
movsl
pushf
or
cmp
icebp
inc
pop
dec
xor
xor
repnz
mov
outsb
xchg
mov
js
or
lods
pushf
adc
jp
out
cmp
pop
mov
adc
fcoml
push
cmovno
mov
cld
mov
mov
jmp
xor
push
leave
cmp
mov
sub
rorl
jnp,pt
mov
sub
sub
movsb
mov
mov
ljmp
fdivrs
push
and
mov
mov
cmpsl
sti
lods
or
scas
ljmp
js
xor
adc
int
inc
iret
mov
in
mov
sbb
test
insl
ljmp
fmulp
aam
xor
cld
sbb
push
sbb
outsl
cmp
or
test
mov
cmpsl
add
sbb
pop
jns
push
push
jnp
cltd
nop
cmp
dec
add
repz
cld
xor
pop
jb
insl
movsl
out
imul
mov
ret
inc
mov
inc
adc
jl
jno
or
fmull
repnz
sarb
jge
cmc
mov
push
mov
and
hlt
adc
es
insl
push
mov
stc
cmpsl
in
sbb
and
xchg
push
enter
cmp
mov
inc
cmp
call
mov
xchg
js
cmpsl
outsl
adc
sti
rclb
test
mov
jmp
test
xor
in
jl
rcll
in
pusha
loope
mov
cwtl
push
lea
cmp
mov
mov
cwtl
jb
in
mov
adc
ret
mov
add
sbb
mov
gs
add
pop
xor
xor
aam
jecxz
mov
xor
mov
ret
js
into
xor
lcall
sub
inc
mov
test
mov
or
outsl
int
or
fwait
or
into
xchg
push
and
lret
dec
mov
das
les
in
push
add
cmp
hlt
cmpsb
aad
sahf
mov
pusha
ljmp
loop
xor
sbb
push
mov
jno
or
dec
fistpll
jne
lret
mov
pop
cld
sub
add
dec
or
push
inc
gs
cmp
inc
sub
cmc
jp
test
xor
gs
push
sub
in
mov
idivb
and
or
push
and
call
cld
into
icebp
add
pop
xchg
xchg
jmp
popf
push
cmc
push
lock
ficomps
xchg
and
icebp
sub
sub
jle
push
sarb
jle
push
arpl
enter
outsl
and
dec
lds
pop
out
mov
xor
xchg
sbb
shlb
push
or
sbb
repz
push
outsb
cmp
mov
rolb
pop
pop
scas
mov
adcb
mov
cwtl
arpl
in
push
and
pop
mov
inc
add
sbb
cmp
or
sub
test
scas
xchg
jge
neg
test
mov
push
adc
mov
push
mov
mov
leave
fsubrs
pop
adc
add
jns
sub
pop
inc
mov
xchg
insb
lea
fiadds
add
xchg
sti
add
push
push
ficompl
sub
jne
sahf
inc
push
or
pop
mov
imul
into
arpl
mov
pop
sbb
sub
or
cmp
jae
inc
jbe
arpl
push
in
cmp
inc
push
jge
lret
lods
sbb
jp
adcl
mov
mov
lea
pushf
push
int3
mov
xchg
xor
out
test
xlat
lds
dec
aam
or
addr16
mov
ja
popf
add
xchg
mov
mov
jne
inc
iret
xor
sub
lahf
fisubrs
mov
fwait
sub
dec
arpl
mov
es
mov
xchg
lea
pop
pop
and
daa
roll
dec
addr16
test
call
loop
jns
push
jge
repnz
pop
adc
lret
rcrl
ljmp
scas
mov
xor
cmp
pop
out
cmp
stos
inc
imul
test
adcl
xor
pusha
mov
jg
cmc
test
fs
pop
int
rcrl
fisubrs
roll
push
mov
cmp
mov
xchg
cmpsb
mov
cld
push
enter
hlt
fstp
mov
pop
adc
add
adc
js
mov
fcmovb
outsb
jp
pop
imul
push
xor
lods
gs
sbb
sahf
testl
adc
jne
pop
jns
clc
push
pop
inc
ret
mov
es
dec
pop
mov
out
sarl
adc
mov
mov
outsl
pop
test
repnz
jno
push
or
sahf
xchg
cmp
inc
pop
xchg
pop
mov
mov
xchg
inc
jno
addr16
push
cmp
push
fisttpl
in
mov
inc
push
popa
pop
lret
shlb
fcmovb
in
insl
loopne
sub
adc
sbb
ljmp
jns
loope
repz
jb
push
add
or
add
xchg
sbb
cld
out
jge
jns
cmp
call
sub
pop
mov
sbb
sbb
jg
mov
or
shrl
int3
scas
lret
dec
cmp
pusha
xchg
lahf
push
lds
cmp
addb
add
or
fs
in
scas
shlb
adc
mov
xor
arpl
xor
aas
adc
and
rclb
add
jno
sarb
gs
inc
xchg
sti
jle
fcmove
push
push
movsl
call
sbb
repnz
mov
adc
in
pushl
pushf
bound
cli
push
push
mov
xlat
rorl
adc
mov
cmpsb
or
fadds
stos
cmp
movsl
lea
es
fistps
pop
and
js
adcl
dec
repz
pop
add
iret
mov
xchg
and
mov
mov
mov
js
divb
popaw
icebp
adc
dec
or
ljmp
xor
adc
and
cld
add
mov
mov
out
xchg
push
jae
orb
icebp
xor
les
mov
ror
test
pop
sub
pop
inc
cmpsl
inc
mov
rcr
xor
mov
cmpb
cli
xchg
xchg
and
pop
mov
ja
js
fisttps
fsubrp
loope
jno
aas
into
cmp
bound
fs
mull
out
fwait
push
lock
cltd
dec
mov
lods
pop
dec
xchg
lods
fiaddl
xchg
fucomip
or
prefetchnta
fildl
pop
cmpsl
test
jge
popa
jae
cmp
push
jns
lods
pop
jae
xor
inc
sub
sub
lcall
jle
jbe
mov
dec
addr16
lret
aas
nop
add
lods
inc
dec
pop
mov
shll
je
cmp
jnp
pushf
push
xchg
cwtl
mov
mov
fsubrl
das
in
aam
aad
sbb
in
or
cs
mov
in
pop
and
faddl
and
in
fdivl
testl
imul
testl
mov
loop
test
dec
xchg
mov
fiaddl
imul
sbb
inc
cmp
pushf
add
loop
out
jle
insb
nop
pop
mov
fnstenv
mov
daa
outsb
outsb
xchg
and
push
movsb
or
cmpsl
mov
jae
dec
xchg
xchg
subb
mov
aas
jne
push
push
ret
loop
or
add
ds
fwait
xlat
mov
jns
cmp
mov
ror
and
add
lret
jbe
aas
daa
fisubrl
pop
fnstcw
mov
mov
mov
cmc
sub
mov
fisttpll
mov
and
jge
shlb
dec
movsb
movsl
dec
clc
pop
shrl
mov
rcll
lods
pusha
aam
stc
lds
or
sti
and
and
es
mov
testb
es
mov
add
test
mov
jg
sarl
jne
push
lock
xor
das
dec
andl
xchg
mov
xchg
and
jmp
test
or
in
js
lock
sbb
stos
xchg
in
pop
flds
icebp
mov
aaa
xchg
push
dec
add
ror
add
movsl
mov
sbb
data16
out
jp
xor
inc
stc
ds
pop
jb
jne
fistps
das
rcr
jb
dec
xchg
lock
rclb
pop
push
mov
scas
add
scas
iret
inc
aaa
fiadds
mov
stc
fs
jbe
aas
data16
dec
je
rolb
sbb
and
sub
in
xchg
adc
out
test
dec
rcrb
cltd
or
mov
cmp
jo
push
sar
rolb
add
test
inc
push
lods
pusha
jae
pop
in
push
sti
movl
out
or
and
jne
jnp
data16
push
sub
pop
bound
and
dec
jle
add
test
xor
scas
dec
dec
inc
das
hlt
sub
sbb
xchg
and
push
lods
lahf
fwait
jmp
mov
add
loop
cmp
add
pop
xlat
push
lret
xchg
add
nop
popf
inc
cs
adc
in
rcll
push
mov
xor
jle
out
insl
data16
call
xchg
and
jae
cmp
adc
cmp
or
scas
xchg
and
sbb
push
push
scas
and
fstps
mov
dec
adc
fidivs
std
xor
or
rorb
ret
aam
scas
popf
outsl
outsl
fdivrl
jle
adc
pop
movb
es
push
lahf
mov
test
jmp
mull
ret
nop
sub
xchg
hlt
popf
fstpl
sbb
mov
les
sbb
xor
or
or
jne
popa
xchg
jmp
mov
sbb
shrb
mov
arpl
jg
cmpsl
repnz
xor
sub
pop
push
ffreep
pop
stos
pop
mov
loop
ret
xchg
test
and
inc
aam
ss
lods
es
pop
arpl
ljmp
jmp
int3
jp
or
in
popa
mov
cmpsb
fsubrl
adcl
pop
bound
xlat
data16
adc
imul
fwait
addr16
xor
fsubs
pop
push
mov
xchg
xor
int
popa
test
push
aam
fwait
add
pop
stc
xlat
popf
inc
outsl
mov
mov
push
rcrb
inc
add
inc
pop
or
pop
aad
pop
ss
ljmp
aam
sbb
jae
mov
loop
push
push
sub
xchg
sub
push
xchg
imul
jo
movsb
xlat
fisttps
pop
rclb
push
push
jo
mov
push
mov
push
rcrb
push
jo
cmp
in
push
out
outsb
outsl
mov
push
dec
cmp
movsb
jne
in
std
lock
ss
sahf
xchg
inc
cmpsb
aam
mov
mov
xchg
mov
xchg
mov
movsl
jo
xor
ffreep
subb
loopne
xchg
xchg
xchg
mov
daa
loopne
mov
dec
loope
xchg
cmp
out
lds
into
aaa
movsb
mov
or
in
or
pusha
cwtl
push
loopne
lods
and
leave
imul
lret
adc
rcrl
clc
sub
mov
cmp
pop
ja
mov
insl
sub
cmpsb
push
fdivrl
xor
cltd
jne
adc
and
pop
iret
pop
sub
jp
insb
mov
pop
sub
idivl
popa
or
mov
inc
repnz
dec
rorl
push
jp
rorl
repz
testb
shr
pop
jl
lret
mov
sbbb
loop
out
jge
stos
es
mov
lret
iret
data16
loopne
fidivl
adc
mov
in
add
mov
jge
into
out
sub
or
mov
mov
inc
xchg
lahf
cmp
test
xchg
ds
pusha
std
rcr
mov
test
nop
xor
jbe
xchg
sbb
mov
cmp
int
jne
add
fldenv
cmc
mov
mov
sub
test
adc
or
dec
mov
pop
jmp
push
inc
adc
jg
cmp
xchg
aaa
jno
je
cmpb
cmp
or
movsb
and
shll
jmp
mov
in
adc
push
add
insl
lret
scas
addr16
sub
fadds
and
ss
insb
lcall
or
aam
dec
orb
push
dec
and
push
sub
das
sahf
in
inc
add
inc
imul
lret
cmp
and
ficoms
cmc
push
pop
and
push
cli
rcll
mov
xor
add
scas
push
cmc
inc
inc
cmovle
inc
sti
andb
mov
scas
jo
and
fcomi
test
jge
sbb
xchg
push
xchg
lea
outsb
test
xor
xor
inc
adcb
mov
pop
or
pop
pop
dec
sub
test
dec
fisubrs
sbb
cmp
int3
xchg
xor
mov
fwait
mov
out
ja
jl
imul
mov
gs
or
mov
ret
pop
js
nop
or
dec
cmp
neg
aas
cmp
mov
pop
sarl
lahf
cmc
push
arpl
rcl
jnp
pop
inc
add
xchg
jp
mov
pop
and
sub
ret
popa
orl
push
mulb
mov
sub
repnz
int3
xchg
inc
push
add
xor
das
mov
mov
pop
pop
jl
mov
rorb
out
enter
movsl
stos
mov
mov
add
xchg
ret
rcll
fwait
lds
hlt
dec
movsb
hlt
incl
fcoms
in
int3
adc
mov
ret
aaa
jge
inc
sub
add
in
add
aas
pop
nop
lock
mov
adc
pop
mov
pop
jnp
jmp
sbb
and
jno
sti
cmc
idivb
xor
xchg
sahf
xor
mov
stos
insb
test
repz
cmp
repz
cmp
sarb
inc
call
mov
and
cmp
xlat
scas
cwtl
cld
inc
add
sahf
hlt
lods
sarl
nop
mov
pop
lock
mov
jmp
outsl
jb
dec
rcrl
dec
xor
mov
movsb
mov
jg
push
out
and
mov
aad
sbb
ds
and
push
inc
or
adc
xor
pop
hlt
xchg
lahf
cli
mov
jp
movsb
push
xlat
add
shl
in
fs
and
inc
xchg
aad
shll
insl
mov
ret
mov
leave
sbb
mov
aam
scas
iret
les
cmp
pop
fidivrl
adc
rol
xchg
sbb
in
xor
mov
lds
pop
push
push
test
jge
out
shlb
push
mov
js
inc
mov
inc
jno
test
fnstcw
es
jecxz
insl
sub
inc
pop
into
jge
sub
call
pushf
and
sub
mov
jg
mov
sub
xchg
jp
sbbb
jg
cli
shlb
in
movsb
xchg
xlat
inc
sahf
addr16
add
or
mov
out
leave
mov
into
addl
push
fistps
scas
push
or
pusha
and
xlat
or
into
fs
or
mov
cld
dec
sub
outsl
mov
popf
mov
ret
or
xlat
dec
aam
cwtl
fistpll
push
mov
lahf
jno
and
cmp
xor
daa
sbb
xchg
cmpsl
add
cmpl
cmp
aas
cmp
ss
lds
add
mov
cld
lods
adc
add
pop
out
jge
jg
movsb
jge
and
sbb
push
icebp
or
pop
xchg
fistl
cmp
xchg
add
lcall
sub
les
xor
cmpsl
stos
mov
orb
into
cmpsb
loop
inc
mov
inc
daa
icebp
out
push
clc
lret
pop
mov
lret
test
mov
fiadds
dec
movsl
xchg
mov
add
lock
mov
dec
jns
mov
daa
cmp
push
lea
scas
lcall
andl
fwait
std
ret
loope
scas
outsl
into
push
sarl
jno
clc
mov
lock
add
xlat
mov
inc
lcall
es
fsub
imul
jb
repz
xchg
lahf
lds
cmp
dec
insb
mov
xchg
jecxz
pop
lret
mov
sub
xor
cs
lcall
ret
pop
sub
fsubrl
push
add
cs
jb
inc
sub
fsubrs
fwait
lcall
ret
mov
xchg
idiv
out
mov
loopne
iret
lea
js
sarb
xchg
cmp
add
cmp
mov
loope
inc
es
rcl
pusha
lds
sbb
fldenv
xchg
add
fsubrs
push
xor
jae
lret
int3
mov
xor
sbb
daa
cld
mov
mov
daa
pop
dec
mov
mov
inc
inc
dec
or
inc
sbbl
and
sub
stos
jae
and
jbe
lea
fdivl
jns
icebp
out
imul
push
push
out
cmpsb
sbb
sub
xchg
xor
in
call
pop
ret
rolb
int3
pop
out
out
add
faddl
fsts
popf
icebp
mov
push
cmp
lret
xchg
xchg
mov
decb
or
mov
test
adc
daa
jno
add
xor
das
pusha
fldenv
shl
fldcw
clc
sub
sbb
rorl
test
jg
jo
pop
lahf
pop
pop
cld
mov
loopne
mov
mov
pop
sub
mov
add
and
inc
inc
das
out
lret
push
sbb
mov
popw
loopne
into
push
loope
cmp
arpl
dec
or
idivl
sti
sbb
xchg
dec
stos
mov
mov
push
inc
les
sbb
cmc
lock
in
fcomi
rcl
adc
in
js
jmp
idivb
xorb
push
cli
out
xchg
enter
adc
ja
pop
sarl
sbb
jecxz
sub
push
inc
lods
xor
movl
iret
stc
cmp
imul
pop
sbb
rcl
movsl
std
adc
lods
in
shlb
aaa
pushf
out
jo
jl
cli
test
lods
in
ja
out
sarb
mov
das
test
cmp
add
lret
rolb
out
pop
push
pusha
pusha
popa
popf
in
lahf
jbe
ret
les
or
rcl
push
pop
mov
aam
push
test
gs
jbe
sbb
cmp
jnp
in
outsb
jg
cs
sbb
add
outsb
ret
iret
mov
shll
and
jmp
imul
repnz
outsl
pop
adc
add
shlb
das
jno
dec
mov
add
iret
and
mov
mov
test
sbb
inc
or
fimuls
inc
mov
pop
xlat
mov
pop
pop
pop
inc
stos
mov
xor
pusha
jo
icebp
pop
fdivrl
sub
insb
clc
add
icebp
outsl
ret
cwtl
aas
inc
xor
iret
sbb
cmp
dec
cmp
xor
mov
leave
add
dec
and
push
xor
lds
pop
mov
sbb
psllw
test
call
sbb
and
sub
fldcw
pop
js
dec
cmc
movsb
lods
pushf
mov
inc
sub
nop
adc
out
dec
xchg
xor
xchg
pushf
jbe
jae
and
idivl
pop
mov
push
das
gs
mov
add
daa
push
adc
inc
pop
xchg
mov
cmp
xchg
add
mov
je
and
mov
add
insb
sti
daa
sub
int
dec
xor
push
inc
test
loop
mov
jnp
int
clc
push
xchg
dec
and
js
aad
dec
mov
mov
bound
pop
xor
in
xchg
int3
push
push
sahf
dec
sarl
jge
mov
orl
xchg
cld
daa
or
jmp
jl
subb
test
in
jg
inc
out
xchg
fidivrl
lea
pop
out
lcall
adc
sub
jne
xchg
cli
add
fs
rclb
mov
fisubs
add
adc
shlb
jl
xchg
or
and
fisubs
sub
push
push
sub
addb
cmp
xchg
sahf
push
adcl
xchg
int
pushf
outsb
xchg
pop
out
sub
lcall
rcrl
leave
mov
jg
jae
mov
and
sub
jne
rcrl
or
pop
sbb
jo
rorl
add
mov
push
out
pop
sub
bound
adcl
cwtl
push
push
outsl
fdiv
das
jne
xchg
xchg
arpl
cmp
lahf
addr16
add
fwait
divb
xor
push
ret
sbb
shr
shrl
incl
xorl
adc
rcrl
pop
pop
out
jae
xorb
fildl
pop
vpsllw
popa
sub
fistl
cmpsb
jp
aas
pop
jb
pop
test
and
ja
pop
pop
das
and
lcall
jg
and
sar
dec
push
ret
mov
lret
js
push
cs
ret
bound
sarb
xor
stos
testl
lret
cwtl
out
dec
imul
cmp
pop
cmc
mov
adc
jp
icebp
add
cmpsb
add
ret
call
adc
popa
push
scas
rcr
and
je
inc
popa
sub
inc
negl
sub
arpl
mov
ficoml
mov
out
inc
jecxz
inc
ficomps
sbb
add
xchg
icebp
mov
shll
mov
add
and
lcall
or
daa
in
sub
xor
or
daa
adc
push
or
push
pop
mov
and
xchg
int
mov
popf
mov
sub
inc
push
jmp
test
movsl
sub
mov
in
mov
gs
pop
xor
xor
mov
test
insl
push
rorl
jmp
lahf
dec
mov
sahf
mov
jmp
inc
inc
or
loop
mov
js
icebp
sbb
shr
pop
daa
dec
fisubrs
jge
lret
mov
aad
push
push
daa
xchg
push
jno
inc
rep
pop
aad
mov
mov
je
xor
push
lods
cmp
lods
add
or
imul
cmpsb
cmp
cmpsl
jb
or
mov
jns
jbe
inc
shlb
loopne
adc
mov
xchg
or
xchg
cld
int
lods
jge
lret
int
es
mov
outsb
jae
push
jl
pushf
bsf
jle
pop
push
aad
shl
push
loop
push
dec
cmp
int3
aad
xchg
mov
rorb
mov
push
stos
or
cwtl
push
pop
cmpsl
testl
mov
add
dec
ret
test
mov
jmp
or
dec
pop
mov
and
lods
aad
sub
jns
mov
mov
in
sub
sbb
popf
int
mov
loope
push
and
push
mov
fisubrl
in
xchg
js
xchg
cmp
fcmovnu
rorb
jns
cltd
rcrb
call
mov
dec
inc
inc
lcall
xchg
data16
bound
rep
bound
cmp
gs
mov
pop
jge
es
sbb
stos
mov
dec
cltd
xchg
pop
jae
xchg
sbb
fs
daa
lcall
jp
fidivs
ficoml
out
jp
lods
or
mov
dec
popf
and
dec
cmp
pop
and
dec
mov
inc
and
sbb
add
push
cmp
push
cmp
inc
inc
pusha
xrelease
add
mov
mull
pop
mov
xchg
cltd
aaa
ficompl
lcall
mov
adc
std
mov
lcall
popl
test
in
add
cmp
popf
xchg
in
mov
xchg
lds
imul
jge
idivb
adc
mov
sub
push
inc
push
mov
jno
pop
subl
xchg
jmp
out
stos
push
aam
xor
les
mov
add
cli
push
pop
in
sub
xchg
push
loop
repnz
pop
jle
ljmp
insl
pop
and
in
dec
xchg
fcmovbe
cltd
lods
mov
movsb
test
jl
jp
xchg
outsl
aam
fwait
xchg
dec
xchg
ljmp
push
and
or
inc
iret
push
mov
mov
jae
ret
pop
aaa
js
mov
adc
mov
subl
adc
dec
imul
sbb
imul
aam
pop
scas
cmp
jnp
inc
cmp
sti
hlt
movl
loope
xor
and
add
mov
mov
out
sub
lcall
insl
sbb
filds
cmp
lock
ret
nop
pop
mov
repnz
push
mov
sbb
lods
fisubrs
inc
or
or
daa
daa
sti
sbb
push
inc
inc
fisubrl
inc
shlb
bound
pushf
icebp
pop
push
iret
leave
dec
es
push
ljmp
pop
notb
jbe
adc
sti
leave
fstpl
or
or
mov
test
data16
test
psubb
lahf
test
aas
push
in
popa
out
int3
mov
mov
cmp
pop
sub
xchg
popf
shl
inc
iret
xchg
test
mov
shrb
mov
dec
pop
lods
test
mov
arpl
jns
jo
adc
mov
pusha
sbb
das
xchg
fcmovnu
pop
imul
pop
inc
xchg
jg
test
and
cmp
les
push
aas
in
mov
add
jp
leave
pop
jo
xchg
stos
ds
mov
sti
gs
mov
cmp
repz
dec
cmpsl
and
ja
jno
stos
dec
incb
pushf
inc
push
in
inc
cmp
repz
lret
aam
cltd
ret
mov
out
subl
stos
les
aam
mov
scas
dec
mov
lcall
popl
fidivl
mov
xlat
mov
add
lahf
inc
movsl
sbb
clc
inc
mov
jae
inc
aas
outsb
pop
pop
ret
add
jg
int3
loope
push
loop
bnd
mov
test
lods
testb
lods
imul
arpl
or
add
sbb
jp
push
sahf
fstl
jae
push
lcall
xchg
fimuls
cmp
push
or
and
and
xor
sbbl
lcall
jl
les
xlat
jge
pop
jp
jg
enter
push
mov
sbb
push
sbb
fadd
or
lds
imul
and
xchg
and
jl
jg
jp
mov
andl
push
inc
inc
adc
idiv
test
sub
sub
mov
je
or
repz
pop
sub
mov
xchg
mov
cwtl
popf
or
or
adc
cmp
popl
mov
stos
shl
pop
pop
ja
imul
cmpb
add
notl
push
dec
sub
xchg
ret
sub
out
inc
cltd
sub
mov
sub
jecxz
ret
lods
or
push
jg
push
les
push
or
add
xor
add
loope
mov
mov
pop
jns
and
fidivrs
nop
mov
xchg
repnz
add
push
inc
insb
outsb
or
leave
ja
lea
add
ficomps
scas
dec
ret
cmpl
shr
sbb
jo
dec
xor
sbb
dec
pop
addr16
cltd
or
add
mov
inc
push
mov
