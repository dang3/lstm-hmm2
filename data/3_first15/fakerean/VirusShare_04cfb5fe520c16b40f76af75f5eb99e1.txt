sbb
add
mov
and
lea
inc
mov
xchg
imul
shlb
test
sbb
pop
pop
push
pop
sbb
mov
stc
jp
sbb
adc
daa
jno
add
les
jg
push
test
and
aam
imul
movsl
xor
fs
gs
pop
dec
mov
inc
popa
pop
out
or
or
lcall
sub
into
xchg
inc
jno
cs
in
add
out
jno
cmp
and
add
mov
pushl
mov
lea
fisubrs
mov
dec
dec
rcr
jbe
mov
cmp
sub
and
orl
mov
xchg
repnz
pop
jg
push
imul
add
push
add
dec
fwait
adc
push
jnp
mov
icebp
fs
out
cltd
mov
inc
dec
mov
or
repz
mov
clc
ljmp
out
mov
xor
xor
xchg
jmp
stc
stos
add
cmp
loope
into
lcall
popa
or
jbe
pop
ret
fldl
push
xchg
jbe
cmp
cmp
cmc
sub
xor
inc
fimull
jbe
jno
mov
cmp
sbb
pop
mov
push
adc
rorb
push
xor
hlt
icebp
mov
jmp
add
movsb
pushf
adc
aaa
dec
and
negb
lcall
jl
add
push
xchg
push
popf
sbb
sub
push
jbe
xlat
mov
mov
inc
movsl
mov
cmp
loop
ss
mov
pop
sub
repz
jnp
pop
decl
push
push
mov
sbb
scas
mov
push
pop
movsb
inc
mov
adc
sbb
jg
rcrl
es
div
dec
xor
push
pop
xor
mov
push
jns
imul
and
sbb
add
test
mov
sbb
mov
sub
int
test
std
inc
cmp
or
push
int3
mov
pushf
inc
scas
jecxz
cwtl
out
inc
and
cli
popf
das
test
push
pop
mov
add
add
fistpll
push
jle
fstps
out
popa
add
inc
lods
adc
sub
add
mov
imul
bound
push
out
repnz
mov
inc
xor
dec
sbb
cwtl
out
shll
mov
add
dec
pop
daa
test
popl
ficomps
xor
xor
iret
dec
out
cmpsb
sbb
pop
rolb
scas
bound
pop
imul
cmpsb
xchg
idivl
mov
inc
push
mov
xor
enter
adc
arpl
add
xchg
out
cmp
mov
test
iret
mov
xchg
inc
mov
into
xor
add
mov
sub
dec
loopne
inc
jo
push
imul
jcxz
ret
xchg
lods
scas
movzbl
xor
push
dec
gs
cmc
mov
jg
inc
mov
jmp
aad
mov
cmpsb
pop
jle
rorb
nop
cltd
jmp
ds
jnp
sub
mov
lcall
sub
test
repnz
jne
leave
adc
stos
add
inc
mov
outsb
push
dec
out
jmp
mov
pop
mov
push
cmp
cld
cmp
inc
mov
dec
imul
jns
aaa
out
les
shl
or
ljmp
shrl
ljmp
jne
xchg
hlt
lcall
mov
dec
test
mov
cmp
ror
add
insl
push
or
test
ja
leave
sbb
loope
sub
xor
sub
stos
and
xor
loop
pop
aaa
imul
push
jmp
fcomip
das
loopne
fisubrl
push
and
and
imul
mov
in
jecxz
add
add
flds
jae
dec
cmpsl
xchg
enter
xchg
lret
xchg
stos
mov
stos
int
add
fisttpl
sbb
adc
lret
push
fmull
mov
aad
mov
mov
lcall
adc
push
fmull
pusha
ljmp
pop
cmpsb
sahf
mov
lcall
fbstp
loop
xor
punpckhwd
outsb
push
dec
imul
sub
cmc
out
mov
fldl
enter
orb
cltd
nopl
pop
stc
fidivs
in
push
add
notl
jg
subb
aad
mov
or
stos
es
ret
imull
xor
dec
cmpsl
fwait
leave
adc
lcall
xor
int
sub
push
test
fsts
je
mov
lahf
inc
inc
xlat
je
xchg
sub
arpl
mov
sti
mov
es
call
cld
inc
cmp
lods
imul
jnp
iret
bound
insb
xor
adc
push
pop
pop
enter
adc
cmp
mov
push
mov
scas
stc
mov
push
lods
mov
mov
xor
push
jno
push
sti
add
push
cli
loopne
xchg
shlb
inc
xor
mov
xchg
xlat
dec
mov
gs
lcall
decl
aas
imul
aam
stos
insb
fidivs
out
mov
popf
pusha
dec
xchg
pusha
jmp
cmp
xchg
sub
and
test
add
dec
push
movsl
mov
stc
fmull
cwtl
shll
fisubl
xchg
jg
mov
mov
jl
xlat
jb
das
js
fbld
push
push
dec
xchg
fisubrl
mov
mov
jg
ret
in
inc
mov
pop
adc
xor
imul
das
pop
sbb
sahf
or
and
cmovb
das
sub
mov
shll
jecxz
push
rclb
pop
shlb
push
dec
jnp
in
int
jg
pop
mov
in
scas
scas
push
mov
mov
psubw
sahf
adc
push
cmpsb
push
sub
jb
scas
mov
daa
mov
icebp
lea
dec
xor
test
imul
inc
mov
jae
iret
mov
sub
movl
lds
jo
or
jecxz
sub
xchg
ret
fwait
stc
icebp
aas
add
sarl
ret
aam
mov
adc
adc
jnp
mov
mov
inc
inc
jnp
je
neg
lods
xchg
rcrb
jge
adc
pop
push
xchg
mov
movsl
ds
dec
rcll
xor
into
or
insb
pop
pop
idivb
outsb
sub
inc
cmp
iret
jp
mov
mov
dec
xor
mov
pop
and
mov
adc
sub
and
adc
push
dec
repz
loope
xor
aaa
pop
inc
addb
sarb
adc
sbb
sbb
stos
jecxz
add
cmp
js
or
fcmovb
stc
inc
out
or
int
icebp
sarb
jae
dec
sub
cltd
jg
cli
mov
adc
push
mov
jne
les
cmp
pop
push
scas
js
jb
inc
cmp
loope
mov
and
adc
sbb
sbb
int3
sbb
push
add
mov
cs
or
push
ret
sub
or
dec
xchg
cmpl
ret
add
je
shl
aaa
jne
and
negb
dec
push
outsl
int3
lds
in
test
jno,pt
xchg
imul
cs
lret
push
jle
pop
and
fidivl
pop
xchg
pop
sub
mov
push
xchg
pop
xchg
push
shrl
push
cmpsb
mov
dec
in
xor
pop
jmp
stos
cmp
jp
add
in
xchg
icebp
cmp
inc
push
shlb
mov
or
je
mov
addr16
outsl
jp
inc
add
loopne
xchg
jb
lock
or
xchg
mov
sbb
aad
into
stos
cld
sbb
mov
in
test
inc
lcall
or
fbld
ss
or
fdivrl
adc
mov
cmp
mov
push
dec
mov
leave
shlb
popf
les
div
inc
mov
fstpl
jnp
jns
call
rol
sub
push
arpl
fisubrs
lea
sbb
lahf
cmc
dec
and
inc
adc
mov
scas
mov
dec
sub
pop
test
xchg
fwait
addb
jle
mov
sbb
push
cmc
ficoml
cmp
pusha
ds
gs
int3
in
dec
xchg
mov
adc
fmulp
dec
sbb
stc
nop
add
and
adc
and
mov
jns
push
push
xchg
pop
out
test
call
push
mov
fisttpl
int
repnz
fildll
scas
int3
out
ret
adc
mov
movlps
jno
roll
or
popa
cmp
jno
shll
rol
nop
repz
pop
cs
adc
iret
mov
js
or
repnz
aas
scas
xor
sbb
pop
lahf
test
xor
std
stos
push
rol
fstp
icebp
xchg
negl
mov
dec
pop
sub
mov
mov
roll
jg
jbe
fbstp
aas
xchg
decl
cmp
xchg
cmp
add
xor
jnp
enter
out
jg
je
add
pop
out
cmp
and
pop
push
cmp
mov
jnp
adc
inc
neg
lods
push
call
and
cmpsl
jb
mov
pop
or
in
xchg
push
inc
dec
mov
fiaddl
adc
daa
fisubrl
push
mov
bound
std
xchg
lcall
mov
rolb
mov
mov
aam
scas
test
xchg
xor
mov
mov
lret
in
popa
ret
xchg
aad
xor
push
cld
lods
ljmp
ret
in
adc
xlat
mov
in
lods
test
lea
push
sub
setae
jno
pop
shrl
filds
lds
cmpsb
push
cmp
jns
jo
cltd
jno
dec
pop
jns
lods
fdivl
shlb
jbe
ret
adc
sub
lret
ljmp
repz
sub
xchg
pop
aas
into
out
insl
imul
sbb
add
xor
adc
cmp
xchg
add
icebp
popf
pop
push
aad
and
ds
or
jg
fucomp
popf
xchg
push
xor
ljmp
mov
testl
stos
test
nop
sub
test
cmp
dec
mov
nop
mov
insb
test
pusha
fwait
inc
mov
out
lret
sub
fimuls
mov
in
es
popa
cmc
scas
dec
scas
jbe
inc
hlt
inc
inc
push
test
cwtl
ja
xlat
adc
test
sub
xor
imul
and
aaa
in
cmc
fisubl
xor
adc
mov
dec
addl
cwtl
xor
mov
loopne
xchg
daa
push
add
mov
mov
fdivp
ja
cli
js
or
jno
xchg
outsl
mov
ja
adcl
adc
mov
push
rolb
and
xchg
andl
les
mov
dec
imul
and
imul
pop
mov
push
jns
xchg
fs
fs
or
leave
pop
call
dec
shll
mov
in
les
daa
outsl
mov
push
cmp
mov
fwait
mov
aad
jno
add
xchg
testl
lock
mov
sbb
mov
push
pop
pop
lods
iret
test
lahf
jecxz
or
cwtl
cmc
and
aam
into
imul
data16
and
scas
jp
mov
movsl
stos
add
push
xor
rcr
data16
add
pop
pop
ret
shll
arpl
xlat
lods
cwtl
aaa
cmpsb
int3
push
mov
mov
mov
xlat
pop
fidivrl
outsl
sub
push
jnp
imul
xor
xchg
sbb
push
aaa
mov
pop
jnp
lock
mov
sbb
inc
lods
pop
jl
dec
ljmp
mov
les
outsl
add
push
mov
lret
mov
sub
xor
cld
sub
mov
jecxz
jge
sub
movsb
sbb
mov
or
out
scas
push
xchg
inc
lods
cwtl
and
pop
mov
pop
mov
lock
sbb
daa
or
test
or
shr
sbb
push
jns
pusha
je
fistpl
jg
test
ss
rcr
loopne
cli
sub
pop
or
xor
bound
cmpsl
sbb
lea
sub
jmp
pop
mov
sub
mov
inc
rclb
cwtl
enter
cltd
fdiv
int3
in
cs
and
cmovo
mov
pop
insl
shlb
fldt
outsl
aam
jle
rcr
lret
lcall
repz
mov
cltd
fmull
mov
loop
pop
mov
xchg
add
loopne
jmp
push
fisubrl
push
lds
mov
lods
mov
xor
cmp
and
rolb
aas
mov
cli
and
mov
pop
jp
mov
loope
and
lds
roll
xorb
mov
loop
into
add
outsl
das
and
movb
popf
movsb
fimuls
push
pusha
shlb
jns
ret
out
insb
sahf
jge
outsb
add
jle
dec
out
mov
mov
mov
mov
lahf
lcall
inc
cmp
shr
push
xchg
xchg
insb
jge
mov
ds
lret
xchg
lcall
sbb
push
jp
sbb
fsubrl
lds
negb
ret
cmp
and
addb
mov
push
sbb
sub
dec
mov
decb
inc
push
push
lret
push
int3
jne
inc
xchg
dec
push
aad
ror
sbb
fiaddl
add
push
pusha
out
jae
out
adc
xchg
int
fmul
jae
test
dec
xorl
xchg
fimuls
jge
jne
mov
nop
pop
add
xor
stc
xchg
and
dec
mov
int3
enter
in
add
pop
loopne
les
rorl
cli
pushl
cli
int
fcom
push
xor
pop
rcrl
push
aas
sub
imul
inc
push
into
ret
inc
mov
jecxz
xchg
ret
and
and
ss
cwtl
lcall
cld
insb
int
xor
mov
gs
pop
or
pop
stos
out
popf
aad
jge
inc
js
mov
xchg
mov
inc
insl
test
jne
push
adc
xchg
mov
or
in
xor
cmp
mov
fwait
pop
adcl
ja
cmp
hlt
or
and
shlb
sub
shll
mov
mov
mov
icebp
sub
adc
mov
push
iret
inc
xchg
mov
dec
out
sbb
cmc
adc
adcb
sub
adc
fistpl
es
or
pop
mov
jl
lea
mov
sbb
mov
add
fisttps
mov
xchg
mov
fs
lds
fst
in
stos
jb
popl
mov
jle
or
adc
cmp
in
stc
cmpsl
xchg
jno
mov
shrl
int3
cmpsl
xor
std
notl
int3
int
mov
mov
xor
imul
inc
imul
aam
int3
mov
adc
dec
push
dec
xchg
jg
add
jp
ds
sbb
or
mov
imul
lret
xchg
inc
or
pop
xchg
lock
leave
cmp
mov
adc
movsl
dec
int3
inc
in
cltd
inc
adc
pop
add
icebp
xor
jne
andl
notl
mov
hlt
cltd
fmull
xchg
ds
shr
jo
decl
shll
insl
mov
mov
ljmp
add
mov
pop
sub
or
mov
sar
pop
mov
mov
sbb
cmpsl
mov
adc
xlat
mov
pusha
sub
pop
add
jo
inc
shlb
fsubp
aas
adc
ficoml
loope
ret
xor
jl
mov
xor
sub
bound
roll
mov
and
nop
jmp
lds
clc
push
sbb
out
and
enter
pop
add
mov
ret
inc
sub
xor
jae
stos
push
xor
icebp
test
test
test
sub
pop
cmpl
add
lcall
int3
xor
sbb
inc
leave
pop
or
or
call
sub
push
mov
scas
shr
pop
icebp
mov
les
jo
push
pop
je
dec
das
outsb
sub
outsb
fcompl
shll
or
push
ret
jl
or
movsl
push
inc
movsl
leave
mov
sbbb
lods
cwtl
cmp
or
mov
inc
jg
push
dec
dec
lahf
push
jnp
push
mov
pop
fldt
lret
or
jp
mov
pop
lret
mov
js
stos
or
sahf
dec
mov
jmp
mov
mov
dec
mov
js
in
pop
movsl
lock
lock
testl
sub
mov
jb
cld
sbb
fsubrs
mov
aad
sub
sbb
push
push
mov
rcll
icebp
add
loop
not
inc
repnz
xchg
push
mov
cmp
cmp
mov
add
mov
push
cmpsl
jne
jno,pt
fldz
lock
stc
in
mov
and
dec
pop
hlt
sub
dec
xchg
inc
lcall
and
rclb
cmp
aad
lods
fs
inc
jb
stc
lods
or
movsb
stc
popf
push
mov
je
cmp
cli
dec
mov
outsl
inc
addb
xor
das
xchg
push
jl
sbb
sbb
mov
fucom
push
enter
mov
call
and
cwtl
subl
filds
push
jl
ficoms
fistpll
pop
inc
xor
xor
in
or
sbb
xor
add
fldenv
sbb
daa
fnsave
and
aaa
xchg
addr16
mov
and
xor
in
add
adc
mov
mov
inc
scas
cmc
mov
adc
jmp
jae
add
push
xor
xchg
xor
add
inc
imul
inc
in
fcoml
cwtl
cmpsb
filds
add
das
mov
dec
outsb
fs
sti
fcmovnb
mov
sbb
out
mov
pop
fwait
sti
sbb
inc
pop
mov
add
ja
pop
push
xlat
inc
popa
mov
imul
ds
cmc
aam
push
sub
fsts
mov
or
mov
iret
push
inc
dec
dec
dec
sbb
js
dec
xchg
scas
adc
push
call
add
or
iret
in
icebp
ja
adc
test
xchg
cmp
add
daa
lret
test
in
mov
loope
test
sbb
mov
add
add
dec
and
mov
pop
jecxz
mov
mov
jo
xor
xor
nop
or
mov
xor
or
ss
sbb
pushf
scas
xor
add
std
shrb
xor
into
sbb
fisttpl
jecxz
jge
push
stos
pshufw
lods
mov
inc
out
add
sub
pop
mov
and
pop
negb
sub
lret
lcall
andb
pop
lea
icebp
scas
xchg
mov
fists
mov
mov
push
ret
or
adc
mov
lahf
xchg
hlt
and
sbb
lods
imul
mov
jno
inc
popa
mov
pop
inc
shl
cltd
icebp
or
inc
add
xchg
xor
repnz
pop
push
test
stos
sbbl
pop
cmp
push
loopne
rorb
lea
add
pop
cwtl
and
xor
sbb
and
inc
mov
clc
ljmp
sarb
mov
and
je
loopne
xchg
mov
sub
xchg
pop
push
fstp
mov
push
cmc
rolb
das
in
into
mov
pop
jne
inc
shlb
fwait
dec
test
jg
int
jl
lods
dec
ret
sahf
sub
je
imul
out
sbb
xchg
arpl
and
pop
arpl
fmuls
cmp
in
sub
movsl
and
cmp
sbb
ss
and
push
pop
xchg
mov
jecxz
dec
push
or
xor
cmpb
cli
aam
mov
mov
andl
or
inc
dec
push
hlt
hlt
inc
sub
in
aas
xor
insb
jle
jae
or
shlb
cmp
jge
aas
sub
add
xor
and
rorb
inc
jle
xor
add
push
les
pop
enter
push
enter
push
dec
xor
xor
loop
sub
dec
xorb
xchg
push
xor
mov
test
sbb
sti
stos
scas
add
andb
cmpb
daa
mov
ret
sbb
fwait
mov
pop
adc
sbb
bnd
sbb
mov
pop
lahf
cmp
pusha
sub
daa
pop
xor
mov
flds
lret
fstpt
lahf
call
adc
mov
out
lret
stc
ljmp
jb
cmp
cmp
cmp
gs
psubd
aad
pusha
sbb
jbe
jl
cli
fildl
push
lods
adc
or
scas
dec
xchg
inc
mov
push
sub
xlat
bound
cmp
and
or
cwtl
bound
in
mov
fsts
icebp
pop
shll
mov
sbb
stos
popf
pusha
test
dec
int
ficomps
adc
repz
sub
cmp
lods
aaa
pop
jmp
or
dec
outsb
push
sbbl
push
push
imul
push
or
inc
mov
insl
mov
inc
ljmp
addr16
xor
orb
dec
mov
cmpb
jne
in
addr16
enter
mov
cmp
jne
ja
out
and
cwtl
lods
mov
scas
mov
jmp
popf
jo
les
sbb
jno
add
out
inc
jmp
in
addr16
xchg
and
fwait
loope
in
hlt
push
add
out
aam
rorb
adc
mov
adc
rorl
dec
pop
dec
das
sti
sub
or
cld
hlt
inc
cmp
mov
inc
add
leave
pop
in
mov
xchg
in
mov
jge
sbb
rorl
inc
jecxz
lret
aad
ja
xchg
mov
jmp
jmp
push
ror
push
jle
addr16
adc
lcall
vcvtps2dq
ret
mov
lret
ficompl
adc
into
out
jl
cld
into
out
cmp
xlat
mov
imul
xor
test
mov
and
test
jecxz
mov
mov
mov
jecxz
iret
jmp
popf
lea
dec
ret
cmp
gs
lods
push
sub
jns
adc
test
pop
lret
mov
jae
cmp
pop
test
ret
dec
push
xlat
cmp
cltd
rcrl
push
js
mov
xchg
jmp
add
int
jecxz
out
xchg
cmpsl
lock
stc
mov
pop
movsl
std
jns
lods
sub
add
inc
mov
mov
scas
xchg
add
mov
or
inc
fucomi
and
jle
xchg
cld
push
sbb
inc
outsl
lods
xor
iret
out
jno
add
push
das
pushf
mov
xchg
repnz
adc
imul
lds
mov
je
cmp
cmpsb
dec
sub
les
sub
lahf
jge
scas
pop
in
inc
aas
les
clc
add
add
pop
imul
xchg
inc
insb
jo
sahf
das
hlt
mov
in
lods
mov
pop
sub
daa
outsb
mov
xchg
fbstp
mulb
test
in
push
ja
pop
js
outsl
loopne
cmp
jl
mov
xchg
mov
mov
test
pop
lods
adc
jl
xchg
in
mov
cmpsl
jno
inc
jl
cmp
aad
mov
popa
sahf
mov
cld
sub
pop
pop
scas
dec
js
in
mov
inc
or
ret
adc
pop
dec
mov
jmp
xor
or
sbb
out
std
push
mov
in
adc
push
inc
jge
gs
mov
stos
xchg
sub
int3
jp
loopne
inc
mov
mov
jnp
nop
cmpb
ljmp
dec
into
mov
cmp
out
test
repz
ss
jmp
xlat
mov
mov
and
in
mulb
fisubs
fdivs
es
or
xorb
outsl
movsl
pop
pop
or
pop
or
jae
pop
xchg
and
cmp
pop
mov
mov
mov
dec
aaa
aas
sub
das
repz
movsl
mov
fs
in
pop
add
lahf
sub
ljmp
lret
in
stos
or
std
cmp
add
cs
mov
add
mov
add
xchg
pushf
xchg
cmp
mov
addl
jb
jmp
mov
mov
push
daa
inc
mov
xor
mov
jp
clc
stos
dec
sbb
andl
mov
inc
loopne
adc
jmp
in
dec
mov
fwait
pop
pop
movsb
jns
jmp
or
or
mov
mov
jge
or
in
mov
je
inc
mov
adc
pop
adc
push
mov
pusha
pusha
pushl
add
add
xor
testb
iret
dec
loope
bound
nop
lret
jae
shll
add
in
push
out
sbb
into
aas
lods
repz
ret
jg
test
sbb
inc
mov
mov
outsl
cmp
stos
or
js
hlt
add
mov
sti
sbb
pop
testb
hlt
mov
popf
enter
dec
sub
test
mov
lock
pusha
enter
mov
or
jmp
inc
pop
test
mov
int3
insl
mov
cs
add
test
push
scas
mov
adc
dec
cmpsb
scas
add
xchg
dec
add
inc
outsb
add
or
ljmp
or
js
subl
outsl
repnz
in
scas
lds
xchg
insb
and
add
lea
test
dec
add
push
inc
hlt
xchg
pop
jl
in
pop
adc
pop
sub
sahf
gs
xchg
mov
insb
out
or
pushf
cmp
dec
cmp
out
aam
out
cmpsb
ret
notb
lret
add
push
or
int3
push
aas
stc
pushf
cmp
pushf
pusha
insb
xchg
std
mov
and
mov
add
cmp
inc
push
add
adc
xchg
mov
or
xchg
fld1
cmc
aad
cmpsb
das
pushf
mov
mov
bnd
data16
mov
inc
lret
test
fs
fnstcw
arpl
inc
ja
and
jnp
dec
xorb
fucomp
mov
pop
lahf
push
jno
aaa
mov
cld
and
inc
xor
adc
mov
shll
add
xchg
in
pop
movsl
fwait
pop
ss
shll
inc
movsl
mov
clc
lea
insb
adc
sub
adc
mov
push
fs
aaa
fprem1
shrb
rorl
pop
xor
pop
xor
fdivs
pusha
adc
and
ficoms
xor
aad
stc
pop
pop
dec
cwtl
ret
jp
aaa
push
xor
sar
sub
dec
jns
or
cltd
cmp
sbb
clc
test
dec
cli
or
out
repnz
push
not
into
loop
repnz
imul
shrl
pushf
pop
das
movl
xchg
sarl
mov
sbb
gs
jle
negl
out
rcrb
sahf
shrb
ficoms
xor
aaa
aas
jl
mov
vmwrite
mov
pop
fcomps
nop
inc
cld
cli
je
xor
mov
lods
movsl
sub
jg
inc
test
sbb
push
lods
lret
cmpsl
arpl
imul
push
pop
es
sbbl
pop
loope
push
scas
into
fistps
xchg
mov
push
mov
mov
imul
cmp
je
push
subb
or
pop
add
outsb
ret
std
in
mov
ja
dec
inc
addr16
sbb
add
xchg
add
divb
jne
adc
mov
stos
mov
sub
mov
iret
push
call
fstps
negl
adc
adc
pop
shl
gs
mov
mov
test
loop
scas
mov
jp
and
outsl
mov
in
mov
enter
mov
filds
pop
js
icebp
iret
pop
jp,pt
into
in
arpl
adc
mov
jmp
ss
or
xchg
xlat
scas
xchg
jno
xchg
xchg
cmp
ficompl
sbb
lret
arpl
mov
adc
es
adc
imul
jp
xchg
sbb
sbb
adc
out
cmpsb
sbb
add
rcrl
rcrl
in
dec
das
cli
dec
std
jb
push
inc
lds
movsl
rcrl
mov
xor
mov
lret
mov
push
fistpl
pop
sub
adc
cltd
sub
sbb
fs
xchg
cmp
or
adc
cmp
xor
jl
fisubl
je
inc
shr
pop
dec
jge
popa
push
std
cmp
rcrl
into
xor
push
ret
sahf
je
mov
fstpl
decl
popa
jns
dec
xchg
or
pop
cmp
test
out
inc
adc
mov
stc
out
mov
fstl
pop
add
in
jno
and
fucomi
adc
xchg
inc
lret
inc
fdiv
push
pushf
mov
sub
xor
inc
jge
mov
inc
inc
into
insl
dec
and
test
jns
jmp
and
cmp
push
mov
add
jae
jae
sub
pusha
outsb
jle
insb
jne
push
shl
xor
mov
repz
leave
aad
cld
cmp
jle
mov
xchg
in
sbb
sar
ja
and
int
xlat
xchg
adc
or
scas
rorb
cmp
mov
mov
cmp
arpl
add
lret
stc
scas
cld
sbb
xchg
shrl
inc
neg
mov
popf
daa
cmp
jp
mov
mov
divl
add
jle
or
outsl
push
dec
imul
cmp
mov
mov
movsl
negb
fcomip
movsb
icebp
sub
and
mov
sub
ljmp
testl
cmp
dec
idivb
lea
sbb
lods
lds
jle
mov
and
add
call
push
and
orb
mov
out
mov
sbb
add
mov
bound
fstpl
add
mov
roll
adc
into
popf
test
xchg
jb
sti
xor
jle
or
cmpsl
cmp
dec
enter
lods
ret
fwait
aaa
push
sbb
mov
rcll
sub
out
pop
ds
xlat
shr
fisubrs
xchg
lea
mov
push
aas
mov
fldt
add
aam
out
mov
or
adc
sbb
mov
adc
rorb
mov
out
fmuls
shlb
scas
inc
dec
sbb
cmc
inc
int3
and
cld
fstpt
adc
mov
iret
loop
and
pop
fcomps
imul
out
test
cmpsl
pop
mov
sbb
lds
cltd
pop
dec
mov
xchg
add
mov
aas
xlat
xchg
inc
test
jo
in
idivl
std
lahf
xchg
sti
clc
xor
out
cs
push
add
rclb
mov
fisubrl
pop
xchg
mov
pop
pop
xor
dec
dec
repz
cmp
sar
push
mov
mov
jmp
jae
test
sti
pop
js
fwait
sbb
into
fistpll
push
stc
scas
mov
loop
nop
ret
mov
out
lock
cmp
or
stos
stos
mov
jb
outsl
outsl
mov
or
jecxz
jp
sub
add
mov
or
mov
inc
or
fmuls
lret
lret
pop
mov
icebp
dec
insl
aas
aas
and
mov
adc
daa
jg
fistps
xor
xchg
outsl
mov
in
loope
adc
ror
data16
outsb
inc
icebp
out
enter
icebp
stos
mov
sbb
lods
push
jae
outsb
addb
pop
push
scas
add
scas
insl
push
or
rcr
sub
inc
pop
xchg
add
pop
dec
arpl
pop
shrl
scas
jg
psubb
inc
out
or
or
not
arpl
jl
push
outsl
popa
lret
ret
xchg
sbb
adc
jl
mov
sub
fldt
aam
mov
ret
es
adc
or
ss
cltd
jae
mov
inc
sbb
in
repz
xor
mov
js
arpl
xor
push
pop
jno
mov
pop
lods
stos
loop
mov
loop
daa
jne
pop
ss
add
mov
rclb
xor
cmc
in
aaa
jno
adc
clc
add
inc
ss
mov
push
fwait
mov
insl
mov
mov
roll
mov
fdivp
pop
sbb
lret
ja
mov
or
out
xchg
in
jne
xor
mov
int3
mov
and
adc
sbb
jne
add
xchg
int
std
cmp
mov
fisubrl
lret
jnp
cmp
cltd
out
scas
daa
inc
fwait
divl
adc
cwtl
xor
fldenv
fistpl
into
repnz
mov
shll
fwait
je
jmp
add
out
inc
mov
mov
pushf
push
aad
mov
pusha
pop
lods
lods
add
in
pop
cld
mov
enter
test
xor
aad
mov
sbb
inc
popa
or
pop
mov
xchg
in
sub
ja
pop
jg
sbb
fdivrs
add
aad
in
fwait
arpl
sub
aad
or
lods
imul
insb
jecxz
sub
sub
push
sti
mov
es
or
insl
adc
jb
xor
out
pop
lret
and
jns
mov
sbb
arpl
addb
call
das
enter
xchg
ja
fisubs
pushf
fcmovb
outsl
lcall
je
pop
adc
add
in
ljmp
or
push
cmp
scas
aas
xor
jb
cmp
inc
or
cmp
xchg
orb
pop
fistpl
mov
add
in
mov
outsl
lds
mov
pop
fcoms
in
xchg
sbb
in
xlat
add
or
in
add
jb
mov
adc
sbb
leave
cmp
cmpsb
xchg
inc
jne
xchg
out
mov
inc
pop
add
or
xchg
xchg
arpl
gs
pop
roll
movsl
in
stos
hlt
pop
xor
push
test
aad
dec
out
jg
insb
inc
out
arpl
call
inc
push
mov
lods
cld
mov
fistpl
mov
mov
xchg
repnz
stos
jnp
inc
scas
dec
and
mov
shlb
inc
pop
in
mov
es
cmp
scas
aaa
jo
lret
fists
lods
mulb
scas
push
testl
dec
pop
in
xor
aaa
scas
dec
or
shrl
jo
adc
in
pop
pushf
or
pop
and
mov
inc
mov
insl
pushf
jae
cmpsl
jno
mov
xor
and
mov
andb
jb
repnz
lods
push
mov
idivl
es
jmp
xchg
pop
pop
pusha
and
push
add
mov
out
adc
and
ss
mov
xchg
lock
clc
push
and
aaa
scas
mov
stc
jge
nop
test
jo
push
mov
loopne
dec
sub
pop
hlt
rorb
push
outsb
jo
lahf
in
xor
repz
sbb
loope
addr16
test
mov
pop
decl
je
jmp
jns
pop
les
cwtl
xor
push
xchg
dec
out
cli
adc
dec
shll
mov
aam
mov
and
sub
pop
fildl
and
out
cmp
test
xor
mov
push
pop
cmpsl
push
fbstp
movsl
adc
aas
mov
inc
sub
daa
sub
ds
cmp
xor
filds
mov
in
data16
pop
nop
xlat
sbb
into
cmp
sbb
roll
and
fwait
dec
inc
jl
ror
shr
adc
inc
jo
xchg
dec
push
aas
stos
mov
cmp
jnp
xchg
lret
dec
lret
xor
xchg
inc
push
ret
lret
shl
inc
out
hlt
cmpb
aas
repnz
movsl
mov
outsb
and
mov
mov
or
mov
in
inc
xlat
outsl
mov
cmp
out
fldcw
mov
cli
js
scas
pop
repz
rcrl
jp
mov
jae
shll
cmp
test
les
loop
add
jno
add
js
sub
pop
es
xchg
xchg
push
repz
jmp
xor
in
jg
xor
icebp
lret
jp
push
repz
or
pop
xor
aas
sub
mov
xor
aaa
outsb
ljmp
hlt
mov
test
add
cli
mov
ja
sub
dec
fimuls
cmc
add
mov
ficoml
out
mov
arpl
je
cmp
push
test
and
scas
outsl
dec
sahf
das
jecxz
sbb
out
or
movsl
mov
in
lret
xchg
movsl
pop
xor
pop
push
js
or
push
sub
jl
shr
add
fcomps
out
mov
mov
cli
jnp
out
cli
jge
push
lock
add
or
dec
mov
dec
xor
mov
xor
xchg
scas
xchg
addr16
push
sahf
les
sub
out
dec
cmpsl
out
jae
push
insb
shr
test
jle
mov
ffree
ja
inc
cli
sbb
insb
lahf
push
stos
lcall
and
cmc
cmp
pushf
dec
adc
cmpsb
xor
mov
movsb
das
popa
std
sbb
test
pop
aam
jmp
or
or
xor
lock
fs
sub
jns
sbb
or
fucom
cmp
das
mov
int3
xchg
cmpsb
inc
jmp
inc
and
mov
jg
repz
jge
cmpsl
fcomi
mov
xchg
stos
push
pusha
out
ds
iret
cs
roll
cmp
mov
push
fcom
pop
cs
cmpsb
dec
xchg
or
ret
lock
inc
sbb
pop
sarl
lea
jbe
outsl
out
sbb
loop
mov
std
sbb
std
xor
mov
outsb
aad
lea
pop
mov
test
in
mov
and
fcompl
or
pop
inc
lods
dec
cwtl
lret
clc
add
mov
filds
test
mov
mov
lret
adc
mov
mov
in
dec
hlt
dec
pop
sbb
add
int3
out
popf
fwait
int
rorl
cltd
jbe
xchg
adc
gs
sbb
stos
adc
pop
insl
xor
inc
pop
js
fldenv
popf
xor
in
pop
in
sub
fists
popf
push
out
popw
push
std
pop
daa
xchg
js
test
push
repz
fwait
or
jo
cmpsb
insl
pop
jo
jno
scas
xorl
mov
dec
jnp
data16
mov
aam
lahf
imul
pop
lret
std
inc
sbb
or
inc
arpl
xor
aad
iret
sti
lret
dec
in
clc
fcom
testl
and
fs
jp
lods
xchg
adc
mulb
adc
cmpsl
arpl
sbbl
popfw
in
xchg
pop
sbb
nop
mov
popa
add
fwait
cltd
mov
fucomi
lods
fmul
std
xchg
mov
sbb
negb
mov
aam
dec
pop
xor
sti
imul
mov
stos
push
outsl
repnz
fnsave
popf
lods
scas
xchg
lods
add
lahf
ror
mov
push
aad
pop
std
mov
cs
pusha
mov
out
xor
out
imul
mov
push
out
rorb
and
xchg
or
insb
cmpsb
or
popf
loopne
nop
lea
lcall
rcrl
mov
popf
jae
inc
inc
xbegin
bound
sub
outsl
mov
aas
mov
fdivrs
push
inc
sub
jae
push
arpl
pop
cmpsl
mov
mov
loop
enter
pop
out
cmp
fadds
loop
mov
and
push
int
shr
aam
adcl
sbb
cmp
xchg
ja
stc
inc
sbb
xlat
rorl
out
or
mov
xchg
sub
into
movsb
xchg
and
xor
inc
push
aam
dec
push
gs
xchg
or
in
jmp
push
lods
inc
sub
jb
mov
clc
ror
cmp
shl
pop
stc
adc
into
mov
adc
lods
pop
mov
pop
mulb
pop
lahf
pop
mov
jo
leave
mov
jne
icebp
fldl
cmp
xchg
mov
fdivrl
das
push
add
int3
cmp
test
adc
scas
xchg
xor
jae
sbb
pop
mov
movsl
mov
mov
in
pop
pop
jno
aad
cmp
xchg
loope
in
popa
lock
popf
inc
js
jno
cli
xchg
call
iret
loope
inc
repnz
add
out
adc
neg
cwtl
push
push
push
fcoml
fldl
push
add
js
lods
xchg
dec
adc
into
xor
jbe
sub
and
xor
popa
dec
loope
inc
cwtl
adc
cli
xor
jp
jbe
xchg
and
int
sbb
inc
push
mov
imul
adc
cld
mov
add
and
ja
int
stos
or
mov
addr16
imul
cld
movsl
sub
xor
mov
and
xor
pop
cld
lret
popf
shl
jo
sbb
mov
adc
sbb
mov
or
mull
lods
cwtl
or
ljmp
xlat
xor
mov
dec
adc
push
gs
clc
jecxz
loop
dec
pop
sbb
push
and
or
shrb
cmp
sbb
pop
push
xor
adc
mov
shrl
popf
idivb
mov
jmp
data16
jg
jle
sub
mov
jb
movsl
sub
out
pop
jns
pop
fisttpll
aaa
add
and
add
jne
cmp
fistl
sbb
xchg
hlt
pop
pop
hlt
jle
lahf
mov
or
in
inc
loope
add
sbb
shrl
or
xor
pop
cld
mov
popa
mov
mov
cmc
mov
out
mov
mov
sbb
cmpsb
adc
js
cmpb
mov
push
jmp
cmp
mov
push
jo
mov
lcall
xor
repz
jo
lret
pop
and
loopne
cltd
mov
lcall
dec
xchg
pop
and
sbbb
xchg
shlb
dec
addr16
aaa
dec
xchg
jae
leave
inc
adcl
pop
mul
arpl
sarb
call
int3
push
mov
insl
iret
sbbb
rolb
aas
in
sbb
inc
xchg
pop
cltd
pop
call
fildll
test
mov
push
and
addl
lods
pop
add
pop
mov
mov
in
sub
mov
jae
fbld
cmp
and
mov
jmp
in
jp
and
loope
push
jb
data16
push
add
fcoms
or
dec
movsl
jb
inc
add
pop
pop
fsubp
xchg
aad
incb
ja
mov
or
fadds
rorb
or
mov
sbb
stos
ret
lds
fisttpll
int
mov
stos
into
and
sbb
lock
lock
repz
inc
mov
in
std
out
data16
inc
stos
adc
mov
jns
in
push
push
jb
push
pop
ljmp
in
lcall
or
fstps
lret
mov
jnp
in
jg
xor
rep
ret
loope
add
push
shll
jmp
aad
adc
out
addr16
adc
mov
fistpl
cmp
pop
mov
ret
or
and
sahf
sbbb
es
dec
jmp
pop
pop
inc
fs
cld
mov
inc
inc
xchg
xchg
mov
js
mov
mov
sbb
gs
adc
mov
xchg
and
pop
fisttpll
scas
push
lret
int3
cltd
loope
mov
test
inc
inc
es
and
xor
fmuls
push
loopne
cmp
push
mov
jle
andb
out
or
stos
sbb
pop
rcrb
das
lahf
scas
fcomps
or
push
lahf
adc
jne
imul
xchg
je
xor
mov
mov
popa
cwtl
xchg
and
push
mov
gs
popa
add
and
repnz
sub
jecxz
bnd
pop
out
adc
push
shll
aad
cmpl
test
cltd
ds
ficomps
pushf
shrb
add
in
pop
jns
push
int3
std
inc
ss
lods
pop
call
mov
and
jge
imul
push
lcall
sbb
cmc
out
rcl
mov
test
mov
add
push
cmp
jns
sub
div
add
outsb
clc
scas
cwtl
cwtl
hlt
mov
and
aam
loopne
addr16
nop
enter
lcall
inc
mov
add
imul
mov
cltd
mov
ret
dec
ss
out
sti
rol
push
aam
or
sarb
inc
pop
xor
pop
jne
jo
push
push
push
fbld
outsl
fstps
fists
xor
loop
in
mov
sub
cmp
xor
mov
dec
leave
add
xchg
inc
popf
test
int
inc
jle
into
rolb
aas
sub
imul
inc
xchg
push
dec
fsts
fs
fistpll
xchg
pop
loope
cmp
fwait
movq
in
lahf
xchg
popa
mov
test
cmp
cmovbe
stos
pushf
faddl
push
cmc
mov
sti
push
xchg
jmp
cli
mov
out
push
xchg
or
inc
xor
push
push
aam
xchg
rcrb
jae
icebp
mov
dec
sub
inc
sub
mov
or
pop
push
sub
cmpsb
sbb
mov
add
cwtl
mov
fidivl
sub
test
fildl
enter
and
fdivs
sub
out
mov
or
leave
sub
sub
arpl
mov
mov
es
mov
mov
subb
jp
jns
mov
jmp
nop
sub
or
xchg
loopne
scas
push
and
mov
mov
mov
rcll
lds
sbb
xchg
addb
jae
test
sbb
neg
aad
mov
je
dec
mov
call
leave
jb
fwait
push
and
addr16
sub
or
test
adc
mov
inc
popa
enter
enter
loopne,pn
repz
cltd
rclb
ja
in
movsb
sub
mov
lret
out
push
subb
mov
cwtl
cmp
xchg
rcrb
inc
or
dec
andb
pop
int3
sbb
jnp
lods
fs
mov
mov
mov
fisubl
xchg
and
gs
add
adc
arpl
arpl
xchg
mov
and
push
cmp
mov
push
jl
out
and
test
movsb
imul
in
das
imul
imul
adc
stos
nop
cwtl
xchg
mov
not
sbb
lods
push
test
outsb
fldlg2
sub
push
js
dec
cmpsb
data16
sub
pop
pop
fst
stos
daa
or
mov
xor
xchg
mov
or
ror
pop
ljmp
scas
and
enter
cmc
sbb
std
mov
mov
ret
push
out
sbb
push
sbb
das
push
ja
or
push
inc
gs
out
xor
mov
test
outsb
repz
mov
cmpsb
loop
adc
aaa
test
out
sti
add
ficoms
jno
mov
push
sbb
sbb
sub
shll
loopne
adc
mov
xchg
xchg
sahf
pop
jno
dec
adc
dec
push
pop
inc
loopne
das
icebp
xor
xchg
faddl
push
or
xor
sub
incl
enter
xchg
mov
jle
mov
fs
inc
popf
pop
mov
and
pop
mov
shlb
push
inc
jge
das
sarl
jnp
inc
mov
or
mov
sub
pop
push
push
push
ret
mov
push
je
dec
mov
call
jbe
in
popf
adc
dec
imul
popf
fs
imul
xor
or
cmp
xchg
stos
push
popf
dec
mov
pop
jno
cmp
fisubs
mov
push
rorl
mov
fwait
adc
call
stc
out
call
addb
fstpt
jnp
sahf
push
fcoml
mov
loope
lods
loop
test
ffree
in
lods
outsb
sbb
sbb
jo
pushf
insb
sub
sub
movsb
xor
popf
outsb
cmp
test
dec
xchg
mov
sti
sti
mov
cmp
adc
inc
cmp
test
das
cmp
adc
std
jmp
leave
inc
mov
cmpsl
out
or
jnp
mov
mov
mov
mov
rcl
test
mov
scas
pop
push
aaa
insb
cmpsl
pop
in
mov
or
aad
lcall
sub
ljmp
xchg
jl
sbb
in
mov
pop
sbb
jl
push
in
ds
lcall
cmp
sub
push
jmp
sub
rorb
jno
imul
out
cmp
xchg
repz
adc
cwtl
mov
and
pop
mov
idiv
pop
add
inc
out
jae
outsb
addr16
aas
inc
ret
movb
fldenv
imul
push
out
test
sti
xchg
cmp
xor
mov
or
and
loop
jge
mov
imul
push
jae
fsubp
dec
mov
repz
cmpsb
dec
shlb
sub
mov
xlat
cwtl
xlat
mov
inc
mov
pop
ltr
repz
or
vcomiss
jl
pop
pusha
test
lds
xor
fucom
jl
mov
inc
clc
in
inc
xor
adc
pushf
cmp
dec
jge
pop
clc
icebp
popf
add
cs
mov
mov
and
push
mov
pushf
pop
mov
int
pop
push
out
negb
inc
in
inc
aad
xchg
inc
jmp
repnz
sub
sbb
sbb
inc
xsaveopt
out
rcll
fidivl
pop
ja
jno
mov
aad
in
push
fldcw
int
push
jo
enter
movsb
add
fwait
pop
mov
mov
icebp
mov
shrl
pop
pop
pop
push
and
cld
inc
ret
or
dec
ret
jle
insb
push
and
pop
sbb
add
jle
xor
rclb
cmp
loopne
clc
jp
dec
pop
and
insb
jmp
push
sti
inc
push
negb
add
popf
mov
jae
aas
sbb
inc
mov
cmp
pop
stos
cmp
lock
cmp
push
gs
nop
popa
repnz
pop
jb
rorb
fucomip
dec
cmpsb
jmp
test
fs
gs
cld
sub
dec
enter
scas
lds
dec
xlat
ja
pushf
sti
vshufps
sub
movnti
in
stos
sbb
push
jge
aas
cli
xchg
push
jae
aam
out
test
sub
sbb
andl
push
jne
inc
stos
sarl
and
jmp
mov
fs
lock
pusha
push
test
xlat
pop
out
mov
xor
jecxz
sub
insl
mov
icebp
cmp
out
lret
popa
dec
pop
and
jecxz
inc
jl
and
push
fldl
imul
fs
roll
clc
das
pop
in
lds
adc
sub
sbb
sub
lods
outsl
lahf
jae
pop
sbb
andb
mov
sub
dec
sbb
or
mov
out
pushl
cmc
xchg
mov
cmp
pop
ret
xorl
fwait
cmp
lods
sbb
xor
subb
sti
add
mov
and
ret
fstps
cmp
das
jle
dec
dec
ljmp
add
cmc
mov
lock
shl
hlt
add
loop
cmp
jmp
sbb
popa
insl
jae
fisubrl
mov
mov
inc
hlt
adc
faddp
mov
scas
bound
add
add
sbb
dec
shr
test
xor
test
push
out
inc
jle
xor
test
stos
outsl
jbe
bound
fistps
push
push
add
data16
shr
xor
mov
pop
imul
jmp
scas
imul
test
push
jle
push
outsb
sahf
push
hlt
ret
insl
ss
mov
pop
sti
call
pop
and
fsubs
adc
inc
lods
scas
aas
aas
push
jp
bts
mov
sbb
xor
push
pop
adc
nop
dec
ljmp
push
lea
mov
mov
ret
cs
adc
cmp
arpl
lcall
stc
stc
xchg
je
int
stos
jge
std
pop
fcoml
cs
pop
loope
mov
addl
in
mov
sbb
cmp
xchg
cltd
mov
test
jmp
shlb
xchg
fwait
sbb
popl
pop
dec
mov
daa
or
jne
dec
xorb
xchg
gs
loopne
xor
enter
dec
cmpsb
pop
shlb
aad
rcl
inc
aaa
push
and
out
ja
push
pop
shll
sbb
fildl
sub
lods
out
repz
pop
sbb
rol
movsl
fnstcw
mov
push
and
ret
lret
push
xchg
jl
adc
push
dec
cmp
inc
adc
mov
mov
dec
pop
outsb
jecxz
adc
imul
imulb
mov
inc
incl
pop
repnz
mov
sahf
inc
lcall
mov
mov
pop
sub
mov
mov
jae
sahf
mov
mov
xchg
rep
mov
add
sti
jl
aam
mov
ret
inc
divps
add
mov
ss
add
cmp
jmp
jg
arpl
js
mov
iret
out
xor
xor
int
inc
fiaddl
lods
mov
mov
leave
and
mov
and
cs
push
push
out
fimull
jns
cmp
sub
mov
sbb
dec
mov
inc
cmpsl
int3
loopne
and
xchg
xlat
insb
xor
jle
push
loopne
pop
test
cmp
mov
dec
push
xor
lret
icebp
gs
out
and
in
inc
mov
mov
jle
sub
test
sbb
sub
addl
das
add
cmp
pop
sbb
mov
ss
shrb
mov
ror
scas
lret
dec
push
test
cmc
xchg
xor
and
divl
in
fucomp
adc
test
stc
inc
pushw
mov
sub
testb
repnz
pop
cmp
sti
test
aad
loop
inc
roll
and
pop
mov
jmp
jne
aad
dec
dec
mov
cmc
test
or
ja
and
mov
outsb
test
jae
jbe
sbb
addr16
push
mov
cltd
mov
es
into
insb
movsb
jae
xchg
inc
daa
fsubrs
mov
add
and
jb
cmp
xchg
idivl
pop
fstpl
int3
in
adc
push
or
xor
imul
in
stos
ret
push
mov
dec
aas
sbb
out
mov
jecxz
inc
ror
mov
mov
flds
or
lods
add
mov
cltd
push
lods
imul
rcrl
xchg
mov
stos
fdivs
ss
mov
leave
jl
jbe
divb
in
and
sbb
add
jb
test
leave
call
or
sub
cmp
divb
jecxz
dec
push
in
and
cwtl
xchg
xchg
divb
and
aam
sbb
dec
push
push
pop
lods
cmp
inc
xchg
lods
add
jb
test
jbe
pop
mov
sub
into
mov
aaa
xor
imul
cs
out
pop
jne
pop
inc
push
mov
sbb
xchg
mov
sti
cmpl
dec
inc
xor
pop
jp
and
fdivrl
fidivrl
sbb
daa
mov
les
xlat
inc
cmp
cld
aaa
sar
cmc
push
pop
ds
and
push
pop
jg
xchg
jnp
push
clc
lock
adcb
out
int3
loop
jle
in
mov
pop
lods
xchg
adc
inc
movsl
ret
sub
mov
js
fst
in
pop
aam
ss
test
push
popf
cld
pop
xchg
xchg
and
mov
mov
lret
dec
jb
popa
lret
jmp
dec
mov
pushf
iret
push
das
int3
sbb
sub
mov
xor
push
dec
mov
sbb
jl
sbb
add
call
add
mov
cmpsl
push
das
pop
rorb
roll
pop
loop
sub
fcompl
jnp
mov
xchg
shrb
imul
out
sarl
sub
or
push
je
insl
xchg
xor
push
xchg
sbb
loop
fidivs
mov
aam
push
push
popa
int
outsl
lods
in
jns
cwtl
loope
shll
je
or
int
push
test
sbb
sbb
xor
pop
push
in
jb
or
daa
dec
mov
jns
jge
lock
sub
lret
ja
mov
mov
in
fwait
mov
faddp
push
nop
iret
sarb
dec
sub
mov
dec
jg
mov
adc
push
pusha
or
mov
cmpsl
pop
in
jecxz
in
push
push
callw
ja
outsb
and
cmovb
add
and
ljmp
xlat
andl
cmp
and
mov
bound
mov
popf
lfs
mov
cmpl
add
cmp
or
cmpb
es
popa
ficoms
pushf
fimull
test
in
stc
clc
movsl
addr16
pusha
inc
mov
mov
jae
aam
cmp
mov
mov
imul
out
pop
int
ja
cmpsl
mov
iret
in
fnstcw
jl
cmp
mov
dec
sbb
push
out
loope
push
ret
cmp
jecxz
jae
mov
test
fs
bound
mov
cmp
iret
fs
dec
in
dec
xchg
sub
jbe
xchg
adc
push
out
data16
ret
lret
adc
lock
xor
jno
jle
rclb
sub
add
xlat
pop
ds
mov
jecxz
add
jno
and
jne
jmp
roll
fstpl
jmp
push
sub
ljmp
and
xchg
xchg
and
jge
mov
or
fxch
leave
and
stos
outsl
sbb
add
pop
xor
mov
jg
add
cmp
negb
adc
sub
lods
ds
and
mov
and
lock
inc
adc
push
cld
in
das
mov
and
inc
add
dec
fsubr
jmp
xor
jb
inc
or
dec
scas
adc
dec
inc
hlt
pop
mov
add
shll
cmp
inc
stos
into
test
push
ret
cmc
in
push
roll
out
in
std
or
jbe
lea
out
arpl
dec
andb
movsb
inc
lods
inc
popf
hlt
movsb
adc
sbb
daa
cmpsb
jmp
mov
ljmp
movsb
into
mov
fisubs
mov
fwait
stc
jl
adc
mov
scas
mov
mov
inc
arpl
add
xchg
popf
repnz
push
xor
clc
pop
icebp
lea
ss
test
pop
jge
and
push
sub
adc
imul
adc
xlat
subl
out
sar
jl
sbb
push
mov
aas
lret
je
loope
jno,pn
xor
loopne
shll
dec
pusha
and
sub
or
sub
hlt
iret
dec
adc
jmp
mov
stos
ja
orb
fcomps
inc
mov
cmpsl
jnp
fs
inc
ret
or
adc
sbb
jno
add
mov
mov
xchg
xchg
xchg
inc
xor
mov
movl
aaa
enter
sub
pop
push
aaa
inc
mov
cmp
or
sbb
mov
cmpsl
leave
and
subb
hlt
sub
shl
inc
rorl
sub
mov
mov
in
mov
popf
cmp
jmp
lods
in
mov
cmpsl
inc
mov
stc
add
outsl
add
jae
lea
xor
mov
sti
sbb
sahf
pop
dec
push
fs
repz
aaa
and
insb
jno
xor
mov
movsl
lret
pop
test
gs
es
clc
negb
shrl
sti
pop
cmpsb
mov
test
sbb
out
push
fmul
lret
jmp
sub
insl
or
addr16
call
in
xchg
add
lret
imul
or
sub
cli
cltd
insl
jecxz
dec
fiadds
gs
lahf
gs
dec
cld
mov
in
inc
sbb
xchg
stc
pop
dec
outsl
gs
push
in
pop
aas
mov
mov
repz
into
sub
scas
cmp
cld
leave
mov
xchg
and
fadds
cli
xchg
fistps
sbbl
fistl
mov
sub
lcall
insl
mov
xor
fwait
sub
js
stos
hlt
jbe
testb
into
dec
sbb
mov
cmpsb
fdivl
cmp
out
scas
pop
xchg
lret
ficoms
shll
mov
sarl
mov
xor
movsb
test
lds
aam
int
cmpsl
ja
cltd
mov
shlb
imul
icebp
rorl
scas
outsb
ja
sub
repnz
fldt
movups
sbb
imul
jno
dec
mov
push
xchg
mov
hlt
pop
sbb
xchg
adc
mov
add
sbb
mov
ss
and
es
aas
mov
sbb
pop
loope
jo
pop
lods
in
mov
sub
call
stc
pop
sbb
mov
add
push
jmp
pop
sub
xchg
jo
fsubrl
sub
and
add
lea
adc
mov
sub
push
ljmp
iret
jbe
xchg
adc
pop
repnz
out
aaa
lods
sbb
test
mov
loop
adc
sti
fs
mov
jns
xor
fadds
jo
jnp
sub
mov
mov
into
sub
lds
mov
inc
enter
mov
adc
sbb
imul
lea
ss
mov
in
popf
ja
mov
or
xlat
lock
fiadds
fsubrs
or
movl
mov
insl
lret
call
mov
shrl
pop
xchg
rcll
out
push
jns
sbb
mov
mov
dec
sub
jno
pop
adc
inc
sbb
aaa
adc
int
jo
dec
adc
in
and
cwtl
xchg
push
decl
add
or
add
push
push
xchg
jmp
sbb
push
xor
push
ret
lock
mov
inc
sahf
repnz
iret
jl
lods
and
sbb
test
pop
xlat
in
mov
or
pop
xchg
adc
mov
dec
int
ret
in
sbb
cli
repnz
mov
xchg
adc
mov
icebp
scas
ljmp
daa
xor
pushf
rcr
dec
push
and
jg
push
outsb
pop
fwait
je
mov
adc
xor
not
shll
sahf
pop
movsl
inc
sub
je
inc
das
jg
lods
add
data16
adc
add
cwtl
fwait
clc
out
mov
mov
xchg
js
mov
movsl
jno
mov
scas
adc
pushf
jnp
inc
mov
sbb
hlt
icebp
inc
mov
aad
cmpsb
or
and
mov
mov
shrb
insb
nop
jle
xchg
adc
ds
mov
repnz
sahf
sub
das
xlat
jl
daa
repnz
outsl
cmp
mov
fcompl
dec
andb
std
jecxz
cmp
cs
push
clc
arpl
pop
sbb
jle
jbe
sbb
push
movsb
adc
lcall
sbb
cld
cmp
pusha
pushf
in
dec
sub
leave
sbb
add
out
rcrl
and
add
jecxz
mov
jnp
out
mov
rcrb
add
jecxz
mov
fs
sub
cmp
xor
pushf
push
push
loop
lds
stc
rcrb
pop
mov
and
and
cmp
push
ficoms
dec
dec
bound
pop
mov
dec
sub
ljmp
mov
lods
mov
fdivrl
add
loop
sahf
popl
xchg
in
cmc
xor
inc
mov
sub
adc
push
dec
popf
cmp
rolb
dec
les
cmovno
cmp
pusha
push
gs
jne
jecxz
cwtl
popa
mov
xor
outsl
xchg
pop
imul
mov
sub
pop
adc
les
cmp
test
shr
stos
out
mov
add
mov
inc
xchg
pop
adc
jnp
clc
sub
or
mov
sub
mov
out
mov
inc
jmp
inc
xchg
jbe
sbb
inc
adc
pop
out
leave
add
adc
and
inc
hlt
ja
dec
daa
std
sahf
out
pop
out
add
xchg
mov
jno
dec
loopne
or
or
lods
pop
pushf
mov
aam
pushf
in
xorl
lock
jae
mov
xor
xchg
adc
in
movsl
inc
lret
pop
ss
push
in
insb
popl
jne
dec
mov
add
or
stos
dec
push
jo
sub
loop
mov
lcall
xchg
dec
add
xchg
push
or
add
and
dec
call
hlt
pushf
cmpsb
cmp
add
or
adc
jns
jb
pop
bound
xchg
or
gs
mov
repz
and
or
or
sub
push
dec
mov
fldcw
push
xchg
pop
aad
mov
xor
sti
cld
sahf
pop
rcr
lods
loope
jge
cmc
ret
push
stos
xchg
fisttpll
subl
jl
fnstsw
push
push
mov
adc
lret
clc
dec
xlat
pop
xchg
repnz
pop
cs
xchg
cmp
mov
daa
sub
andb
mov
fcmovne
inc
outsl
mov
xchg
cmpsl
or
xchg
sub
repnz
roll
push
inc
mov
add
movsl
test
outsb
or
into
mov
cmp
cmp
xor
into
sahf
fwait
add
out
shlb
pop
decb
fwait
lahf
fildll
pop
inc
and
ds
mov
popf
lret
ret
lods
jp
mov
lcall
std
sbb
mov
adc
sub
dec
lcall
xchg
jnp
sarb
cmp
clc
out
fcoml
aaa
mov
jnp
and
imul
mov
ljmp
jne
inc
daa
lock
push
out
and
outsb
insb
cmp
pop
stc
aaa
fcomps
push
cmc
mov
repnz
mov
insl
imul
push
and
sbb
add
pushf
out
aam
push
in
imul
push
mov
xor
bound
mov
dec
mov
add
cli
jne
in
ljmp
ret
inc
out
mov
mov
into
ds
mov
aad
int3
dec
pop
outsl
popf
sbb
xchg
mov
mov
jg
push
mov
sbb
lahf
dec
lahf
inc
lock
lret
lea
mov
fwait
sbb
adc
rclb
mov
add
cmp
inc
push
lret
test
mov
xchg
test
mov
sub
hlt
in
je
mov
lahf
in
xor
mov
sti
add
je
ljmp
lret
repz
jl
mov
jo
mov
int3
and
rcl
adc
jns
ret
iret
bound
arpl
jno
lods
ret
loope,pn
dec
xor
icebp
lea
jmp
nop
in
clc
fisttps
adc
or
dec
sbb
ret
je
add
and
and
pop
add
xchg
push
sbb
mov
rolb
test
mov
aam
jge
fisubl
sub
test
pop
ret
daa
rcll
pop
jb
inc
jbe
cmpsb
std
cmp
loopw
jp
cmp
and
mov
adc
jmp
jge
sbb
adc
scas
imull
mov
push
or
mov
mov
pop
rcrb
add
jmp
mov
decb
cmp
jno
inc
daa
je
fdivrl
shr
dec
mov
call
cmp
nop
test
push
loopne
or
add
fstpl
cmp
ljmp
outsl
stc
fiadds
jl
mov
pop
gs
sbb
or
jae
pop
rorl
mov
aaa
and
bound
adc
jg
es
cmp
stc
testl
or
cli
jmp
and
inc
cltd
dec
or
ss
scas
push
out
jle
mov
xor
mov
in
in
pushf
mov
inc
mov
mov
mov
pop
push
fidivs
hlt
scas
data16
jp
lock
dec
cltd
les
mov
scas
decl
or
movsb
jbe
leave
inc
test
push
mov
jg
hlt
lods
dec
mov
movsb
xchg
out
aad
pusha
mov
inc
and
xor
shlb
cmp
lock
aas
cld
or
ret
jne
das
fdivrl
inc
pop
and
jg
pushf
inc
inc
push
and
aam
push
cmc
cli
xchg
repz
cwtl
outsl
inc
mov
std
push
lods
mov
scas
clc
mov
push
loope
mov
int3
mov
and
mov
in
or
imul
cmp
jge
jo
lea
and
leave
jl
imul
ret
in
adc
xor
outsl
loope
push
push
lret
in
or
mov
in
lods
sti
mov
add
loopne
mov
inc
sbb
inc
scas
mov
push
pop
fsubl
subb
mov
mov
jnp
dec
xor
inc
js
jns
loope
pop
fisubs
shr
cmp
dec
push
aaa
xchg
mov
mov
mov
xchg
cmp
and
outsl
pop
pushf
push
mov
dec
hlt
cmp
test
in
push
xchg
aad
mov
push
push
addl
int
inc
out
ljmp
gs
mov
mov
jns
pop
push
int
lock
std
int3
hlt
movsl
fwait
dec
mul
loopne
push
add
jne
pop
inc
and
fstps
adc
lret
outsb
sbb
sbb
insl
push
jbe
inc
lods
lahf
cmp
ficoms
pop
hlt
mov
js
jb
cld
jae
jp
jg
rorb
sbb
testl
imul
mov
add
xchg
out
push
leave
mov
subb
sub
jmp
das
pop
imul
sub
mov
sub
xor
xchg
cmp
sbb
cmp
and
loopne
xor
push
inc
jg
push
call
dec
adc
insb
mov
sub
adc
shll
mov
cmp
inc
daa
cltd
push
lahf
test
loopne
jecxz
sahf
lock
movsl
inc
popf
push
mov
pop
xchg
push
mulb
mov
lcall
push
mov
les
push
push
test
scas
fisttpll
popa
rclb
sub
push
and
xchg
pop
sarl
cmp
and
sbb
mov
sub
xor
or
out
fcoml
adc
inc
xchg
jae
into
jmp
mov
mov
cli
sub
push
or
or
rcrl
or
jp
jle
xchg
cmpsb
and
pop
inc
mov
imul
adc
mov
pop
imul
cltd
and
movsb
stos
jbe
pushf
stos
test
xor
outsl
xchg
xchg
sub
mov
jne
stc
insb
insl
push
cmpsl
pusha
in
out
jge
adc
jbe
pop
and
push
jp
mov
xchg
sub
sbb
scas
bound
pop
stos
xlat
pop
mov
mov
mov
push
lcall
es
test
jg
lahf
subl
sub
mov
aad
sub
push
dec
stc
cmc
fwait
sar
rcrb
shld
cmp
push
mov
lods
out
in
jb
mov
dec
xchg
faddl
cmp
outsl
mov
lret
jns
sub
ja
push
inc
loopne
hlt
mov
mov
jp
in
sbbl
dec
mov
cmp
inc
sbb
mov
push
incl
fidivl
bound
subb
fwait
lahf
aam
dec
mov
or
jnp
aad
push
jge
adc
sbb
das
cwtl
insl
cld
push
push
cmp
add
in
xchg
mov
push
or
loop
jmp
subb
and
inc
aaa
sub
out
cmp
push
movsb
in
vsubsd
out
out
pop
arpl
sub
js
lret
out
mov
pop
mov
cmc
mov
jb
ds
lret
xor
xchg
mov
dec
push
cli
addr16
rcl
icebp
jbe
xchg
insb
adc
cmpsb
out
mov
addr16
mov
fstl
in
inc
adc
mov
popl
data16
imul
pusha
adc
jmp
movsb
jmp
mov
ret
xchg
xchg
xchg
sahf
outsb
mov
mov
shl
push
pop
adc
lcall
lret
roll
jbe
rclb
es
xorl
pop
fs
lods
sbb
repz
adc
les
push
or
clc
push
jns
jno
cltd
stc
pop
or
mov
mov
outsb
arpl
jp
cmp
fdivl
aas
push
inc
daa
cmp
mov
fadd
lds
mov
mov
ja
orb
mov
mov
mov
movsl
leave
inc
dec
loope,pt
jge
cmpsl
inc
xchg
or
test
and
cmc
or
fmulp
insb
ror
mov
dec
mov
add
fstpl
mov
aad
mov
mov
mov
push
shlb
popf
ss
sub
push
orl
daa
or
and
fildll
test
jle
jne
pop
dec
mov
xchg
icebp
fnstcw
mov
add
xor
movsl
cli
orl
xchg
inc
scas
dec
aaa
adc
fldt
fcmovu
sub
adc
mov
push
or
fsubs
jg
sbb
addr16
jae
sbb
inc
or
add
jae
cmp
pop
add
data16
addr16
sub
cmc
adc
imul
popf
cmp
xchg
add
scas
in
repnz
sub
push
decb
std
add
and
sub
add
mov
xor
sub
inc
test
out
mov
push
enter
repnz
xchg
inc
xor
popa
xchg
fnsave
and
test
mov
and
faddl
cmpsb
stos
adc
or
pop
fidivl
je
mov
jmp
lock
repz
mov
inc
dec
sub
loopne
mov
mov
rcrw
les
into
sub
hlt
mov
xchg
push
inc
in
insl
rcl
inc
addl
and
movsb
jp
rep
ja
mov
inc
add
jae
mov
sub
div
or
aad
xchg
sub
inc
outsb
sub
inc
mov
cmc
fildll
adc
jo
repz
inc
shl
lahf
inc
sbb
int
notb
cmp
or
xchg
cmp
cmovns
mov
out
mov
adcl
test
or
inc
jbe
dec
fcmovb
cmp
iret
mov
cpuid
inc
mov
sub
dec
xchg
and
inc
cmp
negl
hlt
xor
sbb
iret
sbb
call
push
or
mov
sbb
or
outsl
rolb
cmp
adc
jnp
push
rcrb
in
cmp
lds
repz
push
lods
fnstsw
or
fsubs
ss
push
in
shl
or
sbb
pop
pusha
jne
icebp
push
int3
pop
sahf
iret
imul
sbb
adc
pop
mov
cli
ja
jne
rorb
adc
inc
inc
lods
cmp
jge
cmp
nop
jno
pop
inc
jg
ret
xchg
inc
pop
mov
pop
jns
test
inc
mov
clc
jl
jecxz
ljmp
sub
std
out
loop
jns
sarb
pop
sbb
mov
ss
pop
mov
dec
jnp
dec
aam
adc
mov
das
aam
xor
add
addr16
popa
push
cld
dec
shl
push
subb
rcll
inc
gs
bswap
add
jne
pop
lahf
cmc
rclb
aad
cmp
jmp
push
or
and
add
lea
loop
daa
dec
xchg
sti
mov
push
xchg
sub
jae
ficoml
enter
shrl
or
aas
adc
or
inc
test
fwait
mov
sti
inc
push
movsb
cmpsl
repnz
dec
stos
repz
fld
dec
jb
movsl
ret
push
das
sub
mov
jb
enter
sub
push
movsb
sbb
mov
mov
push
test
int
cmp
adc
push
and
and
xchg
jns
sbb
notl
xchg
push
push
pop
inc
jns
stos
popa
repnz
rol
pop
jge
dec
xchg
insl
push
mov
jge
xchg
mov
or
stos
xchg
jb
sbb
sbb
arpl
inc
jne
pusha
das
mov
mov
dec
sbb
ret
mov
cmp
cs
sahf
enter
lea
jbe
mov
cwtl
scas
add
push
inc
loop
xchg
mov
mov
std
test
adc
sbb
xchg
repnz
shlb
inc
insb
and
push
out
and
pop
push
int
repnz
das
mov
add
lahf
sahf
lock
or
pushf
push
jl
movsb
sbb
mov
ds
jg
xor
mov
dec
cwtl
add
divb
decl
mov
mov
jae
cltd
test
out
shll
aad
mov
out
jne
xchg
mov
jnp
in
popf
sbb
push
xor
pop
or
rcrb
dec
nop
jbe
sbb
push
lahf
adc
pop
sbb
gs
push
jle
pop
mov
jp
cmp
add
negb
mov
js
setno
test
aam
cmp
jle
dec
add
js
add
or
cli
mov
ret
fldl
mov
push
dec
es
mov
dec
mov
idivb
stos
jecxz
add
sbb
push
rdmsr
rorb
clc
jmp
mov
outsl
cmp
in
jno
dec
cmp
out
mov
inc
sbb
adc
adc
fstl
ds
test
cltd
testl
call
lea
xlat
pop
mov
fcoms
popa
ja
insl
mull
sbb
mov
mov
mov
jg
fcmovbe
aam
adc
repz
sub
nop
lods
xchg
das
ja
add
call
mov
or
in
cmpsl
push
bound
jecxz
lret
imul
inc
cmp
cs
sar
loope
mov
and
cmpsb
xor
jle
mov
push
xor
pop
insl
and
mov
in
mov
xchg
lret
push
jnp
loopne
jb
fwait
adc
shll
daa
pop
popa
js
xor
dec
mov
pushf
sti
cltd
scas
repz
adc
test
mov
je
fcmovnb
pop
mov
ret
pop
lods
in
out
roll
fs
daa
cmp
adc
adc
xchg
and
cmp
cmpsl
scas
outsl
outsl
mov
rorl
cmp
xchg
mov
push
push
lret
mov
pop
neg
xor
mov
arpl
add
push
fimull
das
sbb
dec
or
sub
out
jl
rclb
repnz
aad
push
adc
je
call
aaa
loopne
mov
in
mov
cld
jmp
xor
in
sub
xor
sub
dec
cmp
sbb
lcall
cmp
cmp
cwtl
or
pop
sbb
add
ja
mov
sub
push
add
lret
insl
fcoms
jp
sub
xchg
push
sbb
imul
dec
js
popa
push
pop
xor
pop
cld
testb
adc
cmpb
fildl
lods
fcompl
loopne
aas
jecxz
jl
xchg
js
stos
mov
xor
call
mov
jecxz
push
loop
shr
and
aad
in
sub
les
bound
sbb
inc
mov
and
mov
imulb
test
sub
addr16
rcrl
pushf
cmc
clc
mov
mov
xchg
loopne
xchg
mov
repnz
cmp
xchg
jne
out
cltd
ss
or
xor
imul
mov
add
jp
pop
scas
sbb
rol
and
jge
enter
mov
pop
cmc
lea
mov
dec
or
clc
mov
lcall
jecxz
jo
popa
pop
es
call
pop
pop
das
xchg
in
sahf
dec
stos
aad
loopne
jno
shlb
pop
icebp
daa
mov
call
lea
xor
lcall
pop
sub
mov
mov
jg
movsb
std
mov
add
dec
jne
and
mov
pop
nop
ret
push
int
push
xchg
das
jecxz
je
lea
jle
and
cmp
jg
lcall
and
das
cmp
jl
in
xchg
dec
rcrb
int
cmp
adc
int3
cs
sbb
cmp
aaa
push
mov
pop
scas
pop
ds
xlat
lods
loop
xlat
and
mov
jp
dec
icebp
lret
outsl
xchg
cmp
pop
xchg
mov
adc
sbb
jl
lret
lds
cmpsl
push
or
pop
or
jecxz
fiadds
xchg
insl
aam
mov
scas
sub
in
hlt
cwtl
xchg
lods
xchg
lret
pop
xor
push
inc
mov
xor
lods
pop
stc
jg
rorl
push
fisubrs
aaa
jmp
mov
sub
or
or
cmp
mov
dec
lret
mov
dec
test
test
or
add
jo
mov
push
arpl
pop
stos
push
mov
mov
outsb
sub
js
mov
aas
jno
pop
add
or
fstl
es
xchg
divb
test
push
push
and
sbb
pop
add
std
sbb
dec
frstor
inc
push
dec
dec
adc
pusha
rorb
push
push
or
dec
movb
scas
push
pop
pop
in
das
psubw
enter
out
xchg
pop
add
inc
sbb
out
sbb
scas
rcl
sub
jmp
mov
add
insl
cmp
jb
and
arpl
fldcw
cmp
cs
adc
push
dec
push
add
pop
add
outsb
popf
jae
imul
sbb
push
cs
xchg
test
out
pop
mov
fiadds
je
les
pop
mov
mov
out
lock
mov
stos
fistpll
mov
jno
mov
jmp
jl
or
push
cmc
punpcklwd
cmpsb
outsl
cmp
stos
jns
sub
jnp
add
jp
mov
mov
jg
dec
cmp
push
or
arpl
and
push
xchg
test
sbb
inc
repz
lods
std
xchg
xchg
arpl
fisubrl
lds
ja
and
dec
in
pop
movsb
push
inc
out
add
bound
in
or
push
dec
adc
jbe
lret
jecxz
shlb
push
xchg
adc
xor
adc
sarb
gs
or
std
or
enter
cmp
aaa
lea
fnstcw
mov
fsts
test
ret
mov
femms
push
inc
push
dec
xchg
notl
jns
aad
pusha
hlt
or
sti
fxch
pushf
adc
push
icebp
test
or
cmp
js
add
mov
mov
xchg
xor
orb
rorb
sbb
jno
iret
lods
out
push
int
dec
lcall
sti
das
mov
mov
lods
movb
movsb
inc
icebp
dec
sbb
mov
movsl
ja
repnz
loop
into
mov
jl
mov
push
inc
push
pusha
sbb
icebp
inc
sbb
push
dec
xchg
test
xchg
lods
out
cld
rolb
scas
xor
lahf
mov
adc
lea
cld
aad
sbb
or
jne
jecxz
jae
mov
xor
inc
idivl
xlat
pop
push
pop
pop
leave
into
or
mov
lock
xor
rolb
pop
xchg
jmp
icebp
lock
dec
dec
pop
sarb
loop
outsl
rcr
cmp
and
adc
mov
sub
loope
rorl
repz
xor
or
jne
outsb
mov
pop
jb
clc
add
cld
mov
sbb
mov
inc
pop
ljmp
push
mov
xor
or
into
push
mov
aaa
lea
and
test
gs
or
dec
loopne
lock
xchg
addr16
jae
inc
pop
add
mov
test
hlt
scas
lahf
jp
stos
pop
not
imul
sbb
push
xadd
mov
mov
mov
test
sub
sub
icebp
mov
and
add
cmp
cmp
xor
hlt
lret
xor
hlt
aas
shl
xchg
push
sbbb
loopne
pop
or
sub
and
xor
jle
rdmsr
loope
xchg
sahf
push
sub
ljmp
clc
cmp
push
dec
sahf
clc
fsubs
pop
xchg
add
push
jbe
cmp
movsb
push
inc
out
bswap
inc
mov
inc
rcl
pop
les
push
inc
mov
les
and
pop
add
jg
testl
ljmp
or
add
clc
pop
sbb
or
cld
dec
daa
mov
rcr
sahf
cmp
mov
mov
call
push
mov
inc
lds
pop
cmp
test
imul
sub
cs
insl
pop
mov
pop
xchg
leave
scas
imul
aaa
mov
add
int
add
outsb
jecxz
scas
push
fucomp
call
int
push
and
push
dec
daa
mov
clc
js
inc
clc
and
adc
mov
mov
push
arpl
mov
push
insl
pushl
in
inc
mov
adc
je
and
insb
push
jge
cmc
jae
nop
add
pop
mov
lret
lds
ds
movsb
or
xchg
lods
sbb
jp
sbb
shll
push
mov
fidivs
mov
push
jne
pop
sbb
jecxz
outsb
stos
je
adc
cmp
sub
lea
jl
outsb
arpl
adc
or
jmp
jae
cli
fdivrp
push
popf
test
nop
ljmp
adc
les
ret
sbbl
mov
or
idivb
shlb
or
pop
inc
aam
ljmp
push
mov
addr16
cmc
push
outsl
cli
cld
add
mov
mov
push
es
inc
pop
and
or
mov
in
div
pop
hlt
arpl
hlt
xchg
pushf
int3
dec
mov
add
call
jge
pop
mov
dec
xor
cmpsl
lret
fwait
outsb
lods
sbb
push
or
js
call
inc
pop
lcall
cmp
mov
test
ja
sub
insb
mov
push
fbstp
inc
push
mov
iret
push
into
or
or
push
ljmp
sar
lods
sub
sbb
data16
dec
repnz
sub
adc
cmc
mov
xchg
lea
mov
lret
and
push
jo
sub
flds
aas
dec
fstl
inc
popa
cmp
push
pop
leave
adc
shlb
jno
jae
add
loope
mov
out
decl
pop
ret
repz
cwtl
and
inc
inc
std
mov
shl
mov
into
xchg
mov
and
mov
add
in
adc
repz
jo
lods
add
lds
inc
pop
dec
add
dec
xor
shl
mov
jle
inc
repnz
or
in
or
dec
mov
sbb
cmp
push
pop
or
push
or
and
cmpsl
daa
pop
int
lcall
and
cmpsb
lea
xor
repz
xorl
stos
xor
jl
adc
xchg
pushf
mov
mov
mov
movsb
push
loop
pusha
sbb
outsb
push
loopne
dec
xor
stc
jecxz
jmp
push
mov
xor
adc
les
int3
push
cmp
shrl
pop
xor
scas
test
mov
inc
lock
je
mov
sahf
cmp
fldl
xchg
adc
sbb
les
cmpl
mov
adc
sub
mov
andl
jp
mov
cwtl
and
stos
cli
and
dec
jl
scas
cltd
ljmp
and
scas
lock
push
movsw
sub
mov
nop
icebp
stos
add
mov
sub
aad
adc
add
xchg
or
mov
cmp
jae
negb
xchg
stos
or
out
lods
lea
daa
xchg
lds
arpl
outsl
lahf
jae
or
and
and
popa
gs
aaa
inc
xor
bound
rorb
stos
fdivrp
lret
enter
and
rorl
add
xor
sbb
aad
mov
fisttpl
das
aam
xor
aaa
sti
and
inc
mov
stc
mov
or
dec
jge
les
lods
add
push
sbbb
dec
mov
push
into
insl
pop
sbb
fidivl
and
iret
pop
mov
movb
ficoms
mov
scas
popf
cli
or
and
sub
cmp
and
lahf
into
ficomps
jle
rorb
cmpb
addb
cmp
fwait
pop
js
jmp
xor
in
enter
cmp
jecxz
add
shlb
movsl
cmc
push
sub
pop
and
push
aaa
cltd
xor
push
xor
out
mov
dec
xor
sub
add
imul
lahf
pop
pop
add
lcall
loopne
test
rcrb
push
xchg
insl
push
sahf
mov
inc
add
dec
sarl
clc
sub
mov
ror
js
jge
aaa
into
das
fistl
mov
sub
stc
fistl
adc
push
cli
xchg
xchg
mov
cli
mov
inc
dec
out
divb
xor
mov
int3
inc
insb
xchg
push
pop
sub
dec
push
pop
stos
mov
xchg
sbb
adc
cmpsb
mov
dec
add
dec
adc
repz
xchg
adc
fdivs
in
movsl
pop
xlat
cmc
sub
lret
jp
xor
cmpb
mov
out
or
or
pop
lock
sbb
jmp
cld
xor
loope
movsl
es
sub
leave
dec
or
inc
dec
add
add
neg
mov
jp
cmp
mov
ffreep
push
xor
out
sub
pop
pop
lds
sbb
push
fsts
add
sbb
xchg
pushl
push
mov
cmc
sarb
adc
sbbl
push
xlat
mov
dec
mov
cmp
ja
cmp
or
pushf
lcall
jb
pop
mov
jp
js
inc
imul
stos
and
sbb
in
arpl
shlb
sbb
sbb
icebp
sub
sbb
ja
inc
lahf
int3
loop
ljmp
pushf
fists
xorb
dec
fcoms
jmp
add
sti
sub
mov
adc
mov
jns
xchg
mov
cmp
repnz
jmp
iret
mov
sbb
push
int3
shl
adc
lret
popf
repnz
adc
cmp
sbb
aaa
xchg
mov
push
add
pop
loope
loop
sbb
cmpsl
into
mov
xchg
jecxz
rcll
dec
cli
cli
mov
testb
outsb
xorb
fidivl
imul
add
addr16
ljmp
sbb
jp
gs
stos
sub
stos
fwait
add
mov
lret
pop
pop
add
xchg
hlt
sahf
adc
ljmp
or
je
stos
dec
add
not
push
sbb
std
adc
sbb
in
sub
repz
mov
adc
in
jle
push
adc
std
sub
sar
push
and
std
ja
movsb
fmull
jne
jl
neg
in
adc
ljmp
or
jg
pop
sub
mov
ljmp
mov
iret
dec
cltd
inc
loop
add
jbe
sub
in
cmp
fldenv
pop
stos
cld
int
sahf
out
mov
mov
xchg
adcb
adc
loop
sub
loop
decb
dec
ds
lds
sub
mov
adc
pop
in
mov
pop
into
sbb
int
cltd
cmp
into
cltd
push
pop
ret
ljmp
adc
lock
pop
push
xchg
mov
addr16
push
negb
lock
movsl
mov
inc
gs
out
jno
movsb
stos
xor
enter
fisttpll
lods
mov
and
nop
lock
adc
pop
dec
mov
cmpsb
xor
cltd
pop
xchg
lock
cs
nop
inc
out
addr16
dec
push
loope
or
js
inc
cmp
hlt
jne
pop
data16
xor
in
add
sub
ror
mov
adc
lcall
jbe
xor
dec
cltd
imul
jp
ficoms
mov
xchg
test
sub
adc
iret
es
iret
mov
sbb
jb
lret
pop
into
sub
mov
loope
cmp
bound
and
ss
xor
push
in
out
outsl
mov
fwait
xchg
cld
mov
jmp
and
pop
out
cmp
sarb
test
out
push
xchg
xor
pushl
loopne
mov
fcompl
cmpsl
adc
push
mov
and
jae
push
test
dec
loop
jmp
adc
mov
mov
lds
mov
mov
mov
and
adc
pop
sahf
mov
add
mov
cli
dec
jp
fisubs
sbb
imul
lahf
outsb
push
mov
pop
scas
insl
insb
and
xor
jp
or
icebp
lcall
ret
push
or
shl
mov
mov
jns
mov
mov
add
inc
fmulp
imul
push
dec
push
test
loopne
je
pusha
push
lcall
test
aad
rol
lods
cmpsl
cmpsl
out
dec
dec
mov
mov
sbb
das
int3
mov
lds
dec
or
test
je
scas
insb
dec
push
lods
xchg
in
fstpl
xchg
mov
lret
cld
jne
jmp
add
fmulp
mov
inc
pop
repnz
xor
jg
push
mov
enter
pop
xor
mov
push
out
adc
in
lahf
stos
rcrl
js
mov
add
pop
lahf
adc
fidivrs
jmp
popf
outsb
dec
out
lds
sub
sbb
call
jae
int
mov
jnp
out
daa
and
fisubrs
inc
int
xlat
inc
mov
out
cmp
out
in
mov
dec
std
aas
jb
and
dec
sub
loop
int
and
jecxz
or
insb
sub
insb
xor
pop
adc
adc
mov
pop
jge
out
outsb
in
fwait
jae
scas
filds
repz
aas
adc
cmp
arpl
jo
or
call
dec
mov
scas
add
jge
add
sub
push
dec
mov
mov
mov
adc
bound
sub
push
into
push
test
rorl
fmulp
xchg
test
adc
aam
xor
leave
test
js
js
arpl
push
mov
popf
sbb
jmp
leave
mov
dec
out
dec
mov
cmp
or
adc
shll
push
scas
or
stos
je
icebp
cmpsl
fwait
nop
sbb
pop
imul
cltd
mov
adc
es
mov
cmp
sub
enter
pop
push
aam
adc
add
sbb
repnz
or
push
push
jmp
sub
push
or
mov
cmp
jo
adc
or
inc
jo
repnz
mov
shll
fnsetpm(287
mov
popf
in
inc
in
xchg
clc
in
mov
lcall
outsw
dec
shrl
into
hlt
repnz
push
xchg
aas
push
pop
mov
mov
add
shlb
cmp
and
stos
pop
fisubrs
adc
insb
lods
aaa
xlat
jecxz
incl
not
lea
out
stc
cwtl
cli
xor
cmp
push
fmuls
xchg
mov
and
ds
sub
pop
dec
jne
push
mov
inc
mov
and
addr16
mov
xor
cmp
xchg
ret
test
lock
sub
outsb
repz
scas
and
call
and
cltd
jnp
push
mov
add
push
add
outsl
jbe
lods
or
lods
cmp
mov
mov
sbb
sbb
call
push
mov
in
jb
push
ja
jns
sahf
das
dec
lds
jmp
mov
cwtl
fistpll
sub
in
test
mov
test
stc
mov
or
mov
lahf
fistpl
repz
rolb
adc
inc
test
popa
and
lret
mov
adc
nop
in
cltd
mov
sbb
cmp
mov
aam
xor
lcall
sbbl
xor
xchg
pushf
dec
enter
jno
pushf
mov
jmp
in
loop
or
mov
cmc
add
inc
test
xchg
and
int3
out
jno
daa
fisubrl
shlb
imull
inc
xor
xchg
xchg
mov
sbb
xor
or
push
xor
mov
ds
jo
sub
inc
stos
shrb
push
popa
stos
xchg
das
pop
std
jecxz
nop
aam
mov
ljmp
inc
push
sbb
nop
push
cltd
jge
push
jg
mov
push
lock
mov
leave
adc
inc
push
and
lods
sub
xchg
clc
xor
xor
packuswb
push
xchg
out
les
cmpsl
push
leave
cwtl
das
clc
call
imul
int3
clc
out
ret
pop
and
xor
stos
mov
outsb
xlat
mov
pop
xor
lods
inc
xor
sub
lret
add
dec
fldt
adc
and
or
loopne
xor
mov
add
lret
or
adc
cli
and
insb
aaa
mov
dec
adc
sub
daa
sbb
stc
divb
rcrb
filds
in
out
push
mov
mov
and
std
rcl
xor
mov
push
jnp
in
into
and
xchg
mov
sbb
mov
fimuls
or
xchg
mov
loope
mov
push
adc
jne
ret
add
lods
and
lods
mov
cmp
and
pop
aas
sti
ss
cmp
adc
dec
sbb
mov
daa
dec
adc
push
sbb
xor
xchg
xchg
cs
or
notb
arpl
jge
aas
dec
push
test
and
ret
adc
lods
mov
inc
inc
cmp
ja
xor
sbb
mov
pop
mov
sbb
mov
imulb
aaa
pop
std
pusha
je
pop
push
into
hlt
aaa
mov
add
jle
mov
cmc
stc
adc
pusha
test
cmpb
mov
xchg
inc
lods
push
cmc
push
addr16
jb
mov
cmpsb
pop
add
mov
push
loope
popa
popf
stos
lds
popa
jnp
jl
scas
jl
or
pop
lea
gs
rcr
lret
pushf
lea
pop
mov
sub
jecxz
cmpb
cmp
xchg
mov
jle
adc
sbb
shlb
lods
sbb
mov
aaa
rcrb
cmp
mov
shll
lods
adc
push
fldt
enter
cltd
dec
or
pop
or
xor
lods
jg
sahf
dec
shrl
dec
or
push
inc
add
inc
xchg
push
repz
popa
pop
jb
mov
pop
fwait
or
arpl
mov
mov
lock
and
sarl
cmp
xchg
movsl
xchg
mov
cmp
pop
xor
inc
shlb
popa
or
std
pop
xor
sub
aas
stos
add
shrl
lods
mov
push
lret
je
dec
inc
jecxz
add
sbb
aas
mov
rcll
inc
sbb
les
jmp
scas
sbb
pop
push
addr16
jecxz
push
push
pushf
in
pop
mov
jno
dec
jl
lret
pop
jl
std
movsb
test
jae
dec
and
sarl
dec
dec
imul
push
clc
cmp
les
mov
xchg
loop
pop
hlt
xlat
push
cmp
out
pop
lock
jp
clc
loopne
add
adc
xor
pop
rcr
push
pop
arpl
icebp
push
jg
repnz
dec
pop
jbe
or
dec
repz
cmp
inc
jg
and
sarl
imul
mov
cmpsb
fbstp
clc
add
jae
jg
dec
add
test
int
cltd
lea
test
shl
movsb
mov
movsb
xchg
add
dec
fnstenv
push
fsubrs
and
mov
sub
or
dec
rorl
lret
adc
ljmp
xlat
aam
cmp
ret
jno
xor
sbb
cs
mov
lahf
jle
mov
pop
add
std
and
cltd
add
inc
lds
data16
scas
jo
in
xorb
sub
sbb
pop
nop
or
xchg
push
add
lcall
lods
mov
loope
and
xbegin
test
fistpl
fisubrs
out
cmp
sbb
mov
inc
xor
xor
sub
movsl
add
mov
lcall
call
loopne
sbb
sub
sub
ret
xor
add
subl
arpl
mov
aaa
sub
xor
cltd
push
pop
loopne
das
cmp
movsl
jmp
mov
popa
and
mov
in
les
lret
adc
dec
popa
adc
aad
mov
mov
or
cs
and
mov
imull
jno
loopne
push
ficomps
adc
or
loope
cmpsl
pop
ret
stos
inc
ret
dec
push
mov
lcall
and
xchg
mov
push
cmp
or
xchg
lods
out
cmp
or
fidivs
fdiv
movsb
je
fmuls
mov
cwtl
fwait
push
aas
fwait
mov
leave
inc
fidivrl
or
push
push
inc
scas
scas
or
or
fildl
sub
in
lock
jae
and
sbb
sbb
ss
or
mov
xor
sbb
mov
cmp
pop
pop
and
js
xor
jno
push
pop
negb
sbb
sub
out
sahf
nop
ficompl
adc
mov
ljmp
outsb
dec
dec
popf
scas
rclb
inc
pop
scas
jbe
jg
jae
mov
or
sbb
push
pop
ja
pop
jnp
aaa
stos
adc
push
mov
rorl
in
nop
loope
jae
jb
fildll
test
xchg
lcall
test
push
cs
or
enter
jo
sub
into
sbb
sub
popf
sub
je
jp
vmread
jbe
pop
aad
cld
mov
hlt
aas
adc
or
cltd
jb
add
out
lods
stos
aas
pop
das
bnd
mov
fisttpll
add
je
mov
xor
add
rcrb
mov
aam
sub
mov
out
inc
decl
cld
cmp
pop
shrb
push
lock
push
add
inc
push
or
movl
sub
pop
out
push
test
int3
mov
inc
es
mov
inc
pop
mov
stos
push
mul
scas
mov
inc
mov
aas
inc
in
mov
rol
movsl
pop
int3
dec
scas
cmp
dec
sbb
repnz
call
mull
loop
jo
add
mov
in
repnz
inc
pop
sahf
fcompl
mov
adc
sub
push
xlat
cmp
fxtract
mov
mov
lds
and
jg
jne
stos
push
xchg
mov
push
pop
mov
lret
sbb
sti
adc
or
push
inc
cmpb
movsb
lret
out
lcall
inc
test
aaa
cli
outsl
dec
cli
push
jne
cltd
bound
mov
lret
inc
outsl
movsb
jne
fstpt
cmp
jnp
sub
and
mov
and
xchg
or
repnz
mov
cmp
mov
xor
int
andb
jnp
bound
mov
mov
push
aam
inc
dec
fs
jmp
adc
add
out
cld
outsb
xor
test
test
hlt
out
xor
mov
xlat
mov
gs
repnz
dec
lret
xor
jle
aad
ret
jae
adc
ljmp
mov
rcrb
xor
mov
pop
or
lods
push
and
cmp
out
xor
rol
ret
sub
jbe
add
cmc
inc
gs
mov
or
ljmp
sti
adc
inc
fisubs
mov
popa
cmc
das
stc
fldt
cmp
sub
loopne
xor
cmc
and
mov
sub
push
dec
mov
jle
out
mov
push
ret
test
mov
pop
inc
xchg
sub
leave
and
mov
sbb
das
shlb
inc
push
sti
mov
nop
jbe
xor
xor
xchg
xchg
movb
scas
outsl
xor
sub
and
ljmp
aas
insb
or
call
add
mov
faddl
insl
cwtl
pusha
loopne
jp
mov
sbb
decb
je,pt
filds
push
mov
push
adc
out
nop
push
ds
xor
repnz
sbb
mov
movsb
enter
cmpsb
cmp
data16
fsubrs
ds
inc
mov
inc
dec
mov
mov
fsubl
cmpsb
dec
aam
mov
fs
pop
mov
subb
jp
and
xchg
jb
dec
scas
addr16
flds
sub
xor
xor
aad
sarb
pop
xchg
lahf
sub
xor
xchg
sbb
push
cmp
orl
scas
insl
mov
sbb
dec
test
in
cmpb
push
jp
mov
push
inc
hlt
outsl
mov
rcl
rcrl
shrb
mov
insl
xchg
repnz
jnp
and
or
cmp
idiv
sahf
outsb
sbb
insl
pop
jnp
sti
xlat
xor
je
js
xchg
or
xchg
xchg
push
test
fisttps
rcl
out
sub
scas
jge
mov
and
jl
js
or
dec
jp
int3
sub
adc
jne
mov
and
and
rolb
cmp
int3
mov
mov
loope
pop
ljmp
orb
nop
and
inc
mov
fisubs
jns
insl
fbstp
les
cld
enter
add
aaa
out
arpl
mov
aas
lahf
cmp
test
in
lods
imul
mov
int
pop
inc
mov
adc
lods
xor
shlb
sub
scas
mov
inc
mov
leave
sar
xor
xchg
incl
push
push
out
and
ljmp
mov
das
jno
mov
lcall
lcall
mov
xchg
fs
sub
xchg
pop
cmp
test
sub
cmp
clc
test
add
sbb
cltd
pop
rcrb
sbb
outsl
in
out
or
pop
out
push
inc
mov
xchg
call
pop
data16
sub
cmc
das
cmpsl
fsub
lock
shl
lret
and
add
push
push
adc
mov
rcll
inc
inc
inc
xor
shr
or
cld
jl
clc
lods
dec
xchg
add
flds
mov
jbe
addb
cltd
repz
push
jl
xchg
adc
pop
add
xor
dec
js
das
sahf
fwait
rolb
dec
or
icebp
lahf
mov
cmpsb
inc
xchg
pop
jmp
dec
stc
jae
sbb
sub
xor
stc
xchg
lods
adc
sbb
mov
mov
adc
sub
mov
inc
mov
and
push
mov
dec
jmp
or
leave
jns
iret
cmp
imul
sbb
test
jmp
pop
sub
aas
pop
push
outsb
mov
aaa
inc
mov
fisubrs
roll
sub
xor
lahf
sbb
lds
xchg
test
js
cmp
icebp
cli
cmp
cvttps2pi
jbe
inc
cmp
ljmp
lods
jmp
fsub
arpl
pop
lret
mov
and
fisubl
or
stos
xchg
and
loop
int
mov
in
xor
add
filds
mov
mov
push
and
sahf
xor
adc
mov
int
gs
adc
fimull
je
push
cwtl
push
cs
js
push
mov
test
into
js
fwait
adc
incb
int3
inc
fcoms
cmc
push
stc
push
jbe
fucom
mov
sbb
cmp
xchg
jp
loope
mov
je
adc
mov
mov
and
push
out
pop
lcall
sub
xorb
dec
arpl
or
cmp
enter
shrb
popf
inc
loope
add
mov
in
pop
mov
mov
cs
rcr
pop
xor
nop
adc
icebp
jb
imul
ss
repnz
loopne
push
jno
movsb
mov
xchg
test
divl
push
cmp
push
stc
in
xlat
call
push
jge
lahf
outsl
test
pop
sarb
and
lods
aas
jae
cmpsl
add
movsl
jae
pop
sub
xor
stos
imul
add
imul
outsl
ffree
jae
cmp
fmuls
cli
mov
mov
xchg
push
aaa
pop
jns
xor
or
fsincos
lods
dec
je
orb
in
or
out
push
cmpsb
out
js
jbe
adc
inc
fnstenv
ljmp
add
imulb
jae
in
jge
aas
sub
and
push
or
lcall
loop
scas
test
mov
stos
push
lea
inc
sub
in
mov
lret
lret
cwtl
lret
sub
sbb
mov
emms
outsb
arpl
ret
hlt
lahf
push
cltd
into
ja
sub
cmp
mov
cmp
repz
sub
mov
pushl
sbb
fs
test
pop
es
mov
xlat
scas
push
or
inc
inc
fnstenv
ficompl
dec
fadd
data16
push
shr
in
gs
mov
es
xor
ss
in
rcll
icebp
int3
sbb
fadd
notb
sbb
notb
bound
clc
jno
repnz
and
pop
and
dec
or
adc
adc
cld
iret
call
mov
mov
xor
or
flds
popf
push
xchg
aad
cmp
daa
cld
bound
xchg
mov
lahf
clc
mov
sti
daa
ss
or
lea
xor
mov
xchg
adc
pop
cmp
data16
ljmp
lea
jge
or
pop
scas
lods
xchg
sub
mov
ror
call
scas
roll
jns
mov
sub
in
fidivs
sub
add
jnp
dec
inc
imul
or
jo
addr16
sbb
xchg
test
or
add
inc
cs
unpckhps
or
sub
xor
mov
mov
fwait
mov
pop
or
sbb
sbb
xlat
nop
stc
add
dec
das
push
aad
push
add
sbb
push
add
int3
and
inc
xchg
pusha
dec
cmp
pop
and
push
inc
inc
jge
pop
pop
push
dec
std
mov
pop
push
pop
mov
std
adc
cld
cmp
sbb
imul
popa
jecxz
push
enter
add
jns
loopne
cmc
iret
xchg
aam
xchg
aas
cmp
ja
push
repnz
push
inc
jl
inc
stos
jp
mov
in
js
inc
imul
xor
xchg
bound
stos
mov
ljmp
xor
pop
jne
add
fistl
xchg
imul
xor
lds
jmp
push
fimull
xchg
mov
jle,pn
xchg
jmp
out
sub
mov
cmpsl
fimull
or
pop
lds
pusha
lds
add
jmp
cmc
xchg
aaa
sub
jle
mov
xchg
and
js
cmpsl
and
aad
lea
push
xor
mov
jp
mov
mov
test
popf
and
lcall
hlt
mov
adc
sub
lret
pop
inc
rorb
sbb
xor
test
mov
je
das
mov
sub
pop
jle
jne
ja
push
test
out
orl
push
stc
or
pop
sub
cwtl
jbe
mov
xchg
int3
inc
outsb
mov
sub
mov
sahf
gs
cmp
out
rcrb
pop
adcl
pop
stos
inc
sbb
xchg
sub
mov
jnp
jno
inc
mov
add
and
xchg
cmp
div
ds
push
dec
sbb
popf
or
pop
push
pop
call
addr16
test
imul
sti
mov
ret
icebp
adc
add
ret
mov
cmpsl
push
push
xchg
cmp
stos
bound
xor
lret
popf
pop
pop
and
mov
rorb
enter
lret
mov
js
push
pop
mov
mov
xor
xchg
jb
xchg
mov
stos
test
out
dec
xchg
fisttpl
sub
inc
sahf
pop
sbb
push
in
mov
int
mov
insb
outsb
shl
test
inc
or
data16
mov
pop
shll
test
es
mov
cld
popf
mov
push
imul
jnp
or
cwtl
jmp
adc
dec
stc
outsb
adc
xchg
xchg
lcall
pop
rolb
mov
cmp
or
aas
iret
and
push
push
jg
lcall
js
cli
xchg
iret
inc
dec
sub
and
cmpsb
xchg
insb
dec
inc
and
add
add
or
popa
add
push
in
movsl
cmp
push
adc
loope
push
insb
cld
cmpsl
mov
mov
push
push
iret
mov
push
div
dec
mov
outsl
dec
nop
lods
aas
shlb
mov
lods
jl
mov
mov
pop
add
mov
and
aad
and
mov
fs
ret
mov
pop
lods
xor
dec
jno
shlb
add
inc
push
ds
sbbb
sbb
push
stos
shl
mov
fwait
test
je
aam
into
mov
aam
or
fisubrl
test
xchg
lock
outsb
jno
stc
ljmp
inc
mov
cmp
cwtl
es
sbbl
je
lods
or
lods
sbb
adc
inc
jo
push
jo
xlat
xor
sqrtps
popa
adc
in
cmp
and
cmp
es
mov
xchg
mov
je
je
fisttpl
mov
gs
arpl
cld
mov
ret
mov
push
ljmp
inc
push
in
and
pusha
jo
mov
popf
insb
jp
mov
jnp
cmp
or
fiadds
push
xor
pop
cld
out
cmc
inc
dec
loopne
loope
xchg
sahf
mov
sub
xor
mov
push
repz
push
or
aas
xor
push
sahf
pushw
insl
iret
mov
add
xor
in
enter
add
aam
sub
icebp
mov
lcall
out
cmc
push
and
mov
stc
add
fildll
std
adc
mov
stos
aas
inc
add
stos
fs
xchg
add
lret
nop
sub
mov
es
dec
into
jge
in
aad
mov
jmp
xor
xor
cmp
push
popw
push
jmp
out
mov
cmp
dec
das
dec
stos
inc
cs
bound
scas
jge
outsl
loop
sub
fucomi
outsb
out
pop
jae
lret
loope
ret
shrl
or
and
out
lea
sbb
mov
push
inc
jge
fmuls
mov
ss
jp
jmp
hlt
push
push
pop
pop
cmpsb
add
mov
daa
test
call
aad
pop
xlat
js
enter
and
mov
insl
xor
pop
in
std
fcmovnb
sub
xor
inc
sbb
cmp
sbb
adc
shlb
test
inc
add
scas
xor
je
mov
mov
aad
cmpsl
add
jmp
cs
addl
cli
push
dec
test
or
lret
mov
gs
subl
fidivrs
sahf
cmc
sti
dec
in
das
sub
leave
js
push
int
and
dec
cli
pop
js
test
pop
jae
insl
clc
aam
add
pop
out
stos
push
inc
inc
xlat
pop
push
sahf
nop
xor
inc
jg
jl
gs
in
jb
lret
sub
jns
in
inc
test
repnz
lds
push
pop
xchg
or
or
movsb
cli
rcrl
dec
push
mov
setge
pushf
in
test
frstor
push
cmp
xchg
xchg
adc
dec
lea
adc
mov
adc
sahf
repz
test
cwtl
loop
dec
sbb
inc
push
clc
cltd
sbb
pop
pop
mov
jb
mov
inc
mov
stos
lds
pop
cld
mov
je
cltd
enter
popf
sub
inc
dec
xor
sub
imul
push
je
jmp
in
in
mov
fiadds
imul
push
push
arpl
xchg
pop
inc
roll
in
cld
rorl
mov
lret
lret
movb
ja
jae
adc
jmp
push
or
fcmovnbe
test
sbb
cli
and
addr16
xor
call
insb
xchg
divps
mov
or
mov
inc
fcompl
call
mov
pushf
jle
pusha
add
inc
or
pop
mov
add
inc
scas
cs
test
and
data16
xor
cmp
jl
lret
popf
or
xchg
mov
imulb
mov
cs
add
out
aad
mov
test
and
adc
and
cmp
mov
adc
das
add
mov
add
mov
sbb
popf
inc
jnp
cmpsl
add
adc
sub
push
cld
ficomps
mov
mov
add
lods
aaa
mov
mov
push
and
flds
stos
test
call
cmpsl
jne
jmp
mov
les
insb
sbb
out
fnstcw
pop
or
lcall
fmuls
scas
arpl
mov
gs
add
sbb
in
jne
scas
pop
outsl
xor
ds
aam
imul
int3
cmp
xchg
cmpl
push
push
and
ret
out
and
loopne
jnp
mov
dec
cmp
jno
or
jbe
jmp
mov
pop
sub
inc
xor
or
inc
shlb
mov
push
xchg
out
and
mov
out
outsb
imul
ljmp
push
sbb
ret
ds
mov
cli
imul
dec
jge
mov
gs
cli
or
popa
jmp
int3
inc
test
dec
push
scas
adc
dec
test
movsb
outsl
add
ljmp
mov
lds
push
aaa
or
insb
mov
mov
addr16
dec
xor
es
and
mov
iret
inc
scas
out
xor
ja
add
into
sub
and
divb
ja
add
pop
jnp
push
loope
adc
adc
cld
mov
loope
mov
ja
aaa
jmp
test
jnp
add
xchg
ret
ss
in
jo
rcl
jb
scas
push
fsubrl
push
scas
cmpsl
mov
das
cltd
cmp
pop
idivl
add
jl
sub
cld
out
push
jnp
fmuls
and
loope
into
pop
mov
mov
adc
mov
sahf
mov
aam
fcomp
ds
shl
inc
in
mov
push
int3
push
lahf
cmpsl
push
sar
scas
adc
test
aad
jp
ja
add
and
ss
inc
sbb
fsubrl
dec
shll
dec
push
sub
fsubrs
subb
pop
loopew
in
sbb
pop
mov
push
jp
scas
cmpb
xor
add
sbb
add
out
icebp
pushf
xchg
push
cmpsl
movsl
xchg
pop
xchg
scas
mov
cmp
push
insb
xchg
cmp
add
or
jno
lret
cli
xchg
gs
xchg
or
dec
outsl
mov
sbb
cmp
inc
adc
cltd
push
out
dec
or
subb
lea
and
adc
fs
xor
fisubrl
dec
jle
cli
shlb
push
mov
imul
cmp
mov
or
pop
scas
pushf
inc
sub
or
es
lock
test
add
jnp
call
jecxz
inc
repz
in
loop
loop,pn
xor
push
shlb
iret
push
insb
and
stc
lret
push
jnp
clc
xchg
orb
decl
dec
push
loopne
xchg
pop
mov
or
cmp
add
pusha
loopne
hlt
je
mov
inc
jmp
ret
pop
adc
mov
cmp
fdivrs
push
jns
aad
call
cltd
fidivl
xchg
pop
xorb
sbb
ret
add
das
les
mov
xorl
fbld
int3
cltd
cmp
fwait
jbe
mov
mov
outsb
inc
outsb
mov
mov
sbb
cwtl
sub
dec
popa
movsl
and
movsb
cltd
in
pop
jne
cli
hlt
aas
jg
xlat
lret
mov
fadds
pop
mulb
sbb
mov
dec
popf
cwtl
negl
in
pop
mov
jl
xor
pop
cmpsl
dec
cltd
loopne
jge
sbb
mov
push
dec
xchg
xor
fbstp
movups
movsl
inc
fcomps
insb
pusha
xchg
dec
loopne
jl
loopne
cmc
sub
xor
mov
pop
add
xchg
lods
mov
mov
stos
outsb
sti
stos
dec
mov
jge
js
repz
xor
or
mov
lret
es
push
push
jbe
test
ljmp
out
and
cwtl
add
inc
xor
or
mov
cmc
mov
or
dec
adc
cli
pop
fistpl
dec
dec
adc
inc
adc
lods
test
and
xchg
sbb
das
fwait
push
movsb
std
inc
inc
fiadds
cmp
dec
push
push
adc
cmp
or
in
cmp
push
testl
pop
shll
sub
ds
inc
call
lea
popa
popa
lods
scas
in
inc
in
jno
push
xchg
cmc
pop
push
call
test
int
fstps
cmp
sub
scas
cs
sub
je
add
cmpb
xchg
call
int
and
dec
add
xchg
scas
jl
mov
into
inc
into
adcl
daa
cmpsb
dec
ds
pop
popf
and
test
cmpsl
inc
xchg
outsl
movb
or
xlat
and
push
addr16
adc
mov
mov
shl
insl
xchg
cltd
sahf
inc
popf
adc
lods
roll
mov
and
bts
add
xchg
mov
sbb
sbbl
add
in
mov
or
lret
add
mov
popf
testl
out
mov
outsl
dec
in
ds
jo
rcrl
test
adc
jle
imul
mov
scas
cmp
inc
lods
mov
les
sub
adc
lock
lods
scas
mov
and
jnp
pop
jb
fisttps
imul
mov
xor
add
std
mov
dec
loope
ficoms
mov
rcll
xchg
clc
movsb
and
in
sbb
movsb
je
inc
jg
cltd
xlat
fucom
fcomi
xchg
mov
mov
sub
gs
adcb
movsb
mov
ret
insb
cmpsb
ds
mov
mov
cmp
or
ljmp
lret
pop
ja
fisttpl
fdivrl
out
test
je
inc
adc
ljmp
dec
insb
cli
mov
fs
nop
in
jmp
cwtl
sti
int3
add
jmp
scas
adc
test
inc
fiadds
jl
and
add
movsl
ds
sbb
js
or
das
ror
xchg
and
pusha
clc
sti
popa
pop
or
in
xlat
loopne
mov
mov
jno
jecxz
les
add
test
cld
jl
pop
insl
and
xchg
inc
jle
or
ret
lea
dec
jge
xchg
mov
push
shr
cltd
jp
lahf
enter
fwait
ja
mov
decl
fstpt
jecxz
es
mov
add
jle
xor
imul
mov
mov
repnz
ss
outsl
push
sti
mov
jp
push
push
mov
or
cltd
sub
dec
pusha
fisttpl
imul
lods
insb
jne
cmp
es
xor
hlt
jb
push
inc
adc
xchg
push
lods
out
pop
push
mov
mov
jns
cli
dec
mov
add
out
shr
popa
and
in
xorb
mov
cli
adc
or
mov
pop
xchg
xchg
js
cli
mov
adc
mov
out
dec
mov
test
cmp
lock
fmuls
add
push
inc
cmp
mov
lcall
pop
imul
cli
test
jmp
or
xchg
icebp
test
sub
cli
sbb
mov
fwait
mov
jmp
add
or
push
jb
iret
repnz
outsb
icebp
push
int3
jo
mov
inc
sub
jnp
shll
push
fmull
cmpsl
inc
inc
xor
popf
xor
sub
mov
xchg
or
repz
mov
stos
jno
and
xchg
nop
or
xor
sub
sbb
sti
loope
add
into
push
arpl
dec
sub
mov
cmp
push
mov
mov
aaa
inc
and
lea
cmovns
sbb
and
xchg
sub
adc
cmp
xor
cmp
mov
or
dec
imul
mov
es
lock
pop
and
rcr
fwait
or
imull
loope
mov
hlt
movsl
cmp
popf
stos
jo
xor
add
pop
lock
jae
ds
test
push
push
out
and
rclb
in
cmp
add
xlat
jl
stos
int
sbb
popf
adc
push
mov
loopne
pop
xchg
push
or
lahf
insl
mov
jo
lahf
je
lock
dec
mov
push
lcall
in
mov
pop
ljmp
mov
ficompl
and
dec
ror
in
push
pusha
in
adc
add
cltd
sub
xchg
imul
jnp
movups
outsb
pop
fnstsw
xor
arpl
or
cmp
or
lea
arpl
and
and
xchg
dec
sub
push
dec
int
xor
imul
cltd
pop
cmp
jmp
clc
andb
daa
adc
xchg
pushf
dec
in
fs
incb
sbb
jg
or
arpl
je
jge
clc
fcmove
shl
nop
fcmove
cmp
adc
out
add
jne
mov
mov
mov
xorb
into
enter
stos
pushf
bound
mov
cmpl
mov
std
push
inc
test
aaa
xlat
mov
outsb
fbld
mov
les
rorb
popf
and
cmp
mov
outsb
insb
cwtl
jecxz
insl
and
push
adc
cltd
sar
leave
aaa
outsl
test
cmc
pop
fdivrs
insb
xchg
sub
adc
inc
push
jo
jb
add
or
dec
scas
lahf
xchg
filds
cld
rcr
inc
movsl
dec
sub
push
xchg
mov
ds
jnp
cwtl
push
mov
ret
addr16
push
aas
imul
bound
dec
jne
mov
push
fiadds
test
and
jo
mov
ret
leave
pop
add
lods
mov
pop
dec
adc
mov
dec
test
test
or
loopne
push
lods
lods
pop
dec
sub
sub
cmc
jb
aam
ret
cmp
stc
idiv
mov
and
cwtl
das
cmp
lods
scas
int3
in
or
pop
push
pop
lret
xchg
xor
mov
cmp
repnz
dec
jecxz
rcl
xor
cmpl
jp
jno
push
cmp
les
push
jl
sub
sub
les
addr16
jle
inc
stc
ret
push
adc
imul
fisttpl
add
iret
pop
jnp
daa
pop
and
daa
adc
out
pop
out
pop
data16
movsb
and
mov
inc
fsubp
out
addl
mov
sahf
pop
cmp
out
or
dec
enter
repz
fildll
sub
lds
fidivrl
fcomi
mov
enter
mov
xchg
or
clc
cmp
out
add
mov
pop
mov
push
sbb
inc
cmpsb
adc
xchg
xor
xchg
imul
mov
popl
sub
mov
sarl
jle
jp
cmp
loope
mov
std
mov
dec
aam
scas
test
fisttps
fbld
add
int3
add
test
push
insl
push
cmp
outsb
aam
push
xchg
enter
jb
lcall
inc
add
mov
scas
mov
clc
add
rcrb
sahf
loop
cmpsb
stos
int3
mov
jg
jl
popf
mov
std
inc
mov
xchg
cwtl
xchg
sub
fdivrl
shl
pop
sbb
jg
pop
jno
dec
cmp
lock
jle
rol
xor
xor
jp
and
jb
adc
out
lahf
addb
sahf
dec
mov
loopne
sbb
ret
dec
xor
mov
xchg
sbb
movsb
addr16
insl
xchg
adc
jbe
sahf
mov
inc
stos
ret
push
enter
or
xlat
cmpsl
lret
push
and
cmc
outsl
cmp
movsl
or
pop
inc
in
loope
icebp
es
lock
dec
clc
int
jbe
stos
filds
push
mov
mov
mov
popa
push
mov
xchg
inc
adc
das
add
dec
inc
sub
jno
lret
jno
ss
stos
cmc
fidivrs
mov
mov
jle
xchg
test
add
xchg
rcrb
sahf
ror
ja
mov
add
cmp
test
je
fwait
in
addr16
cmp
ret
in
cmp
notl
sahf
mov
imul
shll
or
sbb
comiss
mov
aad
sub
xor
and
adc
dec
lods
push
sbb
xchg
mov
testl
cmc
dec
movsb
enter
lods
std
leave
cmp
orl
mov
enter
pop
repz
cmc
sub
inc
bnd
inc
pop
inc
les
pusha
or
mov
jno
and
jnp
out
outsl
les
out
inc
mov
insb
or
push
push
jle
jnp
outsl
pop
cld
hlt
xor
xchg
mov
or
mov
addr16
mov
aam
lret
call
ret
arpl
mov
arpl
xorb
shr
mov
popf
jg
and
mov
push
adc
cmc
aaa
dec
add
outsl
iret
sub
cmp
xchg
mov
sub
push
mov
lods
pop
in
ret
shrl
sbb
stos
repnz
repz
loopne
mov
mov
out
fsubl
inc
je
sbb
aam
inc
mov
shr
rep
fldl
cmpsl
mov
pop
dec
and
call
mov
adc
in
push
adc
sbb
daa
repz
xchg
ret
sahf
btc
shrb
adc
lea
mov
pop
pop
popa
lcall
cmpsb
pop
sub
jae
test
push
cli
clc
cmp
dec
pop
aaa
popf
mov
sbb
xor
bound
push
or
jae
rclb
dec
clc
or
pop
or
or
mov
nop
or
mov
push
sbb
xorl
push
sbb
adc
jp
cmpsb
jns
imul
or
mov
repz
jmp
fldenv
jp
orb
fidivl
mov
int3
push
inc
pop
or
and
nop
test
sub
jns
sub
pushl
out
ss
push
pop
push
mov
mov
mov
cs
imul
leave
popa
cmpsl
dec
icebp
adc
dec
rcr
jne
lea
inc
out
mov
ret
jl
xchg
arpl
sub
jbe
sub
dec
ljmp
fistl
dec
ljmp
andb
add
cmp
movsb
incb
cltd
dec
insb
ret
fisttpl
out
push
imul
test
add
adc
stc
add
jo
stos
jmp
xchg
mov
pop
movsl
daa
add
inc
xor
popa
sbb
mov
sahf
arpl
jb
loopne
mov
fucomip
sti
scas
sub
xchg
xor
fidivrl
test
add
mov
add
icebp
popf
lods
and
loopne
iret
movsl
xchg
cwtl
mov
fisttpll
sti
mov
xchg
cltd
or
insl
or
insb
imul
mov
pop
insb
push
sub
test
jg
mov
lcall
lret
out
fs
dec
cmp
es
imull
sub
out
mov
repz
leave
cmp
sub
mov
pop
pop
imul
aam
sbb
into
xor
mov
jmp
cmc
int
push
insb
xor
mov
fstpt
scas
leave
xchg
mov
cli
dec
rol
addb
lret
insl
cld
fimuls
adc
lods
out
fldcw
xor
inc
mov
mov
jb
push
sub
addb
arpl
stc
and
add
add
push
nop
dec
sbb
adc
mov
rcll
cmpsl
outsl
inc
add
and
dec
xor
loope
sub
outsb
pop
stc
push
loope
test
aad
decb
in
sbb
rorb
imul
ljmp
cmp
int3
cli
stos
mov
daa
mov
push
lods
inc
pop
xor
insb
leave
ret
lcall
push
scas
xchg
add
lret
sub
adc
inc
pop
mov
cli
imull
and
sub
data16
mov
xor
adc
andb
xor
pop
cmp
pop
xlat
test
loopne
mov
rcrb
fiaddl
js
pop
jns
adc
ja
mov
test
sbb
jmp
cmpsl
cltd
xchg
and
fstps
outsb
mov
fbstp
in
inc
mov
mov
lods
mov
sub
fs
sarb
shr
pushf
sbb
inc
cmc
aad
add
jo
sub
addr16
ret
rolb
xor
mov
fcoms
jl
in
loopne
repz
pop
mov
inc
inc
sub
outsb
test
js
adc
outsl
repnz
cltd
mov
add
sbb
xchg
pop
enter
mov
adc
in
sti
lea
in
dec
jge
flds
inc
loope
pop
imul
popa
scas
test
ret
movsb
lcall
push
jg
jg
sub
push
mov
out
dec
addl
std
or
jo
mov
scas
int
xor
leave
shlb
sub
fsubl
xchg
dec
push
mov
dec
adc
or
movsb
push
push
mov
pop
neg
mov
sarl
mov
mov
ss
mov
insb
jecxz
ljmp
loope
insl
mov
or
enter
push
lahf
push
mov
pop
mov
in
inc
int
daa
loop
in
rorl
in
inc
push
sti
test
and
cmp
cmp
mov
adc
dec
rolb
mov
test
les
adc
inc
xchg
outsl
jmp
inc
jae
aad
out
dec
fsubl
inc
add
iret
sbb
push
mov
adc
mov
loop
inc
out
adc
rolb
mov
and
cld
adc
test
adc
imul
jl
ret
test
fcom
aam
mov
xchg
mov
push
stos
pop
dec
adc
jg
test
jne
adc
icebp
subl
mov
enter
pop
fcomip
xchg
push
es
push
fstpt
sbb
je
cli
ljmp
mov
mov
frstor
jecxz
dec
paddw
cmp
push
loop
push
fcmovbe
popa
lock
testl
addb
popf
enter
int3
mov
mov
pop
clc
push
cwtl
into
rol
rclb
cmpsl
jns
mov
aad
dec
jno
icebp
mov
lock
lret
hlt
xlat
cmp
adc
adc
sbb
adc
fidivl
jns
xor
mov
adc
sti
jbe
push
push
push
sar
das
mov
bound
push
mov
ja
jnp
sub
incl
inc
add
mov
xchg
xlat
lret
mov
dec
roll
adc
sarb
divb
jp
shlb
lods
jno
enter
and
popf
adc
cmp
and
mov
or
sub
shrb
std
aad
inc
cmp
cli
add
lret
out
and
dec
jo
xchg
inc
scas
xchg
in
faddp
jbe
sub
cmp
push
rolb
adc
cmp
and
dec
xchg
xchg
ja
xor
or
pop
pop
icebp
movsl
sbb
sar
rcr
fadd
pop
sahf
and
inc
rorl
loopne
in
sub
scas
aad
lods
shll
int
inc
fdivr
daa
mov
mov
jns
fnstenv
imul
xchg
xchg
mov
pop
pop
movsb
add
add
scas
mov
mov
ret
adc
adc
and
pop
cltd
insb
mov
rorl
lods
test
mov
loope
daa
dec
push
adc
or
lret
mov
fiaddl
lret
popf
pusha
imul
pushf
sub
mov
or
imul
into
lret
and
or
pop
or
xchg
fbld
adc
cmp
xchg
nop
popa
or
mov
cmp
mov
fdivr
loopne
inc
jns
inc
repz
jge
push
adc
sub
push
imul
rolb
ljmp
add
cmp
lahf
add
in
ret
les
dec
add
and
dec
mov
gs
adc
adc
jecxz
rcrb
in
es
lcall
arpl
pop
sar
add
push
pop
lcall
cwtl
cs
test
idivb
adc
imul
adc
std
rorl
into
sarb
or
or
cmpsl
in
inc
push
subb
in
mov
sahf
jb
lock
faddl
fsts
cmpsl
movsl
mov
sbb
xchg
cmpsl
arpl
pop
cmp
pop
in
add
push
push
popa
in
cld
mov
out
or
mov
push
jnp
mov
aas
lret
rcll
pop
adc
repz
out
stc
cltd
imul
movsb
inc
mov
inc
push
loop
clc
pop
push
movl
pop
aad
out
inc
and
enter
mov
in
stos
inc
xchg
out
xor
test
mov
xchg
cmp
test
adc
call
cmpsl
mov
push
pushf
push
mov
jnp
jbe
jg
inc
and
int3
std
rcll
out
call
jge
cs
hlt
test
jecxz
mov
pop
mov
push
fnstenv
fs
jp
test
aaa
adc
and
rolb
inc
push
rorb
push
repz
sub
xor
sbb
add
fisubs
push
xor
cs
shlb
stc
loope
or
push
mov
lret
mov
sub
bound
cmc
fiadds
insl
lds
adc
popa
add
mov
call
add
mov
xchg
daa
ret
xchg
outsb
sti
lcall
mov
iret
fadds
dec
out
dec
sub
cltd
out
mov
pop
cmpsl
lret
pop
pop
mov
mov
and
cli
and
fwait
xchg
inc
addr16
fcomps
fildll
mov
gs
sbb
mov
sbb
icebp
mov
cmp
pop
push
popa
jge
sti
pop
xchg
pop
test
adc
stos
cmp
popf
sub
jnp
rcrl
testl
nop
jmp
xor
push
jle
pop
mov
cmpsl
xchg
xchg
and
add
push
mov
or
push
mov
sub
sbb
jae
pop
cltd
sub
and
test
dec
or
cmp
mov
iret
dec
cmp
dec
scas
push
dec
xchg
push
xor
inc
aas
sub
mov
pop
mov
dec
int3
or
xchg
cmp
cmpsl
in
fdiv
testb
inc
mov
sbb
imul
pop
push
jns
insb
add
add
mov
mov
or
sub
push
xchg
cmp
stos
jmp
cmp
cld
mov
mov
dec
pop
scas
or
in
jg
fmuls
ja
test
inc
pop
outsl
xchg
adc
dec
inc
mov
jae
and
pop
mov
mulb
lret
cs
mov
mov
insb
movsb
ss
dec
mov
ret
cwtl
mov
cld
mov
fldt
cmp
jae
cltd
into
cmp
rcll
popf
adc
mov
push
pop
xchg
jne
jl
or
mov
cmp
int3
arpl
push
enter
lods
cli
fdivrs
stc
pop
sub
sbb
repnz
sub
inc
add
ret
jb
test
xchg
inc
loope
pushf
inc
lea
push
pusha
cmp
jle
aas
jmp
aam
in
mov
xchg
icebp
inc
mov
xchg
push
stos
xor
push
jno
fadds
popf
mov
inc
mov
and
dec
pop
ja
dec
hlt
mov
jne
sub
pop
xchg
fwait
jno
sbb
fistps
data16
cltd
jno
inc
lahf
inc
add
and
or
rclb
inc
ss
outsl
les
iret
stos
mov
lds
dec
das
push
dec
mov
mov
or
xor
test
mov
in
pop
in
push
jmp
jbe
jo
inc
imul
jae
cmpsl
pop
push
xchg
xor
outsl
shrb
lods
test
jnp
mov
in
rcrb
mov
cmc
ret
push
pop
lods
jmp
adc
push
filds
sahf
jg
adc
jge
mov
dec
or
daa
test
cmpsl
add
rolb
push
rorb
cmpsb
mov
mov
and
sbb
jb
xchg
bound
and
jecxz
enter
dec
add
pop
in
lods
fisubrs
fnstcw
cmp
xchg
fidivl
bnd
push
aad
ret
sti
mov
mov
stc
gs
mov
pop
push
push
push
or
or
fdivs
mov
popf
in
popa
sbb
fldenv
jecxz
ljmp
addr16
clc
sub
lds
subl
bound
mov
cmp
push
sbb
stos
aad
mov
rclb
test
aaa
clc
fcomps
dec
cmp
sbb
mov
ficomps
test
sub
negl
cmp
subl
sub
fs
mov
movsl
sbb
repnz
out
and
push
gs
adc
mov
inc
pop
dec
scas
push
xor
in
out
cmp
mov
sub
pop
sub
sahf
cld
or
xor
xor
popa
xor
inc
xor
les
pop
inc
fldt
inc
xchg
xor
add
or
sub
stc
lds
push
cmp
std
out
pop
and
pop
push
cmc
orb
imul
jge
cmp
sti
push
ret
push
or
mov
jecxz
test
enter
leave
push
stc
and
cld
call
xor
dec
jo
push
sbb
fsub
mov
mov
xchg
mov
mov
in
ljmp
mov
push
sub
sbb
sub
call
fdivrs
movsl
adc
test
subl
jmp
cmp
adc
scas
fisubrs
je
adc
push
adc
mov
sbb
idivl
sbb
xchg
sbb
jno
inc
pop
mov
xor
loope
hlt
shrl
lea
mov
ror
sbb
xchg
std
scas
ret
xor
or
pop
jne
inc
xchg
xchg
pop
add
adc
mov
es
sbb
adc
out
mov
dec
lods
dec
lahf
test
out
into
jnp
sub
in
sbb
xchg
mov
clc
mov
ftst
pslld
insl
aad
mov
and
inc
aas
fdivp
aas
jp
cwtl
cmp
sbb
push
fst
leave
or
or
push
lcall
shll
inc
adc
outsl
xor
or
xor
push
popa
aam
jo
push
ret
lcall
outsb
lea
xor
nop
mov
mov
out
fimuls
cmp
enter
insl
push
fdivp
xor
mov
and
pusha
add
mov
pop
cmp
push
in
cmpsl
add
mov
inc
ds
push
inc
add
pop
dec
stos
xchg
push
pop
in
jle
ja
add
sbb
ljmp
cld
mov
sti
ret
out
add
lds
xor
movsl
inc
and
repnz
in
mov
test
cltd
or
test
stos
cld
jl
jae
cmp
add
nop
mov
xbegin
mov
hlt
xor
dec
in
xlat
xorb
sbb
sbb
sbb
xchg
loop
sbb
test
xor
fnstenv
push
fisubrl
pop
mov
mov
mov
stos
push
rcrw
outsb
xor
cmp
insb
test
outsb
xchg
aas
stc
mov
xor
fs
inc
sbb
in
shrl
mov
xchg
rcrb
sub
cmc
repz
sti
stos
or
cld
xor
push
js
cld
pop
mov
adc
add
enter
ds
sti
mov
push
ja
repnz
cmp
sahf
mov
push
xor
call
ja
les
pop
in
ficoms
test
jne
sub
jmp
xchg
sub
pop
cmp
cmc
not
aad
arpl
sarl
rorl
out
adc
add
add
add
mov
mov
nop
mov
aaa
pop
pop
jg
mov
sub
push
in
ret
dec
shll
push
pop
in
stos
adc
je
or
aas
dec
fimull
shlb
in
mov
das
jl
and
push
lea
xchg
cld
mov
int3
dec
lcall
cmp
andl
xchg
in
imul
jo
aad
mov
mov
push
mov
jno
sbb
in
jp
xchg
adc
cmp
lods
add
arpl
in
dec
repz
xor
jae
sub
pop
inc
clc
js
mov
push
outsl
mov
cmp
shl
or
cmpsb
jo
dec
push
adc
push
mov
mov
and
xchg
mov
rcll
aam
inc
cli
adc
pop
aaa
mov
sbb
push
pop
push
outsl
dec
inc
xorl
and
int
jbe
or
std
lret
cmp
test
ljmp
lea
sbb
xor
jns
and
inc
popl
rol
sub
stc
pusha
ljmp
movsl
cld
daa
ret
sub
jno
and
iret
xor
sub
xor
call
or
and
dec
and
sbb
ss
adc
xor
mov
mov
xor
notl
sahf
movsl
push
sbb
jne
pop
xlat
not
test
jl
mov
and
out
xor
adc
aaa
jns
sbb
xchg
mov
push
repnz
imull
shlb
push
rcrl
fwait
or
in
or
xchg
add
push
mov
fcom
daa
repnz
fdivl
lret
push
mov
xlat
test
lret
test
xor
jns
in
rorl
enter
xchg
mov
mov
or
sbbl
jns
dec
jmp
aas
lods
jle
mov
clc
xor
push
aad
and
loope
pop
mov
adc
loopne
lcall
cmp
pop
sub
mov
rorb
std
inc
jp
mov
sbbb
add
push
scas
bound
call
cmpsl
ja
pop
sahf
mov
push
lods
popa
bswap
inc
les
popf
adc
xor
inc
inc
or
lods
sar
lock
push
push
lock
outsb
sbb
jne
jp
out
pop
add
stc
stc
pop
popf
add
shrl
lods
pop
test
or
xor
cmp
ds
cli
jbe
pavgb
je
dec
cmc
xchg
rorb
out
fs
in
or
cwtl
fistpll
je
lds
and
lods
xchg
jno
pusha
sbb
pop
imul
inc
js
mov
lea
xchg
mov
lahf
repnz
pmulhuw
ss
mov
rcll
xlat
or
jl
xchg
inc
lahf
data16
out
xor
aas
decl
fsubs
sub
xor
andl
rclb
idivb
cmp
fucomi
mov
mov
clc
insb
test
xor
mov
sub
lods
fstps
lock
lock
andl
add
cmp
scas
je
mov
inc
cmp
inc
mov
pop
jns
pop
mov
int
adc
mov
dec
mov
nop
sbb
icebp
mov
icebp
xchg
fisubrs
pusha
pop
std
or
pushf
xor
ficoms
mov
jnp
pop
nop
or
jecxz
outsb
jp
jle
push
cmp
test
adc
loope
mov
pushf
jnp
or
mov
push
aaa
cmp
stos
ret
cmp
pushf
push
xor
pop
mov
xchg
cmp
sbb
imul
stc
mov
lret
nop
lea
pop
mov
gs
pop
stos
rorl
xchg
sbb
ret
push
xchg
cmp
test
mov
xor
roll
shrb
cmp
loop
fcoms
lret
call
rcll
lret
negb
jge
mov
xchg
fisttpll
mov
add
addr16
ja
lea
popf
xchg
xchg
jecxz
out
jb
pop
loope
fwait
clc
testb
dec
out
sbb
or
sbb
lock
adc
sahf
into
mov
in
add
jle
xchg
sbb
insl
fcmovne
push
int
repnz
xchg
clc
mull
outsl
adc
pop
sahf
xchg
sbb
dec
sbb
fistpll
outsb
jecxz
xchg
mov
cmpsl
or
clc
mov
or
bound
dec
in
imul
std
out
lret
scas
adc
and
jae
mov
and
inc
dec
mov
notl
es
roll
bound
dec
add
adc
loop
adcl
push
inc
lds
mov
or
mov
les
addl
xchg
xchg
push
sbb
outsl
jbe
dec
fwait
pop
xchg
aad
inc
sub
outsl
or
lret
jb
popf
cmp
sub
loope
clc
repnz
xchg
sbb
pusha
mov
outsl
add
rorl
jle
enter
dec
insl
xor
xchg
stos
pop
fists
xchg
jo
dec
cmp
push
jb
in
fucomi
cmp
cltd
and
mov
push
inc
mov
or
mulb
pushl
aas
lret
xor
adc
std
outsb
nop
rcrl
stc
bound
stos
leave
bound
into
mov
mov
loope
mov
pop
fs
mov
fsubrs
mov
dec
sbb
inc
dec
adc
loope
sahf
leave
xor
cwtl
and
push
xchg
mov
jbe
in
fstpt
xchg
push
jp
pushf
cld
imul
insb
jne
xor
shlb
movsb
hlt
jbe
mov
leave
ficomps
sbb
cmpsl
or
in
xor
push
loope
xchg
xor
jae
sti
jbe
mov
or
mov
rcll
add
lods
mov
je
mov
lret
clc
mov
inc
rcr
daa
push
or
inc
xor
mov
mov
dec
cwtl
jns
dec
and
je
testb
test
cmp
scas
imul
adc
addb
test
inc
out
imul
ficoml
xchg
data16
inc
jne
ret
sbb
ret
push
adc
mov
imul
dec
mov
sub
mov
cmp
test
into
pop
pop
int
jge
mov
fldt
mov
push
cld
push
mov
jp
push
inc
and
sbb
sahf
jbe
cmp
fadds
pop
jo
dec
sbb
in
and
jae
mov
movsl
cwtl
repnz
sub
mov
jae
sbb
in
mov
lds
movsl
dec
out
ja
mov
aad
adc
push
and
sub
dec
aam
jecxz
inc
sub
xchg
add
xchg
xchg
push
and
add
inc
xchg
dec
cmpsb
push
shrb
or
pop
dec
outsl
inc
jg
sub
jno
or
in
cmp
jl
pop
ljmp
sahf
repz
rcl
mov
mov
or
repz
popa
scas
pop
jo
daa
or
inc
mov
ds
jnp
es
xlat
or
and
or
loop
xchg
insb
mov
mov
or
into
xchg
loop
xor
xchg
adc
push
jns
mov
sub
pop
inc
mov
mov
aas
mov
inc
mov
sub
jae
mov
cltd
addr16
lods
xor
adc
pop
popf
lods
outsl
xchg
inc
xchg
mov
notl
cmpsl
lds
inc
in
mov
jg
cmp
lds
scas
cmp
push
add
cmp
in
lods
adc
rcl
pop
inc
scas
cmp
push
lret
jnp
adc
outsb
sahf
aaa
loope
add
dec
fsubrp
mov
rorb
mov
jae
adc
mov
jg
or
filds
push
movsb
xchg
or
push
mov
and
dec
pop
xor
xchg
inc
pusha
in
mov
movsl
mov
xchg
cli
movsb
mov
add
popf
mov
sbb
mov
pop
enter
mov
inc
aam
cmp
dec
adc
xchg
into
xorl
xlat
rolb
lret
std
pop
mov
arpl
inc
aaa
fsub
push
cmp
out
in
fistpl
mov
movsb
xor
dec
fists
call
add
test
cmp
add
in
int
out
mov
adc
fsubp
push
rcrl
cmpsl
ljmp
dec
adc
jge
xchg
sbb
pop
hlt
adc
mov
aam
notl
push
fmul
jne
sbb
cmpsl
das
frstor
jmp
xor
or
xchg
jge
add
sahf
or
jmp
mov
push
adc
js
scas
jge
push
xchg
push
push
fsubrp
mov
nop
xor
xchg
sbb
push
push
add
mov
xchg
xchg
push
lcall
sbb
in
sti
inc
add
icebp
mov
scas
gs
inc
adc
xor
push
rorb
loopne
pop
add
xor
cmc
cmp
insb
mov
jle
in
add
lahf
shll
movsb
std
sbb
subl
lret
mov
mov
shll
testl
and
push
aam
xchg
inc
div
mov
inc
insb
adcb
rolb
mov
mov
cmc
add
add
lods
call
sbb
por
movsb
mov
test
in
inc
dec
push
jl
or
or
scas
fsubrl
push
pop
jecxz
cld
fcmovbe
or
xor
rorl
out
and
mov
mov
add
jg
pop
dec
pop
ret
xchg
add
test
add
lods
movsl
dec
cld
adc
testb
or
outsl
push
sub
into
mov
enter
mov
xchg
mov
pop
out
mov
or
jae
pushf
sub
adc
push
and
xor
xor
scas
pop
push
in
jmp
dec
movsb
xchg
xchg
push
lret
cmp
xchg
pop
shrb
nop
in
xor
push
call
jno
popa
enter
mov
inc
inc
lret
into
push
in
test
imul
setnp
mov
jno
add
negb
jp
add
add
push
test
jmp
sub
mov
addr16
mov
mov
mov
sbb
dec
mov
stos
xchg
jns
fwait
or
or
inc
and
iret
add
cmp
xchg
or
push
mov
outsb
pop
inc
mov
jns
xchg
xor
xchg
lods
adc
sbb
dec
add
push
loop
xor
inc
andb
pop
push
xlat
repnz
sub
xchg
out
mov
mov
iret
ljmp
dec
dec
jle
xchg
das
int
mov
ss
and
mov
ffreep
pop
adc
imul
adc
and
mov
inc
dec
lods
xlat
push
dec
mulb
adc
mov
mov
dec
xor
pop
mov
mov
fldcw
dec
jge
in
sub
outsl
jno
add
xchg
pop
and
ljmp
mov
adc
push
inc
push
rclb
daa
mov
add
sbb
lea
enter
add
or
jb
jmp
sbb
cmp
lods
sti
insb
push
test
pop
inc
sbb
data16
lods
add
cmpsb
leave
dec
loop
jp
xor
fdiv
nop
rol
fisubs
xchg
aaa
dec
cmp
aam
fldcw
pop
push
dec
movsb
cmpsb
mov
jae
ja
push
rcrb
mov
lods
and
adc
mov
push
jecxz
xor
shlb
ret
decb
inc
jg
test
scas
cmp
or
in
dec
xlat
loop
fucom
addl
jns
push
insl
ret
pop
jb
fwait
int
sbb
andl
push
or
mov
add
nop
jp
add
add
push
xor
maxps
shlb
mov
movsl
ljmp
jg
dec
jbe
jbe
mov
pop
cmp
ljmp
push
sbb
loopne
sub
inc
jne
mov
pop
adcb
jae
push
bound
mov
dec
aas
cmpsb
aas
imul
mov
out
orl
inc
dec
adc
mov
cltd
insl
ja
mov
sbb
ret
or
cwtl
insl
mov
mov
aam
fistpl
jae
pop
test
dec
jnp
dec
stos
rcrl
mov
jecxz
push
xchg
mov
xorb
jo
and
jmp
loop
xchg
aaa
adc
xchg
in
loope
nop
adc
call
xchg
imul
aad
mov
pop
popa
mov
jo
call
test
jge
ds
inc
addl
jg
push
les
push
inc
mov
orl
or
in
jecxz
das
mov
xchg
and
xor
pop
shll
adc
rcl
jl
or
mov
dec
jnp
inc
or
sbb
mov
pushf
inc
scas
ja
xor
xchg
mov
xlat
add
outsb
clc
vmread
loop
dec
cltd
or
mov
test
sub
jnp
icebp
ja
sbb
stos
adc
jnp
mov
push
scas
out
lahf
lcall
xchg
fdivl
xchg
xchg
dec
inc
xor
mov
sub
pushf
push
pop
cmp
int3
jne
jb
mov
lret
xchg
in
stos
mov
xor
inc
mov
cmp
data16
fs
nop
sbb
cs
bound
pop
xchg
lods
loop
jne
pop
ljmp
pop
pop
andl
or
xchg
cwtl
fstl
cmp
dec
pop
call
sbb
lahf
lret
fildll
mov
mov
scas
inc
aaa
cmp
incl
cmp
xchg
mov
push
jno
push
mov
pop
loopne
aad
dec
mov
cs
adc
jmp
add
jg
xchg
outsb
or
jle
lods
daa
or
jbe
lea
pop
sbb
movsb
cmp
mov
pop
pop
inc
adc
subb
lock
sti
fnsave
ljmp
retw
lret
outsb
cmp
nop
stc
inc
xchg
pop
add
push
sti
pop
sub
sarb
shrl
scas
divb
sub
mov
sub
dec
les
out
jge
iret
and
jne
adc
xchg
push
cmpsb
sti
inc
inc
sub
std
fnsave
inc
into
mov
stos
jns
sub
movsb
test
bound
std
stos
ret
cmp
mov
mov
adc
and
test
es
mov
cmp
cmp
inc
mov
ds
insb
and
or
ljmp
inc
jns
ret
fs
aam
jp
push
inc
mov
jle
repnz
add
jnp
mov
les
sub
and
adc
shlb
stos
lret
cli
adc
arpl
xchg
movl
add
cmpsl
push
mov
sarl
int3
sbbb
dec
mov
pop
mov
jl
sub
je
repnz
push
sti
dec
jb
cmc
cwtl
add
lcall
or
mov
mov
test
pushf
loope
add
sbb
imul
shll
fidivrl
mov
mov
cltd
lds
shl
movsl
add
repnz
shrb
int
xchg
lret
inc
imul
hlt
jo
add
js
xchg
gs
movsl
cli
cmp
xchg
lahf
xchg
insl
adc
arpl
rcrb
sub
fdiv
fs
pop
testl
sbb
pop
add
mov
add
jo
leave
inc
in
mov
lds
dec
jecxz
mov
inc
int
mov
in
sbb
lret
imul
mov
inc
cmc
mov
add
loopne
cmc
mov
ljmp
stc
mov
nop
xchg
push
mov
sahf
cmpsl
push
fcomip
mov
clc
adc
lahf
mov
loopne
or
xchg
repnz
jp
xlat
adc
in
or
or
stos
imul
mov
adc
push
out
int
add
mov
test
add
ja
add
add
shl
pop
xor
add
fisttps
or
push
pop
mov
cmp
cs
xor
jg
into
cmp
cld
cmp
fs
pop
mov
movsb
xor
add
jne
cmp
pop
aad
ret
fldcw
push
aas
aas
outsb
psadbw
inc
mov
push
repnz
idivb
sbb
pusha
adc
lret
inc
cmp
loop
inc
and
jg
test
jno
fs
in
adcb
sbb
or
or
sbb
and
xchg
adcb
mov
js
jb
add
mov
xlat
mov
mov
mov
ret
sbb
pop
in
hlt
shr
loopne
add
pop
xor
sbb
mov
push
fimuls
cld
lods
int3
iret
dec
daa
push
pop
sub
shr
aad
or
xchg
push
lahf
cwtl
sub
cld
nop
or
dec
and
fbstp
test
mov
dec
cwtl
insb
push
adc
je
loop
push
dec
pop
clc
pop
imull
adc
mov
ret
sbbl
out
scas
sub
cld
push
js
jns
pusha
lds
mov
sbb
push
sub
cld
mov
lcall
xor
xor
mov
jo
jge
fsubl
jp
xor
pop
scas
fistpll
mov
movsb
mov
xor
out
inc
arpl
aad
xor
push
cmp
pushf
cmp
dec
ja
in
in
lcall
rcll
shl
mov
xor
sar
out
movsb
sub
fnstcw
add
mov
js
outsb
adc
cmp
or
sti
nop
pop
fisttpl
add
frstor
adc
das
mov
cltd
test
jge
mov
mov
add
fstpt
or
adc
inc
push
repz
mov
jo
cli
loope
xchg
shlb
in
inc
loopne
push
movsl
pop
imul
mov
push
pop
sbb
xlat
sbb
add
mov
adc
xor
rcrl
lret
out
incl
mov
ret
sbb
lds
sbb
fchs
fldenv
enter
sbbl
inc
dec
subb
and
fidivrs
fisubrs
bnd
jmp
pop
and
jp
sub
outsl
in
bound
jg
icebp
mov
jo
or
push
stc
and
fildll
mov
fcmovb
inc
repz
subl
sti
jb
shrl
mov
cmp
mov
js
dec
movsb
aaa
out
hlt
loopne
push
xor
or
add
sbb
loope
xorb
imul
add
stos
add
jb
pop
int3
mov
std
aaa
or
jmp
fwait
orb
test
mov
sub
jle
jmp
insl
xchg
push
cld
cmc
cmp
dec
int3
insb
stc
dec
jne
ljmp
jp
mov
mul
xchg
cld
iret
jle
jl
push
imul
xor
into
enter
cmp
stc
out
jnp
mov
daa
push
mov
xlat
xorl
or
lret
scas
nop
xor
pop
sti
push
test
xor
pop
mov
or
pop
imul
cmc
loope
xor
xchg
rcl
jns
jne
insb
outsb
call
movsb
repz
sbb
dec
xchg
mov
add
adc
andb
sarb
cmp
mov
movsl
addb
mov
incb
vmread
in
dec
jl
pop
adc
out
fisubrs
pop
inc
adc
pop
mov
jae
mov
pop
test
popa
mov
mov
sbb
cmp
stos
push
je
fnstcw
insb
xlat
ss
leave
xchg
push
pop
mov
cmpsl
lods
and
jno
inc
add
sbb
aam
push
mov
sub
cmpsl
popa
adc
sbb
fisubrl
stc
aam
lods
fs
sbb
xor
push
push
rorl
mov
adc
push
mov
pop
cltd
insb
adc
imul
imul
das
jns
pop
xchg
call
mov
mov
aam
shlb
xchg
pop
pop
xchg
test
pop
out
mov
sub
jle
repz
lods
mov
pop
mov
xchg
lds
test
pushf
roll
scas
outsl
push
pop
jge
push
lock
loop
shll
ds
fs
fs
out
aaa
mov
cld
scas
es
pop
pop
stos
sbb
ja
and
pop
dec
pop
lret
adc
sti
sbb
jne
push
adc
movsl
clc
pop
pop
adc
pop
leave
ficoml
fisubrl
outsb
ja
jmp
xor
xor
test
addl
cwtl
ja
or
or
mov
mov
movsb
adc
mov
xor
cmp
cmp
mov
jno
push
jnp
sbb
repnz
xchg
pop
cmp
add
std
inc
jno
push
fldl
cwtl
std
add
ficomps
push
fisubrs
push
js
arpl
add
div
addb
lods
jle
dec
lea
mov
in
cmp
pop
outsl
xor
lods
mov
movsl
sub
and
aam
pop
xlat
xlat
jno
cltd
mov
lea
mov
push
in
gs
sti
adc
lret
das
xor
fxam
ss
xchg
adcb
andb
movsl
in
inc
cs
insl
ret
je
hlt
jnp
sahf
mov
jle
mov
das
inc
popf
sub
call
dec
int3
popf
cmp
dec
push
mov
icebp
pop
sub
into
xor
add
mov
add
jnp
pop
or
jmp
mov
cltd
or
jnp
notl
pop
fstl
sbb
push
cmp
sbb
dec
push
sub
enter
ror
or
imul
sub
daa
gs
insb
repnz
or
aam
loop
inc
fsubrl
cmp
add
pushf
xchg
sub
mov
idivb
mov
xchg
jb
dec
pop
mov
inc
lods
mov
jg
pop
dec
mov
int3
mov
in
cmp
xor
dec
inc
inc
iret
and
fcompl
faddl
insl
xchg
std
cwtl
sub
pop
ret
mov
jecxz
sbb
adc
mov
ret
mov
cld
dec
and
sub
sbb
cmp
and
sar
ja
js
pop
aam
popf
iret
and
inc
mov
in
iret
in
pop
sub
mov
sbb
cli
ja
sbb
or
out
scas
add
sub
push
sbb
xchg
xlat
xlat
fimuls
xor
rcr
xor
test
inc
jns
push
inc
mov
jnp
shr
inc
dec
test
mov
aaa
adc
cmpsl
stc
cmc
ficomps
or
mov
and
mov
inc
aaa
ficoml
mov
fstpl
std
push
scas
sbb
push
pop
hlt
mov
pop
add
out
insl
insl
leave
mov
xchg
and
jle
in
and
dec
sbb
and
cmp
pop
pop
pop
pop
movsb
repnz
mov
hlt
add
fistpll
cmpb
mov
adc
inc
cmpb
imul
mov
sbb
dec
xchg
mov
push
push
push
push
and
xor
push
and
lea
nop
cmp
xchg
inc
fldcw
je
ret
outsb
in
mov
mov
int
adc
push
loop
cmpsl
jns
enter
jae
rcll
cmpsb
sahf
fstl
jge
mov
adc
pop
push
sbb
aas
test
into
imul
gs
mov
aas
sub
and
inc
adc
fidivs
lcall
push
rorl
push
push
push
std
ret
out
pop
ret
sbb
and
cmp
pop
pop
cmp
cmpsb
loopne
and
dec
mov
ret
mov
push
sub
int
out
aam
inc
stos
or
arpl
scas
xor
cmpsb
and
cs
mov
cmp
push
mov
popa
pop
or
xor
jle
cmp
jmp
cmp
out
mov
push
popa
test
dec
leave
push
pop
sete
inc
adc
inc
lret
ficoms
negb
push
mov
addr16
push
mov
xor
pop
mov
test
dec
jp
cwtl
pop
push
push
push
dec
lret
pop
jle
loop
ficoms
sbb
pop
loopne
sub
mov
or
adc
push
out
inc
ret
jne
fdiv
sbb
inc
sahf
fdivrs
mov
into
mov
sahf
xchg
enter
or
mov
push
mov
retw
out
jp
push
fisttpl
mov
mov
push
out
inc
aaa
mov
outsb
subl
pop
xchg
lods
dec
or
imul
incb
dec
pop
ljmp
adc
out
cmp
cmp
fsubl
adc
add
or
imul
int
push
push
adc
movsl
movsl
push
in
dec
movsl
mull
mov
insb
fisubrs
jmp
add
mov
adc
or
jmp
push
adcb
xchg
jb
dec
sub
nop
pop
dec
test
add
nop
daa
push
sbb
mov
test
aaa
push
frstor
cmp
imul
xchg
dec
ret
cmp
fiadds
and
inc
pop
data16
adc
sbb
hlt
test
adc
iret
xor
add
push
or
xchg
lret
insl
pop
loop
pop
sub
jnp
pop
jge
test
add
pop
mov
insb
add
hlt
cmpsl
mov
loop
mov
jp
mov
mov
movsl
nop
ret
xchg
pop
out
repnz
clc
xor
cmpsb
iret
sub
mov
in
cmpsl
repz
inc
jmp
stc
jo
ljmp
scas
in
pop
bound
dec
and
nop
xchg
jnp
ret
jne
pop
cmc
stos
push
fwait
scas
inc
adc
insl
mov
and
pop
mov
push
mov
loopne
cs
push
push
add
enter
rol
stc
lret
icebp
mov
mov
mov
fimuls
mov
mov
in
push
imul
and
popa
mov
jg
push
xchg
test
adc
gs
int
add
mov
add
ja
jb
mov
add
cmpsl
mov
inc
push
mov
ja
das
das
subb
xlat
jmp
jae
mov
jbe
cmpsl
jb
xor
jo
loope
aas
add
in
sahf
fcompl
pop
int
pop
mov
add
mov
add
andb
or
dec
adc
mov
test
xchg
inc
aas
jecxz
and
and
in
xor
mov
fdivl
into
xlat
ljmp
ret
inc
add
push
push
mov
je
sub
jb
cs
adc
shll
sbb
jg
lcall
inc
mov
lret
jecxz
jecxz
add
or
sub
inc
or
std
int
or
imul
mov
aad
pop
movl
js
sub
adc
inc
stos
mov
cltd
lea
bound
dec
mov
out
dec
cmpsl
int3
dec
xchg
xchg
je
clc
mov
int3
pop
in
movb
aas
xchg
repz
jno
pop
call
adc
shr
jmp
bound
push
adc
adc
clc
popf
out
std
sti
inc
sbb
arpl
jne
jnp
data16
push
clc
inc
cs
sahf
add
sbb
mov
or
adc
and
jmp
jl
dec
out
cs
sbb
sti
or
lret
jmp
jge
lds
push
push
fcoml
pop
mov
push
test
scas
mov
pusha
leave
jecxz
ds
pop
sbb
es
mov
clc
lea
jg
xchg
inc
stos
lods
lods
push
addb
outsl
xor
mov
stos
ficoml
aad
gs
pusha
xor
push
or
cmp
ss
test
roll
mov
or
stos
add
shl
and
cmp
dec
mov
jns
adc
dec
ret
push
mov
fwait
mov
pop
sti
push
jmp
inc
dec
dec
lcall
imul
xchg
and
sub
or
push
repz
sub
jns
shlb
clc
sub
shl
inc
cld
lds
aam
sub
mov
ficoml
aas
pop
pop
jnp
or
push
outsb
cmp
gs
mov
inc
cld
or
xchg
in
pop
lods
xchg
in
cltd
loopne
test
inc
popa
jp
js
push
push
cli
in
imul
lea
push
dec
sub
push
xor
in
test
push
dec
adc
cmc
xchg
dec
loopne
filds
lea
sub
xchg
movsb
dec
in
pop
mov
dec
add
shll
mov
inc
fstl
ret
jae
adc
insb
or
cs
mov
insl
out
cld
les
push
loope
shrb
push
xor
mov
rcll
cmpsl
mov
cmpsb
in
fbld
jge
test
das
jnp
push
aam
cwtl
dec
sub
test
in
add
hlt
repnz
inc
jmp
repnz
push
xchg
push
nop
mov
aad
shrb
and
dec
jp
mov
jecxz
notl
shll
sbb
imul
subl
ja
in
movsb
fiaddl
and
sbb
sbb
ret
fs
sbb
ljmp
dec
sub
xorb
mov
xchg
cld
icebp
inc
mov
bound
loopne
or
lahf
pop
push
inc
filds
aad
ffree
jo
xchg
or
xor
dec
lahf
and
jo
mov
push
xor
in
cltd
jae
call
xlat
jle
popf
push
adc
or
or
fdivrl
mov
jmp
dec
lock
jae
add
push
mov
inc
jge
sub
pop
add
push
mov
sub
mov
and
pop
in
lret
rorl
pop
inc
into
or
xchg
rclb
mov
ds
fwait
sbb
lods
or
adc
jno
cld
outsb
cld
sub
sahf
std
xlat
fs
mov
loope
mull
fbld
shlb
or
jnp
add
mov
insb
sub
aad
push
loopne
stos
push
pop
mov
out
sub
or
cmp
sbb
adc
enter
dec
ficompl
out
pop
add
push
jae
push
aam
repz
push
sahf
or
mov
lcall
lret
test
inc
movsbl
jp
stc
loop
pop
rorl
jmp
and
jge
cwtl
daa
adc
ss
scas
mov
rcrb
imul
jb
xchg
aaa
pop
pop
in
test
cmc
mov
fists
mov
mov
sub
push
fs
loop
mov
insl
arpl
dec
push
push
pop
gs
ljmp
mov
mov
lods
push
jnp,pn
xchg
aam
lock
add
jmp
mov
sub
add
ss
mov
hlt
jecxz
mov
inc
in
leave
xchg
jns
sbb
xchg
mov
scas
xchg
insb
pop
mov
jnp
mov
sbb
nop
adc
pop
ds
bndldx
mov
adc
add
les
sahf
mov
shlb
fsubrp
push
outsl
sahf
xchg
aad
mov
add
add
pusha
addl
pop
scas
add
ret
or
xor
jmp
cs
or
icebp
jae
lods
lea
testb
fisttpl
cwtl
dec
dec
sbb
fs
push
pop
xchg
int
ret
pushf
popa
incb
cmc
mov
jnp
jns
adcb
push
jge
in
sbb
jo
icebp
movsb
jge
jmp
cmp
push
sbb
jge
mov
cmp
and
add
bound
out
xchg
mov
movups
ret
and
xchg
sahf
in
idivb
leave
jg,pt
into
add
sub
test
das
xchg
std
sbb
addr16
xchg
xchg
mov
cmp
in
ret
or
push
push
jecxz
dec
cld
flds
and
lea
mov
les
loopne
cmp
jp
sub
mov
add
pop
nop
cmp
cmpsb
mov
jne
insb
addl
mov
mov
or
cmp
xchg
mov
imul
outsb
mov
setnp
mov
and
push
xlat
movb
jbe
andl
xchg
add
push
dec
das
decb
shll
dec
popa
jno
cli
test
in
sub
push
add
cmp
xor
call
fdivl
jno
stos
mov
int3
add
test
test
rcrl
sub
and
out
into
push
push
cmpsb
push
mov
lock
lods
aad
xor
aas
outsl
pop
cli
lcall
push
inc
int
test
jmp
and
pushf
adcb
sbb
add
cs
or
pop
xor
sti
cli
stc
test
das
nop
fwait
cli
test
mov
push
ret
cmp
out
fisttps
loopne
adc
insl
insb
orl
sub
ja
and
mov
and
mov
xor
lods
insl
mov
shr
or
lock
lea
fimuls
xchg
outsb
jge
cmpsl
nop
cs
cmp
arpl
inc
mov
ret
insl
jmp
jnp
jo
or
lods
xchg
add
or
ret
adc
xchg
loop
mov
sub
sub
xchg
mov
pop
cld
rclb
bound
jle
int3
fstpl
test
cmovnp
daa
pop
dec
faddl
xchg
and
adc
pop
jmp
or
jecxz
dec
and
mov
jg
cmp
insb
leave
outsb
es
pop
gs
jb
add
fnstenv
dec
fnsave
cli
sub
ss
xchg
lret
add
mov
push
jb
rorl
insb
test
mov
cltd
adc
sbb
data16
sub
popa
cmp
pop
pop
rcrl
mov
mov
or
pop
fwait
xchg
and
inc
inc
in
push
cli
adc
test
sub
ret
ret
enter
push
pop
leave
scas
insb
jbe
out
shlb
loop
or
mov
push
idivl
es
cld
mov
test
dec
mov
xchg
cmpl
mov
xchg
movsb
lahf
push
repnz
xchg
mov
aaa
inc
push
push
xchg
cmp
push
call
jle
ret
or
pop
xor
pusha
notl
and
mov
mov
pop
in
scas
outsb
sub
pop
or
add
arpl
lahf
pop
sub
or
lret
mov
push
scas
or
pop
test
and
bound
into
push
jge
hlt
test
push
andl
mov
pop
cltd
aaa
call
mov
popf
fucomp
aam
cmp
es
xor
xchg
sarb
out
dec
aad
cmpxchg
pop
xor
mov
add
repz
iret
cltd
addr16
iret
xchg
mov
sub
sbb
into
mov
cmc
sbb
loopne
or
call
or
xor
mov
adc
pop
push
aad
and
sarl
dec
xchg
mov
xchg
fstpt
loope
pop
mov
ror
or
and
jl
dec
sbb
je
jo
cs
mov
mov
push
in
xor
mov
inc
jne
or
fmul
lds
sbb
xchg
jmp
sbbb
xchg
lock
int3
mov
jle
bsf
leave
and
fstpt
jb
cmp
jnp
xor
scas
mov
jbe
ret
inc
ljmp
mov
data16
push
jmp
jg
insb
mov
cwtl
xchg
mov
hlt
icebp
xchg
pop
cmpsb
insb
add
outsl
sub
sbb
aam
leave
test
xchg
repnz
mov
in
rolb
fildll
nopl
cmp
pusha
pop
mov
mov
pop
scas
cmp
sbb
sarb
mov
fsubrl
ds
xor
test
cmp
add
fwait
sahf
shrb
cmp
cmp
inc
sub
mov
fcmovu
iret
push
rcl
hlt
xchg
bound
mov
out
sbb
adc
and
inc
xchg
and
or
xchg
lahf
sahf
xchg
pushf
xor
repz
xor
pop
mov
xchg
xchg
fwait
mov
sub
scas
or
xchg
push
or
jle
mov
lds
mov
int3
into
lock
lds
cmp
aad
adc
rcrl
pop
or
rcrb
mov
xor
push
mov
push
mov
mov
push
mov
fdivs
dec
add
das
inc
fsubs
jp
loope
push
insl
sarb
mov
repnz
pop
push
push
and
mov
pop
or
leave
ds
call
dec
popf
bound
outsl
in
sbb
je
xchg
sub
scas
icebp
fs
aam
les
fsubrp
sahf
jge
sub
jge
add
mov
sub
mov
aas
popa
xor
test
push
xor
mov
addr16
sbb
inc
cmp
mov
push
jb
xchg
xlat
imull
dec
mov
pop
packuswb
arpl
loop
in
jge
outsl
lcall
push
push
push
lds
lret
mov
pushf
jp
ret
xor
imulb
std
pop
push
xchg
sub
mov
sub
and
gs
movsl
addl
cmp
pop
sarl
in
lea
xchg
cmp
dec
jmp
lea
dec
cmp
sub
sbb
cmc
push
push
xchg
adc
adc
sbb
jnp
push
testl
int3
sub
push
lcall
inc
pusha
jbe
cmp
lds
loopne
dec
ja
test
scas
push
jmp
sub
sbb
push
mov
out
gs
adc
stos
pop
pop
push
adc
inc
push
js
icebp
jns
cmp
out
aas
cld
testb
mov
push
cmp
into
xchg
in
scas
xchg
mov
push
bswap
frstor
lods
jno
push
and
fsubl
jns
fidivrs
add
lret
data16
cmpb
cwtl
sbbl
movsb
scas
out
cld
nop
mov
sbb
vcvttps2uqq
aam
mov
movsb
pop
hlt
mov
into
mov
dec
fisttps
ds
pushf
addl
mov
lods
adc
cmc
ljmp
push
adc
test
cmp
pop
rcll
daa
sbb
pop
or
mov
xchg
xchg
sbb
ret
push
or
inc
sub
pop
or
pop
pop
les
insb
sbbl
in
pop
mov
shl
jge
outsb
adc
inc
lcall
jo
cmp
arpl
and
cmp
dec
pop
jb
mov
out
pop
pop
lahf
cwtl
lret
mov
gs
push
mov
cmp
lds
adc
sbb
mov
mov
pusha
jmp
loopne
pop
popf
lret
add
fidivrs
lods
daa
or
xchg
shlb
cmp
ror
xchg
xchg
cmp
ret
bound
push
pop
notl
iret
dec
loop
sbb
and
insl
adc
fisubl
stos
mov
inc
cmpsl
jbe
sub
fsubrs
jo
adc
insb
out
sub
shl
repz
jmp
jl
ljmp
dec
icebp
js
iret
pop
xchg
ret
inc
loopne
icebp
jae
mov
imulb
test
jne
mov
push
stos
cmp
xchg
jmp
test
cld
mov
in
mov
scas
shlb
sti
jne
push
clc
push
add
clc
movsb
cs
mov
xchg
pop
add
mov
inc
lcall
or
lret
bound
push
mov
cwtl
and
xor
xchg
ret
sub
jne
xchg
orb
add
mov
in
add
mov
mov
push
lret
popa
mov
cmpsl
pop
xchg
push
lea
js
test
jno
je
or
xor
mov
xchg
jo
pop
test
imul
test
cmpsl
jmp
push
pop
pop
sbb
sub
or
ss
add
inc
inc
mov
cld
into
adc
and
jg
pop
mov
jne
inc
bound
mov
inc
sbb
pop
xor
mov
push
into
cmp
jo
jmp
push
outsl
push
into
jbe
clc
cwtl
aaa
out
sbbb
cs
mov
cmp
inc
jae
bsf
ficoml
jmp
mov
test
shll
mov
test
jp
cmp
push
xchg
push
cmp
aaa
mov
popf
fdiv
lret
pop
or
fistpl
test
and
and
cs
xor
pop
adc
adc
mov
jno
push
cmp
mov
jmp
pushf
dec
jns
sarb
add
cli
ja
mov
and
sbb
orl
and
cmp
lret
rol
mov
cmc
dec
cli
sub
shrl
cli
daa
out
pushf
es
divb
int
inc
ucomiss
loope
push
into
xchg
cmpb
jge
sbb
mov
rol
ss
or
jmp
or
vpsrld
push
pop
leave
inc
inc
pop
mov
int3
pop
mov
in
adc
mov
pop
lea
stos
pushf
dec
cmp
ja
adc
stc
clc
mov
ds
or
scas
push
gs
out
mov
sbb
sub
fisttpl
cltd
orl
dec
jmp
rorb
push
xchg
rclb
xor
mov
pop
jne
push
xor
lods
fucomp
push
or
xor
or
mov
pop
mov
sbb
ljmp
xchg
aaa
test
cmp
xchg
movsb
fwait
icebp
inc
movsl
dec
in
or
mov
leave
test
stos
mov
xchg
mov
dec
xlat
fwait
mov
cmp
sub
or
or
push
xor
xor
in
test
cmc
aam
pop
aad
sbb
pusha
shll
rcll
mov
dec
xchg
js
dec
jne
in
push
cmp
fcmovne
sub
mov
mov
jge
mov
or
test
stos
lret
bound
adc
push
imul
or
aas
aas
call
imul
lea
dec
sbb
icebp
mov
fmuls
ljmp
push
mov
mov
and
mov
push
out
daa
push
cmp
sahf
mov
cwtl
jl
insb
std
push
rcl
sub
mov
fdivrl
lock
lret
mov
cmp
mov
cli
adc
shlb
pop
popf
sahf
xor
push
xchg
clc
movsl
xor
out
lret
jge
cmpsb
mov
sub
cmp
pop
loope
jecxz
enter
mov
mov
daa
mov
cltd
pop
push
and
cmc
out
mov
or
adc
clc
xor
cld
cmp
repz
cltd
pop
push
add
xchg
inc
push
arpl
and
mov
fwait
pop
data16
insl
jne
jns
xchg
jne
pop
lahf
adc
loopne
mov
xchg
add
popf
andl
mov
or
and
int
inc
push
dec
pop
xchg
xlat
loope
push
mov
xchg
insb
sub
jnp
subb
dec
popf
sbb
fs
or
xor
adc
adc
cmp
cmc
or
sub
pop
data16
mov
mov
cmp
repnz
scas
add
push
stos
xchg
outsl
add
mov
arpl
sub
mov
inc
ror
xchg
out
mov
mov
ss
sub
mov
inc
in
out
xor
cmpsb
lods
nop
into
or
lcall
mov
cltd
xchg
fucomp
ja
dec
adc
dec
movsb
ja
jnp
jl
out
jae
adc
mov
cmc
insb
test
in
jbe
lret
inc
jo
data16
popa
xchg
movb
push
aaa
cmc
dec
mov
cmp
test
out
cmp
sahf
jbe
rorb
test
cmc
leave
jb
pushl
repnz
jnp
pop
dec
in
inc
stc
dec
mov
push
es
cs
iret
inc
sub
sbb
gs
push
loop
divb
dec
aad
ret
mov
shrb
mov
roll
inc
in
out
imul
mov
mov
sarb
dec
jae
add
ja
jp
loopne
push
push
shlb
cmpsl
call
insb
xor
sub
rcrl
push
inc
xchg
cli
pop
arpl
inc
cmpsl
gs
sbb
aad
out
lea
shrb
pop
pop
in
or
mov
cs
mov
xchg
push
pop
xchg
and
inc
in
mov
std
cmp
mov
inc
xor
mov
and
sbb
push
iret
fsub
orb
xchg
xchg
arpl
xor
xchg
push
scas
adcl
daa
cmp
pop
loopne
enter
mov
repnz
sub
mov
fbld
rolb
and
dec
incl
lds
pop
ds
outsb
xchg
ficoms
lret
pop
jl
faddp
or
xorb
fimuls
sti
movsl
or
out
insb
and
jns
stos
rcl
iret
inc
lds
lret
pusha
pop
dec
fs
das
mov
sub
out
mov
sub
pop
and
je
insl
xchg
and
push
dec
xchg
cmp
jp
ljmp
movsl
iret
xor
dec
add
push
push
das
out
mov
xchg
xor
xor
mov
and
pop
notl
ss
pusha
cmp
adc
xor
js
call
cmp
dec
stc
sub
pop
mov
dec
mov
cmp
xor
stos
in
pop
lods
in
seta
stos
mov
in
and
or
jl
sub
push
push
xor
sarl
scas
inc
lods
outsl
mov
inc
dec
aad
adc
fucom
pop
pop
mov
leave
out
mov
jne
pop
xor
mov
frstor
nop
adc
jns
adc
jns
les
or
cmp
mov
arpl
cmp
imul
jns
push
clc
push
xchg
xchg
mov
in
push
push
mov
call
cmp
loop
stos
movsb
arpl
lea
cmp
stc
mov
outsb
cmp
gs
push
dec
sbb
jl
adc
push
fldl
jae
fistps
xchg
cli
shll
xor
mov
inc
sbb
aad
xor
in
cmp
push
add
out
je
and
jg
xchg
insl
sbb
cmc
out
popa
je
and
int3
jp
fs
add
mov
push
dec
add
ret
push
lds
lods
xchg
ds
xchg
leave
aaa
shlb
mov
mov
pop
push
fbstp
pop
leave
jge
sub
test
loopne
pop
jecxz
ja
jecxz
dec
mov
hlt
cwtl
aaa
test
sqrtps
xchg
movsb
pop
push
dec
mov
call
ret
data16
sbb
xchg
out
loop,pn
xchg
fadd
inc
bound
addr16
mov
fsubs
xchg
dec
bnd
push
lret
and
and
arpl
xchg
pop
and
mov
int
xchg
adc
adc
lret
push
push
jp
cmp
pop
mov
jne
test
xchg
out
lds
call
jle
xor
mov
sbb
les
enter
ljmp
dec
ret
cmp
xlat
and
push
and
and
fdivrs
inc
mov
cmp
dec
dec
aad
or
cs
push
xor
insl
mov
pop
pop
inc
push
pop
lock
adc
lret
cmc
js
inc
mov
mov
frstor
cmp
xchg
mov
es
xchg
sbbb
push
add
call
loop
pop
pop
rorb
mov
and
pop
stos
adc
xchg
push
inc
in
seto
out
dec
int
add
push
mov
std
xlat
xor
jle
outsl
ljmp
pusha
jo
ja
adc
mov
ficoms
pusha
push
and
rcll
push
loop
xchg
out
ja
int
push
mov
aam
mov
mov
dec
imul
push
in
sbb
lret
pop
mov
ret
fsubs
adc
imul
outsb
aaa
push
inc
int3
out
aam
jp
mov
lea
jge
loope
inc
subl
daa
mov
cmp
or
addr16
push
mov
xchg
or
cmp
xorb
pop
xchg
movb
ds
jg
sbb
loopne
mov
cmpsl
inc
add
fstp
pop
andl
mov
outsb
xchg
pop
das
fs
outsl
cmpsl
jne
jg
test
loope
ja
cmc
dec
add
jbe
sbb
and
sub
sbb
mov
pop
leave
stos
mov
inc
cmp
mov
mov
inc
in
push
das
and
or
push
add
dec
jae
ss
jg
addb
shl
aam
sub
out
mov
test
int
jecxz
mov
pop
mov
mov
inc
mov
aas
mov
mov
fdivl
pop
fcoml
fwait
ljmp
out
bound
les
repnz
outsb
ja
dec
cs
dec
mov
jae
jg
iret
xchg
out
jo
push
add
int
push
popa
jle
xor
inc
insb
mov
dec
in
pusha
nop
pop
jge
nop
sub
int3
idivl
in
sti
dec
dec
fsub
ret
cli
aad
dec
cli
push
xor
sub
enter
cmp
sarb
shrb
xorl
pop
inc
sti
daa
rcrb
mov
pop
xor
dec
push
dec
loop
inc
mov
cs
push
mov
mov
mov
fdivrl
jbe
push
inc
popa
or
iret
cli
xor
loopne
dec
loope
xor
cld
cmc
lea
or
cmpsb
test
mov
movsl
arpl
add
push
push
pop
aam
dec
nop
pusha
fadds
sub
push
mov
push
mov
mov
or
fcmovne
adc
sti
lahf
lret
movsb
lock
xchg
xorb
ss
inc
mov
xchg
ds
ljmp
in
insl
dec
orl
sbb
nop
jmp
orb
jns
jb
sbb
out
jecxz
xchg
sbb
inc
push
jnp
aam
or
pmulhuw
inc
nop
add
mov
rcrb
test
mov
mov
je
xchg
cmp
fldt
mov
loope
inc
int3
push
inc
clc
pop
insb
push
and
into
sbb
xor
pop
stc
lods
stc
xchg
cmp
push
lods
mov
pop
sbb
jg
lods
xor
sub
pop
and
mov
das
push
push
xchg
shrb
mov
and
lahf
mov
sbb
pop
push
xlat
or
sbb
pushf
jge
xchg
jecxz
inc
cmp
pop
xlat
scas
xor
jns
fildll
lock
call
ljmp
arpl
stos
sahf
mov
out
pop
insb
cmpsb
push
sbb
hlt
mov
mov
cli
roll
sbb
movsb
pop
push
cmp
les
push
shlb
jl
dec
or
xchg
mov
push
leave
inc
inc
in
pop
lret
stos
or
push
xchg
or
cmp
jb
add
dec
iret
lcall
daa
mov
jne
fcomps
movsl
imul
hlt
pop
inc
enter
mov
xchg
test
mov
lock
loopne
insb
jno
jg
xor
cld
adc
and
cmc
arpl
cmp
mov
pop
or
push
aaa
int
cmp
out
je
dec
push
les
cmp
sbb
ret
dec
fsubr
mov
xchg
mov
imul
aam
int3
jmp
mov
gs
lret
add
jnp
xchg
lret
xorl
insl
cmc
sbb
jmp
adc
ss
jne
ficoms
dec
popf
mov
mov
mov
rol
xchg
outsl
xchg
mov
fnstsw
xchg
jnp
mov
cmpsl
push
dec
mov
push
outsl
jbe
nop
mul
out
arpl
xchg
adc
out
cmp
cmp
vhsubpd
and
mov
push
lods
and
and
add
adc
jmp
sub
test
mov
mov
sbb
push
pop
inc
rcll
dec
popf
push
mov
je
adc
mov
inc
test
lds
in
into
push
lods
mov
dec
pop
pusha
cmp
lret
arpl
push
lea
sub
push
xlat
leave
push
xchg
jl
out
and
pop
inc
pop
push
sbb
xchg
mov
dec
push
jo
mov
push
lret
mov
sbb
stos
arpl
sub
mov
in
xor
adc
hlt
rolb
hlt
adc
mov
leave
adc
push
les
jl
mov
sub
loopne
lods
xchg
jmp
push
push
lods
test
adc
add
andl
add
mov
mov
out
jnp
or
jp
dec
cmc
mov
xor
cmc
mov
xchg
lret
loop
icebp
inc
data16
pop
cmp
add
mov
pop
push
cld
stos
cmpsl
shl
cmp
mov
inc
push
cmp
daa
xchg
add
xchg
fsubrs
mov
push
push
mov
or
jge
iret
pop
add
aaa
shll
xor
xlat
push
jmp
mov
dec
cmp
jmp
mov
lods
ret
pop
sbb
ret
push
sub
mov
lcall
stos
mov
rol
mov
xchg
pop
sar
subb
mov
sub
inc
sbb
lret
pop
jge
mov
out
movsl
insb
dec
jns
fistps
push
mov
test
mov
lods
sub
scas
iret
push
out
mov
das
inc
pop
or
fbstp
scas
in
sbb
mov
and
arpl
push
dec
xor
or
xlat
xor
mov
movsb
test
sbb
aas
dec
imul
mov
cmp
add
and
xor
sbb
aas
sbb
mov
aad
push
bnd
lcall
in
push
test
bound
xlat
cmp
adc
dec
dec
push
into
shrd
cmc
mov
jo,pn
ss
andb
loop
ret
jecxz
and
inc
pusha
fs
bound
cltd
dec
jge
sti
jle
mov
adc
mov
nop
sti
xchg
cmp
popa
push
sub
mov
jae
push
dec
xchg
outsb
or
inc
das
mov
adc
clc
mov
ficompl
outsb
xchg
mov
repz
dec
adc
fdivp
cmp
orl
rolb
out
pop
inc
imul
clc
xor
daa
mov
ficoml
out
dec
addr16
dec
mov
xor
shll
cwtl
sbb
jl
mov
test
dec
xchg
lds
mov
les
adc
adc
jo
inc
mov
inc
outsb
mov
mov
lock
xor
or
push
adc
bound
imul
pop
mov
pop
fmul
jno
mov
lock
js
leave
sub
sbb
xchg
call
jne
jae
imul
pop
or
rolb
dec
push
dec
push
push
mov
push
rcrl
scas
sahf
jne
xor
popf
push
mov
sub
test
mov
sti
mov
sbb
aas
pushf
mov
mov
aam
fcmove
js
add
inc
sbb
or
roll
and
div
jo
sbb
sbb
mov
inc
nop
sub
fwait
call
mov
outsb
mov
aas
adc
gs
ja
pop
mov
pop
mov
push
mov
test
fisubrs
fnstenv
mov
inc
test
cmpsl
out
cmp
lret
jecxz
ret
inc
push
mov
inc
sbb
add
adc
in
pop
mov
pop
sbb
jnp
xor
jns
add
nop
jo
jns
scas
inc
jge
das
adc
or
fnstcw
scas
mov
mov
push
sub
fbstp
sti
daa
add
adc
ja
sbb
popa
jle
cmp
mov
sub
cmpsl
lock
not
push
dec
jne
xor
mov
mov
in
jnp
push
int3
call
xchg
adc
stc
or
dec
out
xchg
es
pop
adc
imul
jbe
jb
and
add
pop
fsts
nop
mov
jae
adc
mov
and
test
mul
xlat
dec
xchg
jg
arpl
test
mov
jb
scas
call
add
lea
inc
out
jbe
icebp
fcmovnu
add
imull
sbb
hlt
shlb
add
and
mov
xchg
out
clc
jl
or
jo
push
ljmp
xchg
mov
pop
movsl
xor
push
pop
jecxz
mov
or
xor
into
push
dec
insl
data16
sbb
push
push
pop
cltd
lret
push
rcrb
pop
xchg
mov
adc
cmp
insl
scas
push
rcrb
inc
out
iret
jmp
jne
pusha
jns
xchg
and
mov
lea
mov
sub
push
bound
loop
ljmp
pop
cmp
sub
add
enter
jne
add
jbe
ja
in
pop
shr
adcb
cltd
mov
cmc
jb
test
jne
jl
std
dec
push
loop,pn
mov
fs
addr16
repnz
cmp
dec
neg
aas
insl
sub
xchg
cmp
lock
rcr
mov
jg
jmp
jmp
ljmp
xchg
imul
adc
sub
sbb
in
lahf
outsl
outsb
fdiv
pop
sti
test
push
cmpb
shl
lcall
pop
sarl
add
ljmp
outsl
aam
ss
mov
insb
insb
mov
movb
movsb
jge
std
adc
adc
out
pop
arpl
mov
dec
sbb
and
mov
sahf
jne
pop
mov
cltd
and
dec
jne
in
rorb
adc
call
add
and
mov
sub
mov
dec
sub
push
mov
dec
ja
or
push
cmp
test
lcall
xor
cmp
cmp
ret
das
mov
cwtl
outsl
lock
sbb
inc
repnz
inc
push
les
imul
jnp
mov
fldl
jle
out
js
addr16
cmpsl
pop
jge
adc
push
ret
mov
pop
pop
xor
pop
push
inc
mov
xchg
out
xlat
mov
pop
sarl
sbb
orl
fsubrs
icebp
repnz
das
int
scas
outsb
cmp
inc
insl
test
leave
stc
push
fwait
cwtl
lret
xchg
fs
into
mov
mov
std
push
pop
add
or
std
and
leave
out
lret
movsl
push
jnp
nop
dec
mov
mov
cs
xchg
faddl
jno
cltd
call
sbb
jl
rcll
sub
xor
or
mov
xor
sbb
cli
mov
testl
pop
sbb
mov
jae
xchg
aam
dec
insb
in
int
sbb
insb
or
adc
jae
and
xor
mov
sbb
jg
mov
ret
xor
mov
lods
out
jle
cmp
mov
and
mov
cltd
push
ds
push
push
mov
jp
push
into
lds
rolb
push
int3
mov
xor
fstpl
dec
mov
leave
icebp
cmc
inc
movsl
leave
sbb
sbb
cltd
and
cmp
inc
ret
pop
repnz
jmp
dec
pop
mov
add
mov
dec
pop
dec
mov
jne
mov
mov
adc
ret
inc
ja
xchg
push
jns
xor
dec
push
add
jae
adc
push
adc
sub
ds
sbb
push
sub
mov
and
fldenv
fwait
or
nop
inc
sub
dec
int
imul
xor
pop
cmp
int
jge
lea
daa
mov
mov
add
cmpsl
sub
adc
cld
mov
xor
out
orb
adc
outsb
sahf
xor
repnz
scas
clc
mov
fldt
push
and
inc
loope
adc
aaa
cmp
insl
jae
sti
mov
ja
cmp
jne
push
cmc
pop
jl
data16
or
jle
xor
rcll
in
mov
aas
cmp
add
pushf
pusha
insb
cli
hlt
jne
and
scas
and
clc
loopne
inc
dec
mov
jne
xchg
or
lea
cmp
jns
push
lds
sub
je
dec
adc
test
mov
sub
stos
mov
cmp
rdtsc
neg
fwait
mov
jnp
data16
fsubs
add
cmp
movl
fldz
cld
add
inc
movsl
es
and
mov
ljmp
or
loopne
xchg
jns
cmp
outsl
shrl
cld
dec
ds
stos
cmpl
aas
xchg
xor
scas
into
xor
movb
or
inc
jnp
jns
out
mov
dec
enter
popa
push
inc
and
xchg
xor
mov
pop
push
add
add
jo
cmp
stos
out
mov
movb
mov
repz
push
add
insl
aad
mov
jle
pusha
add
push
add
dec
push
mov
pop
loope
mov
xchg
jne
and
push
sub
mov
pop
gs
lret
repnz
lods
in
int3
or
mov
jl
cmpsl
ret
movsb
mov
sub
xchg
addb
std
mov
adc
cwtl
cmp
mov
inc
rcr
or
push
inc
fists
dec
mov
cli
inc
aaa
mov
or
enter
jg
out
pop
insl
xor
jb
movsb
shlb
adc
cld
cmp
outsl
pusha
pop
lock
int
jbe
cmc
lea
icebp
test
jge
xchg
jge
outsl
inc
adc
sbb
and
cmc
rcrb
cmp
fstps
imul
mov
or
pop
cmp
sub
or
mov
jno
aam
loope
sbb
pop
xchg
mov
mov
addb
jmp
and
dec
xor
pop
dec
add
push
int3
out
stos
fiadds
mov
and
out
jns
fs
insb
cwtl
inc
sub
adc
in
dec
jl
xchg
enter
lods
mov
aad
xor
adc
inc
movsb
mov
jnp
in
push
out
daa
jns
adc
subl
shrb
cmc
js,pn
cmc
in
in
xchg
pop
stos
xor
out
pop
dec
mov
popa
insl
in
adc
jmp
xchg
add
dec
stos
jmp
pushl
mov
hlt
test
and
and
xchg
outsl
ljmp
cmp
sbb
mov
aam
mov
push
add
pop
push
in
testb
sbb
cmp
in
jl
clc
clc
sub
sub
data16
ss
jb
shl
shll
repnz
pusha
cmp
fists
bound
insl
xlat
movsl
mov
mov
and
push
mov
sbb
popl
ret
pop
add
mov
inc
mov
inc
std
mov
adc
imul
and
in
xchg
xlat
lcall
out
dec
mov
sbb
scas
movsl
push
mov
mov
idivb
cld
sub
addl
fimuls
bnd
push
mov
inc
ljmp
sbb
xor
mov
push
or
cmpsl
or
mov
or
adc
inc
fdivrp
pushf
mov
fwait
mov
in
dec
popf
repnz
pop
xor
movsb
mov
cmpsb
jno
mov
mov
dec
fwait
popf
mov
lret
push
out
test
rcrl
mov
bound
das
xchg
xchg
push
clc
push
adc
lcall
addb
repz
out
imul
ret
inc
jmp
movsb
in
or
std
scas
adc
pop
lods
mov
push
dec
outsl
ficoml
aaa
leave
dec
insb
rcrb
loop
sbb
arpl
fs
lock
xchg
test
pusha
sbb
add
jae
sub
xchg
mov
jp
lea
cmp
adc
lods
xchg
popf
mov
jbe
test
push
rolb
adc
inc
icebp
fiaddl
iret
jmp
cmp
mov
cmp
or
lcall
dec
jl
repnz
mov
inc
lods
outsl
jns
dec
nop
inc
push
mov
jmp
loop
out
dec
scas
mov
mov
push
xor
mov
movsb
ret
cmp
idivb
int
add
mov
cmpsb
ljmp
imul
or
jg
jae
mov
fidivl
je
cmpsl
push
in
xchg
andl
push
mov
jg
mov
cmp
sub
and
pop
jnp
scas
sub
adc
clc
jmp
jnp
push
pop
icebp
lahf
sub
and
adc
xor
push
cs
fs
insl
and
adc
fcmove
push
adc
adc
cmp
fsubrl
inc
xchg
xchg
fiaddl
cmp
sahf
xor
stos
xchg
cmpsl
pop
push
je
and
dec
xor
in
enter
loop
pop
cmp
in
mov
push
and
or
xor
cltd
mov
std
pop
or
mov
mov
xchg
xlat
push
xchg
icebp
fucomip
aaa
or
xchg
inc
jp
mov
lods
or
fs
stos
sbbb
popa
out
xor
sub
inc
dec
scas
pop
jp
jae
cmp
sub
aad
ss
pop
jns
add
adc
jecxz
enter
mov
rcr
sti
leave
loop
aaa
stos
loopne
mov
sub
movsb
cmp
sahf
aas
cmp
add
insl
cmp
jbe
jae
lea
movsb
adc
in
mov
pop
aam
and
out
adc
pop
sbb
xchg
jnp
sahf
loop
or
outsb
test
inc
sbb
jecxz
in
insb
dec
mov
cltd
mov
ret
push
push
arpl
and
jo
jno
je
or
or
test
dec
mov
push
lock
jbe
cltd
xchg
test
pop
xchg
std
xchg
out
xchg
add
push
movsb
mov
inc
sub
lods
push
call
add
pop
pop
insl
mov
inc
out
cwtl
test
and
pop
int
cmp
scas
and
cli
jecxz
cmpsb
les
push
fildl
and
push
add
nop
in
inc
mov
xor
sbb
repnz
pop
dec
sbb
mov
and
adc
jbe
push
int3
dec
mov
mull
sarl
sbbb
popf
cmp
data16
xor
out
stc
pop
and
push
xchg
ljmp
mov
insb
insl
jae
cld
sarb
or
insb
mov
and
fildl
and
xchg
cwtl
ljmp
mov
in
popa
push
cwtl
cld
dec
loop
push
dec
jmp
cmp
and
mov
mov
sti
jae
adc
aas
in
xor
fnsave
xor
movsl
decl
xchg
cmp
enter
cmp
rolb
pop
in
xchg
xchg
sbb
fdivrs
push
lds
sub
mov
lds
jmp
gs
lret
popf
andb
xor
and
dec
mov
scas
pop
lea
je
nop
test
sbb
xchg
sbb
inc
lods
inc
cmp
sbb
pop
sbb
mov
push
les
insl
loop
or
mov
pop
nop
jae
sub
jle
mov
jmp
ds
or
outsb
lds
jmp
jb
dec
rcl
repnz
mov
ds
cmp
push
jnp
inc
je
dec
dec
sbb
js
mov
les
mov
jnp
clc
jmp
add
adc
sbbl
loopne
push
shll
mov
xchg
cmp
and
xchg
pop
dec
nop
xchg
jno
add
push
aam
aam
fisttpl
push
ret
lods
push
ficoml
adc
popf
jne
xchg
adc
sub
xlat
or
adc
mov
addr16
movsb
adc
imul
sub
sbb
das
adc
jns
cld
inc
into
in
inc
jns
inc
idivb
ret
divb
lods
clc
adc
jbe
sub
xlat
add
sti
mov
test
out
out
mov
insl
clc
dec
lods
in
mov
sub
add
xor
dec
shll
adc
aas
or
out
push
cld
adc
adc
sub
out
stos
sbb
jbe
insl
fcmovnbe
jg
or
xchg
pushf
pop
cli
jnp
push
mov
mov
mov
rolb
xchg
mov
ja
adc
sbb
lret
insb
mov
ds
test
in
mov
test
mov
or
mov
or
aaa
or
add
dec
xcrypt-ofb
cmpsl
scas
pushf
and
mov
lds
aaa
cmp
inc
sbb
out
push
imul
jl
test
cwtl
mov
lcall
cs
in
push
jp
cmpsl
rcr
pop
outsl
test
testl
xchg
lret
xor
gs
bound
push
in
mov
jmp
adc
subb
fisubl
lds
cmpsb
sub
fyl2x
ds
movsl
xor
push
jle
out
lds
repz
dec
add
repz
mov
subl
lcall
lret
mov
push
fiaddl
or
out
mov
push
insl
enter
push
test
dec
mov
and
js
aas
insl
mov
add
sbb
movsb
int
stos
cmpsl
mov
pop
mov
stos
adc
fstps
adc
es
fs
sbb
mov
idiv
mov
repz
je
out
sub
mov
int3
cmp
loop
inc
and
and
ja
mov
cmpsb
mov
movsb
pop
inc
pushf
mov
jno
mov
mov
outsl
and
js
sbb
fstp
dec
mov
fwait
push
call
xchg
push
loope
dec
lea
add
sti
dec
push
cli
pop
fisttpl
scas
arpl
pushl
or
es
jnp
adcl
push
lret
loope
sbb
mov
sahf
jle
push
inc
fucomp
jo
aad
fisubrs
out
pop
jp
inc
jns
in
mov
pop
aas
jl
jl
insb
repz
test
add
fldl
inc
and
mov
cmp
leave
add
andl
mov
lods
mov
mov
mov
addr16
scas
xchg
dec
mov
data16
pop
aas
and
fcoms
mov
jge
or
lods
xor
int3
imul
fldl
enter
xchg
mov
jp
jae
pop
jmp
test
and
push
push
int
mov
adc
dec
inc
jl
sub
adc
jl
mov
jl
xchg
ret
push
fcmovb
mov
setl
push
inc
jnp
scas
cmpsb
adcb
fstpl
loop
mov
sub
pop
jle
mov
jle
sbb
dec
movsl
jne
cmp
lcall
aaa
cmpsl
ror
lret
jne
fstps
leave
jae
push
rcll
call
loop
and
loop
loope
inc
pop
jmp
sub
mov
es
lret
sbb
lea
jns
cltd
mov
and
fnstcw
sub
mov
cmc
jne
xor
xor
or
add
push
lock
movsb
push
mov
js
adc
fs
addb
xor
ret
fnstenv
dec
cmp
roll
dec
out
notl
cmp
dec
dec
clc
scas
scas
xlat
hlt
subl
testb
dec
pop
mov
fbld
fnstcw
xor
outsl
mov
jge
xchg
ficoms
pusha
jmp
pushf
and
sub
lret
adc
test
clc
iret
daa
mov
push
adc
xchg
push
or
cmpsb
inc
adc
mov
mov
jno
push
outsb
dec
push
mulb
and
arpl
test
pop
cmp
jg
xchg
insl
call
filds
adc
arpl
popf
loop
ret
data16
fadds
push
inc
popf
mov
int3
inc
jle
adc
or
lret
or
fisubrl
and
sub
addr16
mov
aas
iret
stc
cmpsb
and
and
div
out
fldcw
sbb
lcall
pop
push
lods
ror
shl
xor
xchg
mov
mov
popa
or
cld
nop
jae
pop
adc
adc
shll
mov
hlt
add
sbb
std
das
mov
cli
pusha
loop
stos
or
pushf
lock
mov
cmp
and
nop
repz
adc
sub
rolb
cld
mov
shrb
cmc
insb
out
sub
or
mov
cmp
test
dec
rorb
rorl
enter
in
lods
lock
inc
mov
aad
stc
cmc
or
aas
xchg
ficomps
push
adc
pop
out
or
mov
cmpsb
sti
pop
push
ja
mov
mov
lret
dec
out
cmc
push
ficoml
test
xchg
pop
test
or
push
out
shll
inc
pop
pop
and
in
inc
stos
stos
xor
xchg
ljmp
xorl
mov
sti
mov
incl
and
rcr
cmp
mov
daa
mov
pusha
jo
cmpl
cmp
cmp
jne
movsl
push
jae
add
push
mov
iret
adc
cmc
pmaddwd
sub
ds
push
out
and
mov
iret
jbe
bound
pop
inc
push
ja
clc
cmp
add
inc
xor
sahf
cli
cmpsl
lea
xor
stos
cmpb
out
lods
and
ljmp
xchg
sub
xchg
and
and
jne
ret
shrl
stc
pop
arpl
mov
ret
sbb
jne
pop
ret
testb
pop
dec
xchg
mov
sbb
mov
imul
push
iret
xchg
scas
push
push
xchg
inc
fiadds
cli
into
sbbl
fs
je
push
in
dec
sub
pop
rcl
test
dec
nop
mov
cmp
cmp
or
adc
xlat
jbe,pn
cs
lock
and
outsl
pop
loope
xchg
push
cltd
mov
iret
mov
int
ds
gs
fistpll
clc
and
je
cmp
insl
xor
loop
rcl
into
ds
std
sbb
insb
sub
stos
or
cmc
dec
int3
dec
dec
cld
fs
sub
pop
out
mov
mov
add
mov
adc
adc
sbb
data16
adc
or
test
shlb
in
lods
popa
ljmp
out
pop
dec
jmp
pcmpgtd
cmpsb
dec
sbb
dec
into
inc
dec
aam
adc
stc
lds
dec
aaa
pop
mov
outsl
cld
stos
arpl
adc
mov
mov
int3
adc
ss
rorl
adc
pusha
cli
and
cmp
xor
and
and
inc
jecxz
fbld
sahf
inc
xchg
aas
mov
in
xlat
test
inc
je
cld
and
mov
mov
push
out
popa
mov
lods
imul
ret
inc
lock
mov
fimull
sbb
sub
bnd
add
jle
cwtl
jo
xchg
and
mov
in
mov
adc
inc
jmp
int3
pop
pop
popf
in
ja
jle
sbbl
aas
xor
addr16
aam
pop
testl
sbb
push
dec
xchg
inc
icebp
std
jae
lcall
lock
fidivs
pop
push
pop
fs
loop
inc
loopne
lret
lock
lret
sub
or
js
btr
xchg
ljmp
cmpsl
fistl
push
jns
cmp
sub
mov
and
pop
pop
ds
cmp
hlt
jno
cmp
leave
jns
adc
mov
xchg
in
pushf
jb
or
add
out
test
dec
xchg
iret
scas
daa
pop
pop
popa
mov
mov
dec
in
mov
fisttpl
push
inc
or
inc
movsl
or
scas
or
xor
mov
xor
lret
cmp
mov
mov
xor
mul
aas
ret
repz
lcall
gs
ja
in
and
aaa
into
lahf
mov
iret
jbe
mov
and
popf
add
dec
mov
data16
mov
add
sbb
and
loope
xlat
int
int3
or
enter
aas
iret
call
enter
dec
test
xor
lods
sub
mov
add
cmp
outsb
das
not
aas
push
ror
out
mov
inc
imul
jg
inc
stc
aas
icebp
scas
inc
int3
loop
fdivrs
repnz
xchg
pop
outsl
xor
rclb
das
and
lea
cmp
ret
js
pop
lea
cmp
inc
xor
arpl
adc
fcoms
push
not
out
jmp
add
jb
inc
pop
or
cwtl
add
cmp
stc
insb
push
or
mov
repz
xor
out
and
mov
out
xor
test
dec
popf
dec
mov
outsb
dec
jg
inc
les
sbb
sbb
mov
iret
call
cmpl
sub
cmp
sbb
jns
mov
ja
cmp
outsl
in
cmp
bound
sbb
nop
sbb
shl
imul
in
mov
lock
lods
out
dec
pop
push
sbb
popa
pop
icebp
jp
mov
push
gs
adc
sub
scas
mov
or
mov
js
jecxz
icebp
test
xor
or
cmp
lret
pop
test
pop
stos
fcomi
lret
push
mov
or
pop
add
je
aas
xchg
jb
push
adc
push
jno
mov
popf
scas
cli
sbbl
xor
ja,pn
repz
sub
and
pop
lock
push
fnsave
lods
fisttps
adc
fwait
add
test
test
sub
lea
inc
cwtl
fwait
push
pop
xor
mov
les
ficompl
notl
cmc
fistpl
cli
sub
push
iret
inc
test
mov
pop
push
jns
push
popf
xor
mov
lahf
cmc
xchg
popa
sbb
insl
outsb
xor
aaa
inc
mov
fimuls
pop
sub
stc
test
push
cwtl
lock
mov
dec
and
dec
imul
inc
xlat
repz
aas
and
xchg
fidivrs
xor
aaa
mov
lock
sub
cmp
lock
mov
popa
mov
sub
push
cli
clc
pop
mov
sti
fimuls
lret
adc
adc
push
sarb
xchg
xchg
cld
pop
push
lock
push
rcl
lods
out
pop
out
xlat
sub
fidivs
mov
push
ja
push
inc
jle
or
adc
adc
sub
jno
adc
inc
mov
iret
jge
lock
out
xchg
jo
rorl
xchg
or
push
aas
and
inc
inc
xchg
jge
arpl
mov
inc
mov
lret
inc
sub
xor
aas
mov
aas
fdivr
std
jo
dec
jg
jnp
push
jnp
pop
cmp
mov
popl
ljmp
jge
or
pop
jecxz
fimuls
fsts
xor
mov
xchg
cmp
add
xor
jecxz
adc
adcl
jo
or
xchg
pop
mov
out
dec
ficomps
daa
lret
xchg
pop
sti
and
lcall
sub
mov
push
jno
out
pop
push
mov
clc
out
movsl
adc
dec
test
cmpsl
fwait
loope
std
adc
xchg
xlat
lods
les
adc
negb
and
movsl
push
sub
and
dec
xor
mov
stos
scas
leave
test
push
push
std
loop
js
inc
xchg
cmp
fisttpll
cmp
inc
jns
cmc
mov
mov
rorb
pop
sbb
xorb
call
fisttps
loop
mov
cmc
pushf
and
movsl
inc
cmovns
ret
push
cmp
xchg
sbb
cltd
inc
cmp
add
sbbb
cmp
je
mov
cltd
mov
mov
or
fimuls
sbb
stos
push
mov
iret
sbb
out
scas
mov
add
push
mulb
stos
inc
add
fdiv
test
mov
inc
cld
testb
scas
or
jp
cli
mov
cmp
sub
cmp
fbld
cmp
and
test
mov
bound
popf
lock
rclb
jnp
push
push
mov
nop
push
loop
jg
out
mov
cmp
and
in
mov
ds
loope
dec
repz
cs
in
pop
xor
push
out
insl
pop
sub
in
xchg
adc
cli
fisubrl
add
sub
adc
fldt
out
roll
in
pop
int3
sbb
in
mov
movsl
je
fwait
cmp
test
cli
test
icebp
jecxz
rorl
pop
les
stc
xor
xchg
adc
adc
sbb
or
lods
std
call
mov
mov
sub
hlt
adc
inc
sahf
xchg
jp
and
jns
inc
push
mov
pop
and
push
aam
mov
outsl
mov
push
rcrb
inc
lahf
sbb
mov
jne
jecxz
xchg
daa
jne
and
popf
adc
hlt
push
xor
adc
lea
addl
jecxz
push
add
xchg
mov
xchg
or
ja
mov
cmp
sub
sbb
ss
xor
push
ja
stc
outsb
cmp
addps
sub
es
das
jns
xor
mov
int
insl
push
dec
mov
ljmp
pop
repz
mov
loope
cld
sbb
jne
dec
pop
in
fisubrl
arpl
mov
repnz
dec
jo
xchg
lret
add
and
pop
xchg
mov
xor
mov
lods
popa
jne
loop
mov
jae
adc
mov
add
mov
push
and
xchg
mov
mov
sub
pop
ret
mov
es
lea
pop
pushf
inc
mov
cld
pop
call
xchg
aaa
pop
lret
aad
xlat
sti
stos
push
stos
mov
fwait
decl
inc
pop
inc
inc
pop
xchg
push
push
xlat
push
add
loopne
cmpsb
popf
movsb
lcall
dec
dec
loopne,pt
out
mov
movsb
sbb
jo
call
rcrl
jle
mov
outsb
bnd
adc
lret
cld
adc
mov
outsb
ret
sub
sub
arpl
out
sahf
rolb
in
xor
xchg
out
xchg
adc
inc
ffreep
movsl
js
stos
or
testl
movsl
sahf
jbe
jmp
sbb
test
pop
mov
in
adc
mov
ret
lods
aad
sbb
xor
or
test
add
ljmp
push
sub
js
inc
scas
lock
sub
hlt
push
mov
popa
push
repnz
test
mov
in
or
sahf
clc
lret
sbb
es
or
push
and
in
mov
jge
inc
jae
stos
adc
dec
mov
mov
dec
mov
in
dec
ja
and
mov
push
leave
adc
test
mov
orl
fsts
xlat
ja
inc
and
inc
lds
and
fdivrl
movsb
popf
pop
xchg
mov
and
xor
bound
jo
dec
sahf
sahf
push
push
sahf
test
sub
pop
out
movb
cmp
in
mov
mov
mov
loope
pop
push
aas
lock
std
mov
sub
push
jbe
imul
in
jns
jnp
sbb
test
push
popf
bound
xor
mov
pop
adc
cltd
test
or
xchg
sti
adc
sbb
jmp
add
shrl
xor
or
xchg
hlt
or
xlat
jnp
push
fldt
ss
xchg
add
inc
inc
fdivl
mov
inc
andb
sar
in
movl
pop
iret
cmp
inc
jne
leave
jno
xchg
dec
out
mov
out
lret
xchg
fldlg2
fwait
inc
and
sti
xchg
jb
shll
lock
or
jno
push
or
mov
ss
cmc
dec
outsb
xchg
ficoms
in
fistpll
mov
mov
cld
outsb
and
and
inc
iret
pop
pop
sub
or
in
out
mov
adc
arpl
cmp
enter
sbb
outsl
and
fs
icebp
int
lret
outsb
jmp
dec
inc
fucomi
movlps
push
fistps
xchg
test
push
fsubl
lret
nop
push
repnz
enter
pop
sub
sub
lds
cli
sbb
rclb
push
jb
cltd
push
adc
orl
ss
cmp
dec
xor
decb
or
in
cmpsl
mov
xchg
sbbb
fucom
iret
sub
cld
ror
cmp
enter
lret
out
ja
cmp
out
imul
mov
sub
xchg
pop
pop
push
inc
test
daa
ret
jns
cmp
lock
lcall
stc
in
outsb
ror
jl
pop
es
dec
mov
lock
push
jle
push
cmc
fwait
cmc
sbb
push
sub
or
jne
and
inc
push
pop
imul
out
loop
pop
fmuls
push
push
insb
push
lret
adc
add
lods
popf
leave
push
cmpsl
sbb
out
rolb
in
test
mov
faddl
inc
xor
mov
push
mov
and
push
stos
mov
pop
lods
fidivrs
cmp
sub
push
les
sbb
mov
dec
rcll
dec
hlt
pop
loope
sub
ds
and
scas
or
int3
mov
jns
ret
or
mov
leave
inc
cmp
push
fcmovbe
insl
bound
insl
int3
push
sub
push
lds
sti
sbb
outsl
stc
sub
dec
stos
mov
fmulp
test
cmp
jp
insb
sbbb
rol
xchg
ds
mov
lds
lret
loopne
shlb
fmulp
test
xor
mov
stos
lods
or
sbb
and
pushl
lds
mov
or
insb
rorb
dec
pop
mull
mov
push
mov
sub
or
adc
fwait
pop
loop
xor
pop
shr
push
xchg
mov
popa
sti
cmpsb
sarb
fmul
iret
mulb
adc
outsl
aas
mov
inc
neg
dec
sub
cmp
loope
pop
adc
sub
in
fisttps
adc
jns
pop
push
test
das
addl
pushf
cmp
sbbb
sub
cmp
gs
mov
cmpsb
pop
mov
dec
xor
mov
in
dec
and
pusha
pop
cmc
jo
aas
push
bound
lock
or
xchg
jno
outsb
loope
pop
jge
out
push
rolb
popf
outsb
sub
inc
sbb
fwait
xchg
and
andb
dec
or
add
cmp
mov
shlb
das
cmpsl
test
sub
and
or
pop
or
jecxz
jnp
out
pop
mov
out
push
ss
mov
js
cmp
mov
push
daa
fisttpll
push
imul
ret
xlat
push
jmp
xchg
dec
jnp
test
call
sahf
mov
popa
jp
jg
or
sbb
bound
ljmp
movsl
inc
fnstenv
enter
xor
out
fildll
xor
sub
xlat
mov
cmp
sub
add
pop
xlat
out
roll
xlat
outsl
enter
push
push
add
xchg
sub
pop
dec
nop
fs
push
imul
sbb
lret
adc
cmp
adc
push
fsubp
lods
out
stc
popa
pop
push
mov
ja
fistpll
nop
sti
shrl
mov
jbe
ss
ss
int3
xchg
xchg
mov
test
or
sub
call
dec
stos
pop
insl
sub
sub
cmpsb
jmp
sahf
xchg
xchg
lds
inc
int
and
mov
sbb
dec
inc
lods
or
loope
pop
cmp
call
sub
push
aas
imul
mov
sbb
loope
int3
pop
pop
mov
xchg
inc
pop
addr16
sarb
xchg
lret
aam
call
lods
fiadds
inc
bound
out
sbb
dec
popa
lret
jno
xorb
jns
xchg
call
test
jae
jp
mov
xlat
sub
je
push
and
nop
and
jae
xor
mov
mov
rolb
test
xor
sub
sbb
fistps
push
pop
xchg
jae
pop
xor
scas
stos
xchg
xor
jg
dec
pop
mov
fimuls
nop
add
inc
push
cmpsb
adc
or
pop
push
add
or
mov
xchg
movsl
out
cli
add
push
pop
mov
mov
mov
jl
pop
and
rcll
jns
mov
sub
cmpsb
xchg
xchg
push
cmp
jnp
out
je
pushf
popa
xor
mov
je
js
cmpsb
lea
lahf
call
push
movsb
add
bound
push
movsb
mov
inc
pop
cld
xor
dec
call
mov
xchg
mov
add
and
pop
sbb
jle
stos
out
loop
mov
out
loopne
test
movl
cmp
stc
cmp
jae
mov
test
clc
mov
enter
jns
push
adc
mov
pop
mov
and
mov
xor
loopne
ja
inc
imul
mov
mov
fwait
jg
xlat
pop
cmp
pop
mov
inc
or
inc
push
mov
and
add
cmc
jl
cltd
push
mov
insl
inc
test
fstpl
and
push
inc
fsts
or
test
jae
lods
imul
inc
lret
jmp
iret
cs
inc
adc
nop
and
pop
out
sub
push
adc
and
test
mov
movsb
adc
pop
or
and
loopne
mov
xchg
adc
xchg
movsb
mov
fldcw
test
mov
out
gs
cmp
pop
ds
int3
sar
sbb
call
ret
jo
lds
or
ljmp
xor
add
pop
pop
cmpsb
mov
cmp
add
cmp
cmp
sub
dec
dec
sub
in
jnp
adc
and
mov
mov
dec
jmp
fistl
jecxz
fwait
dec
sub
xor
scas
push
dec
insl
or
out
cmp
mov
fidivl
sbb
fsts
mov
mov
jb
sbb
pushf
mov
sbb
pop
inc
rolb
scas
push
cmp
push
mov
push
sub
into
dec
or
push
mov
xchg
push
dec
in
cmp
rcrl
and
jmp
fimull
ror
xor
lock
mov
sbb
xor
dec
push
pop
int3
repnz
lret
fstps
stc
cmp
insb
ret
cmp
pop
push
or
fs
int3
je
dec
lods
loopne
cmc
push
int3
mov
les
add
pop
xchg
sar
shl
adc
dec
scas
dec
xorb
call
xlat
lret
pop
loopne
lcall
clc
pop
mov
pop
adc
xchg
cwtl
push
ficomps
push
mov
loopne
cmp
ficompl
fcmovu
mov
scas
dec
mov
fnstsw
mov
addl
cli
shlb
cld
mov
jecxz
adc
pusha
test
jecxz
call
fdivp
pop
cmc
lahf
lret
push
and
push
icebp
daa
iret
xchg
inc
adc
bound
mov
sub
orb
loope
das
int3
imul
mov
pop
loope
pop
xor
scas
cmp
out
push
cltd
xor
outsb
xchg
test
insl
mov
pmulhuw
scas
push
cmp
scas
imul
inc
or
add
and
inc
cmp
or
data16
pop
loope
inc
aad
mov
or
inc
fbld
aam
xchg
mov
push
xor
push
out
sbb
fimuls
cs
mov
mov
cmp
jp
je
out
pop
idivl
jecxz
inc
mov
inc
push
xchg
pushf
outsl
scas
dec
or
mov
sub
ja
sbb
das
es
pop
mov
je
orl
pop
inc
adc
adc
adc
std
scas
cwtl
push
fldcw
cmp
mov
xchg
cmp
and
and
mov
xchg
xlat
sti
or
outsb
or
ret
in
fildll
outsl
push
mov
dec
sbb
ds
imull
dec
pop
lods
lock
or
cs
std
rorb
decb
push
jnp
cmc
subb
out
punpckhbw
call
sahf
das
dec
mov
daa
cli
push
movsb
inc
dec
xchg
neg
sub
bound
mov
out
lret
cld
sbb
xchg
pop
push
popa
pop
xchg
and
stc
mov
lock
jae
stc
bound
into
or
push
and
aam
sub
cmc
xchg
add
test
ljmp
sub
test
or
lret
in
ja
ss
ret
xchg
jp
cltd
mov
sbb
cmp
or
mov
jg
dec
into
inc
mov
loop
scas
or
lods
lret
jno
mov
ja
adc
mov
xchg
fmull
sub
cwtl
fiadds
pop
push
mov
cltd
in
out
inc
mov
mov
xor
add
adc
or
sahf
and
jge
push
add
jge
mov
sbb
mov
lods
sahf
scas
es
and
jp
pop
adc
fadds
stos
test
lods
mov
or
mov
shll
push
sub
leave
jp
rol
mov
xchg
sbb
jmp
push
cmp
shlb
sbb
das
mov
or
pop
adc
mov
mov
ret
pop
xchg
es
push
ds
loope
jmp
or
jb
js
adc
lds
xchg
xchg
adcl
lock
xlat
ljmp
pop
mov
mov
lea
dec
mov
sbb
ljmp
cmp
gs
out
dec
repz
popa
sbb
mov
inc
sbb
xchg
push
and
pop
push
jae
pop
cmp
push
rorb
cmp
jnp
push
sbb
push
adc
insl
neg
sbb
icebp
inc
jae
clc
out
imul
es
inc
in
xchg
mov
repnz
cld
mov
mov
cmp
insl
mov
js
jmp
int3
aas
xor
mov
gs
dec
xor
popa
cld
bnd
or
mov
and
xor
pop
icebp
xor
jg
insb
dec
jnp
and
into
int3
pop
xor
vandnps
aad
xor
cli
mov
xchg
pop
sahf
int3
inc
iret
repz
sub
cs
pop
sub
push
push
stc
bound
pop
inc
pop
and
enter
sub
sbb
lcall
rcrl
stos
sbb
jo
xchg
push
xor
frstor
test
cmpsb
lods
ja
lock
mov
xchg
scas
xchg
out
cmp
ss
fstl
dec
dec
mov
ljmp
xor
cmpsl
push
lock
outsl
jecxz
push
jbe
cld
inc
das
xor
xchg
push
cmp
cmpl
addl
sub
lock
jnp
jmp
pusha
iret
jg
dec
jl
out
pop
lahf
add
sub
mov
rol
or
loopew
dec
mov
in
or
mov
popa
out
rclb
fcoml
and
fcmove
xchg
mov
sub
outsb
in
cld
loop
jp
mov
pop
scas
adc
push
xchg
pop
test
fldz
cmp
pop
add
xchg
jns
jle
or
pop
push
mov
fldcw
fstpl
out
jge
mov
out
ret
mov
clc
or
pop
inc
ja
les
dec
or
add
mov
sti
push
outsb
mov
mov
jmp
into
and
cli
jo
int
and
mov
jnp
lea
stos
xor
leave
inc
notb
movsb
xchg
cmp
movl
sub
add
or
pop
lahf
pop
push
test
lret
push
aam
mov
pop
int
jbe
mov
fldcw
xlat
push
pop
ret
ja
mov
cmp
ljmp
adcl
push
mov
clc
ret
aam
pop
pop
lock
add
cmp
scas
sbb
or
mov
fcompl
xchg
test
lods
out
mov
push
sbbl
mov
fcomip
and
cwtl
ja
popa
in
or
aaa
cli
dec
test
and
movsl
push
dec
xor
ret
shl
jo
or
adc
mov
imul
mov
nop
in
jnp
test
jb
adc
jp
arpl
jge
int
pop
dec
add
jecxz
push
mov
lahf
fcom
scas
adc
rolb
loope
xchg
adc
mov
enter
pop
sahf
lcall
push
cs
movl
cwtl
cmc
mov
ret
or
rcl
int
lds
es
sbb
mov
jo
add
mov
sbb
pop
pop
fs
dec
xorb
and
stos
inc
adc
insl
adc
pop
icebp
xor
ret
shll
lods
data16
and
pushf
xor
loop
movsl
jne
jne
andl
leave
out
sub
int3
dec
push
outsb
add
jo
inc
push
pop
mov
scas
enter
out
decl
cmp
int
mov
mov
shrb
pushf
fs
adc
in
cwtl
xor
lret
jecxz
add
and
lcall
adc
push
push
jg
inc
and
aam
addr16
push
jmp
cmp
sti
idivl
movsb
gs
arpl
shrb
mov
out
adc
pop
xchg
jmp
testl
addl
xor
cwtl
je
inc
add
and
test
scas
inc
inc
xchg
aad
lods
sub
test
mov
push
into
shll
outsl
add
fwait
pop
and
lret
add
mov
push
ja
sti
adc
jmp
xchg
pop
jbe
xor
daa
or
aad
nop
fs
cltd
sahf
inc
push
add
arpl
jge
in
mov
mov
pushf
loop
andb
dec
xor
adc
dec
push
pushf
aaa
push
mov
mov
adc
bound
and
adc
pop
jle
sbb
daa
je
dec
adc
bound
imul
ret
dec
pop
inc
mov
cmp
lock
adc
inc
mov
sbb
dec
clc
push
add
xlat
push
xor
push
cli
push
nop
fisubrs
ror
and
test
movsl
popf
adc
jb
push
push
adc
stc
cmpsl
jo
jo
and
mov
jb
hlt
fucomp
inc
sub
inc
mov
jne
push
jecxz
sbb
leave
stc
push
mov
sub
fs
cmp
or
in
mov
movsb
lods
and
mov
inc
push
sbb
imul
mov
insl
stc
xor
inc
arpl
add
xor
add
aam
push
decb
sbbb
mov
cwtl
adc
pop
daa
leave
dec
push
inc
movsb
mov
outsb
push
in
scas
insl
pop
mov
fdivrp
outsl
repnz
jne
inc
outsb
outsl
mov
gs
xchg
cmpps
sbb
bndmov
or
lock
shrb
or
aaa
sub
inc
inc
ljmp
std
jnp
cltd
rcl
scas
push
mov
lods
std
push
push
inc
mov
mov
sub
into
leave
das
movsb
dec
sbb
and
or
cmc
call
mov
and
lock
jp
sub
push
sub
testb
mov
gs
mov
xchg
shrl
cmp
or
fmulp
push
popf
imul
xor
and
or
jb
leave
mov
sbb
add
movsl
sarl
xor
xchg
dec
mov
or
dec
cmp
pop
xchg
out
repz
xlat
das
ja
aad
pusha
sub
jae
mull
inc
fists
cwtl
ljmp
leave
stc
xor
rcll
out
and
stos
fdivrl
pop
scas
push
xor
ljmp
lahf
popf
iret
or
fdiv
daa
push
adc
pop
popf
mov
jne
or
sbb
or
aas
int3
xchg
lret
popf
pop
cmp
jno
cltd
mov
filds
sti
xchg
in
push
jmp
ret
dec
cwtl
int3
pop
add
call
adc
movsl
adc
dec
xor
adc
scas
in
js
xchg
lret
push
pusha
ljmp
jno
out
sub
xor
fs
dec
inc
push
inc
enter
call
lock
mov
jecxz
cmpsb
mov
jno
pop
or
in
in
int
mov
inc
xor
dec
cwtl
cs
sbb
insl
mov
rcl
std
xchg
mov
lock
or
push
popf
mov
mov
sub
jmp
gs
mov
in
adc
dec
cmpsl
jbe
ja
adc
shll
xchg
and
cmp
mov
inc
ds
push
push
clc
cmp
call
or
xchg
sub
or
sbb
xor
jb
jp
test
sub
cmp
mov
rolb
mov
xchg
sub
dec
jl
cltd
add
and
mov
mov
and
push
ljmp
inc
pop
and
mov
scas
imul
daa
shrl
mov
cmp
loopne
xor
ds
fwait
add
mov
mov
mov
addr16
jbe
add
les
dec
ljmp
xor
das
subl
repnz
aam
mov
imul
xor
adc
pop
xor
jno
rcll
mov
lds
fs
xchg
cmp
call
repz
or
cmp
xor
insb
sbb
loope
add
pop
daa
add
or
mov
pop
lret
and
bound
add
fldenv
fildl
enter
sbb
stc
and
mov
ja
shlb
add
jo
xchg
xchg
xchg
in
inc
adcb
xor
rcrl
fcmovu
jle
ret
in
mov
into
test
cmp
fcmovnu
push
mov
pop
pop
sbb
inc
mov
sub
jns
aad
jb
mov
xor
stos
xchg
hlt
scas
cmpsb
jo
imul
cmp
insb
decb
lret
loopne
or
gs
dec
lods
inc
xor
aam
pop
pop
cld
loope
dec
pushf
mov
ss
clc
or
and
aaa
and
in
fisttps
xor
adc
lahf
jbe
add
sub
inc
call
loopne
and
sbb
mov
add
adcl
xchg
jle
cmc
lret
movups
cmp
jg
mov
mov
dec
sub
inc
xorl
pushf
adcb
stos
imul
inc
pop
xor
shll
jecxz
xchg
imul
pusha
sub
cmp
outsb
jo
popf
or
push
imul
jmp
jle
loop
jnp
xchg
cmp
xor
push
and
ret
inc
push
xor
shrl
mov
push
loope
in
jg
cwtl
jno
sbb
sbb
fwait
out
xor
leave
xlat
les
xchg
sahf
fs
stc
jl
stos
push
add
pop
outsb
movsl
mov
gs
pop
stos
jne
mov
adc
and
add
jnp
mov
int3
inc
adcl
je
pushf
cmc
pop
inc
movsl
mov
inc
mov
lcall
push
test
mov
sub
push
shl
insl
xor
lods
mov
es
ret
dec
xchg
dec
xchg
stc
adc
lods
cmp
in
adc
lock
movsl
xor
ret
or
sbb
and
push
push
pushf
aad
push
mov
add
into
pop
xchg
test
and
push
popf
mov
daa
mov
inc
aam
add
mov
int3
pop
out
popf
pop
cmpb
call
testb
iret
mov
and
std
xchg
pop
sbb
inc
scas
add
jecxz
xchg
comiss
test
mov
es
xor
and
xchg
push
push
ljmp
icebp
loope
jb
adc
lret
jmp
nop
das
adc
pop
jbe
inc
or
scas
adc
stos
mov
out
ret
adc
das
repz
rcl
enter
lea
decb
ljmp
add
cmp
or
imul
xor
jb
cmpb
jne
stc
mov
jbe
fs
dec
cmpsb
stc
outsb
dec
leave
lea
inc
mov
sbb
xor
lahf
in
test
pop
aaa
pop
aad
std
enter
cmc
pop
mov
jge
insl
inc
es
pusha
push
push
add
notl
cmp
add
mov
mov
push
sbb
rcrl
icebp
test
pop
shlb
push
or
int3
xor
add
fwait
mov
js
inc
aad
pop
jns
dec
dec
lcall
cmpsl
fucomp
push
mov
add
roll
or
fdivrs
or
jb
aad
shrl
and
mov
cld
jge
ficomps
jae
int
pop
cmpsb
inc
sahf
int3
aam
addr16
xchg
stos
sub
ror
insb
jge
add
push
inc
pusha
mov
or
mov
mov
es
pushf
lret
in
mov
dec
orl
pop
jl
cwtl
mov
cmp
cmp
mov
stos
lods
imul
scas
jle
mov
movq
dec
addr16
movsl
repnz
mov
fldl2t
push
out
mov
push
xchg
inc
adc
insl
aad
out
dec
mov
inc
fldt
out
or
in
xchg
shll
pop
test
fidivs
mov
sub
sbb
and
ss
mov
push
ljmp
xorl
or
xorl
pop
cmp
mov
xor
push
sbb
push
in
mov
mov
dec
jecxz
xor
dec
fidivrl
inc
jbe
xchg
mov
inc
repnz
sub
into
xchg
incl
hlt
xor
rcrl
sub
mov
or
jne
jl
or
inc
test
outsl
popw
test
sti
lea
push
out
mov
cmpsb
push
add
ret
pop
mov
push
add
dec
xchg
jo
jge
mov
xor
mov
xor
sbb
pop
sbb
adc
and
test
dec
movsb
jecxz
dec
adc
inc
je
std
stc
subl
pop
sbb
leave
stos
test
fwait
mov
push
rclb
jb
cmpsl
jns
lods
das
fsubl
sub
iret
push
inc
fistpll
xchg
addr16
or
mov
sti
dec
inc
stos
sub
pop
or
sbb
cmp
sar
nop
sbb
sub
dec
jecxz
sbb
mov
addr16
mov
icebp
push
pop
jb
mov
das
push
sub
pop
pop
into
cmp
aad
iret
adc
inc
adc
scas
dec
xor
mov
add
and
push
rclb
iret
es
fmull
mov
fdiv
mov
push
cmp
push
repz
sub
rcr
imul
jb
xchg
mov
shrb
sbb
test
jmp
cmpsb
cmc
scas
lods
jno
jb
je
mov
jno
mov
mov
pop
add
lods
inc
test
adc
jl
ja
jnp
mov
pop
sti
rorl
mov
addr16
push
outsb
add
test
lret
push
dec
push
ficoml
inc
lcall
rol
call
pop
inc
xchg
outsl
and
imul
adc
jbe
js
pop
add
pop
rorl
in
out
fisubs
pop
push
loopne
and
stos
jno
sbb
inc
sahf
fisttpl
aaa
sub
ss
popf
sahf
push
mov
adc
mov
jne
mov
inc
pop
lods
adc
mov
js
cmp
mov
movsl
cmc
add
cmpsl
clc
xchg
in
push
push
fisubrs
dec
out
and
int
insb
and
ss
inc
sbb
pushf
lcall
sbb
test
fs
les
fsubs
movb
lock
xor
inc
xor
mov
pop
test
outsb
jns
xlat
js
ret
mov
mov
pop
dec
mov
sub
mov
or
inc
mov
cli
or
fscale
push
popf
jp
inc
mov
icebp
inc
outsl
mov
and
fs
cmp
out
lods
stc
test
movsl
dec
out
or
lret
mov
lea
std
lahf
arpl
outsl
push
daa
dec
insb
cmp
mov
xor
mov
jnp
adc
iret
add
sub
cs
push
clc
hlt
sbb
out
inc
xor
mov
jbe
and
into
push
sahf
addr16
in
adc
jo
adc
call
mov
mov
cmc
fldt
push
sbbl
shlb
adc
call
fnstcw
sbb
mov
les
inc
and
and
insl
je
xor
call
aad
jecxz
cmp
xorb
jmp
jmp
jecxz
loopne
mov
cmpsl
std
dec
jge
in
bound
insb
mov
add
insb
add
and
scas
int
loop
or
add
dec
mov
popf
push
mov
or
jmp
and
mov
test
fisttpl
xlat
inc
repnz
in
sub
and
xor
repz
sarb
insl
xlat
pop
xchg
addr16
pop
fdivl
pop
cmp
dec
mov
cld
popa
fcompl
ds
out
test
das
dec
jae
push
push
push
push
add
jns
jecxz
inc
daa
data16
faddl
lds
in
pop
push
repz
xlat
ret
cmp
xor
fsubp
lcall
sub
rcr
inc
dec
repnz
inc
testl
aaa
sbb
fmul
je
pusha
test
test
pop
dec
sbb
lahf
or
push
push
adc
int3
sahf
movsl
xchg
and
pushf
add
push
add
inc
pop
xlat
les
jno
jecxz
in
sub
lret
jnp
mov
dec
cmc
and
sub
loopne
jp
or
fmul
jmp
xor
xor
mov
movsl
dec
inc
test
loope
out
mov
push
shl
xor
pushf
out
cmp
js
outsb
cli
aas
or
pusha
add
out
pop
or
pop
test
pop
imul
inc
les
in
xchg
pop
sub
scas
cli
dec
mov
pop
and
push
mov
sub
pop
dec
push
mov
pop
fmuls
jae
xchg
push
xchg
or
fcmovne
mov
data16
das
xor
push
and
pop
rclb
test
int
xor
fldcw
mov
sbb
loope
cmpsb
sti
mov
loop
pop
in
rcrl
jp
shlb
adc
movsl
into
pop
inc
adc
adc
jp
ljmp
mov
ficoml
pop
or
pop
cld
movsl
and
dec
and
cli
mov
mov
sub
jb
mov
neg
mov
and
add
sub
push
mov
testb
add
dec
cmp
adc
stos
ficoms
xor
sbb
pushf
mov
pop
jp
xchg
je
aas
out
in
loop
jecxz
lods
loop
divb
loope
insl
stos
add
push
ret
sub
pop
clc
movsl
jnp
iret
inc
add
ljmp
pop
adc
pusha
insl
imul
add
push
or
sub
cld
jp
pop
mov
addr16
mov
nopl
jo
dec
loope
adc
movsb
stos
jns
repnz
repz
pop
daa
mov
push
inc
jns
pop
jo
dec
mov
xor
xor
aad
xchg
pop
sbb
insl
popa
out
mov
outsb
jns
out
mov
shlb
pop
test
inc
cmpsb
cld
cmp
lock
sub
inc
mov
inc
mov
sbb
lahf
mul
inc
mov
add
add
icebp
adc
push
xchg
jb
mov
data16
and
stos
adc
and
and
pop
adc
cmp
inc
mov
xor
xchg
addb
add
add
cmp
cltd
insl
sbb
pop
lods
mov
dec
inc
pop
mov
out
dec
pop
add
mov
mov
xor
aaa
and
jns
lahf
sbb
lock
sbb
sarl
push
fcmovbe
mov
adc
fisttps
mov
dec
shlb
and
mov
push
insb
aam
test
jge
mov
dec
jle
flds
pushaw
push
lods
movsl
pop
outsb
in
cmp
fcomps
mov
lods
movsb
or
pop
fcomip
dec
enter
std
xchg
test
out
test
mov
stos
push
std
xor
jmp
adc
sbb
xchg
mov
mov
dec
xlat
into
jbe
mov
test
xchg
das
cmp
cmc
pusha
inc
ljmp
dec
mov
xchg
adc
test
xchg
fs
jae
xor
addr16
fadd
jg
xchg
xchg
ljmp
and
dec
scas
jns
sub
push
mov
and
lock
push
and
data16
jecxz
jge
movsb
add
dec
insl
in
push
sub
std
sbb
mov
pop
push
insb
adc
xchg
shl
fstl
js
push
loopne
and
jge
or
sub
ja
mov
fwait
divb
sub
rolb
sbb
inc
stos
pop
imul
mov
call
xchg
push
icebp
pop
inc
scas
fsubl
or
inc
cmp
rcrb
rcll
das
icebp
imul
push
outsl
cmp
sub
jle
lods
jge
or
test
test
out
inc
add
loopne
popa
fwait
jecxz
rcrl
pop
mov
ds
dec
shlb
subb
cmp
iret
pop
sub
ret
jnp
aaa
sbbl
pop
clc
jae
cmp
mov
in
nop
sbb
test
arpl
imul
into
sahf
stc
xchg
idiv
fs
pop
mov
push
xor
lds
xchg
push
ss
cmp
jo
popa
ss
out
or
negl
mov
push
sub
sbb
push
pop
pop
imul
push
jg
or
mov
xchg
push
inc
cmp
and
cmp
sub
std
adc
cmc
add
xchg
adc
jne
dec
mov
mov
iret
addr16
push
ret
shll
pop
dec
iret
or
xor
ljmp
jbe
insl
pop
cld
inc
fisubl
in
or
push
mov
xchg
gs
sub
inc
jb
test
pop
sbb
or
movsb
jbe
pusha
outsb
negl
sub
or
or
push
inc
cmp
adc
popl
pop
bound
or
mov
sti
loop
jnp
mov
pushf
mov
push
mov
in
in
out
mov
loopne
insb
sub
mov
xchg
inc
lret
pop
inc
notl
cmpsb
mov
jge
sub
imul
ljmp
push
xchg
mov
push
dec
arpl
xchg
sarb
xor
cwtl
dec
inc
cmp
or
je
pusha
jp
adc
and
pusha
divb
inc
insb
mov
negb
test
adc
push
pop
sbb
clc
shr
cmp
aas
cmp
xor
jp
push
pop
cmpl
cmc
in
aad
lds
sti
lret
sub
push
clc
movsl
adcl
cmp
insl
pusha
loope
call
sub
or
loop
mov
adc
fmulp
mov
cmc
ja
call
sub
or
inc
mov
shl
dec
insb
sbb
cltd
mov
std
fisttpll
push
dec
rol
aaa
fisubrl
cli
mov
pusha
fldenv
xchg
mov
push
and
nop
push
sbb
int3
orl
cli
adc
xlat
push
add
jb
je
and
push
outsb
imul
xor
xchg
ljmp
icebp
dec
jnp
sbb
dec
inc
rcl
jns
inc
cli
adc
in
sub
push
inc
pusha
push
inc
into
int3
mov
inc
push
cmp
cmpsb
xchg
mov
mov
in
scas
cwtl
cmp
push
add
nop
and
fisttpll
lods
dec
std
cmp
test
and
pop
fimull
pop
imul
pop
jae
fucomp
push
cmc
or
jae
lods
movsb
add
mov
sti
jo
push
xor
dec
popf
fcom
out
push
iret
outsb
out
sbb
push
inc
mov
loopne
push
mov
inc
jmp
mov
out
pop
add
and
imul
jg
inc
in
fucomp
das
rcl
test
cmc
mov
mov
jb
test
jae
mov
cmp
xor
jnp
loop
cmpsb
or
iret
and
nop
mov
pop
sbbl
mov
fists
aas
push
adc
mov
enter
inc
notl
cmc
jbe
leave
jo
push
insl
or
dec
adc
daa
aaa
push
pop
add
pop
jmp
les
pusha
aaa
lock
in
mov
pop
hlt
sub
xor
out
dec
icebp
jo
das
cmpl
cmpsb
inc
sub
sbb
js
cli
or
mov
jmp
lret
shlb
shrl
xor
mov
insl
mov
in
or
and
lcall
xor
dec
idivl
lds
and
test
mov
jb
xor
out
add
xor
xorl
or
or
out
jno
xchg
test
lcall
mov
mov
mov
gs
mov
data16
repnz
sbb
adc
and
xchg
jae
dec
add
lods
inc
xor
es
ds
jg
insl
mov
adcl
scas
push
mov
push
lcall
mov
stos
pop
sub
sub
dec
xor
add
dec
sbb
lret
ret
and
sarl
cmp
ret
je
push
addb
sub
repz
xchg
lret
jo
and
cmpsb
mov
and
imul
cmp
push
jle
mov
mov
mov
lock
arpl
in
icebp
adc
shr
mov
jp
loope
mov
and
mov
aas
mov
push
leave
pop
scas
cmpsb
mov
outsl
adc
add
jp
lahf
add
sub
shlb
sbb
shlb
dec
mov
push
pusha
sub
loopne
mov
or
iret
mov
add
add
inc
or
sub
xchg
mov
mov
cmp
cwtl
mov
pop
data16
adc
mov
pop
fbstp
repz
push
and
vcvtsi2sd
inc
repz
stos
mov
dec
jb
sub
into
sub
ss
xor
inc
bound
and
cltd
sahf
int3
ljmp
pop
push
adc
and
outsl
add
cmp
adc
cmpsb
push
mov
stc
jmp
cmp
in
arpl
xlat
shll
xchg
nop
fdivl
xor
and
sub
mov
push
cmp
sbb
xchg
and
lret
sahf
rol
in
xlat
mov
sub
xchg
push
daa
dec
jmp
sbb
sbbb
adc
stos
mov
dec
xlat
cmp
jnp
mov
movb
fxam
jno
mov
or
shl
outsl
push
jmp
cli
add
jmp
fstpl
cli
mov
cwtl
cld
lock
arpl
xor
clc
or
daa
test
pusha
pop
sbb
js
push
push
push
sbb
or
loop
xor
or
lock
jecxz
and
jge
fnstenv
aad
mov
popa
test
and
lcall
mov
mov
bound
dec
add
daa
loopne
mov
and
aaa
std
movsb
in
xchg
push
and
stos
stos
mov
xchg
jl
add
les
insl
jb
int
addr16
testb
xorl
cmc
fs
add
inc
adc
dec
stos
aam
push
andl
dec
add
cmc
pop
je
jne
push
nop
push
ret
ret
jecxz
jmp
lret
xchg
jecxz
mov
imul
fcoml
cltd
xor
sti
push
insb
in
pop
xchg
mov
or
mov
add
fildll
sarb
mov
leave
aad
mov
int
cld
and
xchg
popf
or
test
arpl
and
add
ljmp
imul
cmpsl
mov
scas
push
or
idiv
push
rclb
ror
pop
test
sbb
inc
cmpsb
ja
inc
insl
add
cmp
lret
push
roll
call
adc
push
inc
mov
enter
nop
in
popf
pop
sbb
or
jg
xor
mov
xchg
mov
fadds
jge
repz
pop
mov
add
sub
and
add
xchg
pop
adc
arpl
ficoms
ja
sti
mov
adc
cmc
fdivl
je
cmp
test
add
sub
andb
aaa
sbb
mov
mov
das
mov
and
lret
lcall
sbb
jb
adc
mov
rcll
cwtl
pop
mov
pop
mov
jl
jae
jne
xchg
ret
pop
sahf
cwtl
std
dec
jo
push
repz
xchg
pop
adc
clc
mov
mov
or
outsl
in
jmp
push
sbb
jge
pusha
dec
pop
movsb
ss
jecxz
pop
cld
push
loop
inc
nop
cld
aaa
into
rorl
or
test
or
lahf
jbe
stos
cmpsl
cld
sbb
adc
cmp
cmp
sbb
pop
jns
bound
jae
in
push
dec
popf
mov
stos
xorb
sar
mov
dec
xchg
lret
pop
jle
jl
psubusb
and
adc
lahf
add
sbb
test
jbe
pmaxsw
hlt
idivb
cmpl
ficomps
xchg
movsb
mov
rol
sbb
hlt
push
push
insb
pop
mov
dec
mov
outsb
sbb
jecxz
aaa
loopne
push
adc
cmp
and
shll
cmovns
jl
rorl
push
add
fcompl
jnp
mov
sarl
xchg
lret
and
and
into
ja
dec
cmp
cmp
icebp
xchg
aas
sub
ja
sub
call
jecxz
rcrb
ss
cltd
or
mov
and
mov
mov
pusha
push
mov
pop
lcall
xor
adc
icebp
xor
cwtl
out
loopne
jns
pushf
xor
out
add
pop
lret
lret
fsubl
test
sahf
pop
out
negb
jg
add
addb
inc
dec
addr16
cli
data16
sbb
sbb
cmpl
dec
inc
fildll
es
pop
mov
sub
shr
mov
negl
push
nop
iret
aas
dec
jne
mov
call
scas
jb
xchg
pusha
mov
or
dec
loop
fst
xor
sbbl
in
out
out
jg
xchg
je
sbb
les
rclb
and
cmp
pop
rclb
insl
mov
adc
xchg
jnp
xor
loop
jle
iret
cs
sahf
push
add
pop
into
iret
push
sbb
adcb
je
mov
pop
jp
mov
xchg
dec
movsb
push
inc
shll
out
ja
sub
mov
ror
push
cli
bound
mov
sbb
push
inc
enter
insb
push
insl
adc
xor
adcb
sbb
push
dec
fildl
rclb
cmp
repnz
mov
sub
out
dec
sahf
loop
nop
jl
pop
jbe
jge
hlt
inc
push
jecxz
and
aas
cmp
mov
dec
icebp
leave
or
addr16
je
movsb
testb
pusha
call
in
add
and
and
or
dec
ljmp
jmp
cwtl
popw
sub
mov
lret
loop
iret
adc
inc
dec
fsubrs
das
xchg
push
icebp
cmp
sub
jb,pn
lcall
or
cmp
inc
cli
js
mov
getsec
cmpsb
jl
pop
adc
loope
cmc
push
int
adc
jle
sub
dec
cmp
pop
sbb
or
repnz
addr16
adc
xchg
cmp
mov
aam
and
das
outsb
pop
inc
and
pusha
inc
test
cmpsl
inc
xor
insb
sarb
sbb
stos
ret
subl
pop
mov
and
sbb
insl
divl
push
or
je
sbb
nop
adc
cmp
adc
lods
bnd
mov
adc
lea
leave
jbe
mov
lock
dec
jle
push
sahf
jnp
pop
cmp
dec
adc
push
xor
fistl
outsb
inc
cmp
add
mov
in
xor
inc
mov
lar
out
cmpsb
mov
es
out
js
and
negl
jecxz
movsb
mov
arpl
enter
jge
mov
mov
insb
push
in
push
mov
ret
outsb
pop
mov
and
xchg
lret
imul
jp
dec
and
push
sbb
ror
loopne
stos
jno
dec
and
clc
dec
xchg
cwtl
mov
stc
and
clc
push
iret
pop
add
insb
nop
aas
ja
sbb
pop
cmp
sbb
sub
cmpsb
xor
pusha
sub
mov
js
dec
sbb
outsb
inc
adc
xor
cmp
xchg
push
imul
add
into
dec
mov
or
add
dec
add
lahf
inc
gs
adc
jne
dec
push
ret
outsb
out
insb
dec
cmp
push
sti
sub
lea
mov
push
test
popf
xchg
sub
fisttpl
in
mov
cmp
jbe
or
sub
and
pop
aam
lock
jo
xor
push
loope
jge
dec
fistpll
or
roll
and
imul
sarl
add
je
gs
or
adc
sbb
sub
cs
add
aas
push
push
push
push
inc
dec
mov
push
pop
in
mov
push
dec
or
add
iret
insb
out
imul
cmp
rol
push
sbb
incl
xor
lock
testl
jle
fldt
lret
push
sbb
movsb
in
fwait
pusha
cmpl
and
sbb
and
out
fsubs
call
stos
and
aam
fdivl
sub
cmp
sti
in
bound
fisttps
or
loop
pop
sub
cmovg
pushf
mov
jmp
mov
sbb
jmp
inc
lock
or
scas
mov
mov
xchg
call
push
xchg
mov
scas
fdivrs
jns
aad
sti
lds
mov
xor
add
mov
dec
lea
gs
dec
add
popa
jno
pop
jl
lsl
sub
das
mov
cmpsb
push
push
stos
ret
cmp
or
je
sub
mov
int
mov
push
mov
in
push
inc
cltd
dec
loopne
out
dec
jg
shlb
fisttps
loope
std
mov
push
neg
aaa
sub
neg
pop
shlb
jbe
inc
ret
movsb
cmp
sub
loopne
jecxz
imul
fwait
push
arpl
inc
or
nop
mov
in
and
dec
fists
jbe
pop
mov
add
ret
mov
push
lret
inc
shrb
test
dec
orb
cltd
nop
or
jecxz
mov
test
dec
rcll
gs
in
and
inc
mov
cmpsb
or
inc
aam
xchg
mov
add
repnz
nop
arpl
popa
cld
inc
mov
sub
mov
mov
repnz
das
in
mov
or
and
xchg
dec
icebp
and
loopne
mov
test
notb
mov
je
popf
cli
push
xor
sahf
popf
and
idiv
clc
pop
push
cmp
xchg
xchg
push
dec
sub
and
je
mov
mov
test
ja
rolb
adc
out
fcmovb
inc
pop
cmp
insb
sbb
data16
lods
sub
mov
push
jbe
lods
add
les
pop
loop
shrl
jecxz
aad
shlb
in
mov
add
sbb
andl
cld
mov
dec
js
push
mov
dec
mov
das
or
addps
push
insl
add
mov
pusha
lea
mulb
cmp
sub
pusha
fwait
xor
sub
mov
xchg
mov
xor
sbb
cmp
stos
mov
mov
sub
arpl
fs
and
mov
mov
adc
jo
in
mov
insl
mov
push
push
pop
mov
dec
dec
pop
inc
mov
or
sub
xchg
je
push
jp
pop
fmulp
insl
mov
cld
inc
test
loope
and
mov
push
enter
pop
pop
cltd
mov
into
cli
stos
xorl
push
jo
push
mov
pop
xchg
nop
sub
gs
dec
mov
cmp
lea
fs
rorl
jle
outsl
fisubl
mov
jnp
push
push
xchg
jge
jecxz
rorb
int3
jmp
jp
cmp
loop
stc
push
sbb
xor
mov
lret
call
mov
jl
dec
pop
loop
test
dec
mov
jae
pop
std
xchg
pop
bound
cmp
sbb
jbe
mov
aas
jp
pop
idivb
jae
mov
sub
jne
push
ret
in
stc
mov
test
push
cmpsb
push
loop
sbb
ss
arpl
xchg
ret
ret
push
out
cmp
mov
or
cmc
xchg
cld
dec
data16
aad
mov
mov
dec
mov
in
cwtl
mov
into
xor
add
and
fs
in
pop
cli
dec
adc
fs
test
outsl
sub
lds
push
jne
sbb
mov
xor
push
and
andb
outsl
outsl
mov
stos
xchg
rorb
mov
jle
add
push
adc
cltd
loop
mov
or
mulb
enter
lret
or
pop
push
jbe
mov
call
cmp
lret
mov
ficomps
ret
sub
inc
imul
clc
pop
pop
dec
popf
jge
es
fsubr
aam
mov
cmp
xor
mov
mov
jge
fs
and
aaa
xor
xor
pushf
lcall
je
fcomip
out
pop
and
cmpb
call
adc
pop
push
das
fmul
aaa
out
fadds
jo
icebp
ja
popf
movsb
aas
stos
mov
jg
pop
call
push
jle
incl
or
xchg
test
daa
sub
cs
test
xchg
add
or
sbb
xor
adc
sbbl
decl
jnp
xor
es
sub
movsb
push
in
cmc
jle
xor
and
sbb
pushf
xchg
pop
cmp
adc
lock
pushf
push
adc
mov
and
mov
cmp
pop
fiadds
add
icebp
pusha
aad
in
cmp
pop
push
pop
adc
int
push
dec
fildl
loop
aas
or
cmp
popa
cmp
jbe
clc
sbb
add
jne
aad
adc
inc
loope
cmp
xchg
cmp
test
loopne
addl
jmp
adc
jl
lods
push
mov
or
mov
popf
or
inc
repz
rorb
in
mov
lea
mov
and
push
and
and
push
jnp
loope
leave
minps
movsl
and
mov
inc
stc
fcmovbe
or
xlat
jo
mov
jmp
pop
lock
dec
push
xor
jbe
cmpsl
dec
fisubrl
bound
jecxz
xor
fneni(8087
mov
jecxz
dec
adc
fwait
or
scas
xlat
ja
push
adc
out
pop
roll
mov
and
mov
mov
bound
outsb
bound
and
int3
jp
mov
mov
dec
das
es
mov
jmp
pop
lea
lcall
fxch
xchg
push
sti
mov
or
mov
iret
pop
aaa
popa
popf
cmp
pop
or
sub
and
xlat
lret
cmp
jb
andb
push
inc
dec
jb
add
mov
ret
and
lahf
notl
lret
xor
cltd
mov
mov
or
arpl
aaa
shrl
push
cld
fmull
sbb
fsts
rcrl
xchg
mov
push
push
inc
jg
repnz
pop
push
imul
mov
out
flds
hlt
loope
push
cld
adc
xlat
xchg
mov
insb
inc
in
jb
jns
push
adc
inc
sbb
or
in
jecxz
test
inc
stos
add
test
rolb
adc
sub
roll
push
stc
jl
mov
sti
lret
in
push
adc
fildll
test
cmpsb
rcrl
xor
and
mov
jo
mov
and
xchg
inc
jp
loop
stos
movsb
sbbb
sub
lret
inc
cmp
aam
test
xlat
sub
jo
xchg
mov
outsl
test
in
rolb
mov
ret
xchg
dec
mov
dec
cmpsl
xchg
mov
and
leave
test
loope
lock
or
mov
inc
out
jbe
dec
fistpll
cltd
ret
dec
xor
add
mov
inc
push
stos
push
xchg
push
stc
fistl
es
mov
shll
push
lock
adc
push
dec
in
cwtl
je
mov
cmp
xorl
insl
clc
mov
subb
addb
shr
movsl
pusha
and
push
mov
dec
stos
inc
and
lock
loopne
jmp
adc
scas
iret
mov
or
mov
std
xchg
lods
and
adc
mov
and
data16
sbb
push
loopne
fs
xor
pop
sbb
jne
hlt
lahf
insl
sbb
mov
sbb
ret
out
mov
fstpt
push
dec
push
xor
jmp
scas
mov
lcall
jecxz
les
sub
xor
out
leave
cmp
clc
gs
add
inc
ret
fisttps
not
aaa
and
gs
cmp
mov
cmp
mov
cmpl
fistpl
or
popl
imul
mov
out
fsubrl
dec
mov
jnp
movsb
xor
mov
or
mov
jne
sub
push
fsubrs
imul
add
ja
push
scas
pusha
pop
add
test
enter
bound
or
pop
fidivs
shr
jmp
xor
push
aam
xor
mov
push
xor
pop
jp
insb
pop
xor
popa
fildll
sub
and
adc
xor
stos
leave
lock
mov
jnp
xchg
addr16
bound
cmp
int
mov
add
add
xchg
aam
sbb
lret
sbb
xor
lods
int
push
push
fwait
out
icebp
icebp
pop
jmp
and
jmp
xchg
push
inc
cli
cld
es
cwtl
test
inc
push
rclb
mov
call
and
or
mov
imul
sub
jecxz
aad
jno
push
andb
mov
ljmp
push
dec
stos
cli
xchg
sbb
nop
inc
outsb
daa
out
push
cwtl
scas
mov
xlat
cmp
sub
jge
push
or
test
pop
fdivr
adc
repz
or
xor
mov
cltd
and
jae
mov
sahf
int3
inc
inc
int3
cmp
loopne
mov
xor
mov
loopne
inc
adc
mov
jl
nop
in
daa
mov
mov
inc
or
mov
scas
test
outsl
out
inc
fs
int
mov
dec
pushf
pop
in
mov
jecxz
in
xchg
mov
loop
push
cmpsl
push
cmc
cltd
inc
xor
fs
stos
and
push
or
inc
rorl
lcall
in
mov
dec
sub
dec
int
mov
adc
loopne
cmp
or
xor
mov
cs
enter
sub
sbb
loop
adc
nop
rol
mov
jo
lret
ficoms
pop
pop
sub
daa
fsubrl
cwtl
in
lret
inc
insb
push
divl
divb
movsl
in
mov
hlt
test
jno
jg
imul
out
out
or
stos
repnz
ljmp
shr
ljmp
sti
pop
aam
or
cmp
adc
pop
sbb
add
mov
lret
and
jg
xchg
loopne
sub
dec
addr16
adc
movsl
roll
sub
mov
sti
bound
inc
dec
adc
stos
cld
xor
xchg
xor
lods
ss
sub
jmp
mov
mov
adc
pop
sub
xor
mov
mov
iret
aas
dec
cmp
push
and
test
ret
popa
cli
or
cmpsb
mov
inc
adc
xchg
cltd
btl
popf
pop
shl
ret
mov
push
mov
es
setns
and
clc
fisttpll
das
xchg
in
pop
dec
repnz
cmp
movsb
jmp
lret
xor
mov
sub
mov
xchg
fisubrs
add
pop
or
and
jmp
aad
push
fnstenv
lea
loope
enter
fwait
dec
mov
add
adc
scas
inc
sub
or
cmp
mov
mov
adc
lods
push
iret
xchg
mov
les
sbb
and
jns
push
in
push
negl
loope
mov
aad
cmp
fwait
testb
add
adc
sub
and
xchg
enter
jns
das
dec
mov
fsubrl
jb
xchg
mov
jmp
outsl
mov
adc
pop
or
mov
rol
inc
jle
mov
cmp
push
insl
xadd
add
jp
xor
adc
xchg
inc
ds
test
cmp
pop
sub
lea
mov
stos
es
pop
pop
ljmp
aad
scas
jl
stos
push
leave
push
push
inc
pusha
fs
std
inc
push
jl
jge
test
jp
faddl
mov
ja
cld
sahf
dec
mov
mov
cmp
mov
add
add
or
pop
test
xor
fidivs
rcl
out
subb
ja
jns
sub
mov
xchg
fwait
mov
mov
sub
test
imul
inc
adcb
js
mov
xchg
sbb
or
jne
xchg
inc
mov
pushf
in
adc
jecxz
repz
addr16
icebp
lret
aaa
js
dec
mov
dec
jmp
mov
fwait
jmp
cli
lret
or
or
shl
ret
ret
inc
jge
pop
push
sbb
in
pop
ret
lret
mov
sub
mov
fs
in
loopne
add
jmp
cmp
aad
push
std
test
adc
shrl
hlt
mov
jbe
push
and
jle
pinsrw
lods
mov
outsl
sbb
adc
test
adc
or
popa
or
pop
or
bound
arpl
cmp
cli
sbb
loopne
mov
lods
pop
testb
cltd
clc
sti
nop
movsb
or
push
inc
mov
cmpsb
clc
mov
lods
sbb
cld
bound
loop
cmp
pop
test
fstpl
adc
adcl
jns
lock
leave
push
popf
pop
sub
ja
adc
insb
sbb
jg
cli
push
pop
pop
xor
jg
mov
sbb
or
add
fst
and
push
xlat
loopne
add
or
movsb
sbb
add
arpl
or
dec
xchg
pop
sub
and
add
mov
pop
push
dec
out
cli
sbb
mov
gs
popa
ja
dec
in
xchg
ljmp
lds
or
inc
leave
faddl
sub
shrb
cs
dec
test
sub
xchg
popf
hlt
cltd
xchg
pop
js
notl
pop
mov
js
push
adc
ret
into
pmulhuw
xchg
sbb
inc
or
loop
dec
dec
rcr
rcll
and
ljmp
rcl
lods
idiv
in
mov
ret
xchg
mov
fcmovb
inc
cmc
mov
es
add
add
mov
inc
fcmove
xor
sbb
jbe
arpl
jns
or
add
dec
sbb
adc
jno
addr16
xchg
xchg
and
mov
push
inc
lods
pop
call
dec
xor
add
mov
movsb
sub
pop
int3
cmp
cmp
loopne
jge
ljmp
dec
enter
imul
sbb
into
data16
sbb
out
fs
ret
sub
cmc
adc
stos
es
jb
mov
ret
and
inc
jge
push
push
fptan
inc
inc
or
fistps
dec
jecxz,pt
adc
mov
adc
out
iret
shrb
mov
lret
cmp
inc
hlt
mov
int3
cld
sub
imul
sub
push
shlb
clc
hlt
arpl
cmc
inc
mov
lods
outsb
xchg
mov
rclb
cltd
pop
pop
dec
mov
insl
mov
lahf
mov
inc
out
inc
stos
hlt
data16
adc
loope
pop
inc
add
dec
jecxz
fwait
xlat
mulb
faddl
in
push
aam
into
lret
mov
outsb
and
mov
mov
jecxz
lock
dec
dec
push
fdivrl
sbb
cwtl
subl
and
pop
jecxz
rcll
pop
test
mov
arpl
in
clc
mov
gs
repnz
testb
pop
mov
loope
push
jge
sbb
jg
daa
ficompl
jl
xchg
ljmp
fwait
test
pop
cmp
xlat
mov
and
lock
cmp
xorl
cmpsl
cs
sbb
js
xchg
imul
inc
cld
jle
jae
test
stc
inc
jg
inc
mov
dec
movsb
sbb
or
btcl
arpl
fcomps
dec
mov
mov
xor
in
add
xor
xor
mov
leave
fistpll
pop
xchg
push
add
lea
pushf
mov
aas
shrb
adc
mov
adc
dec
xor
in
or
and
cmp
push
ss
leave
xchg
sti
addr16
test
push
pop
jl
jg
inc
iret
les
in
mov
clc
or
shrl
psubw
jle
cwtl
jo
aam
adc
pop
ss
add
aam
cmc
shlb
pop
push
mov
mov
test
dec
dec
and
test
shlb
aam
xor
push
mov
loope
fs
cmpsb
and
adcb
mov
lea
in
fdivrl
jge
loop
adc
into
xchg
pop
mov
dec
jge
and
xchg
inc
popf
sbb
rcrb
movsb
cmp
lahf
jmp
outsl
mov
test
in
andb
sbb
xor
push
jmp
mov
inc
cld
jbe
cmp
mov
stc
inc
mov
cmpsb
cmc
inc
sub
movsl
test
inc
xlat
ficoml
mov
shrl
lahf
dec
push
addb
in
jo
add
fadds
push
sti
or
add
cwtl
push
cmp
push
cwtl
cmpsl
js
in
sbb
mov
push
xchg
add
lods
push
adc
icebp
test
xchg
aas
pusha
imul
das
inc
sub
test
loope
flds
xor
in
imul
insb
test
push
cmp
fwait
fwait
es
lock
ret
je
lock
pushf
pop
and
leave
inc
add
data16
dec
shlb
inc
xchg
dec
sub
aas
ljmp
addr16
or
sub
aaa
push
pop
jg
cld
xor
orb
xlat
in
pop
xor
inc
je
into
pusha
dec
dec
inc
dec
mov
stc
xchg
stos
ja
aam
ret
iret
jo
iret
mov
jae
cmp
fdivrp
push
push
inc
inc
mov
and
sbb
mov
xor
stos
pop
sti
xor
fwait
lds
movsb
ds
movsl
inc
fisttpl
xchg
inc
inc
mov
inc
dec
mov
inc
jg
ja
mov
dec
pop
imull
lock
scas
xchg
jg
pop
pop
movsb
loop
mov
cmp
cwtl
mov
outsb
addr16
test
jle
adc
sarl
xor
xor
pop
test
iret
xor
test
mov
in
or
repz
rorb
je
jg
push
bound
sbb
pusha
pop
sub
jo
ret
out
mov
sub
push
minps
pop
mov
outsb
sub
pop
dec
into
push
arpl
push
push
pop
cmpsl
jmp
jno
and
lods
pop
push
or
mov
fidivl
sbb
out
jle
mov
xchg
fistpl
loop
or
inc
push
xchg
xchg
mov
popf
push
mov
xorb
and
xchg
xchg
fwait
sbbb
mov
outsl
stc
out
cmpsb
lods
mov
addr16
mov
das
in
into
into
out
sbb
sbb
in
rolb
lea
inc
lret
in
imul
or
inc
mov
dec
adc
in
imul
xor
lods
bound
fidivs
xor
repnz
jecxz
inc
sub
cmp
sbb
push
ljmp
testl
imul
adc
and
sub
int3
into
push
stos
enter
mov
add
xchg
cmpl
lods
jns
sar
and
fidivrl
mov
or
decl
xor
fistl
out
daa
nop
es
mov
cmovae
rorb
dec
inc
cmp
xchg
test
aaa
sbb
fwait
inc
leave
push
aaa
test
stos
movsl
pushf
daa
push
int
cmc
and
jb
cltd
nop
loop
mov
mov
mov
mov
cmp
pop
aas
lods
and
lea
push
int
shrl
loop
mov
in
and
jnp
jl
jmp
push
inc
cmpsl
lret
ret
sub
adc
push
push
pushf
cmpsl
pop
mov
into
sbb
ss
mov
jnp
pusha
xchg
icebp
mov
pushf
emms
xor
loope
xchg
sub
sub
cmpb
scas
jnp
ror
cli
sub
jg
rcrb
add
call
push
cs
pushf
out
xchg
cwtl
mov
ljmp
jge
sbb
movsb
mov
add
lret
fistpll
call
sbb
mov
push
inc
xchg
sahf
pop
jb
adc
or
les
mov
xchg
lcall
push
test
out
cmc
or
cmpsb
xchg
sbb
sahf
and
push
and
shll
enter
add
jmp
xor
inc
mov
mov
xchg
jo
push
add
cmc
xchg
lahf
andb
mov
hlt
mov
dec
movsb
adc
in
xor
mov
jp
andl
or
sbb
stc
mov
or
xor
cmp
push
dec
inc
enter
mov
roll
in
mov
cmp
into
out
and
or
mov
in
dec
mov
jo
xlat
cmp
lods
jle
jae
cmp
movsl
push
cs
cmp
mov
or
fcomps
pop
adcb
jmp
xchg
std
mov
and
mov
outsb
sbb
sub
cmpsl
inc
add
jbe
bound
xor
aad
add
lcall
sar
popa
adc
or
pop
hlt
push
in
adc
jns
cmp
iret
lods
test
mov
push
pusha
xchg
shrl
xor
sub
pop
push
sub
adc
push
nop
push
js
push
sbb
jge
insl
push
sub
xor
sub
test
xchg
shl
or
xchg
movb
mov
gs
jecxz
dec
cmp
imul
jno
xor
sbb
cld
in
shll
divb
insb
test
xlat
test
add
gs
push
jae
imul
ds
pop
xor
cmc
add
je
in
fsts
test
sbb
cld
int3
inc
mov
cmc
fstl
or
sbb
add
sbb
sub
add
jo
push
inc
cmc
jge
adc
jl
bsf
test
cmpb
jae
ja
xor
mov
cmpsb
adc
push
popf
mov
mov
dec
mov
movsl
mov
xor
pop
pop
test
aaa
movsl
add
js
cli
mov
jg
outsl
dec
rorl
out
out
and
pop
adc
jo
xlat
movsb
add
movsl
cmp
xchg
or
lods
cmp
cmpsb
push
dec
outsb
int
mov
out
xorb
notl
shrb
and
jnp
aas
out
dec
mov
jmp
add
loop
aam
je
in
push
ljmp
insb
stc
dec
cmp
mov
jns
negb
fcoms
pop
mov
adc
ljmp
es
aas
mov
sub
repz
lods
aaa
dec
mov
mov
lret
pop
xchg
or
sub
pop
push
sbb
in
sub
xchg
lea
rcrb
mov
pusha
das
data16
push
testb
enter
in
in
cmp
imul
lock
gs
int3
push
xchg
add
mov
out
int3
dec
sub
lret
sar
adc
mov
dec
add
xchg
test
movsl
out
jmp
loop
lahf
fadds
cmpl
mov
fsubrs
mov
insb
stos
mov
or
lret
jns
adc
insb
imul
sub
movsl
or
mov
add
inc
movsl
xchg
sarb
pop
jnp
dec
popa
jl
negb
movsb
fidivl
outsb
imul
sbb
mov
adc
std
xchg
pop
stc
outsl
mov
cltd
cli
xlat
add
js
mov
xor
and
mov
sbb
xchg
jmp
push
outsl
xchg
adc
aaa
mov
dec
mull
ja
dec
mov
jge
cmpb
jb
sahf
add
daa
insl
xlat
scas
and
or
mov
lods
xor
mov
scas
adc
inc
pushf
mov
ds
mov
pop
popf
jecxz
dec
repnz
cmpsl
ss
stc
jbe
xlat
or
ret
add
out
jo
repz
fnstsw
xchg
mov
and
testl
cmp
jp
out
and
push
mov
sub
sub
dec
pop
pop
movsl
ficoml
cmpsb
inc
fdivr
ja
lret
insl
addr16
mov
adc
lea
pop
paddsw
or
mov
mov
dec
lahf
mov
xor
push
mov
push
jecxz
sar
mov
and
inc
jmp
ss
adc
sbb
jbe
repz
dec
repnz
push
ficoml
cli
sbb
cmc
jmp
mov
mov
enter
adc
fsubs
loopne
mov
test
lods
xchg
pop
fildl
mov
lret
pop
xchg
imul
sub
inc
sub
fnstsw
cmp
leave
xor
xor
pop
shr
push
xchg
int3
iret
test
mov
mov
mov
dec
sbb
loopne
aas
adc
mov
lods
lock
stos
mov
or
dec
adc
adc
cmp
sbb
cmp
pop
cmp
lmsw
test
popf
push
mov
jmp
daa
jl
test
hlt
jmp
inc
cmp
inc
test
jle
pop
aaa
pusha
lock
mov
push
mov
push
aam
ret
dec
loopne
in
movb
js
jl
sub
fisubrl
inc
icebp
cmp
jmp
repz
into
popa
xchg
mov
cmp
fldl
xchg
jle
sub
iret
inc
sub
sbb
movb
xor
mov
mov
jb
hlt
sub
sub
lcall
fs
dec
les
icebp
mov
push
pop
push
xor
adc
xchg
pop
xchg
cmp
hlt
xchg
scas
dec
daa
in
xor
xor
sub
jo
xchg
fsubl
add
mov
mov
lahf
into
adc
xchg
inc
flds
test
mov
cmp
push
shlb
cmc
shr
lahf
nop
or
std
sub
jmp
fs
and
sbb
mov
mov
movsb
and
clc
xchg
rcr
add
je
xchg
dec
add
dec
inc
cmpsl
add
out
sub
daa
cmp
adc
loop
bound
inc
loopne
je
xacquire
mov
movsb
add
mov
mov
sub
sbb
lods
mov
les
rorl
ret
cmp
xchg
icebp
push
mov
mov
lods
adcb
int3
add
shll
xchg
ret
and
rcrb
mov
pushf
andl
add
mov
adc
repz
mov
rclb
lods
sbb
enter
movsl
lcall
test
and
adc
scas
xchg
jle
pop
adc
inc
and
sub
cs
jns
shrl
hlt
sbb
shr
cmp
cmp
out
sub
imul
addr16
shl
divb
push
frstor
shl
cltd
sub
shll
pusha
clc
popf
jo
es
adc
adc
ds
add
mov
mov
pop
jns
scas
sti
orl
cmpsb
shr
inc
mov
add
pop
adc
loopne
rcr
icebp
subl
iret
or
sarb
insb
push
mov
les
and
lret
xor
leave
mov
es
cmp
out
dec
xchg
dec
sbb
daa
push
aaa
in
dec
cmp
jns
leave
scas
inc
push
xor
lods
push
iret
sub
sti
sbb
popf
or
sbb
lock
int
pop
out
cmp
lods
mov
cmp
js
movl
xchg
cmp
mov
fimull
xor
loop
or
mov
sahf
testb
dec
mov
adc
repz
cmc
or
adc
and
xchg
lock
cs
in
pop
mov
gs
stos
iret
push
iret
out
xchg
fistps
fsubs
mov
mov
xchg
loopne
push
cmp
aad
sub
sbb
dec
mov
sarb
out
loope
sarl
push
mov
inc
mov
push
or
shll
jmp
int3
mov
cmp
ljmp
js
cmp
clc
mov
pushf
or
sahf
test
movsl
dec
dec
movsb
testl
sti
inc
mov
loope
inc
int3
mov
stos
insb
mov
repnz
mov
bound
and
pop
cmp
clc
mov
sub
fildl
or
push
jecxz
or
movsl
cmp
pop
cmp
dec
call
scas
and
mov
je
fldenv
fucomi
and
negl
mov
scas
stc
je
sbb
push
jb
loopne
jp
pusha
inc
sbb
dec
movb
pop
out
ret
sbb
lods
leave
in
cmc
pop
cld
inc
dec
pop
push
dec
stos
xchg
xchg
fldl
gs
outsl
push
dec
cmp
mov
push
and
xchg
jmp
loop
inc
icebp
dec
jmp
cmc
add
es
pop
push
adc
call
xchg
ss
aaa
pop
stc
xor
adc
je
push
mov
out
push
mov
aam
adc
inc
push
data16
jno
adc
daa
call
inc
data16
add
outsb
inc
sub
mov
clc
cs
mov
shll
movsb
loope
dec
pop
xor
pop
mov
inc
xor
and
jl
out
aaa
adc
aad
cmp
ret
sti
mov
xor
xchg
test
lahf
push
addl
addr16
sbb
loopne
mov
int
aad
shlb
push
into
or
nop
data16
repnz
cld
push
xor
jno
call
or
jb
leave
push
lcall
movsl
sub
inc
pop
out
xchg
sub
mov
ds
xor
push
std
call
cs
dec
cmp
iret
rcrb
loopne
dec
adc
sbbl
testl
xchg
pop
mov
fisubrs
sti
repnz
pop
sbb
sub
xchg
push
xor
jnp
push
sahf
andb
pusha
fildll
cmp
lret
nop
jl
or
mov
adc
xchg
sbb
out
xor
adc
inc
into
pop
fcmovnb
gs
sbb
push
aam
popa
sbb
stos
out
jecxz
outsb
sbb
sbbl
xor
gs
mov
cmp
sub
push
push
xchg
in
pop
stos
xor
jne
sbb
jge
adc
push
mov
fisubrs
or
mov
mov
add
xchg
outsb
mov
lock
lea
js
addl
inc
inc
rorb
stos
mov
gs
sbbl
dec
jmp
mov
jmp
ret
rclb
mov
pop
pop
aam
xor
div
repnz
out
xchg
stc
rcrb
xor
add
push
mov
xchg
es
xor
ljmp
lahf
shlb
jnp
mov
xchg
fsubp
loope
pusha
xchg
jbe
jo
pop
mov
loopne
insb
pop
adc
sbb
pusha
lcall
xchg
pop
ret
and
ficompl
adcl
jecxz
pop
mov
add
ds
movsl
xor
fldcw
inc
mov
fwait
mov
cmpsb
rcl
xchg
ljmp
gs
mov
pushf
jnp
sub
insl
cwtl
xor
gs
hlt
inc
scas
jmp
or
jno
pusha
fdivrs
inc
xchg
pop
jnp
les
orb
ret
xor
mov
fsubrs
test
xor
push
ret
insb
jp
pop
add
daa
in
mov
adcl
out
sbb
xchg
stos
rclb
inc
adc
xchg
push
or
leave
mov
and
data16
mov
mov
jae
pop
mov
test
fbstp
jecxz
ja
pop
xchg
jge
int3
sbb
rolb
sbb
mov
fildll
jl
scas
cs
stc
scas
mov
decl
fwait
and
mov
fnstsw
sub
and
sbb
push
or
rcrl
and
push
scas
mov
xchg
inc
sbb
out
push
cmovns
cmp
nop
mov
hlt
mov
cmp
in
repnz
pop
mov
sbb
and
dec
pushf
iret
fincstp
mov
mov
adc
sbb
fcmovnu
sbb
or
adc
mov
mov
cmc
jp
das
mov
and
sub
cmc
mov
inc
xchg
push
jne
pop
sub
sub
je
xchg
out
pop
xchg
test
rorb
mov
out
push
inc
sub
lret
shrl
std
add
xor
mov
sub
xor
xchg
pop
mov
fsubrl
shlb
pusha
add
add
mov
xor
imul
mov
add
arpl
repnz
addr16
nop
in
add
dec
sbb
xchg
pop
ret
adc
jb
out
dec
decl
mov
pop
into
mov
xchg
insl
loop
inc
cld
scas
mov
rorb
sbb
jmp
cli
cmp
jns
imul
inc
fbld
inc
xor
insl
test
add
push
pop
and
and
stos
insl
lcall
bound
mov
ja
sarb
mov
inc
roll
or
push
xor
in
inc
mov
popf
adc
push
popf
xor
fs
add
and
mov
repnz
push
and
aam
rcrl
xor
std
mov
mov
pushl
jne
add
and
scas
mov
movsl
cmc
mov
jl
cmc
sbb
push
in
bound
add
js
adc
jae
pushf
sbb
mov
in
inc
rorb
cs
aam
into
mov
push
cmp
pop
imul
iret
shlb
pushf
adc
in
dec
push
pushf
and
pop
jo
jno
and
filds
sub
fsubl
sub
pop
jl
inc
addr16
popa
mov
or
rorl
cmp
push
ficompl
push
ljmp
push
lds
ret
fstps
cmp
jno
fcmove
lds
loopne
lods
xchg
imul
ret
call
sbb
or
jo
xchg
xchg
xorb
iret
mov
xchg
in
subb
movsl
lahf
jp
push
ficompl
mov
imul
shlb
hlt
in
xchg
pop
stos
add
fs
repz
ds
loop
dec
mov
rclb
jmp
fiadds
cmp
mov
jecxz
jne
shl
sbb
out
popa
and
and
ret
insb
arpl
pusha
jge
mov
sbb
lods
push
jbe
enter
aas
in
insl
imul
insb
out
std
xchg
sub
jo
jg
pop
addr16
jb
clc
xchg
xchg
jmp
ja
in
cli
dec
sbb
mov
scas
movsb
add
test
iret
test
scas
into
xchg
cmc
inc
std
push
and
add
cmpsl
push
ret
add
mov
cmp
inc
aas
mov
inc
mov
int
rcr
mov
aad
insb
jecxz
push
sbb
xchg
cmp
les
ret
pop
dec
addb
xor
sbb
pop
push
push
xor
mov
cmp
rcr
in
lahf
jo
out
dec
xchg
arpl
sub
push
push
mov
adc
sub
test
mov
add
adc
pop
adc
and
or
sbb
leave
sahf
push
mov
mov
add
popf
movl
xchg
loope
add
std
xlat
out
shlb
mov
cmp
sahf
subl
jbe
cmp
inc
pop
mov
xor
adc
out
pop
mov
adc
bound
sar
frstor
daa
jmp
pop
mov
neg
lret
jno
and
mov
or
pop
xchg
xlat
cwtl
mov
lds
jae
je
and
jnp
add
ds
sub
xor
mov
dec
inc
test
mov
repz
dec
les
sub
jle
push
cs
das
adc
shlb
scas
lret
pop
inc
icebp
in
lret
dec
push
repnz
gs
lock
add
shrb
popf
fnstsw
lods
and
push
pop
fldcw
lret
xchg
icebp
cmp
mov
int
lds
inc
sbb
rorb
insl
fistps
sub
xchg
mov
xchg
and
cmc
daa
ret
inc
or
adc
popf
iret
hlt
call
ss
mov
xor
xor
push
adcl
stos
push
xchg
jg
jle
shrl
xlat
shll
inc
sbb
insl
xlat
jp
xorl
lahf
mov
and
adc
lods
xchg
leave
mov
fistps
xchg
push
mov
xchg
jmp
jnp
mull
stc
fisubl
clc
test
aam
cmp
out
pusha
jne
adc
xchg
xor
clc
and
or
cmp
cmpb
pop
or
sbb
js
or
pop
in
dec
cmp
out
stos
pop
mov
cmp
cmp
outsb
outsb
cmp
insb
add
jge
test
adc
fdivr
mov
mov
xchg
push
mov
sbb
call
das
cmp
xchg
in
int
mov
pop
repnz
adc
xchg
sub
inc
mov
idiv
mov
xchg
pop
lret
jne
loope
dec
or
cmpsb
xchg
pop
or
jge
mov
inc
jecxz
fdivs
pusha
ljmp
aad
push
fiaddl
mov
and
lods
mov
decl
pop
cmp
in
jle
inc
inc
xchg
ret
dec
sbb
mov
fdivrs
popf
outsb
xchg
ret
push
sbb
je
mov
mov
mov
lods
fisttpll
mov
loope
mov
scas
dec
adcb
test
push
ljmp
mov
enter
mov
imul
cmc
pusha
ret
adc
clc
stc
fdivrs
iret
push
jle
out
pop
cmp
call
jmp
mov
cmp
je
xchg
leave
jge
pop
xor
mov
push
fildl
bnd
mov
push
fs
xor
pop
xchg
or
out
adc
addr16
or
cmp
mov
mov
mov
rolb
setno
push
mov
add
aam
dec
ret
add
mov
loopne
jae
sub
aam
mov
push
orb
loopne
jae
pop
adc
insb
fstl
data16
push
xchg
roll
push
adcl
aaa
jne
aad
mov
pop
out
popa
mov
fbld
out
cmp
sub
lret
mov
fisubrs
sahf
mov
cmp
mov
pop
adc
or
jmp
and
mov
loop
movsl
dec
sub
iret
cld
data16
lods
mov
sti
int
popf
jmp
adc
jmp
push
inc
push
mov
mov
adc
cmp
sub
loopne
insb
outsl
call
fsub
jo
stos
popa
stos
into
or
jmp
js
mov
jnp
cmp
mov
cmpsb
xor
out
mov
jg
add
aas
sub
inc
enter
cmc
ficompl
mov
dec
test
rcr
int
test
nop
push
pop
xchg
es
and
rorl
ljmp
or
sub
mov
ljmp
scas
in
pop
jne
pop
pop
xor
and
mov
jns
in
adc
jmp
pop
ljmp
loopne
rclb
pop
dec
pop
add
pop
data16
mov
sbb
fsubl
inc
mov
repz
adc
inc
rcrl
sub
rorb
sahf
push
out
mov
add
js
xor
add
jns
push
jmp
mov
cmp
cmpsb
shl
xor
cmc
ds
dec
jae
xchg
push
adc
mov
adc
ret
push
rcrb
add
xlat
lcall
mov
test
adc
sub
loopne
mov
icebp
and
into
add
pop
cmc
mov
lods
idivb
sub
fucomi
cmp
movsl
xchg
xchg
dec
in
xchg
jbe
je
lea
testb
into
and
out
sbb
or
mov
mov
popf
jbe
mov
xorl
sti
cli
mov
mov
jl
jecxz
pop
in
jae
lret
mov
scas
mov
test
push
in
fnstcw
pop
push
cmpsb
dec
dec
dec
scas
inc
mov
fstpl
movsb
adc
inc
or
jle
subl
xchg
jmp
stc
dec
andl
pop
mov
pop
fsubrp
lock
cmp
test
adc
les
sahf
jno
loop
test
dec
mul
lcall
leave
add
jl
add
leave
push
jecxz
popf
lret
sub
adc
sbbl
push
push
pop
into
insl
or
fildll
gs
mov
lcall
jecxz
adc
mov
inc
lods
insb
into
dec
jbe
test
and
adc
push
xchg
fldt
stc
xchg
scas
push
xchg
popa
mov
pop
push
pop
inc
fists
push
fdivrp
xor
cmp
std
push
fldcw
lods
cltd
sub
xchg
movsb
gs
outsb
mov
push
fwait
sub
inc
xor
pop
sbb
dec
pop
mov
outsb
ja
popf
add
jae
jl
xchg
stc
dec
push
pop
add
sub
push
nop
movl
and
sub
xchg
mov
push
xlat
cmpsb
inc
xchg
aas
or
stos
stc
jno
fcomps
stos
lods
sub
push
out
mov
rcrl
jmp
popa
push
rolb
cmp
addb
test
fstps
push
xchg
fadds
int
fstpt
js
imul
insb
ret
xchg
add
ret
aas
aam
and
shll
imul
repnz
dec
sar
or
fcoms
ret
cmp
jmp
lcall
sub
lret
rcl
lcall
jb
xor
fsub
sbb
jbe
sub
mov
movsl
rorl
mov
sbb
jno
test
sub
idivb
xchg
mov
inc
lds
in
push
pop
mov
loop
sbbl
mov
mov
add
cmp
mov
lods
push
pop
test
sahf
int
push
mov
and
ja
mov
cltd
xlat
in
or
insl
aad
cld
lods
repnz
repnz
popa
xlat
enter
pop
js
xchg
pop
cmp
cmpb
arpl
fstpl
fsubs
clc
xchg
xchg
movsb
rcl
xchg
sub
imul
cmp
lock
mov
sbb
add
gs
aam
lahf
dec
pop
sbb
adc
cmc
pop
sbb
cmc
out
adc
and
hlt
fwait
xlat
sub
jns
inc
jle
inc
mov
and
cmpsb
data16
not
mov
sti
or
mov
rcrb
adc
and
outsb
scas
fwait
xchg
or
mov
shlb
imul
out
mov
pop
addb
jb
mov
and
in
jne
mov
repnz
and
inc
sbb
in
or
xchg
insb
js
lret
shl
jl
or
xchg
adc
aas
jo
pushf
jge
add
xchg
push
mov
push
inc
pop
inc
push
out
mov
mov
std
adc
and
mov
notb
or
loopne
mov
scas
lcall
mov
fdivrp
dec
int3
call
or
xchg
divb
lret
dec
pop
pop
lret
cmpsl
add
adc
lods
xchg
mov
movsb
mov
jnp
add
pop
stc
clc
pop
jae
pop
mov
cltd
xchg
shrl
jecxz
dec
cmpsb
rolb
push
cld
mov
nop
xor
scas
leave
jle
sbb
mov
cld
shll
mov
int
into
shll
push
mov
jmp
int3
pop
push
fs
cli
lcall
sbb
adc
ss
movsl
mov
pop
leave
pop
dec
pop
cli
stos
in
inc
push
mov
dec
shlb
push
mov
aam
test
out
xorb
sbb
xchg
xchg
adc
and
mov
push
sbb
dec
mov
mov
pop
cmp
mov
test
int3
rclb
hlt
pop
ret
out
fidivrl
pop
sarl
jl
sub
jp
cmp
stc
in
fwait
add
lock
bound
sub
sti
jg
sub
sub
mov
subl
mov
cmpsl
lret
pop
enter
jmp
xor
sbb
lock
fdivs
ds
sbb
xchg
cltd
dec
int
mov
lret
adc
sbb
cmp
xchg
xchg
daa
cltd
xor
rcll
rcr
movsl
lods
jns
sub
adc
mov
mov
ss
aam
jne
push
pushf
dec
jp
mov
adc
jns
lock
dec
shrb
and
mov
lret
cmp
in
xor
outsb
mov
jo
jnp
sahf
mov
jl
popa
ret
aam
sub
adc
push
mov
mov
daa
adc
ficompl
fnsetpm(287
pop
fisttpll
std
std
das
nop
push
movsb
mov
icebp
xor
in
push
and
pop
jne
add
out
cwtl
mov
mov
cmpsl
adc
pop
add
ret
dec
jnp
popa
imul
mov
sub
dec
mov
or
add
inc
xor
push
sbb
jp
call
repnz
hlt
pop
in
mov
and
jae
ficoms
mov
mov
lret
mov
jno
cmp
xor
sti
jl
popf
jl
aam
sahf
mov
les
xchg
pop
divl
dec
pusha
add
lret
lea
mov
clc
inc
push
adc
push
sbb
inc
or
jle
mov
pop
cld
jno
sbb
mov
inc
mov
mov
push
aaa
jmp
jmp
mov
mov
xchg
and
jo
lcallw
or
in
mov
in
daa
fcoml
lcall
xor
mov
aam
adc
jg
mov
or
cwtl
je
xchg
and
fistl
ficompl
out
pop
out
pusha
fwait
popf
clc
and
cli
lahf
cmp
pushl
movsb
mov
aas
sbb
sub
out
adcl
cltd
mov
arpl
add
movsb
xchg
xor
cmp
sbb
cli
addb
fdivs
stos
jmp
daa
sbb
dec
pop
xchg
lahf
adc
mov
mov
test
aas
sub
aas
cld
gs
lods
sbb
pop
div
pushf
jmp
addb
mov
out
femms
adc
add
xchg
addr16
xchg
push
mov
mov
mov
cli
ljmp
xchg
push
cld
iret
js
mov
mov
int3
idivb
mov
inc
cmp
pop
dec
jbe
mov
sub
movsl
dec
add
cwtl
aaa
push
daa
lahf
inc
lret
jl
adc
and
mov
push
lock
repnz
adc
mov
jae
xor
out
xchg
sub
xor
outsl
or
enter
jne
bound
pop
mov
je
pop
mov
push
mov
shrl
and
pop
jne
jae
cltd
dec
fadds
and
dec
xchg
xchg
fwait
movsl
inc
mov
in
stc
and
push
sub
or
int3
imul
clc
add
xchg
and
test
mov
or
shll
add
adc
lock
loope
out
repnz
lahf
comiss
sbbb
test
jbe
aaa
daa
sbb
mov
xlat
or
outsb
and
iret
loope
gs
mov
mov
sub
fldcw
adc
xchg
add
ss
push
add
cmp
fisubs
repnz
hlt
mov
add
sub
xchg
adc
push
jmp
pop
loope
je
push
and
insl
lods
ret
mov
push
hlt
addb
cmp
stos
fwait
mov
sbb
xchg
sbb
outsl
dec
and
gs
sbb
fcmovbe
cltd
jmp
mov
movsl
pop
jmp
pop
pop
in
xchg
addr16
call
cmp
adc
stos
dec
icebp
cmp
fbld
gs
xchg
push
pop
scas
jb
dec
add
fcmove
out
pop
xchg
sbb
pop
lods
add
scas
sbb
jo
fildll
outsl
or
xchg
and
imul
shll
insl
jns
js
and
bound
gs
mov
ror
repz
pop
add
add
aaa
mov
loop
fsubrl
sbb
inc
cli
outsl
outsb
jle
adc
inc
sub
in
es
adc
xchg
mov
jmp
fistpl
scas
push
nop
jle
pop
cmp
and
mov
pop
pop
push
filds
call
ja
add
pop
jns
fldlg2
lock
jns,pt
mov
mov
scas
pusha
adc
jb
and
mov
clc
sarb
test
pusha
cmpsb
test
ret
outsl
or
pop
cltd
in
xchg
inc
xchg
aad
add
lock
cltd
dec
cwtl
sub
cli
mov
daa
sarl
das
mov
repz
dec
into
jne
and
daa
pop
pop
outsb
mov
dec
sbb
mov
inc
mov
or
add
xchg
pop
mov
cmp
jne
pop
jmp
jns,pt
mov
out
inc
roll
rcr
push
push
std
je
mov
or
mov
les
cmp
test
sub
xor
fld
imul
in
inc
sti
pop
adc
addl
call
movsb
test
add
and
pop
xchg
cmp
outsb
mov
lds
jp
loope
test
test
insl
push
testl
jnp
xchg
mov
idivl
inc
pop
xchg
loop
lea
mov
scas
or
addr16
xor
xchg
in
lahf
outsl
outsl
ficompl
xchg
add
lods
out
push
arpl
cmp
int
push
cld
and
loope
je
pop
cmp
push
push
sti
pandn
dec
pusha
inc
loope
pop
mov
xor
lods
ss
push
mov
outsb
xlat
push
cld
mov
ss
imul
test
js
add
adc
loope
add
cltd
mov
dec
rorl
dec
adc
pop
xchg
jp
cmc
sub
push
and
ja
xchg
lds
fnstenv
push
loope
nop
fdivrl
sti
mov
push
sbb
xor
sub
lahf
andl
pusha
hlt
xchg
fimull
pop
or
push
add
pop
mov
push
hlt
jbe
inc
jmp
in
cmp
pop
sbb
adc
in
pop
cmpsb
sti
out
mov
lret
les
mov
aam
ljmp
jns
push
cwtl
add
fists
lret
cmp
pop
xor
mov
fistpll
jl
jle
sbb
mov
or
xchg
icebp
sub
add
xchg
fisttps
les
mov
fs
xor
mov
mov
aam
jnp
xor
sub
aas
mov
stc
leave
pop
icebp
mov
xchg
lahf
lods
leave
xchg
push
in
xlat
aam
enter
in
insl
bound
adc
mov
or
add
or
cmp
adc
or
jecxz
inc
imul
pop
cs
adc
xchg
aaa
or
pop
or
pop
mov
imul
scas
std
std
dec
and
lea
jbe
mov
pop
sbb
js
inc
das
cwtl
xchg
pop
lods
je
aas
fisubrl
mov
rorb
cmpsb
loopne
pop
adc
cmpl
sahf
cmp
and
jbe
dec
cmp
fcmovbe
inc
call
in
jecxz
sbb
jne
or
xor
lods
add
pop
and
xor
icebp
cmp
dec
adc
push
push
sbb
ficompl
pop
inc
aam
inc
mov
outsb
mov
adc
inc
dec
push
mov
lods
push
repz
or
popa
push
jo
gs
stc
es
out
out
bound
pop
sbb
popa
stc
jbe
pop
jge
out
fistl
sub
adc
push
sbb
sar
sub
xor
shll
add
dec
or
pop
mov
mov
sahf
out
lods
mov
repz
test
movsl
rorb
es
out
lock
push
sub
popa
call
pop
sbb
dec
loopne
sarl
or
pusha
cld
and
push
fldcw
outsb
or
js
out
xchg
test
mov
dec
pop
rcr
ret
pushf
dec
sbb
dec
lods
lret
adc
nop
adc
sub
push
loope
mov
data16
aad
cmpsb
into
insl
and
call
fisubl
or
jne
sbb
cli
in
fidivrl
out
push
cwtl
dec
ds
loopne
insl
pop
and
pop
mov
and
cltd
and
mov
imul
and
dec
xchg
sub
push
in
xchg
and
mov
mov
cs
out
js
jge
out
jmp
pop
ret
orl
xchg
add
cmp
jb
xchg
mov
loop
inc
inc
shr
test
jb
inc
ret
pop
sbb
in
jl
gs
enter
gs
int3
loope
int
test
jmp
ja
pop
flds
jnp
xor
inc
cmp
es
daa
fwait
jbe
mov
dec
sub
xchg
mov
dec
ret
cmp
cmp
and
push
aas
xchg
mov
pusha
jb
fildll
mov
or
sbb
xor
push
xor
not
push
or
dec
cmp
cmp
fstps
adc
push
jmp
cld
cmp
loopne
fbld
sti
cmp
sbb
clc
xchg
mov
ret
dec
sbb
adc
test
xor
xor
sub
or
lahf
lds
pop
fisubs
push
mov
and
xor
xchg
mov
mov
scas
xor
cli
or
rorl
addr16
test
xlat
cmp
jnp
fnstcw
repz
or
mov
push
fistpl
mov
push
fwait
adc
pop
push
mov
pop
adc
push
dec
and
mov
or
flds
daa
loope,pt
mov
pop
sub
mov
fmuls
push
daa
gs
pop
inc
jg
mov
lds
inc
stos
mov
sahf
adc
in
mov
adc
sti
mov
add
mov
pop
test
fisttps
mov
jne
mov
je
or
fdivr
push
push
and
pop
fwait
cli
xchg
pop
lds
add
repnz
cmpl
sahf
fs
cmpsb
testb
ret
cmc
in
mov
or
push
int3
stos
pop
mov
add
push
or
lret
cld
int
fcmovb
insb
xchg
cs
arpl
pop
add
fldl
jbe
cltd
xor
xchg
inc
pop
je
mov
mov
sbb
xchg
inc
sub
or
movsl
adc
movsl
mov
stos
mov
mov
sahf
xchg
int3
je
jmp
hlt
inc
inc
sub
rcll
mov
pop
sbb
xchg
out
xchg
and
fldl
cmp
dec
test
rep
std
push
sbbl
enter
test
subb
dec
in
add
xor
jae
icebp
dec
xlat
dec
sbb
out
mov
call
fildl
dec
push
addr16
jecxz
sub
or
scas
pop
xor
fcomip
imul
push
xor
or
inc
ja
push
shrb
lds
sub
pop
aaa
in
inc
imull
xchg
jbe
mov
dec
push
mov
outsl
aaa
push
cmp
pop
xor
ljmp
lock
dec
push
or
adc
je
fstpt
loop
aad
mov
jnp
inc
mov
sub
adc
pop
std
das
sti
test
push
outsb
in
add
in
dec
adc
xor
out
xchg
or
mov
xlat
and
xlat
cltd
popf
nop
xor
push
xchg
xchg
pop
mov
imul
mov
xchg
jmp
jecxz
pop
add
lea
test
cmp
roll
mov
imul
inc
push
or
push
movsb
lret
test
sti
scas
loope
scas
xor
leave
mov
into
mov
test
and
inc
popf
ja
in
xchg
sub
jo
add
lds
repz
xchg
mov
arpl
test
aas
sar
call
arpl
pop
and
or
adc
sub
sbb
aas
jne
cmpsb
es
fwait
mov
mov
imul
pop
sbb
in
jp
cwtl
dec
mov
fs
sahf
sar
fstp
xor
adc
inc
or
dec
call
insl
js
jp
or
sub
xchg
scas
fxam
out
popa
fs
in
mov
pop
add
inc
pop
imul
sbb
gs
arpl
push
xchg
fistl
mov
or
sti
stc
adc
mov
repnz
dec
sub
cmp
pushf
scas
dec
push
insb
rcl
shrb
data16
das
js
pop
adc
cltd
jb
cli
ret
adc
ret
xchg
cmp
mov
test
pop
xchg
mov
xchg
popf
faddl
push
mov
call
and
sarb
jge
mov
sbb
xchg
aam
push
jmp
sub
cmp
dec
sbb
aad
shll
lcall
adc
hlt
je
hlt
xchg
adcl
xchg
lods
jne
stos
stos
push
lock
popf
and
dec
push
pop
jl
inc
sarb
adc
loopne
sbb
xor
ds
pop
cmpsb
stos
xor
cmp
popa
fiadds
mov
dec
mov
cmpsl
sarl
out
sub
out
sarb
mov
fisttps
xchg
add
mov
dec
jae
push
mov
addr16
adc
inc
xchg
mov
pop
popf
rcr
push
inc
push
shr
mov
and
int3
ficoml
rcrl
jmp
xor
loopne
add
push
ljmp
arpl
fcomp
lahf
cmp
push
insb
ja
sub
psraw
das
pushf
inc
and
push
ljmp
outsb
xchg
cmp
gs
out
movsl
cltd
shlb
test
cmp
test
xchg
fnsave
xchg
xchg
cltd
or
pop
bnd
sti
outsl
adc
cmp
or
cwtl
out
shlb
arpl
push
std
pop
out
popa
test
push
jecxz
pop
and
or
stc
push
lods
shll
mov
std
push
es
push
add
gs
nop
iret
test
pop
les
sub
aam
loopne
int3
icebp
pushf
jno
mov
iret
push
jae
in
jns
stos
gs
dec
ret
cmp
xlat
push
mov
ss
mov
lock
lea
sub
push
fdivl
call
mov
push
cmp
mov
mov
sub
in
loope
push
inc
push
or
fadds
fcoml
pop
scas
insl
mov
insb
ljmp
cmp
mov
and
mov
inc
mov
out
out
inc
inc
push
sarb
xlat
repnz
sub
loope
arpl
sti
and
xchg
adc
mov
sub
imul
push
out
test
xchg
push
clc
xor
out
mov
xchg
or
int
jl
fcmovnb
jnp
jo
fcmovnu
xor
sahf
sarl
mov
mov
rcll
sti
sbb
mov
cwtl
jns
test
or
repnz
cmp
push
sbb
pop
inc
cmp
cltd
or
fcmovnu
mov
inc
push
int3
bnd
popf
sahf
filds
pushf
dec
daa
cmpsb
jp
sub
cmp
dec
lock
mov
aam
pop
outsb
outsl
cmp
mov
add
pop
push
mov
inc
cwtl
mov
push
js
movsl
mov
sub
aaa
inc
mov
pop
in
inc
sbb
fildl
movsb
fwait
mov
jge
adc
cmpsb
mov
mov
pop
movsb
add
xor
push
aas
push
inc
enter
imul
lahf
sub
fsts
loop
sub
adc
jne
and
cmp
int3
jne
fs
xchg
mov
mull
subb
lods
ljmp
mov
push
add
loop
jecxz
sbb
aad
or
fildl
adc
fcoms
testl
dec
add
js
stc
cld
dec
lock
xor
cmpsb
in
rorl
mov
mov
lret
in
pshufw
enter
aam
fnstenv
jle
mov
add
add
loope
es
mov
jmp
ljmp
ret
dec
and
sarb
or
xchg
cmp
mov
lea
shll
stos
push
hlt
popf
dec
inc
pop
mov
cmp
push
rolb
movsl
das
insb
stos
mov
lret
inc
dec
test
xor
and
pop
ret
sub
popf
enter
and
xor
mov
lods
add
jae
or
cmp
xlat
shlb
and
adc
lods
outsl
jae
dec
outsl
and
pusha
mov
sbb
mov
repnz
xchg
sbb
cli
test
adc
repz
push
mov
xor
aad
jne
jnp
enter
xchg
jae
inc
fsubrs
xchg
mov
nop
mov
outsl
jge
sub
cmpsb
xchg
inc
fdivs
xchg
inc
std
std
stos
icebp
xchg
out
fistps
xchg
inc
sahf
dec
subb
stos
push
jns
adc
jo
or
and
ljmp
mov
mull
scas
in
mov
and
lahf
sbb
mov
mov
adc
xchg
xor
ja
rcl
cmpsb
loope
sub
imul
inc
and
shl
push
mov
filds
mov
and
into
popa
cmpsl
out
sbb
arpl
adc
cs
test
lret
add
or
mov
fisubs
sbb
push
push
test
fsubrp
je
xchg
mov
xlat
adc
insb
imul
test
mov
cmp
adc
mov
gs
xor
push
cmpl
jecxz
mov
test
mov
dec
mov
loope
jl,pt
out
int
cld
cwtl
mov
fdivrp
mov
test
movsb
add
jbe
popa
lahf
mov
push
pop
xor
xchg
ret
shrl
loope
repz
push
xchg
mov
cmp
outsb
das
xchg
aaa
ja
or
fists
and
lds
jae
adc
stc
jno
cmp
cli
sub
in
arpl
push
cs
pop
mov
repz
jmp
pop
cmc
mov
sub
js
aaa
xchg
xor
jbe
xchg
leave
add
dec
bound
push
pop
xchg
dec
popl
pop
xor
mov
lcall
pop
test
aam
xor
mov
out
fisttpl
sub
mov
add
add
dec
push
sub
aas
mov
and
movsb
sbb
aam
jge
in
pop
lock
insl
bound
add
mov
rolb
arpl
lods
aas
scas
dec
dec
mov
mov
dec
test
ds
fcoml
mov
dec
into
adcb
dec
stc
sub
push
adc
jne
add
insl
int3
mov
jbe
xor
pop
pop
dec
jge,pn
rol
sbb
xchg
xchg
lcall
dec
sbb
repz
into
ror
mov
les
mov
orb
mov
and
sbb
pop
out
lds
push
jl
and
arpl
mov
js
clc
dec
pop
and
mov
and
mov
mov
push
movsl
bound
xor
jo
pop
jo
ficompl
movsl
jmp
push
cmpl
mov
nop
xor
xchg
mov
aad
sti
jne
lret
jmp
lret
pop
add
jnp
pop
push
aam
mov
push
inc
jbe
or
or
add
in
std
push
pusha
push
push
mov
insb
dec
push
and
jne
mov
aaa
das
adc
jae
call
mov
mov
lds
packuswb
jmp
mov
jae
lds
sub
fidivrl
jl
dec
fcomps
cwtl
add
xor
mov
xchg
into
das
mov
adc
jl
aas
icebp
mov
stos
mov
iret
sbb
stc
add
push
popa
cmc
ret
push
xchg
pushf
stos
rcrb
cs
popa
xchg
mov
mov
test
outsb
gs
dec
or
mov
and
insb
adc
mov
jo
mov
jo
adc
cmp
popa
adc
push
or
out
mov
mov
lds
push
fistpl
dec
pop
inc
mov
aam
rorl
pop
std
mov
push
mov
cwtl
mov
mov
mov
cli
adc
cmpsl
inc
hlt
mov
loop
cmp
out
cmp
pop
add
sub
hlt
pop
dec
adc
dec
mov
pop
ljmp
lods
push
xchg
insl
sbb
push
push
inc
fldenv
adc
icebp
mov
iret
orl
cmpl
xor
ret
cltd
enter
push
mov
pop
out
xchg
into
stc
arpl
push
lds
addr16
faddl
cli
mov
mov
xor
aas
push
adc
sbb
lods
pop
stos
add
clc
dec
push
shlb
scas
mov
xor
aaa
and
dec
push
daa
cmovb
fidivs
xchg
fldl
in
sahf
ret
lcall
icebp
lods
cmp
sbb
xlat
ret
jge
cmp
inc
mov
in
fucomip
lods
stc
push
cmc
fstps
fwait
lds
or
xchg
subb
insb
or
sar
xchg
push
stos
in
sbb
mov
lea
jecxz
jg
or
mov
xchg
adc
mov
or
push
xchg
call
and
inc
popf
pop
add
xor
sub
push
xchg
subl
sub
push
xlat
aas
cli
jecxz
and
sub
xlat
or
xlat
fnstcw
aad
mov
cmp
dec
je
mov
lds
push
int
sub
mov
mov
and
stos
sahf
pusha
push
mov
data16
sub
imul
cld
cmc
xor
mov
in
lock
xor
mul
and
imul
fistpl
cltd
mov
aad
cmovbe
jo
cmp
jp
inc
xchg
shrb
aas
fwait
pop
movsl
rol
imul
cmp
mov
insl
mov
add
cmp
pop
inc
sub
xor
popa
xorb
dec
mov
xchg
shlb
fcomip
inc
outsl
pop
and
loop
add
lret
rep
and
jg
rorb
ret
mov
xchg
cmp
cmc
adc
pushf
xchg
mov
pop
dec
mov
adc
cmpb
jns
jmp
les
adc
and
sbb
int
mov
int
frstor
je
xchg
lds
shl
or
negl
shlb
adc
cmp
jbe
fdiv
test
scas
icebp
sbb
lods
pop
shrl
in
fmull
dec
jne
ljmp
data16
or
fsubrs
gs
fwait
hlt
loope
mov
and
cwtl
jnp
xor
sub
push
scas
movsb
sbbl
mov
xor
and
mov
pop
repz
loopne
xor
pop
xor
and
xor
divl
out
fcoml
push
cmp
mov
cwtl
jmp
jae
cmp
sub
mov
cmp
imulb
aam
lea
shl
vpshufd
nop
insl
orb
test
loop
pop
ja
cmp
adc
push
dec
push
adc
sbb
aad
mov
outsl
sti
cld
iret
push
shll
xor
cmpsl
mov
lret
pop
lret
or
push
adc
shll
xchg
mov
xor
dec
pop
jnp
xlat
and
jns
movsl
push
xor
mov
push
iret
dec
cltd
mov
cmp
lret
idivl
lcall
mov
jo
add
sub
mov
outsl
inc
ror
pop
mov
push
aad
jbe
pop
xchg
xchg
movsb
lock
call
inc
js
jp
popa
or
fstl
rcrb
fsubp
xchg
test
inc
test
fwait
scas
cwtl
xlat
mov
jbe
clc
mov
nop
xchg
out
int3
push
add
call
js
nop
movsb
cs
inc
mov
add
xorb
mov
or
and
mov
mov
mov
int
mov
data16
mov
inc
jp
adc
cld
mov
lahf
inc
lea
xchg
leave
mov
les
incl
lret
fnstsw
xor
xchg
call
push
dec
addr16
mov
js
outsl
data16
mov
arpl
add
loope
in
xor
mov
roll
out
stos
cmp
repz
jo
sub
dec
mov
cs
das
inc
fildll
cmp
cmpsl
loope
test
mov
cmc
mov
fldt
ljmp
and
xchg
push
pop
cmp
nop
mov
divl
mov
mov
scas
xchg
std
gs
push
and
cltd
jns
sbb
insb
dec
hlt
int3
nop
fisttpl
clc
xlat
cmp
int3
lods
pop
and
stc
mov
ja
push
dec
mov
add
add
mov
pop
test
adc
pop
int
fdivs
sub
adc
cvtps2pd
les
xchg
push
leave
shl
stos
and
cmovnp
lret
xchg
cltd
push
mov
xchg
cmpsb
lcall
lcall
ret
out
shll
xor
and
mov
xchg
mov
xchg
jp
pop
pusha
add
adc
repz
jne
xor
cld
cmc
jb
adc
aam
jl
jne
dec
lods
push
repz
repnz
mov
sbb
out
jg
int3
lods
clc
arpl
push
mov
adc
add
mov
inc
sahf
sbb
fs
xor
leave
fwait
js
xor
xchg
rclb
std
inc
mov
sbb
imul
mov
add
orl
or
sub
lcall
dec
mov
fstpl
cld
xchg
out
repnz
pop
cs
leave
out
mov
mov
or
stos
adc
add
jp,pn
inc
xchg
movsb
mov
cmp
sbb
inc
lahf
nop
and
xor
dec
mov
push
jnp
pop
mov
insl
rclb
cmp
xchg
jns
test
add
iret
cmp
cmpsb
ljmp
push
rorl
or
jge
loope
icebp
loopne
push
fcompl
fucomip
shlb
add
pop
cmp
or
in
pop
add
cmpsl
jge
bound
outsb
dec
fwait
push
ja
lret
loop
incl
mov
sbb
les
jmp
imul
imul
mov
ret
adc
sbb
push
xchg
mov
sbb
mov
cli
stos
xor
call
and
mov
inc
push
clc
xchg
lock
cmpsb
adc
xor
adc
cmp
mov
ret
add
add
mov
sub
loopne
lock
ds
mov
not
xchg
dec
cli
inc
aaa
pop
push
stos
dec
adc
mov
fbstp
adc
je
std
ss
xchg
testb
xor
and
arpl
les
data16
xchg
outsl
cmp
std
fists
inc
mov
in
orl
push
jnp
in
sub
dec
jge
mov
decl
cmp
push
inc
dec
insl
xor
outsl
outsl
inc
outsb
push
xchg
xor
xchg
cmpb
cmp
pop
fsubrs
shl
push
sbb
sar
add
xchg
fstpt
clc
scas
mov
xor
sbb
jb
in
enter
mov
jg
lcall
movsb
imul
mov
ds
aaa
dec
xchg
inc
jnp
adcb
loopne
pop
sub
or
mov
fisubl
das
jecxz
xor
xchg
sahf
ds
sub
add
pop
jb
xchg
and
negl
cmp
mov
popaw
mov
sahf
lods
test
inc
dec
sbb
stos
mul
jp
inc
mov
out
or
or
cltd
das
jbe
shrb
pop
dec
and
dec
stos
jno
inc
cld
shll
xor
test
bound
sub
popa
mov
test
testl
ss
test
sbb
in
fxam
mov
shlb
dec
pop
push
jl
js
popf
rcl
jne
sbb
mov
mov
sysexit
xchg
push
mulb
mov
in
sarl
add
push
ret
mov
lea
lods
out
jecxz
xor
adc
add
and
stc
add
xchg
repz
adc
cltd
adc
movsb
lods
mov
mov
cs
xchg
xchg
dec
ss
mov
out
mov
sti
stos
sub
idiv
cmp
int
ljmp
cltd
mov
mov
fldenv
test
dec
mov
push
mov
xchg
push
push
dec
cmp
fcmovu
repnz
call
icebp
outsl
iret
rcll
ljmp
xchg
push
adc
aad
scas
sub
stc
leave
sbb
in
sub
jl
fyl2x
cs
shll
imul
jg
or
pop
xchg
sbb
popa
inc
cmc
repz
mov
mov
push
pop
cmpsb
ficompl
jmp
pop
mov
jmp
cmpsb
push
stos
pop
js
stos
or
dec
fstl
sbb
aad
jno
aad
hlt
ss
and
in
dec
jmp
aam
scas
jo
xor
lcall
loopne
sub
andb
pop
aaa
sbb
add
loop
clc
js
add
into
sbb
mov
adc
sti
add
stc
fwait
sti
pop
xor
adc
jae
mov
jmp
incl
pop
sarl
ja
fnsave
test
cs
dec
cmp
mov
dec
stc
cmp
bswap
shlb
mov
cmp
xchg
pop
mov
mov
sub
cmc
lods
push
dec
rolb
pop
lock
xchg
jo
loope,pt
imul
adc
cmp
pop
scas
jmp
int3
mov
or
sbb
push
cmp
aam
fstpt
xor
fildl
adc
dec
ljmp
sub
cltd
push
add
sti
mov
push
shll
jecxz
or
test
imul
rolb
mov
jnp
ret
cmp
clc
inc
andb
leave
pop
leave
sti
dec
xor
dec
mov
mov
cmpsb
xchg
gs
loope
cwtl
xor
and
inc
leave
test
std
and
jnp
insb
scas
int3
fwait
lret
xchg
mov
sub
rorb
inc
pop
add
rorl
or
or
mov
lahf
lcall
mov
mov
sub
in
jb
notb
fcompl
push
mov
cli
xchg
repz
test
adc
mov
into
test
test
and
and
xchg
loop
sar
test
adc
and
jo
imul
sbb
lods
push
scas
mov
mov
push
mov
dec
add
test
mov
repz
inc
xor
pop
inc
lds
mov
xor
mov
jnp
jle
fs
std
add
dec
xchg
push
push
or
lods
mov
fbstp
cmp
sub
pop
jns
jb
inc
jno
loopne
arpl
pop
bound
test
dec
lock
lea
cmc
mov
fistl
add
xchg
in
inc
out
mov
sbb
dec
xchg
sarl
cmovns
sti
lock
scas
sub
sub
iret
mov
scas
mov
sbb
ljmp
xor
ss
and
arpl
adc
push
xchg
mov
jge
add
or
xchg
mov
jnp
mov
cmp
dec
jecxz
inc
fcmovu
push
mov
popa
cmpsb
into
iret
lcall
aaa
adc
sti
push
pop
test
je
push
add
inc
mov
test
mov
je
mov
push
call
shlb
push
lret
cwtl
nop
pop
and
and
inc
mov
add
mov
adc
sbb
sub
pop
cmpsl
xchg
add
ss
lock
loope
inc
add
ret
jge
loopne
dec
xchg
xchg
aaa
cmpsb
add
jae
out
leave
jmp
cmp
push
mov
lods
loope
push
mov
nop
inc
orl
mov
push
adc
jg
arpl
dec
fistpl
cmc
mov
push
or
data16
adc
sub
push
dec
xchg
fcoml
cli
leave
mov
and
popa
rorb
dec
adc
dec
adc
in
pop
dec
out
scas
ss
addr16
pop
test
add
dec
imul
call
mov
into
and
rcll
aaa
mov
into
xor
shrl
mov
pop
push
cmp
inc
dec
js
popa
imul
jns
jp
divl
test
and
bound
test
ret
aad
dec
das
cmpsl
push
icebp
xchg
dec
loop
xor
hlt
mov
lods
dec
jo
push
sbb
mov
jo
inc
push
dec
out
sub
and
gs
mov
into
mov
dec
lock
icebp
daa
add
mov
fcmove
ret
pop
lcall
adc
cmpb
into
and
daa
or
push
fdivrs
int
and
xchg
jmp
shr
fs
lods
jge
fisttpll
loopne
mov
jne
xchg
insb
mov
std
mov
and
pop
dec
inc
push
xchg
dec
jge
jmp
jge
push
xchg
cmpsb
pop
inc
adc
aad
sahf
je
xchg
mov
orb
sahf
adc
xchg
inc
test
loop
add
stc
push
inc
bnd
lods
fcmovnb
cwtl
jae
mov
mov
xchg
inc
scas
or
jl
sbb
sub
push
sub
adc
push
pop
popa
sbb
cmpsb
imul
pop
mov
rorb
loope
xor
dec
arpl
dec
pop
daa
call
nop
pop
or
mov
cltd
lock
or
pop
push
push
mov
sbb
mov
fs
test
aad
cmpsb
jmp
mov
jne
loop
lock
push
pop
inc
stos
mov
sarb
jge
mov
dec
xchg
mov
add
test
ds
aad
cltd
mov
mov
stos
cmp
sbb
mov
sub
add
in
sub
push
or
inc
icebp
daa
jns
lea
jle
sti
int3
xchg
cli
dec
cmp
xlat
or
testb
inc
not
mov
out
jmp
lea
xor
testb
cltd
aad
push
repz
scas
mov
sbb
adc
sbb
in
cwtl
or
imul
sub
pop
dec
aad
xchg
and
fsubl
and
fucomi
sbbl
jae
test
xlat
pop
cltd
test
cmpsb
mov
insb
out
fnstenv
arpl
into
xchg
add
scas
pusha
jg
daa
in
lea
sarl
jp
cmpsb
push
add
nop
pusha
adc
aas
orl
jbe
je
sahf
adc
jge
ljmp
leave
out
mov
add
xor
mov
jns
pop
andl
loope
pop
adc
dec
movsl
xor
iret
or
xorb
mov
lahf
cmc
out
or
lret
ljmp
mov
rcll
subb
popa
fwait
insb
test
scas
test
fsubl
ret
or
push
popa
sbb
pop
xchg
rorb
xchg
cs
es
bound
push
out
jo
push
lret
lods
cmp
jecxz
fdivs
addr16
outsb
pushf
xlat
in
mov
mov
js
idivl
mov
add
repnz
mov
lds
jne
cwtl
sahf
and
sti
sbb
push
inc
xchg
mov
sbb
dec
test
adc
cltd
pop
sbb
ljmp
cmp
insl
stos
and
and
adc
sub
fld
sbb
mov
in
xchg
xor
cmpsb
adc
push
cltd
and
les
cmp
jne
sub
fildl
dec
ljmp
or
leave
sahf
stos
push
add
into
in
xlat
mul
adc
cmpsb
das
add
mov
mov
outsb
jle
stos
adc
xchg
stos
outsb
inc
sbb
inc
loopne
fdivs
mov
mov
xchg
xchg
out
ficompl
or
adc
sbb
aam
movsl
add
fs
test
andb
cmpsb
xchg
adc
dec
add
pop
cmpsl
jo
jl
rol
mov
pop
sbb
enter
outsl
hlt
xchg
jne
push
push
mov
pop
fsubrs
popf
pusha
test
pushl
pop
cs
lods
xor
adc
flds
daa
movsb
dec
xchg
push
ret
push
insl
hlt
loope
cltd
lods
shl
jge
pop
fs
adc
jge
pop
cmc
inc
sbb
stos
mov
push
pop
jle
push
test
loope
mov
xor
mov
test
and
dec
push
sub
testb
test
push
push
adc
push
sub
push
ret
fnstsw
mov
jmp
rclb
add
cmp
and
jb
dec
js
popl
test
nop
in
das
mov
insl
jg
jecxz
out
es
pop
jl
xchg
jne
aad
add
bound
push
sbb
out
cmp
jae
out
mov
hlt
call
push
fucomi
inc
loopne
lret
and
in
addr16
out
pop
xchg
or
dec
iret
mov
std
sbb
ret
dec
sub
insl
nop
adc
mov
inc
or
dec
test
inc
pop
mov
cmp
sbb
add
dec
mov
dec
xorl
push
sub
adc
rcrb
xor
add
ffree
xchg
sbb
es
test
lds
and
adc
jbe
lods
fbstp
dec
test
and
dec
mov
subb
imul
arpl
or
push
test
push
adc
rorb
jecxz
cmp
or
adc
adc
mov
stos
adc
mov
mov
xor
mov
ficomps
push
aas
pushf
ret
adc
aad
xchg
or
pop
push
jno
in
jae
sub
fadd
adc
inc
xchg
andb
leave
mov
jnp
pop
push
popf
addr16
fstps
pushf
rolb
push
imul
outsl
push
mov
sarl
inc
jge
push
push
or
mov
inc
mov
lds
dec
aaa
cld
dec
je
inc
sarb
mov
lds
jecxz
jmp
out
fmul
mov
hlt
cmp
outsb
int3
nop
push
cwtl
test
xchg
sbb
imul
outsl
fimuls
cmp
sub
sub
lret
mov
dec
cmp
add
stos
cmpsb
ja
cmpl
or
cmpsl
pop
sbb
jae
bound
dec
or
jo
mov
xchg
and
mov
adc
add
leave
sbb
mov
pusha
int
fnstcw
in
inc
jl
insb
test
scas
cmp
das
mov
inc
add
dec
inc
push
test
dec
sbb
xchg
fidivs
sahf
jge
cmp
lea
sub
xor
and
test
dec
xchg
jne
pop
pushf
fsubl
sbb
jecxz
or
mov
test
testl
addr16
int
mov
dec
adc
mov
push
jl
xchg
sti
cmpsl
movsb
sbb
fldenv
mov
and
mov
jmp
xorl
sahf
into
iret
mov
movsb
test
das
pop
rorl
lea
ds
jne
nop
push
mov
push
hlt
add
xor
gs
sub
fcoml
mov
jl
and
scas
inc
movsb
push
loope
mov
sub
icebp
jno
xor
dec
repnz
pop
popf
scas
ret
das
outsb
aad
sbb
addr16
shrl
add
push
and
js
jl
push
mov
and
sti
push
push
fistpl
xor
mov
lcall
pop
popa
cltd
stos
out
mov
sti
and
cs
cmpsl
scas
xor
lcall
cltd
mov
push
fs
cmp
stc
movsl
add
and
aaa
shr
addb
cmp
pusha
jb
loopne
insb
push
xchg
xchg
dec
rcrb
arpl
mov
pop
fisubrs
or
fs
pop
mov
int3
lea
add
xor
shl
pushf
xchg
cmp
jb
dec
mov
in
scas
fs
mov
ljmp
inc
lds
jl
adc
mov
negb
stc
movl
mov
fstp
push
cltd
hlt
xchg
mov
icebp
and
jbe
in
loope
rcl
lea
fcmovnb
sub
dec
fisubrs
insb
pop
in
sub
jo
fcmovb
pusha
es
data16
call
push
sbb
inc
xor
enter
testb
loop
les
push
mov
in
ds
enter
outsl
into
sub
mov
aad
push
das
mov
inc
sbb
aas
test
sub
fidivrs
sub
in
xchg
jmp
dec
pxor
fsts
and
mov
lds
rol
in
ss
adc
fidivrs
and
sub
dec
test
out
int3
mov
out
loopne
xor
cmp
mov
xchg
repz
cmp
pop
fcmovbe
dec
dec
jle
push
sbb
cld
mov
sbb
unpcklps
loopne
into
sub
cmpsl
js
mov
iret
dec
int3
xor
mov
mov
nop
inc
push
stos
loop
mov
or
or
lock
cmp
ret
aam
xor
cmpsb
imul
pop
sub
andl
jecxz
mov
or
sub
add
mov
mov
xchg
lods
adc
stos
leave
xchg
jo
stos
aad
mov
or
psadbw
inc
xor
add
pop
fistpl
lea
shrl
mov
push
jg
popf
shlb
fisubl
jbe
dec
xor
pop
fs
js
dec
lcall
and
sbb
cli
push
daa
lahf
xchg
sbb
add
push
adc
ficoms
dec
cltd
inc
adc
mov
lea
fmull
cmp
bound
hlt
lock
xchg
pop
cwtl
jo
cmp
add
inc
pop
leave
aas
xchg
daa
ror
sub
mov
or
aad
sti
mov
shlb
in
into
mulb
mov
int3
insl
dec
aad
or
sahf
push
mov
push
pop
test
inc
aam
mov
out
push
inc
popf
fmul
rcll
inc
mov
movsb
dec
jl
mov
xchg
xchg
jecxz
sub
mov
mov
ljmp
in
cmp
mov
mov
cwtl
mov
adc
stc
hlt
mov
lock
jmp
sahf
aam
xchg
add
inc
and
outsl
adc
inc
pop
and
xchg
dec
scas
insb
pop
push
dec
pop
cmpsl
sub
sti
inc
out
lahf
pop
in
xor
dec
adc
adc
inc
mov
sub
or
jb
leave
and
jmp
pushf
sahf
cmpsl
filds
adc
int
movsl
ja
mov
jns
jge
mov
fnstenv
std
rclb
push
into
adc
adc
pop
push
mov
cmp
mov
stos
pop
rcrl
bnd
add
and
mov
pop
int
rcl
mov
cmp
jl
pop
push
iret
shrl
cmp
filds
adc
cmc
ficompl
pop
jb
aaa
xor
add
cmp
inc
pusha
aaa
dec
out
add
lock
add
xorl
jge
or
sub
insl
test
cwtl
movsl
or
pop
xchg
pshufw
dec
jle
pop
mov
lods
mov
jle
xchg
pop
and
xor
cmp
pop
fdivl
pop
or
cmp
add
dec
push
lahf
in
fldl2e
imul
add
xorl
pop
adc
and
add
aad
pop
lods
ret
add
cs
movsb
mov
lods
mov
mov
sub
jb
cmp
mov
mov
mov
insl
je
add
xchg
push
insb
stc
fadds
or
sbb
xorb
add
fstps
mov
or
lret
lds
jg
dec
pop
jl
ss
pop
or
or
sahf
cmpb
test
sub
cmpsb
addr16
xchg
xchg
icebp
cmp
jg
push
and
js
test
ljmp
loope
aad
test
mov
dec
loopne
and
sub
sub
mov
loop
test
mov
cmp
mov
jl
jns
cmpsb
cs
jg
movsl
xor
xor
and
aam
dec
hlt
mov
push
inc
les
pop
mov
cmp
cmp
fucomip
jmp
data16
sub
mov
repz
dec
mov
lock
or
push
mov
andl
into
insl
bound
sub
rorb
test
mov
ja
sub
repz
std
mov
test
cmp
jle
jo
inc
sahf
pusha
cwtl
ret
cmp
out
jmp
fsubs
pop
shrb
sbb
scas
icebp
outsb
test
mov
lret
mov
mov
xchg
out
mov
hlt
push
fistps
add
push
cmpsb
push
cld
lret
lahf
loopne
mov
leave
dec
add
xor
xor
scas
mov
leave
jo
daa
jne
je
fsubp
mov
cmpsb
inc
shll
adc
rorl
push
dec
cmp
mov
cwtl
lods
mov
inc
adc
cmpsb
fists
lods
and
mov
andb
gs
addr16
mov
lret
sub
lret
outsb
dec
adc
mov
stos
xchg
sub
push
dec
jb
adc
inc
jno
test
pusha
test
push
jg
pop
pop
fadds
jg
pop
notl
and
daa
sub
cwtl
outsl
sub
add
ret
add
sarb
testl
sub
dec
lret
test
sbb
sbb
mov
imul
sbbb
jle
jmp
xchg
loope
subl
and
cld
sub
cli
insb
sarl
ss
xchg
jae
loop
dec
sub
pop
jle
dec
pop
pushf
dec
cwtl
add
add
mov
scas
hlt
lds
jno
mov
test
add
xchg
hlt
subl
sub
test
je
ror
popf
movl
test
addr16
adc
rclb
imul
jmp
pop
outsl
das
aad
dec
loope
and
jno
mov
repnz
rcrl
ss
jbe
ja
xchg
sbb
lods
icebp
mov
addr16
mov
dec
movsb
cmpsb
or
mov
arpl
nop
sbb
push
inc
xor
mov
cmp
sub
sbb
mov
jp
pop
movb
and
add
cmpsb
fisttpll
test
fnstsw
ds
adcb
lock
repz
mov
popa
jle
adc
and
popf
bound
xchg
lcall
mov
adc
ss
cmp
sbb
dec
xchg
cmp
inc
sub
xor
push
std
out
push
and
into
push
and
shll
jge
sarb
les
mov
and
pop
dec
clc
mov
push
jno
inc
add
sub
scas
dec
ljmp
loope
or
je
sub
icebp
pusha
aaa
cmp
movsl
fsubrs
dec
repnz
and
sbb
push
jl
fs
push
lds
mov
dec
jns
sbb
fsts
js
push
loopne
aaa
or
or
movsb
bnd
and
jae
inc
push
push
movsl
jle
je
push
cmp
push
je
fs
add
outsl
sbb
insb
pop
sub
stc
aas
add
jg
or
insb
shll
push
lds
inc
leave
push
adc
sub
and
stc
fcomps
sbbl
inc
cmp
mov
loopne
xchg
pushf
cmc
xchg
out
mov
rclb
lods
push
imul
loop
cmp
xor
sub
pop
jge
jmp
shrb
dec
fwait
push
pop
xchg
sti
pop
pop
pop
fdivl
xchg
cmp
test
dec
movsl
out
inc
jle
mov
mov
sub
jbe
ljmp
adc
pop
xor
in
or
icebp
pop
insb
jb,pn
inc
dec
mov
out
das
jle
in
pop
push
xchg
aaa
js
lret
fnsetpm(287
fs
repz
insl
mov
inc
pop
aam
xchg
xchg
ds
popa
mov
mov
xlat
aas
pop
outsb
xor
cmp
mov
sbbl
add
inc
ja
out
mov
fsubl
cmpsb
aaa
fs
lock
push
filds
pop
or
imul
mulb
in
fisttpl
ret
mov
jne
push
pop
add
sbb
sub
fdivl
repnz
fdivl
fcmovnbe
push
roll
aad
inc
sbb
out
hlt
mov
aad
sarl
lcall
mov
xor
imul
imul
cmp
mov
test
sub
inc
push
negb
fisubs
jle
sbb
push
fbstp
mov
jge
mov
ljmp
xlat
push
jne
fstp
dec
roll
push
aad
or
and
pop
stos
cmpsb
jmp
lds
int
pop
pop
iret
sbb
xor
add
pop
mov
into
jmp
ja
aaa
push
xchg
xchg
ds
cmp
adc
pop
or
adc
and
imul
xchg
lods
xor
or
push
imul
and
push
add
in
pusha
or
mov
test
sbb
fnstsw
xlat
or
pop
loop
sbbl
adc
lods
adc
cmp
jge
xor
nop
fs
cwtl
xor
jp
xor
repz
cwtl
fstpt
add
xchg
cmp
dec
outsl
push
pop
int
call
mov
loop
sbb
add
cmp
mov
lods
push
inc
mov
fisubrl
es
scas
and
loop
push
sub
js
fs
std
std
aad
dec
cmp
mov
je
arpl
pop
add
xchg
xchg
movsl
test
test
or
outsb
and
or
das
aas
mov
add
aam
mov
stos
cmp
xor
cmpsb
rolb
mov
bound
jg
mov
cmp
and
aam
inc
adc
inc
push
lea
or
pop
ror
and
jmp
es
lcall
in
or
push
inc
das
xor
loop
pushf
imul
lret
xor
repz
cmc
enter
sahf
aas
jae
cmp
xorl
xor
pusha
imul
cmp
cwtl
ss
cmp
xchg
flds
neg
js
scas
or
push
add
lret
and
pop
dec
cmpsb
and
dec
pop
js
out
setbe
cmp
aad
mov
enter
mov
add
shll
cs
aaa
or
test
mov
mov
filds
rcr
insl
adc
fidivs
xor
movsl
pop
jmp
xchg
mov
cwtl
cmp
lret
add
or
and
cwtl
mov
mov
push
iret
les
jns
mov
adc
mov
loope
into
adc
inc
lret
fcmovne
int
subb
jl
pop
mov
push
mov
adc
loop
imul
or
or
xchg
cli
popa
sub
cmp
cmc
mov
das
adc
pop
mov
mov
inc
bound
mov
cmc
xorb
mov
data16
dec
cs
fstps
or
sub
adc
test
jo
cmpsb
pop
out
sub
pushl
aam
xor
in
jmp
push
sbb
and
adc
scas
outsb
iret
pop
lock
rclb
xchg
mov
adc
mov
dec
mov
jp
adc
rcrb
popa
jae
gs
push
sub
dec
mov
push
add
pushf
pop
les
dec
mov
jne
add
lods
inc
ljmp
adc
xor
lock
cmp
and
lret
pop
mov
inc
and
or
js
lods
pop
xor
stos
icebp
jae
test
cmp
xchg
xchg
jo
mov
lods
sbb
cmpsb
icebp
xor
inc
inc
add
mov
mov
mov
mov
mov
iret
jg
cmp
sbb
pop
mov
xor
sub
inc
sbb
mov
jae
mov
and
aaa
xor
int3
xchg
loope
pusha
inc
and
add
lret
cmpl
dec
add
ljmp
dec
int3
divl
xchg
mov
pushf
dec
repz
xor
xor
inc
mov
push
add
arpl
jno
or
test
arpl
test
cmp
mov
push
xor
and
dec
dec
js
insl
pop
push
aas
and
jns
bound
push
xchg
les
xor
imul
adc
fs
cmp
je
inc
push
xor
int
cli
pop
push
dec
in
sub
insl
fisubl
adc
popa
xchg
lea
or
pop
icebp
inc
int3
sbbl
addr16
loope
sbb
arpl
push
or
call
adc
mov
fldt
push
clc
mov
test
xor
add
leave
push
push
adc
push
or
lea
inc
fistpl
out
sub
xor
push
idivb
fmuls
stc
mov
mov
dec
das
mov
dec
aas
adcb
mov
iret
add
lds
sar
test
push
lret
jae
lds
out
shrl
ds
lock
dec
pop
jb
aad
adc
mov
and
adc
mov
out
ret
push
sbb
and
movsb
lock
push
inc
cmp
enter
and
in
aad
cmp
mov
sar
sbb
insb
dec
jb
sbb
sti
and
sbb
ret
jns
inc
jo
jns
xor
cmp
hlt
push
xor
dec
pop
cli
pop
push
push
fidivrs
iret
emms
xor
data16
js
std
les
femms
fsubrs
cwtl
out
or
xor
dec
pop
add
fsubrl
sbb
dec
cmpsb
ds
loopne
jle
lret
mov
xchg
pushf
push
push
mov
push
jg
scas
cltd
lahf
hlt
aas
in
jp
leave
xor
popa
push
inc
fstpl
fdivs
xor
push
ret
pop
push
sbb
repnz
pop
cmp
lds
pop
jnp
mov
pop
cwtl
aas
idivl
das
aaa
and
popa
or
addr16
aaa
xchg
cld
mov
push
movsb
push
jg
sbb
mov
inc
and
adc
adcl
or
icebp
cmpsb
mov
in
rcl
scas
pusha
adc
mov
lcall
negb
int
dec
pop
cmpsb
mov
loopne
sub
sub
adc
pop
sub
in
enter
jge
dec
and
push
push
push
lods
das
fistpll
add
pop
data16
and
sub
and
adc
pop
pop
mov
leave
call
idivl
adc
icebp
nop
push
adc
shll
xchg
mov
mov
pop
xchg
push
test
sbb
hlt
and
std
mov
inc
cli
out
push
testl
ds
sub
bound
mov
loopne
jmp
add
and
mov
jae
movsl
sbb
jmp
mov
icebp
nop
sbb
push
and
push
jle
sti
jg
or
cltd
lret
xchg
cmp
into
jg
mov
dec
jecxz
sbb
dec
or
scas
lret
bound
inc
jge
imul
adc
je
mov
jnp
add
inc
adc
scas
push
sbb
aam
or
lcall
sbb
jb
mov
add
mov
jb
in
mov
aad
jnp
dec
cld
push
jns
mov
xchg
and
popa
out
and
rorl
jg
fisttps
sahf
pop
fcomps
mov
out
lea
jle
pop
dec
test
mov
mov
addr16
mov
cld
lods
mov
jg
inc
xor
out
add
jge
add
leave
mov
mov
dec
mov
ret
xchg
aam
lds
leave
aam
pop
xchg
sub
dec
and
or
les
xchg
sbb
addr16
pop
pop
aas
mov
popa
xor
push
popf
sarl
or
adc
iret
sbb
into
rcrb
mov
xchg
ret
jb
sbb
andb
jg
aam
sub
inc
repz
in
enter
adc
adc
popa
test
dec
pushf
inc
loop
fstl
push
lock
push
mov
and
std
fnstcw
out
xchg
xor
inc
data16
jno
add
in
jo
xchg
in
jo
comiss
das
enter
pop
fidivl
xchg
test
mov
sbb
jne
js
aas
ret
cmp
outsb
mov
outsb
cwtl
lods
and
mov
dec
cwtl
add
jp
and
jmp
mov
cmp
cmp
stos
cmc
push
icebp
mov
or
mov
imul
shlb
sbb
cmp
repnz
dec
mov
cli
jl
jecxz
pop
pop
push
bnd
ljmp
mov
cltd
sub
inc
stc
sbb
lods
cmp
ljmp
and
push
negb
cwtl
subb
sar
bnd
in
push
nop
lods
jecxz
or
out
daa
aam
insb
fdivrs
lods
sub
xchg
xor
jne
inc
add
cmpl
push
ret
inc
sub
fs
add
out
inc
ds
fs
ljmp
pop
xor
loopne
and
add
xor
add
xchg
cmp
cltd
add
mov
xchg
into
ret
iret
sti
inc
sbb
push
xor
jmp
jp
add
fistps
or
loopne
xchg
adc
test
mov
addr16
add
notb
cwtl
dec
lods
lock
popf
pop
jg
fisttpll
sub
repnz
mov
lcall
dec
ffree
sub
jl,pt
lret
mov
cmp
iret
mov
push
subb
jge
ljmp
cmp
nop
lock
or
inc
pop
clc
cmp
cmp
out
fcmovnu
or
dec
test
adc
mov
jno
pop
sbb
les
movsl
popf
mov
daa
ret
mov
inc
loopne
aad
pop
xchg
dec
pop
mov
ja
negl
loope
in
stos
movsl
cmp
pop
cwtl
fisubs
sub
data16
cmp
xchg
and
mov
inc
out
int3
or
pop
aas
pusha
jl
jae
mov
dec
icebp
mov
das
add
dec
mov
and
adc
out
gs
dec
ret
inc
push
jns
in
clc
pop
cltd
inc
jae
add
pop
iret
ret
shl
ret
xchg
lcall
pop
adc
and
jg
repnz
xor
xchg
fmul
mov
adc
sub
add
mov
push
adc
mov
push
xchg
mov
fnstenv
cld
xchg
lock
aas
lret
sbb
xchg
pusha
mov
push
lcall
add
leave
push
fsubr
xchg
stos
sti
dec
adc
dec
jl
push
ds
out
insb
adc
jns
sbb
stc
adc
outsl
sti
fs
mov
movl
call
fisubs
test
sahf
fdivrl
sbbb
jb
in
fcomps
push
mov
mov
imul
orb
dec
testl
jle
xchg
mov
in
cmp
pop
leave
push
xchg
jb
adc
inc
subl
adc
out
loope
std
clc
and
lods
jecxz
cmp
push
jne
out
mov
std
pop
insb
imul
mov
and
loopne
adc
push
lahf
or
ficoms
and
out
pop
mov
data16
aad
out
int3
clc
es
test
jmp
jp
sbb
in
loop
adc
pop
outsb
lcall
jno
imul
aaa
sarb
and
cmp
mov
cld
ror
cmp
pop
mov
xor
jmp
pop
cwtl
std
adc
xchg
adc
xchg
ret
loope
add
fcoml
push
push
cmp
stos
jb
push
les
cmpsb
dec
mov
stc
out
inc
mov
hlt
scas
jb
nop
xchg
icebp
jmp
sbb
adc
hlt
push
int3
es
loop
xor
shl
push
pusha
sub
or
adc
jge
mov
jns
fstpt
and
push
das
mov
mov
or
fxch
call
out
in
faddl
mov
mov
lcall
stos
pop
push
loop
dec
inc
jmp
ret
cmp
into
cmp
jg
scas
mov
sbb
iret
cltd
pop
in
orl
rcl
rclb
mov
mov
fwait
cmpsl
sbb
pop
cmp
lret
bound
pop
clc
subl
inc
loopne
call
test
shll
in
or
fwait
dec
into
stos
je
push
leave
mov
mov
imul
aas
and
in
jp
jle
movsl
mov
jge
mov
sub
cwtl
add
jge
push
add
xchg
fnstenv
enter
popa
popl
add
xor
fnstsw
lock
add
mov
cmp
sub
lods
pop
mov
xchg
faddl
sub
pop
andb
cmp
rclb
add
lds
fwait
cltd
iret
movsl
jae
xor
mov
clc
pusha
mov
loop
aad
icebp
add
movsb
mov
mov
pop
sbb
js
in
push
gs
roll
inc
addr16
mov
fwait
jb
movsb
push
in
jle
mov
shr
jnp
push
lret
push
ffreep
jb
xchg
xchg
sbb
fst
mov
rorb
xor
xlat
movsl
stc
adc
push
sbb
enter
xchg
cmp
xchg
in
aas
gs
mov
and
les
mov
movsl
adc
push
xor
popf
enter
push
das
sub
lock
add
sbb
sub
mov
push
aad
xor
push
fcompl
imul
rcr
adc
sbb
scas
xchg
mov
hlt
mov
dec
sbb
lods
xor
aas
std
in
ja
hlt
call
push
cli
aaa
and
roll
mov
out
movsl
xor
or
cld
inc
jae
sbbb
or
xor
xlat
sbb
mov
sbb
and
xchg
pop
or
aaa
jno
add
pushf
mov
aas
push
xor
sarl
in
inc
in
icebp
lret
mov
ljmp
aas
movsl
push
sahf
aad
push
lea
popf
movsl
mov
adc
daa
mov
fcoml
cmp
xchg
fcmovbe
push
push
fidivs
arpl
dec
jl
jmp
xchg
je
enter
mov
or
aad
lds
or
pusha
das
fwait
sahf
xchg
lock
test
xlat
into
adc
lahf
mov
inc
movsl
cmp
mov
in
and
dec
adc
push
loop
fidivs
js
mov
inc
push
out
push
lcall
popa
je
nop
mov
outsb
jmp
test
sub
mov
mov
xor
cmp
and
test
lds
dec
sub
push
adc
or
cmp
xchg
lods
xor
pusha
jg
cmp
lret
pop
inc
ljmp
sub
pop
sti
push
dec
or
jp
and
and
out
in
pop
imul
ljmp
pop
roll
mov
dec
sahf
xor
sbb
stos
adc
mov
push
mov
dec
gs
jb
dec
xchg
lods
cmc
movsb
cmc
subb
mov
xchg
xor
mov
pop
faddl
mov
dec
lahf
adc
cs
pop
sbb
sbb
mov
cmpl
cmp
pop
aaa
daa
cmc
xchg
and
in
out
or
mov
mov
std
mov
or
and
movsl
jno
jns
sub
mov
push
jbe
push
cmp
xchg
out
mov
and
xor
fdivrl
mov
add
mov
je
sbb
mov
je
lret
scas
loopne
xchg
rcrl
mov
jae
ss
lret
faddl
pop
dec
aad
fs
orl
push
adc
out
mov
add
mov
or
ljmp
pop
cli
cmp
bound
mov
or
mov
mov
daa
mov
movsb
cli
andl
lock
decb
mov
aaa
loop
inc
cmpsl
fstpl
rcrl
repz
jp
popa
jbe
shlb
pop
xchg
loopne
addr16
dec
leave
and
addl
sahf
cmp
pop
aam
test
jbe
mov
jnp
dec
cmp
xchg
out
dec
std
jbe
data16
cltd
sarl
or
mov
cmpsb
fistpll
mov
ret
adc
out
pop
test
mov
mov
cli
inc
fldcw
cltd
add
xchg
into
pop
jmp
aaa
cmp
loop
and
sbb
cltd
jae
and
mov
movsb
and
dec
jl
jp
jae
in
fisubrs
je
xchg
mov
adc
ret
cwtl
xacquire
cmpsl
jg
xchg
call
jae
test
fldl
xchg
push
aam
jno
or
enter
mov
push
cmc
icebp
cltd
nop
mov
push
inc
subl
test
mov
jmp
or
into
in
fwait
roll
lcall
aaa
jle
cmp
jno
arpl
sti
lea
push
cltd
lret
xor
jno
jne
leave
ljmp
pop
cli
divl
hlt
shrb
cmp
aaa
movsl
xchg
arpl
or
xor
mov
das
dec
aam
imul
inc
shrb
aad
addl
lret
int3
xor
sbb
mov
das
fldlg2
and
fs
push
daa
enter
cli
xchg
cwtl
pop
test
and
xchg
push
sbb
push
pop
mov
mov
mov
inc
mov
and
lods
xor
mov
int3
sbb
mov
int3
arpl
mov
fiadds
loop
mov
repz
sub
xchg
lea
mov
in
or
pop
lret
not
out
xchg
xchg
mov
aas
loop
and
pop
mov
jnp
popf
adc
pop
push
aaa
mov
out
jmp
andl
push
inc
std
je
ss
and
or
je,pn
arpl
inc
push
push
inc
stos
idivb
mov
cmpsl
mov
and
cli
cli
stc
dec
arpl
mov
in
push
jge
xchg
repz
mov
movsl
xchg
hlt
mov
ja
mov
enter
les
pop
das
add
je
cs
bswap
sub
xchg
add
xor
cmp
leave
ret
arpl
call
addl
scas
pop
xor
push
movsl
lods
ljmp
into
mov
mov
jo
sub
lcall
cmpsb
and
push
ss
daa
cmp
pop
fptan
sub
cli
les
imul
or
shlb
xor
sar
jp
sbb
mov
or
arpl
cmovl
xlat
test
lock
les
dec
dec
dec
call
jno
or
enter
lds
daa
insb
mov
sub
pop
cmp
add
inc
cltd
ret
xchg
addb
popa
int
aaa
clc
mov
test
in
lods
in
xchg
pop
test
mov
mov
out
dec
test
add
and
repz
insl
test
pop
fdivr
xor
cmp
cmc
aas
data16
repz
int
push
jg
fwait
int3
ret
out
inc
addr16
cmpsl
push
cltd
and
and
mov
sbb
data16
out
jae
out
mov
dec
loope,pt
xor
and
ficoml
and
push
inc
shlb
shlb
in
imul
xchg
icebp
push
mov
xchg
nop
lea
xchg
and
sbb
adc
stos
jg
cmp
test
and
sahf
pop
sahf
iret
mov
std
mov
sub
jnp
xlat
cpuid
mov
jns
mov
fisubl
pushl
mov
clc
mov
jnp
fwait
ss
sahf
bound
mov
or
dec
xchg
push
push
add
xchg
sbb
mov
pop
dec
data16
mov
mov
adc
lahf
sub
lock
jmp
mov
jb
fwait
fs
mov
popa
repz
std
js
push
xchg
aam
insb
xchg
mov
adc
jne
repnz
push
push
std
sub
sbb
jb
lea
leave
and
mov
mov
int
xchg
cmp
cltd
lods
int
mov
pop
push
movsb
mov
xlat
les
cmpsb
ret
mov
mov
inc
pop
mov
pusha
repnz
in
fwait
and
cmp
movsb
stos
cwtl
mov
mov
mov
and
setg
push
mov
in
jae
test
fcomps
fiadds
jmp
aad
push
xor
cltd
push
icebp
inc
jg
getsec
mov
mov
dec
inc
mov
cmp
jo
fsts
sti
out
sarb
inc
push
outsl
je
xor
test
pop
xchg
cmc
hlt
mov
pop
in
add
add
cmp
sbb
subb
or
inc
out
cmpsb
push
mov
ror
mov
data16
shlb
jbe
jo
orb
jle
ljmp
lahf
add
leave
xchg
mov
push
pusha
add
outsb
pop
scas
mov
fsubs
test
xchg
or
pop
in
cmpsb
out
movsl
adc
xor
cwtl
sahf
push
out
into
int3
mov
aam
shr
call
test
add
les
fwait
pop
roll
negl
or
mov
sbbb
leave
sub
xchg
leave
inc
in
xor
adc
push
cmc
imul
or
mov
in
data16
outsl
fimuls
pop
sbb
or
sbb
clc
pop
jnp
aad
loope
xchg
shll
jo
jnp
mov
fimuls
iret
cmpsl
lret
push
mulb
push
mov
sbb
pop
sbb
int
xchg
mov
addb
dec
cmp
cmpsl
pop
into
int3
jle
inc
cmp
add
in
xchg
imul
bound
lcall
outsb
test
jae
sti
add
test
mov
or
in
inc
imul
xor
or
hlt
addb
xchg
inc
push
hlt
sub
arpl
or
xchg
cli
push
int3
adc
sub
pop
push
dec
jl
xchg
aam
fstpl
lret
ret
test
testb
ljmp
test
pop
sbb
jns
sbbl
lds
pop
test
cmc
dec
and
int
dec
pop
mov
dec
jnp
dec
repz
cs
gs
rcr
jnp
xlat
int
and
int
dec
clc
push
movsl
aaa
rcrb
stos
inc
mov
lods
test
push
jmp
sarl
pop
stos
push
fidivrl
fdivp
aas
cltd
sahf
aas
dec
stc
pop
lret
test
lret
aas
lcall
mov
fdivrs
ror
fldt
cmp
cmpsl
inc
sub
adc
pop
inc
rorl
lret
mov
or
mov
dec
push
stc
inc
mov
cld
orl
xchg
mov
adc
pusha
sbb
rorb
jns
fcomi
pusha
xor
sbb
gs
sbb
int3
cmp
movsb
adc
inc
in
jno
dec
dec
dec
call
add
and
jg
aad
inc
jle
js
push
inc
loopne
pop
sub
xchg
push
jo
adc
sbb
xor
jg
mov
stc
push
inc
mov
xor
imul
dec
movl
dec
dec
leave
jbe
xchg
mov
repz
aad
push
out
loop
push
add
pop
mov
clc
in
jp
mov
pushf
in
inc
push
mov
xrelease
xor
addr16
out
in
add
clc
imul
add
mov
dec
push
test
push
pusha
sbb
cli
inc
int3
sbb
out
sbb
dec
dec
or
pop
into
xchg
and
fnstcw
or
shl
dec
pop
add
ljmp
and
cmp
lret
je
rcll
pop
and
lods
push
mov
push
aaa
push
and
mov
mov
xor
insl
gs
in
dec
push
lcall
icebp
pushf
pop
sbb
adcb
mov
call
repnz
add
adc
outsl
int
dec
push
jecxz
xchg
cmp
or
jo
and
jno
loope
pushf
into
leave
movsl
xor
inc
vfmsub132sd
jmp
mov
mov
add
cmp
push
movq
loop
mov
pop
or
mov
mov
gs
pop
mov
gs
cmpsl
push
aam
ret
cs
js
lock
push
add
mov
sahf
mov
cmpsb
pop
pop
imul
dec
idivb
cmp
pop
das
inc
test
aad
mov
nop
shlb
inc
mov
adc
mov
or
pop
mov
xchg
sahf
xchg
sub
pusha
mov
rep
fldt
jns
pop
mov
or
jmp
mov
mov
pop
cmp
nop
pop
or
jo
jb
jo
mov
dec
xchg
or
inc
jge
shrl
jno
fwait
cs
and
push
and
stc
push
imul
push
stos
lret
aaa
loopne
mov
stc
sub
xchg
out
jg
loop
mov
pop
dec
outsb
inc
into
mov
push
push
dec
mov
icebp
addb
addb
adc
pop
push
pusha
add
les
repz
adc
inc
negl
clc
mov
aas
out
or
imul
out
or
iret
xor
xor
aam
pusha
pop
ds
or
xor
nop
rcrl
sub
in
subl
stc
es
dec
pusha
pop
mov
sarl
mov
lcall
or
sbb
jecxz
cmpsb
push
fidivrl
mov
das
or
mov
inc
or
pop
or
clc
sub
push
or
mov
mov
loopne
std
push
loop
jecxz
sahf
js
daa
cmp
cmp
sbb
push
lahf
and
lahf
mov
jg
lock
loope
adc
sub
or
icebp
stc
or
pop
jle
pop
fdivrs
mov
test
fldl
add
sti
push
inc
dec
mov
testl
adc
pop
icebp
in
out
stos
shlb
sub
add
pop
sbb
sbb
sti
lcall
add
mov
jle
mov
cld
roll
push
mov
mov
cld
lret
jo
ja
lret
push
leave
in
daa
jae
cmp
insb
mov
cmpsl
sbb
sete
leave
xchg
shlb
mov
sub
insb
scas
pop
insb
push
aam
das
jmp
xlat
arpl
pop
xchg
jg
jns
and
mov
icebp
and
in
mov
lock
push
and
mov
lea
dec
lret
into
outsl
mov
mov
cmp
lret
nop
cli
mov
or
pop
push
sti
stc
data16
out
fnsave
sub
mov
out
xchg
sbb
cmp
and
jns
xor
pop
mov
cwtl
lahf
pop
enter
lea
arpl
fld
jl
divb
adc
dec
mov
lahf
stos
add
int3
aaa
push
adc
mov
xor
data16
scas
aas
sub
and
arpl
jl
imul
cli
int3
push
xchg
mov
fisubs
loopne
xchg
jae
xlat
pop
sbb
mov
jl
inc
mov
jg
and
cmp
movsl
incl
push
jge
in
imul
mov
xor
es
pop
es
mov
adc
das
add
push
push
mov
mov
xchg
pop
mov
pop
out
xlat
mov
adc
icebp
pop
cltd
iret
lcall
rorl
jae
cwtl
jecxz
movsb
lea
xchg
fistps
adc
xor
xchg
dec
cmp
mov
ljmp
and
xor
dec
adc
repnz
mov
imul
inc
hlt
add
adc
jo
jl
iret
jbe
ljmp
movsl
push
inc
cmp
cli
repz
fstpt
es
out
dec
xchg
nop
cmp
mov
das
xchg
aas
inc
mov
adc
int3
js
lods
jmp
testl
inc
push
push
inc
out
cmpsb
adc
cwtl
xchg
cmp
or
pop
xor
cmp
sub
pop
out
fldt
inc
mov
or
jne
jp
shll
lret
sub
inc
cltd
in
outsl
shrb
subb
jge,pn
int3
in
arpl
add
lret
in
pop
fnsave
mov
and
cs
cmove
rcr
sbb
and
push
sbb
andb
mov
pop
stos
cli
sub
clc
dec
int
rolb
in
in
aad
ss
pop
les
sbb
inc
loopne
adc
iret
ret
push
cmp
and
sub
adc
fisttps
sub
fstl
arpl
xchg
sbb
shlb
sub
xchg
pop
mov
call
mov
pushf
mov
lcall
scas
les
jle
ds
into
dec
add
push
ljmp
ljmp
imul
mov
scas
mov
sbb
insb
arpl
adc
lahf
and
and
leave
aam
mov
lret
andl
pop
mov
jl
jg
cmc
pop
fwait
push
filds
pop
sub
dec
jbe
outsl
addr16
xor
xor
aaa
cmp
imul
mov
xlat
cmp
dec
shrl
addr16
cmpsb
mov
scas
push
cmc
cli
mov
jb
sbb
popa
cli
rcrb
or
enter
movsb
pusha
add
adc
mov
cmc
scas
sahf
std
lods
in
push
xchg
push
jl
xor
lahf
popa
xchg
icebp
adcl
mov
dec
fwait
cmpsl
inc
jle
pop
add
enter
sbb
mov
mov
pop
sub
cmc
mov
adc
mov
shrl
and
packsswb
loopne
cmpsb
js
sbb
push
mov
mov
or
out
out
sub
mov
scas
sti
and
push
adc
shl
ret
movsb
xor
mov
out
push
arpl
shl
lods
sub
adc
jo
je
ja
xchg
lds
mov
add
jae
jno
sbb
jp
push
mov
shl
jmp
dec
push
inc
push
pop
in
pusha
xchg
sub
hlt
adc
push
incl
jo
and
inc
ret
jo
adc
inc
xor
sbb
adc
lret
ja
sub
jne
adc
lods
push
cmp
dec
adc
pop
je
sub
sahf
adc
and
jb
lea
cmp
pop
jmp
leave
jge
test
js,pn
pushf
lock
es
jns
add
test
add
addb
dec
loope
fwait
orl
mov
xchg
fdivrl
mov
pop
xchg
das
jp
dec
sbb
and
fs
roll
lret
jo
shrb
lret
test
mov
adc
sub
mov
or
mov
loop
jno
jge
jb
in
xor
fidivs
mov
ret
scas
push
negl
sub
or
mov
hlt
xor
xchg
fdivs
daa
push
jbe
pop
lahf
dec
ret
add
jb
addr16
mov
mov
pop
daa
mov
xchg
inc
aaa
inc
imul
sti
out
mov
mov
mov
aaa
lret
aaa
sahf
add
add
xchg
in
pop
mov
lods
or
sub
jno
inc
jne
loopne,pn
scas
push
mov
xchg
xor
lcall
cwtl
inc
or
xor
outsl
scas
or
and
fsts
or
pop
nop
int3
or
imul
sub
mov
cli
xchg
or
mov
sub
cs
hlt
add
lahf
ds
sti
sbb
insl
xchg
dec
aaa
push
pushf
mov
pop
pushl
inc
xchg
cmpsl
std
popa
faddl
in
inc
into
and
jp
bound
cmp
push
repnz
add
sub
pop
dec
cwtl
dec
outsb
jecxz
inc
in
add
mov
sub
lcall
jae
dec
repnz
pop
lret
mov
test
sub
push
nop
bound
cmp
iret
fs
xlat
cmp
jl
subl
mov
ss
fistpll
lods
incl
xchg
nop
mov
repz
loope
xchg
dec
jp
lock
sbb
subb
xor
mov
clc
fstps
rcrl
sahf
imul
push
dec
cmp
mov
int
lds
mov
cli
inc
push
sbb
pop
push
xor
clc
mov
icebp
test
sbb
xlat
mov
out
or
stc
xchg
lds
je
inc
push
jno
adc
out
sub
mov
and
insl
sti
addr16
in
outsl
push
mov
dec
scas
sub
lods
test
imul
pop
cmpsb
into
stos
push
rcll
aad
sub
cmp
push
dec
es
inc
push
add
dec
push
notb
dec
xchg
nop
push
aam
and
sub
push
std
lods
cmpsl
gs
cmp
add
dec
stc
out
adc
gs
adc
pop
inc
repnz
sbb
mov
jge
out
pop
hlt
xlat
sbb
pop
pop
std
addl
mov
mov
loop
mov
mov
sub
jae
sub
mov
pop
test
nop
es
daa
adc
sub
cmc
jg
mov
roll
orb
mov
clc
ds
xchg
incb
xchg
arpl
cmp
and
and
lret
popa
int
jmp
enter
jp
outsb
add
mov
xchg
dec
xor
iret
loopne
jg
sti
ljmp
sub
clc
push
and
popf
fs
lret
aaa
cwtl
mov
xchg
ret
lea
ja
clc
mov
mov
loop
mov
sbb
lds
jo
pop
xchg
ja
dec
jmp
js
push
stos
jle
push
test
sbb
sahf
fwait
loop
fldcw
aad
add
mov
gs
mov
sub
mov
push
filds
pmulhuw
mov
jns
in
xchg
sarl
xchg
inc
dec
mov
fnsave
add
cli
adc
xor
jno
outsl
push
xchg
pop
scas
rcrb
push
pop
out
sub
jl
and
or
stos
out
mov
or
dec
sbb
pop
data16
jl
xor
xor
ljmp
cmpsb
pop
iret
sub
sbb
sahf
mov
inc
mov
icebp
mov
cmp
jo
in
cld
adc
adc
in
push
mov
ljmp
add
and
push
test
dec
icebp
lods
mov
lret
jp
les
or
jp
dec
mov
loopne
xchg
sbb
jbe
jnp
mov
ret
cmp
inc
lock
into
cmp
push
imul
mov
xchg
cld
lea
push
ret
jbe
repz
or
rcll
jge
out
cmc
es
jge
cld
jne
push
es
pushf
in
sbb
in
jl
mov
dec
lock
insl
dec
gs
or
test
jae
in
xchg
dec
jns
xor
scas
dec
sbb
mov
add
mov
push
scas
mov
mov
mov
pop
mov
add
mov
enter
cmp
subl
ror
aas
jl
inc
mov
andb
jmp
popa
jle
or
and
pop
movsb
add
adc
xchg
jmp
mov
mov
inc
stc
adc
fidivl
mov
or
mov
mov
das
shll
stos
shll
test
sbb
dec
popf
add
mov
mov
push
je
xchg
inc
outsl
or
add
mov
movsl
mov
inc
lahf
pop
jg
xchg
movsl
dec
repz
js
lret
mulb
addb
jno
scas
mov
aad
xor
ret
lea
add
push
adc
cmp
pop
xchg
and
pop
xor
jb
push
loop
add
sub
inc
add
mov
adc
add
imul
dec
cmpsb
push
xor
mov
gs
lcall
xor
call
push
repz
stos
or
jne
fldt
pop
aas
in
repz
sbb
movb
push
dec
or
jecxz
mov
aam
int3
dec
jae
das
movsb
pop
iret
scas
std
mov
aaa
int
addr16
add
or
add
out
push
movsb
xlat
test
leave
push
loop
imul
add
jg
mov
cld
pop
pushf
hlt
and
or
xor
cmpsb
jmp
xor
ret
lahf
and
and
mov
mov
push
add
fdivp
pop
push
enter
xor
pop
hlt
and
inc
pop
push
lcall
sbb
lret
enter
xlat
rorb
cwtl
out
popa
sbb
xorb
mov
jmp
sti
add
sbb
test
push
pop
lock
cmp
mov
out
or
xchg
push
sarl
stos
inc
in
ljmp
push
out
lea
fdivs
cld
sbb
xchg
ds
pop
mov
sysret
inc
cmp
outsb
cltd
loop
jl
ss
int
gs
popa
dec
sub
imul
scas
imul
pop
loop
jb
fwait
int
cld
stos
in
inc
dec
arpl
out
jbe
or
das
lods
arpl
out
or
inc
xor
inc
sub
xchg
call
jmp
adcl
sar
repz
or
loopne
daa
lock
aaa
imul
add
inc
idivl
jl
int
mov
jns
sti
divb
loope
shlb
or
pavgb
cmp
into
loope
jb
lahf
jl
cld
push
push
mov
and
pop
sub
out
mov
pusha
cmp
mov
inc
roll
push
pop
pop
cmp
lock
ja
xor
lahf
add
shl
dec
pop
int
adc
mov
jb
jle
xor
mov
cltd
into
mov
inc
ficomps
daa
stos
fidivl
sub
fmuls
pop
std
pusha
mov
push
inc
jae
call
jae
gs
push
into
sahf
adc
out
repnz
inc
lcall
lret
sub
xchg
pop
divb
inc
push
inc
fldl
sbb
scas
cmpsb
fadds
stos
aam
lcall
repz
stos
and
insl
ret
pop
loope
mov
and
pop
add
loopne
std
ljmp
rclb
lcall
dec
mov
repz
jae
add
adc
cmp
mov
fsubrp
enter
shl
repz
and
bound
cmc
ss
enter
test
and
fwait
ja
push
in
icebp
cmp
adc
inc
jmp
jmp
lds
test
sarl
popa
lock
cs
das
xchg
xor
push
fstpl
jns
cmp
ljmp
mov
jmp
sbb
and
xchg
lahf
mov
in
lods
hlt
or
cmp
jge
movsb
adc
mov
out
xchg
cmp
rcr
or
sub
sbb
sbb
add
dec
xchg
push
xor
sbb
shrb
aad
mov
mov
les
fisttps
adc
xor
push
ds
cmc
ja
dec
scas
sbbl
shr
ja
ja
sti
lret
popl
lock
jmp
mov
sub
pop
jmp
xchg
es
imulb
jbe
xchg
mov
sub
mov
jbe
jbe
xchg
dec
out
mov
test
mov
lret
cmp
cmp
scas
xchg
xchg
sar
rcrb
inc
popf
mov
repz
xchg
es
ret
adc
insl
int3
adc
adc
lahf
fs
gs
fnsave
imul
or
lret
cwtl
imul
cmp
fisubrs
jb
outsb
sub
xchg
or
adc
pop
lods
xor
push
or
and
ficomps
xlat
les
insl
test
test
xchg
scas
test
mov
cwtl
jo
or
inc
xchg
push
int3
sbb
lods
and
icebp
fs
mov
loopne
pop
mov
scas
mov
imul
inc
mov
or
loope
push
and
cs
icebp
xor
mov
popa
push
xchg
mov
and
jae
push
dec
cli
lock
out
push
sbb
cmc
jmp
shrb
jl
mov
lret
std
fnsave
jne
jmp
repnz
sarb
push
mulb
dec
scas
adc
dec
mov
cmp
or
aam
call
ret
into
movsb
dec
pop
stos
fcoms
xchg
jge
call
ss
mov
das
mov
xorb
outsl
cmpsl
jae
fidivs
ljmp
aas
and
les
int3
adc
call
cmp
mov
lea
jle
stc
sbb
push
daa
push
and
pop
or
or
inc
imul
aam
jae
arpl
movsl
adc
aam
dec
mov
mov
pop
pop
pop
ret
mov
scas
int
pop
mov
daa
sbb
fwait
out
jnp
inc
out
mov
std
in
std
jge
in
int3
testb
cli
xor
cwtl
dec
inc
call
pop
les
ja
in
ret
shl
stos
xchg
dec
fnstcw
sub
in
sti
xor
add
jg
xor
fstps
fs
xchg
clc
push
in
sbb
loop
jge
sbb
enter
xchg
pop
jecxz
iret
sbb
loope
lret
fstps
push
inc
inc
push
fistpll
lret
int
lea
cmpsb
cmpsb
jg
movsl
cmc
idivb
cld
pop
inc
xor
dec
shrb
jns
fbld
int
mov
sbb
in
jle
cwtl
add
out
cmpsl
xchg
jl
pop
sarl
repz
lret
pusha
and
push
mov
mov
popa
push
sub
inc
clc
nop
push
jge
adc
mov
arpl
lret
faddl
mov
std
sub
push
mov
pushf
insl
iret
xchg
sub
adc
dec
dec
inc
push
stc
xor
stos
cmpb
mov
mov
fstpl
dec
dec
sbb
cmc
sub
cmp
insb
cmp
cmc
sub
sub
adc
js
icebp
loope
fbld
stos
popa
mov
test
inc
adc
inc
ljmp
scas
inc
js
shrl
fs
imul
mov
xchg
jecxz
push
lahf
sub
mov
aad
push
testb
jb
mov
insb
xchg
inc
adc
xchg
std
stc
xor
lcall
iret
adc
out
push
sub
mov
and
jle,pt
adc
pop
xor
in
or
into
stos
mov
popf
lock
jno
loopne
xorl
or
divb
cmp
fs
dec
inc
mov
dec
xchg
cmpsb
aas
xorl
in
add
pushf
jno
pushf
adc
mov
mov
movsb
mov
mov
test
jle
mov
mov
in
aaa
js
cmpsl
in
scas
out
orb
mov
jmp
add
pop
or
divl
adc
js
pop
fs
popf
xchg
in
popf
push
lret
je
cmp
int
fsubrs
jecxz
mov
lahf
insb
test
inc
pop
xlat
cs
jecxz
mov
jbe
test
repnz
mov
or
adc
in
ljmp
in
out
js
xchg
shlb
movsb
aaa
adc
sbb
inc
fmull
push
mov
mov
mov
push
clc
cld
cwtl
in
jae,pn
xlat
in
lret
shl
pop
add
in
sbb
jbe
push
add
pop
add
lret
and
jns
mov
int3
cmp
mov
lcall
repz
stc
sbb
scas
movsb
or
ret
mul
push
xor
dec
sub
inc
nop
xlat
insl
gs
pop
mov
or
mov
nop
xor
mov
arpl
scas
xchg
add
incb
cli
cmpsl
cld
pop
lret
jbe
cltd
popa
out
xor
repnz
pop
outsl
lea
cs
into
cli
pop
daa
cmp
add
push
dec
test
jle
lods
xchg
mov
sbb
cmpsb
mov
push
rorl
int
fisubrl
jmp
in
andb
mov
into
push
hlt
mov
xor
xchg
cmp
jecxz
hlt
lea
adc
jnp
sar
push
xor
jl
or
lea
add
mov
loopne
fs
add
jge
jo
mov
or
lea
mov
lods
jmp
sub
sbb
cwtl
xchg
pusha
pop
push
add
xchg
pop
mov
sbb
sub
dec
mov
stc
xchg
jnp
xchg
inc
sub
add
sub
pop
adc
inc
mov
scas
push
sub
sub
adc
jne
daa
push
sub
arpl
cmp
jg
cwtl
je
jnp
aam
in
inc
pop
inc
cmp
xchg
test
jp
sbb
push
xchg
scas
mov
in
mov
push
ret
inc
push
dec
inc
sbb
pop
push
pop
adc
and
xor
rorl
add
fiadds
testb
or
pop
ret
or
mov
lods
adc
leave
and
js
mov
cmp
pop
ret
lahf
mov
pop
pop
or
ret
push
push
xlat
std
dec
fs
ja
mov
ljmp
arpl
loope
pop
xchg
popf
sub
mov
mov
aam
imul
cmpsl
xlat
test
pusha
or
inc
xor
int3
popa
mov
pop
jbe
enter
mov
jmp
fldenv
sti
mov
or
loope
je
sbb
sbb
cmpsb
cmp
or
repz
jle
es
mov
push
test
sbb
pop
add
std
push
or
popf
outsl
mov
pushf
add
cmp
in
pop
adc
xor
cmp
cmp
clc
sub
mov
aad
lret
inc
subb
inc
jmp
mulb
repz
pop
mov
outsb
loope
ja
inc
or
jg
xor
shrl
push
sbb
jns
nop
inc
mov
mov
jbe
or
lret
mov
negb
push
dec
sub
jno
lret
es
jae
inc
subl
jbe
testb
stc
icebp
popa
in
mov
popa
movsl
daa
sbb
pop
mov
mov
mov
jmp
sbb
fldenv
xchg
lock
push
sbb
push
jle
adc
inc
xchg
pop
fistpl
jbe
pusha
push
movsl
jnp
mov
sbb
dec
aaa
fisubs
mov
push
cmp
imul
sbbl
pushf
gs
push
and
icebp
in
cltd
rcrl
out
scas
dec
bnd
shl
sbb
ljmp
das
loope
aas
jb
lcall
je
push
fistpl
in
shlb
scas
inc
pop
dec
dec
jp
adc
mov
dec
gs
nop
test
pop
mov
pop
addr16
xor
gs
jo
data16
mov
mov
pcmpeqd
or
jge
in
or
or
dec
push
pop
imul
xchg
cmp
xlat
xchg
mov
mov
rorl
inc
mov
xchg
cmpsl
xchg
shr
je
cmpl
cmpsl
out
add
aas
xchg
adc
and
arpl
mov
je
inc
or
jo
lcall
xor
outsl
scas
imul
xchg
sub
mov
mov
sub
mov
lods
inc
cmp
insb
lds
addl
mov
popa
add
repz
test
jle
jl
lcall
out
ljmp
adc
rorb
orl
mov
aam
pop
add
hlt
mov
icebp
pop
adc
pop
aam
jnp
cmp
sahf
leave
or
aaa
int
rcrb
pop
jmp
jo
xchg
arpl
push
jge
xchg
sti
add
push
xor
jle
jne
divl
lods
pop
and
lret
push
das
gs
aaa
mov
arpl
or
mov
or
adc
insl
aas
add
aas
inc
inc
sbb
sub
int3
dec
mov
cli
dec
and
sub
cmp
sub
add
daa
aad
xchg
xchg
sbb
loop
in
xchg
inc
test
mov
int
pop
cmp
and
add
cld
and
cmp
pop
test
sti
cwtl
pop
jns
add
xchg
lret
or
adc
or
xor
jae
fsubrs
das
out
sub
ret
jecxz
adc
nop
filds
outsb
inc
cwtl
cld
fcompl
pop
or
push
lret
add
enter
dec
mov
mov
in
xor
pop
mov
sbb
ss
sub
jbe
movsb
push
aas
lret
push
fadd
iret
out
jg
or
jl
fmul
push
mov
xor
sti
cmp
inc
push
cltd
nop
dec
push
add
dec
je
sahf
dec
jle
addr16
add
sbb
add
cli
cltd
or
stos
pop
push
insl
sti
mov
cmp
mov
repnz
leave
addl
shll
rolb
push
sub
cld
mov
adc
push
fucom
lret
in
lods
ljmp
int3
adc
je
mov
scas
cli
cmpsb
popf
xchg
push
movsb
push
jp
leave
sahf
dec
push
fwait
aaa
arpl
fidivs
cwtl
jle
addl
out
jb
out
int
push
push
cld
cmc
iret
jl
xor
mov
mov
adcb
mov
adc
and
lods
ljmp
bound
movsb
pop
jle
adc
sub
outsb
jns
xchg
das
add
sarb
xlat
fsincos
mov
cmp
adc
outsl
fcompl
incl
mov
in
int3
enter
repnz
fs
or
adc
xchg
and
sti
mov
cli
pop
push
or
daa
inc
and
je
loopne
adc
dec
out
shl
push
push
and
cwtl
in
lea
add
push
mov
xor
or
lds
mov
dec
push
pop
fcoml
pop
aad
dec
push
cmp
push
inc
pop
pop
mov
push
push
push
outsb
lcall
jl
call
jmp
pop
pop
loop
loop
mov
cltd
jne
sbb
and
and
scas
and
lods
xchg
jg
lock
sbbb
int
movsl
mov
pop
test
jl
pop
sbb
sarl
inc
imul
and
or
mov
or
dec
imul
ss
ret
arpl
sub
mov
lcall
or
xchg
stc
cmp
or
jno
jle
nop
push
sub
lods
xor
cltd
sbb
stc
lods
dec
lahf
fadd
int3
sahf
out
js
fwait
jo
pop
scas
mov
xor
mov
add
fcomi
loope
adc
jl
das
dec
iret
mov
inc
and
outsl
insb
scas
jo
leave
imul
pop
cltd
cmpsb
cwtl
inc
lock
pusha
inc
push
rclb
ret
push
mov
push
stos
xchg
int3
push
fidivs
mov
sub
pop
dec
test
xchg
in
push
addl
imul
xor
xor
das
in
mov
insb
jo
mov
ljmp
into
aad
pop
jmp
adc
rcll
inc
mov
out
xchg
and
clc
jecxz
rorl
mov
dec
add
add
xchg
or
xchg
in
sub
mov
cmp
inc
jg
xchg
push
fisubrl
jl
hlt
leave
lahf
fs
test
pmullw
xor
fisubs
sub
mov
lahf
cltd
shll
shlb
sarb
sub
popf
push
push
add
fiaddl
mov
pop
stc
nop
into
or
mov
hlt
mov
aaa
push
push
movsb
mov
inc
mov
bound
jnp
pop
xor
fistpl
test
sti
andb
stos
ficoms
mov
sti
enter
add
stos
cwtl
inc
imul
or
rorl
rorb
popf
aas
nop
pop
sbb
xchg
or
out
mov
sub
cmp
dec
cmp
testl
push
test
jle
inc
add
int
push
inc
pop
popf
std
mov
pop
push
in
xlat
popa
sub
push
imul
mov
jecxz
jle
mov
pop
or
pushf
xchg
jecxz
xchg
dec
xchg
fsubrp
jb
cmp
push
push
push
push
mov
mov
mov
aas
pop
gs
inc
inc
push
ret
pop
insl
sub
insb
xor
pop
xchg
aad
gs
or
adcl
jbe
sahf
insb
out
cli
in
cmp
mov
int
loope
iret
lcall
loop
insb
notl
lahf
pop
xchg
test
iret
mull
stos
shr
iret
push
mov
inc
dec
xlat
nop
dec
call
test
fwait
mov
shrb
popf
push
scas
cmpsl
test
sbb
push
jno
popl
push
dec
adc
jmp
rcrb
inc
cmpsl
enter
xor
test
subb
inc
nop
in
test
out
movswl
loopne
mov
xchg
jmp
mov
out
pop
js
push
push
jbe
add
dec
repnz
adc
ds
lahf
inc
jae
ret
and
or
adc
aad
fs
and
add
mov
jmp
lahf
fadds
and
inc
push
popf
xchg
inc
stos
sahf
lock
insb
or
cli
jle
out
mov
pop
pop
adc
xlat
push
lret
sar
add
outsl
mov
xchg
rorb
fstpl
pop
lcall
addb
aad
pusha
int
xlat
push
arpl
imul
xor
inc
push
filds
popf
data16
insl
test
int3
jle
ffree
mov
dec
mov
jp
rcl
jge
cmpsw
pop
test
or
subl
push
dec
popf
sub
adcb
xchg
jae
add
cmp
inc
inc
push
in
jbe
dec
sbb
loope
fidivs
loop
jmp
mov
outsl
loope
jle
mov
xor
mov
ret
jnp
add
pop
sarl
sarl
aad
popa
xor
jecxz
lods
ljmp
mov
push
cld
cmp
adc
pusha
aad
jns
sub
movsl
scas
in
aas
pushf
adc
repz
int
in
aam
xor
xor
inc
test
fs
sub
mov
popa
lds
mov
inc
xor
fwait
sbb
test
andl
mov
fcoms
je
outsl
aaa
mov
lds
cmpsb
jo
jb
xor
sub
or
cmp
push
push
add
push
xor
cmp
data16
sbb
loope
idiv
clc
jg
pop
hlt
insb
mov
daa
cltd
xchg
scas
push
arpl
cwtl
leave
daa
clc
aaa
and
movsl
mov
out
into
jae
pop
imul
pop
fstpl
fisubl
and
lods
adc
insb
out
push
in
and
repnz
jbe
push
mov
test
pushf
popl
cmpsb
daa
cli
lods
loope
ret
imul
mov
or
adc
xchg
sbbl
imul
inc
rolb
dec
push
mov
fnsave
je
push
sti
rcrl
loopne
and
lahf
mov
das
cmp
cmp
xlat
lock
mov
popa
int
and
popa
les
cs
nop
cmp
sbb
dec
and
pop
adc
adc
fidivrl
arpl
fstps
or
add
lcall
sbb
jge
imul
pop
mov
adc
or
jge
push
notb
insb
jno
fxch
shr
js,pn
ds
cmpl
loop
test
and
pushl
add
pop
in
bound
aaa
sarb
pushf
daa
inc
lahf
cmp
and
dec
popf
xor
stos
jge
add
add
adc
cs
jo
xchg
and
xor
pop
ja
imul
nop
jle
repz
movl
lods
push
xor
shll
loop
pop
pop
or
add
fwait
dec
jcxz
mov
add
data16
out
cmpsl
mov
cmp
sbb
pop
and
out
adc
add
inc
pushf
in
shrb
imul
dec
jg
jp
cmp
in
xor
jp
test
xchg
lea
cmp
mov
scas
adc
dec
out
add
add
jg
jmp
xor
insb
and
leave
jbe
cmp
and
aam
call
or
mov
xchg
sub
and
sub
pop
movsb
aas
icebp
and
ret
imul
loop
stos
pushf
int3
cmp
push
cmp
lods
ds
or
jle
test
or
nop
dec
mov
and
xor
dec
daa
add
jge
jns
fs
dec
and
add
push
inc
scas
sbb
lea
sub
pusha
inc
and
push
mov
pop
mov
cmc
test
inc
mov
cmp
aaa
shlb
lahf
rorl
mov
andb
cmpsl
cmp
ret
xchg
lock
pop
mov
mov
pop
lcall
xchg
pop
inc
stc
lods
movsb
lret
cli
fdivrl
cmp
fcom
or
lea
hlt
jo
dec
mov
gs
xor
cmp
mov
fimuls
inc
and
je
jae
cs
or
ret
inc
enter
loop
iret
icebp
add
icebp
and
ret
add
aaa
mov
pop
and
or
dec
push
sbb
cs
outsl
cld
xor
push
jl
in
cmp
xlat
jecxz
lahf
ficomps
movsl
mov
xchg
jnp
add
jp
sar
dec
es
out
pop
gs
mov
sbbl
sti
sub
lock
cmp
push
jg,pn
stos
call
or
fdivl
mov
scas
xchg
into
stc
insb
roll
sti
sub
es
sbb
push
fwait
fs
iret
xlat
xor
cmp
and
add
jns
in
mov
out
jge
test
cmp
ss
push
test
pop
sbb
jbe
sbb
mov
orb
mov
xchg
xor
icebp
jno
fisttpl
jecxz
in
sarb
jmp
mov
ret
lock
sub
and
lock
pop
scas
or
mov
loopne
ficompl
pop
pop
fsts
add
push
rcl
outsl
in
invd
add
mov
into
mov
sbb
int3
es
sub
jbe
sbb
xchg
addr16
xor
xor
insb
push
mov
clc
hlt
cwtl
ss
out
xlat
and
test
pop
mov
xor
and
dec
xor
repnz
fidivs
sub
inc
mov
stos
jnp
loopne
inc
mov
subb
adc
cwtd
cmp
add
push
lcall
inc
cltd
mov
mov
mov
push
pop
jnp
adc
addl
sub
pop
and
into
pop
or
stc
xor
mov
sbb
popa
mov
push
lods
int3
or
mov
sti
mov
inc
out
jne
dec
mov
scas
jmp
in
shrb
and
lds
adc
pusha
sbb
nop
dec
iret
sbb
fimuls
or
adc
ljmp
pop
add
push
mov
mov
shrb
scas
jo
imul
mov
ffreep
shll
out
push
inc
data16
pop
lahf
pop
ds
sub
shr
mov
pusha
add
xchg
fdivl
outsb
add
lods
leave
sti
gs
repz
pop
movsb
mov
notb
dec
push
pusha
aaa
ds
repnz
pop
inc
popa
cmp
outsl
cs
out
test
jne
pop
mov
adc
sbb
inc
inc
jns
loopne
ljmp
mov
xchg
sbb
jg
jmp
daa
bound
inc
sahf
mov
repnz
shlb
bound
imul
stos
das
push
int
rolb
mov
imul
jg
or
mov
lock
push
jnp
test
add
test
popf
insl
movsl
movl
sub
mov
imul
push
inc
adc
adc
loopne
jns
dec
push
cmp
sbb
sbb
pop
ret
pop
movsl
mov
es
dec
mov
repz
out
mov
lahf
repz
push
into
cwtl
jo
push
pusha
stos
cwtl
add
sbb
push
xor
sbbl
and
xor
cltd
push
xchg
fdivs
repz
and
rcr
insl
pop
test
shrb
outsb
cmp
js
stos
jle
xchg
jns
fstpt
cld
push
sub
sub
and
inc
rcrl
push
in
popa
pop
insl
fisttpll
insb
lcall
in
sub
cwtl
repnz
mov
negb
xor
jnp
or
dec
call
shrl
mov
inc
sbb
xchg
sub
ds
or
lock
and
aad
and
fnstenv
pop
lcall
mov
cmp
jae
cmp
in
ret
sub
xchg
xor
sub
sbb
sbb
or
das
dec
jae
mov
mov
faddp
pop
fsubr
sbbb
imul
lods
inc
adcl
out
aad
cld
test
sub
xchg
cld
fs
mov
xchg
test
das
loope
pusha
lret
add
sub
dec
xchg
sti
int3
jae
jne
ret
cmpsb
imul
std
fmul
mov
cs
adc
lret
fcmovnu
or
add
push
idivl
xor
test
fidivs
lds
les
movsb
xor
add
lret
cwtl
cmc
inc
xchg
xor
pop
sahf
fiaddl
xchg
sti
or
cmp
lods
sub
mov
lret
aad
inc
jo
cmc
xchg
movsl
sbb
outsb
mov
push
data16
inc
pop
jno
mov
jmp
pop
dec
rcll
xor
pop
frstor
mov
xchg
frstor
sub
data16
icebp
mov
pop
daa
mul
push
fwait
data16
cmp
in
push
mov
scas
pop
loope
lds
fisttps
jle
dec
popa
jle
jge
jbe
jns
cmpsb
push
scas
inc
sub
cmpsl
clc
ss
mov
leave
imul
cs
shl
or
lock
push
pop
sbb
js
adc
jmp
add
add
add
sbb
mov
pop
adc
dec
xchg
out
mov
or
mov
sbb
rcrb
cmc
dec
jne
jae
push
inc
stos
xchg
mov
loope
sahf
xor
cli
test
int3
jne
mov
enter
cmp
fisubrl
icebp
loope
dec
popa
ds
in
jmp
sbb
push
inc
sbb
xor
dec
push
adc
jmp
sub
arpl
mov
bound
xchg
ret
int
or
sub
call
inc
test
shrb
lods
xor
jo
loope
test
divps
dec
nop
andl
adc
or
ror
loope
add
enter
and
jmp
daa
mov
xorl
xor
fisubrl
add
mov
pop
adc
push
sbb
das
xchg
shl
pop
ret
fcoms
or
insb
jb
dec
push
or
sbb
push
sub
inc
jge
ss
mov
jo
mov
xor
and
xchg
imul
testl
push
xchg
adc
fldcw
mov
dec
addb
mov
sbb
or
cmp
pop
aaa
loope
mov
lcall
int
mov
and
xor
gs
lret
mov
jle
pop
mov
push
sub
add
xor
in
sub
sarb
addr16
pop
mov
mov
adc
gs
fdivl
enter
leave
sub
sbb
or
rcll
dec
xchg
outsb
daa
insl
mov
or
inc
sbb
andb
adc
push
repnz
sbb
not
pop
xor
xchg
mov
arpl
mov
mov
nop
fs
push
lea
xor
push
cmpsb
iret
xor
cmpsb
stos
repnz
pop
or
xor
push
stc
loope
andl
push
int3
testb
sbb
stos
adc
lret
out
adc
push
mov
aaa
addr16
lea
and
adc
fistpll
out
jp
sub
ror
stos
fdivrp
data16
and
rolb
adc
jmp
rolb
sbb
jb
shll
adc
push
in
add
fwait
in
pop
cmpsl
lea
in
pop
pushf
pop
mov
sbb
add
jle
pop
scas
arpl
pop
sbb
mov
pop
push
scas
xchg
insb
jae
movsl
loop
dec
cli
adc
mov
mov
fwait
cwtl
and
and
je
jno
sub
sub
mov
add
data16
int3
or
loop
stos
dec
dec
data16
inc
push
sub
lea
xor
dec
lds
and
xorl
jns
sti
or
frstor
mov
shll
pop
pop
outsl
jo
mov
test
inc
cli
ljmp
pop
mov
mov
lods
dec
pop
jmp
roll
or
lcall
shll
or
xchg
mov
sub
sub
enter
lcall
dec
add
dec
cli
pop
ds
pop
call
xchg
inc
stc
dec
and
sub
aas
push
xchg
sbb
and
inc
xor
adc
sbb
jb,pn
sbb
mov
add
mov
mov
cmp
inc
cmp
cld
inc
stos
mov
ret
outsl
mov
lret
mov
mov
lret
push
and
pop
fpatan
iret
xchg
dec
dec
push
out
data16
into
cltd
arpl
xor
or
cmp
int3
je
int3
mull
mov
xor
leave
dec
dec
xchg
cs
mov
movsb
and
bound
leave
in
jnp
repnz
mov
dec
inc
test
in
xlat
xchg
sbbb
sbb
or
je
jge
stos
push
mov
mov
into
scas
xor
dec
test
xor
imul
stos
xchg
push
adc
sub
mov
or
stc
mov
xchg
dec
mov
test
sbb
testb
out
popa
push
in
out
push
mov
fisubs
fiaddl
sbbl
insl
les
pop
xchg
and
in
xchg
inc
ret
dec
xchg
loop
and
dec
ljmp
pop
mov
nop
pop
mov
mov
mov
test
xchg
pop
inc
loop
mov
pop
or
mov
jmp
xchg
jnp,pn
imul
andb
adc
push
inc
fstpt
push
inc
dec
or
stos
jae
arpl
and
mov
jl
xor
mov
mov
inc
fucomp
insl
movsl
add
ja
pop
jbe
jo
sub
out
and
in
xchg
mov
or
mov
jecxz
push
out
cmp
adc
mov
jle
sbb
sbb
stos
hlt
clc
insl
or
ljmp
loopne
mov
popa
test
out
jmp
jns
pop
cmc
dec
inc
cmp
movsb
xor
sub
mov
daa
nop
lahf
or
shrb
fwait
out
lcall
jbe
cli
fimull
data16
sbb
stos
xchg
cli
mov
fnsave
xchg
out
int
lcall
sub
inc
call
arpl
pop
add
add
pop
xchg
jge
sub
mov
addr16
jo
sbb
sub
fidivrs
mov
dec
lods
ja
lods
imulb
sbb
xor
scas
xchg
push
xchg
adc
mov
hlt
lcall
lods
sub
mov
and
push
or
sbb
xchg
mov
and
js
mov
inc
mov
xor
mov
cmpxchg
fstpl
int3
in
pop
sbb
add
jae
daa
mov
data16
movsb
or
shlb
lods
or
pop
inc
aad
mov
jbe
cmp
in
sub
push
cmp
cmp
jecxz
or
cmp
adc
js
xchg
fchs
dec
push
pop
loope
pop
adc
add
cmp
out
jg
stos
nop
jge
bnd
mov
jecxz
xchg
fsubrl
cmp
sub
adc
xchg
imul
push
sbb
ret
jbe
push
and
lcall
mov
add
xchg
mov
sbbb
dec
test
add
pop
push
dec
rolb
dec
jecxz
fld1
mov
test
scas
or
jae
or
fs
add
out
inc
pop
imul
mov
lea
push
mov
cmpsl
rcrl
mov
lods
push
subb
lahf
icebp
jmp
cmpsb
scas
mov
sbb
push
dec
jb
inc
mov
push
movsl
pop
imul
sti
leave
int
test
xorb
adcl
outsb
subl
ret
dec
push
imul
or
fs
bswap
or
inc
xchg
dec
aaa
fs
cwtl
add
push
test
cld
int3
test
inc
cmovno
mov
mov
xchg
xchg
push
cmpsb
test
mov
repz
scas
imul
cmp
push
lock
mov
inc
sahf
out
out
pop
cmp
pop
or
and
in
rol
jl
mov
cltd
faddl
iret
push
shrb
push
mov
mov
lds
shlb
dec
cmc
adc
mov
cmp
sub
ja
mov
mov
loop
jl
sub
xchg
cmc
jo
pop
mov
or
lret
pop
mov
jmp
fdivrl
mov
mov
pop
fidivl
cmp
jmp
orb
stos
ret
mov
cmp
push
sbb
fstps
sub
xor
in
cmpsl
xlat
jne
sub
aas
clc
xchg
mov
cmpsb
push
adc
addr16
enter
sub
sbb
adc
fisubrl
adc
fwait
imul
daa
fcmovne
push
cs
cli
outsl
test
vpunpckhwd
lcall
fidivrl
fmul
dec
xchg
sbb
loopne
shlb
cmpsl
stos
mov
mov
dec
aas
repnz
fs
arpl
in
xchg
inc
testb
or
jbe
pop
mov
dec
ret
pushf
inc
ficompl
sahf
inc
adc
sub
xor
xor
mov
mov
movsl
pop
fst
push
mov
dec
adc
pop
popf
pop
mov
rorb
pop
fsubrl
mov
pop
mov
or
mov
xchg
push
dec
xor
in
sbb
mov
cltd
xchg
xor
adc
or
mov
jne
lcall
dec
push
jne
add
pop
lods
inc
lock
bound
push
sub
ror
xor
lcall
ret
popf
xor
mov
add
and
xchg
outsl
faddl
push
iret
ret
dec
dec
cmp
dec
push
movsb
push
push
lock
add
out
xchg
pop
mov
aas
in
pop
adc
xchg
add
xchg
mov
imul
test
lock
push
in
cmp
test
stc
rcl
xchg
bound
sbbb
mov
clc
sub
nop
bound
pop
mov
inc
fld
push
push
inc
sbb
ja
xor
adc
xchg
and
xchg
mov
iret
test
fadd
mov
iret
push
jno
pop
cmpsl
sub
leave
les
xor
int3
aas
xchg
imul
pop
or
dec
push
in
push
mov
xchg
and
popf
or
xor
jmp
mov
inc
fs
xor
xor
push
push
xchg
enter
lret
jo
popa
xor
clc
jnp
jb
cld
add
fmuls
repz
lret
sbb
jb
mov
mov
pop
in
lcall
fisubl
scas
or
mov
cld
xchg
pop
add
cld
sbb
fucomi
stos
ljmp
pusha
hlt
xchg
fimuls
lea
mov
or
mov
lods
data16
jecxz
mov
mov
in
add
insl
dec
outsl
inc
bound
loope
sub
dec
test
mov
add
mov
adc
adc
mov
fbstp
mov
jmp
sub
cmpb
loopne
xchg
cmp
and
out
push
adc
push
ljmp
ret
clc
xchg
wbinvd
flds
mov
mov
adc
adcb
lds
dec
mov
or
stos
cmp
mov
jnp
and
lods
data16
ret
xchg
adc
mov
movsb
push
popf
orl
dec
aam
pop
lahf
sbb
mov
adc
mov
arpl
pop
mov
pop
inc
lret
push
push
lds
add
mov
in
shl
xor
lock
loope
xor
ffree
lea
shll
arpl
xchg
xor
enter
mov
ss
dec
ret
es
test
repnz
pop
xchg
pushl
shrb
insb
sbb
aaa
ret
aam
mov
mov
xchg
xchg
lret
jl
leave
cltd
stos
mov
xor
xchg
jge
and
mov
or
cmp
mov
or
mov
dec
mov
repz
cmp
movsb
xchg
xor
jmp
mov
rcll
shrb
pop
and
addr16
mov
sbb
sbb
ror
xchg
pop
ss
std
out
in
push
fwait
or
into
test
jecxz
push
cmc
iret
jl
mov
xor
cmp
test
xchg
dec
or
push
mov
and
dec
cmp
aad
or
mov
push
out
rcll
cwtl
cmc
xchg
mov
data16
lds
sub
ret
xchg
cltd
dec
sbb
test
int
jmp
add
xor
jae
mov
dec
push
nop
imul
filds
in
mov
fistl
ds
sub
popa
ja
push
or
jb
mov
fwait
lock
imul
popf
push
sub
cld
push
cmpsb
repnz
mov
jg
push
std
lods
push
fwait
jecxz
mov
mov
out
jnp
mov
rcrl
rcr
dec
mov
sti
cmp
dec
enter
or
inc
ljmp
inc
jb
cld
ljmp
inc
pop
dec
pop
notb
mov
or
enter
push
add
sub
iret
mov
aas
cwtl
in
rcl
jae
movsl
ljmp
sub
ss
scas
fsubs
inc
adc
jo
inc
add
adc
fs
and
mov
popf
fisubs
and
out
dec
popa
arpl
testb
out
stos
fldl
scas
enter
sarb
sbb
popa
inc
aam
adc
or
ret
scas
mov
adc
fidivs
fmull
dec
jnp
push
or
lret
mov
mov
rclb
and
adc
jl
xchg
out
arpl
push
lcall
ds
icebp
xchg
cld
test
out
insl
rcr
push
xor
dec
adc
pop
inc
cmp
lods
cmpsl
push
iret
imul
or
sub
push
clc
cmp
rorl
stos
in
inc
sbb
cmp
jae
popf
mov
adc
mov
pop
icebp
dec
sbb
adc
inc
jecxz
enter
in
sti
fisttps
pop
in
fisttpll
clc
xchg
out
in
cmc
lock
xchg
fiaddl
jno
sub
fwait
insl
daa
fiadds
push
mov
aas
mov
inc
xchg
jmp
outsl
push
jns,pn
mov
mov
mov
xchg
outsl
les
mov
sti
pop
out
idivb
jae
add
nop
mov
sbb
aas
stc
push
rcr
jg
loopne
bound
jno
xchg
sbb
mov
jne
out
dec
sahf
ret
clc
cmp
repz
add
xor
int
xchg
mov
fsts
push
hlt
cli
aaa
sub
and
ss
jmp
and
cltd
mov
push
enter
pop
push
add
or
lods
push
mov
fdivrp
or
je
nop
fldcw
jmp
sbbb
shrb
imul
insl
add
mov
inc
icebp
xlat
or
sbb
out
xorb
in
mov
or
test
leave
push
mov
movsb
fnstenv
neg
dec
pop
aad
iret
or
sub
icebp
adc
ss
dec
mov
notb
test
mov
pusha
mov
mov
sbb
sbb
push
sarb
mov
mov
adc
pop
mov
inc
repnz
lret
bound
xor
mov
jecxz
test
xchg
xchg
lods
pop
mov
cmc
sub
mov
fwait
dec
adc
sbb
scas
repnz
mov
push
pop
pop
sub
jecxz
mov
idivb
dec
pushf
rdpmc
fmull
scas
inc
push
popa
dec
inc
mov
or
test
push
ljmp
gs
xchg
sub
sbb
ret
out
jg
cmp
jl
pop
push
loop
jb
lahf
xor
xor
mov
cli
sub
push
and
std
jns
mov
xchg
mov
mov
cmc
pop
mov
outsl
jecxz
jnp
add
jbe
dec
cmp
pop
mov
push
movsl
aad
pop
mov
insl
mov
inc
dec
mov
add
out
ret
pop
cmpsb
not
shrb
xchg
mov
fdivp
mov
push
int
pop
repnz
sahf
call
cmpl
xor
inc
add
jo
rcrb
and
test
inc
adc
ret
aaa
mov
mov
aaa
and
and
rolb
jnp
pusha
push
gs
or
mov
and
movsl
mov
loope
cmp
sub
mov
lret
add
lret
jb
mov
addr16
notb
in
dec
fisubl
js
inc
add
jns
out
call
xchg
loopne
in
adc
cmp
movsb
adc
les
xchg
pusha
sub
xlat
sarb
in
jno
enter
jnp
add
jecxz
in
pop
cli
cmp
pop
jo
xchg
jecxz
sarl
in
cmp
insb
mov
add
ja
repnz
jbe
pop
pop
fs
ss
cli
gs
or
jg
fisubrl
xor
xchg
dec
fiadds
aas
xorb
push
xchg
aas
cli
aas
push
or
stos
in
lock
lock
mov
les
xor
jnp
out
mov
outsl
cmpsl
adc
cmp
xlat
sbb
in
lcall
mov
pop
adc
push
or
mov
outsb
xchg
mov
sahf
ret
xor
or
sbb
adc
mov
cwtl
in
lret
xchg
sbb
repz
insb
mov
xchg
loope
popf
movsb
pop
aaa
orb
mov
dec
in
xchg
mov
lea
mov
lods
pushl
pop
push
movsl
or
push
xor
jb
sub
filds
inc
aas
pop
pop
outsl
ss
lcall
addr16
scas
gs
test
aam
lahf
or
es
dec
jge
jae
outsl
loop
or
movb
nop
aad
inc
nop
jnp
xor
dec
inc
clc
cmpsb
mov
adc
sti
fmull
aaa
push
push
push
lcall
addr16
push
into
pop
subl
adc
pop
in
lcall
pop
sahf
or
push
pop
push
dec
inc
xchg
ss
mov
lret
ficoml
mov
pop
rcr
mov
add
jbe
insl
dec
in
jle
mov
adc
mov
shl
push
mov
xor
clc
inc
fdivrs
xor
test
dec
inc
sbb
adc
call
lods
jnp
shrl
dec
fistpll
jb
popf
lret
and
push
das
mov
std
inc
addb
add
lcall
push
cmp
lea
popf
adc
test
in
aaa
and
and
adcl
add
hlt
pop
push
push
adc
lock
stc
jge
mov
push
mov
jmp
xor
imul
mov
or
jl
insb
inc
je
push
je
pushf
sub
dec
inc
and
test
jae
lods
pop
test
outsl
ss
popa
xor
push
insb
adc
mov
mov
adc
pushf
pop
arpl
mov
fdivrs
int3
icebp
ret
xorb
jo
mov
mov
pushf
stos
and
and
bound
mov
fimuls
test
add
ja
pop
push
xchg
mov
inc
in
dec
mov
or
repz
push
dec
pop
mull
imul
nop
dec
and
mov
lret
clc
sbb
call
sub
inc
cs
sub
jo
cmc
out
rcl
mov
inc
test
lock
xchg
out
push
aad
mov
push
cwtl
cmpsb
jne
jb
lret
pop
out
ret
add
lea
inc
test
xor
dec
rorl
outsb
push
adc
rcrl
adc
test
std
add
mov
or
in
xor
cwtl
and
ljmp
sub
push
jo
fcompl
dec
stc
lcall
into
pop
xchg
push
pop
xor
ja
mov
jo
aaa
pop
aam
and
cvtdq2ps
push
in
cmp
faddp
xchg
dec
sbb
cmp
testb
mov
negb
idiv
pop
add
dec
push
pop
neg
test
xlat
add
pop
test
stos
sbb
sbb
push
push
jnp
push
mov
add
mov
and
clc
sub
js
bound
mov
lock
cmp
pop
cmp
jns
data16
adc
imul
add
call
pop
mov
scas
jge
ss
mov
mov
fildll
add
add
dec
pop
imul
and
test
and
sub
xorl
jae
or
jg
cmpsb
stos
and
ja
ret
fwait
and
jmp
enter
lods
in
test
data16
adc
ja
out
push
fistpl
stc
mov
or
mov
jecxz
imul
popf
inc
fsubs
movsb
shr
add
popf
inc
and
pop
loop
in
and
or
jo
push
int
cmp
jle
mov
mov
mov
imul
dec
pop
ror
mov
pop
loope
jae
mov
movsl
js
mov
jae
insb
pop
mov
mov
addr16
sbb
test
cwtl
mov
xor
pop
pushf
fmul
mov
add
les
mov
mov
fstps
out
mov
jp
mov
in
sbb
inc
scas
scas
adc
pop
lods
jns
push
push
push
cwtl
daa
xchg
rclb
fists
push
inc
loopne
pop
cmp
mov
inc
mov
ss
sbb
insl
mov
in
mov
mov
sbb
in
shlb
gs
push
cli
int
xlat
test
int
mov
add
push
hlt
icebp
mov
cmp
xchg
inc
mov
ficoms
pop
das
inc
sbb
mov
movsb
enter
sub
mov
pop
add
mov
sarb
or
or
lahf
jp
push
pop
fdivl
pushf
mov
mov
stos
adc
addl
arpl
push
sbb
xchg
sti
mov
sub
in
imulb
mov
mov
jno
sti
and
mov
inc
int
or
sbb
popf
in
call
jg
cmp
and
xor
inc
adc
adc
loopne
nop
popa
int
adc
dec
mov
imul
dec
arpl
mov
call
cmp
jmp
xor
pop
xor
mov
imul
call
or
fsubrl
into
xor
jb
outsl
xchg
lahf
andb
aas
push
rcll
add
jg
movsb
push
mov
add
or
pop
pop
shrb
pop
push
jge
cmp
cwtl
inc
les
lods
push
mov
fwait
push
test
imul
cltd
add
mov
jle
daa
outsl
test
daa
or
int
rcrl
push
ret
aam
shll
mov
stos
xor
mov
daa
outsb
and
cmpsl
xor
xor
inc
das
int
sub
aad
inc
ret
jbe
loop
and
ret
push
shlb
or
inc
xchg
xchg
add
mov
insl
mov
pop
sti
popf
lret
pop
adc
dec
xchg
jae
cltd
pop
push
fildl
and
xor
arpl
jo
and
mov
push
push
add
xor
xchg
and
sahf
dec
movl
inc
mov
or
inc
cwtl
xchg
mov
inc
and
mov
je
xchg
cs
pop
arpl
insl
mov
adc
icebp
sub
shlb
xor
and
jo
xor
push
adc
ja
fidivrl
push
jbe
leave
faddl
daa
icebp
sbb
inc
pop
or
lods
cmp
mov
cwtl
mov
fisubl
das
incl
test
inc
ret
dec
xor
sbb
dec
xchg
or
cs
insl
cmpsl
xchg
ret
sahf
cmp
mov
aad
pop
rdmsr
mov
dec
mull
jno
pop
sub
add
sbb
imul
sahf
inc
push
and
movsb
test
mov
pop
outsl
ret
decl
stos
andl
xor
out
adc
outsl
mov
pop
push
jp
mov
mov
hlt
ret
or
push
pop
lods
mov
add
jo
push
mov
mov
push
mov
mov
fcomps
das
daa
push
fwait
insl
xchg
pop
rcr
ljmp
or
xor
jecxz
rorb
inc
and
test
in
xlat
das
cmp
shll
sbb
mov
testb
repnz
inc
mov
lods
mov
fidivs
dec
cmp
aam
aam
cmp
cmc
outsb
jge
jns
lcall
test
push
leave
add
mov
xorl
pop
fldcw
subl
loop
insl
cmc
or
insl
jmp
jge
or
dec
xchg
dec
stos
push
inc
adc
fwait
out
xchg
push
dec
lea
adc
add
shll
inc
movsb
sahf
mov
dec
push
es
stc
jo
scas
rcrl
sub
in
inc
or
add
sbb
addb
fisubrl
pop
add
xchg
cmpl
push
cwtl
pop
xchg
add
xorb
fisubl
sub
rcr
lret
movsl
jmp
loop
lea
shl
cmpsl
popa
sbb
xchg
mov
out
sub
mov
divb
lret
adc
push
dec
lock
lock
inc
pop
loopne
dec
or
loope
xchg
mov
sbb
mov
or
push
bound
mov
jns
ss
sub
xchg
rclb
dec
fstl
inc
divb
pop
cmp
insb
shlb
enter
mov
add
xchg
test
repnz
addr16
jns
xchg
dec
push
mov
sub
negl
imul
add
sbb
sbb
sbb
ret
mov
dec
repz
pop
dec
test
lret
mov
or
or
cmpl
fldcw
out
enter
inc
nop
inc
push
fbstp
or
outsb
inc
cwtl
mov
dec
cmc
out
pop
aad
lret
push
xchg
test
mov
cmp
jno
ss
insb
or
repnz
rcrl
pop
test
xor
clc
lret
mov
jo
jg
mov
pop
sbbl
aad
es
scas
push
xor
pop
mov
and
jns
jbe
and
push
shrb
xor
adc
pop
ljmp
add
or
loope
dec
pop
xchg
insb
stos
hlt
jo
push
sbb
imul
movsl
add
out
inc
inc
pusha
mov
cltd
idivb
add
inc
cltd
adc
sbb
xchg
inc
mov
scas
notl
in
pop
int3
jmp
movsl
insb
mov
inc
xor
je
pop
xchg
aad
dec
xchg
sub
stos
cmp
lea
orl
idivl
lock
mov
sub
pushf
push
int
mov
or
push
inc
je
clc
adc
mov
mov
adc
xor
addb
dec
pop
mov
mov
pop
decl
push
in
push
fdivs
xchg
sub
subb
add
inc
outsl
mov
push
adc
xchg
movsl
mov
mov
lock
sarl
cmpsb
fxch
pop
and
or
jecxz
sub
sarb
aaa
mov
ds
jg
ss
mov
inc
push
push
dec
mov
jno
movsb
add
sub
jge
aas
push
mov
jnp
fstps
pushf
dec
rol
fistl
inc
xor
stc
mov
daa
xchg
and
push
jmp
int
shld
fs
out
fwait
int
loop
icebp
gs
fcoml
fsubrl
cmpsb
sbb
mov
xor
mov
xchg
pop
cmpsb
cld
add
out
mov
js
pushf
fmull
mov
xchg
sbb
fisttps
jge
and
add
lea
push
rorb
jo
cmp
sahf
int3
sbb
jne
xchg
outsl
stos
or
inc
mov
mov
hlt
cwtl
fwait
inc
push
push
pop
cmp
push
mov
xchg
outsl
add
clc
add
setno
adc
loope
fdivr
sbb
cmpsb
or
leave
scas
cmp
pop
jae
or
pusha
push
jne
add
lret
sub
stos
aas
pop
mov
xchg
jne
and
ljmp
ljmp
mov
and
sti
je
sti
das
rolb
dec
iret
fisttpll
lea
mov
popf
mov
imul
cs
push
sub
add
movsl
inc
mov
push
dec
gs
movsb
or
je
pop
sbb
xchg
repz
cltd
and
and
pop
dec
popa
stc
jl
cmp
sub
cmp
imul
les
sbbb
mov
pop
inc
push
test
mov
mov
push
shrl
pop
and
inc
test
mov
aaa
mov
dec
jp
decl
fmuls
into
adc
cmpb
dec
add
sbb
adc
fsubp
lret
addl
mov
ret
jo
push
mov
pop
push
popa
es
jl
sbb
inc
les
lods
icebp
or
int
inc
shll
pop
sbb
sub
pop
sub
bound
push
push
stos
test
add
push
mov
call
fcomi
and
lret
cmp
movsl
int3
xor
popa
shlb
jno
and
fistpll
loop
icebp
add
sub
call
and
pop
loopne
fisttpll
jecxz
xchg
adc
jns
js
ljmp
popf
xor
ret
sbb
out
cmp
ja
sub
lahf
fwait
cltd
sbb
cltd
xor
ss
ret
call
xchg
rcrb
jbe
pop
rcrb
sbb
out
mov
fidivs
leave
sub
push
fmul
cmp
test
mov
xor
push
cs
mov
addl
jb
sbb
mov
fnsave
mov
call
int3
lret
pop
ret
and
lock
mov
test
sub
gs
jo
inc
add
sub
and
pop
in
cmp
jnp
int3
pop
incb
stos
neg
xlat
xor
loope
scas
imul
fwait
rolb
popf
insb
push
jb
jo
lret
inc
add
push
test
cmp
cmpsb
sarb
fwait
mov
loope
xlat
pop
xchg
data16
lds
imul
or
ret
std
push
int
inc
jecxz
xor
mov
ret
aaa
test
add
jns
pop
mov
shlb
inc
inc
cli
lds
xchg
adc
xor
push
jp
das
loop
fs
sbb
sub
jp
jmp
mov
jo
push
mov
ja
xor
or
and
sbb
mov
push
aad
mov
icebp
mov
xor
into
mov
or
push
mov
cs
stos
hlt
adc
aas
nop
stos
sbb
popf
jo
hlt
gs
mov
cs
add
cmc
cltd
inc
pop
sbb
cltd
movsb
xchg
pop
xorb
cmp
loopne
not
fsubp
scas
imul
stos
pop
sti
cs
mov
and
in
rcll
jno
mov
adc
push
rolb
loopne
ret
dec
dec
movsl
mov
xchg
push
je
andb
lcall
daa
hlt
mov
pop
in
fwait
mov
xchg
cmpsb
cwtl
mov
arpl
push
hlt
add
stc
aad
mov
cmp
shrb
push
in
jb
xor
pop
jg
outsl
xchg
xor
and
pop
jmp
mov
sbb
pop
sub
push
jns
loope
hlt
mulb
xchg
ja
lcall
sti
xchg
sti
push
sti
push
pushf
ds
xchg
adc
pushf
icebp
das
das
icebp
movl
sub
xlat
shl
or
or
imul
mov
or
mov
call
mov
lods
pop
inc
jl
pop
arpl
push
push
lret
xlat
add
mov
lahf
test
jo
roll
xor
pop
sub
push
insl
hlt
and
loopne
xchg
fmull
pop
pop
mov
and
lea
stos
ret
inc
sti
xchg
fsubl
rolb
mov
mov
xchg
pop
cmp
scas
shll
pushf
es
fwait
adc
xchg
mov
icebp
dec
cmp
pop
fsubs
xor
test
push
dec
sti
mov
inc
mov
fldt
sbb
and
push
push
pop
imul
leave
test
lret
sti
lods
es
ljmp
mov
popf
cmp
ret
ret
xor
sbb
fstl
addl
xchg
pop
jnp
jge
pusha
xor
sbb
loopne
xlat
jmp
cmpsl
aas
imul
sub
int3
jno
cli
mov
fstpl
pushf
pop
clc
inc
xchg
clc
insb
mov
mov
dec
daa
test
popa
dec
mov
shl
pushf
xlat
fistps
jmp
cmp
out
in
push
dec
sub
call
out
pop
xchg
fisttps
rolb
int
sub
push
lds
push
inc
addr16
cli
mov
cmp
xor
cmc
xor
cmc
push
popf
mov
in
push
jb
or
cli
dec
mov
adc
adc
and
mov
shll
xor
subl
pop
scas
mov
inc
popa
stc
dec
daa
sub
jae
cmpsb
mov
mov
pop
mov
hlt
shll
cmpsb
xchg
fistps
js
mov
arpl
xor
fcompl
sbb
les
push
mov
inc
iret
mov
jle
and
push
mov
scas
or
es
xor
ret
sahf
pop
ds
mov
and
pop
or
xor
cmp
jge
xchg
daa
push
add
cmp
stos
sbb
inc
push
adc
pusha
leave
mov
sub
es
and
ss
sbb
jl
jae
int
mov
xor
jne
add
fs
mov
lret
jo
and
and
das
xor
mov
loope
lea
push
xchg
dec
insl
mov
dec
mov
pop
xchg
lahf
lock
ljmp
adc
shlb
lods
mov
cmpl
add
out
lcall
rorl
arpl
cmp
cmpsb
ds
mov
mull
mov
loope
mov
pop
cmp
sub
push
add
jne
or
add
call
sub
jmp
int3
xchg
sbb
mov
pop
xchg
lds
sbbl
loopne
or
movb
add
cmp
xlat
stos
decb
cs
sbb
fldcw
leave
outsb
leave
dec
cwtl
sbb
push
adc
rcrb
or
std
mov
push
or
push
inc
push
out
movsb
insl
in
aas
or
add
cmp
and
ljmp
dec
adc
lock
add
lahf
inc
inc
mov
sub
cmp
movsl
cmpb
add
dec
push
lret
fs
mov
dec
sbb
cmpl
popa
mov
test
out
aad
push
jg
or
mov
aad
loop
fidivrs
fsubrp
les
xor
incb
loopne
mov
or
ret
cmp
movsb
pushf
shll
icebp
xchg
cmpsl
sub
inc
subl
scas
cltd
jmp
sbb
cmp
pushf
push
jo
xor
es
pop
lahf
cmpsl
adc
ja
dec
das
sarl
cwtl
cli
sarb
xchg
cs
lahf
xchg
fcomip
int
repnz
mov
jno
and
in
jbe
mov
adc
fbstp
jo
popl
arpl
bound
xchg
gs
jns
mov
icebp
mov
shll
out
loop
mov
pop
xor
mov
or
add
cmp
mov
mov
int3
mov
sub
icebp
xchg
pusha
mov
bound
xchg
fstps
shlb
aas
push
pop
js
mov
sbb
in
jecxz
add
lea
or
xchg
push
je
sar
add
shl
ss
sub
mov
shlb
ucomiss
and
inc
cltd
dec
xor
xchg
and
jp
jmp
idivl
xchg
mov
cmp
mov
dec
xchg
lock
sti
inc
cltd
xor
repnz
xor
push
fidivrs
test
fs
pop
out
mov
jbe
xchg
loop
add
adc
and
rcrl
push
mov
jne
fldcw
inc
dec
xchg
fcmovnu
mov
adc
into
jno
les
jns
cmp
decl
xchg
or
jno
repnz
add
in
cmp
mov
decb
and
in
icebp
in
inc
sub
cltd
mov
movsl
imul
mov
jmp
push
pop
mulb
scas
shll
pop
aaa
subb
push
sub
lret
and
ficompl
sub
mov
or
cmp
jmp
pop
sbb
jle
inc
pop
sbb
ss
mov
negb
fcoml
jb
scas
push
clc
iretw
mov
adc
aad
and
push
aas
cmp
imul
push
rorl
std
iret
rep
jmp
adc
push
arpl
mov
fstps
int
adc
rorb
cmp
aaa
inc
push
sbb
jns
cltd
jae
inc
jno
or
mov
es
jl
ds
push
xor
jl
or
sub
test
xchg
mov
in
mov
stc
push
jne
test
mov
adc
data16
jmp
and
loope
mov
shll
jo
xchg
inc
add
dec
add
mov
jbe
jno
add
push
scas
insl
mov
aas
lret
lock
stos
inc
add
fwait
ret
cli
hlt
loopne
dec
cmpsb
and
subb
test
mov
mov
and
adc
adcl
fs
hlt
adc
adc
lcall
out
push
or
int3
cmp
cmpsl
imul
xchg
ljmp
fstl
mov
es
hlt
cmp
into
dec
and
ret
cmp
mov
call
cmp
dec
pop
je
stos
push
jnp
and
cmp
leave
jno
inc
cmp
aas
rclb
sub
xor
xlat
sub
sub
push
mov
mov
xor
cli
jmp
xchg
xchg
sub
mov
aad
adc
dec
push
adc
imul
xor
cmp
enter
push
mov
push
push
sbb
jnp
sarl
jmp
ljmp
and
cmpsl
icebp
stos
and
scas
neg
dec
pop
xlat
out
and
pop
xchg
mov
sbb
ficoml
push
inc
aaa
sbb
mov
gs
xor
movsb
out
pushf
lret
fbstp
popa
test
aaa
bound
or
inc
pop
cmp
dec
sbb
cmpsl
fisttpl
mov
mov
inc
call
ss
addb
nop
ret
jb
leave
dec
push
xor
adc
mov
adc
mov
fwait
mov
pop
jl
pusha
mov
xor
ret
cmp
cmp
jb
cmpsb
add
icebp
ret
or
sti
pushl
or
cmc
orb
sbb
imul
mov
cmpsb
xchg
adc
fidivl
loopne
add
jno
test
fdivr
cld
cmp
or
dec
and
pop
sbb
mov
in
fs
and
icebp
jnp
lea
ret
pop
in
xor
add
in
add
mov
movsb
mov
stos
xor
movsb
mov
or
xchg
xor
iret
leave
adc
push
ja
aad
jno
pop
aaa
mov
xchg
pushf
push
and
jle
mov
scas
add
jns
sub
xchg
mov
and
xlat
gs
xchg
mov
jns
mov
mov
out
jnp
xor
repnz
hlt
rorb
inc
adc
push
fcomp
cmpsb
out
lret
mov
pop
cmp
mov
imul
into
jmp
dec
push
lahf
scas
inc
jns
pusha
push
outsl
lret
jbe
in
sub
adc
xchg
push
sub
adc
jnp
shlb
movsb
scas
sub
arpl
xchg
push
jmp
adc
jg
lret
and
and
fisubs
mov
cli
push
pop
dec
adc
test
stc
fistpll
sub
loope
cli
jnp
mul
les
jns
add
rorb
aaa
jge
xor
sahf
xchg
adc
xchg
nop
mov
push
cs
addr16
jmp
loopne
aas
mov
jle
and
lods
mov
adc
pushf
fwait
mov
push
cld
adc
sub
mov
outsb
ss
repz
aad
lcall
arpl
into
enter
out
pop
mov
push
stc
cmp
mov
pop
pop
push
int3
nop
cltd
mov
ss
jb
stos
sbb
jl
out
or
lods
repz
xor
outsl
pop
inc
cmpsl
lahf
jnp
jl
das
test
or
repz
rclb
xchg
sti
and
lahf
dec
push
mov
cmp
jb
jae
subb
xlat
adc
mov
mov
cmp
sbb
or
iret
sub
push
xchg
dec
jle
fnclex
test
daa
pop
lahf
sbb
stc
cli
aam
push
mov
push
jl
test
xchg
or
std
mov
sarl
jb
cmp
jg
add
mov
insl
lahf
jno
loope
xor
lret
cld
mov
shlb
outsl
stos
ret
pop
shl
lods
insl
enter
add
inc
rol
adc
xchg
pop
sbb
loope
mov
push
mov
mov
push
pop
aaa
or
cs
jge
sbb
shrb
mov
scas
adc
fmull
loope
sbb
movsb
ret
push
xorb
mov
cmp
pop
cli
add
mov
push
adc
and
pop
pop
scas
pusha
and
xor
scas
mov
sbb
outsl
cltd
nop
jge
inc
or
xchg
lods
sub
push
cmp
pop
movl
xchg
add
andl
mov
or
sub
xlat
arpl
mov
adc
jp
fisubrs
mov
push
data16
aad
xchg
popf
xchg
mov
cld
sub
dec
ds
mov
mov
ficoms
sub
push
sbb
xlat
out
ljmp
jecxz
push
mov
fidivl
sarl
pop
ljmp
mov
inc
pusha
outsl
adc
mov
outsb
and
call
js
frstpm(287
adc
incb
mov
add
repnz
data16
ficoml
adc
lods
cltd
jae
pop
add
clc
jnp
cmp
imul
cmp
sub
mov
xor
lcall
sub
xor
stos
sub
pushf
dec
xor
mov
pop
pop
aad
mov
mov
adc
mov
imul
adc
dec
dec
ret
xchg
sbb
iret
or
xchg
rcll
gs
jo
sub
jmp
mov
or
and
mov
push
xor
cltd
scas
movsl
xchg
sbb
mov
jecxz
or
fmull
test
dec
rcr
inc
xchg
pushf
jne
in
jae
inc
mov
loopne
cmp
arpl
out
or
add
pop
push
movsl
mov
arpl
inc
mov
and
pop
insl
jns
vxorps
xchg
loop
repz
jge
adc
nop
pop
aad
aaa
pop
mov
cmp
inc
push
pop
cmp
pop
into
int
scas
push
fsubr
cmp
mov
mov
test
sub
dec
push
dec
popa
stos
pop
mov
loope
add
cmp
pop
mov
das
sbb
xor
out
jo
push
mov
sbb
cmp
adc
fdivs
push
ja
inc
scas
pop
out
sub
adc
mov
add
and
scas
pusha
test
rorl
mov
icebp
cmp
mov
sub
andl
loopne
sbb
inc
enter
jae
ret
je
jne,pt
test
loop
mov
in
fsub
adc
mov
pop
ljmp
lcall
pop
mov
jns
jno
mov
cmp
add
jg
xor
jl
lahf
mov
adc
pmaddwd
adc
mov
rcrb
ss
sub
out
xchg
popa
fs
jge
jmp
push
in
dec
incl
es
xor
adc
dec
mov
movb
adc
repnz
out
push
pop
movlps
inc
in
fs
pop
sahf
adc
pop
fwait
dec
ja
aad
pushf
push
push
cld
inc
xchg
dec
jnp
icebp
push
and
mov
add
sub
pop
push
lea
and
lea
cmc
xchg
nop
add
popf
xchg
leave
or
xchg
and
fstp
jae
lret
dec
sub
mov
jge
in
cmpb
xor
es
sub
mov
scas
lods
push
sub
loop
pop
push
xchg
daa
jmp
in
insl
mov
cltd
lcall
test
push
pop
mov
test
fsubrl
jb
mov
jb
cmpsb
pop
jns
mov
and
shl
jge
rcrl
rorl
les
popf
xchg
or
pop
xor
lods
aas
mov
cmp
xor
movups
lret
in
jb
call
xchg
dec
popa
imull
sbb
scas
jp
mov
pusha
adc
cmp
xlat
push
in
pop
xchg
xor
fiadds
ljmp
sub
movsb
jmp
dec
je
or
jnp
hlt
xor
leave
lods
push
pop
cmpsb
sti
pop
clc
rorl
xchg
mov
fiadds
mov
sbb
stos
cmp
mov
sub
adc
sahf
jns
mov
daa
arpl
push
outsl
mov
push
arpl
inc
add
and
push
pop
inc
in
cmp
inc
xchg
addr16
push
xor
or
cmp
jge
mov
fnsave
add
jmp
rcrb
mov
jge
adc
push
mov
enter
clc
add
push
loope
repnz
xchg
shrl
loopne
stc
cs
divb
inc
hlt
pop
mov
mov
add
popa
enter
jle
lahf
ror
push
add
ja
dec
xchg
stos
outsl
dec
jo
cmp
inc
je
ja
das
lahf
pushf
clc
mov
rcl
adc
movsl
jae
divb
and
cltd
cmp
cwtd
lock
in
push
jmp
dec
mov
adc
call
stos
jne
rorb
sub
arpl
dec
test
dec
sbb
ret
lods
adc
ds
cmp
scas
inc
movsl
cmp
xchg
and
xorb
or
adc
out
inc
jmp
push
pop
xlat
sbb
mov
xchg
and
jg
adc
mov
and
pop
pop
xchg
inc
iret
int
pop
xchg
roll
je
sbb
adc
imul
mov
pop
int3
scas
dec
jg
outsl
dec
and
mov
call
test
mov
fisttpll
lahf
ds
dec
call
push
fwait
jmp
add
cmpsb
out
stos
push
cmp
daa
adc
pusha
adc
adc
popf
mov
or
push
sub
sub
xchg
mov
cmp
cmpsl
js
cmp
lcall
std
fiadds
lock
imul
mull
rcll
add
mov
in
mov
pop
jle
sbb
aam
hlt
mov
sbb
in
test
pop
sub
and
mov
xchg
lahf
cmp
push
jnp
stc
stos
daa
pop
or
daa
ljmp
cmp
dec
and
pushf
jge
mov
insl
xor
lods
mov
das
out
dec
sbb
xorl
cmp
push
pusha
mov
fcoms
fwait
into
les
and
dec
inc
cmp
xlat
sub
lods
dec
test
incl
into
mov
mov
clc
fsubl
icebp
add
xchg
mov
lret
shll
mov
mov
jbe
stc
sub
andb
loopne
stc
fwait
js
inc
sbb
stc
es
cmpsl
dec
fsubp
jl
push
mov
push
or
mov
nop
push
sub
cmp
push
repnz
jae
cli
pushf
and
mov
xchg
into
aam
pushf
pop
cwtl
add
cmpsl
push
insl
test
mov
pop
aam
idiv
sub
inc
mov
fstpl
daa
mov
push
dec
cmpsl
push
in
jl
insb
stos
icebp
mov
lods
push
adcb
lcall
ja
sbb
lods
pop
push
inc
sub
shll
insl
or
xor
fiadds
dec
nop
cmp
int3
lods
jbe
push
dec
in
sub
or
push
or
incl
lods
sub
cmp
jb
adc
in
in
movl
clc
sbb
shrl
repz
mov
cmp
ret
ljmp
and
cmp
imul
add
push
cld
sarl
pop
out
stos
pop
gs
inc
aaa
and
jmp
mov
mov
jg
addb
fsubp
push
inc
mov
dec
cmp
loop
movsb
cltd
jbe
aad
pop
jbe
xor
push
jbe
and
icebp
push
pop
dec
pop
sbb
pop
addl
lods
jbe
in
or
popa
fcomip
mov
pop
xchg
scas
decb
and
sbb
xchg
jb
pop
mov
adc
nop
fimuls
pop
roll
insb
sbb
fcoml
dec
mov
cmp
add
popa
sbb
leave
push
push
pop
into
pop
imul
cmp
mov
jbe
inc
dec
movsb
mov
std
pop
enter
scas
xchg
lret
popf
fcmovbe
dec
sbb
and
jnp
push
cs
notl
outsl
dec
pop
fildll
ljmp
pop
sti
inc
or
jne
sbb
dec
push
cmpsb
and
das
lock
push
mov
mov
or
add
arpl
ja
sbb
or
test
iret
push
cmp
aam
lock
mov
icebp
fildll
jae
cs
sub
cmp
push
adc
outsl
fwait
xchg
jae
inc
adcb
jle
add
cwtl
fwait
subl
jp
rcl
stos
fcmovnbe
dec
push
aam
and
stc
push
xor
xchg
push
add
pop
jecxz
repz
mov
int3
xchg
mov
fsubrl
or
push
mov
popf
loopne
movsl
fisubrs
lahf
loop
repz
or
mov
scas
daa
ja
in
je
inc
mov
bound
sub
pusha
gs
cmpb
xor
mov
fwait
push
mov
mov
dec
mov
pop
rcr
lret
sub
adc
dec
adc
jae
jae
inc
adc
and
pop
popf
repnz
jle
pusha
repz
rcrb
hlt
lret
jo
outsl
pop
mov
cli
adc
sbb
mov
mul
fucomip
jno
stos
cmp
and
out
jl
lods
push
pop
cmp
mov
outsl
add
dec
addr16
push
ja
sub
aam
sbb
push
xor
or
inc
pop
div
xlat
mov
adc
lret
stos
sbb
inc
mov
adc
adc
cmp
sbb
int
xlat
orb
push
mov
std
lds
xor
cmpsl
adc
in
popf
sbb
mov
jb
in
mov
loop
sub
or
call
push
std
inc
xchg
sbb
pop
int3
sub
loope
push
out
sub
pop
pop
jmp
pop
ja
ljmp
push
mov
push
lds
cmp
lds
lcall
jl
xor
mov
mov
mov
popa
xchg
dec
lcall
andb
or
xchg
pop
mov
shlb
mov
out
fwait
or
sbb
dec
mov
test
sbb
dec
cmp
leave
inc
jmp
daa
test
out
int3
inc
lods
jmp
das
cs
mov
dec
in
cmpsl
mov
dec
mov
fcompl
adc
xor
sub
jns
jmp
lods
xchg
sahf
sub
adc
add
dec
loopne
das
xchg
out
xchg
ret
js
cmp
dec
or
push
add
cmp
aaa
lods
cld
dec
inc
sbb
push
lea
cmc
mov
mov
xchg
inc
jo
mov
cltd
rclb
incb
fwait
xlat
mov
cwtl
xor
jb
jp
pop
pop
dec
call
loopne
and
outsb
mov
xor
mov
outsl
gs
and
rolb
jne
cld
pop
pop
pop
mov
mov
leave
out
jns
cmp
out
push
ljmp
cmp
test
push
and
and
jno
mov
test
add
fcmovb
shlb
cmc
add
dec
in
dec
repz
aad
iret
shl
push
mov
mul
fists
jbe
test
incb
adc
pop
sbb
cmp
cmpsl
add
repz
popa
jb
je
mov
aas
pop
filds
push
js
pop
push
popf
xor
jmp
in
sbb
outsb
addr16
xchg
xchg
dec
sahf
xor
sbb
testb
shrb
sbb
int3
lods
mov
fistps
imul
in
xor
fmulp
jg
imul
mov
sbb
test
sbbb
push
lods
xor
js
push
out
out
sahf
mov
pop
iret
mov
popa
xor
sub
shlb
mov
mov
fnstcw
mov
mov
add
faddl
pop
cmp
enter
insl
dec
sbb
insb
pop
test
fsubrl
outsb
bound
negb
adc
cmp
test
hlt
in
xchg
fbld
push
mull
pop
add
fcompl
adc
hlt
cmp
xchg
rclb
push
mov
dec
or
stc
std
scas
jbe
scas
mov
out
add
scas
mov
and
dec
push
int
or
adc
aad
out
inc
cmc
mov
adc
adc
arpl
mov
loope
rcll
ret
mov
jbe
and
mov
jmp
mov
cli
cld
int3
mov
mov
or
test
inc
cmp
push
dec
xchg
call
mov
lock
repz
insb
jp
enter
lds
aaa
sub
sbbb
arpl
mov
enter
outsl
cld
adc
mov
push
std
cs
sub
std
insb
sbb
add
mov
jg
sub
dec
outsb
shlb
jmp
insl
js
sub
xor
mov
std
jo
xchg
pop
je
sarl
inc
ljmp
sbb
int3
movsl
repz
in
bound
xchg
cltd
sub
pop
cld
jae
or
lock
xor
fs
cs
push
adc
int3
call
data16
mov
dec
in
dec
hlt
imul
push
into
aas
and
andb
pop
mov
inc
jle
xor
jo
and
and
adc
cmp
mov
lret
adc
data16
imul
es
xchg
das
mov
lret
cltd
pusha
or
and
lods
xchg
mov
sbbb
std
adc
cmc
lock
adc
movsb
jb
push
cltd
aas
sarb
jg
loopne
jnp
xor
xor
dec
testb
sbb
pop
sbb
ret
mov
xchg
xchg
shlb
mov
out
int3
insb
ja
jle
dec
leave
fwait
mov
imul
mov
mov
jg
push
lds
in
adc
ret
stc
popa
xchg
mov
es
cmp
notb
cmpb
clc
ja
cmpsl
movsl
inc
inc
adc
jge
and
sbb
les
sub
push
xlat
xor
int
test
mov
inc
es
fiaddl
nopl
repz
mov
dec
vpinsrw
fildll
aaa
int
outsl
push
iret
pop
arpl
in
loopne
dec
ja
dec
xorb
jecxz
movsb
xor
movsl
imul
and
ds
xor
movsl
sarb
js
rcrl
inc
push
arpl
inc
xchg
add
inc
push
push
mov
je
mov
imul
aas
pop
pop
or
outsl
or
test
lods
jmp
push
xor
out
jo
dec
out
sbb
dec
pop
mov
lods
xor
pop
inc
add
roll
in
lret
fwait
daa
pop
add
out
xchg
pop
imul
insl
imul
insl
inc
aam
jl
arpl
pop
sbb
call
jb
hlt
lret
jmp
or
sub
popf
cmp
inc
and
or
add
stos
jmp
aad
out
dec
enter
adc
xor
arpl
sub
pusha
xlat
dec
xor
into
and
das
ja
cmp
adc
sub
pop
push
fimuls
int3
mov
push
add
cwtl
in
push
xchg
je
clc
out
or
mov
rolb
push
stos
cli
aas
fdiv
or
jle
jecxz
fnsave
push
aam
jge
mov
pop
push
xlat
mov
out
lods
or
rol
repz
in
scas
not
or
lods
leave
stc
rcr
lock
cmp
mov
pop
jge
cmp
xchg
sarb
ljmp
aam
sbb
mov
push
sub
sahf
aas
adc
cld
jge
fcoml
test
xchg
xchg
rcrl
mov
test
inc
push
fdivrl
popa
movb
icebp
cs
mov
push
test
repz
jbe
xor
xor
dec
mov
xchg
iret
lock
push
jl
sub
pop
lret
fidivs
and
in
lret
jle
push
push
jno
mov
push
push
rorl
or
arpl
iret
sub
mov
mov
fistl
mov
insl
psubd
mov
jb
hlt
fcomps
inc
cmp
jp
ret
test
push
cs
loop
or
dec
mov
outsl
pop
mov
xchg
push
rorb
rorb
pop
in
push
cmp
repnz
mov
sub
arpl
enter
ss
popa
subl
or
xchg
dec
mov
invd
cs
fstpl
mov
or
mov
or
xchg
push
inc
dec
jnp
mov
mov
cmp
mov
add
hlt
adc
or
pop
jo
cli
ficoms
int3
lods
stos
push
pushf
xlat
popf
fistpl
in
inc
je
mov
push
pop
pop
mov
lcall
cmpsl
add
cli
mov
inc
dec
push
sarl
xchg
sarl
cmp
lcall
xchg
mov
sar
stos
stos
or
sbb
dec
fs
enter
adc
dec
pusha
shll
ret
jo
jne
or
add
es
jo
add
stc
jae
aam
daa
outsb
test
imul
push
mov
stos
adc
pop
in
fidivrl
or
fisttps
jle
mov
sarb
inc
push
push
pop
sti
notb
dec
inc
add
mov
cs
mov
sbb
das
pop
lock
in
and
mov
lock
lret
and
jge
jo
cmp
in
add
cld
gs
push
inc
fsubl
add
mov
enter
mov
ret
xor
inc
cs
xlat
xchg
push
iret
fisttpl
addr16
jae
adc
sbb
jle
ja
lret
ss
loopne
es
je
and
popa
jecxz
adc
mov
bound
je
cld
rcr
test
popf
xchg
lahf
pop
sub
aad
lret
mov
ret
adc
in
std
sbb
clc
lods
rcr
mov
loop
dec
out
mov
cmp
cwtl
pop
mov
push
arpl
cwtl
stos
icebp
repnz
inc
mov
adc
fidivrl
push
imul
call
add
sbbl
pusha
or
iret
jns
push
push
dec
mov
cmc
add
outsb
leave
cmp
les
jecxz
cmp
in
mov
cld
dec
les
lods
arpl
push
sbb
add
cld
lcall
test
out
xchg
enter
fstpl
pushfw
jnp
out
ljmp
es
push
inc
jmp
mov
popa
shrl
divb
xor
leave
jecxz
sbb
xchg
sbb
adc
fdivs
lret
xor
popf
or
mov
repz
loope
addr16
lock
test
hlt
idivb
adc
dec
addr16
jg
fcoml
es
and
mov
mov
ljmp
jle
gs
push
push
bound
lcall
inc
pop
xchg
jno
loop
pop
jge
shrb
jle
shll
lret
xchg
pusha
testb
jne
cld
outsl
addr16
arpl
daa
mov
std
aam
lcall
pop
scas
pop
cwtl
nop
and
imul
add
mov
pop
cmp
mov
in
shrl
mov
je
dec
cld
inc
insl
sarb
and
lret
mov
mov
cmp
or
pop
lea
cli
repnz
icebp
test
lds
mov
and
dec
lods
sahf
pushf
mov
loopne
push
stos
pop
adc
imul
push
mov
das
sbb
pop
sbb
add
jns
dec
mov
in
sub
inc
out
call
xor
stos
jno
xlat
es
xchg
mov
js
das
lods
or
outsb
popf
mov
je
sub
add
dec
stc
cwtl
jb
push
divl
jecxz
outsl
int
cmpsl
adc
gs
ljmp
xor
pop
mov
adc
mov
outsb
inc
inc
mov
sbb
add
push
cmp
lea
iret
mov
fst
inc
mov
cmp
xor
xchg
or
pop
push
rcrl
sarl
cld
hlt
iret
jb
outsl
scas
test
xchg
aaa
sub
pushf
nop
adc
jge
call
sbb
jl
imul
xchg
mov
sub
in
jo
imul
or
or
or
mov
fstps
mov
mov
insl
or
push
cmp
adcl
mov
scas
lcall
test
fisttpll
add
mov
xchg
or
out
jne
push
sbbl
sbb
adc
fidivrl
ret
inc
cmp
sbb
mov
fs
mov
sahf
push
xor
imul
scas
cmpl
cmp
jnp
mov
xchg
addr16
lret
prefetch
sbb
in
fs
inc
mov
sbb
ret
xlat
movsl
mov
nop
sub
pop
jle,pn
out
cmp
jns
pop
push
fs
jns
cmc
mov
add
adc
xchg
lods
int3
rorl
dec
push
push
rcrb
dec
adc
pushf
dec
xor
in
pop
cmp
mov
test
jae
mov
call
mov
jecxz
int3
pop
leave
imul
leave
mov
cmpsl
dec
cmp
jnp
pop
test
or
outsb
or
jle
fdivrs
rolb
movsl
mov
sbb
xchg
adc
push
push
and
in
cmc
je
enter
mov
and
int3
aad
daa
jne
add
lcall
out
lret
sahf
inc
or
cmp
cltd
in
jb
and
adc
xchg
hlt
mov
mov
pop
add
mov
sbb
jle
in
addr16
xchg
sahf
stos
xor
mov
bswap
outsb
add
cltd
lock
push
pop
lods
mov
in
cmp
push
jbe
dec
ss
leave
cld
xchg
mov
xchg
pop
mov
daa
pop
and
lods
jmp
les
in
jo
inc
das
xchg
aas
cmc
div
mov
notb
pushf
lcall
or
mov
cs
in
sub
mov
adc
lock
inc
cmp
jns
sbb
in
stos
mov
imul
lcall
loope
pop
int3
xorb
inc
sti
jg
ds
cld
flds
cmc
xchg
and
sbb
divb
mov
jge
xchg
not
mov
movsbl
dec
pop
add
xor
pusha
sti
in
mov
or
pop
jle
sub
jnp
mov
aas
jns
sbb
imul
shll
pushf
mov
dec
mov
not
push
sbb
ja
pop
push
call
xor
adc
xchg
data16
jo
fidivl
or
decb
cmpsb
stos
std
jg
and
jge
sti
pop
jg
loopne
inc
push
cmp
inc
dec
jbe
dec
out
cs
or
cmp
sti
mov
sbb
jl
sub
pop
aad
adcb
inc
push
cmp
sub
jl
and
pop
imul
aam
fstp
lea
test
mov
jns
xchg
imul
cmp
mov
cmp
inc
lcall
ljmp
or
cmpsl
imulb
gs
subl
cwtl
fcoms
cmc
out
out
loope
cmpsb
arpl
data16
daa
insl
mov
xor
cwtl
jns
mov
nop
push
adc
scas
cmc
sti
sbb
and
sbb
aad
stos
inc
shll
rcrl
pop
or
mov
lret
mov
mov
sub
je
fmull
add
mov
push
xchg
filds
leave
rorl
in
faddp
ljmp
popa
xor
lcall
push
aas
and
stos
out
je
and
stos
shll
call
mov
dec
sub
js
jl
loop
in
or
and
fdivr
mov
push
dec
xchg
movsl
sub
add
mov
stos
mov
les
test
fwait
add
stos
pop
out
int
fidivl
sbb
into
cmp
pusha
mov
jo
gs
dec
xor
dec
sub
push
xchg
push
stos
jae
rcl
clc
xchg
add
movsb
arpl
and
and
cld
add
push
mov
xchg
das
ljmp
xchg
lock
jp
hlt
cmpsl
pushf
insb
push
jecxz
stc
and
and
sub
dec
ljmp
adc
cs
jmp
inc
sub
lret
jg,pt
in
mov
stos
inc
orl
mov
sti
sub
mov
sbb
sbb
lds
ret
ds
jp
lods
jl
pop
sbb
mov
mov
shrb
shl
nop
mov
lock
inc
pop
in
xchg
rorl
lret
cld
and
xchg
js
lahf
stc
les
or
loopne
push
cmp
ret
fstps
mov
js
mov
cmpsl
shlb
hlt
adc
cltd
dec
mov
mov
cmp
jmp
mov
add
xchg
aaa
cmpsl
xlat
mov
or
repnz
pop
sti
pop
cmp
nop
shrb
lea
out
sbb
adc
out
das
lds
fcmovne
xor
out
jp
xchg
inc
xchg
dec
inc
push
in
pusha
out
stos
nop
in
jns
or
testb
lock
fld
cmp
stos
cs
push
lods
push
loopne
ror
inc
inc
pop
into
cld
inc
jo
mov
cmp
movl
out
cwtl
adc
dec
loope,pn
dec
push
fsts
sti
stos
into
sub
mov
aas
pop
jl
daa
cs
psubsw
stos
das
enter
jl
or
movsb
cmp
push
adc
xchg
fcomp
sbbb
fisubl
mov
xlat
pop
fstpl
scas
inc
jge
pop
dec
mov
mov
xlat
negb
jns
xchg
int
mov
fucomp
push
jg
add
sbb
pop
mov
in
add
and
das
sti
mov
mulb
jmp
scas
popa
rorl
mov
add
sahf
mov
push
insl
jge
dec
adc
mov
push
xchg
inc
lea
jl
scas
sub
xchg
add
cmp
mov
lahf
cmpsb
sub
xlat
aaa
inc
sbbb
lret
xor
nop
add
dec
sahf
sub
lock
adc
cmc
pop
ficoml
pop
mov
or
mov
cmp
mov
lea
stos
mov
sub
add
xchg
in
stos
mov
pop
cwtl
imulb
hlt
and
fcomps
inc
adc
pusha
outsb
jbe
jo
mov
jbe
fwait
and
les
test
test
pop
loope
or
or
sub
inc
into
push
and
lret
mov
push
lahf
and
jg
jmp
leave
pop
and
mov
pop
mov
mov
push
outsl
icebp
call
pop
cmpsb
inc
fwait
pop
sub
or
sub
push
popf
popa
mov
cmp
mov
xlat
orb
push
in
sarl
mov
sub
out
lcall
jbe
mov
iret
sub
jmp
mov
lret
dec
scas
mov
and
add
cmp
pop
push
xchg
sbb
sub
xchg
je
xchg
xor
push
aad
movsl
aam
jno
cmp
rcll
leave
ja
sbb
popf
jle
sub
cld
inc
xchg
int
movsb
add
cwtl
popaw
jnp
push
mov
mov
divl
mov
test
out
icebp
sahf
or
mov
idivl
pop
sub
test
cwtl
fs
and
insl
fsubrs
ret
mov
push
out
sahf
mov
jp
add
test
mov
jle
push
popa
xchg
out
ja
pop
in
pop
inc
out
sahf
sub
ja
sti
lahf
out
fmuls
sub
push
jbe
leave
dec
sbb
sub
mov
int3
sub
add
test
jae
inc
pop
lods
push
dec
jns
dec
movsb
mov
cmp
test
adc
mov
fistpll
in
pushf
pop
es
push
repz
test
adc
js
mov
leave
negb
push
jnp
int3
pop
in
jns
cmpsb
int3
xchg
sbb
push
jne
ret
jbe
or
jle
rcr
cltd
and
sbb
into
jecxz
sbb
or
pop
testb
sbb
dec
push
pop
inc
or
fldcw
insl
stos
xor
add
loop
iret
out
repnz
lods
jnp
xchg
pop
ja
bound
dec
lock
mov
sar
jnp
push
jbe
cmc
sbb
jp
out
cs
int3
mov
ljmp
aas
subl
adc
pop
addb
mov
add
sbb
aam
or
lds
repz
push
sbb
or
jne
push
lea
pop
stc
sarl
rcrl
test
cltd
jl
dec
xchg
dec
lcall
outsb
repz
das
pop
inc
push
out
add
cmp
arpl
xor
push
push
jp
cld
push
ret
mov
mov
mov
mov
jb
jg
movsl
sbbl
and
fldl
push
shlb
filds
mov
dec
pop
daa
testl
mov
imul
ret
dec
sar
mov
loop
lods
adc
xor
dec
cs
gs
or
push
cmp
int
push
mov
cltd
add
sbb
int
lock
clc
je
in
incl
arpl
aas
inc
push
in
jnp
hlt
jae
xor
into
mov
inc
dec
jmp
add
pushf
int
mov
je
lods
pop
dec
pop
enter
mov
data16
mov
es
mov
cltd
lods
popf
jp
je
push
imul
lods
inc
pop
jb
or
push
adc
and
mov
mov
xchg
lahf
pushf
fdivs
pop
lea
mov
sub
jmp
cwtl
sahf
fsubrl
push
mov
sbb
jg
int3
push
mov
xor
lahf
cmc
ja
mov
jno
dec
daa
fdivrs
pushf
push
adcb
std
sub
cld
icebp
mov
pavgw
movb
out
inc
aam
push
les
fsubl
addr16
cmp
push
cld
adcl
adcl
ja
inc
sbb
inc
push
push
sub
add
jnp
xchg
push
jne
ret
shrl
xor
jle
mov
stos
xchg
pop
stc
out
subl
cltd
sbb
in
or
push
jmp
dec
jns
mov
ss
mov
inc
xchg
lods
adc
jne
nop
dec
jne
shlb
xor
jp
mov
xchg
hlt
aaa
les
inc
scas
mov
out
and
pop
cmpsb
xchg
push
pop
pop
xchg
sbb
ret
and
ficoms
ret
movsl
mov
inc
mov
inc
mov
xchg
mov
mov
push
xor
and
scas
stc
out
push
popl
jb
and
lahf
std
ss
jnp,pt
xchg
rcrb
mull
mull
icebp
xchg
daa
xor
inc
push
pop
and
test
jl
out
push
popf
xor
hlt
push
ret
in
call
add
es
inc
inc
add
jno
hlt
push
in
mov
fisttpll
test
sub
and
inc
mov
lret
cmp
sub
sub
fwait
ds
inc
mov
imul
les
push
xadd
lea
lds
jge
push
popa
fsts
ror
inc
fwait
pop
pusha
imul
pop
cmpsb
cmp
xchg
mov
lods
rcrl
sub
rcl
aaa
or
push
cmc
repnz
inc
lods
leave
ja
cli
add
repz
loope
xlat
ss
mov
testl
es
jo
js
sarl
out
dec
stos
out
mov
xor
incl
push
lods
push
fcompl
repz
fidivrl
je
fs
push
pop
ret
xlat
in
pand
test
das
mov
popf
mov
lahf
mov
cmp
jp
cmp
inc
dec
punpcklbw
ss
cs
pop
xor
shlb
xlat
mov
andl
out
imul
xchg
dec
fstpl
cs
dec
inc
jae
or
push
push
jg
sub
ljmp
xchg
mov
ret
push
and
xchg
mov
xchg
adc
arpl
jle
rorl
jne
add
stc
jno
xor
test
out
fcompl
xchg
aad
jae
xchg
mov
les
or
das
test
loop
sub
stos
xlat
or
sub
push
test
scas
roll
push
rcr
pop
shlb
es
jae
in
test
cmc
or
clc
std
stos
lahf
arpl
out
shl
sbb
cmpsl
ret
inc
pop
addr16
or
push
arpl
outsl
ds
dec
hlt
imulb
lds
xor
aaa
shr
cmpsb
dec
pop
sub
mov
adc
push
and
lret
cmp
jae
jb
dec
fnsave
loop
loopne
adc
shlb
jo
incl
and
sub
imul
sub
dec
test
sub
xor
call
movl
add
push
jge
mov
mov
jns
inc
inc
movsl
inc
sbb
cltd
cmp
sub
mov
or
xchg
xor
push
cli
and
and
mov
gs
sti
xorb
xchg
in
jg
shll
push
dec
scas
cmpl
cltd
sbb
into
int3
sbb
and
cld
lahf
ficoms
dec
xchg
es
popf
movsl
ficompl
lea
sbb
dec
rolb
xlat
cld
pop
push
test
insl
mov
push
jg
mov
cwtl
divb
dec
and
and
scas
je
data16
or
sbb
movl
pop
mov
mov
sahf
ss
leave
call
jp
notb
test
idivl
dec
aad
adc
test
xor
fistps
xor
out
lret
ffreep
xor
push
test
mov
xor
xchg
lret
sahf
mov
orl
pop
mov
pop
sbb
lahf
jmp
pop
shll
rcrl
call
repnz
sbb
push
pop
das
push
add
mov
fistps
xor
imul
nop
mov
cmc
mov
xchg
orb
xlat
fstpt
cmp
xchg
sbb
xchg
repnz
adcb
mov
pop
cmpsl
jb
sti
and
aad
aas
push
mov
loop
cmp
outsl
test
lret
ret
push
mov
and
sub
loop
pusha
xchg
push
dec
sub
push
mov
lods
in
mov
mov
test
dec
ficompl
xor
sbb
mov
out
jno
mov
pop
in
pushf
sbb
sbb
lock
sbb
popa
lods
in
or
push
or
clc
pop
shrl
or
mov
adcl
call
or
nop
mov
pushf
in
sub
push
jecxz
inc
mov
popf
enter
mov
stos
in
adc
xchg
cmp
or
cmpsl
in
mov
loop
push
cmp
roll
adc
dec
ror
sbb
push
pop
out
adc
out
cwtl
pusha
test
iret
adc
sub
add
lret
push
and
int3
clc
sub
lret
jecxz
pop
jmp
fwait
aad
xchg
mov
push
inc
cmp
enter
inc
add
adc
popf
and
int
dec
xchg
bound
or
jbe
sbb
stos
or
mov
pop
xchg
mov
pushf
ja
daa
inc
in
cmpsb
pushf
int
ds
pop
ds
adc
push
int3
cmp
cmp
sbb
les
push
mov
jno
mov
fidivs
and
pusha
insl
lahf
pop
lahf
adc
mov
cmp
dec
test
and
jnp
sbb
rcrb
hlt
test
test
sub
sbb
xchg
pop
icebp
adc
sti
xchg
sub
jno
int3
sub
gs
testb
out
pop
cs
loopne
dec
mov
and
or
mov
mov
fistpll
jne
testl
push
cmpsl
bound
stos
sbb
dec
stc
jle
xchg
imul
mov
push
outsb
ja
cmc
push
xor
or
dec
push
cltd
fstps
mov
test
sbb
std
mov
enter
xchg
data16
sbb
fwait
dec
data16
nop
clc
and
and
std
sbbb
out
mov
push
adc
aas
push
mov
es
mov
or
inc
jmp
inc
add
mov
in
fidivl
in
push
lods
xor
sbb
xchg
dec
push
push
int
repz
push
stos
stos
lretw
andb
cmc
rorl
inc
insb
popa
insl
xchg
pop
js
jmp
aad
jns
or
push
adc
sbb
test
ficompl
sub
shll
xor
cmp
jbe
cltd
cmpl
loop
imul
ficoms
sub
iret
cmp
xchg
mov
into
shr
jge
mov
loopne
in
pop
xlat
or
lcall
xchg
insb
mov
lahf
psrld
jle
xor
insb
lahf
lods
inc
xchg
and
or
stos
dec
cmp
xor
adc
push
ss
sbb
push
fidivrs
and
jge
roll
icebp
xchg
jge
loop
cs
fcmovnu
adc
data16
xlat
push
lods
rcrb
xchg
stos
mov
repnz
xchg
shrl
adc
push
sub
add
jecxz
push
jb
dec
imul
and
inc
pop
jmp
call
ss
pop
mov
into
int
and
sahf
and
jo
sarl
es
fs
or
push
inc
xor
push
mov
sbbl
cmp
push
mov
in
aam
xor
add
aad
mov
xchg
test
clc
mov
xchg
es
sub
lea
dec
pushf
mov
test
mov
lock
xor
xbegin
fidivrs
fcmovnbe
or
loopne
sub
mov
imull
add
dec
lcall
js
jg
mov
in
sti
xchg
pop
jne
or
mov
shl
dec
call
mov
cld
add
or
adcb
mov
pop
add
repz
lea
cmp
or
fnstsw
pusha
repz
aad
rcrb
add
push
fucomp
arpl
scas
jg
mov
sub
push
push
cmp
lods
jp
dec
orb
mov
scas
std
fdiv
mov
movsb
push
inc
cmp
jb
xchg
loope
push
outsl
sbb
adc
out
cmp
fcoms
sbb
add
mov
and
in
movsb
xor
inc
cld
mov
setns
cmc
icebp
jg
or
cmc
inc
and
lods
add
outsl
dec
push
and
ja
xor
mov
mov
or
sahf
popa
in
fs
mov
jo
stos
xchg
pusha
jbe
std
xor
aam
fisttps
sbb
mov
xor
enter
pop
into
push
int
out
push
ret
adcl
push
jge
mov
aas
mov
add
int
rorl
sub
xor
ret
jle
test
push
neg
and
xchg
es
into
fs
addr16
inc
mov
inc
jns
fldenv
jb
cmp
clc
mov
jb
inc
sbb
mov
push
adc
outsl
pusha
test
fisubl
movsb
inc
mov
add
test
shrl
dec
xchg
and
mov
mov
scas
ficoms
ljmp
and
sub
inc
add
iret
add
mov
cmpsb
rcrl
lret
outsl
add
xor
sbb
mov
fldenv
test
mov
lret
clc
sti
pop
sti
jmp
mov
cmp
test
ficompl
adc
fistps
es
mov
mov
jl
in
test
push
cld
jle
push
push
lahf
cmp
xor
push
xchg
shr
sbb
mov
imul
mov
sbb
cmovb
xchg
mov
cmp
pop
imul
scas
cli
sbbl
rcrl
popa
and
and
cmc
sub
shlb
jge
or
or
addr16
ret
xchg
sbb
mov
jb
dec
mov
inc
mov
repnz
ret
into
orl
sbb
cltd
jecxz
notb
loope
cmp
test
fwait
and
popa
jno,pn
lea
jns
pop
addr16
int3
mov
pop
and
cmp
int3
or
add
out
mov
adc
cmpsl
jg
test
jne
jns
aam
inc
lcall
mov
fst
pop
loop
jne
data16
push
sub
aaa
and
cmpsb
daa
repnz
dec
sbb
push
out
mov
push
jmp
pusha
daa
out
outsl
inc
test
mov
shrb
dec
push
mov
sti
mov
jecxz
pop
pop
addl
push
iret
xchg
xor
in
sahf
arpl
nop
push
ds
ss
pop
push
fisubrl
mov
pop
test
mov
and
out
mov
pop
xchg
push
movsb
enter
mov
mov
add
in
push
cltd
push
imul
fildl
iret
sbb
divl
xor
sahf
push
popa
stc
lea
jb
sub
add
cmp
jecxz
fcmovb
cmc
add
xchg
jb
loopne
test
cmp
push
sub
lcall
sbb
pop
xchg
test
shlb
sbb
push
das
xor
push
inc
data16
xlat
testl
mov
popf
incl
ds
jge
sahf
arpl
int
in
xchg
es
dec
cld
mov
cmc
or
test
sti
jp
pop
inc
mov
mov
inc
out
push
lret
pop
in
add
and
clc
popf
out
push
jmp
mov
rclb
int3
lcall
mov
clc
xor
fnstsw
aam
bound
ljmp
mov
mov
xor
mov
push
sahf
cmc
push
js
in
int
jg
inc
jp
frstor
je
dec
orl
cmp
inc
fwait
arpl
repnz
xor
mov
dec
add
xlat
roll
rcl
pop
fiadds
fnstsw
clc
jo
sub
scas
xchg
mov
xor
fnstsw
andb
dec
cmp
js
stos
lea
fidivl
mov
retw
adc
sahf
outsl
dec
in
add
push
test
aas
outsb
outsb
popf
dec
xchg
outsb
mov
xchg
enter
loope
lods
and
mov
xor
push
aad
push
loop
pop
pop
jecxz
add
daa
jg
jmp
sbb
into
sub
in
loop
mov
std
sub
lods
pop
and
jbe
pop
ret
in
adcb
int
dec
pop
xchg
xchg
bound
xchg
sub
dec
hlt
jle
mov
jg
in
js
inc
add
clc
fucomip
push
daa
xchg
fs
xchg
movd
outsb
inc
enter
loope
stc
in
pop
cmpsb
xchg
mov
jno
jmp
cmpsl
mov
mov
aaa
pusha
idivl
mov
pop
push
loope
pop
ja
sub
jae
test
data16
mov
or
jge
ss
xor
inc
imul
xlat
fdivr
fnstenv
fidivs
push
test
jno
test
lea
sub
gs
pushw
fwait
ja
or
and
or
inc
iret
js
sti
dec
movsb
ljmp
add
ret
cltd
cmp
cmpsl
testl
cmp
leave
sbb
push
sbb
push
or
push
pop
push
cli
cld
or
sahf
jmp
xchg
pop
pop
inc
sahf
lret
fdivrs
sub
ljmp
cmp
call
int
xor
lahf
mul
fimull
lret
jne
xor
scas
cmpsl
mov
mov
jbe
cmp
or
imul
pushf
addb
mov
testl
shlb
inc
jo
gs
jnp
add
pop
mov
pushf
push
shlb
pop
aas
mov
sbb
insl
fwait
adc
xor
mov
sbb
and
inc
int
mulb
xchg
dec
pushf
inc
push
bound
es
jg
xchg
xchg
xor
imul
fdivl
mov
adc
jns
in
push
test
pop
cli
sbb
adc
cmp
add
outsb
jecxz
fnstenv
aaa
stos
rorl
bound
sbb
sub
mov
mov
jnp
cmpsb
push
xchg
int
sti
xchg
gs
fiaddl
lret
push
movl
mov
movsl
loopne
mov
arpl
mov
and
sbb
in
dec
xchg
pop
add
lds
pusha
cmp
out
push
add
mov
test
lahf
dec
daa
lods
dec
lds
mov
xchg
lcall
sub
and
adc
jno
cmp
mov
jo
daa
popa
jae
sbb
lds
loop
push
dec
pop
lods
push
out
test
int3
sub
dec
pop
jno
jp
inc
cmp
sahf
or
jns
iret
loop
leave
mov
ret
fsts
pop
adc
cmp
inc
insl
and
clc
push
jg
test
xlat
test
pop
lea
scas
lret
pop
shrl
aas
icebp
ja
int3
pop
mov
pop
xchg
push
jmp
jnp
pop
xchg
push
js
popa
mov
cmpsl
clc
test
testl
rcll
pop
out
and
addr16
mov
dec
ret
ss
leave
movsl
into
add
fldcw
aad
daa
enter
movq
sbb
cmpsl
rorl
dec
mov
inc
cmp
fidivl
jne
sarl
shll
loope
int
dec
mov
mov
xchg
and
adc
and
xchg
sahf
mov
push
cltd
lret
mov
dec
push
xchg
mov
sub
mov
add
adc
push
dec
add
pop
add
ret
icebp
push
add
lods
decb
mov
add
push
mov
inc
sar
movsb
fistps
jmp
cmpb
inc
icebp
ja
scas
gs
or
add
jns
mov
jl
int3
pop
lods
in
push
mov
inc
or
adc
pop
loope
xchg
clc
popa
sbb
sub
adc
mov
iret
inc
cltd
test
push
dec
push
jge
imul
sub
xchg
inc
test
jp
xchg
roll
andb
lds
in
pop
mov
add
fisubrl
in
mov
enter
fdivr
pushf
dec
mov
mov
ja
ret
lahf
outsl
sub
out
imul
lret
or
ja
dec
push
lea
ret
jo
cmp
cmp
fcomps
mov
mov
int3
lret
jo
outsb
nop
ficoms
mov
and
mov
inc
rclb
outsl
into
gs
lods
cs
bound
push
clc
sub
mov
ret
int3
mov
imul
fiaddl
xor
push
aas
mov
out
jno
clc
js
add
xchg
pop
fcomi
mov
out
pop
out
scas
pop
ds
and
out
in
cmp
fs
fildll
fdivr
test
outsl
jne
sub
mov
aad
sub
push
pop
daa
hlt
pop
mov
rcrb
cmp
cmpsb
dec
jns
int
cli
lret
xchg
push
jge
add
xor
rorl
mov
add
filds
psraw
xlat
adc
cmp
jns
cmp
call
cmpsb
pop
dec
xchg
pusha
shlb
shll
mov
sub
lods
pop
lcall
sub
ficoms
imulb
xor
je
outsl
daa
pop
bound
dec
gs
push
push
les
aam
add
push
mov
hlt
test
jp
adc
dec
adc
sbb
cli
cmp
in
add
add
enter
test
or
xchg
xchg
fwait
sub
popa
xor
cwtl
mov
xor
sub
imul
inc
mov
adc
es
ja
sub
jns
and
sub
es
popf
push
push
push
add
mov
je
notl
enter
push
xchg
int3
fwait
loopne
nop
push
fwait
push
mov
loop
mov
and
push
pop
mov
fsubrs
nop
pop
xlat
cld
xor
xlat
jle
popf
rcrl
pop
mov
sub
dec
call
popa
xorl
shlb
dec
sbb
pop
scas
aam
dec
into
movsl
outsl
add
push
mov
fcomps
int3
cmp
push
popf
fistps
fildl
aam
lcall
xor
sub
pusha
ss
dec
gs
in
fidivrs
aaa
push
clc
pop
adc
sub
aad
call
sti
push
int
mov
pop
cmpsl
inc
cmp
jae
push
cmc
mov
mov
jl
movsb
pop
ss
fildl
jae
adc
outsl
mov
gs
mov
lcall
jnp
cmp
push
js
iret
in
out
xchg
mov
jmp
mov
push
jno
or
ds
pop
aas
mov
cmpsb
mov
dec
shrb
mov
and
outsl
imul
push
in
inc
sub
rorb
mov
popa
rclb
push
sahf
sub
js
mov
push
xor
jmp
outsl
lret
test
and
roll
loopew
xor
xchg
cmovne
jecxz
aad
xor
cmpsl
ret
stos
jmp
sub
aam
mov
out
hlt
outsl
popf
mov
icebp
gs
negl
mov
cmp
popf
sbb
jmp
xor
mov
stos
clc
mov
jbe
les
ja
and
pop
in
pop
ljmp
push
cmp
and
mov
cli
cmp
fsubl
fimull
cmp
fwait
jbe
jnp
loope
incb
jbe
inc
sbb
cs
rol
insb
push
cmpsb
test
stos
and
push
mov
gs
adc
sbb
pusha
loop
mov
popf
or
xchg
ficoml
leave
and
jge
lock
das
mov
sub
sub
popl
adc
aad
lcall
jp
mov
mov
jg
sbb
cmp
and
inc
pusha
stos
xchg
arpl
cmp
lods
imul
and
mov
push
test
cwtl
sub
dec
shrl
je
jp
pop
mov
jg
testb
rcrl
out
call
fwait
xchg
arpl
subb
sub
pop
cmp
sbb
sbb
neg
lret
je
outsl
ja
pushf
test
push
add
xchg
into
and
enter
jae
push
cmc
movsb
notb
shl
cmpsl
mov
jge
lea
jge
pop
cmc
inc
xlat
cwtl
ffree
mov
stc
push
mov
push
mov
cltd
in
inc
sbb
add
in
mov
dec
scas
mov
adcl
in
sub
shlb
jmp
pcmpgtb
popf
and
jns
dec
enter
test
inc
into
bound
jns
dec
sub
jno
inc
rcr
mov
and
push
cltd
mov
jl
in
adc
adc
add
in
inc
adc
mov
add
movsl
push
xchg
jg
cld
das
mov
enter
pop
mov
hlt
inc
fbstp
xchg
and
int
mov
daa
sbb
fistpl
add
jne
add
dec
mov
inc
xchg
outsl
adc
mov
popf
std
jp
push
in
mov
mov
mov
push
insl
jmp
mov
adc
xchg
xchg
repnz
mov
mov
xchg
fisubs
lods
and
inc
add
cs
adc
jg
xchg
pop
mov
pop
stc
jecxz
ret
in
and
xor
cltd
stos
xchg
aam
mov
cmp
pop
rorb
push
dec
push
ljmp
adc
js
cltd
inc
shlb
mov
push
inc
inc
mov
in
lret
dec
lahf
sub
gs
mov
mov
jns
push
xor
xchg
mov
inc
les
jg
inc
cmp
pop
fucomi
sbb
mov
enter
in
out
mov
aas
push
in
pop
mov
xor
cli
int3
push
stos
xchg
jge
rorb
cmpsl
and
into
stos
fldl
incb
inc
shrl
sbb
jb
and
jae
aad
mov
loop
gs
dec
fwait
in
mov
mov
fstpt
in
add
mov
jl
stc
pusha
in
fwait
je
pop
sbb
pop
pop
xchg
dec
int
js
into
pushf
fsubl
push
les
shlb
jle
repnz
lret
les
ds
xchg
jge
sbb
inc
fsubrl
ss
cmpsb
xor
sbb
pop
int3
xor
pop
xor
jno
addr16
push
sbb
imul
ret
mulb
or
pop
mov
mov
adc
ja
sbb
xchg
jns
pop
dec
jns
sahf
mov
xchg
xlat
enter
adc
shrb
lret
cmpsb
int
ds
ror
pushf
dec
push
mov
sub
jmp
dec
shr
dec
push
add
ss
aad
xor
mov
aas
lods
jg
xchg
fstpt
mov
mov
insl
push
adc
loopne
jmp
xor
dec
not
and
lret
xlat
sbb
dec
mov
mov
mov
in
dec
sub
jmp
dec
daa
mov
mov
std
or
inc
push
movsb
adc
xchg
pop
jmp
push
push
xchg
push
jle
imul
loopne
out
add
jns
dec
fwait
sbb
test
pop
inc
mov
notl
loop
mov
jg
mov
push
es
jmp
sub
mov
or
inc
mov
mov
lds
dec
jg
jecxz
mov
xor
faddp
mov
outsb
dec
mov
imul
mov
ds
inc
push
mov
push
rolb
push
popa
insl
or
lock
std
cltd
cmpsb
inc
push
or
mov
sbb
sbb
inc
bnd
sbb
push
insb
icebp
cmpb
lock
dec
movsl
pop
fnstsw
mov
lock
mov
pusha
mulb
pop
mov
hlt
xchg
mov
ror
mov
xchg
xchg
dec
rorl
pop
loop
sub
xchg
and
sbb
repnz
je
sub
push
adc
inc
sub
fcmovbe
xor
jp
call
nop
sub
add
stc
imull
xchg
jmp
add
shlb
pop
aas
adc
cmpsb
pop
test
inc
fnstcw
imul
or
jecxz
xchg
lahf
mov
out
push
jp
push
dec
push
pusha
fwait
push
mov
mov
push
sub
lds
cli
mov
sbb
mov
mov
or
mov
and
add
mov
testl
sbb
addr16
mov
jb
and
pop
out
mov
das
push
faddl
push
xchg
out
out
mov
pushf
cmpsl
adc
add
cmc
lock
push
mov
push
movsb
dec
mov
ret
ret
fbld
and
mov
test
mov
rcrl
pop
inc
push
test
cmp
and
leave
std
adc
xchg
into
dec
fwait
jno
out
push
leave
push
xor
fnsave
xchg
imul
cmc
rcr
inc
shrb
and
sub
jl
or
dec
jmp
test
dec
lds
or
and
pop
dec
out
loop
or
pop
push
push
mov
inc
push
dec
mov
lods
add
popa
mov
adc
lret
sub
in
not
mov
mov
push
add
push
jecxz
xchg
jp
dec
sbb
int
cmp
jae
or
shl
mov
outsb
cmpsb
and
lods
shlb
xor
jle
and
push
mov
dec
ret
jae
gs
add
int
roll
insb
pop
bound
jl
xor
push
inc
mov
jb
fwait
cmp
shlb
fwait
jp
inc
aam
mov
jecxz
and
adcb
enter
sbb
outsb
cmp
sbb
dec
jb
or
sbb
call
inc
sub
inc
cmp
adc
fbstp
push
test
stc
cmp
ss
das
dec
jbe
loope
pushf
fcmovb
xchg
inc
or
mov
jg
push
cmp
bound
sarb
incb
or
rcr
popf
cli
cltd
xor
xchg
ficoms
call
or
mov
out
xchg
je
cmovb
mov
ljmp
repnz
out
push
lds
das
xchg
mov
xchg
mov
jecxz
mov
leave
dec
jmp
movsl
inc
js
frstor
outsl
and
pushf
stc
scas
inc
ret
push
ret
leave
xor
xor
fbstp
sbb
daa
mov
js
dec
jo
push
or
js
sub
sbb
js
mov
shlb
fwait
or
stos
adcb
dec
pop
push
scas
sbb
mov
and
push
data16
adc
xor
dec
clc
jne
mov
and
cwtl
mov
cmp
or
or
fcmove
adc
and
scas
jecxz
loope
lds
and
test
dec
jp
sbb
clc
push
testb
scas
xor
hlt
cmp
inc
sub
cmp
and
pop
fnstsw
dec
scas
push
push
mov
dec
repz
xchg
mov
push
imul
cmc
fsubrl
cmc
popf
into
es
movsl
adc
aaa
fimull
and
mov
lock
jecxz
dec
or
adc
or
inc
seto
xor
je
push
dec
in
inc
fidivl
sti
sub
insb
cmc
cmpsl
imul
sub
mov
lods
jle
dec
test
and
sti
testl
adc
fbstp
mov
push
cmp
or
xor
xchg
repz
mov
jp
out
adc
cmp
inc
das
and
ret
jp
adcb
xchg
test
sahf
scas
ja
dec
xchg
dec
adc
jae
or
xorl
sbb
push
mov
pop
inc
sub
add
clc
lahf
roll
push
mov
lea
push
orb
and
and
xchg
xor
add
cmp
sbb
mulb
ljmp
xchg
rorb
mov
rcrb
sarb
mov
cmpsl
jecxz
and
cmp
dec
aam
mov
or
jge
jmp
sub
ja
dec
outsl
xlat
sbb
inc
inc
das
xorl
gs
inc
fwait
inc
clc
jecxz
out
cs
mov
scas
pop
dec
push
push
iret
arpl
inc
mov
mov
lret
jb
in
sbb
sub
or
es
sub
mov
movsl
jbe,pt
jmp
jecxz
in
clc
imul
and
in
sub
sbbl
sbb
sbb
loope
shlb
sbb
add
jge
cwtl
in
inc
mov
out
xchg
cmp
jle
dec
fucomi
mov
into
xchg
mov
add
push
or
daa
mov
rcrb
ret
jmp
out
adc
das
je
call
jmp
cmp
cltd
adc
jge
sti
push
lahf
lea
sti
xor
in
adc
push
cmpsb
in
add
and
cmp
mov
push
test
lods
andb
jmp
mov
adc
cmp
lds
pushf
or
icebp
lods
mov
dec
into
sbb
in
test
lcall
mov
fbld
enter
lock
stos
sbb
lea
mov
in
jmp
popa
jecxz
arpl
loop
mov
xchg
fs
xor
push
lock
push
adc
aaa
xchg
push
int
mov
inc
cs
pop
iret
enter
fmuls
sahf
jns
enter
into
cmpsl
pushf
sub
movsl
mov
push
sbb
xor
in
and
ljmp
pmulhw
pop
jle
in
xchg
cmpsb
mov
jnp
push
cld
cld
mov
cmp
jg
lods
mov
adc
push
adc
loop
pop
es
addl
push
mov
push
out
movsb
or
adc
inc
cld
repz
push
out
xchg
inc
mov
repz
mov
xor
cmpsl
add
mov
push
insl
test
dec
mov
xchg
iret
mov
mov
mov
xchg
mov
rorl
pop
clc
jmp
adc
mov
inc
loop
mov
mov
aaa
cli
mov
mov
sub
out
or
faddl
cmp
leave
loopne
sub
or
sub
mov
es
xor
mov
pop
and
jecxz
lea
cwtl
ret
jne
adc
push
mov
push
sub
mov
pop
xchg
and
call
lret
movsb
jge
in
mov
fwait
xchg
sub
lods
iret
mov
lret
sbb
int
js
mov
dec
arpl
mov
push
imul
pop
fs
jb
frstor
adc
and
push
lret
shl
ret
pop
clc
pop
iret
adc
push
aam
stos
cmp
pop
movlps
cltd
inc
and
fnstsw
pop
inc
jmp
xchg
out
jmp
jae
xor
sub
inc
pop
jne
push
push
movsl
into
fldt
xchg
loope
dec
mov
movsb
mov
aad
mov
xor
sub
out
dec
add
les
test
inc
hlt
cmp
mov
fisubrs
cmp
pop
pop
add
lcall
adc
inc
filds
sbb
mov
mov
xor
adc
xor
push
or
lds
in
into
push
mov
popa
adc
dec
jae
out
movsb
daa
aaa
push
push
lret
lret
mov
dec
fdiv
adc
pop
mov
sbb
outsl
je
jne
aam
test
mov
dec
xchg
outsl
aam
adc
push
inc
leave
cmp
fidivrl
cld
repnz
icebp
cmp
adc
test
inc
pop
xchg
adc
mov
cmp
gs
push
repz
push
jecxz
repz
insl
scas
scas
inc
jmp
sub
imul
xor
push
cld
cmpsl
lods
cmpsb
cmp
icebp
popf
bound
or
mov
mov
cmp
fisubrl
fwait
jno
pop
lret
sub
or
call
add
mov
xchg
sarl
sub
inc
mov
xor
mov
nop
mov
das
mul
fidivrl
inc
imul
xor
push
in
lea
shlb
mov
aam
ds
mov
rcr
adc
les
push
stc
test
les
sbb
dec
test
adc
int3
shl
repnz
lods
push
add
push
daa
cmp
fldenv
or
cltd
in
fcompl
ror
int
adc
neg
addr16
iret
add
xchg
jb
xchg
and
shl
xor
in
sub
push
pop
aas
add
jl
add
add
cmpsb
mov
push
dec
fwait
lea
mov
jmp
sub
dec
push
or
add
sbb
out
pop
call
pop
adc
sub
outsl
adc
shlb
push
fs
mov
std
pop
adc
jno
sub
and
jns
mov
in
xchg
hlt
push
sbb
cmc
cmp
xor
stos
mov
sbb
into
adc
lret
xor
or
adc
dec
ret
sbb
mov
or
sbbb
out
ficoms
mov
shrb
pop
lock
mov
in
mov
in
enter
sub
jle
pop
outsb
or
lock
xchg
sti
cld
adc
cmpsl
in
das
bound
mov
pop
popa
push
jbe
mov
jae
mov
jo
xor
cmp
mov
jmp
add
adc
popf
jle
pop
js
jae
inc
pop
ret
lods
sahf
and
lahf
mull
sub
adc
mov
das
jl
dec
sbb
or
cld
cld
scas
mov
xchg
add
movsb
mov
pop
fmuls
sub
loope
sub
push
pop
clc
and
lea
jl
xor
roll
or
cmp
inc
in
pop
les
dec
inc
sbb
xchg
or
push
mov
push
std
inc
scas
lods
in
cmp
arpl
and
add
sbb
cmpsb
scas
cli
mov
sub
into
sti
add
pop
mov
icebp
cmp
loopne
or
int3
lret
int3
call
outsb
xlat
cmp
or
inc
lock
cmp
ja
das
fcom
ljmp
test
inc
mov
jmp
and
cli
mov
cmpsl
push
mov
mov
int
mov
arpl
jge
das
sub
xor
pop
sbb
cmp
xor
es
adc
mov
insb
loopne
mov
out
mov
sub
je
scas
stos
aad
test
xlat
and
jmp
pop
dec
push
add
andl
imul
jnp
icebp
aaa
adc
out
sub
mov
jnp
ja
test
nop
mov
pop
mov
ret
aad
add
cli
and
and
dec
fcmovnu
or
repnz
mov
div
adc
mov
scas
push
xor
pop
dec
popf
cmpsb
repnz
inc
dec
mov
into
sbb
or
mov
mov
xor
or
jl
or
sarb
pop
std
lods
adcl
aad
inc
cwtl
inc
repz
ja
add
stos
mov
mov
aad
addl
sbb
aaa
enter
mov
or
sbb
jmp
ret
mov
addr16
lods
inc
mov
jno
mov
das
iret
flds
adc
addl
sbb
push
es
lds
outsl
cs
pusha
push
xchg
cld
xchg
jl
lcall
pop
sbb
dec
mov
mov
mov
mov
or
inc
roll
dec
jge
dec
push
cmp
clc
scas
data16
or
pop
push
insl
sub
hlt
in
add
xor
adc
test
mov
xor
push
inc
mov
popa
push
movsl
mov
shl
mov
mov
jecxz
jg
mov
xchg
inc
repnz
jbe
rorl
dec
sti
sub
sub
clc
mov
les
bound
fwait
mov
lods
lea
add
push
and
je
sbb
sarb
cli
fildll
mov
and
lcall
cmp
fldl
add
stc
mov
mov
fisubs
stos
lods
mov
in
xlat
dec
pop
test
pushf
loop
inc
sub
iret
mov
shrb
pop
lahf
push
xor
push
ljmp
lcall
ret
mov
or
cwtl
lret
dec
sti
mov
test
inc
sahf
xor
fisttpll
orl
jle
gs
in
xchg
pop
sbb
and
rorl
cmp
sbb
in
pop
push
xchg
cltd
cs
dec
xor
imul
or
cli
test
mov
mov
out
lods
cmpsl
sbb
add
xor
add
cmc
add
fnstenv
jns
or
add
call
rcr
add
shr
jecxz
into
mov
or
insl
cmp
js
xchg
dec
cld
imul
jno
jp
int3
pop
xchg
push
mov
mov
cmpsl
sbb
pop
push
scas
adc
sbb
sbb
add
push
andl
imul
rorb
movsl
inc
gs
int3
imul
test
add
xor
mov
mov
mov
mov
cmp
xorb
push
aam
push
es
and
loope
int
lock
test
sbbb
push
sub
inc
push
mov
je
cltd
push
data16
shrb
pop
mov
out
add
jl
push
xchg
adc
in
fwait
movsb
aam
jg
pushl
add
fcmovb
add
test
pop
push
mov
mov
fsubs
cmp
les
xlat
cwtl
jp
fwait
jmp
pop
addr16
sbb
dec
shrb
jmp
bound
sahf
lahf
in
stos
icebp
pop
sahf
mov
hlt
dec
in
das
pushf
into
lock
or
dec
pop
mov
pop
addr16
adc
pusha
test
lret
sbb
aad
int
aas
jns
in
adc
into
arpl
shl
xchg
lds
lock
mov
out
sbb
test
dec
pop
hlt
fcoml
xor
clc
iret
clc
adc
cmp
repnz
jp
inc
clc
js
adc
and
lcall
jecxz
jo
jns
test
sbb
fcompl
imul
rcrb
jnp
ret
leave
push
add
movsl
mov
insb
xor
imul
cltd
sbb
adc
pusha
jne
scas
lea
and
and
mov
jae
cmp
into
outsl
stos
inc
push
mov
out
imul
mov
shrb
pop
xchg
mov
push
inc
xor
cmp
sbb
mov
pop
clc
jbe
xchg
inc
jge
mov
push
adc
adc
addb
pop
shll
fsubl
in
lahf
shll
dec
and
sbb
sbb
jge
xchg
push
cmp
or
add
das
jns
adc
xor
mov
dec
mov
mov
pop
push
test
setl
push
out
sub
pusha
sub
sub
popa
test
imul
inc
js
xchg
int
pop
into
add
mov
js
mov
cs
push
jl
pop
sbb
and
mov
xchg
add
pop
mov
fiadds
sahf
sub
add
aam
push
std
pop
or
mov
dec
inc
push
loop
dec
push
xchg
clc
mov
fmull
sbb
mov
loope
js
lret
fists
outsl
push
adc
cmpsl
push
mov
cs
fstpt
pop
arpl
jae
fsubrp
inc
pop
xor
mov
cld
sbb
jnp
adc
cmp
scas
out
fistpll
nop
std
ret
insb
jge
addb
or
das
ret
mov
mov
pop
mov
ljmp
sub
popa
movsb
sub
lahf
jno
mov
cmp
iret
add
push
dec
sarb
out
mov
jae
dec
mov
mov
jle
cltd
lcall
aam
add
mov
sti
pop
popl
mov
pop
std
push
mov
mov
addr16
mov
xor
popa
das
mov
xchg
aas
mov
and
popf
push
pop
push
push
enter
popa
push
cmc
inc
and
mov
stos
xchg
xor
out
xchg
mov
decl
cltd
div
into
cmp
testb
push
dec
pusha
fsts
mov
jl
movsl
cmpsl
scas
hlt
or
outsl
rcl
sbb
stos
mov
lahf
movsl
aad
ret
lds
xchg
sarl
dec
and
dec
cmc
mov
pop
push
dec
ljmp
xor
addr16
adc
cmp
imul
pop
jge
dec
xor
and
xor
cmp
insb
cwtl
in
loope
mov
jo
mov
adc
pop
or
dec
nop
fs
loopne
adc
push
out
mov
pusha
dec
dec
adc
or
adc
push
adc
pop
sti
scas
sbb
xchg
adc
jecxz
mov
pop
sub
lret
ficompl
lds
xchg
xor
mov
jle
xor
mov
xor
dec
movsb
and
sub
push
ds
push
hlt
call
imul
iret
adc
mov
ljmp
inc
test
stos
lods
clc
add
dec
lret
cwtl
fwait
mov
xchg
int3
add
out
pop
data16
sbb
test
data16
test
push
mov
xchg
iret
lea
pop
push
adc
negb
or
fidivrs
push
push
daa
std
inc
ret
xchg
inc
ljmp
jnp
out
xor
sbbb
testl
sub
ret
lret
aas
enter
adc
stos
xor
xchg
pop
mov
pop
outsb
test
sbb
xchg
cmp
sbb
push
icebp
mov
add
ljmp
sbb
sub
es
nop
jns
cmp
into
and
pushf
xorb
pop
xor
rorl
data16
xor
add
rcl
fistpl
lret
mov
jp
mov
popa
decl
or
es
jmp
sbb
add
stc
inc
adc
movsb
lea
add
add
xchg
mov
into
stos
sbb
movsl
pop
adc
jecxz
mov
fnstcw
cltd
push
test
cwtl
fld
int
pop
push
sbb
aaa
pop
or
pop
pop
pop
popa
jae
dec
adc
lret
les
repnz
fs
mov
mov
jno
mov
fisttpll
sbb
adc
lret
pslld
adc
add
mov
fisttpl
xchg
inc
lock
jne
jmp
xchg
lock
pushl
in
mov
daa
or
sbb
loop
loope
push
lods
inc
pop
out
mov
fists
sub
mov
adcl
and
xor
fs
lret
mov
out
mov
icebp
push
movsb
cld
fldenv
pop
add
jne
iret
cmp
sub
in
mov
and
push
mov
call
aas
push
xlat
sub
cltd
adc
mov
loopne
popl
jmp
push
cmpl
ret
inc
sti
jmp
adc
and
loopne
popl
sbb
and
cmp
decl
sti
mov
dec
mov
pop
cmpsb
fisttps
push
push
andl
aaa
cmc
jle
dec
ljmp
movsl
mov
sti
loop
cmc
xor
or
add
push
rorb
pushf
pop
mov
out
fidivs
in
adc
cmp
movsl
int3
xor
dec
xor
test
push
shr
movsb
cmc
data16
into
and
into
pop
lcall
inc
xor
int3
insl
in
adc
decl
aad
stos
xchg
js
adc
sub
dec
std
lcall
adc
dec
dec
lea
pop
sub
sub
lret
mov
and
adc
into
add
mov
shrb
js
out
push
pop
fdivr
sbb
addb
bound
fisttpl
inc
dec
mov
movsb
adc
bound
je
notb
mov
xor
sub
xchg
sub
push
incl
popa
dec
sbb
fimull
call
sub
mov
jp
cs
in
mov
xchg
lahf
out
sti
or
or
call
dec
out
mov
pusha
call
cmp
mov
pop
pop
ret
outsb
bound
daa
enter
clc
cwtl
mov
aad
jne
inc
mov
test
int
push
inc
xor
dec
leave
shll
xchg
add
in
lahf
int
xchg
xchg
loope
movsl
mov
mov
lret
loopne
scas
les
pop
sub
push
aad
fwait
dec
mov
in
scas
ret
push
lahf
jo
test
push
adc
repz
lea
and
in
and
fisttps
outsb
daa
cmp
addl
rorl
cld
or
test
imul
lea
sbb
mov
clc
imul
cmp
push
dec
mov
cmc
adc
sub
orl
pusha
inc
outsb
lods
jno
repz
pushf
cmp
test
push
shrb
cmp
adc
dec
in
mov
lret
cmpb
sbb
sbb
mov
es
push
dec
nop
leave
inc
xor
dec
mov
test
and
idivb
daa
or
or
xor
shll
jl
movsb
std
icebp
pushf
and
inc
xchg
outsl
call
dec
push
pushl
mov
cmp
outsl
mov
add
lods
div
push
cmpsb
out
pop
xchg
cld
and
aam
inc
lahf
xor
or
stc
adc
out
xchg
adc
int
loope
ljmp
mov
or
xor
rorb
test
sbb
xchg
test
xchg
sub
es
lret
mov
jecxz
das
xor
sub
push
xchg
ja
fdiv
ss
cld
jno
add
mov
int
lcall
pusha
and
outsb
popf
xor
iret
and
adc
je
pop
jne
adc
mov
pop
push
and
aaa
int
inc
movsl
icebp
loope
jns
leave
or
hlt
rcll
or
rcrl
pop
push
pop
xlat
dec
jae
dec
mov
or
xlat
mov
cs
or
or
or
ljmp
push
inc
cltd
mov
ds
movsb
hlt
adc
xor
loop
cmp
cltd
imul
outsb
mov
and
cld
jmp
mov
lret
arpl
xorb
jp
sbb
enter
mov
xchg
inc
hlt
in
xor
dec
jb
jo
decl
ljmp
movsb
sbb
je
cmpb
lock
or
push
pop
push
and
xchg
pop
test
and
adc
mov
xor
sbb
incb
xchg
lock
bnd
shr
cmp
das
pushf
inc
mov
int3
push
sub
fs
push
pusha
mov
mov
stc
dec
mov
jg
dec
fistpl
cmp
push
aaa
pop
mov
mov
std
fstl
pop
scas
lcall
dec
outsb
push
mov
pop
cwtl
inc
fwait
dec
adc
and
rorl
push
push
mov
bnd
adcl
lods
sub
jb
mov
jo
btc
icebp
jg
shll
mov
jl
aam
in
mov
mov
scas
inc
rol
jmp
lods
popf
cmp
out
es
adc
push
push
loope
and
dec
roll
push
jmp
dec
dec
cwtl
mov
out
xor
mov
pop
cltd
xchg
dec
je
pop
iret
pop
call
scas
and
out
fbstp
sub
jecxz
test
pushf
jmp
pop
pusha
enter
gs
cld
dec
push
sub
xchg
cmp
adc
mov
sub
push
mov
test
lds
shlb
cs
jbe
out
cmc
xor
dec
sub
pop
mov
call
inc
jno
pop
mov
xchg
inc
adc
dec
or
push
imul
push
jl
add
jo
lcall
loop
jne
pop
daa
in
nop
jmp
mov
in
mov
divb
lds
outsb
into
aas
insb
pop
push
inc
jecxz
leave
mov
or
sarb
mov
push
mov
shl
je
or
mov
enter
insl
add
mov
iret
add
in
cmp
xor
pop
and
iret
jbe
mov
inc
cmp
shl
test
test
ret
int
and
add
nop
insl
mov
mov
cld
adc
cwtl
fbld
push
into
add
push
sahf
cmp
int3
and
imul
jle
adc
sti
inc
or
leave
mov
jne
pop
mov
inc
push
push
mov
jb
mov
testb
mov
dec
pop
push
cmc
mov
mov
jbe
sub
mov
cmp
xor
xchg
push
fldl2t
mov
or
inc
or
push
rcrl
test
sub
cmp
std
cmp
aad
cmp
lret
pushf
xor
mov
mov
iret
adc
call
push
in
lahf
aad
push
jbe
rcrb
push
test
dec
sti
dec
sub
es
outsb
dec
cmp
pop
movsl
mov
mov
adc
fildl
pop
shll
movsl
mov
aad
or
and
mov
mov
ret
in
insb
cmpsb
fsubrs
sbb
mov
jl
mov
mov
jl
fadds
push
sarl
in
xor
fwait
lds
aad
xchg
jo
dec
xchg
cmp
pop
mov
in
sahf
call
mov
sbb
testb
addl
cli
inc
mov
test
inc
movsl
repz
in
lods
cmp
sub
jns
fstpl
test
inc
ficomps
insl
cs
in
sahf
mov
and
or
sahf
repnz
pop
leave
cld
mov
mov
dec
outsb
mov
inc
sub
and
inc
dec
add
cmpsb
mov
fsts
mov
notl
int
into
or
inc
std
ret
xchg
pop
ficoml
fmuls
orl
mov
lock
jbe
inc
mov
loopne
imul
add
daa
mov
mov
mov
iret
lahf
popa
test
stc
arpl
jp
rorb
push
xchg
dec
jle
push
lret
enter
sub
xchg
lcall
pop
add
xchg
clc
xorl
je
mov
and
pop
nop
js
sbb
push
bound
in
es
test
xor
mov
xor
xor
cli
fsubl
cmc
push
mov
ret
rorb
or
adcl
mov
andb
mov
mov
cmpl
xchg
inc
and
adc
adc
fbstp
xor
outsb
xchg
mov
gs
mov
sub
and
sub
push
adcb
cmc
and
minps
mov
xchg
xchg
cmp
sarb
roll
clc
inc
lock
jg
and
cld
bound
scas
sbb
push
aas
lods
lds
push
jmp
dec
cmpsb
fsubl
sahf
pop
rorl
loopne
mov
jne
scas
sti
cld
rolb
inc
stos
mov
jnp
shl
sbb
xchg
xchg
push
nop
push
inc
sub
dec
cld
cmp
repz
pop
xchg
cmp
push
adc
das
mov
pop
sbb
rol
adc
mov
lds
pushf
inc
fsubp
icebp
mov
dec
leave
test
add
push
cmp
stos
aas
sbb
add
stc
xchg
js
sub
daa
pop
rcrb
lcall
xor
sub
adc
cmp
push
shrl
jb
jle
sub
leave
fwait
out
or
rolb
fdivr
imul
pop
mov
shrl
pop
aaa
insb
or
mov
jg
add
jb
aaa
arpl
fldl
movsl
test
inc
mov
sub
insb
out
inc
leave
pusha
aad
cs
adc
mov
inc
mov
mov
sub
sti
stos
mov
out
jmp
pop
push
pop
sub
xchg
cltd
popf
mov
popf
rcrl
inc
cltd
fnstsw
adc
pop
shll
scas
sbb
cmp
xchg
and
cmp
lret
fdivr
cmpsb
aad
push
daa
xlat
pop
cli
sub
clc
ds
xchg
and
fildll
adc
and
js
pop
jo
lahf
pop
aam
jmp
popf
lret
stos
ss
or
push
mov
fmul
ja
sub
lock
pop
xchg
mov
or
rcl
test
jne
pop
ljmp
cmc
lods
add
dec
inc
imul
je
ss
sub
push
cld
leave
mov
sbb
in
icebp
outsl
mov
mov
xor
pop
mov
out
xchg
xlat
push
xchg
dec
lods
movl
cmp
sub
mov
mov
adc
push
lret
popf
iret
in
das
add
cmp
int
mov
es
push
mov
mov
enter
push
lret
jg
daa
mov
sbb
mov
add
jg
hlt
cli
pop
push
lds
dec
cmp
shr
xor
mov
adc
xchg
mov
jnp
mov
call
inc
int
mov
push
fs
in
les
ror
push
xchg
push
inc
and
xchg
or
inc
test
in
test
std
cltd
or
push
fstpl
divl
mov
xor
push
lods
and
lret
dec
test
push
arpl
xchg
or
pop
pop
xchg
xlat
aad
adc
mov
test
push
inc
mov
and
xchg
xlat
push
and
pop
mov
stos
dec
jo
pop
js
jb
pop
scas
jnp
aaa
pop
cmpsb
xor
push
sbb
sahf
push
mov
fs
push
xchg
add
jae
imull
shl
lret
icebp
pop
lods
pop
mov
lret
jbe
je
aas
outsb
pop
leave
jecxz
fdivs
loop
cmp
push
cmpsb
incb
aad
idiv
int
mov
push
cwtl
popf
dec
inc
mov
xor
mov
test
cmpsb
int
xchg
sub
sbb
lea
cmc
adc
dec
pusha
xor
sub
test
push
aaa
xchg
cmp
push
test
push
cmp
das
sbb
fucomi
dec
daa
mov
inc
clc
cld
and
fadd
mov
xchg
cmp
dec
inc
loopne
sbb
loope
clc
push
pop
rolb
sbb
xchg
subb
rorb
repz
shrl
or
iret
or
adc
test
orl
push
xor
sub
fucomi
stc
pop
in
in
movsl
dec
fwait
sub
roll
dec
push
decb
fcmovb
cmp
bswap
xor
incl
xor
imul
sbb
add
mov
sub
jecxz
daa
sub
inc
jo
inc
outsb
int
stos
xor
ljmp
mov
aam
mov
ss
ss
add
fsubl
pop
out
cmp
imul
shll
arpl
pusha
ds
cmpl
jecxz
push
cmp
push
mov
insb
fistpll
test
adc
sbb
and
cmp
and
test
inc
xlat
dec
pop
repnz
dec
ret
aas
mov
stc
add
push
aad
icebp
add
and
cmp
shrb
test
xor
inc
mov
jae
dec
sub
mov
xor
pcmpeqb
ficoml
call
icebp
icebp
adc
jge
in
add
push
jge
lods
xchg
pusha
stos
lods
or
je
out
cld
and
adc
xor
add
push
outsb
dec
pop
push
mov
ret
mov
or
lds
in
int
mov
outsb
and
xor
xor
inc
iret
inc
int
or
arpl
dec
mov
bound
or
jne
lods
push
lea
in
mov
inc
mov
add
xchg
cmp
add
jecxz
and
xor
in
popa
shlb
testl
jmp
push
les
push
fcmovbe
lahf
mov
push
mov
inc
negl
int3
fstp
in
or
sbb
sub
pop
mov
jmp
call
cmp
xchg
or
push
lret
add
mov
cmp
sub
mov
mov
cwtl
in
cmp
jl
in
fwait
cmc
or
mov
fwait
mov
stos
push
ja
cwtl
push
ret
fs
repnz
xchg
push
in
test
push
add
add
adc
push
fsubl
aaa
movsb
lods
dec
xor
sub
and
imul
repz
das
mov
aas
jns
sub
cmp
ret
test
frstor
xchg
rcl
jb
push
mov
adc
xor
gs
lret
arpl
lods
sbb
add
pop
or
xor
xor
stc
jbe
in
dec
sbb
mull
sbb
addr16
out
sub
or
std
xchg
loopne
nop
dec
and
pop
shll
jo
loope
or
test
mov
mov
dec
test
bound
and
add
and
push
cmpsb
pop
insb
jo
filds
mov
leave
inc
ljmp
xchg
cltd
adc
mov
pop
ja
enter
mov
push
lods
mov
mov
push
cmc
int
fmul
ljmp
rorl
add
icebp
in
fiaddl
jmp
dec
rcrb
inc
mov
data16
in
adc
inc
clc
cld
or
ret
faddl
xor
xchg
inc
movsl
adc
stos
xor
dec
scas
push
je
cmp
jecxz
ljmp
test
or
repnz
or
adc
push
cmp
and
xor
inc
sbb
test
mov
int3
imul
dec
add
dec
push
push
aas
ret
or
scas
xchg
imul
jae
dec
repz
mov
sahf
push
frstor
bound
pop
push
and
bound
dec
adc
lret
js
cld
adc
mov
sub
sub
je
inc
and
mov
call
repz
mov
push
inc
mov
xchg
and
mov
aas
dec
jno
insb
stc
mov
mov
add
push
outsb
ret
push
enter
lcall
lret
pop
or
sbb
push
rcr
push
pop
in
cmp
cmpsl
dec
mov
adc
je
xlat
inc
sarb
shlb
inc
lcall
gs
push
jmp
dec
pop
cmpsl
loop
jmp
and
xor
test
ja
movsl
push
test
in
insl
sub
jl
dec
and
sti
adcb
pop
sbbb
loop
jge
push
into
jbe
icebp
leave
xlat
cli
rcr
push
or
or
nop
mov
je
lcall
notb
in
outsl
xchg
xlat
jne
xchg
ljmp
jb
das
mov
imul
dec
xchg
xor
xorl
imul
pop
rcrl
addb
mov
fisubl
mov
cmpsb
aaa
cs
dec
mov
add
test
push
cmpsl
pusha
insb
stos
out
push
jp
pop
in
incb
fimull
xchg
add
and
bnd
and
xchg
adc
fstpl
or
repz
push
or
lea
mov
dec
or
nop
push
addl
mov
scas
dec
lock
or
xchg
xchg
das
pop
xchg
pop
mov
mov
mov
sub
stc
push
xorl
mov
pop
aam
cmp
xor
cmp
cltd
mov
enter
vorpd
mov
aad
jno
jne
nop
fbstp
mov
nop
pop
mov
inc
daa
adc
icebp
addr16
test
or
aas
divl
jle
lahf
jbe
adc
push
sbb
rcll
sub
mov
adc
cmp
mov
hlt
insl
xchg
fwait
cli
cmpsl
xchg
add
in
push
jb
jge
push
dec
pop
int
inc
ss
mov
pop
mov
cltd
inc
imul
push
adc
cltd
imul
jnp
xor
mov
inc
pushf
rcll
jbe
or
jne
je
xchg
sbb
lahf
pop
rcrl
cmp
xchg
insb
jmp
ss
and
shl
outsb
push
sbb
mov
xchg
shll
push
inc
cmp
iret
xchg
and
mov
push
dec
popa
push
inc
jne
aam
push
dec
fcomps
cmp
sub
inc
cmpsl
push
jmp
mov
add
xchg
jl
jnp
pop
pop
loope
and
mov
jl
xor
push
sub
push
addr16
sub
adc
mov
iret
ds
lret
fldenv
mov
jbe
cmp
pop
lahf
lods
pop
push
test
lret
rcrl
mov
cltd
pop
insl
fldcw
hlt
fwait
push
mov
pushf
push
fbld
pop
jae
or
fcmovu
push
sti
inc
cmp
add
lods
mov
xor
and
out
lahf
mov
stc
mov
lahf
sub
xchg
hlt
xor
add
mov
sahf
pop
test
add
xor
pop
ds
lret
into
imul
out
dec
inc
sub
insb
jp
mov
clc
imul
clc
pusha
inc
jae
cmp
sub
inc
adc
loop
push
decl
jb
push
pop
mov
test
cltd
cli
or
xchg
clc
mov
cmp
dec
js
add
mov
out
mov
or
sarw
testl
loopne
sub
ret
ret
or
xor
aas
push
mulb
mov
ja
in
pop
pop
dec
lret
jge
divl
and
lret
or
ljmp
pop
sbb
bound
cmp
xchg
or
add
aas
jle
inc
cmpsb
nop
fucomi
stc
xchg
pop
add
dec
sbb
aam
out
ja
outsb
gs
push
mov
and
lcall
mov
add
xchg
fisubrs
xchg
xchg
jnp
js
mov
sbb
jl
xor
test
sub
outsb
adc
loope
cmp
mov
xor
std
or
jbe
enter
fs
out
scas
jle
inc
addl
stc
lods
aaa
popf
push
in
pop
add
cmc
and
stos
je
dec
rolb
enter
data16
out
add
push
rcr
xchg
lea
fs
cmp
xchg
outsl
jae
push
sub
shl
stos
cmp
push
test
fcompl
sub
negl
dec
xchg
loop
mov
mov
adc
inc
cmc
ljmp
and
out
mov
out
adc
ror
cmp
jle
scas
lahf
dec
push
popa
cltd
aaa
in
addr16
adc
mov
mov
and
sarb
icebp
sub
sbb
in
cs
push
xchg
adc
mov
xor
call
pop
das
loope
lock
stc
jb
pop
or
loop
or
cmp
in
add
jg
pop
je
or
jns
mov
out
sarb
and
shlb
adc
int3
cmp
jns
mov
fsubs
sub
movsl
push
pop
fistpl
xor
and
push
or
push
mov
jbe
arpl
dec
cmpl
jmp
jmp
xlat
stos
sub
cmpsl
xchg
mov
inc
jbe
cmp
out
data16
loopne
ljmp
int
mov
repnz
dec
or
xchg
or
xor
pop
mov
cld
mov
cld
jle
mov
cmpl
xchg
xchg
push
push
enter
sti
rorl
shr
popa
fcmovbe
add
aam
call
or
stc
fsubl
dec
ljmp
adc
bound
repz
idivl
lock
ja
pop
loopne
mov
das
pop
ret
lea
xchg
sub
add
cmpsl
rclb
sti
mov
in
lret
mov
cmpsb
das
sahf
sbb
mov
in
out
nop
addr16
mov
xor
insb
push
sahf
adc
or
xchg
test
dec
xor
push
repnz
imul
adc
cs
das
in
mov
movsb
aad
or
inc
sbb
pop
push
lret
add
or
addr16
shll
outsl
cmp
jle
sbb
xor
jmp
fbstp
icebp
cld
push
mov
push
aas
fstps
mov
cmp
jle
xor
and
cmp
inc
xor
mov
pusha
xchg
fs
pop
fcomi
xchg
popf
lock
scas
xor
and
lret
fistpll
push
or
mov
addr16
mov
inc
push
sub
std
pop
jle
sbb
and
ja
ds
je
ss
jnp
scas
std
or
inc
loop
enter
fcompl
inc
xor
and
xor
push
clc
ficoms
fucomi
mov
ja
andb
push
mov
mov
mov
sbb
mov
loop
sbb
mov
aas
ja
es
push
and
pop
stos
pop
mov
xchg
mov
xchg
rcrl
insb
repnz
jg
ret
mov
sub
inc
out
arpl
in
jg
mov
sarb
jg
xor
mov
xchg
out
mov
cmp
aam
jp
pop
pop
dec
dec
shrb
scas
sub
sbb
mov
dec
cmp
push
addr16
jo
xchg
push
mov
add
out
pusha
dec
dec
dec
loopne
arpl
outsb
jg
clc
sub
cmp
inc
subl
push
ret
mov
shrb
mov
outsb
xor
test
rorb
mov
pop
mov
outsb
push
adc
sub
sub
xor
aam
fxtract
dec
push
jb
out
mov
pushf
sub
popf
xchg
outsb
and
dec
sbb
inc
lea
gs
pop
mov
fstps
xor
in
cmp
sub
movsb
jp
dec
or
call
in
sub
sbb
cmp
lahf
std
test
sbb
dec
mov
hlt
pop
add
imul
rcr
frstor
inc
sbb
ja
lcall
cmp
sbb
je
std
xchg
sbb
inc
dec
and
or
adc
bound
xchg
mov
inc
lea
xchg
in
lret
ss
loop
popa
sbb
int
pop
enter
das
xchg
and
scas
xchg
mov
mov
ret
dec
ret
xchg
pop
movsb
xorl
sub
xchg
cmovs
fcoml
xlat
xchg
imul
jne
das
inc
shll
test
sahf
or
gs
xlat
push
jg
into
js
fcomip
imul
mov
rcrl
mov
aas
mov
sahf
and
jecxz
cmp
pusha
fildl
mov
sub
cmp
pushf
fwait
nop
mov
pop
loopne
popf
jge
imulb
push
pop
cmpxchg
sub
push
ss
mov
cli
sub
pop
jl
push
jb
inc
mov
adc
xor
cmp
in
cmp
movsl
icebp
data16
sub
je
imul
cmp
sahf
fxtract
jns
push
pop
or
inc
fucomi
add
insb
xlat
mov
arpl
lods
or
ja
xlat
gs
mov
mov
xchg
nop
cmpsl
mov
jb
fstp
dec
jns
lods
pop
jmp
divl
repz
mov
fbstp
sbb
and
push
jbe
sbb
jno
adc
addr16
xchg
repnz
sbb
adc
test
push
jo
push
call
inc
dec
and
sbb
ljmp
ljmp
ljmp
push
stc
adc
mov
pop
mov
xor
repnz
fistpl
mov
cmp
pushf
popf
int
jne
add
adc
add
jbe
or
insb
push
mov
mov
mov
test
rorb
xchg
neg
add
hlt
aam
pop
outsl
mov
xchg
loop
cli
pop
dec
jno
xchg
lea
push
dec
mov
xchg
inc
mov
xlat
mov
dec
cmpsl
dec
jmp
shrb
add
sub
or
add
loopne
xor
mov
jge
inc
fistl
mov
xor
xor
lea
dec
aaa
xchg
mov
mov
jle
adc
cmp
ss
rclb
sbb
inc
outsl
or
and
out
cltd
inc
dec
roll
shrl
icebp
inc
out
sbb
xor
mov
out
mov
repz
adc
sub
jmp
pop
pop
mov
push
sbb
das
inc
jle
lret
mov
cmpsb
fdivs
movsb
xor
fistpll
jmp
xor
add
into
pop
cwtl
pop
jae
and
jge
scas
daa
divps
cld
jne
in
addl
or
cmp
adc
add
xor
xor
fmul
pusha
sub
and
xorb
mov
pop
mov
icebp
cmpsl
fs
fdivrs
mov
wrmsr
int
xchg
std
in
cld
mov
mov
xchg
mov
cmc
xchg
mov
les
fisubl
xchg
push
mov
mov
notl
repnz
loopne
ljmp
iret
adc
and
out
mov
push
clc
arpl
sbb
mov
imul
cmc
and
icebp
and
mov
push
fcompl
add
inc
inc
jb
and
ret
test
inc
lcall
stos
cmp
sub
mov
jae
push
push
xchg
push
stos
push
gs
movsb
stos
movsl
mov
repnz
pop
dec
inc
insl
gs
mov
sub
scas
bound
xor
stc
mov
mov
insl
inc
dec
jne
mov
mov
sbb
imulb
dec
inc
mov
pop
inc
cmpsl
outsb
push
cmc
pop
add
das
xor
lds
mov
xchg
into
mov
or
xchg
test
aaa
mov
inc
sub
roll
nop
sbb
lods
or
into
popf
cs
ret
ret
mov
jb
filds
mov
out
rol
mov
xchg
imul
stos
testb
xor
and
xor
iret
cmc
xor
outsb
ret
pop
fistpll
out
in
imul
sbb
lock
jle
mov
pop
or
sbb
in
pop
loope
lods
push
dec
jmp
stos
xchg
pop
faddl
cmp
jl
arpl
jmp
push
movsl
in
or
push
addl
ret
and
jmp
adc
inc
mov
leave
loopne
add
fucom
aad
or
or
cmpsb
repnz
iret
xchg
movsl
aas
addr16
pop
je
inc
mov
mov
cs
sub
pop
cmp
push
xor
push
icebp
ss
sbb
fistpll
cltd
rolb
int
xor
jmp
push
mov
pop
into
and
dec
aam
dec
xchg
ret
push
xchg
xor
pop
sarl
shl
icebp
out
inc
out
xchg
dec
dec
pop
sahf
fisubl
xchg
mov
repnz
into
cld
cmpsb
push
std
cli
movsb
lret
push
es
mov
adc
outsb
or
inc
insl
stc
ds
pushl
int3
mov
push
rcrl
mov
and
or
or
push
inc
ror
xor
rolb
out
jle
pop
aas
sbb
or
pop
cwtl
pop
dec
xchg
sahf
xor
aam
gs
mov
fwait
idiv
stos
xor
jp
and
mov
repz
and
inc
gs
sbb
or
ret
sar
sub
aam
mov
sahf
into
mov
mov
mov
pushf
add
sbb
push
or
sbb
push
clc
ret
call
add
mov
mov
lds
shrb
mov
jge
int
jbe
arpl
push
sbb
mov
xchg
test
movsb
mov
push
mov
in
inc
clc
cld
icebp
sbb
enter
lret
xchg
cli
stc
out
mov
xchg
enter
lods
ss
dec
lret
dec
ljmp
push
add
mov
mov
or
stos
cld
xchg
or
int
cwtl
into
lds
inc
ret
push
mov
lea
jbe
mov
push
and
push
xchg
les
scas
stc
je
lcall
inc
adc
scas
int
xchg
js
mov
adc
stc
ja
mov
hlt
mov
jecxz
and
ret
arpl
push
cmp
mov
enter
lock
ja
fidivs
test
les
mov
nop
sbb
xchg
cltd
aas
lock
push
enter
frstor
nop
mov
sbbl
fldpi
dec
popf
mov
mov
psrlq
scas
xor
xor
les
xor
fwait
mov
pushf
mov
xlat
jge
mov
cli
loopne
or
xor
scas
sub
xchg
mov
xor
fisubrl
arpl
in
std
es
push
aaa
mov
inc
pop
popa
ret
mov
and
mov
test
hlt
cmc
sbb
das
cli
stc
outsl
xor
pop
out
adc
jno
push
mov
aam
jnp
sti
and
rorl
pop
shrl
rorl
lcall
mov
clc
repz
and
in
sti
mov
lods
js
insl
sub
popa
enter
or
and
mov
mov
test
or
loopne
pop
sbb
cmp
and
pop
xchg
xchg
and
lods
test
test
out
and
add
pop
repz
pop
lods
in
fnsave
jns
ljmp
mov
test
lcall
jg
aam
cld
xchg
out
or
sub
minps
imul
lods
pop
xchg
jnp
in
aas
and
aaa
in
lock
xchg
stos
cmpsb
inc
sbb
into
mov
insl
bound
popf
push
iret
xchg
jle
das
jecxz
pop
sarl
cmc
sub
and
mov
les
or
mov
pop
test
cld
cmp
stc
cld
pop
push
mov
bound
cmp
fidivrs
xor
mov
aam
xchg
mov
mov
cli
mov
nop
xor
lret
nop
and
out
mov
fs
mov
jo
inc
mov
adc
push
mov
aas
popf
cmpsb
movsb
xchg
mov
subl
insl
push
jge
lods
xchg
xchg
cwtl
lods
lea
xor
out
jle
into
mov
hlt
nop
jne
cmpsl
bound
cmpsl
xchg
jno
std
scas
jmp
push
in
fisttpl
cmpsb
repnz
xchg
flds
test
inc
mov
add
jno
pop
cmp
jae
es
cwtl
and
out
mov
mov
mov
call
inc
xchg
imul
test
pop
cmpsb
push
xchg
jmp
jl
mov
xchg
ja
je
inc
sbb
test
ja
sub
scas
jne
jge
jp
xchg
inc
mov
pop
push
push
mov
mov
rcrl
mov
jp
adc
jecxz
sub
cmp
push
sbb
inc
cwtl
repnz
out
aas
inc
cltd
pop
push
inc
xor
sub
add
jo
ljmp
shr
ljmp
xor
cmc
mov
inc
test
push
sbb
scas
jmp
lods
jo
or
test
sbbl
adc
call
pop
add
testb
test
xchg
or
pop
mov
sbb
mov
lds
enter
pop
imul
ret
jl
dec
repz
sti
pop
out
xchg
inc
add
mov
fwait
xchg
xchg
imul
push
jne
cli
bound
jno
test
xor
sub
fcompl
arpl
test
or
fstps
and
inc
scas
leave
scas
cld
cmpsb
icebp
lahf
mov
mov
inc
pusha
mov
lods
pop
add
testb
inc
mov
jns
mov
cli
xchg
fsubrs
jge
sarb
stc
mov
jge
mov
ret
dec
adc
dec
mov
ret
icebp
loop
push
sub
sub
cmp
pop
out
mov
push
dec
add
sub
fcmove
and
adc
icebp
ja
scas
hlt
pop
out
out
mov
aam
addr16
sub
mov
dec
mov
sete
test
jle
ljmp
or
mov
jge
in
scas
fstl
gs
xor
das
cmp
sub
xchg
xor
out
in
sub
cmp
lret
dec
cmc
pop
or
aam
push
daa
mov
sbb
arpl
nop
adc
lea
dec
lds
cwtl
jmp
test
or
adc
aad
sub
mov
lock
pop
adc
add
les
mull
movsl
bnd
add
insb
out
mov
movsb
hlt
xor
stc
mov
fmuls
mov
imul
test
imul
fdivl
mov
push
cmp
mov
sub
push
dec
sub
cli
jg
outsb
sbbb
jne
cli
int3
nop
std
add
push
ss
xchg
push
popa
call
jl
mov
loop
cs
in
adc
or
jmp
cmp
imulb
adc
xor
jb
cmpsl
inc
sarb
stc
or
mov
sti
test
dec
aaa
pop
or
push
dec
stos
pop
jecxz
and
mov
out
or
aaa
xchg
jno
sti
dec
mov
sbb
testl
xor
fwait
lahf
xchg
add
mov
mov
jl
add
push
in
dec
nop
and
sub
jmp
rclb
or
mov
movsb
out
lahf
ret
mov
sub
pushf
in
add
les
inc
mov
loopne
roll
scas
mov
decb
add
sub
fs
dec
pop
mov
mov
sbb
jno
loopne
sub
in
outsb
mov
outsb
push
leave
rolb
push
scas
out
sub
cli
dec
iret
icebp
xchg
rcl
mov
pop
lods
and
adcb
inc
dec
stos
add
pop
add
push
pop
mov
je
push
xor
cmp
das
mov
lret
pop
sub
pop
inc
scas
test
testb
sub
icebp
repnz
sbb
ret
div
es
fnstcw
inc
test
mov
lret
icebp
iret
in
std
out
sub
mov
test
sub
cwtl
ds
ret
sbb
sahf
daa
es
jle
jo
repz
xlat
add
call
inc
push
xchg
pop
dec
lret
sbbb
push
add
dec
dec
addr16
jnp
insb
mov
fadds
cltd
cmpsl
mov
dec
jecxz
pop
mov
mov
shlb
xchg
mov
push
jl
add
fwait
pushf
add
cwtl
inc
cmp
sti
push
fisttpl
out
fistps
cmp
fiadds
or
dec
ret
or
jo
xor
iret
test
ja
out
mov
jo
sbb
adc
and
decb
sub
mov
sub
pop
arpl
aad
aaa
push
pop
pop
fldl
mov
mov
lods
mov
iret
mulb
xlat
ljmp
dec
inc
mov
fstpl
pop
jle
adc
cmc
ret
pop
add
out
sahf
in
inc
aad
aaa
jmp
je
xchg
dec
mov
aaa
mov
into
gs
xchg
lods
xchg
dec
pop
out
cli
into
xor
add
sbb
mov
xchg
adc
jns,pn
fwait
add
rcll
xor
scas
call
push
push
mov
sub
pop
aam
ror
jmp
inc
xchg
and
in
pop
loope
sub
inc
mov
hlt
adc
or
testb
out
sbb
jnp
xor
mov
mov
xor
mov
jecxz
pop
jg
sub
pop
adc
enter
stos
sbb
movb
je
or
test
mov
xchg
ss
push
sbb
or
xor
add
add
pop
cmp
roll
in
stc
hlt
add
push
cltd
push
jo
dec
dec
xchg
xlat
mov
inc
and
dec
adc
sti
out
repz
aam
cmp
sti
xchg
shl
or
add
insb
hlt
movl
push
out
pop
add
aam
mov
or
add
sub
xchg
xor
and
inc
pop
jmp
cmp
or
fwait
mov
mov
jbe
ret
icebp
clc
loopne
inc
mov
das
cmpsl
mov
mov
push
mov
inc
xchg
leave
movl
dec
mov
outsb
ret
jmp
lret
cmc
out
iret
imul
dec
fsubp
mov
lods
jge
and
mov
shrl
cmp
and
dec
jnp
adcb
jg
cmp
mov
xor
xchg
popa
mov
ret
pop
push
in
push
push
jne
mov
imul
push
mov
jno
test
test
pop
fldenv
cli
inc
mov
dec
sub
hlt
dec
inc
mov
and
sbb
pushaw
rol
or
adc
add
sti
lret
je
sti
sub
mov
dec
loope
pop
jb
push
stos
cmp
aaa
lea
decb
insl
sti
xchg
jl
mov
es
hlt
xchg
test
aad
sub
stc
movl
jns
or
xchg
daa
cltd
dec
test
sub
xchg
or
cs
xchg
test
xor
inc
xchg
mov
dec
aas
lcall
mov
bndldx
ds
cwtl
mov
jae
push
jne
int
or
mov
jmp
imul
jge
sub
test
sbb
mov
jno
jl
mov
mov
rclb
mov
xor
mov
insb
mov
xlat
rorb
adc
xchg
je
das
pop
pop
mov
out
sub
add
push
add
jne
jae
out
mov
mov
push
dec
mov
fs
inc
sub
sbb
fdivs
imulb
pop
jmp
pop
inc
jl
adc
mov
sbb
je
test
sub
sbb
and
xor
sbb
xchg
es
push
push
or
mov
insb
mov
mov
or
xchg
xchg
xor
push
mov
pop
test
loop
or
and
fidivrl
lock
fisubs
push
sub
cmpsb
scas
jnp
mov
in
mov
and
xor
pusha
insl
push
cmpsb
sub
lahf
dec
cld
mov
inc
ljmp
or
mov
imul
cld
arpl
or
movntq
sbb
movsb
pushf
les
inc
cmp
xchg
push
das
cs
xchg
hlt
adc
aad
rorb
lods
push
mov
cmp
mov
cmp
sub
add
aam
push
mov
mov
adc
scas
mov
sub
cmp
xor
adc
xlat
dec
push
jecxz
fldt
lock
cmp
call
mov
mov
ret
mov
pop
dec
pop
mov
mov
ret
inc
ljmp
jmp
pushf
xor
dec
nopl
mov
adc
xor
andl
es
daa
stos
pop
adc
pushf
or
sub
cmc
dec
in
addr16
mul
popf
fsub
jge
xor
lds
gs
adc
js
push
cmpsl
cli
or
lahf
pop
add
icebp
sbb
iret
imul
push
fisubrl
push
out
into
xor
pop
std
outsb
or
sbb
or
sub
in
repz
sbb
inc
in
push
xchg
xchg
pop
cli
outsb
test
xlat
in
loope
push
hlt
int3
xchg
fisubrl
scas
lahf
scas
xor
clc
xchg
mov
cmpsb
xor
mov
test
mov
pop
test
or
inc
andb
xchg
pop
mov
fldl
int3
loopne
scas
fcmovbe
sbb
faddp
inc
das
or
mov
xor
dec
iret
mov
or
cmp
flds
xchg
sbb
daa
aas
int3
loope
xchg
mov
dec
std
dec
mov
cmp
fimuls
fwait
sub
cmpsl
mov
xlat
pop
daa
es
sub
addl
movl
pop
xor
inc
mov
pop
movsl
or
xchg
mov
mov
rorl
xchg
sbb
cmp
rorb
inc
sub
cmovge
out
sbb
rcl
test
daa
pop
push
pop
sub
cmp
fidivrs
movsb
nop
xchg
ret
xchg
insl
jge
enter
push
icebp
sti
dec
jmp
mov
add
fdivrl
pop
adc
jb
not
addb
ds
jp
sbb
negb
lods
xchg
dec
shll
or
addr16
pop
scas
xor
xchg
outsl
add
icebp
xchg
out
iret
daa
es
add
and
adc
push
jp
sub
scas
sub
and
jno
cs
pusha
mov
jno
je
das
gs
je
or
cli
add
mov
cmp
sbb
or
imul
pop
daa
cli
xchg
or
jmp
roll
cmp
sub
pushf
jl
mov
mov
lods
aaa
sub
nop
or
cmp
push
pop
sub
fistl
cmp
or
sbb
cwtl
mov
lahf
int
pop
icebp
out
sarb
xor
xor
pusha
rorb
push
setle
pop
pop
ret
mov
push
icebp
test
rcrb
sub
adc
insl
in
stc
lahf
jb
andb
test
pop
xor
mov
fstl
sahf
and
fcomi
and
mov
cmp
and
in
shlb
hlt
mov
adc
test
mov
dec
jg
cmp
and
jg
in
insb
mov
or
cld
mov
punpckhbw
mov
out
insb
rorl
dec
inc
test
pusha
inc
lcall
and
push
sbb
or
mov
out
fdivr
aas
faddl
pusha
outsl
rclb
xchg
dec
lret
out
orb
lds
cld
mov
jnp
push
push
movsb
scas
xor
or
dec
int
cwtl
shll
adc
int
sbb
mov
repz
jmp
adc
jbe
sub
into
ljmp
sbb
lea
imul
lock
mov
sbb
sti
dec
push
push
pusha
mov
outsb
xor
icebp
adc
mov
lods
lret
imul
fiaddl
cmp
pop
dec
nop
dec
dec
stos
hlt
aad
mov
loop
int3
xchg
mov
repz
out
dec
mov
test
xlat
inc
mov
xchg
ds
mov
fbld
dec
pop
xor
loop
inc
mov
frndint
inc
pop
jnp
popa
push
out
fsubl
push
mov
inc
das
test
jnp
sub
scas
movsl
ds
popf
sub
adc
cmp
ficompl
push
sbb
sub
cmp
pop
or
roll
stos
xchg
mov
sti
xchg
inc
pusha
mov
outsb
mov
addr16
idivb
ror
push
xor
xchg
cmpsb
out
mov
jno
insb
adc
jnp
push
jecxz
add
dec
sbb
test
adc
or
jmp
add
les
xchg
push
push
cmp
js
in
call
stc
repnz
mov
jecxz
out
lods
or
inc
xchg
mov
movsb
ret
iret
scas
pop
pop
and
shrb
notb
loope
pop
adc
ljmp
pop
lea
sub
addl
data16
sbb
enter
inc
mov
fnstenv
shl
stos
inc
inc
pop
mov
jns
push
adc
dec
ds
inc
mov
sbb
sub
testb
loope
adc
cld
movsb
and
or
std
sub
lds
scas
push
mov
mov
and
fcompl
cmc
mov
dec
mov
scas
sbb
adc
cmc
sbb
mov
xor
pop
popa
xor
pop
jae
lods
shr
or
xor
push
ss
cmp
pusha
in
mov
idivl
and
pop
jmp
inc
rcrb
pop
mov
scas
cmp
outsb
pop
subb
popa
fcompl
or
enter
or
call
mov
out
out
int3
jle
das
xchg
push
sub
lods
push
mov
loopne
jp
sub
out
cld
push
rcll
and
jmp
int
in
sub
add
shlb
fistps
call
lcall
cmp
pop
jmp
push
lret
mov
xor
sub
push
xchg
xchg
xchg
out
aad
lret
ret
inc
stc
andb
roll
jbe
stos
sti
push
mov
xor
scas
dec
mov
shll
mov
mov
pop
mov
mov
mov
pop
mov
imul
mov
adc
and
aaa
xchg
dec
mov
movsl
add
inc
or
rorl
fwait
movsb
dec
push
xor
in
pop
sti
mov
adc
mov
pop
pop
pop
rorb
adc
xchg
jle
cmp
lock
lock
in
mov
pusha
movsb
shlb
or
pop
dec
lds
decb
rcll
mov
mov
sub
dec
cmp
int
lods
iret
adc
adc
lods
movsl
and
lret
xorl
aas
and
sbb
and
orl
pop
mov
dec
outsb
pop
int
out
xchg
dec
pop
inc
sbb
xchg
out
and
loop
mov
movsb
push
add
dec
xchg
ds
pop
adc
push
mov
push
adcb
cmpb
xchg
mov
nop
les
add
jg
ffree
cmp
enter
stos
sub
scas
push
push
mov
or
iret
mov
call
mov
jmp
or
stos
fs
outsb
mov
int3
jne
cmpsl
test
cld
adcl
and
popa
test
shl
out
sarb
mov
test
sbb
jle
bound
mov
data16
xchg
aam
lret
stos
inc
dec
aam
js
idivb
sub
fildll
cs
ds
xor
dec
push
xchg
cmp
pop
xorb
sarb
out
adc
test
fistl
ficompl
out
outsb
cmp
fists
test
pop
rol
adc
mov
js
jmp
aaa
mov
clc
sub
xchg
jae
fcoms
enter
pop
mov
insl
xor
cltd
mov
outsl
data16
lret
iret
pop
push
adc
scas
sahf
mov
in
adc
cmp
sub
popa
push
loop
out
jle
or
adc
xchg
int3
ret
lret
pop
lock
push
xchg
push
or
fsubp
xchg
mov
add
fs
imul
jp
mov
ljmp
mov
test
sub
shll
or
dec
add
and
out
push
dec
in
les
insl
jb
jne
and
dec
scas
sbb
cli
push
xchg
xchg
sahf
adc
aam
movsl
fs
lods
push
movsl
inc
dec
lods
adc
cmpsl
ljmp
fiadds
fld1
inc
xchg
pop
jecxz
decl
scas
add
cmp
ss
jmp
pop
cmc
pop
mov
mov
pop
adc
mov
push
int
mov
cwtl
aad
cwtl
aad
icebp
dec
jb
pop
sub
mov
and
stc
je
nop
or
aas
rorb
lret
imulb
xchg
sub
dec
xor
inc
lahf
lods
xlat
push
dec
cltd
sbb
jmp
jge
pusha
sbb
cwtl
ret
push
or
popl
dec
mov
xchg
and
sbb
repz
in
sti
or
add
popa
stc
sub
insb
push
insb
ret
je
cmp
pop
cmp
mov
xchg
jns
outsb
faddl
lret
in
xor
jmp
jne
jne
call
ficomps
test
inc
fimull
cmpsb
bound
sarb
lret
dec
push
jbe
inc
cmpl
push
xchg
add
pop
shrl
xchg
call
mov
cld
sbb
stc
or
dec
add
ret
loope
pop
lock
add
bound
push
out
xchg
push
cmp
mov
fwait
dec
pop
js
inc
cmp
daa
jmp
sbb
mov
fcmovu
shll
insb
test
pop
enter
orb
loop
rorl
repnz
pop
sbb
xchg
pop
or
mov
pop
add
push
push
push
jno
imul
arpl
gs
lods
adc
test
mov
cmp
imul
adc
mov
sbb
mov
jae
aad
pop
cwtl
sbb
add
inc
lahf
mull
pop
imul
jne
mov
cmp
dec
iret
es
lods
or
add
xchg
sbb
insl
or
fxch
gs
ret
mul
mul
or
xor
pop
popf
push
dec
or
out
dec
inc
jb
inc
mov
inc
add
pop
push
daa
push
push
andl
pop
repz
outsl
lret
shlb
pop
add
mov
cmp
inc
mov
push
outsl
lods
inc
mov
aas
scas
mov
test
in
jp
imul
ss
push
sbb
pusha
ret
popf
and
sahf
mov
call
jno
ret
testb
test
push
arpl
rorb
ret
jb
loope
xchg
mov
adc
jmp
shrl
xor
lcall
sbb
lret
or
inc
lds
mov
mov
lahf
pop
and
mov
add
push
xchg
mov
sub
mov
cmc
cmpsb
xor
aaa
movsl
out
into
shll
scas
ljmp
outsb
inc
sbb
or
push
shll
dec
clc
mov
ds
pop
mov
mov
lea
push
jp
test
scas
call
jae
and
cmp
pop
arpl
cmpsl
mov
out
push
dec
sbb
into
fwait
pushf
or
imul
mov
xchg
jge
mov
filds
stos
push
mov
pop
add
adc
push
adc
leave
int
xorl
and
xchg
jo
sbb
push
iret
cmc
pop
xor
push
cs
addr16
aaa
ljmp
hlt
adc
call
cltd
xchg
in
mov
fsub
fldenv
jge
xor
mov
lret
cmpsl
push
push
xlat
repnz
jecxz
mov
ss
sarl
inc
sbb
outsl
int3
dec
cmp
addr16
ja
andl
mul
push
mov
xchg
nop
lds
inc
gs
fwait
xchg
in
mov
mov
hlt
mov
aas
add
pop
xlat
jg
or
sarl
mov
and
xchg
imul
cmpl
test
dec
sub
ljmp
xor
push
stos
repnz
scas
mov
cmp
inc
xor
fidivs
dec
hlt
stc
outsb
loope
mov
sub
cmp
adcl
andl
dec
inc
out
sbb
loop
cmc
je
jmp
mov
cmp
fildl
fstl
rorl
sarb
pop
xchg
mov
incl
lock
inc
lds
lea
lcall
es
ds
mov
mov
mov
es
mov
or
lret
icebp
adc
outsb
ss
loope
arpl
mov
les
fstp
mov
inc
jl
or
scas
ret
int3
or
inc
mov
push
xor
xchg
fdivs
xor
and
in
mov
dec
shll
rorl
cltd
xchg
sbb
insl
xlat
or
or
or
lock
cmp
lods
add
cmp
fldl
cli
aam
or
ja
cwtl
aad
insl
sar
xor
adc
jle
leave
add
popa
nop
outsb
pop
dec
mov
cld
mov
cmp
mov
mov
lock
mov
stos
jge
int3
loopne
mov
shll
clc
stc
mov
adc
dec
fldenv
aaa
mov
fwait
mov
push
popf
jecxz
cltd
out
dec
aam
xchg
insl
cwtl
pushf
jp
sbb
not
inc
es
in
in
fdivp
js
pop
fsubrl
stos
mov
dec
dec
addb
outsl
ret
push
and
mov
mov
mov
cmp
mov
push
loope
push
xlat
and
xchg
adcb
push
pop
dec
lods
push
sub
ds
lea
sti
lcall
sbb
insb
push
push
bound
gs
sub
push
jle
lds
mov
popf
sbb
les
cmp
jmp
jecxz
xor
insb
nop
or
add
ljmp
pushf
lcall
adc
bound
sti
ror
out
in
mov
xchg
aaa
aam
dec
mov
dec
pop
fs
mov
pop
sub
dec
mov
inc
mov
out
rorl
cld
jbe
int3
popf
icebp
and
repnz
in
imul
ficompl
add
into
add
jmp
or
xor
insb
and
popf
add
jge
fisubrl
jne
sbb
in
clc
nop
pop
ffreep
imulb
cmp
cmp
pop
lods
andl
dec
cmpsb
pop
inc
push
jg
adc
mov
and
sbb
push
fsubrl
mov
mul
jmp
push
lret
test
bnd
imulb
push
ret
add
cmc
mov
rorl
imul
je
into
ret
fdivrs
cmp
push
xchg
or
dec
adc
jle
mov
stos
xchg
shrl
loopew
mov
aaa
das
sub
imul
test
mov
push
mov
loope
push
add
dec
xor
js
fiaddl
add
lret
pop
mov
pop
add
and
add
test
imul
loop
xchg
cli
cmp
dec
pop
or
ss
inc
ss
mov
in
or
push
mov
push
fdivl
push
push
outsb
xchg
adc
and
push
pop
add
hlt
xchg
cs
xor
sbb
cmp
mov
push
mov
xchg
inc
xchg
f2xm1
je
jno
jbe
jecxz
jl
adc
sub
mov
jmp
sub
mov
jge
out
into
lea
mov
add
dec
adc
iret
shl
int
stos
cmpsb
clc
insl
push
mov
pop
dec
jp
out
xor
xor
and
xchg
loope
mov
gs
cmc
pop
int3
push
iret
or
mov
loop
mov
lods
idivl
nop
pop
inc
pop
les
test
stc
xlat
insl
pop
fwait
loopne
sbb
clc
data16
add
shll
sbb
jl
jns
mov
or
ret
cmc
enter
sbb
call
jp
sbb
cmp
test
sbb
stos
push
cmp
xchg
and
enter
outsl
in
lcall
sbb
rcrb
pop
dec
pushf
and
xchg
xor
int3
mov
push
fwait
adc
stos
test
mov
dec
addb
and
sub
dec
addr16
test
push
sbb
repz
mov
push
adc
xchg
xor
out
test
mov
cld
hlt
mov
ljmp
std
in
adc
test
shl
jno
loopne
sbbl
push
lret
mov
sub
lds
jle
lods
mov
cmc
addr16
adc
or
sub
dec
roll
push
ret
pop
repz
aas
into
xchg
xchg
mov
push
fnstsw
outsb
push
loop
lret
popw
repnz
inc
or
int
jl
pop
out
lret
fsubp
pop
mov
adc
push
mov
and
fdivrp
jo,pn
jbe
add
sbb
adc
adc
loopne
or
lods
aaa
negb
xlat
call
arpl
lahf
ljmp
imul
lea
xor
xchg
out
jmp
jb
xor
cs
iret
and
cmpsb
sbb
mov
rcr
sub
pop
addr16
sub
ret
add
mov
jno
jae
add
pop
hlt
jno
dec
push
or
mov
mov
mov
push
jnp
shr
pop
inc
imul
or
repz
jb
in
or
test
adc
shrl
out
and
das
inc
imul
imul
sahf
outsl
mov
mov
mov
movsl
movsb
lods
xchg
jmp
xor
xchg
into
mov
xchg
pop
mov
xchg
push
sti
imul
inc
mov
aad
cld
jg
sub
test
or
pop
dec
dec
data16
adcl
cmpsb
sahf
scas
mov
testl
inc
lahf
aaa
fildl
outsb
pop
push
js
jecxz
stc
mov
imul
add
lods
out
push
incb
mov
icebp
adc
add
push
sbb
dec
jae
pop
push
push
imul
cmp
push
call
adc
cmp
sbb
push
cmc
and
ss
cwtl
dec
cmc
sbb
mov
pop
shr
inc
fidivs
test
iret
xchg
mov
call
sub
mov
addl
mov
inc
jl
push
dec
loopne
mov
dec
pop
pop
push
sbb
shll
cmp
xor
loop
adc
int3
lret
lret
xor
xorb
pushf
fwait
dec
icebp
xchg
inc
pusha
mov
jmp
xlat
test
fucom
sete
cs
cmc
lcall
pop
jbe
inc
adc
lret
in
mov
call
dec
xor
fisttpll
cltd
ss
clc
inc
lods
gs
loop
adc
inc
fcoml
fbld
push
or
jge
repnz
icebp
fsts
push
mov
insb
cltd
push
or
iret
xchg
inc
add
fsub
adc
and
sub
in
scas
add
push
pop
lock
lcall
mov
fstpt
xchg
sbbl
out
outsl
dec
add
inc
mov
mov
lahf
sbb
gs
xor
mov
push
rorl
in
int
dec
or
mov
mov
inc
test
pushf
mov
jecxz
pop
cmp
xchg
fstpl
inc
rcl
sti
xchg
mov
xor
fsubrs
adc
adcl
mov
adc
sahf
xchg
cmpsl
push
rcr
fsubr
add
and
jbe
lods
inc
pop
int3
dec
rcr
mov
or
mov
nop
lcall
mov
cmc
push
ss
outsb
jl
hlt
pop
mov
cmp
push
xor
jle
cltd
and
aad
mov
pusha
js
adc
xor
fsubrs
pop
gs
fistpl
xchg
outsl
out
in
jle
mov
mov
daa
jne
adc
inc
push
pop
sub
popf
aaa
lahf
jno
and
push
lcall
in
dec
insl
or
jae
or
outsb
lea
adc
mov
push
cs
cmp
fwait
push
scas
pop
out
out
sahf
mov
lods
and
jne
jnp
cmp
loopne
cmp
jl
xchg
or
pop
aad
fucom
mov
movsb
cmp
dec
iret
out
insl
jns
mov
movsl
or
jmp
movsb
scas
mov
mov
jbe
jno
add
pushf
ss
sbb
lahf
lods
push
stos
divb
mov
lods
cmpsl
pushf
test
inc
jae
test
sbbb
xor
addb
jge
adc
cmp
jle
sub
nop
fsts
in
icebp
dec
sbb
shll
int
jae
stos
testl
loopne
cmpsb
xlat
mov
aad
ljmp
adc
cltd
lods
insb
icebp
movsb
cld
mov
scas
or
add
jbe
jno
cld
xor
outsb
xchg
in
inc
xchg
lcall
xchg
jecxz
xor
adc
dec
inc
emms
rcrl
and
inc
adc
ret
shll
fcompl
xor
push
fmull
fdivr
dec
add
fldcw
pop
arpl
outsl
mov
jl
inc
xchg
js
popf
push
mov
outsb
pop
cwtl
inc
ljmp
jae
in
mov
push
mov
jns
cmp
ja
cmp
or
gs
out
xor
or
mov
pop
cltd
push
mov
or
outsb
sbb
mov
pop
lcall
dec
mov
xor
pop
mov
lods
and
adc
mov
inc
loopne
jle
addr16
xchg
sub
sbb
push
dec
andb
sub
pop
adc
addb
leave
loopne
pop
add
jecxz
in
mov
sub
insl
dec
xchg
sub
dec
inc
add
adc
dec
bound
cs
icebp
jnp
inc
dec
push
inc
call
into
mov
dec
jnp
ret
pop
rcl
enter
pop
or
mov
mov
adc
or
ljmp
lret
aas
mov
add
ja
stos
out
pusha
int3
int3
pop
sub
or
idivb
rcr
imul
in
lcall
in
out
pop
mov
pusha
arpl
xlat
neg
xlat
sub
fimuls
jnp
enter
sub
push
lret
or
dec
je
adc
xchg
or
sarl
mov
repz
aam
fwait
xchg
adc
xchg
push
rorl
xor
push
cmpsl
xchg
loop
xchg
push
mov
stc
push
mov
lret
ret
cmp
sbbb
scas
xor
call
sti
mov
fstps
int3
push
mov
adc
std
fisttpl
scas
xchg
jo
jl
mov
pop
sbb
dec
out
inc
push
and
rcrb
out
mov
jmp
das
xor
data16
clc
andl
xchg
pop
mov
test
add
stc
lea
or
out
add
aam
dec
jo
js
inc
lcall
dec
in
ja
xchg
incb
xlat
mov
aam
and
jnp
stos
inc
imul
rorb
inc
mov
dec
outsb
dec
test
arpl
mov
jp
push
sti
adc
and
loopne
pop
sub
mov
pop
loopne
mov
outsl
fwait
push
loopne
in
inc
in
fsubrs
sub
mov
and
fstps
sti
int
scas
sub
xchg
sbb
xchg
mov
cmpsl
jecxz
orb
add
adc
stc
jnp
fnsave
push
lea
stos
mov
jb,pn
in
les
inc
lds
inc
or
es
cmpsb
aaa
pop
lret
enter
cltd
into
add
in
cltd
mov
out
pop
lret
fsubl
cmpsb
or
ljmp
mov
pop
mov
stc
dec
repz
cmpsb
jge
les
pop
add
outsb
lods
adc
ss
stos
int
or
jp
shll
repnz
cmp
nop
mov
mov
push
dec
in
and
pop
dec
mov
gs
mov
int
inc
jp
jle
dec
jne
inc
shl
divl
push
aam
and
add
push
push
shll
pop
mov
int
aaa
dec
movsb
mov
call
mov
dec
int
andl
sbb
dec
cwtl
lcall
ds
pop
push
pushf
idivb
sbb
mov
repz
dec
push
mov
lret
lcall
scas
jle
lahf
in
adc
stos
cli
push
out
inc
pop
shll
movsb
mov
mov
rcll
xlat
dec
sub
pop
push
cmpsb
fwait
xor
ret
mov
add
inc
movsb
add
fucomi
imul
arpl
mov
pop
sar
add
int
shll
pop
frstor
mov
movsb
sub
mov
xor
mov
jp
pusha
or
and
push
inc
movsl
adc
xchg
xor
das
add
or
or
loop
int
shlb
cmp
aad
jne
xchg
or
aam
add
sbb
push
mov
loope
inc
ss
addr16
mov
inc
sub
loop
mov
dec
jp
ds
or
fnstenv
lea
xchg
loop
xchg
mov
out
lds
in
mov
cltd
mov
ficoms
jo
mov
addr16
push
push
pop
cmpsl
sarb
add
push
sahf
jbe
add
xor
xor
ret
outsl
xchg
xchg
mov
cld
jl
cmp
xchg
idivl
gs
clc
push
dec
cli
shl
imul
stos
cmc
cld
dec
cmp
mov
movsb
test
stos
jmp
ja,pt
fsub
sbb
in
dec
push
mov
pushf
movsb
scas
das
test
jo
dec
xchg
mov
rolb
test
dec
sbb
mov
jnp
repnz
pop
cli
sub
mov
mov
cmpsb
out
or
jp
nop
insb
hlt
jns
sarl
icebp
cmp
orb
add
mov
imul
mov
rorb
xlat
addl
scas
enter
xchg
ret
lea
test
xchg
or
call
orl
std
call
stos
xor
iret
and
out
mov
mov
and
xchg
outsb
or
scas
dec
push
xchg
aam
jne
add
dec
loopne
lds
sbb
in
arpl
jno
stos
aas
inc
dec
lahf
adc
sbb
push
lock
xor
inc
add
ret
push
shrl
push
sub
repz
imul
subb
in
fisttps
push
cmp
dec
pop
out
ljmp
sub
dec
sbb
inc
mov
lock
jne
push
ss
jno
bnd
aaa
sbbb
leave
xor
lock
add
mov
cli
jae
or
rclb
mov
dec
arpl
jg
adc
ret
mov
inc
push
test
adc
je
mov
repnz
cmp
push
adc
outsl
push
mov
subl
data16
cs
shl
mov
add
xchg
xor
adc
ret
adc
jecxz
cmp
fnsave
decb
cmp
dec
or
stos
sti
jno
push
hlt
mov
inc
jmp
or
fisubs
movsl
jnp
inc
xor
stos
jne
dec
and
xor
sbb
pop
jnp
jge
adc
push
shr
aas
cwtl
mov
add
fs
mov
imul
ljmp
mov
lods
or
cmp
inc
lcall
or
movsl
outsl
sub
cmpsl
aad
and
hlt
dec
dec
loopne
fistpl
jg
inc
insb
lret
mov
push
aaa
mov
es
sbb
pop
jne
mov
out
adc
in
test
lcall
push
or
sbb
inc
in
push
xor
sbb
icebp
push
lcall
stos
flds
cmp
dec
imul
cmpsb
xchg
movsb
and
inc
pop
mov
jno
insl
add
lods
push
fmul
ret
pop
ss
inc
push
out
es
out
pop
xchg
or
rcl
sub
and
and
push
cwtl
or
es
cmp
stc
es
xchg
mov
mov
cmp
pop
sub
cltd
negb
add
mov
add
and
xchg
sub
xor
loope
fistps
mov
int3
shll
jno
jle
add
jns
mov
dec
test
fdivs
sub
lret
jnp
into
xchg
fcomps
mov
outsl
out
pop
cld
fimull
push
sub
hlt
mov
pop
sub
rclb
mov
add
push
test
arpl
sub
or
loope
repz
mov
leave
cmp
add
hlt
dec
or
repnz
push
or
aaa
xchg
add
push
stos
push
incb
push
cmp
enter
push
sbb
sub
fwait
stos
in
push
push
fistps
pusha
xchg
notb
cli
pop
cmp
fisttpl
mov
mov
sub
cmp
jbe
imul
dec
pop
or
inc
bound
ja
es
popa
sub
nop
push
sub
loop
push
cwtl
adc
mov
or
sbb
mov
push
daa
pop
arpl
nop
sarl
jb
lds
mov
fisubrl
pop
push
sub
inc
es
mov
and
push
and
jns
in
xor
mov
inc
jno
sub
lock
cli
dec
dec
lds
xor
sbb
xor
inc
and
jmp
sti
push
push
popa
sub
std
or
push
stos
push
mov
mov
jnp
mov
in
sub
xor
inc
jnp
jmp
add
pop
ljmp
push
cmp
xor
orb
je
mov
lret
shll
popf
lods
imul
sub
lods
fucomp
cli
adc
jmp
pop
arpl
jmp
push
lock
out
xchg
mov
or
push
pop
and
popf
data16
das
jmp
aam
lea
rol
jb
push
or
fdiv
les
mov
jmp
popf
das
cltd
inc
or
and
pop
xchg
in
mov
and
in
dec
fisubrs
popf
mov
dec
sub
and
pop
int
in
loope
leave
mov
cmpsl
inc
lret
xor
out
add
insb
pop
sub
ret
jno
dec
xchg
mov
jge
js
jns
pop
and
mov
cli
jbe
shll
mov
add
mov
ret
js
xchg
mov
xor
mov
jnp
mov
sub
enter
scas
out
jmp
jecxz
mov
fisubl
mov
shll
mov
jns
dec
aas
mov
sbb
sub
ret
jo
mov
sti
add
jecxz
fildll
in
int3
cmpsl
dec
stos
mov
es
xor
mov
ret
mov
mov
rcr
sub
adc
jno
orl
pop
pop
xor
adc
inc
popf
xchg
cmp
lcall
xlat
add
inc
inc
popf
mov
test
push
aam
lods
adcl
nop
push
cwtl
and
js
inc
xor
mov
jne
adc
stc
sbb
out
fcompp
leave
aam
or
sbb
xor
adc
jmp
jle
dec
push
scas
int
rcrl
sub
in
leave
cmp
das
jae
cmp
bound
and
inc
mov
ja
jns
movsl
mov
xchg
clc
ret
ja
cmp
dec
or
xchg
das
fiaddl
cs
xchg
jnp
jecxz
inc
jl
pop
fnstenv
aam
stos
sbb
das
imul
mov
and
adc
leave
dec
enter
ja
sarl
or
pop
int
sbb
xor
int3
push
lret
pusha
and
subl
test
cmc
pop
cmp
nop
lds
sub
shlb
verr
jl
fwait
clc
dec
cmpsb
push
mov
into
fs
xor
hlt
in
mov
rcrb
adc
cmp
add
outsb
int
xchg
xlat
outsl
push
and
jmp
inc
fisubrs
das
clc
cmp
mov
mov
enter
rcr
xor
sbb
mov
ret
jo
fs
mov
pop
das
pop
mov
or
xchg
or
mov
andb
mov
stos
lea
xor
scas
mov
stos
jno
mov
jne
sub
push
mov
and
idivb
cmp
cld
dec
adc
fidivrs
fstp
fs
out
mov
je
jge
mov
fdivp
in
add
inc
xchg
js
xchg
and
arpl
sub
dec
dec
mov
fildll
sbb
xor
ret
inc
jp
imul
push
lods
jmp
neg
int
pop
xor
mov
jl
mov
sbb
repz
fcmovu
mov
lret
inc
adc
cltd
pop
ja
xchg
or
lods
mov
add
inc
and
jl
and
cmp
sbb
idivl
hlt
or
loop
insl
push
push
inc
mov
ret
leave
push
aam
cmp
mov
inc
popf
es
sub
and
push
or
dec
addl
das
fisubl
cs
xor
inc
in
adc
mov
in
je
mov
div
int
cmp
shll
test
pop
lahf
in
add
dec
into
xchg
jle
sahf
push
add
push
xchg
sbb
and
jge
jle
adc
push
fldt
int
jl
daa
mov
popa
dec
cmp
in
or
test
cld
xchg
addr16
addb
fsubrl
cwtl
out
xchg
adc
shrb
xlat
cltd
mov
push
xor
push
loop
push
and
ds
xchg
aam
fcomps
xchg
ds
mov
mov
cmpsl
sar
in
shlb
adc
inc
sahf
jg
into
out
out
cltd
imul
push
or
insb
mov
inc
or
fidivrl
dec
push
popa
add
aas
xchg
push
sbb
fmuls
xor
adc
inc
nop
and
pop
cli
xchg
pop
cltd
stos
fisubrl
pushf
loope
pop
xchg
sub
jge
lret
inc
cmp
rclb
repnz
or
pop
push
sub
lods
fnstenv
test
mov
in
mov
int
mov
sbb
in
stos
push
jne
sbb
shl
push
fcmovnb
lock
sbb
jmp
xchg
int3
sub
out
adc
pop
scas
add
fnstsw
outsl
test
mov
xor
add
adc
fisubs
test
dec
movsl
ret
loopne
mov
push
clc
out
rorl
stos
aaa
je
inc
je
je
xlat
jno
pop
sbb
hlt
movsb
mov
or
mov
dec
lret
xor
push
inc
aam
ss
rorl
iret
mov
and
sbb
fbstp
sbb
outsl
outsl
sub
mov
mov
insb
and
out
or
pushf
jp
sarb
scas
cmpsb
lret
and
jo
sbb
int
sub
repz
lret
pop
fistps
adc
add
jg
push
nop
mov
mov
pop
andb
out
hlt
pop
cmpl
out
push
xchg
and
stos
sbb
xor
mov
push
loopne
push
adc
adc
cld
imul
fmuls
fs
cld
inc
adc
dec
jecxz
cmc
out
movsl
pop
repnz
sub
mov
lods
xchg
mov
in
cld
bound
insb
iret
mov
xor
jns
mov
js
orl
test
fisubrl
or
ljmp
pusha
inc
bound
cmpb
push
or
hlt
ficomps
setg
jecxz
aas
mov
add
adc
push
pop
sbb
bnd
lock
data16
and
xor
dec
xchg
jmp
mov
aam
mov
add
ja
mov
xor
lret
sub
outsl
out
add
push
repnz
jmp
adc
cmp
into
fldt
pop
into
dec
iret
mov
mov
dec
fnsave
mov
pushf
mov
sub
movsl
lea
movl
enter
jnp
add
adc
adc
cmp
bound
testb
stos
xchg
xchg
movsb
int
cmc
jae
xor
les
cmp
or
cwtl
lcall
sbb
repnz
xor
negl
xchg
mov
test
add
outsb
idivl
push
stc
addr16
jge
jl
inc
inc
and
clc
cmp
xchg
pop
add
popf
jmp
movsb
add
add
cmp
xchg
dec
and
sbb
pop
bound
and
cmp
arpl
mul
aas
rcll
lret
out
or
pushf
mov
mov
cld
xorb
push
sbb
mov
inc
decb
push
out
sub
jb
or
mov
jae
add
jne
lea
mov
cltd
push
push
mov
jb
and
mov
movsl
mov
int3
jns
xchg
imul
mull
sbb
outsl
push
mov
mov
aaa
test
sbb
sub
addr16
adc
aad
nop
dec
mov
mov
out
push
cld
cmp
int
push
mov
icebp
inc
addr16
or
mov
and
jl
divb
xor
jae
add
mov
dec
data16
data16
sarb
ret
jl
loope
sbb
fsubs
add
movsl
adc
outsl
ss
sub
push
mov
shr
jge
inc
lcall
aaa
dec
mov
adcl
push
cs
and
push
pop
loope
into
rclb
dec
vmovhps
aam
sbb
mov
jge
rolb
and
mov
mov
dec
jmp
shl
mov
xor
shl
cmp
shrb
adc
sarb
test
pop
push
xor
loopne
movsl
mov
or
in
pop
jns
jmp
pushf
xchg
idiv
movsl
and
adc
dec
cmpsb
jecxz
out
aad
add
push
lods
adc
dec
shlb
pusha
jae
repnz
scas
iret
andb
sbb
jmp
jno
or
mov
xor
jbe
push
add
sub
repnz
adc
or
lods
lds
lcall
hlt
fisubs
loop,pt
outsl
mov
sub
je
cmp
mov
loope
mov
inc
aas
mov
cmp
dec
test
push
jnp
cmp
roll
mov
nop
dec
xor
pusha
adc
movswl
in
imul
lods
es
or
xor
and
mov
les
push
add
cltd
in
sbb
push
jl
dec
mov
int3
push
lret
pop
add
push
mov
push
insb
inc
mov
mov
xor
pop
jno
add
stos
das
mov
dec
movsb
push
sub
mov
int3
or
pop
out
sub
hlt
les
mov
aam
lahf
hlt
test
lods
mov
int3
mov
lods
dec
iret
xchg
in
cmpsl
mov
and
jno
sbb
dec
test
sbb
cwtl
gs
xchg
add
xchg
mov
push
in
inc
ficoml
decl
cltd
mov
or
cmp
jp
cs
adc
push
into
add
loope
iret
lds
das
inc
push
jae
inc
jno
inc
cmpsb
mov
out
add
outsl
cmp
ret
inc
jge
movsl
das
mov
fsubrl
mov
jecxz
rcrb
mov
and
sbb
lret
lods
subl
pop
arpl
push
mov
xchg
jne
sub
fs
cmp
sbb
pop
push
ret
mov
xor
les
cmp
dec
test
ret
pusha
lret
adc
call
push
mov
ljmp
adc
cmp
fisubrl
pop
jae
pop
pushf
cli
je
push
push
cmpsl
int
addb
subl
test
dec
add
call
cld
mov
fnstenv
ds
icebp
insl
mov
pop
xchg
aam
push
dec
je
hlt
or
jecxz
in
pop
push
jae
pusha
jp
mov
inc
adc
xor
out
mov
aaa
xchg
scas
dec
repnz
sbb
adc
hlt
test
je
push
pusha
insb
and
das
cmpsb
bound
and
movsl
mov
in
fdivr
clc
fadds
push
sbb
or
sti
fisubl
pop
pop
or
insb
xor
xchg
push
jae
test
xchg
ret
push
pop
data16
leave
xor
cmc
es
inc
fcmovu
add
roll
test
pop
cli
sub
mov
xchg
out
jbe
out
iret
pop
jmp
es
xchg
loope
movsb
call
test
jbe
jb
xor
sub
repz
xchg
fnsave
jne
pop
sbb
cmp
cmp
jns
and
popf
ficompl
gs
add
cmp
jbe
rclb
mov
mov
cli
add
lds
test
xchg
add
and
cmc
loop
jb
cld
sub
rorl
add
fldl
dec
scas
movsb
jne,pt
pop
dec
mov
sub
or
in
loope
cmp
cld
push
out
les
ja
out
and
mov
adc
cli
mov
push
aad
insb
aas
insb
rcrl
push
inc
push
sbb
ds
xchg
pop
push
subl
and
jl
pop
insl
fnsave
je
lret
std
push
mov
xlat
stc
fwait
xor
xor
sub
mov
jns
rcrl
stos
cmp
fsubs
pop
xchg
rcll
cs
sub
push
mov
push
inc
push
mov
pusha
mov
inc
or
cwtl
xor
mov
cli
mov
xchg
insl
aad
pop
adc
xchg
mov
xchg
sbb
inc
mov
or
mov
pop
ret
push
lcall
cld
xchg
pop
xor
jnp
push
arpl
mov
rcll
movsl
fcmovnbe
and
movsb
jbe
or
popa
mov
cltd
test
and
bound
out
jb
sysenter
push
ret
imul
test
js
jg
push
cltd
imul
bound
stos
test
sbb
shrb
lds
add
repz
ret
xchg
je
mov
push
jbe
push
xor
ljmp
cmpsb
repnz
fs
lcall
test
mov
fmul
inc
inc
jo
inc
mov
into
lods
sbbl
adc
mov
ja
rolb
js
inc
dec
adc
cmp
dec
dec
nop
fwait
call
cmpsb
jp
es
imul
add
cmp
mov
mov
push
jnp
bsr
into
dec
popf
idivb
ret
mov
int3
or
or
enter
insb
xor
xor
xchg
cs
in
stos
loopne
inc
ret
push
and
or
jbe
lret
sub
pusha
push
sub
jo
dec
push
pushf
loopne,pt
jl
cmc
sub
xchg
sbb
xchg
arpl
push
xchg
sub
dec
aam
cmpsl
fbstp
jo
clc
xor
inc
xchg
pop
rolb
fwait
and
push
sbb
bound
mov
roll
js
jns
pop
jb
test
ret
movsb
xor
outsl
mov
lods
test
testb
js
sahf
aam
or
inc
fcos
hlt
jbe
mov
pop
sub
out
negl
add
xchg
inc
xor
and
sbb
add
sarl
in
push
and
cmc
xchg
jmp
pop
sahf
jb
push
out
lea
cmpsl
or
clc
and
lods
pop
call
ret
pushf
xor
push
cltd
les
in
cwtl
inc
sahf
adc
mov
add
imul
inc
in
mov
cli
mov
out
and
negl
pop
sub
add
push
sbb
out
jge
jg
mov
rep
push
inc
add
lret
xchg
xor
into
loopne
jecxz
fisttpl
int3
test
mov
lods
sar
and
sub
mov
fsubp
mov
and
xor
push
loopne
lock
outsb
dec
mov
mov
pusha
outsl
jp
std
aaa
lea
cmp
insl
mov
subl
fwait
pop
and
xchg
inc
pop
fisttpl
xchg
and
mov
xchg
test
mov
sarb
icebp
xor
iret
pop
mov
lret
mov
lods
jmp
add
call
testl
cmc
push
mov
cmp
xor
andl
outsl
adc
stos
pushf
out
arpl
scas
cwtl
mov
sbb
sti
pop
cmp
mov
add
push
mov
divl
jno
lcall
xchg
popf
pop
xchg
or
mov
sbb
jmp
push
repz
fsubr
jbe
mull
pop
push
iret
mov
out
dec
sbb
fldcw
sub
ss
mov
mull
std
mov
adc
xor
pushf
push
add
dec
fsts
stos
pushl
adc
cltd
add
xchg
popa
call
adc
add
jne
cs
xchg
cmp
and
cwtl
mov
insb
in
jns
mov
aad
in
inc
mov
mov
push
lods
and
inc
pop
out
mov
mov
xor
scas
repnz
jge
dec
xor
xorl
fwait
mov
push
lret
loopne
and
and
jl
jnp
inc
cli
and
js
add
das
push
xchg
mov
mov
cmp
cmp
sbb
aas
stos
faddl
jmp
shll
daa
out
jns
test
loop
jae
out
loop
push
daa
sub
lret
jle
pusha
outsb
decl
sti
mov
outsb
cltd
addr16
push
stc
push
dec
or
sahf
cmp
xor
call
mov
jns
fisubrl
data16
cli
repz
lds
jae
xchg
cmp
subb
and
daa
aaa
push
push
je
je
jmp
in
and
repz
call
xchg
movsl
and
cmpsb
mov
pushf
std
jbe
pop
adc
sahf
fnsave
jnp
cmpsl
cmpsb
movzbl
insl
imul
add
mov
jg
loope
daa
xchg
and
xor
xor
sbb
sub
loope
xor
xchg
out
inc
inc
add
aas
jmp
push
adc
dec
cmp
cmp
js
cs
sbb
inc
or
jns
inc
popf
jle
test
aas
jmp
data16
and
sti
xor
xchg
push
pop
cmp
and
iret
jns
mov
insl
cmpsb
pop
lock
or
aaa
scas
mov
adc
mov
outsb
lret
std
jle
sar
pop
pop
addr16
inc
outsl
adc
pop
xchg
cltd
adc
cmpsb
inc
ffreep
mov
mov
pop
inc
mov
mov
pop
and
pop
inc
outsl
je
test
les
pop
pop
test
mov
xchg
stos
mov
je
jmp
mov
hlt
insb
cmc
mov
fs
mov
shlb
mov
fwait
bound
push
cmp
or
pop
pop
mov
add
into
xlat
fisubs
push
push
stos
insl
pop
jne
mov
test
mov
adc
shlb
sti
cmp
and
sbb
int3
pop
and
clc
adc
int3
dec
xor
ja
xor
jb
pushf
push
cmp
and
loope
cmp
push
aaa
shll
push
mov
mov
mov
mov
test
andl
daa
mov
pop
xor
mov
sahf
push
movsl
jecxz
insb
daa
aad
adc
in
out
or
test
fmuls
xchg
bnd
in
dec
cmp
movsl
stos
cld
xchg
pop
in
pop
lret
jmp
xchg
sub
mov
mov
outsb
mov
sbb
adc
stos
mov
mov
sub
xchg
jg
push
sbb
cmp
adc
jmp
and
mov
scas
into
je
addb
cmc
js
dec
nop
in
pop
jle
sub
sar
sbb
pop
and
jmp
sub
xor
mov
scas
or
push
jnp
adc
std
lret
mov
mov
jbe
addb
mov
lahf
dec
js
test
xchg
cmpb
sub
cmp
add
ljmp
jg
movsl
jo
mov
in
testl
mov
mov
mov
in
add
addr16
aam
or
sub
mov
imul
xchg
or
aaa
mov
punpcklbw
dec
mov
push
test
shlb
cmp
in
cmp
mov
mov
imull
stc
fcoml
push
push
add
iret
mov
jns
outsl
mov
cmp
stc
loop
mov
sub
and
pop
jecxz
mov
daa
shl
sub
push
xchg
pop
mov
lret
cmp
sahf
addb
rep
push
xor
xchg
dec
add
or
push
ljmp
addb
push
daa
xchg
and
jnp
sbb
push
bound
jne
cmp
and
xor
push
mov
aas
push
xor
mov
dec
hlt
fnstcw
xchg
hlt
std
in
adc
xchg
push
scas
xor
xchg
movsb
sbb
mov
adc
or
pop
lods
fcomps
ja
mov
divl
dec
adc
mov
sbb
aas
in
repz
pop
pop
clc
adc
xor
lea
aas
cmp
ds
mov
aas
xchg
and
scas
movsl
mov
lret
push
push
mov
repnz
dec
sbb
push
mov
add
lock
sub
push
add
fstps
lock
scas
xor
push
mov
mov
cmp
jmp
nop
dec
fisubl
cmp
ss
adc
imul
dec
mov
push
arpl
je
jl
pop
nop
lahf
outsb
fsub
xchg
fmuls
popa
movsb
jle
roll
add
les
outsl
sbb
mov
popf
add
orb
test
fsubrl
push
pop
imul
push
xchg
mov
daa
inc
fisttpll
cmp
movsb
mov
push
hlt
add
rorb
jb
mov
arpl
aas
loop
sbb
pusha
in
xchg
add
pop
adc
popa
jno
movsl
stos
cs
jmp
cmp
inc
paddsb
sbb
in
sub
outsb
dec
arpl
bound
mov
or
push
and
push
cmp
jae
arpl
jmp
sbb
jo
fucomp
icebp
std
push
gs
es
aaa
mov
sbb
lds
sbb
push
or
out
out
rclb
xchg
jns
pop
sub
fwait
and
lret
add
je
or
mov
push
sbb
cmp
lret
mov
std
pop
sbb
or
imulb
mov
jae
out
adc
sti
aad
mov
push
rcl
push
jecxz
outsb
lcall
mov
push
dec
push
std
loope
cmpl
sub
jae
psrlw
sbb
arpl
sub
push
jno
imul
movsl
clc
cltd
xchg
xchg
mov
mov
add
xchg
pop
lahf
sub
jg
and
xor
xchg
jmp
pusha
cwtl
jno
lea
pop
mov
cmp
nop
stc
mov
bound
xchg
lcall
dec
cmp
inc
jmp
lret
jnp
pop
adc
jbe
dec
cmp
mov
stos
mov
aaa
insl
xor
cmp
mov
fs
lcall
cmpsb
mov
int3
add
jbe
nop
add
and
mov
mov
cwtl
fsubrl
and
jo
cltd
repz
sub
mov
orl
movups
out
dec
jl
inc
sbb
xchg
mov
mov
sbb
inc
dec
mov
lahf
pop
rcrl
dec
jg
repz
bound
loope
xchg
xor
or
mov
mov
outsl
test
inc
int
cmc
imul
mov
movsb
inc
xchg
adc
add
xchg
pop
outsl
cmp
mov
add
jne
sbb
push
popa
aaa
push
stc
rcrl
test
or
stc
xor
leave
stos
stos
sub
into
inc
sbb
out
cmp
pop
adc
xlat
push
mov
sub
daa
xor
and
lret
dec
test
nop
or
mov
rcll
adc
cltd
fdivp
mov
mov
pop
inc
add
in
mov
mov
dec
js
arpl
icebp
and
and
add
mov
int
out
ds
jnp
imul
out
mov
and
jl
stos
mov
cmp
lcall
pop
int3
mov
sbb
aam
and
addr16
dec
cmp
and
push
push
lods
push
mov
aad
inc
xchg
fstpt
das
xchg
jbe
adc
xchg
repnz
pop
enter
lods
sub
cs
mov
cmp
sub
dec
mov
aam
int
cmpsl
cld
sbb
push
adc
leave
sub
push
xorl
lods
rcl
xchg
adc
in
pop
iret
or
scas
mov
jecxz
pop
jbe
mov
jo
push
jnp
push
and
clc
inc
aam
mov
cwtl
add
xor
pop
aaa
mov
mov
insb
test
mov
aaa
stos
int
adc
jecxz
push
xchg
sahf
adc
cmc
mov
je
loope
scas
imul
and
mov
shll
mov
pop
xor
or
clc
push
shlb
adc
dec
icebp
pop
iret
stos
fstl
sub
aaa
add
repnz
sbb
pop
adc
xchg
pop
es
leave
ret
push
clc
cltd
sahf
lret
ret
xor
shll
mov
outsb
xchg
fs
in
add
push
fsts
mov
push
mov
imul
push
adc
sub
addr16
cmp
add
ss
aas
and
push
mov
enter
ja
cmp
imul
jo
popa
sti
stc
mov
daa
xchg
jbe
popa
in
xor
cmp
test
jl
mov
enter
mov
adc
imul
js
call
dec
mov
xchg
inc
sarl
cmc
aad
dec
mov
rcl
out
xchg
adc
adc
pop
jo
push
lods
sub
sarl
cltd
sti
mov
and
dec
dec
pop
mov
dec
adc
aad
jae
push
push
jp
mov
fldcw
scas
ret
xor
fs
cmovns
outsb
dec
outsl
or
sbb
minps
mov
jb
iret
and
fdivr
jl
mov
in
sbb
add
sbb
cmc
aad
add
test
or
nop
in
jne
clc
pop
xchg
outsl
mov
cli
inc
in
mov
test
cmp
cmp
jae
cmp
stos
xchg
adc
jg
rorb
xchg
loop
xchg
push
hlt
out
or
mov
or
add
push
cmc
jl
pop
mov
xchg
shl
test
jne
mov
sbb
cltd
dec
xorb
push
jmp
mov
jns
sarl
jp
inc
or
scas
dec
adc
jp
cltd
inc
icebp
add
add
jb
jo
dec
pop
xor
cmpsb
inc
fwait
cmp
pop
cmp
repnz
sub
push
cltd
ss
push
ffree
xor
mov
jg
sbb
rcll
lahf
inc
fistps
inc
xchg
mov
js
enter
das
cli
jae
mov
lret
jo
mov
or
pop
fxch
sbb
out
push
test
xor
dec
outsl
xor
jg
inc
cltd
mov
push
cs
test
ds
xlat
cmp
test
and
rol
mov
imul
sbb
in
adc
icebp
negb
popf
sbb
shlb
and
inc
lea
dec
or
mov
cmp
divl
mov
and
jbe
mov
pop
xchg
dec
fstps
fsubrs
movsb
cmpsl
push
and
fwait
jp
cli
inc
or
cmp
dec
lar
sbb
outsl
enter
faddl
cmp
fcoml
adc
fstps
push
jb
mov
stos
popa
and
and
nop
daa
sbb
xor
sub
incl
scas
jbe,pt
jns
je
xchg
mov
nop
cld
in
or
xchg
and
inc
test
loopne
out
inc
cmpb
sbb
inc
mov
push
mov
aaa
lret
decb
jne
out
and
cmc
shll
push
mov
adcl
popa
movsb
push
xchg
scas
sbb
push
pop
mov
pop
int
popf
loop
dec
mov
dec
mov
xrelease
xorl
dec
leave
push
call
sti
in
cmpsb
aam
gs
je
int
loop
ja
leave
push
adcb
roll
ficoms
bound
push
addr16
mov
mov
es
decb
cmp
rcrb
add
insl
in
std
push
mov
mov
xchg
xchg
lret
adc
rcrl
push
cld
mov
fnsave
push
and
jmp
jnp
inc
sub
stos
pusha
and
shrb
mov
mov
cli
nop
inc
addl
stos
int
sub
test
pop
push
sbb
movsb
aaa
enter
and
outsl
in
lcall
sar
push
aaa
jecxz
lcall
sub
cmp
cli
iret
inc
es
in
jecxz
les
outsb
add
stos
mov
cmp
subb
aam
test
jp
lods
sbb
or
mov
stc
sti
mov
lock
dec
or
xchg
cwtl
push
in
jae
adc
sahf
dec
or
cs
add
in
and
jg
sub
int3
jo
inc
add
jl
lds
inc
add
mov
jmp
mov
popa
rcll
xor
rcrb
sbb
sbb
sbb
mov
mov
cmpsb
sarb
les
pop
lret
mov
cli
mov
das
jo
dec
sub
and
cmpsl
jmp
mov
js
and
add
pushf
push
push
mov
rolb
xor
lret
out
stos
mov
xchg
cmc
test
imul
push
cltd
mov
sbb
inc
out
nop
mov
push
jno
dec
bnd
fstps
orl
sub
xchg
ja
mov
mov
scas
movsl
pop
sbb
xchg
popa
nop
in
xchg
ret
pop
push
add
rorb
sti
imul
sbb
pop
jno
sti
add
in
jne
repnz
nop
xchg
mov
sbb
sahf
xor
sub
clc
in
push
mov
dec
push
inc
cmp
jl
pop
daa
pusha
push
add
push
inc
xchg
nop
xor
enter
ficompl
enter
push
lahf
pusha
les
cs
cmc
test
cs
cwtl
xor
dec
lods
push
push
push
mov
inc
xchg
or
bound
pop
or
roll
xchg
mov
and
inc
and
inc
and
push
sarb
ss
sbb
mov
xor
popf
out
push
add
out
cli
mov
fdivr
adc
adc
cmp
cmpsl
loope
cmc
or
dec
lahf
mov
jl
inc
lock
or
add
jne
adc
cli
sub
pusha
dec
dec
mov
scas
imul
adc
cmovbe
in
xorb
jo
lock
adc
push
inc
or
jl
jo
and
and
bound
mov
push
aam
or
mov
test
pop
xchg
xchg
jmp
sub
fisubs
and
adc
sbb
cwtl
mov
adc
dec
popf
cmp
sub
xchg
and
aad
inc
sbb
dec
outsl
or
popf
and
call
mulb
repz
jmp
stc
jle
inc
jae
cmp
mov
mov
cmp
lcall
mov
mov
push
sbb
mov
add
int
xlat
aad
clc
loopne
inc
pop
and
push
test
pop
add
lods
sbb
loope
fs
mov
stc
jno
push
pop
insb
arpl
push
je
cmp
sarl
xor
repz
adc
adc
call
xor
dec
jge
sbb
out
aas
lds
data16
pop
cli
lods
popa
pop
mov
and
les
ret
cmp
jne
fstl
inc
pop
and
dec
rorb
movsb
jge
xchg
out
xchg
sub
add
pop
sub
mov
push
mov
xchg
std
rclw
getsec
sub
in
sub
ret
sti
lock
sub
aad
in
in
stos
adc
mov
enter
and
pusha
xchg
fmull
mov
sahf
mov
hlt
shl
rcr
mov
xchg
in
popf
push
xlat
fisubs
pop
jns
out
loope
addr16
adc
test
ss
push
pushf
xor
cmpsl
cmp
or
mov
cmp
movsb
mov
ret
cwtl
inc
and
in
or
xor
push
mov
dec
xlat
push
lds
xlat
std
and
dec
aam
sub
adc
and
pop
fistl
adc
xchg
and
outsl
call
jb
add
mov
lods
jae
and
lods
les
push
push
sub
add
mov
xor
lret
xlat
mov
mov
adcl
popf
jmp
lahf
repnz
sub
roll
xor
sbb
xor
daa
mov
repz
add
push
push
cmpsb
pop
dec
mov
scas
and
cli
pusha
lcall
jb
jo
mov
adc
add
inc
fucomi
fsub
lfs
sbb
mov
sbb
and
inc
lea
jg
cmp
std
rcrb
or
or
mov
push
mov
jecxz
negb
adc
jne
inc
and
inc
test
loop
cmpsb
sub
repnz
dec
cmpsl
rolb
xor
mov
dec
rorb
outsb
cmpsl
and
pushl
dec
inc
in
jecxz
bt
push
stc
xor
out
pop
test
cmp
adc
stos
jl
sbb
jae
mov
movsb
adc
das
enter
inc
in
pop
int3
add
xor
pop
pop
inc
jge
cmp
or
mov
mov
add
int
mov
cmpsl
lock
or
xor
lock
sarb
pusha
jecxz
mov
rolb
sbb
sbb
aad
lods
pop
cmpl
stc
cmp
push
incb
sti
dec
mov
inc
jl
cs
and
mov
cmpsl
mov
mov
jl
add
push
ljmp
inc
data16
out
fnstcw
leave
adcl
insb
and
mul
rorb
or
in
push
ds
sbb
js
pop
call
xchg
aad
push
in
sar
lcall
inc
scas
fwait
dec
pop
insl
inc
out
lock
jp
stos
mov
aas
pop
rcl
sub
loop
ljmp
xor
mov
les
ror
cli
mov
pop
or
inc
aam
ds
add
in
pop
js
mov
ja
decl
push
cmp
sbb
gs
push
cltd
movsb
aam
testl
adc
xor
jmp
repz
mov
decb
push
mov
dec
test
jb
jp
imul
std
in
sub
int3
ret
dec
test
sbb
mov
les
push
movsl
aam
jb
in
jl
push
push
ret
loop
mov
sti
outsb
jne
or
adc
jns
rclb
inc
mov
cld
inc
mov
push
daa
test
aaa
cli
sti
adc
xchg
enter
push
cmp
mov
xor
vmovups
mov
inc
dec
iret
push
or
in
cli
dec
push
das
fwait
das
dec
sub
mov
outsb
fpatan
in
adc
add
mov
frstor
inc
movsl
dec
mov
icebp
scas
enter
and
xchg
mov
incb
dec
outsl
inc
sti
gs
mov
repnz
push
aam
rcrb
mov
das
in
imull
clc
xlat
pop
popf
sbb
stos
mov
dec
sti
lds
or
out
es
sbb
insb
std
mov
jae
jae
mov
jno
mov
popf
jg
inc
nop
adc
mov
adc
xchg
mov
mov
das
imul
push
mov
lods
and
mov
push
push
push
pop
push
lock
add
cmp
loopne
add
or
mov
enter
incl
xchg
pop
mov
mov
int
ret
lcall
or
inc
push
jnp
inc
rol
fsubr
out
mov
aas
xchg
and
loop
xchg
mov
and
sub
xor
adc
int
lods
inc
sbb
pop
push
icebp
sub
cmpsl
adc
in
push
jp
js
inc
sbb
push
push
xchg
ja
mov
xchg
mov
or
dec
adc
das
pop
mov
loopne
and
cmpsl
cli
in
mov
sbb
and
mov
push
jge
rcll
mov
pop
jns
xchg
repz
xchg
xchg
shll
aas
adc
testl
mov
cmpsl
cwtl
in
out
ljmp
xor
outsb
outsb
add
cmpsb
outsb
dec
popa
cld
xor
mov
cltd
sti
lock
xor
movb
xlat
jo
rcrl
mov
sub
mov
cs
push
daa
cs
sti
cmpsb
dec
pop
andl
cltd
mov
ror
lds
test
insb
mov
and
sbb
pop
scas
sbb
test
iret
sbb
inc
sub
rol
pop
leave
dec
lea
fdivrs
xchg
lea
repnz
pop
mov
cmc
sub
stos
int3
pusha
sub
aad
pushf
cs
fsts
inc
jo
push
mov
dec
pop
ja
dec
or
mov
pop
mov
fimuls
inc
test
add
mov
jle
call
dec
and
fcmovb
scas
or
adc
add
inc
push
push
repz
mov
arpl
pop
cli
push
je
dec
fildl
lock
mov
les
mov
es
adc
movaps
jo
or
or
push
mov
or
inc
stos
jb
xchg
les
shrl
aam
push
arpl
xchg
and
fimull
jns
std
jo
pop
ljmp
orb
out
and
test
adc
pop
lcall
sub
sti
pop
xchg
jo
cmp
sub
es
and
push
cmc
imulb
mov
inc
iret
cmpsb
cmp
jg
pop
dec
push
out
cmp
pop
adc
adc
aam
add
cmp
or
popa
push
pop
mov
mov
nop
test
loop
dec
cmp
mov
mov
movsl
int
repnz
sub
pop
inc
xchg
mov
mov
inc
sub
xorb
decl
mov
rorb
lcall
push
pop
loop
aas
test
fmul
popa
pop
xchg
call
sub
mov
xchg
xor
pop
push
push
xor
sbb
dec
sbb
ja
cli
add
mov
scas
jb
jle
sub
hlt
movsl
sub
cmpsl
jne
sub
aaa
jnp
mov
rolb
push
pushf
out
xchg
out
sub
lods
inc
sub
mov
cmp
jns
sbb
xor
scas
push
or
data16
jno
lods
sar
adc
pop
jne
push
clc
pushf
pop
pop
outsl
pop
in
fisubrl
sub
jns
popa
aaa
dec
push
xchg
outsl
xor
pop
pop
rcll
cld
add
hlt
push
sub
sub
xlat
push
sub
out
mov
and
push
jns
sub
cmp
outsb
mov
in
roll
mov
mov
dec
or
outsl
add
das
mov
sub
js
stos
push
loop
rorb
cmpsb
mov
leave
mov
pop
and
jge
cmp
push
pusha
stc
leave
cld
cmp
xor
jbe
cmp
aas
sbbl
or
or
arpl
sub
mov
loop
add
pop
data16
and
pop
movsl
mov
add
pop
add
sub
scas
inc
lahf
into
xchg
pop
sub
fistpll
in
into
push
and
addl
mov
or
pop
loope
cmp
sbb
mov
push
in
incb
test
divb
ret
cld
mov
xchg
and
fldt
and
mov
or
sbb
sbb
aas
jmp
inc
mov
pop
adc
xor
stos
cmp
pushf
sbb
jmp
mov
sbb
pop
mov
pop
shl
outsl
sub
sub
mov
daa
mov
xchg
stos
punpcklbw
and
adc
repz
std
jl
mov
jecxz
mov
out
pop
dec
jo
pop
sub
mov
cmp
fs
je
or
mov
xchg
pusha
push
pop
sub
push
bound
mov
mov
sahf
in
mov
ss
push
xchg
aas
mov
rorb
test
inc
inc
loop
dec
add
push
fisttpll
aas
mov
and
hlt
in
sbb
sub
out
nop
mov
adc
push
clc
xchg
cmp
pusha
clc
outsb
push
xchg
dec
mov
repnz
push
pxor
jecxz
xchg
clc
pop
sbb
fbstp
sbb
jecxz
fimuls
push
xor
rcll
fisttps
push
and
and
xorl
test
out
ja
test
imul
lret
iret
arpl
mov
dec
mov
int3
inc
nop
in
movsl
lea
pop
cmp
pop
pushf
bound
clc
add
cmp
cld
gs
stos
int3
add
fsubrs
push
add
push
push
dec
ja
test
xor
add
stos
test
mov
push
push
fcoms
xlat
mov
pusha
sub
arpl
pop
lret
icebp
inc
repz
jmp
mov
jp
movsb
xlat
inc
and
loopne
pop
add
push
movsb
and
push
fwait
and
pop
push
jle
icebp
inc
and
popa
in
sub
loop
ja
iret
and
sub
gs
test
loope
sahf
and
fistpll
xor
fs
or
loop
inc
xchg
mov
and
repz
mov
lea
std
stc
pushf
dec
pop
cmp
out
xchg
pop
fisubl
xor
jb
jmp
data16
mov
out
mov
lods
loop
inc
xlat
or
mov
es
mov
jmp
int3
inc
xor
das
stos
add
sahf
loopne
cmp
nop
pop
xchg
xchg
push
addr16
lret
sbb
mov
imul
out
jle
push
jo
movsl
shll
jg
mov
das
mov
lcall
push
pop
xor
js
dec
hlt
rorl
or
in
dec
call
fsubl
mov
test
mov
ljmp
popa
hlt
das
dec
shrb
ficoms
ljmp
js
ds
sahf
pop
aas
sahf
enter
push
and
popa
jo
push
mov
pushl
jb
gs
test
test
sahf
xorb
xchg
mov
shlb
dec
enter
mov
call
cmc
rcrb
popa
int3
pinsrw
cli
add
inc
rclb
push
rol
int
sbbl
pop
rcll
add
ds
data16
aad
movsb
push
cmp
mov
test
adc
push
push
jns
inc
sub
add
les
push
mov
xlat
and
adc
int3
xchg
jle
pop
test
sbb
adc
inc
int3
adc
mov
lcall
pop
out
out
push
add
push
lods
or
loopne
aad
ss
cmp
test
dec
push
cmc
dec
mov
cmpsl
ljmp
ja
div
lahf
lahf
insl
adc
lods
xchg
fs
mov
aam
or
cmp
mov
mov
pop
in
enter
sub
sub
sbbb
mov
popa
fwait
enter
add
pop
test
mov
cmp
xor
cwtl
aaa
mov
in
push
dec
jne
negb
fisttps
js
lock
or
fnstcw
pop
fs
xchg
mov
mov
xchg
jecxz
rcl
jo
sub
push
imul
inc
ret
repnz
jae
and
xchg
jle
test
and
ljmp
je
lret
push
push
loopne
test
xor
movsl
jl
inc
jno
jmp
fldcw
jmp
add
push
jne
arpl
hlt
xlat
orl
rolb
add
ds
and
shrb
leave
inc
je
lcall
lds
daa
push
pusha
popa
adc
mov
int3
movsl
adc
pusha
popa
fidivrl
imul
cmc
xchg
pushf
iret
rcrl
and
movsb
or
cmpsb
sbb
xor
outsl
lds
loop
lcall
mov
repnz
push
imul
aaa
sub
push
cmpsl
mov
jmp
cmp
pusha
xchg
cld
dec
data16
mov
push
cmp
aam
and
cmp
aas
imul
arpl
xlat
xor
mov
mov
sub
jge
jno
fwait
scas
jnp
cmc
cmpsb
push
scas
decb
decl
loop
imul
data16
aas
out
aad
inc
fwait
lods
bound
or
fists
push
pop
adc
btr
out
mov
iret
inc
pop
js
pop
rolb
xchg
jge
insb
jae
in
pusha
test
sub
pop
ds
jne
shr
test
mov
sbb
ljmp
loop
push
dec
jl
sbb
lahf
mov
iret
std
xor
push
push
xor
outsb
fldl
or
dec
jl
mov
aad
daa
sub
fs
loopne
sti
fidivs
add
scas
rorl
imull
mov
xor
stos
jp
jl
fbstp
sub
lcall
and
loope
dec
mov
mov
xchg
add
mov
mov
add
mov
loop
repz
divl
mov
jecxz
xor
clc
jmp
aam
and
jae
movsl
adc
dec
adc
outsl
loop
push
or
push
and
cmp
lods
xor
push
lock
jge
push
pop
lret
xor
icebp
pop
dec
std
iret
popa
xchg
jl
fs
and
loop
pop
lret
adc
add
and
lret
jae
into
dec
add
sub
adc
inc
addr16
sarl
icebp
cmp
add
mov
ror
mov
fisttps
push
pushf
pop
adc
and
subl
xor
mov
push
sahf
les
repnz
rcll
xor
popa
in
ljmp
jno
in
scas
into
out
sbb
mov
or
jns
das
inc
dec
pop
rcrl
jbe
push
lahf
insl
inc
ss
mov
int3
ds
push
cmp
mov
int
out
in
imul
enter
sti
push
inc
scas
mov
or
mov
pop
mov
cld
sahf
sub
sub
push
out
mov
cmc
movsl
dec
stos
int3
in
xchg
push
mov
fisttpll
cld
lods
mov
mov
mov
ret
jecxz
clc
jp
pop
das
pusha
push
fnsave
or
int
out
xchg
mov
push
sahf
popa
pop
mov
mov
ret
ss
and
leave
mov
mov
das
aad
outsb
nop
xor
arpl
lret
shll
ss
ljmp
orl
shrb
scas
cltd
cmpsw
cmp
xor
sub
xor
mov
repz
jecxz
ror
xor
jbe
mov
pop
movsl
movsl
push
roll
mov
adc
lahf
pop
shlb
xchg
dec
lret
movsb
rclb
and
inc
sbb
push
aaa
jg
cli
jmp
sbb
sbb
enter
jae
and
fsts
mov
and
mov
fnsave
xor
scas
sub
into
stos
mov
push
dec
testb
jns
iret
cmp
jbe
cmp
hlt
mov
in
rorl
stos
cmp
imul
jmp
scas
cmp
jns
add
fs
jnp
cmp
adc
push
cltd
jne
mov
sbb
fmull
push
aam
sti
xor
mov
and
addr16
dec
daa
add
jl
in
pop
cltd
fmull
or
scas
je
stos
fistps
lahf
insb
fldenv
cwtl
je
adc
pop
mov
add
push
ss
xor
xor
sbb
popa
dec
jle
pop
lds
popf
xor
popf
push
loop
arpl
mov
pop
jl
mov
adc
fildl
aas
sub
fsubr
push
xchg
loope
jne
outsl
ret
pop
cmp
mov
aad
imul
adc
fucompp
aam
mov
sub
stos
divb
xor
jo
test
fsubs
test
pop
jbe
push
cmp
xor
fcomp
pop
mov
int3
or
mov
sub
xlat
pop
stc
xor
mov
push
fisttpll
lock
cmp
lcall
mov
adc
pop
jns
subb
ret
sbb
pusha
mov
push
outsl
subb
dec
xchg
mov
mov
jg
pushf
outsl
movb
in
jmp
leave
adc
adc
fidivrs
imull
sbb
je
mov
lods
std
sbb
jle
popa
cmp
cmp
dec
addr16
xchg
dec
leave
mov
ret
cmp
inc
xchg
cld
cwtl
fstps
jo
enter
pop
push
insl
pop
adc
or
push
inc
jae
in
pop
adc
xor
mov
ret
bound
inc
xlat
and
clc
gs
jmp
xchg
fninit
add
cwtl
and
pop
jge
adc
xchg
in
mov
push
add
aaa
sbb
scas
iret
sahf
das
jmp
sti
das
les
lret
push
repnz
sub
xchg
insb
je
ret
jno
or
sbb
mov
sub
sbb
stos
test
inc
jle
fisubrs
xchg
pushf
jno
add
push
pop
andb
js
mov
push
lcall
jmp
nop
int
mov
lods
lods
insb
xor
add
pushf
add
stos
and
adc
stc
popf
mov
andb
jne
pusha
js
ss
sbb
jge
sahf
jge
rclb
fstpt
or
mov
and
push
sub
nop
cli
scas
ud0
in
loope
fwait
pop
sub
mov
sbb
pop
mov
out
imul
add
jo
sub
sbb
enter
std
xchg
cmp
mulb
pop
xor
js
xchg
add
mov
mov
xor
das
jo
test
inc
enter
mov
sub
movlps
lds
cli
fucomip
into
inc
cmp
nop
scas
push
xchg
fcmovnbe
mov
dec
nop
dec
outsl
pop
cmpsl
xchg
into
cmp
sub
mov
add
inc
mov
incl
mov
push
negb
loop
jge
lahf
lahf
lahf
stos
ss
push
and
rorl
pop
lea
out
and
outsb
outsb
sub
xor
rcrl
scas
es
cmp
sti
cld
jp
mov
push
mov
jne
xor
js
mov
inc
mov
das
sub
fsts
and
imul
dec
cmp
mov
movups
lret
xchg
testl
xor
push
jb
out
aad
or
mov
adc
xlat
inc
sti
int3
pop
loopne
int3
fcmovu
pop
vmread
test
fdivr
jecxz
clc
mov
mov
loop
sub
repnz
cs
xor
or
aaa
clc
ret
cmp
in
test
mov
out
jb
sbb
adc
lds
jo
rorb
cltd
into
inc
pop
mov
dec
sbb
rorb
loopne
rol
mov
ficoms
fs
cmpsb
lret
fldcw
out
cli
daa
push
or
lea
adc
loopne
fbstp
imul
lahf
xchg
fbstp
jne
jnp
mov
jl
inc
ja
lahf
std
dec
aam
je
pop
test
pop
sbb
adc
xchg
mov
push
xchg
dec
stc
mov
fbld
xor
mov
inc
dec
pop
mov
ljmp
aaa
mov
cmc
add
int3
or
lret
dec
and
push
fmuls
fadds
cmp
mov
shr
dec
loop
cmp
or
aad
dec
xor
dec
scas
addr16
or
std
in
pop
and
movsb
push
jmp
inc
out
aaa
sbb
jno
mov
fbstp
cmp
adc
push
mov
sub
push
dec
push
fs
cmp
aas
lahf
add
push
ss
scas
pop
push
repnz
mov
push
addr16
das
xor
xor
lret
mov
sarl
mov
fisubl
fistps
push
jno
push
mov
jg
imul
addr16
sub
mov
xor
jae
fstpt
arpl
in
sbb
movsl
push
sbb
ss
insl
xchg
dec
mov
in
add
stos
out
loope
jbe
ljmp
sbbb
icebp
dec
jmp
cwtl
mov
mov
mov
add
rorl
cmpsb
fmul
xchg
adc
cmp
aaa
gs
pushf
pop
into
imul
pop
ret
jmp
hlt
leave
shr
sub
ss
dec
inc
pop
ret
insb
ficomps
mov
rcll
bound
ret
cli
in
shr
xchg
cmpb
icebp
mov
imul
incb
pop
push
push
subb
sub
inc
or
lds
push
lds
add
or
int
jg
aad
rcrb
orl
sbb
faddl
push
fs
jo
jp
aas
mov
mov
dec
and
stc
or
xor
push
daa
push
inc
pop
jae
insl
mov
inc
cmpsl
enter
mov
cmp
mov
scas
sbb
mov
scas
sub
mov
es
mov
ret
popa
lods
aam
or
test
es
mov
test
xor
adc
ret
sub
pop
dec
sbb
xchg
mov
push
push
int3
xchg
add
add
jl
std
leave
dec
adc
dec
push
push
fcompl
scas
lcall
xrelease
or
mov
in
jle
orl
jl
aas
inc
xor
pop
adc
sub
sahf
test
mov
ljmp
rclb
shl
cmp
lods
sub
pop
lret
pop
pop
pop
jae
ja
iret
push
mov
lds
dec
add
jae
inc
cmp
add
jmp
test
add
xchg
mov
shlb
jle
jp
ljmp
imulb
adc
xchg
enter
lea
pop
inc
push
inc
sarl
scas
pop
xchg
jge
in
mov
pop
fs
inc
loope
test
cld
add
and
imul
push
and
mov
das
adc
rcrl
cmp
adc
mov
push
fstpl
cmp
es
push
dec
cmpsb
pusha
idivl
dec
popf
adc
jp
cltd
push
pusha
adc
jae
mov
push
xor
mov
push
leave
lds
movsb
and
leave
ret
imul
sbb
fnstsw
jle
pop
jo
inc
xchg
and
into
jae
mov
jae
mov
dec
xchg
in
sbb
xchg
push
arpl
jnp
sbb
push
push
xchg
loop
jo
jl
aaa
xchg
mov
dec
movsl
leave
add
xor
add
sbb
pusha
shrl
fcoml
shll
mov
daa
movsl
dec
cmpsb
xchg
push
imul
pop
mov
dec
rdmsr
cmp
pop
pop
jecxz
or
jns
inc
mov
jge
int3
push
push
xchg
aad
in
mov
adc
xor
ljmp
push
sbb
xchg
pop
verr
sarb
loopne
mov
dec
das
out
sub
add
test
cli
xchg
ds
jl
rcr
push
jnp
jne
mov
sar
in
xchg
xchg
xchg
add
test
sub
or
fs
mov
cmp
aam
mov
in
mov
or
jg
cmp
dec
mov
sub
ja
mov
mov
mov
pop
out
jge
xchg
jne
ret
cmc
aam
outsl
rcr
outsb
pop
dec
sub
pop
stos
push
push
sbb
aaa
insl
push
mov
add
mov
push
inc
push
mov
movsl
out
imul
push
insb
cmp
add
jle
loope
pop
xor
stos
stc
and
fsubrp
cmp
aad
inc
cmp
mov
pop
adc
icebp
mov
jecxz
lock
enter
pop
and
inc
jge
inc
jb
fldenv
sub
inc
imul
sbb
xor
ds
lock
aaa
mov
fcoml
jg
add
pop
imul
mov
pop
clc
stos
jmp
aam
adc
sub
xor
or
nop
xorl
mov
hlt
and
lds
sub
cld
xchg
mov
xchg
sbb
enter
bswap
mov
das
mov
jns
inc
pmaxsw
pop
test
xor
sub
cs
cmpb
andb
mov
nop
out
mov
dec
mov
mov
xchg
jl
loope
and
push
sbbl
add
pop
sbb
cwtl
sub
nop
mov
pusha
insl
jecxz
aas
or
adc
push
jns
test
fsubrp
push
pop
sub
mov
jnp
sub
gs
xor
mov
movsb
dec
mov
aas
inc
out
in
fsubl
push
popa
dec
insb
cmpl
mov
push
cmp
xchg
dec
jo
mov
sub
mov
repnz
daa
test
pop
push
push
dec
dec
mov
adc
idiv
xor
fidivs
bnd
call
or
xlat
leave
inc
fwait
jp
popf
or
add
cltd
jb
xchg
test
xorb
test
pop
and
and
ljmp
or
insb
cmc
xchg
rcrl
out
mov
add
add
dec
fcomps
jp
pop
sar
mov
dec
gs
lret
push
inc
in
lcall
lds
cmp
jl
daa
repz
ljmp
nop
scas
cwtl
cmp
addr16
addb
jbe
pusha
loopne
pop
lock
testl
fst
icebp
add
and
mov
xchg
mov
pop
cmc
and
loope
mov
pop
adc
shll
jb
pop
add
addl
imul
mov
xlat
mov
jecxz
pusha
push
stos
pop
lcall
sub
add
mov
pop
into
daa
pop
and
stos
loope
add
jb
sub
sub
in
add
mov
sub
mov
jb
es
jg
xor
mov
push
lret
mov
lock
in
adc
and
dec
int
sub
jnp
and
out
inc
mov
push
xchg
jmp
push
sub
icebp
pop
mov
addl
add
fprem
mov
jb
xchg
pop
int3
pop
out
or
vmovddup
jmp
push
jl
jecxz
pop
mulb
loop
xor
movb
push
inc
cmp
push
inc
jp
xlat
push
rolb
call
add
into
test
in
sub
imul
sahf
and
aam
filds
shl
mov
leave
fnstenv
push
mov
gs
push
mov
sbb
dec
inc
pop
xchg
stos
sbb
add
fistl
mov
xchg
xchg
out
inc
add
enter
hlt
aaa
mov
ret
lods
jl
movsl
popa
adc
insb
mov
fistpl
out
sub
lds
jmp
inc
popf
insl
sbb
inc
xchg
mov
sub
int
push
popf
imul
clc
pop
mov
or
addl
popa
xor
mov
mov
adc
xor
ss
enter
pop
aad
adc
sbb
bound
out
mov
add
outsl
cs
dec
out
fstp
mov
dec
jmp
push
std
xchg
jge
dec
jmp
fdivr
addb
fucomp
fs
inc
movsl
add
repnz
psubq
ss
cs
rcrl
in
loopne
lds
test
insb
mov
out
cmc
adc
fldcw
aam
cmp
push
out
cld
mov
scas
icebp
cld
fldenv
adc
das
jns
movsb
insb
jo
imul
sbb
rolb
mov
pop
inc
ds
or
mov
test
dec
inc
stos
shlb
mov
pop
sbb
scas
aaa
aaa
xchg
sbb
int
int3
clc
sbb
notb
or
push
cmp
daa
adc
aas
aad
dec
hlt
js
cmp
push
push
leave
and
in
xlat
sub
mov
rorl
loop
dec
mov
mov
fstps
les
mov
jo
movsl
dec
and
cs
xor
lods
xchg
push
arpl
and
loopne
jo
iret
adc
dec
mov
xchg
cmp
pcmpeqw
mov
stos
out
pop
cmp
mov
loope
into
xchg
add
stc
adc
adc
push
in
movsb
mov
mov
xchg
push
sbb
mov
inc
dec
js
dec
sbb
call
pop
push
out
enter
pop
cmp
popf
jle
inc
mov
push
pop
movsb
or
and
push
and
dec
mov
inc
sahf
shlb
nop
push
dec
inc
mov
mov
and
ljmp
inc
dec
aas
xchg
pop
xlat
call
pop
mov
xchg
subl
dec
xchg
lods
dec
insl
dec
inc
adc
enter
mov
enter
stos
mov
jb
aam
fildl
mov
push
lods
lret
push
neg
punpcklbw
outsb
clc
push
cmp
testb
mov
pushf
pop
jne
outsb
sbb
dec
sub
add
loop
add
mov
loope
orl
icebp
dec
movsl
scas
pop
cmc
iret
add
xchg
dec
cmpsb
pop
es
adc
scas
inc
pop
repz
xchg
dec
mov
outsl
dec
outsl
and
das
pop
pop
sub
adc
dec
lods
jo
inc
data16
mov
jno
push
ret
add
inc
test
loop
dec
fs
jge
mov
mov
clc
leave
add
push
xchg
fldcw
iret
leave
cmc
lcall
or
pop
in
in
shrl
dec
mov
dec
stos
dec
mov
fxam
add
mov
adc
sbb
add
test
pop
push
sub
sbb
in
add
inc
push
in
fstps
jp
mov
stc
jl
int3
inc
fs
mulb
pop
std
or
idivl
iret
xchg
jp
sbb
dec
imul
inc
ss
in
loope
pop
and
dec
pop
mov
movsl
repz
jne
repnz
enter
outsl
push
mov
lahf
sub
xchg
lret
or
sub
dec
adc
fisubrl
pushf
cmp
mov
inc
sahf
icebp
loope
dec
sahf
sbb
push
adc
cmc
popa
xchg
nop
xor
mov
enter
cld
add
mov
mov
test
les
dec
ds
push
pop
inc
ret
jo
pop
mov
repz
fsubs
mov
pop
mov
sbb
cmp
lcall
mov
push
jo
push
push
in
popf
xor
jmp
push
ret
adc
lea
xor
mov
out
arpl
mov
add
int
push
add
sub
jle
sbb
cmp
or
out
jno
clc
jo
repnz
xchg
jns
add
sbb
jmp
lahf
nop
sub
insl
mov
iret
xor
jnp
call
sbb
adc
out
mov
sbb
insb
shlb
xor
mov
cmp
jne
jbe
in
lods
inc
pop
mov
pop
mov
ja
les
test
inc
fldcw
mov
cli
fimull
xlat
jnp
xor
cmc
or
inc
and
imul
out
arpl
jge
push
jle
pop
fbld
push
fcompl
repz
dec
jno
mov
pop
jbe
mov
add
loopne
xor
pusha
mov
sub
std
cmc
daa
add
add
push
js
ss
imul
das
jp
insb
fcompl
repnz
mov
push
cmpsl
scas
cwtl
mov
cmp
jo
pop
xchg
or
fdivs
int
mov
push
sbb
or
jns
enter
cmpsb
mov
outsb
daa
shll
dec
addr16
push
mov
pop
pop
out
push
fwait
mov
imul
leave
and
stos
test
mov
mov
rcrb
jbe
scas
dec
pop
xchg
and
add
leave
and
push
cmp
lock
sti
mov
hlt
fimuls
test
loop
jp
stos
int
mov
sbb
imul
xchg
sbbl
mov
hlt
mov
jge
and
fwait
lahf
lret
movsl
pop
and
loopne
cli
pop
scas
jb
jmp
pushf
outsb
sbb
fxch
push
and
xchg
adc
loopne
sbb
jnp
xchg
inc
fdivl
addl
in
mov
repz
fiadds
cmc
sub
push
aas
mov
sub
inc
push
inc
test
push
or
fldt
inc
out
mov
jo
ds
dec
repz
push
call
pop
jns
enter
mov
push
jmp
push
add
mov
daa
test
pop
js
add
outsb
jne
dec
sbb
push
xchg
ljmp
jmp
in
jb
int3
icebp
rclb
xchg
lahf
cmp
sub
push
dec
adc
cmp
mov
sub
fwait
add
aad
mov
in
cli
aaa
xor
cli
add
xchg
mov
and
or
lods
arpl
dec
sbb
jmp
hlt
push
gs
sub
lods
mov
add
jle
mov
lret
jnp
cmp
sbb
cltd
lretw
imul
imul
aam
and
adc
push
mov
push
mov
xchg
stc
jae
je
ljmp
repnz
popa
inc
push
xchg
insl
lods
add
mov
aad
push
fwait
xchg
mov
notl
jmp
repnz
sti
add
loop
xor
adc
dec
je
insl
add
dec
aas
testb
loop
pop
mov
cwtl
repz
jp
dec
lea
in
sub
or
xchg
jo
loope
xor
inc
push
add
cmpb
push
inc
and
adc
dec
cmp
mov
jecxz
ret
jno
in
stc
sbb
testb
into
xchg
rcll
mov
add
cmpb
sahf
add
jb
mov
fidivs
loope
in
loopne
pop
mov
inc
mov
adc
jge
mov
jge
fs
jo
push
int3
xchg
sarl
inc
mov
rorl
sub
add
adc
loope
add
mov
sbb
pop
add
bound
jo
imul
add
push
jbe
pop
and
push
and
push
push
jb
mov
inc
sti
addr16
inc
sbb
push
add
cwtl
aaa
dec
mov
shll
sub
clc
lea
ja
dec
fisubl
fs
scas
mov
inc
jnp
das
mov
mov
push
ss
lods
add
xlat
push
sbb
jg
enter
pop
rclb
aad
mov
test
cvtpi2ps
aas
faddl
aam
mov
ficoms
shlb
jbe
inc
push
flds
mov
fs
bound
cmp
mov
xchg
inc
cmp
enter
xlat
popa
ja
out
sbb
xor
and
cmp
popa
clc
inc
mov
outsb
mov
and
pushf
test
push
aad
sbb
arpl
fildll
sub
mov
mov
call
clc
imull
sbb
rolb
rcrl
test
hlt
fidivrs
sub
hlt
and
adc
fldt
lcall
fdivrl
xchg
ret
dec
inc
cmp
pop
adc
enter
scas
sbb
ficomps
stos
int3
mov
out
loope
cmc
in
xor
mov
dec
pop
dec
cmpsb
fisubl
in
jecxz
lods
sbb
aas
sahf
mov
add
cmc
loopne
dec
loopne
rcll
pop
clc
lock
or
sub
dec
mov
inc
mov
pop
push
dec
insb
xchg
jo
popa
xchg
stc
pop
stc
sbb
push
mulb
aad
adcl
or
ss
xchg
cwtl
test
mov
cmpsb
xchg
dec
stos
adc
test
jb
jnp
pop
lds
sub
fnsave
pop
je
lcall
rorb
pop
mov
sbb
fndisi(8087
cmpl
sti
jno
adc
xor
imul
xchg
into
dec
test
xchg
mov
loop
jmp
insb
fucom
aas
test
mov
aam
enter
bound
lds
xlat
ffree
and
loopne
push
repz
pop
insb
clc
add
cmp
sarl
add
mov
or
xor
cmc
cmp
and
cmp
sub
dec
sub
jp
ljmp
test
imul
movsl
aas
fstl
cmp
push
lahf
jle
aaa
movsl
dec
shrl
subb
mov
mov
inc
cmpsb
aam
outsb
or
dec
outsl
xchg
cmp
pop
pusha
icebp
jle
push
inc
add
ret
addb
lret
sarb
sahf
pop
ficoml
push
cmp
lcall
mov
push
lods
add
pushf
cmp
popf
mov
cmpsl
repnz
xor
or
das
dec
in
xchg
faddl
xor
out
sbb
popf
call
mov
shl
loop
out
in
ret
dec
pushf
in
or
movsb
cmp
mov
out
pop
push
aaa
in
mov
shl
sahf
stos
sbb
xor
push
xlat
jp
xor
gs
mov
mov
movsb
loope
arpl
mov
and
fnsave
and
aad
icebp
jb
leave
pop
jmp
in
mov
int
add
xchg
adc
sbb
ret
dec
rorl
int3
cmpsl
cmp
pop
ds
cmp
paddd
cld
cmp
mov
popa
aam
mov
mov
cmpsb
aad
mov
push
sub
pop
lods
or
fdivrs
lret
movsl
ret
push
pop
dec
jne
inc
dec
daa
fiaddl
push
popa
in
pop
xor
mov
addr16
cmp
das
mov
subl
pop
mov
adc
sbb
cwtl
daa
xor
fcmovu
test
add
adc
pop
or
push
ret
je
cmpl
scas
js
pop
stc
lcall
mov
rclb
sbb
loop
loop
jle
adc
pop
je
sbb
add
mov
jae
lgs
nop
sbb
mov
push
cmpsb
xlat
sbb
inc
insl
rorl
fsubs
xchg
cmp
pop
jbe
mov
xlat
mov
mov
xchg
nop
jl
inc
aas
hlt
or
pop
in
sbb
fdivs
inc
xchg
and
icebp
mov
xorl
sub
mov
xchg
add
inc
push
sub
popf
sub
roll
addr16
lods
repnz
aaa
lods
jp
xor
jp
adc
dec
pop
inc
cmpsl
mov
imul
cmp
lods
bound
jp
or
mov
or
imul
push
loop
mov
mov
rorl
lods
jge
adc
push
cmp
push
fistpl
xchg
jg
push
add
lea
adc
shlb
imul
or
push
popf
pop
orb
xor
fs
xchg
ds
lcall
jg
repz
inc
mov
pop
out
xchg
rcrb
mov
movsl
decl
lods
mov
dec
ret
addr16
fidivrs
int
and
xor
ja
mov
cmp
jp
nop
adc
jmp
inc
xor
iret
decl
lods
dec
jb
fdivl
mov
scas
cmp
add
xchg
out
pop
fs
xchg
lret
lcall
mov
mov
je
xor
cmpsb
mov
ficomps
mov
outsl
mov
pop
bound
push
insb
std
mov
in
andl
inc
cld
pop
push
out
popa
int
mov
int
lds
sub
or
push
jmp
aas
add
fcomps
loop
fidivl
push
popa
sbb
std
ljmp
or
daa
cmp
arpl
inc
push
fwait
movsl
cmp
sarb
int
movsb
jl
daa
loope
add
lods
pusha
pop
pop
and
cmp
or
cmpsl
mov
hlt
aad
sti
mov
xchg
hlt
and
cmpl
mov
aam
call
xchg
xrelease
and
mov
rcl
fcoml
xchg
jmp
xlat
in
push
leave
jo
arpl
lock
push
imul
xorb
jne
xchg
cwtl
bound
test
adc
sti
adc
lahf
pop
sub
pop
push
clc
andl
lahf
addr16
popa
pop
enter
pop
push
push
shrb
pop
mov
aaa
lock
mov
stos
call
dec
or
or
incl
test
xchg
push
test
jnp
sbb
insl
insl
mov
ljmp
inc
xchg
das
loope
sarl
data16
adc
adc
push
int
jle
jb
xor
outsb
loope
aam
cli
fwait
repnz
fisttps
adc
mov
out
scas
imul
sahf
dec
dec
cmp
mov
insl
popf
insb
push
adc
lods
sahf
add
dec
sub
addr16
lock
or
sub
mov
rol
ljmp
sarl
fwait
in
leave
jle
xchg
xchg
push
jo
jne
or
inc
and
sub
add
xor
mov
fildll
mov
cwtl
xchg
mov
insl
into
pop
sahf
sbb
jbe
pop
cmp
scas
enter
daa
repz
cs
cmpsb
adc
pushf
push
fistps
leave
pushf
cmp
inc
xchg
lret
sub
jecxz
push
inc
xor
nop
or
rolb
bound
cmp
sahf
lds
and
fs
loope
sahf
imul
mov
stos
adc
cwtl
cmp
scas
dec
stos
pop
xor
mov
insl
xor
pusha
or
jno
test
lods
mov
sarl
xor
mov
adcb
inc
movsl
jecxz
jle
ret
cmpsl
inc
or
das
fucom
jnp
popf
scas
lea
xchg
aam
adc
jecxz
int3
cs
sbb
mulb
daa
or
dec
dec
jmp
sub
popa
mov
mov
xchg
ljmp
push
adc
mov
bound
mov
cmp
arpl
sbb
cmpsb
or
ret
mov
mov
cli
js
or
sub
rcrb
push
idivl
xor
push
sti
out
insb
add
shr
pop
scas
dec
xor
mov
jno
repnz
xor
and
adc
call
sbb
lahf
cmpsl
sahf
outsl
inc
into
ljmp
inc
push
sbb
xchg
xlat
sub
dec
nop
cmp
inc
mov
xor
stc
loop
adc
sahf
gs
lcall
push
aam
cmp
jl
and
loope
jp
aaa
dec
repz
mov
out
cwtl
lock
cmp
xor
call
repz
add
movb
push
iret
ret
xchg
add
cmpsb
push
mov
sbb
clc
sbb
mov
pop
dec
pop
sub
and
and
cmp
dec
jle
ja
test
fldcw
int
test
xchg
dec
xor
jmp
cld
das
ja
xor
cmpsl
imulb
loope
mov
mov
filds
pusha
sarb
add
sbb
inc
je
cli
mov
pop
pushf
or
push
insl
ja
stos
je
xchg
cmp
mov
mov
repnz
aam
ret
or
pop
inc
or
mov
cmpsb
rclb
push
mov
pop
nop
hlt
or
and
add
pop
jne
xor
sub
mov
int
gs
lret
jmp
addr16
movsb
rcr
cld
out
sbb
out
adc
aas
push
sbb
int
ret
inc
add
mov
sbbl
inc
jne
push
or
int3
inc
loop
jg
jns
repnz
nopl
dec
xlat
out
cmc
cltd
sbb
je
fstl
or
sarl
sbb
cli
add
movl
or
lea
mov
mov
out
nop
adc
xor
dec
jp
test
mov
inc
inc
push
lahf
data16
adc
aas
lret
es
out
mov
xchg
or
push
shrl
aaa
add
mov
xor
jbe
scas
mov
imul
sub
rorl
andb
pop
push
movsl
insb
xor
clc
fwait
mov
out
pop
dec
into
test
aaa
push
inc
fistl
pop
mov
mov
mov
push
jge
jne
enter
jge
ljmp
inc
aaa
xchg
mov
pushf
inc
mov
test
pushf
ja
cwtl
cmp
push
aas
dec
decb
jl
push
xor
imul
pop
xchg
inc
sbb
ja
loope
jecxz
mov
loope
dec
mov
mov
or
popf
pop
ret
roll
test
mov
pop
and
jo
jp
pop
sbb
xchg
cli
pop
leave
fs
scas
inc
push
xchg
add
roll
pop
fnstcw
scas
out
int3
and
push
movsb
add
movsb
jp
cwtl
mov
insb
js
movb
cmp
adc
aad
push
xchg
push
jb
xchg
sbb
pop
sar
xchg
test
scas
addr16
std
jae
xchg
popa
icebp
ret
adc
sbb
pop
pop
and
sbb
loopne
out
inc
imul
popa
fs
lods
repnz
icebp
cmpl
jns
mov
xor
inc
jo
jne
dec
test
dec
adc
pop
adc
mov
cmp
xchg
pop
dec
mov
xorb
push
fistpl
dec
dec
lods
fucomi
dec
jae
push
into
adc
test
mov
repnz
adcl
xchg
mov
shll
or
fwait
xlat
dec
push
in
mov
out
out
inc
leave
lods
jnp
jg
mov
sub
sub
xchg
imul
dec
mov
int3
lcall
cwtl
aam
std
dec
fstps
mov
xor
and
scas
scas
xor
mov
imul
mov
fistpll
sahf
inc
inc
cmp
xchg
cmp
and
lds
xlat
hlt
xor
dec
xor
aad
or
jno
mov
aam
pop
push
cltd
into
mov
xchg
ret
xchg
imul
jbe
adc
xchg
push
push
dec
and
mov
jp
nop
pushf
lret
adc
push
xchg
dec
fildll
mov
lret
adc
lcall
sub
adc
sub
lcall
sbb
pop
or
loop
xchg
repz
aad
lcall
jbe
stos
adc
outsb
pop
push
hlt
jl
pop
push
sub
nop
cmp
aas
fdivl
mov
pusha
and
xor
and
jp
shl
mov
mov
xchg
les
dec
sti
push
mov
mov
test
stos
xchg
or
xchg
push
jo
cmp
aaa
mov
in
lret
dec
fistpl
lret
mov
mov
sti
rcl
pop
cmp
jne
aad
jno
mov
mov
sub
cmc
and
hlt
sbb
ret
scas
pop
jge
lods
push
pushf
sub
mov
or
mov
inc
js
add
xchg
leave
and
jmp
pop
mov
jge
xor
and
dec
sti
pop
je
xor
mov
fcomp
xchg
ret
shll
xchg
xlat
mov
push
out
push
out
sar
push
jb
jge
sbb
adc
xchg
xor
fisubl
mov
xchg
dec
add
mov
push
clc
movsl
in
pop
pop
ljmp
clc
pusha
jo
ja
shll
loope
adc
jo
sub
mov
adc
sarl
cltd
into
dec
repnz
inc
outsb
lods
mov
int
or
sti
or
cmp
and
lcall
lods
push
cmp
int3
sub
in
jbe
aad
js
ljmp
lcall
jg
aaa
rcrl
lret
leave
sub
xchg
sub
cmp
inc
mov
test
js
and
dec
pop
andb
and
lcall
arpl
add
sub
int3
adc
test
mov
cwtl
cmpsl
test
pop
fstpl
mov
cmp
jnp
stos
sub
int
js
cmp
sub
jg
ret
fldt
outsb
and
push
icebp
cmp
ret
jl
loop
cmp
ljmp
jmp
mov
jae
mov
mov
xchg
aam
mov
je,pt
mov
pop
insl
insb
loop
rorb
dec
pop
mov
dec
pop
inc
xor
mov
jns
xor
imul
je
imul
mov
inc
mov
mov
subb
jb
adc
mov
mov
xchg
lods
xor
loope
sbb
pushf
sbb
rsm
cmp
pop
scas
cli
sbb
ljmp
ja
gs
in
jmp
inc
cmp
mov
mov
mov
dec
cmc
outsl
sub
das
pop
cld
xchg
cmpsb
push
xor
js
adc
gs
mov
nop
pop
add
xor
add
sti
popf
jge
or
lahf
test
insb
outsb
shlb
aam
jnp
fistpll
mov
add
cmc
xor
sub
aas
aam
pop
les
pop
push
pop
dec
xor
dec
stos
xor
popa
popa
mov
mov
push
adc
mov
daa
shlb
jmp
pop
popf
xor
stos
clc
mov
jp
popf
mov
jle
xchg
push
push
cld
outsl
push
push
xor
loope
decl
push
push
mov
les
cld
fisubrl
repnz
leave
cmc
push
cmp
out
jl
mov
roll
and
out
pop
inc
insb
test
mov
adc
scas
sti
cmp
outsb
mov
mov
dec
pop
sbb
imul
pop
nop
lcall
fildl
push
in
aad
pop
adc
shlb
int
pusha
adc
sub
jmp
and
mov
jp
adc
push
jne
fwait
cld
lret
fstl
mov
sub
in
push
gs
les
leave
and
std
mov
cltd
stc
bound
dec
data16
mov
std
shrl
mov
sbb
mov
cmp
loop
popf
adc
lock
mov
mov
cwtl
scas
aad
movsb
loop
mov
xor
imul
sub
mov
test
mov
out
fstpl
rorb
cmpsl
mov
icebp
sbb
dec
enter
jp
gs
push
add
xchg
inc
jbe
push
mov
nop
adc
jg
stos
lahf
push
enter
aam
inc
xchg
inc
test
lock
aam
scas
jnp
std
sub
jnp
popf
orl
sub
jae
mov
mov
in
adc
dec
sbb
or
pop
int3
ljmp
pop
dec
pop
scas
mov
dec
mov
xchg
xor
and
inc
adc
iret
lock
setbe
shlw
mov
and
mov
enter
outsb
mov
outsl
cwtl
and
ljmp
mov
gs
mov
xchg
in
fisttpll
lcall
divl
pop
mov
dec
lods
push
cltd
or
mov
jo
adc
xchg
faddl
in
mov
jg
xchg
test
xlat
mov
das
cmp
fldl2t
cmp
or
loopne
push
sub
in
rcrb
cmpsb
adcb
add
jbe
test
repnz
xchg
lcall
cmpsb
push
xchg
loopne
daa
adc
js
mov
lods
or
pop
lds
dec
insl
xchg
mul
mov
aad
sub
push
addr16
sub
and
mov
mov
xchg
push
stos
ljmp
add
dec
inc
and
cwtl
in
mov
nop
push
push
repnz
jle
loop
fistl
scas
jmp
mov
sub
je
mov
gs
fs
mov
repz
adc
cmp
pop
js
les
or
sub
mov
cmp
out
pop
cmp
xchg
pop
rol
sarb
in
or
in
cmp
mov
mov
jns
lds
mov
mov
sub
sub
sahf
popa
rcrl
les
out
test
nop
inc
jb
jae
add
mov
jns
out
fisubrs
in
push
mov
cmpsl
cmp
lcall
jo
cld
das
mov
call
pop
mov
or
lea
mov
mov
add
enter
adcl
mov
sbb
std
rcr
xchg
aam
xchg
jne
pop
stos
or
aad
mov
leave
mov
repnz
push
push
and
cmp
pop
pop
aam
inc
gs
mov
fsubl
rorl
lods
mov
cmp
test
push
sahf
repnz
mov
cmp
insl
pushf
jno
mov
mov
pop
jge
push
cltd
or
add
or
pop
push
xor
dec
jmp
sub
adc
dec
lar
dec
mov
scas
xor
sar
mov
fmull
sbb
into
aas
jl
orl
mov
jb
xor
xor
cwtl
scas
push
cld
and
push
jge
mov
sub
jp
clc
xchg
into
mov
mov
je
fsubs
test
mov
inc
lods
mov
rclb
movsl
add
pop
and
sti
mov
or
fwait
add
xchg
sbb
int3
sbb
pop
jb
lds
mov
stos
aaa
ljmp
mov
inc
and
mov
or
aas
jecxz
jle
adcl
dec
inc
xchg
xchg
pop
pop
mov
mov
in
pop
push
sbb
shll
xchg
sarb
pop
cmp
testl
adc
mov
xchg
call
jle
sbb
into
outsl
jge
repnz
pop
cmc
test
cmp
fwait
pop
loopne
push
or
push
jl
cmp
jnp
dec
jp
and
aas
fs
les
or
or
icebp
imul
dec
imul
xchg
shl
int3
cltd
sti
jl
in
in
orb
jnp
ret
in
dec
inc
dec
jmp
jecxz
jmp
imul
pop
arpl
loope
cmc
add
pushf
std
loop
and
jno
popf
cmpsl
adc
std
add
sahf
insb
dec
aaa
mov
add
jecxz
and
mov
add
lods
mov
xor
bound
inc
sbb
mov
je
out
leave
mov
das
mov
sti
cltd
out
test
dec
push
dec
inc
sub
outsl
pop
idivb
cwtl
loop
cmp
std
in
insb
mov
sub
push
in
shl
gs
pop
sub
jno
lods
ret
rcll
cs
mov
outsb
js
pop
test
sbb
jbe
mov
and
or
cmp
push
lahf
xor
sahf
ljmp
dec
push
cmpsb
jno
sub
insb
test
inc
mov
mov
cli
scas
fbstp
or
int
andb
push
pop
out
cmp
or
mov
jmp
iret
adc
shll
orb
out
incl
into
pop
popf
outsl
mov
ds
mov
subb
xchg
or
pop
dec
sub
pop
jo
ror
dec
sub
je
dec
pusha
lcall
jae
lds
int
loopne
mov
jns
outsb
jb
xchg
ds
repz
je
add
pop
mov
mov
stos
mov
scas
pop
addr16
fistpll
idivl
or
cmp
mov
loopne
lahf
xor
ljmp
xchg
inc
mov
xor
sub
pop
mov
jb
std
int3
outsb
lret
fsubrl
xor
decl
sbb
sbb
sbb
jne
sti
pop
pop
inc
xchg
mov
inc
pop
test
pushl
push
and
aam
movsl
push
mov
adc
loopne
mov
mov
repz
adc
jae
mov
cmp
in
enter
pop
jle
add
add
mov
pusha
jg
loope
push
test
out
mov
icebp
sbb
pop
aas
fcomps
add
shl
incl
aam
mov
ret
cld
repz
insb
daa
xchg
mov
movl
shl
aaa
or
push
pop
roll
inc
lock
push
xchg
out
aam
and
cli
add
bound
mov
jo
xchg
aas
cmpsb
out
push
jle
mov
sub
push
xor
cs
sbb
fcompl
mov
mov
inc
mov
inc
push
jmp
fs
icebp
xorb
or
in
ja
fs
lds
inc
jae
dec
sub
inc
cwtl
loopne
aas
push
adc
mov
hlt
xchg
xchg
dec
inc
sbb
jle
push
sub
aad
mov
insl
add
nop
data16
inc
push
es
mov
cmp
setp
nop
mov
ret
mov
push
or
test
int3
mov
or
jno
dec
fs
inc
add
mov
mov
cltd
and
mov
adc
cltd
dec
cmp
dec
rol
xor
xor
addb
lock
rclb
pop
xor
mov
sub
mov
sbb
inc
mov
inc
fstpt
adc
scas
bound
ljmp
ljmp
dec
js
rcrl
push
lret
jne
sub
xchg
adc
sub
or
das
fiadds
mov
adc
sbbb
adc
mov
push
lahf
dec
add
push
push
cwtl
sbb
inc
ds
mov
jg
dec
and
shll
dec
cmp
or
jae
mov
ror
jbe
pop
movsb
cmc
adc
daa
sub
imul
sub
cwtl
sbb
movsb
cmp
js
outsb
jbe
dec
loope
adc
fucom
xor
jb
push
jbe
xor
inc
das
jae
insb
jmp
ror
je
jg
data16
xor
adc
jno
dec
call
int3
cmp
je
sahf
cli
aas
mov
sbb
pusha
jb
addb
out
ljmp
ficoms
je
test
ss
push
popf
mov
add
out
xor
sbb
stos
add
push
jmp
jl
add
lret
jg
mov
mov
loop
dec
dec
push
std
sbb
in
mov
xor
adc
arpl
mov
mov
data16
pop
adc
pop
jne
adcw
pop
aad
jg
test
lds
mov
loopne
mov
repz
adcb
out
mov
mov
xchg
mov
push
sarl
repnz
cwtl
test
out
sti
fidivs
mov
jno
or
cli
dec
inc
push
xchg
lea
jbe
lea
in
cmp
mov
fsts
stos
jnp
adc
fmul
mov
das
pop
int
movsb
adc
popf
fdivrl
adc
out
mov
rcll
or
cmp
andl
aaa
or
mov
gs
lods
push
sub
push
ljmp
adc
arpl
jno
ret
ja
out
popa
jbe
pop
rorb
testl
shr
clc
shl
ss
scas
mov
ja
jno
mov
addr16
orb
fneni(8087
sbb
jb
test
and
popa
lret
dec
iret
xlat
shlb
faddl
push
dec
fs
or
sub
shlb
adc
xorb
add
mov
add
scas
daa
add
add
jl
adc
cli
movb
jl
jo
ja
inc
int3
mov
cmp
test
cmp
push
test
pop
mov
outsl
add
adc
xchg
and
inc
outsl
push
adc
movsb
jo
jge
xchg
mov
dec
rolb
cltd
lcall
jno
sti
inc
xchg
mov
imul
cmp
jle
push
mov
xchg
loope
jae
hlt
or
int
stc
mov
lock
add
stos
fcom
cmpsl
test
das
shll
mov
ret
cmp
pop
cs
push
cmpsb
and
sub
test
jmp
cmpsb
inc
inc
cs
icebp
pop
mov
inc
in
lods
rcrl
addb
leave
les
incb
push
es
ret
loopne
fcoml
in
or
pop
inc
scas
out
xchg
add
shlb
dec
dec
cmp
mov
xchg
lahf
pop
pop
pop
inc
sub
scas
test
es
inc
adc
popa
insl
xchg
xor
cmp
and
or
scas
push
setno
sti
imul
mov
pop
decl
in
outsb
or
outsl
mov
push
stc
adc
sahf
mov
movsl
pop
iret
push
xchg
lds
pushf
sbb
std
mov
outsb
mov
clc
in
outsl
jno
stos
sbb
lds
mov
or
addb
popa
cwtl
pop
push
mov
repnz
jnp
fmulp
imul
pop
lods
idiv
loope
sbb
xor
xor
mov
mov
dec
adc
sub
lds
movb
jecxz
out
mov
int
pop
or
jo
lea
daa
xor
add
cmp
in
les
test
cmpsb
adc
pop
ljmp
in
fisttpll
adc
ja
out
and
push
incb
cmp
out
orl
push
or
push
mov
fcoms
jno
in
in
add
push
fs
mov
mov
addl
mov
clc
sti
sbb
mov
scas
ja
mov
bnd
ja
mov
in
scas
imul
loope
add
jne
insb
test
mov
or
pusha
adc
push
movsb
push
jp
mov
sbb
int
xor
and
imul
adc
cli
cmp
out
or
out
sub
imul
fisubrs
dec
addr16
push
dec
pushf
insb
inc
mov
das
movsb
dec
jno
aam
cltd
aad
jb
and
mov
push
mov
dec
cmpsl
sbb
sbb
add
insl
aaa
jnp
sti
xchg
into
insb
sub
sarb
stos
jb
fsubrl
or
test
dec
out
jbe
ret
sbb
push
in
mov
ret
mov
adc
adc
jno
loopne
dec
sahf
es
daa
adc
adc
sahf
jge
outsl
mov
pop
cmp
xor
add
add
add
popa
sbb
and
lods
cld
loope
clc
mov
jns
adc
xchg
sub
cmc
mov
movsb
jnp
or
ljmp
jg
sub
dec
mov
sbb
sbb
into
push
or
cli
sbb
mov
add
xlat
mov
push
jge
xchg
fdivrp
inc
es
inc
jecxz
mov
fstl
int3
iret
inc
fidivrs
loop
aam
subb
rcrl
shlb
dec
sub
push
cld
js
mov
out
insb
and
cwtl
hlt
inc
fadds
gs
mov
xchg
ror
xchg
and
push
xchg
lea
xchg
mov
jb
in
push
sbb
push
inc
mov
ljmp
sbb
add
aam
loope
mov
das
and
inc
jne
out
into
leave
and
or
loop
outsb
in
into
mov
pop
dec
push
add
cmp
mov
xchg
loope
push
mov
push
lods
fs
xchg
cmp
adc
loopne
test
ret
and
sbb
filds
imul
lods
jge
cli
loop
int3
gs
add
mov
xlat
mov
mov
mov
push
das
ja
dec
ss
or
jb
push
in
add
fwait
cmp
xor
or
mov
incl
dec
in
rcrl
jp
add
mov
inc
mov
loop
inc
push
ja
repz
inc
lea
into
inc
push
fcomp
lds
stc
fisttps
iret
popf
shll
cmp
loope
push
xor
jmp
cmp
dec
movsb
xchg
out
jl
ret
pop
mov
rolb
mov
scas
imulb
cmp
cmp
ss
and
add
std
fistps
or
hlt
jecxz
mov
pmullw
lahf
popf
loop
or
fs
jno
sbb
loopne
out
orl
lcall
cmpsb
pop
pop
xchg
push
xor
in
lock
and
cwtl
repz
out
ss
mov
xchg
mov
stos
push
push
and
cld
adc
js
mov
jne
ret
clc
xchg
insl
fdivrl
inc
pop
inc
fbstp
add
adc
xor
xchg
insl
dec
mov
push
mov
mov
addr16
rol
pop
jnp
mov
pop
dec
jge
inc
repz
dec
movsb
xor
inc
insb
aam
mov
aaa
mov
cmp
mov
enter
test
lret
add
in
mov
mov
mov
lret
mov
inc
add
hlt
fistl
movsl
pusha
or
test
out
dec
or
cmpsb
iret
xchg
inc
lahf
mov
aad
scas
in
sarb
fs
sti
inc
lods
fstpt
jmp
stos
popa
adc
loope
xchg
mov
mov
ss
xchg
enter
cmp
mulb
push
xor
and
jno
or
xor
stos
ljmp
repz
mov
test
jecxz
lock
and
add
movb
hlt
cmp
add
daa
jnp
xchg
push
or
jg
lds
push
add
cwtl
leave
mov
lret
jb
stos
sub
pop
lds
adc
xchg
pop
out
pop
mov
jnp
nop
pushf
push
je
mov
xchg
popf
xor
inc
cmpsb
gs
pop
iret
imul
cmp
test
lea
ror
jp
popf
or
rcrl
psraw
sbb
test
addb
fisttpll
inc
pop
ret
loope
insb
fisubrl
pop
jmp
mov
lret
rclb
dec
jae
stos
hlt
and
pop
sub
movsb
sqrtps
daa
dec
jnp
aam
jge
xchg
in
movsb
repz
push
push
add
loop
in
ljmp
cmp
inc
out
jno
lods
cmp
sbb
loop
lret
out
push
mov
es
jmp
push
mov
jecxz
mov
jbe
inc
inc
mov
inc
andb
ljmp
imul
mov
sbb
imul
inc
push
test
xchg
iret
sahf
sub
xchg
mov
insl
dec
adc
imul
xchg
dec
ljmp
hlt
bound
xlat
fdivrl
jge
and
mov
lods
pop
adc
xor
pusha
push
mov
sahf
add
fmull
into
loopne
loop
mov
cmpsb
sub
jns
sub
out
mov
pop
sub
pop
push
pop
mov
mov
dec
cmpl
adc
shrl
xchg
in
adc
add
pusha
mov
jle
adcb
push
mov
imul
fsubrl
jns
mov
js
fildll
shlb
leave
rcll
pop
addb
inc
and
push
cmp
ja
leave
jle
add
sub
cmp
js
or
cmpsb
mov
inc
mov
shll
pop
popf
mov
leave
lods
test
stc
push
dec
cli
push
ret
fcoms
and
mov
popa
sub
ja
pop
inc
sub
sub
sti
jg
sbb
mov
add
std
pop
mov
ja
mov
pop
lods
lcall
adc
jmp
js
inc
cmp
cmp
xchg
mov
fnstsw
add
das
jns
rcl
ja
push
jecxz
mov
cmp
xchg
xor
inc
and
stc
daa
sub
jno
push
call
icebp
push
rclb
jns
adc
pop
cmpsl
lods
movsb
mov
mov
jns
loope
out
mov
stc
xor
dec
xor
sub
push
and
sbb
push
mov
pop
jmp
insl
imulb
and
std
pop
dec
fistpll
jp
clc
adc
inc
call
stos
call
popa
movsl
decb
mov
mov
cmp
inc
or
loopne
test
adc
bound
pop
leave
xchg
sub
jb
fcoml
fcoms
lods
lock
push
lea
push
mov
popa
mov
and
cmp
add
pushf
jle
pop
cwtl
ljmp
popl
cmp
jne
fiadds
lret
out
jnp
jns
scas
leave
adc
cs
mov
movl
cld
mov
cmc
cmpsl
je
push
jmp
xchg
mov
dec
lock
mov
mov
es
mov
sub
addr16
adc
xor
and
inc
js
or
cli
inc
mov
xchg
imul
dec
in
out
dec
int
xorb
jnp
jecxz
adc
nop
jge
into
sub
fdiv
jl
sbb
ljmp
loope
xlat
lcall
cmp
jno
ficompl
sub
loope
out
sbb
shll
push
dec
jnp
xchg
pop
testb
push
leave
insb
mov
inc
fisttpll
lods
pop
outsb
cmp
les
xorl
mov
movsb
fldt
mov
mov
lods
and
stos
adc
or
setl
jne
push
aam
xchg
insb
or
imul
sbb
fldcw
inc
cmc
push
push
cmp
sub
push
add
out
stc
out
lahf
mov
ss
fdivrs
jb
ret
out
adcl
or
jg
push
jno
imull
loop
jl
jbe
or
adc
aas
push
add
call
push
push
in
clc
ret
stos
addr16
aad
test
aaa
loope
in
neg
test
out
adcb
in
add
adc
into
and
inc
push
xlat
test
mov
mov
outsl
out
jle
mov
xchg
sahf
xor
inc
test
or
sub
push
je
fnstcw
sub
pusha
xchg
xchg
cmc
xchg
dec
pop
stc
loop
into
lock
mov
mov
jo
imul
addr16
fildl
mov
roll
adc
mov
lds
addb
add
add
out
test
fxtract
cmp
jae
mov
adc
ret
xchg
je
or
sub
inc
xor
stos
shl
inc
ja
fsubs
test
adc
jge
jp
stos
mov
shll
sbb
ret
cmp
fistps
leave
mov
push
fdivl
sbb
pop
mov
jno
jecxz
testb
sub
pop
test
lret
psubw
shll
mov
sub
ret
icebp
push
or
cmp
pop
ss
loop
cltd
andl
sub
jecxz
adc
or
cmp
cltd
std
sbb
or
push
sub
pop
rclb
and
lcall
sub
push
fbld
sti
mov
fcomps
movsl
fnstenv
adc
push
int
mov
aam
xchg
nop
or
test
cltd
in
jge
pushf
dec
jbe
sbb
and
add
rcrb
aad
lret
pushf
test
scas
int3
sub
xchg
ss
jle
insb
stc
fidivrl
decl
popa
cwtl
std
xchg
aad
aas
ja
xchg
inc
in
jnp
xchg
mov
sbb
push
adc
test
rcll
xchg
lock
out
or
test
pop
das
popf
push
xchg
mov
adcl
outsb
pop
dec
mov
adc
repnz
loope
out
mov
nop
add
add
or
sub
xorl
sqrtps
pop
inc
pop
mov
out
ss
xchg
movsl
mov
push
loop
cmpsl
lahf
xchg
rcpps
test
je
mov
popf
test
mov
or
ret
inc
cmp
and
lret
cmp
nop
jo
pop
fs
or
mov
lods
shrb
mov
mov
mov
sbb
rorb
int
sahf
jge
fbstp
out
fdivs
nop
pop
mov
jnp
jge
mov
lds
lods
int3
hlt
loop
loopne
jne
dec
pop
hlt
repz
xchg
mov
arpl
in
lods
les
fs
sbb
push
jp
sub
int
push
jae
iret
sbb
mov
ret
xor
cmpl
pop
pop
stc
lahf
push
negl
lcall
fmul
pop
pop
in
insb
push
nop
lods
cmp
outsb
daa
pop
cmpsb
push
dec
sub
jp
into
sti
push
mov
xlat
jecxz
dec
and
scas
mov
mov
sub
cmp
mov
ljmp
jae
dec
xchg
test
pop
in
xchg
daa
jecxz
cmp
jo
or
sub
stc
fnstcw
ja
adc
out
mov
add
sarb
xchg
subb
int
add
pop
loop
mov
in
xchg
add
mov
xchg
push
je
xchg
ja
fs
or
out
sti
hlt
xchg
in
out
and
xchg
or
sarl
jnp
rcr
cs
dec
mov
lock
adc
mov
aad
and
imul
jne
adc
push
pop
cmp
cli
sarb
pusha
iret
adc
dec
cmc
into
pop
repnz
mov
xor
mov
je
add
sbb
pop
cwtl
andl
pop
out
iret
movsb
lock
lahf
stc
adc
pop
ja
hlt
mov
push
adc
stc
insb
add
dec
ffree
inc
cwtl
je
cmp
inc
roll
cmp
jo
push
jns
pop
jp
add
or
dec
in
cld
mov
call
sub
mov
sub
dec
stc
std
std
mov
push
lock
mov
sbb
cmp
push
call
mov
es
out
sahf
stc
std
mov
sub
jo
jbe
push
and
add
imul
daa
imul
lods
pusha
mov
fbstp
stos
mov
jge
xor
mov
sbb
cmp
mov
cmp
icebp
shlb
orb
jno
xchg
gs
mov
cltd
sub
test
in
gs
ret
fisubrl
add
xor
adc
lahf
fwait
int3
sub
push
cmp
push
mov
insb
test
dec
adc
call
lds
cmp
notb
outsb
addl
rclb
movsl
dec
pop
and
ds
adc
or
ret
aas
mov
rcr
bound
jmp
jp
adc
test
jmp
push
pop
dec
test
inc
fsubrl
ret
xor
in
test
xor
int3
lahf
int
les
xchg
cmc
in
dec
jp
stos
hlt
mov
sbb
adc
xor
clc
scas
jno
inc
int
xchg
jp
call
jle
gs
sub
mov
inc
add
cmp
xor
sub
fs
and
pop
push
and
repz
pop
or
ds
movsb
icebp
or
xor
jbe
mov
add
sbb
cmp
jmp
adc
jb
sahf
adc
scas
pop
sarb
mov
loop
jecxz
sbb
ljmp
mov
imul
sub
inc
xchg
in
jg
pop
sbb
pusha
pusha
adc
mov
cwtl
test
xor
xor
movd
aad
jbe
imul
dec
ret
fsubrs
icebp
dec
sub
mov
orl
xor
jecxz
imul
mov
out
mov
jno
movsb
mov
shlb
mov
sti
cli
xor
test
or
jmp
cmc
dec
out
pop
jae
adc
aam
push
push
mov
cmp
jl
push
mov
jne
mov
bound
pop
and
loope
xchg
jl
pusha
data16
pop
inc
clc
outsb
inc
xor
mov
mov
mov
aam
cmp
cltd
mov
mov
xor
xor
jge
pushf
sbb
xor
mov
std
cmpsl
push
ja
mov
dec
cmp
xchg
jle
ret
sub
sar
in
fs
xor
pop
jae
jbe
inc
negb
push
mull
lock
shlb
pusha
push
loopne
sbb
icebp
adcl
adc
add
push
gs
mov
daa
pusha
cs
xchg
add
jg
jg
xor
cs
sub
jns
lods
inc
sbb
dec
jp
and
inc
mov
pop
push
test
stos
adc
std
xchg
lahf
out
out
and
and
ret
and
sti
dec
lods
sub
cmc
inc
rcr
adc
jns
bound
loopne
push
jmp
mov
dec
popa
add
rcll
in
movsl
sahf
or
pop
bound
cmp
cmp
ljmp
mov
pop
pop
jp
jp
adc
enter
js
popa
repnz
add
cmp
push
inc
jnp
scas
mov
mov
mov
jne
int
stc
es
cs
push
push
jnp
in
jbe
imul
xchg
inc
aad
inc
cmp
sbb
out
gs
in
push
daa
loopne
pop
mov
xor
push
sbbl
fwait
mov
aas
pop
cmp
mov
aad
rcll
mov
sar
daa
fbld
es
push
sbb
mov
mov
push
int
mov
dec
ror
jecxz
or
pop
adc
mov
pop
stos
cs
lods
and
and
inc
jecxz
inc
ss
dec
xor
pop
mov
test
add
cmp
jecxz
int3
outsl
int
cmp
and
stc
mov
and
mov
mov
jbe
test
inc
mov
daa
jmp
xchg
dec
sub
jae
loop
dec
dec
out
rcl
dec
ror
call
adc
push
inc
adc
das
pop
loope
fwait
test
push
mov
sbb
in
mov
es
outsl
imul
adc
ret
adc
cmp
add
push
jg
mov
flds
test
xor
sub
jecxz
pushf
repz
sahf
loop
dec
add
in
jno
mov
jge
imul
rclb
pushf
cmpsl
mov
push
flds
xchg
mov
cmc
leave
jl
nop
xchg
jns
mov
fwait
and
fbstp
cs
adc
sub
push
dec
out
mov
int
and
mov
sti
pop
jecxz
outsl
sub
xchg
jns
lret
xchg
mov
shlb
fldln2
adc
sub
sbb
in
out
xchg
out
mulb
jecxz
jne
mov
dec
sub
cmc
mov
cltd
test
imul
arpl
js
lods
in
jnp
dec
outsl
addr16
test
dec
sub
les
xor
inc
jmp
data16
enter
sub
mov
ret
mov
sbb
jnp
inc
add
push
clc
mov
mov
xchg
xchg
imul
add
scas
popf
lods
ss
popa
mov
into
sahf
mov
and
jge
or
jb
out
mov
out
mov
adc
es
hlt
xchg
jp
lret
push
ficomps
push
add
pop
sub
adcb
jo
pop
xchg
add
sub
sti
xor
aam
dec
outsl
fdivl
mov
pop
aaa
jns
enter
lret
adc
mov
sbb
bound
loop
shll
xchg
lods
mov
and
mov
adc
pop
inc
daa
jle
ljmp
xchg
add
mov
mov
xchg
cli
push
daa
jle
and
fnstsw
inc
or
int
cmp
nop
shlb
push
adc
add
add
add
or
jmp
pxor
add
stc
loopne
jl
fmulp
push
dec
ret
dec
jnp
sub
dec
lds
dec
das
ja
mov
outsl
mov
stc
mov
mov
cs
das
mov
inc
or
mov
mov
sbb
sub
mov
xchg
ds
imul
mov
fnstenv
call
and
inc
nop
decb
cmp
mov
fs
insb
cs
rcll
jl
push
pusha
pop
arpl
orb
cs
mov
push
xor
ret
iret
int3
xor
jmp
sbb
scas
push
dec
les
imul
push
into
test
jne
mov
dec
cmp
sub
stos
mov
lds
pop
push
das
mov
sbb
xor
cmp
mov
stos
cmp
test
mov
mov
fists
or
mulb
dec
dec
dec
add
mov
imul
inc
sbb
dec
pop
je
adc
imul
xchg
sub
in
bound
jno
fstl
aas
iret
inc
dec
mov
cmp
and
lea
xor
push
add
sar
mov
xor
dec
mov
js
mov
pop
cld
inc
cltd
mov
inc
mov
inc
ljmp
jl
pop
daa
fdivrs
dec
or
jecxz
inc
push
loope
roll
jge
cmp
sbb
dec
cmc
add
mov
insl
mov
jp
mov
scas
cmpsb
hlt
fstpl
call
xchg
add
sub
outsl
ret
adc
mov
and
and
scas
aas
push
loop
ds
xchg
and
sub
sbb
mov
fwait
test
mov
sub
cwtl
xor
sbb
inc
mov
inc
jbe
mov
iret
nop
jnp
pusha
movsl
stc
iret
movsl
push
push
sbb
test
mov
xor
cld
xchg
sbb
adc
xor
inc
mov
cmpsl
cld
stc
cmp
inc
adc
lods
scas
jns
jle
call
popa
cmpb
shrl
push
dec
movsb
inc
out
jmp
dec
in
and
inc
idivl
and
pop
sub
addr16
pop
xchg
mov
imul
xchg
jb
int
jnp
and
sub
iret
stos
jo
mov
and
daa
pop
inc
and
xorl
add
pop
sbb
repnz
jmp
frstpm(287
daa
inc
mov
movsb
fcmovb
rorl
mov
xchg
cltd
jne
dec
les
mov
mov
adc
push
jne
dec
jecxz
and
push
frstpm(287
jb
adc
xchg
movsl
pop
les
outsb
ja
arpl
loope
push
fadds
into
xchg
xchg
jbe
and
xor
out
jle
cmp
sahf
mov
cmc
idiv
adc
insl
lea
cmp
ljmp
shll
imul
sti
mov
fdivp
fs
inc
movsl
mov
out
jne
xor
push
adc
stc
sbb
movsb
inc
cmp
arpl
inc
mov
or
insl
mov
sub
push
pusha
aad
xor
icebp
mov
jne
add
jo
test
cmp
out
pusha
mov
sbb
movsb
xchg
dec
aaa
lret
mov
jns
mov
mov
dec
fnsave
push
xchg
bound
ret
jge
lods
adc
loopne
pusha
push
xchg
inc
sbb
or
icebp
mov
xchg
xchg
pop
movsl
mov
add
pop
or
cltd
push
sub
add
xor
aas
jg
popf
lcall
dec
mov
rcrb
pushf
int3
jae
dec
daa
or
mov
add
sub
int3
jg
lock
cmp
jae
sbb
data16
ret
imul
push
mov
aam
mov
inc
dec
cli
pop
dec
mov
and
cmc
jp
js
ret
cld
stos
enter
int3
and
subb
cmp
jmp
cmpl
xchg
in
push
or
xchg
hlt
test
vpshldw
sub
insl
in
dec
and
cmp
sub
ret
pop
popf
shl
cmp
sbb
std
out
xchg
cmp
dec
dec
das
mov
outsl
sbb
lods
lea
pushf
sub
cmp
dec
jo
xor
outsl
mov
sub
loop
inc
sub
xchg
loop
mov
xor
fsts
sbb
scas
test
shlb
mov
dec
cs
rclb
pop
loop
outsl
iret
jns
test
leave
out
sbb
fmuls
add
add
movsb
inc
das
add
outsl
or
inc
adc
mov
mov
jo
imulb
fdivr
lods
es
ret
outsl
aam
cmp
jb
and
mov
push
shlb
or
fbld
xchg
jmp
cmp
pop
ficompl
testb
inc
enter
mov
pop
xchg
mov
adc
adc
cmp
xor
and
test
fs
in
and
or
fisubl
add
mov
add
add
dec
loop
ss
dec
sub
js
adc
push
xchg
in
cmp
frstor
out
fucom
xchg
pusha
fcomps
dec
daa
add
mov
leave
ss
mov
pop
jbe
push
addb
mov
stos
mov
cmc
loopne
xlat
mov
mov
and
push
cmp
cmp
mov
aam
inc
lret
add
das
cmp
jle
int
dec
gs
cmpsb
in
ljmp
mov
iret
repz
xor
clc
jae
jo
mov
mov
pop
push
sti
inc
cmp
pop
outsl
and
loop
cmpsl
je
mov
push
push
lock
ss
xor
mov
xlat
xor
push
sbb
shlb
cmpsb
movb
das
loop
mov
mov
mov
ficoml
and
add
hlt
dec
jg
jmp
cmp
inc
mov
adc
jnp
sti
lahf
and
popf
xchg
scas
mov
jns
add
adc
xchg
repnz
jge
xchg
sbbb
pop
cli
cmc
cmp
jge
fimull
addr16
mov
fstp
andl
stos
shrl
mov
in
cs
mov
xchg
pusha
add
and
xor
jno
fwait
gs
daa
shrb
add
out
adc
pushf
mov
xor
test
movlps
lret
mov
xor
and
ds
stos
adc
pop
adc
aas
inc
cmp
mov
stos
push
or
pushf
dec
fimuls
scas
push
sub
inc
loopne
add
add
in
fmulp
xchg
stos
lcall
mov
inc
leave
scas
imul
or
mov
loop
mov
aad
push
out
pop
xchg
aaa
push
inc
hlt
fsubrl
cmp
sub
jge
out
adc
adc
mov
sbb
add
in
scas
dec
lret
jle
xlat
stos
das
fcmovnb
cwtl
cwtl
dec
mov
stc
pop
aam
sbb
stos
inc
jecxz
jns
mov
es
leave
sbb
fimuls
xor
inc
mov
ljmp
xchg
xchg
fidivrl
ficoms
mov
xlat
inc
in
lds
js
orb
jnp
rclb
push
inc
xor
js
addr16
out
inc
cs
cld
dec
rcrl
sub
lods
testb
xlat
pop
push
sbb
cli
xor
lods
pusha
leave
cmp
shlb
test
cmpsl
test
in
insb
cmc
loop
xchg
shlb
push
ljmp
imul
fnstcw
mov
aad
pop
adc
or
xchg
sbb
data16
adc
or
aaa
dec
and
fcom
dec
jp
stos
xchg
iret
cmpsb
or
test
xchg
rorb
add
inc
add
sti
rcll
mov
xchg
mov
or
aad
mov
dec
or
jge
jb
test
enter
ret
nop
out
fcomps
test
test
ret
jns
sbb
test
ss
lods
xor
pop
jno
sahf
mov
movsl
insb
data16
xchg
je
or
mov
add
adc
sbb
hlt
cmp
out
jnp
imul
mov
xchg
lcall
outsb
into
xchg
xchg
mov
fsts
push
lahf
adc
cs
adc
sub
mov
mov
add
ljmp
mov
data16
out
testl
ficoms
lret
test
adc
int
pusha
pop
icebp
cmp
jl
push
inc
dec
outsb
arpl
xchg
xor
js
adc
ljmp
outsl
les
xor
mov
mov
push
mov
xchg
in
notl
and
adc
mov
push
jno
mov
idivb
mov
xor
roll
int3
mov
movsb
aad
dec
clc
cli
push
and
mov
daa
out
ja
call
mov
mov
loope
stc
aad
sahf
sub
dec
push
idiv
incl
cs
push
xor
add
fs
je
adc
imul
mov
cmp
cmp
sub
sub
jl
and
mov
ja
packuswb
mov
or
clc
mov
jns
xchg
fwait
jo
test
add
xchg
push
sbb
and
mov
pop
cld
mov
lods
insl
push
mov
fs
xchg
push
xor
cmp
pop
test
jne
push
cli
out
lock
leave
fwait
scas
jae
dec
cli
mov
pushf
jl
xor
and
sbb
out
aaa
out
push
inc
mov
inc
sub
pop
test
fistl
subb
lods
or
hlt
mov
scas
fucomp
xlat
mov
je
push
adc
push
loope
mov
add
aad
cmp
jg
or
cmp
xchg
push
sub
js
jp
pop
divl
mov
and
jmp
nop
mov
lcall
fisttps
add
push
fsts
lahf
movzbl
adc
xlat
sub
add
cwtl
fidivs
sbb
cmpb
inc
jecxz
and
lds
in
inc
mov
adc
jle
sbb
jg
mov
shr
mov
movsl
test
sbb
dec
pop
adc
jp
aas
in
loopne
xrelease
ds
xor
sbb
xchg
bound
mov
sub
xor
dec
adc
scas
jae
stos
xchg
cmp
clc
fwait
jb
popa
push
loope
out
xchg
test
test
aad
outsl
xor
mov
cmp
pop
scas
fldl
pop
test
mov
add
mov
and
xchg
push
pop
sub
stc
jae
in
hlt
daa
jl
mov
dec
or
lcall
loope
ss
push
jns
nop
mov
inc
xchg
sub
mov
insb
lods
sbb
mov
mov
jo
inc
pushf
cmc
cmp
sti
mov
dec
cmp
dec
inc
loopne
mov
or
fmul
sbb
sbbl
sarb
loopne
int3
into
dec
popa
movsl
xor
lods
or
movd
mov
lock
orb
jl
mov
mov
lods
out
xchg
mull
xchg
mov
movsl
adc
adc
pop
movsb
inc
mov
inc
xchg
jle
mov
insb
gs
add
adc
pop
and
xchg
shll
sbb
ret
or
jl
xchg
ljmp
bound
and
adc
lods
sahf
les
enter
xor
lods
lods
roll
out
jno
xchg
lods
adc
mov
xor
leave
cmp
push
xchg
out
mov
test
ss
fcmovnb
sbb
or
push
cmp
jle
rolb
add
dec
icebp
dec
sub
cmp
rcrl
sbb
xchg
jns
jmp
add
add
cmp
notb
aad
push
pop
loop
cli
xchg
pop
lret
xchg
test
test
add
mov
mov
pop
mov
jo
fs
test
mov
ss
cltd
shl
pop
push
and
sbb
popf
inc
out
add
and
test
inc
sbb
xchg
sub
outsl
add
jne
fnstenv
adc
cmp
adc
add
jge
fcompl
enter
mov
dec
sarb
enter
or
pop
in
mov
lock
mov
pop
arpl
popa
js
imul
push
pop
dec
push
pop
and
mov
pop
pop
aam
stos
inc
fsubl
mov
popf
mov
xor
jl
mov
aas
loop
mov
dec
push
jno
push
mov
repz
mov
sbb
and
mov
int
adc
sub
sbb
cmpsl
pop
push
jne
jl
or
push
and
mov
and
fidivrs
mov
loopne
outsb
iret
cmp
pop
sarb
subb
xchg
xchg
xchg
fchs
push
mov
shrb
sub
adcb
jmp
out
lea
filds
and
outsb
mov
pop
cmp
outsl
xlat
fistl
repnz
jne
mov
adc
pop
outsb
and
lcall
push
idivl
sbb
sub
hlt
mov
ja
cwtl
lret
xchg
push
in
cmp
mov
mov
cmp
sbb
lahf
andb
jmp
iret
xor
pop
outsb
dec
neg
icebp
dec
loop
and
xabort
insl
gs
mov
aas
jae
fisttps
add
stc
push
in
cmp
sub
imul
add
cmpsb
cmp
out
push
pop
daa
jo
mov
adc
inc
sub
xor
pop
jo
push
and
xchg
cs
push
lahf
fiadds
imul
mov
sub
or
lods
das
mov
sti
shrl
nop
and
pop
cmpsl
out
in
add
lea
dec
stos
cmc
and
fbld
pushf
mov
scas
inc
push
mov
test
hlt
in
shll
mov
inc
leave
mov
jmp
dec
or
in
or
rcrl
imul
enter
shlb
jp
jl
or
inc
fcoml
repnz
adc
push
in
mov
test
xor
cmp
push
ficomps
pop
mov
sub
bound
push
test
mov
scas
pop
xor
ljmp
xchg
mov
adcl
cli
std
or
sbb
push
inc
decb
shlb
sbbb
push
dec
popa
xor
pop
scas
and
inc
mov
xlat
cmp
int
les
jnp
lahf
pop
out
ss
pusha
mov
je
add
push
add
xchg
sbb
mov
push
lret
or
or
test
sbb
popf
shrb
ds
push
sahf
and
loope
mov
push
inc
xchg
test
xor
sub
lahf
lretw
outsb
movsb
push
adc
mull
lea
js
jns
call
mull
out
lea
ficompl
mov
push
test
jp
loopne
clc
or
inc
jns
insl
in
data16
mov
push
dec
sub
mov
mov
aam
xchg
mov
out
cltd
fsubrs
xor
xor
xchg
nop
sub
mov
push
sbb
popf
cmpsl
adc
test
sub
inc
pop
addb
ret
aad
jecxz
jns
pop
cmp
mov
mov
daa
add
test
andb
mov
iret
mov
pusha
push
in
jnp
les
or
je
adc
push
es
jne
inc
and
ret
insb
xchg
mov
gs
add
jp
addr16
sbb
add
and
testl
pop
and
adc
icebp
out
jmp
mov
sub
jp
mov
xor
sbb
jmp
cmp
cmc
push
ljmp
test
filds
jbe
aaa
push
imulb
add
fnsave
shll
aas
sub
outsl
adc
pop
fisttpll
sub
outsl
mov
repnz
add
cmpsl
or
fadds
sbb
sub
cli
enter
int
and
add
add
daa
xchg
in
lahf
or
sti
incl
dec
sbb
lahf
and
mov
or
xor
bound
daa
mov
jg
dec
mov
fiaddl
sahf
pop
fadd
inc
add
ret
xchg
ret
test
mov
cli
test
hlt
fists
bnd
insl
pop
pop
pop
mov
sbb
insl
cmp
mov
clc
and
xchg
stc
add
das
push
push
jmp
xor
movsl
push
push
out
mov
xchg
or
pop
xor
jo
inc
mov
jnp
sub
hlt
aad
push
lahf
sbb
sarb
nop
push
push
adc
push
and
jp
mov
sahf
sub
xchg
adc
or
mov
xor
push
loop
lret
mov
xchg
mov
pop
aaa
lods
pop
xchg
lods
sub
loopne
mov
int
push
fdivrl
insl
hlt
into
jnp
xorl
jns
les
ret
mov
dec
jbe
and
ds
inc
sahf
jno
inc
scas
loop
sub
jae
ret
inc
and
or
popf
dec
dec
mov
jne
jg
inc
cltd
addr16
adcb
imul
xchg
out
mov
push
mov
sbb
mov
arpl
icebp
nop
insb
out
mov
mov
xor
mulb
or
test
inc
cmp
fcompl
lret
js
vsqrtps
pop
nop
mov
pop
xchg
lock
mov
adc
jnp
and
dec
push
mov
jp
ljmp
in
outsl
pop
cmp
adc
subb
mov
push
pop
scas
and
jecxz
inc
jo
enter
mov
pop
and
ljmp
lods
mov
divb
not
mov
inc
xor
and
ret
jecxz
ds
push
lea
mov
test
aaa
jp
sbb
jae
iret
cmp
enter
push
cmpsb
xchg
dec
lods
add
xchg
inc
inc
stos
mov
sti
add
dec
push
stc
add
jg
jo
sbb
sub
movl
mov
lods
pushf
lahf
lea
arpl
std
sbb
int3
jmp
push
jmp
sbb
fs
mov
mov
nop
imul
imul
xlat
jle
dec
push
data16
aaa
in
inc
aas
pushf
mov
push
push
push
xchg
push
push
es
pusha
std
xchg
mov
daa
testl
movsb
mov
mov
dec
jmp
popa
enter
dec
jmp
cmp
dec
pop
inc
mov
cmp
mov
inc
mov
xor
lea
xchg
jg
and
fs
or
cmp
xchg
pop
fmuls
inc
xchg
fisubs
aaa
fisttps
lods
pop
mov
repnz
sbb
push
cmp
sub
xchg
or
dec
pop
subb
testb
repz
cmpsl
jl
jnp
jne
xor
movsb
jl
xchg
xchg
shlb
nop
sub
xchg
xor
xchg
xor
push
push
hlt
xorb
in
jl
sti
push
push
lea
pop
push
push
loopne
dec
hlt
and
pop
popa
pusha
inc
push
fimuls
mov
lock
cmp
jmp
mov
scas
mov
xchg
mov
inc
iret
xor
jp
cmp
lahf
mov
icebp
stos
dec
loop
iret
enter
mov
mov
mov
mov
pop
jbe
adc
scas
stc
xor
push
xor
scas
push
in
insb
mov
mov
dec
lods
cltd
sbbb
aaa
dec
sti
les
cmp
test
or
jmp
inc
imul
add
push
repz
ljmp
pop
lea
aam
jle
jl
and
adc
lods
daa
xchg
mov
and
js
sbb
sbb
insb
adc
xor
inc
xchg
cltd
push
or
jecxz
aad
xchg
dec
rorb
pop
xor
imul
and
mov
dec
test
mov
mov
jge
vsqrtps
xor
mov
bound
mov
je
enter
js
jbe
cltd
nop
lahf
inc
outsb
add
test
push
in
xchg
lcall
mov
cltd
cmp
push
push
xchg
jo
mov
cs
cli
push
inc
mov
add
das
jns
push
out
adc
in
idivb
dec
sahf
fldcw
adc
sub
pop
xchg
lret
clc
jno
fstpt
subb
inc
sbb
test
test
or
subb
ss
or
mov
out
and
lret
xchg
jl
sbb
mov
fnstcw
xchg
xchg
pop
aad
or
fldenv
stos
addb
mov
push
dec
les
cli
call
add
test
mov
cltd
lods
jae
fsubl
cmp
sub
in
cld
pop
push
pushf
nop
es
out
and
dec
enter
cli
push
mov
push
test
or
je
pop
xchg
fsubrl
jo
fistl
mov
push
leave
mov
push
stc
xor
xchg
movsb
icebp
fldpi
pop
dec
insl
sbb
out
je
xor
xlat
mov
into
aam
mov
adc
jge
addr16
shlb
jge
pusha
out
inc
cmpl
inc
pop
lea
or
add
inc
and
pop
sub
push
push
inc
shrl
rcll
xchg
lcall
fistps
imul
cmp
out
jmp
mov
xchg
or
pop
rorb
dec
dec
sbb
les
and
mov
adc
sub
sub
xchg
dec
ds
xor
sub
xchg
pusha
cwtl
dec
in
sbb
mov
xor
aas
cmc
sub
add
adc
pop
adc
fsub
rcll
test
or
aad
fisttps
push
outsb
cs
mov
push
lret
push
sti
cmp
fildll
sti
push
arpl
adc
xor
cltd
outsb
jecxz
movsb
inc
inc
inc
imul
mov
call
in
mov
js
in
mov
addr16
movsb
into
aaa
mov
xchg
sbb
xor
mov
push
pushf
push
in
lret
xor
ss
scas
lods
movsl
lcall
stc
ret
jmp
stos
jns
ja
sub
stos
rcrb
shl
icebp
sahf
push
jl
push
mov
jno
sub
pop
push
lret
add
testl
pop
mov
and
or
mov
int
sahf
sbbb
mov
lahf
pop
and
mov
sbb
ss
mov
scas
cmp
add
mov
push
mov
iret
bound
sub
addr16
push
mov
xchg
in
int
fidivrl
sbb
pushf
and
outsb
in
lods
fcmove
addr16
clc
xchg
cmp
xor
jne
xor
sub
sahf
cltd
cmp
fistpll
dec
lcall
mov
cmp
jmp
push
fcomip
repnz
inc
and
inc
sbb
mov
sbb
lods
mov
push
sahf
xchg
xor
aaa
push
sarb
xchg
out
cmp
jl
push
and
nop
cmp
testb
int3
sub
sub
dec
ljmp
clc
push
es
jbe
in
xchg
push
or
repnz
ret
and
lea
int
cli
push
dec
sbb
mov
pop
pop
es
pop
mov
iret
imull
jns
popf
cltd
xlat
push
push
add
push
mov
sub
or
frstor
and
mov
xor
adc
rcrb
aam
xor
push
inc
xchg
clc
and
push
jge
push
mov
aaa
lods
sub
ja
lahf
stos
cmpsb
cmpsb
cmpl
mov
rcr
shrb
les
fs
xor
hlt
repnz
std
test
push
inc
xchg
sub
xchg
cmp
cmp
mov
popa
out
mov
aas
enter
imul
fldcw
lahf
cs
or
jo
dec
inc
icebp
and
es
inc
fstl
in
nop
notl
push
popf
mov
or
cmp
in
sub
insb
dec
add
add
aas
pop
xchg
or
pop
mov
fs
shrb
adc
jo
movsl
lret
nop
insl
mov
popf
pusha
adc
in
xor
aam
into
or
xchg
movsl
out
inc
aad
add
int
push
stos
jnp
xchg
mov
cmc
pop
fiadds
bound
mov
push
push
in
cmp
test
mov
inc
pop
shll
dec
or
pop
mov
mov
dec
icebp
mov
add
pusha
pop
sbb
cli
bound
add
cltd
sub
add
lock
inc
jnp
push
leave
jmp
xchg
xorb
jmp
push
gs
cmpsl
inc
push
div
fwait
and
push
fdivrl
inc
daa
dec
fimull
adc
test
aas
imul
out
adc
mov
mov
fcmovb
ja
dec
pop
pop
cwtl
xchg
dec
xchg
call
mull
jmp
cmp
pop
leave
test
lahf
loope
dec
sti
cmp
push
cld
sti
or
mov
cwtl
in
imul
out
movsl
sub
cwtl
sbb
loopne
dec
cmp
nop/reserved
xchg
jns
jp
push
lods
mov
xchg
mov
xchg
adc
mov
test
aas
jo
adc
push
mov
sbb
sub
mov
outsl
in
mov
pop
lret
sarl
outsb
adc
mov
addl
scas
rorl
mov
pushf
dec
mov
sti
xchg
pop
pop
iret
dec
xchg
aaa
out
mov
arpl
cltd
test
jo
clc
inc
cld
xchg
enter
stos
enter
clc
jbe
and
or
arpl
and
mov
test
lds
pop
popa
cmp
mul
testb
sti
imul
addr16
sbb
and
jmp
dec
sub
pusha
arpl
xor
xchg
cmpsb
ret
sahf
loop
inc
push
stc
push
cmp
test
incb
stos
jne
and
lcall
in
xchg
jl
lds
mov
push
into
imul
and
inc
xchg
mov
mov
andl
pusha
daa
jns
imul
or
or
or
cltd
addr16
mov
cmp
addl
stos
cmpsl
jmp
iret
loop
cmc
shl
ret
dec
or
out
adc
inc
and
and
jmp
int
ret
jp
adc
xchg
lea
adc
nop
cmp
out
decl
cmp
mov
out
jge
push
mov
jo
add
gs
shr
lahf
mov
add
ds
mov
mov
popa
cmpsl
sub
cld
mov
mov
xchg
push
cmp
pop
das
adc
fldenv
jns
xchg
fistpl
sbb
pop
add
xlat
or
pop
jo
loop
ret
sbb
xor
mov
aaa
pop
add
jae
sbb
ret
or
push
dec
shlb
inc
data16
je
lret
int
xchg
mov
inc
jge
fisubl
pop
mov
repz
pxor
add
outsb
notb
xchg
pop
aam
outsl
add
mov
sub
cmovg
fwait
xchg
insl
mov
mov
jne
sbb
or
mov
inc
pop
dec
lods
mov
pop
fbld
push
cld
xor
mov
dec
arpl
outsb
scas
xchg
cwtl
push
sub
xchg
addr16
mov
and
js
mov
mov
adc
aam
pop
and
cli
in
inc
test
or
mov
ffree
in
dec
mov
xchg
test
push
sahf
adc
or
xor
icebp
aad
mov
jl
mov
sbb
and
sub
scas
dec
jae
enter
icebp
push
aaa
xchg
add
lods
xchg
dec
int
pop
jg
out
pusha
lea
nop
loop
sub
or
sub
jg
push
sarb
jbe
xchg
cld
mov
push
xchg
pushf
test
movb
cmp
hlt
jecxz
dec
lods
outsb
lock
cmp
cmp
aas
pusha
push
xchg
jae
and
mov
rol
pop
sub
pop
xor
pop
sub
and
and
cmpsb
fnstsw
push
daa
or
scas
ljmp
ja
call
lock
and
mov
in
xlat
mov
mov
xchg
fdivrs
and
ret
dec
cmpsl
jl
jl
inc
xchg
jno
scas
lahf
jno
insl
pop
mov
and
or
cmpsl
addb
fwait
pop
mov
movsb
and
cmp
adc
xchg
lcall
mov
out
icebp
add
pop
cmpsb
dec
cli
push
mov
mov
sbb
ljmp
or
sbb
lock
popa
sbb
ret
int3
dec
push
mov
ds
jne
cltd
das
dec
inc
insb
nop
pop
hlt
push
push
sub
dec
loop
popa
add
mov
mov
xor
mov
mov
aas
jg
cli
ss
dec
mov
jns
lds
sarl
into
xchg
adc
ljmp
push
mov
xorb
mov
lods
in
lods
dec
lea
leave
jecxz
popf
aaa
push
push
jnp
aas
xchg
pop
js
push
mov
cmpsl
dec
xchg
sbb
loop
jge
insl
sub
pop
mov
mov
jg
loopne
mov
mov
scas
mov
int3
mov
mov
daa
test
sbb
jae
mov
inc
adc
pop
andb
into
cltd
cmp
or
mov
ret
and
mov
ret
fisttpll
movsb
fnstsw
lcall
xor
mov
insb
sub
sbb
push
sbb
jmp
push
and
xor
cmpsb
clc
mov
aaa
cltd
jns
pop
mov
dec
ja
jno,pt
mov
inc
jne
rcl
xchg
aad
out
xor
mov
push
jb
push
adc
cmc
movsb
fisttpl
adc
cmp
cmp
mov
adc
pop
mov
mov
cli
dec
mov
cs
inc
bound
sub
mov
and
repz
lcall
popa
jo
fsubs
sahf
in
mov
cwtl
ja
clc
sub
add
js
inc
sub
repz
cmpsl
daa
lock
out
daa
xchg
push
arpl
mov
sbb
dec
hlt
lret
jae
pop
jne
loop
sti
js
lea
cmp
and
cwtl
sub
mov
mov
or
ljmp
sub
jo
xchg
iret
cmp
ds
xchg
js
adc
sbb
popa
inc
xor
fimull
loopne
xlat
clc
movsl
shlb
repz
inc
imul
push
push
shrl
mov
popf
xor
mov
aad
mov
mov
ret
subb
into
mov
decl
inc
leave
ja,pn
jp
xor
jecxz
xor
lea
cmpsb
inc
lods
sub
sbb
divps
mov
add
jge
out
xchg
jae
test
sub
das
dec
aam
and
ds
clc
mov
out
push
jle
cmp
leave
jns
loopne
js
push
push
popa
jp
push
out
add
xchg
mov
dec
xchg
pop
ljmp
mov
push
jmp
cmpsl
xor
mov
clc
imull
aas
mov
fwait
daa
jmp
xor
sbb
jb
arpl
mov
adc
stos
es
jl
add
iret
in
xor
repz
clc
aad
std
je
subl
or
nop
cld
outsb
lret
mov
ss
xlat
xor
jl
xor
call
in
jmp
mov
and
xchg
pop
xor
fldln2
scas
lods
mov
mov
mov
sarb
pop
inc
xor
aaa
hlt
sub
and
imul
jmp
mov
sbb
xor
and
pmaddwd
stc
mov
inc
test
mov
mov
dec
fwait
shrl
movsl
jmp
pop
lahf
stc
pop
stc
and
sarb
out
xor
pop
lahf
daa
xor
inc
push
pop
adc
xchg
add
xchg
cwtl
push
insl
xchg
pop
pop
cmp
mov
mov
jmp
nop
xchg
inc
push
adc
cld
pop
lods
loop
sbb
cld
rol
enter
cltd
in
mov
jge
adc
and
loop
mov
stos
int3
push
aam
and
roll
sti
pop
dec
pop
movsb
jmp
outsb
sbb
inc
mov
clc
jmp
aaa
sbb
xchg
mov
mov
mov
xor
cs
or
jo
jnp
push
xor
inc
shrl
pusha
out
jno
jp
fiaddl
mov
and
or
sbb
inc
addr16
adc
xchg
push
pusha
les
pop
xchg
xchg
jb
mov
int
mov
mov
mov
push
ljmp
adc
out
stos
push
imul
cld
or
push
cmp
loop
lods
adc
jne
and
xchg
addl
insb
or
push
jecxz
xchg
push
icebp
inc
fildll
enter
add
mov
rol
or
sbb
cmp
stos
jo
inc
mov
sub
stos
fwait
pop
inc
sub
sub
into
jb
in
leave
iret
mov
in
mulb
xchg
call
sub
add
push
or
and
jmp
aad
notl
jle
idivl
sbb
xchg
mov
loope
cmp
mull
push
loope
push
in
inc
mov
jecxz
mov
in
fidivrl
and
and
ja
fs
sub
dec
sub
pop
push
xchg
jl
movsb
jge
cmpsl
repz
jp
in
dec
cmc
in
cmpsl
pop
pop
loopne
sti
iret
sub
repnz
jno
mov
lret
adc
gs
sub
shll
mov
imul
and
in
sahf
int
shlb
andl
xchg
cmp
ror
pop
jg
and
lret
nop
insb
aas
jle
pop
jp
inc
jnp
fsubrp
mov
int
jae
pop
pop
jle
enter
lret
and
pop
xor
mov
pop
test
and
jbe
addr16
repnz
jne
pusha
xor
mov
jne
cmpsl
pop
cmpsl
popl
dec
sti
xchg
cmpps
mov
xchg
scas
mov
movsb
mov
push
aam
ljmp
in
cmp
das
out
xor
push
add
add
xorb
stc
clc
sub
mov
popf
fsubrl
sbb
popa
loop
aas
or
and
pushf
mov
and
and
dec
sub
aad
inc
nop
out
mov
int3
movsb
fnop
test
cmp
ja
sbb
cmc
cmp
int
mov
sbb
jg
ss
jle
cmp
or
push
dec
in
sub
cmp
and
xor
inc
insb
mov
cmp
imul
xchg
cmp
adc
push
sbb
push
enter
out
push
inc
filds
mov
cmp
mov
adc
jecxz
xor
sbb
push
mov
and
sub
push
pop
adc
or
lea
ret
aam
and
inc
mov
push
insl
mov
fidivrs
hlt
sub
push
shl
jns
sub
rcll
cli
scas
sbb
std
fs
imul
mov
lret
pop
inc
lods
pop
xor
or
test
push
loop
cli
int
dec
mov
pop
pop
xor
stos
out
mov
sbb
testl
fldl
mov
insl
gs
arpl
pop
testl
cmp
sbb
mov
add
sub
inc
mov
add
mov
mov
lock
xlat
cmp
aaa
orl
mov
and
test
test
mov
repz
pop
mov
mov
push
dec
loop
iret
mov
pop
xchg
mov
inc
nop
enter
push
jl
dec
jne
pop
movsb
xchg
and
fdivl
jl
push
arpl
or
test
cli
xchg
sbb
pop
cvtps2pi
cli
stos
or
pop
enter
mov
push
scas
cmp
gs
cmp
les
pop
pusha
sub
call
fidivrs
fiaddl
cmpsb
sub
mov
insb
out
fadds
cmp
push
cmp
pop
and
add
fdivr
cmpsl
pop
das
adc
orb
pop
test
pop
push
xor
js
popf
or
xor
xchg
out
inc
add
loope
repz
cs
xor
ret
pop
dec
insb
mov
int3
rorl
mov
xor
inc
jno,pt
outsl
xchg
shl
adcb
sbb
jo
loope
pop
add
push
scas
cmp
mov
push
shrl
movsb
inc
into
leave
xchg
pop
mov
cmpsl
pop
pop
std
arpl
mov
adc
ret
hlt
xchg
cmp
and
adcl
sbb
jmp
sub
jl
cs
ss
clc
shl
mov
sub
mov
add
dec
pop
out
and
xchg
sti
andb
ret
sub
push
push
dec
shl
xor
sub
ficoms
lcall
test
pop
dec
push
sbb
imul
jl
mov
add
ret
push
cltd
out
test
jo
or
popw
or
cmp
jne,pn
out
gs
jp
and
sbb
cmpsb
ljmp
les
scas
xchg
and
push
add
xor
out
lahf
and
jg
adc
mov
adcb
movsb
jnp
and
and
mov
xlat
ficoms
cmc
mov
ret
or
cmpb
or
pop
cmpsb
dec
out
test
dec
sbb
push
sbb
cmp
jnp
and
pop
inc
mov
out
outsb
mov
and
dec
mov
dec
clc
sarb
dec
cmpsl
int3
xchg
inc
nop
mov
and
mov
mov
xor
cwtl
mov
and
rcrb
xchg
xchg
shr
rcll
pop
mov
add
push
aaa
cmovno
loope
lods
push
adc
adc
stos
jle
jnp
pusha
or
gs
pop
push
lods
pushf
cli
sti
mov
mov
cs
cmpsl
int
inc
enter
cmp
adc
ljmp
mov
mov
fsts
rorl
dec
out
sbbb
jae
push
xlat
lcall
cmp
xchg
repz
icebp
or
mov
or
jmp
jno
xchg
es
call
aas
or
jle
or
imul
mov
sbb
ret
fnsave
cwtl
xchg
pop
dec
mov
in
mov
rol
pop
push
pop
pop
inc
mov
rorb
mov
cmp
mulps
lret
cmp
mov
js
and
and
cmp
idivl
data16
or
xchg
cmc
or
les
negb
loop
out
mov
cmc
jnp
sbb
cmpl
push
sahf
lods
dec
push
push
ret
pop
sub
push
sub
in
push
jecxz
pop
ds
fildl
cwtl
fcmovbe
pop
dec
stc
xchg
mov
lret
loope
out
lock
mov
pop
push
inc
xchg
mov
push
ret
scas
lret
sub
movb
stos
add
stc
xor
inc
imul
adc
mov
push
mov
arpl
mov
inc
xor
pushf
hlt
xlat
add
sbb
mov
inc
xchg
cmp
sbb
mov
ja
mov
inc
hlt
push
js
shlb
push
jg
outsl
lret
and
dec
in
jp
es
xchg
out
test
add
push
mov
jl
cli
pushf
cmp
xlat
pop
call
loop
xchg
and
je
mov
lret
adc
sahf
repnz
movsl
frstor
mov
in
adc
sub
mov
ror
rcr
mov
out
out
xor
dec
mov
inc
lret
mov
scas
rcl
movsb
cmp
dec
mov
fildll
ds
dec
pop
out
je
cmpsl
daa
xchg
xor
leave
sbbl
enter
es
push
pop
je
xchg
adc
idivb
insl
pop
cmpl
or
cld
popa
dec
cmp
out
push
mov
roll
aas
flds
adc
inc
mov
arpl
dec
xchg
cmp
in
jle
mov
movl
test
test
je
mov
inc
shrl
xchg
jecxz
inc
mov
sbb
pop
iret
inc
stos
push
and
inc
inc
pop
in
xchg
and
ss
mov
in
xor
lahf
jo
push
hlt
insb
push
in
pop
lcall
out
mov
es
push
or
cmc
lret
xchg
fucomi
mov
mov
dec
into
and
lret
xchg
xchg
adc
push
aaa
or
inc
xor
pop
push
mov
mov
test
aaa
pop
pop
mov
and
sbb
cmp
adc
jb
sub
sub
mov
inc
or
push
dec
add
scas
jne
xchg
test
cs
pushf
jnp
bound
icebp
neg
loope
cs
fcmovbe
inc
popa
mov
jmp
push
jo
mov
cwtl
cmp
call
jb
rclb
inc
mov
push
mov
iret
sbb
adc
inc
arpl
jns
outsl
loopne
sub
int
dec
push
out
push
add
jg
mov
int3
pop
adc
mov
xchg
pusha
and
pop
or
or
inc
and
leave
inc
mov
fs
rclb
iret
mov
enter
stos
dec
nop
sbb
and
daa
or
or
adc
xor
sub
sub
xorl
adc
mov
mov
in
sbb
mov
hlt
jmp
jmp
push
pop
adc
and
dec
push
pop
je
or
or
xchg
sub
add
adc
in
outsb
lahf
dec
aad
out
inc
int
movsl
out
pop
sti
adc
sahf
mov
pop
and
aas
mov
add
mov
adc
jl
repnz
mov
adc
arpl
xchg
inc
shrb
pop
pop
lods
aam
je
dec
ret
repnz
lods
push
ds
scas
or
test
xchg
sahf
push
mov
cli
xchg
icebp
cmpsb
mov
and
sub
add
popf
cli
push
ds
mov
or
test
dec
adc
leave
lods
jp
sub
adcb
inc
rclb
xchg
cltd
sub
dec
gs
dec
out
jne
inc
mov
dec
loop
pushf
rcll
data16
sarb
xlat
xchg
mov
mov
xor
jle
stos
sbbb
sti
insl
sub
push
sub
popa
sbb
ret
popa
pop
std
push
mov
pop
lret
lock
test
inc
xchg
sarl
mov
or
jbe
sub
clc
adc
ljmp
xchg
lods
pop
sbb
add
clc
orb
mov
jae
mov
lret
test
sub
inc
mov
movsl
adc
and
push
inc
rcl
lahf
cld
fdivl
in
pop
lahf
push
loope
pop
jl
mov
mov
scas
pop
outsl
ljmp
cwtl
xor
sbb
stc
test
jne
jae
cwtl
test
es
mov
inc
inc
xchg
xor
mov
out
mov
fiaddl
jl
cmp
jae
jns
mov
cwtl
inc
out
push
mov
stc
fldcw
sub
test
pop
pop
in
push
aam
push
pop
ret
xchg
iret
or
jmp
add
cltd
inc
stc
sub
ljmp
mulb
aaa
out
dec
sub
leave
aam
sbb
push
ret
shl
xorb
sbb
enter
outsb
aam
cli
aam
sbb
test
jb
inc
dec
jno
push
add
data16
stc
scas
outsl
fcoml
fildll
lods
outsl
stc
jmp
adc
sub
sub
mov
xor
add
jl
mov
jle
xchg
loop
int3
ret
outsl
add
xor
or
into
cmpsl
xor
lret
fisttpll
outsl
insb
cmp
push
je
fcomi
jmp
inc
repz
lock
movsl
negb
ficoml
clc
outsl
out
insl
dec
pop
jge
inc
les
jl
cld
mov
pop
push
call
frstor
dec
and
inc
jl
popf
out
dec
xchg
and
in
dec
repz
dec
ficomps
jae
int3
jp
dec
or
sub
add
inc
push
xorb
stos
leave
jne
aas
fildl
dec
nop
repz
sti
imul
sbb
ja
shrb
xchg
lock
jae
out
mov
es
and
rcrl
divb
in
mov
outsl
and
lods
or
lock
mov
test
jecxz
mov
push
outsl
clc
push
push
dec
pop
imul
cmp
or
pusha
or
fbld
and
ret
mov
aas
cmp
mov
xchg
and
testb
mov
or
pop
pop
lds
cmp
scas
lahf
daa
sti
aas
test
daa
loope
call
lret
out
cli
cwtl
lock
pop
push
daa
lea
loopne
mov
adc
ljmp
in
cltd
xor
dec
test
iret
inc
pop
shr
lods
lea
negb
bound
dec
mov
in
in
jno
inc
repnz
mov
adc
jb
adc
jno
inc
movb
leave
cmp
jg
adc
push
ficompl
xchg
xor
dec
or
sub
mov
fdivrl
ret
inc
pop
jle
jle
mov
fildl
xor
push
mov
jbe
mov
cs
daa
push
pop
sub
fists
sbb
cli
mov
sti
mov
dec
out
outsl
push
call
push
pusha
jmp
and
mov
stc
inc
xor
xor
push
pushf
fdivrp
jg
xchg
fsubp
xor
add
xchg
pop
out
jmp
inc
or
lock
mov
mov
gs
dec
in
lret
imul
shrl
lcall
into
or
nop
mov
or
push
insl
stos
js
or
mov
cmp
iret
test
loopne
insl
add
sbb
scas
cmpsl
mov
ret
out
lods
mov
and
popa
xor
or
in
stos
test
bound
sub
push
cmp
mov
inc
jecxz
add
nop
add
rorb
adc
jae
xchg
sub
mov
lret
hlt
sub
je
jmp
sub
mov
inc
mov
fmull
mov
pop
cltd
and
mov
test
data16
fistpl
xor
xor
xchg
ret
add
sub
xor
sbb
mov
ret
rcl
nop
xor
adc
dec
mov
or
ret
push
mov
and
mov
mov
iret
bound
insb
dec
mov
into
xchg
enter
addr16
jmp
cmp
jb
popf
cmp
out
testl
mov
fs
mov
out
test
test
in
mov
xchg
mov
jbe
xchg
sub
jo
mov
fldenv
in
test
cmp
mov
lock
test
adc
out
or
cld
push
addl
aam
lea
cmp
pop
pop
mov
mov
faddl
push
not
movswl
into
lahf
ds
push
dec
je
aad
bnd
stos
jae
inc
and
xchg
repz
cmp
adc
mov
pushf
mov
cwtl
push
cli
loope,pn
ljmp
dec
mov
inc
jbe
repz
in
jecxz
outsl
pop
mov
inc
inc
pop
adc
dec
or
imul
mov
xor
adc
js
inc
hlt
sbb
outsl
cmp
xor
dec
insb
ds
xchg
movsb
cmpsl
ljmp
inc
dec
into
jecxz
and
mov
nop
jg
push
call
inc
in
lds
scas
mov
mov
jbe
add
cmp
imul
test
jle
cwtl
cmp
jne
mulb
pop
cld
xor
mov
and
sarb
mov
andb
add
insl
je
test
lret
sti
and
adc
mov
xor
orb
mov
mov
mov
sahf
or
cmp
and
push
xchg
call
jp
mov
lret
scas
repz
fwait
cmp
in
add
dec
jecxz
mov
xlat
dec
popa
adc
jmp
out
shll
sub
xchg
mov
adc
bound
icebp
inc
das
jmp
and
aad
sub
setno
dec
hlt
dec
sbb
lcall
cmp
and
mov
xor
pushf
aad
mov
std
adc
xor
mov
add
cmc
add
xor
mov
fdivs
mov
cmp
xchg
loopne
adc
pop
iret
jge
mov
fs
jmp
mov
lahf
dec
sbb
or
jge
rclb
and
jecxz
lret
jmp
pop
inc
dec
gs
repnz
xchg
pop
cmpsl
nop
jmp
or
inc
pushf
js
inc
por
dec
inc
push
and
cmp
inc
ret
inc
std
stos
mov
inc
shlb
sbb
cmp
fwait
xlat
das
test
pop
or
bound
add
mov
and
outsb
mov
cmpsl
or
popa
movsl
push
push
xchg
adcb
add
push
stos
gs
fcompl
push
sarb
rcrl
adc
push
xchg
dec
rcrb
daa
lea
out
idivb
sub
pop
das
rcll
adc
lods
rcrb
mov
xchg
cld
sbb
idivl
pop
das
imul
push
add
sbb
dec
mov
inc
mov
push
lcall
scas
xchg
ljmp
in
rcl
mov
cmpsb
jg
jl
and
pop
jl
inc
sub
scas
mov
scas
aad
es
jle
dec
xchg
shl
fsubrs
into
mov
into
xchg
mov
dec
sarb
pop
jno
xchg
sbb
dec
or
push
daa
adc
std
jno
imul
cltd
gs
addr16
cmp
jno
imul
addr16
add
push
ret
and
and
dec
cmp
sbb
adc
cmp
inc
into
xor
lcall
inc
jb
js
sub
push
fidivrs
push
aad
repnz
dec
pop
push
or
cltd
or
inc
mov
pop
nop
pushf
nop
mov
out
cmpsl
iret
sarb
cmp
ret
pop
pushf
cld
js
out
or
jno
out
or
sahf
ret
scas
call
pop
jne
sbb
daa
cmp
mov
mov
stc
cmc
push
add
push
sub
test
dec
or
cmp
and
or
mov
mov
mov
and
add
xchg
pushf
test
jl
fdivl
inc
xchg
mov
sbb
cmc
movsb
jecxz
insl
adc
adc
outsb
mov
push
dec
xor
sti
jl
cmp
sbb
pushf
xor
leave
xor
popa
sbb
add
jmp
pop
cmpsl
or
popf
popf
push
xchg
loope
and
sub
jne
sbb
inc
jge
jns
dec
adc
mov
push
fcompl
add
adc
push
pop
filds
mov
xor
jb
cld
lock
fsubr
add
sub
into
sub
out
sub
fimuls
movsb
test
das
lret
cmp
push
jg
cmp
or
out
fadd
mov
and
sub
xchg
add
icebp
cli
std
push
mov
out
jl
fs
push
push
fs
push
push
push
int
pop
xchg
pop
ret
adc
in
and
das
ja
ret
xor
std
push
lret
enter
iret
cld
jb
test
cmc
xchg
fistl
jo
loope
hlt
sub
mov
or
ret
outsl
lods
es
insb
leave
push
cwtl
mov
jo
or
test
adc
cwtl
out
mov
rorb
xchg
mov
push
push
and
push
lcall
fdivrl
pop
or
jp
xor
adc
dec
cmp
mov
in
mov
out
or
nop
mov
inc
lcall
jp
xchg
lea
rolb
or
lret
rcrl
or
inc
push
push
cmp
mov
shrl
sbb
jecxz
dec
cmp
sub
es
sub
in
bound
pop
add
loope
mov
and
scas
leave
xor
sub
push
or
sbb
lods
pusha
ds
pop
sbb
inc
dec
push
xor
adc
nop
pop
std
mov
ljmp
subl
adc
lahf
mov
mov
jl
push
gs
cmp
pop
sbb
clc
iret
stc
mov
ret
or
roll
jge
jno
cmpsl
mov
arpl
repz
call
lods
mov
and
xor
popa
push
jae
mov
mov
xor
fidivrl
cmp
and
iret
or
shlb
mov
mov
ja
lock
and
lods
int3
pop
or
enter
pop
xchg
mov
andb
push
add
or
scas
sbb
lock
fisttpll
adc
dec
imul
xor
pop
pop
orl
iret
jl
arpl
and
sub
or
jg
cmp
scas
rclb
push
addr16
mov
sub
aas
inc
addl
xor
dec
mov
test
mov
mov
cmpsl
test
out
jecxz
negb
das
outsb
mov
xchg
push
jl
enter
cwtl
push
fldenv
faddp
cwtl
fistps
ljmp
xor
mov
mov
xchg
xor
lret
insb
test
std
cmp
pop
es
call
je
adc
sbb
or
std
mov
jecxz
sub
adcb
and
dec
and
mov
ljmp
out
insb
xor
pop
push
sub
and
xchg
es
out
idivb
inc
push
ja
stos
or
adc
mov
insb
enter
movsl
movsl
loope
in
sub
add
mov
call
fndisi(8087
jg
jnp
loop
into
daa
test
aam
mov
jne
adc
jecxz
lret
roll
rorb
mov
mov
pop
inc
in
into
pop
cwtd
insb
pop
lret
rorb
push
push
nop
adc
mov
push
dec
xchg
xchg
pop
mov
hlt
in
mov
test
sti
pop
mov
or
xchg
stos
push
dec
jecxz
popa
jg
jge
sbb
retw
lock
out
xor
cmp
movb
push
mov
xor
add
shll
loopne
jae
xchg
fstp
cmp
push
xor
lret
ljmp
pop
mov
subb
mov
call
cmpsb
push
pop
add
dec
sub
mov
movsl
xchg
cmp
mov
movsl
leave
and
push
fdivl
adc
pop
mov
insl
cs
mov
jbe
mov
jns
mov
xchg
movsl
mov
xor
jbe
nop
lds
mov
sar
das
repz
push
cs
cmp
rcr
imull
pop
and
cmp
out
popf
mov
push
mov
xchg
jne
int
dec
clc
pop
sbbb
cmpsl
add
fisttpl
adc
in
jg
test
shr
pop
les
testl
mov
adc
sub
mov
repnz
cmp
jbe
jp
in
scas
divb
cmp
mov
fwait
mov
rcrb
cmp
lods
add
pushf
scas
call
push
pop
sahf
scas
fwait
cmp
out
jecxz
pop
mov
add
push
or
pop
jns
clc
mov
pop
dec
fiadds
jnp
cltd
jle
mov
sub
fimull
int3
adc
scas
sbb
out
fstps
jg
jg
add
jp
shl
add
sbb
sub
xchg
pop
imul
mov
loopne
jmp
rolb
dec
xchg
dec
repnz
or
loope
out
aad
cltd
jb
sbb
mov
aas
adc
jp
leave
call
sbb
mov
pop
mov
pop
dec
add
test
push
mov
pop
je
or
loop
ds
cmp
lea
and
or
outsb
jno
mov
jle
arpl
das
jae
push
pop
xlat
repz
fldl
cmp
mov
repz
sub
lret
xchg
pushf
push
addb
xchg
mov
xor
pop
pop
add
cmp
nopl
out
lret
inc
cmp
mov
movsl
ja
ss
cmpsb
add
fldl
adc
pusha
push
cmp
jns
leave
pop
xchg
jae
jns
lahf
cmpsl
xchg
mov
lea
sub
jle
adc
inc
repnz
les
aaa
test
xor
daa
fsubrs
mov
lret
mov
lods
mov
mov
aam
mov
cmp
scas
nop
sahf
mov
mov
loope
dec
lods
aad
rorb
inc
pop
or
and
mov
pop
aas
aam
or
popa
jno
sbb
push
mov
imul
cltd
pop
fnstcw
xchg
cltd
and
out
aad
xchg
movsb
cld
push
cmc
add
lods
dec
addr16
aaa
xchg
stos
arpl
xchg
rclb
loope
aad
pop
inc
mov
sbb
adc
pop
std
fsts
hlt
or
add
arpl
mov
icebp
and
and
inc
sbb
and
mov
aam
xchg
mov
nop
push
mov
sbb
inc
aad
jmp
mov
inc
xor
inc
outsb
pop
adc
mov
push
call
ds
in
rorb
xor
mov
mov
mov
mov
ljmp
fs
aam
cmpsl
lret
ljmp
out
jecxz
lods
in
dec
xor
or
mov
fst
pop
sbb
movsl
add
sub
sarl
sub
push
bound
gs
loop
bound
scas
lods
out
enter
rclb
gs
xchg
mov
ljmp
adc
mov
xchg
imul
enter
sti
scas
jbe
push
imulb
push
dec
cli
pop
notb
jl
push
adc
mov
adc
mov
add
jp
jge
clc
es
scas
mov
cs
xchg
orb
repnz
add
loop
out
mov
adc
adc
inc
lcall
xchg
ds
int3
lods
jl
push
mov
xchg
aad
inc
mov
mov
pop
adc
cmpsb
enter
rclb
add
dec
lods
pop
xchg
ds
jmp
lret
loop
mov
xor
addl
loopne
or
pop
das
mov
jl
jp
cltd
and
sub
fisubrs
inc
cmp
or
xor
push
lods
xor
lret
fs
lret
mov
cmc
mov
into
cmp
and
xor
pop
fisttpl
pop
rcll
shlb
dec
imull
lcall
jle
jl
ficoml
sbb
pop
lea
loop
testl
imulb
scas
stos
in
xor
inc
js
jo
add
mov
jg
push
int
es
in
add
mov
clc
xchg
shrb
loop
dec
mov
lea
out
and
cmpl
test
push
stos
test
lods
mov
incl
jge
push
into
sbb
mov
aam
jp
mov
insl
add
adc
pop
or
hlt
outsb
ss
sbb
and
mov
mov
xchg
mov
push
xchg
add
popa
xorl
sbbb
mov
es
daa
hlt
push
xlat
dec
fldt
jmp
xchg
mov
xchg
and
scas
add
mov
sarb
xlat
sbb
shlb
aad
insl
sbb
mov
insl
int3
lcall
cmp
aad
mov
outsl
imul
adc
js
test
in
popf
stc
and
inc
in
bnd
fimuls
xchg
arpl
inc
cwtl
inc
jmp
cmc
insl
aaa
mov
adc
push
jo
adc
into
das
and
push
mov
in
data16
cmpl
cmp
jl
add
hlt
pop
cmp
ljmp
js
call
push
xchg
mov
pop
scas
mov
cmpsb
lods
dec
jbe
jbe
dec
out
pop
jmp
sbb
je
add
ficoms
testl
adc
sbb
lcall
dec
aaa
xor
loop
jns
pushf
int3
push
jo
idiv
pop
mov
jp
int3
call
jo,pn
imul
jne
ljmp
lods
testb
sti
loopne
out
cmp
lahf
and
and
sub
jecxz
adc
lret
call
jae
pop
aam
inc
jecxz
xchg
xor
lea
mov
and
fisttpll
outsb
in
test
loop
lret
mov
divl
icebp
and
sti
inc
testl
or
call
loop
rorb
iret
outsl
out
mov
or
outsl
sbb
xor
dec
push
into
mov
jae
mov
xchg
test
jnp
lahf
mov
and
incl
sub
mov
push
je
leave
add
push
cld
imull
mov
sbb
add
xchg
cmp
xchg
scas
mov
ficompl
fcomps
and
jmp
lods
aaa
jns
push
adc
test
pop
jns
outsl
mov
imul
inc
adc
mov
and
out
lea
sbb
push
shll
test
cmp
clc
fs
inc
lcall
mov
lods
decl
xor
mov
inc
cltd
push
imul
into
inc
leave
in
mov
mov
imul
mov
inc
incl
aas
lods
andb
das
xchg
or
jo
cld
int
sbb
int3
cmp
mov
sti
mov
fisttpll
test
sub
and
scas
adc
ljmp
sub
xchg
popf
ret
ret
or
shrb
ljmp
hlt
or
out
popa
ja
scas
data16
add
sbb
ret
not
out
dec
fsub
mov
xchg
xchg
pop
xchg
jbe
cmpsb
dec
jl
mov
insl
and
andl
mov
repz
jb
enter
outsb
fdivs
testl
dec
shrb
xchg
sbb
add
xor
sub
std
ja
xchg
std
sbb
sbb
sub
push
out
sar
fs
adc
xor
shrl
popf
sub
mov
cs
clc
loopnew
xor
mov
imul
dec
cmp
xchg
add
test
jnp
fcoml
out
fdiv
int3
sub
add
adc
jle
fwait
mov
sarl
push
testl
xchg
movsb
cmp
and
xor
loopne
mov
cmp
movsl
sti
gs
pushf
mov
std
jg
movsl
mov
add
mov
push
clc
cmp
clc
sbb
nop
xchg
cmp
sub
data16
dec
jmp
mov
ds
outsl
mov
pop
sub
sti
iret
loopne
sti
enter
lcall
imul
std
jns
or
in
pop
push
push
xchg
add
movsl
push
movsl
aaa
test
scas
int3
lock
jmp
repz
push
ret
mov
inc
jmp
stos
fcmovnu
mov
insb
xchg
fs
mov
xchg
jns
push
dec
pop
outsl
in
subb
scas
pop
shlb
hlt
in
sbb
lods
mov
daa
lret
push
hlt
xchg
or
adc
xchg
sub
mov
dec
xchg
mov
mov
int3
cmp
adc
jmp
sub
adc
and
repnz
call
das
pop
and
xor
and
dec
and
mov
xchg
leave
xor
push
or
fsubrl
mov
xchg
mov
test
sbb
call
dec
imul
xchg
repnz
mov
cmp
mov
push
and
out
xor
leave
mov
fldl
add
dec
in
mov
pop
negl
push
xor
xor
nop
sub
inc
sub
sbbl
subb
cmp
test
aas
or
insb
lret
mov
sbbl
and
xchg
outsb
and
frstor
pop
jnp
adc
stos
xor
aad
jmp
sbb
sti
mov
xchg
call
jle
scas
andb
cld
add
les
cmc
sub
cmpl
xchg
xor
repz
mov
jp
lret
sti
js
ds
inc
orl
clc
addl
cmp
ds
jnp
sbb
es
shr
pusha
lret
add
jo
aaa
dec
cmc
test
pop
cmc
inc
inc
lea
or
xchg
les
jne
shrl
movsl
std
das
sbb
sbb
inc
sti
sbb
xor
out
sti
out
dec
push
sysexit
jp
dec
add
and
push
gs
out
pop
in
mov
mov
enter
into
adc
pop
aad
test
mov
outsl
mov
enter
movsl
xor
aaa
shrb
sbb
push
adc
je
mov
aaa
test
sub
mov
push
dec
mov
sti
adc
outsb
call
dec
cmp
sbb
inc
add
int
add
xor
push
stos
int
adc
push
sbb
xchg
adc
ljmp
popa
jno
out
cltd
and
mov
clc
repz
into
aam
ret
xchg
lret
adc
push
inc
mov
xchg
pop
fildll
dec
fwait
jmp
cmp
cmpsb
test
call
sbb
outsl
sbb
enter
jno
insb
or
inc
pop
js
adc
or
loope
andb
cmp
ljmp
mov
not
and
push
inc
dec
xor
jns
sub
imul
lds
inc
pusha
mov
outsl
ljmp
arpl
mov
mov
jno
arpl
clc
daa
mov
shll
movsb
ffree
xor
xlat
daa
aas
lret
pushf
pop
lcall
repz
add
lods
sti
push
ljmp
fists
adc
jns
enter
call
or
cli
dec
jle
std
mov
daa
xchg
adc
dec
jne
inc
pop
mov
nop
sub
fstps
out
mov
mov
or
das
ret
ds
adc
add
sar
enter
pushf
nop
orb
out
out
outsl
cmp
cmc
add
rcl
jns
mov
jg
dec
stos
xor
je
ljmp
xor
lcall
fcomi
and
stos
gs
cmp
loop
xor
mov
mov
iret
aaa
push
cli
movb
ss
scas
dec
sub
pushf
and
xchg
or
test
mov
cltd
lock
dec
lret
jge
jnp
add
or
in
js
inc
ljmp
add
cltd
jg,pt
test
add
push
jl
test
imul
xchg
aaa
jl
dec
add
jno
fimull
insl
scas
adc
fs
or
lea
push
pop
mov
jmp
scas
rcrl
cmp
sbb
and
stos
insb
fs
mov
into
mov
mov
xchg
cmp
lea
movsb
or
cld
jnp
rcl
dec
mov
cmp
pop
iret
lret
adc
imul
shld
popf
out
je
inc
mov
insb
and
in
sbbl
jecxz
ror
jl
mov
or
addr16
inc
mov
andl
pop
mov
xchg
sub
fnstenv
add
mov
insb
rcrl
mov
xor
pop
sub
repnz
jbe
int
in
xlat
and
imul
xchg
sub
ja
shll
mov
dec
repnz
push
mov
and
movsb
scas
jle
xor
mov
loopne
mov
jne
fs
mov
add
push
cs
cmp
inc
pop
daa
ficomps
repnz
stos
mov
mov
inc
xor
test
jle
jmp
push
cli
fsubrl
enter
sbbb
jbe
push
fwait
add
imul
imul
out
xchg
int3
cmpsb
jge
dec
or
aam
fisttps
jnp
pushf
xchg
mov
sti
push
xchg
sbb
jmp
cmp
jp
mov
cwtl
push
pop
test
fsubrl
test
inc
mov
leave
and
rcl
mov
loopne
jge
les
icebp
insl
mul
mov
cwtl
mov
mov
cs
loope
inc
in
ret
rcll
fstps
jecxz
mov
scas
sbb
inc
shlb
mov
aas
int
pop
mov
mov
nop
stos
loopne
stos
jne
sub
fucom
inc
push
mov
cmp
inc
mov
out
outsb
adc
add
hlt
inc
mov
frstor
repz
mov
xor
lahf
shlb
xchg
stos
mov
jbe
adc
push
inc
adc
jnp
insb
sub
test
mov
je
sbb
and
jg
sbb
adc
lcall
jle
stos
xor
jge
mov
or
mov
fistpl
sti
mov
push
dec
fs
push
pushf
add
dec
shrb
dec
mov
dec
in
mov
push
pop
mov
jg
lea
dec
inc
jno
mov
or
jle
and
mov
cmp
or
adc
pop
cwtl
xchg
das
lods
test
out
inc
jg
mov
and
mov
jo
sbb
dec
test
lret
test
aad
iret
iret
cmp
int3
aaa
sub
xchg
int3
out
test
lds
leave
rolb
popa
and
mov
push
push
aaa
in
sbb
push
and
push
dec
inc
adcb
inc
enter
sti
sbb
xchg
lods
pop
lock
ja
sbb
mov
shlb
test
rcrb
xor
repnz
mov
xchg
std
rcrl
xchg
movsl
push
jg
mov
in
fildl
fiaddl
shlb
fwait
or
mov
out
mov
pusha
push
xchg
js
sbb
sbb
outsb
dec
xlat
dec
mov
stc
inc
or
mov
mov
enter
cmp
cmp
sarl
std
lcall
out
fimuls
test
xor
enter
dec
xchg
js
adc
aad
xchg
push
sub
fisttpl
aam
test
dec
imul
push
repnz
leave
mov
pusha
gs
in
push
cmp
mov
popf
mov
inc
jb
inc
or
mov
loopne
aaa
test
pop
out
insl
mov
add
test
add
xorb
lret
jmp
iret
mov
hlt
mov
sub
ss
iret
and
loop
stos
popa
jae
leave
lock
mov
mov
mov
jbe
sbb
or
sub
ret
push
mov
add
pop
shll
pop
enter
sbbb
and
aad
cmp
mov
pop
add
mov
decl
test
sbb
test
scas
je
aaa
sbb
ret
les
movsb
int3
testb
js
push
mov
icebp
dec
push
jb
scas
fisttpll
pop
and
push
sub
push
jl
fcmovnbe
pusha
clc
sar
adc
imull
pop
in
loopne
lcall
lahf
shll
and
adcl
sbb
push
xor
and
fs
mov
cmpsb
hlt
jns
or
mov
xchg
mov
mov
insl
or
in
dec
mov
cmpsl
cld
xchg
cmpsb
clc
dec
mov
and
push
or
xchg
pop
pop
xchg
jl
int
sbb
push
jecxz
insb
fldenv
fwait
jmp
fdivs
xor
dec
das
push
dec
aad
or
inc
mov
or
push
ss
rorl
movsb
subb
test
cld
cmpsl
das
cmp
dec
add
sbb
xchg
out
push
mov
ja
push
jo
xchg
pop
pushf
mov
add
xchg
mov
cmp
cmpsb
mov
lds
sbb
ljmp
test
and
cmpsl
sub
xchg
fcomi
push
fwait
mov
mov
adc
and
mov
repz
ret
mov
cmpl
push
mov
push
faddp
sub
and
and
jge
repnz
cs
or
into
in
xor
leave
mov
scas
mov
pop
jmp
insb
lret
jne
pushf
jl
ror
mov
lcall
mov
pushf
add
arpl
dec
fsts
fstpt
clc
pop
pop
push
add
loop
xor
and
jmp
mov
xor
and
clc
xchg
call
push
fisubl
dec
gs
add
leave
xchg
sub
addr16
lods
lods
push
stos
addb
fwait
push
repnz
lods
push
es
cmp
add
add
jmp
add
mov
jmp
jo
jmp
inc
and
push
or
jae
push
movsl
aas
mov
or
fstpt
prefetcht2
ret
mov
shrb
imul
fistpll
imul
mov
mov
sarb
xor
mov
test
and
daa
mov
inc
xchg
stc
xchg
mov
ror
push
inc
cmp
mov
inc
in
daa
cmp
jle
cmp
nop
mov
mov
xor
push
mov
pop
into
lret
mov
shr
push
icebp
lcall
iret
mov
mov
mov
adc
lret
xor
lds
mov
jmp
dec
shrl
leave
cli
movsl
jbe
lcall
out
popf
inc
clc
fidivl
xchg
outsl
out
adc
dec
sub
fdivrl
lea
and
outsb
roll
xor
xor
enter
cmpsb
jne
test
fistps
popf
jle
dec
pushf
mov
add
into
pop
mov
push
ror
repz
out
aam
push
pop
sub
scas
push
out
lock
mov
jae
mov
mov
sbb
pop
jp
into
adc
popf
in
aaa
mov
dec
leave
sub
sahf
xchg
bound
fs
jne
or
stos
test
rcr
jmp
stos
pop
pusha
aas
adc
mov
jle
lret
out
call
imul
ja
sub
cmpb
and
fsubrs
mov
scas
rcrl
pop
cmp
in
call
mov
mov
in
dec
xchg
sub
pop
lods
repnz
push
aas
cmp
cli
mov
movsl
pop
adcl
xor
dec
add
lods
movsb
rcrb
lret
ret
mov
jl
sarb
aaa
stos
test
enter
or
jae
ljmp
xor
stos
mov
lds
push
mov
adc
scas
jnp
cmp
fisttps
mov
int3
cmp
out
push
xor
adc
xor
dec
push
mov
fstpl
and
mov
ficoms
in
jmp
sbb
jae
push
in
lods
adc
mov
and
xchg
push
add
push
fdivs
loopne
jno
enter
sub
mov
fisubrs
adc
sub
inc
adc
ja
lcall
jge
inc
imul
addr16
jno
add
ljmp
mov
inc
jnp
les
call
push
shlb
gs
movsl
jne
clc
cltd
loop
movsl
imul
arpl
push
ljmp
mov
ss
mov
sub
pop
pop
fwait
shlb
pop
stc
push
jbe
cld
fldl
scas
addr16
xorb
movsl
lahf
popf
into
leave
scas
dec
ret
inc
pop
aas
outsl
aad
cmp
adc
std
and
dec
or
sbb
fsubs
rcll
lret
sbb
loope
xor
push
mov
int3
outsb
mov
adc
movsb
cltd
pop
jb
aaa
lods
xor
loopw
mov
rcrl
fldl
mov
jns
sub
sarl
das
fs
mov
dec
ds
adc
push
jo
arpl
add
lret
sti
mov
roll
xchg
cmpsb
mov
push
cmp
mov
ja
xchg
sbb
movsb
push
rcrb
scas
sbb
cmp
mov
imul
jo
fsubl
aad
clc
in
fwait
sarl
cmpsb
insl
or
mov
and
sub
cmpl
rorb
mov
loop
ja
js
or
push
jo
xchg
mov
sub
loope
adc
mov
mov
and
faddp
add
sbb
insl
cld
sbb
inc
dec
sbb
out
cltd
comiss
subb
popa
dec
movsb
inc
jecxz
popa
pop
pop
inc
sub
nop
jo
negb
dec
mov
xchg
mov
popa
in
pushf
jne
aas
xorb
jnp
mov
adc
jnp
xchg
repnz
rol
push
arpl
loop
mov
test
cmpsl
mov
sub
sbb
es
or
fbld
fldl
movsb
scas
sbb
push
cmc
pop
xchg
nop
ja
mov
xchg
inc
mov
int3
fimull
xchg
fsubr
repz
push
imul
mov
imul
mov
sub
jecxz
test
cs
pop
popf
lock
int
lods
sbb
add
outsl
rclb
fwait
insb
cmp
out
jb
sbb
jnp
cmp
cmp
or
adc
push
mov
je
lcall
cs
add
popf
xor
sub
loopne
mov
sub
aad
das
or
push
ljmp
xor
orb
mov
and
les
xchg
push
fwait
dec
mov
sbb
cld
add
out
shrl
xorb
adc
mov
test
orl
jns
out
jb
mov
inc
push
jns
inc
sti
inc
cmp
xor
aam
iret
xchg
jnp
pop
ja
outsb
fstps
lods
pop
inc
jle
outsl
cmpb
push
xchg
add
jl
sbb
xor
or
nop
add
and
fsts
stc
push
aad
mov
pop
sti
jmp
mov
fcmovnu
out
or
into
cmp
insb
mov
pushf
cltd
jno
rol
mov
mov
icebp
scas
jge
mov
cs
xchg
jp
inc
lret
push
lods
or
push
adc
cs
xchg
test
in
sbb
cld
pop
mov
test
loop
cltd
int
adc
and
dec
movsb
orl
adc
jl
cs
into
dec
add
jno
ret
add
jns
shrb
inc
pop
mov
push
push
loop
mov
scas
mov
mov
loop
jnp
cmp
mov
and
leave
cmpsl
outsb
xchg
nop
movsl
aaa
outsb
and
inc
es
bnd
jne
dec
lret
imul
sbb
mov
adc
adc
xchg
lock
inc
test
jp
mov
cmp
pop
pop
aas
clc
das
mov
into
insl
adc
popl
xchg
and
pop
movsb
mov
outsl
lock
fisttps
insl
arpl
das
jae
and
aaa
sti
jns
push
ret
push
jno
js
roll
fs
ljmp
pop
mov
dec
pop
movsl
test
fucomp
mov
lock
sub
fcmovb
icebp
in
push
fistl
mov
lds
lock
adc
mov
iret
ret
xchg
in
ficomps
add
lret
imul
pop
jae
sub
jae
inc
inc
lahf
mov
repnz
mov
pop
cmp
xchg
cmp
out
xor
lahf
pop
pop
aas
lahf
test
mov
je
push
fmulp
fsubrs
loope
out
push
out
lret
push
or
lret
fisubl
lock
dec
mov
and
aas
mov
mov
fimull
inc
sbb
cmp
roll
lods
cltd
dec
test
mov
xchg
iret
mov
jns
sahf
rorl
gs
lret
test
icebp
mov
inc
clc
popa
data16
and
push
xor
sbbl
adcl
dec
leave
mov
repnz
scas
pop
pop
nop
jge
inc
push
imul
add
xor
outsl
cmp
mov
movsb
pop
push
mov
sbb
fisttpl
repnz
mov
test
loopne
or
push
inc
inc
sbb
jge
popf
pop
ret
sub
dec
jl
xchg
aam
and
icebp
enter
and
adc
sbb
inc
nop
cmpb
inc
mov
loope
pop
roll
call
jnp
adc
repz
xchg
push
out
cmp
out
push
push
call
cltd
xchg
mov
dec
cmp
dec
fsubrs
fdivl
push
adc
mov
jle
mov
jb
fucomi
stc
imul
lahf
mov
sub
sti
mov
push
push
jl
rcrl
adc
je
test
push
xor
and
cld
leave
or
cli
mov
dec
fcom
out
negb
cmp
xchg
mov
cmp
lock
or
les
cmp
and
outsb
jmp
test
popf
lods
shlb
xchg
icebp
sbbb
arpl
adc
mov
test
shl
cmp
pusha
adc
jp
push
and
stc
and
js
in
pop
loope
cmpsl
push
jnp
mov
std
inc
addl
sbb
mov
jns
sbb
xor
lret
push
adc
xor
mov
jne
pop
enter
mov
inc
mov
and
dec
dec
std
adc
xor
lods
scas
sub
jp
stc
fcmovu
out
push
mov
inc
push
cs
arpl
jne
sbb
les
out
and
inc
pop
and
inc
jo
dec
data16
aaa
div
out
test
xor
sbb
xor
dec
xlat
out
daa
mov
dec
jge
iret
xchg
cmp
jg
sbb
lahf
add
mov
in
cmp
insl
das
jl
jl
inc
inc
xchg
or
fidivl
bound
jb
pop
bound
pop
inc
push
mov
sub
pop
loope
sub
ss
ret
push
out
jno
lret
leave
shll
data16
push
lret
sahf
sbb
stos
push
push
mov
adc
stos
add
int3
xor
fs
or
dec
sahf
repz
jno
ss
dec
mov
pop
push
cmp
sarb
mov
scas
add
sub
and
call
push
and
xor
cltd
ficomps
jb
mov
xchg
dec
jae
leave
inc
mov
jo
add
mov
lcall
adc
mov
sub
sbb
xchg
shlb
call
mov
jp
push
arpl
es
xchg
and
xor
das
aas
psubb
xchg
hlt
sbb
mov
rorl
les
popa
cmpsl
sub
push
sti
ret
xor
fsubs
jecxz
and
dec
push
cs
call
imul
cmp
dec
jbe
lea
ds
adc
pop
dec
scas
xchg
cltd
in
cmpsl
jns
aaa
test
or
lods
cli
fwait
popa
push
mov
push
cld
xchg
adc
enter
sahf
adc
push
cmpb
sbb
jp
mov
out
push
adc
mov
in
movsl
jg
push
ja
cmp
les
cmc
hlt
cltd
push
cmp
and
dec
cmp
iret
ja
scas
mov
xor
mov
push
fisubrs
out
rcrl
jl
jmp
xchg
xchg
shl
push
xchg
repz
mov
jp
loopne
cltd
mov
xlat
in
push
test
and
fsubs
lods
push
pop
je
lret
jns
mov
insb
or
sbb
cs
mov
flds
in
jno
push
in
aas
jbe
jmp
lret
pushf
adc
and
xchg
arpl
xchg
sub
nop
and
orl
stos
pop
add
mov
mov
dec
repz
loope
adc
fisttps
mov
in
adcl
adc
test
cmc
aas
test
mov
cmp
ret
out
pop
inc
mov
pusha
mov
fiadds
sar
je
in
dec
or
lods
popa
xor
outsl
inc
mov
xor
inc
cwtl
fsubrs
xchg
sahf
dec
fxch
adc
xchg
jl
and
idivb
jns
and
pop
adc
sbb
sub
push
cli
in
xor
push
or
jb
lgs
gs
mov
sbb
lods
sbb
mov
outsb
add
ret
add
cli
insb
push
js
and
dec
push
adc
cmp
rcrl
je
jmp
sbb
sbbl
lds
cmpsl
test
adc
cmp
xor
sub
scas
movsb
pop
push
and
rcll
push
jne
negb
jb
fadds
add
sbb
das
push
ret
cmpsb
test
cltd
lods
dec
jne
add
sti
inc
mov
divb
xchg
movsb
push
lods
int
fs
shl
cmp
and
push
cmp
push
fstpl
xor
cmp
hlt
shll
scas
cmp
pop
mov
in
aam
jno
fwait
in
and
sahf
sbb
xchg
mov
xchg
or
jno
jg
mov
inc
mov
ljmp
insl
mov
cmp
ss
insb
pushf
iret
aam
pop
adc
out
in
sub
jb
cmp
hlt
inc
mov
clc
push
gs
mov
decl
lret
xlat
popa
or
arpl
and
fbstp
add
cmp
xchg
shl
rclb
data16
js
test
out
xchg
push
mov
mov
cmp
or
sub
dec
cmp
out
popa
mov
push
mov
inc
rclb
ja
test
add
jg
adc
jmp
dec
fildll
xchg
faddl
out
sbb
xor
xchg
adc
shll
or
mov
test
push
push
mov
out
mov
les
fistpll
or
fsub
and
jmp
notl
mov
inc
rolb
lock
mov
test
loopne
pop
xor
pop
mov
cli
rcrb
cmpsb
repz
jl
sub
leave
daa
push
jg
lods
xchg
scas
test
mov
stos
pop
or
sub
push
xchg
sbb
out
je
mov
imull
movsw
inc
pop
pop
xchg
outsb
mov
push
ss
mov
mov
loope
adc
mov
popl
mov
or
add
dec
push
push
mov
lcall
ljmp
test
aaa
xor
std
jg
das
addr16
xchg
fstpt
sub
icebp
test
dec
jmp
iret
or
pop
pop
rol
and
inc
mov
dec
dec
sub
fldl
sarb
sub
mov
les
scas
mov
mov
and
pop
push
mov
mov
cmp
dec
scas
xchg
mov
insl
lods
popl
mov
mov
ret
lret
add
mov
clc
fs
mov
inc
pop
mov
push
xchg
or
js
pop
icebp
shlb
pushf
or
dec
out
push
adc
mov
or
jmp
mov
sub
nop
sbb
pop
adc
adc
lret
pop
pop
stos
inc
inc
push
test
mov
inc
mov
rclb
xchg
adc
loop
xor
call
into
inc
mov
repz
in
jp
mov
pop
sub
add
jecxz
xor
into
sub
push
push
inc
sub
loopne
sbb
push
inc
push
inc
movsl
inc
dec
adc
scas
lcall
inc
pop
fmuls
arpl
jnp
inc
mov
push
aam
ror
cmp
adc
jecxz
das
test
mov
divl
insl
and
cmp
mov
pop
mov
inc
pop
adc
leave
shlb
arpl
push
frstor
test
push
js
jo
fcmove
push
xchg
dec
or
out
push
push
scas
psrlq
fbstp
mov
push
fs
pop
mov
rorl
xchg
cmpsl
dec
idivl
stos
sti
fnstcw
rorl
cli
cwtl
cld
jb
mov
push
pushf
xchg
cmp
inc
push
dec
sbb
mov
mov
push
ljmp
lock
adc
fwait
jge
fcmovnb
test
loopne
push
cwtl
cmp
inc
push
test
inc
cmp
push
movsb
or
stos
scas
or
es
incb
mov
mov
jno
xor
lahf
loop
mov
roll
loopne
dec
push
and
imul
cwtl
pop
cmp
adc
fs
xchg
clc
and
int
jnp
das
push
jl
lods
ret
ja
imul
in
cmp
fstpl
mov
and
stos
mov
jno
push
sbb
imul
into
sub
loopne
sub
mov
jno
adc
cltd
push
cmpsb
mov
loope
fcmove
lcall
pop
add
and
inc
in
out
mov
mov
fistl
inc
push
rorl
gs
jnp
mov
pop
sub
push
add
rolb
das
into
mov
sub
sub
cmp
addr16
fidivrs
pop
lods
dec
stos
add
mov
add
jbe
aad
inc
aam
xor
movsl
sub
lcall
imul
mov
movsl
pop
mov
enter
pop
inc
ret
mov
je
and
movsl
popf
xor
pop
lea
push
stos
add
dec
push
or
outsl
dec
fidivs
ret
push
jp
sbb
sub
andl
hlt
add
xchg
cmpsl
movsl
add
shrb
insl
aas
or
cltd
mul
xchg
je
push
and
cwtl
fwait
cltd
dec
sbb
icebp
scas
dec
inc
test
sar
mov
popf
rcr
mov
jo
sub
jle
out
xchg
mov
pop
movb
es
shll
shll
mov
jge,pn
je
lds
push
les
jmp
test
adc
dec
sbb
mov
scas
jmp
push
mov
test
movsl
loope
popf
cli
pop
loopne
scas
inc
adc
or
into
push
or
push
sbb
fimull
pushf
shlb
mov
inc
clc
gs
mov
into
and
jmp
lret
mov
decb
pop
fstpt
push
or
aam
xor
pop
xchg
test
adc
fs
pop
dec
cmp
fcmovb
mov
push
mov
cmp
jmp
sub
mov
std
jg
ss
push
add
jle
inc
fwait
js
cwtl
js
fistpl
mov
mov
daa
xchg
pop
outsb
fs
enter
imul
lahf
addr16
and
or
int3
sub
repz
sti
aad
and
sbb
push
cmpsl
scas
jmp
mov
loopne
clc
imul
cli
and
movsl
pop
scas
mov
fldcw
shlb
push
add
add
in
sbb
xor
test
ror
and
xorb
push
mov
sbb
xchg
lods
and
or
in
into
mov
sbb
int
lret
in
clc
fwait
icebp
out
ret
in
push
push
pop
mov
lfs
xchg
mov
add
enter
push
int3
xor
mov
cmp
mov
je
into
push
xor
dec
mov
push
jge
stos
mov
dec
adc
xor
stos
cmp
je
ret
fdivrs
mov
dec
jns
lahf
xchg
popf
sahf
xor
push
fidivl
or
sahf
inc
ret
sahf
lret
inc
mov
xchg
inc
mov
cmpb
mov
mov
aam
jge
jno
xor
pusha
or
inc
sbb
test
fsubr
pop
rol
xlat
loopne
sub
pop
fdivl
inc
cli
ds
cmp
lds
es
cmp
in
unpcklps
bound
add
cmpl
cli
pop
movsb
rorl
aad
and
push
add
popa
mov
jne
outsb
sbb
imul
andl
adc
sbb
mov
inc
mov
mov
imul
imul
push
adc
imul
movsl
dec
xor
dec
mov
mov
arpl
mov
pop
mov
int3
sahf
sub
jl
scas
mov
sar
scas
loop
hlt
test
xor
sti
int
ret
leave
dec
mov
or
std
xchg
aam
dec
add
and
sub
ljmp
xor
pop
inc
push
ljmp
les
mov
and
mov
or
dec
cltd
xor
mov
addr16
mov
cmp
orl
and
add
stos
push
add
stos
inc
xchg
push
add
xor
adc
bound
rolb
dec
push
jmp
pusha
bound
out
pop
lcall
xchg
pop
inc
adc
fidivs
adc
es
lea
movsl
adc
loop
fisttps
in
add
leave
out
adc
push
add
and
jb
movl
and
mov
in
mov
mov
enter
shlb
out
mov
mov
jg
mov
mov
jo
lds
test
sbb
outsl
pop
or
xor
ss
xchg
push
fisubl
push
cli
popa
mov
cwtl
sarb
and
dec
pop
or
cmp
es
inc
shl
inc
loopne
xor
addr16
popa
jmp
cmp
adc
jno
loopne
lret
mov
aaa
iret
inc
fildll
pop
sub
adc
out
push
mov
inc
jne
mov
dec
lock
mov
pop
fistpl
pusha
fdivrp
and
scas
mov
pop
das
push
fildll
xor
mov
xchg
xchg
stos
push
or
loopne
or
imul
jmp
mov
xor
in
xchg
fwait
adcl
push
aaa
sbb
sahf
dec
inc
mov
test
mov
dec
lret
push
adc
inc
dec
arpl
ds
sti
nop
lahf
into
xchg
push
lret
hlt
in
mov
jmp
fdivr
cwtl
sub
sahf
arpl
mov
push
or
push
pop
ljmp
add
inc
cli
leave
add
sub
pop
lds
out
data16
lahf
dec
inc
movsb
adc
mov
cmp
loopne
sti
mov
mov
ss
je
jp
dec
fs
mov
sub
aas
push
lcall
imul
stos
push
cli
imul
cld
push
pop
ss
push
mov
aas
inc
inc
daa
fbld
mov
in
lds
jae
xor
bound
lods
push
pusha
outsl
mov
or
pop
mov
fwait
aam
mov
aam
or
adc
xor
xorl
dec
xchg
xchg
mov
je
fcmovb
xchg
test
xchg
rcl
lcall
outsl
dec
push
dec
pushf
fs
es
stos
dec
dec
adc
and
cmc
cmp
xchg
bound
rcrb
xor
inc
pop
xchg
mov
push
sub
and
cmc
and
cmp
paddw
mov
xchg
adcb
sub
int3
add
imulb
mov
mov
xor
push
icebp
out
pop
cli
mov
call
push
mov
jnp
and
jo
jmp
pop
iret
out
sbb
in
xor
adc
push
add
iret
in
xor
shll
cmpsl
xchg
and
or
xchg
fiaddl
add
jns
mov
mov
jg
jnp
in
stc
stos
and
fnstcw
pop
fwait
jb
sbb
cmp
outsl
xlat
xchg
adc
inc
mov
scas
pop
fstp
out
jmp
pop
xor
stos
es
daa
hlt
ja
loope
jo
lods
push
and
pusha
pop
sub
loopne
rcr
ds
stc
or
pop
xor
mov
or
mov
jecxz
shll
push
int3
test
mov
rcr
add
imulb
or
mov
jge
js
jae
add
in
fcoml
jno
mov
mov
sahf
adc
stc
gs
mov
in
inc
ss
and
mov
or
adc
popf
sti
scas
jae
inc
addl
das
fst
add
cmp
and
leave
lea
or
mov
mov
push
pop
xchg
jg
jae
scas
sbbl
pusha
xor
notb
pop
xlat
lods
jle
cld
pop
mov
mov
add
call
into
inc
packsswb
xchg
sbb
push
fsubl
ljmp
sbb
mov
cs
inc
arpl
sub
pusha
xor
and
fdivrl
or
pop
pop
xchg
fstps
imul
mov
fistpll
pop
mov
movsb
lcall
pop
mov
cmp
aas
addr16
rcl
mov
inc
ljmp
das
daa
fsubrs
cmp
xor
test
mov
std
and
push
sbb
dec
sti
sub
icebp
mov
leave
clc
jp
fdivs
sahf
jmp
or
inc
push
mov
xor
or
fwait
outsb
mov
hlt
ljmpw
sub
push
pushl
jo
sti
lds
pop
pushf
imul
mul
or
int
loop
shlb
popa
jge
pop
and
fidivrl
add
rclb
xchg
pop
push
je
mov
cmp
inc
test
cld
dec
sub
sahf
cmp
movsb
push
add
push
adc
mov
mov
aas
sbb
std
jle
aad
or
bound
push
fs
dec
jo
sbb
test
mov
or
or
pop
push
inc
or
dec
pushf
xchg
jmp
jge
cmp
out
push
and
jge
mov
xor
pop
inc
push
sahf
stos
push
in
sahf
cmp
mov
sarl
add
js
insl
into
clc
mov
pop
push
push
jns
jb
push
and
or
or
lret
push
and
je,pt
sub
xchg
jbe
mov
movsl
push
out
and
std
icebp
xchg
sbb
sarb
pop
sar
jg
add
inc
jl
sub
outsb
scas
ja
imull
push
push
mov
sub
push
add
xchg
fstpl
repz
xor
sub
xchg
xchg
xchg
les
jns
cld
sbb
push
dec
cmp
xchg
int
imul
pushf
lret
rcrb
xorl
dec
sti
shll
ds
adc
popfw
fsubr
jno
pop
push
jge
das
and
xchg
xchg
sub
push
mov
dec
and
adc
xlat
jecxz
imul
push
xor
or
pop
xchg
sbb
inc
inc
push
shll
dec
mov
scas
scas
add
std
sbb
cmp
jne
sbb
push
sub
fimuls
sub
pop
out
jne
xor
iret
das
add
outsb
mov
aas
cmp
mov
push
mov
out
inc
jb
mov
jg
roll
cmp
xchg
andl
pop
lods
jno
mov
xchg
cltd
in
mov
aam
push
scas
push
jns
stc
fstp
lock
sbb
out
adc
mov
out
maxps
push
mov
push
adc
movsb
test
ret
add
andb
in
mov
in
push
lret
mov
out
push
jmp
add
negl
xchg
mov
jb
popf
xchg
shr
jne
fs
inc
lahf
loopne
decb
test
lea
push
jbe
sub
jge
xor
repz
adc
cmp
call
fisubs
adc
ja
nop
mov
dec
mov
mov
push
add
ja
enter
repnz
jne
sahf
aas
push
xor
push
add
dec
xchg
out
fs
lcall
stos
pop
xchg
xchg
dec
repnz
psubsw
jecxz
or
fisubrl
cs
mov
sub
jmp
jae
aas
imul
and
fwait
outsl
inc
jl
push
sub
sub
loopne
jecxz
jp
mov
fdivrs
clc
pop
jae
cli
push
enter
or
xchg
add
mov
push
xchg
icebp
arpl
jmp
and
add
push
pop
add
push
push
or
loope
and
aam
push
out
jns
andb
push
dec
push
inc
fcmove
cmp
and
dec
test
sub
add
addr16
sub
sbb
dec
sbb
pop
add
cmp
xlat
inc
mov
inc
in
jnp
int
mov
test
insb
jne
ja
dec
cli
cmp
inc
lock
rol
addb
push
adc
sub
stos
cmp
movsl
lea
inc
sbb
jns
add
and
adc
mov
ja
cmp
adc
cwtl
lds
dec
sbb
mov
sub
add
cmp
mov
into
sbb
stos
sub
daa
sti
cmc
adc
stos
inc
xor
mov
or
cmpsl
sbb
shll
mov
mov
sbb
ret
jne
mov
sub
addb
cwtl
les
jmp
leave
lcall
pop
enter
mov
cltd
or
nop
sub
sahf
jne
and
je
push
sub
std
mov
loope
pop
jns
fsubrs
hlt
pop
jle
xor
pop
jno
test
stc
insl
mov
scas
cmc
jmp
sub
test
sub
lds
cwtl
mov
loopne
ret
mov
push
ja
mov
xlat
imul
xchg
mov
pushf
subl
xor
sbb
pop
sub
sti
mov
add
hlt
addl
idivl
xchg
js
mov
adc
or
mov
or
push
sub
and
fadds
xor
rorl
or
or
or
xchg
mov
push
insl
xor
push
jmp
outsb
inc
dec
cli
dec
mov
add
adc
cltd
fs
lahf
test
jp
rcpps
cmp
in
outsb
sub
mov
xor
mov
aad
sub
lcall
xorb
js
mov
jae
or
add
nop
adc
gs
inc
pop
adc
pop
enter
adc
clc
mov
shll
inc
cmc
sub
add
cs
pop
mov
data16
bound
inc
jbe
sbb
out
lret
mov
lcall
and
push
mov
mov
rorw
icebp
ljmp
fdivrl
push
mov
push
loopne
lock
aad
daa
mov
push
xlat
pop
sub
push
xor
pop
dec
loopne
popf
arpl
xchg
aam
notb
adc
add
mov
je
addr16
inc
int3
add
fldcw
je
insl
mov
scas
jle
and
xor
jb
fldt
add
jo
sbb
mov
or
xchg
xor
jo
pop
sahf
popf
scas
stc
inc
mov
dec
mov
in
ljmp
fistpl
jge
andb
adc
out
sbb
and
sahf
and
cli
xchg
jbe
sub
clc
in
sahf
es
jg
mov
test
stos
outsl
je
movsb
sub
shr
pop
out
mov
adc
jecxz
or
sub
fldt
jmp
popa
cmp
push
adc
inc
dec
sbb
or
or
mov
push
lret
mov
jg
adc
sbb
cmp
bound
inc
push
cmp
mov
lret
fbld
andl
cmp
jae
push
pop
push
mov
jbe
js
cmp
xchg
jb
std
mov
repz
ja
jecxz
testl
or
fadds
mov
rcll
ss
test
out
aaa
in
or
imul
mov
aad
pop
sbb
and
cmpsl
push
mov
inc
aam
repnz
adc
lds
cmp
std
aad
iret
inc
ljmp
jae
in
outsb
xchg
jle
xchg
movsb
xor
in
icebp
lods
sbb
out
mov
cmp
sbb
je
push
inc
fists
push
mov
sbb
scas
lock
dec
mov
mov
cmp
pop
pop
cmc
es
std
jp
stc
fcmovb
xchg
mov
shrb
in
push
xchg
pop
and
jo
jg
add
and
ljmp
xchg
jge
data16
lcall
in
adc
outsl
mov
jnp
in
ret
xchg
out
and
xchg
adc
lahf
lahf
repnz
rcrl
ret
xchg
rcr
pop
pop
inc
cs
cmp
lret
push
xchg
cmp
sti
cmp
rolb
mov
repnz
fyl2x
mov
inc
mov
cmpsb
popa
add
les
xchg
jl
test
inc
aam
cmp
mov
das
cmp
pop
jns
mov
mov
ja
push
jbe
test
jnp
push
xor
cmpb
nop
bound
pusha
jecxz
fsts
negb
mov
outsb
sti
jge
ljmp
movsl
fs
add
inc
dec
fdivrs
mov
xor
or
mov
lret
dec
in
pop
fdivr
and
dec
mov
decl
int
ss
movsb
jp
mov
jmp
in
ficoml
popf
dec
nop
leave
add
cmpb
cmp
mov
imul
test
ret
roll
cmp
or
cmp
jns
lock
sbb
in
mov
decb
and
sbb
mov
mov
inc
sub
ret
cmpsb
mov
adc
xchg
adcl
imul
test
movb
addb
or
jecxz
mov
inc
push
repnz
mov
add
gs
int3
mov
ja
mov
int3
mov
cwtl
adc
jp
sbb
cwtl
sbb
xchg
out
popa
ds
pop
je
fwait
jmp
movsl
clc
xchg
in
aaa
cmpsb
cli
sbb
ror
into
jbe
out
stos
enter
jl
xchg
add
jae
dec
mov
inc
dec
push
adc
or
cmpsl
gs
push
pop
xchg
mov
jnp
out
xchg
dec
jl
hlt
pop
xchg
push
cmp
test
adc
addl
xchg
pop
lods
sahf
fldenv
ja
pop
cmp
or
push
rorb
call
dec
orb
fmull
cli
in
add
xlat
std
addr16
cli
aad
dec
sti
sub
and
jae
adc
test
decb
fisubrs
in
and
xor
sub
test
in
jns
xchg
call
add
push
ljmp
jmp
iret
jl
mov
pop
dec
ret
sti
movsb
in
lods
xchg
lahf
ss
cmp
stc
pop
dec
jle
push
and
addr16
add
sbb
jne
scas
lahf
test
fmuls
sahf
stos
jmp
mov
out
xlat
mov
mov
icebp
lahf
xchg
sub
mov
or
and
pop
inc
mov
clc
xchg
dec
pop
sub
adc
fwait
sbb
cmpsl
mov
adc
mov
ja
lcall
jp
adc
pop
add
dec
cltd
mov
sbb
xorb
scas
push
adc
sub
cmc
sbb
lods
dec
cmc
outsl
std
and
insl
xchg
das
cli
pop
pusha
mov
popf
jecxz
add
pop
cmp
jg
andb
xchg
jmp
mov
pop
lock
rcrb
or
inc
pop
and
jae
push
sahf
jbe
inc
ljmp
ja
shlb
inc
adc
into
xor
sub
mov
lods
imul
sub
xchg
repz
or
jno
push
mov
inc
mov
pop
push
and
lcall
rcl
jo
cs
frstor
jne
repnz
adc
sbb
out
dec
into
mov
scas
dec
decl
sub
and
mov
pushf
xor
mov
fsubrs
xchg
addr16
mov
dec
test
fdiv
mov
cmpsl
jp
push
arpl
adc
mov
insb
push
jno
pop
mov
jo
pop
test
loope
mov
fiadds
inc
movsb
notl
xchg
lods
sub
addb
pop
inc
test
lahf
repz
sti
out
xchg
and
xchg
ja
dec
into
iret
push
dec
movsl
push
fsts
cmp
mov
popf
bound
repz
pusha
pop
xor
lret
inc
push
popa
ficoml
ss
xlat
xor
loopne
jecxz
lahf
cli
inc
outsl
sbb
aaa
out
sub
outsl
adc
inc
jmp
rclb
add
fsts
aaa
out
in
lcall
test
lods
adc
js
test
stc
xor
mov
inc
loopne
mov
lds
or
mov
hlt
cmp
sub
ja
adc
mov
test
jne
shll
into
inc
sub
rol
sub
in
inc
icebp
lods
add
iret
push
pop
addb
pusha
ja
push
jl
xchg
jecxz
lahf
popf
xor
scas
add
test
pop
data16
jno
outsb
sbb
xor
mov
sbb
xor
out
pushf
aad
inc
loope
orl
and
pop
fnstenv
inc
and
hlt
add
aaa
imul
fs
xchg
sub
jmp
js
jge
inc
ret
dec
jb
xchg
and
and
xor
inc
movsb
stc
xchg
leave
iret
sub
jno
and
pop
in
sub
shll
sbbl
imul
mov
je,pn
adc
repz
ret
ret
add
jmp
hlt
daa
xlat
clc
jb
sub
xor
into
push
pop
dec
and
cmp
lahf
dec
pop
push
xor
pusha
mov
mov
ljmp
shlb
lods
ss
adcl
inc
movsl
in
mov
cmp
and
dec
int
out
and
sarl
sbb
push
cmp
jb
ljmp
jl
cmp
aam
aam
sub
loope
jnp
lahf
insb
mov
enter
addr16
jmp
lcall
jmp
jg
mov
mov
js
je
nop
xchg
xor
fs
cmp
jnp
mov
testl
cmp
sbbl
mov
dec
lock
add
push
out
add
aam
push
ret
loop
xchg
out
adc
mov
inc
movsl
movsb
mov
push
xchg
inc
push
add
cwtl
cmp
xchg
decl
lea
jecxz
and
sbbb
dec
or
shlb
sub
in
es
lcall
in
dec
je
cltd
popa
rclb
gs
and
sbb
jno
push
cmp
insl
cmc
pop
push
clc
out
xor
icebp
xorl
icebp
imul
sub
pusha
cmp
loope
les
jle
jp
mov
ffree
dec
fsts
enter
mov
scas
mov
or
insb
shl
popa
mov
or
ret
mov
sub
popa
cmpsl
bound
aaa
push
testl
lahf
and
add
jl
insb
fsubrl
cmc
adc
dec
lock
js
cmpps
orl
adc
jmp
jmpw
lods
sbb
cmp
les
jbe
fsubs
pop
or
dec
shr
sub
orb
loope
push
pop
clc
sub
mov
lods
out
clc
or
mov
xor
fnsave
lcall
cli
push
adc
lods
and
adc
imull
sbb
xchg
shlb
fldt
test
repz
jmp
dec
xchg
dec
cmp
nop
mov
insb
sub
add
adc
push
push
mov
call
imul
daa
lret
lods
pop
mov
push
arpl
das
jb
xchg
mov
popf
jne
ret
and
aaa
test
mov
movl
xor
leave
xchg
popa
or
dec
std
pop
xchg
lea
adc
xor
test
ds
mov
lods
ret
iret
inc
fiaddl
shrb
jp
shll
sub
bound
or
add
jne
aad
adc
sub
push
int3
jbe
xor
inc
mov
das
mov
xchg
addb
mov
or
inc
pop
iret
push
xorl
xlat
cmp
dec
ja
std
ljmp
sub
scas
push
push
inc
push
ret
mov
negb
rep
in
adc
clc
fsubp
jp
hlt
cmp
and
imul
push
jne
push
hlt
cmp
pushf
pop
dec
out
lods
jg
lods
sahf
xor
ror
lcall
call
push
scas
push
sub
cs
push
lahf
jbe
out
sti
bound
cmp
jp
aam
dec
mov
push
repz
fisubrs
dec
and
test
add
movsl
inc
adc
std
adc
rol
sbb
repz
pop
scas
js
fimull
inc
daa
out
jecxz
sub
ss
in
push
jns
int3
insl
mov
push
add
ret
out
inc
adc
cs
test
cmpl
fs
dec
int
mov
pop
pop
div
cmp
add
push
mov
push
cmp
popf
inc
xor
lret
in
test
cmp
pusha
push
mov
pop
iret
mov
scas
inc
and
inc
push
das
shll
mov
repnz
adc
les
adc
xchg
and
ret
jl
pop
cmpsl
adc
ret
fmul
in
add
es
inc
shlb
mov
mov
inc
movsl
cwtl
sbb
push
cmp
mov
sbb
test
xchg
in
adc
sbb
inc
incl
loopne
sub
push
popf
jge
inc
xor
jle
out
lret
adcb
outsb
imul
adcb
cmp
jle
adc
dec
xor
mov
push
push
mov
pop
dec
pop
hlt
daa
and
inc
sbb
mov
in
adc
dec
pop
jo
xor
mov
sub
cmpsl
pop
adc
dec
jo
jmp
cmpsb
dec
xlat
cltd
mov
sahf
adc
shl
or
inc
out
or
aam
xchg
mov
dec
or
cs
cmc
repnz
clc
subb
in
in
cmp
pop
ret
pop
add
push
add
sbb
jecxz
mov
lahf
or
push
nop
cmp
int3
fs
jnp
push
lods
cmpsl
inc
pop
sub
icebp
lds
sub
mov
sub
dec
ror
fldz
scas
lods
popf
icebp
movsl
test
xlat
xchg
adc
jae
insb
fisubl
pop
mov
cld
pop
addr16
sbbb
pop
mov
cld
jno
lods
out
int
loopne
push
fs
and
iret
and
das
jge
inc
lret
cwtl
fsubp
popa
pop
fdivs
inc
push
loopne
lea
xchg
daa
fistpl
inc
iret
or
icebp
adc
jo
mov
int3
mov
xor
mov
jge
pop
mov
jo
adc
arpl
or
add
inc
inc
repnz
js
inc
dec
sub
xlat
dec
adc
or
ss
mov
movsb
dec
sbb
mov
aas
loop
jnp
insb
cld
hlt
int
ja
out
sbb
adc
in
mov
xor
enter
repz
fistpl
adc
xchg
test
push
cli
inc
fcmovnu
mov
pop
or
push
std
jmp
mov
mov
out
xor
xor
int3
jp
mov
push
sub
rcrb
xchg
pop
cs
pop
xchg
movsb
jne
xor
scas
lcall
dec
mov
daa
ja
jp
add
rolb
repnz
pop
mov
jle
movsl
in
jbe
scas
data16
xcrypt-ofb
cmpsl
das
xchg
mov
clc
push
jg
outsb
mov
dec
aad
jle
xchg
mov
pop
fsubrs
popa
in
dec
inc
mov
lcall
stos
fcomps
addb
dec
sbb
sub
dec
in
inc
enter
rcr
push
cmp
inc
insl
js
jmp
rorl
adc
push
out
lcall
decb
js
fwait
dec
cmpsb
std
pop
rcrb
lahf
pop
pop
push
es
and
call
cmp
fwait
add
dec
sti
mov
xchg
imul
or
sti
loop
sbb
in
jp
jnp
and
cmc
lods
push
insl
outsb
je
cmc
inc
mov
ja
fidivs
in
negb
stos
mov
mov
xor
add
push
and
insl
lret
gs
xor
inc
insl
aaa
movsb
cmp
out
mov
cmc
aas
xorb
add
inc
loope
jle
cltd
pop
add
or
or
push
out
or
stos
cs
sub
inc
jp
or
outsb
repnz
loopne
data16
adc
inc
adc
pop
fmuls
mov
xchg
mov
fildl
repnz
jmp
lods
pop
cmp
sbb
pushf
dec
int
icebp
pop
jns
mov
mov
xchg
dec
movsl
pop
frstor
icebp
outsl
adc
push
jg
pop
cmp
rclb
sbb
xchg
subl
fs
sarb
inc
stos
cmp
fidivrs
sub
rcll
and
int
stc
xchg
cmp
mov
jns
push
and
jecxz
out
inc
xor
gs
test
lret
mov
das
xor
icebp
mov
lret
push
scas
mov
loopne
push
aaa
jle
mov
ljmp
dec
mov
data16
and
pop
jns
fidivl
into
xchg
mov
mov
aas
jmp
jae
leave
jb
jg
sbb
iret
fisubrs
cwtl
insl
dec
js
or
adc
popa
int
das
cmp
mov
sbb
inc
push
xor
arpl
xchg
out
lea
pop
cmp
imul
out
xor
test
jbe
pusha
pop
mov
dec
cwtl
rolb
cmp
push
int
jge
dec
shlb
sti
mov
push
imul
shrb
pop
jne
add
or
movsl
icebp
in
or
dec
sbb
mov
mov
or
scas
xchg
mov
call
adc
cwtl
nop
out
or
insl
mov
add
lahf
sub
js,pt
ja
into
adc
adc
sub
sti
add
push
pushl
into
mov
dec
jl
push
xchg
repnz
mov
leave
jb
mov
mov
mov
cld
push
push
push
subb
lcall
leave
fs
mov
jno
dec
adc
cmp
push
add
or
adc
loope
mov
lock
lds
xchg
mov
loop
sbb
add
push
sub
or
ret
jo
inc
divb
mov
and
movsl
dec
mov
in
adc
xchg
pop
shrl
jl
out
mov
out
pop
pop
xor
jl
pop
std
clc
jle
mov
fisubs
jge
cmpsl
push
and
loopne
adc
outsb
rcl
mov
call
sub
mov
mov
fsub
aaa
out
mov
andb
sti
mov
add
rol
cltd
call
in
adc
pop
les
inc
mov
out
or
fnsave
jg
xlat
push
pop
pop
mov
pop
dec
xor
enter
sub
jp
jecxz
add
or
adc
dec
outsb
mov
xchg
jmp
insb
inc
test
sbb
stc
inc
outsb
call
stos
xchg
inc
insb
cmpsb
jp
xchg
and
mov
jns
mov
int
repz
mov
scas
cltd
mov
mov
dec
pop
mov
rcrl
jno
inc
sbb
out
lock
rcrb
jns
test
mov
es
dec
decb
leave
sarb
int
int3
jbe
out
mov
xchg
xchg
and
xor
lds
lret
add
and
mov
lret
fcmovbe
mov
andl
sti
cmpsl
hlt
adc
int
cmc
shl
clc
outsl
out
insb
in
jnp
jmp
jp
sub
fimuls
or
xlat
xchg
ret
scas
cmc
sub
mov
lods
push
out
sub
adc
jge
jbe
hlt
clc
push
aad
jo
adc
cmc
xchg
jns
popa
loope
ljmp
leave
popf
xchg
mov
xchg
pushf
frstor
inc
mov
xchg
fdivs
test
cltd
ljmp
outsb
xor
inc
mov
ljmp
cmp
xchg
test
dec
insl
repz
test
push
loope
sub
leave
sar
mov
aad
out
push
push
mov
push
mov
fidivrs
push
mov
outsb
movsl
jmp
push
xor
jns
ja
mov
lea
and
jbe
cmc
xor
cli
and
jle
cmp
mov
stos
sbb
lea
sbb
call
loopne
cltd
and
ljmp
addb
jbe
push
pop
add
dec
pushf
push
dec
push
fs
and
inc
dec
dec
cmp
fucomip
jg
jle
daa
pop
aam
test
inc
pop
inc
inc
add
cmp
pop
nop
xchg
xlat
imul
fsubrp
jmp
in
stos
les
mov
fisttpll
lret
cltd
pushf
jl
sarb
mov
add
mov
inc
or
sti
call
repnz
pop
and
dec
test
or
sbb
inc
ret
xor
sub
jno
pushf
xchg
jno
pop
inc
les
into
xor
cli
sub
icebp
xor
loope
fdivl
inc
out
fcmovnu
and
lret
inc
clc
push
lret
or
mov
push
push
sub
aaa
push
pop
ffree
mov
xchg
jl
xchg
mov
pop
xor
push
sbb
lahf
test
add
lds
xchg
lea
std
loopne
out
mov
lret
dec
mov
jbe
cmpsl
inc
ficoml
hlt
dec
scas
out
mov
insl
int
in
mov
test
aaa
int3
mov
leave
fcoms
jp
push
push
mov
cs
xchg
xor
mov
adc
push
test
pop
sbb
sub
nop
add
outsb
adc
push
neg
clc
inc
inc
push
test
push
dec
inc
pop
test
test
inc
inc
xorl
test
pop
and
xchg
mov
imul
push
mov
xor
ds
ds
pop
cmpsl
stc
mov
ds
ja
dec
dec
xchg
xor
mov
push
cltd
pop
sbb
mov
imul
out
mov
negl
sahf
sti
or
mov
push
xor
xchg
and
mov
loopne
clc
add
push
and
mov
adc
outsb
out
shlb
lret
out
jbe
test
fbld
popa
lea
push
pushf
out
ds
dec
rcrb
aad
push
subl
mov
push
pop
scas
xlat
aas
cld
sub
int3
inc
jno
add
pop
loop
jmp
leave
psrld
ret
cs
ret
inc
loopne
test
lcall
int3
movsb
repz
jmp
or
inc
and
adcb
push
lret
jo
iret
fucom
xor
cli
xor
cmp
xchg
cmpsl
dec
push
sbb
movsb
pop
pusha
jmp
push
divl
xor
jns
jmp
xchg
lea
xchg
dec
add
clc
incb
testl
aad
push
jl
notb
mov
inc
and
cmp
xor
push
mov
mov
cmp
adc
sub
jl
insb
fwait
sbb
pushf
jge
pop
add
fadd
hlt
je
cmpsb
into
es
popf
daa
out
jmp
daa
sub
adc
xchg
dec
scas
out
out
ljmp
dec
adc
popa
pop
dec
pop
stos
sub
loopne
jb
inc
jmp
sub
dec
xchg
push
outsl
mov
std
popa
insb
in
das
xchg
cmp
sbb
push
pushf
ja
outsb
nop
sub
jbe
mov
and
fisubrs
dec
cmp
in
pop
xor
mov
dec
cmp
pop
rcrl
scas
jge
sub
sub
daa
mov
or
cmp
call
add
add
aam
fcoml
cmp
enter
fistps
mov
sub
push
cli
mov
jmp
lcall
dec
mov
sbb
test
lret
adc
cltd
inc
adcl
mov
scas
popa
ja
push
mov
jge
cmpsb
xor
cmpsb
dec
aas
dec
add
mov
in
nop
jg
fdivr
fidivs
rorl
ret
adcb
call
sbb
jns
in
cmp
sbb
mov
shlb
adc
mov
fnstsw
sub
jo
and
jns
push
in
je
popf
sub
cmp
inc
push
fmull
fimuls
cwtl
cmp
fldt
fistl
mov
add
aaa
mov
sub
mov
fwait
clc
push
bound
cmp
jns
daa
adc
popa
mov
or
push
and
nop
scas
out
stos
icebp
and
mov
lds
jg
jmp
sub
aad
shll
sti
add
hlt
cli
aaa
mull
arpl
push
inc
test
mov
jmp
dec
shrl
repz
ljmp
pusha
push
pop
or
and
dec
lods
mov
jmp
movsb
mov
mov
mov
push
mov
fistps
stc
mov
scas
add
mov
mov
push
pop
btr
cli
mov
mov
adc
jge
jmp
repz
mov
xchg
popf
movsl
out
and
sbb
repnz
and
sti
stc
sbb
adc
inc
jne
pushl
push
pushf
sarb
xor
xorb
jmp
daa
and
ret
inc
xor
shll
divb
xchg
jg
jecxz
dec
jle
es
and
and
movsb
xchg
enter
jl
lret
ffreep
jno
jecxz
cmpb
mov
mov
popa
and
pop
movsl
idivl
hlt
cmpsb
cmp
gs
xchg
lahf
into
fs
lock
imul
xor
pop
push
icebp
lea
adc
push
push
ret
stc
sbb
out
adcl
movsl
mov
iret
hlt
jmp
dec
mov
hlt
std
dec
cmpsl
popf
cmp
icebp
sub
mov
add
push
cmp
mov
xchg
std
out
in
bound
mov
lcall
cmp
movsl
cmpsb
enter
ljmp
adc
test
pop
inc
adc
lock
pmaxsw
or
pop
pmulhw
in
sbb
lods
mov
pop
aas
testl
mov
dec
js
xchg
mov
jl
frstor
dec
jp
pcmpeqd
push
dec
daa
test
add
ds
jp
shrl
xchg
pop
cmp
push
jo
dec
pop
testl
lock
add
xor
or
mov
stc
aad
inc
ret
imul
mov
mov
xor
cmp
cmp
mov
or
jp
push
push
add
push
sti
add
sbb
shll
inc
jmp
xchg
add
mov
sbb
pop
and
out
icebp
lods
cmpl
test
outsb
push
mov
mov
dec
inc
sti
ror
loopne
icebp
icebp
out
and
cmp
push
cmp
sbb
rep
cwtl
hlt
mov
arpl
add
mov
pusha
jecxz
loopne
add
cmp
les
movsb
jo
ds
imul
xor
cwtl
outsb
movsl
mov
push
aas
sbb
inc
cld
and
cltd
mov
call
int3
sbb
sub
and
mov
aad
mov
add
rorl
xchg
loop
or
stc
pop
adc
mov
scas
add
inc
push
add
dec
add
jo
ja
adc
pop
cmp
mov
fnstsw
scas
imul
push
dec
loope
add
imul
outsb
lret
cmp
mov
xor
push
stos
push
loop
push
mov
outsl
les
loop
jp
xorl
insb
adcl
adc
int
pop
push
cmp
rorl
push
inc
mov
pop
test
push
outsb
adc
xor
jb
sub
or
push
frstor
or
lods
dec
ret
push
xabort
mov
popa
ja
mull
cs
subb
add
loopne
sbb
sahf
xchg
inc
in
scas
ret
jae
or
add
xor
pop
pop
sub
inc
add
xor
in
inc
xorb
cmp
enter
mov
loop
mov
inc
sar
jmp
and
or
out
cwtl
or
lahf
jnp
pop
mov
test
xchg
sub
cmp
add
out
ss
sub
adc
inc
add
adc
and
out
mov
hlt
cmp
cmp
cld
fcompl
daa
jno
repnz
ret
loopne
xor
out
shr
sbb
int3
mov
repnz
loope
dec
clc
mov
sub
inc
jmp
cmp
cmp
les
mov
in
inc
add
scas
or
cmp
xchg
pop
jle
or
orl
mov
je
inc
and
add
cmp
hlt
out
jmp
fsts
sbb
or
fmull
jb
jb
mov
jns
or
jl
cmpl
cmp
enter
subb
xchg
pop
rcl
out
lock
push
cld
orl
sub
out
push
inc
jecxz
test
jo
xor
rorl
xchg
jmp
pop
les
repnz
add
pop
lcall
adc
mov
imul
incl
mov
xor
jbe
repnz
aad
or
sbb
lcall
dec
cmpsl
mov
ja
cli
mov
rclb
push
shr
pusha
fucomi
xor
dec
jne
popl
or
inc
pop
fwait
icebp
pop
or
out
in
sbb
and
popa
sub
mov
jo
test
push
and
pop
add
idivl
pop
inc
cmpsl
je
daa
mov
sbbb
cmpsl
sbb
dec
dec
push
sub
iret
leave
pop
shrb
sub
mov
adc
cwtl
enter
push
loop
pop
add
sbb
xor
and
out
fistpll
mov
mov
add
ficompl
repnz
imul
fidivrl
jge
mov
inc
xchg
adc
jo
sahf
adc
mov
cmovge
rol
sbb
adc
cwtl
jp
push
es
imul
inc
out
out
aam
outsb
jne
ja
mov
movsb
popf
mov
sarb
and
aam
adc
outsl
mov
icebp
push
or
lods
pop
ror
in
div
mov
mov
sbb
xchg
mov
repz
in
jo
repnz
cmpsb
je
call
mov
adc
std
jmp
filds
push
std
das
mov
outsl
loopne
test
lods
pushf
imul
mov
jge
inc
lahf
xchg
xchg
xchg
xchg
pop
add
shlb
dec
leave
movsl
push
push
mov
fwait
cmpb
cmp
shll
fidivl
out
xchg
mov
jge
popa
popf
xchg
mov
mov
iret
push
fidivs
mov
dec
adc
mov
js
jp
test
popf
or
es
sub
mov
leave
mov
out
shlb
pop
lea
lods
loop
sub
loope
sbb
jecxz
mov
jp
scas
jl
pop
ret
mov
inc
fnstcw
fsts
call
daa
adc
movl
sahf
test
roll
adc
push
mov
mov
xor
adc
pmuludq
or
xor
pop
lahf
fdivl
dec
lds
ja
sub
jo
dec
cmpb
les
andl
ret
mov
or
addr16
loopne
fimuls
and
or
into
jo,pn
out
les
into
sub
jno
mov
xchg
cltd
std
push
mov
cmpsl
loope
inc
mov
mov
adc
mov
aad
inc
js
loop
adc
in
repnz
dec
lock
stos
addr16
push
mov
mov
nop
std
mov
pop
mov
iret
in
dec
jge
and
fistl
cmp
addr16
cmp
mov
push
mov
cld
jmp
call
sbb
std
jb
xchg
repz
daa
cmp
cmp
out
dec
lds
addl
jp
xor
mov
mov
scas
sbb
enter
testl
add
mov
mov
mov
mov
inc
inc
loopne
rorl
pushl
div
ret
dec
cmp
jp
insl
mov
or
and
test
cmp
xchg
jae
je
mov
dec
in
fisttpl
push
fidivrs
dec
movsl
call
push
and
xor
inc
mov
fs
je
mull
lret
push
lcall
jl
xchg
jle
mov
inc
mov
aam
fnsave
jmp
ss
ret
incb
dec
cmp
jnp
xchg
inc
in
sub
xchg
dec
or
mov
dec
cs
jae
mov
out
fisttpll
dec
ljmp
xchg
pop
cli
pop
insl
pop
mov
imul
add
pop
pop
push
lock
mov
adc
lret
in
add
adc
pop
imul
sub
data16
stc
mov
xor
imul
mov
mov
out
add
popf
dec
mov
mov
popa
into
push
hlt
adc
rolb
xchg
mov
push
nop
test
cli
push
adc
int3
not
sbb
insl
aaa
cmpb
inc
mov
lods
mov
adc
mov
loopne
push
dec
std
jbe
jl
test
and
daa
inc
push
mov
fidivrs
sbb
sbb
je
inc
push
es
and
inc
jecxz
adc
mov
jns
imul
test
adc
mov
cmp
and
imul
xlat
outsl
jecxz
and
sbb
in
loopw
inc
jl
int
test
arpl
pop
add
test
rclb
sahf
fs
push
mov
jecxz
or
fadds
mov
mov
xchg
stos
jp
adc
jae
cwtl
inc
popa
push
jne
mov
xchg
imul
or
int
xor
pop
popa
sub
mov
lret
xor
fs
sbb
dec
cwtl
test
pop
jecxz
imul
cmp
mov
push
jns
mov
mov
test
inc
cmpsb
or
pushw
mov
add
fistpl
or
mov
mov
inc
in
xchg
and
shlb
fisttpl
cmp
xor
fldl
and
dec
cs
mov
add
mov
imul
notl
jecxz
in
push
mov
imul
fstps
pop
scas
aaa
test
inc
icebp
ficoms
add
xor
xchg
jecxz
iret
mov
insb
cmp
repnz
mov
cs
movsl
jge
push
adc
pop
test
sub
xor
pop
outsl
aaa
mov
push
xor
jne
sub
repnz
cmp
mov
adcl
scas
mov
jl
popf
push
repnz
aad
inc
jmp
mov
rcr
jp
out
and
mov
insb
mov
cltd
cmc
orb
lcall
or
or
imul
inc
fistps
test
roll
shrd
aad
jnp
xchg
sbb
and
ljmp
jb
push
lods
and
lret
cmp
lcall
cmpsl
flds
bound
mov
mov
in
or
repz
scas
cmp
rol
add
sub
bound
push
je
pop
pop
inc
addr16
mov
les
repz
inc
das
push
push
dec
xchg
push
push
cwtl
sub
dec
icebp
popf
aad
shll
sbb
pop
loopne
int3
mov
dec
mov
dec
push
mov
stc
clc
fwait
jbe
pop
or
push
sti
mov
bound
and
fsubr
pushf
mov
imul
adc
mov
mov
adc
jle
inc
bound
cmp
pop
adc
pushf
mov
jecxz
xchg
lret
or
xlat
movsl
fmull
test
dec
sbb
and
mov
jnp
mov
je
cmp
in
cld
fisubrl
ljmp
test
fwait
hlt
rcr
mov
lds
pusha
int3
xor
sub
mov
push
ja
adc
dec
stos
sarl
lahf
test
push
inc
pop
jne
jbe
repz
loope
sarl
inc
mov
sar
pop
repnz
stos
inc
mov
out
xchg
mov
mov
std
push
ljmp
pop
mov
cltd
mov
dec
ret
sub
cmc
iret
xchg
je
sbb
stos
arpl
or
leave
push
pop
push
shlb
stos
cld
xor
or
pop
loop
sarl
enter
call
je
inc
das
pop
inc
xchg
loop
dec
daa
mov
jo
dec
xor
rorb
mov
and
xchg
shr
mov
push
inc
lds
sub
in
ljmp
fimull
in
in
mov
sbb
mov
cs
enter
xorl
int
pop
mov
aad
je
je
loop
in
xchg
inc
adc
mov
inc
push
adc
or
lds
lds
scas
mov
insl
test
push
add
outsl
je
pop
xchg
testl
mov
mov
imul
sbb
clc
mov
stos
enter
mov
pop
test
mov
xchg
inc
cmpps
imul
sub
pusha
movsl
call
pop
or
cs
push
adc
pop
mov
xchg
dec
fnsave
roll
mov
call
dec
loopne
adc
fwait
mov
cmp
repnz
inc
out
mov
repnz
sbb
in
shlb
mov
dec
shlb
jle
js
add
cmp
loope
cmp
cwtl
inc
lods
mov
js
sub
dec
pop
mov
mov
sbb
or
sbb
pop
lds
lcall
cltd
dec
lcall
jne
xorb
cmpsl
jp
sbb
icebp
dec
leave
arpl
cmpsw
dec
jnp
call
pop
pop
jge
cmp
inc
and
fimuls
pop
sub
int3
and
sahf
add
stos
dec
cmp
out
xor
jnp
mov
mov
lahf
ret
xchg
mov
lea
out
scas
sub
xchg
adc
xchg
cmp
lahf
aam
std
ret
mov
sbb
adc
fisubs
shrb
insl
xor
inc
scas
mov
sub
sahf
out
stos
sub
sbb
sar
ja
adc
and
lcall
jb
xor
cld
xchg
shll
je
sbb
push
or
jmp
mov
xor
ljmp
mov
addr16
inc
rclb
cmp
push
push
pop
int
imul
pushf
jae
sbb
add
add
int
or
loope
icebp
test
push
lock
mov
mov
cli
xchg
jp
fwait
push
fwait
xchg
loopne
rclb
lea
scas
cmp
mov
scas
add
cli
mov
and
int
adc
test
in
js
adc
jp
cmp
filds
repz
fwait
repnz
jge
xlat
push
scas
mov
aas
mov
ret
push
fnstenv
jae
push
mov
cmp
dec
xor
mov
int3
sub
add
fiadds
mov
mov
scas
outsl
fwait
inc
outsl
jmp
test
int3
xor
mov
mov
pop
and
fmuls
or
sub
lea
inc
loope
pop
mov
subl
and
and
sbb
imul
sbb
pop
mov
push
sub
mov
xchg
stc
enter
rcrl
movsl
in
test
jp
xor
dec
or
call
icebp
enter
daa
stc
imulb
fnstenv
sub
loope
repz
ja
mov
jle
inc
xchg
les
adc
xor
add
aad
int
pop
jp
es
sarl
mov
fs
bound
xor
lcall
or
adc
push
aam
icebp
ja
xor
aas
cld
es
jae
or
ja
sbb
cs
xchg
sbb
cmp
outsb
cmp
daa
scas
movsl
daa
xchg
iret
jle
les
lods
cwtl
les
lahf
xor
int3
movsl
sbb
aad
repz
adc
jmp
sbb
sub
push
lahf
int
push
inc
popl
seto
jne
push
into
fdivs
push
jno
fldlg2
cmp
and
push
jae
mov
jnp
pop
test
mov
mov
sbb
lcall
inc
inc
xor
xchg
fcmovnbe
mov
or
fwait
shlb
mov
push
dec
or
cmp
pop
ljmp
loope
test
pop
jmp
xor
add
ds
aam
or
ret
pop
imul
jb
dec
cli
jle
push
and
insl
dec
std
mov
mov
mov
add
aam
pop
cmp
xchg
mov
adc
scas
push
pop
lret
nop
sub
jp
inc
sub
lods
in
jns
jo
xchg
xor
jle
lds
mov
xlat
mov
ficoml
add
inc
and
xchg
aaa
push
rcl
adc
mov
les
iret
mov
dec
dec
popf
sbb
jl
sub
jecxz
jmp
pop
sub
stos
scas
loope
rclb
adc
lods
mov
imul
mov
std
pop
jno
jns
movsl
mov
jmp
mov
pop
jo
and
mov
mov
jnp
fidivrl
popa
jle
adc
cs
inc
lahf
es
pop
in
or
dec
repz
mov
and
gs
mov
rcll
sub
movsb
gs
add
jnp
ret
mov
push
test
imul
mov
xchg
les
popf
imul
pop
dec
repnz
ss
out
mov
mov
cmp
cmp
xchg
push
loope
mov
mov
aad
sub
jne
orb
adcl
pop
test
mov
push
pop
adcl
and
lea
and
shl
out
and
pop
int3
arpl
test
stos
mov
std
filds
shlb
rorl
mov
and
jg
mov
mov
into
popa
sbb
inc
out
cmp
pop
mov
mov
sbb
std
dec
or
iret
xorl
fcoml
dec
push
ds
mov
cmpsb
inc
xor
testl
jb
int
dec
mov
mulb
rcrl
nop
pop
fidivrs
pop
es
js
cwtl
pop
in
in
int3
jg
or
xchg
iret
push
mov
mov
dec
hlt
pop
xchg
mov
xchg
cwtl
mov
dec
sub
add
inc
pop
sub
and
adc
movsl
ljmp
fwait
and
pop
scas
lret
pop
jecxz
dec
ds
pop
mov
mov
das
stos
and
stc
out
pslld
sti
movsl
xchg
cwtl
iret
mov
fs
xchg
add
jle
xlat
xor
cwtl
sbb
shrb
in
push
insl
or
jmp
pop
jmp
and
loopne
popa
sahf
xlat
mov
movswl
jl
sub
imul
xor
xchg
mov
dec
xor
movl
sub
loopne
andl
gs
daa
andl
jne
xor
or
jecxz
xor
jo
movsb
or
icebp
jb
jge
stos
into
and
add
pop
leave
add
pop
rcrl
pop
outsl
je
push
repz
cmc
adc
sub
sub
lods
adc
int
xchg
inc
imul
add
iret
lds
adc
clc
test
std
leave
xor
sbb
call
in
dec
xlat
mov
lods
sbb
aas
xor
pop
repnz
sbb
jns
lret
setp
enter
dec
push
push
insb
or
cmpsb
jecxz
mov
shl
pop
mov
xchg
lcall
repz
je
hlt
push
mov
jno
fcmovnu
pop
mov
sub
mov
jle
addr16
sub
mov
lock
dec
enter
leave
popa
in
push
ss
data16
lea
sti
outsb
mov
or
out
into
rorl
and
iret
clc
nop
lods
sub
insb
dec
mov
std
in
int
jge
dec
or
insl
mov
xor
enter
stc
cmp
sbb
pop
lcall
push
jmp
mov
arpl
pushf
gs
jge
pop
adc
fdiv
pop
and
cmc
inc
flds
add
xchg
adc
pop
stos
mov
mov
data16
xlat
mov
add
lcall
mov
lock
ja
add
rcr
mov
int3
jo
and
shlb
cli
sbb
push
fs
pop
loopne
aad
and
adc
iret
sub
out
cmp
jle
scas
sub
pop
push
mov
stc
pop
jno
pop
pusha
add
std
mov
pop
imul
jbe
mov
nop
mov
cmp
jl
sub
adc
sbb
and
jne
push
clc
mov
outsl
fcomip
adc
xchg
cmpsl
es
or
and
pop
ret
lcall
or
xor
cmpsb
cmp
add
daa
add
mov
push
mov
dec
or
popa
insl
lds
cmp
jge
fsubp
and
cmp
xor
data16
xor
inc
adc
stc
mov
pop
ret
lahf
xchg
mov
outsb
pop
aad
xchg
xchg
xlat
faddl
nop
jg
mov
decl
or
mov
add
hlt
lds
repnz
or
pushf
mov
shlb
or
push
subl
jo
scas
stos
or
sbb
dec
push
loopne
sub
mov
jmp
dec
and
mov
repnz
or
es
adc
out
imul
mov
stc
orl
sub
sarb
cld
aam
jno
pusha
jno
xor
cmp
loopne
les
dec
jns
idivl
push
stos
push
jecxz
add
xor
js
add
fdivr
bound
xchg
cmp
lcall
mov
xor
xchg
adc
adc
mov
hlt
lcall
push
fcomp
xchg
fcomp
jno
and
loope
xlat
fdivrl
mov
les
lcall
xor
pop
test
jl
stos
mov
pop
bound
cmp
cmc
jb
clc
aam
repz
mov
hlt
cmp
mov
mov
out
loop
jo
push
out
dec
int3
cmp
or
addb
popa
inc
enter
jae
repz
hlt
cmp
sub
jb
stos
sahf
sub
cltd
mov
lods
fs
std
jnp
ds
insl
cmp
add
hlt
add
in
pop
scas
mov
pmaxsw
js
xchg
clc
mov
fisubrs
out
xor
mov
fstpt
jl
or
repnz
cmp
jmp
lret
fcmovnu
jge
pop
xor
mov
fisubs
xor
adc
lods
dec
cs
cli
cmp
mov
mov
repnz
cmpsb
push
not
ficoml
imul
sahf
daa
movsb
lds
enter
jae
xchg
pop
sub
fnstcw
or
enter
adc
cmpsb
lret
cmp
sahf
aam
out
cmp
repz
jge
js
icebp
fwait
fwait
sub
inc
pop
push
add
sub
test
sub
scas
or
pushf
movsl
test
inc
mov
aam
scas
pop
mov
inc
mov
jns
pop
int3
jg
lahf
xor
aam
cmp
imul
popf
mov
jecxz
mov
popa
aam
jae
lods
mov
jbe
pop
ficoms
sub
in
or
lods
sbb
stos
popa
push
pop
sti
hlt
mov
or
cmp
and
repnz
inc
out
xor
ds
ds
pop
mov
xchg
out
movsb
mov
in
mov
loopne
std
dec
mov
or
lret
lods
in
xchg
jge
mov
jmp
dec
loop
cs
out
dec
fstl
pop
stc
add
mov
idivl
or
rcr
in
icebp
sbb
fbstp
sti
xlat
or
or
jo
push
dec
push
jp
jo
shlb
ja
cmpsb
cmp
mov
cmc
mov
out
fistpll
dec
jge
mov
inc
mov
pop
icebp
sub
pop
test
push
call
mov
sub
nop
pop
inc
arpl
add
lret
mov
dec
push
adc
mov
xchg
inc
adcb
add
adc
adc
sub
mov
shlb
aas
push
sub
ja
mov
ja
sbb
sub
inc
mov
cld
aad
pusha
mov
sbb
stos
xchg
adc
data16
cli
std
xchg
mov
dec
inc
mov
mov
jno
dec
lods
push
jecxz
pop
mov
nop
xlat
adc
and
mov
mov
test
pop
out
mov
push
sub
outsl
ret
mov
popf
push
inc
mov
shl
cmc
loop
inc
push
jns
sub
pop
pop
dec
das
xchg
aas
and
fsubr
test
leave
mov
insl
cmpsb
scas
inc
pop
inc
mov
or
enter
and
lea
mov
int3
enter
lods
bound
push
inc
jge
jo
pshufw
xor
call
nop
out
push
cmc
out
mov
sbb
fwait
xor
pop
inc
fs
ljmp
daa
lea
int
out
mov
inc
stos
mov
leave
dec
dec
mov
in
jnp
push
jb
jg
and
call
inc
push
jg
xor
mov
cmp
push
push
insb
arpl
sti
xchg
jg
sub
pop
jge
outsb
ret
out
add
cld
push
pop
fisttps
xchg
xchg
mov
shll
pop
cmp
sbb
cli
out
xor
add
mov
xor
nop
rorl
jge
add
mov
out
jl
ror
sbb
inc
and
sbb
sub
or
cmp
je
pop
dec
lret
inc
insb
adc
popf
mov
mov
and
or
in
pushf
lret
adc
add
shlb
mov
xor
int3
sub
dec
paddb
pop
sbb
arpl
into
jae
xchg
pushf
xchg
jg
outsb
fsubp
in
sti
jae
cmp
xchg
movsb
adc
scas
xchg
xchg
lret
inc
inc
xor
aaa
testb
in
jb
cmp
mov
jns
xlat
pop
loope
cmp
in
repz
mov
sbb
cltd
cmpsl
out
pop
les
sub
mov
add
cmp
mov
or
scas
shrl
jp
or
shll
aam
lret
cmp
mov
sti
in
inc
add
sub
addr16
pop
cmp
addl
sar
add
adc
jp
xor
call
ret
scas
nop
jg
outsl
sub
pop
pop
mov
push
loope
mov
pop
dec
inc
or
xchg
fs
shr
daa
adc
stc
rcll
or
xor
test
mov
sbb
scas
sbb
movsl
fwait
push
testb
adc
sub
dec
lahf
in
mov
cmpsl
inc
mov
ss
call
insl
mov
xor
leave
lret
rcrb
push
xlat
mov
inc
imul
inc
ja
arpl
aam
dec
inc
repnz
pop
sbb
lea
cmpsl
jle
int
xchg
jae
int
jge
and
lea
cmp
mov
fstpl
inc
push
lock
sahf
push
ficoms
mov
nop
sub
loop
pop
aam
sub
cld
inc
cmpsl
sbbb
mov
enter
sub
dec
fisttpll
push
push
pop
lcall
test
mov
pop
pop
ficomps
outsl
add
push
in
les
aam
xchg
pop
sub
and
pop
flds
xor
jmp
xor
test
xchg
cmp
jp
inc
and
sbb
add
enter
rcrb
dec
mov
int
push
sub
nop
mov
push
pop
xor
stos
push
dec
adc
mov
push
lock
cmp
into
cwtl
imul
mov
imul
sub
xor
jns
addr16
dec
adc
jp
adc
adc
loop
daa
adc
push
rorb
scas
xor
lret
pop
movsb
jne
pop
pop
gs
inc
or
movsl
mov
jg
xor
dec
popa
fstl
inc
push
inc
adc
and
je
lret
test
loopne
xchg
jp
bswap
ffree
in
add
aad
sub
sti
movl
sub
es
pop
fnstcw
cmp
mov
jecxz
adc
repnz
cltd
and
std
inc
sub
cmp
or
adc
out
pushf
jmp
push
call
sub
je
xor
or
sbbb
mov
mov
jmp
mov
mov
pop
repz
add
adc
pop
cmp
lret
add
mov
popa
data16
int3
rclb
call
or
push
pop
lret
xchg
fs
outsb
js
cmpsl
or
outsl
push
pop
pusha
sqrtps
push
loopne
lcall
xchg
lods
fs
je
std
addr16
sbb
aaa
sahf
popf
add
xchg
mov
add
cmpsb
adc
and
mov
fldl
sub
movsl
mov
pop
push
push
xchg
sti
js
fdivs
cld
popf
icebp
mov
mov
aam
sahf
xor
or
pusha
xchg
adc
and
test
loopne
jns
mov
sahf
cmp
aad
fstpl
add
adc
cwtl
sub
and
outsb
lods
bound
xor
mov
outsb
sub
dec
out
cwtl
enter
adc
rcrb
mov
lock
les
leave
andb
notb
shlb
lods
mov
in
lret
or
mov
adcb
fnstenv
sub
test
popf
xchg
inc
outsl
pop
add
jns
popf
xor
int3
repnz
push
test
adc
push
cli
addr16
mov
cld
scas
lods
dec
aam
arpl
push
mov
or
bound
jno
cli
or
push
nop
adc
lods
dec
mov
xor
push
push
mov
ljmp
imul
xchg
mov
xor
dec
xchg
fildll
mov
mov
pop
repnz
add
aas
lds
std
in
push
pop
loope
sub
stos
test
jmp
jbe
lds
dec
pop
ret
test
loop
push
pop
inc
xor
loop
jb
cwtl
pop
in
xchg
and
nop
int3
and
mov
mov
loopne
inc
mov
loop
movsl
iret
push
inc
mov
fmull
imul
cmp
fadd
xlat
mov
icebp
mov
cmp
fistpl
out
stos
jb
adc
fildl
mov
ljmp
adc
mov
cmp
in
mov
imul
jmp
mov
adc
lock
dec
movsb
mov
mov
sbb
jo
mov
add
mov
mov
sbb
and
lahf
xor
sbb
and
enter
arpl
pop
mov
sbb
pop
or
jae
rcl
lods
aam
test
loop
cmpsb
pop
push
mov
jno
in
sbbl
dec
xchg
popf
xor
nop
xchg
mov
sub
mov
mov
mov
fisubl
dec
cmp
insl
sbb
mov
or
ds
mov
dec
inc
call
inc
inc
xchg
pushf
xor
lcall
and
jg
push
sub
ljmp
xchg
shll
pop
inc
shlb
xchg
data16
sbb
mov
push
push
cmp
mov
aaa
push
and
outsb
sbb
add
jp
int3
mov
fistpll
or
int
push
lods
ja
push
cmp
pop
lret
inc
clc
xchg
dec
mov
test
imul
sti
dec
lcall
jno
fs
retw
cs
cli
mov
and
adc
push
push
dec
shlb
sub
nop
lock
es
push
xadd
jg
aas
pushf
dec
pop
sbb
lock
std
mov
fistpll
sbb
andl
inc
or
push
pop
jmp
out
xor
mov
test
idivb
pop
xchg
inc
and
and
imul
sbb
lcall
dec
lahf
out
jns
lods
loopne
xchg
or
int
fscale
clc
cmpsb
dec
outsb
lods
mov
adcl
push
cmp
adc
mov
or
repnz
test
lahf
xchg
jg
out
scas
jb
and
sub
mov
inc
clc
push
dec
int3
pop
or
int
std
xor
shlb
bound
cmp
andl
pop
pusha
push
mov
xlat
je
int
je
std
in
sub
cwtl
in
sbb
push
pop
xchg
xor
mov
sbb
aas
xchg
mov
xchg
in
ss
fistpl
gs
push
insb
sarl
xor
std
dec
mov
fistpll
movsb
les
mov
lds
inc
arpl
shrb
or
jb
push
into
pop
or
mov
mov
neg
mov
add
fcompl
test
insl
mov
cmp
ds
ds
aam
cltd
movsb
pusha
ss
jle
imul
aad
mov
cmpsl
fwait
mov
ficomps
jp
hlt
fidivrs
adc
inc
lahf
and
sbb
xor
pop
xchg
aam
cld
push
in
push
pop
adc
testb
and
jns
pop
fnsave
xchg
ds
fcmovne
pusha
push
rcrb
imul
lods
stc
dec
pop
int3
adc
loopne
pushf
add
xorb
cmpb
jae
mov
jne
sbb
add
popf
aad
addl
jp
iret
nop
addr16
fs
js
add
xor
mov
outsb
stc
and
push
and
in
jg
cmc
inc
jmp
loope
dec
xorl
mov
push
jp
cmpl
and
mov
popa
push
sub
into
sub
lock
lcall
cli
and
movsb
jnp
add
ds
imul
test
add
lret
mov
xor
pop
pop
orl
aam
mov
adc
push
iret
jnp
push
popa
insl
mov
in
inc
in
jecxz
popf
cmpsl
sub
sahf
pop
shrb
push
inc
push
dec
push
scas
shll
ret
cwtl
cmpsb
cmp
push
mov
fucomip
dec
adc
adc
xchg
sbb
mov
or
test
and
nop
and
fwait
jnp
mov
push
repnz
int
pop
push
lea
jle
lahf
shr
cmpsl
inc
scas
jb
addr16
bound
pop
loop
stos
insl
rcrl
sub
das
pop
sahf
pop
xchg
push
inc
cmc
sbb
xor
lods
and
inc
xor
inc
jne
mov
mov
or
push
fcoml
ret
cmp
mov
add
cmp
adc
inc
cld
nop
sti
jae
adc
adc
push
cmpb
xchg
dec
push
out
pop
lds
xchg
or
cmp
movsb
fiaddl
in
pop
popa
xor
push
sbb
mov
sub
sarl
xchg
mov
cld
aam
pop
sbb
xchg
outsl
out
in
hlt
imul
cs
sbb
cmpsb
cmp
adc
jmp
inc
inc
push
push
mov
shlb
mov
mov
pop
mov
mov
negl
out
rcr
mov
repnz
fcmovnbe
push
push
jns
sbb
dec
loopne
inc
roll
std
in
mov
pop
pop
jo
jae
out
or
cmp
jmp
test
lret
dec
lcall
rorb
test
bound
mov
andl
jp
adc
lret
in
scas
cmp
rclb
xlat
push
movsl
push
and
xlat
movsl
cmpsb
and
sbb
mov
mov
and
pop
cli
adc
dec
dec
mov
inc
adc
stos
stc
mov
movsb
ret
mov
out
push
mov
sub
js
or
jbe
dec
lock
stc
and
jb
stc
gs
lret
adc
cmc
jmp
je
ljmp
dec
orps
push
sahf
out
ja
shrb
jmp
add
xchg
in
pushf
mov
jae
fcompl
pop
cltd
imul
xcrypt-cfb
cmpsl
jecxz
aas
nop
out
inc
cmp
xor
xchg
pop
insb
add
dec
mov
push
nop
push
test
xchg
xchg
imul
push
stos
inc
add
cmp
or
outsb
lods
adc
inc
xor
dec
mov
mov
je
lods
add
pop
pop
mov
aam
and
setle
out
leave
pop
sbb
mov
test
in
pop
add
push
aaa
mov
adc
add
xchg
test
ljmp
lcall
stos
fxch
sbb
orl
inc
fwait
pop
shl
jnp
ja
dec
cmpsb
loopne
inc
fisubl
stc
mov
in
out
jae
in
ss
or
xor
outsb
pop
cmc
add
dec
insl
addb
lods
fnsave
jecxz
loope
and
mov
adc
scas
inc
cltd
pushf
rcll
daa
mov
aaa
cltd
mov
sti
out
dec
and
adc
xchg
mov
cwtl
nop
ljmp
sub
jnp
push
sbb
push
stc
jmp
fs
daa
scas
cwtl
push
mov
hlt
fwait
fwait
mov
scas
sahf
jbe
fildl
cmp
xchg
mov
mov
sarl
cmp
jp
les
mov
jae
ljmp
and
movsl
lahf
addr16
pop
cwtl
mov
add
sub
lcall
out
mov
shlb
pop
xor
lret
xor
enter
pushf
jmp
mov
loopne
icebp
cmpsb
mov
push
imul
jg
add
mov
jle
mov
xchg
fabs
sbb
out
mov
xchg
jns
addr16
outsb
sbb
loop
imul
adc
cli
iret
mov
bound
leave
daa
jne
adc
stos
and
addb
dec
pop
xor
and
loope
jns
pop
mov
mov
xchg
adc
mov
mov
push
xor
cmp
mov
mov
fstpt
stc
cmp
rorl
jnp
dec
addb
add
mov
idiv
aaa
pushf
lods
cmpl
fs
sub
in
cwtl
call
dec
cld
sbb
xor
addb
add
lahf
movsb
imul
push
outsb
mov
dec
dec
xor
or
arpl
arpl
jp
popf
imul
lods
fmull
insl
je
fists
xorb
inc
fistl
mov
cmp
shlb
ljmp
call
xchg
das
mov
adc
andb
test
loope
sbb
jle
adc
pop
addb
push
sub
lods
mov
iret
pop
inc
fidivrl
mov
mov
call
adc
cwtl
mov
sub
scas
out
adc
add
nop
sbb
jno
push
les
out
lods
neg
jno
xor
sub
idiv
movsl
stos
sahf
cs
sub
test
pop
inc
imul
aad
cmp
xchg
fidivrs
jecxz
in
ret
dec
push
dec
rcll
pop
js
xchg
stc
mov
adc
lods
sbb
sbb
pop
mov
adc
mov
gs
push
adcb
adc
mov
adc
add
jge
insl
add
and
add
xchg
in
imul
push
out
mov
jecxz
pop
das
add
cmp
xor
mov
cmp
aaa
jg
cmp
repz
mov
jns
cmp
insb
jge
mov
test
arpl
cli
mov
repnz
shrl
fiaddl
mov
nop
lret
xchg
inc
xchg
jle
call
fisubl
push
cwtl
sahf
mov
fists
out
mov
cld
in
mov
fisubl
lret
lret
and
insb
pop
mov
inc
lcall
xor
adc
dec
popa
xchg
movsb
push
lea
daa
arpl
jo
xchg
push
fisttpll
and
pop
daa
mov
mov
loopne
fwait
aad
pusha
adc
mov
or
inc
mov
jb
in
dec
cmc
xor
adc
lods
sbb
repz
in
div
aam
ficoms
outsl
cltd
ds
test
sbbb
cmc
pop
push
lret
jnp
mov
xor
sub
ret
mov
rcll
leave
outsb
or
jp
es
mov
ret
pop
fdivrl
sub
cmp
jp
push
push
clc
cmp
push
lds
jmp
pop
xchg
fsubrs
xchg
add
mov
enter
cmp
xor
sub
test
inc
cmpsb
cli
and
lret
divb
jnp
mov
scas
lret
inc
testl
adc
push
inc
jmp
les
imul
xor
pop
pop
iret
mov
in
cmp
test
jmp
ret
xchg
fwait
sbb
dec
mov
jmp
bound
popf
icebp
jge
pop
sub
sbb
mov
jo,pt
call
nop
in
das
lods
out
or
in
mov
inc
push
mov
les
xchg
mov
jecxz
stc
das
dec
dec
mov
pushf
cmp
jle
xor
ds
cmp
lcall
mov
pop
xchg
push
pop
sub
xlat
mov
cmpsb
mov
adc
pop
or
xchg
fcom
mov
icebp
stos
fdivrp
outsb
or
nop
lea
ret
leave
cmp
lods
jne
or
push
add
ror
clc
lahf
or
or
or
push
mov
ljmp
dec
enter
movsl
scas
cmc
addr16
scas
stos
aaa
ja
call
fiaddl
mov
or
ficoml
xor
rclb
movsb
in
clc
iret
inc
sahf
pop
and
aam
push
pop
push
add
push
mov
aas
fdivrl
jl
jbe
movsb
mov
xchg
and
rorb
pop
and
dec
loope
movq
mov
sbb
fs
in
rol
jge
test
and
xchg
ss
jg
or
add
push
mov
gs
xchg
pop
fnstsw
mov
testb
pop
sub
int
lock
adc
das
lcall
jb
adc
push
xlat
mov
das
cmp
mov
lds
and
push
popa
std
adc
inc
or
cmp
fnstsw
mov
mov
arpl
outsl
jmp
pop
push
adc
or
xor
mov
xor
cmpsl
pop
mov
les
lret
ret
aam
scas
or
push
ja
inc
cmp
out
or
iret
movsl
in
cmp
add
into
mov
imul
sti
les
jle
call
insb
out
inc
ds
push
shr
jg
add
out
out
add
mov
rcl
inc
icebp
cmpb
fmull
jb
fisubrs
aam
dec
imul
nop
arpl
dec
mov
test
xchg
int
jnp
stos
sub
mov
int3
inc
or
adc
push
in
test
out
mov
or
dec
xlat
lcall
aaa
aaa
idiv
push
fiadds
pop
inc
data16
cmp
rcr
sbb
inc
and
add
lds
mov
pop
gs
in
mov
xorl
ss
cmp
adc
cmp
ljmp
call
push
sahf
sub
sbb
cmp
inc
xor
xchg
inc
pusha
cmp
leave
pusha
rclb
cli
xchg
addr16
dec
lcall
lahf
cmc
notb
add
jmp
aaa
in
sbb
outsb
mov
cmpsb
sbb
addb
mov
sub
stos
scas
dec
jecxz
and
jbe
lret
pusha
out
lret
jae
mov
rcrb
adc
pop
jmp
xor
inc
adc
sarb
or
leave
push
faddl
add
or
add
out
pop
pop
sar
fisubrs
divl
sub
enter
or
mov
pop
xchg
fldenv
inc
insl
movsb
cwtl
xlat
ljmp
jg
dec
xchg
stc
cmp
ret
stos
insl
not
pop
push
icebp
cltd
xchg
enter
jecxz
subb
mov
or
scas
cmp
pusha
jp
lods
leave
mov
js
daa
insl
add
pop
xor
adc
mov
out
lcall
stos
insl
repnz
sbb
and
shl
cld
js
mov
lock
fstps
push
cwtl
mov
mov
data16
inc
pop
xchg
ret
xchg
mov
lret
adc
outsb
mov
mov
call
aam
cwtl
sub
sub
pop
push
sbb
jno
xchg
xor
and
stc
pop
out
mov
lret
jecxz
and
cltd
sahf
enter
aad
insb
in
jmp
cli
sub
test
xchg
cwtl
adc
sbb
pop
dec
sub
jl
out
inc
and
sbb
sbb
test
cmp
cmp
mov
add
pop
lea
repz
cltd
lock
fisttps
push
add
jne
jg
mov
lcall
int
cmp
orl
jnp
into
lret
jecxz
addr16
mov
mov
inc
mov
loop
int
insb
inc
in
inc
jno
sub
push
cmpsl
shlb
lds
sbbb
cmp
fs
mov
enter
xchg
lods
shrl
adc
lcall
mov
repz
out
fistpll
xchg
ds
mov
js
jns
pop
lods
mov
add
jmp
sub
pop
sbb
popf
sub
shlb
lods
and
adc
push
test
mov
sub
jne
movb
ds
mov
sahf
cld
shll
daa
addr16
fnstenv
cmp
fiaddl
or
mov
jo
jns
or
cltd
fstpt
sbb
cs
mov
mov
mov
popf
jl
cmp
lods
mov
push
lock
xchg
and
imul
pop
jb
jo
inc
vunpckhps
sbb
xor
arpl
add
xlat
outsb
aaa
sub
sub
aam
mov
adc
dec
mov
mov
icebp
cmp
scas
popl
pusha
popf
cmp
js
or
jl
test
mov
lret
call
mov
lock
jmp
xchg
pushf
mov
mov
jp
sub
and
mov
movsb
mov
or
pusha
sbb
mov
cltd
clc
jle
sub
inc
lds
repz
cmp
scas
addb
push
sbb
outsl
in
inc
and
sub
sub
cmpsb
cltd
dec
mov
sarb
fs
fisubrl
cwtl
data16
mov
dec
dec
aam
mov
adc
xchg
cmp
ret
cmp
mov
aam
push
mov
es
sub
xchg
xchg
subb
fcmovb
jp
pop
pop
push
mov
inc
imul
stc
lods
and
jae
add
mov
pop
inc
lods
jae
xchg
push
jg
push
scas
aaa
pop
mov
faddl
xchg
out
adc
inc
movsl
pop
stos
push
fs
rcr
idivb
cmp
cmp
sbb
insl
xor
xor
fildl
pop
and
sbb
xchg
adc
xor
mov
enter
outsb
mov
pop
lds
xlat
pop
cwtl
testb
lret
jns
sarb
test
out
push
dec
xchg
push
stos
jae
mov
movsl
cs
push
mov
insl
mov
push
cmpsl
add
jbe
add
mov
push
or
sti
loope
pop
mov
syscall
out
adc
and
cmp
pop
pusha
pop
fimuls
sahf
pop
push
repnz
or
fnsave
push
sub
xchg
add
mov
and
rol
xchg
cmp
inc
inc
sub
jmp
mov
xchg
pop
sbb
inc
cmpsb
clc
lock
xchg
data16
adc
xlat
mov
mov
in
jo
hlt
mov
adc
xor
xlat
sub
jb
leave
popa
pop
mov
jp
repnz
lahf
stos
andl
jmp
and
sub
imul
popf
inc
les
ret
jl
sbb
push
add
sbb
adcb
loope
sbb
push
cmc
out
and
add
int3
sub
sbb
ljmp
loope
mov
xchg
mov
sbb
jne
jecxz
std
cmp
pop
mov
cmp
xchg
push
push
dec
push
inc
stos
bndldx
dec
mov
cmp
jno
das
add
negb
push
adc
aam
hlt
out
adc
lcall
or
shlb
loope
cmc
repz
push
jp
mov
leave
outsl
adc
int3
xchg
xor
clc
mov
rolb
jnp
push
or
cmp
je
loop
popa
gs
lods
pop
jb
jbe
enter
aas
adc
repnz
xchg
jae
mov
or
lods
std
add
aaa
movl
pop
cwtl
cmpsb
lods
mov
divb
clc
dec
jns
movsl
mov
cli
scas
mov
insl
xlat
push
jp
and
cli
cmc
sub
jle
mov
outsl
sub
pusha
xlat
inc
or
pop
xchg
dec
lcall
icebp
and
jae
daa
add
shlb
xchg
jne
aas
repnz
mov
shr
xor
mov
lds
cmp
aad
rcrl
add
das
lahf
clc
out
ljmp
out
jp
jnp
in
sbb
mov
arpl
sub
movsb
enter
out
jno
clc
cmp
jp
sbb
jnp
adc
mov
js
mov
outsl
aam
or
ljmp
xchg
cmpsb
push
fucom
movsl
pusha
push
popf
push
cltd
out
repnz
lret
les
icebp
sbb
and
test
xchg
push
adc
push
xchg
mov
shl
and
sahf
sbb
gs
mov
or
lea
out
dec
lds
cwtl
push
adc
imul
aad
lods
mov
jne
test
dec
inc
xor
inc
int3
push
scas
dec
mov
inc
xlat
or
xchg
loopne
push
fildll
dec
idivb
loopne
mov
mov
insb
inc
mov
jns
jle
mov
xchg
fs
mov
outsb
dec
xchg
sub
or
ja
and
daa
mov
addr16
or
clc
cld
aas
pop
sub
outsl
cs
cmp
xchg
push
orl
adc
lea
ljmp
push
pop
mov
mov
ds
push
jne
sbb
jg
sbb
jp
inc
cmp
in
stos
insb
mov
stc
std
movsl
mov
mov
bound
fldl
outsl
pop
rorl
data16
shll
outsb
js
cmp
cld
or
call
out
mov
inc
fiadds
adc
jns
aas
mov
xorb
sbb
pop
xchg
int
mov
add
push
psraw
sub
push
inc
cli
push
mov
sahf
leave
xchg
sbb
insl
ja
cld
mov
leave
incl
outsl
mov
sub
insb
in
imul
ja
bound
nop
mov
push
hlt
repz
test
cltd
sbbb
dec
cmp
and
in
pop
jle
mov
mov
aad
xor
jb
jne
pop
repz
add
sahf
outsl
push
dec
arpl
fstpl
mov
int3
aad
jp
negl
jbe
clts
sub
fwait
in
jbe
cmp
xchg
gs
sbb
xchg
mov
mov
movsb
dec
loopne
imul
call
pop
test
cmpsl
adc
push
mov
btc
adc
inc
and
out
cmp
pushf
movsb
jo
push
loopne
call
mov
jne
cmpsl
ror
iret
arpl
mov
fsubs
xchg
mov
fldenv
iret
jno
jg
mov
dec
shl
sbb
out
aas
insb
sub
movl
jmp
sahf
clc
inc
lods
fisubs
add
pop
or
or
cmc
pop
iret
addr16
adc
cmc
sbb
stos
sbb
inc
aas
mov
push
bound
imul
sub
stos
outsl
das
adc
sbb
test
lahf
xchg
stos
push
pop
and
ffree
or
dec
sahf
or
std
fs
xadd
mov
push
or
jae
test
push
hlt
mov
pop
movsb
ret
ret
or
jecxz
ss
enter
mov
sub
add
cmp
dec
or
es
cld
stos
mov
add
adc
or
mov
adc
sbb
dec
aad
sbb
jp
inc
int
fiadds
fwait
adc
add
jge
cmpsl
rclb
inc
xchg
sti
sub
repnz
iret
push
orl
cltd
addr16
pop
fsubs
xlat
scas
mov
pop
mov
enter
nop
xor
lock
or
add
imul
pop
or
je
addr16
int3
xchg
xlat
lods
dec
fcom
inc
sahf
loopne
jle
cli
cmp
sahf
out
xor
movsb
xchg
jp
leave
cmpsb
mov
sbb
adc
dec
or
mov
pusha
cmp
push
or
sub
dec
sub
fistps
inc
divb
popf
jno
aas
pop
jno
stos
cmp
add
pop
mov
sub
gs
jne
pop
xor
mov
cmp
stos
sub
in
push
xchg
xor
adc
dec
mov
jb
or
daa
dec
popf
fidivrs
push
adc
adc
shll
jno
jae
pop
pop
jbe
or
mov
aam
xchg
out
pop
popa
ljmp
sub
stos
or
push
mov
inc
ss
rcrl
das
scas
jae
cmp
sub
push
cltd
dec
test
push
mov
mov
adc
data16
pop
nop
icebp
rcrb
add
jns
cmp
ja
mov
dec
jae
aas
cwtl
out
addr16
sub
daa
pop
push
stc
jecxz
insl
sbb
pop
fsubp
and
dec
pop
mov
scas
inc
cld
clc
test
idivb
into
fwait
ds
xchg
pop
sbb
jo
ret
stc
or
mov
mov
dec
enter
dec
cwtl
jl
jge
push
jb
sub
adc
in
lcall
adc
pop
pop
cs
sub
cwtl
outsl
clc
pop
xor
lahf
arpl
data16
inc
adc
xlat
lods
sub
add
xor
std
icebp
sahf
cmpsb
fnstcw
mov
outsl
cld
shrl
ds
pop
cmc
ja
pop
mov
pop
in
dec
out
lea
icebp
out
out
in
stos
push
stos
pop
scas
out
and
rorl
int
sub
lret
outsl
inc
cltd
imul
shr
in
mov
mov
cli
push
pop
xor
out
xchg
sub
andb
mov
lds
and
push
in
out
repz
rcl
mov
and
xor
nop
cmc
iret
lods
pop
call
jnp
movsb
subl
shll
jge
test
in
xorb
mov
mov
sub
cmp
loopne
ret
ret
xchg
cld
adc
xor
jnp
and
rclb
pop
dec
push
mov
xchg
push
js
outsb
cld
inc
jl
loop
fbstp
out
add
jmp
sub
sbb
iret
sbb
or
xchg
and
sub
iret
sub
pop
ror
fmul
js
das
ljmp
xchg
fildll
imul
shll
adc
lret
push
push
das
push
repnz
jnp
lret
jge
cmpb
test
adc
pop
xor
fbld
inc
cmp
jo
mov
out
mov
popa
call
dec
pop
mov
aas
mov
push
scas
bound
jne
cltd
add
jge
or
lods
dec
mov
outsb
pop
or
lods
mov
gs
bound
bound
adc
out
mov
lcall
daa
xor
test
jecxz
lcall
es
adc
inc
adc
out
shrb
mov
stc
pop
or
mov
ret
imul
sbb
sub
cmp
push
push
xor
push
adc
fdivr
jae
cmpb
fidivrs
iret
dec
dec
mov
sti
cmp
push
sbb
mov
inc
pop
inc
add
popf
inc
stos
popa
push
imul
mov
shll
rcrb
adc
and
clc
pop
and
das
xlat
jle
shl
inc
push
sbb
cmpsb
call
das
lea
filds
lods
xchg
jp
repnz
push
add
and
dec
jnp
jnp
mov
lods
pop
repz
mov
aaa
aam
test
inc
xchg
add
add
test
sub
hlt
bound
sbb
sub
mov
lahf
sahf
fistpll
xchg
insb
sub
enter
outsl
jge
sub
mov
insl
inc
rclb
push
fadds
adc
ror
in
xor
or
sahf
pop
addr16
in
test
pop
ja
orb
mov
inc
jnp
sbb
and
sti
nop
test
ja
rol
popf
pop
or
push
xchg
test
xchg
sub
test
les
xchg
leave
stc
add
inc
mov
pop
leave
inc
aas
test
xor
cmp
test
aam
test
in
jge
push
mov
adc
fiaddl
cltd
xor
std
fs
and
jle
mov
fldl
pop
fwait
outsl
dec
inc
xor
leave
in
cs
pop
dec
sub
iret
es
and
xchg
stos
sub
xor
fcompl
or
push
pop
test
faddp
jle
sbb
sub
jo
mov
js
js
in
in
idivb
pop
adc
sub
leave
pop
xchg
sub
rcrl
leave
jge
std
stos
push
xlat
jo
sbb
in
pop
mov
push
cmp
pop
lcall
shl
cs
ss
movl
inc
cmp
jp
loope
jo
stc
jg
in
fs
in
jnp
xorl
dec
aas
xor
notl
cmpb
mov
mov
movsl
mov
jnp
sti
sbb
mov
dec
jmp
inc
pop
push
inc
movsl
in
or
xor
dec
std
stos
push
jno
lahf
pop
push
ror
inc
xor
push
aaa
and
cld
add
cld
pop
mov
mov
xchg
cmc
mov
push
xchg
das
clc
bound
jl
in
outsb
xchg
hlt
shl
sub
mov
popf
rorb
sti
mov
mov
cltd
pop
imul
cmp
adcl
dec
mov
or
lods
addr16
rorb
xor
jecxz
shlb
xchg
xchg
jb
incl
cli
out
push
call
xor
adc
inc
xchg
out
hlt
js
or
popf
testb
addr16
inc
pusha
dec
repz
sahf
adc
in
idivl
fcomp
lret
mov
or
inc
and
out
add
xor
mov
xchg
sub
pop
fldl
ja
or
push
push
pop
cwtl
push
sbb
or
ret
dec
cld
inc
mov
pop
stos
push
testl
imul
add
inc
aad
outsb
sbb
cli
lock
fstps
jnp
maxps
sbb
sub
data16
leave
and
mov
jae
adc
xor
rcrb
dec
xchg
add
inc
mull
inc
unpckhps
daa
lods
in
cs
ja
rcll
sub
ret
pop
sub
or
movsl
sti
jg
repz
ret
orl
cmp
sub
pop
mov
dec
dec
jb
jns
rorl
push
lahf
inc
pushf
out
and
or
popa
xchg
inc
xor
jb
pop
push
jb
adc
xchg
loop
cld
inc
enter
hlt
stos
dec
sub
sahf
mov
mov
push
xchg
push
out
dec
rclb
je
ss
cmp
incl
add
test
nop
xchg
push
adc
arpl
sub
loope
mov
repnz
repz
lea
sbb
or
jae
jecxz
in
sub
out
add
jg
sub
shrb
lea
cmpsl
pop
testl
cmc
pop
dec
loope,pn
rol
mov
fmuls
inc
into
out
loopne
and
push
mov
imul
gs
outsb
and
outsl
mov
jmp
dec
dec
dec
mov
pop
inc
std
cli
stc
lock
out
dec
movsl
pop
je
fcmovb
sbb
popf
ja
sahf
loopne
frstor
pusha
pusha
lods
push
lock
mov
std
pop
dec
in
out
sti
imul
mov
or
aam
and
adc
outsl
imul
cmpsl
lcall
sahf
int
call
cld
lret
nop
push
adc
popa
mov
mov
vcvtdq2ps
es
dec
xor
mov
xchg
fcomps
sbb
mov
pop
dec
pop
out
loopne
aad
mov
mulb
rolb
scas
sbb
mov
mov
pushl
lahf
lea
lock
xor
ficoms
jecxz
push
inc
mov
mov
push
in
mov
add
add
loope
push
gs
imulb
test
lods
bound
int3
jae
movups
scas
int
pop
xlat
push
xor
jne
fwait
jno
push
sub
inc
dec
fidivs
xchg
js
out
pusha
lds
inc
push
pushf
adc
cmp
ror
loop
push
xchg
mov
inc
aad
lock
movsb
in
mov
movsb
mov
test
sub
neg
mov
add
add
in
mul
fcomip
jnp
or
lret
mov
jl
add
ljmp
jo
cli
jle
dec
mov
sbb
inc
sahf
lret
jne
in
xor
mov
cmp
mov
jp
xchg
xor
cmp
ret
jl
fisttpll
cwtl
sbb
mov
add
jl
mov
mov
fdivs
test
push
adc
cltd
or
sub
shr
sub
jmp
and
notl
mov
imul
push
mov
jmp
pop
out
pop
adc
out
sbb
out
addr16
fcoms
sti
and
ror
mov
xchg
out
neg
rcl
xor
jae
mov
sub
call
jo
stc
mov
out
jmp
xchg
pop
jbe
loop
adc
sub
dec
inc
cwtl
cmp
xor
jp
arpl
mov
dec
cld
pop
leave
jle
dec
ret
std
out
rorb
cld
inc
nop
or
addl
lock
iret
psubd
lods
insl
jl
dec
jns
adc
decl
push
or
std
jle
lcall
sub
jl
in
jg
fcomps
push
xchg
pop
sub
pop
add
ret
or
or
cmp
outsl
in
cld
into
adc
push
inc
jne
das
add
xor
out
sub
shl
loop
pop
out
or
aad
mov
out
std
gs
pop
inc
add
lret
repz
pop
push
mov
rorb
xchg
out
xor
insb
adc
mov
and
roll
adc
jmp
dec
pushf
inc
add
pop
in
das
sub
pop
sub
mov
mov
dec
out
xor
dec
je
shll
or
dec
mov
mov
pop
jmp
xchg
data16
jmp
sub
inc
mov
dec
mov
popf
sub
in
mov
imul
addl
push
add
xor
sti
das
jmp
icebp
popf
test
lea
int
cmp
aad
ljmp
add
push
stos
sti
and
loop
stos
aas
push
cmp
fucom
sbb
push
cmc
imul
push
mov
adc
inc
push
cwtl
int
frndint
ret
fadds
and
mov
pop
sub
js
ret
nop
cld
or
mov
daa
aam
xor
cs
pop
stos
loop
aad
jl
aad
ljmp
pop
push
lock
sahf
pop
mov
dec
lahf
je
repnz
in
xor
xor
jp
outsb
cld
je
or
movntps
cmp
cltd
ja
pop
jno
xlat
cmc
push
cmpb
push
xchg
sbb
inc
mov
cmp
mov
aas
les
and
pop
mov
pop
je
push
sbb
xchg
in
mov
enter
dec
dec
nop
sbb
mov
jns
jnp
icebp
and
jno
or
lahf
push
adc
lahf
mov
aas
xchg
movsb
in
fwait
sahf
xlat
sub
jge
out
and
rorb
or
mov
and
mov
fsubl
push
int3
mov
inc
or
mov
or
nop
rolb
vpsllq
scas
jno
rorl
loopne
push
in
int
add
pop
cld
fldenv
xor
or
mov
adc
je
dec
repz
or
mov
add
lcall
or
push
addr16
out
mov
mov
dec
jne
sbb
daa
cli
push
sbb
in
push
out
push
pushf
jge
mov
mov
aam
jge
jecxz
xlat
daa
mov
in
add
ja
or
push
cld
lds
or
inc
and
sub
andl
movsl
mov
pop
xor
push
and
ficomps
cmp
xchg
enter
add
mov
or
xchg
movsl
out
jge
js
jecxz
mov
fwait
pop
faddl
sbb
mov
stc
push
add
pop
mov
mov
dec
sub
jl
outsb
cmpsb
out
inc
stos
mov
nop
mov
iret
mov
popf
push
dec
push
or
sbb
sbb
mov
add
stos
sbb
cmp
adc
jle
mov
and
sub
adc
mov
lods
ss
adc
aam
inc
cli
cltd
jo
add
data16
sahf
sbb
shlb
arpl
mov
sbbl
jns
js
inc
ret
aas
into
xchg
xor
pop
std
inc
lea
pop
xchg
mov
mov
in
stos
pop
sbb
sbb
test
xchg
icebp
pop
fnstsw
pop
xlat
aad
pop
adc
hlt
outsl
mov
daa
mov
or
jg
or
aad
and
xchg
lahf
cmpb
fldenv
xchg
jecxz
mov
or
loope
or
mov
pop
mov
jnp
jo
pusha
cmp
and
dec
xchg
pusha
jne
rorw
in
aad
push
testb
and
jp
xor
inc
push
mov
jmp
lods
mov
push
rolb
xor
mov
out
cs
sbb
xor
ja
leave
scas
xchg
mov
lock
daa
sti
lds
mov
pop
xchg
sub
sahf
or
insb
fistpll
sahf
test
sub
call
fs
jb
inc
js
fwait
addb
subl
stc
stos
jle
fcompl
mov
inc
jne
outsb
pop
jl
or
pop
lahf
fsincos
mov
mov
xor
mov
sbb
call
scas
and
push
mov
stos
inc
or
ret
dec
mov
fisttpll
xchg
hlt
stos
shl
inc
push
fldenv
aas
sub
adc
xchg
sub
loopne
fwait
lock
push
or
add
fldt
pop
cmp
dec
and
shrl
nop
cmp
ljmp
sar
test
xor
movsl
and
frstor
fisubl
or
pop
cli
mov
test
jnp
xor
xchg
lds
orb
add
sbb
xchg
jns
jle
ret
push
xchg
and
leave
mov
jp
dec
sub
push
mov
int3
daa
sahf
xor
das
push
cs
enter
rclb
mov
mov
push
sbb
rol
mov
pusha
adc
movsl
out
lods
pop
inc
pop
jge
bound
fcos
jnp
mov
dec
fcmovnu
dec
xorl
out
mov
jp
movb
ss
test
call
loop
or
add
and
aaa
cmc
scas
xchg
jge
cmp
dec
call
push
rcrl
repnz
cmp
adc
scas
outsb
fildll
negl
andb
cmp
and
push
push
mov
hlt
pusha
popf
enter
mov
xor
js
in
inc
dec
jno
imul
lds
or
xchg
repz
sahf
loop
int3
mov
pusha
jge
adc
ja
movsb
sub
int
je
xchg
inc
lea
push
scas
ret
cmc
aas
mov
filds
push
mov
pop
pusha
inc
push
outsl
sarl
sbb
mov
mov
jnp
cmc
add
adc
adc
movsl
lds
imull
and
sub
xor
cmc
dec
push
push
flds
push
mov
jg
mov
mov
enter
mov
rcrb
pop
pushfw
or
inc
pop
hlt
lret
int3
dec
jbe
xor
fistpll
flds
inc
imul
les
dec
xchg
mov
push
cmp
add
pop
fcomip
or
ja
mov
sub
ss
ret
xchg
push
mov
iret
jae
testl
mov
sub
nop
and
mov
mov
xchg
or
in
and
mov
bound
mov
and
into
push
xchg
cmpsb
mov
test
pop
aas
sbb
int3
xlat
fsubrl
ret
shrl
and
sti
sub
loope
gs
mov
cmc
mov
hlt
cs
aas
imul
push
xchg
rep
lret
jns
aam
inc
xor
push
and
mov
test
out
gs
mov
dec
mov
cld
jmp
jmp
mov
sbbl
cwtl
mov
mov
add
or
cwtl
fistl
pusha
dec
pop
std
push
test
roll
jmp
mov
mov
call
in
notl
xchg
rorl
rolb
mov
loop
ds
lcall
shl
stos
cld
lcall
and
dec
or
adc
int3
shlb
xchg
xor
jne
sub
inc
lea
pop
inc
incl
cmpb
test
pushf
push
pop
pop
mov
pop
dec
movsb
lret
jmp
xor
jae
imul
xchg
mov
lods
xor
fstps
push
in
or
cmp
xor
es
cld
sub
lahf
dec
inc
in
sub
loope
xor
loopne
bound
fistps
fucom
ret
jno
into
mov
cmpb
call
cltd
das
jmp
and
shlb
movsl
repnz
popf
arpl
test
test
sub
sbb
jl
out
xor
dec
inc
jg
pop
jbe
ljmp
ljmp
data16
fs
add
push
stos
jo
mov
inc
mov
inc
xor
lret
sbb
movsl
add
dec
ficomps
mov
out
in
xor
add
int
cltd
clc
loopne
int3
add
push
movsb
fstp
xor
adc
pop
cltd
lahf
sub
cld
adc
subl
fnstcw
mov
inc
adc
std
sbb
mov
rcrl
out
adc
das
negb
pop
xor
pop
iret
mov
sbb
or
mov
loope
dec
call
cs
arpl
fcmovnbe
je
mov
inc
mov
lcall
adc
mov
inc
enter
jmp
sbb
cli
movsl
stc
push
mov
cmpsl
add
repnz
fildll
sar
loopne
lock
mov
or
ret
and
sbb
inc
popf
add
decb
push
mov
icebp
mov
mov
push
scas
mov
xor
push
push
push
daa
pop
jge
lods
jmp
inc
mov
repz
jmp
rorb
jle
insl
aaa
addr16
push
stos
loop
xchg
int
mov
lret
mov
push
sub
push
cmpsb
outsl
dec
inc
in
cmpsl
sahf
movsb
jne
lea
sbb
xchg
xchg
adc
aas
hlt
pop
mov
or
aam
sbb
pop
inc
xchg
lock
popa
loop
xlat
sub
or
mov
sbb
push
xor
shll
rolb
mov
or
pop
ss
push
jno
fucomp
push
jmp
pusha
adcb
fcompl
jno
rcr
cmp
fidivrs
and
add
or
push
lret
out
pushl
adc
cmp
cltd
ret
inc
or
fld
push
inc
cmpsb
and
fisttpll
adc
mov
inc
cmpsl
jmp
adc
mov
xor
movsl
fldpi
in
sti
pop
lea
scas
pushf
fisubl
je
xor
jl
fildl
jecxz
mov
pop
dec
inc
sti
stos
call
xchg
adc
mov
in
clc
popa
cs
lret
stos
fldt
or
cmpsb
rol
xor
pop
cmpsl
addb
push
pmulhw
mov
dec
push
sub
xor
movsl
stos
jle
popf
daa
int3
int
scas
and
push
test
inc
dec
stos
sti
mov
lods
pop
in
inc
repz
sub
push
mov
lcall
movsb
add
fsubs
fidivs
sarb
movsl
dec
mov
je
push
mov
int
xchg
out
mov
arpl
movl
push
cmp
sub
pop
xchg
mov
push
movl
dec
adc
dec
adcb
mov
mov
repnz
mov
pushfw
and
sub
loopne
mov
mov
mov
fstpl
cmp
cltd
test
inc
insb
jne
dec
jns
fwait
or
lret
jns
pop
stc
push
mov
subl
jbe
add
add
mov
mov
inc
xor
xlat
dec
stos
mov
stos
pushl
inc
adc
xchg
sub
mov
sub
imul
outsb
sub
int
mov
push
mov
push
ret
out
jbe
ss
loope
add
popf
mov
dec
or
dec
scas
xchg
add
jmp
pop
nop
mov
sbb
dec
mov
sbb
out
push
mov
jg
dec
push
sbb
sub
mov
jo
or
add
jmp
inc
and
xchg
sub
movsl
lock
sbbb
mov
adc
mov
cltd
sbb
ret
pop
cltd
daa
mov
loopne
inc
and
insb
mov
push
cs
cmp
mov
jmp
xchg
ja
clc
into
mov
mov
jp
adc
insb
xlat
lea
pop
stos
fidivl
loop
inc
mov
jno
inc
jl
xor
mov
sub
inc
into
add
fwait
mov
sub
xor
mov
lcall
aas
out
roll
push
pop
lods
sbb
aaa
push
dec
aaa
dec
test
mov
and
dec
xchg
mov
test
push
adc
cmp
mov
pop
out
insb
stos
jle
inc
sbb
call
lods
jno
adc
cmc
dec
loope
popf
mov
stc
popa
aas
rcrb
cltd
xchg
and
cmpsl
jae
test
pop
lea
insb
lcall
lret
jg
or
rcll
in
push
add
mov
pop
and
in
jnp
dec
mov
add
or
into
jle
mov
cli
mov
cmpsb
je
mov
inc
rorb
sbb
and
and
fs
shr
sub
fwait
jae
xor
lcall
cwtl
jnp
and
lods
jg
adc
cs
lea
dec
cmp
scas
cmpsl
mov
imul
pop
cmpsb
pop
ret
mov
mov
jno
scas
mov
int
mov
outsl
jnp
push
test
stos
or
pop
imul
sbb
aaa
inc
cmc
xor
push
and
mov
mov
pop
jl
and
outsl
test
xor
inc
popf
inc
sarl
shlb
and
lea
push
mov
sub
inc
or
bound
push
jnp
or
inc
inc
add
jp
add
jg
push
mov
sub
movsb
in
loope
test
cltd
enter
jle
fdivl
loope
loopne
add
repnz
imul
mov
sbb
adc
jb
push
jb
jecxz
pop
and
push
mov
fwait
and
addr16
idivb
aam
xlat
jns
mov
jns
mov
lcall
lret
mov
adc
cmpsb
mov
arpl
int
inc
daa
icebp
aaa
push
test
mov
andb
movl
fdiv
mov
cmc
pop
je
add
pop
or
mov
sbb
jle
mov
inc
xchg
mov
xchg
ret
and
loop
outsl
cmovno
lret
push
enter
adc
xor
dec
fimuls
pop
push
sbb
cmp
jmp
ja
mov
xchg
xor
sbb
pop
fmul
xchg
scas
xchg
mov
jo
sti
insb
cmp
mov
loop
adc
arpl
in
cmp
dec
lret
pop
clc
out
in
jp
lock
cwtl
dec
shl
test
xor
jge
add
inc
mov
add
inc
and
xlat
ja
xchg
push
mov
dec
test
repz
movsb
test
jo
push
mov
pop
and
inc
test
push
xor
add
mov
inc
repz
repnz
shrb
mov
sbb
leave
cmc
sub
sub
cmpsl
ficompl
pop
mov
and
ret
mov
call
jne
enter
lods
cmp
clc
xor
sub
mov
cmp
mov
clc
loop
cmp
mov
addr16
punpcklbw
imul
add
xchg
ret
movsb
pushf
sub
insl
fidivrs
xor
fldt
or
pop
xor
mov
xchg
in
adc
test
std
jbe
insb
cwtl
insb
adc
lods
outsl
push
add
nop
and
sub
movsl
and
pushf
cmpsl
adc
gs
sub
test
sub
pop
mov
jne
ljmp
cmp
shlb
movsl
mov
movd
and
arpl
xor
les
in
sahf
fbld
mov
sub
inc
loopne
xlat
movsl
and
or
cmp
icebp
enter
fsubs
jae
push
mov
pop
fcomps
ja
pusha
mov
movsl
xchg
lds
pushf
std
inc
xor
mov
imul
xchg
lahf
adc
cli
lds
adc
das
or
sbb
out
test
cmp
adc
sub
mov
arpl
lods
mov
out
les
dec
cmc
rcrb
test
js
mov
cs
popf
scas
clc
cmc
into
jle
mov
xor
test
sub
mov
pop
mov
call
shrl
cmc
push
aam
xor
daa
int
mov
push
inc
cmpsb
cmpsl
push
push
and
repnz
mov
daa
xor
mov
mov
lret
pushf
lock
dec
pop
pop
ljmp
repz
xchg
jl
es
dec
xchg
aaa
lods
and
fdivrp
in
xchg
out
movsb
aam
dec
push
dec
mov
mov
sub
push
mov
inc
jb
jo
cld
mov
jnp
rdmsr
pop
add
pusha
jne
xchg
cld
rcl
out
call
mov
mov
jno
inc
xchg
dec
mov
jnp
pop
loopne
jl
add
cld
cmp
std
icebp
test
movsl
mov
fwait
lods
test
mov
sahf
inc
dec
int
mov
jmp
stos
scas
sbb
ljmp
mov
push
pop
loope
mov
ret
cmpsl
add
dec
pop
pop
call
int
std
or
mov
and
std
dec
pushf
pop
call
gs
stc
pop
repz
mov
shrb
or
es
scas
mov
pop
je
jno
pop
hlt
les
mov
sbb
xchg
int3
js
nop
pushf
scas
inc
add
jb
ret
sbb
jnp
arpl
inc
mov
mov
imul
icebp
mov
cmp
add
push
inc
addb
mov
scas
lcall
xor
mov
fwait
add
int
lods
jbe
sarl
in
mov
jmp
enter
push
xor
pusha
pushf
jp
shrb
dec
or
xchg
xorb
stos
cmp
push
ror
mov
popf
jge
inc
push
xor
pop
or
stos
mov
cld
inc
scas
xor
imul
jg
movsb
xor
jo
xchg
add
dec
pop
xchg
shll
adc
iret
stc
and
mov
fwait
mov
rcrb
call
jl
jbe
pop
push
mov
cmp
outsl
cltd
lret
and
pop
out
cmpsb
enter
dec
lcall
stc
or
lods
sub
mov
adc
mov
iret
or
push
mov
cmp
lods
push
lds
xchg
mov
dec
dec
movsb
ficoml
cld
scas
aas
push
bound
imul
adc
inc
mov
nop
insb
fwait
mov
sbb
cmc
adc
repz
push
loopne
mov
sbb
and
insb
dec
cmc
cwtl
rcl
inc
mov
es
mov
loope
push
movl
cmpsb
mov
mov
push
outsb
xchg
cmp
in
jno
and
cmp
jno
sahf
adc
in
insl
mov
movsb
xchg
ret
mov
or
mov
xor
xchg
nop
sbb
inc
push
pop
add
clc
aad
jmp
adc
cmpsl
popl
clc
cwtl
cmp
adc
push
mov
int3
mov
shr
stc
cmc
jp
lcall
push
cltd
adc
xchg
mov
pop
sub
rclb
dec
cmp
and
int3
pop
sbb
sbbl
dec
scas
dec
lret
aaa
int
sub
fwait
arpl
adc
ljmp
repnz
sub
sbb
jae
sbb
outsl
loopne
mov
movsb
push
push
fcomps
fidivs
xor
mov
push
leave
adc
into
xchg
sbb
mov
iret
fldl
inc
lea
mov
test
fcoml
out
call
lret
mov
inc
out
jle
shl
xor
imul
and
push
mull
fisttpll
dec
sub
xchg
mov
dec
mov
mov
inc
dec
icebp
push
pinsrw
adc
sub
mov
add
pop
sub
dec
jle
stos
lods
dec
xorb
stc
hlt
icebp
dec
sub
push
pop
lret
fs
lods
mov
mov
imulb
popf
add
ficomps
xor
xchg
aaa
imul
leave
ds
push
push
mov
lock
xchg
cmp
mul
or
jl
sbb
inc
testb
add
ss
jl
lret
scas
jbe
mov
inc
stos
xor
js
xchg
jns
sbb
incb
xor
fsubl
sbb
dec
inc
sbb
cmc
insl
lcall
pop
outsb
sbb
inc
fs
push
hlt
lods
shll
or
call
jp
scas
dec
clc
lea
adcl
out
dec
jo
add
in
add
movsb
push
shll
xor
pop
and
cmpsl
mov
adc
xchg
jne
test
test
jbe
mov
in
mov
adc
or
iret
cmpsb
in
es
mov
sbb
inc
mov
pop
push
repnz
xor
dec
adc
out
and
sub
pop
cmpsb
mov
pop
shll
sub
pop
xlat
cld
mov
and
daa
push
xchg
loop
lret
xchg
sub
cmp
addr16
testb
imul
pop
jo
leave
push
fnstsw
xchg
fisubl
shr
xchg
ljmp
adcl
add
inc
enter
adc
jg
dec
fmul
bound
and
into
inc
and
sbb
aaa
adc
cmp
outsb
imul
jg
jo
inc
arpl
addr16
add
and
cmc
sbb
jl
xchg
ds
std
pop
rcr
fadd
cld
ss
inc
adc
mov
pop
adc
icebp
scas
lds
pop
inc
mov
fwait
stos
jne
xchg
fwait
mov
dec
negl
lret
add
lods
push
jnp
xor
lret
pusha
add
mov
xor
mov
mov
loopne
icebp
in
outsl
cmp
pop
pop
bound
jge
pushf
inc
mov
in
mov
imul
div
jmp
test
jge
int3
shll
mov
inc
aas
pushf
pop
lahf
mov
cli
hlt
pop
and
sub
imul
ds
bound
cmpsl
test
movsb
sub
sbb
xchg
dec
and
xlat
xchg
loope
ljmp
hlt
inc
jl
lods
jle
add
je
pop
fistpl
jo
movsb
mov
xlat
aam
cmp
daa
fstpt
lock
lret
and
sub
add
mov
push
and
adc
cltd
or
repz
scas
sti
and
outsb
xchg
inc
sbb
les
fs
push
ret
mov
jecxz
scas
inc
inc
enter
dec
inc
jp
iret
aad
mov
movsb
rclb
int3
add
das
lods
addr16
inc
push
push
ss
inc
call
ss
sub
push
daa
cli
jbe
and
in
mov
dec
inc
or
pop
cs
mov
sbb
insl
ret
jno
movsb
mov
adc
rcrl
mov
add
stos
jbe
push
call
fcoms
push
jo
es
cmp
xchg
subb
xor
lahf
jnp
adc
ljmp
cmp
jl
xor
xor
sub
or
decl
leave
adcb
sub
imul
into
icebp
cmp
pop
xor
out
mov
pop
shlb
adc
repz
pop
pusha
or
call
pop
cmp
nop
and
ljmp
xchg
imull
mov
mov
orb
icebp
jmp
xchg
add
cld
add
jns
ljmp
adc
imul
mov
cmpsl
inc
test
dec
sarb
je
push
mov
outsb
or
sti
scas
pop
ja
jge
or
aam
mov
cltd
cmp
adc
pop
pop
sub
lret
push
cs
mov
repz
sbb
fwait
sub
pop
inc
xchg
ret
xor
inc
aam
push
icebp
pop
in
dec
bound
daa
je
jnp
adc
paddusb
push
xchg
mov
imul
sbbb
scas
bound
pop
test
push
or
das
cmpsb
dec
and
cmp
push
mov
lcall
rorb
loope
adc
adc
sysret
dec
jnp
jne
lret
out
out
push
lock
cmpsl
sbb
mov
subl
shrl
ret
adc
xchg
js
sti
daa
js
pop
push
inc
out
jns
out
loopne
popa
fisttpl
lcall
or
insb
dec
jbe
lea
jno
push
clc
and
push
mov
add
mov
lea
sub
jecxz
jg
dec
in
nop
sbb
push
mov
movsb
rcrb
out
gs
add
xchg
and
testb
or
sbbl
ds
cwtl
and
sub
cmp
or
add
fildll
outsl
and
fdivrs
dec
iret
push
dec
push
mov
mov
mov
imul
les
fnstenv
jmp
insb
mov
imulb
adc
cld
andb
lret
std
daa
ficompl
xchg
push
add
push
jo
mov
int
imul
das
pop
pop
fwait
mov
imul
pop
lds
shrl
cmp
xchg
lds
adc
mov
adc
mov
push
mov
xchg
movb
je
add
cmp
ffreep
nop
pop
cmc
insb
fldt
inc
or
add
call
jg
scas
mov
fisttps
adc
ds
xchg
push
cmp
cmp
jnp
mov
jge
xchg
xchg
jns
outsl
arpl
dec
test
mov
or
or
dec
insb
mov
rcrb
ljmp
mov
movb
sbb
add
jns
repnz
mov
es
sti
sti
gs
add
outsb
out
xchg
push
inc
sub
sbb
sbb
push
push
jno
jl
or
jge
jle
adc
pop
mov
adc
sbb
jmp
bnd
ret
mov
outsb
mov
stc
ficompl
and
test
add
fdiv
sbb
mov
scas
imul
mov
xor
or
mov
loop
dec
inc
rorb
sub
in
nop
leave
pop
call
test
movsl
ss
lcall
push
arpl
into
mov
add
mov
shl
jge
mov
adc
and
outsb
push
lods
in
add
test
std
inc
mov
test
das
scas
push
push
imul
and
mov
loopne
inc
adc
xchg
sbb
in
dec
dec
mov
xchg
jnp
add
test
mov
push
xchg
pop
repnz
mov
movsl
adc
addl
das
mov
or
add
xor
outsl
or
xchg
cmpsb
xlat
enter
cmp
push
adc
bound
adc
lahf
decb
dec
dec
stc
inc
adc
jmp
sbb
test
loope
ljmp
cmp
rorb
cmc
rolb
aam
xchg
mov
jp
daa
mov
test
cmp
push
es
sbb
stc
mov
fildl
jnp
mov
mov
roll
adc
lret
and
sub
stos
dec
lock
and
sub
outsl
adc
dec
dec
and
or
sbb
inc
repz
cli
cli
test
xchg
in
pop
mov
mov
inc
idivl
push
mov
out
and
mov
xchg
xchg
xor
dec
cmc
outsl
in
aaa
out
push
adc
sbb
add
mov
pop
jnp
or
xor
mov
cmp
pop
sub
fsubl
in
sbb
popa
js
loopne
call
outsl
jge
test
iret
mov
sub
push
cmpsb
sub
or
push
xor
fisttpl
adc
add
testb
lret
mov
stc
mov
pop
lret
imul
pop
aaa
imul
jmp
loope
push
inc
xchg
xorl
adc
rclb
ffree
outsl
adc
and
ds
test
push
inc
out
out
mov
add
inc
mov
fiadds
jns
mov
stos
mov
inc
stos
mov
and
xlat
out
out
add
pop
add
xchg
roll
lret
xchg
add
pop
movsb
mov
loope
das
sbb
mov
mov
rcl
test
sub
inc
xchg
xor
xchg
in
xor
jnp
add
mov
add
in
adc
data16
cmc
mov
fnsave
sbb
repz
test
repz
jae
lahf
sahf
je
xor
test
repz
jne
fistl
das
dec
mov
aas
inc
std
pop
sbb
sti
icebp
push
outsl
jg
xor
cs
pop
sbb
rorl
cld
jg
iret
icebp
jae
mov
add
loop
pop
shrb
test
mov
popf
and
into
jmp
pop
arpl
fistpll
xor
sub
out
stos
sub
movsl
popf
ljmp
adc
jae
jle
mov
cwtl
xor
cwtl
adc
mov
incl
ret
call
notl
jl
loop
out
mov
add
xor
fistps
ljmp
mov
adc
cli
or
test
mov
push
xor
imul
mov
je
fldt
xor
add
mov
cmp
lahf
scas
or
xchg
pushf
sbbl
sub
fimuls
adc
lods
les
sar
dec
or
mov
inc
lcall
icebp
out
in
push
and
dec
add
jmp
jp
adc
popf
lcall
enter
sub
dec
xor
lock
das
stc
cs
xchg
jo
sub
icebp
xchg
or
into
sub
sbb
push
jp
inc
pop
lods
shll
push
dec
dec
or
lcall
shll
jnp
fwait
ss
neg
lea
or
ss
pop
sub
cld
fildll
xchg
fldl
sub
loope
ds
xor
pop
scas
in
mov
xor
test
pop
push
pop
cli
mov
push
aaa
outsb
lcall
das
jne
add
fdivl
and
test
cmpsb
mov
test
shlb
fwait
mov
adc
inc
or
outsl
lahf
cmp
je
sub
scas
ret
sbb
ss
fcomp
jmp
repz
cmp
inc
outsl
and
outsl
aas
pop
dec
fidivl
mulb
pop
sub
mov
pop
int
fisttps
pusha
rcll
in
mov
rcll
leave
hlt
imul
adc
bound
push
std
jno
jbe
and
shll
aaa
sar
mov
cmpsb
mov
xchg
fwait
and
mov
fnsave
iret
scas
xor
scas
jns
jae
mov
cmc
push
fwait
mov
mov
or
je
jmp
push
pop
mov
cmp
mov
fdivrs
into
stc
xchg
xchg
push
xor
adc
addr16
sarb
or
aaa
or
jge
mov
adcb
ja
fstp
in
jle
or
inc
push
ds
xor
leave
int
add
mov
push
imul
mov
test
aam
aam
mov
mov
jg
nop
mov
add
cmp
pushf
jb
into
xchg
jne
fadd
mov
or
arpl
ljmp
icebp
iret
jns
loope
loop
stos
jge
int3
divb
pop
bound
or
ret
in
xor
test
loop
fs
inc
add
pushf
fcoms
sahf
movsl
fimuls
fildl
mov
add
mov
pop
adc
shrl
int3
fsubrl
and
jmp
mov
mov
pop
fwait
cwtl
in
and
push
shll
in
add
ja
sub
push
fiadds
mov
cmp
dec
mov
sbb
mov
lret
adc
test
or
push
std
sti
sub
sbb
fnstsw
aaa
jns
inc
out
jne
sbb
nop
test
push
lahf
dec
clc
cld
push
jnp
or
dec
stos
dec
push
jae
dec
push
push
add
fstl
outsb
sarb
mov
stos
loope
ja
call
nop
dec
pop
cld
mov
mov
shr
sub
repnz
and
not
cmp
out
mov
jge
rcll
jbe
icebp
and
fildll
push
jle
repz
inc
outsb
push
lods
pop
gs
inc
cmp
ret
outsl
gs
out
sub
inc
cmp
mov
sbb
int
pop
iret
fldz
jne
or
clc
call
fisttpl
repz
ret
je
lret
loopne
jb
jnp
adc
xchg
mov
arpl
jnp
pop
arpl
or
cmp
sbb
mov
shll
shll
xlat
mov
push
test
sub
cmp
mov
bound
dec
push
xor
mov
mov
mov
movsl
mulb
add
push
int3
add
fmull
push
out
sbb
cmp
xchg
push
rcl
mov
fisubrs
repz
add
or
push
inc
push
mov
iret
push
adc
xlat
mov
pop
mov
popf
or
rclb
pop
lock
mov
sbb
lods
je
imul
cmpsl
xor
mov
aam
scas
xor
rcll
jp
ret
add
lods
loopne
jns
jg
sbb
lods
add
mov
sub
xchg
cmp
pop
push
cmc
pop
aaa
pushf
cs
test
add
pushf
sbb
inc
out
sub
mov
leave
or
lcall
std
mov
xor
xor
fnsave
stos
gs
outsb
cltd
gs
movsb
ds
or
mov
aas
sbb
jl
inc
xchg
imul
mov
cmp
xchg
jmp
jmp
xor
cld
scas
adc
mov
jp
fnsave
inc
ret
adc
es
inc
mov
fstpl
jge
cld
mov
pop
adc
adc
or
test
adc
jle
mov
daa
mov
pop
loopne
sbb
dec
lret
hlt
xchg
xor
lcall
xor
jb
push
mull
ja
and
mov
pop
pop
scas
fmul
fbld
dec
fisubrl
push
pusha
xor
rorl
fld1
mov
xor
orl
rolb
and
fstpl
cwtl
pop
icebp
hlt
stos
mov
push
xor
mov
sarb
push
and
iret
dec
sbb
pop
add
loope
mov
test
cmp
ljmp
cmp
sub
mov
mov
and
mov
mov
bound
fidivs
clc
int3
scas
out
sahf
mov
push
xchg
sbb
inc
std
pushf
pop
pop
movsl
inc
or
sti
add
mov
pushl
mov
adc
pop
arpl
pop
jnp
pusha
adc
xor
ds
cmp
das
sahf
std
es
xor
dec
jecxz
mov
or
xchg
popa
sti
int3
decl
ja
mov
out
iret
sub
mov
stos
mov
xor
pop
pop
push
lret
ds
xchg
loop
out
jge
adc
xor
pop
pop
scas
add
mov
mov
adc
andl
and
mov
sbbb
push
xor
sbb
pop
inc
jnp
xor
sar
xchg
jae
scas
jl
mov
imul
jbe
fbstp
xor
dec
pop
mov
mov
push
xchg
mov
or
sub
dec
ds
ja
nop
js
addr16
push
mov
mov
jne
inc
lds
adc
push
jbe
push
xlat
sbb
adc
fmul
lahf
push
mov
stc
outsl
jne
xchg
mov
or
test
adc
popa
cmp
mov
ret
sahf
cli
push
jbe
mov
cld
ficompl
xor
cwtl
aam
sub
or
dec
repz
adc
ljmp
icebp
push
adc
out
call
sub
cmpsl
cmpsl
sbb
mov
jecxz
icebp
outsb
pop
and
loop
into
xchg
roll
lods
push
mov
push
cmp
shr
or
push
dec
insb
push
fidivs
out
xlat
ljmp
pop
fiaddl
je
mov
xlat
push
xor
je
int
insl
insb
nop
mov
stos
nop
push
adcb
fdivr
cs
jge
pop
outsl
mov
mov
xor
in
and
lds
fs
test
ja
add
pusha
cs
cltd
adc
les
ficoms
cmp
add
iret
jecxz
inc
xchg
cltd
sub
out
in
sbb
popf
imul
stos
sub
iret
mov
sbb
jo
adc
adc
add
enter
daa
fstl
cmp
mov
mov
or
inc
ds
dec
xchg
inc
popa
sbb
xchg
sbb
out
jle
cli
lcall
sbb
aas
xor
mov
cmpsb
mov
test
shlb
jg
negb
iret
jbe
clc
xor
jp
xchg
push
insl
fimull
in
movsl
xchg
jo
std
gs
jg
jmp
int3
add
push
jae
es
mov
mov
into
daa
sbb
sub
inc
xchg
mov
insb
jne
stc
add
add
jbe
fisubrs
inc
ss
ljmp
out
sbb
mov
insb
sahf
adc
data16
xchg
cld
push
repnz
cmp
shll
lods
push
xor
mov
inc
inc
mov
jg
divb
xchg
sub
push
jp
rol
call
fwait
xor
andl
cmpsb
dec
mov
adc
imul
mov
sti
push
test
cmpb
push
cmp
ljmp
cwtl
mov
mov
ret
icebp
push
pop
mov
imul
in
mov
enter
cmp
add
jl
sar
adc
jae
or
push
ds
adc
push
shrl
ja
into
pop
ss
out
mov
mov
push
js
mov
mov
xor
dec
or
xor
cmp
nop
push
jb
jbe
or
mov
xchg
lcall
add
dec
arpl
pushf
ljmp
lahf
or
cmc
sbb
push
out
pop
jnp
pusha
pushf
sbb
jo
test
pop
stos
lock
and
sub
jl
in
stos
sub
stc
addr16
mov
jle
jl
loopne
insl
jmp
mov
pop
and
xchg
sbb
add
les
push
push
adc
call
imul
fldl
sbb
lock
incb
sbb
mov
mov
test
dec
xchg
and
add
out
jb
pop
push
fs
cmp
xchg
pusha
fbstp
lds
jne
dec
rcrb
add
je
repz
sub
jno
push
mov
dec
add
jg
sbb
xor
setl
jns
pusha
jae
popf
jne
cmp
sbb
adc
and
aam
into
outsb
insb
push
push
pop
mov
push
lret
loopw
jnp
push
lods
fstp
mov
fcomps
or
mov
sti
addr16
pushf
push
xchg
sbb
mov
add
out
loop
outsl
pop
push
mov
cld
add
out
enter
pop
pop
gs
outsl
pop
psubd
bound
pop
push
inc
pop
std
inc
test
push
jl
jno
stc
lcall
xchg
mov
adc
stos
sbb
inc
sub
or
sub
push
and
push
add
mov
mov
xor
mov
in
testl
neg
push
lcall
fldt
xor
test
inc
dec
test
cmc
jne
push
lods
cmpsb
push
test
lret
pop
aas
xchg
pusha
sub
loopne
lcall
hlt
int3
leave
jl
leave
sbb
add
mov
and
rcll
jo
mov
mov
dec
gs
jle
adc
cvttps2pi
mov
lcall
call
cmpsl
ds
or
int3
adc
stc
push
dec
jge
in
fdivrs
cmp
mov
add
sub
shll
cmp
jecxz
mov
mov
sarl
insl
add
adc
sbb
lahf
dec
xchg
mov
enter
pusha
loopne
imul
pop
jge
jne
out
ret
pop
lahf
pop
mov
cmp
xor
mov
jge
addr16
mov
inc
into
pop
daa
lret
ljmp
cmpsb
adc
jge
fwait
insb
lret
dec
clc
daa
add
push
inc
or
xorb
lahf
into
jne
rcrl
repnz
testl
popf
mov
inc
lods
negb
cli
daa
cmp
out
loope
pop
cld
jecxz
leave
mov
push
data16
cmpl
ss
divb
stos
sub
movsb
pushf
adcb
idivb
xchg
cli
adc
add
jb
jb
cmp
mov
mov
mov
mov
and
sbbb
pop
push
push
lods
inc
fcomi
pop
stos
mov
aam
push
and
or
xchg
dec
sbb
inc
fucom
lret
sub
mov
adc
mov
jo
jl
cld
push
or
sub
pop
dec
aaa
mov
addr16
lea
add
cmp
sub
mov
vmaxps
aad
aam
push
fadds
insl
frstor
pop
sti
nop
cmpb
scas
mov
inc
xchg
push
clc
xor
into
push
add
xor
pop
and
push
loope
xchg
bound
jbe
lret
pop
mov
and
popf
lret
divb
cmc
mov
hlt
dec
mov
imul
mov
insl
testb
cs
out
aam
mov
cltd
sub
iret
push
lret
mov
aad
clc
sbb
pop
push
aam
lds
js
xor
cli
add
ret
shr
nop
inc
mov
sbb
jns
push
dec
sbb
xor
sub
dec
imul
fstpt
arpl
jmp
add
sub
sbb
iret
outsb
cltd
dec
ret
pop
and
mov
cmc
sbb
into
bound
xchg
cmpsl
inc
sub
in
mov
scas
xor
jecxz
pop
or
clc
pusha
iret
pop
or
mov
data16
xchg
push
pop
fcompl
fcom
imul
cmpsl
rolb
leave
push
push
inc
fldl
sub
push
xor
add
inc
jo
in
repnz
aad
jns
xor
cwtl
dec
and
loope
xlat
mov
shlb
lods
out
dec
dec
loope
fisttpl
movsl
ja
adc
adc
push
dec
outsb
incl
lcall
movsl
cmpsb
mov
iret
add
push
dec
dec
rorl
sbb
loop
aam
jne
iret
insb
mov
xchg
pushf
dec
xorb
xlat
jle
and
sub
xor
jecxz
movsb
dec
xchg
or
aam
adcl
add
cli
leave
mov
out
in
lret
repnz
sub
mov
aaa
ret
mov
cs
mov
jmpw
nop
data16
fwait
dec
jge
pusha
sub
sbb
add
ss
hlt
stc
jl
inc
jge
sub
sbb
out
std
pop
xor
mov
add
adc
int3
cli
xorb
mov
mov
mov
xchg
dec
ret
jmp
fcmovnb
stos
cmp
mov
pop
pop
mov
push
sbbl
outsb
and
jmp
fwait
in
sub
mov
and
sbb
xchg
mov
aad
stos
ljmp
add
shlb
inc
push
inc
mov
jg
out
inc
mov
out
stc
cmc
sub
fwait
imul
in
cmp
je
push
jg
daa
inc
out
mov
jne
sti
jbe
or
inc
out
dec
xchg
std
jmp
cltd
movsl
jle
lret
cmp
movsb
sbb
imul
sarb
dec
popa
and
xchg
call
jp
arpl
xchg
mov
or
mov
leave
in
inc
daa
push
xlat
stos
or
cmpl
pop
inc
inc
cld
sub
push
jg
js
xlat
cmp
mov
mov
int
sbb
cli
bound
inc
call
lds
sahf
adc
xor
fs
mov
mov
jl
cmp
fs
jns
adc
fistpll
add
jbe
sbb
sub
mov
xchg
cmc
jp
or
or
iret
cmpl
insl
fcompl
xchg
aam
out
lahf
xchg
xchg
sub
int
push
push
cli
dec
loope
icebp
pop
lds
add
cmp
dec
xor
xor
ja
stc
popa
int
scas
movsb
dec
outsl
pop
loopne
sbb
add
push
push
mov
stos
into
clc
loop
gs
repnz
fs
lret
adc
xchg
pop
pusha
lahf
sub
jg
xchg
push
xor
inc
sub
jmp
shlb
lods
lsl
xchg
incl
push
enter
js
test
sub
xchg
cs
lods
xchg
mov
enter
jb
mov
stc
pop
or
dec
fmull
cmpsb
fidivrs
push
in
lret
orl
sub
out
sbb
jns
xlat
cmpsb
jg
mov
jge
inc
cwtl
lret
and
pop
sub
popl
mov
rcrb
or
push
aam
xchg
cmove
lcall
add
arpl
pop
jmp
cmp
adc
xor
popa
inc
stc
decl
jbe
aam
inc
pop
inc
ds
inc
jb
and
cmp
js
add
mov
cmp
mov
nop
mov
mov
dec
inc
lods
inc
lds
sub
cli
ljmp
adc
xchg
dec
add
xlat
add
inc
adc
or
gs
fnstsw
out
outsb
fnstsw
mov
mov
rcr
stos
addr16
pop
sub
mov
mov
push
sti
pop
push
rcr
mov
scas
push
sbb
jge
out
or
add
cmp
test
sbb
xor
mov
push
test
scas
pop
int
inc
xchg
cmp
mov
push
arpl
sub
shl
sarl
jns
js
xor
inc
dec
jmp
pop
or
repz
jb
sub
movsb
mov
push
and
sti
pushl
rcll
rcl
inc
mov
orl
sbb
imul
sbb
addr16
inc
das
pop
stos
cs
mov
sbbl
mov
call
std
add
lods
add
sbb
add
push
hlt
stos
lahf
xchg
out
pop
and
inc
mov
xchg
dec
jo
mov
jmp
js
jl
xchg
out
shll
imul
mov
cmp
outsl
std
pushf
cld
ja
cmc
arpl
xchg
push
jne
mov
mov
lods
xchg
stos
in
data16
pop
lea
es
fldenv
xlat
mov
ret
cmpsb
and
cltd
cmpsb
push
adc
mov
popf
sbb
rclb
push
xchg
int
mov
and
shr
loopne
cli
xor
clc
xor
push
fldl
push
jne
fadds
mov
or
xchg
cmp
cmp
mov
daa
sub
inc
aas
in
mov
pop
out
jge
loop
mov
dec
shlb
inc
jge
mov
int
cmp
pushf
pop
sub
aam
mov
lea
in
inc
loope
dec
inc
mov
imul
pop
sbb
arpl
outsl
jno
aad
add
fsubr
ret
outsb
mov
or
fists
out
jmp
add
pop
inc
dec
outsb
aam
jno
xor
cmc
jo
mov
cmp
lcall
sbb
test
and
jnp
jbe
or
sub
add
pop
nop
fwait
jmp
mov
xchg
jae
push
js
lods
jns
dec
add
mov
mov
mov
jle
adc
je
cmp
push
ss
out
sub
imul
sbb
jne
cmp
adc
stos
adc
dec
mov
lcall
ss
in
or
mov
int
mov
ret
lods
in
ficompl
xor
int3
js
sbb
into
popf
mov
push
cwtl
or
xor
jp
in
in
or
repnz
mov
xchg
push
dec
jns
add
ret
int
dec
xor
add
sbb
insb
fistl
rclb
mov
inc
pusha
fs
clc
or
dec
out
or
inc
int
aam
icebp
je
sub
jmp
clc
jp
rol
clc
arpl
das
mov
lcall
cs
lret
loop
sahf
pop
popa
pop
clc
inc
lahf
test
out
mov
ds
lock
cmp
push
inc
rcrl
and
cmpl
shlb
js
movsb
push
lea
jecxz
dec
mov
loope
ret
and
inc
mov
cmp
ja
mov
stos
and
test
sbb
inc
sub
xchg
cli
notl
divl
sbb
mov
add
clc
mov
rcrl
inc
out
sbb
adc
mov
stc
das
cld
scas
cld
pop
jmp
cli
mov
inc
aad
cltd
xchg
jmp
loop
xor
lea
ss
sub
adc
jbe
movsl
test
shlb
add
xchg
mov
jne
int
cmpsl
xchg
mov
and
and
aad
popa
lods
sbb
mov
sbb
leave
mov
adc
adc
adc
icebp
sub
sbb
movsl
fisubl
enter
dec
jb
dec
pop
adcl
js
scas
mov
mov
sub
test
dec
lods
lock
outsw
loop
add
dec
aaa
or
and
sub
mov
mov
out
push
xor
shr
dec
loop
mov
movsl
imul
or
mov
xlat
cmp
loopne
sbb
loope
jl
movntq
out
daa
push
cli
movsl
in
mov
lret
adc
push
fsubr
in
out
xchg
inc
std
xor
outsl
pop
inc
lret
rorb
cmp
pop
ds
lret
ds
loope
andl
and
insl
sub
jl
jmp
clc
loop
fnstsw
inc
cmp
inc
aad
pop
je
add
ja
sub
add
shrl
push
adc
sub
popa
fmul
sub
sbb
in
repz
xchg
xchg
ret
ficompl
add
repnz
mov
mov
repnz
in
and
imul
pop
clc
xlat
std
xor
add
aam
js
pop
std
aam
sub
mov
xchg
lahf
out
mov
pusha
enter
ficomps
loope
cs
pushf
lret
or
mov
sub
scas
mul
dec
lcall
mov
clc
mul
pop
dec
sbb
xchg
inc
push
test
fisubrl
and
mov
repz
pop
outsb
arpl
mov
lods
lea
xor
sbb
out
push
fldenv
cld
adc
dec
cmpsb
push
cmp
dec
cs
push
fdivp
xchg
mov
push
rcrb
loop
add
cmp
sub
cs
dec
enter
push
aad
inc
dec
out
push
dec
sbb
mov
mov
loope
lds
movsl
inc
pop
or
xchg
jnp
pop
das
out
and
out
aam
es
lret
js
xorl
mov
adc
aaa
repz
cli
outsl
pop
mov
adc
stos
dec
cmp
out
push
arpl
ret
insb
mov
xlat
inc
repnz
pop
cmpsb
incb
cmp
xchg
sbb
enter
hlt
divb
add
mov
int3
or
ljmp
pop
jns
rcrl
sbb
pop
pop
sub
mov
jno
hlt
inc
insb
push
push
cmp
test
testb
inc
jge
pop
mov
clc
and
mov
leave
dec
jne
out
mov
lret
sahf
jp
xchg
loope
cmp
lock
fisubrs
mov
outsl
xorl
insb
arpl
adc
xor
jmp
scas
xor
imul
lea
int
jo
mov
jg
sbb
mov
arpl
sbb
mov
out
adc
push
or
ljmp
add
aam
jg
jne
scas
mov
bound
mov
testb
xchg
pusha
push
movsl
lods
cmp
cmpsb
sub
rol
stos
std
dec
ljmp
sarl
push
pushl
fdivrl
push
loop
lret
or
es
int
xor
push
mov
sbb
fadd
insb
sti
mov
mov
push
inc
jecxz
cpuid
jle
insb
lcall
adc
adc
cmp
cmc
mov
cmp
or
mov
fs
add
xor
and
mov
shll
test
pop
mov
stos
stc
mov
push
rcll
mov
or
pushf
ret
sbb
mov
cltd
jbe
inc
lret
cmp
popa
and
adc
or
popf
test
push
cmp
das
inc
daa
pop
mov
popf
loopne
adc
mov
mov
sbb
lret
je
pop
pop
xchg
je
mov
push
or
insb
lahf
inc
and
inc
sub
sahf
nop
xchg
pushf
sub
aam
imul
xchg
out
xor
xchg
orps
adc
cmpb
sbb
cmp
cmpsl
dec
movsl
das
into
add
jl
nop
cli
inc
test
lds
loopne
rcll
push
scas
pop
sbb
mov
test
adc
repnz
fists
and
js
fcoms
clc
dec
stc
outsb
rcrb
pusha
inc
je
dec
push
dec
sub
push
stc
cli
shll
shll
mov
sbb
cld
fistl
jmp
xor
mov
ret
mov
ljmp
orb
adc
pop
push
fisttpll
fdivrs
push
pop
push
lret
test
mov
dec
cmpsl
lea
xchg
mov
xor
rorl
jl
enter
mov
and
inc
loope
lcall
mov
mov
push
outsl
sub
cmp
inc
out
shlb
mov
push
cwtl
adc
dec
sbb
dec
mov
push
into
mov
leave
into
dec
subl
lret
lfs
or
leave
and
daa
pop
jbe
sbb
cmovno
lahf
jp
cmp
add
jecxz
xor
and
rorb
add
ret
jp
lret
dec
cwtl
leave
adc
shr
mov
rorl
add
cmc
mov
nop
leave
lods
addl
push
imul
pop
cmc
add
mov
xchg
push
lret
xor
mov
push
in
sahf
test
pop
mov
push
mov
mov
jb
dec
sbb
loopne
adc
xchg
pop
mov
xorb
xchg
test
sub
mov
addl
dec
or
ss
push
or
mov
lock
push
int3
xchg
mov
dec
jmp
stos
cmp
je
shl
push
bound
cmp
lock
mov
out
js
and
mov
movsb
add
and
in
sub
cmc
fimuls
fs
mov
int3
loopne
pop
gs
call
iret
cli
in
into
or
f2xm1
je
or
fcoml
push
or
cld
cmpsb
bound
push
xchg
decl
das
mov
inc
push
add
pop
inc
mov
mov
xchg
pop
push
outsb
sbb
outsb
fcmovu
jp
pop
ljmp
cltd
ds
je
mov
sbb
lea
xlat
stc
ja
repnz
ljmp
xor
pop
or
add
test
fwait
push
inc
cmp
xlat
mov
and
aaa
jg
push
sub
adc
filds
mov
mov
sbb
and
inc
inc
push
push
ljmp
mov
dec
mov
in
aad
rclb
cmp
cmp
push
mov
push
sahf
call
out
pop
fildl
add
mov
cld
cld
mov
jmp
js
stos
mov
add
push
out
adc
cmp
jnp
jmp
push
sbb
fildll
scas
jmp
insl
xor
jns
and
and
js
cmp
repnz
aam
pop
addl
mov
popa
cmpsb
mov
or
or
dec
dec
cmp
arpl
push
jg
mov
cmp
inc
add
mov
xchg
push
sbb
fsubrl
imulb
daa
sbb
add
loope
mov
lcall
inc
mov
inc
sub
subl
orl
into
xor
insb
pusha
xor
leave
xchg
outsl
les
mov
inc
pop
stc
mov
sub
int
jp
in
outsl
sub
lret
jmp
cli
nop
inc
ds
aam
lods
or
pop
or
jge
xor
lea
mov
mov
scas
xlat
or
int3
jp
and
push
inc
cmp
and
lret
sbb
jns
cmp
jb
popa
ret
and
mov
and
in
or
sub
xor
xor
addl
imul
jle
jo
fstpl
popa
jge
aas
jl
shll
inc
popa
xchg
in
ret
ljmp
xchg
xchg
cmc
pop
shll
dec
ficompl
lcall
cmovne
movsb
push
push
sub
fdecstp
xchg
xor
lock
call
sub
into
repz
inc
jecxz
ss
or
cmp
ljmp
xchg
mov
xorl
mov
mov
push
pop
pop
sub
pop
push
outsb
ljmp
cmp
inc
fcoms
ficomps
mov
mov
lret
xor
out
jp
int
push
mov
test
loopne
xor
dec
lods
sbb
rcrb
cs
cmp
bound
into
pop
repz
ror
addr16
push
les
shlb
ret
adc
adc
mov
shrl
sbb
into
pop
in
dec
pop
xor
ret
adc
ret
add
outsb
roll
ja
pop
js
mov
lcall
push
lahf
jnp
or
dec
movb
mov
daa
bound
mov
add
outsb
mov
mov
das
mov
int
jae
repnz
insl
rclb
push
push
mov
loopne
cmp
push
addr16
pop
out
pop
enter
jg
add
jp
das
xchg
push
int
gs
into
xor
inc
inc
jno
cmp
std
sub
das
adc
cmp
inc
mov
and
and
add
and
cli
imul
pop
dec
sbb
cmp
iret
inc
fwait
hlt
insl
ja
lret
ja
pop
scas
xor
sub
push
cltd
rcrb
mov
sub
pop
sbb
enter
call
jns
in
pushl
xor
xchg
xlat
adc
and
movsl
outsb
ds
and
call
test
adc
push
rcrb
shrl
lret
fwait
cmp
push
jb
pop
notl
jecxz
adc
sbb
insl
lods
movb
shll
je
loopne
in
sbb
sub
mov
stos
pop
dec
insb
cwtl
loopne
movsl
dec
loope
dec
stos
flds
jbe
dec
call
fiadds
pop
xor
fsubl
roll
std
in
dec
add
mov
and
or
insl
test
test
adc
jnp
push
insb
ret
lret
ss
ror
jae
icebp
mov
cs
les
loop
sbb
aaa
repnz
mov
pop
cli
lret
out
cmp
cltd
xchg
neg
push
mov
sub
adc
mov
mov
adc
cmpsl
inc
leave
dec
popf
jne
test
sarb
lods
test
push
xor
int3
adc
mov
sarb
mov
lahf
decb
addl
push
jp
push
mov
ss
icebp
push
xor
shrb
adc
xor
stos
jge
push
pop
xor
and
push
fistpl
push
push
ret
add
xchg
mov
or
imul
mov
add
mov
lahf
dec
sti
xor
gs
mov
rdmsr
lds
xor
out
jbe
mov
jb
xchg
outsb
test
jns
cltd
fdivs
mov
cltd
add
dec
push
xor
arpl
and
scas
insb
aas
mov
pop
out
or
sub
imull
stc
dec
xchg
insl
and
das
lret
cmpsl
push
xchg
sti
mov
stos
dec
or
aaa
xor
in
shll
and
adc
sbb
or
mov
push
cmpsl
dec
sub
icebp
jg
push
arpl
aad
leave
xor
or
imul
or
inc
cmp
mov
or
jne
mov
mov
mov
cmp
testl
add
sub
xchg
xchg
jb
lods
add
jl
mov
pop
mov
inc
popf
push
mov
bound
cmp
pop
mov
test
or
push
insl
ja
lock
imul
and
pop
stos
mov
lcall
push
xor
fs
lds
push
sub
call
inc
imul
mov
pop
loop
mov
add
mov
sahf
cmp
lea
inc
cmp
das
into
imul
inc
loope
lea
jecxz
lcall
cmp
addr16
gs
pop
cmp
sahf
pop
lock
dec
and
das
mov
jmp
mov
xor
xchg
push
jp
mov
or
mov
out
movb
cmp
sbb
gs
mov
fsubrl
jge
jb
adcl
pop
bound
cmp
icebp
loopne
fs
jmp
dec
in
or
pop
mov
cmpsb
mov
divl
imul
repz
and
movsb
pop
fld
pop
shl
mov
sbb
mov
fiadds
adc
and
add
sub
mov
aad
jle
jle
inc
adc
pop
mov
movsb
cmp
pop
out
dec
imul
aas
jmp
xchg
cltd
pop
je
enter
subb
int
cmp
inc
pop
dec
popa
jge
mov
mov
dec
mov
insl
pop
dec
fcmovnbe
xchg
cmp
daa
xchg
aaa
aaa
and
stos
aas
cli
dec
adc
lcall
mov
mov
push
stos
dec
push
bound
lods
outsl
mov
imul
mov
cld
and
cmp
ror
mov
dec
lcall
out
or
mov
ficoml
mov
repz
push
daa
xchg
fstpl
gs
lds
mov
clc
push
jg
mov
mov
loop
setle
xchg
jb
dec
inc
pop
fs
sbb
adc
mov
mov
push
iret
lock
in
test
inc
bound
cmp
push
mov
xchg
xchg
pushf
dec
jl
out
push
in
mov
xor
mov
arpl
xchg
das
ja
scas
or
sub
fcomip
jne
push
imul
pop
loop
jecxz
addr16
fs
loope
jl
in
je
jb
dec
mov
fsubs
lds
call
inc
mov
stos
loopne
adc
ljmp
xchg
pop
mov
repz
jb
lret
dec
test
cmc
clc
imul
data16
dec
jp
int3
loop
sub
inc
movsl
gs
nop
and
sub
test
xor
adc
adc
inc
or
or
inc
adc
sub
lret
cld
add
sub
cmpsl
xor
dec
push
mov
popf
mov
mov
jo
movsl
jmp
cmp
call
aam
test
pushf
mov
imul
push
xchg
adc
mov
jne
cmp
mov
imul
sub
lret
pop
sub
sbb
lahf
push
adc
outsl
sub
xchg
clc
or
push
fs
cmp
adc
enter
mov
sub
push
scas
outsb
mov
dec
cmp
and
mov
inc
mov
sub
push
fs
sbb
out
cmc
jno
cld
stos
dec
xorb
enter
fnstcw
daa
mov
cld
es
mov
sub
mov
enter
loop
ja
inc
into
fistps
add
and
or
out
mov
cmpsb
data16
cwtl
int
outsl
call
popa
shrl
in
dec
cmc
sub
insl
xor
or
lret
lret
jns
pop
pop
dec
lods
loope
add
cmpsl
gs
add
and
repz
in
pop
enter
hlt
int3
push
cld
mov
cmp
push
and
scas
adc
pop
xchg
outsl
psubsw
call
cltd
and
int3
push
mov
int
add
sub
stos
insl
loopne
aad
push
add
xchg
aam
mov
icebp
leave
sbb
xchg
or
enter
jno
and
jmp
aad
pop
cmpsl
cmpl
xor
mov
cmp
fwait
cs
lods
fld
imul
jecxz
test
pop
dec
insb
push
test
ljmp
imul
mov
hlt
push
call
xchg
pop
and
mov
cmc
xchg
out
dec
xchg
dec
lret
sub
faddl
ficomps
scas
sub
leave
add
xchg
jge
mov
shll
push
and
int
into
dec
jae
push
int3
enter
icebp
jnp
lea
clc
cmp
dec
xchg
add
and
mov
push
dec
inc
xor
sbb
std
mov
idivl
push
out
mov
dec
stos
outsl
mov
mov
add
mov
xchg
jl
push
dec
sbb
fdivs
leave
pop
xor
and
jecxz
js
mov
sub
mov
pop
xor
mov
in
dec
mov
push
es
jmp
jle
lock
cmpsb
fidivrs
adc
or
add
sub
leave
adc
push
stos
jbe
jne
stos
cmp
push
cs
push
jmp
dec
jae
jle
into
mov
jmp
cmp
push
push
hlt
mov
leave
roll
stos
iret
mov
jl
dec
sbb
and
fnstsw
dec
mov
shll
mov
rcr
scas
lock
xchg
mov
repnz
xchg
xchg
cltd
sub
xchg
jno
jns
out
add
push
sub
mov
cmp
xchg
scas
jle
fldt
mov
jg
ss
push
xor
rclb
mov
out
sahf
and
lea
lods
test
xchg
jnp
fdivr
movsb
in
xlat
iret
mov
jmp
fs
pushf
add
int
cmp
dec
add
pop
jno
mov
repnz
and
pop
and
lahf
fcoms
hlt
aad
sbb
decb
sbb
mov
mov
inc
imul
ljmp
mov
jae
xlat
pop
pop
or
pop
jg
fimull
mov
push
add
loop
out
les
ja
jne
mov
cli
fisubrl
stos
jmp
and
ret
add
and
stos
xlat
add
pop
jle
fs
push
mov
pushf
aam
je
lods
jnp
lea
xor
pop
mov
or
popa
add
test
xchg
pop
repnz
out
aaa
and
insl
or
push
mov
jne
andl
pushf
cld
mov
repnz
sahf
dec
dec
cs
cmp
mov
fwait
adc
or
sbb
pushfw
test
or
jle
push
aam
fbstp
cmp
fistps
test
inc
adc
jno
and
ds
pop
push
gs
scas
in
sub
sbb
in
dec
mov
xlat
enter
pop
leave
cmp
fs
lcall
push
aam
repz
repz
cmp
mov
popf
jnp
into
addr16
ja
inc
jo
mov
jl
jl
mov
mov
mov
push
lcall
imulb
scas
iret
das
in
mov
cmp
push
push
cmpb
das
out
pop
rclb
movb
push
jo
outsb
icebp
call
push
push
mov
dec
test
or
dec
adc
push
adc
ljmp
das
stos
loope
das
sub
clc
add
fwait
test
cmp
xor
xchg
xchg
popf
and
xlat
orl
fcmovbe
and
xor
or
mul
mov
cmp
enter
or
mov
mov
les
mov
fidivrl
jne
xor
mov
sbb
loopne
jmp
rolb
mov
rorl
push
and
xchg
insl
jl
mov
mov
pop
and
jg
sub
cwtl
push
mov
and
gs
movsl
fwait
push
je
mov
adc
adc
cwtl
jne
adc
insb
sbb
and
inc
and
test
cmpsl
imul
in
shl
sbb
les
outsl
jo
mov
insb
dec
in
xchg
out
mov
mov
pop
dec
lods
push
stos
add
mov
decb
mov
out
lock
mov
mov
sub
or
imul
loope
lea
je
in
aaa
arpl
insb
pop
movsb
and
cmp
pop
adc
cmpsl
adc
outsb
xchg
mov
or
mov
lcall
dec
push
push
imul
jg
push
ljmp
sub
stos
mov
mov
mov
out
inc
push
mov
gs
cltd
jae
inc
mov
push
jo
loop
imul
aas
lcall
into
and
inc
aam
xchg
scas
dec
ret
add
aam
lods
jns
cmp
scas
repnz
loopne
xchg
sub
jb
js
inc
dec
movsl
inc
adc
imul
arpl
or
adc
movl
xlat
push
pop
pop
pop
ljmp
aas
mov
addl
mov
sbb
cmpsl
js
mov
push
mov
js
es
testb
fdivrs
mov
lock
andl
xchg
xchg
sti
rorl
stos
mov
mov
test
pop
insb
aad
pop
add
sarb
out
mov
add
insl
arpl
neg
jns
lret
adc
inc
cmp
mov
inc
imul
mov
int3
cmp
rcpps
mov
cmpsl
and
inc
call
in
jg
ficoms
cmp
popa
fnop
sub
dec
and
pop
add
or
aad
rclb
inc
leave
sub
push
cmp
pushl
and
in
push
enter
dec
xor
stos
inc
jge
out
nop
cwtl
lods
mov
cmpsl
outsl
stos
push
pop
jle
fdivrs
iret
nop
push
dec
roll
jg
xor
fs
fcompl
leave
in
sahf
sub
xchg
dec
test
dec
cmp
int
xchg
jnp
subl
popa
nop
xchg
pop
das
push
lds
jmp
and
jne
into
xor
cmp
cmc
dec
dec
mov
lods
loopne
xor
mov
xor
mov
inc
mov
aaa
add
shll
filds
adc
xor
adc
es
fs
adcl
pop
scas
mov
mov
push
js
inc
loopnew
push
or
push
jl
inc
mov
adc
sbb
inc
mov
js
mov
cmp
adcb
shll
enter
clc
sbb
pop
pop
shll
aam
push
cmp
ret
cmpsb
sub
int
dec
pop
in
jnp
jg
xchg
nop
xchg
inc
leave
out
cmp
lahf
scas
push
add
mov
xchg
push
lea
test
dec
inc
mov
cld
pop
adc
aaa
out
mov
push
ljmp
pop
pushf
and
popf
pop
add
flds
fmuls
adc
pop
push
stos
ss
adc
mov
or
ss
out
add
mov
out
mov
dec
mov
mov
cmp
iret
and
fcmovbe
or
dec
sbb
and
fidivrs
stos
xchg
pushf
add
jmp
and
mov
int
or
inc
cltd
loopne
mov
iret
mov
xchg
xor
adc
adc
xor
sub
pop
push
mov
sbb
mov
add
ror
mov
les
inc
cltd
dec
movsb
mov
dec
pop
fisubl
push
jno
data16
xor
push
enter
push
sbb
mov
movb
mov
hlt
jae
cwtl
mov
inc
sub
sbb
out
sub
xchg
fistps
cli
pop
lock
test
jae
rcll
sub
push
mov
rclb
pop
cmp
loopne
rclb
es
rcll
xchg
jp
out
mov
sbb
gs
insb
or
outsl
mov
xchg
mov
mov
jno
dec
xchg
cmpsl
inc
inc
imul
scas
loopne
lock
je
jbe
loopne
dec
dec
push
hlt
out
popf
jl
pop
sbb
cmp
adc
pop
or
popa
gs
rcr
jge
lret
sbb
inc
out
push
add
mov
cltd
shrb
sti
dec
or
inc
icebp
mov
jnp
jg
in
push
mov
movsl
mov
inc
cli
push
fidivrs
mov
dec
jae
mov
jmp
adc
incb
fs
mov
repnz
mov
xchg
fcomps
movl
xchg
cltd
pop
sbb
aas
lds
and
mov
stc
or
dec
cmpsl
cltd
add
mov
jecxz
adc
lea
rclb
or
fucomi
cmc
pop
scas
cltd
inc
mov
movsl
rolb
pop
jb
inc
jns
xlat
sbb
pop
hlt
int3
add
push
pop
or
xchg
aaa
stc
mov
dec
mov
inc
pop
lods
and
pop
fwait
rcrl
in
pusha
cmpsb
mov
adc
dec
fwait
ss
sar
push
dec
testb
inc
iret
pop
lahf
pop
and
inc
fsubrl
in
ds
test
sbb
nop
je
adc
aam
push
adc
and
add
insl
xchg
adc
shrb
lds
les
push
fwait
stos
outsb
and
arpl
std
fstl
fcomps
imul
inc
adc
xchg
jns
inc
jne
mov
jg
aaa
pop
mov
dec
xor
lret
add
mov
sub
dec
mov
mov
mov
into
lret
lcall
subb
frstor
pop
pop
loop
outsb
and
neg
lods
cmp
add
inc
cmp
sbb
inc
sub
jecxz
imul
jb
adc
mov
aad
push
add
add
add
ss
jp
aas
loope
cld
mov
nop
push
cmp
sub
or
outsb
pop
das
or
mov
sti
fwait
cmp
xchg
add
cmp
call
adc
out
add
in
fnstsw
or
sbb
lock
cmpsb
push
add
faddl
int
inc
pop
andb
std
loope
out
ja
mov
inc
out
daa
dec
je
mov
fs
sub
and
scas
mov
loope
cmp
enter
arpl
inc
clc
and
std
out
adc
jecxz
or
mov
lcall
jne
test
call
rorb
iret
sbb
sbb
in
fwait
xchg
push
mov
pop
push
int
fidivs
mov
repnz
push
jno
jge
popf
movsb
and
bound
jns
add
xchg
sub
mov
xorl
fnstenv
xchg
std
aam
and
imul
push
adc
dec
mov
int3
or
cmc
in
outsb
dec
movsb
addr16
cs
lsl
enter
push
scas
jle
xchg
test
fistpl
aaa
cmpsb
addr16
shlb
mov
shlb
adc
lods
test
pop
lds
lret
addr16
push
xor
xchg
std
fbstp
and
cmp
std
std
cmp
mov
inc
adc
mov
cmpsl
xchg
xor
sbb
cmpsl
jb
stos
int3
or
out
leave
push
xchg
mov
inc
das
stos
repz
or
stos
push
mov
cs
mov
dec
mov
vmread
and
jno
inc
xchg
adc
push
push
jl
in
inc
adc
int
fdivrs
lock
outsb
call
insb
leave
cmp
mov
adc
mov
loop
outsl
pop
outsl
gs
adc
mov
jo
lds
mov
mov
or
cltd
shll
xor
mov
push
outsl
enter
push
les
icebp
xchg
adc
call
pop
mov
xorl
mov
nop
movsb
pop
lods
es
sub
js
outsb
push
addl
daa
ret
dec
int3
loope
out
inc
cld
adc
fnstenv
xlat
shl
and
enter
inc
pop
cmp
mov
es
xchg
pop
outsl
cmp
imul
stos
lock
and
push
frstor
jge
xor
movsb
clc
cmpsb
sub
data16
mov
dec
rcr
es
ret
mov
aad
test
nop
lock
leave
jne
inc
lea
stos
mov
pop
test
xchg
call
setb
fidivrs
inc
int
xchg
aad
inc
mov
cli
xor
loopne
mov
imul
not
lds
cwtl
push
push
mov
dec
repnz
lds
xor
and
lea
ljmp
mov
ret
leave
or
fcoms
aas
stos
xor
xchg
stos
sub
lahf
clc
sbb
cld
insb
dec
adc
insl
push
movsl
or
mov
cmp
cmp
jg
jge
cltd
cmp
mov
stos
rcll
mov
jno
sarb
stos
inc
add
push
mov
xchg
das
ret
mov
mov
rorb
inc
mov
outsb
inc
sub
in
in
push
fidivs
dec
add
mov
or
or
gs
pop
sub
lret
and
mov
lcall
cmp
dec
jnp
fiadds
into
mov
rorb
push
or
add
int3
imul
cmc
lods
push
movsb
test
enter
movsb
pop
push
sbb
imul
xchg
push
sub
sbb
xlat
push
push
pop
jnp
sbb
orl
push
orb
mov
test
pop
or
lret
cli
out
lods
mov
mov
mov
xchg
jmp
gs
sti
pop
mov
dec
add
xchg
jbe
inc
inc
inc
sarb
movsb
out
push
loope
push
icebp
sub
jae
push
ficomps
out
jo
xchg
mov
sub
dec
pop
pop
dec
subl
pop
adc
cmpsl
sahf
rcrl
or
adc
imul
rcll
pop
xchg
into
jmp
add
mov
sbb
cmpsl
xchg
cmp
mov
sbb
andb
cmp
xchg
je
int3
and
dec
bound
leave
call
and
popf
push
dec
ja
push
mov
std
pop
sbb
lock
sbb
insb
dec
adc
cld
ss
xor
mov
xchg
mov
xchg
cmp
dec
or
or
cmpb
cmp
mov
sub
fists
shll
inc
pop
and
insb
cmpsl
pushaw
pop
xchg
inc
mov
cltd
hlt
rcl
mov
pop
orb
fdivrl
push
add
cmpsl
lods
push
negb
mov
xor
repz
fnstsw
ds
jae
jnp
cmp
sahf
insl
mov
inc
pop
scas
cmp
add
mov
jb,pn
jne
in
cltd
mov
in
ficompl
jbe
cwtl
mov
imul
ds
jmp
add
jnp
jmp
or
addr16
pop
sbb
adc
insl
fsubrs
dec
jle
or
repnz
jmp
ljmp
ret
test
data16
xor
and
out
inc
mov
test
mov
shlb
mov
xor
es
lock
lods
enter
inc
lock
cltd
outsb
sub
push
leave
pop
and
in
push
inc
test
dec
mov
push
test
repz
lahf
lods
in
sbb
jne
push
imul
insb
cwtl
mov
jbe
jge
ljmp
hlt
cs
xor
pop
sub
cld
adc
jne
popa
mov
sub
int3
mov
insl
lods
push
push
rsm
push
imulb
int3
notl
sbb
inc
fidivl
cmpsb
clc
sub
fstpt
test
sbb
outsl
je
ret
into
xor
add
clc
add
cmc
mov
push
xchg
lock
daa
and
test
icebp
lret
nop
arpl
out
insb
out
lret
ret
mov
or
adc
mov
push
adc
add
and
xchg
mov
fsubrl
out
leave
stos
lock
out
mov
inc
jge
sarb
sbb
xchg
adc
les
fcoml
push
inc
add
and
sub
jl
or
adc
mov
push
mov
sub
out
and
adc
lods
dec
js
and
push
jne
lcall
pop
dec
lret
xchg
xor
xor
add
or
push
mov
cmpsl
xchg
cmp
cwtl
movsb
xor
ljmp
dec
pop
mov
xor
mov
push
sti
lret
mov
push
adc
sbb
mov
mov
xchg
loop
hlt
inc
stos
push
iret
ja
rol
sbb
lcall
cmp
dec
stos
fistpl
push
xlat
push
mov
mov
stos
dec
add
rorb
vmovmskpd
js
nop
rorb
movsb
lods
pop
out
mov
jnp
pusha
sub
hlt
mov
lods
fisubl
cmpb
sub
dec
mov
sub
xchg
insl
or
inc
mov
push
jg
inc
xor
mov
push
jle
xchg
loopne
mov
pop
sbbl
outsb
data16
xchg
or
push
push
jns,pt
push
inc
sub
xor
inc
add
xbegin
jl
lcall
mov
lods
cmp
xor
je
adc
fwait
cs
fadds
xchg
imull
inc
mov
jp
add
repnz
ret
hlt
and
xchg
jns
mov
pop
icebp
cmp
rolb
sbbl
ret
mov
sarl
push
aam
pusha
loopne
mov
cmp
popa
in
fmuls
stc
shrl
mov
jmp
and
bound
add
add
and
stos
test
test
push
jns
mov
xor
or
repz
pop
adc
adc
xor
jmp
dec
jp
mov
adc
pop
jo
iret
add
jl
mov
hlt
mov
or
sbb
adc
fsubl
jle
jl
test
push
lea
stc
xlat
adc
dec
add
cltd
dec
pop
andl
into
push
pop
dec
aaa
sti
fnstenv
sbb
pop
push
pop
jg
sti
mov
popf
and
push
add
or
lods
push
daa
mov
test
or
stos
jns
add
arpl
insl
mov
jmp
mov
xor
lods
push
das
out
insb
sbb
sti
inc
into
add
jae
into
and
inc
aad
pop
jecxz
dec
push
fs
mov
jle
pop
jo
dec
cmp
and
nop
and
fdivrp
lret
inc
fs
mov
push
push
push
bnd
add
xlat
dec
sbb
adcl
loope
mov
aas
aad
mov
jae
mov
fwait
ss
rcl
jne
sbb
neg
pop
add
add
out
or
gs
mov
xor
aaa
push
js
mov
outsb
jnp
test
dec
movq
mov
or
call
jae
add
ret
push
jno
insb
hlt
push
fwait
in
stos
mov
or
jecxz
leave
sbb
movsl
ss
mov
fistpll
add
xor
into
pop
mov
pusha
lock
repz
mov
sub
jne
loop
jmp
cmpsl
loop
dec
lods
inc
inc
cmp
pusha
loope
shrb
dec
sub
xor
pop
and
rcr
pusha
or
popa
mov
pusha
fdivl
xlat
dec
sub
xor
aad
fwait
cld
lret
add
sbb
adc
and
mov
aaa
push
fiaddl
shlb
cmp
add
mov
cmp
jno
mov
mov
mov
or
xor
outsl
push
mov
sbb
and
roll
push
mov
adcb
cmpsb
jno,pn
xor
xor
push
insl
mov
stos
jbe
inc
xor
cmp
bound
add
mov
fimuls
lahf
push
mov
sub
out
sub
inc
movsl
arpl
mov
es
sbb
cmp
pop
aas
mov
fbstp
mov
push
push
aam
push
fsubrl
aam
fwait
ret
xchg
mov
adc
xchg
fistps
mov
loope
adcb
sub
lahf
fbld
dec
adc
sub
iret
pop
popa
jecxz
xor
mov
leave
cmpsl
inc
outsb
sbb
mov
push
xor
jmp
push
sub
dec
jae
aas
and
cmp
add
mov
dec
ljmp
inc
cmp
or
into
mov
pop
inc
push
enter
inc
mov
inc
and
incl
ret
lret
scas
cli
loop
cli
fwait
mov
lcall
pushf
stos
das
cmp
test
adc
dec
cs
shll
dec
and
test
push
add
cmp
es
sbb
mov
into
xchg
mov
jg
pop
sub
dec
cld
mov
lret
and
add
mov
adc
hlt
adc
or
push
cmp
jl
subb
jle
jne
xor
inc
repz
dec
add
jnp
dec
insl
aaa
mov
sbb
xorl
cmpsb
es
lcall
dec
dec
cmp
aaa
push
fwait
stos
in
test
pop
jge
sub
psubw
inc
adc
or
sarl
dec
mov
jae
ja
inc
mov
jno
bound
xlat
pop
mov
lahf
jbe
popf
and
in
sbb
shrl
adc
in
pop
repnz
pop
push
pusha
das
and
and
cmpb
pop
add
inc
stos
cmc
arpl
shlb
xor
orb
ja
bswap
mov
or
lea
cltd
sub
cmpsb
mov
xchg
addb
fidivs
in
mov
loopne
adc
xchg
jns
arpl
jno
jge
dec
sbb
jbe
jecxz
xor
outsl
out
xor
xchg
xor
add
adcl
xchg
fnsave
dec
mov
rep
aad
mov
repnz
and
adc
cmpsb
mov
fcompl
pop
lahf
test
mov
clc
jbe
test
xchg
je
insl
outsb
inc
rolb
test
pop
dec
add
inc
pushf
cmpsl
sbb
out
jp
loope
stos
jae
fdivrs
or
shlb
push
pop
dec
in
inc
add
sub
xchg
movsl
div
ljmp
jmp
dec
ja
jle
fldcw
out
xchg
push
or
leave
or
ret
lret
rclb
adc
call
pop
dec
cmp
jne
cmpsb
cld
jo
loope
sbb
push
fisttpl
push
cli
enter
or
test
and
mov
sbb
jne
aam
fistpl
aad
gs
or
lret
or
sub
xor
aaa
stos
imul
and
sahf
pop
xor
loope
or
dec
daa
pop
mov
xchg
and
jne
mov
dec
in
rcrb
out
mov
aas
lret
sub
mov
xor
mov
hlt
dec
iret
xlat
mov
jl
mov
arpl
jno
dec
xlat
inc
cwtl
jns
adc
mov
xor
int
mov
xlat
mov
and
add
shlb
in
and
xlat
lret
xor
and
mov
ret
and
xlat
cs
cwtl
cld
xchg
xchg
iret
mov
and
into
aaa
jmp
xchg
add
lcall
sbb
dec
inc
movb
das
iret
pushf
push
adc
mov
cli
inc
xchg
out
gs
insb
gs
sub
stos
in
hlt
out
add
add
xor
in
cmc
mov
adc
push
les
aam
mov
mov
jmp
mov
frstor
jo
xchg
xorb
cmp
aad
mov
inc
mov
sub
insl
pop
cmp
sbb
sbb
outsb
mov
push
mov
cmp
inc
jmp
hlt
jl
xor
shr
stos
lahf
cmc
sbb
es
flds
movsb
push
imul
xor
pop
and
into
dec
fsubs
or
sub
push
sbb
clc
scas
dec
push
xor
dec
xchg
jo
and
or
sti
xchg
lods
fcompl
dec
bound
cmpb
cmp
mov
mov
aaa
add
inc
xchg
scas
repz
inc
and
push
ljmp
les
dec
testl
cmp
jp
cmp
sbb
mov
adc
fwait
in
cwtl
shll
inc
fnstenv
and
push
jo
mov
xor
pop
or
and
push
adc
clc
sub
out
nop
sub
mov
call
in
jmp
pop
out
and
and
mov
repz
adc
xchg
popf
jbe
cmpsb
in
int
push
std
addb
out
sti
xchg
stos
test
lcall
mov
jno
mov
cmp
ja
mov
lret
cmpsb
sar
insb
sbb
js
or
lds
es
lods
or
cli
push
and
pop
and
mov
rcll
jns
testl
jnp
jnp
dec
mov
xlat
outsl
jle
ds
scas
xchg
mov
pop
mov
lea
sbb
sub
test
adc
imul
mov
sarb
push
call
add
and
adc
ret
rclb
push
jae
push
scas
pop
fldt
mov
and
push
or
inc
mov
jmp
sbb
iret
fistpl
sub
sub
fists
pop
inc
pop
lret
scas
xor
leave
pop
icebp
add
push
adc
mov
xor
leave
pop
les
and
ret
xor
push
mov
std
cld
stc
and
xor
clc
mov
popf
andl
sub
sbbl
inc
repnz
mov
das
jo
dec
mov
dec
jne
movl
inc
into
mov
loope
je
insl
ljmp
sti
mov
dec
daa
fists
daa
jno
mov
push
ret
lret
orb
mov
cmpsl
test
xlat
flds
gs
mov
nop
sahf
shr
test
xor
fst
mov
je
cltd
shrb
ret
xchg
pop
mov
and
dec
xchg
mov
rorb
dec
and
inc
add
test
dec
icebp
cmpsb
cmp
lods
ficompl
pop
divb
jae
xor
push
sub
insb
and
cmc
mov
lods
pop
xor
pop
xchg
pop
insb
fistl
bound
hlt
jp
fidivrl
mov
or
pop
jge
outsl
daa
jg
cli
push
and
push
out
lret
les
je
movsb
mov
fistpl
inc
ljmp
cmpsb
imul
sbb
scas
daa
testb
lods
jge
js
in
repnz
pusha
mov
inc
cmp
icebp
pushf
inc
cltd
cwtl
mov
add
js
loope
jle
pop
movsl
mov
cmpsl
mov
mov
inc
pop
jno
cmpsl
ret
ficomps
js
mov
hlt
pop
insb
stos
mov
mov
inc
jb
jmp
pop
lcall
js
add
add
add
push
xor
jmp
sbb
leave
outsb
loop
mov
in
mov
movsb
cmpsb
and
out
fisubs
andl
mov
mov
inc
push
outsb
sbb
jge
fsubs
fnstsw
jbe
sub
jp
lods
test
loop
sub
aam
cmc
pop
sti
inc
dec
popa
adc
or
in
cmpsb
lret
push
push
sub
mov
cli
sti
hlt
push
int
int3
push
mov
push
mov
roll
xor
and
mov
xor
fmull
pop
mov
lret
lret
idivl
popa
in
pop
push
adc
shlb
addr16
cld
sti
dec
aad
sbb
loope
dec
or
jne
fwait
ja,pn
jno
xor
shll
dec
lods
xor
push
imul
jae
jge
rolb
daa
or
pop
push
jbe
out
jmp
add
pop
rcr
pop
in
insl
lret
rorl
repz
xchg
inc
addr16
sahf
xor
inc
sbb
ret
lcall
leave
inc
cld
mov
xlat
jge
repnz
mov
enter
cmp
inc
lods
sbb
dec
rcll
gs
pusha
xchg
pop
into
push
sbb
pop
sub
dec
int
lods
adc
sub
hlt
mov
adc
mov
mov
outsl
jbe
sub
push
push
mov
in
inc
pop
enter
gs
mov
mov
and
and
lret
inc
or
imul
fsubr
rcll
dec
out
rol
movsl
call
jnp
cmp
data16
add
adc
clc
dec
xor
xchg
inc
jge
mov
mov
cmp
mov
mov
ljmp
je
pop
mov
sub
testb
cmpsb
pop
dec
ficomps
and
adc
ret
add
jne
push
or
xor
call
push
pop
lcall
xor
hlt
out
mov
xor
mov
or
out
jp
data16
mov
cmp
popa
je
fsubrl
xchg
push
das
cltd
pop
negl
mov
inc
xor
xchg
sbb
and
lret
and
pop
or
xchg
loop
inc
dec
mov
nop
pop
paddd
dec
jmp
pop
mov
inc
or
inc
lods
push
cmp
inc
pop
mov
mov
sbb
xchg
sti
mov
jae
cmp
test
aam
fists
clc
dec
mov
push
and
stc
jmp
adc
mov
sahf
mov
imul
pop
dec
mov
mov
pop
xchg
rcr
call
orl
mov
mov
add
icebp
test
cld
mov
imul
or
in
push
fists
sbb
sbb
and
addr16
pop
dec
xchg
mov
add
test
sti
addl
mov
leave
fists
fcomps
es
push
xor
xchg
fidivrs
jge
mov
pop
sbb
xor
lcall
sbb
sti
add
lds
sbb
and
fidivl
ret
imul
lds
mov
and
repz
pusha
out
in
cmp
test
mov
enter
sub
pop
sbb
jns
cmp
jmp
and
inc
fs
enter
inc
push
addr16
mov
mov
xchg
pop
inc
bsf
or
lret
mov
orl
jmp
inc
mov
jnp
mov
test
mov
xor
sub
adc
in
call
test
lea
jns
mov
jbe
sbb
or
push
in
test
jmp
xchg
fcompl
dec
ja
cmp
stc
inc
aad
ds
mov
add
sbb
loop
sub
sub
cmp
hlt
lahf
fcoms
pushf
jmp
cmp
lock
call
les
or
add
outsl
bound
pop
push
int3
cmpsb
nop
mov
fisubl
cli
mov
mov
popf
mov
inc
mov
test
jp
adc
push
mov
jae
push
push
jmp
and
movsb
cmc
or
rcl
testb
cli
mov
imull
dec
sbb
push
sahf
rol
fisubrl
push
test
jb
jle
add
jns
shr
mov
adc
xor
aaa
xor
iret
add
jbe
out
jno
inc
inc
inc
mov
pop
cmp
in
je
cltd
lods
mov
hlt
xchg
jmp
dec
cld
test
lret
push
and
aas
mov
or
mov
lcall
ja
sbb
aas
xchg
je
push
jmp
movsl
clc
cmc
push
mov
jae
dec
mov
clc
filds
repnz
sbbl
test
cmpl
xor
sarl
inc
push
cmp
lds
test
cmp
push
pop
dec
mov
addr16
bound
cmpsb
dec
xchg
mov
xchg
adc
pop
push
push
mov
cli
dec
stos
int
insb
jae
fdivl
pop
movsl
cld
inc
movsb
scas
fistps
adc
xchg
mov
popa
inc
test
scas
mov
cmpsl
xchg
or
mov
popf
addb
testl
inc
pop
adc
fpatan
jg
dec
cmp
add
subps
fdivl
scas
enter
sbb
nop
test
jbe
pop
push
scas
mov
fstl
addl
lea
sbb
ret
in
movsb
pusha
repz
mov
xor
out
mov
mov
scas
repnz
or
fbld
jno
paddb
jae
cmp
outsb
outsl
cmp
jbe
adc
push
sbb
xchg
cmp
popf
mov
xchg
mov
les
push
fidivl
test
xor
das
lds
adc
test
jne
jno
xor
push
cmp
jno
adc
inc
sbb
lea
stc
shlb
jecxz
push
cmp
cmp
inc
aam
int3
pop
in
bound
cld
fisttpll
pop
or
sbb
xor
pop
mov
ss
cmpsb
push
xchg
xor
mov
adc
cmp
test
js
jmp
pop
pop
enter
push
xor
jbe
xchg
nop
shlb
mov
xor
push
jno
jmp
cmc
loop
shl
sub
int
xchg
popf
ljmp
rclb
pop
mov
push
pop
cmp
xchg
sbb
cmp
outsl
sub
push
sbb
inc
jno
and
add
dec
clc
arpl
jmp
adc
testl
or
and
and
mov
scas
jge
lock
pop
gs
js
mov
xor
shrl
xor
inc
insl
imul
dec
dec
dec
rcr
push
loop
push
add
enter
das
fsubp
ja
xor
mov
test
aad
push
jmp
insl
mov
mov
ds
mov
mov
push
aas
inc
inc
mov
outsl
pop
jne
sub
mov
xchg
shll
or
aad
fadd
cmp
sub
push
hlt
pop
mov
push
sbb
bound
xchg
shlb
or
test
insl
leave
and
inc
add
pop
lcall
push
or
shll
lahf
les
mov
jne
lock
out
cmp
push
data16
push
mov
or
in
dec
pop
or
sbb
call
xchg
sahf
into
mov
test
ret
shlb
ljmp
xchg
xlat
pop
jp
cmp
inc
lock
mov
repnz
or
mov
dec
mov
dec
scas
cli
push
push
sahf
std
xor
lds
mov
pushf
sub
loopne
dec
cltd
mov
fldl
sub
or
les
mov
mov
fwait
lret
test
sbb
sub
sbb
jg
int
xchg
movsl
xchg
cmp
rdtsc
fld
adc
and
std
outsl
testb
fwait
and
adc
jns
xor
shll
int3
xchg
or
push
sbb
push
or
pop
mov
stos
adc
mov
outsb
jae
int3
pop
cld
cmc
imul
mov
rol
xor
mov
cmp
adc
daa
cmpb
fmulp
in
jb
fdivrs
push
mov
xor
xchg
ret
es
outsb
stc
lock
aas
cmp
mov
dec
bound
stc
push
hlt
jmp
ds
shr
std
mov
push
subb
mov
sub
loopne
pop
inc
in
mov
rorl
cmp
repnz
adcl
mov
adc
mov
ds
jge
add
dec
or
jo
rcrl
lcall
jle
mov
pop
mov
imul
icebp
fstl
filds
insb
cmp
sub
test
mov
add
inc
mov
imul
rclb
jg
in
mov
in
inc
shrl
lahf
push
sti
inc
xchg
std
jo
jo
loopne
xlat
rolb
push
pop
cmpsb
mov
roll
cld
xlat
push
adc
lahf
xchg
out
ret
inc
mov
add
xchg
les
dec
mov
mov
out
sbb
sbb
jmp
jnp
mov
sbb
xchg
or
jge
xor
push
fisttps
fidivs
lcall
sbb
lds
ja
cmc
sub
or
push
dec
and
aam
jae
jp
frstor
mov
orl
test
ficomps
xor
xorb
push
mov
jmp
cli
les
adc
jle
jbe
dec
mov
cmp
mov
mov
mov
sbb
sbb
gs
push
cltd
mov
fmulp
dec
outsb
sbb
or
arpl
jmp
outsl
adc
jno
or
out
add
decb
adc
pop
cld
push
scas
int
into
xchg
jp
pop
inc
test
add
or
loop
out
and
push
mov
jbe
jo
mov
and
ja
pop
pop
xchg
push
test
outsl
push
shrl
in
lret
lret
mov
lods
and
in
xchg
add
jae
rorb
jo
icebp
jge
cltd
loop
xchg
xor
xor
sti
dec
movsb
popf
in
mov
mov
add
mov
dec
nop
mov
mov
pop
nop
in
adc
cli
mov
push
sbb
push
test
sti
mov
je
arpl
sub
or
mov
inc
xlat
and
and
es
xchg
mov
incb
push
sbbl
in
lock
mov
orl
push
ret
lds
xor
enter
and
push
pop
lret
mov
hlt
mov
jl
imul
addr16
dec
enter
rcr
pop
fdivrp
sbbb
adc
rcll
das
call
pop
shlb
jno
lret
inc
out
cmpsl
stos
pop
dec
inc
jne
adc
push
int3
out
aas
clc
call
push
dec
repz
cwtl
outsl
lods
arpl
mov
sbb
pop
xchg
mov
movsl
mov
or
sbb
cmp
loopne
std
pop
pop
leave
fs
xchg
sub
inc
pop
cwtl
xor
lods
lock
mov
sub
and
push
bound
cmp
dec
push
jb
jbe
icebp
scas
xor
fcomps
cld
test
mov
movsl
hlt
arpl
out
inc
jl
mov
mov
std
push
pop
std
icebp
in
xlat
pushf
jo
push
jb
mov
dec
lret
lret
xchg
data16
and
xor
out
adc
adc
sbb
mov
adc
dec
aam
mov
je
sti
sbb
repz
inc
ljmp
inc
jne
mov
cld
data16
sub
into
aas
cmp
dec
hlt
dec
fbld
outsl
adc
add
push
repz
gs
out
repnz
sbb
cmp
ret
mov
jno
ss
cld
rorb
mov
sub
push
inc
sub
xor
pop
and
ret
pop
mov
hlt
shl
pop
sbbb
inc
out
push
xor
jb
in
dec
cmp
fmuls
xor
fcoml
outsb
test
fidivrl
add
notl
lret
cltd
lods
clc
cmpsl
add
mov
inc
rclb
test
fcmovbe
and
mov
dec
shl
cmp
insl
hlt
popa
addr16
sbb
cmp
js
dec
fisubrl
xchg
push
stos
je
or
or
jns
sub
jecxz
outsb
arpl
ja
enter
sbb
testl
inc
mov
popf
mov
pop
mov
orl
xchg
push
sub
cmpsl
mov
cmc
cwtl
stos
imul
sbb
dec
jo
pop
div
shrl
data16
cltd
pusha
pop
mov
ret
mov
dec
inc
in
fwait
shrb
lret
pop
dec
pusha
js
and
lea
test
and
ljmp
sbb
pop
ss
iret
mov
pop
xor
sub
sbb
mov
mov
mov
cmc
fsubrp
mov
aaa
mov
cs
leave
inc
cmpb
mov
pop
loopne
push
rcr
call
fsubrs
outsb
mov
in
or
fucomp
in
jmp
femms
push
rcr
mov
pusha
test
jmp
rcl
or
xchg
mov
ficompl
std
jnp
pop
cmp
jo
xchg
sub
outsl
mov
mov
push
fsubs
pushf
xchg
cmp
dec
lret
xchg
in
mov
fdivs
sahf
adc
imul
and
cltd
pop
jle
mov
out
jle
testb
mov
lcall
push
jge
mov
push
xor
push
xor
or
mov
movsl
mov
arpl
ret
or
and
dec
and
in
jg
jno
cmp
jo
xor
mov
leave
rolb
and
mov
ja,pn
adc
ds
jno
cmp
aad
js
xor
cmp
les
dec
xchg
xlat
mov
pop
bound
sar
sbb
xlat
mov
cmp
out
ljmp
xor
inc
mov
mov
mov
pop
lret
sbb
push
push
mov
leave
lds
repnz
adc
leave
fiadds
dec
push
fsubrs
push
stos
lods
test
stc
mov
mov
cmp
lret
ffree
cmpsb
jl
lret
sahf
mov
jb
jge
repz
shr
into
shlb
dec
movsl
add
cwtl
ja
xchg
push
ja
sub
lahf
test
loop
mov
or
shll
pop
dec
sub
lock
mov
shrl
and
sub
sahf
xor
pop
jb
sub
rolb
inc
hlt
test
xchg
pop
inc
cmp
mov
mov
ss
pop
add
push
test
sti
add
dec
scas
jne
mov
icebp
mov
push
int
jb
or
cli
mov
mov
in
dec
xor
push
cmp
xor
fs
mov
into
movsl
outsl
push
push
mul
movsb
mov
dec
pop
jecxz
sti
repnz
mov
mov
jo
call
dec
jmp
pushf
rolb
scas
mov
xchg
js
lret
test
mov
jge
dec
xor
inc
jmp
mov
mov
rcll
leave
mov
lret
jp
add
and
rcll
mov
inc
ss
jl
lock
push
mov
or
movsl
inc
mov
and
lods
mov
int
mov
popa
push
fwait
aam
dec
rol
sub
fnstsw
sbb
out
pushf
mov
pop
inc
int3
pop
lds
add
prefetch
or
addr16
or
xchg
or
push
add
loope
add
fcomps
jbe
jg
xchg
jnp
jmp
ret
into
popa
es
sbb
mov
rcrl
clc
imul
int
jne
add
xchg
faddl
dec
movsl
mov
xchg
outsl
shlb
sbb
or
xor
ficoml
push
inc
sub
and
mov
es
add
cmp
rcrb
test
leave
and
add
jmp
iret
push
mov
or
mov
sub
xchg
lret
fldcw
pop
in
cmp
and
adc
repz
in
or
dec
rcll
and
imul
outsl
cmp
lods
call
notl
aam
adc
xlat
arpl
mov
pop
cmc
cmpsl
mov
cmpb
inc
cmp
inc
mov
xchg
cli
mov
ficompl
sub
dec
cmpsl
popf
push
jne
pop
ljmp
inc
sbb
stc
test
xor
mov
test
mov
shll
pop
jle
adcl
inc
push
jnp
and
repz
scas
ja
mov
adc
gs
divl
aad
jmp
push
rcl
pop
sbb
push
aam
fidivl
push
adc
inc
mov
sbb
xchg
iret
cmp
fildll
dec
adc
xor
push
cli
cmpsl
outsb
andps
push
jmp
bound
push
aam
mov
sub
nop
lea
movsl
dec
and
lods
adc
pop
iret
push
out
mov
inc
cltd
adc
sub
ret
ljmp
adc
loop
es
mov
out
push
stc
add
dec
scas
push
pusha
mov
jbe
pop
rolb
sub
push
scas
xor
je
movl
push
fnsave
or
xor
push
nop
or
testb
mov
sbb
ret
mov
sti
pop
scas
movsl
stos
dec
cmp
sbb
into
and
jmp
or
dec
data16
mov
std
or
add
stos
ja
addr16
mov
dec
orb
ds
stos
lret
cmp
fldenv
cmp
test
dec
outsb
cmpsl
add
ljmp
and
jmp
mov
adc
mov
jno
aam
subb
jg
dec
lods
jecxz
sub
in
and
addr16
orl
push
or
cmpsl
scas
push
jnp
into
push
outsb
mov
xor
and
xchg
push
aaa
mov
clc
mov
in
outsb
rcll
adc
bound
or
xor
jno
nop
les
enter
leave
push
or
sbb
std
loopne
pop
and
push
ds
push
push
int3
call
or
sub
xchg
dec
or
xchg
xchg
das
out
dec
test
add
nop
scas
popa
rol
inc
into
inc
inc
sbb
popa
fdivrl
add
or
sbb
push
cmp
jmp
add
or
jmp
dec
mov
arpl
das
into
inc
or
daa
dec
ljmp
mov
cmp
xor
outsl
and
fmull
imul
push
iret
aaa
pmaddwd
jo
push
das
outsl
mov
mov
mov
and
das
cmc
loop
or
inc
arpl
out
into
mov
test
dec
sbb
lods
inc
lret
adc
xchg
arpl
sbb
nop
mov
mov
lods
jb
lods
xchg
js
pop
popa
push
jl
out
jg
jne
pushf
pop
arpl
xor
xor
subb
jbe
dec
in
lds
ret
cs
arpl
std
cli
mov
aas
insl
lods
sub
loop
add
clc
sbb
sbb
das
and
push
jno
xor
sbb
outsl
mov
xchg
and
popf
aaa
push
push
js
mov
mov
idivl
rolb
bound
inc
repnz
xchg
cmp
add
cmp
push
and
fcmovnb
mov
cmp
scas
xchg
stos
jns
push
xor
sbb
adc
rcll
fxch
xchg
dec
sub
std
negl
inc
add
stc
pop
lods
xor
in
push
jbe,pt
out
out
or
xchg
lods
push
pop
push
popf
jecxz
aad
clc
xlat
jecxz
insb
pop
mov
jns
fidivrl
fstl
data16
aad
inc
cmc
out
in
jne
sti
in
jl
jb
hlt
aaa
dec
push
jae
xor
jns
stos
mov
or
mov
shrb
sbb
and
dec
pop
fs
mov
mov
pop
cmpb
std
xor
pop
mov
imul
movsb
scas
lret
call
popf
test
jp
sub
iret
jp
lahf
inc
jge
imul
bound
xchg
mov
fiaddl
loop
fldl
fsubl
pop
dec
sbb
mov
scas
adcb
adc
ss
jno
xor
jnp
popa
nop
mov
fistpll
adc
or
add
pop
pushf
or
cmpsl
lods
dec
les
mov
scas
xchg
hlt
in
push
push
mov
inc
dec
movsb
adc
sub
shr
dec
jo
inc
or
jmp
notl
pop
mov
xchg
stos
clc
or
push
out
repz
xchg
xorl
xchg
testl
or
insl
sub
push
lret
xchg
adc
mov
shll
xor
cmp
outsb
fs
imull
fdivrl
repnz
mov
test
mov
xor
jp
cmc
push
loope
outsl
les
fisubl
mov
mov
add
pop
fsubr
or
push
les
cmp
movsb
sar
icebp
outsl
dec
hlt
arpl
sbb
test
cmp
cld
in
repz
mov
xlat
enter
xor
lods
jno
sbb
out
mov
movsb
cs
rcr
push
rcl
lcall
pop
and
ds
mov
and
int3
mov
sbb
jo
insl
adc
int
daa
push
and
xchg
popf
and
call
jg
jne
inc
insb
mov
cmp
mov
and
movsb
jge
adc
pop
ss
pop
lret
push
les
pop
and
lock
aaa
sbb
loope
sbb
cwtl
in
js
pop
or
pop
mov
mov
push
mov
pushf
jo
mov
pop
icebp
pushf
out
aad
inc
ss
sub
push
sahf
sbb
js
test
mov
sbb
sub
cmpsb
or
sbb
out
faddl
shll
cmc
les
mov
add
adc
mov
add
out
icebp
add
orb
lcall
push
sub
icebp
sub
iret
jp
xor
mov
jno
cmc
into
loop
test
add
and
dec
push
daa
mov
aad
ja
pop
and
nop
movsl
lds
mov
or
xor
mov
sarb
or
add
pop
iret
ficomps
jbe
xchg
dec
popa
int
xor
cmpsl
dec
inc
out
pop
mov
mov
arpl
sbb
in
fnstcw
sbb
shll
shrb
nop
pop
mov
cwtl
into
adc
adc
ret
adc
xor
sahf
in
push
arpl
fdivs
andb
pop
test
dec
jns
jns
fdivr
je
fwait
popf
cmp
clc
jno
or
jl
js
rol
lods
mov
nop
cmp
sub
stos
fldenv
adc
movhps
scas
push
into
sub
mov
add
mov
adc
or
pop
xor
pop
push
jb
lds
clc
cli
out
mov
mov
pop
inc
and
gs
push
hlt
push
adc
xchg
lods
in
mov
sbb
mov
lods
mov
in
leave
add
mov
sbb
and
mov
inc
dec
add
cmpsl
inc
dec
or
lods
lods
fwait
data16
mov
jl
and
imul
sbb
xchg
xor
cmpsl
lea
dec
inc
push
push
push
jg
and
int
or
mov
pusha
mov
jo
pop
xchg
mov
adc
sub
sbb
cmp
mov
mov
pop
and
les
jecxz
sbb
loope
lret
xchg
data16
add
adc
sub
xchg
movsb
popf
in
or
adc
add
cmp
jno
mulb
mov
adc
aad
fbstp
jp
mov
mov
jmp
test
inc
clc
and
sbb
test
xchg
fs
inc
shlb
adc
push
and
xchg
mov
cwtl
std
inc
and
adc
inc
sarb
test
mov
lret
and
imul
insl
loope
pusha
stos
mov
inc
or
and
adcl
add
in
fisubl
push
fldt
adc
decl
push
fs
sub
fs
int3
sti
mov
lret
jb
lds
insl
in
jb
test
jo
cld
sub
push
xchg
cld
sbb
xor
cmp
push
pop
mov
cmp
imul
rolb
bound
adc
shl
in
adc
push
push
lahf
lcall
scas
dec
sub
idivl
lret
cmpsb
push
scas
cwtl
pop
ja
xorb
pop
sti
xor
mov
daa
stos
repnz
xchg
jge
andb
cwtl
push
push
cmp
inc
ret
mov
gs
stc
aam
sbbb
mov
push
out
mov
pop
pop
rol
add
mov
add
dec
aam
int3
cmp
mov
loop
pop
jg
stc
popa
push
icebp
mov
and
cmp
cli
and
jecxz
pushl
or
xor
cmc
mov
lret
add
xor
fstl
pop
mov
cmp
push
inc
jp
mov
mov
dec
xchg
xor
push
cld
sbb
add
mov
sti
stos
fcmovnu
add
jp
mov
push
inc
imul
repz
xor
xor
test
or
add
add
jmp
mov
insl
pop
add
and
int
jbe
ror
cli
pop
pop
orl
sbb
xchg
repz
lods
sub
pop
enter
cli
orb
sbb
cmpsl
data16
sbb
inc
jecxz
cmp
sub
mov
and
sub
inc
mov
pop
pop
jge
jmp
cwtl
push
movb
mov
dec
in
leave
or
div
jne
inc
add
loope
cmp
ljmp
sub
push
push
push
jbe
push
fsubs
mov
mov
int
orb
negb
inc
stc
rcll
ror
rclb
movsl
and
mov
pop
inc
ret
addl
popa
cmc
mov
mov
sub
lock
pop
lret
inc
inc
lcall
pop
add
xlat
push
jae
fstpl
cmp
es
and
ljmp
mov
sub
pusha
sub
jne
mov
pop
scas
popl
inc
sbbl
inc
mov
sbb
lahf
sbb
fnstenv
mov
jp
inc
mov
test
and
outsb
les
jle
inc
es
incb
pusha
mov
dec
out
leave
enter
jno
rcr
stos
mov
out
outsb
jmp
jle
test
pop
cmpsl
sub
or
cli
lock
jge
in
xor
arpl
sbb
inc
xchg
negb
mov
push
shlb
xlat
dec
pop
rcrl
dec
inc
loopne
enter
insb
call
sub
xor
es
scas
roll
xor
jp
adc
or
les
add
fists
adc
outsl
pop
fld
dec
mov
dec
sbb
adc
mov
es
mov
rolb
or
mov
xchg
mov
fisubrs
and
jg
icebp
xor
dec
push
shll
stc
loopne
into
mov
dec
in
jns
out
icebp
repnz
push
dec
leave
sbb
mull
out
mov
cli
mov
xlat
test
bound
popa
push
ret
xor
push
pushf
subl
subl
pop
dec
test
call
pop
mov
xchg
jbe
stos
cmpsl
jecxz
imul
fsts
adc
dec
insl
stos
in
cmp
fucomp
testb
push
mov
test
ljmp
mov
clc
lds
or
inc
mov
out
mov
cltd
adc
fldt
je
add
cmp
sbb
pop
xchg
pushf
lds
cmp
in
sbb
arpl
sarl
jg
pop
sarb
xchg
fcoml
clc
and
push
int
fwait
idivl
xchg
mov
loope
jmp
fbstp
fsubrl
arpl
into
xchg
sbb
adc
movsb
fsubrl
cmp
and
adc
inc
test
mov
push
mov
out
fldenv
mov
call
ret
jo
in
sub
int
mov
mov
and
add
stos
sbb
mov
inc
je
inc
popa
andl
mov
cmp
mov
sbb
rorb
pop
out
jns
loope
aad
xchg
fwait
inc
fistpl
insb
in
aas
xchg
jp
jo
xchg
xor
fld
fnstcw
mov
and
sub
js
incl
xchg
jne
fnstsw
loop
and
fisubl
rclb
data16
scas
pop
sub
in
adc
mov
popf
ja
out
and
mov
inc
das
sub
out
jmp
into
pop
into
push
ss
lea
add
cmpsb
xor
push
sub
add
adc
push
adc
xchg
push
cmpsl
into
mov
pusha
orb
stc
lds
xlat
mov
mov
sbb
test
mov
dec
cld
in
mov
call
xor
lock
or
push
mov
nop
mov
fs
inc
xchg
inc
call
mov
aas
adc
aaa
dec
xlat
lea
or
xchg
xorb
mov
or
dec
inc
add
js
ret
inc
mov
ss
sbb
mov
dec
mov
iret
stc
iret
fmuls
daa
arpl
pop
add
leave
and
sbb
jl
popf
jmp
out
jle
push
addr16
and
jecxz
mov
mov
mov
call
sub
ret
pop
jp
add
cmp
jp
jns
bound
push
arpl
cli
jg
movsl
add
mov
jns
sahf
mov
mov
imul
outsb
mov
cmp
cmp
rcl
fwait
jbe
scas
ds
mov
jns
push
pusha
mov
dec
ret
pmullw
repnz
mov
daa
pop
loope
push
mov
clc
mov
adc
adc
xchg
mov
dec
or
repnz
lock
sbb
pop
cmp
gs
pcmpgtd
add
push
sbb
dec
fldcw
adc
push
imul
inc
test
loopne
in
std
jb
fwait
push
aad
lds
adc
mov
dec
xchg
call
adc
dec
lea
jecxz
dec
sbb
mov
mov
or
push
sub
adc
sahf
jmp
cmpb
and
aad
push
fidivrs
loopne
mov
scas
sbb
jbe
mov
sub
rcrb
hlt
mov
xor
movsl
ljmp
repnz
push
test
jne
lock
xor
daa
mov
or
das
sahf
dec
push
jne
outsb
cmp
sbb
mov
aas
fcoml
ret
push
cs
lock
dec
mov
ljmp
adc
push
inc
mov
push
push
mov
fists
xchg
inc
std
lock
and
pop
cwtl
inc
inc
xor
jecxz
imul
insb
xchg
scas
fs
inc
mov
lcall
ja
inc
lods
mov
mov
push
int
add
lds
xchg
jp
ds
xor
stc
inc
pop
adc
enter
adc
inc
es
adc
out
std
mov
arpl
loope
jns
nop
test
xchg
xchg
roll
out
xor
hlt
or
pop
cwtl
mov
sub
jo
pop
jns
xlat
jae
test
scas
sbb
push
jmp
xchg
jmp
pop
add
int3
sbb
mov
sub
call
ss
rolb
cmpsb
xor
sahf
insl
add
mov
pop
movsl
push
cmp
mov
aam
dec
jbe
les
pop
or
push
outsl
add
mov
lcall
adc
xor
fildl
mov
add
mov
push
aaa
std
mov
imul
dec
mov
stos
out
xor
ret
xor
push
pop
mov
sbbb
push
ret
stos
xor
test
xlat
out
jmp
jae
stos
push
sbb
xor
fucomp
pusha
sahf
clc
mov
dec
popa
dec
pop
iret
dec
cmpsb
push
call
and
dec
sti
imul
pop
insb
pushf
inc
pop
push
xor
call
in
int3
mov
sub
outsb
push
outsl
push
adc
test
jns
pop
sub
into
std
xor
or
stc
xchg
push
in
stos
ficoml
or
rclb
pushf
xor
push
pop
daa
orb
fsubrs
dec
xor
not
mov
out
push
iret
jb
enter
je
adc
fwait
out
popa
mov
jp
mov
jbe
lahf
es
push
out
shrb
das
mov
lock
ret
out
test
dec
pop
jmp
push
xchg
dec
lret
shr
xor
out
lahf
and
stc
popa
mov
cld
sub
jns
addr16
nop
loope
jne
sbb
divb
push
mov
pop
dec
out
out
jno
pop
inc
add
hlt
mov
std
fs
cltd
adc
in
imul
xchg
mov
insl
loop
test
and
xchg
dec
popf
jmp
in
popf
rcrl
fchs
adcb
clc
xor
pop
pusha
ficoms
dec
cmp
test
leave
ljmp
movsl
mov
lods
pop
adc
mov
xchg
cmc
mov
lea
inc
sub
xchg
in
mov
xchg
out
pop
sbb
jno
test
mov
arpl
lcall
mov
es
jg
adc
std
nop
xchg
mov
sub
mov
arpl
imul
out
into
addl
sub
dec
fsubrl
inc
cli
loop
in
movsb
enter
mov
cld
sub
test
mov
iret
add
pop
sahf
mov
xchg
sub
and
and
dec
fidivs
push
sub
loop
fiaddl
lods
fchs
pusha
mov
stos
int
adc
fldcw
cmp
jb
adc
loop
pop
sti
ds
sub
aas
mov
sbb
test
ret
dec
scas
jle
xchg
shlb
ja
mov
push
or
rol
sub
sbb
push
fistps
out
repnz
mov
or
repnz
sub
cmpsb
hlt
jns
add
or
cmpsl
daa
dec
push
ret
repnz
sahf
or
mov
test
ss
in
inc
fimull
setno
ljmp
mov
inc
add
mov
xor
shl
pop
scas
out
push
mov
add
icebp
outsb
xchg
xchg
pop
jle
pushl
mov
shll
dec
insl
or
nopl
pushf
loop
outsl
cmp
mov
adc
add
dec
jno
filds
inc
ret
fwait
shr
mov
jle
into
mov
mov
dec
cmp
rol
in
cwtl
add
mov
cs
pusha
inc
sbb
sbbl
insl
jecxz
sbb
pop
sti
push
hlt
call
sub
lods
push
pop
dec
sbb
and
loope
into
cmc
cld
mov
xchg
loopne
add
int3
xchg
xchg
push
insb
popf
hlt
jne
sti
mov
pop
mul
aam
enter
xor
cmpl
push
pop
jno
ror
jo
inc
test
arpl
xor
outsb
pop
repz
inc
mov
xor
stos
cmp
jbe
movsb
out
in
mov
xor
push
insb
aam
sbb
imulb
es
and
iret
and
stos
or
and
adc
jae
icebp
mov
iret
cs
icebp
mov
xchg
jno
ficoml
sub
dec
enter
mov
jg
in
xor
sbb
pop
je
mov
scas
xchg
xchg
mov
fidivs
icebp
mov
subb
dec
gs
xchg
repz
cmp
nop
xchg
jl
inc
xor
out
mov
add
aad
inc
jae
mov
call
cmp
aaa
repz
inc
xchg
sbb
ja
movsl
inc
popa
and
je
push
dec
imul
jmp
idivb
pop
inc
pushf
in
out
jg
mov
sub
pop
mov
sub
mov
mov
jg
in
pop
test
jge
ljmp
mov
cltd
push
xchg
movsl
adc
lods
xor
es
push
les
jmp
push
xor
sub
je
js
sbb
push
outsb
leave
aaa
pushf
or
js
fmull
std
adc
outsb
loopne
jmpw
lret
mov
rclb
fsubrl
push
xor
popf
mov
movsb
inc
and
jg
xor
mov
test
dec
inc
dec
push
jmp
dec
xor
or
pop
out
mov
xor
clc
mov
cwtl
mov
testl
adc
mov
mov
or
dec
jae
mov
push
jecxz
or
into
pop
dec
fsubl
dec
rolb
lock
cmp
pushw
mov
rcr
cmpsl
jns
xor
int
movsl
or
adc
repnz
xor
pop
outsb
iret
cwtl
add
adc
cli
mov
push
cmpsl
fidivs
cmp
int
ljmp
fdivrs
xchg
out
jnp
filds
sahf
sub
and
stos
xor
out
imul
fucomi
push
push
mov
cmpb
sbb
outsl
cs
into
pop
dec
pop
clc
cmp
sbb
mov
idivb
inc
pushf
lret
and
xor
pop
neg
inc
idivb
xor
mov
sbb
subl
pop
ss
mov
sti
aam
repnz
sub
cli
mov
jbe
cmp
in
xor
iret
lods
sahf
cmp
pcmpgtw
popf
lahf
add
aad
mov
cmc
jns
lock
movsw
pop
in
push
cmovle
mov
add
iret
roll
push
mov
sbb
mov
aam
fidivrl
mov
pop
imul
adc
cmp
and
out
stos
or
or
mov
les
mov
pop
mov
push
packsswb
in
push
adc
xor
ss
xor
adcb
mov
or
adc
adc
or
jle
sub
push
xchg
lret
inc
add
fdivr
or
cltd
mov
and
rcr
mov
insb
xor
xchg
inc
ret
mov
outsl
fimull
and
loope
repz
jae
dec
xor
aaa
and
xchg
dec
cmc
mov
push
pop
sbb
mov
jecxz
xchg
xchg
shlb
add
lods
or
les
lcall
or
pop
or
mov
fcomp
jmp
cmpsl
inc
imul
fstl
jbe
adc
jns
popf
outsl
push
sub
insl
inc
jo
into
and
fldl
ret
mov
or
xchg
lret
repz
dec
cmp
cwtl
test
out
or
fdivrs
adc
sub
sub
int
cs
jge
nop
adc
or
cmp
mov
cli
test
push
pop
xchg
jmp
jno
sbb
retw
arpl
add
cmp
fidivrs
pushf
shlb
xor
xchg
push
xor
cmp
lods
fisubrl
into
dec
pop
xchg
lcall
adc
xchg
xor
stos
sub
cld
push
std
jg
mov
addr16
mov
jne
aas
jge
jmp
scas
out
mov
ljmp
cmp
adc
into
jae
test
mov
mov
jne
mov
jg
in
scas
fistl
cmp
shll
jp
pop
aaa
cmpsl
scas
inc
fildll
dec
aad
fwait
cmpsl
mov
daa
imul
scas
cmp
stc
bound
das
in
and
std
movsl
lods
psubb
fldcw
es
repz
scas
sub
clc
dec
loop
push
out
aam
out
ret
fnstenv
ficoms
cbtw
xchg
mov
inc
gs
xor
mov
jp
imul
jb
nop
fwait
mov
pop
jae
ret
sar
mov
sbb
xchg
repnz
push
dec
scas
mov
aad
cmp
gs
scas
sub
add
push
jae
push
xchg
icebp
cwtl
jp
popf
push
xchg
push
in
inc
adc
push
leave
mov
add
add
sub
inc
mov
adcb
mov
sti
dec
cmpsb
rclb
jne
hlt
or
mov
xchg
cltd
jmp
push
cmp
outsl
flds
fwait
repnz
jne
inc
rcll
cmpsb
or
inc
icebp
outsb
fsincos
sbb
mov
lds
add
cmp
call
pop
sub
inc
dec
or
or
inc
sub
jnp
add
shrb
scas
stos
out
and
mov
sbb
mov
and
fcom
inc
mov
stos
cmp
mov
es
test
mov
inc
jb
push
repz
push
fcomip
cmp
jg
or
hlt
ljmp
push
mov
xor
jmp
and
sbb
xor
les
stc
pusha
xor
add
enter
roll
mov
push
iret
movsb
pop
jp
dec
fsubl
or
dec
cmp
jns
xor
adc
lods
dec
push
add
inc
shll
hlt
sbb
sti
ret
cld
jno
scas
dec
push
xor
lods
push
cmpsl
adc
dec
push
subb
xlat
sub
adc
jl
xchg
inc
lock
pop
outsl
cmpl
adc
test
shlb
aas
repz
xchg
push
cwtl
mov
pop
cmp
pusha
packsswb
adc
ret
roll
stos
ret
loopne
lret
dec
in
fstl
sbb
sbb
dec
and
or
int
jle
inc
jge
lods
add
nop
lahf
adc
cs
cwtl
pop
test
cltd
ja
testl
jbe
inc
out
pusha
lods
mov
jbe
xchg
mov
mov
sub
or
xor
insb
xor
jbe
ret
or
decl
pushf
sub
mov
xor
out
xchg
dec
sub
sub
lret
inc
iret
rcrb
pop
adc
sub
test
pusha
test
aam
subl
sub
mov
dec
add
inc
dec
or
out
and
sbb
lahf
mov
sub
sub
push
push
jb
jmp
enter
mov
sahf
cmp
es
dec
lods
aaa
sub
sbb
aas
xchg
or
cmp
mov
xor
push
scas
clc
lahf
hlt
and
cmp
sbb
dec
mov
mov
aas
andb
xor
fsubrs
jg
push
ds
enter
pop
inc
sub
adc
icebp
loop
fidivs
loop
dec
cmp
push
popf
inc
xor
dec
mov
or
pop
inc
icebp
push
xor
test
loope
jge
test
popa
cli
xor
pop
insb
jmp
test
add
push
cmc
leave
xchg
in
push
mov
adc
ja
dec
pop
js
std
das
arpl
jb
cltd
push
rcll
inc
fs
or
iret
ret
clc
cmc
imul
ja
xchg
xor
dec
push
sub
pop
hlt
jo
ret
shrl
pop
sahf
loope
jp
shrl
divl
jg
jae
adc
jae
push
loopne
aad
push
adc
out
outsb
cwtl
lahf
mov
aam
leave
cmpsl
out
pop
popa
mov
xor
pop
mov
fsubp
push
adc
pop
pop
pop
setl
pop
ret
call
fwait
lods
loop
js
ret
aad
sub
xor
ds
pop
out
iret
roll
push
ror
cs
imul
shl
sqrtps
shrl
or
rclb
and
cmp
push
dec
enter
push
fbstp
leave
mov
xchg
test
lret
xchg
sbb
mov
cmp
mov
jns
push
xchg
sbb
push
xlat
call
mov
sub
mov
stos
or
add
and
stos
mov
xchg
xchg
adc
dec
add
inc
adc
cmpsl
cmc
sub
and
cmp
jg
xlat
test
add
and
mov
testb
sti
outsb
rcrb
enter
int
fstl
outsl
mov
mov
movsl
cmp
and
shlb
sarl
sbb
movsl
rcrb
stos
pop
inc
pop
lcall
add
jl
lret
pop
sbb
dec
repz
push
xor
les
fiaddl
push
fsubl
adc
jge
ret
push
into
popf
inc
xor
ret
xor
in
add
inc
sub
pop
pop
xor
jp
adc
mov
les
sbb
push
rcrl
shlb
adc
dec
out
mov
es
or
and
mov
lcall
mov
loop
fs
lret
xor
shll
xchg
out
mov
jo
arpl
push
xchg
or
jge
mov
jbe
iret
or
pop
pop
rorb
xor
push
push
jo
mov
mov
adc
add
pop
xor
stos
divl
loopne
mov
pop
in
sbb
xchg
mov
pop
je
cwtl
dec
pop
push
dec
aam
adc
or
ret
shll
fstps
nop
push
xlat
add
nop
sub
mov
mov
push
jo
jno
int3
scas
out
test
sahf
mov
mov
pop
testb
dec
mov
jns
orb
dec
sti
iret
cs
mov
sbb
lods
imul
sahf
push
pop
mov
fnstcw
cld
sub
loope
sbb
incl
insb
movsl
push
fisubrs
push
sub
jns
mov
shll
fsubrl
cld
pop
js
xchg
inc
xor
mov
roll
icebp
mov
lea
xchg
out
sbb
mov
lcall
ljmp
push
adcl
mov
or
dec
mov
mov
cli
shlb
in
cli
daa
push
daa
rorb
into
jp
cmp
dec
leave
dec
add
in
and
pop
mov
cld
out
inc
and
sbb
cld
cmp
xchg
je
icebp
sbb
push
xor
lret
push
in
or
adc
insl
xlat
jo
sbb
pop
into
add
jmp
add
test
in
lds
push
xchg
icebp
mov
dec
push
inc
inc
inc
mov
ljmp
dec
jmp
mov
mov
mov
shl
pop
add
hlt
dec
sbb
add
enter
sub
clc
sub
or
test
mov
repnz
pop
jbe
adc
adc
in
add
jg
cmpsl
mov
cltd
mov
int
push
mov
ja
dec
test
cmp
cld
xchg
inc
or
mov
dec
fs
pop
and
mov
mov
cltd
lahf
cmp
xchg
jmp
push
lock
xchg
mov
xchg
sub
sbb
mov
ds
jle
jne
xor
pop
imul
xchg
iret
adc
xor
xor
and
ret
mov
xor
add
insl
movl
iret
mov
sbb
xchg
in
cltd
mov
cmp
jb
lea
lret
mov
mov
aas
xchg
rcll
cmp
js
jge
in
xchg
mov
stos
fs
es
dec
jecxz
call
mov
sub
addr16
arpl
jl
loop
cmp
pop
adc
ja
incl
jle
push
fists
xchg
inc
in
aad
cli
fwait
pop
das
cmp
ret
jnp
mov
clc
rolb
popa
inc
addl
push
in
lods
add
ljmp
imul
in
jge
cmp
ss
jl
lret
gs
mov
push
rclb
pop
imul
pop
sbb
mov
adc
sub
xchg
mov
rclb
sub
xchg
mov
cmp
mov
pop
repnz
mov
or
pushf
roll
mov
mov
xorl
xchg
mov
rorl
and
pop
aaa
or
mov
test
adc
push
add
pusha
test
or
cmp
dec
inc
aaa
outsb
cmp
adc
test
sub
fdiv
rcrl
fxch
fwait
test
es
jl
mov
xchg
inc
inc
pop
xchg
and
sbbl
out
mov
dec
dec
fs
rcrl
add
mov
sarb
adc
pop
rcll
mov
leave
add
sbb
push
jno
movsl
outsb
pop
sbbl
inc
push
in
jno
push
je
stc
lahf
call
mov
dec
mov
aaa
mov
xor
loopne
ret
in
mov
cli
in
xchg
and
dec
mov
sbb
in
imul
in
push
enter
leave
jnp
js
cmp
sub
jp
cs
sarb
mov
mov
loope
cmp
cli
mov
add
sbb
punpcklbw
test
xchg
or
mov
add
addr16
inc
xchg
sub
fs
shll
push
and
repz
mov
outsl
sti
icebp
sub
cs
xor
pop
lahf
pop
add
jle,pt
int
jnp
daa
sbb
scas
cmp
orl
inc
fcoml
inc
orb
in
das
push
jbe
sub
leave
push
out
cmpsb
inc
mov
loop
movsb
jb
les
popf
ret
outsb
adc
sub
enter
xchg
mov
jecxz
xchg
lods
lds
arpl
add
lahf
xchg
arpl
nop
test
xchg
addr16
out
ljmp
ret
jmp
push
mov
cmp
dec
jbe
push
sar
test
adc
outsb
sub
jp
std
mov
or
mov
arpl
dec
arpl
xlat
jg
popf
push
pop
xchg
in
out
rclb
dec
fcmove
mov
rorb
testb
xor
cmpsl
push
push
push
jae
and
lahf
or
cwtl
xchg
jae
mov
std
popa
out
rcrl
or
or
sbb
mov
inc
iret
das
orl
icebp
sub
and
xchg
mov
lahf
cli
out
inc
sub
negb
cwtl
fdivrs
jg
roll
jg
or
dec
push
in
shl
push
mov
mov
add
das
push
mov
pop
out
add
int
lahf
sbb
je
dec
pop
pusha
lahf
insl
cs
xor
pop
outsl
xchg
cwtl
ret
adc
inc
sub
pop
xacquire
add
inc
mov
mov
movsb
cmp
addl
adc
ljmp
xchg
cmp
mov
iret
aad
rorl
add
push
test
ds
outsl
incl
mov
repnz
mov
int3
lods
inc
loop
xchg
xor
data16
and
or
sub
fnstcw
negb
out
sub
test
mov
add
cmc
pop
lods
hlt
or
out
sbb
and
mov
fs
mov
jnp
or
lods
mov
fnstsw
ret
add
imul
jae
scas
pop
sbb
or
addb
xor
mov
add
out
cmc
cmp
mov
jns
loopne
cmp
aad
test
dec
adc
push
or
out
add
mov
in
addr16
pop
cwtl
rcr
add
mov
push
xor
or
incl
jb
xorl
jnp
sbb
jb
mov
push
std
lret
fwait
loop
loop
arpl
xchg
jbe
pop
xchg
add
push
pop
cwtl
xchg
jns
imul
or
incb
adc
in
hlt
hlt
in
inc
stos
cmpb
enter
lods
test
sub
sub
sub
mov
mov
gs
imul
cmp
xchg
push
mov
adc
xor
mov
jne
fiadds
outsl
inc
insb
mov
sarl
aaa
inc
ret
insl
into
add
sbbb
call
enter
cmp
sbb
xor
stos
out
push
sbb
or
movb
pop
jnp
sub
add
mov
popf
mov
or
dec
dec
dec
in
rcr
mov
loop
cmp
movsb
and
mov
mov
push
dec
shl
enter
mov
jle
test
rorb
imul
call
mov
hlt
mov
pusha
sub
push
setae
pop
cmp
pop
fnsave
in
xor
sbbb
dec
xchg
imul
add
lods
jecxz
pop
fincstp
std
pop
fs
add
jg
sbb
inc
lock
mov
cmpsl
into
jp
pop
push
adc
mov
cs
sbb
xchg
enter
sbb
jbe
cmp
xor
stos
fdivrl
or
mov
sbb
pop
lret
jge
cli
mov
jo
jne
lock
test
mov
lret
dec
jmp
or
fwait
xchg
cs
xor
out
jno
int
dec
ret
push
testb
cwtl
jb
outsb
pop
testl
inc
adc
mov
in
in
and
dec
push
pushf
fimull
add
or
pop
pop
jmp
push
adc
mov
fisttpll
lods
adc
mov
lret
sub
test
lods
push
lcall
lds
cmc
cld
pop
jbe
and
rcrl
outsl
jns
or
ret
xchg
mov
or
inc
mov
sbb
mov
jae
add
mov
mov
insl
rcrl
into
int
in
fs
inc
and
push
push
mov
cmpsl
js
mov
dec
shrb
mov
popf
cmc
dec
jl
inc
sbb
les
leave
inc
mov
sbb
ficoml
jmp
or
sti
mov
popa
adc
sarl
mov
leave
test
in
mov
nop
aad
arpl
aaa
or
inc
cltd
shlb
xor
mov
in
jge
jg
mov
stos
xor
push
cmp
je
filds
dec
mov
lds
movsl
cmpsb
jmp
das
faddp
aaa
ljmp
fs
movsl
add
lret
test
sub
mov
xor
subb
push
hlt
cmp
roll
jne
or
sbb
add
adc
aad
ja
inc
sbb
into
daa
sbb
stos
push
arpl
mov
dec
mov
repz
inc
dec
scas
sbb
std
push
add
mov
shl
pop
andb
out
mov
and
pop
leave
mov
and
adc
out
pop
xchg
in
sbb
jmp
pop
pusha
sbb
lods
in
adc
movsb
into
mov
lea
fldcw
mov
mov
and
add
aas
sbb
cmpl
mov
je
sub
sarb
push
or
cs
and
mov
pop
inc
or
fdivp
sahf
jo
cmpsb
mov
push
mov
ja
add
leave
jnp
jmp
mov
outsb
dec
loopne
aam
cmp
sarb
mov
jbe
jmp
mov
aam
rclb
sahf
cmpb
or
mov
addr16
das
mov
inc
lods
mov
push
jg
or
cmp
loopne
arpl
sbb
cmp
fidivl
xchg
call
xchg
dec
test
daa
pushl
cmp
lahf
pop
sahf
js
out
test
push
push
dec
add
push
and
inc
aad
test
shl
enter
jl
xchg
add
fcoms
push
xor
js
jbe
or
mov
cmp
loop
jbe
cld
and
pop
outsl
je
pushf
pop
sahf
repz
and
mov
add
push
inc
lea
ljmp
lret
sub
add
push
sub
push
xor
xchg
add
mov
scas
pop
adc
lea
xchg
adc
shrb
and
mov
or
adc
cltd
and
inc
std
in
loop
pop
pop
lds
cmpsl
dec
movsb
or
push
out
sarl
pop
stc
inc
jo
lods
imul
dec
rorb
mov
frstor
xchg
sbb
jmp
mov
pop
adc
mov
add
dec
sbb
cmp
jl
lds
scas
dec
das
outsb
aaa
daa
out
mov
dec
push
xor
dec
xchg
or
imul
fdivs
bound
stos
add
xor
cmp
test
sbb
sub
int
fcomip
inc
testl
das
rolb
push
add
sbb
jp
int3
mov
popf
aad
dec
incl
lcall
hlt
outsl
cmp
xchg
pop
dec
mov
xchg
xlat
enter
jne
xchg
loope
cwtl
inc
jns
add
add
fimuls
ds
fwait
add
or
nop
mov
push
ja
jmp
xchg
movsl
cltd
push
imul
push
xchg
sub
push
adc
cmc
inc
and
inc
mov
mov
enter
test
sub
out
stc
in
and
mov
mov
loop
sub
icebp
sub
push
nop
popa
jp
out
and
aaa
dec
subl
jg
scas
lcall
inc
pushf
gs
dec
fdivrp
xor
jmp
loopne
lcall
cwtl
jp
or
mov
popf
xor
inc
push
jae
and
xchg
out
cwtl
dec
mov
or
dec
mov
adc
pop
insb
test
popf
jecxz
shlb
ficompl
lahf
or
cmp
stc
push
frstor
inc
pop
ja
jp
ljmp
pop
inc
stos
push
gs
jge
dec
inc
dec
faddl
pop
xchg
inc
shll
es
mov
inc
shll
mov
js
popa
pop
fldenv
mov
data16
cmp
scas
fcmovne
add
or
push
inc
push
sub
pop
rcrl
pop
hlt
fbstp
jp
mov
mov
mov
out
aam
pusha
int
pop
xchg
pushf
push
lods
and
iret
pop
std
rorl
outsl
loope
clc
sti
xchg
pop
mov
cmp
inc
fstp
pop
hlt
hlt
sub
pop
add
in
loopw
fwait
jns
mov
or
push
std
add
cmp
lods
shrb
push
mov
mov
mov
sarl
bound
inc
jnp
loop
in
rolb
popa
mov
js
mov
aam
lahf
lea
xor
jno
and
sbb
mov
loopne
xchg
loope
mov
popf
dec
gs
stc
or
shl
lea
mov
jle
mov
outsl
push
mov
pop
cmp
xor
xchg
aaa
fs
ja
mov
and
in
outsl
push
mov
iret
dec
dec
je
dec
sbb
out
xlat
cs
and
incl
cmpsb
fstps
daa
dec
xchg
xchg
icebp
xlat
ret
pop
cmc
dec
add
sub
fucom
cmpsb
sbb
cmpl
adc
hlt
insb
add
jae
ljmp
out
out
dec
or
push
inc
addr16
dec
adc
cmc
lahf
and
mov
roll
imul
cmp
cmp
jo
push
xchg
push
pop
icebp
into
stc
out
adc
jbe
icebp
mov
inc
lock
sub
adc
outsl
xchg
aad
and
dec
inc
jne
popf
push
loop
mov
je
int3
test
das
fadds
mov
adc
and
and
and
xchg
mov
dec
cmp
test
push
adc
push
fs
xchg
fnstenv
repz
es
sbb
jns
std
mov
cmp
jp
out
lea
push
in
fcmovb
cld
inc
inc
adc
js
xchg
cmp
std
jbe
pusha
roll
addr16
xor
enter
popa
xchg
mov
cmp
scas
out
mulb
jmp
sbb
std
shrl
jno
icebp
lock
imul
ja
movsb
clc
pop
loopne
adc
cmp
dec
imul
mov
lret
add
into
add
xchg
sub
push
or
cmp
jmp
cmc
pusha
dec
mulps
nop
into
xchg
nop
into
imul
shll
mov
cli
call
cli
xchg
mov
test
in
adc
ret
sahf
xor
lret
cmp
aas
inc
cs
push
mov
fsubp
ret
jg
and
mov
loope
call
mov
mov
cmpsl
sub
add
inc
int
and
xor
dec
stc
scas
in
lea
cmpsb
fs
mov
fimull
mov
cwtl
xor
js
mov
inc
xor
lods
mov
mov
xchg
test
lcall
cli
jne
or
aas
int
cmp
xchg
push
mov
aas
inc
dec
roll
pop
lret
mov
std
pop
test
or
fs
into
fmul
add
ljmp
jmp
lahf
pop
mov
notl
push
aas
loopne
sub
mov
sahf
aas
pushf
fsubr
push
push
xor
cli
pusha
cld
mov
mov
loop
aas
lahf
addb
out
out
pop
pop
cwtl
fidivrs
adc
cmp
inc
arpl
cmc
ret
leave
daa
push
sbb
fdivrp
out
jg
ss
xor
dec
fwait
xor
outsb
lret
mov
push
xchg
pop
add
and
pop
lea
cwtl
jecxz
adc
lock
scas
sub
repnz
adc
lock
fucomp
aam
mov
add
adc
xor
out
mov
sbb
iret
jg
inc
sbbb
pop
cmp
into
insb
das
inc
and
sub
lods
fcom
or
fistpll
xchg
arpl
inc
shl
ds
dec
or
and
push
push
adc
inc
xor
bnd
fwait
push
icebp
jmp
push
inc
cmc
dec
sub
out
into
pop
je
adc
fabs
incb
das
pop
sbb
ljmp
ja
stc
rolb
push
jp
xorl
dec
stos
cmc
sub
leave
into
mov
xchg
shrl
xor
mov
shll
je
mov
sub
outsb
xor
mov
nop
sbb
push
add
pop
ffree
jle
repz
and
push
sti
insl
cltd
xor
scas
subb
push
xchg
neg
loope
or
add
xchg
cld
or
push
std
int3
shr
daa
xor
inc
push
pop
or
and
mov
call
popf
roll
sbb
enter
fadds
hlt
in
pop
into
rcll
push
sub
mov
pop
in
dec
in
inc
ficoml
adc
imul
hlt
cld
mov
das
adc
lock
jb
xchg
cmp
hlt
jne
pushf
lret
push
and
mov
sbb
cmp
mov
outsl
scas
inc
sub
ret
aaa
inc
dec
cmpsl
daa
testl
test
and
jl
scas
inc
inc
mov
jecxz
shrb
dec
imul
sti
mov
xchg
jl
dec
scas
mov
ljmp
mov
dec
fdiv
lds
dec
ficoml
xor
inc
mov
push
mov
or
pop
jmp
pop
test
cltd
add
pushf
adc
ljmp
movsb
stos
push
fs
sbb
fsub
hlt
mov
dec
cmp
cmp
sbb
push
iret
fs
inc
sbb
lahf
push
mov
movsb
lea
push
push
shrl
lcall
fisubl
cli
xchg
sub
fwait
push
test
int
mov
jle
pop
and
adc
jecxz
or
les
movsb
iret
xorb
test
push
dec
jne
xor
mov
cs
lea
mov
add
leave
sub
jbe
sbb
and
xchg
inc
xlat
pop
or
add
or
and
dec
loopne
cmp
mov
call
add
xor
jge
jae
push
aaa
jns
in
adc
inc
insb
shlb
aam
bound
repnz
arpl
jb
and
outsl
pop
call
xchg
sbb
popa
jmp
dec
sbb
cmpsb
sbb
mov
add
cmp
push
adc
or
ljmp
sbb
push
pop
xor
xor
loopne
or
jb
dec
mov
jne
cli
imul
pop
addl
dec
inc
cwtl
jecxz
test
inc
mov
sub
loop
jne
gs
das
inc
jg
mov
pop
stos
fdivs
cmc
mov
imul
ja
ret
xor
sub
xor
mov
mov
jle
and
mov
sbb
loope
push
xchg
sub
jb
sub
pop
cli
mov
mov
movsb
push
fisubs
shrb
mov
or
test
mov
pushf
loope
jmp
call
gs
rclb
dec
cmpsl
pop
and
daa
mov
xchg
loop
out
les
loopne
mov
stos
mov
pop
loop
push
addr16
mov
jge
pop
and
lds
das
adc
test
cli
cmpsl
xor
jae
int3
decl
push
jmp
stos
out
dec
jp
inc
cmp
rorl
lds
xor
or
sub
cmp
and
xchg
inc
test
ss
push
dec
mov
xchg
mov
in
mov
cld
hlt
pop
inc
andl
fld
or
jae
imul
cmpsl
push
jecxz
iret
jle
movsb
mov
or
fcoml
sbb
inc
pop
push
jbe
dec
xchg
jecxz
hlt
add
stc
or
add
pop
ret
xchg
sahf
or
mov
mov
imul
adc
mov
cli
xor
xchg
mov
sbb
rclb
shrb
or
test
mov
iret
mov
int3
cmpsl
fsubl
xchg
pop
mov
adc
mov
mov
mov
dec
add
inc
dec
adc
push
jmp
mov
mov
mov
jne
repnz
adc
xlat
imul
fldenv
leave
cli
icebp
hlt
pop
es
mov
xor
cmp
push
mov
ljmp
mov
fs
mov
mov
ss
mov
repz
test
repnz
cmp
jge
xchg
cltd
jne
mov
mov
push
loopne
or
insb
and
xor
fldl
inc
ficoms
xchg
jne
mov
jp
es
add
and
decl
fs
pop
out
push
sbb
pop
mov
fnsave
xor
les
and
push
pop
sahf
push
loopne
jbe
xchg
imul
pop
sub
mov
stc
cmp
jle
enter
or
scas
bound
les
mov
xor
xchg
das
pop
adc
xor
pop
icebp
ret
mov
xchg
mov
pop
mov
out
sub
mov
sub
mov
mov
test
call
in
cmp
xchg
aam
lcall
cwtl
add
fstpt
lock
mov
ja
inc
pop
test
aas
pop
fdivl
lcall
inc
lcall
xchg
inc
pusha
movsl
in
shll
lods
xor
mov
in
and
cmp
or
mov
xchg
lea
in
jg
pusha
pop
sub
addl
leave
popa
rcl
mov
jno
dec
pop
ret
lcall
cwtl
pop
xchg
and
jmp
sbb
out
adc
jmp
adc
cmp
ja
xchg
or
dec
jne
mov
jns
pop
mov
stc
jae
add
pop
es
cmp
movb
call
cli
repnz
pop
sbb
popl
fwait
cmp
cmp
lret
sahf
mov
orl
loopne
mov
jo
test
fnstenv
push
cmp
xor
mov
imul
mov
pushf
xor
inc
mov
add
pop
push
test
xor
mov
inc
inc
push
sub
fildl
pop
mov
rorb
jp
dec
aam
sub
out
lret
leave
scas
stos
ds
sub
dec
lahf
out
xchg
xchg
ds
xorl
xchg
in
adc
flds
pop
leave
add
lret
rcr
push
adcb
xchg
sub
scas
mov
sbb
sbb
mov
jo
mov
sbb
lret
mov
fisubs
or
cld
shlb
lret
fld
pop
dec
dec
and
movsb
out
mov
clc
mov
mov
jecxz
and
enter
mov
adc
dec
pop
les
bound
xchg
imul
loope
ret
sub
stc
cmp
out
sub
popa
enter
out
sub
in
lock
pop
mov
mov
out
mov
je
dec
xchg
sub
jg
sbb
adcl
sub
shll
xor
jg
dec
xchg
out
int
ds
int
xor
insb
dec
push
arpl
jae
insl
jns
sbb
bound
inc
pop
push
ret
repz
xchg
mov
es
and
sti
jno
loopne
mov
rclb
jg
popf
enter
jl
and
jbe
xchg
push
in
std
int3
dec
scas
sbb
mov
dec
mov
enter
mov
sbb
pop
stos
and
movsb
ja
jb
icebp
sub
xlat
fwait
jl
adc
jne
out
cmpb
out
in
int
push
test
fisubrs
test
int
dec
lock
xor
inc
mov
loopne
nop
cmc
stc
mov
cmp
insb
mov
mov
pop
pusha
push
push
cmpsb
outsl
mov
pop
mov
outsl
pop
cmp
mov
roll
pop
dec
mov
sbb
pusha
shll
lods
lock
pusha
inc
dec
xchg
mov
ror
xchg
adc
mov
ja
imul
add
dec
lock
in
dec
test
fdivp
and
pop
pop
push
adcl
adc
dec
mov
fstpl
movsb
push
ljmp
sahf
movsb
lret
adc
inc
sbb
test
xor
pop
ret
jl
push
jns
loop
push
adc
hlt
mov
adc
jo
bound
dec
xchg
out
in
rcrb
leave
jecxz
xchg
cwtl
inc
push
or
add
out
inc
aad
mov
inc
pushf
leave
aam
lret
out
jb
int
add
scas
push
xchg
pavgb
pop
iret
cwtl
hlt
lea
or
mov
sbb
mov
push
dec
repnz
aad
fs
dec
jl
jecxz
cmovb
imul
frstor
bound
sbb
mov
pop
mov
jb
aad
lahf
loopne
lcall
sahf
inc
shlb
or
cmp
negl
js
push
in
mov
cmp
xchg
push
dec
lahf
mov
mov
mov
nop
cwtl
add
xbegin
jmp
cmp
fnsave
cmpsb
inc
mov
fcmovnbe
cmp
pop
outsl
mov
sub
lods
adc
imul
mov
inc
jecxz
adcl
jge
clc
pusha
mov
adc
in
or
xor
push
cmp
out
int
aaa
clc
pop
dec
jmp
test
or
popf
lods
mov
in
mov
test
or
jb
push
rcll
cmp
scas
lcall
insl
shrb
push
mov
pop
inc
pop
inc
fld
xchg
adc
jns
cltd
add
loop
sbb
pop
adc
lahf
push
cltd
mov
fwait
mov
repnz
dec
push
or
xor
pop
xchg
mov
int3
mov
arpl
repnz
and
xchg
arpl
jnp
out
xor
int3
pop
aaa
out
mov
mov
inc
loope
je
inc
out
or
jnp
push
mov
bound
mov
inc
dec
add
shr
jno
push
xchg
adc
push
adc
jmp
dec
in
repz
dec
pushf
sub
dec
sbb
cltd
mov
sub
jae
cmp
dec
xchg
push
paddd
push
test
je
aam
adc
jae
xorl
cmc
cltd
mov
out
sbb
lds
lret
clc
ja
int
repz
movsb
cltd
cmpsb
jno
adc
push
pminsw
out
aas
mov
jns
int
out
and
das
mov
in
sub
inc
repz
andl
xor
cmc
add
scas
imul
stc
inc
mov
or
lret
xchg
xor
lock
add
adc
mov
and
push
enter
stc
popf
push
and
sub
mov
mov
pop
ljmp
cli
mov
imul
cwtl
and
push
bound
imul
mov
call
pop
mov
popa
repnz
inc
inc
mov
cmp
push
pop
adcl
pushf
cmp
mov
lock
outsl
mov
xor
push
xor
push
sbb
mov
enter
shrl
mov
iret
enter
loope
imul
out
nop
xchg
jns
cwtl
cltd
sub
sub
cmpsl
icebp
dec
dec
dec
jno
inc
mov
cmpsl
mov
aas
lcall
or
repz
fsubl
mov
xchg
fcoms
xlat
enter
push
adc
call
xchg
rolb
push
jl
xlat
xchg
mov
xor
mov
cmp
sbb
std
sub
jmp
pop
cmpsl
cs
fwait
call
or
cld
movsb
jge
add
cmp
mov
ljmp
sbb
stc
lds
mov
in
sbb
pop
in
and
jp
jl
sbb
std
stos
leave
dec
daa
sahf
loope
fistl
adc
or
lcall
lcall
jp
orl
and
jp
adc
sub
cmpsl
in
inc
aas
pop
inc
enter
mov
cmp
jl
data16
mov
pusha
aaa
sub
pushf
add
test
out
sub
ret
add
jmp
lcall
clc
mov
out
sti
inc
xor
or
inc
pop
jl
push
sub
leave
jns
push
xlat
popa
jnp
test
xchg
lret
xchg
xchg
add
cmpsl
pop
pop
push
xor
cmp
and
ss
movsw
inc
pushf
mov
repnz
dec
movsb
xorb
xor
pop
stos
mov
adc
add
push
shlb
pop
mov
mov
icebp
mov
jge
pop
in
loope
sub
push
out
fnstsw
xchg
movsb
and
lds
je
mov
or
lods
popf
hlt
and
lods
jae
sbb
push
shl
stos
or
rorl
jae
and
fdivrl
sub
mov
xor
inc
xchg
sarb
outsl
lock
mov
in
xchg
into
andl
sbb
pop
push
imul
ss
pop
or
stos
dec
into
stos
inc
fwait
mov
or
push
ljmp
imul
scas
jmp
ret
out
jb
pop
pop
xchg
sub
gs
or
fimuls
inc
mov
jns
scas
dec
and
nop
mov
jno
add
mov
cmp
lock
mov
add
and
sub
dec
xchg
shl
add
rolb
arpl
cmp
sbb
iret
hlt
adc
cli
aaa
cmp
cmovns
mov
lock
adc
ret
repnz
jmp
cmp
or
cmpsl
lds
lahf
rol
ss
iret
xorb
sub
xor
aad
les
xor
subl
push
add
repnz
out
mov
pusha
adc
clc
fadd
jp
addl
fwait
icebp
dec
in
outsl
aam
fwait
sbb
rolb
aam
jmp
int3
insl
mov
mov
or
or
push
iret
es
test
pop
idivl
aam
mov
pop
cmp
mov
inc
lods
add
es
test
push
pop
push
cmpsb
test
sub
jae
cmp
cmp
jmp
sahf
cld
xor
andb
dec
mov
add
add
cmpsl
into
sub
add
scas
jg
hlt
pushf
sub
and
jecxz
das
xlat
sub
in
lds
jno
push
ret
clc
clc
dec
test
mov
and
test
dec
sub
mov
push
sbb
dec
sbb
push
sub
pop
dec
shll
dec
adc
jmp
xorb
mov
jg
and
pop
add
jl
scas
iret
lea
movl
mov
mov
cmpsl
push
push
mov
out
xchg
sahf
sub
or
jmp
mov
jp
insl
mov
and
xchg
xor
xor
cmp
in
or
loope
cmp
pop
cmp
xor
adc
aad
push
stc
push
in
add
sub
testl
inc
js
fs
movsb
mov
in
fildll
out
add
fcomp
pop
xchg
cld
sbb
icebp
push
dec
sarl
inc
jb
inc
xor
and
xchg
scas
dec
jp
push
push
pop
fisttps
cli
sarb
dec
ljmp
insl
aaa
sbb
dec
cmp
fisttpl
cld
or
adc
repz
clc
push
ljmp
std
xchg
ds
xor
popf
and
pop
sbb
arpl
test
out
sti
pop
add
mov
shlb
ljmp
or
lock
mov
adc
jmp
mov
bound
sbb
mov
repnz
cmp
ret
mov
mov
push
adc
ss
repnz
ret
ds
sti
adc
xor
into
out
cltd
dec
sahf
das
push
jecxz
add
mov
dec
mov
movsl
cli
mov
sbb
xchg
jb
dec
pop
dec
mov
xchg
stos
lahf
and
and
mov
in
mov
xor
mov
mov
loop
imul
mov
mov
mov
pop
xchg
adc
dec
rolb
loop
test
lret
into
icebp
test
mov
push
xchg
jae
test
mov
mov
mov
in
and
mov
dec
push
xor
lea
and
out
ljmp
or
popf
aas
push
sub
shr
ja
int3
stos
out
jns
nop
push
push
roll
cmp
push
inc
das
pop
rolb
fdivs
in
or
scas
in
mov
test
inc
lods
jecxz
clc
js
sbb
lods
pop
push
test
gs
and
or
hlt
mov
movb
push
mov
in
std
xor
push
scas
aaa
jle
adc
out
loop
ret
sarl
ror
xor
out
push
iret
cs
ret
popa
inc
in
rcl
inc
mov
mov
addr16
pop
jecxz
push
mov
and
insl
add
lret
adc
mov
sbb
movsb
repnz
cmp
call
cmp
sub
ja
xchg
jb
mov
movsb
movsl
sti
enter
pop
insb
insl
test
mov
mov
out
shll
jl
mov
int3
fcmovnb
cmpsl
sbb
gs
cmpsl
jae
xor
push
aam
ret
fsubs
loopne
pusha
rclb
jle
jl
mov
pop
sarb
or
push
add
push
test
xchg
lea
mov
sub
or
notl
adc
jne
push
rcll
lods
in
fdivr
cmpb
xchg
repnz
dec
mov
pop
pop
loope
movsl
dec
push
cmc
lcall
sub
mov
lret
inc
mov
jmp
rcl
fs
and
jb
incl
shrb
inc
test
aam
sahf
lret
mov
incb
repnz
cmp
loopne
inc
sub
cmp
loopne
xchg
jmp
xor
loopne
adc
and
ret
into
test
xlat
push
jne
xor
jg
pop
mov
test
xor
mov
or
mov
aaa
jns
inc
in
xlat
loope
hlt
mov
fidivrs
push
sbb
aad
loopne
es
test
aam
and
xchg
or
les
movsb
mov
loop
sub
dec
aam
dec
pop
jae
push
add
inc
fidivs
rcrl
mov
and
fmul
xchg
sub
dec
mov
je
mov
lret
lods
xchg
cmc
dec
mov
rcrb
xlat
clc
sub
pop
inc
mov
nop
jnp
rcl
and
push
pop
sbb
inc
adc
inc
test
jp
fmulp
iret
scas
push
cs
or
fcmovbe
or
test
push
jl
fistl
lahf
data16
pop
pop
inc
insb
popa
push
in
jne
mov
int3
lods
fadds
mov
adc
inc
es
cmp
jmp
pop
cmc
pusha
negb
ss
cld
push
adc
lret
in
cmpsb
mov
push
pop
push
repnz
or
loopne
mov
test
and
push
imul
fwait
add
inc
xor
push
cltd
in
push
adc
push
inc
shll
mov
pop
das
jge
mov
cmp
push
ja
dec
cld
leave
test
repnz
outsb
dec
addl
cmp
pop
sbb
sub
lcall
pop
fdivrl
test
xchg
sub
inc
inc
ret
cmp
mov
lods
movsb
mov
jne
sbb
push
scas
mov
lahf
xor
aad
jl
mov
jb
cmp
sti
cmp
cwtl
mov
mov
xor
sbb
fmull
fisttpl
flds
cmc
push
cmpsl
js
jmp
pop
loop
clc
sbb
pushf
mov
jne
in
out
mov
sbb
fs
push
movsb
into
clc
test
js
sub
fimull
jl
mov
jmp
fiaddl
fdiv
aaa
std
jb
bound
inc
filds
in
mov
mov
sbb
imul
fwait
add
movsl
rolb
jbe
sti
sbb
mov
arpl
lret
jbe
add
jbe
jne
xchg
add
fadd
aad
data16
les
mov
lea
pusha
xor
inc
mov
adc
mov
xchg
frstpm(287
push
jecxz
aad
fmul
xchg
cwtl
imull
dec
addl
insb
test
add
dec
pop
es
xchg
dec
or
cwtl
xchg
scas
xchg
cmc
addl
fwait
sbb
je
insb
or
xor
cli
or
lcall
test
test
dec
stos
loopne
iret
outsl
int
ss
jge
loopne
clc
push
btr
dec
sbb
test
call
leave
mov
stc
cwtl
insl
shl
lock
adc
bound
out
aad
les
call
fisttps
dec
mov
je
into
pop
insl
icebp
nop
pop
int3
ljmp
sbb
cwtl
out
arpl
mov
test
aad
mov
jbe
lret
in
addr16
and
cmp
in
pop
cs
sbb
add
roll
inc
add
nop
or
and
call
mov
hlt
mov
lods
mov
fsubrl
fwait
push
mov
inc
xchg
jecxz
loopne
pop
je
movsl
sbb
xor
mov
mov
jno
shlb
sub
and
insb
sub
ficompl
hlt
imul
mov
and
mov
push
jge
xchg
pop
std
ljmp
and
inc
jne
pop
je
aam
les
jge
jle
test
sti
cmp
mov
mov
mov
cmp
pop
sbb
pop
subl
adc
popa
pop
lods
dec
cmp
mov
scas
test
sahf
jp
mov
mov
das
sbb
mov
popa
mov
sub
cmpsb
mov
sbb
je
fidivl
fiadds
jno
sub
jl
add
mov
ljmp
fistl
imul
pcmpgtd
cmpsl
xchg
mov
xor
dec
shrb
adc
fs
pop
daa
or
stc
jbe
lcall
or
push
popa
push
dec
cmp
aaa
push
inc
xor
push
jp
xor
xlat
icebp
and
in
nop
loopne
cmp
mov
lods
fldcw
xchg
push
ss
iret
lods
lcall
add
xor
jmp
mov
and
adc
daa
clc
loope
bound
jb
fwait
mov
xchg
sub
adc
push
pushf
sbb
outsl
test
xor
dec
push
mov
movsb
jne
or
cmp
add
int3
lcall
inc
inc
mov
add
push
mov
pushf
in
shlb
arpl
out
jnp
jo
test
push
scas
dec
mov
pop
ret
inc
call
in
cmp
jnp
push
mov
jnp
adc
jo
jg
data16
sar
sbb
mov
dec
and
sub
sub
int
and
xor
fists
jns
insl
sbb
inc
out
out
cmpl
movsl
nop
leave
jg
sbb
push
adcl
pop
pop
mov
pop
in
fsubrl
subl
je
js
rolb
fs
gs
out
out
add
mov
xor
lods
aad
add
mov
and
sbb
jo
fimull
pop
gs
push
or
mov
and
sub
lcall
iret
dec
gs
push
mov
rorl
add
pop
add
inc
jo
fistpl
dec
out
lods
dec
aad
or
mov
mov
mov
addb
cmpsl
sti
push
or
addr16
push
pop
jl
fdivl
fs
test
cld
cmpsb
sub
cld
or
ljmp
xlat
aas
stc
lods
stos
arpl
iret
rol
test
movsb
push
xor
xor
xor
lret
inc
xchg
mov
pop
adc
push
insb
lds
jo
in
inc
jl
nop
pop
sbb
dec
popa
bound
in
insb
shll
insl
push
and
loope
shll
ljmp
fisubrl
fcmovnu
jno
xadd
mov
sahf
and
fiaddl
push
cwtl
mov
nop
scas
std
xor
addr16
mov
pop
fxam
movsl
je
pop
inc
xor
add
js
out
sbb
test
mov
popl
sbb
sarl
dec
and
inc
adcl
mov
leave
sub
jp
push
data16
jmp
adc
mov
fisttpll
mov
dec
and
out
into
sbb
jnp
cmp
jl
jns
mov
js
testl
jp
sbb
insb
xchg
int3
mov
add
sub
lea
ljmp
cmp
sahf
mov
in
push
sub
repnz
lock
mov
imul
pop
hlt
faddl
sahf
hlt
lcall
xor
xor
xchg
xchg
loope
sbb
pop
and
mov
xor
int3
clc
pop
inc
mov
enter
mov
mov
gs
mov
sub
sbb
jmp
pusha
mov
and
push
sti
cmp
out
pop
xchg
inc
orb
xchg
mov
mov
inc
mov
add
stos
sbb
adc
xchg
xlat
inc
add
sbb
ss
push
pop
pop
sbb
fsubp
test
cwtl
mov
out
push
xor
sub
into
inc
inc
pushf
mov
into
scas
in
and
das
imul
popf
out
adc
aad
popf
mov
rcl
dec
out
xchg
daa
sub
pop
mov
sub
cli
mov
loop
mov
dec
xchg
test
daa
fwait
rcr
out
cmpsl
dec
jle
mov
mov
cwtl
dec
hlt
jl
add
adc
loope
xchg
cmp
mov
xlat
icebp
jl
loope
outsl
adc
push
jo
insb
dec
adc
push
pop
push
pop
test
bnd
push
add
ret
push
lcall
inc
and
xor
out
movups
div
and
xor
push
iret
pop
xor
mov
loop
push
test
push
push
aaa
ret
stos
xor
jmp
shr
jnp
notb
mov
dec
cmpsb
push
mov
inc
es
pushf
mov
push
mov
sub
mov
idivb
ret
sbb
jbe
test
xchg
rclb
jp
and
test
mov
shll
push
leave
sub
push
cmp
push
adc
sbb
scas
lahf
push
and
jecxz
pop
stc
sub
cmp
clc
or
add
fsts
aam
jns
fists
xor
mov
jno
inc
mov
les
pop
cmpsl
push
rolb
lea
inc
jb
imul
or
mov
adc
or
xor
mov
cmp
jg
je
xor
mov
dec
cmpsl
ficompl
cmp
in
sbb
inc
and
mov
adc
xchg
cmp
fcmovne
outsb
inc
outsl
enter
mov
in
shrb
push
dec
movsl
lea
ds
xor
data16
add
jge
fistpll
add
cmp
xor
rcrl
scas
add
add
out
test
sub
push
sbbl
mov
insb
clc
cmp
mov
xor
jb
jno
pop
or
daa
popf
cmp
xchg
dec
push
movsb
mov
outsb
sub
test
push
mov
xchg
in
and
das
ds
xor
push
xlat
fdivrl
mov
or
hlt
popa
jg
in
pop
ds
push
jno
jns
inc
adc
outsl
cs
push
jmp
loop
xor
pushf
mov
rcr
push
xor
mov
daa
loope
loop
ficompl
sbb
inc
fistps
ljmp
mov
mov
loope
mov
push
in
adc
js
cmpsb
push
adc
int3
imul
push
mov
adc
popa
sub
gs
sub
cmp
push
push
lahf
pop
enter
stos
xchg
adc
push
inc
in
xchg
jmp
pop
loop
xor
add
popa
jae
sbb
arpl
movsb
inc
xchg
subl
sbb
sbb
dec
cmc
les
jle
mov
push
ljmp
inc
in
mov
mov
mov
lahf
call
push
std
fwait
mov
into
adc
iret
or
push
adcl
ret
jnp
adc
cwtl
sarb
inc
fstpl
orb
int
repz
ja
lds
lods
or
inc
jae
das
jbe
subl
fstp
dec
ds
decl
inc
mov
inc
sbb
mulb
subb
shlb
mov
sub
loop
std
movsb
leave
call
out
push
cmp
sbb
lahf
pop
jb
jmp
lcall
jae
outsb
fidivs
or
test
jg
loopnew
dec
loopne
popf
incl
scas
jns
xor
pusha
mov
popa
addl
sbb
out
mov
pusha
push
mov
dec
sbb
xchg
push
mov
outsl
mov
xchg
aas
mov
mov
xor
inc
cmp
push
xchg
fistpll
push
jle
mov
xor
xchg
shll
sbb
dec
mov
sub
ljmp
cmpb
testb
pushf
xchg
icebp
mov
or
bound
shrl
push
adc
mov
adc
fwait
leave
scas
test
mov
rcl
push
or
adc
mov
sub
stos
inc
imul
stos
call
imull
and
push
and
scas
mov
pop
sbb
mov
out
lcall
cmp
js
mov
push
fimuls
data16
sbb
aam
jae
movsb
popf
aam
fimull
das
je
test
lock
mov
cs
or
cmc
cmp
fadds
es
xchg
jb
sbb
xor
push
cwtl
or
cmp
jecxz
les
sbb
push
push
cmp
das
inc
mov
xchg
mov
dec
cld
mov
enter
out
lods
pop
sub
lcall
cmc
dec
sub
loope
sahf
std
ds
std
fs
stos
or
xor
push
lds
mov
ret
in
inc
jle
mov
xchg
jmp
mov
and
test
xchg
scas
leave
dec
sub
sahf
mov
mov
inc
fldt
je
gs
cmp
addb
xor
movsb
inc
repz
sub
or
fdivp
cmpsb
cmp
push
int
imul
mov
mov
and
add
sbb
inc
jl
jb
cs
movsl
pop
mov
int
call
rolb
mov
cld
sub
std
icebp
fs
sbb
or
mov
mov
movsl
cmp
popa
jg
mov
iret
mov
js
pop
xchg
fs
mov
in
mov
jp
int3
sbb
cmpsl
out
dec
cltd
jno
jle
pop
mov
cmp
stc
pop
sarb
bound
mov
pop
rorl
sbb
push
sbb
movsl
test
jns
pop
shrl
xchg
xor
push
test
fimuls
sub
fistpll
cmp
xchg
jmp
fwait
xor
imul
loop
fs
cmc
add
arpl
out
adc
pop
mov
lods
add
int3
lret
das
push
call
rclb
mov
jg
scas
stos
cmc
cmc
cs
or
dec
sbb
bswap
in
and
clc
dec
jns
dec
cld
scas
mov
cmp
ficomps
subb
incb
jmp
pop
jns
add
sub
lret
inc
enter
into
int3
dec
fisubrl
or
sbb
adc
movsl
mov
push
movsl
movl
mov
cmp
sbbb
filds
lcall
jnp
movsb
push
das
pop
push
imul
pusha
pop
add
mov
adc
jl
xchg
dec
shll
add
test
xchg
je
xorb
sbb
cmp
and
insb
push
inc
sub
jae
and
in
outsb
movsl
mov
push
shl
cli
cmp
cli
data16
mov
sub
push
fwait
ds
xchg
mov
inc
leave
insb
dec
push
int3
addr16
mov
push
cmp
lock
cmp
pop
outsl
mov
adc
ret
cmpsl
pop
and
pop
ss
cmp
aas
mov
cli
mov
add
xchg
aas
rclb
or
cmp
mov
ljmp
inc
pop
mov
push
adc
cmp
std
xchg
dec
push
cmp
xor
stc
and
int3
fimuls
inc
movsb
cmp
iret
das
push
outsb
push
xlat
hlt
in
frstor
addl
ljmp
push
inc
in
xchg
loope
ret
xchg
and
je
pop
jo
or
imulb
xor
out
lods
stos
repnz
jmp
jae
lock
jo
jo
clc
lcall
add
pop
rolb
fsubrl
xchg
int3
pushf
mov
sub
or
mov
inc
mov
mov
movsb
cmp
in
rcrb
xchg
mov
xor
pop
mov
push
or
and
xor
sub
pop
or
dec
enter
incb
scas
shll
xchg
pusha
ljmp
adc
insl
dec
test
mov
sub
xor
clc
and
sub
in
lods
call
push
scas
cmp
sub
cs
dec
jbe
cmpsb
int3
mov
sbb
mov
sbb
or
ss
into
or
ret
in
mov
mov
out
data16
inc
xor
inc
mov
adc
mov
iret
cmp
mov
cmp
push
mov
xchg
je
inc
lds
push
pushf
push
subl
cli
xlat
roll
fimuls
movsl
pusha
imul
xchg
add
imul
into
icebp
inc
push
adc
fs
lcall
jae
adcb
and
andl
out
std
pusha
lret
mov
pop
mov
xor
repnz
imulb
dec
add
xchg
daa
cmp
idivb
loope
mov
inc
cltd
push
pop
push
jns
mov
xchg
jnp
cwtl
mov
bound
mov
jl
enter
out
das
stc
wrmsr
int
or
cmpsb
push
push
adc
mov
in
ljmp
fsubrl
jle
sub
sub
add
inc
jmp
xchg
inc
xchg
out
lods
scas
xlat
pop
and
test
and
imul
insb
filds
test
pop
and
xor
shr
enter
xchg
data16
jmp
fistps
ret
orl
les
and
stc
ss
mov
jns
fistpl
jae
sbb
jns
add
fnstsw
insl
or
jnp
push
shrb
mov
lods
cmp
dec
or
and
mov
push
dec
idivl
push
iret
and
mov
loop
pop
sbb
scas
ret
cmp
jp
mov
add
cwtl
jne
fildll
adc
aaa
pop
test
add
or
cmpsb
dec
pusha
dec
icebp
and
test
or
xor
test
andb
inc
xchg
jbe
shll
inc
hlt
add
dec
mov
shl
cli
test
inc
jmp
ret
dec
andb
sub
jb
or
mov
call
xchg
bound
sub
mov
into
jp
hlt
xchg
mov
and
popa
pop
aas
pop
and
push
test
call
dec
pop
mov
xchg
clc
jl
jae
outsb
dec
rsm
xor
lret
mov
cs
dec
js
negl
jne
mov
inc
addb
fsubrp
xor
mov
xchg
daa
daa
push
cs
cmpsb
xchg
iret
xor
cmp
or
inc
push
jg
stos
mov
jo
es
jb
aaa
leave
imul
push
ret
sti
int
das
adc
push
push
mov
sbbl
sbb
add
inc
in
cmp
gs
or
das
sbb
lea
jmp
test
outsl
sbb
cmp
sahf
jge
leave
outsb
pop
xchg
inc
and
mov
cmovs
sbb
daa
sbb
pop
cmpsb
scas
jle
jbe
xchg
mov
jae
mov
push
dec
jb
adc
notl
outsl
dec
xor
fwait
in
push
xchg
push
aam
add
xor
ss
xor
xlat
mov
test
cmpxchg
ret
das
pop
sub
or
mov
or
cmp
lds
xchg
cld
or
aas
cli
mov
mov
jecxz
pop
push
push
mov
jecxz
sub
ds
mov
add
cmp
rol
out
neg
aad
data16
sbbl
cmp
in
fmul
mov
lret
push
sub
shrl
mov
sbb
into
jne
in
call
sub
add
insb
xchg
lret
and
sti
pop
inc
xchg
cmp
jl
in
cmpsb
out
add
lahf
push
sub
hlt
cs
cmp
xor
inc
jb
push
or
aaa
sti
in
mov
pop
add
and
cs
or
imul
mov
popf
movsl
cmp
in
mov
mov
sub
add
fidivrl
insl
mov
cltd
push
es
data16
inc
pusha
into
stos
ds
cmp
xchg
dec
jp,pn
xchg
mov
outsb
or
ret
daa
pop
outsl
or
mov
xor
inc
ror
or
push
push
fstpl
sti
dec
mov
push
sbb
andl
popa
xchg
nop
rorl
xchg
jns
test
test
lret
dec
jb
and
jns
into
adcl
sti
push
loopne
xchg
data16
rcrl
mov
scas
jo
insb
movsl
int
mov
xorl
lret
dec
insb
xchg
xor
bound
jae
xor
dec
jne
aad
int3
cmpsl
fisubs
pop
jg
clc
loop
mov
nop
sub
ret
jge
jp
adc
adc
sbb
pop
imul
sti
imul
or
pop
mov
lds
add
push
addr16
arpl
jo
pop
add
lods
adc
mov
push
inc
and
xchg
jbe
test
dec
and
sar
sahf
rcr
and
daa
rcl
ror
jnp
add
xor
or
sti
in
stos
mov
mov
int3
or
inc
jmp
stos
push
push
cmp
sbb
dec
push
das
into
test
call
std
pop
adc
es
jb
jbe
mov
lea
mov
jg
popf
dec
push
fldenv
loop
dec
push
jle
ss
dec
rep
inc
jb
sub
add
jae
sbb
lods
in
fbld
mov
loope
or
sti
add
push
fildll
push
rcll
inc
push
les
xchg
dec
mov
insl
test
xor
ljmp
into
xchg
push
shlb
lock
xlat
push
or
in
push
mov
push
pop
scas
push
in
xor
xlat
dec
xchg
xchg
and
push
fsubr
jno
lds
jle
ja
push
pushf
stc
xor
mov
arpl
push
cmp
ret
mov
and
dec
cmp
jns
mov
push
push
pushf
bound
mov
pop
sub
ret
std
dec
rol
cmpsl
inc
ja
test
das
jo
dec
xor
dec
cmpsb
cli
sub
andb
jge
mov
xchg
push
stos
js
insb
push
outsl
inc
cmpsb
mov
ljmp
rcrl
data16
xchg
imul
andl
pop
pop
sti
mov
push
sub
imul
xchg
mov
push
outsl
push
fists
icebp
aaa
mov
stos
pop
lahf
cmp
mov
scas
dec
mov
cltd
scas
push
fdivrs
fdivs
jmp
ret
inc
dec
cli
int3
pop
shll
mov
and
add
pop
inc
nop
rolb
pop
add
xor
add
daa
sar
or
unpckhps
int3
stc
sbb
xchg
in
add
bound
ss
add
in
sub
pop
ja
mov
cwtl
add
sbb
stc
daa
ficompl
ds
js
inc
push
mov
lea
scas
shlb
sarb
stos
lret
fistpl
in
jle
cmp
lret
mov
fcmovbe
push
sub
adc
sahf
imul
add
sub
movsb
push
test
push
cmpsb
test
pop
enter
sbb
fldcw
pop
pusha
xor
mov
inc
inc
shll
rol
cs
jle
mov
push
add
mov
push
bound
decb
adc
fdivrs
test
pmaddwd
adc
fcmove
cmp
mov
sub
pop
cwtl
mov
xchg
out
jecxz
adc
mov
mov
jbe
cmp
push
outsb
scas
lock
je
xor
jge
xchg
jl
sbb
inc
jbe
cmp
fadds
pop
ljmp
dec
jle
scas
popf
jmp
mov
dec
int3
popf
dec
xor
cmc
test
cltd
adc
shlb
cmp
fisubs
fs
fnstcw
jnp
dec
mov
sbb
flds
xchg
jmp
out
or
cmp
jmp
mov
jae
xchg
movsb
fs
jmp
or
or
mov
cmp
icebp
cmpsl
out
repz
jmp
std
cmp
sahf
lret
mov
pop
dec
fdivrl
mov
xor
daa
adc
dec
sbb
push
pop
or
cmp
cmp
or
pusha
pushf
fs
dec
push
adc
outsb
inc
test
ds
shlb
jae
jmp
push
push
or
pop
push
popa
mov
dec
decl
jb
dec
cltd
hlt
test
or
imul
leave
outsb
mov
ja
mov
adc
sub
adc
subl
mov
pop
push
popf
mov
sub
cli
fadd
pushf
add
mov
or
cltd
cmpsb
mov
out
in
rorl
jae
mov
add
xchg
pop
xlat
insl
jae
mov
decl
sub
and
cmp
xchg
aam
dec
mov
or
lods
mov
xchg
xchg
inc
sub
push
mov
mov
xchg
mov
inc
nop
jge
insb
jecxz
mov
mov
leave
or
call
insb
xor
popf
dec
icebp
in
iret
enter
jmp
out
xchg
mov
ss
test
mov
jo
push
mov
sbb
insb
sub
xor
stc
inc
inc
aas
mov
fimull
scas
pop
push
lret
dec
std
push
es
clc
ss
test
and
into
gs
test
cmp
repz
fcmovbe
jae
ss
jb
call
or
dec
into
xchg
adc
xchg
xchg
cmp
daa
in
imul
mov
lea
and
ficoml
or
mov
mov
in
clc
fwait
jne
std
pop
hlt
xchg
push
sub
cmp
clc
pop
hlt
test
dec
inc
jne
mov
aaa
or
shlb
mov
je
cmp
stc
mov
cmp
subl
and
cli
scas
cmp
pop
cwtl
xor
mov
in
push
sbb
adc
ljmp
addr16
sbbl
xlat
test
add
aaa
arpl
jns
scas
imul
xorb
sar
xchg
sub
repz
push
pop
fsts
cmc
popf
jbe
jno
pop
inc
mov
fnstenv
mov
adc
or
xchg
adc
outsl
lods
cmpsb
mov
imul
icebp
xor
cmp
lcall
jge
in
mov
insl
nop
sub
shll
fistps
xor
push
out
int
scas
and
aas
es
add
xor
mov
push
or
xlat
add
jae
xor
or
inc
pop
cs
xor
ja
or
lods
xor
outsb
mov
sbb
addl
cs
sarl
or
jo
loope
aaa
cmc
ficoms
fs
mov
add
xor
test
dec
and
rorb
dec
pop
bnd
and
shrl
xchg
hlt
and
daa
sub
into
jge
shrl
cmpsb
loope
push
xor
sub
ret
je
cwtl
jno
inc
cmp
mov
adc
adc
arpl
jae
bnd
inc
jnp
sub
cs
dec
inc
mov
sbb
cli
cs
sbb
mov
shrb
insb
outsl
aad
pop
add
or
in
decb
dec
outsl
lods
jbe
inc
mov
leave
pop
push
pop
inc
out
stc
push
fists
adc
or
sti
loope
mov
xchg
mov
stos
or
push
push
dec
xchg
mov
cmc
pop
pop
pop
imul
repnz
mov
xorl
movsb
sub
mov
out
mov
lret
cs
rorb
mov
shrl
int
mov
sub
and
in
pop
orl
mov
jns
or
push
mov
push
test
dec
in
sti
sub
push
cmp
fldt
leave
add
xlat
xor
test
cld
pop
into
lcall
mov
lods
cwtl
push
pop
bound
cmc
iret
xlat
pusha
inc
js
push
pop
mov
mov
add
test
add
incb
out
dec
jmp
movsb
into
call
inc
mov
xor
xor
inc
iret
sub
add
shll
ja
xchg
cs
dec
scas
shlb
push
mov
ret
aaa
lock
test
mov
leave
jecxz
jecxz
stc
addr16
fwait
rorb
mov
stos
xchg
sbb
inc
xchg
pusha
popl
fisubrl
mov
jne
outsb
pop
inc
outsb
mov
xchg
int3
outsb
pushf
outsl
mov
cmpsb
sub
jp
daa
stos
test
jmp
movsb
pushf
push
cld
mov
push
cmp
add
lods
mov
gs
dec
stc
std
dec
or
mov
data16
loope
fucomip
xchg
out
dec
mov
mov
decb
mov
in
sub
sub
rorl
test
sub
fistpl
leave
mov
cmp
pop
leave
mov
incl
mov
mov
cwtl
in
push
bound
jbe
mov
mov
pop
mov
insb
lds
iret
addr16
adc
jmp
out
push
jge
or
pop
pop
push
jnp
jmp
cwtl
jo
gs
push
cmpsl
daa
inc
subl
push
jb
cmc
mov
loope
sbb
hlt
adc
sbb
cmp
loop
xor
call
hlt
int3
dec
jmp
adc
hlt
sbb
lret
inc
je
ja
dec
jne
or
insl
and
shll
mov
mov
jno
push
cli
mov
jge
jae
or
repnz
nop
mov
sbb
cld
xor
add
cmp
or
xor
xor
cmpsl
inc
mov
xor
adc
dec
arpl
daa
aad
inc
dec
mov
movsb
xchg
int3
jmp
mov
jns
push
mov
lds
les
ljmp
cmp
insb
pusha
push
enter
sub
bound
fwait
push
xor
xor
mov
das
shrb
cmp
push
adc
push
or
fadds
add
and
mov
pushf
scas
mov
pop
lcall
daa
mov
mov
sbb
test
pop
lds
cmp
mov
dec
pop
and
pop
lds
rorl
das
add
les
xchg
push
stc
ret
jne
iret
nop
adc
dec
inc
sbb
adc
xchg
cmp
jecxz
lahf
sbb
mov
daa
or
les
aad
and
push
aaa
cmc
movsb
movsb
arpl
call
outsb
sahf
movsb
rcll
cmp
ds
mov
test
gs
fnstcw
shlb
test
leave
push
jmp
cmp
sbb
inc
mov
in
inc
mov
push
pop
push
and
imul
dec
or
mov
mov
jbe
test
xchg
stc
scas
sbb
inc
and
lcall
scas
and
popa
mov
sti
in
out
mov
repnz
in
jmp
mov
in
outsl
test
fs
push
mov
dec
or
jl
dec
mov
lods
inc
lcall
in
and
cltd
in
fnstcw
inc
jg
cld
inc
int3
mov
mov
mul
or
jecxz
xchg
pop
cltd
jmp
ret
adc
stos
out
jb
cs
out
and
in
cmp
jno
ds
mov
xchg
addr16
xor
and
xor
jg
xchg
test
out
leave
lods
jnp
fsts
inc
outsl
lcall
rclb
lahf
flds
scas
pop
aad
sub
nop
iret
cltd
popf
cmp
mov
mov
inc
out
mov
lahf
pushf
imul
or
cmp
inc
sub
stc
mov
sbb
dec
inc
pop
ds
and
sub
sarb
or
add
jbe
inc
repnz
mov
aas
cli
addb
out
int3
pop
sbb
xchg
inc
mov
stc
cmp
mov
adc
lock
leave
and
xor
outsb
inc
shlb
mov
loopne
sub
pop
jle
outsb
ret
std
jbe
rorl
enter
lock
add
fucomi
in
mov
jns
mov
repnz
or
js
jb
xchg
aaa
icebp
fistl
or
out
imul
sub
popf
cwtl
repnz
pop
sub
inc
xor
push
hlt
mov
dec
ret
xchg
add
ja
jmp
lcall
lret
pop
pop
jmp
adc
adc
mov
push
shlb
mov
movsb
dec
pop
xlat
sbb
cli
pushf
mov
push
cmp
pusha
insl
xor
adc
dec
out
test
cmpsl
shlb
aam
andl
ds
push
aam
aad
mov
mov
ja
icebp
add
sti
mov
jbe
in
or
test
xorb
insl
repnz
dec
sub
jno
xor
mov
mov
xchg
lea
icebp
outsb
fidivrl
add
int3
jl
add
ds
pushf
cmp
hlt
into
loop
inc
inc
add
loopne
ljmp
jecxz
mov
xor
and
jno
arpl
pop
dec
clc
xor
stc
mov
push
push
pop
in
sub
jle
icebp
add
xor
inc
fcmovne
mov
ret
scas
cld
mov
mov
mov
push
test
sti
mov
adc
int3
lahf
fistpll
les
cwtl
dec
sub
add
stc
enter
jmp
mov
or
dec
mov
push
in
inc
sar
mov
dec
xacquire
mov
int3
xor
insb
cmc
rcrl
test
rorb
xlat
xor
iret
cmpsb
push
or
loope
lret
add
inc
mov
mov
and
push
gs
jbe
mov
shrb
testl
mov
pop
xchg
xchg
es
loopne
jo
test
icebp
xlat
fsubrl
mov
imul
push
ljmp
out
loopne
or
push
cmp
jbe
adc
inc
lock
dec
insb
repz
mov
sarl
inc
lret
and
frstor
scas
xchg
jno
mov
sbb
pop
pop
xchg
mov
push
sbb
mov
add
loope
out
cs
stos
xor
xchg
fs
sbb
push
or
jp
adc
cli
and
std
mov
scas
sub
mov
fstpt
add
dec
and
jae
xchg
adc
push
add
add
mov
scas
insb
std
sahf
push
xor
xchg
inc
jnp
lret
cltd
mov
lods
popa
ret
insl
sbbl
js
jmp
stos
cld
pushf
movsb
jecxz
test
aad
in
fisubs
xor
lods
fistpl
or
push
leave
fidivrl
push
add
mov
popf
adc
fs
fdivrs
and
jmp
jns
ss
xchg
insl
mov
sbb
jne
stos
mov
pop
jmp
inc
stos
fsubr
jne
addr16
xchg
mov
outsl
add
in
movsl
or
sbb
cmp
imul
mov
sti
mov
arpl
sub
inc
fwait
jo
enter
push
xchg
cltd
sub
mov
dec
sbbb
int3
push
cmpsb
popa
push
test
inc
sbb
adc
stos
out
dec
xchg
aas
dec
dec
xor
mov
or
adc
mov
cmpsl
xchg
and
test
aas
insl
fbld
loopne
das
daa
mov
mov
push
jp
call
in
sti
insb
xchg
jl
subb
daa
sub
xlat
fdivr
into
addb
adc
addr16
iret
in
push
test
sbb
test
jns
mov
clc
dec
xchg
mov
jno
pop
aad
loop
push
inc
call
iret
es
mov
mov
cmp
push
stos
jmp
inc
lcall
sahf
fidivs
sar
int
test
xor
xchg
mov
insb
outsb
add
lods
sub
dec
and
addb
or
sbb
pushf
jp
pop
fimuls
add
xadd
push
movsl
lods
dec
cmp
jb
mov
pushf
jmp
sbb
jle
gs
lds
js
push
dec
fs
jg
outsl
rcrb
sbb
out
out
add
sbb
jnp
in
sub
xor
in
adc
int3
push
pop
gs
out
into
cld
sbb
cpuid
inc
hlt
sub
pop
xchg
stos
int
pop
insl
cmpsl
cmp
cmp
cmp
inc
or
adc
ficoms
cmp
pop
in
xor
mov
test
inc
mov
outsb
cmp
jp
lods
dec
xchg
push
hlt
mov
sbb
push
scas
imul
xchg
ds
mov
add
pop
out
jae
loope
popa
ja
loopne
mov
mov
pop
or
jb
dec
shr
sbb
add
int3
test
push
loop
sahf
je
pop
das
xchg
sub
pop
aam
lea
scas
xchg
divl
mulb
rcl
sub
push
ja
inc
lea
fs
insl
repz
imulb
pop
out
fsts
xchg
jg
sar
push
testb
mov
ret
roll
pop
jmp
loopne
mov
int
push
pop
pop
rorl
dec
je
int3
mov
rclb
ret
adc
or
xlat
pop
xchg
pop
or
scas
inc
sbb
jne
fisttps
pop
adc
push
sbb
push
popf
cmpsb
enter
lahf
mov
lcall
jno
pop
mov
or
lret
subl
fistl
sbb
bound
lret
xor
dec
in
mov
jp
fsts
or
imul
or
hlt
mov
mov
sub
inc
inc
rclb
in
push
out
lds
subb
shll
sbb
ficomps
nop
bound
mov
movaps
int
xor
mov
and
pop
cmp
or
xor
push
pop
dec
repz
sbb
sarl
mov
nop
loope
and
xchg
lods
xchg
out
pop
push
xchg
rorb
mov
xchg
xchg
shl
fidivl
xor
and
aaa
add
xchg
and
and
outsl
gs
jecxz
pop
sbb
stc
in
gs
sub
in
pop
mov
fisttpl
fsubl
ljmp
testl
enter
xchg
jnp
push
sub
daa
add
dec
cmpsl
inc
shll
mov
pop
aad
loopne
mov
mov
xor
mov
cmp
jno
rorb
scas
mov
mov
addb
sarl
sub
pop
fisubrs
cmc
loope
das
jecxz
lahf
mov
push
daa
cmp
push
call
inc
frstpm(287
dec
jbe
xchg
cmpsb
sbb
in
js
std
dec
scas
sub
lahf
mov
add
movsl
jbe
inc
dec
dec
fwait
je
insb
add
outsb
rcrl
inc
sar
adc
xchg
jmp
subb
popa
push
inc
enter
dec
adc
aad
push
push
dec
mov
push
sbb
ret
daa
mov
sub
push
pop
fwait
sbb
push
jae
adc
mov
mov
ror
and
adc
add
imul
or
or
pop
push
cmp
jle
xor
insb
inc
cld
inc
adc
repnz
pop
movsb
bound
xchg
cltd
dec
xchg
dec
in
enter
js
mov
loope
pop
push
pop
lods
xchg
xor
pop
arpl
int
xchg
dec
fsubl
mov
pusha
sahf
mov
xor
dec
dec
in
pop
shrb
mov
inc
fcomip
stos
incl
xor
push
fstps
inc
and
pop
shlb
sub
jne
mov
cld
ret
pusha
push
mov
inc
pop
popa
fcoml
mov
jbe
rolb
push
outsb
pop
add
fidivs
sti
jno
push
movsb
xlat
in
nop
mov
adc
repz
push
and
fwait
cmpb
inc
daa
sbb
cwtl
or
jo
or
xchg
push
out
in
add
mov
xchg
add
adc
jnp
in
mov
lahf
and
je
stos
fwait
sub
cmp
scas
stos
scas
lret
sbb
sbb
mov
and
fistpll
out
loope
inc
mov
cwtl
adcl
mov
cmp
iret
xchg
mov
int
sub
cli
push
adc
xchg
xorb
xchg
scas
xor
scas
mov
push
adc
cmp
mov
inc
sbb
sub
inc
dec
pusha
xlat
les
fisubrs
pop
dec
sub
add
xchg
xchg
cmp
push
fs
into
nop
sub
add
mov
pushf
loopne
push
jmp
fisttps
pop
sbb
pop
add
mov
push
arpl
dec
sbb
cmc
pusha
add
sti
ja
fnsetpm(287
sar
rorl
arpl
jmp
cmc
dec
stos
es
dec
pop
sbb
lods
lret
shrb
int
lcall
outsb
adc
dec
or
movsl
test
xchg
mov
pop
sarl
adc
or
cmp
inc
inc
insb
jnp
movsl
push
push
iret
cmpsl
aad
mov
inc
int3
xor
les
insb
mov
and
fs
out
and
out
lods
gs
out
hlt
mov
fidivs
sarb
fmul
inc
push
or
lock
sbb
into
je
inc
sub
and
and
pop
lcall
test
sbb
mov
cltd
stos
or
jle
into
ret
scas
andb
adc
jge
xchg
xor
ror
daa
mov
pushf
cmpl
push
add
mov
cld
sbb
or
pop
stos
insl
push
add
test
push
inc
xchg
push
inc
fcmovbe
xor
cltd
lea
mov
and
roll
mov
stos
lods
outsl
mov
mov
lret
push
data16
mov
cmp
cmpsb
xor
lret
mov
inc
xor
sbb
jg
dec
push
inc
jo
sub
loope
sbb
mov
or
adc
pushf
inc
cld
xorl
in
jnp
sti
pop
adc
push
loop
aas
ja
in
out
lods
movsl
xchg
adc
xchg
cmp
jg
ret
arpl
or
pop
es
int
nopl
push
mov
call
lds
decb
rolb
aam
pushf
loop
cld
es
pop
pop
xchg
loop
mov
ss
test
shlb
arpl
mov
add
fninit
add
xchg
sub
movsb
clc
ds
sub
or
test
xor
ret
mov
leave
outsb
fcmovbe
xor
fs
je
push
or
ds
dec
rcrb
mov
mulb
repnz
call
lret
je
dec
inc
push
pusha
movsl
loopne
adc
ja
js
ljmp
jno
push
aas
jmp
mov
rclb
outsb
jp
fisubs
in
or
sbb
je
xor
pop
lock
insl
sbb
inc
loopne
ss
sbb
and
mov
xor
aas
pusha
aas
push
sbb
jp
or
mov
push
sbb
test
out
loopne
sbb
adc
movsl
adc
in
inc
cmp
mov
pop
into
xor
push
shl
push
ds
lret
mull
mov
lds
leave
pop
scas
mov
mov
in
xor
dec
test
pop
dec
sub
adc
xchg
pop
ret
fnclex
loop
dec
pop
rorb
or
mov
fidivrs
mov
pop
xor
loopne
fldt
xor
je
inc
inc
ror
xor
jb
xchg
mov
jb
and
fs
ss
sub
sbb
jmp
adc
arpl
adc
sbb
repnz
xchg
inc
aad
rclb
xchg
insl
inc
jmp
loop
and
sub
out
sahf
mov
mov
push
inc
xor
add
test
orb
inc
add
rol
mov
add
into
mov
jecxz
in
nop
addr16
ds
mov
insb
sbb
fdivl
aam
aad
icebp
sar
fistpll
das
stos
sbb
adc
push
gs
repz
mov
pop
push
test
fwait
push
mov
enter
into
push
lea
ret
adc
iret
mov
and
mov
xchg
jo
pop
push
in
mov
jnp
push
jbe
cmp
addr16
decl
shll
mov
cld
jae
cmp
mov
inc
ret
sarl
mov
jmp
mov
sbb
adc
or
or
in
add
fisubrl
hlt
sbbl
mov
pop
arpl
movb
lods
adc
push
out
movsb
stos
adc
popa
xorb
roll
fisttpll
push
push
mov
ds
pop
xchg
jae
sub
xor
lds
ror
xchg
lods
test
mov
xor
jge
adc
jmp
add
cmpb
cmpsl
push
imul
push
shl
aaa
dec
test
rol
mov
lea
mov
cmpsb
xchg
xchg
lods
cwtl
fwait
lds
arpl
dec
adc
or
or
pushf
mov
and
in
lret
or
xor
push
and
cmp
movsb
xor
mov
imul
repnz
ret
mov
cmpsb
rcrb
mov
outsb
fwait
mov
jae
call
pop
sbb
pusha
cwtl
mov
scas
out
idivl
fs
fs
or
jns
mov
lock
pop
and
pusha
sub
sub
cli
es
xor
test
in
fisubs
and
adc
fwait
movsl
push
ja
rcrl
xchg
fidivs
xor
arpl
mov
into
adc
xchg
rcrl
mov
dec
out
popf
pop
cmp
stc
stos
pop
and
adc
dec
inc
mov
lock
push
mov
push
add
sub
rorl
aam
pushf
or
lret
outsb
xor
sarb
adc
and
data16
repz
or
pop
mov
cs
std
popf
mov
sub
and
xchg
jo
dec
dec
xlat
add
loope
aad
leave
xor
repnz
pop
in
enter
ljmp
lret
jo
andl
jb
mov
mov
xor
lods
sub
ret
mov
icebp
push
lret
int3
stos
iret
out
adc
sti
hlt
inc
fwait
sub
test
jmp
iret
clc
repnz
mov
loope
push
sub
aad
dec
xchg
xchg
loop
xchg
push
pushf
xchg
cs
loopne
mov
das
push
xor
sbbb
cmp
ret
mov
lods
por
ljmp
add
mov
inc
xchg
shlb
dec
filds
sbbb
xor
mov
adc
add
pop
andl
pop
push
xor
leave
stos
adcl
lods
insl
aam
mov
aam
ret
imul
inc
popa
sbb
popf
int3
cwtl
cwtl
shll
sub
jge
int
in
or
or
mov
mov
mov
test
and
inc
inc
insb
in
movsb
sub
fsubs
pop
dec
fildll
sti
add
mov
xorb
add
jo
mov
aas
dec
lret
lret
int3
fstp
pop
push
and
lea
stos
cli
mov
outsb
stc
add
or
movsb
ret
cmp
or
daa
movsl
rcr
lret
xorl
dec
xchg
outsb
pop
cmc
ss
or
xchg
pop
jl
mov
fcompl
leave
ret
inc
cmpsb
xchg
movsb
and
ret
add
lret
jg
or
push
les
jmp
popf
dec
dec
push
sbbl
dec
jmp
mov
adc
and
mov
push
push
in
fcomip
out
jg
cmp
jae
mov
jp
jg
dec
sub
loopne
push
inc
adc
test
or
arpl
pop
inc
and
imul
adc
mov
sar
mov
outsb
cld
xchg
jno
cltd
mov
push
loopne
shrl
cmp
fwait
sbb
sbb
push
inc
icebp
mov
clc
aas
data16
xor
pop
inc
loop
inc
sub
adc
lds
dec
enter
adc
pop
paddd
and
movsl
add
repz
sbb
sarb
aam
or
scas
ficoms
mov
enter
pop
sbb
lock
cmp
mov
rep
sti
fsubs
or
loopne
repnz
lret
push
adc
aas
stos
icebp
jns
adc
cmpsl
adc
cmp
add
insl
or
pop
cmc
mov
sbb
jmp
mov
insl
enter
mov
outsl
mov
popa
and
das
fisubrs
add
in
mov
jmp
cmp
dec
aam
jp
daa
ljmp
push
pop
xchg
lods
xor
insb
arpl
lods
jo
jb
fidivrs
sbb
mov
scas
sbb
lods
jecxz
xor
adc
test
cli
out
rcl
sahf
out
jno
dec
mov
sbb
or
fadds
add
jno
pop
inc
cmpsb
mov
gs
scas
es
or
ljmp
ljmp
xor
loopne
je
lds
enter
inc
xor
xchg
push
dec
stos
mov
mov
lds
in
mov
aam
std
xchg
pusha
lds
sar
jne
out
add
lds
test
jne
xchg
inc
and
jbe
movb
movsl
jbe
jp
ret
sahf
ljmp
cltd
je
adc
adc
xchg
icebp
fwait
sub
orl
mov
and
adc
test
inc
mov
pop
gs
ljmp
loop
mov
xchg
into
mov
add
shlb
mov
mov
jb
xchg
inc
pop
or
xchg
pop
shll
imul
mov
imul
xchg
icebp
dec
add
lret
enter
test
pop
test
xchg
pop
dec
loop
adc
xchg
leave
in
xor
aam
cmp
jae
mov
shl
mov
out
xchg
pop
dec
xor
adc
xor
mov
or
out
and
lret
cli
cltd
jne
sbb
push
jge
mov
ret
les
pop
jge
test
cmp
repnz
add
add
out
inc
mov
subl
pop
jne
addr16
nop
cli
rcrl
mov
add
lahf
xchg
addr16
js
push
mov
sbb
aam
jmp
jne
dec
iret
insb
ljmp
call
xchg
out
jbe
sub
fimull
adc
dec
push
je
mov
jns
mov
data16
push
popf
loope
dec
mov
add
adc
push
subl
mov
pop
movsl
mov
sar
in
xor
fdivl
and
jnp
outsl
in
mov
call
scas
test
in
and
arpl
loop
stos
out
inc
test
add
cmp
outsb
xchg
aad
mov
sub
addr16
cmpsl
fwait
mov
arpl
rcll
xchg
mov
call
jmp
cmc
movsl
cmc
loop
inc
xor
fnstcw
mov
mul
mov
test
xchg
inc
mov
bound
push
mov
dec
sbb
movsl
push
xchg
or
movsb
scas
and
pop
cmp
or
lea
mov
dec
stc
js
xchg
sub
mov
xchg
testb
loopne
cmp
pop
push
jnp
fimull
stc
lods
sbb
or
mov
mov
imul
dec
lret
lea
jnp
jnp,pn
outsb
xor
inc
mov
mov
test
jg
jg
push
repz
jnp
mov
pop
lahf
jnp
testl
lds
mov
test
adc
rolb
incb
adc
mov
pop
in
mov
scas
mov
fisttps
add
pop
jl
pop
dec
mov
mov
or
enter
inc
or
push
decb
xor
mov
repz
or
add
push
lahf
mov
fadds
sar
mov
dec
push
dec
push
xchg
cltd
out
mov
test
insb
dec
ja
xchg
inc
dec
push
out
pop
loop
sbb
std
push
in
sbb
sub
test
in
dec
sbb
pop
mov
test
scas
test
mov
adc
les
jnp
fnsave
mov
out
fcompl
shrb
push
cli
mov
clc
call
cmp
fiadds
out
jmp
scas
in
or
ret
stos
pop
sub
jns
push
jbe
mov
not
jo
or
shl
ss
jbe
jl
sbb
sti
inc
sti
jae
repz
lcall
jnp
outsb
aas
pop
jl
xor
add
mov
sub
jp
loopne
sbb
loop
stos
sub
xor
ud1
lods
pusha
or
adc
jecxz
push
mov
xor
pop
lret
push
nop
test
mov
icebp
dec
dec
mov
out
repnz
xor
lret
lods
in
in
xchg
nop
mov
lods
in
cltd
les
shll
cmp
mov
adc
daa
in
aas
nop
mov
lcall
fldl
sbb
int3
inc
and
out
mulb
sub
insb
fs
xor
adc
outsb
enter
inc
add
xchg
ljmp
aam
outsb
leave
cmp
idivl
cmovbe
and
aam
mov
scas
mov
outsl
int3
lods
adc
cmp
mov
cltd
adc
pop
dec
inc
push
xor
imul
inc
push
cmpsl
pop
shlb
mov
adc
adc
add
inc
notb
dec
fidivs
repz
pushf
inc
mov
jmp
jnp
ret
stos
jl
cmp
lods
icebp
ds
cmp
sub
out
jle
test
mov
shrl
mov
ds
mov
dec
je
add
inc
mov
xor
jns
rcl
pop
push
js
cwtl
aad
push
push
fwait
dec
adc
inc
jnp
test
or
push
std
mov
inc
push
shll
or
inc
jge
sbb
add
and
fcomp
ret
adc
xchg
push
sub
mov
fsubrl
mov
fwait
pop
inc
jb
std
cli
faddl
test
iret
sub
cltd
mov
imul
fildl
aam
mov
movsl
fstp
sti
mov
outsb
filds
cld
cli
adc
pop
test
pop
stos
jmp
adc
aad
or
mov
sahf
fildll
testl
lahf
pop
sqrtps
push
mov
leave
push
nop
inc
int
xchg
push
jae
lea
mov
std
inc
scas
pushf
fstpt
dec
inc
lock
and
nop
loop
stos
cmp
sti
lea
idivb
and
loope
lods
stc
or
arpl
mov
sbb
stc
xor
mov
pop
mov
shl
cld
loopne
sti
pop
js
add
or
popf
aam
mov
lahf
push
jge
cmpsb
das
cli
dec
in
push
sahf
je
cld
inc
add
ret
cmc
mov
cld
int
mov
iret
es
cmp
lret
jbe
cwtl
fcoml
out
mull
xchg
into
int3
lock
mov
loopne
cmp
cmp
mov
ret
test
imul
pop
jecxz
shl
jae
cmp
pop
or
pop
dec
stc
rclb
and
ret
push
adc
xor
loope
sahf
fidivrl
call
test
repnz
push
xchg
cmp
or
pushf
sbb
cmpsl
pop
pop
add
push
int3
cmp
test
ret
and
in
sahf
call
idivb
movsb
lock
fbld
mov
inc
cld
ss
call
mov
lea
mov
push
or
lret
mov
arpl
mov
gs
pop
sbb
xlat
sub
cmp
push
dec
imul
lcall
xor
lret
adc
sbb
test
adc
cli
lods
aad
pop
jle
pop
cmc
pop
aam
sub
cmpsb
cmp
std
and
xchg
sti
fcmovne
popa
inc
mov
inc
mov
mov
xor
sub
jo
or
or
inc
push
sarb
dec
sbbl
test
insl
mov
dec
fcoml
call
testl
xchg
aas
add
popf
subl
and
popf
push
icebp
dec
loop
cmpsb
pmovmskb
sub
ds
repz
jge
mov
call
jmp
jns
ror
das
sub
ss
add
out
sub
out
inc
loope
mov
pusha
leave
cmp
cmp
ud2
clc
mov
mov
mov
push
pop
push
ds
loop
fisubs
xor
adc
xchg
xchg
divl
pop
or
sbb
sbb
clc
jl
or
addr16
jle
dec
scas
xor
sbb
sub
nop
lret
shll
mov
cli
stos
push
pop
popf
inc
mov
pushf
out
fsubrs
jae
and
sbb
jns
push
clc
cmp
add
loop
pushf
mul
lea
data16
in
aam
sbb
pop
or
je
dec
adcb
mov
jle
pop
xchg
inc
pop
jmp
loop
adc
out
in
jae
mov
xor
leave
addl
mov
jle
lea
and
jno
std
jae
cs
lods
dec
mov
pop
clc
mov
daa
mov
bswap
clc
pop
inc
insl
fildl
lods
outsb
inc
push
sub
mov
lret
cli
sub
lea
gs
aam
dec
js
sbb
push
iret
popf
push
cwtl
sti
add
mov
aam
mov
jnp
int3
cmpl
pop
mov
iret
jmp
loop
sbb
ds
out
shlb
ljmp
and
lahf
pushf
jp
dec
xchg
sbb
inc
fdiv
punpckhwd
push
jp
mov
in
imul
sbb
lcall
insb
xor
aad
cld
mov
cmpsl
or
popa
fldt
cli
jns
into
push
adc
filds
jne
test
int3
jle
inc
shl
ret
lods
cli
sub
mov
int3
add
lahf
jae
mov
ret
mov
stc
push
clc
mov
fbld
pop
pop
fisubs
aaa
dec
mov
sti
or
ss
xchg
std
mov
out
loopne
mov
jmp
jb
das
push
jb
ret
xchg
cld
or
cmp
cli
xor
inc
ret
out
sbb
clc
xlat
xchg
lret
popf
daa
repz
fdivrs
lods
push
sbb
cmp
and
addr16
inc
shrb
mov
fisubrl
add
sbbb
fidivrs
pop
jg
mov
mov
jge
fwait
sub
add
sub
adc
jae
xor
jbe
dec
ja
cwtl
adc
cmpsb
lea
addr16
inc
inc
sub
adcb
popa
xor
xchg
sbb
fnstcw
and
mov
popa
cmp
cld
jg
push
xchg
jmp
add
aam
shrb
in
ljmp
mov
mov
xchg
lret
dec
mov
into
add
clc
cltd
inc
sbb
fwait
cmp
dec
add
lods
push
aad
jle
sbb
mov
and
ja
out
fcmovnbe
or
and
daa
xor
dec
jecxz
aaa
jp
pop
popl
sbb
repnz
pop
mov
adc
cmp
push
cmp
or
pop
idiv
fwait
loope
or
and
loope
icebp
int3
cmp
cmp
fsubrl
iret
inc
jnp
jecxz
mov
daa
cmp
xchg
aam
dec
pop
aas
inc
cmpsb
aas
jne
sbb
adc
std
in
push
mov
jle
ret
xchg
xchg
popf
push
fwait
jno
jle
fidivrl
icebp
pop
inc
xor
inc
stos
sarb
mov
roll
dec
jae
addb
inc
sbb
int
pop
andb
insl
push
inc
sbb
mov
jo
xchg
pushl
in
sahf
das
daa
orl
les
xchg
leave
lock
inc
add
adc
mov
cmpsb
lds
leave
frstor
mov
lahf
xor
pushl
ljmp
test
cmp
shl
into
sub
test
ljmp
jg
push
mov
pop
stos
pusha
xchg
scas
scas
mov
mov
fnstcw
dec
sbb
xchg
mov
repnz
fimuls
push
pop
roll
ror
sbb
pop
pop
stc
mov
insl
out
push
pop
xchg
push
sbb
mov
xchg
push
xor
loop
test
mov
mov
jp
cmp
sbbb
imul
sbbl
shr
cli
cli
mov
std
test
sub
push
ja
push
js
pop
out
popa
leave
repnz
sbbb
loop
cwtl
aad
out
int3
imul
jmp
das
xor
in
in
sub
dec
and
inc
lds
stos
or
mov
sbb
cmp
imulb
mov
aad
add
enter
je
les
iret
sarl
shl
dec
test
cmp
push
inc
xchg
nop
push
call
std
pop
add
std
imul
loopne,pn
and
ljmp
push
subb
xchg
dec
add
clc
add
adc
fs
mov
mov
fdivp
and
sbb
or
lcall
mov
aam
cs
pop
outsb
dec
shrl
pushf
or
sub
mov
movsb
xchg
push
addr16
sbbb
mov
fildl
sets
imul
cli
dec
imul
push
xor
sbb
imul
mov
dec
arpl
fldl
movsb
fwait
add
std
jp
pop
cmpsb
inc
mov
mov
stc
outsl
notl
push
ja
sub
dec
cli
sbb
sbbb
mov
leave
stc
jbe
sbb
pushf
and
std
fcoml
int
mov
sbb
sbbl
mov
and
pop
pop
outsl
add
pop
jge
xchg
mov
dec
test
loopnew
lea
xor
dec
jne
dec
in
sub
stos
mov
inc
push
pusha
popf
sub
jae
shll
inc
and
js
mov
inc
or
pop
xchg
xchg
pop
xchg
lcall
adc
cmpsl
in
aas
lahf
add
push
out
out
xchg
sbb
pop
xor
scas
movsl
sbb
sub
xchg
adc
bound
mov
unpckhps
fwait
orps
sub
pop
pop
push
stos
dec
test
xorb
stos
dec
popf
insl
dec
in
cmp
mov
das
out
into
loope
mov
cld
call
inc
cmpsb
std
lcall
cmp
mov
xchg
out
mov
jno
int
lahf
movsl
adc
fucomip
es
int3
jno
dec
stos
xchg
outsb
incb
lock
iret
mov
pop
out
push
or
mov
gs
xchg
popw
jmp
stc
loope
or
mov
addr16
gs
xlat
mov
roll
lock
pop
push
adc
jg
lea
cmp
aad
imul
inc
add
shll
lahf
psraw
xchg
rorb
push
push
xchg
bound
jg
jp
cmp
xor
fcmovb
aaa
mov
rcrl
xchg
fiadds
ja
aad
idivb
mov
xchg
lds
and
fstps
loope
xor
pop
mov
insl
sbb
xor
push
and
repz
in
fadd
mov
outsl
cmp
pop
dec
jp
ficompl
es
fiadds
jo
adc
xchg
sbb
sbb
gs
repz
and
pop
or
lock
orb
xor
sbb
lods
pop
addr16
or
jge
outsl
xchg
mov
pop
or
jmp
pop
gs
xchg
dec
lcall
iret
subb
push
rorb
add
xlat
stos
adc
mov
xlat
jmp
push
jmp
mov
test
push
sbb
and
xor
clc
aad
or
dec
xlat
call
jbe
pop
test
jge
sub
cmp
ftst
lods
arpl
movsl
int
jns
add
sbb
je
mov
les
pushl
ficoms
test
pop
push
jae
and
jnp
and
push
pushf
push
icebp
xchg
xor
insl
adc
sub
sub
cmc
lock
sbb
sbb
movsl
test
ss
push
jnp
int
repnz
push
add
adc
lods
adc
lods
ret
xlat
aad
ja
sahf
xlat
dec
sti
movsb
pop
out
pushf
add
aam
cmp
xor
pop
pop
les
adc
jae
adc
push
lods
aas
jae
xorl
popa
mov
inc
push
dec
fdivr
push
maxps
stos
cmp
fmulp
outsl
int
cmp
shrl
aas
or
mov
fs
xchg
sbb
pop
ds
lahf
outsl
jns
stos
jb
fstps
pop
dec
loop
mov
dec
test
cmp
out
sahf
scas
mov
out
adcb
push
or
mov
or
aad
and
enter
outsl
add
adc
in
in
ror
mov
adc
xchg
add
mov
inc
rcrb
bound
mov
test
mov
sub
mov
push
popf
jno
push
cmpsb
dec
nop
rcll
dec
enter
pushf
loop
xor
mov
xchg
je
push
dec
mov
xchg
mov
adc
lret
xlat
mov
mov
jp
mov
inc
fcmovne
mov
insb
idiv
addr16
mov
xor
test
ss
fnop
test
push
jbe
sub
xor
jno
mov
daa
aaa
mov
sub
lods
incb
loope
mov
mov
ret
lods
shr
mov
sbbl
jb
pop
or
hlt
mov
pop
mov
sbb
int3
jp
lret
or
in
jae
sub
pop
jg
daa
call
xchg
mov
xchg
arpl
and
ljmp
stos
cld
xor
mov
mov
fsubl
int
sbb
sub
fs
frstor
cs
cmpsl
push
out
in
mov
mov
cmp
push
adc
sbb
or
xchg
or
xor
std
call
cmp
jg
les
mov
dec
adc
ss
mov
ss
inc
fprem
pushf
pop
test
mov
or
ljmp
ds
lds
fnstsw
xchg
push
dec
push
cmc
xchg
fldt
dec
test
push
arpl
sti
inc
icebp
hlt
dec
fwait
add
or
ret
lods
inc
arpl
mov
mov
or
je
mov
pusha
outsb
adc
push
rorl
outsb
mov
mov
out
aad
sahf
fbld
mov
xor
lcall
pushf
mov
gs
sbb
sahf
dec
sbb
and
outsl
or
xor
adc
dec
pusha
or
sbb
cmp
jle
mov
xor
mov
xchg
negl
fists
dec
mov
movsb
pop
outsb
jge
pushf
outsl
and
leave
xchg
xlat
cmp
gs
cli
imul
xlat
add
cmp
les
fstpt
rcr
pop
xlat
addr16
es
test
insl
xchg
sbb
in
xchg
std
dec
push
jae
imull
imul
xor
inc
fsubs
mov
xchg
pop
aam
and
sbb
mov
or
pop
scas
outsl
jecxz
pop
or
xlat
sbbb
add
pop
cmp
cmp
lahf
clc
lret
into
xchg
cmp
daa
or
shll
add
and
stos
stc
fcomps
xchg
xchg
push
popf
mov
pop
pop
aam
inc
frstor
movsl
mov
push
adc
push
push
push
and
mov
jge
push
mov
jmp
js
popf
popa
ja
movsb
inc
xchg
mov
adc
xchg
sbb
inc
mov
adc
imul
jo
push
adc
test
cmp
cmpsb
loope
xor
lahf
ret
sbb
out
lods
sub
push
test
inc
negb
or
mov
in
jno
rorl
jne
sbb
call
mov
out
dec
inc
out
popf
xchg
mov
add
iret
mov
mov
pusha
mov
xchg
jns
xor
out
sub
adc
mov
jne
sub
fisubl
aad
add
test
xchg
ljmp
je
jmp
jo,pt
xchg
sbb
mov
push
inc
and
clc
ret
out
add
cs
mov
insb
add
mov
cmp
sbb
add
pop
mov
jne
scas
mov
loop
cmp
in
mov
imulb
loopne
daa
insl
ljmp
dec
xor
jns
mov
sahf
pop
pop
jns
fstpt
repz
pop
dec
sub
in
xor
xchg
pushf
mov
pop
mov
push
dec
int3
mov
enter
cli
mov
ja
xchg
jmp
out
push
mov
fnsave
jecxz
add
rcrl
scas
mov
adc
stos
movsl
das
inc
jmp
jne
and
or
imul
outsb
addl
and
lock
hlt
inc
aas
test
mov
mov
int3
mov
cmp
data16
lcall
out
into
repnz
xchg
or
stos
mov
jg
je
pop
notl
into
in
test
popa
pop
mull
sahf
arpl
cli
push
sahf
lret
inc
loope
pop
add
xor
xor
jge
test
pop
inc
adc
dec
and
fstps
push
imul
insl
inc
notb
scas
cld
or
pop
mov
mov
cmp
test
out
repz
jg
and
ja
pop
cltd
or
aaa
rcrl
push
divl
stos
inc
and
popf
add
adc
sub
pop
int
sbb
dec
idiv
data16
mov
or
lret
test
int
pop
enter
mov
and
leave
dec
inc
test
ret
fidivrs
pop
int
jnp
sarl
flds
cmp
insb
and
sub
gs
arpl
jle
int
dec
insb
adc
cli
push
lcall
lods
lret
stos
fs
scas
movsb
leave
jno
insb
popf
movb
adc
pop
fwait
pushf
jmp
mov
test
loopne
clc
subb
scas
xchg
and
lahf
mov
out
sbb
add
lret
inc
sbb
or
jg
rcl
or
sub
loopne
imul
popf
cmp
add
in
out
mov
xchg
movsb
test
pusha
adc
jae
ret
and
xchg
xor
cmp
out
test
or
lock
lcall
inc
or
mov
and
jne
adc
cmp
and
mov
std
mov
xchg
xchg
test
daa
jnp
and
std
sub
aam
out
aam
test
loop
int
mov
pop
nop
push
mov
cmp
mov
mov
rclb
testl
scas
mov
mov
test
stos
adc
rcr
xchg
lret
pop
mov
cld
addr16
adc
mov
jne
ret
inc
cltd
int
xor
jl
pop
sbb
scas
stos
stos
pop
add
mov
pop
fisttpll
dec
sub
in
divl
hlt
mov
adc
test
fadd
outsl
jb
jl
leave
sub
out
xchg
loope
dec
aad
repz
test
stc
sbb
fisubs
xchg
iret
adc
loopne
inc
aam
sarb
mov
in
leave
andb
adc
cmpsb
xchg
mov
jbe
or
mov
adc
adc
aad
es
sti
mov
cmpsb
xchg
pop
adc
jb
adc
scas
iret
dec
stos
mov
mov
out
test
rorb
cli
mov
jecxz
movsl
push
loope
imul
push
fdivrp
sbbl
sub
repz
dec
jne
movsl
fsubrs
loope
sbb
stos
jl
mov
aaa
divl
mov
das
inc
lods
sbb
add
pop
push
test
dec
dec
movsl
xchg
or
xchg
test
jecxz
xchg
lret
cmp
push
adc
dec
pop
push
lret
xchg
dec
xor
pushf
mov
mov
stos
pop
into
lds
outsl
movsb
rcrb
pop
icebp
and
cmp
push
bound
adc
clc
or
xor
push
vmovq
sbb
ret
push
ret
sub
cmp
jo
stos
inc
call
lahf
sbb
int3
mov
fldl
push
pop
adc
dec
adc
insb
add
hlt
sub
shll
xlat
mov
pusha
mov
add
lods
outsl
cmpsl
test
pop
aas
sbb
push
daa
stc
push
push
cmc
mov
or
cmp
or
pop
fwait
mov
comiss
movups
shll
jecxz
shlb
xchg
pop
pusha
shrb
pop
or
movsl
js
sub
sti
adc
aas
ds
pop
and
cmp
iret
cmc
repz
adc
push
xchg
xor
cld
ja
loope
daa
insb
jns
lret
pop
enter
or
push
xor
inc
and
mov
stc
mov
shrb
into
arpl
or
int3
mov
mov
pushf
repnz
stos
rcll
negb
inc
adc
pop
jb
push
sub
insb
cmpsb
mov
push
pop
aam
dec
fidivl
cmc
into
jo
sbb
lahf
orb
movsb
andl
sbb
inc
or
mov
pop
je
jne
shlb
xor
cld
popa
repnz
cwtl
jno
in
cs
fiadds
test
add
pop
ret
dec
xor
sar
outsb
cmp
jo
orb
jne
repz
das
clc
nop
xor
xor
push
push
js
gs
das
fucomi
or
leave
idiv
ret
out
add
rcrl
jno
dec
test
push
fcomi
sbb
mov
ret
int3
hlt
dec
lret
mov
xchg
iret
jle
decb
cltd
repz
or
jo
or
push
pop
nop
fists
test
sbbb
popw
push
cmp
in
mov
loopne
pop
jae
enter
inc
scas
dec
loop
popa
jae
pop
outsl
mov
lods
cmp
mov
push
xor
xchg
pop
bound
pop
mov
and
arpl
dec
stos
mov
test
inc
xor
mov
mov
testb
gs
xchg
sub
mov
imul
shl
call
and
ret
mov
xchg
jno
inc
add
rcrb
mov
or
mov
cmpl
or
dec
mov
shl
data16
xchg
jnp
jae
gs
adc
jb
repz
and
negb
jae
mov
icebp
dec
adc
adc
adc
adc
sbb
mov
xor
stos
mov
sub
scas
jo
sarl
cmpsb
sbb
call
nop
push
push
dec
adc
cmp
push
ja
ret
std
fcmovbe
js
das
rol
mov
sub
mov
push
cmp
popf
xor
popa
cmp
xor
rcr
xchg
and
fcom
faddl
sbb
xor
js
das
inc
adcb
loop
shlb
arpl
push
ret
lock
arpl
loop
ds
jne
not
shll
enter
jno
out
cwtl
sub
sahf
stos
fmuls
lcall
mov
cmp
mov
xchg
out
ds
aad
inc
rcrl
xchg
das
xchg
cmp
or
jmp
mov
iret
imul
or
test
xor
and
push
adc
rep
aad
sbb
std
mov
sub
cld
mov
leave
cld
or
in
sbb
mov
rcl
loopne
fcomip
stos
add
xchg
daa
xlat
stos
xchg
push
jno
stos
sti
mov
fs
inc
or
xor
dec
stos
mov
rcll
adc
sbbb
push
adc
jmp
pop
pop
stc
dec
dec
int3
add
lods
les
stc
pop
stc
leave
in
rcrb
adc
gs
imul
imul
pop
shlb
add
mov
pop
cmp
shll
jecxz
test
and
out
arpl
sub
mov
jne
fwait
pop
fst
das
mov
sbb
and
pop
inc
add
cltd
or
ja
ja
jge
cmp
aam
pop
incb
daa
adcl
aaa
push
and
adc
in
mov
into
inc
jmp
pusha
ret
jg
rol
pushf
push
jle
pop
jbe
sub
mov
cld
repz
jp
test
mov
sub
mov
xchg
xor
jle
insb
aad
add
and
mov
clc
inc
adc
xchg
fnstenv
pop
mov
or
sbb
data16
addr16
push
mov
pop
in
or
mov
cmp
push
js
inc
dec
jl
push
fnsave
dec
xor
lcall
arpl
cld
cltd
jmp
push
cmp
mov
gs
fdivr
scas
popa
ret
push
insb
outsl
and
mov
add
and
in
sahf
inc
push
or
dec
pusha
loope
andb
inc
fwait
adc
aad
testl
addr16
cwtl
sub
mull
mov
test
andl
repnz
movl
jne
sbb
mov
negl
dec
jb
mov
fldt
sbb
imull
and
cmc
stos
inc
mov
jae
jge
nop
cltd
sub
push
sbb
adc
mov
ss
pop
mov
pop
dec
pop
xchg
sub
add
add
sets
xlat
ja
sti
dec
push
aas
mov
call
xlat
lcall
xchg
cmpsl
repnz
and
xor
cmp
xor
or
sub
shrb
repnz
mov
jl
xor
inc
ret
mov
or
mov
fucomp
cmp
and
repnz
sbb
into
pop
xchg
cmp
add
icebp
adc
xor
add
adc
sbb
nop
in
mov
and
shrl
push
mov
mov
frstor
push
std
push
aaa
jl
cwtl
subl
ret
lock
mov
dec
push
and
add
xor
fisubl
stc
lods
incl
mov
jecxz
push
les
lods
test
daa
mov
bound
xchg
mov
daa
cwtl
ja
fnstenv
movsl
push
cs
jne
mov
into
lret
pop
mov
fsub
inc
push
cwtl
mov
or
loop
cmp
test
lds
pop
sahf
dec
shrb
fisubs
fstl
addl
cltd
push
pop
mov
fwait
and
xchg
movb
or
ficoms
xor
bound
jbe
pop
movsb
cld
les
fxtract
mov
pop
and
ficoms
cld
mov
sbb
xor
sub
mov
inc
insl
or
dec
in
dec
ljmp
xchg
pop
mov
scas
lds
or
enter
xor
jno
arpl
lcall
lret
cwtl
push
jl
sub
add
adc
jge
push
mulb
outsb
adc
leave
mov
ds
adc
and
jle
fcomp
pop
mov
aad
dec
add
call
cmp
add
mov
adc
xor
es
jae
lea
dec
and
inc
pop
pop
mov
aad
aaa
and
add
push
loopne
jecxz
test
xchg
nop
push
or
pop
mov
into
push
inc
aam
cmp
mov
pop
push
aam
xchg
bound
mov
popf
cs
lock
out
adc
or
inc
sbbl
push
sbb
outsb
fcompl
ret
fnstsw
mov
cltd
or
push
mov
je
add
ret
popa
jg
mov
jp
cli
mov
or
fs
repz
pop
add
jecxz
jp
xlat
movl
mov
xor
mov
pop
sbb
mov
and
stc
sbb
repz
aas
add
pop
in
and
push
ret
mov
bound
loopne
mov
inc
sbb
std
dec
fs
mov
jmp
push
cmp
scas
push
out
jae
cmp
xchg
mov
push
or
add
jae
lret
lods
repz
inc
gs
push
xchg
or
push
add
push
xchg
push
and
add
xchg
xchg
scas
cmpsl
mov
fwait
sbb
pop
inc
rorb
movsb
jge
mov
lcall
jl
das
jecxz
jno
andb
pop
loopne
ds
sbb
lods
call
xor
and
jecxz
out
and
mov
sbb
addr16
arpl
dec
rorl
mov
inc
imul
mov
shlb
lret
in
insl
adc
jns
inc
lahf
adc
fistps
jecxz
push
call
jmp
sub
movsl
cmp
push
xor
add
jo
mov
mov
cmp
out
mov
mov
int
outsb
dec
lahf
mov
out
jns
inc
or
xor
cli
inc
repnz
xchg
xor
and
shll
fdivrp
outsl
mov
xor
outsl
js
js
dec
or
and
outsl
mov
subl
subb
jbe
clc
push
arpl
xchg
push
add
mov
leave
lods
out
pop
out
addr16
mov
and
leave
leave
mov
mov
push
fsubl
xor
jg
lods
fs
lock
js
aad
push
popa
data16
inc
pop
pusha
lcall
mov
arpl
mov
xchg
mov
addb
jnp
pop
iret
fidivrs
loopne
rolb
pop
add
push
inc
mov
js
cmp
fsubl
pop
adc
cld
adc
movsb
xor
ss
adc
cld
push
test
in
arpl
mov
xchg
pop
sarb
jno
pop
xchg
shll
xchg
add
cmp
or
sete
in
push
rcl
cmp
mov
sub
lahf
into
sub
inc
xchg
jae
xchg
aaa
xchg
push
or
adc
mov
repnz
sbb
inc
add
jb
out
ss
or
mov
lret
fwait
jbe
cli
dec
ljmp
push
mov
imul
loop
xlat
push
icebp
fstps
and
fcomip
mov
das
mov
dec
sbb
popf
std
pop
push
cli
lret
daa
rorl
lods
iret
pop
out
test
jge
in
xchg
int3
lahf
into
rcrl
clc
xchg
test
xchg
cs
ds
or
adc
ret
in
jns
cmpsb
jns
pop
int
mov
ljmp
lret
jae
and
cltd
pushf
dec
inc
jb
test
sbb
or
cmp
jecxz
cmp
jp
out
mov
cmpl
jle
aad
mov
sahf
loop
int3
mov
lea
into
test
icebp
sbb
pushf
push
xor
jmp
inc
jmp
sub
cmpsb
push
ror
shll
sub
mov
push
jp
xor
mov
fwait
mov
test
push
cmpsl
shr
pop
into
out
add
jp
inc
adc
fadd
add
sti
mov
push
or
sbb
jg
fldl
dec
es
xor
sarl
mov
xor
adc
fsubrl
push
pop
popl
dec
pop
jno
or
dec
xchg
sarb
dec
push
rcrb
mov
repnz
and
in
dec
rorl
leave
ja
dec
sahf
ja
jns
testb
scas
pop
push
jnp
cmp
or
add
mov
jo
leave
add
aam
sub
dec
dec
call
xchg
xchg
mov
or
mov
fninit
push
and
cmp
aaa
or
mov
xorb
mov
add
push
aas
leave
out
aam
mov
sbb
mov
repnz
cmp
ljmp
inc
adc
push
mov
push
out
popf
insl
cmp
cmp
xor
push
std
int3
flds
pop
mov
mov
out
fidivrs
mov
adc
mov
sbb
or
cmp
dec
mov
movsb
fistpll
dec
ret
push
mov
fimuls
icebp
mov
mov
stos
jnp
mov
rcr
xchg
push
loop
cli
cmp
and
lods
cld
push
xlat
push
push
mov
rolb
jo
or
iret
xor
push
sti
subl
jo
jae
movsb
fidivl
xchg
fstl
lcall
xor
pop
sbb
dec
je
mov
fmul
fldl
rclb
inc
loope
in
hlt
je
mov
in
inc
lods
jae
in
sbb
ljmp
pop
mov
xor
test
sub
int3
addb
mov
and
and
roll
daa
xor
and
stos
ret
inc
mov
pop
xor
aas
mov
pop
es
daa
movsl
repz
enter
nop
sub
or
sub
and
faddl
shll
mov
lret
mov
cmpsl
dec
popf
push
andl
and
daa
insl
aad
add
cli
add
pop
pusha
xor
jb
cmp
mov
leave
pop
popa
fwait
cmp
push
fisttpll
sub
cld
cmc
jnp
std
pop
xor
jle
xor
pop
popa
or
cwtl
lock
lahf
jnp
pop
xchg
in
xchg
or
ds
rol
adc
mov
push
and
xor
sub
in
adc
mov
mov
adc
push
inc
jns
dec
enter
sub
xlat
inc
xor
cltd
cs
xor
aas
mov
leave
jb
int
cmpsl
out
lcall
fiaddl
mov
insl
das
test
jle
xchg
lock
aad
xchg
lahf
adc
mov
dec
sar
out
cmp
jne
mov
in
adc
sub
fisubl
into
ss
cmp
xchg
and
and
js
xor
iret
mov
dec
mov
push
add
in
xlat
shl
jecxz
jmp
xchg
adc
ds
or
push
jl
add
lahf
cmp
add
arpl
pop
movsl
push
out
mov
cmp
or
and
mov
push
and
in
cmp
aad
es
bound
mov
in
outsl
push
data16
adc
out
add
cmp
xor
mov
or
mov
sbb
push
ficoms
leave
outsb
in
aaa
xor
inc
pop
inc
mov
outsl
push
cmp
add
test
mov
adc
lret
mov
mov
addr16
mov
loopne
rcll
test
fists
repnz
or
imul
jle
mov
mov
es
xor
es
mov
ret
mov
xchg
loope
mov
mov
xchg
into
sbb
or
iret
loopne
js
mov
inc
das
sbb
arpl
or
inc
cld
enter
fs
push
push
repnz
out
mov
mov
push
mov
cmp
mov
sub
test
jl
jb
mov
cmp
jne
xchg
xor
ret
push
adc
arpl
fstl
call
les
cli
cwtl
adc
dec
dec
not
sarb
xor
scas
jbe
cwtl
sub
ret
mov
mov
ret
lods
cs
push
adc
jecxz
adc
loop
lcall
push
aaa
push
test
ret
imulb
lods
pop
mov
shrb
mov
push
leave
fidivs
outsl
insb
inc
jmp
in
les
jp
lahf
outsl
mov
stc
inc
fcoms
mov
xchg
fidivrl
int
sub
sbb
call
push
xchg
and
mov
xchg
pop
sub
enter
movl
jnp
popf
push
mov
adc
inc
mov
cmp
iret
jo
lock
ror
cmpsl
or
dec
xor
sub
and
das
pop
insl
pop
nop
mov
push
jae
cmp
jmp
or
enter
xor
lds
inc
lods
gs
xchg
movsl
icebp
das
or
cmp
lock
imul
cmpsb
mov
sub
fidivrs
fisttpll
lcall
push
hlt
cltd
adc
hlt
jl
popf
rcrb
scas
in
lcall
std
ret
outsb
imul
adc
into
push
fmull
fnsave
addr16
loopne
into
jp
mov
ds
jo
push
cld
jae
sub
scas
inc
aam
push
inc
sub
test
fsubl
or
dec
sub
or
repz
or
xor
add
insb
xor
dec
popf
int
push
stc
test
mov
mov
popf
jmp
inc
aad
sbb
shl
movsb
out
js
cwtl
sti
cmp
pop
test
out
mulb
cmp
orl
scas
sub
pop
adc
cltd
dec
mov
inc
push
mov
insl
dec
stos
add
das
es
pop
push
outsb
xchg
jle
jge
ja
jns
and
ss
scas
and
jns
je
or
pop
pop
adc
inc
sbb
cwtl
shlb
subb
push
shl
pop
orl
loope
pop
adc
dec
ret
mov
jge
adc
decb
add
dec
sub
bound
and
aas
inc
aam
imul
scas
push
mov
xor
lret
push
das
rcrb
movsb
outsb
test
inc
jo
ja
sub
cli
movsb
jle
les
push
leave
jecxz
cmp
aad
mov
loopne
mov
mov
mov
pop
sub
cmc
xchg
mov
cwtl
inc
and
idivl
pusha
jge
jg
rorl
inc
jno
jo
lea
test
dec
stc
sbb
ret
pushl
adc
mov
mov
xchg
jne
mov
in
xor
jbe
push
and
or
shl
in
out
jnp
mov
outsl
or
push
jmp
sbb
cmp
les
jmp
lods
mov
jecxz
pop
mov
jecxz
stc
cli
inc
leave
loop
or
push
xchg
mov
jmp
ja
cmp
popa
jo
mov
repnz
mov
mov
sbb
push
pop
mov
fidivl
cmpsb
pushf
fisttpl
lret
fcmovnbe
jns
cmp
dec
jmp
jae
mov
mov
pushf
movsb
aaa
or
mov
xchg
mov
mov
pop
ss
fistpl
ljmp
daa
pushf
cmp
mov
inc
inc
ja
mov
cld
aas
cwtl
mov
mov
je
cmp
dec
and
xchg
jg
xchg
or
adc
or
lahf
std
clc
enter
jb
js
jl
movsl
pop
sub
decb
movsl
add
stc
jb
pushf
mov
in
cmp
mov
lret
xchg
mov
rcr
cs
repz
jnp
shr
push
inc
test
movsl
dec
or
xchg
mov
out
bnd
jnp
inc
or
clc
inc
pop
fwait
lods
out
and
cmc
and
and
mov
in
dec
scas
imul
inc
outsb
xor
pop
adc
mov
mov
fsts
cmpb
cmp
mov
loop
cmp
mov
mov
xor
nop
andb
imul
xchg
xor
fcomps
out
inc
jbe
pop
ja
cmp
nop
ja
push
cli
xor
sub
gs
xchg
jge
cmp
push
sub
dec
lods
hlt
imul
test
add
add
xor
add
pushf
ret
mov
in
addr16
mov
call
stos
push
rorb
push
mov
fcomps
and
jl
inc
rorl
repz
movsl
shlb
lods
pop
psrlw
pushf
and
pusha
adcb
add
jl
mov
lea
dec
or
sub
out
shll
adc
hlt
jmp
push
je
aam
mov
inc
cmp
jl
pop
out
rol
dec
bnd
imul
add
in
jns
jns
fsubrl
push
popa
out
push
dec
pop
sub
outsl
pusha
push
xor
in
adc
data16
lret
cmpsb
mov
push
outsb
aaa
arpl
pop
sbb
addb
xchg
add
cmp
test
jecxz
lret
std
out
cmp
inc
loope
dec
mov
sub
ret
ficoml
mov
and
xchg
testb
aad
sub
aas
test
sti
add
xor
out
sti
fs
cli
sbb
loope
pop
cld
fcoml
and
jns
popf
imul
push
sub
pushf
or
arpl
shlb
cwtl
dec
lea
xor
into
in
and
test
and
push
push
jno
icebp
mov
lahf
mov
stos
lret
push
adc
mov
gs
xchg
ret
pop
inc
push
sub
test
xchg
mov
xor
test
mov
inc
and
sti
cli
movsl
cmp
cmp
pop
iret
push
add
aas
add
mov
jl
mov
inc
ret
std
jne
sbb
arpl
ss
push
out
imul
xor
sub
pop
dec
aam
pushf
call
cmc
cltd
ljmp
cmp
pop
pop
out
xchg
insb
icebp
mov
lods
jecxz
inc
push
fdivr
push
aam
pop
jnp
out
xor
cwtl
mov
ja
or
xchg
imulb
repz
or
roll
jns
mov
ja
xor
mov
jg
or
jl
fwait
test
inc
mov
push
cmp
test
and
das
xor
in
pop
aaa
adc
or
sarb
jnp
ror
arpl
add
pop
lahf
push
pop
aaa
jmp
cmp
fdivs
ljmp
adc
scas
add
adcl
cmp
mov
stos
mov
dec
sub
xchg
jg
mov
test
adc
sub
fnstenv
mov
mov
js
mov
mov
div
subl
xchg
outsb
iret
mov
jo
arpl
imul
nop
popa
mov
hlt
inc
bound
shrb
add
cmc
jae
popa
ja
push
fdivrs
sbb
or
das
inc
stc
incl
hlt
mov
jnp
outsb
faddp
and
add
repnz
lret
into
in
push
nop
adc
test
inc
mov
jno
pop
lret
mov
in
mov
cmpsb
lock
xchg
cmp
mov
jmp
shrb
mov
enter
inc
mov
xchg
and
jecxz
cld
cmp
rcll
mov
sub
les
in
repz
dec
lahf
dec
shr
adc
pop
stc
push
or
jne
inc
call
adc
in
sar
pushf
inc
xor
pop
addr16
gs
jno
decb
mov
xor
jns
dec
dec
mov
les
mov
es
push
sbb
push
popf
xchg
cmpsl
insb
dec
outsb
cmp
adc
or
sbb
adcb
mov
or
jmp
lcall
stos
out
xchg
sub
or
imul
lcall
cmp
xlat
out
ficoml
rcr
or
fisubl
pop
fsts
int3
and
xchg
inc
imul
xchg
pop
or
push
xchg
rolb
ljmp
mov
pop
imul
fwait
mov
cmpsl
ret
cmp
mov
inc
push
iret
lods
pushl
jo
rcrl
jns
xchg
add
out
sub
pop
fs
test
lds
xchg
dec
mov
inc
scas
cwtl
mov
inc
cmp
cmc
out
in
cmp
dec
jno
arpl
lea
arpl
shrl
stos
adc
jbe
mov
push
fldenv
test
inc
loop
sbb
out
movntq
or
push
popa
sbbl
aaa
or
cmp
mov
push
xor
insb
mov
mov
into
stos
pusha
mov
mov
inc
adc
and
roll
faddl
inc
jno
add
xor
mov
inc
std
notl
lea
sub
cli
mov
outsb
loop
jno
push
sbb
or
push
aam
js
xchg
cwtl
adc
adcl
xlat
xchg
mov
pop
vaddss
xchg
cwtl
clc
aas
cmp
mov
js
in
adc
sti
xchg
inc
mov
fnsave
js
movsl
or
ror
test
pop
mov
fistps
xchg
fnstsw
cmp
or
jmp
xor
mov
insb
inc
pop
mov
sbb
stc
test
fwait
cmc
fwait
stc
and
adc
loop
and
orb
int
xor
popf
xlat
clc
and
lods
test
shlb
stos
xor
mov
pop
jmp
or
into
sbb
aad
aam
enter
jle
lods
push
dec
pop
out
mov
xchg
out
rcll
xchg
fs
rclb
push
lock
aam
sti
inc
jmp
lods
push
xor
xchg
xchg
insb
pop
pop
sub
mov
les
cmpsl
insl
dec
cmp
jge
and
xor
jae
enter
and
rclb
mov
out
pop
jno
push
call
lods
fldcw
mov
in
stos
jecxz
or
mov
or
add
lock
lds
ffree
repnz
jne
pop
adc
cmp
pop
jmp
fadds
pop
mov
cs
test
mov
jg
divl
mov
jb
mov
adc
push
repnz
out
pop
adc
mov
bound
xchg
stc
jae
int3
jmp
sbbl
push
mov
mov
es
es
dec
jns
pop
jle
mov
out
xchg
xchg
test
cltd
imull
shl
jo
loopne
add
mov
iret
jnp
pusha
mov
or
mov
fcomps
outsb
adc
data16
orl
push
popf
mov
inc
xor
push
push
or
add
pop
bound
sub
test
aam
jno
jge
aas
popa
adc
dec
or
aas
rcrl
fmuls
inc
and
cmp
sub
or
dec
fnsave
inc
cmpsb
mov
stc
inc
ret
int
test
mov
and
xor
mov
rclb
mov
std
inc
or
push
stos
sti
or
cmc
rdpmc
aam
lret
fistpl
test
add
mov
arpl
es
fmul
xchg
adc
mov
add
and
mov
xchg
sbbb
lods
popf
jbe
xchg
lea
dec
cmp
lea
in
mov
leave
fsubrs
lods
mov
shll
push
mov
ret
xchg
fdivr
ljmp
imul
imul
scas
stos
lcall
repnz
add
dec
mov
cmp
inc
mov
mov
bound
stos
pop
pop
outsl
cltd
popa
icebp
push
pop
dec
adc
in
pop
inc
mov
dec
xor
std
sbb
add
les
add
sbb
dec
arpl
imul
dec
dec
test
mov
pop
scas
xchg
xchg
test
ret
je
test
decb
or
ret
leave
mov
cmpsl
data16
pop
loop
mov
popa
add
mov
mov
nop
jns
sbb
stc
inc
pop
or
ja
out
enter
add
push
sbb
fistl
fs
js
stc
and
cmp
cmp
mov
in
pop
adc
jge
jge
es
rcr
mov
mov
cmpb
sub
jae
shrl
and
adc
mov
je
add
mov
shrl
repz
cmp
fldl
insb
pushf
pop
mov
mov
adc
xor
test
loop
adcb
adc
push
cmpsl
mov
in
sbb
mov
sub
stos
mov
push
xor
jns
push
lcall
int
stc
xchg
add
push
fidivs
pop
nop
and
mov
in
movsl
ret
cmpsl
jne
pushf
fmuls
movsb
loopne
and
icebp
adc
mov
sbb
stc
ss
fdiv
jns
iret
xor
xor
test
xchg
es
dec
jb
fsubl
insl
sub
sbb
cli
rcl
jg
test
jnp
js
movsb
sti
jb
push
dec
icebp
dec
in
stos
pop
int3
inc
movl
dec
cld
mov
insl
add
xchg
pop
add
lods
daa
mov
scas
push
cmpsb
testl
xchg
cmpb
pop
mov
es
inc
clc
mov
jl
pop
add
sti
pop
lea
cmp
mov
push
in
xor
or
xor
fnsave
pop
adc
cs
add
push
or
sbb
cld
jmp
or
outsl
shlb
adc
es
push
mov
pop
or
dec
xchg
push
pop
xor
pop
cmpsb
movsl
stos
sub
hlt
sbbl
aad
jo
fwait
push
rclb
aad
scas
jg
jle
outsl
inc
push
insb
int3
sub
inc
push
mov
cmpsb
pop
push
inc
fiadds
decl
push
xchg
mov
sub
sbb
pop
rcrl
data16
ja
inc
xchg
loope
int3
add
repnz
xchg
das
test
loope
jo
mov
and
dec
sub
in
jae
lret
ss
rolb
xchg
add
lock
push
lret
jns
jecxz
ret
fwait
out
dec
and
int
lcall
outsl
divb
lahf
out
cmp
pop
mov
dec
in
loope
int3
mov
cltd
outsl
in
frstor
fisubrs
sahf
mov
dec
mov
lret
xor
popf
lock
push
mov
addr16
push
and
mov
push
cmpsl
in
adc
enter
jno
xlat
mov
inc
imul
inc
xor
into
dec
xchg
cli
xor
xchg
mov
lcall
push
stos
xor
daa
ret
in
dec
dec
mov
inc
cmp
lahf
inc
test
cli
fiadds
sbb
fnsave
aad
lds
fcom
or
pop
out
arpl
outsb
jg
and
xlat
jne
mov
push
jmp
pop
push
imul
loopne
out
push
fdivrs
xor
shlb
mov
jae
add
xchg
leave
cmpsl
repnz
jp
faddl
fbstp
lds
in
ja
aas
push
pop
int
pop
or
xchg
mov
test
xchg
out
push
rolb
pop
lods
xchg
pop
push
mov
fstpl
and
push
mov
sbb
aaa
push
jae
mov
pushf
loop
movsl
or
mov
insl
pop
jle
jmp
lret
and
fnsave
xor
pushf
sbb
int
dec
mov
nop
sahf
jb
lods
add
jle
pop
psubd
mov
adc
sub
shlb
adc
in
lcall
jge
jnp
shr
inc
mov
into
ret
icebp
push
sahf
lret
or
lret
pop
ror
xchg
mov
xor
jae
add
insb
mov
imul
sbb
mov
inc
cwtl
or
into
sub
ja
mov
in
nop
mov
mov
xchg
mov
in
aaa
pop
jg
mov
pop
push
or
shlb
sti
shlb
repnz
pop
cmp
push
pop
scas
out
mov
mov
notb
jne
cmp
enter
pop
stos
dec
roll
xchg
mov
mov
sbb
push
daa
clc
xor
sbb
aad
std
imul
imul
test
ja
mov
ljmp
aam
mov
pop
lret
ja
out
movsl
popa
bound
fs
scas
outsb
cmp
or
or
pop
lea
jbe
mov
rolb
test
cmp
inc
mov
lock
adc
mov
or
call
pushf
xor
cmpsb
les
xchg
fcmovu
or
jbe
sbb
xor
lret
jg
ret
ja
dec
scas
cmp
or
bound
aaa
jae
mov
int3
jmp
movsl
cwtl
sub
in
fwait
int
popl
and
fsubrs
adc
cmp
gs
das
and
fs
loope
repnz
jno
mov
sbbb
ja
lret
mov
leave
mov
dec
iret
scas
cmp
jmp
clc
lret
testb
add
aam
jp
lds
xor
nop
or
sbb
out
mull
sbb
ss
aam
adc
cmp
xchg
xor
mov
and
aad
or
loop
jmp
mov
push
cs
outsb
insb
stc
cmp
jmp
jmp
mov
xchg
cs
cmp
leave
dec
xchg
mov
sub
outsb
jp
dec
mov
lret
mov
and
or
fimuls
pop
sbb
add
pusha
loopne
xchg
in
test
das
mov
daa
in
rclb
pop
std
insb
les
outsb
xchg
push
nop
inc
insl
stos
pusha
jmp
and
fidivrs
push
pop
xchg
sub
fsts
mov
outsb
mov
pop
xchg
subb
and
mov
or
push
rcrb
ret
cmp
int3
push
jo
or
xor
into
sub
les
xor
in
leave
cwtl
jge
pop
mov
add
movd
mov
mov
mov
dec
clc
jle
xlat
sbb
int
and
lds
pop
test
out
sbb
inc
out
shll
mov
sub
jnp
push
sub
cmp
or
xchg
fidivrl
divl
in
fiadds
sub
test
xor
mov
or
stos
inc
mov
mov
pop
stos
sbb
mov
sbb
in
jo
cltd
or
push
adc
jle
repz
sub
mov
in
aad
not
sub
in
xchg
mov
xchg
jecxz
imul
aaa
rcll
clc
jo
mov
mov
imul
jbe
xorb
dec
loopne
shll
rcrl
mov
pop
pop
dec
inc
xor
push
imul
outsl
sub
movsb
int3
or
popf
ss
scas
xchg
loopne
lock
inc
cltd
mov
and
adc
xchg
roll
into
push
movsb
jmp
ret
cld
mov
pop
and
lock
into
mov
fs
faddl
outsl
pop
cli
cmpb
enter
or
xor
cli
inc
adc
add
pusha
sahf
movsb
mov
adc
aaa
lcall
inc
push
movsb
xor
inc
mov
xchg
shl
jbe
fstp
dec
sbb
adc
gs
shll
and
pushf
xchg
xchg
aas
movsl
ljmp
test
in
mov
call
ret
push
dec
filds
xchg
cmp
xchg
int
jecxz
jmp
inc
cmpsb
mov
cs
cld
or
xchg
adc
pop
xchg
xor
jae
xor
xchg
fiaddl
popa
cmpsb
dec
mul
cli
add
loop
sbb
jbe
push
inc
stos
pop
mov
mov
add
ss
add
inc
mov
lret
xor
push
mov
jl
out
and
xchg
mov
movsl
fcomps
lock
sbb
push
xchg
in
push
jnp
or
stos
ret
jns
stc
scas
mov
pop
imul
repnz
js
sub
fstl
push
into
daa
lods
fisubrs
aad
out
mov
xlat
insb
mov
mov
mov
xor
lods
shll
xchg
xchg
into
cmp
mov
movsb
bound
scas
dec
cmp
lahf
sub
and
sbb
lret
addr16
dec
dec
or
xchg
push
movsl
lret
repz
sub
sarb
frstor
or
adc
mov
inc
push
mov
pop
add
mov
and
mov
mov
ficoml
sbb
jnp
pop
out
ret
loope
sbb
cld
inc
fistl
sub
int
nop
pop
cmp
int
inc
out
dec
push
scas
ret
and
push
leave
ret
jecxz
mov
aam
xchg
lock
jns
push
or
dec
mov
nop
xor
or
add
xor
jl
dec
insl
mov
out
and
negl
mov
les
negb
test
jecxz
sub
addr16
rsm
in
sahf
jbe
rolb
int3
cld
gs
test
pop
ljmp
fstpl
outsl
js
inc
jg
jae
gs
orl
mov
andb
sub
imul
jg
lret
inc
or
int3
into
lock
cmc
xchg
jecxz
mov
roll
pop
jmp
mov
xlat
dec
adc
xor
leave
mov
inc
push
push
pop
xlat
inc
push
jae
add
pop
fstps
leave
inc
out
push
xor
je
fsubrl
or
iret
shl
mov
dec
pop
adc
xor
pop
js
xchg
dec
lods
add
jl
mov
rorb
out
enter
cmpsl
xchg
aad
pop
cmp
les
out
pop
adc
sahf
fwait
or
or
test
mov
imul
push
xchg
test
pop
mov
adc
fwait
mov
das
sbb
sbb
daa
punpckhwd
shl
push
es
xchg
mov
cli
sbb
lods
push
sub
mov
sub
pop
adc
daa
mov
int3
lods
lahf
leave
pop
ja
into
in
mov
or
call
inc
dec
mov
test
insb
in
scas
mov
mov
adc
cmp
mov
adc
mov
mov
sti
loopne
pop
dec
fisubs
loope
stc
test
out
das
mov
cld
xor
iret
jp
pop
rep
sbb
jecxz
insb
xchg
dec
push
ret
cltd
loop
jg
fwait
call
sub
ror
scas
push
jbe
pop
shl
je
cmp
pslld
clc
cmpsl
adcl
je
jae
fcom
insb
ss
pop
inc
xchg
xlat
vpavgw
and
jne
lret
adc
sbb
jo
outsb
movsl
loopne
and
inc
out
aas
cmp
jae
inc
mov
dec
jg
fcoms
mov
adc
test
pop
cmc
xlat
dec
lods
in
ja,pn
xlat
stc
mov
stos
sbbl
add
jg
loop
das
ds
pop
js
push
add
xchg
and
mov
xor
loope
lods
mov
je
mov
fsts
add
push
push
inc
xchg
adc
sar
shll
xchg
xor
push
test
or
into
dec
arpl
inc
cmp
mov
mov
inc
push
mov
lret
mov
sahf
ljmp
cmpsb
jp
mov
jmp
and
and
test
loop
arpl
and
lret
adc
ffree
xchg
cmpsb
nop
iret
int3
add
insb
pop
stos
jns
roll
mov
bswap
jl
mov
in
arpl
in
arpl
rcll
mov
scas
push
push
adc
cwtl
xchg
bound
in
xchg
hlt
lods
adc
dec
aaa
jl
test
push
cmpsb
or
les
mov
inc
test
mov
xor
mov
addb
mov
add
loop
pop
sub
xor
test
icebp
aaa
ror
and
js
sbbl
mov
dec
xchg
ret
mov
cmp
sbb
ds
bound
lods
dec
pop
xchg
jb
fimull
add
je
cwtl
mov
dec
das
sub
insb
es
lods
lods
adc
jge
and
jns
loope
dec
xchg
or
cmp
push
in
fsubrl
push
mov
addr16
jecxz
jge
mov
es
adc
jg
fadds
xchg
daa
dec
out
jno
je
rorb
xchg
dec
cmc
jle
sbb
daa
jl
jbe
jo
insb
push
pop
mov
icebp
sub
js
mov
ljmp
mov
and
dec
test
out
dec
mov
pusha
mov
lret
inc
gs
jno
push
int3
xchg
fisubl
pusha
aam
sbb
subl
sbb
jnp
mov
pop
push
cwtl
movsb
inc
in
pushf
mov
xor
sarl
call
cmpsb
lahf
iret
mov
and
cmpsl
pop
imul
int3
icebp
pop
ror
rolb
or
movlps
jae
sbb
pop
stos
sub
adc
in
adc
loop
cs
mov
jbe
mov
adc
testb
enter
push
les
pop
rolb
repnz
inc
sbb
push
stos
and
mov
pop
outsl
lods
adc
mov
adc
cmp
cmpsl
jmp
and
rcrb
sahf
outsb
cmp
imul
in
adc
shlb
fldl
arpl
and
pop
push
das
out
pushf
test
data16
shl
fadd
ja
rolb
imul
pusha
fnsave
mov
arpl
pop
sbb
test
test
pop
sub
mov
mov
cwtl
ds
loope
scas
inc
pop
inc
in
adc
pop
adc
mov
sarb
fdivr
push
xchg
lds
cmp
lds
daa
bound
rorl
orl
sbb
dec
dec
je
lods
xlat
sub
fs
inc
lret
adc
daa
push
fstpl
test
dec
add
mov
sub
hlt
pop
fldl
lcall
cmp
aam
enter
cli
outsb
dec
daa
jbe
loop
mov
xor
lret
sbb
daa
imul
loop
aaa
idiv
dec
cli
idivl
or
inc
imul
and
cld
popf
aad
in
push
les
mov
jmp
xchg
jecxz
xchg
or
pop
sar
adc
aam
push
addb
stc
adcl
das
test
add
lods
fisubl
ja
sub
dec
movsb
xchg
fdivr
mov
cwtl
add
xchg
inc
je
mov
int3
stos
push
jl
sbb
cmp
js
movsb
pushf
ja
push
pop
sbb
lods
test
mov
popf
ret
push
sbb
push
scas
and
out
push
inc
add
cmc
add
mov
xchg
xor
movsb
lahf
add
scas
cmp
xor
jmp
jecxz
or
and
add
xlat
int3
sti
call
fildll
iret
or
je
cmp
dec
js
hlt
fwait
cmp
repz
mov
add
rorl
arpl
lods
addb
test
cmpsb
jge
out
jg
insb
call
scas
jmp
cmc
lahf
or
push
dec
and
mov
lcall
push
inc
push
outsb
jae
mov
xor
pop
shr
push
cmp
mov
out
adc
repz
adc
mov
popf
test
mov
cmp
jg
and
ja
fdiv
aaa
sub
xchg
jae
sub
inc
or
jb
adc
mov
push
arpl
stc
cltd
jmp
stos
orb
imul
ss
sub
push
mov
mov
mov
sti
int
mov
cmpsl
shlb
cmp
dec
test
inc
xchg
adcl
insb
jmp
pop
outsb
mov
pop
and
add
or
jnp
push
das
inc
testl
adc
sub
sub
xor
mov
aaa
hlt
mov
into
lcall
and
inc
in
jle
cmpsb
dec
fcoml
into
movsl
xchg
test
popf
arpl
or
dec
mov
scas
jns
fchs
fstl
adc
sub
fs
mov
adc
ljmp
out
mov
fmull
rcrl
push
lahf
push
pop
inc
sub
push
inc
adc
pop
jne
insl
mov
insb
jbe
xlat
sbb
push
pop
lret
inc
pop
add
pop
adc
push
outsl
push
mov
clc
fdivrl
cmp
pop
sysexit
bnd
stos
ret
aad
cltd
fmul
mov
test
shlb
dec
sub
sahf
adc
pop
push
mov
or
out
loopne
roll
lods
imul
xchg
dec
mov
pusha
mov
mov
xchg
fisttpl
xor
adc
es
push
pop
fiaddl
mov
hlt
or
scas
xchg
adc
mov
fimuls
and
jne
adc
cli
repz
pop
sub
push
jno
jp
inc
mov
fwait
aaa
adc
push
jae
bswap
outsb
push
nop
adc
push
xchg
mov
loop
loop
sahf
sbb
lods
es
pop
jecxz
pop
inc
daa
rcl
lret
dec
lahf
xchg
cmpl
jl
xchg
mov
jmp
sbb
leave
and
adc
cmp
jmp
arpl
mov
dec
mov
xchg
xchg
hlt
int
xchg
lock
in
xlat
stos
jo
cmp
pop
mov
push
xchg
adc
xchg
nop
lods
rcll
aas
inc
stos
test
xchg
push
loope
in
push
sub
jne
test
leave
jge
push
mov
inc
push
lahf
fwait
or
iret
pushf
addr16
notl
inc
mov
sub
loope
cmp
adcb
adcl
das
into
lcall
adc
or
cwtl
or
outsb
test
out
add
fnstenv
outsb
lcall
nop
data16
sub
or
rcl
inc
ficoml
test
adc
outsl
int
pop
mov
lods
dec
cmp
leave
out
insb
xor
fisubrl
jbe
jo
xchg
sbb
arpl
cmp
jbe
repnz
inc
inc
push
mov
fmul
loopne
in
or
pop
test
and
sub
adc
aad
outsl
ret
push
xchg
cmc
call
mov
cmc
sbb
and
addb
sub
dec
push
mov
mov
int
lods
mov
mov
jbe
int3
sbb
pop
stos
mov
decb
sahf
push
stos
repnz
mov
mov
push
negb
imul
filds
aas
push
shll
sarl
jo
dec
sbb
pusha
les
jo
pop
cli
call
rclb
call
mov
lea
pop
push
cmpsl
scas
inc
adc
sub
pop
push
test
fsubs
dec
mov
pop
pop
dec
ror
sub
cmpsl
cbtw
aam
daa
fxch
mov
fidivrs
jp
je
loopne
aas
mov
dec
mov
fstpl
adc
sub
dec
push
jb
imul
xlat
mov
lret
popl
push
outsl
sbb
push
cmp
xacquire
dec
shrl
out
cmpsb
cs
negb
pop
pop
mov
inc
dec
and
add
dec
ljmp
mov
xchg
hlt
dec
jnp
aaa
lods
shlb
xor
sbb
push
popf
imul
mov
push
rorb
or
pop
push
cs
mov
pop
daa
mov
into
loope
and
idivb
cld
fimuls
pop
stc
dec
shrl
and
mov
mulb
aam
mov
lock
nop
mov
add
scas
push
loope
cmp
je
xchg
and
outsb
testl
xor
and
pusha
push
mov
scas
stc
lcall
mov
xor
imul
sub
fistpl
push
fstps
lret
adc
jns
ljmp
sub
and
mov
fsubrl
inc
fnsave
sub
push
mov
sub
int
bound
das
sub
mov
aas
mov
push
cmp
add
movsl
lea
cld
es
sbb
dec
lret
fimuls
mov
jp
aas
push
mov
data16
push
enter
and
mov
jnp
sahf
and
hlt
mov
ds
out
and
pop
dec
jge
fldl
fildl
cmpsb
xchg
inc
hlt
lea
jnp
loope
ljmp
arpl
mov
imul
loope
shl
roll
push
dec
flds
lea
pop
out
addr16
loope
push
adc
add
and
rcrl
cmp
pop
sbb
rcr
xor
adc
es
dec
mov
das
sarl
adc
add
les
les
aam
pop
fists
je
xor
mov
js
stos
inc
out
sub
xchg
cs
ss
test
cmp
stc
sub
sub
hlt
cmc
aaa
sbb
scas
repnz
into
sub
sub
loopne
mov
divb
hlt
pushf
fwait
lods
add
adc
ret
ror
xchg
add
shl
or
aad
xor
push
xchg
xchg
add
ret
subl
dec
daa
nop
test
push
jecxz
je
fnstcw
ja
sbb
cli
je
pop
cwtl
inc
or
cs
sbb
pusha
push
nop
add
lock
test
mov
hlt
sub
cwtl
jae
mov
inc
les
test
stos
test
sbb
js
gs
cmp
mov
jne
adc
shrl
xlat
imul
scas
or
mov
daa
sti
in
mov
out
loopne
mov
cmpsl
and
sub
xchg
inc
popf
inc
and
inc
pushf
dec
and
push
pop
jns
into
inc
xchg
dec
pushf
sub
fnstenv
ss
scas
xchg
pop
arpl
pop
loopne
mov
add
pusha
in
mov
xlat
jmp
les
mov
inc
mov
inc
push
fmull
sbb
or
sub
mov
inc
repnz
aas
jg
iret
popf
dec
movntps
cmc
inc
jb
mov
pop
xchg
stos
lods
push
mov
divl
dec
mov
insl
cld
jne
int3
faddl
mov
mov
cmp
pop
jle
push
scas
or
lods
xor
std
mov
sti
and
jl
push
cmc
dec
pop
pop
push
cld
adc
daa
sub
testl
inc
in
std
mov
popf
pushf
lea
sub
push
cmpsl
jb
lods
adc
out
lods
cltd
inc
out
push
outsb
adc
faddp
arpl
xor
es
pop
adc
and
sbb
push
mov
test
in
pushf
pushf
popf
ljmp
mov
out
in
jl
lds
test
es
mov
fchs
clc
xor
cmp
not
mov
and
mov
call
jo
cmp
and
test
stc
sub
add
enter
mov
adc
pop
loope
inc
test
call
popf
xchg
push
jg
cmp
in
fmuls
xchg
dec
sub
xchg
sub
push
jne
les
dec
sti
mov
dec
xchg
out
in
mov
mov
call
inc
mov
cmp
test
cmp
ds
mov
jae
mov
es
paddd
loopne
jmp
lcall
inc
inc
aad
mov
inc
clc
pop
dec
adc
int
add
out
adc
adc
ror
push
sbb
xor
pop
add
and
mov
rolb
fdivr
jo
xchg
and
lock
sbbl
add
outsb
jbe
jno
aaa
add
xchg
adc
or
inc
xchg
mov
jns
add
inc
mov
into
mov
add
xor
rcrl
fwait
sbb
aaa
or
nop
out
mov
sub
mov
lods
bound
jp
xor
and
ret
mov
fwait
add
test
pop
xlat
or
xor
out
in
insb
pminsw
fistps
sub
pop
xor
push
out
pop
adcl
das
sti
divps
mov
les
int3
rcll
loop
stc
inc
mov
xor
loop
aas
cmp
and
les
imul
shll
jbe
cld
test
daa
mov
mov
push
dec
jmp
sbbl
cmp
inc
das
das
rcll
or
xchg
mov
push
jmp
mov
push
gs
es
arpl
call
adc
mov
stos
xor
push
insb
sbb
clc
push
stos
les
es
test
nop
lds
sbb
repnz
sbb
and
jl
jge
mov
pop
mov
push
clc
or
inc
xchg
mov
cld
mov
and
loope
lahf
sbb
dec
iret
sub
imul
cmp
stc
jle
fstpl
cli
adcb
clc
push
push
hlt
xor
dec
push
ds
push
sub
sub
jns
xor
shl
xor
xchg
adcl
sbb
pop
lahf
or
push
shr
mov
push
fdivl
fdivl
int3
inc
icebp
fstps
sbb
adc
int
cs
testb
dec
stc
insl
popf
fcompl
stos
and
sub
pop
mov
or
push
lods
les
adc
outsl
sarl
jge
inc
jle
repnz
pop
bound
mov
pop
add
xchg
inc
stos
fdiv
ss
stos
mov
add
int3
pop
rolb
ret
je
outsl
sub
cmp
sub
cmp
popl
nop
mov
xlat
xor
sbbl
xor
or
add
fdivl
lcall
fs
leave
add
outsl
xchg
and
pop
fwait
sahf
insb
ucomiss
dec
cwtl
xchg
jo
xchg
shll
out
int3
xchg
cmp
lea
sbb
test
dec
daa
das
mov
ja
adc
sti
repnz
mov
pushw
pop
fnsave
cmc
fs
shlb
iret
mov
out
das
pusha
xchg
idivb
xor
pushf
stos
add
jne
outsb
in
js
xlat
add
sub
and
sub
mov
pop
xor
adc
pusha
movsl
insl
aas
lods
jns
into
les
shl
xchg
xchg
clc
dec
adc
pop
arpl
jl
bound
xchg
mov
jno
xor
insb
cmpsb
mov
mov
lock
sbb
into
ja
cmp
inc
dec
cwtl
outsl
sub
mov
imul
xor
xchg
mov
mov
js
xchg
call
jmp
jae
mov
fmuls
pop
repnz
out
out
jmp
adc
xor
dec
test
mov
lds
mov
out
mov
push
jb
pusha
cmp
mov
jbe
mov
cli
shlb
fs
dec
lods
leave
stc
dec
inc
sub
pop
mov
mov
sbb
push
js
xor
fbld
sbb
outsl
cld
xor
sbb
andb
aad
test
cmp
cmp
inc
test
xlat
mov
jno
push
testl
or
dec
rcll
inc
xchg
jno
jo
or
sub
icebp
sub
cli
imul
pop
out
and
imul
push
popf
lods
and
cmp
sbb
mov
das
dec
lret
mov
incl
jbe
adcl
adc
popf
cmp
je
xor
imul
inc
pop
pusha
xchg
cli
mov
scas
cs
mov
mov
movsl
mov
pop
insb
das
les
jne
cmp
fwait
mov
cmp
out
aas
loope
fistpl
enter
dec
das
inc
xchg
mov
xchg
xchg
mov
pop
int3
jae
mov
mov
orl
stos
cmp
lret
loop
dec
push
outsl
enter
shl
jo
lock
mov
mov
out
in
adc
mov
mov
inc
incb
bound
inc
lret
dec
mov
icebp
adc
dec
inc
mov
xchg
sti
pop
lcall
lret
push
cmp
into
std
repnz
frstor
jo
cmp
mov
sub
out
jle
rolb
aaa
cmpsb
stos
dec
cld
sbb
movsl
mov
sbb
dec
into
out
mov
mov
fwait
dec
fisttpl
and
dec
ficoms
jns
call
int
push
adc
sub
xor
inc
mov
or
cmp
and
mov
pop
cwtl
imul
xor
or
divb
jnp
pop
inc
lods
daa
mov
ret
cmpsb
addr16
hlt
pop
ljmp
gs
out
mov
ret
mov
fimuls
inc
mov
ljmp
cmc
cmp
add
adc
pop
xchg
sub
sub
jge
out
xchg
daa
orl
in
icebp
lret
push
data16
sbb
scas
push
das
outsl
cmp
sbb
sub
arpl
std
icebp
jbe
test
addr16
or
scas
xor
scas
xchg
inc
ficoms
mov
push
mov
push
and
adc
scas
fadds
push
xor
pop
sbb
xchg
sbb
xchg
dec
inc
pop
nop
sbb
pop
jno
jg
mov
sar
jl
cmp
xchg
loope
mov
mov
xor
js
leave
fists
jecxz
dec
pop
fidivs
fucomip
movsb
stc
data16
jno
xor
xchg
sbb
cmp
add
inc
sti
sbb
shll
or
cld
add
mov
in
ficoml
mov
xchg
jle
enter
or
dec
popa
sub
shrl
insb
pop
lods
jbe
push
push
sub
sarb
or
mov
mov
dec
jle
adc
fcmovnu
pop
jo
loope
movsl
jle
adc
or
rorb
ret
dec
cmc
sbb
aas
cmpsl
dec
les
ja
mov
dec
add
imul
mov
es
xchg
sub
dec
testb
aad
dec
xchg
je
mov
mov
les
mov
sahf
in
pop
loop
mov
ret
sahf
add
dec
sbb
mov
pushf
add
mov
xchg
dec
add
sub
loop
mov
mov
cmc
and
pop
repnz
outsl
mov
sahf
sbb
pop
lret
es
sbb
pushf
xor
mov
jmp
lods
frstor
push
inc
mov
push
push
mov
push
pusha
fsubs
iret
lahf
push
mov
adc
xor
xlat
push
cltd
cmp
sbb
imul
xchg
mov
lret
arpl
shll
imul
fstpt
ja
dec
xchg
test
pop
adc
sub
mov
mov
push
cld
push
testb
xchg
mov
dec
dec
out
add
mov
add
lock
repz
jle
mov
dec
xchg
xor
jo
inc
loop
xor
mov
jmp
js
and
jno
adc
je
ja
shll
insb
mov
add
lods
dec
stos
nop
inc
and
xchg
iret
inc
lods
mov
adc
enter
imul
mov
xor
push
gs
int
sbb
mov
push
pop
dec
aas
dec
inc
js
jb
stos
repnz
jle
fistpll
dec
fistps
lock
jl
ss
mov
sbb
jecxz
imul
pushf
lds
xor
push
lret
inc
cwtl
aad
std
dec
pop
add
pop
pop
sbb
inc
jmp
fs
fistps
jle
push
cmpl
cmp
jecxz
lock
mov
sahf
js
out
mov
fsub
jp
cli
ja
mov
sbb
inc
loop
xchg
inc
mov
inc
sbbb
sbb
xchg
dec
lods
xor
hlt
roll
mov
repz
cmp
dec
leave
mov
and
testb
dec
ss
pusha
push
out
cmp
scas
and
clc
out
mov
insl
xor
adc
clc
inc
push
pop
add
sub
aas
xchg
repz
push
xor
ss
push
push
push
and
and
mov
sub
dec
pop
push
adc
jecxz
and
pop
xchg
mov
idivl
sub
ds
jae
shrb
jne
test
fcoms
lds
or
pop
cmc
mov
iret
jl
push
xor
sbb
mov
decl
mov
pop
fcomi
mull
jg
pop
dec
jno
dec
test
stos
push
enter
sbb
sahf
add
fwait
cwtl
ds
cli
icebp
rcrb
sub
pop
lods
push
inc
pop
or
jecxz
in
pop
loopne
cmp
sub
mov
jo
fcom
adc
add
or
inc
and
dec
test
push
dec
cld
push
dec
enter
mov
push
fimull
jmp
jmp
ljmp
add
pop
sub
insl
inc
cmp
push
adc
jbe
xor
jmp
cld
fs
gs
aad
int
cmpsb
and
push
dec
lret
pop
pop
lret
push
cli
cmpb
xor
xor
mov
cmp
leave
lcall
mov
lret
lock
mov
adc
and
fwait
pop
outsb
sbbb
push
mov
test
sbb
sub
xchg
leave
add
test
lret
cs
mov
adc
xchg
pop
xchg
out
dec
cmpsl
fcomi
xchg
leave
push
and
les
mov
mov
mov
fwait
mov
sbb
fs
mov
shlb
xchg
inc
or
mov
mov
mov
test
pop
in
lret
lods
sbb
dec
xlat
shl
outsb
dec
ror
dec
push
scas
stos
mov
sarb
mov
jno
outsb
or
in
pop
xchg
pop
sbb
or
mov
jb
in
aas
xchg
jle
in
lea
imul
or
arpl
mov
rol
and
adc
push
lcall
and
jle
push
enter
lods
adc
int3
jg
sbb
cld
imul
vmread
pop
test
not
cmp
lret
xchg
shrl
inc
and
pop
xlat
adc
dec
fisttps
or
mov
jnp
cmp
insb
jmp
hlt
clc
ret
and
out
sbb
xchg
inc
pop
aaa
mov
out
sub
ljmp
scas
adc
fidivrs
repnz
das
adc
pop
cmp
repz
sub
ss
nop
sahf
fimull
inc
je
jnp
ljmp
outsb
leave
cmp
push
and
push
xchg
iret
mov
inc
mov
and
shl
mov
jno
mov
test
stos
pushf
mov
gs
notb
xchg
jnp
cmp
xor
test
mov
addb
jno
repnz
data16
test
mov
mov
jo
mov
sahf
or
cmpsb
dec
fstpl
mov
jnp
jb
xor
scas
test
fidivrs
xor
pop
lret
sbb
push
in
xor
mov
adcb
outsb
icebp
movsl
mov
movsl
push
adc
mov
imul
popf
adc
or
cli
fistpll
or
sbb
lds
adc
enter
jb
jle
addb
adc
xchg
cs
out
aas
push
jp
pop
or
imul
sub
aaa
repnz
sub
xor
jo
push
das
scas
xchg
cmp
outsb
lock
xlat
hlt
mov
xchg
jge
sbb
scas
aas
push
dec
xchg
mov
xor
in
cmc
xchg
add
mov
jo
cmp
dec
mov
push
or
mov
push
es
or
jecxz
dec
fdivrl
daa
sahf
and
pop
or
repnz
mov
xchg
roll
xor
push
push
jle
add
xchg
lods
jb
testl
hlt
jnp
xor
xchg
xchg
daa
mov
sahf
loope
adc
jmp
aaa
cmp
sbb
stc
cmpsb
mov
jo
lahf
ret
pop
pop
call
stc
in
pop
xchg
dec
fmuls
shlb
jne
xchg
in
jo
es
dec
dec
fildl
add
jae
stos
call
cli
mov
std
data16
fdivs
dec
testl
testb
ret
test
mov
mov
insl
je
xchg
or
aaa
mov
mov
lcall
test
les
imul
fiaddl
add
mov
sbb
mov
aaa
push
lahf
notb
jp
and
lret
pop
xor
mov
inc
xchg
sub
sub
add
dec
into
daa
mov
push
stos
mov
mov
dec
xchg
in
fisubrl
pop
rcr
lods
adc
jge
inc
loop
push
das
scas
dec
mov
push
in
jecxz
push
popa
add
dec
cmp
mov
mov
jno
dec
imul
adc
add
or
mov
sub
leave
mov
test
popf
xorl
popf
mov
cs
jl
pop
xchg
push
ds
mov
in
int3
hlt
or
mov
mov
imul
test
ret
outsb
cmpsl
and
decl
stc
dec
or
cs
adc
pop
ja
jo
inc
fcoml
cmp
lds
pop
rcr
outsb
lods
movsl
imul
xlat
sbb
iret
dec
neg
mov
test
inc
pop
cld
or
adc
pop
in
push
xchg
clc
dec
sub
mov
mov
in
dec
into
jecxz
inc
or
jl
cmp
dec
lock
sahf
shll
je
nop
push
mov
and
test
sbbl
inc
lret
jge
push
jnp
jno
sbb
and
cltd
sar
outsl
idiv
pop
cmp
adc
mov
pop
scas
jmp
sub
push
jo
sbb
std
dec
or
push
mov
lea
notb
mov
mov
sub
sub
mov
stos
xor
cwtl
xor
and
ret
and
rcrl
xchg
stos
inc
mov
and
jns
fidivl
jns
push
aas
push
or
mov
mov
cld
jne
xchg
nop
add
mov
push
aaa
push
popa
push
sub
cmp
cmp
cmc
inc
xchg
and
insb
mov
shlb
inc
push
pop
pop
mov
lds
in
inc
cmp
ror
sahf
outsl
push
cmp
rcr
cmp
inc
mov
lret
inc
cmp
push
int3
repnz
cmp
adc
call
ds
dec
es
xchg
lret
aas
add
mov
out
jl
not
lret
mov
scas
in
aaa
repnz
repnz
sarb
push
sbb
js
sub
xchg
insb
aad
mov
cmc
movsb
inc
aad
mov
stc
cs
push
jge
test
jl
push
xor
mov
in
pushf
out
and
into
xor
jnp
pop
in
stos
xlat
insb
ja
in
es
pop
cmp
xor
es
cli
or
fnsave
test
lock
in
sub
pop
lds
cmp
pushf
sbb
jg
xlat
sbb
jae
int3
out
dec
insl
ss
fisubrs
and
clc
lea
jb
iret
cmpsb
clc
lods
imul
hlt
and
sbb
nop
mov
dec
pop
ret
xchg
and
insl
test
xchg
das
add
cli
ja
lahf
jnp
jbe
sbbl
lods
aad
xchg
adc
rol
outsl
push
jecxz
push
fwait
jae
leave
jnp
sbb
mov
dec
push
cltd
stos
mov
cld
mov
cmp
aad
xchg
mov
out
push
push
into
adc
popa
std
mov
dec
cmpsl
and
scas
loop
mov
fcmovnbe
add
jecxz
mov
push
and
xor
jnp
lods
popa
shlb
adc
out
lods
filds
test
sbb
mov
push
test
decl
jmp
jno
dec
mov
xor
sti
lock
add
mov
inc
fcomps
jns
mov
rolb
test
ljmp
imul
nop
out
inc
jo
ret
stc
and
ffreep
addr16
scas
push
mov
or
sub
imul
jbe
popa
stos
ja
jle
daa
stc
mov
jbe
in
arpl
add
lcall
aad
leave
xchg
add
add
xchg
cmpsb
in
lahf
sub
push
mov
in
xor
sbb
pop
addb
sbb
cmp
aas
xor
loopne
cli
add
je
push
mov
mov
push
test
inc
clc
and
push
cmc
adc
cmp
inc
dec
or
ljmp
mov
jp
dec
insb
xchg
or
mov
pop
cmp
hlt
in
std
add
mov
inc
add
mov
adc
rcrb
js
mov
movsb
cmp
mov
into
xor
out
mov
hlt
test
mov
push
and
out
pop
and
xor
adc
pop
xchg
pop
mov
test
lods
arpl
movsl
scas
cli
inc
push
das
arpl
mov
flds
lcall
mov
jns
mov
inc
inc
cmp
mov
jbe
in
leave
push
pop
push
mov
fcomip
pop
mov
in
cltd
add
and
imul
dec
dec
test
imulb
or
into
addb
sarb
xor
addr16
outsl
movsl
adc
in
push
and
jbe
stos
test
jl
lret
mov
mov
jl
add
outsb
dec
ds
cmpsl
xor
daa
pusha
xor
push
rcll
jbe
xor
imull
add
pop
test
into
orb
out
xchg
sbb
and
jae
test
and
mov
int3
ret
fwait
xor
call
push
inc
notb
xchg
fiaddl
push
jge
scas
sub
inc
inc
mov
adc
mov
lods
ds
into
jnp
shrb
xchg
mov
mov
inc
outsl
xor
adcb
rcr
lods
test
jo
pop
fistpl
sbb
in
adc
jno
aam
or
xor
sbb
pop
add
nop
add
stos
dec
gs
add
adc
jp
sti
lcall
mov
mov
push
xor
adc
sbb
lock
sbb
mov
cli
inc
jns
mov
sahf
xor
jp
in
add
ds
movsb
push
dec
or
repnz
insl
js
push
lods
adc
loop
jp
mov
ficompl
cmp
ds
and
sarb
jnp
ret
dec
orl
push
fmuls
popf
addr16
or
pop
in
adc
arpl
dec
add
pop
test
sbb
ret
into
cmc
lahf
call
adc
jmp
repnz
xchg
scas
movsb
or
sub
andb
inc
xor
jp
dec
push
icebp
xor
mov
mov
or
das
jle
les
jo
mov
ror
sahf
add
ret
sbb
mov
pop
fsin
scas
xor
out
and
js
into
icebp
mov
aam
fiaddl
xor
repz
sti
fs
inc
add
icebp
xor
adc
add
imul
pop
pop
sub
int
outsb
mov
in
das
cmp
in
mov
shll
test
and
and
fcoms
inc
in
stos
and
pushf
fimuls
jnp
xor
or
test
xor
shl
fwait
lret
push
push
int3
movsl
test
sbb
loop
mov
ret
inc
xchg
rclb
mov
fldenv
add
sub
lcall
imul
mov
adc
push
jge
xor
jns
mov
mov
fucomip
pusha
jle
inc
es
lcall
repnz
cmp
push
sub
roll
jbe
push
sahf
cmp
test
push
mov
ljmp
mov
mov
dec
outsb
and
js
push
sbb
push
out
leave
sbbb
xchg
cmp
push
xchg
cmc
dec
cmp
pop
adcl
jmp
jno
shl
daa
rcll
sbb
in
inc
fmulp
clc
push
sub
loop
jmp
bound
mulb
xor
pop
outsb
and
outsb
ds
sbb
icebp
popf
xor
jmp
fs
xchg
movsb
add
scas
in
adc
cmp
les
mov
iret
test
out
pop
pop
cmp
xchg
and
pop
cwtl
mov
jl
scas
fs
enter
lret
filds
cmp
stc
popa
shll
jg
dec
repnz
mov
push
je
flds
or
xor
sti
sub
mov
cs
pop
cmp
ret
insb
shrl
je
push
xchg
das
inc
dec
fisttpll
fldcw
dec
and
push
mov
je
add
xor
cwtl
loope
jbe
xor
std
movsl
mov
in
dec
aaa
imul
inc
icebp
inc
test
adc
fwait
or
lea
add
adc
leave
mov
mov
push
xchg
mov
mov
push
fidivl
push
inc
or
movl
cmc
cmp
das
jae
test
or
fnstcw
and
dec
std
push
inc
mov
push
in
es
or
mov
fs
mov
movsl
movsl
add
add
xchg
lods
insb
jae
mov
call
pop
fs
pop
xchg
popa
fwait
dec
call
mov
mov
xchg
int
inc
iret
pop
pop
ljmp
xchg
mov
sub
push
add
and
mov
scas
out
mov
adc
or
mov
fistps
add
in
lea
cmp
add
dec
jne
jge
adc
jmp
cmp
pop
cmp
hlt
fs
push
mov
jg
lcall
sub
and
sahf
rclb
cs
repnz
into
xchg
movsb
jns
ss
outsb
jnp
bound
ret
sub
les
mov
lea
ds
shl
xchg
inc
int3
or
js
or
rcll
popf
adc
iret
or
dec
mov
xor
mov
lret
inc
sahf
adc
std
pusha
sbb
les
or
dec
or
notl
nop
adcl
mov
in
inc
xlat
mov
add
andb
arpl
xchg
gs
mov
pop
icebp
lods
in
daa
js
mov
mov
mov
lds
adc
push
jns
test
xchg
or
xchg
push
lret
fdivrs
cltd
or
ljmp
sub
mov
sbb
dec
inc
jecxz
xchg
pushf
aas
jno
xchg
cltd
movsl
hlt
inc
cmp
pop
cmc
add
test
mov
fs
pop
add
and
or
xlat
repnz
xchg
xchg
lahf
xlat
out
mov
leave
loopne
sbb
jae
push
loop
in
scas
jne
xchg
and
lcall
fnsave
mov
adc
add
xorb
insb
scas
jmp
lods
xchg
push
mov
xor
or
or
mov
jle
cmpsb
adcb
lods
ja
xor
into
js
lods
jae
js
lret
shr
enter
jecxz
clc
mov
dec
xchg
cwtl
es
neg
imul
scas
add
mov
sarl
ja
add
iret
mov
dec
in
mov
and
aad
addb
aam
pop
pusha
lcall
loope
jmp
inc
pop
negb
test
ja
inc
cltd
sbb
cmp
dec
xlat
jno
fidivs
pushf
movsb
pop
out
cmp
push
imul
cmp
mov
jmp
sbb
stos
fstp
pop
scas
xlat
and
mov
dec
sbb
pop
cmp
adc
jp
ds
dec
cmp
push
popf
cmpxchg
cltd
mov
mov
sbb
outsb
enter
cmp
and
mov
out
pop
sub
push
or
xchg
lock
lods
sub
sbb
jns
mov
mov
sub
pop
test
xchg
inc
cld
test
aad
or
xlat
cmp
cmc
xor
xchg
mov
dec
in
push
mov
inc
cli
jecxz
add
aad
idivb
mov
shlb
push
xchg
pop
xor
mov
sub
fwait
push
outsb
mov
pop
ljmp
roll
int3
nop
or
clc
repz
popf
xchg
push
pop
dec
shl
outsb
mov
ror
fiaddl
iret
sub
insb
mov
mov
pop
dec
iret
cmp
iret
in
jo
cmp
rcrb
xchg
testl
fst
inc
xchg
xlat
mov
fucomi
in
imul
adc
pop
outsl
aam
mov
pop
cmp
jae
inc
sub
jg
cmpsl
fildll
jp
rcll
xor
push
xchg
out
sub
ficoms
jg
push
and
dec
sub
sarl
add
ja
jb
sbb
push
jnp
cmp
ja
push
xlat
inc
mov
fbstp
nop
adc
sub
sub
add
sbb
fcoms
mov
inc
pop
test
pop
data16
mov
push
mov
push
cmp
outsl
fwait
xchg
push
outsl
or
icebp
push
int3
adc
inc
and
or
inc
sub
cmpsl
and
xchg
outsl
lret
out
cwtl
cmpsb
xchg
jns
jl
jl
jp
jbe
pop
inc
aaa
sub
sti
jbe
and
es
pop
push
sarl
and
pop
inc
call
int
pop
ret
lds
push
mov
fsubr
and
cli
inc
std
daa
adcl
adc
push
frstor
lods
fmull
sub
loope
es
mov
sahf
pop
std
jo
pop
xor
aam
or
jecxz
std
vmptrld
cmc
inc
push
insl
mov
fwait
mov
insl
jecxz
dec
mov
cmc
adc
sahf
add
lds
out
rorl
pop
xor
out
cmc
push
adc
pop
xchg
and
and
pop
daa
xchg
xor
jmp
xchg
jno
stc
mov
inc
ret
push
icebp
mov
sbb
fiaddl
jne
push
pop
xadd
sub
and
notb
mov
cmpl
xor
sub
cmp
test
adc
std
pop
fsubs
fwait
mov
ds
das
sub
and
xor
cmp
xor
lods
pop
or
or
outsl
sar
or
rclb
sbb
mov
rclb
pop
sub
cmp
push
fiadds
repnz
add
mov
mov
int3
mov
cmp
cmp
pop
ss
stc
xchg
test
shrl
insl
inc
xor
ss
popa
jae
mov
fisubl
cmp
mov
inc
imul
sti
dec
je
jmp
pop
bound
ja
nop
sub
sbbl
outsb
add
mov
rcrb
jge
cmp
fcompp
mov
xchg
out
enter
repnz
clc
push
mov
sbb
or
push
pop
push
repnz
daa
pop
aaa
push
mov
lret
loop
jns
daa
ret
and
pop
jg
jns
mov
mov
ret
fcompl
xorl
aas
pop
into
int3
pop
sarb
mov
negb
sub
test
mov
insl
je
mull
and
xor
push
mov
inc
popa
fsts
adc
flds
pop
gs
enter
loop
mov
xorb
mov
lret
hlt
arpl
add
hlt
xor
shrb
add
jp
ret
cmpsl
xchg
push
nop
sbb
adc
jne
mov
jge
addr16
stos
fdivrs
imul
les
jae
sub
je
push
in
push
ror
dec
mov
push
xchg
mull
fiaddl
add
cmc
test
and
mov
movb
push
dec
dec
aad
add
fwait
insb
push
push
add
iret
fnstsw
dec
xor
mov
cmp
mov
dec
or
pop
sbb
push
sbb
hlt
pop
out
sbb
rorl
push
rorl
pop
es
add
dec
int
pop
add
lahf
jno
lock
pop
decl
lods
sbb
outsb
in
and
push
pop
jecxz
cmp
add
das
xor
stos
xchg
rorb
xor
je
xchg
mov
data16
push
xor
inc
lahf
xor
stos
andb
sub
fidivrl
pop
jp
inc
mov
xchg
and
mov
jns
iret
push
popa
sub
js
dec
xchg
imul
lods
aas
scas
incb
hlt
mov
add
testb
jae
popf
xor
dec
lods
mov
pop
mov
mov
adc
cmpsl
addr16
cli
fwait
push
xchg
stos
sub
jae
das
mov
add
cmc
pop
xchg
mov
das
mov
inc
mov
mov
clc
pop
out
in
insb
and
lock
pop
pusha
mov
or
out
sahf
push
mov
mov
sub
pop
and
xor
nop
cmp
push
sbb
jne
hlt
scas
roll
sbb
gs
sbb
test
mov
mov
int
pop
aad
and
repnz
xchg
movlps
stos
pop
mov
adc
sbb
mov
sbb
sub
xchg
xchg
mov
sbb
addr16
jno
popa
xorb
jge
pusha
mov
shll
dec
cmp
adc
mov
mov
sbbb
les
xchg
into
aaa
outsl
sbb
pop
lcall
adc
jmp
sub
xor
add
ds
stc
or
ja
imul
adc
mov
repnz
ljmp
leave
jb
cmp
jl
and
sbb
out
icebp
cli
stc
mov
dec
adc
cmp
fst
sub
sahf
inc
adc
and
ret
pop
test
ret
mov
and
and
and
adc
add
lods
aad
aaa
mov
inc
aaa
adc
sub
int3
dec
mov
sbb
xchg
pop
imul
cmp
xchg
push
push
cmp
lret
stos
push
shlb
push
mov
adc
inc
cwtl
mov
mov
out
sub
push
mov
push
loope
sahf
lret
mov
shlb
or
and
adc
stos
and
jmp
adc
jns
repnz
mov
adc
xchg
jo
dec
mov
adc
sbb
sub
int3
hlt
hlt
lea
pop
and
loopne
arpl
xchg
lea
imul
cmp
lahf
popf
push
out
scas
fs
pushf
jmp
sbb
mov
sbb
fucomp
in
andl
mov
lods
xor
cmpb
les
insb
mov
repnz
jge
mov
sub
ss
lods
imul
push
xchg
cmpsb
jmp
pop
pop
push
add
inc
es
movsb
sbb
dec
adc
jne
mov
clc
sbb
filds
cli
cltd
cmp
stc
rcrb
int3
js
sbb
icebp
into
addr16
and
push
fnstsw
xor
leave
les
sbb
lock
inc
icebp
sarb
mov
repnz
mov
sbb
mov
adc
sbb
mov
gs
jno
fwait
loopne
mov
mul
dec
jg
xor
pop
in
sbb
aaa
mov
mov
shll
cli
mov
xor
xor
mov
push
mov
mov
and
push
nop
int3
pop
adc
cld
dec
mov
inc
sub
enter
mov
inc
daa
adc
in
stc
push
hlt
shrb
movsb
pop
xlat
pop
sarb
xchg
cli
pop
fidivl
loope
icebp
mov
inc
fildl
loope
mov
dec
cmpsb
jecxz
arpl
add
inc
adc
mov
sub
mov
pop
sti
mov
cltd
ficomps
ss
pop
sub
mov
loopne
dec
mov
stos
imul
sub
mulb
push
sbb
loop
and
lock
mov
shl
shl
dec
aaa
stc
scas
cmp
pop
inc
repnz
mulb
xor
stos
cwtl
add
adc
cmpsl
adc
loopne
jmp
jp
push
jno
cld
in
xor
shlb
add
sbb
iret
and
lods
pop
sub
cmp
and
mov
scas
pusha
cmp
xchg
push
rcl
rcl
or
addr16
push
pop
add
push
jg
fldl
xchg
xor
mov
sub
sub
in
setp
pop
sbb
sub
lahf
sti
cltd
xlat
mov
ljmp
fldt
pop
rorb
fildl
sbbb
sbb
jp
and
mov
xchg
sub
cmp
jl
jb
push
sbb
iret
xlat
ds
jne
scas
and
or
sbb
xchg
into
movsb
jno
or
cmp
es
mov
enter
or
stc
mov
add
cmpsl
out
mov
xlat
adc
adc
icebp
call
test
xor
pushf
loop
repnz
push
pop
xchg
jecxz
aad
add
fdiv
sbb
arpl
and
fldt
push
js
adc
sub
bound
addr16
cmp
clc
add
mov
xchg
arpl
stc
fmuls
adcl
insb
addr16
sub
dec
sub
movsl
add
mov
pop
inc
and
and
push
ret
lods
movsl
gs
push
pusha
dec
dec
loop
rorb
cmpsl
mov
cli
stos
cmp
cmpsl
shrl
in
in
rolb
jmp
push
cmpsl
inc
xlat
sbb
mov
sub
xor
push
mov
xor
push
jge
dec
je
push
sub
into
mov
push
or
adc
mov
ljmp
fs
insl
mov
add
push
xorl
xor
pop
movsb
subb
fdivl
test
rol
pop
ja
stos
cmp
mov
lods
xchg
sti
aad
xchg
jge
mov
xlat
pop
or
mov
cli
xchg
iret
mov
sub
mov
mov
rol
popa
data16
lea
ficompl
iret
sarl
mov
movsl
pop
pop
fldenv
scas
stc
and
ficoml
and
sbb
loop
lods
stc
push
loopne
ret
fwait
sbb
test
mov
pop
sub
outsl
das
pop
pop
fidivrs
jecxz
jae
add
ja
outsl
mov
xchg
adc
pop
jnp
popfw
sbb
fildll
leave
inc
stc
sub
shlb
cmp
mov
push
jo
dec
mov
test
xchg
cmp
test
cmp
roll
loopne
clc
scas
xor
xor
sub
insl
sti
mov
jo
push
push
stos
inc
in
push
sub
lds
or
imul
pop
incb
dec
bound
push
sbb
push
push
ja
add
js
aas
xchg
push
scas
addr16
mov
les
sub
stc
cmc
xchg
sarl
pop
cs
stos
sub
outsl
lea
push
clc
ljmp
cltd
fwait
add
xor
sub
add
mov
addr16
sbb
xchg
insb
mov
push
ret
fsubs
mov
cmp
sbb
add
les
cltd
repnz
pop
inc
xchg
or
sahf
push
push
ljmp
pop
lock
scas
pop
adc
enter
xchg
inc
addr16
hlt
xor
idiv
jecxz
aaa
mov
sbb
repnz
stos
stos
and
in
mov
mov
jb
lret
ret
mov
cmp
jns
jle
dec
daa
lret
mov
adc
bound
cmp
adc
jecxz
xor
clc
cwtl
jle
cmp
dec
push
xchg
xlat
fsubp
inc
icebp
jl
and
jbe
mov
and
push
pop
xor
cmpsb
arpl
mov
pop
fdivl
inc
inc
cmp
cmc
aad
push
push
add
cmpsb
add
ror
rorl
pop
xor
sarb
and
dec
arpl
ret
lret
mov
inc
or
jecxz
not
mov
shrl
xchg
repz
das
push
ljmp
daa
adc
and
pop
cs
cmc
add
dec
inc
cmp
add
lods
xor
lea
loopne
fldt
rol
jo
movsb
shr
lret
mov
loopne
xchg
jnp
cmp
adc
jmp
push
mov
cmc
addr16
in
dec
add
inc
and
or
add
xlat
inc
fcmovb
movsl
or
incb
rolb
outsb
mov
out
lock
cmpsl
popf
xor
push
cltd
lahf
fsubr
iret
sub
xchg
fnstcw
xor
lds
dec
stos
scas
jecxz
cld
ljmp
xor
pop
jne
outsl
push
leave
enter
fbld
mov
push
loopne,pt
test
stos
jecxz
iret
cmpb
xor
ds
test
aaa
sbb
push
jg
jmp
mov
les
scas
ljmp
mov
packuswb
or
es
xchg
insl
cmc
and
mov
inc
pop
ja
das
mov
fdivrs
pop
out
add
mov
inc
inc
mov
call
jns
xor
fucomi
push
pop
les
jb
cmpsb
imul
push
mov
test
and
dec
sarb
adc
xchg
jae
mov
and
adc
xor
in
fs
mov
and
xlat
mov
stos
cli
sti
xor
shlb
xrelease
insl
mov
fs
out
or
rolb
add
enter
jae
lods
sbb
arpl
and
cmp
rcll
stc
xchg
clc
xor
rolb
lds
cmp
lcall
or
push
insb
jmp
mov
or
sbb
cmc
push
xchg
daa
icebp
lret
and
ja
aaa
imul
mov
adc
arpl
add
or
jo
cmp
add
cltd
dec
mov
out
inc
mov
js
imul
jl
stc
adc
mov
push
cmp
jno
push
sbb
jl
sub
cs
out
cmc
adc
leave
stos
jo
subl
pop
test
jmp
aaa
dec
sbb
dec
or
pop
test
xor
sbb
mov
sub
adc
in
lret
xchg
xor
outsl
scas
xlat
fidivrs
pushf
push
jb
xor
out
jp
mov
jne
xor
push
cld
jnp
call
stos
xor
push
mov
pushf
in
jmp
add
stc
testb
addb
push
jno
fwait
rcl
xchg
cld
xchg
mov
cmpsb
lea
xchg
inc
setno
insw
mov
fcompl
in
in
and
clc
xchg
test
addr16
out
lock
sbb
inc
pop
loopne
cld
sub
sbb
jnp
xor
push
das
pushf
xchg
movsb
icebp
sub
mov
clc
cmp
std
jmp
stc
pop
push
sbb
std
cmpsb
and
fcmovu
out
or
pop
xlat
into
jne
cmp
dec
xchg
xor
addl
nop
pushf
dec
sub
push
push
and
iret
scas
mov
lock
jge
inc
test
mov
rol
sub
call
adc
les
insl
icebp
sub
adc
repz
jo
out
push
mov
loope
icebp
and
cld
mov
gs
jl
jbe
sbb
movsl
pop
sub
aad
or
push
iret
dec
popa
lea
jecxz
out
adc
sbb
enter
bound
inc
js
jo
call
pavgw
ret
sbb
xchg
packsswb
std
aam
bound
mov
push
adc
sub
jmp
mov
xor
mov
jb
rcll
outsl
mov
push
mov
mov
insl
test
test
jge
push
ror
and
shlb
push
dec
mov
dec
cmp
into
es
mov
jbe
jl
mov
fsub
daa
adc
mov
aaa
xchg
sub
jae
shlb
fisubrs
push
adc
jmp
sub
xchg
sub
dec
iret
xchg
inc
mov
cmpsl
out
push
xchg
cmc
push
inc
mov
add
pop
xlat
xor
sarl
xchg
mov
cmpsb
in
or
jg
lods
mov
xchg
mov
jb
push
fld
in
cmp
pop
sub
loope
adc
loope
mov
into
pusha
cmp
int
jns
lock
jae
adc
mov
and
btc
push
sub
sbb
jae
mov
mov
rcll
xchg
sub
les
ja
xor
cwtl
mov
lret
les
or
cmpsb
test
insl
add
dec
and
cltd
adc
or
xchg
out
push
fldcw
push
imul
fidivrs
call
inc
mov
pop
jno
mov
and
jecxz
bound
push
fcoml
shll
lahf
push
and
imul
test
sahf
mov
pop
das
xchg
lock
mov
int
stos
fsts
xchg
add
mov
fst
push
insb
outsl
sub
adc
sub
daa
and
jno
dec
sub
xchg
popf
ss
enter
dec
cmp
out
sub
nop
jo
mov
jb
nop
popa
je
jl
dec
fdivs
outsb
mov
pop
orb
aad
scas
lock
inc
mov
pop
sbb
mov
je
cli
int
addr16
jmp
and
dec
mov
xor
hlt
gs
push
jne,pt
adc
out
test
jnp
adc
push
add
adc
jmp
add
stc
loopne
mov
pusha
aaa
les
jbe
sbb
sub
push
inc
ja
sbb
push
push
int3
in
jle
js
pop
clc
sub
sbb
fcmovnbe
push
pusha
mov
sub
inc
popa
mov
push
jle
and
push
mov
dec
inc
pop
cli
mov
mov
push
jmp
push
insb
push
bound
fsts
imul
jmp
gs
mov
fmull
outsl
or
xchg
push
inc
std
jo
mov
sbb
daa
test
dec
les
fldenv
je
push
sbb
xlat
xor
loop
fsubp
in
popf
call
jbe
sti
mov
inc
popf
icebp
inc
leave
adcl
push
inc
ret
mov
mov
xor
fwait
pop
or
add
ss
test
push
push
pop
cs
pop
mov
into
inc
adc
adc
neg
mov
lret
pop
out
sub
sbbl
les
std
mov
dec
cli
and
stc
divl
or
idivb
xor
inc
adc
sub
cmp
scas
int
or
rcrb
xchg
pushf
cwtl
sbb
insl
popa
fsubrl
mov
cmpb
jnp
in
ret
inc
cli
out
cmp
fdivrp
fdivs
jne
out
pop
cmc
jne
add
or
out
imul
mov
repz
ljmp
push
push
movsl
scas
jmp
or
inc
mov
adc
push
xlat
jne
orl
sub
jle
fwait
dec
push
xchg
jnp
push
xor
jmp
pop
movsb
jb
into
dec
rclb
iret
push
outsb
sub
dec
jge
mov
and
xlat
cli
xchg
idivb
add
mov
mov
icebp
fists
cltd
repnz
adc
adc
mov
lret
sub
jge
rclb
xor
dec
out
push
pop
lds
inc
lock
add
sub
mov
nop
mov
sub
ss
rcrb
int3
jecxz
lahf
push
jns
roll
bound
jns
test
shrb
insb
mov
inc
sbb
test
mov
in
add
insb
xchg
movsl
push
lret
and
xlat
lcall
lea
push
xor
xchg
arpl
ds
jb
ja
sbb
jae
out
imul
insl
leave
xor
loop
push
jg
lds
mov
insl
les
test
push
test
in
sub
pop
movsl
sub
jb
xor
pop
sub
xchg
mov
cmp
and
inc
fistpll
push
xor
enter
and
test
int
mov
xchg
and
xor
mov
push
les
mov
ja
or
jae
roll
xor
mov
rcll
movsl
std
pop
movsl
jno
or
xor
jp
inc
and
jge
ficoml
push
push
push
das
adc
sub
in
sahf
out
cmpsl
decb
test
mov
js
mov
in
push
stos
push
js
pop
fistpl
add
dec
push
fsubrs
fistl
xor
jne
pop
adc
push
enter
cli
insl
mov
shrb
nop
jg
add
mov
or
adc
cld
pop
lahf
stos
jle
and
sbb
xlat
inc
out
mov
and
jno
repz
int3
dec
sarl
add
insb
fmulp
fldt
xor
addr16
inc
lock
in
push
icebp
xchg
inc
cmpsb
lcall
xor
ret
jg
inc
lret
or
hlt
cmp
leave
xor
bound
addl
cmp
inc
mov
incl
imull
mov
std
cs
addr16
mov
sbb
mov
xor
std
inc
xor
pop
push
loop
dec
add
loopne
xor
push
pop
in
xor
paddusw
fbstp
pop
data16
adc
dec
jno
jne
outsb
push
jbe
decl
loop
jb
loop
dec
jmp
stos
sub
jno
scas
lods
cmp
jns
mov
pop
test
pop
mov
push
scas
adc
sti
xchg
icebp
sbb
xor
lcall
mov
test
jne
add
movsb
roll
test
jno
out
mov
mov
call
push
outsl
call
xchg
or
cmpsl
mov
loope
push
call
scas
mov
insl
mov
bound
cli
insl
cmp
cmp
loope
sub
sahf
sbb
sti
cmp
fwait
cvtps2pd
int3
call
xor
lds
pop
std
gs
adc
push
ret
jbe
imul
loop
mov
aam
cmpsl
adc
sbb
fidivl
adc
fidivrs
sbb
sub
xlat
mov
ds
ja
and
fmuls
shr
push
pop
jp
ret
out
push
frstor
in
stos
lds
xchg
mov
push
sti
aas
js
loopw
dec
test
nop
xchg
jge
cmp
cmpl
loope
jl
dec
mov
pop
int3
inc
mov
nop
lods
ficoms
xchg
inc
xor
jne
sahf
test
inc
jae
mov
mov
pop
adc
xchg
ljmp
lods
enter
dec
cmp
out
dec
ret
lea
pushf
inc
push
outsb
fidivs
add
andl
push
cmp
fisubs
pop
mov
loopne
pop
out
test
fs
inc
dec
jno
mov
aad
fldenv
insb
js
mov
xchg
mov
loope
mov
dec
stos
push
pop
shr
pushf
or
jecxz
push
mov
and
dec
in
push
fisubrs
xor
pop
and
dec
lret
jecxz
or
jle
fcmovu
and
push
lret
add
mov
repnz
push
jae
leave
xchg
mov
push
xor
in
aaa
xchg
sbb
notb
mov
divl
test
pop
inc
and
xchg
pop
lock
cmp
ds
out
and
dec
jo
sub
pop
dec
test
sub
or
inc
ret
xor
int
jnp
sbb
cmp
xchg
loop
cmpsl
fbstp
xor
fldl
test
jns
push
daa
mov
popl
adc
inc
imul
mov
push
jae
data16
jle
movsl
fdivs
xchg
inc
inc
cli
addr16
fdivr
std
inc
inc
pop
sub
sub
pop
sub
and
mov
add
test
mov
or
and
fisubrl
push
inc
mov
push
int3
mov
cld
jns
lods
or
mov
clc
push
pop
rclb
cmp
nop
rcll
jecxz
xchg
inc
jns
clc
inc
mov
dec
shlb
mov
push
inc
movl
push
push
aaa
cmp
or
loop
cltd
mov
sahf
mov
push
test
mov
fs
loopne
stos
mov
aas
or
dec
in
and
sbb
lock
mov
push
dec
push
rol
bound
cli
cmp
gs
push
or
sbb
lcall
cld
mov
xchg
jecxz
mov
in
sbb
xlat
sub
jnp
shl
jae
inc
lods
jnp
popa
sbb
add
mov
fdivl
inc
pusha
cmc
fcomps
orl
ljmp
push
mov
pop
dec
xor
adc
into
and
adc
ja
aaa
sti
insl
lret
fcompl
sub
lea
sub
roll
fcompl
mov
dec
adc
test
push
fiaddl
xchg
and
ret
fiaddl
int
dec
cmp
ret
sbb
push
call
rclb
push
data16
loopne
das
pop
xor
loope
mov
stc
imul
rorb
mov
mull
leave
or
mov
xlat
xor
pop
sti
xor
in
call
int
faddl
fidivrs
aad
nop
jne
cmpsb
insb
lock
add
and
imul
ror
pop
push
xchg
in
or
dec
clc
dec
loop
sbb
gs
and
jge
cwtl
sub
cmc
fcompl
push
xchg
repnz
push
inc
pusha
nop
pushf
mov
push
decl
dec
imul
enter
sbb
aam
xlat
fstps
cmpsl
fists
test
inc
xchg
mov
pop
lods
in
pop
mov
adc
adc
sub
hlt
jmp
dec
or
push
lret
push
imul
add
inc
inc
jmp
xchg
pop
push
pop
sbb
and
push
sbb
repz
mov
jmp
pop
fcmovb
icebp
xor
xlat
adc
jnp
push
xor
insb
stos
stc
adc
inc
dec
repz
out
cmpsb
out
mov
cs
xchg
inc
push
mov
xor
mov
jno
mov
lcall
lods
adc
ret
into
dec
gs
sbb
fmull
jae
leave
push
xchg
add
out
add
not
adc
js
xor
inc
mov
sub
nop
sub
test
sbbb
mov
xlat
pop
mov
jge
cmp
aam
add
gs
sub
fwait
hlt
loope
mov
aam
sub
jae
sub
ljmp
test
mov
loopne
jns
and
fistl
inc
xor
cmp
inc
mov
push
insb
stos
push
xlat
pop
cmp
push
jmp
andb
mov
mov
frstor
lcall
and
aaa
xlat
jmp
out
xor
movsl
stc
dec
ljmpw
decb
adc
inc
xor
insl
int
mov
sub
loope
fcoms
in
rol
add
shr
push
add
sarb
adc
jmp
mov
xor
lock
pop
push
mov
inc
das
clc
push
fiaddl
adc
adc
jae
int
gs
pop
mov
dec
in
ljmp
inc
test
and
lds
pop
push
sbb
mov
xor
xchg
test
roll
jno
cmp
push
out
jmp
fiaddl
and
rcl
scas
scas
pop
stos
imul
or
xchg
inc
lahf
add
sub
mov
xchg
shlb
ret
pop
nop
leave
pop
jp
stos
mov
hlt
shll
xor
mov
sahf
mov
sarb
mov
cs
leave
dec
addr16
and
pop
stc
ljmp
stos
test
and
sbb
fldcw
lcall
and
dec
mov
rclb
dec
out
es
xor
jb
lods
push
adc
shr
xor
pop
xchg
fsubrs
pop
sti
insl
lds
cmp
sbb
push
push
loopne
cmp
sub
loop
sbb
out
mov
test
stc
aaa
mov
xlat
lds
mov
imul
xchg
or
rcrl
xor
pop
outsb
pop
cmp
insl
daa
cmp
lods
out
into
outsl
sub
lahf
pusha
repz
mov
repz
or
jmp
pop
fwait
mov
call
mov
inc
lahf
sub
in
ret
in
sbb
daa
fcoms
out
shr
mov
lret
push
addr16
mov
scas
je
fistps
subl
push
cmpsl
test
xor
aaa
stc
into
cmp
xchg
mov
push
loop
ret
testl
add
adc
les
push
jns
xor
loopne
cmc
test
sbb
cmpsb
pushf
in
add
xchg
sub
into
jmp
std
jmp
fidivrl
lods
scas
sub
adc
rorb
mov
pop
pop
das
iret
xchg
lods
pop
outsb
fnstsw
xchg
jmp
push
das
inc
push
prefetcht0
sub
mov
dec
pop
in
jle
arpl
inc
loopne
add
stc
ret
scas
mov
inc
xchg
sub
cmp
dec
ss
push
aas
add
sbb
pop
xchg
cli
and
mov
jg
int
mov
mov
sub
xor
jo
sbb
adc
shl
xchg
sbbl
lahf
push
pop
sub
sbb
inc
les
jbe
pop
leave
push
jg
ljmp
adc
inc
push
fiadds
xor
fs
mov
test
dec
mov
frstor
icebp
pop
mov
rcll
fstl
push
fcmovbe
sub
ror
js
mov
add
bnd
cltd
mov
sbb
movsb
popa
sub
mov
dec
xor
rclb
cmp
xchg
jle
sbb
xor
lods
jbe
push
mov
in
loope
mov
mov
sahf
popf
cmp
pop
mov
mov
dec
add
es
inc
sbb
mov
imul
std
out
adc
or
cmpsb
int
nop
add
xchg
inc
inc
jne
jae
in
insl
or
jbe
repnz
jb
mov
ds
enter
pop
inc
movups
js
dec
jge
cwtl
sub
mov
stos
call
xlat
cmp
pop
test
ljmp
xchg
loopne
clc
push
mov
popa
xor
stos
inc
fdivrp
push
mov
rcrb
lahf
sbbb
cmp
imull
jl
cmp
test
loope
lret
xchg
jge
and
lcall
sub
xchg
jle
push
imul
cmp
dec
pusha
dec
sbb
stos
mov
dec
js
sbb
out
hlt
push
pop
hlt
sar
adc
mov
xchg
or
push
orl
daa
jmp
movsb
adc
pop
fimuls
insl
push
in
sbb
nop
aam
jb
sbb
and
add
mov
cmpsl
fsubs
fistpl
or
jg
mov
rclb
int3
pushf
out
std
fs
mov
inc
cmp
xor
daa
imul
sbb
stos
push
lods
shlb
xor
cmpsb
mov
xchg
pop
pop
sbbl
mov
xor
out
jo
xchg
movb
push
jb
add
cld
movsb
stos
ljmp
add
fistps
inc
adc
jno
subb
sub
push
es
insb
lods
mov
loopne
cs
xor
dec
cs
jnp
lcall
aam
sarb
jae
mov
rorb
cli
rcrb
add
adc
push
js
cmp
dec
jmp
rorl
into
in
outsb
stos
test
jns
insb
insb
imul
pushf
in
sbb
pop
jg
lcall
pop
xchg
aad
shlb
out
fisubrs
mov
loopne
jecxz
lret
mov
daa
jl
xor
outsl
xchg
lods
inc
jns
sub
pop
negl
cs
sub
cmp
in
mov
pop
jae
call
mov
dec
add
mov
xchg
adc
mov
pop
fwait
pushf
stos
or
es
mov
cltd
mov
pushf
mov
into
mov
fdivp
inc
ret
jg
pop
cld
rcll
add
and
inc
repz
mov
insb
fwait
jae
loope
dec
add
jl
jle
orb
mov
and
sbb
dec
mov
mov
jecxz
push
mull
inc
jmp
mov
pop
jmp
jo
lock
push
xchg
push
pop
notl
cmp
shrl
lahf
push
jl
cmc
loop
clc
in
mov
dec
shlb
dec
into
mov
loope
outsl
test
push
xchg
and
jg
hlt
push
mov
sbbl
adc
xor
rcll
sub
xor
mov
xorb
mov
pop
or
scas
stc
dec
add
icebp
mov
pop
cli
inc
clc
insl
dec
stos
cmp
lods
cmp
fdivl
inc
inc
cmp
in
xor
cld
je
imulb
insl
subl
cwtl
and
ret
test
dec
xchg
rorb
dec
or
insl
lock
pop
add
sub
adc
sub
or
xchg
fstpt
mov
or
leave
test
xchg
jmp
or
mov
leave
or
sub
cmpsb
stos
cli
dec
aam
mov
fidivs
test
icebp
push
lret
outsl
iret
lret
lret
mull
jmp
pop
sub
andb
insl
popa
rorl
mov
sub
dec
mov
subb
lcall
mov
mov
pop
shr
sub
stos
cmpsl
xor
inc
icebp
xlat
dec
shl
sbb
in
les
pop
mov
repz
std
jmp
mov
cmp
mov
mov
xchg
jmp
sbb
imul
mov
cld
cmp
dec
xchg
loope
mov
jae
arpl
jmp
cmp
jae
in
cmpsl
ljmp
into
cmp
xchg
das
push
out
ja
lods
mov
dec
inc
std
pop
adc
pop
xor
add
mov
xchg
jmp
jbe
jecxz
test
cmp
bound
xor
les
enter
push
pop
rcrb
xchg
pop
mull
push
das
sbb
sbb
cltd
add
dec
rclb
arpl
in
inc
pushf
out
push
lods
xchg
jne
jae
into
and
cmpsb
mov
add
mov
fmuls
insl
hlt
jne
cmp
mov
pop
mov
jne
sbb
mov
and
sub
fistpll
cmpsl
enter
pop
test
inc
xor
lret
mov
xchg
dec
mov
loopne
mov
push
pop
lret
cmpsb
sbb
aas
or
pushf
xor
push
mov
adc
mov
dec
xor
aad
inc
push
loop
cmpsl
sbb
into
testl
in
jge
mov
arpl
push
jno
pop
push
nop
out
dec
inc
enter
dec
pop
lock
mov
loopne
inc
mov
mov
mov
fdivs
jnp
fistps
cmp
es
rcrl
xchg
rcl
aaa
cmp
icebp
test
dec
sub
ficoml
push
mov
out
inc
cmp
insl
or
cmp
sub
mov
das
mov
cmp
mov
pop
aad
es
cld
insl
inc
loop
jg
das
inc
add
mov
xchg
decb
popa
out
push
xlat
das
lds
sub
sub
ldmxcsr
int3
ror
adc
add
test
sbb
roll
inc
jle
mov
icebp
bound
outsl
les
jb
faddl
nop
fadds
cmp
inc
int3
jne
mov
mov
insb
into
mov
adc
in
push
pop
or
fsubr
stos
pop
jae
dec
adc
or
stos
sar
aas
and
push
mov
sbbb
shrb
or
push
arpl
test
outsb
inc
pop
into
jle
loop
lock
push
jno
shr
nop
jmp
test
fldl
hlt
mov
jae
lock
enter
aam
mov
mov
mov
mov
lock
add
sahf
insb
enter
mov
call
fisubrl
dec
stos
adc
leave
xchg
adc
pop
enter
mov
cmp
dec
cltd
sbb
fcomps
lods
mov
push
xchg
and
cwtl
inc
xor
pop
push
jae
cwtl
cmp
leave
and
sahf
ret
dec
add
jo
fsubrl
shlw
test
gs
sbb
pushf
or
cmpsl
mov
pop
push
repnz
inc
dec
testb
fnstenv
dec
inc
xlat
jle
scas
aam
arpl
stc
sub
push
lea
mov
test
lcall
inc
xchg
scas
repz
add
or
imul
lea
stos
mov
hlt
cmp
adc
cmp
ret
and
call
test
call
xchg
xchg
xor
test
mov
xchg
fwait
xor
adc
mov
add
insl
mov
push
dec
adc
mov
pop
movzbl
sahf
sbb
push
dec
xchg
pop
test
pop
or
push
cwtl
or
lret
test
dec
jns
std
adc
outsb
insl
adc
mov
js
pop
mov
lahf
xchg
loope
rcrl
aam
pop
inc
pop
mov
dec
stos
pop
lret
js
pop
or
pop
les
and
inc
lret
or
shlb
jmp
in
ja
xor
pop
pop
cmp
xchg
inc
push
mov
test
es
outsl
divps
es
repz
shll
dec
lcall
imul
ss
loopne
cld
add
dec
push
fnstcw
dec
mov
mov
fistpll
or
call
sti
jle
mov
ljmp
mov
push
pop
call
mov
xchg
je
popf
inc
andl
std
or
jne
test
add
push
cmp
cld
pop
mov
adc
out
ror
push
inc
fildl
lods
push
sbb
mov
lret
pop
and
jnp
imulb
aas
mov
repz
adc
dec
sbb
sub
sub
aad
adc
xor
sub
fiaddl
xchg
push
addr16
outsb
pop
jns
aad
push
sbb
rcr
clc
sbb
out
jne
mov
arpl
pop
out
pusha
push
aas
test
lcall
fldcw
aaa
test
xchg
and
or
lahf
rcrb
adc
push
pushf
mov
mov
movsl
dec
fildll
mov
push
adc
test
pop
add
add
inc
ret
dec
mov
cmc
mov
jg
cmp
inc
dec
movsb
mov
or
dec
add
movb
jbe
xchg
add
dec
jmp
xor
push
lcall
push
mov
in
into
and
jg
xchg
repz
push
shlb
scas
mov
fisttpll
in
icebp
and
xor
pop
mov
das
je
scas
stos
push
push
out
xchg
mov
and
add
shll
mov
mov
sbb
mov
mov
cmp
imul
push
int
pop
adc
inc
inc
mov
sub
pop
xor
sub
and
out
push
cwtl
scas
int3
xor
daa
shlb
hlt
xchg
sbb
xchg
nop
xor
jbe
call
jmp
dec
cmpsl
dec
loopne
push
nop
jbe
mov
daa
lret
mov
mov
jmp
add
xor
jb
ss
adc
test
dec
mov
cld
inc
cmp
pop
nop
pop
jecxz
sbb
mov
mov
int
ret
lods
push
fwait
add
jle
xchg
call
mov
aaa
cs
sbb
add
js
sbb
push
sahf
push
adc
mul
hlt
inc
ja
lods
hlt
pop
mov
pop
push
push
roll
jecxz
jmp
outsb
ret
lods
dec
fistpl
popa
pushf
addr16
sbb
mov
xchg
ficoml
loop
in
xchg
aaa
lahf
fistl
mov
push
rolb
ss
cmp
std
sti
cli
pop
aas
fwait
leave
mov
je
mov
add
push
mov
cmp
mov
mov
jnp
pop
pushf
je
inc
inc
sbb
push
inc
shrb
mov
push
inc
xchg
enter
sub
xor
insb
daa
push
es
roll
nop
pop
loopne
add
and
cld
mov
xor
fisubrl
lock
movsl
xor
push
mov
addr16
pusha
mov
shrl
shll
sub
xor
sbb
testl
pop
bound
fstpt
sub
stos
adc
in
and
cltd
aad
or
add
mov
push
jns
sbb
adc
pushl
cmp
xor
enter
inc
inc
rcrl
push
insl
adc
mov
push
jle
fstl
or
mov
sub
xchg
fcomps
hlt
jmp
jo
outsb
mov
inc
sbb
lcall
jg
pusha
rorb
sub
icebp
dec
cmpsb
add
add
mov
mov
in
or
fisubrl
sbb
jle
clc
xor
mov
repnz
jecxz
jl
push
fsts
sti
push
push
adc
aad
fcoms
popf
out
sub
int
xor
in
sbb
pop
insl
jl,pt
push
cmc
in
ss
xchg
sbb
dec
or
outsl
lcall
dec
xchg
mov
lock
dec
cmpsb
and
and
xchg
and
xchg
or
sbb
mov
nop
add
ret
andb
inc
or
jp
shll
lcall
xchg
add
imul
xor
test
mov
pop
into
jo
cmp
lea
imul
test
mov
xor
inc
mov
js
out
jmp
fsts
icebp
sub
sbb
cmp
sahf
mov
add
lods
dec
jb
jns
ret
aaa
mov
sub
test
add
dec
mov
sbb
lret
fmul
cmpsl
jnp
fs
xchg
enter
movsb
fs
push
pop
inc
xchg
push
xchg
mov
mov
cmpsb
xor
inc
inc
adc
xchg
mov
mov
data16
lahf
in
in
mov
popf
pop
mov
mulb
push
stos
cmpsb
push
lods
dec
lock
notl
enter
pop
aaa
pushf
stos
nop
pop
xorb
sbb
mov
movsb
imul
sti
popa
add
or
jmp
xor
cli
push
mov
insb
cmp
fisubrl
call
cltd
mov
lods
aam
sbb
add
and
xchg
pop
out
stos
xor
mov
shr
andb
out
push
pop
imul
imul
rorb
clc
shlb
mov
sti
stc
hlt
pushf
sbb
outsb
fidivrs
or
pop
aam
outsl
ljmp
xor
lcall
sbbl
adc
lea
ljmp
mov
lods
fisubl
ret
pop
push
or
loope
and
icebp
mov
insl
fadds
mov
insl
mov
fdivp
fadds
and
jp
data16
test
sar
stos
jg
int
int
jno
sub
test
out
inc
or
pop
in
dec
ja
mov
dec
sbb
push
cli
sub
out
mov
mov
aas
ret
icebp
sti
mov
jb
lcall
xor
cwtl
pop
mov
inc
dec
cmp
push
out
lcall
adc
or
fadds
jecxz
push
push
stos
mov
mov
jae
and
dec
pop
int
jg
icebp
or
pavgb
mov
test
sub
and
xorb
sub
fcmovnb
push
enter
inc
jmp
cmc
sti
in
fidivrl
mov
dec
add
mov
add
and
sbbl
and
insb
les
mov
pop
xchg
pop
lods
xorl
sub
sarl
fistps
shlb
test
mov
bound
sarb
lock
cmp
mov
mov
push
dec
push
lea
pop
sbb
int3
mov
inc
sub
mov
cmp
mov
scas
bnd
mov
aas
pop
call
add
mov
pop
add
inc
or
dec
jp
cld
or
jo
lds
lret
sbb
rcrb
cld
roll
lcall
es
cli
mov
outsl
sub
cld
xchg
jns
imul
mov
mov
or
test
push
mov
dec
rol
push
dec
andb
sub
xlat
mov
sub
testl
ja
jno
cmp
je
in
inc
mov
mov
mov
dec
je
imul
sub
int3
cmp
xchg
rcrl
leave
xchg
fldln2
xchg
mov
test
test
jmp
mov
xchg
sti
cmp
aam
xchg
mov
loopne
adc
lcall
cli
aas
scas
int
loopne
jnp
lret
das
ds
xchg
daa
dec
sahf
push
movsl
out
inc
cld
xor
jbe
rclb
sub
sbb
ja
xor
pop
lret
repz
mov
mov
sub
dec
movsl
pop
je
adc
cltd
rorl
sbbl
rcrl
pop
cltd
ljmp
into
addr16
jne
xchg
bound
insb
inc
icebp
cli
xchg
mov
and
adc
mov
hlt
cltd
cwtl
testb
xchg
inc
pop
pop
aaa
ret
cs
leave
xchg
pop
jne
addb
mov
pop
aam
inc
push
mov
movsl
mov
int
add
aam
xlat
scas
xor
cmp
jno
jg
add
rcl
es
mov
jns
or
stos
outsb
sbbb
mov
sub
pop
ret
jns
sub
jb
cli
pop
sbb
xchg
adc
lret
pushf
adc
fbld
push
pop
sbb
repz
push
cwtl
pop
jg
mov
arpl
and
pop
add
mov
in
aad
push
mov
cmc
xchg
pop
aas
mov
pop
pop
or
test
sbb
and
adc
xchg
push
jp
sub
sub
fidivl
je
xor
xor
loopne
fwait
jbe
lcall
fisttpl
bound
fistpll
adc
sbb
icebp
jge
jo
aaa
in
cmpsb
lcall
les
jno
lret
add
dec
stos
sbb
mov
dec
jge
add
mov
sub
aas
rdmsr
lcall
pusha
xor
mov
lock
fwait
jle
or
scas
adc
sbb
stos
cmp
in
pop
in
pop
test
add
mov
out
push
xchg
loopne
sahf
enter
inc
push
shl
lods
inc
lahf
push
mov
mov
inc
adcb
mov
test
sbb
movsb
cmc
push
iret
sub
or
test
dec
addb
vmaskmovdqu
fincstp
xor
xchg
int
mov
mov
jle
jmp
xchg
aad
and
loop
xchg
inc
jp
cwtl
iret
and
and
sbb
mov
std
push
fiaddl
cwtl
shrl
lret
test
aad
test
lea
imull
loope
add
cmc
popf
repz
mov
jbe
call
cmpsl
sbb
mov
shrb
mov
outsl
inc
fstl
add
das
or
fstpt
fcomps
push
fwait
testb
add
sub
xchg
pop
sbb
lds
mov
and
and
cwtl
and
mov
xor
pusha
loope
loope
jmp
imul
mov
lcall
aad
aam
call
outsb
call
test
js
mov
jl
sub
xor
sub
sbb
sbbl
xor
xchg
pushf
mov
pop
stc
mov
pushf
xchg
push
addr16
insb
repnz
rol
mov
xorb
cmp
outsl
in
cltd
hlt
inc
and
dec
pop
dec
imul
shll
roll
and
icebp
sbb
enter
push
add
int
enter
push
jp
ror
lcall
or
loop
dec
or
andb
mov
rcrb
pop
xchg
in
ljmp
jge
sub
push
mov
dec
pop
lock
cmpsl
cmc
popa
rcrl
in
das
pop
cmovbe
add
xchg
dec
addr16
or
sub
cmpsb
mov
ds
push
dec
inc
in
dec
clc
mov
adc
in
mov
sub
enter
mov
xchg
outsl
outsb
mov
movsb
fsubrs
mov
scas
mov
pop
jo
sub
cs
out
rcll
cmp
dec
loopne
push
cwtl
aam
mov
lock
jno
and
mov
inc
push
es
mov
or
mov
lcall
adc
lea
xchg
mov
lahf
push
stc
hlt
pop
pop
adc
dec
arpl
xor
enter
sbb
cmp
sub
cmp
cwtl
insl
push
push
and
pop
leave
mov
sub
addr16
loopne
inc
dec
mov
cmp
mov
lret
or
pop
ljmp
xchg
push
js
xchg
mov
or
mov
jecxz
idivl
rcrb
push
pop
mov
and
mov
gs
mov
daa
call
push
pop
out
movsl
subl
test
sub
fsubs
loope
jae
sbb
stc
int
add
adc
sbb
out
stc
push
enter
xchg
shr
pushf
in
adc
insl
pushf
xchg
xchg
jp
jb
lcall
xor
aam
in
pop
xchg
mov
cmpsb
push
jmp
and
lahf
shll
out
push
mov
mov
cmpsl
mov
aaa
and
out
sub
mov
push
xchg
enter
cmp
pop
clc
pushf
xchg
lock
xor
cmp
push
stos
cmp
xor
adc
call
out
pop
push
ljmp
fistl
adc
fstps
lret
aaa
pushf
mov
inc
jnp
mov
out
cmp
divl
lret
call
unpckhps
filds
and
cmp
fldcw
imul
rcrb
jb
jg
pop
shll
js
icebp
outsb
and
rcrl
cmp
mov
ficoml
mov
jmp
testl
and
push
ffree
or
xchg
mov
xchg
sbb
mov
fdivrs
fwait
sti
test
es
or
jecxz
jbe
data16
dec
sub
hlt
dec
inc
mov
sbb
pop
dec
jb
fnstsw
orl
pop
out
mov
mov
lret
jl
jo
push
sbb
adc
sub
xor
push
sbb
cmpsb
xor
not
push
imul
sbb
xorl
xchg
adc
adc
enter
lds
mov
loop
push
dec
sub
sub
les
push
cmpxchg
dec
inc
sbb
lock
jmp
jo
test
call
call
dec
scas
sbb
mov
rcll
add
scas
sub
js
ja
sub
into
sti
mov
jns
mov
sub
or
add
incl
xor
mov
push
mov
pop
pop
psadbw
scas
into
je
add
lahf
pop
push
lds
ljmp
xchg
mov
test
stos
mov
fidivl
and
test
in
int
out
mov
and
aas
jge
and
ljmp
or
mov
fs
outsl
pop
loope
mov
icebp
fdivrl
cmpsb
lods
repnz
mov
pop
mov
pop
stos
push
stos
jno
stos
mov
dec
fidivl
or
pop
jno
test
sbb
cmp
testl
cmp
aad
sar
imul
sbb
shlb
scas
cli
aam
push
sarb
inc
cmpsb
inc
jg
push
or
stos
je
jmp
sbb
pushf
push
dec
xchg
push
rclb
shrb
push
aaa
ljmp
jp
loop
jle
sbb
ja
pop
push
lods
pop
sti
cmpb
lret
fdivs
inc
inc
xchg
out
push
adc
loopne
test
and
xor
xchg
in
xor
ja
nop
and
xchg
lcall
inc
sbb
roll
in
shr
insl
jecxz
movsb
sarl
jnp
in
add
popf
dec
rolb
in
xchg
pop
mov
jno
mov
push
dec
aaa
call
ret
repz
dec
mov
jecxz
test
scas
sbb
add
xchg
adc
xchg
mov
stos
ja
lds
sub
and
movl
pop
xchg
mov
out
and
pushf
insb
inc
decb
add
test
jno
jmp
sbb
cmpsb
add
jle
sbb
add
dec
fcmovne
jb
fcmovbe
sbb
in
mov
inc
push
dec
test
or
pop
repnz
adc
push
popa
push
mov
xchg
dec
mull
test
test
jno
inc
xor
dec
push
cmpsl
xchg
arpl
and
sub
lahf
std
add
js
fistps
cmp
jnp
pop
cmp
int3
enter
popa
add
push
push
jo
pop
stos
inc
sub
dec
xchg
aam
stc
inc
lods
lock
lahf
or
mov
xor
pop
aad
jge
shll
xchg
es
enter
mov
or
push
push
mov
fsubrs
rorb
cmp
popa
test
nop
ss
inc
xlat
dec
imulb
dec
pusha
loopne
xchg
jne
lcall
dec
xchg
xor
adc
sub
jns
or
inc
jmp
lret
leave
movsl
imul
scas
into
adc
push
jle
pop
mov
push
and
insb
scas
pop
bound
lahf
int
jno
std
fisttpll
loopne
addr16
insl
outsb
pusha
or
call
xor
popf
les
nop
cmp
jecxz
bound
push
lahf
mov
inc
repnz
mov
jnp
sub
negl
push
call
and
and
push
sub
fbstp
hlt
inc
mov
int
inc
push
add
in
push
daa
mov
js
jge
jae
cmp
add
mov
scas
mov
pushf
enter
dec
fsts
out
xchg
loope
pop
pop
jge
stos
push
or
pop
std
sbb
cmp
loopne
cld
ficomps
loop
sbb
incb
push
add
sub
cld
test
cmp
movsb
mov
and
mov
adc
push
test
fsubrp
jo
pop
jbe
aad
in
sbb
cmp
outsb
xchg
xlat
aaa
pminub
rorb
in
jb
das
popf
dec
fldenv
jne
imul
jmp
mulb
fisttps
push
sbb
cmp
adc
adc
clc
je
inc
mov
loop
imul
mov
or
or
fs
adc
mov
add
and
pop
jae
mov
and
xor
lcall
jp
push
fs
xchg
xchg
mov
rorl
sbb
das
or
gs
shlb
xchg
xor
scas
pop
mov
lcall
call
fs
in
fwait
pusha
jp
mov
pop
jge
sub
inc
insb
daa
ds
ljmp
fs
xchg
loop
lock
movsb
adc
mov
add
scas
les
std
leave
subl
lea
dec
inc
jae
in
loope
jne
das
nop
lret
dec
pop
jb
cmc
ret
xchg
daa
and
jge
jmp
std
in
repnz
sub
mov
sbb
mov
into
adc
mov
pop
leave
test
aaa
jl
pop
mov
inc
testb
repnz
pop
pop
xchg
jl
mov
outsl
arpl
lret
xor
and
in
js
sahf
jmp
mov
xor
test
rcll
sbb
jle
cld
xor
xchg
lcall
mov
scas
mov
in
iret
dec
and
mov
pop
or
mov
loopne
xchg
imul
dec
out
dec
icebp
orps
test
xchg
out
sub
dec
adc
ror
lods
xor
test
pushl
js
sub
imul
movsb
shl
push
sbb
jbe
xor
ret
std
int3
or
dec
fwait
testb
stos
mov
loop
push
ja
add
or
and
jae
jne
aas
dec
and
scas
sbb
aam
insb
scas
or
mov
std
testb
fbstp
sahf
lods
mov
fdivrl
jecxz
xchg
lods
dec
mov
loope
mov
imul
jns
xor
mov
data16
xchg
jg
addr16
pop
sbb
jp
xchg
sub
ljmp
out
ret
cmp
mov
call
mov
in
es
cmp
push
push
enter
fimuls
push
cmp
out
imul
ja
rcrb
enter
dec
jl
mov
inc
adc
xor
out
in
out
inc
pop
push
add
in
movsb
out
nop
xor
ret
icebp
lcall
out
insb
dec
pop
sbb
stos
mov
dec
loop
inc
mov
sbb
ds
mov
cltd
push
rcll
jae
pop
xor
ds
roll
idiv
jbe
stos
pop
adc
or
mov
inc
jb
je
aaa
mov
push
cmc
mov
xor
mov
cld
cltd
leave
notb
aam
and
push
aam
add
fimull
or
dec
dec
insl
mov
in
xor
lds
xor
testl
cmp
mov
cmp
and
pop
mov
jne
movl
pop
inc
xchg
aaa
inc
out
xchg
push
inc
inc
jecxz
and
stc
in
add
mov
jae
jle
lea
mov
or
testl
inc
loope
popa
push
pmovmskb
cmc
mov
mov
dec
decl
mov
mov
or
inc
jns
fimull
dec
push
and
dec
clc
insl
cmp
jecxz
test
pop
testl
sub
cmp
test
int
inc
bound
insb
fmuls
fimull
iret
test
push
push
sbb
xor
or
cmp
jbe
and
and
nop
cmp
adc
ret
int
jmp
outsb
mov
aam
sbb
subb
mov
add
jbe
sub
ja
mov
jecxz
mov
mov
pop
add
xchg
into
adc
lock
mov
mov
jecxz
jns
adc
loop
in
jecxz
movsl
clc
dec
mov
push
mov
add
push
in
loop
pop
fisttps
sub
push
push
scas
subb
pop
aaa
add
push
inc
shrb
add
mov
or
ret
add
and
or
pop
sti
and
clc
mov
or
mov
pop
inc
cmp
mov
push
in
dec
xor
mov
addr16
cs
jge
mov
divb
dec
add
jmp
mov
push
cli
xor
sub
jle
sarl
std
cmc
add
mov
nop
sbb
inc
aam
outsl
xchg
and
push
into
ret
mov
faddl
popa
or
push
pop
fcompl
mov
jmp
loopne
cmp
xchg
or
mov
jnp
dec
in
xor
mov
cmp
mov
daa
and
das
fimull
lods
sbb
dec
pop
loope
daa
aad
xchg
mov
test
test
push
dec
lods
xchg
int3
mov
add
cmp
fwait
jae
xchg
inc
mov
mov
jne
out
shlb
push
pop
iret
mov
pop
cmp
inc
pusha
mov
xchg
insl
jp
daa
xchg
and
fs
popa
mov
cmp
mov
fisttpll
test
pushf
pop
mov
jecxz
shlb
dec
push
jo
sbb
lods
inc
movsl
xchg
scas
xchg
push
lret
fcoms
or
jl
mov
xchg
sbb
xchg
adc
hlt
sbb
data16
mov
leave
ljmp
scas
testl
nop
or
mov
sbb
mov
pop
adc
mov
add
sarb
jecxz
adc
ffree
sbb
xchg
dec
xor
push
cmpsl
cmp
push
mov
cmpsb
jmp
jle
je
dec
sub
add
pop
mov
outsb
xor
mov
loope
xchg
sbb
xchg
pop
cmc
rcll
test
out
push
dec
jo
xor
dec
stos
mov
daa
nop
push
cmpl
gs
xchg
and
xchg
ss
xchg
out
fistps
sbb
jge
jb
and
pop
push
pushf
rcl
dec
inc
sbb
sub
pop
outsl
test
in
incb
push
adc
das
outsb
push
inc
mov
cmp
cmpb
fisttpl
aam
mov
jne
out
cli
mov
or
dec
jp
push
fs
adc
mov
mov
add
rcrb
or
push
std
imul
inc
inc
cmpsl
aad
mov
or
xor
inc
mov
pop
fistpll
jl
mov
rol
dec
push
adc
cmp
push
dec
push
sub
enter
std
lods
jge
test
mov
jl
xor
add
int
jle
xor
mov
jno
js
mov
push
movsl
mov
add
into
inc
data16
or
cmp
ja
push
jb
push
in
pop
in
jne
sub
jl
pop
stc
lahf
mov
push
sti
jns
outsb
scas
or
aam
lods
js
sub
and
mov
dec
daa
mov
inc
add
aad
dec
testb
mov
or
push
imul
xchg
leave
sub
orl
xor
out
mov
mov
xchg
dec
mov
xor
push
push
mov
xor
or
clc
faddp
sub
and
bound
cltd
inc
add
es
jmp
mov
ret
jno
sarb
adc
rcrl
mov
jl
addb
xchg
sbb
mov
adc
stc
jno
sbb
stc
mov
pop
sbb
xchg
idivl
push
adc
mov
xor
pushf
adc
data16
arpl
nop
fisttps
loop
add
mov
sbb
mov
lods
aas
adc
push
dec
loope
push
jg
mov
mov
sub
lods
inc
add
ret
orl
adc
pushf
and
fcoms
shl
mov
xchg
mov
add
push
mov
stos
mov
outsl
pusha
mov
jnp
in
xor
idiv
fmull
cltd
fwait
jl
add
sub
dec
xchg
mov
enter
mov
add
rolb
lods
sub
popf
sub
nop
push
cli
jnp
shlb
lea
xorl
add
rorl
les
push
cmp
mov
orl
push
xlat
insb
push
lahf
jnp
enter
dec
mov
push
xchg
cmpsl
push
inc
loop
fcmove
pop
lcall
xchg
xchg
insb
pop
inc
sahf
xor
mov
xchg
pop
pop
cmp
arpl
dec
fdivr
and
add
test
xchg
pop
jb
push
sub
xchg
lahf
and
sahf
ljmp
test
icebp
mov
bound
mov
sbb
adc
sbb
lcall
dec
adc
push
popl
iret
mulb
dec
cmp
pop
jg
sub
jl
push
mov
and
jg
mov
xchg
and
mov
pop
mov
mov
lahf
xorb
cmc
pushf
ret
jge
pop
imul
dec
out
fldt
scas
imul
lock
cltd
push
and
mov
push
sub
sbb
sbb
lea
and
sbb
xlat
mov
stos
mov
dec
testl
mov
adc
mov
mov
add
aaa
mov
dec
jmp
fdivrs
icebp
sub
andl
aas
and
mov
rcl
push
push
adc
fiaddl
decb
sarb
dec
xor
stos
cmpb
lahf
mov
daa
adc
jle
cld
adc
mov
outsl
jge
roll
jns
cmp
icebp
out
stos
dec
and
popa
push
xchg
aaa
sbb
mov
imul
cmpsb
jo
mov
sub
stc
iret
or
jae
add
cmp
jge
add
pop
push
int
or
jo
inc
dec
sbb
int3
pop
sub
cmp
mov
ss
mov
test
push
fimull
xchg
sub
push
fmulp
cmpsb
xchg
jae
pop
mov
jge
jge
cmpsb
or
mov
add
pop
aam
sahf
mov
sub
or
enter
daa
jae
xor
iret
pusha
mov
fcomps
push
mov
das
xor
les
and
xchg
sub
lret
dec
clc
or
jp
movsb
sub
xor
aad
out
test
shrb
je
rcrl
push
lods
mov
mull
jmp
pop
mov
stos
add
jp
jae
mov
mov
imul
incb
rorb
es
push
jl
mov
imul
cmpsl
addl
insb
add
pop
push
dec
mov
pushl
mov
arpl
jg
mov
adcl
xlat
out
inc
pop
sarl
jecxz
push
push
das
lcall
ja
dec
xchg
loop
ja
sub
dec
cmpb
lahf
js
icebp
mov
lock
repz
or
stos
mov
push
jno
insl
push
testl
cmpsb
push
inc
mov
sub
mov
sbb
or
out
push
rolb
stos
outsl
pusha
lcall
call
lock
and
shlb
mov
dec
cmp
mov
jo
xor
sarl
out
xor
dec
sub
xchg
dec
fmulp
mov
stc
mov
pop
mov
into
pop
sarl
jbe
repnz
fadd
adc
xor
and
mov
xchg
loop
dec
jp
mov
fsubrl
and
stos
jmp
jno
jl
arpl
and
test
push
fs
je
or
das
out
xchg
add
nop
adc
sub
push
sub
lods
adc
push
mov
adc
xor
and
pop
adc
pop
and
lock
mov
mov
addr16
es
mov
dec
call
dec
mov
push
ret
add
lods
cmp
dec
fists
mov
lds
jmp
je
jecxz
fsubr
adc
iret
mov
cmp
bound
jae,pt
cmc
push
mov
ds
and
mov
mov
mov
jo
xchg
push
pop
mov
iret
inc
mov
cmp
mov
mov
xor
in
push
cmpsl
repnz
test
or
test
insb
sbbb
out
sbb
cmp
out
andl
add
lret
dec
lock
sub
std
and
or
testl
hlt
add
shll
aad
lcall
testl
int
test
lret
adcb
xchg
subl
enter
jb
sub
mov
xchg
dec
cltd
mov
dec
sarb
push
notb
inc
test
pop
lea
jo
cmp
jno
mov
sbb
call
xchg
clc
adc
ljmp
push
ja
lahf
lods
sbb
pusha
cmpsb
dec
cmp
mov
nop
pop
addr16
ret
fstpl
sbb
popf
sti
push
mov
cmp
jg
das
loop
lcall
pusha
add
jno
pop
stos
mov
pushf
dec
xor
adc
jne
pop
loope
xor
push
cmpsl
lcall
out
test
iret
adc
jbe
xchg
inc
mov
mov
dec
or
adc
cld
sbb
ds
mov
outsl
mov
mov
and
outsl
addr16
bound
scas
das
in
leave
imul
subl
jo
insl
mov
imul
cmp
sbb
sub
xor
call
mov
cmp
test
aad
int
mov
xchg
std
xchg
push
notl
and
lahf
mov
pop
cmp
das
mov
enter
mov
out
push
cmpsl
nop
cli
xchg
jns
data16
sub
adc
xorl
cmpsb
mov
push
dec
lods
sub
adc
or
mov
mov
dec
jnp
mov
adc
mov
xor
fwait
dec
dec
cli
test
mov
jg
dec
jmp
sub
adc
pop
fisubs
mov
lods
jae
jecxz
adc
xor
clc
cmp
aam
repnz
negb
shrl
nop
adc
sbb
inc
fwait
mov
add
scas
cli
sbb
and
rolb
inc
jns
andb
dec
xor
mov
mov
scas
sbbl
scas
adc
xor
push
mov
xchg
push
xchg
pop
stc
fmul
mov
jmp
inc
or
push
mov
mov
call
in
sub
xchg
xorl
testl
jno
or
lods
mov
sub
in
orb
pop
int
out
aad
cmp
dec
lahf
sub
pop
and
lcall
outsl
add
fisttpll
inc
push
push
sub
adcb
or
sbb
pop
push
or
mov
dec
stc
lea
lock
and
pop
cld
mov
lret
inc
sub
push
dec
mov
movsw
ss
pop
rolb
mov
dec
and
shll
rcrl
ss
inc
xchg
inc
mov
lock
jne
sahf
cmpsl
jno
xchg
lahf
jnp
repz
subb
pop
test
fcoms
dec
mov
fmuls
push
shll
or
testb
loope
ljmp
xor
sbb
mov
popf
dec
sbb
xchg
hlt
mov
arpl
cmp
in
pop
jle
outsb
cmp
test
cmpsl
sbbl
cwtl
cli
mov
pop
xchg
dec
mov
in
fnsave
inc
and
mov
xchg
inc
xor
insb
repnz
pop
mov
lret
dec
mov
pop
jo
and
fdivrs
and
inc
jo
pushf
dec
out
inc
xchg
jl
jecxz
ret
popa
lock
dec
jge
pop
call
cs
mov
andl
mov
push
movsl
cmp
in
roll
push
sarl
inc
inc
inc
popf
pop
mov
mov
mov
inc
inc
xchg
sbb
nop
xor
je
pusha
test
rcrb
in
stos
loope
sti
mov
sub
ret
roll
idivb
or
xor
in
sbb
mov
dec
pop
xchg
call
add
add
sub
xor
lods
sub
dec
out
jo
je
out
xchg
add
cs
xchg
inc
mov
mov
mov
loopne
shrb
mov
iret
cmp
mov
orl
adc
rol
pop
jle
push
sbb
data16
clc
cli
dec
jno
fs
or
enter
lods
dec
mov
mov
adc
cltd
sbb
push
rcl
sbb
lcall
inc
pushf
test
lcall
daa
pop
xchg
dec
pop
xor
mov
jbe
dec
cmp
lock
inc
and
out
sub
je
mov
xchg
mov
aas
popa
mov
lahf
addr16
icebp
loope
ss
sub
add
lock
dec
jnp
jo
xor
or
xor
jnp
cld
jg
jnp
je
pop
xchg
jecxz
cmc
iret
and
out
gs
std
push
sbb
jo
mov
add
pop
loop
pop
arpl
aaa
fisttpl
pop
testb
mov
mov
dec
popl
mov
or
pop
push
or
lcall
jae
push
int3
sbb
aas
mov
in
push
repnz
data16
popa
jae
xlat
movsb
cmp
mov
add
mov
xor
dec
out
adc
sub
ss
stos
or
adc
xor
push
js
sbb
addr16
pop
jbe
push
loop
jge
dec
push
push
scas
ljmp
stc
dec
mov
sbb
sbb
lcallw
out
mov
call
sbb
test
sahf
gs
pop
hlt
icebp
cmpl
inc
mov
adc
fsubp
pop
jno
fdivrl
push
jae
fsts
movsb
push
stc
sahf
aam
repz
jne
imul
xchg
mov
cmp
fdiv
cmovp
pop
cmc
ret
jle
mov
dec
sahf
jmp
rol
jmp
xchg
fldl
mov
jg
or
roll
testl
insb
mov
test
int
mov
xchg
scas
clc
xchg
sub
sub
sub
cltd
mov
mov
cli
inc
scas
ss
dec
pop
mov
outsl
scas
movsl
push
sub
mov
cmp
movsb
xor
je
call
add
loope
mov
mov
popa
xchg
adc
push
push
jl
dec
dec
test
pop
xor
xchg
xor
fists
mov
cmpsb
mov
add
jl
movsb
or
push
shlb
push
and
sbbl
lea
sub
lahf
mov
arpl
stos
mov
mov
mov
inc
push
fnstenv
ljmp
jp
stc
pop
mov
fdiv
scas
std
repz
mov
inc
clc
inc
or
pushf
pop
int3
sbb
stos
jb
pushf
pusha
jae
pop
jl
fwait
xor
data16
pop
data16
push
adc
stos
es
dec
movsb
dec
cld
mov
mov
inc
or
cli
aas
dec
cmp
lea
sub
push
cmp
mov
out
mov
imul
mov
add
mov
popf
push
lods
gs
std
xlat
inc
icebp
pop
xorl
ret
xchg
outsl
jno
or
std
xor
scas
mov
mov
and
pusha
arpl
dec
pushf
or
ds
xor
adc
and
inc
cmpsb
mov
inc
cmpsl
ret
ds
scas
sub
sub
adc
es
movsl
xchg
jmp
in
xchg
inc
fcomps
mov
adc
lret
data16
outsb
and
test
mov
mov
popf
out
cmp
mov
mov
push
lock
cltd
dec
negl
push
xchg
dec
cmp
pop
sub
lret
adc
push
push
popf
and
xchg
mov
add
rcrl
repz
loope
jecxz
aaa
cmpl
ret
dec
mov
add
rcrl
imul
scas
jmp
lret
or
dec
push
jae
push
out
stos
jne
cmp
movsb
hlt
xchg
pushf
xchg
movsl
shrl
adc
mov
leave
push
arpl
enter
int
inc
mov
into
mov
push
jae
push
stos
push
push
adc
shll
cltd
cltd
fidivl
movsl
cmp
data16
or
cld
movsb
sbb
xchg
pusha
adc
add
leave
aad
mov
aam
inc
ja
ds
mov
or
das
ret
jl
leave
push
stc
in
scas
inc
sbb
jnp
cmp
outsl
mov
js
sub
dec
insl
push
test
sbb
mov
scas
push
jg
lret
lret
pop
push
xchg
xorl
outsb
mul
daa
loop
xor
loop
das
adc
adcl
cmpsb
jb
mov
sub
and
inc
xchg
outsl
aam
pop
cmpsl
ljmp
sub
push
mov
xchg
testb
dec
cmp
xor
add
push
mov
aad
cmp
inc
test
ret
outsl
jp
addb
push
inc
push
rclb
dec
adc
movsl
mov
sub
dec
bound
push
mov
jmp
inc
mov
add
mov
pop
sub
stos
shll
add
add
pop
and
rcrb
dec
mov
mov
sub
or
fidivrs
outsl
xchg
add
push
inc
lret
lret
xor
or
inc
f2xm1
enter
dec
add
scas
sahf
pop
xchg
xchg
lret
pop
dec
sub
pop
sbb
mov
cmpsl
pop
data16
sub
cwtl
pop
in
outsl
dec
sbb
out
popa
xor
or
pop
push
jmp
mov
dec
shll
dec
cld
inc
pop
push
sarl
or
lret
adc
ret
out
inc
nop
hlt
lcall
out
ret
mov
add
popa
xlat
pop
outsl
jnp
push
inc
and
cli
imul
xchg
mov
ret
mov
xchg
xor
fsubrs
icebp
mov
lea
mov
xchg
je
pop
cmpsl
mov
adc
push
popa
roll
loope
cmc
mov
aam
xchg
das
pushf
adc
sahf
addr16
lret
dec
add
adc
and
xchg
fcomip
and
mov
lds
xchg
dec
notb
inc
inc
arpl
sarb
enter
fmuls
dec
insl
lea
inc
lock
into
pop
outsb
mov
push
jbe
sbb
push
cwtl
inc
or
mov
into
push
jnp
insl
arpl
roll
negb
and
rolb
adc
jb
push
rcrb
filds
mov
lret
aas
and
enter
inc
out
mov
inc
fsubrp
incl
sti
or
repz
sbb
mov
jo
shl
sarb
adc
bound
mov
cmp
bswap
lods
mov
je
or
add
sub
jnp
dec
out
and
sub
pop
dec
cmp
loope
pop
mov
iret
xor
insb
test
xor
adc
test
mov
mov
mov
jne
std
pop
ljmp
pushf
jge
xchg
mov
jle
jmp
add
adc
fiadds
fdivl
mov
lret
sahf
mov
and
cmpsl
push
lret
cwtl
jnp,pt
cltd
scas
shlb
lock
leave
jecxz
insl
arpl
sub
fs
sub
ljmp
in
nop
jmp
lods
je
and
cmp
fxch
adc
jno
push
out
pop
ret
ret
mov
sbb
mov
mov
mov
mov
sbb
aaa
or
sbb
jmp
ljmp
sbb
data16
push
int
iret
sbb
lds
or
mov
not
adc
dec
cmp
lock
jmp
decb
fisubrs
stos
aad
in
inc
pop
cwtl
loop
mov
andl
sub
mov
lret
jl
mov
nop
stos
push
push
rcll
shlb
clc
sub
aad
sarb
xor
xchg
adc
stc
out
pop
jl
rcl
out
loopne
add
xchg
sub
es
es
or
lods
insb
ljmp
xor
icebp
call
or
loopne
mov
adc
popa
test
jecxz
cli
pushf
mov
cmp
idivb
dec
jp
lcall
divl
cld
push
imul
xchg
pop
lcall
movsb
fidivl
or
inc
mov
lds
lret
das
scas
addr16
sbb
mov
mov
inc
popa
inc
cld
push
cmp
mov
arpl
daa
pop
insb
cmp
inc
mov
stos
and
or
popa
aad
adc
jno
or
jno
sub
xchg
jo
iret
xchg
sub
pop
jno
adc
add
cmp
cmp
mov
arpl
mov
add
or
jae
xchg
and
mov
sub
or
popf
jno
jo
mov
xchg
push
sub
hlt
in
fadds
sti
or
mov
arpl
lret
mov
dec
inc
pop
sub
mov
and
fdivrs
data16
ds
movsl
movsl
fidivrl
out
cltd
mull
out
jle
fstl
xchg
test
sti
aaa
jecxz
fimuls
or
mov
es
ja
jl
mov
hlt
in
subps
js
jge
aam
imul
outsb
push
stc
into
pop
es
stos
repz
mov
cld
rorl
stos
sub
pop
add
mov
adc
xchg
int
jo
mov
les
lret
jge
sbb
out
outsl
adc
cmp
pop
in
jp
mov
scas
inc
hlt
test
cmp
out
cltd
inc
push
sbb
add
lods
repnz
xchg
inc
fnstsw
fnsave
fidivl
fistpll
mov
dec
sub
fs
ja
and
ljmp
loop
lods
jnp
stc
adc
popf
push
aaa
pop
out
fnstenv
js
jle
or
addb
pop
test
jae
pop
sbb
xor
enter
xchg
pop
pop
scas
push
fwait
sub
pop
mov
adc
or
mov
aas
xor
or
push
xor
dec
pop
dec
xor
cli
or
jno
sub
jg
movsl
add
jle
xchg
dec
icebp
jbe
inc
push
adc
cltd
cmpsb
xchg
mov
mov
adc
mul
cli
mov
aas
ljmp
scas
xor
xchg
enter
jae
loop
sub
punpckhdq
jo
xchg
pop
out
fldenv
mull
pop
dec
out
adc
stos
mov
sbb
stos
jmp
sub
mov
xchg
inc
andb
stos
cmp
xchg
stc
jmp
out
inc
mov
movsl
pop
aam
loope
out
in
jae
fst
sub
mov
add
inc
jbe
jno
xor
pop
cltd
in
js
pop
push
out
cs
mov
lods
cmpsl
pop
xor
iret
fldenv
sbb
jl
lret
mov
push
cmp
fs
stc
mov
std
mov
out
ret
mov
mov
test
mov
mov
popa
jns
mov
call
push
aad
push
ljmp
aaa
rcrl
pop
add
daa
sbbl
xchg
fists
jge
sarl
dec
mov
sbb
dec
xor
sub
arpl
shrl
scas
pop
xor
int
cmc
ja
addl
int
int
sub
sti
mov
loope
andl
inc
cmpsl
in
add
sbb
dec
inc
data16
xorl
mov
cs
psubusb
add
jg
sbb
pop
xor
push
xor
and
push
addb
cmp
mov
jl
imul
push
mov
outsl
cmpsl
pushw
leave
les
int3
ss
xlat
cwtl
inc
mov
repz
push
push
fstpt
mov
aam
adc
out
xchg
daa
mov
ja
test
xchg
dec
lods
addr16
stos
sti
or
push
outsb
andl
cmpsb
or
mov
add
and
out
pop
pushf
mov
add
pop
push
movsb
inc
xchg
add
clc
roll
pop
ss
popa
outsl
dec
call
aaa
dec
aaa
out
jae
xor
sbb
mov
jnp
mov
cwtl
xlat
repz
sbb
sub
mov
aad
aaa
divw
fidivs
lahf
stos
clc
sarb
jl
and
into
imulb
dec
xchg
fldcw
enter
loope
sub
xchg
imul
adcb
in
ja
xchg
cmp
jae
mov
sti
repz
xchg
negl
mov
stos
cmp
mov
lea
cmp
adc
iret
mov
sub
roll
adc
inc
scas
adc
inc
or
xchg
and
gs
movsb
lea
cmp
xor
fnstcw
das
imul
inc
lahf
push
scas
push
add
inc
mov
mov
mov
jnp
pushf
dec
inc
jmp
cmp
mov
xchg
mov
jne
jge
cmp
js
mov
xchg
fdivrs
ljmp
mov
mov
ret
in
mov
fists
int
adc
movsb
js
add
sub
push
jae
push
mov
movsl
mov
pusha
jg
scas
loope
clc
icebp
js
lret
outsl
sub
mov
xor
int
mov
mov
loopne
mov
push
xchg
arpl
pop
or
les
scas
xor
cmc
movsb
daa
hlt
out
scas
pop
rcl
push
mov
jbe
mov
mov
sbb
aas
sahf
addr16
dec
xchg
jecxz
bound
push
mov
sub
inc
pop
loop
mov
daa
adc
int
les
sub
test
pop
pop
xchg
movsb
xlat
insl
jb
repz
add
in
int
push
jo
push
mov
or
jecxz
or
shlb
mov
loopne
or
and
push
cli
xchg
xchg
dec
xor
dec
sbb
add
repz
std
lods
shl
es
mov
clc
mov
sbb
mov
fdivs
cs
subl
pop
jo
out
or
mov
mov
pushf
add
sarb
adc
inc
push
daa
mov
lcall
or
pusha
pop
outsl
push
adc
cmp
int3
arpl
in
icebp
cmpsb
sbb
push
sub
arpl
fistps
sub
dec
test
scas
fs
xchg
test
push
cmp
cs
inc
jnp
mov
inc
push
adc
or
hlt
sub
int3
lods
out
xchg
mov
or
jbe
jge
mov
sub
adc
orb
dec
jns
call
das
lcall
fs
hlt
rcll
lods
mov
or
and
data16
add
mov
pop
iret
add
fldcw
mov
pusha
sbbb
outsl
pop
pop
jle
das
xor
cmp
cmpb
stos
movsl
and
sbb
xor
aam
adc
leave
cmp
sbb
ss
insl
je
push
lcall
mov
jb
inc
lret
lds
dec
popa
and
mov
mov
jl
lock
cmc
loope
jb
xor
push
xchg
ret
arpl
push
cmp
mov
adc
add
or
in
imul
dec
mov
je
cmp
pop
xor
int3
insl
add
dec
lcall
inc
jns
pop
cs
mov
inc
insb
xor
setae
sbb
mov
stos
in
cwtl
pop
shlb
jle
test
ficoml
or
pop
shll
push
adc
pop
xor
cmpsl
test
mov
mov
jecxz
mov
mov
jl
cmp
movsl
test
pop
stc
movsl
xchg
js
cmp
cli
push
mov
xchg
dec
dec
xchg
pop
push
inc
ss
jne
mov
sarl
cmpsb
pop
and
mov
fdivs
and
push
push
sbb
cwtl
jb
xchg
xorb
push
inc
lds
leave
mov
add
pop
or
es
stc
in
inc
adc
sub
icebp
daa
pavgw
imul
std
push
cltd
ret
movsb
dec
dec
push
icebp
arpl
pop
push
pop
push
xor
jae
icebp
jle
jbe
mov
mov
lret
icebp
lds
nop
mov
cmp
shl
enter
int
and
and
mov
mov
pop
jg
loop,pt
add
sub
ss
sbb
mov
add
pop
push
loope
adcb
int
repz
pop
jbe
sbb
mov
in
adc
fcmovnb
push
je
cs
mov
mov
lea
or
hlt
leave
push
pop
inc
insl
addr16
push
outsb
mov
pusha
push
sti
cmp
mov
jg
adc
xchg
sbb
out
sub
adc
inc
xor
xchg
mov
push
inc
adc
and
fmul
jecxz
add
xchg
into
or
xor
sbb
xchg
mov
xchg
xlat
push
das
fs
add
mov
add
pop
iret
shrl
dec
fldcw
mov
mov
movsl
push
out
in
sbb
aaa
xchg
loope
popa
jnp
out
aaa
cmp
dec
xor
and
repnz
push
dec
cmp
adc
inc
shl
dec
adc
mov
mov
stos
movsl
mov
jmp
sub
ss
mov
shl
xchg
popf
xchg
gs
das
cmp
int
mov
fisubl
dec
pop
adc
rcrb
das
loop
stc
loope
lret
inc
fsubr
mov
ret
aad
mov
mov
push
jne
icebp
iret
ds
aam
xchg
mov
push
push
loop
push
or
idivb
data16
cmp
fildll
xchg
adc
cmp
cmp
xchg
outsl
idivl
aam
mov
dec
or
and
mov
cmp
and
xor
movsb
cmp
sbb
adcl
xchg
push
fldl
mov
rcrb
call
fimuls
mov
xlat
imul
icebp
dec
icebp
jle
fmuls
mov
and
mov
inc
jb
or
mov
push
xor
pop
jecxz
xchg
ret
xor
and
ds
push
out
int
jns
inc
divb
pop
std
xlat
call
or
cmp
imul
push
push
jge
andb
cmp
lods
loopne
inc
mov
imull
mov
adc
mov
lds
hlt
int3
fwait
or
fs
int
arpl
push
or
and
cmpsl
jbe
dec
ljmp
aad
mull
mov
mov
mov
test
outsl
out
or
mov
add
push
inc
mov
adc
mov
mov
cltd
inc
popl
movsb
cmp
rol
xchg
ret
inc
inc
xlat
and
int
push
mov
push
imul
xor
scas
mov
es
pop
xchg
jmp
xchg
mov
or
mov
test
fmull
mov
fcoms
inc
fwait
std
outsl
in
das
inc
call
out
sub
push
sub
jp
std
lret
icebp
in
subb
pusha
cwtl
sbb
mov
sbb
into
adc
push
add
js
das
push
es
in
cmp
adc
mov
in
pop
inc
add
scas
enter
cmp
jg
xor
lock
pusha
sbb
xchg
dec
je
and
sbb
mov
cmp
ljmp
jmp
cli
sub
push
mov
mov
dec
mov
inc
sub
test
inc
push
or
xlat
dec
sbb
test
fs
pop
rorl
cmp
pop
pop
xlat
xor
lcall
cld
xchg
cs
sbb
sbb
pop
inc
insb
loop
gs
adc
sarb
fnstsw
xor
cmp
mov
repz
aad
dec
lret
insb
rcll
lcall
pop
outsl
inc
aaa
shlb
xchg
jmp
xor
enter
rcr
ss
xchg
out
push
jns
push
fdivrs
push
cmp
add
shll
sbb
xchg
adc
inc
push
or
sbb
mov
or
sub
xchg
jg
dec
add
icebp
mov
xchg
sbbl
enter
jno
lahf
imul
lock
popa
adc
int3
cmp
imul
and
mov
pop
dec
cwtl
xlat
jge
enter
loop
dec
je
repnz
das
aas
ds
clc
loop
cmpsb
jl
or
inc
push
cmp
lret
shrl
shll
int
fwait
or
inc
add
notl
fcmovne
mov
sbb
in
xchg
push
test
or
sbb
mov
ret
fldt
add
mov
fidivrs
xor
xchg
shl
sub
sub
in
movsl
cwtl
lret
mov
pop
rcll
sbb
es
stc
push
push
xrelease
cwtl
push
test
neg
leave
or
outsb
divl
adc
jbe
addl
in
loopne
call
sub
das
jge
adcl
mov
call
xchg
test
xchg
cld
cmp
loopne
sbb
lds
test
addr16
push
cltd
xor
or
in
adc
hlt
jle
shr
scas
int
dec
inc
stos
push
imul
in
pop
pop
in
jne
test
int
in
and
rolb
icebp
and
xchg
push
int3
adc
ss
push
sbb
jbe
adc
mov
daa
mov
xor
cmp
clc
out
cmp
in
test
leave
cmp
jecxz
cmp
mov
jl
sbb
dec
cld
insb
xchg
insl
cmp
leave
gs
sub
push
mov
mul
fwait
dec
sub
push
mov
cmp
adcl
dec
mov
gs
xor
negl
repnz
fwait
loope
lcall
repz
bound
int
lds
ret
sub
test
jns
mov
add
inc
imul
fsubl
mov
inc
xchg
rorl
arpl
push
pusha
push
clc
aad
lea
xchg
dec
jmp
mov
dec
outsb
imul
inc
iret
movsb
pop
mov
rorb
push
ja
push
in
loop
adc
imul
dec
mov
push
mov
and
hlt
add
push
xchg
ss
out
mov
mov
sbb
add
and
minps
insb
ljmp
lods
dec
jbe
or
mov
pop
lock
inc
inc
sub
bound
mov
jge
fs
es
lret
mov
cmp
xchg
loopne
loope
in
dec
out
fsubp
test
fisubrl
scas
push
cli
dec
inc
xor
push
fsts
gs
nop
cmp
jne
ret
aaa
xor
push
dec
bound
out
lret
sub
push
xchg
cmp
jg
lahf
or
cltd
sub
into
iret
inc
in
xchg
enter
jns
add
jnp
push
xchg
mov
sti
rolb
movsl
pop
xchg
stos
aad
sbb
push
pop
mov
cmp
sub
cmp
xlat
test
insl
jbe
dec
adc
ficompl
pop
in
sbb
sub
xchg
jb
dec
sarl
popf
call
stos
bound
popf
push
pusha
loop
in
pop
mov
das
mov
or
mov
in
mov
gs
lock
cs
dec
movzwl
jns
xor
aaa
fdivs
sub
out
fwait
adc
fcom
clc
mov
aas
inc
addr16
inc
and
jnp
loop
xor
cmc
xchg
push
and
mov
dec
mul
dec
sbb
fsubrs
dec
outsb
inc
lods
jb
fs
jns
adc
cmp
mov
sbb
je
fsubrl
push
nop
lcall
aam
and
inc
jecxz
fwait
push
mov
xchg
int
mov
out
daa
add
pop
ret
jo
out
jo
scas
cmp
imulb
pop
jnp
push
jp
out
dec
nop
aaa
loopne
outsl
setg
in
js
jp
pop
ret
jmp
test
jbe
xor
push
adc
inc
xchg
sub
rcll
or
int3
jbe
mov
lea
inc
jnp
jnp
cs
lahf
repnz
mov
mov
sti
or
push
lods
inc
cld
fdivl
movsb
or
shlb
int3
mov
scas
and
or
cmp
stc
pusha
cwtl
xlat
lods
or
mov
mov
xor
pop
ss
or
js
adc
or
rcr
out
inc
xchg
and
in
xchg
ret
std
test
dec
movsl
icebp
movsb
dec
shrl
push
out
out
mov
mov
dec
mov
adc
cltd
vphaddudq
lret
xchg
adc
mov
rcrb
iret
adc
sbb
dec
sbb
adc
pop
ret
inc
pop
daa
call
sbbb
pop
push
mov
repnz
jo
pmulhuw
add
push
inc
lcall
push
jb
out
dec
xchg
pop
rcll
lret
lods
and
rcl
inc
and
mov
fstl
jae
lock
inc
sbb
js
es
cwtl
xchg
outsb
mov
fistl
jecxz
mov
pop
mov
cwtl
cmc
adc
sbb
shlb
iret
stos
insb
sbb
addr16
scas
jl
idivb
out
je
jmp
push
out
cmp
push
push
aam
insl
adc
mov
repz
xchg
jo
outsl
push
inc
mov
push
in
and
adc
push
jecxz
ret
je
xchg
int
push
adc
iret
in
out
stc
push
sbb
mov
dec
adc
mov
cmpl
pushf
mov
subl
fildl
lds
fcmove
pop
xor
sahf
adc
pushf
adc
push
mov
mov
push
jle
inc
int
pushf
addb
loopne
jmp
dec
jecxz
in
leave
inc
mov
aam
jne
popf
xchg
loope
enter
xor
sbb
inc
dec
mov
sub
mov
mov
xor
cli
inc
mov
cli
and
bound
scas
arpl
pop
cmpsb
mov
push
push
inc
xor
ss
pop
scas
add
cmp
pavgb
pop
mov
leave
dec
inc
jle
cmp
cmp
fcomp
mov
pop
jg
aaa
lret
sbb
pop
and
je
ret
int3
jecxz
mov
stos
in
aam
cmp
xchg
mov
cmp
jmp
cmp
enter
ja
adc
stc
cmp
sbb
and
xlat
lret
mov
imul
cmc
inc
dec
les
out
mov
lods
fxch
daa
xor
mov
movsb
repz
xchg
call
outsb
adc
and
test
inc
dec
add
loop
jbe
pop
mov
sahf
fildl
xchg
fidivrl
loopne
adc
cltd
xchg
cs
adc
xchg
pop
out
popf
or
pop
cli
push
rol
cmc
xchg
push
xchg
mov
decb
dec
mov
bound
and
push
call
cmpsl
out
inc
fcoms
push
and
cld
imul
pmaddwd
lret
int3
sbb
je
push
leave
xor
ret
add
push
and
ret
cwtl
test
jl
jae
out
stc
shlb
lea
adc
or
fiadds
adc
arpl
fdivrs
add
fcoms
inc
mov
lret
mov
inc
test
xchg
inc
aam
sarl
cltd
mov
lret
push
xor
ds
xchg
mov
mov
dec
adc
popf
jecxz
mov
push
sbbb
popa
sub
pop
mov
ljmp
lret
test
ljmp
add
cmpsb
les
push
sub
sub
movsl
call
shll
iret
es
push
bound
jbe
lret
mov
push
adc
sbb
and
inc
add
pop
shrb
gs
xchg
lock
mov
add
cmpsb
jb
out
dec
daa
xchg
sub
test
loop
inc
mov
jg
adc
pop
test
test
and
repz
jo
call
out
mov
in
mov
jno
pop
lahf
pop
jbe
and
shll
push
pop
cmpsb
shrb
jo
cmp
jne
daa
ret
aaa
push
dec
adc
stos
mov
dec
mov
adc
mov
outsb
xor
call
jge
xchg
les
cli
inc
pusha
push
push
std
and
add
aas
sbb
mov
pop
cld
into
testb
test
xor
mov
stos
enter
sub
enter
repz
jo
push
or
jg
lret
fstpl
lea
pop
sub
dec
pop
inc
cs
and
dec
jae
movsb
lea
repnz
push
sub
lods
xor
jp
addr16
push
xor
ss
pop
pusha
cmc
mov
faddl
sbb
fs
mov
or
cld
push
add
fisubl
jle
push
pop
mov
lret
sub
dec
lcall
cmpsl
inc
cvtps2pd
cmp
insl
fcmovbe
xchg
in
mov
lods
xchg
nop
fs
mov
cld
or
loope
sub
mov
add
or
and
mov
lahf
fsubrs
stos
xor
push
lock
or
jp
call
cmpsl
mov
inc
push
push
enter
xchg
lods
lahf
std
fisttpl
sub
ret
stos
or
xchg
xchg
sti
cli
xor
jl
pop
dec
adc
int3
bound
fisttps
lods
pop
std
jb
in
lahf
popf
test
aam
sahf
jecxz
xchg
add
fnstenv
jle
sbb
sbb
xchg
sahf
insl
fdivl
fistpl
clc
add
nopl
xlat
loop
test
push
cwtl
sub
cmp
rcrb
jl
sub
inc
jle
sbb
out
mov
jno
clc
push
daa
cmp
imul
mov
pop
pushf
adc
popf
mov
push
ss
addr16
add
js
arpl
lods
pop
xor
jg
cmp
sub
jge
add
aad
push
fildl
adc
and
mov
mov
movsl
dec
inc
push
loopne
andb
pop
aad
adc
xor
dec
inc
lock
dec
int
clc
or
loope
lds
std
inc
leave
add
arpl
xor
lock
cwtl
sub
or
sbb
mov
dec
mov
fisubrl
dec
int
mov
fstl
adc
inc
sub
ja
pop
inc
pushl
scas
clc
dec
inc
movsb
jae
and
icebp
jb
fcom
mov
fs
pop
xor
mov
gs
push
subb
pop
pop
leave
xor
xchg
fnstsw
and
sub
out
aaa
pop
js
mov
fucompp
outsb
push
mov
ret
ficoms
pusha
sub
loope
pusha
xor
cmpl
pop
fisubl
dec
test
stos
js
sbb
cmp
ss
sti
jns
mov
popf
shlb
and
mov
jns
jo
and
mov
mov
push
inc
sub
mov
cmc
adc
dec
jmp
sbb
pusha
cmc
pmaddwd
pop
rcll
mov
sarl
repz
sarl
popf
xchg
jb
push
jge
shll
sub
push
mov
hlt
push
jbe
lcall
ds
adc
rolw
out
stc
cmc
mov
dec
cli
pop
push
fldenv
ret
push
insl
sub
mov
mov
fdivl
int
push
jb
call
or
add
in
and
pushw
in
xor
xor
ja
pop
inc
add
jmp
inc
cmp
push
xor
out
pop
les
and
pushf
jle
test
xlat
push
cli
not
mov
lahf
xchg
or
fnsave
and
mov
add
lock
sbb
cli
popa
leave
xor
dec
in
lret
inc
xchg
lock
cmpb
or
rorb
in
notb
mov
xor
jmp
cld
imulb
mov
cmp
pop
sub
inc
scas
cmp
pushf
loop
sbb
lds
iret
ret
loopne
xor
push
jno
arpl
adc
insl
dec
xor
jno
cmp
cwtl
add
stos
cs
mov
aaa
insb
sbb
adc
add
into
cmpsb
push
or
add
scas
jle
jl
lods
or
mov
arpl
lahf
stc
das
nop
out
popf
jle
stos
hlt
cmp
out
out
jl
push
ss
int3
xor
push
push
and
mov
mov
sti
mov
cs
mov
std
pop
xor
and
mov
lock
inc
jmp
in
mov
xchg
stos
jmp
or
cltd
xor
movsb
pop
dec
dec
mov
cmp
cwtl
subb
mov
sbb
add
mov
stos
je
inc
xchg
dec
and
iret
xlat
sub
xchg
add
cmpsb
aas
add
lret
dec
call
bound
stos
mov
jmp
sub
hlt
pop
pushf
xchg
push
test
jge
rorl
push
and
cmp
sbb
mov
push
clc
sti
mov
pop
icebp
xchg
mov
cwtl
loop
fimuls
rclb
push
xchg
into
sub
outsb
xor
pop
mov
mov
pop
outsl
push
mov
fsubrs
popf
inc
fimull
jp
adc
rsqrtps
sbb
cmp
rcrl
push
lods
flds
enter
xor
xchg
adc
xchg
arpl
cmpsb
adc
sub
popa
mov
jp
stos
ds
popf
push
sub
movsb
jbe
lret
arpl
in
xchg
ret
ret
jge
jmp
xchg
xor
sbbb
inc
shlb
push
je
push
jnp
mov
adc
sub
mov
push
inc
filds
and
fwait
push
or
sar
inc
push
jnp
imul
fdivrs
adc
mov
out
jno
mov
inc
mov
les
dec
clc
call
insl
pop
push
xchg
mov
lret
dec
das
or
insb
push
pushl
dec
jecxz
dec
dec
test
jb
xor
ret
adc
inc
sub
iret
mov
dec
and
xor
push
or
leave
roll
push
and
cmp
into
xor
mov
jg
mov
call
mov
lods
ja
push
lods
xlat
lods
dec
xchg
mov
and
mov
out
or
movsl
insb
cmp
rol
pop
inc
jnp
lods
push
cmp
xor
xor
lock
adc
pop
jbe
scas
mov
mov
iret
jecxz
dec
inc
scas
add
push
out
mov
pop
lods
in
sub
std
std
sahf
insb
push
mov
repnz
jae
xchg
xor
jbe
int
daa
mov
mov
ret
ret
shll
push
adc
push
adc
sub
hlt
std
pusha
mov
push
push
cmp
cmp
bound
dec
fimuls
mov
cltd
adc
test
lcall
dec
stos
pop
xor
imul
movsb
mov
call
mov
insl
xchg
cmp
inc
jg
xchg
out
xchg
hlt
loope
pop
jno
cmpsl
xor
lods
push
aaa
shrb
adc
dec
movsb
push
push
int3
adcb
xlat
gs
clc
movsl
jns
sbb
dec
xor
test
ds
inc
adc
sub
mov
pop
push
mov
cmp
loop
cmc
cmpsl
sbb
es
arpl
fdivl
cmp
popf
std
ret
or
movsb
adcl
add
mov
fists
mov
cmc
jne
xchg
cld
sbb
scas
rolb
stos
push
out
mov
pop
in
mov
ja
repnz
repnz
std
sbb
dec
cmp
aas
mov
mov
jae
mov
mov
mov
mov
dec
xchg
popf
jae
adc
pop
mov
in
repnz
xchg
or
sti
js
clc
adc
sti
and
test
pop
mov
daa
out
sbb
and
sbb
mov
sub
cwtl
cmp
popa
aam
nop
subb
push
roll
nop
sbb
push
inc
push
fcmovnu
in
int
push
mov
stc
lods
in
std
nop
addl
mov
pop
xchg
into
cmpsl
adc
shll
popa
cwtl
mov
loop
stos
xor
aaa
inc
shrb
stos
incb
cmc
insb
ret
inc
shrb
pop
or
mov
or
push
movsb
mov
fildl
test
gs
mov
mov
add
leave
in
push
into
aas
fisubl
aas
mov
xlat
add
pop
je
inc
outsl
movsb
pop
inc
aaa
mov
cmp
test
ret
pop
stc
jp
jb
gs
fbld
add
out
nop
outsl
scas
jbe
inc
xchg
inc
sub
ja
idivb
repnz
sti
test
mov
rcll
pop
in
sbb
mulb
shrb
adc
add
cmpsb
sub
push
push
or
mov
outsl
mov
adc
popa
mov
push
push
xchg
fisttpll
call
sbb
mov
sub
push
mov
ljmp
icebp
mov
dec
lods
xor
lret
ss
adc
and
mov
mov
push
subl
cmpsl
scas
stc
push
popa
cli
ss
mov
je
mov
cmpsb
add
ss
pushf
push
sbb
imul
nop
mov
and
out
popa
fsub
push
sbb
repnz
and
cld
movsb
jge
xor
inc
push
in
xlat
mov
repnz
sub
inc
nop
int3
inc
inc
clc
test
ret
xor
mov
mov
imul
push
dec
daa
lret
add
mov
outsb
repnz
and
inc
loope
inc
dec
adc
lcall
int
sbb
and
into
loopne
cmpsl
lret
rcll
sub
cltd
scas
and
lea
movsl
pop
inc
mov
and
push
in
mov
test
adc
lahf
rorb
dec
pop
pop
dec
pop
inc
je
in
cmp
jb
rclb
imul
sub
jle
lds
sti
dec
push
mov
ret
cli
repnz
fdivrp
push
add
mov
xchg
jne
adc
pop
andl
sbb
sub
lods
hlt
pop
popa
cmc
mov
xchg
out
lods
cld
loopne
cwtl
push
ljmp
movsb
push
leave
mov
sarl
push
lock
xchg
mov
xchg
or
mov
dec
xchg
jge
repz
outsl
and
inc
jle
test
loopne
stc
popf
and
inc
shlb
mov
xchg
push
jo
jle
es
loope
pop
outsb
call
lahf
stos
gs
sub
cmp
xchg
mov
in
pop
stos
imul
repnz
ja
cmc
hlt
jge
test
cmpsl
jno
test
sbb
and
mov
jle
cmpsl
sub
popf
aam
cwtl
or
ret
lcall
push
and
gs
aas
mov
jecxz
stos
adc
outsb
mov
clc
cli
outsl
es
movaps
pop
shrd
add
xchg
std
fs
cwtl
mov
ficoms
aad
outsl
mov
push
mov
mov
orb
stos
cli
push
fsts
xchg
dec
rcll
xor
enter
mov
push
inc
xchg
loop
sbb
push
popa
roll
inc
rorb
inc
fsubp
movsl
add
add
enter
mov
xchg
sbb
mov
pop
in
in
inc
jo
pop
jno
in
mov
push
cltd
or
fistpl
fsub
int
cld
sub
xor
fstl
orl
push
insl
iret
sbb
sahf
call
repz
adc
inc
icebp
or
adc
mov
add
inc
cmc
push
cld
fsts
out
je
jns
cs
in
in
pop
ss
jmp
vorps
jns
mov
mov
int
cmc
lock
cwtl
and
daa
mov
out
loopne
jmp
clc
adc
out
cmpsl
test
cmc
imulb
mul
es
mov
sbb
jbe
xchg
mov
mov
cmp
shlb
inc
int
iret
cmp
dec
sbb
lea
popf
aas
push
in
dec
or
pop
sbb
push
inc
or
or
jge
jmp
rorl
fmull
jp
ret
stos
test
inc
add
jl
outsl
cli
mov
push
call
sbb
sub
ret
mov
movsb
push
cmp
int
sbbl
hlt
jmp
aad
xor
ret
fisttpl
mov
stos
ja
mov
mov
xchg
inc
jl
std
pop
inc
jnp
adc
pop
mull
push
test
push
loope
xchg
and
add
pop
dec
inc
add
sbb
xchg
lret
jl
in
xchg
outsb
cwtl
adc
add
cld
jmp
or
pop
jl
or
jl
xor
push
movsl
sbb
inc
inc
fistpll
loope
and
jge
sub
cmp
jmp
test
adc
arpl
fldenv
iret
lods
outsb
inc
cmp
jle
pop
pushf
stc
sar
xor
fidivs
and
outsl
mov
test
nop
rorl
pop
cmpsb
sbb
cmpsb
aam
or
lahf
inc
imul
xor
jecxz
dec
sbb
mov
outsl
lods
inc
xor
rcll
xor
pop
pop
mov
push
mov
pop
out
mov
test
int
cmpsb
jg
xchg
add
mov
cmp
clc
cltd
aas
pop
dec
jge
popf
and
ljmp
jp
cmc
jne
adc
aad
or
out
in
adc
pop
ret
leave
outsl
adc
and
faddl
sahf
push
repz
in
adcb
mov
inc
leave
cmp
or
jecxz
or
adc
or
mov
cmpsb
jmp
cmc
nop
pop
dec
xor
imul
daa
jno
addr16
sub
arpl
testb
cmpl
call
out
dec
mov
fwait
mov
fisubs
sub
dec
xchg
cmp
push
add
and
sub
push
and
pop
movsb
jae
negl
into
dec
add
mov
hlt
mov
sbb
aam
pop
cs
mov
inc
lds
out
mov
xchg
cltd
leave
lods
xchg
decl
inc
sbb
pop
add
and
cmpsb
popf
sbb
fwait
or
jg
sub
imul
jbe
movsb
and
outsl
fs
mov
fldenv
clc
ficompl
push
cli
sbb
lret
jae
nop
inc
adc
movsl
mov
sub
lret
xor
jmp
stc
or
pusha
mov
jo
clc
push
mov
test
sub
push
mov
mov
dec
jmp
loope
shr
stos
dec
cli
in
shll
xor
pop
xor
cmp
pop
jo
mov
jle
sbb
dec
popa
mov
xchg
xor
add
pop
and
loopne
movsb
lods
inc
out
push
mov
pop
xor
mov
mov
push
mov
ret
std
or
cmpsb
in
shll
lea
push
shr
cmpl
ret
dec
adc
scas
sar
mov
pop
lahf
mov
cld
divl
cmp
mov
xchg
mov
mov
inc
xor
or
mov
es
mov
push
imul
push
jmp
popa
clc
roll
push
or
icebp
dec
push
je
or
andb
fdivrp
mov
adc
stos
into
stos
shlb
pop
jbe
das
cltd
dec
jbe
ret
mov
pop
outsl
inc
cmc
and
loopne
pop
push
call
call
icebp
pusha
xlat
xor
aas
xchg
mov
or
mov
pop
or
push
sub
clc
out
call
dec
pop
cmp
not
or
ss
daa
ss
jne
jno
outsl
mov
push
test
lret
and
add
in
mov
sub
dec
lock
sub
scas
or
dec
adc
aas
fldcw
fstl
cmc
loope
xor
sub
jae
cmp
xor
mov
pop
cmp
or
fwait
add
mov
jg
cmp
test
stos
loop
shll
gs
add
xor
jnp
sbb
addr16
inc
or
incb
lods
mov
pop
push
adc
notb
xchg
xchg
cs
mov
adc
adc
adc
push
xor
and
inc
sarb
xor
pop
sbb
imul
and
jmp
js
test
mov
pop
fstp
fstpt
jno
cmpsb
sahf
inc
mov
shl
loop
xchg
clc
jmp
jae
dec
je
mov
fdivs
cld
dec
mov
add
lock
xchg
dec
sbb
shr
xlat
call
mov
in
push
pushf
pop
outsl
je
push
mov
aad
mov
dec
cmp
jae
gs
and
aas
add
mov
sbb
out
repz
daa
push
cpuid
and
xchg
cmp
mov
pop
std
mov
mov
mov
insl
hlt
sbb
aaa
sub
add
sub
out
inc
xchg
in
in
repz
stos
in
add
or
fsubrl
xor
jmp
shlb
lcall
je
pop
mov
test
xlat
or
insb
xor
into
pop
in
inc
adc
jecxz
inc
add
inc
sbb
pop
icebp
lahf
stos
sti
daa
inc
and
sub
sub
jmp
div
xor
cltd
test
dec
jbe
stc
sbb
xchg
dec
and
lcall
mov
mov
dec
add
cmp
pop
sub
sub
ss
jae
mov
sub
and
adc
and
sbb
sbb
fisttps
sub
adc
mov
add
jmp
jb
fdivl
shr
mov
jbe
aaa
lret
cmpsl
popf
inc
inc
lret
mov
xchg
pop
add
cmc
imul
jbe
divl
out
add
clc
dec
cs
pop
xchg
outsl
mov
fucomip
push
push
push
cmc
data16
mov
dec
push
icebp
mov
rol
and
mov
testb
push
dec
addl
out
mov
and
std
popf
add
icebp
adc
sbb
mov
jbe
cmpsb
or
lret
pop
jl
incb
adc
mov
xlat
and
lret
xchg
jmp
cmp
dec
fwait
add
push
sarb
aaa
dec
popa
fistpll
jge
or
push
out
xor
cs
jb
push
xor
repnz
sub
les
ja
fsqrt
push
pop
push
sbb
stos
pop
sbb
das
mov
jg
xorb
inc
fwait
into
add
cmp
mov
sub
stos
add
rclb
arpl
mov
xor
enter
and
scas
jg
push
les
jmp
andl
imul
and
lods
loopne
arpl
mov
lret
mov
jg
jnp
bound
xor
mov
sbb
push
mov
cmp
insl
pop
frstor
jge
mov
push
cmc
dec
push
les
mov
inc
and
stos
mov
dec
mov
loope
stos
dec
jg
dec
inc
mov
fildll
mov
mov
jle
mov
pop
sbb
pop
cld
xchg
xor
fs
or
add
or
sahf
pop
xchg
in
test
push
cmc
sbb
imul
inc
lock
fldt
dec
cli
enter
fstpl
out
pop
out
jnp
jno
cmp
insl
pop
sub
ror
aaa
push
xchg
sbb
sbb
inc
movsl
sub
push
ror
sub
icebp
mov
xchg
push
push
pop
push
inc
xchg
sahf
mov
mov
add
mov
or
iret
test
int3
les
push
adc
gs
add
dec
stos
in
nop
cmp
xabort
and
out
mov
jae
and
mov
xchg
movsl
jle
in
mov
mov
test
mov
stos
outsb
pop
filds
inc
xchg
mov
scas
mov
lea
sub
inc
movsl
pusha
push
dec
cmc
sbb
movsb
rcrb
push
cmp
cs
in
arpl
inc
movsl
insb
fisttps
sti
push
leave
arpl
jp
insb
mov
stc
out
scas
cltd
pop
loope
add
mov
sarl
push
xor
sbb
sub
aaa
in
mov
push
and
push
movsl
inc
sbb
xchg
lret
mov
mov
int
sbb
fildl
lds
add
fwait
leave
in
xchg
dec
shl
jmp
jnp
out
mov
hlt
jne
sub
push
mov
inc
out
fcomps
das
sub
add
cmp
cmp
je
sub
rol
lahf
lahf
add
xchg
subl
imul
mov
test
addl
dec
popf
hlt
popa
and
push
scas
pop
int3
mov
mov
clc
pop
mov
in
sbb
ret
mov
in
fsubs
mov
jb
mul
enter
push
push
mov
inc
pop
sub
dec
pop
fdivs
dec
push
rorl
push
pop
and
aad
push
and
rcll
and
jg
out
adcb
pop
shlb
inc
add
jns
call
stc
inc
cmp
mov
sub
pop
and
sbb
scas
scas
adc
push
leave
in
and
cmpsb
adc
add
pop
xor
cmp
and
add
iret
adc
inc
adc
ret
sub
mov
fisubl
bound
imul
mov
aad
adc
inc
pop
clc
mov
stos
shrl
aam
sbb
dec
adc
insl
outsb
and
cmc
add
jge
out
add
imul
cli
js
pop
leave
adc
psubd
jecxz
ss
pusha
inc
add
mov
jle
or
int3
pop
je
pop
push
push
mov
repnz
enter
movsb
popf
lock
jecxz
or
xchg
in
sti
mov
pop
dec
xchg
orps
cli
xor
rcrl
repnz
cmp
xor
dec
popf
cli
add
stc
xor
mov
pushf
incb
adc
jl
call
test
adc
jno
nop
xchg
mov
loop
dec
dec
xor
xor
outsb
pop
dec
mov
inc
pop
or
adc
rcr
push
mov
lock
xor
adc
add
rolb
cld
mov
sub
dec
aaa
addr16
cmp
mov
ljmp
add
sub
mov
and
out
fiaddl
negl
mov
loopne
cltd
icebp
or
out
dec
dec
pop
sbb
xchg
sti
inc
cltd
repz
pop
cs
jno
cld
cmp
push
loop
add
das
mov
or
or
push
push
cld
add
adc
jg
or
fsin
repnz
add
mov
push
movsl
aam
popa
sbb
mov
sbb
dec
xor
aad
sbb
and
scas
gs
add
xchg
lods
sbb
xorb
cmp
scas
orl
clc
repz
fidivs
aad
pop
cmp
pop
fimull
fs
jb
imul
sub
xor
out
xor
push
cli
out
lret
jbe
push
jns
int3
lock
orl
sbb
sub
lret
push
jecxz
stos
cmc
ret
hlt
pop
mov
push
out
pop
int3
push
mov
lahf
pop
nop
dec
pop
popa
pop
xchg
and
sub
dec
dec
jge
cmp
jbe
sbb
shll
ffree
in
stos
std
aam
dec
repnz
or
insb
sbb
or
popa
dec
mov
enter
dec
adc
loope
outsb
out
push
data16
mov
inc
jo
add
adc
outsb
xchg
dec
cmp
aam
sti
pop
imul
sbb
push
leave
xchg
or
pop
fists
in
lea
pop
dec
test
outsb
push
mov
jnp
dec
push
and
rolb
lret
jno
pop
cmp
scas
sbb
cmp
or
js
mov
sbb
hlt
loop
aam
sbb
xor
nop
daa
jne
mov
sbbl
adc
sub
pushf
rol
inc
shll
gs
inc
pop
fisubl
fstpl
xor
jbe
inc
and
jle
fsubrs
mov
lahf
insb
adc
cmp
mov
scas
xchg
out
loop
pop
daa
subl
pushf
pop
mov
jg
lds
xor
dec
mov
data16
pop
out
in
push
aaa
push
mov
mov
jl
jo
sbb
test
loop
adc
add
ja
sti
mov
push
xor
stc
adc
repz
leave
cmp
aas
add
push
mov
add
lds
and
pop
jns
dec
fdiv
daa
mov
and
mov
adc
pop
sub
pop
scas
sbb
popf
push
aad
lahf
jo
jg
int3
xchg
push
pushf
test
mull
xchg
popa
adc
fwait
push
mov
call
filds
jne
stos
push
test
push
jnp
dec
push
test
sub
lods
xchg
sub
inc
call
mov
sub
mov
int3
xchg
add
cmc
or
inc
sbb
outsl
cmp
mov
mov
jmp
insb
push
push
sbb
sbb
jmp
scas
jns
push
dec
and
mov
sahf
jo
repz
sub
and
dec
pop
and
and
cmp
xchg
out
pop
cs
mov
stc
mov
aam
notb
xlat
pusha
mov
leave
ss
inc
movl
lods
add
test
dec
sbb
xor
fdivs
iret
and
movsb
xchg
or
xor
push
adc
repnz
cmp
mov
in
push
jecxz
mov
inc
rcrl
das
sub
into
sahf
xlat
inc
daa
aaa
sub
push
pop
pop
push
push
mov
cmp
mov
inc
lds
push
in
add
push
inc
addb
xchg
sar
imul
int3
xchg
cmp
aad
or
movl
mov
jg
jge
pop
xor
and
in
add
lret
popf
mov
loopw
adc
or
shlb
mov
pop
sbb
addr16
imul
sbb
pop
lods
lea
pushf
stos
dec
jl
mov
and
push
popa
outsb
mov
push
jne
push
or
cmc
push
out
jge
push
insb
nop
inc
pusha
scas
fbld
xchg
jmp
dec
cmc
call
xor
jmp
push
stc
arpl
bound
sub
pop
imul
into
jge
adc
adc
sbb
nop
cwtl
loope
lods
xchg
sbb
xchg
pop
and
ljmp
outsb
cmpsb
lock
js
adc
jl
mov
iret
cmp
xchg
sub
sbb
dec
ret
xor
test
jb
adc
in
repz
fiadds
addr16
pop
push
pop
pushf
xchg
jecxz
dec
jnp
mov
and
mov
mov
jg
inc
test
repz
adc
push
mov
and
lods
jmp
flds
xchg
fwait
movsb
mov
mov
or
jne
push
gs
fistpl
sub
int3
inc
pop
pop
push
sub
adc
mov
or
inc
rcrl
push
xchg
roll
loope
test
sbb
xchg
call
jge
cmp
jg
fsubl
stos
sub
mov
lods
push
and
lea
jnp
loope
mov
cmp
fiaddl
pop
sub
dec
or
clc
out
hlt
fildl
jecxz
dec
sbb
or
sti
lods
fldl2t
repnz
imul
sub
push
jno
lahf
rcrb
mov
push
jne
lret
mov
and
iret
div
negb
jbe,pt
pop
push
add
jae
iret
cli
xchg
and
rep
repnz
dec
outsl
push
jae
dec
insl
stc
sub
cs
loop
mov
pop
mov
arpl
std
adc
sub
jb
mull
or
enter
in
lock
sti
cmpsl
pop
or
adc
push
xchg
sbb
pop
lahf
into
rep
ljmp
sbb
stc
loopne
adc
push
adc
or
pop
fst
ss
sub
xor
add
popa
cmc
fidivrl
loope
insb
sbb
lret
in
ljmp
ret
fisttps
mov
lahf
cld
rcrl
outsl
inc
pop
popf
pop
mov
jmp
mov
or
sbb
out
movsl
cwtl
outsb
dec
iret
pop
lods
inc
incl
cmp
xchg
jl
subb
ljmp
mov
mov
dec
dec
mov
clc
js
js
sub
insl
insb
in
or
je
idivb
pop
not
jno
lret
ja
imul
mov
jnp
dec
sahf
inc
dec
insl
push
push
mov
jo
add
rcrl
ljmp
fsubl
mov
popf
popf
pop
and
jecxz
leave
lahf
fsubl
jns
and
pop
sub
cli
jle
filds
pop
xchg
and
icebp
pop
inc
jne
push
adcb
leave
insb
sbb
cld
inc
xor
xor
lahf
jmp
and
ss
fstl
repnz
clc
fldl
mov
sbb
inc
push
ds
lret
jmp
jg
push
repz
cmp
jae
mov
sti
mov
cmp
add
fisttpll
das
adc
loope
sbb
aaa
mov
out
push
push
push
inc
xor
push
nop
sahf
pop
mov
sub
jge
cltd
cmp
dec
inc
fists
cltd
push
sbb
jecxz
int
xchg
outsb
call
outsb
lcall
jnp
cmpsl
out
push
or
dec
cmp
adc
inc
test
mov
test
out
sbb
inc
aas
inc
inc
inc
ret
imulb
mov
pop
lock
out
scas
jnp
ss
lahf
negl
in
aad
dec
cpuid
fisubrs
push
pop
cmp
lds
mov
pop
jp
daa
or
inc
stos
test
add
jnp
test
mov
mov
push
outsb
hlt
jns
cmp
mov
push
mov
pop
popa
pushf
andl
mov
mov
mov
fnstenv
or
mov
jl
les
pop
loopne
hlt
std
imul
mov
cmp
push
mov
arpl
gs
jecxz
repz
pop
scas
add
and
sub
pop
outsb
dec
cmp
in
stos
jmp
ss
dec
sub
das
jne
jp
bound
adc
sub
ficoms
jge
sub
pop
outsl
fists
arpl
push
fidivrl
ljmp
sarb
into
add
adc
jo
pop
cmpsl
mov
test
addr16
sub
xchg
sub
or
jae
insl
jns
cmp
jae
ja
inc
out
popf
and
pushl
xor
dec
lea
dec
jmp
push
int
push
fdivs
test
clc
mov
outsl
inc
lock
call
mov
iret
xchg
push
test
or
xchg
jae
sbb
push
ss
nop
test
int
mov
xor
adc
pop
push
pop
jns
pusha
sbb
pop
mov
adc
call
mov
jecxz
mov
setle
sbb
cmc
pop
call
inc
sub
aad
ss
cs
in
push
outsl
lea
out
or
mov
imul
gs
pop
out
flds
sub
lds
std
dec
sub
out
frstor
jae
cmpl
mov
inc
xchg
nop
cmp
icebp
test
out
sti
xor
clc
cmp
sahf
lret
ja
je
pop
add
or
adc
dec
push
add
add
imul
cmp
stos
push
sbb
shl
push
mov
lret
aaa
int
adc
xchg
cmpl
sub
inc
jecxz
xchg
and
loope
lods
add
jno
sbb
xchg
mov
sub
iret
adc
dec
sbb
add
inc
cli
setnp
aam
add
enter
ret
lods
mov
rorl
clc
out
test
jmp
mov
pop
test
lahf
jo
lret
movsl
mov
add
cmc
mov
jnp
and
mov
outsl
ds
shrl
mov
popf
fcomps
in
sub
inc
mov
pushf
ss
or
jnp
dec
xor
and
iret
imul
pop
mov
inc
mov
adc
mov
sbb
pop
dec
jge
fldt
push
arpl
lods
push
add
cmp
loope
adc
mov
inc
andb
pop
add
cmpsl
push
sahf
dec
pop
mov
xchg
hlt
das
xor
jno
dec
insl
cwtl
and
out
ret
sub
fwait
xchg
jne
sbb
pop
mov
mov
jne
movsb
sbb
inc
andl
dec
add
insl
jo
out
ret
icebp
or
cltd
push
arpl
xchg
mov
adc
cli
ja
jmp
mov
das
ljmp
test
and
mov
popa
push
loopne
jno
push
cmp
in
loopne
sub
sbb
cltd
mov
sub
mov
mov
mov
pop
mov
jp
sbb
dec
xchg
les
and
imul
sub
cwtl
sysenter
push
jae
jmp
loopne
add
dec
jb
pop
mov
jp
adc
xor
ja
adc
rolb
fcomip
mov
testb
les
xor
std
lret
and
shlb
cmp
shll
push
adc
and
and
xchg
test
std
lret
fsubp
clc
fucomip
cmp
jmp
addl
scas
xor
js
mov
pop
int3
rorb
xor
jge
bnd
sbb
pop
pop
int
aad
fcomi
mov
mov
mov
adc
xchg
test
dec
sub
jb
sbb
xchg
imul
mov
inc
mov
mov
insl
jne
nop
insl
out
jp
dec
cmp
push
xor
bound
cmp
jmp
and
jl
add
in
fs
xchg
sbb
enter
mov
sbbl
arpl
cmp
mov
push
push
or
jb,pt
adc
lock
scas
xchg
sahf
popf
insl
test
andb
loop
mov
sbb
push
push
dec
fstpt
cmp
ss
push
fisubl
dec
mov
push
in
mov
sub
ret
xchg
cmpsb
mov
add
outsb
xchg
and
push
push
movl
xorl
int
sti
xor
push
pop
test
lods
adc
and
daa
cmp
pusha
add
mov
hlt
aad
scas
das
adcl
inc
or
lcall
jae
cmp
loopne
sbb
cli
loope
mov
push
in
movsb
push
xchg
arpl
cmc
inc
ret
cs
push
xchg
into
mov
out
inc
movsb
sti
mov
sub
and
xor
call
xchg
mov
fisubs
cmp
or
in
test
jmp
lds
pop
sbb
mov
add
ret
outsl
jl
sbb
jns
hlt
adc
orl
hlt
mov
xor
rcll
ror
add
lahf
imul
mov
fimuls
cmpsb
mov
sbbb
xchg
cmp
xchg
loopne
xor
jbe
das
cwtl
stos
loope
or
enter
outsb
dec
push
xchg
sub
fimuls
mov
cwtl
into
cmp
xchg
outsl
popf
dec
dec
pop
sub
inc
das
inc
or
push
inc
fsubrs
loop
add
shl
xor
pop
jmp
mov
popa
or
in
mov
test
pushf
xor
loope
push
lods
mov
pop
push
stc
inc
inc
mov
int3
pop
jbe
sbb
in
int
mov
cmp
inc
mov
xchg
mov
imul
les
push
mov
mov
flds
adc
and
push
mov
fs
out
mov
mov
inc
cmp
repz
mov
xor
ja
cs
mov
fstl
dec
scas
mov
push
repz
pop
fsubl
mov
mov
xchg
cmpsl
add
fiadds
shrb
movsb
dec
pop
das
out
fisttpll
push
jbe
jbe
outsb
pop
ret
inc
sti
mov
xchg
jo
xor
adc
popf
aad
dec
xor
enter
or
xchg
fcmove
mov
loop
testl
mov
jbe
andnps
xadd
in
mov
test
je
imul
aaa
xchg
incl
adc
jb
icebp
pop
push
dec
mov
arpl
fneni(8087
cmp
lahf
aad
loop
cmp
jae
mov
fdivs
out
add
mov
lahf
pop
pop
mov
and
cwtl
insl
testl
xchg
jle
stos
pop
fst
insb
out
aaa
xor
test
stos
fidivrs
lret
lret
sbb
mov
mov
sub
aas
and
xor
mov
das
std
xchg
pusha
jmp
lods
into
xchg
lahf
xor
dec
inc
in
pop
hlt
push
adc
dec
mov
shl
dec
je
lret
leave
push
cltd
aam
test
sub
sahf
push
lock
jno
add
mov
bound
sti
sub
xor
bound
andl
fnsave
jno
lcall
loop
and
mov
or
xor
mov
mov
mov
sarl
add
pop
jne
ja
cmpb
gs
in
lods
movsl
mov
dec
insb
mov
and
mov
jle
jp
jnp
xorb
jmp
pop
scas
cs
shlb
fcompl
add
in
and
fdivl
mov
ret
shr
ret
test
popa
dec
sub
int3
sbb
dec
mov
mov
jnp
les
mov
xor
test
push
pop
test
arpl
lds
xchg
xchg
pusha
outsl
les
mov
loopne
and
test
std
cmp
xchg
scas
je
std
cmp
cmpsl
cmpsl
and
add
xchg
sti
cs
ss
add
xchg
fdivrs
sahf
push
popa
mov
sbb
mull
les
mov
pop
scas
sub
and
jle
dec
lcall
stos
test
ds
rcrb
add
dec
mov
outsb
loop
cs
sahf
inc
mov
lret
mov
in
std
mov
clc
insb
xchg
mov
jecxz
call
mov
loope
pop
lret
adc
loopne
adc
outsl
gs
mov
mov
into
bound
sbb
mov
test
mov
push
dec
repz
mov
dec
sub
mov
lock
adc
rcrl
mov
mov
gs
out
adcl
outsb
fucomi
push
pusha
sysenter
shlb
add
lds
cmp
lret
jno
dec
test
jg
mov
repnz
stos
ja
outsl
pop
sbb
lret
rolb
ud2
lds
repnz
add
lahf
out
adc
jp
ficompl
push
das
adc
fidivrl
push
mov
jecxz
outsb
add
in
pop
cmp
add
and
sti
nop
not
push
jl
pushf
sbb
lahf
and
daa
enter
iret
aaa
pop
ret
idiv
push
test
xorl
dec
xchg
rolb
mov
ja
in
cmpsb
cld
push
les
je
inc
fnstsw
into
sub
fsubl
inc
push
jg
or
loop
xchg
lock
dec
mov
lock
test
push
jl
hlt
mov
sbb
test
sti
sbb
adc
into
les
pop
inc
mov
mov
jg
shr
imul
loope
pop
push
adc
mov
mov
ss
xor
sbb
call
aam
inc
imul
pop
pop
mov
adc
in
sub
ljmp
insl
mov
add
mov
popf
fistpll
addl
xorb
lret
jecxz
xchg
pop
cmovnp
lods
cmp
lods
cld
xor
and
inc
fwait
mov
xchg
test
test
inc
addr16
mov
push
lock
cmp
adc
pop
ja
xchg
cmp
stos
sbb
sub
out
inc
cmp
pusha
xor
cmp
cmp
pop
push
in
clc
or
stc
lock
hlt
call
stc
xchg
cli
jmp
inc
fs
loope
fwait
xchg
and
push
test
enter
cmpsb
popa
mov
jns
push
out
scas
leave
inc
es
imul
mull
aam
cwtl
jl
inc
sbb
or
movl
jns
test
push
mov
xchg
xchg
ss
gs
jge
js
adc
ror
sbb
std
adc
orb
cwtl
ret
repnz
jmp
sub
aas
xor
rcrb
pop
ja
add
sub
pusha
movl
dec
xchg
jle
ljmp
mov
lds
ret
out
mov
jnp
push
lock
xor
lea
bound
lods
mov
inc
mov
test
jae
imul
mov
adc
pushw
jmp
jp
lret
or
das
dec
lahf
imul
mov
mov
sub
lods
pop
adc
jecxz
mov
inc
cltd
xchg
cmpsl
into
add
mov
jnp
ja
adc
rclb
fadds
cld
out
adc
loope
scas
inc
lods
cmp
mov
movb
adc
inc
clc
sbb
sbb
jnp
add
mov
fnstcw
int3
in
xchg
in
addb
je
mov
shll
ds
push
in
jae
dec
lret
fwait
xchg
into
dec
into
testb
pusha
out
push
mov
pop
dec
inc
xor
js
ret
xchg
out
mov
scas
cmp
xchg
or
out
mov
inc
mov
sub
flds
xor
sbb
jae
sub
loop
sub
test
jae
cltd
push
sub
and
sti
test
pop
fwait
movsb
pop
push
sbb
mov
sahf
fidivs
pop
test
push
sahf
insb
push
hlt
movsl
icebp
pop
les
add
cmpsb
and
inc
push
aam
out
fwait
inc
loopnew
enter
out
jmp
int3
mov
insb
pushl
adc
xor
pop
sbb
or
pop
mov
cld
mov
mov
lods
je
dec
mov
faddl
lcall
repnz
lcall
pop
lods
les
scas
and
push
and
dec
mov
shlb
scas
repnz
stos
and
imul
xchg
std
dec
push
add
popf
lods
cmpsl
or
loopne
dec
mov
std
add
in
lods
loop
ja
lret
jge
push
mov
ss
jo
dec
mov
mov
mov
xor
or
mov
mov
mov
jmp
nop
xlat
cmc
push
push
add
jmp
imul
fwait
pxor
cmc
push
mov
ss
mov
sarl
cmp
and
dec
out
stos
outsl
adcl
addr16
ror
add
mov
pushf
dec
inc
adc
lahf
jle
jp,pt
jle
or
mov
or
mov
pop
cmpsb
mov
cmp
adc
xrelease
rcr
push
lea
dec
pushl
cld
push
mov
add
dec
cmpl
mov
sbb
test
movsb
mov
jle
imul
cs
push
fidivs
pop
pop
roll
leave
mov
aam
aas
insl
mov
in
mov
push
xchg
daa
push
cmp
sub
jo
inc
cmc
xchg
out
push
adc
add
mov
cmpsl
pop
fldz
or
test
mov
sbb
lods
adc
pop
jns
xchg
cmp
xchg
fisubl
push
sbb
aad
add
jle
add
insl
add
jns
cltd
cmp
mov
out
mov
sbb
jo
fstl
mov
mov
push
mov
stos
push
sub
and
outsl
push
nop
add
mov
and
add
and
or
lds
pop
lods
in
mov
sbb
mov
scas
jl
dec
xchg
xlat
mov
push
mov
sub
xorl
xchg
mov
mov
sub
mov
fiaddl
jo
mov
sub
dec
mov
mov
jae
enter
pop
les
or
call
mul
data16
or
xchg
sub
cld
push
sbb
xchg
xor
inc
sbb
push
cltd
mov
or
out
sarb
jb,pt
test
pop
adc
mov
ror
out
xlat
inc
cmc
push
rolb
lea
outsw
pop
cmp
inc
push
inc
and
pop
mov
xchg
jle
out
mov
ja
xor
add
inc
stos
mov
pop
stos
inc
orl
or
xchg
scas
jmp
mov
xor
es
sbb
xchg
sbb
sbb
mov
mov
jmp
push
nop
scas
jl
std
sub
ss
int
leave
rep
cltd
jne
inc
lods
jp
test
lcall
cmp
lods
popf
dec
clc
dec
int3
sbb
jecxz
aam
divl
mov
fistl
jno
mov
mov
pop
add
popf
nop
fnstcw
adc
aam
xlat
push
std
sbb
sub
dec
ss
lods
je
jae
pop
or
ficoms
fadds
mov
push
inc
push
mov
dec
push
mov
shll
and
stos
in
cmpsl
loope
les
scas
loopne
adc
mov
mov
out
test
in
jb
mov
xchg
mov
arpl
dec
test
or
mov
adc
or
jmp
out
xchg
arpl
adc
push
sti
fwait
sbb
mov
cmp
dec
sahf
sti
xchg
icebp
push
mov
pop
pop
lods
cmp
repz
jb
lret
ret
rorb
mov
and
fidivrs
scas
dec
dec
adc
lea
scas
insl
lret
adc
jecxz
inc
gs
push
sbb
cltd
pop
cmp
call
jo
xor
pusha
xchg
jmp
push
mov
and
lds
loope
inc
movsl
sar
repnz
stc
push
inc
out
add
xchg
inc
in
pop
and
mov
mov
sub
rorl
push
mov
jbe
mov
push
xor
jo
jae
imul
into
jo
lret
fwait
mov
push
sub
aam
rorl
rorl
pop
aas
dec
and
inc
dec
sbb
and
jne
pop
outsb
mov
aas
iret
jae
ret
loopne
sbb
jp
std
mov
add
cmpl
fxch
arpl
mov
lock
push
xchg
testb
jp
mov
les
add
push
test
push
lret
insl
aad
cs
push
or
mov
arpl
xchg
and
negl
int3
rclb
adc
xor
mov
jns
mov
imul
scas
ret
mov
dec
cs
push
testb
or
inc
daa
or
loope
add
mov
sbb
inc
imul
mov
fmull
jns
test
dec
out
push
cwtl
shlb
and
mov
out
test
out
fists
jp
cmp
xorb
ss
mov
orb
mov
in
pop
lcall
nop
mov
insl
jnp
ret
mov
movsl
pop
ret
aad
push
sbb
dec
cmpl
lret
mov
jno
and
sub
mov
lret
sbb
mov
inc
lods
add
dec
dec
shrb
cmp
lea
out
pop
dec
push
lods
add
xor
inc
push
inc
jmp
jo
inc
lds
stc
mov
out
mov
pop
adc
and
ret
push
stc
mov
adc
mov
jge
xchg
mov
add
ljmp
mov
dec
andl
mov
push
push
xchg
mov
mov
in
les
adc
sub
adc
cltd
xor
add
lds
hlt
push
inc
test
in
mov
rcr
push
testb
fs
sar
out
adc
cmc
mov
js
popf
mov
lret
bound
add
or
pop
loope
into
rcrb
mov
cmp
sub
insl
ds
lcall
iret
sub
mov
fcoms
jmp
aas
js
inc
popa
jmp
jge
xor
push
xchg
cmp
lcall
mov
test
in
es
cli
mov
test
cmp
mov
shr
lea
cmp
inc
arpl
nop
pusha
push
aas
cmp
cmp
lcall
test
jnp
jle
cmp
scas
xchg
inc
sbb
xchg
loop
sahf
pusha
sbb
jle
jmp
push
mov
ljmp
jbe
lds
fiadds
loope
push
inc
in
cs
pop
popa
lea
lcall
add
lret
scas
repz
push
mov
pop
xchg
jb
insb
xlat
xchg
jge
or
cmp
jmp
jae
push
insl
push
int
insb
pop
insl
ret
sbb
stos
mov
push
stos
mov
cmpsl
xchg
jl
inc
xchg
add
test
cmp
inc
mov
cmpsb
hlt
xchg
fldcw
mov
lret
aam
cwtl
adc
pop
dec
add
mov
dec
pop
iret
sbb
mov
sahf
adc
cwtl
fsubs
add
dec
add
scas
repnz
fscale
fbstp
sub
repnz
iret
sub
out
gs
loopne
or
imull
icebp
or
and
fstl
mov
xchg
shll
stos
stos
fs
stc
inc
cmp
fwait
sbb
mov
daa
lea
aaa
enter
pop
jg
imul
mov
hlt
ror
sub
popa
insl
mov
dec
je
sbb
inc
incb
out
cmp
sbb
repz
nop
call
movsl
lock
and
inc
and
or
stos
mov
xor
lock
sub
bound
mov
pusha
mov
jecxz
jne
jbe
xchg
ret
enter
pop
imul
int
dec
ss
out
mov
sbb
int
rol
xchg
jbe
dec
dec
imul
sbb
adc
mov
lret
cmp
jnp
sub
pop
jle
pop
jno
ljmp
pop
push
rol
add
mov
iret
mov
jge
fistl
fsubrl
mov
and
lods
fcoms
fstpt
inc
dec
cs
into
xchg
shlb
jbe
sbb
cmc
pop
xchg
pop
sub
repz
dec
and
sbb
mov
out
rcl
dec
inc
jno
sub
inc
or
lds
out
pop
dec
sub
cli
loope
cmpsl
jmp
pop
bnd
pop
mov
inc
neg
das
and
mov
push
iret
xchg
loopne
add
rolb
mov
lahf
inc
sti
inc
imul
xchg
and
push
nop
cmpsb
xchg
fistpll
sub
leave
aas
lea
mov
test
stos
inc
stos
and
pop
jg
lret
jecxz
inc
in
dec
jp
movsb
int3
jle
int
jne
adc
cmp
cmc
add
push
jb
int
andl
lods
jo
ja
pushf
ljmp
pop
sbb
imul
shlb
outsl
jo
sbb
lss
cmp
lahf
subl
sbb
cld
xor
jge
inc
test
sbb
nop
cmp
or
cwtl
dec
push
lret
or
rol
pop
mov
jmp
sbb
sbb
andl
lods
xchg
dec
mov
int
jb
shr
aam
fisttpll
push
sub
and
or
repnz
arpl
sbb
scas
mov
inc
daa
ds
in
mov
stos
push
push
mov
mov
ja
and
push
call
mov
sbb
test
pop
aad
dec
pop
jne
stc
dec
mov
or
add
sarb
int
bnd
lds
inc
pop
fsubrl
daa
mov
push
sbb
add
adc
dec
jbe
fdivrl
pop
loope
pop
cmpsl
mov
into
aam
leave
out
push
ss
fsubs
ret
imull
pop
sahf
je
mov
ss
cmp
sbb
xchg
pusha
mov
mov
sbb
or
leave
shrl
aam
fnsave
mov
cmp
arpl
push
dec
adc
outsl
adc
pop
clc
popa
cmp
insb
push
cmp
xor
add
cmp
pop
out
into
fidivrl
xchg
fdivr
sahf
jne
nop
aaa
or
orl
arpl
xchg
dec
mov
call
xchg
xchg
mov
mov
lret
push
sbb
lcall
in
insb
into
fs
pop
xor
and
mov
sarl
mov
stos
pop
pushf
int
sub
sub
dec
xchg
fistpl
or
and
or
cmp
sub
ljmp
test
mov
loopne
pop
push
leave
jl
jle
ss
adc
sbb
test
adc
push
test
sub
pushf
dec
repz
lock
cmp
sbb
ret
jge
stc
dec
xor
mov
hlt
lock
xor
lea
xchg
dec
mov
mov
pusha
in
std
cmp
orb
jl
jb
out
xor
mov
add
lods
test
mov
pop
insl
outsb
mov
pop
movl
fisttps
inc
into
mov
xor
sbb
test
pop
dec
mov
stos
cmp
cwtl
aad
mov
push
dec
test
or
shrb
je
adc
out
mov
and
jns
in
inc
loope
stc
subl
pop
stc
aam
iret
call
cmp
jne
mov
std
mov
jl
xchg
mov
inc
mov
out
scas
sbb
pop
fwait
pop
loopne
dec
xor
fildl
push
jl
hlt
and
sub
mov
sub
or
loopnew
mov
and
mov
adc
mov
jg
fwait
out
das
aaa
xabort
and
xor
jae
lock
push
dec
pop
test
sub
dec
stos
cltd
in
in
push
les
lcall
inc
fs
push
push
test
or
cmp
nop
jb
dec
xlat
adcb
adc
sbb
sar
adc
rcrb
in
fadds
cmp
or
xchg
dec
lock
ds
pop
jle
mov
sbb
xor
mov
sbb
jne
out
jl
iret
mov
test
aam
sbb
daa
insb
add
lret
sub
fwait
insl
pop
add
shr
cmp
mov
repnz
int
fstpt
pop
or
loop,pt
xor
nop
sbb
out
mov
jne
loop
xchg
adc
xchg
jne
mov
imul
push
push
movsl
lcall
push
stos
cltd
pop
cmc
mov
adc
clc
test
mov
mov
popa
jo
xchg
cmp
ljmp
sbb
xor
pusha
pop
out
xchg
inc
mov
hlt
cmp
inc
sub
and
lret
ret
dec
pop
outsb
mov
scas
mov
add
dec
xor
clc
sub
jmp
scas
sub
add
leave
sub
test
subl
sbb
addb
lds
push
dec
js
addl
pop
push
int3
xchg
xchg
push
cmp
out
icebp
stos
sti
xchg
sbb
idiv
push
mov
sbb
xlat
adc
lret
out
push
or
xor
notb
cmpsl
test
xchg
arpl
cmpsb
rcrb
das
jl
mov
aas
xor
daa
mov
and
push
pusha
js
jbe
jbe
enter
and
mov
clc
out
jp
xchg
sub
mov
or
and
jae
loope
pop
hlt
push
stos
mov
push
mov
sbb
pop
inc
mov
dec
faddl
jne
fnsave
loopne
sub
cmp
pop
sub
lahf
lret
test
dec
aas
testb
outsl
pop
dec
sbb
or
bound
lcall
lret
nop
inc
mov
int3
stos
add
orb
and
subl
imul
std
or
lahf
in
icebp
xchg
xchg
xchg
lea
sti
mov
push
pop
adc
xchg
popa
test
mov
push
ds
in
mov
push
mov
fistpl
je
fiaddl
xor
mov
mov
adc
dec
iret
sbb
rcrb
and
fsubp
adc
dec
gs
xchg
add
inc
sub
mov
sbb
inc
sbb
hlt
mov
ret
push
test
in
adc
xor
xchg
xorb
adcl
and
add
loop
sub
mov
loope
cmp
push
out
lods
mov
jle
sub
push
test
popa
mov
lret
outsl
sbb
lcall
push
pop
jle
lods
je
inc
mov
xchg
xor
push
popf
mov
adc
inc
mov
push
pop
dec
mov
and
or
cmp
dec
push
push
insb
mov
aas
ret
inc
int3
je
cli
push
jnp
daa
dec
cmp
loopne
sti
adc
add
int3
ja
aaa
xorb
test
cmpsl
decl
lds
int3
cltd
push
pop
push
sub
inc
cmp
pop
out
add
cmpsb
lock
mov
and
pop
push
scas
ret
clc
push
inc
fwait
dec
aas
sub
outsl
cmp
jp
rcr
jbe
cmpsl
pop
xor
or
pushf
ja
sub
mov
xchg
test
das
xor
stc
fldl
pop
ror
es
mov
push
call
jmp
xchg
and
and
dec
fdivl
xchg
sbb
pop
js
mov
fisubs
subb
ss
lds
iret
pop
cmc
aam
inc
loopne
sub
mov
lods
pop
xchg
int3
xchg
sub
int
fstpl
push
inc
cmp
insl
xchg
negl
xor
jae
sarb
sub
sbb
jno
xor
pop
inc
xor
subb
iret
xlat
ds
enter
xor
pop
mov
cmpsb
loopne
sbb
lods
test
sbb
shlb
jmp
int3
mov
mov
pop
cmp
push
fnclex
add
or
sbb
mov
xlat
xlat
add
nop
mov
mov
or
sub
mov
jmp
push
incb
int
xor
mov
push
clc
imul
or
jae
scas
stos
imul
fistps
inc
add
xlat
jge
cmpsl
enter
push
nop
pop
icebp
xor
xchg
or
leave
fcmovnb
enter
cmp
cmp
mov
jl
lds
int3
orb
test
jmp
pop
iret
ss
adc
push
data16
mov
sub
iret
push
xchg
and
xchg
push
std
js
push
cld
push
sub
shll
test
push
mov
cmp
adc
fists
lock
xlat
mov
mov
push
push
shrb
scas
movsb
ja
jne
aad
out
mov
fldl
outsb
xor
push
dec
dec
test
test
fucomp
xchg
insl
lcall
enter
sbb
call
xor
xchg
xchg
fnstcw
adc
xchg
stc
add
sbb
cs
fistl
xchg
mov
pop
loope
adc
js
jb
dec
rorl
add
xor
in
jmp
push
mov
xchg
or
sarb
les
jp
mov
or
enter
ret
aad
mov
mov
scas
and
adc
adcb
inc
xchg
adcb
adc
inc
and
xor
xchg
fildll
mov
adc
mov
mov
jnp
mov
insl
mov
test
adc
loopne
mov
repz
mov
sbb
dec
jns
mov
fmull
push
clc
jo
pop
lret
push
push
lds
hlt
leave
jmp
enter
jno
enter
dec
js
mov
shrl
push
movsb
cmp
mov
add
adc
or
rorb
sti
repnz
rolb
adc
xor
lock
insb
fstpt
or
sbb
aaa
jge
daa
mov
sbb
jae
xor
pop
mov
push
pop
in
jne
jne
cmpsb
mov
and
scas
xor
add
aas
sarl
sbb
loope
jae
inc
adc
movsb
xchg
movsl
out
orl
adc
mov
and
shll
hlt
lods
out
mov
jb
jge
out
xor
aam
lret
jne
xor
jae
fldcw
data16
push
bound
jne
pop
inc
push
xor
ljmp
lock
jp
mov
sbb
xchg
mov
inc
xchg
fisubrl
loopne
je
jo
push
sub
in
dec
jb
mov
cmpl
jl
cmp
pop
test
jo
lock
or
sbb
sbb
aaa
push
fld
xchg
pushf
inc
adc
pushf
pop
insb
add
daa
std
sub
fcomps
sub
sub
jne
mov
add
imul
shll
mov
test
popf
stos
stc
andb
enter
fisttpll
pusha
les
sbb
loop
dec
push
inc
ds
scas
xor
push
mov
aas
fidivs
push
mov
out
push
mov
movb
pop
mov
pop
imul
roll
or
dec
in
dec
cmp
jge
pop
sbb
sub
mov
lock
mov
rcrb
bound
insl
adc
jp
outsb
je
ror
stos
jmp
lret
addb
aaa
pop
fldenv
sub
mov
stc
outsl
and
rcl
mov
scas
aas
and
cmp
mov
mov
or
ss
imul
dec
lock
out
out
jae
push
push
lret
inc
fldcw
dec
leave
fwait
hlt
movsb
dec
lock
adc
mov
outsb
jle
inc
xchg
std
test
js
xchg
movsb
push
push
cmc
xchg
roll
iret
outsl
mov
stos
mov
mov
and
lock
adc
jnp
out
ds
mov
les
jge
iret
pop
cmpsb
imulb
aaa
push
lret
jns
pop
xorb
xor
pop
mov
push
clc
xor
or
pop
xchg
sbb
out
je
shl
icebp
jnp
push
jne
push
push
stc
sub
mov
andb
ret
adc
loop
dec
adc
and
or
xchg
insl
repz
out
mov
addr16
fcompl
mov
orb
sub
mov
mov
push
fst
mov
xchg
in
in
jecxz
push
into
aaa
push
lods
call
fcoms
pop
sahf
cmpsl
jne
mov
aad
or
sub
push
aam
std
inc
push
idiv
iret
xchg
clc
outsb
sbbl
cmp
adc
loop
popa
ret
std
mov
or
or
sbb
into
lods
out
les
mov
cmp
and
xor
stos
scas
adc
out
cmp
xor
mov
mov
aaa
stos
mov
sbb
inc
pop
mov
xor
dec
push
xor
jge
xor
jns
pop
popf
sub
jbe
int
mov
lcall
subb
lret
mov
pusha
jge
xor
data16
loop
or
int
icebp
or
scas
hlt
in
in
cmp
decl
in
lods
das
imul
xor
fnstenv
mov
outsl
mov
push
and
movsb
data16
sbbl
lods
or
pop
push
movsb
cs
jge
xchg
enter
fs
mov
xchg
add
xchg
add
sbb
outsb
subl
cpuid
push
push
pushf
mov
add
add
cmovns
and
add
pop
jmp
ficoms
clc
out
insl
push
and
out
mov
pop
cmpsb
push
lret
xchg
adc
adc
adc
mov
pop
mov
in
push
ja
adc
insb
mov
push
sbb
pop
arpl
push
jge
pop
sub
cmp
dec
mov
add
push
inc
iret
add
out
rcr
push
xchg
xor
jnp
das
and
mov
addr16
pop
pxor
sub
xchg
movsb
out
test
imul
add
xor
int
lods
loopne
je
in
popf
add
mov
je
xchg
andl
popa
mov
push
push
ljmp
sub
sarl
and
fnstcw
stos
or
or
pop
pusha
sbb
in
lret
scas
add
add
fs
xchg
dec
sub
lods
lcall
int
pop
adc
out
pop
fimuls
xlat
xchg
cmovae
push
jg
cmp
xchg
mov
lods
aad
pop
xlat
jl
jae
push
inc
and
push
xor
pop
aam
call
xchg
adc
push
dec
nop
lret
out
pop
xor
shll
mov
pop
test
mov
and
fcoms
sahf
ret
fsubs
jp
mov
adc
lea
jo
jge
pop
push
repz
out
cltd
cmpsb
pop
ret
lods
mov
stc
and
rclb
sahf
xor
pushf
adc
test
mov
xorl
fdivrl
xor
xchg
out
or
andl
adc
xor
mov
or
shlb
dec
and
xchg
pop
js
xor
add
fmulp
mov
outsl
aaa
sub
and
lret
xchg
incb
jge
ss
mov
out
mov
xor
lret
mov
cmpsb
cmc
jmp
xchg
or
add
cmpsb
cli
call
lds
fcomps
fdecstp
push
or
testl
jmp
cmp
fbld
cs
or
mov
in
icebp
imul
mov
mov
cli
jecxz
inc
stos
push
pop
xchg
mov
aaa
jnp
push
les
xchg
pop
cwtl
cwtl
dec
mov
inc
xchg
rol
leave
int
lcall
jl
movsb
push
out
jno
push
add
jno
pop
insl
loop
pop
subl
stos
pop
xchg
mov
sbb
fidivs
mov
out
insb
sub
push
or
pop
xchg
cwtl
jmp
loop
les
or
mov
loope
into
jp
push
in
adc
cmovle
fcmove
add
insb
mov
addr16
mov
stc
mov
pop
cmp
mov
and
dec
xchg
mov
xor
pop
sbb
lods
insl
xchg
dec
mov
jae
data16
ret
cli
pop
jbe
xor
lds
jb
xor
adc
lea
sbb
xchg
mov
cltd
enter
jecxz
adc
cltd
dec
mov
xor
lds
arpl
call
ljmp
inc
jg
rorb
jns
mov
cwtl
int
cli
leave
xchg
das
xor
gs
xchg
push
pop
push
fs
pop
fidivrs
sahf
popf
cmp
push
ja
jp
imulb
ret
sbb
enter
scas
add
mov
xor
mov
out
out
iret
lret
xor
and
push
fdivrs
mov
sbb
call
sub
cs
cmpsl
and
mov
push
test
pusha
xchg
es
lods
jnp
mov
ficoml
jle
mov
inc
movsl
cmp
add
ljmp
or
mov
jb
int
sbbb
lods
jbe
data16
pop
pushfw
or
xchg
mov
sahf
jnp
test
sbb
inc
xchg
gs
jg
fildl
mov
jle
aas
xchg
nop
mov
sbb
push
xor
xchg
mov
inc
fcmovu
frstor
insb
test
push
cmp
in
pusha
subb
cmp
ljmp
lods
mov
adc
xchg
pusha
add
out
ss
fs
outsb
push
je
lcall
mov
mov
das
sub
movsb
push
add
lret
inc
pop
inc
enter
push
xor
dec
fcoms
filds
or
jae
fiaddl
outsl
xchg
pop
int3
mov
mov
add
lea
xor
sbb
cmpsl
ret
push
mov
push
xor
xchg
pop
ljmp
sub
cmp
arpl
xor
fsubl
xor
add
push
repz
dec
mov
inc
fldt
add
push
lods
sub
dec
jnp
sti
cmp
lods
and
push
jae
xor
mov
inc
lods
iret
pop
dec
dec
sub
inc
lahf
call
push
test
jmp
mov
les
mov
int
push
mov
adc
daa
pop
jle
mov
sarl
add
pushf
mov
repz
and
sub
out
xor
testb
lods
in
cli
stos
clc
sub
lods
add
xchg
iret
addb
stos
loope
cltd
mov
call
into
push
and
jg
fwait
out
arpl
mov
lret
mov
mov
rcr
andl
sub
aas
push
cltd
xlat
movsl
mov
and
dec
pop
xor
dec
movsl
jg
call
hlt
xor
mov
adc
sub
data16
loope
add
lret
cli
jb
mov
dec
lds
mov
enter
and
sbb
fs
push
push
push
dec
lret
or
cmp
gs
popf
push
mov
outsb
cmp
mov
ret
and
movsb
ret
inc
adc
nop
fiadds
jge
adc
shlb
mov
xchg
lcall
lods
xor
mov
outsb
test
mov
jp
rorb
sbb
and
xchg
adc
roll
dec
sarl
mov
mov
xchg
mov
stc
popf
push
je
add
mov
push
inc
xor
xchg
add
xchg
fsts
js
sarb
or
and
xchg
xor
cwtl
pop
mov
std
add
std
in
sbb
adc
add
das
xlat
ja
push
sti
sbb
mov
pusha
mov
push
fnstenv
mov
dec
and
xor
adc
mov
sbb
jnp
insl
cmpsl
mov
pushf
mov
dec
jno
cli
stos
xor
sub
or
mov
and
jne
dec
inc
ds
jp
push
pop
push
jb
sbb
mov
sahf
out
sub
fcmovnu
cmp
dec
cwtl
cmp
cmp
movsb
dec
cmpsb
jmp
xlat
mov
pop
mov
xor
popf
ror
add
imul
pop
ds
pop
test
inc
loop
lretw
aam
fs
dec
add
cmp
pop
pop
pop
pop
dec
mov
fsubs
cmp
cmp
stos
pop
mov
xchg
inc
imul
orb
lret
mov
addr16
dec
outsb
lcall
ret
jle
dec
sbb
adc
push
dec
cld
hlt
scas
sarb
fildl
fwait
popf
or
repnz
mov
dec
fidivrs
movsl
cwtl
xchg
popf
and
mov
daa
push
and
mov
das
fadds
inc
push
jp
fstl
pop
cmpsb
and
push
jo
cs
push
cmpsl
xchg
push
cs
cltd
shrl
jbe
cmp
mov
dec
movsl
arpl
ljmp
lds
setns
sub
mov
loope
and
xchg
arpl
insb
fwait
in
adc
stos
in
mov
in
dec
or
movsb
ret
cmpsb
sub
je
mov
mov
jp
mov
aad
fstl
xor
or
rolb
mov
push
push
rorb
daa
mov
and
rclb
cmp
insl
jo
imul
mov
mov
push
or
inc
cmpsb
mov
daa
jg
cmpsb
dec
inc
and
cmp
mov
pop
je
dec
scas
xchg
test
xchg
out
aad
jbe
fcos
pop
es
test
idivb
cmc
popl
or
push
cli
icebp
lods
xchg
iret
addr16
dec
mov
cmp
fmulp
lret
mov
cmp
sbb
push
jge
pop
test
mov
out
es
pop
daa
cmp
push
ds
push
stos
lock
movsb
sti
pusha
fimull
mov
mov
pop
push
dec
les
inc
adc
jge
repz
flds
xlat
leave
jae
inc
aas
int
inc
cli
test
and
sbb
aas
push
and
in
dec
adc
inc
mov
lret
sarb
add
mov
jns
inc
lret
fsubp
xor
jge
loope
imul
add
mov
xchg
movsl
stos
les
add
std
movsl
ljmp
stos
lahf
es
xchg
pop
fcompl
rcll
push
or
pop
dec
jp
sub
popa
xor
es
dec
movsb
es
sub
xchg
jecxz
pusha
or
push
ljmp
cwtl
addl
js
inc
or
add
lcall
push
sub
insl
mov
sbb
inc
cmp
scas
xor
and
dec
pusha
and
sbb
out
lds
outsb
adc
cmpsb
cmpb
pop
jno
insl
dec
sahf
jae
inc
lret
adc
iret
xor
push
fsubl
or
xchg
js
adc
ss
and
or
push
jmp
sub
shlb
mov
arpl
addr16
fsubrp
into
mov
pushf
test
out
inc
adc
push
xor
mov
jmp
inc
mov
stc
sub
arpl
testb
js
adc
outsb
es
into
iret
jnp
mov
mov
adc
sbb
jns
mov
js
fwait
andl
lea
or
xchg
jle
adc
outsl
mov
push
cmp
dec
mov
imul
sbb
add
aas
mov
sbb
or
lods
fcmovnb
xchg
jnp
in
mov
je
nop
xor
mov
mov
and
int
cmpsl
rcrl
mov
add
fdivrs
ret
push
push
hlt
lea
insl
pop
popf
repnz
push
push
jge
add
push
cmp
movsb
push
cli
test
mov
xchg
mov
xchg
sbb
scas
and
cmp
push
scas
mov
testb
fcmovnbe
pop
push
sahf
and
sbb
mov
call
pushf
mov
adc
adc
nop
leave
or
cwtl
in
mov
mov
out
std
add
in
add
and
sbb
sub
aad
mov
cmpsl
cli
inc
popa
sbb
add
adc
push
imul
cmp
je
jnp
dec
dec
pop
adc
mov
lcall
adc
test
iret
mov
aad
fisubrl
xchg
movsl
adc
adc
in
jne
aad
xor
test
xlat
jne
das
adc
and
mov
and
jo
push
and
dec
push
cwtl
pushf
dec
cmc
nop
and
repnz
lods
iret
mov
fildll
fisubrs
cmp
dec
lahf
jb
or
jle
arpl
inc
aas
mov
xchg
ret
hlt
int3
mov
fcompl
jne
mov
outsl
out
or
seto
mov
leave
cmpsb
shl
push
in
and
lret
das
mov
lds
in
popf
into
mov
movsb
mov
les
test
add
dec
sbb
shll
leave
fdiv
add
sti
xor
adc
jecxz
and
dec
outsb
and
test
mov
mov
leave
push
andl
jae
rcr
cltd
push
inc
add
fwait
inc
mov
pop
dec
pop
bound
xchg
xchg
sbb
les
push
lret
adc
daa
jno
shlb
cmp
mov
pusha
lock
lahf
dec
jae
out
in
sbb
push
mov
dec
shll
jecxz
mov
mov
enter
xchg
or
add
lods
push
pop
cmpsb
sbb
test
ljmp
sub
xchg
pop
repnz
into
push
out
dec
mov
aam
sbb
pop
outsl
js
jmp
cmpsl
or
cmpsl
inc
xchg
jmp
dec
popf
aad
xorb
testb
mov
rclb
insl
adc
or
dec
lahf
mov
aas
push
dec
fisubrl
scas
insl
rcr
popa
int3
cmp
xor
mov
pop
movsb
mov
pop
sub
out
test
scas
sub
cwtl
and
daa
inc
mov
inc
std
mov
out
fstps
mov
arpl
cmp
fcomps
add
es
mov
notl
out
xchg
fwait
cli
pop
and
inc
sub
jl
sbb
outsl
fists
jae
ret
pop
inc
mov
cmp
jge
divl
add
ja
dec
xor
mov
and
jae
sahf
mov
pop
or
sbb
stos
cmp
lds
push
fstps
nop
mov
dec
insl
mov
pop
test
jl
sub
cmp
andb
test
xchg
test
mov
movsb
nop
das
popa
lds
ljmp
cwtl
fistl
shrl
inc
mov
cltd
pop
test
pop
arpl
cmp
and
fistps
popa
popf
jae
pop
rorb
or
movsb
pop
pop
sub
mov
push
pop
inc
pop
add
sarl
ss
mov
aam
and
stc
xorb
inc
inc
or
imul
rcr
repnz
sub
sbb
jp
mov
and
adc
mov
cmp
movsl
retw
xchg
imul
xchg
into
inc
xchg
fistps
not
jmp
and
fsubl
repz
sbb
or
test
lret
pop
pop
xor
inc
push
sbb
lret
ds
push
aam
mov
jge
cltd
clc
sbb
jge
ds
push
nop
inc
test
cmpsb
lock
cmp
je
and
shrb
sbb
aam
or
aam
jbe
cmp
xor
pusha
and
pusha
mov
jb
rol
fbld
mov
sbb
sbb
push
add
sub
mov
add
inc
push
notb
loopne,pn
inc
imul
je
movsl
das
movsb
fstps
fbld
push
xor
push
ret
xchg
adc
or
add
dec
inc
fiaddl
lods
sub
pop
xor
mov
add
fwait
pop
or
jnp
dec
xor
sub
push
rcll
stc
jb
pop
loope
adc
dec
xchg
aas
test
ljmp
add
add
xchg
cltd
lods
stc
pop
jp
jg
sbb
shlb
fisubrl
shlb
mov
andb
dec
ja
xor
mulb
adc
adc
xchg
push
popf
and
push
mov
lds
sub
mov
mov
push
jo
iret
sbb
lods
out
cmp
push
or
fsubs
xor
jmp
push
addr16
ret
add
sbb
maskmovq
testl
loop
jle
jg
movsl
pop
icebp
fimuls
xchg
xchg
ss
cmp
ret
add
mov
loopne
mov
daa
shl
pop
mov
cmp
aam
xchg
or
jbe
lods
fmull
cmpb
daa
push
fwait
push
lods
add
mov
xchg
sti
scas
mov
mov
mov
aad
cmp
stc
popa
or
mov
xlat
adc
pusha
mov
adc
dec
test
divl
and
outsl
pop
mov
jmp
std
xchg
inc
pusha
sbb
scas
sbb
std
inc
dec
fistps
xchg
ret
mov
xor
jnp
mov
add
ljmp
sti
jl
mov
clc
data16
mov
mov
jnp
inc
aam
cli
dec
fstpt
out
arpl
mov
xchg
adc
fcompl
clc
in
push
jp
lret
loope
out
jne
test
inc
jne
xor
push
mov
dec
add
enter
cltd
in
jno
xchg
popa
or
cmp
ret
and
arpl
arpl
jp
sbb
pop
inc
push
add
xor
inc
jne
je
xchg
fiadds
test
enter
int
xchg
xorb
add
fwait
nop
xchg
xchg
outsb
sarb
mov
sub
jb
lods
inc
mov
add
push
test
mov
lea
loope
push
ret
daa
push
cmp
sub
mov
and
ficoml
cmpsb
data16
movsb
js
lods
sub
and
push
ds
push
aaa
repnz
test
cvtpi2ps
nop
dec
fdiv
loopne
bound
xor
movsl
push
adc
ljmp
mov
testb
leave
cmc
ja
push
sub
mov
lods
xchg
pop
xor
in
shr
sbb
neg
push
pop
js
mov
fs
adc
lahf
jle
pop
pop
insl
and
inc
and
loop
push
aas
push
scas
or
call
push
adc
fisttps
test
inc
xchg
icebp
or
push
pop
or
insl
insl
imul
mov
sbb
movsb
adc
xchg
dec
sbb
push
mov
cmc
mov
adc
cld
jo
out
adc
push
frstor
out
sbb
jno
sbb
clc
sbb
into
dec
addr16
pusha
stos
enter
cltd
and
jp
aam
in
sub
int3
dec
test
in
scas
pushfw
mov
mov
insb
outsb
sbb
xchg
jae
dec
mov
lock
and
test
or
jns
push
into
call
dec
in
or
ljmp
shl
mov
enter
rclb
pushf
mov
out
sbb
inc
pop
mov
in
inc
enter
loop
jge
sbb
mov
mov
add
testb
jle
and
std
lahf
inc
movsl
call
mov
js
mov
scas
pop
lock
or
adc
add
ljmp
test
leave
dec
loopne
adc
inc
mov
fs
cmp
imul
test
xchg
loope
enter
dec
arpl
and
fldcw
lcall
lahf
jbe
cmp
sbb
mov
sub
shlb
mov
cwtl
adc
int3
inc
pop
imul
scas
mov
adc
cmp
xor
repz
push
xchg
cmp
lods
hlt
jmp
repnz
ja
dec
push
mov
inc
shll
xchg
ja
hlt
xor
pop
sbb
lock
dec
and
int
sbb
dec
sbb
jns
xchg
lret
xor
ja
sbbl
jno
imul
adc
out
xorl
mov
data16
stc
movsb
divb
dec
mov
cmp
cltd
xchg
outsb
insl
movsb
inc
jae
add
dec
mov
mov
lcall
and
xchg
pop
cmp
jle
xor
mov
add
and
push
jge
fwait
cmpl
inc
enter
jmp
sbb
fisubs
lods
orb
inc
jb
insb
add
sub
pushf
gs
mov
xchg
movsl
dec
mov
mov
cwtl
data16
fidivrs
fcoml
sub
rol
push
sub
pop
stos
push
scas
int
les
into
inc
lret
ss
dec
insl
push
jae
inc
sub
fucomip
xlat
fdivl
std
repnz
int
pop
lock
lds
pop
lock
loope
ret
add
jnp
pop
and
xchg
pop
imul
mov
mov
iret
adc
dec
neg
add
mov
fisubrl
test
pop
ret
ja
hlt
enter
pop
inc
jnp
cltd
in
push
sbbb
inc
subl
inc
mov
sbb
dec
mov
movsb
imulb
rorb
out
lcall
mov
xor
scas
cltd
rcll
loopne
push
and
inc
push
push
in
lods
xchg
jmp
ja
inc
adc
leave
inc
in
and
sahf
sbb
fildl
pop
filds
je
adc
add
jb
pop
lcall
pop
jne
nop
mov
sbb
pop
pusha
mov
cltd
dec
mul
mov
bound
fs
dec
and
inc
mov
push
pop
or
add
pop
and
aaa
mov
sub
jg
dec
sub
in
mov
std
push
mov
cmp
rcll
pusha
mov
push
aam
mov
push
mov
dec
mov
add
pop
mov
cmpsl
mov
outsl
mov
sti
call
adc
xor
and
loopne
arpl
xor
popa
push
or
test
int3
mov
daa
int
popa
aam
rolb
ss
xchg
pop
lods
inc
mov
or
je
xchg
sbb
sbb
mulb
cltd
into
aas
clc
jg
std
sub
jb
fwait
lret
cwtl
test
xchg
mov
inc
cwtl
addb
dec
xchg
and
and
iret
call
sub
cmp
hlt
mov
xchg
es
daa
out
mov
pop
cmpsb
dec
adc
insl
jne
aas
sub
pop
push
sti
xor
xlat
mov
sahf
sbb
pop
adc
push
jb
xchg
pop
adc
xor
mov
int
pop
xchg
clc
mov
test
pop
movsb
pop
pop
sarl
mov
dec
lods
lds
push
shll
ss
test
jae
push
and
aam
add
mov
mov
repz
cmp
js
jmp
pop
popf
loopew
shl
shll
or
xchg
jecxz
and
lahf
mov
lea
rcr
or
addr16
in
leave
jb
mov
and
pop
add
add
lahf
xor
sub
aas
loope
push
scas
mov
andb
add
cwtl
mov
lahf
lret
cmpsb
ret
and
mov
in
ret
fidivs
out
push
mov
jns
xchg
xlat
adc
rcrb
les
in
jmp
cmp
popf
mov
clc
xchg
insl
push
mov
jg
jg
xlat
jae
pusha
int3
mov
aaa
iret
dec
sub
push
mov
inc
xor
movsb
inc
sbb
push
rorb
push
cli
out
jmp
dec
mov
push
cmp
dec
pop
mov
sbb
mov
psllq
shl
push
fcom
cmp
xchg
loopne
pop
sbb
adc
shll
iret
push
out
inc
data16
rcrb
mov
call
aas
and
jbe
dec
jnp
jo
nop
cmp
loopne
inc
into
add
or
es
mov
movsl
aam
mov
add
dec
aad
test
mov
mov
xchg
dec
fcomi
lret
xchg
in
jnp
adc
aad
inc
iret
sub
jg
adc
cmp
xchg
rcl
dec
push
add
push
and
fisttps
out
and
inc
scas
mov
insb
fmull
xchg
scas
lahf
icebp
xchg
or
inc
ss
cs
cmp
push
xchg
testl
sbbb
in
ret
mov
pop
in
ljmp
push
pop
push
mov
inc
outsb
or
mov
std
out
inc
and
ror
sbb
loopne
fs
pop
popl
addl
sub
daa
dec
and
test
push
lock
pop
push
repz
negl
mov
adc
enter
xor
lds
dec
icebp
jns
mov
dec
insb
push
jae
pop
push
ds
shlb
inc
loope
mov
mov
call
cmp
rolb
loop
aam
pushf
pushf
mov
fadd
fucom
pop
push
iret
pushf
pop
mov
lock
cld
dec
pop
xchg
xor
jmp
rep
test
mov
inc
stos
cmpsb
and
inc
mov
ret
in
fiadds
das
mov
inc
fnstsw
cmp
loopne
out
test
lods
jb
sbb
rcll
clc
jl
movsb
push
fucomp
xchg
dec
lret
out
xchg
jge
mov
sub
add
cwtl
je
sub
mov
es
loopne
adcb
aaa
xor
mov
xor
cmp
in
inc
and
push
clc
stc
dec
outsl
roll
xchg
fistpll
in
xchg
pop
in
dec
or
shll
sar
xchg
inc
cmc
shlb
xchg
pop
jb
pop
mov
negl
adc
xchg
cmp
in
ss
xchg
bound
pop
xor
daa
jne
scas
loop
fwait
push
shlb
outsb
icebp
xchg
pop
int3
addr16
fsub
inc
xchg
xchg
stos
divb
scas
outsl
lcall
test
dec
xor
sti
dec
pop
add
xor
sbb
mov
fwait
mov
push
ds
dec
stos
cs
imul
call
mov
imul
sbb
add
adc
pop
add
mov
push
jb
push
inc
movsl
sbb
clc
fwait
mov
jmp
subl
xchg
popa
and
push
push
dec
lahf
lods
in
jno
push
pop
cmp
pop
xor
arpl
xchg
rclb
out
fimuls
dec
mov
or
test
mov
dec
lahf
sbb
inc
push
repz
lods
cmp
jbe
jg
cmp
xchg
jge
lahf
es
rol
mov
pop
movsl
sub
pop
dec
rcrb
rol
loope
add
test
or
mov
adc
xchg
jns
lcall
push
xor
std
aaa
loop
mov
mov
fwait
sti
in
sbb
ja
dec
test
iret
lahf
sbb
rcrl
or
jmp
xchg
scas
sbb
add
cmp
insl
pop
push
adc
lahf
add
push
and
sarb
push
mov
aad
or
xchg
lods
fldenv
pop
push
pop
mov
nop
movsb
arpl
and
cmp
inc
sbb
jl
pop
cmp
push
cmp
and
xchg
int
stos
xchg
add
xchg
sub
cmp
enter
xchg
mov
add
lcall
idivb
and
shrl
cmp
xchg
add
mov
inc
sub
mov
popf
ja
sub
dec
sarb
adc
adc
pop
xchg
xchg
jae
fcomi
jmp
ja
sahf
pop
xchg
icebp
ret
inc
mov
dec
jo
imul
inc
cwtl
sub
pusha
push
dec
dec
dec
mov
roll
pop
mov
fidivs
mov
and
andb
imul
enter
fmul
out
sub
call
dec
add
jecxz
add
sti
mov
aad
movsl
cmp
cmp
std
sbb
mov
push
movsl
in
loope
or
jns
xchg
sti
sub
push
mov
hlt
dec
icebp
add
pushf
push
sub
pushf
xor
int3
stc
dec
mov
jmp
cmpsl
pushf
inc
movsl
adc
aam
mov
ss
jecxz
cltd
cltd
lods
faddl
sbb
aaa
sub
gs
mov
leave
ret
ret
into
std
jg
mov
adc
ror
lds
dec
lret
jno
push
loope
ss
pop
std
aad
mov
test
jl
xor
or
popf
xor
adc
popl
sub
popa
mov
clc
decl
bound
stc
mov
pop
call
inc
fnstsw
cld
jne
or
jno
je
xor
aas
clc
mov
add
cmp
pop
mov
cmova
dec
cltd
xor
shll
fwait
cmp
faddl
mov
xchg
xchg
imul
add
adc
add
int3
ret
std
sub
mov
add
or
pop
loope
jle
mov
sub
repz
add
out
std
dec
inc
fisttps
jb
pop
push
stos
jmp
dec
out
movsb
sbb
dec
pop
enter
adc
sbb
mov
mov
daa
mov
push
mov
mov
mov
rcrl
test
es
andb
lret
ss
std
lret
xor
sub
aas
mov
sub
scas
repnz
pop
mov
mov
xchg
mov
sbb
test
xor
and
xchg
mov
pop
push
jbe
jb
outsl
sub
or
pusha
or
pop
and
cwtl
pop
inc
xor
mov
addr16
jg
cmc
outsb
xlat
movsb
loopne
mov
aad
gs
int
in
dec
push
pop
mov
jns
inc
stos
dec
mov
mov
hlt
xor
jnp
xchg
aad
cltd
orb
data16
mov
clc
push
adc
cs
jp
push
fstpl
insl
out
lahf
push
popa
mov
popf
sub
mov
or
mov
dec
inc
out
sub
lcall
test
int3
lret
fadd
push
or
xor
ret
in
imul
in
mov
sub
in
jg
aam
clc
icebp
xlat
repz
fcoml
push
lahf
add
push
es
push
call
xchg
xor
arpl
jns
add
pop
pop
push
lds
push
push
ret
or
fdivrs
in
mov
push
jecxz
movsb
enter
inc
add
adc
xor
mov
lds
inc
pushl
push
mov
sub
xor
fstp
cmpsb
mov
pushf
and
stos
sub
and
aas
test
out
shlb
pop
lods
je
pop
lods
adc
mov
and
movsb
cmp
ret
imul
decb
push
push
pop
push
repnz
into
xchg
mov
jmp
jecxz
repnz
call
out
sbb
mov
xchg
pop
cwtl
inc
sbb
aad
popf
rorl
xor
cmc
fsubp
and
test
adc
jne
sub
mov
mov
data16
push
jb
add
out
cmpsl
mov
mov
pop
iret
test
insl
je
mov
mov
rcrb
push
mov
inc
mov
sarl
imul
mov
pusha
in
test
xorb
push
sbb
mov
imul
lea
aas
es
xchg
mov
ret
dec
das
adc
mov
es
push
jbe
mov
lret
dec
jbe
mov
push
jmp
add
outsb
nop
mov
int3
punpckldq
ja
adc
outsl
out
aaa
orl
iret
insl
pop
or
ss
jb
les
mov
jno
hlt
inc
outsb
fisttpll
iret
ds
cld
pushf
xchg
xchg
iret
imulb
mov
pop
int
push
test
js
ja
inc
cli
lret
or
adc
aaa
ss
inc
pop
xchg
fwait
shll
insb
andb
jae
cltd
mov
lods
push
rcrl
into
enter
pusha
rcrb
popf
test
fnstcw
stos
and
das
stc
jb
arpl
negb
sbb
imul
push
in
movsb
inc
outsb
insb
shrb
inc
ds
loope
scas
dec
cwtl
in
pop
pop
fs
dec
hlt
mov
jp
loope
movsb
stos
insb
ret
cmpb
outsl
xchg
xchg
gs
push
mov
mov
scas
push
movsl
jge
scas
movsb
mov
mov
cmp
cmpsl
in
outsb
test
push
mov
stos
cmpsb
lcall
cwtl
mov
jns
dec
dec
ret
mov
push
xor
or
pop
and
mov
mov
fcmovbe
out
add
pop
or
rclb
iret
xchg
mov
or
add
call
enter
sbb
xchg
pop
mov
test
mov
leave
loopne
push
loop
and
dec
aam
xchg
xor
dec
aas
mov
outsb
mov
jae
fildl
sahf
movsb
or
dec
dec
roll
das
mov
mov
orb
dec
pop
add
dec
shrl
bound
scas
xor
jae
sahf
sahf
ret
cmpb
inc
lahf
aaa
sbb
or
mov
les
xchg
pop
movsb
jle
out
push
dec
add
push
std
and
lea
and
cmp
dec
int3
and
popf
cmp
mov
sbb
loopne
data16
xchg
arpl
jne
adc
inc
push
or
icebp
xor
pop
or
leave
ret
sub
and
rdmsr
fwait
addr16
fstpt
mov
clc
xchg
sub
adc
xlat
jge
add
xchg
cmp
mov
jmp
dec
or
lcall
lcall
cmpsb
inc
pop
xor
lret
ss
xchg
pop
mov
mov
test
repz
mov
xorl
and
shlb
pop
and
stos
sub
xadd
jnp
out
faddl
xor
rorb
pop
sub
mov
add
jno
mov
adc
mov
sbb
cmp
loopne
push
je
mov
aad
fcoms
adc
push
jp
mov
sbb
pusha
cmp
inc
ss
es
mov
scas
sbb
dec
add
ljmp
lods
xlat
pop
xchg
mov
enter
out
or
sub
ljmp
mov
loop
imul
jo
sbb
data16
stos
adc
xor
adc
aaa
lcall
pusha
faddl
shlb
sub
fiaddl
jo
mov
lea
out
jp
sbb
and
push
std
pop
stos
insl
cmp
call
pop
cwtl
ret
rclb
mov
lock
mov
inc
add
ss
jecxz
fcompp
scas
xchg
lret
push
jmp
test
lods
fdivr
movsl
xchg
loop
cld
cli
adc
popf
shrl
xor
push
mov
or
movsl
bound
f2xm1
scas
icebp
inc
mov
fs
cltd
imull
outsl
adc
add
mov
loope
pop
push
and
jae
popf
mov
xor
cli
daa
inc
adc
fdivs
sbb
cmp
icebp
cmpsl
insl
adc
xchg
movsl
out
in
je
sub
imul
push
ret
dec
mov
loopne
mov
mov
xlat
mov
push
stc
jge
push
loopne
add
imul
cmp
adc
push
cmp
mov
divb
cmpsb
fcmovne
ja
xchg
pop
dec
ds
ds
shrl
aas
inc
pop
repz
pushf
adc
ror
jne
sub
dec
xchg
mov
fistpll
mov
insl
mov
cmp
sub
sub
loopne
stc
or
testl
bnd
cltd
stos
cmpl
fnsave
mov
outsb
jb
dec
fcompl
call
pop
int
jne
lcall
mov
iret
sarb
data16
adc
cwtl
imul
sbb
lret
dec
add
jae
repz
clc
ret
repnz
sbb
scas
ret
test
scas
jle
mov
cltd
cld
add
cmp
push
or
in
pop
or
loope
and
enter
xchg
lods
leave
pushf
add
push
neg
adc
inc
sbb
cltd
mov
jl
sbb
subl
mov
ds
adc
leave
cli
cmp
rcr
test
and
test
pop
add
add
das
add
add
cmpsb
inc
or
sub
aas
mov
xchg
in
cmp
add
push
shll
dec
or
xor
inc
pop
mov
jmp
inc
adcl
imul
scas
fs
push
out
inc
in
lods
outsl
js
push
std
data16
subb
push
adc
out
pop
xor
test
mov
movsl
mul
mov
mov
cld
mov
cmp
xor
cmpsb
jno
inc
inc
push
adc
pop
imul
mov
lock
into
aad
inc
cmp
lock
or
in
sbb
xchg
jae
mov
daa
sub
xchg
push
int3
lock
std
add
mov
xor
int3
sub
nop
push
fisubs
leave
push
jno
stc
fwait
cmp
pop
xor
in
loop
rclb
sahf
adc
jl
loop
test
sub
xchg
arpl
mov
jae
adc
sti
jo
dec
in
jl
inc
sub
ficomps
jno
fcmovnb
xchg
ficoml
leave
ret
js
push
aad
mov
adc
or
pop
xchg
mov
adc
mov
xorb
mov
lret
and
add
aam
dec
cmp
insb
sbb
movsl
pop
shll
xchg
dec
mov
in
sbb
push
push
gs
mov
daa
dec
pop
add
push
call
dec
push
das
imul
movsl
in
aam
lds
mov
jae
sub
out
cwtl
aad
inc
sbb
mov
and
mov
inc
sbb
rolb
and
sbb
jp
sahf
or
jnp
pop
lds
mov
es
stc
push
xchg
out
neg
lock
pop
mov
adc
rcrl
mov
std
idivl
dec
repnz
lock
pop
outsl
inc
sub
fisubrs
sbb
or
jg
xchg
jb
cs
xchg
nop
mov
adc
inc
dec
and
cmp
scas
add
inc
orl
or
jecxz
sahf
stos
loope
push
enter
insb
jmp
mov
and
notb
dec
sbb
imul
sti
push
mov
test
scas
mov
icebp
cmp
rcrb
cmpsl
sbb
xchg
imul
dec
xchg
inc
psubusw
cwtl
pusha
and
sbb
mov
fcoml
repnz
jge
add
cmp
incl
sahf
cmp
nop
jno
jo
arpl
adc
lret
mov
xor
popa
incl
mov
mov
inc
pop
pushf
rcl
es
mov
or
jbe
xchg
shrb
and
outsl
xlat
push
xchg
inc
int
lcall
jo
jl
add
jae
pop
inc
movsl
js
xlat
inc
lds
add
shrl
rorb
push
xchg
stos
xchg
pop
outsb
mov
rcll
push
or
sub
sbb
lods
xchg
push
jb
xor
jbe
lods
das
cld
call
test
imul
sub
adc
faddl
test
mov
jbe
cltd
int
dec
std
push
iret
rcr
out
add
aaa
xchg
jb
jl
or
lods
lea
shr
fiaddl
fdivr
push
and
mov
push
rorb
pushf
adc
mov
out
fcmovnb
sbb
pop
fs
mov
lea
stos
mov
cmp
xchg
pop
push
inc
add
xor
lds
mov
int3
leave
cld
test
xchg
cwtl
insl
hlt
dec
fstl
sub
or
iret
jmp
nop
push
dec
xor
xchg
xchg
mov
sbb
in
sub
jl
pop
movsl
xchg
lahf
test
push
adc
jge
mov
sub
xor
icebp
aad
sarl
imull
fadd
js
mov
push
push
testb
xchg
jb
inc
jae
sbb
ljmp
repnz
test
mov
push
push
rorl
les
popf
cwtl
sar
shlb
add
inc
and
dec
sti
pop
push
inc
lock
lods
jo
subl
sahf
bound
out
xor
imul
mov
jbe
fistl
pop
out
imul
jge
jle
xor
lods
enter
xor
xor
fnstsw
xorl
mov
lret
jbe
mov
stc
dec
mov
pop
dec
insb
mov
dec
xchg
int3
xor
jo
or
mov
push
and
repnz
pop
adc
insl
mov
shr
xlat
movsl
les
repnz
ljmp
scas
bound
in
mov
popf
out
icebp
sbb
xor
mov
in
sub
mov
pop
pop
jae
dec
jp
jecxz
shlb
mov
js
jae
loopne
das
adc
loopne
je
or
xchg
sbb
mov
inc
aam
add
outsl
mov
scas
lods
cs
loope
loope
push
cltd
or
xchg
dec
dec
adc
leave
inc
or
mov
lds
push
and
int
sub
add
jle
mov
jp
ret
sub
loope
adc
adc
mov
shlb
ds
jb
mov
sub
frstor
jl
icebp
sbb
and
inc
cmpsb
push
imul
clc
fwait
cmovs
dec
mov
cmp
mov
out
dec
imul
rorl
fiaddl
mov
arpl
lock
add
inc
and
or
lahf
mov
xchg
movsb
aas
fcom
pop
stos
sub
in
ss
mov
xor
cld
hlt
test
cmc
loopne
push
push
cmc
stos
sti
jecxz
adc
dec
sti
jl
jne
sub
arpl
bound
pop
adc
int
jo
mov
adc
push
add
pop
mov
into
push
xlat
subl
rcll
pop
ss
sbb
mov
mov
sbbl
mov
sar
gs
subl
pop
adc
mov
scas
xor
pop
cmp
scas
cmpl
jbe
or
cwtl
incb
sub
mov
shrl
mov
or
mov
push
inc
shrb
outsl
xchg
outsl
lea
or
sahf
mov
dec
add
mov
sbb
imul
xchg
mov
dec
les
mov
sbb
lahf
lcall
jecxz
cltd
les
repz
fs
mov
cmpb
sahf
daa
rcrl
jl
inc
rorb
movsb
push
out
insb
inc
call
movsl
daa
sub
imul
lea
mov
loope
inc
mov
jo
pop
add
jecxz
insl
jp
sub
mulb
test
adc
xchg
js
outsb
jnp
jp
mov
int3
popa
mov
ret
data16
js
pushf
add
hlt
stc
push
sbb
cmp
sub
xchg
dec
aam
push
xchg
repnz
xchg
addr16
aas
or
fdivrl
add
aam
cmc
outsl
sub
adc
stc
pop
int3
cmp
jp
jecxz
mov
test
pop
out
popa
fisubl
movsl
adc
and
inc
mov
hlt
add
jp
jg
jnp
hlt
xchg
push
dec
sbb
or
sub
movsl
mov
pop
das
ret
loop
leave
mov
xchg
mov
in
adc
inc
iret
fstl
les
cmp
push
jo
cld
les
sub
aas
mov
and
xchg
lret
mov
push
cmc
aam
jns
mov
mov
jo
sub
lret
or
jne
push
out
out
inc
inc
or
lods
in
mov
lock
std
popa
ss
mov
cmp
jp
sub
dec
push
or
cmp
rcl
hlt
push
or
addr16
divb
adc
cli
mov
inc
dec
in
push
fs
cld
in
mov
out
std
shl
dec
out
scas
dec
aas
ret
mov
dec
mov
out
adc
pop
dec
inc
inc
adc
sbbl
mov
repz
mov
xchg
stc
pop
je
test
loop
imul
lea
mov
sub
sub
mov
mov
adc
aaa
pushf
push
push
pop
mov
mov
cmp
ja
xchg
xchg
add
lea
pop
decl
shrb
mov
jns
lods
sub
loopne
andl
into
sub
xchg
out
xor
daa
clc
push
subb
xchg
pop
rcr
rcrb
ljmp
cmp
test
or
push
cwtl
mov
pop
inc
xchg
insb
pop
fistl
adc
or
std
subb
xchg
pop
push
loopne
xor
scas
mov
add
call
lretw
pop
aas
stc
outsl
dec
jmp
popa
push
and
mov
xchg
push
pop
pop
and
cld
cmp
pop
cwtl
and
insl
enter
rclb
xchg
aaa
mov
add
popa
xchg
push
mov
pushf
push
jl
mov
mov
rcll
or
shrb
inc
int
ret
mov
jo
test
pop
aas
inc
bound
jnp
scas
jns
xchg
int3
mov
in
xchg
lret
lods
test
out
add
adc
jl
adc
push
pop
or
sbb
adc
add
pop
push
bound
dec
xchg
sbb
cmpsl
loope
cmp
cmpsl
pop
daa
sub
es
repz
or
ss
test
xchg
mov
sub
loope
mov
jnp
mov
xchg
mov
fucomi
repnz
pushf
lcall
cltd
leave
test
jne
add
mov
cmpsl
stc
lods
dec
leave
mov
fcomp
int
dec
sub
sub
xchg
jno
cmpsl
pop
aas
xlat
adc
or
xchg
insl
pop
dec
push
loop
pop
iret
out
out
add
xchg
sbb
js
fsubrs
mov
dec
fnsave
icebp
push
rolb
frstpm(287
jns
stc
repz
scas
jecxz
icebp
ljmp
mov
push
insb
movsl
push
sub
add
jae
js
adc
mov
insl
mov
sbb
andb
add
shl
push
pop
and
push
bound
xchg
cmp
shrb
mov
dec
sbb
pop
inc
lds
loope
mov
pop
push
push
test
pushf
jecxz
test
inc
push
sub
or
lcall
jno
mov
add
add
mov
mov
sub
jne
sarl
les
push
movsb
stos
adc
data16
repnz
adc
adc
frstor
mov
je
fisttpl
int3
lock
lret
and
cli
jg
jl
cmp
rorb
jne
leave
lds
sbb
push
and
outsb
xchg
add
xchg
xor
push
pop
lds
cld
fimull
xchg
mov
and
rcrl
sbb
out
loope
mov
imul
stos
dec
xorl
fs
mov
mov
or
sbb
push
js
jmp
add
call
ds
push
mov
in
pop
popa
mov
movsl
insl
sub
jle
lods
lret
xor
sub
jg
sub
cmp
pop
insb
xlat
lods
call
sbb
add
inc
cmp
daa
lea
dec
xchg
jbe
scas
sub
insb
fimuls
xchg
call
jmp
and
in
clc
fucomip
mov
loop
or
jno
mov
insl
call
sub
out
cmp
js
out
ret
ficoms
push
xchg
loope
shrb
mov
cmc
enter
fwait
int
nop
mov
cmp
inc
les
and
xor
data16
lods
jle
cmpsl
dec
jo
mov
pushf
aam
and
mov
bnd
outsl
sbb
je
and
mov
pop
pop
adc
testb
shlb
arpl
lods
out
mov
jb
or
mov
jle
rorb
insl
es
jge
jae
loopne
add
sbb
cmp
push
cmp
roll
push
incl
in
in
out
lcall
fldenv
fstpt
cs
popf
adc
movsb
ja
int3
es
xchg
mov
inc
int3
out
notrack
adc
adc
mov
mov
jg
adc
aad
sbb
dec
dec
add
test
push
inc
mov
jo
cli
arpl
ljmp
scas
adc
in
add
cs
sbb
sti
add
or
test
rcll
sub
bound
mov
mov
pop
and
ret
xchg
int3
mov
call
sbb
es
les
test
std
mov
cmp
pop
clc
fisubrl
imul
or
arpl
scas
jns
lret
pusha
mov
andl
mov
pop
in
out
or
pushf
lahf
add
jg
sub
pop
mov
add
scas
int
push
inc
lds
icebp
mov
shll
push
daa
pop
sbb
jns
push
fwait
aas
pop
test
push
dec
loop
ja
sbb
xor
jmp
mov
cmp
cs
add
sub
xlat
add
and
lock
add
add
mov
sub
es
mov
push
int
mov
aad
dec
push
jl
out
lcall
int
cmp
fadd
mov
mov
or
xor
push
add
loope
sbb
int3
mov
js
mov
fists
iret
xchg
jge
jge
xor
inc
inc
lds
or
mov
fstps
clc
pop
xchg
hlt
sub
imul
scas
cmc
pushf
fsub
dec
out
jno
mov
sub
fsub
xchg
inc
out
in
pop
or
test
popf
and
mov
fmull
test
test
fsubrl
cmc
sbb
fmulp
mov
popa
adc
popf
popf
repz
test
pop
add
popf
aam
into
sbb
add
pusha
xchg
sti
mov
adc
inc
xlat
sbb
adc
and
test
xorb
es
or
cmc
or
je
push
jne
fdivrs
sub
pop
mov
movsl
popf
out
and
sub
pop
xor
jl
addr16
inc
mov
and
in
sahf
and
add
scas
test
orl
scas
sub
adc
or
clc
dec
dec
pop
and
pop
inc
negb
jge
cmp
cmp
sahf
pop
mov
ret
dec
inc
pusha
add
lcall
loop
xor
out
pop
loop
mov
mov
out
jne
jmp
sub
inc
ja
enter
scas
sbb
cmp
in
fdivrs
popf
fisubl
add
mov
sbb
test
inc
or
inc
imul
dec
faddl
cmp
scas
movsb
push
xor
enter
sub
add
popa
movl
and
mov
loopne
cli
ljmp
add
push
into
fwait
aad
outsl
ss
scas
mov
xchg
jmp
mov
fisttps
add
push
xchg
daa
mov
pop
mov
andl
es
jb
dec
sbb
shl
sbb
xchg
test
scas
cmc
and
pop
ss
jnp
or
cmp
adc
shll
scas
dec
sbb
mov
or
jno
in
push
sti
testb
loopne
fwait
enter
std
test
jecxz
cwtl
inc
xchg
test
pop
jle
lods
addb
fisubrs
cmpsb
out
fs
mov
xchg
mov
sbb
pop
mov
sub
jl
or
testb
into
lret
cmp
stos
adc
clc
jno
test
scas
in
push
int
lods
arpl
cmp
xor
sub
and
nop
movsl
js
jge
pop
out
xor
sub
mov
adc
jp
xor
inc
scas
jne
or
shrb
sahf
mov
sbb
lret
inc
pop
hlt
jle
jmp
jbe
lds
fwait
imul
mov
and
lret
or
jo
jp
pop
inc
add
sbb
cmpsb
dec
subl
xor
adc
daa
fsubrs
out
leave
or
loop
xchg
xchg
es
or
fbstp
jne
and
cs
out
idivl
adc
popa
rorb
mov
fcmovnu
pop
xor
test
negl
cmp
hlt
add
sahf
dec
ljmp
dec
push
adcl
sbb
jns
xchg
push
lret
mov
jne
imul
or
cld
test
incb
jp
mov
mov
pop
dec
pop
jecxz
jbe
jno
pop
clc
nop
mov
mov
leave
xor
jo
cld
adc
iret
popf
fcmovb
mov
sub
fcomps
push
mov
adc
rcrl
xchg
mov
jp
lds
fsubr
sub
in
dec
xorl
jl
add
ret
inc
inc
and
mov
loopne
das
push
adc
jmp
insl
mov
aaa
fcoms
push
in
inc
lret
movsb
in
divb
or
inc
dec
adc
sbb
lret
cmpsl
cmp
xor
or
cli
pop
xor
jae
sti
push
sbb
imull
add
mov
gs
and
loopne
aad
shl
test
mov
cmc
shll
clc
rol
xchg
fsubrs
pop
mov
fisubrs
push
fsubrp
cmc
jne
mov
mov
jns
loopne
mov
or
cmp
xchg
fcmovnbe
jmp
mov
out
push
inc
adc
pop
xor
fnsave
push
xor
push
dec
stos
xchg
push
repz
push
pop
mov
inc
ss
mov
add
fists
and
repnz
cmpsb
cwtl
mov
or
mov
push
and
sbbb
fsts
fldcw
out
adc
icebp
andb
push
cmc
and
rolb
iret
icebp
add
pop
out
mov
add
testl
mov
aam
xchg
popl
in
imulb
std
or
std
in
lods
push
xchg
mov
push
fsubs
cmp
cmp
mov
iret
jno
mov
ret
testl
frstor
inc
insb
fs
ljmp
add
leave
mov
stos
call
push
popa
outsb
xchg
in
loope
inc
mov
mov
jge
mov
sbb
subb
xchg
sub
cmp
add
xchg
pop
fsubl
out
sahf
shlb
dec
jmp
int3
jb
daa
push
and
xchg
xor
scas
loop
and
xor
mov
int3
cmp
fwait
hlt
xor
lea
push
js
xlat
std
je
add
pandn
das
push
mov
mov
adc
insl
jl
jge
int
cld
push
sub
insl
out
inc
or
enter
xchg
cmp
cmc
icebp
jg
jle
idivb
push
int
enter
cmp
lahf
dec
popa
mov
loop
jne
pop
mov
xor
jnp
add
mov
jp
cltd
xchg
push
mov
rcll
mov
mov
xchg
orl
cmp
imul
pop
inc
ret
fneni(8087
frstor
adc
popa
xor
test
icebp
je
aam
fistpl
jp
dec
lea
out
or
scas
mov
into
adc
in
jmp
cmp
insl
notl
mov
jl
ffreep
push
jo
stc
rorb
xorl
test
and
dec
cmp
dec
sbb
movq
fcomi
jle
push
or
mov
aaa
mov
lock
sbb
test
icebp
leave
mov
int3
xchg
pop
roll
ret
imul
imul
out
jp
cmp
mov
imul
sub
adc
fnstenv
jmp
incb
and
and
mov
aaa
push
cltd
test
loop
enter
mov
and
mov
sahf
ja
cmp
and
mov
or
loope
mov
pop
xchg
loopne
aam
sahf
dec
add
stc
out
cmp
pop
mulps
ds
aas
pop
daa
xor
mov
sub
pop
push
pop
jle
daa
pusha
dec
and
xchg
sahf
popa
push
jecxz
idivl
sbb
cmpsl
cmp
test
inc
outsb
xchg
dec
fdivrp
adc
cli
dec
jp
pop
cmp
or
inc
adc
movsl
clc
mov
les
jae
dec
scas
mov
mov
jmp
mov
ret
in
xchg
push
clc
out
sbb
add
cmpsl
push
and
shr
mov
ss
xchg
mov
mov
add
loop
jnp
jge
mov
pop
and
hlt
jmp
aaa
pop
dec
dec
and
jg
lret
add
xchg
pop
hlt
lcall
ljmp
mov
push
mov
mov
sbb
mov
subb
mov
sub
push
add
mov
mov
ret
call
xor
out
pop
ret
and
fcomps
mov
inc
aam
out
mov
gs
mov
fwait
incl
stc
int3
and
jns
xor
adc
incl
pop
stos
lret
adc
into
scas
imul
dec
mov
xor
cli
lret
xchg
daa
add
fwait
divb
pushf
ret
pop
mov
inc
in
adc
push
aas
sub
fdivrp
je
mov
loop
out
test
xchg
negl
hlt
das
imul
push
enter
adc
xchg
and
xchg
adc
jp
incb
or
jo
lds
jmp
jp
mov
ljmp
xchg
pop
mov
sbb
pushf
fdivrl
rorl
dec
nop
or
sub
xchg
arpl
jns
fmull
and
mov
out
xor
arpl
lcall
jae
adc
int
dec
xchg
lods
aam
cmc
or
or
xor
mov
sub
cmp
add
mov
shll
jne
lea
pop
fstpl
mov
mov
push
mov
xor
mov
int3
sub
jl
lahf
adc
pusha
ds
push
jmp
push
push
test
cmp
add
jle
xchg
enter
push
or
rcrb
aas
mov
imul
cltd
mov
or
mov
icebp
mov
incb
inc
clc
jp
repnz
cltd
mov
jmp
mov
sub
addr16
adc
fildl
and
sbb
push
mov
stos
dec
mov
stc
cmpsb
imul
sbb
popf
rclb
push
add
hlt
xor
repz
mov
pop
mov
push
and
addb
xchg
pushf
dec
sbb
jo
and
push
pop
xlat
shlb
mov
dec
enter
aam
sub
fucomp
dec
pop
sub
out
jecxz
dec
or
test
cmp
lahf
pop
xchg
pusha
pushl
popf
xor
dec
ja
mov
adc
lahf
pop
mov
je
in
pop
in
outsl
test
sub
pop
sub
ss
out
aam
test
stos
ret
dec
pslld
lock
or
mov
adcb
fldz
xchg
lfs
test
mov
jl
jns
mov
xchg
sbb
daa
sbb
xor
sahf
lods
sbb
lret
mov
lcall
out
ja
addr16
mov
leave
add
in
pop
mov
fs
or
out
add
sbb
adc
push
stos
jmp
jbe
rol
xor
inc
in
or
pop
jae
sub
jnp
xchg
imul
js
ret
ljmp
popf
dec
test
decl
and
fstl
xor
cmpsl
sub
mov
xor
sub
ljmp
xchg
lock
cmpsb
lret
inc
lcall
add
mov
mov
pop
inc
mov
dec
push
stc
sub
js
sbb
jnp
mov
aas
jge
adc
dec
js
aad
cmp
test
callw
ljmp
aad
int3
rolb
add
rcrl
insb
inc
cmp
std
in
add
insb
bound
mov
push
mov
add
xor
ss
fists
pushf
fcomps
add
xchg
push
mov
ret
fs
leave
push
xchg
in
fs
push
push
lcall
mov
and
lods
mov
jl
xchg
push
add
cwtl
out
xor
in
outsb
mov
add
mov
out
mov
dec
mov
adc
push
stc
dec
and
enter
jae
cwtl
inc
push
push
std
mov
test
call
lds
jb
xchg
and
mov
sarl
or
and
arpl
fwait
cmp
push
data16
push
scas
icebp
or
pop
aas
icebp
iret
sti
push
mov
mov
xor
add
jnp
mov
cmpsb
add
push
jl
jnp
pop
out
lods
xchg
cmc
mov
loop
dec
fldenv
mov
jae
insl
lret
xor
decl
jmp
mov
ja
repz
cmp
pop
sbb
add
mov
mov
sub
out
leave
out
push
mov
push
fcomi
mov
push
frstor
add
cmp
jg
mov
outsb
ficoml
mov
fstl
hlt
jp
imul
pop
mov
cmc
xor
or
int
or
hlt
out
push
jl
mov
inc
shrl
mov
adc
dec
sub
loop
mov
fimull
pusha
mov
mov
push
gs
loop
jnp
fs
ja
out
iret
sti
jae
aad
loope
push
xchg
lcall
jne
adc
jne
js
sub
mov
jecxz
xchg
push
cmpsb
dec
out
je
and
mov
jnp
mov
icebp
rorl
mov
movsb
fnstcw
adc
insb
loopne
inc
sti
cmp
adc
sbb
cmp
aam
cmpsb
or
loopne
sbb
adc
mov
nop
sub
mov
into
movsl
fdivl
in
jae
jmp
sahf
dec
iret
push
jbe
lahf
ret
nop
jns
shlb
mov
push
dec
adc
cmp
or
jae,pn
pop
or
cld
imul
cltd
or
push
cmpsb
imul
cwtl
test
in
neg
test
cmp
mov
pushf
cmp
push
dec
out
lods
fistpl
das
in
cmp
hlt
js
imul
and
adc
sti
ja
std
sbb
add
push
sub
cmpl
andl
shl
out
pop
jecxz
lods
xchg
mov
inc
jae
cmp
enter
sarb
pop
dec
dec
stos
sbb
dec
mov
push
fsubr
pop
sub
jnp
add
xorl
test
sbbl
jb
repnz
adc
je
cmp
fisubrl
add
ja
test
aas
cs
lret
mov
and
icebp
icebp
mov
mov
xchg
out
mov
outsl
sbb
push
std
dec
int
dec
dec
outsb
lods
cmpsl
lcall
mov
cmpsb
inc
iret
not
jb
adcb
jno
sub
stos
outsl
xor
mov
fldl
js
xlat
cmc
cld
cwtl
mov
fnstcw
dec
cmpsb
imul
sbb
push
and
push
scas
adc
pop
loope
aad
scas
stos
mov
insb
pop
xchg
push
push
cmp
push
mov
test
pop
in
out
sub
mov
sbb
pop
sahf
pushl
jo
in
popf
daa
sahf
mov
cmp
pop
mov
fstps
stc
or
xor
aaa
mov
std
gs
test
fsubl
mov
dec
scas
cmp
cmp
cmpsl
cwtl
mov
jne
mov
insl
cmpsl
push
rclb
adc
cmp
mov
ret
cmp
es
xchg
adc
fsub
pop
enter
inc
dec
cmp
test
mov
dec
negl
aas
jae
out
loop
inc
ret
pusha
fsubl
xchg
jp
xlat
jmp
push
cmp
loop
or
jle
lds
adc
cmpsl
clc
nop
cmc
xor
inc
sbb
sbb
dec
inc
inc
in
inc
mov
or
push
and
pop
mov
xchg
xchg
aam
cld
aas
aas
decl
cltd
rcll
in
out
cmpl
push
xor
dec
int3
repz
fs
scas
cmp
dec
loop
jno
adc
cmc
push
inc
pop
sub
sbb
cmp
cmp
lods
add
push
push
out
daa
aaa
out
aaa
aad
dec
mov
inc
mov
mov
mov
inc
mov
xor
mov
sbb
testl
in
xor
rorb
test
jmp
popf
jne
cmp
int3
mov
ret
xchg
sbb
dec
aas
fsubr
or
or
shrb
and
clc
mov
rclb
imull
popa
sbb
pop
dec
and
xchg
jp
shll
in
cmpsl
mov
aas
lahf
ret
inc
jo
adc
lret
test
test
loopne
scas
in
cmp
sbb
ljmp
cmp
dec
lcall
int3
insb
sub
shrl
scas
mov
or
adc
pop
pop
and
jmp
faddl
mov
and
inc
jle
mov
and
lock
mov
loope
arpl
mov
sub
adc
jle
mov
sub
pop
test
mov
movsb
mov
mov
in
mov
aas
popa
ljmp
inc
icebp
add
outsb
adc
push
stc
sub
pop
and
test
stos
mov
rcrb
bound
push
pop
test
add
mov
jns
dec
mov
popf
movl
push
cli
sub
rcrl
pop
pushf
cld
sbb
out
pop
push
leave
adc
mov
lret
inc
scas
sti
inc
mov
ja
rolb
or
pop
mov
mov
jns
jae
jns
pop
dec
insl
pop
jb
fnstenv
and
jp
fwait
xor
pop
sbb
jge
inc
fbstp
cli
stc
stos
push
push
and
jnp
ret
mov
outsb
test
or
and
div
cmp
cmpsb
lret
ret
pushf
cmc
jns
incb
push
imul
mov
or
dec
sbb
sarb
testb
xchg
mov
cwtl
daa
and
lahf
add
mov
xor
push
out
push
cmc
add
les
mov
push
and
test
sub
inc
outsl
push
lods
jmp
add
rorb
popl
insl
and
add
xor
mov
or
repnz
adc
je
out
jp
loop
les
das
repnz
mov
adc
lahf
adc
cmp
int
mov
xor
xor
jae
xor
push
inc
sbb
lock
mov
push
and
sub
inc
fcmovnb
nop
mov
arpl
data16
test
mov
inc
fs
out
add
mov
inc
sbb
xchg
mov
push
sub
test
jne
lahf
test
pop
enter
jno
ja
push
lcall
mov
pop
neg
adc
cmpsb
cmp
stos
stos
push
sub
fmuls
mov
stos
pop
mov
clc
push
ja
clc
cmpsb
adcb
push
jnp
ss
lret
mov
adcb
test
loope
adc
sbb
pop
lahf
add
cmp
pop
pusha
push
jne
lods
add
lret
rorb
mov
or
jge
inc
test
sbbl
mov
fiaddl
jecxz
outsb
jnp
out
and
fsubl
out
jmp
orb
inc
jp
dec
xor
mov
loope
lcall
xchg
test
mov
mov
xchg
scas
data16
test
jecxz
sub
mov
lea
mov
dec
xor
scas
cmp
mov
inc
jns
lods
les
and
push
xor
ror
ret
xchg
int
adc
add
fbld
xor
scas
jle
or
loop
push
sbb
push
icebp
addr16
data16
push
aad
cmp
inc
gs
in
and
mov
out
ljmp
out
push
in
sti
inc
jbe
aad
push
mov
cmp
sub
daa
add
stos
in
aas
xlat
push
lret
adc
push
lea
mov
mov
das
mov
popa
mov
xchg
repnz
pop
push
xor
xchg
pop
shrb
push
jecxz
mov
scas
test
mov
cld
testl
adc
lock
lds
push
in
cltd
popa
sbb
jmp
pop
xor
ja
lret
or
adc
pop
shlb
sbb
sbb
sub
mov
push
mov
aam
lea
mov
icebp
ja
mov
adc
pop
pop
sub
sub
mov
or
inc
jne
pop
sub
xor
dec
pop
jbe
sar
inc
jnp
mov
int3
add
rcll
sub
pop
pop
les
cmp
leave
popf
paddd
sbb
pop
out
fcmovnb
dec
mov
jmp
fldenv
mov
nop
fs
les
testl
xor
push
xchg
add
nop
add
or
dec
cmc
adc
jle
enter
scas
stos
or
cmpsl
shr
add
pop
rcrb
jnp
mov
jg
cmpsb
mov
adc
cwtl
mov
out
sub
push
adc
lsl
in
bt
imul
mov
mov
pop
imul
lods
lret
or
cwtl
mov
mov
aaa
sub
sarl
lcall
mov
jge
mov
mov
stos
inc
mov
mov
cmpsb
lret
pop
and
sahf
sub
cmpsl
fcompl
fnstsw
push
cltd
popa
je
sti
icebp
sbb
mov
dec
push
shl
bound
inc
dec
fstpt
mov
notl
jne
push
movsl
std
sbb
mov
daa
hlt
lret
loopne
xchg
bound
loope
push
cwtl
cmp
jl
xchg
ljmp
push
mov
sbb
mov
inc
adc
xor
mov
fcoml
push
fadd
sbb
idivb
xor
pusha
in
cmp
pop
jnp
or
xchg
or
dec
aad
test
jecxz
dec
out
test
or
jnp
imul
inc
je
sub
mov
lds
and
push
pop
out
scas
adc
pop
pop
add
inc
lret
pop
loope
mov
pop
cwtl
imul
mov
cmp
jge
jae
popa
xor
out
push
shlb
xchg
movsl
pusha
dec
lret
out
pop
mov
xchg
pusha
lcall
je
pop
fisubrl
push
mov
cmpsl
pop
shl
push
add
jecxz
push
mov
pop
fistpl
inc
mov
mov
je
adc
lcall
xchg
jl
or
dec
sub
add
sub
mov
setns
fmull
pop
jg
out
test
adc
fldpi
popa
mov
negb
push
jne
aas
pop
and
lds
rcrb
pop
dec
cwtl
sbb
adc
repnz
adc
jl
add
movsb
add
mov
cmp
cmp
imul
fcomps
add
inc
stos
push
mov
scas
xor
xchg
xor
inc
or
shl
insl
aaa
jp
mov
xchg
insb
cmp
xor
loope
movsb
jae
jae
fistl
imul
hlt
fcmovbe
test
cmp
or
fs
bound
sub
pop
in
fabs
rol
sahf
xor
jns
or
xor
xchg
mov
jmp
or
clc
pop
out
adc
adc
xlat
add
add
inc
lock
int3
add
push
mov
add
and
mov
fistpl
scas
dec
rcll
inc
imul
rclb
lahf
or
sbb
jp
popa
sbb
in
in
pop
outsb
jbe
lods
pop
pop
nop
and
mov
sbbl
push
adc
jnp
les
sbb
fs
jnp
ret
nop
lret
sbb
shlb
arpl
lock
cmp
in
inc
inc
adcb
sub
rorl
xor
or
and
fidivl
pop
daa
xchg
and
pop
dec
or
ss
adc
inc
pop
rcl
and
and
jb
pop
stos
or
pusha
mov
das
sub
call
jae
and
mov
xchg
mov
lret
or
xchg
icebp
cltd
add
jge
jp
mov
pop
fnstenv
adc
lret
sub
ss
int3
in
xchg
mov
stos
adc
or
xor
mov
cmp
je
into
push
mov
scas
insl
push
inc
pop
adc
stos
adc
in
mov
cmpsl
push
and
push
inc
imul
repz
inc
xor
and
xlat
mov
divb
fildl
mov
lea
xchg
fdivl
mov
test
push
repz
repz
cmp
pop
hlt
aam
mov
out
jnp
xor
pop
shlb
sahf
test
adc
or
scas
ja
mov
mov
pushfw
pop
dec
pop
and
mov
cmpsb
inc
test
mov
insl
xor
mov
dec
rolb
pop
iret
xorl
cwtl
xchg
jecxz
mov
ret
sbb
js
inc
das
imull
negb
xor
mov
mov
repnz
movsl
jmp
aad
mov
les
out
dec
sbb
and
adc
mov
insl
out
lods
stos
stos
pop
inc
xchg
inc
jle
stos
add
repz
push
adc
nop
cmp
push
dec
repz
sarb
dec
ja
es
adc
lea
pusha
push
add
adc
inc
adc
dec
sbb
aad
mov
and
shll
or
cwtl
xchg
pop
and
enter
mul
loop
into
cld
test
push
shr
fstps
push
cwtl
xor
inc
outsb
push
and
in
lcall
push
call
mov
mov
push
xor
mov
stc
mov
push
aam
jbe
sar
sbb
or
repnz
ljmp
imul
push
jl
sub
inc
daa
dec
or
push
add
jo
fwait
pop
xchg
xorb
cmpsl
outsl
adc
dec
adc
mov
mov
mov
sbb
xchg
cmc
out
das
jmp
out
push
out
sbb
roll
jge
inc
leave
ret
es
push
cmp
lds
hlt
std
sbb
xor
ss
add
push
ret
rcrb
xchg
hlt
push
insb
out
sarl
imul
stos
mov
pop
pop
mov
movsl
scas
push
jmp
nop
pusha
sbb
xchg
pop
loop
mov
rcrb
pop
push
lret
mov
outsl
imul
addl
lds
xchg
jp
push
in
jb
pushf
hlt
push
ds
pop
les
cs
inc
outsl
jbe
shl
add
pop
and
icebp
xchg
dec
or
and
mov
fisttpll
xchg
or
enter
xchg
inc
int
mov
ret
incl
xchg
dec
mov
jmp
ffreep
repnz
pop
pop
mov
mov
sub
popf
jge
xchg
pop
pop
pusha
int
jae
dec
test
scas
mov
jg
mov
lret
mov
sbb
shlb
xor
and
repz
js
push
push
mov
hlt
xchg
mov
sbb
lret
in
xchg
out
imul
cmp
sti
outsl
sub
xchg
push
data16
mov
xchg
arpl
fmull
pop
scas
sbb
aam
ljmp
adc
leave
imul
xor
push
inc
push
mov
xchg
push
inc
sahf
shrl
mov
outsl
or
test
das
and
inc
rolb
jne
pop
mov
sbb
outsl
sub
sti
or
scas
pop
jno
jmp
loop
loope
mov
sub
jns
jmp
mov
dec
std
mov
repnz
addb
cmpsw
add
xchg
call
scas
jbe
movsb
push
and
ljmp
and
cmp
push
jne,pt
sub
pop
enter
fcmovnu
cmc
inc
lea
pop
hlt
push
mov
fchs
jmp
mov
aam
push
in
xchg
or
push
mov
xchg
bound
cmp
xlat
mov
push
loop
sub
daa
xchg
pop
fcmovne
pop
loopne
bound
das
js
push
popf
outsb
aaa
addr16
mov
jno
sub
enter
fyl2x
imulb
push
push
xor
mov
in
pop
into
loop
pop
dec
pop
mov
subb
vfmaddsubps
push
sbb
xor
and
js
cmpsb
cmpb
mov
out
push
outsl
int3
sub
push
push
inc
clc
ret
add
fcomp
mov
jle
and
adc
or
cmc
mov
mov
sahf
inc
inc
sahf
jg
mov
test
pop
cmc
and
xchg
sbbb
aam
das
xor
jns
mull
movsb
dec
jbe
jl
andb
sub
loope
sbb
push
jmp
mov
jnp
clc
lcall
ds
mov
jns
pop
add
clc
mov
dec
or
in
outsb
insb
repnz
push
lretw
push
mov
hlt
daa
cld
cmpb
mov
inc
rcrl
lahf
mov
add
outsb
jns
xchg
fadd
ja
push
movsl
loopne
shll
cmp
mov
dec
cltd
jp
inc
test
mov
pusha
xchg
sub
push
inc
jg
addl
and
jnp
loop
dec
push
xchg
mov
adc
xor
cmpsl
lret
test
jecxz
sar
sahf
and
sbb
pop
adc
test
xor
js
xor
aaa
mov
sub
add
pop
mov
mov
mov
fiaddl
arpl
jmp
pop
and
push
inc
leave
jbe
popf
dec
xchg
les
data16
sti
test
xlat
inc
lret
sub
jbe
jns
add
mov
add
add
insl
shll
push
sub
insl
imul
ret
mov
xchg
mov
aaa
adc
jns
jmp
ds
and
pushf
gs
sbb
adc
or
fdivr
rep
pop
or
mov
xchg
mov
xor
adc
int
xchg
call
jmp
pop
cwtl
jmp
pop
mov
pusha
popf
aas
inc
sub
cmpsb
push
movsb
push
mov
pushf
bnd
xchg
mov
mov
cld
js
sub
lahf
mov
in
adcb
adc
fwait
fwait
je
lea
add
mov
lret
sti
push
dec
sub
pop
dec
repz
fs
pusha
jmp
lcall
prefetch
mov
cmpsl
fisubrl
lea
mov
outsl
js
mov
lret
cmp
imul
test
je
or
nop
or
mov
adc
jo
outsb
mov
push
loope
gs
or
adc
cmc
lds
cmp
sub
dec
dec
jo
add
movsb
es
sbb
sbb
scas
ljmp
stos
sub
dec
push
sbb
mov
sub
pop
out
sarb
xor
cmpsl
push
into
es
aam
hlt
arpl
dec
cmp
icebp
xchg
sbb
dec
in
ficoml
fistps
jb
mov
ja
xchg
fmulp
es
xchg
xchg
xchg
clc
push
stc
lea
mov
and
xchg
jbe
std
mov
xor
fnstenv
mov
jg
mov
fstpt
sbb
pop
scas
insb
shl
adc
sub
int
insl
addr16
mov
adc
xor
test
pop
popf
adc
push
fs
sbbb
mov
jle
ss
outsl
cld
dec
jnp
push
mov
ret
in
add
fs
jg
clc
loope
lahf
pusha
mov
fildl
out
mov
loopne
sbb
mov
stos
clc
loopne
fs
int
jecxz
adc
popa
pop
jne
bound
push
je
cli
jp
ljmp
add
xchg
mov
xor
adc
outsl
jl
jne
loope
dec
scas
add
sub
fistpl
push
pop
jo
stc
xor
push
orl
data16
sarb
leave
mov
sbb
repz
scas
mov
sbb
sti
and
push
xchg
das
test
mov
push
arpl
jbe
inc
xor
and
pop
or
mov
hlt
scas
pop
xchg
cmp
lcall
xchg
xor
mov
jmp
or
xor
sbb
cs
in
fs
xchg
push
or
sub
and
xchg
leave
sub
ret
fidivl
push
int
xor
push
jecxz
lods
pop
or
cli
mov
push
fdivl
in
stos
js
lea
adc
cmp
sti
lret
scas
repnz
arpl
les
pop
mov
loopne
pop
in
ret
sub
int3
popl
dec
scas
pop
pop
or
in
sub
push
mov
fldl
lods
inc
pop
sub
pop
ficomps
xchg
mov
js
push
and
pop
sbb
mov
in
push
mov
outsb
fstpl
mov
mov
push
jae
adc
sub
stc
psraw
mov
ret
or
adc
jp
stos
jae
push
mov
push
ret
inc
cmp
mov
inc
adc
add
push
ret
jbe
dec
test
inc
adc
add
cmp
gs
pop
xchg
cwtl
je
cs
add
and
imul
loope
jbe
fmuls
cmpsl
or
mov
inc
mov
mov
into
inc
ja
sbb
or
test
outsl
or
xor
adc
shll
mov
inc
inc
leave
mov
push
sbb
push
pop
shll
xchg
pushf
add
mov
dec
sub
fildll
scas
jmp
dec
shlb
stc
sti
popf
add
nop
call
xor
fwait
shrl
mov
stos
pushl
ds
aad
es
and
out
clc
mov
mov
es
popf
loopne
rcr
sub
add
repnz
into
jl
push
xor
add
cld
mov
sbb
lret
ret
jecxz
or
insl
mov
arpl
gs
and
out
add
mov
andl
xlat
out
mull
imul
fnsave
out
xchg
adc
enter
mov
mov
repnz
cltd
mov
xchg
fdivl
xlat
out
mov
xchg
fadds
vminss
lock
pop
clc
call
rolb
add
imul
mov
cmp
xorb
ljmp
pop
pop
pop
xor
sub
fbld
sub
pop
outsb
inc
ret
jg
fidivrl
insb
in
xchg
or
mov
divl
push
push
lret
xchg
xlat
aas
mov
adcb
fwait
mov
mov
pop
in
lcall
sbb
push
and
in
cmp
pop
dec
cmp
pop
fistl
outsb
sub
adc
vpcomud
btc
pop
push
nop
sarb
inc
push
test
pushf
outsb
push
cmp
mov
xchg
cmp
or
test
cli
test
std
lods
out
cmpsb
pop
jnp
xchg
rcr
lods
sbb
xchg
fisubrs
leave
pop
lahf
mov
mov
in
mov
inc
je
lods
mov
cmp
scas
dec
lahf
jno
imul
or
adcb
xchg
shll
outsb
lods
jge
insb
in
sbb
mov
sub
and
mov
and
xchg
push
push
fmul
dec
sub
out
stos
jbe
repz
and
divb
outsl
push
ret
ds
movsl
adc
xchg
addr16
ss
lea
sbbl
sbb
cmpsl
orb
test
pop
mov
sub
ret
add
inc
pop
into
pop
shr
inc
sbb
sbb
inc
in
cmp
inc
sub
lock
and
dec
lock
sti
insl
decl
cmp
adc
ljmp
xlat
aad
idivl
dec
mov
jb
mov
sarl
js
or
repnz
fbld
movsl
negl
dec
imul
mov
aaa
mov
inc
decb
adc
sbb
pop
mov
pop
sub
stc
xlat
ret
mov
aam
loop
ss
adc
jmp
shl
shr
lret
clc
mov
jge
cwtl
push
loop
out
push
lret
inc
imul
push
pop
orb
je
std
adc
out
or
cltd
inc
lea
data16
mov
xchg
loopne
insb
mov
sub
sbb
inc
push
push
es
clc
loope
jo
pop
lods
push
sahf
dec
inc
sbb
pushf
adc
stos
inc
cmp
cwtl
cmp
inc
sbb
cs
fsubl
sub
in
mov
push
push
enter
nop
push
mov
mov
pop
and
inc
xor
les
subl
mov
insb
push
test
and
pop
or
lcall
outsl
dec
fsts
les
xchg
mov
push
daa
add
pop
adc
loope
dec
cmp
or
lock
jne
int
ret
pushf
rol
ror
inc
xchg
rolb
sbb
nop
fmull
bound
adc
inc
gs
fcoms
push
pop
fwait
mov
call
adc
jno
js
fucomp
aam
push
loopne
shlb
gs
push
daa
loopne
icebp
mov
aam
adc
jge
imul
or
mov
dec
mov
lods
or
mov
ror
cmp
cmp
pop
in
adc
test
imul
out
pop
jp
gs
repz
fidivrl
pop
pushf
cltd
and
dec
adc
bnd
pop
jg
ds
fldl
pop
xor
js
jg
add
inc
mov
sbb
mov
xchg
int3
inc
dec
mov
push
mov
sub
dec
xchg
lcall
int
push
es
in
xchg
mov
sbb
into
fldenv
mov
mov
and
sahf
icebp
mov
push
inc
dec
in
or
mov
xor
sbb
cmp
ret
aad
push
mov
cmc
push
lock
aad
or
add
inc
adc
mov
test
xchg
jmp
div
popa
arpl
into
fwait
ret
cmp
lds
dec
mov
sar
sub
addr16
push
js
mov
inc
sahf
adc
xchg
adc
call
or
push
sub
scas
mov
push
repnz
pop
add
mov
into
imul
push
stos
mov
loope
out
out
movsl
push
adc
cmp
mov
mov
inc
int3
lret
mov
iret
es
push
or
pop
pop
mov
cmp
inc
leave
aas
add
stos
xor
mov
stc
mov
dec
and
call
add
in
push
fwait
sub
jg
push
jbe
adc
mov
movsb
xor
fnstenv
int3
add
dec
sbb
mov
pop
aaa
jle
enter
adc
insb
pop
inc
jb
xor
in
shll
mov
jmp
cld
out
aas
loopne
sbb
lret
pop
mov
and
xor
pop
jnp
mov
lock
mov
cmpsb
ss
lret
outsl
jnp
scas
jmp
out
daa
inc
test
imul
cs
mull
iret
ja
push
inc
lds
popf
cli
mov
cwtl
push
mov
mov
test
or
xor
es
lods
lock
mov
dec
in
fwait
sbb
shl
xchg
iret
jl
jno
fs
movsb
lods
in
push
sub
ljmp
xadd
inc
add
sub
into
pop
out
scas
or
cmp
xchg
push
out
mov
push
ja
in
popa
iret
outsl
outsl
jl
in
xor
lods
mov
cmc
loope
inc
aaa
jno
lahf
leave
test
or
adc
inc
pop
ss
or
gs
xchg
and
fisttps
cmc
je
lret
or
sub
push
xor
and
dec
orl
pop
xchg
xchg
xor
jne
push
push
cltd
cmp
xor
enter
xchg
out
repnz
dec
push
dec
lea
aaa
div
sub
cld
repnz
iret
add
js
cmpsl
orl
cmp
cmp
pusha
stos
lcall
xchg
xchg
push
or
mov
mov
cs
xchg
insb
mul
and
jp
fldl
xor
xor
test
sarb
mov
ja
add
xchg
jae
rcll
andb
xchg
jmp
daa
lods
outsb
fs
mov
repz
hlt
mov
xchg
stos
aad
test
out
mov
push
sbb
push
call
push
dec
pop
xchg
xchg
sub
push
je
push
leave
lret
cmp
mov
popf
aam
jne
jo
and
fistps
sbb
imul
out
fwait
dec
xor
rcrb
lcall
dec
call
dec
sti
ljmp
mov
pop
fs
jo
pop
rcrb
sbb
out
pop
ret
xchg
mov
leave
dec
dec
xchg
psrld
or
cld
aaa
sub
out
div
or
fldt
dec
mov
sub
xchg
in
add
xor
add
and
nop
repz
adc
xchg
sub
lcall
push
mov
pop
xchg
push
roll
pop
dec
loope
emms
push
push
mov
call
add
add
push
cwtl
andb
outsl
mov
clc
cmc
enter
inc
and
xlat
jnp
mov
ja
xchg
pushf
imul
test
pop
jge
lds
jbe
or
inc
leave
cmpsl
clc
or
mov
mov
push
and
cmpsl
popa
dec
lahf
mov
pusha
mov
mov
imul
imul
hlt
popa
cwtl
push
lret
mov
jmp
adc
mov
xor
and
sbb
pushf
cmp
mov
jmp
mov
mov
xlat
add
dec
adc
test
cmp
repz
lea
jle
push
jle
sbb
cmp
fsubr
cmc
mov
lcall
mov
rcll
and
nop
xor
jg
pop
lcall
popf
xor
aas
mov
xor
xchg
fs
outsl
cltd
aas
dec
les
push
cmpsl
pop
dec
daa
sbb
and
mov
adc
xchg
push
mov
lock
dec
dec
repnz
and
pop
push
cmp
sub
icebp
pop
cli
xor
sub
sbb
adc
inc
add
mov
jmp
idivl
jne
mov
daa
mov
enter
outsl
fists
inc
jbe
shll
xchg
ljmp
xor
pop
mov
fmuls
ss
jle
push
and
pop
or
out
fidivs
inc
jns
mov
mov
addb
lds
pop
push
fwait
mov
mov
jnp
movsl
mov
notb
mov
mov
out
cli
mov
add
std
xchg
jne
pushf
adc
dec
ja
jbe
dec
lods
test
sub
sub
hlt
xchg
insl
jl
sbb
and
sbb
test
xchg
adc
rclb
xor
mov
loopne
fildll
ds
lret
lret
jae
negb
sbb
add
inc
jo
aas
into
mov
mov
test
sbb
jecxz
sbb
in
cld
push
in
iret
adc
or
repz
inc
mov
lret
arpl
lods
out
mov
cmp
push
jmp
cltd
ret
cmp
xchg
fidivl
add
jl
mov
fistl
xchg
and
sbb
mov
lods
insl
pop
inc
lea
lods
sub
mov
pusha
daa
mov
loopne
xchg
stc
push
cli
icebp
pushf
dec
addb
push
daa
sbb
pop
sarb
adc
insl
and
mov
fists
les
vmwrite
stos
daa
pop
and
fwait
call
jmp
pop
js
jb
mov
in
xor
xchg
enter
or
jns
mov
dec
add
andl
pop
cmpb
pop
or
fucomip
add
inc
addr16
sbb
push
mov
ljmp
jge
mov
pop
pop
out
fs
lahf
sti
adc
fldl
push
rcl
add
mov
or
lret
dec
in
lods
jne
iret
pop
lahf
repz
add
inc
mov
mov
ret
out
xchg
xchg
test
push
in
push
mov
roll
fcomip
out
and
fwait
mov
out
xor
mov
call
add
mov
jge
push
jo
in
add
cltd
sahf
dec
ss
std
and
loop
ret
in
lret
mov
jmp
jmp
mov
pop
jno
test
add
test
cmpsl
inc
das
or
les
adc
scas
and
add
lds
jl
xor
adc
lock
push
addr16
stos
sub
push
orl
popf
ja
in
cli
pop
push
lock
mov
test
sti
jge
aaa
sbb
adc
and
adc
fimuls
bound
pop
jge
mov
test
and
xlat
push
mov
inc
aas
repnz
in
mov
ret
sbb
add
inc
loope
dec
data16
jmp
dec
inc
lret
pop
push
xor
xchg
lea
sub
pop
imul
push
aad
add
js
jo
insb
inc
cmpsb
mov
outsb
aas
push
mov
adc
lcall
fdivs
inc
mov
bound
or
gs
push
xchg
into
cmp
pop
test
mov
inc
leave
jns
cmpsb
adc
movsb
stos
stos
jmp
sbb
in
sbb
and
mov
gs
lds
push
arpl
int
adc
popf
push
adc
out
cmp
imul
or
cmp
push
jmp
push
push
dec
enter
movsl
mov
xchg
or
push
jp
std
cmp
aaa
xchg
loop
mov
lods
mov
repnz
or
jecxz
aas
cmp
sub
dec
jmp
mov
jle
jl
ds
xor
sahf
aaa
scas
xlat
mov
inc
nop
into
rcrl
push
cmp
fs
ret
sub
or
jle
or
fstpl
pop
enter
or
ja
pop
jmp
sbb
dec
repnz
dec
lahf
aad
mov
inc
jecxz
mov
inc
dec
push
fisubrl
sub
loopne
es
lods
lcall
jp
pusha
scas
into
pop
loopne
push
scas
xlat
movsb
fildl
mov
and
adc
sub
lods
stos
push
mov
test
xlat
jle
fwait
hlt
mov
movsl
adc
cmp
sub
lret
sahf
add
shlb
dec
sbbl
leave
lahf
sbbb
andl
dec
pop
xor
jp
insb
mov
shl
push
mov
mov
jno
cmp
pop
sahf
pop
mov
push
stos
or
jb
jnp
lock
pop
xlat
insb
mov
push
ds
push
gs
jns
lret
add
sub
mov
js
aaa
inc
stos
outsb
jne
cmp
ds
or
sbb
or
loopne
aad
inc
lcall
mov
sub
cltd
pop
shll
loopne
mov
loop
divl
adc
cmp
sub
pop
mov
mov
jns
fucom
ss
int
pop
cli
xchg
cmp
add
push
lgdtl
cld
mov
or
sahf
shlb
popa
sbb
add
dec
fwait
push
lods
adc
mov
int3
insl
shll
ja
cmp
neg
mov
imul
fs
inc
addr16
inc
jbe
xchg
loope
pop
repnz
sub
mov
push
and
insl
add
pop
jle
and
es
bound
test
dec
mov
cltd
lcall
bndldx
pop
ret
outsl
dec
pop
xchg
mov
test
dec
cmpl
fisttps
popa
fcmovbe
hlt
repnz
and
dec
loop
and
and
mov
and
mov
aaa
add
jae
mov
insb
adc
cld
mov
or
lret
test
mov
sar
mov
iret
bound
je
adc
dec
cmp
push
mov
push
inc
test
aas
pop
inc
decl
call
lods
jae
int
test
rolb
push
xor
mov
ds
push
or
js
cmpsl
inc
data16
fwait
loope
jmp
mov
and
mov
or
cmp
rorl
dec
jo,pt
loop
aad
jp
adc
repz
sbb
jne
mov
and
pop
lods
dec
sbb
in
or
ret
adc
out
mov
es
adc
pop
and
cmpsl
xor
imul
adc
sub
fs
cmp
ret
cmp
fwait
jb
jbe
out
bswap
dec
int3
aam
fildll
push
test
adc
jg
lods
enter
and
cmp
mov
mov
dec
stc
cs
je
sti
iret
or
mov
outsl
ret
jne
sub
dec
rcr
mov
ja
jmp
adc
xor
jl
sub
movsl
pop
dec
mov
test
and
outsl
in
xchg
mov
shrb
js
stos
cmp
dec
jmp
xchg
ljmp
sbb
mov
ficompl
and
rolb
sarb
sbb
inc
test
adc
xchg
orl
and
mov
mov
or
sbb
stos
fsubrs
push
mov
fs
lds
xlat
arpl
int3
push
stos
add
aam
divl
popa
addr16
imul
pop
mov
cmc
sub
xor
inc
pop
out
xchg
push
cmpsb
das
cmp
stc
jns
mov
or
dec
xchg
adc
lods
sub
imul
sub
adc
cltd
shll
mov
cmp
dec
aam
aaa
into
stc
psllq
lret
xor
movsb
mov
pop
lcall
pushf
test
std
or
and
pushl
sbb
scas
jo
test
mov
dec
sbb
lcall
sub
push
pop
movsb
jnp
loope
push
add
aas
hlt
jno
fstpt
pop
mov
fbld
pop
sbb
stos
xchg
bound
cmp
mov
icebp
sub
bnd
inc
arpl
fisubl
ss
mov
and
inc
stc
xor
retw
fcompl
or
ret
jae
cmpb
cmp
jmp
pop
jns
push
stos
and
inc
mov
adc
rcrl
add
push
mov
jg
sbb
jge
jecxz
push
and
xchg
fisttpll
inc
lcall
ljmp
scas
je
jl
mov
test
xchg
xor
xchg
fidivs
jbe
push
push
das
mov
xor
stc
in
adc
pop
loope
bound
repz
cmp
xlat
pop
lret
mov
jo
gs
imul
aaa
pop
push
nop
test
or
cmpsl
mov
push
add
mov
xor
leave
repnz
fdiv
fcoms
sbb
push
push
pop
sbbb
add
vandnps
inc
push
pop
cmp
out
push
pusha
repnz
cmpb
sbb
sbb
int
nop
push
fprem1
push
sbb
scas
lods
test
pop
mov
jge
pop
and
int3
mov
push
xchg
lcall
push
push
in
fimuls
xchg
adc
push
cmpsb
dec
lret
arpl
mov
mov
add
call
xorl
push
out
push
or
dec
js
push
out
sti
lret
dec
add
push
xchg
sar
shrl
shll
pop
adc
cmp
arpl
and
cmp
andl
scas
dec
call
cmp
dec
dec
or
add
sti
mov
pop
xchg
cmpsl
vpsubq
fildll
pop
test
jl,pt
hlt
dec
fwait
popa
inc
push
lret
cwtl
loope
hlt
fcomps
in
pop
fildl
pushf
pushl
and
fstps
add
adc
jo
or
adc
inc
rol
push
jp
lea
mov
lods
das
jl
dec
push
or
ret
enter
shr
imul
mov
push
sbb
outsl
or
mov
or
and
mov
lods
mov
mov
jne
cmpsl
mov
rcrb
inc
insl
call
xor
fprem1
jp
ss
les
sar
pusha
and
rcll
jmp
jnp
sbb
adc
das
or
insl
iret
jle
mov
arpl
mov
fs
fwait
sti
xor
pop
in
sub
xor
arpl
adc
sub
das
cmc
movsb
fldt
mov
inc
rol
fadds
xchg
pusha
mov
scas
jmp
and
inc
iret
pop
addr16
xchg
out
std
nop
sub
mov
push
jae
mov
jmp
stos
mov
jne
mov
jp
mov
std
pushf
cmp
ss
sbb
pop
loopne
stos
pop
rcrl
nop
add
sarl
jo
cs
sub
inc
pop
mov
and
mov
push
leave
movsb
sub
inc
std
pop
xchg
mov
cld
adc
adcl
mov
xchg
cmp
cmp
cmp
shll
sub
jbe
rcr
insl
xchg
or
popa
test
xlat
fucomp
test
fisttpl
stos
cmc
out
fsubr
insl
in
sbb
cmpsb
push
loopne
out
leave
rcrb
xchg
sub
and
xchg
push
icebp
out
sbb
pop
push
adc
pop
dec
mov
rcr
jp
movsl
lock
xchg
mov
mov
mov
fisttpll
mov
loop
daa
mov
dec
lods
xchg
mov
sub
das
out
shl
test
or
sub
mov
fdivr
gs
add
insb
mov
xlat
ja
icebp
pop
fxtract
bound
aad
div
inc
sbb
xchg
adc
inc
push
adc
xchg
or
and
inc
add
stos
test
adc
add
and
cmp
imul
out
pop
mov
repz
jns
insl
lahf
mov
jns
mov
in
mov
pop
mov
jnp
xor
cli
xchg
enter
sbb
adc
data16
fs
bound
jl
cmp
pop
jmp
in
ss
stc
mov
cld
dec
xchg
faddl
add
adc
jns
cmp
pop
dec
xor
sti
inc
or
aam
adc
adc
pop
pop
xchg
mov
fisttpl
mov
insb
into
test
dec
lret
sbb
pop
out
sub
bound
inc
sti
mov
xor
andb
jg
movb
adc
lret
add
adc
movsl
jg
cltd
dec
or
mov
jg
repnz
xor
fistpll
fsubrs
test
ss
or
jl
add
mov
mov
test
xlat
xor
mov
popf
ss
cmp
mov
or
std
fnstcw
rcrb
inc
mov
lret
nop
mov
sub
xor
iret
cmp
lods
int
push
int3
adc
mov
adc
lods
out
loopne
enter
pop
xchg
or
xlat
das
xlat
out
js
jbe
jl
out
je
popf
push
sbb
scas
xchg
jnp
add
adc
push
imul
xor
ss
lret
inc
xor
add
xor
scas
scas
sbb
pusha
jne
inc
es
fwait
xor
stc
fsubr
fdivrs
jmp
pop
icebp
cmp
stc
adc
jae
mov
sbb
icebp
or
frstor
cld
cmp
push
add
lds
mov
pop
test
dec
divl
aaa
roll
mov
test
mov
fsts
push
mov
lock
inc
adc
es
jp
or
push
xor
cmp
xchg
ret
cmp
sub
jbe
adcb
aas
hlt
xor
shrl
inc
push
into
jnp
incl
mov
imul
push
ror
sub
nop
or
and
js
sbb
pusha
sub
rcrb
fimull
popa
lahf
inc
mov
pop
push
dec
push
xchg
dec
and
cmp
xchg
add
das
xor
das
mov
std
lock
je
add
mov
mov
pusha
or
xchg
mov
rolb
dec
ret
test
push
out
adc
lods
les
pop
or
cmpsb
lods
jmp
and
mov
ljmp
mov
ret
push
sbb
pop
mov
sbb
jmp
movsb
mov
insb
pop
fidivrl
jb
and
mov
add
insl
mov
ds
fiadds
jno
or
inc
pop
orl
shrl
ss
das
test
dec
cmpl
adc
in
add
jnp
rcrl
cmpb
in
inc
jl
iret
fistl
inc
mov
pop
mov
fsubl
pop
mov
int
pop
mov
jle
mov
lds
cmpsl
outsb
shlb
in
loope
push
mov
sub
adc
aad
daa
sbb
das
add
cmp
add
jge
into
add
or
outsl
and
push
dec
test
fs
clc
cmc
dec
pop
or
sbb
inc
jo
push
adc
enter
nop
gs
sbb
cmc
mov
pop
subl
lcall
fstp
mov
jge
ret
cmpsb
inc
dec
xchg
sbb
jo
dec
sti
fs
lea
call
scas
gs
and
push
imull
and
mov
and
fstl
dec
adc
xor
adc
push
xchg
push
cmpsb
imul
xchg
and
sub
sbb
jecxz
test
push
insl
push
fsubs
lret
sbb
or
cmp
sub
xchg
cli
test
nop
pop
bound
cmp
call
cmpsb
std
sub
scas
mov
pop
lods
bound
pop
in
jg
cmp
sbb
jae
jae
in
mov
dec
cmpsl
inc
jbe
xor
sti
and
rorb
xchg
pushf
add
xorl
ja
bound
pop
inc
push
aad
mov
xor
jp
sbb
andl
cmp
inc
pusha
cs
repnz
mov
test
dec
cltd
push
lret
mov
daa
dec
ja
inc
mov
xchg
sbb
mov
sub
neg
xor
mov
lea
or
or
sarl
jae
test
xor
dec
push
mov
fnstcw
incb
jmp
mov
jne
lds
cwtl
rcr
lods
cmpsb
repnz
scas
arpl
cmp
sub
mov
pop
mov
shr
and
mov
and
jge
nop
xor
add
popa
dec
or
add
inc
lods
push
or
sti
enter
jge
and
add
sub
rcll
rcl
mov
mov
cmc
lock
adc
xchg
xor
stos
or
repz
xchg
pop
out
mov
ss
cmp
pop
inc
test
div
mov
or
or
fmuls
mov
adc
repz
add
daa
in
outsl
scas
xor
aad
pop
push
adc
or
ss
cmp
lahf
jbe
std
or
hlt
daa
cmp
test
sub
lds
cld
rcl
fucomp
fsubl
int3
adc
mov
fsts
cmp
aam
pushf
mov
insl
xchg
rcll
dec
or
mov
inc
aas
popf
or
pushf
cmp
adc
lcall
jg
xlat
push
jnp
mov
pop
std
mov
push
je
pop
mov
cmp
xor
xchg
in
cmp
add
mov
mov
ss
stc
or
aaa
mov
or
lcall
inc
add
iret
gs
adc
adc
lods
mov
and
sarl
data16
loopne
adcb
xor
mov
sbb
js
xchg
in
and
push
add
lret
shrl
push
pop
push
cmp
push
not
mov
push
xchg
push
rcrb
pusha
aaa
jns
adc
add
shlb
clc
xor
xor
xor
lahf
rcrb
lret
loop
flds
outsb
cmp
ja
fs
scas
rcll
pop
mov
mov
clc
sti
adc
add
emms
fiadds
sub
lret
out
jno
push
popf
outsb
mov
addb
enter
push
jg
ret
push
jns
jnp
jnp
lea
iret
bound
in
jle
push
cmp
out
push
sub
sbb
or
testb
lods
adc
pusha
icebp
lds
rcrb
push
ljmp
mov
loope
push
jae
popa
pop
movsl
push
xlat
gs
and
xchg
sbb
dec
int3
lds
or
push
js
aam
adc
inc
cmpsb
mov
and
inc
call
mov
inc
sti
add
push
test
mov
jb
not
loop
cmp
out
sbb
mov
imul
xchg
mov
sbb
cltd
aam
pusha
into
hlt
int
iret
cmp
jge
mov
pop
push
xchg
leave
mov
mov
pop
cltd
add
sbb
loopne
jnp
pop
inc
push
adc
jno
or
jmp
sbb
add
sub
sahf
mov
rcl
xor
dec
jo
es
xor
cmp
pop
mov
and
int
sub
bound
xor
jae
sti
cmp
cmp
cs
cwtl
cmp
stos
mov
dec
adc
mov
and
loopne
pop
jle
dec
jb
cld
or
shl
call
xor
jnp
add
inc
pop
adc
loop
jl
mov
ss
pop
in
in
addr16
rorb
cwtl
pop
subl
inc
and
jg
cmp
push
xor
pop
mov
hlt
aam
jo
data16
xchg
and
xchg
dec
fadds
mov
mov
cmp
mov
cld
sub
ja
test
lcall
fsubrp
ljmp
sub
xor
fdivl
and
push
cltd
jg
dec
xor
jg
mov
sub
fisttps
stos
aam
mov
cmp
out
jno
jg
xchg
cmp
scas
scas
out
adcb
movsl
push
mov
adc
cld
adc
sbb
inc
ljmp
push
xor
xor
mov
push
cli
das
mov
icebp
xor
mov
test
mov
in
push
push
cmp
nop
lock
sub
pop
push
in
lret
push
xlat
sub
subb
ljmpw
outsb
aaa
icebp
mov
inc
cltd
fnsave
xchg
push
or
scas
inc
leave
movsl
scas
stc
mov
add
sub
mov
in
test
comiss
pop
ret
out
jnp
adc
mov
and
cmpsl
and
jmp
addr16
mov
inc
mov
mov
cmpsb
mov
loop
push
fisubrs
data16
js
test
xchg
lahf
rclb
orb
and
pop
cmp
inc
push
pop
push
sub
dec
mov
in
adc
sub
scas
test
mov
test
and
lods
sbb
lret
js
call
hlt
test
sbb
sbb
add
jl
ds
icebp
hlt
fs
hlt
inc
sbb
les
mov
push
test
jb
pop
dec
lret
loopne
dec
cmp
mov
int
mov
pusha
cmp
sbb
dec
xor
mov
pop
es
sti
stos
xchg
inc
in
xchg
sahf
mov
xchg
jmp
or
mov
mov
in
fnsave
in
jns
xchg
push
int
mov
les
insb
aas
or
cmpsl
cmp
fbld
pushf
imul
js
or
filds
and
mov
nop
subl
xchg
shlb
mov
and
cmpl
sub
cmp
fnstcw
aas
inc
push
out
push
fildl
lea
mov
repnz
testb
mov
add
loopne
daa
out
lods
shrl
push
outsb
stc
cmovnp
or
adc
shlb
mov
add
fisubs
pushf
aam
lcall
jbe
xorl
push
test
dec
cmp
jbe
jge
lcall
fcmovnb
jno
mov
cmpsl
and
ret
jne
push
push
rcrl
mov
cmpsl
movsl
pop
jmp
sbb
pop
out
cmp
int
jno
inc
movsb
xchg
mov
jecxz
mov
mov
push
daa
and
inc
sbb
aas
push
lock
mov
jecxz
inc
dec
repnz
ds
xor
in
or
lcall
call
or
sbb
sub
mov
loop
insl
stos
fwait
ds
testb
test
sarb
jne
jl
adc
xchg
leave
xchg
jecxz
jo
jbe
mov
cltd
xchg
jno
cmp
add
into
hlt
mov
out
dec
pop
jns
aad
inc
in
cmpsl
mov
adc
or
sbb
loopne
inc
and
pop
data16
gs
aad
inc
xor
add
imul
imul
push
fs
shlb
decb
mov
cmpsb
mov
call
imul
loope
mov
xor
dec
fcoms
gs
clc
xor
or
sahf
jge
lods
into
addr16
cmp
mov
sub
les
fadds
ret
jg
lods
lods
push
fnstcw
mov
sub
inc
aam
fisubs
out
shlb
movsb
repz
adc
mov
daa
idivl
scas
jmp
ljmp
negb
call
mov
or
lea
les
xor
out
shrb
dec
jmp
sahf
lea
mov
lds
sub
in
pop
int
ja
push
add
push
adc
aam
out
inc
push
xchg
dec
sub
icebp
xchg
inc
dec
mov
pop
xchg
push
scas
mov
or
pop
dec
gs
imull
adc
pop
add
adc
cmp
cwtl
jno
jns
dec
inc
ja
pop
out
mov
xor
into
repnz
pop
insl
add
sbb
sahf
cld
data16
arpl
xor
ja
mov
fwait
mov
enter
js
cld
xchg
cmc
cs
fnsave
xor
push
push
out
mov
cwtl
jge
mov
pop
leave
das
xchg
inc
mov
aam
add
push
adc
jmp
fidivrs
push
lret
sti
sub
lods
xchg
aaa
xor
and
cmp
into
inc
test
testb
dec
fldenv
cmp
mov
cwtl
in
cltd
and
push
stc
push
adc
inc
sbb
or
loopne
sub
and
test
pop
cli
xchg
lds
pop
addr16
stos
dec
fsts
testb
push
cmpsl
fmulp
int
jne
mov
scas
cli
std
sbb
add
push
sub
push
jne
dec
out
sbb
dec
mov
mov
xchg
pop
mov
and
jne
add
lret
imul
outsl
test
dec
jmp
adc
cmp
xor
hlt
cld
pop
and
jb
or
test
imul
and
ss
and
mov
std
and
sbb
mov
inc
adc
shrb
daa
xchg
xor
pusha
pop
jae
or
pop
mov
cmp
out
cld
jmp
fnsave
adc
mov
nop
mulb
mov
loopne
add
stos
addr16
loopne,pn
cmp
jmp
sub
fsubr
in
adc
sub
or
mov
idivl
aam
lret
inc
stos
mov
mov
xchg
data16
bound
dec
ja
add
gs
or
push
insl
pusha
mov
and
ljmp
bound
repnz
xchg
iret
test
xor
cmp
mov
jg
add
jae
inc
jae
jnp
inc
pop
repz
add
sahf
scas
adc
lea
inc
mov
cmc
adc
sub
icebp
add
mov
gs
or
icebp
xchg
or
stc
mov
pop
cmp
mov
cmp
rorb
add
aas
lods
jmp
ds
xor
push
add
cmc
test
mov
loop
loop
pusha
pop
mov
outsl
lret
rcrl
jmp
mov
in
rcr
mov
push
lea
ret
nop
dec
test
addr16
scas
outsb
lods
pop
bound
test
xor
repnz
faddl
mov
js
or
and
lret
sbb
jmp
mov
loope
fildl
or
inc
mov
jp
loope
mov
mov
xchg
cmp
out
dec
xchg
add
sahf
js
in
add
sub
add
cmc
sahf
nop
cli
test
or
dec
and
pusha
rcrb
mov
sbb
shlb
sbb
popa
lds
cmp
and
mov
arpl
or
movb
cld
mov
fldln2
mov
popf
jb
jno
pop
push
add
inc
or
sub
push
mov
idivb
and
fsubs
mov
adc
inc
push
fnstsw
pop
xchg
repnz
aam
add
xchg
add
sub
and
push
aaa
inc
push
mov
sub
movsl
fs
xchg
lahf
xchg
movsb
daa
fs
adc
cli
adc
mov
or
fs
lcall
jo
or
jns
stos
sbb
jl
lret
mov
mov
cmc
ds
or
sar
stos
jecxz
add
pop
adc
push
jno
iret
inc
add
dec
adc
aad
in
pop
test
or
icebp
jae
jl
enter
mul
mov
scas
lahf
xor
adc
scas
mov
pusha
pushf
divl
push
jge
xor
jae
pop
xchg
out
and
mov
addl
dec
sbb
xchg
insb
mov
call
or
push
ret
repz
rcr
lret
push
ret
andb
movsb
pushf
daa
cmp
mov
adc
mov
mulb
xchg
add
cmp
lea
mov
leave
dec
and
cli
fdiv
sbb
dec
js
jle
hlt
decl
pusha
out
dec
cmp
sub
inc
out
adc
aaa
jg
dec
aaa
or
push
out
and
test
lods
adc
aad
jbe
jae
mov
andb
cmp
push
xlat
dec
test
lea
inc
pop
jl
jnp
loope
iret
xchg
and
mov
xchg
stos
outsb
mov
es
jno
leave
jl
adc
xor
adc
in
pop
aas
and
jl
mov
xchg
cmp
pop
mov
or
pop
inc
hlt
mov
and
iret
inc
jge
pop
lahf
add
push
lea
cmpsl
pop
dec
fs
xor
pop
test
and
rorb
mov
add
out
popf
scas
push
xlat
push
dec
jp
xor
int3
inc
lahf
sbb
sub
mov
jp
sbb
mov
jecxz
dec
out
outsb
mov
inc
shrb
movsl
aam
push
mov
mov
jp
or
dec
push
or
add
and
push
jl
pop
cld
sub
dec
push
out
repz
bound
outsb
pop
dec
imul
into
xchg
aad
push
bnd
or
mov
f2xm1
and
pusha
dec
inc
roll
adc
loop
adc
sbb
in
push
aad
push
mov
loope
or
bound
pop
ret
lock
add
mulb
cmp
inc
push
mov
ret
push
fyl2xp1
mov
int
pop
mov
sbb
or
mov
fistpll
insb
outsl
mov
lods
hlt
lea
mov
lcall
icebp
mov
mov
outsl
movsl
jle
mov
sbb
outsb
mov
or
scas
xchg
cld
iret
lret
adc
add
repz
mov
bound
xorl
pop
and
imul
sbb
push
loope
hlt
xor
xchg
add
or
js
cld
stc
ss
sahf
dec
rolb
adc
xchg
mov
sbb
bound
jo
and
out
rorb
xchg
dec
fs
push
dec
pop
movlps
fcoms
xor
mov
mov
insb
pop
xchg
loope
jne
shrl
cmc
cwtl
jg
push
xor
lcall
sahf
mov
les
insb
sahf
cmp
sbb
js
pusha
lods
mov
inc
sub
loopne
test
push
fsubrs
adc
xchg
jnp
sub
clc
mov
test
xchg
enter
xchg
loopne
fcoml
dec
test
shl
arpl
imul
fisttps
dec
cmpl
or
stos
push
mov
xchg
int3
jnp
xchg
sbb
xlat
push
fists
pop
sub
xchg
sbb
pop
add
leave
mov
hlt
js
lods
sahf
cmc
jmp
push
int
loope
ljmp
es
dec
sbb
pop
inc
das
xchg
in
inc
push
xchg
pop
mov
xchg
mov
stos
dec
pop
inc
out
repz
mov
xchg
stc
mov
mov
sub
fistpll
mov
mov
pop
scas
aas
outsl
lds
dec
jmp
fisubrl
aad
and
push
lds
fs
pop
mov
mov
sbb
mov
push
mov
in
mov
addr16
adc
cmp
stos
mov
pusha
in
cwtl
ljmp
push
sub
mov
in
mov
adc
adc
test
adc
ss
ret
mov
test
push
lahf
icebp
movsl
frstor
pop
cmp
push
jne
movsl
jne
pusha
rolb
fimuls
xchg
subl
arpl
and
sub
ds
aam
or
mull
dec
or
or
in
aas
inc
js
adc
sub
dec
cmp
loopnew
push
add
dec
fldenv
jb
jle
mov
mov
pop
stos
and
leave
arpl
dec
xchg
pop
loop
in
or
pop
scas
pushf
or
jl
cltd
in
pop
sub
lds
mov
push
into
inc
mov
fildl
xor
icebp
pusha
dec
xchg
adc
int
nop
push
jno
mov
xor
stc
dec
xor
inc
loopne
jecxz
movnti
lahf
pop
rclb
sbb
and
out
push
lock
std
nop
or
push
push
mov
cltd
es
cwtl
sub
sbb
push
hlt
or
pop
mov
pop
ret
mov
jo
movsl
fmull
push
into
sub
xchg
jmp
ds
pop
rcrb
and
sub
mov
push
xchg
outsb
dec
inc
sub
popf
sbb
data16
loop
in
int3
jp
call
aaa
mov
lds
je
or
xorl
ja
push
and
inc
jne
je
das
aaa
sub
ljmp
fdivrs
or
add
or
push
fdivl
inc
pop
push
outsl
cs
pop
push
inc
pop
mov
mov
mov
popf
aad
loope
or
aaa
pop
or
scas
mov
inc
repnz
into
xor
sub
ds
pop
mov
insl
rorl
sbbl
mov
and
sub
push
mov
jle
jle
mov
pop
pavgb
dec
xchg
rcl
into
ror
dec
mov
jo
xchg
and
or
xchg
outsl
scas
xlat
mov
add
jmp
sbb
test
dec
add
sbb
push
imul
pop
pop
or
nop
dec
ljmp
fstl
sbb
pushl
lods
jl
mov
out
sarl
xor
adc
and
xchg
flds
daa
xor
in
enter
mov
mov
xchg
mov
dec
xchg
cwtl
mov
mov
into
push
add
aaa
rorb
call
fbld
test
inc
repz
sti
inc
daa
les
push
inc
or
ret
pop
rcrl
adcl
arpl
lds
adc
test
cs
imul
mov
sbb
pop
sbb
jecxz
mov
int
sti
lret
sbb
xchg
inc
mov
insb
popa
jne
pop
cmp
mov
add
mov
pop
lea
out
cli
jle
jnp
call
hlt
and
pop
stc
outsb
les
shrl
dec
sbb
mov
cmp
loop
testl
dec
mov
jno
jne
pop
call
in
add
sbbb
sbb
jo
sbb
xor
ret
icebp
sbb
xchg
stos
inc
sbb
lea
fmull
mov
xor
and
adc
push
xor
pop
pop
mov
jbe
shll
lahf
rcrb
dec
in
pop
imul
insb
out
mov
repnz
adc
add
into
sub
fs
push
jns
adc
in
dec
push
jno
add
cmp
incb
mov
dec
mov
jo
in
cmp
or
stos
out
lret
loop
inc
dec
jo
in
mov
popf
fiadds
leave
adc
leave
das
dec
mov
mov
or
push
xlat
mov
decb
xchg
jp
mov
pop
stos
cwtl
cmpsb
xor
ss
gs
shr
dec
jmp
mov
repz
sub
ss
loop
test
or
je
push
mov
mov
pop
jb
insb
incl
andb
cmpl
sub
jnp
pop
jge
cmc
gs
jge
ret
cmc
bound
push
and
and
in
mov
xchg
fwait
pop
stos
loop
xchg
icebp
sbb
xchg
in
nop
jl
mov
adc
imul
push
ret
mov
dec
pop
icebp
imul
add
rorl
xor
inc
xchg
push
xchg
xchg
cld
outsb
xor
test
pushl
jl
loop,pn
orl
fists
dec
ss
loopne
mov
or
push
les
inc
pushf
adcb
int3
mov
daa
mov
test
mov
dec
movsb
cmpsb
imul
or
popa
inc
icebp
in
inc
icebp
jo
jmp
movsb
xchg
stc
add
jno
mov
pop
jbe
cmp
mov
pop
insb
mov
dec
movsb
les
je
jg
fs
data16
mov
popf
int
into
push
dec
pop
or
popf
shrb
xor
push
or
xor
cmp
push
add
push
in
popf
test
popf
adc
dec
cmp
lea
movsl
addb
in
in
inc
push
leave
pop
test
inc
subl
fsave
and
fisttpll
inc
pusha
dec
in
cwtl
je
adc
aas
sbb
mov
xlat
in
dec
dec
shlb
mov
dec
loop
pusha
fstps
mov
mov
mov
popf
xchg
cmc
push
dec
mov
xlat
mov
push
mov
pop
stos
sub
mov
cwtl
sbb
adc
mov
stc
fildll
int3
addb
ds
cmp
sbb
in
lcall
js
sarl
cmp
xchg
lret
and
mov
mov
sbb
popf
inc
jne
pop
stc
xchg
insl
rcll
mov
and
mov
in
sbb
jae
or
cmpsb
subb
ret
dec
or
scas
xchg
inc
cli
test
adc
mov
std
fs
adc
xchg
fcomps
sub
out
ret
popf
fs
test
sub
outsl
xorb
cmpsb
add
mov
push
cmpsb
fsubrl
repnz
lds
je
xor
imul
or
mov
jbe
push
cltd
push
mov
outsl
mov
loopne
loop
sub
pusha
xchg
gs
mov
cmpsl
pop
pop
mov
ret
sub
repnz
mov
shlb
inc
xor
nop
out
in
fsubrs
inc
std
xchg
dec
adc
rcr
jg
push
mov
gs
pop
jge
adc
adcl
push
add
dec
add
xor
les
add
insl
or
outsb
js
fwait
xchg
shr
mov
pop
xchg
lea
mov
push
out
cli
lea
and
addr16
mov
stc
sub
push
adc
cmp
das
pop
jecxz
cmc
dec
negl
mov
push
add
push
sbb
mov
sub
jle
jmp
sbb
out
js
shlb
dec
adc
add
loopne
insb
lods
mov
mov
push
inc
mov
lods
aas
movsl
pushf
mov
insb
pop
mov
mov
xor
hlt
lock
xchg
in
punpckhdq
jle
sub
cwtl
lods
push
js
pop
mov
sub
loope
insl
sbb
cmpl
cmp
mov
pop
sub
sbb
js
repnz
pop
loop
out
cmp
sub
xor
inc
lahf
push
jmp
cld
rolb
std
call
ds
pop
mov
nop
and
push
lret
mov
add
or
sti
movsb
pop
cmp
ret
out
lods
and
xor
cwtl
push
in
ss
inc
add
mov
ret
clc
cmpsl
and
and
adc
test
mov
mov
adc
shlb
iret
mov
mov
xor
test
pop
les
sar
int
jae
and
insb
loopne
mov
or
push
es
adc
xor
and
fdivrs
pop
inc
iret
int
cmp
or
in
mov
arpl
pop
dec
xchg
sbb
push
aam
sarb
loope
jmp
xor
lock
mov
js
inc
cmp
push
add
call
sub
fstpl
imul
mov
adc
aas
push
mov
push
or
pop
aas
test
jbe
int
add
icebp
inc
inc
scas
int3
jle
dec
mov
je
or
jp
mov
mov
mov
cltd
cmp
dec
test
sbb
push
aas
xor
sbb
popa
in
sub
addr16
out
popa
fcmovbe
hlt
dec
div
es
jb
icebp
sahf
data16
pop
mov
dec
push
or
lock
fadd
lods
das
fcoml
stos
or
pop
hlt
loopne
mov
or
lret
inc
dec
inc
jb
jp
nop
jo
mov
adc
mov
aad
sbb
inc
fmull
out
xchg
nop
xor
js
test
repnz
dec
out
test
in
leave
inc
sbb
lcall
xchg
push
jge
enter
shrb
insl
je
test
lret
pop
movsl
push
js
mov
adc
cmp
inc
jmp
jnp
adc
push
ljmp
loope
adc
repnz
shlb
mov
lock
xor
dec
mov
mov
negb
sub
daa
mov
sub
sahf
testl
dec
gs
ror
jp
pop
push
xchg
ret
mov
or
cmp
test
fdivrl
lds
dec
jns
or
or
xor
bound
and
ss
push
mov
cs
pop
jbe
add
cli
inc
mov
in
test
xchg
in
and
cmpsb
stos
repz
repnz
lods
lret
cmp
in
cltd
xchg
and
adc
scas
data16
arpl
inc
bound
add
xchg
sub
loopne
leave
mov
pushf
add
cmc
push
jne
fildl
mov
cmp
dec
popf
aad
xchg
cwtl
test
xchg
out
pop
pushf
dec
shl
lahf
iret
mov
test
mov
or
adc
enter
lret
mov
pop
inc
ja
fisubrl
les
or
gs
cmp
jae
jo
rcrb
cwtl
lock
loope
jg
outsl
sub
dec
xchg
mov
movsl
hlt
sbb
adc
jp
fs
jno
mov
movsb
insl
jmp
add
ljmp
loopne
xchg
loope
popf
mulb
push
fsubrl
gs
jbe
pop
mov
jns
xchg
cmp
scas
js
sbb
fiaddl
aam
mov
fildll
mov
aad
in
mov
mov
jne
aam
sub
es
out
jns
jg
xor
and
nop
mov
pop
out
push
leave
xor
xchg
pop
in
xchg
aaa
mov
jle
fisttpll
imul
aam
mov
mov
add
test
and
stc
sbb
push
arpl
pop
mov
negb
int3
aas
pushf
scas
jbe
subb
test
mov
or
stc
std
ret
or
and
adc
dec
xchg
sub
push
or
jo
iret
xchg
cmc
cli
cs
cltd
xchg
push
and
fisttpl
sbb
push
ror
add
aaa
pop
in
das
pop
mov
mov
xchg
lahf
dec
popf
stos
daa
mov
jnp
in
sub
pushf
and
xchg
cmp
add
mov
ja,pt
or
out
lret
sub
jmp
xlat
imulb
lret
stos
test
sbb
jle
inc
aaa
push
sbb
push
outsl
gs
jns
jbe
push
inc
cs
loope
jnp
out
jg
ficoms
push
inc
int
repz
aad
arpl
cltd
cmpb
insl
lock
shrb
xchg
mov
push
sahf
mov
pushf
push
out
mov
and
dec
fs
and
lds
inc
push
jb
mov
xor
push
xor
sbb
mov
inc
or
sbb
xor
mov
daa
out
sub
mov
jb
push
push
push
cs
mov
push
stc
dec
xor
fsubl
xchg
push
hlt
js
in
fisubrl
popa
sub
pop
loope
push
clc
inc
shll
std
mov
mov
jl
scas
mov
jns
xchg
add
in
pop
out
mov
add
dec
pop
mov
mov
out
in
push
mov
ljmp
mov
adc
loop
add
cld
add
icebp
add
push
sub
pop
mov
and
dec
jns
ss
movsl
mov
leave
sub
sarl
cmp
push
mull
jmp
and
mov
sbb
sbb
inc
pop
enter
mov
sarb
xor
push
jns
js
cwtl
lea
cmp
and
pop
mov
xor
jo
mov
cmp
daa
in
mov
inc
inc
pop
inc
xchg
aas
lea
cltd
mov
xor
cli
sub
gs
sub
and
bound
loopne
push
dec
pop
jbe
nop
int
mov
lock
mov
cmp
dec
roll
mov
in
jp
ds
call
mov
or
int
pop
add
ficoml
mov
lods
adc
xchg
cmpsl
sub
and
fmul
fildll
push
dec
cmp
scas
cmp
pop
cmp
jge
movsb
mov
jmp
pop
loop
cmp
jno
add
das
pop
flds
add
jle
or
pop
xor
and
inc
mov
xor
outsb
pop
ljmp
jl
icebp
std
push
ds
ret
push
pop
mov
fstl
jb
lea
or
mov
popa
call
mov
fxch
mov
ljmp
loopne
call
adc
sti
jb
xchg
loopne
ja
ret
fisubrl
fisubrl
cmc
push
pextrw
add
mov
add
arpl
into
pusha
fsubl
rcl
add
mov
ja
add
mov
addr16
out
enter
mov
xor
jbe
add
arpl
xchg
push
mov
dec
lahf
mov
adc
or
adc
mov
push
lea
cmp
jmp
les
dec
inc
into
in
inc
push
jp
loope
pop
cld
les
xor
mulb
xor
xchg
shr
jle
or
pushf
ljmp
xlat
hlt
mov
call
dec
ret
mov
cmc
repz
xor
adc
add
std
fs
popa
mov
dec
or
cmp
xchg
add
mov
adc
xor
pushf
dec
cmpsb
cmp
aam
nop
jp
dec
push
subb
test
lcall
cmpxchg
jmp
inc
sub
cmp
xor
mov
rcr
inc
xor
iret
fistpll
mov
pusha
push
repz
push
xchg
and
dec
icebp
jo
pusha
xchg
xlat
imul
sub
mov
call
push
mov
dec
jecxz
std
test
stos
and
cmp
jns
mov
xchg
das
push
sahf
movsb
iret
and
into
bound
clc
out
pop
push
jbe
fcompl
lods
cmpsl
enter
loop
and
cs
adcb
sarb
pop
dec
in
movsb
xchg
sub
jo
test
add
aas
add
setge
mov
mov
sbb
int
inc
lahf
enter
in
paddsb
lods
dec
push
lods
in
cld
mov
pusha
cwtl
inc
jmp
jne
add
rclb
xorl
push
ss
out
fstpt
cmpsb
dec
call
loopne
jno
loopne
test
mov
mov
add
adc
stos
or
and
ja
cmpsl
mov
mov
ss
ret
sub
xchg
daa
lock
in
es
push
stos
gs
int
adc
adc
sub
incb
mov
sarb
fs
out
les
adc
pusha
dec
in
push
jp
cmp
sbb
or
mov
insb
loope
mov
push
push
mov
test
inc
add
insb
cmovg
or
inc
xor
dec
leave
push
enter
ret
cli
sahf
stos
ljmp
or
adc
inc
je
mov
aaa
std
shr
test
shrb
xor
or
hlt
adc
pop
divb
mov
or
sarl
adc
dec
es
pop
jecxz
in
xchg
ja
cmpsl
adc
mull
xchg
jl,pn
icebp
in
andl
or
cltd
jae
mov
std
addr16
sbb
test
cltd
dec
in
mov
add
adc
out
les
dec
fwait
inc
mov
xchg
cmp
cwtl
and
int3
push
call
popf
call
or
dec
mov
or
add
and
push
cmc
or
jp
stc
into
xor
stc
addr16
daa
sub
add
inc
push
shl
and
loopne
repz
in
mov
pop
and
orl
outsb
jge
je
loopne
inc
xchg
push
dec
adc
lret
outsl
xor
mov
mov
dec
enter
cmpsb
inc
out
mov
and
inc
mov
cmpsl
shlb
jmp
sbb
push
xchg
sbb
mov
shrl
aas
orb
fsub
mov
mov
xor
add
pusha
shlb
dec
call
push
xchg
lods
or
push
shrb
and
cmc
dec
or
mov
lea
ja
movsl
in
adc
repnz
lret
add
bound
xchg
loop
push
dec
and
and
or
mov
into
cs
inc
jmp
adc
imul
rorb
xchg
cmp
mov
xchg
jge
adc
mov
rorb
inc
xor
in
out
inc
xor
mov
sbbl
fcmovnb
or
add
cld
pop
pop
mov
mov
ds
mov
fcomps
mov
and
sub
loopne
cmc
sbb
js
cs
js
or
mov
scas
es
sub
js
sub
inc
jbe
rolb
or
or
lret
mov
clc
hlt
mov
ljmp
lahf
mov
in
les
stc
dec
cmpsl
lods
insl
dec
jno
stc
fimuls
repz
aas
inc
test
or
jle
lods
cmp
jle
and
stos
js
cld
mov
aas
inc
fs
shll
or
or
pop
ljmp
xchg
scas
stc
dec
stos
fdivs
insb
sbb
push
repnz
sbb
mov
add
pop
aam
call
dec
lds
mov
xchg
imul
xor
fwait
lock
sbb
mov
insl
mov
inc
xchg
pushf
jp
out
fistl
ljmp
out
daa
pop
popf
outsl
cwtl
inc
mov
loopne
lea
cmp
aad
addr16
push
fcmovne
nop
push
push
jbe
in
or
add
sub
pop
mov
lcall
push
push
mov
mov
std
adc
pop
push
or
loop
icebp
pop
xlat
push
mov
dec
loop
dec
popf
inc
and
mov
jno
add
xor
jns
lods
and
or
mov
cmpsl
add
mov
jnp
cmpsb
xchg
xchg
inc
shlb
es
hlt
es
xchg
xchg
jo
nop
sub
push
dec
les
inc
stc
lret
aas
cmpsl
mov
sbb
inc
cmp
test
push
inc
data16
lods
mov
cmp
jne
jle
or
mov
add
lods
jmp
cmc
outsb
mov
inc
push
sub
test
jge
push
rorl
mov
fucomp
mov
pop
push
sbb
subb
loope
jns
and
jae
mov
mov
gs
cld
jl
lret
cmp
mov
fldt
add
mov
out
or
dec
insl
mov
fcomps
dec
iret
jnp
fs
mov
cmp
mov
pop
push
rcrl
repz
test
cwtl
hlt
and
sub
fsubs
gs
outsb
imul
add
rorl
inc
lret
rorl
mov
das
test
xchg
push
pop
popa
cmp
icebp
add
pop
add
push
pop
xlat
cmp
out
fidivrs
dec
sahf
call
jp
pop
xorl
in
push
jp
xor
insb
or
pop
repnz
xchg
test
cmpsl
add
in
add
and
lahf
nop
xchg
sub
jns
stos
jmp
jge
into
mov
push
push
inc
xor
clc
test
dec
mov
aad
mov
sub
ds
adc
cmp
movsb
les
adc
inc
jle
xchg
add
jl
incb
into
cmpsl
xchg
push
add
mov
push
and
or
pop
adc
push
cs
addr16
mov
fwait
xchg
repz
mov
dec
loop
fimull
jl
es
mov
adc
sub
mov
cmp
mov
inc
rcrl
shll
cltd
jnp
lods
pop
int3
data16
out
fs
sub
pop
loopne
out
dec
mov
pop
sub
inc
jno
outsb
shlb
lahf
out
add
cmp
jle
dec
pop
mov
dec
loopne
pusha
jmp
push
push
mov
inc
je
movsl
adc
dec
dec
imul
sub
xor
aam
ds
aad
and
jb
xchg
adc
mov
sub
cltd
jp
add
lock
fstl
pop
je
sbb
fistl
lock
idiv
pushf
fldt
popf
popf
cmp
mov
cmp
jno
pop
mov
mov
mov
add
das
cmp
jle
mov
push
arpl
jno
inc
add
dec
dec
fmuls
sbbl
sbb
cld
add
jmp
xchg
jmp
push
ffreep
pop
lds
fadds
dec
sub
int3
out
dec
int
cli
cmc
mov
adc
cmp
and
leave
push
cmp
mov
ds
rcrl
inc
jno
add
call
pop
sahf
notl
call
aaa
xchg
fistpll
repz
xor
xor
cmp
cmpb
jge
jbe
xlat
xchg
sub
sub
cmp
mov
idiv
pop
test
ja
inc
aad
add
sub
insb
adcl
jg
jp
inc
mov
test
js
test
cmp
nop
test
out
into
jne
test
mov
or
dec
mov
imul
push
push
cmp
cmc
ss
jge
nop
aad
cmpsb
nop
bound
insl
add
stos
mov
lea
out
imul
int3
sub
dec
push
xchg
nop
icebp
std
fbld
inc
nop
cmpsl
sbb
xchg
or
mov
jp
xor
xor
mov
and
inc
or
out
fldcw
data16
fs
mov
and
cltd
add
mov
sti
lock
divl
popf
test
mov
rcll
lahf
fldln2
push
ja
jecxz
mov
jno
mov
ds
frstor
or
js
pmaxsw
cmp
dec
dec
cmp
insl
outsb
fs
cwtl
inc
pop
roll
push
sub
mov
lret
jp
das
xor
lds
mov
into
sbb
es
fld
outsl
cwtl
mov
xchg
or
mov
cmpl
push
sub
pop
call
ret
xorl
mov
lods
notb
pop
dec
inc
test
inc
sub
mov
push
push
hlt
ficompl
rorb
js
into
mov
leave
xchg
test
movsb
mov
movb
jle
fsubrl
cmp
cmpsb
jnp
dec
add
sarb
sub
pop
xor
idivl
xchg
in
mov
adc
xchg
aas
ror
sub
minps
mov
stc
movsl
out
loop
push
cmpsb
int
jle
cmp
mov
out
cmp
cld
lcall
dec
shl
jg
jle
cmc
mov
or
mov
cmpb
pushf
unpckhps
xchg
pop
mov
scas
stos
push
jae
lea
and
std
or
jb
add
fcoml
jl
int
xor
cmp
dec
lods
mov
and
or
into
push
fbstp
fs
xchg
adc
movsl
sub
lock
call
js
nop
mov
push
ficompl
fistl
iret
pop
outsb
sbb
insl
bound
and
inc
int3
stc
push
in
into
aas
push
sub
dec
lret
test
pop
lods
stos
and
fnstenv
and
pop
out
dec
frstor
add
clc
xor
sbb
decl
adc
imul
dec
shll
push
mov
aad
sub
sarb
ret
sub
sub
in
aad
add
cmc
lret
movsb
mov
es
xor
sbb
jl
sahf
xor
add
outsb
in
jno
push
mov
pop
xchg
in
enter
popa
jbe
add
fldt
cmp
xchg
push
movsl
fcompl
jmp
jge
insl
and
imul
dec
dec
in
xchg
clc
aad
mov
cmpsb
cld
outsb
jl
xor
mov
jae
rcrb
aad
in
out
sub
sti
or
into
leave
xor
and
pop
out
mov
mov
out
mov
and
cmp
enter
aas
and
push
push
mov
and
push
or
adc
cmp
shr
pop
or
xchg
jge
imul
push
gs
push
mov
push
pop
out
cwtl
in
les
add
add
mov
in
mov
js
sub
outsb
repz
fnsave
fistps
nop
inc
dec
push
andb
mov
mov
jle
cmp
xor
stos
mov
push
stos
cmc
or
dec
mov
jp
mov
sbb
push
insl
cmp
movsl
int
push
and
out
dec
jno
xor
das
and
lea
stc
pop
fs
adc
push
flds
mov
inc
aas
roll
pop
testl
jo
fwait
jnp
or
adc
mov
adc
or
push
stos
movsl
test
fdivrl
jmp
cli
out
fwait
shrl
cli
test
inc
cs
push
loopne
aaa
shrl
ljmp
add
loope
adc
sbb
push
orl
dec
arpl
xchg
sahf
push
cmp
das
and
mov
lret
and
and
pop
fstp
mov
int
js
sub
shrb
out
orb
inc
fistps
push
jb
popf
adc
inc
pop
fwait
pushf
arpl
xorb
mov
lds
dec
iret
push
mov
es
jge
popf
jae
mov
pop
fdivr
fcoml
jo
sbb
pusha
pop
stos
in
pop
jle
mov
stos
cmp
xchg
clc
mov
inc
pop
sbb
bound
clc
add
je
lods
adc
jle
in
data16
inc
movsb
mov
push
xor
testl
lret
lcall
jo
dec
aas
outsl
and
and
xchg
jp
jo
mov
mov
rclb
xchg
xchg
shrl
addr16
sub
test
ja
lods
stos
mov
mov
lods
stos
adc
inc
lret
pop
lret
bswap
jo
lahf
sbbl
jae
mov
xchg
sub
imul
cmp
stc
push
xor
test
andb
push
sti
add
sbb
push
out
dec
in
flds
sbb
add
pop
data16
sbb
inc
sub
lcall
mov
dec
ficompl
stos
insl
dec
stc
adc
mov
pop
and
faddl
jge
fwait
add
popa
cmp
and
add
ror
adc
pop
sarl
aas
inc
jns
sub
xchg
sbb
mov
lods
jo
and
loop
or
jno
cmpsl
sbb
mov
lret
mov
mov
lahf
push
pop
mov
dec
pushf
jge
shlb
inc
div
scas
mov
outsl
inc
test
andl
mov
into
js
outsl
icebp
xchg
adc
push
adc
adc
test
xchg
xor
mov
les
imulb
lock
xchg
out
outsl
lods
xlat
xchg
arpl
imul
jl
ret
fstpl
dec
jne
mov
flds
pop
xorb
and
dec
jne
movsl
mov
fists
mov
scas
mov
add
and
mov
int3
push
add
add
movsl
xchg
mov
mov
inc
in
push
enter
leave
pop
cmpl
repz
push
cmp
fildl
gs
xor
out
leave
repz
push
jnp
scas
leave
icebp
lods
sub
inc
dec
push
jmp
mov
lret
lahf
int3
push
jl
sti
sar
mov
xchg
xchg
push
outsl
push
lds
mov
push
aam
push
inc
sbb
inc
rcrb
hlt
movsb
stos
ret
repz
push
pushf
jns
mov
cmpsl
gs
cmp
pop
aad
and
jb
mov
xor
ja
or
mov
fstpt
cmp
in
out
mov
xchg
cmc
or
dec
mov
inc
push
lahf
cwtl
pop
cmpl
mov
xchg
sub
add
sub
loope
push
xlat
mov
pop
leave
cmp
enter
mov
pop
aas
cwtl
mov
loopne
in
xlat
mov
daa
dec
xchg
cli
dec
pop
sub
lea
inc
popf
data16
xor
adc
cmp
orl
dec
cltd
xorb
fs
cmp
xchg
cltd
mov
stc
inc
cltd
lods
xchg
std
jge
aas
mov
movsb
andl
mov
fsubs
or
mov
pop
lahf
inc
stc
dec
into
xchg
mov
pusha
mov
sub
or
xchg
sbb
push
cmp
sbb
movsb
dec
xor
dec
je
out
mov
sub
mov
cmp
xchg
test
leave
movsl
fidivl
jo
or
sbb
mov
mov
xor
pop
cli
unpcklps
inc
out
push
rcr
xor
xchg
push
mov
lea
dec
fsubrs
dec
dec
or
lcall
jmp
stos
xchg
fs
pushf
cmovge
int
test
stos
xor
or
mov
testb
xchg
jns
ret
mov
pop
insl
push
push
xchg
or
aas
cmp
fstl
cltd
hlt
call
repz
mov
enter
dec
loop
fdivrp
stc
clc
sbb
jl
outsl
stc
or
loop
dec
aaa
mov
leave
mov
or
or
lahf
neg
pusha
jne
mov
addr16
sti
cs
mov
outsb
aam
jecxz
out
in
dec
cmc
mov
push
pop
push
in
rorb
sti
loope
clc
pop
cmp
inc
mov
adc
cmpsb
inc
push
inc
popf
stos
call
fstl
and
cltd
shlb
pop
cltd
dec
into
bound
dec
sub
or
vmread
add
incb
and
mov
inc
enter
repnz
xchg
cmpsl
mov
xchg
das
rcrl
adcb
add
xchg
mov
out
arpl
jne
fxch
push
xchg
out
mov
arpl
add
xchg
in
jnp
xchg
pop
xchg
inc
lcall
push
jns
inc
adc
xorb
mov
das
leave
ja
jmp
insb
jno
mov
dec
sbbb
bound
inc
and
dec
cmp
outsb
shl
and
pop
xchg
push
pushf
or
mov
lcall
mov
rorl
xchg
cmp
das
fs
dec
cs
or
xor
lcall
mov
pop
cmpsl
mov
cltd
inc
and
xchg
lods
enter
lock
mov
shll
adc
rcrb
fcoms
cmp
cmp
lock
in
push
ds
ud2
cmp
mov
adc
popa
lret
fistpll
inc
lds
gs
adc
mov
push
mov
dec
mov
mov
add
push
sbb
into
int3
push
popa
ljmp
mov
les
popa
sti
adc
add
dec
in
inc
cmp
out
dec
pop
xorl
cltd
cs
stos
es
mov
dec
pop
xchg
movsl
mov
inc
cltd
arpl
fucom
xchg
aas
push
pop
andl
or
pop
inc
inc
cmpb
jmp
mov
loop
sbb
ret
cmp
and
dec
xchg
fs
test
je
push
inc
stos
mov
xor
das
out
jbe
outsl
cli
mov
test
add
test
nop
push
dec
pop
inc
addr16
xchg
negl
dec
xchg
aaa
sahf
jmp
xor
out
inc
sbb
es
int
clc
fsubrs
popf
cmc
push
sub
test
inc
repnz
cmp
mov
aas
and
out
and
sub
cs
dec
test
cmp
push
and
icebp
mov
fstpl
and
inc
notb
inc
dec
hlt
stc
cltd
adc
pop
ljmp
push
and
lcall
sar
and
add
jp
adc
iret
dec
out
push
cmpsl
push
xchg
mov
outsb
ss
xchg
out
sub
push
jecxz
shrl
sarl
inc
les
ret
cld
into
dec
mov
xchg
rdtsc
lock
pop
fwait
icebp
orl
arpl
xor
cmp
push
mov
jne
adc
dec
mov
arpl
push
aam
mov
lods
fwait
int3
xor
in
pop
xchg
dec
sub
dec
jns
mov
jle
andb
inc
push
bound
ss
ficoml
sub
loope
jnp
xor
xor
add
nop
push
adc
pop
mov
dec
and
dec
cld
aaa
xchg
pop
int3
scas
adc
pop
xchg
or
add
insb
and
mov
and
pop
xchg
mov
movsb
cmpsb
mov
mov
pop
sub
mov
test
subl
xlat
jecxz
nop
popa
jg
cmpsl
call
rclb
sbb
pusha
adc
inc
test
and
or
pushf
pop
pop
fisttps
cltd
addl
sti
aam
inc
fsts
in
add
std
push
sub
ret
push
push
outsl
xchg
out
lret
test
aaa
mov
inc
cmp
push
adc
dec
jne
push
dec
pop
jbe
mov
scas
cmp
shll
loope
push
fisttpll
out
jg
mov
icebp
in
std
fs
mov
jp
and
fsubrl
je
mov
cltd
and
adc
mov
icebp
xor
mov
in
xor
sbb
imul
es
shll
fistps
out
cmp
pushf
mov
sub
mov
loopne
mulb
xchg
adc
sti
fdivrs
add
daa
fmull
mov
xchg
xchg
mov
mov
dec
movb
jae
push
lods
mov
out
ret
fwait
jle
leave
ret
dec
in
test
lret
mov
xchg
into
pop
dec
and
sub
loopne
out
and
push
inc
popf
popa
dec
xchg
inc
or
mov
leave
fwait
jbe
insl
subl
jmp
adc
cmp
xor
adc
aad
dec
inc
and
dec
repz
sbb
int3
lods
mov
or
cwtl
jecxz
loope
jg
dec
xchg
outsb
and
xchg
pop
or
test
repz
mov
out
iret
daa
hlt
addr16
dec
ficomps
pusha
sub
mov
insb
mov
push
cmp
shl
lret
inc
inc
adc
mov
cmp
mov
ljmp
xchg
xor
movsb
pushf
sub
push
punpcklbw
cmpl
jl
mov
xor
push
scas
call
xchg
sbb
or
push
ficoms
pusha
add
out
fdivrl
sbb
sahf
mov
in
cmp
lods
jae
lock
movl
inc
insb
stos
push
sbb
push
leave
pushf
shr
lahf
push
mov
sub
adc
mov
lret
mov
push
mov
loop
sub
push
add
lret
mov
push
std
or
jb
adc
es
or
daa
dec
pop
fimull
lahf
xchg
fdivrl
inc
dec
sub
dec
orb
enter
dec
sbb
arpl
cld
jmp
and
pop
pop
lods
test
movsb
pop
lcall
jecxz
pop
xor
xlat
ror
sbb
jg
and
ss
sub
das
ss
mov
cmp
insb
fidivs
pop
mov
fst
jecxz
andl
insb
lret
fdivrl
dec
lock
mov
movsl
mov
inc
push
shl
jg
inc
mov
std
sqrtps
fucomp
in
xchg
push
cmp
aad
jecxz
fiadds
pop
repnz
aas
arpl
je
mov
ret
push
xchg
mov
mov
mov
adc
cld
mov
cmp
sbb
push
jle
mov
stos
addl
push
std
aaa
sbb
dec
xor
les
mov
fnsave
int3
add
fcom
jl
repnz
in
les
mov
xor
inc
xchg
nop
xchg
int
cmc
insl
cmp
in
aad
jbe
leave
inc
mov
call
add
jns
mov
lods
jno
dec
mov
or
mov
mov
fs
inc
push
lret
repz
mov
out
pusha
mov
or
lret
cwtl
mov
in
adc
push
dec
icebp
rol
jnp
sti
or
dec
sar
inc
add
hlt
mov
cmp
cs
sub
jb
adc
jl
inc
xor
dec
add
jg
rorl
pop
or
dec
maxps
nop
jg
fwait
adc
cmp
icebp
xchg
les
pop
push
inc
pop
mov
fstpt
or
fnstsw
fmuls
fwait
test
or
rorb
cld
cmp
sbb
mov
in
dec
jo
push
andb
xor
cmp
dec
addr16
jge
pop
jg
repnz
push
add
loope
das
jnp
pop
add
test
pop
mov
push
popa
outsb
sub
xchg
mov
mov
orl
cmp
xchg
adc
imul
dec
call
sbb
mov
les
and
dec
imulb
jb
rclb
ljmp
or
adc
dec
push
sahf
imul
xchg
cmp
popw
cmp
cmp
mov
xor
pop
loope
aas
scas
sbb
scas
pop
mov
xor
cmpsl
jle
mov
push
shrl
into
sub
jmp
int
out
arpl
loope
push
jnp
int
repnz
xor
adc
mov
sbb
mov
insb
cltd
jo
and
and
mov
sahf
sub
xchg
lods
mov
lret
in
hlt
loope
or
arpl
cmp
movsl
pop
rcrl
or
stos
xchg
cmpsl
scas
ret
sahf
pop
dec
dec
cltd
imul
lcall
xchg
js
dec
mov
les
sahf
test
out
dec
cmc
cli
push
pop
lods
or
imul
cmpb
stos
mov
int3
int3
in
fsubrs
adc
and
and
mov
adc
loope
fimuls
mov
neg
adc
adc
leave
sti
icebp
mov
mov
lcall
cmc
push
aam
in
push
lahf
and
shrb
sub
psubsw
pop
jne
adc
test
xchg
jno
sahf
and
aas
lods
push
xlat
test
int3
aas
mov
outsl
and
push
cmp
pusha
hlt
lahf
movsl
mov
das
jp
and
or
jns
push
insb
lahf
pop
jnp
cmp
ss
outsb
or
cmpsb
pushf
sub
stos
jb
je,pt
mov
scas
inc
push
out
or
push
sti
mov
xor
mov
jnp
cmc
add
popa
inc
sub
add
into
data16
je
insb
leave
add
inc
movsl
xor
lcall
xor
shlb
icebp
mov
mov
enter
add
fdivrl
jne
adc
mov
cmpsl
in
cmpsb
mov
inc
popf
xor
mov
push
cld
inc
push
push
xor
in
xchg
leave
inc
add
lcall
inc
pop
mov
rorb
out
sahf
iret
sub
xchg
mov
jle
push
add
addr16
adcl
mov
andb
inc
test
in
jle
daa
test
stos
xlat
jle
enter
dec
push
xlat
ret
jecxz
sar
das
fdivrl
xchg
jb
lret
mov
add
pusha
repnz
sub
clc
dec
lcall
loopne
rclb
loop
sahf
xchg
aaa
repnz
orl
dec
leave
rorl
ret
dec
xor
mov
daa
xchg
xchg
je
mov
outsl
lcall
xchg
lods
ret
inc
loopne
pop
std
mov
adcl
lea
jne
out
sbb
mov
popf
ret
pop
bound
scas
xchg
cmc
dec
pusha
xor
ja
jle
mov
add
ljmp
into
fdivs
mov
dec
push
mov
ljmp
bound
lahf
inc
and
insl
insl
into
ror
lahf
xchg
ds
and
js
jle
and
dec
lods
inc
mov
aaa
shl
push
pop
repnz
cmp
adc
push
lea
daa
andb
rorl
sti
aam
add
sbb
lds
dec
fcmovnu
add
in
cmpsb
out
js
jne
pop
das
hlt
jno
jp
inc
cmp
pop
clc
arpl
and
mov
ds
fistpl
std
cwtl
lock
dec
mov
gs
jo
in
pop
jg
sti
add
add
ljmp
and
xlat
jb
cwtl
cld
mov
mov
push
dec
jecxz
ss
mov
pop
icebp
sbb
stos
filds
cld
sbb
fldl
xor
fnstcw
inc
xor
xor
push
pop
xchg
adc
mov
push
outsl
or
insb
adc
stos
xor
scas
repz
mov
or
pop
jl
jl
mov
inc
dec
sub
mov
push
mov
int3
mov
dec
jmp
movsb
sbb
or
call
fwait
sbb
pop
leave
les
mov
inc
shrb
jns
push
mov
cwtl
outsb
enter
pop
or
push
fisttpl
jbe
leave
adc
fwait
and
cwtl
jbe
pop
add
inc
mov
je
in
push
into
xor
outsb
mov
push
cmp
test
push
push
cltd
sbb
scas
jne
inc
sub
adc
movsb
or
fadds
xchg
repz
shll
mov
or
dec
mov
add
outsl
sub
xchg
xchg
dec
push
loop
sbb
ljmp
jge
insl
sbb
or
dec
loop
out
and
xor
or
adc
sbb
movsl
push
cltd
cmp
arpl
add
les
push
or
mov
icebp
inc
and
mov
call
test
in
and
sahf
inc
adcl
fwait
hlt
jg
jl
daa
sbb
es
sub
sbb
adc
shrl
daa
push
or
sbbb
xchg
mov
and
mov
sahf
cmc
es
shr
sbb
mov
add
mov
pop
in
std
or
xor
jo
rcrb
ret
das
and
lcall
pop
xchg
test
cmp
push
mov
mov
data16
mov
dec
pop
shrl
mov
pmulhuw
nop
cmp
scas
xor
dec
ss
fistl
dec
inc
add
mov
cmp
add
mov
xlat
push
in
test
je
addr16
cmp
sbb
mov
ljmp
dec
fisttpl
hlt
or
adc
pop
adc
push
lret
xlat
sub
sbb
out
out
test
outsl
stc
xchg
test
mov
mov
movsl
roll
divl
rcrb
add
stos
clc
inc
and
lods
adc
call
push
push
imul
int
adc
push
cmpsl
cmpsl
or
jl
sub
add
fidivrs
mulb
ret
scas
ds
xchg
cltd
pop
insb
cld
ficoml
jecxz
mov
mov
xor
inc
lea
stc
test
cmp
xor
test
repnz
cli
mov
leave
and
sahf
mov
mov
adc
adc
xor
mov
mov
sub
jae
movsl
mov
out
mov
call
sbb
mov
cmp
pop
lret
jg
andl
mov
sub
aas
pusha
dec
xor
xlat
mov
mov
jmp
add
add
push
pop
xchg
add
adc
js
push
movsb
xor
adc
sti
jp
sarb
in
sub
push
imul
mov
xchg
stos
jp
dec
fnstsw
cmp
push
in
test
punpckhwd
and
xor
jo
pop
ja
data16
aaa
adc
shlb
jno
ss
cli
xchg
jo
inc
cmp
mov
xor
les
pop
pop
out
jo
jbe
fs
lret
loope
insl
ds
mov
or
bnd
jno
mov
mov
mov
xchg
jmp
std
cld
pushl
leave
ret
mov
dec
adc
popa
ret
popf
jb
inc
adc
xchg
fisubrs
xchg
mov
pop
jb
push
add
aad
popl
sbb
mov
int3
pop
lret
xor
movsl
sub
mov
and
popa
sbb
filds
sbb
repnz
and
inc
sbb
bound
das
pop
jmp
jne
push
sbb
adc
popf
adc
insb
test
and
and
cmpb
ret
sbb
push
mov
pop
push
out
das
mov
call
imul
outsl
out
mov
fstpt
mov
jae
and
sub
int3
xchg
arpl
ljmp
movsb
aam
lods
shl
mov
adc
sub
xor
ret
sbb
mov
xchg
js
gs
pop
push
ret
lcall
push
loop
adc
inc
cmp
cld
and
push
sub
pusha
add
sub
jb
sahf
lea
je
cld
cld
xchg
movsb
mov
pop
sahf
pop
push
shlb
inc
int
sub
stc
enter
add
mov
inc
cmp
sbb
out
cmp
jae
imul
iret
aad
insl
out
sbb
dec
es
pshufw
mov
cmc
adc
je
xor
or
ja
adc
inc
push
dec
addr16
jp
adcb
inc
cmp
sbb
fisubs
mov
mov
insb
xchg
sbb
imulb
sub
mov
push
sti
inc
xchg
xchg
pop
out
aas
xchg
add
out
test
pop
mov
test
gs
pop
jae
jg
and
mov
ftst
je
cmp
jmp
sub
mov
or
loop
lahf
leave
clc
testl
push
adc
or
and
inc
add
ljmp
xor
xor
mov
sub
inc
lret
ret
jns
mov
jns
pop
out
ret
xlat
inc
mov
loope
sub
ficompl
jae
mov
jle
dec
ret
lods
inc
lods
mov
aam
test
insb
cwtl
js
ja
fs
imul
movsl
frstor
fsts
dec
cltd
jae
jl
call
mov
rcrl
mov
sub
test
lcall
rclb
jle
pop
popa
push
sub
lea
fnsave
push
into
or
insb
sub
jge
scas
add
ficoml
and
jnp
xchg
pop
jb
mov
lods
filds
xchg
test
test
popa
lds
jb
lahf
cs
test
sarl
and
sti
test
dec
and
and
data16
lgdtl
push
movsb
mov
or
sub
int3
div
lret
sub
adc
adc
test
mov
mov
popa
test
outsl
in
lcall
mov
fmul
sub
lcall
stc
mov
or
sbbl
hlt
xchg
xchg
mov
add
test
rclb
dec
cmp
int
add
fdivp
stc
nop
out
mov
xlat
inc
cmp
adc
mov
jns
jge
cwtl
pusha
or
and
repnz
cli
cld
xorl
inc
xchg
in
push
or
pop
pop
jg
push
scas
and
push
cmp
cmp
cwtl
mov
shll
cwtl
mov
addr16
loopne
cmp
stc
mov
push
jmp
or
push
xor
sbb
xor
xchg
repz
out
and
inc
es
icebp
jg
cmp
cmp
int
fnsave
xor
xor
mov
rclb
andl
mov
jg
mov
ljmp
jp
or
xchg
jnp
push
sub
mov
mov
dec
testl
push
and
and
lahf
and
dec
je
idivb
subl
or
jp
dec
lahf
add
daa
outsl
test
mov
dec
dec
ret
sahf
pop
lret
push
repnz
imul
sbb
lret
inc
insl
shll
dec
mov
mov
xor
iret
lods
xchg
out
movsl
cli
pop
sbb
jmp
jbe
adc
cld
aas
add
popa
rcll
jle
hlt
pop
and
cs
xchg
test
insl
fwait
stc
cmp
sti
push
cmp
fstpt
cmp
nop
insl
mov
movsl
mov
in
dec
das
imul
out
movsb
stos
aad
aaa
jl
fists
fidivrs
arpl
sarb
loope
add
xchg
push
jns
cmc
in
fwait
leave
dec
fiadds
mov
cmp
mov
cmp
loope
cmpsl
and
testl
mov
lret
aam
mov
jo
sbb
push
pop
lret
push
push
inc
clc
cmpl
adc
ret
sbb
imul
pop
arpl
add
or
adcl
pop
bts
sub
pop
xor
pop
mov
cmp
sbbb
decl
mov
lret
in
cld
xor
sub
mov
fcmovbe
jno
xchg
sbb
je
adcl
inc
sub
cmpsb
inc
fiaddl
sti
lcall
push
bnd
inc
inc
pop
je
fcoms
xchg
pop
pop
es
fs
push
jo
xlat
fldl2t
sub
push
adcb
and
sub
jmp
addb
push
lds
sub
nop
fwait
scas
stos
sub
daa
sbb
add
ja
std
das
inc
in
fs
jmp
sbb
xchg
out
sbb
cmp
xchg
jne
aaa
nop
sub
mov
fs
mov
das
inc
cli
or
shl
std
pop
mov
les
mov
fcompl
inc
mov
divb
mov
pop
push
or
in
data16
sbb
xor
mov
mov
sub
rorl
xorb
pop
daa
bound
jo
ret
stc
nop
cld
out
inc
dec
and
fidivs
imul
add
jp
push
test
xor
cmpl
fdivrs
or
in
xlat
je
stos
push
mov
adc
cwtl
repz
sti
cmp
mov
push
cmp
pop
jbe
inc
adc
fdiv
je
or
outsl
jne
xchg
in
mov
sub
dec
js
out
mov
mov
jmp
outsl
add
and
into
fiadds
sub
cs
movsb
adc
xchg
cmp
shll
add
mov
mov
mov
mov
inc
pop
sahf
mov
loopne
push
and
loop
jle
jl
pop
mov
outsb
mov
sub
lcall
push
mov
in
sub
pop
sbbl
call
mov
scas
iret
sbb
pop
je
jae
andb
cmp
lea
mov
fsub
cmp
push
std
add
sbb
daa
xchg
pushf
sub
daa
dec
cmpsl
push
fmull
or
outsb
xchg
rorb
or
in
push
aaa
sub
push
jg
and
movsb
adcb
aam
aas
nop
clc
rclb
sbb
xchg
xlat
push
adc
fmul
ret
loope
lcall
hlt
lods
or
shrl
pop
hlt
inc
ss
ljmp
repz
lds
les
sub
pop
sub
sub
scas
push
mov
push
and
add
data16
pop
std
or
inc
mov
scas
pop
sbb
jmp
jg
mov
out
xor
cmpsl
mov
pop
lret
dec
or
out
jmp
jl
xchg
scas
xchg
xchg
aad
or
sbb
sub
mov
and
sub
sahf
outsb
frstor
mov
nop
pop
push
mov
sub
mov
push
adc
push
data16
in
aas
sbb
and
out
test
dec
out
adc
sbb
fdivs
das
push
pusha
mov
inc
push
xchg
xchg
xor
xor
cli
cmp
sub
inc
xor
popl
addb
add
add
cmpsl
xchg
mov
mov
push
cli
dec
add
fimull
pop
add
mov
imul
jo
bound
loopne
jecxz
mov
jnp
jae
or
std
mov
daa
loopne
sub
inc
in
and
dec
lods
sahf
std
xchg
in
xor
mov
sbb
mov
mov
pop
mov
mov
sub
push
test
cwtl
pop
pop
popa
cwtl
imul
out
sbb
pop
lods
enter
mov
cwtl
and
jge
jmp
adc
mov
xchg
pusha
sbb
das
adc
pop
xlat
or
pop
lcall
hlt
cli
xor
push
ds
push
xor
bound
je
es
pusha
pop
pop
les
mov
and
stos
andps
or
fs
cmp
sbb
imul
and
adc
dec
sub
imul
fsubrp
sbb
std
aas
cmc
cmp
jl
cs
popl
push
aad
cmp
ja
add
cmp
jle
nop
inc
mov
aas
pusha
pop
mov
pop
ljmp
test
inc
imul
add
scas
push
mov
lods
xor
nop
loop
jno
scas
clc
outsl
pusha
mov
adc
dec
or
sbb
int3
fwait
gs
pop
mov
mov
dec
sarl
jno
pusha
mov
add
mov
mov
scas
lds
dec
push
out
fcom
in
push
pop
sbb
sub
enter
xchg
lods
push
fisubl
leave
lcall
into
popf
inc
jecxz
jbe
scas
pushf
popa
jle
gs
lock
xchg
sbb
adc
dec
dec
inc
jae
aas
mov
push
js
xchg
pop
mov
in
stos
sbb
cli
fcoml
daa
lret
sbb
rol
dec
and
sub
push
jmp
sarb
sbb
pop
adc
das
xchg
mov
dec
push
sbb
push
pop
cli
pop
ret
xchg
outsb
xor
and
addr16
inc
xor
and
pop
sub
jp
hlt
adc
test
and
test
xor
xchg
mov
pusha
lods
inc
fs
xchg
adc
jnp
lock
loopne
inc
shr
movb
es
sbb
loope
xor
push
jo
cwtl
cmp
es
outsb
sbb
imul
and
jnp
inc
push
aas
gs
jmp
add
inc
mov
or
lret
or
sub
stos
shrl
sbb
sbb
xor
inc
add
test
in
adc
fildl
dec
sub
pop
xor
dec
jnp
rorb
fists
push
mov
test
cmp
stos
jae
xor
aaa
stos
ficompl
out
dec
jge
adc
xor
sarb
lret
jge
ds
dec
or
imul
movsb
xor
int3
int3
jmp
mov
loop
mov
mov
rep
loop
sbb
mov
xchg
sbb
lahf
fidivrl
dec
aas
andl
int
fcmovbe
cs
cli
je
insb
inc
xchg
mov
add
notl
jle
ljmp
adc
mov
mov
je,pn
mov
pop
sbb
push
inc
pushf
imulb
mov
dec
jle
ds
add
shrl
shlb
bound
lahf
jp
enter
pop
xor
pop
pushf
popa
pop
pushf
inc
and
bound
aam
mov
jb
mov
gs
push
mov
sarl
or
inc
icebp
or
lret
mul
frstor
xchg
jl
dec
jb
clc
mov
sbbb
jl
cs
push
jno
xchg
fdivs
test
pop
and
adc
xchg
stos
jp
pop
cmp
mov
leave
cli
dec
in
cltd
cmp
movsl
pop
sbb
test
test
jns
cmp
adc
lock
icebp
aas
mov
cmc
jl
mov
mov
stos
clc
inc
dec
shrl
sub
movsb
imul
data16
ds
shr
pop
icebp
enter
push
push
sarb
pop
push
xor
dec
lods
gs
pop
push
clc
shrl
dec
pop
adc
adc
cmp
out
sbb
std
inc
push
xlat
inc
jmp
test
push
add
int3
inc
jl
mov
insl
jo
xchg
and
mov
mov
mov
sub
rorb
nop
iret
sub
mov
pop
adc
or
loop
dec
sbb
insb
jp
insl
test
outsl
sar
bswap
adcb
fs
arpl
and
vcvtps2ph
xchg
mov
mov
lret
cmp
out
mov
aam
int3
addr16
int3
lods
pop
cmp
jbe
sbb
popa
xchg
jg
fdivrs
mov
pop
inc
add
inc
jbe
test
scas
xchg
rcrb
jae
insb
sub
sub
inc
cld
ds
adc
popa
pusha
std
rol
out
and
loopne
scas
hlt
push
pop
xor
pop
pop
arpl
je
pushf
cmpsl
mov
insb
mov
out
cmc
addb
cld
mov
push
mov
aas
xor
inc
cli
ss
pop
aad
fisttps
imulb
lcall
pop
xor
adc
sti
mov
faddl
push
sbb
xchg
icebp
test
dec
loop
lahf
dec
jb
pop
mov
add
pop
add
cwtl
pop
pop
dec
push
xor
adc
xchg
lahf
xchg
lods
stos
in
rol
mov
and
imul
cmpb
dec
mov
rcrb
inc
push
push
and
jbe
sub
packssdw
test
pop
pusha
scas
push
loop
mov
inc
lea
sub
push
push
in
sub
addr16
pop
bound
or
push
adcl
mov
fstl
pop
push
int
inc
push
mov
mov
sbb
mov
sbb
xlat
jae
push
jae
mov
pop
xor
in
sub
shlb
inc
loop
pop
orl
jbe
cmpl
fsts
xchg
notb
push
mov
xchg
in
xchg
dec
ljmp
mov
nop
push
dec
xor
push
filds
loopne
jnp
dec
xchg
mov
sti
push
jl
shrd
jo
push
sub
dec
dec
cli
popf
fcompl
mov
push
dec
sti
int
inc
cmp
mov
mov
jge
push
insl
orl
imul
sub
std
sub
aaa
mov
mov
cmp
pop
pop
adc
adc
xor
add
leave
fbld
jg
xchg
in
sbb
fstpl
ljmp
pusha
cmp
jmp
and
mov
scas
into
ror
dec
icebp
inc
iretw
cmp
sbb
int3
push
sti
adc
add
arpl
leave
shlb
call
and
xchg
loopne
movsb
icebp
ja
out
call
cmpsl
sub
or
xchg
xlat
mov
fisttpl
cmp
sub
out
je
pop
pop
jge
pushf
jno
popl
mov
fcoms
ss
xchg
shl
mov
mov
jp
push
imul
fdivrs
push
cmc
pushf
add
mov
push
sarl
clc
test
fwait
inc
xor
pop
xchg
fnsave
outsl
mov
je
ljmp
pop
call
dec
mov
xor
scas
mov
mov
gs
xchg
jb
xchg
dec
cld
jl
add
xlat
iret
jae
fs
in
test
or
and
or
xchg
sbb
xchg
call
jp
insb
outsb
jmp
hlt
jle
inc
icebp
jne
sub
pop
cmp
sub
sub
shll
fidivs
push
incl
cmp
pop
jmp
test
mov
shr
movsl
pop
inc
xor
dec
out
pusha
mov
mov
jbe
les
pop
xchg
ljmp
sbb
jecxz
test
inc
add
push
xchg
mov
sbb
je
test
repz
sbb
cmpl
mov
pushf
fildll
jge
enter
ret
xchg
mov
mov
fwait
cmp
pop
add
arpl
push
in
out
es
pop
or
xchg
pop
sub
lcall
xlat
lds
rorb
jl
movsl
enter
push
frstor
arpl
cmp
sub
inc
sti
call
inc
adc
push
je
xchg
mov
cli
cltd
jbe
cmc
xor
mov
loope
sbb
mov
pop
mov
popf
pop
push
loope
cmpsl
inc
mov
sub
sbb
push
int3
mov
out
fs
imul
mov
adc
mov
dec
aas
sbb
and
lret
mov
lret
pcmpeqd
jge
jle
xor
sub
jo
test
push
or
lret
add
sti
xlat
jno
xchg
jecxz
add
xchg
mov
mov
sub
and
inc
add
arpl
xor
mov
pop
sbb
outsb
in
mov
scas
sbb
xchg
enter
add
dec
fsubr
notl
push
xor
stos
fbld
sbb
sub
xor
jo
inc
dec
fdivrs
jg,pn
int
in
lods
dec
adc
imul
fwait
push
fsubr
adc
pop
es
aad
jne
xchg
mov
pop
loopne
sarl
test
rolb
into
xchg
and
cmp
inc
cmp
mov
rcl
in
js
dec
pop
fdivrl
imul
mov
in
xchg
xlat
cmp
bound
adc
into
or
push
ss
fcmovne
inc
and
pushf
xchg
pop
or
out
inc
mov
outsb
jp
pop
or
negl
pop
mov
add
or
and
daa
frstor
mov
dec
add
inc
push
incl
test
incl
out
adc
cmpsl
jp
test
cmp
sub
jp
jbe
aad
add
mov
loopne
ret
das
rdmsr
pop
jmp
fstp
imul
push
inc
aas
and
in
insb
loopne
push
div
xlat
fidivrl
jl
mov
sub
nop
sub
fnstenv
imul
jmp
lret
pop
xchg
add
jb
repz
jo
mov
fstpl
shlb
jl
test
and
fnstsw
leave
push
jge
sub
and
inc
pushw
cmp
iret
sub
lods
icebp
pushf
clc
adc
jbe
cli
aam
add
xchg
lret
jbe
push
insb
lret
inc
xchg
mov
dec
pusha
sub
add
out
add
xchg
jo
dec
push
mov
movsl
nop
inc
xchg
push
mov
fcompl
jno
jmp
testb
pop
dec
push
mov
int3
xchg
outsb
in
xchg
push
mov
pop
lahf
jbe
in
aad
sbb
pop
pusha
inc
into
push
sbb
mov
mov
xlat
lods
xchg
lods
add
in
jge
or
and
mov
andl
add
mov
ljmp
in
idivl
pop
and
call
jae
hlt
inc
lods
xlat
decl
sbb
xchg
sbb
mov
mov
pop
lea
xor
or
mov
divl
xlat
push
enter
out
jae
xchg
xchg
lock
inc
imul
jno
fstp
and
sbb
xchg
cmp
mov
mov
rclb
inc
adc
jo
out
sahf
fistl
mov
mov
xor
push
and
data16
mov
lcall
cmpsb
xchg
sub
std
jl
loope
mov
xchg
xchg
pop
clc
lret
pop
mov
push
dec
jle
out
sbb
test
sub
fisubl
jb
push
mov
mov
mov
movsb
xor
jg
out
mov
jmp
xlat
mov
mov
aam
mov
sahf
sbb
fsubl
pushf
sub
scas
mov
loope
nop
xchg
daa
addr16
mov
testb
jne
ds
jg
jbe
mov
pop
push
add
rcrl
sub
jae,pn
adc
jg
mov
xor
je
inc
jmp
push
lock
mov
push
call
xchg
jecxz
push
cwtl
jo
adc
aaa
pop
rorb
push
outsl
aam
out
insb
lcall
shlb
rcll
aam
mov
loopne
cltd
loop
cmp
out
ds
pop
cmp
pop
adcl
lret
outsb
cld
jbe
jnp
or
mov
sbbb
mov
jg
lea
mov
and
aas
mov
dec
adc
cmc
adc
jge
and
add
sbb
cwtl
out
jb
mov
repnz
jge
cmpsl
mov
jecxz
dec
ret
adc
repnz
sub
adc
xor
push
ss
in
xchg
jnp
xchg
mov
mov
sub
test
shlb
inc
pop
pushf
sub
sar
leave
cmc
out
scas
rorb
add
add
test
or
rcrl
cmp
push
frndint
movl
xor
icebp
icebp
jnp
call
lret
clc
lock
pop
dec
sub
fnstcw
sbb
js
dec
jno
jg
inc
movl
dec
lock
notb
pop
pop
stos
mov
add
jge
hlt
inc
and
mov
pusha
lea
into
push
out
shl
je
dec
fnstsw
pop
xor
lds
jmp
ret
inc
cmp
cld
jmp
mov
daa
loop
rcll
fwait
into
jno
sbb
popf
subb
inc
pop
push
push
push
lods
push
negb
es
nop
jge
jno
xchg
std
outsl
mov
movsb
add
push
test
pushf
mov
mov
stos
fwait
pushf
dec
hlt
cmpsl
shll
mov
mov
mov
xchg
mov
ljmp
lcall
jne
movsb
inc
in
je
imul
std
fwait
jne
jae
jl
cmp
and
nop
enter
shrd
fdiv
sbb
loope
int3
jbe
and
mov
xchg
ret
adc
iret
gs
dec
ror
out
sbb
pop
lock
dec
loop
in
pop
inc
sub
call
cmp
mov
sarb
add
test
or
dec
jp
mov
cmp
add
push
outsl
lcall
ret
jns
ljmp
mov
adc
fs
push
or
in
jno
aad
lea
sub
mov
push
nop
mov
ljmp
sub
jmp
scas
or
xchg
dec
cwtl
clc
mov
pushf
aad
mov
lretw
sbb
sbb
sub
daa
nop
int
js,pn
daa
movsb
enter
xchg
pushf
cmp
mov
add
sub
outsb
dec
add
mov
cli
mov
aaa
je
cmp
xchg
repnz
fs
lds
sbb
test
push
mov
ljmp
sti
aas
movsl
test
ret
lret
push
adc
cwtl
repnz
inc
hlt
mov
or
dec
in
push
cmp
pop
repnz
fwait
xor
dec
add
jno
push
and
hlt
in
loopne
and
loopne
push
inc
cmpsl
fiaddl
adc
imul
js
in
sub
lods
sub
sbb
rcr
les
jl
xchg
ficompl
fldt
pop
add
out
jecxz
aad
test
adc
repnz
das
pushf
movsl
cmp
xchg
pop
push
jle
arpl
nop
in
jne
mov
imul
and
mov
and
xor
mov
in
sarb
add
cld
add
xor
test
push
add
xchg
into
mov
loopne
push
xor
insl
push
mov
int
or
mov
das
lock
cmpsb
mov
iret
nop
cmp
aad
jno
push
paddw
rorb
nop
dec
ror
pop
xlat
lret
fsubrl
mov
jnp
lds
xchg
inc
xchg
flds
int
cmp
into
or
fistpll
push
das
sbb
ss
ret
sub
mov
cmp
test
dec
mov
lods
mov
fsubs
xchg
mov
cmp
das
xchg
lds
jne
sti
aaa
push
fiadds
pusha
sbb
outsl
sbb
push
sub
popf
loope
lods
mov
outsb
mov
not
rclb
push
loop
insl
nopl
add
pop
jbe
testl
dec
outsl
sbb
dec
mov
xchg
cld
push
inc
ror
add
out
jg
lock
push
bound
clc
cmc
jp
dec
inc
cwtl
add
jl
jnp
pop
mov
sbb
in
jne
sarb
pop
orl
mov
sarl
insb
push
dec
ljmp
xor
inc
cmp
pop
dec
cmpsl
push
in
ja
popf
push
lret
xor
xor
out
mov
sbb
clc
mov
jecxz
into
mov
xor
xchg
adc
adc
mov
mov
push
aas
dec
orb
cmpsl
nop
out
pop
or
les
lea
lds
push
xor
xor
out
shrl
lcall
and
dec
cmpsl
test
scas
mov
cltd
in
xchg
sbbb
cmpsl
adc
mov
movsb
cmp
cmpsb
sbb
mov
sbb
adc
xchg
pop
push
push
pop
jl
ret
xor
ss
and
movhps
int3
adc
rcll
ret
push
test
movb
repz
inc
cmp
push
inc
sub
mov
sbb
inc
mov
and
mov
outsb
jno
push
aam
pusha
fcomi
push
adc
pop
xchg
lret
sub
pop
mov
sar
int3
pusha
adc
cs
std
and
cmp
arpl
in
in
adc
ret
push
xchg
loope
dec
data16
cs
dec
mov
sub
add
out
cmp
stos
jg
loopne
dec
orb
shlb
cs
mov
scas
sbb
stc
jge
insl
add
popa
xor
lret
xor
mov
fsts
dec
movsb
mov
pop
jmp
xor
int
pop
movb
ds
jmp
pop
adc
js
int3
sti
in
xchg
push
loope
adc
test
mov
add
push
sub
lock
loopne
inc
jne
sbb
lods
adc
sti
std
inc
out
out
stc
imul
pop
lock
push
dec
frndint
jbe
imul
mov
mov
jno
imulb
jg
movsl
sub
push
stos
jp
mov
std
rorl
ljmp
scas
lea
pop
lods
movsb
idivl
pop
iret
pop
stos
or
repnz
cmc
xchg
daa
outsl
jecxz
xor
push
mov
sub
inc
fdivrs
and
in
pop
in
push
xchg
lock
sub
mov
fxch
mov
adc
leave
shrl
xchg
ja
stos
jl
cmc
push
popa
andb
daa
dec
div
mov
cmp
jae
mov
andl
dec
add
jecxz
sub
pop
cmp
inc
pop
data16
ss
push
mov
xor
out
outsl
mov
pop
pushf
js
movsb
lahf
add
add
in
rclb
and
out
xor
xor
mov
popf
pop
test
loop
xor
cli
ja
aas
mov
repnz
shll
stos
adc
in
add
xor
popf
jle
push
insb
nop
lret
aam
xchg
jo
push
pop
adc
pop
cmp
andl
mov
inc
sahf
push
fdivrl
ss
push
mov
out
dec
cwtl
loopne
xlat
push
popa
mov
pop
sub
and
push
xchg
push
lret
rcrl
and
mov
fwait
stos
cmp
imul
cld
and
push
ret
add
rolb
out
orb
mov
inc
testb
ret
pop
pop
xor
dec
addl
lret
push
imul
out
xor
nop
and
cmp
lds
inc
inc
aaa
std
xchg
push
rcll
cmp
ljmp
sbb
mov
addr16
and
sub
pop
je
inc
sbb
imul
xchg
mov
xchg
mov
hlt
int3
decb
inc
xlat
shrl
cmp
push
cmp
inc
fwait
and
cmp
cmpl
xchg
popa
sbb
cmp
dec
mov
push
add
push
je
outsb
out
mov
sub
add
cli
test
add
in
out
imul
pop
adcl
movsl
cmp
sti
aaa
testb
js
repnz
in
or
sti
mov
out
arpl
jg
repz
push
repnz
ja
movsb
ret
or
fisttps
jmp
sbb
sbb
xor
icebp
imul
mov
mov
adc
in
xchg
mov
cwtl
cmpl
lret
cmpsl
das
rcrb
roll
adc
push
enter
loop
cwtl
mov
repz
mov
cmc
adc
jg
fisttpll
xor
mov
cmp
dec
cwtl
fst
ret
jecxz
mov
jnp
sub
xor
pop
out
movsl
call
pop
add
adc
js
cltd
cltd
mov
mov
push
rolb
dec
cwtl
and
psrlq
out
pop
xor
xor
sarl
pop
pop
xlat
lock
call
and
movsb
jbe
cmp
es
fwait
test
mov
mov
jne
int3
inc
ja
xchg
mov
scas
dec
cmp
inc
insl
int
xor
in
pop
push
sbb
and
cmc
mov
insb
push
fcmovne
xor
mov
fs
xchg
adc
outsb
das
mov
push
mov
clc
fmulp
sbb
iret
mov
sub
mov
and
fdivs
das
mov
push
sti
mov
xchg
into
mov
fbld
frstor
popf
push
mov
sub
in
int3
lcall
xchg
lods
addb
mov
pop
inc
in
bound
les
mov
repz
lock
popa
push
out
insl
xchg
mov
inc
in
pop
jb
jnp
or
xor
sub
adc
pop
nop
mov
aad
jb
fnsave
xlat
jne
ss
push
mov
js
pop
popa
add
dec
xor
clc
test
push
in
ret
scas
out
jmp
add
lea
stc
divl
shlb
pop
fidivrl
nop
popf
sub
push
xchg
rorl
jp
popa
movsl
popf
push
mov
pop
jp
xchg
mov
movsl
out
or
push
int
jo
repnz
frstor
jb
repz
lock
lahf
mov
lret
jp
cmpb
ret
fwait
sbb
sub
loopne
xor
cmp
mov
cld
scas
or
lret
mov
xchg
mov
cmpb
sbb
inc
test
and
rclb
pop
cs
icebp
jmp
negb
mov
rolb
fwait
mov
sub
xor
lds
jne
cmp
mov
out
xor
out
sub
pusha
inc
sub
dec
inc
mov
mov
pop
in
and
lahf
aad
pop
and
insl
sub
adc
int
test
lea
enter
mov
aaa
or
xchg
add
test
dec
into
mov
adcl
cmp
data16
sub
jp
out
and
mov
pop
and
cmpsl
sub
cmovs
mov
aas
xchg
ss
cmpsb
movsb
sub
mov
hlt
das
or
push
mov
sbb
adc
pop
out
dec
mov
adc
out
xchg
pop
icebp
out
in
push
mov
sub
mull
in
jnp
fs
fdivrs
or
xchg
shl
addr16
pop
lcall
cmp
mov
mov
inc
or
pop
xor
jae
nop
cli
inc
jnp
and
lret
mov
push
push
fcom
imul
jbe
aad
push
ja
mov
xor
mov
sbb
sbb
mov
fldenv
lahf
jb
lea
clc
push
cld
and
scas
pop
and
je
rorl
adc
rcll
rorl
adc
mov
adc
lret
xchg
and
out
arpl
rcl
xchg
sbb
push
test
dec
mov
mov
xchg
cmp
lret
push
jecxz
outsl
roll
pushf
sub
sub
inc
ljmp
lret
imul
mov
in
aas
mov
sbb
call
cmp
inc
ss
fcom
dec
push
cli
mov
aaa
push
dec
cmp
out
push
or
pop
cmpsl
repnz
sub
aaa
int3
mov
mov
sbb
lret
scas
cmp
inc
xor
dec
outsl
nop
or
inc
cwtl
int3
in
insl
cmc
pop
and
mov
les
cltd
mov
nop
jmp
sub
inc
push
push
into
xchg
lods
fidivrl
cs
push
and
jl
and
and
inc
mov
jns
add
xchg
jp
mov
push
mov
xchg
into
sbb
inc
movsl
outsb
outsb
popf
decl
shl
xchg
mov
xor
dec
xor
sbb
lods
jb
adc
push
dec
cmpsl
nop
sub
out
sub
sub
mov
mov
fsts
divl
cli
jno
mov
fisubs
cmp
movsb
lret
dec
outsb
outsl
loopne
mov
xor
push
in
sbb
lcall
cmpsl
jne
movsb
ljmp
sbb
into
fildl
out
jmp
andl
jl
rcr
and
mov
mov
cltd
inc
mov
sbb
xor
ss
decl
out
sbb
pop
cld
repnz
ja
shrl
cs
add
mov
rorl
cmpsb
cmp
push
das
mov
xor
xchg
inc
scas
or
shlb
mov
jno
mov
sbbl
lods
add
xor
cmp
dec
pushf
and
shl
fdivr
push
inc
mov
sbb
adc
push
ja
divl
xor
mov
outsb
jne
and
cld
int3
lret
rcl
mov
push
loope
mov
fnstsw
sbb
adc
out
loopne
movsl
ja
jne
or
ljmp
jae
xchg
dec
imul
mov
push
lret
test
mov
pop
notl
mov
push
cmc
add
in
leave
test
xor
add
adc
ret
add
pop
aaa
add
lcall
fdivrp
stos
jp
adc
push
pop
pusha
insl
les
cmp
stc
mov
and
inc
ds
add
jmp
leave
shlb
pop
jo
xchg
sub
mov
int3
pop
cmp
jne
jns
arpl
inc
adc
arpl
imul
xor
and
dec
pop
dec
lahf
dec
test
jo
push
or
lds
or
mov
aas
or
lret
mov
out
enter
xchg
xchg
jmp
pop
sbb
xor
add
xor
sbb
or
dec
test
cwtl
sub
pop
test
sub
sbb
lock
mov
loopne
test
sahf
push
add
push
xchg
and
inc
adc
cmpsl
mov
jmp
sbb
nop
push
sub
shll
inc
mov
push
pop
subb
pop
ret
movsb
lock
and
rorb
pushl
stc
xorl
add
or
sbb
lcall
test
scas
loope
jae
dec
pop
dec
in
jg
xorl
popf
push
mov
cmp
mov
call
fisttpll
add
fbld
stos
xchg
sarl
out
mov
jae
divb
xchg
lret
shl
pop
mov
xor
xor
jb,pn
mov
cmp
jno
push
pop
nop
pop
inc
insl
sub
lock
jp
ja
loope
iret
das
faddl
fwait
cmpsl
sbb
out
mov
stc
ret
orl
add
jecxz
add
xor
outsl
icebp
inc
jbe
push
xor
mov
mov
shr
add
jle
push
mov
dec
lea
das
repnz
out
push
push
mov
roll
push
shll
sub
mov
dec
test
rcrl
jmp
sbb
call
ljmp
mov
cmp
daa
fwait
adc
jo
out
and
sub
cs
cli
add
mov
into
pop
pushf
idiv
mov
cltd
mov
sbb
mov
add
sub
dec
lahf
push
dec
jnp
xchg
rorb
aaa
xlat
jo
scas
andb
imul
or
dec
add
cmp
mov
sub
jmp
orl
adc
cmpsb
out
orl
dec
sbb
xor
xor
lds
add
ss
jbe
pop
jo
jne
mov
jno
mov
sahf
sub
in
ds
test
or
push
push
lds
sub
push
mov
imul
xchg
or
shl
or
cmp
popa
cmp
dec
mov
sbb
ret
imul
in
subb
les
xchg
xchg
daa
xor
fldl
or
push
xchg
pushf
and
sub
adc
xor
xorb
movsb
lds
xor
lret
push
xor
out
jb
xchg
stc
lret
addr16
jmp
sahf
cmc
in
orl
mov
jp
jae
jecxz
sahf
cmp
pop
in
roll
or
xchg
insl
xor
pusha
jns
adc
sbb
lock
fsubl
mov
jge
ds
jl
in
push
insb
jno
lcall
rdtsc
jno
std
cli
lea
jle
push
jbe
mov
pop
int
ficoms
lret
push
dec
repnz
cmp
pop
movsb
pop
pop
and
push
cli
push
imull
arpl
aam
cmp
aaa
pusha
dec
push
push
movlps
ret
push
jmp
aas
jle
icebp
jae
movb
xor
push
push
jno
mov
cmc
cltd
lds
repnz
adc
in
loope
pop
mov
in
js
jns
jle
and
cwtl
por
mov
int
insb
add
push
mov
stos
movl
inc
les
sub
repz
mov
stc
xor
inc
movb
pop
fsubs
inc
dec
das
ja
jmp
mov
pop
je
enter
fsts
jnp
inc
ret
xor
or
cs
nop
push
dec
mov
xor
cwtl
xor
mov
mov
push
js
lahf
jecxz
or
adc
inc
cmpl
xchg
out
push
push
push
lock
mov
insl
imul
decl
cmc
inc
mov
xor
sbb
and
jno
bound
insl
movsl
and
mov
test
mov
cmp
jp
push
or
in
dec
cld
inc
aaa
cmpsb
loope
movsl
sahf
inc
jno
cmp
and
jne
xlat
xor
mov
pusha
cltd
andl
in
inc
push
xchg
push
add
outsl
xchg
out
subl
lcall
adc
add
test
cmp
pop
rcrb
mov
mov
mov
cmc
cwtl
or
ret
xchg
clc
cmp
adcb
dec
push
xchg
lret
adc
in
fcmovu
lret
jnp
test
popa
cs
inc
mov
je
jae
mov
rorl
icebp
cmpsl
cmc
scas
dec
mov
sub
sbb
ljmp
scas
jge
gs
test
cmpsl
icebp
into
sub
stc
xchg
push
sbb
pop
xchg
lret
jecxz
or
dec
imul
push
clc
mov
dec
add
test
jecxz
push
pop
ficoml
shrl
aam
or
faddp
mov
mov
addr16
push
adc
mov
cs
jns
outsl
or
jmp
adcl
fwait
sbb
shlb
inc
dec
push
sub
pushl
adc
roll
leave
inc
add
push
das
add
out
out
push
inc
adcl
sub
repnz
mov
inc
enter
mov
insl
or
push
xor
sahf
push
jp
pop
leave
ret
loop
adcl
cli
add
xchg
xchg
mov
dec
or
jne
cld
arpl
jg
jae
mov
sub
mov
ds
pop
xchg
fcoml
sbb
iret
movsl
ret
lcall
mov
fcompl
push
jae
leave
mov
sbbb
adc
cmc
mov
xchg
lahf
fidivs
into
cmpl
xor
fbld
aas
inc
or
mov
mov
or
push
xchg
lock
dec
in
sbb
leave
fmuls
mov
test
jno
adc
in
sbb
cpuid
lret
push
cs
leave
inc
cmp
mov
jl
jbe
call
scas
jae
cmpsb
movsl
or
fisubrl
negl
addr16
sbb
pop
fwait
push
rep
sub
mov
dec
inc
mov
sbb
mov
jle
inc
xlat
jp
gs
fisttps
inc
gs
cs
int
fistpll
push
dec
aas
jno
mov
insb
int3
aaa
movb
pop
cmp
mov
sub
jge
mov
xor
and
xor
cmp
into
lahf
adc
jno,pn
jbe
xchg
mov
push
ljmp
test
cli
mov
popf
adc
xchg
int3
imul
push
jbe
cmpb
adc
or
mov
inc
scas
dec
sahf
aad
lds
lea
daa
cld
adc
pop
or
into
mov
push
inc
push
test
xor
mov
arpl
aas
subb
push
sbbb
sbbb
mov
cmpsl
icebp
test
repnz
xor
jecxz
addr16
adc
jle
inc
xor
sbb
xlat
sbb
mov
aas
add
cmp
cmp
call
jno
popa
jns
cmpsb
pop
sub
jecxz
mov
leave
push
fsubrs
fwait
mov
popf
xchg
stos
lahf
sub
hlt
iret
xchg
leave
push
mov
shlb
insl
ficoml
inc
sahf
ror
ds
repz
sub
mov
loopne
testl
jns
xchg
mov
jp
xor
addb
outsb
cmpsl
mov
or
pop
mov
lea
sahf
mov
dec
inc
xchg
aaa
outsl
mov
sub
xchg
push
out
push
fs
test
fbstp
push
push
in
lcall
shll
nop
mov
adc
cmp
push
push
scas
jge
das
lahf
fucom
mov
inc
inc
pop
xor
dec
inc
push
or
lea
push
jg
loop
movsb
push
ret
xor
dec
inc
pop
roll
cmp
mov
inc
lods
out
jmp
mov
fisubl
ljmp
int
loopne
push
icebp
and
and
pop
aaa
outsb
stc
add
out
cmp
xchg
addl
xchg
sub
mov
icebp
xchg
xor
mov
test
sbb
jae
xchg
pushf
cli
add
fwait
mov
fcompl
ror
fstl
int
jmp
jmp
addl
mov
sub
sub
cltd
xlat
mov
mov
ds
push
inc
inc
aas
stos
popa
adc
loop
mov
cmpsb
loop
les
inc
and
mov
movsl
cmp
test
mov
popa
cwtl
mov
cmc
push
fadd
sahf
out
add
pop
and
cmp
lret
faddl
fcoms
insb
repnz
leave
iret
lcall
or
mov
popf
xchg
push
inc
enter
mov
mov
jecxz
mov
add
popa
ds
cli
dec
aad
inc
jl
in
fdivs
sub
sub
sub
mov
ds
popa
mov
sbb
sar
sub
push
mov
push
jle
or
pop
rcrb
dec
leave
xchg
test
notl
xchg
fisubrl
je
testb
mov
or
inc
mov
lret
push
push
div
or
sti
push
dec
dec
or
jg
int3
in
cmc
inc
jl
sbb
in
sub
push
test
mov
add
push
mov
pop
jg
xchg
imul
push
popa
lds
add
mov
inc
jns
cmpsl
adc
daa
subb
icebp
ja
clc
aad
mul
repnz
dec
xchg
sub
xchg
cmc
das
inc
arpl
lods
push
push
xchg
sub
pop
xchg
jo
and
sub
mov
xor
movlps
fnstenv
dec
cmp
hlt
nop
andl
stc
sbb
and
pop
sub
cltd
push
ficoml
cmovno
mov
lret
xchg
or
imul
fdivl
sbb
push
xor
loope
pop
lods
sub
enter
out
insb
xchg
add
xchg
mov
inc
add
xlat
or
mov
push
lret
mov
mov
sti
add
adc
mov
xor
jne
push
or
jg
test
fstpt
xchg
in
pushf
jns
sbb
andb
jecxz
enter
cmp
inc
mov
jnp
insl
pop
mov
in
pop
push
insb
imul
js
mov
mov
into
cmpsb
sub
and
lcall
pushf
lret
fwait
push
sub
cmc
into
loope
in
icebp
lea
fs
push
dec
jno
xchg
fcmovu
jns
movsb
mov
add
push
xor
xchg
scas
les
sbb
dec
cwtl
pop
mov
mov
addb
stos
sti
sub
test
push
inc
dec
cmp
xchg
mov
mov
mov
inc
ret
xchg
xchg
cmp
aas
pop
cmp
dec
mov
and
mov
xor
cs
mov
sahf
das
xchg
jmp
ror
cmp
lods
aad
and
inc
out
push
jmp
fistpl
xlat
push
xor
or
push
cs
fdivs
test
out
xchg
daa
mov
subl
mov
mov
or
fnsave
ljmp
mov
dec
pusha
adc
cld
fistps
mov
add
and
fidivrl
inc
in
inc
pop
mov
imul
adc
mov
popf
or
fs
ret
fsubrl
xchg
ret
pop
jb
jno
repnz
in
into
fxam
mov
lret
xor
xor
adc
daa
jmp
inc
adc
ss
fdivs
sbb
out
push
mov
call
sbb
movsb
ja
pop
dec
jo
cmp
hlt
stos
aaa
subb
pop
add
mov
lea
cmp
faddl
mov
in
jge
in
lock
and
xchg
fidivrs
sub
dec
push
mov
xor
cmpsl
xor
ljmp
repz
sub
bound
dec
cmp
push
mov
mov
daa
dec
filds
sete
movsb
pop
popa
ja
arpl
hlt
in
mov
pop
cmp
mov
cmp
jle
lahf
and
std
cltd
lret
push
insb
push
jb
mov
pushf
push
xchg
mov
jb
fbstp
mov
push
out
outsb
push
ja
pop
outsb
ret
iret
mov
orl
lret
xchg
jae
cmpsb
mov
ss
mov
and
fwait
aas
mov
nop
les
in
into
scas
dec
or
cs
dec
add
arpl
mov
mov
push
dec
pushf
sbb
and
xchg
inc
std
clc
out
lret
pop
in
cmp
push
sub
fcompl
lahf
adc
fnstsw
lea
mov
push
xchg
sbb
push
icebp
xchg
pop
pop
xor
jl
lea
scas
mov
loop
out
pushl
int3
push
icebp
repnz
or
in
fidivrl
sbb
out
int3
movsl
push
ja
rclb
jno
inc
movsl
or
sub
sbbb
cltd
sub
jno
and
push
pushf
lret
dec
dec
xchg
and
ss
mov
or
inc
jno
fldl
mov
push
aad
mov
stc
pop
dec
and
int3
mov
out
and
addr16
pop
jmp
pop
fs
sbb
out
adc
and
cwtl
scas
jo
push
clc
js
dec
ficoms
cmp
inc
jg
aam
popf
and
leave
popl
lods
mov
add
jecxz
xchg
ja
or
cmp
and
push
xchg
repnz
mov
jge
int
addr16
leave
jge
cwtl
rclb
dec
fdiv
out
in
mov
mov
in
psubsb
sbb
jle
ds
sbb
roll
out
repz
cmpsb
mov
mov
dec
data16
daa
sbb
dec
mov
or
adc
ret
pop
popf
adc
add
fstpt
cmp
insl
jnp
cmp
aad
rolb
fcoml
xchg
or
pop
xor
or
xchg
faddl
or
xor
hlt
jecxz
xor
lret
mov
push
jno
lahf
stos
icebp
cmp
shrl
cmp
scas
out
push
cmp
push
lcall
cld
adcb
jb
mov
sbbb
jne
enterw
out
ss
cmp
sarb
lcall
mov
add
pop
rclb
push
sbb
insb
and
push
push
adc
mov
ret
add
jb
arpl
clc
pop
sub
and
inc
jns
push
fcoms
shrb
xchg
sub
cmpsb
dec
repz
inc
cld
iret
push
xchg
dec
cmp
or
pop
push
aad
sbb
mov
adc
pop
or
dec
mov
inc
cmp
daa
adc
sbb
repnz
fdivs
or
cmc
mov
mov
mov
repnz
sbb
jmp
negl
add
addl
push
movsl
imul
and
fwait
mov
mov
faddl
pop
xor
mov
sbb
mov
jne
loop
cmc
outsb
gs
lods
jno
push
jmp
xchg
pop
cmp
mov
mov
decl
fnsave
jns
pop
pop
mov
jmp
insl
push
inc
cs
jl
std
mov
xor
sbb
push
call
ret
mov
rorl
xor
adc
add
push
dec
lea
cs
and
mov
push
nop
mov
loopne
xchg
stos
add
cmpsb
insb
scas
and
mov
sbb
ret
fcoms
out
subb
xor
daa
fistl
cmpsl
and
push
mov
adc
and
or
iret
out
jge
xchg
imul
and
mov
in
out
pop
dec
out
or
int3
inc
mov
fiadds
lahf
push
lods
push
popa
adc
cwtl
or
mov
fwait
inc
rcrw
aas
out
stc
cmp
inc
aaa
out
add
rolb
jae
dec
pop
negb
and
mov
mov
mov
cltd
mov
xor
mov
push
xor
pop
adc
dec
jns
pop
les
addr16
fcomp
mov
out
cmp
ljmp
cmp
shr
pushf
cmc
std
cltd
mov
fistps
cmc
mov
lret
xchg
xlat
sbb
ss
pop
mov
jge
loopne
test
outsb
stos
sbb
out
xor
inc
sbb
push
dec
and
cmp
imul
mov
and
mov
repz
mov
jle
test
inc
pop
sbb
pop
in
sub
sbb
push
mov
lds
stc
stos
dec
rcrb
xor
daa
cmp
mov
cltd
ss
repz
push
stos
xor
hlt
stc
bound
leave
mov
movsl
jo
popa
inc
cmp
xchg
and
cmp
push
mov
out
sub
in
fmul
notb
clc
sbb
and
or
push
cmp
jmp
push
test
xor
pop
xchg
int
mov
and
sub
dec
jnp
mov
xor
inc
dec
pop
insl
dec
pop
xchg
push
dec
mov
rorb
inc
loopne
add
add
jg
cmp
movsb
stos
leave
in
lret
shlb
icebp
sbb
jno
subl
mov
ficompl
loope
or
mov
xor
inc
scas
jns
or
test
test
arpl
je
push
push
jns
dec
cltd
mov
sbb
or
aas
popf
mov
jno
and
add
arpl
jecxz
or
push
fidivrl
mov
mov
bound
dec
stc
push
add
jecxz
aam
popw
dec
inc
call
inc
mov
stc
push
sub
jb
in
andl
inc
in
xchg
inc
test
sub
sbb
mov
notl
int
push
or
mov
and
push
xchg
mov
scas
loope
pop
mov
popf
mov
test
push
je
ljmp
cwtl
test
mov
jns
ja
push
push
in
stos
loopne
movsb
or
jbe
clc
lret
aam
dec
inc
add
mov
lea
inc
mov
mov
or
dec
insb
icebp
jg
jo
sub
inc
and
adc
inc
mov
mov
pop
mov
jb
enter
lret
dec
add
dec
mov
inc
test
es
xchg
mov
and
jl
adc
add
xchg
sbb
push
insl
movd
iret
std
or
leave
xor
jo
push
and
pop
push
popa
or
fsubrs
ds
lds
and
pop
scas
xor
popf
scas
push
xor
rclb
adc
sub
nop
sbb
cmp
sub
test
lock
fcomps
cmp
xchg
dec
jp
das
push
and
into
fmul
cwtl
aas
pop
shl
cmpl
fwait
adc
es
add
jb
cmp
cld
xchg
sbb
push
rol
iret
sub
adc
out
sub
jnp
movsl
inc
push
out
xchg
push
mov
orl
dec
sub
jmp
adc
sbb
and
mov
loope
int
pop
fdivrl
testb
inc
jp
aad
decb
mov
lret
movsl
jmp
mov
subb
inc
mov
xor
lods
aas
loope
cwtl
dec
dec
pop
loope
sub
push
sti
add
xor
push
div
pop
inc
cs
pop
ret
inc
repnz
push
rcr
ret
pop
insb
pop
and
or
jmp
dec
mov
inc
mov
dec
test
shlb
lock
cmp
push
sub
sti
pusha
std
mov
arpl
dec
push
test
pop
clc
rolb
test
push
imul
cwtl
call
loope
push
gs
repnz
lds
push
pop
xchg
jnp
das
pop
stos
jne
jbe
jp
dec
or
adc
adc
cld
int
adc
sub
and
mov
push
outsb
pushf
and
mov
int3
data16
push
xor
or
push
clc
fcmovnu
mov
adc
push
mov
xchg
lahf
or
outsb
popa
sti
call
jne
lcall
rclb
lret
pop
neg
xchg
out
and
repnz
lret
popf
aad
aas
roll
daa
xor
in
or
mov
sbb
stc
sar
cs
loopne
mov
popl
and
jne
aaa
stos
mov
mov
push
ja
push
leave
jg
fcompl
push
aad
mov
nop
sbb
dec
push
jmp
dec
aas
mov
fcoml
in
jbe
cmp
cwtl
push
xor
test
ret
sahf
repnz
dec
mov
xchg
or
mov
jno
ja
inc
push
jg
sbb
aam
lds
fwait
xor
sub
mov
gs
outsb
bswap
cmp
mov
cltd
dec
imul
jg
and
cmp
lds
sbb
or
and
sub
cmp
call
push
enter
xchg
not
sub
mov
lods
sub
push
outsb
jne
outsb
or
aad
les
jbe
adc
out
orb
xor
push
and
aas
adc
cld
jecxz
sub
xor
test
loop
out
xchg
lcall
repz
pop
pop
mov
inc
dec
mov
cmpsb
dec
loopne
imul
sub
mov
movsl
push
arpl
rorl
lods
rcr
std
call
push
cmpsb
pop
movsl
jne
cmpsb
jl
sti
fwait
xchg
sbb
ret
dec
add
and
add
jg
jmp
sub
jg
sbb
test
mov
xor
jle
inc
dec
pop
loopne
imul
lret
dec
lds
andl
adc
movsl
mov
mov
dec
inc
stc
lods
mov
jp
xor
pop
dec
clc
add
cltd
outsb
rcrb
xor
sbb
cli
pop
lods
mov
mov
pop
mov
push
sbb
or
mov
or
mov
cmp
lea
inc
scas
aas
sti
inc
orb
xlat
xor
dec
les
sbb
mulb
popa
dec
pop
push
mov
pop
sbbl
scas
xor
adc
jmp
je
xchg
inc
out
dec
inc
cmpsb
andb
dec
inc
mov
push
mov
inc
jnp
bound
cmc
ficoml
mov
out
sub
out
xchg
mov
adc
data16
data16
loope
jb
js
sarb
scas
fdivrs
mov
leave
ret
push
es
je
bound
shll
add
fsubrs
push
inc
mov
jo
mov
push
mov
jbe
cmp
inc
pop
and
cmp
or
jb
push
or
hlt
out
ss
adc
dec
jnp
nop
mov
in
cld
inc
or
xor
jae
and
xchg
lret
cmp
movb
imul
sub
loop
stos
movsb
and
inc
pop
repz
mov
xor
xor
jmp
jne
sti
decl
imul
and
inc
sbb
xchg
xor
jp
adc
cld
fwait
dec
movsl
jle
loop
int3
aad
inc
stc
and
es
inc
lahf
xor
pop
xor
mov
in
xchg
cvtps2pd
int
dec
fs
lret
mov
sti
pop
jbe
sub
fs
int3
mov
push
ret
mov
rcl
jnp
out
ja
push
adc
pop
push
xchg
adc
jbe
mov
cmp
add
hlt
aam
inc
faddl
cwtl
pop
fwait
das
test
lahf
cld
lods
jmp
enter
pop
shl
jbe
jne
out
jp
cmpsl
xchg
sub
inc
arpl
sub
mov
sti
nop
mov
repnz
cld
aas
mov
sub
shlb
stos
lret
xor
ret
popa
add
scas
sbb
int3
je
stos
cli
inc
imul
cs
mov
jbe
or
mov
or
pop
inc
sbb
push
jecxz
mov
call
inc
sub
add
pop
jb
ds
out
pop
pusha
pop
maskmovq
negl
add
cmp
test
jmp
jmp
sbb
mov
sbb
lcall
shl
andl
setne
stc
or
data16
mov
es
dec
addr16
push
in
lcall
shlb
data16
xchg
dec
rcrl
cmp
mulb
dec
adcl
stos
sbb
lods
cli
xor
add
mov
cmp
lcall
pop
in
push
outsl
rcrl
cmp
shrl
push
movsb
push
test
loop
cmp
cld
mov
test
rorl
das
aaa
mov
ret
mov
pop
cmc
push
insb
mov
xchg
icebp
xchg
rcrb
dec
xor
negl
or
scas
rclb
les
std
and
mov
sbbb
or
mov
mov
xlat
inc
aam
cmp
mov
xor
sub
divb
xchg
pop
subb
sub
inc
mov
mov
mov
stos
lea
mov
ja
or
in
push
sti
cmp
faddl
mov
loop
dec
cmp
adc
sub
ds
adc
scas
mov
push
mov
js
insb
dec
mov
pop
es
andl
js
push
ljmp
fs
fidivrs
out
movsl
push
enter
femms
stos
xchg
loop
and
adc
cmp
into
mov
mov
sub
sbb
sbb
push
pop
jle
pusha
stos
ljmp
icebp
testl
jl
mov
clc
mov
ds
jge
xchg
mov
nop
push
fwait
test
outsl
movsb
popf
repnz
pusha
cli
mov
push
inc
add
fnstsw
pop
mov
rclb
cwtl
lods
fcomps
jecxz
push
fsts
call
orb
orl
pop
cmpsl
mov
sbb
xchg
insb
xchg
cwtl
movsl
fs
fdivl
out
fdivrl
lods
pop
and
add
es
jg
or
ja
sbb
xor
or
notl
pop
push
int
insl
fimull
or
jge
xchg
adc
xchg
add
sbb
xchg
push
add
out
clc
divl
lret
movsb
jne
sbb
and
jle
and
xorl
test
add
inc
or
shll
movsl
aas
push
add
mov
xor
jmp
out
por
mov
hlt
mov
adc
push
inc
xchg
aas
int3
jae
pop
dec
lea
mov
enter
out
sbb
push
adc
scas
mov
jns
or
pop
sub
lds
add
xchg
pop
iret
push
push
repnz
dec
sarl
dec
jle
ja
fsubl
or
jno
mov
int3
or
vpcmpgtb
mov
aaa
cmp
sti
ljmp
push
lods
mov
mov
lods
incb
xchg
mov
push
xor
sbb
and
clc
adc
pop
cmpl
sar
in
push
jb
test
push
push
add
xchg
outsb
imul
and
int
or
testb
in
push
and
jo
push
mov
rcrb
imul
mov
add
lret
dec
gs
mov
std
outsl
push
aas
sbb
int
add
jecxz
imul
scas
fwait
bound
sti
dec
daa
hlt
fdiv
aam
mov
mov
cmp
ds
mov
push
push
dec
mov
cmp
or
pop
xor
cli
movsl
jnp
or
sub
outsl
jge
loopne
sbb
jl
push
dec
dec
mov
out
scas
popf
fists
aas
cmp
jecxz
or
clc
cmp
je
std
mov
imul
dec
adc
mov
jp
mov
ds
test
repz
sahf
mov
dec
mov
aam
xor
inc
addb
fst
cli
pop
dec
sub
push
fwait
pop
idiv
and
dec
mov
data16
and
cmpl
pop
enter
popa
lret
int
xchg
icebp
and
test
clc
in
int3
sahf
mov
es
insb
mov
pop
xchg
mov
or
dec
cmp
outsl
nop
add
push
cld
roll
jmp
mov
inc
xor
cmp
push
sub
add
sub
lret
or
inc
adc
push
mov
pusha
je
cmp
cwtl
loop
jne
add
jg
cli
gs
into
js
or
inc
xor
inc
scas
push
mov
pop
pop
int3
test
hlt
out
push
ficomps
data16
test
rclb
ffree
mov
cld
int
push
add
xor
mov
adc
xor
mov
or
rcrl
daa
jl
aaa
lock
aad
les
sub
arpl
fildll
mov
mov
rolb
jmp
ss
out
cld
xor
push
dec
inc
test
loopne
mov
popa
mov
js
fadd
in
adcl
divl
or
fsubrl
ds
inc
xchg
push
ss
out
lret
add
push
pop
lock
lcall
cmp
dec
xchg
xor
and
andb
sbb
sub
lret
hlt
lods
pop
push
inc
test
xorl
add
sub
pop
call
in
jnp
or
mov
xor
sbb
push
and
add
pushf
popl
jo
stos
popa
mov
loop
and
mov
jge
pop
cmc
or
fdivs
or
daa
jl
pop
inc
mov
jg
mov
test
pusha
jo
sarl
xlat
adc
repnz
cmp
and
out
pop
lahf
mov
loopne
rcr
ffreep
and
mov
fldcw
push
mov
mov
cmp
mov
movsb
sbb
sbb
je
mov
out
mov
call
cli
dec
ja
mov
push
mov
loope
or
insb
jnp
sbb
daa
xchg
in
pop
setno
mov
adc
sbb
std
pop
jg
mov
mov
bound
or
or
adc
je
div
loope
xchg
aas
stos
imul
adc
lods
sub
or
jnp
loop
sbb
rol
cltd
pop
sbbl
or
add
or
hlt
adc
cmpsb
push
pop
mov
insl
jle
fdivrl
or
movsb
mov
and
into
lahf
repz
jecxz
jne
xor
mov
fildl
movsb
pop
hlt
jo
dec
mov
sahf
rcl
loopne
sarb
jge
mov
jb
push
xchg
out
mov
lahf
cld
dec
xor
push
shlb
cmp
sub
stos
mov
scas
sahf
stos
lret
sbb
xchg
jno
dec
js
lcall
xor
mov
sbb
push
inc
lret
adc
dec
sbb
jg
cltd
xchg
pop
push
fcomps
jl
mov
arpl
or
fmuls
mov
std
std
ljmp
mov
flds
and
jae
and
push
call
out
daa
push
aam
js
sub
mov
stos
inc
cmp
cmc
xor
push
fdivrl
lret
sub
mov
shlb
mov
mov
pop
adc
inc
fsubrs
cmp
xor
mov
lret
jo
pop
scas
mov
push
lock
icebp
es
pop
mov
shl
xchg
lock
mov
pop
xor
or
xor
xchg
mov
js
insl
mov
adc
jp
rclb
ss
inc
cwtl
in
mov
mov
mov
cmp
push
push
add
subl
mov
or
push
bound
dec
mov
addr16
insl
int
imul
fcoms
fdivrl
mov
call
xchg
sub
jge
pop
adc
out
push
call
test
bnd
or
nop
shll
repnz
pop
test
and
in
cli
xor
lock
arpl
jb
pop
pop
idivb
dec
lds
jecxz
pop
ficomps
inc
mov
jb
mov
pop
mov
loopne
sub
push
aad
push
mov
imul
xchg
test
not
lahf
cmpsb
scas
lret
out
imul
lods
bound
cltd
push
lret
xlat
adc
xchg
mov
je
mov
cmp
fisubl
pushf
ret
mov
out
popf
sub
mulb
cmp
jecxz
test
sub
lock
aam
iret
call
repz
imul
and
sti
push
inc
ret
cmpsb
xor
dec
clc
add
lods
shrl
mov
xchg
dec
adc
pop
mov
rcrb
std
push
xchg
and
sbb
leave
push
imul
jge
sbb
xor
addl
sbb
shl
fs
or
and
stos
stos
inc
in
xchg
cmp
dec
mov
stos
cmc
stos
sub
out
xchg
aaa
dec
sbb
mov
push
add
adc
arpl
sub
js
sbb
mov
scas
pop
shll
bound
lahf
out
lea
dec
cwtl
sub
add
sbb
mov
jns
jb
cmp
pop
call
jecxz
data16
sbb
add
and
dec
xchg
bound
xchg
movb
test
clc
inc
cli
addr16
lock
mov
fcmovnbe
ljmp
and
sub
jns
clc
ja
add
ja
jl
jle
adc
lods
and
mov
int
mov
cwtl
lods
imul
xchg
mov
or
lcall
jle
repnz
xor
js
pushf
lahf
sub
pop
pop
add
xchg
insb
or
push
in
popf
adc
loop
dec
pushf
sbb
sbb
dec
test
jecxz
sub
xor
enter
cmp
jo
inc
es
mov
sbb
arpl
or
jb
mov
dec
js
es
scas
xor
movsl
sbb
pushf
and
xor
sti
roll
sub
lret
roll
dec
rcrb
inc
jg
or
add
add
xor
pop
je
scas
add
cli
mov
mov
outsb
mov
or
mov
adc
and
std
roll
push
inc
int
xor
sub
push
imul
mov
pop
push
xchg
mov
daa
xchg
jae
cli
push
cwtl
sbb
jle
repnz
jae
call
adc
xchg
push
or
sub
fwait
lcall
xorb
or
sbb
xchg
repz
add
cltd
lds
pop
push
dec
lret
out
loop
cmp
push
imul
dec
push
test
cs
push
ss
mov
addr16
push
dec
mov
lcall
cmp
fisubl
cltd
sub
pushw
ret
fildl
hlt
cmc
loop
cmp
sbb
inc
push
test
dec
jnp
in
fwait
xor
rorb
pusha
push
cmp
inc
mov
cmp
fisttpl
test
loopne
aad
dec
sub
inc
aam
fsts
cwtl
and
cmp
jno
or
sbb
fldt
or
sub
cli
std
or
mov
out
xchg
pop
xor
je
in
mov
push
mov
cmpsl
loopne
popf
and
shlb
enter
dec
push
add
jle
xchg
dec
push
cmpsl
inc
xor
outsb
mov
xchg
xor
push
xor
mov
add
jno
push
sub
lahf
mov
fs
or
or
mov
lea
mov
xchg
dec
xchg
shll
sbb
fs
push
inc
mov
dec
test
clc
xor
pop
decl
jbe
mov
movsb
arpl
out
cli
cwtl
jge
cmp
orb
imul
dec
jl
popl
icebp
call
and
arpl
enter
lods
jecxz
add
mov
xor
xchg
mov
mov
pop
mov
inc
add
sub
inc
out
mov
mov
jo
fistl
scas
hlt
aas
pop
leave
sub
pop
push
pop
lods
lock
scas
xor
sbb
fmul
test
xor
inc
scas
ds
inc
mov
insl
mov
arpl
mov
xlat
repz
ret
ss
jp
fsubr
pop
aaa
jo
lods
pop
fildl
repz
popa
xchg
pop
insl
add
fistps
sbb
rcpps
dec
hlt
jb
sbb
adc
pop
dec
out
mov
icebp
pop
mov
call
cmp
push
fmull
nop
inc
les
imul
lret
lret
pop
mov
mov
arpl
or
sbb
inc
daa
inc
mov
stos
sub
out
ret
push
jb
subl
pushl
test
cli
es
leave
pop
push
cmp
adc
push
push
xchg
out
int
fwait
aaa
and
ja
notl
rorb
dec
mov
push
add
into
cmpsl
mov
fst
or
shrb
aaa
sbb
push
pop
into
lods
addr16
into
fldt
xchg
icebp
xor
adc
sti
leavew
stos
outsl
lcall
dec
clc
test
aam
insb
in
movsb
pop
das
cmpsl
xchg
ror
jle
rorb
mov
iret
push
dec
jl
int
mov
in
push
add
data16
mov
scas
cmp
ljmp
xchg
mov
add
jae
mov
movb
sub
pop
cmpb
mov
or
jge
xor
sbb
pushf
call
push
and
mov
rcll
sbb
mov
andb
out
inc
in
pop
fwait
sub
scas
pop
in
test
inc
xor
push
lea
or
or
fsubrp
xchg
add
test
inc
and
test
and
std
sbb
sub
sub
mov
nop
adc
pop
fiadds
mov
or
xlat
push
pop
out
jae
dec
mov
testb
dec
dec
sarl
pusha
mov
stos
dec
jmp
fld
cmp
sub
xor
sarb
pop
inc
xchg
mov
sbb
jne
jb
cmp
pop
adc
add
cmpsl
xchg
lahf
or
negl
xchg
push
mov
jmp
jbe
insb
inc
mov
repnz
xor
mov
loope
loop
sub
insl
jmp
mov
int3
outsb
add
mov
cltd
enter
dec
lret
inc
jecxz
data16
repz
sub
add
sbb
sbb
test
or
sub
sbb
and
addb
sub
fs
ja
mov
mov
sbb
and
test
lret
push
lds
dec
test
push
fs
psubusb
xorl
shl
cmpsl
outsb
cmp
pop
mov
leave
js
sahf
sub
dec
loope
jo
jecxz
push
xor
cmp
std
test
inc
pop
movsb
xchg
lcall
pop
xor
loopne
shll
xchg
cli
test
push
push
jmp
lock
sub
mov
popa
in
in
push
cmp
cmp
and
adc
mov
mov
jb
xor
lods
mov
sti
pushf
lds
push
addl
ds
dec
or
add
jle
popa
ja
cmpsl
addr16
and
jnp
jl
sbb
sbb
jne
shrb
stos
xchg
sub
xchg
cmc
adc
out
clc
testb
dec
push
div
sbb
ret
xchg
fxam
aaa
daa
mov
push
out
sbb
rorl
inc
sbb
jle
mov
inc
inc
push
int3
xchg
out
xlat
ja
mov
xchg
jno
in
lret
ja
push
and
pusha
mov
pop
mov
xchg
xchg
movsl
xlat
push
stos
xchg
xor
xchg
lea
or
lock
jl
dec
aaa
outsb
popf
mov
jmp
inc
push
xchg
dec
xchg
adc
xor
imul
mov
insl
dec
xchg
cli
cmp
or
roll
ficoms
arpl
jns
jg
stos
ljmp
imul
cmp
imul
pop
aas
pop
stc
std
or
or
ret
sbb
in
pusha
js
push
test
lods
out
push
clc
mov
pusha
roll
pop
outsl
pop
inc
mov
cmp
dec
fs
adc
sahf
push
cs
xor
xchg
idivb
fmuls
outsl
inc
test
inc
push
push
enter
aad
fwait
outsl
and
mov
pop
push
test
add
dec
jns
sub
push
enter
xorb
mov
repnz
movsl
loopne
mov
test
cwtl
fabs
inc
fwait
inc
mov
inc
or
movl
idivb
fsubrp
mov
iret
adc
push
fs
push
push
stos
test
rcll
fsubrl
popa
or
mov
dec
hlt
mov
in
shr
cmp
loopne
xorl
pop
pop
mov
add
and
sbb
stos
pushl
mov
call
cmp
mov
jl
fs
adc
sti
sarl
mov
in
jae
dec
adc
fiadds
out
adc
and
aad
adc
pop
pop
arpl
movsb
or
leave
xchg
pop
dec
ljmp
sub
adc
stos
inc
popf
xchg
or
fbld
mov
pop
or
mov
stos
dec
js
xor
xor
adc
sub
dec
push
imul
fldt
mov
pop
aaa
test
fidivrs
ljmp
loopnew
push
sub
sub
dec
gs
fnstsw
fnsave
xchg
and
xchg
lock
xor
push
out
xor
subl
stc
repz
mov
stos
cmp
jle
jle
add
xchg
pop
aas
ret
shll
in
jns
in
das
test
sahf
xchg
mov
mov
pop
pusha
cwtl
sbb
and
out
xchg
das
push
sarb
pushf
xor
insl
jno
mov
push
and
iret
or
out
stos
push
outsl
ret
sub
out
xor
mov
subb
repnz
mov
jle
and
push
test
jae
push
aas
scas
push
fwait
repz
dec
aas
test
sub
and
fisttps
mov
mov
xchg
data16
clc
push
xor
fcomip
mov
sub
lds
jne
push
ret
inc
loopne
sub
mov
push
popf
xchg
loopne
insl
push
and
cmp
add
sub
push
testb
loope
fcompl
sti
inc
inc
mov
pushf
push
dec
rsm
sub
mov
adc
fistps
stos
stc
aam
jecxz
lock
mov
stos
add
jb
rcll
test
dec
cmp
sub
or
loopne
cmp
push
stos
ja
cmp
mov
mov
cmp
lret
mov
movsl
out
test
push
xorl
dec
fisubl
jmp
mov
fadd
std
out
or
mull
test
out
rcrb
fwait
inc
movsb
cwtl
mov
loope
xor
aad
addr16
mull
xor
pop
mov
xchg
cmp
jmp
jecxz
mov
in
xchg
or
sub
rcrl
mov
xchg
call
mov
pop
dec
inc
or
inc
push
xlat
je,pn
or
sub
push
inc
into
jb
enter
into
subl
rorl
sub
ficomps
pusha
mov
jns
sar
push
and
es
mov
in
or
fldenv
adc
aaa
shrl
push
xchg
sbb
in
into
inc
jnp
sbb
sbb
push
dec
mov
or
aaa
aaa
clc
sahf
cmpsl
adc
push
mov
loope
fisubl
mov
out
mov
push
pop
dec
fsubrs
mov
int
mov
mov
das
sub
inc
mov
xor
pop
xorb
sbb
bound
jg
mov
fdivl
and
fldcw
jle
or
std
and
orps
mov
popf
lret
in
test
mov
adcl
in
shrl
fstps
or
lods
in
jns
jmp
mov
and
push
jno
imul
push
dec
fisubrs
and
outsl
jg
shrb
pop
sub
cli
inc
nop
mov
aaa
pop
xchg
push
push
aas
add
add
out
leave
push
adc
aas
lret
sbb
scas
cmp
jle
cs
push
and
leave
nop
ret
mov
je
test
xor
div
push
stc
xchg
jae
mov
sbb
fistpll
scas
cmp
adc
adc
loope
ds
inc
sbb
bound
loopne
mov
add
mov
push
xor
test
lods
xor
pop
not
sti
ja
mov
mov
sete
pop
hlt
fucomp
lds
or
add
xchg
repz
inc
test
mov
xorb
mov
push
push
xchg
adc
fistpl
dec
sbb
xorl
xchg
sub
insl
movsb
and
jns
out
and
jmp
dec
sbb
gs
int
mov
add
je
test
cmp
mov
fdivl
in
sbb
xchg
ss
mov
lock
cld
and
les
push
or
and
rcr
pop
int
adc
in
sbb
dec
dec
sahf
out
cltd
dec
adc
push
xor
sub
adc
sbb
sbb
sbb
inc
js
out
mov
mov
scas
ret
or
sbb
sbb
lret
push
jb
mov
ljmp
xchg
and
ficoml
adc
rorb
aas
ljmp
or
imul
popa
cmp
lods
mov
cli
xor
mov
in
lods
sbbb
jg
lret
cli
jecxz
ret
in
push
je
xor
push
xor
push
je
std
jno
jne
mov
test
xor
lcall
ror
mov
fiaddl
cmovs
cmp
jne
insb
jne
int3
bound
mov
inc
or
lods
push
es
push
test
lahf
xor
mov
dec
xlat
adc
dec
or
adc
mov
mov
jb
ja
push
sub
pop
repnz
push
pop
inc
adc
out
add
mov
cmpsb
dec
lret
push
call
and
lea
cmc
fs
sub
lea
cmp
sbb
xchg
xor
jnp
cmp
and
ljmp
jae
cmp
cmp
dec
sub
dec
cmp
jl
cltd
stos
in
ss
mov
fildll
icebp
aas
mov
lock
xor
stc
ret
cmp
pop
insb
out
leave
test
ja
fwait
lcall
mov
fbld
or
inc
sub
dec
movsb
pop
pop
les
aad
enter
repz
fwait
scas
sti
cmp
sbb
jmp
dec
rclb
stc
mov
pushl
inc
idivb
ds
sahf
lret
xchg
shrb
aaa
lret
lahf
cmpsb
jg
movb
hlt
in
adc
push
and
data16
mov
push
add
popa
sub
stos
mov
jnp
xchg
scas
mov
inc
cmp
push
mov
test
mov
ja
push
sub
xchg
out
jge
sbb
adc
mov
mov
cmp
and
arpl
scas
outsl
dec
aas
xorl
arpl
xlat
outsl
mov
add
int
daa
push
push
add
popa
dec
insl
push
test
mov
mov
pop
dec
pop
loope
stos
adc
mov
int
xchg
or
xor
fsubrs
movsl
adc
mov
xor
add
cs
jle
push
pop
mov
inc
imul
xchg
xchg
mov
std
xchg
cmc
cmc
mov
outsl
mov
call
push
add
push
xchg
mov
popf
inc
vpsrlw
push
aaa
sahf
xchg
sarl
dec
repnz
xor
aaa
scas
fnstcw
ret
pop
mov
call
shll
dec
xchg
sbb
incl
pusha
dec
fidivl
gs
jae
clc
decl
jbe
inc
sub
pop
mov
xor
adc
pop
sbb
jnp
and
nop
push
lret
mov
xchg
pop
jbe
adc
xor
jns
xchg
jb
testl
ret
test
or
lret
jle
lret
and
pop
roll
mov
out
out
pop
pop
test
pop
ljmp
push
scas
adc
jecxz
push
xchg
dec
insb
rorl
fnsave
jno
mov
add
pop
das
shl
pop
pop
push
push
inc
cmpsb
test
popa
and
add
jl
nop
movsl
ret
push
or
add
push
cmp
rolb
repz
and
push
inc
hlt
sti
pop
jb
insb
cmpsb
sbb
iret
inc
jp
nop
ja
cmp
idiv
test
loopne
cwtl
and
test
std
adc
cmpsl
dec
jno
inc
and
push
sub
mov
mov
shrb
mov
mov
push
xor
mov
hlt
test
gs
pop
or
stos
cmp
sub
rcll
sub
push
cmpl
cmp
mov
fistpll
jle
cli
repz
inc
repz
js
test
sbb
cwtl
daa
dec
icebp
in
push
dec
dec
add
sub
jno
mov
loopne
scas
lret
ds
mov
pop
rol
lods
sub
push
fisttpl
insb
sarb
pop
cmpsb
dec
xchg
pop
lock
pop
xlat
insl
imul
mov
lea
jp
fsubl
mov
push
jecxz
enter
dec
lds
in
shlb
inc
es
sbb
iret
test
popa
add
sub
shrb
mov
push
sub
dec
mov
int3
icebp
rolb
xor
stos
jo
rol
xchg
jbe
and
adc
outsl
lret
adc
faddl
mov
pop
mov
es
cmp
rorl
ds
lds
cwtl
int3
inc
or
dec
or
dec
xchg
scas
mov
pushf
into
mov
outsb
dec
mov
pop
test
pop
fldenv
or
push
dec
and
fs
fldt
jg
adc
jnp
add
lds
test
pop
lods
and
decl
insl
dec
faddl
adc
rcrb
decb
adc
cmp
xor
shlb
stos
push
push
jl
xchg
mov
mov
fs
inc
adc
data16
mov
je
xchg
inc
xchg
ja
pop
das
scas
mov
cmp
fwait
cmp
cld
xchg
lcall
lret
cmpsb
daa
ss
and
sub
or
aad
lcall
fwait
movl
popf
rcrl
dec
gs
lods
mov
lret
test
sti
int
mov
mov
mov
lret
aaa
pop
mov
shlb
jl
push
int
cwtl
sahf
lcall
inc
xlat
jnp
les
lds
push
sbb
sbb
xlat
lods
sub
xor
push
aam
jp
xlat
arpl
dec
push
jge
syscall
or
push
cmc
mov
push
enter
xchg
mov
mov
mov
stos
mov
adc
arpl
jae
ret
test
mov
ljmp
inc
mov
jbe
inc
mov
and
repnz
aas
xor
mov
std
inc
adc
add
cmp
sbb
or
sub
arpl
xchg
add
dec
inc
pusha
or
out
scas
sbb
sti
sub
bound
mov
jmp
pop
test
mov
outsb
cld
dec
pop
movsl
addr16
ror
out
ss
jle
shrb
dec
pop
rorb
fldpi
inc
jb
add
cmp
enter
imul
aaa
enter
lock
add
mov
popa
enter
imul
jno
sahf
xchg
pop
mov
mov
jle
aad
mov
adc
or
adc
cmp
or
and
out
popf
pop
cmpsb
mov
xchg
movsl
jns
cmp
jmp
mov
fimull
dec
lock
ret
inc
rclb
push
mov
xor
lret
sbb
adc
popa
pop
pop
lods
push
xchg
adc
lock
pushf
sub
out
add
mov
mov
push
add
xchg
stos
and
adc
sbb
push
movsb
sti
neg
lahf
imul
addl
inc
cmp
imul
pop
sub
and
fs
call
and
bound
jp
int3
loope
mov
ret
test
call
push
mov
and
mov
jne
lods
xlat
and
push
fisubs
push
out
cmpsl
mov
cmpsb
mov
adc
jne
loopne
inc
lret
mov
arpl
movsb
push
and
les
adc
cld
arpl
js
sbb
pusha
popf
jge
cmpsl
or
push
inc
insl
mov
lahf
rolb
push
cwtl
add
pop
rcl
mov
daa
jb
sti
adcb
shll
add
xlat
mov
adc
cmp
adcb
psubb
insb
sub
in
call
inc
scas
daa
add
sub
sbb
data16
in
and
mov
or
lods
and
xchg
cmc
mov
xchg
cmp
ret
sbb
stc
and
sbbl
test
sbb
mov
push
sub
mov
divl
jmp
or
test
sub
xor
inc
outsl
xor
rcll
stc
std
int
xor
mov
js
jns
hlt
dec
mov
ret
add
jnp
mov
jno
lods
jg
push
push
push
mov
pushf
mov
rorb
cltd
sti
add
pop
mov
mov
adc
push
mov
jnp
adcl
push
cld
xchg
into
jbe
xor
ja
mov
and
repnz
push
inc
or
xorb
wbinvd
dec
jo
inc
or
sbb
rorb
mov
adc
mov
cwtl
sub
mov
dec
insb
mov
or
adc
fstpl
lea
push
jb
out
repnz
movsb
mov
andl
jbe
outsl
xchg
mov
in
std
into
ljmp
subl
cmp
mov
out
outsl
adc
adc
ret
pop
mov
fdivrs
sub
addr16
push
or
mov
mov
inc
xchg
pop
inc
movsb
mov
xor
shll
unpcklps
cwtl
pushf
and
daa
inc
pushf
movsl
pop
imul
mov
and
xor
je
cli
gs
icebp
cld
xor
shr
es
mov
xchg
adc
inc
cmpsl
lea
xchg
mov
out
lods
mov
jne
xchg
adc
lcall
pop
shll
enter
int3
pop
push
cltd
jno
arpl
mov
leave
inc
ds
hlt
and
out
mov
das
mov
arpl
sahf
add
fadds
je
dec
sbb
enter
in
or
les
add
aaa
xorl
mov
cmp
push
mov
jb
or
icebp
icebp
rcll
mov
cltd
sbb
out
shlb
lea
push
inc
adc
pushf
jl
rcrb
pop
push
std
ds
pushf
lods
inc
or
and
adc
and
mov
or
sbb
add
fcmovbe
mov
in
adcl
mov
or
mov
ror
cld
xchg
rcrl
mov
inc
call
str
and
and
gs
lods
mov
imul
mov
cmpsl
add
data16
gs
jb
pop
je
int
pushf
fwait
cmp
sub
frstor
pop
jo
in
aas
pop
push
sub
xorl
data16
pushf
jg,pt
daa
dec
dec
jno
lret
jge
pop
mov
dec
fs
loopne
xchg
pop
pop
movsb
pushf
rcl
mov
mov
movsb
repnz
xor
mov
sbb
jl
sbb
lds
mov
jl
cmp
cmp
addr16
pop
into
into
xor
movsb
mov
inc
pop
imul
xor
jle
daa
pop
mov
or
xor
rolb
and
push
gs
leave
repnz
das
das
sti
scas
bound
sub
jp
scas
mov
ja
cmp
xchg
mov
or
push
lods
mov
cmp
sub
sub
push
and
mulb
jl
and
sbb
out
push
dec
daa
jb
mov
cmp
sbb
jo
mov
js
add
mov
sbb
push
and
aam
adc
les
xchg
mov
jle
mov
test
mov
jmp
cwtl
clc
cmpsw
cmp
push
movsl
rcll
daa
gs
cmp
or
in
xchg
imul
cmc
outsb
xor
mov
in
jb
pusha
hlt
xchg
push
push
aaa
sub
lods
push
lock
xor
xor
in
fbstp
cmp
test
adc
inc
and
std
jo
insl
jl
outsb
dec
mov
sub
orb
inc
dec
add
inc
lock
xor
pop
xchg
mov
mov
sti
adc
jno
sbb
mov
aaa
inc
sub
cmp
insl
add
mov
dec
fcmove
sub
mov
popa
inc
mov
shlb
movsb
mov
in
jmp
or
mov
mov
aam
rcrl
call
daa
mov
loope
rolb
and
add
mov
gs
testl
and
dec
inc
cmp
sub
loope
scas
xor
rcrl
jae
stos
popf
cmp
out
add
mov
js
mov
mov
rcll
or
enter
pop
cltd
cmpb
sti
ror
xchg
lock
pop
xchg
or
mov
inc
dec
add
jb
pop
sub
ljmp
sahf
fisttpll
cli
arpl
jbe
aas
xchg
mov
pop
push
jo
fstpl
pop
push
stc
pop
int3
lcall
ret
and
and
and
dec
mov
cld
and
and
lcall
jnp
fiadds
pop
mov
and
push
mov
or
xor
mov
in
mov
cli
je
shll
inc
daa
mov
jle
xor
pop
dec
ds
and
sbb
sub
adc
jp
inc
xlat
es
in
adc
int
jno
jle
push
push
sub
nop
out
sbb
outsb
jbe
jp
and
insb
mov
in
lods
fnstcw
ljmp
mov
pop
insl
jp
adc
xor
dec
add
in
mov
jnp
mov
stos
xor
cmp
dec
dec
sbb
push
int
fwait
adc
aaa
andl
iret
xor
fstpl
adc
jo
cld
add
test
out
sbb
insl
mov
addr16
dec
jo
jo
int3
mov
mov
imul
push
and
js
pop
push
jmp
inc
orb
sbbb
xchg
je
jns
sysenter
stc
pop
sub
jl
jne
rcll
movsl
mov
js
inc
mov
lret
add
jns
pop
push
mov
fdivl
mov
cmp
jno
outsl
pop
lods
push
jmp
jns
nop
pop
scas
or
icebp
pop
or
fcmovnb
pop
lahf
xor
and
xlat
movsl
ffree
mov
or
int
int
cltd
arpl
lods
and
sbb
out
push
daa
adc
addr16
jae
xor
aaa
dec
rcll
movsb
mov
cli
pop
mov
pop
cltd
inc
in
subl
arpl
negl
sub
xor
lods
inc
add
push
in
cmp
adc
push
aaa
icebp
cmp
loop
xor
mov
mov
or
sbb
daa
pop
test
jecxz
sbb
and
or
jo
mov
lcall
pop
sti
inc
mov
push
pop
fs
mov
cmpsb
mov
mov
dec
mov
push
inc
inc
add
insb
mulb
cli
jo
sbb
and
jecxz
lea
insb
fcomi
push
lea
dec
mov
loope
mov
sbb
es
repnz
aas
xchg
in
add
rcrl
inc
xor
jbe
pushf
inc
stc
jns
mov
sbb
lcall
cmpsb
lret
sub
cld
sbb
popa
daa
sub
adc
and
outsb
push
mov
aam
or
adcb
addr16
outsl
and
imul
mov
sub
mov
icebp
ss
push
sub
mov
dec
mov
sbbl
jge
adc
call
dec
or
bound
xor
push
aad
lret
mov
push
lret
xor
subb
jmp
mov
addb
fbld
test
aam
insl
shrb
cmp
push
aad
inc
dec
lods
ljmp
dec
mov
into
cmp
loop
pop
push
mov
mov
shlb
adc
rcrl
inc
addr16
std
iret
fsubrl
xor
mov
out
add
sub
mull
cli
mov
add
gs
push
insb
mov
pusha
test
movsl
mov
xor
sbb
mov
sbb
push
push
mov
aas
outsl
jecxz
xor
movsl
dec
adc
push
lds
aas
icebp
or
sbb
int3
movsl
dec
pushf
mov
sub
mov
dec
lcall
cmp
in
push
mov
adc
mov
inc
scas
xchg
int
mov
or
xor
jnp
stos
push
fsts
xor
scas
or
and
push
inc
or
int
mov
sbb
cmp
inc
out
hlt
or
mov
in
sbb
push
mov
mov
outsb
or
gs
jae
mov
lcall
or
fbld
adc
in
or
push
sbb
adc
mov
jle
or
fs
popf
popf
mov
xchg
cmp
arpl
clc
mov
mov
imul
es
push
xor
in
jle
push
push
fcoms
cltd
stos
fistl
add
jb
mov
mov
and
popf
push
or
fbld
cmp
test
dec
xchg
outsl
test
and
mov
push
test
in
dec
mov
or
jl
or
stos
mov
xchg
pop
mov
popf
or
cmc
in
mov
repnz
pop
in
sti
push
jecxz
arpl
loop
adc
loop
je
mov
sarl
adc
mov
aam
pop
add
xchg
xor
add
push
lret
ss
adc
imul
mov
inc
mov
ja
repz
sbbl
xor
or
pusha
ja
dec
add
mov
push
jne
mov
out
xchg
pop
inc
ljmp
jae
xchg
out
add
fildl
sbb
js
jno
pop
pop
mov
cmp
push
and
cwtl
or
pop
push
jle
sub
mov
mov
xor
leave
es
xchg
jns
or
ljmp
sahf
arpl
fdivrp
inc
pop
push
inc
jae
aas
xchg
sahf
adc
cmp
jae
dec
jg
mov
mov
in
sbb
int3
js
jno
dec
cwtl
xchg
cmp
mov
int
mov
clc
cmpsb
sub
inc
push
cmc
sahf
lret
mov
sub
inc
xchg
lock
test
ds
aas
add
xor
cli
and
sub
add
sub
mov
push
cmp
popf
cmpsb
jecxz
loop
aas
mov
xor
dec
mov
jbe
inc
aaa
push
jp
jge
outsl
test
cmp
cmp
test
lret
outsb
mov
movsl
mov
lcall
fbstp
in
dec
sbb
mov
jg
xor
popa
roll
sbb
sbb
inc
jp
dec
lcall
cmp
sti
pop
sbb
add
fisubs
cld
and
pusha
dec
add
mov
enter
out
pop
cmp
xchg
pop
push
shr
in
hlt
push
jns
pop
cld
shll
mov
scas
out
pop
daa
push
xor
adc
rorl
cltd
insl
outsl
sub
lock
iret
and
fstpl
add
out
pop
push
gs
mov
xchg
lock
and
and
mov
je
test
lods
movsb
stc
dec
shlb
jge
mov
sbb
pop
cmpsb
push
pop
les
stos
mov
mov
mov
push
fwait
or
or
or
hlt
cmp
mov
mov
pop
sbb
stos
test
adc
lock
dec
or
lea
adc
sub
repnz
stos
fiadds
subl
jae
dec
mov
xchg
outsb
push
add
mov
mov
movsb
aam
dec
mov
sahf
push
sbb
arpl
es
jl
inc
jno
aad
and
push
hlt
cmp
jne
mov
mov
fnsave
gs
mov
ret
ds
daa
hlt
icebp
fs
or
mov
push
leave
push
add
lock
ret
aaa
xchg
lds
mov
adc
daa
lds
dec
push
push
ds
outsb
jp
das
mov
imulb
cmpsb
repz
pop
insl
int
xchg
mov
xchg
xor
inc
fwait
mov
and
nop
or
mov
and
jmp
jnp
ja
jns
stos
es
and
lock
cmp
or
xchg
loope
adc
jp
inc
ret
pop
lock
out
cmpsl
cmpb
push
pop
mov
mov
adc
call
xor
and
icebp
fwait
pop
stos
fidivrl
jle
mov
in
mov
mov
loop
mov
pop
adc
jl
punpcklbw
push
push
test
cmp
mov
addl
mov
repz
pop
in
inc
out
call
fcmovnb
lcall
xlat
mov
dec
imul
jns
and
xchg
sbb
mov
mov
xorl
or
xor
stos
repz
xchg
dec
fiadds
or
sbb
scas
inc
outsl
mov
inc
push
subb
cld
lret
pop
mov
pop
loop
fs
xchg
inc
pop
jo
inc
pop
adc
push
cmc
nop
pusha
insb
xor
mov
or
scas
outsb
mov
xchg
std
ja
xchg
pop
test
out
imul
pusha
scas
or
daa
sub
stos
cs
push
cli
fmull
orl
mov
ud2
push
cmp
dec
dec
sti
lods
stos
cwtl
outsl
popf
int
ret
cmp
insb
jge
xchg
test
pop
nop
cmpsb
rclb
fst
add
jno
rcl
inc
pop
inc
or
cmp
push
mov
insl
dec
add
popf
jge
inc
comiss
aaa
dec
mov
pop
aam
fsubr
loop
lods
rcl
aad
fmull
adc
cltd
jns
stc
push
es
int3
loopne
cmp
jae
sbb
orl
mov
xchg
inc
push
mov
fcompl
clc
std
adc
jns
out
xchg
dec
outsl
mov
xor
cmp
xchg
insl
dec
mov
shrb
mov
lcall
std
scas
mov
adc
mov
sub
dec
repz
push
sti
leave
sbb
ljmp
ljmp
cmp
rcrl
outsb
add
pushf
lea
in
lret
xchg
mov
daa
add
pop
sbb
cmp
or
pop
ret
out
jecxz
subb
arpl
bound
cmp
push
push
mov
test
mov
push
jb
loopne
sbb
xor
pop
push
data16
negb
std
ljmp
sub
xchg
pop
cmp
out
ljmp
xchg
mov
and
stc
mov
jb
enter
je
sbb
lcall
or
cmpl
pusha
sbb
pop
jbe
pop
adc
or
push
fsubrs
sarb
xor
xchg
hlt
fisubs
lret
dec
xchg
ss
mov
add
xlat
push
cwtl
andb
jnp
cmpsl
xor
stc
fiadds
fistl
mov
pop
mov
idiv
js
test
loope
daa
dec
clc
lods
push
andb
ds
test
test
sub
ljmp
pop
ss
add
dec
lock
ret
xchg
bnd
mov
sarb
rclb
sbb
mov
xor
mov
shll
fisubs
dec
add
push
dec
repz
rcrl
pop
mov
movsl
js
mov
sub
push
lret
cmp
les
mov
mov
aas
mov
xchg
outsb
push
xorb
lods
sbb
sub
ss
jp
pop
dec
sbb
mov
and
sub
fstpt
adc
dec
adc
addr16
pop
jmp
fidivl
call
popa
scas
imul
ds
pop
in
jp
mov
jle
imulb
lds
sub
jns
scas
ret
ljmp
movsb
xchg
ret
cmp
pop
pop
cmp
sub
mov
cmp
sbb
mov
xor
icebp
cmpsb
data16
stos
mov
mov
test
mov
jne
and
pop
imul
dec
mov
mov
pop
push
ss
xor
sub
xchg
movsl
push
sti
adc
push
add
pop
fs
je
mov
ret
repnz
sbbl
das
ss
dec
aad
mov
fidivrl
inc
cwtl
ljmp
fstpl
orl
rol
inc
xor
aam
mov
aas
aad
into
dec
cmp
repnz
pop
add
mov
aas
lock
lahf
jne
movsb
pop
pop
inc
fidivrs
in
call
mov
or
dec
addr16
test
mov
pop
shl
add
jo
sbbb
cmp
popf
cmc
mov
sbb
mov
addr16
rcrb
add
jns
xlat
aas
adc
mov
and
pop
pop
push
subb
cmpsb
pushf
jp
mov
les
mov
rcrl
inc
cli
sub
pop
into
insb
pusha
imul
push
and
or
adc
pop
xchg
mov
mov
push
sti
ret
sub
sbb
xor
pop
outsl
cmpsl
aad
or
pop
rorl
lret
hlt
and
call
aas
xor
sbb
aaa
inc
or
lds
in
popa
andl
cmp
cmpsb
mov
cmpsl
fistpll
fs
pusha
mov
maxps
outsl
pop
popa
and
mov
pop
shr
fxch
jge
cmp
xor
jg
xor
icebp
popa
mov
mov
in
icebp
cmp
ret
adc
jno
cmpsb
xchg
pop
ljmp
fisttps
or
lods
inc
ret
insl
xor
in
push
out
xor
in
lret
imul
sub
xchg
mov
sbb
push
dec
mov
jbe
inc
negl
fadds
addl
jnp
faddl
push
mov
dec
jno
cmp
lock
mov
icebp
dec
inc
sub
push
fcoms
in
stos
mov
ss
push
xor
adc
cmp
add
aad
addb
out
or
call
lret
out
add
xor
jmp
add
imul
and
loope
inc
fisubrs
mov
xchg
inc
xlat
loop
out
sbb
add
jae
icebp
mul
mov
dec
leave
loope
push
inc
mov
pusha
insl
adc
stos
xor
lcall
push
addr16
sbb
ret
lods
es
jmp
or
test
mov
cmp
repnz
in
in
rol
insb
fisubrs
cs
loopne
nop
and
leave
mov
xor
in
sub
es
js
cmp
sub
sbb
fldl
dec
dec
sub
cmpsl
add
enter
shlb
dec
jo
pop
sti
xor
or
aaa
mov
faddl
fnstenv
iret
imull
enter
stos
shrb
ret
adcb
push
cmp
in
or
cltd
mov
fsubs
rcrl
test
sbbl
add
xchg
cmp
sbb
xchg
xchg
lcall
out
jne
lret
loopne
test
mov
mov
lock
in
lcall
into
adc
jmp
cmp
les
cmp
les
data16
lahf
jo
xlat
popf
stc
xchg
cwtl
daa
jno
leave
jbe
xor
cld
xchg
dec
pop
dec
in
repz
int
call
cmp
das
pop
add
pop
push
cmp
roll
icebp
lcall
mov
int
cmpsb
test
mulps
cmp
pop
loope
das
adc
push
xchg
ljmp
sbb
dec
ror
addr16
jmp
and
adc
ss
outsl
aad
inc
mov
popf
sbb
stos
lret
mov
in
mov
pop
das
fmulp
mov
arpl
adcl
pusha
xor
xchg
push
jne
out
xchg
into
xchg
int3
cmp
lahf
popf
nop
bound
nop
mov
shlb
inc
rol
jne
aas
jae
insl
and
fsts
push
sub
jne
and
xchg
call
mov
movsl
aas
mov
insl
xchg
in
in
les
or
cltd
xchg
test
inc
std
mov
test
push
mov
adc
outsl
jno
cmp
outsl
cmpsb
icebp
cmp
fistpll
leavew
sub
sub
cmp
add
mov
ss
iret
lret
add
ret
enter
out
jae
mov
stos
adc
xchg
lret
out
adc
flds
sbb
sub
sahf
sbb
cld
inc
push
sahf
inc
sub
out
loopne
lock
push
shrl
adc
add
xchg
es
mov
pop
sbb
aad
inc
popa
jecxz
jae
cmpsb
scas
insb
jmp
sbb
repz
mov
popa
and
sub
and
mov
filds
test
ret
fs
repz
movsb
jl
pop
outsb
add
outsb
lock
lcall
test
or
xor
dec
std
inc
dec
out
jb
scas
loope
pop
mov
mov
fbld
fld
pop
pop
cmp
xchg
adc
sub
mov
stc
les
jo
or
jg
lds
inc
xor
xchg
js
arpl
ljmp
or
out
repnz
sub
push
sub
pop
fbld
mov
not
sub
jnp
std
fs
aad
xor
insb
push
in
add
orl
pop
sbb
jae,pt
lret
and
lea
pop
and
cltd
sub
cmp
adc
es
cmc
cld
pop
jns
adc
mov
cmp
or
cmp
jae
icebp
mov
mov
dec
shll
jl
aas
bound
test
xchg
mov
enter
xchg
mov
pop
iret
fmull
gs
inc
xor
add
xchg
mov
push
mov
cmp
aas
dec
arpl
jno
and
pop
add
xchg
dec
xchg
sbb
jmp
mov
push
lds
fiadds
xlat
out
mov
mov
fnstcw
mov
xor
adc
sub
push
push
xchg
xchg
push
fcmove
pop
popf
test
cmp
arpl
add
in
add
cld
loope
sbb
mov
sub
xor
fimull
sti
and
test
add
or
ds
or
sub
icebp
cmp
pop
movsb
mov
xchg
adc
insb
mov
sbb
ss
push
cltd
daa
jbe
push
or
mov
pop
pop
pushf
addr16
jp
mov
xor
dec
dec
or
xchg
sbb
mov
ja
adc
ja
xchg
add
xchg
sbb
fs
jne
nop
push
mov
out
mov
lock
imul
and
push
pop
pop
and
movsl
jg
dec
xlat
jmp
pushf
mov
dec
mov
push
and
dec
xchg
push
xchg
jnp
mov
fs
gs
sbb
lods
or
cmp
pushf
or
lods
mov
lcall
dec
add
incb
mov
hlt
inc
loop
jge
loope
dec
loopne
je
xor
mov
push
negb
arpl
cwtl
lods
int
push
clc
pushl
pop
lds
pop
adc
mov
call
lcall
mov
jp
pop
int3
out
lods
dec
into
xchg
cmp
pop
push
xchg
sub
cs
pop
test
pop
xchg
jge
les
int
fadd
ret
mov
insl
dec
aas
or
mov
repz
jb
test
push
pop
cmp
pop
push
mov
dec
ja
and
ja
dec
lods
test
aas
lret
es
sbb
inc
adc
dec
mov
iret
pushf
inc
dec
fisubrl
pop
negb
xchg
loop
push
mov
mov
enter
add
push
lret
loopne
test
inc
ror
mov
xlat
pop
test
xchg
add
out
cmpsl
sbb
rorb
into
adc
mov
xor
inc
aas
inc
push
dec
and
add
movsb
mov
nop
add
out
pop
call
insb
xchg
out
in
outsb
jno
xor
hlt
lds
xchg
fcmovnbe
mov
xor
mov
aas
mov
popa
ja
loopne
aas
xchg
mov
or
subl
jnp
sahf
or
std
mov
jmp
ret
rorb
subl
xbegin
popa
andb
mov
lret
flds
cmp
mov
mov
mov
inc
inc
repnz
pop
sub
sub
cmp
xor
shl
push
sahf
xchg
jo
popa
mov
cmpsb
out
orb
mov
out
mov
pop
mov
inc
fs
mov
in
loope
or
icebp
sub
test
flds
test
or
popa
shll
shrl
scas
dec
jmp
cmpsb
push
sub
push
add
repnz
jno
stc
cmp
ret
mov
inc
add
cmc
mov
jbe
shl
push
adc
lock
movsl
sbb
aas
sbb
pop
int3
ret
mov
push
cmpsl
mov
movsb
addr16
jo
and
jbe
call
invd
mov
mov
push
and
out
lods
fcmovnu
gs
mov
xchg
pop
pop
dec
dec
lods
inc
js
je
dec
pop
out
lret
aam
out
sahf
in
int3
into
inc
enter
into
stos
dec
mov
xchg
scas
hlt
xchg
fstl
ds
dec
cmp
mov
add
fwait
xor
imul
mov
movsl
pop
xchg
ror
mov
xlat
nop
sub
lcall
xor
mov
fisttps
and
aaa
inc
push
jns
loopne
mov
pop
inc
call
ja
cmp
cmp
int
stc
insb
adc
inc
inc
cmp
mov
or
adc
push
mov
pop
fiaddl
das
xlat
pop
in
cmp
pop
sub
dec
out
lods
out
sub
fldcw
mov
fwait
imul
dec
cld
aam
inc
sbb
scas
dec
jae
xor
jecxz
xchg
call
cltd
adc
scas
clc
or
movsl
and
int
xchg
push
jne
mov
imul
push
out
repz
popf
aas
sbb
sarl
loopne
xchg
push
pop
pushw
cmp
xchg
and
mulb
mov
ds
stos
divl
push
ja
aas
or
add
mov
xchg
iret
out
lods
fwait
lcall
mov
in
jb
push
push
repz
pop
push
call
pop
lds
test
jae
xchg
pop
pop
lcall
inc
inc
stos
insl
and
out
xlat
adcb
xchg
sti
cltd
cmp
andb
addr16
inc
adc
sbb
stos
or
push
and
ja
jo
jns
in
fstl
cmp
sbbb
test
les
icebp
add
push
int3
or
mov
push
lcall
into
jb
repz
rcrb
sti
movsl
xor
cld
jl
mov
nop
out
pop
shl
jno
push
sbb
sub
adc
push
adc
adc
ja
ret
xor
cmpsl
mov
mov
popf
dec
add
adc
out
out
jmp
es
jle
lret
and
subl
cmc
loope
xchg
pop
sahf
jge
lcall
pop
xlat
aas
sub
pop
ss
testl
mov
movsb
sub
pop
xchg
xchg
fnsave
dec
fadd
fcoms
outsl
inc
jo
in
jp
pop
dec
cli
out
inc
cmp
xor
jae
in
leave
cli
inc
cs
test
out
jne
and
int3
xchg
stc
fdivrl
pop
fdiv
aad
adc
push
ja
xchg
fcomps
sub
xor
push
jg
es
dec
jnp
adc
or
stc
daa
xchg
mov
lods
fsubrs
xor
jae
add
xor
and
cmpsl
daa
fidivrl
sbb
pop
push
mov
mov
jmp
jb
mov
dec
xchg
mov
mov
and
sbb
cwtl
dec
mov
sti
in
roll
loop
subb
psadbw
decb
add
imul
xchg
clc
mov
insl
shll
call
push
lahf
sub
add
and
movsl
mov
lds
mov
insb
mov
imul
xor
cmc
cs
mov
mov
adc
push
push
addr16
mov
cwtl
fcomps
dec
push
dec
lcall
dec
cmp
cmp
sub
pop
mov
mov
sahf
leave
push
adc
xor
std
cld
push
hlt
push
lret
push
lret
sbbb
push
xchg
lret
sbb
sbb
stc
decb
pop
movsl
fcompl
jns
dec
rcr
or
mov
dec
pop
cld
test
pop
jp
scas
rcl
in
dec
out
cmp
pop
mov
mov
pusha
lods
pop
in
js
dec
iret
imul
jp
ret
cltd
bound
dec
out
inc
out
aad
xchg
add
mov
aad
sbb
dec
rcll
xor
mulb
call
xchg
aam
stos
lods
fwait
jle
out
add
insl
ss
xor
insb
xchg
mov
push
pop
lds
xor
orl
jmp
loopne
mov
add
scas
mov
lret
push
sti
sub
adc
cld
inc
outsb
push
inc
pop
adc
movsb
pusha
outsl
aad
adc
push
shll
addr16
in
test
dec
push
cwtl
popa
sbb
enter
fistpll
inc
fcoml
push
cmpsl
xor
xchg
lahf
mov
pop
leave
push
inc
mov
loope
pop
pop
xchg
movsl
pop
xchg
pop
xchg
and
mov
loopne
mov
sahf
dec
shlb
cld
dec
shlb
mov
outsb
jne
pusha
adc
insb
and
jl
jl
cs
xor
mov
pop
xor
add
nop
mov
lret
add
into
jmp
pop
sbb
insl
sar
and
push
leave
pop
sub
cwtl
mov
rorb
push
lds
aad
fidivrl
or
movb
stos
jp
sbb
testb
inc
sub
push
lcall
xchg
lods
adc
or
loop
or
adc
jo
sbb
mov
lret
pop
jb
les
into
inc
dec
out
cwtl
stc
cmpsl
test
les
mov
sarl
xchg
sti
xor
shll
add
pop
xor
icebp
roll
call
cmp
pusha
fxtract
lret
fbstp
push
les
and
push
pop
adc
push
rorl
add
pop
inc
xchg
sbb
pusha
push
xchg
lock
loop
outsb
stc
xchg
outsb
cs
mov
subl
stos
and
xchg
cmp
imul
repnz
lods
xchg
add
inc
push
lahf
daa
mov
xor
xchg
push
ret
xor
cmp
jnp
iret
pop
xor
pop
sub
cmp
movups
add
jge
mov
nop
adc
and
xchg
dec
cmpsl
sub
in
mov
xor
mov
jbe
mov
not
std
pop
in
insb
dec
test
pop
test
int
sbb
inc
pop
mov
mov
or
mov
je
repz
imul
fadd
or
push
scas
push
adc
gs
sub
sbb
push
lods
sub
bound
push
sub
adc
addr16
je
js
mov
fwait
mov
pusha
xchg
int
mov
mov
inc
mov
stos
roll
rclb
add
ror
xchg
pop
cmp
add
jo
pusha
jle
rolb
aaa
adc
mov
dec
lods
xor
scas
testb
push
jp
push
xchg
lock
mov
jo
test
lcall
sbb
in
inc
add
ja
orb
xchg
cmpsb
xor
mov
jmp
adc
mov
stc
adc
cmp
xorl
int
ja
es
mov
sahf
lcall
sti
repz
js
mov
or
mov
nop
sbb
push
jmp
ss
xchg
push
mov
pop
cli
jp
add
in
out
outsb
xlat
imul
shlb
inc
fldt
inc
push
clts
es
int3
arpl
sub
hlt
xchg
pop
xchg
xchg
xor
nop
add
stos
in
mov
pop
lret
pop
mov
inc
pop
sbb
pusha
inc
fbstp
pop
stos
pop
repz
push
fistl
clc
cwtl
xchg
xchg
xlat
and
xchg
mov
jne
sub
mov
jns
in
shr
sahf
mov
retw
fists
fcompl
pop
push
int
arpl
and
sti
mov
popf
or
cmc
movl
sub
aad
and
mov
mov
ljmp
test
push
cmp
js
hlt
ret
push
push
es
test
sti
arpl
pushf
ss
cmp
fisubrs
pop
mov
ret
mov
xchg
or
stos
jae
bnd
jle
ret
sahf
repnz
lret
dec
xor
pop
xor
jb
cmp
mov
call
ljmp
ds
xchg
or
mov
jo
clc
sti
fdivrl
call
lods
xchg
int
cli
and
test
sub
pop
je
xor
lahf
shrd
addr16
jge
cmp
adc
cmp
mov
sbb
lea
add
gs
decb
add
fidivrl
sbb
pop
xchg
jnp
add
xor
push
mov
pushf
fadds
test
leave
pushf
insl
fdivs
div
out
pop
cmpsl
mov
out
add
xchg
movsl
in
cltd
lods
maskmovq
testl
test
cmpsb
mov
mov
aam
call
out
imul
add
xchg
inc
mov
lret
jmp
mov
pop
pop
xor
xchg
test
mov
lods
jle
add
movsl
stos
aam
incl
inc
shr
stc
fbstp
repnz
dec
aaa
sbbb
mov
lods
jae,pn
sbb
fstpl
push
testb
pop
fwait
inc
aas
add
inc
cmp
adcl
and
inc
cmp
popa
sub
inc
push
sub
mov
aam
jnp
pop
stos
enter
add
imull
push
sub
inc
xor
adc
pop
and
add
push
jb
push
mov
mov
outsb
iret
pop
repz
xchg
fdivs
scas
adc
imul
fisubs
pop
jge
add
daa
popf
outsl
push
and
inc
arpl
hlt
popa
pop
xor
arpl
std
shlb
cmp
cmp
mov
adc
push
jo
mov
sbb
push
in
cmp
nop
testb
mov
pop
icebp
gs
decl
or
mov
pop
push
rcr
sub
dec
movsl
mov
push
sub
inc
xor
addr16
mov
lock
cmp
popa
add
pusha
xchg
and
sahf
pop
or
xchg
in
jle
imul
shrb
xchg
fcmovnb
clc
mov
cmpsb
inc
jns
ret
inc
ret
and
icebp
nop
lret
xchg
mov
ss
daa
push
xchg
fidivrl
loop
dec
sbb
jno
mov
jb
popa
mov
das
jg
shlb
jno
stos
mov
jmp
or
push
push
lds
loope
aad
xor
push
std
jae
push
enter
jne
clc
aam
mov
divb
ja
arpl
inc
rcrb
scas
inc
lcall
sbb
xchg
mov
in
dec
xor
sbb
pusha
lods
mov
lret
cli
xchg
jp
jle
push
popw
mov
push
insb
mov
outsl
lock
add
out
adcl
sub
leave
stos
jge
jg
push
test
pop
repnz
mov
ret
sub
jne
std
loopne
xchg
xor
xchg
lea
sub
pop
add
test
mov
push
pop
lods
mov
int3
rol
sub
push
and
fwait
pop
inc
xchg
shld
cmp
test
iret
es
push
mov
dec
rolb
mov
cwtl
mov
or
and
ljmp
jecxz
mov
mov
inc
push
das
ljmp
mov
lds
xor
sbb
mov
je
pop
and
das
lcall
aam
xlat
rorl
out
push
test
in
pushf
pusha
into
pusha
cmp
ret
or
cli
ret
sub
cli
xchg
stos
mov
sarl
fimuls
in
xor
xchg
jns
jbe
xor
push
sbb
notl
jp
xchg
das
test
jecxz
aam
in
fistps
add
mull
loope
dec
dec
test
fisubs
ror
xorb
addr16
test
fisttpl
sub
jl
popa
push
jmp
mov
outsl
movsl
mov
rcrl
ja
cmp
out
gs
fsub
mov
push
std
mov
mov
mov
fcmove
jmp
aam
pop
xchg
dec
sub
insl
loope
mov
fidivrl
lods
and
in
mov
cltd
fst
sub
in
in
sbb
fadd
add
xchg
and
mov
pop
call
in
sub
mov
int3
add
mov
fldl
shlb
scas
imul
icebp
xor
mov
xor
mov
mov
sbb
mov
aad
lret
jb
mov
and
imul
mov
add
jl
mov
push
das
xor
push
sub
in
xor
xor
test
test
mov
clc
lods
and
into
das
xchg
push
rclb
xor
jp
mov
ficoms
jmp
ss
adc
rcll
loop
jp
lret
cld
xor
xchg
jmp
or
adc
xchg
es
jnp
aas
jo
xlat
mov
out
ds
adc
pop
xor
mov
adc
cs
mov
shrl
xor
imul
ljmp
out
loopne
in
imul
jo
dec
mov
arpl
jno
and
and
jl
jge
push
xchg
xchg
xchg
pop
inc
or
push
movsb
lret
stos
test
adc
std
or
das
or
scas
mov
stc
shrb
cmc
lret
test
mov
rcrb
mov
imul
lock
jne
das
sbb
in
xor
push
pop
lret
lcall
xchg
fcoml
inc
fistl
lret
inc
lret
xor
ja
jmp
xor
cmpsl
mov
je
cmp
mov
sbb
sub
stos
insl
dec
rol
in
cmpsl
pusha
mov
cmpl
lock
test
cmp
jle
jp
dec
and
xlat
fdivp
mov
lahf
sbb
ret
imul
sbb
cmp
dec
push
and
inc
icebp
mov
cmp
mov
imul
push
add
daa
decl
xor
aam
addb
mov
test
jo
cmp
insb
and
or
dec
and
icebp
rcrb
sti
jnp
mov
mov
insl
pop
dec
and
dec
push
inc
add
jbe
sub
daa
test
mov
lahf
inc
inc
and
mov
inc
push
push
outsb
xchg
push
dec
adc
outsl
and
icebp
fs
cmp
test
pushf
mov
inc
cs
jg
rcrl
shl
cltd
mov
fisttpll
pop
inc
add
das
nop
sbb
cmp
je
pop
loopne
cmpsb
imull
adc
lds
imul
dec
lret
or
xchg
orl
mul
hlt
sub
loopne
imul
insl
mov
jae
sbb
cmp
jmp
ljmp
sbb
icebp
lock
sti
jmp
pop
pushf
push
mov
lea
loopne
es
sbbl
pop
mov
scas
mov
mov
movsb
add
sub
jne
sub
push
pop
insl
and
and
in
xor
stos
es
adc
cmp
sti
cs
mov
mov
add
lock
arpl
imul
dec
idiv
mov
cld
cmp
ja
daa
or
add
mov
fisubrl
push
inc
out
and
or
testl
add
and
pop
jns
pusha
push
jb
imul
jp
mov
dec
xchg
mov
addl
mov
addr16
ds
pop
jo
cmpsl
loope
jmp
inc
jne
adc
in
cmp
icebp
add
jnp
ret
adc
jecxz
gs
xor
jmp
cmp
jmp
add
xchg
loopne
and
icebp
sub
pop
cltd
push
imul
adc
loop
xor
inc
popf
pop
and
push
sub
fs
and
push
push
je
jp
xor
push
jne
dec
enter
sbb
ficomps
repz
sbb
stos
pop
cmp
es
ret
adc
sar
adc
inc
inc
jle
jg
rcrl
and
cmpsl
shr
lods
gs
or
push
rcll
push
mov
stos
fldcw
imul
cmp
sarb
mov
fstpl
iret
incl
mov
lret
inc
popf
mov
dec
mov
stc
mov
dec
out
mov
adc
loop
lret
lock
pop
or
xor
lods
xchg
lods
jge
inc
lock
test
jmp
mov
imul
pushl
or
cmp
xchg
pop
ljmp
cwtl
dec
jp
ret
sub
add
inc
popf
cmc
xlat
in
in
mov
pop
adc
pop
or
sub
mov
loope
pop
jo
cmc
xor
dec
data16
loope
cltd
pop
push
and
call
arpl
fidivrl
dec
adc
xchg
test
enter
and
mov
outsl
out
lret
xor
jl
cli
jp
out
xor
scas
and
jno
ja
xor
dec
lds
and
cmp
jp
out
adc
or
xlat
push
xchg
popf
testl
imul
ret
pop
and
popa
lds
aaa
setl
fdivp
sbb
ja
or
inc
push
rcll
sarl
fcomps
jp
cmp
mov
adc
dec
xchg
push
xchg
mov
dec
mov
mov
test
xchg
fsubr
iret
scas
out
or
mov
movsl
sub
js
push
test
push
sub
mov
out
xchg
mov
pop
jbe
stos
sarb
and
xchg
lret
test
ficoml
mov
push
jmp
cmpb
negb
sub
pushf
clc
cmc
dec
or
lods
out
mov
push
loopne
sub
movsl
les
mov
pushf
es
push
shrl
fnstsw
shl
push
cmpsb
sbb
cmc
push
add
jb
sti
pop
les
pop
in
adc
loop
push
movl
dec
daa
and
dec
jae
enter
mov
cmp
lods
sbb
addr16
test
fisubl
das
pusha
cmp
mov
push
pop
xor
mov
lods
sbb
mov
rcrb
and
ret
adc
jmp
push
push
ret
inc
cmpsb
fwait
aam
inc
pop
out
dec
fcomps
sar
and
cmp
cmovg
push
inc
mov
sti
es
jl
jge
mov
sbb
flds
fdivs
xchg
in
out
xchg
out
mov
dec
aas
mov
hlt
lcall
rcrl
mov
mov
xchg
jno
mov
inc
xchg
or
aam
hlt
pusha
mov
mov
or
jl
push
test
out
mov
pop
mov
mov
mov
inc
shlb
adc
ja
xchg
bound
xchg
add
push
inc
jle
jnp
push
mov
cmpsb
addr16
les
mov
pop
and
pop
pop
sub
mov
call
push
sbb
xchg
lock
shl
add
scas
push
loope
dec
xor
cli
sub
adc
inc
repz
xchg
subb
insb
outsb
sub
jnp
push
mov
imul
sarl
movsb
cltd
sub
sub
int3
push
fnstsw
sahf
imul
or
int3
cmp
mov
out
jmp
sbb
jo
inc
repnz
clc
pop
les
and
pop
or
or
cmpsl
test
lret
mov
fisubrl
xor
imul
fsub
mov
add
imul
push
push
adc
push
es
push
outsb
pop
in
and
scas
stc
cmp
mov
inc
jb
test
sbb
test
mov
pop
push
mov
xorl
jg
adc
inc
sbb
inc
addb
mov
out
pop
insb
push
out
mov
lret
scas
mov
pop
in
stos
movsl
mov
in
popa
add
ds
sbb
lods
adc
cmpsl
out
aas
std
add
stos
sbb
pop
adc
mov
push
mov
or
sbb
jmp
arpl
lahf
shl
mov
bound
inc
inc
xor
sub
imul
jp
fsts
push
decl
insb
call
sti
adc
dec
inc
fs
es
jb
xor
and
paddusb
pop
out
push
fsubrl
pusha
scas
repz
push
lea
add
test
mov
das
mov
xchg
sub
jge
loope
and
and
xchg
jle
sub
pop
pop
divb
add
add
outsl
cmp
daa
xor
rorl
lea
push
popa
lea
inc
push
loope
jg
jmp
push
iret
ret
popa
faddl
insb
jb
pop
adc
mov
imul
or
push
cmpsb
lods
scas
ret
xchg
or
pushf
fldl
cmpsl
cmovle
loope
or
inc
rcll
in
out
jnp
popw
fwait
xchg
mov
mov
fisubrs
adc
in
inc
mov
xor
div
push
shlb
fimull
out
fyl2xp1
xchg
aas
xchg
mov
fadds
xchg
cli
fcompl
pop
popa
push
fwait
ret
pusha
in
imul
test
fistpl
into
sub
mov
xor
dec
xorl
adc
scas
sub
stos
outsb
les
sub
mov
xchg
out
shlb
aad
or
call
sti
pop
push
leave
outsl
and
js
push
add
lods
or
sbbl
imul
in
jmp
in
sub
dec
sub
mov
push
push
das
jno
push
push
pushf
fs
or
and
push
cmp
std
push
sub
and
cwtl
int
push
daa
cmc
or
repz
nop
dec
xchg
xor
mov
mov
cmpl
lods
addb
push
nop
scas
pop
cli
pop
dec
pop
daa
fcmovnu
mov
pusha
push
imul
dec
sbb
movsb
and
repnz
xchg
xorl
pushf
inc
xchg
stc
and
or
ret
out
stos
in
jl
int
or
lret
jecxz
fidivl
data16
insl
add
push
jae
gs
and
mov
mov
inc
jl
xor
add
inc
and
sbb
cltd
iret
dec
cmp
mov
stc
lret
dec
enter
jnp
pop
or
dec
je
push
jns
in
pop
les
idivb
fwait
hlt
pop
push
jo
lret
mov
dec
mov
inc
mov
js
inc
imul
adc
aaa
or
mulb
lds
adc
adc
jl
rcll
into
rcrl
adc
xor
cmpsb
jge
dec
push
xchg
add
test
sbb
ja
xchg
inc
xlat
aam
xchg
mov
and
jl
push
neg
testl
jp
xor
outsl
movsl
mov
and
or
pop
sub
dec
push
push
clc
cs
adc
mov
push
popa
xchg
add
les
idivb
fwait
cmp
dec
jno
xor
fisttpll
sahf
loop
mov
sbb
ds
int
mov
and
ret
icebp
movsl
leave
adc
arpl
stos
xor
jae
outsl
js
lcall
push
sbb
pop
push
aad
pop
lahf
inc
ja
push
mov
addr16
push
sahf
int3
shr
xor
dec
and
fists
mov
mov
cmp
jno
fcoms
std
mov
fsub
jg
mov
dec
cwtl
lret
out
lahf
jno
cmp
xor
out
cmpsl
mov
mov
or
xchg
mov
es
pop
add
xlat
xchg
inc
in
cmp
jmp
fcompl
lret
ds
sub
and
push
test
in
ljmp
adc
xchg
inc
adc
or
js
aas
sbb
stos
rcrl
and
dec
imul
xor
adc
leave
inc
add
or
sahf
push
lcall
cli
in
adc
sbb
mov
inc
movsl
push
sbb
mov
xorb
movsl
pop
icebp
mov
add
mov
push
into
fwait
push
adc
inc
pop
mov
mov
test
add
and
dec
push
sbb
push
mov
sbb
xchg
mov
repnz
push
mov
popa
stos
repnz
cltd
xlat
xor
dec
mov
loope
mov
adc
xor
ss
mov
dec
pop
outsb
inc
clc
inc
aam
mov
addr16
in
lcall
lds
mov
sbb
mov
sar
mov
cmp
imul
mov
shll
sbb
pop
pop
int
xchg
hlt
or
sbb
sti
rcl
xchg
sahf
dec
mov
lret
push
in
adc
das
push
jnp
test
movsb
cmpl
mov
loope
test
ret
notl
jnp
loopne
test
gs
or
fucom
pop
and
dec
imul
jne
aaa
jg
mov
push
mov
movsb
int
enter
ret
adcl
daa
fdivs
mov
aaa
pop
in
adc
loop
pop
xor
stos
lcall
ljmp
xchg
out
cmp
xchg
int3
imul
iret
mov
and
jp
adc
popa
jge
lret
dec
aaa
adc
cmp
dec
xor
sti
outsl
jmp
sub
enter
jae
sbb
mov
iret
fucom
cmp
aam
mov
daa
cmc
sub
dec
ss
fcomps
cli
cmp
scas
xchg
shr
mov
lret
in
jl,pt
push
mov
jae
xchg
xchg
and
dec
jp
lcall
scas
xchg
xor
ds
mov
cltd
jg
lahf
jb
jecxz
xchg
aam
dec
popa
cmc
adc
in
dec
add
lock
and
add
inc
in
mov
sbb
and
adcl
mov
inc
sub
pop
bound
ret
test
adc
pushf
in
xor
push
int
add
in
sub
hlt
std
adc
jg
cmp
jge
xor
movsb
inc
mov
sub
scas
popf
gs
xchg
std
insl
aad
movl
mov
mov
cmpsb
adc
sbb
test
fidivrl
ss
or
mov
xor
jbe
or
in
xlat
inc
add
pop
loopne
mov
shrb
jb
mov
push
pop
roll
inc
shrl
outsl
pop
cmc
nop
cmp
es
gs
mov
and
cld
push
pushf
fstpt
jns
andb
jge
push
xor
or
xchg
mov
inc
cwtl
dec
ret
hlt
sbbb
mov
cmp
inc
popf
push
mov
pop
aam
or
xor
dec
sub
mul
mov
dec
push
add
cltd
aam
jg
fildl
aad
out
push
adc
sbb
outsb
testb
pop
jns
pop
fildl
xor
dec
inc
movsb
mov
popf
mov
test
add
cld
sbb
inc
push
repnz
jne
je,pt
sub
dec
jne
shlb
jl
es
or
push
dec
outsl
pop
nop
sbb
and
sbb
mov
and
stos
loopne
cld
ret
ss
scas
fs
sbb
pop
xchg
rcrl
pop
mov
pop
jge
sub
stos
clc
ja
stc
mov
and
xor
and
cltd
inc
or
movsb
jnp
dec
stc
lret
mov
sub
and
push
sbbl
dec
mov
idiv
and
aad
aaa
cmp
addb
les
or
add
mov
popl
xchg
pushf
sub
mov
js
push
mov
fmuls
cmp
jle
jno
imul
sahf
xchg
arpl
js
fsubs
xor
rol
pop
test
cmpsl
test
jbe
add
into
sub
or
mov
imul
mov
scas
mov
adc
dec
in
mov
pop
outsl
xchg
inc
mov
daa
jl
xlat
mov
jecxz
dec
xchg
dec
fcmovne
je
inc
add
xchg
adc
addr16
add
inc
pop
or
jmp
int3
push
rcr
and
enter
or
aas
mov
add
out
cltd
push
sub
fsubrp
dec
xchg
in
mov
rorl
cs
enter
ret
cmpsb
repnz
rcl
sbb
das
sub
loopne
fdivrs
in
ja
push
cmp
in
cmp
mov
push
cmp
imul
cmpsb
icebp
lea
outsb
or
sar
loope
cs
sbbl
inc
cmc
xchg
jnp
inc
andl
dec
insb
ss
idiv
fdivrl
into
add
pop
add
stos
pop
loope
imul
imul
push
sub
push
pushl
jno
sbb
imull
sub
adc
xchg
inc
jne
add
mull
pop
fwait
scas
push
movsl
sub
add
aad
fwait
lea
adc
lea
push
dec
pop
inc
mov
jb
dec
gs
push
mov
mov
hlt
cmpsl
xor
imul
test
out
jo
lds
fnstcw
fucomi
mov
push
mov
jbe
out
jnp
and
clc
mov
mov
stc
mov
push
dec
or
cmp
and
mov
adc
jmp
xchg
aas
or
xchg
fsubrs
inc
and
sbb
sarl
push
jmp
icebp
cwtl
scas
mov
xor
mov
popf
pop
ljmp
clc
jne
sub
out
cmp
adc
xor
mov
inc
je
jecxz
pop
and
xlat
stc
or
fbld
fdivp
sbb
push
dec
js
push
sub
push
aad
push
sub
lods
daa
xchg
fadd
sahf
imul
popa
xor
inc
dec
std
and
mov
fcoml
pop
das
fistl
push
lea
lods
pmullw
adc
xchg
lahf
ss
cmp
xor
fs
stos
enter
adc
out
xor
test
jo
mov
inc
mov
adc
fists
or
and
mov
lock
data16
jnp
and
xlat
arpl
clc
sub
sbb
add
add
pop
std
or
pop
in
scas
dec
or
jl
cmp
in
inc
inc
imul
jl
add
in
aas
and
mov
into
pop
xchg
lods
mov
push
test
ficomps
rcrl
jno
clc
bound
int3
nop
ret
mov
test
fdivl
jns
push
xchg
cmp
jl
jg
jp
mov
jnp
movsb
adc
jne
jnp
leave
mull
cltd
pop
mov
in
insb
inc
lret
xchg
pop
dec
lret
mov
pop
aaa
das
xchg
fcomi
loopne
add
sti
out
xchg
mov
and
xchg
or
lods
leave
lods
xchg
movsl
push
cmp
ret
cmp
pop
xchg
sbb
ret
pusha
or
mov
inc
and
test
jg
mov
clc
je
jmp
xchg
in
pop
imul
ficomps
outsl
jno
orb
mov
aam
push
mov
fnstcw
xor
jle
insb
and
jno
out
push
lret
push
pop
mov
es
jg
in
arpl
inc
jno
aam
cmp
xchg
xlat
xor
mov
lods
out
jae
into
and
in
jns
pop
in
pop
jnp
and
mov
fdivl
iret
inc
in
sti
mov
into
sub
gs
add
or
sub
test
repnz
enter
shlb
addr16
icebp
push
ret
mov
sbb
push
sub
pop
mov
je
push
dec
and
out
mov
mov
jo
das
sbb
out
cmpsb
jmp
and
inc
push
insb
adc
mov
push
out
cmp
arpl
push
jb
ffree
insl
addr16
push
xchg
jb
xchg
or
xchg
imul
push
mov
cmp
loopne
jecxz
pop
aad
sub
mov
rorb
mov
add
pop
lock
jl
sub
mov
xchg
mov
and
lahf
mov
xor
lea
rol
lahf
sub
negb
adc
xorb
cmp
ljmp
mov
js
pop
movsb
cltd
fstpl
in
jmp
pop
ret
jmp
xchg
sti
mov
xlat
jle
cli
jmp
add
push
leave
jp
sub
leave
dec
pop
lret
popf
xchg
fiaddl
int
int
movsb
clc
mov
repz
imul
stos
sub
add
aam
cld
fsubrp
mov
sbb
movsb
mov
dec
out
push
test
xchg
in
pop
arpl
or
sahf
push
rorb
mov
aad
sbb
arpl
ret
pop
test
and
fcmovu
xchg
mov
das
sub
lret
jne
xchg
pop
dec
pop
pop
push
and
push
mov
lahf
loopne
ljmp
sub
aam
jae
stos
adc
es
mov
or
mov
out
and
orl
mov
adc
cmp
xchg
std
and
int3
mov
ficomps
mov
push
push
fwait
clc
lret
cwtl
dec
add
mov
lea
or
sub
imul
fnstcw
cmp
mov
out
or
mov
or
outsl
sub
adc
addb
dec
dec
add
sbb
fidivrs
sbb
cli
cmpsl
ret
lret
stos
jo
jge
ret
push
out
imul
out
insb
xchg
addr16
push
add
dec
rolb
inc
movsb
mov
inc
mov
test
sub
mov
jmp
jo
je
cmp
xor
push
out
gs
xchg
mov
arpl
hlt
push
loopne
decl
xor
addl
jne
xor
pop
adc
fwait
cld
in
insb
push
adc
repnz
jp
or
clc
pop
das
inc
mov
cwtl
xchg
pushf
leave
cmp
inc
loopne
xchg
jp
mov
fisttpll
les
and
inc
mov
fidivs
pop
pop
mov
mov
or
in
aaa
pushf
xchg
lods
push
shrl
mov
mov
divb
jp
jg
push
dec
xchg
and
push
lds
cmp
pop
jne
in
sbb
xchg
xor
push
mov
dec
iret
orl
or
insl
inc
aas
filds
mov
mov
pop
pop
dec
xchg
push
cs
rcl
xchg
hlt
inc
xlat
js
adcl
repz
and
cli
int3
repnz
loop
mov
jnp
pop
mov
push
push
adc
sahf
aaa
jl
faddl
cmp
std
nop
mov
push
frstor
mov
adc
xor
fwait
int3
pop
aaa
rcll
cmp
mov
and
sbb
xor
mov
test
stc
insb
cmpsl
cld
iret
js
cmc
cmp
cmp
inc
lds
push
pop
sub
scas
fidivrs
cmp
cltd
xor
adc
das
mov
clc
cmp
imul
push
cmc
lea
cmp
shl
popf
fs
shlb
lret
mov
dec
xchg
or
addr16
addb
mov
cmpsb
jp
outsl
mov
jo
push
push
fsubrs
xchg
movb
lods
popa
add
pop
pusha
fadds
or
sbb
shrb
and
sub
aam
pop
xor
adc
jg
and
adc
mov
mov
rorb
jae
outsb
add
adc
popa
fldt
or
pop
mov
cmpsl
sbb
cltd
mov
out
popf
sbb
aaa
inc
cmp
ljmp
sbb
lcall
sbb
and
cmp
cwtl
mov
mov
xchg
add
jb
fbld
xchg
cli
iret
inc
cmp
std
mov
mov
pop
and
and
sub
inc
sbb
and
xchg
inc
xchg
jne
mov
push
pop
dec
cmp
adc
mov
dec
stos
jnp
lret
in
sbb
inc
std
push
in
push
cmpsl
pop
stos
mov
and
mov
or
imul
aad
xor
push
mov
lods
jge
mov
cli
cmp
push
fistpll
sti
mov
push
xchg
xlat
out
pop
push
mov
fs
jl
rclb
or
les
add
movsl
insl
xchg
xor
imul
shr
jmp
xchg
lds
or
bnd
xchg
push
or
daa
xor
inc
or
pop
imul
pop
je
xor
cmp
nop
dec
dec
pop
stos
scas
dec
mov
mov
jmp
push
pop
call
inc
fadds
xor
fcmove
adc
repz
or
adc
jmp
mov
sub
test
test
aad
scas
shll
ret
mov
push
andb
jo
into
je
mov
cs
rolb
pushf
dec
pushf
ret
stos
aas
push
inc
lods
pop
sub
fsubrl
xchg
dec
shrl
add
rclb
pand
cmp
test
push
mov
mov
mov
push
mov
mov
mov
ss
adc
dec
pushl
xchg
adc
mov
stc
mov
jbe
jecxz
push
sbb
fwait
add
aad
hlt
sbb
notb
or
xor
inc
jae
lret
sub
mov
jg
pop
xor
and
mov
in
jns
fstl
ret
idivb
movsl
adc
add
sahf
repnz
fwait
out
inc
out
add
aad
jl
enter
cwtl
std
in
ret
xor
sbb
fistps
fcoml
icebp
mov
loope
jl
ret
jnp
and
jge
push
jnp
push
mov
mov
push
test
stos
xchg
pushf
insl
xchg
jle
movsl
adc
mov
into
jge
vcvtss2si
and
orl
cmp
fnsetpm(287
int3
cmp
sub
push
dec
out
pop
daa
xchg
add
jns
pop
cmp
test
stos
mov
aas
xor
mov
mov
nop
pop
jg
pop
nop
lock
popa
push
push
mov
xor
pop
add
iret
dec
out
mov
cmp
mov
dec
mov
jns
cltd
pop
ret
mov
fwait
arpl
call
loope
pop
daa
mov
ss
insb
es
or
lcall
lret
cmpb
lret
cmp
and
insb
lods
jl
ja
push
popl
jmp
mov
sti
mov
or
adc
icebp
test
inc
out
scas
cltd
mov
add
int
sarl
addr16
add
imul
add
insl
sahf
out
sti
push
pop
frstor
enter
xlat
pop
xor
or
in
adc
mov
or
sub
jae
push
mov
mov
ds
loopne
fisubl
dec
xlat
xchg
rorb
roll
pop
popa
std
mov
sub
mov
test
in
test
xchg
in
mov
mov
jo
xor
adc
popa
xchg
lcall
adc
fs
ror
and
xlat
jg
xchg
dec
fisttps
push
cmp
std
je
imul
jns
mov
jae
and
pop
mov
test
popa
shll
mov
push
imul
rol
stos
jmp
sub
xlat
iret
sbb
pop
mulb
in
addl
adc
sbb
pusha
lret
cwtl
cmp
mov
sbbl
nop
loope
mov
int
mov
lock
mov
and
stos
test
cmp
gs
pop
in
scas
add
or
rorb
and
cld
imul
mov
push
cmp
in
xor
adcb
icebp
or
xchg
iret
into
add
outsb
mov
cltd
pop
and
mov
mov
rorl
fildl
push
dec
and
out
mov
xor
jno
jp
aad
dec
jo
lods
add
aas
mov
adc
lcall
lahf
adc
stos
sub
int3
cs
ss
cmp
mov
cmc
xor
mov
xchg
shlb
aaa
cmp
insl
and
iret
popl
mov
jl
mov
inc
pop
icebp
xchg
inc
push
mov
push
lahf
aad
outsb
push
icebp
leave
out
mov
fiaddl
adc
aad
xorb
iret
out
andl
nop
push
mov
in
int
sbb
ds
cmp
jp
cmpsl
dec
adc
xchg
pop
shrb
add
inc
pop
xor
xchg
push
push
mov
fcompl
cltd
inc
cmp
dec
test
inc
jae
cmp
pop
mov
mov
inc
stc
imul
mov
or
int3
rep
jl
les
jl
inc
mov
mov
adc
and
sbb
mov
shll
sarl
popf
mov
xchg
in
cmc
mov
cmp
gs
push
loope
mov
sbb
aaa
or
jb
rcrl
das
inc
adc
aas
dec
repz
fs
cmp
and
scas
les
hlt
xchg
inc
lock
hlt
in
je
mov
cmpl
xor
lret
pop
push
fsubr
dec
xor
movsl
daa
dec
add
dec
leave
push
pop
fstp
popf
inc
dec
movsl
test
add
mov
push
mov
rcrb
and
xor
dec
cmc
or
sub
loopne
pop
lcall
and
jmp
pop
xor
cmp
clc
ds
pusha
pop
fwait
jns
xchg
lds
mov
adc
lcall
daa
frstor
das
pop
fsubp
ljmp
sbb
jns
ja
insb
sub
das
mov
ret
pop
cwtl
and
rorb
cli
test
popf
dec
or
jmp
mov
and
inc
lea
or
mov
incl
pop
inc
inc
mov
adc
lcall
mov
xor
stos
fnsave
sbb
mov
dec
lcall
pusha
pusha
cmp
mov
dec
push
test
mov
push
stos
cmp
xchg
xlat
add
test
cmp
aad
insl
and
jmp
ret
dec
push
xchg
insb
jae
adc
mov
lds
mov
push
jns
cmc
jp
xor
inc
arpl
adc
jg
stos
popf
cwtl
push
out
mov
sub
push
mov
les
cltd
or
cmp
dec
mov
jle
dec
enter
jmp
cld
inc
dec
outsb
out
lret
cmp
adc
cmpsl
inc
inc
loop
pop
dec
add
ja
pushf
adc
or
fiadds
out
hlt
aas
xchg
in
iret
mov
xchg
loop
shl
cmp
nop
mov
or
sub
outsl
jno
sbb
shlb
loopne
aaa
or
inc
mov
gs
jbe
adc
xor
ret
in
push
xchg
dec
clc
rcrl
or
ret
scas
test
mov
std
subl
es
cmp
pop
lods
dec
maxps
xchg
adc
aaa
pop
shll
sub
mov
jns
and
inc
mov
jno
outsb
popf
jl
aam
ud1
cwtl
ja
mov
pop
add
scas
cli
shlb
js
push
sub
lods
idivl
mov
mull
fwait
push
mov
dec
outsl
scas
push
sarb
rcll
or
pop
cmp
mov
shrb
or
cmp
add
xor
cltd
addr16
pop
jmp
insl
cld
sbb
dec
xchg
inc
lret
lcall
mov
xchg
jmp
adc
in
or
test
in
jnp
push
push
clc
push
push
xor
sbb
test
mov
fwait
and
or
mov
loopne
iret
enter
lock
pop
jge
iret
push
mov
cmp
jae
push
lea
or
jbe
mov
or
mov
sub
jns
push
push
mov
in
pushf
add
scas
sub
call
pop
jne
addl
xor
sbb
and
aas
rorb
mov
push
fdivs
lock
cmp
mov
popf
xor
pop
add
adcl
add
sub
je
sub
mov
push
cmovno
test
js
sbb
call
lret
je
out
xor
jno
out
das
xor
filds
inc
pop
fstl
mov
pop
and
sub
add
imul
into
loop
js
pop
hlt
stc
add
mov
adc
gs
dec
xchg
inc
ds
xchg
pop
cltd
push
mov
jbe
jl
adc
ror
enter
push
sbb
pop
pop
icebp
test
inc
push
stos
pushf
sub
push
aam
and
icebp
out
xchg
inc
add
mov
sub
dec
push
hlt
sbb
pop
iret
mov
outsl
subb
imul
insl
push
into
mov
popa
les
and
mov
cs
mov
hlt
and
inc
inc
aad
sarb
mov
or
loopne
scas
add
jno
cmpl
add
and
es
stos
mov
adc
cld
lcall
neg
cld
sub
or
mov
popf
addr16
push
add
daa
ret
sahf
mov
mov
mov
or
xorl
lock
mov
pop
popa
add
inc
jle
scas
ret
ljmp
push
lret
xchg
sub
pop
and
enter
repnz
sub
clc
repnz
fisubs
leave
jp
xchg
mov
ja
pop
arpl
jno
xacquire
ret
adc
xchg
out
cs
leave
mov
scas
inc
or
xchg
fwait
sub
dec
sbb
out
aaa
bound
std
adc
jbe
iret
push
xor
push
ffreep
inc
je
fnsave
jmp
popa
mov
lahf
pop
jp
aas
or
push
mov
sti
sahf
ret
scas
xchg
jmp
sbb
fs
stos
pusha
mov
imul
or
sub
xchg
add
in
adc
or
leave
pusha
or
or
mov
lods
repz
icebp
adc
mov
sub
xchg
cltd
std
subl
pushf
pop
cmp
or
cld
cli
mov
jecxz
sbb
adc
iret
sbb
cmpsl
loop
lret
xchg
notl
icebp
in
sub
sbbl
cmpsb
sub
and
or
mov
xor
jmp
push
sbb
in
jmp
stos
xlat
pop
frstor
jl
cmp
lret
push
int3
dec
mulb
mov
or
push
dec
pop
push
lcall
ret
ljmp
jno
push
nop
rclb
inc
faddl
in
cmc
ds
incb
sub
xchg
repnz
addr16
mov
ffreep
lret
mov
xchg
sarl
out
rorl
mov
sahf
cld
sbb
int
dec
ss
mov
adc
xchg
inc
mov
xchg
ret
xchg
cmpsl
push
cld
xchg
add
lods
or
sbb
push
push
mov
cmp
or
xor
in
inc
cs
fs
xlat
xor
call
scas
outsb
cltd
xchg
dec
push
sti
shlb
add
gs
dec
jmp
es
fnsave
sub
insb
and
sbb
jne
jp
dec
pop
mov
cmpsl
xor
xor
mov
lret
sarb
popa
aam
jp
or
dec
in
mov
mov
test
add
and
iret
cld
test
repz
add
mov
data16
pop
js
fwait
xchg
add
jne
or
cmp
sbb
cmp
cmp
dec
xchg
les
rolb
jp
idiv
lock
out
pop
inc
inc
xchg
lods
inc
aas
mov
sub
fidivrs
arpl
add
hlt
mov
cli
jmp
jo
dec
mov
pop
mov
lret
test
sbbb
and
icebp
shll
mov
xchg
cltd
int
inc
mov
insl
add
push
mov
mov
sbb
enter
mov
sub
fbstp
inc
or
push
cmp
in
pushw
rcl
stos
ljmp
xchg
shlb
in
pmulhuw
test
add
add
xchg
or
pop
fistpl
dec
xor
inc
inc
mov
adc
mov
out
cmp
dec
cwtl
ret
push
inc
test
jecxz
sub
imul
into
ficoml
adc
or
and
inc
cmp
sbbb
mov
push
out
out
nop
ds
push
pop
xor
pusha
mov
aam
pop
push
mov
popf
sub
xchg
add
fsubr
mov
in
cltd
out
cmp
sub
rcrb
cmp
dec
jmp
jp
nop
xchg
into
mov
inc
fcmovnb
pop
cmp
ret
jl
ds
int
push
cmpsb
pop
dec
jnp
jmp
jnp
mov
or
insl
jo
loopne
lahf
insb
adc
test
mov
movsb
dec
cs
mov
stos
clc
or
enter
lock
xor
lahf
dec
arpl
hlt
aad
dec
enter
adc
mov
fnstsw
xor
sub
ljmp
pop
mov
mov
mov
lods
shlb
sub
aam
sti
jnp
sbb
sbb
push
test
ret
aas
push
ljmp
or
in
shrl
fwait
and
mov
fiadds
pushf
addl
mov
inc
dec
xchg
sbb
push
jno
sub
adc
xchg
out
fildll
dec
fisubl
sub
pop
stos
mov
inc
push
mov
jb
loopne
add
push
es
outsb
in
scas
sbb
ja
test
jle
cli
outsb
test
cmpsl
cmp
push
in
cmpsb
push
adc
xchg
sub
adc
xorb
xor
sub
adc
popa
pop
ja
sub
xchg
sbb
mov
les
ss
mov
rclb
arpl
test
test
lods
sub
dec
and
loopne
loope
in
and
mov
or
mov
orl
mov
inc
fistps
push
pop
outsl
lods
jg
cmp
stc
push
push
icebp
dec
xchg
pop
loope,pn
cld
fwait
cmp
imul
and
cltd
pop
fiadds
iret
xchg
sub
js
xchg
arpl
arpl
inc
aaa
push
cmp
cmpsb
mov
out
cltd
dec
jmp
jge
aaa
cli
jnp
mov
cmpsl
imul
gs
adc
pop
and
mov
hlt
adc
xor
add
mov
dec
and
xlat
or
frstor
mov
cmpsl
adc
test
mov
lret
loop
aas
inc
rcrl
push
mov
adc
cmpsl
sub
in
sub
and
add
movsl
mov
fdecstp
ljmp
fsubp
gs
ret
sbb
cwtl
aad
push
aam
addr16
add
jg
pusha
push
ds
sub
in
dec
cwtl
adc
jle
cltd
xor
jns
cmpsl
push
hlt
xor
dec
loop
push
pushf
or
in
bound
and
out
es
das
jp
and
or
pushw
in
xlat
inc
dec
mov
or
sbb
inc
fbld
stc
scas
sub
aad
or
cmpsl
dec
adc
jmp
aad
cmpb
cmp
aas
mov
ja
push
mov
push
jmp
imul
push
sbb
sti
rorb
and
stos
xchg
sbb
pop
mull
push
mov
jp
ficomps
jmp
push
in
mov
dec
dec
mov
in
sbb
in
pushf
jg
inc
pop
ret
push
bound
jecxz
insb
fwait
pop
flds
in
mov
cmp
in
incl
fsubl
add
pop
push
sti
imul
cmp
xor
out
aam
xchg
sub
add
imul
mov
mov
lods
jmp
cmp
and
mov
cmp
js
mov
ss
leave
mov
jne
imul
pop
pop
mov
insb
mov
shlb
add
js
gs
out
cmp
add
clc
test
pop
fmuls
xchg
test
nop
xchg
xor
div
rorl
push
addr16
or
adc
add
adc
xor
fimuls
jo
xlat
sti
into
mov
jp,pn
push
pop
mov
jbe
push
or
and
xlat
jmp
sub
inc
les
sbb
arpl
push
das
or
divl
mov
and
filds
mov
mov
dec
ss
inc
xchg
push
frstor
nop
test
bnd
lret
pop
pop
adc
adc
movsb
and
ja
mov
fisttpll
and
lock
loopne
jecxz
dec
xor
scas
add
sarl
inc
movsl
insb
mov
xlat
imull
std
xor
push
xchg
sub
mov
and
popl
add
mov
pop
cwtl
xchg
sub
or
inc
mov
inc
cwtl
or
sub
sbb
and
cli
xchg
stos
mov
test
pop
cmp
sti
dec
stos
pop
ljmp
sub
adc
lods
push
sbb
xchg
or
xor
mov
or
pop
sub
sub
fdivs
imul
mov
mov
fmull
fwait
jge
mov
aaa
and
dec
int
pop
xor
bound
in
mov
in
mov
jmp
xor
aam
inc
imul
jae
or
cmp
pop
int3
jb
pop
pop
loopne
aas
loopne
push
loop
ficoms
adc
lds
inc
or
cmp
mov
pop
cmp
loope
mov
pop
push
xchg
loopne
pushf
inc
inc
pop
cvtpi2ps
push
cld
lds
push
addr16
push
jle
inc
push
mov
cmpsl
in
andl
xchg
and
jge
lret
les
push
movsl
push
in
add
stc
push
jecxz
or
sub
pop
lcall
aaa
movsb
lahf
sub
sahf
in
std
dec
leave
sub
xchg
aaa
and
nop
insl
sbb
pusha
movsl
jl
xchg
test
pop
mov
sbb
mov
cli
frstor
out
sbb
mov
addb
ss
mov
xorl
shll
test
cmpsb
pop
popa
mov
mov
movsb
test
dec
movsl
jmp
pop
aaa
mov
push
imull
mov
shlb
jle
loope
inc
inc
mov
daa
pop
popf
pop
adc
jnp
loopne
xchg
mov
dec
loope
imul
jno
in
lods
xor
scas
mov
dec
mov
mov
addr16
lret
pop
mov
fcompl
flds
scas
mov
push
call
mov
inc
clc
popa
fstps
jo
jge
mov
cli
inc
ljmp
sub
xchg
sbb
scas
push
pop
lret
daa
jbe
bound
jp
repnz
adc
or
jge
mov
dec
repz
cmp
dec
repnz
std
lea
jbe
cmp
pop
adc
or
xchg
mov
jecxz
mov
cmp
jo
dec
movsb
std
call
mov
jp
push
rolb
das
imul
es
scas
in
scas
cmp
push
sarb
xchg
mov
mov
es
les
pop
shrb
push
add
imul
cmp
mov
push
push
jno
in
cltd
cltd
leave
pop
fcmovnu
stos
jmp
sbb
xchg
cwtl
mov
insl
xor
and
adc
ljmp
and
cs
inc
int
stc
dec
cmp
mov
xchg
cwtl
push
rcrb
push
push
outsb
cwtl
sub
add
imul
ss
jns
sbb
popa
enter
or
ss
clc
xchg
fldcw
out
adcb
arpl
div
test
jne
dec
dec
sbb
daa
loopne
imul
loope
scas
in
js
xchg
in
lods
inc
jae
pop
cmp
or
js
outsb
jecxz
cmpsb
ret
test
enter
jnp
mov
btc
adc
and
sahf
pop
pop
cmp
mov
xchg
adc
add
add
in
je
sub
lret
aad
sub
mov
dec
fisubl
cmpsl
cmpsl
and
push
add
jmp
addl
sub
mov
js
dec
aam
mov
mov
xor
jmp
mov
mov
cld
push
pop
aaa
das
cli
nop
out
adc
insb
jge
inc
dec
or
dec
fadds
or
dec
or
outsb
leave
in
jg
push
sahf
mov
mov
xor
mov
lahf
mov
in
flds
frstor
mov
add
dec
loope
add
bound
or
xchg
sahf
jl
popa
xchg
mov
cmp
repz
lcall
push
pop
xor
fisttpl
push
add
sub
in
pop
addr16
xchg
in
pop
cmp
mov
xchg
in
mov
mov
adc
imul
sub
xor
lods
xor
sbb
mov
push
xchg
xchg
jecxz
mov
sub
adc
data16
lea
das
outsl
and
push
cwtl
jmp
loop
cltd
pop
jb
sub
shl
cmp
inc
jp
mov
jno
or
mov
iret
movsb
cmp
mov
jae
mov
push
cmp
cld
cmp
fisubl
aam
arpl
shlb
das
mov
pop
fcoms
adcb
pop
repz
ret
das
int3
push
jmp
mov
sahf
mov
or
loop
mov
fdivr
dec
shll
int3
cmp
popf
sahf
popa
jno
sbb
sahf
adc
inc
xlat
dec
pop
imul
js
and
jnp
xor
pop
jmp
pop
cli
fs
mov
daa
repz
fimuls
xchg
adc
lock
and
mov
cmp
insb
mov
xchg
movsl
gs
loop
xor
je
jnp
or
rolb
mov
or
xchg
mov
orl
jns
xchg
ds
push
arpl
gs
mov
icebp
ja
mov
adc
cmpsl
mov
xchg
pop
cltd
jno
in
and
repnz
shlb
jle
lahf
out
cwtl
and
imul
dec
gs
inc
hlt
lock
fidivl
lea
add
je
sbb
rcrb
add
scas
and
test
inc
pandn
lret
xchg
aad
sub
jo
arpl
jmp
pushf
add
pop
in
icebp
inc
push
pop
cwtl
sarb
dec
cmpsb
call
mov
shll
mov
fsubs
add
jge
jmp
lret
lea
xor
in
ja
cmpsb
cmp
push
mov
pop
add
add
adc
into
mov
or
mov
xchg
or
pop
test
push
xchg
testb
dec
shl
cwtl
repnz
lcall
xchg
cld
mov
inc
sahf
dec
jb
scas
adc
lds
fldt
mov
and
pop
push
pop
jge
ret
mov
or
outsl
scas
or
xchg
ljmp
ret
int3
out
add
adc
mov
movsl
lret
jno
loop
call
jmp
pushf
outsb
inc
or
inc
adc
lock
dec
js
int3
mov
cmc
jg
rcrl
data16
andl
dec
cmp
scas
fimuls
dec
movsb
gs
scas
dec
inc
repnz
inc
les
push
jnp
jb
enter
jl
nop
pop
sub
dec
cmp
xorb
mov
pop
out
test
inc
pop
push
int
pop
fldcw
in
cmp
dec
jnp
test
cwtl
push
sub
repz
and
fs
pop
mov
ret
mov
dec
mov
mov
ficoml
mov
fucomp
out
sub
jne
rorb
push
push
shl
sti
pop
repz
fdivs
js
sub
xchg
jg
js
dec
pop
lahf
out
jbe
cltd
ss
ljmp
xchg
arpl
mov
adc
fnstcw
xor
pop
test
ret
push
jae
jnp
jnp
sahf
add
cld
push
in
adc
enter
ficoms
mov
jp
stos
adc
shrb
push
jge
sbb
pusha
sbb
mov
dec
push
mov
dec
les
pop
sbb
and
js
arpl
jno
dec
adc
inc
cltd
sbb
aad
movsb
les
fistpl
jl
jb
mov
sub
test
add
ljmp
aam
lahf
dec
push
inc
pop
jb
mov
push
push
pop
sbb
lret
popa
adc
jnp
cmp
cld
pop
stc
scas
pop
cmp
mov
jae
rolb
cmpsb
fnstenv
add
mov
mov
loope
cli
jo
scas
dec
inc
js
add
xor
out
sti
push
jbe
shll
shrb
pop
sub
lret
rorb
push
cmp
fs
adc
adc
inc
ja
mov
pop
mov
call
icebp
andb
pusha
xor
jl,pt
addr16
dec
loopne
aam
lcall
cmp
js
jp
mov
or
stos
fistl
or
sub
add
xor
ja
and
es
mov
push
cmpl
mov
xchg
add
arpl
inc
inc
push
push
andl
sbbb
test
jg
data16
jbe
xchg
inc
adc
and
fistpl
rolb
fistpl
dec
jge
mov
dec
add
mov
fs
call
add
jns
mov
das
jb
add
and
cmp
fistps
fistl
aad
insl
jmp
fmul
fnstcw
into
xchg
xlat
and
imul
or
dec
ljmp
pop
clc
js
repz
jle
rcrb
imul
aad
xchg
pushf
add
aad
imul
mov
and
setle
xchg
std
mov
rcrl
pop
mov
and
movsb
lods
jb
sbb
inc
fs
xchg
mov
out
imul
fisubs
add
and
hlt
sti
or
out
xor
jecxz
mov
cli
in
pop
subl
idivb
lahf
sbb
pop
add
inc
in
hlt
cld
mov
xchg
out
cld
pop
addr16
jg
dec
mov
pop
inc
pop
out
jns
sahf
aam
es
ret
jns
icebp
xchg
push
aam
jp
ljmp
add
mov
repz
push
cmpl
xchg
loope
pop
jge
aaa
ljmp
out
dec
dec
xchg
sub
leave
daa
sahf
push
ds
mov
in
stos
and
out
mov
sbb
test
sarl
repnz
pop
hlt
lret
xchg
xorb
into
sub
push
stc
pop
mov
stos
into
mov
mov
mov
xor
in
mov
xchg
mov
cltd
insl
in
dec
das
cmp
sbb
hlt
jns
out
in
jo
aad
mov
imul
or
xlat
sub
enter
mov
jnp
lahf
shl
cltd
pop
call
xchg
fcmovbe
jl
pop
dec
adc
xor
insl
mov
bound
ljmp
xchg
std
imulb
sub
popf
arpl
sub
sub
push
or
and
jge
fld
xchg
fidivl
add
lea
fwait
inc
test
or
outsl
pop
adc
push
jge
addl
jno
pop
or
mov
cmp
js
mov
cmp
lods
aam
xor
mov
jo
out
inc
loop
in
ficomps
add
imull
ja
imul
outsl
pusha
sub
sub
push
lock
insl
sub
cwtl
cmc
or
push
adc
je
scas
into
cltd
jae
ss
das
add
push
jnp
mov
je
ds
lret
push
add
push
pcmpgtw
xor
pop
scas
test
or
push
xor
rclb
inc
nop
cmpsb
add
aas
push
out
scas
loopne
imul
hlt
add
jne
or
insb
jg
mov
inc
testb
pop
jmp
lds
cmpsl
stos
mov
mov
mov
movaps
or
mov
adc
aas
test
or
pop
jae
cmp
mov
xchg
lock
or
pop
push
aam
jae
repz
adc
cmpsb
xchg
shll
fdivp
cmp
xlat
mov
or
fidivs
mov
add
push
mov
fwait
call
inc
cmp
inc
push
xor
lods
cmp
mov
mov
insb
lcall
jecxz
addl
jg
test
iret
std
xor
push
cli
cmp
mov
push
sbb
dec
test
dec
cld
addr16
xchg
js
and
mov
jbe
dec
icebp
sbb
enter
popa
lds
shl
inc
cmp
pop
ss
xchg
inc
sbb
outsb
mov
pop
shll
into
and
and
jle
out
in
jb
sbb
push
xor
shlb
push
aam
rcrb
cli
or
ret
aaa
jge
xor
mov
int3
jp
ret
mov
inc
sbb
roll
sbb
xchg
lahf
mov
cltd
fimull
add
bound
mov
jle
inc
pop
outsb
jae
stos
sub
mov
dec
mov
mov
shrl
sbbl
add
andl
ret
arpl
mov
jne
dec
filds
ffree
mov
lods
shlb
sbb
jnp
es
push
or
xchg
pusha
sarl
movsl
push
fsubrl
pushf
data16
jl
or
jge
jle
in
sbb
movsl
sub
mov
push
xor
jae
jbe
dec
mov
cwtl
xchg
aas
fdivl
or
arpl
adc
xchg
xchg
xor
lods
stc
xor
bndstx
mov
daa
add
faddp
in
scas
aad
test
jl
ljmp
hlt
xchg
lods
mov
in
jno
xor
inc
or
imul
mov
jle
lods
or
idivl
pop
movsl
sahf
mov
dec
arpl
aaa
mov
mov
mov
xchg
pushf
icebp
fincstp
iret
stc
push
aas
das
jb
repnz
jbe
lods
std
inc
adc
call
cmc
cli
aaa
xor
je
xchg
inc
mov
inc
pushf
mov
sub
int3
push
scas
pop
inc
std
leave
push
push
xor
and
adc
push
mov
outsl
adc
lcall
fidivrl
mov
xor
mov
fisttpl
ja
outsb
ja
adc
mov
or
pop
test
js
fimuls
lea
rolb
lcall
lock
or
jo
fstps
sbb
ja
mov
cli
sbb
and
inc
icebp
cmp
inc
push
popa
push
std
mov
insl
addr16
and
std
std
jle
ret
or
push
add
inc
add
mov
das
and
jae
aas
in
pop
cmpsl
aaa
or
dec
cli
in
adc
mov
inc
dec
dec
jnp
lea
js
mov
push
xor
push
in
push
jmp
adc
fwait
inc
stc
jp
add
mov
cmp
or
mov
push
sar
xchg
mov
leave
push
dec
jp
mov
mov
inc
or
add
popf
sti
pop
outsl
pop
xor
pop
push
mov
or
lcall
add
push
cmp
push
jne
push
xchg
xor
inc
repz
in
xor
sub
repz
mov
pop
aad
adc
ss
push
push
repnz
push
arpl
lods
stos
das
push
lods
int
push
sarb
mov
inc
and
adc
push
mov
js
outsb
hlt
pop
mov
jae
ret
adc
mov
xor
dec
mov
push
cld
movsl
sbb
rcl
jg
sbb
pop
stc
clc
or
sti
mov
mov
sbb
pop
mov
dec
test
cmp
pop
mov
add
bound
sbb
les
dec
dec
ljmp
in
shlb
fistpll
and
and
inc
fidivrs
cli
cmp
test
jmp
js
sbb
imul
icebp
imul
aam
and
stos
mov
push
shlb
in
fs
adc
cmp
rcll
cmp
or
mov
mov
xchg
nop
adc
mov
inc
repz
int
das
pop
daa
adc
loope
pop
mov
psubq
sub
int
lret
jl
push
mov
js
xchg
cmp
pop
mov
sbb
inc
imul
xchg
sbb
movsl
jge
mov
and
dec
xlat
out
jbe
js
cmpsb
std
ljmpw
aas
or
dec
in
xchg
repnz
arpl
out
jecxz
cmp
dec
js
inc
aaa
and
rcr
mov
pop
cltd
lcall
mov
or
into
sub
xchg
mov
lds
stc
xchg
stos
push
inc
cmpsb
loop
mov
std
leave
inc
and
outsb
jmp
push
ljmp
int
sbb
andl
push
xor
add
sub
shrl
inc
pushf
xchg
aaa
and
bswap
cwtl
xlat
push
and
ss
and
dec
inc
sub
push
cmp
add
adc
dec
jecxz
cmpsb
inc
inc
std
fstps
aaa
mov
insb
jmp
xlat
cmp
cmpsl
sbb
movsb
cwtl
pusha
jg
xor
cmp
mov
sbb
test
jae
pop
popa
inc
test
push
iret
mov
push
addr16
jmp
jp
movsb
test
lods
xchg
fidivrs
mov
mov
fistl
fs
mul
adc
scas
pop
jmp
subb
inc
inc
les
les
gs
outsb
or
lea
jmp
rcr
push
rolb
push
fdivrl
jg
adc
pop
dec
mov
push
mov
add
jbe
stos
imul
push
mov
dec
or
fstpt
sub
add
scas
sbb
dec
push
add
jmp
jecxz
mov
adc
mov
lret
sbb
pop
mov
dec
out
push
mov
cld
arpl
test
jp
sub
ds
fadds
dec
push
adc
cmp
sahf
add
mov
mov
jecxz
add
std
and
mov
pop
xchg
cmp
loope
or
mov
inc
cli
sub
jb
sub
xorb
mov
fldenv
cmp
push
hlt
int3
cmpsb
or
fstpt
add
scas
insl
mov
xchg
sub
cmc
out
lea
in
out
sarb
jns
dec
cmp
mov
cmp
loop
cmp
loop
push
push
dec
dec
bound
push
xor
ljmp
out
shufps
clc
icebp
mov
cli
sub
lret
lahf
ds
cmp
scas
push
or
ss
scas
std
lds
insl
je
sub
outsl
mov
pop
push
or
jge
aas
add
xor
scas
dec
xor
sub
push
lods
scas
xchg
movsb
and
daa
enter
add
in
imul
jae
sar
fsubrl
lcall
pop
sbb
mov
mov
aaa
mov
lcall
jg
jmp
xlat
shrl
pop
stos
std
or
inc
adc
dec
cmpsl
inc
aaa
sbb
mov
jg
loope
aaa
xlat
mov
mov
sbb
and
test
in
dec
dec
mov
mov
test
jge
std
in
add
inc
test
add
mov
push
pop
push
xchg
xlat
sbb
in
jge
push
and
cwtl
fstpl
rcl
cmp
es
pusha
jae
bound
aaa
pop
push
fisubrs
sub
mov
test
adc
jmp
or
mov
jnp
rcrb
rcll
popf
fs
mov
pop
aam
fwait
lock
iret
cltd
in
and
sarl
mov
jnp
jns
psubb
mov
lret
roll
mov
inc
pop
dec
xor
mov
mov
int3
push
or
pop
pusha
test
roll
cs
outsl
xor
mov
je
mov
pop
mov
xor
mov
dec
xchg
outsl
shrb
es
jmp
test
sti
shrb
pusha
jmp
mov
stc
pusha
jl
jge
aas
mov
das
pop
bnd
dec
sub
jo
mov
xchg
jle
out
jmp
jns
cmp
popf
jns
push
mov
shll
push
aas
div
lods
mov
pop
nop
clc
push
in
lods
inc
pop
mov
iret
pop
adc
dec
xchg
inc
mov
jg
pop
jne
mov
mov
stos
inc
outsl
mov
aaa
adc
rep
lahf
push
repnz
jp
dec
cmp
push
mov
in
leave
lds
movsb
in
jmp
and
lock
push
pop
ret
popf
stos
enter
mov
clc
add
sub
inc
pushf
jle
imul
insb
ficoms
or
pop
movsl
inc
xor
adc
or
ds
iret
xor
inc
cmovle
pop
enter
aas
stc
test
je
add
xor
pushf
es
mov
and
cmpsb
in
or
testb
punpcklbw
pop
and
clc
add
cmp
shl
xor
stc
ficoml
mov
jge
into
sub
movsb
das
lret
jecxz
in
gs
adc
push
lds
jae
in
sbb
adc
addr16
and
and
pop
pop
jne
cmp
test
sbb
lcall
adc
in
dec
test
shrb
inc
xchg
sbb
cmp
mov
out
enter
pusha
int
into
fst
xor
xchg
sbb
push
pop
jle
ss
dec
hlt
pop
loopne
data16
or
mov
cwtl
cmpsb
push
sub
jl
lret
jb
incb
cwtl
mov
xchg
xor
adc
add
pusha
pusha
jl
mov
push
sub
xor
sub
into
aaa
sub
push
ret
rcr
push
lds
or
add
int
push
pop
mov
cltd
cltd
jb
repz
divps
faddp
and
xchg
iret
inc
mov
fisttpl
push
sbb
sbb
push
adc
or
mov
scas
faddl
mov
fistpl
sub
mov
push
and
and
ss
jmp
mov
jmp
loopne
add
sbbb
cmpsb
icebp
ret
mov
pop
loope
fidivs
jnp
add
xlat
shll
test
jae
dec
lods
jge
adc
rorl
ljmp
xor
jbe
inc
mov
sbb
xor
stc
flds
fists
gs
xor
out
cmpsl
aas
repz
adc
inc
mov
sbb
add
add
or
pop
sub
into
rclb
pop
daa
adc
rcll
lea
int3
jno
cmp
pop
inc
rolb
cmpl
mov
xchg
add
fisttps
inc
fstl
push
add
loopne
lds
ficoms
xchg
ljmp
imul
popa
jle
mov
pop
leave
push
mov
in
jno
push
lods
xor
adc
and
int3
inc
sub
or
cmpsb
push
mov
rclb
xchg
pushf
icebp
das
dec
sub
fcomp
scas
dec
fsubl
arpl
mov
daa
sbb
jne
jnp
jecxz
in
adc
mov
push
xchg
ljmp
mov
mov
sahf
mov
shlb
cmpsl
fnsave
or
mov
out
in
cmp
lods
sbb
push
xor
popf
jns
repz
loope
repz
mov
sbb
mov
and
sub
mov
ljmp
push
fmull
mov
dec
xchg
add
leave
sub
ds
stc
loopne
xchg
ds
mov
nop
scas
lds
pop
icebp
xor
lahf
add
or
fadds
cmp
hlt
and
cwtl
ja
fnstenv
lret
or
jo
push
and
push
fs
push
cmp
dec
in
insb
popf
pop
mov
inc
lea
and
mov
ss
mov
jnp
xor
xor
pop
inc
sub
push
mov
mov
pop
and
out
xor
rcrl
int
push
das
fadds
pop
cs
xchg
lea
lods
gs
lcall
cmp
int
sarl
cmp
and
daa
repnz
xchg
pop
xor
in
sti
push
repz
jns
shll
std
fnstcw
adc
call
sub
sub
add
pop
das
sbb
pop
aad
sbb
in
jge
push
stos
jne
mov
rclb
daa
adc
negb
mov
cld
dec
pop
push
repnz
ja
div
xor
inc
test
mov
jge
popa
mov
js
mov
in
adc
iret
std
jns
fbstp
jp
pop
fistl
test
mov
dec
popf
lahf
push
cwtl
cmpsl
shrb
adc
loop
rcr
mov
faddl
mov
or
cs
aam
movsl
fistpll
scas
mov
push
pop
dec
dec
hlt
inc
daa
and
lret
ret
push
mov
inc
roll
adc
aam
es
sbb
xor
xor
rcrb
jmp
jmp
mov
mov
sarl
xchg
lahf
fstpt
and
cli
lahf
cmp
xchg
pop
sub
jp
push
dec
jl
ss
push
repz
mov
or
dec
mov
mov
jge
mov
jne
lds
mov
pop
fsubl
or
orb
sbb
sbb
lods
pusha
push
jo
cmp
jg
jmp
sbb
js
sbb
scas
cwtl
and
xor
adc
mov
repz
shll
pop
mov
icebp
mov
and
xlat
fmuls
add
inc
mov
sub
je
imul
out
les
daa
xor
mov
call
cltd
std
mov
adcl
ficompl
dec
aam
aam
mov
pop
lods
push
aad
mov
sub
lods
inc
call
xor
xlat
test
cmp
es
cmp
push
ljmp
push
ficoms
loop
sbb
push
loopne
das
sbb
rorb
clc
ljmp
mov
aas
sub
or
lds
test
imul
and
inc
out
icebp
cmp
push
mov
adc
orb
and
mov
mov
dec
mov
sbb
adc
fiadds
xor
xor
or
add
and
loop
add
cmp
out
ret
filds
mov
mov
push
ds
ss
outsb
jns
cmpsb
ds
pusha
xchg
movsl
imul
pop
mov
mov
cs
out
sti
out
stc
cmp
cmp
test
pop
mov
out
and
sahf
sub
sub
orb
insb
xchg
jne
lock
int3
or
adc
rcrb
stos
and
mov
arpl
cmpsl
aaa
push
rol
sub
cmpb
rcl
mov
xchg
and
mov
push
xchg
jecxz
aam
into
push
nop
or
mov
cmp
call
mov
out
aam
add
pop
pushf
test
pop
sbb
cmpsl
jmp
mov
packuswb
add
mov
mov
jge
sbb
and
mov
out
pop
jnp
sub
or
je
inc
test
mov
outsb
loope
rorb
mov
in
pop
pop
stos
jge
jl
into
call
out
pop
mov
xchg
or
in
in
jp
xlat
cltd
out
popf
push
xchg
dec
and
ror
or
sbb
dec
mov
sub
pop
push
xor
mov
test
pop
les
cmpsb
push
add
xchg
xchg
cmp
mov
xchg
push
js
push
scas
hlt
jnp
lcall
lock
and
mov
push
insb
inc
scas
sbb
movsb
clc
xor
and
dec
pop
cmp
inc
ljmp
fwait
je
movsb
push
dec
and
and
cmp
xor
dec
dec
add
loop
outsl
fldcw
jno
mov
idivb
cmp
cwtl
mov
jl
lock
arpl
push
jl
adc
push
inc
dec
jp
gs
fidivs
sbb
ja
xor
daa
addr16
scas
jp
mov
cld
add
sbb
xor
pop
push
clc
jne
lods
adc
jecxz
jno
fsubrl
call
repz
dec
out
aam
mov
and
cwtl
std
or
loop
pop
das
imul
rcrl
scas
out
fs
add
xchg
cmp
adc
cmp
cwtl
push
iret
or
in
aad
xchg
aam
mov
nop
inc
test
popa
cld
das
in
push
imul
jo
inc
mov
lret
icebp
jno
rclb
mov
in
push
mov
push
in
repz
iret
lret
ljmp
rol
jle
cld
add
and
jecxz
scas
js
cmp
pop
push
fs
mov
or
test
es
and
dec
pop
hlt
sti
subl
pop
and
cmp
imul
adc
repz
cmp
jg
cmp
mov
adc
mov
mov
fstl
shrb
das
inc
push
jno
lds
sbb
pop
mov
outsl
jbe
or
loopne
pop
inc
mov
out
imul
cli
stos
enter
jb
sbb
xchg
test
inc
push
mov
pop
xchg
xorb
mov
fld
sub
inc
test
xor
inc
inc
out
mov
repnz
inc
movsl
js
stos
push
and
lods
lcall
xchg
mov
loopne
push
jmp
cmp
scas
testb
jnp
cltd
popl
sub
addr16
xchg
adc
arpl
xor
adc
jp
inc
pop
xlat
mov
cwtl
js
push
aas
andl
or
mov
aaa
sub
ret
out
shlb
mov
fdivs
loope
xchg
add
sbbl
jns
aaa
push
inc
ljmp
scas
adc
insb
push
rclb
jl
popf
push
ds
loop
jge
inc
jno
mov
xchg
and
dec
insb
dec
pop
repz
sub
mov
pop
popa
inc
in
add
out
test
cmp
push
inc
fidivrs
andb
rolb
lcall
loop
fldl
cmpsl
pop
mov
pop
cs
fisttpll
or
pop
cmpsl
push
cld
push
adc
imul
jge
cmc
in
repz
add
dec
sub
arpl
mov
imul
mov
insl
pop
push
out
xchg
std
and
popf
fcoml
out
pop
inc
jae
or
sbbl
stos
adc
jecxz
xchg
lods
shll
enter
cmp
xor
shlb
push
mov
adc
and
inc
mov
dec
cmp
xchg
sbb
fildl
and
fbld
jo
and
push
shrl
fistpl
pop
or
xchg
je
shll
xorb
mov
lret
push
push
xchg
jae
xchg
sbb
aad
lret
negl
adc
repz
push
sub
dec
cwtl
xchg
imul
jno
iret
mov
push
inc
enter
xor
addr16
and
cmp
pop
inc
cmpsl
pop
mov
sbb
sub
inc
push
add
ljmp
dec
repnz
mov
je
pop
fildll
sarl
xor
sub
dec
fsubrs
adc
sub
out
xlat
fistl
out
dec
pusha
push
cmpsl
inc
mov
jns
fistpl
jecxz
aad
jae
pop
pop
call
xchg
hlt
mov
pop
mov
push
data16
xor
jo
or
pop
mov
fistps
cmpsl
testl
or
or
mov
push
sbb
push
inc
mov
movsb
and
jmp
jo
in
xchg
push
imul
fildll
faddl
push
sub
popa
sub
mov
push
xchg
cmp
das
lcall
push
push
and
addl
add
jae
subb
aam
jbe
push
cmpb
into
fwait
cmc
jg
xor
mov
cmp
add
scas
mov
lods
cmp
sbb
push
pop
mov
rcr
loope
mov
addr16
cmp
outsl
ja
movb
mov
lret
in
xchg
pop
dec
leave
push
dec
mov
jb
push
cmp
jmp
out
mov
mov
aad
out
xchg
enter
in
dec
les
push
sti
and
rorb
cld
cwtl
daa
push
mov
lods
je
pop
jg
push
rcrl
and
clc
ret
das
insb
hlt
mov
push
add
imul
adc
xchg
test
sbb
les
jne
fsubs
inc
popa
stos
or
pop
and
xchg
je
sarl
xor
leave
xor
dec
or
lahf
mov
mov
pop
pop
pop
mov
xorb
sub
mov
mov
xchg
inc
in
pop
sbb
inc
std
pop
xchg
test
push
pop
out
fcoms
mov
in
push
cmp
sbb
mov
inc
sub
sarb
insl
sbb
cmp
and
inc
sub
pop
inc
aaa
in
mov
mov
insb
pusha
mov
dec
xor
int
add
movsb
sbb
xchg
or
mov
jns
xchg
mov
mov
scas
clc
lret
mov
adc
xor
or
xor
mov
out
imul
jl
test
xchg
mov
rorb
insl
mov
and
out
jno
orl
jnp
push
shl
jecxz
inc
aaa
outsb
nop
cwtl
in
mov
fneni(8087
mov
movsl
cmp
aas
fistps
inc
js
add
aad
push
pop
cmp
shlb
fwait
push
push
mov
lret
pop
sub
sbb
lods
push
fildll
sbb
push
pop
in
xor
mov
pusha
outsl
adc
lods
cltd
xor
loop
lods
ja
xchg
jge
sbb
call
dec
xchg
int
jns
or
xor
jl
push
pusha
cld
sbb
sbbb
cld
mov
ljmp
test
pop
jnp
xorb
std
dec
jbe
push
jo
or
arpl
hlt
cmpsl
loope
data16
pop
mov
out
in
fisttpll
sbb
fcomps
cmp
cs
adc
xchg
jnp
jge
jp
fs
cld
test
fdivrs
ret
pop
mov
or
mov
push
xor
and
aam
add
mov
lret
fnsave
lret
add
je
out
inc
gs
mov
jno
out
mov
into
push
mov
cli
mov
mov
cli
dec
sbbl
lea
add
jmp
or
dec
push
rcrl
push
xchg
and
ss
aas
xor
xchg
fnclex
sbb
mov
sub
mov
or
lds
lahf
aas
sub
adc
mov
and
lahf
cltd
scas
fadds
fisubs
arpl
cmp
repnz
loop
les
dec
pop
jp
jne
popa
pop
mov
sub
aas
xchg
mov
nop
sbb
add
loop
pop
pop
sub
pop
loope
and
test
sbb
sbbb
movsb
cli
test
dec
and
push
pushf
push
jne
jge
inc
hlt
dec
pop
lods
dec
pop
notl
jecxz
and
jg
xlat
xchg
dec
les
insb
fsubrl
xor
aam
push
dec
inc
jo
push
and
sbb
lock
xchg
call
pop
mov
or
subl
sub
stc
pop
and
xchg
mov
pushf
pop
push
inc
xor
movsb
push
sub
repz
imul
push
aad
pop
leave
aam
dec
pop
aaa
pop
mov
sbb
addr16
mov
push
jmp
mov
gs
sub
int
pop
daa
xor
mov
cmp
push
ret
add
mov
popa
mov
out
add
sbb
jp
fdivrl
dec
pop
scas
fs
dec
jno
xchg
jg
xchg
pop
orb
lds
pusha
scas
out
loop
fwait
mov
lods
scas
rcrb
jle
jb
data16
sub
adc
icebp
dec
das
inc
lahf
adc
cli
test
adc
sbb
lahf
pop
mov
in
cs
neg
dec
push
xor
inc
mov
jno
in
sub
or
test
pop
mov
mov
shr
cmp
mov
aas
push
test
jmp
cltd
je
push
pusha
push
stos
icebp
das
pop
pop
sbb
dec
pop
ljmp
ja
push
inc
xchg
xchg
mov
dec
orl
aaa
mov
or
loope
enter
notb
mov
jmp
adc
push
pop
sbbb
add
pop
aam
inc
xchg
stos
js
outsb
dec
xchg
sbb
pop
pop
and
das
jl
adc
lods
inc
cli
inc
mov
sub
dec
ret
adc
repnz
sbbb
aad
insb
aaa
push
or
cld
pop
inc
popa
das
mov
xchg
pop
dec
lret
mov
push
call
mov
test
xlat
and
jecxz
sbb
mov
sbb
out
mov
loopne
mov
and
dec
sub
jecxz
mov
test
pop
imul
push
mov
in
sbb
lock
mov
jne
adc
arpl
jp
fnstsw
push
clc
jno
out
sub
or
bound
fwait
mov
adc
sbb
or
xchg
js
mov
pop
dec
iret
mov
fidivrs
push
loopne
add
pop
popa
and
stos
pop
dec
push
push
orl
sbb
xchg
xlat
inc
repz
pop
in
clc
sbb
ret
andb
repnz
out
xor
ljmp
jo
cmp
daa
cmpsl
ljmp
stos
arpl
inc
leave
mov
pop
sub
test
icebp
jo
rcrb
clc
stc
fisubl
adc
rorb
adc
push
outsb
mov
xchg
jmp
daa
xor
js
repnz
loopne
shrl
cltd
in
jns
and
scas
xor
loop
ljmp
xlat
arpl
pop
add
ljmp
sti
insl
mov
push
sub
lods
test
int3
adc
js
cmp
jo
loopne
fdivs
jb
cmp
push
cs
inc
sbb
iret
jbe
cltd
inc
xor
push
fcoml
add
mov
aam
push
push
ror
mov
fbld
jge
jns
nop
cli
das
dec
add
inc
subl
popa
dec
inc
or
lds
repnz
popf
jg
mul
mov
ret
or
sub
or
pop
hlt
mov
ret
stc
xor
xor
out
inc
lock
bound
jns
dec
in
dec
xchg
push
data16
scas
call
push
call
int3
mov
or
lods
xor
jg
sbb
xchg
cli
mov
testl
inc
or
lea
add
mov
jg
lret
inc
outsb
or
rcl
pop
push
rorb
mov
ret
push
js
jb
sbb
mov
stos
dec
dec
mov
or
and
or
arpl
inc
xchg
faddp
mov
fcmovbe
cmp
adc
mov
cltd
mov
xchg
add
icebp
push
mov
int
rorb
xlat
andb
push
jmp
or
xor
sub
sub
dec
in
mov
mov
inc
jmp
sbb
jge
jmp
ficoms
mov
push
lret
jae
xlat
inc
mov
repz
mov
add
or
sbb
pop
mov
cmp
mov
inc
inc
and
adc
push
les
mov
mov
adc
dec
outsb
in
pop
or
jb
push
int
pusha
cld
cmp
loopne
add
and
push
push
pop
push
and
cmpsl
fidivrs
pop
fistpl
cmp
cmc
mov
add
mov
lea
and
imul
mov
or
adc
mov
fbld
hlt
test
adc
divl
push
cld
push
into
rorl
lahf
jae
divl
pushl
cld
repnz
mov
inc
out
jle
ljmp
aam
sbb
and
call
outsl
or
mov
dec
fsubl
jnp
mov
ret
mov
mov
mov
out
fdivl
fmull
iret
enter
out
lcall
jno
pop
push
and
cmp
mov
mov
jo
sub
sub
cmc
cmp
dec
and
and
fucomip
jbe
insl
shrl
repnz
add
mov
push
push
jns
cmp
mov
bound
pop
pop
or
inc
jne
sub
nop
into
cmp
bound
jp
outsb
outsb
popf
mov
addr16
mov
cmp
fimuls
adc
sub
dec
pop
je
add
mov
and
mov
ljmp
sbb
or
adcb
gs
dec
subl
out
stc
pop
sbb
mov
out
int3
lcall
dec
dec
and
xchg
dec
js
sbb
mov
xor
lret
pop
xor
xchg
add
loope
fcoml
invlpg
sbb
sti
inc
push
aaa
ret
mov
xchg
push
gs
scas
jns
data16
mov
add
cmp
or
cs
pusha
add
stc
and
pop
mov
xor
lcall
rcll
sti
xchg
cltd
shl
gs
or
push
cmpsb
jle
sbb
fadds
or
push
and
jmp
sahf
ret
xchg
sbb
xor
js
frstor
sub
cmp
mov
push
movb
sti
rorl
setge
cmp
stos
jbe
inc
sbb
xchg
jmp
cmp
in
ret
in
pop
pop
int3
shlb
mov
popa
push
adc
mov
jns
inc
jae
xchg
clc
or
fucomip
push
xchg
cmpb
cld
rcrl
pop
pop
cwtl
test
sub
dec
push
push
rorl
add
mov
mov
sbb
shlb
pop
xor
mov
mov
push
call
je
xor
push
lcall
dec
jl,pn
and
ljmp
cmpsb
xor
mov
jae
repnz
inc
outsb
js
push
xchg
sahf
xchg
mov
loopne
or
cli
ficoml
inc
pop
pop
sbb
enter
out
lds
mov
cmp
arpl
cltd
mov
sbb
rorb
stos
aad
std
push
ds
arpl
fucompp
je
mov
mov
fcomps
outsb
out
xor
adc
push
std
ljmp
xchg
or
pop
mov
les
dec
xchg
or
lcall
das
xor
es
in
cmpsb
je
adc
lahf
sbb
pop
inc
repnz
fwait
test
mov
push
movsb
mov
xchg
lret
adc
mov
sub
cmpsl
inc
sub
sarb
xor
mov
mov
xor
daa
push
sbbl
insl
mov
mov
enter
jecxz
lahf
mov
loop
dec
imul
stc
jecxz
das
lret
mov
push
sub
cmp
sbb
and
cmp
mov
std
shlb
pop
pusha
pop
insl
and
iret
jmp
insb
cli
mov
lods
push
jbe
and
inc
leave
mov
js
lea
dec
mov
fdivl
jmp
inc
gs
mov
cmpsl
stos
mov
xchg
add
jg
pusha
in
pusha
js
movl
sub
xor
pop
xor
sbb
sbb
inc
movsb
jae
push
xor
mov
jl
les
and
arpl
loopne
and
rcr
test
sub
xor
scas
pop
shll
adcl
sub
pop
sti
inc
cltd
scas
mov
push
jnp
and
dec
xchg
jmp
aam
cld
xchg
sti
push
dec
mov
in
rcrl
sbb
popa
and
dec
outsl
cltd
stc
scas
stos
aaa
xchg
ss
roll
daa
cmp
out
test
movsl
outsb
mov
jle
daa
outsb
xorl
cmpsl
stos
jo
xchg
mov
stos
adc
sahf
sub
and
mov
test
cmp
movsb
icebp
cmpsl
test
mov
dec
fbstp
in
cmp
int
jo
fwait
or
mov
lea
mov
jge,pn
cwtl
js
test
push
xlat
fbld
mov
test
fistps
fisubl
mov
aas
jmp
shr
jp
sbb
mov
jle
loopne
out
or
in
mov
xor
cmp
mov
ret
jp
ret
push
lret
push
outsl
mov
pop
adc
sbb
push
xor
push
mov
cmp
loop
xchg
and
and
cmp
and
in
je
or
jb
xor
test
jb
cmp
gs
cmp
mov
popa
cmp
dec
xlat
cmp
xchg
test
pop
andl
jmp
cwtl
jne
test
cmpsl
add
mov
cmp
leave
jl
lods
sti
mov
repnz
cs
fildl
mov
imul
into
jl
jnp
fnstenv
mov
push
inc
xchg
mov
mov
insb
jnp
repz
lock
xchg
jmp
jge
cld
mov
insl
cmp
and
mov
imul
xor
iret
jno
sub
aas
stc
push
push
mov
aaa
nop
repz
pop
nop
adc
cmp
pop
in
int
jg
push
add
or
sti
jmp
das
lods
cmpsb
ja
mov
popf
pop
push
in
adc
sbbb
in
jno
dec
clc
jbe
lahf
insl
lods
push
data16
fisubrl
pop
sbb
jle
and
adcl
xchg
xchg
outsb
pop
lcall
js
jbe
mov
lret
adc
clc
stc
and
aaa
sbb
mov
adc
loop
aam
adcb
into
inc
gs
cmp
add
mov
fsubl
adcb
pusha
mov
cmc
lods
xchg
ss
inc
into
shl
mov
ds
push
out
mov
xor
pusha
xchg
push
out
push
add
cwtl
and
sub
pop
pop
xchg
jb
or
push
jmp
cmp
cmpsb
sbb
lods
jge
pop
mov
sub
mul
xor
cmpsb
jb
icebp
das
add
sub
push
clc
shrb
rolb
sbb
dec
add
ret
dec
cmp
stc
xor
enter
rcll
leave
jb
loop
cli
push
loope
fdiv
pop
or
adc
push
pop
js
nop
mov
lcall
lds
jg
push
lcall
adc
ljmp
jbe
mov
sbb
jno
xlat
xor
mov
and
in
push
adc
test
ret
fistpl
pop
push
push
mov
xchg
xchg
push
shlb
in
xchg
mov
push
addr16
adc
ja
mov
ret
xorl
jl
cwtl
aam
imul
push
aam
addr16
xchg
cli
jns
cmp
sub
add
xlat
dec
repz
fists
and
out
lods
xchg
jnp
or
push
mov
in
test
xchg
mov
sbb
loope
les
aas
mulb
cmp
stos
and
xor
jnp
ss
adc
mov
inc
lahf
jg
mov
pop
mov
mov
mov
int3
mov
cwtl
ljmp
push
xor
scas
push
out
mov
or
subb
push
add
daa
mov
out
add
scas
pusha
mov
inc
xchg
xchg
fwait
xchg
in
push
imul
ret
cmpsl
dec
call
outsb
insb
mov
push
in
addr16
call
adc
cmc
testb
mov
cmc
sbb
add
mov
xor
rclb
push
mov
inc
bound
pusha
xchg
addb
sub
sbb
clc
dec
neg
mov
mov
mov
xchg
mov
mov
cmp
xor
jg
mov
insl
xor
inc
test
xor
and
jle
ror
negb
inc
loope
inc
negb
mov
je
mov
ret
imul
rcr
repnz
arpl
lock
mov
xchg
popl
sub
lea
mov
pop
in
aad
cwtl
lds
dec
hlt
mov
fcmovbe
sub
movsb
adc
push
cld
lcall
rcrl
dec
adc
mov
call
aam
inc
loope
loop
mov
inc
dec
xor
mov
fbstp
mov
rcrl
adc
fsubrs
pop
enter
mov
scas
mov
xchg
std
daa
pushf
out
adc
les
add
cmp
dec
movsb
loopne
ficomps
mov
xchg
int3
mov
mov
rorl
sbb
loop
mov
mov
les
add
movsl
add
dec
scas
loopne
rcll
pop
hlt
mov
lods
mov
pop
push
bound
or
and
dec
fs
addb
nop
insb
inc
cmp
imul
lret
sub
call
jecxz
rcrb
inc
inc
pop
adc
imul
es
lea
std
outsb
pop
dec
test
data16
sti
mul
mov
shrl
cmpsl
ljmp
in
or
push
fimull
inc
sbbl
out
ret
cmpb
pusha
sarb
inc
sarb
movsl
mov
stos
out
pop
pop
push
xchg
rorb
pusha
cltd
mov
mov
clc
in
and
add
xor
movsl
aaa
pop
adc
push
push
scas
je
xchg
sbb
xor
pusha
sub
dec
fptan
mov
inc
cmp
ds
mov
js
aam
jl
loop
rolb
or
div
outsb
lahf
xchg
add
icebp
jae
push
scas
jnp
imul
and
add
xchg
mov
xchg
push
in
out
shll
adc
cld
mov
or
arpl
sub
dec
mov
mov
mov
fs
push
bound
sbb
fstpt
jb
fidivs
push
ljmp
test
ud0
cs
jge
and
push
int3
outsb
xchg
inc
int3
sbb
popa
mov
and
mov
adc
inc
xor
push
pop
sub
loopne
and
pop
push
roll
pop
daa
enter
and
out
mov
aas
in
movsl
outsb
or
jbe
divl
sti
push
nop
mov
push
mov
mov
mov
das
xchg
shll
cmp
decb
xchg
cmp
enter
mov
loope
pop
jl
imul
jnp
dec
inc
inc
push
hlt
lret
daa
test
add
aas
aas
in
fwait
mov
mov
loope
push
xchg
popf
pop
add
push
mov
dec
bound
and
pushf
inc
addb
pop
xchg
fadd
data16
jns
mov
or
test
js
mov
jl
and
call
imul
movsb
mov
sti
jmp
adc
sbb
mov
jle
sub
stos
mov
pop
push
mov
inc
fcoml
and
xchg
ja
sbb
xor
xchg
movsl
arpl
pop
xor
loopne
or
sub
inc
sub
insl
cli
add
dec
adc
sbb
xchg
cwtl
jnp
repz
cmp
dec
sar
cmp
testl
jl
leave
add
cltd
repz
mov
xor
push
int
push
push
iret
jno
sahf
mov
sbb
mov
stc
xor
les
or
inc
cmpsl
mov
cmp
push
push
aam
insl
xchg
mov
arpl
in
cmp
aaa
xchg
icebp
sbb
and
lret
movsb
insl
or
repnz
xor
andl
test
imul
dec
xchg
sub
movsl
icebp
pop
push
cs
add
and
imul
pop
and
aas
xchg
sbb
jae
add
mov
mov
push
lret
call
mov
mov
cwtl
jno
mov
gs
jbe
fstpt
mov
ja
push
adc
test
dec
std
mov
xchg
popa
psrld
xor
loope
daa
sub
inc
arpl
ja
stc
sub
cmp
fiadds
inc
jge
sub
lcall
in
or
sub
push
dec
push
std
xor
jns
jmp
cs
les
sahf
imul
pop
outsl
ret
xor
xchg
jnp
hlt
xor
push
add
and
cmpsl
insb
sub
pop
aas
add
mov
inc
dec
pushf
orl
xor
mov
test
push
cmpsb
add
adc
fs
pop
sahf
jae
jo
sub
adc
dec
mov
cmp
scas
adc
insb
rcrl
and
mov
pop
and
adc
inc
inc
in
lret
push
xor
fs
push
mov
or
jp
es
push
jle
and
sub
loop
mov
inc
push
push
mov
jb
sub
xchg
rcrb
dec
lea
inc
sbb
cmpsb
les
gs
adc
sarl
jp
inc
nop
lahf
loopne
pusha
mov
loopne
ss
jnp
enter
addr16
cli
mov
pop
dec
imul
xor
jns
js
adc
hlt
dec
popf
jp
lret
push
push
push
stc
sbb
fsubrl
cmpsb
arpl
push
sub
loop
mov
pop
cltd
stos
jmp
cld
imul
pop
add
outsl
out
fstps
ljmp
arpl
xchg
outsl
sub
loop
jno
xchg
imul
pop
push
and
subl
fwait
adc
pop
push
sbb
mov
jl
jg
mov
pop
pushf
mov
enter
arpl
pop
shrb
jo
mov
adc
fxch
dec
ja
ljmp
scas
movsb
scas
mov
mov
insl
sahf
push
call
cmp
pusha
dec
lock
add
aam
mov
jo
pushf
fs
aas
and
mov
push
sub
pop
repnz
les
es
xchg
enter
sub
aas
cmp
scas
stos
jg
or
dec
xchg
repnz
fprem
clc
push
sbb
aam
idivb
shll
out
repnz
jmp
push
cmp
fistl
sbb
scas
mov
roll
push
adc
sti
repnz
sbbl
mov
and
les
xor
mov
push
mov
cmpl
sbb
pop
aam
mov
adc
std
lock
inc
repnz
out
jle
rolb
fcmovne
leave
sbbb
fiadds
dec
loope
xchg
insl
jnp
test
or
xor
fdivrl
rcrb
add
int
in
cmp
mov
push
fsubl
stc
add
cmp
pop
adc
cld
fstpt
dec
call
push
das
out
into
das
addb
mov
icebp
xor
add
adcl
and
ljmp
int
mov
repnz
mov
sti
insl
cmpsb
sub
pop
mov
mov
shlb
push
fdivs
data16
mov
aas
aaa
in
cmpsl
dec
lcall
icebp
mov
xchg
rclb
cmp
pop
fidivl
out
sahf
mov
and
jnp
sub
js
xchg
in
and
jns
es
les
inc
ds
inc
xor
jo
std
and
add
mov
push
sub
mov
clc
mov
into
dec
cmp
xchg
xor
rolb
push
pop
push
cmpsl
inc
add
test
xor
rcrl
std
cmp
mov
inc
lock
adc
aaa
loop
dec
mov
xchg
adc
inc
sbb
xchg
sbb
lret
imul
jne
flds
imul
hlt
push
dec
mov
jp
pop
jbe
push
and
add
sbb
in
test
inc
push
std
sub
dec
xlat
sarl
mov
pop
push
subb
sub
arpl
repz
mov
fimull
stc
adc
movsb
pop
xchg
pop
cmpsb
call
fistpll
loop
sbbl
or
shll
push
sbb
lcall
mov
sbb
in
inc
pop
jae
push
loopne
out
lcall
and
lock
in
jge
mov
xchg
aas
pop
int
adc
shrb
out
pusha
sti
loop
jno
inc
dec
pop
sbb
hlt
stos
mov
mov
sub
pusha
mov
adc
in
aam
out
push
dec
fsubrl
cmp
loope
jnp
sti
mov
pop
fnsave
sub
xchg
int3
daa
in
daa
into
cmp
aam
fs
push
push
fdivr
xchg
roll
pop
ja
cmp
dec
cmpsb
outsb
mov
mov
pop
sbb
mov
pop
iret
addl
das
jecxz
pop
pushl
fs
mov
xor
loop
mov
gs
xchg
call
adc
ret
inc
mov
adc
addb
ret
scas
xor
xchg
and
sub
mov
dec
or
repz
out
and
mov
outsl
cmp
cmp
outsb
mov
insb
outsl
jb
loope
push
or
sqrtps
faddl
gs
popf
loope
in
fmull
jecxz
in
inc
mov
lcall
pop
mov
sub
or
mov
aad
in
lods
pop
xchg
xchg
cs
cli
out
fsubs
sbb
lret
imul
mov
out
and
dec
fucomi
frstor
je
out
push
and
or
test
inc
pushf
outsl
and
mov
test
sarb
addr16
int
sub
xor
add
clc
in
loopne
sbb
cmp
sub
pusha
push
push
lret
test
sub
add
hlt
mov
ss
mov
loope
xchg
test
cmp
add
gs
and
cmp
cwtl
mov
adc
or
repz
jo
push
fdivl
adc
and
out
dec
jg
xor
loopne
jp
push
mov
mov
cmc
bound
cld
das
loop
sub
pushf
das
lcall
sbb
ljmp
cmp
add
xchg
adc
leave
pop
and
dec
and
pop
cmp
push
popa
push
cmc
stos
mov
test
testb
lahf
jg
popa
addr16
je
push
nop
sahf
cli
imul
inc
test
cld
in
lcall
jg
xchg
in
xor
sub
mov
dec
into
imul
fcmovne
shll
mov
shll
ds
fiadds
push
pop
cmp
scas
push
enter
pushl
jnp,pt
sbb
fcomps
outsb
sarl
call
testb
das
cmp
in
shll
mov
loop
mov
les
das
pop
jge
in
push
push
jnp
mov
lods
imul
sti
add
cmp
lods
sbb
ficomps
shl
fsubs
ss
and
rolb
cmp
lea
ret
rol
jmp
cmp
scas
sub
pop
fucom
test
mov
or
fiadds
or
or
xchg
dec
push
sub
cwtl
jmp
rcrl
lcall
sub
sbb
inc
adc
int3
cwtl
out
jae
mov
add
pop
or
xchg
mov
sarb
outsl
fimuls
imul
cmpsl
imul
sub
jns
xor
xor
mov
xchg
ja
sbb
pop
jno
shrl
jmp
or
xchg
xchg
fldcw
dec
xchg
push
loopne
push
mov
inc
xor
jl
stos
fcoml
dec
mov
add
inc
ret
add
cmovge
cltd
mov
inc
sub
aas
fldcw
mov
cmp
sbb
cwtl
jb
mov
scas
popf
inc
dec
mov
inc
mov
mov
icebp
arpl
imul
data16
sbb
fwait
pop
xchg
lods
fnstcw
add
shl
cmpb
xchg
mov
sarl
push
mov
subl
inc
aad
sbb
adc
or
cli
scas
sar
mov
fists
imul
test
pop
pop
xor
out
mov
lcall
lahf
cmp
outsb
aas
xchg
enter
xchg
dec
or
jnp
das
xchg
movzbl
pop
repnz
dec
call
cltd
push
jnp
lret
xchg
cld
sub
dec
mov
sub
and
hlt
cltd
jbe
stc
repz
cmp
fbstp
inc
divb
mov
incb
xchg
addr16
fidivs
test
pop
mov
jle
cli
in
fwait
pop
leave
ss
push
sbbl
mov
jmp
sub
mov
mov
hlt
hlt
mov
mov
pop
mov
sbb
fildl
push
dec
dec
mov
out
ret
mov
loopne
std
push
hlt
jmp
mov
sbb
adc
lock
jno
and
outsb
pop
fstpl
dec
mull
push
xchg
pop
loop
add
aaa
sub
xchg
and
jg
je
fidivl
fcomps
or
push
js
sub
or
mov
dec
ficomps
or
xchg
out
ret
rorl
add
movsb
mov
mov
mov
mov
and
fdivl
pop
sbb
fldenv
sbb
xchg
in
mov
xchg
into
or
js
dec
cmp
adc
xchg
mov
mov
lock
add
inc
sub
subb
add
mov
ficoms
mov
jmp
adc
lea
out
add
loopne
jmp
stos
and
das
imul
arpl
inc
popa
mov
inc
fdiv
lods
add
jmp
aaa
test
mov
push
imul
adc
and
jmp
push
lock
outsb
push
mov
xlat
test
lea
lahf
dec
gs
stos
repz
add
enter
xor
mov
inc
mov
mov
jae
loopne
add
mov
jnp
lea
and
cltd
adc
loop
and
outsb
xchg
out
aas
mov
and
in
adc
cmp
sub
mov
add
jecxz
mov
cmp
outsb
push
stc
xor
push
aad
pop
orb
dec
mov
in
std
push
mov
sbb
or
lret
daa
outsl
stc
sahf
rolb
enter
lcall
xchg
inc
push
shll
repz
sbb
test
cmp
lock
add
ret
in
fmuls
lcall
gs
gs
imul
lcall
mov
int3
outsl
xchg
call
and
shl
mov
andb
sahf
xor
and
insb
cld
ljmp
push
push
jg
mov
jge
jae
jecxz
popa
or
push
int3
outsl
inc
loope
dec
mov
fmull
test
sti
icebp
dec
in
repnz
gs
mov
mov
sbb
push
and
mov
jle
push
imul
leave
xchg
pop
jl
ljmp
push
test
mov
push
push
fbld
adc
add
xchg
stos
mov
xor
jge
pop
addr16
and
push
insb
aas
jg
push
arpl
push
or
lock
addw
iret
fdivl
clc
int3
jl
jecxz
pushf
lock
cwtl
mov
or
movsl
pause
decb
mov
dec
sbb
icebp
insl
xchg
dec
xchg
loopne
push
inc
das
cmp
xor
mov
or
fadd
jmp
repz
insl
ret
inc
pop
cmp
mov
test
lock
push
xor
dec
rcll
push
inc
loope
fisubrl
and
insl
sub
aaa
test
fwait
popa
int3
fcomps
ja
xchg
push
and
jge
lret
dec
mov
cmovae
imul
rolb
push
loope
xor
jb
and
inc
mov
movsl
aaa
sbb
mov
rorb
and
sub
and
xor
movb
pop
pop
pushl
repz
into
and
jle
push
sub
lret
cli
add
jp
xor
mov
lock
push
jno
push
pop
fadds
mov
push
jns
inc
lea
lock
mov
mov
fstpl
pop
pop
lcall
push
sti
push
clc
out
in
loopne
sbb
dec
enter
xor
push
repnz
nop
xor
pop
xor
sar
jbe
cmp
fldl
shlb
pop
stc
inc
pop
les
xchg
cld
cmp
fwait
push
add
sbb
rcrb
ffree
push
mov
adc
mov
popa
das
jb
add
daa
int3
imul
in
daa
sub
pop
dec
push
push
popa
js
xor
lea
mov
jno
dec
or
fsubrs
mov
xchg
jno
sub
cltd
leave
jg
jg
add
jae
out
ss
sbb
sub
mov
mov
sub
loopne
cltd
sbb
sub
bound
out
js
add
test
addl
cs
std
cmp
iret
mov
jl
insb
sbb
es
and
sbb
insl
aad
out
pop
sbb
jnp
jns
int
dec
add
js
pop
mov
fcmovne
cwtl
int
scas
mov
in
xchg
out
mov
in
adc
aas
int3
mov
sbb
test
fsubrl
arpl
jge
ds
adc
in
add
and
stos
cmp
nop
cwtl
push
daa
icebp
pop
inc
xor
daa
std
or
test
fwait
mov
cld
mov
sbb
ret
jecxz
add
fwait
dec
xor
mov
mov
jnp
aas
cmp
stos
mov
jmp
inc
sbb
mov
cmp
mov
rclb
inc
int3
inc
loop
sti
jnp
nop
mov
adc
das
inc
mov
imul
pop
nop
in
sbb
jb
add
icebp
scas
inc
pop
outsl
popa
or
dec
mov
out
or
cmpsl
lods
fidivrl
mov
jb
jl
cmp
and
sub
fcoml
mov
xchg
fistps
outsl
ss
mov
add
les
test
jl
rcl
mov
dec
xlat
mov
sub
add
arpl
inc
add
xor
xchg
les
mov
cmp
call
push
or
pusha
pop
dec
insb
in
rcr
cmp
test
ljmp
push
xchg
push
xor
imull
dec
or
rcl
bound
pop
in
adcb
cwtl
ja
pop
gs
popl
pop
sbb
jge
mov
push
xor
repz
inc
inc
pop
mov
sbb
dec
sub
or
leave
jmp
aad
push
loop
movsb
pop
mov
in
hlt
or
push
inc
dec
jg
and
push
push
sbb
cmp
test
cs
out
ja
sub
adc
add
movsl
add
and
cmp
dec
test
mov
ds
nop
pop
cmp
es
cmpsb
dec
mov
or
movsb
pop
into
fsubl
mov
jmp
js
fmuls
movsl
pop
aaa
cld
jb
pop
push
mov
mov
insl
pop
sbb
sbb
push
xorl
mov
push
popf
dec
scas
dec
negb
in
out
fldenv
bound
pop
dec
test
cmpsl
repz
insl
xchg
mov
ja
movsl
stos
xchg
shlb
ss
jno
daa
pop
aam
fdivl
inc
nop
add
daa
adcl
ret
push
inc
lret
in
push
xchg
jne
cmp
jnp
in
js
icebp
icebp
insl
ljmp
mov
addr16
adc
in
jbe
cmpsb
push
add
in
dec
or
lock
push
jnp
es
fisubrl
or
pop
mov
or
cltd
aad
lock
rcrl
mov
in
in
mov
scas
icebp
push
mov
in
mov
xor
inc
cmpb
pop
jg
out
test
cmp
cmp
inc
add
in
nop
push
movsl
and
lods
ja
inc
sbb
pop
cmc
rcrb
fsubs
or
mov
xlat
xchg
in
mov
lock
push
shlb
cld
push
test
sbb
in
in
xchg
pop
in
insb
mov
mov
arpl
push
call
adc
jns
movsb
dec
and
ljmp
xchg
jnp
pop
sar
div
jecxz
push
xor
jp
sub
or
dec
and
mov
push
stos
mov
adc
sti
pop
push
repz
aaa
xor
pop
mov
sahf
cld
push
and
xor
outsl
leave
insb
insb
jmp
xor
push
jl
mov
xor
sbb
cmpsb
mov
xchg
ret
push
cmc
inc
scas
outsb
hlt
daa
mov
mov
pop
push
mov
or
jl
daa
js
dec
mov
mov
inc
xor
push
jge
or
ss
add
mov
call
popf
add
xor
ss
pop
mov
mov
sub
push
jno
xor
and
jbe
and
xor
aad
cld
test
xchg
or
das
pusha
lcall
jo
arpl
mov
imul
cmp
cmp
add
pop
ds
shll
push
jle
and
jnp
fs
xchg
stos
mov
scas
lea
dec
jne
and
adc
adc
test
jmp
jecxz
ret
jge
frstor
fnstcw
sbb
cmpsl
pusha
bsr
mov
loope,pt
sub
test
int
aaa
and
or
fdivs
decl
fmuls
and
push
xor
in
jae
stos
insb
add
cs
jg
cmp
mov
in
movsl
xchg
sbbb
lea
mov
cmp
cmpsl
mov
sbb
inc
fisttpll
xchg
xchg
push
lcall
shlb
std
std
decl
popf
xor
sbb
out
pop
pop
enter
dec
cmpsb
xchg
jl
dec
popa
int3
ljmp
sub
push
sbb
mov
icebp
or
shlb
popf
leave
sub
shll
or
and
les
insb
dec
pushf
je
jecxz
ficompl
push
daa
adc
pop
push
inc
or
sti
icebp
popf
popa
mov
lea
cwtl
cmp
xor
lret
ljmp
jnp
pop
mov
test
movsl
fmuls
xor
insl
in
cmpsl
fildl
mov
cs
mov
pop
sbb
add
xchg
inc
and
and
push
cli
adc
xor
je
rcrl
aam
inc
popa
push
lahf
mov
dec
aad
cmp
aam
xchg
cli
fadd
into
jnp
ja
jno
sbb
dec
popa
add
pop
adc
loope
std
ret
fstpl
shlb
gs
or
jg
stc
mov
cmp
push
jns
int3
sub
and
inc
fidivl
aam
scas
insb
jne
pusha
fsubrl
jmp
or
insb
jl
mov
jp
mov
std
pop
xor
xor
sbbl
in
adc
in
hlt
jge
enter
xlat
jmp
cmp
pop
jge
and
inc
sarb
sub
scas
pop
in
insl
movsb
or
or
or
push
aas
cmp
xchg
outsb
adc
nop
stos
lea
cmpb
jge
loop
push
push
xchg
mov
arpl
pop
lret
arpl
adc
int
push
aam
pop
mov
mov
shll
cmpsb
push
lahf
mov
sahf
leave
inc
xlat
jecxz
mov
add
ss
jae
add
mov
xchg
pop
fdivl
jecxz
and
jge
adc
push
sahf
cmc
clc
repnz
push
inc
inc
inc
and
pop
lret
lea
dec
or
imul
divb
pop
icebp
loopne
ds
mov
es
sub
mov
pop
push
dec
or
inc
push
adc
ds
sub
lret
add
test
sub
add
ret
andl
lea
lahf
hlt
xorl
lock
mov
mov
inc
sub
aad
jge
push
pop
pminsw
ret
jnp
push
hlt
jmp
xchg
xlat
bound
mov
sarb
cltd
mov
loopne
cmc
sar
push
sub
adc
std
fidivrs
ljmp
es
xor
sbbl
shr
popf
pusha
push
mov
xchg
notb
aad
fstl
push
inc
aaa
add
sub
xchg
push
out
push
add
mov
rolb
add
les
stc
clc
cld
shlb
lods
lds
xchg
sbb
sti
push
jge
xchg
pop
fs
mov
xchg
push
mov
push
pop
or
pop
pop
sub
inc
xchg
imul
les
inc
adc
xchg
xchg
outsl
pusha
test
pop
pop
mov
popf
xor
push
and
lahf
and
xor
push
dec
stos
loope
adc
xchg
movsb
cld
mov
shll
fcomps
jp
pop
inc
test
movsl
xor
into
pop
fiadds
pop
sbbl
mov
insl
clc
xchg
loopne
sti
orb
movsl
movsb
push
pushf
stos
cltd
inc
enter
scas
mov
dec
or
rcr
lahf
cmp
cld
insb
push
push
mov
dec
sub
lock
es
pop
std
dec
or
push
push
int
jb
cmp
add
js
jb
pop
mov
mov
movsl
and
iret
lcall
pop
xchg
lret
pop
or
or
in
or
mov
or
imul
fdiv
xor
out
enter
orl
cmpsb
xchg
push
sbb
fldcw
outsl
lods
pop
add
out
cmpsb
mov
subl
xchg
xchg
add
jbe
pusha
push
int
or
lcall
pop
lcall
mov
pop
test
push
ficoml
mov
push
push
test
jnp
lcall
cmp
adcb
mov
leave
mov
out
xor
jo
xchg
insl
xchg
or
xor
cltd
or
std
test
cwtl
cmp
xor
lds
lods
addb
cmp
out
mov
mov
sub
adc
nop
cmpsb
mov
pop
clc
mov
test
mov
add
arpl
lahf
call
test
inc
test
repnz
pop
daa
lret
mov
iret
and
pop
hlt
adc
pop
sarb
cmp
mov
or
jbe
ficoml
cltd
xor
xor
inc
jae
push
push
icebp
mov
popa
ret
stos
out
dec
jo
adc
dec
jle
add
mov
sub
neg
movsb
dec
pushf
shlb
cmpsl
lods
jecxz
push
imul
sub
jo
inc
ret
popa
ret
mov
rcl
push
jne
loop
mov
xchg
adcl
negb
iret
das
sub
inc
push
and
dec
in
ljmp
xchg
outsl
cmpsb
cld
pushf
ljmp
jmp
lret
repnz
xchg
adc
sbb
icebp
loop
shll
int
ror
inc
xchg
add
mov
pop
int3
lea
cmpsl
das
xchg
lods
fs
jmp
lret
movsb
lods
mov
test
adc
mov
iret
fs
into
mov
fidivl
mov
jmp
stos
lret
mov
movsb
sub
aas
adc
ret
cmc
rcrl
daa
pop
test
pusha
dec
je
ljmp
ljmp
or
movsl
dec
xchg
inc
xor
out
out
int3
xchg
pop
insb
inc
pop
bound
out
test
loop
pop
and
sub
xor
push
add
mov
mov
mov
jno
mov
sub
sbb
insb
sub
fists
pop
jb
pop
lret
inc
push
loop
push
in
cmp
sarb
push
mov
mov
insl
sub
movsb
dec
aaa
mov
arpl
adc
sbb
or
jl
sbb
and
sbb
fwait
jo
xor
unpcklps
loop
roll
dec
sahf
or
xchg
or
xor
frstor
xchg
cmp
inc
jno
mov
jmp
lock
jns
jmp
insb
call
arpl
ljmp
ret
adc
das
sbb
pop
xor
mov
add
jle
sbb
push
mov
xchg
mov
in
ss
sbb
scas
daa
jl
sub
dec
gs
gs
shlb
xor
aam
pop
ss
repz
jne
clc
mov
jge
push
and
das
lret
ja
mov
in
jno
insb
mov
arpl
push
and
hlt
pop
outsl
call
movsl
inc
dec
fistpll
mov
sub
push
clc
pop
js
add
test
ret
daa
and
lcall
xchg
movsl
sti
imul
enter
lods
stos
cmp
add
lcall
call
xor
sub
iret
and
in
in
push
mov
pop
sti
push
scas
popa
stos
pop
fs
js
mov
nop
jb
add
out
imul
push
sbb
idivl
out
or
pushf
or
fiaddl
movsl
in
or
ret
daa
mov
xchg
sub
jo
fistl
stc
push
push
pusha
cmp
jg
push
sahf
or
mov
stos
dec
dec
ret
mov
pop
aam
push
fstl
data16
adc
mov
in
stos
test
leave
or
pushf
adc
mov
jno
pop
lods
daa
add
ud2
jle
push
std
dec
adc
xchg
jmp
in
popf
mov
and
mov
push
aad
adc
and
loope
popa
out
pop
jnp
out
imul
jae
adc
dec
imul
xorb
or
rcll
int
jle
sti
cmpsl
iret
sub
add
mov
rcrl
adc
adc
inc
bound
divb
lock
and
xchg
gs
ja
pop
add
jmp
cmp
dec
cmpsb
clc
push
pop
fists
gs
push
sbb
cmp
aad
or
mov
in
mov
dec
jle
add
push
jecxz
vmovaps
xchg
fidivrl
xor
stc
iret
addl
sbb
jb
test
daa
push
mov
shrb
pop
sbb
popf
decl
lret
cmpsb
loop
rcr
repnz
push
xchg
jle
xchg
les
les
xor
shl
repnz
dec
insb
cmpsl
mov
sbb
dec
popf
mov
xor
jns
fnstcw
fbstp
jns
pop
aaa
into
mov
inc
mov
ja
sbb
lods
leave
push
test
ficompl
stc
pop
mov
xchg
outsl
rcrl
or
popf
xchg
roll
push
xor
aaa
jbe
mov
pop
xor
stos
stc
xchg
repnz
cmp
sub
cwtl
int3
xchg
das
sarl
and
pop
sub
int
outsl
dec
cmp
lret
mov
jmp
adc
mov
jnp
adc
aam
std
sbb
xor
enter
and
or
lea
fs
push
sub
lock
add
or
das
inc
jno
inc
mov
fdivs
or
sbb
pop
mov
push
aaa
int3
jne
roll
popf
movsb
sahf
imul
add
fdivp
xchg
jnp
xor
xchg
jle
xor
fnsave
fwait
icebp
cmp
xchg
jle
cli
mov
inc
or
aas
in
ret
testl
ret
out
sbb
and
out
ljmp
cmpsb
fmuls
adc
nop
pop
imul
in
inc
or
fwait
dec
inc
and
ds
idivl
sbb
sub
rolb
inc
adc
cmpsb
daa
jnp
adc
jb
jge
mov
pushf
sbb
mov
loopne
mov
shl
add
inc
out
dec
call
orl
out
xchg
cmpsb
popa
or
icebp
inc
xchg
push
sub
daa
mov
fldcw
insl
mov
push
aas
xchg
out
lods
call
inc
lods
divl
int
popa
lods
enter
test
adc
inc
or
and
divl
orl
jmp
call
sub
adc
imul
andb
jle
mov
and
test
lret
add
movsb
jecxz
push
lods
mov
pop
xor
aad
xor
and
ss
outsb
push
pop
cmp
shr
fnstenv
cli
popl
or
repz
popa
xchg
mov
jg
jb
push
xchg
sti
pushf
mov
cmpsl
lret
loopne
fs
in
sub
daa
push
into
inc
test
xchg
add
movb
ret
roll
jae
out
lock
jno
pop
mov
cmpl
or
insb
pop
addl
rcr
adc
int3
xchg
loope
push
adc
int3
sub
daa
jge
mov
movsl
aad
lods
movsl
mov
ja
movsb
cmp
or
or
stc
sbb
cld
inc
jno
inc
outsb
mov
inc
mov
mov
aam
xchg
pop
inc
pop
shlb
loope
pop
mov
mov
dec
in
testb
xlat
jns
mov
sbb
enter
int
mov
ja
xchg
sub
sahf
inc
mov
andl
ficoml
mov
jle
je
mov
adc
enter
loope
popf
mov
xchg
imul
je
mov
push
call
sub
es
sub
mov
bound
sub
and
movsb
xor
push
add
or
dec
mov
mov
xchg
mov
shr
xchg
call
dec
cli
leave
pop
nop
das
xchg
xor
nop
fnstsw
push
sbb
xchg
int
in
pusha
inc
sarb
hlt
mov
xchg
aad
push
mov
sub
ljmp
mov
out
and
call
push
pop
dec
ja
inc
pushf
fwait
sbb
not
ljmp
sahf
pop
pop
mov
or
inc
inc
and
cmpsb
imul
call
test
add
rcrb
jae
int3
cwtl
in
add
xchg
adc
popa
cld
fnstcw
notb
mov
ljmp
nop
into
dec
std
jg
outsb
test
mov
dec
aam
bound
pop
stos
lret
dec
mov
lea
dec
nop
push
cmp
repnz
sbb
mov
mov
insb
fisubs
dec
xor
jge
sub
mov
cmp
add
or
shlb
sub
fucomip
cltd
xchg
add
cs
xor
das
iret
dec
push
inc
cmp
in
cmp
aas
inc
dec
ror
push
inc
ss
xlat
pop
pop
dec
sub
sbb
xor
xchg
jne
movsl
test
pusha
fs
push
sbb
mov
sarl
jecxz
jmp
xchg
lods
sbb
xchg
jl
pop
inc
cmp
push
sub
frstor
xor
mov
push
mov
lock
cmp
adc
lcall
fstps
mov
pop
ret
ja
mov
and
sub
adc
mov
sbb
adc
lret
jmp
dec
or
int
mov
popa
pop
mov
jns
call
scas
mov
jecxz
sti
jae
push
jo
out
enter
lock
repnz
es
in
int3
push
in
roll
enter
outsb
sahf
adc
imul
jns
push
lods
sbb
popa
xor
pushf
inc
out
cmp
mov
insl
dec
ja
fucomi
sbb
ja
loopne
mov
aad
into
push
int
lea
sarb
pushf
fbld
stos
sbb
push
push
mov
je
mov
sbb
push
jl
pop
insl
xor
xchg
inc
out
rolb
ds
mov
fs
sbb
adc
pop
xor
in
mov
sbb
cltd
les
sbb
inc
pop
shll
cmpsb
mov
lcall
imul
pop
cmp
mov
orl
sti
test
inc
and
mov
and
xor
lock
movb
cli
mov
sub
jne
pop
aad
sbb
outsb
and
mov
adc
pop
aas
inc
jge
xchg
or
popl
cmc
in
test
push
xor
cmp
fstpt
or
sbb
xor
fcmove
pop
cmp
pop
inc
and
ret
je
cmp
fsubrl
push
enter
inc
pop
xchg
xchg
fistl
jne
mov
cmp
fstpl
cli
stos
mov
jnp,pn
shr
fists
fidivrl
repz
mov
cmp
cltd
jle
insb
dec
push
mov
dec
inc
lahf
cld
aas
or
popf
xchg
or
cmp
loop
pushf
out
scas
push
inc
adc
les
in
enter
sbb
loopne
xor
mov
mov
roll
jns
push
mov
rclb
scas
cmp
mov
pop
movsl
cwtl
repnz
imulb
mov
dec
pop
mov
xorb
lahf
add
out
data16
lods
push
jmp
cmpsb
jecxz
stos
popf
mov
cmp
ret
adc
sbb
xchg
fadds
les
in
sbb
xor
or
pushf
mov
push
rolb
out
pop
mov
leave
inc
inc
xor
mov
in
inc
push
dec
push
pop
inc
in
push
shr
push
xchg
adc
jbe
out
call
sub
popf
sbb
jo
rcrl
push
cli
stos
sub
mov
pop
call
sub
mov
stos
sbb
fbld
adc
sbb
test
ljmp
insb
mov
xchg
fiaddl
push
js
bswap
jmp
pop
test
hlt
mov
ret
sbb
ds
or
dec
mov
outsb
push
int3
cmp
add
rcr
pop
std
loopne
and
sub
ljmp
mov
popl
xor
xchg
mov
ror
mov
fiadds
call
and
pop
pushw
mov
icebp
sbb
push
push
push
loop
lods
ret
mov
or
scas
and
rclb
xchg
mov
rclb
inc
and
xchg
sar
push
and
add
pcmpeqw
mov
pop
dec
fildl
mov
stos
js
sub
clc
inc
xchg
cmp
and
scas
test
fs
dec
push
jecxz
pusha
push
lods
in
popf
sar
outsl
sub
fildl
xchg
lods
push
cmpl
sub
push
cli
rorb
outsl
lods
adc
loopew
sub
inc
pop
adc
imul
fistpll
aaa
inc
xor
cmpb
sbb
sbb
in
mov
je
cmp
pop
das
lock
push
flds
fsub
mov
jmp
test
mov
xchg
imul
pop
jb
call
shll
sub
cs
cmc
add
out
inc
test
and
lods
ret
scas
lcall
js
inc
sub
sbbb
push
dec
adc
pop
in
test
cmp
pusha
fwait
inc
and
xchg
std
sub
rcrw
stos
shrl
orb
shll
int3
and
mov
insb
outsl
insl
pop
pop
xor
test
cmp
and
stos
aam
inc
sbb
sub
sar
sbb
dec
mov
xor
repnz
in
in
movsb
ret
sbb
ja
ret
push
xchg
imul
dec
push
aad
std
pop
in
imul
dec
pop
mov
sbb
xlat
and
shlb
pop
pop
andl
xor
stos
cmp
out
add
scas
sbb
data16
mov
popf
dec
shr
lret
mov
outsb
ss
faddl
pop
push
mov
filds
mov
cld
clc
ljmp
in
gs
cmpb
xchg
cmpsb
ret
or
rolb
lea
cmp
adc
xchg
iret
jb
cli
sbb
add
jne
gs
nop
jle
adc
loopne
in
and
dec
andl
sub
or
cmp
lock
cmpsl
aas
mov
xchg
dec
adc
dec
mov
leave
pop
stc
pop
aad
mov
stc
les
pushf
push
jle
out
mov
out
pop
xor
sahf
aaa
xchg
aas
ljmp
jne
loope
or
push
outsb
sahf
jbe
es
pop
sub
jb
pop
xchg
xor
pop
insb
xor
popa
stc
ds
sub
sub
pop
add
or
mov
jl
outsb
sub
mov
sub
int3
clc
fsubr
mov
cmp
addl
imul
pop
sub
dec
jnp
lods
push
inc
das
sahf
jl
and
int
jno
andb
nop
insb
js
nop
pop
jns
adc
dec
inc
jl
cs
dec
adc
dec
subps
jl
mov
mov
dec
mov
inc
pop
dec
clc
push
jne
sbb
cmpsb
sub
pop
lods
or
jmp
push
in
bound
jge
adc
cs
test
mov
mov
mov
sub
and
das
cld
das
popa
or
mov
adc
jp
mov
js
imul
jecxz
js
les
shl
mov
sbb
sbb
sbb
fnstsw
pusha
js
cli
inc
xor
sub
dec
adc
sub
cmpsb
lods
mov
xor
adc
jmp
adc
addr16
shll
xor
nop
lahf
jmp
clc
xchg
ret
ljmp
sbb
xor
loopne
mov
xor
jl
stos
xorb
aad
or
outsl
mov
and
xchg
call
or
or
sub
sub
jno
push
and
xor
dec
std
sub
mov
mov
rcl
out
test
incb
stos
clc
loope
inc
popf
pop
sbb
dec
jecxz
outsb
mov
xor
mov
clc
lods
ja
inc
ret
repnz
push
sbb
test
mov
jbe
test
cld
dec
shlb
lods
jg
mov
int3
xor
or
and
cwtl
scas
mov
imul
test
sbb
sahf
mov
ret
ret
fxch
or
lods
cwtl
mov
adc
or
lea
mov
push
dec
adc
jae
mov
add
ret
iret
outsb
mov
ror
rorl
rcrl
xchg
notb
pusha
outsl
add
lret
lret
mov
test
jecxz
push
je
sahf
lret
adc
aad
addr16
jno
dec
es
js
scas
jne
mov
sti
pop
ja
xchg
adc
clc
test
cli
dec
rcrl
mov
int3
int
sbb
sbb
movsb
sbb
jb
ljmp
push
jle
jno
push
xor
push
adc
imul
adc
jne
iret
inc
mov
push
insl
in
call
dec
cmp
xlat
aaa
adc
ret
icebp
mov
xchg
jecxz
movl
push
pushf
scas
je
push
mov
mov
xlat
call
jo
xchg
xchg
pop
in
stc
mov
sub
int
mov
in
push
jno
pop
outsb
xchg
jp
mov
fldl2e
inc
xchg
mov
or
cli
mov
jo
sbb
jnp
repz
lea
mov
fildl
mov
mulb
lret
test
jae
cmp
add
or
xor
mov
and
cmp
gs
cmp
insb
out
and
insl
dec
das
mov
cmp
lds
jg
inc
jmp
push
inc
jne
sti
adc
mov
hlt
das
sti
dec
lock
sbb
cmp
mov
mov
dec
loop
push
sbb
and
outsb
adc
dec
mov
or
movb
and
xchg
ss
push
cld
add
dec
dec
es
in
lock
aas
ret
mov
pusha
xor
push
insb
enter
dec
xchg
notl
orb
pop
sbb
in
or
xchg
int3
adc
mov
loope
lret
int3
ss
fidivl
fldcw
and
in
push
pop
mov
call
cld
shll
sub
xchg
arpl
pop
loope
jno
pop
es
jmp
insl
cltd
cmp
mov
mov
outsl
sub
jecxz
test
push
inc
in
sbb
iret
out
gs
call
or
jp
out
out
int
push
test
aas
arpl
pop
clc
push
int
iret
movsl
cmp
cld
mov
push
mov
pop
sbb
lds
bound
ret
pop
rorl
fstpt
lahf
mov
imul
aam
xor
dec
xchg
bswap
add
into
scas
adcl
sbb
arpl
je
mov
jno
pop
pop
mov
xor
mov
repz
push
imul
cli
aaa
fs
ret
mov
popf
arpl
daa
adc
xchg
repz
lods
add
pop
adc
xchg
ds
imul
push
ss
icebp
scas
xor
out
lahf
in
std
add
call
shll
shlb
ds
push
gs
fisttpll
adc
mov
scas
repnz
cltd
add
lods
mov
ret
ja
notb
out
mov
sub
pop
mov
pop
fimuls
jae
fwait
test
add
jne
adcl
mov
push
xchg
leave
aad
and
cld
test
lods
aad
mov
aas
pop
xor
in
fisubs
cmpsb
and
icebp
cmpsb
mov
xlat
ds
xor
mov
jae
mov
stos
adc
ljmp
and
cmp
nop
or
sahf
inc
and
pop
pop
leave
cmc
and
icebp
test
and
imul
mov
pop
int3
jp
das
push
loope
fcmovnb
mov
hlt
into
lods
aad
lcall
lret
das
sub
cmp
pop
cmovns
mov
ret
sbb
xor
js
iret
mov
adc
sbb
or
sub
pop
dec
aam
push
pop
dec
cmp
ja
int3
leave
je
dec
gs
adcl
das
jp
fistps
js
hlt
mov
out
bound
mov
xchg
mov
sar
sub
cs
out
stos
mov
xor
jae
mov
dec
inc
out
imul
nop
mov
mov
movsl
test
subl
dec
sahf
fidivs
orl
mov
cld
adc
mov
add
push
push
inc
adc
mov
rcrb
int
lahf
dec
fwait
lahf
adc
and
push
in
out
test
loope
outsl
leave
gs
bound
pop
xor
xchg
mov
mov
sbb
movsl
shlb
pop
movsb
cmc
push
sub
xor
pop
pop
mov
cmpsb
test
adc
and
jecxz
pop
lock
adc
push
push
sub
mov
push
cli
popa
negl
and
rorl
fucomi
ljmp
mov
loope
lea
out
sti
je
pop
shr
or
mov
cmc
je
inc
xchg
mov
fildl
push
adc
shr
iret
lahf
xor
fs
rorb
pop
or
ja
fldcw
popf
cs
adc
stos
bound
icebp
lahf
jnp
mov
add
scas
mov
in
adc
cs
mov
call
into
push
jg
push
in
add
movsl
imul
les
insl
xchg
repz
dec
insb
cmc
in
inc
mov
into
out
out
lock
mov
mov
pop
or
or
movsb
scas
xchg
lret
pop
mov
mov
scas
loopne
aad
lods
and
int3
pop
dec
hlt
iret
movsl
or
pop
xor
stos
xchg
data16
ja
xor
mov
mov
test
test
shrb
fistl
cmpsb
pop
outsl
loope
xchg
movsl
xor
sub
xchg
mov
imul
jg
das
into
insb
movswl
xchg
mov
cltd
les
jo
dec
test
jge
inc
mov
in
push
mov
fsubr
mov
popa
add
inc
testb
movsb
movsb
dec
iret
add
pop
mov
jne
xchg
xchg
cmpsl
mov
push
mov
adc
frstor
and
out
jle
sahf
js
sub
sbb
clc
aaa
sbb
adc
scas
cmpsl
jmp
adc
pop
scas
outsl
fwait
jle
xor
aam
push
cmp
cld
dec
xor
sub
fidivrl
jmp
loope
stc
int3
aas
stc
inc
jmp
mov
popf
mov
arpl
sub
popl
push
pushf
mov
pop
dec
adc
aad
fmuls
imul
pop
clc
jle
and
or
dec
mov
sti
rorb
fnsave
cmp
mov
add
insb
or
sub
pop
jns
xor
sbb
leave
cmp
mov
jecxz
cwtl
shlb
repz
fmull
sub
cltd
shll
clc
lcall
jg,pn
inc
mov
stos
rol
mov
lahf
aad
lock
jbe
pop
adc
insb
shll
pushf
mov
sub
cmc
push
pop
xchg
lret
mov
lret
and
push
pushf
sbb
loop
adc
out
es
sahf
adc
fisttpll
inc
out
out
inc
jmp
stos
es
loopne
jle
jns
add
fidivs
mov
push
xor
js
mov
shr
ret
test
ja
shl
ret
aaa
or
mov
les
sub
pushf
icebp
das
fisttpll
mov
inc
push
adc
sub
lcall
push
fsubl
pushf
cmc
xor
sahf
jnp
das
pop
sub
push
stc
or
shl
lock
aas
lds
pushf
insl
loope
dec
mov
je
xor
fidivrl
sub
sbb
mov
and
shlb
in
mull
or
std
das
mov
loope
pop
xchg
sbb
pushf
or
jmp
mov
jne
sbb
sbb
or
fnstenv
out
inc
pop
inc
add
dec
xchg
in
mov
dec
lcall
jmp
pop
into
push
inc
pop
mov
mov
adc
orl
lods
stos
push
sub
mov
xlat
movsl
shll
pushf
repz
xor
fs
pop
inc
nop
clc
add
enter
sub
fldt
inc
nop
je
lret
push
adc
add
div
popf
xlat
add
push
mov
xor
mov
push
add
pop
imul
fidivs
add
add
pop
mov
mov
push
or
sbb
sbb
aaa
cmp
sub
syscall
test
pop
xchg
xchg
scas
sbb
adc
mov
cmpsb
fsubr
sbb
mov
bound
addr16
out
sbb
push
push
jg
jge
andb
pop
jl
pop
and
cmp
lret
shll
mov
push
and
mov
jbe
outsb
sbb
imul
rcrb
cmp
cs
adc
imul
mov
daa
dec
sub
mov
mov
scas
cmp
imul
int
pusha
sbb
mov
testb
push
push
fimull
shl
inc
pop
vmovaps
sub
mov
mov
jae
mov
in
pusha
cmpl
fnsave
aam
push
push
test
enter
mov
adc
out
movsl
mov
cltd
cs
test
lods
outsl
stos
loope
psubb
xor
sahf
in
xchg
xchg
insl
sbb
add
dec
in
fbstp
sub
mov
sar
push
xchg
push
and
hlt
dec
popa
test
daa
push
jle
aad
mov
sbb
sti
lret
jne
pushf
mov
xchg
pusha
or
call
cmp
aas
ljmp
sub
and
adc
adc
lea
ficoml
push
aad
xor
ret
or
jae
shlb
mov
fisttpl
data16
jb
and
inc
outsb
leave
ret
mov
fisttps
and
adc
ja
in
or
scas
pop
pusha
pushf
xchg
inc
cs
mov
aaa
imul
dec
inc
or
leave
jmp
in
inc
leave
inc
movsl
xor
push
movsl
js
shr
dec
mov
insb
inc
xor
lds
jb
or
pushf
add
ss
in
sahf
push
testb
push
xchg
pushf
fiadds
push
iret
pop
inc
mov
mov
pop
lods
xchg
cmp
dec
xor
orl
sbb
jnp
insb
mov
insl
fscale
popf
push
and
das
je
stos
dec
adc
addb
xchg
sti
sub
mov
sbb
xchg
lods
xor
fldt
pop
or
mov
clc
insb
sbb
clc
dec
nop
push
sub
std
dec
ret
jecxz
mov
cwtl
aad
jbe
cmp
enter
lods
shr
mov
sahf
and
xchg
xor
orb
in
push
xor
cwtl
popa
sub
and
jns
fdivr
dec
hlt
pop
push
jne
inc
adc
rcr
cltd
stos
adc
and
sub
cmp
lea
call
push
pop
sahf
lea
sbb
jmp
add
push
leave
cmpsb
jno
or
adc
imul
dec
inc
sbb
in
cmp
push
addr16
adc
and
leave
mov
pop
sti
mov
movsl
jne
out
nop
rcrl
test
adc
std
out
push
xchg
andl
dec
int3
js
add
inc
mov
scas
xchg
cmp
fdivl
imul
push
adc
sbb
dec
mov
stos
jb
fcoms
inc
imul
cld
jecxz
rorl
sbb
push
lret
pop
dec
mov
mov
dec
popa
jns
pop
fsts
roll
inc
je
loopne
mov
sbb
sub
cmp
icebp
xchg
inc
lods
cmovge
cmp
mov
mov
inc
pop
xchg
pop
repnz
sbbb
adc
mov
es
fisttpl
outsl
sbb
mov
ss
shr
lcall
adc
fwait
push
cmc
pop
xchg
shlb
mov
and
sub
mov
add
lds
mov
hlt
and
mov
sbb
in
sbb
push
jnp
in
jle
mov
push
out
fstl
mov
clc
pop
cwtl
sbb
repnz
ja
mov
mov
jno
jne
in
mov
ret
inc
jb
ljmp
cmc
and
gs
sub
pop
add
pop
push
and
in
lea
je
popa
or
ss
idivb
cltd
sub
popf
in
push
rcll
mov
jno
pop
ret
sub
mov
pop
push
ds
arpl
push
push
sbb
aas
xor
iret
sub
stos
jl
insb
dec
jp
mov
leave
jno
xchg
cmp
test
lods
push
test
jecxz
mov
mov
subb
fldt
push
or
aam
fsubs
push
xchg
stos
mov
mov
and
sti
pop
adc
dec
fidivrs
lock
cltd
sbbb
enter
lock
je
gs
mov
cmc
push
outsl
push
lahf
mov
mov
fs
mov
dec
jg
popf
mov
and
sbb
rol
mov
jb
mov
das
mov
and
pop
and
inc
add
ss
js
fsubrl
idivb
sub
repz
push
dec
fbstp
xor
dec
pop
mov
add
inc
push
lods
xchg
push
aas
int
or
sarl
mov
sbb
pop
es
sahf
js
stc
push
mov
fxam
rorl
sbb
pop
nop
sub
cwtl
dec
xchg
pop
cwtl
out
stos
mov
repz
fs
pop
fs
into
inc
shll
push
cltd
call
inc
and
sub
loopne
add
les
hlt
cmp
fwait
ret
sbb
push
add
cmp
pop
mov
out
inc
mov
aas
pop
xor
pop
dec
dec
enter
mov
cmp
out
je
adc
push
stos
popf
out
pop
scas
fisttpl
mov
cmp
bound
iret
xor
add
test
mov
mov
clc
lds
dec
cmp
sbb
ss
pop
and
and
sub
shll
aaa
pop
fdivrl
iret
xlat
negl
lret
int
pop
nop
fistl
out
lock
pop
dec
add
xchg
mov
test
adc
out
or
push
push
pop
or
dec
and
and
mov
es
mov
cmp
mov
xchg
iretw
in
lds
mov
and
sub
insl
push
xor
in
shll
push
add
xchg
fcmovnu
pop
dec
fxch
dec
dec
push
aas
push
mov
pushf
movsb
lret
imul
into
mov
test
push
xchg
fiaddl
mov
imul
xor
mov
add
xchg
adc
int
ja
or
sub
pushf
adc
out
imulb
fistpl
sti
pop
inc
mov
sbb
insb
jle
dec
enter
xchg
lods
mov
sub
int
push
stos
sub
lock
enter
push
pop
ret
sub
sahf
test
jle
push
mov
lcall
das
insb
pop
mov
jns
dec
adcl
lret
xor
ret
add
xchg
inc
or
sub
cmp
out
jle
lods
add
test
fstps
cwtl
popa
pop
test
adc
ds
mov
or
xchg
jg
push
je
enter
mov
lods
cmc
in
mov
add
xor
inc
add
adc
xchg
pop
int3
cmp
xlat
enter
or
sub
inc
les
jb
mov
mov
cmpsl
inc
mov
xchg
jge
pop
mov
out
jl
cmpsb
pop
mov
daa
hlt
add
je
in
and
pop
jl
clc
imul
imul
cmp
enter
and
mov
in
movsb
mov
lods
daa
push
leave
inc
mov
mov
and
pushf
and
in
loopne
pop
mov
test
mov
xor
test
mov
add
sti
and
mov
inc
xor
vmwrite
test
xchg
pop
je
mov
push
sub
rcr
lods
mov
xor
lahf
and
stos
pushf
cwtl
mov
std
mov
clc
cmp
bound
mov
mov
pop
push
xor
push
mov
fildll
and
pop
xor
push
imul
xchg
xchg
enter
lcall
or
js
jo
jae
add
sbb
lods
jle
cmp
or
jge
jp
lds
ds
lds
adc
add
daa
rorb
push
xchg
sub
sbb
dec
movsb
adc
add
and
sub
fwait
jne
jg
inc
lret
mov
jbe
arpl
sub
xchg
shl
xor
cs
das
sbb
aam
divb
stc
insl
mov
xchg
ljmp
stos
pop
inc
cmp
pop
cltd
int
stos
enter
mov
testl
pop
xchg
loope
pop
cld
call
das
popa
dec
fcmovnbe
push
push
movsb
idiv
imul
scas
cmpsb
rclb
inc
and
and
xchg
nop
fs
repz
add
push
pusha
jge
or
mov
jge
inc
mov
imul
je
outsb
add
and
cld
mov
cwtl
data16
pop
outsb
cmp
cli
mov
cltd
les
rcr
data16
sti
pushf
lods
dec
dec
xchg
jg
in
sahf
dec
fsubl
push
add
push
jle
dec
call
dec
push
addr16
inc
psraw
cmpsb
pop
ficompl
nop
sbb
and
nop
dec
flds
mov
sub
mov
in
xor
adc
sbb
lods
sub
dec
clc
ss
jno,pn
dec
xor
cmp
mov
aam
pusha
inc
imul
stos
jnp
pop
or
pop
jmp
inc
push
stos
inc
dec
pop
fwait
xchg
inc
push
pop
sub
mov
subb
fcompl
stos
aas
sub
sbb
add
in
rorl
inc
test
roll
mov
push
xchg
sbb
add
jne
mov
icebp
ret
mov
daa
paddb
dec
jae
and
dec
push
mov
lcall
movsl
fs
or
adc
loope
push
lock
shl
and
outsl
mov
loop
jae
mov
lock
in
lds
xchg
ror
mov
ja
out
in
cmpsl
lock
inc
cs
fidivrl
fs
in
jp
xchg
jno
push
push
sub
int3
out
add
lret
fstl
fistpll
lock
aam
sbb
scas
xchg
jmp
test
popa
fs
mov
xor
out
popa
lcall
sub
ja
dec
push
sahf
pop
mov
sub
cmovnp
pop
pusha
fwait
cmpsb
dec
mov
mov
in
push
sub
lea
xchg
push
mov
and
adc
fimull
repnz
mov
jns
or
push
sub
or
mov
xchg
cmpsb
inc
das
ds
cmc
outsl
sub
mov
nop
pop
adc
xchg
pop
inc
out
insb
mov
aas
adc
xchg
cmp
push
into
sub
inc
lahf
sub
mov
insl
mov
dec
fmull
loopne
xchg
add
stos
add
les
sub
jmp
xor
dec
fldt
jg
sub
hlt
dec
sbb
and
lret
push
sub
xchg
push
add
and
push
pushf
out
pop
pop
mov
mov
pop
nop
loope
int
or
dec
loop
rcrb
push
mov
sub
pop
es
cmc
insl
cwtl
lods
mov
stos
add
jbe
scas
setle
dec
mov
xor
jns
mov
push
jle
or
push
in
jo
out
ss
pop
xor
sbb
mov
dec
iret
daa
push
cld
bound
arpl
push
sub
pop
std
stc
gs
cmc
dec
mov
fcmove
inc
jnp
repz
xchg
dec
jge
enter
stos
push
push
lret
push
pushf
mov
out
movsl
sub
pop
fiaddl
mov
mov
cltd
jb
fiaddl
sti
push
mov
mov
insl
mov
divl
add
sbb
fmull
and
mov
in
es
sbb
pop
mov
mov
mov
sbb
in
adc
mov
test
jl
inc
outsb
pop
push
mov
cmpsl
arpl
push
adcb
ja
les
imul
lret
das
pop
xor
jp
sub
aaa
repz
xor
movsl
or
cmc
mov
xchg
call
sbb
gs
adc
shlb
adc
mov
jno
scas
mov
fcoms
sti
or
fistpl
imul
adc
fdivrs
aam
xchg
fisubl
push
test
scas
xchg
mov
xor
shrl
lock
mov
xchg
mov
mov
jp
and
cmp
imul
mov
or
scas
aas
jge
adc
je,pn
fcompl
add
fdivrs
xchg
arpl
push
pop
xchg
xchg
mov
stc
dec
jae
push
imul
lods
sbb
js
sub
mov
push
push
shll
inc
adc
lahf
sti
mov
pop
dec
mov
cmc
adc
out
int
sub
enter
rolb
je
jmp
in
or
mov
xor
imul
sbb
mov
mov
std
inc
decb
hlt
addr16
enter
adc
cmp
scas
add
add
dec
outsb
movsb
insb
cmp
xchg
xor
inc
sub
stos
leave
out
jns
xchg
xchg
dec
and
rorl
sbb
lret
popa
das
mov
sbb
arpl
cmpsb
jle
mov
xchg
add
stos
fidivrl
xor
sahf
out
cmp
sbb
push
ds
sbbl
shll
or
cmp
rcrb
fsubl
out
cmpl
aas
jae
movsb
push
shrb
cmp
xlat
in
push
outsb
test
add
dec
inc
xor
lods
mov
xlat
pusha
aad
cmc
in
sub
mov
inc
stc
outsb
loop
fists
and
lgs
ret
push
movsl
inc
xchg
push
sub
and
pop
scas
imul
or
mov
idivl
out
mov
and
mov
mov
jp
sbb
mov
enter
sub
sarb
add
jl
pusha
pop
mov
scas
sub
outsb
subb
mov
xchg
in
jmp
nop
mov
xor
addl
sbb
inc
sbb
imul
sbb
sub
int
jp
cld
repnz
adc
test
mov
inc
loopne
cmp
iret
xchg
lds
stos
loopne
std
pop
pop
inc
in
cmp
pop
orb
pop
in
outsb
add
adc
rorl
add
lods
ds
test
js
ds
dec
mov
pusha
lret
in
xchg
repnz
lock
sbb
sbb
push
das
mov
or
push
addb
outsb
push
and
jo
cli
push
add
mov
sbb
fdivrl
sqrtps
in
inc
inc
in
test
je
mov
inc
test
ljmp
dec
xchg
pop
fisttps
sub
jge
int3
cmp
add
mov
scas
mov
cmp
insl
rorb
lea
sbb
sbb
outsb
xchg
add
sahf
test
popf
dec
cmpsl
dec
add
cmp
push
in
pushf
daa
imul
mov
ret
xor
jae
jo
loope
pop
pop
daa
in
pop
incl
mov
lahf
mov
out
mov
fidivs
out
push
lods
imul
add
lahf
ljmp
stos
fstpl
and
pop
ret
hlt
movsl
fst
daa
mov
int
cld
xor
and
ror
inc
cmp
mov
movsl
push
mov
lock
js
ret
sub
fwait
mov
int3
stos
xchg
das
dec
jbe
mov
xchg
faddp
mov
inc
add
dec
bound
adc
out
out
xor
jg
div
xlat
inc
xlat
cltd
dec
fsubrl
in
ret
xor
sub
shlb
mov
daa
pop
lahf
mov
add
and
pop
or
jae
cmp
aaa
pusha
lock
test
mov
sub
int3
add
fwait
and
xchg
sub
fidivrl
lahf
push
cli
adc
test
inc
cmc
popa
fcomip
xor
ret
push
sbb
js
pop
ds
pop
stos
lret
aad
push
stos
pop
aaa
cmpsb
clc
out
mov
jne
aad
jnp
imul
call
adc
jns
sub
sbb
outsb
mov
loopne
ret
shll
leave
out
cld
cmp
jbe
mov
push
rcll
fstp
in
cs
in
ret
inc
push
jmp
add
and
pop
and
aaa
jnp
shlb
jle
rclb
test
pop
pop
push
dec
mov
inc
mov
push
int3
fs
ss
js
repz
pop
cmp
repz
aas
pop
aam
or
shrl
fisttpll
cli
mov
mov
inc
or
jl
jae
mov
adc
mov
repz
push
pusha
repz
cmp
mov
outsl
nop
rcr
popf
push
test
sti
cmp
imul
cli
in
sahf
nop
in
in
mov
mov
pop
jmp
mov
pop
dec
cmc
pop
in
lock
mov
fisttpll
subb
xlat
gs
jg
cltd
int
mov
pusha
adcb
andb
into
and
xor
pop
aam
fwait
pop
scas
loopne
and
add
cltd
push
dec
out
jecxz
mov
sbb
mov
inc
cmc
mov
test
data16
add
jecxz
jmp
movq
jge
or
ret
inc
mov
aaa
fldz
rol
mov
and
mov
stos
ret
in
in
mov
movsb
and
push
lahf
pop
mov
pop
lods
in
das
pushf
out
outsb
movsb
xor
pop
mov
sub
dec
stc
aaa
sbb
jp
lahf
and
mov
rcrl
lds
xchg
or
addr16
sub
xchg
dec
data16
xor
mov
nop
popa
adc
mov
addr16
nop
sub
scas
in
cmpsb
mov
fisttpl
data16
into
rorl
in
lahf
fldt
fstps
ss
mov
mov
stos
mov
ds
xchg
loop
xchg
ja
aam
pop
push
inc
mov
xchg
popa
lret
xorl
or
clc
movb
jns
daa
in
cwtl
in
adc
dec
int
or
push
push
jle
pop
lds
jge
lea
in
pop
pop
xchg
xor
pop
adc
in
lods
xor
xchg
lahf
inc
cmp
push
lcall
sub
arpl
xchg
xor
sub
addr16
shl
xchg
sub
adcl
mov
bound
xchg
jb
and
cmpsb
adc
lods
cmp
popa
inc
ret
jae
clc
shrl
cmpsl
mov
sbb
daa
jne
and
flds
lahf
fnstcw
jne
push
shl
pop
ret
flds
cmpsl
push
pop
dec
sahf
pop
jg
jg
xorb
push
sti
mov
pop
enter
xchg
out
pop
cmp
inc
xchg
mov
cmpb
or
mov
pop
int
add
out
xchg
int
clc
xchg
sub
mov
xchg
add
mov
jae
adc
xor
loopne
pop
andb
cmp
ds
mov
xchg
pop
mov
xchg
sbb
add
add
add
xchg
adc
mov
push
mov
pop
ja
ret
jns
scas
insb
adc
test
jns
jmp
and
cs
leave
push
sbb
inc
push
mov
cld
sub
dec
fimull
mov
inc
sarb
stos
in
add
dec
jbe
cmp
pop
inc
cmp
add
call
jle
idiv
je
lahf
lds
aam
fcmovnu
or
adcl
dec
insb
jb
sub
nop
jp
adcb
sub
ja
inc
and
out
test
loopne
nop
dec
dec
aas
sub
cmp
cmp
add
push
popf
or
lret
hlt
cmp
mov
push
push
mov
fwait
aaa
ja
jmp
or
daa
test
add
mov
inc
leave
mov
cmp
push
mov
dec
jle
mov
push
vcvttpd2dq
int3
sti
sahf
out
cmp
and
clc
cmp
push
loopne
cmc
sub
sahf
push
out
cmp
add
and
ret
sbb
dec
imul
lret
xchg
jnp
gs
cmp
xorl
rorl
push
push
clc
fs
out
aad
out
outsb
push
arpl
push
inc
lds
divl
inc
pushl
shll
and
jle
cmc
lds
popa
ret
in
lods
push
mov
cmp
ret
inc
addr16
ljmp
mov
divb
pop
bound
pop
mov
mov
testb
lret
sub
data16
mov
push
neg
xchg
pop
cs
mov
ret
mov
dec
movsl
xchg
sarb
jp
cmp
mov
scas
dec
mov
lret
shlb
sub
icebp
fcmovnbe
repnz
or
stos
dec
lds
adc
icebp
mov
imul
push
jno
cmc
sarb
mov
push
jno
out
dec
push
and
xchg
push
mov
jl
lret
fnstsw
shrb
dec
roll
inc
aam
adc
insl
and
lods
add
rcrb
out
mov
add
cmp
jo
xchg
shr
xor
stos
mov
leave
mov
pop
mov
pop
test
test
xchg
jp
adc
sbb
pusha
mov
shrb
inc
aas
mov
test
and
or
dec
insb
fwait
test
mov
movsl
mov
shlb
dec
dec
call
pop
xchg
and
pop
mov
aaa
mov
ds
arpl
imul
addr16
fnstcw
xchg
jl
loope
pop
jb
inc
inc
ret
inc
jg
mov
popa
aam
sub
push
out
push
mov
iret
push
pop
out
ret
add
xchg
jecxz
addr16
push
inc
or
in
push
rcrb
push
dec
or
testl
pop
ret
jb
xlat
xlat
ljmp
out
mov
jns
fisubrs
vcmpps
jp
cmp
gs
icebp
mov
stos
add
shrb
sbb
mov
mov
repz
inc
fstl
stos
and
lea
loop
pop
and
and
mov
loope
out
add
adc
mov
jg
repz
stos
sti
inc
dec
add
dec
lret
push
je
pusha
das
popf
mov
sarl
call
inc
dec
sbb
cmp
cli
sub
inc
cmp
fsubp
pop
pop
addl
ret
cmc
and
sarl
stos
out
sahf
add
mov
mov
jae
mov
dec
inc
cltd
rol
jae
jb
mov
rcrl
in
and
xchg
pusha
jge
aaa
ss
pop
push
andb
lods
int
loop
imul
or
ret
or
lcall
xchg
pop
pop
jecxz
test
mov
sbb
setb
mov
adc
insb
push
and
stc
mov
scas
sub
xchg
dec
jae
and
xor
faddp
insl
xchg
xchg
push
and
sub
add
ret
sbb
cmp
in
les
push
or
xchg
outsl
jmp
push
sbb
cmp
sahf
lds
outsl
sub
push
into
jge
enter
scas
movsb
cld
push
or
imul
add
fnstsw
xchg
push
loop
out
aam
and
push
sahf
xchg
jns
and
jecxz
mov
add
xlat
out
nop
test
inc
pop
jno
sub
outsl
int
das
pop
or
arpl
scas
stos
jge
fnstcw
stos
mov
bound
dec
push
inc
addb
lock
sub
push
push
push
mov
add
shrb
push
jge
sti
add
push
call
arpl
jns
inc
jmp
iret
and
movsb
je
mov
shl
xor
lds
mov
sub
pop
xchg
pusha
sub
fstpt
jge
sub
sti
jle
cmpsb
push
xchg
int3
cmc
aad
pop
in
mov
xchg
aaa
cmp
mov
or
daa
xor
shll
push
fidivs
xchg
adc
aaa
mov
sbb
sub
mov
sub
cmc
nop
incl
sbb
movsb
and
lods
fisubrs
loope
inc
push
mov
jmp
push
push
lcall
xchg
dec
pop
mov
sbb
dec
xchg
cmp
cli
pop
imul
sbb
push
cmpsb
adc
aam
xor
sbb
in
cmpsl
xlat
or
add
pusha
test
cmpsb
dec
lret
sub
clc
test
testb
nop
leave
sub
lods
add
adc
jl
lock
cmp
mov
repnz
popf
mull
les
icebp
adc
mov
cmc
mov
and
aaa
sub
mov
sbb
mov
sbb
push
jne
mov
outsb
and
push
jl
mov
fdivs
mov
dec
icebp
and
fimuls
xor
pop
push
push
push
pusha
push
pop
push
mov
ret
inc
dec
push
mov
lret
jmp
mov
cwtl
lret
fstpl
sub
or
mov
cmp
and
jne
push
cltd
mov
sbb
mov
sbb
sti
mov
cltd
cmp
mov
hlt
sub
jns
cmp
sbb
rolb
lahf
mov
xchg
leave
into
cmp
cs
adc
xor
dec
fidivs
jbe
xchg
mov
and
pop
add
push
or
push
test
mov
fcomps
data16
idivb
push
loope
xor
jbe
insb
lods
lret
or
xlat
mov
icebp
push
arpl
icebp
push
lods
leave
pop
fwait
insb
xchg
loope
imul
es
out
pop
jp
sti
add
in
inc
add
push
xchg
fsubrs
test
lock
je
mov
clc
xor
xchg
inc
lahf
outsl
sahf
mov
fnstsw
push
in
adc
scas
adcb
ds
xchg
sbb
dec
scas
jp
nop
ret
xor
daa
loop
inc
mov
testl
fldt
jmp
push
sub
mov
and
pushf
gs
ret
jge
test
add
arpl
jmp
stos
fwait
mov
aad
inc
xchg
inc
stos
fiadds
insb
mov
lods
popl
mov
or
les
pusha
fbstp
icebp
jne
pusha
jb
clc
or
inc
mov
mov
gs
adc
push
lods
jecxz
mov
sub
pop
into
dec
xchg
and
jmp
rcll
mov
and
or
pop
jbe
jbe
xchg
imul
sarb
pop
cmp
jb
push
pushf
out
insl
loope
repz
adcb
dec
pop
xor
jae
or
cli
loopne
mov
insb
add
sbb
in
popa
adc
int3
repz
movsb
xchg
aam
insb
mov
jbe
and
or
and
cmpsl
aam
xchg
leave
mov
lret
popf
jbe
out
stos
or
jne
or
loop
call
imul
cmp
mov
out
push
dec
aas
or
test
adc
mov
arpl
inc
pop
loop
add
mov
dec
rorb
outsl
enter
and
mov
mov
and
cmp
outsb
inc
pop
fnstsw
mov
dec
int3
xchg
or
push
fwait
pop
insb
sbb
adc
push
jns
ja
loopne
les
cld
add
xchg
rcrb
pushf
or
cmp
stos
lock
push
pop
and
daa
cmpsb
into
loopne
movsl
iret
pusha
ret
cmc
mov
xchg
mov
dec
aam
lods
sbb
lods
loope
push
inc
pusha
daa
mov
and
movsl
lret
xor
test
xchg
add
lock
mov
push
push
outsb
sbbb
sub
and
adc
xor
sbb
jb
scas
lahf
lods
stc
test
push
or
rorb
sub
orl
lret
xchg
cmc
jbe
mov
or
cmp
push
cmpsb
jmp
xchg
stos
in
aas
pop
ds
cmp
xchg
iret
out
insl
rolb
outsb
mov
std
les
xchg
jno
arpl
out
mov
mov
jns
ljmp
mov
push
or
test
adc
adc
stc
dec
repz
jae
or
sarl
aam
xchg
fsubrs
pop
lret
andb
mov
test
dec
pop
cmpsl
fstl
mov
in
push
jp
repz
jns
cmpsb
imul
cmp
outsl
clc
jl
es
mov
in
and
sub
bound
or
add
add
or
push
in
pusha
ss
add
mov
jle
ret
inc
xor
out
xchg
adc
ds
and
mov
pop
in
adc
sub
ja
fsubr
ds
sub
stc
dec
adc
repz
fistl
mov
mov
sub
sub
mov
lahf
lds
andl
in
pushf
jl
cmp
jecxz
ja
jnp
xchg
pop
mov
es
adc
cld
add
xor
xchg
into
incl
clc
mov
inc
push
scas
or
lds
adc
and
sub
shlb
push
bound
or
jnp
or
mov
ret
adc
aad
add
je
cltd
repz
gs
cmp
sar
inc
mov
xchg
adc
and
pop
sub
push
ljmp
ljmp
outsl
repz
sbb
mov
add
lock
pop
cmp
ss
xchg
xor
jp
mov
cli
or
sbb
adc
mov
out
and
into
test
stc
insb
dec
popa
xchg
mov
js
cmp
mov
ret
fsubp
jl
sbb
jmp
fstpt
clc
mov
and
sbb
pop
or
dec
push
mov
adc
mov
lret
insl
mov
jns
insb
and
lcall
jp
inc
ja
xchg
ss
xchg
enter
jnp
cmp
dec
mov
adc
repnz
aam
movsl
daa
adc
in
mov
mov
mov
test
rcll
popf
xchg
mov
imul
dec
adc
test
lods
dec
test
mov
sbb
push
lock
push
and
cwtl
iret
pop
clc
dec
or
test
jbe
loop
push
mov
inc
add
xchg
in
jge
pop
inc
fidivrl
xor
in
test
or
pushf
testb
adcb
cltd
pop
pop
outsl
or
pop
sub
push
cmp
adc
stc
cmp
sub
push
rorl
lcall
inc
or
loopne
xchg
push
xchg
jne
jae
lea
cmp
mov
or
cmpb
cmpps
and
enter
sub
pop
stos
push
pop
lret
cs
test
mov
mov
cli
mov
arpl
ffree
sbb
or
push
addb
ret
mov
adc
jecxz
push
push
and
aaa
mov
dec
stc
jl
jecxz
repz
out
dec
dec
sahf
inc
mov
xor
xor
xlat
sub
jmp
movb
mov
fs
lods
ss
push
out
cwtl
out
in
fsubrs
cmp
xchg
loope
mov
mov
or
cltd
into
fwait
inc
leave
in
mov
dec
in
mov
lret
mov
in
sub
or
out
push
sqrtps
imul
call
and
ret
cld
loop
push
cmp
repz
lret
icebp
ss
ret
adc
test
mov
xor
es
pmaxsw
pop
mov
jnp
push
inc
fsubs
mov
fstpl
insl
daa
mov
imul
sub
xchg
mov
ficoms
mov
movb
push
xchg
or
or
std
inc
fcomip
lahf
sbb
not
adc
shrb
pop
ljmp
mov
test
daa
les
push
lret
enter
stc
pop
shll
xchg
xorb
in
cmpsb
arpl
lret
fnsave
dec
jg
mov
faddl
gs
xor
mov
pop
mov
mov
push
les
and
sbb
mov
jns
sbb
idivb
into
adc
adc
jecxz
push
mov
rcrl
rorb
fistps
add
sti
cmp
dec
movsl
pop
mov
push
call
xchg
subl
loope
xor
jl
dec
pushf
enter
cs
shl
pop
stc
push
or
out
push
shll
inc
sbb
inc
and
cs
sbb
pusha
clc
daa
daa
inc
ja
inc
dec
subl
or
es
aad
sub
mov
push
loop
pop
push
roll
aas
jge
fld
sub
stos
cmp
les
mov
lret
xor
push
mov
clc
sarb
push
mov
pop
insl
jl
pop
jb
mov
pushf
xor
int3
xorl
cmpsl
pop
sbb
in
cmp
xchg
cwtl
pop
mov
out
push
mov
xor
pop
out
cmpsl
jmp
dec
addr16
sub
cmp
jno
fdivrl
andl
or
out
shl
sub
dec
loope
pop
pushf
cli
es
mov
and
lahf
and
aas
add
fildl
pop
sti
push
jg
jb
adc
inc
dec
fmul
adc
lcall
loop
bnd
adc
fimuls
push
shl
sti
or
int
jb
lods
mov
add
sbb
lea
fs
jb
adc
and
jp
fs
jecxz
sub
push
aad
enter
shl
pushf
inc
nop
mov
mov
cmp
and
mov
call
inc
push
bnd
mov
movsl
mov
in
sub
out
lds
pop
pop
push
loope
mov
xchg
shrb
int
or
lret
inc
inc
and
fs
and
in
enter
push
cld
ret
and
fidivs
pop
mov
mov
and
jmp
in
or
xor
call
dec
movsb
sarb
xorl
pop
fwait
pop
fsubs
pop
adc
and
aam
mov
xchg
xchg
je
ret
xor
out
and
adc
in
loop
pusha
xor
dec
pop
imul
mov
xchg
fs
icebp
lea
enter
fcoml
loopne
repnz
jns
stos
adc
mov
mov
or
push
ja
cmp
xchg
or
ljmp
jge
je
cmp
push
bswap
sbb
xor
xchg
push
rsqrtps
aad
insl
out
fldl
adc
movsl
dec
outsl
in
mov
jl
push
arpl
push
cmp
mov
jp
xchg
dec
push
pop
call
repz
jmp
ja
sbbl
mov
inc
or
mov
scas
jae
jp
les
ret
aaa
mov
xchg
lret
mov
mov
shl
xor
push
imul
call
ret
icebp
jbe
stos
lods
add
jbe
xor
ret
inc
fwait
into
jbe
cs
lea
adc
add
jle
xor
repnz
and
xchg
xchg
pop
ss
loop
sbb
mov
outsl
jb
sbb
mov
sti
jnp
cwtl
loopne
add
add
sbb
or
sbb
xorb
outsb
iret
in
int
mov
into
inc
push
mov
mov
adc
test
adc
push
pop
push
push
xchg
sbbb
das
push
daa
xchg
dec
mov
nop
daa
pop
mov
pop
lds
addr16
dec
loop
mov
enter
push
adc
lahf
jmp
dec
fsub
das
dec
mov
ljmp
or
push
sub
shr
int3
cmp
inc
mov
lret
test
fisubrl
insb
mov
jp
xchg
rolb
jo
fwait
pop
test
std
scas
jns
xor
notb
dec
insb
mov
lret
inc
jnp
sub
fsubr
js
pop
popf
inc
xchg
xchg
pop
dec
loopne
out
mov
mov
add
add
out
ja
icebp
inc
int
fcomip
push
nop
dec
push
stos
iret
jmp
xchg
movsl
xchg
rcrl
mov
call
fs
shlb
cmpsl
jge
pop
fwait
mov
or
jno
sub
jg
in
inc
push
mov
xorb
mov
movsb
fiaddl
test
fnstenv
jae
clc
jnp
lcall
inc
lret
popf
into
and
and
out
or
addl
adc
mov
and
jns
pushf
mov
jmp
pop
clc
test
push
sti
jne
inc
pop
into
pop
inc
add
pop
jge
add
out
push
cmp
inc
add
sbb
add
or
jl
hlt
pusha
les
adc
dec
mov
outsb
inc
dec
fists
jmp
jne
lock
or
jle
ljmp
fprem1
out
inc
sarl
cmpl
xor
or
adc
jl
xchg
int3
add
mov
enter
jo
aad
dec
out
in
cmc
mov
addr16
imul
and
dec
rorb
pop
xchg
outsl
xor
shll
orl
stos
repnz
in
test
ret
mov
xor
push
and
sub
lock
sar
mov
out
mov
test
std
jmp
inc
sti
jecxz
add
pop
movsb
adc
mov
cmp
and
sbb
xor
ds
bound
fabs
jno
sahf
outsl
cmpsb
cld
fwait
pop
mov
dec
and
jmp
jb
dec
push
mov
push
lahf
dec
cltd
mov
sub
mov
addr16
or
frstor
insb
jb
xor
and
mov
mov
ds
mov
lahf
int3
test
lea
jb
inc
int
jmp
dec
adc
shlb
fisttps
movsl
pop
push
dec
bound
idivb
call
mov
xchg
cmpsl
and
mov
lock
lods
outsb
sahf
jb
imul
inc
fs
into
lahf
in
icebp
cmp
scas
sub
mov
pop
iret
sub
and
xchg
cwtl
das
push
or
mov
fcmovnbe
enter
cmp
lods
ljmp
repnz
and
fwait
jmp
jl
xchg
mov
outsb
arpl
sahf
hlt
addb
jno
and
fcoms
into
pop
push
fadds
ret
in
and
pop
hlt
adc
subb
cli
addr16
mov
dec
jbe
in
mov
mov
xor
jbe
lea
arpl
fstpl
roll
xchg
push
fwait
test
lds
pop
push
fdivrl
adc
js
and
ficompl
inc
popa
jb
jmp
add
stc
push
sbb
cmc
cwtl
add
cwtl
sub
in
ret
jmp
insl
movsb
push
adc
sub
pushl
les
icebp
cmc
add
push
test
js
inc
popa
call
jl
jg
push
mov
cmp
push
sbb
das
jnp
xchg
inc
xor
in
stos
outsb
leave
pop
pop
sub
push
sub
or
xor
push
jns
int
iret
sub
xchg
mov
mov
xor
ret
push
mov
aam
cmc
aaa
xor
subl
decl
sub
mov
ss
sarl
out
mov
ret
jg
add
rcll
adc
inc
mov
or
adc
je
add
jmp
push
shll
add
mov
dec
mov
jne
aam
icebp
adc
mov
cs
addb
das
mov
dec
mov
mov
call
pop
mov
outsl
fcompl
test
mov
mov
cs
adc
mov
push
jns
sar
push
cmp
into
jle
push
iret
cmovs
test
cmp
ret
sbb
leave
xor
shll
push
loopne
adcl
lds
adc
call
scas
adc
in
pop
int
add
cmpl
jl
sbb
lock
mov
mov
je
mov
nop
popa
add
aad
les
sub
xor
mov
sbb
and
push
inc
popf
cmp
repnz
and
rolb
ja
test
cmc
lcall
nop
bound
aad
inc
mov
pop
jmp
pop
pop
fwait
adc
and
outsl
xchg
lahf
mov
add
inc
jb
aam
jne
shll
dec
iret
lods
or
lods
sub
mov
jmp
add
and
push
aaa
nop
xchg
lods
or
pop
xor
mov
aad
jns
adc
jnp
gs
loop
inc
xchg
pop
sub
mov
in
cmp
cmp
lds
cmpsl
popf
mov
and
fwait
adc
add
mov
movsb
aam
push
lea
or
adc
adc
lsl
jae
dec
pop
out
dec
xchg
addr16
sbb
std
mov
xor
xor
jns
rclb
stos
pop
out
jle
icebp
adc
add
sub
xor
loop
push
pop
or
xchg
lret
daa
and
sbb
xlat
or
pop
mov
sbb
jmp
insl
addl
leave
jne
jo
aas
or
jae
adc
fstpl
sub
and
das
sub
fsin
movlps
pop
sbb
cld
out
cmp
sbb
out
pusha
fwait
outsl
test
jo
pop
ret
cmpl
test
negl
xchg
cmp
pusha
mov
push
mov
outsb
cmc
movsb
wbinvd
int
add
push
adc
cld
pop
popa
pop
mov
jmp
xor
out
jns
ljmp
cmpsl
or
push
and
add
xchg
call
pop
xlat
arpl
lret
xchg
pop
mov
mov
dec
push
xchg
lcall
ja
aaa
or
mov
push
dec
dec
movsb
ds
fsubl
cmpsl
sub
mov
ret
or
sub
pop
dec
jo
mov
or
xchg
pop
mov
jg
xor
fnstsw
imul
xchg
testb
push
dec
fisubl
pop
inc
sub
hlt
pop
mov
add
add
vrsqrtps
adc
sub
leave
dec
jle
aas
push
in
or
arpl
fisubrs
or
cmp
iret
in
lea
jecxz
testl
out
push
ret
jno
push
jl
pop
pop
push
sub
jbe
pop
push
mov
dec
aas
aaa
xor
push
mov
cs
mov
loop
sti
inc
subb
and
aam
je
xlat
lods
negb
out
adc
leave
lcall
pop
ficoms
adc
cmpsb
pop
add
cltd
and
jg
dec
in
adcl
test
imul
out
mov
mov
pop
int3
push
js
imul
jns
add
popa
sub
pushf
and
insl
pop
lea
sub
imul
adc
cwtl
dec
and
fdivrs
jecxz
xor
pop
add
adc
mov
outsb
lods
out
ja
aas
xchg
pop
lea
sub
pop
pop
ret
sub
and
ret
inc
xchg
stc
inc
mov
sub
hlt
movsl
mov
cmpb
hlt
pop
cmp
gs
out
dec
jno
sub
arpl
clc
int3
add
pop
and
add
or
sbb
xor
and
bound
push
mov
xor
xor
stc
negb
stc
loopne
sub
mov
sbb
mov
cs
daa
or
ljmp
test
and
test
mov
fsubrl
rcr
inc
inc
dec
mov
stos
push
test
cld
jmp
movsl
sbb
rol
xor
sbb
inc
roll
mov
lea
test
ret
lods
pop
jb
aam
outsl
bound
inc
xchg
cmc
divb
lret
cmp
call
bound
xchg
sbb
sti
lahf
xorl
fisubs
jne
in
fmull
or
inc
pop
push
or
pop
xchg
jecxz
cmc
insl
jo
std
xchg
push
imul
addb
test
icebp
mov
shlb
push
notl
inc
pop
test
or
lret
mov
ret
movsl
lods
xor
call
popa
jge
jns
out
fsubrp
pusha
mov
cmp
inc
mov
shr
in
nop
inc
add
nop
sahf
cs
rolb
adc
orl
jge
xchg
push
dec
into
cld
cmp
push
out
jle
jecxz
shll
fnstenv
push
adc
sbb
xchg
leave
or
testl
andb
lahf
shl
xor
icebp
pop
jbe
jp
lods
popf
popf
jae
pop
push
sbb
in
lret
fisttpl
or
divb
cmp
xlat
jmp
mov
inc
mov
lods
sub
nop
cmp
out
scas
pusha
sub
xchg
inc
xorl
mull
mov
mov
ja
ret
jbe
pushf
out
jno
lret
data16
divb
js
fs
sbb
imull
jg
inc
xlat
jae
mov
in
ss
scas
dec
std
addr16
mov
and
inc
lcall
mov
cmp
repnz
ds
fcomps
pop
push
call
scas
xchg
cmp
scas
rdpmc
fwait
or
jnp
push
xlat
jo
fistpll
icebp
lret
in
shrl
mov
mov
adc
jmp
out
push
fidivs
mov
adc
sub
mov
pusha
pusha
pop
aas
push
outsb
push
cmp
inc
push
enter
sti
pop
dec
arpl
fs
push
cmp
mov
dec
bound
inc
add
in
and
push
dec
lret
pop
lods
adc
adc
pushf
jb
and
cmp
or
dec
fbld
add
sbb
jne
or
mov
and
out
scas
inc
mov
repz
lcall
inc
fwait
je
push
sub
jns
lock
sbb
aam
or
sbb
into
jno
and
scas
or
imul
mov
push
mov
mov
cmpb
pop
fcomps
pop
mov
lods
in
cmc
push
adc
sbb
push
mov
sub
push
aad
mov
xchg
les
dec
jmp
fildll
xchg
es
xor
popa
shrl
roll
jg
xchg
cwtl
jb
mov
sub
jae
cmp
mov
aam
jge
data16
repz
dec
add
cmp
adc
jae
dec
addb
xchg
dec
sub
mov
inc
jmp
jge
rclb
aas
sub
gs
stos
sbb
add
mov
ds
pop
mov
pop
jp
or
hlt
jns
xchg
addr16
dec
push
and
repz
outsl
popf
or
sub
ret
pop
scas
clc
int3
arpl
js
lret
add
jbe
inc
mov
sbb
xor
adc
in
pop
decb
cld
iret
rorl
push
xor
arpl
and
pop
adc
ds
ja
scas
cmp
insl
es
ljmp
dec
push
fcmovnb
lahf
iret
pop
ds
jbe
sub
xor
pop
add
stos
mov
jmp
dec
movsb
mov
or
xchg
fldenv
aaa
xchg
rcr
inc
jno
scas
test
cld
mov
rcl
or
fdivr
rorb
inc
adcb
aad
in
push
dec
repz
ficomps
push
xchg
sub
xor
out
mov
jl
sub
pushf
fists
out
aam
clc
push
stos
ds
xchg
loope
addr16
hlt
pop
mov
sub
or
sbb
cld
out
jae
add
xor
mov
call
dec
repnz
cld
sub
loop
lret
mov
loope
in
popa
adc
sub
dec
xchg
xchg
fnstcw
cmp
xor
negb
mov
jg
pusha
or
aam
xchg
lret
xchg
testl
arpl
sti
or
or
cld
fbstp
int
fcmovu
pop
shr
outsl
dec
test
mov
cmpsl
dec
add
movsb
cmc
or
ret
test
cmp
xchg
inc
inc
in
mov
adc
cs
ror
loopne
inc
xchg
std
popf
mov
leave
test
cmpsb
insb
xchg
mov
inc
orb
cmp
leave
cmp
xchg
pop
stos
push
andb
cli
imul
mov
aas
mov
std
clc
scas
and
or
adc
jbe
pop
ljmp
lds
cmp
inc
aas
gs
in
adcb
idiv
mov
fcoms
add
shrl
sbb
mov
ficomps
out
test
ds
sub
mov
scas
roll
mov
inc
pop
das
insb
enter
jmp
dec
lods
mov
fmul
lcall
push
jb
push
nop
dec
jno
jmp
xchg
and
in
mov
or
pop
sub
scas
lret
and
xchg
mov
dec
int
outsb
mov
dec
xchg
xchg
pop
shll
dec
lods
call
dec
mov
out
out
lret
stos
pop
inc
mov
sbb
jne
cld
adc
mov
in
pop
js
movsl
fmull
lods
xor
pop
xchg
and
xorb
cmp
xchg
dec
loopne
jns
pop
pop
push
sbb
push
push
mov
shl
adc
push
data16
in
mov
ret
sub
and
jae
test
push
popf
mov
cs
dec
mov
icebp
popa
pop
addr16
idiv
mov
jecxz
inc
fnstsw
mov
add
mov
mov
mov
mov
shrl
inc
mov
gs
ret
add
or
sub
ja
push
dec
sub
stos
jle
mov
cwtl
jp
add
xor
add
fisubl
mov
sbb
daa
push
jne
cmp
ds
faddl
in
insl
subb
sub
adc
call
jg
movsb
jmp
das
jle
and
xor
xchg
xchg
aad
hlt
cmp
ret
aas
jge
dec
sub
cmp
cs
adc
insb
inc
popf
test
push
out
push
jg
scas
cli
orl
push
jmp
out
inc
mov
pop
dec
imul
loop
dec
aam
test
mov
ljmp
jmp
out
push
hlt
push
sub
cmp
inc
loop
je
loope,pn
push
sbb
outsb
or
push
into
jno
push
inc
adc
pop
mov
notb
add
fisubs
jno
int3
xchg
pop
mov
decl
and
mov
jg
pop
cmp
test
js
nop
movsl
dec
sub
push
push
push
jge
outsb
cmp
out
scas
mov
or
fistl
mov
jae
imulb
cwtl
fbld
inc
in
in
loope
jp
icebp
dec
mov
out
call
and
shll
sti
cmp
xchg
mov
pop
add
outsl
sub
mov
ret
mov
sti
push
es
sub
shl
daa
lds
scas
sbb
repz
dec
je
mov
ss
sub
add
jo
repnz
test
lods
mov
push
mov
dec
adc
ret
scas
das
mov
cmp
lcall
loope
jno
mov
jb
nop
inc
icebp
adcl
ds
dec
nop
adc
sub
lret
cmc
jp
xchg
push
push
inc
mov
sbb
cli
in
push
add
mov
xor
push
jbe
dec
mov
sbb
pushf
mov
mov
xchg
stos
or
addr16
inc
test
pusha
das
pop
jo
xor
pusha
test
adc
sbb
jecxz
addr16
adc
loop
xchg
leave
xchg
adc
mov
inc
xchg
fidivl
xchg
sbb
sub
xorb
dec
push
insb
inc
cmpsl
lea
pop
outsb
test
pop
cmp
sbbb
insl
faddl
dec
fs
push
rclb
notb
mov
movsb
sbb
or
inc
inc
mov
das
aas
jbe
aam
loopne
movsb
test
sbb
mull
or
cwtl
fmuls
sub
loope
mov
xlat
lods
mov
dec
inc
cmp
inc
adc
cmp
scas
mov
jl
daa
sub
jp
xchg
mov
or
aad
dec
pushf
cmp
shr
jo
jg
push
sti
pop
xor
mov
push
jnp
or
loope
xchg
sbb
adc
jno
xchg
leave
jl
dec
dec
inc
jb
cs
inc
jmp
cli
loopne
arpl
push
call
pop
cmpsb
inc
mov
mov
xchg
xor
sbb
imul
xchg
mov
pushf
cmp
jno
out
sbb
lahf
leave
jecxz
add
jb
mov
inc
xor
out
mov
sbb
mov
cmp
jg
mov
cmp
mov
mov
push
cmp
or
jo
test
fwait
and
ljmp
xchg
mov
inc
jmp
fsubrl
dec
push
cmp
outsb
test
icebp
in
adc
dec
stc
in
testl
in
test
sbb
adc
ds
add
cmc
loop
stos
lret
bnd
and
jo
fisttpl
scas
cmp
fldenv
jbe
jecxz
sbb
or
leave
popf
sbb
shlb
inc
shlb
mov
jl
cmp
or
les
and
icebp
mov
mov
cmc
or
leave
pop
pop
push
xchg
repz
bswap
mov
cmpsl
xlat
pop
ss
sahf
lea
mov
xor
jno
out
sub
adc
push
jp
outsb
mov
push
daa
aad
xchg
inc
lret
inc
hlt
aad
sbb
aad
push
pop
rclb
xchg
or
sbb
arpl
push
pop
mov
adc
ror
pop
xchg
pushf
mov
mov
pop
popa
fs
sbb
mov
mov
leave
in
stc
dec
and
mov
imul
fisubrs
mov
pop
mov
sub
mov
rcll
adc
test
mov
aaa
sub
test
jb
into
pop
enter
and
xchg
roll
sub
sysenter
add
dec
insl
add
into
test
pop
pop
push
xor
scas
pop
adc
aas
cltd
mov
nop
cli
jp
mov
and
xor
gs
add
movsl
iret
xor
mov
icebp
lret
lods
inc
adc
push
cmp
imul
mov
push
xchg
rol
jg
popf
inc
sti
lret
cmpsl
mov
add
sub
daa
out
leave
ret
and
inc
push
rorb
xorl
add
jecxz
ds
xchg
add
jp
daa
lcall
lret
pop
inc
test
arpl
cmp
adc
pusha
pop
sbb
adc
jb
out
test
int
decb
xor
cmp
cmpsb
cmpsl
xchg
inc
mov
and
addb
push
sbb
cmp
inc
xchg
aaa
inc
aas
mov
hlt
xchg
es
cmp
cmpsl
sti
test
addr16
cmp
sub
rorl
pop
fsubl
sarb
rolb
sti
sub
inc
ljmp
aad
lret
das
out
cs
sbb
pop
jne
jle
into
icebp
push
add
inc
adc
jbe
mov
mov
in
lea
inc
js
addb
nop
cmp
mov
out
and
push
cmp
leave
dec
sarl
jne
jle
mov
xchg
imul
out
pop
pop
mov
clc
lcall
mov
dec
ljmp
jl
pusha
aas
cld
adc
int
jnp
ds
sbb
push
clc
rcll
mov
outsb
pop
mov
jae
in
es
jo
pop
inc
xor
mov
xorl
cltd
movq
popa
jno
fsubrl
aas
add
orl
fsubrs
dec
and
jl
adc
add
out
add
outsl
fcmovnbe
out
divl
inc
pop
addr16
mov
mov
iret
repz
les
xchg
fadds
int3
push
test
inc
test
adcl
mov
lret
push
cmp
pop
cld
sbb
pop
mov
inc
pop
mov
inc
sbb
out
xchg
dec
lea
push
push
cmpl
mov
mulb
outsb
jne
lcall
data16
aaa
or
inc
ret
pop
mov
jge
jmp
repnz
adc
imul
movb
sub
sarb
push
push
push
call
andb
movups
lcall
loopne
ret
test
or
shl
es
aas
dec
and
subl
call
pusha
cmpsb
mov
bound
int3
loopne
movsl
mov
cmp
or
int3
mov
cmp
mov
outsb
hlt
ljmp
ljmp
xor
lock
inc
jns
sub
sub
xchg
mov
ds
pop
mov
negl
clc
shll
sub
shrb
sub
inc
mov
outsl
pop
and
jne
andl
jg
cmpb
inc
out
dec
out
mov
push
push
les
inc
pushl
mov
dec
nop
repz
cld
push
xchg
push
sub
scas
mov
lock
daa
push
outsl
sbb
or
push
jne
sahf
hlt
and
inc
push
aas
mov
mov
mov
and
push
push
jmp
in
or
lahf
ret
enter
add
dec
mov
aad
mov
xchg
inc
add
mov
fsubr
sbb
and
pop
and
ja
ss
repz
push
repz
sub
jo
ret
inc
xor
leave
sbb
test
xor
lods
jge
or
jp
xchg
test
mov
sbb
push
outsb
sbbb
addr16
mov
or
cmc
adc
test
loop
mov
pop
and
insb
test
mov
lahf
insb
jb
cmp
jb
push
std
pop
or
push
fdiv
mov
daa
pop
ficompl
stos
popa
jle
das
lcall
inc
mov
aaa
xchg
pop
arpl
daa
stos
jnp
add
out
outsl
cld
in
cmc
mov
add
insl
mov
xor
test
cmp
ljmp
add
and
fisubrs
xor
add
cmp
mov
jnp
dec
push
xor
cmp
and
inc
xlat
mov
sub
in
cltd
sbb
mov
popf
fdivs
movsb
mov
or
ds
lret
test
mov
and
push
mov
pop
stos
xchg
dec
testl
or
jecxz
inc
sbb
pop
sbb
add
addr16
push
mov
aam
sbb
push
pop
xor
push
push
mov
adc
mov
inc
jo
arpl
sub
test
push
xchg
pop
or
xchg
xchg
stc
popf
xor
lds
add
or
push
daa
add
mov
lret
and
sub
mov
insl
or
pop
repz
lods
adc
and
out
imul
xor
bound
aaa
fisubs
mov
popf
mov
adc
inc
cmp
add
push
idivb
pop
jae
sub
in
inc
cmpsb
dec
adcb
pusha
jge
mov
int3
xor
push
stos
outsb
gs
jo
cs
stc
mov
arpl
and
lods
js
aam
mov
xchg
lea
or
in
inc
xchg
push
adc
adc
ss
test
cwtl
add
scas
jle
pop
push
out
fisubrl
ljmp
ficomps
xchg
xchg
cmp
adc
inc
les
jmp
mov
xorl
sbb
xchg
inc
rorb
mov
lret
and
ret
push
out
cmpsb
mov
add
cld
jae
incl
movsl
popf
das
push
sub
sub
rorb
dec
test
arpl
mov
iret
cltd
jno
add
inc
sub
xlat
test
mov
xchg
mov
in
dec
dec
out
push
out
repnz
cmp
outsb
stos
and
xchg
or
lea
or
popl
sbb
mov
mov
leave
jno
js
cmp
pop
insl
jne
mov
mov
lds
das
inc
inc
ficoms
je
loope
cmpb
inc
aas
cmpsl
cmp
fisttpll
scas
stc
fsubr
jmp
pop
mov
loope
xchg
xchg
imul
hlt
leave
sbbb
jg
std
rorb
mov
mov
xchg
pop
hlt
dec
es
inc
mov
add
xor
mov
dec
add
out
xchg
sarl
dec
mov
shll
and
cmp
fimuls
xor
lea
xchg
lahf
out
adc
sarl
mov
jnp
out
pop
mov
mov
aas
cmp
push
xchg
cld
jbe
mov
stos
stc
lret
jb
fstpl
push
jecxz
mov
xchg
cwtl
dec
loopne
scas
add
xor
inc
jbe
pusha
inc
andl
dec
mov
inc
push
push
mov
dec
scas
xchg
pop
or
push
push
and
dec
push
int3
sub
pusha
dec
das
or
mov
clc
dec
js
inc
cmp
sub
loope
inc
pop
push
add
ds
add
xchg
xchg
orb
fbstp
xchg
fldcw
sub
inc
sub
fcompl
or
xor
cmp
lcall
xchg
addr16
or
cs
xlat
push
mov
cltd
jnp
xlat
shrl
fwait
jp
or
inc
adc
cmp
pop
out
loope
adc
mov
jg
out
xor
stc
adc
and
pushaw
mov
mov
fstps
sub
dec
int
or
xchg
push
mov
xchg
fisubrl
into
push
pop
fidivs
in
xchg
xor
push
jle
xor
mov
mov
inc
fwait
push
es
jbe
ret
hlt
dec
clc
movsl
inc
jmp
adc
push
lcall
add
pop
pop
hlt
divb
xchg
mov
mov
cli
sbb
inc
ljmp
mov
sub
mov
dec
sub
outsl
jp
mov
ficompl
data16
mov
or
add
nop
push
les
imul
inc
push
insl
imul
scas
out
das
ss
jl
rolb
gs
jns
dec
and
jp
jecxz
lods
jle
mov
aas
stc
enter
arpl
xor
fnstenv
mov
int
mov
push
repz
jne
stos
mov
rclb
imul
cmp
pop
scas
movsb
dec
push
in
dec
outsl
clc
lock
mov
lods
ficoms
pop
push
mov
jg
cli
lods
jp
or
adc
mov
jmp
pop
and
adc
negb
mov
mov
sub
test
push
aam
ds
jae
inc
loop
add
lahf
lret
xchg
shlb
mov
dec
push
sahf
lock
cli
das
pop
push
lcall
push
or
sub
scas
push
dec
mov
lock
adcl
xchg
out
imul
mov
and
mov
leave
jg
in
ljmp
stc
int
lea
jg
stos
stc
sbb
adc
mov
loop
push
sbb
fs
xor
insl
dec
cmp
pusha
lock
in
sbb
xor
pop
pop
lods
bound
cmp
and
sub
and
jb
addr16
outsb
mov
add
inc
test
mov
mov
jns
cmpsb
iret
xchg
cmp
movsl
cltd
js
cwtl
xor
testb
sbb
scas
das
sub
mov
mov
cmp
mov
lods
inc
scas
adc
clc
fiadds
xchg
push
into
jns
das
popa
lret
out
imul
loope
mov
jbe
mov
ja
cmpsl
push
mov
rcr
sub
clc
sub
dec
push
dec
cmp
cmp
movsl
stos
sti
mov
push
xorl
lcall
int
jp
sahf
dec
lcall
push
push
push
pop
push
push
pop
ret
orb
outsb
loope
mov
mov
out
sbb
push
xchg
dec
mov
in
mov
add
int
enter
pop
pop
movsl
fiadds
add
shl
pushf
cmc
pop
movsb
btr
add
sbb
jge
adc
ja
mov
inc
ds
cld
jg
sbb
sarl
ficoms
lahf
jns
js
insb
imul
enter
icebp
sbb
and
or
out
mov
cmpsb
or
cli
and
mov
or
cmc
lods
movsl
adc
rcll
pop
pop
enter
lret
out
inc
jnp
lods
xor
add
pop
mov
mov
iret
gs
dec
mov
rcrb
jle
in
ds
dec
mov
mov
ds
cltd
pshufw
or
push
loope
mov
popa
mov
orb
lcall
xchg
jle
dec
frstor
add
sub
adc
mov
xchg
mov
pop
call
mov
outsb
pushf
pop
xchg
lods
dec
fisttpll
insb
test
cmp
push
out
or
ss
nop
jno
fisttpll
lret
xchg
in
je
sti
adc
mov
inc
cs
inc
scas
call
or
repnz
test
cs
mov
dec
cmp
mov
sbb
push
mov
push
sub
out
arpl
ffree
xchg
lahf
mov
aas
inc
cwtl
mov
dec
jno
sbb
jmp
andl
stos
aad
cmp
mov
popf
std
inc
xchg
cmp
cmp
mov
inc
xchg
sbb
aam
js
push
data16
jp
xchg
mov
ja
mov
repz
aam
pop
add
mov
dec
jmp
mov
inc
xor
fyl2x
je
inc
push
clc
adc
cmc
clc
xor
mov
sub
gs
mov
jb
xchg
push
or
xchg
movsb
mov
add
xor
push
add
idivb
cmpsb
cwtl
sbb
popf
enter
insb
icebp
into
sbb
divb
or
lea
mov
sti
xor
add
jns
mov
sub
es
jl
push
and
or
cltd
mov
leave
mov
xlat
cmp
arpl
and
lea
popa
out
pop
jb
dec
ja
sarb
clc
xchg
insl
cli
adc
leave
les
cmp
test
jg
daa
popf
pop
pop
inc
or
add
push
imul
jns
int
mov
sub
pop
mov
mov
sub
dec
in
ret
jmp
scas
dec
enter
add
out
push
inc
lods
inc
cld
iret
sub
scas
push
shlb
es
cmp
test
pusha
sub
mov
ret
push
dec
xlat
movaps
xchg
sahf
rcll
idiv
lea
lds
jmp
nop
jmp
mov
stos
inc
cmp
sub
bound
or
mov
jge
popa
adc
inc
lods
hlt
cmpsl
repnz
cwtl
xchg
enter
cmp
push
pop
cltd
cli
jno
pop
cltd
call
mov
out
add
sub
nopl
loopne
push
lock
out
inc
mov
lods
cmp
decb
inc
mov
test
out
rorl
mov
dec
call
jo
dec
xchg
sbb
sub
and
adc
ss
out
adc
cmpsl
cmp
pop
negl
push
pmullw
mov
pop
rcrb
jnp
jns
paddsb
pop
xor
xchg
negb
or
jns
or
mov
shll
jbe
std
mov
xchg
adc
mov
xchg
sbb
ljmp
xchg
xchg
xor
push
stc
pop
add
test
adc
mov
outsl
and
mov
aam
pushf
mov
ret
pop
xor
sbb
iret
push
mov
or
ljmp
sbb
incb
cmp
cmp
xor
dec
fwait
aad
out
testb
xlat
dec
inc
ret
xor
adc
cltd
ret
movsl
push
mov
dec
cmp
faddl
fisttps
lock
mov
es
outsl
mov
repnz
cmpsl
pop
adc
jo
imul
push
adc
incb
pop
lret
repz
mov
pop
ss
cli
dec
mov
loop
pop
aad
lock
cmpsb
test
push
inc
or
inc
scas
cmpsl
lea
push
pushf
mov
out
mov
and
pop
mov
push
bound
jg
mov
das
jg
mov
arpl
lahf
insb
inc
inc
push
mov
iret
jecxz
jle
decb
and
call
mov
inc
test
mov
lock
inc
incb
sub
dec
sub
sbb
push
ljmp
xlat
test
mov
les
enter
nop
pop
and
ror
jl
addr16
into
jns
pop
and
js
stc
or
mov
pop
push
jns
out
fnstsw
jge
je
imul
jge
sbb
mov
ja
jge
push
rol
mov
xchg
mov
lods
sbb
mov
jne
mov
inc
loopne
adc
test
mov
jecxz
mov
sub
mov
inc
icebp
out
cmp
mov
mov
xchg
xchg
dec
cld
jp
pop
mov
out
js
ret
inc
mov
mov
fs
mov
rorl
mov
mov
inc
outsb
mov
pop
jne
fidivrl
shr
add
ja
cs
dec
jno
push
jns
dec
pop
cmp
ret
inc
in
xchg
adc
cmpsb
xor
xor
sub
jb
out
mov
pop
inc
mov
sbb
and
insb
stos
out
dec
cmp
shr
je
sub
push
cmc
fwait
ljmp
push
add
mov
ret
or
and
xchg
les
sub
cld
mov
roll
adc
lahf
iret
xorl
jno
insl
dec
sbb
out
test
loopne
push
pop
lds
xchg
in
or
outsb
lods
popf
loope,pt
movsb
pop
sub
pop
mov
out
inc
pop
pop
aaa
sbb
push
inc
adc
and
dec
xor
mov
cwtl
ds
xchg
xchg
push
inc
jnp
gs
iret
sti
dec
lcall
cmpsl
mov
pop
jp
mov
dec
icebp
add
mov
cltd
xor
movsb
bound
xor
test
mov
js
out
out
push
movsl
adc
xor
std
cld
jecxz
orps
ffree
mov
push
subb
sbb
xchg
adc
adc
cmp
int3
je
in
scas
mov
push
popf
stos
mov
insl
mov
je
inc
shl
fimuls
push
test
imul
nop
sbb
jle
mov
mov
xor
aaa
and
lcall
lods
cmp
das
or
xor
loope
loope
pop
repnz
and
mov
cmpl
lea
cltd
and
lret
stc
lds
les
in
popa
cmp
movsl
sarb
in
adc
dec
sbb
or
out
xchg
mov
dec
cmc
in
push
add
xchg
pop
mov
in
fsubrp
push
or
fisttpll
jno
je
add
ss
iret
out
pop
and
jno
push
pop
mov
fs
in
mov
sub
addr16
jno
push
sub
popa
mov
inc
sbb
xchg
sub
in
mov
xor
imul
cs
outsl
dec
inc
scas
dec
adc
inc
outsl
sbb
pop
add
and
leave
jge
mov
adc
jmp
test
mov
pop
shrl
mov
popf
mov
stos
fadd
fwait
je
loop
inc
mov
dec
sub
cmc
xor
xor
push
jo
jo
mov
cmp
subl
cmc
test
push
and
aaa
ja
cmp
xor
mov
cmp
mov
cmp
dec
and
or
stc
incb
sahf
dec
inc
loop
int
andb
mov
mov
hlt
hlt
inc
push
mov
add
nop
pop
cmpsb
ret
lods
shl
mov
dec
adc
mov
add
or
es
xor
cmp
add
adc
int3
mov
and
cmp
cmpsl
mov
xchg
push
loopne
push
dec
dec
orb
sbbb
movsl
cmp
iret
ljmp
out
fldenv
cmpsb
jp
ret
pop
or
lods
in
xchg
mov
outsl
mov
add
in
addr16
adc
or
or
icebp
jmp
outsl
cmpsl
sahf
add
inc
sbb
inc
mov
insb
enter
jns
mov
and
xchg
mov
shl
xlat
fnstenv
mov
pop
pusha
and
lock
fcompl
cli
jecxz
mov
jo
popf
cmpsl
pop
cs
mov
jge
mov
out
dec
data16
and
and
fiaddl
lret
test
shll
xchg
or
jbe
nop
add
std
test
mov
pop
jl
xlat
inc
or
clc
jne
xchg
scas
aas
pushl
pop
sub
inc
lds
js
jmp
sub
test
test
jg
cmc
psubw
stc
bound
data16
cmp
xchg
jb
dec
pop
mov
xchg
test
test
clc
into
dec
sub
push
mov
xor
pop
aam
scas
sub
push
pop
pop
mov
les
mov
test
mov
xor
inc
or
push
rorl
mov
test
fiadds
dec
int3
xchg
mov
mov
pop
cmp
mov
mov
sti
orb
pop
fstl
test
jb
js
sbb
or
jecxz
out
jmp
std
fidivrl
xchg
test
iret
arpl
jae
int3
sbb
xor
mov
mov
xchg
jmp
aam
bound
xchg
out
jg
adc
xor
jo
push
dec
push
push
or
pop
pop
lret
dec
inc
into
shlb
add
mov
inc
adc
mov
sub
loopne
ds
data16
sbb
cmc
ljmp
pop
jns
imul
subb
lahf
mov
sbb
dec
xchg
or
xchg
and
sbb
mov
pop
cmp
roll
mov
subb
out
xchg
mov
push
cmpsl
dec
in
jp
fildll
in
stos
push
dec
pop
xor
dec
lds
inc
nop
sti
je
mov
icebp
xor
jecxz
add
dec
mov
out
scas
arpl
jg
mov
push
cmp
int3
push
mov
imul
adc
pop
repz
shl
cmp
in
cld
scas
mov
sbb
xor
push
pop
pop
pusha
add
jl
imul
xchg
in
adcl
les
aaa
lcall
inc
imul
loopne
out
fistl
pushf
fwait
cmp
xchg
adc
jle
scas
or
sbb
iret
and
scas
gs
xor
sahf
das
shlb
push
push
xor
ds
xor
scas
data16
iret
je
xchg
clc
and
jb
test
and
mov
mov
test
pop
xchg
lahf
xlat
sbb
fldenv
or
stos
jge
dec
ds
cmp
fwait
rorb
or
xor
inc
and
xchg
lea
jl
inc
cmpb
xlat
shr
cmp
push
ret
js
add
add
ret
sub
add
rolb
or
inc
push
add
mov
cmp
adc
mov
leave
cli
mov
das
pusha
or
dec
roll
add
mov
and
push
and
ret
mov
lods
xor
mov
mov
fst
add
jo
roll
pop
out
ror
xchg
shl
lods
lds
fdivrl
jns,pn
adc
adc
cld
mov
sub
jecxz
or
mov
scas
jp
xchg
push
stos
cmp
adc
cs
adc
shlb
mov
je
movsb
mov
mov
in
into
stos
sbb
push
jnp
scas
lds
jmp
outsl
iret
inc
jbe
push
pop
cmpsb
insl
jbe
test
lock
outsb
data16
gs
je
lahf
std
sbb
scas
inc
push
aas
pop
hlt
jmp
adc
sub
adc
mov
adc
out
daa
mov
or
adc
cld
cmp
pop
sbb
lcall
mov
and
hlt
mov
daa
negl
pop
push
mov
fmul
pop
xorl
out
push
push
mov
out
lahf
std
mov
ljmp
int
pop
add
cmp
std
insl
and
or
xchg
mov
xorb
or
je
dec
and
mov
cld
fstl
fcoms
shlb
adc
lds
ret
and
lahf
data16
jge
push
sbb
lahf
loopne
outsb
cltd
add
xchg
push
mov
pop
or
int
std
fptan
loop
xchg
cwtl
jle
lret
insb
and
loopne
stos
out
xorb
and
add
mov
lea
push
xlat
sub
imul
inc
inc
aas
push
inc
mov
sbb
pushf
movups
push
mov
in
push
pusha
add
and
out
sbb
push
cmp
pop
cmpsl
mov
inc
enter
popf
xor
jecxz
cmp
in
imul
ss
test
inc
inc
sub
inc
cltd
mov
or
jae
jmp
mov
sbb
jnp
jp
jbe
stos
rclb
sub
notl
mov
mov
adc
fwait
rcll
pop
pusha
fcoms
sbb
in
test
or
imull
xchg
aas
fldcw
test
push
or
xor
jae
shr
pop
dec
pop
jmp
adc
lods
dec
movsb
pop
push
ret
lea
inc
cmp
cmp
daa
rol
dec
mov
push
mov
xor
push
mov
lahf
jmp
push
xchg
out
nop
repnz
stos
pop
test
push
nop
outsb
popf
aas
lcall
shl
jmp
inc
ficompl
out
and
sub
js
push
aad
cli
test
fcoms
fisttpl
dec
add
out
or
imul
mov
cmp
jle
push
mov
repnz
out
sti
enter
arpl
fs
call
sbb
adc
mov
add
pushf
xchg
mov
or
and
inc
sti
std
xor
fldcw
sub
lret
jge
cs
rcrb
jg
pushf
scas
mov
test
adc
popa
ljmp
scas
loopne
xchg
sub
sbb
sub
add
scas
fisttps
mov
rclb
sub
mov
fsubs
testb
cld
jp
sub
ja
ret
in
out
adc
mov
dec
jno
outsb
add
outsb
movsl
lahf
jnp
mov
dec
adc
stc
and
push
aas
ret
mov
hlt
jnp
cmp
popl
aad
iret
mov
mov
repnz
lahf
jp
mov
adc
imul
jo
xchg
in
mov
jb
xchg
in
adc
jae
adc
insl
ss
and
push
xor
or
cmp
sahf
lods
rclb
xlat
push
xor
mov
push
insb
imul
bound
gs
push
push
push
pushf
je
sub
jge
mov
dec
in
jmp
mov
sbb
cmp
jbe
push
adc
jl
filds
mov
and
push
sbb
and
push
lods
lret
hlt
sbb
pop
stos
mov
testl
adc
addb
xor
jno
fimuls
or
sub
adc
fidivrs
test
cmp
mov
and
mov
movsb
inc
cmc
add
sub
jg
test
movsl
push
fsubrp
push
adc
sub
loope
add
ljmp
inc
rcll
sbb
push
add
sub
clc
out
js
fs
pusha
icebp
movsb
fcmovne
and
cmpl
push
cmp
es
test
nop
adc
outsl
sub
scas
ljmp
bound
sahf
dec
cmp
ljmp
xor
movsb
shlb
loope
inc
push
in
adc
arpl
hlt
inc
push
mov
mov
xchg
es
je
cmp
outsl
sbbb
pop
js
test
jge
mov
add
push
mov
inc
inc
insb
push
faddp
pop
data16
inc
iret
int3
and
stc
dec
out
adc
pop
xchg
je
clc
mov
notb
int
aaa
push
mov
jge
push
push
xor
pop
push
push
pusha
loopne
and
mov
in
lock
mov
adc
dec
inc
or
cmc
dec
sti
mulb
push
add
mov
pushf
xor
adc
mov
mov
in
jp
pop
mov
daa
into
dec
xor
mov
dec
test
das
xchg
jle
or
push
int
pop
lds
cmc
xchg
mov
mov
and
and
test
fcomip
cmp
cmpl
inc
in
push
iret
in
mov
loope
jne
xor
mov
push
pop
inc
cmp
push
xchg
gs
pop
stos
ret
es
dec
out
mov
arpl
add
mov
dec
ret
test
repz
arpl
outsl
push
and
xor
sti
push
repnz
notl
push
rolb
call
push
rcrb
stos
mov
test
adc
xchg
mov
and
push
mov
cli
into
sbb
out
jne
stos
xor
xchg
popf
aas
push
sub
jmp
and
or
mov
jb
and
sahf
fstpl
mov
xor
xor
jae
push
lds
mov
add
pop
loopne
mov
les
fistps
xor
mov
mov
inc
push
jge
rcrb
jb
sti
int
dec
adcb
or
filds
mov
push
pop
mulb
loopne
cwtl
lock
mov
inc
cmp
in
in
leave
xor
cmpsl
dec
inc
test
add
add
lea
dec
sbb
sbb
jno
jne
mov
mov
cli
sub
into
jbe
mov
inc
xchg
mov
addr16
adc
xchg
bound
cmp
jo
mov
stc
xchg
cmpsl
bound
sbb
cmp
pop
jno
pop
pop
insl
and
sbb
das
inc
aam
mov
test
int3
dec
es
fisubrs
cmp
mov
or
dec
sti
mov
jae
sub
ljmp
sbb
leave
enter
test
mov
adc
inc
fistpll
push
add
clc
in
and
or
mov
xchg
push
adc
xor
ljmp
movsl
lfs
mov
sbb
fisubs
inc
pusha
mov
sbb
fbstp
mov
ja
gs
fdivl
cmp
sub
js
pop
insb
fstpl
fistpl
sarl
cwtl
push
out
mov
movq
xchg
je
adc
push
mov
lret
sub
loope
mov
ljmp
cmpsl
push
mov
jmp
dec
inc
xor
sbb
mov
arpl
inc
mov
rol
push
icebp
jle
push
or
or
inc
pop
mov
add
sub
popf
pop
xor
pop
and
int
cltd
je
call
into
inc
mov
jg
mov
mov
jecxz
outsl
mov
int
xchg
xor
test
xlat
xor
cmpsb
popf
cltd
xchg
push
lcall
into
mov
pop
icebp
out
add
ror
out
popf
and
aam
mov
xor
or
scas
mov
in
fs
sahf
insl
adc
pusha
xchg
es
xor
daa
mov
jns
pop
fadds
lahf
pusha
rcll
push
dec
dec
mov
pop
das
jnp
popa
and
idivb
in
jno
xchg
mov
sbb
xor
loopne
and
mov
lcall
test
out
xor
test
pop
jmp
dec
mov
test
icebp
mov
jp
in
cltd
inc
sub
jl
test
stos
adc
sbb
cmpsb
ss
sbb
sub
fisubl
lcall
cwtl
stos
stc
rcrl
out
add
loopne
cmp
sbb
adcb
sbbl
lret
sub
inc
mov
pop
or
cs
xchg
mov
xchg
xor
das
adc
cmc
loop
inc
inc
enter
xlat
ret
xor
in
aad
vcvtpd2psy
aas
jecxz
ds
mov
fcoml
sbb
inc
ret
mov
dec
mov
stc
test
and
fdivr
fisubl
cltd
movsb
in
fwait
lcall
lret
sar
adc
roll
mov
jno
mov
pop
xor
mov
inc
and
in
decb
jae
aaa
push
int3
mov
xchg
mov
sub
pop
mov
out
icebp
sbb
sub
aas
mov
popf
sbb
cmp
adc
cltd
popa
inc
cmp
cmp
pop
and
jecxz
ret
push
pop
adc
inc
sbb
add
lds
icebp
icebp
sbb
pop
iret
movsl
jae
mov
or
cmp
mov
stos
push
mul
cmp
jne
xchg
je
pop
and
div
xor
push
xchg
push
je
add
lods
mov
push
sbb
imull
lods
lods
jmp
pop
scas
jae
aad
push
adc
and
jle
scas
inc
nop
inc
outsl
out
mov
or
adc
push
xchg
push
sbb
pop
imul
int
push
xor
pusha
lret
fwait
inc
loope
inc
inc
jb
test
sbb
test
test
aad
mov
faddl
int3
call
cltd
and
rcrb
xchg
out
sub
stc
mov
lods
movsl
mov
test
mov
push
stos
leave
cmp
loop
int
add
movsb
jmp
nop
xchg
test
adc
insl
pusha
inc
stos
mov
mov
aas
mov
popf
lock
mov
jns
add
stc
ret
es
pop
pop
std
lea
out
sub
or
mov
xor
and
fldcw
gs
jb
or
mov
std
fdivl
push
or
jns
sub
jb
mov
mov
and
negl
mov
adc
or
cmp
and
loopne
fbstp
adc
pop
popa
fstpt
arpl
mov
xor
cmpsb
adc
movsl
btl
pop
in
or
mov
into
movsb
negb
nop
fdecstp
dec
adc
cli
push
cmp
or
xchg
push
vpshlq
int
mov
movsl
loopne
jge
mov
fucomi
pop
lea
in
jle
nop
mov
jae
sbb
mov
ja
test
orb
adc
push
insb
shll
fbld
fs
bnd
jle
dec
sbb
and
out
divb
or
inc
dec
add
pop
push
out
pop
pop
lock
pop
iret
or
ret
pop
test
js
cwtl
or
sbbb
dec
repnz
daa
or
jb
loopne
insl
rcl
add
and
adc
incl
jno
or
jecxz
xlat
xor
dec
push
inc
stc
pop
sub
jno
mov
jb
lret
ret
xor
mov
call
ret
lahf
xchg
sbb
jo
lods
jae
mov
pop
rol
loop
mov
lea
lret
lret
fiaddl
ljmp
push
lahf
pop
sbb
pop
out
xor
push
lods
cmpl
and
xchg
fdivrs
movsb
shll
mov
jno
cmpsl
fwait
dec
gs
xchg
mov
push
mov
cmpsb
pusha
jecxz
xchg
cs
xchg
mov
insb
mov
xor
adc
sub
outsl
daa
push
inc
aad
mov
mov
clc
into
scas
stc
cltd
lcall
arpl
addr16
shll
dec
divb
mov
loope
mov
mov
dec
cmp
lahf
aas
movsl
lods
inc
negb
mov
icebp
jmp
stos
mov
pop
insl
negb
push
sbb
pop
scas
in
or
or
and
leave
xor
outsl
push
mov
cmp
and
fsubrl
scas
gs
xor
jae
call
rcl
inc
mov
or
and
loop
ficoms
push
stos
dec
dec
vunpckhps
movsl
out
ss
inc
iret
fcmovne
fbstp
adc
sub
fstpl
enter
pop
mov
lock
adc
mov
sahf
jo
movsb
cmp
xchg
jge
push
jl
cmp
cmp
mov
push
pop
push
xor
or
daa
pushf
inc
mov
add
mov
shll
mov
jecxz
mov
and
mov
popa
lock
lea
xchg
sub
dec
ds
sub
adc
dec
pop
shll
sahf
dec
sbb
lods
pop
test
bnd
cld
aas
push
adc
fisubl
fcoms
pop
addr16
xchg
adc
mov
mov
aaa
imul
shll
popa
rorl
sbb
pop
pop
cli
adc
xchg
adc
ficompl
int
in
and
hlt
jmp
push
mov
lcall
adcl
xchg
sbb
outsb
sub
test
jo
sahf
in
imul
loop
mov
pop
lahf
movsb
inc
inc
cmpsb
je
cmpsl
int3
and
je
cmpsl
mov
sbb
mov
pusha
dec
mov
pop
xor
enter
or
sbb
into
arpl
movsb
mov
mov
imul
or
or
ds
ljmp
rep
in
adc
dec
xchg
cmp
ds
daa
push
rorl
mov
xchg
add
shll
sub
ret
adc
loopne
inc
inc
in
test
pop
inc
ret
shl
aaa
insb
subb
sub
loope
js
mov
out
in
pop
inc
js
xchg
ss
sbb
and
rol
lea
daa
movsl
cli
mov
and
mov
ljmp
pop
aas
aad
adc
sbb
xor
sub
xchg
out
test
push
ret
lods
adc
jle
push
cmp
mov
push
add
psllq
xor
fisubrl
lret
daa
inc
mov
ret
ret
xor
pop
stos
aad
jo
pop
push
inc
xor
outsl
jb
cmpb
insb
cli
or
js
xchg
sti
pop
es
mov
repz
jge
push
cmp
lret
inc
movsl
orb
stc
sahf
inc
jnp
fidivs
lods
cltd
lock
or
cmp
out
push
sti
sub
cltd
xchg
adc
sbb
scas
pushl
lods
outsl
xchg
mov
adc
fstpt
loope
fcoms
popa
mov
add
pop
lret
xor
es
hlt
out
je
dec
mov
dec
and
nopl
jbe
cli
cwtl
jnp
cmp
ljmp
adc
or
inc
imul
ret
xchg
arpl
xchg
clc
mov
dec
aas
pop
shll
pushf
jp
push
jns
int
adc
xchg
sub
or
cli
mov
iret
imul
add
xchg
dec
sub
push
mov
xor
loope
adc
sub
repz
add
xor
scas
sti
xor
aaa
push
leave
popa
test
in
loopne
cli
dec
fdiv
jbe
cmp
ds
int3
ret
dec
xor
fisttpl
ret
mov
cltd
mov
mov
mov
jnp
ljmp
shr
sbb
pop
data16
es
repz
mov
jmp
clc
fsubrl
int3
mov
xchg
out
das
mov
lds
inc
ret
xlat
sahf
xchg
cmp
rorl
push
sub
mov
pop
rcrl
xchg
fldenv
notb
sub
mov
mov
lret
push
jmp
jbe
and
xchg
pmaddwd
addr16
adc
jge
or
aas
orw
jecxz
mov
adc
xlat
fdiv
pop
sbb
mov
mov
jge
fnstenv
stos
xlat
jno
popa
mov
ljmp
sub
shlb
inc
in
daa
iret
test
arpl
mov
jo
jmp
dec
imull
mov
shr
hlt
fs
jecxz
subl
jg
jne
pusha
push
loope
out
out
adc
add
push
addr16
clc
scas
das
pop
aam
test
sbb
aaa
in
mov
pushf
add
andl
insb
adc
cmp
popf
out
scas
or
push
imul
orl
adc
pop
mov
stos
mov
pop
imul
shlb
mov
jns
mov
das
loop
rcrl
cmp
xorb
ljmp
adc
fincstp
dec
rolb
mov
mov
mov
in
jecxz
dec
cli
push
mov
out
lret
aas
out
call
cltd
in
bnd
jae
lods
ja
xchg
in
mov
pop
faddp
cld
lahf
xchg
arpl
pop
or
cmp
sub
mov
jnp
push
mov
lret
hlt
sub
ret
adc
cmpl
popf
sub
sub
andl
add
and
xchg
xchg
mov
or
push
or
pop
stos
stos
pop
cs
mov
xchg
aaa
cmpsl
clc
pop
cmp
mov
ss
xchg
dec
mov
stc
or
iret
cmp
cli
xor
mov
js
add
in
dec
leave
push
mov
jnp
std
and
sbb
sbb
sbb
insl
mov
pushf
dec
out
lcall
lcall
and
cmp
ss
cli
clc
sti
pop
push
jp
dec
add
dec
movsb
sub
test
stc
fmul
jns
pop
and
icebp
adc
mov
leave
ljmp
jbe
js
fisubl
fmull
or
cli
jo
cmpsb
out
mov
mov
fs
es
shlb
inc
jns
sbb
imul
loop
repnz
fdivl
imul
mov
cmc
mov
ret
arpl
mov
pop
lahf
and
xchg
push
cltd
out
adc
mov
dec
das
push
inc
loopne
aad
rol
push
decl
xchg
loope
inc
cmp
int3
jmp
movsl
repz
jns
std
mov
mov
inc
xchg
icebp
adc
and
sub
lcall
dec
mov
mov
outsl
xchg
movsb
mov
mov
jecxz
mul
push
hlt
lcall
mov
cmp
fadds
push
xor
lock
mov
fiadds
xchg
cwtl
inc
test
pop
popa
sub
aam
add
enter
jg
inc
push
clc
mov
push
into
ret
test
jno
jmp
sbb
pop
sbb
jle
mov
jb
add
mov
dec
scas
sahf
ret
mov
or
icebp
jmp
jo
clc
lods
jmp
test
or
pop
popa
fwait
sbb
jb
or
and
pop
adc
sub
mov
jl
sbb
test
jns
in
mov
and
or
daa
stos
mov
fldt
pusha
sbb
test
pop
mov
sbb
cmp
in
xlat
int3
jae
mov
inc
mov
push
scas
je
mov
adc
sbb
push
pop
xchg
cmpsb
mov
or
bound
xor
popf
iret
fnstsw
mov
aas
addr16
push
jns
dec
and
jne
mov
popf
xor
cmc
mov
outsl
cmp
sub
fisubrs
filds
dec
lret
or
xlat
dec
xchg
inc
and
cmpsb
in
out
lods
jne
jns
mov
movsb
gs
jp
icebp
jle
cltd
cmp
mov
shlb
shll
lods
je
sahf
hlt
insb
inc
or
rolb
into
push
add
cmp
call
inc
push
pop
lret
add
rolb
adc
std
subb
jb
nop
mov
xchg
sar
pop
shlb
call
mov
sbb
dec
in
add
mov
clc
and
cmp
jg
gs
pop
push
int
cmpsb
inc
ds
sub
test
ja
lahf
adc
or
test
mov
clc
outsl
mov
fsubrs
sub
inc
jae
shr
push
xor
int3
fdivrl
jl
xchg
cmpsl
lea
pop
nop
mov
aas
xchg
push
cli
les
jae
xor
aas
pop
cmc
out
cmc
idiv
bound
jge
test
jge
xorl
sbb
dec
rorb
add
jecxz
mulb
lret
mov
fwait
popf
and
push
mov
xchg
sbb
je
pop
inc
cmp
insl
push
outsl
ret
push
rorl
mov
inc
push
mov
dec
repz
int3
movb
mov
fdivrs
js
fwait
je
xchg
fcoms
cs
mov
and
cs
sbb
push
sub
mov
inc
pop
ja
sbbb
pop
xchg
lahf
jns
int
xlat
xchg
sbb
mov
push
jb
dec
stos
cwtl
lea
std
loope
sub
les
js
imul
mov
push
mov
andl
ficompl
add
mov
and
sub
std
popf
fwait
inc
imul
fcomps
dec
mov
jbe
pushf
fnstcw
addr16
jbe
cwtl
and
inc
loope
shrb
cmpsb
adc
pop
ret
mov
add
lods
mov
arpl
cli
inc
and
stc
ficomps
fstp
sub
xor
icebp
xchg
cmp
jp
push
pop
movsb
sti
jnp
mov
adc
loope
or
mov
out
inc
push
leave
cld
and
mov
mov
pushf
sbb
lahf
add
loopne
xchg
cmc
in
adc
jns
jno
add
rcll
cmp
pushf
sub
loope
notl
cmc
movsl
pop
jmp
dec
aad
cmpsb
aas
pushl
rorl
adcb
cmpl
sbb
jecxz
int3
and
ud2
imul
daa
dec
xchg
inc
mov
mov
fstl
inc
xor
mov
and
adc
in
lcall
orb
bound
sti
push
adc
out
pop
cmp
mov
mov
xlat
sti
push
dec
inc
cwtl
sbb
pop
pop
push
sahf
xchg
adcb
mov
clc
ret
rcll
and
repnz
and
dec
lret
or
mov
lret
inc
cmp
sbb
jle
xchg
mov
rclb
aas
pop
mov
cs
push
xchg
sbb
push
popa
xchg
out
jns
mov
cmp
sub
je
outsb
xor
inc
jg
pop
sub
and
mov
divl
repnz
stos
fcmovbe
jg
xor
scas
sub
or
sar
stc
cmp
mov
or
clc
enter
pop
dec
ss
dec
push
std
sbb
pop
push
cmp
aas
jecxz
jecxz
rorl
jmp
fstps
outsl
mov
scas
mov
roll
test
fwait
in
sbb
mov
fmull
push
mov
addr16
inc
mov
xchg
movsl
dec
insb
stos
fcoms
cmc
pop
mov
xor
xlat
sub
cmpsb
lret
stc
ljmp
sbb
adc
orb
add
in
notb
inc
addl
sub
out
andl
xchg
and
mov
mov
loop
push
xlat
btr
jns
movsl
and
adc
in
mov
ljmp
cmp
std
xlat
jnp
pop
xlat
adc
fildll
pop
shlb
pop
jp
ret
jl
cmpsb
adc
push
xchg
add
fwait
pusha
or
rolb
adc
sbb
fsubrp
fldenv
sub
or
daa
test
pop
mov
les
shlb
fnstsw
pop
into
js
int
imul
xlat
adc
and
incl
aas
or
jmp
test
mov
pop
inc
arpl
popa
stc
adc
test
xchg
cmp
nop
rcrb
mov
pop
loopne
sub
and
shll
sub
or
scas
fimull
inc
mov
cmp
out
mov
daa
iret
mov
push
cwtl
faddp
pushf
ja
sub
inc
or
loop
xchg
sub
gs
fstpl
xor
xchg
dec
stc
rcrl
cmc
sbb
jns
mov
mov
mov
push
daa
lahf
or
hlt
lods
call
or
jo
dec
jbe
xchg
mov
push
sbb
jmp
cmpsl
cmpb
sub
cmpsl
push
sarb
fidivs
inc
aas
pushf
xchg
stos
sbb
into
add
mov
js
fadd
sub
xchg
xor
cltd
inc
push
add
and
push
popa
pop
fstl
adc
cmp
movsl
adc
cmp
push
and
sbb
push
mov
fcomps
frstor
or
shlb
sub
push
push
inc
popf
stos
subb
insl
push
mov
mov
pop
cmpb
test
xor
jle
mov
out
ds
or
sub
or
stos
dec
mov
mov
push
push
or
jae
stos
into
xchg
xchg
out
sub
dec
lock
ss
cmpsl
pop
cmp
xorb
nop
popf
adc
jmp
cmp
scas
in
jmp
xor
jno
pop
cmp
testl
jae
rcll
jge
jl
clc
test
sub
scas
rcrl
es
xchg
cmp
add
pusha
outsl
adc
cmp
cmp
add
xor
dec
lahf
in
mov
sbb
jge
ss
sbb
xor
jecxz
push
dec
inc
outsb
ss
push
ret
xchg
stc
pop
pop
pop
sbb
and
pop
or
xchg
sbb
cmp
mov
and
adc
into
fs
inc
or
push
mov
movsl
test
xchg
xor
mull
sub
jne
mov
jb
dec
or
pop
pop
test
cwtl
imul
cmp
lret
mov
add
inc
jp
popf
lock
mov
ljmp
lahf
adc
mov
inc
cmp
dec
mov
dec
mov
push
out
in
add
ljmp
aaa
mov
sbb
in
jmp
mov
inc
dec
sbb
jne
mov
mov
lds
repz
data16
xor
shr
jnp
ficoms
leave
ds
mov
push
jmp
adc
lock
dec
fadd
filds
push
movsb
cmpb
cmpsb
cmp
add
adc
mov
shlb
in
add
jge
lret
in
xlat
shrl
in
mov
and
mov
outsb
add
jb
mov
out
mov
xchg
lods
out
fs
inc
fcoms
in
jo
and
mov
mov
mov
pop
popl
jo
shr
jmp
inc
xor
cld
sub
inc
inc
mov
negb
mov
xchg
lods
and
adc
sub
shlb
jns
stos
xchg
clc
popa
and
faddl
jns
daa
mov
hlt
mov
and
push
or
sub
cmp
pop
xchg
or
push
mov
cmp
addl
and
cmpsl
shrb
xor
or
inc
aam
adc
mov
adc
jns
cmc
mov
pop
imul
cmp
fwait
jb
jae
js
subb
aaa
xor
jge
jle
xor
and
dec
xor
jmp
sti
add
and
in
cs
mov
and
push
dec
mov
add
mov
inc
mov
inc
mov
add
das
add
cmp
push
push
dec
movsb
mov
fdivs
mov
arpl
mov
cmpl
loop
jmp
cmp
push
mov
cwtl
cmp
sbb
fwait
inc
cmpsl
add
jle
test
xlat
call
lods
xor
outsl
xchg
cmp
add
sbb
dec
rcl
xchg
jle
mov
xchg
or
shr
mov
dec
ret
pop
mov
cs
movb
daa
rcrl
xchg
inc
pushl
push
insb
rclb
mov
pop
inc
sbb
lods
jno
xor
popa
enter
pop
sub
xor
pop
push
xorl
outsb
cmp
test
mov
add
jmp
lret
cld
fistl
mov
push
sbb
xor
sub
inc
ss
push
cmp
rol
sub
lret
iret
test
orl
push
add
outsb
sti
sub
mov
mov
int3
cli
test
push
xor
cli
mov
jmp
dec
fisttpll
pop
push
gs
inc
push
scas
mov
or
addr16
fstl
push
subb
xchg
sbb
push
repnz
fisttpl
push
mov
lahf
mov
jae
les
das
mov
stos
sub
arpl
or
mov
int
jo
fisttpll
adc
in
cmpsl
cmp
sbb
xchg
and
shlb
adc
inc
cmp
in
je
test
jnp
pop
push
mov
add
call
movsl
es
cltd
or
aas
aad
inc
jae
inc
jge
cmc
adc
xchg
enter
loop
inc
not
ljmp
scas
std
sbb
pusha
aas
cmp
add
sbb
push
call
aam
lea
or
roll
pop
movsb
push
mov
fisttps
push
cmc
loop
scas
sub
xchg
sub
lods
xchg
fiadds
stos
dec
in
dec
adc
mov
js
cmpb
add
aam
xchg
inc
mov
mov
mov
fsubrs
in
pop
loop
in
jbe
roll
sub
mov
psubb
dec
aaa
add
lock
packuswb
pushf
pop
mov
add
sahf
jge
mulb
pop
pop
dec
stos
leave
std
mov
pop
aas
sbb
lock
lret
dec
ljmp
sahf
ffree
clc
lods
push
test
cmp
clc
push
jno,pn
xchg
shlb
jg
arpl
mov
popa
cli
rorl
sbb
pop
fwait
dec
lds
dec
push
daa
push
or
js
imul
loop
sbb
insb
pop
ljmp
mov
ds
adc
repnz
leave
cmp
xchg
aaa
xor
movsb
lods
insb
sub
jmp
shl
in
mov
xchg
xor
jno
fimull
sub
fs
fsubrs
in
pop
stos
xor
jns
jo
cmp
ds
xchg
imul
xlat
mov
cmpsb
xor
mov
sbb
mov
adc
cwtl
std
notb
cmp
stos
call
pushf
fidivrs
lea
pop
les
pushw
mov
int3
ror
ljmp
xchg
push
jbe
xor
dec
pop
cmp
leave
mov
and
add
sbbl
dec
into
adc
cmpsb
loop
orl
mov
pop
fidivrl
sub
les
or
aad
jmp
push
cmpsl
mov
xlat
lahf
sbb
cmp
insl
je
jnp
lea
push
pushf
cmp
test
jmp
inc
jp
cmp
ret
cmp
js
jbe
daa
add
mov
sbb
cmp
jg
cli
add
in
adc
pop
pop
push
sub
stos
addr16
shrl
lock
pop
inc
aam
push
dec
movsl
jns
lret
jg
mov
and
cmp
ret
inc
and
inc
call
lcall
imul
lock
pop
inc
shr
aad
cmp
mov
cmc
sub
fucom
stc
mov
stos
inc
sub
or
nop
shl
jb
aaa
jnp
loop,pt
data16
dec
lret
sbbl
fs
out
lret
out
xchg
jb
pusha
dec
fwait
jnp
jno
pop
adc
lcall
shrb
pop
push
shll
dec
or
dec
jo
out
out
push
jo
or
scas
xor
and
sbb
or
dec
inc
push
xorl
dec
cmpsl
in
addr16
xchg
aam
push
or
sub
push
pop
adc
mov
xchg
adc
lahf
orb
sbb
lcall
xchg
push
rcrb
lods
or
push
and
movsb
cmp
jnp
mov
out
cwtl
sub
pop
lock
push
inc
jo
stos
sub
push
jo
or
xchg
or
repz
push
sti
add
lods
add
lea
js
cli
cmp
pop
jbe
fidivrs
and
add
xor
jno
xor
fisttpll
mov
dec
stos
enter
mov
ret
inc
cs
mov
popa
popf
cmpsb
push
jnp
inc
push
inc
nop
sub
out
adc
inc
daa
fcomps
mov
aaa
mov
sub
icebp
cs
jmp
pop
push
test
inc
mov
int3
mov
imul
hlt
pop
xchg
clc
std
lret
mov
pop
sbb
pop
adc
push
orl
pop
insl
and
xchg
pop
loop
jp
test
outsl
filds
lcall
nop
inc
divl
xor
out
out
stos
int
dec
fimuls
ret
pop
sahf
out
xchg
cmpsb
adc
cwtl
mov
mov
mov
xchg
or
sbb
std
xchg
pop
or
or
frstor
cmp
nop
rcrl
xchg
cmp
jns
cwtl
xor
mov
clc
fimull
cld
fwait
sti
sbb
popa
addr16
xchg
scas
cmp
ljmp
xor
out
push
cmc
add
push
inc
push
jmp
ljmp
and
icebp
adc
fsubrl
jne
or
mov
xchg
jmp
int3
iret
sbb
inc
mov
pop
push
or
nop
ror
es
push
or
aaa
mov
dec
xchg
push
cli
lods
cli
loope
icebp
addl
sarl
push
pop
in
dec
add
dec
ds
loope
mov
push
sarl
dec
cmc
sbb
sbb
jns
jnp
es
arpl
dec
lock
test
xor
cld
xchg
cld
inc
xor
int3
mov
push
cli
adc
je
aaa
or
cmp
fdecstp
dec
out
xor
popa
sti
lret
pop
je
jmp
orb
mov
sti
xor
pop
bound
mov
std
test
jae
fisttpll
mov
imul
out
fmulp
cmc
mov
xchg
push
leave
scas
outsb
or
xchg
adc
push
xchg
jo
mov
push
mov
adc
xchg
ss
std
adc
imul
rcrl
adc
mov
or
xor
inc
subl
pop
xchg
ja
mov
dec
sub
test
add
fmulp
mov
xchg
mov
jb
mov
insl
add
xchg
jnp
cwtl
ljmp
mov
xor
sbb
into
mov
pop
movsl
jmp
fwait
mov
mov
mov
orl
dec
frstor
mov
push
or
cmpsl
pusha
rclb
scas
and
aas
outsl
mov
loope
call
inc
lahf
cmp
iret
jecxz
mov
aas
sub
mov
clc
mov
mov
cmpsl
orb
dec
sub
fmulp
or
jae
sub
jge
push
xor
jb
xchg
imul
test
ret
push
and
popf
fcmovnu
pop
sub
xor
lcall
add
mov
inc
push
rcl
add
insl
or
and
mov
xchg
mov
icebp
xchg
lahf
aas
ja
out
nop
mov
jo
das
xor
gs
adc
add
cmpsb
adc
mov
inc
xor
mov
cmp
lock
jno
fdivs
or
ljmp
sub
xorl
push
sbb
in
cmpsb
mov
adc
js
scas
iret
pop
scas
mov
scas
mov
push
push
and
sub
sbb
push
sarb
fsubl
xor
mov
stc
mov
insb
push
pop
adc
in
xchg
lea
add
and
jmp
ret
mov
leave
fiadds
or
aas
addl
mov
xor
jmp
in
or
testl
ficoms
data16
sbb
xor
dec
push
pop
jecxz
je
mov
fninit
outsb
test
fcoms
addr16
pop
mov
hlt
in
imul
and
and
mov
ret
inc
bound
test
pop
icebp
loopne
adc
daa
cwtl
test
mov
jg
int
mov
mov
cwtl
movb
mov
dec
aaa
test
mov
dec
adc
stc
mov
les
aas
xchg
daa
cltd
and
cs
pop
ret
mov
mov
shrl
mov
inc
test
rclb
mov
xor
mov
ja
jno
negb
sub
test
stos
aas
hlt
mov
icebp
iret
adc
add
int
data16
push
lahf
pop
or
cmp
outsl
test
negb
cmp
dec
test
sti
data16
inc
sbb
or
fwait
out
fwait
inc
mov
int3
push
icebp
push
sub
sub
mov
and
shl
rcr
arpl
lds
xchg
call
mov
cmc
out
jbe
mov
mov
imull
mov
dec
lret
xchg
in
pop
mov
rcl
and
shll
mov
add
sbb
xor
pop
pop
xor
mov
out
test
pop
adc
mov
aaa
mov
mov
fisubrs
mov
stc
in
rcrb
jae
and
adc
hlt
mov
and
test
xchg
xor
std
add
mov
sbb
mov
sti
adc
out
push
popa
ret
in
push
lods
insb
sti
push
add
lret
sahf
push
add
adcl
jne
mov
int3
rcr
dec
test
inc
lea
dec
scas
jne
jb
mov
pusha
inc
mov
mov
in
cmp
adc
cmp
sub
mov
pop
int3
dec
ficompl
pushf
clc
and
pop
pop
es
sbb
sbb
sbb
sbb
jg
ljmp
mov
pushl
lods
mov
movsb
clc
mov
mov
mov
mov
cmp
cwtl
stc
pushf
mov
js
test
cmp
pop
arpl
mov
data16
push
pop
push
in
ret
cmp
and
inc
mov
out
push
dec
push
xor
jg
fmull
dec
negl
pop
loope
daa
jg
cmc
pop
loop
aaa
out
ret
push
add
popf
jp
mov
cmp
add
out
negb
sub
out
sub
in
jmp
push
xor
cmpsl
pop
sbb
hlt
jl
jge
lods
adc
xor
and
fcmovnu
push
out
sbb
cli
mov
sarb
imul
mov
ficompl
incb
movsb
shr
inc
pop
mov
mov
jo
push
jle
cmpsl
xor
out
xor
fs
aas
cmp
push
movsl
pinsrw
lret
jno
sub
ss
test
shlb
push
cmpsl
jl
jnp
out
mov
xor
add
in
in
xor
shl
fistl
lds
inc
in
jne
ja
mov
je
mov
lret
fcomp
inc
sbb
cmp
cld
jecxz
addr16
inc
in
icebp
cmp
jp
push
lods
jp
push
call
xor
sbbl
adcl
sub
jo
mov
sbb
or
or
call
in
pop
mov
cmpsl
cli
and
add
out
out
test
out
push
mov
fnstenv
scas
xchg
outsl
addb
daa
iret
push
insl
cli
cmpsb
outsb
mov
or
mov
adc
mov
push
ret
hlt
push
xchg
pusha
mov
sub
jg
sub
jge
adc
in
incl
adc
out
pop
sahf
lods
xchg
movsl
stos
jbe
test
xchg
ss
xchg
sub
mov
jae
jo
out
cltd
add
push
jl
or
test
mov
dec
xorb
xorb
fdivl
rorb
add
adc
mov
test
cmp
cmp
push
xor
fucomi
pop
mov
mov
addl
in
inc
loop
mov
sub
loop
jge
std
shl
dec
xor
sub
stos
arpl
leave
push
out
jo
and
iret
xchg
clc
test
or
testb
dec
cmp
push
lock
inc
xchg
cmp
aam
sbb
out
cmp
jbe
push
nop
xchg
ret
ljmp
ds
ret
leave
nop
and
lret
je
aaa
loopne
in
adc
or
sbb
mov
movsb
fcoml
fisubs
and
jae
adc
rcll
cmpsl
int
jge
addr16
notl
xchg
mov
push
sbb
mov
out
in
cmp
push
icebp
lret
out
mov
mov
lret
lcall
sub
aas
mov
lahf
mov
cmp
jae
int3
das
enter
sbb
cmp
sti
adc
sbb
push
sbb
sahf
dec
xor
push
jnp
inc
fs
insb
xchg
cmpsl
jmp
jl
cmp
add
subb
iret
cwtl
pop
cwtl
lods
pusha
jl
stos
jg
xchg
dec
pop
push
int
adc
mov
adc
mov
das
lret
aad
cld
cmpsl
ret
int3
clc
pop
push
cmp
in
and
outsl
adc
movsl
xchg
aad
mov
fadds
scas
add
jae
or
cmp
pop
mov
jb
fldt
fcoms
adc
mov
sub
pushf
xor
fdiv
mov
add
stc
pop
lret
leave
insb
push
fcmovnbe
aas
xor
mov
cmp
clc
hlt
bnd
push
pop
or
mov
xchg
xchg
dec
call
decb
xchg
mov
push
shrb
push
or
or
fldt
ror
lds
sub
daa
pop
fildll
clts
call
inc
lcall
lahf
adc
cli
dec
outsl
mov
jecxz
sub
xlat
lahf
jae
js
sbb
mov
dec
repz
pop
inc
mov
push
fs
or
push
inc
push
cmp
roll
lret
mov
nop
fsubs
push
inc
mov
xchg
ljmp
inc
addb
fistps
pop
jnp
loope
mov
jne
xor
adc
cmpsl
xchg
stos
push
cmc
mov
sub
mov
jle
js
push
mov
pusha
inc
movsl
cld
push
dec
in
xchg
jge
std
fwait
pop
or
imul
cmp
adc
fisttpl
jg
dec
imul
adc
push
sbb
hlt
std
leave
mov
jl
mov
in
sub
xchg
jge
sub
xor
push
pop
adc
cmpsl
and
adc
mov
hlt
out
add
fs
and
mov
jno
test
cmp
xor
repz
add
dec
pop
jbe
cmp
fmull
enter
pop
cli
out
fstpt
sbbl
push
jne
mov
ds
mov
fisttpll
hlt
sub
sub
and
repnz
sbb
insb
in
das
orb
cli
pop
mov
and
pop
and
ficoms
lahf
cmp
ret
mov
pop
mov
and
inc
loop
mov
outsb
sbb
dec
pop
sub
mov
repnz
push
sub
out
shlb
jae
shll
popa
mov
int
sub
daa
mov
inc
hlt
nop
test
mov
sbb
lock
sub
mov
aas
xchg
adc
in
push
mov
daa
add
cli
xchg
btr
add
and
lods
adc
and
pusha
push
mov
jle
sub
iret
leave
sub
in
push
mov
cwtl
out
cmp
pop
popa
sub
sub
es
xchg
xchg
push
test
adc
push
lods
aas
ljmp
call
rcrl
mov
xor
pop
xchg
or
adc
iret
adc
mov
jmp
testb
or
ret
or
jns
nop
adc
or
daa
pushf
loope
stc
sub
das
scas
test
in
and
out
gs
jb
sbb
cmpsb
ret
enter
nop
xchg
stc
mov
out
testl
insl
xor
jnp
mov
cmp
ficomps
les
mov
subb
cs
xor
fstpl
mov
in
fisubrs
repnz
pop
dec
je
pop
out
dec
and
mov
cs
sbb
xchg
int
jp
gs
mov
mov
fdivs
fwait
sub
pop
jns
jns
jge
cs
mov
lods
mov
or
std
xchg
outsb
xlat
loop
ds
rcr
mov
nop
cmp
push
push
int3
mov
out
sub
pop
es
mull
jp
add
mov
and
jo
ja
insb
aad
jmp
insb
jo
pop
aam
sarb
lds
imul
or
pop
loopne
xor
popa
cmp
mov
push
dec
pop
test
pop
mov
xor
add
mov
add
cmp
or
sub
jae
cwtl
aad
fstl
adc
pop
inc
xchg
popa
cli
mov
test
inc
inc
jae
outsb
stos
ds
pop
sbb
ljmp
call
inc
sub
lock
dec
lock
sbb
jl
fs
jl
push
cmpsb
repnz
inc
adc
lods
fwait
stc
mov
ss
jne
jnp
inc
pop
push
sub
loopne
ss
and
lea
ficomps
dec
sbb
hlt
iret
adc
mov
in
fidivl
lcall
gs
movsl
push
dec
jbe
lods
orb
sbb
dec
or
push
movsb
jmp
pop
fisubrs
pop
pop
jecxz
shlb
data16
test
mov
fimuls
sub
mov
sbb
jl
clc
add
call
cld
scas
sahf
gs
add
addr16
mov
inc
mov
dec
push
push
xchg
arpl
fwait
pop
sahf
lods
scas
push
insb
mov
jle
mov
xor
pop
mov
mov
and
aad
cld
popa
lcall
mov
je
mov
mov
sub
cmpb
cli
mov
push
cld
mov
jae
push
mov
and
pop
test
xor
cmp
mov
out
mov
pop
dec
mov
jg
xchg
adc
sbb
xchg
inc
frstor
pop
pop
pop
jnp
cs
ret
inc
xor
int3
fs
mov
aad
mov
xchg
ja
popf
adc
outsl
loopne
or
or
mov
push
or
add
jg
or
insb
pop
xchg
lret
adc
sbb
inc
bound
push
fisubrs
repz
fs
jecxz
xchg
pushf
pop
stos
sub
fcmovnu
lcall
popf
xor
cmp
arpl
dec
or
cmp
lock
icebp
push
daa
cld
aam
mov
or
mov
push
push
sub
mov
pushf
and
mov
lret
stos
xchg
push
push
ret
mov
add
xchg
push
mov
and
out
cvtps2pi
jg
fidivs
sub
xchg
jle
cbtw
shl
jbe
and
adc
cmpl
mov
pop
push
adc
pop
lods
rcr
rol
aam
push
ret
push
lcall
lock
mov
mov
mov
push
bound
sub
dec
aad
cmp
mov
outsb
outsb
dec
and
lret
xchg
lods
add
cmpsl
stos
jne
mov
push
inc
add
movsl
xchg
and
push
xor
adc
push
cltd
push
orl
lods
insb
dec
pop
cmpl
and
xor
cmp
xor
imul
cmp
pop
adcl
pop
sub
ljmp
fsincos
or
mov
pop
xchg
call
fbstp
imul
inc
orl
das
mov
loope
sub
mov
push
xlat
fmuls
dec
pop
into
lods
arpl
rorl
outsl
push
push
jmp
std
push
mov
push
cmp
pop
push
cld
mov
ficompl
lods
adc
into
mov
and
test
push
xlat
int3
pop
jno
cmp
cmp
inc
push
hlt
test
dec
and
xor
sbb
dec
and
loope
and
pop
int
cwtl
dec
out
dec
add
mov
sbbb
and
loopne
push
pop
adc
dec
push
les
cs
mov
mov
mov
and
sbb
cmpsb
lock
bound
mov
adc
mov
movsl
push
jl
cs
xchg
cmp
cmp
cmp
inc
add
mov
shrl
pop
adc
push
stc
mov
sbb
pop
popa
jge
sti
jno
mov
faddp
fld1
orl
rorl
cli
xor
aam
js
test
stos
adc
dec
jno
icebp
xor
aad
movhps
int
dec
mov
stos
xor
nop
push
xchg
int
je
mov
jae
movsl
mov
mov
js
rcr
cs
stc
shrl
jg
sbb
jns
xchg
pop
fists
dec
jle
dec
xchg
and
dec
test
aad
data16
pushf
icebp
sub
arpl
repz
push
ljmp
or
dec
or
and
xlat
std
movsb
test
pop
cltd
mov
pop
dec
iretw
div
repz
sub
adc
mov
and
push
aaa
cmp
lret
bound
push
pop
imul
lods
idivb
outsl
pop
mov
cmp
push
das
inc
mov
or
cli
add
xor
addr16
icebp
dec
daa
jge
sub
insl
xchg
sahf
adc
loopne
mov
inc
out
js
out
aas
or
lods
push
or
mov
popa
xchg
cmp
lods
xchg
inc
arpl
jns
xor
ds
add
jbe
je
nop
fwait
enter
imul
adc
push
push
das
jp
jo
push
cmpsb
push
mov
in
movsl
add
inc
pushl
scas
and
mov
xchg
hlt
aaa
xor
popa
ss
fs
xchg
outsl
dec
notl
mov
fcmovne
mov
test
pop
mov
movsl
popa
xchg
scas
imul
lods
xchg
sub
jae
xlat
cld
lods
xchg
loope
lods
push
adcb
jge
or
push
lcall
loop
into
mov
roll
add
dec
add
mov
or
shrl
inc
push
xor
adc
add
inc
ljmp
test
ljmp
and
aaa
shlb
mov
cld
rcll
fimull
pop
push
jmp
cli
in
push
push
cltd
repnz
rcrb
repz
xchg
int
jl
lods
enter
and
add
adc
mov
gs
pop
cwtl
mov
das
loope
mov
icebp
lret
adc
pop
add
adc
pop
stos
cmp
in
xchg
push
popf
jl
into
movsb
int
jmp
push
push
fwait
es
pop
negl
cmp
decb
pop
xor
out
sub
imulb
lcall
xor
fbld
xchg
rcrl
jecxz
enter
push
or
mov
mov
xchg
jg
adc
sub
adc
lds
or
cmp
daa
fs
aas
push
mov
or
ret
pop
mov
xchg
jns
xor
imul
daa
cs
das
arpl
adc
loope
popf
push
fs
and
lea
aas
jge
pop
add
movsb
shlb
jl
lods
lods
rol
jmp
sub
sbb
pop
inc
dec
jle
mov
push
cltd
xor
sub
inc
fnstcw
add
repz
sarb
add
mov
bound
xchg
int
stos
jge
lods
repz
push
pusha
mov
pop
push
lcall
cmp
push
sbbb
or
jmp
stc
cmp
xor
push
jmp
cmpsl
dec
jl
arpl
leave
jno
test
int3
stc
loopne
imul
mov
add
inc
hlt
pusha
mov
das
xchg
and
cli
jno
ja
pop
bound
ljmp
pop
sbb
cli
arpl
pop
jae
popf
imul
sub
lock
adc
aas
in
insb
jle
jmp
or
mov
xchg
add
das
loope
cmp
mov
xchg
inc
ficoms
and
outsb
loope
jb
xor
arpl
fidivrl
in
sub
mov
jnp
arpl
std
in
enter
mov
into
dec
ret
and
push
mov
pop
aad
adc
push
js,pt
mov
inc
mov
pop
jmp
lods
adc
aam
int
dec
mov
cmp
sti
enter
jg
mov
test
or
repnz
xlat
jmp
jnp
push
mov
mov
add
or
push
insb
enter
cs
pop
add
mov
dec
fst
jmp
nop
shrl
mov
pop
lods
add
mov
cli
pop
cmc
mov
inc
cwtl
ja
xchg
into
dec
pop
lock
iret
mov
mov
cmp
jae
gs
pop
and
es
ficoml
scas
adc
pop
jo
xchg
imul
mov
mov
test
dec
lret
popa
aas
out
in
out
mov
xchg
shr
hlt
jno
test
pusha
into
popl
test
addr16
mov
or
ja
xor
pop
jge
xor
test
xor
lret
stc
int
jmp
dec
mov
ds
out
movsl
stos
je
in
out
es
mov
movsl
jle
leave
arpl
test
jo
sbb
pop
mov
pop
sbb
ficoms
xlat
pop
cltd
jle
pop
mov
pop
and
arpl
mov
test
cli
push
xchg
xchg
push
xlat
pop
sub
mov
loopne
push
ss
or
jg
flds
push
test
into
daa
aaa
fdivp
rcrb
cmp
nop
repz
and
adc
addr16
or
repnz
aas
or
push
sahf
cmp
rorb
ja
adc
inc
or
and
std
iret
stos
and
mov
mov
mov
mov
cmp
and
repz
fwait
cli
xor
mov
push
xchg
outsb
loope
fsubl
fimuls
dec
sub
fdivr
ss
jle
in
or
lea
adc
jb
xchg
dec
mov
inc
cmpsb
outsb
xor
dec
aam
push
call
aam
into
xchg
adc
add
xchg
scas
das
outsl
repz
mov
sbb
out
outsb
pusha
popf
jb
dec
or
jle
sahf
pop
fdivp
enter
push
add
lods
push
xor
clc
jo
add
jnp
or
inc
lock
cmp
aam
sti
and
push
data16
ret
jle
rcl
push
div
add
pop
rorb
adc
push
iret
rorb
sub
sub
add
inc
cmp
sub
jns
mov
mov
fwait
inc
and
int3
lret
add
add
jno
sti
insl
jmp
rcl
sub
jle
inc
add
pop
xlat
mov
sbb
add
imul
ljmp
push
xchg
xchg
pop
jns
lahf
mov
pop
test
inc
and
xchg
dec
push
popf
add
sub
mov
sbb
dec
dec
push
fnsave
fmuls
fwait
dec
test
pushf
inc
jle
cmp
loopne
ljmp
pop
mov
cmp
add
push
xor
addb
sbb
cmp
jmp
pop
sar
jge
ja
repnz
inc
lahf
mov
fmul
out
xchg
test
shll
xchg
and
sti
enter
pop
ja
dec
pusha
and
fwait
int
ss
sarb
mov
aam
leave
fst
pop
sti
pop
mov
and
sub
inc
mov
repnz
xchg
mov
sub
or
clc
jmp
or
adc
inc
sbb
sbb
sub
mov
mov
in
dec
insl
add
inc
std
jb
stos
mov
jge
iret
fmuls
and
dec
dec
push
int3
xchg
fmull
xor
jnp
out
leave
out
fwait
jo
xchg
lock
push
mov
test
ds
dec
xchg
in
test
pushf
iret
sub
lret
pop
movl
sub
repnz
insl
rclb
xchg
loopne
xchg
sub
mov
xchg
sbb
cmp
imul
stos
ficoml
mov
xchg
js
mov
call
cmc
mov
cwtl
xchg
cmp
test
ja
pusha
push
pushf
push
seto
jb
cs
mov
fldl2t
push
rcr
inc
pop
mov
push
mov
jecxz
xor
loopne
jp
xor
inc
push
add
dec
aas
add
repnz
pop
jns
adc
xchg
dec
lods
decl
sub
std
outsb
scas
in
iret
push
repz
fwait
jle
sub
xor
nop
jb
sbb
cmp
mov
mov
jl
mov
cmpsl
push
out
mov
xor
xchg
mov
pop
xlat
lcall
mov
ja
mov
mov
push
mov
sub
fmul
mov
inc
ljmp
sub
jns
cmc
cltd
cmp
sub
ds
std
sahf
dec
cmp
loopne
outsb
mov
popf
daa
mov
shll
or
push
dec
jg
leave
ret
shrl
pop
adc
sub
scas
cmpsl
addr16
aad
sub
ret
negl
cs
sbb
jge
movsl
xchg
mov
hlt
fbld
xor
sbbl
mov
push
movsl
cli
ret
xchg
jbe,pt
inc
nop
movsb
insb
ljmp
sub
and
mull
cmpsb
icebp
jae
jns
mov
jp,pn
sbb
sbb
and
ret
mov
cwtl
xor
sbb
mov
mov
push
inc
iret
pop
cmpb
in
pop
in
xor
lock
push
int
jo
add
pop
pop
add
mov
inc
push
cwtl
mov
xchg
rcr
sbb
data16
shlb
jecxz
adcl
popa
imul
jl
push
push
cmp
xor
pusha
dec
lret
mov
and
sbb
mov
mov
imul
std
adc
dec
push
cmp
sub
and
cmp
mov
jb
jle
lock
inc
leave
inc
add
cmp
das
fldenv
xor
pop
stc
adc
pop
cmp
call
js
add
cmc
sub
cmp
subb
hlt
adc
pushf
call
call
lret
cli
add
jne
sbbl
mov
inc
das
cs
fwait
arpl
add
mov
add
popa
data16
es
jg
adc
mov
mov
loopne
mov
xchg
pop
inc
ret
sbb
xchg
mov
xor
xchg
test
pusha
add
rorl
dec
dec
je
adc
mov
cwtl
repz
jbe
das
aam
pop
and
dec
and
mov
push
pusha
inc
andb
fwait
adc
inc
or
pop
in
dec
rcrl
xlat
fisubrs
add
addl
cmpsb
scas
sbb
xchg
loopne
sub
xor
mov
sub
and
xchg
data16
adc
xchg
pop
push
jge
jl
icebp
mov
scas
test
in
xchg
sbb
jnp
dec
mov
mov
sub
adc
mov
add
cmp
movq
ficomps
std
mov
in
das
call
in
loopne
gs
or
push
outsb
mov
inc
ret
fbstp
xchg
jl
xchg
out
fidivs
push
dec
imul
mov
xor
enter
stc
cmp
faddl
loop
outsl
adc
add
jo
out
pop
fdivr
insl
arpl
mov
lret
into
dec
or
mov
fsts
mov
and
and
adc
dec
pop
mov
repnz
adc
jns
cmc
lcall
std
cmp
xor
fildl
aas
pop
pop
fistl
rorb
mov
xor
mov
sbb
xchg
scas
cmpsb
xor
leave
and
add
jg
cmp
fbld
inc
int3
in
jo
dec
pop
inc
jecxz
lcall
bswap
add
test
fisttpll
pop
push
dec
loop
popa
pop
movsl
ljmp
inc
pop
lock
enter
mov
fcmovu
or
out
jbe
mov
and
push
dec
sbb
cmc
dec
fdecstp
pop
jbe
daa
add
mov
roll
std
sbbl
add
jnp
mov
jl
xchg
push
icebp
cs
mov
lahf
lods
dec
cmp
pop
sbb
push
sub
inc
mov
mov
jno
mov
popf
sti
adc
or
push
pop
test
sbb
scas
and
inc
les
dec
or
xor
add
mov
mov
test
pop
lods
mov
das
stc
cmp
pusha
mov
bound
mov
mov
inc
pop
mov
push
scas
xchg
add
xor
cwtl
sarb
sti
sub
pop
shrb
std
xor
xor
sub
jne
xor
test
mov
js
push
push
int
pop
mov
dec
dec
add
push
movsb
xchg
sub
stos
adc
test
sbb
lahf
xchg
inc
mov
jo
mov
stc
sub
sti
push
mov
or
aad
jae
loopne
jmp
xchg
xlat
mov
mov
mov
xchg
jp
dec
aas
push
stos
sbb
jle
dec
in
pop
mov
and
jg
enter
data16
repz
xchg
dec
popf
and
je
mov
fwait
mulb
pushf
dec
inc
dec
rcll
inc
mov
test
push
lods
add
push
xchg
shl
sti
sti
pop
outsl
stos
hlt
add
xchg
and
dec
jmp
lret
mov
ret
push
cmp
xchg
cli
and
cld
or
rorb
into
cmpsl
popl
insb
dec
jl
jbe
andl
ljmp
add
mov
push
or
jmp
push
adc
pop
xorb
push
test
in
jns
pop
leave
loope
xor
aad
cmp
sti
pop
lcall
icebp
int
test
ud2
frstor
outsl
mov
or
cmc
jle
icebp
push
xlat
mov
pop
adc
daa
lock
popa
mov
scas
aad
pop
in
dec
sbb
mov
sbb
arpl
sub
mov
in
fcmovnu
sbb
jle
insl
enter
mov
push
jne
shrl
mov
or
xchg
jo
scas
test
push
pop
lock
jbe
xchg
add
js
push
jecxz
fsubrs
pop
pop
xchg
fadds
gs
outsb
inc
mov
popf
popa
test
adc
mov
out
pop
jne
movsl
and
gs
or
popf
inc
adc
and
cld
xor
mov
push
daa
xor
enter
sub
mov
push
xor
add
mov
pop
aas
sub
icebp
vpsubd
adc
push
loop
xchg
cmpsb
jo
sbb
fbstp
sub
mov
sub
mov
push
repnz
add
cli
xor
jp
loop
outsb
stos
insl
insb
jecxz
or
mov
pop
cltd
adc
dec
mov
fdivl
cmpsb
fdivl
mov
jl
fldcw
sarl
adc
sub
sahf
gs
push
and
pop
xchg
sbb
movsl
sub
dec
push
add
loopne
pop
jbe
les
jmp
inc
sar
sbb
mov
sti
les
sbb
inc
test
test
mov
pop
and
in
and
dec
imul
js
addr16
mov
mov
gs
test
mov
aam
jb
pushl
sti
xchg
pop
and
sbb
arpl
fisubrs
repz
iret
pusha
out
das
inc
xor
stc
outsb
pop
jns
jmp
xor
pop
dec
out
adcb
lcall
sub
push
sahf
lds
sbb
push
jo
jns
inc
test
bound
mov
sbb
aad
in
add
lret
icebp
in
pushf
sub
adc
test
pop
into
cmp
fistpl
adc
stos
push
lock
gs
scas
out
in
or
inc
adc
ror
pop
adc
push
push
repnz
mov
rorl
mov
push
pop
sbb
ret
or
test
cmp
pop
dec
inc
xlat
lret
iret
inc
lret
xchg
jmp
jecxz
ljmp
out
leave
jb
inc
fptan
push
xchg
jp
outsb
fstpl
mov
push
stos
fdivrp
xor
sub
mov
jae
xor
mov
and
cmp
dec
sti
pusha
int3
aad
mov
outsl
cmp
rcll
dec
sbb
xor
dec
cmp
sbb
fcomps
ds
bound
gs
inc
sub
loope
popf
sub
in
or
repnz
scas
xor
insl
inc
add
sub
idivb
adc
out
cli
dec
stos
outsb
add
xor
shrl
dec
sub
pop
xor
mov
cmp
xor
pop
push
pop
cmp
or
jne
pusha
sti
and
pop
sub
dec
repz
xchg
repnz
jno
xor
cmc
mov
jbe
repnz
xchg
mov
jbe
jge
lods
pop
mov
mov
out
push
lea
mov
rclb
mov
adc
and
or
clc
pusha
xchg
xor
push
mov
cmp
loope
fs
lock
push
iret
test
adc
stos
daa
xchg
sbb
jno
push
stos
mov
pop
mov
popa
xor
aam
loopne
xchg
cltd
std
mov
decl
lret
pop
inc
cli
cmc
and
push
addl
jle
shlb
dec
loop
outsb
fst
xor
push
xor
sub
xchg
gs
add
shrb
push
insb
fldt
pop
arpl
int
mov
add
inc
popf
gs
add
pusha
pop
rcrb
popf
repz
mov
push
mov
loop
dec
es
iret
adc
cltd
pop
test
mov
xchg
out
cmp
push
scas
pop
in
sub
sbb
mov
mov
mov
jo
cs
adc
dec
and
insb
out
icebp
lcall
jae
pop
shll
cli
aam
and
cmp
sbb
xchg
jne
loope
outsb
xchg
pop
add
sub
mov
adc
lock
pop
push
or
loopne
adc
fistpll
leave
sbb
shl
push
inc
pop
jo
xor
sbb
lahf
xchg
jb
jle
mov
push
xchg
pop
repnz
fnstsw
cmpsl
out
jns
fstl
adc
jae
movsb
insl
in
inc
jns
xor
adc
jbe
add
sub
flds
bound
cwtl
inc
pusha
std
push
xor
aas
inc
popf
in
enter
add
repz
mov
adcl
push
out
addr16
cwtl
mov
mov
adc
enter
je
mov
dec
mov
fdivrs
add
mov
js
sahf
cmp
cltd
dec
lock
lret
shlb
sti
gs
pop
mov
dec
mov
dec
jb
xchg
cwtl
pop
mov
inc
pop
mov
inc
xchg
aas
dec
push
es
mulb
icebp
lcall
fiadds
jmp
loope
xor
mov
add
imul
sbb
and
cmp
repnz
jne
add
lds
loop
pusha
push
mov
addl
aad
mov
faddl
movsl
out
adcl
shlb
adc
pop
call
arpl
xchg
xor
fildl
sub
rcrb
ds
mov
stos
or
add
cltd
cmpl
mov
fimuls
test
and
jno
int
es
and
mov
sti
cld
or
mov
inc
jmp
ja
push
addl
adc
and
mov
cmpsb
adc
std
sub
scas
enter
call
int
jg
push
pop
jnp
leave
adc
mov
cltd
aad
ja
sbb
mov
ljmp
mov
test
fistps
fucom
mov
xchg
and
ret
or
ja
in
pusha
xchg
idivl
negb
aad
or
pop
jecxz
in
or
jl
lds
sub
fidivl
pop
rorl
cmovb
pop
mov
scas
scas
jp
int
jecxz
in
push
int
pop
mov
les
lcall
iret
rcr
inc
dec
outsb
not
sbb
enter
adc
and
xchg
dec
inc
sahf
fsubrl
es
mov
mov
inc
bswap
mov
pop
int
lahf
adc
cmp
sbb
cwtl
imul
jle
sahf
pop
jecxz
inc
leave
mov
loopne
fwait
loop
and
sbb
push
call
jl
adc
aas
rolb
test
adc
jmp
and
xchg
xchg
jge
jno
in
dec
mov
sub
cltd
and
mov
dec
es
push
cmp
sarb
dec
mov
push
mov
fisubrl
cmp
inc
push
clc
adcl
adc
and
cmp
mov
loope
sub
jp
enter
aam
pop
test
das
dec
test
sub
mov
mov
jmp
cld
pop
addb
rorb
sbb
xor
push
fucom
mov
push
cli
push
dec
adc
cltd
out
or
das
data16
aad
aas
icebp
mov
lds
and
cld
push
outsl
mov
cltd
adc
jb
lcall
aas
stos
jo
inc
dec
cmp
inc
jnp
aas
std
repnz
out
ficoml
bound
dec
xlat
lods
scas
cmp
or
popf
cvtps2pi
movsl
add
add
popf
aaa
push
cmpsl
lock
rol
aaa
lret
or
mov
test
jmp
adc
loopne
and
scas
ja
xchg
cmp
nop
lahf
mov
mov
pop
sti
xor
mov
and
or
cld
mov
add
loope
insl
jl
lret
mov
jno
imul
ds
jbe
imul
jle
mov
lods
mov
jge
lods
jnp
mov
mov
movsl
xor
out
push
adc
subl
pop
sbb
test
mov
xchg
and
cmpsl
lret
fsubs
clc
dec
fwait
aaa
clc
sub
and
mov
pushf
lret
stos
jne
cmpsb
ret
cmp
fisubrs
sub
push
fsubl
nop
mov
les
and
sbb
out
dec
push
popf
fidivrl
mov
dec
inc
push
stos
jecxz
mov
jae
mov
mov
outsl
punpckhwd
pop
xchg
xlat
jns
lods
sbb
ret
jno
dec
push
xor
pop
push
push
xor
dec
sub
jmp
outsl
imul
movsb
ljmp
sbb
lret
and
cmp
rclb
xlat
pop
fwait
stos
push
rol
mov
cli
int3
stos
inc
push
adc
xchg
movsb
lret
mov
icebp
sub
shrb
int3
insl
xor
pop
jg
stc
dec
std
popf
jae
das
mov
and
jmp
leave
mov
sub
insb
jecxz
pop
xor
popf
mov
jle
fisubl
test
test
in
js
outsl
arpl
cmp
jo
mov
lcall
lods
sub
les
enter
repz
xchg
cmp
jns
fbld
repnz
orb
jle
mov
jmp
xchg
push
mov
scas
or
psadbw
hlt
shrl
pop
addr16
add
mov
add
imulb
pop
decl
repnz
xchg
add
mov
jno
pop
cwtl
or
aaa
mov
jecxz
adc
inc
push
mov
les
push
ret
out
fcomps
or
ja
lret
pop
and
or
outsl
jo
add
icebp
sbb
popa
jbe
jae
movsbl
mov
mov
xchg
push
add
repnz
sub
pop
or
pop
jo
jbe
mov
push
jns
push
test
cmp
mov
cmp
xor
sbb
xlat
or
mov
xor
dec
sbb
xchg
loopne
mov
out
mov
mov
jne
loop
mov
ror
les
mov
fisttps
dec
push
sbb
mov
jbe
cmc
idivb
ret
xchg
xchg
ret
repnz
pop
and
xchg
sahf
stos
enter
add
lahf
pop
mov
jbe
mov
push
jle
mov
mov
sbb
mov
lods
dec
lret
or
cmp
lods
mov
rorb
js
push
mov
jbe
xchg
in
sbb
pop
mov
dec
shll
int3
ds
push
or
dec
and
inc
movsb
mov
stos
cs
dec
je
aas
add
sbb
divb
and
push
mov
pop
pop
push
popa
ljmp
mov
lods
lcall
pop
inc
mov
sti
xchg
pop
clc
inc
lds
cli
push
adc
cmp
fsubrl
pop
jbe
lock
in
cmp
mov
xor
ret
pop
ficoml
sub
into
fs
lock
xor
add
iret
push
scas
or
push
jle
aaa
cmp
or
mov
insb
cmp
cmp
pop
jo
mov
mov
inc
imul
das
cld
mov
xor
fwait
test
add
ds
mov
lds
lcall
nop
rclb
ret
fwait
loop
mov
leave
aam
xlat
loope
rorl
ficoms
pop
cmp
fildll
jmp
mov
fcoms
mov
js
xchg
mov
fmull
ljmp
cmp
dec
cmpsl
and
fisttps
jno
dec
or
lret
or
aad
dec
xchg
shrb
cmpsl
or
lds
xchg
sbb
sbb
data16
xor
les
sti
cmp
lcall
pusha
sub
rcrl
sub
xchg
xchg
insb
movsl
xchg
adc
sbb
mov
test
inc
cmp
inc
cltd
pushl
dec
inc
xchg
add
ja
inc
add
ret
pop
mov
mov
sbb
scas
adc
cltd
dec
jne
insl
mov
lcall
push
add
jnp
mov
fidivrl
mov
jecxz
cmp
daa
jno
add
push
pusha
ja
inc
fcomp
pop
lock
in
xchg
xchg
mov
jae
loope
out
rolb
mov
xchg
or
cmp
ret
ss
push
mov
scas
rcll
insb
aaa
mov
cli
mov
xor
mov
pop
push
sbbl
test
aad
lret
inc
pop
out
jl
and
leave
scas
mull
xchg
inc
adc
popf
popf
mov
dec
and
sti
out
fiadds
inc
inc
int3
lahf
jo
lock
hlt
push
mov
nop
sbb
repnz
sub
shr
jae
outsb
divb
sbb
ljmp
bound
out
push
out
mov
les
add
dec
pop
jnp
mov
das
lahf
ss
push
gs
sub
divl
sti
jne
stc
add
push
pop
xchg
or
in
jl
jmp
je
daa
add
je
ret
jmp
mov
xor
cmp
dec
add
cmpsb
in
call
xchg
xchg
out
test
dec
or
fldcw
xchg
out
ret
mov
sub
adc
shll
clc
pop
push
fcoms
lcall
rcll
xlat
sub
orl
xor
out
push
jne
arpl
adc
mov
enter
sub
mov
push
mov
xchg
and
push
in
pusha
mov
gs
lods
mov
bnd
adc
jb
mov
xchg
mov
push
mov
push
cmpb
xchg
pop
and
popf
or
adcb
stos
jnp
adcl
dec
test
aad
fs
lods
js
ds
fsubs
aaa
movsl
inc
fildll
jl
fnstcw
addr16
js
dec
cs
cmp
mov
outsb
mov
xchg
push
dec
lea
cmp
iret
inc
je
into
xchg
js
std
mov
lahf
loop
aas
cmpsb
lcall
xor
ret
rcl
dec
inc
cwtl
pusha
out
cltd
into
sbb
test
lea
stos
dec
mov
fmuls
dec
sub
pop
mov
dec
lcall
fstpl
inc
lea
nop
mov
nop
in
push
xchg
shlb
es
inc
bound
aad
or
dec
pop
ds
sub
fcompl
popf
sarb
cmp
call
pop
arpl
sbb
insl
and
or
ljmp
cs
mov
inc
in
popa
jae
std
lret
mov
fidivl
fisttpll
in
push
lcall
inc
aas
cmp
lea
pop
pop
rcrb
pop
fdivrs
js
jns
mov
movsl
repz
xchg
xlat
and
xchg
mov
imul
scas
int3
je
fidivrs
popf
lret
movsl
fldt
adc
test
sbb
mov
arpl
cld
dec
lock
xor
jmp
mov
orb
or
push
lret
insb
movsl
push
es
scas
sub
les
push
fisubrs
xchg
arpl
dec
popf
jg
sti
jae
neg
sbb
mov
icebp
mov
mov
test
in
imul
in
push
and
xor
xor
mov
xor
fldt
ret
pop
mov
and
xchg
inc
into
out
adc
enter
in
push
mov
fldcw
stos
jns
aad
inc
outsl
clc
sar
flds
icebp
xor
lods
ds
mov
mov
repnz
mov
adc
and
cltd
and
or
rcrb
jns
repz
stc
cwtl
adc
movsb
imul
rorb
jle
pushl
in
dec
cltd
inc
add
jns
jp
jns
xor
int
leave
xchg
ja
mov
stos
fisubl
jae
push
mov
jb
sub
or
movsb
mov
cld
xor
lea
lcall
test
aad
ret
mov
jp
and
push
mov
push
fs
pop
and
pop
shll
inc
bound
data16
cld
mov
repz
hlt
pop
xor
cmp
loop
push
mov
sti
push
cmp
and
mov
fs
loop
popf
inc
rclb
sbb
mov
leave
nop
call
jl
addr16
mov
cmpsb
jne
inc
jb
lret
xor
or
shl
xchg
or
inc
xchg
int
fs
lods
and
mov
fsubrp
mov
adc
clc
dec
push
das
cwtl
addr16
jge
lret
ret
cmp
jle
cmp
mov
jge
mov
mov
jg
inc
mov
push
ficompl
adc
cmp
jmp
add
mov
xor
cmp
fcom
sbb
xor
and
push
sbb
xor
and
sbb
ds
in
adc
lds
daa
cmp
mov
mov
cwtl
mov
test
insb
fcoml
aas
push
dec
in
out
pop
mov
lret
shlb
push
cmp
into
dec
xchg
or
jmp
jne
stc
in
xor
es
pop
cltd
dec
jns
jne
pop
mov
push
add
imul
pop
adc
data16
jae
add
scas
sub
loope,pt
sar
repz
call
jg
inc
xor
loop
xchg
dec
push
mov
ret
push
pop
xchg
mov
in
xor
hlt
into
addr16
fwait
jnp
pop
pop
adc
mov
cmp
dec
and
scas
sub
lcall
or
adc
daa
or
mov
sub
mov
in
fs
stos
pushf
mov
into
mov
xchg
push
adc
cmp
int
mov
xchg
decb
enterw
push
inc
xor
mov
inc
imul
iret
push
jecxz
ror
lret
and
adc
or
rorl
jne
nop
insl
lret
dec
xchg
xchg
push
mov
push
or
jb
mov
dec
es
sahf
data16
lea
xchg
fstl
mov
sbb
xor
lahf
jnp
sbb
sar
push
mov
adc
outsb
loopne
cmp
pop
mov
jecxz,pn
bound
sub
pop
mov
dec
inc
inc
lcall
and
ja
shlb
inc
xchg
fs
shrb
sbb
mov
sbb
mov
pop
xchg
sbb
sub
fbstp
enter
pop
pusha
rclb
push
out
out
insb
lds
lahf
mov
xchg
mov
mov
mov
test
bound
mov
dec
repnz
add
cld
cmp
mov
pop
mov
mov
jmp
pusha
xor
pop
lods
mov
dec
mov
sub
add
push
cmp
rcrb
adc
push
lahf
test
sub
inc
decb
dec
mov
fsub
xor
cmpsl
test
sti
pop
adc
mov
xor
mov
aam
ret
or
jno
and
icebp
shrb
test
in
and
cwtl
les
mov
cltd
fsubl
lods
aad
test
nop
mov
pop
or
pop
into
mov
inc
stc
dec
fwait
xchg
jae
mov
in
inc
jl
imul
lea
pop
or
insl
sub
je
inc
lock
loop
jo
imul
test
stc
mov
aaa
rolb
and
add
in
ljmp
aas
cld
movsb
mov
loope
negl
fsubrs
cmp
push
cmp
mov
jp
or
popf
sub
sub
and
cwtl
rclb
fadds
lods
pop
imul
pop
cld
cmp
dec
cmp
inc
and
in
sbb
jecxz
and
push
xchg
testl
sub
ss
imul
sub
sbb
mov
pop
in
scas
push
outsl
add
mov
int3
sub
add
xor
xchg
sbb
out
cmpsl
xor
dec
mov
cmpsb
pop
jg
into
in
jl
icebp
icebp
paddsw
movsb
xchg
mov
cmc
rcrl
ss
test
jnp
mov
jo
inc
movswl
cmp
sub
call
std
ja
lcall
enter
fisttpl
pusha
outsl
xchg
mov
dec
push
test
sbb
cmp
push
xchg
cld
lret
cltd
je
insl
je
xorl
adc
ja
gs
and
jo
xor
insl
les
inc
push
dec
sub
jo
test
jge
and
je
outsl
dec
subb
lods
push
or
push
xchg
cmp
mov
ja
inc
xor
scas
pop
loopne
cmp
dec
sub
sub
push
or
ss
shlb
mull
sub
call
daa
ss
test
cmp
xor
fdivrp
push
ljmp
cmp
and
add
inc
sti
loope
pop
mov
inc
jns
fwait
jp
adc
cltd
mov
dec
inc
outsb
movsb
rcrl
enter
inc
push
cmp
gs
mov
imul
mov
sti
lret
aaa
sbb
add
cmp
ss
fldz
pusha
adc
cmp
cmp
xor
lahf
test
fs
jmp
xor
cld
arpl
or
sub
jb
cmpsb
mov
adc
pusha
adc
rorb
xchg
adc
mov
gs
dec
es
mov
jg
dec
mov
out
inc
push
jge
stos
daa
mov
popa
push
cwtl
jmp
enter
les
or
test
fisttpll
jmp
cmp
push
add
das
jmp
mov
push
jge
and
mov
mov
cmp
and
sarl
dec
imul
sub
xchg
cli
adc
hlt
cltd
sbb
outsb
xor
push
out
fsub
cs
xor
dec
xor
push
in
lret
cs
xchg
push
shlb
orl
xchg
jo
cwtl
xorl
aam
mov
push
std
jo
sahf
pop
lods
xchg
out
sbb
push
fidivrl
scas
cli
into
mov
sbb
cmp
mov
sub
cmc
xchg
dec
in
mov
in
or
movsb
push
mov
add
cli
in
cmp
mov
rcll
iret
outsl
push
pop
stos
mov
jg
in
pop
lock
notl
xchg
dec
push
pop
in
pop
repz
jp
imul
js
pop
cmp
cmpsl
pop
xchg
inc
add
mov
pop
outsb
sub
mov
js
jbe
add
test
xchg
or
add
xor
adc
cmpsl
insl
pop
imul
cmp
jne
ds
and
rclb
jge
push
inc
cli
mov
mov
pusha
scas
mov
sarb
or
loopne
iret
test
or
es
loopne
push
testb
push
adc
and
ffree
loopne
jecxz
inc
jge
icebp
jnp
fsubl
dec
and
sbb
jmp
into
adc
or
dec
sahf
repz
pop
pop
testl
or
sbb
mov
sub
jno
adc
push
lcall
int
loop
jno
push
jge
adc
in
js
dec
cmp
jmp
popf
test
xor
mov
mov
add
or
lds
mov
insl
sti
or
pop
mov
jo
pop
jge
out
dec
mov
pop
xor
in
test
sbbb
sti
popa
adc
sub
andb
mov
sahf
jae
pushf
mov
mov
sub
lcall
das
stos
mov
and
js
mov
adc
in
daa
inc
sbb
and
xchg
push
mov
mov
pusha
cmp
inc
and
andl
es
mov
push
pop
adc
and
sbb
outsb
mov
and
dec
fs
out
pop
stos
mov
lock
orb
add
xchg
jne
sbb
pop
test
cmp
inc
insb
fwait
or
das
fdivrs
inc
xchg
push
mov
cmp
pushf
push
jo
sbb
fistps
pop
test
jecxz
pop
repnz
insl
outsb
adc
inc
stos
mov
cwtl
imul
ja
testl
into
insb
push
pop
push
out
or
insl
enter
adc
jo
push
add
pop
out
fldt
mov
shr
lods
cmp
jl
jo
adc
fs
pop
in
incl
pop
ljmp
nop
push
jecxz
xor
outsb
xor
jecxz
inc
jne
sub
sub
int3
and
or
out
sbb
push
iret
out
repnz
cmpsl
ficompl
aas
lds
cmp
arpl
sbb
jge
and
mov
aas
fs
gs
pusha
test
sbb
dec
inc
insb
dec
pushf
pop
andl
sahf
das
leave
les
mov
ja
gs
out
insl
add
mov
cwtl
adc
cli
inc
loope
lcall
xor
cmp
xor
and
pop
mov
call
mov
push
lcall
push
cmpsb
incb
adc
lsl
jno
rclb
ja
pushf
lock
adc
mov
data16
cld
push
push
jbe
mov
or
fcompp
xor
rcr
jbe
push
mov
lahf
add
cmc
xlat
mov
xlat
fisubl
or
adc
push
lea
xor
movsl
mov
inc
cmp
scas
adc
inc
dec
rcrb
clc
mov
xor
mov
mov
mov
dec
out
ja
sbb
sbbb
in
dec
mov
roll
cltd
shrl
lea
jno
sub
cs
add
je
cmpsl
repz
xchg
mov
sti
pavgb
faddl
push
sbb
imull
lret
std
sbb
or
mov
adc
shrb
mov
jge
jle
adc
movsl
or
add
cmpsl
pop
sub
iret
sbb
xor
data16
in
gs
jecxz
jno
enter
jmp
and
fcomip
and
nop
inc
pop
dec
sbb
cli
test
xor
push
xor
xchg
fcompl
xor
xor
gs
push
popa
jb
pop
jae
xor
mov
shlb
cs
push
mov
pop
jg
mov
adc
jbe
out
add
pop
jno
subl
aad
xchg
das
sbb
bound
cmpsl
xchg
pop
or
es
jne
sbb
mov
repz
xor
and
scas
and
pop
inc
xor
adcb
inc
mov
inc
in
subb
jnp
lret
mov
hlt
xor
loope
xor
xchg
pop
cmpsb
aam
push
sub
xor
adc
pop
sahf
add
popa
movsb
inc
inc
dec
cmc
cmp
push
or
mov
push
push
mov
fmull
fcoms
dec
lahf
mov
jne
sbb
sbb
ljmp
jmp
daa
jmp
add
lcall
push
push
pop
out
js
out
shlb
inc
jle
stos
mov
pop
movsl
iret
shll
mov
adc
adc
dec
je
filds
or
pusha
and
dec
push
int
aaa
int
lods
fildl
fcomps
es
cmc
aam
sub
lds
call
add
clc
pop
sub
movsb
push
das
mov
movsl
addb
and
icebp
jmp
dec
cmp
jne
cmpsb
movsl
add
ds
adc
and
or
mulb
add
mov
or
adc
lods
imul
mov
imul
js
sarb
xor
stc
aam
mov
mov
inc
into
jmp
mov
sub
push
imul
roll
outsb
xchg
dec
bound
push
sbb
out
cwtl
stos
inc
inc
idivl
lods
cmp
loopne
xor
lods
push
and
in
dec
sarl
and
mov
sub
pop
lcall
mov
ljmp
mov
push
mov
xchg
mov
mov
inc
sbb
jle
pusha
dec
fbld
cmp
mov
mov
add
sbb
jns
xor
test
cwtl
out
cltd
push
repz
push
jbe
dec
das
inc
xor
add
lcall
jne
xchg
xchg
sub
add
loop
aam
je
ss
mov
xchg
cwtd
mov
lahf
fimuls
mov
and
ss
ror
ja
pop
jmp
fisubl
jmp
nop
sbb
es
pop
xor
mov
mov
cmp
xlat
mov
xchg
jge
inc
cltd
mov
mov
or
stc
sbb
pop
popf
pop
jne
xor
push
and
adc
ja
mov
push
test
ja
daa
call
adc
or
rcr
inc
mov
sub
mov
mov
xchg
lret
cmpsl
addr16
loop
lahf
xor
sub
adcb
sub
lods
lods
jb
mov
add
lea
outsb
adc
adc
pop
add
dec
push
ret
cmp
pop
inc
lret
pushw
fadd
xchg
adc
add
push
lods
rolb
addr16
xchg
inc
and
fnsave
and
mov
push
inc
dec
and
daa
push
dec
jl
bound
add
pop
inc
mov
pushf
test
fwait
test
sbb
adc
and
je
lds
ds
xchg
lock
push
jmp
aaa
cwtl
test
pop
int
mov
pop
pop
dec
xor
nop
or
testl
jmp
ds
outsl
ljmp
ja
inc
or
sbb
cli
test
mov
or
ljmp
mov
ja
ja
inc
adc
or
fistpll
pop
andb
ja
cwtl
int3
ret
je
or
lret
enter
fwait
xor
sub
mov
sub
addr16
jns
add
sub
aaa
leave
ds
push
dec
movsl
adc
out
inc
js
aaa
test
test
call
jp
lds
mov
insb
pop
mov
add
dec
ja
xchg
loop
pop
mov
add
lret
cmpsb
inc
cmc
lds
addb
cmp
stos
pop
dec
outsb
fdivrl
or
fwait
imul
xor
sub
mov
push
data16
test
fisubrl
jmp
jbe
jecxz
sbb
adc
inc
mov
fcomps
xor
add
dec
and
shrl
clc
sbb
sbb
jnp
imul
test
sahf
repnz
jnp
nop
push
popa
xor
in
inc
loopne
aaa
out
push
mov
repz
mov
enter
jbe
pop
lret
subb
mov
jae
das
fisubrl
lods
jbe
data16
mov
addl
inc
andl
xchg
js
adc
add
cli
xor
aam
sub
or
dec
sbb
in
lret
outsl
outsl
sbb
or
lcall
add
lods
nop
inc
das
mov
js
aaa
hlt
xor
lds
mov
push
mov
mov
jno
adc
sub
scas
insb
inc
call
pushf
inc
aaa
inc
movsl
mov
pop
dec
int3
or
add
out
sub
lahf
push
cmp
popa
shrl
leave
call
mov
es
pushf
je
andl
out
jb
test
sbb
test
ficoml
je
xor
cmc
in
imul
pusha
lea
gs
ret
ss
icebp
jbe
in
add
dec
bswap
lea
mov
dec
ret
cmp
pop
push
jb
pop
jmp
cmp
movsl
push
je
lea
sub
movsb
add
daa
push
xchg
fdivrl
jmp
mov
jmp
addr16
mov
data16
movsl
mov
mov
clc
fbstp
add
movsb
inc
ja
xor
mov
xor
repnz
fstl
or
pushf
aas
icebp
mov
adc
or
imul
insb
sbb
sbb
hlt
pop
mov
jnp
not
cmpsl
in
push
subl
jb
sub
pop
pop
and
ljmp
hlt
lock
imul
scas
hlt
cld
push
sub
in
push
push
cs
dec
popf
sbb
jle
imul
rcrb
push
in
push
shlb
push
loop
jne
mov
push
les
push
jmp
mov
cs
mov
outsb
js
stc
push
xchg
xor
add
roll
repz
and
mov
repnz
cltd
add
jns
aas
xlat
mov
mov
into
cmp
mov
fdivs
cmp
xchg
mov
push
fwait
jecxz
mov
lahf
fwait
subl
fsts
mov
jecxz
inc
jno
mov
push
aam
dec
lea
sub
ret
data16
bound
pop
insb
js
dec
mov
jle
cltd
add
cmp
sub
add
inc
lret
data16
popa
and
addb
subb
pusha
test
cmpb
add
dec
inc
pop
pushf
ljmp
stc
adc
jne
aad
push
popf
jge
jge
xchg
call
and
gs
mov
flds
sbb
jb
pop
jne
aam
aam
cmpsb
jo
jmp
mov
sti
movsb
popf
xor
jnp
sahf
mov
sub
mov
jno
stos
fists
movl
loope
loop
inc
cmc
lahf
xchg
push
push
jmp
cmp
cmpl
or
ret
or
push
js
jne
xchg
insb
cmpsb
loopne
push
test
lods
arpl
jle
push
cmp
jecxz
imul
std
sub
push
subb
mov
cmp
mov
jmp
xor
mov
fxch
imul
xor
xorl
std
fdivrs
dec
mov
leave
inc
push
imul
popl
aad
dec
sti
jbe
test
inc
inc
jp
out
add
bnd
insl
cmp
mov
ds
mov
push
pop
xor
mov
jp
pushf
mov
xchg
adcb
sub
lcall
test
jle
into
push
push
mov
adc
pop
adc
mov
cmpsl
rol
rorb
mov
movd
fistl
loop
mov
add
mov
out
mov
mov
stos
or
enter
lods
xchg
fdiv
popaw
and
adc
add
sbb
jecxz
iret
fisttps
mov
aaa
imul
and
adcb
rorb
push
int
mov
and
xor
aaa
std
daa
and
ret
jge,pt
or
sbb
dec
pop
sbb
cmp
pop
push
iret
mov
clc
add
push
scas
push
xchg
sbb
jb
lcall
insb
stos
adc
push
push
lods
leave
ja
or
fisubl
xor
dec
movsl
push
addl
and
push
sub
loop
sbb
je
dec
test
insb
fwait
mov
lcall
sub
std
aad
out
pop
push
dec
xor
fsubrp
push
xor
lcall
push
fnstcw
jne
int3
in
dec
and
ds
icebp
clc
cmp
push
or
jp
jns
pushl
cld
add
jg
leave
or
push
nop
mov
inc
mov
cmp
lods
test
push
pop
es
push
int
ret
mov
xchg
addr16
xor
mov
add
std
fadd
lods
std
enter
mov
push
cmc
jne
pop
pop
scas
out
repz
in
cmp
xor
pop
ret
outsb
cli
mov
lock
insl
stos
xor
movsb
cmp
enter
mov
sbb
inc
arpl
outsl
xchg
sub
insb
into
adc
movsl
repz
cmp
out
adc
stc
lcall
inc
push
sub
imul
jmp
sahf
scas
jbe
push
divl
sbb
mov
shr
pop
jno
das
out
xchg
movsb
in
pop
mov
insl
out
cmp
lock
push
pop
push
adc
mov
std
or
pop
fsts
ja
roll
imul
out
in
mov
mov
mov
in
push
push
inc
adc
mov
pop
hlt
pop
sahf
mov
lret
mov
out
xor
push
sub
jno
cmp
cmc
aaa
stos
dec
out
add
inc
cmpsl
adc
sbb
fwait
in
cmp
iret
xor
push
mov
out
pushf
xchg
mov
xor
pop
pop
push
lahf
mov
push
aad
mov
xor
pushl
lock
pop
bound
test
xor
push
movsb
cmpb
rorl
and
lret
imul
addb
test
push
rorl
mov
and
into
adc
and
jnp
lods
and
stos
sub
test
fdiv
mov
jb
sbb
mov
insl
dec
add
unpcklps
pusha
push
fwait
test
lcall
mov
mov
das
and
xor
mov
mov
mov
mov
fistps
subl
xor
popa
insb
pop
xor
push
jno
popf
iret
xor
sbb
inc
rcll
inc
sub
jns
fs
xchg
or
inc
adcb
lea
sub
mov
adc
sahf
fwait
out
jbe
loop
insl
mov
inc
pop
cmpsl
leave
outsb
cltd
stos
mov
inc
add
in
dec
xor
sbb
cwtl
test
ror
shll
mov
clc
mov
xor
ja
lret
stos
dec
add
dec
jno
pusha
sub
add
test
mov
cmp
mov
lea
mov
out
fidivrl
cwtl
adc
push
pop
mov
mov
movl
test
sarb
int3
adc
ret
loop
test
mov
mov
add
subb
call
inc
pop
stos
inc
mov
leave
ret
push
nop
cmp
push
daa
data16
mov
sub
push
out
rolb
jmp
and
jmp
pop
inc
add
pusha
mov
sahf
aad
es
or
jl
inc
in
std
push
mov
jmp
mov
or
shlb
inc
out
fucomip
inc
sbb
lcall
or
xorl
push
lcall
je
inc
jb
movsl
test
pop
push
sbb
adc
cmp
pop
in
call
js
sub
pop
dec
pop
lods
in
sbb
fadds
jbe
lret
js
push
push
ret
inc
cs
pop
lret
mov
cmpsl
mov
rolb
into
jns
jl
sbb
addl
call
pop
repz
xor
fimuls
jbe
ds
sti
inc
mov
fsubs
or
add
cmp
inc
sub
pop
shll
ficompl
xor
aaa
les
pop
push
iret
std
xchg
xchg
faddl
test
je
std
cmp
mov
insb
mov
and
dec
rcll
cli
cmc
ja
inc
push
adc
push
test
dec
aas
dec
sbbl
mov
lods
outsb
xchg
out
or
mov
jmp
imul
xor
xchg
lcall
mov
mov
cmp
insl
cmpsl
ficompl
movsb
scas
mov
std
in
cmpsb
aad
dec
jns
fimull
in
sub
aad
icebp
cmpsb
cmp
out
cmp
sbb
cmp
shll
add
aas
out
int
jnp
pop
mov
push
push
repnz
pop
mov
inc
in
xor
xchg
pop
adc
in
sub
mov
cwtl
mov
test
movsl
aam
jp
dec
pop
mov
push
dec
inc
into
push
imul
imul
sbb
and
jl
xor
jl
test
aam
mov
test
lea
pop
xlat
push
cwtl
fisttpl
mov
adc
ds
mov
mov
cmp
outsl
add
and
or
jg
jnp
push
and
dec
cmp
test
xchg
add
and
mov
adc
cld
stos
pop
fs
outsb
popa
dec
js
mov
xchg
mov
es
jne
loopne
shll
cmp
enter
and
test
jbe
sub
mov
mov
cmpsl
mov
sbbb
in
inc
into
popa
dec
rorb
xchg
mov
dec
sbb
xchg
popf
inc
inc
push
pusha
sbb
inc
cmp
lret
push
fcomps
sbb
fisttps
and
fs
insb
inc
inc
mov
jg
aam
push
js
and
inc
imul
dec
add
subb
pop
gs
xor
add
cwtl
pop
mov
test
jo
pop
out
push
out
xor
outsl
ret
cltd
outsl
xor
mov
mov
movsl
jle
cmpsb
dec
aam
dec
fisttpl
mov
mov
and
ret
pop
jmp
push
or
adc
inc
lock
cwtl
addr16
mov
pop
mov
cmp
adc
push
in
jbe
dec
mov
adc
pop
sbb
mov
aad
jae
lret
add
jno
orl
clc
es
call
mov
out
xchg
pop
xor
aam
aam
sbb
push
inc
dec
pop
scas
add
push
cmpsb
and
stos
dec
xor
mov
mov
pop
scas
cmp
out
inc
mov
dec
test
int
ret
jl
adc
mov
mov
mov
sub
adc
aam
xor
adc
lea
addb
xor
lock
cmc
push
lock
push
adcb
pop
std
lahf
or
cwtl
rorb
mov
inc
or
push
pop
mov
inc
rcll
ror
les
pop
clc
dec
xor
adc
push
sti
cmp
out
xchg
or
dec
add
push
dec
mov
nop
data16
and
jge
stc
in
add
push
jp
mov
mov
and
add
mov
dec
lret
xchg
movsb
addr16
jge
pop
mov
add
and
ret
ja
aad
push
scas
repz
addr16
xor
jmp
and
notl
xchg
or
pop
sub
ljmp
push
addr16
fisttpl
jl
stc
movsb
orl
repz
pop
jg
add
push
and
dec
mov
xchg
lret
rclb
adc
mov
sub
call
mov
stos
push
push
dec
xor
add
inc
jo
scas
hlt
push
add
fdivrl
outsb
mov
arpl
mov
rolb
inc
push
or
xorl
stos
daa
pop
test
push
gs
and
scas
lods
mov
addr16
mov
add
pop
mov
js
mov
fwait
sti
into
icebp
dec
lret
andb
mov
clc
or
mov
push
sub
jnp
aam
cmpsl
adc
xchg
adc
ss
pop
sub
jne
xor
in
lret
and
pop
dec
mov
ljmp
fwait
insb
fnstenv
cmc
jle
fldl
sub
lret
mov
mov
mov
sbb
ljmp
push
jne
rcll
inc
push
push
xor
repnz
inc
cmp
mov
lods
sub
sub
mov
jge
mov
push
cmp
jge
out
sahf
xlat
lret
scas
add
mov
or
sti
adc
out
ds
in
ret
nop
mov
add
jne
sti
cltd
incl
dec
shll
in
fucomip
sahf
mov
xchg
push
adc
outsl
clc
rol
sbb
pop
push
jg
dec
mov
adc
stos
sbb
aaa
xor
and
jge
loope
push
lret
bound
mov
movsl
jmp
dec
xor
push
dec
loope
xor
fisubl
subb
nop
jae
push
lret
mov
pop
faddl
int3
push
xchg
imul
aad
dec
aad
jg
cli
fsubl
xchg
sbb
push
hlt
xchg
mov
xor
inc
mov
push
leave
mov
push
xor
aam
je
mov
mov
rcl
mov
test
pop
sbb
mov
fwait
outsl
mov
mov
pop
divps
repz
cltd
dec
cmpsl
xor
jnp
or
test
insl
aaa
pop
outsb
xchg
lock
cmp
icebp
cli
ret
repz
sbb
xchg
or
jge
jo
lret
gs
sbb
cmp
negl
lahf
or
jge
cwtl
push
repnz
in
sub
call
jno
shll
mov
adc
daa
jbe
fimull
ja
cltd
jmp
ret
lods
das
or
fcomps
or
jo
push
leave
ja
mov
push
pop
mov
jge
mov
les
add
xchg
in
and
dec
arpl
mov
mov
push
inc
push
mov
lods
dec
out
jae
adc
loop
mov
cltd
ja
gs
scas
fstl
lcall
jno
mov
cmp
cmp
sbb
xor
inc
inc
stc
fsubr
sahf
daa
mov
mov
jae
xchg
add
cli
xor
jne
rorl
hlt
xchg
lea
push
jnp
push
jp
sub
fnsave
notl
dec
and
xor
sbb
push
stc
mov
jmp
negb
xchg
jl
fistpll
test
lea
jle
or
cmp
pop
xchg
cmpsb
test
cld
aaa
jmp
pop
mov
insl
scas
orl
stc
adcb
mov
loope
fdivrl
dec
sbb
cwtl
jne
dec
leave
and
jno
push
ss
add
shlb
add
je
mov
cmp
jnp
xor
je
add
jae
xorb
sub
dec
int
int3
add
mov
ret
jno,pn
popa
pop
xchg
inc
cmp
adc
and
mov
out
out
arpl
insl
aad
insb
mov
lcall
adc
arpl
es
outsl
sub
sti
xchg
dec
in
in
out
dec
push
push
inc
pop
sarl
jl
lcall
data16
negl
pop
inc
cmp
jns
negl
std
add
outsb
out
sub
pop
push
push
inc
cltd
inc
sar
mov
shll
add
jle
mov
shlb
fnstcw
jns
mov
dec
sbb
das
sub
push
in
xor
fwait
xchg
in
mov
sub
out
andb
and
lds
lds
rcr
mov
loope
test
lret
inc
pop
ds
and
lds
lods
jmp
adc
daa
cmp
out
movsl
sub
add
out
dec
push
jecxz
sarb
and
into
shrb
xor
daa
lcall
dec
sbb
sbb
xor
xchg
mov
wbinvd
xor
cmp
mov
gs
inc
sub
push
sbb
int
sahf
pop
dec
andb
sub
outsl
push
xchg
or
and
pop
popa
xor
stc
pop
pusha
xchg
scas
or
rcll
shl
scas
in
adc
fldcw
mov
std
js
xchg
sbb
or
mov
scas
incb
inc
jne
lcall
repz
fmulp
adc
add
jns
mov
mov
jle
lret
mov
add
imul
and
lahf
cmpsb
mov
in
imull
cwtl
add
jae
xchg
int
push
dec
ret
xchg
cld
cmp
xlat
xchg
loop
push
sub
ljmp
outsb
pop
loopne
ds
push
iret
mov
pop
in
add
add
mov
mov
enter
in
sbb
mov
mov
and
repnz
dec
mov
xchg
pop
sbb
mov
xlat
ljmp
cmpsb
xorb
xchg
subl
int
jo
sbb
pop
cmp
jp
in
ret
mov
shrb
inc
into
cwtl
sbb
sbb
push
lock
es
pop
xchg
rcrl
fidivl
rcrl
inc
das
push
pop
dec
cmp
scas
loop
mov
xor
arpl
inc
scas
push
mov
jmp
movhps
sbb
mov
or
mov
xchg
dec
ficoms
sub
out
nop
mov
or
xchg
cmpsb
jge
mov
cwtl
mov
mov
stc
mov
or
mov
divl
xor
pop
dec
push
fwait
not
pop
push
or
clc
add
fildl
scas
dec
xor
negb
xor
cld
repnz
jae
push
push
pop
out
push
inc
fisubrs
ljmp
adc
xchg
cmp
test
imul
nop
and
cwtl
test
xor
jp
xchg
pop
ja
cmp
add
in
adc
lret
gs
mov
popf
movsb
outsb
ret
pop
xlat
jl
int
jnp
hlt
jl
jo
lret
lret
sub
jg
orb
sbb
add
inc
js
cmpsb
mov
notl
xchg
inc
xchg
add
in
in
in
add
lds
popa
push
push
test
cmp
inc
sbb
jg
enter
lcall
mov
enter
sar
lods
push
fsubrp
das
jno
stos
pushf
inc
sbbl
jmp
flds
jae
adc
jbe
movsb
jnp
pop
hlt
xchg
mov
test
xchg
sub
imull
gs
jnp
invd
rcrb
test
or
hlt
mov
cmpl
sti
loopne
jmp
mov
sti
in
fs
pop
dec
pop
add
repz
sub
inc
movsb
push
pop
push
les
sbb
inc
mov
adc
in
mov
fs
jbe,pt
fnsave
movsl
or
xor
mov
push
inc
sub
loopne
mov
sbb
lea
push
xor
pop
jge
sub
adc
aad
mov
xchg
aaa
and
or
add
imul
xchg
pop
jl
sbb
push
test
js
loop
in
out
sub
sub
xor
in
sub
xor
ja
scas
imul
iret
jno
jae
jecxz
inc
rcl
sub
loope
inc
mov
pushf
xchg
stc
mov
fwait
cs
test
push
inc
or
es
xchg
mov
mov
pop
xor
aad
imul
adc
in
das
in
sub
ja
push
les
adc
repz
ficomps
and
aas
push
inc
push
adc
call
push
mov
adc
lret
test
jecxz
or
enter
inc
fisubs
add
jbe
loope
sti
and
inc
stos
ret
repz
fwait
loopne
adc
shll
jb
mov
add
cmp
mov
shll
dec
sbb
sbb
pop
fcmovb
cwtl
sub
lods
shrl
int
jne
aad
addb
sti
ljmp
daa
or
sub
enter
outsl
cmpsl
movsl
cmp
pushf
sbb
mov
xchg
cs
pushf
aas
cld
or
fisubs
and
stos
xchg
fcoms
iret
push
add
cwtl
std
add
xchg
gs
hlt
lcall
stos
lock
xor
push
loopne
mov
inc
push
push
in
mov
sarl
adc
mov
cmp
inc
fistpll
loopne
sub
hlt
mov
movsl
aaa
popf
mov
fmulp
adc
adc
dec
enter
or
in
sbb
adc
add
rol
daa
and
stos
jnp
xchg
in
lahf
mov
bnd
xor
stos
into
shrl
or
push
nop
outsb
cmp
js
xor
jp
cld
xorb
scas
fs
mov
add
sub
lock
sub
or
outsl
push
movsl
and
lret
fstl
xlat
xor
adc
repnz
sbb
and
clc
es
mov
int
cmpsl
fadd
aaa
push
fstl
lret
pushf
or
sbb
mov
test
xchg
cmpsl
aas
je
pop
pop
or
or
cmp
leave
adc
das
xor
cmpsl
push
and
dec
leave
loopne
fists
inc
testl
faddl
adc
pop
pop
add
sub
test
mov
clc
add
cli
lret
cmp
test
push
xor
jge
mov
lret
adc
imul
scas
test
dec
or
push
jle
bound
aaa
adc
roll
jmp
das
out
int3
in
filds
orl
or
sub
out
xchg
and
add
dec
mov
mov
pop
sbb
loopne
dec
push
inc
in
cmp
mov
int
cmp
ret
adc
sbb
mov
lcall
pusha
aad
dec
das
pop
or
dec
lahf
in
fists
jne
das
dec
jae
fidivs
pushf
aaa
testb
pop
add
negl
mov
adc
sub
xor
imul
inc
jae
sub
cli
dec
and
sub
mov
fistpl
add
mov
xor
xchg
push
or
pop
xchg
sbb
or
mov
insl
lea
jmp
stos
mov
adc
mov
adc
cmp
push
mov
inc
xchg
lcall
push
mov
arpl
mov
mov
das
repnz
mov
ja
test
and
mov
jle
xor
cmp
fcomps
daa
mov
int3
call
jo
pop
inc
bound
push
xor
mov
insb
push
jmp
dec
addr16
pop
sar
out
rolb
adc
mov
adc
sbb
pushf
sbbl
out
fnstsw
mov
lock
push
mov
mov
or
push
cmpsl
add
mov
nop
ds
jl
jae
mov
popa
scas
dec
test
sub
dec
adc
into
mov
and
pop
test
push
ret
enter
push
out
pop
add
out
stos
andl
fstl
xchg
outsb
xchg
jp
cmp
push
ret
mov
sar
testb
icebp
fisttpll
sti
arpl
lock
outsl
cwtl
movsl
ss
in
mov
push
test
adc
loopne
popa
push
or
xchg
int
pop
sub
and
adc
xchg
sbb
scas
fs
inc
cmc
inc
xchg
or
xor
push
cld
xlat
loopne,pt
pop
or
and
inc
mov
sbb
pop
sub
jno
nop
and
jb
pop
dec
in
mov
dec
cld
xchg
xchg
in
mov
popf
dec
imul
in
lret
jb
lret
pop
imul
sub
fdivrp
and
cmpsl
inc
xor
jle
push
lds
rolb
or
jb
popa
mov
insb
mov
test
mov
sub
movsb
adc
sarb
xchg
outsb
dec
cwtl
enter
aas
mov
call
scas
dec
cld
xor
fdivrl
cmp
jno
lods
cmp
dec
out
bound
jo
iret
cmp
stos
lods
mov
call
push
xor
ss
mov
inc
fcmovnbe
or
leave
xor
adc
ss
loop
jecxz
push
jl
rcll
adc
fsubl
xor
call
out
add
adc
cld
push
fsts
imul
mov
movsl
js
mov
adc
cs
adc
sarl
cmp
mov
fcmovbe
adc
adc
cwtl
int3
jno
xchg
cmp
rcr
push
adc
inc
mov
out
rcr
mov
jno
sub
in
and
mov
inc
sbb
sbb
lahf
mov
add
ja
sub
add
push
dec
mov
ficoms
cmp
xchg
sbb
push
mov
inc
cmp
out
ja
icebp
testl
fnstcw
movsb
lods
pushf
lret
adcl
enter
fs
cmp
icebp
jns
sub
in
lods
pop
add
cmc
mov
push
fmull
int
mov
sbb
sub
fs
jge
int3
out
sbb
test
mov
push
pusha
push
lcall
fdivrl
push
push
cmp
push
daa
orb
push
movsl
push
inc
lret
add
sub
xor
lock
xlat
movsb
sbb
out
pusha
lcall
das
gs
fbld
cmpsb
sub
xor
jnp
cmp
pop
imul
in
mov
push
cmp
stos
out
test
push
nop
lret
in
add
dec
cwtl
pop
push
ja
mov
mov
inc
mov
fildll
bound
lret
mov
mov
jg
xorb
icebp
mov
push
idivb
movsl
aad
pop
jmp
xor
ljmp
stos
adc
lods
lock
ret
lret
and
xor
inc
inc
jae
jae
and
adc
push
xor
xor
inc
les
ja
adc
into
xor
sbb
cmp
push
and
jb
jno
inc
cmc
push
movsb
inc
or
pop
jb
lcall
pop
jae
out
pop
fisttpl
xor
dec
rclb
rorl
rclb
inc
jno
inc
leave
sbb
mov
adc
jo
cltd
in
addl
lds
mov
mul
cmp
cmp
xchg
pop
pushl
mov
stos
enter
bnd
jle
inc
push
push
jge
stc
or
and
aaa
mov
dec
mov
pushf
dec
pop
and
lcall
dec
jecxz
int3
push
aad
out
or
ja
clc
dec
cmp
cld
je
push
ss
scas
pop
andl
mov
or
mov
fwait
pushf
loop
pop
cmpsl
imul
and
insb
shrb
mov
push
es
gs
adc
push
hlt
mov
in
bound
inc
sahf
and
or
test
fmuls
mov
xlat
int3
icebp
sub
pop
out
aad
hlt
push
call
lods
inc
orb
add
sub
ret
push
sti
loopne
loope
jl,pn
call
push
in
inc
fnstsw
push
dec
jo
js
mov
adc
lret
xchg
sbb
xor
adc
nop
addr16
inc
push
dec
out
xchg
iret
inc
mov
scas
mov
bnd
test
xor
aam
repnz
ss
js
mov
je
jae
mov
push
lock
xchg
cmp
faddl
pop
xchg
jp
xor
ja
jne
fwait
xor
dec
push
pop
mov
mov
rcr
pop
mov
out
add
nop
aam
call
sbb
xchg
out
inc
sub
negb
push
sbb
out
jmp
cmc
inc
adc
lret
sbb
icebp
jl
in
in
lods
xlat
std
sub
scas
pop
xor
out
dec
fwait
jo
push
ja
imul
mov
loope
pop
arpl
int
in
inc
outsb
int
mov
cwtl
jae
inc
subl
dec
daa
loop
ljmp
rcr
cmp
jecxz
scas
mov
in
jmp
push
ljmp
inc
and
jg
and
cwtl
gs
xlat
pop
sbb
loop
push
lea
xchg
adc
add
push
ret
adc
jle
call
cwtl
cli
test
push
ficomps
xor
add
insl
cwtl
dec
fisttpl
adc
mov
pop
push
push
mov
insb
push
mov
pop
inc
push
xor
pop
sbb
jne
cmp
jcxz
push
outsl
push
inc
mov
and
or
pop
mov
aad
mov
iret
cmpsl
mov
call
cs
in
mov
jnp
pop
test
mov
sbb
popf
inc
cmc
roll
lret
mov
imul
div
in
adc
pop
add
loope
sub
in
add
sbb
mov
cld
mov
jae
xor
cmpsl
dec
outsl
sub
jmp
add
test
mov
cmp
ljmp
scas
mov
jbe
sbb
pop
jne
sbb
mov
dec
jge
mov
inc
imul
mov
lcall
mov
popa
pop
ror
add
fldl
stc
in
xor
mov
sub
scas
adc
sti
jmp
std
lea
mov
or
pop
fs
mov
push
cmp
xchg
push
lods
loope
je
out
jle
mov
sub
mov
sub
fwait
test
mov
ret
hlt
xchg
aad
jno
adc
movsb
pusha
roll
ja
cld
lods
dec
outsb
pushf
js
cmp
jne
mov
addr16
hlt
push
sub
mov
clc
xchg
pop
out
inc
into
mov
orl
cli
cs
pop
xchg
push
push
jle
in
insb
sub
mov
aas
out
jl
imul
stos
fnstsw
xchg
mov
inc
lcall
push
push
orl
mov
scas
repnz
cltd
xchg
or
xchg
xor
jp
cmp
mov
shll
cmp
lahf
and
aas
dec
mov
push
pop
and
loop
shrl
sub
push
jb
movsb
outsl
push
xchg
xchg
les
dec
inc
cltd
add
pusha
sar
scas
push
jae
mov
in
inc
jbe
jp
dec
pop
dec
mov
or
insb
ljmp
and
adc
pop
pop
mov
dec
pushf
ret
or
push
jmp
dec
mov
cmp
sub
ds
loop
mov
pop
cmp
inc
mov
mov
mov
in
xlat
sub
stos
mov
test
les
xor
movsb
sub
nop
shrb
mov
out
mov
jb
jecxz
mov
xchg
jae
stos
mov
pop
mov
inc
xchg
std
or
xchg
out
scas
sarl
loope
movsb
cmpsb
pop
outsb
loop
mov
insb
and
das
mov
sahf
fwait
pushf
push
repz
lret
mov
dec
ret
jb
push
fwait
out
add
cmp
cli
lret
ja
stos
add
shlb
sub
shll
cld
into
push
and
sub
xlat
arpl
dec
enter
call
xchg
test
cmp
sbb
mov
and
jb
add
inc
insl
popf
xchg
cmp
lret
push
sub
xor
insb
sub
xchg
jno
lahf
in
and
movsb
loopne
repnz
xchg
inc
xchg
rolb
fs
lea
fistpll
in
push
push
call
test
jnp
daa
xor
push
mov
pop
dec
mov
xor
mov
xchg
dec
dec
repnz
inc
pop
mov
cltd
jae
or
lret
cmp
mov
mov
insb
jne
ljmp
cmp
cmp
add
pop
imul
roll
dec
jnp
pop
cmpsb
sbb
aaa
fldt
sub
sbb
cmp
inc
cmp
mov
push
mov
mov
cltd
sub
pop
xor
cwtl
adc
or
int
jo
add
dec
sbb
cld
jbe
imul
jmp
enter
pop
in
fwait
fwait
xlat
xchg
push
imul
loop
negb
test
or
mov
sbb
inc
cmp
jnp
mov
add
incl
scas
cld
ret
push
sbb
daa
cmpsb
and
xor
fwait
add
add
mov
cli
fs
jnp
pop
test
push
test
jmp
bound
aam
das
loop
adc
cltd
add
es
add
addr16
sub
sbb
or
rcll
das
scas
sub
imul
xor
xor
es
jge
pop
or
cld
inc
icebp
cli
mov
mov
mov
out
repnz
cmc
cmp
push
scas
xor
pop
aam
jb
and
fisubrs
push
inc
mov
ss
cmpsl
push
jbe
fcomps
push
add
jns
sar
cmc
adc
shlb
lret
cmc
dec
ljmp
xor
sbb
sub
pop
jecxz
fisubrs
and
jae
mov
addl
filds
cld
fcomp
repnz
inc
adc
cltd
xchg
ljmp
or
dec
faddl
aas
rcl
arpl
stos
pop
add
call
popf
into
daa
mov
iret
add
int
sbbl
sub
push
fcmove
cmc
hlt
add
ljmp
out
dec
ret
out
add
rcr
mov
dec
or
mov
les
mov
pop
hlt
sti
xor
dec
jb
inc
sub
push
cs
dec
mov
xor
or
jmp
fidivrl
test
and
inc
dec
pop
pop
pop
shl
jmp
cmp
xor
aad
mov
mov
and
cmpsb
loope
pop
icebp
inc
iret
loope
frstor
xchg
push
es
iret
pop
sbb
dec
aas
cs
inc
mov
xchg
fwait
int
lods
int
pop
jle
dec
ss
xor
cwtl
cmp
in
and
bound
push
movsb
adc
mov
inc
insb
xchg
ss
lret
add
pop
nop
mov
pop
or
mov
ljmp
mov
shrb
add
lcall
mov
lods
in
sahf
in
and
xchg
outsl
pushf
jae
add
or
std
jl
and
fists
outsb
test
scas
pop
push
stc
or
dec
loope
rolb
xlat
js
inc
cltd
push
repnz
xor
arpl
adc
inc
cmpsl
int3
add
adc
fbld
push
int3
scas
shl
cwtl
les
pop
xor
push
sub
std
inc
nop
pop
mov
cmp
lods
add
sbb
fistpll
mov
inc
adc
popf
jae
mov
stos
data16
rorb
rolb
cli
xchg
je
mov
nop
data16
add
xor
mov
in
mov
push
ja
cli
pushf
cmp
clc
inc
fs
lods
pop
cmpl
stos
adc
es
cmc
pushf
dec
bound
lods
aas
ret
fcmove
test
fisubs
pop
mov
scas
ja
sub
push
inc
sub
jg
scas
inc
mov
fisubl
lahf
popf
ss
jo
sahf
fwait
dec
add
stc
cmp
and
mov
xchg
ret
inc
icebp
cmp
mov
add
mov
mov
aaa
lea
jmp
push
adc
je
cld
aas
push
ret
xchg
and
stc
pop
das
push
dec
push
cmpsb
xor
mov
push
fstps
lahf
mov
sub
aas
test
add
or
into
xor
sbb
mov
pop
pop
push
and
cmc
mov
push
int
add
loope
dec
je
or
sbb
adc
test
shlb
fs
inc
xor
adc
dec
mov
daa
push
mov
jo
xor
dec
mov
pop
js
cmp
inc
addr16
fucomp
pop
scas
jmp
dec
dec
clc
push
and
xchg
or
aaa
loopne
ja
push
cmp
push
jge
xor
rorl
je
loop
push
in
leave
push
out
imul
mov
stc
clc
rcrb
cs
aas
hlt
inc
sti
mov
rcr
push
ficomps
ljmp
in
mov
push
cs
xchg
and
fsub
sub
movsl
stc
jbe
mov
ja
sbb
sbb
movsl
adc
cmc
lret
xchg
shlb
push
dec
mov
fwait
xor
or
call
sub
pop
or
shll
pop
cmp
sbbb
mov
mov
sbb
roll
add
pop
out
mov
lret
mov
scas
inc
cmp
xchg
adc
int3
xchg
xor
lahf
adc
into
cs
test
xor
or
mov
xchg
xchg
dec
sbb
daa
and
inc
stc
or
inc
or
push
ja
inc
test
pushf
int
push
into
push
and
push
lea
and
jno
call
js
adc
xchg
cld
jno
movsl
dec
loope
int
aad
xor
das
je
xchg
xor
push
xchg
cmp
cld
cli
pop
movsl
int3
mov
sti
pop
bound
negl
repnz
xor
sbb
xchg
or
jnp
icebp
sub
push
sbb
addr16
jl
cmp
out
xor
aad
inc
jle
xor
mov
faddl
and
push
jne
into
test
fstps
loope
or
inc
push
mov
xor
rorb
lods
ja
repz
icebp
and
ret
lret
cmpsb
test
int3
jnp
ret
push
jnp
mov
pop
and
sub
bnd
aaa
shlb
ljmp
arpl
dec
pop
fcmovnb
adc
sub
lret
add
sbb
enter
cli
call
in
sub
sbb
mov
sti
out
jl
dec
mov
mov
fs
jecxz
and
push
lcall
hlt
test
in
lcall
fcomps
or
inc
xor
and
inc
loope
in
mov
mov
loop
push
mov
mov
popf
sub
mov
or
shl
hlt
mov
xor
xchg
xchg
and
push
lds
mov
or
cmp
out
pop
cmc
xchg
mov
pop
or
adc
or
mov
cmp
rcrb
movsl
push
adc
pop
sub
fsub
inc
repz
ret
mov
mov
push
shrl
inc
jge
pop
outsl
push
xorps
mov
fildl
lea
and
and
std
mul
sbb
and
xchg
jbe
and
sahf
stc
fadds
in
or
mov
aas
fincstp
lret
push
mov
mov
jae
or
fcoml
loopne
clc
mov
test
sub
add
jno
or
sarb
out
loope
repnz
jae
sarl
stos
add
mov
mov
xor
pinsrw
out
mov
inc
dec
push
out
push
notl
nop
je
subb
adc
jae
out
into
push
adc
popa
lds
stc
fbld
adc
or
xor
pusha
icebp
add
jns
push
jp
fnstenv
pop
and
mov
imul
or
push
out
out
outsb
loopne
in
lret
and
xchg
adc
sbb
mov
dec
push
jecxz
mov
jp
clc
in
jmp
push
cli
and
cmp
nop
mov
fucom
jb
cmp
pop
aad
int3
and
pop
adc
push
inc
and
test
dec
xor
push
push
xchg
bswap
cmp
lret
and
fcmovbe
fidivs
cmpsb
xchg
or
or
pause
movsl
loop
loopne
fwait
gs
jge
dec
mov
jp
inc
out
dec
jo
fwait
shlb
xchg
push
xor
inc
ret
mov
mov
in
xor
lods
in
aaa
fists
ja
ss
and
pop
mov
xchg
lret
jnp
jnp
cmp
cmp
jae
loope
fwait
push
inc
adc
sarb
rol
out
pop
or
cli
rcrl
xchg
addr16
and
adc
leave
js
mov
add
mov
xchg
fisttpl
sbb
lcall
sarl
scas
sbb
adc
repz
pushf
ja
mov
sbb
inc
cmp
cmp
jp
inc
add
xor
add
jb
jo
fbstp
mov
push
push
ret
mov
push
test
pusha
out
sub
out
adc
pop
sarl
xor
jp
fadds
xchg
jmp
jecxz
mov
push
add
in
mov
xor
leave
inc
add
std
xchg
faddp
iret
call
ljmp
cli
xor
mov
fstl
pop
xchg
pop
jo
xlat
sub
out
mov
mov
pop
jg
fcoms
ja
cli
cs
dec
push
or
into
imul
mov
dec
ljmp
cwtl
dec
ds
insl
inc
xor
mov
pushf
push
enter
push
popa
hlt
cmp
dec
ret
lea
mov
loopne
jno
ret
push
arpl
fisubl
shrb
imul
aas
mov
in
lock
mov
es
pop
arpl
xor
xchg
std
xchg
mov
xor
int3
adc
loop
pop
imulb
push
or
ja
fcmovnu
pusha
adc
mulb
sub
fwait
cmp
sbb
lods
ljmp
insb
pop
in
sub
push
xchg
sub
dec
xchg
jae
stc
dec
pop
mov
fiaddl
sub
sub
and
and
in
movsl
bound
mov
adc
aam
mov
jle
jo,pt
lods
cld
inc
cmp
xor
sub
int
xor
pusha
cld
inc
add
or
shl
push
fsubrs
xchg
mov
push
fsubs
shll
sbb
sub
mov
mov
dec
mov
add
test
aad
ljmp
cmp
scas
les
inc
jb
xchg
jge
daa
imul
aaa
adc
xor
jae
test
nop
stos
xor
mov
mov
cld
or
ret
add
fidivs
add
xor
dec
xchg
insb
push
leave
adc
cmpsb
jns
mov
test
add
xor
sti
and
negb
push
inc
lret
lock
sbb
push
xchg
inc
fstpl
ret
pop
aam
pop
popf
inc
mov
sbb
cltd
xchg
jecxz
orb
adcb
das
jecxz
in
icebp
xchg
and
jl
out
add
jmp
xchg
xchg
pop
cmp
xchg
imul
sub
mov
or
out
ja
loop
dec
repnz
cld
movl
int3
xchg
mov
jle
dec
jl
and
ljmp
andb
dec
je
push
fidivl
push
pop
add
sbb
push
push
sub
ret
ficoms
lods
jmp
gs
clc
movsl
push
pop
pop
mov
pop
cld
inc
cmp
icebp
ret
in
lcall
jg
xor
cwtl
iret
ficoms
push
pop
mov
mov
sbb
pop
pushf
mov
rorl
sbb
or
cld
xor
in
and
loopne
addr16
add
pop
movl
inc
dec
xchg
mov
push
jno
adc
inc
xor
std
ds
fs
inc
ret
rcrl
bound
inc
roll
outsb
pop
jnp
dec
xor
mov
hlt
fcoms
mov
lock
push
stos
or
cmpsb
jae,pn
repnz
imul
scas
insb
push
incl
das
mov
push
pop
xor
xchg
jle
mov
jecxz
xchg
test
jge
aam
xchg
fwait
enter
pop
sbb
lret
pop
in
daa
push
sbb
popa
add
or
push
sub
push
jne
pusha
mov
jnp
lret
test
lcall
inc
cld
or
icebp
pop
sbbl
outsl
ret
stos
jmp
mov
lcall
aam
mov
stos
pop
dec
push
vpunpcklwd
jno
mov
loop
mov
add
ret
int
cmpsl
cmp
cmp
rolb
or
mov
scas
sbb
scas
pop
mov
or
push
jp
int
xchg
push
pop
sbbl
stc
sbb
jnp
cwtl
adc
or
mov
mov
repz
ret
and
mov
dec
jo
and
es
imul
aam
or
sbb
ret
push
xor
add
out
xor
mov
sar
test
pop
push
hlt
mov
mov
and
fisubl
repz
out
ret
outsb
ret
ljmp
dec
clc
movsb
jge
mov
push
push
cmp
shl
cmp
mov
push
sarb
int
cmp
push
push
mov
jae
scas
push
sahf
cmpsl
adc
jnp
or
or
sahf
cli
or
outsl
jbe
push
loopne
add
cltd
mov
stos
cli
jnp
clc
js
sub
mov
iret
mov
repnz
mov
sbb
sub
sahf
loop
add
fnstsw
lret
adc
aam
push
shl
gs
dec
cld
imul
jnp
les
lods
cs
fisttps
test
mov
xchg
jb
mov
pop
mov
sti
in
icebp
jge
imulb
jnp
arpl
pop
dec
lea
inc
in
push
ret
xchg
mov
xchg
xor
loop
sahf
inc
mov
fcompl
mov
mov
sbb
into
add
jp
jp
pushf
xor
sbb
adc
popf
loopne
sbb
mov
in
xor
mov
xor
iret
mov
mov
aam
into
jne
stc
mov
loopne
jmp
or
adc
xchg
or
sub
fistpll
inc
lret
jne
lcall
loope
dec
subl
loop
pop
xchg
int3
cmp
add
jp
cs
pshufw
mov
cmc
imull
lea
pop
arpl
mov
cld
dec
pop
add
imul
jno
dec
movsb
sub
bound
scas
fisubrs
mov
xchg
ds
mov
lahf
cli
xlat
adc
sub
movsl
aam
dec
push
jle
adc
mov
les
push
fistpll
xor
arpl
into
jo
loop
iret
sub
xchg
rcrl
les
cwtl
xorl
inc
and
addl
aas
adc
jmp
icebp
and
mov
repnz
mov
sub
cltd
lods
pushf
out
gs
test
test
cmpsl
inc
popa
adc
add
push
xchg
call
mov
add
dec
imul
jp
mov
bnd
scas
imull
pusha
cld
sbb
jp
push
push
xchg
jnp
clc
adc
mov
mov
ss
stos
mov
in
mov
mov
ret
jnp
mov
mov
xchg
das
imul
ret
jecxz
dec
fisttps
test
scas
iret
decl
call
push
in
insb
xchg
sub
xchg
shl
addr16
jg
out
in
test
into
jecxz
cld
xlat
dec
ret
mov
push
and
xchg
cld
fs
adc
mov
push
pushf
push
jecxz
sub
xchg
adcl
mov
mov
in
into
adc
repz
inc
imul
mov
cmp
jbe
cli
adc
mov
push
es
clc
faddl
xchg
mov
dec
lret
mov
sbb
mov
scas
in
cwtl
das
mov
cmpsl
insb
dec
icebp
mov
stos
insb
sub
out
movsl
je
pop
andl
fwait
and
cmp
inc
sbb
stos
push
aas
pusha
pop
das
sub
inc
lret
pop
ss
les
add
jecxz
and
mov
sbb
cwtl
in
in
and
jle
mov
adc
cmpsl
jo
and
arpl
scas
vorps
pop
jae
mov
push
mov
mov
loope
rcrb
ss
subb
outsl
aaa
xchg
adc
rcrl
scas
or
push
mov
ret
pop
xchg
add
mov
cs
lahf
sbb
and
cmc
add
cmp
scas
sahf
arpl
out
push
arpl
int
jp
bound
adcb
subl
cwtl
sbb
mov
dec
add
lock
mov
mov
or
insl
sti
inc
sub
pop
jmp
hlt
pop
sti
push
scas
ret
mov
sub
jae
lods
js
testl
outsb
sti
pop
add
mov
lods
pop
dec
sub
test
inc
fisubrs
fisubl
push
icebp
ja
mov
js
lcall
shl
stos
add
mov
jle
test
pop
xchg
xchg
insl
icebp
enter
out
and
in
and
jns
cmp
rol
jl
iret
dec
out
pop
pop
push
and
popa
loop
push
sahf
push
xor
arpl
xor
aaa
mulb
rcrl
or
push
in
mov
sbbl
ljmp
into
push
jb
fwait
test
in
jl
lcall
sub
int
inc
orl
or
mov
dec
stos
jg
jg
sbb
sbb
xchg
gs
jb
fstl
push
pop
lea
test
pop
aam
dec
sbb
pop
adc
stc
in
xor
shlb
nop
adc
dec
xor
mov
add
adc
pop
mov
bswap
pop
xchg
adc
jp
cwtl
cmpsl
daa
mov
push
rcrl
jge
jmp
dec
fsts
movsl
push
pop
cmp
xchg
inc
push
das
sbb
dec
adc
shrl
sbb
jbe
xchg
fmul
mov
inc
stc
cwtl
ljmp
pushf
outsl
mov
or
aaa
jg
or
imul
jns
ret
cmpsl
aaa
ds
aaa
mov
cmc
fldt
shl
test
xor
std
and
pop
repnz
adc
inc
jo
repz
sub
call
xor
jmp
xor
ret
std
sbb
mov
mov
imul
icebp
fldenv
cwtl
push
lahf
xor
data16
xchg
sbb
scas
xchg
cmp
pop
and
jnp
pop
scas
xchg
imul
out
cmc
lret
lahf
mov
nop
dec
ss
cmpsb
or
lods
or
jmp
xchg
mov
lock
mov
adc
push
in
dec
lods
jb
jmp
enter
pop
je
adc
out
ss
scas
fcmovne
out
inc
lret
in
mov
push
not
std
testb
mov
sub
sub
out
rorl
clc
cmpsl
mov
in
out
add
and
push
iret
push
repz
pop
popf
enter
and
or
arpl
in
dec
mov
in
testb
pusha
lds
push
cld
test
mov
jecxz
mov
mov
scas
inc
jge
or
fsubs
ss
fimull
cmp
or
les
fistpl
out
mov
addb
push
add
in
in
stos
or
inc
push
adc
bound
jae
movsl
in
fisubrl
add
push
push
icebp
mov
sbb
mov
sub
xorl
jno
dec
jns
cmpsb
push
popa
sub
sti
orb
xor
mov
imul
js
xchg
fnstsw
jo
adc
sbb
sahf
lock
inc
or
outsl
lds
loopne
adc
dec
fcoms
stos
gs
jae
push
jle
sbb
ss
dec
mov
sahf
js
iret
jl
and
jnp
inc
je
int3
push
daa
fisubrl
pop
sbb
sbb
pop
gs
or
cwtl
repz
adcb
int3
pop
adc
xchg
cmp
loop
repnz
cwtl
inc
test
fnstsw
popf
jnp
dec
cmpsb
push
push
xor
mov
jmp
or
mov
mov
push
sbb
lahf
or
mov
sbb
xor
sbb
loopne
add
ljmp
xchg
in
pop
nop
or
jecxz
insl
cltd
xorl
cmp
jo
push
jns
xor
inc
mov
mov
insw
aad
push
push
sub
mov
mov
pop
and
loopne
sbb
push
daa
jno
ja
repz
pop
xchg
stc
xchg
movsl
and
cld
jbe
dec
add
bound
lahf
scas
leave
inc
sti
cmc
imul
jge
jecxz
fldt
jns
inc
mov
test
bound
xchg
xchg
xchg
shl
ficompl
loop
stc
mov
scas
adc
insl
mov
fcmovnb
test
cmp
sub
call
in
ljmp
or
xor
mov
popf
mov
push
loope
pop
xchg
or
cmp
mov
dec
aad
sub
dec
xchg
sub
adc
call
lret
lcall
inc
xchg
mov
mov
jge
ror
jge
fbld
subl
inc
rclb
and
ss
add
jae
and
lea
xchg
adcl
lds
mov
jae
ret
adc
lods
test
jns
subb
cmp
xlat
addr16
out
jmp
jmp
sub
and
in
push
pop
scas
sti
fidivl
jg
sbb
add
or
xor
jbe
add
jns
pusha
pop
xor
shll
stos
data16
mov
movsl
outsl
outsl
xor
imul
aam
or
ret
mov
cmc
jno
mov
mov
jge
dec
popa
popf
aam
adc
mov
cmp
gs
les
dec
iret
mov
mov
loopne
pushf
mov
aad
addr16
int
push
push
js
hlt
mov
pop
sarl
pushf
dec
jp
inc
mov
test
imul
pop
pop
mov
push
std
xchg
cli
adc
xchg
mov
cmp
repnz
mov
cmp
scas
lret
sbb
mov
scas
sub
je
insb
jae
pop
fcoml
lock
mov
ljmp
mov
dec
fsub
cmpsb
movsb
cmp
jmp
fnstenv
xchg
jmp
leave
sbb
jl
mov
data16
lcall
dec
sbb
inc
out
fists
sarl
jo
popl
jge
nop
rcr
inc
arpl
je
xchg
loop
jle
repnz
jg
loopne
push
inc
and
fsts
subb
jne
notl
cmc
xchg
call
fisttps
sbb
jb
imul
push
mov
mov
fisttpl
divl
pop
jo
rorl
push
aam
mov
dec
sarb
lods
xchg
push
and
bound
push
jp
inc
pop
pusha
cs
lods
sub
pop
pushf
rorl
xchg
dec
iret
adc
cli
xor
stc
insb
and
jns
inc
jb
mov
ja
stos
or
inc
inc
mov
or
sbb
cmp
xchg
jns
adc
loopne
mov
lcall
pop
jmp
sbb
xor
push
mov
in
cmpsb
clc
cmp
push
inc
call
mov
test
in
jae
in
les
inc
nop
sbb
push
push
sub
mov
mov
dec
add
fcmovnu
mov
pop
jl
xor
fiaddl
mov
loope
fnstenv
iret
insb
ds
pop
repnz
je
mov
in
js
or
ss
outsl
push
cltd
sbb
lds
mov
mov
sub
inc
pop
loopne
add
stc
sub
xor
pop
negb
xchg
mov
jl
fadd
adc
cmp
loop
jnp
mov
add
repz
scas
jp
rorb
addr16
lds
push
push
cmp
lods
pusha
mov
jmp
sub
lock
std
ficoms
mov
jecxz
das
push
add
in
and
pop
sahf
mov
rclb
test
add
shlb
adc
jmp
mov
or
nop
push
mov
mov
shll
insl
js
ljmp
dec
and
lods
xchg
mov
fists
mov
mov
lea
test
gs
sub
jge
in
xchg
inc
push
dec
mov
imul
xchg
test
cmpsb
ret
mov
push
push
mov
sbb
mov
in
adc
xchg
loopne
pop
inc
repnz
fs
adcl
data16
jle
shlb
std
jg
and
cmc
fadds
lock
inc
aas
in
and
and
gs
xorb
mov
xor
push
lock
jp
cmp
cmp
and
aad
lods
mov
shr
pop
cwtl
std
jge
insl
jnp
js
lret
pop
dec
mov
pop
xchg
fisubs
pop
clc
mov
mov
dec
push
and
out
ds
sub
jb
xor
jnp
addr16
jge
outsb
pop
out
xor
push
xchg
cmpsl
out
mov
push
sti
rcr
fwait
imul
or
add
sbb
cwtl
push
out
repz
cmpsb
add
add
cmp
jns
mov
std
pop
lcall
loope
pushf
push
outsb
ljmp
and
loop
pop
mov
dec
outsl
pop
xchg
dec
aaa
roll
test
int3
ret
int
mov
icebp
pop
sbb
loopne
pop
incl
stos
dec
dec
push
adc
outsb
nop
xorl
push
repnz
or
cmc
ja
sbb
das
repz
push
cld
cmpsb
and
pop
stc
add
nop
cmp
pusha
test
sub
insl
mov
xor
push
push
push
aaa
add
aam
push
test
mov
je
cmc
mov
add
popf
loope
dec
xor
setle
stos
inc
jmp
dec
pop
xchg
xor
xlat
cmpsb
xor
rorl
adc
mov
or
mov
mov
shlb
cmp
or
shll
popa
inc
adc
arpl
popf
leave
jo
adc
push
loop
mov
mov
daa
test
stc
xor
test
cli
test
stos
popf
pop
dec
cs
stos
popa
ljmp
mov
sbb
lahf
sbb
lock
outsb
mov
movl
cli
imul
cmp
xor
adc
xchg
cmp
push
mov
sub
add
mov
inc
mov
mov
sbb
cmp
pop
and
daa
pop
push
mov
xor
and
outsb
test
xor
adc
cmp
cwtl
lea
test
lea
xor
insb
shll
jae
mov
push
aaa
sub
orb
sub
js
enter
and
mov
inc
jno
push
mov
nop
adc
xchg
jmp
jge
movsb
ret
cmp
push
push
sbb
dec
aam
push
in
ret
lahf
hlt
xor
mov
and
mov
inc
arpl
ror
adc
jbe
jecxz
loope
mov
cmpsb
mov
add
sub
mov
loope
sub
lods
fcmovb
and
loopne
xor
int
in
out
fistl
decl
gs
jle
xor
push
rorl
aas
jl
push
and
scas
mov
adc
or
movsb
cwtl
push
subl
jmp
mov
fldt
imul
jbe
sbbl
sti
push
bound
pusha
cmp
inc
stos
loop
es
loopne
or
mov
and
mov
jmp
dec
fmuls
out
lahf
rorb
sbb
mov
mov
rolb
push
scas
out
and
push
into
ret
dec
pop
loope
xchg
in
lahf
cmpsl
mov
scas
cmpsb
sbb
outsb
lock
adc
and
movsl
gs
cmc
repnz
cmc
jbe
loopne
xchg
and
loope
cwtl
sbb
jns
jl
jecxz
adc
push
lahf
test
movl
scas
jg
mov
das
outsb
clc
jl
pop
dec
xor
test
push
ja
lods
stos
jnp
fwait
scas
dec
pop
mov
ljmp
add
dec
mov
pop
push
sub
dec
rcr
mov
or
outsl
iret
or
shlb
inc
pushf
fistl
cmp
cmc
cwtl
cmpsl
mov
fldcw
dec
orl
mov
insl
loope
push
dec
je
sub
dec
push
xor
flds
test
push
orl
fsub
mov
sbb
stos
inc
jo
test
cmp
pop
adc
in
and
push
aaa
xchg
arpl
mov
xor
cmp
mov
push
js
popa
inc
scas
pop
andb
xor
dec
pop
dec
ds
cmc
dec
adc
daa
fxch
cmc
push
and
cmp
stos
sahf
and
push
das
adc
cmp
pop
pop
xchg
jo
xchg
cmpsb
repnz
es
cmp
stos
mov
cmpsl
or
or
or
mov
mov
xchg
and
sbb
shlb
or
lret
push
nop
mov
jns
adc
mov
xchg
nop
sub
dec
push
out
xchg
stos
fwait
out
aad
jl
jg
rcll
push
inc
dec
or
push
pop
push
xchg
pop
and
test
dec
push
cmp
aas
sbb
lods
inc
out
stos
outsl
mov
pop
mov
jae
push
or
push
sub
mov
xchg
xchg
xor
mov
les
jne
mull
adc
cli
pop
push
gs
bound
mov
bound
test
mov
cmp
lods
aad
cmp
or
jne
and
lahf
cmp
std
pop
movsl
and
push
sub
test
sub
ss
inc
into
push
in
jne
cs
lds
scas
shrl
aam
sbb
cmpsl
sbb
jle
jo
jl
jg
leave
scas
scas
ficoms
jne
out
pop
fsts
mov
daa
outsl
movsb
aad
enter
sbb
sub
push
int
mov
iret
fimull
scas
xor
mov
pusha
or
ljmp
xchg
outsb
sub
das
cmp
add
aas
aam
mov
or
scas
pushf
xchg
or
mov
dec
dec
xorb
pusha
dec
arpl
xchg
or
sbbl
mov
insl
pop
in
roll
mov
sbb
mov
pop
jns
xchg
mov
cli
xchg
pop
pop
adc
int3
nop
fidivl
add
out
daa
dec
ror
sub
subb
fisttpl
adc
aad
pop
test
mov
mov
imul
dec
outsl
shr
hlt
popf
stos
sbb
xor
pop
jge
pop
adc
icebp
ret
sbb
jb
jecxz
mov
test
dec
cltd
mov
int
inc
xchg
shll
int3
dec
xchg
sti
pusha
jl
hlt
inc
mov
test
mov
dec
xor
pushf
mov
int
push
in
add
inc
call
imul
adc
jae
xor
cld
add
jno
popa
loopne
mov
es
pushf
test
pop
les
or
loope
push
jl
jge
adc
mov
mov
xor
sbb
jge
mov
arpl
push
scas
push
sub
pop
shlb
pop
jge
mov
sub
mov
add
test
insl
add
xchg
fsubs
outsb
test
mov
xchg
pop
mov
aas
add
sbb
outsl
sarl
mov
push
sbb
repnz
loop
add
push
sbb
xor
movsb
jae
pop
mov
sub
lods
push
push
lahf
xor
jl
mov
xchg
aas
call
dec
jle
shlb
push
mov
call
fnsave
adc
push
repz
pop
andl
xchg
jecxz
mov
add
aaa
sbb
or
iret
jl
xchg
xor
or
pop
leave
push
and
cmp
das
test
cmpsl
leave
sub
in
dec
out
dec
push
cmpsb
jl
lret
jnp
cwtl
mov
sbb
add
or
adc
dec
push
xor
lea
pushf
insb
adc
outsl
pop
xchg
jp
mov
dec
cmp
lret
popf
jnp
sub
inc
add
mov
dec
add
rcll
pop
flds
sarl
xchg
outsl
adc
loopne
les
mov
ret
or
mov
pushf
mov
rol
inc
fs
rcl
jns
dec
xchg
dec
push
or
mov
pop
addr16
mov
repnz
dec
jns
leave
pop
xchg
mov
jo
mov
ficomps
xchg
stc
leave
jmp
inc
mov
scas
daa
shrl
ret
adc
in
or
imul
int
aas
lock
cld
push
lcall
sub
and
ja
jns
lods
outsb
fnstsw
jo
pandn
imul
adc
shlb
xlat
repnz
sbb
loopne
outsb
jg
pushf
adc
jb
cmp
or
lret
xor
sub
pop
mov
mov
out
cmpb
or
mov
js
sbb
ljmp
adc
shlb
xchg
es
xor
xor
hlt
xchg
pop
cmpl
cwtl
xor
insl
mov
mov
loopne
arpl
mov
loopne
es
repnz
add
in
mov
loop
xor
inc
mov
scas
push
push
mov
xor
xor
adc
pop
ds
add
push
pop
les
add
testl
loopne
ds
fstp
adc
cmp
sbb
cmp
fs
pop
pop
or
pop
dec
data16
hlt
adc
icebp
mov
jg
cmp
testb
or
xchg
gs
xchg
lods
sub
pusha
pushf
sub
jecxz
sub
dec
mov
or
mov
andl
dec
mov
pop
in
inc
mov
adc
lods
jecxz
in
aaa
fisubl
mov
cmp
imul
out
and
das
nop
jnp
inc
mov
arpl
int
push
insb
ja
and
aaa
push
xor
rorb
or
mov
sbb
mov
pop
pop
pop
fucom
push
popf
mov
push
stos
and
js
cmp
push
or
adc
or
jno
cld
pop
lahf
addr16
dec
loop
movsb
and
shlb
imul
pop
inc
mov
mov
icebp
or
push
sbb
lds
xor
sub
nop
add
or
dec
adc
iret
mov
addr16
stc
in
jge
jb
lret
sbb
mov
dec
xchg
outsb
dec
mov
pop
test
or
loop
sbb
sarb
cmp
mov
mov
outsl
mov
dec
xchg
lcall
and
aad
iret
mov
sbb
iret
adc
in
mov
ds
mov
das
and
stos
rorl
inc
mov
pop
xchg
lds
fists
andl
mov
fdecstp
lcall
fimuls
xor
inc
sub
fistps
sub
mov
add
xchg
jle
lahf
or
pusha
pop
lahf
jg
mov
mov
movl
and
pop
inc
sub
popf
and
mov
add
leave
dec
xchg
sub
xchg
mov
addl
inc
lret
sbb
shlb
sub
mov
sub
ja
push
out
pop
js,pt
mov
ljmp
nop
cmp
ret
test
out
orl
loop
insb
int
imul
fstpl
iret
test
ljmp
push
pop
repz
and
or
arpl
sub
adc
fiadds
ljmp
out
movsl
sti
lds
jecxz
push
loop
andl
push
lds
rcrl
rcrb
fistl
bswap
daa
popa
push
push
inc
fmul
je
push
inc
adc
xchg
add
mov
fwait
xchg
es
adc
push
loopne
dec
fistpl
and
mov
cmc
jle
fwait
and
inc
jecxz
loop
mov
xchg
pop
gs
in
add
push
inc
fists
push
xchg
pop
xor
aas
jge
jnp
push
jns
mov
dec
hlt
aam
sub
add
ds
mov
mov
lock
xchg
repz
jmp
or
fwait
inc
inc
dec
cmp
push
inc
mov
in
dec
sub
icebp
jne
jmp
insl
test
pop
mov
mov
fistpl
ret
lcall
cmp
in
enter
scas
add
or
fs
xor
loopne
icebp
stc
pop
enter
aas
arpl
icebp
mov
fs
sub
inc
pop
data16
movsb
pop
pop
jae
add
push
jbe
sub
lret
xor
pop
test
les
xor
mov
mov
addr16
xchg
js
insb
xor
lods
mov
lods
sti
ss
loop
mov
cmp
mov
iret
mov
es
out
jmp
in
jo
lods
cmp
push
mov
push
jnp
js
cmpb
mulb
aam
sbb
sbbl
jo
pop
cmp
xchg
flds
xchg
xchg
xor
push
cmpsl
fiadds
push
adc
cmpsb
sub
jne
xlat
popa
clc
mov
shlb
insl
cmc
icebp
test
lcall
sub
sbb
loopne
subl
test
xchg
or
leave
inc
jmp
pop
aad
je
mov
sub
sub
lods
ficoms
lret
rcrl
lahf
fld1
inc
lods
das
adc
and
mov
lahf
push
push
lds
ljmp
dec
test
sbb
ds
pop
lock
cmp
pop
xor
sub
clc
xchg
dec
jno
sub
sarb
or
push
nop
adc
pop
mov
and
push
lret
push
cmpsl
lock
bound
rcrl
sub
mov
ret
rorb
mov
xor
outsb
or
test
pop
ja
push
fstl
fsts
and
inc
jp
aam
inc
xchg
out
lods
iret
xchg
cmpsb
inc
arpl
mov
mov
loope
lods
bound
pusha
js,pt
arpl
jle
mov
loop
dec
bound
nop
sbb
and
daa
out
mov
arpl
jle
ss
xchg
mov
xor
or
stos
pop
push
int
scas
das
ficoms
inc
cld
jne
aas
sbb
pushf
and
mov
cmp
insb
mov
mov
fcompl
mov
dec
out
xor
in
enter
rorb
push
jo
xor
or
or
mov
pop
in
enter
dec
insb
mov
and
jg
add
sbb
insl
xchg
test
xlat
call
cmc
pop
mov
inc
mov
xor
jmp
pop
movl
jae
mov
xchg
mov
ss
in
negb
loopne
rclb
jg
mov
lds
adc
xchg
add
adc
sahf
add
jno
scas
adc
aam
call
ja
mov
xor
insl
mov
dec
insb
das
aas
cmpsb
mov
je
push
or
rol
aas
ficomps
inc
mov
les
ss
dec
push
mov
sbb
push
stos
sbb
push
ljmp
jl
lcall
mov
xlat
adc
add
cmp
rclb
inc
xor
jle
call
hlt
call
fcoms
xchg
ffree
push
cmpsl
pusha
int3
mov
sub
xchg
rol
gs
bound
mov
sub
adc
pop
cmp
xor
cmc
enter
cmp
mov
inc
or
or
bnd
sub
xchg
pusha
andb
sbb
sbb
pop
sub
scas
icebp
push
scas
jl
jnp
add
js
stc
mov
test
cwtl
or
movl
inc
add
mov
sub
cmpsb
mov
aas
imul
out
js
scas
push
pop
lock
fstpl
fsubs
xchg
js
js
push
sahf
jg
int
pop
and
ss
xchg
xor
movsb
inc
mov
dec
xchg
sbb
push
pop
inc
mov
cltd
jae
push
jg
mov
adc
lret
sub
inc
out
adc
lods
jne
imulb
addr16
sub
bound
fsubs
in
cmp
push
loop
es
xorl
jno
cmp
cmp
adc
shlb
sbb
aaa
or
push
mov
sub
dec
icebp
lods
dec
mov
cmp
enter
hlt
mov
cmp
xor
imul
in
data16
inc
stc
and
inc
mov
and
xor
subb
out
mov
shlb
xchg
scas
outsl
ds
or
lcall
or
pop
cmp
pop
nop
jae
out
dec
adc
mov
inc
xlat
cmp
icebp
lods
and
fnstsw
daa
lea
fnstsw
lea
out
iret
cmp
pop
je
out
in
leave
sbb
out
dec
jb
push
dec
icebp
je
jmp
je
mov
negl
shlb
dec
jg
addr16
add
push
nop
mov
mov
cmpb
cs
fwait
scas
adc
out
sbb
push
ret
mov
arpl
push
pushf
aad
bnd
push
jnp
fdivs
lcall
insl
push
and
cmp
push
add
xor
jae
loope
mov
sub
inc
jle
mov
scas
test
arpl
lahf
inc
imul
ficompl
repz
dec
mov
xchg
push
test
or
popa
mov
repnz
mov
js
mov
das
es
enter
jp
icebp
dec
mov
jmp
cmp
push
xor
insl
mov
mov
sar
cmp
xchg
pop
arpl
rolb
cmp
and
nop
leave
pop
push
in
insb
sub
shl
jmp
mov
bound
mov
jbe
inc
fs
into
out
add
or
movl
sub
jle
in
aam
xor
mov
popa
fldenv
cmpl
daa
outsb
aas
lret
mov
jno
push
jp
pop
mov
add
fldenv
mov
push
and
decl
andb
repz
adc
stos
les
xchg
and
jg
mov
lcall
mov
das
pop
dec
xor
popf
inc
and
iret
mov
fsub
fcmovnb
cld
arpl
fists
out
mov
and
insb
inc
call
xchg
lock
subl
jmp
fucom
out
rcl
xchg
rol
scas
lds
dec
mov
pop
inc
jb
mov
jbe
dec
mov
add
push
sahf
ffreep
adc
and
sub
cltd
arpl
add
loope
adc
mov
shl
mov
or
js
xchg
andl
lret
jge
cmp
imul
rcrl
scas
xchg
fwait
dec
fs
scas
mov
arpl
jl
movsl
fbstp
shll
jno
test
out
jne
jmp
arpl
fcoml
inc
xchg
dec
mov
xchg
inc
into
xor
sbb
popf
push
repz
jg
jns
jmp
pop
pop
inc
jecxz
push
daa
inc
dec
xchg
cwtl
and
insb
mov
jne
inc
pop
pop
negb
adc
add
bnd
and
lcall
mulb
int
data16
or
xchg
int3
ljmp
pushf
aaa
cmp
cmp
int
lcall
cmp
ret
xchg
ret
clc
pop
cmp
xor
movsb
cli
pop
lahf
sub
inc
xor
pop
or
inc
xlat
ljmp
outsb
fcompl
add
jle
cmp
lea
lods
sub
loopne
stos
mov
loope
aaa
jmp
mov
sbbl
shll
movsl
jns
out
mov
cli
mov
mov
mov
sbb
xchg
into
sbb
sbb
inc
xchg
daa
js
cmp
stos
adc
lods
les
cwtl
arpl
mov
movsb
arpl
jp
lret
xchg
dec
aam
adc
int3
mov
lods
mov
dec
in
addl
dec
sub
scas
addr16
scas
cmpsl
xchg
xchg
jle
xor
adc
mov
pushf
orl
and
mov
test
cs
dec
test
dec
scas
or
es
add
push
stc
ja
int
inc
mov
jo
fcomip
mov
adc
jge
hlt
lods
or
into
sub
test
shll
aad
stos
sub
clc
arpl
xor
add
leave
rcr
xchg
lcall
xor
push
xchg
cli
daa
jne
test
push
imul
mov
dec
xor
sahf
cmpsl
sbb
jns
mov
clc
inc
push
leave
jle
add
frstor
aam
xchg
pop
jp
stc
fsubrs
cmp
cmpsl
and
add
xor
test
shl
or
sti
sub
unpckhps
mov
jp
or
inc
sbb
mov
jbe
call
out
push
int3
jg
xor
push
insb
mov
fwait
sub
fs
jne
enter
or
pop
jp
pusha
mov
pop
leave
out
repz
and
inc
add
dec
es
push
ds
or
mov
sti
jne
ds
adc
fnsave
gs
jle
and
xlat
and
mov
lret
inc
aam
imul
ljmp
push
pop
and
fnstsw
jl
aam
jge
mov
vmread
xor
cmp
clc
pop
outsb
and
jl
mov
xchg
xchg
pushf
je
mov
adc
push
sti
mov
repz
gs
stc
inc
pop
mov
mov
lods
mov
inc
loop
xor
xor
xchg
jecxz
jecxz
dec
sub
aaa
fisubs
sub
mov
and
ja
test
fisttps
xorl
inc
enter
shll
dec
adc
das
iret
pop
push
push
jl
jnp
mov
cmpsb
sub
sub
movsl
cmpsl
lahf
push
push
int
push
in
ret
mov
repz
push
pop
adc
adc
pop
mov
push
lahf
or
imul
je
fildl
daa
mov
fcmovnb
fdivs
mov
ss
add
cmp
lret
mov
push
add
dec
sub
cmpsb
xchg
loope
andl
or
aad
mov
sarb
loop
imul
jg
pusha
pop
jge
dec
ss
test
divb
jnp
push
ret
les
aam
lret
or
or
jmp
sbb
push
mov
outsb
or
and
jmp
gs
sbb
and
shlb
ret
stos
cltd
xchg
cmpb
mov
inc
imul
jmp
dec
aam
sbb
push
out
add
rcl
outsl
sub
and
incl
dec
pop
dec
xchg
movhps
negl
lds
xchg
out
insb
mov
pop
xchg
pushf
in
push
or
adc
add
popa
outsl
pusha
sbb
enter
sub
cmp
mov
adc
jmp
mov
xor
lock
arpl
jns
sti
jge
in
lods
das
mov
push
xchg
ja
call
movsl
inc
call
and
mov
mov
cmp
inc
cmp
push
shll
addl
hlt
std
jp
inc
rclb
daa
das
sbb
adc
sarb
and
cmp
aas
xchg
cmpsl
cmp
jbe
dec
imulb
dec
add
xchg
or
out
call
stos
scas
inc
je
out
or
inc
sub
mov
xor
dec
test
shrb
mov
mov
repz
mov
jno
adc
sarl
ljmp
push
test
in
or
in
mov
nop
out
stos
ret
ljmp
xor
push
ret
andb
xor
add
shll
dec
mov
popa
jnp
test
or
lret
xor
out
aam
mov
or
test
xchg
sbb
sar
rcrl
arpl
jno
repz
rcrl
sub
icebp
sub
push
xchg
sbb
subb
gs
faddl
push
pop
push
adc
inc
inc
sbb
sbb
push
fidivrs
movsl
xchg
movsb
icebp
sbbl
push
push
pop
jp
add
jne
bnd
shl
mov
sbbb
push
cmp
outsl
xor
aad
out
enter
mov
je
nop
ja
ss
inc
sub
mov
jle
jns
push
and
sub
mov
pop
fimull
stc
add
stc
jl
test
pop
xchg
push
lds
gs
push
sub
imul
xchg
mov
mov
xchg
int3
fwait
jns
iret
push
mov
xor
add
mov
das
inc
sbb
sahf
mov
xchg
or
add
sbb
ret
inc
cmpsl
or
pop
repz
jb
pop
lods
daa
push
xor
push
enter
int3
loopne
jle
xlat
bound
xchg
jae
ror
xchg
arpl
cmp
hlt
mull
mov
sub
jecxz
mov
sub
pop
test
jno
mov
inc
xchg
mov
jns
jb
mov
out
dec
pop
xchg
ss
xchg
add
lods
push
ret
outsl
mov
inc
leave
sbb
lret
das
pop
mov
mov
outsl
aam
dec
movsb
mov
add
adc
in
push
xchg
fnsave
fnsave
enter
and
int
adc
cmp
mov
ffree
call
mov
pop
mov
push
scas
imul
sbb
mov
cmp
mov
dec
sahf
rclb
inc
jb
in
imul
and
jle
push
pop
fcomi
cmp
scas
jecxz
gs
call
int
insl
clc
cld
add
movsb
jb
lock
out
lods
or
andb
xor
lods
xchg
dec
xor
mov
lea
sbb
rcrl
mov
mov
jmp
and
push
push
pop
sub
and
sti
lret
out
jge
mov
adc
pop
pop
mov
aam
jg
scas
mov
popf
paddsb
sub
addr16
jg
pop
inc
xchg
call
or
xor
orl
pop
adc
mov
call
cmp
jae
mov
push
xor
mov
imul
xor
int
xchg
add
clc
into
dec
ret
es
pop
or
lret
popa
shlb
mov
sub
mov
jne
push
adc
xchg
shr
jo
mov
jo
push
hlt
add
mov
add
neg
out
clc
adc
cld
fwait
das
mov
add
popa
xor
int
xor
js
cmpb
ret
ret
inc
insl
adc
mov
out
xor
ficoml
mov
mov
shrb
sub
jl
dec
fstps
or
insb
mov
es
xor
inc
add
adcb
fistpl
data16
je
shr
imul
js
or
mov
xchg
pop
out
lret
into
std
add
sub
jne
mov
jle
pop
jae
test
add
mov
inc
int3
std
insb
xchg
shrb
xchg
or
sahf
ss
sub
dec
or
in
xor
sub
cmpsl
rcrb
or
ret
lret
dec
ds
add
mov
imul
push
arpl
pop
add
idivb
pop
adc
insl
jnp
int
pop
jmp
iret
call
fwait
mov
lahf
xchg
mov
adc
inc
and
in
insl
add
dec
sub
fbld
jne
dec
pop
jo
inc
popa
out
stc
dec
fs
or
popl
add
fmul
out
int3
pop
incl
iret
pop
adc
les
xor
xchg
repz
into
cmc
ja
sbb
pop
jge
pushf
pop
in
iret
fistpl
xor
pop
inc
or
cmpsb
out
add
filds
mov
xorb
or
ret
into
push
scas
push
loope
sbb
ret
stos
out
push
stc
xchg
dec
cmp
cmc
adc
pushf
fimuls
imul
cmp
sbb
inc
inc
aad
cmpsb
mov
inc
test
xor
push
lret
in
rcrl
cmp
stos
inc
ja
enter
pop
xchg
dec
enter
shlb
xchg
push
inc
ficompl
mov
ljmp
ret
in
ret
rorb
lret
push
jge
jmp
jo
mov
push
cli
cmp
pop
decl
jg
adc
lock
or
mov
cld
nop
push
add
lds
rclb
subl
icebp
mov
xchg
mov
mov
loop
addb
pushf
adc
leave
jne
xchg
or
push
cmp
add
test
sub
pushf
mov
cmp
inc
outsb
ljmp
or
inc
scas
and
xchg
scas
pop
push
sahf
test
pop
inc
mov
js
fucomp
xchg
aaa
int
or
rolb
xor
cmp
clc
mov
cld
inc
xchg
outsb
fisttpl
jmp
xor
es
push
push
push
mov
and
pop
adc
pop
mov
int
xchg
shlb
jl
add
or
xor
pop
stos
cmpsb
or
loop
out
sahf
les
aas
ljmp
and
sarb
pop
sbb
and
dec
pop
push
sbb
sbb
xchg
loop
sti
mov
out
xchg
mov
mov
xchg
add
add
jmp
pushf
xor
lret
clc
out
in
mov
repz
cmc
mov
xchg
fstl
cmp
inc
pusha
jp
pop
mov
pop
addr16
jno
and
and
adc
mov
mov
outsb
jp
xchg
cmpsb
hlt
dec
dec
repnz
data16
sbbb
and
adc
jmp
out
cmp
xor
jge
sbb
and
cwtl
add
xchg
mov
pop
repnz
push
insb
mov
movsb
fs
sub
cwtl
xchg
sub
jo
mov
popf
fs
pushf
jg
xchg
jne
in
jne
clc
lds
add
mov
push
dec
and
push
in
cmp
jl
push
mov
cmp
mov
lahf
clc
mov
xor
insl
push
lods
sbb
scas
push
inc
imul
clc
fcomp
loope
cmp
push
flds
outsb
xor
push
out
stos
pusha
mov
mov
test
adc
dec
push
clc
lea
jmp
out
sbb
jecxz
enter
add
sub
gs
js
aam
pop
jne
aas
xor
jae
mov
mov
add
mov
leave
test
sarb
dec
or
jmp
inc
push
ja
scas
les
xlat
mov
cmp
jp
aaa
xchg
adc
dec
shlb
pop
push
pusha
out
sahf
sub
push
jb
or
pop
pop
mov
cmp
xchg
addb
push
sbb
mov
mov
into
mov
sarb
inc
adc
addr16
dec
or
sub
dec
add
insl
out
xor
aam
xor
xchg
test
or
adc
mov
int3
or
outsl
mov
pop
xor
lods
xchg
aas
daa
xchg
sub
pop
ret
or
lods
ja
insl
fsts
pusha
pop
jle
add
jge,pn
fnstcw
inc
and
imul
ds
mov
out
sub
push
or
pop
mov
jno
cmp
cwtl
cmpsl
test
dec
add
scas
pop
imul
fucomp
cmpb
pop
cs
lahf
bound
int3
cmpsl
add
and
dec
popa
imul
mov
fnsave
fyl2x
lcall
ljmp
fstl
jmp
loop
rorb
pop
sbb
xchg
dec
in
cmp
nop
dec
and
cs
js
and
test
cmp
scas
ret
cmpsl
int3
lea
fbstp
hlt
outsl
std
lock
jae
call
pop
out
aas
xor
hlt
xor
cwtl
mov
aam
and
inc
ljmp
enter
jp
subb
cli
push
mov
fcomi
xlat
lret
mov
test
ret
fmulp
inc
sbb
jbe
gs
pop
daa
jecxz
pop
sub
xchg
lods
movsb
movsl
daa
push
push
out
ljmp
add
scas
dec
in
or
jb
sbb
out
pop
std
scas
pop
cli
mov
push
cmp
adc
push
cmc
sbb
mov
fwait
es
xchg
fildll
xchg
push
inc
jecxz
loopne
xchg
sbb
icebp
fcoms
add
addr16
xchg
aas
mov
mov
xor
mov
and
mov
lahf
in
sbb
mov
mov
insl
and
adc
pop
int3
test
adc
jecxz
or
flds
sub
adc
shrl
inc
stc
dec
jg
sarb
cltd
das
aas
movsl
cmc
xor
clc
arpl
mov
xorl
gs
js
out
sbb
das
gs
pop
enter
pop
jmp
mov
into
popa
inc
jb
mov
lea
sarl
lods
outsb
xchg
jmp
pop
push
mov
sub
xchg
add
xor
pop
test
and
dec
shlb
xchg
sub
fisubrs
dec
fbstp
push
outsl
sahf
xchg
pushf
test
lds
gs
ficoml
xorl
xchg
in
loopne
test
out
cmp
inc
pop
sub
loopne
pop
inc
xor
mov
fldcw
inc
adc
mov
xor
push
outsb
push
sbbb
add
imul
out
add
or
je
bound
ret
adc
lret
rcrb
dec
xchg
and
test
inc
pop
or
pushf
mov
cli
sub
test
jnp
jmp
cmp
hlt
insb
and
iret
dec
das
pusha
push
xchg
xor
mov
sbb
push
xlat
lds
popa
mov
dec
dec
ret
pop
mov
movsb
sbb
in
jmp
es
fwait
jo
ss
scas
pop
push
sub
and
pop
mov
xchg
movsl
mov
test
sbb
popf
mov
movsb
or
pop
sub
lds
aam
subl
fimuls
push
dec
dec
xor
jnp
jp
rolb
test
sub
jge
pop
sub
jns
movsb
mov
push
and
clc
jg
sub
gs
fistpll
jp
inc
mov
jp
mov
pop
sarl
jl
add
adc
pop
in
add
pop
mov
flds
insl
push
add
push
dec
scas
out
fcomp
movsb
inc
fidivs
lcall
lock
mov
rcrl
push
ds
decb
fmulp
mov
clc
mov
add
mov
inc
ds
das
and
test
jno
xchg
popf
dec
adc
iret
data16
jge
pop
ds
ret
js
jmp
fistpl
mov
xchg
fimull
and
sbb
and
dec
jns
imul
out
nop
mov
or
out
mull
inc
xchg
pop
data16
add
inc
fnstenv
fcmovb
sbb
dec
repnz
jbe
sahf
xor
rorb
push
stc
and
dec
push
mov
mov
pusha
cltd
push
std
and
cmp
xor
add
sub
xchg
pop
dec
add
dec
push
incl
jmp
mov
adcb
and
and
mov
test
in
sub
xor
out
mov
and
pushf
mov
sbb
scas
outsl
shrl
shlb
aad
into
and
sub
outsl
pop
lret
or
pop
nop
repz
cwtl
inc
lods
or
xchg
aaa
jle
hlt
ja
stos
xchg
mov
mov
mov
jns
xchg
loopne
pop
adc
add
outsb
mov
cmpsb
mov
lods
loop
enter
hlt
fs
jne
and
inc
adc
push
or
sbb
repnz
jg
xchg
das
jecxz
es
pop
into
mov
sub
sbb
mov
and
pop
add
out
mov
pushf
sub
jl
addr16
insl
pop
cmpsl
mov
add
aas
iret
mov
mov
pop
fwait
pop
mov
and
mov
sub
testl
mov
fwait
rcll
pusha
hlt
mov
cli
ret
mov
ljmp
jp
je
jp
mov
jmp
and
xchg
addr16
cwtl
jecxz
push
jns
lret
sbb
les
inc
jecxz
sbb
cmp
xor
pusha
jecxz
in
mov
jle
data16
inc
push
filds
mov
xchg
mov
test
mov
rcrb
pop
lea
mov
or
xchg
jl,pt
or
jmp
rolb
xor
pop
test
push
aaa
ret
stos
add
xorl
sarl
jg
sbb
xor
jle
lds
cmp
add
cmp
jmp
push
notb
jecxz
inc
iret
adc
adc
mov
mov
mov
or
stos
jmp
push
or
lret
hlt
lret
std
mov
xchg
xchg
sub
or
add
in
fstpt
fistpll
ljmp
insl
inc
mov
leave
xchg
lods
outsb
lock
sbb
je
rorb
ror
aam
inc
mov
test
aaa
push
in
jmp
sbb
rorb
adc
das
out
cwtl
jmp
cmp
dec
sub
xchg
icebp
cmp
mov
xchg
into
push
jnp
push
mov
aad
mov
inc
add
scas
or
fisubs
push
lea
pop
jmp
xor
xlat
dec
nop
outsb
ljmp
fwait
out
in
add
in
repnz
sub
das
insl
mov
adc
ds
inc
lods
sub
dec
dec
mov
lods
inc
inc
test
sub
fcomps
mov
inc
dec
lds
ds
fdiv
lock
outsb
jb
sub
push
iret
fldt
cmp
xor
mov
aas
cmp
cld
pusha
pushf
test
in
xor
pop
adcb
cmp
fcmovne
aas
sbb
push
add
sbb
cld
adc
leave
jns
pop
add
sbb
dec
fs
dec
lcall
sbb
add
movsl
imul
sub
iret
xor
mov
sbb
jbe
jge
out
mov
inc
divb
pop
pop
inc
jg
out
sbb
into
sub
ret
setns
xchg
addr16
mov
and
or
jo
cmp
xor
mov
sbb
fprem1
mov
andb
adc
pop
xchg
mov
sbb
adc
cmpsb
sub
fdivl
lcall
in
out
dec
inc
or
shl
pop
sahf
cmpl
fadd
in
jo
test
cwtl
arpl
mov
add
jno
xchg
nop
mov
mov
dec
lea
jne
cmp
add
and
aas
int3
inc
adc
into
xchg
and
sub
shlb
push
xchg
push
add
je
inc
jge
mov
cmp
xor
pusha
mov
scas
cltd
call
mov
movsl
or
xchg
enter
mov
jl
jle
sub
mov
dec
fisubrs
imul
mov
test
dec
inc
sbb
sbb
jp
push
and
lock
pop
xchg
lahf
lock
adc
fimuls
in
xchg
gs
sub
outsb
inc
jmp
cwtl
push
inc
hlt
mov
xchg
ret
mov
or
or
mov
cmp
xor
scas
iret
push
and
adc
cmpsb
xor
xor
cld
loop
ret
dec
ror
and
sbb
filds
lds
push
into
mov
or
imul
imul
sahf
and
push
pusha
test
and
mov
inc
fadds
pop
jecxz
out
icebp
cli
inc
mov
stos
insl
dec
sub
sub
lret
aaa
mov
iret
test
stos
lods
push
mov
jae
inc
sbb
xchg
jmp
and
xorl
test
fnstenv
mov
cmp
jle
sbb
jmp
xchg
arpl
fcoms
repz
push
cmp
in
mov
daa
stc
jbe
sahf
sar
add
cltd
inc
mov
lret
es
arpl
fsubrs
sub
adc
fdivl
mov
dec
push
add
loope
dec
xlat
adc
xchg
cmp
loope
push
sahf
pop
into
mov
dec
mov
stc
fwait
addr16
jb
or
mov
cmp
and
fs
cmpsb
mov
jmp
sbb
sbbb
and
or
out
and
push
shrb
test
dec
arpl
outsb
xor
incl
jo
das
pushf
ror
sbb
jmp
pop
and
aad
sbb
xor
imul
mov
mov
adc
jno
out
jge
push
gs
mov
sbb
dec
fdivrs
nop
pop
fcomps
arpl
in
fisubrs
les
cmp
inc
cmp
push
push
iret
daa
inc
and
mov
add
or
push
adc
push
cmp
movsl
lods
das
xorl
cmp
clc
rolb
xor
jge
arpl
push
adc
inc
xor
lods
push
icebp
mov
and
aad
xor
sub
fs
sbb
and
sarl
add
fcoml
push
pushf
pop
test
xor
adc
movsl
mov
adc
rorb
stos
xor
mov
nop
mov
push
inc
xor
push
push
push
jno
popf
popa
adc
sub
push
mov
leave
fldt
mov
cmp
mov
dec
sti
cltd
mov
pop
dec
add
daa
insl
je
mov
mov
adc
xchg
sti
push
sub
arpl
addr16
test
push
add
outsb
pop
stos
in
in
mov
pusha
inc
push
sbb
mov
sbb
xor
jp
aas
lea
push
sub
int3
mov
lock
in
push
outsl
shrl
sbb
push
stos
xchg
out
mov
rclb
add
push
scas
or
add
xor
aaa
pop
mov
sub
mov
cmp
rcrl
mov
cwtl
push
subl
je
jb
mov
rorb
add
cmp
lock
lcall
xchg
sub
pop
into
push
xchg
insl
inc
imul
arpl
jge
cmp
and
cli
out
or
negl
cmp
lahf
pop
stc
cmpsb
jbe
fcompl
int
push
pop
sti
loop
and
in
sbb
mov
and
adc
pop
sti
push
mov
les
loop
shlb
dec
int
in
inc
dec
shl
push
lret
pop
nop
mov
push
jmp
xor
pop
out
int
push
stos
pop
imul
add
pop
mov
in
xchg
loop
mov
jg
idivb
scas
push
mov
pop
mov
pop
push
cmp
and
sbb
sbb
adc
scas
scas
inc
xor
mov
aaa
int3
rorl
sub
add
add
dec
inc
jno
mov
insb
jp
mov
add
jnp
rcl
jle
cmpsl
lds
leave
mov
lahf
daa
cmp
mov
dec
addb
loop
sbbl
aaa
arpl
in
xor
push
cmp
int3
jg
or
pop
out
pushf
inc
clc
lods
lods
dec
std
push
sub
inc
mov
xor
rcll
adc
push
dec
test
push
xchg
jae
push
fnsave
sbb
push
xor
out
sbb
jnp
pop
dec
aam
pop
mov
adc
lods
fnsave
pop
ljmp
or
mov
scas
cmpsl
push
pop
adc
test
mov
mull
mov
fisubs
push
dec
inc
mov
mov
push
xor
es
lea
xchg
flds
pop
push
js
fdiv
inc
movsl
sbb
cmp
test
lret
lds
aam
shr
mov
inc
int
mov
xorb
or
hlt
push
rcr
jnp
ret
dec
and
mov
mov
sbb
hlt
cmp
pop
pop
shrl
cli
cmp
ljmp
pop
push
jne
aaa
push
stos
ficoms
lcall
lret
sub
mov
loop
cmp
repnz
out
shrb
pop
dec
aas
loopne
lds
jge
xchg
sbb
xchg
iret
popf
xchg
dec
pop
mov
jp
flds
pop
popl
shrl
push
pop
or
push
sbb
adc
xor
imul
fsubs
jb
cld
dec
pop
and
inc
or
fcoml
popf
aad
cmp
mov
pop
mov
andl
sbb
jno
jg
mov
pop
jo
xor
jle
cmp
ljmp
sub
mov
aad
fcomp
mov
imul
dec
inc
pop
mov
shlb
imul
push
ss
pop
jecxz
js
enter
jmp
pop
jno
cmp
nop
pop
cmp
mov
enter
in
adc
inc
jno
ret
cld
loopne
push
outsl
rorb
mov
fimull
por
shrl
sbb
mull
pop
fdivp
inc
cli
push
mov
jp
mov
pop
mov
jnp
shl
js
lret
stos
xor
arpl
lahf
js
rolb
daa
and
mov
pop
dec
pop
imul
incl
cmp
das
xchg
xlat
call
jnp
sub
jge
faddl
ja
aas
mov
inc
and
mov
jne
mov
insb
aaa
inc
sbb
pop
cmp
cli
push
jo
jnp
mov
mov
pop
xor
leave
mov
dec
sbb
rcl
mov
sbb
add
fdivs
adc
popf
fisttpll
testl
cmp
mov
and
sub
xor
notl
je
sbb
das
fwait
fwait
xchg
pop
out
negb
pop
cmp
add
adc
sub
dec
lcall
xchg
pop
push
mov
int
push
and
in
mov
and
add
je
icebp
mov
pop
sarb
in
in
incl
jl
jb
push
or
sti
sti
lret
in
mov
loopne
popf
jo
fsub
pushf
adc
adc
addr16
lods
lds
sbb
jl
cwtl
movsl
rcrb
add
cmp
jle
aaa
pop
push
aas
out
pop
mov
inc
stc
pop
and
es
adc
call
cmc
fcmovnb
inc
and
sub
fstps
and
out
xlat
out
std
movsb
frstor
or
add
imul
mov
adc
mov
daa
shrb
xchg
cmpsl
cmpsb
jmp
scas
lret
mov
cld
int3
lret
mov
std
aaa
nop
mov
enter
inc
lods
and
mov
fsubp
ffreep
mov
aaa
fsubrl
fwait
clc
pop
jge
loope
fs
xor
pop
shll
mov
dec
adc
aas
pop
sub
jle
sbb
mov
addr16
and
arpl
xor
dec
inc
mov
notb
cmp
sbb
cwtl
mov
in
inc
imul
push
adc
push
jae
dec
dec
jecxz
jb
inc
fdivrl
insl
or
pop
jge
rcr
inc
scas
sbb
dec
mov
pop
xorl
sub
mov
lock
jne
add
pusha
sahf
loop
arpl
sub
inc
add
adc
push
mov
gs
mov
pop
fprem1
jno
ret
dec
lahf
testb
orb
adc
jge
mov
in
popa
mov
jbe
jne
loopne
stos
clc
add
cwtl
push
mov
call
je
aad
inc
mov
cmpsb
jl
fsts
pop
lret
cmp
or
insb
ds
lods
sbb
ja
and
mov
sub
ret
fs
push
outsl
cmc
mov
ljmp
inc
adc
mov
xchg
mov
push
aas
cmpsb
cld
aas
pop
jmp
mov
jbe
push
fwait
mov
dec
dec
roll
leave
pop
jns
sub
inc
or
jns
pop
cli
xchg
loope
mov
lahf
push
cmp
dec
add
into
push
xor
mov
loope
into
mov
and
sub
mov
mov
jp
aam
cmp
mulb
sahf
pop
enter
cli
pop
insb
push
sahf
dec
pushf
shrb
or
adc
loop
dec
ret
lds
imul
pop
push
aas
push
jle
outsb
or
enter
data16
jns
mov
sbb
sub
and
pusha
scas
sub
cmp
lods
inc
adc
mov
mov
stos
mov
cmp
sub
xchg
xor
out
jne
repz
stos
jne
mov
aam
sbb
mov
inc
dec
mov
mov
aaa
xchg
jg
sbb
cmp
xor
repz
sbb
jge
sbb
test
lods
cmp
js
outsl
test
xor
mov
cmp
jns
sbb
lock
insl
pushf
mov
xchg
shrb
xchg
fcoms
inc
xlat
cvtps2pi
lcall
fisubs
shl
fucom
loope
and
inc
insl
subl
inc
jecxz
inc
or
jg
lahf
push
popf
pop
xchg
ret
filds
fsubr
inc
sbb
mov
mov
lret
rorb
mov
sub
xor
sbb
push
addr16
push
sub
mov
lods
sub
lret
je,pn
mov
lock
clc
fs
mov
inc
mov
ja
ja
jl
jge
dec
sti
movsl
in
cmp
in
xchg
jbe
dec
and
or
in
in
sbb
jne
addr16
dec
dec
ss
cmp
dec
mov
subb
sub
push
ret
xor
jbe
cmp
push
ret
je
jg
lock
adc
enter
xchg
cmpsl
in
inc
inc
lea
loop
add
jmp
cmpsb
xchg
leave
jecxz
pushf
test
and
mov
adc
pop
or
movsb
std
jl
aaa
push
hlt
push
stos
shld
daa
sbb
jne
xchg
pop
dec
loopne
shll
lcall
add
add
ja
and
pop
inc
and
fs
sub
sub
xor
inc
lock
addr16
or
xchg
test
stos
push
test
insl
cli
shlb
lcall
jbe
pop
sbb
xchg
icebp
cmc
rorb
adc
or
aas
xor
inc
pushf
xchg
push
add
sbb
xor
sub
aad
sbb
xor
mov
shl
iret
fcomps
out
adc
insb
pop
xor
pop
popf
or
rclb
mov
push
xabort
cmp
aaa
arpl
sub
lcallw
xor
jle
lock
cltd
push
sldt
out
pop
sbb
push
outsb
pop
sti
pushf
sahf
fisubrl
pop
cld
lcall
dec
inc
aam
mov
inc
or
cltd
daa
test
push
pushl
insb
or
push
mov
testb
push
popf
cmc
hlt
jb
loopne
test
lods
mov
das
pushf
mov
divl
or
mov
xor
adcl
enter
testl
sub
pop
inc
xchg
mov
sub
loope
movsl
ss
mov
decb
or
xor
scas
sub
orl
clc
cwtl
repnz
movsb
jno
jecxz
roll
outsl
or
dec
push
ljmp
cmpl
std
pop
jg
lods
push
mov
mov
sti
and
std
mov
sub
les
popa
dec
push
mov
pop
jae
jmp
sub
mov
xchg
cmc
dec
movq
sbb
inc
cmc
cld
pushf
cmp
leave
jb
test
pushf
test
pusha
dec
xchg
dec
fsubrl
mov
scas
pop
imulb
adc
or
in
jne
dec
fistpl
xor
pop
or
sbb
lcall
mov
xchg
in
mov
xchg
add
lea
dec
out
es
outsb
mov
push
mov
test
in
cld
mov
outsb
jg
push
add
add
fcmove
stc
enter
cwtl
or
cld
shrb
jne
cltd
xor
hlt
push
and
mov
mov
movsb
dec
push
dec
mov
int3
add
dec
jae
shll
mov
and
pop
movsb
cli
movl
sub
dec
sahf
cmpsb
pop
pop
xor
push
sbb
je
and
pop
jle
hlt
pop
inc
ja
dec
and
stos
xchg
add
or
sub
add
nop
pop
pop
imul
dec
mov
mov
or
lahf
pop
jo
shlb
cmp
loopne
xor
popa
loopne
xlat
es
ret
aas
sub
mov
fwait
or
mov
mov
loopne
ljmp
jg
in
rcrl
out
shl
fists
adc
xchg
xor
lea
test
jb
mov
xor
dec
nop
loop
imul
xchg
cmp
shl
pop
bound
fstpl
inc
dec
dec
push
rcrl
mov
jmp
mov
push
shrb
cmp
pushf
je
mov
test
ss
loop
xchg
pop
insb
or
mov
sbb
popa
or
rcll
add
dec
data16
ljmp
xchg
xor
and
loope
bound
adc
test
filds
sahf
cli
pop
pop
xlat
xchg
pop
mov
sub
cmp
jmp
dec
or
mov
shr
sub
das
rolb
daa
testl
test
pop
mov
fisubs
jo
jnp
vmread
add
xor
mov
imul
cmc
dec
jne
loope
xchg
ret
sbb
mov
test
insl
xorl
insb
in
xor
mov
jns
and
testb
xchg
dec
pusha
lods
imul
je
add
add
and
lret
lds
jl
scas
insl
xor
and
sbb
icebp
xchg
mov
pop
out
repz
out
pop
mov
pop
inc
push
xor
jmp
pop
into
sub
mov
sub
sarl
xor
cs
pushl
mov
sbb
push
sbb
mov
imul
and
out
push
adc
int3
fisubl
sub
add
or
aaa
pop
bound
aaa
clc
sub
jmp
in
xchg
cs
movups
adc
popf
jns
and
push
lods
xor
mov
loope
xor
inc
xor
push
inc
mov
cwtl
or
pop
pop
stos
fbld
xor
pushf
sbb
enter
rcrl
mov
mov
mov
sbb
push
xchg
mov
lds
xchg
inc
push
add
inc
cli
out
andb
jmp
aad
imul
dec
jmp
std
jmp
int3
mov
out
rsqrtps
mov
test
cmpb
scas
sub
dec
and
cmp
push
cs
xchg
fdivl
dec
sti
ds
mov
leave
sub
mov
jl
or
add
adcb
mov
jl
out
mov
jecxz
ljmp
push
scas
pop
or
je
dec
push
adc
addl
mov
mov
es
xor
or
or
sbb
repnz
push
jno
push
rclb
push
xor
inc
stc
jle
andl
lret
sbb
or
rcrl
and
dec
stos
pop
mov
mov
test
pop
mov
es
or
xor
loopne
and
clc
or
scas
jne
cmp
add
xchg
lret
iret
adc
ret
push
mov
adc
repz
xchg
push
or
int
loopne
push
jo
jge
cmc
sbbb
mov
and
lock
push
dec
cmpsb
push
xchg
lea
xchg
mov
xchg
jb
push
add
add
outsb
xchg
call
shrb
outsb
jmp
aaa
sbb
pop
lds
and
bound
xchg
jge
jmp
jo
lock
jbe
addl
mov
jecxz
je
ret
push
mov
xchg
jle
std
cmpb
test
xchg
sub
pop
jo
loope
mov
or
lock
lock
mov
sbb
mov
jbe
fmull
add
cmp
stos
jecxz
mov
in
adc
test
adc
adc
xchg
sbb
in
enter
popl
ss
mov
or
jge
in
sbb
int3
push
mov
adc
inc
sti
shrl
mov
inc
mov
fldl
dec
mov
jnp
out
loop
jae
inc
cltd
push
pushf
and
stc
fimull
push
push
fdivrs
pop
jnp
cwtl
cld
dec
in
cmp
inc
inc
into
xchg
xor
xor
es
rorb
jae
xlat
cmp
fs
xorb
xlat
cmp
nop
xchg
loopne,pt
aaa
test
mov
shr
add
adc
mov
test
sti
fadd
pop
popa
mov
mull
inc
in
inc
popa
shlb
out
mov
jo
popa
aam
lcall
rolb
xchg
bound
dec
dec
cmp
xchg
aaa
or
flds
dec
mov
xchg
cmp
dec
jg
mov
mov
fisttps
cwtl
rcll
sbb
insl
adc
stc
mov
push
pop
jle
mov
test
jp
push
sub
mov
xlat
xlat
add
lret
dec
jae
or
xchg
sub
pusha
mov
xor
mov
in
adc
movsl
lahf
inc
sarl
dec
lods
mov
dec
push
jns
mov
aas
push
xor
jno
jb
fstpl
in
add
daa
mov
add
cmp
movsb
xchg
sub
leave
or
scas
insl
sbb
xchg
js
pop
ljmp
push
fisubl
and
mov
pop
pop
int3
outsl
xchg
lea
sbb
mov
les
inc
xchg
loope
stc
lea
out
sub
out
fistl
cwtl
pop
ljmp
stos
fcoml
out
popl
pop
sub
inc
imul
pop
inc
stc
mov
inc
cltd
ja
add
adc
jae
inc
jmp
jl
rep
adc
pop
cmp
outsl
insl
roll
jg
out
xchg
push
cmp
pop
addb
stos
pop
push
mov
lcall
and
sub
mov
clc
or
leave
outsb
push
fwait
cmp
out
inc
jno
hlt
push
adc
xchg
sbb
call
pop
repz
pop
xor
data16
stc
popf
pop
fdivr
and
pushf
mov
aas
mov
in
insb
adc
outsl
aam
inc
insb
add
cmp
adc
mov
sahf
add
cltd
nop
imul
mov
mov
in
jl
xchg
jno
adc
mov
dec
scas
das
inc
ljmp
jmp
mov
loopne
mov
nop
add
sbbl
dec
ss
fidivs
cmp
icebp
jp
cwtl
mov
adc
xchg
pop
out
mov
lahf
sbb
and
add
mov
cltd
pop
ret
fildll
mov
in
jbe
lahf
mov
iret
jo
ret
fcomps
add
push
gs
pop
cmp
les
dec
insb
xor
or
shr
jnp
push
xchg
in
pop
in
sbb
repnz
or
and
ret
imul
dec
pop
adc
mul
ljmp
clc
jmp
faddl
aaa
nop
rcl
adcl
mov
adc
push
lods
gs
dec
mov
sub
inc
lds
fs
xor
pop
jo
inc
ss
or
out
sbb
xor
lds
sub
pop
push
or
aas
js
sub
iret
mov
xchg
inc
cwtl
push
xchg
push
cld
lods
adc
aad
mov
or
dec
ror
adc
push
cmpsl
cwtl
mov
lods
xchg
push
cmpb
xchg
std
frstor
ret
dec
fisubs
lret
push
pop
int3
ficoms
movsb
cld
xchg
test
movsl
add
xchg
xchg
add
push
hlt
out
or
push
sbb
fwait
ds
dec
and
lock
pusha
jl
mov
jmp
popf
mov
imul
enter
mov
add
or
les
mov
xchg
insb
xor
inc
jbe,pn
ds
lret
into
lock
outsl
sub
dec
mov
or
mov
push
jmp
adc
push
pop
xchg
gs
das
xchg
bound
inc
lea
adc
adc
mov
leave
stos
fsts
icebp
push
xor
push
movsl
test
mov
push
xchg
mov
mov
push
mov
in
pop
das
rclb
arpl
negb
lea
cwtl
fwait
jae
bnd
push
scas
data16
sub
or
call
scas
sahf
mov
xchg
in
lock
mov
stos
ljmp
popf
repz
adc
pop
mull
mov
fcmovnbe
in
outsl
inc
xchg
test
sub
hlt
cmp
ficomps
je
nop
xor
mov
sub
jl
inc
adc
xorl
jno
xchg
stos
adc
xchg
inc
fwait
pop
int
es
fildll
lods
pop
sub
subl
leave
inc
cwtl
test
sarl
cmp
dec
or
cli
shrb
sti
test
adc
ja
jne
and
cld
mov
pop
aad
jg
jmp
pop
ja
and
hlt
mov
test
and
xor
mov
rclb
inc
jp
aad
sbb
jl
jl
lods
stos
scas
mov
pop
jle
les
ss
mov
add
test
sbb
xor
jecxz
in
outsb
dec
mov
ret
pop
jp
andl
add
push
xor
imul
mov
imul
mov
rolb
push
and
push
in
je
fcoml
dec
out
mov
movsl
into
mov
cmp
xor
jae
mov
cwtl
daa
idivl
mov
cmc
xor
push
push
enter
sahf
repz
lret
stos
mov
outsl
cmp
dec
fwait
imul
ljmp
push
shlb
fldt
pushf
inc
test
mov
jbe
add
fsubrs
scas
test
pop
test
push
and
das
cmpsb
mov
add
cmp
aam
out
adc
jmp
lahf
pop
scas
xchg
out
cltd
iret
insb
movsb
test
adc
or
sub
sti
add
pop
adc
sub
int3
xchg
out
call
std
mov
sbb
test
xor
inc
and
sarb
push
xchg
pop
test
or
mov
or
or
scas
outsl
stos
lret
push
syscall
mov
stos
aaa
add
sub
push
add
aam
and
sub
push
xor
lds
push
lret
es
in
lds
cmp
dec
jl
jle
pop
test
sbb
arpl
dec
sub
cmp
loope
jbe
out
jg
xor
and
fldl
repnz
xor
scas
and
test
rcl
repnz
xor
pop
shrb
popa
inc
mov
xchg
mov
test
jp
and
lods
cmp
stos
cli
push
pop
inc
mov
mov
cwtl
in
sbbl
popf
ret
mov
adc
cli
jp
lds
mov
adc
adc
leave
xchg
mov
sub
cmp
jge
mov
popa
scas
add
cmp
push
jl
imul
sarb
inc
adc
mov
add
out
jmp
out
test
xchg
sbb
xchg
cmpsl
int
fsub
outsb
sbb
stos
pop
cmp
lcall
int3
ja
jmp
inc
aam
scas
insl
xor
int3
xchg
pop
fldenv
xchg
fndisi(8087
imul
int
cmpl
sti
rolb
repz
aam
aam
mov
pop
addr16
mov
outsb
out
sub
mov
adc
lds
and
sbb
pop
fildll
xor
les
xchg
pop
out
mull
cmp
sub
mov
ljmp
cmc
xlat
sysexit
inc
or
add
ret
movsb
mov
inc
adc
insl
lar
in
sub
jmp
test
out
arpl
mov
or
push
mov
and
stc
xchg
pop
inc
bound
dec
test
iret
push
sbb
xor
sbb
mov
call
ss
xor
aad
je
mov
test
aaa
jmp
jnp
fwait
arpl
inc
es
inc
and
rol
or
mov
iret
out
xchg
popa
pop
lret
fsubl
fdivr
cmp
or
adc
scas
test
lea
sti
jb
mov
add
setge
jl
ror
adc
call
int3
mov
and
lcall
xor
movsl
adcl
sarb
jl
xor
push
fdivrs
loope
push
clts
mov
push
jmp
mov
fdiv
aas
fiadds
mov
lret
cmp
cld
and
lret
ds
movsl
mov
lods
xchg
pop
mov
xor
pop
lahf
test
test
add
jno
jb
cmpsl
cmp
cmp
in
jb
rclb
adc
shrl
out
sub
xor
mov
lret
lcall
or
ja
lds
cli
filds
aaa
shlb
cmp
sub
xchg
pop
or
bound
decl
cli
xchg
dec
xchg
mov
stos
or
call
insb
aas
cli
int3
jg
mov
push
jp
loopne
les
sub
jg
and
xchg
andl
lahf
push
stc
outsl
lret
or
jo
std
mov
pop
out
mov
lret
push
xchg
add
insb
and
cmp
pop
pop
les
mov
mov
lahf
dec
cmp
dec
sbb
test
jb
lods
jnp
cmp
frstor
test
and
cmpsl
int3
lcall
adc
xchg
insb
clc
sub
push
fidivl
ret
sub
scas
les
loopne
jne
push
lock
xor
mov
dec
push
push
mov
lock
adc
mov
hlt
mov
sub
inc
mov
into
mov
and
fs
fwait
sti
cmp
mov
outsl
test
adc
or
andl
stos
imull
in
insl
stos
ret
inc
push
in
mov
xchg
fs
ret
xchg
mov
rorb
xchg
rcll
push
push
xchg
mov
mov
mov
les
inc
xchg
and
cwtl
adc
xchg
jp
test
addl
lret
imul
inc
or
inc
jecxz
mov
imul
push
insb
xchg
ret
je
in
inc
push
cmp
loope
sahf
mov
adc
fcomi
cmc
int
js
ljmp
mov
test
lock
sub
shll
lock
std
cmp
shll
mov
xor
mov
mov
mov
dec
je
push
std
mov
jle
sub
xchg
sub
dec
pusha
orb
inc
and
or
jb
inc
jmp
shl
pop
pop
arpl
fidivrs
dec
mov
inc
dec
push
xorl
into
and
mov
pop
int3
pop
adc
fdivrs
ds
fnsave
add
adc
push
movsb
mov
adc
in
mov
and
and
ret
inc
gs
adc
fisttpl
mov
sub
push
inc
push
sbb
push
push
cmpsb
jle
js
dec
lret
and
xchg
pop
adc
and
and
pop
int
jl
int3
lahf
dec
test
leave
repnz
ret
push
mov
imul
mov
enter
push
mov
sub
decb
ret
xchg
mov
sub
sub
mov
mov
adc
push
xchg
out
mov
mov
test
push
daa
das
dec
pop
loop
jl
jae
add
popa
mov
cld
or
mov
cmp
outsb
dec
inc
es
cmp
nop
mov
inc
push
icebp
js
sbb
aas
loope
insl
pop
fimull
arpl
sbb
loop,pn
pop
push
mul
push
push
sub
cmp
lods
repnz
scas
lods
mov
mov
push
std
movsl
jge
insb
push
fdivrs
rorb
pop
push
push
addr16
loopne
lret
into
out
into
jbe
sub
lret
or
mov
jb
mov
arpl
lods
shll
or
shl
dec
loopne
xorl
sbb
fnstenv
cltd
addl
xorl
xor
mov
dec
cwtl
loope
xchg
aaa
mov
mov
out
xchg
insl
and
push
adc
pop
add
dec
sbb
mov
into
mov
outsl
cld
inc
fsubr
ret
subb
add
jl
xchg
push
xchg
mov
test
or
test
push
mov
pushf
cmp
ret
fst
cmp
add
sub
movsb
addr16
leave
test
sub
repz
dec
stc
lock
and
mov
or
enter
insb
lcall
lods
jmp
loopne
mov
ret
mov
sub
xor
test
jg
out
mov
xlat
jecxz
or
inc
mov
inc
popf
jbe
lret
dec
ljmp
movsl
in
jne
or
lcall
jp
shrl
sarl
lods
sbb
cmc
das
jns
jnp
xchg
xor
mov
xchg
add
pop
lahf
out
imul
ds
jb
and
xchg
lret
xor
inc
nop
xchg
mov
lods
testl
push
movsb
test
imul
stos
shll
or
xchg
mov
sub
imul
or
jae
jp
sbb
push
xchg
out
pusha
mov
xor
add
mov
lods
popa
arpl
push
mov
jmp
enter
popf
cmpsl
int3
mov
push
out
xor
xlat
sub
stos
lock
call
mov
or
int3
pop
lods
sbb
add
or
pusha
push
push
outsl
xchg
push
test
test
adc
inc
add
hlt
pop
mov
aam
fdivrs
aas
hlt
mov
lods
xchg
stos
stos
js
jle
nop
dec
mov
ja
mov
mov
iret
sub
insb
push
cmpl
gs
test
push
xchg
out
push
data16
outsb
rcl
cmp
or
cmpsb
lds
lret
xchg
push
aad
cmp
in
enter
sbb
add
and
psllq
test
mov
pushf
cltd
popl
cmp
stc
and
sub
push
mov
xchg
push
sahf
popf
xor
icebp
add
pop
incl
icebp
adc
aam
cs
lret
loope
inc
fisttpl
adc
mov
pusha
sub
and
dec
pop
lods
xchg
and
dec
xlat
jp
outsb
push
sbb
test
aas
xchg
push
lret
push
dec
repnz
mov
xlat
jg
mov
cmc
popf
adc
inc
push
add
icebp
mov
pop
add
lock
cltd
cld
jns
in
mov
dec
cmp
test
push
and
out
xchg
decb
lret
dec
lds
jo
fsts
or
cmc
mov
and
xchg
scas
sbb
ljmp
pop
mov
sti
xchg
imul
cmc
sbb
pop
das
lahf
add
add
frstor
sub
sbb
mov
push
aam
in
rcrb
jb
sub
jo
insl
test
mov
fnstenv
es
cmp
in
movsl
mov
jae
dec
call
dec
xor
adc
popf
repz
inc
loope
nop
cmp
cmc
filds
xchg
jb
std
pop
add
js
fisubs
test
dec
pop
adc
xor
jno
xchg
mov
adc
cltd
lahf
cmp
aaa
movb
lods
mov
add
dec
fwait
mov
push
lods
xor
fucom
cmp
aaa
mov
or
xchg
std
xor
mov
jmp
xchg
aas
decb
mov
pop
lods
subl
push
enter
dec
and
or
leave
sub
push
in
jecxz
pop
xor
imul
mov
adc
ljmp
lods
and
or
mov
in
inc
inc
cmpsl
mov
divl
and
xchg
sub
pop
test
ss
insb
xchg
roll
aas
sbb
cmp
pop
scas
add
xchg
mov
out
outsl
jge
sti
dec
sbb
xchg
sub
gs
in
in
add
xchg
fwait
enter
mov
scas
call
jmp
sbb
pusha
rol
xchg
mov
in
jp
mov
faddp
pop
push
sbb
xchg
int
test
imul
mov
add
xor
hlt
arpl
bound
push
iret
cmpl
mov
mov
jo
jnp
sahf
lret
addr16
shll
push
lea
std
shll
sarb
mov
push
jge
xchg
jb
nop
outsb
fistpl
cmc
ficoms
nop
aaa
mov
ficoml
dec
xor
mulb
mov
and
add
jp
ret
mov
sarl
outsl
shrb
add
ja
mov
pop
pop
out
mov
mov
sub
jge
dec
add
sahf
pop
inc
mov
jbe
sub
sub
fcmovne
inc
lods
push
xor
outsb
push
fs
xchg
loopne
call
fsubr
jp
or
push
xor
lret
push
pushw
sub
lcall
fldl
inc
sub
cmpsl
mov
or
adc
xchg
push
adc
out
imul
inc
cmp
sbb
cs
sti
cmpsl
daa
xchg
int
mov
sarb
pop
dec
das
sub
ret
je
push
mov
or
orl
xchg
dec
mov
js
dec
lret
fisubrs
fsubl
push
add
dec
cmp
add
fidivl
inc
cld
pop
fimuls
xor
aad
mov
push
test
xchg
xor
jne
xchg
popf
lret
sub
jge
out
lock
xor
test
cli
shlb
or
rcll
dec
inc
xchg
xchg
mov
adc
cltd
lcall
pop
dec
fisubrs
jne
sub
xchg
insl
xor
xor
test
mov
das
or
or
or
push
icebp
and
pusha
sub
bound
add
sub
out
outsb
jno
addr16
sbb
cmp
mov
push
fmul
adc
mov
pop
cmc
ficompl
jnp
sahf
ret
test
outsl
rol
aaa
mov
test
or
sub
xorl
repz
fdivs
idivb
mov
sbb
out
aas
xchg
stos
int3
call
fistpll
add
push
nop
mov
aas
sbb
or
mov
dec
inc
lahf
push
mov
pop
mov
dec
out
call
pop
addr16
call
aas
jbe
shlb
or
das
cmp
jmp
leave
nop
in
lods
push
adc
das
int3
or
dec
dec
ret
lcall
jmp
test
pop
push
dec
inc
or
lcall
fmull
sbb
and
and
fstpt
sbb
mull
out
mov
mov
mov
int
stos
mov
xor
outsb
mov
pop
and
cmp
outsl
scas
out
jmp
ret
or
adc
addr16
ljmp
in
inc
rcrb
pop
push
insb
and
out
leave
xlat
mov
and
fcoms
mov
ja
rol
add
and
mov
jle
movsb
mov
ljmp
or
jnp
fldcw
mov
jae
imull
mov
cmp
cmp
or
mov
jae
xlat
fnstenv
adc
xchg
fisttpl
dec
push
sub
xor
xlat
shl
dec
push
addr16
jb
cld
mov
inc
out
cmp
inc
sbbb
ljmp
pop
mov
addr16
dec
pop
out
int
or
scas
push
xchg
hlt
test
dec
call
sbb
rcrl
mov
arpl
lds
and
fisttps
mov
sahf
mov
add
xor
jl
inc
dec
movsb
xchg
or
ljmp
insb
or
outsl
xchg
aam
sbb
movsl
or
pop
sbb
shl
fucompp
clc
out
cmpsl
out
out
push
xor
lret
nop
addr16
dec
stos
xchg
addl
mov
sub
add
push
repz
imul
mov
push
pop
xor
movsb
sub
dec
leave
push
add
adc
jno
dec
fsubrs
mov
pushaw
jmp
pinsrw
sahf
loope
mov
jns
cwtl
addr16
bound
fcmove
dec
int
dec
xchg
insb
adc
iret
call
loopne
adcb
ss
orb
loop
pop
movsl
push
dec
cmpsb
out
xchg
push
imul
xor
lds
aam
dec
pop
mov
flds
out
movsl
mov
aaa
pop
fwait
cltd
xchg
das
pop
rorb
loop
test
jg
mov
inc
shrl
mov
cmpsl
mov
int3
push
jnp
leave
sbb
outsl
sahf
pop
pop
insl
dec
mov
add
adc
sbb
xchg
int3
mov
test
xor
xor
cmp
mov
inc
flds
inc
or
jg
cmp
pop
add
pop
daa
pop
jg
fwait
sub
push
adc
fldl
ja
sub
pop
roll
rclb
add
inc
pop
mov
push
cmp
mov
iret
loope
push
fstpl
je
data16
insl
push
call
out
inc
mov
pop
xchg
add
mov
mov
cmpsb
xor
stos
cld
std
xor
push
inc
stc
pop
leave
popf
out
loopne
xchg
mov
int
sub
clc
sub
push
sub
stos
cmp
rorl
inc
mov
int
dec
lods
fistpll
push
inc
aad
cli
add
mov
bound
sub
push
cli
mov
add
aaa
pop
ljmp
lds
push
pop
cmp
cmp
cltd
xor
popf
cmp
sar
sub
test
fildll
pusha
mov
clc
iret
adc
lcall
sbb
testl
and
xor
inc
jl
jle
mov
sub
in
xor
call
std
jmp
push
push
inc
cmp
nop
xchg
add
test
fimull
dec
ficoms
add
in
stos
xchg
mov
bound
xchg
sbb
mov
pop
inc
stos
mov
jge
push
adc
insl
icebp
shll
mov
adcl
icebp
jle
mov
adc
xchg
mov
out
lret
xor
subl
stc
sti
cmp
outsl
add
out
jnp
bound
jg
mov
sahf
push
imul
jmp
out
sahf
add
add
jno
jmp
jb
lret
dec
les
xor
jmp
int
jnp
iret
mull
cmpsb
mov
xchg
dec
stc
mov
paddusw
jmp
and
inc
jp
enter
adcb
mov
in
fs
repz
les
sbb
mov
insb
push
jl
and
mov
mov
std
xor
rolb
sbbb
mov
jb
arpl
mov
pop
stos
mov
add
movhps
or
aaa
rolb
xchg
adc
outsl
and
sbb
cmp
mov
dec
mov
repz
je
jmp
sarl
jl
mov
and
scas
jg
insl
imul
jecxz
push
pop
add
or
aaa
jbe
cmpsl
std
fsubrl
subl
cmpsl
xchg
inc
jmp
gs
mov
or
orl
loop
loopne
xchg
sbb
mov
in
bound
hlt
arpl
lds
pop
std
mov
cmpsl
cmp
aad
clc
lods
cmp
adc
mov
leave
call
or
add
aam
popf
in
cmp
das
sub
push
repz
cmp
mov
mov
aam
dec
push
inc
fiadds
xchg
mov
dec
mov
pop
pushf
jl
sbb
int3
cld
push
call
out
pop
jl
fwait
std
std
out
enter
add
orb
mov
shr
mov
pop
daa
add
stc
call
notb
shll
jl
idiv
out
aaa
aam
gs
ret
les
subl
xchg
sub
dec
pushf
stos
mov
ja
mov
xlat
into
clc
xchg
inc
jp
sub
data16
ds
xor
mov
jg
mov
popa
pop
mov
fwait
adc
and
jmp
fidivrl
aam
movsb
subl
pop
fisttpl
dec
arpl
inc
mov
fdivs
mov
in
inc
mov
imul
push
movsl
dec
mov
cmpsb
out
mov
xchg
mov
xor
mov
movsl
aad
push
insb
xchg
pushf
sti
aas
jne
inc
in
popf
in
sbb
in
dec
pop
dec
push
cmp
pusha
mov
adc
pushf
add
lds
lods
mov
cmp
inc
and
je
scas
push
mov
dec
xchg
pop
sbb
and
iret
sub
sahf
popf
pop
lock
jecxz
jno
shlb
xchg
subb
add
dec
test
nop
repz
inc
add
loopne
popa
fcomps
push
sarl
xor
push
and
push
xlat
mov
andl
lahf
inc
inc
mov
and
inc
cmp
lret
mov
lds
rorb
pop
ja
mov
and
jbe
pop
push
dec
sbb
cmc
jns
call
pop
pushf
or
adcl
aaa
jno
and
repz
sbb
xchg
pop
fdivs
fmull
xor
mov
push
pushf
loop
lods
sub
repz
sbb
aas
adc
adc
das
inc
push
stos
std
cltd
out
jns
xchg
or
jmp
arpl
test
pop
insl
pop
sti
push
scas
mov
lahf
mov
adc
dec
sbb
in
out
xor
mov
pusha
cmp
pop
mov
xor
xchg
mov
imul
popa
icebp
pop
mov
or
cmp
test
xor
in
dec
lods
add
lods
mov
xchg
dec
dec
int
cltd
push
gs
sub
adcb
and
hlt
clc
test
and
lahf
rcr
movsl
fucomp
fildl
jp
push
push
insl
mov
lods
push
push
mov
stos
push
std
adc
lret
fidivrl
leave
xor
loop
jl
cmp
ja
xor
addr16
cmp
mov
dec
inc
sete
xchg
pop
and
lahf
push
and
jecxz
call
sbb
or
jno
fmulp
pop
pop
dec
cmc
std
sub
scas
cltd
push
shr
add
mov
push
push
inc
roll
mov
addl
pop
xchg
cmp
mov
pop
jecxz
daa
or
mov
push
push
inc
sub
cli
xchg
cmpsb
xchg
inc
call
mov
lret
xor
push
outsb
pop
and
stos
push
and
and
packuswb
std
insb
cwtl
mov
sub
and
pop
bound
ss
sti
xchg
dec
into
pop
fstpl
mov
outsl
js
add
iret
jl
movsb
lret
into
je
inc
jns
lock
scas
lahf
mov
test
cltd
fisttps
jno
push
insl
lods
sbb
inc
decb
scas
add
cmpsl
ss
fistpl
int
dec
add
adc
lahf
jae
push
loope
mov
lahf
loop
jl
pusha
icebp
add
les
fisttpll
and
bound
dec
jne
cmp
in
shlb
dec
sub
cmpsb
jp
testb
imul
pop
mov
rcrb
lahf
imul
mov
push
or
lea
clc
shl
out
rcrb
faddl
ja
adc
and
inc
jne
loope
test
imul
adc
outsb
xlat
jno
ja
push
and
xor
xchg
pop
jno
ds
popa
loope
fs
mov
loope
shlb
mov
mov
sbb
and
jp,pt
orb
jge
inc
orb
add
sbb
xchg
in
loope
pop
imul
push
push
sbb
and
int3
sbb
test
adc
aaa
bound
jl
test
scas
daa
fwait
jecxz
mov
into
or
push
daa
mov
and
mov
xchg
clc
sbb
cli
jmp
jnp
fs
in
mov
andb
fpatan
rolb
shlb
and
sarl
mov
stos
jbe
mov
sbb
mov
je
bound
xor
xchg
test
loopne
pop
xor
insl
popf
xchg
sub
sbb
adc
pop
lock
ja
stos
daa
divl
jle
mov
lret
lcall
pop
push
mov
cmp
fadds
iret
pop
nop
in
jo
fadd
aaa
mov
adc
arpl
aam
insb
icebp
jp
lods
stos
xor
sub
jl
mov
pop
mov
mov
push
mov
icebp
mov
ljmp
add
push
adc
jg
dec
fcomip
cmp
push
test
out
push
sub
aaa
xor
cmp
jnp
das
lods
adc
cmp
stos
je
idivb
jne
rcr
push
cmc
call
adc
in
mov
adc
cmpsb
dec
lea
lea
jb
adc
and
ja
imul
and
psubd
push
and
or
data16
in
insb
pop
fnstenv
adc
cmpsb
jp
je
push
or
xchg
imul
push
in
jge
xchg
xor
adc
divb
addr16
enter
mov
pop
fcom
xor
inc
stc
aam
mov
ljmp
iret
or
movsl
loopne
fdivs
pop
pop
fists
fwait
mov
insl
mov
lods
popl
addr16
adc
movnti
inc
push
adc
cwtl
cltd
outsl
les
and
dec
pop
movsb
xchg
or
pop
enter
pop
cwtl
cmpsl
adc
xor
pop
imul
sub
sahf
fldcw
ret
in
cmp
and
repnz
pop
cs
adc
or
fwait
mov
jp
and
push
cmp
test
cmc
outsb
mov
aaa
inc
ja
cs
ret
add
ss
mov
enter
jmp
iret
cmp
or
orl
inc
repz
addr16
cmp
fstpt
test
sub
push
xchg
movsl
dec
xchg
rcrl
adc
jmp
lods
push
and
dec
mov
popl
into
leave
fldcw
loop
xchg
out
aaa
and
fisubs
jl
dec
cmc
les
or
adc
aad
bound
cmpb
pop
outsl
mov
lcall
push
repnz
xchg
pop
pop
mov
inc
sti
inc
push
xlat
push
jae
fsubs
aam
mov
dec
mov
pop
repz
adc
fisttpll
fsts
sti
loope
xor
fwait
push
cmp
insb
jg
jp
nop
jnp
jbe
sbb
adc
inc
and
or
stos
arpl
rcrl
xchg
arpl
mov
mov
dec
sbb
sub
jmp
popa
shl
cwtl
sub
jmp
xchg
xchg
pop
inc
icebp
jns
loop
int
adc
xchg
fildl
aam
push
lahf
pushf
cmpsb
mov
shrl
xor
pop
and
rol
stos
lcall
and
mull
mov
add
xor
xchg
rcll
sub
mov
and
inc
nop
je,pn
clc
lahf
bndldx
enter
aaa
in
repz
add
adc
insl
push
rclb
xchg
fucomp
dec
push
sahf
out
mov
jb
cmc
jnp
int3
popa
sahf
sub
stc
pop
dec
adc
sub
inc
mov
lret
mov
enter
or
in
loope
or
sub
jbe
or
rcrl
jne
and
stc
add
lea
int3
and
or
scas
sbb
mov
nop
push
insl
mov
mov
in
mov
std
not
mov
imul
pop
movsl
inc
pop
sub
push
cmc
jns
add
gs
jbe
or
ja
and
lcall
aad
out
movsb
mov
or
cld
xchg
xchg
sahf
add
xchg
icebp
inc
push
fcmovne
sub
out
push
push
loopne
imul
jge
stos
call
movsb
lods
cmp
mov
or
pop
sub
gs
adc
xchg
xchg
jl
pop
dec
cmpsl
push
cmp
leave
or
jbe
push
ret
pop
movsb
in
fldpi
rcl
cld
les
movsl
jecxz
push
arpl
mov
or
daa
out
sarl
fistl
out
dec
adc
test
mov
imul
mov
jae
or
inc
add
cmp
push
mov
dec
and
cmp
pop
or
dec
jnp
ss
pop
std
fxch
loope
push
movb
pop
or
gs
cmp
clc
int
std
sbb
sub
repz
cmpsb
jp
adc
mov
push
insb
in
sbb
jg
mov
xchg
cmp
or
movsb
je
mov
popa
push
leave
insb
test
push
cmc
sub
mov
iret
and
xor
xor
inc
sti
loopne
mov
popf
ljmp
pop
insb
sbb
cmp
cmpsl
cmc
jmp
xchg
and
jl
je
cmp
aam
lock
xor
ja
xchg
jge
sbb
cmp
lods
pop
out
mov
lods
sub
xor
inc
pop
cmp
es
pop
shrl
addr16
xchg
mov
push
adc
js
int
ljmp
outsl
fwait
cmpsb
mov
aaa
inc
pop
scas
orl
int
sbb
fidivrs
dec
xchg
inc
ret
es
mov
dec
inc
loopne
int
lock
jecxz
loopne
icebp
shl
xor
insb
pushl
xchg
push
mov
dec
mov
adc
pop
mov
fsubp
dec
loop
ret
add
mov
adc
out
pop
scas
adcl
ljmp
and
test
mov
inc
loop
repz
sub
cwtl
addr16
mov
loop
outsb
inc
adc
mov
loopne
cmp
jno
clc
inc
lahf
inc
add
pop
xchg
dec
or
mov
add
into
sub
adc
scas
cmp
jae
test
out
jg
cmc
aas
scas
cmp
xchg
aaa
shlb
hlt
mov
insb
in
addr16
jle
cli
push
rolb
repz
mov
sbb
insl
aaa
imul
leave
ds
pop
jg
mull
daa
mov
sti
ret
bswap
xor
rcl
push
orb
jecxz
out
sub
mov
or
mov
mov
mov
icebp
insl
or
loope
in
icebp
inc
jae
push
push
mov
mov
cmp
sub
and
jl
mov
push
jb
or
fsts
cmp
in
xor
or
mov
ret
out
fbstp
pop
or
lea
stc
and
je
mov
mov
jge
gs
mov
and
mov
push
lahf
add
arpl
mov
jmp
sub
mov
adc
mull
push
fldl
sbb
rcl
mov
mov
movsl
and
movq
add
adcl
ret
test
push
mov
pop
dec
addr16
fsubrs
jns
fcoml
imul
cltd
lret
aad
mov
dec
jecxz
inc
jbe
fmull
jnp
mov
in
mov
scas
push
adc
adc
xchg
mov
jno
out
test
cmp
adc
mov
xchg
das
or
ss
sbbl
or
adc
or
jl
bound
aad
ret
lods
sub
insl
cmp
xlat
push
jne
inc
xor
jecxz
test
lods
inc
out
push
lods
push
push
xor
lret
jg
mov
mov
and
scas
gs
and
or
mov
push
and
jae
and
xchg
jne
mov
inc
inc
in
dec
ret
lds
xchg
mov
cmp
xchg
mov
pop
and
pop
sub
lds
cmp
push
cmp
xchg
iret
dec
incb
out
rcl
in
hlt
shrl
xchg
std
cmp
push
imull
mov
ret
dec
stos
jmp
jno
adc
push
stos
mov
mov
test
sbb
jbe
inc
xorl
popa
add
imul
jb
out
or
push
stc
push
push
or
push
sbb
outsl
mov
adc
rol
adc
dec
pop
jb
aas
push
add
fwait
dec
add
push
repnz
shlb
sub
ljmp
loop
cmpsl
repnz
les
push
cmp
pop
xchg
inc
lcall
inc
pop
xchg
jo
sbb
lods
jmp
mov
pop
int
mov
sub
sahf
push
pop
mov
jp
lret
adc
scas
sub
out
hlt
dec
mov
mov
jbe
adc
xchg
iret
xor
mov
or
dec
shll
test
mov
sub
mov
sbb
mov
daa
mov
inc
popf
add
insl
nop
mov
jne
push
or
mov
jb
hlt
sub
test
sbb
cmp
dec
hlt
test
dec
dec
popa
xor
push
jle
loop
xor
or
lret
test
paddw
add
scas
pusha
ja
mov
ds
roll
sbb
sarb
cli
gs
push
inc
insb
rcrb
adc
sbb
xor
dec
daa
cmp
ja
mov
jecxz
or
cmp
cli
mov
mov
and
xlat
cmpsl
or
ret
xchg
add
insl
dec
test
mov
adc
pop
or
adc
mov
rol
mov
sub
test
mov
sub
daa
push
jge
sub
icebp
jmp
in
mov
rcr
shlb
jle
mov
std
jns
imul
add
sub
jg
insl
sar
aad
pushf
or
in
xchg
pushf
dec
inc
dec
in
ret
pop
shrl
xor
sub
pusha
sub
jmp
pusha
inc
inc
int3
lahf
outsb
mov
nop
scas
mov
push
lods
fimuls
addr16
jns
mov
pop
bound
mov
filds
dec
jno
xchg
ret
adc
cli
in
and
push
dec
cwtl
in
mov
xchg
mov
sub
cli
mov
mov
push
xchg
pop
or
dec
pop
cmp
mov
xor
push
ss
push
out
aam
hlt
ljmp
test
dec
cmpsb
je
imul
js
dec
mov
and
and
mov
xor
and
sub
cmp
push
xchg
loope
rcll
adc
punpckhwd
sub
lea
je
or
daa
pop
inc
in
mov
in
mov
mov
loope
push
mov
or
mov
lcall
add
hlt
dec
mov
mov
cltd
outsb
daa
jl
xchg
int
dec
enter
pop
icebp
cmp
rcrb
mov
push
sarl
fdivp
or
pusha
sub
je
dec
test
or
inc
loopne
push
call
or
push
mov
xorb
jp
bound
idivl
mov
sahf
jmp
insl
or
sar
pop
notb
push
out
bound
cmp
mul
pop
popf
jne
push
and
xchg
divb
and
andl
gs
mov
pop
mov
outsb
dec
inc
jnp
mov
jp
rorb
sahf
adc
xor
hlt
push
add
icebp
mov
cmpb
jo,pt
pop
ljmp
mov
fcmovbe
dec
xor
outsl
in
add
jno
xchg
mov
sbb
push
adc
stos
in
rcrb
xor
or
testl
insl
cmp
repz
sti
loop
xor
out
push
scas
or
ds
xlat
cltd
loopne
and
jg
mov
dec
test
push
addr16
int
adc
repz
clc
adc
lock
jb
mov
mov
ret
push
repz
in
mov
insl
aas
addb
jp
push
cld
movsl
and
inc
sub
add
or
repz
inc
outsb
scas
ljmp
inc
cwtl
daa
push
das
add
and
movsl
sub
pop
inc
sbb
jle
imul
jle
cli
inc
and
lcall
push
lea
bound
jl
js
mov
dec
aad
or
js
jle
js
cs
call
adc
insb
cmp
sbb
cmp
and
xor
jecxz
and
xchg
push
mov
pop
lret
adc
or
pop
mov
mov
xchg
sub
add
push
fnsave
jecxz
enter
push
popa
cmp
xchg
cmp
jno
dec
dec
xchg
cwtl
or
out
mov
mov
mov
dec
pop
testl
sub
clc
cmp
sar
in
hlt
xlat
add
aaa
push
ret
adc
gs
push
test
sub
loop
adcl
insl
mov
sbbl
pop
mov
scas
ljmp
adc
in
imul
cli
addr16
mov
inc
std
aad
xchg
dec
mov
std
in
sbb
lods
xchg
cmpl
rcll
imul
pop
vpshufd
or
cld
insb
mov
inc
leave
and
lret
pop
cmp
add
push
repz
xchg
ja
adc
add
ja
jle
xchg
call
aam
cltd
jae
sahf
ja
and
insb
jbe
cmp
sbb
xchg
mov
jb
pop
jle
jae
addl
mov
leave
aas
loopne
js
cmpsb
add
loop
dec
das
push
rcrl
or
or
cmpsl
cmpsl
test
fiadds
dec
dec
mov
mov
addr16
add
cld
cmc
fldl
or
fistl
gs
mov
xlat
jne
sbb
push
add
adc
push
lret
dec
mov
push
jnp
adc
fstpt
sub
jno
in
mov
sti
je
sahf
sub
sub
mov
fwait
sub
xor
iret
xchg
shl
add
xchg
std
aas
pop
stos
sar
adc
dec
jnp
lea
push
scas
lfs
fs
rorb
mov
repnz
pop
out
dec
sbb
push
cld
cmp
inc
add
daa
xchg
out
jecxz
sub
pop
iret
adc
shr
xor
scas
lret
rcl
aaa
add
xchg
and
jmp
in
and
mov
mov
jmp
push
aas
dec
jo
test
dec
sbb
jecxz
neg
pop
xchg
bound
fists
cmp
icebp
cmp
test
mov
pop
sub
ss
sbb
stc
pusha
push
adc
notb
imul
mov
adc
arpl
dec
dec
xchg
ja
sar
mov
call
fsubr
lock
pusha
ror
or
test
add
mov
and
or
mov
pop
xchg
xor
fnstsw
push
negl
xor
jbe
push
mov
out
cmp
push
mov
sbb
fisubrl
adc
mov
or
pop
fwait
rorb
cwtl
loop
mov
sub
gs
push
mov
mov
fs
out
sub
mov
and
xchg
and
jp
lock
test
or
shll
push
add
mov
ljmp
and
mov
adc
shlb
das
push
add
dec
adc
push
cmp
lock
loope
or
mov
out
xchg
jecxz
scas
out
ds
pop
and
test
orl
pop
xchg
decb
pop
jb
test
mov
popa
cltd
and
sbb
loopne
stc
pop
repz
fidivs
inc
push
cmp
dec
test
dec
les
lds
enter
movsl
pop
stos
movsb
pop
pop
and
outsb
mov
mov
and
xor
mov
sub
lahf
dec
add
adc
cmp
sub
mov
notb
inc
leave
pop
loopne
popa
in
adc
sub
push
ret
push
jge
shlb
rolb
test
push
out
sahf
push
shll
or
add
cmp
lods
imul
ret
frstor
lahf
cwtl
dec
and
pusha
push
jb
jl
push
imul
push
adc
and
loop
lods
test
inc
mov
xor
pop
std
dec
cld
inc
add
hlt
call
xor
paddsb
xlat
jo
jmp
jp
mov
add
test
addr16
test
scas
and
add
scas
out
gs
adc
pop
pop
xchg
int3
sub
inc
out
lret
cld
mov
in
in
std
shll
js
pop
leave
jecxz
push
cltd
or
mov
pop
in
nop
or
pop
xor
mov
inc
xlat
xchg
dec
fwait
stos
cmpsb
add
aaa
je
popa
fbstp
lahf
pop
xchg
push
outsl
add
in
sub
int
fsubrs
mov
jmp
jno
dec
mov
sahf
das
dec
xchg
aam
dec
xor
inc
stc
dec
out
cli
jp
ss
loope
rclb
mov
jecxz
into
lods
or
out
cmp
cli
jno
int
pop
test
and
pushf
pop
out
inc
or
xorb
jne
ljmp
dec
add
xchg
inc
add
ret
loop
pusha
xchg
xlat
jo
adc
cmp
rcl
push
outsb
fs
sub
roll
fiaddl
out
jnp
pop
push
ljmp
adc
jb
adc
sbb
push
or
mov
movsb
add
aas
push
or
add
std
cmpb
xchg
std
dec
lret
mov
fs
fisubrs
int
test
int
jb
adc
jns
cmp
int3
and
push
test
mov
imul
mov
hlt
pop
xchg
xchg
loop
lea
jecxz
pop
lods
or
in
rorl
pop
mov
xlat
xor
arpl
loope
shll
clc
xlat
imul
lret
adc
in
loop
push
fsubl
lret
or
jae
or
or
xchg
test
test
ss
push
cmp
out
adcb
pop
or
loopne
lret
fists
pusha
or
neg
or
aas
sbb
icebp
push
fcoms
pop
cli
mov
addr16
xchg
lods
adc
mov
mov
add
xlat
movsb
pop
mov
out
xchg
dec
loopne
add
outsl
mov
jb
scas
inc
push
movsl
lahf
scas
cmp
sbb
xor
push
pop
xor
jae
int
lret
lret
push
mov
push
jnp
mulps
ficoml
mov
cmp
mov
enter
pushf
or
loop
lds
xchg
in
jns
push
fnstenv
or
cmpsl
mov
pop
push
pushf
dec
test
shr
jg
mov
mov
icebp
or
popa
popa
roll
xor
mov
or
roll
sub
mov
lcall
mov
pop
dec
inc
adc
adc
push
int3
insb
jo
dec
out
xor
out
gs
and
dec
adc
push
xchg
imulb
ror
add
push
imul
xlat
pop
adc
icebp
lcall
or
dec
bound
imul
jbe
pop
pop
in
enter
shl
mov
ja
xchg
mov
into
adc
mov
xchg
dec
je
es
xchg
xchg
fsubr
scas
orb
outsl
addr16
les
cmc
xchg
ss
cmp
outsl
jo
mov
lds
out
mull
imul
cs
or
in
fwait
mov
xchg
aad
and
push
xor
lahf
int
les
pop
pop
lock
mov
cli
dec
icebp
push
call
cwtl
loope
dec
push
cmp
xchg
aam
jnp
push
hlt
mov
fcompl
daa
popa
sbb
scas
repnz
jo
call
cld
xchg
ljmp
aaa
xchg
in
add
mov
out
xchg
inc
out
mov
inc
jmp
std
inc
shlb
or
scas
enter
lea
xchg
push
outsb
daa
jecxz
adc
pop
mov
inc
repnz
mov
add
or
inc
push
mov
ljmp
popa
shrb
notb
cmp
out
or
inc
push
lock
sub
js
aaa
fs
std
cmp
sbb
mov
xchg
std
adc
xor
pop
fcomi
gs
or
lea
push
push
lret
ss
movb
in
cmp
sbb
je
sbb
cmp
loope
test
jbe
pop
nop
push
pop
xchg
sahf
gs
xchg
xor
scas
lret
mov
cmpsb
or
sarl
push
mov
repnz
imul
loopne
mov
jbe
jno
inc
inc
ljmp
xlat
lods
stc
sub
lods
mov
and
add
mov
xchg
and
xchg
adc
adc
setbe
cli
cli
out
ljmp
push
cmp
sahf
xchg
and
inc
pop
or
push
cmpsb
repnz
and
pop
fldcw
test
lds
mov
je
aad
inc
and
xchg
lret
dec
xchg
mov
je
shrb
sti
jns
dec
int3
jnp
mov
push
dec
jae
cmp
idivb
lods
test
ds
sbb
and
xor
inc
fisttpll
fiadds
test
cmpsl
cmp
sbb
sbb
mov
sub
and
pushf
pushf
pop
jno
mov
es
fadds
mov
and
dec
inc
je
mov
push
call
popf
push
in
mov
insb
fidivl
push
adc
aad
shll
insb
push
sub
sub
shl
std
jp
xor
inc
ret
jbe
xchg
addr16
inc
xchg
xchg
leave
cs
dec
push
fcoms
hlt
pop
ja
mov
xchg
enter
cli
sarl
cmp
mov
cmp
sbb
leave
mov
xchg
adc
xchg
jne
adc
clc
cli
stc
mov
push
into
scas
fwait
clc
sub
mov
dec
lods
ja
mov
xchg
inc
repz
ret
sbb
mov
mov
inc
inc
and
iret
test
pop
imul
sbb
sahf
inc
movsl
push
mov
mov
nop
push
testb
movsb
inc
in
sub
xor
faddl
jno
mov
mov
or
bnd
adc
xchg
sub
push
sbb
mov
int
imul
sbbb
rorb
loop
xorb
pop
ja
addl
pop
mov
mov
sti
dec
test
int3
add
js
and
jne
and
test
mov
fwait
mov
leave
mov
fdivrs
leave
gs
xchg
dec
ret
shrb
adc
cwtl
pop
mov
xchg
sbb
cltd
pop
fwait
lock
cmp
jle
push
mov
xchg
data16
push
rorl
or
mov
xlat
xor
dec
add
ja
cli
repz
jp
mov
sbbb
dec
icebp
or
popf
xor
mov
xor
je
push
jne
mov
cld
mov
out
add
jmp
loope
inc
and
cmpsb
sarl
lods
cld
pop
mov
pop
sbb
lret
dec
in
mov
mov
adc
xchg
xor
sub
or
cmp
cmp
mov
cmp
fldcw
repz
and
mov
pop
dec
jecxz
push
cmpsb
sub
and
push
addb
bound
pop
push
push
sti
rcll
pop
mov
sub
fists
cltd
out
sub
enter
pushf
push
repz
cmp
xchg
and
data16
pusha
mov
sbb
popa
out
movsl
ljmp
mov
mov
or
out
rclb
out
fisubs
or
ret
hlt
xchg
push
pop
add
mov
in
aad
mov
outsl
test
bound
sahf
imul
cltd
dec
dec
and
push
jecxz
in
xchg
pop
lcall
or
pop
cmc
je
lahf
pop
mov
lods
add
inc
mov
cwtl
out
xchg
aad
idiv
cmpsb
dec
add
popa
aad
jnp
daa
inc
flds
popf
imul
das
int
sahf
shll
movsb
fdiv
js
xor
inc
xchg
fsub
mov
test
sub
test
movsb
int3
imul
inc
mov
leave
cmp
add
push
push
popa
ja
mov
lods
add
sub
fcoml
stos
lahf
mov
fisttpll
dec
loopne
pushf
shlb
fsubl
push
ja
mov
jns
out
dec
add
loop
stc
lds
cmp
loope
xchg
xchg
addl
xchg
xchg
out
pop
icebp
data16
test
adc
jmp
mov
mov
xchg
sbb
xlat
enter
mov
mov
push
shll
data16
test
mov
fdecstp
inc
sbbl
sub
mov
xchg
cmp
out
cmpsb
push
icebp
enter
or
sub
and
sub
rcrb
cli
sbb
jge
mov
pop
loopne
sub
mov
pop
jno
daa
push
out
in
add
push
fmuls
xor
cli
jns
js
jp
xchg
pop
mov
and
dec
inc
mov
mov
mov
mov
push
cwtl
mov
mov
xchg
push
divb
fistl
notb
mov
clc
daa
mov
or
push
mov
pusha
push
fcmove
dec
mov
shll
lahf
cmp
xor
mov
cmp
pop
xchg
pop
rclb
mov
test
and
aam
es
insl
stc
push
ja
jp
pop
add
fnstenv
pop
and
lock
mov
sbb
pop
sub
mov
mov
in
dec
orb
sub
addr16
push
fnstcw
movsb
and
push
push
jmp
vpshaw
pmulhw
fmull
push
pop
push
xchg
leave
mov
cmc
xor
sbb
fstpl
xchg
icebp
pop
cli
orl
inc
pop
popf
add
repnz
das
stos
cmp
test
add
lret
test
insl
xor
andb
and
push
sub
xchg
movsb
insl
lea
mov
sbb
push
ljmp
shll
cltd
in
push
nop
push
idivl
aam
mov
dec
into
pop
add
out
scas
sbb
fisubrs
pop
cmp
adc
mov
imul
mov
add
fcomip
cmp
add
stos
adc
mov
pushf
inc
inc
sbb
pop
push
or
xchg
dec
inc
adc
push
sbb
dec
xchg
std
ljmp
iret
pop
das
sahf
scas
stos
jne
nop
mov
aas
sbb
jne
or
out
clc
test
adc
popf
fistl
jbe
cmp
inc
sbb
nop
lods
xor
out
in
insb
mov
inc
mov
mov
loopne
push
pop
or
sbb
out
cltd
ret
inc
shlb
xchg
pop
decb
bound
leave
and
mov
mov
jg
mov
pop
insb
icebp
push
mov
in
je
adc
out
aam
push
rol
shll
test
push
andb
mov
mov
add
iret
sbb
jge
in
mov
sub
xchg
jg
repz
fninit
ss
xor
mov
cmpsl
xchg
push
cli
gs
cwtd
ficoml
pop
adc
xor
outsb
arpl
sbb
rcrl
mov
sbb
fnstsw
ljmp
cwtl
ja
dec
dec
jbe
xchg
push
cmp
or
jb
inc
mov
inc
sub
mov
inc
cmp
fdivp
cmp
jecxz
mov
mov
xchg
rclb
push
dec
adc
rcr
rclb
pop
and
lahf
mov
addr16
outsl
add
data16
or
fwait
mov
je
xor
aad
cmpsb
push
mov
or
clc
negb
cmp
fnstsw
push
ss
mov
dec
mov
movsl
or
xchg
popf
xchg
cmc
mov
adcb
dec
dec
inc
push
or
mulb
jae
aad
pop
sbb
pop
bound
or
pop
loopne
ss
mov
out
and
ljmp
xorl
or
scas
lahf
js
iret
mov
inc
push
aam
aam
mov
or
xor
mov
xor
cmp
jbe
lret
pop
mov
sub
in
cmc
cmc
movsb
dec
sbb
out
sub
lods
sub
dec
mov
loopne
adc
inc
mov
in
mov
or
mov
inc
ja
stc
fistpll
movsb
and
adc
push
inc
jg
mov
or
or
dec
adc
mov
push
jmp
enter
mov
jnp
and
adc
push
in
jbe
cmp
dec
adc
xchg
sub
outsl
jns
and
inc
pop
xchg
out
das
pop
bndldx
cmp
mov
popf
addr16
hlt
dec
out
ss
and
cmp
mov
shl
xor
mov
pop
mov
imul
outsb
xchg
into
sbb
je
repz
test
notl
sti
lcall
dec
push
sbb
pop
mov
pop
sti
mov
cmp
or
inc
adc
mov
mov
aad
cmc
xor
xchg
aas
dec
mov
sbb
adc
sarb
mov
pop
cmp
mov
jecxz
xchg
push
jmp
lods
and
xchg
mov
lea
inc
and
push
pop
jb
adc
loopne
dec
jp
push
movsl
into
and
repz
scas
ror
xchg
jmp
and
or
xchg
jmp
xor
cmp
add
dec
mov
lret
mov
pusha
div
cwtl
imul
sti
add
lods
cmp
add
jae
sbb
iret
add
xchg
pop
mov
aas
hlt
js
pop
cmpsb
dec
rcl
repnz
outsb
add
inc
dec
movsl
cmp
cld
ja
xchg
mov
mov
cmp
xor
sbbb
out
pop
roll
mov
xchg
add
inc
jmp
shrb
xchg
push
xor
cmp
mov
push
sub
sub
mov
sbb
add
sub
std
adc
loop
and
pushf
cmp
call
jmp
dec
jge
jo
or
pop
xchg
sahf
stos
mov
sub
mov
cltd
inc
jl
push
cmp
mov
nop
imul
fisttpll
and
cmp
sbb
das
cli
mov
dec
dec
je
sub
cmpsb
pusha
cli
repnz
pop
sub
loop
ja
imul
jb
test
iret
cmp
cs
jo
mov
cmp
or
add
jge
xchg
push
lods
xor
pushf
das
int3
int3
lods
imul
ret
fwait
push
mov
mov
mov
pop
push
jge
xchg
ja
mov
je
mov
cld
movsb
and
lea
stos
int3
sbb
pop
xchg
stos
sub
sub
jbe
call
mov
pop
push
in
nop
fsubr
push
addr16
push
mov
cmp
dec
sti
ror
movsl
test
jge
xchg
insb
lret
ds
adc
inc
xor
pop
jp
lret
leave
cmpsb
pop
push
push
pop
fsts
imulb
movl
mov
jnp
jl
psubsw
lcall
repz
icebp
pop
pop
jle
dec
push
xor
fninit
insb
xchg
and
shr
mov
pop
and
add
sub
stos
jbe
sub
inc
jb
adc
push
cmp
clc
mov
pop
outsl
sub
sbb
jmp
push
pop
stos
mov
mov
push
xchg
push
mov
rorl
fstpt
int
fisubs
push
jge
inc
push
loop
xchg
nop
jle
dec
movsb
data16
and
imul
pushf
adc
xchg
scas
cwtl
nop
pop
sub
push
cmp
pushw
in
sahf
sbb
les
mov
lea
inc
and
rcr
loope
dec
stos
mov
jno
jecxz
inc
lret
push
and
aas
jmp
ljmp
jge
out
xor
sti
repnz
sub
loop
adc
cmpb
mov
and
mov
insb
add
jl
cmp
sub
push
inc
cmp
cmpsl
sahf
out
nop
sti
cmc
mov
mov
test
add
ja
test
mov
dec
mov
mov
adc
jmp
les
xchg
scas
mov
ftst
jne
push
out
push
pop
fcoms
xor
mov
popa
jecxz
stc
mov
mov
shll
adc
push
scas
xchg
inc
add
push
ljmp
inc
rorl
ds
sbb
aam
pop
loope
std
inc
adc
daa
mov
or
dec
lods
fnsave
mov
sub
mov
xorl
mov
cmc
fsubrs
jns
xor
xchg
mov
stos
gs
jl
pop
and
adc
in
popa
push
aad
mov
stc
pop
test
pop
fistpll
scas
push
popa
aam
pop
mov
or
ss
push
xchg
cli
loop
add
rclb
hlt
mov
das
in
sub
mov
pusha
gs
inc
jo
jne
xor
inc
cmp
pop
or
push
in
jecxz
xor
into
mov
sub
dec
mov
fidivrs
out
inc
aaa
mov
push
xchg
fwait
push
dec
cmp
fidivrl
scas
sub
cmp
call
push
gs
and
test
loope
sbb
mov
adc
ss
sub
mov
xor
fucomi
loope
test
lret
inc
jg
subl
xchg
out
mov
ret
xorl
add
cmp
push
dec
jmp
andl
stos
sbb
jns
cltd
push
mov
loope
outsl
loope
push
adc
addr16
aam
les
fcoml
pop
pushf
movsl
aad
push
out
fnstcw
inc
ret
xchg
jp
lds
nop
mov
fcomps
into
inc
push
in
xchg
sbb
addr16
aaa
sbb
mov
fidivl
cmp
and
pop
es
jmp
push
std
push
imul
ja
add
imul
imul
add
test
loope
mov
inc
lret
movmskps
notl
addb
fdivrl
jne
scas
push
fwait
mov
int
out
outsl
or
lds
test
or
loop
jp
aam
jmp
mov
lcall
repnz
mov
je
push
inc
jno
push
xchg
popf
sub
inc
addr16
inc
lods
cld
sbb
xor
push
clc
mov
int3
jae
lcall
sbb
mov
inc
jb
mov
jae
xor
popf
push
pop
out
mov
ja
adc
jb
mov
pop
hlt
push
and
clc
pop
mov
cli
div
sahf
mov
dec
out
add
pushf
or
mov
mov
fidivrl
cmp
inc
in
call
aas
outsl
outsl
inc
and
jne
adc
xchg
gs
push
loop
add
pop
mov
xlat
push
cltd
pop
mov
sub
outsl
aaa
sbb
mov
lods
insb
das
repnz
clc
pop
les
adc
leave
jmp
and
dec
add
inc
loop
ds
xor
cmp
and
mov
outsb
xor
shl
mov
xchg
adc
or
push
scas
or
xchg
inc
inc
xchg
ds
loope
imul
push
fadd
fbstp
mov
mov
sarl
jbe
repz
mov
shrl
push
sub
sub
push
scas
cmp
or
addr16
ljmp
inc
fsubl
repz
shrb
je
sub
stos
xchg
jb
aas
jne
mov
jno
sub
sbb
adc
cmpsb
pushf
pop
and
movsl
push
das
fs
out
add
hlt
push
cmpsl
out
shlb
jne
scas
lcall
cwtl
rorl
das
lahf
gs
xlat
in
pop
mov
fstps
hlt
ret
jae
adc
addb
sbb
mov
addr16
mov
or
mov
or
pop
inc
test
and
xorb
rcrl
adc
cltd
adc
sub
fidivl
inc
mov
mov
mov
dec
or
sub
sbb
pop
clc
mov
jge
aaa
iret
sub
icebp
test
mov
jbe
ror
jno
push
inc
xchg
or
xor
cmp
test
fldenv
push
push
stos
shrl
in
pop
push
pop
cltd
hlt
mov
insl
jg
add
sbb
mov
sbb
sti
fstpl
sbb
add
ds
test
xchg
jbe
sbb
pop
mov
xchg
mov
ja
sub
int3
jmp
fsubl
cmp
sete
je
mov
ljmp
or
cmp
or
adcb
add
add
dec
jns
movsb
aad
push
xor
inc
pop
sahf
jge
mov
mov
pushf
shrl
ljmp
dec
dec
cli
xor
jle
add
push
leave
pop
repnz
popa
outsl
cmp
cmpsb
or
or
in
fxch
repnz
repz
xchg
push
add
dec
dec
icebp
dec
jecxz
leave
and
pop
mov
shl
movsb
mov
aaa
push
add
outsb
mov
ucomiss
xchg
ljmp
push
scas
mov
outsl
faddp
neg
push
sub
stc
das
out
push
inc
xor
stc
inc
aas
loop
data16
adc
int3
fs
adc
pop
sbb
or
xor
daa
gs
fwait
push
or
insl
and
cmc
or
gs
jne
negb
fwait
mov
xchg
sbb
shl
xor
mov
ret
dec
shll
pop
sub
jmp
mov
mov
push
rolb
test
pop
sub
xor
mov
add
notl
ja
aas
jno
add
xchg
repz
fstpl
ret
das
add
sub
dec
or
and
mov
aas
cmp
pop
sbb
movsl
dec
and
and
je
jne
xchg
or
icebp
pushf
jge
sbb
adc
lahf
ret
test
or
nop
cltd
and
mov
test
mov
or
int3
jne
sub
xchg
dec
lcall
xchg
push
jle
and
mov
lea
dec
loop
mov
lods
xor
inc
push
mov
ret
cmp
popf
call
jle
or
mov
scas
stc
stos
frstor
inc
es
in
into
subb
subl
in
outsl
sti
inc
imul
push
imul
mov
jbe
sbb
data16
sbb
fistpll
mov
daa
xchg
sahf
rcrl
add
add
mov
xchg
inc
cld
lods
call
add
xor
lock
mov
sub
add
jbe
or
and
push
test
pushf
sbb
xchg
add
cmp
jb
jecxz
add
in
dec
sub
sbb
mov
push
inc
or
int
js
je
cmc
mov
mov
xor
inc
jno
rol
out
xchg
ss
sbb
loope
negl
mov
leave
in
leave
es
fs
loope
mov
aas
stos
lret
mov
xchg
mov
pop
mov
into
cli
out
sbb
adc
jmp
je
sbb
ljmp
adc
mov
imul
inc
xchg
rclb
add
xor
mov
cmpsb
pop
ret
xlat
aad
rcll
and
nop
test
lods
inc
aam
mov
xchg
test
out
not
shll
and
stos
cmp
es
mov
pushf
pop
sti
test
and
pop
pop
cmp
repnz
fwait
out
adc
and
lods
nop
lods
rcrb
cmpl
in
push
stc
icebp
mov
jnp
jmp
nop
inc
xchg
aam
and
mov
ds
xlat
adc
test
repz
cmp
mov
gs
xchg
mov
and
icebp
jns
adc
out
enter
adc
loope
out
lods
lds
in
pop
daa
adc
iret
and
add
mov
add
jae
stos
sahf
cmp
out
shll
jne
jmp
mulb
sbb
loope
out
inc
lods
aad
mov
mov
fsubrl
stos
imul
es
pop
adc
mov
jnp
xlat
inc
icebp
hlt
push
jbe
mov
insl
xchg
cmp
pop
push
jno
sub
push
pop
inc
xchg
nop
mov
mulb
lods
mov
cmp
es
test
sahf
in
xor
iret
sub
aad
stos
mov
imul
mov
xor
jne
pop
out
dec
or
mov
jge
aas
int
std
pop
xchg
iret
adc
por
xorl
inc
aam
pop
rolb
dec
adc
fwait
pop
aas
ljmp
pop
fdivr
hlt
and
push
push
es
rorl
mov
das
daa
cmp
cltd
xchg
mov
stos
xlat
mov
pop
push
mov
dec
inc
xchg
aam
cmpsl
hlt
or
into
call
pop
je
outsb
and
or
loope
iret
pushf
insl
insl
and
dec
push
push
and
test
or
xchg
jecxz
push
mov
into
outsl
push
popf
lret
aad
aam
jp
xchg
je
lock
pop
aaa
and
int
lret
unpcklps
dec
mov
xor
xchg
sub
out
inc
in
subb
push
cmp
in
sub
xchg
pop
cmpsl
aad
insl
mov
js
aam
jb
es
idivl
sti
imul
stc
outsl
dec
mov
hlt
xchg
lcall
and
cld
nop
lea
mov
popf
adc
jge
mov
xor
rcrl
cmpsb
push
sub
aas
push
mov
data16
inc
ljmp
in
cmp
mov
pop
enter
in
and
hlt
stc
cmpsb
outsl
adc
xchg
mov
push
xor
jmp
inc
push
jbe
int3
movsl
or
fldcw
loopne
fs
rorb
clc
aad
or
dec
cmp
jecxz
cltd
loop
fadds
mov
popf
loop
ljmp
pop
mov
rol
icebp
int
pop
ret
xchg
int
xchg
and
cli
mov
dec
ljmp
add
movl
cli
jge
popf
nop
mov
cmp
xchg
icebp
dec
xor
in
sub
mov
mov
aas
stc
cli
cmpsl
andb
data16
push
push
jmp
lods
ja
cmp
popa
test
dec
leave
cld
aam
sarb
xchg
lock
or
push
and
mov
jmp
xor
fbld
dec
mov
cmp
int3
icebp
push
mov
test
mov
cmpsb
shlb
inc
aam
outsb
and
or
out
push
cmp
stos
lcall
fstl
paddusw
cmpsb
xor
add
sub
dec
xchg
and
jb
das
das
and
push
pop
cli
aam
insl
sbb
dec
inc
stos
ds
or
sub
mov
cmc
mov
vrcpps
mov
insl
push
adc
imul
icebp
add
rcrl
mov
lahf
xchg
dec
daa
xchg
adc
test
pushf
jge,pt
mov
pop
aad
mov
push
cld
add
subps
loop
aad
adc
mov
pop
sarb
pop
xchg
and
cmp
and
lock
mov
push
sbb
icebp
push
xchg
xor
stc
dec
mov
or
test
stc
xchg
in
mov
pop
sbb
cmp
mov
lret
push
push
add
mov
dec
add
pop
shl
in
call
push
das
mov
add
int3
pop
addl
lock
cmp
xchg
pop
or
bound
cltd
mov
cmp
scas
inc
ja
test
xchg
addb
pop
xor
mov
lahf
mov
adc
cli
sbb
ret
fucomi
dec
pop
into
or
rorb
dec
ljmp
js
rcrl
ss
adc
jecxz
movsb
mov
daa
in
sbb
mov
cld
shrb
sub
aam
test
mov
addr16
loopne
push
out
stos
insb
out
sub
xchg
data16
xor
in
pop
cmp
xchg
xchg
scas
mov
out
ja
sbb
testb
out
int
aam
andb
push
fistl
cmpsl
push
inc
out
jbe
sub
or
scas
js
xor
inc
cli
pop
or
outsb
jmp
lret
bound
mulb
fs
fiadds
fisubl
lahf
cmp
adc
inc
adc
inc
lret
xchg
mov
out
jl
sub
cmp
shlb
push
fisubrl
push
loope
or
mov
and
inc
mov
sbb
rol
sahf
in
out
out
imul
jg
sbb
stos
fistps
sub
pop
imul
clc
arpl
mov
adc
and
xchg
fwait
inc
xchg
ljmp
push
xor
mov
loopne
stc
mov
mov
sbb
lcall
bound
sarb
and
pop
xor
std
mov
fnstcw
stc
or
push
or
mov
js
or
and
stos
xchg
push
sbb
or
decb
inc
inc
stc
push
loop
cmp
insb
fists
pop
jo
mov
pop
or
mov
push
pusha
xor
aad
fmul
cmp
add
sti
ds
cmpl
adc
push
mov
and
xchg
xchg
adc
mov
add
sbb
mov
ljmp
ret
movsl
and
ficoml
add
daa
cmp
xor
lds
and
lea
sbb
popf
daa
jecxz
lcall
or
rcll
pop
aas
lret
fimuls
mov
aas
ror
out
pop
sbb
xchg
xchg
mov
divl
lret
jp
lods
stc
je
jno
inc
iret
mov
cmpsl
lret
push
repnz
adc
push
mov
aaa
mov
jo
mov
adc
cmp
add
jp
or
rcrl
mull
xchg
addr16
jge
cmp
jl
lret
lods
mov
push
shll
dec
pop
ss
shlb
pusha
inc
mov
mov
or
xchg
aas
xor
fdivl
jae
out
fiaddl
mov
outsb
inc
mov
les
add
mov
add
fdivp
xor
dec
jne
pushf
ds
cmp
decl
inc
std
mov
push
mul
mov
dec
dec
test
lcall
mov
jmp
mov
int
sbb
ret
xchg
enter
out
and
push
mov
andb
add
popl
push
ret
jle
je
inc
imul
insb
and
inc
pop
xlat
xchg
dec
in
cmp
lret
rorb
cmpsb
icebp
test
arpl
xchg
in
mov
into
sti
bound
sti
ja
fcoml
jl
jae
xchg
fmul
pop
lahf
xchg
push
loope
lahf
cmp
sub
dec
push
icebp
push
stos
in
mov
call
dec
jns
inc
cmp
arpl
roll
or
mov
fildl
ja
pop
stos
add
js
push
pushf
adc
xor
and
mov
dec
mov
arpl
cmp
loope
clc
mov
arpl
jle
sbb
sbb
in
lods
xor
out
mov
lret
into
push
mov
test
stc
jae
push
test
out
xchg
mov
xchg
jmp
jg
ljmp
mov
sub
scas
add
int
adc
pushf
mov
jecxz
jge
jle
xor
fmuls
sbb
pusha
mov
lds
int3
adc
lods
cli
jb
dec
data16
dec
jecxz
xchg
jno
mov
addl
mov
into
test
js
sti
xchg
and
jo
mov
sub
fdivr
sbb
cwtl
jnp
pop
push
xor
hlt
cmp
jmp
dec
pop
jo
xor
inc
cld
pop
fimull
adc
cmp
jge
jnp
in
imul
lods
ss
jmp
insb
adc
in
sbb
dec
mov
aad
xor
into
cwtl
jg
sbb
xchg
cmp
mov
xchg
out
cli
fisubs
adc
adc
adc
outsl
xchg
lret
gs
sbb
imul
cmp
and
sub
movsb
dec
sahf
mov
insb
lea
jno
enter
push
ja
xorb
addr16
out
sti
mov
aas
push
and
xor
xchg
inc
push
test
and
adc
adc
movsl
pop
dec
mov
out
xchg
loopne
mov
add
mov
jg
mov
mov
call
push
mov
jo
aas
popf
call
jns
dec
test
xor
pusha
mov
cmp
jb
jo
push
sub
inc
pop
mov
cmp
pushf
fisubrl
xor
movsl
fldl
in
jns
sbb
jp
imul
sub
push
mov
adcl
sahf
mov
jnp
push
fdiv
jo
mov
adc
pop
jmp
cmp
xor
icebp
inc
subb
out
cli
out
jb
sub
xchg
lcall
addr16
nop
les
jno
mov
dec
into
cld
mov
mov
inc
cmp
cmp
push
idivl
call
jo
insb
scas
sub
push
lods
int3
call
insb
pop
xor
pop
pop
cmpsl
mov
aaa
and
cltd
lds
sbb
arpl
add
cs
gs
push
or
xorl
xlat
pop
idivb
ja
imul
in
sarl
rcrl
fisubl
inc
bnd
insl
pop
ret
push
xchg
push
push
pop
ljmp
sub
add
addl
pop
dec
subb
inc
test
repz
je
pop
xchg
lods
push
roll
dec
js
ss
test
cwtl
mov
adc
rcr
add
inc
movsb
pop
loop
int3
test
lods
js
xchg
push
sbb
sbb
arpl
jmp
add
fimull
xchg
hlt
imulb
hlt
out
adc
aas
je
jo
lods
fwait
mov
icebp
jecxz
mov
hlt
fistpll
push
popa
imul
mov
sbb
cmp
mov
adc
inc
jge
data16
leave
icebp
pop
jge
mov
icebp
fldt
jns
lods
insb
sqrtps
mov
add
dec
imul
and
mov
das
adc
lds
addr16
pop
add
adc
or
sub
xor
addl
inc
xorps
loopne
mov
add
or
ss
inc
aam
jecxz
jl
mov
insb
sbb
imul
imul
movsl
pop
outsl
popa
inc
inc
push
fistl
sub
dec
mov
lods
sbb
pop
pop
std
jge
xor
mov
rcl
mov
add
insb
jmp
mov
sub
outsb
sub
aad
adc
fistpll
or
test
mov
test
xchg
out
loope
insb
int
mov
xlat
xor
or
call
inc
jae
xchg
fwait
aam
pop
xor
enter
adc
or
mov
sahf
int
stos
mov
enter
mul
in
mov
push
cli
pop
pop
dec
ja
mov
push
inc
pop
mov
jle
adc
test
cmc
adc
nop
sbb
test
push
cmpsl
mov
xor
add
fnstcw
std
cld
js
pop
imul
cmp
sub
cmp
hlt
pusha
jno
inc
fmull
fisubrs
popf
add
add
mov
xor
out
pop
lcall
test
fsubrl
and
jno
rcll
pop
jmp
jo
mov
mov
push
xchg
fimuls
jge
mov
push
push
cmp
insb
loop
dec
jle
pop
pusha
push
lods
sbb
or
and
sbb
iret
pop
mov
sar
movsb
xor
aam
aaa
cmp
in
fwait
xchg
cmc
jo
inc
ret
xor
mov
mov
dec
iret
push
sub
xchg
jbe
into
sbb
mov
sbb
sarl
adcb
hlt
hlt
outsb
fldenv
or
xchg
ds
add
mov
clc
pop
pop
and
in
xchg
cmp
repnz
aad
mov
mov
jno
rcr
call
push
ret
lds
stc
fwait
out
xlat
decl
sub
test
int
in
mov
idivl
pop
enter
cmpl
push
cli
imul
mov
add
xlat
lock
fwait
out
rcrb
mov
mov
test
xor
add
mov
xchg
dec
stc
in
cli
or
negb
push
fs
inc
fisttpll
pop
sbb
add
test
test
push
addr16
in
lods
or
scas
pop
out
icebp
clc
repz
fldcw
jno
push
aam
add
mov
lret
add
inc
aad
jno
das
push
push
stos
in
mov
adc
or
pop
enter
mov
mov
mov
add
jb
dec
movsl
push
mov
pop
clc
or
mov
dec
scas
std
scas
int3
jmp
fistpl
shll
inc
xchg
addr16
inc
cltd
cmp
and
sbbb
mov
and
cmp
jmp
repz
imulb
sub
test
sti
dec
vandnps
mov
mov
in
xchg
mov
outsb
add
fistps
movsl
jp
test
test
mov
test
dec
jns
cmp
pop
aad
mov
and
push
imul
addr16
mov
bound
dec
sbb
sub
xchg
in
xchg
jmp
out
in
cmp
addr16
popl
fimuls
and
add
test
int3
out
enter
negb
movsb
roll
movsb
dec
jns
adc
outsl
dec
into
rorl
or
test
test
cmp
bound
cli
or
add
inc
cmpsb
xor
ljmp
popf
xlat
subl
fldenv
dec
mov
call
mov
mov
add
xor
fs
sbb
xor
sub
push
adc
cmc
xchg
mov
add
push
jg
outsl
fisubs
mov
shlb
jp
scas
jno
in
jae
daa
loop
mull
fcomip
mov
mov
dec
jge
out
xchg
or
pop
popf
je
mov
and
dec
sbb
xor
cli
frstor
pop
push
shlb
andb
pop
push
sbb
add
mov
push
add
add
adcb
mov
cmpsb
stc
inc
es
push
inc
push
cltd
je
mov
mov
into
sti
call
and
sbb
scas
push
out
mov
icebp
cmp
loope
mov
mov
jl
ds
mov
xchg
fiadds
pop
insb
xchg
or
jo
and
stos
ret
xchg
scas
fmull
arpl
mov
push
pusha
sub
dec
and
dec
or
loope
xchg
shlb
cmp
cmc
mov
loop
mov
shl
cld
pop
cmp
cmpl
xor
jne
insl
daa
cmc
cmpsb
test
mov
rcrb
seto
stos
jg
sbb
sti
ret
dec
xor
adc
ljmp
movsl
ja
sub
sub
xor
orl
stos
test
clc
iret
shl
mov
int
adc
test
fadd
fcomi
cmp
xchg
or
and
js
xchg
lods
mov
addb
and
insl
add
sti
dec
cmpsl
push
dec
std
cli
ja
mov
mov
addl
cmpsb
and
jne
push
not
fwait
and
jge
cmp
dec
add
lret
cmp
ljmp
cmpsb
lret
pusha
gs
pop
ljmp
iret
and
loope
nop
adc
mov
xor
mov
push
sbb
lcall
cmc
idivb
cs
and
int3
es
dec
inc
icebp
pusha
into
mov
or
testb
inc
popf
in
mov
adc
pop
dec
dec
js
xchg
and
inc
lods
pop
subb
mov
xchg
or
xchg
aam
sub
loop
sti
sub
loop
pop
sbb
out
cmp
fildl
scas
cmp
inc
clc
stc
cs
xor
push
push
mov
inc
push
and
jmp
outsb
outsb
mov
mov
sbb
or
sub
xlat
pop
add
ficoml
adc
add
andl
iret
call
xchg
xchg
jle
adc
stc
dec
mov
mov
sbb
pop
push
mov
xchg
dec
inc
push
and
jl
push
xor
push
xlat
sbb
iret
sub
cmp
dec
and
loope
dec
scas
mov
or
xor
xchg
xor
inc
or
or
sub
scas
das
popa
fs
push
mov
movsb
mov
inc
xchg
in
scas
pop
pushf
jecxz
into
and
adc
mov
cli
pop
push
rclb
nop
xor
aam
push
out
pushf
sub
xchg
test
or
xchg
out
jns
out
andl
jnp
mov
jg
cmpsb
pop
pop
push
add
pop
dec
cmc
loope
lods
adc
scas
jp
mov
out
das
or
mov
jle
mov
and
sarb
adcl
push
mov
pop
pop
mov
jbe
xchg
adc
outsl
mov
and
pop
mov
xor
push
add
lret
dec
cmpb
lods
cmpsl
xlat
jbe
mov
fiadds
sub
mov
push
cli
cmp
jg
je
test
push
lea
ficompl
mov
xor
in
adc
mov
lret
dec
add
in
fstpl
shrb
les
xchg
push
sbb
ficompl
ror
mov
adc
movsl
ffree
lcall
lret
jg
push
xlat
pop
lea
jbe
push
jp
movsl
mov
out
dec
adc
push
sbb
dec
pop
iret
sub
jne
cmpsl
xor
push
sub
mov
sub
ret
jecxz
cwtl
and
stc
cmpsl
scas
aaa
push
insb
xchg
mov
jbe
or
jb
push
pop
std
push
dec
cli
push
clc
mov
sub
ret
imul
add
push
outsl
ror
out
jb
push
rorb
aas
loopne
jge
dec
mov
inc
or
stc
call
pusha
sbb
je
shlb
out
jle
pop
mov
and
xor
push
mov
mov
pop
sbb
ret
incl
sub
lret
lods
or
dec
into
lods
jmp
mov
repz
push
adc
aad
fdivrl
in
jb
ficoms
in
loope
stos
stc
dec
push
adc
rcrl
sarb
inc
mov
mov
test
fdiv
mov
test
cmp
mov
push
es
mov
cli
jge
rorb
inc
push
lcall
sub
xlat
outsl
mov
sti
jg
inc
inc
or
lret
jb
dec
test
jge
mov
mov
mov
inc
test
imul
xlat
lea
sub
jmp
pop
pusha
and
xor
inc
adc
test
lock
test
mov
mov
cmp
dec
aaa
dec
xor
or
in
or
cmp
lock
daa
aam
scas
sti
pop
xchg
fwait
js
subl
jae
sbb
dec
js
decl
inc
lds
stos
jne
mov
out
divb
pop
xchg
mov
xlat
pushf
and
mov
div
fstl
int
test
mov
jecxz
cmp
inc
add
stos
inc
scas
movsl
icebp
lret
imul
popf
xchg
call
jle
jmp
sub
cmc
xor
rcrl
imul
pop
in
jmp
mov
mov
and
mov
dec
lock
xor
mov
add
jns
inc
mov
enter
push
inc
stc
dec
push
push
mov
lcall
dec
xchg
mov
add
mov
push
daa
or
leave
dec
mov
mov
jno
lcall
xor
imul
ret
xchg
mov
and
jg
adc
enter
fcomps
mov
lahf
shlb
mov
sub
inc
adc
mov
cmp
es
lret
hlt
popa
push
js
push
pusha
jbe
andb
repz
pop
orb
dec
pop
pop
outsb
pop
fldln2
aas
jb
mov
pop
test
int3
nop
sub
xlat
sbb
outsl
pop
pop
jg
push
inc
ficompl
xor
inc
jb
mov
inc
cmp
shl
xor
pop
cmc
mov
in
pop
pop
or
sarl
arpl
inc
sub
iret
das
popa
pop
and
daa
ds
pop
pop
xchg
push
pop
and
push
orl
negb
outsb
fisttpll
and
test
push
js
lods
shlb
sub
das
and
push
leave
movsl
push
or
fwait
inc
stc
dec
js
xor
cmc
or
push
in
mov
dec
xlat
lds
rorl
and
cwtl
lods
xchg
pop
pop
mov
insl
cwtl
aaa
lods
xchg
les
subl
test
pop
xchg
imul
incb
lret
mov
imul
test
sbb
dec
hlt
fnsaves
jbe
sub
jle
inc
loop
ret
cmp
jne
lock
push
dec
call
inc
gs
call
test
fisttps
pop
mov
int3
out
mov
xlat
outsl
fldenv
test
mov
sti
pop
jecxz
aaa
push
sti
xchg
push
mov
daa
int
sbb
push
or
into
jbe
aam
or
icebp
popa
test
mov
jmp
push
pop
int3
bnd
and
sbb
pop
mov
mov
mov
loop
lret
cmc
lret
mov
enter
xchg
scas
out
push
aaa
mov
cmpb
call
dec
or
adc
repz
xor
sahf
inc
or
xorl
jge
dec
cmp
sub
bswap
dec
mov
xchg
xchg
lds
lods
adc
lcall
mov
sahf
xchg
dec
dec
xchg
dec
orl
mov
ret
cmp
ds
out
or
aas
adc
jno
xor
adc
mov
das
fisttps
dec
test
loop
mov
sbb
mov
pop
movsl
and
jle
out
mov
ret
mov
cmp
movsb
test
or
and
xchg
xchg
aam
or
jg
addr16
or
test
les
out
pop
sbb
mov
lcall
sbb
faddl
fnstenv
xor
loop
cmp
stos
or
inc
ret
cmp
scas
jmp
and
xchg
lcall
and
jmp
xchg
in
shll
adc
fs
in
jmp
mov
addr16
jge
incb
movsl
dec
mov
pushf
orb
add
mov
push
sub
aam
test
dec
and
rcl
arpl
test
inc
mov
mov
leave
xorl
test
ret
push
xchg
out
and
call
fsubs
sub
stos
ret
je
push
or
call
rolb
popf
jmp
scas
pop
push
push
mov
xchg
jb
jle
dec
out
mov
into
mov
xchg
cs
lcall
scas
aad
sbb
pop
lock
aam
dec
or
arpl
repz
lods
and
or
aaa
cwtl
and
fldt
aas
push
hlt
mov
xor
or
fwait
jg
inc
inc
push
icebp
sub
jle
xchg
out
push
sub
jnp
cmp
sahf
test
xchg
add
out
testl
adcb
sbb
mov
aaa
jno
into
jae
mov
fcmovnb
rol
repz
sub
add
mov
test
ficompl
jl
sub
mov
jnp
sub
fsub
stos
lahf
ret
xchg
adc
loope
aaa
xor
outsl
cmpl
mov
ret
pop
aaa
stos
sbb
repnz
cs
insl
insl
adc
clc
jne
dec
cmp
or
ret
aaa
xor
mov
dec
mov
cmp
imul
sbb
push
lcall
andb
rcll
out
pop
les
jnp
jmp
jbe
insb
jb
lock
and
jecxz
fcoml
jle
mov
jo
inc
fisttps
dec
inc
push
ja
xchg
sub
xchg
bound
jo
xchg
xchg
push
mov
pop
pcmpeqd
pushl
loop
or
ljmp
movsb
push
xlat
daa
in
xrstors
popa
adc
js
pop
mov
pop
shl
inc
mov
and
sahf
imulb
out
outsl
sub
jns
and
dec
xchg
jmp
cld
lcall
inc
pushf
mov
es
sub
ds
xor
in
jle
aam
inc
pop
ret
jecxz
out
mov
add
in
jo
push
nop
mov
xchg
dec
div
dec
xchg
scas
out
inc
and
adc
mov
icebp
test
or
push
sub
stos
dec
dec
nop
subb
repnz
daa
push
test
cmp
mov
push
shr
int
movb
push
js
hlt
out
mov
jb
jecxz
push
dec
inc
aas
inc
int3
add
pop
pop
jl
lods
cltd
add
fwait
jbe
or
sub
in
fsubrl
jae
popf
fsubs
loopne
xchg
jno
and
fimull
mov
inc
arpl
mov
adc
cwtl
fsub
and
push
inc
xor
pusha
or
aas
xor
addr16
mov
sbb
or
les
dec
pop
jo
mov
lods
add
into
shll
sub
and
imul
jno
add
xor
sub
out
fildll
push
xchg
sarl
push
out
adc
pop
and
outsl
stos
jl
jg
cmp
mov
cli
push
dec
lcall
inc
cltd
call
adc
pusha
dec
ds
orl
cmc
clc
xchg
sbb
inc
cmpsl
out
push
push
movl
mov
les
mov
jno
push
scas
push
icebp
call
outsb
xchg
and
push
es
and
add
rcrb
lods
adc
int
ret
adcb
aam
sti
in
aaa
aam
popf
push
dec
pop
push
pop
and
dec
dec
es
outsl
sahf
mov
jl
int
sub
xlat
das
stos
xor
ss
push
cmp
mov
aad
xchg
sub
push
movsb
mov
fistps
mov
pop
mov
sub
insb
gs
jne
dec
scas
sbb
inc
iretw
pop
ljmp
mov
lea
cli
mov
ds
sub
push
std
imul
addr16
int
ret
jo
push
inc
add
aaa
out
fadds
sub
cmp
jno
loopnew
pop
leave
nop
andb
shrb
aad
cmp
out
in
insb
pushf
or
sub
mov
in
mov
jmp
out
rcr
mov
in
lea
mov
and
lahf
dec
push
out
inc
sti
mov
pop
out
pop
adc
pusha
addr16
sbb
cmp
sbb
lret
aad
les
inc
xor
test
popf
adc
imulb
mov
jbe
xchg
insb
dec
xchg
mov
cmc
popf
pop
outsb
insb
hlt
ds
adc
xchg
cmc
or
popa
bound
into
shll
add
and
pushf
cwtl
push
push
jae
push
fldenv
insb
ret
fdivrl
jns
dec
dec
fwait
inc
stos
xchg
push
jne
xor
sub
mov
call
xor
jmp
sbb
push
jae
jbe
lods
roll
push
push
stos
xor
ljmp
fidivs
dec
subb
sbb
mov
xlat
or
mov
mov
into
xchg
mov
lods
mov
ret
add
jle
and
leave
push
repz
popa
pop
arpl
js
xchg
je
sbbb
or
aam
pop
or
cmpb
xchg
movsl
and
add
lods
es
xor
and
jle
clc
xor
jge
iret
lods
incl
cmpsl
adc
leave
lret
xlat
gs
int3
add
jge
faddp
push
sub
inc
cmp
adc
loope
mov
jno
add
js
xchg
icebp
cmp
push
add
das
mov
les
mov
inc
movsb
xor
jp
push
dec
fsubr
jo
stos
out
insb
sbb
mov
lret
imul
stos
mov
lods
leave
push
fst
and
inc
sahf
fiadds
call
out
adc
mov
repnz
jl
test
jnp
add
fisubl
inc
out
xchg
jmp
add
cmp
test
mov
lods
mov
test
pop
cmovb
cwtl
jno
dec
xlat
add
xor
mov
cmp
or
inc
pop
add
push
scas
xchg
dec
je
sub
push
cmc
cwtl
jl
pop
shl
fnstenv
sbb
fs
in
int
loop
mov
nop
or
icebp
inc
xchg
cmpsl
sti
adc
pop
push
jns
or
mov
test
aaa
and
cld
adc
add
pusha
adcl
and
outsb
lock
aaa
mov
addr16
xchg
push
mov
push
sbb
xor
into
add
out
cmp
mov
and
mov
ffree
scas
push
mov
mov
sub
test
sbb
movsb
add
or
fs
daa
xchg
imul
push
sbb
sub
pop
js
lahf
fadd
data16
popf
into
push
mov
out
stos
movsb
or
test
shrl
clc
addl
ja
testb
mov
shll
cli
ss
mov
popf
imul
je
loopne
cld
mov
out
mov
push
mov
xor
cltd
mov
xchg
pop
les
int
movsb
je
out
jno
mov
sbb
mov
inc
inc
imul
stos
sbb
mov
push
and
lret
ljmp
mov
repz
pop
jge
mov
cwtl
int3
push
inc
inc
std
aas
sbb
jmp
arpl
lahf
fimull
orb
mov
cli
pop
jecxz
iret
arpl
pusha
mov
pop
cmp
mov
lds
das
lea
sub
mov
sub
and
jo
pop
mov
cmp
or
out
ljmp
sub
adc
mov
xchg
xlat
mov
pop
adc
pop
jecxz
ffree
and
pop
ja
mov
outsl
ret
sub
icebp
fwait
mov
inc
push
cmp
jns
test
jb
inc
fstl
fs
mov
push
inc
adc
sbb
ljmp
lcall
or
and
popf
repz
xchg
fidivrl
pusha
fsubs
lods
xchg
data16
out
pop
xlat
es
xchg
push
lcall
enter
outsl
mov
lcall
xchg
jg
push
enter
add
andb
adc
out
test
inc
call
lret
mov
aam
clc
fistpl
leave
movsb
imulb
jg
cmp
cmp
mov
cmc
call
mov
and
ja
rcrl
jmp
dec
adc
xchg
shll
inc
cmp
ficomps
cmp
inc
jno
mov
call
xchg
outsl
sbb
mov
and
shll
cld
movsl
insl
sahf
push
or
aad
adc
lods
sbb
xlat
push
mov
in
out
aam
subl
call
call
add
enter
inc
sbb
cmp
adc
mov
ret
ret
mov
pop
cmp
das
mov
repz
js
or
daa
add
inc
pop
cmp
xlat
mov
push
shlb
mov
lcall
ljmp
icebp
out
dec
pop
cltd
adc
sbbb
stc
and
dec
add
inc
dec
loope
repz
xor
mov
xchg
jl,pt
insb
adc
cmp
es
jne
xor
and
inc
scas
xchg
cwtl
adc
or
or
sbb
push
add
mov
sub
subb
pop
jae
cld
lcall
sbb
sub
cmpsl
dec
ja
cmpsb
outsb
idiv
fimull
jmp
imul
in
cmp
data16
mov
mov
ja
xchg
mov
imul
shlb
loope
cs
inc
aas
fmull
je
mov
cmp
dec
push
test
mov
insb
mov
push
inc
sbb
imul
in
add
push
test
jne
lret
sub
adc
popl
test
inc
mov
nop
testb
arpl
sbb
mov
sahf
mov
xor
mov
or
adc
ss
in
push
out
sbb
stos
sbb
jmp
insb
jbe
jae
aas
xor
add
or
fwait
js
sti
mov
leave
imul
adc
cmpsb
mov
cmpsl
fsts
pmullw
popw
mov
in
dec
add
mov
scas
es
or
adc
inc
loopew
mov
pop
pop
lcall
addl
pusha
out
pop
push
mov
xor
dec
cld
mov
and
mov
adc
loop
adc
mov
ss
icebp
mov
mov
xchg
outsl
pop
daa
pushf
pop
mov
hlt
dec
lret
jg
jmp
insb
cmp
adc
or
sbb
mov
outsl
mov
stos
inc
sub
sub
lds
dec
sub
div
iret
cld
test
push
mov
mov
sub
xchg
sbb
xor
insl
in
js
cmpsb
or
pop
push
jecxz
sub
fnstsw
out
je
cmp
test
in
loop
ficoml
inc
mov
cmp
sbb
imul
pop
mov
add
jmp
int
pop
pushf
pop
insl
cmc
out
sbb
sub
cli
int3
mov
mov
inc
ss
jecxz
pop
leave
add
mov
mov
sbb
inc
cwtl
dec
orl
mov
push
pop
push
lods
mov
jne
sub
add
fs
in
fldl
dec
int3
lods
loope
mov
pop
add
jmp
ret
cld
subl
adc
pushf
lahf
push
loope
cli
loop
or
loope
jecxz
mov
add
inc
push
cwtl
in
clc
test
adc
cwtl
mov
sbb
cmp
test
push
call
sub
xchg
xlat
or
xor
pop
jo
ja
jg
or
test
add
iret
jbe
movsb
popa
call
inc
addr16
mov
ljmp
pop
push
jnp
sub
fs
xor
fwait
inc
mov
xchg
loopne
cwtl
inc
mov
lahf
inc
cmp
movsl
mov
xorb
mov
dec
idiv
xchg
mulb
and
mov
imul
pop
out
add
mov
fmuls
mov
leave
mov
je
test
mov
dec
sbb
shr
xchg
lock
sbb
or
jbe
mull
lds
xor
out
adc
andl
cld
add
stos
ret
shll
mov
loope
mov
mov
test
inc
jecxz
es
movsl
js
mov
mov
push
fimull
aaa
cmp
push
pop
xchg
inc
cli
sub
out
repnz
mov
daa
cmp
dec
adc
pop
shrl
das
int3
push
std
mov
mov
sub
inc
je
lods
sti
dec
pop
out
xlat
adc
jmp
push
ja
lret
test
scas
xchg
cmc
outsl
pushf
push
js
test
dec
sub
sti
pop
jmp
jecxz
mov
mov
sub
pop
push
add
or
pop
rcll
ret
xchg
pop
mov
push
movsl
jno
movsb
cmpsb
xor
mov
dec
clc
mov
mov
pop
nop
outsb
and
les
pop
lods
cwtl
push
lods
xor
mov
adc
push
inc
adc
les
repnz
mov
fildll
ljmp
add
mov
sbb
inc
cmpsb
idiv
pusha
mov
out
into
lea
dec
dec
fimuls
jmp
pop
inc
aad
mov
xor
adc
xor
mull
sar
dec
jle
outsb
insl
orb
and
lcall
cmp
inc
mov
lea
std
repnz
sub
outsl
push
repz
sub
sub
jle
enter
mov
enter
daa
xchg
inc
call
les
cli
cltd
repz
cli
xchg
sahf
xchg
imul
mov
fsave
or
pmaxsw
jns
pop
in
add
xchg
jp
scas
sti
xchg
ret
adc
xor
aas
ds
xchg
outsl
out
xchg
xor
lahf
cmp
mov
xor
pop
movsl
fcompl
out
ljmp
inc
and
cltd
subl
dec
adc
or
push
lret
daa
gs
pop
or
arpl
sbb
adc
push
push
add
stc
sbb
lds
std
cmpsl
push
or
sahf
mov
xchg
test
push
ret
xchg
mov
pop
pop
xlat
lcall
xchg
or
in
inc
mov
imul
mov
ss
mov
push
fs
mov
mov
cmp
mov
movb
inc
xchg
icebp
xchg
enter
dec
or
outsl
cmpsb
cmpsb
lret
fnstcw
cs
out
lea
rcll
sahf
inc
fiadds
dec
sub
and
adcb
xchg
add
lahf
aaa
loop
lods
push
xchg
stos
fiadds
inc
add
call
dec
idivl
shlb
pop
cmpsb
xchg
mov
xor
adc
push
adc
add
dec
mov
push
inc
js
call
popa
cwtl
jmp
test
sbbl
push
pop
lods
out
dec
ficoml
sti
rcll
arpl
sbb
inc
gs
fstpl
out
int3
xchg
adc
outsl
in
jp
out
mov
jmp
ljmp
mov
or
ret
orl
push
rcll
test
dec
loope
sub
lcall
orb
test
jg
movsb
pusha
cmp
adc
mov
stos
iret
lds
add
scas
sti
xchg
fnstenv
jo
cmpsl
arpl
rol
jmp
dec
inc
das
aas
sbb
das
mov
dec
cmpsb
xchg
inc
sti
jbe
imul
imul
mov
mov
and
and
sti
inc
push
xchg
adc
xor
fadds
push
je
out
jo
je
sub
cmp
test
push
call
cwtl
mov
shll
cmc
mov
push
rcrl
jle
cmp
cwtl
andl
outsl
mov
pop
mov
das
xchg
outsl
pop
mov
ficoml
ljmp
jae
sub
mov
ja
add
pop
icebp
jo
mov
lret
sub
sub
lcall
stos
cld
test
pop
lock
loopne
adc
inc
xor
add
iret
inc
adc
xchg
jbe
rorl
mov
dec
mov
sub
mov
sahf
fmuls
pushf
iret
pop
mov
cs
mov
adc
mov
movsb
push
sub
stos
mov
lret
xchg
push
lock
inc
mov
ljmp
xchg
dec
lcall
mov
push
mov
inc
arpl
lret
inc
js
push
mov
push
pop
sub
fldcw
repnz
cmp
ror
jmp
mov
sbb
sub
outsl
and
fimuls
mov
push
movsb
mov
xor
jge
notl
mov
xchg
out
xor
xchg
dec
inc
cld
pop
and
cs
jns
cmp
and
jae
insb
addr16
xchg
jge
cmc
mov
pop
fistps
shlb
movsl
or
fwait
xor
jmp
jbe
out
ljmp
and
iret
mov
adc
pop
pop
jnp
insb
xor
push
pushf
fists
add
jnp
outsb
mov
cli
mov
loopne
dec
mov
mov
xchg
ror
fdivrs
pop
out
cmp
cmp
shlb
add
dec
addl
add
call
repz
icebp
out
jb
mov
pop
dec
xchg
test
inc
xor
add
aam
ds
fistpll
stc
scas
dec
es
test
adc
test
pop
cmpsb
xchg
lret
adc
cmp
inc
popa
cmp
inc
mov
aas
mov
rorl
inc
in
dec
outsb
and
lods
bound
jle
sub
mov
xchg
mov
sub
dec
inc
sub
sbb
out
xchg
jp
jmp
inc
stc
pop
jae
inc
mov
lahf
add
or
pop
cmp
rorl
xor
sub
or
addl
call
mov
mov
mov
mov
jl
xor
push
clc
sbb
or
adc
outsl
rcrb
dec
and
int
mov
fistps
rcll
inc
repz
cmpsl
add
cltd
push
add
iret
push
daa
aas
repnz
push
push
mov
vandnps
xchg
sub
push
jns
stc
aad
inc
sub
jmp
jl
or
mov
push
loop
sahf
lods
push
in
pop
imul
xchg
sub
jp
sub
shll
sarl
dec
jecxz
mov
cmp
sbb
lods
insb
sti
sti
mov
lock
push
imul
push
cmpsl
movsl
movsl
push
mov
or
inc
mov
out
mov
or
insl
cmp
cmpsl
out
test
inc
fnstsw
push
cmpsl
loopne
and
mov
pop
mov
inc
in
xor
in
scas
mov
call
xor
and
jnp
cltd
adc
mov
jl
cli
icebp
sti
insb
test
mov
xchg
pusha
lods
movsl
rcll
mov
pop
ja
imul
adc
cmp
push
mov
out
pop
mov
adcb
mov
repnz
pushf
pop
hlt
adc
push
lret
xlat
loop
lock
inc
mov
xchg
pop
ficoms
pop
cmp
jnp
mov
mov
call
inc
mov
cmp
pusha
mov
mov
shll
sbb
xor
fs
push
inc
shll
pop
jo
cmpsb
ret
in
outsb
fcomp
adc
in
ds
jae
xor
loopne
in
pop
hlt
int
stos
push
xchg
ret
or
mov
popa
sub
jne
ror
iret
mov
hlt
cs
cs
dec
sbb
adc
sbb
jp
jge
sub
fiadds
xchg
pop
sub
sub
lock
ret
movsl
xchg
test
mov
rolb
out
pop
adc
js
aaa
push
and
mov
inc
mov
fldl
push
insl
cmp
fstl
out
cmp
stc
das
sub
test
cltd
sbb
cld
fwait
pop
out
dec
xor
ret
sbb
jp
bound
arpl
ja
sbb
push
pop
cmp
cwtl
loopne
in
inc
jle
cmp
outsl
inc
pop
push
aaa
test
adc
pop
in
mov
fcmove
push
push
dec
sahf
mov
js
sub
mov
clc
mov
stc
stc
mov
aam
mov
dec
push
int3
movsl
ret
lret
jns
out
out
popf
imul
sarb
mov
test
cld
push
jno
push
dec
adc
es
shl
or
stc
les
popa
jl
roll
fcmovne
dec
xor
inc
sub
movsb
movsl
loope
movsb
mov
into
mov
sbb
js
push
xor
xchg
sbb
and
xchg
sahf
repz
xchg
push
lret
inc
adc
mov
adcb
adc
jns
jmp
dec
std
inc
movsb
mov
mov
adc
int
lret
rcl
repz
negl
stos
or
loop
gs
push
push
test
loop
ja
popa
and
jo
fsubl
push
addr16
mov
and
lock
xchg
lahf
icebp
mulb
fistpl
inc
popf
xchg
pushl
sbb
test
inc
xchg
out
cmp
push
jmp
sahf
sbb
fsts
out
pop
or
sti
stc
cld
dec
push
jmp
ja
scas
jae
jns
fwait
or
mov
imul
cli
fwait
xchg
jmp
imul
daa
jno
add
int
push
repnz
fiadds
pushf
negl
adc
mov
and
cmp
leave
rcrl
add
call
pusha
sti
xchg
xor
in
add
es
lock
mull
xchg
stc
and
sti
out
cmp
push
outsl
aas
ret
test
xor
cmp
jmp
fsubr
mov
das
xchg
jns
sub
dec
rorl
hlt
iret
dec
dec
test
xor
jge
or
inc
mov
push
pop
les
mov
testb
out
dec
cmpsl
mov
pop
enter
mov
or
cmpsb
ja
scas
insl
mov
out
push
dec
mov
testb
mov
sub
lcall
mov
pop
adc
mov
popf
mov
jge
or
mov
daa
cmp
sbb
add
fcmovne
int3
mov
test
popf
sbb
test
icebp
cmp
xchg
xlat
jecxz
mov
in
adc
and
adc
cmp
lods
sarl
inc
out
pop
jmp
or
adc
jle
lret
add
lahf
imul
or
or
imul
xchg
sub
int3
pop
push
xor
dec
addr16
xchg
les
xchg
test
mov
pop
sub
jle
dec
dec
popa
push
testl
hlt
sahf
and
cs
sbb
push
push
je
push
in
pop
lcall
call
ret
aad
int
pop
jg
or
add
insb
insl
lods
push
inc
mov
jno
stos
out
lds
sbb
shrb
testb
mov
push
sbb
add
mov
vandnps
dec
movsb
dec
pop
lcall
mov
pop
pop
pop
cltd
aaa
mov
scas
add
fwait
jmp
icebp
xchg
jl
je
inc
lret
sti
jne
cmp
std
jb
xor
push
scas
scas
and
cmp
insb
inc
or
out
insb
xor
xchg
mov
inc
nop
insl
or
or
loope
push
out
mov
aam
and
xchg
fidivrl
pop
int3
lcall
fld
add
mov
cli
push
pop
mov
lcall
stos
jmp
or
sub
push
pop
and
xchg
sti
dec
and
sahf
scas
bound
fsubrp
movsb
lea
fcoml
ja
lds
inc
mov
test
xchg
xchg
imul
data16
pop
jne
pop
xchg
jo
div
fcmovb
add
dec
dec
push
jecxz
pop
popf
adc
subb
ljmp
scas
sti
mov
dec
pusha
test
stos
movsl
sub
decb
or
out
pop
add
in
mov
push
jo
lahf
pop
sbb
ret
mov
push
inc
nop
jmp
jmp
xchg
cmp
movsl
lea
out
dec
sub
xor
pusha
and
sti
xorl
out
pop
sub
mov
js
int3
add
jge
cmp
out
test
cld
popf
jns
rol
pop
notb
insb
or
adc
sub
cmpsl
pusha
cmp
sub
xchg
push
push
loopne
lret
push
mov
fcom
pushf
js
pop
es
fmull
dec
mov
sbb
xchg
mov
cmpsb
jg
gs
ror
test
cmc
dec
cmp
cmp
out
mov
dec
lods
mov
repnz
xchg
or
rolb
sub
inc
jb
shr
cmp
jmp
jmp
ss
xor
mov
ljmp
imul
xchg
test
test
adc
and
out
in
in
fbld
adc
rcrl
and
mov
dec
and
cwtl
push
dec
pop
sub
sbb
cmp
pop
cli
add
xchg
sti
cmp
std
inc
shl
dec
cmovno
js
daa
test
sbb
xor
inc
jmp
dec
ds
out
bound
addr16
sar
sbb
push
dec
ret
imul
arpl
inc
outsb
sub
imul
inc
movsb
jl
arpl
mov
rorl
in
dec
sahf
push
dec
jmp
outsb
cs
sub
pop
jae
aam
test
inc
loop
insl
push
loop
xchg
adc
dec
mov
cmpsb
stos
and
scas
add
fsts
scas
nop
out
pop
xor
or
and
adc
xor
cmp
lods
pop
jmp
dec
cmp
cltd
lods
idivb
xchg
cmp
out
out
push
jge
adc
rol
repz
std
je
movsl
cmc
andb
mov
sub
adc
cltd
fsubp
fldl
movsl
andb
mov
imul
jae
shrl
xchg
mov
mov
fstpt
shlb
in
xchg
test
mov
mov
sbb
aam
and
rclb
or
jno
pop
dec
sbb
inc
jmp
or
iret
dec
push
xchg
push
sahf
jge
cmp
stos
sti
push
lcall
xor
pop
fidivrl
clc
int3
add
popf
add
dec
xor
jmp
stc
cld
addr16
cmp
movsb
aam
rcrl
cmpsb
or
push
imul
ja
sbb
pop
dec
loope
cmc
in
add
cmc
xor
or
inc
or
and
add
sub
shrl
push
dec
pop
ds
jecxz
shll
push
xchg
jno
stos
dec
cmp
pushf
xchg
sub
sub
add
jb
enter
jmp
lret
cmp
cltd
in
mov
aam
pop
jp
hlt
imul
add
pop
js
mov
jmp
pusha
sub
stos
jle
or
jmp
or
pop
imul
mov
xchg
jmp
and
or
cmpsb
or
sub
aaa
mov
movsl
pushf
adc
and
jnp
cld
cmp
push
mov
xchg
test
into
sbb
sbb
xor
xor
cli
inc
mov
mov
add
dec
add
sub
push
out
add
pop
adc
push
cmp
xor
or
add
pop
lock
and
adc
push
push
aas
push
std
jns
in
aad
jns
pop
pop
inc
mov
clc
in
and
add
xchg
ja
mov
lods
add
lods
dec
std
shlb
loop
mov
push
push
xchg
xchg
pop
jle
mov
and
es
in
imul
loop
faddl
repnz
sbb
xchg
hlt
dec
jmp
outsb
xor
dec
es
outsl
fisubrl
mov
jmp
shlb
mov
data16
or
push
add
pop
jns,pn
mov
lahf
ficoms
push
nop
jmp
and
scas
test
test
std
jne
sbbl
and
sub
jle
and
roll
mov
mov
loop
sub
add
inc
inc
enter
mov
mov
addr16
mov
pop
mov
sbb
mov
add
dec
mov
in
sub
push
mov
sbb
inc
mov
mov
outsb
pop
movsl
loop
pop
shl
cmp
cmpsl
dec
popf
fsubrl
mov
xorb
outsl
jl
and
pop
jmp
fwait
ljmp
pusha
lods
clc
rol
iret
andl
inc
sub
popf
lods
push
fidivl
movsb
loopne
sti
test
and
loopne
pop
pop
sub
movsb
pop
mov
pop
jnp
pop
inc
dec
push
scas
imul
jle
in
lret
jno
cmp
push
cmp
cmpsl
inc
out
outsb
jmp
clc
popa
and
sti
adc
cmpsl
shll
std
cmp
mov
scas
mov
mov
push
loope
ss
mov
and
pop
mov
subl
mov
xchg
rcrl
sub
jmp
pushf
clc
inc
jno
adc
push
sti
lods
or
push
addb
mov
and
sbb
stos
rcl
out
sbb
mov
mov
pop
lods
das
daa
xchg
icebp
pusha
sub
jae
push
xchg
es
and
jmp
test
cmpsl
arpl
mov
outsb
jmp
cmp
xlat
insl
jecxz
xchg
mov
push
mov
dec
jns
xchg
cmp
filds
dec
mov
xor
test
push
jb
inc
test
lock
mov
aad
fld
sbb
ja
mov
ja
adc
dec
xchg
les
mov
incb
inc
pop
scas
shrl
inc
pop
jg,pn
mov
mov
mov
aad
fwait
leave
in
jae
ss
add
add
sub
xor
adc
xchg
test
inc
test
and
mov
test
in
loopne
out
in
push
sub
repnz
xchg
scas
mulb
fisttpll
cltd
fmull
or
mov
push
xchg
filds
jbe
stc
mov
jne
andb
rcrl
ret
xor
int3
and
jge
loopne
adc
lcall
jg
xchg
jo
xchg
out
push
mov
inc
cmpsl
testb
fcmovb
mov
rcl
decb
mov
insl
ret
lods
ds
ja
stos
jle
ljmp
lcall
cmpl
sub
stc
inc
xlat
mov
mov
xchg
mov
xor
andb
mov
xor
xor
inc
inc
jbe
lock
ret
cs
pusha
movsl
or
jno
push
inc
push
cmc
stos
inc
fidivrs
pop
cmp
mov
cmpsl
add
xchg
inc
or
lcall
je
dec
cmpsb
test
lea
add
fisttps
jg
cmpb
sbb
jl
cmp
mov
mov
stc
xchg
push
pop
cmp
adc
push
les
xor
pop
xor
cmp
idivb
add
cmp
fst
pop
inc
shll
mov
adc
nop
add
pop
pusha
adc
adc
call
mov
stos
arpl
jp
je
mov
pop
dec
sbb
sbb
jle
sub
pop
or
or
or
push
movl
jge
es
test
into
pushw
lods
cmc
pop
rclb
jne
dec
data16
stc
push
cmp
and
dec
or
sarb
sub
int3
clc
jg
inc
data16
ret
mov
dec
add
mov
into
pop
shll
xchg
out
pop
mov
fld
mov
jnp
cld
hlt
xchg
xchg
add
fstpl
or
aas
test
jne
sbb
xor
test
inc
stos
add
cmpb
sbb
sbb
leave
out
xchg
adc
movsb
mov
iret
sub
imul
scas
jbe
and
mov
sub
fstpt
test
rcll
cmp
push
scas
or
mov
add
into
nop
fwait
dec
outsb
mov
mul
lock
ds
mov
pop
cmpsb
pop
mov
sbb
cli
bound
mov
jl
mov
jb
lods
mov
push
lahf
out
ja
pcmpeqd
outsb
frstpm(287
out
push
out
mov
clc
orl
jp
sbb
adc
jb,pn
das
repnz
jmp
shll
mov
xacquire
aad
lock
fwait
sbb
mull
mov
sub
pminub
mov
pop
dec
adc
cmp
xchg
or
dec
sahf
push
enter
xlat
jle
insb
test
loopne
or
fs
xchg
in
inc
sbb
mov
fisubs
and
sbbl
push
push
ds
mulb
scas
orb
pop
out
xor
inc
rolb
ja
add
mov
push
xor
mov
lret
leave
sbb
push
int
push
scas
cltd
in
fwait
mov
lds
sahf
movsb
gs
mov
sub
lret
pop
xor
jns
push
cmc
push
cmp
jecxz
fisubs
pusha
and
and
mov
jecxz
dec
dec
aad
lds
test
dec
or
in
sub
in
ljmp
cmpl
or
mov
and
inc
cmp
add
aad
sbb
shl
aaa
and
sbb
or
jns
mov
mov
mov
das
inc
repnz
insb
inc
pop
out
add
arpl
imul
xorb
jge
mov
mov
fsubl
jne
pop
or
pop
push
in
daa
mov
cmpxchg
cmp
mov
sbb
cld
scas
pop
es
daa
dec
leave
ret
js
lret
mov
lds
and
mov
mov
cmp
mov
inc
movsl
push
pushf
mov
mov
mov
mov
popf
std
add
cmp
lret
jge
xchg
pop
xorl
dec
ss
fists
stos
adc
cli
pushw
rorb
jnp
jbe
in
ljmp
pop
in
dec
mov
inc
mov
dec
xchg
inc
sbb
mov
cmp
cli
scas
in
jne
stc
call
pusha
cmc
pop
nop
add
stos
lcall
das
into
data16
popa
stos
pop
cmpsb
adc
pop
fsubs
fistps
cli
das
outsb
sbb
mov
or
jl
push
jo
mov
lods
int
push
icebp
inc
ret
test
sub
call
cmp
pop
sbb
cmp
and
mov
dec
mov
dec
insl
arpl
decb
mov
push
sub
mov
fcomps
push
mov
loop
into
lock
and
xor
sbb
mov
inc
shll
add
mov
jl
out
fiadds
in
jne
mov
cli
sbb
fwait
adcb
stos
jb
ja
xlat
xchg
fnstcw
jle
int3
push
negb
jnp
jg
enter
push
popf
and
adc
insb
sub
adc
inc
movsl
add
mov
and
dec
jmp
gs
mov
ror
loop
iret
enter
inc
inc
mov
or
mov
sbb
call
or
mov
xchg
xor
ljmp
jecxz
inc
ds
xchg
push
ljmp
mov
or
xchg
cmpsb
and
imul
cmp
in
xchg
push
inc
pop
jle
pop
lret
sub
nop
aaa
cmpsl
imul
popa
lcall
fstpt
fildl
shrl
sbb
push
push
loop
fdivrl
cmp
push
test
mov
jb
push
call
insl
add
loopne
int3
mov
outsl
inc
cwtl
and
pop
add
xchg
in
std
cltd
xchg
mov
loopne
shll
cwtl
mov
or
lock
aaa
xor
rcr
les
xor
cmpsb
xor
add
push
sti
jb
cs
jb
add
int3
sbbl
ja,pt
push
popa
jns
nop
addr16
mov
lock
sbb
mov
dec
pop
jns
jp
loopne
mov
and
ret
adc
pop
enter
dec
ljmp
or
mov
test
lock
push
adc
sub
repnz
mov
dec
push
dec
inc
xchg
cmp
mov
push
or
push
cmp
cmc
rcrl
rcrb
test
rclb
push
xchg
push
mov
xchg
push
pop
pop
aam
daa
mov
cmp
rcrb
mov
mov
lret
fnstenv
cwtl
mov
stos
fisttpl
movsl
scas
push
in
sbb
loope
mov
fildll
push
mov
push
mov
insb
pop
out
lods
imul
cmp
sbb
sbb
xchg
jp
pop
into
or
xor
in
sbb
push
fisttpl
add
fildl
js
dec
mov
mov
mov
fiadds
lods
sbb
mov
mov
outsl
xchg
lock
sbb
test
inc
loop
movsb
outsl
adc
lcall
xorl
pop
inc
sahf
ror
pushf
lea
dec
sub
dec
xchg
sti
jbe
sbb
ficompl
je
jne
popf
xor
or
push
fdivs
inc
xchg
push
leave
aas
sub
loope
jle
ds
mov
ficompl
cwtl
out
xlat
add
or
jns
inc
xor
ja
icebp
mov
test
ret
mov
xchg
addr16
inc
shrl
scas
xor
jge
add
jbe
insb
xchg
mov
mov
fnstcw
es
cmc
cltd
shll
dec
fdivrs
pop
sahf
push
jae
adc
addl
sbb
pop
mov
mov
insl
test
jne
pop
jno
sahf
xchg
repz
mov
add
sbb
imul
fnstsw
data16
mov
pop
pop
adc
mov
pusha
cltd
clc
in
cwtl
call
jae
daa
sarl
push
push
iret
ret
mov
stos
sbb
aam
daa
int
push
pop
lock
sbbb
mov
cmp
or
jecxz
pslld
xlat
loopne
sbb
iret
notl
arpl
loop
push
mov
xchg
adc
sub
outsl
pop
inc
adc
test
dec
mov
movsl
or
dec
jbe
sbb
push
insl
pop
cmpsl
xor
stos
mov
jb
xor
aas
ret
or
imul
test
cwtl
xlat
gs
xor
std
ja
fs
jg
inc
jp
cltd
mov
clc
test
movsl
rol
cmp
fildl
or
lds
mov
xchg
xchg
and
mov
mov
or
mov
pop
add
mov
into
sub
imul
add
push
mov
loopne
mov
fldenv
cwtl
movsb
adc
xchg
andb
pop
mov
lret
cmp
cmp
sub
fwait
mov
xchg
cmc
adc
flds
xchg
movsl
xchg
mov
or
leave
or
pop
jecxz
mov
rorb
mulb
and
fdivs
push
add
inc
fistl
xchg
in
fidivs
notb
sbb
inc
push
cmp
nop
xchg
mov
xor
decb
std
add
sahf
xor
popa
jp
lea
inc
adc
add
insb
cwtl
cmpsb
jge,pt
hlt
pop
lret
shr
imul
jecxz
or
cmp
mov
pusha
cmp
push
test
mov
push
jae
out
xchg
mov
push
mov
out
lret
mov
lds
inc
ljmp
or
mov
adc
ds
jp
or
mov
cmp
cmp
aaa
lea
mov
mov
insl
std
mov
adc
dec
adc
repnz
jnp
fwait
jecxz
sbb
inc
push
imul
and
dec
push
test
aad
adc
and
outsb
mov
cwtl
fisubrl
movl
outsl
fdivr
push
cmp
mov
adcb
adc
cmp
jmp
cmp
xor
adc
ret
xor
mov
jae
sbb
cmpsb
adc
adc
iret
lock
add
int3
pop
gs
pop
andb
xchg
movsl
sti
add
jl
insb
inc
xor
test
scas
pushf
xor
sbbl
arpl
sub
mov
or
mov
inc
add
stos
dec
xlat
ret
inc
dec
xchg
cmp
ficompl
cmpsb
pop
adc
jmp
add
and
cmc
test
out
call
adc
sbb
pop
popa
add
out
shrl
pushf
insl
xor
in
jae
movsl
pop
jge
fisubl
mov
bound
lcall
test
mov
cltd
jnp
and
fwait
push
fnstcw
aam
cmp
mov
xlat
sbb
inc
cs
testb
jmp
xor
pop
jno
dec
in
rclb
lods
fbstp
sbb
pop
scas
movsl
rclb
hlt
aam
xchg
test
testb
lret
outsl
test
sub
adc
jg
es
outsb
jg
outsl
outsb
frstor
push
movsb
das
sti
pop
repnz
dec
cltd
xchg
dec
mov
sub
sbb
mov
ss
in
xchg
cmpsl
cmp
xor
jo
push
push
jmp
push
sbb
sbb
faddl
or
hlt
ja
jns
popa
cmp
jo
popf
mov
cmp
sbb
ret
lahf
pop
cld
mov
mov
stc
lods
leave
jg
push
out
ljmp
or
sub
ss
insb
cs
addl
adc
ljmp
fwait
test
sbb
dec
aad
cmp
and
into
mov
into
lods
cmpsb
sub
push
nop
rcll
adc
add
std
scas
dec
dec
mov
pop
out
jle
in
test
mov
ror
or
fiaddl
sub
sarl
out
xchg
jg
and
retw
or
in
adc
dec
pop
mov
hlt
sub
adc
mov
adc
mov
js
add
inc
and
sahf
inc
sub
jge
out
aam
lahf
jl
insl
test
lock
sahf
xchg
int3
push
cmpsl
xchg
aam
pop
cltd
ret
jne
mov
and
roll
cmp
mov
dec
fstpt
pusha
mov
dec
je
into
mov
lea
sub
daa
icebp
mov
and
push
mov
hlt
popa
mov
fwait
jge
cltd
sub
xchg
cmp
rclb
xchg
mov
inc
rorl
cmp
sbb
out
repnz
or
mov
add
inc
xor
in
call
pushf
xchg
lret
rcrl
in
fnsave
adc
mov
cli
pop
movsb
lret
sbb
dec
cmp
mov
mov
cmpsl
shl
cs
outsb
out
sub
rorb
ret
icebp
rolb
mov
cmp
adc
jp
ds
push
test
sub
jae
icebp
mov
dec
ljmp
cmpsl
jg,pt
add
jns
dec
in
mov
add
in
push
lret
mov
hlt
push
stos
mov
movzbl
jg
and
jp
int
mov
push
push
pusha
sbb
add
push
jb
shlb
mov
mov
add
cltd
out
adc
pop
pop
insb
sub
mov
adc
test
lcall
ror
xchg
fstpt
inc
stc
scas
pop
subb
pop
pop
pop
or
jb
fnstenv
xchg
xchg
cmp
and
stos
jbe
adc
sti
and
daa
in
sahf
sarl
in
adc
add
inc
cmp
in
inc
lods
out
xlat
inc
pop
ret
lahf
push
mov
jecxz
adc
aam
xor
sbb
test
xor
leave
adc
sub
data16
xor
add
ret
ljmp
pop
into
test
movsl
shrb
jmp
and
pop
mov
popa
repz
mov
vfrczps
lds
add
in
xchg
fdivl
movsl
cld
cmpsb
sahf
insl
pop
mov
lods
fs
test
xlat
negl
mov
pop
repnz
out
mov
add
addr16
sub
loope
push
push
sub
inc
out
decl
or
or
add
movl
cmc
lds
stc
ficomps
ljmp
shl
loope
adc
push
mov
adc
jle
mov
xchg
arpl
mov
sub
adc
pusha
imul
nop
fdivrp
out
loop
fidivrl
mov
or
sbbb
sbbb
add
pop
cwtl
inc
icebp
clc
rclb
push
test
or
leave
push
adc
inc
nop
add
xchg
iret
popf
dec
jecxz
jbe
test
gs
pop
imul
mov
pop
pop
lcall
sbb
or
lea
adc
sarb
inc
dec
nop
loopne
mov
repz
mov
pop
rcr
adc
out
sarl
fstps
inc
mov
cmpsl
mov
dec
xchg
fldenv
mov
adc
jge
mov
lahf
mov
mov
repnz
or
add
iret
movsl
cmpsb
mov
dec
xchg
xor
cltd
int3
adc
adc
pop
in
dec
jns
cmc
ret
sub
subb
cs
push
dec
ja
clc
pusha
aam
sbb
fstpt
jp
insb
pop
mov
pop
rclb
cmp
lcall
in
test
es
sarl
pop
sti
stos
cmpsl
push
fscale
sbb
dec
int3
pop
pusha
or
push
dec
push
and
add
data16
sub
xchg
mov
testb
xchg
push
in
cs
push
mov
shlb
or
sub
push
adc
dec
dec
insb
mov
lcall
int3
cmp
mov
leave
cmp
insb
in
testl
out
jg
mov
jne
jp
pop
daa
push
xchg
jmp
jo
enter
push
stc
hlt
scas
cmpsl
addr16
push
inc
mov
mov
xchg
cmpsb
dec
sub
xchg
adc
fldenv
cltd
add
movsb
jle
inc
mov
lea
push
jnp
adc
aam
adc
enter
stc
aas
das
xchg
fldenv
cmpsb
adc
scas
and
fwait
xor
sti
mov
dec
mov
mov
inc
leave
jne
pop
subl
je
xchg
sbb
xchg
dec
mov
jmp
sbb
gs
or
inc
or
mov
push
std
xor
shrl
outsb
sub
xor
rcrl
and
iret
dec
inc
mov
mov
aad
and
aam
push
sarb
jecxz
pop
or
xor
or
push
sbb
add
xchg
and
push
stos
out
js
mov
je
aad
jecxz
dec
cwtl
cmp
jp
add
xor
dec
cwtl
outsl
adc
push
pop
jg
popa
cmpsl
inc
pop
rcrl
mov
inc
bound
nop
pop
mov
xchg
das
bound
or
jg
movsl
int
push
sbb
and
sub
pop
add
mul
rcll
mov
jle
negl
or
cmc
inc
pop
es
and
xchg
mov
insb
mov
jge
pop
js
gs
xchg
cltd
inc
inc
je
jecxz
inc
sub
xor
lock
sti
movsb
jp
xchg
sub
pop
je
add
cmp
xor
addl
je
cmp
and
cmp
out
daa
dec
stos
nop
repnz
lahf
ljmp
xor
pop
inc
xchg
scas
mov
add
or
lret
sub
mov
movsl
xchg
cmc
mov
inc
xchg
xchg
je
or
mov
xchg
rcrb
mov
mov
jns
lahf
call
mov
pop
mov
pop
cmp
aas
add
inc
scas
daa
hlt
jbe
stc
imul
xchg
push
iret
sbb
in
movl
in
cli
inc
mov
mov
push
push
sbb
movsl
push
lahf
sub
inc
push
lahf
push
out
xchg
jmp
push
pop
aaa
setle
pop
inc
sbb
add
test
xor
and
cmp
and
loopne
pop
xchg
xchg
mov
ret
rcr
fbstp
scas
xor
xlat
xlat
test
jp
cmp
fstl
fwait
jne
movsl
mov
adc
adc
lahf
out
test
sahf
ss
jno
and
lds
jecxz
mov
inc
add
dec
xorb
sub
sbb
or
lcall
adc
cld
adc
cmp
jle
push
enter
movsl
mov
nop
aaa
mov
shlb
push
repz
dec
mov
stos
setge
insl
sbb
adc
cli
mov
fstl
jo
stos
mov
mov
jnp
cmp
fmuls
clc
popf
adc
aad
mov
jns
adc
decb
out
lea
push
or
dec
lds
dec
adc
scas
jnp
pushl
dec
nop
sbb
jle
decb
pop
or
arpl
push
ja
pop
hlt
lds
aaa
je
mov
or
loope
pushf
cld
repnz
loop
movb
inc
xor
out
mov
and
call
or
jge
sub
inc
lret
xchg
xchg
and
cmp
mov
fisubrs
inc
mov
call
stos
sbb
iret
iret
test
addr16
lods
ss
sbb
outsl
xor
sbb
push
xor
lahf
dec
pop
inc
sbb
movsl
push
mov
popf
clc
pop
push
lods
add
and
ret
outsl
mov
and
push
sbb
in
jl
ds
cmp
sbb
or
mov
push
mov
sahf
push
cmp
mov
xor
add
enter
jge
jmp
jmp
mov
mov
mov
pop
imul
dec
sbb
dec
in
in
sbbb
mov
mov
sbb
stos
pop
push
mov
xor
sub
mov
scas
add
dec
cmpsl
cld
cltd
xor
subb
addr16
int
adc
bnd
push
out
push
or
mov
aam
mov
aad
aam
fs
push
xor
ret
pop
movsl
xchg
cmp
fs
adc
sub
lret
stc
sti
jne
fidivl
jmp
sbbl
sbb
push
adc
xor
cmp
xor
aaa
insb
outsb
fimull
or
dec
xor
sub
lods
jle
jl
test
lcall
jg
faddl
inc
adc
mov
lock
xchg
add
aas
adc
jb
pop
push
test
add
dec
jg
sahf
mov
and
jo
addr16
sub
aam
mov
int3
and
lea
jp
mov
das
jle
jae
les
or
clc
cltd
cmp
xchg
lahf
sbb
stc
lods
jge
xlat
inc
adc
push
cmp
loop,pt
jge
icebp
jl
pop
out
xchg
jle
movsl
popf
push
decb
lea
xor
js
shl
icebp
jmp
fistpl
cmp
mov
dec
push
adc
rorl
insl
mov
enter
hlt
push
dec
mov
lods
loope
jle
mov
mov
push
in
lret
test
test
lea
es
in
or
add
fldl
dec
ljmp
mov
ret
push
adc
mov
add
cmpsb
or
sub
imulb
fadd
dec
xor
xor
mov
aam
fadd
xor
jecxz
push
add
loop
mov
push
dec
jae
repz
jmp
cltd
int3
stc
rorb
sub
jmp
fdivl
loopne
push
mov
hlt
movsl
adc
shll
xchg
lret
mov
xchg
orb
jbe
in
mov
inc
outsb
pusha
sub
inc
test
jne
or
mov
roll
jle
sbb
inc
mov
xchg
fnsave
inc
xchg
dec
loop
in
mov
or
pop
dec
mov
push
es
inc
icebp
xchg
popa
push
push
xor
dec
mov
ret
fsts
negl
mov
les
mov
shlb
aad
lcall
in
dec
push
andb
gs
jmp
sub
stos
loop
add
mov
lret
fs
lods
xor
stos
xor
adc
push
lods
lret
cmp
insb
idivb
mov
fdivrp
lea
and
mov
test
jae
mov
mov
imul
mov
or
xchg
lods
cmp
adc
jno
das
pop
xchg
jge
mov
orl
test
mov
xchg
jnp
rep
dec
add
enter
adc
xor
sub
sbb
push
push
xchg
lods
mov
cmp
clc
aas
ljmp
jno
xchg
jmp
push
mov
ror
or
mov
mov
adc
bound
push
jbe
pop
push
lahf
cld
pop
jb
idivb
out
shll
inc
jno
pop
inc
ja
imul
fucom
mov
dec
xor
cmpb
cltd
mov
and
xchg
xchg
shll
sbb
inc
faddl
daa
pop
and
xchg
lods
adc
mov
mov
out
faddl
lea
sub
sub
sbbb
js
stc
sub
inc
addr16
dec
jle
jmp
popa
test
int3
push
jmp
xlat
icebp
and
addb
fistpl
imulb
pop
out
arpl
sti
inc
rolb
movsl
sub
popa
add
imul
dec
add
push
xor
scas
divl
loopne
sub
sub
out
dec
insb
cwtl
ret
dec
shll
loopne
dec
fdivr
lock
dec
xchg
jg
cmc
scas
jns
les
jle
fadd
mov
jge
cli
out
std
lea
cwtl
call
stos
push
xchg
lock
or
push
adc
lods
pushl
jno
fs
push
dec
adc
repz
es
dec
in
mov
sahf
mov
jns
cmp
cs
hlt
adc
insb
xlat
mov
lret
test
add
shlb
xor
mov
push
xchg
sbb
and
dec
aad
movnti
je
hlt
mov
jp
mov
cmp
mov
ds
xor
test
mov
pusha
inc
pop
pop
scas
cmpsl
adc
in
cli
nop
popf
xchg
cmp
jnp
dec
shrb
jns
jnp
mov
adc
sbb
push
adc
shrl
adc
orb
lods
sub
insl
sbb
sbb
out
ja
nop
jmp
fsubl
les
nop
or
pusha
or
xchg
js
clc
xchg
stos
ret
mov
cmp
repnz
imul
dec
dec
stos
lret
inc
mov
je
testl
xchg
flds
inc
jb
nop
pusha
in
xor
stc
add
push
inc
mov
rorb
insl
xchg
inc
dec
outsl
fsts
loopne
sub
insl
ds
loop
movsb
inc
std
pop
loopne
cli
mov
aam
and
jno
sbb
mov
jne
xchg
dec
mov
add
insb
loope
xor
je
insb
aam
dec
mov
sbb
inc
fld
and
jle
and
hlt
lea
je
das
aam
sbb
xchg
fstpl
add
lahf
mov
pop
push
cmpsl
nop
in
add
cwtl
xor
fadds
dec
push
adc
cmp
jns
mov
jne
lcall
add
lcall
and
mov
push
xchg
popa
mov
add
dec
and
mov
push
imul
in
cmp
mov
push
or
cmp
dec
jg
dec
shrb
ds
dec
xor
aaa
mov
pop
addl
and
inc
adc
mov
or
or
push
mov
mov
pop
mov
mov
push
addl
in
sub
cmp
insl
xchg
lea
shr
test
mov
mov
cli
nop
xchg
or
push
jne
mov
xor
push
mov
rcll
mov
shrl
movsl
cmpl
inc
sbbb
inc
ret
xchg
inc
notb
std
in
cmpsb
aad
mov
ss
cmp
lret
jg
clc
jg
xlat
fisubrs
jp
sbb
mov
and
scas
data16
add
cmp
cmovge
ret
out
xorl
pop
aaa
cld
repnz
mov
mov
sub
lock
int3
out
inc
sub
adc
xchg
add
jnp
or
lahf
cmpsb
scas
mov
scas
cmp
xchg
mov
and
cli
insl
fldcw
sbb
xchg
xchg
scas
nop
leave
pop
repz
or
arpl
push
push
push
cli
push
adc
outsl
lcall
in
sti
rcll
sbbl
mov
lds
or
aad
test
or
mov
mov
sub
push
inc
and
sbb
lcall
mov
fwait
imul
mov
cmc
xor
enter
mov
jae
fidivrl
mov
adc
js
pop
ljmp
mov
inc
gs
dec
in
jo
mov
jmp
cmp
or
add
push
or
fnop
bound
mov
push
pop
xchg
bound
dec
stos
loop
adc
shrb
je
cmp
mov
adc
in
push
xor
adc
fidivrl
add
xor
addr16
orb
mov
mov
sbb
xorb
std
dec
fldt
jo
mov
testb
jns
and
out
xchg
dec
add
jge
sub
add
xchg
and
gs
data16
std
add
xchg
popa
shll
xlat
xor
xchg
sbb
xor
mov
cltd
addb
fwait
enter
sub
cmc
or
in
jg
lret
and
mov
mov
shll
add
mov
cmpsl
adcl
and
inc
pop
stos
dec
or
sar
lcall
dec
mov
push
ss
loop
into
les
xlat
ficoms
xor
dec
leave
jne
divl
dec
cmp
mov
sarb
jp
jge
xchg
arpl
loop
adc
or
clc
test
mov
sbb
int3
arpl
xor
sub
sbb
jg
lods
iret
sbb
inc
mov
cld
dec
cwtl
and
adc
inc
adc
shl
test
insl
jb
and
out
loopne
fs
popf
call
push
leave
pop
outsb
ja
sub
jno
dec
inc
inc
fucomip
orl
push
aaa
mov
dec
add
add
push
push
sti
dec
dec
and
xchg
push
sub
inc
cli
mov
movsl
loop
dec
xor
xchg
das
xchg
lods
cmpsl
dec
ja
mov
add
add
cmp
mov
daa
xor
add
and
adc
sub
cmp
cmp
sub
push
or
adc
sbb
add
rclb
cwtl
pop
lock
push
out
push
in
icebp
xlat
mov
mov
cmpsb
push
push
repnz
stos
inc
repnz
mov
lods
xchg
stos
lret
call
add
mov
cltd
lret
fwait
nop
out
loope
out
aad
in
sub
std
lea
leave
iret
cmp
jno
lret
mov
xor
out
sbb
push
leave
xchg
in
ss
xor
adc
mov
shlb
cmp
adc
inc
xchg
mov
adc
sbb
out
xor
mov
cmpsl
arpl
jns
lds
out
and
test
pop
int3
and
hlt
mov
sub
les
xchg
push
clc
out
rclb
pop
pause
aas
aad
cmpsl
mov
fwait
and
adc
xor
lea
push
adc
xor
xchg
fucomp
lods
mov
push
nop
cmc
jb
push
xlat
push
out
xor
imull
fildl
les
mov
popf
call
jnp
ror
jns
repnz
jno
sti
cmp
in
dec
lahf
je
mov
mov
dec
lds
mov
sub
test
push
xchg
dec
jae
in
pop
or
jae
mov
cmpsl
negl
dec
cmpsb
sarl
lds
hlt
or
mov
add
mov
insb
xor
adc
ds
movsb
jp
jae
mov
into
pop
lods
jge
out
outsl
mov
orl
cltd
cli
out
fmuls
daa
xchg
cmp
aad
lret
lret
lcall
sbb
lret
jmp
mov
je
cmp
jg
iret
into
out
dec
cltd
scas
orl
inc
out
dec
xchg
fstp
pop
pop
faddp
push
js
cmp
sti
mov
ret
call
shlb
xor
mov
sbb
dec
mov
pop
sbb
and
lret
jns
or
imul
pop
int
mov
scas
call
stc
sahf
inc
push
nop
dec
ds
ret
mov
arpl
jnp
loopne
clc
pop
test
popf
stc
push
repz
sbb
andl
jmp
in
sub
mov
mov
and
pop
push
jns
fnstenv
fisubs
push
pop
add
adc
sub
mov
and
xchg
jecxz
aas
xor
jne
adc
xchg
mov
inc
test
xchg
xchg
sbb
adc
arpl
or
rcrb
mov
mov
cmpsl
push
add
loop
fsubrl
sub
aad
testl
sbb
dec
push
cli
lcall
adc
pop
jae
inc
jnp
ds
sarb
mov
add
dec
mov
or
xchg
inc
movsl
inc
push
sbb
pop
fdivrl
and
fnsave
mov
leave
lahf
push
mov
out
das
mov
sub
fdivrs
jle
fs
add
jl
in
mov
cld
mov
dec
jg
out
push
sarb
outsb
test
cltd
loop
pop
int
dec
lret
cmp
pusha
pop
cmpsl
in
pop
jne
jle
fwait
icebp
mov
fcmovne
push
xchg
cmp
sbb
lea
gs
push
sbb
int
orl
pop
arpl
xchg
je
fs
push
mov
cmpsb
add
xchg
imul
mov
lret
or
push
repz
push
add
shrl
cltd
pop
aas
sub
jmp
mov
pop
sub
dec
test
or
ret
nop
test
sub
mov
sbb
mov
push
rcl
cld
outsl
in
hlt
pop
mov
cmp
or
xor
movsl
loope
and
jge
in
cmp
cs
pop
roll
push
daa
int3
cmc
xchg
and
cltd
sub
hlt
repnz
int
das
and
mov
rcr
inc
pop
mov
xor
stos
rolb
xchg
addr16
cld
xor
cmp
fs
push
dec
xor
mov
mov
or
jae
sub
sbb
mov
jle,pt
add
into
dec
sbb
out
pop
pop
inc
arpl
cmpsb
inc
outsl
loop
pop
jecxz
mov
mov
pop
cs
imul
mov
in
add
lcall
fldenv
mov
fucomip
sbb
shrb
or
iret
popf
push
js
jecxz
push
popa
jbe
movsl
pop
lcall
lret
mov
lock
shr
cmp
loop
mov
jge
mov
rolb
cmp
repnz
sbb
and
add
mov
scas
mov
dec
xor
dec
jg
enter
dec
dec
loope
pop
mov
jge
mov
mov
scas
dec
cmp
fwait
sub
pop
push
lea
xchg
loop
pop
inc
sbb
fmul
in
popf
pop
int3
mov
jecxz
rorl
xor
adc
mov
jl
lea
loope
mov
mov
cs
out
jae
push
add
mov
repz
sbb
stc
test
inc
loope
pop
mov
aad
pop
icebp
pop
jp
inc
pop
imul
out
inc
lods
push
in
cwtl
cli
daa
fldt
cmp
ss
xor
sbb
sbb
xchg
sub
pop
dec
in
add
pop
cmp
cmp
and
std
dec
in
pop
icebp
movsb
inc
sub
add
int3
mov
pop
push
shlb
daa
int3
dec
sbb
jmp
or
jno
scas
sbb
addb
pop
mov
mov
push
fsubl
sbb
scas
xorb
dec
out
adc
fistps
fsubl
jmp
mov
jb
push
sub
cmp
outsb
sub
jbe
pop
jb,pn
xor
add
jne
dec
sahf
add
bound
push
inc
sub
loopne
test
addr16
xchg
lods
pop
stos
xchg
mov
xor
push
data16
inc
mov
pushf
cmc
pop
mov
jge
lret
in
aad
adc
adc
push
cli
pop
shl
inc
xor
adc
outsl
pusha
mov
imul
xchg
push
in
cmpsl
dec
pop
lret
or
xchg
pop
daa
xor
fsubl
fstps
cmp
pop
or
push
push
dec
aas
mov
rcrb
cltd
and
jo
inc
pop
mov
xor
mul
rep
out
jp
jg
sub
jle
jmp
xchg
scas
xchg
push
add
enter
lods
xor
inc
mov
in
sub
sbb
mov
loope
push
clc
pop
jmp
dec
fcompl
sbb
cmpsl
jnp
outsb
sahf
cmpsb
dec
xchg
or
xor
mov
push
cltd
jb
xchg
cld
sbb
adc
enter
arpl
arpl
daa
mov
into
mov
pop
cmpsl
and
sti
fistps
loopne
pop
xor
out
sbbl
pop
lods
xlat
pop
inc
idivl
loope
mov
je
inc
scas
fstps
cmp
mov
fwait
inc
fisttpl
mov
sub
pop
insb
jb
jecxz
sarl
cmp
fmull
xchg
or
xchg
add
mov
push
dec
lcall
outsb
adc
or
inc
es
imul
sbb
ret
add
push
dec
ret
popa
loopne
push
cmp
jno
aam
sub
fmul
mov
mov
mov
std
ret
xor
mov
fs
repnz
or
int3
add
pop
adc
pop
lea
addr16
mov
test
insl
mov
shl
jecxz
aaa
shl
out
mov
shrl
xor
pop
xor
mov
icebp
shll
inc
mov
int
adc
iret
inc
xor
pushf
shrl
push
pop
js
jae
jbe
jne
inc
les
xchg
or
in
lret
mov
adc
push
clc
mov
insb
sub
fsts
xchg
int
dec
popa
jne
add
xchg
mov
test
xchg
cltd
sub
push
test
cltd
mov
repnz
mov
pop
mov
sbb
push
and
outsb
mov
dec
stos
or
push
inc
mov
hlt
cwtl
push
popf
mov
mov
fs
fmul
inc
scas
dec
mov
mov
mov
jb
fs
sub
cmp
xchg
cmpsl
pop
cmp
rclb
inc
cli
sti
sbb
scas
mov
test
or
mov
sub
les
movsb
sub
xor
cmp
adc
mov
in
push
ljmp
xlat
jnp
leave
xchg
xchg
adc
mov
sti
imul
jp
sub
cmp
inc
dec
shlb
int
add
out
mov
mov
push
mov
ror
cmp
sub
fdivrl
adc
aas
and
js
jecxz
sub
sub
stos
cmpsb
inc
ss
sbb
inc
and
adc
sarl
arpl
lods
loopne
stc
ficoml
jp
int
sbb
sub
testl
scas
mov
push
cmp
imul
enter
daa
jg
mov
pop
jb
mov
lods
xor
cmpl
mov
mov
insl
sbb
daa
in
inc
push
mov
xor
sbb
out
xor
mov
cwtl
dec
xchg
out
test
and
push
cmp
pop
cmp
jle
loopne
fwait
fildll
push
adc
les
scas
pusha
sub
dec
loope
cmp
je
icebp
add
stos
mov
andl
mov
and
xorb
push
mov
incb
add
sbb
sub
shrb
mov
and
cld
ds
pop
mov
mov
mov
lret
xchg
outsl
mov
push
fisttpl
sbb
cmp
sub
xchg
cmp
mov
mov
cld
cmp
cmp
mov
mov
adc
popf
out
shl
pop
xor
push
movb
pusha
xor
sub
addr16
xchg
push
xchg
aad
rcl
push
push
in
imul
pop
and
ja
pusha
pop
sarb
fimull
gs
pop
or
jno
jg
fs
add
xchg
pusha
in
mov
push
out
pop
sub
das
ret
andl
sub
mov
push
jge
mov
mov
sub
add
push
push
addr16
adc
cmc
inc
cmp
stos
call
js
jbe
push
ja
inc
test
scas
push
dec
orb
pop
mov
or
outsb
out
add
mov
pop
rorl
cld
pop
test
push
ret
aam
jle
dec
fimuls
fdivr
gs
imul
xchg
jp
adc
out
int
cmp
mov
sti
push
dec
cs
mov
cld
sbb
and
pop
and
adc
and
sub
out
mov
cld
push
mov
stos
adc
and
call
fadds
add
int
sarb
adc
in
sbb
and
iret
push
cmp
or
jnp
arpl
mov
mov
scas
js
dec
fistpll
int3
cli
inc
movsl
or
xor
ss
fwait
dec
nop
inc
out
shrb
sbb
stos
sbb
pushf
int
inc
hlt
das
insb
jg
cmp
outsl
scas
lcall
mov
sub
dec
scas
daa
sub
mov
mov
or
mov
xchg
and
mov
or
jb
fwait
and
sbb
xchg
dec
aam
cs
xchg
movups
jo
fnstenv
popa
aaa
jno
cmpsl
lods
test
xor
xchg
xor
xchg
or
fs
bound
enter
xchg
ret
into
stos
test
sbb
std
or
pop
aam
int3
cmp
mov
dec
inc
incl
xlat
fdiv
push
repnz
dec
or
loop
jno
and
out
test
int
inc
mov
jbe
adc
xchg
popf
fs
cli
cmc
jns
enter
pop
daa
xchg
cmpb
or
pop
arpl
and
lods
imul
sub
dec
ret
pop
sub
add
cwtl
mov
in
arpl
pop
fs
fnstenv
in
push
shrb
in
ret
test
cmp
fistps
fdivrs
into
repnz
sbb
inc
sub
aad
sub
jg
movsl
pusha
daa
imul
into
xor
vandpd
test
jg
test
je
fwait
mov
lret
hlt
xchg
xchg
nop
nop
cmpb
jge
cmp
lds
xor
decl
xor
dec
roll
and
sub
mov
test
and
and
ret
fidivl
and
daa
addr16
ss
in
mov
adc
and
jo
gs
fidivs
mov
xor
xor
mov
xorl
or
xor
dec
cltd
dec
push
ret
lahf
mov
test
sub
loop
dec
lods
out
lahf
lret
pop
inc
ret
test
pop
mov
xchg
push
cmpsb
mov
divb
je
xchg
loopne
xor
es
and
cwtl
arpl
movb
lret
xor
mov
pop
mov
jg
xchg
or
pop
in
add
stos
or
adc
push
jecxz
imul
jl
xchg
mov
pop
fimull
sarb
pop
jle
add
or
clc
cli
and
in
lahf
aas
inc
and
fildll
js
push
or
jbe
data16
cwtl
stos
sbb
and
data16
inc
mov
xchg
cmp
nop
int
mulb
cld
or
adc
dec
cmp
mov
jle
fimuls
dec
aam
xchg
inc
jp
pop
fildll
mov
adc
ljmp
mov
or
aam
xchg
scas
push
push
mov
addr16
xchg
pop
mov
rclb
push
lea
in
or
jno
pop
or
test
add
xor
adc
cs
std
or
lahf
sbb
xchg
pushf
sbb
aam
dec
cmp
std
dec
gs
dec
scas
mov
in
mov
xor
cwtl
es
cmp
js
fwait
xchg
hlt
and
add
cmpsl
in
in
mov
xor
out
jne
in
push
cld
mov
mov
movb
push
dec
andl
std
cwtl
xor
fdivrs
inc
mov
sbb
int
push
daa
test
les
arpl
cmp
leave
nop
inc
ret
push
push
add
add
inc
jne
or
loope
es
and
rorb
xlat
pop
mov
cmp
dec
adc
push
or
les
lahf
repz
adc
insb
arpl
cmp
mov
xchg
fildll
mov
mov
shl
inc
and
cmp
pop
lods
push
lcall
ds
dec
rcl
frstor
push
push
xor
das
xchg
aad
in
fldt
flds
pop
ds
pop
adc
inc
aad
les
jmp
mov
jg
ss
inc
inc
and
fsubr
cmpsl
jl
sub
lea
dec
iret
cwtl
icebp
lds
add
and
sub
imul
popa
xchg
push
or
stos
andb
daa
and
pushf
jl
mov
fimuls
icebp
inc
repz
test
jmp
push
out
pop
pop
or
subb
mov
and
in
fldt
inc
jle
test
sahf
gs
into
rolb
jle
fldenv
pop
rolb
mov
xchg
adc
xchg
out
dec
xor
sar
addb
cltd
mov
lods
fnsave
fsubl
sub
fcomi
jle
je
mov
sub
jg
fstps
loopne
lret
or
pop
hlt
inc
or
loope
pop
sti
xor
ljmp
sub
sarl
and
mov
dec
xchg
fidivs
adc
call
hlt
xor
stos
or
ss
mov
jbe
jae
xor
pop
and
jo
pop
mov
sbb
xlat
stos
arpl
and
and
pusha
data16
in
mov
inc
add
clc
mov
fwait
insb
sub
add
in
xor
iret
test
pop
add
pop
outsb
sbb
add
and
fdivrl
inc
mov
pop
xchg
ret
xchg
or
rcl
jecxz
enter
insb
add
insb
leave
dec
xor
jecxz
and
mov
mov
mov
pop
mov
sbb
adc
adc
arpl
add
mov
cmpsb
cwtl
cmp
popf
mov
mov
mov
xorb
les
lods
mov
mov
xor
sub
pop
adc
into
stos
xchg
scas
jnp
sub
sbb
nop
fnsave
sarb
dec
pop
push
fwait
mov
aaa
pop
cmp
cmp
xchg
es
dec
arpl
jae
jno
mov
cmp
cmp
dec
and
xchg
ret
mov
outsl
xor
into
pop
in
add
sbb
aas
mov
and
in
adc
or
in
aam
or
lds
mov
or
and
and
cwtl
outsb
rcll
mov
mov
movsb
shrb
xchg
seto
int3
cmp
test
and
jg
and
enter
fdivl
and
mov
adc
xchg
sub
jns
jge
dec
movsb
inc
arpl
mov
test
stos
stc
xchg
lods
retw
jnp
pop
and
xchg
xor
adc
sahf
leave
dec
js
hlt
cli
sub
lahf
inc
lods
xchg
das
dec
xchg
jno
pop
sub
cmp
sahf
test
jo
lds
push
mov
sub
dec
sti
das
bound
aad
out
cmp
mov
repz
push
popa
inc
daa
adc
mov
and
jns
jne
push
rorb
mov
arpl
dec
fwait
enter
test
inc
mov
add
loop
sbb
sbb
stos
sbb
jmp
out
out
jmp
xor
adc
fbstp
dec
iret
dec
sub
cwtl
sub
bound
or
sub
jp
cli
sub
or
mov
inc
add
outsl
shll
jge
xchg
pop
lret
subl
xor
jae
in
lock
pop
dec
and
aam
leave
sbb
xor
test
and
add
mov
mov
mov
jmp
mov
sbb
aaa
shlb
hlt
push
adc
and
and
push
aad
imul
mov
sub
arpl
out
mov
or
mov
sub
xchg
cmp
cs
mov
movsb
and
xor
insb
adc
jmp
divb
add
incl
xchg
pop
sub
jecxz
mov
outsb
jne
sbb
sbb
popa
rorb
mov
add
je
enter
fldenv
or
out
mov
cmp
outsl
sahf
shlb
mov
mov
xchg
pusha
fcmovne
xchg
cmp
sbb
das
jp
scas
cmp
cmp
out
push
pop
sub
cmpsb
lret
daa
xor
push
test
xchg
pop
jno
inc
in
xlat
inc
je
arpl
mov
push
xor
movsl
and
jle
cld
insl
or
xor
pop
outsb
pop
mov
fildl
sbb
subl
dec
sub
xor
sub
push
add
cmp
pop
pop
add
into
adc
das
addb
lret
loop
jbe
cmp
push
push
div
push
rcrl
je
dec
sbb
in
inc
mov
push
jb
enter
dec
test
jno
and
enter
mov
cmpsb
mov
pop
loop
jp
sub
bound
or
out
pushf
jae,pt
out
inc
mov
das
mov
push
sbb
jbe
mov
xchg
push
mov
inc
jb
jbe
adc
jg
sub
adc
jae
fildl
int3
insb
adc
push
arpl
xor
test
icebp
rcrl
sahf
outsl
sbb
aaa
or
movsl
icebp
imul
fisttps
push
jle
pusha
push
mov
dec
adc
add
mov
or
cltd
cs
pop
arpl
dec
cmpsl
jmp
or
mov
adc
mov
repnz
pop
loopne
jp
cmp
xchg
stos
add
and
cmpsl
imul
sbb
mov
repnz
inc
pop
dec
stc
dec
mov
pop
push
and
xchg
inc
jns
or
pusha
adc
mov
jle
mov
mov
ficoms
loop
push
data16
mov
push
imul
fstps
dec
dec
dec
mov
lods
add
adc
push
pop
lcall
ds
mov
pop
sahf
mov
sbb
mov
iret
cld
mov
out
mov
cmpl
fbstp
mov
mov
cmp
shll
stc
sbb
push
jecxz
in
fisubrs
mov
mov
mov
cmpsb
sahf
and
das
aaa
testl
push
cs
ja
leave
xorl
adc
mov
call
jnp
lea
mov
pop
push
stos
jg
mov
test
scas
mov
into
jecxz
cs
cwtl
add
jge
mov
jge
out
xchg
cmp
mov
dec
jmp
adc
filds
andl
mul
cmp
aam
insl
add
dec
orl
jo
in
lahf
ret
jns
jns
iret
lret
enter
fwait
xor
popa
mull
lretw
in
cmp
cld
mov
ds
lock
dec
cmp
std
sbb
xor
push
xor
xchg
xchg
das
into
cld
aas
movsl
mov
aaa
into
xchg
int3
faddl
cmc
subl
inc
adc
imul
icebp
lret
cmp
aas
cs
lods
outsb
jno
fxtract
cmc
adc
xchg
out
int3
xchg
int
in
cmc
mov
mov
mov
stos
xchg
xchg
push
popa
mov
aad
mov
sub
and
movsb
enter
neg
scas
push
pop
push
sar
test
test
cli
inc
xchg
scas
xor
add
lds
adc
xor
cwtl
lods
inc
pop
adc
pop
cld
cmp
jb
fmull
mov
je
lahf
bound
mov
jae
popa
ret
push
cmp
jmp
and
mov
ret
or
ret
add
and
xor
dec
or
push
addl
idivl
add
adc
adc
mov
push
loope
outsb
call
cmp
imul
aad
stc
jecxz
add
lahf
das
clc
pop
out
in
incl
imul
sub
mov
mov
xchg
outsb
cmpl
push
lret
lcall
push
das
push
cmpb
mov
loope
mov
mov
icebp
lock
jae
inc
sbb
and
test
cmp
idivl
mov
mov
push
adc
xlat
insl
jae
xchg
xchg
arpl
cmp
cmc
addr16
cs
sbb
xchg
mov
stos
sub
movlps
mov
jl
int3
outsb
mov
mov
push
mov
es
roll
sbb
pop
fdivrl
and
cmpb
mov
adc
jg
stc
dec
stos
pop
arpl
lret
sbb
xor
in
push
mov
shlb
pusha
mov
jge
jl
imul
shlb
ja
clc
xor
outsl
jge
cli
inc
jecxz
sarb
xchg
xchg
in
pop
fistpl
out
jecxz
addr16
sub
jnp
mov
dec
jb
add
jno
jbe
testl
xchg
add
add
es
test
dec
fs
mov
out
ret
aas
mov
sti
or
scas
sarb
push
add
shrb
push
sbb
push
jno
dec
push
adc
subb
xchg
outsl
and
pop
pop
and
in
out
cld
movsl
aas
fcompl
push
cwtl
loop
sbb
stc
or
paddq
stos
stos
stc
push
cmp
adc
jge
out
xor
scas
ljmp
sub
sbbb
fiadds
in
and
adc
push
aaa
mov
test
lock
popf
mov
sub
mov
rolb
imul
loopne
and
rcr
mov
mov
lds
xlat
shlb
push
and
cmp
pushw
push
les
ss
add
mulb
jle
mov
xchg
jns
cs
mov
pushf
clc
ja
bound
lcall
shr
dec
fistpll
loope
push
xor
into
testb
icebp
and
jge
jb
dec
xchg
pushf
inc
add
cmc
xlat
jb
sbb
push
sbb
ss
xor
cmp
jg
movsl
out
or
add
arpl
call
inc
int3
mov
hlt
sub
les
fistl
repz
icebp
inc
lcall
lock
cld
mov
sub
cwtl
loopne
inc
jae
push
cltd
dec
mov
cld
sub
mov
test
dec
push
enter
inc
sbb
imul
clc
push
addr16
jg
fnstenv
jns
pushf
jge
test
xor
mov
pop
ret
sbb
pop
or
cmpxchg
push
dec
cmpsl
ss
push
shrl
in
subl
add
push
push
xchg
inc
je
xlat
fnsave
cltd
pusha
mov
pop
dec
add
sbb
insb
cmp
int3
add
xor
mov
mov
xchg
ljmp
fists
shr
hlt
jns
lds
sbb
mov
xchg
lea
mov
aaa
out
pop
shlb
sub
lret
push
add
lods
in
rclb
std
sbb
cltd
loop
pusha
dec
arpl
add
testl
add
sub
mov
lds
pop
outsb
cmpsb
sbb
mov
sbb
or
adc
mov
and
fildl
clc
aas
imul
jmp
or
pop
leave
dec
mulb
int3
aas
ficoml
test
jmp
js
ds
fsub
add
push
int3
inc
aaa
pop
or
jmp
adcb
push
nop
push
into
out
aaa
mov
sbb
xchg
lret
mov
arpl
xor
sbb
adc
jecxz
inc
mov
ret
stos
add
dec
aad
les
xor
out
popl
jecxz
fstpl
push
fisttpl
add
mov
mov
imul
dec
das
lret
das
push
mov
int
bound
fstpt
mov
xor
cmp
repnz
rorb
or
xor
and
cmp
push
pop
mov
fmull
test
stos
mov
add
sub
add
je
xor
popl
not
sub
test
dec
test
fstpl
and
jl
sarb
sbb
shl
push
cmp
movsl
push
repnz
arpl
pop
add
call
aaa
ds
adc
out
ret
mov
xchg
and
sub
clc
inc
lea
mov
cli
mov
mov
or
mov
cmp
out
cmc
scas
test
adc
pop
jo
outsb
dec
mov
mov
in
test
pop
js
sbb
inc
arpl
stos
cmc
push
movl
ljmp
popf
jecxz
jmp
dec
dec
jle
cmp
xor
inc
jne
js
js
cs
and
add
push
push
popf
movsb
adc
insb
push
add
mov
xor
movsl
pop
popf
xor
adc
push
mov
lods
mov
mov
rorl
jge
xor
iret
push
push
jp
jns
fcomip
inc
movsl
negb
aad
ret
or
jl
aam
cltd
ja
imul
cmpsl
cmp
aam
ss
in
lods
inc
push
fldcw
ss
data16
cld
pop
pop
or
xchg
test
jbe
adc
xchg
xchg
lahf
xor
lahf
inc
dec
popa
insl
adc
aas
push
push
and
xchg
rol
ficoms
mov
shll
xlat
jno
lods
mov
test
fistpll
push
xchg
sbb
add
adc
lahf
std
lret
pop
adc
inc
xor
xor
repnz
jp
adc
dec
jo
iret
add
pop
cmpsb
stc
lcall
add
pop
or
icebp
xchg
mov
inc
rcrb
cltd
mov
adc
add
jp
or
pop
dec
fidivs
paddq
les
inc
sub
pop
call
push
frstor
jle
dec
lods
pusha
push
sub
ljmp
sbb
push
adc
jle
mov
xor
pop
sbb
mov
fsub
and
dec
push
xlat
js
sub
inc
xchg
int
cmp
sub
ss
mov
das
jle
repnz
adc
loope
lds
inc
add
mov
aas
les
xor
loope
divl
hlt
cld
and
mov
les
test
xor
arpl
imull
mov
aad
sbb
jle
jecxz
psubsw
sti
jno
mov
mov
push
das
cmp
rclb
dec
xor
xor
or
or
jge
cmp
shlb
xor
jno
ss
pop
fists
xor
or
nop
push
push
leave
in
xchg
lcall
sti
outsb
xchg
ret
jp
or
mov
xchg
push
gs
or
fucom
jge
cld
into
push
shll
shlb
sti
xchg
movsl
mov
aad
hlt
scas
mov
add
loop
xchg
fistl
sub
stos
push
adc
sub
jl
out
data16
in
aas
mov
push
mov
js
jo
xabort
scas
pop
inc
fsubr
sub
ret
mov
pop
dec
jb
and
xchg
ja
jecxz
popa
cmp
out
fwait
xorl
pushf
sub
cmp
sbb
jl
xchg
mov
add
clc
push
mov
repz
cmp
mov
jbe
lods
data16
repnz
into
fstpl
xor
maskmovq
notl
mov
cwtl
rorb
jne
fnsave
mov
xchg
mov
aad
inc
stos
inc
icebp
repnz
sbb
das
mov
jb
in
imul
mov
std
xchg
xchg
push
inc
out
push
lds
mov
fmuls
fisttps
pushw
push
jo
or
adc
mov
popf
fwait
push
lea
dec
stc
push
je
movsl
stos
push
mov
dec
in
or
add
jg
xor
mov
addr16
stc
into
xor
enter
cs
xchg
call
lcall
into
sub
xor
js
inc
addr16
cmpsb
loopne
sti
cs
pushf
mov
out
in
jp
aam
cmp
mov
hlt
inc
add
test
push
mov
or
mov
adc
test
pop
in
fwait
in
mov
repz
or
adc
cmp
pop
jnp
dec
cmp
cmp
in
out
pop
mov
cmp
stc
arpl
pop
inc
fldenv
inc
data16
xor
cwtl
jo
adc
jl
dec
cmp
jl
cltd
shl
imul
pop
mov
out
movsl
sahf
rorl
sbb
int
lret
adc
outsb
je
lods
loope
dec
mov
or
cmp
jecxz
das
lret
sbb
dec
ret
notb
cmc
inc
pop
push
dec
xchg
aaa
sbb
push
push
mov
daa
mov
cmc
cmpsb
hlt
ja
cmp
lret
addr16
cmp
sti
insb
jnp
mov
fsubr
push
jmp
and
lea
and
xchg
sbb
dec
mov
cli
lods
pop
mov
icebp
ret
pushf
sub
fs
mov
inc
xchg
jmp
push
push
dec
fs
mov
sbb
mov
scas
xor
jp
push
adc
or
dec
repnz
mov
addr16
in
test
xlat
pop
pop
pop
inc
pushw
jbe
mov
fsub
test
ret
dec
or
inc
dec
pop
inc
xor
jle
into
sub
sarl
xor
jne
fisubl
pop
sbbl
push
and
adc
int
inc
jne
dec
int3
iret
aad
cmpl
mov
and
cmp
xchg
int
xchg
push
sub
insl
ret
loopne
mov
cmpl
mov
push
out
loopne
sub
cmp
pop
fsqrt
mov
add
mov
jle
or
cmp
sbbb
inc
sarb
sti
cmp
jae
stc
jne
call
popf
pushw
inc
push
mov
lock
mov
into
mulb
insl
and
mov
cmp
xor
shlb
outsl
xlat
andl
cwtl
mov
xchg
mov
jmp
xor
ret
xor
inc
cmpsl
shrw
adc
iret
pop
mov
pop
add
icebp
jle
std
xchg
mov
cmovl
mov
sbb
out
testb
cld
adc
clc
adc
sahf
clc
inc
icebp
adc
cmpsl
aas
mov
shl
cmp
nop
repz
pop
push
rol
add
mov
inc
imul
sub
aam
dec
xchg
divb
jp
hlt
popl
cmp
xchg
cmpl
pop
clc
cmp
xchg
es
dec
jl
fs
in
in
bound
add
outsl
xchg
clc
sbbl
hlt
mov
inc
xchg
aas
scas
dec
mov
call
std
sub
pop
adc
mov
loope
and
xchg
and
xchg
adc
je
jnp
mov
push
mov
xchg
pop
push
das
xor
sbb
sbb
cmp
cmp
out
aad
sub
sahf
jge
add
xchg
outsl
ffreep
xlat
mov
mov
sti
sbb
notb
cli
jno
xor
cli
push
xor
insb
ljmp
lds
xchg
outsl
xchg
pop
xchg
adc
outsl
inc
cmpsb
adc
insb
in
and
xchg
cmp
inc
sbb
rorl
pop
xchg
dec
test
lods
mov
dec
sarl
sbb
roll
repz
hlt
outsl
mov
jnp
out
aam
ret
mov
adc
and
add
loopne
or
push
mov
fsubs
add
stc
call
sub
mov
pop
jno
in
mul
adc
mov
insl
repnz
pop
push
or
add
lret
mov
sbb
xchg
or
xor
jno
mov
loopne
mov
sbb
inc
add
scas
sbb
inc
xor
or
or
out
pop
cmp
xlat
mov
loop
and
push
ds
cmpsb
and
daa
fs
fcoml
enter
rcrb
add
pusha
xchg
sahf
faddl
aaa
sbb
jge
repnz
hlt
inc
jg
add
or
and
sbb
mov
mov
jae
and
mov
ffree
lahf
dec
out
lcall
jns
popa
popa
mov
loope
pop
xchg
mov
out
ds
call
in
add
or
ret
dec
xor
pop
sbb
cmp
sub
ret
add
jmp
lock
divb
mov
sub
rolb
mov
shlb
add
aaa
xor
insl
dec
mov
xlat
dec
cmp
push
outsl
insl
aaa
sbb
roll
mov
outsb
cmp
xor
jne
push
wrmsr
xchg
ja
push
xor
sub
add
inc
cmpsb
inc
mov
out
inc
mov
and
jno
fcmovnb
test
stc
mov
enter
or
jae
add
jge
dec
cmc
sub
xlat
pop
cmp
aas
aas
and
test
adc
mov
mov
arpl
push
mov
add
dec
push
cmp
dec
adc
arpl
inc
icebp
loop
or
sbb
adc
or
push
cs
adc
cld
imull
pxor
dec
loopne
xchg
ret
jl
add
adc
test
dec
mov
out
dec
icebp
inc
xchg
jge
push
xchg
mov
sub
mov
aaa
cmp
rcll
dec
adc
jp
test
in
and
jo
mov
rcrl
out
das
push
fadds
lods
enter
fs
rorb
mov
shlb
mov
pusha
adc
je
cli
push
push
out
test
mov
sub
mov
jl
outsl
jns
and
sbb
sar
pop
jbe
in
pop
stc
mov
dec
push
sbb
in
mov
aas
arpl
xchg
sub
arpl
imul
jge
fistl
rcrb
loopne
lock
ret
mov
data16
out
xchg
add
cmc
push
push
jge
pop
imul
and
jge
mov
lods
and
xchg
loop
dec
xchg
lods
adc
pop
adc
inc
loopne
cmp
fldl
dec
jnp
sbb
adc
lret
lods
xrelease
in
repnz
dec
mov
sub
add
adc
add
testb
mov
jns
dec
push
or
xlat
ljmp
pop
pop
pop
dec
add
adc
xor
rsqrtps
mov
push
pop
leave
push
hlt
xor
fidivl
enter
mov
out
mov
repz
cmp
repnz
dec
sub
mov
mov
stos
std
repnz
aam
push
lds
cmpsb
addr16
dec
dec
decl
aad
cmp
sbb
imulb
rcl
dec
xor
insb
int
pop
mov
dec
jl
jns
shll
cmc
cwtl
les
lcall
pusha
add
dec
mov
inc
addr16
cltd
sub
mov
data16
pop
subl
clc
les
adc
adc
in
dec
popf
sub
pushf
jl
push
mov
or
lods
mov
mov
rcll
xchg
dec
idivl
dec
mov
cmp
ret
leave
int
push
push
inc
add
xchg
loopne
mov
xchg
xchg
lahf
das
test
fisubrs
in
xchg
add
das
stos
aad
jne
mov
jnp
mov
add
out
shl
push
pushf
imul
je
jo
cmp
mov
repnz
out
dec
lds
adc
dec
scas
stos
xchg
cmp
cmp
cmp
push
out
fiadds
add
aaa
mov
addr16
mov
fwait
mov
imul
cld
nop
xchg
je
sub
inc
lret
les
clc
add
dec
js
adc
ds
push
jbe
stc
add
sub
andl
cli
loop
inc
jp
sub
pop
fistps
cmpsl
push
packuswb
or
pop
sub
stos
aad
sub
in
sbb
add
push
xchg
push
ret
or
popa
push
hlt
ret
inc
sub
mov
mov
cmp
iret
lahf
mov
sbb
jl
ss
and
iret
xor
rcrb
sub
push
sub
ret
mov
pop
add
test
mov
lcall
inc
mov
call
sub
jno
jg
adc
repnz
sahf
pop
push
aam
shll
push
push
in
cmp
jecxz
scas
rolb
pusha
xchg
lcall
js
dec
hlt
cmp
adc
mov
jg
push
std
imul
les
fwait
pop
movsl
in
loope
rcrl
add
insl
aaa
push
dec
fildl
mov
lea
out
les
sti
push
adc
fwait
adc
std
lcall
popa
or
in
push
dec
xchg
jo
das
xor
sub
lret
fists
inc
jp
sub
xchg
ss
cmp
stos
adc
stos
push
pop
std
loop
or
rep
cmp
fdivs
scas
or
outsb
mov
fmul
out
mov
popa
xchg
outsl
cmp
sbb
push
add
popa
jb
shlb
sbb
mov
mov
xor
jno
fsubrl
add
roll
pop
add
test
repz
in
ret
out
xlat
pop
jmp
insl
mov
mov
je
gs
add
cli
xor
dec
xchg
outsl
xor
fdivrl
pop
repnz
stos
and
dec
sub
mov
loope
das
subb
std
popa
popf
pop
xor
pop
pop
adc
xchg
ret
push
sti
js
jle
dec
push
xchg
inc
outsl
mov
xorl
insl
mov
xchg
adc
out
mov
add
sti
into
test
sub
loop
jp
mov
fiaddl
fisubs
cmp
mov
je
test
in
ljmp
nop
hlt
negl
repnz
icebp
dec
inc
adc
ss
push
jno
popa
push
push
cs
subl
arpl
popa
xchg
lods
les
out
jae
ret
lcall
add
mov
dec
imul
lods
in
lock
jb
das
insb
out
in
jno
js
pusha
mov
and
repz
jns
lret
lahf
test
sbb
movsl
cmp
xor
pop
insb
add
dec
push
add
movsl
lret
sbb
adc
or
xor
pop
fcomp
jg
sbb
mov
xorl
xchg
cs
enter
or
xor
lods
mov
imul
sub
orb
jbe
mov
lock
fldl2t
add
cmp
cmpl
sbb
lods
repz
inc
xor
sbb
fcmovnb
adc
call
mov
mov
out
out
or
mov
xor
pushf
mov
pop
push
data16
bound
ret
push
hlt
nop
sarl
and
lret
dec
ret
imul
push
mov
jp
inc
dec
fistps
xchg
xor
loope
test
lahf
pop
jp
pushf
scas
test
mov
jo
test
mov
push
dec
push
dec
fnstsw
push
es
loopne
or
fnsave
mov
add
mov
cmp
popa
cmp
lock
mov
invd
js
dec
aad
and
jg
mov
in
ret
mov
xchg
movsl
cmp
xchg
xchg
jb
jo
mov
loopne
fsubrs
xchg
in
mov
out
ret
ss
adc
fcmovbe
mov
lea
xchg
sti
xorb
ljmp
cmpsb
add
jbe
loopne
jo
jnp
add
and
xchg
out
push
mov
lock
inc
sti
aaa
in
lahf
call
call
movsl
mov
movsl
add
xchg
bound
xchg
fcomps
scas
xchg
sub
aam
or
popa
and
and
cmp
cmp
jge
xor
flds
loop
sub
inc
jl
push
mov
ljmp
pop
pop
xlat
test
inc
jno
fs
push
adc
cmpsl
lock
and
loopne
dec
loopne
push
cmp
mov
int3
fstpt
testl
stc
les
nop
in
xor
stos
mov
jbe
jmp
and
adc
inc
adc
jge
andb
stc
sarb
dec
popf
xchg
xor
xchg
movsb
xchg
ret
idivl
inc
subb
test
pop
mov
dec
lods
pop
mov
rcrl
out
jae
mov
cs
mov
sbbl
adc
and
xchg
fists
mov
mov
fisttpll
daa
loopne
ljmp
dec
and
lahf
xor
insb
dec
aaa
insl
pop
sub
int3
dec
je
and
jnp
pop
mov
jb
mov
push
insl
daa
ret
and
pop
test
jl
stc
pop
pop
sub
shl
mov
nop
insb
icebp
sub
mov
fisubs
inc
push
lahf
dec
movsb
cltd
mov
punpcklwd
pop
or
movsb
xchg
cmp
jae
mov
jb
or
xor
stos
xchg
add
fbstp
fdivr
aaa
xchg
sbb
mov
add
loope
fisttpl
test
mov
aas
sub
out
pusha
jl
push
sbb
sub
test
fiaddl
je
mov
subl
xchg
fwait
sahf
adc
push
mov
or
sbb
into
jns
movsb
adc
out
lods
push
jle
xor
add
outsl
mov
adc
push
dec
js
icebp
jo
jnp
gs
pop
and
pop
and
inc
dec
aas
jmp
sub
popf
and
xchg
jb
pop
sbb
add
or
mov
mov
xlat
and
outsb
sub
sbb
xchg
shrl
push
addl
push
push
fimuls
hlt
je
lea
cmpsl
sbb
outsb
cmp
outsl
lock
iret
push
imul
ja
mov
sub
test
pop
mov
pushl
inc
call
inc
out
in
jge
clc
push
mov
mov
jecxz
cmp
cltd
pop
movsb
in
cmp
les
popa
outsb
loopne
insl
into
sbb
aad
rol
xor
nopl
je
dec
ljmp
imul
shlb
inc
jmp
test
cltd
xor
xchg
lods
dec
aaa
in
mov
pop
gs
shll
adc
push
out
sbb
cmp
nop
bnd
jle
lds
cmp
inc
iret
mov
jo
push
iret
scas
out
bound
ss
faddl
adc
mov
out
fldl
lods
push
roll
jbe
pushf
pop
and
sub
xchg
scas
push
aad
fiadds
adc
in
out
dec
mov
scas
ret
dec
and
lret
nop
add
inc
shll
repz
or
mov
adc
ss
insb
pop
adc
mov
jmp
mov
in
and
push
mov
fwait
stc
mov
ljmp
int
hlt
xorb
cmpsl
les
jns
fs
mov
lcall
pop
sub
insb
push
lods
mov
rol
rorl
dec
sahf
xor
jae
cs
bound
rorl
lret
jns
push
push
fsubrs
lret
rolb
addr16
sbb
xor
sbb
lods
hlt
adc
lods
xlat
xor
test
mov
loop
push
mov
arpl
add
inc
cmp
jmp
movsb
std
adc
inc
jno
pop
pop
je
mov
iret
jp
in
dec
pop
add
jmp
adc
icebp
mov
mov
insl
shll
orl
mov
ret
cmpsl
clc
cmc
inc
adc
jecxz
clc
mov
repnz
les
xor
sub
sbb
xlat
jb
mov
in
push
mov
iret
or
dec
sti
ljmp
xchg
push
les
cs
scas
and
xor
jp
stos
mov
nop
rolb
jmp
lods
rcr
sub
lahf
test
push
cmc
push
sbb
loop
rcll
sub
and
rorl
inc
mov
lea
jle
cmc
les
mov
into
lret
push
and
add
loope
rolb
aad
xchg
dec
je
jno
add
xlat
push
js
pop
hlt
jne
leave
rcrl
jmp
nop
repnz
fisubl
in
xchg
leave
lret
ret
out
lcall
mov
fs
xchg
aaa
leave
xchg
loop
dec
or
mov
test
push
aaa
leave
mov
jb
jb
xor
jp
nop
sbb
cld
adc
sbb
mov
dec
mov
mov
lds
mov
adc
dec
aaa
out
jno
pop
pop
out
mov
rcr
lods
scas
fmuls
in
sub
xor
int
pop
or
into
loope
pop
mov
or
push
xchg
pusha
clc
popf
lahf
push
jne
icebp
xor
push
icebp
std
jge
stos
test
push
test
sub
test
push
cli
loop
mov
jmp
fidivs
jle
jl
push
add
adc
dec
lcall
imul
dec
sub
or
mov
pop
sub
out
dec
xchg
and
aaa
adc
jg
add
repz
sub
sbb
cmp
pushl
das
and
frndint
mov
dec
mov
lea
in
pop
aad
in
xor
sub
sub
and
or
test
jb
lret
mov
add
sub
dec
and
filds
ja
pop
add
mull
mov
js
xor
movsl
outsl
into
jns
jg
nop
test
imul
cmp
fildl
andl
pop
repnz
aam
sub
or
leave
pushf
jecxz
cltd
push
sbb
mov
shl
lock
sub
cmp
sti
sub
mov
adc
bound
js
sub
fwait
mov
or
ljmp
out
adc
dec
cmpsl
pop
push
cli
xchg
mov
pop
je
mov
push
sbb
and
gs
inc
insb
imul
imul
cmc
dec
push
dec
jno
movb
pop
repnz
inc
repz
adc
push
xchg
jnp
jb
mov
jg
incl
orl
into
cmp
mov
scas
jl
out
sti
les
mov
movsl
jno
cmc
mov
notb
pop
pop
sbb
add
sub
idivb
call
mov
jne
outsb
cmp
jl
sbb
lcall
sbb
push
lret
ret
ss
clc
lods
push
ljmp
jnp
mov
jecxz
mov
adc
lock
es
stos
not
les
subl
lock
adc
lea
xchg
push
push
xchg
push
xor
repnz
push
sub
jmp
lock
fcmovne
pop
lods
movsl
jo
test
cmp
notl
int
jl
jge
enter
imul
jge
mov
in
cltd
orl
addr16
imul
xchg
rorl
add
pop
dec
decb
imul
push
adc
movsl
push
mov
repz
cwtl
iret
jo
rcr
xor
cld
fcomps
leave
fists
les
pop
inc
repnz
hlt
lock
js
cmp
jb
adc
ret
jmp
adc
mulb
pop
cmpsl
push
popf
sub
shll
out
fstp
sbb
hlt
lea
jbe
pop
and
mov
adc
es
dec
dec
inc
xor
sub
sahf
ss
inc
mov
cmp
imul
push
cmp
into
dec
das
pop
fdivl
ret
aas
fnstenv
mov
push
rcrl
mov
in
mov
dec
popa
fsubrs
in
cwtl
iret
xchg
call
or
movsb
and
push
sbb
mov
ljmp
jns
xchg
dec
in
je
sbb
add
sti
adc
adc
stos
out
push
cmp
cmc
xchg
cltd
clc
add
ficoml
rolb
push
fs
push
adc
out
fisubrs
divb
mov
and
dec
lods
pop
fldl
out
inc
ds
push
pop
add
sub
inc
push
xor
sbb
rol
lock
xor
add
ret
xchg
iret
rorl
test
inc
sub
and
xchg
add
cmc
test
pop
add
imul
or
pushl
lea
lods
and
mov
adc
inc
pop
cmpsl
or
adc
sub
cmpsl
divb
xchg
insb
in
lcall
cmpsl
ss
mov
inc
cmp
xchg
and
nop
stc
adc
pop
xchg
cmp
mov
fdivr
mov
or
dec
cltd
sti
fnstenv
jmp
lock
fadds
mov
test
rorl
cmpsl
xchg
fidivrl
pop
jecxz
leave
test
stos
add
popa
movsb
or
and
data16
imul
pop
les
insl
jmp
mov
inc
jp
loope
lret
lret
sbb
dec
xchg
std
sub
mov
xor
cmpl
stos
incl
add
cmp
xlat
mov
jecxz
pop
mov
inc
jg
mov
es
into
cmp
mov
cs
fdivrl
in
cmp
dec
mov
pop
push
mov
rcrl
clc
fcomi
inc
dec
cmp
adc
out
mov
call
push
and
aad
xchg
xlat
stos
push
sub
and
jnp
fisttpl
xchg
jge
mov
mov
inc
enter
add
popa
in
sub
adc
pop
outsl
xchg
mov
push
clc
daa
cltd
mov
pop
and
sub
add
lret
sbb
call
inc
pop
lea
jae
cmp
iret
pop
cmp
push
cmp
sbb
dec
cwtl
test
mov
mov
cmp
repz
jp
test
arpl
data16
daa
lret
mov
push
sbb
sahf
cmpsl
adc
mov
mov
fdivp
xchg
shrl
and
xchg
lea
addl
mov
dec
daa
xchg
hlt
add
cmp
push
adc
fisubs
dec
loop
inc
or
lcall
fcompl
push
mov
cmp
fs
mov
push
lret
sbb
hlt
repz
imul
mov
pop
xchg
sbb
jmp
ds
jne
out
xor
test
sahf
into
jne
push
pop
mov
and
out
in
shl
sub
cwtl
mov
push
xchg
pushf
dec
mov
repnz
out
add
ja
in
roll
fsubl
negl
popa
jb
mov
xor
cli
mov
jecxz
test
cmp
pop
adc
int3
fldt
mov
cmc
xchg
and
xchg
pop
lahf
sub
pop
push
shlb
rcr
adc
test
loope
pop
ficomps
xchg
mov
cmp
cld
int3
mov
add
push
imul
xor
clc
fisubrl
lahf
dec
pop
popf
dec
sbb
out
out
scas
je
xor
add
insb
jp
jb
les
push
lock
ljmp
adc
push
sub
mov
inc
jg
add
roll
jp
pop
push
jo
mov
lret
sbb
mov
cmp
addr16
arpl
and
pusha
pusha
shrb
pusha
loope
movsb
loop
dec
and
dec
mov
andb
cmp
push
sub
fdivs
int3
jge
pushf
xor
aam
push
popa
sub
dec
or
inc
int
iret
jbe
loop
inc
cmp
mov
popa
pop
sbbb
xor
sub
lds
sbb
out
pop
mov
out
insl
add
pusha
es
xchg
loope
jp
lahf
jg
push
daa
cmpsl
mov
shlb
daa
inc
cwtl
sub
out
or
ds
enter
xchg
ja
test
or
inc
jecxz
xchg
sub
mov
fisttpl
lahf
cmp
add
mov
mov
cmpsb
push
push
jge
out
out
out
jecxz
inc
in
inc
outsl
add
mov
outsb
je
cs
mov
fstp
mov
inc
sbb
imul
xor
dec
mov
push
sbb
call
dec
cwtl
xchg
pop
and
fwait
scas
sti
cs
loop
aad
fwait
fcmovb
fiadds
movsb
mov
mov
lea
gs
mov
and
mov
sbb
movsl
mov
mov
scas
enter
jae
in
cmp
sbb
mov
out
ja
mov
fiadds
cs
sbb
mov
sbb
enter
sbb
xor
fwait
xor
sub
or
repz
test
adc
clc
push
jns
sahf
mov
mov
inc
lret
xor
sar
push
rcr
push
xchg
leave
cmp
pop
ret
fldenv
jp
or
inc
outsl
daa
xor
ret
jge
fcom
pop
arpl
sahf
inc
test
sub
mov
lret
outsb
loopne
test
xchg
sbb
pop
in
call
enter
xor
jecxz
add
lcall
jnp
mov
arpl
or
test
gs
cs
push
bound
adc
rcrb
nop
pop
lods
popa
pop
jno
and
sub
jbe
adc
add
jge
test
movsl
lcall
pop
pop
sub
sub
loop
in
testb
sub
test
cmp
adc
gs
sbb
jg
mov
and
adc
jle
loop
gs
sarb
mov
mov
cwtl
or
xchg
fistpl
push
mov
mov
ret
pop
dec
daa
sub
jecxz
sbb
or
cmp
outsb
jo
les
xor
icebp
je
or
pop
cwtl
jle
into
ljmp
lahf
adc
rcll
adc
and
and
daa
mov
dec
shlb
lret
call
inc
push
add
push
std
cltd
cmp
cmp
movsb
and
jl,pn
sbb
and
push
jns
dec
and
cs
lahf
xlat
push
push
sahf
cmpsl
ds
popa
fcmovu
pop
mov
sti
mov
imulb
aas
fs
jo
cmpsl
leave
add
cmc
adc
subl
int3
pop
mov
push
jns
sub
jb
enter
xchg
inc
push
or
inc
gs
cmpsb
cmpsl
das
xchg
pop
aaa
xorl
fbstp
mov
or
xlat
popf
insl
lahf
mov
jg
adc
jbe
nop
test
mov
call
mov
stos
jae
add
jg
shrb
push
daa
mov
adcb
jno
sbb
mov
push
and
push
and
push
cs
cmp
ljmp
repz
push
xor
add
xor
and
sub
sub
and
xor
cs
out
jb
popa
test
or
fwait
dec
adc
sahf
add
jns
cmp
pop
popa
and
gs
lahf
mov
sub
loop
cwtd
iret
mov
push
addr16
cmp
frstor
cmpb
dec
xchg
xor
fs
and
jmp
lods
mov
movsl
test
push
push
pop
mov
pop
rorl
je
sbb
add
aaa
mov
ds
loopne
mov
std
jg
arpl
stos
int3
jb
lods
sahf
jae
fcompl
xchg
push
xorb
data16
adc
push
out
and
cmp
xor
inc
push
inc
adc
cld
push
imul
icebp
sbb
lea
adc
push
fmuls
pop
push
roll
or
sar
hlt
xchg
fisubrl
mov
xchg
adcl
test
mov
mov
mov
test
adc
pop
dec
inc
repnz
inc
das
addr16
outsb
or
mov
into
jmp
loopne
push
mov
push
cld
adc
sub
jnp
add
push
ds
push
jp
daa
orl
xchg
xchg
rcr
or
dec
jp
cs
lret
aas
xorb
xchg
xchg
sbb
ftst
inc
sbb
repnz
adc
xor
cmpsl
jl
push
addr16
dec
shrb
push
cmpxchg
or
jmp
pusha
cwtl
fisttpll
xor
push
fstpt
add
aad
loopne
scas
test
ret
adc
dec
mov
sbb
mov
fists
inc
push
bound
push
cmp
loopne
movsl
pop
mov
sti
scas
movsb
pop
shl
cmpsb
dec
lret
ret
cltd
out
aaa
xor
and
mov
mov
xchg
repz
xor
les
jle
push
lcall
xor
ret
jbe
push
sbb
mov
inc
mov
into
xor
or
and
inc
or
insl
xchg
shll
adc
dec
fdivr
add
adc
idiv
cmp
lret
cmpsb
or
pop
cmpsl
mov
fcmovne
xchg
sub
xchg
addb
add
xchg
xor
rolb
push
pop
daa
data16
cmp
sar
xlat
push
add
sub
push
lds
popf
xchg
adc
xor
mov
and
iret
or
add
stos
int
hlt
sbb
mov
ja
mov
nop
push
lods
mov
lods
clc
inc
pop
icebp
repnz
nop
jecxz
xchg
push
sub
jbe
icebp
dec
mov
mov
or
adc
jo
jne
mov
push
loop
jmp
mov
or
jg
stos
aas
popa
loopne
ljmp
cld
jns
outsl
cmc
hlt
ss
add
fmull
aad
push
int3
shl
or
in
add
std
lret
mov
mov
mov
jae
add
jl
flds
dec
fmull
mov
imul
frstor
cmp
add
xchg
jl
add
repnz
iret
push
imul
xchg
pop
enter
xor
push
xchg
test
int
push
mov
enter
insb
and
and
pop
iret
aaa
test
mov
mov
lret
ds
and
mov
int3
repz
mov
xor
jnp
stos
lds
push
jl
jno
push
adc
add
stc
jmp
jecxz
fistpl
inc
xchg
imul
xchg
push
jmp
or
out
mov
add
imul
cmp
shrl
in
sub
icebp
jl
mov
aam
cmp
lds
orb
loope
and
lock
dec
pop
shr
lock
adc
dec
cmp
and
iret
scas
or
int3
xor
je
dec
pop
pop
vcvttps2dq
inc
jmp
divl
fwait
and
mov
xor
int
adc
outsl
or
xchg
jp
rcr
and
or
xchg
adc
stos
neg
mov
pop
push
mov
xchg
hlt
pop
mov
xchg
decb
mov
adc
inc
das
mov
and
add
push
dec
sbb
mov
ss
jmp
call
rcr
xchg
mov
xchg
cmp
mov
lds
mov
ret
pop
loopne
pop
mov
jge
ds
std
pop
add
pop
pop
scas
addb
xchg
scas
test
mov
mov
push
and
push
flds
arpl
mov
jb
mov
shrl
testb
je
fstpl
out
pop
outsl
aas
xchg
add
imul
fs
sti
cmp
push
aad
jae
test
clc
mov
sbb
xor
jmp
inc
or
cmpsl
mov
or
mov
fdivrs
stos
add
and
mov
test
push
sahf
les
xchg
xlat
xchg
in
mov
fmul
imul
jl
mov
inc
pop
jg
xor
lret
ret
jne
clc
xor
int
ret
push
add
ret
js
xchg
icebp
mov
mov
push
insl
shrb
movsb
add
lods
test
mov
pop
jecxz
testl
mov
stc
sbb
ret
lahf
and
pushf
mov
fidivs
xchg
outsb
pop
and
pop
dec
jb
fistpll
mov
das
fwait
add
scas
inc
xor
adc
ds
sub
add
push
out
test
pop
outsl
out
adc
fisttpll
jp
aas
adc
jp
add
fisubrl
sbb
fbstp
pop
out
jbe
inc
jns
push
or
push
movsb
test
in
xor
das
or
add
mov
sbb
mov
outsl
cmp
mov
push
call
nop
rolb
out
repz
pop
sarb
in
int3
orb
xor
jae
mov
xor
mov
adc
pop
out
pusha
adc
insl
jg
xor
sbb
subl
aam
sub
aad
rcll
daa
div
cmpl
pop
adc
pop
aas
out
out
je
xchg
inc
aas
push
mov
fsubrp
fwait
notb
mov
xchg
and
push
pop
cmp
dec
idivb
sub
mov
sub
lret
mov
sbb
or
sub
dec
xchg
es
push
outsl
dec
outsb
push
adc
out
mov
cmp
inc
outsl
decb
mov
mov
gs
mov
add
cs
dec
sbb
stos
test
push
movsl
inc
ds
mov
dec
aad
loope
sbb
mov
scas
mov
scas
popf
pop
jp
lret
arpl
mov
mov
inc
daa
pushf
call
push
pop
and
mov
add
inc
push
arpl
mov
gs
mov
xor
imul
lea
inc
pop
inc
push
add
sub
jbe
xchg
xor
push
popa
gs
aas
out
jg
ljmp
dec
xchg
sbb
mov
sub
mov
adc
ficomps
into
stos
sub
and
dec
lock
xor
cwtl
cwtl
add
jmp
call
jge
gs
sub
xchg
loope
push
dec
xorb
aad
pop
jb
in
jne
imull
adc
fnstsw
inc
adc
and
out
xor
push
dec
in
add
lcall
push
out
fcoml
xor
aaa
push
mov
inc
rolb
push
and
sbb
mov
jp
mov
and
xor
stos
add
sar
mov
das
ret
inc
or
lret
and
fadd
sbb
and
jae
test
popa
out
jnp
mov
mov
or
std
push
push
fmul
adc
inc
sbb
and
pop
push
xor
daa
pop
out
test
repnz
cmpsl
dec
xchg
icebp
mov
popl
inc
fmull
ljmp
add
mov
mov
pop
pop
jae
push
ret
dec
mov
pop
mov
pop
jnp
ret
jge
push
movb
mov
pop
xchg
sbb
bound
pop
ja
adc
pop
dec
push
xor
adc
add
push
add
sub
testb
mov
sahf
das
xchg
mov
and
pop
das
mov
xchg
fcomi
out
or
mov
mov
xor
mov
stos
sub
pop
xor
js
dec
test
cmpsl
insl
lock
out
xchg
sbb
faddl
lods
inc
lret
dec
pop
fwait
insb
loope
or
sbb
mov
push
mov
inc
or
orb
and
aas
jno
fwait
sbb
push
mov
scas
push
inc
lods
out
mov
inc
insl
out
jb
icebp
cltd
push
xchg
test
mov
dec
out
sub
pushf
lods
lahf
cmp
fisubl
stos
xchg
test
mov
or
inc
ret
cwtl
aad
inc
adc
sub
mov
push
mov
ljmp
xor
mov
jecxz
pop
cmc
popa
loop
into
in
adc
pusha
cld
into
mov
dec
lds
sti
add
xor
mov
addr16
rcll
rclb
xlat
xor
ljmp
sub
test
push
push
cmp
mov
jle
push
inc
mov
or
fsubp
repnz
add
loopne
dec
mov
or
es
mov
adc
stos
pmulhuw
das
xlat
shr
jns
inc
and
inc
movb
orb
push
scas
stos
pushf
inc
gs
lcall
cmp
outsl
inc
ds
aas
mov
inc
mov
insl
push
sbb
popf
xlat
jp
or
mov
stos
jno
fistpll
xor
xchg
fnstcw
leave
cwtl
lcall
fs
cli
add
xchg
jge
add
dec
ror
add
jae
mov
jo
scas
outsl
push
orb
or
mov
aas
std
int3
mov
pop
jmp
pop
push
cmp
rorb
mov
sbb
shr
or
int
pop
neg
xchg
adc
addl
movsl
push
je
xor
stos
sub
enter
out
xchg
cltd
and
mov
pop
out
clc
fisubs
inc
push
push
xor
out
add
or
leave
or
xchg
stos
mov
and
flds
adc
jne
andb
insb
or
xor
add
lods
mov
xor
jne
xor
sub
cmp
pop
bnd
mov
ret
in
jbe
hlt
sub
jle
outsb
test
xchg
aam
gs
fwait
adc
mov
data16
jno
jge
vmovntps
xor
ss
out
call
jne
adc
sbb
pop
scas
mov
mov
pop
dec
rclb
mov
scas
push
push
leave
lret
movsl
sub
out
cmp
sub
sub
test
insb
ds
xor
inc
jg
or
push
xchg
cmpsb
fisubrs
mov
cwtl
dec
jo
xchg
mov
add
inc
jg
scas
and
scas
fsubp
stos
pusha
add
rcl
clc
jge
mov
test
and
mov
ss
pop
cmpsl
insl
mov
xchg
lds
cwtl
sbb
movsl
nop
test
add
jp
xor
xchg
pop
les
and
mov
cwtl
xchg
nop
roll
mov
and
xor
enter
loop
das
xchg
jmp
mov
or
fists
pop
aad
adc
fcmovbe
das
lds
pop
neg
scas
push
mov
mov
dec
adc
nop
sbb
fwait
bound
xor
add
xchg
inc
in
xor
sahf
mov
test
lahf
jge
sub
adc
mov
push
out
in
inc
xchg
add
jmp
cltd
repz
notl
adc
jmp
or
add
test
mov
in
mov
js
imul
sbb
dec
mov
push
or
jg
xchg
sbb
das
mov
sbb
xchg
pop
adc
pop
jg
or
notb
leave
mov
cmc
aas
outsl
xchg
pop
sbb
loopne
inc
jns
or
pop
stos
add
push
sbb
push
mov
add
cltd
sub
lea
ljmp
test
jg
dec
xor
mov
or
pop
xrelease
stos
sub
loop
lahf
ret
pop
xchg
dec
ret
sar
imulb
loope
sbb
das
mov
xor
outsb
mov
and
and
outsb
cmc
jo
jl
push
mov
cmp
mov
sub
xchg
sub
sbb
enter
jmp
es
shll
pusha
movsb
negl
aaa
push
adc
addb
loop
cmpsl
stos
cli
dec
pushf
pminub
int
pop
fsub
test
lcall
imul
rcrl
lahf
out
popf
pop
inc
sub
adc
and
push
xor
jb
jl
mov
xchg
lds
adc
mov
in
jb
pop
jge
cmp
adc
mov
test
ficomps
push
xchg
cmp
mov
adc
shlb
mov
dec
mov
mov
insl
sub
jmp
push
or
sub
pop
js
es
mov
sahf
mov
pop
and
mov
sbb
fisubrl
jge
ror
cld
dec
in
faddl
dec
mov
std
leave
xor
sub
or
pushf
ja
mov
stc
mov
jbe
leave
sbb
adc
mov
fistpll
xchg
out
mov
in
call
cs
aad
pusha
andb
inc
std
inc
jo
fdiv
and
lods
pop
aam
dec
inc
add
movsl
jg
and
repnz
out
lret
scas
dec
adc
stc
sbb
mov
movsb
pop
in
mov
insw
xchg
push
xchg
test
int
push
lods
push
inc
inc
mov
orl
mov
ja
bound
out
add
int
pop
es
pop
adc
je
cmp
add
mov
scas
cmp
movsl
push
pusha
pushl
push
cwtl
push
xchg
cltd
push
pusha
mov
sub
aaa
add
in
sti
jmp
es
jbe
cmp
cmp
mov
aad
inc
or
daa
cmpsl
jmp
xorb
loope
roll
mull
fidivrs
push
sbb
sahf
sub
movsb
mov
ljmp
push
out
test
mov
inc
jno
das
mov
or
into
pop
pushf
int3
sti
daa
in
xchg
push
mov
mov
je
ja
sti
mov
aam
cmpl
lea
mov
jne
pop
mov
aas
jecxz
sub
int3
xchg
pop
push
mov
shll
and
lret
jp
cld
xor
and
sbb
lahf
and
imul
mov
out
jbe
sub
push
xchg
jo
sbb
mov
aas
cltd
push
pusha
pop
dec
in
shll
mov
dec
repnz
jns
rcrl
std
sbb
pop
fdivr
aam
lds
aam
aad
add
xor
xor
addr16
adc
push
pop
outsl
int
cmc
dec
pop
adc
imul
and
notl
mov
mov
adc
mov
stc
test
xchg
inc
inc
xor
repz
add
sub
cmp
sbb
add
push
sti
insb
mov
movsb
loope
pop
daa
push
mov
xchg
push
mov
scas
push
loope
cmp
and
xchg
inc
mov
mov
out
mov
fimuls
mov
jecxz
data16
gs
adc
xchg
xor
outsl
sbb
or
gs
cmp
adcl
inc
push
xchg
adc
push
dec
mov
push
mov
in
movsl
xchg
insl
pop
push
jno,pt
pop
pop
mov
xor
mov
mov
sbb
addr16
inc
popf
cltd
enter
nop
xor
popa
rorb
imul
inc
js
xchg
cwtl
nop
jmp
sbb
add
je
sub
loope
mov
xchg
lret
out
add
xchg
test
jge
pop
pop
mov
sbb
ja
and
std
mov
pop
imul
iret
push
out
lods
fistps
insl
insb
in
or
enter
pushl
sbb
sub
iret
loopne
cmc
jo
xor
push
pop
and
ss
lret
test
pop
cmp
enter
cmp
aam
int
in
inc
pop
pop
inc
fs
push
dec
pop
and
inc
xor
jecxz
fsubrl
jmp
subb
repnz
and
iret
loope
mov
lret
sbb
pop
insb
mov
sbb
pop
nop
mov
adc
jb
cmpb
daa
pop
or
xchg
inc
les
gs
xchg
push
adc
aad
rorl
lcall
pop
inc
sti
jmp
mov
hlt
adc
mov
xor
outsl
push
and
clc
mov
fwait
rclb
cmpsb
pop
jmp
push
lds
imul
jbe
popa
inc
mov
mov
and
mov
lea
push
or
xchg
cmpsl
test
icebp
repz
cld
jge
popf
das
sbb
pop
xchg
ds
cmc
push
cmc
shl
mov
iret
popf
aam
jae
adc
daa
fs
notl
iret
lds
mov
mov
mov
xchg
mov
and
outsl
hlt
outsb
push
adc
shll
ret
inc
inc
idivl
out
cld
jg
jne
test
ja
pop
fidivrl
xchg
test
test
cmp
push
pop
test
xchg
andl
cmpsb
rcl
mov
std
aas
dec
fcoms
xchg
loope,pn
dec
cmp
push
and
dec
ret
in
mov
fwait
pop
xchg
stos
jge
push
test
sbb
mov
stc
jb
push
les
movsb
inc
xor
adc
xchg
mov
pop
mov
mov
add
test
sarl
push
adc
mov
addl
adc
and
add
loop
fwait
adc
popf
pop
cwtl
dec
or
inc
clc
lahf
cmc
push
fsubl
imul
in
inc
or
lret
in
jmp
mov
mov
das
icebp
jg
pop
movsb
sub
push
cmp
dec
rclb
push
stc
xchg
xchg
and
or
lcall
ss
idivl
outsb
ds
inc
inc
jmp
adcb
orb
fldl
inc
pop
aad
std
cmp
and
dec
mov
or
ljmp
iret
js
inc
sbbb
call
mov
push
and
sbb
shll
aad
push
sbb
fcoms
xor
add
loop
pop
addr16
cmp
lock
fs
insb
add
mov
xchg
mov
mov
hlt
pop
imul
sahf
sahf
stos
mov
stos
das
push
pop
sub
push
imul
stos
repz
sub
cs
movb
dec
into
push
pusha
cmpsb
fcmovnbe
sbb
lods
mov
fimull
or
rolb
jl
and
fwait
inc
call
add
pusha
add
out
fstl
dec
aas
shrb
xlat
mov
mov
cmp
int
mov
adc
mov
loopne
adc
xor
pop
ror
leave
mov
inc
popf
adc
in
xor
or
or
shll
lds
movsl
or
mov
mov
xor
sub
bswap
dec
arpl
adc
inc
lret
inc
push
push
push
xchg
adc
fsin
dec
or
mov
int
push
loopne
adc
jle
mov
mov
imul
inc
out
aaa
jecxz
dec
add
fs
xor
pop
adc
js
push
push
leave
fwait
pushf
out
pop
mov
aas
pop
decb
fdivp
dec
pop
push
mov
xcrypt-cbc
cmpsl
xlat
pop
jecxz
inc
test
insb
outsb
pop
cmp
pop
inc
mov
mov
inc
mov
stc
cmp
jae
jge
cmp
shufps
sub
int
aam
mov
jbe
movl
push
ja
leave
call
imul
jo
lcall
in
mov
movsl
sub
fidivrs
xchg
and
into
fs
cmpsb
xchg
addl
and
sub
pop
cmc
out
mov
lods
ficoms
mov
testb
or
dec
dec
icebp
mov
test
xorl
adc
in
push
mov
leave
mov
jne
popa
shl
icebp
scas
ss
aas
push
out
pop
lret
insb
nop
pop
je
repnz
mov
xchg
mov
ss
pop
sub
test
outsb
icebp
push
fstpt
lods
fistl
mov
addl
mov
jecxz
pop
pusha
sti
mov
ret
mov
lods
jmp
xlat
cli
cwtl
jle
pusha
xlat
inc
mov
xor
pop
xchg
loop
mov
push
push
xchg
icebp
and
pushf
jmp
inc
dec
jge
push
dec
or
fnstenv
repnz
cmpsb
test
outsl
gs
jg
fmuls
aam
mov
sbb
out
ret
inc
rolb
sbb
test
ss
cmp
sub
lock
aas
popa
jg
push
jns
push
call
out
add
cwtl
or
stc
and
pop
sbb
inc
imul
xor
xchg
in
mov
sbb
imul
outsl
cmpb
cmpsb
push
push
and
mov
xlat
add
mov
inc
das
cmp
jge
cmp
xchg
in
adc
int
push
jmp
push
insb
xchg
pop
fidivrs
pop
in
movsb
cmp
fimuls
mov
aaa
in
push
stos
adc
dec
icebp
pop
rcrb
and
testb
jg
mov
push
les
xchg
adc
jmp
ret
dec
and
insl
in
cwtl
pop
arpl
push
jae
insb
cs
inc
jnp
ss
mov
pop
pop
popw
pop
aas
aam
and
into
scas
mov
lret
and
mov
movsb
je
push
cltd
mov
pop
adc
xchg
sbb
xchg
jmp
movsb
push
arpl
push
ljmp
popf
jns
lret
ljmp
sub
nop
rcrb
movsb
outsb
fsubr
jns
loope
out
xor
jecxz,pt
dec
pop
movsl
lret
aas
enter
jns
gs
mov
in
sub
add
xchg
pushf
xchg
sar
in
orb
push
cmp
cmp
mov
mov
push
lahf
cmp
xor
sti
mov
push
int3
push
push
jno
leave
inc
out
sbb
scas
das
fwait
mov
lods
cmp
out
out
xchg
cmp
mov
fwait
loop
aaa
adc
jg
jge
mov
adc
ss
and
adc
mov
cmp
test
inc
cltd
data16
outsb
cmp
dec
inc
mov
outsl
insl
sbbb
push
stos
hlt
in
pop
xchg
stc
inc
cmp
repz
lahf
xchg
pop
ret
fs
add
movsl
cmp
out
fsub
jp
roll
int
movsl
outsl
mov
fwait
das
loopne
xchg
decl
cld
jne
repnz
sahf
add
pop
xchg
mov
sub
mov
xor
add
pop
and
fdivrp
sbb
lods
sbb
aam
pop
psrlq
mov
es
xchg
cmp
test
xor
cmpsl
movswl
pop
loopne
push
repnz
orb
stos
jge
ss
int
std
repz
aad
inc
mov
test
cmc
or
lds
inc
adc
pop
adc
sar
subb
sub
jmp
adc
adc
inc
jmp
std
mov
repnz
adc
cmpsl
movsl
in
loope
mov
and
inc
jmp
cmpsb
adc
mov
xchg
insb
cli
add
push
or
dec
push
mov
fcomps
shll
dec
test
jnp
lds
mov
mov
insb
lcall
push
sub
imul
dec
js
inc
pop
aad
or
sbb
in
jg
pop
sub
les
jle
add
rorl
rorl
test
push
or
adc
push
jg
incb
mov
js
mov
pop
cld
fistpl
lea
aaa
inc
fiaddl
pop
adc
dec
dec
ljmp
imull
adc
fwait
in
push
call
jne
orb
test
call
pop
xchg
lahf
dec
hlt
int
pushl
and
stos
xchg
in
mov
xchg
sub
fcmove
and
stos
iret
push
mov
int3
sti
call
lcall
mov
inc
jecxz
cmp
push
jo
imul
push
jbe
inc
or
pop
cmp
cmp
xlat
mov
or
xor
mov
xchg
cmp
aam
icebp
pop
xchg
std
mov
mov
xor
pop
int
leave
mov
lret
xchg
push
imul
in
insb
ss
mov
loop
pop
jecxz
pop
inc
or
xor
popf
and
aam
inc
dec
scas
sub
gs
dec
and
mov
cmpl
jl
dec
sub
inc
or
add
sahf
mov
popa
js
jb
fadds
das
or
mov
ret
mov
cmpb
stc
loop
and
call
or
push
inc
popf
push
arpl
mov
mov
sbb
sbb
xchg
cmp
aam
jmp
repz
stc
lret
sti
loop
int
aas
fst
adc
jl
xlat
xchg
mov
sub
fxch
fadd
pop
insl
jne
and
lods
jae
rcr
fstpl
pop
mov
xchg
test
addr16
jae
dec
aad
loope
cmp
dec
and
mov
push
xchg
mov
sbb
jg
int3
loopne
add
push
fistpll
pop
outsl
iret
daa
in
pop
in
and
inc
lret
xchg
lock
mov
bound
iret
adc
lods
inc
shl
mov
jne
mov
scas
dec
sub
orl
lds
loop
xchg
mov
idivl
shl
sbb
fldl
mov
iret
ja
pushf
mov
sub
clc
pop
cmp
icebp
enter
mov
and
push
mov
orb
and
adc
loop
push
arpl
xor
cltd
ret
cwtl
or
in
lret
add
notl
stc
jae
xchg
adc
jnp
dec
push
pop
std
insb
cmpsl
cmp
mov
popf
out
push
mov
adc
fstp
sbb
pop
push
in
and
mov
or
push
add
jmp
push
pop
popf
sub
push
in
mov
and
sbb
adc
push
or
jnp
cltd
and
lahf
and
aaa
aaa
xchg
push
sbb
scas
ja
sbb
cmpsl
mov
hlt
or
jb
mov
mov
test
xchg
test
cld
jns
ds
jmp
inc
adc
pavgb
jmp
jne
add
hlt
sbb
mov
loope
ja
popf
mov
jmp
arpl
lods
add
es
aaa
fldl2t
sbb
xchg
aad
sbb
and
xchg
repnz
jo
ret
test
push
inc
xchg
sbb
inc
hlt
sub
fcomip
fistpll
xor
jb
push
inc
pop
lock
and
sahf
add
outsl
pop
mov
pop
inc
lret
and
jne
xchg
jns
test
into
mov
mov
daa
aas
push
lods
jge
jge
adc
test
popa
sbb
test
jg
enter
jae
lea
je
loope
ret
lods
cmpsb
ss
je
out
and
fmuls
pop
js
xor
insl
sti
imul
jb
daa
sub
arpl
pop
repz
lcall
mov
repnz
sbb
hlt
add
std
cmp
cltd
mov
push
pop
jbe
into
mov
push
xchg
aas
sub
sub
sbb
xor
enter
mov
out
inc
pop
popf
dec
insl
xchg
out
jl
int
cwtl
hlt
hlt
xor
cltd
xchg
xchg
pop
pop
movsb
jecxz
bnd
lret
sub
in
arpl
das
xor
mov
pop
add
inc
shll
adc
mov
orl
ja
lcall
imul
jb
mov
int
mov
mov
icebp
out
aaa
dec
push
add
lock
dec
dec
cli
adc
out
push
pushf
stos
cltd
fnstenv
mov
jnp
stos
or
adc
or
adc
mov
test
pop
rcr
push
xchg
loop
or
dec
jp
in
mov
mov
fidivrs
adc
xor
lock
jle
pop
xchg
cmp
jl
mov
mov
push
fsubl
aad
mov
sub
lds
mov
cmp
mov
xor
adc
sbb
xchg
add
and
mov
sbb
or
or
gs
stos
test
xlat
sbb
mov
mov
mov
lods
adc
fisubrs
mov
scas
mov
mov
mov
mov
test
inc
repnz
loope
push
in
int3
mov
pop
jmp
xor
mov
sub
pop
push
and
out
mov
loope
lds
push
arpl
or
adc
mov
loopne
inc
sbb
dec
add
mov
fistl
lods
push
mov
xchg
flds
xchg
sti
and
repz
mov
xchg
xor
out
idiv
stos
sbb
pop
mov
xor
sbb
popf
jo
xchg
imul
ret
cmpl
adc
inc
mov
mov
mov
push
cmp
push
jne
sarl
pusha
in
insb
mov
mov
cmpsl
jl
mov
push
cmp
xchg
divl
mov
jge
and
cli
rolb
mov
mov
mov
pop
sbb
sub
xchg
jle
mov
lcall
aam
mov
lods
pop
in
push
push
scas
in
movsl
aad
jno
imul
addr16
rclb
xor
in
mov
fnstsw
jne
pushf
repnz
xor
lahf
int3
jbe
into
lahf
mov
movsl
xor
xchg
xchg
test
div
nop
scas
inc
xor
std
scas
cmp
adc
jo
cltd
rcll
rcrb
shlb
divl
jbe
pop
and
mov
in
add
mov
cmp
mov
jns
imul
mov
sbb
or
and
pcmpeqd
xlat
dec
arpl
push
adc
inc
mov
dec
mov
inc
flds
clc
jns
pusha
dec
ljmp
jne
mov
cmpsb
mov
mov
mov
xchg
pop
jo
fdivs
packsswb
sub
cmp
fwait
pop
jns
arpl
sub
in
sbb
xchg
xchg
mov
xor
push
or
sbb
dec
fsubrl
cmp
fchs
pop
push
jns
lds
lock
outsb
mov
jo
add
rcl
xor
ss
mov
xor
test
lret
xchg
daa
int
pushf
jmp
rcrb
push
cmp
add
sbb
jne
pushf
test
pusha
dec
xchg
out
push
push
sub
out
push
mov
repz
cld
xchg
loopne
add
test
std
loopne
rolb
fwait
jbe
fstpt
mov
aas
jb
lahf
push
push
mov
and
loope
movhps
push
sub
jg
push
sbb
xchg
dec
cmp
mov
mov
in
mov
xor
scas
cwtl
cld
add
icebp
mov
rcll
aas
sub
xor
mov
pusha
aad
stc
inc
jae
outsb
lret
popa
cmc
jb
shl
inc
lcall
ja
in
and
and
and
scas
into
movsb
nop
xchg
int
test
mov
das
jb
loope
xor
xchg
stos
xchg
inc
stc
lods
add
pop
ja
mov
jns
cwtl
leave
scas
dec
mov
jp
mov
test
insl
subb
cli
xchg
push
inc
push
sub
test
imul
jbe
and
stc
lret
or
push
jns
adc
lods
cmc
ds
iret
push
incl
mov
sub
ret
adc
or
inc
dec
xchg
mov
mov
mov
jle
ret
lcall
pop
jae
cli
or
int3
hlt
pop
cmp
sub
cli
mov
sbb
mov
inc
clc
mov
in
dec
in
or
pop
push
jae
mov
mov
jae
shr
daa
cltd
imul
mov
repz
insb
pop
adcl
shll
xchg
adc
lods
lret
imull
cli
cmpsb
cmp
pop
and
fucom
ljmp
push
je
add
sarb
xchg
push
push
shlb
dec
call
dec
push
sbb
add
call
mov
sti
fldenv
push
inc
daa
clc
push
ja
je
mov
in
cmp
jp
sub
mov
sbb
push
stos
out
out
js
add
inc
cmp
pop
inc
ficomps
pusha
pop
popa
xchg
out
jge
xchg
in
sub
lret
outsb
ret
clc
cmp
fisubrs
movsl
fcmovnb
push
into
cmpsl
movsb
xor
inc
insb
mov
mov
repz
add
mov
push
cmp
add
nop
xor
in
in
in
cmc
adc
lret
pop
mov
mov
mov
ds
push
xor
lcall
ss
popa
es
fmuls
out
mov
inc
pop
adc
jmp
mov
adc
pop
popf
pop
int3
lods
mov
test
cmpsl
mov
xchg
cmp
cltd
add
sahf
mov
aas
ret
push
push
outsb
push
cwtl
xor
jmp
jge
push
add
xor
jbe
popf
mov
pop
jb
pusha
outsb
adc
adc
inc
ret
or
sbb
sub
push
ret
jg
mov
loop
sub
xchg
cmp
dec
or
enter
mov
pop
or
jp
pop
jb
mov
lret
arpl
out
push
and
mov
ja
sbb
loopne
scas
mov
scas
enter
add
adc
push
out
scas
and
pop
ljmp
xlat
call
jb
rcr
je
push
cltd
popa
jge
inc
dec
cmp
mul
stos
in
sbb
mov
mov
xor
xchg
aaa
xchg
jo
popa
mov
cwtl
fldenv
dec
insb
loopne
sub
mov
xor
push
out
es
mov
push
fcompp
or
xor
xchg
pop
arpl
clc
dec
lea
sbb
sub
jns
out
cmp
inc
dec
jb
ljmp
xchg
mov
stos
inc
testb
sub
test
stos
mov
fdivrp
add
scas
pusha
int3
cli
daa
movsb
fidivrs
dec
lcall
add
fldl
and
mov
mov
add
push
je
lcall
test
clc
out
ss
and
in
rolb
jge
jnp
insb
sbb
mov
mov
push
iret
scas
jge
int3
inc
ficoms
cmp
int
in
je
sti
jbe
sahf
fsubrl
fisubrs
fcomi
add
andb
sbb
lds
mov
lret
xchg
enter
cli
mov
push
push
pushf
aaa
std
pop
add
dec
loope
sub
inc
cmp
jno
mov
jle
enter
push
jmp
and
sbb
or
test
and
jecxz
or
adc
stc
add
pop
loope
int3
addr16
push
xor
mov
pop
std
sub
cmp
aam
cmp
mov
nop
sahf
push
popf
sub
rcrl
scas
into
fistps
dec
push
sti
dec
dec
stc
stc
or
xchg
ja
xor
leave
call
push
push
pop
pop
xchg
add
stc
jecxz
dec
in
ljmp
jae
sbb
ljmp
pop
inc
lret
mov
mov
adc
xchg
mov
repz
sub
lret
les
xor
or
aad
pusha
out
jne
out
push
popa
shll
push
dec
stc
std
hlt
inc
inc
sbb
ljmp
pop
test
xlat
xor
mov
sbb
add
aaa
pop
jecxz
repz
cmpsb
ds
cwtl
es
int
lret
mov
pop
xchg
sbb
test
gs
dec
adc
sbb
jp
jb
into
push
and
pop
and
jb
clc
push
fisubl
mov
add
cli
inc
adc
lds
add
jnp
shlb
cmp
ror
cmp
or
sbb
int3
or
push
mov
dec
aam
cwtl
shrb
sbb
addl
mov
xchg
dec
ret
repz
roll
insl
in
push
push
je
inc
push
jne
repz
pop
lret
cmp
lret
in
sbb
imul
lods
in
push
push
or
or
dec
push
sbb
out
es
mov
adc
insl
ficoms
daa
lock
xor
repz
or
jne
rcr
arpl
xor
mov
int3
sub
test
movsl
inc
sti
mov
mov
imul
mov
cld
cmp
hlt
hlt
js
ret
das
data16
pop
adc
xchg
movsb
adc
push
frstor
jecxz
adc
add
das
pop
les
and
dec
jp
sbb
jns
mov
sbb
ret
scas
or
mov
and
mov
dec
inc
xchg
pushf
xor
mov
ret
jmp
mov
mov
fmul
fimull
pop
rcrl
pop
sahf
addl
loop
cmc
dec
xor
sbb
ja
inc
jb
and
add
adc
rorl
mov
call
ret
dec
mov
stos
sbb
or
sahf
or
xchg
fdivl
pop
lods
lahf
sbb
subb
inc
mov
and
and
mov
jmp
insb
jae
xchg
dec
jecxz
and
out
int
jecxz
mov
jne
sbb
dec
xor
sbb
jp
xor
sbb
jnp
in
mov
xchg
sbb
jnp
or
std
or
dec
jle
mov
lock
lods
mov
dec
sub
pop
out
mov
or
mov
sahf
nop
in
dec
cmp
mov
push
ret
stos
cmp
sub
push
pop
push
or
xor
push
rclb
fwait
sahf
test
test
out
enter
out
xlat
jmp
testb
dec
jle
pop
out
cmp
xlat
push
rolb
scas
dec
or
notl
inc
lret
mov
fnsave
inc
cwtl
imul
in
test
test
jl
pushf
pop
push
sbb
xorl
push
dec
xchg
xchg
jg
jno
mov
aas
int3
out
dec
xor
fsubr
les
dec
sub
mov
in
mov
test
ds
inc
xchg
hlt
sti
into
int3
int3
sbb
stc
sub
mov
mov
cld
jno
ds
in
cmc
push
outsl
sarb
stos
adc
jmp
test
add
xchg
bound
mov
sti
mov
inc
jnp
mov
push
pop
es
in
leave
rorl
pop
cmpl
push
ss
jmp
pop
pop
repz
and
inc
jne
aaa
sbb
lea
addl
dec
test
std
aaa
out
or
jmp
sahf
inc
leave
test
sbb
add
and
insl
fwait
dec
xor
jnp
xchg
repz
sub
inc
dec
push
js
mov
sub
jmp
lcall
mov
mov
cmc
or
lds
push
xlat
ficoml
add
incb
js
mov
push
stos
cmp
cmp
loop
mov
add
dec
filds
jae
das
sbb
leave
std
sub
or
dec
in
test
xor
aas
lahf
lock
and
push
xchg
dec
jmp
lahf
pop
js
and
lods
lcall
mov
push
add
inc
lds
inc
das
out
in
or
add
xchg
clc
dec
int
cmp
add
aad
sti
mov
dec
pop
jg
bound
cmp
into
mov
push
ss
or
iret
mov
push
ja
push
push
push
mov
push
cmp
push
pop
into
dec
clc
ss
push
bound
punpcklwd
inc
add
add
testb
or
mov
push
and
push
xlat
adc
mov
xor
jmp
fdivrl
dec
fnstcw
stc
dec
ss
pop
lcall
sbb
mov
das
lahf
mov
fwait
stos
les
stos
insl
adc
pop
add
pop
add
and
icebp
mov
stos
repnz
lods
pop
jnp
or
add
scas
sub
test
xor
add
sub
push
jge
pop
push
stc
push
stc
inc
xor
cmp
mov
ss
nopl
into
movsl
sub
out
sub
xchg
sub
out
mov
mov
add
cmp
jge
movsl
and
enter
push
fnstcw
mov
and
jmp
fsubl
jecxz
movsb
or
out
daa
mov
and
inc
xor
filds
pop
dec
cmp
jne
adcl
push
jmp
pop
test
pop
not
lahf
cli
pop
imul
xchg
mov
inc
or
inc
pop
pop
xchg
inc
cmp
sub
dec
pop
push
inc
pop
dec
imul
inc
iret
scas
out
icebp
in
das
outsl
out
jg
rcll
mov
mov
loope
cmp
sub
outsl
sub
lcall
stc
or
xchg
mov
cmp
int
inc
cmpsl
je
lods
data16
or
xlat
sbb
je
cmpsl
int3
or
lahf
jle
mov
iret
enter
outsl
lock
fstl
mov
icebp
jae
push
in
shl
xor
stos
js
int
xchg
and
into
js
repz
gs
ret
rolb
push
xor
mov
or
rcrl
mov
xchg
push
gs
sub
aaa
or
mov
xor
out
push
ds
je
in
mov
push
pop
int3
jo
outsl
jb
adc
add
or
xchg
add
pop
aas
adc
mov
outsb
xor
xchg
push
pop
cmp
jb
cli
not
imul
xchg
test
jns
push
and
adc
jle
stc
subb
push
and
ret
dec
in
nop
xchg
jo
sti
daa
scas
and
mov
data16
jnp
ds
add
pop
pop
popa
xchg
and
sub
aas
movsl
pop
sub
out
jbe
dec
cltd
jae
jns
rclb
int3
push
das
inc
xchg
iret
in
scas
scas
clc
cli
rcrb
test
xchg
insl
sub
fbstp
arpl
int3
outsl
ret
mov
lahf
in
sub
jbe
push
xor
fmull
jge
mov
pop
gs
cmpsl
lea
je
xor
aaa
icebp
mov
mov
mov
cld
insb
push
sbb
cmp
sbb
xchg
or
mov
add
sub
cmp
sbbb
je
or
pop
pop
loope
pop
or
loop
pop
push
xchg
lahf
cmp
cltd
clc
pushf
jb
outsl
mov
xchg
pop
sub
mov
cs
cmp
jmp
loopne
jno
mov
int3
inc
fldcw
add
adc
cwtl
cltd
dec
dec
sbb
jb
adc
dec
add
cld
add
mov
inc
xchg
lock
insb
xchg
loopne
lahf
cwtl
in
mov
xchg
add
movsb
in
iret
jmp
stos
sbb
mov
mov
xor
sbb
movsl
mulb
sbb
nop
lret
cmc
xor
into
sbb
repz
sbbl
stc
mov
dec
aas
pop
pusha
jnp
cmpsb
cmp
or
push
add
xor
dec
sub
fildll
cmp
dec
sbb
xchg
imul
dec
loop
sub
cmp
ljmp
dec
dec
mov
fisttps
mov
rol
mulb
and
inc
rcr
push
repnz
aas
mov
rcll
lods
and
jge
aad
inc
out
std
mov
and
js
repz
sbb
inc
pop
out
loop
loop
test
mov
loope
in
pop
inc
adc
les
test
insb
pop
xchg
jnp
movsl
aam
sbb
and
dec
ljmp
xor
js
push
iret
cmp
gs
xchg
lods
push
pop
dec
jb
bound
push
mov
mov
sbb
rclb
push
or
rcl
jbe
fwait
push
push
mov
push
cmp
in
push
shrl
cmc
outsb
pop
xchg
or
mov
mov
jnp
stos
repnz
mov
adc
or
xchg
jb
push
push
lret
cmp
mov
xlat
inc
int
out
orl
clc
jl
add
push
xchg
pushf
mov
movsb
sahf
push
mov
lret
les
adc
stc
or
jmp
test
jle
inc
sbb
stos
pop
and
inc
fsubr
je
je
and
lea
inc
dec
ret
stos
into
dec
clc
data16
xchg
test
xchg
jno
adc
in
popa
aas
enter
adc
fisttpll
or
xor
ss
addr16
pushf
out
jge
jae
in
xchg
pop
pusha
jp
adc
jl
packuswb
iret
test
popf
lods
pop
dec
pop
dec
sbb
lret
jg
lcall
ljmp
or
repz
mov
cwtl
jae
test
cmp
fisubrs
fistps
inc
xlat
and
ret
sub
sbb
popf
cmpsl
lods
movsl
inc
pop
testl
jecxz
add
mov
jge
sub
fstpl
jb
hlt
pop
addr16
dec
jge
pop
inc
in
jnp
in
dec
ljmp
cmp
arpl
add
sbb
call
mov
sub
jl
add
cmp
push
addr16
popa
mov
mov
or
sub
fs
mov
stc
repz
stos
and
insl
subl
inc
xchg
and
cli
sbb
pop
mov
lret
out
insb
outsl
lcall
lret
fdivl
ja
mov
mov
jmp
dec
orl
daa
mov
pop
mov
test
adc
mov
mov
fimuls
enter
popl
mov
outsl
xlat
sub
in
jns
arpl
pushf
negb
fcmovnbe
fstpt
scas
test
out
pop
andb
addr16
movsb
xlat
push
adc
int3
imul
sysenter
cmp
lock
mov
or
push
xchg
inc
mov
mov
js
jg
ljmp
cwtl
push
add
je
push
clc
pop
mov
cwtl
outsb
inc
sub
out
jmp
sbb
aam
xchg
orl
sbb
mov
adc
jg
adc
sbb
xlat
imul
addl
ret
pop
outsb
sbb
aas
fsubrs
stos
scas
aaa
das
lods
ja
jg
dec
xchg
mov
enter
mov
push
xor
xchg
add
pop
rcrl
push
scas
xor
icebp
sub
lock
or
mov
fs
iret
call
lret
push
test
and
sti
mov
jmp
leave
mov
pushf
outsb
xchg
lret
data16
mov
mov
in
adc
loop
testb
pop
ljmp
outsb
cwtl
callw
push
or
fimull
inc
lock
jge
ja
lods
jp
scas
mov
xchg
inc
in
push
inc
mov
ja
cli
and
inc
cmpsb
shrl
aaa
in
out
mov
rorb
jmp
rolb
sub
and
in
ret
jg
orl
or
int3
adc
enter
push
divl
sub
test
repz
out
sbb
in
test
movsb
das
sbb
push
in
and
xor
or
popf
movsl
lea
dec
stos
loope
shrl
cmpsl
pop
adc
xchg
addr16
icebp
push
stos
std
adc
ja
cli
lret
sub
mov
push
fildl
fimull
jbe
cmp
lea
jnp
out
bnd
fistl
jle
and
add
mov
xor
inc
push
inc
push
pop
xchg
pusha
outsb
fsts
pop
sbb
pop
push
icebp
dec
stos
jbe
das
dec
fldt
aad
sub
or
jne
push
sub
mov
jle
pop
add
pusha
xor
and
mov
inc
mov
push
data16
push
sbb
ror
pusha
cmp
daa
dec
mov
in
fsubl
mov
fisubl
and
cli
call
and
sub
lods
fstl
loopne
imul
adc
sub
or
jecxz
sbb
inc
lcall
mov
push
xchg
and
lret
movsl
jmp
push
imul
adc
addr16
inc
mov
dec
mov
jg
aaa
or
aad
sti
inc
test
xchg
push
sub
dec
mov
ret
dec
jp
inc
hlt
dec
jae
mov
in
out
sub
aas
pop
xchg
sbb
test
add
lahf
jne
std
scas
iret
and
adc
js
clc
out
mov
call
shll
popf
xchg
loope
push
int
pop
or
test
pushf
cmp
cmpsl
mov
popl
fcomip
shl
rcll
mov
test
inc
test
cmpsb
xchg
int
cmp
nop
xchg
add
orb
idiv
out
cmp
test
mov
adc
inc
adc
pusha
jp
cwtl
adc
hlt
bound
jns
jae
xchg
popl
shl
scas
cmp
jge
cmp
das
mov
dec
inc
sti
jmp
mov
inc
push
je
sti
nop
out
add
loop
ja
jno
cmp
xchg
mov
jecxz
add
and
or
lea
ret
sub
push
repnz
sbbb
sbbl
mov
sti
mov
ds
push
in
sbb
push
mov
int3
loopne
cmc
mov
stos
jle
rcll
call
lods
test
andb
hlt
shrb
mov
lahf
adc
clc
or
lods
or
dec
or
imul
das
fistpll
movlps
std
sub
lahf
std
icebp
inc
pop
xlat
sbb
cs
stos
pushf
xor
inc
xchg
test
bound
test
call
push
sub
mov
movsb
sub
mov
out
cmpsl
or
divb
in
pop
scas
xchg
pop
mov
add
xchg
je
cmp
adc
adc
leavew
fisttpl
xor
mov
mov
and
sarl
or
lds
adc
repnz
xlat
mov
bound
loope
addr16
adc
in
es
push
pop
pop
stc
dec
or
and
fs
fadds
cmp
inc
xchg
rorl
xchg
mov
mov
std
push
loopne
cmpsl
data16
shlb
pusha
add
aas
aas
sti
inc
cmc
clc
jecxz
inc
stos
movsb
mov
loop
pusha
dec
cmc
stc
imul
or
cmp
popl
inc
add
outsb
sbbl
iret
les
dec
sub
repz
test
adc
popf
pop
ja
push
lret
pop
mov
out
jnp
cmp
movsb
sub
and
mov
mov
nop
pushf
mov
xor
ja
loopne
xor
rolb
sbb
lods
mov
xor
mov
clc
lret
ret
mov
ret
insb
dec
jno
movsl
aas
daa
incl
sub
xor
sbb
je
mov
mov
test
cmp
stos
inc
mov
je
negl
cmpsb
mov
push
rcrl
subl
mov
inc
cmp
cld
outsl
sub
xlat
cmp
sbb
ds
stc
mov
push
cmp
mov
inc
pop
pop
scas
adc
out
aaa
leave
ja
mov
cmp
jmp
add
pop
xchg
xor
cli
push
add
in
or
mov
sub
jg
push
jbe
mov
mov
rcll
ret
inc
push
lods
call
ret
mov
fcmovb
fists
mov
aaa
cs
dec
push
mov
mov
test
leave
add
xlat
push
cmpsb
jb
and
pop
pop
mov
fildll
push
sbb
sbbl
stc
jmp
push
daa
lcall
or
cmpsb
dec
rcr
cmp
push
xchg
aad
aam
add
mov
sbb
xlat
pusha
ja
daa
test
aas
push
punpckldq
cmpl
scas
test
sub
lds
add
and
jno
popa
into
roll
test
pop
rcr
xlat
and
ret
cmp
jmp
dec
jmp
rol
insl
jle
out
and
xchg
sub
mov
pop
inc
rcll
add
addr16
push
es
inc
cwtl
out
orb
int
outsl
je
std
jne
cmpsl
dec
cmc
out
inc
aas
adc
cltd
dec
gs
fisttpl
or
notl
dec
or
pminsw
rclb
and
nop
scas
daa
aas
add
insb
push
dec
and
and
das
popf
sub
pop
rcrb
jl
test
mov
sbb
ds
add
mov
inc
ds
pop
stos
outsb
xchg
aad
dec
rcrb
xor
mov
shll
out
in
cmp
or
lea
and
loop
mov
stc
inc
aas
lret
mov
popf
shld
pop
pop
jg
mov
push
daa
daa
add
jnp
sub
inc
push
dec
mov
shll
mov
adc
inc
jnp
pop
mov
add
or
cs
fcomip
pop
orl
lods
mov
sbb
dec
adc
sbb
rcl
sarb
aas
push
lret
pop
xor
pop
inc
mov
push
mov
push
cwtl
cli
scas
sub
or
or
jo
sar
inc
xchg
push
pop
or
sub
scas
or
jns
push
lock
pop
scas
adc
cwtl
imul
and
movsl
ljmp
push
mov
es
mov
xchg
push
outsl
xchg
sbb
mov
sbb
rcrb
insb
mov
std
daa
dec
rol
icebp
push
lock
lret
dec
add
aas
dec
pop
mov
pop
loope
mov
outsl
adc
sbb
inc
rol
sub
xchg
pop
mov
in
jl
loope
mov
int
sub
sub
and
jp
jmp
and
lahf
out
dec
rcr
mov
or
ljmp
imul
adc
js
sahf
call
push
cltd
movsl
mov
or
add
dec
popf
out
ror
cmp
subb
adc
stos
add
push
push
and
ja
in
adc
xor
add
pop
dec
adc
stc
or
ljmp
adc
xchg
mov
pop
movsb
push
mov
push
pop
pop
push
adc
pop
aas
jp
movsb
inc
imul
fimull
sahf
insl
push
les
and
pop
inc
ret
repnz
sub
cmp
pop
out
lds
mov
or
add
mov
test
jecxz
add
push
stos
cmp
mov
incb
popf
aaa
stos
mov
subb
cwtl
xor
shlb
das
adc
insb
jns
mov
lret
jns
jp
popa
push
mov
dec
icebp
lcall
or
faddl
jae
push
rclb
iret
mov
insb
dec
ja
cli
and
adc
sbb
mov
hlt
shll
inc
cmpb
mov
push
dec
pop
jg
mov
jae
cwtl
jmp
loope
inc
push
add
fbstp
stos
data16
lods
push
dec
icebp
ja
xor
lock
mov
cmc
test
pop
fildll
mov
rcrb
stos
hlt
stc
es
dec
xor
cmc
insb
filds
sub
mov
mov
pop
sbb
mov
mov
jns
movsl
sti
and
add
stos
mov
pop
ss
ret
or
lods
sti
pop
mov
int
fucomi
jno
mov
pop
cmp
or
cmp
inc
sbb
mov
xchg
sbbb
and
mov
fistps
leave
xor
mov
lret
call
fstl
push
loope
fchs
mov
sub
pusha
inc
xchg
cmp
cwtl
mov
dec
andb
mov
cmpsl
fcoml
jle
iret
inc
repnz
pop
sbb
dec
pop
inc
fdivrp
xlat
cmp
addr16
xlat
nop
push
out
mov
and
rcll
sub
xchg
cmpsl
mov
inc
pusha
push
pop
bound
sahf
pop
in
cmp
lret
daa
jbe
in
sbb
and
xchg
xor
cmp
stos
aad
lret
xchg
xchg
sub
loop
xor
int
pop
lock
std
rcl
jae
test
int
add
mov
test
jns
cmp
xchg
cwtl
push
adc
push
in
fwait
jb
cmp
and
cmp
inc
xchg
sub
jbe
sub
push
aas
movsl
mov
fidivrs
or
insb
dec
andl
in
sub
push
inc
clc
sub
data16
rcl
sub
jge
es
ljmp
loop
aaa
outsl
sarl
sub
sbb
imul
mov
out
mov
push
pusha
in
mov
out
pop
mov
jecxz
xlat
xor
sti
sar
iret
stos
xlat
add
push
xchg
fdivrs
sub
mov
mov
or
shr
dec
or
push
pop
and
push
dec
adcl
adcb
add
cwtl
mov
xor
enter
test
int3
cmp
shlb
adc
pop
ss
sbb
ss
xchg
fsubr
daa
push
test
les
decl
pop
cmovp
js
fnstenv
push
js
dec
scas
ja
sbb
shr
mov
jl
test
mov
jno
adc
jnp
sub
add
push
dec
push
imul
xor
sub
xor
stc
sti
out
sub
ret
imulb
mov
fcmovnb
and
adc
jno
ss
fwait
jb
pop
mov
and
push
xor
add
adc
and
xlat
jecxz
mov
dec
jbe
fsub
gs
inc
cmpb
fs
sarl
and
mov
int3
sbb
mov
push
cli
popa
shr
sbb
inc
scas
out
call
data16
mov
addr16
push
xchg
inc
add
cs
pop
insb
push
mov
pushf
out
jnp
inc
xorl
mov
fdivl
inc
inc
add
sbb
sub
dec
add
xor
and
iret
and
pop
jmp
ljmp
jbe
sbb
hlt
movsb
xor
adc
mov
mov
test
popf
pusha
adc
repnz
out
test
jb
jae
pop
orl
or
loope
sub
or
adc
hlt
movsb
dec
xchg
jns
sarb
pop
inc
jno
out
pop
daa
xchg
movsb
xchg
fcmovnbe
fwait
cmp
lcall
push
sti
lcall
mov
xchg
cwtl
loop
mov
insl
les
shll
fdivs
or
arpl
xlat
stos
or
call
xchg
push
sbb
and
adc
xchg
jle
jo
xchg
xchg
ss
mov
or
jecxz
xchg
mov
ja
dec
sub
sbb
and
or
gs
or
movsl
jns
jo
lahf
mov
test
outsl
xlat
fwait
mov
mov
or
mov
loope
adc
sbb
shlb
addr16
sti
dec
mov
add
sbb
inc
out
into
lret
xor
inc
pop
push
loope
push
adcb
outsb
push
fwait
lock
sbb
push
mov
lret
es
mov
xchg
sub
rcll
ss
out
mov
clc
scas
scas
icebp
push
xchg
and
sub
or
sbb
jl
add
ret
je
mov
fprem
jmp
sar
jecxz
imull
xor
outsl
pop
add
hlt
outsl
mov
and
push
inc
stos
mov
xor
xor
loop
dec
out
push
inc
or
jbe
jno
inc
cmp
sub
mov
lds
lods
jl
shlb
pop
mov
jmp
inc
mov
rorl
dec
sbb
sbb
mov
inc
test
loopne
add
ret
sti
cmp
lds
xchg
jnp
mov
mov
jns
jns
test
dec
mov
cmp
mov
sti
loopne
in
xchg
adc
cwtl
add
push
aaa
xor
add
filds
sbb
sub
cmpsb
adc
dec
push
lods
pop
adc
or
mov
aas
pop
jo
aad
int
insb
dec
out
fildl
mov
fmull
ret
rcll
sbb
int
roll
pop
daa
lahf
xor
gs
jae
mov
xor
loopne
jl
cld
pusha
xchg
or
ds
jae
inc
adc
sbb
pop
mov
ss
out
push
jne
test
xor
pop
sahf
lods
test
adc
cli
pushf
xlat
std
adc
fldl
les
jl
ljmp
push
mov
cmpsl
pop
imul
lahf
add
mov
pextrw
adc
cltd
mov
mov
sub
pop
mov
aam
jno
jns
into
or
cltd
and
push
cmpsl
test
cmpsl
add
cmpsl
xchg
dec
mov
push
fwait
xchg
inc
mov
jae
mov
dec
inc
cmpb
sub
and
dec
notl
pop
into
mov
je
mov
mov
jl
pop
jno
jb
mov
scas
dec
mov
test
add
gs
jns
movsl
jp
lret
fdivrs
fcomps
xor
movsl
std
loope
fildl
loop
xlat
lods
xchg
pop
xor
and
pop
test
and
je
shl
sti
jo
push
jno
ds
out
xchg
shlb
shl
mov
mov
and
xchg
push
xchg
push
out
cmpl
call
sbb
mov
popa
or
xchg
mov
xchg
aad
pop
or
add
loopne
popf
into
rcll
sbb
cmp
adc
hlt
insb
add
mov
push
inc
rorb
pop
inc
add
loop
mov
and
int
sbb
outsb
push
lret
cmpsb
cmpsl
lret
or
jae
ficoms
sub
pop
movsb
hlt
pop
pop
inc
jg
outsb
pop
xorl
adc
mov
push
in
js
xor
in
ss
imul
xor
roll
xlat
inc
add
sub
mov
call
xchg
pop
jne
cltd
xor
je
cwtl
adc
adc
int3
dec
imul
shl
ja
jno
cld
not
rorl
call
mov
leave
arpl
adc
jmp
sti
cmp
add
loop
or
sbb
sub
mov
shr
sti
push
jp
lret
test
and
cmpsl
mov
cmp
dec
or
ds
sbb
mov
mov
bound
fdivp
jno
jo
jl
popa
dec
dec
xor
cmpsb
stos
xchg
jecxz
in
and
sub
and
pop
or
test
lret
loope
mov
cmp
pop
xor
adc
mov
mov
ret
dec
push
aas
mov
jg
cmpb
int
repnz
xor
cmp
push
lods
jg
mov
sarl
fwait
int3
pop
jp
pop
insb
pop
int3
inc
mov
jnp
pop
nop
pop
push
clc
scas
incb
jo
clc
mov
jmp
and
aaa
push
mov
sub
cli
insb
sahf
xchg
sbb
imul
add
mov
push
dec
mov
inc
sahf
cs
mov
fstp
es
dec
fstl
mov
jle
loop
fmulp
push
mov
sub
inc
in
dec
jecxz
xchg
sub
cwtl
mov
out
int
ja
outsb
xor
mov
pop
stos
or
in
loopne
add
push
cmp
push
inc
clc
push
jnp
incl
jg
les
pop
sub
sub
push
inc
outsl
cmp
rorb
in
enter
ss
jb
sahf
ffree
lock
adc
out
sub
cmc
jns
loopne
and
and
push
or
lods
sbb
sub
notl
and
in
pop
aad
mov
and
notl
fstpt
sub
cltd
pop
adc
inc
sahf
out
dec
shll
fcoml
movsl
pop
js
add
jmp
sarb
daa
mov
aad
into
push
scas
stc
jae
cmp
ds
stos
es
or
enter
mov
dec
mov
inc
jno
je
lods
jns
clc
adc
je
adc
and
xchg
shll
xor
cs
rorb
arpl
adc
mov
in
or
clc
or
sbbb
or
inc
jp
imul
mov
xor
push
xchg
bound
mov
out
dec
ud1
jb
and
mov
fldcw
cltd
dec
scas
stos
mov
sahf
loopne
cmpsb
mov
xchg
nop
into
sub
xor
js
sbb
lret
sub
nop
pop
popa
xor
shll
mov
dec
addr16
mov
dec
push
or
pop
xlat
lret
leave
inc
aam
push
inc
out
adc
pop
lea
inc
in
sbb
mov
mov
mov
jl
cmpsb
loope
cmpsb
enter
inc
aad
lret
clc
jle
outsl
mov
mov
aas
outsb
pop
mov
repnz
lods
sbb
fistpll
pop
ror
aas
add
xlat
lock
icebp
das
cld
adc
jg
and
aad
xchg
sar
rclb
jb
xor
pop
aam
ret
cwtl
lret
mov
fbstp
xchg
cmp
mov
pop
push
adc
adc
outsb
popf
dec
mov
clc
scas
divps
loope
or
xchg
arpl
movsl
push
push
mov
aas
cmp
push
mov
jmp
jge
adc
in
daa
dec
pop
aas
mov
rorl
jne
inc
sbbl
xchg
cmp
and
or
jp
or
lds
jg
adc
insb
inc
rcl
movsb
or
fdivs
shl
or
outsb
outsl
xor
shrb
xchg
aam
cmp
repz
in
pop
ds
fisttpll
cs
push
sbb
inc
cltd
repz
outsl
je
test
popa
fisttpl
pop
imul
jo
ror
mov
cs
sub
adc
iret
push
xchg
pop
movsb
cmpb
mov
mov
sahf
gs
cmpsl
sbb
ret
std
es
lret
adc
push
data16
test
clc
push
hlt
inc
in
xor
rol
outsb
mov
mov
inc
shl
xor
lret
push
mov
push
shlb
divb
cmc
ret
adcl
or
pop
or
inc
loopne
fsubp
jb
cmp
jno
arpl
sub
mov
push
push
icebp
xchg
mov
out
mov
sbb
js
jbe
in
add
lods
repz
test
pop
test
or
add
mov
negl
in
movsl
lock
ds
inc
dec
and
jmp
nop
xor
lods
dec
jle
sub
movsl
push
lcall
push
push
xlat
xor
mov
mov
int
adc
add
aad
push
leave
outsl
mov
int
inc
jmp
out
mov
cmpsb
inc
xlat
leave
mov
adc
inc
pop
pop
out
pop
mov
cmp
xor
std
ds
mov
push
push
aaa
sub
xor
int3
mov
aad
das
shll
test
jmp
xchg
out
insb
aas
pop
mov
sbb
push
fimuls
mov
and
cmp
insl
cmpsl
pop
out
ds
mov
mov
push
rorl
test
mov
fs
ja,pn
push
into
sbb
inc
lods
int
out
jg
int
es
push
mov
pop
pushf
sub
push
or
inc
std
jge
lea
test
je
mov
jne
shr
rclb
inc
or
inc
dec
test
dec
loopne
push
jae
aas
push
xchg
cmp
push
sarb
jmp
xchg
lcall
add
inc
out
cli
aaa
aaa
scas
xchg
sbb
ret
xchg
lahf
insb
outsb
inc
mov
xchg
jns
in
outsb
std
repz
rcrb
mov
push
pop
insl
adc
xor
adc
test
mov
add
jle
mov
sti
adc
xchg
sbb
jmp
fidivrs
hlt
mov
or
je
test
push
lods
pop
icebp
testb
push
mov
jbe
fsubrp
jle
pop
pop
lods
xor
dec
dec
hlt
rcl
je
imulb
cmp
shlb
and
jne
mov
xor
in
ret
stc
dec
sbb
test
adc
pop
enter
sub
jo
aad
xchg
and
es
into
lods
dec
in
not
xchg
dec
and
jp
inc
mov
fistps
ja
sub
loope
shrl
push
cmp
clc
adc
addr16
xchg
in
mov
dec
rolb
dec
shlb
and
sbb
dec
lods
mov
lea
push
xchg
dec
aaa
adc
imul
lds
fbstp
fsub
adc
jl
fcmove
mov
les
ret
sar
aam
sbb
adc
ljmp
push
adc
dec
mov
cmp
daa
inc
addr16
sub
xchg
cltd
jp
test
sti
mov
mov
fildl
dec
inc
add
in
inc
mov
ret
movsb
cli
pop
xchg
loope
mov
flds
hlt
fisubl
and
cli
sub
adc
sbb
mov
add
jno
jg
scas
xchg
mov
daa
out
dec
adc
in
add
or
cmp
mov
and
push
cmc
or
sub
cmp
test
xor
sub
lods
stos
adc
inc
es
sbb
loopne
sbb
outsb
sub
leave
pop
add
jo
mov
insb
jnp
mov
push
adc
and
sarb
mov
aad
push
inc
cli
ds
mov
pushf
sbb
test
push
pop
fs
sbb
mov
xchg
cmp
jmp
jl
mov
pop
jmp
movsl
nop
and
les
xchg
push
pop
dec
lds
adc
call
lret
or
cmpsb
dec
ss
lods
test
in
mov
repz
rorb
push
jle
push
outsl
mov
jns
pop
clc
sbb
test
repz
outsb
dec
push
ljmp
gs
aas
test
daa
adc
inc
lods
fcmovu
outsb
enter
cmpsl
dec
and
orb
fmull
push
and
pop
movsl
add
inc
sar
into
gs
sbb
movsl
lock
mov
addr16
std
push
inc
ret
pop
jo
pop
test
inc
and
cmpsl
inc
mov
or
fucomi
std
inc
test
mov
jb
fcomip
and
mov
fistpl
cmc
imul
jno
sbb
sub
mov
dec
daa
arpl
fwait
notl
rolb
inc
add
inc
cmp
adc
and
pop
dec
rcl
pusha
xchg
xchg
xor
in
inc
and
add
bound
lea
adc
lret
mov
and
xlat
and
sbb
push
pusha
mov
loopne
leave
sahf
mov
mov
xchg
xchg
adc
ss
in
xlat
fwait
in
jae
mov
jle
cmp
inc
jmp
sub
xor
pop
cld
push
lret
mov
xor
sub
dec
pop
pop
cmpsb
iret
ja
ds
mov
adc
movsb
jmp
pop
ficompl
dec
movsb
push
add
addr16
fidivs
adc
and
sbb
in
fmuls
jl,pt
pop
sbb
sbb
pushf
iret
jae
mov
mov
dec
inc
mov
fnsave
mov
cmpb
jae
shrb
adc
lea
push
in
push
push
cmp
inc
imul
je
sahf
ss
aam
out
xchg
mov
test
dec
xchg
sbb
pop
mov
jl
mov
dec
int3
push
fstl
add
je
and
adc
pop
out
lret
pop
and
mov
jnp
pushf
call
push
pop
in
sbb
sub
jl
push
fcoml
jae
sub
sbb
xchg
add
cli
pusha
or
mov
lahf
loopne
jo
mov
lret
nop
push
dec
mov
sahf
ss
or
stos
into
xor
insb
stos
imul
inc
lods
or
divl
inc
mov
out
lods
repnz
add
mov
cmp
nop
pop
cmp
notl
lods
push
aad
enter
iret
sub
aad
mov
mov
xchg
sahf
rcrl
sub
jmp
xor
jae
push
sbb
inc
cmp
adc
mov
addr16
jecxz
mov
mov
sbb
mov
incb
or
adc
fldcw
sbb
jns
lcall
xlat
subb
mov
loopne
adc
and
push
mov
shrd
rolb
jg
int
out
xor
push
sbb
aam
or
ffreep
lcall
sbb
push
les
scas
cmc
add
jge
xchg
pop
mov
jns
andl
xor
push
push
repz
mov
jmp
imul
jnp
aad
mov
push
lods
mov
jp
pushf
mov
cli
dec
bnd
arpl
sbb
push
mov
lcall
je
mov
test
xor
aas
sub
stos
push
adc
leave
jb
and
xor
pop
dec
xchg
pop
adc
adc
push
in
bound
dec
mov
ss
fs
cmp
imul
inc
shll
test
sbb
or
jl
xchg
jl
pop
andl
les
roll
xor
mov
dec
popa
stos
lahf
lahf
lcall
insl
or
sbb
ds
cli
shrl
push
lcall
loop
add
ret
test
cmp
mov
mov
repz
xor
sahf
in
icebp
cmp
and
cmp
xchg
dec
std
data16
push
and
repz
sbb
ror
in
test
inc
fisttpl
shl
outsb
loopne
push
andb
xchg
aas
bound
dec
adc
xchg
aam
xor
cmpsb
subb
mov
stos
outsb
lea
outsb
sahf
sbb
or
adc
movsb
inc
push
cld
push
imulb
rcll
mov
pop
mov
sbb
dec
xchg
xor
ja
pushf
or
in
icebp
rcl
sbb
mov
push
sti
adc
jo
cmc
add
mov
lock
movsl
inc
pushf
add
jmp
lea
in
push
lods
aam
shl
imul
pop
inc
mov
dec
rorl
jecxz
arpl
adcl
bound
mov
mov
xchg
out
cmp
xchg
addr16
fisttpll
clc
cs
flds
sbb
jno
mov
lods
int
sbb
sbb
in
inc
outsl
and
lret
lods
test
and
mov
dec
jo
sub
fcoml
push
not
test
xlat
repnz
fcoml
mov
push
and
aad
adc
or
xchg
cmp
or
cmp
in
pusha
sbb
pop
xor
pop
push
leave
lret
stc
lret
shrl
fiaddl
arpl
or
fcompp
mov
aam
pusha
cwtl
fcoml
imul
gs
in
and
cld
and
ja
cmp
dec
lea
xor
mov
and
mov
adc
out
ljmp
aam
das
mov
push
mov
mov
push
lods
fwait
mov
inc
sahf
dec
sti
cmp
ds
dec
clc
sbb
fbstp
test
mov
je
out
mov
dec
jbe
sbb
xchg
mov
or
sbb
int3
or
or
inc
pop
mov
push
push
pop
inc
adc
dec
shll
outsb
dec
jp
icebp
mov
ret
xchg
cltd
xchg
insl
test
iret
lods
nop
hlt
sub
pop
cltd
xchg
pop
lods
ss
xor
xlat
ss
ds
jmp
mov
sahf
pop
nop
pop
lods
insl
mov
div
aas
pop
sub
stc
sub
xchg
xchg
cwtl
shl
nop
in
out
loope
mov
or
pop
out
mov
mov
orb
push
test
sar
repz
stos
pop
ss
popa
add
sub
fidivrl
iret
mov
add
mov
mov
push
sbb
push
push
pop
fdivrp
shll
test
push
movsb
or
jbe
jl
lcall
je
add
out
outsb
mov
xchg
popa
dec
pop
mov
xor
daa
inc
sbb
push
pushf
inc
imul
das
pop
bound
in
ret
push
lea
push
ja
aas
dec
lods
inc
jnp
addr16
and
add
and
dec
repz
mov
dec
jmp
xor
loop,pt
jmp
icebp
push
xchg
ret
stos
pop
mov
add
cli
sbb
lahf
add
pop
mov
adc
sbb
test
sub
dec
rcr
mov
lret
ficomps
sbb
or
xchg
clc
lahf
test
xchg
aad
pop
and
mov
stos
sub
sti
and
mov
cltd
and
insl
fstl
cwtl
xchg
mov
mov
lcall
mov
xor
stos
push
xchg
dec
icebp
leave
cmp
repz
sub
inc
sti
jno
or
mov
inc
sub
movsl
repnz
test
sbb
jg
mov
sbb
cli
fs
fstps
inc
mov
add
jo
jl
sub
ror
mov
andl
mov
jmp
sbb
ss
in
dec
cwtl
lahf
leave
mov
mov
mov
cmc
insl
out
shrl
jae
inc
mov
outsb
lret
cmp
pop
jecxz
lcall
xchg
sbb
pop
mov
xchg
pushf
pop
cwtl
add
test
add
jg
xchg
push
mov
pop
or
sbb
push
das
cs
mov
cld
lcall
xchg
mov
adc
push
mov
jl
rorb
adc
lahf
sub
movb
jne
push
test
add
xchg
jp
dec
ds
and
mov
dec
mov
lods
test
lahf
jmp
fcmovnbe
add
push
sbb
sub
mov
popf
repnz
mov
addl
repz
add
and
xchg
out
jge
mov
mov
icebp
scas
and
imul
repz
lret
jne
daa
daa
fstl
and
mov
inc
pop
pop
cld
cmc
rcrl
es
clc
pop
pop
fisubs
xchg
cmp
dec
sahf
xlat
insl
cmp
daa
jb
adc
xchg
pusha
ja
xchg
fsubl
mov
adc
icebp
repnz
mov
repnz
push
inc
mov
cli
insb
add
adc
and
add
pushf
xchg
mov
xor
out
and
pop
stc
dec
mov
scas
lds
xorl
xor
js
orb
les
fadds
imul
mov
lret
fnstsw
orb
iret
loopne
gs
xchg
dec
std
and
add
movl
jno
mov
jns
inc
and
rcrb
movsl
out
outsl
movsb
mov
std
dec
fdiv
adc
dec
mov
out
insb
pop
dec
imul
add
repz
push
cmp
sbb
popf
and
shll
enter
js
mov
jns
jne
push
mov
pushf
mov
add
inc
lret
and
vmovups
adc
mov
jne
sub
ds
movsb
subl
pop
repnz
sti
in
inc
jbe
in
movsl
subl
repnz
cld
es
shlb
cmp
cli
xlat
imul
xor
adc
adc
testl
mov
lods
dec
sub
outsl
int3
adc
jge
mov
call
insl
cmp
cltd
or
decb
jne
rorl
jge
mov
sub
xchg
cmp
add
pop
fldenv
mov
or
addr16
mov
and
fucompp
imul
stc
push
ss
aad
jg
push
leave
outsb
cmpsl
and
scas
ss
mov
xor
xchg
sbb
divl
sbb
xor
idivl
dec
outsb
fimull
in
jo
dec
test
xchg
ss
xchg
arpl
popa
mov
insl
pop
mov
mov
or
mov
int
jnp
mov
pop
sub
sub
add
pushl
xchg
adc
dec
pop
jg
jle
inc
xchg
popf
aas
mov
aas
sbb
sub
cmp
ja
adc
jp
cwtl
ret
push
ss
dec
int3
pop
jge
mov
mov
int
push
test
mov
inc
cmc
fstl
popf
pushf
mov
inc
clc
ljmp
push
jae
sbb
sub
sti
lods
sarl
in
out
inc
or
pop
insl
enter
cmp
loope
add
pop
out
sub
pop
mov
pop
aam
out
scas
adc
stc
jecxz
inc
insb
lea
es
push
cmp
mov
int3
jl
dec
sub
scas
push
push
orl
lcall
add
pop
fildl
or
inc
pop
pop
pop
sub
add
daa
rorl
decl
out
sub
push
lahf
push
xor
into
push
mov
pop
outsb
inc
out
jg
or
and
xchg
ja
dec
sub
fldenv
aaa
sti
sbb
orl
fldenv
rcrl
dec
fwait
mov
frstor
rolb
adc
testl
dec
push
or
test
adc
jno
cli
sbb
imul
adc
fwait
jp
pop
pop
test
mov
add
outsl
jmp
sbb
ss
push
repnz
ljmp
cli
cmp
and
jb
mov
insl
mov
cmp
gs
hlt
scas
pop
and
and
pop
xchg
subl
sbb
jns
std
loope
cmpsb
cmpsl
lea
in
and
mov
verw
mov
jns
je
stos
lods
xor
jmp
leave
loopne
loopne
push
sarb
mov
pushf
dec
jae
inc
movsb
lea
ljmp
popfw
mov
faddl
fidivrs
mov
ss
push
test
jnp
scas
dec
add
sbb
adc
out
push
or
aas
mov
mov
xchg
test
in
rolb
loopne
mov
xor
or
aad
xchg
push
adcl
dec
and
js
lods
rorl
shrl
inc
push
aam
icebp
ss
loopne
add
mov
push
sub
popf
in
jbe
and
push
test
jecxz
add
hlt
mov
sbb
sbb
lds
cmp
popf
enter
pop
mov
push
sub
test
xchg
outsb
xchg
aas
jmp
sub
xchg
and
call
pop
pop
push
fs
mov
scas
clc
ljmp
pop
pushf
rcrl
dec
aam
dec
sbb
or
pop
fstl
lds
rep
outsb
jo
inc
ds
mov
icebp
xor
daa
xor
xchg
mov
adc
icebp
sub
push
sbb
push
stc
mov
popa
icebp
push
xchg
iret
jp
outsl
cmp
call
sbb
sub
sbb
lods
rcl
mov
sub
sbb
shlb
mov
test
inc
lods
sbb
jae
insb
push
aad
xchg
push
clc
stos
shlb
das
push
ss
test
sahf
jo
bound
int3
pop
add
cmp
push
pop
sbb
in
lods
cwtl
insb
ljmp
and
and
mov
jecxz
mov
sbb
and
inc
sarl
arpl
into
inc
popa
cmpsb
add
cld
cmp
sbb
jbe
cmpsl
push
cmpsb
push
lahf
ja
mov
out
pop
cmp
cwtl
push
and
fldenv
cmp
outsb
adc
cmp
xor
dec
sub
dec
mov
adc
xchg
mov
fdivs
mov
push
outsb
mov
xchg
lret
lea
push
lock
xor
test
imul
pop
xor
push
jne
jo
xchg
xor
push
jae
call
dec
out
mov
pushf
dec
pop
lock
addr16
cmc
inc
xor
rclb
adcl
call
xor
repz
repz
fidivrs
push
mov
pop
inc
and
fwait
push
js
fisttps
gs
js
lods
out
into
add
out
xchg
cld
outsl
jbe
rorb
dec
sbb
push
popf
in
add
leave
hlt
sub
leave
push
mov
sbbl
adc
outsb
and
mov
or
aaa
sbbl
int3
in
ja
das
lock
popa
jbe
stc
adc
icebp
mov
cld
sahf
push
sbb
xchg
xchg
test
lods
lods
popa
dec
aad
mov
gs
mov
insl
sub
shlb
popf
add
or
addr16
jmp
gs
push
add
icebp
mov
cmpsb
push
xor
push
mov
dec
sar
sbb
sbb
mov
push
cmp
or
sbb
pop
sbb
or
xor
shll
jne
push
pop
stc
inc
jb
add
cmp
and
or
rcl
adc
pop
aam
or
push
lret
inc
scas
js
jmp
subb
movsl
jmp
or
outsb
clc
sbbl
mov
insb
push
jmp
arpl
out
xlat
inc
aas
clc
cltd
adcl
scas
and
xchg
dec
jne
fistpl
fsub
aad
mov
lock
push
or
push
jp
and
lcall
and
dec
adc
data16
add
jg
iret
repz
aaa
mov
cmp
loopne
sarl
and
push
push
adc
and
add
and
pop
mov
mov
inc
sbb
nop
add
les
lahf
mov
jle
adc
mov
out
icebp
out
sub
push
cmp
jnp
lods
movsl
sbb
mov
cmp
mov
jl
outsb
cmp
negb
clc
out
cmp
add
jnp
jg
xlat
sbbl
pop
mov
std
stos
icebp
mov
mov
jle
jle
in
ds
cmp
push
inc
repnz
cmp
or
sbb
fnstsw
enter
fwait
hlt
sub
mov
or
or
adcl
aam
cmpsl
ja
std
aas
mov
ror
xchg
dec
pusha
pop
leave
cmc
ret
push
jnp
out
push
into
mov
adc
roll
loope
xlat
inc
mov
inc
stos
std
es
lock
xor
aaa
mov
addl
cmpsl
or
sbb
xor
mov
insl
pop
or
and
and
mov
adc
pop
xchg
fwait
cmc
mov
push
mov
fs
pop
dec
sub
test
adcb
cs
popl
mov
in
dec
mov
jb
pop
aaa
or
ja
nop
xchg
cltd
rcrl
mov
movsl
adc
std
fidivrs
in
add
imul
dec
int3
lret
jbe
mov
cs
push
stos
scas
ja
jge
loope
out
add
adc
stos
dec
sbb
sbb
fistpl
sub
jge
push
push
aaa
add
push
repnz
into
xchg
int
sbb
xor
shll
in
dec
inc
or
test
mov
mov
scas
push
pop
or
xor
scas
and
fildll
jmp
jb
add
xor
mov
mov
cmp
xor
arpl
stc
cwtl
pop
stos
push
jmp
mov
mov
jp
mov
add
or
jnp
addl
sbb
das
insb
mov
pop
and
mov
pop
push
jne
xchg
fwait
mov
mov
inc
fildl
push
and
xchg
and
imul
fidivrl
outsl
rorl
imul
xlat
enter
xor
adc
test
lds
jno
rolb
mov
jnp
testb
ja
inc
nop
ljmp
jg
mov
and
mov
mov
lret
jbe
test
fldt
inc
xchg
aad
and
stos
cmpl
es
stc
popf
inc
repnz
test
pop
outsl
repnz
insb
stc
loopne
xor
outsl
xor
cltd
in
jne
jmp
xor
lock
jg
dec
pop
bnd
fistpll
adc
lcall
fcompl
mov
push
ss
ret
mov
sbb
mov
mov
cmpsb
dec
inc
mov
test
pusha
jns
sbb
mov
fbstp
inc
pop
mov
cwtl
sti
fsubl
cs
add
rcll
repz
mov
hlt
movsb
sbb
js
mov
std
push
lock
mov
enter
push
sbb
fsubl
js
fdivl
clc
add
ljmp
mov
outsb
push
int3
lret
add
ret
mov
push
out
data16
pop
ret
leave
adc
sbb
in
and
ret
xlat
sub
adc
mov
jb
dec
out
int3
push
push
inc
in
push
shll
mov
addl
sub
movb
mov
stc
aam
dec
sub
cmpsb
pop
mov
nop
and
clc
mov
scas
mov
xor
add
or
pop
or
movsl
ret
xor
inc
lea
push
xor
adcl
mov
imul
and
mov
and
cwtl
sbb
shl
test
xchg
sub
frstor
std
adc
jp
pop
loopne
jmp
dec
inc
mov
mov
bound
mov
sbb
insb
inc
xchg
mov
pop
mov
hlt
inc
test
xor
jb
incb
cld
fstpl
xor
repnz
es
in
int3
out
sbb
ret
scas
push
inc
sbb
sbb
out
inc
ss
adc
fdivrl
push
lods
jmp
sbb
sahf
inc
outsb
call
scas
in
sbb
lods
inc
lds
or
xchg
imull
call
shll
xor
fnsave
mov
sub
rcll
inc
adc
xlat
cmp
jnp
jns
jnp
sbb
pop
dec
jnp
ret
je
dec
mov
jne
out
dec
lods
xchg
lods
fistpl
mov
pushl
in
dec
xchg
fidivs
cmpl
sbb
mov
mov
pop
sub
out
popa
add
add
xor
jbe
mov
or
adcb
or
xor
out
movsb
pop
mov
xorl
sub
jg
and
mov
imul
in
push
popf
push
xlat
jnp
add
inc
nop
stos
mov
push
jb
scas
lret
mov
adc
cmp
pop
cld
xlat
popf
jmp
mov
fnstsw
jb
iret
pxor
shlb
in
xlat
push
adc
adc
inc
fstl
push
pop
inc
cmp
mov
mov
lds
pop
ret
inc
and
iret
loop
adc
and
mov
mov
out
js
test
push
popa
mov
bound
xchg
dec
sub
stc
and
pop
in
jne
pusha
sbb
and
mov
push
push
fwait
pop
adc
push
or
mov
popa
daa
test
mov
inc
add
add
sub
or
lahf
mov
pop
insb
int
push
jmp
push
movsb
push
aam
cmp
das
push
sahf
push
mov
push
test
dec
cmpsl
cwtl
je
pop
int
dec
jmp
shll
inc
dec
jmp
cltd
dec
push
inc
daa
je
jg
lret
inc
test
lret
pop
lret
icebp
jl
mov
pop
push
push
ds
push
jmp
call
jecxz
pop
out
xor
dec
test
stos
add
xor
aad
cli
and
push
xchg
jecxz
mov
imul
sbb
pop
cld
aad
scas
xchg
sarl
sub
aam
xchg
mov
lret
decb
and
outsb
pop
jl
ds
pushf
xor
lret
outsl
idiv
sub
jb
push
test
outsl
inc
iret
pop
int3
sub
xor
cli
and
push
lods
in
xor
mov
sbb
and
inc
jle
adc
inc
lcall
adc
daa
xchg
adcb
push
or
push
push
int
fildll
fldt
push
push
jae
dec
mov
imul
cs
push
ss
dec
sbb
mov
xchg
pop
xor
cmp
int3
leave
and
je
mov
mov
jns
pop
repnz
and
enter
sbb
les
xchg
xchg
outsl
xor
es
movsl
imul
arpl
addr16
imul
mov
scas
sub
mov
dec
aad
stc
push
mov
sbb
pop
vmovaps
stc
mov
push
lcall
das
aas
aas
int
lcall
and
cmc
mov
inc
incl
push
arpl
orb
jbe
mov
jbe
lret
sti
arpl
and
int3
push
mov
cmc
xchg
push
pop
cmpsb
xlat
ret
cmc
inc
mov
scas
and
jne
dec
jnp
das
mov
and
cmp
rorb
inc
fdivl
fsts
out
sbb
pop
xor
movsl
xor
fisttpll
inc
in
lods
cmpb
xchg
subl
incl
rorb
mov
out
dec
sbb
push
xor
pop
and
adc
mov
push
jo
cwtl
je
pusha
push
xchg
dec
das
nop
cmpsl
leave
icebp
jne
jge
loope
lds
cmp
mov
cmp
pop
lret
xor
out
jge
fdivl
xorb
sub
dec
pushl
test
aam
in
lret
push
xchg
mov
sbb
test
decb
xchg
jb
add
gs
xchg
mov
mov
jae
loop
out
fbld
add
push
lahf
ds
push
add
cli
lods
xchg
lock
mov
out
sarl
jae
jno
popa
int3
add
fxch
dec
mov
pushf
cs
nop
mov
loope
inc
stos
fs
jle
shrb
es
push
fwait
pop
fmulp
pushf
pop
jecxz
jno
push
in
pusha
or
inc
loop
or
and
sbb
push
mov
sub
cmc
in
ja
aam
jmp
fsubs
cmovno
jne
xor
cmpl
or
stos
xor
stos
and
mov
movsb
orl
out
push
in
add
out
dec
pop
inc
lea
add
add
or
jecxz
int
aam
cmp
ja
mov
sarb
xchg
scas
gs
iret
xor
mov
vmread
mov
adc
ljmp
mov
jbe
aaa
cmp
test
sbb
imul
mov
xor
mov
fsubp
jle
adc
in
outsb
gs
int3
cmp
xor
jle
sub
sbb
das
or
and
arpl
xchg
scas
or
xchg
rclb
iret
shll
mov
dec
jae
jecxz
push
test
repnz
push
pop
fsubs
pop
xchg
inc
inc
xchg
test
push
xchg
dec
insl
adc
insl
inc
push
cli
sub
insl
imull
arpl
or
sub
mov
mov
inc
jbe
fs
iret
jnp
into
in
and
jl
lret
mov
pop
jg
inc
out
test
mov
adc
inc
aas
call
mov
and
rclb
fwait
imul
stc
pop
test
mov
aas
xchg
or
hlt
aas
xchg
fldenv
adc
lock
clc
pop
mov
in
retw
popf
mov
jno
xchg
xlat
fdivl
repnz
fimuls
cltd
pop
rolb
cmp
jnp
repz
loopne
shlb
lock
leave
push
xor
fdivrl
mov
jle
mov
push
adc
popf
xor
pop
out
cltd
mov
and
imul
cmpsl
add
sub
outsb
pusha
popa
adc
jnp
out
and
xor
test
faddl
ss
jmp
movsl
sbbl
in
adc
xchg
pop
push
xchg
push
inc
mov
push
loop
jae
pop
hlt
fwait
ret
jae
pop
in
dec
push
dec
dec
jo
mov
or
out
jb
mov
jle
pop
repz
mov
mov
arpl
cld
xchg
push
pop
test
dec
sbb
shrl
pushf
jae
in
in
dec
into
xchg
mov
jo
sbb
adc
in
aas
mov
push
rorb
test
mov
jnp
add
jl
inc
dec
ret
scas
inc
out
cmp
mov
out
fs
fstl
fdiv
or
test
dec
movsl
ss
dec
ret
enter
pop
nop
fnstcw
cmp
jge
jno
xlat
dec
jmp
mov
sbbl
mov
cli
add
dec
movsb
arpl
pop
push
ds
cmpsl
mov
aam
add
jle
push
notb
inc
rorb
adc
or
bnd
cmovge
pop
xor
add
divl
mov
sahf
xchg
pop
addl
jb
ret
inc
lods
xor
inc
xchg
decl
jb
sub
shlb
cmc
arpl
xchg
das
iret
fcmovnb
push
jnp
push
and
push
loope
dec
in
mov
lds
sbb
inc
or
adc
jg
jno
cmpb
mov
enter
mov
xchg
sbb
xor
dec
cld
in
lahf
mov
aam
aad
movsb
repnz
pop
or
insl
xchg
mov
or
or
cmp
push
test
push
inc
mov
mov
jo
dec
push
and
mov
out
mov
stc
jno
movsb
aaa
mov
mov
push
add
out
mov
lcall
je
pop
xchg
pop
xor
add
pop
popf
inc
into
ret
iret
inc
ret
mov
sbb
cmp
or
xchg
pusha
adc
pusha
adc
mov
mov
ss
push
xchg
rorl
fistl
movsb
xchg
gs
mov
sub
pop
test
arpl
mov
mov
jae
movsb
sub
insb
jbe
loop
cmp
and
pop
pop
xchg
pop
fidivrs
sbb
sub
cli
rol
jmp
mov
enter
sub
mov
out
gs
loopne
push
loope
mov
fnstcw
addr16
jnp
and
xchg
and
dec
add
fsubs
push
lods
out
decl
fnsave
xchg
adc
add
cs
jne
bound
or
dec
repz
xchg
push
inc
push
mov
shr
xor
mov
xor
cwtl
arpl
iret
push
aam
fadd
orb
lock
and
imul
into
adc
aaa
outsb
sub
movsl
pop
mov
gs
dec
mov
aas
gs
push
adc
pop
out
dec
mov
mov
outsl
push
push
xchg
push
push
pushf
dec
xchg
cwtl
push
sarl
in
sub
dec
jno
icebp
test
enter
or
lret
aam
pop
mov
arpl
aam
int3
decb
mov
fldl
fbstp
sbb
and
mov
cld
fisttpll
aaa
pop
pop
or
jecxz
mov
fstl
out
notb
enter
dec
mov
test
lret
mov
push
roll
jbe
mov
xchg
jne
xchg
iret
leave
adc
in
rcrl
daa
xor
inc
jle
sub
jecxz
or
test
adc
push
xlat
inc
mov
daa
jp
movsb
test
sbb
adc
pop
jnp
enter
add
push
fs
pop
in
xor
or
add
lods
xchg
push
or
addr16
mov
cltd
fisubs
mov
pop
adc
sahf
pop
jmp
in
pop
repz
mov
int
adc
mov
gs
sbb
sbb
popa
xor
mov
lahf
xor
xor
scas
in
mov
or
aaa
jbe
xlat
aas
pop
mov
nop
add
cmp
mov
or
inc
aas
aas
mov
cmp
paddusw
je
sub
sbb
rclb
out
repz
xor
and
push
pop
push
pop
bound
bound
dec
icebp
mov
hlt
leave
jns
sbb
stos
xor
xchg
hlt
scas
dec
inc
adcb
xchg
dec
push
mov
push
mov
sbb
shll
cmp
sbb
xor
jmp
and
fldcw
adc
cld
mov
xor
push
mov
cmpsb
cmp
cwtl
into
ja
loopne
outsb
mov
dec
lahf
pop
push
inc
loop
adc
adc
xlat
stc
data16
lods
jne
jge
xchg
adc
adc
movsl
dec
or
out
jae
imul
or
adc
cltd
mov
cmc
mull
xor
and
fwait
test
fmull
adc
xchg
add
add
rorl
sbb
push
push
jnp
fdiv
and
and
fildl
je
inc
cmp
sahf
add
cmp
adc
out
stc
mov
add
mov
pop
or
or
in
test
fnstcw
loope
xchg
into
push
cli
sti
mov
push
xchg
out
sbb
xchg
stos
insb
or
rorb
aad
cmp
jp
ds
inc
xor
xchg
push
cmp
inc
sbb
add
jmp
lea
or
insl
arpl
cli
mov
inc
push
in
mov
aam
jg
stc
push
sub
mov
fs
xchg
lock
xchg
fsubr
xor
outsb
sahf
les
xchg
stc
jp
lds
mov
test
cmp
imul
mov
movsb
jmp
mov
mov
movsb
pop
ds
add
and
mov
xor
mov
sub
mov
jecxz
push
fcmovbe
sub
push
sub
adc
pop
mov
sbb
sub
xorl
dec
or
or
mov
bound
icebp
cmpl
cmp
mov
mov
add
shll
pop
xor
jl
scas
cmp
jno
add
cmpsl
mov
sti
jle
bound
inc
and
push
lret
push
fildll
mov
ficoml
dec
fidivrs
hlt
xchg
icebp
jne
fwait
loopne
adc
sarl
push
cmp
mov
mov
mov
imul
pop
cmp
jmp
xor
jo
jmp
into
pop
mov
lods
pop
jmp
xor
cmp
test
cmp
ss
lcall
popa
aas
mov
add
pop
add
add
js
inc
adc
sti
jnp
rorb
or
and
mov
sub
stos
lds
add
stc
sarl
sbb
outsl
sbb
push
dec
pop
mov
sbb
pop
push
je
cs
and
in
mov
fmulp
xor
jmp
lea
cwtl
jmp
inc
sti
dec
call
stc
hlt
sub
shl
and
sbb
fidivl
xorb
stc
imul
mov
ss
decb
test
repz
cmp
sub
dec
adc
cmp
out
adc
jae
jge
aam
int3
mov
cmp
nop
rcll
movb
push
shrb
and
xchg
test
addr16
mov
sti
dec
pusha
adc
in
sarl
cs
sbb
xchg
cmp
xchg
lds
ret
adcb
mov
push
popa
addl
pop
and
arpl
imul
sbb
push
mov
add
mov
ds
inc
mov
sub
pop
mov
mov
dec
nop
and
fnstenv
repz
sbb
int3
jl
das
out
addl
push
mov
outsl
loop
aas
addr16
lahf
lods
jae
dec
fdivrl
insb
and
push
xor
fscale
rolb
repnz
imulb
sub
outsl
dec
call
or
test
lods
xor
or
cwtl
adc
jmp
push
int3
sbb
scas
test
mov
jae
xlat
out
mov
xchg
jo
pushf
rorb
icebp
repz
adc
movsl
xor
push
xor
aam
inc
outsl
inc
push
cmc
sbb
xchg
sbbb
push
pop
ficomps
xchg
xor
xchg
rcrb
into
cmp
sti
inc
aad
pop
jne
and
and
mov
std
leave
repnz
push
pop
and
adc
pusha
nop
mov
push
popa
push
popf
or
xchg
cmp
into
xor
addr16
sbb
out
or
or
movl
orl
push
imul
nop
xor
mov
xlat
aaa
xchg
push
lcall
jecxz
das
dec
sbb
ljmp
imul
sbbb
notb
mov
hlt
outsb
add
jno
inc
xor
jae
pop
dec
inc
mov
std
sbb
cmc
stos
gs
jle
add
push
jbe
xchg
mov
shr
add
push
pop
lcall
shll
dec
lret
iret
es
mov
pop
mov
bound
rcrl
pop
pop
cld
and
push
dec
push
pop
xchg
jne
pop
rclb
movsl
test
mov
jg
xlat
xor
imulb
mov
into
mov
lcall
hlt
out
add
xorl
fimull
aaa
ds
xchg
push
lea
subl
or
mov
ja
in
add
decb
xor
pop
shl
cltd
sbb
add
jae
xchg
push
lret
inc
xlat
xchg
stc
pusha
mov
test
xor
imul
and
aad
testb
push
and
cbtw
mov
cld
sub
aas
hlt
cmp
out
daa
mov
ja
dec
cmpsb
sub
sub
fwait
orl
je,pn
push
test
sbb
pop
rcrl
mov
cmp
test
sti
fs
add
mov
fnstsw
nop
cmpsb
mov
add
lahf
cs
cmp
fildll
mov
jae
dec
mov
or
pop
ljmp
mov
push
jo
ret
pop
jo
dec
mov
es
pop
or
jnp
jecxz
jl
adc
lret
cmp
ss
cmc
std
sbb
mov
sub
test
pop
mov
int3
push
fnsave
lock
fldcw
pop
test
push
and
jo
xor
aad
and
cmp
mov
sub
pop
push
push
icebp
movsb
aam
test
push
xlat
enter
mov
fildll
mov
cmc
and
mov
test
cwtl
jle
adc
adc
sbb
imul
cmp
push
mov
int
pop
pop
popl
adc
fs
cmp
jne
mov
insb
outsb
jns
ds
push
movzwl
cmc
lods
jns
icebp
cmp
jae
iret
add
xchg
sub
stc
sbb
cmc
fstpt
icebp
fimuls
mov
test
sub
imul
adc
out
insb
dec
outsl
sbb
jp
mov
inc
jecxz
mov
sar
aaa
in
sti
xlat
pop
out
and
cmp
in
mov
loopne
push
aam
or
push
push
ret
cwtl
loopne
cmp
jb
adc
ret
not
in
insl
popa
outsl
push
into
pop
sbb
add
cmp
pop
xchg
adc
out
lahf
gs
or
imul
xchg
dec
movsl
inc
sub
std
enter
inc
add
mov
nop
dec
and
cmp
mov
adc
or
shlb
xchg
js
pop
jmp
xchg
adc
ret
xchg
imul
add
bound
jecxz
in
arpl
ret
cmpsb
push
fnstcw
xchg
lds
mov
push
cmp
xchg
dec
mov
decl
popf
xor
jmp
sbb
ja
popa
repnz
xchg
aaa
push
jb
pop
inc
cwtl
dec
repz
iret
pop
aas
cmp
jnp
sub
fs
pop
jae
xor
pop
mov
ret
and
push
xchg
fdiv
add
test
leave
xchg
in
fbld
sub
lret
mov
cs
dec
sbb
ret
hlt
add
pop
sbb
nop
loop
out
enter
jno
repz
xchg
mov
cltd
sarl
js
cs
movsl
push
faddl
mov
mov
mov
or
pop
xor
dec
sub
sub
mov
jo
popf
or
jecxz
dec
add
shlb
cs
pusha
js
sbb
int
pop
jp
inc
mov
ds
mov
xchg
stos
in
fdivrs
pop
cwtl
int3
clc
mov
cmp
das
inc
aaa
lret
cmp
inc
inc
test
int
stos
ret
fldt
or
subl
push
inc
mov
mov
jo
inc
mov
mov
adc
fisubrl
in
add
and
movsl
lahf
test
or
adc
clc
pop
adc
inc
and
pusha
subl
sub
jbe
lods
xor
mov
imul
push
imul
jns
mov
cmp
leave
mov
or
scas
push
cld
mov
cmp
inc
pop
loopne
cs
scas
mov
mov
into
sub
pop
pop
shrb
mov
adc
or
dec
push
cmpsl
jo
test
dec
pop
sahf
mov
xor
lret
fisttps
jns
mov
add
out
or
inc
cmpsb
or
iret
sti
xchg
in
mov
loope
gs
dec
in
jmp
movl
lods
xor
pop
ja
push
push
jmp
add
lcall
sbb
orb
mov
jmp
lea
mov
mov
insl
xor
xchg
sub
fs
adc
jo
sti
ds
fxch
call
inc
sbbl
insb
inc
ljmp
mov
adc
adc
call
fs
sbb
mov
aas
aaa
sbb
loopne
push
mov
jl
dec
subl
pop
cwtl
mov
cmp
fcmovnu
fwait
sub
xchg
fsub
mov
sub
or
or
ss
inc
sar
out
inc
scas
outsb
aas
pop
pop
pop
aas
jb
push
stc
sbb
stc
sbb
mov
lret
arpl
fistps
ret
rclb
mov
sub
les
fisttpll
sub
sti
xchg
xor
push
fisttpll
mov
push
cmpl
mov
inc
cmpsl
mov
or
push
scas
mov
mov
nop
shrb
mov
and
sbb
xchg
repz
sub
int3
mov
mov
cld
stos
dec
dec
scas
scas
jmp
or
xchg
cmpsl
sub
xchg
pop
lcall
mov
jo
lock
jne
repnz
adc
xor
add
ret
insb
inc
jmp
adc
fistps
jg
sti
inc
mov
and
or
mov
jge
jne
add
fs
dec
pop
or
jmp
cltd
lret
cmpsl
push
push
fistps
ds
jne
aam
add
push
imul
inc
scas
dec
aas
call
adc
xor
sbb
xchg
pop
stos
inc
mov
stos
push
in
jne
push
inc
and
adc
fbld
test
jmp
push
push
sub
mov
lret
push
loop
jmp
ja
dec
nop
fisubrl
push
pop
jle
movsb
cmp
push
les
lret
mov
xchg
ficoml
dec
adc
out
jmp
hlt
ja
ss
mov
sub
ja
nop
sub
les
xchg
xor
mov
fdivrl
in
push
jecxz
into
imulb
or
test
test
or
mov
mov
mov
hlt
xorl
movsb
lea
pop
pop
push
mov
add
jle
daa
or
bound
mov
mov
xchg
int
mov
cli
cmp
pusha
dec
xor
mov
inc
lods
sbb
push
js
xlat
push
jecxz
xchg
bound
and
jg
mov
jmp
push
inc
and
jecxz
inc
int
push
cmp
popf
mov
inc
add
and
fsub
call
and
ror
pusha
arpl
mov
fwait
aam
add
mov
fucomip
fstpt
into
or
mov
add
jp
cmp
push
jg
mov
or
gs
mov
je
add
fsubl
or
or
inc
out
test
xchg
insl
jno
adc
ret
sar
mov
pop
xchg
lret
adc
jmp
movsb
adc
outsb
push
xchg
lret
push
test
repz
and
mov
cmp
lods
outsb
mov
mov
rclb
add
rcll
mov
push
xlat
xor
inc
xor
in
leave
mov
jge
inc
ja
and
adc
and
mov
mov
dec
iret
rorl
and
or
cs
jae
lods
adcb
xchg
jnp
testb
hlt
mov
sub
je
gs
push
icebp
out
out
mov
and
xchg
lock
aas
pop
cltd
adc
enter
or
dec
fmull
cmp
inc
or
mov
jmp
mov
in
pushf
adc
lds
sub
ss
shl
adc
repnz
stos
filds
lock
std
std
pand
dec
ds
addr16
popa
xchg
insb
std
lds
sub
cmp
test
movsl
popa
sub
fldenv
pop
adc
pop
mov
rorl
out
mov
mov
lods
ret
pop
lds
xor
lea
lods
push
adc
cmp
scas
cltd
jmp
and
mov
fidivrl
mov
pop
xlat
aad
aad
fwait
mov
pop
in
sbb
mov
fucom
jg
jne
es
fsubr
in
orb
inc
push
aam
rorl
lods
sbb
push
pop
les
jbe
ja
mov
cmpsl
mov
inc
gs
cmp
dec
inc
decl
pop
xchg
mov
and
cld
imul
leave
inc
pop
in
or
push
ljmp
or
nop
cmp
sti
scas
popa
push
sub
insb
sub
jecxz
xorl
jmp
dec
idivb
std
push
push
stc
push
pop
dec
mov
or
cmpsl
mov
and
mov
adc
mov
rol
push
lcall
mov
incl
lods
mov
arpl
add
cmp
ds
fstl
mov
bound
inc
and
aad
jle
int3
push
not
push
call
enter
mov
cld
pop
bound
in
lock
dec
test
jo
inc
dec
and
and
inc
mov
fmull
andb
adc
pop
sbb
addr16
mov
js
sahf
mov
out
and
dec
push
test
xor
fwait
inc
sbb
xchg
js
cmp
dec
adc
lahf
lods
jo
or
shlb
popa
push
xor
lock
mov
mov
icebp
jne
and
in
jns
push
push
iret
js
push
and
and
aad
pusha
arpl
pop
lcall
cld
leave
fisttpll
fisubs
into
or
adc
aaa
sub
mov
pop
scas
xor
or
cmpsl
push
sub
dec
out
xchg
lret
inc
mov
and
lea
xchg
bound
xchg
adc
loope
jl
in
scas
mov
push
sub
in
out
and
inc
dec
push
cwtl
cmp
mov
fsts
and
dec
push
lods
or
inc
out
xchg
repz
fs
cld
fsubl
adc
add
adc
mov
cmp
jns
xchg
js
pop
push
pop
xchg
in
cltd
sbb
in
xchg
cmpsb
mov
push
xchg
dec
xor
jno
es
loop
loopne
mov
dec
repz
pop
enter
inc
xchg
cmp
popa
cmp
dec
add
xor
mov
inc
lea
int
xchg
lods
loop
lcall
inc
fwait
imul
cld
adc
sub
int3
ret
pop
aas
ja
xchg
adc
arpl
cmp
xchg
lods
stos
in
imull
aaa
in
pop
and
stos
cmp
sub
jae
push
or
insb
cmpsb
add
in
xchg
lahf
loopne
jmp
pop
ret
or
jmp
lret
jnp
popf
flds
pop
xor
dec
push
testl
mov
fs
out
push
mov
dec
cwtl
int3
jbe,pt
and
jns
xchg
mov
lret
js
addr16
mov
scas
pop
lock
cwtl
mov
nop
in
orl
fidivrs
addr16
pop
push
jns
out
out
shrl
addl
sbb
jns
or
add
imul
cmp
inc
add
push
popf
lret
test
xor
insl
xor
repnz
test
rcl
les
aas
lea
adc
clc
cmp
test
test
adc
and
xchg
and
jae
pop
adc
popa
aaa
xor
outsl
cmp
dec
dec
fnstenv
sbb
psubq
inc
xchg
xorb
or
mov
test
pop
int
push
inc
and
into
adc
push
gs
lahf
sub
add
push
xor
sti
mov
push
stos
scas
lods
add
fnstenv
js
dec
dec
pop
iret
js
add
ja
mov
sbb
loopne
repnz
cmp
mov
stos
inc
push
xchg
sub
inc
mov
mov
in
xor
push
jbe
outsl
mov
int
mov
pusha
xor
outsl
pushl
push
jecxz
inc
insl
clc
loope
pushf
and
leave
adc
xchg
push
xor
stos
and
out
test
fdivr
xor
data16
roll
add
inc
int3
add
lret
cmp
fndisi(8087
xor
mov
push
dec
stos
dec
lret
sahf
imul
mov
repz
and
push
push
movb
call
shll
dec
int
inc
iret
addr16
cmc
or
mov
xorl
adc
lcall
sub
inc
mov
sub
das
je
movsb
loope
pop
fmuls
hlt
idivl
push
pop
lcall
scas
pop
xor
inc
xor
dec
jb
pop
sti
insb
mov
dec
push
cmp
add
outsl
inc
or
fnstsw
jp,pt
sbb
arpl
mov
push
xchg
shl
fists
or
int
xor
bound
inc
pop
dec
pop
mov
popf
sbb
sbb
outsb
pushf
jecxz
in
dec
ja
popa
jns
lahf
test
mov
jbe
aaa
cltd
icebp
push
out
or
pop
imul
add
insl
xchg
in
shll
push
mov
jo
push
stos
xor
mov
and
xchg
mov
xor
and
test
or
inc
pop
mov
or
dec
dec
jmp
cli
sub
out
lcall
dec
imul
xor
lcall
mov
xor
cmp
inc
hlt
call
fdivrl
adc
xor
push
lret
and
inc
lods
fmull
scas
insl
or
sub
adc
fisttpl
out
call
lea
sti
stc
out
mov
out
jecxz
in
aam
xchg
in
pop
push
jb
or
fucomp
inc
shll
dec
dec
mov
push
xor
add
fcomip
insb
je
add
test
lahf
mov
lods
jbe
subb
lods
sub
cmp
push
dec
fcmovnbe
inc
outsb
mov
adc
sbb
sbb
cli
in
lods
adc
inc
jg
mov
in
cwtl
cmp
lret
shrb
cmpb
sub
xor
inc
xor
loope
ljmp
aam
mov
push
and
shld
xchg
jg
cli
jg
fcoml
das
dec
shl
pop
lea
fcoms
movsb
es
mov
push
push
test
pop
and
pop
mov
push
inc
mov
cmp
aas
jno
xchg
in
sbb
or
stc
data16
mov
hlt
arpl
stos
cmp
cwtl
lcall
aas
js
pop
sti
cli
bnd
dec
cmc
in
or
inc
popf
call
daa
scas
mov
dec
cmp
push
push
or
sub
push
pop
dec
scas
out
insb
prefetchwt1
or
mov
roll
rclb
xor
jo
pop
loope
dec
mov
mov
inc
test
popa
call
jge
out
mov
sbb
dec
rcll
push
in
fdivrs
packssdw
cmp
mov
push
mov
adc
xchg
bound
xor
fistpll
sbbl
andb
and
arpl
add
xor
xor
jns
cmpsl
sbb
movsb
cs
push
mov
push
movsb
mov
je
test
xchg
xchg
cltd
cmp
jno
fisttpl
pusha
xor
mov
jno
mov
or
repnz
mov
lods
or
out
pop
shlb
or
nop
xlat
pushf
arpl
pop
dec
rcrb
ret
out
mov
cmp
push
mov
cmc
xchg
outsl
jg
scas
push
ficoml
dec
xchg
add
push
rclb
adc
sarb
push
mov
repz
repz
mov
icebp
shr
adc
out
or
or
test
stc
lods
int
dec
shlb
pusha
cld
mov
idivb
mov
mov
das
lahf
pop
sbb
mov
shlb
and
mov
nop
pop
in
jmp
add
in
ja
or
pop
loope
out
and
mov
lea
rcrb
cmp
lret
xor
jnp
sub
sub
sti
sbb
xor
mov
lds
sar
pushf
pop
pushf
xor
pushl
push
add
fucomi
ffree
nop
cli
mov
inc
xchg
loope
dec
lahf
jae
test
lret
jle
mov
jno
rol
or
andb
mov
pop
fstps
mov
and
fisubl
shrb
xchg
and
mov
fldl
fcoml
jns
xchg
mov
negl
sub
iret
mov
add
jle
inc
pop
leave
inc
mov
lret
fcompl
jnp
or
dec
push
mov
loope
jne
scas
jp
aad
inc
xchg
and
xchg
inc
jg
out
insl
or
adc
repz
dec
fistpll
nop
fcmovb
and
inc
or
inc
enter
cmpsb
rcl
call
out
bound
in
leave
gs
mov
repz
jbe
cli
sub
cmpsl
and
pop
dec
mov
rolb
xlat
cld
pop
fmuls
push
out
popf
mov
popf
pushf
add
dec
popf
mov
push
jp
push
int
cld
adc
push
pop
in
repz
fimuls
stc
cmp
add
inc
test
aaa
fs
call
sub
jg
mov
int
fadd
xor
fcomip
les
or
mov
pop
push
jo
stos
jae
and
pop
push
or
fwait
mov
mov
dec
fsubrs
sbb
stc
mov
sub
fmul
dec
mov
dec
mov
sbb
and
mov
jbe
outsb
mov
xchg
jbe
xor
in
push
mov
adc
int
aad
sahf
inc
mov
cli
mov
dec
sbb
testb
sbb
adc
into
adcl
cmc
add
lods
fstps
sbb
mov
pop
jnp
mov
jp
dec
repz
pushf
pop
jo
dec
mov
inc
push
add
cmp
and
xor
repnz
scas
push
cmp
pushf
fbstp
xlat
jecxz
cmpsl
lcall
and
loop
or
jmp
int
fsubl
in
sbb
xlat
sbb
pop
or
jge
xor
mov
jg
je
lock
jbe
out
pop
sbb
pop
lods
sarl
test
and
hlt
mov
jmp
sub
jns
jg
loope
mov
shrb
mov
movsl
or
jecxz
pop
add
call
push
int
or
xor
cmp
repnz
cmp
pusha
and
cmp
xor
mov
cs
adc
and
insb
repz
popa
outsl
push
push
les
cltd
mov
aad
popf
movsb
popf
mov
movsl
mov
pop
jne
or
je
rcrl
push
sti
in
cld
testl
push
frstor
jnp
push
pop
in
dec
incb
push
sub
sarl
pusha
xchg
popa
mov
lods
pop
gs
or
loopne
push
popa
aam
jno
int3
aam
ja
or
jno
jne
shlb
pop
push
fwait
add
icebp
cmc
subb
repnz
scas
mov
and
ret
xchg
outsl
mov
cltd
int3
cmp
scas
cmpsb
movsb
or
insb
pop
lcall
shl
lcall
or
sbb
pop
inc
dec
pop
ja
enter
mov
pushf
inc
fistpl
mov
fs
push
lcall
jb
mov
pop
xchg
add
sbb
jle
mov
inc
adc
repz
stos
in
or
sbb
daa
ljmp
and
stos
cmp
fwait
push
inc
je
jp
hlt
mov
cld
loop
fwait
lea
shrb
lcall
add
jns
in
dec
in
xchg
lahf
in
cmp
sbbl
dec
push
add
mov
cltd
sbb
pop
cmp
xor
popa
and
cmpsb
mov
rorl
out
inc
xchg
jecxz
outsl
mov
or
dec
clc
push
sti
pop
outsb
jnp
xchg
andb
adc
jbe
sub
xor
or
pop
pop
sti
mov
mov
lret
sti
add
into
sub
xor
inc
aad
out
and
test
std
mov
pop
push
xchg
lcall
es
les
dec
int
xor
push
inc
jb
sbb
movsb
movsl
pop
cmp
mov
out
and
or
and
mov
xchg
jmp
out
push
sar
sub
fistl
xor
add
mov
loope
movsl
addr16
pop
pushf
test
cwtl
lret
push
or
or
xor
jp
fs
jo
add
outsb
or
leave
or
push
in
out
dec
andb
adc
mov
push
xor
rcrl
arpl
inc
loop
stc
add
enter
add
shl
outsb
jl
push
outsb
sbb
sahf
aaa
pop
hlt
pop
fildll
mov
inc
in
lods
clc
pushf
movsl
jg
mov
popf
into
dec
dec
push
cli
inc
mov
data16
ret
fchs
in
inc
mov
sbb
test
push
and
cmp
movsl
xchg
test
cli
inc
jno
jne
fs
or
xchg
in
mov
push
outsl
xchg
das
mov
roll
clc
lret
int
dec
popf
pop
mov
push
pop
jbe
cmp
jg
inc
popf
adc
push
xchg
ret
push
and
mov
sub
dec
jmp
adcl
out
imul
and
les
test
sarb
testl
xor
dec
sbb
cmp
mov
sbb
leave
es
inc
xchg
enter
ffree
dec
add
push
inc
pop
sbb
pusha
scas
mov
jne
sub
cmp
inc
push
adc
repnz
in
dec
arpl
or
mov
sbb
pop
adc
xor
jmp
mov
ds
out
fnstsw
scas
daa
cmp
and
stc
sbb
pop
ret
das
and
push
icebp
inc
dec
pop
inc
lahf
loopne
inc
aaa
in
das
push
cmp
adc
fcmovbe
stos
cmp
mov
sbb
jmp
adcb
lods
add
mov
push
or
arpl
pop
push
rcrl
loopne
lcall
mov
inc
sahf
inc
or
stos
cmp
jns
xor
scas
jmp
adc
movsl
lahf
js
sti
fidivrl
xchg
movsl
mov
push
jle
dec
mov
ret
lods
push
sbb
insl
insb
or
lcall
dec
imul
fsubr
int
insl
stos
sub
aad
movzwl
pop
sub
add
xchg
lods
or
dec
es
lods
mov
inc
leave
sub
stos
dec
int3
jbe
out
push
popl
lret
xorl
jae
mov
push
leave
and
sub
xchg
sti
pushf
dec
adc
int3
push
stos
xor
sbb
xchg
xor
xchg
sub
in
jno
ror
dec
dec
xor
test
pop
cmp
push
add
je
mov
rcr
mov
and
imul
bound
stos
sub
popf
sub
jne
mov
and
repz
sub
cmp
jl
xor
sub
pop
and
negl
jbe
pop
fcmovnu
addb
outsl
outsl
cmp
popl
gs
push
mov
xchg
jle,pt
jne
sbb
cwtl
xchg
jmp
hlt
push
lahf
arpl
push
add
mov
movsl
sub
pop
fisubrs
ror
add
mov
daa
mov
jbe
clc
into
lret
movsb
jae
sbb
xor
ror
out
sysexit
arpl
or
cmp
mov
ja
cmp
mov
fldcw
ds
mov
jne
add
and
inc
cmpl
pop
pop
ds
cmp
xorb
outsb
adcl
xchg
sarl
jp
loop
sarl
xor
daa
test
add
mov
das
lret
or
les
sbb
mov
push
in
push
mov
ficomps
sti
arpl
stos
jge
into
in
pusha
pop
adc
add
out
sub
repz
push
sub
lcall
pop
pushl
xor
jae
pop
xchg
pop
out
lret
data16
inc
and
sub
push
sbb
scas
sub
ljmp
mov
das
pop
cld
xchg
dec
jmp
popf
or
arpl
mov
ja
add
sahf
or
add
sub
out
fisttpl
adc
jle
mov
xor
out
cld
dec
adc
jbe
jg
arpl
inc
push
or
push
std
arpl
pusha
mov
loopne
pop
lret
and
test
outsb
notl
sbb
inc
outsl
popa
jno
push
pop
sbb
fsts
sbb
pop
mov
add
or
xchg
movsl
das
outsb
mov
xchg
fsubs
outsl
pop
mov
sbb
adc
sbb
mov
roll
jmp
mov
movsl
push
ficoms
inc
cltd
and
cltd
lcall
jmp
add
sbb
mov
push
pop
push
jmp
repz
cmp
push
in
gs
inc
add
out
jb
ss
inc
cmpsb
mov
cmc
in
xchg
mov
sti
mov
test
in
incb
adc
fildl
sub
inc
test
dec
arpl
in
pop
lcall
pop
sysret
jno
mov
add
xchg
adc
aad
vpsubq
and
cmp
test
pop
mov
pusha
sarb
sbb
dec
jp
movsb
cli
push
mov
mov
imul
arpl
sub
pusha
cmpl
in
mov
int
stc
inc
xor
aad
mov
dec
xor
lods
mov
mov
mov
mov
ds
sbb
mov
mul
cmc
inc
sbb
test
jmp
mov
pop
mov
sbb
adc
push
dec
pusha
sbb
and
add
inc
lods
mov
sbb
dec
inc
popa
addr16
notl
jae
addr16
js
inc
test
sbb
int
cmp
lahf
push
xchg
je
adc
rcll
nop
inc
mov
or
push
sub
mov
lret
sahf
pop
mov
popa
movsl
repnz
add
test
dec
lods
loopne
int3
mov
mov
jns
add
aas
std
jae
or
ret
aam
xchg
stc
dec
lods
in
xor
or
fdivrl
add
jge
daa
negl
rclb
inc
nop
sbb
adc
sti
rclb
rcrl
cwtl
aaa
adc
mull
aas
testl
int
in
adc
jno
push
sbb
arpl
cld
jp
orb
dec
sbb
movlps
dec
in
mov
xor
fistpl
pop
and
mov
fs
push
daa
pop
xchg
xchg
inc
inc
push
outsl
leave
mov
add
rcll
cmp
push
dec
in
mov
lahf
push
rcrb
xchg
jmp
adc
movsb
movsb
bound
loope
mov
fadd
daa
and
popf
cs
mov
mov
in
outsl
stos
jmp
cmp
xchg
xchg
lcall
mov
frstor
rcll
adc
add
add
divb
out
xor
push
push
ljmp
scas
fcomp
jmp
pop
xchg
leave
xchg
jmp
fpatan
jp
roll
jns
pop
or
inc
cli
xor
cmpsb
ja
sbb
push
pop
jbe
or
rcrl
push
sub
in
push
add
pop
cmp
sub
dec
pusha
imul
inc
cmc
fucomip
lret
xchg
add
fbld
and
mov
nop
lret
jne
ljmp
push
mov
inc
clc
sahf
divb
int
in
or
stos
and
cmpsb
in
cmpb
xchg
test
fildll
jge
or
test
mov
ss
and
push
repz
xchg
hlt
sbb
out
rclb
pop
jle
push
ret
jge
inc
mov
popa
pop
xabort
movl
sub
mov
and
pushf
lret
out
mov
insl
test
mov
jo
scas
test
xchg
jo
pop
sbb
test
mov
mov
pushf
inc
jge
je
adc
ftst
and
sti
pop
test
pop
push
mov
push
dec
mov
jo
pop
in
shll
jns
pop
adcl
jb
fiaddl
dec
add
and
inc
sahf
loop
out
int
add
add
lock
outsl
mov
pop
mov
and
push
or
push
loopne
pop
pop
adc
in
inc
ret
jmp
in
push
and
sub
cmc
les
dec
in
inc
in
xchg
xchg
fidivl
push
inc
sbb
inc
mov
outsl
add
call
mov
xor
in
xchg
inc
adc
push
add
and
jns
fldt
push
or
insb
lahf
xchg
xor
out
cmp
or
in
andb
leave
arpl
sub
or
xchg
pop
or
dec
push
adc
lock
dec
rsqrtps
cli
data16
hlt
std
rolb
sbb
xchg
adc
out
add
mov
imul
push
lods
mov
imul
dec
or
mov
xchg
insb
or
xchg
ds
push
mov
cmp
daa
sbb
arpl
ja
dec
xor
hlt
loop
mov
mov
scas
rolb
psrlq
loopne
fdivrp
ret
mov
lahf
xchg
jmp
fmull
ret
xchg
mov
mov
cmpsl
inc
aaa
les
inc
enter
lds
movsl
movsb
leave
push
daa
data16
aad
jbe
lret
dec
and
xor
lods
in
data16
xlat
xchg
pop
push
xchg
xor
pop
jl
or
pop
aas
xchg
push
test
cmp
call
add
add
pushf
mov
mov
sub
mov
sti
inc
sub
cmp
mov
add
dec
jb
jne
aaa
push
push
and
sub
add
enter
mov
shr
ds
fwait
mov
fdiv
test
idivb
out
mov
push
sbbl
xlat
mov
lods
and
and
filds
shll
out
ljmp
xchg
lret
mov
mov
lods
fsubs
in
pop
aaa
xchg
stc
insl
xchg
add
pop
mov
rorl
pop
mov
cli
les
adc
fs
arpl
aam
mov
jge
inc
pop
jg
mov
out
sub
sar
or
jnp
popa
adc
add
loop
add
push
push
jae
pushf
cmp
std
sbb
stos
add
cmpsb
push
xchg
inc
loopne
push
hlt
sbb
xor
add
out
lea
dec
xchg
ja
inc
int
jno
data16
dec
imul
cmp
jle
xchg
shlb
or
shll
outsl
mov
fbld
dec
push
test
sbb
push
pusha
sub
imul
jo
sub
dec
daa
inc
fnsave
sub
dec
xor
out
mov
and
inc
sub
in
out
inc
loope
subl
fistpl
fptan
pusha
data16
push
movsl
aaa
imul
mov
cmp
jmp
adc
lcall
cltd
xor
fwait
push
sti
cmp
jbe
dec
mov
clc
jo
pusha
sbb
jl
insb
sbb
cmp
xchg
dec
ret
sbb
fisttps
xorl
sahf
out
stos
cmp
lock
icebp
mov
mov
xchg
jns
mov
or
push
inc
push
ret
mov
subb
incl
sub
jnp
jb
shll
insb
gs
xor
std
mov
out
push
cmp
mov
sub
xor
setne
sbb
xor
popf
int
int3
xchg
ret
mov
addb
sti
sub
pop
add
cmpsl
sbb
leave
cltd
insl
jge
and
stc
mov
arpl
adc
cld
ss
push
mov
xor
cmp
pop
cltd
fxch
ucomiss
shl
mov
addr16
mov
or
or
mov
push
dec
decl
push
add
pop
dec
mov
push
add
xchg
testl
out
add
sarb
adc
xor
sub
inc
jl
dec
xchg
mov
scas
fnstsw
lret
pop
jmp
cmpb
lea
fwait
cmpsb
leave
jmp
push
push
push
fadd
leave
adcl
dec
mov
stc
pop
das
xchg
insl
mov
mov
and
pop
std
scas
sbb
sub
fisttpll
and
lret
sub
xor
adc
xchg
add
xchg
cmp
mov
xchg
insl
mov
push
orb
test
mov
fs
enter
aad
sahf
xchg
cmp
cmp
jmp
cmp
fildll
addl
into
movl
push
jge
cmpsl
xchg
push
add
mov
jns
pop
sbb
xchg
lods
cmp
movsb
inc
mov
push
aaa
adcl
icebp
jge
clc
movsb
pop
mov
test
or
out
mov
sbb
aaa
mov
mov
inc
js
jmp
adc
outsb
adc
add
mov
dec
imul
ud1
inc
xchg
aam
and
mov
cwtl
aas
dec
dec
fcmove
push
push
dec
cs
stos
xchg
adc
aaa
loopne
sub
inc
push
dec
rcr
sbb
inc
lds
pop
or
ret
push
hlt
std
dec
sbb
inc
fsts
fists
sub
mov
push
jns
sbb
ss
imul
in
call
pushl
jmp
repnz
jl
and
mov
cmpsb
add
fwait
pop
xor
mov
aas
xchg
mov
mov
jnp
imul
cmp
cmp
adc
jae
in
push
jno
mov
sbb
test
xchg
call
cmpsl
mov
and
dec
movl
les
adc
sbb
xchg
pop
fnstenv
cwtl
arpl
dec
lahf
fsubp
out
push
push
mov
mov
lahf
sti
pop
jae
cli
js
es
cmpsb
movsl
orb
rol
mov
adc
ds
mov
jno
test
dec
mov
sarl
je
loop
xorb
cmp
add
cs
sbb
or
cmp
mov
xor
stos
xchg
aad
insb
sub
mov
rclb
popa
and
adcb
push
lods
sub
and
sbbb
jl
push
push
sub
sbb
or
fists
inc
cltd
test
pop
test
pop
mov
xchg
and
push
sub
fidivs
mov
sub
repz
cs
xchg
fwait
in
add
adc
mov
jp
xchg
add
jmp
fisttpl
arpl
push
xchg
in
jne
inc
pop
xor
pop
mov
mov
lea
daa
ljmp
push
sbb
loopne
scas
lds
das
lds
jno
cs
lods
inc
test
mov
ficompl
and
loope
mov
rcrb
mov
clc
push
leave
lods
inc
loop
pop
int
popa
repz
mov
inc
lcall
test
ds
pop
imulb
pop
aad
ja
out
sbb
or
pop
mov
mov
insb
mov
xchg
test
aaa
push
fistpl
mov
imul
aaa
add
loopne
jb
stos
sub
push
cld
bound
lods
loopne
call
mov
adc
push
test
stc
xchg
loop
sub
inc
test
sbb
or
pop
mov
push
mov
xchg
shlb
sbb
jb
pop
lahf
cmpb
movsl
rclb
ds
jl
sbb
adc
int
js
xor
jp
rcl
insb
cmpb
mov
inc
insl
jle
push
decl
or
pushf
stc
and
scas
clc
mov
inc
inc
sbb
fcoms
fcoml
fldcw
pop
sub
dec
mov
inc
sub
dec
push
cli
add
sahf
clc
fucom
into
jmp
call
xchg
jg
and
or
cwtl
mov
jge
fmull
lock
mov
aas
cmp
int
pop
movsl
das
xchg
test
push
adc
std
xor
push
push
pop
cmp
jnp
jmp
pop
push
mov
je
add
inc
addr16
fisubrs
imul
test
ret
orb
or
mov
mov
xchg
and
subl
xlat
add
inc
test
xor
test
idivl
dec
mov
rcrl
xor
xchg
push
es
imul
inc
inc
mov
mov
mov
and
cli
adc
out
sub
jns
sub
aas
mov
call
nop
mov
mov
pop
pop
push
inc
push
mov
decl
xlat
addl
pushf
in
js
pop
cmpsb
mov
popf
inc
mov
int
jbe
cmc
aam
inc
or
xor
xlat
add
cmp
out
jge
jb
pop
push
aad
rorb
cmpl
out
scas
shrb
push
and
or
sub
loop
out
inc
iret
pop
mov
std
sub
xchg
orb
push
xor
lock
aam
in
jnp
lahf
daa
mov
xchg
and
mov
jle
sbb
xor
mov
shll
insb
push
sbb
sbb
outsl
jmp
pcmpgtb
or
xor
adc
xorl
fdivs
test
sbb
ja
push
push
fmulp
push
enter
mov
jns
lea
or
and
les
ret
cs
out
and
mov
push
mov
shll
jne
xchg
lret
mov
cwtl
stc
inc
fucom
sbb
add
rcrl
pusha
sti
or
sbb
lock
sbb
jg
cltd
mov
insl
ret
aas
pop
popa
sbb
xor
lds
mov
ret
push
sbb
mov
sti
out
adc
stc
jno
lods
push
mov
and
xor
arpl
mov
cmc
fwait
lock
cld
out
bound
repz
push
aam
mov
rorb
fimull
lock
mov
cmp
add
sbb
ds
loopne
adc
sub
cmpsb
flds
leave
into
or
test
dec
inc
xchg
movsl
jb
scas
cli
lds
lock
add
mov
decl
jle
fsubrl
dec
aaa
gs
mov
test
enter
xchg
jae
and
lock
roll
mov
es
cmp
xchg
test
rclb
sub
or
popa
adc
sbb
out
iret
mov
sahf
dec
lods
das
nop
outsb
and
jecxz
xchg
pop
fs
negl
inc
xor
sub
and
pop
decl
sahf
mov
fs
xchg
out
sti
insb
insl
xor
add
in
and
sub
repnz
lcall
ds
add
repnz
push
mov
or
xor
mov
mov
pop
jmp
xchg
inc
mov
movsb
sbb
movsl
cmp
into
jb
mov
arpl
jnp
cmpsb
dec
les
xor
test
xor
adc
mov
out
lds
lret
bound
repnz
cmpsl
es
jno
cwtl
ret
fisubrl
test
arpl
mov
push
repz
arpl
out
push
cmp
sbb
clc
clc
cmp
sbb
mov
and
mov
xor
repz
hlt
imul
lret
push
sbb
push
pop
push
fcmovnu
out
cld
or
xchg
push
sub
andl
repz
mov
lret
or
movsb
push
in
cmp
out
popa
sbb
sbb
fistpl
in
nop
mov
pop
das
outsl
in
cli
sti
jp
inc
stc
cmp
pop
out
xchg
orb
into
data16
popa
movl
push
push
push
sti
fldcw
push
and
inc
out
ret
jne
cmpsl
jmp
outsb
pop
jmp
cmp
popf
into
or
xchg
das
mov
sarl
cs
or
pop
push
inc
xchg
pop
or
mov
dec
push
call
aam
add
shl
pusha
jns
fwait
in
mov
lahf
xchg
lahf
pushf
dec
or
mov
enter
clc
pop
shl
or
test
bound
and
pop
mov
mov
and
sub
stos
add
inc
add
les
pavgb
mov
aad
or
mov
ds
mov
cmpsl
andl
mov
inc
hlt
push
jecxz
sub
lock
pop
adc
in
nop
es
and
insb
lcall
es
out
jbe
loope
je
cmp
ljmp
mov
mov
push
xor
rorl
in
jl
mov
fdiv
dec
push
sarb
enter
out
add
imul
mov
gs
out
xchg
jl
xor
push
in
cmp
cmc
inc
iret
add
in
cmp
xchg
mov
pop
dec
push
xlat
sub
movsb
mov
gs
mov
push
pop
mov
xchg
push
or
jg
pop
out
add
lret
mov
lahf
adc
ljmp
adcb
jp
sub
stos
jbe
cli
adc
call
sti
lea
jmp
test
sbbb
cmc
adc
mov
cwtl
mov
loopne
jmp
sarl
cmpsl
mov
pop
fisttpll
fstpt
daa
xor
mov
jecxz
jmp
testl
inc
add
gs
mov
mov
cmpsb
sbb
and
dec
fdivl
fwait
cli
mov
pop
and
test
lods
subb
inc
push
iret
add
ja
xlat
aaa
or
or
pop
or
outsl
fs
mov
mov
aaa
xor
not
loop
hlt
or
outsb
lahf
sbb
mov
ffreep
and
xlat
or
ret
ja
xor
dec
sbb
gs
xchg
xor
mov
mov
mov
dec
lret
cs
jae,pt
dec
pavgw
mulb
sub
shl
addb
mov
es
xor
push
fsubs
ret
iret
or
test
mov
sbb
aad
xchg
and
pop
add
push
pop
sahf
int3
sub
xchg
inc
imulb
sahf
in
pop
je
aas
mov
push
cltd
lcall
jno
shlb
imul
xchg
imul
pop
mov
adc
hlt
fcompl
call
jecxz
ret
in
mov
andl
jg
push
sub
mov
adc
and
jmp
cmp
cmp
faddl
xlat
mov
stos
or
add
popa
filds
aam
clc
or
pop
scas
call
std
mov
cmpsl
das
idivl
outsl
scas
das
fnstsw
sbb
aaa
ss
rol
fstp
mov
idivl
sbb
inc
add
lods
push
push
push
xchg
xchg
xor
pop
ljmp
inc
mov
and
icebp
or
push
push
mov
shll
mov
xchg
inc
sub
sbb
and
mov
sti
pop
cmp
loope
sbb
sarb
jbe
sub
pop
insb
out
sbb
xchg
movsb
outsb
fwait
adc
je
in
cwtl
cmp
loop
cwtl
add
xchg
push
hlt
mov
xor
mov
movsl
dec
pop
pop
cmp
cmc
sub
repz
mov
push
or
pop
pop
sbb
out
jb
inc
jle
test
cmpsb
mov
pusha
shl
fcoml
add
jmp
daa
pop
xchg
daa
xchg
mov
and
mov
and
sub
test
pushf
cwtl
pop
push
add
stos
or
andb
sbb
test
push
push
repz
repnz
add
xchg
int
clc
sub
fistpl
fnstcw
addr16
addl
or
xchg
jno
lcall
aad
repnz
lret
arpl
imul
out
pop
sub
mov
mov
icebp
and
add
push
dec
cmp
inc
add
cld
add
sahf
or
or
data16
xchg
fsubr
xchg
cs
jnp
lods
mov
fldt
mov
test
mov
test
pop
sbb
pop
jne
mulb
or
frstor
mov
gs
cli
out
pop
mov
cwtl
add
or
dec
mov
inc
fs
into
out
cmpsl
rcll
inc
xlat
mov
arpl
faddl
xchg
std
xor
sarb
add
mov
popa
mov
pop
and
dec
loopne
or
aam
xchg
scas
lods
jns
cmc
push
shr
mov
mov
jo
cld
mov
lcall
mov
push
mov
imul
push
pop
mov
fstps
and
sbb
xchg
outsl
add
pop
fcmovbe
pusha
jae
popa
xchg
ljmp
or
aad
aam
push
hlt
jg
sub
push
push
sub
sahf
inc
adc
es
inc
xor
pop
and
aaa
in
arpl
jl
cmp
add
adc
ficoms
jl
and
and
adc
mov
imul
and
test
lods
add
mov
cwtl
mov
fwait
xor
leave
push
aas
mov
jmp
push
lret
mov
xor
dec
test
ds
dec
xor
pop
popa
dec
shlb
enter
ret
jae
push
xor
verr
movsb
aas
xor
js
mov
test
std
fsubrs
fistpl
and
cmp
mov
cli
push
ret
out
push
into
add
or
jno
hlt
jecxz
cmpl
das
cmp
and
jmp
subb
out
sbbl
or
imul
cmp
sub
scas
push
cmp
cmp
imul
pop
dec
push
stc
add
inc
stos
jne
jg
mov
pusha
and
repz
xchg
push
inc
incb
mov
jbe
mov
das
xlat
dec
jno
push
sbb
adc
inc
or
xchg
call
sub
loope
daa
cs
out
stc
movq
inc
cmpsl
sub
pusha
mov
mov
push
scas
lahf
jl
rcrl
push
popf
flds
xor
jl
ljmp
int3
stos
mov
xchg
xlat
sbb
shlb
jmp
out
xchg
iret
lock
stc
dec
mov
sub
cmp
cmp
xchg
jg
cmp
aam
inc
cmp
add
loopne
add
stos
cld
std
jnp
std
lods
sbb
arpl
cmpsb
pop
lds
fstps
jnp
xchg
xchg
mov
fisubs
sub
mov
pop
lcall
bound
mov
push
cmp
xlat
jl
adc
dec
mov
push
adc
mov
ret
xchg
dec
dec
push
push
cmp
in
imul
jo
xchg
jle
inc
cmc
mov
fbld
out
loope
movsl
xchg
mov
xor
in
add
xlat
int3
or
adc
sub
cltd
in
scas
pop
arpl
push
cmpsb
sbb
scas
push
aaa
push
jo
adc
repnz
sub
cmc
push
mov
mov
cmp
push
mov
push
sbb
mov
popa
fistl
pop
leave
mov
xor
loop
jnp
ror
mov
push
add
push
ret
adc
jp
jne
xchg
sub
pushf
jns
roll
mov
jno
je
cld
jmp
cli
loopne
jno
popa
arpl
es
pushf
jns
adc
rclb
sbb
jle
add
jp
push
inc
sub
dec
loope
sarl
ret
jge
push
and
call
pop
xchg
aaa
cmp
cmc
dec
and
mov
loopne
das
inc
push
push
pushf
pusha
xor
faddl
xchg
daa
aaa
cmp
pop
aaa
rcr
xchg
mov
cmc
mov
inc
mov
mov
es
mov
stos
mov
out
fcoml
mov
dec
pop
cmp
dec
mov
sub
repz
out
imul
leave
lea
adcl
daa
mov
test
lret
push
sti
jbe
cs
das
ja
xchg
cmp
xchg
adc
fstpl
jg
or
mov
xor
push
jo
cwtl
sti
data16
fisttpl
loop
hlt
popf
mov
mov
iret
js
or
cmp
pop
adc
xchg
call
popa
movsb
jno
mov
jbe
mov
jp
push
addr16
out
inc
dec
scas
mov
popf
jae
mov
addr16
pop
jp
rolb
cld
jecxz
sub
dec
push
push
xor
in
jmp
cli
mov
xchg
and
mov
adc
adcl
jmp
xchg
push
jb
pop
xchg
mov
lods
lcall
or
mov
enter
dec
xor
fs
cmp
jae
jnp
aas
aaa
add
cmp
iret
xchg
jno
outsb
test
inc
xor
lcall
or
popa
pop
popaw
push
push
pop
filds
xor
jb
out
sub
sub
xor
ljmp
arpl
or
mov
and
in
daa
xchg
gs
icebp
xor
inc
xor
adc
pop
xor
jmp
jae
std
xchg
dec
jp
enter
or
mov
rcr
or
cmp
add
xor
and
insb
mov
xchg
stc
sbb
les
sbbb
stc
loopne
xlat
lds
inc
xchg
iret
pusha
pop
xchg
push
out
push
sub
pop
or
out
push
icebp
jno
repz
inc
pop
jge
rcrl
movsl
rcrb
pop
movsl
arpl
aaa
fwait
repz
faddp
pop
cltd
repnz
pop
mov
divl
fwait
mov
int
loop
inc
pop
adc
outsl
bound
adc
add
cwtl
hlt
mov
jae
and
adc
shlb
fcomip
mov
dec
or
sbb
aad
jg
clc
int3
sub
lret
aaa
js
out
stc
loopne
mov
fnstcw
mov
sbb
or
cmp
outsb
xor
shlb
and
or
hlt
sbb
not
push
mov
out
mov
mov
notb
pop
stos
push
and
std
ss
ds
xchg
xchg
repnz
push
push
jb
in
test
sub
rcrb
mov
mov
movsb
lods
test
mov
clc
mov
flds
cltd
js
push
mov
xchg
dec
dec
enter
push
leave
and
cmp
and
or
fwait
jae
mov
popa
lret
cld
in
pop
mov
xchg
aam
arpl
adc
mov
inc
fidivs
push
inc
xchg
mov
mov
lock
addr16
rclb
or
sti
xor
sti
add
fisubs
popf
cmp
sti
xor
shll
inc
mov
sbbl
xchg
imul
imulb
push
lcall
es
xor
sbb
adc
jmp
inc
sbb
fwait
subl
aaa
mov
into
dec
mov
imul
jno
or
pushf
stos
sahf
aaa
fidivs
jecxz
je
xchg
dec
pop
stc
idivb
dec
jo
out
or
test
sbb
push
movsb
mov
repz
mov
lds
xor
cmpsl
and
das
and
add
lcall
or
ss
pusha
sub
outsl
popa
and
and
out
repnz
call
popa
inc
imul
cwtl
roll
sbb
fsubr
xor
imul
ds
sub
orl
jge
iret
and
adc
mov
cmc
mov
shl
or
and
loope
rolb
insb
mov
ret
pop
movsl
lea
stos
fisubs
mov
add
lahf
xlat
jp
cli
mov
push
ds
push
out
lahf
fldt
dec
pusha
shlb
mov
jo
mov
cmp
cmp
subl
add
sub
or
dec
inc
cmpsb
jb
js
push
scas
mov
stc
jle
lods
dec
cmp
cmp
push
dec
insl
jmp
rcrb
stos
push
fistl
aaa
dec
bnd
cmp
add
mov
add
adc
jo
mov
in
mov
testb
mov
jno
cmpsb
mov
adc
mov
xor
or
dec
jae
ret
cmp
repz
sub
fnstenv
data16
sti
push
sbb
call
stc
xchg
and
push
push
adcb
or
add
out
pusha
bound
sub
jge
lcall
pusha
out
in
add
hlt
pop
shrl
movsb
mov
ss
mov
xor
mov
into
hlt
cwtl
mov
pop
pop
sbb
mov
mov
popa
jle
jb
or
je
inc
push
je
sbb
jne
shll
jo
and
push
nop
fdivs
inc
mov
pop
xchg
push
mov
dec
cmp
fstl
clc
mov
in
pop
add
imul
lahf
jl
popa
outsl
push
enter
pushf
adc
xorb
test
movsb
mov
sbb
divl
jne
ljmp
movsb
ficompl
dec
xchg
push
pop
cmp
add
xor
cmp
ljmp
dec
xchg
push
jno
cmp
mov
leave
inc
in
and
add
jne
sub
mov
push
sub
inc
pop
fidivrs
or
nop
adc
dec
push
jne
lock
fmull
or
push
fs
shufps
mov
inc
cmp
cmp
and
mov
pop
mov
push
cmp
jg
subl
mov
xchg
lods
lods
adc
in
pop
sahf
or
or
cmpsb
cli
jg
pop
mov
jbe
shll
movsl
outsl
pop
or
push
aas
popf
mov
enter
leave
outsl
xorw
xchg
outsl
std
or
push
or
shll
inc
or
mov
call
daa
dec
lahf
jne
mov
xlat
or
adc
xchg
xor
xchg
mov
add
xacquire
xor
jecxz
out
push
negb
call
xchg
insb
jb
fistpl
add
dec
cwtl
adc
pushf
mov
das
lcall
enter
cmpsl
sub
sarl
pop
mov
std
out
in
inc
push
cmpsb
cmpsb
loopne
xor
in
outsl
jbe
inc
iret
mov
lret
lret
inc
sbb
adc
adc
xor
outsb
inc
push
movsl
cmp
hlt
xor
fcomi
insb
mov
aad
bound
call
inc
dec
hlt
stc
push
fcoml
or
push
cmpsl
cmp
mov
orb
aas
faddp
pusha
fisttps
std
ljmp
ds
int
push
adc
fidivl
jle
xor
inc
outsb
jle
lcall
pop
sbb
sbb
stc
adc
and
imul
lea
out
cmp
push
xchg
mov
push
add
stos
insl
jg
sbb
dec
scas
bt
in
lcall
lahf
adc
cs
xchg
jmp
push
rcr
movb
lret
pushf
or
das
out
rep
das
les
stos
add
sahf
out
xchg
jg
pop
add
pushf
inc
test
jb
mov
mov
sub
rol
cmc
sbb
mov
arpl
jle
add
out
mov
mov
fisubl
fcomps
daa
shll
ja
adc
pop
bound
sub
jno
outsb
sahf
or
call
test
ss
pop
sbb
out
jecxz
adcl
mov
jne
aam
insb
rolb
mov
add
lcall
mov
sub
decl
cmp
sbb
mov
rcrl
jb
into
repnz
shll
sub
shrl
or
sbb
les
pop
test
aaa
scas
nop
adc
testb
nop
lea
cmp
outsl
pushf
adc
xchg
scas
jae
popa
cmp
mov
pop
hlt
sti
dec
pop
jecxz
adc
int3
movsb
rolb
insb
in
test
movsl
scas
lret
mov
push
xchg
daa
mov
xor
out
rol
je
iret
addr16
dec
dec
mov
ljmp
stos
sub
leave
xor
dec
cmp
sbb
in
push
dec
mov
push
test
js
mov
push
mov
in
jns
rorb
repz
lds
pusha
add
sahf
xor
clc
scas
push
dec
jne
stos
sbb
test
jge
and
jns
outsl
xchg
cli
sbb
mov
iret
data16
adc
add
or
push
push
std
pop
or
pop
and
cmp
ds
mov
xor
shlb
mov
cmpsl
in
out
mov
pop
jl
and
int
or
sub
adc
mov
inc
addr16
jo
fs
cmpsb
xor
dec
sub
mov
or
jl
dec
iret
lahf
push
mov
push
cwtl
std
test
movsl
mov
jecxz
add
outsb
add
je
inc
out
and
in
fisubs
sub
aas
cmpsb
pop
sub
lcall
cmp
mov
loopne
addr16
jge
in
test
cli
xor
cltd
cld
mov
cmpsb
in
xchg
dec
imul
adc
pusha
fwait
push
faddl
push
jne
sub
dec
cmp
test
call
adc
hlt
out
mov
adc
adc
movsl
mov
sbb
rclb
dec
push
xchg
repnz
add
sub
sub
and
jo
js
cmp
mov
push
sbb
jp
adc
jle
repz
pop
out
jo
subb
pop
rorb
dec
push
dec
xor
cmpl
fldt
push
add
fs
and
sub
scas
cs
xor
shl
js,pt
inc
pusha
mov
push
bnd
fstps
ljmp
adc
mov
mov
xor
adc
loopne
xor
fdiv
jno
ret
movsl
stos
dec
insb
mov
push
mov
je
and
ret
cmp
scas
push
xchg
popa
fbstp
pop
dec
das
dec
cmp
xor
icebp
xor
aad
jg
mov
dec
mov
dec
jg
mov
enter
add
stc
jns
xchg
xchg
xlat
dec
push
cmp
sub
xor
out
fs
sbb
pavgb
inc
test
push
not
pushf
push
jns
dec
mov
fwait
sar
dec
pop
xlat
cs
push
sti
out
pop
in
xchg
idivb
and
and
sbb
push
mov
adc
movsb
or
mov
cwtl
lea
mov
mov
test
popf
push
push
inc
inc
ljmp
roll
dec
xchg
cmc
sti
ss
inc
iret
sub
outsb
scas
test
add
popf
cmp
xor
call
pop
push
jl
sub
push
int
fnstsw
lock
movsb
cmp
ror
cvtdq2ps
jae
mov
inc
ret
icebp
movsb
mov
add
in
inc
xor
inc
lret
sbb
add
jno
clc
jbe
test
fldl
dec
xchg
xor
adc
daa
mov
cmc
mov
enter
xchg
das
mov
add
mov
mov
es
pop
add
mov
outsb
cmpsl
jmp
pop
cld
xchg
cli
fs
pop
loopne
mov
mov
inc
je
cmc
push
sbb
mov
mov
xor
das
out
inc
test
test
ljmp
mov
ror
cmpsl
mov
push
int3
add
mov
xchg
fiaddl
lret
aam
inc
push
dec
lock
out
mov
mov
mov
cmp
pop
cwtl
movsl
adc
imul
sbb
call
mov
xchg
movsb
or
xchg
push
inc
into
fnstcw
mov
adc
sbb
icebp
popl
push
aaa
ret
cmp
and
adc
mov
enter
out
cmp
mov
mov
or
rclb
in
das
add
popf
mov
add
repnz
push
imul
mov
sbb
inc
fdivs
and
push
push
mov
out
add
loope
ret
sub
jne
fimuls
pop
xchg
out
jbe
pop
popf
dec
cmc
push
pop
pop
jb
jl
push
mov
xor
or
lock
jle
jl
adc
mov
sub
stos
push
call
pop
xchg
movsl
mov
stos
pop
fsubs
adc
nop
xchg
lea
add
test
repnz
stos
js
mov
int
and
mov
adc
mov
outsl
pop
push
inc
movsb
add
add
cmpsl
jl
pop
mov
inc
ljmp
fbstp
addl
cmp
je
adc
test
pop
repz
mov
mov
das
fsts
les
xor
ficoml
fcmovbe
stc
xor
xchg
std
mov
rcrb
loop
int
pop
inc
pop
cmp
in
ret
lods
pop
mov
mov
mov
inc
jge
rcrb
fdivl
jle
out
ljmp
hlt
imul
scas
aad
fidivrs
je
and
xchg
cmc
sahf
aas
push
and
repz
xchg
daa
dec
imul
pop
stc
bound
popf
stos
dec
daa
ljmp
mov
adc
jno
pushf
pop
jg
insb
sbb
pop
stos
pop
mov
add
xchg
sysenter
mov
or
je
stos
imul
jno
lahf
sub
ret
add
pop
push
insl
outsb
add
fildll
mov
and
and
clc
shrb
popa
fscale
icebp
fiaddl
lods
fs
cli
addb
mov
nop
ljmp
out
xchg
mov
roll
cmp
enter
mov
mov
pop
cmp
mov
mov
adc
pop
das
mov
call
mov
aad
pop
in
repnz
sbb
cs
xchg
push
fnstenv
adc
repnz
popa
imul
inc
call
rolb
mov
push
les
xor
push
jnp
inc
xchg
sbb
out
fimull
jmp
push
ds
fildl
mov
push
fnstsw
adc
jg
scas
xchg
insl
pusha
cmp
adc
test
and
loop
xchg
into
out
push
fsubr
arpl
add
test
shl
inc
sbb
test
inc
sub
orb
out
push
sbb
daa
add
and
js
xor
xor
imul
int
mov
aaa
adc
mov
push
faddp
in
dec
add
xchg
popa
pop
test
lahf
or
andb
lcall
mov
jle
adc
fmuls
enter
jmp
stc
cmp
je
clc
push
jo
mov
dec
dec
jne
pop
push
jne
sub
into
lahf
movsl
out
mov
mov
jne
dec
jb
mov
pop
bound
or
hlt
hlt
pop
lods
lods
xor
in
jno
cmpb
adc
rclb
or
pop
scas
inc
mov
fstps
mov
add
test
sbb
enter
sub
mov
xchg
bound
mov
xchg
ret
mov
pop
out
push
adc
out
sbb
cli
xchg
add
cmp
sbb
cmp
push
mov
mov
push
loopne
mov
push
stc
mov
fdivs
cs
lock
cmp
gs
addr16
xchg
mov
mov
cmp
ss
jnp
lcall
adc
cmp
cmc
sbb
or
fdivrl
sub
pop
cmp
andb
xlat
clc
sub
sbb
sbb
paddusb
cmp
mov
sub
pop
aas
das
xchg
or
jne
test
xchg
xor
sbb
xor
sbb
jecxz
icebp
xchg
add
iret
cmpsl
lcall
or
inc
das
xchg
xor
push
xor
in
xor
xchg
lret
pop
aaa
mov
pop
fs
test
jmp
cmp
sbb
jb
ficomps
cmp
sbb
inc
test
js,pn
and
or
inc
rcr
xlat
push
pop
aad
ljmp
mov
dec
xor
push
daa
clc
pop
imul
hlt
gs
out
xchg
sub
xchg
mov
jecxz
ficompl
lcall
xchg
roll
push
dec
stos
add
sbb
xlat
mov
mov
xchg
jge
enter
pop
mov
mov
pusha
test
test
xor
push
in
mov
fdivrs
or
ss
ja
lock
repnz
inc
int
jb
push
jns
dec
ja
adc
cs
inc
cmp
lods
adc
sar
pop
inc
cmp
std
enter
pop
inc
das
fiadds
test
mov
cli
pop
stos
xor
mov
scas
cmc
mov
in
mov
adc
adc
cmp
aad
jg
add
xchg
js
cs
push
loope
dec
push
mov
lds
add
cmp
jmp
ret
sbb
in
xchg
mov
pop
and
push
xor
in
jno
leave
popa
aad
movsb
sbb
fdivs
cmpl
int
sbb
and
int
inc
or
sbb
out
aas
insl
lret
inc
movsl
into
stos
out
jns
push
test
push
and
dec
pop
test
xchg
xorl
pop
push
lahf
sub
ret
or
push
lock
sub
inc
int3
xor
aam
sbb
cmp
sub
mov
out
fdivrl
jp
push
ljmp
daa
loopne
push
push
mov
sbb
mov
addb
sub
int3
mov
xchg
imul
shll
mov
shlb
or
shlb
xchg
cli
pop
daa
xor
jno
loop
fisubrl
sbb
xchg
movsb
fdiv
ja
sub
or
mov
inc
and
insb
push
sbb
and
popa
mov
cs
xchg
pop
xor
inc
test
movb
push
adc
mov
and
pop
and
loop
mov
xor
push
or
cmp
mov
inc
mov
sti
icebp
mov
jno
je
adc
fcompl
shrl
sub
mov
adc
sbb
icebp
push
cmp
imul
addr16
fs
stos
cmpsl
inc
fisttpl
mov
inc
lret
and
sbb
mov
fcom
lds
inc
or
ret
jnp
xchg
je
lcall
lea
bndstx
gs
inc
adcb
or
pushf
lock
inc
push
mov
sub
jp
mov
xlat
vmwrite
xchg
mov
clc
dec
int3
pop
cltd
fstl
iret
loopne
bnd
imul
adc
lahf
adc
pop
adc
das
sbb
imull
lahf
outsl
lds
aaa
xchg
fwait
lcall
fnstsw
sub
mov
mov
adc
cmp
cmc
xchg
adc
cld
cmc
test
inc
movlps
ret
add
or
in
ja
add
jl
mov
popa
dec
clc
testb
jmp
jb
adcl
jecxz
out
mov
sbb
mov
aad
mov
mov
je
test
sbb
lods
fs
push
jg
fldcw
pop
pop
aaa
add
push
shl
push
es
leave
jle
add
das
or
hlt
add
or
push
aad
fadd
or
rorb
ret
stc
jns
xor
push
mov
in
jno
dec
test
mov
out
jmp
and
mov
xchg
mov
cltd
jne
fldenv
pusha
inc
int
outsb
mov
mov
push
mov
ror
or
mov
pop
mov
cmp
fildl
test
mov
pop
add
push
gs
mov
jecxz
adc
push
cs
xor
jno
xor
fdiv
jae
lahf
dec
cwtl
cs
push
sbb
les
ret
xor
lcall
or
loopne
mov
ret
fimull
cmp
movsb
movsb
xchg
mov
or
std
in
cmp
and
fsubl
push
fadds
sbb
out
or
mov
xchg
in
or
mov
enter
fs
rolb
adc
sahf
add
roll
lods
into
mov
ja
or
dec
fidivrl
rcrb
cs
inc
loopne
pop
incl
pop
sub
sbb
sub
shll
cmp
jnp
jle
aas
mov
sti
decl
lods
mov
dec
jg
ss
jge
mov
dec
xchg
dec
push
or
and
insl
imul
cmp
xor
xchg
les
imul
repnz
cmpsl
push
sub
jno
stos
xchg
test
ss
loop
movsl
pop
and
pusha
call
ror
sub
mov
ret
aam
mov
cmpsb
adc
jp
dec
das
aam
inc
cli
loope
push
bound
fisttps
mov
xchg
ss
sub
mov
cmc
loope
clc
push
push
dec
jmp
lret
lds
cmp
ror
call
stc
push
cmpsl
sbb
int3
jp
mov
in
and
das
sub
pop
test
mov
xchg
fimuls
and
cmp
cmp
push
sbbl
lret
xchg
push
mov
out
cmp
jg
pop
repnz
ds
pop
scas
mov
arpl
fiadds
xchg
ss
mov
sbb
adc
int
fstpt
pop
js
fpatan
enter
into
jg
arpl
mov
jnp
int
mov
inc
adc
xchg
mov
xor
shlb
fadds
xlat
sub
pop
push
cmpsb
push
add
pop
popa
addr16
bound
je
repz
and
mov
adc
stos
add
repz
adc
mulb
mov
and
push
xor
je
fs
test
gs
xlat
ja
sbb
loope
pop
lea
push
mov
cmpsb
shlb
mov
sti
push
aaa
jnp
lea
push
cmc
sub
cmp
sub
jns
xor
mov
int
fisttpll
outsl
leave
pop
push
pop
rcrl
aas
mov
sub
rcr
inc
divl
mov
inc
adc
sti
sub
inc
into
jb
push
lret
test
push
xor
mov
dec
rclb
and
adc
test
or
xchg
pop
popf
pop
lods
cltd
gs
jp
add
mov
jnp
push
inc
jnp
iret
mov
xchg
nop
cmp
xchg
mov
cltd
mov
leave
out
mov
ret
mov
dec
pop
fbld
add
gs
fwait
pop
fs
test
or
outsb
push
xor
ud1
test
int3
adc
pop
sahf
xor
adc
das
loopne
dec
iret
test
adc
pop
push
mov
clc
sub
test
mov
mov
mov
xor
test
fsubl
inc
push
pop
xchg
or
clc
jle
sarl
movsl
jp
ss
ret
xchg
test
cltd
inc
sbbb
mov
sti
sub
jae
mov
jle
daa
mov
decl
push
mov
and
ret
frstor
pop
pop
cmpsl
imul
mov
fmul
cwtl
das
sbb
mov
ljmp
imul
add
cli
sub
cmp
push
mov
iret
jno
in
jmp
mov
pop
sub
adc
subl
mov
lret
dec
sub
orl
mov
sub
xor
jbe
repz
mov
xchg
push
jl
jnp
pop
mov
or
xchg
movsb
mov
lock
fcoml
jns
push
mov
jp
adc
mov
inc
sbb
lods
mov
out
pop
mov
ljmp
mov
stos
pop
psubsb
mov
shll
pop
sbbb
outsb
or
and
push
or
and
push
fiaddl
pop
sub
sbb
bnd
stos
jo
adc
cmp
mov
mov
add
cli
sbb
inc
dec
int3
pop
stc
imul
add
clc
xchg
xchg
daa
mov
adc
popf
and
cli
xor
test
daa
test
mov
mov
imul
shll
jns
aad
add
fs
mov
mov
inc
in
shll
xchg
jns
ret
notb
lahf
xchg
inc
loop
or
jp
mov
mov
inc
push
xchg
adc
shlb
push
dec
int3
mov
cmp
mov
cmpsb
nop
cmovge
mull
inc
xchg
int
jno
xchg
jmp
loopne
dec
jecxz
xor
movsl
sub
pusha
scas
push
inc
jb
pop
rep
lcall
es
push
mov
shrb
dec
xor
leave
cmp
cmp
push
inc
mov
scas
sbb
mov
cltd
fimull
and
fmuls
pop
and
inc
ret
push
imul
pusha
or
mov
adc
aad
cmp
jle
mov
pop
faddl
sbb
jbe
rcr
lds
aad
in
and
sub
loope
sbb
xchg
sub
fmuls
add
mov
arpl
pop
inc
xchg
in
out
adc
or
rcrl
xchg
push
js
rclb
ret
aam
inc
xor
daa
scas
jp
fwait
push
lods
or
xor
stos
pop
pop
sbb
fst
cmc
mov
or
call
inc
inc
in
jle
lret
lock
scas
cmp
icebp
jg
cmp
adc
test
push
pop
push
mov
xchg
inc
out
sub
jg
adc
dec
jmp
add
stc
jge
pop
and
lods
js
mov
out
push
sbb
cmp
out
test
shll
in
and
or
gs
mov
ljmp
dec
pop
sbb
add
test
cld
cmp
or
or
cmc
popa
int
or
mov
xchg
xchg
jne
js
dec
xor
scas
dec
push
or
xor
int3
pop
and
xchg
mov
fwait
or
fistps
in
inc
pop
jmp
jl
dec
popa
mov
stos
stc
mov
xlat
adcb
nop
jno
push
or
push
xchg
pop
js
pop
ret
fwait
push
pop
pop
inc
jbe
je
mov
adc
out
aad
test
out
aam
lahf
xchg
xor
arpl
push
push
sub
sti
xor
mov
mov
mov
jecxz
neg
enter
pop
mov
test
popf
mov
roll
shrb
push
neg
test
es
sub
mov
and
xor
dec
shl
mov
stos
test
xor
dec
cmp
cmpl
mov
pop
sub
and
mov
scas
bound
adc
insl
mov
dec
pushf
push
cmpsl
push
mov
dec
orb
or
test
dec
and
leave
fiaddl
lods
mov
adc
pop
push
ret
lahf
cmp
jmpw
sbb
in
mov
aad
es
loop,pt
pop
cmp
adc
cwtl
fcoms
arpl
movsb
or
repz
push
and
std
out
sarl
test
dec
pushw
enter
ret
cmp
mov
sub
jle
xlat
mov
popf
scas
rolb
or
xchg
jbe
mov
mov
push
sub
insb
fdivrs
lea
jecxz
mov
pop
mov
sbb
lods
mov
mov
push
repz
dec
jb
in
jle
inc
cmpsl
movsb
fwait
es
push
push
lods
and
test
mov
lds
sbb
mov
and
data16
call
xchg
xchg
inc
lahf
mov
pop
add
orb
adc
outsl
popf
cmc
enter
and
add
das
lret
or
cmpsb
pop
mov
mov
or
jl
sbb
push
idivl
or
cmpsl
stos
call
xor
nop
in
mov
int3
daa
adc
stos
jbe
pop
or
cmc
loopne
data16
clc
loopne
and
lds
mov
sub
xchg
sbb
es
push
popf
lret
mov
cld
pop
iret
or
or
and
mov
ja
and
adc
imul
cs
clc
mov
aas
enter
repnz
ja
jmp
aaa
cwtl
insb
arpl
jg
imul
push
aaa
push
imul
inc
mov
or
insl
gs
aaa
mov
in
push
inc
xchg
les
jmp
mov
sbb
shrb
add
sbb
jmp
ja
sbb
add
lahf
pop
xor
adc
add
arpl
outsb
fidivl
ljmp
cmp
inc
sub
jbe
imul
inc
shlb
xchg
or
pop
cmpsb
or
in
xor
nop
jo
pushl
pushf
adc
cmp
mov
sub
cwtl
iret
lret
pop
jg
imul
cmpsl
sub
movsl
loop
add
les
jp
xchg
push
jge
enter
das
lret
out
ss
fsubrs
and
aad
jl
aad
xchg
mov
mov
push
add
addl
mov
gs
or
push
out
pop
inc
aam
sub
aam
jne
ret
inc
stos
addr16
addb
lds
or
jp
ds
arpl
xchg
fwait
mov
mov
movsl
or
push
ds
inc
fimull
dec
test
sar
cmpsl
mov
mov
sbb
mov
addb
xor
mov
faddl
test
rcpps
pusha
mov
lcall
cmpl
cmpl
pop
loopne
xchg
lahf
loopne
push
jb
push
cli
ret
insb
mov
and
xor
shll
test
cmp
pop
mov
leave
mov
xchg
xchg
push
adc
cmp
pop
sub
jnp
xchg
fs
pop
sbb
insb
js
dec
jg
imul
dec
test
push
aam
popa
xor
cmp
xchg
popa
iret
hlt
and
out
mov
xchg
ffree
pop
mov
xor
movsl
dec
sub
jecxz
out
iret
movl
xlat
mov
mov
fucomi
lret
push
cmp
and
outsb
mov
jne
push
dec
pop
lret
jbe
aas
sub
jge
mov
sub
push
mov
mov
int
imul
mov
jl
insb
cmp
movsl
cwtl
or
les
movsb
lahf
test
imul
or
cwtl
jl
push
xchg
into
imul
push
imul
mov
in
xor
inc
int3
sbb
xchg
mov
jecxz
xchg
gs
sub
mov
ror
jp
dec
sub
popf
out
test
fwait
and
mov
hlt
lret
cmp
sub
sbbb
out
mov
mov
inc
push
push
imul
fisubl
xchg
inc
mov
jl
jo
rolb
lahf
test
pop
scas
add
ss
aaa
in
add
shll
mov
orb
stos
fidivrs
mov
add
push
mov
jecxz
mov
inc
mov
pushf
fdivs
and
cmp
inc
dec
test
xor
imul
adc
clc
pop
mov
push
cmp
pop
add
xor
dec
xor
pop
mov
push
addr16
or
in
sub
jp
xchg
notl
cmp
dec
xchg
insl
dec
inc
sub
jg
or
xor
fstpt
stc
inc
push
pop
lret
lahf
push
push
mov
ljmp
out
mov
shll
out
jnp
call
push
cmpsl
xchg
incl
in
inc
aaa
add
sbb
push
nop
int3
mov
xlat
mov
enter
loop
mov
pop
mov
mov
lods
movsl
sub
mov
and
sub
daa
enter
inc
test
mov
outsl
int3
push
mov
pop
je
and
dec
daa
testb
dec
push
xorl
push
jb
mov
xchg
jbe
sub
pusha
and
xchg
adc
sub
cmpl
cmp
out
test
imul
fisubrs
arpl
shl
insb
pop
mov
fldt
dec
pop
in
shll
addr16
out
jge
mov
jmp
xlat
iret
cmpsl
out
pushf
out
fldenv
sbb
or
or
lret
xchg
xor
in
cli
mov
pushw
adc
sar
inc
push
popa
std
mov
fs
adc
test
stos
xor
xchg
es
loop
ret
inc
adc
mov
dec
ss
push
inc
jo
and
jge
push
jno
jmp
or
mov
pop
mov
shrl
fwait
movsb
xchg
mov
mov
pop
mov
xchg
test
dec
filds
sub
icebp
hlt
jbe
sbb
push
or
jae
sub
pop
rclb
sub
add
xchg
fucomp
push
inc
in
das
cli
pop
add
test
fisttps
mov
cs
push
lds
push
jns
lcall
jecxz
and
push
mov
and
adc
gs
push
jmp
jnp
and
in
bound
aad
xchg
lahf
cmp
inc
cmc
call
mov
fistpll
aam
push
xchg
repz
adc
ret
ds
and
enter
ss
xor
jns
jno
mov
pushf
mov
icebp
scas
pop
pop
mov
push
mov
movsl
sbb
cmp
xor
adc
cld
adc
repz
jns
inc
cltd
and
mov
pop
mov
pop
addr16
jecxz
negl
jl
mov
and
cmpb
lahf
test
sub
and
cmp
cwtl
pop
mov
sbb
mov
jg
add
cltd
gs
jmp
push
mov
and
ds
mov
aam
dec
jl
dec
jl
xorl
lock
addr16
pop
sbb
or
outsl
or
repnz
cmp
inc
imul
std
nop
pop
testl
xchg
fwait
scas
and
lods
dec
jp
cli
mov
or
lods
mov
arpl
jbe
dec
jecxz
fwait
sbb
xor
and
out
and
jbe
sub
mov
loopne,pt
xor
push
arpl
popa
add
sbb
cmp
xor
xor
stc
clc
xchg
jb
pop
movsl
or
in
sub
in
movsb
cltd
mov
cmp
icebp
test
adc
loope
mov
cli
dec
dec
mov
daa
sbb
aaa
and
scas
ja
aaa
inc
or
scas
sbb
cmp
andb
mov
call
xchg
aad
hlt
inc
cmp
add
add
add
shll
mov
xor
stc
mov
sub
pop
jmp
lods
mov
inc
xchg
cld
lock
jno
pusha
stos
ror
das
data16
arpl
jmp
leave
leave
into
lds
push
mov
fcoms
cmp
bound
popf
sub
ljmp
sub
ffree
outsl
lea
jg
mov
xchg
xor
sbb
out
xor
xor
testb
shll
inc
fimuls
push
rcr
ljmp
sbb
cmp
sbb
lret
sbb
imul
mov
cmp
nop
mov
lret
dec
pusha
movsl
insl
mov
fwait
xchg
loop
xor
cs
and
daa
inc
enter
leave
loope
jl
lahf
movsb
or
push
pop
mov
loopne
rep
in
or
or
sub
cwtl
pop
sub
push
js
fmull
int
hlt
in
je
fdivs
mov
xchg
out
xchg
add
xor
addr16
les
into
stos
pop
xchg
cmp
mov
cmc
dec
push
stos
adc
mov
push
xchg
cmp
lret
jp
mov
call
inc
push
adc
addr16
in
sarl
mov
push
mov
aas
fs
inc
cmpxchg
push
ficompl
lods
adc
push
push
cmp
push
or
sbb
mov
pop
lcall
sahf
mov
sub
pop
nop
and
scas
lea
adc
subl
mov
test
push
jmp
push
add
repnz
dec
xchg
mov
and
inc
pop
and
pop
leave
test
jge
shlb
xor
push
jle
and
stos
xor
in
out
adc
lret
xchg
je
jbe
lcall
pusha
inc
shl
add
sbb
jne
daa
fwait
xchg
mov
mov
sbb
jecxz
sbb
mov
in
lods
push
movsb
add
mov
xor
dec
leave
subb
xchg
bound
out
adc
adc
mov
mov
les
ret
push
and
xor
out
scas
add
imul
orl
xor
xchg
jmp
cli
je
jg
fisttpll
push
sub
jae
fwait
push
test
jnp
mov
mov
mov
inc
fidivrl
mov
push
jb
test
inc
icebp
pop
sbb
mov
fld
mov
aam
or
and
shlb
mov
adc
dec
in
cli
cmpsl
cs
rclb
inc
xor
jno
aam
sub
ret
cmp
stc
xor
mov
sbb
push
repnz
or
lods
jno
sub
add
xchg
in
gs
pusha
or
adcl
pushl
sbb
pop
loopne
leave
push
xchg
inc
pop
in
shll
and
mov
sbb
fcomps
cs
in
out
sbb
lret
mov
xor
inc
jne
sbbb
inc
jne
test
mov
pop
lret
xchg
pop
or
repz
adc
pop
cmp
and
inc
sbb
sub
mov
jbe
int
divl
xchg
pop
addr16
dec
adc
pusha
sbb
mov
dec
test
in
pop
repnz
jge
sub
dec
loopne
mov
scas
cwtl
das
xorl
ret
inc
out
pop
mov
xchg
je
jg
fs
pop
cltd
in
mov
icebp
add
fstl
fisttpl
test
xor
or
or
out
inc
out
xor
mov
push
call
sbb
mov
jns
inc
mov
jecxz
into
outsb
xchg
xor
xchg
test
pop
dec
pusha
popa
mov
hlt
xor
mov
inc
loop
add
inc
loope
or
iret
lcall
xchg
adc
jae
call
arpl
data16
pop
sbb
mov
push
js
divl
fnstcw
scas
ds
and
gs
clc
mov
stc
popf
movsl
xor
xlat
adc
pushaw
push
xchg
shlb
sub
sti
xor
mov
xchg
pusha
jae
xchg
out
stos
aaa
adc
in
dec
cmp
popa
add
mov
sbb
xchg
xor
aad
in
dec
pop
cmp
in
push
inc
lods
jns
sbb
dec
xor
mov
fisubrl
test
lret
sbb
dec
cmp
cmpsb
xchg
scas
scas
mov
add
push
inc
lock
aam
push
push
das
lahf
jmp
sbb
iret
cmp
lcall
dec
cmc
pop
xchg
dec
push
jnp,pn
inc
and
out
xor
jl
inc
vpmovusdw
repz
in
je
shlb
push
cwtl
test
adcl
loope
inc
sbb
lods
pop
aaa
aad
jg
mov
mov
inc
scas
out
push
inc
sti
sahf
xchg
push
das
sbb
lret
in
xor
mov
xor
xor
pop
add
push
or
mov
outsb
ret
push
mov
mov
fwait
adc
imulb
cltd
add
loopne
fcmovnbe
xchg
call
mov
insl
cmp
data16
out
into
pusha
push
insb
sti
mov
cmp
adcl
pusha
cmpb
pop
jge
dec
lret
adc
popa
adc
and
fcmovu
sar
add
insl
and
mov
dec
in
into
inc
cs
lods
add
cmp
rcll
popl
dec
mov
pop
jmp
xchg
xchg
lods
jmp
adcl
aam
les
ret
mov
daa
add
mov
ss
pop
xor
repz
insb
lcall
or
lea
jmp
sti
mov
lods
in
test
push
jl
xchg
loope
iret
mov
ja
jbe
jmp
inc
enter
pop
sub
adc
dec
int3
push
jl
sbb
arpl
mov
into
add
cmp
cltd
xor
insb
loope
fwait
jp
xchg
mov
stc
cmp
push
in
pop
fwait
outsb
into
in
cmpsl
mov
pushf
mov
xor
in
or
js
add
jns
out
out
mov
dec
mov
pusha
popf
cmpsl
cltd
push
std
pop
sti
add
dec
cmpsb
pop
out
dec
sbb
pop
xchg
sahf
add
imul
daa
jecxz
scas
adc
hlt
sbb
cmp
cmc
rorb
xchg
lea
fiaddl
mov
xor
push
sub
jp
lods
jnp
ljmp
or
sbb
fcomps
or
popa
hlt
adc
scas
mov
iret
xchg
sub
sub
rcrl
decb
cmovge
push
call
stos
sahf
or
dec
push
or
stos
js
insb
push
jae
fildll
jnp
jecxz
mov
inc
hlt
clc
cld
dec
enter
lea
mov
sub
sbb
cmp
pmulhuw
sub
sub
and
int3
jb
repz
test
push
push
mov
js
push
rcrl
data16
ljmp
mov
inc
fwait
data16
test
push
movb
fsubr
jecxz
stc
popf
mov
push
xor
movsb
js
or
pusha
jge
insl
push
fsubr
fdivrl
add
sub
sub
xor
sub
cmpsb
pop
pop
and
adc
and
and
push
imul
lcall
mov
mov
subb
xchg
imul
mov
pop
xchg
sub
and
mov
ja
or
push
push
add
jae
and
push
cmpb
rcrb
jl
inc
dec
call
cmp
neg
add
jns
rcr
mov
jle
jmp
xor
outsb
pusha
std
mov
scas
loop
loope
movsb
inc
inc
push
mov
mulb
add
jg
decb
mov
sbb
cltd
inc
inc
adc
daa
bound
lahf
std
pop
dec
sub
aas
pop
es
fdivrs
dec
sti
sti
addr16
xchg
and
aas
les
push
cld
int
test
pop
test
jle
xlat
clc
cs
push
ss
cmp
dec
ljmp
pop
inc
bound
inc
lret
push
xchg
xor
outsl
ret
sub
jle
xchg
sub
mov
jl
jg
jo
mov
add
fildll
push
mov
sub
jnp
inc
mov
and
hlt
xor
push
into
jbe
adc
pop
lds
in
mov
repnz
shl
xor
jle
and
pop
insl
mov
xchg
daa
pop
test
jge
push
and
cwtl
lock
mov
popa
mov
rorb
or
scas
fisttpll
mov
inc
jmp
in
mov
daa
mov
loope
fs
sub
shlb
das
inc
xchg
jl
scas
scas
dec
shld
push
repnz
rcll
mov
fimull
mov
test
test
xor
add
mov
outsb
testl
dec
pop
mov
hlt
stc
mov
jmp
shrl
pop
shlb
inc
popa
xchg
cmp
xor
xchg
jmp
lret
mov
filds
cmp
movsb
push
jae
jmp
scas
rcrl
pop
sub
hlt
mov
mov
and
or
fwait
movsb
mov
inc
mov
push
lret
or
filds
aam
or
adc
mov
sar
and
pop
lahf
repz
lods
popa
mov
cmpl
addb
and
iret
clc
jecxz
push
fs
or
pop
movsl
and
bound
push
push
fbld
jno
jnp
mov
pop
fisttpll
mov
xchg
mov
cmp
ret
cmpsb
jae
cmp
and
adc
rcrl
pusha
shrb
sar
pop
mov
pop
mulb
pushf
pop
xor
inc
xchg
mov
mov
cmp
cmpsb
jg
movsb
sbb
mov
jb
pop
push
iret
mov
outsb
fildl
inc
sbb
xchg
or
lds
xor
and
adc
fwait
sarl
mov
out
idiv
pop
in
shlb
ret
int3
jo
adc
inc
jae
js
sub
stos
cmp
divl
lds
in
lock
xchg
jae
rol
pop
jp
pop
scas
loopne
loope
jmp
xchg
adc
cltd
jae
adcl
inc
push
jo
push
push
sub
test
stc
cmpl
les
jne
das
fs
test
daa
add
xor
fld
iret
fistpl
into
dec
je
push
sbb
xchg
hlt
into
mov
pop
push
and
pop
sub
adc
idiv
mov
lock
dec
cmc
incl
lret
cmpsb
fcoml
push
mov
cltd
popf
mov
xchg
shlb
lock
mov
jp
mov
scas
mov
mov
mov
pop
dec
data16
push
and
loop
lods
daa
mov
in
movsl
push
adcb
lcall
xor
inc
pop
mov
pushf
loop
sbb
imul
xlat
inc
mov
lods
lods
dec
adc
les
mov
cmc
int3
pop
xor
jmp
scas
lods
cmovl
sub
jle
or
repz
mov
repz
dec
cmpsb
lret
lods
fwait
dec
in
jne
mov
sbb
nop
mov
outsl
or
lahf
popf
int3
rcl
lret
out
movb
pop
inc
pop
inc
nop
ds
rorb
mov
outsl
fsubrs
arpl
pop
mov
in
and
xchg
mov
in
or
sub
lods
xchg
in
out
sbb
jmp
push
js
add
dec
enter
je
rcll
sbb
stos
xor
call
mov
mov
leave
fisttps
loope
fucomip
push
rcll
stos
int
sahf
je
es
in
mov
loope
xor
push
fisubrl
ret
pop
sti
and
ds
push
pop
iret
in
add
sub
pop
or
cs
jle
mov
cmp
movl
pop
jo
adc
add
fidivl
dec
lds
xor
xchg
mov
or
lods
mov
mov
jecxz
lret
push
or
xor
ret
or
push
adcl
pop
jmp
pop
mov
popf
xchg
dec
fwait
pop
gs
scas
in
and
jecxz
sbbb
lret
jae
mov
adc
mov
xchg
mov
rorl
jae
loope
out
or
iret
add
dec
push
push
lret
pop
cmp
sub
mov
addl
es
adcb
pop
movsb
shll
jno
adc
jo
cmp
ds
inc
pop
dec
movsl
lret
mov
pop
nop
jae
repnz
dec
xlat
sbb
int3
add
pushf
inc
sbb
andb
ret
loop
inc
sbb
movl
mov
push
mov
jecxz
xchg
mov
xlat
ss
inc
mov
ret
cmc
sub
cmp
push
loop
sbb
inc
ret
and
cmp
call
mov
xor
lea
lock
push
fs
sub
mov
test
mov
push
mov
lret
cmp
inc
in
inc
int3
cmc
sub
dec
jbe
clc
aad
stos
sarl
xchg
orb
and
mov
out
pop
insl
cmc
js
sbb
mov
andl
jne
adc
push
cltd
adc
fdivr
add
mov
lret
enter
test
fidivs
add
in
das
sbb
cmp
jb
repz
and
in
sti
insb
add
mov
push
lods
mov
ds
mov
jo
inc
xchg
fisubrl
insb
xlat
pop
movsl
push
mov
sbb
mov
lods
sub
pop
insl
mov
push
fmull
or
aas
lds
inc
mov
es
arpl
loope
or
jmp
ficoms
mov
mul
aaa
insb
mov
and
push
scas
sub
mov
nop
jg
dec
scas
and
insb
rcll
sbb
and
push
lods
js
fsubrs
leave
mov
lret
test
mov
xchg
pop
mov
push
add
xor
sbb
push
inc
xchg
jnp
repz
add
dec
mov
push
sbb
xchg
and
push
pusha
loopne
sbbb
jbe
stos
ret
imulb
sbb
orb
rcll
add
or
dec
je
jp
pusha
xor
mov
mov
repz
pop
adc
mov
cwtl
cmc
insb
lods
test
jnp
outsl
jle
sbb
icebp
hlt
lods
jge
and
mov
push
ficomps
pop
call
fdivs
sbb
lret
into
test
mov
icebp
imul
mov
repz
push
xchg
pop
mov
adc
jge
fisttpll
and
jae
in
dec
sub
mov
lods
roll
cmp
jb
or
cmpsl
fldl
cs
enter
out
ljmp
rorb
ret
movzwl
imul
mov
mov
push
insb
ret
lcall
lret
cmp
outsl
or
fistl
cwtl
mov
outsb
fmull
fisttps
adc
sbb
aam
and
aam
arpl
ja
jmp
adc
pop
inc
push
xchg
test
push
pop
lock
iret
enter
cld
push
inc
leave
pop
xchg
push
hlt
push
or
mov
jecxz
mov
lods
and
in
jp
movsl
into
das
cmp
cmpsb
sub
in
mov
fsubl
loopne
rcll
mov
lock
xor
daa
xchg
add
call
and
hlt
lds
mov
mov
stos
pop
push
lahf
mov
popf
lret
shll
gs
mov
subl
xor
js
mov
sbb
lods
call
jns
seta
xor
cmpsl
lods
mov
mov
insl
add
stos
daa
mov
aam
mov
cs
mov
lock
gs
cmp
or
pop
enter
and
adc
jle
xchg
pop
dec
inc
add
sbb
mov
fisubl
and
mov
and
aaa
dec
pop
cmpsl
push
test
xchg
loope
ljmp
push
rcll
into
sbb
pop
rcrl
shlb
xchg
sub
sub
cmp
mov
or
test
mov
push
repnz
sub
ret
into
mov
cmpsb
jnp
mov
roll
sub
movsb
loope
or
xchg
leave
les
sbb
adcl
aas
gs
test
pop
sahf
es
shr
int3
jg
leave
das
mov
pusha
sub
sahf
dec
dec
in
test
fcoms
lahf
int
je
out
leave
or
add
popa
pop
mov
mov
fldcw
pop
lcall
inc
or
mov
push
and
testb
sar
popf
scas
jle
es
jno
sub
movsb
fprem1
shlb
ffree
dec
mov
or
xchg
int
pop
rcrl
or
test
cmp
mov
mov
jge
frstor
fcomps
shlb
mov
setp
daa
mov
mov
out
ss
push
int3
lock
xchg
xorb
lcall
out
lahf
cmp
sbb
sbb
push
push
jge
arpl
jl
push
pop
insl
jmp
fisttpll
add
lahf
sub
movsb
pop
rcrl
insl
pop
add
pop
xchg
jl
or
test
mov
enter
imul
inc
mov
idivl
cld
in
aaa
mov
icebp
push
mov
popa
out
bnd
adc
push
push
gs
sti
or
ret
rclb
stos
pop
int
cmpsb
rcrb
data16
inc
fimull
mov
sbb
or
inc
std
int
in
mov
jl
adc
cmp
out
push
pushf
jmp
xor
int3
or
out
hlt
jl
jae
and
aas
inc
lock
pop
xchg
enter
and
fscale
mov
pusha
cmpsl
pop
aad
js
jp
paddb
aad
faddp
sbb
mov
in
mov
and
xor
cmp
loopne
xor
jno
push
mov
inc
arpl
outsb
or
arpl
push
jns
push
arpl
add
imul
push
daa
mov
rclb
dec
cmpsb
iret
shlb
push
lahf
ja
aad
sub
imul
xor
fcoms
test
and
pop
bndstx
lahf
ret
daa
jno
adc
int
and
push
dec
rclb
stc
or
loopne
xor
cmp
jge
cmpsl
movsb
sub
adcl
inc
xlat
or
cwtl
js
sbb
popf
leave
sbb
lea
jb
sub
aam
adc
sbb
inc
adc
xchg
or
push
popa
or
mov
cmp
mov
push
pop
cmp
dec
jno
outsb
scas
in
xchg
js
stos
js
dec
leave
xor
dec
test
mov
movsl
repz
xchg
test
repnz
or
ret
pop
sub
shr
ret
aaa
pusha
ret
add
aad
and
sbb
cwtl
dec
sub
mov
dec
cmp
std
inc
mov
incb
mov
xor
out
fcomps
pop
js
pop
shl
shl
pushf
pop
sahf
sarb
mov
aas
into
loopne
jl
fsubr
sub
cmp
jl
cmpsl
jp
xchg
mov
sbb
and
call
cmc
adc
pop
lret
xchg
add
xchg
mov
out
aad
sub
inc
mov
or
lods
sbb
xchg
xor
adc
lods
ja
and
adc
pop
jg
or
cltd
xor
xor
scas
sbb
sti
lret
test
int3
pusha
adc
dec
xchg
insb
pop
adc
cmp
fucomip
mov
and
mov
mov
rcrb
test
xchg
stc
into
popf
aam
in
repnz
iret
test
cmp
dec
jbe
mov
pop
jb
int3
fldcw
xor
pop
popf
adc
dec
in
jbe
jl
loopne
jmp
aam
stc
xor
iret
pop
cli
repnz
push
fidivrs
out
dec
sub
add
pop
ds
lret
xor
sub
cltd
push
fidivrl
pop
mov
ficoml
filds
mov
add
cltd
jno
jp
and
fstpt
pop
lods
and
inc
mov
ja
cmp
and
cld
and
fwait
shlb
mov
andb
cmp
test
enter
xchg
pop
ja
imul
stc
lds
sbb
xchg
add
push
ljmp
pop
lds
pop
push
lods
pushf
js,pn
or
loop
xchg
cmp
int3
pop
or
cmp
repnz
pop
icebp
dec
cmp
jne
dec
adc
jae
xchg
add
xor
faddl
repz
jbe
add
loopne
dec
je
lcall
sbb
lret
pop
xchg
testb
ret
and
shll
jg,pt
xchg
mov
js
or
or
or
pop
adc
sub
scas
jns
mov
stos
lods
dec
jne
dec
mov
mov
sahf
mov
mov
and
dec
cmp
push
in
mov
bnd
out
imul
mov
orb
and
cmpsl
out
bts
jp
mov
int3
lret
je
push
data16
cli
pop
add
loop
mov
int
push
in
xlat
sub
arpl
ret
or
push
fucomi
loopne
aaa
js
push
pop
mov
pop
cmp
test
subb
mov
sahf
cmovns
jbe
fwait
xchg
fadds
or
add
push
add
neg
sbb
clc
fdivrl
adc
dec
negb
sti
pop
add
push
dec
fs
hlt
fs
jb
sub
adc
stos
adc
dec
dec
inc
and
icebp
cs
push
leave
or
fdivl
pusha
sbb
popf
cmp
popl
jmp
repnz
ss
xchg
jnp
aam
shrl
aam
sbb
fwait
test
push
sbb
leave
adc
mov
push
cli
insb
xchg
rcl
sbb
ficoms
rorb
rol
jbe
jae
dec
mov
adcl
sub
mov
jnp
les
jl
clc
sbb
adc
add
pop
jge
or
xchg
jecxz
scas
scas
cmp
mov
sbb
loop
xchg
call
fldt
inc
jle
int
dec
arpl
rcl
pop
xchg
jo
pusha
cli
jae
inc
inc
xchg
insl
push
testl
int3
inc
mov
push
ror
mov
mov
mov
or
or
adc
xor
or
insl
ret
sub
xchg
and
enter
push
add
dec
stos
fcmove
movsb
jle
mull
inc
int
sub
mul
pop
mov
cmc
lock
outsl
push
out
jns
out
push
scas
push
andl
mov
test
jbe
sub
call
jns
fs
pop
and
push
imul
jle
les
subb
arpl
jle
inc
cmpsb
cmp
dec
pop
pusha
decl
test
ljmp
pop
gs
dec
cmp
lods
push
loopne
and
outsl
ret
dec
xchg
scas
inc
insl
call
mov
ja
fistpll
xor
push
and
sub
add
scas
pop
movsb
addr16
jns
in
mov
dec
xor
ss
push
and
testl
adc
cltd
js
mov
dec
ljmp
lret
roll
push
push
setns
mov
add
inc
sbb
rclb
or
xor
cld
adc
mov
pop
jg
mov
inc
ljmp
bound
pusha
insb
testl
mov
xchg
scas
js
adc
popf
mov
cmc
in
je
adcb
pop
or
mov
jno
and
sbb
push
adc
test
push
xchg
in
sub
lahf
fwait
je
jae
mov
sbb
pop
push
push
jle
add
pop
mov
stos
shrl
loop
ljmp
lret
push
mov
xchg
inc
fnstenv
inc
sub
stos
push
push
js
cltd
pop
addr16
fisttpl
jne
js
mov
cmp
sbb
and
push
jne
int3
xchg
insb
mov
fmuls
js
insl
xchg
sbb
cmpsl
and
shr
and
dec
jo
xor
jb
lcall
sub
imul
test
fiaddl
scas
mov
or
daa
mov
sub
mov
fxch
jge
inc
jge
push
test
rcr
and
imul
test
stos
sbb
sbb
jno
sbb
push
xchg
int
popa
jae
testb
inc
fsts
enter
add
push
hlt
aad
add
push
dec
xor
or
aam
data16
xchg
pushf
cmpsb
pop
jle
xor
add
fldl
mov
gs
es
push
mov
mov
push
pusha
jne
dec
adc
outsl
pushl
xor
repnz
out
call
lahf
dec
leave
je
jne
xor
insl
mov
adc
sub
into
mov
push
lods
cmpsb
in
dec
in
jne
jecxz
pop
cmp
out
push
xor
sarl
dec
jmp
cmp
ffreep
mov
jle
adc
pop
stos
cs
push
in
xchg
lods
push
sub
ja
pop
in
stc
aas
scas
lahf
pop
lahf
movsb
add
aam
call
or
into
je
adc
leave
add
imul
test
repz
mov
cmp
xchg
loope
mov
icebp
cwtl
lret
ret
and
jg
movq
sbb
add
ret
inc
mov
sbb
mov
xchg
or
cwtl
dec
enter
je
popa
sub
sbbl
lea
into
xlat
js
mov
lcall
pop
fidivl
in
pop
pusha
push
iret
and
xor
out
js
ret
jp
or
pop
imul
add
mov
lods
sub
push
sti
mov
call
xchg
push
xor
out
cmpsb
fwait
sbb
push
stc
sub
movsl
jp
jne,pt
pop
jb
mov
fistl
push
nop
minps
test
das
mov
ret
movl
push
jae
push
in
pop
icebp
lret
xor
out
pop
or
adc
lret
ss
xlat
jno
outsl
nop
sbb
xor
jge
js
ficompl
xchg
ds
adc
in
es
dec
idivb
fnstcw
mov
bound
in
adc
scas
push
fdivrs
stc
hlt
sub
fisubs
movsb
nop
pcmpeqb
or
ret
lock
test
and
push
insl
loope
fs
mov
jns
call
jecxz
mov
jo
negb
daa
xchg
ljmp
jb
sub
repz
scas
les
pop
mov
inc
add
incl
mov
jne
add
jae
pop
and
sbb
mov
shrl
or
out
inc
out
frstor
and
jecxz
ds
cmp
or
pop
insb
imull
sbb
jo
cwtl
inc
notb
sub
sti
sti
cmp
xchg
lahf
pop
movsb
adc
mov
mov
bound
clc
fmuls
mov
jecxz
outsb
xchg
mov
mov
shl
loope
sub
sub
rcrb
aad
faddp
mov
cld
stos
es
sbbl
sbb
lret
dec
in
sub
jmp
pop
test
push
and
sti
pop
dec
add
test
in
rcll
aaa
iret
lret
ret
mov
cltd
iret
leave
stc
adc
stc
je
mov
mul
scas
movsb
fwait
fcompl
adcl
sbb
xlat
in
mov
dec
les
adc
xor
push
cmpsb
mov
xchg
aam
and
scas
imul
es
ss
cld
pop
fwait
mov
iret
out
shlb
jmp
mov
rorb
aam
out
cmc
xchg
dec
je
sbb
add
push
stos
call
jmp
mov
aaa
fisubrl
mov
insl
ret
mov
jne
mov
mov
icebp
push
pop
add
out
rcrl
mov
icebp
jl
repz
ja
rorb
sbb
mov
adc
scas
or
clc
in
or
popf
jmp
xor
rep
stos
xor
in
cmpsl
mov
loop
xchg
arpl
ret
add
test
std
cmpsb
xor
lods
dec
jns
push
loop
xlat
inc
adc
rclb
arpl
dec
sbb
adcb
stos
ret
inc
pusha
fsubrl
cmp
adc
bound
push
movsb
mov
mov
stos
test
xor
call
data16
pop
inc
pop
stc
xor
xor
pop
xchg
fs
arpl
push
jnp
pushf
mov
shl
enter
xchg
je
cmpsl
mov
jno
test
cmp
mov
add
adc
add
jo
test
mov
mov
push
lret
iret
and
aam
ljmp
pushaw
std
movsl
mov
imul
ss
or
add
in
bound
cmp
ret
lret
ljmp
add
icebp
sbb
xchg
cmp
lods
dec
mov
jmp
xchg
mov
push
lock
mulb
inc
xchg
mov
push
mov
shrb
dec
dec
xor
out
popa
mov
into
cmp
icebp
addr16
xor
jge
mov
push
inc
or
dec
jp
mov
aaa
jmp
xchg
in
mov
pop
fxtract
pop
dec
jge
mov
cli
pop
mov
jmp
and
jne
mov
in
mov
lea
fwait
push
dec
push
loope
stos
cmp
sub
test
xchg
fiaddl
add
out
sbb
cmpsb
sbb
mov
push
cmp
adc
adc
es
ds
cmp
dec
jae
int3
enter
jnp
xchg
aaa
adc
adc
in
rclb
pop
mov
dec
and
mov
mov
addr16
add
mov
and
jmp
ljmp
pop
ljmp
fstpt
test
shll
test
dec
mov
jnp
mov
push
mov
ret
mov
pop
mov
or
inc
push
sub
stos
push
shrb
stos
and
out
in
jb
mov
push
lcall
rcll
xchg
mov
xorb
in
jae
push
cmp
shrb
btc
cmpsb
or
mov
addr16
loopne
add
cmp
or
mov
gs
mov
cmp
sarl
ret
xor
stos
and
cmp
rcr
aaa
add
mov
in
sub
add
fnstcw
loop
and
js
out
push
cmp
push
cmp
xlat
adc
mov
jecxz
inc
cmpsl
les
jg
mov
xchg
mov
nop
filds
into
jg
push
syscall
ret
add
cmp
mov
or
xor
jge
and
mov
adc
rolb
addb
push
mov
movsl
and
xor
dec
fld
in
and
mov
outsl
pop
add
lcall
pop
xchg
fsts
in
mov
into
push
mov
and
scas
mov
lea
aaa
push
mov
jecxz
inc
cmp
jl
pop
shll
ret
add
cmpsl
and
mov
and
xchg
xchg
fdivs
jmp
adc
jno
loope
movsb
cmpsl
push
push
rol
rcrl
sub
sbb
jmp
pop
andl
mov
bound
in
cmpsb
aas
cs
stos
and
jg
clc
in
pop
loop
mov
push
push
movsb
in
jno
xor
pop
stos
repnz
rcrb
push
lcall
mov
gs
cs
xor
xchg
dec
cmp
cbtw
push
movb
loope
inc
pop
aam
ds
add
fsub
call
jno
pusha
sbb
and
dec
mov
mov
mov
ljmp
in
pop
shrb
mov
inc
std
fdivr
xchg
mov
data16
ret
loope
mov
and
sub
xchg
xchg
pop
icebp
or
xor
shrb
cmp
or
pusha
push
or
pop
mov
es
inc
sahf
test
add
mov
mov
xor
aam
cltd
xchg
int
stos
xchg
mov
fdivrl
jno
insl
adc
ljmp
mov
mov
pushf
cld
lahf
outsl
cltd
cmp
mov
pop
orl
inc
mov
adc
jne
movsb
jl
fcompl
shlb
adc
data16
sub
gs
sbb
adc
mov
xchg
push
stos
stos
dec
pushf
and
and
inc
jecxz
xor
and
add
cmp
rcll
repnz
jo
sub
push
dec
fadds
xor
int3
mov
pop
mov
jbe
addr16
lcall
es
roll
cmp
mov
mov
std
sub
mov
clc
jecxz
dec
out
rcll
mov
cmp
add
mov
jmp
roll
imul
jb
or
fcmovnbe
xchg
push
and
pop
and
inc
push
enter
clc
dec
int3
fmull
mov
lock
mov
inc
xchg
cmc
adc
lds
jno
fs
push
and
pop
or
and
push
mov
pop
inc
pusha
test
loopne,pn
scas
xchg
insb
out
cltd
fisubl
cmp
lods
dec
addr16
loop
fsubs
xor
jmp
and
pop
stos
fldl
out
pop
addl
dec
add
cmpb
mov
inc
xor
shrb
js
xor
icebp
add
popf
loopne
cmp
imul
add
movsl
jl
xchg
enter
jmp
push
or
dec
inc
data16
lods
mov
jle
xlat
scas
iret
cmp
je
repz
call
pop
rcrb
int
jle
jb
lcall
std
hlt
inc
pop
xchg
cmpsb
repz
add
dec
jb
xchg
push
lods
incb
mov
movsb
push
loope
or
aad
mov
jae
jne
test
xchg
popf
xchg
gs
inc
mov
repz
aad
sbb
push
insb
into
sub
out
loope
mov
lds
mov
inc
pop
cmp
inc
lds
xchg
dec
adc
and
jo
insl
in
imul
jg
ja
dec
adc
ret
inc
push
pop
inc
mov
popa
add
scas
stos
imul
mov
dec
sbb
fcompl
popf
or
adc
push
lds
or
pop
ret
int
mov
jne
daa
jle
das
jae
xchg
popf
fistps
jg
mov
add
jecxz
lds
adc
xchg
test
push
jnp
cmp
test
sub
pushf
xchg
lods
sub
xchg
jmp
aas
mov
mov
mov
testb
xchg
aam
pop
jmp
fsts
inc
xor
pop
sub
fadds
pop
pop
mov
std
pop
arpl
scas
insb
or
arpl
int3
sbb
inc
loope
mov
and
pop
es
sub
rcrl
fildl
into
jae
xor
pop
imul
mov
pop
movsb
rolb
xor
rcl
adc
cltd
bound
inc
xchg
movsl
lods
ror
sahf
ja
cmpsb
sub
lahf
dec
loope
addl
in
push
jno
xchg
and
push
imul
mov
dec
dec
inc
mov
and
sbbl
push
inc
cs
loope
clc
sub
lret
pop
cwtl
lahf
or
mov
test
pop
jb
mov
fstp
stc
jne
adc
rclb
mov
hlt
mov
aam
ret
leave
shr
leave
out
jbe
aad
lcall
lds
sahf
mov
push
out
xchg
mov
jae
aas
stc
push
setns
test
add
out
cltd
xchg
add
mov
pop
lahf
repz
push
pop
sub
push
cmc
stos
cmc
xchg
icebp
mov
shlb
pop
push
fs
leave
push
or
push
jmp
pop
xor
lret
sarb
jmp
icebp
or
mov
ljmp
das
arpl
ja
push
dec
xor
jge
xchg
and
dec
lret
dec
and
push
push
push
inc
xor
fidivrs
cmp
pushf
jmp
or
cmp
cmp
jle
inc
cld
mov
shll
sbb
sub
jbe
dec
stc
nop
add
scas
dec
jo
mov
clc
pop
pop
dec
inc
add
push
shrl
lcall
dec
jb
mov
fidivrs
inc
test
imul
das
mov
ficoms
aaa
cmpsl
mov
mov
sub
fildll
lods
mov
mov
nop
mov
xchg
cmp
fcomip
call
cmovne
xchg
inc
jl
jbe
loopne
mov
loopne
fwait
sbb
cmp
popf
arpl
cld
or
or
jb
inc
in
je
jecxz
ds
xor
clc
cs
dec
ret
outsl
xchg
pushf
and
lcall
add
sbbl
pop
xchg
out
xor
sahf
idivl
aam
push
clc
loopne
push
scas
movsb
push
xchg
clc
insl
pop
add
test
and
mov
add
xchg
mov
scas
lret
push
imul
cli
jg
mov
je
push
shll
dec
add
sub
sbb
jl
loop
sbb
mov
inc
icebp
push
test
rorb
xor
jae
add
call
push
mov
icebp
cmc
ret
pop
rcrl
pop
pusha
push
test
outsb
pop
pop
cmp
inc
mov
pop
mov
push
mov
mov
adc
mov
icebp
xchg
or
and
dec
sbb
stc
fldenv
in
and
push
scas
or
pop
xchg
daa
xor
cmp
and
std
jno,pn
add
loope
call
sbb
std
out
inc
rolb
bound
scas
sub
inc
ds
aas
ret
shrb
or
stos
sbb
sub
or
fstl
enter
es
stos
xchg
aam
jne
fnstenv
hlt
mov
scas
mov
mov
xchg
clc
push
out
hlt
xor
pop
jbe
popa
daa
addr16
int
mov
push
andl
in
sub
enter
mov
or
push
mov
filds
mov
sub
cmp
aaa
negl
jnp
and
fs
cmp
movsb
sub
mov
xor
ds
xchg
sbb
shrd
pop
xor
mov
sarl
cmp
sub
sar
push
and
mov
adc
cmp
sub
sbb
pop
lds
cmpsb
les
aaa
out
add
sbb
lock
push
insl
dec
lods
xor
out
test
adc
jns
mov
pop
jno
jecxz
dec
popf
daa
jg
mov
aad
gs
pop
lods
data16
cltd
dec
pop
std
and
sbb
pop
andb
rclb
cwtl
icebp
lock
sbb
movsl
inc
lea
movsb
repz
mov
movsl
mov
jbe
pop
out
in
ss
test
adc
dec
insl
pop
dec
test
ss
jo
adcb
ljmp
movsb
fs
xchg
js
or
stos
jmp
enter
ret
push
rorl
out
shlb
inc
js
lahf
loop
cmp
xor
mov
mov
mov
jns
cli
out
fs
invd
test
mov
jecxz
jbe
mov
jo
pop
mov
cmp
mov
dec
sub
aam
mov
rorb
iret
dec
pusha
mov
fs
push
xchg
sahf
repz
inc
addb
jns
cmp
dec
pop
sti
mov
and
mov
shr
std
pop
loop
into
jo
test
out
aaa
loope
push
iret
xor
ret
mov
push
movsb
push
sbb
mov
push
mov
mov
push
test
stos
shl
jae
and
cmp
push
ret
pop
mov
fadds
mov
mov
sahf
into
and
imul
cmp
jecxz
inc
sbb
jle
addr16
jo
adc
mov
movsb
lret
inc
xchg
imul
jmp
mov
lcall
mov
repz
and
stc
shl
and
lcall
aaa
sahf
fwait
pushf
insb
inc
clc
nop
cmp
arpl
mov
jp
sbb
in
inc
mov
push
icebp
fiaddl
jbe
mov
mov
pushf
jp
mov
sarl
cmpsb
jmp
lock
clc
movsb
cmpsb
lcall
pop
bound
test
aaa
xor
xchg
ficoms
add
dec
xchg
sub
fildl
cmp
dec
fstl
pop
fdivrs
xor
mul
or
sbb
or
pusha
mov
sbb
clc
push
call
loop
mov
mov
repz
add
pop
cwtl
out
sub
shl
in
or
enter
or
js
inc
jg
sbb
mov
lcall
pop
out
cmp
add
cmpsl
ds
addps
mov
pop
jns
stc
jmp
mov
cld
in
adc
jle
call
addr16
std
movsb
aaa
push
arpl
adc
das
cmc
xchg
fstpt
mov
test
into
cmp
and
insb
movsl
out
rorb
out
daa
mov
shl
out
stc
jne
xchg
mov
inc
fsubr
adc
gs
mov
aaa
repz
aaa
inc
inc
rorl
mov
ficompl
test
rcrb
lods
sbb
add
je
inc
sub
sub
sbbb
mov
imull
leave
inc
adc
pop
rcrl
mov
mov
jo
mov
mov
mov
bound
stos
push
push
test
xchg
push
dec
mov
push
repnz
push
mov
adc
or
adc
and
or
jmp
aad
mov
and
in
add
sahf
xor
movsl
pop
fidivrs
xchg
pop
ret
into
adc
loopne
sbb
push
inc
fidivs
movsb
mov
int
xchg
mov
fldt
jnp
add
mov
push
repz
push
adc
test
lahf
pop
dec
mov
roll
fdivl
jecxz
mov
add
cmp
sub
mov
cmp
push
pop
mov
cmp
and
mov
add
aad
and
sub
fiadds
pusha
imull
jbe
cmpb
and
test
add
fsubrs
ss
fucomip
gs
fdivp
dec
add
test
ret
rclb
pushf
out
test
test
mov
or
les
mov
pop
lret
sub
leave
pop
jl
clc
inc
sbb
faddl
sub
inc
hlt
ret
ljmp
daa
jle
jnp
fistps
test
lret
dec
cmp
fbstp
iret
out
dec
add
jg
pop
jp
js
or
enter
cmp
push
outsl
push
mov
mov
fstpt
adc
pop
movsb
iret
bound
jge
xor
pop
roll
or
xorl
shll
push
fisttpll
test
xor
inc
ficoml
push
inc
push
loopne
cmp
pop
xchg
adc
cmp
test
push
xchg
into
cld
xor
and
test
sbbb
sub
fldl
xchg
rol
xor
inc
dec
adc
lea
inc
imul
rcrb
add
mov
shrl
sbb
fs
mov
in
cmp
xor
pop
adc
dec
or
loope
sahf
pop
lods
cs
jae
xlat
ret
mov
mov
adc
mov
pop
mov
gs
pusha
aam
or
push
mov
dec
loop
mov
mov
push
out
lahf
sbb
or
sbb
dec
and
or
test
loope
jmp
inc
test
mov
xchg
xor
push
lahf
sti
ret
inc
popf
sbb
mov
negb
aad
xchg
dec
push
pop
sti
in
lds
mov
pusha
xchg
call
jle
mov
and
clc
adc
push
int
pop
mov
je
xchg
jp
pop
and
mov
xchg
mov
pop
adc
mov
fisubl
inc
pop
xor
jmp
xchg
test
xchg
shl
push
fstps
cmp
add
add
pop
or
push
lret
jp
and
test
dec
addr16
imul
push
or
jae
arpl
add
adc
cmpsl
lea
gs
inc
repz
pop
xor
stos
in
mov
ja
loop
push
inc
mov
mov
js
mov
arpl
int3
lds
lods
dec
xor
mov
cli
mov
out
cmp
or
xchg
mov
xchg
sahf
and
out
jecxz
insb
daa
and
fdivrs
inc
iret
ds
adc
fisubs
mov
sub
sbb
mov
adc
call
xor
movsb
cmp
ljmp
jp
mov
mov
jae
cmp
push
pop
nop
and
xlat
insb
mov
adc
xor
or
cmp
vpcmpgtw
push
cmp
add
fidivl
fs
jmp
popf
and
pop
das
sub
and
xchg
mov
sub
repnz
xor
cmp
neg
cmpsl
cmp
mov
xchg
shl
pop
aaa
sbb
sub
mov
jmp
and
cmpsl
out
inc
jne
or
mov
iret
sarl
mov
push
mov
xchg
adc
add
adc
cmp
ja
ljmp
xchg
data16
add
mov
sbb
pop
inc
dec
xor
jns
or
dec
loopne
mov
mov
xchg
rcl
xchg
mov
pop
jo
andl
movsl
inc
mov
movsb
sbb
sbb
sub
push
leave
dec
cld
inc
xchg
push
hlt
je
jmp
stc
pop
sahf
push
jnp
cmp
jns
out
insl
js
inc
out
fsubrp
sbb
imul
in
inc
fwait
enter
outsb
loope
and
loop
cmpsl
and
test
mov
aaa
pop
xchg
mov
ljmp
sub
or
cmc
adc
aam
lret
xor
lea
xor
fstp
hlt
cmp
and
xor
fldcw
enter
adc
dec
cli
pusha
arpl
cmc
scas
aam
xlat
and
mov
dec
neg
push
ljmp
dec
imul
enter
mov
cmp
lcall
push
sub
dec
adc
xchg
inc
scas
cmp
repz
arpl
pop
push
jbe
cmp
dec
sub
js
movsl
stos
xor
jnp
pop
div
incl
cs
pop
sub
imul
or
add
shl
and
jle
xor
xchg
adc
ljmp
rorl
aaa
cmpsl
inc
scas
push
adc
dec
pushf
dec
loope
popa
dec
rcr
sub
sbb
cli
xchg
push
gs
aad
gs
rclb
xlat
push
sub
xchg
ret
icebp
mov
sahf
inc
or
fnsave
jecxz
jne
sub
add
mov
adc
out
lea
pop
pop
mov
mov
pop
loopne
pop
adcb
xor
inc
ljmp
xor
cmc
mov
mov
mov
xchg
add
stos
mov
data16
jae
sbb
hlt
xor
ficoml
sub
cmpsb
cmp
outsb
push
sub
test
les
xchg
pop
jns
sbb
cmc
test
cwtl
lods
pop
roll
pause
cmp
imul
jge
jne
fidivs
adc
cld
outsb
and
es
jo
out
test
adc
or
jnp
out
mov
fstpt
sar
jl
test
jne
mov
push
jecxz
push
mov
inc
sbbb
jb
xor
imul
shlb
fisubs
aad
mov
rorb
popf
in
xor
je
sub
inc
test
gs
jge
cmp
in
push
xchg
std
inc
mov
enter
jnp
sbb
les
std
mov
mov
mov
lock
xchg
xor
enter
filds
aad
inc
jns
xchg
or
or
mov
pop
int
xchg
shrl
in
push
mov
ficompl
pop
and
push
mov
push
inc
fisttps
ret
jae
not
dec
xchg
mov
sbb
jecxz
lock
fists
enter
cmp
jbe
mov
jg
cmp
mov
lcall
sbb
sbb
push
rorb
jp
push
adc
stos
mov
popf
cmpsl
xlat
pop
enter
cmc
shll
xchg
xchg
fwait
cli
in
pop
add
pop
pop
cmp
jecxz
and
xlat
ret
fstp
loope
cmp
and
outsb
es
shl
push
clc
jne
or
xchg
and
xchg
add
fcoms
lea
mov
mov
lret
or
pop
lds
inc
sub
sbb
add
xchg
ja
in
clc
sbb
inc
dec
sub
jl
addr16
cmp
inc
fsts
add
int3
repz
sahf
jmp
add
fs
fisttps
mov
xor
cmp
xor
xchg
push
dec
jmp
mov
add
mov
sbb
dec
push
jl
lret
mov
jecxz
lods
shll
mov
lock
lret
movsb
rol
pop
fisubs
enter
lahf
mov
push
popf
shl
int
jnp
push
mov
jl
cmp
stos
pop
sti
sub
jae
mov
repnz
loope
push
pop
imul
add
bound
sbb
dec
and
fs
jl
jne
aaa
imul
pop
aas
cmp
jmp
pop
sub
nop
xor
sub
jns
das
jae
loopne
stos
jo
mov
ss
test
xchg
adc
vunpcklpd
and
xchg
add
mov
xchg
ja
mov
dec
fwait
adc
inc
repz
push
rcrl
cld
in
ret
cltd
cmp
add
sbb
jne
popa
push
jle
jnp
mov
xchg
cs
out
cmpsl
xor
mov
xor
out
push
rcrl
aas
jbe
adc
cmp
stos
adc
fldt
idiv
xchg
mov
xor
jo
mov
mov
stc
adc
in
mov
pushw
mov
mov
inc
ret
xlat
mov
and
cld
lret
xor
jbe
das
or
mov
or
mov
push
imul
mov
pop
shl
jg
add
fistps
inc
lahf
or
mov
push
dec
jecxz
int3
hlt
adc
mov
dec
rep
push
push
sbb
lcall
das
fucom
jbe
frstor
adc
js
pop
lock
jge
shll
mov
lods
dec
mov
jg
cli
movsb
and
fstps
mov
adc
push
mov
push
xor
clc
xchg
cmp
test
imul
pop
or
outsl
lods
mov
icebp
je
xchg
inc
int3
repnz
pop
push
and
mov
fisttpl
mov
mov
pusha
rolb
xchg
adc
jae
jbe
sub
gs
mov
mov
int
push
aad
adc
fidivrs
mov
pop
test
das
cmpsb
and
cmp
aad
xchg
mov
or
jecxz
sub
cli
pop
test
repnz
jle
jp
inc
shlb
mov
mov
mov
cs
cld
jbe
lds
xchg
sarl
pop
into
xor
das
daa
lods
or
fwait
or
jp
fdivrs
and
add
out
jmp
mov
mov
xor
icebp
in
mov
cmp
ret
dec
shll
addl
jne
push
mov
aam
popf
scas
stc
fdivl
jbe
inc
xchg
pop
mov
sahf
pop
out
ret
adc
jno
repz
push
stc
jecxz
jbe
imul
movsb
push
outsl
inc
arpl
adc
adc
or
divb
cmpsl
sub
jne
mov
pop
mov
lock
fs
mov
fsubrl
xchg
aam
add
jo
cmpsb
pop
fldcw
and
pop
fists
mov
clc
add
out
scas
in
mov
push
aas
negl
and
inc
add
data16
sbb
lcall
mov
and
xchg
mov
fcmovbe
xchg
mov
dec
imul
mov
push
orl
mov
or
inc
jecxz
mov
sbb
fsubrs
lahf
roll
aas
scas
mov
out
loop
mov
loope
adc
fs
add
or
inc
adc
pop
push
into
sbb
in
lret
nop
or
les
pop
je
add
jnp
loopne
jp
pop
xor
add
xlat
addb
xchg
loopne
xchg
ljmp
divb
push
scas
adc
ds
test
jl
inc
shlb
arpl
scas
or
xchg
cmp
aad
sahf
rolb
push
out
adc
jecxz
and
ja
bound
push
mov
adc
dec
negb
xchg
negl
cmp
pop
ja
push
pusha
push
out
lcall
and
add
mov
adc
mov
jo
popa
add
mov
repnz
movsb
movb
xchg
sti
stos
and
loope
into
or
sub
adc
leave
inc
lret
mov
add
pop
aam
sbb
add
inc
gs
movsb
popf
sbbb
lret
pop
scas
xor
inc
lods
inc
jb
pop
hlt
add
push
pushf
mov
or
push
sub
das
jbe
inc
mov
jecxz
xchg
xchg
mov
stos
repnz
imul
add
lods
push
shll
xor
movsb
outsb
notb
pop
jp
add
repz
jp
sbb
les
and
stc
addr16
mov
rcl
adc
test
dec
and
xor
xchg
and
dec
push
mov
in
mov
rcrb
push
adc
mov
sub
mov
fwait
fs
inc
adcb
ss
jae
or
jg
xlat
push
xchg
and
xchg
fcmovb
fistl
movsl
and
roll
mov
xchg
repnz
cli
xor
les
push
out
jo
int3
inc
mov
mov
inc
inc
lea
out
sbb
fs
cmp
cmpsl
bound
sbb
dec
fisttpll
lea
out
cmp
loop
xchg
xchg
mov
pop
stc
iret
mov
jns
fstpt
and
xor
lock
in
cmp
hlt
pushf
inc
int
sub
inc
push
cmp
incb
xor
jge
xchg
movsb
sub
cmp
pop
mov
xlat
fucom
or
cld
jge
or
push
mov
imul
fs
add
xchg
mov
outsl
ljmp
addr16
outsl
xor
aaa
sbb
lods
clc
or
xchg
mov
and
or
lret
push
and
ret
inc
push
scas
pop
xchg
adc
inc
mov
jnp
pop
popa
cwtl
jmp
and
xchg
ret
repnz
add
inc
push
insb
xor
test
fdivs
sub
xchg
pusha
imul
test
pop
hlt
stc
movsl
and
ret
xchg
jmp
jecxz
sub
and
or
sbb
jb
pop
clc
xlat
das
inc
inc
insb
ljmp
jae
mov
inc
cltd
xor
orl
in
stos
addr16
push
xlat
andb
mov
dec
inc
fistps
fimuls
lods
repz
movsb
je
icebp
cmpsb
mov
scas
aam
xor
jo
and
cwtl
push
lahf
mov
ret
rcll
adc
test
mov
add
mov
mov
cmp
mov
mov
sbb
xchg
int
inc
jnp
sbb
mov
mov
cmpsb
inc
inc
cs
shlb
repz
test
mov
mov
xor
inc
bound
aaa
filds
ds
mov
push
fdivs
cwtl
jo
mov
mov
cli
cmpxchg
popa
ja
in
adc
arpl
mov
fisttps
or
pop
xlat
cwtl
mov
push
das
jl
lds
mov
dec
stc
loop
adc
je
in
cltd
pusha
das
popa
jb
mov
push
mov
out
mov
mov
push
cmp
dec
stc
pushl
lods
pusha
aam
pop
xor
xchg
mov
mov
shrl
add
sbb
pop
sar
jl
and
add
push
stc
mov
arpl
ljmp
xlat
xorl
cmpsl
mov
mov
outsl
cltd
es
lcall
adc
lds
and
andb
and
xor
pop
mov
mov
mov
insb
jp
lock
sub
or
test
push
or
cmpsb
mov
mov
stc
add
adc
jo
pop
lahf
add
sbb
xor
sbb
leave
pop
lods
repz
adc
imul
add
repnz
cld
lcall
cltd
jg
sbb
insb
dec
lods
sbb
pop
xchg
sub
out
ds
jle
int3
hlt
xchg
push
js
mov
sbb
inc
cmp
mov
sarl
sbb
subps
push
into
popl
push
xor
or
ffreep
pop
faddl
push
mov
and
xchg
xchg
mov
repz
cmpsb
std
sub
sbb
idiv
dec
popa
dec
sub
dec
pusha
xchg
scas
pushf
sbbl
fwait
push
xchg
add
pusha
dec
mov
adc
int
jns
or
push
inc
fsubs
cmp
hlt
loop
mov
cmp
scas
fsubp
inc
test
sbb
cmpsl
sti
inc
adc
dec
add
test
xor
bound
cmp
imul
cmp
pop
bound
sbbl
in
sbb
ret
popf
dec
pusha
mov
sbb
stos
test
push
aas
or
mov
pop
ret
cmp
in
lcall
adc
xchg
xor
mov
xchg
push
and
je
sub
push
outsl
fsts
cmp
mov
jle
sub
cmc
leave
dec
pop
mov
mov
mov
or
call
popl
out
gs
lret
das
sbb
jo
xchg
push
xlat
push
xchg
js
xor
js
aas
popf
je
lret
sub
or
ds
icebp
push
js
test
jno
ljmp
adc
xchg
xchg
push
jbe
js
jle
adc
bnd
or
addb
ret
cmp
fs
add
out
push
stos
es
inc
inc
nop
mov
inc
push
mov
xchg
test
push
sbb
cli
ja
lret
adc
cltd
loop
inc
jmp
mov
mov
mov
mov
push
or
popa
mov
cs
imul
int3
popa
scas
stos
push
add
or
fistpll
add
adc
xchg
enter
lock
adc
insb
pop
shll
stos
cmp
lret
call
push
roll
mov
cmp
fwait
repnz
imul
sti
fs
mov
imul
das
adcl
push
stos
pop
adc
mov
adc
popf
test
jnp
adc
outsb
inc
cmp
repz
add
outsl
push
dec
addr16
sub
mov
ja
inc
add
fucomip
or
fs
dec
jl
xor
insl
mov
mov
clc
cs
shll
lcall
ds
pop
movsb
jp
or
xchg
fadds
icebp
stc
fsubrs
dec
mov
pop
push
jns
icebp
lock
xor
mov
dec
out
jecxz
mov
jge
add
inc
nop
dec
imul
dec
iret
and
cmpsl
xchg
enter
push
lods
loop
push
mov
pop
mov
xor
pushf
mov
mov
pop
fiaddl
cli
imul
test
cld
adc
ds
mov
mov
and
jne
inc
sbb
cmp
cmp
fstpt
xchg
outsb
add
pop
loop
push
aaa
stos
inc
in
mov
jbe
xlat
add
enter
add
test
push
std
push
xor
fbstp
inc
out
lret
xchg
popf
and
or
outsb
fdivrl
pop
xchg
in
loopne
insl
lahf
mov
ljmp
xchg
cmp
int
insl
das
gs
push
sub
adc
iret
fdivrp
stc
insb
js
lahf
pushf
loop
inc
mov
bound
cmp
jae
loop
rorb
add
push
or
sub
loope
xchg
push
shlb
loope
js
push
out
insb
pop
jns
outsb
rcrb
xchg
jle
incb
cmp
pop
push
push
lds
sbb
ret
mov
call
jo
and
xor
jle
adc
into
in
mov
jb
xchg
test
cwtl
outsl
clc
mov
xchg
addb
cmc
jle
mov
je
mov
loopne
sub
dec
out
push
popa
mov
mov
xchg
loop
jecxz
pop
fsubl
xor
aaa
leave
inc
lods
jns
xchg
int
ret
gs
or
rorb
ds
push
sbb
add
popa
jb
xor
push
push
push
sarb
pop
divl
repnz
test
stc
and
mov
xchg
mov
je
push
enter
lcall
pop
cmp
pop
push
in
and
mov
push
add
sub
jmp
xlat
push
and
xchg
call
jne
dec
mov
sbb
sub
push
mov
mov
push
jmp
sub
stos
sbb
pop
inc
mov
push
sbb
dec
adc
les
adc
movsb
les
das
xlat
mov
push
aad
lret
xchg
in
daa
lods
xchg
stos
sub
or
xor
fldcw
dec
stos
push
ret
fstpt
loop
jg
arpl
outsl
dec
dec
lcall
imul
push
pusha
xchg
ljmp
inc
je
sti
mov
nop
sahf
out
jge
lret
insb
sub
repnz
xchg
mov
jno
ror
jo
movsb
or
push
lea
andl
imul
lcall
addr16
out
and
add
into
or
enter
aaa
fsqrt
inc
out
sbb
in
cmp
jnp
jmp
ljmp
dec
mov
jge
js
inc
sub
adc
enter
xor
lret
lcall
xor
mov
pop
scas
xor
mov
lds
hlt
daa
out
hlt
pop
mov
pop
jno
stos
dec
lret
cltd
cmpb
add
add
out
cmp
mov
cmp
outsl
push
xor
ret
fisubrs
sti
ror
fisubl
sbb
aaa
mov
idivb
xchg
ja
clc
cmp
lods
pop
fsqrt
or
or
fsubl
pop
add
dec
fsub
push
mov
lret
or
shl
and
adc
mov
jnp
adc
sbb
loopne
int3
push
outsb
daa
mov
mov
mov
xor
add
fisubrs
sbb
push
push
cmc
xor
scas
mov
scas
stos
fistps
push
pop
aam
push
pop
xchg
push
loop
sahf
cmpsb
pop
xchg
fldt
sti
mov
adc
hlt
out
or
jnp
push
push
pop
or
jg
pop
push
push
and
outsl
adc
adc
xor
jl
pop
fwait
rcll
xor
daa
les
pop
arpl
sbb
dec
or
gs
dec
mov
cmpl
ja
test
push
add
leave
insl
ljmp
lea
dec
cmp
roll
or
outsl
adc
pop
push
bound
std
scas
mov
repz
pushf
sbb
cld
test
or
or
jl
fdivp
scas
or
ret
fmull
dec
mov
sub
or
fwait
inc
mov
call
or
sbb
push
test
inc
addr16
into
stos
fidivs
rclb
mov
inc
repnz
lahf
cmp
test
mov
shll
cli
push
mov
int3
ror
xchg
fsubl
or
pop
popf
mov
cmp
push
jle
adc
aam
dec
mov
jnp
jg
push
pop
push
or
mov
push
push
loop
cmp
lds
pop
sti
rcrl
dec
xor
mov
push
mov
or
dec
ljmp
mov
rep
shll
mov
pushf
pop
cltd
shl
das
not
xlat
mov
rorb
adc
jecxz
or
mov
mov
aaa
pop
insb
pop
cmp
sahf
repnz
insb
test
divl
addr16
push
data16
push
cmp
push
dec
mov
imul
xor
sti
mov
fidivrs
inc
push
leave
and
jg
sbb
lock
ds
add
jnp
test
sarb
mov
dec
std
mov
xchg
aad
mov
rcll
dec
sti
adc
ja
fs
cld
pusha
jp
xlat
pushf
stos
movsl
imulb
loop
test
sti
pop
in
aam
vmread
xchg
test
mov
push
cmpsb
xlat
adc
ficomps
push
mov
sbb
cmp
fists
mov
andl
adc
scas
dec
push
xchg
sbb
jb
aaa
add
loop
out
int3
sub
ret
mov
cli
lahf
int3
sbb
jb
lods
xchg
jge
add
xorl
in
xchg
movntq
ljmp
mov
and
fldl
mov
xchg
push
cmp
idivl
pusha
fucomip
enter
pop
imul
lret
mov
incb
incl
nop
push
lods
inc
cwtl
arpl
xchg
movsl
int
mov
mov
jge
insb
jg
and
lods
iret
mov
mov
inc
sub
add
pop
adc
jg
fstps
fs
fisubrs
push
push
cmp
outsb
repnz
fwait
or
orb
xor
mov
xchg
jb
gs
add
jp
xchg
cs
adc
lea
sbb
sbb
mov
pop
outsl
pop
and
arpl
pop
push
dec
and
ja
dec
inc
outsb
adc
fs
add
fiadds
out
btrl
and
lahf
dec
or
test
out
aam
lds
stos
loopne
pop
inc
test
jne
and
pop
enter
stos
stos
mov
jnp
addb
negb
mov
adc
mov
movsb
daa
sbb
dec
lock
dec
lods
xlat
mov
xchg
test
les
cltd
xchg
int
xchg
xchg
pushf
pop
cmp
adc
xchg
sub
cmpsb
mov
xlat
aas
dec
lcall
lea
loop
xchg
xor
lret
xchg
out
nop
cmc
mov
aam
and
aaa
lock
push
lods
in
fistl
push
add
jns
lcall
notl
xor
hlt
ljmp
mov
ljmp
mov
cmc
adc
cmp
aad
addb
xchg
fistpl
sub
in
mov
mul
jmp
call
mov
outsb
neg
test
scas
pop
mov
jne
mov
push
imul
add
jno
dec
xchg
data16
or
pop
mov
sbbl
imul
clc
jmp
test
pop
ja
mov
xor
pop
jo
ljmp
pop
push
int
test
lret
mov
cmp
ret
fs
lods
arpl
jno
imul
nop
ljmp
adc
dec
jmp
test
shll
mov
sub
pop
test
jmp
loopne
mov
jmp
out
inc
pop
push
sti
push
divb
les
and
mov
out
insb
xchg
sbb
and
loop
jo
xlat
add
inc
in
dec
sub
lds
sahf
add
mov
orb
ljmp
mov
jg
popf
push
daa
in
push
jae
dec
sbb
sbb
push
fcoms
pop
add
pushf
sbb
xchg
pop
add
repnz
add
stos
inc
cmp
inc
fisubs
sahf
dec
loopne
lods
loope
hlt
into
mov
test
icebp
adc
in
jp
jno
mov
jne
mov
mov
jmp
push
push
mov
pop
push
dec
cli
pop
lret
test
scas
or
arpl
mov
imul
cmp
or
pop
scas
push
aas
enter
inc
imul
cmp
lock
imul
stos
pop
sub
mov
pop
cmp
dec
stc
push
fdivrl
xchg
mov
xchg
pop
popf
insb
or
pop
imul
insb
subl
push
lret
xchg
jae
cmp
cmp
jo
pop
pop
mov
push
ret
xlat
roll
mov
push
inc
xchg
sub
push
sbb
fld
fsts
rolb
scas
dec
inc
aam
icebp
out
adc
dec
fldl
adc
or
cmp
test
mov
fwait
mov
and
mov
popf
repz
stos
fcoms
or
dec
aad
test
inc
negb
mov
cmp
lods
pop
in
data16
mov
fistpll
cltd
inc
xchg
xchg
gs
fwait
std
sub
cmp
and
inc
jbe
dec
cld
xchg
or
push
add
xor
shl
enter
mov
dec
jnp
mov
mov
imul
pusha
outsl
ret
jmp
or
dec
add
jne
pusha
sub
dec
pop
inc
xchg
insl
xchg
dec
ret
sbb
mov
xchg
mov
test
jae
jp
repnz
in
sbb
lds
pop
jbe
test
mov
adc
sbb
stos
ret
jp
in
movsl
add
test
sub
jbe
lret
adc
andl
or
mov
sbb
repz
int
pop
ret
ds
push
xchg
cmc
xor
jg
call
push
jle
dec
fidivs
cs
popf
push
test
xchg
cmp
ljmp
fs
aaa
add
xor
cwtl
inc
jno,pt
fnstenv
add
bound
aaa
or
test
inc
mov
inc
fisubrl
out
sbb
add
enter
jo
or
add
mov
dec
push
neg
ja
jp
test
adc
callw
jbe
stc
andl
xor
dec
mov
les
pop
lods
add
sbb
xor
hlt
sbb
jnp
push
pop
movsb
aad
push
adc
loop
ja
cmp
leave
or
insb
mov
ja
push
sbb
sub
data16
xor
mov
pushf
arpl
mov
das
out
jbe
xor
in
cmc
mov
lgs
in
sbb
out
cwtl
xchg
dec
movsb
sbb
push
mov
xor
mov
mov
shl
lods
aaa
jmp
pop
sbb
mov
xlat
sub
pop
lea
jl
pop
cli
pop
pusha
das
add
sahf
xor
lods
sbb
gs
inc
icebp
sti
adcb
cmp
sbb
clc
loop
lahf
push
sub
add
sbb
sahf
mov
adc
push
jne
daa
inc
push
adc
push
fs
mov
inc
adcb
sub
pushl
cmpsb
push
mov
mov
nop
mov
movl
nop
xchg
mov
and
push
dec
dec
cltd
jp
movsl
mov
out
in
xor
xchg
push
shrl
andl
cmp
xchg
in
dec
scas
sahf
mov
xchg
sbb
call
and
cmp
pop
and
mov
pop
xchg
mov
add
stos
xchg
mov
test
cmpsl
mov
fwait
rorl
jno
out
out
in
sub
shll
push
fsubs
fidivrs
and
cmp
adc
es
mov
jb
dec
adc
adc
dec
test
adc
jecxz
lret
dec
data16
add
in
je
and
push
loope
sub
sub
adc
mov
pop
xchg
sub
scas
dec
pusha
inc
sub
jle
pop
shlb
adc
iret
lret
adc
sub
aam
mov
repnz
out
pop
rcll
dec
mov
push
nop
or
adc
fiadds
xchg
mov
add
jmp
jbe
inc
bswap
jbe
aam
pop
sahf
cmp
inc
aad
dec
dec
or
xor
out
lods
hlt
pop
and
xchg
mov
mov
ds
mov
xor
pop
mov
sub
pop
xchg
mov
lcall
adc
inc
ljmp
xchg
push
test
leave
fnsave
push
mov
jle
pushf
es
insb
xor
pop
jl
rcll
enter
ds
addr16
andb
dec
fidivl
lcall
mov
test
fistl
fwait
pop
xchg
and
inc
jmp
les
jns
cmc
addr16
aam
push
mov
lret
pop
rolb
fnstenv
sahf
sub
cmp
andps
arpl
push
or
xchg
cltd
sbbb
aad
xor
mov
cmp
out
movsl
fidivrl
sahf
dec
enter
xchg
jmp
cmp
push
jp
mov
mov
push
fcomps
outsb
mov
and
popf
addr16
mov
inc
xchg
push
mov
or
iret
sub
cmpsl
gs
jne
mov
stc
cmpsl
fstpl
dec
stos
jae
movsb
lret
ss
mov
push
cmp
push
xchg
ds
mov
stos
push
inc
call
cld
jmp
addr16
adcl
lahf
sub
jne
in
jno
ljmp
pop
pop
clc
ret
ret
adc
mov
das
adc
mov
mov
stc
jbe
jb
into
daa
add
or
mov
xlat
mov
push
out
pop
cmp
shrl
add
imul
mov
cld
sti
mov
sbb
lock
lods
inc
lret
mov
push
mov
lcall
loopne
mov
sub
repz
lea
jnp
stc
jbe
lock
mov
mov
lret
mov
inc
jae
loopne
fidivrl
insb
daa
push
xchg
inc
aas
sub
fwait
push
inc
jbe
xor
lret
test
add
sub
in
scas
sbbl
or
insl
mov
cmp
cmp
aas
push
xor
push
inc
aam
movsl
cmp
fists
movb
loope
dec
pop
xchg
sbb
cmpsb
adc
fsubs
insl
xor
push
arpl
push
test
inc
ss
out
in
sti
sti
ja
cmpb
lcall
jne
and
mov
out
lds
sbb
jg
scas
cmp
lret
scas
pop
stos
out
lcall
stos
jno
cmp
fsubr
stos
scas
and
jne
sub
notb
fs
pop
dec
rcl
sar
push
popl
jge
fiaddl
cmpsl
push
imul
sahf
add
popa
repnz
andl
lock
inc
fdivl
cld
ret
ret
aam
stos
pop
cmp
stc
pop
iret
push
repnz
out
jg
mov
lahf
dec
dec
loopne
stc
push
data16
add
push
jne
sbb
loop
jmp
mov
movsb
decl
ss
and
jbe
adc
lods
cmp
cmp
inc
cmp
xlat
push
leave
xchg
sti
pop
loopne
cmpsb
lods
aam
lods
sbb
pop
xor
push
pop
lods
inc
xor
lock
and
jno
outsb
and
test
lret
mov
jbe
xchg
and
fadds
dec
xlat
xchg
mov
inc
arpl
push
into
jo
in
push
inc
aam
inc
or
or
mov
push
cmp
lea
lds
push
and
stos
push
jecxz
mov
mov
sbb
out
rcrb
inc
jne
pop
enter
imul
into
adc
cmp
sahf
lret
stos
mov
mov
inc
lods
adcl
add
push
icebp
mov
lods
jmp
jecxz
movsb
movsl
nop
cmp
pop
lock
insl
dec
lea
lret
cltd
inc
mov
cmpsb
add
lods
or
xor
cmc
and
jno
add
jg
subl
xor
hlt
lea
sub
je
jecxz
mov
jg
nop
stos
xchg
cmpsb
fucomip
mov
hlt
imul
lock
lds
push
sub
out
pop
pop
cmp
jnp
push
les
xchg
scas
arpl
shlb
ja
push
subl
cmp
mov
xor
push
cltd
test
test
scas
hlt
out
or
xor
xor
aam
insb
pusha
sbb
mov
or
ss
fwait
loopne
add
das
mov
into
mov
rcll
inc
fistl
dec
test
sub
fiadds
sub
outsl
enter
dec
shl
fwait
add
inc
test
into
mov
xor
push
out
mov
test
adc
cmp
mov
mov
shll
lock
iret
es
push
je
xchg
sub
decl
push
push
jecxz
dec
mov
sahf
arpl
outsb
pop
dec
lcall
insl
push
xchg
cmpsl
hlt
out
or
sub
rolb
cmp
mov
and
dec
mov
push
cmp
lahf
into
pop
sbb
jns
int
fsts
mov
nop
das
cmp
fadd
mov
popa
sarl
pop
cli
push
fnstcw
dec
out
xor
xor
pop
imull
cmpsb
fcoms
inc
sub
add
imul
orb
jne
call
arpl
cltd
or
mov
cwtl
icebp
scas
leave
xor
je
fdivrp
push
shll
cmc
push
lcall
rcll
std
cmp
mov
adcl
fninit
xchg
xchg
push
and
mov
mov
mov
aad
inc
pop
daa
fs
mov
mov
mov
aaa
or
data16
cli
xchg
xchg
loopne
pop
add
enter
arpl
push
sbb
jg
xor
push
adc
adc
fcoms
pushf
pop
dec
mov
mov
jae
nop
roll
and
pop
jo
jl
mov
or
loop
xor
sbb
outsl
mov
xchg
dec
mov
inc
shll
push
das
add
pop
sub
jbe
fnstsw
and
shll
sub
cmp
mov
jge
loope
sub
fbstp
hlt
sbb
push
sbb
shll
xlat
add
xor
add
lcall
sbb
out
std
leave
in
jmp
loop
mov
mull
pop
ret
idivb
jl
sub
gs
pop
adc
sub
push
sub
popa
sub
imul
inc
sbb
mov
mov
sahf
sbb
mov
mov
subl
stos
adc
or
adc
pop
div
in
cmp
lock
js
mov
jecxz
sbb
cltd
adc
sarb
mov
and
je
jmp
cmp
xchg
jmp
jle
out
enter
inc
inc
test
mov
push
xchg
add
hlt
push
leave
dec
pop
and
mov
sbb
stos
popa
ljmp
cmpsb
or
adc
pop
jmp
add
and
mov
sub
iret
xchg
push
int3
ficompl
int
je
mov
scas
push
jns
jne
stc
inc
aaa
cmp
cmp
or
push
loopne
or
adc
xchg
stos
xchg
push
jne
xor
fldenv
sahf
movsw
jne
lock
push
test
hlt
mov
xor
or
iret
cmp
pushf
dec
xchg
pusha
xchg
push
jl
ja
sbb
sub
cmp
add
ret
fists
ja
push
pop
cmp
or
xchg
inc
mov
add
pop
mov
inc
int
cltd
leave
in
data16
jne
test
idivb
dec
fstpl
pushf
jo
call
mov
dec
pop
cwtl
pop
sarb
jp
in
es
or
add
sbb
out
add
mov
xchg
push
adc
and
cmp
jmp
xor
add
test
js
js
inc
sub
movb
or
pop
pushf
out
gs
jae
enter
fistpl
lahf
ds
imul
loop
pop
sub
jl
inc
das
fwait
orb
mov
daa
les
add
mov
movsb
inc
add
lods
out
sbb
add
stc
mov
xchg
jl
push
mov
outsl
sub
shrb
mov
push
jns
mov
sub
mov
enter
sbb
inc
xor
cmpsb
adc
repnz
cmpsb
stos
enter
pop
rcr
sbb
inc
pop
mov
jnp
mov
sub
testb
daa
pop
rcrl
and
fsubl
gs
xor
cmp
fstpt
sbb
jne
ljmp
fisubrs
lret
lods
and
clc
pop
fwait
jg
mov
orl
in
add
in
std
sbb
xchg
and
mov
sbb
inc
xor
rolb
repnz
inc
pushf
aad
push
pop
xor
jle
mov
push
jp
aas
cmp
mov
ja
shl
mov
cli
sahf
xchg
test
fs
push
daa
fldenv
insb
test
ret
mov
clc
popa
pushf
xchg
sbb
inc
jno
jo
sbb
roll
addr16
pop
lock
mov
jb
aam
andl
dec
cld
pop
mov
xor
sbb
repnz
and
fwait
loop
pop
mov
das
and
pop
xchg
imul
rcrb
cs
add
adc
mov
push
loopne
cmp
or
test
cmp
push
stc
outsb
incl
inc
sbb
ljmp
jl
ret
jae
mov
mov
mov
jno
dec
daa
mov
sbb
out
mov
pop
pop
mov
xor
pusha
cld
push
inc
cmpsb
sbb
out
stos
and
iret
sbb
adc
clc
clc
addr16
stos
daa
xchg
movsl
insl
adcl
cmc
adc
js
test
push
push
push
jl
mov
mov
sub
adc
adc
xor
dec
mov
inc
insb
mov
sub
lds
jl
xchg
out
sub
adc
sub
jae
mov
sbb
and
inc
dec
adc
pop
or
xchg
sub
call
mov
sub
xchg
in
fisttpll
je
mov
popa
mov
pop
or
or
arpl
fsincos
outsb
mov
inc
push
push
fadds
add
xchg
daa
and
pop
cmp
jecxz
fmull
push
int
les
jecxz
jne
enter
pop
mov
incl
mov
data16
cmp
mov
cwtl
add
adc
out
inc
cmc
mov
stos
lret
gs
lcall
xchg
push
test
cmpsb
sbb
xchg
pop
aas
inc
dec
test
notb
stos
clc
xor
movsb
aaa
mov
mov
mull
push
cmp
jo
lock
mov
push
inc
lcall
xchg
mov
push
jbe
in
jl
mov
xor
adc
xchg
mov
movsl
cmpsb
lahf
adc
mov
inc
je
js
cmp
jne
out
sbb
outsb
mov
xor
inc
adc
xchg
cmp
and
and
xchg
sbb
inc
mov
idiv
mov
sbb
xchg
shrl
loope
test
xchg
hlt
imul
outsb
aas
cmp
cmp
pop
addr16
in
data16
sbb
inc
and
scas
ss
test
inc
dec
jae
inc
mov
jg
clc
rolb
out
cli
xlat
add
inc
xchg
jmp
xchg
cmp
xor
jp
outsl
data16
addr16
jl
or
pushw
mov
cmpsl
icebp
pop
repnz
ret
cbtw
dec
in
movsb
xlat
nop
into
jmp
call
cmpl
loopne
pusha
mov
lea
add
cmp
sahf
jecxz
stc
data16
jbe
mov
popf
pop
xchg
lcall
outsb
arpl
push
push
mov
cwtl
andb
add
add
mov
add
cmpsl
mov
stos
loope
lahf
sub
jne
inc
add
cmp
and
mov
and
jle
dec
add
lods
jbe
add
jbe
mov
jb
jnp
in
sub
iret
ds
sub
addr16
xchg
sub
cli
repz
insb
inc
rcl
fisubl
es
pop
js
in
ds
loop
mov
or
adc
stc
imul
pop
insb
les
ljmp
mov
and
scas
lods
mov
aas
stos
call
addb
out
dec
int
dec
into
ds
pushf
mov
add
cmpsb
int
insb
enter
cmpsb
ud2
rorl
adc
les
pop
das
mov
xor
stos
sbb
popa
ja
xchg
pusha
arpl
pop
xor
or
sbb
data16
je
repz
mov
ljmp
pop
mov
call
xchg
lret
pop
arpl
cs
cmpl
clc
mov
jge
cmp
cmp
addr16
cmp
dec
sarb
test
popf
lret
mov
lods
pop
addr16
cmp
mov
mov
xchg
divb
loop
fbld
hlt
jns
adc
pushf
mov
repz
std
leave
inc
lods
sahf
cmp
out
cmp
pop
xchg
movsl
lods
mov
xor
mov
lret
adc
xchg
and
mov
xchg
lea
cmp
mov
or
xor
and
lahf
test
iret
hlt
shll
lret
leave
dec
int3
jl
mov
notb
adc
mov
data16
adc
fwait
and
xlat
xchg
jb
lahf
jmp
push
mov
jnp
call
inc
add
xor
je
cs
pop
aaa
add
xor
mov
fsin
scas
aad
or
in
sub
mov
mov
fstpt
out
shl
lods
jnp
sti
fiadds
add
push
xorb
stc
mov
xchg
sahf
fcmovnb
xchg
pushf
call
or
mov
jns
arpl
sub
loope
or
sub
scas
sti
inc
inc
adc
mov
jle
ficoml
lods
adc
adc
inc
mov
jb,pn
mov
hlt
fadds
pshufw
push
popf
mov
adc
shll
sbb
push
pop
dec
loop
dec
dec
lds
adc
sbb
inc
out
lds
stc
xor
int
aaa
jle
sahf
jp
ja
pusha
push
push
or
push
mov
pop
sub
dec
shl
xchg
cmp
ret
in
lock
jns
lods
test
ffreep
xchg
clc
jo
dec
jnp
in
popf
and
mov
shl
cmpsl
push
pop
xchg
mov
loop
or
cmp
and
cmpsb
enter
adc
movsb
or
xlat
fiaddl
jb
xchg
stos
add
push
movsb
sub
out
mov
jnp
adc
lcall
dec
or
pop
push
je
pop
mov
and
test
outsb
cli
nop
fdivrs
lcall
data16
clc
in
cmc
adc
jg
out
mov
mov
cmp
sbb
or
shrl
sti
push
jae
in
clc
cmpsl
scas
and
fcoml
lret
xor
jecxz
mov
mov
jbe
jmp
repz
mov
lahf
pop
inc
and
leave
and
movsb
adc
sbb
or
adc
jg
hlt
jb
inc
and
sarb
push
adc
mov
jecxz
and
mov
mov
inc
rcll
adc
dec
lods
imul
inc
adc
in
ret
and
sbb
mov
pop
aad
imul
adc
fs
cmp
fnstsw
mov
xchg
push
push
pop
fdivs
pop
xchg
jmp
push
cli
jp
fsubl
aas
xchg
cmp
inc
je
inc
xchg
aad
jge
testb
push
pop
popf
and
aas
pop
push
mov
sahf
cld
sbb
lret
mov
jae
push
clc
ret
push
sbb
xor
pcmpeqb
push
imul
pop
and
fs
dec
popl
xchg
cli
loope
dec
fbld
push
fidivrl
mov
mov
pop
and
fmul
inc
dec
daa
sub
stos
or
sbb
loop
lret
jmp
or
rcrb
xchg
push
push
mov
mov
inc
mov
sub
sub
sahf
jnp
test
test
sahf
cmp
adc
sub
mov
dec
subb
xor
or
int3
dec
data16
jg
adc
addb
mov
mov
pushf
lahf
cmp
xor
cmp
pushf
xor
stc
cmpsb
fwait
xchg
xchg
js
inc
inc
cmp
mov
jns
xchg
xor
xchg
mov
and
cmpsl
fidivrs
xor
shll
jmp
push
xchg
clc
decl
into
pop
cmpsl
pop
xchg
addr16
cmp
adc
or
inc
xchg
push
emms
mov
divl
mov
add
mov
scas
cmp
or
mov
mov
mov
mov
push
js
xchg
bound
shlb
mov
jmp
mov
aad
in
push
jmp
nop
movl
insl
jge
andl
mov
mov
mov
cmpsl
pop
js
fyl2x
pop
lcall
and
sbb
push
imul
stos
sbb
orl
dec
stos
div
adc
xor
bound
dec
fisttps
or
mov
xor
sbbb
aaa
out
fidivs
movsb
lahf
out
jno
je
jo
cmp
jecxz
icebp
xor
fsubrs
mov
out
pop
adc
pop
std
mov
pop
insb
lods
xchg
and
repnz
inc
lds
subl
in
lahf
xor
into
mov
mov
cmp
sbb
xchg
imulb
jne
mov
sbb
mov
leave
outsl
mov
lret
jmp
adc
pop
push
xlat
nop
or
out
push
xchg
insb
outsb
in
cmp
xchg
adc
jg
cs
test
or
and
adc
ret
and
jno
addr16
lods
je
and
shrb
fcmovnu
pushf
ret
mov
push
dec
push
sbb
lret
cmp
adc
xchg
sbb
pop
out
les
add
fs
xor
test
dec
inc
mov
out
dec
in
testl
jle
into
xchg
gs
pusha
in
jns
push
and
sbb
jg
movsb
cmp
insb
push
testl
cs
sbb
cli
rorl
and
xchg
xor
inc
push
mov
rolb
pop
push
adc
sbb
mov
push
mov
inc
push
mov
sub
fadd
push
outsb
fsubl
sbb
jecxz
out
mov
into
xor
and
int3
jne
fs
popa
mov
call
xchg
push
mov
inc
loopne
mul
mov
mov
pusha
mov
je
and
stos
xor
leave
mov
frstor
jbe
push
leave
test
inc
xor
mov
insb
xchg
test
sub
pop
notl
or
push
cmpsb
bound
js
inc
ljmp
add
pusha
push
hlt
sti
dec
push
aam
inc
nop
outsl
lcall
fistpll
sbb
sar
xor
sub
sti
popa
inc
pop
out
and
hlt
inc
mov
pop
sbb
sarb
data16
je
in
xchg
fistl
jns
shlb
cmpsl
iret
adc
flds
inc
stos
and
push
mul
cmpsb
fcom
repnz
insl
mov
stc
lock
mov
cltd
mov
aas
xchg
xchg
fdivrs
lret
mov
ss
sbb
mov
pusha
pop
sub
and
scas
lock
addr16
sti
test
xlat
cs
inc
cmp
int
scas
pop
test
sub
or
test
add
inc
mov
mov
adc
mov
movl
jo
sub
push
rolb
dec
fistl
jae
mov
ja
push
sub
movsl
stos
dec
dec
sti
ja
push
lea
adc
jle
popf
out
cmp
sbb
andl
lahf
aaa
sub
jne
dec
pushf
nop
xchg
jae
pop
xchg
pushf
in
add
mov
jb
out
inc
cmpl
and
push
shll
add
cmp
test
sbb
cmpb
testb
out
cmpsb
ret
mov
xor
push
adc
nop
push
dec
mov
push
loop
inc
ret
cmp
daa
repz
mov
push
inc
push
inc
cvtpi2ps
shll
outsb
daa
dec
rdtsc
dec
inc
loope
aas
cmp
add
and
arpl
inc
push
pop
pop
das
cmp
iret
loope
lcall
sub
ja
inc
in
cmp
jb
push
xchg
jmp
outsl
aad
lds
jno
lods
mov
or
xlat
jmp
cmpsl
sub
dec
or
aas
lahf
and
jo
data16
xchg
jae
pop
int
stc
test
jl
shll
push
xchg
jb
test
jmp
ret
repnz
jno
lret
cmc
inc
dec
ss
adc
movsl
sbb
mov
fistps
jecxz
jl
aad
cltd
mov
xchg
fistl
and
jge
push
sbb
add
xchg
sbb
push
out
sbbb
popf
dec
inc
aaa
lods
hlt
mov
xor
rorl
push
add
leave
shll
pop
lea
std
add
in
dec
cli
rcr
inc
cmpsl
jp
sub
mov
ret
test
xchg
mov
jp
and
sub
inc
rolb
add
dec
xchg
cmp
loope
xchg
mov
add
cltd
lods
add
prefetcht0
mov
test
sbb
xchg
aam
dec
sbb
push
cmp
cmp
ror
and
mov
pop
dec
and
xchg
aam
inc
push
sbb
cmc
inc
fdiv
jl
xchg
lahf
lods
or
add
mov
xchg
popf
cld
jmp
mov
xor
xchg
mov
adc
shll
loop
add
shrb
xchg
mov
mov
dec
push
xchg
cli
or
fwait
seta
mov
pop
or
cmp
mov
popa
rol
pop
add
push
jecxz
xchg
and
aaa
fdivrp
shlb
fisubrs
add
cmp
pop
xchg
push
pop
pushf
addr16
xchg
inc
pop
mov
enter
push
fdivs
sub
mov
push
pop
fmuls
and
jmp
inc
cmp
testb
imul
pop
clc
cltd
mov
mov
das
push
inc
and
cs
xlat
stc
mov
mov
in
sarl
mov
fst
jg
jne
mov
insl
movsl
addb
popf
pop
pop
mov
pusha
adc
sbb
inc
pop
jae
cs
cmp
inc
mov
es
sub
insl
inc
inc
sub
sbb
fsubrl
add
cmp
test
cmp
ja
lods
icebp
sub
outsl
and
out
pusha
into
imulb
repnz
push
ljmp
or
orb
stc
int
adc
add
xchg
leave
push
jp
je
sbb
and
mov
gs
jge
xchg
popa
mov
popf
mov
imul
adc
scas
pop
and
push
dec
in
ds
add
mov
inc
arpl
stc
push
and
dec
cmp
inc
mov
scas
adc
xchg
out
push
leave
sbb
movsb
lea
and
out
xor
addr16
movsl
xchg
mov
mov
mov
das
jbe
fucomip
pop
push
cwtl
cmp
adc
dec
jns
scas
fs
inc
sar
jno
xchg
ljmp
shl
cmp
xchg
imul
pop
iret
lret
inc
sbb
add
push
push
jp
push
cmp
out
ret
add
mov
xor
fnsave
xor
lea
xor
lcall
xchg
pusha
mov
dec
or
pop
mov
fmul
ss
shrb
push
rolb
cmpsb
pop
jno
jne
xor
xor
mov
clc
add
in
cmp
iret
imul
sbb
iret
aam
out
cmp
jle
lahf
sbb
xor
lock
repnz
or
add
push
shlb
and
mov
sbb
enter
push
adc
mov
movsl
sbb
insb
ret
cmp
pusha
inc
rcr
cmp
mov
inc
scas
scas
add
and
add
jp
lcallw
mov
imul
in
fimull
int3
pop
jge
xchg
push
sbb
fcoml
out
shll
mov
dec
jmp
sub
xchg
aaa
dec
ljmp
scas
and
pop
jge
fmuls
repz
and
add
xorb
int
aam
jae
nop
mov
nop
xor
inc
jns
and
scas
gs
mov
orl
cwtl
xor
lret
or
dec
xchg
popa
cs
mov
mov
in
sub
lods
push
into
popa
mov
fidivs
push
push
push
or
and
lds
in
mov
mov
or
push
lea
xchg
cmpsb
and
and
push
test
loopne
xlat
imul
sahf
jmp
pop
xchg
add
mov
lock
cs
push
int3
lcall
pop
xor
dec
fs
fdivrs
mov
jnp
dec
push
jp
mov
cli
cmc
loop
pop
add
jns
adc
mov
and
aam
mov
jp
or
dec
sti
xor
jns
lret
int3
inc
push
jge
pop
nop
mov
and
scas
xchg
imul
push
dec
sbb
mov
xor
notb
iret
push
dec
pop
cmp
dec
mov
inc
popf
dec
xor
lods
mov
push
cmc
addr16
ss
dec
movsl
mov
cmc
insb
dec
cwtl
inc
jbe
lret
sahf
adc
cli
mov
xorl
stos
int3
test
hlt
mov
test
push
push
out
or
pop
push
shrb
popf
sub
mov
lea
mov
cmc
pop
push
mov
push
in
loopne
shlb
adc
das
aas
sbb
pop
test
jp
popa
mov
popf
jg
test
adc
cld
mov
inc
inc
and
pop
inc
mov
pop
cmp
sbb
and
fidivs
sbb
cmpsl
je
das
sub
movsb
ljmp
jl
es
jne
inc
sbb
mov
insb
add
and
fcmovbe
rsqrtps
mov
cwtl
cwtl
sub
sub
inc
cs
out
push
jnp
outsb
lcall
lods
arpl
ljmp
mov
jge
mov
dec
arpl
leave
push
outsb
fisttps
sbb
dec
imul
nop
mov
cmp
out
mov
lods
roll
in
jl
in
xor
in
mov
popa
les
jo
inc
xchg
inc
cwtl
push
and
loopne
push
push
stc
push
jns
xorb
pop
mov
xchg
popf
das
clc
add
ret
hlt
cmp
push
sbb
aas
fsub
mov
sbb
leave
push
ljmp
repnz
push
jbe
mov
pushf
xor
stos
jle
inc
test
pop
jnp
dec
or
call
push
ret
mov
shl
mov
lea
push
in
mov
fisubrs
daa
and
out
jle
sti
arpl
scas
popf
sbb
pop
sbb
in
pushf
xor
movsl
xchg
or
data16
pop
sti
pop
sbbl
shll
mov
rcrb
addr16
sub
fs
mov
leave
in
cmp
dec
rcrb
lods
fcmovu
or
pop
stos
xchg
push
fxch
pop
jge
ret
aam
pop
adc
out
lahf
dec
filds
jl
pop
gs
xchg
call
jmp
clc
jg
fwait
sub
mov
rorl
push
push
outsl
cwtl
mov
stc
imul
je
out
and
dec
fidivs
je
sub
and
movsb
xor
mov
loop
out
roll
or
lret
mov
cmp
xchg
cltd
mov
push
andb
mov
sbb
dec
es
xchg
lret
lret
sti
bound
mov
aam
shrl
les
gs
bnd
test
mov
xor
xchg
sub
std
and
xchg
lods
pop
xchg
imul
popl
xchg
ja
adc
dec
fbstp
push
mov
test
push
push
jns
lods
cmp
jnp
pop
fwait
jo
lock
leave
jg
or
jno
mov
mov
lock
gs
and
stc
stos
mov
mov
jns
fdiv
sub
insb
push
inc
cmp
mov
rcrb
int
ss
insl
xchg
xor
pop
pop
testl
push
out
test
sbb
pop
mov
add
into
popf
ret
rcrl
dec
aas
push
cltd
push
leave
jecxz
xor
fdivl
insl
or
xor
xchg
aam
into
push
sub
jb
or
cwtl
lea
movsb
sub
cmp
pop
ja
lahf
je
mov
push
outsb
bnd
jge
xchg
and
xchg
lcall
nop
pop
ret
jb
mov
lret
xchg
incl
rorl
fistpl
lret
fdivs
in
shlb
xchg
cld
fstl
out
cmc
pop
jns
inc
into
mov
cmp
pop
sbbb
lahf
dec
iret
mov
pop
popf
inc
out
pop
pop
cwtl
push
xchg
inc
and
scas
adc
cltd
add
push
leave
lods
cmp
cmpsb
test
lock
std
aas
sub
or
repz
jecxz
leave
xor
mov
inc
and
cmc
lock
inc
jne
iret
adc
bsr
repz
xor
pand
jmp
sbb
jno
cmp
push
mov
pop
pop
notb
push
xor
lods
push
xchg
pop
adc
pop
loopne
xor
lods
sbb
rol
jmp
ror
mov
jo
scas
or
push
aad
pop
sub
repnz
mov
xchg
cltd
xchg
decl
aaa
scas
aad
xchg
inc
xchg
data16
mov
mov
mov
adc
xor
adcb
mov
cmp
call
shll
sub
in
fistps
mov
xor
push
mov
xchg
push
ret
adcb
jmp
mov
push
jecxz
cmp
icebp
adc
les
cmp
xor
inc
test
jecxz
sbb
jge
mov
push
mov
xlat
out
mov
pop
push
dec
jle
js
fsubr
dec
adc
loopne
dec
cwtl
es
inc
sub
movsl
dec
out
jp
sub
jle
sbb
lret
hlt
mov
hlt
jb
in
inc
adc
cmp
arpl
mov
xor
pop
cmp
mov
scas
dec
dec
inc
insb
rol
cmpsb
mov
or
fimull
mov
inc
sub
push
test
test
decb
jbe
jg,pn
pop
cmp
fistpll
cld
out
sar
inc
lret
les
jb
adc
jp
push
pop
fidivrs
repz
push
fwait
out
push
xor
xchg
jns
fcmovnbe
xchg
adc
aaa
lock
out
ja
adc
mov
cmpsl
testb
insl
xchg
jb
pop
insb
dec
sahf
pushf
mov
add
or
out
imul
std
cmp
loop
rcrl
jo
into
mov
pop
cmp
fdivrp
shrb
xchg
cmc
mov
andb
mov
jecxz
mov
enter
xor
adc
fnstcw
cmpsb
dec
push
test
push
add
in
fisubs
sub
pop
add
fsubr
insb
out
xchg
mov
lods
add
and
lahf
sbb
adc
xor
repnz
sub
adc
cmpl
sahf
js
push
jl
fstl
js
gs
das
sub
dec
xchg
sarb
xchg
mov
bound
add
movl
mov
or
mov
push
lret
mov
clc
xchg
cmc
xchg
lods
lds
mov
jnp
shll
xor
mov
lods
push
mov
das
or
push
out
mov
cmp
rclb
sbb
push
popf
cwtl
or
xchg
fidivrl
rorb
or
outsl
test
imul
fidivrs
ljmp
mov
aaa
xchg
jecxz
bound
rcll
shrb
in
and
adc
inc
das
sub
movsb
xchg
lea
sahf
xchg
push
mov
fcoms
push
push
jne
cmp
int3
jbe
adc
sub
mov
daa
pop
adc
or
and
push
lock
hlt
adc
movsb
cmpsb
dec
dec
std
sbb
andl
je
cltd
mov
aaa
push
cmp
movsb
lahf
ds
pusha
pushf
lods
clc
fbstp
ficoml
or
ret
push
add
lods
cmp
cmpsl
mov
sysret
inc
mov
inc
ret
jmp
push
mov
test
mov
cmp
hlt
xchg
int3
loop
ss
mov
jno
adc
jbe
mov
push
je
dec
stos
out
sub
loope
dec
push
pop
jo
sub
roll
xchg
stc
js
cmp
inc
or
pusha
jmp
jge
jg
lcall
filds
jmp
fildl
test
cli
push
addr16
mov
fisubrl
jl
add
or
mov
sub
lret
lods
dec
jbe
nop
adc
iret
pop
lea
rclb
xchg
negb
lock
daa
xchg
push
hlt
int3
push
adc
push
cmc
mov
push
movsb
xor
push
insb
jnp
mov
hlt
fwait
lahf
and
xchg
push
xchg
loop
inc
jp
sbb
add
pop
push
push
cmp
mov
ret
cltd
jl
sbb
inc
negb
dec
outsl
and
mov
andl
shl
sub
sub
ss
lret
imul
cmp
mov
addr16
rorb
das
sub
fnstsw
xchg
xchg
hlt
push
je
pop
add
aas
outsl
lea
xor
lock
push
enter
push
cli
push
loope
arpl
push
fs
jne
and
jbe
iret
add
addr16
pop
mov
dec
mov
dec
mov
cmc
mov
xchg
push
adc
loope
int3
lds
fcomip
loopne
clc
out
jno
fsubr
ret
das
and
fucom
iret
mov
inc
lea
into
cmpsb
jg
mov
add
cmp
loope
or
mov
cmp
sub
outsb
mov
or
xlat
mov
and
add
movsb
test
shl
in
pop
mov
fcmovne
jnp
cmpsl
ljmp
or
add
and
shl
xchg
incl
lods
shrl
lcall
xchg
loop
call
cli
nopl
mov
mov
in
and
popa
push
cmp
jecxz
pop
negl
loope
inc
or
jb
hlt
cmpsl
repnz
enter
xchg
mov
mov
mov
inc
test
ljmp
xor
mov
out
cmpsl
dec
je
xor
movl
aam
je
sub
fsubl
bound
out
sub
js
in
leave
cli
inc
ljmp
loopne
or
imul
fnstsw
inc
cmp
lods
cmpsb
data16
cmc
jo
xlat
std
fsubrp
xchg
jnp
sbb
scas
and
and
andl
push
ja
add
inc
jl
test
mov
xor
int
pop
cmpsb
mov
pop
sbb
or
or
mov
sub
pushf
cmp
mov
jle
mov
faddl
pop
cwtl
scas
pop
inc
mov
movsl
jns
fwait
dec
cwtl
stos
lods
cmp
jnp
stos
pop
mov
fistl
aaa
je
and
pop
push
stc
lds
sub
xchg
cmp
adc
and
push
jmp
mov
shl
adc
lods
mov
xchg
adc
ficomps
cmpsb
xchg
dec
dec
xlat
fcoms
xor
dec
ret
pop
mov
je
in
jl
gs
add
std
adc
xchg
mov
push
jne
std
and
sbb
jb
cmp
and
fiadds
gs
mov
cld
test
lahf
and
fisubrs
push
imul
jge
lods
jmp
pop
fs
lock
fdivs
sub
arpl
sbb
mov
sub
incl
roll
popa
lcall
mov
fucomip
pop
cmp
addr16
jo
mov
push
je
cs
and
int
aaa
js
xor
push
jnp
das
xchg
pop
inc
xchg
insb
sahf
pop
sub
mov
cmp
pop
mov
xchg
cmp
sbb
xorl
lock
push
rcr
stc
mov
icebp
jl
lahf
into
mov
xchg
ucomiss
push
jecxz
std
mov
call
out
mov
adc
pop
or
and
in
inc
out
arpl
out
in
jle
sub
or
call
jbe
inc
dec
mov
fiaddl
or
imul
inc
imul
push
cmp
cmp
outsb
dec
mov
or
int3
out
inc
sbb
dec
imul
decl
mov
loopne
or
jge
mov
push
fistpll
adc
sub
pop
mov
or
push
xchg
out
testl
stc
sub
in
test
adc
and
add
adc
fsub
aam
or
pop
mov
add
dec
and
arpl
xchg
jae
repnz
sub
je
lods
inc
cmp
les
and
xchg
xlat
xchg
rcr
arpl
push
addr16
fisttps
mov
mov
add
stc
sbb
movsb
sbb
push
lea
xchg
out
imul
mov
fwait
in
jp
jmp
nop
stos
adcb
jae
push
in
addr16
pushf
mov
scas
test
movsl
mov
dec
stc
ret
in
sub
test
jge
mov
mov
sub
movsb
pop
cli
mov
jp
push
mov
das
fistpl
outsb
movb
ficomps
adc
xchg
test
pop
mov
xor
ret
stc
out
mov
std
ja
jmp
or
mov
clc
movsb
insl
pusha
xor
push
sub
xchg
outsl
sbb
cwtl
je
pop
rclb
xchg
lahf
inc
test
loop
inc
or
repz
and
mov
xchg
jmp
dec
xor
movsb
push
sbb
popf
mov
pop
sub
out
imul
js
cld
ret
jge
rclb
scas
arpl
dec
or
ja
or
imul
cmpsb
dec
jbe
jne
sbb
in
clc
call
loop
stos
jae
sub
dec
lret
or
dec
bound
rcl
int
xchg
in
xor
outsb
sarl
shlb
jne
cmp
imulb
movb
mov
or
rolb
je
in
xor
pusha
push
and
stos
pop
adc
xchg
cltd
mov
out
dec
jle
mov
pushf
cmp
jg
mov
pop
adc
jns
cmp
outsb
jmp
test
int3
popf
ss
mov
sub
nop
pusha
call
test
sub
rolb
sbb
push
cli
xor
xchg
xchg
mov
pop
push
push
ljmp
jnp
lock
sub
stc
push
stos
xorb
xor
pop
mov
insb
sbb
test
jae
cmpsb
insb
aam
sbb
push
xchg
push
cltd
adc
sub
add
push
and
call
fistps
pop
outsb
dec
or
inc
cmp
fidivl
incl
rcrl
add
lock
dec
mov
test
mov
lea
loope
stos
adc
imul
or
lret
mov
jp
pop
mov
xchg
and
mov
stc
les
jmp
movsl
adc
dec
jle
mov
icebp
cmp
mov
stc
or
js
movsbl
or
cmp
shrl
cmp
iret
test
imul
inc
xchg
rorb
sub
xor
xchg
jmp
dec
cmpsl
inc
scas
jg
inc
js
js
mov
and
cwtl
hlt
movsb
mov
data16
cmp
outsl
or
sub
mov
cmp
xchg
fs
push
mov
mov
xor
aam
mull
daa
mov
roll
ret
loope
sub
hlt
mov
jo
in
dec
js
fisttps
lods
fiaddl
cmp
xor
sbb
push
out
sub
loope
mov
sbb
fistl
out
mov
cmp
pop
stc
add
subl
in
lock
adc
fcoms
out
pop
jb
sub
xchg
adc
fsubs
clc
mov
mov
add
out
out
dec
or
mov
cmp
mov
cmp
xchg
mov
ret
inc
pop
jmp
cmpsb
mov
scas
xor
adc
popa
jbe
jmp
imulb
adc
in
es
pusha
call
xor
mov
outsb
enter
int
mov
sub
pop
daa
ljmp
adc
xlat
inc
and
cmpsb
andl
cmp
icebp
mov
cmpsl
bound
scas
hlt
arpl
push
outsl
outsb
mov
pop
xchg
aam
leave
adc
jp
sbb
mov
test
pop
je
pop
fmull
xor
cltd
hlt
mov
enter
scas
imull
test
push
xor
std
fisubs
inc
mov
cmp
cmp
cmpsl
xchg
cli
in
jae
mov
inc
lret
pop
or
cmp
adc
stos
xchg
jno
adc
lods
xchg
bound
jl
add
aas
lock
xchg
mov
lea
add
aam
jmp
in
adc
inc
jne
ss
stc
cs
push
lret
lcall
push
add
jmp
fildll
cld
jp
sub
in
mov
loop
push
dec
cmp
jb
mov
lea
xor
mov
cwtl
sbb
or
or
insb
lods
mov
dec
scas
rolb
xchg
negl
ret
fs
and
xlat
xor
push
fdivr
jnp
notb
psrlw
mov
sub
xor
in
pop
and
inc
and
dec
cmpsl
jl
std
not
pop
stc
xor
sbb
je
adc
fnsave
pusha
sub
xchg
lret
or
fcompl
xchg
addr16
or
daa
lods
popf
pop
fwait
jo
ds
mov
jp
sub
xor
and
lret
jae
test
mov
add
push
div
or
and
out
outsl
negb
rol
call
rcrb
or
lahf
xchg
pop
aaa
cmpsl
mov
aam
rep
lods
loope
ja
cli
outsl
das
inc
mov
nop
leave
jae
dec
adc
sarl
and
lret
sub
das
mov
and
xchg
inc
leave
inc
cli
aad
jae
and
mov
imul
sub
jl
addl
mov
jb
xor
pop
mov
mov
mov
and
scas
cmp
xlat
es
mov
lds
test
repnz
stos
sbb
stos
push
add
mov
lea
adc
sbb
loop
jae
jmp
imul
xor
mov
mov
cmc
into
cmp
or
sub
shll
xchg
cli
sub
cmp
cld
inc
lcall
dec
dec
lret
int
xchg
lock
addr16
mov
loop
loop
lods
mov
push
pop
mov
jo
arpl
loop
test
stos
cltd
lcall
cltd
clc
and
gs
adc
dec
jnp
iret
mov
cld
and
inc
out
mov
aad
scas
loop
rcrb
inc
push
xchg
dec
mov
clc
dec
lods
mov
dec
stos
fnstsw
std
out
movsl
or
xchg
or
mov
ret
jmp
adc
shrb
xchg
xor
pusha
cmp
dec
sarb
xchg
popf
movsl
sarl
xchg
mov
inc
add
pop
and
xor
push
add
lods
loop
sub
hlt
sbb
aad
int3
and
mov
test
cmc
mov
outsl
adc
xor
pop
and
js
loopne
xchg
addr16
add
decb
mov
addl
test
xchg
sub
cmp
xor
push
xor
or
gs
xchg
inc
mov
mov
leave
outsl
cltd
mov
aam
aaa
or
and
and
out
add
out
imul
pop
scas
and
mov
xchg
pop
aaa
jae
mov
fnstenv
adc
xchg
add
lods
dec
dec
jnp
fwait
mov
inc
jnp
ja
imul
jo
mov
dec
adc
or
dec
scas
cli
cli
add
push
fcmove
clc
ficoms
adc
push
out
add
sbb
scas
jle
cmpsl
std
lcall
push
xor
sbbl
sti
nop
pop
mov
mov
jbe
inc
loopne
stos
inc
pushf
pop
jmp
dec
cwtl
in
mov
movsb
popa
pop
sub
mov
mov
cli
cld
push
cwtl
into
shl
fsubs
lock
sub
adc
mov
in
out
mov
and
jecxz
or
xlat
mov
stos
imul
jne
outsb
lock
or
pushf
mov
aad
jmp
adc
stos
jl
sub
xor
push
mov
movsb
push
pop
in
xor
imul
jl
push
sahf
clc
fisttpl
cmp
int3
ds
in
mov
test
jne
lfs
in
xchg
jne
rcr
xor
dec
mov
cld
push
outsb
jp
xlat
movsb
lret
in
orb
jo
jo
dec
xlat
jo
or
es
rolb
mov
cmpsl
push
and
mov
push
jmp
push
stos
sub
pusha
or
aam
lods
xor
stc
sub
out
fwait
xchg
stc
add
repnz
mov
test
int3
add
mov
dec
mov
bound
dec
push
jl
jne
xor
aas
xor
adc
aad
fcomps
or
add
imul
imull
roll
insl
cmpsb
dec
flds
test
push
dec
xor
nop
loop
test
xchg
call
cmpsl
std
fbld
jmp
jno
mov
daa
jmp
cmpsb
aam
test
scas
movsl
adc
mov
dec
cmc
jl
mov
inc
ds
sub
imul
addl
repnz
popf
outsl
movsb
dec
adc
aam
inc
ficomps
lret
and
leave
xchg
sbb
pop
lret
inc
cmpsb
adc
in
shrb
push
sub
insl
or
out
lahf
test
xchg
loop
lret
inc
ds
xlat
inc
jno
mov
jae
xchg
shlb
and
scas
mov
outsb
out
outsb
cmpsb
xor
xor
or
arpl
sub
jmp
and
test
leave
mov
sbb
sbb
push
ds
dec
inc
cmp
dec
aas
push
mov
cmp
lret
test
jo
lods
shlb
ja
jg
popf
ljmp
inc
daa
pop
jo
mov
push
adc
mov
enterw
cwtl
push
into
mov
mov
outsl
movsl
test
cmp
sub
add
sbb
sbb
pop
icebp
xor
pop
mov
outsb
mov
sbb
sub
mov
imul
lret
jle
and
bound
lods
cwtl
xchg
inc
cmpsb
data16
stos
mov
or
xor
inc
cli
cmpb
lahf
fstpt
and
in
fldl
cmp
inc
and
rol
pop
sarb
inc
jg
mov
sahf
out
loope
subl
add
test
mov
sub
xor
push
ss
jno
adc
dec
adc
loopne
mov
lods
sub
scas
mov
outsb
sbb
por
call
or
cmp
mov
or
jecxz
insb
frstor
enter
out
cmp
mov
inc
jbe
adc
cwtl
adc
xor
loopne
sub
in
ret
js
test
fcmovu
jne
adc
in
nop
jge
or
xlat
dec
or
mov
jb
sti
push
imulb
xchg
jno
push
das
jle
sbb
ret
fcoml
in
push
imul
in
ret
outsl
and
sub
sub
jnp
mov
add
xor
fs
jns
mov
pop
cs
mov
and
mov
in
push
cmp
cltd
push
push
loopne
test
cmc
cwtl
xor
and
cwtl
out
hlt
mov
stos
pop
jno
jne
and
mov
out
inc
sahf
flds
ja
inc
or
rorl
fsts
dec
sbb
xchg
inc
sub
and
stos
je
scas
sbb
dec
stos
xor
inc
mov
add
push
nop
mov
jmp
cli
mov
cmp
lcall
idivb
xor
insl
fistl
mov
xchg
xchg
bound
xor
lret
push
or
pop
in
cld
mov
fwait
pop
inc
and
aaa
sbb
xchg
dec
dec
mov
popf
scas
push
and
iret
negl
xor
adc
jbe
jl
push
pop
lahf
add
pop
adc
fcoms
cmp
test
mov
out
xlat
pop
jle
mov
xchg
stos
stos
mov
loopne
nop
push
das
mov
mov
inc
pop
das
pop
xor
sti
clc
cmovge
lods
movsb
lds
lods
repnz
add
mov
adc
lret
leave
mov
push
or
cltd
sub
mov
fisubrs
mov
rorl
xor
scas
ficoml
xchg
mov
mov
inc
push
jp
test
filds
test
mov
or
jbe
fidivrs
push
pop
out
iret
add
loope
int
pop
cmc
popa
shl
add
ss
sbb
pop
mov
movsl
jns
bound
aad
push
dec
fistps
mov
xor
mov
adc
in
cmp
jns
rolb
inc
xor
sbb
ss
jp
cli
jle
push
or
popa
imul
gs
inc
push
int3
adc
mov
xor
loopne
push
bound
in
negl
scas
fistpl
aam
sub
imul
and
mov
push
fisubs
rcll
jge
outsl
mov
dec
andl
push
jecxz
or
mov
out
lret
test
mov
out
sbb
add
or
repnz
inc
inc
sub
popf
cmp
stos
aas
xchg
je
xchg
in
xchg
cltd
pop
xor
mov
sub
inc
subl
es
xchg
cwtl
or
mov
dec
in
xor
jbe
lods
jne
cmp
mov
cltd
and
cltd
push
pop
dec
cmp
cmp
xor
push
push
mov
push
sti
mov
push
pop
push
movsb
jae
ds
faddl
int3
push
push
popa
add
mov
and
xchg
push
adc
xor
addl
addb
arpl
test
out
push
out
lea
out
xchg
add
cltd
cmc
shrb
adc
xorb
mov
dec
int
mov
fcomps
and
jg
pop
add
outsb
pop
lock
lahf
loope
pop
xchg
ja
jmp
or
sbb
mov
sbb
and
push
add
ret
out
push
inc
add
cmpsl
sub
mov
cmc
xchg
sbb
lahf
aaa
setno
jnp
addr16
mov
dec
inc
or
push
mov
shl
xor
pop
out
xchg
pop
aam
mov
and
das
and
cmpsb
lods
repnz
adc
xor
adc
xlat
insb
stc
dec
test
mov
add
pusha
repnz
cmp
clc
int3
enter
clc
mov
iret
mov
lea
sub
sbb
push
dec
jl
mov
xchg
mov
cltd
loopne
sbbb
hlt
int
jecxz
shrl
cmc
jno
outsb
xchg
or
jnp
aaa
mov
jno
rol
jnp
add
pop
pop
jns
out
lea
jecxz
pusha
or
in
cmp
inc
mov
mov
cmp
sbb
ja
sbb
jns
or
test
mov
xchg
jae
cmp
pusha
loope
cli
das
push
dec
enter
xchg
xchg
clc
pop
fidivs
sub
inc
es
jle
jne
scas
sub
mov
lcall
cmp
loope
add
push
sbb
fcmovne
mov
mov
addr16
std
in
dec
jno
mov
xlat
icebp
ret
fnsave
jns
pop
and
jmp
add
mov
in
test
jmp
jle
mov
push
hlt
arpl
xchg
or
insb
pop
popa
test
push
arpl
mov
jp,pn
pop
push
movsl
cli
repz
out
insb
jmp
dec
je
mov
aad
adc
sub
mov
xor
add
cwtl
scas
or
sub
stos
lods
xchg
ds
jg
jno
push
cmp
fidivrs
movsl
fwait
aam
loope
mov
cmpsb
pop
cmpsl
push
out
shl
or
xor
iret
daa
out
out
stos
pop
lcall
and
adc
fsubs
je
and
or
iret
and
cmp
push
repnz
jo
movsb
jg
fcmovnb
enter
push
stos
dec
xchg
in
mov
push
dec
addr16
into
xor
push
xlat
scas
rcr
mov
outsb
idivl
push
add
inc
xor
add
out
jno
push
sbb
lret
mov
cmp
fisubrl
sbb
scas
inc
adc
adc
movsl
out
cmp
cld
xlat
stos
add
out
negl
jbe,pt
icebp
ljmp
sub
subl
pushl
mov
out
imul
outsb
jmp
outsl
shr
mov
mov
xchg
add
and
mov
loop
jb
mov
sbb
xchg
imul
adc
and
mov
sbb
adc
roll
test
cli
sbb
lea
data16
lret
rcrl
lcall
add
push
fadds
sbb
daa
test
dec
push
inc
cwtl
mov
sub
pop
mov
shll
pusha
mov
mov
mov
aam
xor
arpl
jae
push
mov
pop
aad
sti
sub
mov
and
push
inc
and
cmp
adc
xchg
fiadds
flds
mov
mov
sub
jno
xor
into
sub
bound
mov
dec
rclb
xor
jno
jg
adcl
sub
test
int
jb
dec
mov
out
ret
fs
sub
sarb
adcb
aam
add
mov
loopne
test
cmpsl
nop
popf
sub
enter
aam
aam
or
in
ret
xchg
and
ss
push
sub
imul
leave
push
sahf
dec
movsl
pop
jbe
jb
in
inc
jl
cmp
rcrb
xor
mull
into
pusha
js
ficompl
cmp
mov
out
scas
dec
je
je
and
adc
mov
sub
mov
aam
xor
push
inc
fdivl
rorl
popa
pop
pusha
sub
mov
aaa
and
push
nop
daa
add
ss
aaa
dec
mov
xor
std
lcall
jle
in
fwait
xchg
xor
adc
xor
sub
fdecstp
jp
testb
inc
inc
dec
jle
lahf
cmp
call
movsl
lret
jns
lods
jbe
call
scas
dec
repz
mov
mov
or
popf
sub
or
xchg
sbb
mov
iret
faddl
mov
add
push
enter
jp
sti
pop
inc
sub
lcall
mov
jnp
test
and
push
sbb
imul
xlat
push
rorl
sbb
push
or
lahf
add
xor
dec
pop
repz
mov
roll
xchg
cmp
imul
leave
xchg
je
cltd
dec
xchg
imul
xor
popf
aas
dec
divb
add
sbb
imull
pop
cli
cmp
pop
push
shrb
insb
dec
shrl
sub
push
lds
aas
fadds
or
jno
out
inc
fxtract
sbb
push
stos
mov
xor
jae
and
sbbl
in
mov
fcmovu
mov
sarl
je
cli
push
push
sub
xlat
add
test
mov
jns
lahf
rorb
loop
mov
inc
loope
rcr
sti
inc
lcall
stc
push
lods
and
mov
imull
jo
sahf
add
jmp
mov
push
and
loope
lahf
mov
icebp
outsb
mov
cmc
mov
loop
iret
pop
dec
fdiv
pop
jns
loope
jno
fs
imul
pushf
jp
pop
mov
adc
jb
mov
fdivs
cltd
loop
lahf
xor
fs
sbb
mov
sub
lods
arpl
es
arpl
pop
lcall
into
in
pop
movsb
jmp
std
sarl
mov
cmc
loope
mov
shrl
jge
clc
jecxz
jb
nop
or
xor
mov
cmp
cmp
pop
mov
dec
repnz
xor
ret
nop
adc
xchg
mov
mov
lods
icebp
xchg
addr16
cwtl
xrelease
push
cwtl
sbb
mov
xchg
xchg
jns
mov
push
push
xor
mov
lret
sub
mov
and
jo
xchg
jno
ja
xlat
out
jbe
or
stc
aam
mov
cmp
nop
lret
push
dec
negb
xchg
stos
je
fistpl
mov
in
sbb
nop
daa
and
cmpsl
push
stc
pop
clc
test
inc
pop
xor
stos
mov
xchg
leave
dec
notl
jnp
fwait
pop
dec
cmc
test
dec
test
sbb
loopne
mov
ret
faddl
and
xlat
push
sbb
mov
loopne
sbb
xchg
xchg
sub
inc
das
lds
outsl
cmpsl
dec
jae
mov
pop
sbb
test
pusha
ja
cmp
jg
pop
leave
lret
add
cld
int3
xchg
mov
adc
sbbb
sbb
movsl
inc
dec
mov
fs
pop
int
xor
call
in
mov
adc
add
jo
or
pop
imul
sbb
cmp
pop
push
subb
arpl
push
negb
in
ss
shl
insb
shll
push
cwtl
imul
mov
mov
xor
lock
mov
jae
iret
and
xlat
popa
pop
movsb
mov
cmc
stos
push
sbb
das
sbb
pop
sub
inc
mov
mov
cltd
cwtl
loop
adcb
pop
mov
or
xor
lret
cld
pop
jae
and
mov
sti
xchg
pusha
mov
les
fcoms
pop
out
mov
sbb
cmp
cmp
fdivrl
bound
ja
xor
or
scas
enter
outsb
repz
incb
mov
inc
push
jge
outsl
clc
in
je
and
xor
xchg
stos
mov
push
aad
inc
jnp
mov
xor
int
adc
lock
mov
pop
or
or
push
daa
push
ss
push
push
or
gs
xchg
outsl
jp
jge
or
jmp
ret
adc
icebp
lret
outsb
xor
das
repnz
cmp
imul
and
lods
lea
gs
xchg
sbb
fistpll
ljmp
sbb
lods
rcrb
mov
sti
mov
inc
loopne
stc
xchg
cmp
push
mov
dec
xchg
pop
lea
arpl
push
mov
repnz
xchg
les
rcrb
popa
les
cmp
hlt
rcr
cmp
xchg
mov
das
nop
mov
movsl
mov
test
pop
jb
sar
stc
or
jp
fsubrl
xor
cmc
and
xor
pop
test
pop
xchg
sub
cmpsb
fdivrs
test
ljmp
sbb
sbb
test
cmp
adc
test
cwtl
fdivrl
lahf
push
mov
iret
sub
push
rorl
dec
mov
pop
loopne
into
sarl
inc
pusha
push
pop
stos
jp
sbb
lcall
into
ja
bound
jno
je
out
jbe
xchg
and
jmp
xchg
addl
pop
sti
cmp
jae
sub
inc
fwait
push
in
inc
shll
dec
stos
push
push
inc
mov
int
movsb
cmpsl
sahf
fs
sbb
into
push
push
aaa
pushf
mov
outsb
push
or
and
fs
jno
mov
jle
xor
cmpsl
aas
filds
lea
jb
sub
inc
fdivs
dec
add
pop
cld
push
loopne
inc
insl
popa
jne
fmul
lods
lds
lret
cwtl
cmpl
pop
or
sbb
ret
shlb
sub
inc
push
into
ficomps
aas
mov
and
and
pop
rorl
jo
stc
hlt
clc
push
loop
ret
cmpsl
fcoms
xor
mov
mov
or
dec
xor
pop
xchg
and
jmp
mov
fcomp
ljmp
jae
sbb
data16
scas
adc
loop
lcall
stos
in
arpl
shll
adc
in
pop
sbb
ss
add
sahf
insl
cmpsb
adc
jecxz
push
cmpl
jne
inc
mov
rolb
imul
ficompl
jne
cmp
adc
test
lods
pop
pusha
ljmp
test
jo
lret
and
dec
dec
xchg
stos
xor
nop
inc
sbbl
sbb
enter
push
dec
fcoms
push
call
mov
loopne
jne
lock
and
testl
cmpsl
sub
in
xchg
push
addr16
dec
fstpl
jb
js
lret
sub
mov
xor
jno
xchg
sbb
arpl
pop
sbb
pop
enter
pop
ficoms
cs
push
clc
dec
scas
inc
jle
pop
adc
popf
out
cmp
sub
clc
stos
lret
fdivrl
sub
mov
lcall
add
mov
f2xm1
mov
xchg
add
mov
inc
push
pushf
inc
and
push
fs
sbb
mov
jne
pop
push
mov
xchg
sub
int3
shl
int
fs
ret
mov
cli
ds
jbe
insl
inc
push
mov
add
jg
inc
popa
push
mov
pushl
outsb
adcb
mov
add
test
sub
mov
cmp
dec
cmpsl
pop
addr16
scas
enter
test
cmp
jl
fwait
sub
imul
and
ljmp
repnz
mov
xchg
test
cwtl
mov
cmp
ffreep
out
push
add
jl
cmp
fs
in
ret
and
xlat
sbb
push
cmpsb
jge
int
es
repz
mov
and
pop
inc
outsb
mov
pop
std
mov
jb
shll
pop
fdivs
ds
mov
cmpsl
inc
xchg
or
sub
aam
js
movl
sub
mull
mov
push
xor
cmp
add
mov
pop
repnz
xchg
adc
cmc
add
repz
sti
inc
mov
cld
ljmp
les
add
sbb
flds
in
xchg
pushf
mov
imul
inc
xchg
daa
sbb
fwait
xchg
pushf
cmp
loop
sbb
add
in
pop
fstp
repnz
lods
and
push
mov
mov
gs
icebp
or
jne
xor
out
sbb
fildl
push
cmp
es
jle
cmp
outsb
cli
imul
jae
movsb
jno
mov
subb
mov
and
test
dec
popa
cmc
xor
outsl
dec
loopne
jp
sbb
or
or
call
push
or
clc
dec
ret
cmp
test
insb
sub
sbb
push
mov
sbb
jbe
bswap
xchg
mov
sbb
jb
push
repz
insb
rolb
cs
pusha
mov
stc
scas
and
jecxz
cld
aas
ret
and
out
in
sahf
out
loope
in
scas
incl
lods
or
ljmp
enter
jecxz
add
stos
lret
mov
sbb
dec
pop
cs
and
mov
test
scas
dec
lods
test
cmovge
repnz
icebp
push
adc
sahf
jmp
or
inc
inc
aaa
and
out
adc
pop
into
xchg
push
xchg
insb
jae
adc
xor
xchg
sbb
xor
add
lret
jno
jae
test
daa
lea
leave
das
sysret
xor
mov
jecxz
clc
hlt
and
gs
mov
cmp
sbb
add
inc
xor
push
lock
aas
js
mov
je,pt
inc
or
dec
mov
mov
std
xchg
jbe
mov
faddl
mov
xchg
cmp
pop
mov
es
sti
iret
jmp
jmp
fildl
std
sub
cmp
loop
adc
jns
in
in
add
sbb
cld
sbb
mov
mov
push
mov
add
push
cmp
push
ljmp
sbb
xlat
inc
test
mov
jp
cmpsb
ret
cltd
mov
arpl
sbb
mov
push
pusha
icebp
cmpb
mov
sbb
sbb
insb
loop
jno
jmp
lea
outsl
jmp
arpl
mov
pop
stos
cs
dec
in
and
stos
int
dec
into
xor
mov
ljmp
movsl
out
ret
and
pxor
inc
inc
cmp
jmp
addr16
sti
push
xchg
xor
insl
pop
xor
xchg
sub
mov
in
aad
aas
jb
jno
fisubrl
inc
mov
ds
in
out
addr16
jecxz
ds
push
mov
jmp
andb
shlb
add
into
mov
dec
push
mov
jl
pop
jns
ss
or
int
mov
mov
das
mov
lds
jmp
fsts
lret
sbb
stos
push
push
nop
imul
cmpb
mov
xchg
and
dec
int
xlat
dec
sbb
or
add
ret
xchg
push
test
lods
in
stos
inc
ret
pop
loopne
lods
push
push
lcall
imul
popa
rcll
decb
in
pop
mov
mov
es
nop
scas
inc
pop
outsl
aam
scas
or
cmp
adc
rol
push
int
pop
loopne
jmp
inc
loop
fdivrs
ljmp
movsb
mov
mov
jl
push
mov
jbe
scas
add
xor
insl
cwtl
jg
add
adcb
mov
fadd
xchg
xorb
cmp
ds
test
xchg
cmp
sqrtps
push
mov
sbb
mov
aad
or
pop
and
in
fdivs
call
push
scas
pop
mov
jae
inc
mov
lret
adc
and
insl
lcall
pop
mov
jnp
xor
add
or
inc
add
xor
or
pop
out
dec
inc
call
cmc
inc
xchg
mov
jmp
and
mov
std
and
jnp
xor
adc
cmp
in
roll
and
sub
or
cli
sub
lea
push
insl
lahf
mov
dec
jb
ljmp
outsl
cmp
out
xor
dec
push
add
push
scas
inc
push
mov
jl
fidivl
daa
adc
ret
scas
mov
sbb
cmp
xchg
out
pusha
mov
in
jb
sti
js
cmp
lret
imul
cmp
mov
dec
push
aas
mov
and
rorl
mov
pop
jno
ss
addr16
xorb
sub
sbb
xchg
mov
jne
sahf
or
out
xlat
daa
mov
into
mov
test
mov
lods
push
sbb
pop
mov
mov
scas
pushfw
cwtl
adc
in
dec
jp
cli
mov
mov
sahf
push
add
ss
push
lds
dec
dec
popf
call
es
rcr
fisubrs
je
lcall
xchg
add
cmp
xor
mov
mov
shrb
nop
cmpsb
xor
into
jp
pop
sahf
pop
gs
push
or
aad
cmp
inc
and
jg
jp
cmp
loope
scas
int
pop
add
cmc
cmpsb
fstps
push
xchg
or
cld
js
cs
sub
mov
lods
loop
lahf
std
in
repz
mov
mov
call
add
aas
inc
outsl
mov
xchg
in
iret
jp
mov
and
adc
in
icebp
fwait
jo
push
xchg
mov
and
cmp
jno
and
mov
ss
pusha
cmpsb
sbb
popa
cmp
push
fnstsw
and
add
cli
stos
lret
add
testl
jecxz
jecxz
fisubrs
sub
fistpl
xchg
pop
mov
add
out
push
adc
xchg
leave
xchg
cmpsl
out
push
outsb
or
add
aaa
arpl
cmp
sbb
push
out
push
lods
das
cld
push
jno
cli
mov
hlt
cmp
fisubl
jbe
es
push
out
out
fsubrp
sbb
dec
sti
jne
sub
xor
mov
and
push
and
dec
xchg
out
and
sub
jne
mov
adc
mov
sub
testl
or
ljmp
lcall
mov
sbb
subb
add
mov
cmpsl
mov
cmp
icebp
mov
mov
xor
pop
xor
ljmp
jo
je
xchg
aad
jne
int
mov
add
lock
outsl
fstpl
sahf
fsubrs
rcrl
jbe
cwtl
xlat
fstps
mov
lahf
hlt
pop
es
mov
addb
mov
pop
sahf
mov
sub
sub
testb
inc
loopne
mov
and
push
ss
cmp
jne,pn
mov
jl
fiadds
loope
sub
sbb
pushf
and
clc
mov
es
xchg
inc
rclb
movsb
mov
enter
sub
pop
loope
out
insb
mov
add
mov
add
dec
xchg
pop
jbe
std
je
cld
xchg
lock
xor
inc
xchg
xchg
jno
fistps
roll
jae
mov
add
rcll
lods
les
and
cmp
cmp
pop
in
mov
data16
mov
mov
ret
mov
dec
jmp
jnp
mov
les
das
icebp
hlt
sar
jecxz
adc
dec
enter
mov
addr16
cmp
ljmp
js
xchg
inc
movsb
gs
mov
sbb
mov
nop
les
cltd
inc
and
std
lods
push
xchg
jg
pop
mov
xchg
stos
hlt
movsb
add
pop
jge
xchg
insl
jbe
jge
sub
xchg
bound
rorb
inc
fs
xor
sbb
sub
popa
push
notl
iret
movsl
xorb
adc
mov
clc
sbb
push
int
loopne
mov
sahf
mov
addr16
loope
repz
dec
std
add
dec
fwait
cli
iret
inc
cmp
push
pushw
into
imul
push
popa
pop
imul
aad
jb
cmp
or
ljmp
outsb
push
dec
xchg
mov
rorl
out
sbb
jb
test
movsb
mov
lret
arpl
repnz
xor
je
inc
js
imul
les
in
mov
in
test
clc
mov
test
mov
movsb
aas
jge
mov
outsb
push
pusha
fnstsw
lea
sbb
or
cld
mov
xorb
fistl
xchg
imul
and
test
daa
mov
movsl
in
movsb
stos
lcall
mov
add
jmp
pop
dec
sub
cmp
cmp
cli
mov
dec
mov
jecxz
loop
mov
ret
mov
cmpsl
sbb
mov
or
cmpsl
jl
mov
int3
je
popa
aad
sbb
dec
push
xchg
sbb
cmp
insb
loop
mov
inc
mov
jp
inc
or
sub
mov
sbb
mov
sbb
mov
xlat
test
cmp
dec
repnz
push
dec
add
dec
dec
and
cmpsl
jge
jnp
mov
mov
push
fldt
out
cmc
inc
sub
mov
mov
xor
xchg
mov
repz
jle
outsb
push
jge
sbb
push
pushf
sub
add
xchg
in
jg
inc
shll
push
hlt
mov
scas
rorb
sub
cld
mov
sub
lea
out
pop
and
and
xor
adc
cmp
and
cmp
rcrb
push
rep
inc
jmp
filds
sbb
jbe
xlat
lcall
push
cmc
xchg
outsl
adc
pushf
stos
jge,pt
or
js
mov
pop
es
mov
movlhps
add
or
sub
or
rorl
popa
jbe
in
pushf
inc
rcr
mov
or
mov
adcb
popf
jo
push
xor
aam
mov
sub
int3
xchg
push
hlt
xchg
test
jae
sub
dec
out
mov
lcallw
decb
popa
mov
push
add
mov
fwait
iret
filds
inc
shl
or
jge
out
rolb
js
sub
jmp
shll
shr
aaa
add
lods
mov
push
in
push
imul
repz
and
fsubl
or
mov
out
and
mov
jg
dec
inc
mov
mov
pop
aad
bound
mov
out
call
fs
xchg
mov
or
mov
mov
loope
jl
das
pop
clc
push
xchg
dec
cmp
divb
pushf
in
jo
js
jae
rcrl
bound
pop
jnp
movb
xchg
insb
iret
xor
xlat
scas
mov
push
push
jae
cmpsl
pusha
pop
popf
mov
mov
icebp
inc
xchg
mov
or
push
out
pop
sub
aam
dec
stos
sub
add
stos
jns
lcall
lds
and
sub
movsb
push
mov
arpl
mov
into
push
mov
out
mov
push
xchg
xor
into
mov
fistps
mov
and
pop
stos
lock
iret
loopne
inc
sub
xchg
cmp
mov
sbbb
adc
xchg
fidivl
mov
adcl
mov
jmp
xor
pop
cwtl
pop
out
insb
lods
pop
das
in
sahf
mov
mov
and
out
int3
sbb
aam
loopne
mov
cmp
adc
adc
adc
mov
rolb
dec
ss
in
movsb
lret
jae
sub
push
lret
sub
ds
jno
stc
pop
fisttps
rcl
add
sub
sub
xchg
mov
mov
or
pusha
dec
sti
mov
push
mov
push
mov
cmpsl
test
out
jbe
sbb
lock
inc
call
mov
daa
add
je
sub
addb
inc
repz
clc
clc
in
das
xchg
pop
mov
push
repz
pop
xor
negl
sbb
pop
idivl
mov
ret
xchg
mov
adc
pop
shlb
dec
popf
rol
adc
and
or
inc
cld
inc
mov
pusha
clc
sarb
dec
lahf
push
sub
xor
ja
cmp
into
enter
push
enter
aaa
out
xchg
xor
jg
mov
popf
lods
ficomps
aas
test
test
int3
mov
pop
ret
pop
mov
inc
ja
push
inc
ss
clc
jg
or
xchg
jbe
adc
push
or
mov
cmp
fs
mov
push
adc
sbb
jmp
popa
loop
aad
int
push
dec
xchg
push
jbe
and
fs
fwait
ss
jns
xchg
push
and
xorl
or
into
fwait
jg
mov
and
mov
xor
cwtl
lods
pop
hlt
dec
add
sbb
inc
jg
mov
mov
or
lret
mov
ret
sahf
mov
push
dec
push
cs
pushf
and
jb
cmp
pop
mov
loope
arpl
shlb
sub
shufps
lret
add
jne
xchg
decl
mov
cmp
mov
sti
cltd
nop
jb
dec
inc
dec
jno
cmp
das
or
xchg
leave
dec
mov
cs
mov
inc
jge
pop
push
or
mov
push
into
pop
add
xchg
fimuls
inc
ret
cs
adc
in
push
nop
inc
dec
xchg
cmpsl
rol
dec
lret
or
je
jb
insl
xchg
test
and
jnp
loop
lret
outsb
xor
push
imul
enter
ljmp
les
jle
cld
xor
es
aaa
jb
inc
jle
js
push
jmp
shrb
dec
pop
bound
cmp
adc
arpl
dec
lahf
sub
gs
mov
test
int
inc
mov
andb
mov
inc
cmp
ret
call
inc
inc
addr16
add
push
mov
or
sub
std
inc
pop
lret
cs
mov
inc
cmp
jl
inc
jno
push
dec
sahf
lods
xor
out
ret
sub
sahf
fstps
imul
fdivl
xchg
out
jecxz
xorb
stos
pop
mov
popf
dec
cmovle
inc
xchg
and
dec
subb
pop
sbb
in
xor
add
mov
adc
xchg
outsb
ret
fisttpl
lea
cmp
roll
pop
in
sahf
adc
rcrl
add
out
dec
daa
fcompl
into
test
cmp
sbb
cld
out
iret
stos
fnsave
arpl
pop
mov
push
or
and
xchg
jno
push
addr16
mov
xchg
mov
sbb
sub
lds
jmp
test
jg
call
push
int
jns
and
std
mov
je,pn
test
mov
scas
add
loop
inc
fs
cmp
adc
je
or
fmuls
push
fidivrl
dec
xchg
repz
daa
cmpps
fildll
std
xorl
and
pushf
cmpsb
dec
push
orl
loopne
sbb
outsl
push
sbb
and
das
js
jns
popf
mov
mov
jne
dec
inc
push
mov
rcrl
adc
ljmp
sti
cld
cli
loope
loopne
mov
xchg
sahf
enter
cmp
push
imul
cld
adc
pop
xor
stos
xor
xchg
xor
push
scas
and
sbb
or
dec
aaa
jl
rcll
push
sbb
js
push
dec
mov
and
push
jp
inc
jecxz
and
insb
jae
pop
cld
mov
out
inc
dec
mov
rcrl
mov
adc
jbe
test
mov
in
sbb
fs
dec
jle
jmp
popa
into
and
xchg
shlb
fmul
xor
cs
fs
push
xor
cld
test
mov
pop
divl
or
mov
sub
les
or
cwtl
mov
scas
dec
push
mov
pop
jmp
fadd
shlb
pop
lahf
push
stc
lret
test
sbb
fidivrl
outsl
dec
jnp
rcl
adc
out
icebp
int3
add
sbb
jge
es
js
arpl
out
jae
adc
stc
xchg
mov
subb
pop
push
mov
out
push
adc
lock
xor
pop
pop
dec
out
stos
arpl
pop
jne
stos
push
jno
mov
lods
mov
pop
mov
inc
scas
lods
mov
adc
hlt
add
lods
add
repz
jne
jmp
pop
icebp
ret
das
bsf
loop
loop
pop
jp
aad
cmc
xor
mov
dec
or
in
les
sbb
addr16
hlt
imul
test
lds
imul
or
sbb
or
outsl
mov
ficomps
popf
ss
adcb
leave
add
shrl
call
ja
jnp
pop
fwait
jbe
int
arpl
lods
push
subl
mov
and
cmc
push
stos
lea
dec
mov
repz
fisubl
out
data16
add
mov
movsl
loop
jecxz
mov
mov
aam
mov
rcll
add
aad
iret
adc
xor
sti
out
rcll
cltd
mov
adcl
ss
mov
sub
scas
ficoml
pop
js
leave
pushf
lods
xor
adc
jo
lods
mov
mov
xchg
fimuls
scas
dec
inc
movb
jmp
dec
fsubr
jns
mov
inc
cltd
add
fdivs
pop
pushf
push
adc
cmp
das
leave
jg
rcrb
test
lds
sahf
scas
movntsd
out
lcall
inc
push
scas
xchg
pushf
mov
xchg
test
push
mov
push
in
cs
cmpl
mov
imul
cltd
imul
inc
and
cmp
dec
jle
mov
stos
xor
lds
pop
imul
arpl
das
repnz
pop
sub
mov
repz
dec
notb
xchg
sbb
or
mov
test
jb
mov
stos
sbb
popa
stos
mov
inc
sbb
pop
imul
ficomps
add
sbb
sub
imul
add
push
enter
int3
out
and
lea
enter
sub
jbe
mov
sahf
outsb
fs
imul
movsl
mov
int
and
fstps
jnp
adc
pusha
xor
stos
popa
jmp
xor
scas
call
pop
test
sub
jae
lods
mov
mov
cmpsl
xlat
ja
mov
push
stos
ficompl
sub
xchg
cwtl
aam
jbe
in
lods
aad
int3
cld
lea
jmp
ds
mov
push
adc
scas
aaa
fucomi
movsl
xchg
push
fcoml
fldt
pop
pop
imul
call
dec
jne
jl
jmp
mov
push
rcrl
test
pop
js
xchg
fnsave
imul
push
test
stos
cmp
dec
and
mov
decl
icebp
in
xchg
adc
xlat
adc
addl
lds
cltd
leave
sbb
add
mov
sub
fdivrl
adc
mov
mov
fdivr
xor
outsl
dec
dec
sbb
ret
sub
adc
and
jecxz
add
test
jge
shlb
hlt
sarb
dec
and
pop
ljmp
pop
js
pop
jns
jb
adcb
enter
in
jmp
xor
out
add
cli
mov
push
jle
mov
mov
xchg
cltd
pop
mov
stc
jb
insl
adc
push
mov
cmp
adc
popa
out
shrl
cwtl
addr16
mov
leave
pop
fstpl
push
jecxz
out
scas
fcmovnbe
jns
imul
inc
xor
sti
pusha
mov
mov
push
ljmp
frstor
push
jno
cli
inc
gs
test
adc
xor
xchg
cmpsl
pop
jae
push
sub
xor
out
call
movsb
mov
enter
arpl
mov
imul
lock
sarl
lods
jecxz
push
jae
pop
ljmp
das
pop
scas
ja
fisubs
incb
std
das
es
loop
mov
xor
clc
mov
push
jne
cs
sti
fnstsw
dec
aas
aas
xchg
mov
sub
out
xchg
jbe
mov
pop
cmpsl
sbb
stc
jno
jle
fnclex
outsl
stos
dec
negl
pop
dec
insb
fsubs
lock
scas
lock
or
outsl
rep
jge
dec
pop
jnp
fstl
mov
jle
xchg
adc
loopne
insb
pop
notl
pop
mov
cmc
sub
mov
pop
iret
or
mov
out
daa
popf
fbstp
mov
sahf
or
aad
sbb
imul
cmp
xchg
mov
jns
ret
icebp
adc
pusha
sub
adc
or
inc
in
shl
adc
lcall
sbb
mov
test
imul
mov
xor
mov
or
cld
jecxz
gs
scas
mov
out
loop
lret
lods
shl
inc
adc
jg
mov
xor
dec
in
push
mov
mov
jo
mov
add
mov
and
mov
adc
or
cmpsb
in
mov
ljmp
out
notb
sbb
fisubrl
sub
test
in
imul
xor
clc
mov
mov
je
xor
fisttps
add
xor
and
rolb
enter
jne
mov
adc
dec
cmp
or
ja
shll
in
xchg
mov
jle
xchg
cltd
pushf
add
push
testb
mov
xor
xchg
sbb
mov
sbb
divl
push
jl
dec
cmpsb
testl
stc
daa
ret
das
iret
mov
xor
stc
lcall
js
jp
or
outsl
push
pusha
pushf
sub
and
lea
test
aas
mov
cmp
adc
repz
fimuls
mov
test
push
mov
inc
push
out
jns
and
cmp
sub
outsb
gs
sti
int3
jmpw
mov
loope
mov
jne
sarb
les
test
inc
mov
mov
or
stos
or
in
pop
inc
scas
xchg
arpl
ret
xchg
cmp
insb
xchg
sub
sub
mov
fcoms
jle
scas
jle
or
inc
pop
fstpl
sub
pop
ljmp
adc
sub
sbb
aam
xor
inc
lea
push
stos
inc
filds
mov
jl
mov
cmp
and
andb
popa
pop
sahf
mov
loope
loope
rcr
add
fsubrp
imul
int
aad
scas
xor
dec
aam
pop
in
cmp
sahf
mov
pop
mov
cld
lahf
jmp
cwtl
addl
scas
ficompl
lods
inc
fwait
mov
or
xchg
fsubr
cmp
mov
jecxz
inc
and
sbb
or
orl
jl
jo
and
arpl
popf
insb
sub
cmp
xorl
nop
jns
enter
nop
push
jecxz
jmp
mov
add
add
scas
pop
xchg
inc
and
xchg
pop
inc
jb
adc
push
or
subb
cmc
test
popf
cmpsb
pop
lock
in
imul
jbe
movsb
jne
cmp
mov
sti
mov
xor
push
sahf
or
outsb
icebp
rcll
add
je
mov
int3
in
lods
popa
clc
add
lret
mov
pmaddwd
jle
mov
cli
dec
cld
jg
push
dec
jnp
jmp
fld
int
xchg
inc
fwait
nop
mov
fdivs
pop
xchg
adc
or
sbb
dec
mov
and
ds
shrb
mov
xor
lcall
cmpsl
es
movsl
scas
adc
mov
and
inc
rcrb
sbb
out
loop
shll
scas
dec
dec
ja
mov
mov
rolb
daa
or
lret
dec
mov
mul
jecxz
ret
jl
dec
pop
cmp
hlt
sbb
xchg
out
xor
mov
rol
jecxz
sbb
lods
lods
out
std
aad
jmp
mov
jg
popa
inc
mov
add
mov
shrb
cmc
dec
mov
out
insl
xchg
les
ficoms
pusha
repnz
aad
xchg
dec
mov
jne
mov
xor
test
movsl
insb
mov
push
sub
insb
gs
mov
and
daa
mov
mov
push
fnstcw
pop
add
pop
fiaddl
js
popaw
lcall
cmpsl
outsb
jg
sar
dec
imul
mov
and
cmp
push
insb
repnz
cmp
push
dec
push
mov
jbe
outsb
xchg
jmp
jns
daa
xor
data16
sub
add
mov
int3
js
cmp
cwtl
out
and
bound
xchg
dec
dec
sarb
orl
and
push
push
dec
sbb
dec
inc
and
ficompl
and
dec
pop
lea
pop
jno
inc
dec
decl
out
cltd
xchg
loope
fs
cli
inc
gs
xlat
xlat
test
jg
les
insb
push
movsb
jbe
insl
push
shll
iret
xlat
jb
cmp
pop
fsubl
jo
dec
out
dec
pop
cmp
es
test
cmp
mov
sahf
jo
lea
imul
lea
or
test
scas
or
mov
imul
dec
dec
pop
loopne
push
and
cmp
sub
fwait
xchg
dec
add
pop
mov
test
adc
push
ret
jns
iret
ficoms
call
jecxz
stos
popf
jge
mov
or
push
jmp
mov
movsb
jg
jnp
and
jns
test
test
cs
sub
jmp
lret
loopne
cwtl
les
push
xchg
ss
jge
mov
sub
lock
pushf
ss
jmp
jne
mov
pop
push
cmp
mov
jp
out
pop
adc
mov
mov
xor
push
cmpsl
pop
pushf
mov
jmp
push
jb
xor
mov
sbb
es
cmp
in
lahf
call
loopne
add
pop
cmp
pop
pop
pop
and
aas
and
mov
mov
mov
mov
cmpl
inc
xor
aam
jno
inc
push
shll
lds
jno
xchg
mov
cmp
orb
imul
dec
std
rclb
sbbl
mov
xchg
jnp
jge
ficoml
adc
insl
pop
incl
inc
jno
xor
aaa
dec
aam
ret
or
test
mov
andb
and
xchg
ljmp
pop
adc
mov
and
mov
int
sbb
decl
mov
sub
cmp
xchg
mov
sub
push
sti
and
inc
mov
fdivp
rorb
dec
cmp
fnstsw
outsl
pop
push
mov
pusha
lock
sti
test
sub
push
adc
mov
or
outsl
fisubl
pop
lret
dec
roll
shrb
stos
adc
stos
cmpsb
xlat
and
dec
fidivl
mov
add
lock
out
sub
call
fdivrs
das
stos
popa
imul
and
fadds
insl
scas
and
fs
sbb
les
inc
sbb
mov
dec
mov
mov
pop
pop
add
in
jb
jne
push
add
mov
adc
mov
int
insl
pop
in
jbe
leave
cmovbe
push
push
cmp
pop
inc
fistpll
dec
out
ret
mov
and
shrl
dec
cmp
push
mov
hlt
or
movsb
pop
pop
pop
inc
ret
ret
or
movsl
daa
les
pushf
mov
popf
sub
ret
fwait
imul
nop
fucom
inc
mov
push
jnp
or
sahf
jb
in
add
cli
adc
not
dec
mov
iret
inc
jnp
in
out
and
jge
lcall
mov
nop
popa
inc
fcom
mov
cmp
or
sti
movsb
sub
mov
std
pop
sub
lods
ljmp
mov
int
and
xchg
cmovb
shl
sbb
cli
lcall
mov
and
jge
push
cmc
sub
xchg
dec
cmp
imulb
inc
xor
or
jecxz
xchg
add
or
jp
mov
loopne
repnz
add
bound
notb
stos
in
ror
pop
ja
int
pop
mov
or
xchg
dec
push
push
mov
sub
jmp
leave
sub
rcrl
les
cmp
out
ljmp
dec
fcomps
out
ficomps
adc
mov
cmc
jecxz
sub
jns
test
mov
add
fdivrs
arpl
xor
out
cmp
cmp
les
add
stos
stos
push
repz
imul
mov
cld
pusha
mov
into
xor
jno
cld
mov
xchg
push
xchg
fs
sub
dec
push
fmul
dec
fnstcw
jne
insb
ret
ljmp
sti
les
nop
repz
mov
add
rorl
jl
scas
ss
dec
xchg
inc
pop
cs
clc
int3
or
adc
sbb
fisttpll
lret
imul
adc
movsl
jmp
sahf
call
xor
mov
sub
or
lahf
ret
or
int3
and
fcomps
and
jmp
dec
in
or
sbb
dec
xchg
adc
daa
test
ret
lret
dec
jmp
inc
sbb
cs
imul
mov
shr
mov
sub
ljmp
adc
popf
out
or
rcrl
inc
mov
ss
add
cltd
test
jns
cs
test
std
and
dec
xor
inc
xchg
push
xor
leave
int3
daa
xor
lcall
sbb
testb
jecxz
sahf
xor
sbb
jae
mov
push
xchg
xchg
je
or
or
adc
mov
sub
test
mov
subb
xor
sub
mov
adc
sub
loop
add
je
xchg
mov
insb
jae
or
add
add
ror
lret
gs
inc
add
out
jmp
cltd
xchg
movsl
sbb
jne
mov
mov
and
pop
mov
mov
pusha
or
aam
data16
addl
push
adc
stos
sbb
clc
je
fnstsw
lcall
inc
or
xor
arpl
lahf
xor
add
add
sahf
adc
mov
dec
insl
xor
push
mov
sbb
pop
inc
cmc
test
out
imul
dec
and
scas
repz
lret
xchg
adc
mov
idivl
cmp
inc
movsl
out
push
cltd
cmpb
sub
fs
xchg
mov
jmp
inc
jl
mov
es
cmp
loopne
jne
cli
inc
invd
shll
mov
pop
test
call
stos
cmc
pop
call
cmp
cmp
jbe
and
fnstsw
popf
fdivl
cs
cmc
insb
lods
mov
push
pop
push
hlt
xor
cwtl
adc
data16
mov
cld
jmp
push
cmp
pop
das
add
push
adc
mov
leave
push
pop
jle
imul
mov
push
pop
test
icebp
add
stos
imul
mov
std
and
sahf
out
int3
xchg
jp
mov
xchg
xchg
je
inc
inc
lahf
ret
in
outsb
lods
sbb
int
inc
add
adc
ficoml
ss
inc
jge
push
xor
les
xor
test
dec
outsl
pop
or
inc
xor
lahf
lds
lcall
leave
jge
pop
js
jno
mov
adc
scas
xor
ja
je
cmp
xor
inc
mov
sub
xchg
movb
add
pop
jno
jg
xor
jecxz
lahf
addr16
xchg
jns
rcrb
xor
mov
pop
out
test
xor
int
clc
pop
and
pushl
ficoms
push
dec
push
push
fsubrs
sub
repz
scas
orb
or
mov
pop
popa
lahf
dec
movsb
scas
sub
sbb
lock
fldcw
pop
rcrb
dec
mov
xchg
test
and
addl
sub
jne
xchg
movsb
push
out
cmp
adc
movsl
jno
je
mov
mov
fists
scas
dec
add
outsl
imul
jo
out
ss
cmp
and
jne
testl
movsb
dec
clc
or
jecxz
fldt
pop
mov
dec
sti
lock
mov
pusha
ljmp
cmp
push
mov
xlat
sbb
push
std
icebp
adc
sbb
push
sbb
movsl
sub
or
movsb
push
cwtl
push
mov
add
aad
lods
inc
push
adc
and
push
lock
dec
push
push
add
movsl
ja
insb
in
jne
mov
stos
cli
and
ret
pop
and
push
lahf
movsl
xor
sbb
mov
push
int3
stos
xlat
xchg
cli
pop
addl
test
ljmp
andps
sub
jns
adc
es
lret
loope
jne
mov
sti
xchg
inc
xchg
sub
adc
xchg
aam
out
cmp
enter
lret
or
rorb
sub
sub
clc
inc
ds
xchg
movsb
and
pusha
push
lahf
sbb
popa
movsl
jg
nop
dec
xlat
xor
mov
insl
stos
cmp
nop
clc
call
xor
popf
leave
in
push
and
into
das
scas
xchg
xor
das
push
lcall
or
shll
and
cmpsb
jg
cmp
xchg
and
stos
mov
pop
mov
cltd
jae
xchg
sub
xchg
daa
inc
cmpsb
notb
cmp
fstl
dec
mov
cli
and
cmc
shrl
pop
daa
cmp
sbb
out
mov
mov
add
dec
pop
adc
fmul
enter
jbe
mov
inc
ret
add
mov
mov
pushf
shrb
cmovne
push
fnstsw
inc
jecxz
push
imul
pop
dec
imul
test
aad
adc
in
leave
xchg
jg
fcoml
adc
insb
mov
idiv
bsf
jo
jo
push
lods
push
insl
and
sar
aaa
mov
cmp
xor
cmpsl
pop
and
pusha
in
pop
lock
xor
and
aaa
mov
cmpsl
movsl
insb
or
push
rorb
xchg
xchg
dec
xchg
and
loope
pop
lods
ret
mov
shlb
ret
fisttps
jle
and
popf
xor
stos
push
sbbl
out
enter
push
cmc
jne
sbb
mov
jmp
insl
xor
iret
dec
mov
jp
pushf
cmp
fildl
fildl
mov
idivb
jb
stc
fistps
fmull
scas
xlat
sub
xchg
fs
jge
inc
push
mov
std
adcl
dec
mulb
sub
call
push
mov
mov
push
shlb
sbb
jge
cltd
jno
dec
test
pop
jle
in
xchg
out
sbb
stc
xlat
jl
dec
std
add
cltd
sti
dec
leave
test
sti
inc
adc
mov
bound
pop
movsb
insl
xchg
cwtl
fwait
mov
or
mov
and
or
jo
stos
enter
aas
mov
jns
inc
aaa
movsl
cmpsl
lds
adcb
int3
imul
and
jns
push
adc
sbb
out
jae,pn
xor
jnp
mov
int
or
stos
dec
stc
sub
cmp
xchg
mov
sbb
fistps
xchg
in
xchg
mov
std
notl
imul
add
push
rcr
orb
cmpsb
rolb
xchg
fstp
in
hlt
mov
adc
icebp
lds
jl
or
sar
adc
leave
rcrb
xchg
movsb
in
lea
into
push
movsl
dec
pop
js
dec
inc
cld
add
arpl
mov
in
fisubrl
add
cmp
addr16
setbe
mov
jno
jnp
jmp
popa
mov
or
mov
sbb
aad
sub
pusha
repnz
ljmp
popf
cmpsb
loopne
pop
dec
push
add
adcl
outsb
inc
mov
dec
and
and
sub
mov
popa
sti
lahf
push
inc
adc
ja
sti
push
mov
stos
xor
repz
jno
adc
mov
lahf
adc
or
jns
aad
jle
mov
push
mov
lods
adc
mov
fcomp
dec
fiaddl
mov
cwtl
mov
scas
jle
dec
or
imul
push
out
or
add
lret
xor
fcomps
mov
jg
and
xor
cmp
sub
loopne
sti
dec
clc
in
cmp
push
mov
lds
mov
dec
icebp
popa
shrl
filds
das
push
aam
in
sbb
das
ds
and
or
jnp
mov
cmpsl
clc
add
scas
stos
int
pop
je
pop
mov
and
negl
stc
mov
enter
mov
hlt
lods
mov
adc
and
ljmp
cld
jne
or
js
push
shlb
sbb
in
push
jecxz
fsubrp
cmp
mov
xchg
js
pop
pop
insb
and
jmp
movsl
dec
orb
repnz
rorb
push
popa
out
xchg
in
mov
cmp
icebp
or
out
cwtl
add
xchg
out
js
fadds
rcl
daa
cmpsl
into
cli
lods
add
add
cld
mov
push
jmp
pop
mov
or
push
inc
mov
jns
aad
test
lea
mov
inc
ds
jbe
mov
icebp
adc
fnstsw
jmp
sti
aaa
lods
addr16
mov
fwait
mov
test
add
aaa
dec
pop
call
jp
in
mov
leave
fmuls
sbb
lods
mov
pop
xchg
ja
in
fistpll
sub
xchg
retw
xor
inc
das
pop
mov
adc
inc
scas
pop
hlt
call
int
pop
int
nop
pop
jge
dec
pop
stos
inc
repnz
lahf
fiaddl
cmp
rclb
aad
push
jmp
divl
xchg
cmp
ret
int
aad
jg
sbb
aas
cmp
popa
stos
imul
add
rolb
xor
and
cmpsb
mov
jne
shlb
mov
iret
mov
dec
and
cmpsl
add
repnz
in
push
push
or
mov
push
or
dec
rorb
dec
add
pop
cmpsl
cltd
je
call
int3
adc
sub
out
rorl
pop
mov
bound
xor
mov
or
add
add
sbb
outsb
cmp
jae
cmpsb
movups
adc
or
popw
call
lcall
add
fwait
shll
add
or
in
pop
sti
add
xor
mov
mov
xchg
or
jecxz
fnstcw
xchg
mov
mov
test
add
push
mov
and
leave
daa
outsb
mov
cld
mov
xchg
sbb
jb
mov
pop
xchg
pop
negb
inc
aad
popa
dec
push
leave
lods
addb
ret
es
jno
hlt
mov
mov
push
add
jne
xchg
insl
cmpsl
adc
sbb
fsubl
jne
or
insb
xchg
adc
int
jecxz
and
add
rorl
call
or
xor
pop
inc
aas
arpl
into
inc
insb
cmp
cmp
outsl
stc
ror
mov
dec
daa
jno
sub
push
in
sub
je
orl
aam
xchg
ret
cmp
sub
mov
out
inc
repz
jnp
enter
dec
push
mov
add
mov
int
jl
pop
pop
leave
jbe
or
sub
stc
mov
cmp
xchg
dec
pusha
dec
rorl
cmp
dec
mov
scas
test
pushf
push
push
cmc
push
arpl
ret
cmp
lods
mov
iret
cmp
or
xchg
xchg
in
fstp
xchg
subb
xchg
inc
push
jns
hlt
inc
jno
or
xor
mov
cmpb
test
xchg
push
movsl
fbld
dec
sarb
mov
decb
movsl
xchg
mov
ja
ret
sub
decb
imul
popf
inc
aad
lods
popl
sub
inc
push
jge
mov
jecxz
dec
sbb
fs
outsl
mov
jecxz
adc
adcb
cmp
sub
or
push
add
jge
addl
shr
adc
xor
dec
push
jns
fisttps
mov
movsb
loope
or
enter
cmpsb
sbb
icebp
gs
bound
adc
mov
or
mov
insl
cltd
loopne
push
lods
pop
lret
sub
stc
mov
stos
nop
lds
inc
adc
xchg
ror
dec
gs
lret
dec
inc
adc
cmc
and
in
sbb
push
pop
scas
mov
stos
mov
out
les
fdivl
arpl
pop
jmp
mov
loopne
push
movsl
inc
shlb
jg
lret
push
sahf
lea
dec
lcall
iret
into
sbb
sbb
test
cld
testb
clc
imul
dec
popf
fmuls
mov
fisttpll
adc
fwait
pushf
and
arpl
mov
and
arpl
sbb
lock
divb
xchg
rcrb
leave
dec
push
sbb
mov
sub
aam
cmp
sahf
rcrl
jno
xchg
push
outsl
add
xlat
into
and
and
xor
jl
sbb
repz
cli
xor
dec
xor
or
dec
mov
pop
test
cmp
ud2
pop
push
or
jecxz
leave
gs
dec
mov
adcl
jecxz
imul
sub
rcrb
ljmp
fwait
xchg
mov
mov
call
mov
daa
fsubl
aad
xor
jbe
xchg
mov
aad
push
std
rorb
push
inc
ret
ret
push
data16
mov
sbbb
sti
sbb
pop
sub
add
pop
pop
imul
arpl
pop
jp
and
dec
shl
xchg
in
xchg
out
andl
aaa
fcmovb
lcall
mov
stos
out
fisttpll
add
popf
adc
jle
jno
mov
mov
scas
pop
pop
scas
imull
xor
movsb
setg
lret
ljmp
push
inc
push
sbb
jae
add
outsb
xlat
movsl
repnz
pop
pop
decl
and
xchg
notl
andl
cltd
jge
push
mov
cmp
test
mov
add
pop
lods
mov
fistpl
xchg
add
ret
jp
je
js
and
sbb
inc
inc
dec
mov
xlat
sub
or
xchg
incb
xchg
dec
sub
add
xlat
mov
jnp
lahf
cs
bound
inc
mov
jecxz
add
daa
cmpsl
pop
add
aad
in
add
mov
cltd
push
dec
rcrl
dec
insb
dec
loop
imull
cltd
sbb
sbb
cs
in
or
mov
push
xor
imull
shrl
inc
cmp
mov
add
fsts
movsb
dec
jo
repz
sub
int
stc
mov
sbb
adc
dec
in
test
xchg
cmp
xor
push
shrl
mov
cli
insl
sbb
xlat
push
add
sub
sbb
jecxz
ss
inc
push
cltd
ds
sbb
lret
cmpsb
jg
sahf
cwtl
inc
push
pop
andl
pusha
mov
xor
add
sub
mov
add
inc
push
mov
inc
ja
outsl
sbb
in
adc
mov
data16
mov
xchg
sbb
in
stos
in
aad
mov
adc
mov
or
loop
int3
mov
icebp
xor
jle
mov
mov
xchg
cwtl
xchg
cmpsb
cmp
movsl
mov
lcall
loope
cmp
pop
cwtl
scas
sub
lea
xchg
cmp
add
repnz
popa
fstpl
hlt
test
add
or
adc
jmp
fcmovnbe
seto
and
les
roll
pop
loop
cld
add
cs
xor
in
std
push
xchg
jbe
jbe
sub
loop
mov
mov
lea
fisubs
or
stc
test
repnz
aas
and
mov
pop
les
rcpps
and
jae
icebp
mov
mov
xor
into
inc
inc
sbb
movsl
imul
add
int3
pop
lods
inc
pop
and
xor
fistpl
movsb
ret
pusha
push
mov
jae
aas
sub
mov
loop
mov
or
xchg
jns
imul
popa
mov
xor
imul
loopne
test
bound
std
sbb
bswap
sub
mov
bnd
jl
dec
jg
clc
adc
add
dec
fisttps
vminps
test
subl
lret
or
add
enter
or
andl
stos
mov
cmp
cld
shll
adc
shrl
or
xchg
mov
popf
cmc
jno
xchg
lcall
hlt
jne
fstpt
mov
xchg
stos
cmpsl
pusha
pusha
mov
xor
das
cmp
mov
add
movsl
xlat
iret
and
and
dec
mov
mov
push
mov
add
pop
cmp
mov
mov
call
int
sub
jbe
repnz
push
inc
adc
jo
rcrb
mov
fimuls
movsb
inc
and
and
out
dec
call
je
lods
gs
data16
dec
xlat
movsl
xor
jae
mov
xchg
loopne
pop
dec
pop
ds
fildll
xor
adc
jg
pop
or
inc
in
in
psubb
cmpb
jg
xchg
test
out
pop
sbb
test
mov
xchg
popl
lahf
subb
stos
adc
xchg
fdivr
bound
popa
xchg
pop
jnp
mov
push
aas
xchg
jp
jle
lret
and
mov
push
in
in
cmpsl
ror
jbe
sahf
jnp
fists
cli
pop
xchg
jl
ds
and
popf
notl
icebp
fistpll
push
dec
adc
pop
jb
lcallw
adc
addr16
mov
inc
test
ja
jg
mov
dec
into
loope
pop
fnstenv
popf
ret
shl
sbb
sbb
mov
pop
push
mov
fildll
je
push
loop
cli
mov
sbb
cmpsb
xlat
in
or
push
mov
add
mov
mov
or
mov
fmulp
orl
dec
and
dec
fdivl
rcrb
sub
cmp
dec
add
inc
xchg
xchg
inc
hlt
aas
int3
shl
stos
lcall
psrlw
dec
mov
ds
cmp
dec
sub
movsl
mov
lret
adc
sbbl
mov
arpl
sbb
mov
ftst
mov
pop
cld
ja
iret
sbbb
sbb
push
push
cmp
roll
test
rorb
enter
sub
leave
ja
mov
data16
jle
andl
adc
adc
sub
inc
fdiv
ljmp
cmp
mov
dec
lcall
lods
sub
pushf
rcrl
jmp
mov
mov
add
ficompl
sti
es
mov
ret
and
and
mov
cmp
test
push
es
pop
or
ja
push
sbb
stc
jns
xchg
mov
adc
loope
lcall
pop
xchg
push
test
daa
notl
iret
rol
mov
in
xor
sbb
xchg
mov
pop
add
mov
inc
mov
in
mov
int3
mov
fiaddl
dec
push
cmpsb
mov
cmp
sbb
movsb
mov
fwait
mov
inc
add
loope
fs
dec
xor
adc
in
dec
out
jle
jae
jae
mov
insl
xchg
sub
fst
or
and
pushf
pop
jg
ljmp
sub
orb
cmp
dec
bound
in
push
jp
test
lret
mov
sbb
pop
mov
xchg
lcall
test
dec
lret
sbb
inc
scas
and
jo
in
mov
roll
push
mov
aad
flds
add
out
fsubl
pop
jle
repnz
out
lods
icebp
cmc
xchg
aas
mov
and
inc
fs
cmp
ret
int3
popf
shl
daa
fistps
repnz
aas
lods
daa
and
ss
push
inc
inc
sbb
jg
mov
movsb
fs
lds
mov
stc
fistpll
mov
push
push
cmpsb
std
cltd
push
scas
ficomps
cmp
imul
cwtl
les
cmp
mov
popa
dec
cltd
add
cltd
xchg
pop
mov
xchg
das
and
sahf
lods
or
jo
ret
pop
adc
mov
xchg
insl
xorb
pop
or
int3
int
sbb
dec
inc
inc
push
lcall
and
int
jecxz
sub
aam
mov
adc
fimuls
ret
test
lods
xchg
mov
data16
cltd
testl
lret
loop
into
sbb
je
inc
lds
xchg
test
cmpb
ljmp
and
out
jns
movsl
sub
ret
pop
mov
inc
add
mov
insl
jo
push
pusha
je
test
xlat
aaa
jge
mov
xchg
pop
lret
test
les
and
into
push
pop
dec
pop
or
aas
lods
ja
rorl
mov
xor
adc
sub
xor
and
inc
mov
sti
in
cmpsl
or
ffree
jae
lcall
cli
dec
dec
cmp
mov
adc
inc
movsb
xchg
push
out
sbb
mov
mov
dec
ret
jg
xor
leave
sahf
sub
dec
sub
mov
filds
push
push
pop
ljmp
aad
cltd
call
xor
orb
push
mov
and
in
repz
and
xchg
ret
sbb
lds
pop
hlt
inc
add
rorb
cmp
imul
sub
cmpsl
cmp
sub
js
sbb
insb
add
pop
mov
andb
lcall
inc
sub
inc
xchg
jae
std
dec
pop
dec
int
dec
notl
cmpsb
outsl
inc
test
stc
pop
fstl
incb
jmp
popf
cltd
mov
jns
xchg
jo
out
dec
push
jp
mov
cmp
add
cmp
and
pop
inc
jmp
ds
sarb
dec
cld
mov
pop
addr16
mov
repnz
inc
shlb
jns
or
addr16
test
scas
jl
shl
add
dec
mov
mov
pop
jl
inc
dec
and
xchg
jnp
sbb
jo
je
mov
cli
mov
push
push
packssdw
repz
daa
testl
insb
fcmovnu
fldcw
push
push
adc
pop
add
xchg
leave
cmp
shl
sub
mov
sbb
lock
popf
xor
scas
dec
cmpsl
xor
dec
inc
cmp
mov
mov
sarl
divb
aam
sub
xchg
fld
loope
nop
xchg
cmpsl
lcall
orl
cld
push
push
pop
pop
aad
je
test
push
lret
ret
rorl
mov
out
outsl
xchg
int3
mov
xor
cmpsl
out
lret
sbb
push
in
mov
dec
jno
popa
pushf
repz
xchg
push
pop
adc
rorl
mov
lds
jnp
loope
add
movsl
setl
pop
in
imul
test
jnp
push
mov
das
add
push
ljmp
ficompl
nop
dec
testl
insb
pushf
sbb
dec
lock
sbb
test
cmp
sbb
mov
fildll
dec
add
xor
icebp
push
jmp
sahf
fstpl
mov
gs
dec
pop
aaa
jb
test
mov
inc
sub
enter
and
and
je
dec
adc
xchg
dec
mov
and
jno
scas
cmpsl
fildl
mov
lret
push
repz
add
mov
icebp
and
out
call
int3
cmovp
inc
jg,pn
and
pop
jg
pushl
jnp
push
dec
call
in
mov
and
bound
nop
fldz
inc
int3
inc
pop
cli
add
xor
mov
fildl
stos
push
shl
xchg
jnp
hlt
arpl
xor
inc
mov
lea
sete
pop
addb
mov
and
mov
dec
bound
mov
lods
test
adcb
jmp
push
pop
jp
mov
pop
pop
fiadds
clc
mov
pop
test
rclb
lds
rcl
fidivl
addr16
sbb
mov
push
imul
lret
lock
mov
fs
scas
mov
sbb
xor
xchg
mov
jg
in
mov
imul
nop
cmp
cmp
sbb
add
jnp
mov
ret
imul
addl
ficomps
sub
xchg
xor
pop
in
test
lds
ret
sbb
stos
pop
inc
xchg
inc
or
sbb
push
add
cmpsb
call
inc
xchg
movsb
dec
dec
gs
xchg
addr16
push
clc
mov
aas
aam
push
pushw
jmp
fstpt
out
das
js
flds
lods
add
js
call
outsb
pusha
adc
int3
mov
pop
add
dec
fcomip
rclb
jae
xor
ljmp
push
imul
push
clc
in
inc
aas
cwtl
adc
bound
mov
cmp
cld
std
sti
or
shlb
mov
and
sbbl
cmpsb
ljmp
inc
sub
test
xor
pusha
xor
das
and
das
movsl
lcall
cmp
lea
dec
adc
test
dec
int3
dec
lods
pop
fwait
addr16
mov
mov
sbb
mov
and
mov
fwait
cmc
sub
bound
dec
jno
daa
push
hlt
sub
js
clc
inc
adc
add
sub
rorl
pusha
loope
mov
or
sub
scas
adc
xchg
gs
mov
push
or
push
out
add
mov
mov
mov
pop
in
mov
aaa
lret
mov
lahf
xlat
inc
cmpsb
out
pushf
imul
xchg
push
out
and
mov
iret
cmp
lods
out
mov
lods
xchg
add
fstpt
xor
jmp
fwait
mov
scas
stc
jecxz
mov
nop
mov
rcl
aas
inc
sbb
fwait
add
movb
sub
xchg
orb
test
sub
xchg
insb
orl
les
xchg
and
stos
imul
jno
add
repnz
jns
dec
fsqrt
xor
xchg
movsl
mov
adc
cmp
pop
pop
xchg
xchg
cmp
cwtl
scas
and
inc
mov
cmp
inc
jmp
ss
sub
cmp
popa
push
pop
ret
sbb
jae
call
orb
lds
scas
inc
iret
push
ret
test
or
mov
mov
inc
push
mov
cmp
xlat
or
cmp
sahf
shll
stos
gs
mov
cmp
lret
cmp
and
push
imul
pop
and
test
insb
pop
jae
pop
jns
iret
lret
dec
and
mov
cmp
in
enter
ja
lods
adc
dec
inc
jne
or
stos
sbb
pop
mov
dec
mov
inc
ljmp
movsb
mov
mov
fisttps
mov
arpl
push
and
lahf
cmc
push
sbb
pop
insb
scas
jno
push
popf
int
add
sub
cmp
add
fsts
inc
cmp
mov
pop
lahf
push
add
je
dec
adcl
imulb
in
imul
mov
sti
aas
dec
loopne
test
stos
sbb
btc
shrl
mov
jp
mov
aad
and
aam
inc
jg
mov
clc
ss
push
loop
inc
dec
fwait
mov
mov
sub
pop
insl
and
icebp
mov
pop
cmp
call
push
mov
fdivrl
lods
pop
insl
jle
aas
mov
pop
add
push
je
jmp
push
aaa
sub
sub
or
fisttpll
ljmp
leave
es
jb
mov
cmpsl
mov
push
or
in
daa
sub
xchg
pop
int3
leave
fdivs
pop
cmp
into
std
cmpsb
shrl
inc
dec
out
rol
jmp
dec
dec
or
mov
lcall
and
add
fisubl
sub
test
js
sbb
stos
pop
aaa
inc
jns
xchg
inc
aam
in
pop
ljmp
jg
xchg
xor
jb
outsl
sahf
negl
leave
pop
out
pop
cmc
dec
and
sub
pcmpgtb
pop
push
outsb
sub
mov
jecxz
add
xchg
sbb
testl
xchg
imul
adc
and
adc
sbb
bound
sbb
mov
sahf
mov
and
or
cs
int
dec
sti
xlat
test
das
shlb
stos
inc
test
bound
addb
pop
xchg
or
mov
xchg
insb
add
xchg
pcmpgtb
mov
repnz
mov
push
fildll
sub
fmul
fdivrl
add
dec
mov
mov
loope
hlt
dec
inc
aas
fldl
roll
pushf
cmp
sahf
stc
sbb
loop
stos
mov
ljmp
mov
lea
in
repz
pop
mov
stos
inc
push
push
lods
std
sbb
mov
xor
hlt
push
sub
int3
rcll
cmpb
push
sbb
mov
jno
push
xchg
add
call
std
cltd
mov
inc
push
lret
or
lcall
shrb
jb
divb
xor
call
jg,pn
inc
mov
cmp
and
cmpsl
enter
sub
fwait
mov
xor
mov
cltd
cmp
shlb
sbb
xchg
or
stc
jo
stos
roll
sbb
mov
lods
popf
imul
xor
in
shrb
iret
sbb
cmp
and
test
inc
cpuid
sbb
stos
mov
jnp
push
mov
iret
push
pop
adc
inc
int
sub
andl
repnz
shr
insl
xor
mov
das
mov
loope
push
cmc
cmpsb
mov
sbb
cs
pop
outsl
pop
mov
repz
xchg
jge
xor
jg
iret
push
rcll
js
repz
and
rcll
jp
and
mov
push
mov
rolb
int
sub
test
int
xor
nop
pop
push
xor
jmp
jle
sahf
fldl
cltd
hlt
xchg
xorb
nop
cmc
gs
mov
inc
sbb
lea
jge
movsb
out
push
rclb
les
fldt
dec
cli
mov
pop
ds
mov
or
or
int
cs
inc
pop
mov
mov
aam
push
inc
push
stos
addb
outsl
and
fmul
push
test
pop
fisubs
faddl
dec
jmp
sub
arpl
cwtl
rorl
lret
test
adc
lret
adc
ja
icebp
sbb
pop
cmp
and
xor
lret
or
adc
jp
xor
int3
mov
iret
inc
fnstsw
add
jns
pop
jbe
mov
push
jle
sti
sbb
je
jo,pn
outsb
scas
push
aam
adc
cltd
fidivrl
sub
inc
mov
popf
jo
sub
repz
das
pop
xor
mov
dec
xor
pop
jne
int3
jo
jge
dec
xchg
fsubl
insl
mov
hlt
mov
movsl
add
fnstsw
jne
inc
rcpps
mov
stos
ja
or
xor
mov
mov
popf
add
ds
out
setl
jbe
mov
xchg
gs
arpl
push
jo
out
adc
ds
setbe
test
mov
and
xchg
push
rolb
mov
sahf
push
jns
push
pop
and
rol
nop
inc
leave
in
jmp
xor
dec
mov
hlt
iret
aaa
cmp
stos
shlb
xor
in
xchg
push
mov
cmc
mov
data16
dec
inc
movd
hlt
pop
inc
mov
cmp
fnstcw
iret
xchg
ja
pop
lret
push
add
pop
test
lahf
xchg
xor
xor
nop
xor
gs
loope
xchg
test
outsl
and
xchg
pop
repz
sahf
movsl
cmp
jb
mov
cmp
add
mov
stc
imul
dec
pop
adc
push
sbb
lret
mov
inc
jl
cltd
lret
pushw
ja
in
push
xchg
pop
pop
cmp
insb
dec
and
scas
sbb
push
inc
stos
add
push
ror
mov
popf
not
xchg
mov
and
shll
je
push
push
push
pop
cmpl
and
shll
xchg
or
pop
and
test
xor
repnz
inc
xor
push
add
out
mov
dec
jmp
mov
sbb
sbb
pusha
xor
sub
push
mov
stc
pop
ja
xchg
nop
mov
mov
aaa
fistl
fidivl
mov
lcall
mov
mov
push
addr16
out
xchg
cmp
out
inc
testl
mov
nop
lahf
mov
inc
xor
mov
lods
lret
pop
fstpl
dec
jge
or
or
call
cmp
or
pop
pop
or
adc
push
fstl
sub
cltd
jp
into
sahf
mov
xchg
inc
mov
xchg
push
ret
fucom
mov
into
adc
mov
mov
outsl
aam
inc
mov
das
inc
lea
mov
mov
fldenv
mov
std
cmpb
ds
es
add
popf
jae
xchg
and
out
pop
inc
pextrw
cmp
pop
jge
or
cmpsl
sub
pusha
out
add
xchg
clc
dec
xor
mov
pop
xor
inc
rorl
cli
push
int3
or
stos
mov
enter
xchg
sub
mov
jae
adc
jb
loope
sub
por
aam
adc
xor
mov
fisttpl
push
int
sti
test
dec
test
or
out
sbb
cs
or
aam
inc
lods
jge
and
loopne
sarb
out
cmp
fidivrs
jmp
add
lret
pop
ret
mov
mov
shlb
cmc
bound
jo
out
imul
sub
xchg
movsl
cmc
pushf
repnz
or
cmc
add
jge
xchg
sub
or
jp
jp
adc
and
or
loope
push
shlb
xor
push
ljmp
and
and
lds
int3
in
sarl
inc
cmp
xchg
stc
mov
xor
push
xor
fdivrs
enter
iret
sub
das
xchg
out
test
ljmp
stos
push
scas
into
sahf
inc
sub
cmpsl
lea
pop
outsl
jg
mov
dec
mov
lock
sub
repnz
arpl
mov
inc
test
repnz
ret
popf
mov
inc
inc
inc
and
xchg
sbb
lret
js
out
xor
add
mov
fucomip
or
jns
dec
repz
mov
xor
outsl
inc
inc
xchg
jbe
int3
lcall
pop
mov
fisttpll
push
mov
and
in
add
subb
cmpsl
negb
fucom
inc
fwait
xchg
push
mov
int
inc
or
and
cli
int
cld
cltd
ljmp
push
xchg
stos
mov
pop
rcl
fisttpll
add
mov
lret
dec
dec
mov
rcl
mov
popa
loop
idivl
imul
sub
cwtl
cmc
xchg
clc
xchg
ja
das
pop
xchg
pop
iret
stos
mov
shll
inc
clc
lret
popa
sahf
xchg
adc
aad
sub
mov
ja
movsb
mov
rorl
sbb
or
jnp
mov
popl
in
mov
daa
dec
dec
mov
sbb
out
test
or
and
in
inc
pop
std
push
icebp
push
imull
les
daa
rcl
scas
push
shll
pop
insb
sbb
in
cwtl
inc
adc
cs
mov
in
jle
fdivl
inc
pusha
insb
sub
aad
ljmp
push
data16
cmp
insl
mov
mov
add
sub
call
mov
jns
push
add
mov
push
adc
sbb
roll
imul
cmp
jp
fnsave
inc
xor
inc
jbe
mov
ds
bound
insl
imul
popf
xor
fcmovne
push
xchg
sub
xor
jb
dec
into
fisubs
notl
sub
mov
push
mov
mov
xchg
push
mov
inc
push
inc
xchg
sbb
rcrl
fiaddl
in
scas
add
sub
inc
sub
lcall
pop
mov
or
push
jecxz
or
mov
mov
iret
push
cmp
addb
lret
icebp
sub
and
fcmovne
js
pop
mov
fsts
lds
adc
hlt
int3
out
or
out
loopne
cmp
in
push
adc
imul
add
add
xchg
push
out
inc
in
sub
mov
addr16
fldcw
js
fildll
dec
xchg
inc
out
ret
sarl
mov
sub
es
vrcpss
pop
mov
in
push
lret
push
inc
outsb
adc
jmp
cwtl
inc
adc
outsl
aam
pop
mov
and
adc
or
repz
jb
jmp
push
stos
mov
das
cmp
jl
dec
negb
pop
cmpsl
outsb
test
dec
ja
mov
cld
mov
into
fnstsw
adc
sub
xchg
inc
iret
addr16
or
sbb
dec
sbb
mov
shlb
mov
pop
and
call
sarb
jne
idivl
lds
arpl
cmp
jbe
cmpsl
aad
ja
addr16
jle
dec
sti
lock
cltd
iret
mov
lods
adc
gs
add
adc
jl
push
inc
movsl
addl
fimull
mov
ret
pop
push
xchg
mov
lahf
adc
mov
cmpsl
cmp
xor
les
inc
mov
adc
loop
jp
nop
inc
cmp
inc
rcrb
cmp
in
push
sub
or
add
rcl
adc
dec
mov
imul
xchg
or
dec
xor
imul
or
mov
ffree
adcb
gs
nop
cmp
add
jns
dec
xchg
and
mov
adc
lahf
jmp
mov
sub
push
adc
push
mov
and
mov
aad
mov
fisttpll
inc
dec
in
cli
les
mov
jmp
cmpsl
fstl
dec
inc
adc
movsl
pop
mov
out
stos
inc
cli
sub
loopne
sub
add
das
add
sbb
xor
inc
ret
dec
and
aam
movsl
lret
push
gs
scas
pop
sub
mov
pop
gs
cmpsl
xchg
mov
lcall
sbb
repnz
mov
fisubs
jb
dec
hlt
add
add
hlt
pop
je
in
xor
add
mov
js
arpl
rclb
dec
aas
pop
xchg
inc
mov
sub
mov
loop
pop
shl
add
loopne
add
in
push
cld
fwait
jno
out
hlt
xor
dec
xor
mov
into
je
xchg
sbb
jle
scas
jl
jmp
add
inc
pushf
sub
sub
cmp
je
inc
jo
pop
xor
or
ficoms
cmp
jp
push
aaa
out
cmp
mov
movsb
pop
ret
sbb
dec
pusha
add
je
push
xchg
mov
xor
fs
mov
sbb
bound
add
jb
mov
outsl
lret
mov
push
stos
and
test
dec
pop
fwait
cmpsl
adc
loop
sub
inc
popa
push
repnz
mov
xchg
xchg
mov
xchg
mov
scas
bound
ret
inc
pop
jb
dec
sub
push
jg
loopne
jge
rorb
stos
test
cmc
shlb
nop
jno
cmp
popa
push
mov
xchg
lods
test
adc
imul
cmp
jae
sub
int3
mov
test
xchg
or
scas
mov
sbb
pop
mov
cmp
outsb
fisttps
push
cltd
push
cld
adc
lods
cmpl
xchg
ss
shll
sti
ss
stos
rolb
sahf
mov
cmpsl
popf
dec
xchg
sub
jmp
and
and
mov
cmp
jne
sahf
or
sbb
stos
or
lahf
repz
adc
xchg
sbb
cmp
inc
xchg
sbb
dec
out
or
and
outsb
pushf
push
lods
inc
ja
jmp
or
js
je
mov
jp
aad
adc
jmp
pop
repz
pop
lcall
sub
mov
bound
sub
push
andb
push
push
out
jbe
scas
and
pop
into
sbb
jmp
cmp
stos
aas
or
push
mov
orl
xchg
pop
idivb
mov
cwtl
and
dec
add
shlb
adc
sub
loop
subb
jmp
and
pop
mov
xlat
mov
out
lods
pop
pop
loopne
adc
mov
pop
popf
adc
pop
dec
je
sub
bound
pop
cli
aad
imul
adc
push
stos
inc
pop
divb
inc
ljmp
sbb
bound
mov
out
mov
es
dec
add
mov
inc
mov
jnp
inc
popf
and
in
pop
add
rolb
aaa
or
pop
ds
dec
loop
inc
cwtl
lret
movsb
lret
iret
imul
das
adc
jnp
mov
push
and
or
jae
inc
pop
test
stc
lods
xchg
ficompl
mov
xchg
cmpsb
cmp
in
inc
pop
push
shlb
icebp
movsl
hlt
lods
mov
mov
cmp
shl
xor
adc
or
movsb
mov
and
pop
push
mov
mov
shrb
lret
cmp
sbb
or
and
call
and
mov
dec
lock
fidivl
xor
sbb
call
mov
push
jbe
push
push
pop
outsl
in
pop
jae
cwtl
orl
negb
dec
and
xor
dec
xchg
mov
mov
cmp
addr16
cmp
loop
aaa
sarb
inc
mov
pop
imul
inc
sti
sbb
test
lea
cli
xchg
std
lret
lcall
repz
mov
pop
aaa
fnsave
je
push
pushf
into
or
bnd
push
jecxz
pop
add
mov
sub
scas
jmp
out
or
stos
lds
add
cs
and
lahf
bound
test
lock
je
xchg
fmuls
adc
mov
mov
lea
filds
fsubr
out
push
push
and
int3
lret
or
sbb
push
shlb
push
xchg
in
lods
movsb
jmp
popf
sbb
lds
aad
cld
inc
rcr
xor
notl
cmp
roll
mov
movsb
or
dec
cmpsl
aas
jle
cmp
fwait
inc
push
lods
and
inc
push
das
loopne
add
fs
iret
xchg
ja
sbb
pop
movsb
fiadds
cs
adc
push
test
cmp
push
test
frstor
stc
lods
out
into
mov
push
mov
pop
das
rcr
out
outsl
test
jnp
cmp
stos
jle
add
in
shrl
into
jmp
out
xchg
fcmovnbe
es
xor
jle
nop
popa
push
or
jne
inc
mov
add
mov
sti
stos
movsl
test
movsb
movsb
shll
inc
cltd
insb
inc
test
add
or
lahf
sbb
sub
loopne
pusha
cwtl
cltd
add
mov
shrl
mov
inc
lret
negl
nop
into
mov
sbbb
sub
jnp
imul
jge
imul
mov
rcrl
jmp
inc
xchg
stos
sahf
incl
jno
lret
xchg
int3
cs
test
push
pop
decl
pop
mov
jmp
rolb
outsb
test
push
mov
pop
xchg
adc
lahf
cmp
mov
cltd
jnp
adc
insl
jmp
jno
dec
lahf
loopne
pop
mov
dec
mov
outsl
cmp
xchg
xchg
dec
dec
pushf
rclb
or
and
mov
loop
pop
mov
ret
lcall
lahf
lret
mov
aas
test
push
mov
pop
insb
clc
lcall
jl
adc
mov
mov
push
mov
mov
add
call
dec
pop
arpl
adc
cmp
sbb
mov
dec
and
shrb
sahf
ret
lahf
jo
mov
nop
sub
in
xchg
dec
xchg
lret
int
inc
sbb
sub
xchg
sbbl
mov
adc
out
stc
sub
jae
push
mov
test
cmpsl
push
nop
daa
test
dec
test
inc
xchg
cltd
jbe
and
add
rcl
xor
cmc
fldenv
mov
adc
fiadds
dec
stc
sub
xchg
rolb
iret
adc
jle
xchg
pop
mov
test
ficoms
sbb
jge
ds
mov
movb
into
cli
mov
bound
aam
dec
lahf
divb
movsb
jge
insl
mov
test
mov
shll
xor
in
std
xchg
or
jl
cli
and
xor
fcmovne
pop
push
mov
mov
pop
xchg
adc
inc
add
sahf
shll
cmpsb
outsl
mov
aas
into
xor
sbb
sahf
mov
loopne
push
inc
sub
jo
repz
outsb
rcrl
scas
lds
push
test
adc
inc
lock
xor
decb
mov
fwait
lock
xchg
mov
mov
repz
cli
sahf
xor
mov
stc
xlat
mov
test
stos
mov
imul
xor
scas
sub
paddsb
mov
add
imul
xchg
cmp
sbb
adcb
cs
repz
loop
fucom
dec
int
jle
mov
mov
jle
pop
cmp
aad
nop
push
or
ret
cmp
sub
out
leave
cmp
data16
xlat
push
pop
jecxz
cmp
jl
cmc
mov
sub
aad
mov
pop
jge
out
dec
bound
cmpsb
cld
lock
mov
pop
aad
dec
push
ss
fwait
xor
sbb
jge
bnd
jg
add
shr
mov
adc
pop
in
movsb
jecxz
orps
pusha
idivb
dec
xchg
insl
pop
mov
movsb
sti
lods
int3
repnz
xchg
cs
pop
dec
sub
mov
mov
mov
mov
mov
mov
lcall
pop
and
xchg
cltd
insl
mov
dec
adc
cmc
lahf
ret
fabs
mov
loope
jg
lahf
fisubs
into
mov
insb
sub
insb
jae
push
shll
lea
push
mov
sahf
jbe
cmp
xchg
mov
sub
daa
push
lret
mov
sbb
pusha
jbe
dec
mov
aam
add
dec
popa
data16
push
stos
mov
outsl
jo
pop
dec
push
pop
adc
fwait
fwait
dec
pop
cs
mov
adcl
outsb
les
movsl
xor
xchg
cmp
rol
xchg
cmpsl
fcmove
pop
pop
adc
xchg
scas
ret
or
in
or
nop
cli
dec
add
fimull
in
mov
aaa
repz
mov
pop
cld
aad
addr16
nop
in
pop
dec
lea
stc
lcall
and
xchg
fcmove
test
shrb
and
mov
cmp
fidivl
dec
mov
mov
test
shrl
jo
test
iret
data16
mov
mov
pushf
mov
mov
xor
das
stos
popa
jns
into
mov
and
sahf
shll
xlat
jge
icebp
mov
arpl
xor
dec
filds
sti
jae
stos
mov
mov
test
out
or
mov
js
jle
stos
aam
addr16
push
push
fwait
jns
mov
test
or
mov
push
imul
xchg
jg
into
jl
cmpsl
or
push
push
shl
stc
ret
mov
mov
and
pop
cltd
mov
pop
lods
clc
cltd
push
or
mov
out
movsl
insb
sub
jae
mov
and
mov
pop
and
jbe
repnz
fiaddl
jle
imul
push
mov
inc
pop
xchg
mov
mov
bound
jb
pop
shll
loope,pn
inc
loop
cmp
mov
loop
or
jge
into
rcl
jns
cmp
mov
xor
stc
out
or
pushf
outsb
jno
inc
pop
sub
mov
sarl
add
mov
clc
jl
push
in
dec
in
adc
xor
or
nop
cmp
idivb
lock
aad
shlb
fsubrs
inc
test
and
pop
cmpl
jge
lret
cmovg
out
mov
and
ds
in
fsubp
cmpl
sbb
mov
test
fs
adcb
pop
dec
jns
xchg
ljmp
bound
pop
pop
pop
push
insl
pop
or
cs
mov
lcall
add
jge
inc
xor
cli
outsb
sub
xchg
stc
loop
jmp
sub
aam
bound
xlat
add
xchg
movsb
xor
out
arpl
mov
pop
jmp
sarb
sub
sbb
sahf
xlat
mov
sahf
xchg
ds
add
sbb
in
xchg
inc
mov
nop
repnz
inc
mov
in
arpl
loop
jl
jne
pop
cwtl
imul
sub
xor
div
jl
orb
xchg
cmc
xchg
inc
fistl
cmp
stc
arpl
inc
push
ss
inc
xor
enter
jo,pn
cmp
arpl
push
and
icebp
lret
int
dec
in
jg
jle
adc
imul
push
cmpsl
mov
daa
fs
es
xor
xchg
dec
movsb
jbe
mov
and
fisubrl
stc
mov
pop
cmpw
loope
and
jne
xchg
or
jae
sbb
in
out
ja
jge
cltd
into
cli
hlt
mov
or
jnp
mov
xchg
jle
addb
jns
push
push
add
or
stos
idivl
jns
xorb
stc
repz
cwtl
lods
inc
fcmove
in
add
call
pop
sbb
les
push
lds
jae
xor
add
xchg
jae
or
or
jge
or
xor
sbb
fistpll
jge
adc
stos
jg
and
ficompl
push
jo
inc
das
jge
lods
lds
enter
in
mov
pop
std
cmp
sub
test
int3
pushf
enter
rcrl
stos
movsb
movb
mov
js
pop
nop
mov
xchg
mov
inc
fstl
xchg
cmc
lret
ss
shll
popa
movsl
mov
dec
lock
jl
jl
shlb
stos
test
and
popa
ljmp
sbb
xor
add
insb
push
or
sub
gs
shrl
jb
inc
mov
and
and
or
std
fucomip
scas
jecxz
inc
mov
popf
push
enter
mov
iret
dec
pop
sub
ss
lock
cli
jo
jne
bound
out
jle
sbbb
ss
xlat
inc
sbb
rcr
xchg
push
es
ja
popa
jg
pop
cmp
push
popf
xchg
mov
mov
popl
dec
xchg
add
push
gs
aam
mov
fs
mov
pop
imulb
scas
inc
cmp
mov
push
sbb
jbe
xchg
repz
xor
add
mov
mov
popa
pop
push
push
mov
shlb
add
cmc
xlat
aad
stos
dec
loopne
cmp
jns
mov
xchg
mov
test
or
inc
xchg
dec
dec
dec
insl
pop
add
aam
mov
sbb
sbb
stos
push
sahf
popa
aad
testb
cmpsl
or
scas
es
es
sub
mov
iret
aas
fsubl
mov
mov
loop
xchg
sbb
push
out
jecxz
sahf
roll
sti
sbb
repz
push
ljmp
lret
push
or
sub
test
add
jno
lods
cmp
or
fiaddl
movsl
outsb
push
lds
in
lock
lret
xchg
outsb
std
insl
mov
and
repnz
mov
ljmp
js
pop
daa
ds
inc
addr16
dec
adc
push
cmp
xchg
adc
add
jbe
sub
push
aam
adc
lock
fstl
cmp
mov
cmp
std
mov
test
pop
xchg
xchg
push
aad
pop
xchg
xchg
lea
lods
mov
scas
stc
dec
mov
adc
testl
std
mov
jbe
add
ljmp
mov
xor
push
mov
loop
rcrb
inc
repnz
into
xor
arpl
xchg
sti
test
int
pop
mov
test
push
dec
adc
jecxz
fwait
sti
push
xchg
adc
ret
test
adc
pop
cltd
add
cmp
pop
jge
into
adc
pop
repz
pop
mov
hlt
ficomps
xlat
je
push
pop
push
ljmp
jae
jae
outsb
icebp
sbb
aad
push
fcoms
adc
pop
push
xor
or
fcompl
jno
mov
xchg
lods
addb
mov
jo
mov
push
mov
test
shlb
mov
out
test
mov
es
pop
pop
pop
aaa
arpl
push
and
nop
jp
sub
adc
lock
sub
sahf
movsb
in
fstpt
cli
mov
mov
pop
or
push
daa
das
push
ret
mov
xchg
push
call
mov
imull
call
sbb
jb
add
mov
sti
enter
fwait
mov
xchg
push
bound
mov
popf
sahf
popf
aad
repnz
mov
addr16
mov
pop
pusha
je
add
dec
or
dec
xchg
xor
pop
mov
notb
and
icebp
add
mov
mov
test
flds
jb
aad
adc
lcall
sub
xchg
out
mov
in
fs
imul
ja
cmpsl
fstpt
gs
sub
sbb
popf
pop
fs
sbb
adc
push
jae
outsb
xchg
inc
mov
dec
pop
bound
pop
scas
mov
fdiv
fs
xor
insl
nop
shlb
aam
movsl
ficomps
bound
vpsubd
mov
test
rcll
iret
jmp
imul
xor
mov
ss
je
dec
xor
scas
test
push
or
adc
mov
cmc
pop
inc
sti
fs
cmp
push
sti
dec
sub
cmp
adc
clc
mov
daa
push
inc
jo
add
xchg
xchg
shll
hlt
in
dec
test
inc
cmp
hlt
jmp
dec
inc
xor
xchg
xor
repz
lea
ljmp
in
xor
xchg
aaa
mov
xor
ljmp
stos
loopne
push
shll
inc
rcr
jle
mov
mov
sub
leave
daa
mov
pop
cmpb
mov
push
push
dec
sbb
dec
bound
addr16
dec
fmull
sub
mov
cmp
inc
sbb
cmp
or
fstl
addr16
pop
mov
mov
shlb
sub
and
cli
test
lea
sarl
jg
rcrl
push
jecxz
leave
std
fidivrl
in
or
xor
fcomps
push
lods
mov
outsl
and
xchg
jmp
sti
dec
popa
int3
dec
xor
and
xchg
cwtl
js
or
pop
push
pushf
or
sarl
shrl
lahf
lock
xchg
inc
enter
add
inc
ja
int
dec
sbb
xor
shlb
testb
dec
mov
out
andl
jae
outsb
push
fnstcw
outsl
out
inc
jl
sbb
movsl
jp
xorl
mov
cmp
movsl
push
cli
dec
xor
pop
mov
dec
test
les
jb
insb
clc
push
cmp
ljmp
cmp
out
comiss
xor
xor
ds
test
push
xor
add
xlat
out
fs
cmp
sar
or
js
adc
sarl
sbb
pushf
stc
cmc
int
jecxz
or
jno
es
jg
cmp
jns
fwait
cltd
lods
jne
inc
sub
or
ja
push
bound
sahf
inc
jle
sbb
fdivs
bound
enter
cmp
sub
jl
fisubl
fsts
mov
jno
or
pusha
adc
scas
int3
pusha
call
gs
decl
test
xchg
dec
out
jae
int
cmp
cmc
data16
adc
push
lret
mov
inc
stos
mov
bound
in
or
jmp
aas
out
ss
dec
xchg
pop
clc
shr
jle
test
mov
repnz
ljmp
pop
adcl
or
jmp
dec
inc
xchg
xchg
sub
mov
add
jmp
lcall
es
jle
sahf
xor
cmp
mov
mov
movsb
scas
in
pop
ds
daa
push
mov
cmp
das
rorb
imul
ret
arpl
sti
cmp
add
fmuls
movsb
push
cmp
inc
je
sbb
scas
fisttps
adcl
and
addr16
and
jl
clc
nop
adc
movsb
sub
je
sahf
xchg
mov
and
adc
mov
xchg
test
cmp
mov
pusha
cli
mov
pop
add
sahf
push
mov
ds
dec
jno
cwtl
mov
xchg
sbb
mov
sub
mov
mov
adc
cmpsl
xorb
add
or
lock
jl
shrb
enter
icebp
mov
mov
cmp
lcall
stc
or
pop
mov
movzbl
xchg
adc
outsb
xchg
xchg
mov
add
mov
pop
jle
jge
jo
xchg
jecxz
or
es
pusha
out
jmp
mov
mov
xor
faddl
ror
or
push
aad
out
sbb
pusha
das
mov
das
xor
jmp
cmp
fstpl
fxch
push
jge
jne
pop
mov
pop
in
into
fiaddl
fistpl
mov
pushf
hlt
out
repz
mov
lret
in
sub
loope
andb
and
mov
xchg
push
popa
xor
adc
aad
lods
aaa
sub
out
inc
mov
inc
imul
cmpsb
cld
or
ret
jae
push
pop
xor
testl
jle
cld
and
shlb
shrb
sbb
jge
clc
inc
lds
stos
in
inc
add
nop
arpl
or
sbb
daa
imul
dec
lahf
clc
fstpt
mov
test
xor
sub
xchg
sub
adc
pop
enter
cmp
insb
mov
loop
sub
inc
cmp
cmp
and
sbb
in
popf
shrb
cmp
mov
xchg
and
std
cmpsl
adc
add
mov
cmpsb
or
pop
pop
adc
movsb
xchg
cmp
jbe
ljmp
mov
test
or
xchg
jno
fninit
xchg
sahf
inc
dec
stos
repz
cwtl
inc
dec
aaa
outsb
aas
and
fcomps
mov
pop
int
bound
and
fnsave
subl
arpl
sahf
push
jecxz
xor
cmp
add
sub
jmp
inc
enter
sub
xchg
lret
outsl
lds
and
xchg
dec
outsb
add
loop
lods
repz
push
in
pop
add
pop
faddp
push
int3
mov
rcrl
mov
jmp
dec
pop
imul
test
lods
dec
sbb
push
sbb
testl
adc
stc
pop
loope
mov
les
mov
rcll
mov
leave
loope
divl
lds
mov
aad
fstp
jge
jbe
js
pop
mov
int
sbb
jmp
stos
xor
mov
xchg
cli
addr16
in
push
mov
insb
movsb
dec
inc
and
or
and
jg
mov
sahf
scas
lcall
popf
inc
inc
in
push
inc
lret
ss
push
test
mov
push
mov
or
jl
je
addr16
and
es
push
adc
fwait
xchg
into
xchg
rorl
jns
int3
jb
sti
sub
jae
lret
aas
shll
ja
arpl
test
iret
lock
aam
mov
insb
out
int
push
std
pop
mov
and
test
rol
jl
ja
sbbb
dec
ret
inc
mov
les
iret
fdiv
cmc
ret
pushf
push
imul
testl
jle
add
insb
clc
adc
jle
dec
imul
adc
pop
mov
mov
out
sub
rorb
xchg
out
jno
or
adc
or
lcall
inc
andl
lods
add
ds
or
sbb
dec
stos
fcmove
and
jo
arpl
lret
cmp
mov
cmp
xor
insl
aaa
dec
push
pop
aas
mov
cmc
aad
lods
and
sbb
push
push
add
adc
fs
push
push
lock
sti
add
stos
insl
cmp
xlat
lods
nop
cmp
sbb
xchg
and
in
leave
push
cli
jge
mov
std
cmp
xor
lds
or
int3
mov
shll
cmp
mov
aam
lods
loope
popf
xchg
repnz
pushf
sbb
int
add
jmp
rcll
dec
repnz
xchg
dec
mov
cmp
rcr
xor
loopne
fwait
cmp
cmpsb
aad
fisubs
fwait
xchg
mov
out
repz
stos
je
je
and
push
xor
jl
dec
lcall
xor
dec
jecxz
xchg
jo
js
mov
out
fstpl
fwait
mov
shl
inc
in
loop
cld
arpl
addb
vmread
into
xor
sbb
mov
aas
repnz
mov
test
int3
cli
sbb
or
add
shll
jno
pop
jmp
jbe
xchg
inc
shll
mov
fcompl
push
daa
and
jb
push
inc
jnp
sbb
adc
int
inc
dec
sub
fldenv
jmp
cmc
std
mov
lea
push
sub
sbb
sub
jb
rclb
adc
incl
int
xlat
aas
insl
je
push
push
outsl
jl
cmc
and
clc
push
les
insb
mov
inc
jo
outsb
mov
add
add
jl
push
inc
pop
in
cmc
mov
clc
sti
lret
xor
jb
insl
les
push
mov
push
xor
mov
inc
enter
lahf
lea
pusha
xchg
dec
or
mov
xchg
or
or
into
popa
pop
cmp
addr16
int3
add
sbb
js
addr16
mov
push
out
pop
inc
push
inc
sahf
xchg
mov
cs
addr16
xor
xchg
cli
lock
test
test
mov
jnp
dec
loope
aas
fwait
sahf
idivb
push
jp
xor
sbbl
sbb
fnsave
shlb
push
mov
rcll
mov
xorb
sbb
dec
or
cwtl
ja
lods
das
push
mov
push
pop
push
sbb
or
int
add
ss
loopne
xchg
xor
push
jo
lea
fcomp
adc
adc
addr16
fsub
cmpsl
hlt
push
jecxz
cmp
pushf
dec
cmpsl
adcb
push
push
fwait
shlb
adc
out
lret
cli
sbb
repnz
in
imul
ds
scas
int
pushf
out
test
mov
lret
ret
push
in
dec
lods
aam
sub
xchg
fbld
xlat
gs
mov
test
xor
test
inc
xor
dec
mov
shl
sub
push
inc
into
nop
and
clc
add
push
mov
sbbl
xchg
jb
ljmp
add
or
inc
xor
jmp
mov
xor
ss
and
pusha
cmp
dec
cmpsb
in
and
daa
sbb
int
push
xchg
xchg
gs
pop
in
fidivs
imul
inc
ds
mov
loop
lods
jns
dec
rep
and
and
push
mov
ret
fwait
mov
loope
fildll
test
fisubrl
mov
loop
or
aad
call
shll
xchg
flds
pusha
add
stos
aas
sub
or
sahf
cmp
jae
test
push
sti
pop
mov
mov
cs
xchg
lds
xor
push
scas
mov
xchg
jle
mov
cmpsl
decb
push
mov
sbb
dec
mov
aam
repz
int
dec
lcall
repnz
fwait
sarl
int3
repnz
mov
hlt
pushf
call
jne
sahf
call
movb
push
hlt
shll
in
push
pop
sti
sbb
sub
xchg
roll
or
ficoml
ljmp
imul
mov
sbb
dec
jle
aas
pop
les
in
adc
scas
sub
sti
jmp
jno
and
sbb
out
add
xchg
scas
sub
jb
out
cmpsl
bound
mov
mov
add
inc
mov
sbb
mov
jmp
pop
pusha
out
mov
inc
xchg
notl
andl
xor
outsl
push
stos
xchg
push
mov
enter
sbb
jno
cmp
jle
lcall
push
inc
and
cmpsb
xor
mov
cwtl
imul
lahf
lahf
ret
mov
xor
xchg
mov
cli
jno
and
dec
mov
mov
mov
inc
inc
rcrl
push
adc
inc
xor
imul
aad
adc
inc
sub
or
or
add
mov
ljmp
addr16
sbb
test
and
mov
sarb
dec
adc
cs
std
gs
mov
daa
outsb
jmp
dec
das
jle
sahf
scas
xor
inc
adc
cmp
aad
jo
xchg
js
cmp
outsb
sub
mov
rcrl
mov
addr16
js
fldt
mov
cs
test
test
mov
mov
ja
hlt
sbb
pop
xchg
les
test
sbb
adc
adcl
fwait
or
inc
xchg
or
call
pop
js
daa
xchg
xchg
out
rcr
and
popa
icebp
hlt
pop
mov
leave
mov
loop
mov
in
popa
movsl
mov
xchg
call
xor
out
dec
dec
mov
sub
imulb
int3
int3
mov
cmp
addl
mov
and
popfw
jbe
fildll
popf
push
repnz
aaa
ret
out
pushf
aad
mov
adc
shrb
add
ljmp
gs
inc
ss
cmp
les
leave
mov
lcall
shlb
aam
mov
cmp
je
inc
dec
mov
cmp
inc
xchg
dec
jnp
jo
pop
test
lds
mov
ljmp
imul
jae
xchg
dec
xchg
movb
shrb
mov
mov
jnp
loop,pn
add
jmp
mov
mov
mov
stos
push
mov
mov
inc
scas
mov
mov
repz
aam
sahf
adc
sbb
add
and
dec
in
mov
in
fisttps
inc
xchg
mov
sbb
test
lret
fcomps
and
xorb
jae
scas
jp
sarl
pop
lea
fildl
adc
addr16
scas
xchg
lods
dec
dec
lds
andb
xor
cwtl
repz
cmp
arpl
add
mov
xchg
sub
imull
cmp
lock
cmp
mov
dec
and
inc
mov
and
dec
and
adc
pushf
mov
jns
repnz
add
inc
inc
jnp
sub
mov
outsl
fisubrs
out
adc
mov
xlat
stos
inc
movsl
mov
out
outsb
jb
jnp
test
xor
dec
aam
push
les
pop
ror
test
insb
mov
push
mov
xchg
lea
cmp
aaa
adc
pop
jne
scas
orb
icebp
cmp
lret
pop
cmp
push
sbb
xlat
xchg
mov
adc
js
adc
in
rcrl
call
das
sbb
inc
cmpsb
lods
cmp
pop
inc
adc
shrl
jns
add
mov
sbb
dec
outsb
cmpsl
xchg
pop
sub
lea
stc
rorb
jp
adc
xchg
hlt
dec
nop
jmp
push
loopne
shrb
nop
dec
sbb
push
ret
add
lret
iret
data16
outsl
stos
and
out
xor
mov
jmp
add
fneni(8087
add
sbb
fwait
pop
xchg
cs
push
or
dec
sbb
or
and
push
fsts
xchg
imul
std
mov
insb
mov
push
imul
xor
push
loop
inc
mov
mov
das
mov
lea
outsb
push
inc
sub
xor
or
sbb
adc
movsl
fcompl
loop
and
divb
sti
inc
inc
pop
xchg
shrb
bound
loopne
pop
jbe
orb
push
push
inc
rol
les
iret
jae
hlt
mov
test
loopne
pop
mov
fildl
mov
xchg
lea
pusha
and
mov
jo
and
in
jne
cs
mov
sub
add
call
out
repnz
popa
push
mov
sahf
popf
lret
dec
jge
cmp
mov
les
jno
sub
leave
rorl
fistl
or
mov
mov
mov
xor
push
dec
sub
out
js
and
ror
pop
cmp
pop
repnz
cmp
pusha
mov
mov
and
loop
int
inc
stos
sbb
and
sahf
push
inc
bnd
nop
cmpsb
imul
das
jnp
adc
out
jl
popf
cmp
jb
js
fnstsw
sbb
subl
xchg
mov
sub
mov
bound
mov
lret
dec
fistpl
push
xchg
xchg
lods
fbstp
inc
push
popa
cmc
sahf
clc
fbstp
pop
pop
mov
subb
sbb
xor
sub
push
aas
data16
jmp
and
in
adc
imul
mov
popa
add
mov
mov
mov
xor
cltd
fwait
cmp
xor
setnp
cltd
enter
mov
jno
add
fiadds
mov
test
mov
mov
imul
and
add
jns
and
add
ljmp
and
imul
mov
adc
pop
mov
arpl
test
ds
pop
jb
out
aam
shll
pushl
mov
cli
inc
pop
push
sub
jle
repz
adc
pop
ss
out
mov
xchg
xor
adc
sbb
cmp
sub
iret
push
out
cmpsb
cmp
mov
push
addr16
enter
dec
stc
cmc
mov
insb
sbb
filds
xchg
cmp
ret
inc
xchg
test
add
jmp
push
xor
mov
shrb
adc
dec
pop
fcmovu
add
mov
orb
out
push
ret
stc
fwait
mov
inc
rcrb
rcr
and
shlb
stc
sub
dec
cltd
pusha
mov
fbstp
dec
push
scas
lods
imul
mov
int3
inc
pandn
dec
push
inc
lock
lea
iret
adc
sbb
int3
insl
nop
data16
ds
adc
mov
in
stos
popa
mov
lea
jge
fsts
cs
lea
pusha
fidivrl
int3
xchg
mov
rorb
aam
push
dec
js
xchg
xchg
jns
or
dec
out
jne
flds
adc
sti
push
fs
ds
add
mov
into
cli
mov
ss
popa
repnz
enter
cmp
lock
or
add
sbb
dec
adc
popf
movsl
xchg
jmp
ret
xor
push
mov
pop
push
push
out
pop
fs
xor
xlat
out
push
and
gs
orb
adc
jecxz
sar
movsl
mov
js
addb
and
push
xchg
sbb
inc
outsl
aam
sub
jle
sbb
jmp
call
data16
movsb
lock
sbb
and
xchg
xchg
jae
push
push
out
inc
xchg
mov
mov
jnp
cli
gs
and
add
shrl
shlb
push
pop
dec
pop
sbb
mov
and
adcl
jbe
andl
fldt
imul
mov
out
jae
add
xorb
push
jae
outsb
or
push
sahf
mov
dec
inc
xchg
or
push
hlt
notb
dec
jae
jl
fisttps
rcrl
lods
fildll
mov
mov
jne
out
shrb
sbb
xchg
jnp
fnstsw
jle
or
test
xchg
mov
pop
or
cmp
adc
and
mov
es
jnp
call
xchg
addr16
dec
push
or
xchg
decb
aaa
fmuls
mov
pop
pop
fidivrs
mov
in
adc
pop
leave
sbb
inc
lcall
jg
xchg
mov
mov
mov
lea
mov
xchg
mov
xchg
or
cmp
addr16
dec
pusha
test
lret
and
iret
push
add
xchg
out
enter
inc
cmp
mov
xchg
das
ret
xor
shrb
mov
out
cs
push
sub
and
sbb
jge
daa
pop
jl
mov
mov
push
shrl
sub
arpl
je
dec
cmp
pminub
das
dec
popf
daa
push
dec
rol
pop
test
xchg
fisubrl
cmc
repnz
popa
xlat
stos
leave
mov
jnp
push
inc
sbb
cmpsl
or
mov
sub
inc
xchg
or
addr16
mov
call
inc
roll
mov
int
fwait
js
icebp
test
lock
in
cmpl
outsb
xchg
test
fildl
cmc
scas
sub
stos
fstp
icebp
and
inc
fnsave
cmp
fnop
dec
les
in
add
je
shrb
mov
push
jno
cmpsb
das
call
ds
mov
idivl
clc
inc
and
sbb
ljmp
push
or
push
fadd
fnstsw
frstor
mov
dec
jo
pop
or
lcall
popf
pop
daa
dec
mov
mov
fcmovnb
fidivl
cld
call
adc
or
push
add
testb
add
je
add
scas
adc
xor
jecxz
clc
psraw
jg
in
sbb
xor
cld
scas
out
or
adc
test
or
cmp
xor
test
add
adc
hlt
scas
ds
add
sbb
ja
subb
repz
test
test
scas
sub
fbld
sub
jo
xor
popf
xor
mov
xlat
fcmovb
ds
cli
gs
jae
xchg
xor
test
jge
shrb
jmp
cmp
shll
or
inc
movsl
cs
mov
hlt
and
lret
mov
dec
mov
pop
push
mov
mov
lods
pop
repz
sti
or
fwait
push
jecxz
push
cwtl
fidivrl
and
leave
mov
adc
loop
imul
roll
jb
adc
mov
or
arpl
dec
test
sbb
int3
push
repz
rolb
es
std
mov
add
test
cld
or
mov
hlt
pop
mov
jnp
push
loop
lds
mov
cmpsl
lret
cmp
sub
loop
push
mov
enter
inc
push
leave
and
sub
dec
xlat
rcrb
jp
test
aam
mov
ja
mov
sbb
and
out
dec
mov
push
sbb
stc
dec
in
sbb
xchg
sub
sub
jecxz
cmp
fiadds
je
incb
pop
shlb
and
inc
or
ret
xchg
xor
fnstsw
cli
mov
enter
stos
rcl
xor
sub
cmpsl
and
movl
push
mov
jo
scas
and
add
dec
inc
outsb
cmp
xchg
sbb
xorb
or
movsl
loop
stc
out
pop
ljmp
jmp
test
inc
fs
jge
sub
xchg
incb
or
aaa
push
cs
das
es
push
lret
pop
sbb
out
push
pop
data16
addr16
dec
push
dec
xor
incb
add
test
pop
int
mov
js
or
icebp
es
std
sahf
mov
dec
push
pop
lods
xor
xchg
cmp
mov
cwtl
xchg
dec
pop
loopne
and
scas
arpl
add
inc
pusha
aam
or
xor
mov
pop
cltd
cmc
push
cmpsl
pop
fdivrl
dec
aas
testb
setns
push
inc
andl
imul
mov
shl
aad
rcll
pop
stos
xchg
adc
pop
out
movsbl
stc
pop
mov
addr16
fyl2x
mov
jle
jg
xor
or
sar
mov
jp
fistpll
repz
les
push
pop
lret
sub
movsb
sbb
push
jl
js
scas
daa
imul
push
mov
cs
dec
push
lds
gs
jnp
ja
jae
test
and
out
jmp
sbb
pop
lret
xchg
push
test
sub
inc
lock
inc
gs
sub
push
fnsave
inc
cmp
or
xor
movsb
notl
sub
dec
cmp
xchg
lret
iret
out
push
sbb
fisttpll
or
jmp
mov
xchg
je
jmp
mov
shll
xchg
or
cmp
into
push
mov
fistps
aad
incl
sub
cmp
mov
pop
push
pop
jae
sbbl
mov
sub
cmp
mov
ret
test
cld
pop
xchg
mov
ljmp
inc
push
iret
xchg
test
popa
add
xor
in
inc
cltd
jbe
sbb
jns
push
shll
push
clc
xchg
insl
mov
jns
cmp
cmc
mov
in
jne
add
and
xor
push
lods
pop
jp
test
subl
lods
push
dec
orl
mov
xor
js
push
jl
daa
mov
cmpsb
sbb
pop
xor
repz
ss
sbb
dec
xor
arpl
shrb
pop
cmp
sub
mov
push
fnsave
xchg
leave
dec
dec
movsb
mov
xor
xchg
or
xchg
xchg
in
mov
and
movsl
xchg
imul
sbbb
aaa
cmpsl
in
jb
xchg
adc
xchg
sti
push
sti
lcall
push
ficoml
lret
addl
ret
jecxz
fsubrp
lods
inc
push
movsb
js
mov
adc
mov
sbb
pop
or
gs
call
int
or
scas
jbe
ds
push
pop
push
pop
iret
inc
dec
mov
imul
jns
inc
icebp
lock
pop
push
lret
sbb
icebp
ja
push
dec
sub
bound
pop
in
sbb
or
outsb
pusha
pusha
pop
cmp
fmul
repnz
inc
and
add
clc
cmp
and
nop
pop
mov
lret
jo
xchg
push
push
pop
out
inc
mov
lret
lahf
shrb
add
mov
jb
pop
jbe
dec
jbe
notl
push
arpl
mov
cmpsl
sbb
mov
das
push
dec
mov
mov
fdivs
jnp
jbe
out
xchg
xor
inc
pop
jb
aam
mov
test
daa
std
add
pusha
pusha
mov
cmp
push
pop
xchg
repz
ja
stos
faddl
xchg
xor
fwait
mov
xchg
das
sub
sarb
mov
push
out
pop
push
push
fsubs
pop
xor
bound
fldt
adc
dec
xor
xchg
sti
jo
es
aas
mov
movl
dec
pop
pop
cmc
pusha
or
sub
lods
fbld
sub
mov
push
sbb
daa
iret
push
and
fstpt
xor
jae
test
sub
movsb
movsl
or
pop
pop
lret
lret
lea
mov
enter
cwtl
pop
es
lods
in
xchg
lret
stos
les
xor
daa
mov
lret
imul
es
mov
cmp
sbb
mov
insb
sbb
push
sti
dec
movl
sub
jle
outsl
cltd
lret
insl
pop
jne
out
fistps
push
mov
scas
pop
in
push
push
xor
mov
add
add
sbb
jnp
daa
bnd
sbb
in
sbb
adc
pop
pop
mov
cld
mov
sti
jo
ret
sub
mov
lods
out
or
das
lret
es
jae
dec
les
repz
test
and
jno
mov
fnsave
mov
lret
add
ljmp
sbb
in
lods
xchg
adc
scas
mov
mov
js
mov
jle
out
jns
and
sub
dec
dec
addr16
xchg
add
std
mov
pop
repz
scas
jnp
shll
aaa
dec
pop
push
arpl
lock
push
inc
cwtl
pushf
or
in
repz
sub
mov
mov
and
xor
pop
dec
mov
mov
adc
pop
imul
pop
sub
push
call
mov
mov
xor
bnd
xchg
into
sbb
cmp
movsb
mov
xchg
jl
mov
sbb
sti
mov
lods
bound
xchg
sbb
in
sub
lock
inc
bound
imul
add
movhps
adc
decb
add
lcall
push
dec
in
mov
shll
shl
in
ds
sub
sub
loope
loop
sahf
cmp
jge
jge
mov
imul
pop
mov
int3
enter
repz
xchg
js
out
dec
inc
loopne
rcr
les
push
mov
push
jbe
mov
mov
dec
add
push
cs
mov
jae
xor
push
jo
xchg
mov
push
lods
adc
sarb
jno
lods
jmp
insb
js
cs
mov
pop
inc
sahf
mov
lea
jnp
fbld
mov
roll
mov
jno
aam
jno
adc
and
cmp
andb
insb
pop
mov
stos
ja
out
jp
dec
mov
adc
fs
push
pop
out
push
lea
adc
push
push
insl
jb
fs
pop
cmp
scas
dec
and
jecxz
int3
insl
inc
push
xor
jb
jo
icebp
ss
notl
int3
mov
and
xchg
aas
push
cmp
push
sbb
mov
or
adc
sbb
pop
js
mov
mov
cmp
jmp
push
lahf
dec
mov
int3
daa
mov
pop
out
ljmp
arpl
inc
add
enter
sub
and
jp
scas
push
cmp
fdivl
adc
jno
aaa
xor
inc
cmp
dec
mov
aad
movsl
mov
sub
push
xchg
out
mov
push
rolb
into
jge
fldcw
add
jg
jmp
push
mov
or
pop
into
sub
inc
pop
jno
aas
ja
int
fdivs
sti
sub
lret
xchg
out
inc
jp
jb
cmp
push
push
movsb
jecxz
push
fcomi
icebp
push
push
dec
cmpsb
pop
add
fldl
pop
push
push
sub
pop
or
ja
arpl
and
pop
incb
and
pop
cmp
out
ret
jnp
movsl
into
pushf
or
add
pop
stos
leave
add
inc
je
sbb
sub
subl
in
dec
imul
add
sbb
lods
xchg
xchg
cmp
les
mov
js
push
pop
dec
xor
nop
sub
sub
repz
in
pop
jnp
push
insl
xchg
insb
pop
cli
fsubs
fcompl
loopne
dec
xorb
int3
ret
lret
sbb
push
in
adc
inc
push
push
andb
cmp
push
cltd
push
dec
sub
out
cmp
fdivr
push
dec
push
inc
jecxz
or
enter
fadd
addr16
and
into
sarl
adc
push
cmc
xchg
mov
adcl
jno
add
xchg
testb
jg
roll
and
xchg
imul
inc
mov
repnz
ja
je
add
lods
push
xchg
fadds
fcmovb
jo
fcomps
loope
lret
dec
sub
cli
jno
xor
inc
mov
icebp
orl
or
mov
lahf
mov
mov
adcl
aad
cltd
movsl
fsubs
rcrb
out
cmp
cld
enter
pop
adc
xchg
dec
in
mov
int
nop
jb
les
dec
inc
xchg
push
mov
test
and
stos
divb
int
dec
in
adc
adcb
imul
xchg
pop
lds
inc
cmp
sti
jae
in
sbb
cmpsb
fs
xchg
call
aad
sbb
stos
jo
and
shll
pop
test
icebp
sbb
mov
or
push
push
pusha
add
shll
push
cs
cli
and
xchg
test
ds
push
les
cwtl
adc
push
dec
into
xor
sub
ljmp
push
stos
ret
subb
daa
push
fbstp
outsb
xchg
inc
in
or
ret
fdivs
popa
jnp
rcll
add
repz
push
xchg
jae
daa
sbb
mov
cmp
mov
cmp
cmp
adc
and
in
jl
fldcw
lret
xchg
add
repz
pop
fwait
cmc
xchg
testl
neg
sub
aad
in
xchg
xchg
dec
cmp
ret
hlt
test
shl
movsb
push
pop
lods
inc
lea
dec
cmc
dec
xchg
js
inc
test
cmpsb
fsubs
mov
subl
sarb
push
ret
sbb
xchg
subl
pop
mov
pusha
ffreep
mov
push
dec
xor
mov
adc
lcall
mov
stos
sbb
dec
add
xor
xor
lret
dec
jle
pop
pusha
ret
dec
xor
lret
popa
int
mov
lods
orl
or
adc
sub
sti
sahf
lcall
inc
jl
mov
prefetch
pop
ds
mov
push
les
add
dec
insl
mov
xor
lea
in
push
lds
add
inc
mov
lret
inc
sbb
int
pop
inc
dec
inc
sar
stos
inc
jmp
les
xchg
inc
imulb
cmp
adc
lods
mov
out
aam
movsb
shll
xchg
push
pop
and
aam
imull
stos
popf
in
xchg
es
cmpsl
mov
ret
cmp
add
ss
sbb
or
in
fcmovnu
test
int3
aad
xlat
negb
sub
or
daa
cmp
and
jo
divl
fsubrl
push
sub
push
cmpsl
paddsw
es
aad
leave
jo
lahf
push
js
imul
lock
sub
inc
mov
int
test
push
aaa
add
testl
and
mov
aaa
dec
cmp
cs
cmp
cli
fidivl
xor
jp
stos
fwait
daa
les
loop
sbb
xchg
push
sbb
call
aas
shll
xor
sahf
jecxz
xchg
sbb
mov
mov
insb
adc
push
dec
dec
rolb
lret
or
out
and
outsb
cmp
mov
in
mov
aam
mov
inc
xchg
xor
xchg
push
loope
jl
js
inc
ss
stc
fnsave
add
scas
add
jno
cltd
xchg
dec
xchg
es
js
roll
add
xchg
mov
or
repz
stos
ds
and
cli
jmp
inc
lret
out
in
ds
in
lret
or
push
mov
or
insl
add
jo
xchg
out
dec
call
jbe
add
repz
out
push
ja
aas
inc
jge
adc
jo
jb
pushf
mov
dec
pop
mov
clc
daa
pop
cwtl
mov
popf
push
iret
out
push
dec
jp
fmuls
repnz
rclb
mov
cmp
and
mov
in
mov
push
lds
inc
bound
adc
frstor
jae
imul
xor
sub
mov
sbb
inc
pop
bound
adc
inc
mov
ficomps
ja
je
xlat
jmp
mov
je
mov
jb
incb
add
adc
cmpsl
inc
sub
push
fcomps
fstl
dec
pop
push
jecxz
add
mov
jns
fidivs
popa
push
pop
adc
outsb
and
loope
sbb
out
andl
cmpb
and
pop
pusha
std
inc
cmp
or
sub
insl
sbb
pop
push
cwtl
insb
cld
movsb
int
adc
mov
dec
and
pop
push
call
pop
xlat
test
or
add
push
loope
outsl
mov
adc
xor
rcl
inc
push
pop
dec
add
cmp
mov
movsb
sub
add
ret
sub
ljmp
adc
inc
stc
aaa
stc
les
or
out
std
mov
cmp
push
sub
and
add
pop
jnp
int
pop
mov
imul
push
in
jle
push
repz
leave
shlb
pop
dec
jmp
dec
ret
cltd
fstpt
inc
popa
das
inc
rclb
xorl
or
idivl
mov
in
dec
jns
xchg
jns
in
cmc
xlat
fidivrs
into
and
mov
jp
xor
push
jnp
fs
mov
arpl
cld
jl
pinsrw
lds
movsl
pusha
mov
cmp
lcall
test
imul
push
insl
dec
rol
adc
jne
sbb
ret
outsb
push
inc
sub
int
push
inc
or
cmpb
jb
std
push
or
lock
fs
add
xor
mov
popf
inc
lock
into
shll
sbb
push
or
jne
inc
lret
out
sub
add
add
sbb
mov
mov
cmp
loopne,pt
loop
aam
push
cmp
loope
xchg
cld
repz
outsb
movsb
cmp
cmpsl
mulb
sbb
hlt
jmp
loope
gs
mov
mov
add
mov
outsl
xchg
cltd
idivl
lret
mov
out
cld
adc
push
movsb
or
loopne
scas
dec
xorl
movsb
cmp
dec
fmull
aaa
dec
jns
insb
pop
in
cmp
ljmp
gs
xor
push
inc
popf
add
pop
mov
je
fiadds
lahf
xor
mov
adc
sbb
cmp
popf
add
sbb
es
xor
sub
dec
pop
test
add
fsubs
rclb
daa
clc
dec
inc
aaa
mov
sahf
adc
call
xchg
lret
outsb
in
das
icebp
and
jns
push
dec
aas
data16
or
mov
pop
lahf
lock
adc
mov
and
sarl
inc
lcall
jb
lret
loop
scas
stos
mov
aas
pop
cmp
inc
ret
mov
xor
xchg
xchg
and
xor
cmp
ror
xchg
adc
pop
in
sbb
int
or
pop
loop
das
dec
clc
pop
call
idivb
jmp
movl
decl
push
stos
push
mov
mov
pop
rclb
addb
sahf
xor
add
js
xchg
cmp
dec
shlb
sbb
add
fcoms
lds
mov
pop
ss
sub
sti
jne
and
js
cmp
out
pop
bound
shll
hlt
mov
imul
cmp
push
sub
xor
xchg
add
insl
shll
xchg
lcall
rorb
out
mov
enter
or
into
sar
inc
inc
jnp
ds
sub
pushf
aad
mov
xorb
pushaw
or
fimull
mov
inc
scas
or
push
mov
add
cli
inc
push
fisubrs
cmc
mov
jp
mov
fmuls
hlt
frstor
rorl
inc
jecxz
bnd
mov
stos
jno
unpcklps
mov
in
addr16
insb
repz
add
sub
jmp
add
mov
sbb
pop
je
push
mov
out
int3
jae
push
adc
xor
cmp
inc
sub
lds
jb
pushf
int
jle,pt
ret
idiv
add
call
in
sub
dec
loop
mov
mov
cmp
jmp
push
push
out
sarl
aas
xchg
lcall
repz
insb
outsb
ret
mov
push
mov
sub
and
adc
push
jmp
aaa
ret
jo
fs
jno
movl
xor
fwait
stos
add
xlat
fistpll
and
mov
cmp
shr
jl
pop
inc
test
negb
je
jns
fsub
sbb
aaa
cwtl
pop
and
icebp
scas
pushf
pop
xlat
clc
mov
mov
sbb
inc
cmp
stos
out
in
xchg
cmp
iret
ja
sub
sbb
pop
test
mov
aam
push
stos
stos
imul
and
cmp
cmpsl
dec
std
mov
and
sbb
hlt
mov
mov
lods
pop
jae
jne,pn
push
mov
cmovns
dec
ret
gs
and
int
jmp
xchg
popa
pop
mov
inc
mov
clc
cs
in
cld
repnz
and
in
clc
xor
ss
ret
ret
popa
mov
mov
test
add
ds
sub
iret
scas
out
movsb
int
enter
or
jnp
imul
js
into
jbe
push
inc
cmpsb
or
jg
mov
dec
push
add
loope
test
icebp
and
test
mov
cmp
inc
pop
fistl
and
jl
fistps
aam
out
stos
adc
push
mov
mov
inc
jo
dec
sar
fsubrl
push
test
rorl
imull
clc
xchg
sub
ret
les
xlat
add
movl
adc
sbb
or
mov
mov
jo
test
sub
pop
stc
bound
les
cli
orb
mov
das
xchg
and
sti
jb
mov
ret
clc
mov
enter
cmpsl
adc
mov
mov
sarb
jmp
pop
mov
push
imul
sbb
adcl
pop
jb
insl
test
call
outsb
pop
push
clc
cltd
in
jmp
aaa
fs
push
mov
test
xor
stc
roll
add
fnstsw
and
xchg
nop
ja
push
jge
cmpsb
push
add
les
xlat
sbb
add
lock
pop
cmpsb
sbb
stc
insb
cli
fimuls
sub
sti
xor
dec
inc
mov
in
rcrb
insl
jno
lahf
ja
push
ss
jns
add
cwtl
sbb
bound
out
dec
lods
call
aaa
out
jp
imul
cmp
push
lock
insl
dec
jl
cmpsl
cs
adc
dec
enter
hlt
xor
imul
xchg
sub
push
inc
and
icebp
pushf
int3
xchg
inc
fs
mov
aas
dec
lret
mov
mov
test
add
inc
fmul
and
pushf
pushf
aam
ret
mov
dec
sahf
sbb
int
test
repz
sub
add
aas
sahf
cmpsl
insl
xor
decl
mov
mov
add
or
mov
in
pushf
mov
xlat
aad
rorb
out
repz
and
fdiv
popf
pop
ss
rcll
andb
jb
inc
mov
es
and
test
push
insb
mov
dec
pusha
movsl
push
call
or
pop
sbb
mov
into
jae
or
mov
popf
dec
stos
lret
and
push
adc
ror
cmp
jle
jl
in
fs
movsb
ja
mov
rcr
inc
or
inc
imul
sbb
rclb
sub
leave
xor
xchg
fwait
mov
fsub
popa
and
je
int3
dec
sub
pushf
cwtl
sub
dec
pop
or
jns
sub
pop
dec
mov
add
and
data16
lcall
xchg
movsb
shll
fidivrl
dec
cltd
mov
mov
stos
pushf
xchg
call
lods
mov
inc
xor
sbb
mov
push
mov
dec
ljmp
iret
jo
xor
adc
or
mov
int3
mov
push
xchg
ja
xlat
movsl
addr16
push
das
insb
xchg
loope
aad
mov
push
push
pop
loope
lret
mov
les
jg
sbb
push
jle
movsl
inc
cmc
repnz
jne
xchg
dec
andb
jne
or
cltd
addr16
cmp
das
rcrb
dec
pop
mov
push
mov
or
jmp
jne
movsl
sub
pop
das
jns
outsb
cli
adc
mov
inc
xor
in
fdivrp
xchg
imul
sub
cli
jmp
movsb
je
push
xchg
or
nop
aaa
push
dec
ljmp
xor
cmp
fidivrl
push
int3
push
addr16
pop
mov
fucomip
sub
and
std
push
js
out
aas
out
push
in
push
pusha
data16
js
xor
lahf
adc
pusha
pop
test
arpl
idivl
fisttps
push
fwait
dec
push
sbb
xchg
fs
outsb
std
out
jae
cmp
adcl
xchg
lds
in
popa
xor
loop
rolb
xchg
jp
call
hlt
fdivs
mov
push
inc
xor
pop
jle
insb
pushf
inc
pop
push
or
lret
xor
jl
dec
dec
add
movlps
dec
mov
mov
loope
xor
jb
rcll
outsb
xchg
add
sbb
mov
push
adc
mov
pop
jg
xchg
sbb
daa
leave
inc
fisubrl
jb
xchg
sbb
loope
negl
jne
iret
pop
subb
icebp
xlat
insb
loop
jle
retw
cmp
gs
cmp
cmpsb
mov
loopne
clc
jbe
out
repz
xor
loope
xchg
push
fs
jbe
imul
pop
xchg
mov
cmp
mov
stc
cli
push
dec
repnz
pop
pop
arpl
pop
sbb
push
jge
or
lcall
daa
movsl
and
pop
cltd
dec
jo
push
fcoms
test
sahf
adc
lahf
out
fcompl
outsl
pushf
lret
adc
rorl
pop
xor
movsb
adc
cmp
and
dec
inc
xlat
call
es
nop
add
push
repnz
jb
push
cld
out
sbbl
hlt
adc
mov
lret
inc
cltd
dec
jecxz
out
outsb
xor
call
popf
inc
gs
mov
xchg
or
sub
xchg
cwtl
out
cltd
jae
clc
jnp
dec
cmp
mov
test
adc
mov
iret
enter
dec
shrl
insl
mov
clc
std
clc
pop
and
insl
cmp
popa
mov
ja
and
mov
push
int3
ds
pop
mov
inc
push
movsb
pop
mov
test
loop
repnz
cmp
mov
push
lret
sbb
sub
scas
subb
mov
test
arpl
xchg
adc
inc
mov
dec
mov
ljmp
les
mov
div
sahf
sbb
shrl
mov
dec
test
mov
ss
js
adc
pop
mov
div
and
shlb
into
inc
and
in
sbb
and
xchg
fdivrl
xchg
rcrb
in
addr16
jnp
cmp
orl
outsl
arpl
ljmp
mov
sti
cmp
or
xchg
outsb
jbe
inc
aam
mov
cmc
out
push
mov
sti
inc
in
sbb
sbb
lods
dec
mov
push
push
pop
rcrl
testl
shll
dec
add
and
push
push
fistpl
push
bound
addr16
test
jp
sbb
add
dec
cmp
jmp
push
lret
cld
enter
mov
xadd
nop
in
inc
sub
mov
mov
leave
and
lock
dec
repnz
push
mov
cmpsb
mov
dec
std
xlat
sub
repz
addr16
mov
adc
or
fistpl
movsb
pusha
xchg
and
lahf
jae
xlat
test
sbb
ret
adc
add
pop
mov
call
stos
dec
dec
out
sub
mov
rolb
or
lock
out
push
popa
xchg
mov
pop
and
cmp
push
test
push
lock
nop
mulb
sbb
adc
fs
lahf
cli
icebp
mov
and
pop
repnz
xor
dec
xchg
fs
mov
mov
mov
pop
daa
dec
insl
dec
imul
leave
push
movsb
inc
cmp
inc
xchg
mov
mov
xor
jo
pop
push
add
jae
add
jmp
repnz
pop
push
dec
add
pop
lahf
lahf
addr16
push
sbb
sarl
push
jbe
ficompl
mov
lods
mov
or
fdivrl
jle
les
in
pop
pop
adc
pop
inc
and
inc
in
call
lret
xor
xchg
fiadds
pop
jns
push
jbe
mov
sub
mov
xor
dec
scas
xor
jmp
xchg
aas
cmp
stos
adc
cwtl
jae
es
pop
jbe
mov
cmp
cmpsl
push
jecxz
mov
imul
insl
sub
sub
insl
adc
and
andb
mov
push
add
sub
inc
xor
lret
adc
pop
push
testb
mov
inc
mov
lds
mov
inc
and
jbe
outsl
push
sub
test
fnstenv
xor
cltd
cld
insl
hlt
mov
pushf
pop
test
testb
loop
mov
pop
xorb
cmp
sbb
push
clc
cltd
mov
stc
sbb
cmpsb
xchg
out
jecxz
les
icebp
rclb
bswap
mov
push
das
xchg
ror
mov
jae
and
mov
mov
icebp
shll
xor
and
shll
xchg
mov
sbb
dec
rcll
push
inc
cmp
ret
in
daa
loop
repnz
dec
pop
and
icebp
sub
xor
je
test
aam
cltd
or
xchg
iret
adc
push
or
sub
out
adc
xchg
inc
dec
hlt
enter
cmpb
in
nop
rorl
add
daa
add
add
inc
cltd
mov
push
pop
sbb
add
inc
adc
aaa
mov
inc
lret
sbb
stos
inc
dec
jae
xchg
fwait
mov
cmp
test
mov
sub
lret
sub
stc
push
jno
jno
push
fistpl
adc
int
lret
pushf
lret
lret
add
xorl
xor
sub
and
sub
lods
add
loope
rclb
jg
sub
mov
adc
xchg
sub
lcall
and
popf
pushf
cmp
pause
sbb
movsb
lret
xchg
adc
jno
and
fldenv
mov
dec
dec
lods
daa
sahf
cld
jbe
jg
loop
mov
push
jnp
cmpsb
test
pop
mov
add
inc
mov
push
mov
mov
mov
mov
outsl
push
mov
mov
inc
inc
push
jg
mov
outsb
lods
into
in
push
inc
daa
add
in
sub
jmp
pop
test
aad
sbb
gs
xchg
jns
lods
shll
lret
nop
inc
inc
aaa
in
xchg
push
mov
nop
shl
sub
jo
orb
jnp
xor
aad
outsl
fldenv
cmp
stos
fisubrs
jbe
cli
out
dec
jne
leave
jb
pop
in
movsb
dec
cmc
jl
out
jp
xchg
sbb
sub
fnsave
cmc
push
in
sbb
mov
sbb
sti
dec
dec
add
push
in
repz
mov
shrl
daa
js
push
mov
mov
rol
stos
cs
fmul
dec
jns
or
fildll
ffreep
xchg
pop
inc
loopne
stos
ss
pextrw
sub
js
ds
mov
and
clc
mov
repnz
sub
aam
sbb
mov
mov
and
gs
fdivl
sub
pop
loope
pop
fsubl
push
push
and
jnp
repz
xor
or
push
dec
xor
jp
fldt
test
int
ret
and
mov
sub
sbb
mov
xchg
pop
push
das
push
pop
jbe
push
dec
push
mov
adcb
push
add
stc
mov
inc
sbb
jle
dec
sbb
arpl
outsb
or
mov
dec
test
js
jg
data16
arpl
ret
xchg
add
popa
jns
xor
push
scas
enter
test
in
push
into
lds
ret
out
mov
lock
xchg
mov
or
inc
and
insb
mov
sub
push
mov
jnp
lock
pop
shll
jmp
adc
push
or
sub
jge
jg
pop
fildl
push
mov
aam
dec
mov
mov
std
movsb
inc
cmp
sti
loope
hlt
das
xor
pop
fiadds
adc
pop
inc
adc
mov
popf
jno
insl
jge
mov
int3
jo
xchg
adc
mov
jg
dec
mov
hlt
inc
push
pop
cmp
in
sbb
shl
clc
add
movsb
mov
mov
es
push
cmp
dec
and
icebp
xchg
or
outsb
mov
push
lods
shl
sbb
jl
test
ror
pop
pop
fiaddl
popa
loopne,pt
pop
pop
push
sub
mov
dec
mov
jge
sahf
cld
in
push
push
or
xchg
out
inc
xchg
xchg
inc
push
sti
mov
lea
mov
imul
je
ljmp
jo
shll
mov
mov
inc
and
mov
adc
je
pop
bnd
nop
dec
loop
dec
push
lods
ffree
push
and
and
cwtl
inc
sahf
dec
push
imul
add
lcall
jecxz
int3
loopne
cmp
push
dec
pusha
sahf
out
pop
addr16
popa
ret
stos
arpl
std
jl
sub
xor
stos
jl
sbb
jo
and
mov
imul
mov
adc
mov
shlb
repnz
iret
inc
test
repnz
out
loopne
xchg
mov
xor
xor
mov
inc
xor
call
fs
fisubl
dec
sbb
cmpsl
sub
cmc
sbb
shll
push
sub
into
adc
aam
mov
inc
lahf
mov
enter
int
aam
mov
or
xchg
mov
add
fmull
cmp
xchg
push
outsb
dec
add
fwait
jl
xor
icebp
addr16
faddl
mov
xor
fwait
push
cmp
les
mov
inc
mov
mov
imul
add
and
insb
jp
scas
xchg
inc
cli
add
add
fsubs
daa
xchg
push
pop
enter
cmp
xchg
mov
out
jnp
ss
push
xchg
and
sub
popa
mov
stc
lods
mov
sahf
jbe
mov
jg
flds
mov
push
and
jo
jae
dec
addr16
xchg
add
ds
roll
stc
inc
mulb
sub
insl
mov
cld
enter
aas
mov
aaa
arpl
repnz
stos
popf
xchg
mov
addr16
imul
test
and
fnsave
sbb
mov
jp,pn
sub
pop
or
ja
jb
adc
mov
jbe
inc
adc
inc
lcall
scas
notb
mov
dec
push
cmp
decb
test
pop
in
sbb
lahf
iret
loope
dec
mov
push
jmp
in
add
adc
mov
jnp
mov
movsl
mov
mov
push
mov
sahf
sbb
cmp
sbb
stc
xor
cltd
mov
popf
adc
cmp
sti
xor
push
test
adc
addr16
pop
adc
std
lods
lods
push
xchg
gs
mov
icebp
lea
inc
jg
addb
jecxz
pop
inc
xchg
ja
cmp
imul
fcomps
ret
test
sbb
es
decb
mov
inc
ret
clc
imul
mov
call
sbb
mov
inc
insl
mov
cmpsb
pop
imul
xor
inc
jge
cli
iret
mov
out
arpl
xchg
mov
jne
cmp
push
pop
leave
lahf
stos
xchg
inc
sbb
sbb
inc
mov
arpl
xor
inc
popf
imul
aam
adc
adc
dec
outsb
jae
dec
pop
xchg
in
std
mov
notb
xchg
hlt
loopne
jbe
jb
leave
dec
orl
mov
sub
mov
pop
sub
sbb
pop
popf
cmp
popa
xor
pop
sbb
in
or
daa
xorb
xchg
pushl
sub
jne
dec
nop
and
outsb
test
mov
sub
dec
fsubrs
aas
ror
jbe
nop
pop
mov
mov
cmp
jb
xchg
outsl
lds
and
jo
jmp
std
std
adc
out
add
out
cmp
xor
in
enter
insl
xor
jl
xchg
pop
dec
lods
push
dec
test
push
mov
cmp
inc
hlt
mov
pop
stos
sbb
mov
mov
sub
je
sub
in
sub
sub
adc
jo
enter
xor
call
ss
mov
dec
idiv
sbbl
mov
adcb
sbb
or
mov
or
out
mov
sub
popa
mov
notl
adc
addr16
addl
mov
aam
rcrb
mov
je
stc
loop
push
mov
test
ja
int
pusha
pusha
dec
dec
pop
mov
xor
mov
test
push
outsb
sbb
xor
notl
sub
mov
or
mov
xor
mov
inc
dec
push
mov
cwtl
out
test
stc
mov
pusha
das
leave
mov
dec
les
nop
push
repnz
aam
fwait
dec
cmc
sub
outsl
pushf
ret
mov
outsb
mov
lods
dec
mov
aas
xchg
nop
rorb
dec
inc
sti
movl
divb
jnp
cmpsl
and
cmc
lods
cwtl
jp
dec
mov
mov
cmp
inc
in
addl
jae
and
pop
push
jb
xor
std
shrl
scas
xor
arpl
in
push
push
and
lods
jl
xor
push
cmp
insb
and
sub
or
stos
cmc
pop
inc
or
push
add
sbb
fsubl
jecxz
outsl
push
pop
lods
fnstsw
sub
push
jnp
and
sbb
test
sahf
shrb
popfw
outsl
and
push
inc
sub
dec
mov
push
add
popf
cs
sub
pop
inc
mov
pop
shl
xor
xor
sbb
dec
std
adc
mov
push
rcrl
xchg
out
das
subb
pusha
xor
xor
ret
jbe
out
pop
mov
in
push
lahf
filds
out
rorb
sub
add
fnsave
xchg
mov
insl
push
cltd
in
dec
mov
inc
xchg
out
lds
mov
mov
int3
lock
push
cs
push
pop
mov
or
neg
jnp
data16
push
call
rcrb
int
aad
cld
faddp
or
iret
shlb
sbb
out
dec
sbb
sbbl
mov
rcrb
dec
xor
pop
jno
fistps
lret
or
repz
dec
push
push
stos
mov
inc
addr16
inc
je
adc
jmp
jp
dec
sub
ljmp
xchg
adc
push
cmp
aam
je
pop
lahf
xor
jae
ffreep
jle
xor
mov
or
icebp
sbb
jae
push
fcompl
xchg
mov
cld
loope
dec
fistpl
adc
push
lods
or
sub
dec
jp
addb
popf
pushf
jno
das
or
jge
leave
roll
shl
mov
sti
and
adc
incl
adc
adc
sub
xchg
jmp
push
add
out
cmp
or
xlat
sub
xchg
jl
push
ja
dec
popa
sub
fwait
xor
cmp
pop
shl
sbb
mov
dec
pop
int3
call
sbb
lcall
add
cltd
nop
lds
fdivrs
popa
pop
addr16
xchg
inc
push
mov
and
fs
pop
and
add
out
test
pop
call
inc
adc
dec
or
leave
fidivs
dec
mov
enter
inc
xchg
or
sahf
or
jbe
xchg
jo
dec
repnz
add
ljmp
stc
push
push
sahf
hlt
mov
test
repz
mov
xor
dec
jnp
adc
nop
or
iret
rcr
mov
add
subl
xchg
cs
cli
popf
test
cmp
adc
outsb
in
dec
pusha
insb
adc
in
xor
cmpsb
push
pop
mov
sub
rorl
push
dec
and
xchg
fistps
aas
int
add
inc
xchg
ficompl
lock
cltd
sahf
add
jo
xchg
jne
rcl
and
mov
inc
fisttpll
xor
sub
xor
sbb
add
insl
add
call
das
js
pop
pop
sbb
pop
mov
fisubl
sub
out
pop
popa
mov
push
mov
and
pop
iret
push
xchg
ficomps
pusha
mov
es
xor
push
test
roll
adc
adc
sbb
mov
mov
into
stc
jl
mov
jge
shrl
mov
xchg
ja
dec
mov
loop
add
loope
pop
xor
stos
mov
fwait
push
dec
pop
mov
xchg
sbb
inc
or
or
pop
xchg
out
mov
insl
mov
adc
sub
and
shll
out
adc
cmp
sbb
mov
mov
test
in
daa
andl
sub
outsb
pop
xor
push
outsl
mov
xchg
fimuls
jb
or
mov
mov
cmpsl
and
out
mov
adc
push
mov
cwtl
xchg
outsb
adc
stos
sbb
inc
mov
jl
xchg
cs
sbb
pop
sub
adc
fisttpl
lahf
cli
jl
mov
adc
mov
fisubs
mov
jp
xor
fstpl
outsl
mov
dec
enter
movsb
pop
push
and
add
push
out
loopne
inc
adc
add
cmp
jp
push
or
jp
fists
iret
mov
leave
call
movsl
cli
jle
and
jnp
adc
xchg
push
xchg
fwait
adc
cmp
hlt
sbb
leave
aam
iret
push
in
xchg
cmp
test
xor
or
xor
sbb
ja
push
frstor
iret
or
adc
pop
shrl
repnz
xchg
push
pop
pop
xchg
xchg
int
jae
xchg
popf
sbb
pop
fwait
repz
clc
insl
dec
arpl
lret
mov
pop
and
cmp
hlt
mov
scas
sbb
adc
pop
imul
fwait
jb
fcomps
loopne
movsl
les
push
xchg
dec
mov
inc
sbb
jno
xchg
mov
push
or
rcl
je
insb
insl
stos
adc
fdivrs
cmp
xchg
shlb
aad
les
sarl
dec
dec
sbb
dec
mov
out
push
sub
mov
add
jle
and
or
push
imul
pop
mov
xchg
flds
repnz
out
mov
xchg
mov
fidivl
faddl
dec
lret
xchg
sbb
inc
or
fs
cli
sbb
push
xor
pop
and
sub
cld
je
adc
push
pusha
dec
leave
ljmp
lret
or
mov
cmp
jmp
jae
les
les
jl
and
call
daa
imul
test
push
fisubl
adc
out
sbb
cld
mov
and
aad
mov
es
adc
fwait
or
orb
repz
mov
inc
outsl
or
xchg
inc
cmpb
xchg
mov
adc
scas
dec
jb
test
sub
fmuls
sbb
popf
xor
mov
jnp
loopne
mov
icebp
lret
inc
int3
push
dec
loopne
loop
add
mov
gs
movsb
xchg
jecxz
int
out
icebp
or
add
pop
in
adc
insb
repz
ficoms
js
xor
jb
jmp
sub
xor
test
adc
cmp
cmpsl
jb
clc
out
cmp
fistpl
xorl
mov
inc
gs
scas
jp
cmp
aas
xor
jb
pop
lock
clc
and
mov
jge
insl
shl
pop
clc
jl
in
xor
int
ret
addr16
cmpsb
addr16
jge
ljmp
add
sub
lea
stc
imul
mov
dec
roll
fmuls
or
mov
sbb
fisubrs
aaa
sub
xor
icebp
fs
mov
cmc
outsb
clc
push
xchg
and
xchg
leave
mov
stc
jle
shrb
cs
jl
xchg
sub
jge
ds
insl
daa
push
mov
sbb
sbb
decb
ja
rcll
aam
mov
add
cld
rcrb
pop
or
mov
std
jbe,pt
insb
jecxz
incl
sbb
cwtl
dec
mov
lock
sbb
push
push
sbb
pop
divl
andb
add
add
adc
mov
cli
pop
ss
ss
mov
inc
outsb
es
mov
in
aad
leave
pop
inc
lcall
or
nop
mul
jno
dec
sbb
mov
imul
sub
mov
fdivs
shrl
push
orb
mov
xchg
dec
sarb
test
rsqrtps
cmp
xchg
mov
rcrl
inc
js
mov
cmp
jnp
mov
inc
pop
sub
lods
dec
mov
inc
adc
jge
aaa
jle
insb
xor
adc
cmp
into
mov
xor
cld
cli
lret
adc
inc
push
ror
cmc
mov
ficoml
fidivl
test
imul
or
jg
cmp
nop
mov
xchg
scas
inc
jno
pushf
cmpsl
mov
jno
movsl
jle
push
loopne
cmp
mov
ss
and
push
cmp
clc
in
ss
xchg
es
stos
pop
push
mov
lea
repz
test
push
call
sbb
mov
mov
daa
cmp
in
dec
sbb
fidivl
arpl
jl
call
aad
imul
or
push
add
nop
add
push
push
iret
mov
xchg
push
push
xor
pop
call
jle
or
adcl
cmp
pop
mov
pop
outsl
xor
push
add
cmc
fucomi
ds
pop
mov
pop
pop
xor
lds
pop
cmp
gs
jb
lods
fbstp
cltd
sbb
mov
xlat
mov
je
leave
cmpsl
mov
hlt
test
rclb
ret
in
mov
adc
mov
stos
sub
inc
in
jge
dec
cs
fisttpl
sub
imull
pop
das
sbb
outsl
jg
sbb
aam
mov
cmp
pop
es
push
sbb
push
mov
ja
fiaddl
sbb
add
add
mov
xor
inc
push
pop
jbe
adc
int3
pop
sub
sub
arpl
shlb
cmp
xlat
in
mov
ficoms
ljmp
xlat
cli
push
pop
gs
lahf
icebp
pushf
dec
mov
scas
xchg
insb
mov
xor
clc
jl
xchg
xor
jge
jne
pop
in
pop
div
and
jbe
pop
dec
icebp
pop
push
ljmp
das
mov
cvttps2pi
fsubrl
mov
adc
in
dec
imul
lods
ss
pop
fsubl
jp
lock
sub
dec
popf
xor
pop
out
div
aam
adc
xor
sahf
lahf
pop
xor
cltd
adc
xchg
imul
or
jmp
aam
mov
jnp
adc
imul
rolb
add
sbb
mov
into
out
ljmp
cmpsl
sub
out
and
stc
fcomp
sub
lods
gs
add
adc
cmp
jmp
cwtl
mov
in
cmp
pop
lea
in
xchg
sbb
mov
mov
mov
jbe
lret
out
ror
stos
loope
push
mov
fwait
imul
push
cld
test
sti
cmp
scas
jbe
ja
jne
gs
or
pop
inc
test
aad
push
jmp
dec
xchg
in
lods
repz
and
leave
pop
adc
cltd
or
icebp
push
lock
cmp
jp
pop
inc
bound
xchg
jecxz
xchg
addr16
rcrb
test
cld
inc
adc
adc
fdivrs
call
dec
adc
andl
dec
xor
das
push
jp
ja
test
out
pop
call
mov
testl
arpl
in
lods
cmpb
dec
ret
pop
add
jge
mov
sti
int
or
mov
fdivp
jnp
add
fldl
jae,pn
aam
inc
jl
lock
ss
xchg
inc
push
lods
cmpsl
icebp
jle
les
scas
add
js
gs
and
dec
pop
shll
mov
sub
in
pushf
rcll
inc
arpl
push
sbb
dec
nop
fildl
pop
mov
pop
movsb
int
mov
in
adc
mov
jecxz
mov
or
sub
aas
dec
jmp
iret
aaa
movsb
jle
dec
pop
fldcw
mov
mov
lahf
nop
test
xchg
bound
push
or
mov
int3
lcall
dec
inc
cmpsb
sbb
mov
jg
and
or
adc
scas
movsl
icebp
bound
lret
arpl
pop
xchg
inc
push
xchg
lahf
loopne
repz
pop
dec
lret
int
lock
cmpsb
pop
bound
imul
hlt
aad
loope
adc
imull
pop
push
incl
adc
aas
inc
jbe
dec
sbb
das
mov
movsl
mov
je
push
pop
roll
adc
jo
jecxz
fnsave
test
into
jp
pop
sbb
stos
add
mov
ljmp
in
sahf
mov
sub
cwtl
call
cmp
std
scas
cmpl
mov
into
xor
xor
cmpsl
in
push
ret
jl
sbb
adc
push
pop
in
out
lahf
cwtl
in
push
inc
cltd
mov
gs
and
push
cs
hlt
subl
and
fmuls
jno
lcall
jp
dec
jecxz
mov
jge
ja
rorl
xlat
jle
pusha
sub
aaa
xor
lret
push
and
mov
sub
clc
xor
pop
gs
mov
push
cmp
fdivrl
mov
adc
adc
or
xchg
push
pop
mov
jno
xchg
push
loope
sub
ljmp
sbb
xchg
fwait
xor
bound
push
inc
test
das
cs
adc
sbb
pop
divb
dec
cmp
dec
cmc
push
mov
cld
ds
mov
adc
dec
adc
push
push
icebp
and
dec
sub
shrb
sahf
cmp
arpl
xor
in
adc
iret
mov
xlat
or
dec
mov
cli
sar
js
bound
mov
enter
pop
jne
ret
sbb
dec
pop
lcall
inc
xchg
mov
ds
dec
cld
sub
enter
push
lods
dec
in
mov
cli
xlat
push
outsb
xlat
jbe
cli
sub
fnsave
mov
add
fnstcw
mov
mov
lock
dec
and
dec
movsb
xor
pop
and
aas
xor
xor
or
inc
jb
outsb
notl
nop
cmpsb
xchg
sbb
lods
and
stc
sahf
bound
movsb
repnz
jbe
shl
cmpsb
add
clc
and
aaa
and
xlat
inc
adc
jl
ret
daa
pop
cmpsb
add
lcall
lock
pop
nop
xchg
add
aam
pop
sub
mov
test
cltd
xlat
lret
fstpl
ret
gs
xchg
popa
movsl
and
or
xor
adc
mov
out
sbb
xorl
dec
es
sub
popf
loopne
fsubrl
out
insl
jmp
aaa
test
imul
cmp
jb
sub
cltd
and
pop
cmp
out
arpl
xlat
push
inc
sub
stos
inc
es
rcrl
cli
mov
lahf
std
or
pushf
call
mov
pushf
enter
sbb
sbb
cmp
jecxz
iret
ja
idivb
push
adc
push
push
and
mov
add
xchg
xchg
iret
jnp
aad
jmp
hlt
lea
xchg
add
movsb
addr16
int3
push
adcl
std
scas
jp
mov
sub
movsb
jb
pusha
xchg
mov
subb
inc
xchg
fnclex
divb
scas
xchg
ljmp
shlb
and
pusha
out
cmpsb
out
in
or
cmpl
push
mov
xchg
shlb
mov
les
mov
scas
in
ficomps
jbe
pop
shr
in
mov
loopne
and
jmp
jno
jp
and
out
mov
sub
loope
sub
add
fnsave
enter
inc
lea
ret
out
pop
mov
mov
mov
add
pushl
lods
sarb
movsl
lds
push
and
xlat
mov
or
cmc
sbb
js
add
lahf
jnp
stos
negl
jmp
jbe
negb
push
call
movb
mov
cmp
pop
js
cmp
js
push
data16
xor
mov
sub
pop
adc
jno
dec
rol
decb
xchg
sti
test
daa
jge
sub
push
pop
das
dec
out
cltd
push
mov
inc
jp
xchg
push
in
cmc
rcll
adc
pop
mov
jnp
imul
push
loop
xor
aas
jmp
inc
iret
xor
jle
add
xor
dec
dec
pop
push
adc
lea
outsb
fidivrl
or
cmp
aas
std
cmpsl
enter
hlt
push
add
cwtl
je
xchg
adc
iret
cli
xor
loopne
call
push
leave
xchg
lods
mov
inc
imul
and
push
adcb
add
in
jge
push
pop
dec
xchg
and
cli
lods
int
in
cwtl
push
adc
ss
and
gs
adc
sar
or
pop
xor
fstpl
sub
iret
cwtl
mov
data16
nop
stos
add
aaa
aaa
insb
adc
fwait
and
xor
adc
inc
jecxz
dec
mov
push
add
sub
mov
sub
fimull
push
fcoms
adc
gs
mov
roll
shlb
or
lahf
sub
mov
dec
les
gs
cmp
or
enter
arpl
jb
inc
mov
jmp
add
shrb
cmpsb
imulb
cmp
aas
into
dec
push
insl
push
repnz
sbb
sti
inc
test
mov
xchg
fidivrl
cli
cld
aaa
dec
mov
orb
xchg
cli
mov
push
jns
push
inc
inc
sti
or
test
or
dec
jnp
js
add
pop
xor
push
jp
cwtl
std
mov
stos
mov
cmp
jecxz
test
pop
mov
xchg
cld
pop
lret
and
fcmovnbe
and
push
lods
pop
jmp
dec
adc
rcr
arpl
push
mov
sahf
outsl
push
mov
push
sahf
dec
adc
jle
in
mov
int3
iret
cmc
inc
mov
mov
int3
and
xor
mov
dec
add
shlb
std
movsb
jecxz
add
adc
ljmp
jb
xchg
das
cmpsl
add
push
mov
inc
and
mov
dec
nop
out
or
repz
ret
std
or
in
sbb
xlat
xlat
inc
mov
cs
mov
xchg
imul
loopne
dec
out
ret
jle
lock
or
push
test
dec
and
inc
cmp
sbb
aam
push
outsb
fistl
pop
popf
pop
ds
enter
xchg
sahf
fnstsw
xor
pop
daa
mov
int3
stos
jmp
ljmp
into
adc
fisubl
adc
adc
inc
mov
push
or
sub
mov
das
jno
xchg
loopne
and
or
pop
and
jp
mov
xchg
inc
push
xchg
cwtl
mov
fwait
rorb
lret
and
jl
bound
dec
loop
jge
pop
or
dec
xchg
mov
jp
add
lcall
insb
dec
or
add
sbb
imul
int
mov
jae
sarb
adc
mov
add
seta
and
mov
push
fcomps
add
lock
lods
jp
push
jo
dec
dec
cmp
xchg
pop
cwtl
test
or
mov
xor
jecxz
jo
mov
in
cmp
xor
mov
pop
sbb
add
repz
iret
add
lods
pushf
subb
or
jg
iret
or
adc
pushf
sub
fstp
mov
outsl
sarb
iret
pop
xchg
adc
pop
out
ret
jle
sub
mov
mov
sub
xor
xor
push
inc
cmc
loopne
dec
or
mov
int3
fisubrs
jo
jmp
scas
jnp
lret
jg
aad
rolb
imul
les
sahf
aas
fadds
lock
jecxz
sar
sub
sbb
cmp
push
lods
jns
test
jmp
inc
and
lds
mov
and
pop
js
adc
es
push
sbbb
xor
inc
pop
insb
add
xchg
jle
xor
ror
idivb
mov
in
cmp
fnstenv
sub
lret
pop
inc
and
fsubl
shrb
lea
jns
hlt
or
mov
mov
loop
out
xlat
addr16
addr16
inc
andb
or
ret
ficoml
xor
or
jecxz
pop
xchg
outsb
add
push
fwait
or
test
pushf
push
push
aam
outsb
pusha
xor
shrb
mov
sub
jno
jnp
cmc
cmp
xchg
in
imul
adc
pop
das
ret
sub
js
fdivrl
mov
add
in
ror
fwait
mov
decl
xor
ljmp
movl
dec
mov
or
push
xchg
inc
mov
sub
icebp
pop
pop
aas
jge
push
jbe
xchg
jno
out
rorb
repz
aaa
inc
inc
fmuls
xchg
adc
das
pop
arpl
mov
push
scas
and
fsubrs
sar
lahf
std
mov
jg
jmp
int
add
adc
aad
jnp
push
xor
cltd
fiadds
mov
test
mov
pop
pop
and
sub
cmpsl
leave
and
orb
test
mov
jnp
sbb
fdivrs
lcall
sahf
aad
push
test
dec
push
jns
sub
jmp
dec
mov
notb
pop
xorb
dec
add
ret
pop
inc
pop
in
cmc
dec
out
dec
jl
mov
push
imul
testl
pop
fdivl
jno
jbe
in
les
arpl
movsl
push
imul
and
xchg
mov
jge
mov
and
out
or
pop
push
lods
xor
ss
sub
mov
adc
push
jle
test
dec
pop
shlb
cs
test
xor
push
enter
push
stos
inc
xchg
add
int
push
jge
in
movsb
int3
popf
cmp
push
inc
jle
add
add
push
push
xlat
mov
mov
mov
stos
arpl
adc
adc
ja
jno
loop
in
inc
adcl
fs
cltd
leave
mov
popf
insb
loopnew
and
addb
sub
cmp
fwait
and
mov
mov
add
imul
je
loope
imul
fstpt
pushf
lcall
and
fmull
notl
mov
push
mov
cltd
fstl
sbb
mov
mov
mov
jmp
xor
add
ret
pusha
stc
aam
mov
rcr
imul
fwait
xchg
ret
repnz
scas
jnp
repz
int3
cmp
dec
inc
pushw
jno
xchg
test
rorb
leave
cmp
fcoms
xor
jnp
aad
shlb
cli
not
sbb
pushf
jno
mov
adc
sti
mov
inc
adc
loope
leave
mov
or
xchg
add
stos
in
push
jp
dec
inc
xor
xor
stos
mov
test
sbb
out
mov
jo
andb
jae
cmpsb
repnz
inc
add
mov
push
cld
out
rorb
dec
lea
add
int3
sub
shl
cld
shlb
imul
pslld
lret
cs
pop
imul
push
fneni(8087
ds
dec
cmp
pushf
imul
ljmp
adc
outsl
outsb
pop
push
push
push
inc
adc
dec
push
push
sub
push
sbb
leave
in
mov
in
and
dec
test
inc
xlat
inc
incb
imul
test
sbb
iret
hlt
sub
mov
jmp
or
dec
jg
pusha
pop
mov
repnz
nop
out
adc
sub
insl
mov
pop
lods
int3
and
test
sbb
mov
and
outsl
iret
xchg
jl
icebp
jmp
xor
in
sub
jb
imul
pop
test
clc
je
into
inc
or
aaa
xchg
stos
ss
imul
or
jl
and
lahf
mov
les
push
xchg
shlb
je
inc
cmpsb
mov
sbb
mov
ja
dec
imul
sub
jmp
mov
leave
jmp
mov
int
lcall
fld
stos
jp
pop
jne
lods
je
stos
push
pop
je
push
push
pop
cmp
add
loopne
dec
push
jns
mov
lret
cmp
sbb
mov
lret
mov
ja
xor
int3
outsb
cmp
inc
jb
mov
push
in
xor
cmpsl
and
outsl
in
rcr
jnp
rcrl
pop
andl
cmp
jg
loope
dec
cmp
repz
fdivrs
loop
std
sbb
jne
nop
enter
je
push
xor
subb
push
jbe
inc
loope
or
jb
jmp
out
push
sti
jae
cmpsl
sarb
sti
jp
pop
lcall
popa
pextrw
jp
pop
or
xchg
sahf
ss
lea
loope
rcr
sub
pop
xchg
adc
add
out
pop
fcmovbe
loopne
rcrl
je
f2xm1
insb
dec
ljmp
and
aad
mov
push
push
mov
scas
mov
and
jns
jbe
gs
and
adc
insb
push
out
iret
pop
popf
inc
push
pop
and
sbb
jb
push
xchg
stc
dec
pop
inc
fwait
dec
and
fsubp
lret
xor
cmp
in
xchg
test
xlat
mov
adc
add
mov
inc
mov
push
rclb
rolb
int
inc
jns
imul
movntps
sub
lock
lcall
xorl
sbb
jnp
xlat
mov
jne
into
mov
addr16
in
cmp
shr
repz
inc
aam
lds
and
xor
stos
es
les
lret
lods
int
jo
and
aas
inc
testb
adc
loopne
ret
or
btc
inc
rcrl
sbb
mov
pop
cli
mov
es
std
stc
sub
movsb
dec
imul
js
leave
mov
cmp
or
cmp
ljmp
js
add
pop
mov
inc
inc
mov
and
shll
xor
xor
or
nop
iret
movsb
sti
inc
add
or
fwait
int3
mov
sbb
jno
xor
push
push
shlb
adc
pop
mulb
arpl
mov
cmpl
sar
sbb
mov
sbb
pop
mov
xor
xchg
adc
test
scas
mov
pop
adcl
mov
lret
mov
sbb
mov
mov
stc
jns
xchg
popf
mov
in
sub
repnz
inc
fs
mov
out
in
loope
mov
in
les
enter
fmul
repz
xor
ds
test
add
ret
xor
inc
inc
inc
fs
pop
repnz
icebp
and
in
jmp
out
mov
sub
addb
adc
nop
adc
mov
inc
xlat
push
call
cmp
out
push
pop
popf
jmp
outsb
mov
add
jbe
adc
movb
mov
or
out
js
ss
sub
fnstsw
out
pop
ret
or
xor
xor
notb
dec
lea
sbb
faddp
mov
rcrl
call
imul
add
adc
add
cwtl
out
in
add
ss
fcompl
adc
inc
cmc
test
jb
adc
cmp
je
mov
dec
xchg
das
addr16
outsb
outsb
stos
pop
cs
mov
mov
test
sbb
lahf
and
in
cmpsb
ljmp
mov
jmp
and
scas
dec
or
xlat
ds
mov
outsl
nop
insl
xor
bound
in
shlb
pop
shrl
mov
jo
jns
push
movsb
les
out
push
mov
in
inc
inc
cmpsb
and
jmp
rorl
xlat
sbb
iret
mov
pushl
jmp
imul
shlb
mov
jg
addr16
adcl
or
xchg
xchg
fnsave
outsl
xchg
xchg
xor
aaa
pop
sub
int3
jg
loopne
ss
xor
ljmp
push
data16
dec
adc
xchg
fcoms
xchg
stc
mov
sub
mov
test
insb
loope
out
lret
pop
cmp
push
test
ret
pop
hlt
fcompp
call
jo
adc
push
adc
mul
fstl
bound
jnp
push
mov
jno
pop
lock
arpl
clc
mov
inc
rorb
adc
das
push
test
test
xchg
stos
cmp
and
push
push
xorb
mov
push
lods
push
iret
notl
cli
push
aad
sbb
push
cltd
fxch
pop
movsl
loopne
lret
push
rolb
jns
clc
push
ror
ror
pop
jb
movsb
jp
inc
add
ss
cltd
adc
xchg
es
cltd
fsubrs
clc
push
mov
pop
mov
push
inc
xor
xchg
push
insb
outsl
push
mov
cld
out
mov
ds
pusha
add
add
daa
daa
sbb
into
push
sub
fists
aas
frstor
jmp
xchg
adc
addr16
lds
jmp
les
pusha
cmpsl
mov
hlt
mov
hlt
out
cli
sti
dec
inc
jge
mov
jg
xchg
mov
jns
adc
push
push
push
fisubrl
push
lahf
or
or
mov
adc
popa
pop
test
pop
adc
fcompl
jmp
mov
push
jns
adc
or
adc
lret
inc
push
add
dec
insb
mov
sub
push
popa
rcrb
mov
push
or
push
xchg
iret
shll
jle
add
lahf
mov
andb
pushf
insb
mov
sub
mov
lock
add
int
sub
jmp
stos
inc
in
xchg
cmp
cmp
sub
into
push
ret
xchg
jae
fiadds
popa
xchg
data16
and
xchg
popf
mov
add
and
test
test
pop
xor
mov
sub
push
nop
into
mov
xchg
test
dec
filds
pop
or
pop
gs
mov
out
inc
xchg
test
ja
imul
inc
mov
jmp
call
inc
ret
and
xor
loop
repnz
jmp
xor
mov
adc
aaa
inc
aas
xchg
mov
jne
ss
loopne
rcrb
pop
icebp
pop
sub
mov
push
mov
cld
jl
pop
fld
xchg
cmpsl
push
cmc
popf
inc
das
fistpll
lea
adc
dec
cmpb
outsl
jge
cwtl
notl
jne
hlt
daa
or
imul
outsb
and
mov
cmp
outsl
add
int
dec
mov
inc
xor
dec
mov
push
es
loope
sbb
popa
mov
xor
jns
fcoms
pop
mov
movsl
jns
das
enter
ljmp
std
mov
jl
inc
cwtl
lods
shl
push
arpl
fwait
pop
jne
cmp
pusha
mov
gs
xor
fdiv
inc
push
add
xchg
int3
repz
int3
mov
add
xor
cmp
push
scas
or
stos
cmp
pop
data16
pop
jnp
mov
jl
pop
push
xorb
insl
lea
jge
add
ljmp
xlat
pusha
pop
jns
jl
dec
mov
pop
out
push
or
fs
ljmp
es
lret
cmp
inc
sub
popf
lcall
mov
pop
adc
or
jno
mov
or
dec
out
cwtl
imul
mov
inc
rol
pop
adc
andb
push
dec
inc
bound
jp
jmp
mov
mov
jmp
out
outsl
lock
sbb
repz
push
xor
scas
mov
mov
inc
std
out
xor
incb
sti
lcall
ret
sahf
pushf
jg
and
popf
push
xor
inc
jg
mov
imul
js
fsubs
daa
sub
ss
mov
and
fbld
jg
push
mov
push
rcrb
mov
push
data16
sti
push
pop
shll
clc
cmpl
pushl
push
and
xor
xchg
stc
xchg
pop
scas
push
inc
jg
inc
dec
outsl
sbb
push
cmp
stos
add
xchg
jno
nop
mov
jmp
jl
movntq
loop
imul
addr16
push
fiaddl
adc
ret
imul
sbb
cmpsl
xchg
sbb
int
xchg
cwtl
test
cwtl
push
iret
pop
shll
scas
or
aas
popf
pop
push
addl
sub
idivb
xchg
pusha
mov
add
jno
jnp
daa
xor
jp
add
add
iret
in
dec
inc
jle
out
cmp
cmp
dec
out
outsl
dec
fwait
mov
out
movsl
movsl
fnstcw
inc
fidivl
push
std
push
push
popa
jae
xchg
inc
jns
xchg
mov
imul
or
aas
xorb
jp
sub
and
xor
paddsw
mov
outsl
in
andb
mov
jb
movb
lret
jecxz
push
fcos
adc
cltd
loop
dec
adcl
repz
jns
andb
pop
dec
mov
je
mov
stos
pop
jg
js
lahf
scas
lret
xchg
lret
int3
addr16
and
test
xorl
inc
das
leave
jbe
jno
cmp
ret
xchg
jmp
loopne
idivl
jo
mov
dec
add
into
int
xor
dec
adc
outsl
clc
xor
stos
iret
push
inc
cltd
sysenter
pop
ret
adc
insl
mov
or
repnz
dec
jmp
sbb
sbb
enter
mov
iret
xor
mov
xchg
and
ja
mov
jnp
adc
cs
xor
gs
jno
cmpsb
mov
push
dec
dec
test
or
icebp
aad
pusha
scas
or
mov
pop
inc
mov
push
pop
stos
cmc
outsb
into
stos
jmp
pop
fs
loop
dec
adc
popf
cmp
mov
mov
mov
pop
scas
popa
mov
xor
xor
cmp
das
or
lret
loopne
jmp
pop
fstl
sbb
dec
stos
pop
loope
mov
sarb
scas
pop
dec
fchs
inc
stos
inc
pushf
mov
jmp
dec
sub
pop
imul
cltd
mov
jl
out
pop
or
cmp
cmp
adc
lock
test
cmp
mov
inc
hlt
test
xchg
in
aas
adc
inc
add
dec
jmp
lea
cmp
dec
or
pop
test
sub
cmp
addps
repnz
cli
je
es
icebp
fs
sarb
lods
xor
jbe
enter
mov
xor
dec
imul
mov
inc
xlat
incl
out
jb
xchg
mov
call
cmp
popa
push
add
hlt
into
loope
xacquire
add
cmpsb
sbb
pop
fbstp
enter
mov
or
mov
cmp
cmp
mov
mov
push
ljmp
mov
add
pop
mov
jl
rdtsc
cmp
addr16
loope
mov
addps
or
int3
ret
fistpll
je
jae
dec
jbe
xchg
dec
ss
ret
pop
pushf
sahf
mov
mov
shr
dec
cmp
xchg
fnstsw
sbb
out
nop
or
pop
pushf
mov
and
ss
cmpsl
test
adc
mov
es
dec
inc
sahf
imul
ret
pop
movsb
pop
in
sub
mov
out
push
pop
adc
mov
pop
push
mov
dec
stos
sbb
mov
imul
mov
and
add
mov
jns
mov
cmpsl
shrl
pop
cmp
pop
push
mov
fnstenv
and
in
xor
jp
jmp
insb
push
out
stos
cwtl
enter
sub
add
pushf
pop
in
xchg
sbbb
jno
lret
xorb
adc
or
pusha
je
jl
testb
out
notl
adc
stos
mov
pop
sti
not
ret
or
push
xchg
rorb
or
sub
xor
mov
sbbb
out
stc
test
out
jns
cwtl
dec
cmp
pop
adc
xchg
cmpsb
dec
fildll
aad
mov
mov
or
xor
add
pop
addr16
xor
movsbl
sahf
shl
cmp
scas
jge
iret
xchg
push
pop
out
cmp
sub
jge
push
push
adc
arpl
loopne
pop
xchg
or
lods
add
sahf
cmc
test
adc
mov
scas
dec
movsl
xor
cmp
mov
push
push
pop
inc
mov
xchg
gs
xor
mov
out
testb
clc
jo
movsl
das
loope
and
stos
test
out
jmp
stc
shrl
and
js
rcr
xlat
sbb
push
pop
cwtl
iret
movsl
fsubr
jne
jo,pt
outsl
jbe
inc
lds
loop
dec
imul
sub
adc
cmpsb
mov
addr16
mov
fsubrl
pop
je
mov
adc
je
and
and
mov
or
hlt
rcr
cmp
fidivl
bound
js
movsb
mov
push
fildl
flds
pop
pop
mov
lods
push
mov
cmc
jmp
loope
sub
fmul
adc
pop
call
mov
aam
dec
push
repnz
mov
shll
js
test
incb
lea
outsl
mov
dec
cs
mov
pop
repz
inc
pop
xchg
push
dec
inc
dec
dec
lcall
pop
aas
pop
outsl
clc
nop
decb
xchg
mov
stc
insl
pop
or
adc
cmp
jns
dec
call
push
daa
push
and
sub
lcall
mov
pop
sbb
sub
iret
int
ret
xor
stos
mov
xor
popf
adc
leave
mov
gs
cmpsl
mov
sbb
adc
push
mul
loope
or
scas
fidivrs
jp
aad
add
lds
or
xchg
pop
fcmovne
xor
ffree
out
sbbl
insb
add
push
add
cmpsb
push
daa
fsubr
pop
mov
pop
jecxz
lret
cmpsl
and
loop
rcr
pusha
and
loop
fcmovnb
and
data16
sub
mov
xchg
jecxz
xor
movsl
mov
inc
lds
cmp
xor
mov
int
push
mov
and
mulb
sub
push
jmp
mov
ficoms
lcall
mov
sub
rcr
shlb
movsb
pop
js
addr16
cwtl
xchg
fcmovne
dec
lahf
roll
jg
test
mov
xchg
int3
dec
out
clc
mov
pop
lret
mov
scas
dec
nop
sarl
push
je
imul
xor
pop
xchg
test
xor
push
pop
fldenv
sbb
ja
sub
adc
push
in
jno
cmp
xchg
das
jo
push
or
push
lods
je
imul
cmp
fwait
lret
jle
cmp
push
or
adc
dec
sbb
loopne
xchg
test
enter
sbb
enter
add
cs
sub
addr16
cmp
or
mov
dec
push
add
cld
das
jp
xlat
mov
bound
popa
mov
ror
xchg
mov
or
sti
lds
sub
mov
inc
and
pop
rorb
xorl
je
loopne
popa
mov
dec
sbb
mov
mov
arpl
rolb
stc
aad
ljmp
sbb
xor
adc
sbb
pop
sti
gs
addl
pop
int3
pop
in
scas
xchg
movsb
pop
cltd
push
jp
sbb
jecxz
and
repnz
je
xor
sbb
and
pop
adc
xchg
sbb
mov
jg
out
sbb
xor
xor
push
aad
push
sbb
sub
push
sbb
mov
jle
arpl
bnd
xchg
dec
arpl
ja
nop
fimuls
shr
jo
xlat
fildll
xchg
dec
mov
sbb
xchg
mov
sahf
xchg
sub
pop
xor
mov
adc
add
push
adc
lret
jbe
pop
insl
xlat
sub
negb
imul
or
rcrl
cs
dec
rorl
push
clc
daa
in
sub
cltd
aaa
jnp
je
stc
push
xchg
pop
sbb
hlt
dec
lods
lret
popa
mov
pop
ret
js
stos
outsb
ret
ficomps
sub
jmp
dec
mov
scas
xlat
int3
push
test
in
inc
fdiv
into
jbe
mov
sub
fucomp
aad
stos
fistl
insb
es
cmp
and
es
aaa
add
dec
sbb
mov
adc
pop
incl
ljmp
xor
add
faddl
ja
pushf
pop
or
cwtl
rcll
push
bound
jo
fildll
pop
push
movsl
mov
dec
cmc
orb
xor
push
add
cltd
insb
mov
mov
cmp
notl
jmp
jp
icebp
into
jg
push
inc
scas
out
cmp
cmc
sub
adcl
daa
xchg
pop
sub
stos
mov
push
jecxz
inc
push
ret
cli
in
hlt
or
push
cltd
bound
push
jns
aas
and
push
cwtl
dec
ret
in
xor
and
xchg
pop
insl
ljmp
sub
and
adc
mov
sub
inc
ds
sbb
jmp
ds
daa
add
add
xor
xlat
stos
xchg
das
add
cmp
or
xlat
cmp
jmp
sub
mov
cmp
imul
fsubs
fadds
pop
adc
sbb
push
push
push
pop
repnz
push
loope
ret
add
mov
lds
jge
ljmp
jb
inc
push
das
and
test
sbb
test
xorl
dec
in
pop
scas
cmp
and
mov
lea
frstor
add
je
je
mov
cmpsl
dec
cli
clc
in
push
andb
cmp
sbb
ret
mov
popf
xchg
jg
adc
fistl
sbb
mov
rcrb
dec
jecxz
push
pop
xor
cmp
xor
mov
loopne
add
mov
sub
test
ficomps
dec
sbb
add
push
jnp
testl
psadbw
mov
jecxz
cmpsl
mov
movsl
mov
int
das
in
nop
mov
mov
mov
xor
clc
adc
push
mulb
fneni(8087
add
fstpt
xchg
pop
and
add
pop
or
in
mov
ja
stos
scas
jbe
sub
loope
pop
push
scas
or
pop
pop
hlt
add
pop
mov
movl
mov
xchg
mov
jno
int3
xor
jo
or
xchg
sbb
outsl
jecxz
jo
clc
and
dec
insb
es
xor
std
inc
xlat
pop
jge
pop
jnp
test
insb
cld
jmp
ror
outsl
arpl
jg
mov
dec
pop
aaa
cli
push
stos
out
jg
out
in
mov
dec
pop
in
dec
inc
scas
dec
inc
aad
pop
stc
jle
lds
divb
add
movsb
cmpsl
dec
in
iret
fidivs
repz
sub
outsb
adc
push
pop
je
push
scas
inc
pop
outsb
mov
in
xchg
xorl
or
inc
jp
mov
push
repnz
loope
xor
lods
add
jmp
push
mov
jns
push
enter
push
lahf
repnz
xor
movb
dec
cmpsb
rclb
iret
cmpsb
leave
rcr
fidivrs
adc
jecxz
sub
out
pop
ss
jb
lods
out
pop
sbb
lea
mov
xchg
adc
fucomp
xor
stc
cwtl
jmp
fldl
pop
pushf
sub
mov
mov
rcrb
loop
jl
push
insl
das
shl
xchg
mov
dec
popf
jl
cmpsb
and
mov
mov
mov
mov
ja
jb
scas
ficoms
add
lret
movb
or
loope
ljmp
dec
ljmp
push
fs
inc
jle
sbb
inc
add
incl
sbb
sbb
ret
xorb
into
incb
mov
sahf
test
xchg
inc
clc
xchg
adc
add
cmpsb
rcr
pop
aaa
das
mov
or
jmp
dec
into
and
jnp
jb
cmpsb
int3
pop
fstps
insl
fwait
call
mov
lods
idivb
sub
jo
out
mov
cli
dec
mov
das
and
mov
gs
lods
inc
sbb
xor
jl
pusha
stos
sahf
pushf
addr16
fisubs
leave
inc
pop
aam
fwait
pop
cld
or
lret
in
adc
jle
in
data16
push
mov
je
and
dec
sbb
mov
imul
int3
sbb
popa
mov
in
inc
xor
cmc
xchg
mov
cmpb
std
inc
pop
jbe
mov
ficomps
out
in
push
sub
sub
popa
add
xchg
cld
lret
fcoms
shl
out
aam
nop
or
icebp
in
stos
push
fisttps
lea
test
mov
out
hlt
cmp
and
shll
popf
cmp
add
mov
mov
rol
inc
inc
dec
xlat
test
mov
cs
je
sti
lahf
xchg
jmp
fwait
push
add
lret
push
out
lds
inc
mov
jge
iret
popf
jo
push
test
clc
cmpsl
js
sub
pop
je
inc
jb
cmp
inc
mov
jbe
add
fbld
sbb
aam
jg
rcrb
inc
lods
ror
in
ja
pushf
ret
inc
xlat
std
push
sub
in
or
xor
jb
cmp
loopne
cli
jp
sbb
or
insb
and
push
mov
sbb
push
orl
cmp
call
sub
xor
mov
inc
pusha
push
movntq
jge
test
mov
or
mov
xor
out
andb
or
sub
jmp
xchg
push
je
nop
std
adc
mov
mov
push
sub
adc
dec
add
ret
testl
cmp
hlt
and
cmp
clc
mov
mov
mov
adc
repz
dec
push
aam
imulb
pusha
mov
jmp
mov
popa
mov
cltd
leave
xor
jecxz
ret
cmpsl
lcall
leave
repz
inc
daa
or
cmp
imul
lods
dec
jp
rcrb
xor
push
mov
pop
xchg
scas
andw
push
sti
xor
and
jmp
add
pop
mov
add
cmc
decb
daa
dec
scas
rclb
js
aam
adc
pop
pop
jo
mov
sub
cmp
je
fbld
push
mov
dec
jl
or
rorl
je
add
out
sub
mov
fcmovnbe
ja
dec
jo
sti
mov
test
out
mov
mov
inc
mov
mov
inc
sub
jg
popa
mov
inc
or
mov
jle
popl
cmp
and
jecxz
in
loope
jb
imul
adc
xor
xor
and
jmp
jle,pt
sbb
ss
ljmp
out
punpckldq
jle
cmpsb
cltd
aam
ds
mov
pop
cli
inc
dec
shlb
mov
in
mov
pop
out
pop
push
jp
divl
addr16
sti
push
das
into
mov
push
mov
jae
xor
iret
adc
outsb
adc
scas
ljmp
jle
pop
pop
jp
mov
add
movsl
add
arpl
and
adc
mov
dec
sub
lret
mov
push
subb
aad
inc
and
fistpll
inc
lahf
cli
push
imul
int
lret
cmp
cmpsb
mov
jp
inc
iret
dec
lahf
push
push
dec
mov
in
shlb
xor
jl
xor
jns
les
jge
bound
dec
xchg
std
and
dec
sti
orl
insb
outsl
adc
pop
outsl
iret
jge
pop
inc
push
xchg
loop
mov
arpl
sub
fistpll
xlat
add
and
jnp
popf
insl
jbe,pn
pop
xchg
sti
jge
imulb
jmp
fidivl
movsl
call
stc
addr16
jle
leave
pusha
adc
les
jb
sub
dec
adc
lahf
cwtl
lea
psrld
pusha
mov
push
repz
pop
gs
mov
push
scas
jmp
mov
jg
icebp
lods
or
out
xor
or
adc
xor
push
add
or
sbb
cmpsl
in
xchg
ret
sbb
jle
and
into
lods
hlt
nop
xor
fistpl
dec
fst
lret
out
call
imul
ret
xorl
dec
and
xor
fldcw
jl
dec
dec
sti
xchg
cltd
jae
cld
daa
loop
js
and
rcrb
xor
fidivrs
orl
add
lds
iret
jbe
jns
popa
sbb
or
enter
mov
mov
jb
dec
ret
add
mov
pop
xchg
jno
add
fadd
xorb
xor
insb
stos
fdivrl
ljmp
cmp
nop
cmp
into
movsl
jo
in
jnp
arpl
aam
and
fldl
mov
test
jg
lcall
fwait
sbb
in
sub
test
xchg
push
mov
sub
jns
mov
cmp
adc
cmp
sbb
call
mov
push
mov
repnz
inc
jle
imul
mov
dec
outsb
mov
pop
adc
lea
push
dec
add
push
lahf
cmpsb
and
xor
mov
and
dec
lods
xchg
lods
sub
cmp
push
faddl
loop
stos
ljmp
adc
cmp
dec
pushf
mov
mov
and
pop
scas
sahf
adc
jmp
stos
xchg
aam
xchg
jno
cmp
push
mov
ljmp
cmpsb
cmp
scas
pop
mov
sub
xchg
leave
scas
ja
jno
fimull
push
dec
adc
pop
subb
in
mov
stos
adcb
pop
inc
xor
test
mov
sub
std
jbe
jb
ret
cmp
pop
into
push
inc
xor
enter
jb
in
fadd
es
mov
pushf
fwait
popa
jne
mov
xchg
sub
jno
push
imul
jae
jne
je
lods
mov
push
xchg
jbe
xchg
dec
jmp
cmpsb
stos
xorb
and
xchg
xchg
mov
dec
mov
in
adc
mov
aad
xchg
out
imul
and
faddl
idivb
outsb
iret
es
fcmovnb
fsubrs
add
cs
dec
pushf
inc
jb
mov
adc
fucomi
xor
popa
lcall
jno
xor
xor
cmp
mov
pop
int3
pop
or
scas
dec
test
mov
cmpl
mov
mov
jb
test
pop
std
imulb
in
pextrw
push
ficoml
xchg
or
lods
xchg
ret
mov
push
lds
popf
mov
sbb
cwtl
pop
inc
jge
add
pop
mov
mov
cmpsb
mov
jmp
inc
pop
push
push
and
xorb
mov
or
sub
mov
popf
sub
fwait
mov
lock
jo
ss
mov
mov
movsl
shlb
jle
dec
mov
pop
jl
fcoms
push
bound
ss
sti
sbb
mov
pop
dec
dec
lahf
and
outsl
test
mov
cmp
sbb
and
jne
or
inc
mov
jne
jg
pop
and
or
xchg
adc
sbb
andb
popf
mov
cs
aam
sbb
aam
dec
sbb
mov
mov
stos
mov
das
lds
stos
arpl
test
fmull
lahf
movsb
std
inc
loope
into
insb
in
lock
dec
cmp
xor
mov
imulb
fwait
mov
pop
and
fisubrl
imulb
xchg
lds
loop
fldt
inc
out
pop
das
adc
into
lea
mov
lea
fcmovnbe
inc
aas
xor
addr16
jne
sub
lock
call
pop
in
das
and
or
or
adc
xchg
stos
sub
sub
jae
or
lahf
scas
stos
dec
mov
cmp
ss
stc
inc
cli
jae
not
push
jbe
shlb
sbb
aam
loopne
les
and
mov
movsb
sub
fabs
ret
push
enter
enter
inc
mov
int3
sub
or
in
sub
xor
adc
outsb
stos
xor
pop
xlat
mov
push
into
dec
aas
outsb
xchg
in
int
movsl
mov
pop
lea
mov
loopne
fcompl
ret
imul
pop
cld
sbb
scas
nop
sbb
shll
nop
repz
ljmp
xchg
cmp
lea
adc
push
pop
sub
fadds
scas
ficomps
lcall
lret
call
stos
push
aad
jmp
jnp
rolb
mov
je
rcll
sbb
mov
dec
ror
lock
inc
cld
adc
fwait
xor
push
lahf
std
sbb
adc
enter
push
std
cmp
mov
gs
add
pop
sarb
or
scas
xorb
xchg
test
xchg
xchg
xchg
xchg
jge
xchg
insl
ret
mov
mov
leave
sahf
push
adc
jmp
push
in
lock
out
lods
mov
pop
stos
cmp
repz
mov
hlt
mov
push
pop
or
pusha
jb
rorl
adc
dec
dec
arpl
jle
xchg
jg
add
pop
mov
add
inc
data16
ss
ss
pop
xor
or
dec
jbe
add
push
cmp
outsl
mov
cltd
sub
ja
mov
loopne
cmc
push
xchg
mov
inc
loopne
or
xor
xor
inc
push
movsb
jecxz
mov
jle
inc
or
add
mov
or
loopne
pop
and
andb
cmpsl
fwait
ds
cmp
repnz
cmc
dec
js
icebp
cmp
mov
jnp
pop
out
lods
test
jg
loopne
test
aam
push
das
xor
cs
cmp
and
xchg
pop
fwait
dec
xor
shl
adc
push
jnp
stos
sub
stos
lahf
mov
jl
xor
insl
dec
add
mov
jl
fisubrl
loope
pop
daa
xchg
add
add
mov
mov
mov
shl
push
or
or
in
and
int
rorb
pop
out
mov
into
adc
and
mov
and
and
and
scas
into
or
mov
setl
pop
pop
shlb
hlt
mov
pop
movsb
sbb
inc
popf
lret
push
push
cmp
push
mov
mov
push
pop
sub
ljmp
sub
fsubl
mov
aas
add
push
subb
das
sbb
repz
sub
xchg
rol
mov
incl
dec
sbbl
stos
mov
cs
ficoml
stos
xchg
sbb
dec
jmp
neg
pop
mov
add
inc
lods
pop
idivl
cs
test
ret
add
push
adc
xor
out
xchg
dec
call
sbb
hlt
pop
or
insb
cmp
push
xchg
pop
insl
lock
jecxz
jnp
pop
adc
mov
inc
fiaddl
pusha
lds
loopne
sbb
mov
sbb
fildll
jg
lds
push
sbb
mov
int
adc
clc
push
xor
jns
push
fucomi
negl
jbe
push
add
and
int
outsb
mov
mov
add
insl
cmp
fs
stos
dec
fldt
or
nop
fwait
add
jnp
fsubrl
inc
mov
mov
stos
adc
clc
cltd
mov
shrb
push
sub
int
dec
aaa
sbb
mov
out
jnp
stos
inc
jae
cmp
add
addl
gs
mov
das
es
aad
pop
arpl
shrl
fwait
xor
mov
pxor
mulb
xor
in
jb
fcoml
arpl
jne
cmp
sub
mov
adc
nop
stos
repnz
aas
pop
call
jns
dec
clc
repz
xchg
jne
pop
dec
test
stos
outsb
inc
inc
inc
fdivr
sbb
int
adc
out
add
lret
aaa
aad
xchg
fcomi
inc
mov
negb
arpl
icebp
mov
imul
bound
mov
push
in
push
ljmp
es
test
push
cmpsb
or
push
fs
mov
pushf
push
bound
iret
ficoml
cli
notb
ja
lods
scas
shl
jle
dec
cli
mov
js
ss
enter
roll
xor
sahf
xchg
lahf
mov
rclb
and
sbb
and
xor
lret
or
xor
daa
insl
and
mov
pop
jno
mov
imul
sbb
mov
push
xor
lds
mov
pushf
pusha
mulb
rcr
out
or
sahf
inc
mov
popf
lock
psubsw
fwait
outsb
fnstsw
lods
call
jbe
in
push
mov
mov
call
pop
cmp
mov
and
addr16
push
inc
imul
dec
dec
jae
sub
icebp
enter
jb
insb
je
ss
repnz
sub
adc
xchg
pusha
sbb
test
lret
and
push
and
jle
pushf
dec
jno
fsubs
add
cmc
pop
jb
xchg
pop
aam
push
pushf
xchg
adc
adc
imull
pop
dec
and
xor
push
xchg
into
aad
loope
dec
fldcw
sahf
push
jns
pop
cmp
into
fdivs
adcl
cld
bound
inc
sti
cmovp
xor
inc
cmpsb
or
cmovbe
push
stos
cld
sti
jb
sbb
aad
ljmp
adc
popa
adc
and
cmc
enter
int
dec
and
mov
icebp
fbstp
incb
xor
dec
out
lea
out
push
mov
xlat
popf
jge
es
pushw
xchg
push
icebp
cmp
pop
lret
mov
out
fnstsw
ficomps
xchg
cmp
push
movsl
mov
cmp
push
mov
mov
cs
repz
add
andb
test
popa
aam
sub
dec
pop
aaa
inc
clc
mov
adc
xchg
stos
fidivrs
adc
jle
xchg
push
sub
mov
insl
bound
sub
aad
test
ret
mov
add
and
inc
pop
scas
and
mov
lcall
mov
mov
sti
add
mov
sub
lret
int
xchg
sub
mov
mov
cmc
xor
loop
arpl
fucomi
enter
daa
pop
fisttpl
and
out
daa
mov
mov
dec
mov
clc
stos
fadds
adc
sub
insl
imul
push
push
xchg
pop
push
repz
xchg
xor
dec
inc
shlb
lods
repnz
in
lods
rcr
adc
fnstenv
xor
mov
movsl
inc
push
int3
add
inc
cmp
pop
pop
or
or
cli
mov
out
mov
jnp
sub
insb
and
or
pusha
aam
or
aad
pop
ret
push
outsl
aam
push
jne
xchg
adc
push
adc
repz
xor
xchg
jp
cmp
dec
push
xchg
pop
mov
push
push
jp
imul
jle
sbb
fwait
aas
lret
loop
cmp
dec
inc
add
jge
push
sub
lods
in
mov
movsl
cltd
ret
push
cmp
inc
call
inc
sbb
jmp
or
loop
and
dec
sbb
ja
cmp
push
add
dec
je
jge
dec
dec
cmp
mov
in
xchg
cmp
dec
mov
ret
xchg
jae
sub
in
sti
sarl
loope
nop
das
test
shl
sahf
add
sbb
push
sbbl
xchg
add
gs
scas
xor
mov
leave
cs
aaa
xlat
xchg
std
mov
cmp
and
cwtl
sub
xchg
lcall
outsb
shrb
fstpt
push
test
nop
aas
popa
call
lahf
stc
outsb
xchg
mov
sbb
ds
cs
outsl
lds
ucomiss
jb
jl
fldl
cmc
ficompl
test
add
cmpsl
add
test
call
xchg
pop
sub
jge
in
ljmp
add
sahf
push
adc
aas
dec
jmp
nop
or
xchg
xchg
adc
ss
andl
out
and
aaa
test
sub
push
add
mov
loop
pusha
loopne
or
insl
mov
ds
aas
xchg
stc
mov
and
jl
inc
imul
sarl
jp
xor
ror
ss
pop
pop
fildll
cs
gs
push
mov
ds
jno
test
or
and
xor
adc
xchg
stos
jmp
add
fildll
dec
leave
arpl
andl
push
shll
xchg
jns
xor
shlb
sub
arpl
ds
pop
int
rclb
cmc
sub
orb
cmp
mov
inc
lcall
sbb
es
repz
xor
mov
aam
adc
sbb
sbb
push
ljmp
fbstp
iret
mov
clc
mov
movsl
ss
cli
mov
mov
imul
into
adc
and
add
fnsave
ss
loope
and
mov
dec
call
insb
bound
out
mov
and
test
add
push
or
pop
in
adc
xchg
mov
mov
inc
leave
mov
loope
movsb
add
adc
cmp
mov
push
adc
inc
pop
pop
gs
mov
add
xchg
loope
lcall
cmc
fs
xlat
sahf
in
mov
pop
or
pop
fstp
nop
mov
cmp
adc
rorl
lcall
insw
mov
add
xchg
and
dec
mov
ljmp
push
sbb
int3
test
sub
mov
xchg
out
dec
cmp
adc
mov
jp
into
adc
das
stos
loop
add
dec
mov
cmp
jae
fwait
std
es
insb
push
repz
add
shlb
divl
out
jns
push
mov
mov
or
inc
movsl
out
xchg
ss
sti
int
xchg
and
fwait
cwtl
cs
out
pop
cmp
fisubrs
stos
lahf
call
sbb
xchg
popf
push
push
rorl
sbb
pushw
outsl
mov
inc
sti
pop
imulb
cmp
lret
loop
in
sahf
xlat
rcr
push
xor
daa
sbb
mov
jno
push
fisubs
aad
outsl
sub
sbb
je,pt
pop
into
aad
int3
addr16
data16
es
mov
or
dec
add
mov
arpl
push
enter
mov
gs
pop
cmpsb
mov
sbb
shll
inc
das
test
test
adc
jns
mov
adc
dec
inc
shll
leave
cmpsb
jbe
and
push
dec
pushl
cmp
or
sahf
mov
fdivl
lcall
lea
or
popa
cli
pop
movsb
icebp
push
iret
and
repnz
mov
das
mov
and
jl
mov
adc
icebp
std
mov
sub
les
pop
or
fcoml
fisubrl
dec
cmp
push
enter
rcrb
inc
stos
outsb
loop
push
push
jecxz
fidivrs
push
adc
xchg
lcall
test
into
cli
adc
inc
cs
dec
or
sbb
adc
jge
and
cmp
into
mov
das
mov
in
lock
stos
add
stos
aas
and
mov
dec
cmc
movsb
xchg
mov
add
inc
push
rcll
dec
cmc
data16
out
into
add
movsl
std
sub
inc
loopne
fiadds
lea
gs
lods
push
xor
ret
xchg
inc
sti
adc
outsb
jnp
rorb
push
pop
shl
mov
mov
cli
jge
andl
inc
ja
shll
mov
shrb
pop
adc
mul
inc
xor
scas
push
pushf
xchg
movsb
into
adc
ret
movsl
inc
or
sbb
mov
fisttpll
pop
ret
lcall
mov
xor
imul
aas
sahf
out
mov
leave
ljmp
ret
int3
xor
mov
sbb
mov
inc
repnz
jmp
popa
sbb
popf
out
scas
push
jecxz
lcall
pop
pop
and
popf
jp
jo
ret
aam
incl
pop
imull
std
sbb
mov
aaa
sti
stc
bound
add
lret
cmp
loopne
test
aam
mov
lds
sub
mov
add
lcall
jno
ds
sub
jl
sub
mov
mov
push
out
sarl
sbb
xchg
mull
ficoms
jae
mov
mov
jne
sbb
stc
push
jb
iret
subl
push
push
lcall
mov
xchg
add
jno
mov
cmc
jle
lret
inc
xor
push
add
pop
push
in
inc
sbb
pop
stos
cmpsl
mov
pop
subl
mov
add
push
or
jns
rorb
js
scas
popa
sbb
cmp
loope
dec
or
fwait
idivl
mov
xlat
jb
and
stc
fcmovne
int3
xchg
add
xor
mov
or
insb
mov
xchg
out
xchg
in
in
mov
inc
inc
js
daa
jo
idivb
test
into
mov
test
sub
test
lods
dec
daa
cmc
adc
push
mov
dec
xor
pop
add
pushf
mov
adc
repz
lock
je
inc
mov
addr16
or
add
sub
das
stc
jge
xchg
lea
mul
sbb
add
ds
out
ret
xchg
mov
scas
aad
mov
push
or
xor
jle
das
add
cmp
movsl
add
push
jae
or
icebp
inc
imul
push
sahf
or
and
mov
movsl
andl
lret
jns
mov
adc
aam
insl
inc
cltd
orb
imul
test
pop
dec
addl
icebp
mov
sbbb
mov
fcoml
adc
mov
es
ss
iret
imul
jb
es
sbb
mov
js
pop
cwtl
inc
pop
jnp
mov
cmp
push
aad
rorb
shll
aas
out
jmp
stos
int
mov
xchg
ljmp
mov
fsts
xor
hlt
adcl
pop
orb
jae
adc
mov
inc
cmp
testb
rcl
inc
imul
sub
loop
add
lods
cli
test
lret
popf
cmpb
xchg
bound
dec
lcall
sub
pop
and
pop
cltd
movsb
sbb
sub
subl
test
inc
cmp
mov
pop
fildl
xor
lret
mov
mov
mov
mov
cmp
cli
sbb
mov
and
mov
dec
xlat
lret
push
xchg
test
push
cmp
xchg
add
xor
ljmp
jnp
fldenv
xchg
test
movsb
inc
and
jmp
ret
vcmpss
or
inc
xor
mov
dec
sub
dec
rcrl
push
cmpsb
jo
cwtl
xchg
shrl
rol
shlb
mov
repnz
out
xchg
xchg
in
imull
pop
and
jmp
fstps
ja
push
xor
jbe
pusha
lahf
or
sub
icebp
insb
xchg
pop
sbb
lcall
mov
pop
add
jmp
std
or
ds
shll
test
jg
addr16
and
push
dec
and
xor
sbb
push
or
insl
add
leave
pop
cltd
movsl
fs
lcall
mov
add
adc
pop
sbb
mov
mov
in
and
inc
mov
sub
xor
imul
stos
push
xchg
stos
sbb
das
mov
cmp
pop
jb
xlat
dec
sar
sub
rorb
in
sub
lds
mov
enter
popa
sub
sbb
inc
mov
loopne
rcrl
xor
adc
mov
push
xlat
mov
mov
and
mov
pop
jno
adc
mov
mov
mov
and
stos
pop
int3
dec
fsubs
test
xor
or
sub
pusha
mov
addr16
fs
xchg
cmp
cmc
test
popf
mov
and
dec
gs
add
fistpl
pushf
sahf
test
repnz
rorl
mov
fidivrs
call
or
jae
add
test
mov
dec
mov
arpl
fsubrs
std
es
pop
pushf
cli
sbb
mov
enter
xor
imul
jge
jmp
dec
sbb
ret
out
enter
and
cmp
iret
movsb
cld
add
add
push
fistl
sbb
cmp
fs
sub
push
hlt
adc
xchg
int
sub
mov
pop
mov
jne
imul
or
mov
cmp
inc
sbb
cmp
jb
dec
or
stos
stos
lret
push
sahf
mov
sbb
dec
mov
dec
imul
pushf
jecxz
add
add
clc
rcll
filds
sub
dec
scas
push
inc
int
cmp
cmp
inc
xor
ret
cwtl
cwtl
inc
in
and
jl
mov
pop
or
inc
mov
and
inc
or
mov
lods
mov
sub
mov
and
mov
stos
or
inc
or
std
and
jecxz
jl
popf
rorl
fildll
or
fsubs
loop
lret
mov
jae
fsub
sub
xor
fisubrl
push
inc
xor
clc
jge
mov
mov
add
popa
pop
jl
ret
mov
cwtl
shlb
lea
aad
dec
cmp
in
rcr
rorl
add
out
pop
xor
enter
mov
cmpsl
out
mov
mov
cmp
aad
sbb
scas
fsts
sub
push
aam
outsb
mov
inc
dec
dec
gs
lahf
push
clc
sub
lret
mov
adc
xor
jg
dec
adc
sbb
dec
repz
ljmp
xchg
sub
sbb
push
cmc
adc
stc
je
mov
sbb
out
dec
repnz
pop
push
jl
movsl
scas
xor
negl
sahf
push
sub
and
shrl
mov
jg
ja
inc
sti
repz
and
push
add
inc
movsb
jmp
loop
push
mov
dec
push
and
sbb
jmp
les
mov
jno
mov
loopne
icebp
cld
mov
je
pop
mov
outsb
int3
xor
xor
push
fdivs
ljmp
pop
addr16
jg
adc
add
cmc
mov
daa
mov
push
jl
sub
sbb
call
pop
ja
fisubl
push
ja
loop
pop
xor
mov
inc
sti
sub
jmp
jbe
in
or
dec
mov
dec
jae
mov
sbb
popa
stc
ljmp
xchg
add
xlat
sti
mov
loopne
pop
dec
and
inc
inc
pop
iret
add
stos
xchg
sub
inc
je
es
fdiv
sub
hlt
ljmp
mov
pop
or
sub
mov
gs
les
jle
js
push
test
push
or
add
or
jnp
inc
out
or
push
mov
push
mov
or
arpl
xchg
dec
addb
xor
cwtl
lods
and
shr
or
add
aaa
rcrl
je
mov
push
adc
ret
data16
mov
or
and
int3
addb
pop
scas
jo
mov
push
imul
cltd
sahf
mov
adc
lcall
jae
cmp
test
xor
out
xor
mov
ret
andl
pop
imul
jp
test
xchg
clc
aaa
jnp
je
lods
lods
aas
sub
cmpl
dec
dec
stos
mov
add
int
pop
fnsave
adc
add
xchg
repnz
jnp
sub
dec
jle
adc
push
loop
mov
dec
es
sub
mov
ret
pop
aaa
out
jo
push
push
mov
insl
sbb
sbb
push
jo
jne
movsb
sub
lea
mov
and
add
popf
jnp
inc
or
xchg
pop
jp
jns
gs
xchg
and
xchg
mov
pop
jno
in
out
fs
dec
mov
fwait
cli
jp
push
hlt
pop
jmp
push
jo
and
dec
sub
jbe
js,pn
in
inc
xchg
sahf
xor
or
or
and
loop
pop
xor
fnsave
aad
jnp
dec
lds
inc
dec
jno
ds
cmp
mov
es
xchg
inc
dec
rcll
dec
imul
outsb
xor
pop
xor
in
push
mov
push
rcrl
push
lahf
js
adc
add
adc
iret
push
mov
fwait
out
enter
inc
fmuls
inc
pop
and
push
push
fwait
mov
shrl
lcall
jmp
pop
sub
rcr
cld
xor
adc
ljmp
pop
push
dec
pop
push
pop
mov
in
ds
jne
out
punpcklbw
mov
sarl
bnd
out
pop
ljmp
dec
int3
in
pop
cmpsl
in
rorl
mov
test
and
in
mov
mov
repz
xchg
leave
xor
or
lret
loopne
imul
fcompl
and
fcmovbe
mov
and
sub
push
insl
shrb
sub
xor
popa
xor
mov
mov
pop
flds
loop
aas
jle
xchg
push
xor
mov
xlat
loop
subl
cmp
sbb
repnz
sbb
push
jp
stos
jns
sti
push
ret
push
in
pushl
stos
add
adc
enter
ret
pop
stos
stos
and
mov
jne
adc
dec
mov
add
and
xor
stc
scas
push
and
lcall
inc
int3
or
xchg
sub
lods
les
push
incl
mov
sub
dec
arpl
adc
test
mov
movsl
mov
aad
pop
jl
in
sub
lahf
xor
push
pushf
pop
bound
loopne
pop
xchg
sarb
das
push
jl
subl
lret
adc
pop
adc
dec
xchg
xor
ret
xchg
xor
loopne
inc
push
cmpsb
stc
pusha
shrb
mov
or
lods
call
lcall
sub
mov
sub
inc
jb
adcl
mov
lret
jge
pop
enter
or
rorl
sub
ret
add
mov
rorb
sbb
push
shlb
push
inc
ss
jne
jle
loop
in
ja
jp
lret
lods
iret
lods
stos
sahf
dec
test
int
out
push
jmp
sbb
dec
xlat
nop
lahf
clc
fdivs
xchg
and
mov
aaa
add
stc
sbb
inc
push
popa
add
fisttpll
stos
lods
push
iret
scas
xor
adc
xor
xlat
rolb
rcll
mov
sub
xchg
xchg
sbb
mov
fdivs
out
xchg
int
sbb
mov
fwait
sub
cli
daa
mov
inc
scas
cltd
cmp
mov
lds
push
lods
in
jns
sub
adc
push
jle
lret
or
jle
gs
adc
push
jne
jns
aad
sarl
test
testl
and
shrb
push
xor
ljmp
and
sbb
lret
push
nop
bound
and
jmp
lds
mov
adc
sbb
push
pop
and
cmpsb
inc
daa
inc
mov
lea
xor
addr16
jae
int3
in
nop
sbb
jmp
fwait
sti
negl
notl
add
lahf
sub
test
add
adc
shl
stos
mov
iret
shlb
cmp
inc
xchg
sahf
sbbl
stc
mov
repz
popf
ret
ja
cmp
xchg
xchg
xchg
xchg
cmp
icebp
push
stc
mov
push
mov
inc
push
out
scas
adc
add
stos
dec
in
fwait
push
adc
or
jno
xchg
and
insb
jl
xor
aam
popa
aas
mov
mov
jl
adc
aaa
shll
rolb
push
mov
cli
rcrl
lods
or
addr16
push
pop
or
lea
sub
jb
mov
daa
xchg
es
inc
in
mov
or
pop
jecxz
xchg
rcl
sti
mov
sarb
mov
mov
or
std
jae,pn
lahf
cmpsb
and
inc
xor
pushf
dec
xor
mov
leave
imul
out
in
shrb
imul
dec
mov
dec
mov
dec
loop
fnstenv
jecxz
jp
in
inc
stos
sarl
xchg
xchg
jbe
mov
testb
xchg
cmp
stos
mov
inc
repnz
fidivl
xor
xchg
scas
add
or
push
lcall
aas
popf
insl
aam
pop
fcoml
mov
mov
and
add
ss
jo
pop
lret
add
inc
mov
adc
inc
xchg
popa
repz
jecxz
cmp
and
and
not
movsb
insl
jne
inc
pop
cmpsl
and
pop
inc
mov
aas
into
xlat
mov
loope,pn
scas
jno
popa
popa
es
add
dec
in
lds
fmull
xchg
out
dec
xor
idiv
cmp
and
cmp
icebp
mov
mov
mov
push
data16
out
loop
jle
loop
hlt
inc
fcompp
bound
rol
test
out
cwtl
and
push
mov
dec
pop
inc
dec
sahf
repnz
dec
mov
inc
je
sbb
push
jne
mov
insb
icebp
mov
cmp
push
push
jae
lret
sub
aad
mov
shrb
out
jmp
add
movsb
pop
xchg
psrlw
imul
dec
inc
mov
pushf
mov
add
jns
and
icebp
jl
test
mov
inc
incb
shlb
cmp
inc
inc
and
fwait
pop
inc
movsb
mov
insl
adc
cmpsb
negl
jae
pop
dec
xor
sti
add
into
cmp
leave
stos
jp
leave
xor
sub
xor
or
arpl
dec
sub
in
add
je
add
dec
popl
arpl
and
out
test
push
cmp
mov
shll
cld
clc
fcmovnbe
fs
and
in
int3
lods
mov
sbb
movsb
outsl
aam
jnp
mov
stos
xchg
and
dec
aaa
popf
nop
pop
jbe
pop
adc
xor
shrl
stc
cmp
push
and
mov
subl
jecxz
xor
xchg
cli
stos
fcomi
cmp
test
xor
bound
repnz
data16
ret
pop
ss
movsb
pop
and
sub
mov
adc
jle
aaa
cmp
enter
adc
xchg
jge
mov
std
push
test
stc
cs
mov
jecxz
sbb
test
icebp
inc
xor
mov
xchg
sbb
lea
rorl
cmp
inc
lret
mov
imul
scas
sub
inc
and
xchg
ds
das
scas
mov
imul
aas
or
imul
lock
test
adc
dec
mov
jmp
aad
std
pop
inc
rcr
iret
es
sub
adc
xor
out
shrb
pop
pushf
dec
addb
aaa
sbb
leave
mulb
sub
adc
inc
jle
cltd
mov
aam
inc
lock
popf
aad
cmpsl
mov
mov
mov
add
and
mov
lods
hlt
movb
pop
jecxz
sbb
jns
jmp
or
cltd
pushf
sub
out
inc
sub
and
add
pop
hlt
push
sub
cltd
rolb
inc
leave
add
cmp
pop
imul
or
add
mov
dec
and
xchg
inc
sarl
stos
push
adc
mov
cmp
or
out
add
mov
cli
out
mov
mov
xchg
sbb
pop
jp
cmp
call
decl
loop
xor
leave
jp
jne
jae
pop
push
jae
jle
add
ficoml
pop
adc
mov
pop
mov
lcall
lds
out
mov
ds
xchg
sub
dec
mov
enter
movsb
sahf
leave
dec
pop
adc
pop
into
push
xchg
or
cld
out
jbe
sub
ficompl
outsl
test
push
xchg
mov
dec
ljmp
dec
pop
cmc
or
push
fwait
push
loopne
iret
or
out
popf
das
dec
cmpsb
lret
xor
mov
addr16
out
das
sub
sub
and
ljmp
out
rcrl
push
rorl
xchg
jmp
xchg
pop
adc
cli
add
lods
cmp
stos
mov
and
fwait
scas
mov
inc
sbb
mov
xor
xchg
dec
inc
icebp
nop
rorl
xchg
xchg
pushf
and
sbb
xchg
jns
lds
mov
jg
mov
cld
mov
and
cltd
std
jno
arpl
in
mov
hlt
cmpsl
inc
inc
jp
mov
cmp
rol
test
imul
lds
sub
fcmovnu
push
fidivrs
aam
sub
aas
sbb
out
jno
mov
adc
xchg
add
das
cmp
lods
or
call
jnp
mov
incl
xchg
imul
add
aaa
inc
adc
notl
pop
mov
daa
sub
adc
push
or
in
add
jo
push
xchg
lret
out
ret
outsb
mov
push
jnp
push
pusha
aad
orb
rcrl
mov
in
push
add
cmpsl
in
sub
sub
int
nop
push
sti
dec
mov
outsb
mov
add
adc
mov
psubusb
adcl
orl
xor
and
lret
jge
repnz
mov
mov
gs
mov
in
adc
stc
ret
cltd
jbe
jmp
dec
cs
push
lods
test
cmp
mov
xchg
out
dec
into
push
jg
cli
lea
adc
daa
and
adc
add
iret
sbb
mov
data16
sub
mov
xor
sti
push
sub
sbb
sbb
out
push
push
dec
inc
add
jmp
shrb
aas
loope
cmpsb
add
sbb
mov
cwtl
adc
and
enter
mov
and
or
scas
push
imul
insl
ss
cmp
arpl
adc
mov
xchg
stos
les
into
in
push
ljmp
cmp
mov
xchg
or
xchg
arpl
xchg
push
jmp
cmp
lods
aas
xor
inc
sbb
dec
and
push
stc
test
sub
pop
into
mov
scas
pop
jle
shll
shlb
data16
and
psrlw
cmp
arpl
loopne
add
aam
push
inc
ficompl
div
cmp
test
lods
mov
pop
hlt
sub
adc
or
mov
or
dec
ja
scas
pushf
insb
pop
rcrl
jbe
mov
pop
push
lock
xchg
filds
test
adc
pop
dec
arpl
push
mov
adc
fs
in
mull
in
int
sahf
xchg
jnp
push
add
subb
fcoml
push
push
ljmp
popf
pop
mov
ret
inc
inc
rolb
lret
and
mov
out
outsl
pop
mov
dec
sbbb
push
stos
leave
jp
push
mov
sbb
mov
pop
loopne
mov
adc
fcoml
pop
fdivr
movsl
add
test
out
insl
inc
or
xchg
mov
inc
arpl
mull
hlt
arpl
xchg
jle
ds
pop
cli
mov
xlat
and
ret
xchg
mov
mov
outsb
test
pop
cli
mov
arpl
cmp
call
dec
and
in
jno
mov
mov
test
mov
lret
lahf
and
ret
shr
cmp
lea
mov
sbb
sub
dec
std
repnz
xor
cmpsb
jp
add
xchg
inc
test
and
cmp
pop
pop
xchg
iret
out
fsts
adc
jl
in
sbb
dec
cs
aas
cmp
mov
sarl
testl
movsl
gs
jne
cmpsl
xor
popa
ret
hlt
cmp
xchg
scas
stos
sub
and
mov
iret
push
mov
cmpsb
lds
and
add
idivb
cld
cwtl
mov
sarl
sbb
sub
je
repz
push
jb
push
push
add
lret
jmp
leave
jo
aam
ja
pop
mov
fdivrs
fmul
fnsave
ljmp
inc
andb
stos
push
das
and
fwait
inc
add
pop
aaa
jns
push
dec
push
sbb
inc
or
mov
cli
pop
xorb
arpl
rorb
fadd
les
add
jnp
es
pop
insb
mov
loopne
gs
dec
cwtl
jp
mov
jmp
xchg
mov
insb
aas
stc
aas
dec
add
rcrb
fstl
xor
mov
xchg
add
sbb
icebp
cmp
fdivrp
aas
mov
mov
mov
inc
pop
add
lods
hlt
xlat
pop
shll
or
scas
add
lock
popf
pop
push
xlat
xor
cmp
inc
xchg
dec
inc
arpl
in
shrl
sub
je
adc
lock
mov
call
lods
int3
and
sbb
inc
or
pop
imul
insl
adc
xchg
xchg
scas
inc
jns
aam
or
ret
cmc
and
sbb
lock
jb
sarl
mov
call
aam
xchg
pushl
mov
cmp
bound
leave
outsl
xchg
xor
mov
in
inc
mov
pop
lea
test
mov
lock
xor
sub
push
shll
cmp
mov
nop
dec
cltd
popa
cmp
repz
insl
fimull
insl
mov
ds
loop
fidivs
clc
test
mov
cmpsl
imul
mov
pusha
jecxz
mov
loope
and
loope
cmc
push
lret
incl
lock
inc
sbbb
ficoms
or
ret
mov
add
leave
jecxz
mov
daa
daa
das
push
xchg
addr16
dec
dec
lock
push
nop
mov
jo
aad
jp
sahf
inc
jp
xor
cli
mov
movsl
test
adc
push
data16
cmpsb
stos
ror
call
push
rcrb
cltd
xchg
movsb
sti
mov
sbbl
shll
test
iret
jnp
jo
out
insb
or
sti
aad
jo
stos
sbb
inc
xchg
push
sti
mov
mov
sub
pop
clc
add
cmp
push
cmp
sbb
imul
subb
call
je
inc
dec
lods
imul
sub
mov
or
mov
pmaxsw
out
or
jae
add
mov
clc
fisttpll
test
lods
fs
xchg
and
scas
ret
cmp
insl
ss
and
ja
mov
and
mov
push
in
cld
push
cmc
adc
out
mov
mov
sub
movsl
mov
push
xor
imul
jge
das
lock
imul
push
xchg
push
jmp
dec
xor
fcompl
mov
jmp
xor
jb
mov
or
imull
mov
or
fsub
shr
repz
push
cld
js
fcompl
mov
pop
add
addl
leave
mov
or
sbb
adc
jmp
scas
push
adc
insl
mov
mov
aam
dec
sbb
mov
leave
adc
mov
xor
xor
and
mov
out
outsl
push
xchg
stos
in
jne
dec
jp
push
ror
xchg
idivl
mov
mov
inc
pop
jae
xchg
add
push
std
scas
and
cmp
aam
jbe
pop
add
aam
dec
addr16
push
inc
mov
cld
frstor
int3
push
adc
mov
cltd
push
push
jae
xchg
test
subb
ret
mov
or
xor
push
or
pop
inc
stc
mov
outsl
loop
ljmp
dec
movzwl
pop
mov
push
mov
mov
and
or
ds
hlt
jns
and
shrl
lods
in
mov
pushf
jmp
mov
mov
fcomi
xchg
mov
gs
pop
jle
sbb
add
imul
and
cmpl
rol
pushf
loopne
lods
xorb
pop
sub
pusha
pop
gs
mov
int3
lcall
aaa
in
lods
lea
bound
das
aad
out
dec
lret
jb
ret
push
in
pop
lret
pop
test
mov
in
jge
sub
sub
adc
pop
ret
insl
out
sarb
sbbb
dec
sbb
sub
mov
fucomip
sub
or
mov
es
xor
mull
lods
jg
dec
sub
lea
test
data16
pop
dec
mov
cmpsb
sub
add
xchg
mov
icebp
mov
adc
cmp
pushf
test
das
iret
cmp
mov
mov
lds
test
and
clc
sbb
test
scas
push
dec
add
fstps
jbe
lret
movsl
inc
insb
inc
push
cmp
adc
adc
mov
mov
fnclex
mov
out
icebp
xchg
adcb
xor
ficompl
jecxz
ljmp
jl
scas
in
out
xchg
ds
lcall
cmp
push
mov
push
or
inc
mov
sub
outsb
inc
xchg
sti
sarb
stos
scas
sub
rcll
xchg
fcoms
mov
repz
daa
adc
loopne
sbbl
inc
add
int
out
cmp
jecxz
sbb
push
xor
lods
mov
jnp
addr16
mov
icebp
mov
in
cmp
inc
push
xor
es
scas
decl
js
mov
add
cmp
shll
jb
roll
iret
icebp
cs
shr
dec
adc
or
sti
or
imul
lret
insb
dec
ret
ljmp
mov
pop
cs
xor
popf
or
mov
dec
cwtl
xor
lahf
and
fistps
test
pop
imul
int
dec
jb
jp
rorl
fs
pop
in
jnp
push
out
or
mov
outsb
push
pop
out
lods
or
sub
adc
rcl
decl
pop
ret
add
bound
outsl
aam
stos
xchg
pop
cld
inc
xchg
js
sub
jle
inc
loope
aam
xor
pushf
mov
fsub
pushf
lea
imul
add
pop
xchg
sub
push
jo
pusha
stc
or
dec
sub
pop
je
xchg
cmp
dec
adc
mov
cltd
mov
daa
js
or
push
mov
sahf
scas
pop
jle
rcrb
int
sub
in
mov
test
outsl
jbe
mov
and
insl
xor
stos
fcmovb
stos
call
pop
pop
jge
or
inc
cmp
shll
hlt
add
add
mov
mov
cmp
test
dec
repnz
jb,pt
addr16
mov
dec
stc
and
sbb
inc
lods
adc
rorb
jb
jbe
push
add
clc
sbb
imul
movsl
lock
pop
iret
xchg
es
test
pop
cmp
xchg
roll
addl
and
add
xchg
and
shrl
lds
repnz
sub
insl
leave
aam
je
jnp
cmc
xor
lahf
mov
pusha
aad
js
lds
mov
insl
daa
mov
mov
out
mov
mov
adc
lcall
icebp
pop
xchg
out
push
mov
int3
rcl
push
or
loopne
push
insl
stos
adc
es
test
adc
scas
sbb
out
lcall
push
sbb
xchg
bnd
jo
cs
enter
xchg
jbe
adc
int
pop
pop
sbb
es
and
fldl2t
int3
clc
add
loope
xchg
hlt
ss
fildl
retw
sbb
test
cmp
rolb
popf
push
call
push
or
fidivrl
mov
xlat
xor
sub
pop
ljmp
repz
andl
jge
mov
mov
jno
outsb
mov
jbe
adc
repnz
sbb
mov
mov
add
mov
xchg
mov
shl
es
mov
cmp
or
mov
lret
lock
pop
sbb
mov
imul
xlat
mov
pop
fmuls
mov
cli
inc
test
push
cltd
push
imul
in
out
inc
mov
mov
sub
xor
jns
jge
push
cltd
stos
mov
push
je
leave
int
jg
aaa
adc
js
inc
sub
mov
fnstcw
lea
xchg
cli
dec
pop
add
lcall
xchg
mov
lods
adc
lahf
xchg
mov
insl
out
inc
jb
scas
inc
sub
jb
imul
loope
mov
fildl
dec
and
lods
inc
xlat
push
sub
and
or
shlb
enter
add
mov
push
dec
push
ret
mov
pop
adc
push
xor
iret
pop
cmpsb
hlt
das
movsl
pop
ret
js
pop
xor
adc
icebp
clc
imul
int3
mov
or
daa
sahf
sub
jle
cmp
push
fdivrp
dec
sbb
adc
xor
xchg
es
sub
push
int
jmp
push
mov
ds
add
lea
jl
xlat
cmp
outsl
inc
lods
push
mov
ss
sti
jns,pt
xchg
call
pop
mov
icebp
call
clc
lods
pop
lods
cmp
and
iret
pop
in
pop
push
xchg
into
ret
sbb
xchg
clc
lods
and
sbb
mov
dec
push
pop
xor
pop
movsl
jno
sbb
pop
push
add
out
fbstp
sub
mov
dec
xchg
popa
out
sti
push
popf
jae
pop
inc
in
daa
jae
mov
scas
xchg
and
push
xlat
fistpll
loop
inc
xor
xor
jne
test
bound
arpl
add
ficompl
dec
push
mov
scas
in
sbb
pop
jmp
xchg
sbb
dec
iret
lahf
mov
mov
leave
mov
arpl
dec
push
push
mov
movb
jae
loopne
repnz
dec
hlt
xchg
test
repnz
mov
mov
push
cli
incb
lods
mul
jp
add
add
xchg
xchg
lret
push
bound
inc
cmp
rcrb
cs
sbb
into
jmp
add
and
push
mov
dec
jp
fdivrp
insb
xchg
cmp
cwtl
cmc
mov
stos
or
adc
adc
jg
mov
mov
xchg
mov
push
popa
loopne
in
popa
mov
aam
sbb
adc
sub
fiadds
lahf
dec
ficoml
in
aad
rorb
adc
dec
in
push
dec
icebp
in
sbb
fistps
inc
mov
add
jp
mov
jl
xorb
je
push
sti
leave
sub
or
enter
add
sbb
pop
xor
jne
push
inc
mov
loopne
fdivrl
push
out
adc
test
call
mov
into
gs
dec
mov
lcall
jo
sti
test
fisubs
ret
xor
and
aad
inc
pop
hlt
inc
push
cld
fldt
fwait
jle
aad
xchg
jmp
xor
sarb
test
out
lods
push
data16
sub
ret
jnp
insl
add
xchg
into
cltd
sub
in
jg
in
push
cs
push
gs
pop
jg
roll
mov
pop
sbb
test
mov
bound
mov
rcl
insb
cmp
or
mov
jb
pusha
inc
pop
nop
mov
adc
repz
push
les
and
sub
cmpsl
into
mov
jge
pusha
jb
leave
xorl
mov
cli
imul
inc
adc
inc
iret
jp
hlt
loopne
ror
sbb
adc
jns
xchg
insl
sahf
jb
ror
lahf
mov
cmp
outsl
push
jg
lds
push
mov
jmp
or
gs
sbb
mov
and
and
fs
hlt
push
ljmp
out
pop
jecxz
insb
dec
pop
mov
add
cmp
cwtl
dec
popa
in
xor
arpl
xor
stc
scas
lcall
lods
in
xor
les
mov
in
jge
adc
add
push
mov
and
lock
repz
mov
stos
push
dec
popa
jp
jbe
and
sbb
call
ret
adc
jge
xchg
pop
pop
out
inc
mov
imul
mov
adc
mov
mov
mov
mov
imul
lods
lods
cmp
cmp
ret
stc
stos
or
mov
fisttps
pop
mov
sbb
push
push
sbb
insb
lods
clc
pop
xchg
xor
lret
dec
repnz
insb
push
add
test
mov
ret
sub
xor
arpl
aam
gs
inc
mov
sbb
mov
fbld
add
daa
fimull
and
and
in
add
sub
xchg
ljmp
ljmp
xlat
test
dec
clc
jo
mov
fdivr
push
cmpsb
imul
roll
sub
sub
sahf
and
jge
dec
aam
mov
push
jg
ret
mov
and
sub
xchg
mov
movsl
xchg
pop
sub
mov
and
add
dec
shlb
repnz
push
sub
js
rorb
pop
imul
or
cld
push
sbbl
pusha
adc
pop
lcall
addb
jno
lahf
dec
shl
int3
fisttpll
insl
xor
repnz
iret
nop
ss
pop
call
ret
hlt
and
mov
mov
fnstsw
push
fsubs
adc
pop
cmpsb
sub
adc
and
jle
xor
inc
mov
xchg
adc
add
jmp
sbb
adc
je
rcr
ror
pop
test
mov
jp
pop
fistps
push
iret
ds
rcl
stos
pop
or
jmp
dec
ds
faddl
es
mov
jb
dec
enter
ret
xchg
lret
sub
iret
cli
leave
sub
stos
inc
insl
mov
jne
xor
lock
jnp
lods
pushf
push
flds
mov
xor
mov
movsl
int
push
xchg
xor
sub
pop
sub
cld
in
and
jae
lsl
popa
pop
inc
icebp
sbb
fadds
sbb
fisttpl
out
jge
call
fisttps
mov
cli
pop
iret
and
enter
in
stos
shll
add
inc
dec
adc
pusha
xor
andl
sbb
iret
pop
cmc
jnp
rcrb
mov
dec
stos
and
push
loop
add
add
jl
xchg
inc
test
test
scas
scas
push
and
movsl
cmpsb
xor
fldt
and
das
and
or
loop
iret
dec
mov
test
jl
sbb
add
lea
adc
aam
divb
dec
in
imul
and
mov
icebp
mov
test
dec
fwait
aas
mov
dec
std
mov
push
xlat
icebp
inc
or
mov
fwait
jle
lds
mov
jne
int3
jmp
repnz
je
inc
loope
jp
test
je
and
aam
lods
pop
lahf
adc
mov
mov
mov
dec
dec
add
pop
push
cmp
push
mov
popa
movsb
pop
mov
lods
sbb
pop
in
mov
jo
dec
outsl
inc
jmp
mov
mov
adc
lods
dec
add
inc
mov
lret
dec
clc
sahf
and
imul
iret
sbb
mov
xor
rclb
push
mov
fimuls
mov
xchg
lods
adc
bswap
push
xchg
mov
into
std
fadds
outsl
andl
or
jno
sub
mov
push
push
ljmp
push
push
scas
mov
jbe
adc
inc
mov
addl
cwtl
cwtl
sahf
aam
and
ror
imull
mov
dec
popa
inc
jo,pn
jmp
iret
push
je
popa
push
mov
xor
xor
ljmp
popf
cmp
jge
pusha
stos
fucomip
adc
shlb
mov
mov
push
sub
adcl
pop
inc
fs
ret
mov
mov
insl
je
mov
rorb
xchg
sub
daa
sbb
rcr
aas
pop
int
cmp
push
pop
or
jle
iret
out
lahf
sti
dec
pop
mov
adc
pop
xchg
cmp
push
scas
cwtl
imul
sbb
fwait
movsl
mov
jle
dec
outsb
lock
pop
mov
push
adc
fcmovnbe
push
push
sbb
xor
push
lds
fwait
mov
out
call
dec
shlb
cmp
mov
insb
dec
xchg
cmp
mov
andl
aaa
mov
jnp
sub
test
aad
popl
jge
jge
xchg
ljmp
pop
jecxz
and
cltd
push
pop
test
ret
shlb
xchg
mov
and
cmp
cmp
mov
sbb
lock
loope
push
sub
lea
loop
pop
mov
mov
mov
ds
or
xchg
mov
arpl
dec
jmp
je
pop
in
std
lock
and
xor
mov
or
testl
lret
test
pop
push
sahf
pop
add
in
das
mov
sub
mov
ds
xchg
mov
movsl
addr16
icebp
pop
xlat
jbe
pop
xchg
xor
mov
add
add
das
adc
inc
aaa
jb
out
dec
test
mov
xlat
mov
push
scas
sbb
in
mov
test
pop
mov
xchg
lret
xor
out
sahf
stos
mov
adc
fwait
lods
lods
mov
lods
cmc
aaa
jmp
jo
stos
jb
mov
dec
pushf
inc
movsb
xchg
in
int
shr
fidivrl
mov
xchg
movsl
shrb
mov
sub
into
aas
ljmp
and
nop
sub
in
jmp
sub
gs
fisubrl
stos
cld
imul
out
inc
mov
push
int
test
ds
sahf
mov
push
jmp
fidivrs
inc
repnz
mov
cs
rorl
mov
mov
and
mov
push
nop
mov
or
lret
loopne
addl
divb
jno
or
push
and
pop
mov
pushf
and
jmp
inc
push
push
bound
xchg
fdiv
and
xchg
fistpll
enter
push
xor
clc
mov
mov
lock
add
dec
jnp
cmp
adc
mov
sbb
xchg
jo
mov
fists
mov
xor
lods
fwait
cltd
lds
out
pop
lcall
inc
rcl
fstl
andb
scas
xor
insl
cmp
mulb
hlt
xchg
out
jl
push
xor
sub
mov
sbb
xchg
inc
lds
nop
repz
std
adc
inc
fwait
and
sbb
jg
cmp
mov
cmp
cmp
push
out
mov
repz
pop
add
jbe
loop
popf
into
daa
aaa
dec
sbb
cmp
dec
jne
sbb
out
push
xor
mov
sbb
cmp
subb
pushf
and
dec
nop
mov
dec
pop
lahf
adc
jns
sbb
js
sbb
xchg
pop
xor
xchg
inc
aad
mov
lock
adc
ljmp
cmp
loope
push
pop
dec
in
inc
rol
xchg
pop
mov
das
cmp
jne
in
inc
in
ss
ret
repz
aas
pop
inc
rolb
push
pop
lret
cmpsl
sbb
mov
or
xor
mov
and
in
add
clc
and
pop
aaa
leave
fidivrl
test
ja
xor
push
pop
and
std
sbb
xchg
pop
inc
ret
push
mov
and
test
mov
in
fldt
or
or
mov
lahf
je
lock
in
test
fcomip
and
mov
out
js
xchg
mov
xchg
cmc
dec
jnp
jmp
and
repnz
cmp
mov
data16
push
fsubp
testl
stc
std
cmp
in
mov
lcall
push
aaa
cmpsl
pop
movsl
test
jns
add
push
test
mov
mov
js
testb
je
or
xor
push
mov
xchg
add
lods
xchg
mov
pmaxub
add
fistpl
js
icebp
daa
pop
add
jne
iret
pop
cwtl
fildll
loope
out
mov
dec
jbe
or
in
or
adc
or
cmp
pop
mov
out
loop
pop
out
or
add
sbb
add
or
cs
ljmp
shrl
mov
stc
test
loope
sub
aas
aad
into
add
lret
adc
or
lea
sbb
mov
inc
xor
outsb
imul
sbb
jg
push
dec
mov
in
mov
push
loop
das
hlt
adc
sbb
pop
lahf
testl
mov
mov
in
aad
das
lcall
or
xchg
fbld
lahf
js
rcl
xchg
pop
aam
movsl
mov
sub
ja
scas
fwait
out
pop
mov
ficompl
ret
je
ds
sbbl
jb
xchg
mov
and
push
cwtl
rolb
jge
mov
cmp
cmpsl
fcomps
push
stos
mov
sbb
mov
or
mov
xor
cli
shll
xor
pop
xor
popa
loope
cmp
push
mov
sbb
jp
mov
ja
insl
call
push
mov
cmpsl
idivl
jnp
pop
addr16
pop
cmpsl
xor
pop
mov
dec
add
movsb
jbe
jge
outsl
sbb
jmp
xor
push
hlt
cli
lods
fcmovnb
sbb
ror
mov
add
jp
dec
fnstcw
arpl
fnstcw
sbb
and
out
mov
inc
ficomps
mov
mov
jge
in
cmp
push
jne
mov
xor
inc
sub
dec
test
rcrb
scas
push
dec
sbb
push
sub
xchg
pushf
addl
jne
jbe
out
test
lds
jp
mov
mov
mov
cmp
rorb
mov
cbtw
es
cmpsb
sbb
lahf
cld
and
adc
test
sbb
mov
xchg
jne
mov
cmc
clc
lock
gs
push
int
cmp
cmp
fcompl
jns
movsb
sub
fiaddl
lahf
xor
lods
pushf
mov
cld
inc
sbb
repz
cmpsl
sbb
aaa
inc
stc
pop
stc
loope
in
popf
add
imul
fwait
lret
movsb
stc
add
push
pop
loope
sub
lods
or
stos
xor
shll
inc
sti
test
sub
xchg
cmc
je
out
sbbb
jnp
aam
pusha
ret
push
xor
adcb
loop
pushf
pop
add
push
and
or
cs
push
jns
push
bsr
pusha
adc
push
aad
xchg
or
mulb
mov
xchg
hlt
stc
push
cmc
inc
lcall
outsl
sbb
jge
lods
push
sub
mov
add
xor
bound
jle
add
pop
mov
mov
xor
outsl
nop
pop
out
pop
xor
pop
mov
test
xchg
pop
jns
adc
movsb
sarl
push
out
js
and
addl
pop
pop
xchg
push
pop
add
inc
jg
sbb
push
pusha
sub
out
cmp
xchg
int3
cmp
lcall
mov
pop
jp
int3
mov
cmp
cmp
sbb
and
jnp
jae
xor
cmp
nop
sti
popf
cmp
sub
sub
sbb
arpl
cmp
push
push
jecxz
or
and
dec
adc
sahf
mov
mov
rcl
inc
mov
lahf
pop
hlt
dec
xor
inc
lcall
jae
pop
or
fwait
js
imul
cld
stc
pop
mov
add
and
sub
int
orb
sbb
cltd
mov
lcall
rcll
lds
js
cmpl
jnp
lods
xor
add
mov
inc
sub
push
dec
push
repnz
cmpsb
dec
mov
jns
insb
xchg
xor
mov
cmp
xchg
and
dec
adcl
popf
int
aaa
jo
and
fildll
mov
xor
lods
adc
push
cmp
outsl
sti
add
push
fbstp
dec
sbb
and
fisttpl
cmp
loope
fidivrs
les
xchg
jno
push
lcall
jo
jle
pop
lret
pop
jno
jle
mov
and
mov
daa
loop
outsl
sbb
fisttpl
lock
in
test
movsb
pop
pushf
cmpsl
and
add
and
jnp
cmp
cli
mov
push
jne
sub
mov
mov
xchg
shll
sti
push
pop
bswap
int3
test
std
mov
dec
popf
pop
arpl
sbb
jge
jge
rcrb
repz
stc
and
add
xlat
jno
pop
sub
jmp
jb
outsl
fcomip
mov
adc
ds
stos
enter
jbe
or
dec
pop
sbb
cld
jb
cwtl
pop
sbb
add
out
or
lods
lock
fs
mov
int
aam
or
sbb
call
push
dec
adc
adc
push
sbb
push
in
sub
enter
push
lea
push
push
insl
inc
cltd
sbb
sub
call
or
repnz
adc
mov
imul
push
jne
xor
adc
out
pop
jp
movsl
popf
jle
out
sub
xor
ja
iret
fwait
xchg
push
mov
xchg
xchg
xchg
insb
ffree
out
xor
pop
sub
or
movsb
xor
add
lret
pop
shrb
push
cmp
stc
mov
push
pop
mov
mov
jo
adc
mul
push
shrl
fdivs
bound
jge
sbb
testl
stos
out
out
inc
xchg
lods
xlat
add
pop
mov
add
sub
jno
xchg
ljmp
lods
stos
loop
push
ja
icebp
mov
inc
in
mov
push
popf
xor
inc
out
sub
js
push
jmp
cld
cli
negb
cld
scas
dec
std
movsl
mov
dec
test
push
outsb
pop
mov
pop
fildll
stos
pop
test
push
imul
add
push
stc
jmp
pop
ds
clc
pop
mov
das
nop
cli
and
xor
inc
and
mov
cli
jbe
dec
mov
mov
push
jne
out
jl
add
dec
shll
test
inc
rcll
mov
xchg
push
ss
cmp
push
mov
and
ret
jo
and
sbb
pushf
mov
imul
testl
adcl
jbe
addb
and
dec
pop
pop
and
jecxz
cmp
jecxz
hlt
stos
sbb
addr16
add
hlt
stos
jno
movsb
mov
pop
or
dec
mov
hlt
test
dec
sub
inc
out
push
rcrb
dec
fdivrs
lcall
mov
gs
xor
es
out
sahf
inc
xor
adc
jno
out
jmp
hlt
cs
hlt
sub
cld
jae
cmc
dec
dec
and
and
mov
aaa
rorb
loop
enter
push
push
and
stc
fwait
rclb
repnz
cmp
xchg
lods
loop
push
ja
shl
xlat
and
gs
test
aam
xchg
lret
adc
pop
loope
or
orl
and
sbb
aam
insb
call
xchg
adc
xchg
jl
imul
idivl
inc
std
mov
aaa
mov
and
lret
dec
push
test
inc
xchg
jecxz
out
outsb
rol
xchg
pop
jnp
in
push
push
xor
add
and
mov
ret
imul
mov
dec
and
inc
adc
push
dec
and
jmp
fsubrs
mull
int3
inc
or
pushf
ljmpw
daa
rcr
push
xor
jbe
pop
data16
repz
jbe
adc
scas
cmp
imul
aam
incb
adc
push
scas
mov
inc
mov
pusha
mov
jno
jns
pop
add
jg
test
ja
xchg
cltd
push
or
ret
ljmp
mov
adc
xchg
out
xchg
ret
mov
mov
cmpsl
cmp
lea
cmp
stos
cld
in
repnz
mov
hlt
mov
xor
xor
ss
mov
jae
mov
repz
mov
jle
dec
mov
mov
repnz
push
adc
int3
jl
mov
mulb
ret
fbstp
adc
push
cmpsb
push
adc
mov
xor
sbb
inc
lods
adc
xchg
or
cmp
sub
jle
add
les
mov
je
dec
mov
pop
cmp
pusha
test
pop
push
xor
popl
and
xchg
fnstsw
jno,pn
mov
dec
lock
pcmpgtb
jg
xrelease
cld
xor
loopne
imul
pop
mov
scas
idiv
lods
add
dec
xchg
sbbl
inc
adc
mov
mov
xchg
sbb
divl
inc
les
int
jb
xchg
inc
std
jge
mov
xchg
pop
loope
cmp
insb
jne
mov
pop
jp
cmp
push
cmpsl
lods
add
arpl
cmp
mov
aam
dec
scas
test
int3
ds
jo
ja
mov
cmpsl
add
add
jecxz
sarb
dec
faddl
inc
adc
scas
out
or
mov
test
stos
rcrl
repnz
cmp
xor
test
aas
outsl
addr16
pusha
imul
jo
movsb
scas
jecxz
xchg
add
mov
lock
ja
test
lods
div
and
andl
fucomp
push
xchg
mov
addb
leave
fistpl
lcall
ret
out
push
and
mov
movsb
or
xor
sbb
mov
add
cmp
pop
lahf
ds
bnd
cwtl
dec
push
inc
aad
mov
aas
int
pop
aad
insb
fsubl
pop
mov
mov
xor
clc
cmp
inc
sahf
push
pop
mov
add
and
jnp
inc
hlt
mov
mov
movsb
stos
xchg
adc
cld
sti
lea
dec
and
fcmovnbe
dec
jecxz
cwtl
cmp
sti
jp
xchg
mov
push
push
fimuls
pop
pushl
lea
roll
cs
push
pop
xchg
cmp
xchg
pop
mov
add
sbb
sub
mov
fistpl
in
pop
pop
mov
mov
jnp
jg
outsb
and
mov
xor
push
sahf
xor
mov
rcrl
aas
inc
xchg
adc
lcall
pop
xchg
fwait
lods
and
pop
in
insl
cmp
mov
jne
push
out
rclb
rclb
sbb
cmp
mov
jbe
rcr
mov
xchg
and
or
or
out
xchg
jbe
inc
pop
in
mov
hlt
cmp
pop
fldl
into
test
sbb
lea
xchg
loopne
sub
jno
int
stos
into
jnp
and
push
loop
mov
movsl
mov
xlat
push
jmp
sub
mov
mov
movsl
repnz
mov
push
mov
fsubrp
push
pop
call
mov
movsl
lods
sbb
negb
or
scas
outsb
add
pop
pop
fiadds
rcrl
or
inc
sbb
and
add
in
call
xor
cs
adc
xchg
push
cmp
inc
jnp
dec
cld
rorl
subl
push
aas
or
jge
sbb
dec
lea
lds
fnstsw
jmp
loope
xorb
add
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
sub
lcall
ret
pop
movsl
or
add
jmp
sub
icebp
inc
xchg
into
movsb
stos
clc
lcall
xchg
xor
fsubl
jb
push
jle
or
adc
sub
loop
xor
mov
xor
ja
sbb
loope
cld
inc
loop
adc
jecxz
xor
shll
and
sbb
repz
push
std
incl
shl
pop
sbb
sub
fdivs
sub
jno
xor
pop
outsl
dec
stos
or
loopne
out
pop
push
or
cmp
js
in
add
xchg
cmp
test
add
cmp
test
dec
into
xchg
dec
loopne
mov
loope
sbb
mov
loopne
shr
cmp
stc
jno
push
mov
aam
sbb
insb
and
aad
mov
cmpsl
loop
mov
loopne
push
idivl
mov
or
dec
inc
sub
jnp
iret
into
jl
push
mov
mov
fsubrl
mov
sarb
fld
push
cmpsl
test
dec
or
movsb
in
mov
daa
insl
jo
ja
sub
ficoms
xor
or
fcmovbe
out
out
cmp
fiaddl
movsb
push
adc
xchg
test
scas
out
mov
jl
push
cli
test
sahf
fldcw
dec
out
pop
mov
aam
fldln2
jp
inc
jno
adc
ljmp
js
mov
dec
adcb
push
loopne
sahf
add
outsl
cmp
mov
fdivrs
push
mov
mov
add
faddp
jmp
and
xorl
mov
test
fcoms
push
mov
pop
in
xchg
sti
je
xorl
in
loopne
pop
mov
in
cmp
clc
jle
mov
cmp
sbb
sub
push
adc
outsl
jmp
testb
imul
dec
cmp
inc
jae
sub
ret
sub
pusha
cld
pop
ljmp
call
outsl
push
test
repz
mov
adc
mov
inc
mov
add
test
jns
xchg
mov
rdmsr
adc
fbstp
mov
cltd
add
fbld
cmp
push
push
icebp
jb
dec
jp
adc
aad
xchg
sti
pop
enter
jp
enter
in
and
jbe
rorb
je
and
add
lds
imul
push
sbb
fwait
lds
test
jmp
mov
daa
push
jle
jb
push
jb
lods
int3
rcll
dec
fwait
call
and
push
sbb
pusha
jle
shll
and
mov
pop
or
js
xchg
xchg
push
shlb
sbbb
out
cli
dec
inc
xor
xchg
jecxz
xchg
mov
sub
stos
mov
leave
mull
push
add
cmpsb
and
xor
inc
pop
pop
push
sahf
push
daa
push
in
addr16
or
test
lock
fimull
test
enter
mov
jle
iret
cmp
icebp
sub
arpl
pop
cld
sbb
mov
orl
mov
xchg
mov
sub
ds
jns
scas
dec
sub
adc
pop
cmp
aam
mov
insb
dec
data16
enter
bnd
adc
in
or
lret
mov
or
adc
adc
mov
push
std
dec
loop
out
pop
popf
fsubl
jns
jmp
and
dec
bound
mov
add
pop
aaa
fmuls
dec
adc
je
sbb
out
test
or
jb
xlat
scas
pop
outsb
inc
aas
aad
mov
cld
nop
sub
ficoml
or
testl
gs
add
fs
call
dec
cmp
mov
mov
add
add
add
xchg
add
inc
xchg
jl
add
jmp
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
sub
mov
