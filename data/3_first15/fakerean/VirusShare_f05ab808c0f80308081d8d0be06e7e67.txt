push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
ss
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
jns
inc
add
push
lea
sub
mov
xor
mov
pusha
sbb
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
sub
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
testb
xor
testb
sbb
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
testl
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
adc
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
or
push
lea
mov
test
je
cmp
lock
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
cli
stc
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
mov
push
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
sahf
testb
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
in
add
add
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
push
or
call
mov
shl
ljmp
mov
add
fwait
aam
call
add
add
xchg
stos
fstps
mov
sti
sarl
add
push
push
mov
add
push
push
lea
push
push
call
rcrb
add
out
out
add
cmc
mov
push
cltd
and
add
fldcw
mov
add
fldl
jo
add
fucomip
aad
add
repnz
pop
add
push
add
add
pop
addl
add
into
jns
loope
add
gs
int3
movsl
shl
add
movb
les
inc
in
push
push
push
push
lea
push
push
push
call
push
test
add
shrl
cmpsl
int3
add
add
call
mov
add
aad
mov
add
out
popf
add
add
add
test
fbld
add
add
mov
add
add
add
add
add
lods
mov
std
rolb
pop
push
push
push
lea
push
call
jo
add
rolb
pop
lock
add
stos
add
in
pop
mov
add
ljmp
add
add
addb
add
imul
mov
fistpl
jno
stos
add
rorb
mov
lea
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
addr16
faddl
pop
out
std
js
add
ja
test
mov
add
aad
push
add
fdivs
add
add
pop
scas
add
add
mov
nop
mov
mov
add
add
mov
icebp
add
add
xchg
fwait
mov
add
hlt
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
mov
clc
shlb
lods
add
mov
pop
pop
pop
lahf
add
lock
jmp
add
add
push
into
mov
jo
mov
add
pop
jge
add
rolb
add
add
add
fisubrs
pusha
les
fildl
push
call
add
add
pop
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
call
sarb
leave
mov
add
add
add
add
popa
in
out
add
cli
add
mov
loop
addr16
add
mov
arpl
flds
xchg
add
add
push
pop
jne
add
out
test
add
lea
pop
call
push
push
push
push
lea
push
push
push
call
stos
add
jle
add
mov
fcoms
in
add
cli
push
leave
add
add
push
add
mov
xchg
add
push
bound
push
mov
int3
lret
lea
pop
call
push
push
lea
push
lea
push
push
push
lea
push
call
shl
add
mov
push
in
add
add
lock
imul
mov
stc
imul
jb
mov
into
add
mov
rolb
add
mov
lock
cli
jae
add
imul
clc
add
sbb
push
push
push
push
call
lods
add
shr
fadds
xchg
add
add
mov
subl
call
jecxz
add
jl
mov
add
test
add
cmpsb
add
jno
add
mov
test
pop
call
push
push
push
call
add
ljmp
add
insb
mov
add
add
rol
jge
clc
scas
add
add
jno
out
xorl
fdivrs
movsl
add
add
jo
add
lea
pop
jmp
ret
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
cmc
jnp
jns
add
addw
xchg
pushf
fs
imulb
fs
xchg
add
mov
loopne
cwtl
add
addr16
mov
add
aad
sahf
popa
add
lahf
xchg
add
loopne
add
push
add
pop
pop
add
push
add
in
fisubs
jno
pop
movsl
loop
movl
add
add
pop
loope
lds
pop
mov
mov
push
push
call
movb
add
jno
pushf
loope
add
addb
add
test
add
add
add
aad
add
insb
cmc
lcall
add
rol
add
movb
add
fldenv
add
add
lods
jecxz
add
xchg
add
cmpsl
mov
fs
push
mov
lea
pop
add
add
push
lea
push
push
lea
push
push
call
fbld
cwtl
int
jb
add
call
add
movsb
ret
add
out
popa
les
push
add
mov
add
in
jge
add
add
jns
lods
insb
leave
jecxz
fs
push
out
jno
add
mov
jo
xchg
add
add
jle
cwtl
ja
fs
mov
add
jmp
fistl
cld
lea
pop
add
mov
xor
push
push
shr
dec
lea
push
or
inc
add
rol
xor
xor
rol
sub
lea
add
sub
pop
inc
pop
push
push
push
lea
push
push
push
call
int3
add
add
addl
frstor
sti
imul
cmp
loope
in
pop
add
jne
xlat
fidivs
add
mov
add
add
add
cld
lds
add
cmpsl
add
mov
test
add
mov
in
jae
in
push
add
pop
pushl
push
push
push
push
call
test
push
icebp
add
jnp
addl
test
add
mov
sti
push
lock
scas
add
stc
push
fwait
add
mov
add
add
add
call
pusha
aad
add
ja
mov
mul
hlt
add
out
mov
xchg
add
cmpsb
in
mov
lea
pop
call
push
lea
push
push
push
call
xchg
lret
jle
xchg
movsl
add
hlt
out
ja
mov
test
jmp
sti
addr16
add
add
add
add
pop
and
test
nop
clc
add
add
jbe
add
add
rolb
add
scas
add
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
lds
push
xchg
roll
mov
push
jb
hlt
ret
add
add
stc
aam
add
and
pusha
cwtl
add
add
jne
add
add
cmpsl
add
test
icebp
xchg
add
lret
mov
lea
pop
movl
lea
push
push
lea
push
push
push
lea
push
lea
push
call
iret
cwtl
xchg
mov
mov
add
mov
jbe
jno
movsl
les
stos
add
mov
add
add
rolb
add
lds
mov
outsl
test
scas
mul
mov
lea
pop
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
out
mov
fcoms
andb
test
mov
add
jne
fcomps
add
fldenv
add
incb
jle
add
add
leave
gs
add
fbld
cld
mov
jmp
mov
outsl
add
xchg
lret
ljmp
pop
pushl
push
push
push
lea
push
call
add
mov
shlb
sahf
loope
add
cltd
js
std
xorb
fsubp
js
add
cwtl
mov
fldl2e
stos
add
add
mov
jb
roll
fidivrl
cmc
lret
add
imul
lock
lcall
stc
lock
ljmp
pop
arpl
pop
mov
popa
adc
jne
push
lea
push
push
call
nop
roll
pusha
push
pop
add
add
rolb
add
add
mov
add
mov
popf
clc
add
fildl
hlt
add
push
cwtl
jp
add
push
nop
pop
std
add
je
mov
addr16
call
pushl
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
xchg
add
lahf
add
add
adcl
add
xchg
ljmp
fwait
add
add
shl
add
jge
mov
add
add
test
add
nop
add
std
add
jbe
mov
pusha
add
lea
pop
pushl
push
push
push
push
push
call
add
cwtl
test
xchg
xchg
lock
mov
insb
int
add
mov
test
add
pop
add
mov
mov
xchg
add
add
pop
call
push
push
xor
ror
push
or
not
add
sub
shl
ror
sub
xor
pop
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
pop
jae
ja
add
sti
xchg
pop
add
lods
insb
scas
xchg
int3
add
add
mov
arpl
gs
roll
add
stos
in
add
arpl
add
add
add
mov
data16
lret
add
je
add
jae
add
loopne
add
mov
in
in
fisttpl
pop
pushl
push
lea
push
push
push
push
lea
push
call
xchg
mov
add
pop
add
add
lods
mov
icebp
mov
jno
mov
jns
bound
add
add
mov
jmp
cld
add
push
out
push
xorl
sbb
shlb
push
push
push
call
add
out
add
jne
cmc
add
add
add
add
xorl
add
push
fcomps
lds
mov
jo
jp
aam
bound
push
push
push
sub
xor
xor
push
or
inc
add
shl
dec
lea
sub
ror
pop
shl
rol
pop
push
push
push
push
push
push
lea
push
push
push
call
aam
add
cmpsl
jbe
pushf
imul
lcall
xchg
add
lcall
add
add
mov
push
lahf
popf
add
stos
stos
stc
add
ret
cmc
add
test
add
mov
xchg
pusha
out
ja
add
xchg
js
push
cltd
mov
add
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
push
jb
test
add
mov
lret
add
pop
test
fs
clc
add
add
push
in
sahf
add
jbe
lods
add
mov
hlt
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
push
xchg
lds
add
mov
scas
sbbl
jne
ljmp
in
test
add
out
ret
mov
mov
scas
fisubrl
idivb
push
pop
mov
lea
pop
call
push
push
lea
push
call
stos
mov
jle
loope
roll
xlat
rcr
imul
popf
loop
add
add
add
shll
add
xchg
js
incb
pushf
test
mov
add
add
add
xchg
jbe
lods
mov
push
add
addr16
lods
pop
add
add
test
push
mov
mov
sahf
shl
push
andl
mov
lea
pop
mov
push
push
push
call
add
add
add
push
mov
add
add
lea
add
stos
add
add
test
out
add
xchg
add
icebp
xchg
add
fstl
mov
lock
push
add
xchg
testb
out
insb
add
add
add
mov
sub
hlt
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
add
mov
pop
add
add
test
nop
add
arpl
add
add
jp
lock
push
lods
add
frstor
sahf
insb
add
mov
mov
arpl
jno
add
mov
add
sub
pop
in
add
push
lea
push
push
push
push
lea
push
call
imul
push
fwait
pop
lcall
movsl
add
mov
add
add
fwait
hlt
add
cwtl
pop
rolb
mov
add
jno
gs
pop
add
aad
xchg
add
add
xchg
add
testb
add
cld
add
cmpsb
jno
cwtl
xchg
pop
add
lea
pop
add
add
push
lea
push
push
push
call
loope
add
hlt
add
out
mov
hlt
add
test
add
add
add
add
jmp
push
add
fwait
fwait
push
xchg
fucomp
mov
in
add
add
mov
sti
add
int
add
sbb
les
xor
jb
lea
push
push
lea
push
push
push
push
call
push
cli
mov
xchg
push
add
insb
insb
add
lcall
add
icebp
adcl
arpl
movb
push
add
in
add
lods
cmpsb
add
sti
add
push
add
leave
add
fistpll
add
adcb
loope
lods
xchg
pop
add
test
jne
test
push
add
cwtl
in
aam
bound
add
push
push
push
call
ficoml
add
cmpsl
add
add
sti
hlt
jnp
mov
jbe
out
xchg
mov
out
add
xchg
pop
jecxz
iret
add
add
cmpsl
add
cmc
add
push
popa
pushf
add
add
cmpsb
mov
mov
lea
pop
mov
xor
push
push
push
call
add
cli
add
imul
lods
mov
cld
add
popa
mov
add
add
cmpl
stos
xchg
add
add
push
mov
test
fsts
add
add
push
add
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
sarl
in
add
or
jne
clc
xchg
add
jnp
add
cli
mov
data16
mov
add
mov
add
add
cmpl
enter
movsl
loopne
shlb
add
cmc
mov
mov
mov
push
cld
cmpsb
mov
mov
imul
loop
add
movsb
push
xchg
in
push
fistpl
cwtl
add
lods
test
pop
add
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
stc
ljmp
add
push
stc
add
add
add
add
jle
jne
add
add
add
push
xchg
cld
outsl
jge
add
add
sahf
add
imul
xchg
scas
mov
into
pop
add
mov
in
jne
add
movsb
cmpsb
pop
pusha
addl
add
aad
addr16
mov
add
pop
mov
xor
push
push
lea
push
lea
push
push
push
call
call
pop
mov
iret
add
add
mov
jl
fsts
ja
pop
fstps
int3
jnp
mov
add
xchg
jae
add
roll
jo
add
js
rolb
add
add
into
add
add
add
cld
lea
pop
push
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
push
aam
add
jno
add
jl
jge
fadd
add
mov
add
jae
pusha
add
jno
imul
fisttpll
mov
enter
rcr
jb
add
mov
shr
add
insb
imul
std
add
mov
push
sahf
cli
pop
loope
add
mov
add
mov
fmull
add
push
push
call
add
push
pop
add
add
rorl
popa
add
add
loop
loope
push
leave
xchg
lea
testl
xchg
add
lret
mov
out
movl
add
into
add
add
mov
lea
pop
add
push
lea
push
lea
push
call
add
add
add
add
add
sbbb
add
mov
xlat
add
ja
mov
xchg
sti
add
mov
add
add
push
add
add
pop
add
jmp
lea
pop
sub
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
ja
jb
mov
push
arpl
add
repnz
add
jnp
fcmovbe
cmc
gs
push
jmp
add
add
mov
add
fmull
test
fiadds
add
mov
lea
pop
pop
push
push
call
addl
div
lods
andb
add
add
add
lahf
imul
add
push
cld
push
cli
out
add
out
scas
icebp
mov
add
rolb
pushf
mov
jns
add
add
stos
mov
xchg
mov
lea
pop
rep
push
push
push
push
push
push
push
call
add
rolb
mov
pop
jne
add
movsb
add
ljmp
mov
jno
cmpsb
add
mov
add
push
add
add
add
mov
jo
add
add
mov
xlat
add
mov
sti
cmpsl
mov
mov
push
icebp
add
pusha
mov
add
les
mov
push
push
call
add
sbb
add
add
add
popa
fwait
add
jmp
add
je
cwtl
mov
add
xchg
add
shrl
add
lock
out
xchg
popa
ja
mov
mov
mov
or
pop
in
ret
add
add
push
push
push
lea
push
push
lea
push
call
in
fwait
out
add
add
cmpsb
add
add
add
movsb
imul
pop
imul
add
push
jl
lods
add
add
fwait
loope
lret
add
cld
add
pop
add
push
sub
shl
xor
pop
mov
xor
push
ror
rol
rol
rol
pop
mov
xor
push
lea
push
push
push
call
xchg
add
add
hlt
add
add
xchg
mov
add
add
and
icebp
add
mov
mov
add
loope
lret
add
mov
loopne
aam
cmc
int
add
add
cwtl
mov
leave
add
add
fcmovnbe
add
jge
push
lock
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
call
shr
in
add
jecxz
add
add
push
push
add
add
add
pop
fnstsw
add
add
jns
add
ja
add
fdiv
pop
mov
xchg
jmp
add
add
out
ret
mov
int3
mov
pop
xor
push
lea
push
call
mov
add
fwait
add
popf
test
jmp
add
outsl
xlat
pusha
mov
add
enter
add
add
add
add
test
jbe
shlb
lock
mov
cld
add
leave
mov
add
add
add
add
les
les
push
call
test
add
jne
into
add
popa
mov
add
mov
add
enter
jno
jp
roll
in
add
sahf
mov
aam
mov
lea
mov
into
add
stos
xchg
pop
add
push
lea
push
push
push
push
push
push
push
call
lods
push
add
jp
mov
add
hlt
xchg
flds
add
pop
out
cltd
enter
add
pusha
add
mov
mov
int3
ja
mov
mov
add
push
add
pop
add
mov
push
push
lea
push
or
inc
add
lea
shl
shl
add
sub
ror
not
pop
sub
sub
pop
push
sub
pop
pushl
push
sub
add
pop
call
push
push
call
add
xchg
lcall
add
pop
xchg
mov
testl
popf
xchg
shlb
xchg
out
fwait
sti
add
pop
in
mov
add
cld
lods
nop
out
into
test
add
loope
add
int3
pop
int
add
push
mov
sarl
add
pop
addb
add
mov
lea
pop
push
push
push
sub
inc
shr
push
or
not
add
sub
sub
shr
rol
pop
rol
add
xor
sub
pop
push
rol
sub
not
pop
push
push
push
push
push
push
push
push
call
add
add
and
loop
out
loop
jno
add
add
add
add
fiadds
scas
lock
add
andl
jbe
add
jno
add
mov
cmpsb
cmpsl
aad
mov
scas
jp
rcrb
lret
ret
add
add
add
xchg
add
sbb
push
push
lea
inc
xor
pop
call
mov
push
lea
shr
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
pop
icebp
icebp
test
testb
mov
add
out
aad
xchg
jno
add
add
xchg
add
pop
add
clc
loop
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
int3
add
out
clc
mov
cmpsl
std
pop
add
mov
icebp
loop
add
xchg
mov
xchg
add
mov
mov
lock
lcall
iret
jp
pop
add
xchg
add
mov
movsb
ljmp
mov
add
stc
add
mov
and
mov
lea
pop
mov
push
add
inc
add
pop
add
push
inc
pop
add
add
push
lea
shl
not
pop
mov
xor
push
ror
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
call
add
push
nop
mov
stc
outsl
imul
add
mov
mov
mov
lcall
add
pushf
mov
jp
test
add
in
jb
add
xlat
mov
loop
jge
add
loope
test
add
add
add
add
add
add
pop
push
push
xor
add
shr
xor
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
mov
out
movsb
hlt
loopne
add
test
lret
cmpsb
add
cmpl
outsl
into
nop
add
mov
fninit
out
add
rolb
push
add
pop
xchg
int3
add
sti
add
xchg
add
add
mov
xlat
add
xchg
add
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
call
out
jge
mov
add
cli
cld
jecxz
lock
add
add
cmc
add
add
idivb
add
lahf
add
add
jecxz
fistl
add
add
hlt
lea
pop
add
push
lea
push
push
push
push
call
stos
add
mov
hlt
nop
add
pop
add
out
add
rcl
hlt
addb
add
push
push
add
add
add
lret
bound
add
add
ljmp
clc
cmc
jecxz
add
iret
rcr
add
int3
add
add
add
mov
add
pop
add
push
rol
sub
shl
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
cmpsl
test
mov
pop
mov
add
add
pop
fldl
insb
lea
xchg
lods
add
pop
jecxz
pushf
add
mov
std
mov
xchg
fiaddl
add
add
mov
and
dec
and
jb
lea
push
push
push
call
lds
push
xchg
stos
sahf
add
add
pop
add
xchg
addl
lcall
loopne
stc
add
data16
cmc
pop
test
add
repnz
add
clc
mov
mov
lret
add
ffreep
add
repnz
cmpsb
mov
lea
pop
rep
push
dec
shl
rol
ror
pop
mov
push
push
push
lea
push
push
lea
push
call
imul
pop
add
xchg
add
out
jle
add
leave
push
add
add
test
add
add
gs
out
js
mov
add
fldl
xchg
bound
add
mov
lea
pop
xor
push
push
push
push
push
call
pop
add
imul
gs
add
add
int
in
add
jmp
add
enter
test
pop
jp
add
add
add
in
lock
push
add
out
scas
add
xchg
add
add
add
add
out
mov
aad
add
add
testl
jae
mov
lea
pop
add
push
xor
sub
inc
pop
or
je
push
push
push
push
push
lea
push
push
push
push
push
call
loopne
add
mov
mul
imul
add
pop
mov
incb
imul
add
add
add
in
mov
jno
addl
test
stos
add
fiaddl
imul
add
add
mov
mov
hlt
lea
pop
mov
xor
push
push
push
call
cwtl
add
imul
imul
jb
add
add
add
lret
add
jmp
mov
jl
pushf
add
add
push
arpl
adc
add
jae
icebp
mull
add
add
add
xchg
add
add
add
fldl
pop
pop
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
add
xlat
add
cmp
jmp
pop
add
push
mov
pop
pop
add
mov
testb
sti
add
add
add
add
add
add
add
add
add
push
xchg
jo
mov
jl
xchg
cwtl
lret
add
add
out
lret
int3
fiaddl
add
fwait
add
add
std
mov
addb
rcll
add
hlt
lea
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
add
addl
add
pusha
mov
add
js
xchg
add
add
xchg
add
fcompl
stos
add
add
jbe
clc
call
add
imul
mov
popa
and
add
push
push
push
push
call
add
add
push
pop
lock
in
jbe
add
les
mov
add
add
add
mov
add
jns
leave
cmc
add
add
std
pop
iret
add
mov
lea
pop
add
add
push
shr
pop
push
push
add
inc
inc
pop
mov
xor
push
ror
lea
pop
add
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
pop
jo
nop
xchg
add
fwait
add
add
outsl
add
into
add
add
add
test
data16
cmpsl
cld
sahf
add
cmpsb
sahf
cli
mov
addl
add
cli
loop
leave
add
mov
stc
lods
jae
mov
add
mov
add
add
add
icebp
add
mov
mov
lea
pop
rep
push
rol
pop
mov
xor
push
dec
ror
shl
ror
pop
or
je
push
shr
dec
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
call
add
add
sahf
repnz
imul
ja
add
add
mov
aad
add
outsl
add
out
cmpl
add
add
add
xchg
add
add
pop
add
add
shlb
push
add
add
lock
add
jno
add
lock
mov
lea
pop
add
push
push
push
push
push
call
mov
add
pushf
fldl
outsl
mov
add
nop
jo
add
push
rcl
js
add
int
add
push
mov
mov
fnstcw
push
add
icebp
jns
leave
stos
add
mov
cmc
pop
lret
jo
movl
add
loopne
add
add
cmpsl
shll
fmull
movsb
pop
push
push
dec
push
or
not
add
sub
add
ror
dec
pop
inc
lea
rol
add
pop
push
not
sub
pop
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
call
sahf
jns
lea
add
je
ja
xchg
add
jno
stos
lock
fmul
jmp
loope
lds
scas
hlt
rol
imul
test
add
jne
add
add
loopne
jle
add
add
push
jnp
cli
mov
jae
add
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
push
call
xchg
add
add
add
clc
xchg
aam
add
mov
add
popf
add
jno
testb
fnstsw
add
sahf
fwait
xchg
push
add
sarl
fiaddl
push
add
add
add
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
out
hlt
mov
pop
add
add
jae
into
hlt
test
add
add
fs
addr16
lcall
add
xchg
add
cmpb
roll
mov
iret
add
ljmp
add
pop
pusha
add
pop
pushf
movsl
add
push
add
outsl
mov
pop
jmp
push
sub
add
xor
pop
push
push
rol
lea
pop
mov
push
shr
sub
xor
ror
pop
add
push
push
lea
push
push
push
call
addr16
add
add
add
sahf
js
add
lret
push
jecxz
push
mov
add
fiadds
add
mov
je
add
mov
mov
mov
add
int
add
mov
add
add
jns
leave
enter
push
add
add
add
push
mov
mov
addl
mov
lea
pop
push
push
lea
xor
sub
inc
pop
push
push
add
pop
push
push
push
push
push
lea
push
push
call
cmpsb
add
mov
add
mov
pop
add
mov
add
sahf
jl
add
enter
jecxz
iret
ja
mov
jns
add
add
jne
test
jnp
fs
lea
pop
mov
push
push
push
push
push
call
jbe
stc
fwait
hlt
in
mov
fwait
add
mov
mov
fldcw
add
mov
adc
in
cld
cltd
loopne
add
xchg
add
cltd
push
cmpsb
pop
mov
lea
pop
pop
push
add
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
call
insb
rolb
add
mov
add
roll
imul
add
fs
aad
jne
add
add
mov
add
add
hlt
add
mov
add
xchg
ret
sarl
fwait
loope
jo
add
add
push
clc
add
add
rol
mov
lea
pop
pop
push
not
pop
leave
push
shr
lea
lea
pop
ret
push
push
pop
mov
push
add
pop
add
push
push
push
lea
push
call
mov
jmp
push
add
add
int3
add
hlt
addb
mov
add
add
lretw
int
jno
jp
popf
lcall
add
mov
ja
loop
add
lea
pop
push
push
push
push
push
call
scas
add
add
mov
xlat
add
add
add
filds
scas
pop
stos
add
bound
add
cmpb
imul
sti
pop
push
mov
lea
pop
push
push
sub
shl
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
fdivs
add
add
add
push
movsl
add
mov
std
fidivs
lock
add
lds
gs
cwtl
ror
sbbl
mov
into
mov
add
add
mov
lret
add
add
add
add
cwtl
cwtl
add
gs
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
call
xchg
add
add
add
add
add
outsl
add
add
stc
push
fucomip
add
je
into
rorl
push
add
add
pop
add
add
ja
in
xlat
mov
add
xchg
ret
xchg
add
sub
notl
hlt
gs
mov
add
pop
movl
push
xor
dec
pop
addl
push
push
push
push
call
mov
in
ljmp
push
incb
add
lds
clc
icebp
mov
add
enter
jle
add
add
add
add
ret
addb
lock
add
ljmp
shrb
push
outsl
pop
sar
add
pop
test
je
push
rol
rol
pop
mov
push
xor
add
rol
xor
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
push
push
mov
jo
pop
into
bnd
add
in
add
mov
jle
jnp
clc
add
stc
loopne
add
stc
in
movsl
jge
cwtl
out
add
add
movl
add
add
pop
add
aam
fwait
loope
mov
lea
pop
pop
pop
push
dec
rol
pop
pop
push
push
push
push
push
push
call
jb
pusha
into
xchg
add
mov
pop
add
jge
mov
test
xchg
out
lock
add
add
mov
add
scas
add
fcmovnbe
add
lea
add
xlat
lods
lret
add
sbb
push
inc
shl
pop
ret
push
push
inc
lea
pop
mov
push
xor
sub
pop
add
push
add
not
pop
push
push
push
call
mov
mov
add
add
mov
xchg
add
add
push
roll
add
add
add
fwait
out
stc
add
add
add
scas
mov
loopne
ret
add
xchg
icebp
in
add
mov
add
push
insb
xchg
push
mov
jmp
mov
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
shll
imul
mov
nop
add
out
jmp
add
sarl
add
imul
mov
jno
mov
arpl
stos
add
push
movsl
call
test
add
add
lods
xchg
add
add
les
enter
aam
bound
pop
push
push
shl
dec
sub
pop
push
push
push
call
add
outsl
cmp
out
add
cmpsb
in
call
add
jns
call
cmc
sahf
add
loop
test
repnz
pushf
cwtl
push
xchg
add
add
push
in
lahf
add
add
add
scas
incb
xchg
add
add
add
addb
add
js
mov
lea
pop
testl
addl
push
xor
add
pop
push
push
dec
sub
not
pop
call
push
inc
inc
not
pop
mov
pushl
push
push
push
push
push
push
push
call
into
add
mov
xlat
jbe
add
add
lds
fmull
nop
call
movsl
aad
inc
mov
mov
jno
jno
push
push
pusha
add
enter
mov
add
add
add
mov
lea
pop
push
push
lea
not
add
pop
push
call
push
push
push
push
push
push
push
push
push
call
mov
insb
pop
add
or
jmp
add
mov
add
mov
imul
push
lret
jecxz
jno
popl
mov
fs
stos
fs
mov
in
push
test
add
movl
ljmp
add
fcmove
incb
scas
lcall
add
lahf
cmpsb
mov
mov
mov
lea
pop
cmpl
jne
push
xor
pop
pop
push
lea
push
lea
push
call
mov
add
add
add
add
cmpsl
shll
in
add
xchg
mov
add
mov
mov
lods
pop
mov
pop
pop
loope
add
add
stos
jns
lea
mov
fcmovbe
add
add
lock
xchg
loope
aam
stos
add
jo
mov
jb
mov
je
lds
mov
lea
pop
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
call
out
add
add
add
flds
clc
jp
mov
add
add
stc
mov
add
xchg
add
add
scas
cli
add
add
shr
mov
fadds
mov
pop
sti
add
add
mov
lea
pop
pop
push
push
call
add
xlat
add
mov
add
popf
movsl
out
push
cltd
add
rcll
push
fiaddl
lahf
add
ljmp
jae
fcomi
lods
lods
mov
ja
add
clc
pop
add
pop
mov
add
out
add
lea
pop
leave
ret
push
lea
xor
shl
shl
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
jae
jle
add
clc
mov
adc
shrb
ja
pop
add
push
rolb
js
push
xchg
add
add
out
xchg
cmc
add
add
add
pusha
rol
sti
shr
shlb
test
lcall
pop
mov
add
push
ror
shl
rol
pop
push
push
lea
push
push
push
call
mov
add
xlat
fst
add
xchg
lds
mov
jp
add
add
add
lahf
add
add
add
add
cwtl
pop
add
add
add
popa
loope
add
add
aam
add
add
popa
adc
push
lea
push
lea
push
call
mov
push
pop
add
in
pop
push
jnp
mov
add
addl
fucomi
sahf
add
lock
add
xchg
push
test
add
add
add
flds
lea
movsb
jns
add
mov
mov
add
mov
mov
pop
jmp
in
lea
add
adcl
add
add
mov
lea
pop
push
push
sub
dec
add
pop
push
movl
push
rol
dec
pop
push
push
shr
pop
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
ja
push
mov
iret
lcall
cwtl
data16
add
mov
cmc
lcall
add
push
test
add
add
add
and
push
call
push
inc
not
pop
subl
push
xor
add
pop
cmpl
jne
push
xor
pop
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
ljmp
or
mov
cltd
jns
add
add
mulb
push
push
add
add
shl
scas
mov
mov
imul
add
add
rclb
add
add
add
pop
pop
push
shr
xor
xor
pop
pop
push
inc
pop
pop
push
inc
shl
shr
pop
leave
push
lea
push
lea
push
push
push
push
push
lea
push
call
in
mov
lahf
add
add
insb
flds
add
imul
xchg
add
pop
pop
bound
mov
icebp
add
add
add
add
js
add
add
pop
ret
push
rol
add
shl
pop
push
mov
push
push
push
push
call
add
add
movl
movsb
add
out
xchg
add
add
add
mov
add
add
xchg
jge
imul
pop
mov
sahf
mov
in
add
loopne
add
add
pop
add
push
push
xor
shl
pop
push
push
sub
pop
push
push
push
push
call
add
jle
cwtl
add
cmc
add
test
out
stos
xchg
push
push
mov
fwait
mov
stos
lret
mov
pop
mov
test
jne
les
int3
mov
xchg
mov
add
add
add
ja
add
fucomip
fadd
add
fsubrs
add
add
popa
or
push
push
push
push
push
push
call
fstpt
add
call
add
add
sahf
pop
fmul
add
jo
roll
cmpsb
sar
jb
stos
movsb
je
add
testb
mov
mov
scas
add
lods
add
lds
fsts
add
push
nop
xchg
add
shrb
add
popf
add
add
mov
lea
pop
mov
push
not
inc
shr
pop
lea
push
add
pop
sub
push
rol
add
rol
sub
pop
mov
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
out
cmpsb
jle
add
add
add
push
mov
mov
loopne
lcall
incb
add
push
arpl
xchg
xchg
nop
ja
add
add
fiaddl
add
nop
add
scas
add
add
mov
xchg
mov
out
add
leave
add
pop
shr
push
lea
shr
pop
add
push
lea
pop
mov
mov
push
pop
add
push
sub
inc
pop
add
push
pop
mov
push
sub
sub
pop
mov
push
push
push
lea
push
lea
push
call
add
add
add
hlt
mov
add
mov
add
xchg
jns
add
ljmp
push
add
add
int3
add
mov
add
mov
push
loop
rcr
lret
add
add
lea
pop
cmp
jne
push
push
push
push
call
sti
popf
pop
mov
test
jns
xchg
jp
add
into
popa
add
push
push
pusha
add
add
rorl
pop
stc
std
rorb
pop
cmp
jne
mov
push
push
lea
push
push
push
push
push
push
call
pushf
pushf
lock
pop
add
clc
pop
add
loop
add
cmpsb
add
add
add
insb
popf
add
add
rorb
jb
jp
notb
add
add
add
addr16
add
mov
lea
pop
movl
jmp
push
push
push
call
fcmovnbe
sahf
add
add
jb
add
add
ljmp
notl
data16
add
add
jmp
jmp
xchg
in
lret
add
mov
lahf
push
mov
lret
push
add
xchg
add
movsb
jge
jmp
hlt
lea
pop
mov
push
push
push
push
push
call
add
push
mov
mov
add
add
jge
out
add
add
mov
add
aam
jp
jnp
add
mov
arpl
add
mov
push
add
add
cli
mov
pop
add
add
test
test
push
add
fimull
pop
mov
push
lea
pop
sub
jne
push
push
push
push
push
lea
push
push
push
push
call
xchg
mov
add
pop
pushf
fsubrs
jb
add
into
roll
pop
js
lahf
xchg
lcall
jge
add
jge
pop
add
bound
pusha
out
lahf
pop
add
les
add
js
mov
xchg
jp
sti
xchg
loope
add
mov
pop
mov
in
int
std
jne
add
ja
xchg
pop
mov
mov
lea
pop
mov
movl
push
push
push
push
push
push
push
call
add
add
fmulp
jns
add
fildl
push
mov
add
jnp
mov
add
add
mov
lahf
jge
jae
add
push
leave
xchg
js
add
add
add
lahf
mull
les
add
ret
faddl
mov
in
add
pop
jmp
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
in
mov
jbe
jmp
out
std
test
in
out
popa
mov
jmp
popf
pop
jne
int
mov
add
add
jb
add
add
add
mov
scas
add
adcl
add
add
push
test
rorl
pop
mov
mov
push
lea
push
lea
push
push
call
out
push
shlb
xchg
in
imul
mov
test
cmpsl
mov
add
add
add
jecxz
jnp
add
add
add
mov
add
sti
add
add
shll
add
in
stos
add
push
jnp
add
adc
cli
add
test
add
add
and
out
lea
pop
mov
movl
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
js
pop
add
pop
test
add
add
add
rolb
jns
add
add
imul
testb
add
jl
add
jnp
faddl
pop
add
add
and
jmp
push
push
lea
push
push
call
push
add
mov
insb
mov
push
add
jb
cmc
jmp
fcoms
jmp
add
add
imul
add
jo
lahf
add
movl
mov
xchg
test
in
insb
add
push
pop
add
clc
add
pusha
lahf
gs
lea
pop
mov
push
inc
pop
cmpw
jne
push
push
call
add
nop
icebp
add
add
jo
pop
mov
add
roll
add
add
add
push
add
rorb
shlb
arpl
pop
mov
movl
push
push
lea
push
push
call
outsl
mov
nop
fdivrl
add
test
add
xchg
jno
movl
add
test
pop
in
testb
rcrb
pop
aad
add
mov
mov
pop
xlat
rorl
pop
jmp
push
push
push
push
push
push
push
push
push
push
call
add
add
movsl
xchg
jmp
xchg
ljmp
pop
lock
jo
arpl
enter
pop
add
addb
add
add
shl
add
repnz
lea
pop
pushl
push
inc
shr
pop
pop
mov
push
shr
pop
mov
push
sub
rol
pop
mov
push
push
shr
xor
ror
dec
push
push
pop
add
rol
lea
dec
add
sub
lea
inc
pop
sub
xor
pop
push
dec
shr
pop
push
push
shr
not
sub
pop
call
push
lea
pop
cmpl
je
push
push
push
sub
add
sub
add
sub
lea
sub
not
ror
pop
inc
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
jne
mov
add
test
add
test
mov
add
mov
add
add
add
add
add
push
jle
add
pop
pop
pushf
mov
add
xchg
add
add
add
js
fldl
icebp
loopne
rolb
arpl
lret
mov
lea
pop
push
push
xor
pop
call
push
shr
add
lea
pop
cmpl
je
push
push
not
sub
dec
push
xor
add
inc
add
sub
sub
rol
ror
pop
ror
lea
rol
pop
push
rol
not
add
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
push
add
arpl
add
aad
pop
mov
mov
add
add
add
add
mov
sti
call
add
cltd
mov
jp
add
jns
outsl
push
lret
movsb
sti
arpl
out
xchg
lret
add
ftst
aad
add
add
mull
stos
mov
into
add
mov
add
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
call
lcall
in
in
add
out
stc
repnz
ja
mov
add
add
add
add
add
cwtl
pop
push
cltd
add
jge
mov
imul
mov
lea
pop
cmpl
je
push
push
shr
shl
push
push
pop
add
not
sub
add
not
lea
pop
dec
ror
xor
pop
push
xor
sub
ror
pop
push
call
push
push
push
push
push
call
add
shr
add
loop
fidivrl
push
mov
pop
in
lods
add
mov
int
add
addr16
add
cmc
stos
loop
add
add
addb
add
mov
aam
add
push
jno
je
add
imul
lea
pop
cmpl
je
push
push
shr
sub
dec
push
xor
add
rol
add
shl
sub
add
pop
xor
rol
pop
push
push
call
js
add
add
xchg
stos
lahf
nop
cld
lds
in
stos
xchg
mov
jne
pop
xchg
add
pusha
mov
add
add
mov
add
flds
add
jno
add
in
aam
fwait
lcall
add
bound
popa
ficompl
add
scas
flds
lods
jge
mov
lea
pop
push
push
sub
sub
pop
call
push
lea
push
push
call
add
ljmp
add
lret
imul
roll
add
js
xchg
shr
les
add
loopne
out
in
bound
add
scas
push
scas
bound
out
add
push
jmp
xchg
add
jnp
test
add
add
rcrb
mov
fs
add
add
add
or
cmpl
je
push
push
shl
push
push
pop
add
not
sub
shl
add
pop
add
add
pop
push
push
push
lea
push
call
loopne
add
mov
push
ja
cmpsb
add
add
rcr
jl
scas
arpl
add
add
pop
cmc
add
mov
cmpsl
push
add
jno
add
repnz
icebp
mov
mov
test
push
add
add
mov
aam
bound
pop
push
push
push
push
push
push
push
push
push
push
call
mov
add
add
add
aad
addb
sahf
add
test
add
ficompl
mov
add
fcomip
cmpsb
add
xchg
mov
icebp
out
pop
mov
xchg
and
call
push
inc
shl
sub
pop
cmpl
je
push
push
rol
dec
rol
push
or
inc
add
xor
shl
dec
shl
sub
ror
inc
pop
not
pop
push
xor
pop
push
call
push
push
push
push
lea
push
push
call
test
into
pop
mov
js
add
jbe
int
mov
push
clc
add
pusha
add
std
add
add
testb
je
jle
addb
imul
jns
add
shrb
add
cwtl
add
cld
add
mov
sti
cld
outsl
sti
pusha
aam
data16
add
int
imul
fdivrl
cmpsb
imul
sbb
cmp
or
int3
je
push
push
ror
rol
sub
shr
push
or
not
add
add
dec
shr
lea
sub
dec
pop
rol
inc
pop
push
inc
add
pop
push
push
push
push
push
push
push
call
mov
pop
add
clc
mov
movb
ja
arpl
add
lds
add
mov
mov
add
pusha
push
fwait
xchg
scas
jbe
faddl
mov
lea
pop
call
push
not
lea
pop
cmpl
je
push
push
lea
push
or
inc
add
rol
sub
sub
add
pop
dec
ror
pop
push
sub
inc
shl
pop
push
call
push
push
push
lea
push
push
push
call
add
jo
int
add
add
out
add
add
add
add
rolb
scas
jno
jb
add
imul
push
in
add
add
mov
mov
add
leave
testl
add
out
add
cmpsb
mov
lea
pop
cmpl
je
push
push
inc
sub
push
sub
add
add
not
dec
sub
ror
lea
pop
add
pop
push
push
lea
push
call
in
fsubl
test
aad
pusha
mov
add
out
mov
push
out
cld
add
add
add
xlat
scas
je
fsubrp
mov
add
shll
mov
mov
add
mov
loope
push
add
lret
cld
mov
lea
pop
push
push
pop
call
push
add
shl
xor
pop
cmpl
je
push
push
shr
push
sub
add
lea
xor
inc
sub
inc
shl
pop
add
xor
pop
push
dec
xor
pop
push
push
xor
not
rol
pop
call
cmpl
je
push
push
add
dec
push
and
add
dec
inc
lea
sub
shl
ror
dec
pop
sub
pop
push
push
push
push
call
add
leave
fistpl
add
add
add
add
outsl
add
popl
mov
jb
mov
add
pop
sbbb
add
add
std
mov
jecxz
lcall
add
add
add
sahf
lahf
cwtl
mov
add
mov
lea
pop
push
push
rol
pop
call
cmpl
je
push
push
shl
push
sub
add
add
shl
xor
sub
sub
add
add
pop
dec
pop
push
inc
add
pop
push
call
push
push
push
push
call
add
add
add
out
into
xchg
add
stos
xchg
fildl
mov
add
add
sahf
lcall
add
imul
add
mov
add
scas
arpl
stos
shr
pop
test
mov
mov
lea
pop
cmpl
jne
push
push
push
push
push
lea
push
call
nop
icebp
mov
imul
stos
in
aad
add
add
mov
add
in
out
call
add
test
xchg
aam
jbe
sarb
add
add
mov
pusha
add
jno
mov
xchg
add
lea
jmp
addr16
rorl
sahf
add
ror
add
mov
mov
lea
pop
mov
movl
push
xor
pop
jmp
push
not
shl
pop
xor
push
push
push
call
xchg
add
mov
cwtl
addr16
add
jmp
add
iret
pusha
add
pop
add
add
into
into
mov
add
fcoms
in
xchg
iret
jp
out
mov
popa
pop
cmpsl
add
add
pop
pop
push
push
push
call
js
mov
add
pop
add
add
add
arpl
filds
add
mov
add
lods
test
push
test
add
adc
add
add
mov
add
add
lods
add
add
xchg
cmpsb
add
test
test
mov
lea
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
int3
in
add
fmul
add
xchg
push
mov
add
jecxz
add
xorb
lods
test
add
add
mov
outsl
shrb
add
add
sarl
pop
jbe
add
aam
add
add
add
mov
lea
pop
pop
push
sub
sub
add
pop
pop
push
push
push
push
push
push
push
push
call
orl
out
pop
xchg
add
fdiv
popa
add
fnsave
icebp
add
add
stos
pop
add
add
push
addr16
add
jmp
hlt
add
nop
mov
lods
je
jmp
mov
test
push
fucomi
add
add
mov
roll
pop
xchg
fimull
pop
leave
push
xor
dec
lea
rol
pop
ret
push
add
add
pop
push
push
lea
push
push
push
push
lea
push
call
pop
jo
jne
bound
jbe
xchg
in
add
add
add
add
loop
fildl
mov
jle
scas
xchg
gs
mov
roll
jno
add
iret
jb
push
filds
stos
add
cli
add
mov
xchg
add
jbe
push
lock
cltd
jnp
add
mov
push
add
add
fiadds
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
call
hlt
push
add
add
mov
add
faddl
add
add
add
aam
add
xlat
int3
int
mov
testl
pop
mov
add
mov
fwait
add
mov
add
xchg
repnz
add
mov
mov
add
jae
add
jecxz
mov
lea
pop
add
push
xor
rol
sub
ror
pop
cmpl
jne
push
push
xor
push
sub
add
sub
ror
shr
lea
pop
dec
lea
rol
pop
push
push
call
xorl
in
mov
add
jl
xchg
add
add
cmpsb
add
xchg
into
out
add
sahf
add
add
mov
push
clc
add
add
add
mul
ljmp
add
scas
bound
leave
roll
xchg
push
mov
lea
pop
pushl
push
rol
inc
ror
pop
call
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
test
jge
xlat
add
xchg
leave
jcxz
mov
arpl
pushf
stos
xlat
ret
add
test
mov
push
push
add
stos
add
in
mov
mov
lea
pop
push
call
push
rol
lea
ror
pop
jmp
cmpl
je
push
push
lea
push
call
cld
fldl
enter
add
jo
mov
test
jb
imul
mov
push
pop
add
push
lcall
add
add
add
mov
cld
mov
mov
test
cld
add
add
and
inc
pop
jb
add
fcomp
add
add
push
add
hlt
shl
mov
lea
pop
cmpl
jne
leave
push
push
lea
push
push
push
push
push
push
call
fildl
pop
out
mov
add
push
mov
add
addr16
jns
add
add
enter
jno
jae
add
add
add
add
mov
add
xchg
shlb
add
shlb
bound
add
cmc
repnz
jecxz
clc
ja
add
cmc
scas
loope
add
lret
add
pop
add
push
shl
pop
pop
pop
push
pop
pop
push
lea
push
push
lea
push
call
mov
jne
push
jno
jge
add
pop
cwtl
add
add
add
cld
add
mov
test
jecxz
jne
add
add
add
arpl
ficoml
loope
fstpt
lods
add
stos
add
mov
roll
add
test
in
add
xchg
cmp
popl
js
movsb
add
pop
pop
leave
push
shl
xor
pop
add
push
xor
xor
lea
pop
ret
push
push
push
lea
push
push
lea
push
push
call
add
lret
xchg
test
add
add
add
add
insb
cmc
popl
nop
addb
mov
pop
add
mov
int3
fiadds
mov
add
jecxz
test
add
add
add
pop
add
fdivrl
add
les
push
sbb
add
or
add
add
cltd
lods
sarb
add
add
mov
add
add
in
add
add
icebp
add
jae
nop
pop
xchg
push
fiaddl
rol
fsubrl
jne
insb
pop
jp
into
add
test
jns
aam
fstpl
nop
shrl
add
mov
rcrl
rclb
test
frstpm(287
nop
mov
lea
pop
cmpl
jne
push
push
inc
push
xor
add
not
sub
sub
add
add
pop
rol
xor
pop
push
push
push
push
push
push
call
add
rol
out
fstps
pusha
pop
mov
pop
add
add
mov
popa
ljmp
jno
in
add
add
mov
add
mov
mov
add
add
shrb
ja
cwtl
fnstsw
mov
add
rcrb
xlat
mov
add
add
jo
mov
lea
pop
pushl
push
lea
pop
call
push
sub
shr
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
jp
hlt
loope
add
lds
in
add
mov
add
add
add
jae
xchg
iret
add
add
pusha
mov
ja
jecxz
out
mov
add
imul
push
shll
sahf
add
add
scas
add
hlt
lea
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
add
aad
add
movb
in
test
int
mov
add
add
in
push
mov
add
stos
add
mov
add
out
hlt
jo
add
mov
xorb
std
mov
add
add
add
pop
mov
pop
jnp
fldl
push
call
and
fstl
or
jne
push
not
rol
dec
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
add
add
mov
je
js
popf
add
out
add
add
test
mov
add
shlb
add
outsl
add
push
or
add
jbe
add
add
add
pusha
push
add
int3
lea
pop
mov
push
push
push
not
add
push
sub
add
sub
not
sub
inc
lea
sub
sub
pop
rol
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
bound
nop
mov
add
mov
add
pop
xchg
fwait
mov
push
pop
jl
shl
lahf
mov
add
std
pushf
js
push
in
pop
add
jo
ror
add
cmp
jo
push
test
gs
lea
pop
pushl
push
lea
push
push
push
push
push
push
push
push
call
mov
add
jp
aad
add
push
add
add
ffree
lahf
add
add
mov
add
add
orb
hlt
shrb
orb
sahf
jnp
in
lcall
push
loop
mov
lea
pop
call
push
push
inc
lea
add
pop
call
push
push
dec
xor
add
push
or
inc
add
shr
shl
sub
lea
sub
pop
add
add
xor
shl
pop
push
xor
pop
pushl
push
ror
dec
pop
call
push
shl
pop
call
push
push
inc
lea
sub
push
push
pop
add
sub
sub
sub
sub
pop
lea
pop
push
push
push
push
push
push
lea
push
push
call
fidivl
test
lds
jle
add
push
pop
add
add
xchg
mov
pop
loope
pop
add
xchg
add
mov
out
loope
pusha
add
add
add
add
add
mov
lea
pop
pushl
push
shl
sub
pop
call
call
push
not
inc
pop
lea
push
push
rol
dec
push
or
inc
add
shl
dec
sub
lea
sub
add
pop
lea
ror
not
pop
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
lods
xchg
sahf
xchg
rcl
cld
stos
lds
xchg
ja
leave
pop
add
add
add
mov
fsub
mov
pop
testl
add
sahf
insb
add
add
lret
add
add
add
pop
pushl
call
push
push
lea
push
call
push
enter
add
gs
jle
add
add
sahf
add
add
add
add
std
lock
fstps
aam
add
rolb
ffreep
mov
fsubrs
add
pop
add
push
pusha
lds
movsb
add
popa
jnp
in
fsub
fwait
push
mov
icebp
add
pop
add
pop
push
push
lea
sub
xor
pop
call
push
push
add
ror
push
sub
add
rol
sub
not
not
pop
ror
pop
push
shr
shl
dec
pop
pushl
push
lea
xor
xor
pop
call
push
lea
push
push
push
push
push
lea
push
push
push
call
xchg
xchg
leave
mov
add
arpl
add
add
xchg
addr16
nop
rcl
stc
push
pusha
enter
add
jbe
mov
add
add
leave
aam
mov
add
add
add
mov
mov
lea
pop
call
push
inc
rol
rol
sub
pop
mov
push
push
add
xor
lea
not
push
or
inc
add
dec
sub
shl
sub
sub
inc
pop
add
pop
push
lea
push
push
push
push
push
lea
push
call
add
call
mov
add
add
int
out
add
test
jno
add
add
jns
add
add
fadds
add
add
add
mov
lea
pop
pushl
push
inc
pop
call
push
push
lea
push
push
push
call
jmp
add
add
add
mov
mov
add
cli
mov
add
icebp
testl
mov
xchg
cmc
push
jecxz
add
out
in
leave
add
xchg
clc
add
add
add
add
in
popa
pusha
add
mov
add
pop
faddp
faddl
add
lods
add
add
fimull
pop
call
push
push
xor
push
and
add
add
inc
ror
sub
add
pop
add
rol
pop
push
dec
pop
pushl
push
sub
shr
pop
call
push
push
push
push
push
push
push
push
push
push
call
addl
roll
add
mov
add
add
arpl
mov
mov
jae
add
ficoms
add
fnstsw
add
mov
add
in
add
add
add
add
addb
add
add
jl
add
popa
add
arpl
pop
push
pushl
push
not
inc
pop
call
push
push
shr
dec
push
sub
add
add
sub
add
xor
inc
shl
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
in
scas
addl
fnstsw
xchg
into
add
idiv
add
mov
nop
add
push
xchg
lods
add
xor
add
mov
add
add
jns
lahf
ja
imul
mov
add
add
fimull
add
pushf
mov
add
lea
pop
pushl
push
push
call
jbe
push
ficoms
lods
ret
icebp
insb
ljmp
icebp
add
pop
js
add
out
popl
jo
add
pop
add
xchg
jp
mov
mov
push
xchg
add
add
xchg
ljmp
in
pop
add
movsb
arpl
add
addl
add
test
lea
pop
call
push
push
shl
shl
rol
push
xor
add
ror
sub
sub
sub
lea
lea
pop
shr
shr
rol
pop
push
push
inc
push
sub
add
lea
rol
add
shr
sub
sub
rol
pop
dec
not
dec
pop
push
push
call
lods
jl
xchg
in
add
add
js
jle
addb
sti
pop
mov
stos
add
add
add
xchg
shl
sti
mov
insb
add
add
pop
add
ja
add
xchg
leave
add
jns
fildll
jecxz
jne
out
add
jle
jbe
popf
add
cld
lea
pop
call
push
shr
add
pop
pop
dec
jne
push
push
push
call
out
popa
out
pop
nop
loopne
add
ret
pop
xchg
leave
add
mov
in
xchg
fdivrl
add
pop
addr16
jp
mov
add
sti
jmp
fmull
pop
or
add
test
aam
int
push
push
lea
push
lea
push
push
push
push
call
rcr
je
fwait
push
hlt
add
icebp
add
add
mov
std
push
add
mov
add
jnp
add
rcrl
add
fmul
fldenv
loopne
popf
pop
mov
mov
add
add
jo
cli
add
mov
mov
add
jae
ror
add
add
add
pop
jmp
push
push
push
push
call
xchg
jl
add
add
flds
cmc
mov
add
shrl
out
rclb
aam
add
incb
rcl
xchg
arpl
js
mov
lods
add
movsb
push
aam
shlb
mov
jl
add
bound
pop
call
push
push
inc
sub
ror
rol
push
and
add
shl
add
rol
sub
sub
pop
shr
ror
pop
push
inc
pop
pushl
push
push
call
mov
add
fiaddl
outsl
add
xchg
sbbb
lret
lahf
push
pusha
jne
add
jl
js
push
int
mov
loop
out
add
popf
cmp
test
add
ficoml
push
add
pop
call
push
push
add
lea
add
ror
pop
call
push
push
push
push
push
lea
push
push
call
add
mov
clc
imul
add
push
mov
add
push
add
add
add
mov
stos
add
add
mov
out
jo
mov
push
add
nop
mov
in
add
mov
add
jae
out
mov
lea
pop
mov
push
inc
sub
ror
sub
pop
lea
push
push
sub
rol
dec
push
sub
add
dec
sub
xor
sub
shr
lea
pop
shl
pop
push
push
push
push
call
jne
mov
mov
fs
loope
push
add
stc
out
mov
push
imul
stos
stos
push
into
add
in
add
cld
pusha
out
xchg
add
add
add
add
add
addl
les
jne
push
rol
pop
call
push
lea
push
push
push
push
push
lea
push
call
add
cltd
js
jbe
int3
add
xchg
add
out
notb
cmpsl
fwait
testl
pop
fists
stos
add
fmul
jnp
add
add
add
add
cmpb
add
sar
mov
lea
add
imul
xchg
add
add
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
andb
testb
add
cltd
add
mov
mov
jne
mov
add
insb
jmp
add
mov
stc
xchg
add
jne
push
jne
mov
add
add
xchg
add
cmpl
jmp
add
mov
jbe
jne
add
test
add
iret
add
add
add
incb
loop
cld
lea
pop
call
push
push
shl
lea
inc
push
xor
add
xor
shl
shr
dec
sub
sub
sub
xor
pop
add
shl
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
mov
push
lock
pushf
add
add
stos
out
lock
lea
flds
test
push
add
movsb
mov
jnp
add
test
add
lcall
add
mov
in
jne
xchg
add
add
xchg
add
add
test
mov
pop
sahf
mov
lea
pop
pushl
push
push
push
push
push
push
lea
push
call
int3
addb
jmp
test
add
add
stos
add
je
mov
add
shll
test
jnp
cli
test
movsl
xchg
test
mov
mov
mov
lea
pop
call
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
loope
jno
test
add
jmp
xlat
jo
pop
fwait
jbe
hlt
mov
push
jne
jmp
call
add
incb
movsl
pop
fwait
jne
out
add
movsl
add
fiadds
push
jge
add
rol
mov
lea
pop
mov
push
ror
rol
inc
pop
lea
push
push
not
push
or
not
add
add
sub
add
xor
pop
sub
dec
pop
push
push
call
addr16
mov
mov
aam
push
sbb
sti
cltd
push
out
mov
mov
push
imul
adcb
fwait
cmc
cmpsl
test
add
icebp
pop
add
add
pop
jle
add
add
mov
sahf
add
pop
add
add
repnz
insb
add
std
add
push
js
lods
add
jno
add
into
sar
int3
mov
lea
pop
pushl
call
push
sub
shr
inc
pop
lea
push
push
xor
xor
rol
shl
pop
push
push
push
inc
lea
pop
pushl
push
push
rol
rol
push
and
add
sub
xor
ror
not
sub
sub
shr
pop
shl
shr
pop
push
dec
pop
push
push
push
push
push
lea
push
lea
push
call
add
test
add
mov
loop
mov
in
jmp
aad
xchg
add
add
add
mov
les
loop
mov
xchg
add
scas
mov
fmull
shrb
sub
push
inc
push
sub
add
ror
lea
sub
sub
rol
not
add
pop
add
pop
push
push
lea
push
push
push
push
call
add
xchg
std
test
pop
mov
aad
pop
add
mov
cli
fs
add
pushf
push
add
add
add
fs
out
enter
add
mov
push
gs
sahf
mov
mov
mov
lea
pop
pushl
push
push
push
push
call
int3
add
add
add
scas
add
jmp
add
sahf
mov
add
xor
add
ret
scas
push
add
add
add
add
add
pop
add
add
imul
pop
out
add
jbe
add
push
add
add
xchg
scas
jge
lea
mov
lea
pop
call
push
push
sub
pop
call
push
push
xor
shr
push
and
add
sub
shl
sub
xor
sub
pop
add
pop
push
push
push
push
push
push
push
push
lea
push
call
add
aam
add
xchg
add
add
add
fwait
add
push
mov
mov
fcoml
add
add
movsl
add
add
test
mulb
add
add
cwtl
jbe
clc
add
pop
cmc
push
mov
fcompl
pop
pushl
push
lea
sub
pop
call
call
push
rol
ror
add
sub
pop
jmp
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
xchg
mov
add
jns
into
jns
add
jnp
add
push
cmp
add
add
add
out
add
clc
mov
into
xchg
lock
lahf
add
loop
add
movsb
je
add
out
leave
xchg
test
clc
fbstp
jnp
aam
outsl
jo
add
cwtl
shll
and
pushl
push
inc
ror
dec
pop
mov
jmp
push
push
not
not
lea
push
push
pop
add
rol
ror
xor
sub
shl
pop
shl
shl
xor
xor
pop
push
push
push
call
jecxz
add
out
add
add
test
add
cli
stos
mov
mov
mov
int3
push
add
lcall
add
lcall
add
add
sbbb
push
add
add
xlat
add
add
add
mov
lea
pop
pushl
push
push
push
push
push
push
push
lea
push
call
push
add
stc
leave
add
in
hlt
xchg
arpl
push
add
mov
add
fidivs
pop
add
pop
shl
jp
add
mov
mov
lcall
imul
in
add
data16
add
add
push
jecxz
push
add
lods
add
loope
mov
lea
pop
call
push
add
inc
add
pop
push
push
lea
push
lea
push
push
call
loopne
add
movb
add
repnz
push
pop
mov
add
lcall
lea
sarb
xchg
pop
push
mov
fildl
mov
lea
pop
call
push
push
add
xor
not
push
sub
add
xor
sub
inc
lea
add
dec
pop
sub
add
pop
push
sub
pop
pushl
call
push
inc
shr
xor
shl
pop
push
push
xor
shr
xor
shl
pop
call
push
push
call
add
mov
jp
cwtl
pop
negl
pop
mov
add
jae
add
jp
jp
mov
lods
add
add
test
enter
mov
fldl
mov
add
jb
xchg
add
loop
lock
add
pop
add
pusha
or
push
push
lea
push
call
add
add
push
jp
into
mov
adc
sahf
add
lahf
add
add
add
rclb
lea
addr16
jp
push
add
fadds
add
imul
fcomi
hlt
push
add
add
loop
add
stc
hlt
stos
add
cmc
add
in
xchg
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
add
xchg
lock
xchg
mov
js
rolb
hlt
add
into
iret
add
add
add
rcrb
je
mov
add
add
roll
stc
mov
push
sub
push
pop
pop
push
not
inc
pop
pop
push
push
push
push
call
mov
push
xchg
sub
add
call
add
add
mov
test
add
ret
int
pop
inc
imul
push
add
add
mov
add
pop
pop
push
dec
shr
add
dec
pop
leave
add
push
sub
pop
ret
leave
push
push
push
push
push
call
add
mov
roll
add
add
add
add
add
add
add
jbe
into
popa
xchg
mov
add
add
iret
jne
add
mov
add
out
test
xchg
mov
lea
pop
ret
push
push
push
lea
push
lea
push
push
call
xchg
add
fisubrl
loopne
cld
add
mov
pop
add
mov
cltd
add
mov
add
mov
test
add
cmpsl
fbstp
jae
xchg
add
add
add
jo
or
jne
push
cmpsb
scas
fidivrs
icebp
out
stos
loope
add
data16
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
xlat
into
add
add
pop
add
add
push
jne
add
mov
add
add
mov
add
mov
jecxz
push
add
loop
push
roll
lret
add
mov
and
mov
push
xor
shl
add
add
pop
cmpl
jne
push
push
lea
push
call
add
add
add
fs
add
add
scas
push
mov
fs
addl
in
mov
jno
add
add
popa
add
out
lret
incb
add
std
pop
out
add
int3
add
push
add
add
fsubrp
add
mov
lea
pop
mov
push
sub
inc
pop
jmp
mov
push
dec
sub
add
sub
pop
and
push
sub
add
sub
pop
xor
push
inc
pop
xor
push
push
lea
push
call
add
shl
enter
xchg
mov
out
push
xchg
call
addr16
push
int
leave
jge
mov
into
add
mov
scas
add
bound
mov
add
cli
add
movsl
add
add
mov
jecxz
push
add
add
add
pop
add
jecxz
mov
aad
mov
lea
pop
add
xor
push
push
push
push
call
imul
mov
mov
add
add
stc
jne
fdivrs
ljmp
mov
popf
pusha
add
filds
jae
add
mov
jno
out
pop
push
pop
test
mov
add
push
pop
pop
nop
mov
add
jb
mov
int3
mov
movb
mov
je
push
mov
lea
pop
dec
sub
push
lea
add
pop
jmp
sub
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
insb
add
ja
add
sti
push
leave
push
mov
add
jno
mov
cld
xchg
icebp
add
add
add
lret
add
test
jae
cld
add
lock
add
add
out
cmpsb
xlat
add
cltd
out
add
jbe
lret
add
fucom
xchg
loop
mov
lea
pop
pushl
push
push
push
push
push
push
push
call
push
add
jb
add
fiadds
cmpsb
mov
add
hlt
add
lcall
test
mov
mov
push
jbe
pop
add
pop
add
pop
pop
sub
push
shl
sub
shl
pop
cmp
jne
push
push
push
lea
push
push
call
add
add
lods
add
out
add
add
add
nop
mov
subl
cwtl
fbld
mov
add
add
add
aam
bound
mov
push
shr
add
pop
lea
sub
push
xor
shl
pop
mov
push
dec
not
pop
shr
add
push
inc
pop
sub
push
push
push
lea
push
push
push
lea
push
call
lods
add
xchg
ja
add
push
add
add
xchg
popf
lret
insb
andb
add
add
stos
jno
mov
sti
mov
push
add
jne
add
cltd
jecxz
add
sbb
pushl
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
std
pop
add
jno
test
imul
mov
stos
add
jo
add
add
lret
add
ret
test
add
add
leave
into
add
jo
fcmovnb
ljmp
add
add
add
mov
fdivrl
push
xchg
int3
mov
add
into
ljmp
enter
jns
mov
lea
pop
shr
and
push
xor
ror
add
lea
pop
sub
push
push
lea
push
call
add
add
add
ljmp
fwait
hlt
js
pop
popa
pusha
test
add
int3
popa
shrl
sahf
test
add
jle
shlb
les
stc
sbb
test
sti
dec
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
movsl
jae
add
add
add
incb
mov
lods
mov
sar
add
arpl
jmp
mov
add
gs
mov
loope
frstor
int3
outsl
pop
call
aad
jae
add
fs
add
andb
pusha
test
hlt
lea
pop
ret
push
push
push
push
push
push
push
push
push
push
push
call
pop
add
add
flds
cmpsl
mov
movb
out
add
lret
fwait
jl
mov
flds
add
add
add
sahf
hlt
add
jo
outsl
mov
push
add
xchg
add
pop
mov
add
push
sub
pop
push
push
ror
pop
push
push
push
push
call
flds
add
add
add
push
add
lds
add
mov
add
out
enter
add
push
add
clc
ja
add
mov
cmpsb
icebp
add
pop
mov
jbe
arpl
testl
add
jo
ja
lock
pusha
or
push
push
xor
shl
lea
pop
push
push
push
shr
rol
pop
mov
push
not
pop
lea
push
shr
pop
sub
push
push
push
lea
push
push
push
call
mov
sahf
add
insb
movb
popa
jp
mov
jmp
jno
popl
popa
jecxz
add
push
sti
jns
fcoml
mov
hlt
loop
xorl
cmpsb
pop
mov
mov
rcl
data16
add
bound
pop
mov
push
push
push
lea
push
push
call
add
nop
ret
out
cmpsb
mov
add
shrl
add
add
add
out
add
aad
add
cmpsb
add
mov
add
movsl
mov
add
stc
mov
cld
ffreep
mov
lea
pop
shr
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
roll
popf
add
add
bound
std
add
clc
addl
int3
add
ficomps
lds
add
mov
testl
add
add
mov
frstpm(287
loopne
hlt
lock
mov
mov
imulb
in
pushf
nop
xchg
add
add
test
lods
out
fwait
mov
lea
pop
add
push
rol
pop
mov
add
push
ror
pop
mov
push
push
push
call
add
add
in
mov
add
mov
add
add
xchg
lret
lret
ja
add
lcall
pushf
xchg
cltd
add
enter
add
add
cld
add
mov
mov
lea
pop
add
xor
push
push
call
fiaddl
add
push
popa
in
add
imul
add
add
push
xchg
pop
mov
rorl
test
mov
jp
imul
repnz
add
add
add
bound
test
jmp
add
popl
popf
movsb
stos
mov
add
add
cltd
mov
movsb
rorl
lea
pop
mov
and
push
rol
pop
rol
rol
push
pop
xor
inc
push
pop
cmpb
jne
add
push
push
push
lea
push
push
lea
push
push
call
jge
xor
add
outsl
add
add
cli
jecxz
addb
add
mov
add
add
add
add
cwtl
enter
add
mov
lea
pop
cmp
je
push
push
push
push
push
lea
push
push
push
push
push
call
add
test
out
add
add
rorl
push
add
loope
enter
cmpsl
add
mov
add
loop
mov
add
pop
fiaddl
add
pop
add
push
push
push
push
push
push
call
add
filds
sti
add
add
lods
xchg
jle
flds
addr16
add
xchg
push
jns
add
add
mov
xchg
add
add
lods
add
add
std
add
pop
add
add
mov
imul
lret
outsl
mov
test
add
int3
lea
pop
cmpl
jne
push
shl
pop
xor
pop
push
lea
push
push
push
push
call
add
jno
add
icebp
cmpsl
call
add
jne
push
add
xchg
xchg
test
add
add
jbe
add
push
add
fs
cmpsb
add
fadds
add
lcall
fidivrs
add
shlb
mov
add
rolb
pop
leave
mov
jle
mov
lea
pop
pop
push
shl
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
icebp
call
add
add
into
test
jge
fstl
scas
stos
mov
fstps
stc
out
out
add
jbe
add
xchg
add
lea
add
add
pushf
add
add
add
mov
add
pop
mov
test
mov
add
int3
fcmovb
imul
int3
lea
pop
pop
push
rol
pop
pop
push
pop
leave
ret
push
push
push
push
push
push
push
push
push
push
call
lods
enter
push
cld
adcb
push
pop
ret
push
mov
jns
add
jmp
add
add
xchg
xchg
scas
jle
pop
pushf
jp
popf
add
lea
pop
mov
add
push
not
sub
rol
dec
pop
push
push
push
not
pop
add
xor
push
not
sub
pop
add
push
xor
rol
pop
testw
push
not
add
sub
shl
pop
pop
pop
push
lea
push
push
push
push
call
scas
rolb
mov
push
xchg
jmp
out
out
add
outsl
loope
arpl
imul
add
icebp
mov
ret
movsl
mov
add
cmpsb
pop
add
pop
add
js
lock
mov
shl
add
add
imul
loopne
mov
add
add
add
add
cld
lea
pop
mov
push
xor
dec
pop
push
push
push
call
mov
in
pusha
pop
jo
fs
movsl
add
faddl
ja
add
ficoml
mov
std
fdivl
add
imul
pop
lcall
in
icebp
pop
fidivs
xchg
out
add
add
xchg
xchg
lcall
add
add
add
pop
add
add
add
add
add
movsb
add
cmc
jle
mov
lea
pop
call
xor
push
add
ror
shl
pop
pop
push
push
push
push
push
call
add
popa
add
add
add
add
add
pop
jbe
add
popa
ljmp
add
incb
add
add
lea
repnz
add
add
lods
add
add
mov
imul
mov
add
fcom
mov
lea
pop
pop
push
shr
sub
pop
pop
push
not
dec
sub
lea
pop
pop
push
not
ror
shl
pop
pop
push
push
push
push
push
push
push
push
push
call
stos
pop
add
add
jmp
out
push
push
stc
xlat
add
mov
ja
into
fucomip
add
stos
add
add
cltd
shrl
testb
add
movsb
add
rolb
test
mov
movsl
incb
enter
add
mov
mov
xchg
test
xchg
lret
add
and
leave
push
push
push
push
call
add
xorl
xchg
add
faddl
add
add
repnz
pop
stc
add
ljmp
add
insb
add
add
sti
pop
add
stc
jns
mov
push
jbe
add
add
mov
test
add
sti
js
xchg
mov
faddl
add
adc
or
push
inc
shl
pop
push
mov
push
push
push
call
jno
mov
add
test
add
insb
jle
mov
add
push
rolb
fbstp
push
pop
push
aad
je
xchg
add
mov
bound
add
add
popf
add
mov
add
pop
add
mov
lea
pop
add
push
push
shr
pop
push
push
push
push
lea
push
push
call
add
add
push
int
movsb
repnz
js
sahf
test
jmp
add
add
push
add
roll
add
stc
add
call
add
add
stc
push
push
nop
add
add
adc
push
lea
push
push
push
push
lea
push
call
add
add
testl
add
jecxz
xchg
bound
fwait
add
mov
add
jle
add
pop
add
ffree
repnz
in
add
add
jbe
fmull
pop
or
sub
dec
pop
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
xchg
add
add
popf
add
rolb
jne
add
add
mov
add
add
add
in
testl
rcrb
xchg
add
xchg
mov
add
in
mov
lea
pop
lea
push
push
push
push
call
add
int
addr16
cmpsb
add
add
stos
add
add
in
arpl
add
add
pop
add
outsl
lret
mov
add
add
add
add
mov
lea
pop
sub
push
xor
xor
pop
mov
shr
push
inc
pop
add
push
inc
xor
ror
inc
pop
mov
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
xchg
outsl
add
add
fldl
in
add
add
addl
add
add
mov
scas
into
pop
add
std
jo
call
mov
add
add
mov
filds
add
mov
xchg
mov
lea
pop
pushl
push
push
push
push
lea
push
lea
push
lea
push
call
jle
ja
hlt
jmp
push
out
add
add
addb
add
rolb
cmpsl
mov
push
stos
add
hlt
xchg
add
fstpt
jae
mov
add
mov
add
mov
add
add
jecxz
fldl
add
loop
add
lea
add
add
add
add
divb
mov
add
addb
mov
lea
pop
popl
push
push
lea
push
push
lea
push
call
push
shll
imul
call
add
add
test
add
clc
in
add
aad
add
cmc
loopne
iret
in
lret
xchg
mov
lea
pop
mov
push
shr
pop
add
push
push
lea
push
call
xchg
loope
mov
pushf
add
push
add
enter
xchg
add
jb
cmpsl
jmp
sbbb
popa
mov
call
movsl
xchg
add
ja
in
jae
push
frstor
add
lods
lock
clc
push
xchg
mov
lea
pop
xor
push
lea
push
call
cmc
lret
jge
add
jp
mov
jb
outsl
scas
movsb
jb
jno
lcall
mov
orl
clc
mov
shll
stc
push
imul
add
bnd
pop
jo
add
add
jmp
add
imul
out
pop
jnp
sbb
lods
loop
aam
bound
pop
lea
mov
push
xor
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
xchg
add
add
repnz
fadds
add
fcmovnbe
call
add
jae
add
add
cwtl
add
out
mov
jo
aam
add
jmp
add
pusha
jno
add
out
enter
scas
loope
addl
add
add
popa
lods
mov
lea
pop
xor
rol
push
push
push
push
push
push
call
mov
add
push
add
in
test
add
jbe
jp
mov
fdivl
add
mov
mov
add
je
add
loop
in
jo
add
mov
add
xchg
fwait
add
lret
rcl
mov
add
mov
mov
add
popf
xchg
mov
lea
pop
nop
push
lea
push
push
push
push
push
call
imul
lahf
push
add
push
shll
test
add
pop
fsubrl
add
cmpsl
add
add
mov
add
cmpsb
xchg
add
lock
loopne
push
clc
pop
mov
int
notl
cmpsl
lret
add
add
push
mov
loop
les
add
mov
mov
lea
pop
nop
xor
push
xor
add
dec
shr
pop
nop
push
sub
pop
nop
inc
push
push
call
add
pop
add
mov
adcb
add
add
add
mov
movsb
xchg
add
fisubrs
aam
add
add
add
add
add
add
roll
iret
mov
add
pushf
test
loop
add
cli
jno
add
out
aad
test
je
iret
add
cmpsl
cmpsl
mov
andb
lea
pop
nop
push
sub
inc
not
pop
nop
push
push
push
push
push
push
push
push
lea
push
push
call
int3
add
xlat
pop
add
xchg
add
add
fildl
add
in
jne
test
addl
jge
in
ret
fdivrs
mov
clc
xchg
imul
add
mov
lea
pop
cmpb
jne
add
push
push
push
lea
push
push
lea
push
push
push
call
add
xchg
andl
add
clc
in
mov
movl
enter
popl
ja
add
cmpl
push
add
add
xchg
incb
pusha
pop
jo
add
pop
nop
push
push
push
call
ljmp
add
lods
roll
push
add
jl
add
add
add
add
add
mov
rcrl
sub
addb
add
imul
in
add
pop
addr16
jns
add
mov
arpl
subb
cli
mov
lcall
pop
nop
push
xor
pop
cmp
je
push
push
push
lea
push
push
lea
push
push
push
push
call
cmpsb
movsb
jo
jnp
push
add
add
shl
scas
ljmp
rcrb
imul
loope
add
add
add
je
lahf
add
add
add
add
stos
add
add
lea
pop
nop
push
rol
pop
nop
inc
push
push
push
lea
push
push
lea
push
push
push
call
add
stc
out
add
lret
pop
jns
add
in
mov
add
fbstp
add
jmp
faddl
add
add
add
mov
push
add
add
xchg
add
push
addr16
scas
add
loop
mov
add
pop
push
fwait
jno
push
mov
cld
xorb
shrb
mov
add
cmpsb
testl
in
fmull
fwait
push
push
lea
push
call
jmp
xchg
add
jnp
add
jbe
pop
rolb
xchg
mov
je
cltd
add
jno
popl
movsl
lret
iret
xchg
add
pop
add
add
lcall
pop
add
add
mov
pusha
js
cmpsl
add
test
lcall
lret
add
in
pop
add
iret
int3
sahf
add
jns
add
add
pop
nop
push
add
xor
rol
pop
cmp
jb
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
jecxz
add
stc
add
add
addb
rolb
shll
mov
push
add
add
arpl
fldl
add
add
add
add
add
cltd
lcall
mov
negl
mov
lea
pop
xor
jmp
push
push
lea
push
push
push
push
push
push
call
xchg
add
push
jne
mov
les
add
cli
cmp
add
scas
rol
jecxz
mov
push
push
jbe
shll
add
insb
leave
add
add
movsl
call
jae
add
add
rcrb
jmp
shl
mov
mov
cwtl
add
lret
test
add
pop
add
add
add
add
add
mov
xorl
pop
mov
add
push
push
push
push
lea
push
push
push
call
pusha
jbe
scas
jle
mov
xchg
add
loopne
std
push
repnz
in
add
movsl
jecxz
mov
cld
add
js
sahf
xchg
iret
aam
pop
imul
icebp
push
add
add
roll
add
popa
add
into
jo
lods
shll
mov
movsb
mov
lea
pop
movzwl
push
rol
sub
rol
pop
mov
add
push
shr
add
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
add
mov
aad
test
test
add
xchg
add
ficoml
in
mov
scas
sti
lret
add
in
add
add
add
test
jo
mov
mov
add
pop
xor
push
push
call
add
add
ljmp
mov
roll
pop
add
add
add
fldl
stos
add
jbe
add
popa
pushf
lahf
addr16
add
imul
std
mov
add
add
mov
test
scas
add
shr
mov
lea
pop
xor
push
dec
shl
ror
inc
pop
shl
xor
push
pop
shl
push
push
push
push
push
push
push
push
call
jb
add
jne
cmpsb
mov
push
jp
add
addb
jmp
add
add
fsubrs
faddl
mov
jae
xchg
pop
add
mov
add
add
out
cld
add
rolb
add
lret
add
add
hlt
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
nop
insb
out
add
add
pop
call
add
mov
jecxz
add
call
add
add
lret
add
mov
jle
add
add
jmp
bound
shl
push
rol
sub
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
add
stos
mov
add
sbb
push
add
mov
js
add
test
add
pop
add
cmpsb
mov
mov
add
add
mov
bound
ljmp
push
push
add
add
jp
test
fmull
rcll
int3
shr
pop
add
push
lea
dec
ror
pop
pop
push
push
lea
push
call
lock
sti
xchg
jmp
mov
add
sti
imul
push
add
add
mov
add
call
arpl
add
add
xchg
add
test
jo
add
pop
add
add
add
add
roll
add
add
mov
movsb
add
mov
add
in
mov
lea
pop
pop
pop
push
sub
sub
shl
lea
pop
pop
push
lea
push
lea
push
push
push
call
loop
add
mov
add
add
out
add
push
xchg
fidivrl
jnp
mov
add
pop
add
test
lock
add
mov
aam
bound
leave
push
push
push
call
int
add
test
in
add
add
xchg
jo
jnp
popf
mov
mov
arpl
cltd
out
push
push
push
aam
mov
add
add
icebp
fwait
mov
lea
pop
ret
push
rol
shr
rol
sub
pop
push
push
push
call
stos
enter
lret
add
jno
call
pop
push
jae
mov
add
add
push
add
add
add
add
pushf
add
add
in
pop
cli
mov
lea
pop
mov
push
rol
shr
pop
push
push
dec
rol
ror
pop
push
push
push
push
push
push
push
push
call
add
add
je
xchg
add
add
push
addl
add
add
xchg
int3
add
mov
hlt
xor
iret
in
add
pop
xchg
add
mov
cld
add
add
loopne
push
add
jge
add
lock
jl
add
jne
add
add
add
add
pusha
add
mov
jnp
hlt
lea
pop
push
push
push
sub
pop
mov
push
xor
shr
pop
mov
push
shl
rol
pop
mov
push
shr
dec
pop
test
je
push
push
push
lea
push
push
push
lea
push
push
push
call
add
xchg
add
add
loope
xchg
add
add
lahf
add
jae
faddl
rcrb
add
stc
pop
jecxz
call
add
hlt
mov
add
fwait
push
leave
mov
xchg
add
add
add
add
fistps
arpl
mov
push
shl
dec
lea
inc
pop
test
je
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
out
add
add
mov
nop
add
pop
shlb
push
out
mov
scas
mov
add
add
add
push
add
fmull
dec
or
push
push
push
push
call
mov
movsb
add
imul
int3
add
jnp
mov
out
add
mov
clc
push
lods
add
iret
xchg
add
add
add
add
loop
cli
add
mov
popf
ja
add
push
call
lahf
mov
add
xlat
add
add
mov
aam
bound
mov
push
push
push
push
push
lea
push
call
movsb
cmc
add
leave
mov
cmpsb
jmp
pop
aam
gs
shll
add
mov
add
mov
jp
mov
add
push
jge
add
add
cli
add
jo
mov
out
ror
rcrb
fildl
ret
add
add
add
add
loope
add
add
add
add
pop
inc
push
push
push
push
push
push
lea
push
push
push
call
out
testl
add
loope
icebp
iret
cli
pop
add
add
add
testl
push
pop
add
les
outsl
addb
add
test
xchg
les
add
in
add
std
lahf
mov
jb
add
lods
push
movsb
repnz
loopne
add
pop
cmpsl
mov
lea
pop
cmp
je
push
add
inc
pop
test
je
push
push
lea
push
push
call
fildl
mov
mov
in
add
mov
xchg
les
add
jne
jnp
add
add
mov
jne
mov
lock
add
int3
lea
pop
mov
push
add
sub
pop
inc
cmp
je
push
sub
shr
rol
pop
test
jne
push
push
call
xchg
add
pop
stos
lahf
pop
jns
sti
mov
push
jmp
mov
add
clc
add
add
lahf
add
lods
jo
loop
jl
add
jb
add
pop
cmpsl
add
nop
add
out
cld
add
add
roll
add
add
enter
pop
pop
add
add
std
testl
lcallw
rolb
mov
mov
lea
pop
xor
pop
push
lea
push
push
push
push
call
ljmp
add
stc
in
cmc
cwtl
mov
add
mov
cli
out
mov
add
pop
pushf
add
notb
mov
add
cmpsl
mov
xchg
add
add
pop
add
add
xlat
add
add
popa
adc
pop
pop
push
push
push
call
add
in
jl
mov
add
xorb
testb
mov
fidivrs
add
jp
add
jb
add
add
add
add
cmc
fs
pop
scas
pop
mov
lea
pop
pop
push
shr
sub
ror
pop
leave
push
ror
pop
ret
push
push
lea
push
lea
push
call
pop
add
push
xlat
pop
add
lds
add
arpl
in
bound
out
add
mov
in
add
push
add
mov
cmpsb
add
out
mov
add
add
pop
add
fimull
cmpsb
mov
add
aad
add
lea
add
mov
add
adc
push
push
add
sub
shl
inc
pop
inc
cmp
jne
push
lea
pop
lea
push
lea
push
push
call
pop
add
add
add
jmp
add
cli
pop
push
gs
add
std
fmull
add
pop
fsubl
iret
add
shll
add
add
lds
lea
pop
mov
test
je
push
push
lea
push
push
call
jb
add
add
add
add
cmc
cli
add
ret
add
mov
add
add
mov
jb
mov
pop
add
addb
add
test
out
push
add
add
lea
pop
mov
add
push
lea
rol
not
not
pop
cmp
jne
push
xor
pop
mov
test
je
push
dec
pop
mov
add
push
sub
add
pop
cmp
je
jmp
push
sub
sub
shr
pop
xor
push
sub
pop
pop
pop
push
lea
shr
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
add
insb
add
add
add
stos
lcall
loope
mov
add
add
pushf
jl
pusha
cld
add
std
pop
mov
hlt
pop
xchg
hlt
add
push
add
test
pop
jnp
enter
mov
add
add
jns
fwait
add
pop
leave
push
shl
shl
inc
pop
ret
push
push
push
push
lea
push
push
call
add
je
add
mov
add
xchg
add
arpl
add
add
jne
test
add
leave
jo
aad
pop
fidivrl
add
push
test
lock
stos
pop
add
jbe
add
stos
subb
mov
aam
popa
add
add
mov
lea
pop
lea
push
xor
shr
not
pop
pop
push
push
push
push
push
push
push
push
push
push
call
mov
add
pusha
shll
jne
out
add
addr16
test
rcr
add
sarl
mov
jne
push
mov
sahf
jp
add
add
clc
push
pop
int3
sbbl
jecxz
add
movsb
data16
lcall
add
stos
add
add
lock
add
xchg
jecxz
rolb
sahf
jecxz
add
imul
lea
pop
pop
push
pop
pop
push
inc
add
pop
pop
push
shl
pop
leave
push
lea
push
push
call
add
cmpsl
push
add
scas
add
out
pop
add
add
xchg
mov
insb
push
mov
add
xchg
js
stc
add
ror
pop
arpl
pop
ret
lea
jbe
add
ja
out
lock
stos
test
add
mov
popf
mov
lea
pop
ret
push
xor
pop
mov
pop
push
shr
pop
pop
push
push
call
frstor
popf
push
movsb
add
jne
mov
add
jle
sti
add
std
shlb
nop
loope
add
addb
std
addl
mov
add
js
add
mov
add
fmulp
in
add
mov
jge
push
add
repnz
rcrb
lea
out
add
stc
add
pop
mov
lea
pop
pop
push
add
pop
pop
push
add
add
inc
xor
pop
leave
ret
cli
cwtl
pop
jb
test
jb
push
pop
jb
fcomps
sub
xchg
push
pop
jb
pop
pop
jb
in
jb
xchg
pop
jb
imul
pop
jb
add
add
dec
sub
fsubl
movsl
dec
cmp
adc
insl
inc
idiv
ret
repz
xchg
cmpsb
ficoml
push
jb
xchg
mov
js
pop
int3
out
mov
xchg
sub
in
test
push
mov
popf
pop
movsb
adc
out
int3
sahf
mov
insb
ret
push
test
or
sbb
rcll
cmc
lret
xlat
cltd
push
push
lock
div
in
xchg
loope
popf
out
sbb
and
and
test
xor
mov
add
nop
add
ret
adc
mov
pop
mov
xchg
or
mov
repnz
push
push
enter
mov
iret
lcall
sub
sbb
jns
hlt
dec
and
dec
mov
dec
mov
rcrb
fiaddl
add
repnz
jle
add
movsl
push
xchg
cmpsb
mov
pop
bound
mov
jns
mov
add
inc
jbe
xor
xchg
mov
push
mov
imul
mov
and
adc
test
fdivr
shl
and
pop
add
adc
push
in
in
pusha
mov
ja
xchg
inc
or
ficomps
inc
andb
pop
xchg
push
and
outsb
fbstp
aas
pop
pop
jno
xor
popf
xchg
push
push
adc
and
xor
inc
add
inc
outsl
adc
pop
daa
jns
add
mov
rcr
jb
pop
test
sub
push
xor
fldcw
mov
inc
stos
hlt
xor
out
mov
inc
jg
and
mov
mov
movsb
sub
push
pop
shlb
cmc
xchg
push
pop
in
jno
xor
insb
pop
scas
scas
ret
movsl
gs
rol
rorl
cwtl
ret
xor
ret
stc
push
inc
pop
test
cs
xlat
loop
sbb
push
rcr
xor
pop
test
fmuls
mov
jno
repnz
jp
in
jo
mov
addr16
rcr
lds
adc
mov
push
cld
scas
mov
leave
je
mov
jg
addr16
cmp
push
add
ss
negl
push
jecxz
pop
cmc
and
mov
fiaddl
sub
mov
cmp
addr16
mov
push
dec
sub
jnp
sbb
dec
aaa
cmpsl
loopne
scas
and
mov
js
push
rolb
push
nop
pop
cmp
cs
ret
push
outsb
add
repz
stc
movsl
jnp
jo
or
repz
addr16
shlb
cld
jg
jmp
sbb
push
adc
push
lret
mov
sbb
xor
push
leave
adc
movl
mov
imul
ja
xor
adc
sbb
mov
adc
lret
jmp
ss
pop
jae
mov
movsb
jp
jl
pushl
mov
dec
xchg
stos
push
and
rcrb
stos
mov
stos
xchg
cmp
jle
in
mov
dec
inc
add
dec
mov
enter
mov
cmpsb
inc
insb
scas
sbb
mov
push
mov
add
sbb
icebp
lret
push
loope
adc
pop
xchg
xchg
lcall
push
push
jecxz
test
inc
pop
lods
out
test
dec
mov
in
jle
cli
int
xor
or
and
lea
mov
pop
xchg
cmpsl
xchg
nop
mov
pop
cli
mov
sbb
and
outsl
xor
in
and
inc
inc
repz
rorb
xor
call
lock
mov
loopne
push
fsubl
lds
sarb
cmp
cmp
and
lret
cli
push
sub
mulb
test
xor
imul
popf
inc
mov
bound
aad
adc
out
imul
subl
test
cli
xchg
fsubrs
popf
push
stos
imul
or
mov
xor
jge
mov
mov
dec
fcompl
in
or
xor
leave
lret
push
aas
es
aad
jmp
repz
mov
pop
mov
bound
fbstp
mov
lret
lret
enter
test
xchg
push
xchg
divb
imul
fdivr
jae
or
xchg
xchg
insb
dec
fst
iret
xchg
stos
add
idivb
bound
in
neg
xchg
pop
add
or
in
mov
xchg
cwtl
das
add
in
jns
stos
ljmp
and
in
push
cld
lret
xor
add
ds
mov
sti
or
icebp
sbb
pop
xchg
jae
jg
lret
js
loopne
mov
dec
mov
sub
rcl
mov
das
lret
inc
out
fwait
cmpsl
add
xor
cwtl
ret
orb
inc
xor
mov
fidivl
pop
test
cmp
mov
push
or
and
mov
adcb
xchg
or
rcrl
stos
push
dec
push
rcl
and
push
cld
hlt
fdivr
jae
xchg
bound
lret
add
xchg
pop
ds
cmc
daa
shrb
mov
sub
in
shll
clc
mov
popf
stos
test
pop
out
xchg
pop
xor
scas
popa
hlt
sbb
jmp
xchg
ds
icebp
push
sbb
loope
dec
push
negb
or
mov
sbb
hlt
stos
outsb
int3
cmpl
das
pusha
cltd
fnop
push
add
mov
fisubl
scas
add
fs
jno
ss
cmp
rcrb
pop
dec
loop
mov
pop
lods
or
push
cwtl
loop
cmpsl
add
out
in
arpl
lret
std
addl
movsl
loop
jecxz
or
mov
sahf
mov
fildl
jbe
addr16
mov
mov
inc
insb
push
add
sub
cmp
mov
sub
inc
xor
fisubs
xchg
sbb
inc
mov
push
mov
negl
add
lret
cmpsb
push
or
arpl
push
andb
lods
dec
sub
xchg
cli
add
mov
mov
or
mov
xchg
je
sti
mov
insl
adc
cltd
mov
outsl
nop
pop
or
addr16
arpl
adc
loopne
pop
in
push
push
in
shlb
cmp
fsubl
insl
cli
sti
jp
or
mov
jmp
out
dec
mov
sub
shlb
rol
xchg
icebp
repz
and
mov
cwtl
fs
jg
fstpt
push
inc
or
lret
cpuid
frstpm(287
imul
lret
and
jp
mov
popf
pop
push
bound
jecxz
ret
out
roll
jmp
or
mov
dec
pop
xor
nop
inc
in
adc
ret
dec
dec
push
rol
xchg
dec
daa
stos
inc
lcall
cmpsb
leave
inc
out
test
push
nop
inc
clc
iret
or
sbb
mov
jg
mov
loopne
rep
sub
and
lea
inc
scas
pop
lods
mov
cli
ret
cmp
push
dec
mov
xor
mov
add
sub
pop
lcall
pop
pop
jae
js
rorl
pop
aaa
ljmp
pop
push
lods
mov
aam
sub
cwtl
std
fidivs
or
jns
into
pop
adc
sahf
cmp
enter
mov
in
aas
cltd
mov
out
adc
pushf
inc
cld
jnp
pop
fisttpll
adc
pop
xchg
jle
jo
das
push
fwait
xlat
or
fwait
mov
cmpsl
outsl
not
mov
lea
adcb
hlt
bound
xor
popa
mov
mov
out
push
pop
and
mov
jno
cs
hlt
test
filds
xor
mov
gs
mov
fdivr
jne
mov
std
rcrl
cmp
rclb
inc
cmp
cmp
xor
push
in
ds
leave
in
cld
in
leave
jge
ret
xchg
int3
cwtl
in
enter
andb
dec
test
lds
test
xchg
push
out
push
shlb
xchg
pop
inc
sbb
inc
dec
mov
xchg
inc
and
xchg
push
and
jo
pop
lods
std
push
loopne
fidivl
jae
xchg
mov
bound
inc
dec
xchg
das
mov
in
idivb
push
mov
adc
sub
cwtl
xchg
adc
inc
imul
sub
pop
or
push
sub
jno
jnp
lret
sbb
jmp
out
call
mull
pop
faddl
inc
loope
insb
loop
cld
ret
jne
xor
mov
jne
fistps
lods
arpl
xchg
js
and
sub
add
idivb
sub
rol
mov
cmpsl
mov
pop
xor
xchg
test
shll
stc
inc
fildll
xchg
jl
ja
cmp
inc
xchg
out
push
xor
das
jg
sbb
add
xorb
cmc
inc
js
dec
jge
pop
pop
pmaxub
mov
pop
add
sbb
dec
fstps
in
shl
jo
mov
and
or
xchg
dec
sub
or
push
fcoml
inc
out
push
ljmp
mov
sub
in
inc
sbb
insb
sbb
cld
call
mov
clc
pop
std
dec
and
adc
push
lea
push
scas
add
push
fsubl
and
fmull
inc
xchg
xorb
stc
and
mov
pop
out
int3
test
stos
mov
mov
sbb
add
jle
mov
fcos
mov
dec
mov
mov
ds
ss
xchg
fiadds
sahf
lahf
jge
stos
xchg
push
dec
sub
int3
dec
xor
adc
sbb
cmpsl
out
rorb
icebp
push
jle
test
inc
repz
fists
loope
in
cs
aaa
in
insl
inc
xchg
sbb
addl
and
repnz
insl
lea
icebp
imul
movsb
dec
adc
loopne
sti
data16
xor
mov
arpl
imul
mov
ss
ret
dec
or
cmp
fwait
xor
shr
mov
mov
sub
enter
pop
popf
lahf
fwait
js
xchg
push
adc
push
jbe
pop
and
test
fstpt
ret
fs
sub
mov
mov
pop
push
lods
cmp
pop
enter
addr16
adcb
cld
jae
mov
cli
push
pusha
lea
sbb
mov
lcall
xorb
jns
jp
xchg
and
pop
add
and
or
insl
mov
xchg
ret
sub
arpl
inc
into
aas
xlat
sbb
sti
les
test
mov
int
mov
xchg
dec
out
xchg
insb
adc
xor
mov
inc
popa
ja
jb
ret
nop
xor
pushf
gs
inc
xchg
add
dec
inc
bound
jp
cmp
dec
mov
dec
ficompl
std
mov
add
mov
aam
lcall
push
lea
loop
lds
push
dec
adc
inc
outsl
cmpsb
popf
loopne
add
out
fs
push
popf
xor
inc
cli
xchg
pushf
jle
scas
mov
in
adc
shll
ljmp
mov
fstps
std
jns
adc
mov
aas
into
xor
push
jns
push
sub
test
or
subb
scas
test
jo
push
jge
adc
gs
sub
std
add
js
jb
mov
test
loope
and
push
movsb
loopne
daa
les
xor
enter
stos
daa
inc
push
test
scas
es
cmp
sbb
cmp
or
movsl
cmpsb
or
fdivl
mov
imul
inc
and
js
push
jae
sbb
mov
sub
mov
in
pop
or
push
xor
insl
movsl
ds
divl
push
mov
push
flds
cs
movsl
fsts
jmp
mov
loope
das
lods
popa
jmp
dec
aas
aad
cltd
mov
imul
cmp
fcmovbe
insb
test
mov
dec
mov
push
jb
xchg
lret
inc
xchg
ljmp
pop
mov
mov
das
sbb
mov
xlat
jg
mov
or
jo
pmulhuw
push
not
pop
out
out
mov
fildll
xchg
jo
mov
mov
or
dec
xchg
mov
aam
cltd
mov
insb
rol
test
jbe
stc
jne
jo
push
cmpsl
jae
insl
ljmp
aaa
fistps
mov
mov
loopne
ret
shll
pop
push
adc
mov
lods
nop
push
cmp
test
jae
mov
lock
mov
adc
popa
mov
xor
mov
aas
mov
ss
bound
loope
mov
pop
stos
cltd
lahf
ds
std
lock
jge
int3
xchg
push
cmp
cld
or
lods
das
fmul
sub
mov
insl
pusha
test
testl
sub
pop
out
xor
nop
or
and
icebp
ja
mov
outsl
jecxz
in
fadd
cld
sub
in
mov
xchg
out
mov
inc
les
add
push
mov
mov
inc
pushf
shl
pop
xor
adc
sub
pop
lock
xor
sbbb
push
fildll
sarb
outsb
push
clc
scas
xlat
xlat
in
das
pusha
testb
adc
mov
fwait
add
ds
dec
mov
mov
or
stos
fs
out
hlt
or
fldcw
insl
sbb
sbb
sub
cmp
mov
insb
sbb
test
mov
js,pn
test
jae
hlt
popa
jp
icebp
sbb
fisttpl
mov
pushf
inc
out
pop
xchg
dec
shl
ficoms
js
pop
pop
gs
push
stc
mov
pop
movsl
in
testb
or
jmp
mov
xor
fwait
inc
mov
xor
fldenv
imul
add
push
ret
bound
jne
pop
or
shrl
nop
xor
or
xchg
mov
and
sbb
cmpsl
roll
add
dec
cmpsb
arpl
data16
nop
add
rorl
xor
nop
lods
mov
jl
out
mov
jp
dec
sbb
xor
push
cmp
adc
mov
pop
add
push
lds
sbb
ret
dec
shlb
xor
inc
movsb
xchg
mov
adc
jae
xchg
lock
cmp
into
addr16
shll
adc
int
pop
cmp
aad
or
out
mov
pushf
unpckhps
pop
and
sub
push
enter
xchg
mov
pop
pop
ficoml
imul
jb
lahf
cmp
mov
nop
test
push
xchg
addr16
sbb
fninit
fcom
jns
dec
call
into
mov
adc
in
ficompl
push
inc
clc
cmpsb
fcoms
or
add
push
or
jp
sub
cli
adc
adc
inc
rolb
bound
xchg
mov
adc
add
mov
movsl
outsl
inc
outsl
xor
sub
sub
mov
imul
cmp
xchg
and
fs
jo
and
inc
lods
lret
dec
notb
or
push
push
arpl
mov
out
mov
lods
and
lods
inc
jl
cmp
mov
ja
leave
jle
shll
int
xchg
push
testl
sbb
add
data16
sbb
inc
shrl
dec
or
bound
ror
lds
jnp
stos
enter
cmp
scas
dec
push
or
or
adc
imul
int
aaa
and
adc
add
cltd
add
jae
call
loop
movsl
or
fists
push
movsb
xlat
rclb
in
sub
inc
mov
mov
push
jl
lret
inc
and
outsl
mov
mov
fidivs
mov
dec
sbb
xor
dec
or
sbb
imul
pop
xor
push
in
or
ret
mov
pop
inc
mov
fwait
xchg
js
or
and
xor
mul
pop
sub
call
lea
jbe
lea
in
aam
jne
out
roll
adc
loopne
fdivrl
std
push
mov
push
and
jb
loope
maskmovq
testl
rol
jbe
loopne
ficompl
push
je
mov
adcw
popf
ret
lock
sbb
mov
cmp
popa
push
jno
push
imul
stos
aam
movsb
cmc
mov
mov
xor
pop
repz
jp
add
notl
cmp
imul
rcrl
mov
pusha
jns
pop
mov
lahf
imul
jno
ljmp
sub
movsb
lea
mov
imul
adc
inc
loop
stos
sbb
jge
dec
bound
and
test
scas
fs
enter
lods
scas
jne
into
iret
mov
push
cmc
cmp
mov
fnstsw
sub
push
mov
sbb
or
xor
loope
shrb
fdivr
daa
fisttps
fistpl
popf
inc
scas
pushf
movsb
in
cmp
push
repz
jb
sub
mov
aaa
ljmp
pop
jle
mov
mov
aad
mov
mov
lods
add
pop
adc
pop
mov
out
pop
lret
lahf
mov
out
pop
push
mov
inc
mov
int
push
lods
repnz
mov
les
sti
daa
or
sub
adc
std
test
adc
mov
push
out
push
fisttpl
out
movsb
jmp
test
shrl
or
mov
pop
xchg
mov
adc
mov
or
ret
lods
scas
bts
enter
sub
imul
pushf
mov
test
sbb
sbb
jns
mov
test
andl
cmc
out
insl
out
or
sub
hlt
iret
adc
popa
sbb
lods
cmp
pop
daa
mov
mov
xchg
or
cmp
pop
testl
jnp
loopne
mov
movsl
jbe
add
adc
push
xchg
cmpsl
mov
jg
sub
push
mov
mov
negb
arpl
xor
arpl
fidivrs
sbb
mov
outsb
loopne
mov
in
jecxz
xor
dec
pop
xor
popa
rorb
xor
testl
jb
iret
jmp
cs
pushf
rorl
mov
jno
pop
pop
cmp
and
mov
dec
sub
or
repz
ja
dec
xor
and
mov
inc
mov
cmp
les
data16
mov
sub
adc
jns
cltd
and
repnz
jne
cmc
dec
addr16
jecxz
push
push
xchg
pop
push
or
pop
push
rcrl
popa
lcall
sub
xchg
and
cmp
cmp
or
inc
xchg
iret
jb
mov
in
mov
xchg
pop
shrl
mov
lahf
enter
cmp
cmpsl
repnz
flds
inc
iret
cs
push
adcl
add
xchg
push
dec
inc
adc
dec
and
sahf
ja
or
xchg
lea
inc
inc
stos
fbld
mov
stos
sub
xor
sbb
pop
or
mov
in
aad
and
jp
push
pop
cmp
dec
ret
cltd
fisttpll
popl
xor
sbb
mov
mov
shrl
mulb
xor
lods
fnstcw
push
cwtl
sti
nop
pop
daa
popa
clc
and
loop
push
and
jl
ljmp
ljmp
loope
in
cmp
sti
shll
aam
call
dec
jecxz
gs
rol
imul
jg
aas
or
incl
in
lds
popf
add
stc
bound
or
js
rol
test
mov
outsl
clc
lahf
testb
mov
inc
cli
movb
icebp
cmp
mov
mov
jnp
addr16
push
push
out
and
mov
pop
jnp
das
leave
call
hlt
dec
movsl
nop
jne
sbb
ds
mov
push
cmp
ljmp
js
push
cmp
lcall
add
mov
pop
lret
pop
std
xor
test
test
dec
std
sbb
dec
nop
pushf
enter
inc
popa
stos
je
stos
std
lret
xlat
pop
mov
and
or
out
and
inc
or
int3
mov
dec
push
cmp
and
dec
xchg
or
pusha
lods
mov
or
out
in
std
cmp
lods
adc
sbb
sahf
notb
shufps
mov
mov
or
sbb
movsl
out
inc
push
shll
inc
add
ja
outsb
sbb
jno
cmc
xchg
fisttpll
bound
mul
push
cmp
jle
xor
mov
pop
das
imul
inc
push
mov
dec
stos
inc
out
jge
jecxz
cmc
mov
jnp
jnp
daa
lds
inc
test
mov
xor
test
aaa
loopne
into
xchg
mov
xchg
push
sbb
push
and
inc
rcrb
int3
inc
shlb
cmpsl
adc
xchg
loop
mov
imul
or
imul
cmc
mov
add
hlt
leave
sti
adc
dec
inc
pop
mov
hlt
sub
jbe
xor
fidivrs
es
fstpl
push
fbld
cmp
movsl
pop
bound
lahf
popa
jmp
inc
fistps
lods
push
lods
ret
pop
xchg
enter
xchg
xchg
loope
testl
call
aam
push
mov
in
cli
or
xor
loopne
or
xchg
rorb
xor
and
mov
or
or
test
mov
scas
pusha
std
lcall
jno
add
into
in
outsl
inc
or
mov
inc
stos
imul
mov
ret
cmp
adc
mov
mov
mov
adc
outsb
add
xor
or
push
scas
cwtl
mov
cwtl
mov
jge
pop
icebp
mov
gs
lret
mov
jmp
flds
adc
push
je
fisubs
not
jg
and
or
dec
push
stos
iret
mov
or
pop
out
int
and
mov
jmp
mov
pop
sbb
xchg
adc
hlt
dec
lret
pop
imulb
mov
mov
mov
sarb
pop
jp
fcompl
cmpsb
lcall
cwtl
sub
les
out
icebp
or
xchg
xchg
movsb
dec
mov
push
lods
imulb
lahf
mov
rcrb
cs
loopne
push
cltd
fisubrs
movsb
pop
outsl
jne
or
inc
inc
aas
cmc
inc
clc
lahf
cmp
sub
dec
inc
push
sbb
push
icebp
jecxz
mov
sub
jmp
jl
fimuls
dec
ss
mov
dec
pop
in
js
xchg
inc
mov
and
cltd
dec
nop/reserved
lods
in
xor
dec
shll
ja
pushf
emms
add
rol
add
add
push
mov
mov
jo
insb
cmp
inc
call
ds
mov
push
ja
inc
outsb
std
fst
and
cli
sub
push
andb
dec
insl
push
inc
insb
dec
lods
jl
and
fstp
fildl
aad
test
rcll
sbb
or
xchg
pop
sub
xor
xchg
add
loope
push
leave
pop
dec
inc
out
fs
clc
insb
mov
xor
xchg
sti
mov
push
loopne
pop
ds
js
nop
add
xchg
pop
pop
shrl
stos
mov
add
inc
jb
insl
jp
jge
jb
cmpsl
mov
jb
pop
xchg
stos
xlat
sahf
mov
and
jnp
and
in
lcall
movb
arpl
sub
sbb
sbb
jecxz
cmp
jle
mov
clc
cmp
sub
xor
ljmp
fistl
mov
fsubrl
mov
dec
jno
in
push
jmp
ret
adc
outsl
cwtl
and
push
push
cmc
inc
pushf
mov
popf
push
lahf
sbb
push
mov
insb
enter
mov
insl
mov
pop
inc
dec
pusha
mov
xorl
mov
into
int3
pop
fimull
or
adc
mov
sbb
xor
xchg
and
sbb
xchg
dec
inc
inc
jbe
andl
xor
xchg
adc
jbe
cmpsb
push
dec
pushf
mov
xchg
mov
mov
test
lea
push
dec
adc
push
in
test
icebp
cmpsb
enter
pop
dec
negb
movsb
mov
pop
loopne
insb
mov
mov
popf
inc
mov
add
loopne
pop
xchg
lahf
insl
or
jmp
fimull
cmp
dec
jmp
lods
movsb
test
push
orb
xchg
push
popl
xorb
inc
xor
jp
sub
xor
sub
jae
add
test
pop
ss
cmc
xor
out
sbb
inc
pusha
add
enter
mov
or
clc
xor
pusha
iret
ds
fwait
xor
pop
mov
xchg
inc
inc
fwait
cmp
xchg
sbb
out
lret
pop
lods
iret
out
lcall
jp
mov
mov
push
pop
stc
dec
xchg
dec
or
dec
or
popf
mov
dec
insl
adc
mov
dec
xor
sub
aas
sti
int
hlt
dec
test
lea
lret
and
pusha
sahf
mov
mov
gs
test
jb
add
popa
xchg
cltd
loope
sahf
mov
ret
in
and
dec
imul
or
stos
enter
sbb
ljmp
mov
addl
sub
cmp
cmp
adc
ret
adc
aad
add
and
out
lahf
xor
mov
cli
inc
add
hlt
loope
or
pop
js
xor
jne
stos
out
movsb
test
and
cmpsl
loope
into
stos
dec
mov
ljmp
pop
cmp
and
out
push
adc
ja
hlt
mov
js
movsl
ret
sbb
push
jp
cmp
add
and
dec
push
cmp
sarl
loope
push
sub
loopne
sbbb
push
dec
cld
out
hlt
xor
les
addr16
bound
sub
cwtl
xchg
inc
roll
jae
loope
push
jb
sbbb
inc
or
mov
sbb
pop
aam
and
xchg
and
cld
push
mov
sarb
mov
cmpsb
pop
mov
out
test
test
sub
lret
out
cmp
mov
dec
xchg
jp
iret
add
pop
cmc
sbb
insl
loope
dec
int3
xor
mov
test
test
das
mov
repz
ds
fldl
cmp
lea
stc
xor
dec
lahf
adc
add
xchg
xchg
repz
adc
sub
lahf
imul
rcrl
adc
or
jp
mov
sbb
cmp
and
jne
xor
xor
pop
xor
jae
push
jo
adc
sbb
in
imul
or
enter
outsl
sahf
ret
psubsb
mov
pop
in
lds
pop
mov
out
insl
loope
mov
mov
incb
out
push
mov
repnz
cs
arpl
int
push
mov
cmp
push
rcr
addr16
push
js
push
pop
add
add
adc
push
push
loop
sarl
mov
push
mov
pop
jle
pop
lcall
mov
nop
fisttpll
xorl
cltd
rclb
cmpsb
repz
popa
enter
xchg
stos
mov
jae
sub
int3
lret
mov
mov
jno
gs
sti
adc
mov
pop
xchg
loope
neg
inc
insb
mov
je
jo
pop
xchg
or
jecxz
enter
mov
or
clc
adc
outsl
dec
inc
lods
insl
pop
pop
mul
xlat
add
inc
mov
add
sbb
addb
pop
inc
jo
lods
flds
xor
mov
sbb
pop
sbb
adc
lahf
pop
mov
out
and
xchg
in
xor
rorb
push
jg
inc
les
sbb
dec
or
dec
mov
sahf
jo
comiss
dec
push
loopne
pusha
push
gs
jo
and
xor
fildl
mov
jo
lds
xchg
subb
aas
lahf
xor
sti
xchg
cs
pop
sbb
scas
push
inc
fldt
aam
rorl
push
gs
mov
adc
sub
push
fidivrs
rcrb
inc
rol
fs
lds
inc
dec
mov
out
aaa
js
dec
mov
int3
inc
jo
fdivl
lahf
fiadds
mov
mov
dec
and
pop
test
repnz
nop
js
call
int3
push
jge
jecxz
imul
iret
mov
xchg
sbb
inc
loopne
fidivl
pop
inc
nop
sarb
ds
je
cmpsb
jle
jno
or
jnp
push
mov
in
loopne
jmp
jl
ljmp
fimull
fbstp
push
pop
mov
add
add
jle
repnz
lret
xchg
xor
imul
mov
movsl
dec
movsl
je
and
mov
je
jp
icebp
movsl
enter
mov
lods
insl
mov
cmp
and
outsb
pop
inc
repz
enter
inc
mov
sti
fcomps
cwtl
and
sub
int
inc
out
push
ret
out
shr
dec
dec
mov
lahf
inc
mov
fcompl
out
sahf
xchg
mov
jmp
fcompl
jp
ljmp
test
cmp
sub
clc
jle
fsubl
dec
cmp
scas
inc
movsl
adc
sbb
stos
ret
xchg
sarl
es
movsl
fidivs
pop
jne
mov
fiaddl
ss
ja
orl
in
cmp
xchg
cmp
xor
testb
filds
leave
pop
jbe
test
test
cs
mov
daa
xchg
or
cmpsl
sub
lods
cmp
pavgw
or
pop
adc
xor
jmp
lods
into
pop
xchg
push
cmp
cmp
cmp
or
insb
add
ret
xchg
add
repz
jg
inc
dec
pop
xor
and
pusha
push
out
xchg
sub
nopl
push
roll
push
out
aaa
and
push
xchg
add
cmpsl
pop
in
psubsb
cli
popf
sti
dec
xor
in
clc
pop
push
push
xchg
xchg
lret
lods
in
fdivs
fdivrl
int3
andl
mov
dec
into
in
ljmp
imul
xchg
sbb
repz
pop
data16
ret
mov
stos
pusha
ja
add
or
mov
pop
in
mov
notl
or
das
icebp
jns
ja
inc
cmp
test
jle
ss
sub
cmp
mov
push
jnp
xchg
ljmp
sub
out
sbb
leave
test
xlat
push
mov
xchg
std
jno,pn
sub
mov
lahf
mov
mov
sarb
sbb
outsb
add
pop
pop
repnz
push
xlat
mov
mov
out
bound
cmp
and
pop
adc
mov
push
sbb
and
mov
addb
xchg
pop
push
sahf
into
sbb
or
in
dec
and
xlat
test
cmp
sub
inc
jno
loope
lods
push
test
jecxz
push
addr16
jb
push
enter
stos
xchg
scas
cli
jecxz
adc
fwait
js
xor
mov
mov
mov
cmp
mov
mov
sub
push
cmp
xchg
sub
pop
xchg
xlat
jo
sub
roll
pop
imul
jae
stos
jecxz
cmpsb
das
sub
dec
push
bound
addr16
mov
push
xlat
jl
int3
test
or
loope
je
out
outsl
jae
push
and
fsubrl
imul
out
adc
ret
or
test
sbb
inc
cltd
cmp
or
sbb
jge
lret
pusha
and
jecxz
xor
lods
sbb
jecxz
adc
in
xor
dec
scas
test
jl
pop
add
pop
lret
sbb
inc
popa
jne
shrb
sub
sbb
dec
adc
cmovo
mov
int3
adc
fistpll
cwtl
into
mov
push
mov
lods
pop
cmp
and
cmp
ljmp
out
xchg
imul
xor
jnp
cld
push
pop
adc
jg
loope
add
xchg
jbe
push
xor
inc
pop
jne
push
cmp
push
fistpl
stc
in
es
aaa
push
test
push
das
xor
add
or
ret
xor
sbb
dec
stos
or
daa
lret
mov
sbb
les
scas
xchg
and
addb
test
adc
test
pop
lods
add
test
es
inc
insb
cmp
mov
add
es
jge
sbb
inc
and
sub
enter
cmp
jl
divl
mov
xor
lahf
dec
inc
lea
lock
adc
imul
repz
sbb
push
mov
icebp
repnz
pop
std
jle
stos
pop
xorl
push
xchg
xchg
or
repnz
addr16
cmp
outsl
fsubs
in
pop
sbb
jno
add
jbe
pusha
mov
ret
lahf
mov
test
sub
cli
rorb
jl
and
popf
int
inc
adc
cwtl
cwtl
jo
es
and
stos
and
pcmpeqd
or
lods
xor
das
rclb
dec
je
push
fstpl
mov
std
iret
loopne
adc
mov
push
in
ffreep
inc
sub
inc
cmp
das
or
or
ja
or
jmp
xchg
int3
xlat
mov
lcall
fwait
scas
add
dec
sub
add
gs
mov
je
push
pop
les
xchg
jecxz
mov
in
xchg
mov
inc
hlt
rclb
adc
in
adc
cmp
movsb
stc
xor
mov
cmp
mov
in
cmc
xchg
dec
sbb
sbb
gs
lcall
loopne
push
or
imul
push
movsb
in
enter
jno
xor
data16
jb
in
pop
dec
push
faddl
cli
dec
push
pop
ss
imul
stc
cmp
in
addr16
inc
mov
les
in
out
mov
push
ficoml
arpl
pop
cltd
xor
arpl
inc
imul
and
int
xchg
repz
mov
fcmovbe
sbb
ret
dec
mov
jb
lret
lret
inc
sub
rclb
push
lcall
and
stos
sub
adc
dec
pop
ret
sti
cmpsb
add
sbb
xchg
mov
shr
dec
mov
xchg
jnp
and
sbb
sub
cmovne
mov
sbb
push
sub
dec
push
lret
sbb
outsl
insb
add
adc
rcr
dec
lret
fdivrp
jg
pop
out
dec
inc
andl
into
clc
ds
movl
mov
lods
xor
arpl
xor
repnz
cld
fcomps
push
bound
ljmp
hlt
das
subb
sbb
push
jbe
xchg
fisubrs
lods
jecxz
pop
xchg
rcl
cmp
shrd
dec
mov
push
mov
sub
outsl
xchg
mov
roll
sub
pop
xchg
loope
je
lcall
in
pusha
insl
aad
mov
cmp
cld
sbb
push
mov
jl,pn
jl
mov
mov
inc
lea
sahf
dec
loope
faddp
rcr
ret
outsb
cmpsl
mov
sub
fstpl
mov
inc
push
mov
add
push
mov
push
xor
pop
gs
jo
pusha
mov
jmp
hlt
and
es
cmp
sbb
sub
jno
pop
nop
or
movl
add
hlt
movsl
adcb
push
xchg
sub
or
dec
pop
xor
sbb
ja
push
mov
add
mov
pop
pop
jg
rclb
aad
xor
and
adc
xor
lds
test
xorb
mov
pushf
les
clc
out
ss
xor
orb
leave
stos
mov
dec
fsubs
xor
sub
inc
push
jae
stos
out
mov
clc
pop
test
xchg
shrb
push
enter
push
imul
lds
jae
dec
sub
mov
or
mov
mov
and
shr
cmp
cmpsb
fcmovb
movsb
add
xchg
negl
inc
je
fildl
lds
pop
mov
jp
dec
mov
xchg
subb
pop
jle
add
xchg
loope
sti
pusha
mov
popf
push
daa
test
cmc
imul
popa
cmp
jb
das
add
sahf
repnz
add
nop
enter
cmp
mov
sub
mov
cmp
andb
shll
js
outsl
dec
inc
add
es
xor
scas
inc
cmp
adcl
jg
push
arpl
jle
fldl
out
lcall
mov
es
cmp
rcrb
ret
push
mov
insl
icebp
adc
cmpl
mov
iret
ret
add
fwait
xor
test
jne,pn
sub
lea
xchg
iret
adc
into
idiv
and
jno
jnp
push
aam
cmp
rcll
push
ds
add
mull
push
in
jp
cld
lret
cmp
xchg
lcall
fsub
ja
int3
add
imul
out
xor
jb
test
ror
and
mov
popa
pop
pop
popf
lea
imul
imul
cmpsl
fidivrs
pop
test
pop
mov
pop
add
out
xrelease
dec
pop
jno
lds
xchg
outsb
out
arpl
xor
popa
pop
mov
loop
add
movsb
mov
mov
sti
xchg
push
sahf
movsl
and
sti
insl
insl
sub
pop
insb
add
ljmp
inc
inc
inc
int3
shrb
push
ds
sub
dec
fwait
xor
cmp
mov
sbbb
rcl
pushf
or
and
xorl
icebp
push
push
loopne
sub
jmp
cli
ret
dec
inc
mov
push
loop
pop
adc
aad
stos
ret
adc
sbb
popf
mov
inc
sub
lock
pop
push
push
jbe
cli
add
loope
aas
cli
jns
dec
insb
cmp
data16
dec
sub
imul
sbb
stos
push
and
and
mov
repz
filds
push
sub
adc
nop
xchg
iret
clc
scas
mov
sbb
mov
pop
cli
xlat
and
add
imul
dec
mov
fs
sti
loop
jae
xchg
inc
inc
cwtl
mov
fidivl
mov
ret
pop
in
popa
fcoml
shrl
xor
dec
outsb
shrl
lret
dec
fmull
cwtl
enter
imul
xor
mov
je
loope
sti
or
gs
jecxz
mov
cmp
sbb
cmc
roll
js
fs
add
inc
jge
xor
sbb
cmp
mov
sbb
push
outsb
fsubrs
fmul
jo
sub
fmull
rclb
add
sbb
daa
movsl
cmpsb
scas
jge
xchg
jbe
or
push
aam
sahf
out
gs
pop
jb
add
mov
jae
dec
insb
cli
xorb
sub
insl
shll
cmp
pop
and
sbb
adc
dec
or
cli
in
sbb
xchg
inc
movsl
imul
fwait
cmpsl
xchg
inc
xor
cmpsl
mov
dec
addb
xchg
inc
push
gs
cmp
movsb
mov
loop
adc
cltd
lret
adc
cmpsb
or
cli
sub
rol
adcb
xor
into
pushf
fwait
inc
mov
imul
mov
data16
xor
and
dec
out
xor
mov
fs
mov
jl
jle
jo
xchg
jecxz
mov
jno
inc
aaa
popf
divl
out
aam
jb
lea
mov
and
js
scas
mov
mov
push
movsl
mov
xchg
sbb
popf
das
pop
fdivl
out
xor
push
fidivl
scas
inc
popa
xchg
mov
add
mov
pop
bound
cmp
inc
imul
bound
int
inc
and
pop
int
xchg
in
pop
data16
jl
sbb
push
mov
scas
jno
sub
shll
aam
fldl
imul
ljmp
pop
or
lcall
pop
sub
or
scas
stc
sbbl
test
pop
gs
dec
push
loope
nopl
inc
iret
ljmp
and
lock
xchg
mov
or
aas
dec
mov
adc
mov
pop
rcr
lods
mov
dec
xorb
dec
and
imul
mov
add
cmp
add
sub
repnz
dec
cwtl
mov
cmpsl
into
lret
shl
jo
cli
inc
or
add
jb
aaa
stos
lcall
xor
int
sahf
pushf
icebp
jne
mov
leave
adc
arpl
adc
arpl
insb
data16
movsl
mov
stos
inc
push
inc
pop
insl
mov
dec
daa
cmp
mov
inc
insl
mov
sbb
test
inc
xchg
xchg
dec
fwait
cmpsl
mov
scas
daa
mov
call
cli
mov
xchg
mov
stc
lret
das
sbb
push
inc
pop
repnz
jp
hlt
xor
adc
xchg
js
fcomi
shrb
test
lds
punpckldq
scas
xor
cwtl
cmpb
sbb
or
insl
add
in
fildll
or
js
dec
and
mov
xlat
imul
ret
mov
lea
xchg
andb
jne
ficompl
nop
pop
movsb
adc
push
mov
sub
inc
popf
lock
cmp
adc
fdivrl
cwtl
clc
add
mov
js
and
out
lret
xor
mov
es
lahf
sub
insl
repz
push
test
sub
push
jnp
popf
call
dec
jmp
jnp
xchg
push
data16
sarl
mov
in
sub
outsb
push
mov
xor
pushf
popf
jge
and
dec
push
lret
dec
test
inc
jo
lods
clc
and
dec
add
nop
sbb
push
fwait
lcall
std
clc
dec
mov
fdivrs
xchg
push
pop
movl
mov
punpckhbw
jg
jnp
xor
jae
xchg
mov
xor
or
fiaddl
call
mov
mov
je
or
inc
ret
fsubl
or
fstl
test
sub
in
jle
adc
fnsave
test
cmp
mov
into
inc
dec
jmp
inc
cld
mov
sti
xor
scas
ljmp
out
int3
stos
out
jb
ja
in
jae
rolb
int
adc
adc
insb
rcll
lret
pop
cwtl
xchg
xchg
test
stc
push
fldt
push
cmp
sub
data16
out
cmc
stos
and
xchg
cmp
fisubrl
cmp
xchg
filds
out
sub
sub
xor
test
sub
push
stos
cmp
outsl
cmpsl
jg
lods
mov
inc
pop
xchg
test
fidivl
daa
sbb
cmp
jbe
add
xor
mov
clc
incl
jb
xor
pop
pop
bound
js
mov
dec
pop
pop
test
jle
mov
arpl
jno
movsb
inc
mov
dec
adc
out
adc
cmpsb
mov
mov
adc
lods
xchg
jne
sbb
adc
popw
js
sub
adc
in
aad
mov
xor
in
mov
sbb
cmp
dec
movsl
cmp
inc
push
and
cmp
pop
scas
xchg
iret
popa
stc
ljmp
and
rcrl
add
inc
jno
andl
dec
xchg
nop
test
push
mov
out
fs
push
add
arpl
xlat
shll
insb
cli
push
push
adc
icebp
js
dec
dec
pop
ret
pop
sub
iret
pop
and
pop
movsb
repnz
adcl
and
adc
subl
lcall
in
adc
lock
cmp
in
andl
lcall
scas
fadd
inc
xchg
lds
push
call
dec
pushf
int3
mov
orb
ja
dec
scas
iret
outsb
mov
push
jg
mov
aaa
pop
cmp
ret
jmp
mov
mov
mov
push
rolb
add
jge
pop
sbb
out
in
mov
int3
mov
test
insl
jl
nop
add
inc
pop
dec
movb
test
int
inc
mov
adc
jge
add
rcrb
pop
pop
movsl
or
cld
mov
inc
pop
das
loopne
push
xchg
add
cmp
scas
out
cs
adc
jo
adc
into
xchg
xchg
or
sbb
lret
into
sub
loope
add
mov
push
sub
add
adc
add
shlb
negl
or
jmp
sub
or
inc
in
movsl
sub
lahf
sub
fcomp
int
or
add
cmp
inc
stc
shlb
out
imul
inc
int3
orb
adc
shll
mov
xorl
icebp
push
push
push
mov
dec
sbb
movsb
sbb
movsb
insb
je
std
inc
repnz
mov
mov
add
push
add
sbb
push
push
loopne
ficomps
push
fadds
lcall
push
lret
fmul
jg
outsl
out
lea
in
inc
dec
cmpsb
push
inc
nop
mov
in
gs
mov
mov
gs
pop
cvtdq2ps
sbb
aaa
xor
push
mov
mov
xchg
sbb
repnz
pop
sub
add
dec
inc
push
cmp
xor
jnp
clc
pop
or
push
popf
loopne
je
das
daa
rolb
test
pusha
mov
dec
mov
add
dec
cld
ret
pop
xlat
xchg
mov
push
imul
xlat
adc
sti
fwait
mov
stos
adc
dec
jno
mov
xchg
outsl
dec
nop
dec
clc
into
mov
mov
fcomps
wbinvd
mov
cwtl
pushf
add
push
stos
mov
jno
pop
jg
test
out
stos
mov
push
sub
lahf
mov
lret
jbe
mov
dec
jle
int3
sbb
movsb
xchg
fwait
push
out
add
out
mov
jg
std
jae
lds
push
pushf
imul
push
fimuls
push
and
add
mov
in
sub
push
xchg
test
popa
stos
movsl
mov
les
sub
xchg
jp
cmpb
dec
mov
cwtl
xchg
gs
sahf
sub
lock
jb
push
or
js
andb
movsb
out
adc
aaa
fcmovne
mull
fistpll
test
jge
aam
xchg
clc
jmp
mov
rorb
jne
sbb
iret
fiadds
mov
shlb
and
mov
aas
add
lcall
and
mov
push
leave
loope
mov
lods
mov
test
mov
jne
jb
or
xor
loopne
pusha
addr16
out
in
mov
ret
xchg
test
push
addr16
jge
dec
les
inc
mov
rorl
pop
xchg
imul
push
imul
jle
mov
cli
dec
sub
mov
sbb
int
or
icebp
inc
or
and
mov
in
xchg
scas
repz
mov
shld
push
inc
lret
mov
or
mov
sub
lods
mov
push
jns
fdivrs
mov
call
ljmp
jmp
pop
inc
loop
or
je
push
test
arpl
dec
or
out
shl
xchg
outsb
icebp
xchg
xchg
inc
lcall
sbbb
int
call
imul
int
push
lahf
push
inc
sub
and
out
frstor
outsb
ljmp
inc
and
pop
sarl
jno
sbbl
rcrl
push
mov
jp
dec
or
pop
gs
pushf
add
push
movsl
dec
pop
jecxz
jnp
mov
cmpsl
push
mov
mov
frstpm(287
out
loopne
fstps
testl
xor
add
or
inc
mov
movsl
in
xchg
xchg
shl
xchg
push
mov
push
fbstp
movsl
push
cmp
cltd
mov
dec
push
aas
test
jmp
arpl
cmpsb
lock
push
rol
and
or
jmp
cltd
ss
push
and
jle
in
lret
jns
xor
xchg
mov
pop
test
inc
mov
test
jnp
xchg
addl
add
jle
scas
sbb
std
loopne
mov
pop
mov
lea
sahf
call
push
sbb
or
fsubrs
or
sbb
push
mov
xchg
mov
movd
mov
mov
ret
outsl
xor
fwait
addr16
mov
nop
cld
fnstcw
and
ret
pop
arpl
cmpsl
dec
pusha
sti
push
cmp
cmp
cmpsb
pop
jo
inc
cwtl
nop
icebp
rcrb
and
jae
es
mov
cmp
xchg
jge
sahf
xchg
mov
test
lcall
cwtl
adc
or
repnz
adc
sahf
les
adc
jne
sbb
xlat
inc
cmpsl
inc
cmp
add
test
add
sti
adc
fbld
lret
sti
push
shlb
dec
push
jae
pop
mov
arpl
in
dec
stc
pop
imul
or
inc
dec
mov
fistl
and
mov
pop
repz
cmc
sub
pop
aas
subl
test
insb
mov
or
pop
int3
dec
aas
jl
or
in
jl
inc
cmp
and
es
mov
xchg
jns
shr
jne
inc
sbb
std
cs
mov
iret
xchg
jnp
adc
call
dec
xor
es
adc
incb
sarl
fst
mov
idiv
mov
dec
int
aaa
ja
sub
and
cmpsl
popl
mov
cltd
sbb
dec
pop
xor
pop
mov
push
arpl
insb
fiaddl
inc
adcl
adc
mov
fldl
mov
loopne
push
pop
pop
and
sub
or
mov
cmp
cmp
jo
jb
jo
jmp
sbb
ljmp
xchg
out
cmp
sbb
pop
add
sar
mov
cmp
pusha
adc
mov
stos
aas
bound
xor
xor
mov
iret
push
cmpsl
stos
and
xor
fadds
aam
push
or
pop
bound
xlat
sbb
ds
test
icebp
jge
arpl
or
icebp
pop
or
jne
in
adc
ljmp
fbld
push
jle
dec
inc
ja
or
and
sbb
and
shll
xor
in
ret
xor
fcmovb
push
sub
adc
sub
hlt
pop
or
cmp
inc
push
decl
in
loope
pop
xchg
cmpsl
ret
cmc
mov
sbb
cmc
mov
scas
push
in
cltd
cmpsb
mov
mov
xor
out
cmpsb
fisubl
sbb
outsl
jno
adc
out
dec
push
test
out
sbb
jp
daa
test
lea
aaa
cmpsl
fistpll
movsb
subb
add
push
add
stos
push
xchg
xchg
mov
test
and
pop
into
lods
into
fdivrl
pop
or
sbb
loope
pop
xchg
scas
loopne
test
addl
xlat
scas
insb
fwait
or
aas
mov
or
mov
jmp
mov
mov
imul
and
sub
adc
push
mov
aad
mov
in
add
test
cmp
shrb
mov
out
sub
mov
cli
inc
mov
popf
add
jl
push
push
adc
xchg
movsb
pushw
stc
out
push
lods
jle
xchg
pop
dec
repz
loop
je
push
pop
cmp
negb
mov
pop
addl
int
cmp
adc
and
mov
push
jg
xor
push
mov
inc
test
aad
cmp
mull
push
shl
rcrb
jl
bound
cmpsl
or
inc
shlb
pop
stos
out
mov
jp
dec
xlat
gs
nop
mov
lods
sbb
jae
xor
pop
pop
sbb
cmp
lcallw
lcall
rcll
sub
orl
sub
les
mov
into
mov
jnp
xor
inc
loope
fadds
mov
jp
jno
data16
fstpt
xor
subl
test
rclb
inc
rcll
xchg
push
pop
hlt
movsb
popf
jns
icebp
dec
lods
pop
stc
ja
cltd
mov
in
sbb
pop
test
push
in
loop
int3
mov
aas
dec
out
mov
adc
mov
xsha1
cmpsb
iret
add
ret
inc
jae
cltd
loope
mov
mov
aam
in
data16
or
lods
xchg
cltd
and
adcb
ror
jns
in
cmpsb
js
adc
cmp
lods
mov
add
test
out
mov
cmpsb
push
sub
cld
jbe
popf
mov
cli
inc
add
sti
mov
fs
int
jge
hlt
xchg
xchg
lds
roll
mov
push
mov
or
sti
xor
ret
cwtl
push
scas
stos
xor
sti
pushf
xchg
mov
xorl
push
add
xor
xchg
jb
pusha
xchg
and
lods
mov
cmpsl
jno
hlt
int
cld
mov
aam
cmp
outsb
mov
sbb
cmpl
mov
imul
jae
sarb
shrl
cmpsl
xchg
cltd
ds
cmp
cmp
aam
bnd
out
jmp
test
lahf
add
pop
push
and
jnp
orl
stos
pushf
mov
push
or
hlt
cli
sub
sbb
push
or
popf
stos
mov
movsb
sub
jno
lahf
cmp
mov
pop
out
jae
std
in
xor
jno
pop
lret
aam
fcoml
inc
xchg
pop
insb
ret
data16
std
push
jnp
mov
enter
shlb
pop
and
or
fcomi
shll
lock
fucom
or
test
sub
xchg
popf
fwait
in
jmp
cltd
mov
and
or
cmpsb
mov
mov
and
or
adcb
sarl
sbb
cmp
fwait
mov
mov
push
shll
mov
mov
test
iret
adc
aas
cmp
or
cmp
inc
sbb
sub
mul
jo
jne
scas
xor
pop
ja
xchg
neg
or
xchg
in
dec
jecxz
pop
imul
jecxz
out
es
mov
add
repz
data16
or
cli
out
loopne
and
mov
shrb
pop
jnp
xchg
loope
outsb
lahf
daa
mov
fmulp
add
push
ret
inc
dec
stos
hlt
jno
rorl
cmc
cmp
add
fyl2x
xchg
jge
cmc
lret
adc
mulb
cmp
fbld
xchg
cmc
sub
mov
xor
sarl
pushf
scas
jns
loope
xchg
adc
adc
sbb
xchg
inc
cmp
shll
cli
xor
or
xchg
into
xchg
sti
add
scas
adc
inc
ret
push
dec
mov
add
sbb
inc
bnd
je
inc
adc
adcb
mov
dec
mov
sbb
jno
jbe
push
dec
in
or
add
data16
sub
mov
dec
adc
add
mov
xchg
sahf
jge
xchg
andl
pop
pop
jecxz
sbbl
ror
jl
xchg
xor
inc
lahf
imul
lock
sbb
mov
xchg
pop
xor
inc
movsb
inc
jmp
icebp
push
incl
nop
xlat
fists
pop
inc
popf
and
mov
dec
enter
xchg
les
push
jae
jmp
inc
ja
aam
jmp
pusha
mov
dec
xlat
movsb
xchg
int3
in
repz
nop
add
enter
sbb
push
int
cmp
mov
jg
jecxz
rcrb
aas
fs
adc
push
sbb
call
js
sub
lea
hlt
add
shlb
inc
xchg
dec
mulps
mov
lahf
jno
xor
xor
jae
adc
xlat
xchg
fisttpll
jg
out
push
mov
jg
scas
jb
fwait
mov
in
mov
or
inc
call
inc
mov
shrb
xchg
dec
loope
lods
test
inc
jae
add
cmpsl
add
adcl
jno
mov
xor
fisubs
dec
xchg
cmp
push
cmp
add
dec
cmp
inc
leave
frstor
cld
mov
es
enter
push
and
add
jp
out
jmp
jp
call
mov
out
mov
stos
pop
mov
add
mov
mov
sub
add
jns
lods
xor
push
cli
inc
cld
jg
pushf
mov
sti
movsl
dec
sar
jge
push
clc
pop
icebp
mov
mov
or
push
jo
add
gs
jbe
xchg
xchg
lods
rolb
daa
int3
xchg
bound
loopne
roll
xor
jb
mov
and
loope
insl
sbb
popa
xor
inc
pop
sub
xchg
adc
sub
jns
adc
icebp
cmp
cmp
mov
mov
mov
test
jg
outsb
rcll
pop
or
movsl
inc
sbb
lods
or
push
mov
adc
pushf
mov
pop
cmpsb
push
stos
cmp
xchg
jle
mov
lds
mov
pop
ljmp
mov
xor
in
sbb
add
enter
mov
cmpb
and
mov
add
mov
inc
daa
push
and
add
sbbb
push
pop
adcb
test
xor
icebp
sbb
xchg
fmuls
inc
xor
popf
push
or
inc
mov
sar
or
or
inc
in
cmp
test
push
loopne
ss
mov
push
xor
hlt
pop
jg
pop
xrelease
jb
or
into
lcall
dec
outsb
sbb
das
shl
int3
fdivs
imul
xor
test
push
and
pop
mov
and
xor
imul
lock
sub
popa
and
insb
and
xchg
mov
icebp
int3
sub
sbb
cli
mov
aam
lock
cmp
inc
adc
mov
sbb
sbb
mov
xchg
jae
inc
scas
shll
mov
aad
lea
into
orb
and
jno
fisttpl
aaa
inc
add
sub
mov
sub
add
dec
test
pop
push
xchg
and
inc
dec
xchg
mov
mov
xchg
push
scas
lret
ss
lahf
xlat
xchg
mov
adc
outsb
adc
xor
lds
fwait
jle
movsl
in
les
cmp
xchg
inc
ror
gs
dec
or
inc
or
clc
dec
xorl
push
sbb
int
push
out
test
pop
mov
mov
sub
mov
lea
xor
mov
dec
sub
dec
pop
sub
cmp
jbe
mov
cli
jbe
mov
inc
sbb
xor
xchg
in
and
sbb
sbb
aad
dec
xchg
fnstenv
jbe
out
movsb
fisttpl
lcall
loope
data16
xchg
and
add
adc
pushf
xchg
in
dec
mov
sub
imul
stc
cmp
in
push
sub
inc
xor
or
push
sub
shld
rclb
push
adc
cmp
sbb
mov
imul
lret
movsl
xchg
rolb
xlat
adc
jmp
xor
mov
sbb
jnp
sbb
hlt
dec
pop
sti
jns
jb
fstps
sub
xchg
pop
xor
repz
xchg
lret
negb
sbb
fs
aas
sub
xor
inc
cs
popa
das
xchg
cld
jmp
mov
or
ja
cmp
ffreep
sahf
mov
js
push
push
xchg
loope
cmpsb
mov
pop
test
in
rcll
arpl
add
out
sti
sub
and
movsb
mov
lcall
or
call
mov
jmp
sub
adc
negb
pop
hlt
lock
xchg
mov
cmp
xor
mov
xchg
lods
call
adc
mov
int3
mov
jne
xchg
pop
add
in
cmp
adc
lds
stc
movsb
mov
pop
cmp
push
ret
xor
xor
hlt
cmc
adc
pushl
movsb
add
dec
mov
xchg
and
sarl
xor
and
inc
lret
or
mov
xchg
xlat
jb
outsl
add
gs
aas
sbb
jnp
sbb
mov
arpl
sarb
pop
and
call
push
fcmovnu
js
into
ficompl
fs
dec
test
push
pop
push
ljmp
outsb
out
decb
xor
mov
out
sbb
stos
rcrl
iret
jno
xchg
mov
cmpl
mov
lret
into
push
xor
fcmovnb
pop
or
movsb
mov
inc
mov
cmp
mov
lret
mov
outsb
fisubl
enter
mov
pushf
pop
jmp
addr16
sub
xchg
mov
dec
sti
dec
and
cmp
pop
cmp
inc
not
out
hlt
mov
jmp
jnp
adc
add
jo
push
ljmp
stos
sub
pop
mov
inc
cmp
lock
lahf
test
sub
pop
mov
fnstsw
pop
and
mov
in
mov
loop
sub
or
and
dec
mov
jl
xchg
stos
and
out
lret
into
inc
fsub
mov
ja
lret
fidivrl
mov
dec
jg
mov
ljmp
insb
repnz
xchg
sub
in
sbb
out
lret
cwtl
cwtl
cmpsb
dec
mov
nop
pop
testl
sub
ds
lds
cwtd
jl
sbb
xchg
lret
cmp
dec
add
cmp
ja
js
jb
arpl
aam
test
jl
outsl
fists
lahf
test
and
push
xchg
cmp
push
inc
sar
leave
and
jb
ds
mov
jge
mov
mov
inc
iret
cs
cli
mov
lahf
lds
add
and
loopne
jp
divb
test
pop
movsl
jle
push
mov
adc
call
xor
incl
adc
xchg
sbb
into
adc
inc
int3
stc
or
cmp
fistpl
jo
rorb
push
call
lahf
inc
std
adc
mov
dec
jp
iret
push
movsb
jno
dec
adc
mov
repnz
mull
mov
mov
xor
iret
scas
push
lret
test
fs
cltd
xchg
call
or
or
adc
ljmp
ret
test
or
pop
adc
cmp
adc
test
stos
inc
leave
pop
addb
inc
nop
fdivr
in
sbb
cwtl
jbe
jecxz
cld
xor
jge
add
mov
ret
push
lods
sub
pop
jecxz
ds
sbb
xchg
lcall
xor
sub
test
adc
enter
std
test
test
sub
shrl
push
inc
mov
repnz
push
movsb
add
xchg
cmp
and
mov
and
stos
pop
jecxz
jno
add
fwait
aaa
js
imul
sub
mov
rclb
push
push
mull
sbb
xor
inc
add
lods
inc
cmp
mov
dec
sbbl
test
dec
cmpsl
xchg
sbb
rorb
xor
enter
mov
fwait
repz
xor
xchg
cmp
stc
loop
std
das
aam
rcll
or
insl
dec
in
mov
or
les
push
addb
mov
rclb
cmc
shr
aas
push
mov
add
shr
out
cli
xor
fsubp
in
dec
sti
sub
mov
push
cmp
and
fiaddl
xorb
aam
xchg
adc
cmp
outsb
call
sub
paddq
xlat
imul
jno
pop
imul
cmc
mov
test
adc
mov
in
lods
ret
adc
dec
push
jl
inc
idivl
in
ljmp
add
and
inc
add
add
mov
and
jo
iret
fsubrs
dec
xor
test
aas
filds
lea
and
mov
faddl
sbb
scas
push
push
jmp
jnp
clc
adc
orb
mov
sub
xor
ud0
adc
sbb
xchg
iret
jnp
xchg
ds
test
rcll
mov
iret
stos
pop
mov
nop
shrb
cmp
push
xlat
cmpsl
fisttps
ret
inc
xchg
repnz
or
mov
rolb
cli
popa
enter
sub
xor
arpl
movsl
imul
shlb
outsl
lret
stc
icebp
xor
aas
pop
out
cli
mov
add
sbb
mov
jns
test
inc
cmp
rcrb
in
in
xchg
jne
and
push
xchg
xchg
mov
mov
pop
lcall
and
cmpsb
negb
sub
leave
adc
fidivs
jnp
jl
negl
mov
mov
cli
enter
fcomp
mov
push
lret
leave
and
loopne
jae
add
add
sarb
or
rep
adc
mov
lea
jmp
jo
cmp
jmp
jb
sbb
sbb
aaa
imul
pop
or
cmpsl
jecxz
sti
into
sbb
pop
mov
xlat
dec
and
xchg
mov
and
out
lret
or
in
jne
addr16
add
in
and
pushf
xor
adc
push
and
into
pop
lahf
xor
mov
cs
hlt
repz
sbb
cmc
inc
fwait
int
pop
mov
xor
inc
mov
fwait
pop
xchg
fbstp
mov
jae
xor
iret
xchg
sub
aas
or
xor
jo
jb
or
xor
mov
push
push
test
lahf
hlt
lods
fwait
add
inc
insl
pop
mov
pop
adc
mov
scas
add
cmpb
jmp
add
mov
inc
xor
inc
stos
imulb
lock
rorb
repnz
clc
sub
call
repnz
mov
fcmovne
lods
lds
cmpsl
cmp
dec
inc
mov
popa
sbb
jmp
jp
add
mov
mov
sub
and
inc
test
cmp
cs
adc
mov
aam
xchg
push
mov
cmp
pushf
aas
out
inc
cmp
dec
mov
or
insl
xchg
comiss
sbb
das
hlt
mov
loope
repnz
popa
xchg
pop
jno
les
xlat
clc
mov
pop
add
sbbl
mov
push
xchg
adc
add
inc
jno
std
or
mov
leave
sub
xor
lock
pushf
jne
aad
mov
and
xor
fwait
sarb
cmpb
ss
jmp
push
dec
movsb
and
shrl
dec
in
pop
fnsave
xor
fmul
jo
int
inc
movsl
add
adc
xchg
shl
sbb
pop
icebp
loop
xor
loop
stc
sbb
pop
sub
sbb
notb
jne
push
jmp
pop
add
sti
dec
scas
pop
fsubl
cwtl
mov
mov
stc
addr16
pop
mov
or
dec
inc
mov
dec
fnstcw
std
dec
jo
aaa
and
shrl
stos
push
xchg
in
outsb
mov
inc
fstl
fimull
jg
stos
out
pop
pushf
mov
push
testb
ljmp
mov
mov
repz
aam
and
sub
gs
data16
sbb
rcll
or
lcall
in
add
add
shl
shrb
lea
fisubrl
add
dec
pop
stc
in
sbb
sarb
aad
loop
std
loopne
pop
dec
jp
sub
inc
movsb
dec
dec
popa
repnz
push
lods
pop
dec
sbb
push
int3
push
call
pop
ljmp
fnstcw
js
inc
imul
shrl
xor
fldt
add
andb
ljmp
mov
ret
loope
icebp
xor
movaps
fnsave
adc
mov
dec
mov
dec
hlt
insw
inc
xor
cli
loope
sbb
adc
enter
lahf
mov
jl
jae
or
and
jno
fcompl
mov
or
xor
fidivs
pop
popf
loopne
push
mov
push
sti
mov
xchg
test
adc
iret
jmp
pop
dec
and
lock
mov
xchg
cmp
ss
or
lahf
push
sbbb
sub
mov
dec
pop
movsb
mov
sub
sbb
push
adc
jno
inc
cmp
mov
aas
fwait
fwait
push
cmp
mov
daa
mov
fldl
mov
dec
cmpl
aas
push
xor
mov
sbb
call
dec
jnp
and
cmp
pop
add
inc
mov
in
cltd
cmp
je
add
mov
lret
lcall
sub
or
cmc
mov
aaa
pop
loope
fidivl
pop
xor
sub
sub
and
fwait
test
fidivl
sahf
aaa
jg
ja
pusha
mov
mov
fiaddl
add
mov
loopne
into
fisubs
idivl
cmp
test
addr16
jnp
jo
push
in
mov
sahf
bound
aaa
sub
pop
xor
xchg
sub
jo
in
in
cwtl
inc
dec
cmpsb
imul
iret
aas
ja,pt
mov
arpl
pop
sti
jp
mov
lds
imul
outsb
mov
or
push
ja
pop
adc
test
adc
pop
andb
ret
and
std
push
mov
push
out
xchg
lcall
sbb
test
sub
cmp
xor
adc
dec
sahf
adc
adc
mov
push
add
insb
push
mov
scas
pop
sub
fwait
adc
in
rcrl
xor
je
pop
push
jnp
fistpl
add
out
fmull
or
push
test
sbb
cmp
aad
jbe
pop
movsl
fsubrl
xchg
lahf
cwtl
sub
aam
scas
inc
pop
jbe
mov
sub
sub
push
or
mov
add
aaa
inc
leave
repnz
pop
jg
outsb
push
dec
mov
pop
test
daa
jl
jp
sbb
scas
jp
fcmovne
mov
enter
imul
jns
adcb
movaps
jo
movsb
adc
sub
jno
loop
mov
and
insl
pushl
sub
jnp
popf
sub
xchg
dec
push
enter
cmp
push
add
push
enter
shll
xchg
int3
dec
inc
movsb
jge
fdivr
push
out
sbb
lcall
adc
mov
add
xor
cmp
mov
push
enter
gs
ret
insl
cmc
lcall
mov
adc
xchg
xchg
sbb
cmp
inc
hlt
mov
add
fcoms
rol
out
sbb
sahf
lret
stos
call
xchg
and
enter
push
xor
xlat
sahf
cmpsb
cmp
xlat
cmp
hlt
mov
cmc
dec
scas
int
dec
dec
je
jle
jle
mov
push
sbb
lcall
mov
int3
and
mov
ds
add
pop
push
test
sub
std
pop
test
mov
adc
fldl
jle
inc
sahf
mov
nop
je
pop
and
jnp
bound
mov
push
add
inc
dec
push
insl
add
push
lds
mov
inc
cli
test
jo
jmp
insb
mov
movsl
sub
push
xchg
loop
cltd
nopl
out
je
inc
or
jp
ljmp
push
dec
das
lds
jns
pop
enter
aam
cmpsb
lcall
cmp
xchg
cmp
cmp
push
loope
ja
sbb
pop
dec
inc
fisubrs
pushf
hlt
sbb
das
fisttps
and
mov
out
imul
test
lret
inc
cmp
pop
fidivl
je
xor
outsl
test
fstp
aaa
jns
cmpsl
aas
push
add
orb
shr
pop
push
repnz
sub
loop
test
push
icebp
adc
mov
mov
mov
push
sub
push
push
xchg
arpl
cli
xchg
mov
movsb
xor
push
mov
add
push
push
mov
jge
dec
cmp
sahf
pop
mov
pop
lods
inc
sub
mov
or
aaa
in
lds
xlat
xchg
mov
out
sbb
fmul
divl
rclb
movsb
dec
cmc
jmp
ja
es
lea
hlt
popf
aad
mov
sub
mov
bound
xor
mov
pop
or
stc
pop
mov
xor
jae
sbb
mov
mov
dec
mov
adc
loop
xchg
test
dec
stos
mov
push
mov
fistps
lods
xchg
xchg
jecxz
xor
dec
aas
mov
std
mov
xchg
mov
and
rorl
lahf
cmp
mov
jp
fists
repz
test
out
idivb
notl
push
in
mov
bound
adc
sub
pop
lahf
jmp
lahf
cmc
rcr
mov
js
mov
sbb
push
cltd
or
gs
sbb
pop
mov
and
icebp
dec
aad
push
and
inc
push
mov
hlt
push
jecxz
pop
arpl
add
stc
pop
xor
test
mov
scas
jle
aad
fmull
mov
mov
scas
mov
test
movsb
fists
loope
fsubl
insl
mov
gs
fnstsw
inc
and
hlt
push
iret
cmpsb
push
sbb
fimull
lahf
arpl
shlb
cwtl
cwtl
imul
repz
sti
out
fwait
jb
sub
add
sub
xorl
outsl
pop
dec
mov
pop
lcall
call
and
cmp
mov
push
in
mov
adc
popf
or
ret
pop
clc
cmp
popa
ret
cmpsb
inc
test
jmp
sar
xor
imul
out
nop
add
outsl
les
fmulp
adc
mov
aaa
xchg
xor
pop
pop
or
sbb
xchg
outsl
xchg
adc
mov
out
jmp
sub
loopne
inc
dec
push
dec
push
jb
dec
sub
inc
mov
mov
dec
sahf
addr16
pop
test
movsl
xchg
lahf
adc
pop
xor
jmp
bound
dec
ret
bound
push
arpl
sbb
mov
push
xor
sbb
mov
clc
adc
popf
mov
xchg
insl
xor
and
push
jo
and
mov
mov
stc
mov
pop
andl
cs
push
fcomps
lds
iret
mov
inc
lahf
pop
aam
cmpsb
pusha
jge
imul
cmc
daa
fsubrs
into
sbb
sbb
add
push
jne
scas
daa
pop
mov
xchg
outsl
pop
shrb
or
mov
mov
rcll
or
jb
xor
mov
jl
ret
cmpsb
dec
adc
lret
ret
cmp
rorl
les
sbb
inc
jp
sbb
lds
mov
addr16
jo
imull
or
jns
pop
ljmp
dec
mov
dec
fidivrl
je
mov
test
test
out
mov
xchg
sub
dec
add
mov
shl
cmp
in
ds
jl
dec
xlat
inc
sub
lcall
test
sub
push
mov
jb
and
cmc
and
sbb
or
jmp
push
push
add
jp
and
sbb
lea
mov
sti
xchg
ljmp
push
std
mov
out
test
jbe
xor
arpl
ficoml
mov
mov
ds
mov
or
in
mov
sti
ss
jnp
test
dec
pop
jg
inc
fs
pop
add
dec
lcall
and
and
jl
jl
movsb
call
fimull
out
mov
mov
loop
cs
push
mov
ljmp
push
mov
out
or
sbb
pop
sub
add
push
mov
lock
or
inc
pop
lock
inc
sti
mov
mov
jecxz
pop
mov
cltd
mov
fst
cs
pop
mov
lret
dec
and
jns
es
imul
imul
cmpsb
mov
lea
push
and
add
push
adc
pop
ja
and
jle
mov
rclb
mov
stc
push
sub
loop
lds
lret
fiadds
repz
sarb
stc
roll
xor
mov
sub
ds
ds
fmull
cmp
pop
int
icebp
push
adc
in
add
xchg
dec
test
ret
pop
jo
adc
shl
adc
add
ja
push
push
ljmp
mov
jmp
in
dec
adc
lods
insl
jecxz
dec
arpl
or
insb
lahf
arpl
or
sbb
or
mov
pop
mov
into
push
mov
lea
pop
push
xor
repz
mov
add
sbb
imul
loop
lcall
cltd
xor
lock
sahf
adc
dec
mov
cmpsl
mov
cmp
fcmovnu
insl
sbbl
rclb
cltd
adc
cmpsb
int3
xchg
jb
rcrl
push
mov
shl
cmp
pop
adc
jns
mov
icebp
dec
std
aas
add
pop
inc
push
xchg
inc
out
sarb
std
lods
jle
cmpl
iret
imul
add
sub
or
mov
lock
scas
xchg
cmp
and
sbb
sbb
pushf
dec
out
add
stos
stc
mov
jmp
cmc
push
mov
mov
mov
and
push
pop
add
xchg
pop
pop
lock
pop
lods
outsb
js
pushf
adc
push
scas
xchg
fsubrl
xchg
or
push
das
sbb
loop
stc
and
jmp
test
mov
jne
push
lock
jns
xchg
or
pop
or
movups
or
cmpsb
in
push
and
movsl
es
bound
jecxz
scas
sbb
or
dec
mov
in
mov
add
pop
repnz
mov
aam
sub
cmpsl
adc
adc
mov
push
jno
inc
clc
push
and
aaa
lret
add
loopne
sub
mov
pop
gs
cltd
mov
sub
cmp
shlb
mov
popf
test
sub
sub
cltd
dec
pop
inc
adc
in
mov
into
or
mov
jbe
xchg
fcom
outsb
test
lea
fisubrl
test
mov
mov
add
subb
mov
sti
lods
cmp
push
loop
push
aaa
test
in
inc
xor
lcall
call
xor
cs
push
imul
cld
repz
stc
xchg
ret
btc
ror
mov
cmp
adc
cmp
mov
push
fmuls
jbe
aad
sub
gs
pusha
sbb
cmp
push
std
into
insl
and
mov
push
add
jb
loop
lock
mov
test
pop
popa
divl
arpl
push
int
fwait
sub
inc
xor
adc
lea
push
add
sub
je
mov
cmpsb
pop
push
iret
iret
sub
adc
push
xor
mov
nop
cmpsl
or
enter
jne
add
adc
pop
pop
jne
bound
mov
jl
sub
adc
adc
mov
lods
jmp
xchg
and
inc
test
mov
jl
pop
push
bound
outsb
push
sub
aad
fwait
mov
cmp
shlb
test
jb
outsb
push
xchg
ds
sub
int
test
ret
add
leave
imul
dec
jb
fidivrs
fiadds
mov
fwait
adc
pop
jle
adcl
jmp
movsb
xor
pop
pusha
aas
addl
xor
test
insb
stos
ret
push
dec
orb
mov
fsubs
push
or
mov
mov
lcall
xchg
inc
lret
push
sti
or
xor
or
mov
jge
cmpl
push
sub
xor
mov
cwtl
stos
icebp
in
push
push
cmp
hlt
in
test
xchg
jbe
xchg
mov
js
push
jnp
or
pop
aas
lret
roll
cmpl
cmpsl
clc
sbb
lds
std
pop
xor
sub
jbe
cmp
incl
cmp
dec
shrb
sub
xor
dec
test
stos
repz
lods
mov
outsb
lea
ss
pop
loopne,pn
sub
aas
mov
test
inc
dec
mov
add
lds
jae
lret
movsb
fstps
out
adc
inc
xchg
das
int3
dec
pop
cmc
add
mov
js
adc
lods
or
mov
cwtl
scas
adc
mov
adc
rep
push
push
adc
jb
jp
mov
mov
dec
cld
dec
pop
ljmp
imul
push
hlt
mov
fwait
mov
jge
bound
mov
pop
iret
mov
jle
push
xchg
es
cwtl
in
sbb
out
sbb
cltd
xor
or
mov
inc
ljmp
test
cs
neg
rorl
push
xorb
sbb
nop
out
sbb
dec
cwtl
cli
sbb
add
lcall
aas
and
pop
inc
loop
subl
xor
faddl
sahf
arpl
mov
push
mov
sbb
les
dec
insl
cli
jno
fidivrl
add
call
out
adcl
jl
lods
xor
int3
neg
inc
loop
xor
scas
adc
push
test
jo
cld
mov
push
xchg
adcb
rcrb
lock
xchg
sbbl
mov
out
mov
mov
sub
add
es
inc
dec
lods
add
sub
xor
push
jae
aad
out
fsubs
enter
jmp
and
lods
mov
xchg
test
jp
es
dec
inc
lea
movsl
popa
adc
inc
sbb
jnp
pop
sbb
adc
push
aam
pop
xchg
and
fbstp
ja
lret
jo
sti
sbb
fsubl
iret
scas
dec
pop
daa
dec
xchg
faddp
int
pusha
loopne
adc
adc
push
fnstsw
dec
in
in
fdivr
mov
gs
xor
fwait
sub
xchg
add
inc
inc
xchg
or
jno
adc
insl
push
je
push
bound
movsl
testb
repnz
loope
or
fdiv
mov
popf
sbb
add
pop
xchg
mov
cltd
enter
dec
mov
dec
or
sarl
and
aaa
cmc
out
insb
popa
cmp
out
sub
out
lret
mov
or
outsl
cmp
mov
sbb
xchg
pop
insb
mov
out
jns
dec
pop
clc
add
out
xor
lret
push
xor
and
push
pop
lds
in
sub
cli
cmp
xor
inc
ds
lods
outsb
push
out
xlat
sbb
mov
xadd
or
cltd
push
insb
int3
sti
movsb
mov
sahf
xchg
cltd
inc
cmp
sahf
popf
xor
es
iret
fcmovne
jecxz
mov
fisubrs
fs
shl
sub
out
xor
subb
addb
shlb
mov
fisttps
and
outsl
les
notb
lahf
mov
adc
mov
adc
insb
pop
das
outsb
lcall
sti
mov
add
mov
add
sub
fs
cmp
xor
orb
push
scas
aas
mov
into
inc
add
test
or
or
sub
enter
jl
cli
dec
outsb
scas
pop
daa
adc
aaa
dec
add
aad
fdivp
bound
xchg
cmp
xlat
cmp
xchg
add
andl
jb
mov
jae
mov
lea
rdtsc
and
cmp
js
jo
xor
inc
ljmp
pusha
mov
mov
sahf
jb
call
add
xor
xabort
add
sbb
pop
adc
xchg
sub
divb
jnp
call
les
shlb
sbb
xchg
xchg
mov
sub
mov
fcomps
movsl
xchg
add
or
xchg
mov
push
sbb
test
sbb
jmp
les
jmp
adc
aas
cmp
xchg
rcrl
hlt
xchg
mov
dec
mov
sbb
lock
lcall
add
xchg
pop
adc
mov
jg
fmuls
mov
xor
fdivrl
adc
jae
dec
xchg
cmp
xadd
lret
push
fmul
gs
sub
clc
subb
dec
adc
push
add
add
xor
out
jmp
xor
jecxz
or
testb
lcall
or
jne
fnsave
fsubrl
jo
xchg
daa
mov
mov
inc
mov
jae
push
xor
ds
pop
ljmp
insl
out
mov
arpl
mov
les
into
jne
data16
mov
jl
bound
and
shl
inc
inc
insl
sub
jb
push
dec
pop
das
fwait
insl
in
rclb
shlb
xor
cmp
pop
push
js
sub
sub
push
sbb
pop
mov
mov
inc
mov
sbb
outsb
pop
dec
enter
adc
sahf
dec
dec
pop
std
sub
outsl
dec
jp
daa
cmp
push
imul
pop
ljmp
adcl
rcll
jp
fcoms
hlt
je
insb
xchg
xchg
ficoms
add
pop
mov
in
mov
add
pop
mov
nop
out
cli
hlt
cld
cmc
push
xchg
pop
sub
movsb
adc
imul
arpl
out
stc
sbb
xchg
inc
clc
jns
les
mov
pop
ljmp
icebp
mov
out
nop
mov
sub
mov
pusha
mov
stc
jg
mov
push
lret
cmc
insl
mov
rcll
fnsave
xor
lahf
dec
call
jge
mov
jae
insl
jne
sbb
mov
fneni(8087
and
mov
jmp
outsb
or
ret
sub
jmp
ja
pushf
int
aaa
jbe
outsb
lcall
pop
xor
fldl
jbe
sahf
cmpsl
xchg
filds
mov
push
push
popa
roll
popa
call
insb
imul
or
fwait
jo
or
and
jg
std
jecxz
or
jb
dec
jg
sbb
sub
and
or
out
in
imul
repz
lods
flds
negl
cmp
out
or
mov
pop
decb
std
arpl
sti
push
jp
cld
jb
shrl
push
cmp
rorb
shll
sbb
test
sahf
pop
test
stos
outsb
nop
pop
sahf
mov
imul
ja
inc
adc
sbb
ret
mov
add
or
pop
dec
jg
mov
stos
jmp
jb
pop
fsubs
mov
out
sbb
leave
fstl
pop
imul
mov
ljmp
mov
push
xor
mov
cwtl
add
shll
add
daa
inc
xlat
pop
xor
sub
pop
and
mov
adc
mov
out
cmp
movsl
dec
test
lcall
nop
call
lods
xor
mov
xor
sbb
addr16
pop
fcmovne
push
cmp
scas
adc
add
xchg
cmc
cs
lahf
into
jle
pop
sbb
mov
daa
or
xorl
jb
gs
xchg
dec
lods
fwait
ret
jns,pn
push
or
loopne
sbb
cltd
xchg
and
mov
dec
push
and
cmp
fs
adc
movsl
leave
adc
movsb
push
cmp
test
pop
adc
adc
bound
jle
xor
fcomps
outsb
ja
cmp
clc
adc
fs
ja
cmpsl
ds
les
fsubl
adc
outsl
je
and
jmp
mov
les
adcl
xchg
leave
cld
das
pop
hlt
es
add
aas
push
xchg
mov
sahf
cmp
ret
xchg
and
fwait
add
repnz
jns
movsl
mov
xchg
inc
mov
jno
popf
fimuls
push
push
lea
mov
sbb
mov
xchg
mov
sbb
xchg
dec
mov
fisubrl
jne
insl
dec
sti
leave
inc
pop
sarl
cwtl
nop
mov
mov
adc
test
int
dec
push
divb
inc
incb
inc
mov
shrl
lcall
insl
mov
mov
cmpsb
xor
aad
ljmp
pop
in
je
xchg
frstor
mov
pusha
out
repz
mov
mov
push
outsl
repz
xlat
add
xor
lods
adc
fdivl
sub
inc
dec
cltd
jmp
inc
adc
mov
dec
mov
add
xchg
test
mov
jne,pn
mov
fwait
xchg
lret
enter
or
call
cld
insl
xor
xor
neg
and
cmp
xor
pop
insb
cmpsb
das
sub
sub
jbe
push
or
fstps
je
jl
or
bound
pop
cmpsl
or
mov
in
inc
or
fidivl
addr16
xor
movsb
pop
jmp
dec
xor
mov
mov
hlt
outsb
enter
outsl
movsl
jp
fwait
xor
inc
and
inc
repz
inc
sbb
push
jno
mov
cmp
pusha
mov
popf
or
daa
stc
fisubrs
pushf
xor
jle
inc
out
fisttpll
jns
fsubs
psllw
je
out
mov
push
nop
fadds
mov
adc
mov
sti
mov
fdivrs
jns
push
jbe
push
popf
aaa
pushl
sahf
or
dec
sbb
adc
pop
mov
or
jbe
es
sahf
jae
fs
es
xchg
xchg
jbe
test
scas
int
pop
mov
outsl
mov
das
cmp
or
shlb
pop
fisubrl
adc
fsubs
sub
mov
pop
inc
shlb
test
bound
lods
fdivp
sbb
inc
jecxz
cmp
inc
xchg
cmp
insb
or
imul
std
push
ljmp
insl
pop
call
cld
mov
sub
xchg
scas
or
xchg
or
jns
xchg
bound
mov
hlt
add
mov
cmpsl
push
jbe
xchg
cmp
mov
push
jnp
mov
mov
push
add
ja
in
lds
push
imul
mov
imul
jb
inc
adc
jbe
push
mov
sub
loopne
out
mov
jle
mov
adc
xchg
imul
mov
lret
mov
imul
ss
mov
jle
fwait
mov
inc
je
loop
pop
test
pop
and
movsl
out
cwtl
imul
cwtl
mov
test
mov
daa
jno
gs
add
jns
jecxz
leave
dec
pusha
wrmsr
inc
nop
roll
lret
and
lds
ja
cmp
pop
sub
sbb
cmp
fildll
mov
xchg
das
paddw
in
jb
sahf
adc
in
movsl
pop
add
xor
fimull
jmp
in
sub
das
int
push
icebp
and
push
cmp
xchg
dec
push
mulb
jg
push
and
rcr
mov
push
fisubrs
jb
test
call
ret
insb
mov
sti
push
in
cs
mov
popf
pop
pop
dec
or
sbb
mov
cmp
imull
test
add
pushf
fisubrl
pop
xchg
je
dec
outsb
js
mov
dec
and
test
icebp
pop
mov
jecxz
pop
shlb
sahf
and
add
rorl
or
aam
jle
sti
fwait
and
jmp
divl
mov
mov
mov
pop
dec
cmp
ss
not
loope
jl
les
xor
push
cmp
out
in
push
jmp
test
add
cmp
in
test
inc
sbbb
stos
lods
push
in
cmp
push
pop
xor
add
inc
mov
loopne
in
mov
inc
pusha
or
cmp
sbbb
pusha
into
jb
cmp
and
hlt
sbb
lret
sbb
cmp
repnz
test
inc
into
es
push
shrl
repnz
pop
fbstp
and
xchg
push
stc
gs
xor
inc
xor
add
in
shll
push
fdivs
ja
icebp
arpl
sub
insl
lret
mov
dec
mov
inc
sarl
fistl
cmp
sar
sbb
jb
daa
shlb
adc
outsl
mov
jbe
shll
sbb
fbstp
cs
insb
pop
iret
std
mov
push
cmpsb
xlat
out
inc
sub
jmp
les
jns
inc
stc
insl
mov
outsl
call
cmpsl
outsb
jg
push
pop
in
mov
imul
push
icebp
ljmp
or
cmp
insb
mov
adc
mov
xchg
and
xorb
nop
out
ljmp
repnz
mov
xchg
es
dec
jae
neg
in
push
imul
shlb
push
int
sbb
cmp
lods
and
lcall
outsl
adc
dec
push
inc
or
cmp
aad
out
leave
jmp
pop
test
iret
jne
and
sbb
mov
xchg
mov
add
fs
nop
divl
push
enter
pop
and
pop
xchg
fstpt
push
fcomps
xor
jmp
cmc
fbstp
push
mov
pop
and
cs
leave
repnz
jecxz
adc
loope
or
mov
jle
xchg
fidivrs
push
les
xor
and
cwtl
popf
into
movsl
adc
imul
cmp
mov
adc
call
mov
xor
pop
pop
jle
cmpsl
push
push
fwait
jl
ret
test
jo
pop
xchg
jo
push
jbe
pushl
loope
or
sub
rclb
sbb
pop
aas
imul
jmp
imull
jae
lcall
mov
out
in
and
leave
into
mov
pop
and
cmp
cmp
and
rol
dec
sarb
loopne
cltd
outsl
mov
push
nop
pusha
xchg
inc
jle
loop
dec
fidivrs
gs
clc
xor
push
hlt
cmp
fistl
out
sbb
xor
mov
inc
ljmp
imul
mov
les
mov
cli
push
jp
stc
push
aad
xchg
sbb
addr16
xchg
pop
jge
call
dec
jne
test
push
lret
lcall
dec
mov
popf
scas
inc
pop
push
pusha
mov
mov
push
mov
cs
jmp
cwtl
and
daa
stc
ret
in
push
and
in
mov
xchg
mov
popf
lret
loopne
lods
cmp
xor
stos
push
xchg
cld
ret
adc
ja
adc
insl
inc
arpl
ds
pushf
add
shrl
dec
testl
inc
out
ja
shl
jo
lahf
dec
gs
data16
fwait
loopne
push
cmpsb
cmpl
jl
imul
cmc
xchg
sti
pop
inc
sahf
xor
je
xor
lds
fs
test
nop
fdivrs
jp
insb
rorb
pop
pop
enter
push
dec
mov
inc
pushf
mov
jge
lods
xor
data16
adc
cmp
call
mov
push
sti
dec
cmp
cmp
sbb
jbe
adc
pop
xor
mov
cltd
cli
cmp
fwait
mov
xor
repz
mov
fdivrs
mov
popa
icebp
lods
inc
mov
or
pop
pop
lret
int3
sti
gs
popa
mov
mov
mov
testb
je
psrlw
enter
push
xchg
push
mov
cmpsb
inc
dec
mov
test
iret
and
mov
test
rcll
jnp
and
cmp
test
and
sbb
fimuls
or
xchg
outsb
testl
adc
mov
shr
xchg
jb
lret
insb
and
daa
inc
dec
ret
lods
inc
push
mov
mov
adc
outsb
std
push
sub
or
cmp
jge
iret
out
fsts
bound
push
adcb
xchg
aam
lds
sbb
add
pop
sbb
adc
std
mov
add
mov
sub
mov
adc
out
negl
fcmovu
xchg
jno
lds
lods
insb
in
adc
ret
push
mov
ja
scas
int
cmp
xchg
cmp
shrl
out
inc
inc
jl
xor
scas
cmp
jle
adc
sub
fstl
or
mov
dec
std
in
jno
cwtl
xchg
cli
mov
pop
call
mov
mov
dec
pop
insl
xor
or
dec
enter
mov
push
popa
stos
add
jg
mov
adc
push
cmpsl
out
pusha
ds
mov
pop
and
xchg
push
movsl
cld
xor
test
in
pop
pop
dec
dec
xchg
cmp
and
jmp
pop
outsl
outsb
or
xchg
not
aad
aas
cwtl
hlt
inc
mov
hlt
mov
cli
std
imul
sub
mov
popf
cmpsl
add
cmp
lods
outsl
push
jl
push
sub
enter
or
jecxz
pop
jb
negl
cmp
mov
push
mov
out
movsb
lret
lods
dec
jle
in
and
inc
cltd
clc
dec
fisttpl
lret
out
sub
les
pop
out
pop
and
mov
push
iret
mov
pop
arpl
push
push
pop
fs
jp
xor
jg
aaa
rclb
int3
fisubl
push
mull
and
incl
lock
sbb
xchg
out
xchg
les
test
loopne
cmovnp
outsb
adc
mov
push
xor
test
cmp
gs
push
jb
mov
add
cmpsl
xchg
or
sti
jl
cmp
xor
and
mov
out
popa
cs
shll
xor
jo
mov
mov
pop
mov
pop
jnp
nop
sbb
push
iret
inc
push
movsb
mov
xchg
cmpl
popf
inc
insb
lods
mov
and
mov
push
sti
loopne
lods
mov
push
mov
pop
add
dec
insb
xor
sbb
mov
les
mov
inc
adc
mov
mov
mov
jae
out
pop
imul
or
cmpsl
push
inc
push
out
sub
test
cmc
cs
scas
jo
lds
adc
mov
xor
cli
jg
mov
sub
les
test
or
add
jae
aaa
lea
fsubl
js
clc
movsl
in
out
sbbb
ja
ds
pop
cmp
pop
mov
fisubs
mov
subl
je
jp
mov
pushf
jecxz
fwait
push
orb
dec
stos
ja
pop
aas
fcmovnbe
mov
mov
or
test
add
jnp
inc
int3
fwait
xlat
xchg
xchg
jecxz
scas
mov
ja
cltd
mov
fisubl
lds
in
hlt
stc
mov
loope
jne
cltd
adc
mov
mov
inc
in
repz
sti
ret
fisttpll
lret
mov
adc
mov
out
aad
movsl
jmp
loope
enter
in
in
jne
sub
pushf
and
stos
fbld
xchg
lret
xor
adc
xchg
movsb
out
imul
mov
mov
mov
les
andb
jmp
mov
ret
mov
arpl
xchg
lock
push
mov
cmp
das
movsb
stos
dec
xor
sub
lds
jmp
orl
out
or
es
sub
xchg
jl
clc
daa
adc
fidivrl
xor
xor
mov
fbstp
push
xchg
mov
sbb
xor
and
shrl
xor
into
cli
filds
jo
or
add
jp
push
jl
mov
or
sahf
fisubrl
dec
je
pop
sbbl
xor
adc
mov
imul
inc
data16
jb
lret
push
pop
mov
mov
sbb
xor
test
lret
xchg
lret
jns
pop
xchg
fildll
aas
xor
outsl
lock
jae
fldcw
and
mov
or
mov
or
aad
mov
jmp
xor
jo
cmp
lahf
lret
jle
push
xchg
sbb
cmp
mov
jmp
insl
mov
cmp
shrl
ret
mov
scas
mov
mov
scas
mov
inc
pop
data16
mov
scas
cld
test
fldcw
mov
lods
cmp
lock
xchg
mov
in
ja
push
fcoml
fnsave
dec
dec
ficoms
jne
test
sub
xlat
sbb
push
aaa
sbbb
rcrb
sbb
jne
cltd
jl
in
push
dec
pop
mov
in
daa
mov
mov
and
cli
xor
xchg
sbb
cmpsl
arpl
mov
jle
outsl
in
jmp
inc
sub
gs
sahf
pop
lods
push
sub
gs
pop
les
int3
push
mov
out
inc
arpl
pop
xor
dec
sbb
push
sub
lcall
js
testb
test
xor
shrb
outsb
push
pop
lcall
push
shll
jge
cs
subl
test
jo
fisubl
gs
lahf
cwtl
mov
std
or
sub
test
lahf
xor
ja
or
adc
aad
enter
inc
enter
das
jne
in
aad
push
inc
sbb
jmp
repz
xor
imul
stos
inc
int3
gs
or
xchg
rolb
xchg
cmp
fsubl
pop
adc
xlat
sarb
xchg
sbb
dec
cmp
xor
mov
imul
fwait
mov
sub
push
push
xor
or
mov
rclb
mov
call
add
inc
stos
es
cmp
push
mov
shlb
jns
mov
mov
add
test
inc
push
orl
out
stc
in
cmc
notl
add
pop
adc
loope
sbb
jno
pop
imull
cmp
mov
and
jcxz
cs
rolb
addl
inc
or
cmpsb
rorl
cmpsb
mov
mov
arpl
mov
inc
push
push
les
bound
adc
cwtl
dec
pop
push
xchg
mov
add
jns
bound
imul
jl
test
xchg
aam
fisttpl
sbb
lds
adc
jb
push
pop
cwtl
out
fucomp
mov
xor
repnz
movq
shlb
jmp
decb
mov
jns
arpl
inc
mov
jl
pop
jae
and
jp
inc
mov
nop
pop
jnp
pop
ret
out
push
sbb
mov
pop
out
inc
or
popa
rcrb
jae
stos
jle
push
or
push
test
cs
cwtl
sub
pop
sbb
rol
jae
mov
and
mov
push
add
loopne
mov
pop
sub
pushf
jmp
rcrl
ss
xor
sbb
int3
enter
xchg
fiaddl
mov
imul
pop
out
push
inc
mov
mov
xchg
adc
mov
xor
fs
fmuls
divl
cmp
inc
es
pop
mull
loop
or
js
push
dec
std
fsubrp
and
pop
sti
fildl
fstl
push
push
sub
out
rclb
pop
fsubl
cmpsl
fs
mov
fs
incl
out
les
mov
aam
sub
jo
stos
loop
sub
push
stos
xor
sub
fidivrl
arpl
fimull
stos
imul
leave
cmp
xchg
sbb
iret
jnp
xor
pop
test
push
fistpl
std
adc
push
and
xchg
dec
push
lret
adc
and
lods
add
insb
push
jno
add
mov
sbb
in
push
lods
xor
jae
dec
test
mov
mov
test
cli
mov
xchg
imull
mov
fdivrl
inc
lahf
imul
imul
sub
leave
xchg
xchg
ljmp
shll
leave
pop
js
testb
xor
cli
dec
xchg
and
jae
inc
and
outsl
mov
ljmp
das
fneni(8087
mov
insl
xchg
lret
lret
scas
ds
icebp
adc
inc
test
xchg
and
into
iret
leave
pushf
cltd
jge
mov
mov
shl
cmp
adc
stc
sbb
add
popf
test
mov
hlt
sarl
push
ja
int3
xchg
cmpsb
test
xor
cwtl
pop
ret
je
xchg
dec
jnp
mov
int
dec
stos
fnstcw
inc
clc
dec
mov
xchg
in
enter
add
mov
les
mov
dec
push
out
in
pop
jbe
lock
cli
cli
and
shl
int3
inc
aaa
or
dec
cmp
pop
out
add
adc
je
ret
fmuls
cltd
imul
adc
test
cld
add
mov
and
movl
rorl
loopne
cwtl
roll
test
cs
movsb
loopne
lods
push
cmp
call
lds
in
push
pop
stos
shrw
jle
push
pop
fimull
mov
cmp
pop
pop
lcall
popa
out
push
dec
andl
lahf
pop
mov
xchg
adc
xchg
cmp
iret
mov
das
inc
push
xchg
lret
add
mov
out
sub
ljmp
bound
je
cld
mov
push
pop
cli
xchg
and
and
dec
xor
push
fiadds
push
fsubrp
pop
stc
loop
inc
xchg
icebp
orl
mov
aam
mov
xchg
pop
fidivl
je
mov
cltd
xlat
cmpsb
inc
out
out
ret
mov
stos
sarl
adc
pop
hlt
lods
mov
outsb
cmpsb
and
cmp
sbbb
pop
mov
cmp
or
xchg
sbb
pop
inc
mov
mov
roll
xchg
or
pop
icebp
pop
lret
sub
lret
int3
dec
mov
jne
test
test
pop
insb
ja
cmp
jmp
mov
stos
movsb
jns
mov
std
test
mov
pop
inc
cmp
push
fnsave
xor
xchg
in
and
mov
jle
fsubl
sbb
cld
jno
dec
sbb
xor
shll
xchg
jns
mov
add
imul
pop
push
cli
push
arpl
xchg
xchg
jae
push
dec
aaa
xchg
jl
mov
loope
cmpsb
add
ret
jl
cs
pop
rcl
adc
add
cmc
cmp
mov
xor
add
fcomps
inc
pop
and
xchg
or
mov
or
add
imul
xchg
aaa
dec
push
lret
sub
mov
je
inc
flds
insl
lock
enter
or
lcall
clc
les
adc
dec
push
lcall
jno
add
sbb
ret
rol
test
push
mov
mov
daa
add
out
hlt
lcall
mov
fsub
repz
ja
aam
test
jns
pop
fdivs
dec
test
adc
mov
xlat
cmc
imul
pop
jne
xchg
out
fadds
mov
add
loope
adc
ss
mov
sub
jne
xchg
lods
imul
imul
add
or
mov
sar
nop
daa
sub
cmc
cmp
lret
enter
mov
inc
insl
subl
fnstsw
push
mov
fldcw
insb
ds
pushf
xor
lret
add
jne
inc
test
scas
stc
in
sbb
inc
dec
subb
lods
cmp
ret
js
jo
push
add
lods
aam
rclb
adc
inc
insb
adc
mov
jnp
out
inc
jae
arpl
adc
lods
dec
lods
fisubrs
sbb
or
faddl
adc
inc
pushf
sub
cs
ss
cmpl
xor
test
fistl
xor
popa
mov
xchg
cmp
sub
cwtl
ds
loopne
sbb
mov
lea
movsb
and
xchg
or
jb
lea
pop
cmp
daa
lret
adc
inc
jmp
mov
xor
imul
pop
cltd
adc
adc
add
in
pop
outsb
xchg
mov
inc
hlt
xchg
enter
mov
arpl
add
ret
sbb
xor
call
stc
cwtl
or
xlat
jae
or
adc
adc
lret
mov
sbb
adc
daa
mov
dec
mov
cmc
outsl
iret
xor
xchg
pop
fistpl
rcll
imull
test
movsl
stos
adc
pop
xchg
cld
pop
pop
sbb
stos
in
shrb
loopne
or
mov
ljmp
fmull
sub
mov
sti
push
add
push
jecxz
add
add
xlat
sub
lret
mov
popa
xor
or
mov
inc
scas
loope
lahf
adc
xchg
fnstenv
mov
outsl
jmp
lods
lock
ret
xor
xchg
pop
xor
dec
cmp
inc
jb
mov
stos
stos
mov
or
cmc
push
sbb
in
insl
and
push
movsl
xchg
push
mov
push
push
fs
cmc
clc
pop
xchg
rolb
mov
pop
stc
lret
fwait
out
xor
xchg
cmp
call
xor
fwait
popa
lcall
add
xlat
sub
xor
dec
adc
push
inc
mov
hlt
xor
push
dec
sbb
sbbb
sbb
pop
cmovge
mov
mov
ror
mov
movsb
sbb
inc
mov
push
in
cmp
or
test
inc
stos
lock
jecxz
mov
push
sub
dec
test
cld
lock
cmpsl
or
jg
or
push
aam
inc
stos
mov
pop
fisubs
or
mov
or
add
iret
int
aad
mov
aad
ror
mov
push
insb
sub
test
cltd
aam
add
sbb
shr
sub
jmp
jp
add
and
cmp
repnz
xchg
mov
je
sbb
mov
pavgb
adc
jl
sbb
lods
dec
mov
cmp
xorl
push
push
leave
jns
test
mov
xor
adcb
jl
fdivrs
clc
int
insl
ja
aam
js
popa
add
pop
lcall
inc
sub
lods
aam
sbb
cmpsb
loopne
out
sbb
pop
aam
or
jg
jg
or
outsl
sub
cmp
ds
cwtl
push
mov
lcall
mov
dec
repnz
out
ss
outsl
mov
inc
shll
movsb
notb
xlat
insb
jns
push
add
enter
imul
mov
aam
arpl
fisubrs
or
aaa
leave
in
dec
outsl
mov
xchg
add
pusha
in
cmp
int3
sbb
mov
cmpsl
ret
or
xchg
dec
test
das
mov
lods
mov
test
xchg
test
inc
sub
pushf
ds
pushf
jmp
pop
xchg
xor
cmp
xchg
adc
push
mov
roll
aad
icebp
pushf
adc
cwtl
test
mov
pop
gs
mov
decl
imul
test
je
sub
sub
mov
xchg
test
push
fwait
sbb
aaa
xchg
xor
dec
iret
sarl
repz
mov
cld
je
mov
into
in
sbb
in
cmp
sub
jns
xor
add
cmc
sbb
add
lcall
shll
lods
push
roll
pop
jae
mov
push
test
subl
cwtl
addb
ljmp
sub
out
xchg
add
jne
and
push
pop
daa
mov
adc
pusha
mov
pop
iret
pushf
fstl
sub
xlat
fldenv
subb
mov
sub
rcrb
lods
imul
mov
push
dec
daa
jno
in
push
arpl
push
adc
sub
pop
mov
subl
fcom
pop
imul
jl
xchg
mov
inc
pop
jle
stos
and
xor
mov
or
call
fs
aaa
push
adc
in
into
repz
and
pop
dec
or
jne
pushf
shrl
push
mov
outsb
daa
and
cli
and
pop
sub
imul
js
gs
mov
icebp
std
outsl
rclb
lea
and
mov
xor
pop
inc
gs
ds
stos
lock
arpl
fstpt
int3
mov
fdivrs
push
xchg
insb
push
js
add
call
sbb
xchg
fsubs
mov
je
sahf
xchg
cmpsb
xor
test
jae
mov
jnp
mov
fs
or
lock
cmp
outsl
les
daa
fisttps
addr16
daa
add
sub
dec
jo
je
mov
mov
jle
or
sbb
xchg
bound
incb
pop
pushf
jl
out
inc
pop
hlt
aas
mov
lods
mov
leave
lret
cmp
dec
and
aad
gs
fimuls
int3
cmp
outsl
rcrb
fwait
stos
cwtl
push
add
adcl
xchg
fisubs
out
arpl
cld
mov
cwtl
pusha
mov
jno
mov
or
mov
xchg
inc
jle
test
mov
mov
or
pop
lret
pop
push
mov
xlat
push
and
lods
icebp
cmpsl
je
xchg
mov
enter
stos
mov
fsts
repz
adc
iret
and
lock
pop
imul
adc
dec
shll
pop
je
pop
out
push
cmp
jge
push
mov
icebp
sahf
and
das
popa
adc
add
cmp
jmp
and
mov
popa
push
dec
pushf
decl
vphsubwd
cmp
sbb
aad
fisttpll
lahf
mov
jae
sbb
in
mov
leave
jp
xchg
push
je
dec
das
xor
rcr
addr16
roll
and
jge
cmpsb
or
andb
nop
subb
adc
das
mov
enter
lret
inc
lods
jmp
add
xor
nop
push
int3
adc
xlat
arpl
or
in
mov
out
dec
mov
jmp
movsl
test
test
mov
cli
or
jmp
xor
lret
icebp
out
xchg
bnd
in
clc
sub
fs
stos
je
ret
inc
fs
pop
hlt
js
jl
mov
mov
popf
cmpsl
aas
add
add
pop
mov
mov
add
int
add
fistpll
mov
lret
push
and
sub
jecxz
mov
rcrl
push
and
in
sbb
into
push
test
xchg
cmp
pushf
std
mul
and
pop
push
shlb
or
pop
les
je
xchg
sub
inc
dec
cmp
das
cwtl
push
cwtl
cmpb
xchg
flds
cmp
sub
stc
sub
mov
jmp
sahf
mov
jle
sbb
outsl
clc
fbstp
push
xor
aaa
mov
jg
in
jp
aam
xlat
out
jae
out
sbb
cmp
mov
ss
push
or
enter
rorb
xlat
cmp
mov
cmp
push
push
xor
push
and
cwtl
pop
in
inc
mov
xchg
inc
addb
in
xchg
push
mov
jae
jle
ja
addb
aaa
iret
bound
int3
pop
jmp
cmp
adc
push
int3
es
dec
imul
sahf
test
hlt
mov
sahf
je
jo
add
xchg
mov
clc
rep
fstps
dec
mov
mov
sahf
mov
lock
rcr
cmp
fsubs
cmpsb
xchg
int
dec
ja
inc
pop
repz
mov
fdivrs
mov
dec
adc
sbb
add
loop
shlb
negb
dec
mov
inc
lock
out
sub
mov
jmp
cmpb
out
push
jmp
in
pop
ss
add
stc
inc
lahf
fwait
negb
idivl
insb
mov
push
and
push
pushl
pop
add
inc
movsb
adc
sahf
sbb
mov
ret
inc
adc
mov
flds
mov
mov
mov
enter
pop
pop
pop
xor
dec
clc
mov
test
mov
insl
test
cmp
pop
cmpsl
xchg
mov
adc
add
dec
in
inc
sub
lds
xor
sarb
xor
jo
loop
sub
and
pop
call
pop
pop
push
mov
lods
jp
inc
movsb
mov
negb
mov
aam
cld
adcb
scas
pop
std
add
dec
movsb
inc
movq
mov
aam
mov
jne
add
mov
sbb
push
push
pop
mov
jb
shll
or
stos
fisubrl
dec
pop
je
fistpll
xor
inc
add
mov
or
pop
inc
dec
leave
lods
sub
iret
test
and
add
push
adc
ljmp
test
les
cli
inc
lret
adc
leave
fwait
add
xchg
mov
std
int3
mov
loope
or
xor
mov
adc
add
or
leave
mov
sbb
jbe
sti
cmp
movl
xchg
pop
mov
out
in
inc
sti
jae
and
push
xor
mov
inc
arpl
das
into
frndint
in
shll
shlb
negb
inc
das
inc
clc
mov
fbld
fcmovb
sub
sub
repnz
je
push
sub
out
rcrb
daa
and
fisubrl
add
orb
push
pop
sbb
cmp
sahf
adc
or
fidivrl
outsl
jecxz
fidivrl
int3
or
push
xor
das
inc
imul
fdiv
movsb
sbb
push
push
mov
xchg
add
mov
rcrl
aad
push
stos
add
mov
pop
sub
dec
xor
mov
jecxz
push
add
stos
adc
sbb
or
lea
xor
push
jb
push
cmp
jge
into
ljmp
repz
xchg
aaa
adc
ds
push
mov
je
mov
or
add
push
mov
add
shll
xlat
lahf
std
adc
add
jo
or
leave
cmc
dec
rorl
xor
adc
outsb
pop
push
decb
pop
and
ds
sub
add
aad
pop
cli
jge
push
or
cld
push
cmpsb
imul
push
and
and
xor
dec
mov
jl
cmc
cwtl
es
sub
mov
mov
dec
jp
cmp
js
icebp
xchg
pushf
cmpl
ss
inc
repnz
inc
in
push
mov
imul
jmp
loopne
ljmp
jae
mov
popf
bound
dec
push
fstpt
fsts
subl
or
aaa
mov
aas
cmp
divb
mov
pop
pop
aaa
fs
inc
data16
rcrb
in
pop
out
sti
xlat
push
dec
fnstenv
xor
leave
test
ret
xchg
js
push
repz
fstp
dec
scas
jp
push
sbb
and
loope
cli
add
push
xor
xor
sti
cs
ds
addr16
inc
notb
adc
pop
pop
test
inc
mov
addr16
stos
xchg
sysret
arpl
xchg
inc
mov
xchg
rolb
jo
dec
xchg
jp
fldl2e
mov
mov
popa
add
jg
je
mov
jae
ljmp
mov
mov
mov
aam
mov
jo
jae,pt
ret
xlat
adc
xchg
fistps
dec
mov
daa
pusha
xchg
xor
mov
xchg
sbb
pop
clc
pop
js
xchg
sarb
push
sbb
jle
jle
in
mov
xchg
push
lret
dec
cmp
jl
dec
jne
loopne
dec
pmaddwd
dec
je
cmp
pop
push
and
dec
incb
xchg
xor
xchg
mov
cwtl
iret
lea
ss
stos
pop
in
and
fcomps
push
sub
cli
imul
fs
push
ret
fwait
popa
gs
inc
ss
xchg
and
std
and
lock
shrb
sarl
out
and
sbb
popf
pop
inc
mov
rcr
xor
cli
into
push
jmp
sti
and
mov
cmp
imul
stc
pop
fisubrl
add
inc
and
arpl
insl
cs
loop
or
fstpt
nop
mov
xchg
sub
addr16
out
jmp
pop
xchg
dec
outsl
push
mov
scas
push
ficompl
stos
mov
xor
push
rorb
jbe
cmp
jne
mov
test
js
into
fxch
data16
jbe
mov
mov
adc
push
jge
add
sahf
xchg
js
loopne
or
sti
repnz
cmp
and
ds
ja
pop
js
xchg
or
xchg
out
mov
and
loope
push
mov
xchg
push
decl
shlb
stc
mov
out
sub
push
das
pop
push
iret
mov
sub
cmpss
mov
fadd
xor
cmp
or
rorb
mov
inc
fisubrl
pop
lods
es
js
cmp
movsl
or
stos
cmp
inc
insb
xorb
fimuls
cltd
cmp
mov
pushl
sub
push
xor
push
inc
adc
mov
pop
and
and
lods
fucomi
mov
sarl
aas
pop
jo
add
inc
pushf
sbb
mov
fwait
and
and
ja
cmp
xlat
cmp
mov
nop
dec
xor
mov
mov
cmpl
jmp
es
or
movsb
and
cwtl
or
mov
lea
mov
mov
into
adc
aad
stc
ret
gs
dec
ja
mov
push
sbb
or
es
push
dec
push
add
pop
fucomip
jp
jecxz
or
mov
mov
jmp
bound
push
hlt
insl
sbb
pop
mov
in
arpl
mov
push
in
adc
mov
lea
pop
mov
xlat
fdiv
pop
push
sub
add
sub
jae
into
mov
xlat
inc
xor
add
inc
out
add
lock
xchg
aaa
cwtl
inc
push
mov
sti
pop
sub
jle
mov
adc
mov
sbb
pop
sbb
movsl
stc
lret
cmpb
push
mov
pop
cld
adc
jns
or
mov
cmp
sbb
mov
push
dec
xchg
cmp
popf
mov
mov
inc
mov
add
ljmp
xor
xor
bswap
das
outsl
dec
dec
sub
insl
ret
sbb
addl
sar
je
imul
pop
cmpsb
xchg
sbb
add
jge
jns
push
clc
cltd
jmp
cmp
cmpb
clc
cwtl
lahf
sub
enter
or
mov
cmc
jo
inc
sbb
out
loop
or
call
mov
sbb
daa
push
cmpsb
adc
popf
xorl
in
hlt
out
xchg
lahf
adc
and
sub
push
lcall
add
mov
test
popf
jnp
and
jae
mov
call
imul
mov
add
adc
pushf
xchg
and
leave
shll
int
loop
mov
xchg
imul
sbb
cmp
mov
test
js
divb
int
xchg
jae
dec
dec
dec
and
into
leave
sbb
insl
push
into
and
insb
jle
jecxz
pop
aaa
push
rorb
jns
pop
mov
dec
ljmp
sbbl
lret
dec
jg
pusha
nop
and
bound
xchg
cmp
lgs
mov
bound
sbb
lods
push
add
mov
icebp
pop
repnz
cmp
push
call
push
test
xor
out
push
mov
xchg
pushf
pusha
rcll
ds
dec
xchg
ja
add
sbb
testl
fistpll
xchg
arpl
test
push
cmp
outsb
pop
sbb
aam
cmp
pop
add
fadds
fsubr
mov
leave
dec
int
xchg
sub
or
aad
mull
jbe
fdivl
es
mov
inc
mov
jns
push
and
in
pop
or
movb
xchg
inc
or
sahf
ss
add
xchg
divl
mov
stos
mov
lret
in
cmp
lods
pop
orb
push
xchg
adc
push
cmp
fdivl
mov
cmpsl
stos
pop
xchg
addb
arpl
lret
mov
mov
bound
into
out
xchg
pop
jl
mov
xchg
sub
push
stos
xor
sahf
push
pop
pop
and
adc
mov
ja
mull
shrb
inc
mov
insl
sbb
aaa
push
jnp
inc
in
mov
stos
inc
add
iret
and
iret
ret
fistpll
and
hlt
int3
xor
fdivrs
sahf
pop
ss
push
mov
stos
push
inc
aaa
mov
xor
mov
jno
arpl
in
push
jg
clc
push
or
pop
std
fsubl
xchg
xor
aaa
mov
ja
mov
aas
data16
ljmp
mov
sbb
xchg
adc
cmp
inc
inc
sbb
mov
lds
cld
shll
dec
bound
add
dec
pop
cwtl
cwtl
addb
dec
stos
or
pop
cmp
loopne
mov
pushf
outsl
ss
outsb
out
mov
lock
outsl
shl
mov
pop
sbb
lea
mov
xchg
adc
xor
and
cwtl
clc
sub
mov
push
mov
loop
sti
fmull
loop,pt
mov
and
rcrl
or
or
pop
add
in
dec
cld
mov
in
enter
cmp
push
push
lret
sbb
push
ret
mov
orb
sbb
sbbb
pop
inc
aam
or
and
xchg
add
jge
fists
and
push
lock
jae
sahf
cmp
push
sub
roll
cmc
jecxz
imull
pop
and
lock
dec
dec
add
pop
fs
sbb
or
fldt
pop
xor
push
sub
push
xor
out
loop
lea
out
fcompl
sub
pop
or
fadd
add
xchg
outsb
and
stos
dec
xor
pop
hlt
mov
test
jo
sbb
cld
mov
cmpl
add
movsb
icebp
sub
mov
inc
dec
xchg
enter
cltd
xchg
clc
shrl
jp
jnp
xor
bound
inc
stos
push
or
insl
lret
sbb
lcall
xchg
sbbl
ljmp
cli
out
insl
into
pushf
sti
inc
pop
or
or
icebp
cli
cmpsb
test
clc
outsb
insb
xchg
clc
sbb
xorb
repz
outsb
mov
jp
sub
es
shlb
outsb
stc
out
mov
dec
aam
enter
pop
hlt
push
notb
pushf
mov
repz
sub
lret
repnz
hlt
pusha
adc
mov
ret
sbb
pop
inc
adc
cmpsb
test
loope
and
aam
xchg
call
adc
inc
fists
dec
clc
add
mov
cmp
js
xchg
lcall
lret
fisubrs
lret
jge
repnz
mov
push
inc
sbb
mov
dec
sub
jge
arpl
or
dec
pop
cmp
inc
mov
push
pop
daa
fidivs
out
dec
push
gs
jo
pop
jmp
jno
push
repnz
cmp
dec
test
fldenv
outsb
int
cmp
cmp
imul
cmp
cmp
inc
adc
or
mov
rcrb
cli
int
xor
pop
mov
in
add
aaa
hlt
call
ss
inc
mov
popf
xlat
sub
cwtl
pop
jle
mov
pop
xchg
outsl
adc
es
movsl
add
imul
icebp
nop
popf
inc
std
add
sbb
enter
sub
fcompl
stos
push
push
cmp
add
sub
xor
insl
cmp
jb
in
iret
outsb
andl
pop
cli
movsl
dec
sub
jl
stc
cmc
out
ficoms
lcall
inc
and
mov
lret
add
mov
scas
movsb
push
jno
xlat
mov
fdiv
rolb
in
arpl
cmp
into
push
add
or
int3
jno
pop
jp
cltd
testl
mov
dec
adc
dec
ja
xor
stc
insl
pop
icebp
cmp
je
repnz
sub
loop
aad
push
js
clc
adc
mov
ret
cmp
and
lods
rolb
ret
mov
add
sub
jecxz
enter
pop
repnz
scas
ja
jl
ds
sbb
xchg
popa
jbe
in
mov
mov
cli
add
cwtl
out
mov
xor
or
hlt
pop
pop
mov
cld
loope
mov
jno
iret
pop
bound
add
jge
cmp
or
cld
sub
jecxz
fstl
pop
scas
es
fs
rorb
fnstcw
mov
je
or
fcoml
dec
push
arpl
push
or
sub
shrb
scas
or
push
in
sub
dec
xchg
sarb
mov
int3
dec
cmp
mov
loop
adc
xchg
adc
dec
add
fwait
es
insb
sbb
xchg
std
mov
gs
lds
loop
aad
mov
repz
js
pop
addr16
push
hlt
stc
data16
mov
mov
xor
ds
mov
pop
adc
xchg
gs
xchg
push
imul
pop
jnp
jae
fwait
or
xor
sub
push
xchg
sbb
fwait
add
jp
pop
fwait
sub
lret
sti
sub
inc
mov
push
negl
and
sahf
stos
ljmp
add
push
jecxz
sbb
gs
filds
cwtl
dec
jno
mov
div
enter
cmpsl
push
ficoms
shrb
scas
and
or
add
out
sbb
adc
mov
push
stos
add
nop
xor
clc
out
xchg
subb
test
or
and
jle
sbb
cld
popf
enter
jmp
adc
cmpsl
mov
xor
jecxz
xchg
mov
xchg
std
push
mov
cmp
pop
jbe
push
cmpsl
mov
and
mov
rcrl
pop
icebp
pop
xorl
dec
inc
mov
out
xchg
xrelease
and
andl
imul
sti
mov
sbb
adc
push
xor
sbb
jb
ss
jns
sbb
push
arpl
cwtl
mov
xor
add
xchg
call
fnsave
sarb
scas
in
imul
push
add
pop
inc
incb
sbb
xor
mov
test
call
inc
jb
mov
dec
je
inc
xlat
nop
mov
jl
xor
xor
mov
leave
adc
shrb
xor
jne
imul
push
mov
push
cmp
sarb
mov
rorl
or
in
dec
stos
or
or
push
mov
xchg
push
inc
test
pop
mov
fsts
ror
mov
push
lcall
fcoml
lcall
cli
loope
scas
inc
inc
cmpsb
fucom
mov
dec
test
adc
dec
mov
fisubl
cltd
cmc
clc
add
xchg
xchg
aas
jb
mov
repz
adc
shl
adc
dec
xor
push
mov
inc
outsb
pop
adc
addl
out
push
sbb
mov
sub
fs
mov
ljmp
cli
lret
mov
push
in
fisttpl
sbb
sub
jl
scas
mov
in
pop
add
jo
mov
pop
xchg
cltd
push
jns
insl
adc
and
dec
pop
aaa
fdivrp
inc
mov
mov
fucomi
arpl
sbb
lahf
fwait
inc
mov
dec
adc
and
mov
cmp
and
pop
aam
lods
repz
fs
data16
add
jge
add
popf
roll
fs
xor
push
jne
xor
jg
call
xlat
mov
push
movsb
jg
pop
xchg
add
push
cmp
or
inc
jae
fdivrp
mov
push
dec
jg
sub
push
popf
inc
and
hlt
filds
jns
je
mov
cltd
jl
shlb
jl
pop
or
jg
aad
hlt
inc
mov
sub
lds
push
mov
fcomi
mov
outsl
inc
sbb
xchg
adc
mov
data16
sbb
rcl
jp
sti
hlt
ret
loop
in
jns
stos
hlt
loop
xchg
add
xchg
or
inc
repz
inc
and
stc
les
sbb
pop
jae
inc
call
fdivrl
dec
xor
test
xchg
shl
lret
add
cmpsl
iret
adc
je
test
je
cmc
cmpsb
mov
insb
jl
faddl
je
mov
mov
inc
fdiv
test
mov
push
clc
cmp
jno
or
divl
movsb
addb
mov
fdivr
xor
sbb
lods
lret
pop
pop
jl
inc
xor
into
stos
push
xchg
loope
mov
dec
pushf
jecxz
int3
jbe
jmp
and
pop
in
dec
or
xor
scas
jmp
or
sti
mov
pop
pushf
pop
ljmp
popf
loopne
push
stos
push
cmp
push
rol
xorl
push
or
jo
cmc
xchg
jb
xor
add
mov
jmp
xchg
push
icebp
xor
push
mov
mov
jnp
inc
fcoml
push
pop
outsl
out
pop
clc
and
jle
dec
cwtl
iret
pop
into
das
jecxz
sub
xchg
cmp
ret
adc
imul
cmpsl
push
inc
mov
cmpsl
xchg
and
push
cmp
stos
aas
out
sub
pop
xlat
out
push
rorb
push
or
cmpsl
mov
lahf
jg
gs
add
sarl
cli
daa
mov
xchg
jne
sbb
push
test
dec
movsb
push
mov
fdivrs
and
push
adc
out
nop
test
out
aam
movsb
test
xchg
adc
sub
jecxz
mov
push
xor
add
sub
insl
cmc
fsubrs
push
or
inc
or
xchg
fildll
stc
sbb
sbb
pop
xor
or
hlt
cmp
shlb
push
out
pop
movsl
cld
jle
ljmp
xchg
aad
jno
mov
cmpsb
jnp
xchg
loopne
sbbl
inc
mov
mov
sbb
and
inc
sti
mov
xchg
sbb
xor
imull
sbb
push
cmp
xor
repz
mov
popf
sbb
int3
mov
xchg
sbb
pop
data16
std
fildl
cmp
sahf
xlat
push
xlat
push
rorb
cmpsl
lcall
sub
dec
mov
in
add
jne
clc
ficomps
mov
pushf
mov
jmp
sub
mov
js
adc
roll
jne
fnsave
cli
in
inc
or
shrb
sub
leave
dec
call
jb
mov
daa
test
loop
ds
jp
ja
mov
je
sbb
in
ljmp
out
stc
inc
insb
or
lahf
dec
pop
popf
test
push
out
jmp
xchg
mov
jmp
iret
cwtl
inc
and
lahf
push
sbb
out
pop
mov
shrl
xchg
pop
and
push
pusha
aam
xor
pop
sub
dec
gs
insl
imul
mov
xchg
dec
mov
movsl
pop
push
stos
add
icebp
scas
arpl
rorb
jbe
decl
pop
jmp
dec
mov
jge
gs
sub
dec
ret
pop
adc
dec
shll
inc
jecxz
jmp
js
nop
cwtl
mov
dec
pop
das
xchg
into
imul
pusha
ret
stc
out
inc
push
test
test
jne
cmp
clc
subb
and
pop
and
sbb
and
lret
ret
daa
sub
mov
inc
pop
out
and
aad
mov
mov
xchg
out
fisubs
int3
test
xor
xor
or
in
mov
popa
pop
adc
xchg
popf
cmp
lret
push
popa
jp
fdivp
add
cmp
fisubl
ljmp
cs
mov
jnp
sbbb
cmp
push
push
dec
imul
sbb
insl
inc
js
int3
pop
xchg
shlb
and
outsl
je
mov
stos
xlat
xchg
fcmovu
push
fisttpl
cwtl
jp
arpl
repnz
les
pop
jg
or
or
hlt
lock
jg
jl
cmpsb
jnp
xchg
lret
fwait
popa
inc
fidivrs
popa
fisubrl
add
xchg
xor
imul
push
leave
push
mov
std
rcl
fdivrs
les
fneni(8087
stos
es
push
mov
addl
jmp
imul
cltd
idivb
repnz
in
ss
push
jmp
sub
std
dec
addr16
int3
gs
and
daa
pop
nop
test
cmp
jge
rcll
hlt
int3
jecxz
mov
adc
sahf
inc
push
adc
out
jb
sbb
enter
das
stos
dec
cmpsb
loope
sahf
pop
ficompl
push
popa
sub
jno
mov
movsb
cmp
outsb
inc
jb
jl
dec
inc
inc
and
int3
test
pop
scas
sbb
arpl
jle
cwtl
mov
fdivs
jnp
jp
aad
pop
loopne
adc
cmp
add
xchg
fcmovbe
jnp
cmp
ljmp
cmpsb
mov
mov
int3
loope
mov
lcall
ds
pop
shlb
dec
mov
aam
mov
add
addr16
cmp
enter
out
mov
in
int
push
mov
pop
lcall
jl
jae
cltd
lods
roll
dec
jns
in
bound
stos
sahf
jle
xlat
rcrl
ret
rcrl
add
sub
gs
sbb
loopne
ljmp
pop
pop
pop
mov
mov
cld
sub
nop
movsb
and
in
mov
loopne,pt
in
add
je
dec
xor
dec
add
mov
ds
mov
jmp
push
dec
push
push
mov
sbb
ret
scas
pop
les
xchg
movsl
xchg
lods
lret
mov
mov
inc
inc
movd
popa
or
ret
pusha
xchg
loope
lock
fwait
je
dec
fistl
rclb
jo
jp
mov
or
cmp
aas
enter
in
test
jo
jmp
rol
arpl
movsb
or
pop
cmp
shll
mov
inc
mov
push
nop
push
sbb
jne
mov
es
adc
or
cld
jp
enter
ds
iret
cld
loopne
xchg
test
movsb
into
sub
xchg
push
cmp
adc
movsl
movsb
cmp
ret
jmp
push
lea
out
cld
into
cltd
int3
cltd
xor
fsubrs
sbb
jno
adc
loop
ret
mov
sub
mov
mov
iret
sbb
cmp
test
arpl
pusha
mov
dec
or
int3
out
test
or
add
popf
idivl
push
hlt
xor
mov
clc
mov
mov
je
mov
xor
mov
jmp
imul
stc
push
xlat
negb
cmc
and
mov
cmp
xor
out
pop
test
fst
out
mov
incb
popf
fstpl
add
push
movsb
mov
mov
andl
cli
inc
jl
add
push
insb
push
cwtl
mov
lds
ja
push
test
in
pop
stos
pop
lret
mov
push
adc
adc
lret
dec
int3
pop
call
int
scas
lods
pop
cmp
add
out
mov
lods
pop
pusha
pop
jae
and
mov
jmp
sbbw
xor
aas
roll
jb
xchg
arpl
xchg
fs
adc
dec
xor
jb
jnp
push
cli
add
das
mov
test
fldenv
insb
aam
in
addb
mov
jae
mov
pop
sbb
jnp,pn
mov
sub
xchg
pop
dec
sub
test
test
sub
mov
adcb
test
repnz
call
push
fs
hlt
adc
xchg
movsb
adc
mov
loopne
ds
dec
fbstp
or
mov
mov
jne
das
cmp
mov
xchg
sti
mov
xor
lahf
jb
jg
fld
imul
jecxz
push
adc
jle
add
xor
addl
js
inc
jg
inc
fdivl
mov
push
or
loopne
mov
iret
add
xchg
out
mov
pop
sbb
movsl
mov
mov
mov
jo
insb
les
mov
aam
jb
or
pop
loopne
push
testl
jmp
stos
xchg
push
pop
arpl
jp
adc
xchg
imul
test
mov
ret
movsb
mov
test
popf
dec
outsl
arpl
inc
dec
xor
loop
push
imul
rorb
lods
out
imul
loop
cmp
mov
rolb
push
int
popf
push
pop
adc
xchg
jl
into
lods
jge
or
aam
jno
mov
xor
hlt
repz
stos
xchg
push
adc
lods
out
popa
or
outsb
fsubrs
xchg
pop
rcl
or
push
inc
into
dec
repnz
ss
add
shl
mov
loopne
popf
clc
xorl
mov
jp
xor
stc
mull
pop
push
shl
lds
aad
test
divl
and
jge
mov
mov
insl
mov
arpl
pop
add
adc
sbb
push
and
sbb
loopne
insb
test
aam
jns
lret
andl
push
mov
movsb
mov
xor
jae
test
xlat
aam
imull
das
sub
xor
bound
aaa
imul
lcall
push
gs
add
test
or
sbb
mov
xchg
je
or
subl
rcrl
stos
and
mov
daa
mov
dec
insb
pop
cmp
and
stos
adc
out
add
inc
xchg
jle
repz
sbb
into
pop
adc
cltd
ss
inc
es
xchg
jg
push
std
js
sub
imul
and
arpl
dec
test
sub
test
fwait
outsl
mov
inc
js
push
inc
in
pushf
mov
adc
lds
and
xchg
xor
insb
mov
vmovhps
aaa
sub
mov
pop
sbb
jb
add
dec
jmp
sub
or
icebp
sbb
xchg
push
mov
sub
gs
mov
xchg
lahf
scas
or
push
test
xchg
fisttpl
and
ficompl
lods
jmp
clc
sub
repz
popa
aas
jae
outsb
sub
push
hlt
xor
in
jbe
add
mov
das
test
push
cwtl
push
mov
adc
aas
and
xor
mov
xchg
fwait
out
jmp
in
mov
pop
hlt
cs
pop
loopne
dec
xor
cli
sbb
adc
out
out
jle
ret
sub
bound
xchg
mov
add
xor
cmpsb
out
cs
mov
sub
and
fmull
icebp
jecxz
cmpsl
das
or
lds
in
scas
dec
dec
sbb
xchg
sarb
push
mov
dec
xchg
add
lahf
fs
push
pusha
lods
mov
xchg
adc
sub
pop
incb
or
xlat
cmp
cmp
sub
sti
lss
cmpsb
mov
or
wrmsr
loop
mov
mov
sbb
icebp
push
sbb
mov
js
add
rcl
sarl
nop
in
cld
in
addr16
and
stos
in
out
lods
subb
ja
cmp
sub
jae
push
dec
sbb
outsl
out
mov
inc
aaa
scas
and
scas
lahf
int
add
int
pop
jmp
outsl
cmc
mov
xchg
cli
aas
into
test
cmpsb
mov
insl
cmp
xchg
scas
gs
jg
mov
xchg
mov
test
movsl
and
dec
jl
popa
pop
movb
gs
xchg
jecxz
enter
pop
jae
pop
aad
dec
cmp
shl
aam
stos
push
mov
mov
pop
mov
xlat
loop
js
xchg
push
sbb
dec
orl
movsb
and
sub
cmpsl
xor
stos
mov
sub
in
xor
mov
xchg
mov
fwait
lcall
mov
xchg
cmp
popf
push
adc
cwtl
push
imul
sbb
ficompl
mov
sub
xorl
mov
xor
push
mov
pop
cmpl
or
loopne
and
enter
or
or
shll
dec
aas
ret
inc
aad
std
sub
dec
add
jp
fwait
push
imul
test
repnz
push
mov
cmp
dec
sub
imul
xchg
int3
mov
push
add
pop
mov
mov
jl
mov
or
xor
or
es
shll
and
sbb
daa
sbb
or
mov
out
inc
fs
adc
pop
xchg
cld
sbb
es
sub
sarb
orb
popf
mov
mov
cli
add
xchg
mov
mov
sbb
faddl
push
add
je,pt
movsl
rcll
addr16
sub
enter
pop
mov
jne
mov
pop
xchg
stos
jg
rcrb
jno
adc
mov
xchg
cmp
pop
xchg
addr16
add
adc
push
and
loop
push
jg
fucomip
mulb
jnp
mov
test
sub
scas
js
push
xor
push
inc
fs
aaa
mov
inc
jge
out
dec
ljmp
jp
xchg
sub
scas
mov
or
mov
adc
inc
call
mov
lods
jno
push
xor
and
shll
push
aas
adc
and
xchg
in
sti
cli
jns
push
in
adc
mov
sbb
pop
sahf
xor
fdivrl
xor
gs
lret
sbb
push
or
mov
sbb
add
neg
int3
mov
and
out
xor
adc
sub
imulb
cmpsb
sub
in
push
mov
ja
xor
arpl
jg
rcrb
js
mov
jno
scas
cld
and
lahf
fmull
rcll
dec
mov
sbb
adc
aaa
or
out
and
outsl
add
xchg
ret
mov
pop
push
mov
imul
xor
push
fwait
adc
aam
lea
cmpsl
notl
pop
repnz
and
cmp
dec
setns
sbb
and
mov
imul
jno
stos
stc
mov
inc
and
shrl
sub
stos
aaa
push
cltd
or
mov
shll
jae
lahf
inc
pop
pop
mov
xor
ds
push
jns
and
mov
rorl
mov
sahf
and
ficompl
mov
sub
mov
mov
push
aad
shrb
iret
inc
jecxz,pt
mov
or
repnz
dec
or
loope
add
xor
dec
and
clc
xor
stos
enter
mov
mov
pusha
fnsave
gs
setns
pop
adc
out
jb
mov
iret
jns
shrl
call
ss
imul
jmp
lret
mov
neg
jg
and
mov
jmp
add
out
jl
fsubrl
rcll
dec
cmp
sub
movsb
jg
daa
sbb
adc
mov
je
jle
cltd
in
push
xorl
jecxz
xorb
lret
pop
lock
imul
lret
cmpsb
xchg
sub
add
dec
inc
jo
dec
loopne
lods
movsl
adc
and
ret
or
push
popf
pop
cmc
insb
imul
adc
adcl
adc
or
pusha
jns
sbb
push
mov
in
sub
sbb
push
sub
adc
mov
scas
and
push
mov
inc
mov
adc
mov
push
cmpsl
cwtl
fcompl
int3
sub
push
daa
into
fadd
inc
daa
push
jnp
adc
sub
lret
pop
int3
iret
inc
add
out
cli
mov
movsb
and
cmpsb
and
xor
outsl
sub
pop
int
dec
stc
loope
ja
ljmp
jae
pop
rorl
lods
imul
cmpsl
jl
and
mov
js
mov
dec
xchg
cmp
dec
sbb
shll
lea
sbb
cld
ret
nop
cmp
inc
lret
aam
aas
mov
jg
xor
dec
aaa
and
stc
cmc
cmp
inc
push
rcrb
aas
push
in
lock
pmaxub
loopne
pop
lcall
jg
int
sub
bound
in
shrb
cmc
jl
add
cmpsb
testl
xchg
imul
stos
dec
jb
out
std
xor
or
jns
adc
sub
mov
sbb
mov
sbb
popl
xor
cmpsb
adc
or
scas
mov
xchg
inc
test
scas
in
cmp
push
ficomps
out
cld
xchg
lahf
mov
mov
jg
mov
ja
push
push
push
insb
js
mov
adc
aas
jl
jmp
shrb
les
shrl
xchg
xlat
loope
cmpsb
dec
xchg
call
cwtl
sub
cmp
push
add
sti
mov
push
ret
mov
rcrb
rsm
pop
mov
bound
ret
xchg
ljmp
fnstenv
rcll
aas
movsl
jg
sub
aad
lock
xor
fdivrs
orb
xchg
cmp
fimull
mov
daa
cmp
stos
in
push
cltd
fsubr
insl
mov
ja
dec
and
dec
out
mov
mov
je
lret
xchg
pop
inc
ds
ffreep
pop
rorb
lcall
mov
jmp
out
inc
xchg
pop
sub
mov
fmulp
repz
sahf
stos
inc
js
add
xor
adc
inc
iret
xchg
pop
popa
out
add
xchg
or
outsb
push
cli
int3
subb
xor
aad
jge
mov
jl
imul
inc
dec
shr
in
icebp
mov
sub
std
js
pop
mov
cmpsl
push
xchg
jge
adc
lret
pop
aam
and
movsl
in
ds
sub
mov
sbb
jp
dec
cwtl
mov
shr
shll
push
pop
dec
push
shl
fcompl
orl
pop
and
int3
inc
pusha
aas
inc
adc
dec
xor
mov
jmp
inc
xchg
sbb
cltd
xor
div
push
mov
stc
push
rol
out
sahf
cli
out
sarl
inc
arpl
daa
inc
jle
mov
repz
imul
push
ljmp
ret
pop
loopne
push
insb
cmp
hlt
sbb
insb
fldcw
adc
pop
pushf
stos
rclb
scas
sbb
fisubl
test
dec
and
out
mov
movsl
jb
outsl
cwtl
pop
dec
sbb
enter
data16
jge
mov
loopne
sub
xchg
ds
fwait
bound
loopne
cld
push
pop
fdivrs
rorb
adc
jmp
sub
cmpsl
pushf
xchg
stc
mov
sub
fidivrl
cmp
mov
mov
adc
shrb
je
fdivs
add
outsb
pushf
push
xchg
sti
fwait
jb
bound
dec
jae
xchg
mov
movsb
es
sbb
jae
jge
mov
lock
mov
mov
call
xchg
pop
js
cmc
add
das
loope
orb
imul
push
mov
insb
jge
imul
inc
sub
or
repz
icebp
in
fnstsw
sbb
cmp
sti
adc
outsl
js
es
imul
add
pop
cmc
ret
lds
cmp
pop
cmp
cs
adc
push
mov
mov
pushf
stos
js
mov
jae
jae
std
jge
mov
sbb
and
sub
outsl
iret
mov
jl
xchg
ret
aaa
sbbl
repnz
das
int3
shrb
jnp
xor
xchg
xchg
and
stos
lret
jge
pop
cmp
popf
or
push
mov
test
fimuls
jp
push
stos
mov
adc
inc
shlb
test
fnstcw
fnstcw
enter
ljmp
mov
lods
xor
sub
jmp
pop
shlb
cld
xor
cmp
popf
add
sbb
pop
arpl
and
sbb
jge
xor
or
pop
scas
mov
sbb
xor
idivb
je
fiaddl
mov
fimull
loope
mov
pushf
pop
push
shl
imul
roll
or
fmuls
sub
mul
sub
repnz
cmp
ret
iret
push
xchg
and
mov
in
lock
movsl
les
or
jo
dec
inc
subb
adc
mov
out
cld
cmp
add
adcb
movsb
xchg
ja
mov
xchg
or
mov
clc
inc
or
daa
mov
fdivrp
mov
cld
pop
mov
add
mov
aas
mov
pop
lret
jecxz
xchg
fmulp
add
xor
imul
nop
leave
movsb
jne
aad
test
jle
shl
icebp
push
or
inc
pop
inc
xchg
mov
pop
rorl
push
push
test
or
clc
loop
jb
std
test
jl
in
into
je
int
pop
sti
sarl
aas
pop
or
jb
sbb
push
cli
adc
fisubs
mov
jmp
shrb
mov
push
lock
test
ret
jae
xor
add
sbb
insl
fisubl
jl
pop
outsb
and
mov
aaa
aad
push
cmp
dec
or
add
mov
nop
das
testb
cmpb
cmpsl
xor
adc
stos
sbb
jae
sbbl
pop
sub
or
mov
push
aam
addr16
inc
dec
ljmp
pusha
popf
sbb
mov
jp
lahf
inc
test
into
mov
je
cld
inc
fistl
push
aaa
xor
and
add
leave
icebp
icebp
ss
adc
icebp
inc
test
movsl
cmpl
shlb
push
sub
sarb
fcomps
dec
adc
lods
push
ds
movsl
push
cwtl
mov
push
into
jmp
mov
dec
cmpsl
add
mov
push
xchg
jge
add
popa
sub
loop
inc
or
daa
pop
jb
icebp
jae
lds
aad
cld
cmpsb
out
pop
int3
stos
jno
cltd
cld
mov
jg
fistpl
ss
xchg
das
push
negb
cmp
hlt
xchg
out
out
xor
cwtl
jmp
lods
mov
dec
dec
sarl
roll
fistl
loope
cmp
lods
pop
push
popa
fs
dec
pop
aaa
frstor
data16
jae
lahf
push
cmp
addb
fwait
pop
jbe
nop
inc
jg
add
iret
adc
sbb
xorb
jl
fmull
adc
fcomps
add
sub
sub
sbb
lods
dec
dec
in
aad
cmp
mov
stos
data16
aaa
xchg
insl
and
mov
pop
stc
mov
add
mov
sub
add
ljmp
xchg
or
mov
or
and
sbb
fdivrs
add
lds
stos
dec
and
sub
jnp
inc
mov
repnz
dec
lds
cmpsb
pop
and
jnp
jecxz
lcall
fimull
cmp
fisttps
cmpsb
inc
out
decb
inc
repz
pop
and
xor
scas
es
jl
add
xor
cli
test
push
nop
xchg
outsl
daa
add
pop
cmp
aam
push
xchg
xlat
jg
push
dec
and
in
daa
xor
scas
mov
ror
push
sub
mov
aas
into
mov
rclb
or
add
cmpsl
out
push
sahf
cltd
arpl
push
sbb
fisttps
rclb
sbb
jg
lcall
sub
lds
mov
xchg
in
add
ja
dec
sbb
xor
outsb
inc
mul
stos
xchg
sub
shl
incl
int
xchg
jbe
and
rcrl
mov
fwait
xchg
and
in
scas
mov
mov
sub
sbb
test
ss
into
push
aaa
adcl
mov
mov
data16
in
fs
and
fwait
jge
xor
adc
and
adc
in
out
pop
movsl
jbe
call
jb
sub
aaa
adc
shl
and
dec
imull
add
jge
dec
imul
push
push
pop
push
nop
gs
out
jns
inc
fstpl
lcall
jp
cmp
aas
add
lods
push
sti
mov
or
jno
outsl
xorb
testb
sub
movl
sbb
inc
sub
sahf
pop
int
hlt
test
mov
popf
xchg
in
xor
fists
repnz
out
mov
fcoml
inc
gs
imul
sub
mov
stc
push
mov
sahf
ss
push
push
in
or
data16
into
ror
jmp
pop
add
add
shrb
or
inc
cmc
jmp
xlat
fwait
xchg
jp
subl
popf
out
mov
fists
mov
insb
jae
iret
js
sbb
hlt
inc
ror
insl
ss
sub
dec
movsl
test
test
push
das
add
jmp
insb
in
in
cmp
mov
js
lock
imul
scas
imul
adc
lret
inc
shrl
push
popf
cli
or
adc
stos
and
jns
sbb
leave
les
xchg
jmp
dec
cld
std
fcos
adc
jns
mov
push
ret
xor
daa
jo
div
cmpsb
jne
push
ret
ljmp
mov
mov
adc
mov
test
sbb
ret
inc
stos
add
inc
xchg
cmc
aam
cmp
pushf
or
imul
and
adcb
subb
xchg
jbe
jnp
or
pop
inc
rol
sub
dec
pop
fcomps
notb
ficoms
mov
push
jns
mov
pop
mov
xor
int
out
pop
jmp
and
cltd
fcoms
push
popf
jnp
rol
test
fnstenv
loope
lds
push
ret
xchg
das
sahf
imul
cld
mov
aas
adc
ds
push
icebp
push
mov
dec
push
push
jne
test
aaa
fisubrs
pop
lods
sbb
stc
mov
jge
cmp
test
inc
jnp
and
inc
cmp
and
jo
sub
push
pop
push
mov
mov
dec
mov
fcmovnb
fs
push
xor
popl
xchg
cmp
and
aas
ret
fldcw
jp
cmpsb
pop
jl
sub
gs
mov
xor
and
pop
and
in
mov
sti
lock
mov
cld
mov
outsl
xor
jg
ss
popa
mov
das
push
xchg
stos
flds
out
dec
ret
push
xchg
dec
insb
push
inc
pcmpeqb
test
in
and
add
xchg
cmp
or
popa
or
mov
dec
mov
xor
xchg
jp
fwait
outsb
inc
pop
sbb
fdivr
daa
dec
push
pop
pop
sub
mov
and
inc
daa
outsb
pop
push
mov
jl
ret
std
fdivrl
ficomps
ret
out
xchg
imul
cmp
and
fwait
jle
popa
testl
in
ss
les
popf
mov
fmulp
and
sahf
mov
cltd
pop
dec
and
mov
add
xchg
fistpll
mov
nop
repz
push
or
mov
xchg
push
mov
dec
jecxz
or
arpl
fisubs
pop
iret
arpl
add
mov
and
adc
into
mov
hlt
jp
pusha
and
adc
cltd
add
fdivp
mov
pushf
sbbb
fsubl
mov
aad
xchg
mov
fistl
mov
cmp
ljmp
inc
bound
push
out
and
mov
enter
xor
sbb
xchg
add
and
aaa
pop
jne
lahf
or
mov
and
jmp
int3
sub
xchg
lea
cmp
cwtl
incl
movsb
cltd
sbb
insl
ja
rep
stc
sahf
push
mov
cwtl
in
arpl
pop
push
xor
jp
out
or
shll
sbb
cmp
out
pop
jmp
cmp
or
pop
adc
or
repz
mov
inc
sti
adc
mov
aam
int3
dec
mov
sub
fs
orb
jns
enter
pusha
aam
xor
lcall
jne
std
lea
lock
push
faddl
aaa
sub
rorb
shrb
adc
icebp
rcr
mov
test
js
mov
push
and
test
lret
pop
push
xchg
sub
adc
movb
popf
push
or
shll
cs
outsl
xchg
add
mov
jp
movsb
cld
mov
jmp
or
mov
orb
sub
jno
sbb
rcll
add
daa
pop
fs
mov
sarb
or
aaa
out
aam
xchg
sub
das
bound
lock
mov
cmp
scas
pop
idivl
mov
pop
cs
pop
sbb
sbb
dec
dec
mov
sub
lds
aam
dec
inc
push
and
and
sub
test
or
ret
jp
add
jae
xchg
or
sub
icebp
mov
cmp
mov
xor
out
jmp
cmpsl
sbb
lea
insl
les
hlt
shrb
fiaddl
lahf
adcl
push
jecxz
cli
clc
push
push
mov
pop
mov
pop
adc
xor
and
sub
lcall
mov
jne
mov
sub
add
jmp
jne
pop
ror
imul
fisubl
imul
popa
rcrl
adc
fsubrs
pop
inc
mov
push
xchg
lahf
pop
dec
jns
int
adc
movsl
sbb
aas
aaa
pop
xchg
or
sub
mov
fcoms
dec
bnd
jle
and
pushf
inc
cld
inc
sbb
and
mov
xor
fnsave
cmp
sbb
mov
stc
nop
ljmp
loopne
cs
popf
cmpsl
or
xor
lea
cmp
mov
adc
jecxz
xor
lock
mov
gs
xchg
out
stc
cltd
push
jg
add
adc
sub
xor
adc
cmpsl
insl
daa
push
stos
sbb
addr16
cmp
stc
sub
je
xchg
mov
or
adc
push
add
testb
jecxz,pt
lahf
test
int
jo
stos
sbb
imul
jle
cmp
xor
adc
jb
pop
jae
mov
mov
in
adc
loop
fcomps
movsl
push
mov
dec
stos
out
xchg
push
rcrb
mov
aam
bound
add
aad
popf
cmp
ja
hlt
insb
mov
ja
imul
inc
out
rcrl
dec
gs
jae
jno
sbb
xchg
jecxz
cmp
cmp
cli
xor
cmpsb
out
sbb
dec
leave
dec
jg
ja
std
xlat
mov
add
mov
jg
push
movsb
dec
fstl
xor
fidivrl
andb
lahf
jl
mov
and
aad
scas
inc
aad
xor
clc
test
mov
dec
icebp
adc
add
stc
sti
cmpsl
jmp
ss
push
mov
push
xchg
jp
dec
xchg
jecxz
pushf
iret
pusha
add
fstpt
or
mov
cld
pop
scas
iret
enter
std
add
jmp
sbb
mov
sub
ret
mov
or
mov
jns
dec
setne
lods
cmp
jnp
addr16
sub
xor
loopne
jmp
mov
jnp
adc
xor
cmc
dec
orb
out
out
adc
sahf
sub
or
push
or
push
clc
in
fsubrp
out
cwtl
mov
sbbb
scas
cmpsl
jno
addb
enter
or
push
sbb
ret
fimull
dec
rcll
cmpsl
andl
cmp
roll
outsb
jle
insb
mov
adc
bound
ret
cmpsb
divb
pop
arpl
aad
cs
jmp
addr16
in
clc
xor
cs
mov
pop
cmp
int3
rorb
xor
xor
ss
out
pop
push
mov
xor
int3
outsb
lcall
decb
fwait
mov
fldt
xor
jmp
pop
mov
testl
iret
rorl
and
adc
rclb
jmp
outsl
dec
jle
loop
inc
adc
iret
fsubs
adc
cmp
mov
rolb
mov
aad
ja
dec
test
and
mov
pop
in
movsb
lods
lods
push
rclb
add
ljmp
cmpsl
pop
lods
add
push
dec
nop
outsb
cmp
mov
xchg
inc
jp
insl
fldl2e
stos
jo
sub
pop
and
cmpsl
and
mov
inc
cmp
cmp
sub
scas
call
jg
cmp
mov
in
or
scas
pushf
test
loopne
scas
mov
mov
adc
xchg
sahf
adc
fs
repnz
pop
dec
dec
shll
loope
dec
test
push
test
aad
push
inc
or
test
cmp
xchg
xor
xor
jle
jp
inc
rorb
aaa
outsl
jp
mov
dec
jo
sub
pop
xor
sbb
in
adc
inc
std
fisubrs
icebp
and
in
jbe
test
cmp
add
hlt
aaa
test
pop
jge
lods
pusha
adc
addb
cmpsb
cmp
test
dec
rclb
pop
pop
pop
dec
gs
lea
jmp
icebp
pop
icebp
dec
mov
jbe
add
negb
xchg
lret
insb
enter
mov
iret
jo
mov
mov
xor
mov
mov
cmp
fcmovb
adc
movsl
stos
fs
daa
inc
and
jecxz
dec
ret
mov
bnd
mov
scas
rorl
jle
imul
mov
rcl
mov
cmpsl
sti
jne
pop
xchg
pusha
and
xchg
pop
aad
pop
std
cld
pop
lock
dec
or
arpl
dec
sar
pop
movsb
xchg
loopne
xor
cmpsb
sub
cs
xchg
add
pop
sti
sbb
mov
mov
inc
jnp
sbb
xchg
push
mov
push
outsl
pop
fadd
incl
sbb
adc
addr16
xor
je
sbb
aam
add
imul
stos
mov
or
xor
pop
add
ds
jb
adc
out
jae
fisubrl
fcmovnb
and
add
fcmovnbe
mov
aaa
push
int3
in
or
ljmp
mov
xchg
jbe
in
subl
jmpw
or
cmpsb
imul
in
push
or
enter
or
fidivrl
xchg
adc
mov
sub
cmp
mov
cmp
cmp
or
sbb
adc
pop
testl
js
dec
dec
sbb
mov
cmp
rolb
fisubl
dec
mov
outsl
mov
jo
imul
mov
pop
xor
cwtl
enter
sbb
ja
sbb
int3
sub
lcall
fmuls
dec
scas
cmpsl
fcompp
jg
clc
mov
mov
cmp
add
ljmp
add
adc
lods
sbb
cmp
xchg
repnz
in
bound
adc
add
mov
xor
push
sbb
jb
lods
shl
je
data16
dec
pop
enter
fbld
inc
decl
jne
lret
mov
pop
js
jne
cmp
cs
inc
movsl
or
aaa
inc
lea
fidivs
addb
dec
shll
mov
or
and
aaa
pop
aam
std
jl
cmp
or
addr16
push
mov
int3
jecxz
add
mov
iret
sbb
js
cmp
inc
inc
cmp
testb
enter
cltd
cmc
cld
mov
repz
pop
push
stos
paddb
sub
fstpl
and
mov
lock
or
iret
ja
dec
movsb
stos
shrb
pop
insb
lcall
dec
aas
cmpsl
out
nop
testb
cmp
cwtl
add
sub
cs
jge
mov
push
and
dec
and
mov
xlat
adc
stc
xlat
mov
jle
out
test
and
in
cli
arpl
push
cld
movsb
ret
fiaddl
add
cmpsl
adc
movhps
sub
sbb
fiadds
fsubrl
mov
stos
jp
aam
mov
cmp
stos
dec
lret
push
cmp
mov
cli
add
and
mov
mov
and
std
mov
ret
adc
inc
nop
push
xor
inc
push
test
pop
fcoml
pop
pop
dec
mov
cmp
cmp
jg
ljmp
test
ss
push
lcall
addr16
push
xchg
mov
pop
adc
dec
push
cmp
mov
add
mov
mov
into
out
loop
mov
loopne
mov
and
mov
sbb
mov
jno
mov
adc
mov
pop
sbb
mov
hlt
jb
add
fwait
roll
jge
repz
outsb
pop
cmc
gs
pushf
inc
in
push
neg
pop
xchg
jae
mov
aam
or
adc
push
les
and
negl
pop
orl
in
fists
mov
adcl
bound
fs
es
mov
dec
cs
adcb
loop
addr16
mul
mov
jl
lea
dec
sbb
mov
int3
out
push
mov
jne
add
push
lret
lahf
aam
jnp
cli
movsb
mov
and
jp
aam
xchg
mov
fninit
into
jo
xchg
lret
sub
js
sub
das
cmp
fistps
jo
out
cmp
loop
dec
xchg
hlt
push
ret
mov
xchg
adc
pop
les
insb
mov
pushf
xor
xchg
dec
ljmp
sbb
and
push
jbe
shr
addl
daa
cmpb
sub
scas
dec
andb
test
or
ret
adc
or
adc
mov
pop
sub
fs
sbb
mov
fcomp
sub
xlat
mov
inc
sbb
rorl
loope
mov
cmp
movsl
iret
cmc
int
and
sub
stos
clc
dec
mov
fdivrl
push
pop
xor
adc
lcall
push
sahf
lahf
out
test
and
popa
sub
push
mov
dec
and
lock
pop
mov
inc
cmp
sub
iret
push
and
mov
jmp
movsl
jmp
call
pop
subl
fstl
divl
sbbl
pop
mov
and
adc
scas
out
jnp
test
mov
inc
adc
add
pushf
and
aaa
cmp
inc
movsl
jecxz
mov
test
mov
mov
negb
dec
and
add
fimull
mov
jg
test
pop
clc
push
jge
and
sbb
pushf
ss
mov
sub
mov
push
adc
fstl
inc
mov
addr16
jb
cmp
xorb
add
xchg
pop
sub
mov
sub
adc
je
pop
insb
xor
inc
sbb
adc
dec
or
adc
add
xchg
sub
push
or
je
xor
das
adc
cltd
test
jg
imul
scas
or
cmpsb
mov
xchg
movsb
adc
lret
push
aad
and
xchg
lret
lock
negl
sbb
fmuls
gs
adc
ja
jle
pusha
push
cmc
mov
adcb
inc
int
pop
xchg
push
dec
add
rclb
bound
iret
imul
movsb
fldcw
incb
xchg
lahf
inc
jns
bound
call
inc
dec
stos
sbb
and
ficomps
add
negl
inc
pop
aas
xorb
push
jbe
enter
lods
fiadds
mov
leave
mov
cmpsb
jmp
in
push
out
sub
sahf
stc
xor
jne
jl
lcall
mov
xchg
bound
movsb
nop
daa
pop
in
loopne
in
stos
jbe
jns
out
call
push
xchg
orb
lcall
int3
xchg
jge
mov
and
mov
stos
mov
in
cmpsb
imul
or
dec
cwtl
aam
xor
xchg
les
sbb
or
jo
cmpsl
xor
int3
push
mov
mov
popa
lcall
sbb
mov
xchg
stos
or
sub
mov
or
push
clc
scas
ja
mov
xor
gs
addr16
and
lods
imul
pusha
inc
mov
jg
pop
xor
push
cmc
sbb
adc
sbb
pop
adc
adc
sub
fmulp
jg
pop
and
andps
shl
or
sbb
lock
imul
out
sbb
mov
mov
out
sbbb
cmc
xor
pop
dec
std
jl
fcoml
ror
das
test
outsl
fwait
inc
jle
sub
insb
sub
mov
or
sub
or
mov
add
xchg
fdivr
xchg
mov
and
adc
pop
outsb
out
lock
adc
popa
insb
or
mov
int3
and
jb
cmp
xchg
inc
adc
or
mov
in
or
repnz
mov
imul
jnp
and
loope
out
into
aam
leave
sbb
pushf
mov
outsl
fimull
inc
jecxz
loope
sbbb
mov
mov
fwait
popa
jb
fdivrs
je
lock
add
jg
in
adc
ja
sub
lea
test
ret
addb
lret
adc
stos
jnp
push
inc
and
int
outsb
stos
movsb
jo
cmpsb
pop
cltd
dec
shlb
or
sbb
movsl
jecxz
scas
fwait
or
iret
ds
nop
iret
inc
push
in
xchg
adc
push
in
pop
out
xor
mov
xor
jo
fcoms
lock
call
dec
setge
stos
mov
cmc
aad
psubw
fwait
loopne
mov
aas
mov
push
cmpsl
mov
dec
push
movsl
shll
mov
push
loopne
add
stos
xor
xlat
push
sub
popa
xor
insl
imul
lds
arpl
notl
push
sub
mov
push
out
jae
lods
lcall
jbe
fnstenv
xchg
jo
sbb
mov
push
push
mov
mov
adc
pop
jp
sbb
xor
pusha
jl
movsl
jbe
insl
jbe
inc
mov
push
bound
fstl
cltd
pop
mov
push
hlt
cmpl
lcall
cmp
mov
in
dec
xchg
pop
mov
jb
ret
divl
sub
pop
push
mov
mov
xchg
daa
ficoms
inc
push
aas
subb
xchg
and
cwtl
mov
mov
je
lcall
test
mov
enter
or
mov
mov
lret
add
cmpl
adc
pop
scas
fs
adc
gs
clc
dec
adcl
test
out
sbb
cmp
and
push
inc
push
cli
or
jle
mov
push
xor
sub
inc
sbb
xchg
jge
pop
sub
xchg
in
fdivrs
popa
adc
lds
jbe
test
hlt
cmp
bound
test
or
or
ljmp
jl
popf
mov
inc
inc
aam
fcompl
loop
jno
cmp
fmull
jns
pop
mov
je
inc
jmp
outsb
in
aaa
mov
push
sub
fcompl
add
lea
nop
fidivrs
sub
jo
movsb
mov
je
dec
mov
xorb
push
cld
xor
addr16
mov
mov
jo
mov
rol
sub
add
mov
stos
hlt
cmp
or
lea
fwait
sti
data16
int
push
hlt
inc
jae
ja
mov
push
mov
hlt
cltd
cs
popa
aas
mov
mov
outsl
adc
mov
cmp
insb
mov
fidivs
out
jge
dec
ds
test
push
jae
shll
push
and
cmp
adc
cwtl
lcall
dec
div
or
stos
or
in
dec
add
cli
jb
lahf
add
das
sub
lock
aad
add
pop
push
jbe
sub
mov
imul
xchg
cmp
pop
jp
aam
lock
pop
xchg
xor
imul
mov
fisttpll
inc
cmp
pop
arpl
repz
dec
std
mov
pop
insl
jecxz
sbb
jae
jns
inc
iret
into
lret
ljmp
mov
jbe
inc
cwtl
push
mov
stos
sbb
mov
inc
pop
int3
lret
aas
jle
adc
dec
lcall
sbb
jno
lahf
adc
decl
inc
in
lret
jle
div
pusha
xchg
mov
dec
mov
dec
inc
shll
ss
aad
and
lret
test
mov
lcall
jp
test
mov
adc
mov
inc
ss
mov
repz
nop
mov
add
inc
jb
mov
fnstenv
ret
dec
arpl
rol
jecxz
ds
fldenv
ljmp
js
mov
adc
fisttpll
imul
lods
inc
mov
push
shlb
mov
icebp
and
adc
fisubrs
add
mov
mov
inc
add
xchg
stc
call
or
inc
and
lods
sbb
cmpsb
addr16
subb
shl
dec
sub
and
int3
mov
loopne
imul
jb
aas
je
gs
insl
dec
pusha
lea
xchg
cltd
ds
mov
xchg
mov
jge
lcall
es
mov
frstor
pop
push
mov
fldl
ret
xchg
pop
sbb
mov
push
push
cmp
mov
push
cmpsl
xor
fcoms
in
mov
pop
push
jb
sbb
lods
je
enter
sub
jne
cmp
or
or
aaa
and
dec
xor
pop
andb
scas
movsb
pop
out
lcall
les
mov
jecxz
filds
addr16
lret
pushf
mov
dec
mov
mov
in
nop
dec
sub
sbb
fs
bnd
int
icebp
ljmp
or
cmc
icebp
inc
inc
xor
xchg
ds
movsl
outsl
mov
sbb
rol
sbb
test
push
mov
clc
das
nop
or
mov
aas
or
add
add
push
pop
push
notb
rcrb
call
sub
repz
pop
xor
ret
add
and
arpl
daa
xchg
adc
xor
jno
pop
and
shlb
inc
popa
paddusb
mov
test
adc
sub
adc
or
cmp
dec
rorb
lret
pop
dec
mov
mov
xor
int3
cmp
inc
jns
cmp
mov
jmp
dec
out
mov
adc
test
sbb
pop
movsb
insb
xchg
inc
mov
into
popa
in
add
nop
add
inc
sbb
lods
xchg
ret
xor
jl
push
pop
cmp
fisttpll
std
inc
inc
test
or
mov
outsl
lcall
dec
or
and
jae
xchg
dec
lds
dec
sarb
jbe
cmpb
or
xchg
sbb
es
jmp
sti
or
sub
scas
cltd
lock
xchg
not
mov
dec
jg
lea
push
cs
xchg
jmp
jo
dec
pop
mov
iret
jnp
test
aas
cmp
movsl
jge
ret
js
daa
xchg
xchg
ret
imul
scas
xchg
je
or
lret
mov
push
sti
outsl
fs
ja
sti
push
ret
add
out
fldt
adcl
popl
imul
leave
push
adc
aad
mov
shrb
jge
iret
dec
stos
cli
and
or
mov
inc
pop
ljmp
fisubs
clc
mov
sti
mov
xor
test
inc
shrb
loope
jae
call
cmp
mov
mov
lds
push
add
cmp
incl
ds
xchg
or
jb
sti
jle
aad
cmpsl
test
icebp
add
leave
fstps
andl
lock
or
pop
rorb
fidivs
ret
sbb
rcrb
fcmovnbe
imul
sub
iret
cmp
cmp
daa
sub
mov
mov
jne
jno
cmp
mov
mov
xor
mov
xchg
sar
jne
mov
inc
jge
pop
mov
cmp
jle
lds
dec
inc
fisttpll
jg
dec
fmul
push
loope
repnz
mov
faddp
xchg
push
pop
adc
leave
test
mov
mov
xor
dec
lret
push
pop
ss
xchg
mov
jo
scas
out
ret
push
and
push
shll
or
lds
mov
loop
push
shrl
pop
cltd
mov
lods
cmp
push
in
test
push
lds
lds
dec
popa
hlt
pusha
pop
add
pop
mov
sub
scas
pop
sub
fisttps
lahf
pop
mov
ret
pop
stc
les
sti
subb
xchg
xchg
testl
xor
lods
jp
das
repz
mov
sbbl
outsl
stos
mov
repz
into
jl
in
js
in
adc
pop
ljmp
rolb
jmp
js
mov
repnz
repnz
ja
push
inc
or
negl
pop
jg
mov
dec
cmpl
mov
cs
jge
mov
mov
xchg
lcall
mull
cld
int3
push
out
push
loop
jbe
push
rorb
add
jmp
cmpsl
inc
inc
pop
decb
push
les
insl
and
mov
mov
das
cwtl
and
sub
xchg
pusha
cmp
outsb
lds
push
and
sub
xchg
loope
sub
shlb
das
mov
bound
enter
sahf
ds
cmp
mov
ret
adc
push
ljmp
aad
dec
adc
sub
and
in
or
xlat
test
mulb
nop
iret
xchg
and
loop
stos
aas
fldcw
stos
xor
fs
in
in
or
sub
jnp
loop
fcomps
jmp
mov
mov
movsl
xchg
pop
fnsetpm(287
jne
jae
jg
pop
push
out
push
dec
mov
imul
push
xor
jne
lds
xchg
dec
fcmovnu
pop
test
pop
adc
rorl
xchg
in
cmc
add
cltd
in
jae
fnsetpm(287
adc
pop
pop
xor
insb
clc
cmpsl
hlt
int
movsl
mov
adc
mov
je
xor
mov
sbb
sarl
aas
repnz
add
mov
fdivrl
cltd
jne
sbb
adc
loope
xchg
lcall
mov
cmp
and
out
adc
mov
ss
and
fs
jbe
and
imul
xor
xchg
mov
inc
sbb
sbb
pop
pop
mov
sbbb
and
xchg
int3
push
je
sbb
aas
push
hlt
or
sti
add
push
xchg
push
in
sti
and
or
pop
pop
sub
add
jno
lds
loopne
into
push
xor
cwtl
test
xor
xchg
mov
xor
ficoml
pop
mov
inc
sbb
stos
daa
dec
cltd
add
jg
fs
pop
push
scas
inc
mov
xor
notb
ljmp
fstpt
jle
push
jne
xchg
push
sub
sub
shlb
imul
pop
repnz
sub
xchg
mov
sub
lock
fcomps
xor
mul
out
inc
scas
mov
push
out
fcoms
out
int3
shll
into
fcoms
mov
orb
mov
xor
inc
dec
mov
gs
aas
sbb
adc
rolb
paddusb
adc
inc
xchg
orl
cmp
out
int3
lahf
outsb
and
mov
mov
push
xchg
push
mov
int
dec
mov
pop
lods
test
dec
dec
insb
imul
addr16
arpl
dec
mov
cli
dec
sub
repnz
cwtl
test
mov
loope
adc
pop
and
test
mov
aam
in
xchg
das
rcrb
jge
int
mov
inc
sbb
add
pop
cmp
fstl
dec
jg
dec
sbb
scas
gs
or
pop
push
popf
iret
sub
cmp
sahf
push
dec
xchg
inc
stos
or
nop
inc
mov
rorb
xor
inc
lcall
inc
jae
adc
test
sub
mov
cmpsl
in
mov
jo
lret
orb
rcrl
jge
int
ficomps
test
mov
cld
popf
mov
in
xor
mov
pop
out
push
mov
mov
jl
mov
mov
adc
rcrb
and
jle
and
cmp
inc
dec
outsb
movsb
nop
test
pop
push
test
xor
adc
push
sbb
not
adc
cmpsl
outsl
xchg
jmp
decb
add
push
test
jne
fmull
xchg
sub
xchg
push
out
sub
sti
jecxz
adc
pushf
jmp
orb
rclb
scas
mov
cmp
mov
cmp
addl
cwtl
mov
sub
arpl
cmp
add
xlat
dec
cli
subl
mov
out
idivl
and
cmc
inc
xchg
fmull
lods
shll
cli
imul
mov
sarl
bound
mov
adc
sub
mov
sub
or
fpatan
imul
mov
sahf
mov
mov
mov
movsb
pushf
cmp
jl
lock
sbb
mov
test
xchg
pushf
popf
ljmp
scas
in
xchg
sbbl
sahf
stos
les
jecxz
jecxz
imul
in
jecxz
xlat
popf
cmp
fs
call
repnz
or
adc
or
push
scas
lret
mov
flds
cltd
mov
int
les
cmpsb
mov
jnp
arpl
out
mov
popa
movsl
pop
jge
call
imul
outsl
es
or
push
jno
pop
incl
and
pop
inc
and
aam
fldcw
popa
xor
mov
clc
into
inc
inc
jo
cmc
shlb
addl
enter
push
xchg
or
popf
fisttpl
out
lds
out
pop
lret
mov
lahf
movb
cmp
push
push
dec
xor
popf
clc
pop
jno
movsb
and
adc
inc
loop
data16
xchg
xor
inc
sub
test
aad
fwait
xchg
sub
ds
add
fcompl
jbe
cmpsl
es
xchg
stos
out
jno
pop
mov
out
movsl
test
repz
pop
cmp
adc
push
insl
adc
pop
outsl
test
cwtl
int
push
call
mov
push
movsb
or
pop
int3
xchg
sbb
pushf
hlt
jne
cld
mov
mov
arpl
hlt
shll
idivl
dec
rcll
add
lods
insl
pop
add
out
or
inc
inc
sti
test
push
sub
call
xor
std
adc
cmp
push
mov
ja
xor
mov
mov
mov
and
outsb
xor
mov
cmc
scas
jle
mov
add
shlb
sub
push
pop
sbb
sti
xor
inc
push
movsb
push
jp
popf
stc
cltd
ds
push
js
out
pop
cs
cltd
imul
xchg
das
jns
or
adc
push
fwait
xchg
and
sbb
add
or
pop
mov
loope
cmp
loop
outsl
cmp
add
out
push
js
mov
push
push
dec
mov
lock
movsb
adc
dec
mov
and
scas
fmulp
loop
stos
mov
cmp
insl
xchg
insl
jle
test
cmp
xor
int3
std
xor
test
push
daa
adc
push
cmpsb
incl
add
cmc
out
stos
sub
insb
pusha
cmp
cmp
xchg
mov
cli
rcrl
and
imul
dec
lds
add
and
roll
ds
fsubp
rorl
xor
fnstsw
outsl
andb
aas
int3
call
jg
mov
fmulp
ljmp
in
mov
into
push
dec
push
inc
pop
adc
es
fmul
out
xlat
mov
sbb
int
dec
es
popf
xor
aaa
cli
sub
mov
cmp
sub
arpl
inc
xor
mov
jl
clc
andl
test
test
subb
xor
jge
xchg
mov
inc
push
xor
and
push
out
stos
mov
arpl
int3
dec
test
adc
inc
scas
popa
sub
cmpsb
sub
push
xchg
xchg
push
jmp
call
pop
mov
pop
inc
mov
hlt
xlat
jg
idivb
and
mov
jp
push
test
enter
mov
inc
lret
mov
cmpb
and
sbb
bound
cld
daa
sbb
pop
mov
subl
jge
inc
xlat
inc
aam
cmpsb
imul
xchg
xchg
jne
ds
shlb
jecxz
push
jmp
les
lret
fwait
clc
cltd
in
fucomi
inc
dec
ror
daa
push
nop
ret
push
push
jns
subl
jb
add
push
out
in
mov
mov
lret
cmp
add
ds
cmp
push
aad
stos
popf
sub
outsb
das
lcall
fdivrl
cmp
push
call
inc
adc
jns
je
or
jl
mov
jo
sbb
aad
scas
push
in
iret
stos
pushf
xchg
fldcw
mov
mov
dec
xor
popf
or
and
dec
out
pop
mov
int
add
and
lret
sbb
mov
jns
mov
addb
dec
sub
xchg
pop
mulb
push
mov
jle
xchg
jle
das
and
dec
cmp
ds
push
cld
aaa
mov
add
call
mov
test
insl
mov
push
cld
roll
xor
mov
pop
ds
lret
pop
push
jno
and
ud0
push
mov
lahf
dec
pushf
push
or
sbb
mov
push
mov
xor
jb
test
fstpl
sbb
mov
dec
cmp
cltd
stos
loopne
pop
mov
shlb
rclb
mov
loope
cmp
jnp
xchg
pushf
pop
mov
in
shll
cmpsl
rcrb
daa
pop
pop
aaa
test
mov
push
push
icebp
negl
rclb
movsl
xor
xchg
push
cwtl
mov
sub
add
dec
cmp
sarl
dec
cmp
jmp
xor
mul
sbb
test
xlat
ds
hlt
sub
adc
mov
xchg
jae
cli
arpl
fwait
dec
push
cmc
inc
pop
adc
lods
in
mov
add
jle
mov
popf
aad
fcoml
iret
cmp
xor
cs
mov
inc
push
mov
cs
sbb
and
jg
pop
sbb
es
push
pusha
or
and
pop
push
fistl
pop
paddd
mov
in
and
sub
xchg
jne
in
adc
or
cmp
sbb
lock
push
xlat
sub
adc
push
mov
pop
inc
pop
das
add
sbb
sahf
jae
sarb
repz
xchg
bound
sub
les
callw
pop
adc
adc
ret
test
hlt
inc
push
int3
aaa
sahf
out
jns
fsubs
ret
mov
xor
bound
mov
cli
add
stos
jl
adc
loope
stc
adc
jae
inc
enter
nop
xchg
dec
rcrb
leave
repz
xor
cli
cmp
pop
stos
push
mov
xchg
js
and
add
insb
cmp
mov
jg
into
jle
pop
cmp
jge
fwait
sti
inc
aam
sub
add
fsts
cwtl
jo
and
call
js
dec
inc
inc
call
popf
xor
pop
mov
cmpsl
xor
dec
cwtl
loopne
push
insl
or
mov
xchg
or
xlat
mov
fidivl
insl
dec
xor
sub
dec
or
inc
mov
shl
pusha
and
pop
jnp
sbb
jae
movsb
sub
repz
jl
fstpl
mov
bound
ljmp
pop
mov
add
cs
dec
aas
mov
jmp
aaa
jecxz
in
adc
dec
xchg
push
mov
loop
test
pop
pop
lahf
jne
in
rcrl
push
add
test
xchg
aaa
cmp
imul
nop
and
mov
in
nop
adc
fld
dec
outsb
shrb
loope
ljmp
imul
pop
jno
push
mov
in
leave
add
jp
lret
jp
sub
inc
mov
into
cmpsl
adcb
push
push
mov
cmp
lahf
stc
aas
xchg
out
gs
sub
sub
cmpsl
std
xchg
int
sahf
es
pushf
jmp
imul
ret
icebp
push
enter
mov
jno
adcb
inc
and
call
cld
cmp
push
std
mov
xor
cmp
push
add
jno
fcmovnbe
push
cmp
lds
push
push
icebp
and
mov
xor
inc
adc
out
mov
jl
aaa
fwait
mov
pop
xchg
in
and
push
popf
fidivrs
inc
lret
out
lods
ja
lcall
mov
dec
xchg
and
arpl
addr16
or
cmpl
nop
add
scas
push
jmp
sub
mov
pop
aaa
cltd
orb
popa
fcompl
outsb
ret
data16
call
dec
insl
pop
aaa
cli
pop
sub
cld
sub
lds
call
stos
jecxz
dec
xchg
fldl
mov
pushf
sub
pop
cmp
jbe
nop
inc
cmp
push
cwtl
int3
mov
mov
dec
aaa
adc
mov
or
push
out
fwait
dec
cld
js
xchg
inc
outsl
or
adc
ret
jge
test
dec
mov
por
in
das
mov
aaa
jl
test
dec
incl
dec
xchg
jp
pop
or
or
mov
movsb
sbb
iret
imulb
lds
sub
imul
stos
cmpsl
xor
outsb
push
mov
je
mov
dec
xchg
pop
jns
jp
mov
jle
repnz
arpl
inc
adc
pop
incl
jno
out
dec
mov
xchg
push
fstpt
cld
lcall
lods
adc
dec
inc
fcmovnbe
adc
xorl
sub
les
shrl
dec
popf
xor
out
mov
aad
outsl
jmp
imul
mov
sub
mov
dec
dec
into
inc
cwtl
jbe
in
ja
ljmp
fsubl
cmpsl
fsubrl
dec
out
sub
cli
dec
fwait
fs
sahf
lds
adc
jmp
cmp
ljmp
push
or
mov
cmp
sub
in
dec
int3
sbbl
sbb
xchg
loope
sbb
lret
or
xor
push
dec
or
addb
ds
mov
les
gs
sub
test
out
aam
aam
aam
call
arpl
js
dec
in
push
push
inc
test
test
and
jno
add
ret
sbb
or
or
pop
adc
in
push
and
xchg
jmp
out
test
jo
sub
loopne
inc
pop
add
mov
iret
fbld
dec
push
inc
and
jne
test
dec
movsb
inc
or
imul
stos
adc
jae
mov
in
push
sub
cmp
cvtps2pd
cmp
lock
out
cmp
mov
pop
lods
or
mov
push
jg
mov
sbb
mov
pop
inc
or
rclb
outsl
outsl
mov
jb
icebp
cmp
or
cld
in
xor
stos
rorb
dec
dec
dec
fcomps
repz
test
rcl
rol
imul
lods
mov
jmp
push
mov
movsl
jbe
xlat
je
mov
inc
pop
add
mov
dec
cwtl
fistpll
push
or
pusha
loop
leave
pop
lods
jp
push
mov
pop
xchg
dec
mov
mov
leave
outsl
loopne
fiadds
pop
sub
pop
aad
jle
adc
inc
lds
cwtl
and
repz
xor
mov
cmp
push
stc
pop
adc
mov
loopne
insb
sub
cmp
or
notb
hlt
xor
cwtl
cmp
cmp
jb
test
mov
shrl
adc
fadd
rcrl
add
dec
push
mov
mov
lret
jnp
das
or
push
sahf
outsl
cmp
cmp
add
clc
ror
subl
pop
sub
int3
mov
fisubs
loope
cmpb
cmc
inc
and
mov
pop
icebp
loop
gs
sbb
inc
cmp
hlt
jle
jno
repz
lcall
hlt
pop
xchg
jnp
xchg
lods
xchg
in
sarl
mov
pop
and
dec
dec
and
data16
push
das
mov
call
ret
cmpsl
cltd
xchg
pop
ds
pop
popf
scas
and
mov
jp
out
cmp
daa
mov
push
or
ds
out
lahf
jp
pushf
adcl
jmp
lods
sbb
repz
stos
jno
cmpb
xchg
xchg
jno
inc
dec
xor
mov
loope
cmp
inc
lods
mov
add
pop
cmp
and
mov
add
or
pop
jmp
addl
test
lahf
mov
clc
fdivrp
push
rcll
lret
sbb
sbb
loope
rolb
mov
inc
aad
addr16
ss
mov
stos
inc
mov
jecxz
in
inc
dec
jno
movsl
mov
push
sahf
adcb
popa
movsl
enter
pop
dec
push
fwait
sti
lock
mov
xchg
hlt
mov
push
sub
or
lret
mov
repz
mull
lds
push
push
push
ja
loop
les
ss
in
mov
xchg
push
popl
lcall
icebp
xchg
push
lret
push
outsb
jns
aas
sbb
es
adc
or
cwtl
enter
scas
xor
sbb
xchg
pop
lcall
aaa
sti
adc
mov
pop
jne
stc
insb
mov
lea
rcll
dec
repnz
int
push
lock
out
sub
not
aaa
in
mov
call
add
pop
jno
mov
xor
xor
inc
xchg
int3
pop
stc
push
xchg
pop
shrl
jo
mov
std
in
mov
mov
mov
mov
movsl
push
pop
adc
shl
es
je
sbb
mov
into
pop
push
int
inc
sub
out
negl
add
lods
and
ljmp
clc
xor
es
cli
enter
fidivrs
mov
lahf
ficoms
loop
dec
imul
xor
cmp
in
or
sbb
addr16
outsb
ss
and
ret
push
jecxz
cmp
sub
or
xor
push
and
pusha
dec
jmp
jne
dec
popf
lret
mov
out
add
scas
out
sahf
mov
test
xor
dec
adc
mov
xorl
out
in
push
jmp
mov
mov
pop
or
jae
dec
addr16
xchg
or
mov
adc
pop
cmp
or
bound
or
ret
mov
inc
lds
or
std
mov
js
lods
add
dec
adc
adc
cmpsb
int3
mov
frstor
test
out
test
cmp
stc
jmp
mov
dec
fadds
cmc
repz
cmovl
fidivrl
or
iret
mov
push
loopne
shll
insb
mov
add
dec
popf
lea
scas
cmpsb
cli
xchg
adcl
test
adcb
mov
xchg
rorl
cmp
fisttpl
clc
xchg
mov
out
mov
pop
pop
jo
mov
xchg
frstor
fsubrs
ds
xchg
or
sub
aaa
inc
pushf
fistps
or
or
lret
icebp
pop
xor
push
pop
fdivr
jbe
lahf
pushf
xor
cli
repnz
pop
and
sub
or
jg
and
xchg
pop
call
jns
je
and
mov
out
mov
sub
insb
out
push
mov
push
push
cmp
pop
pop
and
mov
ja
cmp
add
jl
push
xchg
lds
push
daa
jecxz
jae
push
sub
xchg
bound
pop
cmp
shlb
jne
push
sub
sub
sub
fnstenv
mov
outsl
or
mov
in
mov
vmwrite
mov
add
fcmovnu
and
push
test
mov
and
or
cmp
or
fs
aaa
pop
cs
je
jne
jl
jmp
outsb
ja
call
xchg
dec
dec
imul
wrmsr
xchg
pusha
lret
xchg
loopne
mov
movsl
andl
and
lret
jg
aaa
cltd
insb
push
clc
pop
out
stc
push
lahf
repnz
adc
das
lock
jecxz
movsl
and
add
dec
arpl
dec
mov
insl
sub
and
fs
es
hlt
push
rcrl
sbb
in
je
in
movsl
test
cli
mov
or
and
outsl
xor
push
mov
test
mov
xchg
inc
xchg
mov
fiaddl
ret
inc
adc
fwait
out
jp
outsb
test
shll
xor
rorl
aad
and
int3
inc
cwtl
stos
pushf
stos
mov
sub
stos
stos
add
cmc
in
pop
xlat
shll
and
subb
jle
test
ret
add
loopne
mov
imul
xor
xchg
add
cli
mov
or
punpcklbw
movsl
fisubl
ja
loop
cmp
pop
lods
insl
xor
mov
fldt
lds
popa
daa
inc
iret
add
popa
stc
mov
xor
aaa
mov
inc
push
xchg
jne
lods
or
or
mov
pop
cwtl
cmp
xchg
xchg
mov
rorb
jg
jmp
push
and
pop
xlat
xchg
or
ret
sbb
or
pop
outsb
push
inc
pop
pop
xor
sub
and
pop
add
stos
or
and
xor
nop
sub
pop
lods
mov
out
mov
cmp
add
pop
push
outsb
or
xchg
mov
adc
xchg
adc
pop
xchg
test
or
mov
sbb
mov
movsb
fildl
xchg
push
sbb
xchg
ss
xor
nop
jge
ja
add
push
cmp
and
push
jo
xor
cmpsb
leave
add
ss
push
xchg
je
jbe
dec
add
jecxz
mov
scas
jno
hlt
adc
dec
mov
xchg
jne
inc
xor
in
ja
ja
mov
roll
shll
fsub
xchg
or
pop
std
xchg
pushw
cmp
or
mov
and
fwait
ret
leave
sbb
or
and
movups
xchg
fucomip
jmp
xchg
jmp
rep
fists
ss
not
cmp
cmp
pop
int3
inc
and
adcl
pusha
outsb
sub
std
dec
jo
in
sbb
mov
mov
in
sbb
pop
sbb
xchg
mov
adc
sub
mov
dec
dec
cmpsl
push
lret
fnsave
push
insl
movsb
stc
imul
xchg
mov
repz
sbb
lock
adc
mov
cmpsl
andl
add
lret
daa
pop
sub
sub
movq
mov
fistl
cmpsl
mull
cli
inc
stc
xor
jl
sub
inc
xlat
jbe
xchg
inc
push
mov
push
cmp
push
jne
scas
inc
cmpsb
xor
xchg
mov
jge
push
lcall
aaa
and
in
mov
jne
aad
les
mov
push
xchg
mov
call
imul
add
fidivrl
stos
idivl
xchg
mov
inc
dec
stc
cli
mov
adc
mov
xor
xchg
out
sarl
popf
aas
repnz
iret
stos
bound
cmp
cmp
xor
inc
lcall
sbb
xchg
lcall
dec
in
sbb
clc
xor
dec
in
push
das
sub
ljmp
out
sar
push
sub
insb
mov
dec
nop
push
cmp
xchg
add
lods
insl
push
dec
dec
or
mov
or
mov
and
pop
stc
lcall
test
push
shll
inc
mov
adc
arpl
cmpsb
adc
nop
pmullw
mov
daa
mov
add
ret
repnz
out
movsb
inc
adc
rolb
rcr
sub
xchg
xchg
call
sbb
inc
ss
sti
stos
push
push
mov
inc
push
repnz
pushf
fnstcw
push
les
leave
jae
push
adc
inc
push
push
dec
pop
xchg
xchg
mov
jnp
stc
pushf
pop
push
xchg
jns
push
std
pop
push
xor
cmp
lahf
les
sub
movsl
xchg
data16
lock
mov
int
mov
pop
data16
repz
pop
stc
xor
sbb
inc
imul
sar
aaa
inc
mov
sbb
stos
mov
jno
scas
or
in
pop
mov
or
adc
in
dec
cmc
bound
mov
jmp
pop
fisubrl
test
int
in
xor
fdivs
xor
fisubl
cmp
es
sub
imul
sbb
push
adc
decb
or
cmp
push
or
sub
or
xchg
ret
xor
in
aad
shll
lahf
loopne
jp
addb
add
iret
pop
ficoml
add
inc
shl
jnp
add
mov
dec
ret
xchg
pop
in
xor
rorl
jle
shl
imul
fisttpll
adc
sti
cmpsl
jmp
jns
ret
repnz
add
and
out
xchg
and
ds
js
daa
push
inc
into
stos
xchg
mov
dec
lods
xchg
dec
cli
lret
cmp
clc
and
or
mov
lods
jle
in
mov
es
or
aas
jecxz
mov
sbb
enter
in
in
leave
sbb
or
arpl
insl
mov
xchg
sub
sbbl
xor
or
mov
mov
popa
divb
popa
inc
or
in
ljmp
popa
xchg
inc
cltd
add
push
in
sbb
and
ss
push
repnz
cmp
inc
ja
pop
jns
fs
movb
inc
mov
pop
jb
cmp
popf
xchg
stc
mov
test
testl
cmpb
outsl
movsb
loop
cmp
arpl
imul
jge
jne
sti
lret
jo
insb
mov
mov
in
mov
mov
add
pushf
mov
cmp
cmp
jb
repz
in
xor
mov
sub
jo
cmc
mov
ret
add
stos
and
adc
scas
add
push
das
int3
mov
pop
popa
les
cmp
ljmp
jp
mov
mov
jp
or
or
or
xchg
add
movsb
fidivl
cmp
das
or
gs
loopne
neg
cmc
insb
sub
sarb
jnp
fildl
iret
sbb
sarl
int
inc
fstpl
cld
sahf
fimull
lock
out
and
adc
fildll
xor
inc
xchg
pop
add
je
lahf
pcmpgtb
sub
jne
sbb
mov
inc
roll
negb
in
ret
shll
sub
daa
shll
les
shrl
fdiv
scas
lret
out
sahf
scas
cltd
test
dec
push
sbb
push
in
cmp
dec
cmp
pushf
adc
std
imul
and
rcrb
addr16
add
add
push
push
imulb
fbstp
into
popa
xor
sub
or
jmp
mov
cmpsb
lods
test
movsl
je
ljmp
xor
xchg
add
xchg
cmp
push
cld
cli
repnz
adc
adc
fmuls
lahf
pop
and
jns
or
push
add
xchg
push
xor
adc
mov
mov
popa
push
pop
adc
sbb
inc
rolb
push
add
hlt
ret
jne
int3
or
cld
xor
imul
pop
fidivrs
mov
sub
push
shlb
int
pop
xor
testl
mov
gs
add
inc
gs
inc
mov
mov
mov
pushf
aam
xchg
dec
and
inc
sbb
pop
out
xlat
jmp
in
enter
andl
push
data16
fstps
lcall
jb
cs
fisttpll
js
mov
cli
pop
in
dec
cld
dec
rcrl
cmc
jmp
push
mov
leave
rcll
push
mov
int
pop
clc
xor
mov
jae
jo
fildll
ss
add
adc
inc
scas
pop
daa
adc
jo
out
mov
cmp
mov
sbb
cld
pop
aas
push
mov
in
jns
mov
nop
push
dec
push
aas
jmp
xorl
outsb
sbb
nop
jns
test
dec
adc
mov
inc
outsl
mov
lret
lcall
sarl
ss
fwait
xor
and
jne
or
dec
add
mov
cmpsl
out
adc
add
pop
jns
jb
sti
es
in
daa
mov
fimull
dec
mov
bound
xchg
fldt
aad
mov
cltd
out
xor
pop
push
push
stc
jecxz
sbb
inc
cwtl
inc
dec
mov
xchg
fldt
push
scas
sbb
sub
cltd
sbb
mov
jge
cmp
rcll
in
jmp
push
push
aaa
cld
cmpsl
mov
cmp
insb
in
jno
adc
insb
cmp
xorb
add
shll
das
and
insb
cmp
aam
dec
push
xlat
xor
das
add
rorb
fsubl
leave
ja
cmp
sub
bound
je
fwait
or
aas
test
lock
xchg
sub
cmp
rcr
shrl
scas
in
aaa
sbb
cli
outsl
cs
cs
mov
adc
and
cltd
jl
shlb
ljmp
loope
mov
fsubs
repnz
mov
leave
xchg
nop
cltd
dec
xchg
pop
aad
push
and
mul
add
xchg
push
or
shl
cmp
fcmovnbe
add
lret
out
inc
cld
out
movsb
icebp
cmpsl
pusha
arpl
arpl
xor
inc
int
div
adc
popf
jae
adc
jns
mov
push
aas
inc
xchg
pop
rol
cltd
das
lret
into
push
sbb
xchg
jns
rolb
sbb
mov
lea
or
int
inc
addr16
outsb
testb
filds
sub
push
pop
xchg
add
daa
push
clc
inc
in
jno
push
add
mov
mov
or
int3
push
mov
cltd
and
out
lds
mov
out
lock
or
mov
lock
andb
pop
jo
push
add
jns
fnstsw
dec
js
mov
add
adc
jno
push
and
nop
mov
icebp
in
or
sbb
mov
and
orb
xor
les
mov
jbe
xor
dec
cmpsb
or
jg
mov
lret
pop
add
mov
movsl
lret
jl
jl
adc
inc
divb
cs
mov
sti
add
push
rclb
push
cmc
xor
lret
jae
rcrb
push
jb
inc
fidivl
or
mov
ja
sbb
daa
mov
inc
stos
and
jne
insb
push
xchg
and
and
pop
xchg
push
xor
sahf
cld
out
add
psubusw
dec
push
inc
movb
jns
icebp
or
fistpll
std
or
jo
cmpsl
jecxz
add
or
and
addb
mov
test
sbb
shll
cmp
sub
movsl
repnz
mov
cmp
jg
mov
sbb
mov
sbb
gs
into
cs
add
mov
out
xchg
inc
inc
lret
push
cmp
out
and
xor
rcll
insb
and
and
ficoml
loope
pop
out
push
js
movsl
aad
jle
add
add
ss
push
inc
subb
movd
dec
or
cmpsl
push
cmpsb
inc
cmp
nop
sub
fldenv
stc
jp
push
jb
mov
xchg
into
pop
in
and
shlb
xor
sub
push
clc
je
popa
xor
std
das
addr16
aas
jno
mov
int3
sti
push
fldenv
or
push
mov
cld
dec
in
and
imul
mov
or
xchg
mov
mov
xlat
inc
adcl
inc
push
push
push
movsb
mov
lret
dec
lret
negl
cmp
pop
testb
fdivr
stos
rcrl
ret
jecxz
fbld
cmp
loope
mov
std
pushf
add
dec
inc
pop
addl
outsb
xchg
mov
and
imul
cmp
clc
mov
inc
mov
or
xor
cmp
mov
repz
inc
out
insl
cmpsb
dec
or
andb
sub
je
jle
mov
mov
mov
adc
inc
bound
arpl
clc
es
insb
arpl
xor
jecxz
iret
aas
pop
inc
xor
add
and
jb
dec
rorb
adc
push
add
inc
and
cmp
arpl
stos
push
shrb
push
test
mov
dec
or
loop
jle
push
jb
pop
insb
inc
and
or
sbbb
iret
in
out
les
in
mov
je
xor
push
ret
mov
xchg
mov
mov
lods
and
cmpsl
loop
mov
push
test
mov
es
xor
aas
mov
xlat
aam
cmpb
adc
aaa
cmpl
lret
ljmp
in
lahf
pop
fsin
and
ljmp
or
jle
in
loopne
cld
push
arpl
dec
outsl
mov
dec
imul
mov
push
notb
and
push
cmp
imul
mov
cmp
push
lret
and
loopne
int3
push
inc
sbb
enter
bound
outsl
xor
mov
inc
adcl
mov
lret
cs
aas
inc
lods
jae
sub
aam
ljmp
cmp
aaa
pop
sub
cwtl
lods
add
movsb
clc
inc
and
mov
insb
sti
in
bound
xor
or
pop
jecxz
aam
fsubs
fsubs
loopw
inc
shl
jnp
dec
pop
xor
add
andl
lea
pop
stos
rcrb
adc
and
xchg
mov
jp
or
inc
imul
lahf
cmp
cwtl
jge
add
outsb
mov
dec
sub
subl
jmp
jmp
inc
xchg
lret
sub
insb
mov
loop
mov
xor
js
pop
adc
push
xchg
xchg
xorl
les
inc
mov
jne
movsb
mov
push
movsl
add
jae
shrl
inc
jmp
cmc
pop
rorb
xchg
mov
push
lahf
xchg
add
xlat
push
and
enter
sbb
les
jecxz
imul
daa
jl
loopne
xor
lods
fwait
inc
xchg
or
cmp
in
adc
stc
push
fs
das
mov
leave
xor
ds
sbbb
inc
inc
xor
stos
and
sbbw
inc
insl
cmpsb
fisubl
xchg
in
adc
icebp
cwtl
adc
inc
pushf
ljmp
cli
fnstsw
pop
stos
lret
add
pop
xor
pop
jno
or
lret
adc
in
pop
mov
lcall
mov
jo
and
push
jg
int
repnz
arpl
add
jb
out
jge
rorl
dec
testl
lret
jp
mov
lret
fldl
test
pop
fs
xor
dec
daa
push
outsl
aad
adc
and
es
fdivl
rcr
mov
movsl
pop
leave
sbb
push
adc
mov
ljmp
xchg
es
sbb
push
pop
cltd
loopne
jle
loopne
jnp
mov
shlb
xchg
dec
pop
lea
add
mov
int3
dec
lea
push
pushf
or
out
imul
dec
mov
dec
xlat
std
test
or
cmpsl
add
jbe
cmpsl
push
xor
daa
push
shl
int3
into
fnstenv
shrl
push
pop
sub
mov
push
pop
add
js
jb
leave
mov
insb
pop
jg
or
jle
imul
lds
call
pushf
orb
push
sbb
cmp
push
jae
out
into
mov
push
stos
scas
js
push
xchg
es
jecxz
pop
repz
imul
es
aad
inc
ja
imul
adc
jo
or
jl
push
xchg
int
fdivs
test
and
enter
roll
or
subb
test
mov
cwtl
int3
or
dec
jmp
pop
jne
aaa
enter
add
add
push
mov
sti
push
push
icebp
xor
sub
inc
add
xor
fdiv
bound
jbe
mov
mov
repnz
pop
push
xchg
je
pop
mov
inc
sar
mov
jge
push
or
fldenv
or
call
popf
popf
mov
or
fnsave
xor
xchg
loope
loopne
or
pop
int3
in
sahf
xchg
xor
test
mov
add
data16
inc
dec
jne
mov
adc
inc
lret
pop
rorb
dec
xchg
outsl
lock
clc
mov
jbe
sub
cmp
flds
jecxz
lock
loope
or
loopne
mov
daa
imul
rolb
cmp
int3
mov
imul
ds
mov
in
lods
pop
rolb
sub
rcll
arpl
arpl
mov
adc
repnz
or
in
lcall
mov
adcl
pop
sarl
jmp
lcall
or
dec
pusha
les
imul
jmp
lret
lea
push
mov
test
das
cltd
or
fwait
ljmp
jnp
popa
xchg
scas
aaa
cmpsl
in
mov
test
es
mov
xchg
xchg
push
and
and
mov
loopne
dec
out
pop
mov
xchg
jnp
adc
xorl
mov
xchg
mov
push
fs
push
ret
fyl2x
push
insb
and
aaa
mov
pop
dec
cwtl
xchg
repnz
cwtl
push
push
lea
xor
push
push
cwtl
or
imul
bound
mov
loopne
outsl
out
mov
push
dec
pop
inc
sahf
or
lods
mov
xchg
sub
dec
adc
cwtl
mov
adc
bound
adc
je
mov
dec
fldl
jp
push
test
adcb
pop
shll
bound
gs
push
jle
sti
mov
movsl
xor
pushf
mov
push
xor
dec
mov
sbb
inc
pushf
mov
jae
jle
leave
rcrl
cmp
xor
push
out
in
cld
xchg
loopne
sti
movb
jp
sub
and
adc
inc
mov
lock
inc
push
fildll
xor
xchg
mov
inc
mov
mov
je
sub
jnp
leave
fs
das
jl
lods
aad
inc
js
ret
mov
aam
and
dec
int3
sub
icebp
mov
cmc
mov
jg
loop
dec
xchg
inc
jb
mov
and
arpl
mov
add
inc
outsl
int3
mov
mov
imul
repnz
ret
loop
popl
rol
sub
loop
enter
and
mov
gs
gs
pop
and
ror
aad
out
jecxz
rolb
push
leave
insl
icebp
pop
pusha
xchg
pop
mov
dec
mov
dec
clc
add
cmpb
outsl
sti
jo
js
dec
dec
adc
jne
cwtl
ljmp
inc
push
les
int
outsb
inc
jns
outsb
inc
mov
xchg
testl
lcall
pop
pop
repnz
icebp
icebp
ss
lods
mov
shrl
in
inc
add
and
xchg
push
movsb
mov
inc
mov
mov
mov
jns
fisttpll
jmp
xchg
pop
xor
push
and
ja
addl
ss
jmp
pop
sbb
sub
fwait
scas
pop
add
fildll
xchg
jnp
mov
push
xchg
jo
inc
lret
mov
push
xchg
mov
sti
sub
ftst
inc
dec
roll
and
mov
jp
xchg
in
pusha
mov
les
mov
cmp
pop
dec
std
jl
loopne
push
fldcw
xor
cmp
push
imul
adc
xor
and
fistpll
out
out
mov
outsl
out
cmpsb
dec
movsl
mov
push
shll
push
push
stc
int
pushf
inc
mov
inc
mov
mov
outsl
inc
mov
loope
xchg
lds
dec
push
cmc
loopne
rclb
mov
icebp
cmc
sarl
lock
and
sub
dec
popf
push
adc
push
loopne
push
push
aam
sbb
xor
arpl
rclb
mov
push
ja
insl
insl
lret
sbb
jge
std
and
clc
rorb
mov
xchg
inc
sarl
lods
in
inc
jp
int3
cmp
jnp
fidivrl
out
dec
sbb
stos
mov
sub
js
xlat
dec
out
xchg
into
push
cmp
ja
dec
cld
and
cld
mov
xchg
fldl
mov
mov
out
mov
mov
xor
jbe
dec
imul
or
sbb
stos
les
and
jge
subl
adc
lock
jp
cmp
mov
in
imulb
xor
sub
mov
or
nop
jecxz
sub
sub
mov
mov
jmp
sub
mov
je
jno
add
rcll
xchg
or
sbb
push
adcl
mov
mov
push
scas
or
outsl
daa
xchg
inc
int3
adc
and
int
mov
xor
in
push
inc
inc
jns
ret
jg
jg
pop
out
sbb
jbe
mov
shrl
ds
addr16
add
inc
fucomp
push
pushf
addb
loopne
out
fcoms
jno
adc
fcomi
mov
shl
and
pop
in
mov
push
jae
hlt
sti
inc
inc
sbb
rcr
or
lods
add
mov
lods
mov
out
add
jno
aam
std
in
xchg
sahf
xchg
fwait
cmp
rorb
add
fidivl
ret
jns
cli
xchg
ljmp
test
jle
shrd
xor
nop
loope
pop
mov
loopne
call
loope
jb
xchg
pop
jg
sbb
xor
adc
loope
sbb
push
movsl
ja
push
sbb
mov
push
push
or
push
xor
adc
sbb
lret
xor
es
push
mov
mov
and
andb
add
push
xor
pminub
push
push
repz
scas
aas
cmp
hlt
daa
aaa
sub
jne
call
aad
jp
idiv
adc
sub
sub
sti
je
enter
bound
daa
lahf
inc
mov
ret
dec
add
inc
and
pop
pop
cmp
clc
mov
xorb
aam
inc
and
push
test
push
loop
and
in
xorl
lahf
adc
ljmp
lret
repz
dec
cmp
xchg
repnz
andl
out
test
mov
jp
daa
mov
dec
mov
jp
iret
mov
add
sbb
adc
dec
and
jg
adc
adc
ljmp
lods
ret
push
je
daa
pushf
push
or
aad
xor
sbb
or
cmc
cmp
push
pop
cmp
add
jge
cs
enter
shrb
push
jle
jns
mov
sbb
ds
push
lret
inc
insl
jmp
or
cmpl
jecxz
jae
pop
sbb
push
sahf
clc
arpl
xchg
jb
mov
pop
jbe
test
push
add
sbb
and
cmc
dec
pop
sub
lea
jl
into
add
jbe
pop
sbb
lret
cmp
jl
xchg
sar
mov
xor
mov
into
aaa
std
mov
ja
in
mov
xchg
jmp
pop
add
pop
and
into
ja
ljmp
dec
ja
mov
push
mov
push
aaa
jbe
test
push
popa
je
pop
inc
insl
inc
and
cld
mov
xchg
insl
dec
cmp
inc
test
or
shll
clc
pop
push
sbb
adc
xchg
jns
adc
mov
jl
pop
cmp
xor
cmc
pop
mov
inc
rcr
xor
add
mov
pushw
xor
sbb
xor
mov
scas
inc
push
cmp
mov
loopne
mov
loopne
adc
mov
sbb
cmp
pop
sub
ret
inc
xor
sahf
cmp
xor
int
or
out
sub
mov
sbb
stc
xor
xchg
fisttps
sub
rclb
mov
popf
jmp
mov
mov
insl
lret
stc
mov
xor
out
test
ffree
sarb
popa
xor
dec
stos
andl
sbb
mov
xor
xchg
subw
sub
cmpsl
mov
lods
jns
inc
aam
fbld
inc
sub
aam
repz
xchg
repz
lea
dec
inc
sub
mov
sub
or
fs
cmp
ljmp
xor
ror
cmp
cmpsb
sbb
lock
xchg
push
movsl
ret
add
adc
and
dec
inc
out
mov
jno
jecxz
sbb
or
mov
sub
dec
mov
dec
pop
pop
js
int3
push
jl
in
cltd
sub
mov
sbb
and
adc
mov
push
pop
and
mov
inc
shrb
mov
mov
mov
xchg
test
mov
sbb
push
fnstsw
addr16
lret
clc
insl
jecxz
gs
cmp
in
push
shr
or
mov
icebp
pop
stos
and
push
cmpsb
sbb
adc
outsb
push
jnp
aam
or
roll
push
aas
es
pushf
sub
mov
pop
frstor
add
sbb
dec
dec
mov
jnp
stos
adc
adc
repz
pop
popf
push
mov
jb
sub
push
push
jmp
cmp
stc
mov
aaa
and
cmp
out
cmp
pop
cmpsb
cmp
and
sahf
mov
iret
mov
push
fptan
or
iret
mov
mov
lahf
xchg
xor
push
or
pop
aam
pop
fimuls
dec
mov
push
and
loop
mulb
js
dec
sbb
mov
jge
mov
sahf
xor
ja
dec
push
mov
cli
in
cwtl
pop
mov
jno
aam
std
pop
xor
cwtl
jnp
cmpsb
xor
xchg
shl
jae
push
popa
out
sub
nop
mov
clc
sub
mov
xor
leave
mov
shrl
repnz
jnp
mov
filds
and
cld
push
adc
pop
dec
push
scas
ficomps
adc
lahf
add
mov
sbb
pushf
pop
push
lahf
int3
pop
stos
jb
out
or
in
cwtl
mov
push
popf
push
push
fsub
push
mov
cmp
jns
add
xchg
sbb
loopne
pusha
mov
push
mov
mov
fists
mov
adc
imul
sub
repz
hlt
sbbl
pop
xor
sbb
pop
movsl
add
add
mov
pop
mov
add
adc
fnstsw
sbb
outsl
push
out
arpl
test
cmp
shlb
mov
shl
sarl
sbb
pop
push
xchg
push
mov
cmp
push
data16
or
imul
or
aad
jns
mov
jns
sbb
test
mov
in
gs
jmp
xchg
and
scas
icebp
push
rcll
ret
xorl
nop
ret
std
mov
aas
sbb
pusha
out
loope
and
inc
jnp
sarl
add
fs
sbbb
pop
mov
adc
xchg
jno
into
inc
and
xchg
loop
das
add
enter
xchg
fisttps
notb
cs
mov
xor
pop
pop
lods
dec
mov
mov
sarl
out
push
mov
rolb
mov
int3
sahf
aam
cmpsb
jae
mov
cmp
add
add
subps
or
pop
into
stos
or
mov
inc
mov
aas
inc
ficoms
mov
push
sub
cmp
jmp
loope
adc
jno
push
cmpl
sbb
jl
push
and
cmp
ret
insl
aam
mov
dec
stos
arpl
pop
cli
insb
pop
insl
into
and
scas
aas
pop
inc
aaa
cmp
icebp
mov
out
xor
adc
iret
repz
xchg
mov
mov
mov
and
inc
jo
push
dec
sbb
shl
ret
adc
into
inc
sub
jnp
add
pop
fsub
dec
inc
xor
push
sub
cmp
and
in
jg
les
es
adc
ljmp
xor
push
push
mov
sbb
jecxz
cmc
es
xchg
push
xor
loope
outsl
sub
sub
dec
mov
ss
scas
out
jmp
sbb
xchg
bound
stos
adcb
xchg
inc
jmp
loop
test
adc
add
mov
pop
arpl
jmp
arpl
fsubrp
mov
mov
adc
xor
iret
sub
lahf
xchg
popf
push
jge
jb
xchg
xchg
in
cmp
cmp
scas
ret
fnstsw
lahf
xlat
mov
gs
pop
mov
inc
adc
jge
jmp
mov
sub
roll
push
sub
sub
lret
loopne
out
jne
rcr
in
std
add
cwtl
fimuls
adc
ret
or
cltd
pop
mov
ficoms
mov
or
pop
out
ds
pop
inc
pop
fwait
mov
jns
adc
and
jge
ficoms
or
jmp
clc
inc
jne
jne
mov
lret
xor
push
dec
cmpsl
mov
movsb
arpl
int
in
das
jbe
jno
xchg
inc
lods
mov
mov
shrb
rclb
adc
repz
jno
sbb
push
mov
or
push
out
imul
sarl
or
sub
outsl
js
addr16
cli
popa
mov
idivb
rolb
dec
inc
push
jne
fcmovbe
dec
adc
xlat
cmc
mov
mov
ja
popf
lock
pop
iret
or
pop
sub
jge
pop
sbb
je
sub
dec
shll
add
xchg
cmp
xor
aas
cmp
inc
ja
or
and
std
inc
jmp
sub
lret
call
hlt
psubsw
notb
sahf
daa
sub
mov
pusha
push
push
mov
or
pop
add
lods
ja
dec
test
and
push
scas
xchg
or
xor
enter
mov
push
mov
aad
inc
jmp
in
lret
cmp
lcall
mov
popl
push
jecxz
and
arpl
dec
adcb
xor
push
inc
mov
sbb
mov
sahf
jle
pop
cmp
mov
fidivl
mov
in
inc
fisubs
mulb
xchg
dec
testl
cs
les
or
fwait
pop
je
into
sub
dec
lcall
ljmp
outsb
adc
mov
xor
dec
xchg
cs
cmp
sbb
mov
pop
sahf
sbb
mov
jl
inc
dec
cmp
push
ret
jae
stos
test
sub
fwait
test
sahf
xchg
xchg
daa
ret
out
fmuls
addr16
mov
mov
pop
mov
jle
int3
scas
mov
dec
pop
cmp
pushf
mov
cltd
mov
inc
sbb
jle
push
ror
jo
mov
xchg
test
sbb
push
fs
lret
leave
dec
pop
mov
incl
sarl
mov
lcall
jnp
sub
dec
rolb
inc
jge
mov
test
ficomps
pusha
pop
inc
push
mov
test
lret
call
sbb
inc
sbb
pop
pusha
cld
adc
xor
rep
rcrb
mov
push
push
or
std
cltd
sub
jle
pop
loop
inc
lret
sbb
shll
adc
or
cmpsb
inc
pop
mov
adc
pop
xchg
mov
sti
jg
leave
leave
jo
subb
sub
push
xor
lods
inc
mov
idivb
fadds
dec
aas
mov
jmp
mov
cmc
mov
jl
mov
int
clc
xchg
mov
inc
xor
fldenv
insl
xchg
fimull
ds
test
btc
hlt
loope
add
add
mov
leave
push
mov
dec
push
pop
xor
xchg
in
jo
mov
out
je
aad
lds
into
mov
popf
dec
movb
ficoms
or
jnp
xchg
dec
or
cld
or
loope
adc
decl
mov
lea
enter
arpl
cmp
movsl
jmp
sahf
gs
mov
adc
pop
in
popa
xor
or
insb
fsubrl
jmp
mov
pop
out
aad
js
cwtl
xlat
aam
repz
push
aas
imul
js
mov
out
dec
arpl
mov
arpl
ret
int3
push
lahf
aam
dec
cmpsb
fidivl
xor
push
enter
mov
pop
outsl
insl
dec
cmp
mov
inc
dec
mov
mov
sbb
lret
push
negl
xchg
pop
sbbb
inc
pop
or
mov
lods
cmova
lahf
fsub
or
xor
or
imul
sub
getsec
add
or
adc
lock
xchg
add
push
rorl
hlt
sbb
and
mov
ljmp
mov
and
push
dec
jnp
vpshufhw
jge
test
inc
out
es
or
sbb
push
push
hlt
je
mov
inc
and
push
pop
movl
jno
xchg
pop
and
jae
mov
mov
in
or
fistps
call
cs
push
inc
into
or
or
sahf
loop
mov
cmp
pop
in
adc
cmp
cmp
pop
cld
pop
adc
xlat
dec
aad
mov
movsl
int
lret
sub
mov
mov
stos
in
fwait
and
dec
jno
fstps
ret
inc
xorb
inc
and
shlb
stos
cmpsl
test
call
iret
mov
push
scas
leave
add
push
mov
jb
xor
dec
movsl
cmc
testl
xchg
adc
jmp
pop
in
scas
jno
test
stc
imul
push
je
test
jns
mov
adc
roll
hlt
ret
cwtl
pop
lds
loop
xorl
pop
test
mov
pop
xchg
mov
popa
out
sub
xor
inc
outsl
jo
les
inc
dec
jl
sbb
mov
mov
adc
dec
shlb
stc
mov
mov
mov
inc
sbb
mov
sub
add
mov
pop
arpl
pop
mov
jg
or
lahf
xorb
cmp
js
ljmp
dec
repz
sti
scas
inc
clc
scas
sub
gs
xchg
push
ffree
hlt
cmp
mov
dec
fisttpl
fldcw
insl
ljmp
mov
inc
push
sub
lcall
icebp
adc
rcr
mov
mov
xchg
leave
in
sub
rcrb
sub
dec
sub
mov
mov
mov
shrb
movsl
inc
sti
int
cmp
inc
xor
inc
mov
out
fwait
dec
dec
mov
adc
test
push
inc
adc
out
or
jl
mov
es
sar
pop
cmc
nop
cmc
gs
and
sbb
inc
inc
loop
adc
inc
shrl
sbb
rclb
imul
inc
out
add
lahf
loopnew
push
in
fmuls
mov
mov
pop
inc
cmp
nop
ja
aaa
push
arpl
lods
inc
mov
push
iret
adc
lds
sti
test
in
ss
jne
test
mov
add
popa
jg
sbb
mov
lods
inc
das
mov
aam
mov
xchg
hlt
jnp
mov
jae
loope
leave
mov
fistl
je
pop
or
arpl
int
invd
mov
ret
inc
pop
out
or
adc
add
pop
mov
les
sub
lret
loop
repz
sub
or
fistps
fdivs
push
pop
xchg
rcrb
mov
dec
int
xchg
adc
stc
mov
popf
sub
xchg
pop
pop
mov
or
pusha
std
jne
idiv
push
aaa
lahf
xlat
inc
test
scas
hlt
adc
sbb
add
out
negb
fldcw
xlat
push
push
mov
sub
loop
mov
jmp
aaa
aaa
push
int3
sub
insb
clc
rcrb
mov
in
sub
stc
xor
outsl
sub
lds
loop
adc
cs
mov
mov
test
not
add
pop
syscall
dec
lods
dec
fisttpl
jb
fucomp
das
dec
adc
mov
xchg
adc
je
pop
outsl
movsl
filds
popa
lea
add
clc
mov
cwtl
std
fnstsw
mov
mov
xchg
imul
fisubs
mov
mov
lock
and
jecxz
je
sub
rcll
cld
lods
inc
xor
push
lcall
lret
pop
bound
jmp
and
mov
jbe
jns
jle
filds
xor
xchg
subb
shl
push
adc
fs
in
nop
sbb
scas
push
xor
mov
xchg
inc
push
push
xor
mov
add
inc
dec
ror
cmp
andl
pushf
ljmp
push
mov
cs
add
sbb
stos
mov
iret
stos
int3
iret
or
xchg
add
mov
fcmovne
imul
sti
popf
sti
dec
sti
jbe
dec
push
mov
ret
mov
cmp
fwait
subl
pop
cmpsb
push
mov
inc
mov
sub
xor
movsb
cmp
jmp
xor
dec
xchg
and
sbb
roll
loope
dec
mov
scas
cmpsb
fisttpll
fdivl
enter
mov
lret
jnp
mov
leave
jp
fisubl
stos
and
cmp
call
push
aam
lods
dec
imulb
mov
jl
cmp
mov
mov
loop
sbb
iret
xorl
ret
clc
xchg
andb
dec
cmp
out
push
jbe
push
sub
sbbl
inc
inc
mov
dec
mov
mov
pushf
sub
xorl
rcrb
data16
ss
sti
push
cli
sub
sub
push
mov
pop
fyl2x
inc
jo
mov
aad
fwait
xchg
xor
in
jge
lret
sub
pop
xor
mov
das
mov
es
in
mov
pushf
leave
push
clc
xlat
pop
je
ret
sbb
in
out
mov
iret
test
mov
ljmp
sbb
call
hlt
inc
aas
mov
shr
loop
mov
int
push
iret
je
sbb
ja
mov
add
stc
scas
adc
imul
cltd
test
ja
in
ljmp
mov
mov
fstps
cmp
repnz
nop
stc
dec
addr16
push
cmp
loope
sub
inc
inc
das
cmc
cmp
sub
outsb
subb
insb
rolb
or
adc
cmp
sahf
aas
dec
mov
outsl
cmp
lock
adc
pusha
icebp
inc
in
mov
cmp
pop
fisttps
xchg
out
pushf
push
xchg
cmp
push
outsb
xchg
xlat
pop
jp
pmullw
shlb
aas
fisubrs
mov
fbstp
sahf
bndldx
ljmp
push
outsl
push
jb
push
mov
scas
in
lcall
stos
lret
movsl
cmpl
adc
addr16
mov
fisubrs
inc
adc
add
cld
in
mov
rclb
inc
add
test
sti
jae
shlb
movsb
jle
into
out
repnz
mov
xchg
cmpsb
or
pop
xchg
sbb
and
mov
xor
jl
jge
aam
pop
or
cmpsl
out
push
fbstp
mov
or
mov
and
into
loopne
lods
pop
test
jbe
in
mov
outsb
jg
jl
jbe
test
or
push
xor
pop
sbb
inc
pop
xchg
pop
ficoms
aad
fnstcw
repnz
xchg
arpl
fisubrl
pusha
ret
cmp
dec
loope
or
and
cs
stos
xor
inc
jae
xor
outsl
sbb
jle
sub
aam
add
icebp
or
fs
cli
ror
adc
mov
loop
les
js
inc
lcall
jle
pop
out
sub
mov
and
push
sti
sbb
aaa
cmp
es
sti
mov
movb
rolb
add
scas
push
and
inc
insl
ss
das
add
test
sub
and
xchg
call
xor
notb
dec
aaa
fsubl
mov
rcrl
cmp
and
data16
mov
inc
xchg
sbb
aad
push
call
push
scas
iret
mov
aam
xlat
fwait
pop
mov
push
das
dec
jno
or
fcmovne
fstpl
pop
lock
pop
or
xchg
je
mov
dec
mov
hlt
xlat
fs
rcrl
pop
imul
mov
cwtl
mov
push
mov
movb
out
jne
lea
jne
outsl
fsubr
mov
mov
push
xchg
mov
icebp
fiaddl
pop
sahf
gs
push
push
sbb
jmp
inc
fidivl
shlb
xchg
pop
xchg
push
sub
in
mov
das
pushf
imul
lock
call
addr16
lret
dec
int
imul
pop
aam
pop
xchg
aas
es
cmc
repnz
add
pop
jmp
pop
fcompl
push
cmpsb
dec
cmovne
push
aam
fbld
cmc
stc
or
lahf
mov
imul
ljmp
fistl
push
dec
arpl
sub
leave
insb
mov
or
outsl
sbb
pop
pop
inc
into
xchg
xor
and
cmp
sub
je
mov
push
push
push
clc
and
inc
ss
pusha
inc
mov
cmp
sarl
mov
dec
lds
std
leave
mov
push
fdivr
aad
push
pop
movsl
popf
mov
mov
aad
mov
imul
icebp
cld
repz
test
mov
loope
inc
sub
xchg
xchg
jmp
in
dec
ret
jge
mov
jb
cmp
jnp
dec
pushl
add
push
cmp
movsl
mov
mov
ljmp
scas
js
rdpmc
jb
aaa
and
aaa
jnp
insl
data16
orl
lret
dec
sub
xchg
mov
outsb
inc
xor
int3
xchg
ljmp
movb
xor
aaa
mov
add
xor
mov
fdivrl
pandn
ja
add
int3
cmp
xchg
out
movsb
into
push
sbb
movsb
inc
push
mov
or
das
sbb
stc
cmc
cmp
hlt
loope
fnstcw
sarb
and
leave
jecxz
cmp
fnstenv
inc
or
into
cmp
clc
fistpll
sub
cmp
pop
or
mov
push
pop
adc
sub
shrl
mov
mov
jmp
mov
rorb
cmp
lret
out
or
cmp
call
decl
fsub
pop
sarb
pusha
adc
gs
push
adc
mov
dec
xorb
or
dec
add
stc
sarl
add
jb
or
orb
int3
add
jb
aaa
xor
mov
mov
mov
mov
lock
jbe
aam
dec
pop
ja
xor
mov
adc
mov
iret
loop
call
push
inc
mov
pop
div
or
movsl
pop
ret
lods
push
mov
clc
lahf
pop
xchg
add
xchg
pop
std
add
stos
sarb
loopne
lods
xchg
shll
pop
xor
push
sbb
add
sbb
push
and
movsb
out
push
adc
mov
js
lcall
dec
imul
popa
ljmp
lods
sbb
push
lods
mov
add
jae
aam
in
xchg
imul
int
pop
jne
sbb
mov
mov
xchg
pop
iret
dec
cmp
stc
shrl
outsb
push
dec
mov
xchg
fidivrl
jae
lods
mov
and
jle
push
push
mov
xchg
pop
xor
and
cmp
clc
sub
outsl
aas
dec
mov
data16
pop
test
leave
ljmp
out
mov
repnz
fwait
inc
ja
lret
xor
inc
mov
in
sti
pop
mov
add
repnz
cmp
jmp
sbb
dec
xor
jb
or
adc
arpl
jge
and
rcl
test
imull
or
lcall
jns
inc
push
sub
repz
pop
xor
sbb
iret
mov
mov
lock
test
bound
lcall
mov
inc
jnp
bound
out
std
pop
cmp
andb
pop
clc
aam
lods
daa
outsl
or
ret
and
pop
or
fs
into
stos
adc
shll
les
imul
loopne,pn
fildl
push
mov
sub
xor
rcll
shll
jecxz
ret
stos
sub
iret
and
sbb
dec
mov
pop
sub
adc
popa
mov
sbb
jg
sbb
cmp
int
call
sub
cld
pop
dec
enter
jbe
mov
stos
xchg
aad
loope
mov
inc
and
cmp
inc
jg
inc
cmpsb
pushl
insb
jl
pusha
xor
les
insb
cmpsl
js
sbb
mov
sahf
aaa
ret
jle
pusha
pop
out
jg
push
repz
mov
jae
out
aam
mov
ja
push
fiadds
cmc
sub
jne
lds
pop
add
xchg
shll
and
into
dec
cli
dec
add
pop
icebp
and
xchg
pop
fwait
mov
sbb
and
dec
stc
adc
inc
scas
cli
and
sbb
testb
mov
jle
push
cli
int3
cmc
bound
insl
je
push
jne
scas
xchg
push
inc
and
adc
sbb
inc
adc
mov
mov
les
gs
inc
sub
lock
pop
dec
jne
mov
mov
movsb
insl
jmp
pop
adc
mov
fidivrl
js
jne
inc
lds
push
das
int
iret
dec
push
addr16
add
sub
ljmp
pop
fistpll
jno
cli
mov
sbb
push
lret
xchg
rcll
pop
cmpsb
or
icebp
jmp
inc
scas
push
ret
inc
or
add
adc
jae
inc
or
cld
cmp
repnz
mov
mov
int
dec
mov
mov
in
das
ja
dec
loope
sti
push
arpl
cmc
aam
jl
xor
ret
lret
cmpsb
mov
or
adc
push
std
mov
xor
mov
xchg
or
fmull
lahf
push
jnp
pop
cltd
xor
dec
repz
xchg
xlat
jp
mov
and
add
cmp
sbb
sahf
arpl
push
mov
adc
and
aas
shll
pop
xor
xor
jl
inc
fidivrl
movsb
push
push
fimull
push
movq
test
and
repz
push
jg
ss
inc
push
cmp
mov
out
sub
pushf
stos
hlt
and
lret
subl
and
ret
or
daa
and
pop
clc
in
xchg
fdivs
cld
lret
arpl
sub
lds
lgs
mov
loopne
cmp
fwait
add
clc
pop
hlt
xchg
imul
int3
les
stos
ds
sbb
rorl
clc
and
jp
xchg
fidivs
out
cmp
je
cwtl
adc
and
movsb
pop
push
aaa
or
loopne
lea
sbb
stos
testl
and
fwait
jno
mov
pop
std
insb
push
push
jecxz
inc
stc
jge
mov
mov
mov
mov
mov
repz
sbb
fiaddl
cmp
jge
je
sbb
add
js
ret
sub
in
out
jp
je
add
or
outsb
xchg
inc
repz
dec
movsb
and
push
mov
in
clc
pop
lcall
xchg
in
jp
call
ds
pop
pushf
les
lods
test
pop
bound
push
and
pushl
xchg
sub
bound
xor
std
jp
sarb
push
jae
dec
dec
pop
mov
push
fs
clc
xor
pop
ror
and
fildll
push
mov
sti
dec
adcb
test
pop
out
pusha
sbb
sbb
dec
dec
dec
out
cmpsl
pop
dec
daa
scas
push
adc
insl
insl
mov
leave
push
dec
cs
bound
adc
xor
movsb
cwtl
pop
pop
insl
inc
sbb
jno
ss
aad
pop
xchg
dec
xlat
cmpsb
dec
push
adcb
repnz
pop
xchg
scas
add
fadd
mulb
inc
cmpsb
ret
sub
jle
lret
mov
outsb
push
aad
fcompl
jecxz
mov
divl
pop
inc
dec
insb
push
and
push
jno
lret
xor
dec
xchg
pop
pop
loop
sub
outsl
testb
and
pop
add
hlt
pop
lcall
and
shrl
lret
call
dec
add
pusha
into
in
xchg
test
nop
arpl
sub
mov
xor
in
es
mov
scas
xor
mov
in
mulb
jg
mov
lods
pushf
push
pop
repnz
inc
lods
cmp
xor
aam
jno
mov
mov
test
mov
pop
xchg
pop
jae
push
das
xor
xchg
sbb
mov
cmp
cli
jbe
cmp
xchg
cmpsl
and
sub
jg
mov
mov
inc
dec
sub
jge
mov
scas
xchg
mov
pop
fiadds
mov
dec
dec
xor
iret
in
mov
mov
stc
int
add
jbe
xchg
insb
ficoml
and
sbb
pop
sbb
push
out
clc
dec
pop
sub
xor
fdivrl
sbb
sbb
pop
jno
jno
jno
in
cmp
or
jp
fimull
icebp
xor
pop
stc
sub
xor
xchg
mov
repz
lds
stos
in
lahf
inc
shr
jns
mov
fisttpl
xlat
xchg
cmc
sub
call
sub
roll
cmc
repz
or
or
push
out
push
aam
sub
fsubl
mov
movsb
cltd
dec
adc
movsb
adc
or
push
aad
stos
xor
repnz
stos
adc
push
and
lahf
inc
lock
add
cli
or
test
lds
popa
pop
inc
sub
mov
push
fmull
iret
dec
mov
out
pop
out
movsl
xor
and
push
out
bound
lods
repz
mov
scas
lcall
inc
scas
dec
stc
loop
out
cmpsl
cltd
clc
sbb
lds
xlat
std
lods
in
add
es
mov
jl
sti
push
add
inc
xlat
iret
push
jnp
or
lcall
in
call
and
in
jae
adc
ss
pop
push
pop
jae
test
bound
add
push
adc
cmpsl
xchg
pop
mov
cmp
out
shlb
jae
jp,pn
or
mov
pop
fmuls
sub
incb
in
stc
or
xchg
pop
lcall
xchg
sbb
icebp
push
xor
loop
xchg
push
sbb
push
jmp
mov
mov
xorb
sarb
outsl
lods
and
outsb
cmpsl
test
into
mov
cmpl
popf
inc
mov
dec
ficoms
adc
repz
gs
jecxz
and
test
outsl
or
movsb
push
adc
inc
mov
ds
xor
mov
cwtl
movsb
sub
loop
sbb
lahf
xchg
xchg
sub
jae
jbe
inc
jecxz
xchg
mov
in
sub
shll
jge
sbb
lret
repnz
shll
jnp
adc
dec
movsl
cmp
test
lret
popw
jne
adc
mov
pushf
adc
adc
pushf
xor
aaa
sti
sbb
dec
mov
int3
mov
bound
cmp
nop
insb
mov
mov
cli
stos
fld
cmp
or
fcoml
mov
xor
cld
daa
dec
test
jns
in
fdivrs
andl
mov
xchg
call
loopne
mov
cmpl
repnz
sbb
inc
jl
mov
imul
sbb
and
lret
movsl
sub
es
aaa
adc
in
adc
inc
lret
jno
add
fwait
cs
pop
push
insb
sbb
dec
and
jg
inc
out
pop
mov
roll
testb
dec
push
push
scas
jecxz
push
jecxz
mov
sbb
xchg
clc
dec
sbb
cld
xor
sahf
cwtl
fimuls
mov
inc
push
ret
mull
outsl
sbb
inc
push
inc
idiv
leave
jnp
fldcw
movsb
sub
cld
nop
test
or
adc
xor
jae
jne
xor
add
aad
lahf
mov
addr16
fidivs
adc
sbb
xor
mov
pusha
cmp
into
inc
jnp
adc
push
inc
sbb
inc
sub
xchg
fisttpll
imul
arpl
sub
es
pop
jl
mov
sbb
pushf
movsl
aad
jnp
je
pop
sbb
dec
xchg
xor
and
movsb
ja
push
pusha
faddl
lods
cld
mov
sbb
mov
sub
outsl
outsb
adc
and
xor
sbb
enter
xor
daa
jne
stos
push
dec
rorb
push
ss
lret
pop
icebp
xlat
notb
adc
std
std
push
dec
add
pushf
jno
jo
push
mov
xchg
hlt
jae
in
and
hlt
mov
fbstp
insb
repz
popf
scas
sbb
jg
mov
cmp
jmp
repnz
mov
push
and
pop
lds
jge
shrl
inc
cmp
sub
dec
pop
ret
mov
mov
repnz
push
orb
add
mov
in
cmc
add
push
cwtl
sbb
lea
add
dec
imul
call
mov
ds
and
push
movsb
lds
in
push
out
xchg
fldcw
mov
mov
push
mov
cmp
fiadds
xchg
das
fmul
mov
and
mov
hlt
pop
inc
push
inc
mov
fwait
imul
adc
decl
adc
or
mov
cmc
cmc
lahf
add
and
int3
mov
add
js
mov
nop
adc
adc
je
test
add
in
jl
push
pop
iret
inc
les
test
cmp
js
cld
test
cmp
loopne
hlt
imul
mov
pop
mov
outsb
lods
add
stos
sbb
jno
and
stos
or
xlat
sub
ret
xchg
notl
imul
adc
stos
xor
aad
pop
ret
xchg
loopne
cmp
je
jmp
adc
xchg
ret
jge
outsl
xchg
dec
jmp
lock
rcl
shll
cmp
xor
outsl
mov
cmp
ljmp
fildl
sbb
lret
xor
xchg
push
repnz
pop
xor
fisubs
stos
pushf
cmp
ret
cmp
push
js
cwtl
dec
mov
repnz
mov
dec
mov
imul
inc
hlt
inc
out
psllw
inc
mov
imul
cmc
push
jp
insb
dec
pop
lock
mov
mov
mov
cmp
cmp
mov
in
stos
jmp
and
xor
fstl
lea
cmp
ss
push
push
mulps
repnz
push
pop
dec
jg
movsb
jmp
xchg
je
adc
xor
movsb
iret
push
adc
test
pop
mov
dec
fwait
adc
xchg
in
pop
mov
push
xchg
testl
push
mov
lods
in
mov
fdivs
shrb
test
ret
mov
sub
xchg
mov
jmp
mov
push
sub
push
in
push
out
mov
repz
xor
loopne
and
add
cmpsl
jmp
nop
jle
mov
popa
lock
and
adc
inc
push
cld
test
stc
nop
mov
mov
cli
test
pop
inc
cs
pop
inc
pop
push
hlt
cmp
adc
xor
jl
sbb
loop
xchg
loop
mov
xchg
jns
pop
movaps
insl
or
add
push
mov
ja
fimull
test
or
aad
xor
loopne
cmp
insl
aas
nop
stos
push
popf
cmpsb
aaa
push
cli
and
jmp
mov
std
or
push
xchg
pop
add
gs
fs
mov
int
filds
mov
lock
idivb
xchg
es
test
mov
push
push
cltd
es
mov
mov
mov
into
fnstsw
nop
push
pop
in
ss
mov
inc
jp
dec
push
push
mov
sbb
xchg
popf
movsb
mov
ret
xchg
js
lcall
lret
fsts
xor
dec
cmpsb
fwait
repnz
sub
js
cli
lods
push
or
addr16
mov
fsubrs
cmp
pop
dec
mov
in
jb
xor
aas
pop
xchg
pop
inc
or
int
outsl
cmp
call
fnsave
sarb
cmpsl
jecxz
mov
cmc
call
repnz
cmp
cld
or
mov
adc
loopne
inc
pop
and
sub
repz
shr
mov
loop
mov
popf
xchg
inc
pminub
inc
or
sbb
roll
inc
sub
lret
std
sbb
lds
xchg
lock
jp
jmp
inc
insb
push
push
popa
aad
mov
sub
and
jl
cmp
xchg
jno,pt
addr16
sbb
into
aaa
imul
repz
fwait
ljmp
xor
mov
out
mov
cmp
and
in
adc
stos
dec
idivb
ja
subb
jnp
cmp
inc
aaa
das
jge
pop
inc
out
mov
mov
rcll
imul
cltd
sub
add
loope
push
add
jecxz
cmc
sbb
xor
sbb
dec
add
aas
pop
mov
les
cmp
ficompl
add
push
xchg
mov
jbe
pop
jmp
cmp
out
imul
fisttpl
aaa
cmpsl
sbb
and
jnp
dec
jno
ss
mov
loope
test
fildl
jp
test
andb
int
adc
stc
icebp
mov
fs
pop
mov
mov
popa
sub
rcrb
jbe
lods
ja
sbb
jae
jb
mov
cmpsl
lock
les
xchg
or
mov
jp
test
scas
xchg
xor
loopne
js
or
dec
xor
add
fcomps
mov
scas
pop
repz
xchg
mov
pop
cmp
jnp
pop
cmpsb
fildl
test
xor
push
mov
pop
pop
loop
or
mov
or
roll
or
faddl
mov
push
mov
dec
add
rorb
daa
cmpsb
xor
dec
cmp
lcall
cmp
push
pop
sbb
fmuls
fldcw
or
ret
sub
out
pop
jae
xchg
push
push
pop
test
push
push
fisubrs
call
add
jmp
xor
out
cmpsb
shlb
pop
mov
cmp
enter
mov
mov
in
fadds
cmpb
cmp
jno
add
pop
pop
push
test
jbe
loop
push
cmp
jno
test
and
dec
push
sbb
test
dec
sbb
push
in
insb
pushf
cmpsl
roll
add
icebp
cmp
cmp
insb
inc
pop
pop
mov
xlat
pop
nop
pushf
lock
jae
jno
xor
cmp
scas
mov
cmpsb
outsw
ret
add
dec
out
mov
mov
xchg
in
stos
in
fs
sarl
sub
mov
dec
mov
sub
sbb
test
sub
sub
loope
jbe
cltd
loopne
mov
jne
mov
xor
dec
in
pop
inc
pop
mov
sbb
cmpsl
les
mov
daa
inc
mov
sbb
int3
adc
inc
push
mov
leave
das
inc
mov
sbb
or
sub
lret
call
xchg
jno
mov
icebp
dec
fldl
adc
stos
add
push
or
inc
fcmovbe
lods
and
mov
jns
or
cmpl
idivl
scas
bsr
icebp
xor
outsl
and
call
mov
jmp
push
into
shr
inc
push
dec
or
xchg
add
lea
iret
insl
out
ljmp
mov
xor
jne
cmc
es
mov
dec
or
push
clc
push
mov
push
jl
sbb
cs
fildl
jp
or
push
fcmove
fs
movsl
inc
push
xchg
shl
sbb
inc
int3
push
push
fiaddl
xchg
fiaddl
mov
hlt
insb
jne
push
and
or
das
push
jecxz
ror
cmp
cmpsb
jae
pushf
sub
xor
cld
aam
ljmp
cmp
test
inc
xor
loopne
fldl
scas
push
push
scas
dec
lret
lret
lcall
rorl
imul
jp
test
mov
push
fs
and
sub
push
jmp
in
mov
adc
stos
jecxz
pop
out
xorb
pop
cmc
mov
sub
insb
in
push
jns
mov
push
inc
mov
mov
cmc
jp
dec
lds
push
and
outsb
int
sub
movsl
insl
pop
sbb
aam
dec
adc
shrb
xchg
icebp
dec
mov
jp
jl
add
sub
dec
mov
cmp
pop
jl
pop
int
jge
sub
cmc
out
sub
push
jno
js
mov
out
jecxz
repz
sub
xchg
iret
insl
imul
and
insb
xchg
enter
je
mov
inc
daa
jmp
inc
in
push
mov
push
jg
lods
pmuludq
cmovnp
mov
xor
dec
pop
repnz
xchg
loop
xchg
mov
pop
xorb
hlt
jp
sarl
das
and
out
push
inc
filds
arpl
mov
jl
jmp
bound
add
enter
pop
pusha
push
ljmp
pop
mov
rep
into
xor
sub
mov
and
loop
push
outsl
push
or
stos
cmp
mov
mov
inc
inc
imul
out
dec
dec
aad
xchg
push
xchg
push
jne
dec
es
in
jge
bound
cwtl
add
fsubrs
push
mov
in
daa
xor
and
jle
test
add
fildll
cmp
or
mov
int3
test
xor
scas
dec
sbb
pop
and
jo
fsubl
movsb
mov
inc
cmp
dec
or
jbe
xchg
jecxz
adc
pop
pop
fsub
add
loopne
movsb
in
push
testb
mov
ds
mov
sahf
or
aas
mov
loope
inc
pop
pop
aad
or
adc
pop
fwait
mov
mov
in
add
pop
stc
and
add
cltd
push
call
jb
jge
mov
adc
pop
jno
mov
xchg
lahf
push
pop
into
xchg
xchg
adc
shll
ss
and
inc
fisubs
adc
inc
xlat
add
pushf
add
cs
aas
pop
jno
mov
roll
inc
mov
aas
mov
fs
outsb
mov
rolb
pop
dec
push
xchg
cwtl
das
xor
push
mov
stos
out
or
sub
mov
push
int
mov
mov
inc
adc
imul
pop
push
xor
scas
iret
mov
jae
push
push
jp
addr16
leave
xor
stos
fisubrl
sbb
cmp
inc
mov
pop
lods
divl
mov
jl
imul
sub
xchg
vhsubps
test
xor
sbb
daa
out
in
xlat
sbbl
movsb
sbb
leave
add
das
ljmp
push
xchg
adc
sub
mov
and
lock
push
mov
add
dec
inc
push
lahf
sbb
xor
mov
rorb
push
neg
outsb
out
xor
paddq
push
adc
scas
push
adcl
jmp
fwait
iret
movsl
sahf
inc
adc
push
add
mov
fisubl
enter
dec
test
pop
scas
lock
mov
dec
and
jge
mov
repz
and
cld
and
mov
jae
inc
push
add
loopne
mov
xchg
dec
lock
ret
je
lcall
add
cmpsl
into
add
stos
in
adc
inc
sbb
xchg
inc
xor
mov
imul
cmp
mov
outsl
sbb
das
adc
sahf
icebp
cmp
out
cmp
lcall
negl
pop
lock
iret
push
cwtl
fsubrl
jne
out
outsl
out
inc
xlat
add
mov
mov
test
cmp
pusha
cmpsb
imul
mov
hlt
sub
push
adc
and
jns
repnz
jge
xor
ss
xor
dec
xchg
dec
and
inc
pop
mov
xchg
pop
out
mov
xor
ljmp
insb
sbb
pushf
hlt
dec
jl
cmovg
adc
in
dec
pop
dec
ret
addr16
shrl
fstl
and
mov
stos
mov
idiv
pop
sub
or
popf
addr16
fucomip
addb
xorb
mov
push
mov
test
adc
push
dec
dec
adc
xchg
outsl
orb
cli
mov
outsb
jecxz
movsl
loop
incl
jno
add
ss
push
stos
add
inc
mov
dec
mov
adc
pop
sbb
lods
push
xorb
dec
test
test
ja
push
lds
mov
or
or
fs
std
fistpl
adc
icebp
in
inc
pop
or
movsl
pop
push
push
test
mov
jecxz
test
outsl
jb
cld
sub
lret
inc
rcll
movsl
test
push
scas
stc
and
sti
push
sub
fdivs
mov
inc
out
cltd
xor
pop
hlt
ret
push
cmp
dec
mov
lock
and
mov
inc
mov
lret
xlat
sub
add
sbb
call
push
in
insb
pusha
sbb
movsb
xor
sub
imul
add
sar
jmp
aam
mov
push
pop
adc
addr16
adc
aas
add
inc
subb
movsb
sub
andl
enter
mov
into
stc
jp
lds
and
ja
xchg
lods
fadd
lahf
push
in
or
cmp
fsubl
sbbb
mov
popa
cmpsb
pop
shlb
mov
idivb
and
repnz
les
add
and
enter
add
arpl
or
and
push
xor
mov
bound
xchg
inc
data16
inc
dec
adc
jge
arpl
xchg
jne
xchg
and
pop
mov
lods
mov
fdivr
adc
xchg
inc
insb
lds
add
xchg
mov
mov
adc
cmp
fdiv
xlat
mov
andb
dec
dec
jl
stc
stos
imul
insb
enter
pusha
sbb
jne,pt
push
sub
adc
push
pop
mulb
push
sbb
bound
jp
adc
adc
xor
pop
add
lods
test
xor
cli
sbb
and
jge
jle
imul
addr16
stc
movsb
test
lret
dec
lcall
data16
adc
fidivrl
jle
outsl
pop
sub
test
or
jp
or
push
popf
arpl
cmp
or
and
dec
int3
mov
cmp
lahf
push
dec
jg
push
pop
sub
sub
xor
jle
stos
popa
cmp
push
jnp
mov
ret
pop
inc
xor
loope
scas
jb
adc
test
pop
pop
jo
push
sub
adc
jne
imul
and
in
or
daa
lahf
inc
xchg
sub
leave
loop
pop
aaa
leave
rolb
call
cs
dec
jne
fadds
pmulhw
insl
scas
jle
outsl
mov
xor
cwtl
xor
dec
add
add
mov
sub
sbb
in
jmp
movsb
cmp
dec
mov
sbb
daa
xor
or
jno
aam
mov
push
mov
add
mov
aas
lea
mov
and
inc
lea
xor
aam
add
idivb
fmul
pop
adc
outsl
aaa
stc
mov
mov
imul
mov
xor
out
clc
push
lret
push
pop
call
xchg
das
dec
int3
xchg
push
xor
fldt
xor
int
push
push
scas
mov
arpl
movsb
add
stc
ret
dec
ret
mov
aam
aam
mov
xchg
jne
daa
push
dec
int
pusha
mov
inc
out
rolb
data16
movsb
je
cmp
repz
dec
and
hlt
mov
and
cmp
mov
add
in
fistpll
sahf
imul
inc
and
and
xor
fidivs
jno
pop
sbb
scas
inc
mov
popa
sbb
int
mov
aaa
push
sbb
cwtl
int
fwait
push
in
add
push
add
pop
jl
sub
inc
aad
push
or
daa
pop
pop
mov
xor
pop
mov
sub
inc
leave
out
and
shl
hlt
jb
nop
test
int3
je
jg
out
mov
xchg
pop
cltd
sbb
js
lea
sub
jp
inc
lea
jp
xchg
dec
sbb
mov
cmpsl
dec
push
push
pop
cltd
enter
adc
pop
adc
jno
fadds
add
jnp
dec
les
dec
stos
enter
add
mov
dec
pop
testl
push
jmp
add
stos
and
faddl
lcall
mov
mov
mov
and
dec
xor
mov
inc
mov
push
mov
test
stc
es
adc
mov
sub
push
pop
pop
sub
js
mov
stos
ret
pop
sub
shrb
aaa
adc
inc
cmp
ja
mov
orb
mov
push
adcb
xor
mov
into
repnz
xor
mov
stos
adc
mull
adc
fmull
imul
mov
das
mov
in
jg
dec
cwtl
out
push
sub
and
out
inc
xchg
xchg
push
sbb
xchg
div
addr16
push
std
dec
dec
mov
mov
jp
xchg
in
out
push
stos
int
je
sub
pop
clc
vpslld
or
test
adc
sbb
jnp
data16
test
mov
dec
mov
pop
adc
pop
and
fisubl
push
dec
dec
out
in
data16
push
mov
mov
sub
pop
or
imul
ds
gs
add
or
or
loop
pop
arpl
cmpsb
xor
xchg
sbb
rcr
scas
fwait
testb
cmp
jmp
sub
mov
mov
inc
mov
inc
xchg
dec
in
xchg
movsl
mov
int3
mov
faddp
pop
shrb
ret
call
sar
in
sbbb
fwait
pop
xor
sbb
out
pop
stos
dec
shlb
cmp
pop
adc
loope
repz
in
dec
cmc
cwtl
outsb
lret
sbb
sbb
dec
push
imul
pop
and
insl
les
mov
pop
jle
sub
inc
add
into
stos
adc
dec
lods
or
mov
cmc
and
cmpsl
pushf
jmp
rolb
stos
add
loop
cltd
cmp
dec
xor
push
ficoms
cmp
mov
and
adc
lahf
jb
cmp
cmc
into
jns
dec
nop
mov
and
out
xor
stos
inc
cmp
shrb
push
pop
lods
xchg
sbb
in
mov
cmp
shlb
test
push
clc
int
or
lcall
orl
push
sahf
sub
mov
dec
out
mov
xchg
popa
leave
mov
mov
divb
dec
xchg
dec
aaa
inc
mov
imul
cmp
mov
addl
stos
jle
mov
insb
inc
hlt
jbe
inc
xchg
cmp
sub
repz
cmp
outsl
and
pop
sbb
jns
pop
mov
xor
jl
pop
pushf
lods
cltd
jmp
or
mov
jo
mov
in
idiv
orl
outsl
scas
dec
xchg
daa
stc
ror
and
iret
ds
test
jne
loop
lds
push
sbbl
jp
in
testl
pop
cmp
xor
orb
push
mov
mov
pushf
push
cmp
into
mov
sbb
add
jb
mov
mov
xor
add
and
xchg
xchg
dec
js
xchg
fistl
lods
push
rorl
mov
fisubs
test
dec
es
daa
xchg
movsl
sahf
shrl
stos
je
ljmp
pushf
push
lcall
subb
xchg
jae
fs
jbe
sarb
jnp
cmp
xchg
mov
xchg
cwtl
clc
xor
adc
pop
jno
xchg
sahf
fs
mov
xor
mov
popf
xor
mov
roll
or
shlb
xchg
cwtl
stos
add
mov
out
lods
mov
jle
add
mov
in
pop
test
repnz
sbbl
shrl
es
xchg
lret
loop
xor
into
shll
push
clc
add
inc
out
mov
sub
mov
mov
fistpll
adc
aad
out
xchg
mov
sti
dec
fnstsw
inc
repnz
sbb
gs
scas
add
insb
lds
add
add
ret
mov
lea
xchg
dec
sbb
push
call
lret
lahf
outsl
idiv
ret
mov
leave
hlt
cltd
cmc
jb
mov
stos
inc
fildll
ds
dec
lds
popa
and
aaa
int3
push
xchg
or
adc
rolb
cmpl
adc
fsubrs
xor
and
sbb
push
imul
bound
into
ljmp
pop
fwait
lret
mov
sbb
xchg
mov
test
inc
jmp
xor
inc
clc
add
popa
xchg
cli
or
inc
pop
mov
repnz
scas
and
add
gs
cwtl
iret
out
inc
jge
push
iret
xchg
testl
cwtl
and
push
cmp
jno
fs
int
jb
iret
js
push
ret
xchg
push
out
fcomp
sub
mov
lcall
jae
inc
out
cmp
dec
xchg
jmp
sbb
mov
mov
icebp
xchg
insb
mov
add
sub
ret
ljmp
mov
cmpsl
mov
les
int3
ja
xor
dec
pop
jge
test
xor
pop
and
push
and
dec
mov
xchg
add
daa
mov
sub
cmp
enter
sahf
pop
lods
in
repnz
and
nop
mov
jb
in
dec
and
cmp
repnz
adc
adc
dec
lret
pop
xchg
rclb
xchg
in
daa
or
rorl
out
xchg
and
push
add
inc
test
ds
leave
mov
cmp
fcomi
shll
xchg
xchg
lret
les
and
outsb
jg
lcall
cmc
ret
mov
addl
cltd
cmpsl
fiaddl
jmp
jmp
aas
leave
pushf
dec
xor
inc
pop
pushf
dec
lods
or
or
out
idivl
push
jle
lahf
xchg
into
mov
cld
jns
popa
ds
pushf
lcall
mov
push
jae
or
jae
add
push
sub
sbb
xchg
mov
sarl
icebp
pop
subb
mov
not
push
aas
cmpsb
fstpt
rcll
das
pop
jl
das
push
cwtl
adc
sti
cmp
add
mov
rorl
sbb
and
mov
pop
inc
xchg
xor
lds
and
xchg
les
repz
outsl
mov
imul
xchg
fs
jae
lcall
xchg
or
call
out
fimuls
and
push
pop
xchg
cli
sbb
and
sbb
add
repz
jmp
lret
mov
adc
sub
jnp
push
mov
insl
aam
sti
adc
ja
dec
into
pop
pop
je
dec
imul
lret
lds
out
inc
jo
scas
cmpsb
out
pop
sub
stc
subb
jl
cwtl
xor
lret
add
push
xchg
lods
imul
xchg
jle
test
in
pusha
xor
into
arpl
dec
imul
inc
sub
loop
xor
pop
lcall
test
mov
mov
out
mov
pop
or
filds
test
dec
out
js
lret
dec
and
jnp
mov
adc
add
add
adc
adc
cwtl
adc
mov
cmp
iret
sub
inc
aaa
jge
mov
cmpsb
jbe
dec
in
mov
push
lcall
adc
cmp
sub
movsl
adc
rcrl
lock
fnstsw
and
jecxz
jmp
popa
push
aad
cmp
lods
mov
mov
stos
mov
hlt
hlt
dec
jmp
movsl
dec
push
xchg
sbb
fadds
inc
lahf
gs
push
test
mov
shrl
std
aaa
gs
inc
dec
mov
shll
dec
add
mov
inc
push
xchg
dec
shr
icebp
jecxz
jns
pop
scas
sti
mull
pop
mov
inc
mov
xlat
push
aaa
aad
sub
into
or
int
dec
mov
rorb
int3
adc
int3
cmc
ret
cmp
pushf
inc
mov
ret
jno
xchg
ss
vmovdqa
xlat
mov
jbe
loopne
adc
test
mov
xor
bound
jmp
jle
sub
cltd
lcall
mov
adc
fidivrl
inc
cmp
inc
das
movsl
aad
and
out
jo
dec
mov
pop
imul
mov
mov
jno
sbb
xchg
dec
lahf
or
repz
mov
dec
fsubl
arpl
data16
movsb
dec
sub
ja
shl
outsl
ljmp
sub
outsl
sbb
cmpsb
inc
aas
push
pop
xlat
stos
sub
stc
xlat
inc
daa
cltd
xchg
lret
fsubrs
ljmp
push
inc
mov
inc
push
push
jbe
jle
mov
mov
cwtl
mov
out
icebp
lcall
xchg
mov
lret
mov
sar
pusha
add
cmp
xchg
test
add
sahf
leave
movsl
sbb
mov
ret
flds
pop
xchg
out
add
add
mov
cmp
jb
mov
push
sub
mov
mov
sbb
mov
dec
fnsave
mov
in
hlt
lock
push
cmp
orl
xor
push
test
mov
inc
add
sbb
test
jg
jno
inc
jmp
inc
sbb
aam
addb
push
nop
in
into
pop
pop
out
movsl
mov
push
jg
adc
xchg
popf
cli
addb
cmpsl
jle
popf
dec
ja
out
cli
outsl
jns
insb
imul
fsubrs
xchg
std
daa
call
in
xchg
inc
jmp
xor
fistpl
inc
fcom
adc
sbb
jb
push
jl
mov
dec
mov
jns
jg
int3
movsl
pop
adc
cmp
stos
push
lcall
sahf
push
mov
cmp
popf
mov
cmp
rcl
leave
mov
push
outsl
xor
nop
fwait
inc
xorb
push
mov
push
inc
mov
fbstp
add
aam
sti
ss
cltd
sbb
mov
js
out
cwtl
xor
hlt
and
mov
xor
xor
std
mov
mov
jns
pop
or
mov
enter
xchg
mov
adc
fisubrl
fstpl
jno
xchg
repnz
repnz
add
xchg
ret
mov
mov
mov
iret
es
push
pop
pop
leave
mov
ret
sub
jmp
push
push
sarl
sbb
mov
pushf
fcmovnu
repnz
xor
outsl
xchg
sbb
sbb
and
stos
jno
movsl
push
jl
sub
insb
repnz
fnsave
or
inc
add
stc
pop
subb
mov
push
mov
inc
adcb
fcoml
jo
mov
mov
fimuls
mov
dec
insb
sbb
push
jp
mov
addr16
gs
mov
or
out
push
lock
mov
and
cld
mov
cld
rcrl
daa
mov
mov
pushf
call
xor
and
fistpll
repz
sarl
sbb
aad
jl
dec
add
lods
imul
jp
jmp
mov
push
test
lods
sti
sbb
int
push
pushf
dec
push
sub
cs
jmp
push
shrl
clc
sbb
subb
xchg
test
mov
mov
out
sarl
mov
jl
mov
cmpb
push
jl
adc
dec
inc
adc
shl
pop
pop
in
add
adc
jp
sti
add
pop
inc
mov
clc
daa
fidivrs
into
call
jnp
icebp
mov
xor
fwait
cwtl
enter
xchg
mov
stos
int
imul
xchg
cld
jo
je
push
dec
mov
pop
inc
mov
cmp
jno
and
mov
mov
js
aas
dec
cmpsl
mov
pop
inc
jne
jmp
or
xchg
push
and
mov
adc
imul
cmpsl
sti
les
sub
or
sub
cmp
std
shlb
mov
mov
bt
fldt
pop
insb
push
es
out
inc
pop
outsb
stos
sbb
addr16
xorb
xchg
repz
dec
push
push
into
mov
and
scas
sbb
mov
add
in
lock
adc
pop
adcl
and
push
movsb
pop
sbbb
pop
repnz
mov
dec
add
adcl
scas
jg
mov
fs
sub
sbb
xchg
js
dec
aam
insb
dec
decb
mov
push
test
jp
inc
and
sub
fcmovb
lods
adc
sub
mov
jmp
xchg
scas
flds
punpckhdq
dec
jl
xor
push
jmp
inc
inc
lds
mov
jne
xor
fsts
ret
js
lcall
ret
fldt
les
das
jns
jo
push
jno
or
pop
pop
into
mov
fcompl
jg
sub
out
ja
xchg
xchg
pusha
fistpl
das
sar
mov
xchg
leave
dec
adc
arpl
mov
push
xchg
add
mov
and
fildl
faddl
outsb
lcall
sbb
mov
scas
sub
push
mov
cltd
cmp
mov
cmp
inc
cli
or
dec
leave
xchg
pop
ret
das
insb
adcb
xor
ljmp
fdivrl
and
test
dec
dec
fucom
jmp
sub
fcmovnb
mov
pop
mov
and
xor
add
pop
jl
xchg
push
xchg
push
mov
repnz
aam
jecxz
mov
ja
sub
ljmp
xor
dec
nop
xchg
fisttpl
jl
lea
push
rcr
and
pop
pop
icebp
xor
jg
fidivl
pop
into
mov
imul
sbb
sbb
loop
sbb
and
lahf
in
push
leave
jb
and
or
es
push
mov
dec
mov
jbe
iret
lods
jb
into
negl
mov
pop
push
push
cmpsb
mov
sbbb
addl
aam
hlt
shrb
insl
sub
movsb
roll
adc
add
pop
xchg
mov
ret
mov
in
ds
mov
cltd
jb
jl
imul
pushf
ljmp
sarl
and
clc
push
sbb
and
arpl
dec
inc
stos
fstpt
jl
out
lock
push
int
fs
inc
sub
fnstcw
in
inc
sbb
das
fistpl
cmpb
int
std
test
sub
or
jmp
out
shlb
mov
fstps
add
push
cmp
fwait
cmpsb
pushf
out
xor
enter
adc
stc
js
insl
add
loop
dec
jns
cmc
jp
mov
shll
mov
pop
rep
scas
mov
mov
iret
and
rcr
xor
mov
push
sbb
push
outsb
addr16
push
add
data16
dec
stc
insl
cmpsb
and
dec
test
dec
shlb
push
inc
sti
push
adcb
mov
push
int3
pop
add
aad
jae
jmp
iret
and
pushf
xchg
push
jmp
xchg
xor
insb
or
xchg
cs
insb
sub
daa
in
mov
iret
inc
in
bound
push
insl
imul
sbb
ret
push
cli
ficompl
mov
jg
xlat
or
dec
adc
xor
nop
pushf
clc
pop
loope
push
lahf
xchg
mov
dec
rcrl
adc
mov
mov
and
clc
inc
sub
faddl
in
mov
jbe
pop
insl
cld
nop
fyl2xp1
mov
repz
xchg
sbb
stos
pop
cltd
test
out
pusha
or
jg
enter
stc
shr
or
movsl
fldt
adc
jp
es
rorb
clc
cmp
pop
in
cs
arpl
in
fs
jo
insb
leave
pushl
jg
cmpsb
xchg
mov
sub
repnz
adc
int3
inc
dec
mov
imul
sub
adc
mov
jg
sub
addr16
stos
xlat
dec
mov
pop
push
loope
xchg
fdivr
lds
in
test
mov
adc
ja
ficoms
pop
fwait
je
adc
inc
lcall
mov
ljmp
mov
into
add
xchg
decb
in
popf
xor
shr
fadd
ret
in
inc
shll
sub
jo
lret
jnp
arpl
insl
sbb
xor
inc
xor
add
inc
hlt
in
repz
push
popa
cmovno
std
test
jge
mov
ret
rcr
jb
pop
out
orl
or
dec
xchg
les
sbb
cmc
ret
fistps
sbb
sbb
pop
and
xchg
mov
mov
mov
aam
and
push
dec
je
jmp
aaa
mov
popf
mov
test
rsqrtps
adc
jg
and
and
push
cmp
pusha
mov
das
add
cmp
add
popf
mov
je
lods
ficoml
xchg
loopne
in
push
and
pusha
sub
ja
jge
fwait
pop
jp
outsb
fucomp
fmulp
mov
pop
in
cmc
adc
mov
inc
stos
or
xchg
xor
mov
mov
mov
aad
or
mov
inc
adc
fwait
adc
pop
pop
mov
in
xor
or
cmp
ss
in
sbb
jl
sahf
cmpsl
test
movsl
insl
mov
mov
idivb
arpl
aad
ss
push
add
cmp
adc
pop
pop
mov
jp
enter
adc
sub
pushf
es
jle
fisttps
ffreep
bound
inc
sub
in
pop
mov
fldcw
test
in
pop
pop
or
push
xchg
imul
out
es
test
lds
lret
mov
enter
in
xor
repnz
shlb
in
repnz
scas
push
adc
add
daa
jge
pop
addl
movsb
mov
sub
aad
pushf
test
adc
mov
mov
jnp
jecxz
fiaddl
xor
cmc
pop
xor
jp
pushf
lret
inc
mov
jecxz
adc
mov
inc
lods
xor
outsl
mov
hlt
pusha
js
shrl
pop
adc
push
sahf
mov
xor
fstpl
jne
imul
jle
scas
dec
aad
push
clc
or
mov
and
lret
outsl
jo
repnz
fsub
jecxz
jno
sbb
lock
or
xor
push
push
pop
xlat
add
aam
clc
cmp
out
cwtl
jns
push
fimull
hlt
movb
mov
scas
sbb
sbb
lcall
xchg
xorb
jne
xchg
push
xor
xchg
enter
xchg
aad
cmp
xchg
xor
sti
mov
insl
ja
pushf
adc
test
imul
xor
ret
cmp
add
mov
mov
adc
jle
jbe
add
adcl
jl
aam
sahf
adc
enter
into
int
cmpps
mov
cmp
stc
mov
push
mov
inc
test
outsb
cmpsl
pop
xor
mov
sub
xchg
cmp
stc
out
and
js
lods
faddp
mov
rorl
mov
scas
ja
je
pop
xchg
mov
int3
sti
pusha
inc
xor
lds
out
std
and
mov
aas
sbbl
push
jmp
int
inc
cmp
cmp
xor
ffreep
out
into
jns
jg
and
push
inc
mov
shrb
add
xchg
ds
mov
pusha
adc
push
daa
les
mov
rclb
arpl
add
jmp
aaa
cmp
negb
ss
adc
fbstp
dec
scas
lods
pop
jb
inc
out
ror
push
sub
jno
push
sub
jae
cmpsb
sbb
call
xchg
int
loope
imul
pop
push
dec
and
out
jp
gs
and
xchg
adc
xchg
pop
inc
sbb
mov
outsb
cwtl
fs
jb
jae
clc
inc
nop
or
mov
cli
stos
xchg
fisttpll
jbe
inc
es
setne
jbe
pop
inc
ret
inc
xchg
sub
xor
xor
pushf
test
sub
fsubl
fcmovb
push
shrl
cltd
mov
cmp
sbb
and
jne
xchg
pop
jg
jno
cmp
shlb
scas
mov
mov
loop
int
pop
imul
lret
push
fildll
nop
lret
and
add
or
cmp
enter
adc
int3
push
xchg
enter
subl
add
mov
xchg
cmp
aam
jne
js
pop
push
cwtl
mov
es
movsl
jae
leave
aam
imul
pop
ljmp
add
adc
sub
and
and
pushl
imul
cmp
call
scas
fwait
mov
xor
push
sbb
jb
imulb
mov
in
pop
and
mov
cmp
xor
out
mov
push
cmc
aas
cli
jo
stc
mov
addr16
push
fdiv
mull
aaa
dec
stos
jp
mov
loopne
jge
es
pop
pop
cwtl
and
add
mov
ret
add
xor
jnp
pop
or
push
js
in
mov
rcl
xchg
sar
sahf
ljmp
mov
pop
jnp
mov
enter
loopne
lods
add
jle
push
repz
mov
xchg
pushf
pop
movnti
sub
add
push
es
adc
movsb
shl
lds
mov
cmp
fadds
add
xchg
sbb
jne
fsubrs
mov
xchg
orb
xor
shll
adc
inc
sub
cmp
push
aaa
sub
pop
cld
out
pop
push
inc
aaa
aam
addl
cmc
dec
xor
repnz
dec
inc
pop
xchg
decb
cmpsl
mov
inc
push
xchg
arpl
pop
mov
out
cmc
outsb
jno
inc
lret
punpckldq
mov
pop
push
xchg
jbe
loope
xchg
fadds
pop
mov
outsb
idivl
pop
pop
dec
lods
jle
xchg
sub
nop
fs
dec
in
push
test
lods
mov
xchg
and
insb
gs
pop
data16
lret
test
push
inc
jnp
arpl
xchg
dec
push
mov
jne
imul
sbb
jge
jl
popa
ficomps
cmc
decb
xor
sub
in
add
lock
or
loopne
add
pop
movsb
cmp
sub
or
fsubs
lret
sub
in
or
lods
sub
subb
adc
stc
orl
lahf
mov
mov
cmp
sub
mov
dec
sar
and
pop
mov
iret
xchg
int3
cli
xchg
insl
mov
pushf
jae
xchg
add
sub
xor
dec
jcxz
ja
mov
mov
cmc
sbb
xlat
mov
cs
cld
fstp
push
test
imul
mov
sbb
add
int3
dec
mov
mov
mov
cwtl
stos
push
stc
dec
sbb
pop
popa
mov
ja
mov
mov
int3
sub
cwtl
test
xor
cmc
jo
pop
int3
imul
test
pop
fadds
decb
adc
ljmp
mov
out
adc
and
mov
xor
aam
fldl
cmp
testb
mov
pusha
mov
cmp
jb
cld
loop
or
fdivrl
daa
xorl
add
mov
adcl
mov
push
xchg
add
mov
push
je
sub
std
inc
lret
xor
or
sub
repz
push
sub
out
xor
xchg
jbe
rol
add
jbe
pop
call
das
mov
cmpsl
push
call
add
ds
iret
repz
test
cwtl
stc
push
adc
aad
mov
xchg
dec
test
mov
es
xchg
inc
nop
push
inc
lcall
xor
push
inc
and
mov
add
ret
inc
cmp
or
fisubrl
or
mov
pusha
pop
popa
or
jnp
jns
arpl
and
call
mov
ljmp
loop
sar
jns
add
cmpsl
aad
or
in
mov
jns
jo
loopne
mov
and
xchg
nop
aad
xorb
jae
xor
out
stos
cmp
rcl
sbb
add
mov
rolb
and
cli
jg
pop
icebp
push
inc
jae
ficompl
pop
pop
call
faddl
or
push
mov
scas
dec
add
sbb
inc
jae
hlt
daa
push
push
jle
cld
inc
repnz
adcl
pop
jmp
push
lret
outsb
pop
adc
outsl
jns
add
pushf
aad
push
jg
dec
mov
lds
xchg
add
jae
dec
arpl
cmpsl
pushf
pushf
push
cltd
ja
dec
rorb
ret
daa
xor
cltd
subl
ds
jo
stos
add
mov
cmc
imul
rcrl
xor
pop
loopne
std
subb
pop
mov
adc
jo
dec
inc
stc
mov
sarb
mov
cmp
inc
sbb
inc
stos
sbb
sbb
inc
cmpsb
mov
repnz
loope
push
arpl
pusha
and
out
testb
xchg
add
dec
fxch
loopne
add
mov
sbb
jne
std
pop
stc
fsubr
mov
fiadds
lea
mov
or
int
add
mov
dec
xchg
inc
jge
xchg
mov
rclb
mov
xlat
mov
inc
out
shll
movsb
pop
push
test
out
mov
xchg
push
or
lahf
in
pop
mov
inc
andb
int3
insb
pop
lcall
cld
cmp
add
sar
mov
cmp
xlat
xor
xor
mov
mov
ret
adc
push
jnp
gs
outsl
add
in
sub
and
pop
movsl
sbb
fmull
and
cli
out
dec
in
addr16
scas
outsb
std
hlt
adc
push
inc
imul
xchg
jp
cmpsb
add
es
ret
daa
pop
aas
lods
test
mov
sbb
jb
push
pusha
jns
mov
pusha
outsb
test
int3
ficoms
addb
push
cmp
daa
sbb
scas
popa
push
sbb
loope
pop
and
int
add
ud0
mov
mov
popa
cmp
movsl
add
and
xchg
mov
incb
out
dec
dec
sbb
xor
xchg
mov
in
cmp
xor
out
mov
jno
ss
add
sbb
cmp
mov
adc
and
scas
shlb
insl
cmpsl
jmp
cmp
ljmp
push
mov
repz
push
jmp
push
fdivrs
or
fs
int
es
inc
movsl
stc
dec
flds
push
out
and
adc
leave
mov
pop
sub
pusha
cmp
sbb
inc
rcr
add
dec
mov
or
loopne
sub
ret
jo
cwtl
xchg
add
lea
pop
mov
outsl
imul
aad
sub
les
cmovg
inc
in
lcall
jle
pushf
push
enter
push
outsb
lds
ror
testl
das
jo
insl
lock
mov
and
out
xor
in
clc
test
frstor
sahf
ss
add
add
aas
cld
daa
adc
pop
jg
and
cmp
mov
ja
shlb
mov
mov
out
add
push
jl
mov
jl
insb
mov
cmp
test
ljmp
gs
sbb
xor
aaa
addr16
es
and
arpl
shr
or
mov
push
enter
inc
push
sbb
mov
mov
add
lret
xchg
outsl
imul
adc
pop
mov
arpl
jne
inc
into
icebp
cmpsl
jo
mov
subl
mov
int3
sarl
fadd
and
adc
fbstp
enter
adc
std
pop
sub
out
add
xchg
push
insb
dec
ss
xor
mov
push
clc
jne
xor
data16
aaa
jg
and
inc
repz
jg
sbb
sbbl
jns
clc
repz
sub
pop
xor
jmp
jp
scas
int
inc
sbb
lods
movsb
test
inc
push
out
push
mov
mov
pop
push
movntq
sbb
dec
lret
jo
dec
aaa
mov
aaa
loop
fdivs
inc
cmp
sub
pop
jno
inc
in
mov
or
inc
mov
mov
jg
push
or
cmp
testl
vmovapd
sbb
sbb
popf
lock
insl
andl
cmpl
xchg
xchg
jecxz
pop
cmp
subl
lcall
jns
imul
dec
into
cmpsl
lret
push
add
shlb
in
adc
jne
std
xlat
and
sbb
int3
jl
jne
flds
fisttpll
mov
add
or
fcoml
mov
push
pop
cmp
je
adc
mov
es
xchg
rorl
movsb
lret
in
mov
dec
add
sbb
leave
loope
inc
icebp
cmp
push
or
cli
in
out
or
lds
sub
aaa
aaa
jo
adc
push
fistpl
pop
cld
dec
sub
hlt
rcrb
mov
iret
movsl
and
mov
std
lock
cmp
imul
push
shrb
add
xor
and
lea
cmp
xchg
inc
int3
pop
gs
imull
iret
jbe
dec
ss
xchg
mov
dec
sub
jbe
pop
cwtl
jbe
dec
add
lret
add
and
clc
hlt
rcll
mov
sub
mov
cmp
mov
movsb
das
mov
stos
xlat
repz
sub
into
jno
mov
mov
pop
sbb
adc
xor
loop
cmp
cmp
test
jae
aas
dec
rcrl
or
jb
in
sarl
hlt
sti
inc
sub
mov
in
cmp
xlat
push
fmull
loop
insl
lcall
jg
and
loopne
cmpsb
fucomp
inc
jmp
cmpsl
pop
mov
negb
les
mov
sub
dec
loope
popa
aam
push
insl
outsl
mov
adc
push
shlb
push
lret
emms
inc
inc
stc
cmp
hlt
int
adc
rcrl
popf
int
xlat
rcrb
inc
inc
pop
add
cmp
jle
xchg
dec
or
jb
xchg
jmp
jl
xchg
mov
aaa
and
jns
jns
push
ss
sbb
es
in
call
loop
cmp
clc
push
stc
scas
clc
nop
loop
aas
int3
add
ret
lock
out
test
movsb
jo
inc
dec
das
stc
jp
push
cltd
je
pop
fcomp
fsubrs
data16
and
cld
add
or
rorl
or
mov
jo
mov
adc
mov
leave
repz
movsl
filds
movsl
repnz
fldt
sbb
xchg
addr16
lret
mov
sti
filds
dec
jne
mov
popa
dec
mov
lret
adc
bound
movsb
xchg
jno
jecxz
ret
or
cmp
cltd
xor
fsubl
lcall
out
jb
pop
aam
add
pop
mov
das
jl
pop
cmpb
icebp
lret
inc
mov
add
es
xchg
in
pop
lds
xchg
test
cmp
mov
data16
and
fsubp
pop
mov
sbb
imul
pushf
lsl
iret
mov
test
xor
push
loop
pusha
xor
push
xor
sub
inc
push
mov
pushl
push
xor
movsl
mov
cmpsb
mov
inc
mov
scas
aad
xchg
lahf
lods
cmp
xchg
pop
fucom
adc
adc
ljmp
xchg
aas
mov
out
mov
ret
jmp
leave
xor
mov
scas
or
push
push
daa
daa
and
add
int
jl
or
outsl
xor
dec
std
mov
stc
test
jg
out
and
mov
mov
dec
push
pop
cmp
dec
orl
pop
shll
push
and
out
popf
inc
outsb
setg
pop
xchg
ja
aad
les
dec
or
xchg
jg
dec
jbe
movsb
mov
cmpl
sbb
in
sar
fadds
mov
stos
and
cmpsl
int3
cmc
xor
xor
sbb
pop
insl
fisttpll
push
cli
mov
add
mov
inc
pop
sbb
lcall
adc
mov
mov
in
mov
gs
dec
lret
call
cmp
roll
inc
ss
out
push
push
bound
push
popa
jbe
fcmovb
push
cmp
pop
xor
arpl
pusha
popf
lods
lcall
xchg
jnp
adc
xor
adc
mov
sub
rcll
int3
adc
mov
sub
test
iret
pushf
add
push
jb
insl
rol
push
pop
arpl
aas
es
ret
and
mov
scas
mov
push
int
lds
stos
jne
and
or
in
pusha
xor
push
xor
mov
test
js
cmpsb
pop
aas
fs
int
sbb
mov
adc
icebp
inc
sub
scas
mov
mov
inc
xor
xlat
xlat
dec
add
cmp
ja
cltd
arpl
add
cmp
int3
xchg
loop
and
jb
xor
cmpsl
dec
xchg
stos
dec
or
das
nop
sub
loop
arpl
mov
mov
and
mov
out
lret
mov
or
cld
and
lds
clc
mov
test
mov
lds
das
add
aaa
stos
out
push
stos
mov
fs
loop
pop
mov
adc
fsubl
mov
out
lret
andb
icebp
pop
pop
cmpsb
fdivs
bound
dec
push
mov
out
sbb
pop
mov
insl
or
jl
cmp
sub
mov
and
mov
add
add
fs
or
cmpb
daa
mov
pop
xlat
pop
lret
cmpsb
dec
and
aam
hlt
inc
push
decl
jnp
xor
jnp
roll
push
dec
icebp
shll
pop
iret
xchg
jne
xchg
jae
mov
std
lahf
and
leave
sbbl
push
or
out
lahf
ja
push
jae
and
andl
paddd
lcall
mov
mov
ss
xchg
lret
ret
and
sub
inc
inc
mov
ret
jge
dec
sub
jo
jae
sub
dec
imul
push
push
pop
xchg
add
mov
sbb
ret
mov
out
dec
movsl
jp
pop
in
xor
adc
jo
bound
and
jnp
inc
hlt
pop
mov
addr16
fsub
cmc
out
pop
scas
pop
pop
ss
mov
mov
push
loopne
dec
call
push
mov
and
fadds
sbb
leave
or
hlt
pusha
add
arpl
and
stos
mov
xchg
scas
lods
repz
fbstp
xchg
aaa
jmp
int
xor
repz
hlt
adc
xchg
jg
xorl
testb
dec
jp
add
adc
jns
rorl
mull
repnz
and
inc
push
fwait
jge
aaa
orb
sub
nop
push
push
xchg
adc
mov
pushf
mov
ja
fdivr
jno
adc
repz
adcb
hlt
xor
scas
push
aam
adc
mov
mov
and
rorb
in
add
or
mov
lahf
sub
pusha
mov
push
xor
cli
insb
popa
sub
orl
adc
jnp
mov
cmp
out
fcmovb
fbstp
out
push
push
push
add
sub
jge
repz
jae
sub
fs
out
bound
push
shlb
push
sbb
jge
cmp
jbe
in
push
repz
cmp
neg
loop
push
and
sbb
sbb
xor
stc
negl
push
mov
adc
mov
jno
test
push
mov
je
fneni(8087
je
js
test
adc
and
pop
test
mov
ss
add
xchg
add
push
es
mov
mov
clc
jnp
add
insb
dec
mov
mov
int
add
adc
testb
push
jmp
aad
popa
aad
add
push
add
repz
mov
add
int
sbb
stc
lds
push
outsb
or
fistpll
cmpsl
mov
dec
add
or
inc
sbb
pop
push
cmp
mov
and
mov
add
xchg
dec
dec
mov
xchg
mov
xor
out
mov
shll
push
pop
sbb
adc
into
addr16
push
cmp
rcll
push
adc
mov
mov
sar
sub
shrb
mov
je
jp
call
fnstenv
je
inc
or
mov
mov
test
addb
pusha
inc
xchg
cli
add
and
push
mov
ret
ss
dec
jo
cs
dec
xor
cltd
mov
fstpl
mov
daa
shlb
mov
mov
mov
push
dec
xor
or
aam
xor
mov
push
ljmp
fwait
testb
stos
xchg
lods
mov
jae
mov
int
addl
cmc
mov
iret
adc
pop
mov
pop
jge
orb
mov
fdivrl
push
xor
aas
icebp
lea
fs
inc
test
dec
clc
pop
fld
jp
mov
inc
loop
push
jns
xchg
out
push
xor
jl
mov
iret
lret
sub
push
sub
mov
pop
jne
adc
lods
hlt
out
out
out
inc
ret
scas
jp
into
lret
sbb
cs
jecxz
sbb
push
sub
or
xchg
pushf
scas
mov
iret
out
pushf
test
inc
sbb
icebp
cmp
cmc
and
ret
xor
xchg
xlat
nop
inc
movsl
xchg
add
push
inc
push
push
jg
dec
xor
mov
sub
loope
cli
or
bound
sbbb
and
jle
stos
mov
mov
pop
mov
ja
cs
scas
lock
sub
add
jne
sbb
pop
mov
mov
fisubl
repnz
push
xchg
jno
shrl
pop
stos
push
imulb
pusha
mov
cmp
pop
daa
xlat
in
or
leave
out
adc
cmpsb
imul
sbb
or
cmp
movsl
push
add
int3
ficoms
mov
sbb
rcrb
jo
aas
jg
neg
mov
jno
inc
push
add
mov
icebp
jp
aam
push
inc
fwait
pop
ret
cmp
jns
add
das
fnsave
shlb
jge
mov
cmpsl
clc
inc
push
mov
movaps
sub
sbb
loop
add
cwtl
repnz
lods
jnp
in
and
add
fs
xchg
fs
inc
inc
pop
mov
rolb
cmpsb
stos
push
jb
xchg
aaa
push
mov
fstpt
and
fdivrl
dec
shlb
jne
pushf
xlat
js,pt
in
scas
loope
xor
push
leave
ret
sahf
or
pushl
out
mov
pop
mov
bound
add
inc
inc
fimuls
imul
cld
aaa
out
xchg
add
imull
xchg
adc
pop
sub
push
or
fistpll
sbb
dec
xchg
ljmp
or
push
into
jne
jl
cli
mov
and
in
ss
cmc
push
cmp
inc
mov
pop
mov
pop
popa
or
negl
sub
maxps
mov
into
and
cmpsb
call
cmp
popf
push
add
pop
jl
outsl
sbb
popf
or
cmp
das
lret
lock
dec
add
inc
inc
and
and
cmc
push
pushl
or
fimuls
jmp
ss
add
dec
fldcw
xchg
sti
movl
mov
cmpsl
xor
adc
adc
jl
and
in
xor
mov
cmp
sbb
test
mov
adc
mov
jne
cbtw
dec
jb
pop
test
stos
sbb
sub
add
test
jo
fadds
pop
fdivs
loop
inc
cld
pop
jge
test
xchg
dec
jmp
dec
js
subl
sub
pop
cmp
scas
mov
jl
jo
imul
pop
lods
add
push
test
shrl
mov
push
stc
jno
xchg
int
mov
in
add
imul
sub
call
imul
aas
out
cmp
mov
push
mov
cltd
push
adc
int
cmpsb
lcall
sarb
insl
nop
scas
daa
xorl
xor
in
push
ret
fwait
mov
sub
popa
add
into
test
mov
pop
cwtl
mov
std
fstpl
aad
push
lds
mov
popa
addl
push
sub
in
add
insl
das
mov
insl
pop
or
pop
push
xlat
push
stos
lcall
ja
mov
out
rolb
mov
sbb
cmp
xchg
add
out
xor
dec
dec
xchg
fwait
sbb
shlb
lods
xor
cmpl
mov
dec
jmp
add
lahf
push
out
rcrl
enter
shll
nop
xor
push
pop
test
xchg
aad
imul
or
cltd
push
add
sub
lods
adc
and
xchg
lret
popa
mov
shrl
int3
adc
mov
pop
adc
mov
lock
push
mov
jmp
xor
jg
xchg
in
pop
sarl
mov
push
or
into
imul
xchg
jne
and
sbb
push
inc
jnp
shll
test
xchg
dec
dec
mov
pop
fadd
fisubs
push
cmpsb
mov
mov
jle
mov
xchg
push
xor
fnstsw
xlat
jne
pop
ja
jae
push
pop
std
pop
adc
mov
pushl
jae
push
dec
adc
stos
loop
sbb
jno
or
aad
push
mov
mov
xor
dec
test
sub
mov
fcmove
in
fimull
cmp
and
test
mov
or
cmp
cs
or
adc
jg
pop
hlt
xor
mov
xor
movsl
imul
xchg
fidivl
mov
jmp
mov
dec
loop
addr16
jne
idivl
push
cmpsb
leave
jmp
jne
add
dec
or
iret
dec
das
pop
jb
or
pop
lds
inc
adcl
cltd
addb
and
cmpb
mov
jae
cmp
xchg
test
mul
xchg
push
sub
xor
cmp
jp
mov
mov
out
sbb
jne
pop
testb
push
mov
bound
push
push
xchg
cmp
lods
sahf
mov
jns
cmpsb
mov
in
mov
and
mov
inc
cmp
xor
adc
imul
mov
inc
cli
shll
cmpsl
adc
into
in
in
sbb
iret
aam
mov
aas
or
add
jnp
gs
pop
xchg
addr16
int
push
mov
repz
test
cmc
push
pop
and
mov
mov
das
pop
into
push
repz
ds
xor
scas
push
fstl
pop
lahf
cmp
mov
hlt
ret
lret
xor
push
mov
popf
rclb
popf
dec
testb
xchg
data16
jbe
or
loopne
sbb
push
loopne
es
and
mov
xchg
inc
or
in
dec
sub
jmp
push
int
mov
dec
std
sub
dec
jle
add
xchg
dec
outsb
aaa
sbb
sub
fsubr
cmp
pop
push
mov
rol
cwtl
dec
mov
out
pop
mov
in
mov
mov
ss
mov
cwtl
inc
mov
mov
mov
jle
cmp
sub
rcrl
in
mov
jecxz
or
int3
adc
jns
sub
push
fldt
shl
in
lods
xor
dec
dec
jle
fiaddl
jae
xchg
adc
pop
scas
addb
cld
in
mov
mov
sbb
and
xor
jle
nop
sub
int3
lds
iret
or
mov
sbb
xchg
stos
aaa
push
inc
mov
pushf
fnop
dec
sub
outsb
lods
inc
mov
cli
and
push
rorl
test
adc
pop
mov
push
push
mov
fmuls
fstpl
icebp
andb
cmp
mov
cmpsl
in
test
movl
out
sub
ret
jl
lahf
lds
scas
push
nop
mull
stc
inc
jae
mov
lds
pop
push
xor
in
inc
pop
lcall
fsubs
arpl
loope
clc
dec
mov
inc
popa
xchg
cmp
push
mov
dec
push
clc
jecxz
inc
repz
fisubs
sti
sbb
int3
sbb
mov
test
mov
mov
pop
mov
int
jecxz
cltd
repz
call
ret
inc
sbb
iret
mov
insb
adc
sub
dec
pop
mov
in
test
imul
aam
ror
push
inc
leave
mov
outsb
adc
push
mov
daa
cmp
loop
mov
cwtl
jmp
inc
lock
mov
movsl
xchg
in
int
outsb
jb
fiadds
cld
push
mov
in
jge
cmp
enter
mov
pop
adc
pop
std
mov
sub
push
popa
out
sbb
in
lcall
cmp
inc
dec
pushl
mov
mov
mov
test
imul
sbb
int
rcrb
xchg
mov
out
xor
adc
xchg
out
fsub
iret
daa
lods
int3
xchg
fistps
test
add
sbb
movsb
mov
xlat
in
pop
xor
jae
jne
sbb
push
xchg
pop
pusha
stos
stos
jg
fldcw
mov
jge
add
or
lock
lret
or
sub
mov
icebp
sub
ss
mov
repz
cmc
or
test
rcll
movsb
pop
jbe
in
add
sbb
lods
mov
xor
add
in
imul
push
xlat
pop
pop
aam
pop
int
aam
lock
test
jecxz
orb
cmp
adc
stos
popl
insb
ficoml
jle
sub
repz
jp
pusha
adc
fnstcw
push
les
mov
subl
fisubl
xor
popa
lods
cmp
je
mov
sti
dec
jp
push
xor
aaa
cltd
shlb
cmpsb
test
sbb
mov
fwait
xlat
mov
clc
into
stos
pop
jne
fdivrl
push
xchg
dec
push
adc
and
pop
push
mov
inc
repnz
sbbb
push
std
xchg
sbb
test
in
mov
movsl
insb
loop
out
or
insl
pop
push
push
mov
in
lcall
fstl
fdivp
adc
push
pop
or
and
outsb
dec
fcomps
cltd
and
fstpt
popa
and
mov
icebp
pushf
push
xor
dec
ret
ja
dec
push
jnp
jnp
cmp
cwtl
inc
enter
and
daa
test
loope
and
jecxz
repnz
push
outsb
mov
mov
mov
cmp
scas
imul
mov
inc
or
mov
xchg
xchg
mov
mov
int3
gs
mov
scas
push
in
and
fdivrs
icebp
sbbl
in
mov
xchg
loopne
jge
ljmp
decl
lcall
and
push
movsl
mov
jb
test
dec
loope
shlb
je
movsl
pop
inc
jecxz
add
scas
jne
fistpll
test
push
jne
out
mov
out
cmpsl
push
jo
inc
jp
loop
sub
test
xor
dec
sbb
roll
cmpsb
loopne
xor
xchg
dec
clc
push
sub
add
iret
lcall
and
push
test
sti
jno
fstl
outsl
lcall
cmpsl
dec
ja
cli
jecxz
cmpb
adc
pop
mov
fwait
lret
nop
arpl
mov
mov
out
loope
inc
xchg
out
xchg
mov
psubw
shrl
stos
jb
mov
pop
mov
scas
in
jno
cwtl
jecxz
bound
imul
jb
or
mov
jmp
mov
aam
out
xor
xchg
cltd
clc
adc
pop
xor
pop
fsubl
adc
rorb
outsb
testl
test
gs
sub
push
pop
mov
dec
cmp
fldt
adc
pop
decl
or
imul
mov
and
sar
shl
scas
popf
mov
popf
mov
or
add
dec
lods
shr
inc
dec
dec
inc
sub
out
dec
sub
rcll
xor
jne
adc
sbb
lcall
les
fcomip
insb
sbb
ret
dec
dec
xchg
sub
jmp
lret
out
inc
test
jl
mov
cmp
lock
test
aas
imul
push
dec
movsl
scas
inc
int3
mov
dec
dec
cwtl
sbb
in
mov
jb
inc
xchg
dec
inc
fildll
loope
lods
dec
div
or
loop
add
mov
adc
in
dec
jecxz
mov
xchg
pop
push
scas
adc
ret
aam
and
or
pop
inc
loopne
fcoml
dec
fsubrl
xchg
imul
pop
adc
cwtl
or
enter
or
xchg
adc
cli
push
adc
sub
popf
add
xchg
lcall
mov
aas
hlt
ret
ret
add
imul
fsubl
daa
stc
adc
sbb
fildl
scas
or
in
jae
or
rcrl
mov
mov
adc
insl
fs
mov
lea
repnz
pop
movsl
xchg
add
jns
pop
leave
loop
sti
mov
inc
cs
fstl
lret
xor
push
ds
cmpsb
inc
dec
subl
adc
fcmovb
into
aaa
xchg
mov
and
fists
mulb
pop
in
dec
jmp
inc
outsb
add
aaa
f2xm1
inc
cltd
mov
mov
fs
push
imul
call
std
std
cltd
faddl
push
outsl
sub
push
cmc
xchg
lds
sub
xchg
pop
add
fwait
test
sbb
dec
and
je
bound
pop
add
cmp
in
sub
cli
loope
in
mov
ds
add
lcall
shll
enter
inc
sbbl
mov
cltd
mov
scas
cmp
jl
mov
insl
jg
cli
pop
xlat
imul
loopne
imull
mov
xor
cmp
mov
rcll
adc
mov
mov
outsb
sbb
xchg
pop
mov
inc
cmp
and
dec
cmp
arpl
jne
mov
sti
test
inc
sbb
dec
add
pop
cwtl
xchg
and
sbb
dec
inc
fildll
jb
sub
push
sub
jle
decb
or
mov
mov
or
lock
cmp
or
xchg
mov
into
popa
inc
fs
sbb
xorb
dec
lcall
mull
shr
push
test
call
xor
cld
add
pop
adc
sbb
daa
adc
daa
leave
loop
adc
pop
scas
insb
cmp
xchg
xor
or
int
sbb
int3
arpl
or
nop
cwtl
jmp
data16
mov
jmp
es
pop
pusha
jne
pop
dec
or
mov
mulb
adc
sahf
jnp
rcrl
fs
xor
stos
sub
outsl
test
mov
in
mov
dec
fsts
lods
sbb
test
push
rol
in
ljmp
fwait
mov
jns
rolb
push
cmp
repnz
insb
rolb
data16
mov
scas
lods
add
add
xchg
fsubrp
je
add
test
ror
push
mov
add
dec
jb
inc
jge
jae
mov
xchg
ljmp
xchg
xchg
add
push
inc
mov
inc
enter
add
and
fdivrl
faddl
enter
adc
sub
pop
ficompl
inc
mov
lds
pop
adc
push
jns
dec
pop
cwtl
jge
sbb
dec
icebp
adc
adc
xchg
psubusb
lods
mov
bound
cmp
xor
xchg
ja
push
and
mov
push
cmp
jo
xchg
arpl
js
adc
and
rorb
repnz
cld
mov
cld
fwait
xorl
dec
cltd
cmp
pop
incb
mov
pop
mov
aad
inc
inc
stos
das
push
xor
push
inc
mov
movsl
mov
aad
xor
insl
mov
fisttpll
mov
push
and
mov
sub
xor
add
cld
pop
sub
lret
mov
ficompl
fmuls
int
or
cltd
clc
push
add
push
ds
shl
in
sbb
push
loop
push
xor
sbb
adc
xchg
mov
out
movsb
jno
stos
test
cltd
popa
xchg
xchg
imul
jbe
pop
es
stc
arpl
das
pop
pop
inc
and
hlt
pop
xchg
jb
pop
mov
ret
xor
cmp
lods
mov
lret
jecxz
sub
xor
cmp
es
cli
pop
jo
gs
mov
sbb
loop
cmp
ss
ljmp
cs
dec
aad
push
jmp
insb
cmp
and
jbe
sbb
movsb
inc
outsb
inc
cltd
jno
std
cs
sub
popa
inc
pop
cmp
aaa
sbb
andb
inc
sbb
lods
mov
xor
mov
mov
lea
loopne
mov
pop
sbb
push
and
into
dec
xchg
inc
and
movsl
pusha
scas
jmp
sarl
xlat
jp
gs
sahf
loopne
inc
xchg
cmp
mov
jge
andl
adcb
mov
mov
sbb
push
mov
or
xrelease
popa
sbb
jmp
test
cmp
and
lret
cmc
lret
mov
fisubl
pop
sbb
pusha
movsl
aam
std
test
das
adc
lods
jb
cmc
jne
cmp
mov
fnstenv
in
movsb
mov
add
data16
aas
pop
sub
or
ret
mov
ds
cmp
inc
fxch
push
cwtl
sbbb
xor
mov
fwait
out
pop
in
sahf
out
jp
out
sahf
adc
xor
movsl
mov
ds
leave
mov
out
pop
xchg
jmp
jl
or
aam
mov
mov
aam
shrb
push
rcrl
test
mov
mov
sub
dec
aas
cmp
aas
inc
lods
rolb
ss
sbb
push
orb
insl
enter
iret
lock
pop
mov
jle
fisubl
push
cmp
mov
sbb
sub
fnstcw
inc
xor
jbe
scas
xchg
sub
stos
push
xchg
scas
or
lds
xorb
jno
sti
ss
or
into
sbb
sub
xchg
pop
pop
inc
dec
data16
hlt
movsb
lods
and
ja
pop
bound
rcrb
daa
out
pop
ret
mov
cmpps
adc
mov
cmc
sbb
dec
in
jne
jg
and
mov
in
icebp
xchg
add
adc
push
mov
pop
jns
adc
ret
mov
and
pusha
add
in
fwait
add
test
adc
outsb
fstpl
sbb
out
fcoml
aam
jne
push
out
push
rcr
arpl
jmp
notl
pop
test
int3
bound
sahf
ja
int
insb
jmp
bound
xchg
mov
bndstx
cmpsl
pop
outsb
cmp
adc
sub
pop
cmp
mov
cmc
int3
subb
mov
xor
testb
xchg
jl
leave
xchg
aas
mov
rcrl
inc
add
push
pop
nop
jg
sahf
rolb
fstpl
rorl
hlt
xor
jg,pn
dec
test
and
sub
add
mov
xor
xor
test
subb
sahf
sub
jecxz
aam
push
mov
dec
mov
xor
mov
out
fscale
inc
pop
push
pop
jbe
adc
mov
add
pusha
out
shlb
out
rep
mov
lcall
mov
hlt
sbb
insb
addb
mov
cltd
push
pusha
cltd
cmpsb
cltd
add
jg
fisubl
jns
jbe
add
dec
push
xlat
movsl
fistpll
ljmp
js
hlt
adc
scas
mov
mov
xor
inc
int3
cli
push
mov
mov
xchg
sbb
insb
daa
push
mov
cltd
mov
outsl
push
push
pusha
sub
fcoml
mov
cli
aas
inc
mov
mov
adc
push
nop
xchg
decl
ds
outsl
add
data16
mov
sub
jl
push
inc
prefetch
push
pop
scas
adc
sbb
lods
add
sets
and
xor
jns
push
mov
pop
into
add
fcmovnb
sub
in
and
jecxz
ljmp
add
lcall
in
stos
add
lods
test
mov
test
adc
dec
sbb
pop
pop
cmp
in
lods
imul
sbb
fsts
aam
out
leave
pushf
and
mov
test
jnp
shl
rcl
and
push
iret
xchg
lds
add
push
pusha
pusha
cmp
and
add
sub
add
mov
nop
shlb
rorb
add
xor
cmpsl
rorl
sti
dec
xor
xchg
outsb
dec
cli
lcall
mov
outsl
in
and
push
add
clc
jge
push
push
andl
adc
pop
push
push
jns
push
daa
imul
call
repnz
mov
outsb
add
aam
mov
jnp
icebp
movsb
jecxz
divl
add
lret
sub
jbe
insl
inc
out
mov
imul
sbb
fdivrs
xchg
mov
jmp
stc
add
inc
inc
xor
dec
fs
jo
lea
push
leave
push
mov
or
pop
enter
aad
lods
cmp
pop
aam
mov
inc
or
xchg
jmp
lret
lods
int
into
lret
xor
insb
add
hlt
call
in
das
in
mov
jo
leave
dec
adcb
popl
loop
out
mov
inc
pop
nop
jnp
mov
ja
inc
xchg
pop
scas
xchg
dec
and
mov
mov
sbb
addb
jp
dec
push
xchg
rcl
push
stc
pop
dec
jecxz
adc
mov
pop
cld
mov
pusha
daa
je
stc
adc
out
fsubs
or
xlat
test
dec
stos
iret
add
inc
xchg
xchg
push
sahf
cmp
and
xchg
rorl
subb
inc
in
mulb
stos
sbb
pushf
dec
adc
mov
inc
rcll
fbld
adc
xor
jno
cmp
shrl
push
cmc
jmp
test
add
in
xchg
xor
aam
push
xchg
stc
add
lret
inc
xchg
stc
mov
lcall
cmp
inc
out
lods
icebp
mov
pop
pop
je
aaa
clc
inc
jae
aam
or
adc
filds
and
mov
or
and
cmpsb
movsb
enter
mov
xlat
sub
stc
cmc
jle
decl
imul
ret
inc
lods
mov
jbe
push
pusha
cmpsl
out
sub
fisubs
sarb
imul
jge
je
push
xorl
aaa
outsl
mov
sbb
pop
cmp
roll
xchg
and
stos
push
pushf
mov
cmpsb
test
out
outsb
jg
cwtl
sti
mov
adc
add
aaa
push
pop
or
sbb
fs
sbb
dec
je,pt
lret
in
shlb
adc
push
push
aaa
movsb
cmc
pop
dec
jl
insb
adc
dec
xchg
or
std
mov
leave
insb
cmc
aas
dec
inc
push
mov
pop
in
clc
cs
pop
sbb
jecxz
jg
inc
mov
gs
jae
outsl
into
mov
pop
ja,pn
sbb
jne
lods
icebp
fcompl
shrl
push
popf
jnp
addr16
add
cwtl
lahf
incl
popa
push
sahf
or
pop
dec
mov
data16
and
add
cmp
push
xchg
jle
loope
xor
xchg
pop
rol
js
mov
jp
insl
out
loope
lea
adc
ds
and
add
repz
outsl
push
inc
push
scas
popa
out
mov
lahf
add
outsl
mov
jne
xchg
mov
mov
negb
stos
arpl
es
int
xchg
dec
pop
rcrb
xor
shl
repz
test
in
pop
cs
lret
fwait
lods
shrb
sbb
ds
push
push
xor
push
lret
mov
dec
jle
pop
out
mov
stos
xchg
jecxz
paddw
aam
xorl
mov
out
pusha
bound
cmp
rcrb
inc
mov
sub
mov
movsl
cs
jne
adc
or
lods
inc
xor
pushf
in
jb
or
cltd
jl
dec
adc
mov
call
push
xchg
popf
mov
xlat
into
mov
sbb
shl
inc
shll
xchg
addr16
rcrb
mov
es
aas
add
mov
out
or
pop
stos
outsl
adc
dec
xchg
lret
mov
hlt
pop
ret
addr16
jmp
cmp
sub
orl
lret
testb
popa
repnz
enter
out
mov
sub
loop
roll
push
sbb
xchg
dec
xchg
into
mov
clc
jne
xchg
jg
mov
out
mov
and
and
mov
xchg
outsb
adc
fiadds
pop
cwtl
pop
seto
hlt
je
add
sarl
cwtl
and
mov
fimuls
cmp
scas
or
sbb
push
xchg
lcall
mov
jo
sbb
or
iret
addr16
lahf
sti
inc
dec
and
dec
adc
lret
jb
xor
pause
sti
cltd
add
or
daa
insl
movsb
pop
xchg
push
gs
sub
dec
mov
add
aam
cli
xor
ret
dec
lret
lock
dec
mov
or
and
js
sbb
mov
ret
push
fisttpl
ror
cmpsb
push
push
lret
lahf
and
nop
jecxz
mov
and
and
ljmp
mov
sbbl
mov
lods
push
jno
pop
dec
test
fs
sbb
or
adc
loope
jnp
outsb
mov
int3
jp
aaa
mov
repnz
mov
add
and
loopne
ss
in
xor
push
hlt
lods
xchg
fistpll
add
push
call
mov
hlt
mov
mov
jno
popl
popf
enter
sub
test
aad
pop
sbb
cmp
outsl
out
jecxz
add
lret
jp
sub
mov
sub
gs
xor
pusha
dec
cmp
daa
inc
aaa
mov
cmp
popf
iret
dec
and
jbe
mov
stc
push
mov
cmpsl
sbb
fcmovnbe
divb
xchg
xor
ljmp
lods
push
test
push
cmp
dec
mov
fs
dec
jecxz
icebp
imul
pop
sbb
adc
push
pop
call
hlt
adc
pop
vmovdqu
out
xor
lret
shlb
and
adc
je
mov
orl
ret
aaa
lcall
push
test
popf
mov
dec
out
stos
aam
aaa
mov
push
inc
out
xchg
inc
jo
dec
popa
aaa
ss
fimuls
scas
sub
mov
cs
testb
out
sub
iret
int
or
xorb
sarl
imul
in
ljmp
imul
xor
repz
jno
dec
mov
or
jae
inc
or
and
jbe
push
mov
movhps
lods
stos
aas
xchg
orl
int
imul
mov
adc
in
inc
jns
cmpsb
insl
mov
pop
repz
and
pop
pop
xchg
insl
pop
mov
cmp
xor
push
mov
mov
loopne
mov
jg
aad
data16
lods
addr16
loopne
orb
cmpsb
outsl
loopne
cmp
pop
xor
mov
into
mov
aaa
cli
mov
inc
mov
loope
scas
xchg
inc
call
outsl
mov
push
xchg
lahf
jbe
shl
jge
push
les
push
shrb
inc
push
inc
push
cld
loope
jne
push
es
inc
xchg
pop
gs
mov
jge
js
loope
lcall
push
aaa
out
xor
stos
mov
dec
fcoml
xor
or
xlat
mov
push
std
and
mov
incb
fidivs
xchg
mov
test
dec
rorl
test
into
lock
or
loop
lret
mov
adc
mov
aad
xorl
arpl
jno
sub
mov
test
clc
dec
dec
inc
enter
sub
jmp
cmpsb
mov
pop
in
xor
fldz
mov
lods
add
les
arpl
out
dec
and
mov
add
icebp
xchg
gs
dec
mov
fwait
add
aam
cmp
pop
cltd
push
xchg
jmp
sbb
in
adc
movsb
imul
mov
je
ret
pop
loop
push
cmp
lds
xchg
ljmp
push
and
inc
fildl
xchg
out
and
adc
mov
mov
mov
fnsave
add
lds
sub
mov
push
gs
sub
mov
sbb
call
jl
xor
shlb
or
jg
ss
ficoms
mov
scas
adc
jbe
pop
jg
daa
iret
adc
sbbb
pop
rclb
push
fldt
xchg
mov
xchg
adc
cmp
es
jge
enter
push
lock
rcrl
lahf
jecxz
and
insb
sbb
mov
adc
sub
cmp
je
test
cmpsl
dec
mov
cli
add
ja
imul
mov
ja
in
and
lds
gs
push
aam
push
cmp
inc
inc
pop
push
idivb
rcrl
fimuls
xorb
lahf
jno
das
pop
push
or
and
dec
call
xchg
sbb
push
mov
std
enter
mov
mov
cmp
lret
hlt
rcrb
jne
scas
movl
scas
dec
sbb
lods
sbb
mov
in
jbe
gs
or
ret
inc
jb
fwait
pop
lcall
jns
sbb
push
iret
movsl
cmpsb
xor
mov
pop
sub
pop
bound
xor
pop
negb
mov
daa
mov
inc
in
adc
lret
lret
xor
sub
adcb
roll
mov
inc
loope,pt
pop
lea
pusha
mov
add
mov
movsl
leave
test
inc
jge
cmp
ret
or
call
ja
imul
mov
pop
push
es
or
pop
bound
in
or
and
scas
sbb
push
inc
add
cmp
je
xchg
pop
jbe
or
rcll
into
andl
addl
je
sub
jbe
bound
mov
gs
sub
aam
fwait
ret
jb
push
mov
adc
push
xchg
add
clc
xlat
pop
cwtl
pop
aam
cmp
aaa
pop
pop
add
dec
pop
jns
jns
popf
or
inc
add
jecxz
lods
dec
test
push
ja
pop
aad
cmpsb
jb
sub
push
and
shlb
xchg
es
push
out
pop
sahf
jg
pop
add
outsb
jbe
stos
dec
mov
mov
hlt
icebp
call
into
push
push
clc
xchg
jg
xchg
arpl
inc
cmp
push
fstpt
ud0
inc
out
aad
cld
or
data16
jne
pop
mov
notl
sti
movsl
cli
and
or
push
cli
adc
adc
repnz
add
sahf
hlt
dec
pop
push
mov
push
aaa
sub
add
fdivrp
xlat
mov
cmp
popf
fnstcw
xor
push
dec
mov
aad
aam
je
jno
in
cmp
loop
ss
pop
xchg
xchg
shlb
movsl
popa
push
mov
pop
pop
xchg
rcll
mov
mov
mov
and
adc
les
push
and
pop
cmpb
push
es
lcall
xor
adc
dec
inc
cli
add
and
ljmp
sbb
xchg
jb
cmpb
lcall
push
jl
lahf
inc
imul
jecxz
mov
in
mov
dec
sub
and
xchg
stos
js
ljmp
ss
jle
movsb
mov
cli
sub
test
stos
push
cltd
ss
jb
sbb
mov
std
xor
cs
jecxz
push
nop
lea
pop
mov
pop
repnz
inc
scas
shll
add
inc
jg
and
sbb
ret
inc
xchg
cli
push
sbb
mov
nop
sbb
push
repz
dec
cmp
int3
loope
imul
dec
mov
push
subl
mov
ja
adc
dec
add
aaa
inc
cltd
ja
imul
vrcpss
std
fcmovnbe
subl
sub
lret
push
add
mov
jno
pop
or
push
cmpsb
pop
mov
mov
xor
lock
cmp
jge
in
mov
outsl
sub
andl
cltd
mov
shrb
out
pop
pop
adcl
mov
out
mov
mov
repz
ljmp
cli
int3
mov
lret
insl
or
push
fbstp
arpl
adc
pushf
xchg
scas
std
jbe
jne
addb
xor
push
sti
cmp
insb
or
jecxz
inc
movsl
pop
ja
mov
icebp
lcall
notb
cmp
std
sub
pop
lock
inc
pop
cmp
mov
cmpsl
clc
adc
fldt
xlat
jne
pop
pop
loop
push
popf
mov
cmpsb
outsb
les
jp
push
push
shrb
ljmp
lahf
je
hlt
aaa
and
sahf
andl
add
imul
push
call
jg
push
fadd
rcrb
jp
stc
xor
add
imul
cmp
jmp
arpl
jb
cmpsl
inc
mov
xchg
xchg
dec
aam
xchg
mov
and
inc
sbb
ret
jmp
leave
dec
cmpsl
push
ss
mov
mov
inc
pop
mov
xorb
and
mov
inc
inc
and
lcall
pop
push
push
adc
pop
push
and
xchg
arpl
fnstsw
push
push
cld
push
clc
sub
cmpsb
popa
or
test
push
inc
lahf
shr
add
loopne
testl
insb
nop
cmpsl
int3
test
add
push
push
push
pop
pushl
and
stos
add
pop
inc
loop
ret
out
mov
stos
pop
aaa
xchg
sbb
sub
outsl
lods
mov
xchg
rorb
jecxz
mov
mov
aad
mov
das
popf
adc
int
xor
push
cmp
cmp
aaa
push
push
xor
jp
cmovne
gs
call
push
addr16
ljmp
neg
roll
jmp
pusha
jo
stc
mov
mov
dec
jmp
mov
jno
test
pop
inc
adc
jbe
xlat
lock
cmp
in
movsl
mov
dec
lret
imul
leave
jnp
and
or
lea
test
iret
lods
mov
fadd
push
stos
dec
add
and
pop
adcb
xchg
les
pop
mov
cmpsl
shll
xchg
adc
arpl
jo
inc
test
sub
jne
xchg
and
sbb
iret
mov
stos
sub
je,pt
out
pop
jnp
and
pop
sub
lods
test
inc
pop
fimuls
add
hlt
addb
cli
pop
sub
lds
into
in
mov
inc
test
lcall
daa
repnz
es
mov
dec
faddp
lret
sub
decb
push
adc
xchg
xchg
fwait
pushf
psubb
outsb
cltd
sub
sub
aas
loop
daa
mov
push
aas
xchg
clc
lods
out
aad
or
add
xchg
pop
inc
sbb
int
jo
fcomi
dec
outsl
clc
loop
and
int3
aas
push
cmp
jb
sarb
cmp
gs
pusha
xchg
mov
popa
xchg
inc
aas
movsl
adc
jl
cmc
xchg
or
dec
jg
pop
jns
xchg
fimull
leave
inc
sbb
and
mov
push
repz
int3
push
insl
fcompl
ret
xchg
sub
out
in
mul
adc
cwtl
adc
addps
xor
and
test
dec
add
adc
xchg
and
pop
int
push
sbb
data16
cmc
jnp
push
cwtl
mov
or
push
lea
pop
mov
insb
jl
fsubrp
iret
mov
cmpsb
adc
pop
jmp
sbb
xchg
inc
or
int3
cmpsl
into
adc
and
cmp
in
mov
adc
inc
popf
sub
movsb
mov
out
add
adc
pop
lds
dec
ss
cld
int3
ret
dec
iret
or
pop
mov
and
sbb
jp
xchg
jle
ja
cmp
inc
lret
xor
sbb
out
lds
jo
mov
or
jmp
push
inc
inc
sahf
mov
mov
mov
jp
aaa
jmp
mov
fsubr
add
pop
jnp
mov
jle
or
mov
in
xchg
mov
jge
xchg
xchg
mov
movsb
rclb
insl
push
enter
out
and
xchg
leave
pop
xor
push
jo
add
lcall
cs
xor
maskmovq
divl
lret
or
cmpsb
sub
xchg
imul
lcall
cs
inc
pushf
jnp
xor
pop
ja
dec
push
lahf
push
in
mov
in
test
add
xor
sub
jne
fnstcw
pop
shll
outsb
xchg
sub
dec
fprem1
cs
repnz
into
cwtl
cmpsl
xchg
mov
les
push
push
in
test
dec
iret
push
mov
pop
in
xchg
cmp
cmp
in
leave
test
mov
cmp
and
outsb
not
mov
fisttpl
cmc
out
xchg
mov
in
mov
pop
inc
sub
hlt
adc
sbb
loopne
inc
ret
xchg
cmc
mov
xchg
fcomi
in
aaa
loope
mov
into
dec
dec
shll
in
mov
push
aam
adc
mov
aad
jle
insl
sar
push
fwait
sahf
cld
xor
add
jbe
mov
out
adc
mov
inc
mov
xchg
ljmp
ud2
out
popa
push
mov
mov
mov
mov
aad
cmp
cli
cwtl
mov
lock
push
inc
outsl
aad
scas
pop
daa
out
and
xor
push
xor
jmp
sub
pop
xor
shll
cs
in
scas
or
xchg
insl
int
jl
ss
sahf
cltd
add
mov
dec
xchg
into
gs
lods
push
mov
ljmp
cmpsb
push
insl
pop
jns
clc
xorl
scas
mov
mov
popa
imul
or
push
cmp
sbb
add
addb
les
mov
test
cmpsl
jecxz
and
xor
xor
int
xchg
jge
xchg
inc
imul
pop
cltd
or
jb
sbb
mov
dec
rcrl
and
mov
lcall
pop
mov
ret
pop
sbb
cmc
or
jp
pop
stos
or
clc
sub
adc
loope
cld
cmp
insl
push
mov
mov
insb
js
loopne
incl
or
lods
mov
repz
jmp
pop
imul
mov
insb
std
or
mov
insb
subl
mov
mov
cli
in
push
sub
movsl
subl
jne
in
cmp
ret
jns
ss
mov
test
or
callw
gs
jl
inc
cs
pop
mov
adc
and
fstpl
fidivs
mov
lret
jmp
add
ljmp
cld
je,pn
cmpsb
je
push
and
orb
stc
test
pop
add
int3
jge
mov
aaa
mov
pop
mov
inc
addr16
jns
rclb
mov
push
mov
out
xchg
leave
fldcw
sahf
mov
lds
in
add
xor
dec
and
mov
push
lret
xor
subb
and
stos
cmp
inc
aas
das
repnz
fimull
dec
cwtl
and
adc
test
movsl
mov
add
nop
and
or
testl
cs
cmp
jb
repz
or
xor
aas
add
js
fimull
xchg
pop
sub
jl
outsb
lret
bound
push
mov
mov
fsub
xchg
movsb
sbb
fistl
andl
adc
mov
push
imul
nop
out
mov
or
xchg
pop
outsl
icebp
aaa
cld
add
fdiv
xchg
cmc
xchg
mov
daa
push
mov
mov
iret
notl
push
mov
gs
addl
or
aad
test
in
divps
pop
jnp
cmp
ret
sbb
dec
in
call
in
test
pusha
mov
popa
fcompl
ljmp
sub
icebp
clc
inc
outsl
push
ss
and
sahf
pop
pop
out
out
jo
arpl
add
jbe
pop
in
xlat
push
lcall
insb
sub
inc
fisttps
nop
lret
movsl
jbe
or
andl
sub
xor
push
sahf
lret
pop
sbb
sbb
and
icebp
push
xchg
out
sub
movsb
enter
adc
out
jmp
pop
xchg
mov
mov
and
shrb
loopne
aad
add
cmp
or
sahf
js
adc
mov
push
and
add
scas
sbb
push
arpl
mov
lret
stos
mov
arpl
fwait
sub
mov
add
inc
stos
inc
sbb
pop
lea
inc
mov
cmp
jg
test
pop
test
push
inc
std
test
pop
loop
sub
push
dec
adc
pop
mov
jno
int3
xchg
sub
repnz
mov
sbb
cmp
dec
aam
dec
sarl
mov
mov
in
add
in
pop
jns
popa
sbb
test
jae
aad
mov
push
stos
movsl
jb
into
mov
imul
shufps
mov
adc
rcrb
shrl
ss
in
arpl
adc
mov
popa
das
and
cmp
popl
and
pop
iret
pop
push
mov
jbe
or
xchg
jg
inc
lahf
les
pop
ljmp
xor
leave
ret
fxch
leave
add
mov
js
jns
cld
ror
cmp
sub
mov
xchg
adc
mov
ds
mov
imul
and
sbb
and
or
or
sub
jne
push
std
jg
insl
push
jge
lcall
push
fistpll
loop
int3
sbb
pop
lret
movsb
clc
pusha
loope
mov
pop
lahf
sub
addl
cwtl
cld
imul
into
lcall
add
pop
jne
add
adc
call
xchg
fwait
mov
pop
lods
xchg
loop
cmp
jg
and
bound
pop
push
icebp
out
repz
pop
out
mov
mov
fwait
push
push
mov
popf
in
push
scas
rcll
fldcw
decl
cmp
cmp
popf
out
push
arpl
enter
xor
xchg
adc
adc
inc
in
jmp
lcall
add
rcrl
jae
rcr
ja
pushf
mov
xor
adc
jb
sub
adc
in
xchg
mov
mov
fs
inc
ret
stos
pop
mov
or
or
outsb
mov
mov
jbe
sub
xchg
jl
jne
out
ss
imul
mov
inc
or
aad
push
and
mov
fbld
jb
dec
es
mov
jae
cmp
ret
mov
fisttpl
je
in
pop
sbb
into
lea
adc
xor
pop
arpl
xchg
and
and
add
jbe
mov
jge
sbb
cld
add
sbb
sbb
cli
stos
orb
imul
mov
jp
jl
mov
insl
repnz
and
jo
mov
xchg
sbb
mov
cmc
mov
and
push
stc
das
repz
test
and
into
into
movl
bswap
jg
lock
dec
cwtl
lcall
xchg
enter
add
cmp
jno
jno
repnz
rcrl
sub
dec
data16
fsubs
cmp
xchg
call
test
and
xchg
loope
xchg
ret
je
xchg
ljmp
cmc
cmp
jne
incb
add
int3
adc
jne
or
mov
or
xchg
cmp
adc
and
push
jbe
aaa
ja
stos
xchg
sub
stc
pop
xchg
xchg
call
push
aad
nop
orb
and
fistpll
cmp
mov
xchg
xchg
xor
pop
out
xor
xchg
add
mov
sbb
adc
sbb
mov
add
mov
loop
addr16
dec
xchg
mov
mov
imul
shll
mov
iret
movsl
pop
lea
scas
popa
scas
lds
std
and
testl
or
mov
jno
and
loopne
mov
xchg
push
mov
pop
shrl
xor
sub
aas
dec
pop
dec
adc
cmc
jne
dec
xor
mov
xchg
outsl
mov
inc
daa
dec
aad
lahf
xor
test
cmp
call
imul
add
divl
jns
mov
xor
sbb
dec
jmp
imul
testl
xor
mov
out
ljmp
aas
inc
cmp
sarl
dec
push
and
pop
enter
dec
out
jb
inc
xchg
test
adc
into
arpl
dec
pop
mov
lock
mov
out
mov
sbb
int3
adc
imulb
cld
push
sbb
mov
subb
cmp
push
cmp
dec
in
mov
lret
aad
xor
mov
mov
incl
fnsave
xor
mov
ficoms
sub
es
cld
gs
push
std
cmp
stos
rcll
out
pop
mov
cld
or
das
pop
mov
mov
mulb
xchg
xor
out
je
cltd
xchg
push
loope
cmc
sub
loop
fwait
popf
xchg
dec
push
out
inc
xchg
iret
mov
into
loope
out
adc
jo
lahf
sbb
push
sbb
push
inc
mov
fs
and
cwtl
xchg
xor
lea
pop
sti
pop
or
out
leave
inc
dec
in
pop
inc
add
cmpl
or
inc
push
dec
mov
mov
xor
fwait
dec
mov
cwtl
mov
or
in
lea
lea
lock
xor
in
mov
jge
test
jl
adc
scas
push
lds
dec
enter
mov
mov
stos
mov
adc
lahf
dec
xchg
and
adc
xor
jns
fwait
imul
add
repz
fnstsw
mov
sub
xchg
cmp
arpl
xchg
int3
leave
cmpsb
scas
fxch
jo
mov
add
xchg
xchg
sbb
xchg
mov
xlat
jne
adc
fdivrs
fs
pop
std
ja
mov
sahf
adc
push
loopne
mov
and
add
sub
pop
sbb
inc
gs
mov
mov
jl
add
in
repnz
push
or
es
push
shrb
aad
pop
test
push
xchg
mov
lret
mov
mov
fists
add
jno
imul
push
inc
push
push
lea
ret
pop
and
negl
inc
movsb
xchg
mov
push
lds
mov
fisttps
pop
les
push
rol
xor
pop
jnp
push
dec
imul
hlt
pop
xor
pop
daa
cmp
xor
out
cmp
sarb
cmp
pop
lret
int
jl
dec
inc
notl
xor
cwtl
int
mov
repz
push
sbb
inc
or
jnp
mov
add
xor
sbb
xor
sbb
dec
jo
inc
add
leave
ffreep
daa
int
fwait
gs
pop
test
nopl
enter
fisubs
pop
shll
jl
inc
pop
icebp
imul
dec
add
mov
xor
ljmp
mov
mov
jg
out
inc
adc
test
dec
mov
je
mov
cwtl
mov
adc
pop
cmpsb
sub
sbb
jg
dec
xor
or
xor
xorl
inc
pop
mov
pop
jecxz
xor
jbe
psllw
aad
das
ja
inc
and
shl
cmp
jl
pop
fimull
repz
jecxz
pop
and
inc
dec
xchg
subb
adc
dec
jne
or
mov
mov
mov
pop
sarb
inc
stos
in
adc
push
sbb
lret
loope
jge
mov
scas
lcall
dec
jmp
adc
rorb
test
jge
add
jge
xchg
xchg
dec
mov
shlb
add
pop
or
mov
mov
and
mov
adc
mov
mov
jg
ret
jle
inc
xchg
pop
pop
xor
sub
inc
cld
js
mov
iret
xlat
dec
and
cli
push
dec
push
xchg
les
add
mul
aaa
mov
enter
stc
sbb
ret
popa
or
cmc
ja
jno
cltd
mov
fadd
idiv
jmp
out
push
inc
rcll
es
mov
bnd
cltd
test
fmul
inc
adc
std
adc
sbb
out
leave
leave
imul
dec
cmp
mov
in
cmpsb
popf
out
mov
add
mov
mov
pop
shl
mov
add
pop
fiadds
xor
adc
movsb
dec
fldenv
push
iret
movl
push
test
dec
loop
ds
fwait
andb
sbb
sbb
and
aam
sbb
lods
ljmp
mov
and
wbinvd
jbe
inc
or
lds
adc
xor
cld
inc
xchg
lods
sub
or
lret
mov
lods
add
mov
pop
mov
fisubs
aaa
sub
cwtl
xchg
or
sub
xor
test
or
imul
incb
pusha
mov
std
shll
and
pusha
into
dec
adc
jne
or
mov
les
jae
inc
mov
xchg
fcmovne
or
push
mov
xor
push
call
xchg
jl
jb
enter
arpl
or
test
bound
cmpsl
or
adc
rcl
jo
neg
pop
int3
inc
es
imul
mov
fadds
out
jg
push
sub
sub
les
push
and
cmp
sti
push
inc
shll
enter
out
adc
jg
and
negb
stos
sbb
sub
lds
test
scas
sub
cli
add
xchg
loop
repnz
mov
xor
and
dec
sar
push
xor
hlt
xchg
pop
add
adc
dec
pop
mov
stos
mov
ret
xchg
test
jl
out
and
int3
rcr
sub
std
insb
nop
aas
inc
xchg
mov
adc
add
cmp
addr16
inc
or
xchg
push
les
in
repnz
jno
sub
jge
mov
mov
push
cmpsb
push
mov
cli
adc
dec
inc
sub
cmp
enter
mov
enter
in
push
adc
jne
or
push
scas
dec
movsl
test
pop
jmp
pop
call
mov
xchg
dec
and
mov
mov
mov
popf
aas
ss
push
shl
pop
cmp
mov
iret
es
xchg
inc
fimuls
lea
sub
fcmovne
out
dec
vpsllq
pusha
mov
cmp
xchg
xchg
cmp
ds
fs
mov
loop
dec
and
xchg
or
mull
xor
imul
xor
lret
sahf
add
dec
push
push
aad
icebp
mov
imul
fldcw
sbbl
xor
xchg
mov
mov
mov
test
and
inc
sahf
push
xor
mov
adc
cltd
push
and
mov
dec
adc
xchg
jmp
xchg
aad
xchg
mov
imul
pop
jle
outsl
push
jle
mov
pop
adc
mov
push
cld
popf
mov
pop
xor
scas
xchg
sti
loopne
cmp
lea
cmp
mov
fiadds
loop
or
cmc
fildl
clc
imul
sub
repnz
sbb
jbe
push
shlb
dec
push
popf
data16
into
shrb
fisttpl
dec
sbb
pushf
dec
sbb
ss
loopne
push
pop
xlat
dec
insb
lds
pushf
loop
mov
adc
fcompl
push
inc
mov
jle
cwtl
cli
pop
in
out
lret
test
adc
dec
gs
aad
jmp
jmp
sahf
xchg
cli
and
cmp
xchg
xchg
push
jp
xchg
test
mov
testb
sbb
cmp
int3
xor
mov
fimull
push
addl
mov
sub
adc
mov
dec
xchg
mov
push
xor
jns
xor
out
push
loop
out
ss
mov
inc
inc
dec
inc
cmp
out
fxch
call
jns
popl
jl
mov
aas
stc
jp
mov
bnd
roll
lock
cmp
les
push
dec
push
sbb
jle
outsl
fbstp
shl
scas
pop
jne
and
dec
repnz
test
ret
sbb
pop
pop
mov
ja
sub
xchg
pop
sub
jnp
out
ficompl
and
mov
mov
movsb
aaa
jnp
sub
xlat
nop
inc
pusha
mov
enter
lods
pop
jbe
mov
push
addb
cmp
out
jbe
mov
into
dec
stos
aas
sub
mov
js
adc
sub
adc
dec
sbb
clc
adcl
test
ljmp
fstl
jp
dec
leave
jne
xchg
pushf
xor
mov
xchg
mov
jo
add
dec
iret
test
cmc
push
loop
dec
lea
cmp
xlat
or
les
mov
jg
pusha
repnz
push
ror
cmp
test
aam
ficomps
add
xor
cmp
sub
cmc
xchg
jo
fisubl
loopne
mov
cwtl
adc
inc
pusha
pop
iret
xor
pop
ja
jno
dec
ret
push
ret
pop
rcrl
inc
sub
out
xchg
mov
mov
dec
cmp
std
push
popa
and
rorb
lcall
popf
jbe
jnp
jns
push
mov
dec
mov
sbb
inc
mov
mov
sbb
adc
outsl
pop
jno
sbb
and
cmp
jb
mov
xchg
mov
xor
sub
pop
ficoml
in
mov
movsb
lcall
xor
rolb
stos
push
inc
fsubrl
loop
movsb
ficoml
jmp
jl
jp
sti
out
jecxz
repz
cmp
adc
jmp
push
mov
out
push
movsb
cmp
mov
dec
lods
call
daa
cmp
dec
pop
mov
test
mov
hlt
repnz
ret
jb
rcl
int3
pop
cld
gs
mov
xchg
dec
cltd
cwtl
dec
inc
pusha
xor
ljmp
jecxz
mov
add
inc
xchg
in
inc
mov
and
insl
or
rol
push
and
aaa
xor
sbb
mov
cmp
bnd
test
pop
repnz
xchg
fdivrs
movsl
add
adc
mov
dec
dec
test
add
mov
mov
xchg
pop
repnz
cli
mov
adc
test
jle
push
inc
cmp
add
mov
fmulp
jne
jnp
loope
outsb
xor
shlb
incb
jg
int3
and
jns
int3
es
dec
push
mov
sub
lcall
nop
mov
aad
xor
adc
out
xor
nop
add
xchg
in
rolb
fstpl
gs
sbb
das
jne
mov
lods
xchg
test
sbb
mov
jg
vcvtpd2dqx
cmp
in
jnp
shll
rcrb
in
push
cmp
and
cmc
cld
mov
jne
int3
pop
ljmp
inc
mov
push
pop
mov
jmp
xchg
inc
add
mulb
imul
out
movsl
sbb
jmp
dec
stc
push
in
jp
lret
sbb
lahf
lahf
push
pop
pushf
loopne
loopne
imul
jno
jo
idiv
xor
int3
imul
jmp
pavgw
mov
push
xlat
fldenv
mul
jle
or
pop
and
ljmp
push
xchg
ss
dec
scas
imul
lea
ljmp
je
cltd
arpl
sbb
jae
push
iret
jge
cwtl
sub
rcr
xor
insl
out
ret
sti
mov
push
dec
outsl
adc
ficoms
inc
cmp
mov
sbb
shll
sbb
push
push
decb
rcr
bound
lock
adc
jo
push
scas
dec
sbb
cmc
test
push
daa
xor
iret
add
movsl
and
cltd
push
lds
in
push
aaa
test
xchg
ss
imul
outsb
nop
rcrl
jne
pushl
syscall
add
cmp
push
cmp
mov
ds
pop
les
push
js
js
icebp
mov
inc
sbb
pop
mov
inc
loop
sbb
leave
testb
add
xor
in
sbb
out
sub
mov
lods
test
mov
mov
shll
ret
cld
push
dec
sub
xor
jno
pop
in
lods
imul
filds
ret
inc
iret
jecxz
aam
shlb
sub
enter
adc
std
adc
mov
into
outsl
mov
mov
inc
cmpsl
lods
xchg
push
faddl
test
jecxz
sub
call
mov
jae
jge
sbb
xor
push
xor
push
cld
lahf
cmp
jae
into
nop
lret
inc
insl
adcl
inc
sub
cmp
aaa
cmp
subb
incb
iret
add
fucom
sub
xchg
cmc
or
out
std
sbbb
loopne
pop
in
icebp
xlat
hlt
push
aas
mov
cmp
imul
or
jle
cmp
sub
dec
fcomip
shrb
mov
pop
inc
sub
into
xchg
shrl
xchg
xor
out
fwait
sbb
sbb
adc
daa
popf
mov
sbb
addr16
sub
jnp
iret
and
inc
xchg
mov
jo
inc
adc
insl
imul
cmp
into
cmp
inc
repz
xchg
pop
pop
pop
test
in
lret
mov
mov
inc
sub
mov
mov
xchg
sti
cld
add
popa
dec
lock
insl
js
out
push
sub
int3
or
mov
pushf
bound
mov
add
dec
rorl
daa
loop
sti
shlb
xlat
cwtl
faddp
cmp
stos
dec
push
es
xchg
xorl
dec
push
mov
add
lret
dec
lods
xchg
cmp
dec
or
rcll
jge
movsl
rcrl
orb
mov
stos
xlat
iret
jp,pn
push
rcr
pop
and
push
dec
cli
xchg
fisubrs
test
jp
in
push
stos
mov
popa
sub
and
push
int3
push
push
dec
aam
into
ret
neg
cmp
pop
mov
mov
jle
lea
nop
fsub
movsb
dec
or
or
fwait
icebp
pop
pop
scas
sarb
xor
and
sbb
adc
movsb
push
outsb
cld
mov
data16
cwtl
jge
dec
xchg
jecxz
leave
sub
mov
adc
push
es
pop
loope
jb
or
js
xchg
xor
jle
repnz
adc
test
test
xorb
hlt
xor
jae
mov
inc
std
mov
jl
dec
lret
inc
cmp
jp
push
adc
push
insl
dec
jne
andl
movsb
mov
adc
lret
jo
dec
sbb
mov
push
sub
or
jl
xchg
lods
mov
dec
outsl
rorb
push
in
jmp
js
neg
lret
add
sbb
jecxz
mov
or
gs
aas
movsl
sbb
push
and
cmp
adc
push
in
int
icebp
nop
push
jnp
sbb
ror
mov
mov
mov
mov
pusha
xchg
je
or
cs
loopne
das
push
leave
out
push
mov
iret
mov
sbb
mov
sbb
ljmp
insb
data16
out
fadd
lcall
lcall
into
sub
clc
inc
loop
shll
lahf
mov
sahf
pop
xor
incl
mov
lahf
cs
fnstcw
in
sbb
mov
pop
push
fisttpl
mov
rclb
stc
mov
fwait
repnz
sub
mov
sub
clc
xchg
fnstcw
addl
jbe
aaa
sbb
call
push
and
in
ds
sub
jns
jg
mov
sti
ffreep
or
aam
adc
push
jne
lcall
push
int3
jg
inc
push
jge
push
pushf
add
cmp
es
mov
sbb
inc
pop
aaa
push
mov
mov
mov
cmp
xchg
je
daa
aam
jmp
clc
je
je
stc
jmp
cwtl
out
xorb
xchg
pcmpeqd
movsb
lock
pop
add
ret
and
xor
movsb
and
mov
pop
jmp
pusha
mov
mov
mov
outsb
pusha
sbb
rcrb
xor
mov
hlt
insl
dec
push
or
mov
push
cmp
shrl
nop
xor
sub
in
xchg
leave
add
fadds
pop
cs
shll
out
jno
xchg
push
xor
movsb
test
sub
xor
outsl
ret
xchg
cmp
lock
push
or
hlt
outsb
sbb
pop
add
call
push
test
pop
inc
fisubs
push
mov
mov
or
jne
rcll
and
sub
fildl
mov
dec
das
fs
aaa
call
lret
mull
push
lock
adc
and
sbb
movsb
xor
add
inc
push
leave
lahf
rclb
jb
out
cmpsb
imulb
in
jae
inc
mov
pop
adc
pop
ret
test
adc
lret
and
mov
xor
push
loopne
and
sbb
push
jae
out
pop
fsts
sbb
scas
xchg
gs
bound
insl
add
in
push
sub
stos
icebp
or
xchg
push
daa
hlt
xchg
lret
aad
lds
divb
popa
pop
push
sahf
cmp
fistpl
mov
pop
pushf
dec
mov
pop
mov
sbb
mov
jge
pop
mov
sub
sub
mov
addr16
popa
push
iret
aam
push
jbe
sub
fsubl
stos
stos
stos
lcall
scas
int
mov
mov
fwait
xchg
fsubrl
mov
cs
test
mov
or
and
popa
push
xchg
lahf
mov
sbbb
loope
movsb
mov
lret
push
add
jo
lea
stos
push
lods
jle
pop
loop
mov
mov
jle
inc
pop
dec
mov
or
test
cmpb
std
pop
pop
and
dec
mov
mov
jo
xchg
out
dec
mov
loop
icebp
sub
scas
imulb
adc
cltd
push
addr16
mov
add
movsb
mov
sbb
mov
aad
daa
insl
frstor
or
nop
push
push
nop
movsl
push
mov
push
mov
or
mov
test
ret
cmc
mov
push
pop
jo
in
hlt
push
cltd
sbb
xor
shrb
daa
loop
cwtl
sbb
and
movsl
data16
jl
std
and
pushf
jecxz
ffreep
sarl
mov
push
mov
ret
jecxz
lcall
pop
call
imul
iret
lock
ret
pop
mov
subb
mov
in
pop
fnstenv
push
and
fucom
in
inc
ret
outsl
jle
test
jno
sub
fstpl
mov
mov
xchg
and
fdiv
sub
jcxz
je
test
push
in
sbb
in
push
popa
inc
adc
loopne
shlb
mov
cmp
push
inc
or
xchg
inc
sub
cmp
or
jne
pop
push
jae
add
xchg
mov
das
movsl
inc
loopne
lcall
mov
lods
and
iret
mov
test
jl
das
dec
test
movsb
lods
lock
push
enter
cmp
scas
movsb
add
sub
es
dec
mov
rorb
enter
add
inc
adc
je
out
cld
jg
addr16
mov
mov
pop
je
in
sarl
and
adc
adc
xchg
ficomps
add
pop
in
jae
lods
out
push
shll
lret
push
mov
cli
icebp
jbe
fsubrs
mov
outsl
ljmp
scas
and
test
xchg
inc
jmp
sbb
loopne
xchg
cmp
js
jle
mov
lock
movsb
cli
xor
adc
imulb
lahf
lcall
push
fs
call
push
push
and
xor
jno
imul
lea
fldcw
lahf
lods
dec
mov
loope
dec
dec
dec
mov
cwtl
push
pop
mov
lret
inc
adc
add
mov
jge
jmp
lods
into
pop
aas
cmpsl
push
dec
stos
jae
jnp
push
inc
insb
fidivs
in
dec
shll
cs
aaa
stc
or
add
mov
or
xor
cmp
adc
cli
aaa
js
ljmp
pusha
hlt
cmp
stos
loopne
sbb
clc
mov
clc
test
mov
into
ret
nop
popf
xchg
push
popa
and
pop
pop
mov
xchg
popf
cs
in
xchg
in
rcrl
mov
pushf
sbb
cld
popa
xchg
ljmp
test
jno
sbb
inc
mov
mov
scas
adc
ss
mov
mov
js
mov
lock
jle
hlt
or
shrl
sbb
and
wrmsr
ja
jle
test
insl
cmp
pop
es
jbe
mov
loop
dec
xchg
hlt
ja
out
sub
insb
ljmp
in
sbb
xchg
push
sbb
mov
mov
lcall
xchg
mov
loop
mov
cmp
lret
movsb
jo
fsub
or
popa
and
mov
lcall
pop
lcall
clc
cmpsl
insl
pop
mov
inc
loop
aam
pop
imul
push
sbb
cmc
xor
into
call
pusha
inc
test
jl
and
xor
or
sarl
pop
xchg
push
dec
push
mov
in
add
push
dec
cs
fbstp
movsb
popf
mov
out
inc
addr16
in
hlt
push
loop
popf
lret
repz
ret
mov
mov
push
loop
mov
in
ds
inc
dec
cmpsb
adc
jae
jg
stos
adc
dec
pushf
outsb
dec
test
and
out
loope
sub
pop
xor
int3
jmp
mov
imul
xor
jno
inc
jp
or
ret
ret
hlt
and
les
mov
mov
pop
push
imul
sbb
mov
cwtl
or
loopne
push
es
popa
aas
fs
mov
fcoml
pushl
or
xor
fstpl
fbstp
bound
clc
movsb
cmc
mov
out
rol
push
or
movsl
push
movsb
xchg
cmpsb
addb
out
push
inc
imul
mov
rcrb
stos
lcall
inc
out
jo
fisttps
imul
jge
out
test
out
fstps
dec
outsl
xchg
inc
bound
aas
shll
sbb
mov
adc
mov
int3
cs
ret
sbbb
aas
enter
xchg
xchg
mov
mov
xchg
lods
cpuid
xor
aad
out
fisubs
addr16
scas
jb
or
or
fistl
mov
fdiv
lret
push
xchg
pop
or
test
add
push
xor
cmp
xchg
fistpl
push
xor
or
int3
jle
stos
inc
loop
jno
mov
adc
xchg
xor
sub
sub
ljmp
repz
add
fistpl
les
cmpsl
inc
shr
inc
test
pop
xor
pop
hlt
bound
das
pop
sub
bound
jle
out
dec
and
sub
scas
mov
and
sub
in
jle
cli
int
aaa
loop
and
ret
xor
push
shll
push
dec
adc
fwait
mov
les
xchg
xchg
lret
jmp
dec
daa
es
jmp
lods
and
test
lret
xor
jmp
and
and
orl
xchg
sbb
stos
mov
cmp
mov
and
mov
xor
loopne
sbb
imul
adc
jno
dec
mov
jp
push
popa
mov
mov
popf
adc
xchg
shlb
dec
push
mov
mov
and
jle
stos
popf
push
cltd
das
ret
dec
sbb
push
mov
out
popf
arpl
cwtl
fwait
jp
cwtl
add
int
push
stc
pop
sub
and
jge
mov
adcl
xchg
popf
lret
dec
popa
push
aas
mov
adc
xor
ret
test
xlat
addl
add
test
icebp
xor
pop
inc
add
push
stos
jb
mov
jmp
aas
and
xchg
movsl
sbb
es
mov
out
xchg
mov
sub
mov
aad
add
pop
add
iret
sbb
push
fneni(8087
mov
in
xor
dec
orb
jb
mov
outsl
insb
mov
push
lock
pop
fstpt
outsl
lahf
cwtl
sub
mov
je
repnz
pop
mov
push
dec
nop
stos
stc
xchg
loope
cmc
mov
or
cmp
pop
fidivrs
test
push
sub
mov
push
test
clc
mov
lahf
sahf
stc
movsb
mov
add
unpckhps
sbb
pop
repnz
cmpsl
push
cwtl
fcoms
dec
and
popf
aaa
clc
test
lock
sub
xor
pop
lds
mov
clc
mull
das
jno
or
sub
mov
aaa
mov
cmp
push
in
fbld
adc
pop
jns
cli
push
push
fs
mov
lods
rcl
faddl
outsl
mov
push
inc
mov
inc
scas
sbb
jne
mov
outsb
daa
ss
push
add
fstpl
es
mov
mov
sbb
push
xor
aam
xor
leave
lea
mov
cmc
cs
int3
test
mov
sbb
test
out
inc
cmpsl
add
clc
shr
dec
sub
pop
popa
and
imul
cmp
mov
ljmp
imul
add
mov
adc
lret
and
pop
xchg
fistpll
jmp
and
mov
inc
mov
inc
add
mov
movsb
adc
pop
sub
xchg
inc
cs
or
mov
scas
ljmp
inc
or
mov
jmp
and
mov
dec
fcoms
inc
movsl
xlat
int3
adc
mov
inc
rcrl
cmc
adc
ljmp
inc
testb
ds
push
leave
push
mov
gs
ret
jecxz
aas
pop
add
push
mov
pop
rcr
xchg
xchg
out
rclb
out
push
negl
or
dec
xchg
in
jnp
repz
push
mov
out
mov
cmpsl
mov
aaa
adc
add
xor
mov
test
mov
cmp
xor
insb
fcoml
fwait
fwait
jmp
dec
jo
lods
das
scas
xor
cmp
push
lcall
cmc
ret
adc
sti
xchg
gs
aaa
movsb
cmp
mov
call
xlat
ror
leave
sbb
call
mov
mov
mov
out
mov
inc
cld
fistl
mov
xlat
ja
sbb
aas
popa
jbe
ja
push
or
adc
pusha
pop
jle
add
push
shll
shr
jae
hlt
push
cmpsl
xor
cmp
jbe
pop
xor
fidivl
jmp
nop
mov
xchg
cmc
add
and
mov
cs
pop
push
out
sbb
arpl
mov
int3
and
sub
push
je
imul
in
sahf
add
sbb
inc
adc
jno
mov
push
or
pop
jecxz
jecxz
inc
into
cld
fdivs
xchg
mov
adc
in
lahf
pop
shlb
stos
cld
pop
stos
pop
jno
mov
sti
arpl
or
dec
lret
add
shlb
stos
rcrl
nop
lret
jecxz
lock
mov
mov
mov
lea
jge
xlat
fcompl
sub
cmp
adc
or
jns
ljmp
push
scas
outsb
inc
pushf
xor
aad
das
packssdw
cld
lods
dec
mov
xchg
mov
mov
ret
lods
mov
mov
mov
xchg
scas
xchg
xchg
scas
lea
int3
or
push
push
mov
push
loop
and
xchg
xchg
pop
xchg
cmp
push
orb
imul
lock
nop
ret
push
push
imul
mov
cmp
out
push
add
cmc
or
outsb
mov
adc
shr
arpl
xchg
mov
xchg
shll
rorb
push
dec
rorb
negl
ljmp
gs
cmp
pop
mov
cmp
fsubs
insb
jns
adc
mov
seta
or
add
cmp
subl
hlt
and
jl
adc
jb
sti
sahf
in
scas
data16
lds
jecxz
xor
mov
call
add
fimuls
arpl
scas
mov
fs
ljmp
push
es
mov
and
pop
dec
out
push
rcr
dec
fdivs
dec
sub
or
ret
or
lods
in
test
aas
xor
jge
andl
adc
inc
sub
xchg
sahf
shr
sbb
push
xchg
xor
and
fsubp
sbb
dec
fucom
mov
jno
scas
std
inc
mov
and
mov
dec
pop
cmp
cli
test
jmp
xor
jecxz,pt
jae
push
add
test
jb
sahf
arpl
in
call
xor
sub
jle
fildl
insb
dec
add
rcl
sarl
add
cmp
sbb
lds
pushf
ja
int
movsl
shrb
jne
es
sti
movsb
dec
aad
inc
inc
jae
sbbb
pop
push
bound
inc
jmp
jg
inc
adc
cmp
cli
xchg
insl
sub
or
mov
aaa
data16
fs
jp
int
sbb
enter
fwait
sahf
je
cmp
shl
cwtl
dec
add
pop
stos
inc
int3
shll
aam
and
stos
enter
inc
data16
sbb
adc
bound
push
pop
xchg
leave
pop
xor
outsb
inc
test
loope
xchg
jno
das
outsb
mov
shll
pop
imul
iret
push
add
jns
jp
ss
inc
sbbb
ja
lahf
fnstcw
sarb
in
shlb
mov
imul
cmpsb
icebp
cmp
mov
les
fistpll
mov
dec
addr16
ss
mov
cmp
sbb
xchg
xorl
adc
sbb
pop
and
fwait
mov
jae
dec
add
sbb
js
dec
inc
and
or
dec
gs
out
arpl
pop
pop
stos
cmpsl
mov
outsb
fsubp
mov
js
hlt
lods
imul
adc
call
add
mov
outsb
sub
ds
addr16
jb
adc
mov
xor
popa
sbbl
bound
out
lods
push
cmp
pop
js
out
push
in
add
lret
mov
outsb
mov
repz
imul
adc
xchg
push
mov
pop
sub
jmp
aad
mov
jnp
push
cmp
sahf
lret
xor
test
lahf
rcll
jo
pop
movb
ret
les
sbb
jne
sbbb
pop
adc
pop
rep
imul
pop
icebp
fisttps
cmp
inc
cmpsl
dec
mov
add
sbb
mov
mull
jb
lods
movsb
cli
jno
mov
push
push
jl
leave
rol
and
sub
xchg
sbb
lock
pop
pop
mov
push
int
push
push
adc
cmp
call
mov
xor
fmulp
xchg
jge
push
mov
std
push
pop
stos
fstpt
mov
xchg
lret
mov
lahf
in
jmp
dec
pushf
cmp
nop
jns
iret
paddsw
subl
or
and
pop
pushf
enter
mov
mov
movsl
rcll
lods
stos
aaa
pop
lods
sub
adcl
aas
push
cmp
inc
mov
sbb
sbb
mov
mov
insl
dec
js
inc
repnz
jmp
scas
jp
mov
out
cmp
ret
add
icebp
push
pop
ja
mov
incb
ss
daa
lock
aad
int3
adc
fdivs
cld
mov
cs
pusha
lahf
repz
add
xchg
jbe
lret
or
dec
rolb
and
cmp
lcall
shll
jmp
dec
aam
lcall
xor
in
mov
out
jmp
mov
mov
ja
fisubrl
pop
jb
in
mov
dec
pop
test
fisttpll
insl
shl
mov
ja
push
xchg
mov
mov
mov
sbb
dec
mov
mov
scas
mov
jmp
enter
jp
in
pop
clc
push
imulb
xchg
cmpsb
in
push
jg
in
jl
mov
mov
jbe
arpl
push
xchg
mov
adc
repnz
dec
xchg
sbb
cld
icebp
cli
jp
in
daa
dec
mov
inc
aas
push
test
lcall
mov
adc
push
stc
andb
mov
stc
dec
xchg
sbb
mul
outsb
loopne
push
pop
jb
mov
aad
jmp
repz
test
mov
mov
xor
cmpsb
das
push
cli
and
sbb
lret
xor
cli
lods
jnp
xchg
lds
enter
out
fs
les
mov
pop
enter
cmp
push
adc
cmp
inc
int3
mov
lret
mov
push
les
dec
and
mull
push
repz
pop
popf
stos
push
test
mov
xchg
es
push
pop
adc
jg
xchg
loopw
pop
je
int
lret
stos
call
loopnew
hlt
cmp
fcompl
jns
bts
cmp
sbb
xchg
in
and
stos
and
sub
mov
push
negb
sbb
jae
ss
std
lock
adc
insb
xchg
leave
xlat
xlat
xchg
mov
jge
in
sub
test
stos
popa
mov
cli
and
push
push
jecxz
jg
out
ret
mov
inc
xor
xorps
pop
fimull
out
loope
cmp
idiv
filds
sub
iret
ja
mov
out
fistps
repnz
insb
andl
clc
in
stc
xchg
enter
push
movsl
sbb
sbb
ja
fwait
test
or
dec
stos
add
int3
clc
and
repz
leave
sbb
jp
dec
mov
mov
mov
ss
sbb
lods
mov
cmpsl
daa
fs
pop
outsb
xchg
pusha
stos
push
xor
imul
shll
mov
mov
push
jns
daa
pop
jbe
and
shll
shlb
test
lret
cs
mov
rorl
sub
xlat
mov
pusha
ljmp
fiaddl
shll
jmp
push
pop
sub
adc
xchg
jmp
mov
xor
and
pushf
add
sbb
fists
inc
repz
mov
out
dec
mov
xor
aad
pop
jecxz
cld
sbb
mov
jge
dec
sbb
aad
adc
cltd
dec
rorb
dec
adc
push
jle
scas
popa
cltd
nop
addr16
in
add
lods
cmc
fld
add
subl
add
lret
xchg
fisubs
xor
ljmp
cmpsb
fldl
cld
push
out
in
add
mov
adc
or
mov
push
pop
sub
jo
pop
xor
mov
cltd
lods
add
push
mov
std
jl
inc
pop
push
xchg
mov
xor
mov
inc
mov
mov
int3
or
push
outsb
and
out
ret
adc
and
in
std
enter
dec
inc
lods
adc
cld
inc
mov
leave
push
jne
hlt
cmp
sbb
push
lods
or
mov
dec
enter
or
mov
dec
xor
dec
pop
fidivs
pop
sbb
pop
hlt
xchg
imul
mov
icebp
inc
dec
mov
popa
xor
ss
cs
loopne
sti
inc
clc
sub
dec
inc
aam
fists
sub
neg
shr
mov
cmpsb
inc
lds
cmp
cmp
nop
mov
mov
push
or
mov
mov
out
mov
inc
and
fnstcw
mov
stos
lock
push
push
sbb
cli
rcr
int3
lods
lret
xchg
cmpl
sub
popa
addr16
ret
add
pop
popa
xor
mov
in
and
mov
inc
pop
nop
es
push
jno
mov
pushf
or
cmc
imul
adc
div
jae
iret
push
or
sub
es
or
push
mov
push
cld
inc
addr16
sbb
inc
sub
dec
push
inc
sbb
cmp
inc
popa
pop
and
xor
in
in
pop
shrl
mov
pop
jg
jmp
fsubl
aaa
outsb
jmp
cld
sub
mov
je
mov
std
mov
jle
adc
pop
mov
xor
xchg
sub
mov
and
int3
xor
sub
xchg
je
arpl
fsubs
pushf
aam
xchg
mov
insl
jns
cmp
mov
pop
mov
xlat
xchg
loopne
push
push
aaa
sbb
insl
cmp
ficoms
xchg
lea
stos
pop
scas
inc
cmp
imul
es
rcrb
mov
out
dec
mov
xor
test
cmp
mov
lods
dec
rcrl
add
into
cltd
mov
into
mov
mov
iret
xchg
and
stos
iret
aas
mov
cmp
aaa
sub
inc
xchg
rclb
scas
jne
int3
test
cmp
pop
aaa
loope
fmuls
mov
js
push
mov
pusha
leave
into
std
jne
inc
int3
ljmp
std
cmp
rolb
out
aad
jb
repz
pushf
jmp
insl
mov
xchg
lret
and
inc
movsl
stos
mov
repz
out
mov
and
and
aad
scas
aaa
loopne
cmp
push
push
cmp
add
sahf
ret
int
mov
cmpsb
inc
mov
popa
push
xorl
mov
push
cld
imul
xor
test
jmp
sbb
adc
loopne
call
mov
push
mov
stc
rol
lods
test
push
js
imul
mov
sbbb
xchg
into
dec
mov
xchg
stc
stos
dec
pop
cmp
dec
stos
lods
in
shrl
xchg
mov
ret
dec
hlt
mov
cli
or
adc
pop
adc
imul
addl
mov
out
cmp
mov
loope
cmp
jbe
push
pop
sahf
mulb
stos
test
in
push
inc
shlb
rcl
cld
mov
mov
int
out
je
imul
fwait
inc
pusha
aad
mov
arpl
push
addr16
adc
cltd
mov
stos
iret
or
fwait
testl
ljmp
adc
xchg
int
pop
je
in
insl
adc
insl
mov
mov
pop
pop
outsl
fs
or
pop
ret
aam
mov
mov
jns
sub
add
xchg
bound
adc
iret
jo
orl
rorl
push
xchg
xor
pushf
pop
jnp
stc
push
insb
hlt
scas
xor
ja
pop
inc
out
inc
cmp
mov
js
sbb
dec
jb
inc
scas
loopne
mov
out
xchg
mov
cltd
aas
jnp
repz
jge
and
sbb
ret
inc
aaa
mov
mov
mov
add
jmp
test
or
dec
out
push
sub
sahf
in
sbbl
sbb
xchg
jae
or
push
inc
cmp
sbb
xor
test
fsubl
xor
ss
inc
fstps
iret
mov
cmc
cmp
cmp
js
imul
pop
pandn
mov
fsubs
cmp
sbb
push
in
mov
dec
mov
repz
push
mov
lcall
loope
and
inc
sbbb
and
sub
fmuls
mov
sbb
js
test
cmp
mov
push
icebp
sbb
inc
lods
dec
adc
ss
sub
jmp
inc
jmp
cs
and
sub
cmp
outsl
xchg
lock
inc
dec
or
mov
subl
mov
pop
dec
pop
mov
jg
jecxz
push
and
xchg
mov
repz
sub
loope
push
stos
stos
punpcklwd
adc
or
popf
and
daa
cmp
outsb
fwait
int
or
or
in
lahf
enter
push
aad
arpl
mov
xor
sbb
rol
inc
jmp
inc
mov
xchg
mov
movsb
imul
xchg
inc
jnp
cmp
mov
daa
xchg
rorb
jno
rorb
xor
add
test
in
xchg
mov
xchg
adc
cmp
ljmp
xchg
xchg
adc
out
or
insl
dec
adc
bound
loop
xchg
jmp
add
sub
and
fs
jns
idivb
jo
or
ret
pushf
adc
stos
lret
les
xchg
push
jnp
xor
lock
add
sti
adcb
sub
daa
jb
pop
jp
lret
jne
fimuls
xlat
mov
adc
sbb
lret
lds
je
sbb
dec
pop
push
pop
fcompl
stos
dec
bound
pop
xlat
mov
mov
dec
push
xor
cltd
aaa
cmp
es
jle
sub
xchg
cmp
cmp
push
scas
cmp
std
xor
sbb
lds
adc
push
hlt
scas
cmp
clc
test
mov
je
xlat
out
hlt
xor
clc
jns
fisubs
sar
mov
push
cmp
dec
fcompl
dec
jge
sub
sbb
popa
dec
mull
or
inc
push
mov
stc
scas
cli
push
pop
push
mov
jbe
add
ret
jmp
notl
jecxz
scas
or
push
xorl
sub
movsb
or
sbb
fistl
push
fstpt
clc
pop
mov
and
or
testb
inc
and
pop
notl
in
loope
sahf
ja
jecxz
sbb
ret
out
dec
mov
xchg
arpl
out
dec
jecxz
add
out
scas
jns
out
shrl
int3
adc
jb
mov
repz
fst
testl
xor
iret
push
loopne
shlb
cwtl
popa
sbbl
outsl
jmp
cs
cmpsb
add
push
insb
mov
std
xor
dec
xor
xor
bswap
scas
movsl
pop
xchg
fsubrs
jbe
cmpsl
add
xchg
push
jp
xchg
mov
insb
fwait
dec
repnz
xor
sbb
xchg
shrb
sti
call
lods
cmpsb
jno
pop
inc
sbbl
fwait
cmp
and
cmp
jae
into
jno
out
std
mov
xchg
cmp
adc
adc
out
inc
stos
push
outsb
xor
add
or
xor
fmul
push
and
jb
push
lods
xchg
inc
mov
sbb
test
icebp
or
jle
aad
icebp
inc
mov
pusha
xchg
push
push
jns
adc
dec
loopne
sti
push
mov
mov
mov
and
xchg
mov
xor
aaa
rorl
fmul
xchg
jae
pop
sbbl
fsts
mov
ret
shll
pop
fwait
outsb
cmp
and
inc
notb
sub
pushf
xchg
scas
test
cld
push
scas
out
push
pop
lock
lods
lahf
les
xchg
ret
push
and
lock
push
ret
mov
pushf
sbb
mov
repnz
iret
icebp
insb
dec
add
xchg
fcmovu
inc
inc
xlat
add
push
inc
addr16
insb
daa
loop
adc
test
dec
orl
scas
test
loope
mov
push
out
inc
mov
filds
xchg
movsl
push
jno
data16
jmp
js
push
dec
test
adc
mov
inc
pop
pushf
out
adc
mov
or
nop
out
inc
mov
je
cwtl
lea
loop
leave
cli
xchg
mov
out
sbb
push
lcall
enter
and
or
sar
lock
out
push
mov
bound
outsb
sbb
sub
jno
clc
cld
lods
sub
dec
shlb
sahf
mov
inc
mov
fistpll
xor
lods
adc
loope
fs
sarl
and
sbb
enter
add
imulb
aas
and
mov
lods
jge
movsl
jnp
and
mov
and
ds
test
iret
dec
jge
mov
xor
cld
mov
mov
idivl
mov
fisttpl
gs
inc
push
testb
es
imul
inc
icebp
sbb
push
jbe
test
mov
sbb
ret
pop
xor
fcompp
andl
sti
das
loopne
imul
mov
or
xchg
js
fstpt
xor
arpl
and
orb
cld
cwtl
cwtl
shll
mov
repnz
pop
icebp
lods
in
sbb
fisttpll
cmc
add
mov
xchg
popf
dec
push
add
cmp
bound
inc
sub
int3
insb
enter
xchg
cmpsl
sbb
sub
xor
xchg
dec
in
test
mov
cs
add
pop
pop
push
movsb
imul
lcall
dec
cmp
jns
incb
aas
imul
pop
imul
dec
or
xor
sbb
inc
and
or
and
jno
add
mov
xchg
xor
enter
scas
popf
dec
xor
sbb
jge
std
dec
fnstsw
push
aas
movsl
or
adc
lea
and
rclb
add
inc
fldt
cltd
in
movsb
and
addl
pusha
inc
test
test
inc
arpl
pop
pusha
es
push
test
add
inc
jo
jo
xor
scas
mov
cmc
ljmp
fst
push
jnp
inc
rol
call
rorl
dec
xlat
xor
jg
push
cs
out
faddl
adcl
daa
mov
jns
int
pusha
out
aam
or
in
jo
popf
jle
sub
rclb
imul
sahf
popa
pop
dec
aam
pop
jbe
push
sub
daa
test
dec
pop
pop
repz
dec
in
mov
and
pop
das
clc
shlb
std
in
or
jp
jge
les
jns
repnz
into
mov
jmp
and
dec
in
pop
sbb
fdiv
add
jle
mov
std
cltd
push
xchg
and
es
int
adc
iret
in
rorl
repz
push
aad
xchg
lret
inc
sub
sub
int3
cs
dec
adc
mov
fs
jo
movb
mov
test
xchg
adc
fmuls
cld
push
test
aaa
insl
xchg
cs
inc
xchg
fs
ja
or
push
stos
sub
repnz
dec
incl
mov
and
or
sbb
shr
loopne
mov
mov
adc
lea
icebp
jnp
pop
outsl
aas
faddp
mov
push
xchg
mov
pop
loop
lret
dec
xor
lret
and
adc
mov
sub
mov
loope
ret
jg
add
shll
std
sub
cmp
or
icebp
fucomi
lret
frstor
pop
ffree
daa
std
pop
fstpt
dec
sbb
and
push
pop
xor
adc
jge
fisttpll
xchg
call
push
addr16
mov
mov
lea
filds
hlt
mov
out
xchg
js
lahf
out
mov
aaa
test
mov
mov
and
jmp
dec
jae
std
fcoml
adc
out
jge
mov
adc
mov
mov
test
scas
jns
je
dec
jp
dec
call
lea
sbb
lea
lret
sarl
xor
nop
mov
cmpsb
xchg
inc
mov
inc
std
pop
adc
sahf
sbb
dec
xor
adc
add
dec
ret
addl
jmp
sub
and
mov
movsb
test
lcall
adc
push
std
imul
lods
out
cmp
test
push
pusha
jb
in
int
mov
aaa
xchg
and
xchg
xorb
nop
cmpsb
inc
pushf
add
fbld
add
pusha
ja
data16
inc
xor
and
pusha
fbstp
push
lds
add
test
lods
push
jae
sbb
mov
daa
pop
inc
add
pop
xchg
sub
push
mov
mov
pop
popf
ja
or
adc
cmp
lods
andl
sub
out
xor
inc
into
cmpsb
loope
repnz
cmc
mov
out
add
xchg
inc
enter
outsb
fcmovnbe
xchg
cs
pop
or
jne
dec
mov
xchg
daa
mov
mov
mov
lcall
arpl
push
int3
jge
mov
mov
aas
stos
mov
popa
scas
shrb
jge
lds
je
mov
xor
lea
jnp
dec
in
or
pop
iret
sub
dec
and
ret
add
leave
inc
lcall
dec
xor
inc
inc
imull
adc
pop
mov
jae
and
xchg
push
out
into
dec
push
sbb
cmp
fsubl
popa
sub
hlt
xchg
jp
xor
add
fidivrl
and
xlat
lcall
sbb
test
xchg
adc
mov
mov
sti
sbb
out
push
push
testb
push
clc
scas
fldcw
jecxz
cmc
jle
mov
pushf
mov
fcoml
push
sub
mov
out
nop
es
and
cmpxchg
cld
inc
add
push
cmp
mov
ljmp
packsswb
jl
scas
xchg
pop
mov
mov
cmp
add
add
mov
dec
or
call
outsb
jmp
in
add
mov
sub
inc
and
add
xlat
cmp
aaa
xchg
sbb
sbb
in
shlb
push
pop
push
mov
push
lret
push
xchg
out
inc
sahf
shrb
xchg
jge
push
lret
pop
fistpll
subl
int3
push
push
imul
mov
xchg
mov
out
into
pushf
sub
int3
or
jns
push
clc
arpl
or
out
add
cmp
inc
mov
sub
sbbl
jmp
jle
push
cmpsb
ljmp
bound
pop
mov
cmpsb
ret
or
xchg
fdivs
mov
loopne
lret
scas
or
add
stos
jo
enter
test
jns
mov
test
les
scas
xor
scas
mov
push
dec
push
xlat
mov
fistpl
push
mov
clc
xchg
jg
jbe
dec
lods
jl
addr16
lea
jecxz
sbbb
mov
jnp
mov
adcl
pop
int3
shll
scas
bnd
mov
sbb
es
mov
bound
imul
ds
test
mov
cmp
out
xchg
rcll
mov
mov
cld
add
cld
jg
data16
imulb
scas
inc
xchg
gs
clc
aad
lods
or
mov
dec
jge
sbb
pop
dec
xchg
cmp
ds
cmp
out
inc
repz
sbb
cmp
cmp
sarb
andb
mov
aas
sub
inc
lock
mov
xor
and
xchg
imul
cmpsl
cwtl
sub
add
push
mov
imul
xor
mov
dec
movsb
dec
pop
sub
test
pop
xchg
es
sahf
adc
jg
mov
aas
addr16
imul
dec
js
adc
adc
icebp
and
push
sub
cvtps2pd
popa
adc
mov
pop
pushf
ja
inc
mov
mov
pop
mov
sbb
popf
sub
mov
mov
js
cmp
sbb
das
push
xchg
fnsave
or
mov
or
pavgb
dec
movsb
sbb
jg
adc
out
icebp
cmpsl
dec
idivl
sub
addr16
adc
sbb
std
hlt
out
fs
cmp
jl
loope
inc
filds
outsl
in
xchg
pop
cmpl
in
mov
or
aad
in
popf
insb
cmpsl
insl
dec
jg
stos
sub
inc
test
pop
jns
cmp
fcomps
imul
in
pop
lock
or
adc
push
sbb
push
fidivl
inc
insl
popf
test
lods
mov
imul
adc
popa
lods
xchg
or
int3
nop
lods
inc
mulb
sbb
jmp
arpl
pop
jae
jnp
add
pop
popf
cmp
and
add
call
mov
xchg
and
mov
jo
pop
push
or
add
jle
jmp
mov
adc
pusha
and
jp
sbb
lock
mov
dec
stos
and
dec
push
dec
adc
jae
es
test
fidivl
fisubrs
loopne
push
jbe
pop
and
mov
inc
bound
aad
inc
pop
xchg
jb
movsb
add
pushf
adc
pop
test
sub
mov
es
iret
repz
fwait
lea
xchg
shr
aam
and
data16
aaa
lods
and
out
fstl
xchg
ret
hlt
loope
push
pusha
sbb
sub
mov
pop
jle
mov
mov
mov
fiaddl
pop
jmp
movsl
loopne
fnstcw
xlat
jnp
add
push
sbb
push
mov
fdivl
pop
sbb
and
or
cmp
sub
gs
fs
mov
ss
enter
push
dec
unpcklps
push
jge
ljmp
pop
incb
mov
mov
pop
lods
sarb
enter
ficomps
fs
dec
xor
fldenv
sbb
jbe
fmul
out
adc
dec
pop
in
andl
aas
push
rcrb
adc
add
cmp
fcoml
jg
pusha
sbb
jg
imul
lds
idivb
fcmovb
fmul
jno
xchg
mov
cmp
scas
sub
xchg
cmp
cld
mov
push
pop
mov
fyl2x
push
inc
or
jnp
mov
cltd
xchg
loop
test
and
stos
lods
inc
arpl
aaa
xchg
push
push
xor
xchg
iret
in
inc
call
and
jae
pusha
hlt
push
xchg
pop
mov
setge
jo
inc
jo
xchg
mov
ror
sbb
arpl
jp
push
and
push
push
mov
cmpsb
int3
cmp
idiv
arpl
cwtl
push
outsb
in
mov
in
mov
xor
in
sub
pusha
std
outsb
dec
out
or
dec
rcrl
inc
ss
fstpt
mov
jp
jno
mov
sub
push
pop
xchg
add
sub
les
xchg
mov
mov
scas
ds
push
imulb
mov
jae
and
cs
movb
xchg
rol
test
add
bound
fnstenv
stc
lret
xor
jbe
xor
pop
jg
pop
stos
mov
inc
pop
in
movsb
loopne
mov
xchg
sbb
pop
and
fcoml
mov
jle
mov
jle
mov
and
dec
pop
and
mov
lds
out
lds
xchg
xor
cmpsl
imul
dec
pop
mov
cltd
xabort
ret
leave
push
or
jnp
pop
out
out
iret
pusha
xchg
push
call
mov
pop
je
lret
and
dec
lret
fucompp
jge
lds
addb
dec
in
dec
jno
out
rolb
sbb
dec
sub
lcall
call
cmc
insl
sub
mov
sahf
dec
jo
jl
pop
inc
xor
cmc
lea
and
xchg
rcr
sub
hlt
push
stc
cmp
pop
xor
test
adc
mov
aad
jae
in
addr16
ret
mov
aas
fwait
inc
mov
imull
repnz
out
xchg
aas
pushf
jle
jbe
push
mov
dec
push
dec
ficompl
pop
adc
dec
aam
xchg
fildl
add
testl
imul
sahf
addr16
jo
push
fcmovbe
push
push
mov
inc
add
stos
push
fisubl
pop
add
xlat
jp
shlb
not
sarl
cmp
xchg
cld
jecxz
lret
lahf
dec
mov
orb
fstpl
icebp
call
xchg
or
icebp
clc
pop
jge
push
in
hlt
cmp
mov
pop
ret
xchg
lds
push
fs
push
aaa
sbb
sarb
sahf
push
loop
xor
cmp
jb
leave
jmp
repnz
mov
push
lods
lret
pushf
mov
js
ds
adc
lods
pusha
pop
jbe
adc
rclb
mov
mov
daa
jge
out
inc
cmp
cmp
push
add
ud0
int
jae
inc
xchg
gs
loop
mov
int3
lds
xor
sahf
ss
or
xor
xlat
xchg
cmp
in
xchg
hlt
or
pop
dec
sti
jmp
push
dec
xchg
dec
push
xor
cmp
enter
adc
dec
rcl
sub
and
pop
iret
aaa
sub
pop
mov
sbb
jns
scas
sub
aad
pop
xchg
mov
pop
icebp
push
jns
xor
repz
test
mov
dec
xchg
stos
cmpsb
dec
data16
out
xlat
hlt
pushf
fidivrl
and
cmc
std
mov
xchg
pushf
adc
and
dec
sbb
mov
fwait
shll
mov
leave
mov
call
inc
pop
sidtl
push
pop
lock
xchg
jb
scas
pop
ficomps
sub
add
andb
mov
aam
andb
ret
cld
fsubs
in
sub
add
pop
lock
call
int
xchg
mov
pushl
repz
cs
lock
test
mov
faddl
or
dec
push
adc
add
lahf
insl
fisubrs
adcb
ds
ds
xchg
decb
adc
icebp
mov
call
xchg
and
lcall
cmp
enter
clc
lock
mov
jnp
cmp
push
aad
or
jns
mov
sahf
and
cmpsl
jp
mov
push
cltd
pop
sahf
jmp
push
sub
enter
dec
scas
cmp
mov
roll
lock
mov
iret
pop
lea
jbe
insb
push
jne
repz
movsb
push
enter
sbb
sbb
das
add
dec
push
pushf
jns
push
dec
xorb
xchg
xor
add
ljmp
mov
das
add
adc
xchg
jb
xor
cmp
adc
jno
nop
cli
or
je
popa
jmp
cli
xor
dec
mov
jb
fwait
cmp
inc
lret
addr16
gs
in
pop
icebp
mov
mov
scas
dec
jle
push
sbb
aad
mov
rcrl
fiadds
jb
sub
mov
jo
les
addr16
jp
int3
testl
nop
dec
add
pusha
gs
cmp
xchg
mov
in
xor
test
pop
cmp
inc
mov
inc
push
add
xor
mov
mov
cmpsl
insl
inc
or
inc
mov
out
push
cmpsl
test
dec
fs
mov
roll
clc
enter
cmpsb
pusha
rcl
sbb
incl
push
gs
pop
push
fwait
scas
ljmp
inc
xchg
jl
imul
adc
or
xor
fdivl
mov
aaa
popf
sti
sbb
mov
inc
popf
mov
sub
pop
fiadds
lea
mov
xor
jmp
pop
pop
jl
jnp
pop
jbe
mov
fildll
and
mov
lcall
jmp
movsb
mov
jmp
push
push
cmpsb
cmp
sub
ss
js
andl
push
push
lahf
xchg
or
fistpl
pop
out
mov
aad
sub
bound
and
outsl
fs
int3
pop
xor
test
or
xchg
iret
sbb
jmp
jp
mov
xchg
mov
leave
iret
pusha
xchg
cmpb
imul
pop
pop
test
or
mov
mov
into
pop
inc
fdivl
cwtl
ret
and
rep
pop
js
bswap
mov
lds
in
jg
fisttpll
gs
sub
mov
jo
inc
and
cmp
jecxz
mov
inc
cmpsb
dec
jnp
sbb
push
out
xchg
out
std
pop
mov
jg
mov
push
movups
sarb
scas
pop
sbb
insl
hlt
test
inc
mov
inc
lds
sbb
dec
mov
dec
and
adc
es
scas
inc
ficompl
inc
lret
jge
out
and
lahf
mov
mov
sub
test
xchg
jb
pusha
ds
mov
inc
aad
jmp
aaa
and
adc
jnp
mov
roll
cmpl
inc
add
lock
into
add
stos
xchg
cmp
je
lcall
les
icebp
pop
mov
mov
int3
dec
aaa
jp
add
in
imulb
repnz
imul
lahf
pop
insl
bnd
inc
outsl
pop
cli
ja
nop
mov
xor
mov
mov
cmp
sub
rcrl
out
xor
ja
push
imul
add
fld
xor
pmullw
insl
fdivrs
mov
dec
fimull
mov
push
bound
ficomps
xchg
xor
xor
xor
iret
pushf
mov
fistpl
jecxz
lea
cld
jg
dec
push
inc
push
out
dec
jle
and
push
std
pop
push
mov
add
cmpsl
pop
mov
adc
and
loope
test
adc
dec
sbb
sahf
ficoml
test
ds
xchg
and
mov
xchg
lcall
and
imul
mov
nop
push
out
popa
or
mov
mov
xor
stos
xchg
pop
xchg
and
jns
inc
das
iret
xor
dec
stos
or
rcrb
push
int
mov
add
in
or
cmpsl
fldt
stc
add
sub
push
jno
mov
push
pop
lods
cmp
sahf
pop
lods
outsb
push
inc
lcall
pop
nop
dec
scas
cmp
