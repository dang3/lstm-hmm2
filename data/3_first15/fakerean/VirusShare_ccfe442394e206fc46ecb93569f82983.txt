sbb
add
mov
dec
test
les
dec
in
movsl
lcall
jecxz
out
cld
lods
int
sub
lahf
mov
int
mov
and
sbb
scas
inc
inc
sahf
addl
pop
jp
mov
stos
es
push
shr
xor
mov
mov
mov
sbb
mov
sub
or
or
hlt
jnp
jae
mov
jg
xchg
xlat
jl
mov
mov
cmp
lock
data16
fistpl
insb
xchg
xchg
std
ljmp
pop
pop
ds
jnp
xchg
dec
imul
mov
sbb
fwait
sub
repz
das
cmp
jbe
adc
nop
pushf
cmp
jns
imul
cltd
test
lds
or
shll
push
dec
adc
or
pusha
call
xchg
jo
push
fwait
ja
lahf
icebp
stc
mov
stc
imul
mov
pop
xor
push
out
scas
or
sbb
add
data16
ret
popf
outsb
lret
out
inc
sub
sbb
lods
pop
push
les
in
scas
ret
inc
loopne
push
fisubs
xor
xor
repz
inc
pop
pop
pop
test
rcl
movsl
push
lahf
xchg
imul
fwait
test
mov
sahf
xchg
cmpsb
mov
shr
adc
stc
pop
push
out
mov
rclb
test
cmp
popf
cltd
jmp
lds
clc
cs
pusha
sub
ret
nop
cld
out
es
inc
js
mov
mov
dec
stos
and
cltd
adc
sbb
aam
leave
push
dec
xlat
leave
insb
or
mov
push
ja
iret
pop
outsb
mov
dec
push
mov
aas
in
ja
lock
les
push
test
cmp
push
jno
mov
xchg
adc
mov
sub
jge
cmp
push
adc
cmp
jne
lret
mov
xor
xchg
loope
pop
sar
adc
push
push
cmp
sbb
aas
mov
jno
cmp
mov
call
mov
fs
mov
adc
add
cmp
rclb
cmpsb
pushf
sti
mov
clc
pusha
adc
add
popf
xor
cmp
das
pushf
inc
cmc
into
adc
adc
inc
sbb
mov
mov
fidivrl
or
insl
int
add
repnz
clc
adc
and
mov
fmul
jge
aas
and
xchg
push
pop
in
arpl
xor
popa
adc
stc
lods
scas
xchg
data16
in
pop
aas
sub
push
dec
mov
sahf
les
lea
cmpsb
adc
pop
xchg
inc
or
or
lods
dec
or
lods
sub
xchg
aas
pop
pop
mov
jp
int
lea
xchg
sbb
movsl
ret
fadds
ret
rcll
mov
jmp
std
in
mov
cmpsb
shl
scas
movsb
mulb
cmc
xchg
sahf
js
inc
out
inc
out
xchg
mov
cwtl
jno
jnp
jbe
hlt
ficompl
stos
adc
jb
enter
jns
xchg
pop
orb
shlb
add
hlt
push
mov
lcall
popf
call
jp
mov
jle
loop
add
in
icebp
jmp
sub
push
push
push
mov
dec
fisttpl
pushf
in
push
sub
cmp
std
mov
scas
mov
lret
ljmp
iret
mov
pusha
fimuls
sub
xchg
xchg
cmpsl
lock
das
es
mov
xchg
and
mov
test
loop
sbb
in
pusha
xor
cwtl
stos
mov
dec
pop
pop
mov
add
stos
jmp
popa
aad
push
fmull
call
inc
jge
sub
add
leave
ss
ss
xchg
sub
mov
mov
adc
sub
ljmp
sub
sbb
pop
outsl
xor
inc
inc
jge
in
pop
out
lcall
add
sub
fxch
xchg
dec
mov
ja
les
sbb
mov
pop
sar
jo
daa
xor
xor
cmp
push
icebp
xchg
into
ficompl
test
lods
jle
subb
hlt
fisubl
fisubrl
xlat
mov
insl
test
stc
mov
xor
jno
mov
shll
mov
inc
and
mov
inc
mov
stc
mov
loop
js
sbb
insl
test
push
aas
sahf
inc
xchg
inc
dec
jecxz
pop
int
and
inc
loop
mov
push
mov
fcomp
cwtl
pop
adc
out
mov
mov
dec
cltd
insl
push
call
test
lahf
xchg
or
movsb
inc
iret
mov
adc
add
push
je
scas
popa
and
dec
mov
push
int3
mov
iretw
and
pop
xlat
dec
jns
mov
xchg
xchg
push
in
stos
jb
dec
mov
out
scas
stos
sub
out
pop
mov
in
lock
jbe
xchg
push
xorb
jnp
cmovo
jmp
mov
cltd
mov
pop
dec
pop
mov
jg
scas
push
bound
imul
movsl
lock
test
por
lea
cmp
lea
mov
sbb
out
arpl
shrb
sarl
in
or
std
fsin
fucomp
setp
inc
pop
mov
sarb
arpl
adc
aaa
push
test
in
push
popa
ret
xor
mov
aam
into
sbb
arpl
push
cld
jp
fdivrp
mov
cmp
mov
fcmovnb
adc
nop
and
and
fcomps
repnz
or
out
adc
inc
outsl
test
mov
fiaddl
jae
int
dec
cld
jbe
aas
inc
aaa
push
stc
das
scas
aam
cmp
xchg
and
loopne
push
dec
mov
movsl
aaa
or
loop
nop
cli
pop
pop
push
and
lods
sbb
lds
mov
and
into
or
jecxz
sti
xor
or
movsl
nopl
pop
jmp
js
sbb
aad
test
push
pop
cmc
movsb
push
xchg
push
push
dec
sahf
fists
adc
icebp
pop
mov
xchg
cltd
adc
cwtl
movsb
sub
cmc
mov
or
push
xchg
bound
cmpl
lcall
lods
int3
mov
mov
mov
fbld
popl
mov
loopne
sti
fisubrl
sbb
pop
sti
jle
pop
stos
ret
gs
pop
daa
xchg
push
imul
add
mov
cltd
ror
jb
sbb
adc
or
mov
cmpsb
dec
scas
cwtl
das
mov
jnp
mov
jmp
cmp
out
adc
fsts
jo
imul
push
shll
sahf
sbbb
pusha
inc
inc
fiadds
pop
mov
xchg
fisttps
icebp
lds
dec
and
stc
in
ret
rep
mov
xor
enter
inc
out
jge
ja
mov
sub
gs
mov
adc
dec
imul
mov
pop
mov
jl
xor
adc
sub
xchg
add
aad
adc
shll
add
fistps
in
jmp
test
fs
std
in
jae
inc
stos
rclb
arpl
pop
mov
xchg
rorb
psubsb
rcll
xchg
cmp
fists
adc
add
aad
icebp
adc
jp
scas
repz
mov
mov
mov
xor
into
xchg
je
mov
lret
out
push
add
popf
jns
shr
popa
dec
shl
dec
fstp
adc
jne
gs
sbb
and
or
jno
dec
add
mov
or
repnz
ret
and
cltd
mov
fmull
adc
arpl
sbbb
dec
lea
mov
stc
call
test
cmp
test
out
add
add
das
dec
negl
xor
mov
loop
hlt
sub
rclb
mov
in
pop
dec
xor
enter
lods
mov
pop
inc
jae
iret
aaa
add
cwtl
enter
xorl
jmp
mov
sbb
mov
push
pop
cmp
je
mov
xchg
sahf
pushf
xlat
mov
outsb
sub
inc
fiaddl
repz
push
jle
mov
jnp
sarl
pop
mov
xchg
adc
push
sbb
jae
xchg
jp
in
xchg
testb
fbld
or
psrlq
stos
sbb
mov
dec
repnz
or
adc
pop
dec
sub
xlat
push
pop
dec
dec
mov
aam
shl
jecxz
notb
clc
mov
cwtl
cmp
ss
mov
jnp
ss
inc
shr
std
mov
push
sub
lret
fadd
repz
mov
out
repz
mov
mov
pop
ficompl
or
mov
push
mov
fsubrl
sbb
lret
sub
pop
sub
loope
pushf
test
fistl
cmp
mov
xorl
cmp
ds
add
sbb
out
pop
aad
rcll
cmp
or
stc
adc
adc
in
jne
mov
mov
lcall
pop
adc
shll
movsl
mov
es
mov
cmp
les
cmp
insl
inc
push
jb
add
pop
aad
xchg
xchg
jmp
xor
fwait
push
arpl
add
mov
mov
aam
mov
int3
push
xchg
sbb
js
cmc
dec
xor
and
out
scas
fdivrs
into
adc
adc
out
add
and
mov
subl
xor
repz
lds
stos
ds
jne
add
sbb
pop
cmpsb
out
and
js
pop
push
cld
out
nop
inc
pop
fbstp
jno
cmp
push
add
sbb
pop
call
ds
popa
repnz
outsb
dec
lock
lret
pushf
lods
mov
mov
lea
int
mov
jne
pushf
scas
mov
iret
stos
xor
shll
inc
pop
mov
aas
and
addb
cmpsb
shrb
sub
dec
mov
sub
js
pop
cmp
mov
jno
jne
xor
sbb
shrb
cld
shlb
xchg
push
sbb
xorl
push
pop
pop
cld
pop
xchg
repz
jg
das
pop
mov
push
adc
push
ljmp
ljmp
pop
jmp
jne
mov
popf
mov
out
xor
jmp
sub
fldcw
cmp
clc
mov
pushf
sete
sub
ljmp
outsb
addr16
mov
xor
cltd
arpl
cs
test
leave
sub
stos
or
int
xor
sbb
dec
add
cmc
cmp
dec
dec
mov
aaa
jb
incl
sub
scas
addr16
or
push
sbb
lock
cltd
xor
pop
aas
leave
mov
cmp
sbb
fstps
sbb
add
bound
fs
mov
and
dec
popa
lahf
lea
jecxz
inc
fs
add
xchg
clc
cmp
adc
cmp
movsb
arpl
stos
lods
aaa
data16
in
mov
pop
mov
sbb
jb
mov
adc
gs
cli
jbe
rclb
in
cmp
lock
push
and
ret
js
jmp
rcll
rolb
mov
fcoml
add
ljmp
jo
sti
mov
lcall
test
mov
fiadds
and
dec
movsl
mov
jo
aas
lret
insb
cmpsb
sub
push
lahf
ja
push
iret
lahf
int
dec
add
divl
shr
scas
cmp
scas
clc
sub
cmpsb
hlt
or
iret
xor
iret
out
mov
sbb
mov
sbbb
out
lret
dec
push
es
mov
rcr
or
sarb
mov
jecxz
test
mov
dec
adc
mov
aam
jno
mov
sbb
ja
xchg
inc
cwtl
scas
ljmp
jns
stc
call
pushf
lahf
sbb
hlt
xor
mov
les
pop
jl
pusha
mov
out
add
mov
xor
xchg
in
dec
mov
int3
xchg
jae
jb
mov
sbb
mov
mov
test
push
pop
loop
jae
popa
sbb
fldenv
sbb
mov
ret
push
icebp
pop
lods
jns
stos
stos
push
adc
int3
fmul
pop
and
mov
mov
sbb
std
arpl
aas
cmp
lret
loop
addr16
inc
jno
xchg
inc
aaa
dec
jp
push
cs
xchg
int3
loope
andl
loopne
daa
movsl
jb
adc
fcoms
sbbl
dec
outsb
outsl
fists
mov
xchg
in
call
pushf
inc
pcmpgtb
je
cld
out
call
stc
adc
mov
out
xchg
fwait
xchg
xchg
pop
or
sbb
dec
je
dec
sub
loop
or
or
cld
shr
mov
dec
test
shll
loope
filds
out
movsb
mov
mov
ja
and
mov
in
push
mov
jnp
pop
mov
sub
leave
adc
shrl
rcr
push
rcl
int
xchg
outsb
add
and
movsb
jecxz
imul
je
rorl
fwait
mov
frstor
pop
sub
sbb
cmpsl
push
mov
cmp
out
push
ss
push
ret
sbb
jg
xor
and
int
add
fistpll
pop
test
or
sbb
dec
push
mov
test
mov
fs
ljmp
mov
rcrb
mov
out
pop
mov
mov
dec
ret
fimull
jl
push
mov
add
mov
imul
jne
inc
ss
cmp
cmpsb
inc
pop
ds
push
mov
inc
sbb
xor
mov
lret
sub
and
add
pop
mov
movb
ja
xchg
inc
mov
mov
ss
fsubr
in
loopne
mov
fisubrs
xchg
and
repz
jg
or
adc
in
dec
fsubrl
pop
dec
xchg
mov
imul
cmp
fsts
cld
push
mov
loopne
les
pop
jecxz
mov
jae
inc
dec
in
mov
leave
xchg
mov
cwtl
cwtl
shrb
dec
test
inc
and
push
aas
movl
fidivl
jo
mov
cmpsb
std
push
mov
jbe
dec
jecxz
sbb
jecxz
ret
or
repnz
mov
out
push
xchg
loop
add
xchg
es
fistl
test
int3
sbb
sbb
imul
cmpl
in
cld
adcl
in
leave
data16
repz
repz
popf
ficoms
jmp
imul
or
cmc
dec
sub
xor
sahf
or
leave
push
outsb
pop
mov
jg
dec
cli
in
pop
xchg
cmovl
pushf
xchg
lret
std
or
mov
sbb
inc
dec
mov
stos
cmp
sbb
jp
dec
sti
std
jle
sub
out
adc
inc
xor
fs
inc
outsl
xchg
lcall
jnp
sub
sbb
rorb
pop
pop
jnp
mov
or
nop
cli
out
cld
fisubl
xchg
inc
xor
lret
lea
mov
outsl
xchg
mov
enter
xchg
and
pop
xchg
pushf
and
mov
and
shll
inc
popa
xchg
fs
jno
idivb
mov
aaa
xor
cltd
loope
jg
cmp
loope
fisubrl
leave
add
jns
out
dec
fidivrl
cwtl
ror
inc
ret
in
and
jnp
and
cmp
int3
mov
rolb
inc
add
lods
jbe
add
push
mov
imul
ds
sub
mov
xor
aad
js
pop
dec
jb
vpaddsw
xchg
dec
addr16
test
sbb
adc
jno
loopne
adc
iret
mov
into
jp
jb
testl
loopne
fdivrl
sub
inc
ds
enter
clc
in
cwtl
push
cmpsl
add
sub
push
in
roll
nop
inc
push
enter
ficompl
fnsave
or
fwait
push
jl
lods
fimuls
test
pop
rorl
in
cmp
lea
in
jl
mov
clc
mov
sub
into
push
in
xchg
mov
mov
icebp
inc
pop
and
pop
aaa
cmp
in
enter
fldl
pop
jo
test
lock
mov
inc
in
xor
fldln2
lcall
mov
rcll
sbb
idivl
inc
jno
imul
movsb
mov
xchg
pusha
jb,pn
movsb
fdivp
push
inc
fidivl
out
xorl
aad
das
sbb
das
mov
mov
pop
cmp
jbe
push
cmpl
idivb
inc
fsubrl
mov
xchg
shl
aam
mov
icebp
jecxz
lea
mov
and
mov
or
xchg
or
out
xchg
in
sti
lods
out
das
xchg
les
mov
push
daa
sarl
adc
xlat
into
cmp
insl
sbb
xchg
jbe
out
repz
sbb
lret
cmp
mov
xchg
dec
pop
inc
push
jno
adc
nop
sbb
scas
ja
aad
mov
test
mov
xchg
jae
sbb
or
lea
pop
icebp
pop
ljmp
outsb
mov
jne
fsubrl
lods
out
lret
sub
cltd
mov
call
mov
jge
pushf
or
push
mov
sbb
and
push
fdiv
pop
jns
dec
sbb
das
mov
hlt
xchg
ret
wrmsr
cmp
jmp
addr16
mov
movsl
push
movsl
adc
sub
lret
pop
mov
je
test
std
cwtl
dec
mov
inc
sbb
add
out
test
add
out
and
push
pop
daa
das
std
scas
or
xchg
mov
fwait
aad
int
fistpll
lock
out
or
adc
nop
data16
adc
mov
out
sub
jae
loopne
insl
in
ljmp
jge
dec
xchg
jb
sbb
shlb
pop
and
add
or
pusha
sbb
mov
iret
imulb
lods
movb
inc
pop
mov
fcompl
sbb
xor
pop
loop
dec
clc
seto
mov
pop
ret
iret
push
jbe
xchg
pop
cmp
jge
push
popf
and
push
mov
push
in
cwtl
mov
sarl
push
push
xchg
cmp
or
dec
jg
fwait
push
insb
or
dec
xchg
faddl
mov
out
inc
sbb
scas
or
inc
mov
xchg
lcall
repnz
clc
jns
in
ret
mov
mov
shll
sub
push
into
mov
mov
xor
loope
in
dec
repnz
xchg
push
jmp
lea
mov
push
push
pop
lods
adc
inc
leave
mov
dec
adc
les
jne
fisttps
mov
and
insl
pop
pop
std
sbb
in
and
stc
int
das
dec
cwtl
into
and
add
cmp
or
inc
add
das
mov
scas
insb
jmp
out
pop
out
jp
iret
mov
jae
jns
psllq
xor
cmp
cmpsb
fiadds
fs
mov
stos
mov
cmpsb
out
xor
jo
push
pop
push
mov
xlat
out
lcall
sub
cwtl
mov
cmp
pusha
js
adc
lock
pop
pop
jno
push
push
mov
inc
inc
int3
dec
int3
cmp
mov
adc
sbb
mov
xor
stos
in
fcoms
fidivrl
push
or
outsl
jo
dec
lret
std
or
fs
xorl
mov
int
pusha
fwait
clc
inc
adc
cmpsl
arpl
loope
mov
das
subl
push
jge
pusha
mov
adc
rol
push
int
push
in
mov
ss
negl
lea
push
ficoms
fs
dec
std
fidivrl
or
xchg
incl
insb
and
push
imul
add
rcr
outsl
stos
dec
stos
loope
fwait
out
lcall
cs
cmp
mov
mov
movsl
sbb
and
and
push
mov
push
sbbl
les
jg
mov
jne,pt
ss
or
imul
cs
jecxz
cmp
movsl
push
xchg
bswap
mov
cmp
ja
xor
pop
scas
xchg
fucomip
hlt
push
imul
sub
xor
sbb
dec
adc
pop
mov
scas
lods
mov
mov
xchg
push
sbb
or
fcmovb
pop
push
loopne
and
xor
add
add
insl
andl
insb
repnz
pop
sbbb
call
add
aaa
clc
daa
xor
and
cmp
addl
ret
mulb
repnz
cmp
mov
jge
shrl
std
or
sbb
rorb
clc
xor
aaa
jnp
or
add
ret
fiadds
inc
mov
dec
xchg
insb
fcmove
jns
movsb
mov
mov
and
sbb
inc
rorb
mov
lods
js
fsubr
scas
mov
add
data16
cmc
leave
dec
loopne
inc
mov
jge
addb
in
loope
push
outsb
sub
cltd
jne
in
and
sbb
xor
push
mov
push
movsl
clc
scas
mov
ret
sbb
cli
sub
in
pop
pushf
adc
mov
cmp
mov
iret
pop
pop
mov
fsubs
cmp
andl
dec
fnstcw
inc
orb
int
nop
push
xchg
xlat
dec
stc
xor
sbb
xchg
dec
mov
sub
lahf
inc
inc
cmp
mov
inc
mov
js
pop
xor
jb
xchg
mov
stos
cmp
lret
ljmp
xor
pop
xor
aad
xchg
mov
enter
jns
stc
jmp
push
leave
mov
push
loop
jge
pop
aam
scas
ljmp
mov
scas
sub
bound
movsb
pop
cmp
pop
inc
inc
cli
push
mov
dec
sub
mov
test
movl
mov
cmp
push
xor
xor
push
hlt
jle
pop
push
fimuls
jb
push
lock
dec
dec
push
xor
mov
rsqrtps
ljmp
imulb
ja
fbstp
push
xchg
xchg
fs
subl
xchg
mov
jne
inc
xor
sub
jge
inc
aaa
xor
int3
cld
push
movsb
les
mov
aad
sub
out
aas
jae
mov
bound
movsl
sarb
adc
lcall
inc
je
lahf
fdivrs
sub
xor
mov
in
adc
pop
leave
add
pushf
les
push
fwait
test
jno
dec
xchg
in
sub
xor
dec
sub
xlat
lds
push
jne
pop
in
test
pop
sub
test
add
dec
and
mov
into
pop
adc
lock
popa
dec
scas
ja
je
push
xchg
je
jno
push
adcb
pop
loop
ret
movsb
mov
ljmp
add
jge
or
or
mov
pop
lret
pusha
aam
jnp
push
sub
icebp
cld
inc
lahf
in
ret
ror
pop
jle
push
or
out
mov
dec
shll
dec
test
bound
into
test
mov
push
xchg
mull
addb
in
pop
jg
popa
ds
jp
jb
cmp
pop
sbb
adc
mov
pop
xor
pop
mov
and
out
fs
fnsave
test
inc
or
mov
or
push
jle
imul
pop
jbe
add
xchg
jmp
sbb
lahf
test
or
jno
imul
xchg
adc
jp
jle
jl
negb
adc
call
stos
push
inc
xchg
rol
rcrl
mov
hlt
mov
pop
mov
add
jo
loope
and
in
xchg
pop
dec
xor
into
push
shl
inc
lret
xor
inc
cmc
or
sub
mov
add
int3
cmp
or
rorl
mov
fidivs
in
and
jns
push
fsubrs
push
add
add
push
dec
cmc
lods
lea
js
cld
in
jns
jl
pop
out
adcb
sbb
aad
mov
jb
int3
mov
cmp
fs
xor
cmp
push
bound
ja
fldcw
push
inc
fisubrl
xchg
dec
stos
int
pop
nop
daa
or
aam
lods
pusha
add
sbb
xchg
pop
jle
dec
fs
jne
adc
jecxz
sbb
out
bnd
inc
cmp
add
mov
cmp
ljmp
fsubrp
pop
repz
mov
bound
in
fwait
aad
pop
addr16
sub
dec
in
push
or
out
pop
dec
cmp
cmp
inc
xchg
or
data16
lcall
push
ljmp
xor
sub
cwtl
fcoms
fisubl
mov
imul
loope
lock
adc
insb
lods
pop
mov
imul
push
inc
int3
insb
js
push
sbb
sbb
adc
mov
aaa
inc
jno
sbb
jg
xor
dec
pop
dec
cltd
lret
ret
test
sub
pushf
mov
loope
or
jl
lods
rcll
sbb
xor
fs
dec
lret
xor
gs
jnp
rorl
popf
ss
dec
jmp
pop
pop
mov
xchg
mov
xor
loop
mov
das
cmp
je
in
or
iret
rolb
jae
aam
js
xchg
movsl
loop
xlat
hlt
arpl
dec
stc
or
pop
fucomi
jb
xor
das
stos
cs
inc
lcall
cmp
cmpsl
aam
stos
xchg
jl
lcall
fstl
scas
aas
ss
pusha
test
push
jno
xor
push
add
addr16
xorl
mov
xchg
sti
mov
ret
int
in
dec
xor
adc
fwait
pusha
mov
push
stos
inc
dec
jmp
mov
lods
push
clc
push
mov
pop
sbb
adc
mov
icebp
mov
pop
inc
mov
xchg
ja
mov
mov
rcrb
mov
ret
pushf
mov
push
in
xchg
or
addr16
repz
in
imul
in
inc
or
pop
pop
lods
cmpsb
and
gs
shrl
xchg
es
mov
mov
lods
test
incl
addb
int
sub
shlb
rclb
leave
pop
ret
push
daa
mov
pop
cwtl
cmpl
out
fldl
push
or
mov
sbb
lret
test
mov
mov
rclb
add
pop
jbe
pushf
arpl
push
dec
mov
jno
sub
rolb
cmp
add
push
packuswb
or
pop
jp
jnp
fwait
mov
out
in
add
add
dec
mov
repnz
shlb
push
nop
jno
rcr
add
cmpsl
out
cmp
cmp
je
fdivr
test
icebp
loope
test
jmp
fs
nop
pop
je
in
and
mov
pop
fwait
mov
and
and
popf
pop
jle
or
ss
bnd
adc
jl
jae
lret
popf
mov
jmp
add
mov
xorl
dec
xchg
adc
cmp
mov
cmp
and
xor
inc
inc
lret
std
cmp
jge
sbb
rorl
stc
insb
pop
sub
add
mov
fbld
pop
cmp
aad
dec
arpl
lods
sbb
mov
fcomip
imul
rorb
xor
in
fwait
dec
jmp
pop
int
or
arpl
sarb
or
xor
repnz
stos
int3
lock
mov
cld
repz
xchg
and
hlt
mov
sbb
lods
jbe
mov
mov
je
xchg
fldcw
pop
push
push
add
push
nop
jns
mov
cmc
add
loop
test
xor
xor
pop
int
jmp
adc
sbb
add
push
lcall
jnp
fnstenv
insb
out
icebp
add
lea
cmpsl
in
jo
orl
ret
jmp
cmp
pop
leave
mov
dec
jg
mov
ret
add
sbb
sbb
je
push
jp
and
jmp
adc
push
js
adc
fmuls
push
push
mov
ja
gs
cwtl
insl
dec
pop
pop
stos
ss
das
arpl
bound
pop
cmp
sbb
xchg
enter
leave
adc
out
pop
fisubrl
stos
into
xor
xor
mov
fsubrl
sub
jo
test
insl
sbb
test
sub
loope
mov
push
mov
icebp
push
or
mov
in
pop
pop
mov
inc
clc
imul
adc
mov
cmp
cmp
jo
filds
mov
adc
std
popa
andl
popf
stos
rclb
in
mov
int3
jmp
movsl
pop
imul
xor
mov
pavgw
xchg
inc
pop
je
orb
stc
mov
mov
cwtl
sarl
shlb
mov
sbb
scas
adc
outsb
lcall
jp
rorl
ds
pop
xor
xor
fimuls
sub
loope
int3
mov
iret
fisttps
dec
dec
adc
stc
sahf
xchg
pop
js
jno
mov
inc
loopne
add
adc
xchg
sub
rolb
mov
fisubrl
ret
repnz
mov
shlb
and
cmc
mov
sub
inc
arpl
xor
fldcw
mov
add
cmp
xlat
jo
shll
cmp
dec
cmp
sti
cli
lcall
jecxz
out
jno
mov
add
and
mov
sub
or
pushf
jge
sahf
mov
xor
jo
insl
adc
fsubrs
dec
gs
out
mov
dec
sub
mov
loopne
and
xor
mov
outsl
inc
ljmp
pop
out
sbb
data16
sahf
push
sbb
fadd
inc
adc
fmulp
cmp
adc
cmpsb
sub
sbb
xchg
mov
cmp
es
xor
in
push
jne
cmpsb
fildll
jb
jns
jl
xlat
and
fimull
jno
popa
jne,pn
cmp
fadds
pop
test
scas
push
and
aad
lret
scas
js
dec
mov
push
jg
mov
imul
cltd
cld
or
insb
jmp
add
sub
repz
jmp
and
ret
cmp
shlb
cs
test
cltd
shlb
sub
push
adc
push
or
loop
loop
mov
lods
xchg
aaa
imul
mov
cltd
es
bnd
incl
lock
in
xorl
xor
lret
cwtl
push
and
fdivs
adc
push
aam
mov
mov
inc
lret
sub
fstl
mov
stos
mov
dec
mov
outsb
and
fimull
cltd
pop
cltd
lahf
rorl
fstpt
sbb
popa
adc
mov
gs
out
sbb
lds
mov
arpl
scas
mov
or
les
sub
dec
jle
mov
dec
arpl
mov
mov
es
pop
mov
and
data16
and
daa
je
enter
adc
mov
out
js
imulb
cwtl
and
fwait
xor
dec
inc
sub
push
in
cwtl
cmpsl
inc
cmpsb
push
xor
push
test
gs
out
divl
stos
dec
add
and
xchg
repnz
divb
mov
inc
cmpb
cmp
aam
shll
out
out
xor
sub
xlat
pop
inc
xchg
shll
add
xchg
jae
dec
js
shrb
jbe
push
pop
xchg
inc
jecxz
fmuls
popa
dec
or
popa
jnp
pop
push
repz
push
lret
dec
inc
lea
sbb
sbb
fxch
sbb
and
push
fsubp
mov
mov
mov
test
push
nop
ret
cmpsb
pop
mov
bound
sub
mov
mov
mov
mov
loop
pop
dec
push
jmp
push
jb
jne
dec
scas
mov
push
jb
ds
adc
add
mov
sub
push
mov
xchg
fdivrl
push
loopne
jno
inc
shll
sarb
stos
mov
fisttpll
in
cli
aaa
dec
cltd
and
les
rol
cmpsl
stos
or
push
mov
jnp
pop
les
in
jl
push
pop
mov
sbb
pop
lods
or
xchg
mov
shlb
push
inc
add
iret
sbb
push
mov
mov
add
sbb
jb
push
cmp
jb
pop
sbb
imul
sbb
insb
xchg
sub
xor
jno
inc
cmc
add
cmp
fcmovu
sbb
and
xchg
or
push
mov
jb
jnp
int
inc
ret
inc
iret
fildll
jg
loope
mov
fs
push
add
mov
insb
xorl
sbb
mov
dec
sbb
mov
insl
and
push
lods
mov
xchg
cld
stos
mov
push
push
push
js
iret
pushf
enter
and
xor
push
out
push
and
sbb
jg
jmp
das
pop
mov
mov
add
fcompl
and
fcomps
addr16
in
in
mov
push
jg
ret
adc
in
push
pop
subl
add
iret
shl
and
xor
lods
popf
cmp
mov
cmp
jae
shll
xchg
add
shll
mov
ret
shrb
je
mov
iret
adc
push
add
arpl
mov
push
push
mov
cmp
ret
and
lods
push
adc
cld
cmp
push
aas
andb
mov
shl
shlb
push
mov
cmp
hlt
stos
sbb
dec
inc
or
scas
mov
adc
add
xor
mov
fcomi
mov
or
sbb
or
add
jge
shll
fs
fs
pop
adc
aam
loopne
fxch
mov
mov
movsb
pop
sub
stos
add
dec
std
popa
jecxz
xchg
jo
push
fwait
mov
out
pop
cwtl
cmp
mov
and
inc
rclb
fsubrs
jecxz
cli
lret
mov
cmp
in
inc
add
or
or
inc
mov
out
mov
lcall
lahf
or
push
testb
push
mov
loope
push
sub
dec
pop
out
loop
jle
add
aam
xchg
sub
daa
jp
loopne
adc
popf
or
popf
cmp
pusha
add
add
dec
fstpt
xchg
sarl
scas
mov
js
scas
xor
cmp
push
add
push
dec
or
pop
loop
das
cs
sti
cmpsl
arpl
movsb
dec
adc
js
clc
rcrb
testb
add
mov
push
addb
stc
fwait
sbb
shlb
aaa
mov
sub
or
movsb
dec
xchg
or
in
and
jns
jbe
mov
add
dec
push
jmp
adc
in
imul
mov
out
cltd
xor
test
push
insb
inc
mov
stos
mov
repnz
in
xor
inc
lock
jno
fmull
popa
int3
leave
test
pop
shll
push
leave
sbb
hlt
pop
scas
iret
js
jecxz
sbb
or
loopne
jnp
push
push
cmpsb
mov
out
and
add
out
push
stos
add
stos
push
inc
push
mov
push
ja
popf
mov
jl
outsb
nop
dec
loopne
ret
cmp
pop
push
adc
mov
in
and
add
fmull
lret
stos
or
inc
iret
ss
jb
iret
std
gs
ss
cmp
lahf
test
rcr
mov
int3
lods
mov
pop
clc
pop
push
sub
rorl
stos
testl
repnz
bnd
bound
sub
lock
mov
push
mov
jb
mov
adc
std
inc
clc
mov
pop
or
or
aam
xlat
testl
add
inc
cs
in
popf
mov
xchg
jbe
xchg
and
xchg
mov
jle
pushf
fidivrs
push
stos
aad
ds
lret
xchg
lret
movsl
pop
pop
push
adc
test
push
int3
idivb
xor
imul
jno
push
rcrl
cmp
dec
or
sbbl
push
fstl
jmp
inc
sub
fs
jnp
add
cmp
inc
push
stos
jmp
stos
mov
ror
ficompl
mov
enter
push
xor
push
cltd
adc
lret
sbb
sti
xchg
sub
lods
int3
mov
les
xchg
fmul
push
leavew
dec
xchg
dec
push
repnz
and
int3
lret
fdivr
and
adc
add
sahf
xor
loop
pop
jne
popf
out
lahf
or
fwait
pavgw
lods
push
inc
scas
dec
pop
add
mov
lret
mov
hlt
jle
scas
adcl
xor
or
shlb
out
cmpsb
popa
loopne
jae
add
or
out
dec
push
xor
sbb
push
mov
loope
cmp
popa
shr
pop
enter
aas
outsb
fisttpll
adc
ret
je
loop
pop
decl
mov
and
sbb
aas
and
enter
out
in
mov
into
scas
call
cs
mov
xchg
mov
lcall
push
cmc
popa
push
jecxz
adc
xchg
das
mull
pop
jecxz
and
sub
ret
ret
enter
enter
std
aad
cmpsl
test
cwtl
and
int
sub
xchg
mov
stos
sub
es
mov
nop
les
popf
imull
adc
popa
sbb
sub
and
ret
adc
call
pop
push
nop
mov
enter
daa
enter
inc
pop
dec
mov
jecxz
call
and
outsl
mov
sarl
jbe
pop
add
xchg
pop
push
sbb
cltd
movsb
jle
test
in
inc
xor
lahf
lcall
sbb
cld
jg
rclb
mov
int3
leave
popf
adc
call
mov
popa
sbb
or
or
pop
mov
xor
pop
ss
ret
loope
out
xchg
adc
stos
rcrl
popa
lahf
adcl
insb
hlt
xchg
dec
aad
push
or
mov
jl
cmp
lods
push
mov
std
inc
sub
lods
lret
fs
and
mov
add
jnp
in
jbe
rcll
add
jmp
mov
aad
stc
xchg
ret
dec
outsl
jns
add
cmpsl
gs
stos
sahf
adc
cmp
xchg
sub
push
inc
aam
mov
sub
adc
xor
test
jns
or
sub
pop
sub
sti
out
push
lret
andl
push
or
add
push
xchg
pop
jmp
mov
cmp
addl
mov
pop
jns
mov
les
loope
sbb
jmp
push
mov
xchg
xlat
cltd
adc
sbb
cmc
nop
sub
adc
sub
test
mov
xor
mov
fistpl
jl
pusha
loope
jae
notl
rcrl
sbbb
fstpt
outsl
xor
rclb
jo
xor
jmp
sbb
cmp
pushf
decb
jb
ficompl
jb
popf
outsl
lret
jl
and
mov
int3
ret
jmp
pushaw
negl
cld
shr
push
and
cmp
push
popf
xchg
aas
mov
xchg
push
add
add
loopne
test
jmp
push
push
orb
jno
xchg
icebp
insb
fidivs
ret
addr16
xor
add
sbb
js
cld
push
test
push
shl
add
push
sub
outsb
push
daa
bound
push
xor
sub
push
sbb
cmp
ss
cmp
lock
push
pop
ds
fdivrl
stos
int
xsha256
cmpsb
nop
mov
test
imul
inc
xor
loopne
adc
lea
pop
lods
shll
xchg
xor
insb
xchg
xlat
scas
mov
js
mov
ja
data16
cmpsl
mov
int3
stos
ds
inc
filds
cltd
cmpsl
outsl
inc
cmp
out
lret
out
mov
inc
es
cld
pop
fsub
lahf
in
aad
cmc
jp
pushf
pusha
scas
jge
fs
mov
insb
sub
pop
jnp
mov
dec
push
lcall
mov
push
pusha
loope
xchg
push
lods
enter
das
jg
adc
rcrl
xor
push
push
jmp
and
jo
xchg
dec
xchg
add
sub
stos
push
je
mov
test
and
jg
repnz
pop
mov
aaa
xchg
jbe
xchg
pushf
xor
test
sbb
push
lret
sbb
mov
jae
data16
das
fisubl
dec
aam
cwtl
popf
into
push
mov
and
jle
xchg
rorl
out
push
pop
dec
push
add
mov
out
mov
cmpl
adc
fsubrs
xchg
movsb
adc
in
mov
jbe
sbb
push
pop
mov
push
insb
outsb
rclb
sbb
lock
cmp
pop
and
lret
sub
add
or
push
dec
lock
sbb
cmp
lock
je
das
and
scas
pop
std
subl
jmp
sub
ror
jmp
loope
or
lds
mov
mov
enter
aam
adc
iret
lds
inc
inc
movb
loope
js
jae
les
popf
pop
in
lods
ljmp
mov
test
movsb
jg
imul
mov
std
sti
jnp
xlat
pop
stc
or
idiv
das
jmp
and
ljmp
add
adc
leave
pop
pop
cmp
mov
mov
jmp
lcall
cs
and
sbb
add
cmpsl
jae
loopne
ret
jae
fstpl
in
jmp
lds
add
mov
add
jb
jae
sub
neg
pop
shll
mov
in
aam
outsb
out
and
loop
push
inc
daa
addr16
add
jno
cmpl
add
iret
xchg
scas
and
push
loop
add
sub
push
js
fistpl
repnz
mov
out
push
pop
mov
push
xor
leave
repnz
shll
mov
xchg
pop
mov
cmc
out
xor
lret
gs
ret
sbb
mov
mov
imul
aad
inc
popa
jge
dec
sbb
ret
mov
sub
inc
xor
mov
xlat
lock
mov
lods
repnz
shlb
cmp
ds
jge
push
lcall
adc
or
pop
mov
icebp
pop
gs
aaa
cmp
sub
jb
cmpsl
fucomip
inc
movsb
in
sbb
adc
loopne
adc
jge
xchg
aam
jbe
push
ljmp
add
roll
ds
dec
cs
xchg
stos
sbbb
pushf
test
mov
scas
adc
inc
pop
addr16
xchg
mov
dec
fsts
push
jmp
sti
cli
adc
inc
push
jmp
and
jge
push
sub
push
cmp
jmp
pop
subb
lods
push
es
mov
icebp
inc
xchg
out
sbb
xchg
mov
adc
xor
cmp
in
and
ljmp
xor
adc
cmp
cli
mov
jno
cltd
add
pop
repnz
mov
in
pop
cmp
cmpb
pop
add
inc
aas
add
sbb
cmp
ret
iret
loop
mov
pop
dec
jl
imul
call
jecxz
inc
mov
jl
subl
in
push
sahf
dec
out
cli
push
pop
loope
je
hlt
testl
cmp
cmp
or
pop
rcll
inc
lahf
push
in
frstor
mov
int3
mov
testl
cmp
xchg
shl
inc
mov
dec
inc
add
repnz
cwtl
daa
mov
dec
cld
in
and
push
jg
stos
xchg
sbb
mov
or
sbb
xchg
fnstsw
lahf
adc
mov
dec
es
iret
or
inc
pop
xor
xchg
cwtl
and
mov
add
sbb
push
lret
test
testl
sub
stos
sub
push
push
das
test
jne
jo
mov
pop
pushf
pop
or
push
jecxz
fsub
lods
lds
fdivrs
aam
sarb
xor
cmp
cmpsb
aam
mov
or
sub
mov
leave
add
lahf
cmp
pop
inc
push
fbld
imul
sbb
mov
push
adc
mov
mov
cld
push
mov
mov
fsts
mov
aaa
dec
sub
xchg
jp
push
shl
sbb
push
popa
shl
cmp
lds
xor
dec
and
xor
xchg
fs
xor
cld
scas
lock
stos
sbbb
dec
std
stc
nop
movsl
jbe
add
push
cs
mov
fs
cmp
sub
add
cmp
aaa
js
pop
btc
cmpsl
test
pushf
dec
mov
roll
pusha
lods
jbe
mov
inc
movsl
jmp
nop
dec
jg
fwait
loop
mov
and
mov
dec
testb
mov
lret
sbb
adc
fsubrl
inc
push
out
das
dec
movsb
sub
sbb
outsb
out
adc
and
jns
aaa
sub
addl
inc
jnp
add
movsb
xlat
push
sbb
ror
xchg
dec
mov
incl
outsb
cmc
rclb
or
rcl
dec
out
out
pop
sbb
movsb
adc
pop
stos
jge
xchg
scas
movsb
cwtl
fcomps
sbb
ds
fwait
pop
imul
ficomps
add
dec
fbstp
scas
sub
push
lods
pop
ss
pop
push
adc
pusha
daa
out
fs
out
test
adc
fidivl
iret
pop
lds
fists
and
and
add
rcll
and
fidivrs
mov
adc
inc
aas
jle
add
lods
int3
push
or
cmpsb
lods
xchg
or
les
addr16
fildll
outsl
and
psrlq
rcrb
push
negl
sbb
scas
dec
sbb
xchg
sub
test
cmp
aad
ljmp
addr16
iret
mov
xchg
lds
out
fidivs
fcom
xchg
xlat
data16
push
imul
and
lock
lds
mov
mov
es
in
xor
cmpsl
rolb
adcl
mov
lds
mov
sbb
stos
xchg
mov
push
pop
in
hlt
inc
sub
js
adcl
pop
dec
mov
jmp
cmpsb
jne
pop
nop
jne
cwtl
inc
dec
xchg
sti
or
fists
inc
adc
and
das
in
inc
push
mov
pop
iret
pop
pop
int3
fnstsw
std
mov
adc
inc
out
out
stos
xlat
mov
aaa
cltd
loop
fs
out
xchg
mov
jmp
push
mov
fmul
add
mov
orl
push
dec
div
ret
push
dec
jge
mov
jge
or
cs
testb
cmp
dec
jl
inc
mov
push
popa
pop
loopne
jb
cmc
xchg
add
fbld
loopne,pn
daa
aaa
fisubl
xchg
cmp
dec
fldcw
mov
or
outsb
repnz
fsub
mov
mov
add
cmp
lock
test
sbb
mov
sub
repz
mov
seto
jb
daa
xor
jg
test
ljmp
cmpsl
in
xor
xor
pusha
inc
cmp
pop
inc
cmc
adc
fiadds
mov
inc
decl
inc
enter
pop
inc
stc
adc
movsl
pop
shll
jmp
xchg
pop
data16
mov
add
cli
mov
out
in
in
and
fsubl
jae
add
inc
lret
test
popf
movsl
movsb
jnp
daa
dec
vandnps
insl
adc
dec
xchg
jp
popf
or
loope
ret
jae
and
sbb
mov
lcall
rolb
inc
movsb
aas
xor
stos
adc
mov
out
or
lods
lret
aam
or
js
mov
push
jo
stc
pop
div
enter
or
jmp
out
jns
xchg
lret
sbb
mov
test
mov
push
data16
movsl
push
mov
cwtl
clc
paddsw
call
xor
pop
push
add
inc
mov
or
add
jo
mov
in
aad
lcall
xchg
sahf
cltd
lret
in
sbbb
cmp
adc
repz
imul
sub
xor
mov
lods
dec
pushf
addl
nop
fsubp
icebp
sub
hlt
push
fbstp
push
sub
sbb
shll
jo
sti
mov
cwtl
jmp
jge
rcrl
xor
cmp
popa
xchg
add
jbe
outsb
mov
sub
cmp
pop
inc
fistl
addr16
xor
push
fildl
sahf
and
inc
mov
push
and
shll
fidivs
pop
iret
rcll
sbb
mov
sbb
pop
cltd
mov
add
push
fwait
cltd
in
pop
sbb
inc
imul
cmc
loop
jno
dec
sbb
ror
jno
lds
lods
sub
loope
inc
lea
and
lret
mov
inc
and
or
jmp
mov
inc
fsubs
cli
mov
fsub
sub
sub
mov
movsl
xchg
dec
xchg
cmpsl
xchg
push
adc
mov
fnsave
cli
xchg
sbb
or
adc
sbb
insb
loope
shrl
inc
push
jg,pt
mov
pop
inc
lret
mov
dec
les
xor
and
inc
je
inc
push
sbb
lea
push
bound
cmpsb
push
stc
pushw
adc
ret
aad
mov
shlb
icebp
xor
cmpsl
scas
cmc
push
stos
out
adc
sbb
jbe
xchg
test
xor
int3
imul
mov
pusha
insb
cwtl
cli
test
xor
ss
or
test
mov
addb
popf
xchg
xchg
aad
out
push
sub
push
repz
fcoms
dec
jo
pusha
jno
lods
dec
lret
xor
jle
dec
rcrb
xchg
stos
bound
inc
ret
cmc
data16
adc
sbb
push
lret
enter
jnp
mov
mov
fistl
push
pushf
push
jae
jo
insb
ja
push
sub
push
xchg
lahf
in
fucomp
movsb
jge
les
repnz
out
cmp
test
out
das
push
daa
insl
mov
int3
jnp
cmp
pop
and
sbb
xor
cmp
sub
cmpsl
mov
and
pusha
ret
rcrl
out
mov
jmp
add
fcoms
xchg
lahf
ja
inc
test
cli
roll
imul
inc
mov
xor
insb
xor
insb
lret
xor
mov
pop
insl
mov
mov
and
mov
dec
mov
pop
cli
in
dec
push
jge
or
data16
insl
nop
sbb
leave
dec
fistpll
test
or
mov
inc
mov
mov
fbstp
cmpsl
cmp
pop
sub
fidivrs
mov
add
outsl
test
punpckhwd
and
stos
out
insl
scas
xchg
movsb
xlat
mov
arpl
mov
adc
lret
aam
xor
jge
pop
imul
pop
push
jg
negb
jge
sbb
push
pop
adc
adcl
pop
aaa
mov
test
clc
pop
add
pop
adc
inc
lret
cmp
push
mov
aad
int3
sub
push
push
add
xchg
cmp
jp
push
addb
mov
js
cmc
adc
sub
mov
mov
jb
ds
xchg
nop
adc
ret
fisttpll
out
test
mov
push
mov
fisubrs
push
aas
outsl
sub
adc
shrb
mov
movsb
add
aam
mov
dec
cwtl
ljmp
lcall
and
mov
or
iret
std
rcll
mov
push
pusha
arpl
xor
out
scas
pusha
fldenv
rcr
dec
jge
loopne
outsl
cmp
jno
inc
adc
fisttpll
lea
pop
push
cs
push
out
out
push
call
mov
int3
lahf
int3
cld
aas
jae
pop
sti
arpl
push
add
ljmp
in
sbb
dec
popa
dec
arpl
mov
cmp
aad
insb
xorb
pop
and
dec
repz
decl
mov
adc
jmp
div
push
in
or
test
fildll
mov
and
sub
test
daa
adc
aas
out
push
push
rolb
xor
popf
and
push
mov
or
sbb
sti
fildl
cmp
pop
js
fdivs
or
add
add
jnp
jmp
mov
and
int
movsl
adc
xchg
cmp
gs
out
adc
addr16
and
test
cmp
jo
nop
sbb
xor
xchg
sti
cwtl
out
hlt
shr
push
movsb
push
xchg
or
pop
cmpsl
sbb
push
les
xchg
repnz
mov
xor
js
std
mov
lock
mov
fnsave
mov
mov
outsl
ficoml
in
daa
inc
in
repz
into
aas
xchg
pop
mov
or
mov
and
and
cmp
stos
aaa
mov
adc
loope
lcall
aam
inc
mov
in
sbb
icebp
stc
xor
mov
fst
int
adc
test
test
mov
push
cwtl
leave
push
xor
loopne
sbb
jno
push
xor
sbb
cmp
loopne
movsb
insb
mov
mov
mov
call
sub
add
andl
rcrl
es
movsl
sbb
aas
dec
into
fcoms
mov
sbb
or
and
adc
push
iret
mov
cmp
pop
xchg
or
mov
dec
rclb
aas
ss
pop
arpl
and
cmc
cld
sub
pop
subl
hlt
sub
orl
std
cmpsl
jo
in
add
mov
push
jbe
and
loope
inc
and
cmpsb
stc
les
jno
push
push
mov
lods
frstpm(287
mov
test
js
arpl
decl
fwait
xor
inc
cmp
and
and
cmp
cmp
cltd
shl
cli
gs
addr16
dec
jb
cmp
loope
mov
add
xor
aaa
dec
push
lret
inc
mov
bound
xchg
xchg
mov
and
mov
mov
xor
pop
mov
fstpt
popf
rol
shrb
scas
incl
xchg
out
lea
xchg
icebp
scas
adc
cs
in
xchg
stc
mov
dec
mov
sti
jnp
xchg
insl
xchg
divps
sti
add
enter
ficoml
mov
in
or
lahf
xchg
inc
xor
xor
pop
fiadds
cmpsl
imul
lds
xchg
xor
xor
sub
pusha
and
push
pop
bound
mov
adc
add
call
mov
dec
mov
sti
in
and
fildll
movsb
mull
pop
jp
cmp
mov
shlb
add
stc
add
or
scas
jge
enter
mov
pop
fwait
adc
mov
push
subb
add
jo
cmp
push
stos
ficoms
add
push
cli
or
movsl
repz
mov
fs
mov
outsl
call
add
out
mov
and
nop
popa
and
push
jle
lea
shll
mov
call
mov
imul
xchg
js
ror
call
xchg
insl
aaa
int3
lock
mov
jb
mov
inc
je
sar
mov
lods
fists
mov
fisubl
sahf
xchg
sub
shlb
push
and
pop
out
cltd
iret
inc
into
mov
lea
test
sahf
push
in
pop
in
lea
repz
sub
fists
cmp
stos
mov
jnp
or
push
faddl
nop
push
jno
inc
pop
mov
push
aad
mov
les
mov
out
neg
sbb
mov
mov
les
dec
or
bound
cmp
roll
aaa
inc
loop
aad
lret
in
cltd
in
insl
sub
loope
imul
into
sub
dec
jnp
adc
jl
jae
push
add
add
xchg
or
and
cmpsl
xchg
jo
and
jle
adc
jg
loope
xchg
fidivs
mov
adc
aas
aaa
jmp
ja
mov
xchg
test
aam
dec
xor
loop
into
insl
dec
pop
imulb
lahf
pop
pop
xor
pop
sti
das
mov
jno
or
jge
mov
fnsave
or
pusha
in
clc
out
mov
cltd
jae
xchg
aam
mov
push
or
movsb
jg
push
dec
xchg
sbb
xchg
dec
insl
add
pop
leave
nop
jp
sub
push
jb
imul
cmpsb
adc
pop
xchg
mov
push
sub
adc
jp
push
scas
imul
mov
std
in
mov
add
mov
stc
cmp
and
push
sbb
push
frstor
fildll
cmpsb
inc
inc
in
out
mov
dec
jg
push
jp
adc
inc
fchs
pop
push
in
pop
andl
ss
jge
addl
dec
mov
jecxz
dec
in
movsl
outsb
clc
je
imul
sbb
adc
ret
test
or
stc
pop
pop
cmp
jmp
dec
push
jp
rcl
movsl
cmpsb
out
aam
ret
scas
cmp
dec
lret
sub
in
inc
lret
loope
and
xlat
and
shrb
es
mov
clc
aaa
jle
mov
dec
pushf
sub
out
sbb
nop
leave
or
movsl
mov
cmpsl
jbe
stc
lret
rcrb
cmpsb
callw
enter
mov
xchg
xchg
push
xchg
stos
pop
loopne
adcl
lret
jno
or
out
jle
hlt
into
cmp
inc
pop
dec
in
sub
dec
push
inc
call
dec
mov
pop
cmpsb
jae
mov
sub
push
push
insl
scas
daa
ret
lcall
inc
jg
sbb
clc
mov
in
nop
and
daa
fildl
jg
push
lret
jo
mov
fcoms
and
imul
addr16
and
adc
jmp
jmp
test
int3
fmuls
sbb
decl
icebp
faddl
cmp
rcrb
sub
mov
cmc
adc
dec
push
dec
sahf
out
and
in
test
mov
rorl
cltd
xchg
mov
push
outsl
mov
std
jae
sbb
fdivrs
movb
jle
add
lods
stos
push
test
movsb
lea
mov
push
push
fwait
jno
jl,pn
sahf
lahf
sbb
js
mov
lret
xlat
pop
mov
cmp
dec
mov
sbb
jne
sub
adc
pop
stos
xor
cmc
fimuls
push
xchg
es
out
sub
mov
adc
or
add
lret
mov
add
bound
dec
hlt
or
cmp
test
push
cmp
push
push
mov
fsubrp
out
add
repnz
pop
ljmp
testl
adc
leave
mov
xchg
sbb
cmp
cmp
inc
cmc
dec
jp
push
fisubs
dec
cltd
hlt
sub
out
pop
mov
aam
ja
pop
cli
movsb
sarl
scas
int3
push
add
ficomps
lds
aam
cmp
test
sbb
xchg
push
push
dec
dec
mov
jge
rcrb
mov
mov
ja
call
aad
cmp
inc
stos
in
aaa
test
icebp
cs
out
rcll
pop
sbbl
das
rcl
js
cwtl
cld
fisubrs
pop
stos
scas
pop
push
decl
dec
mov
fwait
scas
jnp
test
loop
sbb
imul
xor
add
loopne
lret
jmp
test
or
sahf
fisttpll
jmp
cmp
and
loope
insl
sbb
lods
sti
adc
jl
fs
ds
and
push
sub
in
in
adc
sbb
out
mov
aad
mov
mov
call
xor
jp
xchg
fildll
or
mov
push
cli
push
clc
add
in
sbbb
js
pop
pop
sub
outsl
stos
cwtl
sahf
inc
jecxz
int
ret
sbb
bnd
jl
cmp
add
andl
sub
or
aaa
inc
aaa
cld
inc
cmpsl
adc
lea
mov
jno
sub
in
push
lret
fimuls
enter
out
dec
add
dec
sub
sahf
push
repz
mov
aas
xor
push
cmp
fildl
and
rorl
mov
negl
jg
sbb
sub
pop
dec
insl
pop
jp
int
mov
aas
jne
xchg
pusha
pop
test
jg
lods
lods
rorb
arpl
pop
rclb
add
sbb
popa
mov
shrl
lock
mov
test
js
cltd
lds
xchg
lcall
xor
jne,pn
rorb
push
jno
add
pop
bound
dec
or
push
inc
pop
mov
sahf
mov
cmp
or
dec
mov
add
ret
lds
pop
scas
and
adc
enter
lods
jmp
movsl
sub
shrb
sbb
es
pop
in
xchg
mov
adc
std
cwtl
out
cmc
stos
dec
stos
fistps
sbb
sub
mov
add
les
ret
dec
inc
out
stos
fmull
push
popa
ror
push
sub
sub
push
imul
sub
sub
xor
stc
outsl
xchg
xchg
mov
xor
mov
mov
push
rolb
lods
sub
mov
mov
out
pop
add
int
loopne
andb
or
test
and
addb
mov
pushf
adc
jae
pop
mov
pop
dec
xchg
fsubrs
out
mulps
mov
lods
push
push
jl
ss
or
mov
in
fs
xchg
and
pop
int
sbb
sti
cltd
repnz
sbb
imul
mov
rol
lret
data16
rclb
inc
adcb
dec
insl
mov
icebp
dec
mov
fcmovb
add
cmp
out
jae
cwtl
jg
in
repz
clc
lret
jmp
testb
pop
pop
lea
xor
jmp
stos
outsl
xchg
sbb
cmp
and
sub
and
mov
leave
pop
inc
shr
push
push
jns
sub
ficoml
in
push
pusha
hlt
lods
rcrb
nop
dec
cld
push
stos
shll
sub
les
js
push
xchg
insb
mov
scas
cmp
into
push
add
movsl
insl
add
imul
sbb
rolb
rolb
je
imul
xor
test
jl
jge
pushf
gs
cmp
mov
push
push
jmp
xor
inc
mov
in
and
das
push
sub
loop
pop
fisubrl
inc
push
mov
and
ret
hlt
push
in
mov
mov
lret
aaa
mov
outsl
mov
xchg
mov
daa
out
fsub
pop
mov
sbb
test
dec
inc
dec
dec
out
std
rolb
push
pop
cmp
inc
xor
mov
test
test
jae
cltd
mov
cmp
into
add
shlw
cmpsb
adc
imul
jbe
lea
cwtl
int
out
mov
out
xchg
inc
or
mov
mov
and
fnsave
aad
jecxz
lcall
xor
test
jnp
test
xor
cmpsb
out
mov
in
lcall
sbb
rcll
pop
loopne
outsb
fisttpll
and
add
adc
aaa
leave
scas
jb
inc
sub
pushf
dec
aam
je
mov
mov
push
push
push
loopne
ret
dec
push
xchg
dec
mov
repz
jae
add
cmp
sbb
xor
cmpsb
mov
test
jle
inc
addr16
push
pushf
popa
cs
add
push
sbb
cltd
xchg
pop
push
push
push
or
mov
sub
mov
add
push
cltd
or
mov
insl
enter
and
cmp
push
jmp
int3
cmpsl
cmpsb
and
rol
xor
pop
inc
sbb
subb
fldcw
call
sti
dec
cmp
cmp
iret
mov
sbb
cmp
pop
push
mov
cmp
lcall
or
cs
jo
sub
leave
or
mov
xchg
bound
mov
jmp
add
mov
scas
dec
lods
push
cmpsl
leave
add
sbb
add
push
iret
mov
out
mov
mov
rolb
adc
loopne
iret
rcll
mov
jno
pushf
push
movq
mov
test
push
sub
loope
fsubl
mov
push
jb
leave
fisubl
xchg
or
out
outsl
arpl
enter
ret
imul
lret
addl
sbb
sub
pop
ds
or
dec
jae
sub
adc
mov
aad
arpl
adc
ss
mov
mov
cmp
das
xchg
pop
jmp
sbb
nop
xor
mov
push
lret
pushf
push
scas
jg
mov
fisttpll
cmc
inc
aas
loope
and
aas
jno
xor
push
jae
xor
filds
jmp
shlb
push
je
hlt
add
mov
cmpsl
sbb
icebp
test
sahf
adc
movsl
mov
push
ffree
adcb
and
push
cld
jnp
out
dec
pop
xor
in
jge
fwait
cld
cli
aas
call
subb
sbb
jb
js
gs
jno
ret
clc
stc
gs
addr16
filds
into
idivb
adc
add
sbb
pop
sub
repz
sti
sub
js
jbe
outsb
outsb
aaa
rcr
pop
pop
movsb
and
xor
xor
mov
mov
ds
lock
mov
pop
cli
push
daa
fnstsw
data16
cmp
push
xor
into
rol
pop
shll
mov
ss
jl
in
add
xchg
orb
pop
popa
and
mov
sub
push
insl
fmulp
jne
in
jp
xor
and
xor
sub
pop
adc
pop
ds
mov
bound
ret
xchg
and
inc
mov
mov
sets
pop
ss
mov
adcl
popf
pushf
jge
hlt
sub
shrl
movsl
movsl
clc
in
xlat
ret
push
dec
bound
mov
jnp
ds
aam
jne
test
hlt
push
push
or
cld
inc
in
pop
inc
adc
push
push
mov
cmpsl
adc
leave
stc
mov
sub
inc
mov
pushl
dec
out
pop
shrb
mov
xchg
mov
xchg
sti
jno
lahf
jmp
ljmp
xor
das
sbb
fwait
pop
out
mov
fwait
in
insb
or
daa
push
or
xchg
in
and
lret
push
aad
jmp
jp
hlt
sub
xchg
fcmovu
dec
adc
insl
sub
scas
stos
int
stos
cmp
cmp
roll
adc
mov
or
outsl
xlat
cmc
es
ds
cmp
adc
adc
les
add
fs
aas
test
test
xchg
xchg
mov
xchg
jle
dec
mov
imul
pop
add
xor
out
push
or
mov
sbb
adc
shlb
fisttpl
mov
xacquire
test
popf
mov
jge
sti
cmc
rol
cs
cmp
shrl
and
push
repnz
insl
movsl
cltd
lret
adc
xchg
lea
adc
arpl
imul
mov
in
add
fs
pop
inc
xor
sbb
xchg
inc
loopne
in
mov
movsb
push
pop
dec
std
cmpsb
xor
in
adc
cli
inc
inc
aaa
sarb
xlat
cltd
push
inc
push
shll
push
adc
add
pop
mov
movsb
mov
test
test
outsb
and
mov
mov
inc
fcmovu
aaa
mov
push
fsubr
push
daa
outsl
jl
or
adc
pop
sbb
mov
lret
adc
scas
cld
dec
stos
incb
push
int
icebp
xchg
fiaddl
jle
ja
dec
pop
add
repnz
xchg
lea
repz
mov
xchg
push
gs
xchg
loop
adcl
cmp
roll
cmpsb
insl
push
fsubs
in
lea
femms
in
repz
sahf
cmpsl
or
in
adc
mov
mov
and
mov
out
fcomi
inc
addl
cmpsb
scas
aas
scas
lret
dec
das
xor
pop
jae
xor
out
and
jno
dec
and
nop
int3
stos
js
jb
fsin
enter
adc
jne
adc
aaa
subl
roll
test
icebp
sbb
xor
lods
dec
xor
imul
sar
dec
sbb
mov
and
out
mov
cmp
jmp
xorl
lret
shrb
adc
inc
js
jns
es
shl
sub
popf
xor
pop
int3
test
pop
mov
push
fnstsw
jne
jl
iret
xor
xchg
into
jge
add
xor
jnp
cli
aad
push
out
lea
aas
xchg
jnp
sbb
pop
adc
xchg
popf
inc
jle
adc
aas
js
or
cwtl
js
sbb
sub
mov
mov
xchg
imul
fnsave
icebp
test
dec
jp
add
add
inc
push
add
jl
popa
bound
es
lods
mov
stos
xchg
stos
icebp
push
aaa
mov
fidivrs
dec
pop
and
jle
loope
push
push
mov
lea
loopne
lods
std
add
xchg
jl
jmp
stc
xorb
sbbb
or
addr16
push
push
leave
pop
sbb
sbb
mov
rolb
add
scas
mov
loopne
push
cmpsb
and
mov
mov
or
decl
xchg
movsb
cli
xor
and
inc
aaa
cmp
pop
pop
mov
pop
out
xchg
lods
mov
int3
subl
rcrl
push
scas
cmp
mov
ret
and
push
and
mov
out
icebp
jb
and
loope
daa
mov
xor
jnp
por
ret
mov
rcrl
xchg
and
ss
and
xchg
insl
mov
addr16
xor
push
inc
fcoms
rol
lea
int3
mov
adc
adc
outsl
mov
cmp
jns
mov
mov
xor
pop
repz
lods
inc
loopne
inc
mov
loopne
fwait
or
movsl
ret
aaa
sub
jo
out
mov
or
repnz
dec
xlat
loop
sbb
sbb
sarb
add
mov
inc
sub
popa
std
das
loop
stc
pop
aaa
pop
fisubs
fcompl
mov
cmpsl
pushf
jle
pop
inc
outsl
faddl
pop
or
xchg
mov
comiss
pop
aam
in
inc
out
daa
lock
push
ss
or
jno
sub
sub
sub
sbb
movsl
movsl
add
gs
mov
push
mov
adc
xchg
adcl
rcrl
dec
pop
pop
sbb
mov
int
xor
push
adc
faddl
insl
mov
xor
ljmp
jns
and
mov
imul
mov
lahf
ja
mov
int3
fmull
and
es
cld
sahf
xchg
movsl
stos
movsl
mulb
and
insl
lods
pushf
inc
mov
repnz
nop
sub
ss
negb
and
mov
shrb
lds
and
inc
cmp
divb
cmpsb
sbb
hlt
popl
scas
dec
cmp
xrelease
xchg
and
sti
sbb
pop
jns
and
dec
imul
pop
gs
sbb
inc
out
cwtl
push
sub
pop
mov
std
cmp
ljmp
scas
rcll
call
push
jnp
int3
cmp
mov
inc
loopne
sahf
aam
ret
test
js
adcl
adc
ljmp
daa
fidivl
push
push
rorl
mov
dec
jae
pushf
rorb
leave
xchg
lock
jge
fucomi
rclb
jle
out
inc
push
int3
fldl
jmp
pop
mov
das
pop
mov
out
lret
out
pushf
push
lods
jl
dec
scas
insl
adc
pusha
mov
lcall
das
xor
cmpl
outsb
dec
pop
push
or
jne,pn
xor
out
cmpsb
push
orl
dec
mov
out
lock
and
scas
sbbl
jl
dec
jg
leave
add
imul
push
mov
imul
scas
or
dec
cmp
outsb
dec
fildl
andb
cwtl
rcll
es
sarl
sbb
fcoms
mov
ret
lcall
mov
adc
enter
out
adc
loopne
lock
out
push
mov
push
sbb
cwtl
and
push
shrl
and
aaa
leave
mov
jg
adc
push
push
mov
jno
mov
cld
jo
mov
insl
out
mov
cmp
int
push
jle
adc
mov
dec
pop
lods
divb
mov
dec
sahf
cmpsl
rcr
adc
lcall
incl
insb
jg
pop
data16
mov
push
and
adc
stc
addr16
mov
push
sbb
je
cltd
in
add
andl
push
adc
shrb
xchg
cmp
movsb
sbb
xor
push
pop
and
aas
testb
xor
movsb
ret
pop
sub
es
lods
gs
cmp
push
add
lods
dec
mov
outsb
in
in
std
pop
outsl
aad
add
ficomps
shlb
loopne
add
inc
inc
daa
repnz
push
push
sbb
insl
push
dec
ret
insl
stos
in
adcl
mov
mov
add
and
ret
mov
daa
out
cmp
mov
push
out
jge
movsb
loop
push
adc
out
push
sub
addl
outsl
or
hlt
add
dec
jmp
enter
js
out
and
test
cmc
std
lcall
push
dec
cli
push
pop
jae
or
push
fldcw
dec
dec
ror
sar
out
repz
std
push
into
loop
adc
dec
paddusb
xchg
xlat
in
frstor
sub
pop
negl
aad
ror
fsubrs
and
add
jecxz
sub
cltd
ja
aaa
xlat
mov
push
cld
mov
movb
dec
dec
inc
pop
xchg
fwait
inc
xchg
sbb
mov
or
mov
ror
and
pop
mov
enter
cmp
mov
xchg
mov
jns
lods
fidivs
push
dec
sub
sbb
pop
inc
adc
inc
lret
adc
or
into
mov
xchg
add
cmp
mov
xchg
call
scas
pop
das
js
push
scas
loopne
sti
addb
push
repz
mov
mov
mov
ficomps
cmp
daa
inc
je
or
pop
jmp
outsb
push
in
pop
add
insb
out
jne
test
xor
push
mov
aam
lods
push
sbb
test
repnz
cmp
popf
xchg
jge
add
frstor
xchg
and
add
test
js
ss
in
sarb
fildll
mov
mov
mov
outsb
xchg
aam
lahf
push
in
xlat
cmp
jle
pop
xchg
dec
jl
xchg
jle
jns
subl
cs
lret
scas
test
xchg
pop
rcll
pop
mov
dec
push
outsl
push
mov
or
insb
sbbb
jmp
or
dec
xchg
pushf
das
xor
dec
pop
movsb
add
mov
sbb
cld
xchg
ret
icebp
mov
adc
or
push
cmp
orb
xchg
jecxz
mov
daa
and
xor
mov
stos
sub
mov
mov
xor
sahf
movsb
loope
mulb
pop
pop
mov
jle
cmp
pop
jae
and
lds
fcmovnb
mov
scas
and
push
ds
inc
mov
inc
cltd
ljmp
popf
adc
loopne
call
push
jno
push
lea
mov
adc
cmp
cmc
outsl
loop
inc
push
mov
push
cmpsb
je
int
loope
adc
adc
xchg
cmp
rorl
aad
out
in
jmp
inc
hlt
dec
xchg
dec
sub
sub
fisubl
mov
test
sub
hlt
lahf
pop
pop
stos
icebp
push
sbb
jne
in
xchg
outsl
xchg
pop
push
adc
orl
cwtl
pop
rol
jbe
jo,pn
cmovs
not
cmp
loopne
in
cmpsb
rorl
xchg
dec
jae
push
out
mov
xchg
cmp
ficoml
dec
mov
scas
das
cld
ret
lds
bound
mov
sbb
push
mov
in
sahf
push
xor
mov
sub
jae
inc
insb
and
pop
fdivrp
into
mov
push
cli
ss
mov
mov
sub
cwtl
cli
fistps
les
mov
loope
push
nop
stos
gs
adc
inc
int
jae
add
mov
add
decl
loope
jge
add
mov
movl
pop
sub
cltd
and
fdivs
mov
lds
incl
inc
or
mov
das
or
sbb
pop
mov
out
xor
lahf
jl
cmp
mov
mov
and
xchg
outsb
jle
lock
push
xchg
js
out
int
cmp
dec
lds
adc
call
and
loopne
mov
xchg
out
jb
cltd
sarb
sbb
mov
insl
xchg
pop
aas
cltd
popf
sub
adc
stos
xor
sti
inc
dec
lock
aam
mov
pop
adc
mov
pop
mov
not
or
or
mov
mov
lahf
sti
imul
ror
jnp
lods
fisubs
dec
jmp
stos
or
jecxz
cli
nop
inc
lea
xor
mov
in
jbe
sub
sbb
or
movsb
in
cmpsb
cmp
add
stc
sbb
inc
mov
mov
xchg
mov
idivl
in
test
sahf
push
jae
imul
xchg
int
jge
sub
les
jbe
out
mov
dec
mov
adc
and
pushf
stos
add
push
inc
mov
xchg
dec
fidivrs
xlat
and
mov
adc
in
push
pop
std
callw
fnstsw
jae
mov
aad
adc
push
push
orb
iret
addr16
xor
jns
and
fisttps
fwait
sub
jmp
test
outsb
mov
sub
adc
jbe
jmp
push
imul
adc
xchg
push
les
rcr
xor
push
fwait
imul
into
lcall
lret
adc
fisubl
xchg
dec
mov
push
mov
pop
xchg
mov
mov
push
sbb
test
push
add
fisubrs
test
pop
ljmp
mov
mov
dec
mov
or
inc
mov
jl
iret
ror
cmp
es
push
rcl
in
into
sbb
jmp
in
sbb
and
test
sub
ja
xchg
mov
ja
cs
sti
mov
cwtl
cld
lret
jbe
or
sub
inc
pop
mov
out
mov
int
pop
sub
call
sar
lock
cmpsb
mov
sub
inc
jmp
rcrb
sub
jae
push
pop
jo
ds
sahf
loopne
push
push
nop
cld
sub
sub
jb
push
fwait
pusha
enter
mov
popa
fsubs
mov
xlat
push
aaa
sub
rclb
jns
into
mov
and
cli
and
mov
sbb
insl
mov
jle
rolb
scas
mov
mov
ret
fcoms
fmul
js
test
repnz
icebp
movsb
movsl
xchg
xlat
push
fiaddl
jo
xor
in
leave
xchg
dec
sub
jmp
cmp
pop
aam
jns
outsl
jb
aad
pop
jle
fbstp
dec
jg
inc
adc
fcmovb
repnz
mov
push
or
pop
hlt
repnz
sbb
loopne
stos
pop
mov
adc
shlb
cmc
sbb
out
jge
xchg
addb
test
xor
pop
mov
dec
xchg
les
aaa
push
add
push
inc
call
out
xor
xor
cmc
dec
fsubl
in
dec
mov
test
int
repz
cmc
jae
mov
cld
push
pop
fldenv
mov
dec
push
mov
xlat
sbb
fsubrs
out
leave
cmpsl
je
jns
adc
hlt
filds
inc
jle
sbb
int
adc
dec
punpcklwd
xchg
dec
pop
pop
enter
sti
int
lock
add
jge
xchg
jmp
sbb
or
push
int3
ficompl
jp
lods
scas
test
push
and
dec
cmpsl
rcrb
pop
jecxz
mov
lock
push
and
add
andb
shll
xchg
orl
ret
stc
mov
jae
mov
inc
jl
and
loop
fdivrl
loop
sub
leave
je
pop
rcrl
pushf
ret
fldenv
and
mov
std
push
cmpsb
call
cmpsl
sbb
cmc
jp
cmp
and
imul
mov
pop
push
push
sub
lret
test
push
enter
rclb
mov
in
loop
aam
sub
mov
mov
lret
in
loop
jbe
leave
cmp
pop
pushf
cmp
jnp
cmp
scas
adc
lds
xchg
or
push
push
int
rolb
xchg
cmpsb
pop
cmp
jge
rolb
fwait
xchg
xchg
aam
jmp
xor
into
adc
mov
sbb
and
or
out
adc
sbb
popf
arpl
pop
pop
out
int
inc
push
mov
shrl
test
add
adc
subb
aas
cmc
mov
call
mov
rorb
xchg
xchg
xorb
mov
jbe
mov
mov
mov
xor
mov
xchg
je
ret
and
mov
in
add
int3
xorb
lock
inc
iret
jg
jns
xchg
loopne
adc
pop
or
aas
jl
or
push
jp
add
addr16
inc
cmp
rcr
lret
in
sbb
and
xchg
push
dec
inc
popf
pop
or
xor
cmpsl
sbb
or
mov
int
push
int
aad
jg
bound
push
and
sub
add
jb
mov
xor
inc
hlt
mov
mov
frstor
hlt
xorl
xchg
push
push
fucomi
push
xchg
test
inc
jo
repz
movsb
stc
jecxz
push
push
push
cld
rcll
in
dec
sub
adc
sahf
sbb
rcll
in
dec
push
orl
dec
push
cmp
adc
cmpb
adc
jne
fistpl
lahf
cmp
js
jg
mov
sub
mov
push
fists
dec
cmp
dec
data16
repnz
mov
rorl
and
mov
push
repnz
hlt
cmc
and
sbb
in
lods
ljmp
insb
scas
xchg
push
sub
jne
dec
sbb
add
mov
addb
inc
add
mov
movsl
sahf
ret
fs
and
mov
jno
xchg
out
or
xchg
repnz
ficomps
pusha
inc
cmpl
mov
mov
test
shll
aas
add
xchg
mov
aam
mov
xchg
loope
adc
ret
mov
jns
popa
dec
data16
fcoms
in
push
cwtl
aas
outsl
push
or
addl
add
iret
fstl
ja
push
leave
sub
mov
mov
iret
adc
daa
pushf
ss
push
shlb
pusha
mov
rclb
mulb
fadd
push
mov
sub
cltd
push
or
xor
xor
je
cs
mov
lcall
out
pop
or
gs
test
ds
std
rorb
add
clc
insl
cmc
xor
dec
repnz
pop
enter
xchg
mov
std
push
leave
or
mov
leave
je
ja
sti
inc
or
jo
out
push
cmp
outsb
mov
cwtl
mov
push
sub
pop
aas
sti
insl
out
stos
xchg
aas
cmp
push
push
mov
or
pop
push
and
adc
pop
dec
xchg
aas
test
es
repz
bound
ret
cmpsl
mov
inc
sbb
or
lea
and
cmpsb
cmc
jp
xor
rcrl
pop
sbb
mov
sub
fstps
jb
mov
push
cmpsb
enter
ret
mov
cmc
sbb
pop
dec
sub
push
mov
push
insb
ds
xorl
xor
imul
sbb
xchg
iret
sub
mov
out
rcl
mov
in
jge
nop
jne
outsl
inc
xor
lock
cmc
sbb
push
lret
cmp
mov
stos
jmp
and
stc
fs
cmpb
ljmp
popf
xor
xchg
mov
scas
in
data16
xchg
lret
fmulp
cltd
mov
outsb
adc
nop
test
pop
xor
lea
xchg
mov
mov
mov
xchg
repnz
je
je
xor
dec
dec
test
mov
mov
cmpsl
stos
cmp
insb
divl
mov
push
adc
xchg
sub
loop
push
jno
sbb
inc
pop
test
adc
lods
popl
cwtl
mov
iret
sahf
inc
xchg
rclb
adc
dec
add
mov
cmp
shrb
das
xor
arpl
xor
imul
aas
adcb
jnp
dec
icebp
lea
xchg
and
pop
mov
int
xor
cmc
adc
xchg
cmp
push
out
jmp
pop
call
mov
je
loop
out
push
adc
cli
mov
mov
rcll
sbbl
mov
adc
sub
cmpsb
dec
sub
inc
fdivrl
fstpt
adc
add
int3
popf
push
mov
fnstsw
in
xor
lods
jo
aad
out
sub
clc
jo
enter
nop
dec
dec
fistps
std
scas
push
cli
jecxz
mov
repz
push
scas
xchg
add
insb
fcompl
push
dec
out
bnd
and
hlt
push
fisubrl
insl
lea
add
imul
jne
das
nop
mov
nop
loope
loopne
inc
add
push
divb
out
jae
test
pop
insb
rcl
lock
cmpsb
fwait
lcall
and
lods
ficomps
fs
lret
mov
adc
fldcw
inc
sbb
mov
cmp
pop
push
mov
iret
fnstenv
sub
mov
add
push
hlt
jbe
insl
ss
and
push
cmpsl
push
out
sub
loopne
cld
cld
ss
insb
std
pop
imull
xchg
ret
ljmp
ret
cmpsl
cmp
sarl
ret
pop
and
dec
inc
and
or
aaa
incb
enter
and
mov
jns
push
or
cmp
cwtl
js
daa
dec
cmp
sti
and
jo
dec
add
xchg
push
iret
sbb
jl,pn
aas
aaa
ja
mov
inc
mov
and
pop
repnz
mov
mov
sbb
fs
cmc
insl
out
jl
adc
inc
daa
aad
in
movsb
faddl
xor
mov
xchg
ret
xor
xor
pop
or
cmc
and
adc
jnp
daa
rclb
out
push
push
cmp
out
and
cld
adc
pop
and
mov
inc
or
push
inc
add
imul
mov
xchg
stos
sub
movb
movsl
outsl
inc
inc
ds
sub
sub
sub
pop
pop
xor
fwait
pop
adc
test
mov
dec
push
leave
es
and
mov
subb
adc
or
stos
ret
loop
cli
or
pop
stc
adc
adc
lods
lcall
lock
jo
sbb
stos
mov
sub
inc
jg
or
pop
push
push
and
jnp
pop
movsl
fisttps
adc
fnsave
cmpsl
sub
lahf
negl
cmp
push
ret
jge
test
push
es
push
push
jnp
sub
and
in
cmp
jmp
mov
xchg
jp
jge
andb
xchg
repz
dec
std
adc
inc
inc
jg
clc
es
mov
cld
xor
lret
adc
push
inc
push
scas
ds
or
outsl
xchg
jle
rcl
aas
pusha
addl
push
pop
xchg
mov
imul
mov
movsb
stos
adc
mov
fs
es
push
xchg
pop
sbb
sbb
jns
ret
call
mov
add
subl
loopne
stos
aad
mov
sbb
jecxz
movsb
mov
divl
scas
and
cmpsl
int3
mov
test
test
dec
xchg
jge
cmpsl
cli
sbb
ftst
fildll
xchg
mov
int3
cmp
sub
dec
shl
and
movsb
mov
push
xchg
jmp
mov
push
xor
or
cli
push
mov
jae
cmpsb
lds
movsb
movsb
mov
negl
arpl
adc
mov
sti
sbb
mov
adc
rcll
aad
push
adc
or
sbb
pop
push
lods
cmp
stc
cmp
in
out
scas
cli
cmp
iret
sub
popf
push
in
scas
push
or
cld
xor
push
mov
push
pop
es
in
mov
cli
bound
or
jno
fs
mov
sbb
xlat
ja
cmp
add
scas
fnstsw
in
jae
and
add
or
cwtl
arpl
sbb
lcall
mov
ljmp
test
mov
add
mov
lock
mov
sbb
or
sbbb
sbb
cmp
ficoml
sub
push
mov
push
push
push
inc
sbb
scas
aas
mov
xor
inc
les
int3
pop
inc
repnz
mov
arpl
mov
adc
test
nop
adcl
pop
rcll
aad
lahf
rorl
mov
inc
cmp
test
fdivl
sub
adc
in
pop
sub
lret
mov
scas
call
xchg
adc
shlb
sub
adc
shrb
cmp
js
inc
popa
jne
dec
and
dec
mov
insb
push
cwtl
pmullw
xchg
shrb
xchg
inc
or
ret
push
and
mov
shrl
sbb
leave
icebp
loopne
daa
mov
lock
push
lcall
jb
lcall
fists
or
loopne
fildll
mov
int3
test
jne
and
xor
rcr
cmc
pop
add
loopne
add
jp
or
cmovle
les
ja
mov
inc
jns
dec
fwait
pop
movsb
cltd
out
mov
adc
adcb
mov
inc
sbb
xchg
daa
or
mov
cmc
sbb
addl
hlt
adc
push
pop
fmulp
test
mov
jbe
mov
pusha
lods
cmp
mov
sbb
jne
aad
or
mov
adc
pop
fstpl
fs
cs
psubw
int3
sbb
mov
cmp
mov
push
clc
lds
mov
in
push
xlat
mov
pop
jl
popf
rclb
jbe
mov
out
icebp
inc
xchg
es
repnz
push
dec
in
ds
xchg
or
leave
jg
pop
fnstcw
sahf
enter
in
test
push
cmp
jl
adc
sub
lret
inc
les
mul
mov
mov
cmp
sub
mov
lods
les
lahf
pop
xchg
sub
xor
faddl
enter
mov
and
fmulp
cmpsb
xor
pop
loopne
sub
fdivl
in
fdivs
addl
daa
inc
idivb
cmp
cmp
loope
add
or
mov
shl
mov
rcrl
sub
sbb
mov
ljmp
add
int3
dec
mov
roll
test
lret
pop
jb
stos
mov
jbe
mov
das
or
decb
imul
xchg
mov
lods
fwait
sbb
pop
lret
int3
dec
jle
fistps
stc
push
add
cltd
dec
jbe
add
mov
inc
jb
mov
lods
sti
jae
or
xchg
sbb
and
jae
inc
cmp
and
xchg
pop
fdiv
push
sub
adc
lods
cmpsl
stos
xor
xor
jle
mov
stos
xor
imul
cmpsl
and
test
test
mov
mov
jp
sub
mov
push
loopne
mov
fcompl
add
call
jmp
rclb
lods
cmp
popf
jmp
sbb
jecxz,pt
ret
in
pxor
jno
xchg
sbb
lock
push
inc
cmpsl
lret
push
mov
add
cmp
sbb
lods
nop
jb
clc
pusha
out
xorl
dec
scas
lret
aam
leave
insb
sbb
mov
push
lahf
and
loope
xchg
jecxz
jl
shrl
in
dec
dec
lods
adc
push
mov
call
sub
int
add
lods
mov
out
movsb
das
lret
sub
call
fdiv
mov
mov
add
xor
jns
out
out
jnp
sbb
imulb
push
insl
xlat
lret
lahf
pop
addl
loope
les
push
out
mov
clc
fisubs
or
pop
les
pop
bound
mov
jb
arpl
out
in
adc
leave
jmp
test
mov
repz
psrld
les
imul
ficomps
jge
enter
mov
dec
loop
mov
ljmp
mov
ljmp
xlat
adc
or
mov
adc
push
int3
adc
cmc
cli
jnp
jmp
jne
inc
sub
jecxz
in
adc
sbb
sub
cmp
je
inc
lret
stc
or
dec
movsb
popa
lock
flds
aas
inc
lret
pop
adc
cwtl
jo
stc
pop
adc
xlat
mov
scas
push
dec
adcl
dec
or
mov
aad
arpl
cs
add
out
shll
rcrb
arpl
jecxz
xchg
pop
xchg
mov
xchg
test
pop
mov
js
dec
mov
lods
mov
or
mov
sub
aam
sbb
xlat
xor
test
scas
mov
add
sbb
adc
lock
rcrb
ds
sahf
cmp
cmp
sbb
out
xchg
xchg
push
in
int3
inc
rep
jbe
mov
inc
loop
cld
fsubrp
mov
jecxz
std
dec
jg
sub
dec
pop
dec
lret
dec
dec
sbb
data16
and
mov
cli
inc
shlb
jge
outsl
jmp
push
shl
push
jno
je
je
add
and
add
sub
jno
in
imul
lret
lock
add
fsubl
sub
xchg
es
inc
icebp
push
repz
push
inc
sub
and
sub
sub
adc
mov
stc
pop
jnp
mov
out
or
andb
inc
call
repnz
je
repnz
bound
xchg
jp
in
les
adc
test
cmp
mov
outsl
pop
push
push
pop
arpl
mov
ss
mov
in
movsb
add
ss
xor
jnp
cmp
scas
push
mov
pop
loope
cs
loope
mov
and
pop
bound
lock
mov
inc
mov
mov
or
jae
jmp
out
xchg
je
popa
adc
scas
pop
sub
push
add
aas
add
jp
adc
fs
shlb
scas
mov
inc
imul
push
push
or
or
adc
shlb
clc
add
rcl
push
imul
cmc
out
jmp
movsb
aaa
pop
push
int
fistps
aas
jmp
adc
add
je
mov
ds
dec
outsl
andb
mov
dec
rorb
jnp
shrb
xor
fadds
addb
notb
fsubrl
xorl
mov
hlt
and
and
addr16
test
test
and
sub
adcl
popf
and
xchg
cs
xchg
inc
addb
xchg
and
mov
or
push
sub
in
mov
sub
daa
js
test
int
sub
sti
popa
xchg
mov
lods
lock
scas
mov
inc
jg
lcall
lret
rcll
ss
cld
aad
pop
and
mov
test
push
sbb
push
ss
sti
lods
push
or
adc
or
fsubp
divl
pop
jnp
mov
sbbb
stos
and
add
pop
ret
push
popf
mov
jbe
loope
aas
xlat
das
sub
dec
jp
jmp
xchg
cltd
or
mov
popf
bound
movsb
test
mov
pop
jo
rcll
test
cmp
xor
andb
std
pop
adc
jnp
mov
sub
sti
cmp
insl
cmp
les
jmp
scas
jne
xchg
imul
ss
cltd
out
or
inc
sub
int
pusha
mov
repz
aam
fdiv
test
ja
icebp
lods
xchg
out
xchg
jle
loopne
clc
fistpl
mov
mov
movl
hlt
lock
subl
fsubl
insb
pop
addr16
and
mov
and
push
jmpw
mov
ret
insl
jno
xchg
adc
out
or
out
jbe
lret
or
clc
fcomip
push
push
xchg
mov
jge
rolb
movsb
and
mov
fdivrl
mov
movsb
js
ss
flds
mov
je
mov
test
call
mov
cmp
push
iret
rcl
rcl
jno
inc
pop
in
rorl
stc
dec
cmp
test
int3
pop
dec
mov
mov
ss
je
inc
imul
out
adc
es
bound
outsl
pop
push
enter
adc
mov
add
cmp
ds
test
adc
frstor
add
fcmovne
int
rclb
or
aaa
pop
pop
es
dec
dec
mov
push
cwtl
cli
mov
popa
int3
jp
pop
jp
cmpsb
adc
or
xchg
add
or
mov
dec
mov
sbb
shl
mov
lahf
scas
cltd
fisttpll
out
cld
stos
cmp
movsl
enter
pusha
ret
dec
jae
cmpl
fdivs
xchg
inc
and
mov
add
pop
jno
push
or
ljmp
cmpl
lfs
mov
divl
into
aad
fistpl
add
mov
xor
scas
daa
mov
sbb
lea
ret
push
mov
xchg
xchg
in
mov
repnz
cmp
daa
sbb
and
stos
xchg
pop
pop
out
fwait
push
mov
ljmp
shrb
das
dec
mov
mov
pop
jg
mov
ds
xor
incl
mov
sbb
sub
push
lods
les
add
cmp
int3
or
dec
adc
push
inc
adc
jl
ja
ret
popf
xchg
jmp
mov
dec
mov
add
test
imul
jne
nop
push
cmp
mov
shrl
sub
lds
adc
mov
movsl
out
leave
leave
mov
repz
mov
mov
cmp
or
add
xchg
cmpl
data16
push
loop
adc
outsl
mov
xlat
inc
dec
loop
cltd
mov
dec
sbb
xor
jg
push
mov
xlat
fstpt
mov
mov
std
test
lea
std
mov
lock
andl
in
mov
lret
pop
adc
inc
aaa
dec
lret
dec
sarb
fwait
std
push
sub
add
out
lcall
dec
jmp
jns
in
js
cmp
out
cmp
mov
mov
dec
std
push
pop
pop
xchg
aaa
fcoml
mov
insb
mov
or
sub
push
xchg
sbb
mov
and
adc
lcall
mov
scas
sub
xor
stos
fisubs
das
daa
shl
lea
and
mov
int3
pop
pop
mov
insl
in
pusha
in
push
out
xlat
arpl
cld
mov
xorb
dec
sub
push
jae
sbb
ss
outsb
test
xchg
int3
sbb
fcmovnu
mov
iret
icebp
daa
aam
xchg
add
roll
add
rcrl
dec
dec
pop
sahf
mov
pop
mov
loop
rol
test
sbb
popf
sub
js
and
xchg
in
dec
push
popa
daa
inc
aad
cmp
stc
dec
icebp
clc
jmp
rcrb
or
xchg
inc
fs
mov
adc
imul
js
inc
xchg
or
push
ljmp
loope
cli
mov
and
lret
push
or
xorl
int3
inc
call
and
in
and
jmp
pop
jae
cmpsb
pushf
cmp
push
cmp
in
and
fmull
mov
mov
dec
or
je
hlt
cs
in
push
popa
js
xor
push
and
push
push
insl
xchg
movsb
inc
adc
jmp
mov
fstl
xchg
push
rcl
mov
sub
mov
lahf
sbb
mov
push
das
xchg
fwait
mov
or
sub
test
pop
adc
jle
scas
push
mov
call
mov
pusha
shll
loopne
ljmp
movsb
xchg
mov
nop
inc
testb
adc
js
mov
lods
sbb
jmp
sbb
mov
sbb
or
or
mov
mull
jae
scas
leave
or
jnp
pop
jb
rolb
add
test
fldcw
lcall
adc
jp
add
sub
sbb
adc
movsb
mov
mov
mov
repnz
sbb
pusha
fs
out
xchg
test
sti
mov
loope
and
sahf
cli
xchg
enter
pop
sub
or
mov
imul
jo
push
cmpsl
aam
pop
sub
insb
outsb
adc
stos
mov
cmpsb
sub
pop
mov
mov
lock
lods
cli
test
rclb
adc
mov
lret
xacquire
jnp
js
int3
sub
cmp
xchg
push
lds
mov
push
jne
fdivp
ja
mov
sbb
cld
adc
adc
aam
fucomp
clc
out
fs
ror
inc
lcall
repnz
xchg
dec
fldenv
push
daa
addr16
mov
pushf
cmp
xor
xchg
adc
mov
rcrl
cmpsl
std
cmp
aad
or
jb
dec
or
addr16
adc
mov
or
jge
pop
pmaddwd
mov
leave
daa
imul
ficompl
and
or
pushf
sbb
popl
jo
loope
mov
sbb
fwait
cmpsl
add
js
shll
dec
fbstp
ret
aaa
mov
and
mov
jne
addl
sub
lcall
lret
ljmp
mov
shlb
xchg
pushf
aam
or
xchg
jbe
iret
jbe
xorl
adc
iret
pop
les
out
and
mov
scas
mov
xchg
in
and
cmp
or
mov
fistpl
ret
sbb
inc
adc
or
pop
aam
repnz
and
ficomps
bound
mov
xchg
stos
xchg
ljmp
mov
jb
std
loope
ret
push
ffree
sti
fldl
mov
sub
push
aaa
or
inc
aaa
rorl
fs
in
cmpsl
call
inc
jb
sahf
dec
mov
lods
faddl
insl
aad
sbb
xchg
aaa
sbb
ret
je
mov
or
pushf
ds
sahf
adc
bound
aad
ds
add
ja
adc
fisttps
mov
pop
pop
inc
and
sar
movl
mov
cmp
nop
sbb
pop
jp
cmpsl
addr16
add
pop
push
pop
cmpb
or
xchg
es
add
wbinvd
xor
int3
shl
jns
sub
shl
leave
pop
stos
and
cltd
mov
xor
pusha
fsub
sub
ljmp
arpl
sbb
or
icebp
and
call
stos
movb
push
jl
shr
test
jg
adc
dec
mov
mov
xor
arpl
cli
popa
add
fwait
inc
mov
dec
mov
mov
add
push
mov
into
mov
adc
and
ret
loop
in
mov
push
or
and
adc
lahf
in
inc
fisubrs
and
mov
fldt
lock
pop
cmp
cmp
push
add
int
hlt
cmp
aas
cli
push
pop
repz
mov
loopne
pop
test
stos
cmc
fwait
jbe
jg
mov
and
push
aaa
sti
pop
cmp
and
mov
cs
cmp
push
scas
jmp
test
jmp
pop
mov
xor
cmpsb
dec
jmp
aam
mov
dec
pop
fstps
jno
pop
push
xlat
pop
mov
push
mov
xchg
xchg
cmp
dec
pop
rclb
test
addb
add
cmpsb
mov
fidivl
movsl
mov
pop
and
push
repnz
aad
out
push
jg
jns
stos
sahf
aaa
roll
mov
dec
inc
and
sub
jp
adc
subl
jno
mov
dec
push
jbe
punpckldq
popf
popf
pop
lea
in
cmp
sbb
or
mov
jb
test
xor
out
xor
push
loope
ljmp
mov
call
int
xchg
leave
jg
into
sti
lds
sub
out
push
mov
dec
mov
inc
in
paddsb
ja
stc
jne
lcall
int
push
sbb
inc
mov
jno
mov
or
cmp
inc
inc
jg
push
xchg
or
loopne
mov
push
ja
mov
and
xor
out
sub
repnz
out
inc
xchg
mov
cmp
push
xor
inc
loop
xchg
nop
lret
inc
inc
xor
cmp
int
inc
mov
fs
adc
xor
lret
or
sub
insl
ja
xor
mov
movsl
cmp
fistps
xor
jno
mov
xchg
push
mov
les
mov
sub
mov
xor
pop
mov
das
adc
xstore-rng
cmpsl
inc
lahf
xchg
sbb
mov
ret
or
jne
mov
mov
mov
repnz
idivl
lret
mov
in
pop
mov
stos
xor
mov
jns
pop
mov
jecxz
add
and
leave
or
mov
test
add
add
add
mov
ss
mov
imul
call
fisubrs
mov
testb
push
ret
dec
or
sti
test
js
inc
aam
jno
xchg
add
dec
fbld
inc
push
test
cli
insl
mov
pushf
pop
add
lret
jp
cmp
movsl
and
sbb
aaa
and
fsubl
popf
idivb
stos
mov
into
pop
pop
scas
aad
out
mov
bound
in
inc
fdivrs
xor
jbe
mov
lods
mov
lea
push
dec
das
dec
jae
shrl
dec
and
int3
pop
enter
pop
movsb
popf
lahf
cwtl
xchg
add
mov
xchg
push
xor
idivb
jno
fildll
cmp
xlat
lahf
clc
mov
sbbl
inc
push
lods
shrd
push
fwait
les
push
aam
sub
fimull
mov
in
xor
mov
or
imul
out
sub
arpl
insl
jecxz
jns
insl
and
or
shll
jne
aam
push
cmp
ds
lcall
and
xchg
mov
xchg
cmpsb
or
add
inc
xor
xchg
lret
xchg
sbb
data16
cmp
mov
ja
nop
popf
dec
lret
mov
sub
dec
mov
fcomps
shll
dec
dec
push
dec
out
jnp
negl
mov
lret
xchg
xor
xchg
iret
rol
adc
or
out
add
dec
imul
pop
xor
xlat
inc
out
sub
je
jl
dec
push
subl
mov
lret
fisttpll
push
or
ljmp
xchg
lds
inc
adc
push
clc
mov
adc
js
jl
mov
mov
mov
dec
jle
or
stos
dec
cli
xor
daa
dec
sub
fisubrl
dec
cmp
out
mov
mov
cmp
data16
insb
out
xorl
adc
and
or
xchg
int3
mov
fldl
push
pop
rcrl
imul
aam
cli
cs
mov
pop
inc
rcrl
fsubr
mov
or
jmp
movsb
add
in
or
scas
jle
dec
jns
orl
clc
inc
outsl
enter
mov
dec
and
xchg
inc
xchg
push
cmp
mov
lret
jl
jnp
fwait
sti
aas
out
mov
or
dec
jns
mov
test
stos
andl
mov
fdivl
scas
xchg
fsubl
aas
arpl
dec
or
movsl
cli
aas
sub
sub
mov
jge
lods
sbb
clc
mov
adc
fidivrl
repz
inc
lods
mov
sub
pusha
add
loope
dec
push
xchg
cwtl
sbb
sar
cmp
int
mov
cmc
ret
inc
adc
xor
lahf
fiaddl
mov
mov
cmp
jp
mov
cwtl
mov
dec
sbb
and
adc
push
push
inc
mov
add
rcrb
adc
xchg
imul
and
inc
xor
hlt
mov
mov
les
leave
push
add
in
insb
pop
mov
pop
sbbb
out
sub
adc
in
test
hlt
add
outsb
jno
das
add
mov
mov
cmpsb
aas
fs
mov
adc
pop
mov
xchg
imul
ficoml
out
xor
call
or
lds
pushf
inc
aaa
mov
je
dec
jbe
and
push
mov
pop
mov
mov
and
icebp
mov
pop
mov
inc
sbb
or
pop
push
cmp
dec
jp
stos
cmpsl
inc
ret
ds
imul
enter
std
push
mov
sbb
mov
inc
or
decb
jecxz
aaa
mov
xchg
sbb
clc
mov
cltd
xor
or
ja
shlb
jns
push
xor
clc
xor
and
fs
sbb
mov
rcll
stc
sub
mov
add
arpl
jae
lods
cltd
pop
mov
enter
inc
cmp
sub
shl
imul
jge
test
mulb
jg
adcl
pop
dec
loope
nop
imul
cld
popa
sbb
xchg
inc
je
scas
adc
sahf
imull
mov
mov
loop
xchg
inc
les
mov
or
adc
push
lods
pop
shll
or
inc
lret
pop
outsb
sti
fldcw
jns
sub
push
movsl
pop
das
mov
lcall
fimull
add
in
sbb
lret
cmp
out
xor
fimull
outsl
fadds
lret
add
cmpsb
fisubrl
shlb
push
outsl
add
sbb
mov
xchg
and
dec
adc
jle
cmp
bound
aam
jge
or
mov
stc
out
mov
mov
add
add
call
jnp
rcr
ja
push
jb
ret
mov
pop
cmp
das
inc
nop
push
arpl
cmp
cmp
cmp
fs
jno
dec
cmp
inc
cmp
xor
adc
repnz
stos
out
xlat
or
ds
sbb
mov
into
repz
fcompl
ja
loopne
andl
movsb
mov
sbb
mov
pop
shll
sub
dec
xchg
lcall
repnz
shl
push
inc
aaa
inc
mov
orl
test
mov
aaa
xchg
sub
xchg
cltd
fs
or
mov
and
in
lods
and
mov
sti
and
mov
mov
icebp
inc
inc
pop
and
adc
lret
push
ds
leave
cli
test
scas
in
aam
rcr
insb
mov
or
push
sti
fdivrl
xorl
test
jmp
cmpsl
ds
or
aaa
enter
push
repnz
aas
jb
in
or
jl
push
lahf
or
mov
lods
pop
cli
out
ret
pop
in
sti
and
cmpb
div
loope
or
testb
movsb
lcall
jmp
mov
pop
test
loop
repnz
std
int
pop
xor
jns
xchg
push
mov
and
jne
hlt
lea
aas
xlat
push
leave
xchg
mov
test
xchg
gs
insb
mov
into
pop
outsb
stc
out
outsl
mov
xor
xor
push
stos
xchg
and
mov
sbbb
inc
jg
sahf
fisubrl
push
loop
out
iret
xchg
pop
negb
xor
and
xor
mov
xor
inc
cmc
pusha
mov
or
jmp
stos
mov
xor
sub
ss
sti
xchg
push
adc
outsl
add
aad
sarb
xchg
ret
shlb
sbb
sub
mov
dec
aam
je
test
leave
sbb
in
xor
and
in
xor
mov
test
sub
out
fldenv
dec
push
cli
jnp
scas
ret
or
mov
cmp
sbb
mov
test
fstps
das
jnp
arpl
add
inc
push
jno
stos
add
jmp
adc
fistpll
mov
sbb
test
out
mov
inc
mov
add
pop
xor
adc
push
mov
xor
mov
mov
mov
mov
jle
mov
data16
fdivs
add
test
js
sub
ljmp
cld
lods
cwtl
inc
xchg
icebp
das
jnp
jmp
lods
inc
mov
nop
cmp
pop
negl
outsb
sbb
shll
lods
pop
sbb
js
jmp
jge
cmpb
or
imul
jae
inc
push
std
inc
ret
test
fisubs
mov
fs
adc
jecxz
push
cmp
ljmp
rolb
push
adc
mov
add
movsl
or
out
push
fisubrs
pop
out
clc
mov
adc
stos
dec
out
jbe
mov
scas
jmp
ja
sub
repnz
push
mov
iret
inc
xor
pop
jl
mov
das
mov
push
jg
xorl
arpl
jecxz
je
sbb
pusha
jb
stos
push
mov
adc
lods
xchg
int3
dec
and
iret
call
lahf
jl
mov
inc
xor
xor
inc
in
or
imul
aad
cwtl
arpl
pop
mov
repz
ret
xor
adc
insl
and
inc
dec
pop
int3
fbld
dec
cmp
xchg
mov
mov
xchg
fs
cmpl
dec
cmpsb
lahf
sbb
or
outsb
loop
pop
shrb
jno
cmpl
mov
fpatan
mov
test
mov
xchg
adc
outsl
push
or
mov
rcl
iret
arpl
ss
and
mov
push
xor
or
cmp
fiadds
stos
push
mov
aaa
adc
out
inc
outsl
or
inc
clc
clc
add
adc
cmp
mov
lret
adc
mov
xchg
arpl
cwtl
inc
push
jne
dec
adc
stos
inc
popa
push
push
addb
loope
mov
cmpsl
jno
into
fldl
insb
cmp
cmpsl
or
sbb
pop
push
loop
les
xor
loop
mov
in
push
loope
push
mov
cmpsl
sbb
je
mov
push
cli
cs
push
add
sbb
movsl
je
mov
lret
xchg
sub
xchg
pop
and
inc
gs
mov
insl
add
pop
test
jmp
adc
int3
jp
mov
pop
pop
cmp
adcb
sbb
and
rcll
lods
mov
and
out
mov
test
pop
cwtl
popf
sbb
lcall
scas
into
sbb
and
cwtl
cmpsl
lods
stos
push
imul
mov
shrb
jno
push
push
pop
cmp
cmp
aam
in
inc
rolb
pop
xchg
out
pop
hlt
jns
inc
xor
fisubl
sbb
movsb
jg
jae
xchg
xor
sub
sbb
jno
xorl
mov
mov
adc
rolb
sub
cmp
push
call
mov
dec
lcall
jo
cwtl
push
add
insb
lods
fcompl
dec
mov
je
into
mov
push
pop
add
xchg
fwait
sti
lret
xor
outsb
scas
xchg
movsl
jle
xchg
jle
dec
clc
popf
adc
dec
pop
jns
jge
adc
push
inc
mov
mov
mov
sub
xor
ret
mov
lahf
pop
and
in
jp
js
dec
mov
mov
leave
sbbb
sahf
fucomp
lcall
pop
mov
push
adc
xor
rolb
popw
mov
arpl
push
mov
mov
jle
adc
js
xchg
pop
dec
je,pt
orl
adc
dec
inc
lock
jmp
fmull
mov
mov
imul
push
adc
in
shl
pop
mov
std
rorl
mov
pop
or
fs
lds
lods
mov
pushf
sti
inc
dec
or
test
adc
mov
xor
or
mov
adc
mov
shl
insl
sub
shlb
and
fsubs
push
aaa
and
jmp
scas
mov
dec
xor
push
jns
sbb
jecxz
out
adc
jecxz
ja
and
mov
adc
push
imulb
pushf
out
xchg
adc
mov
outsb
inc
ss
mov
loopne
sub
mov
push
dec
add
pop
fisubs
lds
and
sbb
sbb
mov
out
test
shll
cmc
subl
xor
nop
push
and
hlt
adc
int
or
cli
add
and
push
sbb
iret
scas
pop
insb
mov
jl
les
xchg
call
lods
dec
mov
loop
stos
and
xor
inc
pop
jo
nop
push
xor
pop
imul
sbb
add
inc
and
sbb
lahf
pusha
in
adc
dec
lret
int3
into
pop
fadds
es
repz
cmp
in
sbb
inc
icebp
call
sub
dec
sub
jnp
sub
mov
mov
test
and
add
outsl
imul
rcrb
movsb
inc
dec
imul
and
ljmp
mov
idivb
aas
aad
popf
xor
mov
mov
mov
xor
loop
nop
sub
nop
xor
fwait
stos
dec
sub
popf
imul
add
sahf
pop
int
fmull
in
push
shll
xor
push
pop
fsubs
imul
mov
stos
pop
aam
lret
push
push
lret
xchg
adc
mov
mov
lcall
push
insl
int
shrl
les
push
andl
push
cs
and
adc
pop
out
pop
add
mov
rcl
aad
fildll
lods
push
xchg
and
jne
test
orl
and
cwtl
jb
int3
dec
mov
fcoms
and
dec
lods
pop
fwait
imul
mov
inc
lods
add
repz
cmp
nop
repnz
sub
into
cmp
sahf
jmp
inc
cwtl
je
rclb
gs
sub
or
or
and
popa
inc
mov
shlb
shll
mov
frstor
mov
pop
sbb
add
cld
aaa
pop
add
and
aas
cmpl
sub
imul
sbb
scas
out
rorb
xor
and
xrelease
int
mov
pop
fnstcw
incl
adc
or
mov
cmp
les
xchg
mov
inc
in
fiaddl
cmpb
sub
push
in
sbb
scas
jno
inc
xchg
nop
add
inc
fmuls
cmp
push
ret
scas
in
aas
and
mov
outsl
insl
test
mov
xor
pop
push
sub
pushf
cmp
std
pushl
icebp
mov
push
ds
mov
sub
mov
ljmp
mov
cmp
mov
jmp
test
out
add
mov
bound
add
push
or
fcoml
mov
jae
gs
mov
xlat
mov
int3
iret
mov
dec
sahf
mov
ss
pop
adcb
int3
addr16
or
cmp
add
orb
adc
xor
aad
pop
cmpl
pop
fiadds
aas
mov
push
lret
imul
push
mov
int
es
jnp
loop
test
mov
fs
sub
lock
lods
xor
repnz
imul
push
xchg
mov
cmp
mov
add
mov
xor
pop
shll
imul
ja
call
icebp
dec
cmp
mov
xor
std
call
nop
test
adc
mov
imul
mov
in
int
movsb
stc
sti
lock
mov
ja
fistpl
sbb
shrl
jecxz
jge
jne
adc
insb
or
inc
shrd
clc
sbb
sub
xchg
stos
xchg
out
mov
in
rcrl
dec
movb
pause
adc
and
sub
movsl
cmp
xchg
adc
fisttps
dec
dec
sbb
sbb
call
add
ljmp
or
rorl
and
xor
xchg
pusha
hlt
flds
push
divb
test
int3
lahf
mov
jl
jne
lcall
xor
adc
and
mov
sub
add
imul
in
loopne
sub
sub
mov
sub
pop
aaa
out
clc
adc
test
int3
pop
or
push
mov
test
sbb
test
mov
cli
pop
popa
test
inc
stc
pop
mov
mov
adc
stos
test
xor
xchg
lds
or
xor
outsl
test
pusha
xchg
popf
lret
rorb
xor
jo
mov
fstpt
ret
mov
sbb
clc
jmp
xor
dec
dec
push
pop
xor
inc
push
mov
inc
shlb
mov
scas
scas
and
notl
or
fucomp
loop
add
icebp
in
mov
stc
bound
pop
and
pusha
in
icebp
push
daa
dec
repz
loopne
test
in
punpcklbw
sbb
cmp
scas
or
je
adc
push
or
stc
and
or
fnstenv
push
add
and
jl
adc
enter
xor
ljmp
clc
test
xor
call
cwtl
das
mov
mov
mov
xor
pop
lahf
dec
mov
call
jmp
push
scas
or
mov
addr16
push
sbb
and
rcl
sub
dec
pop
fsubl
dec
sahf
rorl
or
fwait
push
mov
andb
mov
push
sbb
sbb
push
xor
pop
cmp
addr16
push
out
fldl
ds
outsb
aas
xchg
bnd
xor
lods
scas
xor
inc
sub
mov
popa
dec
push
adc
mov
adcb
shlb
gs
pop
in
add
inc
adc
cltd
mov
mov
push
aas
mov
xchg
sub
imul
mov
add
repz
push
repnz
cmp
push
mov
clc
push
mov
jl
orl
mov
push
ljmp
xlat
mov
jb
rorl
sub
pop
in
jp
xchg
pop
or
and
jg
sub
ljmp
stos
shll
out
inc
sbb
xchg
xlat
lahf
mov
jno
je
outsb
jo
fldenv
cmp
loope
nop
mov
imul
pop
sub
out
shll
add
pop
int
or
inc
out
cli
cli
jb
imul
lds
mov
lea
fstl
je
push
hlt
cmp
repz
lock
fmul
dec
orb
iret
dec
or
push
fs
adc
ret
lret
test
bound
add
fucom
out
and
xor
dec
jle
jle
push
dec
mov
cli
sbb
mov
mull
jecxz
movsb
call
pop
and
jo
nop
je
fadd
pop
imul
pop
fcomps
mov
pop
sub
andb
lahf
mov
nop
xchg
sbb
test
nop
movsb
mov
enter
jae,pt
jbe
lea
lret
lea
cs
aam
lds
adc
push
and
lock
icebp
dec
inc
jae
in
ret
sub
test
movsl
rorl
mov
mov
adc
daa
sti
and
movsb
pop
sub
cmpsl
or
mov
ldmxcsr
add
jbe
pop
rclb
xchg
jbe
mov
sti
lahf
sarl
test
jnp
and
xchg
push
xchg
in
fninit
movsb
cmp
fnop
leave
enter
dec
inc
fisubs
mov
pop
out
out
and
pop
fidivl
jge
gs
pushf
aaa
sarl
ja
inc
outsl
xchg
popf
frstor
inc
inc
dec
cwtl
xchg
scas
mov
scas
xor
jge
aam
pop
popa
jb
sti
sub
mov
cmp
mov
dec
mov
mov
inc
jge,pt
adc
es
adc
js
jnp
push
aaa
jp
mov
sahf
add
out
dec
test
bound
insb
lahf
mov
mov
add
sarl
lods
scas
faddp
arpl
mov
push
cli
sbb
and
push
and
jno
cmp
out
psubq
sbb
mov
xchg
mov
stos
ret
or
xorb
xchg
and
daa
nop
cmpb
and
das
jg
fwait
jbe
orb
dec
inc
mov
push
mov
sbb
ds
mov
xchg
cltd
in
js
gs
negl
mov
mov
je
loop
aas
popa
cwtl
lahf
sub
push
out
shll
ds
mov
pop
call
xchg
addr16
cmp
icebp
adc
mov
imul
stc
or
sub
lret
mov
jl
shr
lds
mov
lock
cmp
repnz
ja
xchg
out
pushl
in
fneni(8087
mov
jns
xchg
pop
lock
cli
cltd
das
out
jns
mov
and
sarl
nop
or
push
dec
push
cmp
rclb
lcall
push
sbb
xor
hlt
testl
inc
push
dec
cmp
adc
sbb
jns
and
mov
inc
or
cmp
inc
xchg
data16
sbb
stos
test
aas
xor
and
xorl
inc
imul
lds
mulb
outsl
adc
mov
inc
mov
std
push
cmp
pop
xlat
adc
aas
mov
xor
inc
fistl
daa
add
int
jne
pop
mov
or
xchg
sbbb
out
mov
idivb
int3
imul
add
test
arpl
out
aas
adc
rcr
in
js
out
or
lods
dec
insb
push
pop
jle
rcr
and
fwait
pop
insl
test
rorb
mov
mov
leave
lret
call
cmp
inc
push
add
jge
pop
xor
stc
cmp
cmp
dec
loope,pn
sbb
mov
sub
push
rep
mov
pop
jg
adc
dec
fisubs
dec
xor
pop
cmp
xor
insl
pop
sbb
inc
orl
ret
cmp
aam
dec
sub
push
cwtl
in
mov
xchg
add
mov
into
adc
jecxz
pop
clc
sti
jmp
or
fwait
and
test
pop
xchg
out
fisttpll
xor
add
pop
mov
pusha
js
xorb
xor
movsl
xor
adc
pop
fcoms
inc
pop
lods
fistpll
or
mov
adc
sub
pop
or
mov
aad
pop
fadds
cltd
add
push
xor
jge
mov
adc
inc
or
push
cmc
xchg
jnp
call
mov
mov
sub
dec
adc
mov
aas
xor
jge
dec
fldcw
mov
or
jmp
enter
pcmpeqw
aaa
js
shlb
inc
les
dec
nop
jp
ret
mov
clc
adc
andl
lock
int
jecxz
lret
sbb
enter
xchg
lods
pop
cmp
mov
ss
stos
mov
push
rcl
fisubrl
fcoml
jae
enter
adc
pop
shrl
or
fnsave
pushf
repnz
outsl
fstpt
movsb
out
mov
insl
fcmovnu
test
cmp
push
push
xchg
fsubp
cli
add
mov
ficoms
stc
pop
or
sbb
cmpsl
outsl
push
or
lret
push
shlb
and
lea
dec
mov
arpl
xor
mov
mov
mov
lcall
inc
xchg
dec
push
push
lods
decb
jno
push
and
in
inc
push
shlb
shl
test
mov
test
cli
cld
in
and
and
or
and
imul
sarb
ret
fldcw
lock
in
rclb
sbb
enter
push
outsl
lahf
sbb
arpl
imull
and
xor
ja
fnsave
sbb
mov
loopne
cltd
mov
sbb
mov
shll
cmpb
loope
sub
mov
add
xchg
jo
push
inc
or
sub
jne
enter
or
dec
sbb
movsb
leave
pop
sub
push
pop
mov
pop
int
dec
mov
or
punpcklbw
iret
mov
mov
xchg
jo
cmp
or
mov
in
jmp
mov
dec
mov
mov
rorl
setno
inc
ljmp
subb
std
mov
rcrb
pop
or
mov
test
cmp
repz
aam
ret
sub
popa
push
push
cmpsb
mov
stos
imul
iret
lcall
jae
mov
sub
cmp
aaa
mov
daa
mov
sub
stc
rolb
pusha
push
xor
rcll
or
ljmp
adc
sbb
sbb
inc
lods
in
push
dec
push
mov
movsb
sub
xchg
jmp
jp
inc
and
cmpsl
daa
cmp
dec
ja
mov
pop
stos
into
stos
adc
test
pushf
jns
daa
loope
mov
es
sbb
fxam
fwait
ds
jmp
push
cli
push
ds
add
sbb
test
cmp
xchg
push
imul
rol
aam
aas
jae
jbe
insb
imul
push
xor
shll
orb
push
jg
push
mov
cmpsl
ss
sar
loop
cld
fwait
pop
out
pop
stc
andb
mov
mov
dec
push
ss
adc
loopne
sub
in
inc
mov
out
cs
push
jmp
loope
pushf
push
out
mov
loopne
mov
in
jae
mov
daa
mov
aaa
inc
addr16
xorl
icebp
sbb
push
jae
jg
int
dec
daa
je
movsl
xchg
orb
nop
mov
outsb
mov
jmp
ret
inc
sbb
pop
sbb
sbb
bound
out
pop
out
fsub
push
push
test
jns
lcall
in
mov
hlt
pop
call
imul
dec
addr16
cld
mov
pusha
in
push
cmp
roll
sbb
loope
stos
or
mov
mov
cs
addr16
jo
lret
out
adc
add
insb
or
dec
xor
int
loope
out
add
push
imul
jno
insb
push
out
hlt
loop
into
popa
cmp
push
jae
inc
out
xchg
lldt
jmp
xchg
pop
imul
lcall
aam
pushf
jbe
mov
dec
xlat
pop
push
pop
sbb
cmpsl
inc
into
pop
testl
jne
subl
xor
je
pop
pushf
or
fwait
rclb
aam
mov
fmuls
addl
push
mov
or
pop
cltd
jmp
sbb
sbb
push
push
lcall
cmp
pop
push
xlat
push
popa
popa
lcall
out
xchg
mov
mov
add
fadds
sahf
mov
pop
push
adc
pop
ret
mov
and
sbb
jle
rcrl
mov
lods
mov
xchg
in
iret
insb
mov
adc
test
pushf
negl
cltd
adc
jb
add
mov
outsl
ds
mov
and
jle
jecxz
adc
js
xchg
call
gs
mov
lods
xor
xor
es
sbb
femms
ja
je
insb
adc
test
imul
pop
loopne
mov
xor
adc
dec
jb
adc
in
out
push
mov
jne
cmp
and
xorl
push
int
mov
pop
jle
and
add
das
jne
dec
insb
push
sbb
or
or
mov
xchg
imul
xchg
bound
inc
push
test
pushf
nop
popa
fmull
ret
js
insb
cmp
test
or
pop
sub
xchg
fucom
adc
push
daa
bts
add
mov
bound
jno
out
sahf
cmp
mov
push
or
lret
loopne
mov
ficomps
adc
fcompl
ret
pop
push
fisubrs
mov
les
ja
mov
jns
lock
je
mov
mov
mov
push
out
cmp
dec
stos
xchg
xchg
and
sbb
call
and
adc
repnz
test
cli
jne
in
cmp
loope
enterw
test
and
inc
pop
mov
adc
shrl
push
lahf
xor
mov
xchg
mov
out
lret
clc
push
sub
dec
mov
jae
mov
push
xchg
mov
xor
sub
sub
lds
push
pop
xchg
mov
faddl
insb
cld
fwait
mov
push
xchg
stos
mov
mov
clc
out
push
lods
ja
adcb
mov
or
test
loope
mov
push
pop
lock
ja
sub
mov
pushl
scas
stos
sub
pop
add
mov
test
mov
sbb
daa
push
jo
dec
subb
push
repnz
mov
xchg
dec
mov
or
mov
add
push
push
inc
cs
push
ljmp
test
test
dec
out
cmp
sbb
adc
push
xor
lret
movsb
daa
int3
lods
jp
roll
aad
xor
insb
xchg
ljmp
leave
add
sbb
inc
and
cmp
cmp
xlat
jo
lea
fstl
push
mov
mov
pop
push
sub
sub
imul
mov
inc
add
mov
ss
push
dec
adc
and
loope
ss
popa
ficoms
push
fldenv
mov
mov
bound
mov
movsb
dec
inc
xchg
outsb
fwait
inc
cld
push
xchg
cmp
dec
mov
dec
pop
and
lret
jmp
jg
xor
pop
out
out
mov
jbe
pop
dec
iret
lcall
pop
sbb
aam
and
outsl
add
jae
jnp
std
mov
addl
cld
sti
int3
adc
jle
mov
cmp
or
push
sub
inc
cs
adc
scas
push
cs
add
hlt
pushf
mov
cmp
mov
es
adc
movb
in
lret
or
or
mov
rcrl
fsubs
ljmp
xchg
jne
add
adc
imul
adc
and
mov
in
fbstp
jle
cmp
insb
popf
and
pop
jecxz
mov
add
cmp
ljmp
cmp
mov
mov
in
push
adc
cmp
mov
dec
or
es
mov
stos
es
mov
inc
jno
cli
pop
rolb
test
push
imul
lds
and
into
mov
std
shrl
mov
dec
mov
push
jecxz
jne
push
in
lds
andl
jns
cmpsb
mov
push
jle
sti
je
call
pop
adc
cmc
jbe
insb
ficompl
push
scas
xlat
sbb
add
mov
mov
icebp
add
shrl
mov
or
cltd
mov
mov
int
mov
test
rcr
maskmovq
testl
loopne
orb
int
cs
lahf
andb
pop
cmp
sbb
or
jne
cmp
addr16
inc
movsl
inc
sbb
inc
cmp
cmp
jle
xchg
lret
inc
inc
mov
sub
add
ds
and
and
lods
lret
mov
xor
xchg
ftst
outsl
std
jnp
xchg
sti
aad
mov
push
mov
and
xor
push
sbb
xor
fistpl
into
jne
add
cmp
mov
inc
jno
loopne
stos
adc
pop
es
cli
cmp
pop
sub
cmp
bnd
xchg
xchg
and
jnp
xchg
mov
fidivl
hlt
dec
test
adc
inc
and
mov
js
mov
mov
add
mov
stos
add
jns
iret
or
pop
xor
push
push
dec
sub
add
shll
mov
mov
fwait
pop
gs
jns
jb
lds
loope
int3
mov
negb
push
test
lcall
mov
popf
loop
pop
out
sub
add
popf
cld
scas
xchg
jb
repnz
add
and
xchg
xor
sarb
inc
rclb
jmp
lds
pusha
jnp
xchg
int
add
mov
int3
jg
shr
rol
dec
out
fcoml
lds
add
push
push
stos
rorl
sti
cmp
sbb
sbb
jb
pushf
loope
adc
aaa
jl
sub
leave
cmp
clc
test
cwtl
mov
add
inc
inc
ja
jmpw
jmp
xor
xchg
dec
mov
loop
cmc
pop
or
lock
cs
dec
dec
test
clc
scas
push
rol
sbb
fsts
fdivl
mov
push
xor
int
mov
lret
in
arpl
jno
jmp
mov
dec
movsb
popf
or
sub
dec
or
mov
and
cmc
leave
aad
cmp
hlt
dec
cmp
insb
ret
pop
aad
stc
leave
mov
cmp
cmp
adc
stos
lea
mov
push
leave
sbb
add
fmul
outsl
pusha
mov
and
cmpsb
jmp
lds
in
jmp
leave
inc
enter
push
inc
test
xchg
inc
xor
dec
push
test
mov
cltd
xor
inc
ficoms
sbb
xchg
stos
fs
and
xchg
mov
leave
int3
in
jp
xchg
sub
movsb
push
mov
incb
movsl
mov
mov
sti
cmpsb
push
and
outsb
pusha
lret
out
movsb
adcl
cltd
and
mov
inc
add
icebp
jecxz
push
repz
push
mov
sti
call
cltd
aaa
fistpll
adc
xor
jl
outsb
test
and
and
cmpl
pop
cmp
push
jo
es
fimull
cld
mov
or
loop
movsl
fisubrs
jp
sbb
push
or
mov
xchg
ljmp
push
lret
lds
cmp
lcall
leave
push
sbb
dec
push
popa
xchg
repnz
jbe
xorl
subb
cltd
int
aaa
xor
jecxz
jge
pop
jle
rcll
shl
jnp
xor
jno
imul
adc
cmp
insl
mov
cmpsl
dec
mov
cmp
jnp
inc
xchg
push
fidivl
jo
test
sbb
in
pop
pop
call
add
imulb
cmp
hlt
xchg
xor
cs
into
xchg
test
xor
mov
pop
dec
sti
cmp
popf
pop
or
pusha
daa
je
push
bswap
dec
mov
jbe
xor
lods
loope
mov
mov
sub
in
leave
pop
jmp
cmp
inc
sub
xlat
cmp
movsl
loopne
repnz
cmp
push
push
mov
lret
mov
mov
je
cmpsl
push
adc
jb
push
pop
movl
xlat
push
or
pop
rcll
ficomps
jbe
js
sbb
or
xchg
mov
dec
into
mov
xchg
mov
shll
jecxz
mov
aad
mov
pop
and
mov
ja
jcxz
test
fincstp
ret
in
dec
mov
sub
inc
add
sahf
call
mov
and
mov
movsl
imul
fwait
jge
mov
pop
and
in
sti
and
sub
mov
xor
pop
sbb
sbb
in
inc
testb
rcrb
loopne
cs
lahf
dec
jl
push
xlat
push
addb
stos
fadd
rcrl
enter
push
jnp
cmc
pusha
add
shlb
xchg
and
ret
lret
mov
movsl
imul
adc
stos
mov
mov
lods
push
dec
xlat
or
je
cmpb
shl
mov
mov
call
imul
jns
fmull
adc
mov
sarb
fdiv
xchg
fsubrp
movsb
cmp
fisubl
xchg
cld
jecxz
xchg
ds
push
loope
sub
enter
sbb
lods
scas
leave
pop
clc
loope
xchg
or
push
push
xchg
cmpl
pop
jl
push
jp
sub
inc
es
insl
lahf
pushf
pop
leave
lock
xor
sbb
int
push
aam
mov
adc
sub
lock
push
and
pop
jae
cli
sub
pop
xchg
sbb
and
mov
pop
int
push
insb
xchg
add
pop
in
adc
cmp
div
xchg
jl
jo
mov
or
ret
sub
es
jle
xchg
repnz
lock
inc
xor
scas
sbb
push
xchg
sub
movsb
shrb
lods
sub
mulps
sub
fistps
cltd
call
in
xchg
outsb
xchg
dec
cld
jmp
cmp
sub
mull
dec
dec
lods
in
mov
and
testb
jmp
lods
jnp
jbe
and
out
mov
test
sub
cmp
imul
fildl
fstps
outsl
cld
and
int
and
sarl
test
rcll
cmpsl
lock
adc
mov
dec
testb
sbb
pushf
jnp
sarb
out
mov
rorb
sub
jl
mov
shll
and
imul
arpl
leave
mov
mov
shlb
in
sub
fcomip
xor
mov
cld
sub
in
testb
push
jecxz
xor
pusha
fsubrs
ret
push
out
adc
ds
mov
adc
jmp
mov
outsb
dec
bound
ror
les
sarb
dec
aad
sbb
push
xchg
js
jno
rcll
mov
add
lcall
pop
in
outsb
xor
push
mov
mov
push
jmp
mov
mov
mov
ss
lahf
xchg
mov
xchg
dec
adc
xor
ljmp
jns
hlt
xor
xchg
push
lods
negb
fstps
loop
rcr
out
enter
mov
repnz
xchg
inc
popf
jo
movsb
insl
push
pop
idivb
mov
cmc
dec
into
ja
xchg
sub
pop
shrb
daa
adc
jmp
cmc
xor
sti
addr16
or
push
cmpsl
mov
rorl
test
fldcw
mov
push
mov
pop
inc
fnstcw
in
or
inc
dec
scas
cmpsb
pop
das
ja
xor
outsl
inc
addr16
push
test
fs
and
jbe
xor
cmp
jo
jno
jb
mov
mov
stos
pusha
or
adc
jbe
xchg
push
sahf
mov
or
pop
xor
inc
fildl
fnsave
and
mov
inc
push
adc
pop
iret
gs
or
xor
stos
sbb
mov
pop
test
jbe
sub
dec
mov
mov
in
fwait
adc
jp
imul
lahf
repz
popf
hlt
repnz
and
xchg
push
mov
mov
fadd
out
aam
add
or
inc
outsl
xchg
jns
mov
sbb
out
and
xchg
and
shlb
cmp
out
and
pop
mov
addb
gs
mov
lods
xorb
ja
scas
inc
or
push
ss
les
out
addr16
iret
pusha
dec
loopne
lods
sbb
inc
out
loopne
mov
loop
popa
scas
aad
mov
inc
sub
out
pop
or
cltd
divl
and
pop
xlat
test
orb
ret
xchg
cmpsb
pop
jno
dec
push
add
jg
fdivrp
fistpl
dec
lret
pop
andb
cmpl
call
dec
loope
fdivl
clc
iret
xchg
mov
cmpsl
ljmp
orb
aam
add
fwait
mov
and
fwait
lahf
jne
sub
dec
xchg
ret
sub
test
push
lds
shll
lahf
xchg
aas
mov
ss
popa
and
mov
pop
dec
dec
inc
shll
pop
sbb
scas
xor
mov
mov
jl
dec
aam
jbe
mov
and
dec
out
mov
in
or
sub
xor
cld
das
push
fidivrs
fstpt
insl
xor
xchg
adc
inc
sub
aad
insl
push
fs
add
pop
adc
ja
outsl
sub
push
mov
and
jno
bound
fnsave
jecxz
jge
jo
or
sarb
dec
cld
sbb
in
mov
std
pop
flds
fs
aam
xor
inc
clc
int
cmp
pop
push
xchg
mov
aaa
pop
loopne
mov
inc
pop
je
push
outsb
scas
nop
je
cld
ret
int
movsb
sub
sahf
inc
adc
jnp
dec
add
pop
loopne
push
fcompl
push
pop
xor
mov
jne
xchg
sub
dec
sbb
enter
dec
fnstcw
add
ret
call
popa
pop
jno
mov
add
xor
inc
test
jmp
mov
aam
xchg
outsl
stos
adc
cmp
sarb
fisubrl
ret
add
call
add
iret
and
xor
cwtl
cmpb
test
ffree
jno
test
xchg
xor
orb
popf
in
mov
add
sub
xor
roll
or
cmp
fadds
dec
adc
lock
nop
lea
dec
scas
ss
movsl
lcall
sub
aaa
call
mov
insl
inc
jge
mov
xor
clc
pop
adc
inc
dec
mov
popf
cmpsl
shr
jg
int3
mov
mov
aad
mov
cmp
sbb
sbb
icebp
sti
outsl
int3
cltd
fdivr
mov
xchg
inc
push
dec
push
mov
arpl
add
fidivl
pop
push
fnstcw
sbb
push
repnz
xchg
mov
and
xchg
sti
ljmp
xor
pop
ljmp
jnp
scas
and
push
mov
jno
pushf
jp
jne
sub
addr16
or
daa
lret
aad
int3
enter
cli
in
jno
cs
push
dec
jge
outsl
lcall
push
dec
movsb
jns
outsl
mov
cmp
sti
sti
mov
push
daa
leave
jl
and
frstor
jno
out
faddl
movsl
stos
mov
int3
aad
fmul
ljmp
arpl
das
out
push
add
fldcw
popf
push
mov
fldcw
test
je
fistpll
rol
dec
pop
mov
hlt
and
mov
or
sub
dec
mov
xlat
add
push
leave
inc
push
cmp
imul
mov
mov
pushf
cmp
std
icebp
jle,pn
mov
sarl
out
xor
push
addr16
inc
imulb
sbb
cmc
stos
aam
lahf
int3
adc
push
imul
jmp
add
pop
lock
cmp
jae
jge
mov
adc
je
js
adc
sbb
adc
mov
leave
fistl
mov
sarb
xchg
dec
xor
test
xchg
cmp
pop
jne
lahf
push
lds
add
int3
cli
adc
add
mov
mov
and
mov
testl
bound
xchg
aad
popa
inc
lods
jmp
mov
xchg
call
push
or
or
stos
jnp
mulb
aaa
in
popf
adc
push
imul
and
and
inc
sbb
pop
sub
shll
mov
inc
and
or
test
pop
test
outsl
cmpsb
adc
inc
jle
jns
mov
xchg
clc
sbb
inc
sbb
and
cmp
loopne
xchg
lds
iret
cld
add
aad
movsl
stos
and
cmp
dec
lret
es
in
or
inc
pop
iret
fwait
jae
dec
xchg
out
xchg
test
sbb
out
fidivs
push
mov
push
push
shlw
jnp
cmc
fwait
les
cwtl
xor
dec
push
and
xchg
icebp
xor
sahf
stos
out
lahf
xor
mov
sbb
fsubs
cmp
mov
dec
lods
jne
mov
fadds
xor
loope
pop
loopne
push
cmp
pop
insb
dec
ljmp
and
xchg
iret
lock
mov
or
dec
mov
mov
sbb
xchg
stc
lea
dec
sub
dec
push
mov
mov
movsb
push
gs
adc
inc
movsl
sbb
cmpsb
rolb
mov
pop
inc
icebp
fstps
popa
lcall
mov
in
sub
adc
or
xchg
cmp
ret
divb
mov
ja
sti
sbb
shrb
pop
enter
cmp
push
xor
in
movsb
jge
ds
mov
daa
jb
je
jge
xchg
inc
gs
lock
mov
les
cmp
ljmp
sbb
enter
fnstenv
clc
divl
xchg
jo
jno
add
mov
sbb
je
adc
insb
roll
popf
es
in
lret
jmp
insb
clc
ret
int3
outsb
xchg
int3
push
dec
nop
and
lret
push
mov
ficoms
cmp
xlat
sub
inc
iret
iret
test
or
push
sbb
outsl
cmp
pop
movsb
add
mov
js
shrb
xchg
stos
sti
and
movsb
ret
add
das
insl
ljmp
or
arpl
ljmp
pop
pop
in
loop
sbb
not
faddl
sub
in
popf
and
pop
fldl
xlat
out
rorb
mov
push
daa
hlt
daa
cmp
add
std
jmp
push
pop
adc
jp
inc
jg
rcrb
adc
pop
xor
daa
sbb
dec
test
hlt
pop
adc
cmp
ds
mov
cli
leave
addr16
hlt
outsb
std
pop
aas
add
test
adcb
cmc
xor
mov
and
and
icebp
movsb
data16
jnp
dec
inc
lea
mov
lcall
mov
addb
sbb
sub
mov
sbb
jb
mov
insl
jl
cld
inc
lods
ljmp
flds
aam
out
dec
mov
test
ss
int3
lods
insl
push
xor
shlb
bound
cmp
mov
fstpl
in
pushl
jmp
push
adc
pop
fildl
popa
hlt
fwait
pop
je
adc
add
int3
add
gs
adc
aam
cmp
jp
adc
or
push
xlat
arpl
sub
cwtl
adc
jle
clc
leave
in
mov
stos
pushf
mov
lock
outsb
jo
loop
push
mov
les
xchg
jnp
mov
mov
mov
mov
scas
mov
lds
push
fdivrs
ja
jmp
jae
dec
lahf
mov
pusha
imul
sahf
adc
call
fildll
arpl
or
mov
outsl
pop
inc
mov
or
push
sub
pop
push
mov
clc
stos
mov
int3
pop
jbe
add
xlat
jnp
adc
mov
lret
jae
js
sarb
push
mov
mov
lcall
ret
mov
out
dec
add
push
fistps
xor
xchg
push
pop
sbb
push
xlat
les
dec
roll
int3
add
adc
xchg
pop
aad
mov
xchg
push
ret
sahf
jmp
adc
mov
das
mov
xchg
lods
repz
jl
cmp
xchg
test
or
lds
sbb
popa
jnp
or
sub
cmp
push
xor
mov
hlt
rol
insl
pop
bound
xor
call
fildl
in
jg
pop
mov
jle
outsl
jmp
push
jo
push
lods
pop
mov
dec
jmp
imulb
pop
dec
sbb
sub
mov
into
jo
iret
sbb
fsubs
push
es
jge
jg
push
lea
mov
in
imul
jp
pop
adc
call
pop
loop
push
xchg
sbb
imul
icebp
jmp
cmp
subb
xor
jle
sbb
xchg
xchg
adc
ret
imul
push
mov
and
shlb
ja
dec
inc
outsl
mov
xchg
in
cmpsl
push
dec
and
jg
mov
pop
fdivl
das
mov
jmp
xor
mov
add
aam
scas
push
inc
jge
push
xor
ja
cmp
repz
test
jnp
push
push
sub
clc
add
mov
imull
lcall
push
push
inc
rol
scas
leave
popa
enter
or
scas
fdiv
mov
push
aad
int3
and
fldt
jg
lret
fsubrs
push
inc
jecxz
fs
call
sub
cmc
jns
test
das
test
jg
xchg
int3
sub
out
repz
add
cltd
pop
aaa
xor
xchg
pop
xchg
outsl
mov
pop
iret
rorl
push
sbb
adc
sarl
jae
jge
or
sub
and
or
test
cs
xchg
in
clc
adc
inc
mov
cmp
movsl
cwtl
dec
cld
cmc
add
subl
dec
adc
cmpl
fadd
xor
cld
in
fsubl
pop
rcll
pushf
jecxz
mov
or
push
sub
iret
push
pop
add
mov
xchg
negb
jl
pop
mov
js
scas
mov
out
stos
cmpsl
nop
or
mov
add
cmc
scas
scas
mull
and
or
inc
imul
jge
dec
movsl
jecxz
gs
cmpsl
pop
adc
mov
sub
insl
lock
adcl
mov
adc
aas
add
sub
aam
sarb
out
xchg
addr16
mov
jg
cld
mov
push
inc
sti
lock
jbe
mov
mov
lock
mov
sub
loope
and
xor
stos
inc
jae
xchg
lock
fs
outsl
stc
cmp
mov
mov
pushf
fbld
push
shlb
insl
add
mov
jae
and
or
mov
popf
add
pop
xorb
ja
xor
sub
sbb
jecxz
or
gs
pusha
in
insl
test
jge
sub
and
clc
pop
cli
nop
mov
xor
xrelease
outsl
loop
mov
sub
fsts
cmp
inc
lret
mov
rorl
push
and
jmp
push
xchg
jp
mov
xchg
pop
cmp
fwait
iret
nop
arpl
insb
cli
mov
daa
mov
rcr
repnz
xor
pushf
pop
push
mov
in
inc
movsb
push
push
sbb
mov
push
xchg
xor
in
dec
push
and
xor
sti
sbb
mov
out
xchg
loope
loop
ds
arpl
sub
mov
into
stos
ret
std
lds
popf
outsb
inc
fs
movsl
jno
pop
insl
enter
int3
add
ja
lods
mov
lock
dec
pop
or
inc
mov
jmp
dec
pop
mov
jbe
xchg
mov
mov
sub
lahf
sub
push
movsl
in
push
fwait
cli
outsb
pushf
sub
ljmp
cmpsb
add
or
lods
notl
pop
fbstp
in
sub
int
je
cmp
addr16
push
rolb
int3
lret
dec
daa
inc
cmp
fwait
sub
popa
test
adc
in
mov
movsb
fisubs
sarl
dec
jg
lods
xlat
sti
sahf
mov
ss
popa
jmp
mov
fisttpl
pop
pop
xchg
xchg
das
pop
push
pushf
push
ds
sub
mov
or
sar
cld
sub
jl
stos
dec
sub
push
fsubrp
cmp
repnz
xor
notl
push
daa
cmp
pop
cmp
jb
imul
icebp
mov
mov
inc
cwtl
in
test
xchg
cmovge
sub
arpl
mov
stos
or
outsb
test
mov
into
into
cmc
data16
clc
and
xchg
cmc
repz
mov
je
mov
jmp
outsl
jns
jbe
push
mov
cmp
insb
pop
fs
xor
imull
xchg
cltd
cmp
icebp
xor
jb
xchg
fnstcw
sahf
jbe
push
cmp
add
jns
mov
sub
outsl
lock
mov
sub
xchg
sub
test
bound
mov
fwait
jb
push
inc
arpl
int
adc
and
notb
sbb
cs
or
pop
sbb
dec
and
xchg
xchg
in
ds
mov
inc
xor
out
dec
jle
and
mov
cltd
pop
mov
jp
cmpsb
mov
lock
mov
sub
ss
push
add
movsb
fmul
aam
cmp
cmpsb
sub
jge
xor
and
push
cmpsl
push
hlt
lods
test
cmp
mov
fwait
dec
sub
mov
adcb
scas
add
loop
fldt
jge
mov
call
jns
and
stos
push
enter
mov
js
pop
push
jae
pop
lahf
lret
or
inc
nop
shrl
loopne
outsl
not
pusha
outsb
jecxz
mov
and
mov
aas
jl
shlb
mov
pop
mov
std
push
pop
mov
sbb
pop
daa
inc
or
test
dec
nop
xchg
negl
out
mov
mov
or
les
inc
push
push
mov
clc
mov
dec
inc
lcall
inc
push
test
shrb
repz
popf
inc
dec
mov
xchg
lods
daa
popa
lods
call
xchg
and
int3
xchg
xchg
popf
in
mov
sbb
jbe
imul
popf
jo
sub
fstpl
jns
push
jb
lds
out
roll
loope
orb
out
std
add
cmp
lods
lcall
lods
es
adc
mov
mov
fldcw
sub
mov
cmp
jle
mov
or
mov
stc
pop
xchg
pop
xchg
and
sub
stos
dec
scas
and
sub
push
mov
shlb
in
adc
xorb
dec
jb
mov
iret
and
jecxz
push
dec
adc
cmpsb
fidivrl
pop
es
push
xchg
pop
insl
xchg
ljmp
es
pop
fdivrl
mov
sbb
pop
aas
scas
cmp
inc
sbb
add
loopne
xchg
adc
enter
push
push
es
and
adc
ss
je
sub
repnz
mov
add
addl
out
out
fisubl
inc
add
push
dec
outsb
mov
or
jl
adc
mov
iret
int3
cmpsl
jns
daa
repz
pop
pop
pop
in
ljmp
add
xor
scas
jb
push
popf
arpl
mulb
pushf
ret
stc
sub
push
out
adc
fcomps
arpl
jns
repz
cmp
xchg
in
popf
xchg
sub
es
les
push
sub
mov
mov
sahf
and
jecxz
or
mov
out
mov
in
repz
aam
push
out
mov
mov
aam
jb
and
mov
call
xchg
scas
or
xchg
in
mov
vunpckhps
add
mov
xor
shr
jnp
movsb
mov
jge
out
fmulp
dec
lcall
cmp
sub
xchg
mov
fwait
lahf
xchg
sub
scas
leave
lea
xor
outsl
fistps
mov
mov
inc
xchg
icebp
loope
mov
filds
mov
or
mov
cmp
pop
faddp
sub
sub
int
jle
test
jns
mov
cmp
arpl
addr16
loope
adc
push
out
sub
stos
cmpsb
add
jmp
cmp
jg
or
lock
jle
mov
paddw
into
mov
or
fldt
lock
mov
pop
hlt
and
es
or
fbld
dec
jb
push
xchg
clc
lcall
repz
nop
inc
fsubr
repz
push
std
jnp
mov
ss
out
int3
dec
xchg
movsl
cmpsl
mov
adc
mov
xor
push
out
cmc
ret
jns
test
mov
sbb
cmp
mov
sbb
and
add
sarb
dec
mov
and
dec
pop
xor
or
jge
int3
xor
idiv
dec
xchg
mov
sbb
or
int3
fucomi
fsub
rep
lds
jge
pushf
pop
or
sbb
lcall
inc
stos
in
xor
adc
mov
loop
jnp
bswap
mov
arpl
sbb
incb
or
add
xchg
dec
push
iret
mov
fdivl
cmp
shlb
sbb
dec
xor
inc
jo
xor
sbb
push
paddq
or
test
adc
push
lock
push
aam
mov
ljmp
addr16
cmp
ljmp
ds
loop
xchg
arpl
pop
jecxz
adc
fs
mov
stos
gs
scas
sti
pop
mov
mov
test
sbb
js
mov
orb
jge
loop
adc
jle
enter
in
bound
loopne
sbb
outsl
sbb
loope
lret
mov
cmc
sub
sub
and
mov
lret
hlt
sub
add
incl
mov
imul
sbb
sbb
xor
push
and
pushf
push
cmp
js
dec
popf
jp
xlat
mov
pop
popf
and
out
aad
cmp
xor
or
les
jge
push
push
mov
lret
push
mov
sbb
sahf
mov
jp
add
jnp
push
pop
push
movsl
pop
enter
fdivs
push
inc
sub
in
sahf
cmp
jns
out
and
push
adc
rcrb
out
jmp
mov
ss
movsb
jge
dec
loopne
mov
das
sbb
popf
jge
or
pop
enter
push
adc
or
adc
imul
push
scas
in
push
in
outsl
repnz
push
cli
lahf
negl
int3
sbb
testl
inc
in
stos
jmp
stos
lds
jmp
cld
cli
btr
inc
and
lods
dec
mov
aaa
cmp
test
inc
dec
mov
push
adc
loopne
out
popf
stos
mov
fisttpll
out
popa
adc
xor
sub
pop
fwait
mov
mov
pop
out
lea
push
jge
push
fstpt
dec
push
and
add
jecxz
xor
arpl
ss
ja
push
mov
push
movsb
and
xchg
sbbb
mov
es
mov
movb
sub
imul
jle
popfw
add
or
arpl
mov
jge
daa
aad
mov
bound
lock
cmpsl
fidivrs
sub
lret
xchg
adcl
cmp
sahf
faddl
sbb
gs
adc
xchg
cwtl
xchg
mov
sbb
xchg
dec
loope
arpl
cmp
jae
or
and
mull
mov
push
push
jmp
or
lods
push
sbb
mov
mov
out
jecxz
rorb
pop
mov
cld
leave
dec
inc
pop
push
test
and
and
fisubrs
jecxz
sub
mov
std
push
outsb
fstl
pop
cmp
pop
cli
dec
adc
cwtl
adc
mov
mov
imul
mov
push
jmp
mov
push
adc
fisubrl
sub
fs
sbb
in
pop
aaa
rcrl
aas
xchg
test
iret
inc
xchg
enter
cmp
mov
movsl
in
mov
and
mov
out
ds
aaa
or
std
insl
jmp
mov
pop
mov
mov
push
jno
inc
aad
adc
xchg
mov
mov
out
mov
cmc
add
lods
stos
dec
rolb
outsl
enter
mov
out
repnz
lock
in
adc
out
or
push
xorb
aam
icebp
fs
ss
enter
sbbb
add
vmread
ffreep
mov
add
std
pop
nop
and
iret
rclb
dec
cli
mov
leave
mov
lock
mov
cmp
ds
and
dec
call
adc
add
into
push
jns
sbbb
mov
adc
arpl
scas
or
push
mov
loopne
mov
or
xor
add
and
push
inc
or
outsl
push
cmp
jae
adc
push
icebp
xchg
pop
aam
mov
lahf
cld
push
dec
int
enter
std
jge
aad
outsl
shlb
xchg
push
daa
jle
test
push
and
jp
push
or
aas
xchg
scas
sub
dec
ds
xor
std
xchg
mov
pop
dec
inc
out
gs
push
adc
jg
mov
es
xchg
cld
adc
or
mov
push
gs
in
lcall
ret
loope
mov
data16
push
jb
in
xor
mov
or
mov
xor
pop
and
cmp
mov
and
jp
stc
inc
xchg
pop
push
adc
lahf
or
bound
mov
xchg
xlat
push
pop
addb
lcall
xchg
pop
stos
cmpsb
dec
popf
lcall
mov
call
xor
shlb
lods
cmp
pop
dec
in
arpl
xchg
jge
nop
cmc
out
or
idiv
int3
push
jle
xchg
cmp
popa
lret
lcall
inc
movsl
push
mov
fldcw
lret
jmp
fdivrl
xor
mov
pop
jl
adc
or
cs
xchg
out
add
xchg
div
repz
arpl
add
mov
adc
lods
mov
push
jae
xor
test
test
rcll
xchg
and
jecxz
lds
adcb
jecxz
cmpsl
cmp
xor
mov
xchg
and
pop
in
mov
lahf
mov
fdiv
xlat
pop
paddusb
or
test
fucom
lock
jns
adc
mov
sbb
mov
and
loope
dec
das
mov
cmovne
lret
test
pop
add
int3
pop
out
int3
mov
aas
jle
jp
add
jns
sub
pop
cmpsb
out
pop
lea
test
clc
xor
xchg
or
lret
loop
pop
mov
cmp
inc
mov
pusha
cmpsl
sahf
inc
mov
push
test
popf
std
inc
pushf
int
cmpsl
cld
popa
jo
pusha
push
mov
sbb
loop
mov
xchg
imul
add
jg
sbb
insb
jp
bound
cs
pusha
inc
iret
push
cmp
xchg
mov
lret
lcall
push
shlb
mov
lock
sub
pushf
dec
xchg
fcoml
shlb
push
inc
pop
test
push
pop
lret
jecxz
push
sub
aas
stc
pop
sbb
cmpsb
or
add
dec
or
or
mov
aaa
leave
mov
mulb
icebp
cwtl
jbe
lcall
push
gs
push
xchg
push
stos
jne
cmc
dec
leave
dec
push
mov
mov
push
test
xchg
nop
loope
popa
call
rol
sti
and
dec
sahf
jnp
rol
push
addr16
jns
inc
pop
jmp
data16
and
scas
data16
add
cwtl
xor
imul
iret
cmp
sbb
push
xchg
into
push
dec
dec
jle
cmc
int3
sbb
lea
bound
sbb
pop
pop
loop
js
dec
xor
jb
insl
lcall
subl
xchg
push
addr16
stos
call
enter
or
xchg
dec
cld
shlb
shr
cwtl
inc
dec
xchg
fsubl
repnz
cmp
and
sbb
mov
aaa
xor
cmp
outsl
mov
and
aad
dec
andb
scas
fcoml
push
into
stc
jae
sub
jnp
cld
jno
fcomp
stc
lea
inc
outsb
pushf
rcrl
stc
scas
sub
push
add
xor
mov
mov
js
jmp
mov
loopne
pop
jmp
cmpsb
jb
dec
jle
push
es
cmp
mov
iret
out
lret
sub
popa
movsb
loop
lods
sub
les
xor
scas
jno
or
movsl
in
jmp
les
in
mov
pop
xchg
fldenv
call
pop
int
sets
fnstenv
jnp
xorl
jno
xor
das
add
push
stos
mov
xchg
shrl
or
xorb
scas
jge
out
mov
xchg
push
and
loop
pop
fsubrs
xor
push
test
outsl
mov
fstpl
nop
iret
ret
movsb
and
pop
fnsave
pop
push
sbbb
rolb
sarb
mov
mov
mov
lahf
pop
or
test
call
ss
movsl
pop
pop
popa
clc
cmc
and
cld
roll
mov
bound
mov
insb
clc
lss
cmpsl
sub
xchg
inc
leave
pmaddwd
and
stc
and
mov
outsb
aad
scas
dec
lock
pop
push
push
in
jbe
pop
fldenv
int
lcall
outsl
aad
cmc
mov
in
jmp
and
lock
mov
int3
cs
pop
jle
xorl
decl
mov
jle
jge
scas
dec
sbb
sbb
popf
jmp
int3
push
idivb
fdivs
iret
out
mov
stos
jmp
or
test
into
add
inc
shl
mov
pusha
outsl
cmp
movsl
adc
jo
jns
mov
mov
lahf
and
sahf
lret
sahf
shrb
sbb
push
add
repnz
test
repz
pushf
popf
sub
imul
in
hlt
jns
jns
sbb
sar
out
in
jbe
stc
adc
mov
add
iret
sub
pop
fildl
xor
sti
iret
jle
and
movsl
popf
in
mov
jbe
fs
fistl
popa
pop
cmp
ss
mov
xchg
aaa
xchg
aas
jle
mov
jle
cmpsl
add
pop
cmpsl
xor
or
sbb
or
mov
lret
dec
out
xor
mov
aaa
jp
aad
cmp
out
cli
mov
rorl
cmp
or
or
push
divb
xchg
dec
rcl
lret
fdivr
or
test
adc
pushf
xchg
mov
xchg
sub
and
adc
clc
ret
jae
pop
xchg
mov
mov
ljmp
lock
lock
jmp
sub
xor
pop
push
ljmp
add
jb
and
inc
push
and
cld
adc
xor
mov
sub
and
mov
inc
cmp
out
adc
dec
sub
xlat
daa
inc
push
pminsw
std
stc
push
sti
inc
in
cmpsl
imul
scas
push
dec
int
sbb
aad
mov
fcmovu
dec
aaa
repz
push
pusha
pushf
push
jecxz
dec
addl
nop
pop
pop
out
sbb
nop
inc
int3
cltd
cmp
das
add
push
outsb
mov
lret
pop
jae
into
push
leave
dec
adc
and
imul
sbb
mov
push
out
push
xchg
jno
cmp
out
out
push
aam
pop
dec
data16
cs
jl
imul
icebp
add
sub
xchg
push
stc
lods
insl
outsl
roll
lret
xor
lock
arpl
scas
frstor
stc
jmp
xchg
cmp
repnz
mov
dec
imul
xchg
fwait
das
ja
cltd
mov
sub
lret
pop
cmp
push
push
dec
in
xchg
jp
daa
aam
push
xchg
jge
mov
repnz
and
xchg
cli
mov
jne
arpl
adc
stc
xchg
hlt
push
mov
orl
pusha
mov
jle
mov
cmp
enter
pop
loopne
mov
xchg
push
movsl
ret
add
sti
ret
aas
xchg
or
div
sbb
movsb
bound
testl
out
mov
sarb
pop
loop
lds
fidivs
aam
jle
dec
popa
pop
adc
popf
xlat
in
sbbl
cmpsl
inc
das
xor
test
in
imul
faddl
dec
out
jno
ret
adc
push
xor
xor
out
subb
popa
inc
repz
cs
jo
repz
jne
dec
or
mov
sub
lret
inc
mov
fsubrs
jb
aaa
push
pop
mov
adc
pop
std
popa
inc
lods
pop
cld
std
xor
mov
mov
jecxz
test
aaa
pop
jmp
jmp
pavgw
test
mov
inc
testb
xchg
aas
mov
in
push
cltd
sub
jg
push
jle
icebp
es
or
sbb
inc
mov
daa
mov
mov
lahf
add
aas
mov
testl
aam
dec
mov
stos
xor
sarb
in
lcall
pop
mov
ret
imul
cmovns
mov
mov
call
and
loopne
add
mov
mov
ss
fimull
mov
cs
jae
rcr
cmp
mov
push
incl
push
and
mov
xchg
shrb
je
xor
cmp
bound
xlat
jmp
daa
jmp
sbb
adc
mov
mov
dec
popf
sti
jge
sub
rclb
bound
fnsave
mov
cli
roll
popf
and
mov
jg
xor
xchg
mov
addr16
test
mov
insb
add
cmp
ljmp
dec
aad
xor
js
mov
xchg
mov
pusha
fstps
mov
jp
ret
sbb
push
filds
in
mov
data16
js
fisttps
mov
out
pushf
adc
adc
mov
mov
pop
js
add
xchg
int
lods
mov
fisttps
xchg
mov
add
mov
inc
ficoms
sbb
sti
mov
loope
lds
or
jle
xchg
hlt
pop
sub
sub
cs
cmpsb
xchg
xchg
jl
cli
xchg
sbb
push
jecxz
cli
or
inc
int3
mov
xchg
fisubrs
mov
pusha
movsl
and
mov
das
fwait
aam
pop
mov
pop
jno
divb
jne
add
js
push
or
sbb
mov
je
mov
jbe
fiadds
andb
cs
js
rep
mov
mov
adc
aas
filds
outsl
loopne
pop
mov
pop
mov
cmp
mov
cwtl
mov
sub
scas
pop
or
mov
mov
sub
or
add
in
sub
push
cmp
stc
xchg
out
or
iret
cmc
fdivl
out
in
cmpsl
sub
mov
and
add
xlat
rol
in
ds
lahf
xchg
inc
dec
cmpl
xchg
cmp
xchg
out
ror
dec
dec
lds
subl
mov
add
push
mov
pop
and
adc
outsl
push
jg
test
dec
push
xor
fimuls
xchg
dec
inc
repz
sub
xor
sarb
cmp
dec
pop
mov
xor
in
fstps
jns
add
inc
push
out
inc
arpl
lret
push
jae
dec
sbb
push
fwait
stc
pop
xchg
data16
daa
mov
mov
mov
clc
push
xchg
inc
or
cmpsl
ja
pop
xor
mulb
mov
vpaddd
push
popa
aam
adc
push
cmp
jle
sti
ficoml
mov
jmp
xchg
mov
mov
cli
pop
adc
push
push
aas
or
cmp
std
push
lret
pop
je
jo
clc
cmp
adc
pop
dec
cmc
imul
imul
cmp
movsb
div
sub
jo
mov
repnz
popa
or
jp
mov
andb
pop
repnz
stos
pop
lcall
insl
out
in
loop
cmp
sbb
arpl
out
push
jno
rolb
dec
adc
cmp
mov
lahf
jecxz
test
cmc
xchg
jmp
cmp
and
jge
sbb
xchg
leave
add
aam
popf
mov
xchg
sub
and
dec
iret
rclb
mov
inc
jg
push
int3
lahf
sysexit
fcomps
lods
andl
and
mov
fldenv
int3
call
and
add
mov
gs
dec
movsl
cmp
sbb
jmp
mov
mov
mov
push
add
idivb
xor
mov
outsb
sbb
sub
inc
cmc
sarl
imul
lds
mov
es
out
inc
mulb
lods
push
decl
or
or
sub
test
inc
imul
xlat
mov
mov
xor
dec
dec
out
rol
push
pop
jns
sbb
dec
out
mov
add
jb
shrb
xor
push
mov
orl
adc
fcoms
aam
xlat
in
jno
outsb
sbb
movsl
test
or
rol
mov
int3
jg
sete
mulb
cwtl
jns
jne
das
es
cmp
xchg
mov
pop
mov
lods
out
adc
dec
maskmovq
imull
in
xchg
pushf
fldenv
sti
sub
adc
xchg
adc
shll
psllw
xchg
sub
mov
mov
jbe
fsts
ja
loop
pop
jns
nop
popa
and
sub
mov
mov
stos
into
push
jne
xor
aad
inc
push
ja
das
lcall
push
aaa
xor
pop
sub
clc
ja
push
insl
sahf
add
or
out
test
dec
pusha
mov
push
repz
cmpsl
andl
loop
xor
and
dec
arpl
inc
or
xchg
je
push
sbb
lock
ljmp
fisttpll
bound
add
call
adc
inc
js
repz
lods
push
imul
or
mov
adc
xlat
sbb
add
and
cmp
adc
jne
xor
and
rclb
mov
leave
pop
inc
rep
inc
sbb
push
test
cmp
fisubrl
pusha
sub
or
cmpsb
push
and
mov
sbb
dec
outsl
lahf
jbe
lahf
scas
gs
push
pop
sbb
jge
das
mov
push
dec
inc
sbb
ja
adc
mov
call
test
pop
lret
js
in
jle
mov
sub
cs
sbb
lds
int3
sub
stos
out
int
xchg
int
jg
lock
insl
fs
xor
in
in
or
stos
xchg
call
lret
mov
out
add
jb
add
lock
pop
inc
cmc
pop
stos
icebp
outsb
nop
sbb
jo
xchg
ret
sahf
ss
mov
and
in
out
pushf
xchg
popa
mov
mov
xchg
adcb
sub
sub
aaa
mov
push
mov
cltd
test
lahf
sbb
test
ret
dec
mov
or
mov
cmp
rolb
push
insb
adc
inc
gs
push
xchg
shll
stos
xchg
mov
jo
in
sub
mov
jle
test
push
xor
aas
mov
mov
lods
pop
inc
stos
lods
cmp
jmp
mov
jmp
cmp
pusha
sbb
jbe
lea
jbe
dec
inc
lods
mov
aaa
ret
mov
mov
mov
sub
push
sub
subb
data16
mov
ja
jl
addr16
xor
aas
add
pushf
or
mov
mov
pusha
jb
cmp
xchg
lahf
dec
out
pop
test
cmp
pop
inc
mov
xchg
scas
jno
loope
mov
fistpl
fsubs
and
std
dec
out
cmp
nop
jnp
pop
inc
lcall
xchg
sbb
cmc
decb
jb
outsl
jo
mov
out
sub
out
sarb
iret
popa
dec
dec
lods
sbb
jecxz
loopne
dec
rorl
addr16
mov
lret
cmp
mov
mov
pop
sub
cmp
repnz
repnz
jg
in
imul
pop
mov
inc
rcrl
pop
jbe
jae
push
das
into
insb
adc
dec
dec
es
fcompl
adc
fadds
mov
sub
and
out
push
daa
xchg
mov
bound
out
jecxz
push
xor
mov
out
es
scas
push
loop
shrl
shlb
xchg
mov
add
sahf
mov
jns
cwtl
popf
mov
cmp
dec
sbb
aas
loop
pop
scas
mov
stos
adc
xor
into
and
pop
inc
scas
mov
add
mov
cmc
dec
add
jb
pop
cwtl
sti
xor
add
icebp
push
mov
in
dec
adc
jg
icebp
int
lds
and
fs
lods
cmpl
ret
mov
test
or
inc
rolb
cmp
xor
sbb
jl
mov
sub
idivb
out
pop
inc
in
fiaddl
stos
pop
daa
pop
adc
add
push
mov
mov
inc
movsl
inc
mov
adc
jl
mov
cmp
jae
movsl
sbb
or
xor
cli
aam
xlat
mov
inc
add
fmull
adc
in
aas
mov
ja
xchg
enter
mov
cld
mov
lods
clc
sahf
jge
dec
push
test
cltd
lock
xchg
pop
jp
nop
push
stc
mov
das
fcomi
js
leave
out
decl
jo
sub
xchg
cli
adc
push
inc
jl
lret
mov
scas
xlat
lods
popa
fidivl
pop
pop
fs
cmc
xor
jno
sbb
call
dec
sti
fcompl
or
inc
iret
cs
mov
dec
and
lret
pop
jecxz
mov
wbinvd
jo
jns
ss
into
call
std
push
fisubrs
dec
mov
fadds
aas
and
mov
sbb
loope
fwait
lods
inc
push
aam
add
int3
lods
or
mov
fs
mull
or
test
xlat
inc
repz
jae
test
xchg
mov
cmp
mov
push
sbb
pop
pop
dec
inc
ret
mov
sub
cli
mov
jo
and
xchg
inc
dec
jecxz
inc
dec
loope
rcrl
fmul
movb
icebp
mov
inc
cmpsl
xchg
fcomp
js
sti
in
cmp
xor
lea
lahf
push
jno
pop
xchg
dec
or
cmc
jecxz
sub
pop
nop
inc
xor
sahf
popf
jne
jge
aas
je
into
js
push
pop
jecxz
push
and
lds
pop
test
jg
dec
xchg
sti
push
std
andb
iret
sahf
and
push
aad
cmp
and
jecxz
stos
jl
test
push
lret
lcall
enter
fdivl
mov
ljmp
add
push
icebp
into
push
in
xchg
mov
dec
mov
xor
popf
dec
adc
insl
push
out
outsb
sbb
lock
lret
cld
mov
push
mov
jecxz
dec
dec
int3
icebp
jns
into
mov
loop
in
mov
stos
shll
adc
xchg
daa
pop
mov
test
and
push
out
aaa
cmc
cmp
cmp
inc
add
cmpsl
dec
and
xchg
imul
test
jb
add
int3
sahf
sub
dec
mov
push
xor
xchg
dec
push
xchg
push
mov
push
ret
aaa
jmp
stos
cmp
repz
dec
ss
mov
pop
aad
xor
inc
fsubl
push
mov
xor
stc
dec
fld
cltd
stc
add
or
jg
mov
lret
xchg
insl
idivb
jecxz
and
in
orps
adc
inc
pusha
movsl
movsl
fsincos
sub
scas
adc
lret
push
xchg
sub
aaa
rorb
pop
adc
mov
sub
fsubp
divb
lea
mov
call
pop
inc
sub
loope
cmp
jno
xchg
inc
repnz
adc
pusha
xor
xor
subb
jl
popa
xor
push
sti
popf
mov
aad
mov
mov
sub
mov
jl
es
clc
mov
cmp
stc
icebp
frstpm(287
adc
ja
jne
sub
xor
mov
push
std
cmc
test
or
test
adc
push
lds
sahf
jno
mov
jp
push
js
cmp
jl
repnz
pop
push
push
dec
adc
iret
mov
icebp
ret
jo
gs
mov
mov
test
pop
mov
arpl
pushf
inc
aaa
and
dec
inc
pop
pop
imul
xchg
dec
jmp
scas
lods
ret
orb
popa
push
pop
in
stos
pop
pop
xchg
iret
mov
punpckhbw
sbb
sahf
push
inc
fsts
sub
push
call
xchg
push
mov
pop
push
leave
jnp
xor
jae
or
ds
mov
push
jg
lea
jmp
adc
jnp
mov
data16
dec
out
add
xor
insl
xor
daa
std
add
ret
jecxz
daa
pusha
xchg
push
add
bound
dec
fiaddl
mov
and
divb
and
pusha
mov
int
cmp
cmp
mov
push
mov
cltd
js
in
pop
inc
rolb
in
inc
negb
std
adc
push
mov
ljmp
mov
mov
or
insb
adc
sbb
add
xchg
jb
roll
sarl
mov
pop
jge
sbb
mov
lahf
fistps
lcall
mov
push
data16
mov
outsl
jbe
rol
lea
add
es
mov
stos
pop
cmp
das
mov
pushf
jne
add
sub
loope
jmp
ljmp
pushf
pusha
mov
cmp
out
in
xchg
dec
cmc
enter
shrl
test
push
sbb
mov
jmp
pop
xor
adc
mov
repnz
inc
xlat
arpl
or
mov
xchg
pop
add
leave
lret
outsl
cmpsb
pop
adc
bound
cmpsl
dec
in
cs
shrd
std
ret
lds
repz
push
test
iret
sahf
ret
pop
and
fnstsw
imul
xchg
shrb
js
or
in
pusha
mov
push
in
int
push
push
int3
inc
pop
fildl
mov
xchg
add
outsb
sub
stos
inc
popa
push
rcrb
loope
push
xchg
xor
mov
mov
mov
jbe
lea
mov
int3
dec
repnz
and
adc
pop
xchg
sahf
mov
out
lahf
lret
fdiv
push
insl
out
bnd
mov
insb
and
cmpl
sub
cltd
mov
scas
arpl
and
fists
xor
ds
xor
or
rcl
push
mov
adc
cmc
adc
shll
cli
out
test
int3
pop
adc
movsb
mov
in
pop
gs
adc
dec
mov
push
adc
subl
scas
dec
xchg
pop
jbe
adc
xchg
test
sbb
jmp
jb
das
int
cmp
xchg
adc
jg
xchg
in
xor
cmpsl
pop
xchg
test
test
inc
in
push
fisubrs
nop
push
add
movsl
mov
js
sbb
cltd
pop
xor
jle
cmp
push
fistpll
adc
jnp
sbb
inc
fiadds
ja
js
testl
test
push
fs
cmc
cmp
xor
or
push
dec
add
jge
and
push
sbb
sbb
clc
add
aad
ja
sub
mov
xchg
lds
pop
pop
fimuls
sbb
mov
stos
sbb
push
jl
or
cmp
das
jle
mov
fcmovne
fwait
retw
cmpsb
in
mov
ljmp
shr
jne
pop
and
cwtl
adc
cmp
shrb
jae
lcall
push
sbb
loop
xor
shrb
pusha
dec
rcrl
sbb
insb
mov
pop
out
adc
pushl
dec
cmp
aaa
sub
sbb
sbb
stc
ret
das
cmp
sbb
loopne
pop
pop
pop
sti
mov
int
pop
push
addl
inc
inc
and
xor
push
mov
inc
inc
sub
lret
xor
add
loope
fiaddl
sbb
adcl
scas
cmp
cmp
lret
subl
pop
in
je
jp
cmp
jle
bound
xor
addr16
leave
sub
mov
lds
push
sbb
aaa
pop
outsl
jmp
sub
arpl
test
ret
aas
cmp
rcr
jp
and
stos
xor
nop
cmp
test
mov
xchg
into
pop
mov
das
decl
push
mov
adc
sti
shrl
outsl
xchg
xchg
or
cmp
ffree
sub
sbbb
ret
jns
jp
shlb
stos
clc
dec
sbb
mov
dec
mov
sub
pop
sbb
pushf
dec
out
fistpll
cmp
add
call
push
mov
jl
lcall
and
cmp
pop
jns
mov
adc
movb
repnz
inc
mov
dec
cwtl
or
dec
fistps
pop
mov
stc
test
lea
mov
das
lods
push
int3
pop
mov
add
jae
scas
sub
jp
je
nop
add
stos
loopne
shll
rcll
fidivrs
popf
lea
jb
or
pop
insl
or
or
iret
lods
xor
fs
icebp
in
cltd
std
fimull
inc
lds
dec
mov
insl
mov
pop
cmpsl
nop
int3
aas
inc
cmpsl
add
aad
adcb
js
mov
and
test
rcll
negl
cld
jmp
pop
xor
pop
xchg
enter
js
add
das
dec
adcl
sub
stos
xorb
ss
mov
adc
xchg
int3
insl
std
mov
fdivrs
subl
jg
jg
push
les
subb
add
pop
mov
popa
pop
and
rolb
divb
roll
imull
adc
sbb
dec
mov
repz
in
out
sbb
jne
xor
and
mov
push
inc
dec
cmp
inc
call
add
jo
scas
pop
pop
inc
mov
mov
push
or
cmp
repnz
or
or
cli
adc
test
xchg
mov
sahf
pop
jl
mov
std
and
add
fsubl
mov
and
scas
stos
insb
outsl
jle
add
xor
sbb
dec
mov
cwtl
fisttpl
xchg
jnp
ss
pop
cli
push
je
jmp
lahf
jecxz
ja
mov
cltd
fldl
fimuls
mov
sbb
mov
insl
sub
dec
mov
insb
push
mov
cmc
sbb
sbb
xchg
leave
mov
pop
add
dec
add
movsb
sbb
xchg
scas
out
sub
stos
jmp
pop
jp
int
loopne
es
jle
ret
xor
add
sub
sti
stos
arpl
es
sbb
out
xlat
jge
cmp
dec
mov
push
in
or
or
push
mov
mov
mov
jp
fs
mov
pop
lods
push
jo
mov
xchg
dec
mov
push
inc
popa
jmp
pop
movsl
sub
cmp
sub
xchg
add
cmp
jns
pop
loope
push
and
arpl
scas
movl
pusha
inc
insb
popf
xchg
icebp
jp
sub
test
xchg
aaa
add
sbb
insb
ffreep
and
xchg
push
push
jp
test
iret
pushf
fwait
lea
mov
lahf
popf
mov
sbb
decb
jmp
mov
bound
mov
xchg
xchg
pop
aas
clc
dec
push
fdivrs
jo
repnz
jle
mov
cmpsl
push
jbe
in
notl
dec
add
xlat
fisubrs
push
into
fwait
xor
cli
sbb
lret
pop
cmp
sbb
testl
push
pop
push
popa
xchg
push
cmpsl
xchg
repz
inc
sbb
mov
lock
pushl
xchg
pop
bound
cmp
add
or
pop
lret
imul
xchg
xchg
lret
std
int3
sarb
inc
push
outsl
or
gs
lcall
or
mov
adc
push
enter
jb
repnz
clc
dec
dec
adc
cmc
cs
mov
movsl
scas
push
mov
xlat
push
dec
ds
push
shrl
mov
cmp
push
pop
push
gs
jge
cld
xchg
mov
cltd
mov
into
and
mov
pop
and
push
jno
imul
addr16
sub
xchg
rorl
mov
out
xor
xchg
mov
test
or
adcl
inc
loope
or
ja
xchg
add
cmp
add
sub
pop
jp
sbb
enter
sub
lods
sahf
popf
inc
sti
jl
int3
repnz
sub
dec
push
lea
xor
aam
sub
mov
out
pusha
cmp
xchg
xchg
fsts
mov
push
or
lea
daa
int3
mov
sub
inc
arpl
stos
test
aas
mov
sub
stos
bound
pop
loop
dec
dec
int
xlat
add
lcall
fs
rolb
cwtl
mov
test
or
sub
pop
pusha
sbb
mov
push
dec
mov
cmp
scas
rorl
push
pop
sbb
and
jno
cmp
icebp
fsubrs
cmc
out
xchg
dec
xchg
mov
test
jb
mov
sti
cmp
movsl
jb
out
dec
add
cld
jne
mov
jo
jp
jbe
xchg
out
or
sbb
xchg
add
adc
fisttpll
mov
xchg
xlat
ss
mov
rorb
jecxz
stc
pop
lds
adc
test
xchg
lock
mov
in
xor
lret
rol
lahf
add
adc
xchg
inc
pushf
mov
mov
mov
in
dec
jecxz
dec
inc
xor
xor
push
mov
jno
and
push
dec
dec
xor
or
dec
mov
pop
adc
testb
test
pop
mov
enter
inc
add
or
jmp
pop
xchg
xchg
movb
stc
sbb
xor
in
rolb
orb
gs
adc
pop
mov
push
sbb
iret
in
inc
mov
dec
imul
and
sub
and
sbb
fidivrs
scas
int3
push
xchg
cmp
cmp
xor
test
cmp
xor
mov
cmpsb
jae
inc
add
dec
jle
in
imul
lahf
adc
jbe
shrb
pop
sbb
bound
inc
xchg
sub
test
add
cmpsb
call
bound
sbb
sbb
add
xor
adc
negb
xor
mov
jo
movsb
jge
or
fs
out
sbb
cmc
mov
jnp
lods
gs
and
vpsubsb
xor
mov
mov
push
pop
add
mov
pop
divl
les
lock
adc
das
or
roll
jb
fcompl
mov
pop
outsb
scas
pop
movsl
push
pop
leave
pop
roll
inc
xorl
ja
push
fxtract
in
cmp
mov
or
jns
lock
sbb
dec
aam
pusha
fstl
insl
out
fcmovnbe
mov
add
cli
cld
subb
inc
hlt
inc
and
in
push
xor
or
out
cmpl
xor
xlat
sbb
push
cmp
adc
xorl
sti
mov
aam
fstl
cmp
mov
or
lret
jg
mov
stos
xchg
test
aas
fnstcw
adc
cmp
mov
test
xchg
jmp
rclb
xorb
adc
push
fcmovnbe
pop
stc
or
popa
mov
arpl
jmp
in
sub
stos
clc
pusha
jbe
push
adc
outsb
push
sub
out
lds
pop
roll
mov
jmp
inc
ret
xor
mov
test
cld
or
mov
mov
add
sarb
sar
sub
lret
xchg
aam
xor
mov
pop
sub
insl
stos
lret
out
scas
mov
test
dec
fwait
pusha
fs
fstpl
lods
imul
jns
rcll
sbb
lahf
std
add
fdivs
pop
lock
xor
sub
jmp
mov
icebp
adc
js
push
and
inc
in
sub
aad
cmp
inc
fmull
in
test
or
mov
cmc
popf
pop
inc
dec
fcoml
outsl
je
int
or
lret
dec
cltd
ja
jne
jno
shrl
pop
and
ds
test
push
xchg
int3
imul
and
dec
pop
mov
add
jmp
jno
cmp
sub
lcall
sub
add
mov
jb
test
les
xchg
xor
mov
push
pop
xchg
cmpsl
or
and
mov
test
sbb
js
push
psrlq
jo
lret
je
inc
adc
jecxz
repnz
icebp
push
push
arpl
or
dec
in
cltd
push
mov
stos
mov
aas
mov
daa
call
mov
xor
or
push
out
icebp
and
fsubrs
in
mov
ret
das
pop
lds
xchg
scas
loope
dec
cmpsb
pop
test
and
subb
mov
inc
psrld
fisubrs
inc
jno
insb
pop
mov
cltd
pop
cs
pop
mov
inc
mov
dec
mov
aas
cmp
sub
insl
bound
adcb
adc
xchg
call
lock
adc
aam
mov
and
push
adc
popf
push
scas
adc
cltd
push
int3
sub
ss
jg
fsubr
xor
sub
pop
xchg
outsb
ret
push
dec
stos
arpl
je
or
push
pop
mov
loope
push
test
jb
shr
push
negl
inc
sbb
mov
mov
mov
iret
imul
dec
mov
dec
xor
dec
lea
jns
push
mov
push
jno
stc
push
inc
jl
add
popa
les
fistpll
add
sbb
xor
inc
jg
sbb
jo
js
pop
outsb
adc
popa
lea
insb
add
fsubl
dec
lock
xchg
lods
cltd
movsb
pop
cmpsl
mov
mov
cs
push
dec
mov
addr16
loope
mov
bound
push
cmp
cmp
movsb
shr
fisubrs
cmp
fmuls
hlt
roll
xor
les
in
mov
shrd
popf
inc
out
inc
je
or
scas
and
or
clc
push
inc
hlt
rcll
and
cmpsl
add
mov
test
int
dec
mov
dec
push
or
mov
add
addl
leave
lahf
fwait
and
pop
fnstsw
inc
es
sbb
dec
in
aad
jno
xchg
or
mov
pop
jnp
in
push
or
add
addl
ss
jg
xor
ljmp
cmc
movsl
mov
fsubrs
out
xor
sbb
test
push
pop
rol
mov
stos
sub
mov
jns
dec
xchg
movsb
aaa
or
and
data16
or
pop
movsb
add
push
pop
mov
mov
notb
sub
cmc
and
inc
xchg
in
cmp
call
daa
pop
push
jb
das
sar
jg
cmovns
mov
inc
mov
xchg
inc
adc
mov
mov
addr16
iret
sub
xchg
xor
popf
lcall
pop
push
mov
mov
insb
mov
add
shl
or
les
cli
mov
sbb
xor
pop
xlat
cmp
push
pop
lret
mov
ss
push
lret
mov
sub
call
ja
outsl
mov
inc
cltd
aam
mov
sbb
loope
stos
cld
in
jmp
xchg
out
push
xchg
push
and
mov
shll
add
mov
rol
mov
outsl
ja
push
loope
pop
cmp
jbe
adc
mov
fwait
mov
cmp
ds
sbb
aam
xchg
mov
and
ljmp
cli
aam
cwtl
scas
dec
and
ret
dec
loopne
cld
or
and
mov
sti
mov
dec
lret
or
jne
repz
push
push
pop
xchg
hlt
aaa
pop
sub
add
xor
pusha
in
aaa
pop
xor
test
push
notb
lret
pop
dec
pop
and
add
lods
sahf
loope
and
je
mov
es
jae
or
pushf
leave
icebp
xchg
scas
popa
out
mov
sub
mov
lahf
movsl
gs
dec
pop
dec
mov
cmp
push
adc
es
divb
pushf
pushf
imul
mov
scas
mov
sbb
cld
xor
push
mov
xchg
add
and
hlt
add
mov
in
outsl
sahf
fldt
adc
stos
pusha
ja
mov
mov
mov
xchg
or
and
fmulp
push
dec
pop
lret
cs
xor
cmp
pop
int3
jnp
lcall
loop
jo
loopne
rclb
insb
outsl
mov
mov
testb
sti
mov
push
shlb
cli
insl
or
lods
out
or
gs
dec
shl
pop
lods
inc
inc
dec
and
or
pop
jl
addb
icebp
sbb
inc
add
xchg
lods
dec
iret
fidivrs
cmp
pop
mov
incl
stos
lret
popa
testb
add
push
fwait
and
das
xlat
dec
out
mov
test
jnp
push
add
ljmp
sbb
mov
je
aas
push
pop
outsl
inc
cmp
jo
push
jg
popf
loopne
shlb
pop
pop
add
xchg
mov
pop
pop
les
call
shlb
sub
iret
shrl
mov
je
inc
cmp
or
enter
jg
push
das
xorb
mov
out
movsl
in
iret
addr16
orl
rol
mov
sub
test
insb
cmp
andl
pop
jo
mov
push
xchg
xor
fs
test
shll
mov
push
ljmp
cwtl
mov
sbb
hlt
mov
flds
or
mov
pop
movl
sub
xchg
sub
popa
cmc
pusha
ret
aaa
stos
jge
aas
shl
push
dec
jns
sub
sbb
shll
shll
jp
and
cmp
dec
and
inc
xor
sar
lahf
adc
fcomip
in
add
popa
inc
scas
adc
insl
gs
loopne
cmpl
dec
dec
pushf
or
jp
cltd
test
sbb
pop
das
mov
dec
sbb
adc
mov
xor
push
push
pop
mov
sbb
out
sub
push
outsb
jg
push
inc
jb
add
xor
inc
aam
fadds
cmpsl
aad
jbe
js
movsb
ss
imul
test
nop
out
out
inc
fsub
add
ds
adc
mov
out
rol
xor
sbb
mov
xchg
adc
lods
pop
or
stos
dec
jo
cld
xchg
ret
sahf
cmp
lahf
jb
adc
dec
loope
pop
clc
xor
mov
pop
push
jb
lcall
jl
loop
adc
das
and
xor
aas
test
xchg
mov
sti
dec
jno
xchg
mov
test
cmc
not
mov
test
push
in
jmp
mov
insl
mov
mov
or
iret
add
xchg
repnz
inc
pop
sub
rol
mov
movsb
push
mov
jg
xchg
push
ja
jo
hlt
aad
ja
xchg
fsubrs
lds
xchg
adc
adc
test
or
popl
sub
push
fisttpll
add
mov
sbb
cmc
mov
insl
mov
sbb
pop
fnstenv
divb
push
xchg
adc
out
scas
mov
aaa
dec
inc
add
mov
mul
lret
stos
push
ret
sub
dec
push
stos
and
gs
lods
arpl
jecxz
lods
jmp
jg
and
sbb
scas
sbb
sbb
shlb
outsb
and
sbb
movsl
jb
cmp
xchg
dec
mov
stos
pop
out
xchg
dec
cmpsl
cli
int3
mov
dec
push
test
loope
dec
mov
adc
ja
mov
out
fisttpl
ds
arpl
sbb
aad
mov
cltd
jmp
mov
fcoms
xchg
xor
stos
rcrb
stos
out
or
ret
cltd
push
imul
js
out
dec
or
mov
stc
enter
imul
xor
inc
shlb
jb
test
xchg
lock
nop
sub
jae
fwait
add
ja
xchg
stos
fadds
mov
fmull
imul
aam
bound
sbb
cli
and
xor
xchg
pop
cld
adcb
outsb
lcall
jmp
popa
add
sub
gs
jns
xchg
and
stc
nop
mov
adc
ret
and
mov
enter
inc
xchg
push
repnz
sub
addb
or
add
jo
inc
out
fwait
jl
xchg
inc
jmp
out
stos
mov
mov
sub
add
pushf
add
lock
sub
lret
mov
sub
div
fldenv
add
jp
pop
into
mov
or
push
xor
repnz
mov
adc
and
or
cmpb
mov
lea
mov
jb
xchg
cwtl
sub
aaa
xchg
inc
sub
mov
push
sbb
inc
cwtl
and
notl
dec
ds
xchg
movsb
pop
mov
out
imul
std
cmp
jecxz
fmuls
cs
xchg
pop
sti
iret
sbb
sub
push
int3
scas
pop
fisttpll
push
add
push
insl
dec
pop
cmp
push
mov
mov
daa
loope
xchg
out
cltd
lret
jmp
hlt
mov
roll
stos
cli
xor
and
cmp
data16
dec
adc
and
pop
mov
shll
jns
ja
push
push
test
bound
pop
mov
test
and
pop
incw
inc
mov
in
mov
lcall
cltd
add
mov
cwtl
dec
andl
repnz
sub
inc
movsl
repnz
and
add
mov
bound
sti
sbb
mov
cmp
cmc
dec
mov
ss
insb
int
dec
ret
push
inc
mov
inc
jle
add
jmp
test
in
cwtl
mov
int
and
out
dec
sbb
mov
mov
clc
cmp
daa
mov
icebp
jmp
das
idivl
and
add
push
scas
xchg
jp
and
cmp
orb
pop
push
in
fimull
mov
xorl
mov
and
xchg
scas
pop
add
pop
lahf
mov
jmp
cmp
iret
add
xchg
lock
adc
inc
js
mov
sub
pop
push
icebp
add
and
cmc
out
mov
adc
mov
mov
sub
sub
je
fwait
adc
sub
xlat
add
cmc
dec
sbb
mov
std
lahf
sbb
and
pop
lea
es
mov
add
loopne
and
pop
aaa
sbb
add
fisubs
fnstenv
mov
cmp
out
inc
sbb
mov
pop
push
jae
push
jnp,pn
out
sub
js
shrb
xor
addr16
lea
jmp
adc
cmp
arpl
rcrb
fwait
add
outsl
je
movsb
mov
dec
lret
pop
pop
push
into
jle
jecxz
js
bound
push
xchg
xchg
pop
movsl
jp
mov
adc
mov
dec
dec
inc
dec
push
adc
pop
hlt
sub
xchg
push
xorps
adc
cmc
or
loop
mov
sbb
jg
pop
lcall
stc
add
push
pop
ret
jl
adc
out
mov
rcrb
sbb
in
pop
mov
mov
testb
leave
or
sahf
das
sbb
andl
jmp
std
and
mov
leave
push
and
xor
mov
mov
outsl
inc
pusha
jno
jae
pop
in
jle
loopne
sub
cwtl
jnp
pusha
adc
xor
push
rorl
mov
add
inc
xlat
clc
sbb
ss
mov
outsb
adc
outsb
mov
jb
and
sub
or
ljmp
insl
pop
xchg
mov
std
shr
jne
jp
sub
loop
sub
push
sub
pop
lret
and
and
mov
or
jae
push
shll
lea
xchg
aaa
fnsave
sub
push
fs
mov
clc
mov
jb
movb
mov
cmp
mov
or
popf
scas
aaa
pusha
cmpsl
das
and
xlat
jmp
add
cmpsb
lahf
sahf
mov
xchg
cwtl
pusha
xor
out
pop
ds
mov
and
pop
cmpsb
je
call
je
ds
hlt
pop
jmp
ret
stos
call
fiaddl
add
aam
jle
je
jg
aad
dec
and
cmp
xor
and
fldt
mov
daa
nop
push
stos
cli
ss
shl
xchg
cmp
cmpsl
fbstp
jmp
push
fidivrs
push
ss
in
jg
cmpb
fnclex
xchg
push
dec
pop
adc
cmp
packssdw
mov
or
push
test
mov
addr16
pop
shlb
je
pop
or
jno
out
lock
inc
xchg
jno
lahf
sti
inc
jno
jp
in
scas
xor
add
shl
dec
aad
cwtl
lods
scas
inc
sarb
dec
cmp
dec
dec
popa
adc
mov
xchg
mov
fwait
jg
stc
and
out
cmp
mov
aaa
cmp
mov
cmp
dec
pop
add
clc
fcomp
adc
push
push
out
xlat
jo
aas
mov
std
jb
mov
cmp
cli
inc
xchg
cmp
and
or
test
pop
je
adc
jge
mov
xor
sub
xchg
lret
push
ret
xchg
add
mov
loope
sbb
add
enter
mov
in
xchg
inc
or
or
in
test
repz
out
sbb
mov
fst
aad
mov
fisubs
loope
test
in
mov
dec
or
or
jne
pusha
imul
cmpsb
push
jp
adc
adc
and
mov
adc
sbb
repnz
inc
loop
pushf
and
push
inc
call
les
push
push
inc
lock
add
cmp
arpl
cmp
xor
jge
mov
mov
movsl
or
jge
mov
ret
push
cmp
outsl
test
jns
fstpt
test
inc
or
and
aas
mov
sbb
lret
inc
arpl
cmp
hlt
sti
jl
pop
push
mov
mov
push
dec
ds
std
scas
insl
mov
jae
push
xchg
int
cmp
cmp
adc
or
sbb
inc
pushf
sub
push
orb
ljmp
dec
lods
sbb
lods
inc
push
jb
daa
inc
push
cmp
xchg
fimuls
xchg
xchg
cmp
add
mov
sti
jp
lcall
xchg
cmp
push
pusha
or
ficomps
mov
test
popf
cmp
jp
cmpsl
pop
sarb
scas
or
aam
xchg
mov
popa
call
jne
pop
and
lahf
mov
cmpsb
lods
inc
lea
push
cmp
int3
mov
mov
mov
ficomps
ret
sti
push
fnstcw
int
test
push
jne
lahf
dec
and
pop
inc
sbb
push
cli
movsl
fdiv
fists
fistl
jne
imul
lret
stos
shr
dec
clc
cld
enter
cld
cmc
mov
or
cmpsb
ds
stos
es
adc
jle
rorb
aad
lret
js
scas
jb
push
push
addl
or
jl
adc
pop
sub
stc
xchg
ja
inc
ret
jno
das
sub
sub
mov
xchg
jno
pop
mov
insb
imul
lods
sbb
fdivp
test
mov
inc
adc
out
jecxz
sbb
inc
int
cmp
pop
js
mov
fs
xlat
fisttpll
insb
add
mov
call
test
push
or
mov
fnsave
jg
dec
dec
cwtl
xor
std
aad
das
jne
jmp
bound
cmp
mov
or
sbb
xor
roll
or
jns
out
sbbb
scas
lea
pop
xchg
sbbl
iret
add
sbb
and
inc
out
ret
test
or
cmp
inc
test
jp
mov
cmp
sti
dec
mov
lds
mov
jle
mov
loope
xor
and
insb
ss
jb
sub
nop
mov
dec
push
adc
shll
stc
enter
clc
out
sub
int
lods
jns
cmp
stos
mov
arpl
hlt
orw
sbb
int3
cmp
orl
test
insl
xchg
jbe
pop
sbb
loope
lea
mov
ret
ljmp
repz
das
sbb
js
dec
push
hlt
cmp
pop
sub
test
rclb
sbb
fdivl
pop
imul
pop
int3
xchg
cmpb
mov
fs
test
cmp
cmp
aaa
lock
mov
and
mov
jl
out
xchg
push
test
mov
lods
ds
cmp
cld
xor
int3
pop
loop
push
div
mov
mov
cmp
popf
pop
jae
sbb
sarb
push
and
sbb
add
push
xchg
fnsave
pop
pop
push
cmp
test
ss
xchg
sbb
insb
decl
loopne
pop
pop
data16
add
and
scas
ds
mov
adc
call
sahf
aam
popf
fs
repz
sarb
loopne
insl
cmp
xchg
jle
lahf
ss
or
cmp
lret
popf
push
xor
ja
jge
test
xchg
imul
arpl
dec
ret
push
and
ret
xchg
sbb
decl
mov
xor
testb
jecxz
fst
mov
les
and
and
and
dec
sarl
and
outsb
pop
xlat
inc
pop
pop
push
jmp
mov
std
imul
int
mov
jbe
jp
xor
mov
or
sbbl
mov
loop
or
pop
jle
jmp
sub
rorl
inc
cli
mov
xchg
jns
mov
push
out
adc
sbb
int
push
adc
mov
in
stc
jg
or
sub
cmp
mov
cmpsl
ja
movsl
icebp
test
lret
popf
jecxz
push
rcrb
bound
and
js
and
leave
inc
daa
sahf
icebp
push
ret
std
xchg
sbb
out
shlb
fimuls
jns
mov
clc
shrb
jb
cmpsb
pop
into
lahf
sahf
jge
xchg
cmc
xchg
jnp
push
pop
test
mov
sub
pop
aas
sub
mov
xchg
sub
loop
sub
je
xlat
dec
dec
push
push
lock
jno,pn
call
or
push
or
sbb
loope
lea
mov
out
ljmp
stos
rorb
movsb
push
lods
in
sbb
and
jb
sbb
mov
rorl
bound
jno
mov
mov
lods
pop
loopne
loope
rolb
adc
mov
testb
sbb
stos
cltd
lods
test
rclb
xor
jmp
mov
ljmp
inc
fisubl
cli
lahf
dec
loope
mov
dec
mov
push
or
inc
in
dec
pusha
ja
inc
push
mov
aaa
cmpl
repnz
mov
or
xchg
loopne
icebp
sub
popf
outsb
jnp
push
adcl
dec
jnp
pop
ljmp
test
ds
jle
sub
out
mov
call
inc
mov
aam
push
loope
pushf
subb
mov
movsb
mov
mov
lds
and
scas
pop
cmp
push
sub
pop
loopne
ds
xor
cs
movsb
lcall
dec
push
jb
aaa
jne
cs
or
or
cmpsl
sub
mov
test
sub
outsl
out
mov
aad
push
mov
fwait
gs
inc
lock
or
bound
cld
add
xor
jecxz
test
and
fsubl
mov
lods
jg
sbb
stos
hlt
pop
and
adc
mov
movsl
xchg
push
stos
xor
add
mov
les
shll
imul
outsl
lret
dec
mov
sub
and
repnz
mov
fsubs
sbb
xchg
sbb
push
sbb
push
xor
mov
inc
cld
in
lcall
out
test
inc
xor
add
sub
add
rorb
and
inc
faddl
inc
pop
pushf
cmc
lods
loop
cs
fmuls
pusha
add
mov
psraw
jge
bound
mov
std
adc
sarb
jno
inc
ss
cs
cmp
fiaddl
mov
lahf
mov
push
cli
jne
cmp
dec
mov
cltd
leave
cwtl
mov
movsl
data16
cmp
add
and
scas
aam
inc
cmp
out
xchg
loop
jnp
std
jle
in
or
jns
jecxz
adc
adc
sti
insb
push
hlt
push
mov
jbe
or
mov
mov
push
notb
inc
aam
add
fwait
pop
jne
lods
jo
test
sub
sahf
or
mov
mov
ret
test
dec
jp
enter
cmp
lods
jne
fimull
outsb
test
add
add
add
jmp
movswl
cli
pop
test
mov
dec
fscale
int
mov
aad
mov
or
cmp
imul
pop
imul
or
popf
push
clc
push
cmp
fwait
mov
call
xor
mov
sar
lods
jb
mov
cmp
arpl
jno
imul
ffree
fstpl
insb
jae
sub
sbb
xor
out
ljmp
jl
cmc
xor
and
xor
incb
add
and
scas
push
mov
dec
xchg
repz
imul
ret
aad
ss
pop
adc
mulb
js
jo
jno
dec
push
sub
loop
mov
mov
loopne
inc
cmc
enter
in
loope
mov
xor
mov
xchg
mov
gs
movsl
sbb
outsb
push
sbb
loop
cmpsb
js
pop
push
add
sub
push
lods
fs
inc
xchg
ja
repnz
mov
push
int
push
pop
pop
xorb
dec
dec
jno
lret
jns
and
inc
js
icebp
adc
adc
mov
bnd
pop
add
dec
cmp
sahf
inc
andb
stos
adc
mov
dec
fidivs
negl
fcoml
inc
xlat
loope
xorb
stos
pop
jmp
sub
mov
sahf
aas
test
jae
sub
adc
xor
dec
lret
add
inc
mov
xor
negb
mov
insl
ja
test
push
fildll
imul
iret
sarb
stos
mov
div
out
push
stc
and
sub
mov
pop
or
mov
xchg
mov
xchg
movsl
xchg
sbb
fisttps
movsb
loop
aaa
and
aad
adc
dec
das
cmpsl
sbb
add
and
stos
movsl
mov
rolb
sub
add
mov
mov
sbb
push
ljmp
les
subl
ret
addr16
sti
mov
out
imull
iret
mov
jb
pushf
shrl
jnp
mov
cmp
push
inc
mov
push
cli
xchg
xor
jae
sub
adc
imul
cmp
scas
fcomp
pop
mov
mov
loopne
mov
pop
fisubrl
jne
inc
adc
std
outsl
imul
std
ret
adc
or
out
loope
mov
adc
inc
jg
cmp
popa
pop
scas
call
pop
jmp
dec
mov
stc
popf
insb
cltd
filds
push
sbb
adc
or
cli
outsl
cwtl
je
and
xchg
sarb
movsb
and
iret
mov
data16
xor
jl
sub
ja
test
test
sub
sbb
arpl
rorl
or
adc
xor
mov
jmp
movsl
cmp
clc
xor
bndstx
repz
xor
xchg
inc
pushf
add
cmc
lahf
arpl
push
addb
in
jge
xchg
rolb
cli
mov
lods
dec
andb
pop
mov
cltd
stos
xchg
jae
and
out
enter
mov
mov
lods
dec
xor
dec
fnsave
bound
movsb
mov
daa
repnz
aam
jb
add
or
dec
ret
outsb
bound
mov
mov
testb
dec
stos
notb
and
sbb
sub
popa
int3
movsl
imul
xchg
ja
lret
out
cmc
mov
jnp
adc
mov
aam
sti
pop
nop
mov
out
jp
int3
or
call
sarb
jl
dec
xchg
push
shll
enter
mov
cmp
cld
jnp
iret
push
aas
icebp
rorl
das
mov
lods
hlt
adc
push
ljmp
out
inc
stc
jg
stos
lock
and
leave
mov
sub
add
pop
dec
imul
push
rcrb
cmp
in
insl
and
push
add
add
ljmp
addr16
cmpsl
shrb
arpl
sub
inc
cmp
mov
mov
enter
push
fmulp
adc
push
inc
sub
or
xchg
add
loop
iret
sbb
push
pop
cltd
cmpsb
or
sarl
mov
leave
xchg
add
insl
push
sbb
adc
mov
sub
movsl
and
xchg
xchg
dec
out
xor
loope
pop
xchg
jg
icebp
imul
popf
cli
pop
xor
sbb
fsubl
mov
cmpsl
scas
jnp
and
fs
sbb
data16
cmc
pop
and
ss
call
xor
jo
ss
pop
shl
mov
imul
sub
mov
mov
aaa
and
popf
xchg
adc
lcall
out
inc
ffree
sub
jo
daa
jle
sub
push
ret
add
pop
jnp
mov
mov
add
dec
mov
mov
dec
les
hlt
aas
cld
mov
mov
inc
jnp
and
add
pop
and
ffreep
imul
ja
in
dec
shll
movsl
push
fldt
push
push
xor
flds
ja
test
sti
inc
test
sub
jno
imulb
outsl
lea
xchg
xchg
lahf
icebp
xor
adc
enter
or
adc
sub
push
cmpsl
xchg
push
and
mov
add
adc
cld
movsl
rorb
fs
arpl
loope
stos
jp
cmpsl
hlt
repnz
push
popf
mov
xchg
lods
into
daa
dec
jb
mov
dec
andl
stos
push
push
cld
xchg
in
call
js
push
mov
sti
outsb
mov
jbe
mov
jno
imul
pop
imulb
ret
sub
push
ds
repz
daa
lods
mov
or
js
jbe
les
xchg
pop
daa
rclb
sarb
movsb
pop
add
leave
into
lds
gs
adc
mov
pshufw
jae
adc
mov
repnz
mov
jecxz
jl
scas
data16
ss
mov
jo
adc
daa
adc
adc
mov
ljmp
movsb
int3
daa
repz
fidivs
gs
jb
jo
jp
mov
into
push
jle
and
adc
test
sub
xor
notb
cmpsl
pusha
or
mov
cmc
enter
in
repnz
decl
add
push
in
cld
dec
xor
push
lret
xlat
or
add
out
lds
imul
xor
dec
and
jns
les
int
pop
pop
stc
shlb
push
and
sbb
insl
cmpsb
stc
mov
fcomi
lds
in
or
push
pop
out
cld
jl
clc
pusha
or
mov
fimuls
sub
iret
int3
dec
dec
mov
add
xor
add
cmpsb
adc
cmc
xor
outsb
ret
nop
mov
jb
push
in
mov
xchg
add
push
lods
movsb
das
inc
mov
pop
inc
jg
adc
xchg
incl
subb
sub
mov
and
dec
rorb
xor
into
jecxz
fldl
orl
sub
lret
dec
icebp
adc
push
jle
mov
sub
loope
lret
xchg
or
push
roll
push
fsubs
fs
push
sub
es
test
dec
mov
adc
mov
adc
jg
stos
or
adc
xor
or
imul
enter
xchg
inc
pop
fyl2xp1
sub
sbb
int3
xor
mov
mov
push
dec
xor
test
das
popf
cld
push
xor
mov
movsl
sbb
jge
pushf
fimull
loop
xorb
dec
and
int3
inc
sub
ret
xor
push
mov
nop
inc
dec
mov
mov
inc
leave
push
test
pop
lcall
xor
xchg
mov
mov
ret
lcall
adc
popa
repz
sub
arpl
aam
scas
pop
loop
fs
pop
xchg
test
push
mov
mov
jbe
pop
cmpb
xor
in
lea
lods
add
sbb
adc
inc
imul
cld
push
xchg
das
sub
adcb
cmp
jno
subl
ss
pop
cmp
or
insb
loop
push
arpl
sarl
inc
and
sbb
push
loope
inc
cmp
mov
lcall
jle
and
popa
fmull
ficomps
das
mov
jp
pop
out
das
bound
inc
mov
roll
movsl
sbb
add
test
add
arpl
xor
push
sub
idivb
inc
add
lea
xchg
dec
pusha
repnz
xchg
push
dec
mov
incl
sub
nop
add
gs
fiadds
imul
add
fwait
lahf
push
xchg
push
ret
jae
ret
fstps
and
jno
pop
addl
pop
out
cmp
loop
sub
adc
mov
mov
sbb
frstor
in
in
cmp
push
sbb
mov
pand
insl
xchg
inc
rclb
stos
mov
sub
call
pop
or
xor
js
mov
sbb
stos
pusha
jl
or
imul
add
dec
sarb
sti
mov
bound
daa
add
cltd
mov
add
icebp
mov
das
and
xor
les
stos
jns
stc
mov
mov
add
test
fs
pop
xor
mov
out
mov
mov
xorb
out
iret
dec
pop
pop
jnp
dec
mov
adc
mov
das
sub
iret
sbb
nop
sub
push
push
lock
lods
sbb
test
test
pop
sarl
test
mov
jb
cmpsb
sbb
gs
adc
pop
sahf
mov
jo
mov
fisubs
jle
adc
add
xchg
cld
push
shlb
int
shll
test
jbe
sbb
rol
inc
pop
sbb
add
push
adc
fisubs
popf
jg
xor
xchg
xor
mov
idivb
mov
stos
push
mov
jmp
jg
movsl
xchg
mov
pop
sarb
lods
sbb
cmp
dec
push
cltd
mov
imul
dec
cmp
mov
icebp
mov
sub
ss
xchg
sti
jge
ret
and
sbb
xchg
push
rolb
and
add
enter
ror
ds
dec
xorl
in
mov
dec
adc
xchg
imul
testb
in
inc
subb
push
add
pop
rol
or
inc
cmp
mov
sbb
pop
add
addr16
xor
jne
shlb
push
mov
push
add
in
pop
sub
xlat
insb
cmp
mov
and
xchg
sub
fcompl
stc
lea
lds
jp
pop
pop
cmc
lcall
and
lock
std
test
dec
xor
xor
imull
and
push
ficomps
xchg
dec
push
je
inc
mov
sbb
xchg
xor
lock
ret
cmp
add
aam
inc
aas
rcll
repnz
jle
scas
ss
xor
imul
aad
adc
mov
imul
or
cltd
mov
in
movsb
mov
xchg
and
push
inc
enter
inc
cmp
sub
or
int3
rcr
dec
lahf
mov
push
xchg
push
dec
xor
nop
push
mov
dec
inc
inc
mov
xchg
js
pop
xchg
fdivr
adc
mov
es
mov
adc
sub
and
mov
push
mov
sub
xorb
adc
inc
xchg
mov
out
inc
dec
mov
shll
xchg
jl
cmp
cmpsb
dec
in
out
jge
andl
enter
movsl
in
subl
adcl
jecxz
adcl
or
add
push
repnz
cld
push
mov
mov
or
adc
stos
dec
jae
sub
mov
das
and
mov
ja
xchg
fsts
mov
or
mov
loop
aaa
sahf
lahf
pop
jnp
cmpsb
shll
adc
dec
rorl
xchg
lods
mulb
in
test
int3
sbb
push
xchg
and
jmp
mov
into
ss
test
test
insb
mov
cmpsb
pop
inc
inc
cmp
inc
add
or
loope
or
lret
fdivs
dec
push
cmp
jns
push
mov
sub
dec
push
xchg
add
cmp
mov
jne
mov
sbb
or
popa
mov
push
mov
adc
pop
xor
pop
jg
jmp
push
daa
enter
jge
mov
clc
mov
ja
sbb
dec
xor
pop
sahf
add
jns
sbb
xor
fcomps
inc
flds
mov
hlt
push
daa
lcall
insl
or
jno
mov
push
xor
jns
movsb
xchg
adc
daa
enter
sahf
dec
pop
cmc
imul
inc
rcr
ja
ja
cmc
icebp
mov
outsb
repz
mov
cmp
add
push
adc
outsl
out
xor
test
enter
stos
mov
add
xchg
das
insb
aaa
shl
cmp
in
lahf
les
aam
loope
adc
dec
jns
push
pop
dec
and
movsb
jle
push
rclb
popf
cs
rcl
mov
adc
test
cmp
pushf
daa
aaa
mov
loopne
jne
imul
hlt
jp
mov
movsb
xchg
enter
imul
sub
or
add
sbb
insl
adc
popf
pop
mov
jg
xor
adc
mov
or
pop
stos
mov
jmp
cmc
jno
adcb
adcl
sub
xchg
cmpsl
movsl
lcall
push
mov
inc
dec
sub
and
xchg
cwtl
adc
cmp
and
add
fs
pop
adc
mov
sbb
add
inc
fdivrl
data16
hlt
cmpsb
mov
push
xchg
repnz
aad
dec
cmp
and
push
or
adc
fnstsw
jmp
or
dec
push
insl
xchg
mov
xchg
cmp
in
xchg
lahf
sbb
xchg
push
pushf
mov
push
fstl
cmpsl
divl
popl
addl
cli
test
dec
icebp
push
pop
dec
cltd
adc
mov
cli
rep
data16
sarl
mov
xor
push
loop
int3
xchg
adc
xor
pop
std
cmpsl
out
sahf
mov
sysret
jg
mov
or
xor
fwait
cltd
loopne
jl
mov
xor
movsb
push
mov
jmp
out
or
pop
dec
jns
es
mov
shll
sub
sub
and
roll
inc
fistps
fistpll
es
sub
es
iret
mov
sub
test
sbb
out
cld
ja
sbb
and
and
enter
pop
call
loop
jg
outsl
in
mov
add
mov
dec
aam
and
lahf
orl
xor
cmpsb
sbb
fs
or
cld
addl
push
mov
outsl
in
pop
xchg
jo
fldenv
pop
jb
testl
lcall
fildll
jle
cmp
orb
jns
lods
int3
lahf
adc
push
mov
pop
cmp
cld
cmpl
popf
inc
add
loopne
mov
decb
lds
push
adc
jb
pop
das
mov
and
dec
mov
in
and
push
ja
shlb
adc
or
arpl
ret
pop
insb
cmpsl
out
jo
cld
les
push
cmc
bound
add
scas
dec
and
mov
int3
sub
dec
mov
lock
dec
xchg
pop
adc
loope
test
or
pop
xchg
add
mov
loopne
sub
dec
add
cmp
mov
mov
stos
cmpsb
push
out
cmpsb
jp
jl
jl
nop
movsl
push
mov
xchg
xor
push
in
adc
outsl
inc
icebp
icebp
mull
lea
shlb
scas
stos
in
test
and
subl
ret
dec
popa
aaa
jb
cltd
call
inc
in
test
icebp
fiaddl
in
jns
mov
and
je
add
sub
daa
lahf
sarb
mov
add
or
iret
inc
or
aad
cmp
add
cmp
dec
sarl
mov
in
nop
xchg
xchg
sbb
movsl
aad
adc
repnz
pop
fldt
cmp
xlat
je
fsts
mov
or
pop
imul
pop
sub
shlb
sbb
jge
mov
mov
sub
or
xchg
lds
jbe
cmpb
xchg
xchg
jb
pop
mov
rdpmc
mov
inc
pop
mov
int3
mov
cmp
popf
out
int
pop
test
jle
orb
mov
jb
cmp
jle
test
insl
lret
xchg
pop
push
hlt
jne
push
mov
arpl
test
fdivrp
test
bound
cmp
cltd
and
inc
adc
fcomps
insb
fsubr
jne
repz
ss
xchg
mov
scas
out
pop
jne
sub
sbb
sbb
mov
bound
lret
fcoml
ja
pop
xchg
or
mov
push
das
xor
cmp
fiaddl
or
mov
iret
sbbb
loope
mov
lret
fsubrl
xor
xor
arpl
pusha
mov
xchg
repz
shr
leave
fstl
test
adc
lcall
cmp
jg
jo
mov
push
iret
mov
xchg
loop
add
pop
jo
xchg
out
test
and
or
cmp
cmp
ja
sbb
xchg
push
lock
cmpsl
and
das
or
xchg
out
fwait
popf
pop
push
insl
fnstsw
pop
cwtl
push
mov
jns
ds
imul
fldenv
and
movsl
xor
xchg
fs
filds
scas
cmp
insb
lods
fwait
bnd
push
lret
enter
cmp
insb
mov
mov
jbe
push
fbld
and
mov
inc
mov
dec
iret
test
scas
sarl
lods
inc
dec
bound
ljmp
out
outsb
or
call
test
push
mov
je
sub
mov
pop
lods
xor
sub
aad
mov
scas
icebp
call
and
xchg
scas
or
divb
dec
repnz
lock
sub
xchg
inc
outsl
xchg
cmp
int3
mov
push
out
inc
mov
sub
in
inc
dec
xchg
pop
call
mov
and
xlat
call
int3
mov
ficomps
xchg
out
nop
rcrb
rcrb
scas
rclb
fsubl
add
mov
pushf
rolb
pop
mov
inc
push
fwait
mov
xchg
cmp
mov
cmpsb
in
int
nop
push
daa
imul
ret
inc
sub
and
xor
mov
inc
rcll
cmp
in
mov
das
testl
mov
and
mov
pop
es
sahf
addr16
sub
fisttpl
mov
dec
mov
fwait
mov
cmp
sub
ja
mov
sub
repz
mov
pop
adc
sbb
addr16
stos
xchg
cmp
lcall
popf
add
xchg
jp
popa
mov
or
inc
lods
mov
ret
cld
loop
jecxz
aad
mov
rcr
jnp
mov
mov
in
push
int3
xchg
fdivs
mov
hlt
and
int
hlt
or
test
sbb
lock
inc
inc
or
scas
fisubl
xor
and
adc
movsb
sub
sbb
dec
ja
in
add
psrad
vmovntps
dec
and
pop
push
in
sahf
xchg
cmc
mov
divl
sub
out
stos
leave
cmp
xchg
pop
mov
push
psrlq
fwait
outsl
mov
xchg
xor
int
cmp
dec
callw
repz
cld
sbb
ret
mov
jmp
aam
jmp
push
nop
ds
xor
cmpsb
aaa
sbb
aaa
ljmp
jb
jo
es
je
das
sbb
pop
mov
stos
mov
fcmovne
mov
dec
add
adc
sbb
icebp
jg
lea
nop
pushf
push
rclb
arpl
sahf
cmp
sbb
jne
xchg
jne
int3
dec
arpl
imul
pop
dec
sub
ret
sbbb
dec
adc
loope
subl
divb
mov
mov
ds
enter
sti
inc
adc
xor
dec
cli
cmp
add
dec
jge
in
scas
in
lds
data16
mov
sbb
pushf
pop
outsb
sub
stos
faddp
daa
iret
and
mov
jno
dec
divl
jp
fiaddl
sbb
and
pop
bound
enter
leave
jmp
lock
inc
xor
mov
pop
cld
scas
cmp
inc
and
jecxz
icebp
or
cmpsb
inc
stos
lea
inc
fdivr
dec
add
in
xchg
fisubrs
mov
pushf
xor
mov
and
rorl
sub
or
mov
sbb
mov
lods
ja
sbb
sub
aam
adc
lock
hlt
stos
xchg
xor
xor
fs
sbb
mov
lret
in
cmp
sub
out
fsubrl
ret
test
push
push
popa
inc
mov
out
out
outsl
fcmovnu
and
icebp
decb
sbb
adc
cli
aaa
je
fists
jae
ds
repnz
sub
dec
icebp
std
fsts
cmpsl
xchg
pop
in
fdivrl
pop
or
out
bound
jbe
mov
pop
and
cmp
aaa
dec
adc
xrelease
pop
sbb
or
pop
inc
jo
bound
cmpl
outsb
fsubrl
push
dec
xchg
add
aam
and
push
fstpt
jecxz
lret
into
icebp
cwtl
int3
repz
sbb
adc
mov
jns
mov
jb
rcrl
jg
leave
movsl
pushf
xor
sbb
stc
adc
inc
adc
jp
mov
dec
inc
cmp
adc
sub
and
xor
mov
dec
lea
movb
test
inc
scas
push
dec
inc
mov
ss
xchg
fdivrl
mov
clc
pop
int
cltd
js
inc
fidivl
das
outsb
sbb
push
lret
sbb
sti
leave
sbb
shl
inc
clc
xor
in
adc
jp
add
in
cmp
je
mov
mov
adc
test
mov
data16
out
and
xor
cmp
call
pop
mov
scas
aas
pop
stos
es
mov
sbb
xchg
mov
cmpsb
xchg
xor
or
popf
and
iret
xchg
stos
movsl
pop
pusha
in
fdivs
xor
mov
jbe
div
fisttpl
pop
or
add
pop
sub
loop
pusha
add
jle
sarl
cmp
outsb
jno
dec
aam
fisubl
xchg
cmp
fwait
and
std
mov
mov
lret
dec
stc
jp
ds
mov
xchg
cmp
jb
cmpsl
fsubl
and
addb
adc
call
fisttpl
adc
sub
and
ds
test
pop
mov
inc
xor
push
pusha
gs
fnsave
jno
cli
leave
leave
push
inc
sub
mov
lcall
arpl
loope
dec
popa
push
mov
add
dec
std
cli
rcrb
cmpsl
jae
loope
jle
mov
adcl
mov
push
push
nop
xchg
stc
push
adc
lcall
lock
int
cmpsb
and
cmc
inc
pop
out
jp
cmpsl
cs
inc
jg
icebp
test
fs
fimull
lret
pushf
out
out
cltd
and
xor
cmc
testb
insl
cmpsb
lea
mov
sub
stos
xor
and
jl
push
lcall
mov
nop
push
mov
sbb
inc
cmc
movsb
mov
repnz
push
xchg
imul
mov
mov
cmc
adc
jge
std
xor
fwait
lret
add
sbb
push
and
mov
fnstcw
push
jmp
mov
jb
jg
test
addb
xor
ljmp
push
xchg
hlt
pop
jne
ret
fstpl
gs
sahf
in
cmp
inc
mov
popf
test
mov
pop
add
xor
mov
sub
and
mov
pop
inc
xor
push
imul
cmp
pop
xchg
jle
or
mov
test
ret
sbb
jb
sbb
sti
aaa
pop
add
xchg
mov
pop
subl
cmp
or
cmp
ljmp
push
mov
push
mov
push
mov
fs
xchg
push
fistl
sbb
push
push
jo
pop
fbld
dec
mov
jae
imul
xlat
pop
imul
clc
and
xchg
dec
dec
cmc
out
cmpsl
ja
aam
adc
jae
pop
nop
jecxz
mov
cmpsb
in
dec
stos
add
mov
outsl
enter
addr16
mov
call
mov
lcall
pop
bound
dec
je
in
xchg
dec
jecxz
sti
cmp
adc
sub
mov
push
push
cmp
and
pop
loope
push
ss
xchg
mov
adc
sub
cli
mov
jge
or
jns
scas
sbb
je
insl
dec
roll
dec
les
xor
add
jae
pop
stos
cs
fimuls
inc
cmp
push
repz
inc
jns
inc
test
xchg
movsl
pop
aaa
negb
movsb
iret
es
xchg
xor
int3
stos
add
push
mov
adc
hlt
cmp
inc
call
cs
or
cmp
cld
rcr
push
clc
mov
stc
xor
cmpsb
popa
cmp
clc
adc
jns
les
flds
stc
sbb
test
lds
adc
aad
push
addb
fiaddl
inc
and
jo
or
sahf
int
xor
repz
shlb
mull
lock
sbb
dec
xchg
arpl
arpl
xor
xchg
shll
lea
pop
rorl
or
nop
repz
stc
and
xchg
push
and
mov
push
lea
xchg
xchg
sbb
aas
dec
pop
insb
mov
shlb
mov
enter
xchg
jne
and
stc
mov
adc
inc
adc
sahf
in
mov
dec
dec
pop
lods
adc
ja
push
add
cli
pop
dec
dec
sbbl
xchg
iret
xor
mov
push
stos
adc
pop
pop
dec
dec
cmp
adc
loop
scas
out
fbld
jge
add
cmpsl
loopne
pop
mov
lods
push
loop
rclb
nop
xor
ja
jno
lds
imul
stos
imull
cs
mov
int
int3
mov
inc
aas
test
mov
mov
xchg
inc
lods
in
fdivrl
xchg
sub
ljmp
scas
push
and
mov
call
addr16
inc
mov
shrl
inc
add
iret
mov
and
cmp
mov
sahf
xchg
mov
insl
inc
sub
jg
sub
pop
push
cs
mov
leave
dec
std
sbb
or
out
icebp
xlat
ret
mov
stos
outsb
push
or
sbbl
mov
gs
repz
jo
ds
dec
inc
dec
repz
pop
push
aas
add
int
loopne
or
stos
pop
inc
mov
pop
imul
or
js
sub
xor
bnd
scas
push
adc
xor
cmp
cmpsb
fdivrl
aaa
lock
xchg
loopne
dec
pusha
sbb
sarl
outsl
push
aas
jg
adc
decl
stos
fbstp
test
into
xchg
shll
and
xlat
add
xlat
push
dec
sbbb
clc
adc
and
test
ret
ja
adc
cmp
cmpb
imul
cmp
sbb
push
or
jb
pusha
ss
and
push
sub
sbb
push
and
inc
fsts
data16
clc
push
insl
cmp
sbbb
push
inc
pusha
sub
jbe
aad
push
dec
out
rclb
xor
cmc
or
aaa
mov
mov
xchg
outsl
mov
pop
insl
leave
xor
pop
in
lret
loope
in
imul
ss
popa
jae
rorl
push
mov
icebp
mov
fstl
push
add
in
push
mov
insl
hlt
rcl
fdivs
cli
pushf
adc
and
inc
addr16
xor
rclb
pop
aam
aad
loopne
mov
jecxz
rcrb
adc
inc
adc
adc
cmpsl
dec
aad
roll
and
and
push
cltd
push
cltd
das
rclb
fcoms
cmp
sub
adc
addb
jl
aas
fidivrs
and
dec
lds
xchg
jge
lcall
jmp
push
mov
imul
arpl
dec
jp
ror
push
push
jg
mov
icebp
push
lret
cmpsl
add
adc
aam
adc
sbb
loopne
add
divl
mov
scas
cmp
push
sti
jecxz
test
cmc
mov
push
dec
pop
dec
sbb
sbb
into
aaa
loop
sub
rorl
leave
ret
cmc
aam
cmp
sub
push
fistpll
andl
and
pop
xor
dec
mov
ret
cmpsb
lahf
je
test
cvtdq2ps
jmp
out
loopne
add
aam
scas
push
adcl
inc
addr16
lds
jecxz
pop
ficompl
outsl
mov
lret
les
push
rcrl
mov
popa
test
inc
pop
cmp
arpl
nop
and
jbe
push
adc
mov
dec
leave
jnp
out
push
pop
cmp
loope
loop
add
insb
insb
shrb
mov
push
jnp
leave
in
int3
outsl
movsl
inc
sub
hlt
dec
hlt
hlt
inc
mull
aas
pushf
notb
mov
push
sub
mov
jge
mov
xor
or
inc
inc
inc
or
mov
mul
mov
or
or
pushw
lret
adc
testb
lcall
pop
faddp
lods
subb
xor
add
and
xchg
je
pop
push
imul
stos
jecxz
xor
jbe
dec
mov
push
daa
out
xor
dec
fistpl
cmp
add
shl
sbb
and
xchg
inc
push
jno
cmpsl
aad
dec
out
xlat
adc
add
push
out
jnp
mov
sbbl
xorl
nop
insl
and
jp
adc
dec
mov
andb
push
xchg
nop
out
lret
movsl
cmp
ret
fidivrl
push
data16
dec
pop
xchg
mov
lret
pop
test
repz
sahf
cmp
out
or
pop
cmp
subl
sar
mov
orl
lock
cmpsl
addr16
pop
popf
mov
dec
adc
out
lret
fcmovbe
mov
fadds
arpl
dec
jp
sub
sub
pushf
cmc
adcl
test
daa
and
push
cltd
or
vpextrw
lds
jae
lods
mov
xchg
and
push
stos
dec
pop
sub
jns
xchg
fnsave
inc
enter
rol
push
xor
xor
push
hlt
xchg
mov
jne
fs
or
lret
inc
pop
shll
filds
xor
jae
out
or
das
and
sub
dec
je
mov
xor
dec
jp
loope,pt
pusha
mov
push
jg
fs
xor
imul
dec
push
mov
dec
jg
dec
movsl
push
push
movsl
dec
in
int
ds
inc
push
out
cmp
adc
scas
scas
test
mov
enter
add
mov
pop
pop
or
test
sbb
flds
into
inc
outsl
and
test
lock
repz
sbb
xchg
sub
push
sbb
sbb
lea
test
iret
push
jbe
cwtl
std
mov
inc
cltd
pusha
jno
sbb
dec
sahf
cs
mov
rolb
jb
adc
push
scas
mov
mov
jnp
and
fcmovnu
lock
or
dec
add
mov
mov
scas
stos
outsb
ljmp
movsb
pop
sti
in
mov
in
paddusb
jmp
imulb
ret
aas
push
insb
lds
push
and
sub
das
push
xchg
jge
adc
sti
clc
cmp
ret
imul
filds
push
lret
push
mov
lods
insl
hlt
mov
xor
dec
dec
ret
sbb
idivl
out
push
mov
mov
or
sbb
push
add
xchg
ja
xchg
mov
aad
lahf
sub
mov
xor
push
and
adc
icebp
popa
cld
mov
pop
mov
movsb
out
call
arpl
xchg
mov
add
push
lea
dec
mov
lcall
jno
insl
outsl
mov
and
push
nop
sbb
pusha
jle
aam
in
lods
mov
movsb
jge
or
and
jo
cmpsl
and
lock
ja
adcl
nop
or
push
lcall
add
pop
add
push
push
lods
scas
mov
sbb
sarl
movsl
lahf
mov
or
xor
cmp
mov
or
sub
sbb
rcr
shrl
js
xchg
xor
in
xchg
xor
xlat
ljmp
imul
shrb
push
mov
jp
lods
push
or
push
cmp
testl
movsb
xlat
inc
fistl
lds
push
xchg
cmpsl
adc
cmp
bound
outsb
fimull
sub
iret
xlat
jecxz
mov
mov
mov
or
pop
out
ds
and
ja
iret
repz
inc
sub
jnp
fimull
and
in
add
xor
pop
cmpsb
inc
cmp
jge
mov
fisttpl
push
pop
or
test
sub
push
es
test
xchg
imull
icebp
add
sbb
cmc
imul
or
add
int
inc
jae
pop
jo
or
outsb
lcall
repnz
push
add
adc
push
lods
mov
push
rolb
jne
lock
sti
iret
cmpsb
loopne
call
into
movsb
stos
dec
in
cmp
iret
scas
and
scas
push
dec
xchg
cmc
dec
cmp
mov
pop
aaa
jns
dec
mov
cmpsl
mov
pop
sub
out
cwtl
and
popa
lea
fcomip
mov
xor
jge
lods
sub
jmp
push
or
sarb
rolb
add
jne
mov
xor
sarl
roll
lret
aas
xlat
and
inc
lods
notl
aad
ja
out
mov
pop
jg
adc
xor
mov
inc
add
sarl
fcmovbe
test
sub
sahf
fs
insb
insb
test
aaa
es
leave
add
ljmp
dec
pop
adc
pop
push
pop
and
xor
push
aas
cs
mov
push
push
sbbl
cwtl
out
pop
and
lock
jbe
mov
jb
mov
xor
inc
push
je
adc
mov
pop
notl
lahf
dec
xor
add
adc
and
sbb
testb
aad
clc
js
fbld
leave
push
mov
stos
mov
mov
fimull
es
xchg
push
push
lods
sbb
gs
mov
mov
stos
add
addl
stos
subl
add
aad
stos
adc
jmp
inc
sbb
xor
movsb
sub
lods
in
test
or
push
inc
xchg
mov
pop
push
cmpsb
je
dec
ds
xchg
adc
and
shrb
sub
rcl
push
hlt
dec
xchg
sub
xchg
cmc
popf
bound
arpl
in
negb
shrl
popf
es
pop
scas
jne
jo
pusha
dec
mov
push
xor
or
mov
in
cmp
push
inc
test
mov
int
in
jge
shlb
jg
loope
push
adc
je
stos
mov
xor
clc
popf
lds
notl
aad
cmp
jp
les
sbb
jmp
push
dec
xchg
ret
inc
dec
cmc
js
mov
fmull
in
push
xor
lahf
mov
lea
pop
rcrl
push
pop
pusha
push
je
push
fidivl
and
adc
and
in
xchg
mov
mov
sbb
xor
or
or
lods
mov
fsubp
shlb
and
sbb
mov
sub
mov
inc
into
fdivrs
jnp
mov
dec
pop
out
ja
bound
ret
aad
adc
nop
lock
adc
sub
pop
ret
push
xchg
xchg
les
xchg
andps
inc
testb
mov
fwait
jg
in
fwait
pop
xchg
and
sbbl
jl
lret
test
clc
jge
pop
xchg
fisubrs
out
cmp
in
add
test
mov
rolb
mov
mov
mov
loop
repnz
xchg
lods
scas
mov
es
mov
inc
das
aaa
int
mov
jno
stc
repz
mov
lret
cld
jne
sbb
js
mov
xor
mov
xchg
mov
roll
cmovbe
or
mov
jae
xchg
pop
aaa
pop
and
jns
inc
xorb
stos
cmp
xor
nop
fwait
imul
pusha
xchg
sub
inc
or
dec
cmp
cmp
add
pop
pop
xchg
lret
push
lods
mov
scas
pop
lock
cmp
ja
sub
cmp
ljmp
ficoml
push
cmp
loop
inc
xor
pop
xor
xchg
or
fs
stos
pop
les
scas
outsb
mov
fbld
nop
jge
icebp
loopne
nop
dec
lahf
gs
sbb
dec
inc
xor
aas
xchg
sbb
fistl
pop
jge
in
out
xor
lods
push
mov
rcrl
fcoml
outsl
cli
les
cmp
gs
cmp
cmc
in
sbb
lods
xchg
sti
adc
mov
cmc
sahf
imul
andb
mov
aas
rclb
push
aad
popa
jmp
mov
sbb
sahf
sbb
or
cwtl
cwtl
cmp
sbbl
scas
sub
out
push
ljmp
cmpsl
sarb
mov
push
xchg
and
int
pop
cmp
stos
fidivrs
int3
ljmp
push
fsts
mov
std
insl
mov
sub
xchg
ret
push
pop
push
out
ror
daa
jae
push
clc
push
mov
xor
sahf
jae
movsb
fildl
insl
mov
movsb
and
pop
sbb
xor
shll
adc
ja
push
or
fsubr
call
cmp
sub
push
xlat
pop
add
jne
mov
sbb
xchg
out
cmpsb
fcmovb
mov
jmp
fdivr
cmp
outsl
call
addr16
imul
aad
sarb
xchg
pop
pop
mov
xchg
dec
push
aam
lods
out
mov
rcrl
dec
call
clc
push
and
mov
iret
std
test
loope
inc
aaa
sbb
pop
decb
lods
adc
adc
push
test
cmpsl
addb
stos
xchg
scas
and
fs
lods
js
xchg
sbb
sbb
les
ja
xor
pop
mov
adc
jb
clc
incl
sbb
enter
add
dec
pop
icebp
jmp
inc
int3
xor
mov
mov
sub
or
mov
hlt
and
fidivrl
jl
mov
pushf
xchg
daa
inc
mov
mov
aaa
addb
repz
fstpl
dec
xor
inc
imulb
sbb
gs
call
adc
cmp
pop
or
jle
dec
lret
int3
jb
xchg
sbb
sub
mov
mov
jne
ret
cmp
int
pop
add
cmpsl
cmp
jns
arpl
insl
add
inc
push
test
out
int3
inc
loop
push
push
cli
adc
adc
dec
in
or
in
pushl
push
imul
xchg
outsb
orl
stc
mov
adc
aaa
stos
jae
add
jns
outsl
testl
sub
jl
aaa
adc
inc
dec
leave
repz
scas
stos
mov
jg
jno
pop
adc
mov
or
nop
push
mov
mov
in
mov
adc
adc
and
clts
iret
xor
jge
jae
insb
in
xchg
sahf
hlt
mov
mov
or
test
adc
loop
add
inc
fistpll
push
xchg
jp
and
push
push
jno
repz
xchg
les
xor
scas
test
cmpsl
sbb
test
ror
dec
mov
sub
adc
mov
testb
jb
popa
xchg
fdivl
call
or
std
fstps
xor
mov
mov
pop
sub
cmp
rcrl
ficomps
dec
add
pop
jmp
sub
pop
fs
push
mov
adc
out
inc
ljmp
xchg
mov
out
add
or
addr16
jmp
mov
cmp
lock
shrb
mov
sub
or
roll
add
je
fdivrl
out
push
pop
jae
out
scas
movsb
add
xchg
push
mov
sbb
psrlw
add
jbe
inc
ret
sbb
loopne
xchg
out
and
mov
add
jg
and
mov
clc
mov
jecxz
out
xchg
int3
push
aad
mov
add
in
ret
jp
jmp
cs
int3
lods
push
push
lock
add
mov
call
mov
and
cli
pushf
cmp
pop
stos
push
cmp
adc
xchg
shrb
fcom
xor
fs
mov
outsl
mov
xor
jns
push
pop
lahf
dec
jae
adc
mov
jno
mov
outsl
push
and
inc
add
scas
sub
stc
std
add
cmpsl
sbb
jmp
dec
push
adc
add
pop
cmp
aas
fists
jle
lret
xchg
loopne
adc
repnz
cmpsl
cmp
stc
adc
mov
pop
inc
xor
push
inc
and
mov
gs
cld
jnp
daa
out
notb
mov
stos
lret
dec
sti
lahf
jns
insb
mov
call
cmp
jo
rcll
sub
sub
dec
mov
pop
aam
xchg
xchg
adc
cmp
pop
sti
lret
inc
or
mov
cwtl
cli
jne
dec
jle
jo
lds
cli
test
dec
mov
cmp
jp
and
cltd
scas
push
adc
idivl
mov
je
add
push
cmp
jbe
ret
daa
jb
mov
roll
cmp
pop
addr16
mov
push
in
or
xchg
mov
es
or
pop
dec
xor
and
cs
jp
in
or
mov
pushf
pushl
xor
inc
or
adc
jns
dec
jo
popf
mov
add
decl
es
sub
pop
mov
jecxz
test
test
aas
fwait
mov
or
mov
gs
pushf
or
lahf
popf
xchg
jo
lods
aam
jb
fisttps
mov
jle
lcall
xchg
xor
cmpsl
mul
jns
das
sub
adc
jl
mov
fwait
sbb
incl
xor
cmpsb
xlat
mov
inc
adc
pusha
test
arpl
dec
sbb
mov
xor
stos
rolb
pop
ficoms
aaa
ret
outsl
mov
or
xchg
mov
stos
clc
test
je
roll
xchg
mov
popa
inc
cmp
sbb
les
xor
jno
sbb
clc
mov
xlat
adc
push
ja
js
mov
fsubrl
out
adc
scas
scas
adc
cld
cmp
aam
push
or
adc
orl
jo
loope
es
fdiv
repz
arpl
xlat
add
ss
sbb
ret
jae
rcrb
popa
scas
fnstenv
mov
mov
xchg
jg
aam
add
mov
in
outsb
sbb
insl
pop
inc
inc
fldcw
ficompl
cwtl
stos
sbb
int3
add
mov
or
test
adc
jb
cmp
ds
cltd
mov
and
in
mov
xor
xchg
fisubrl
push
inc
pop
jbe
cld
arpl
adc
ret
xor
xchg
jge
mov
loop
cmc
mov
rcrl
xchg
cld
sub
push
xchg
sub
lds
cmp
jno
mov
push
fildll
cli
aaa
inc
rclb
mov
xor
and
lods
aad
or
cmp
sub
mov
popa
lock
iret
icebp
fisubs
lret
cmp
jmp
fsub
mov
dec
pop
pop
mov
ljmp
lea
xor
xchg
dec
lcall
fsts
sahf
lds
mov
mov
addr16
xchg
adc
inc
shl
fnstenv
sbb
not
sub
xchg
inc
icebp
sahf
fcoms
and
js
rcrl
xchg
notb
aas
fcmovnb
call
inc
sarl
adc
sti
lcall
cwtl
pop
sbb
test
adc
cmp
add
mov
sahf
fwait
and
dec
cmp
jle
fcmovbe
outsl
movsb
in
mov
xchg
dec
fdiv
push
std
sub
scas
out
fistps
fcmovne
mov
adc
pop
xchg
insb
pop
push
pop
cmpsl
hlt
mov
repnz
inc
test
pop
stos
push
ljmp
lea
rolb
pop
pop
pushf
cmp
ja
sub
jle
stc
pop
push
inc
xor
daa
mov
enter
lret
sbb
jecxz
push
jo
incb
test
idivb
shl
aad
push
outsb
jl
inc
mov
adc
test
test
test
mov
xor
out
jg
sbb
test
and
mov
movsl
dec
gs
pop
mov
sub
push
and
dec
push
lcall
mov
xor
lea
lock
out
in
mov
and
mov
stos
clc
or
es
repz
xlat
popf
xchg
pop
das
lock
repz
mov
mov
ss
dec
je
shl
ljmp
mov
jp
mov
ljmp
lret
aas
lock
mov
jbe
cmpsl
lret
test
mov
cmp
mov
pop
mov
or
mov
insb
inc
push
hlt
adc
xacquire
jae
aam
ljmp
push
hlt
jne
sub
or
jp
add
std
add
andl
mov
cld
in
cwtl
out
into
sub
sahf
cltd
push
insl
cmpsb
push
mov
xchg
xchg
divb
call
jmp
lret
nop
in
ret
insb
xchg
add
daa
xchg
jmp
lods
rolb
add
pop
loopne
mov
xor
sbb
pop
stos
lods
shll
mov
and
dec
cmp
jae
insl
inc
in
xchg
jle
lcall
sub
shl
dec
test
push
lret
mov
in
cmp
pop
ret
in
in
ret
pop
inc
sahf
mov
ficoms
cmp
pop
data16
leave
in
cmp
jns
ss
fwait
or
cli
pusha
jne
mov
outsl
aas
pop
mov
and
pop
out
nop
test
sbb
mov
lods
add
cltd
pop
adc
mov
mov
or
and
mov
dec
xor
daa
and
aad
in
jns
cmpsb
pop
cmc
repz
popa
cmpl
leave
inc
in
les
push
int
ds
popa
cmp
push
fcoml
mov
into
pop
ret
xor
dec
scas
lea
shrl
mov
stos
adc
mov
cmp
pop
pop
pop
fdiv
push
and
pop
xlat
orb
popf
shrb
add
push
das
arpl
cmp
mov
sbb
int3
xchg
add
jl
stos
inc
mov
push
fcmovnb
xchg
bound
or
cltd
ret
cmpsb
stos
call
sub
aam
xchg
sbb
push
aad
nop
dec
push
mov
std
inc
jns
leave
int3
mov
add
pop
add
jmp
aaa
mov
stc
jecxz
sbb
aad
pop
jns
fdivl
xor
dec
cs
jbe
mov
jmp
ja
pop
dec
adc
inc
stc
mov
lret
pop
ja
ljmp
jne
mov
ja
jo
je
xchg
inc
addr16
mov
push
test
loop
inc
pop
in
mov
sbbb
mov
xorb
les
jno
dec
lret
push
rclb
push
jp
jmp
jns
dec
sbb
in
mov
jg
mov
test
add
mov
and
aas
pop
jnp
adc
loope
bound
aaa
cmp
out
leave
scas
push
sub
mov
or
js
dec
push
andb
mov
and
push
fsubl
and
mov
xchg
xchg
add
fcoml
cmp
repz
loopne
mov
or
xchg
adc
jns
sahf
enter
test
or
sar
inc
adc
push
pop
aas
inc
mov
pop
cmp
pop
add
loope
in
jae
vsubps
fldcw
lret
cmp
scas
sbb
dec
in
mov
xor
adc
lret
inc
sub
cld
push
cmp
sarl
mov
xor
dec
mov
adc
push
ret
mov
mov
push
adc
scas
pop
pop
pop
add
aad
aad
loopne
ret
daa
pop
test
popf
imul
xchg
mov
sbb
mov
pop
popf
mov
pop
xor
out
dec
test
xchg
xchg
notb
sub
mov
and
mov
xchg
inc
jno
adc
or
xchg
xchg
loope
inc
data16
xchg
mov
in
lret
pop
jp
mov
mov
hlt
and
dec
fldl
mov
cmpsb
pop
leave
addr16
mov
cld
xor
mov
jmp
outsb
sub
iret
inc
nop
in
mov
fdivrs
mov
rol
imul
mov
or
or
scas
daa
push
dec
pop
sbb
into
nop
iret
loopne
imul
sbb
adc
sub
jne
mov
test
jge
cld
push
stos
mov
mov
test
fstpt
sub
outsb
adc
mov
mov
sarl
sub
or
mov
stc
inc
test
push
nop
push
aam
mov
sub
cltd
fdivr
in
pop
adc
sbb
mov
xchg
aaa
sub
xor
sub
xchg
push
leave
push
add
dec
mov
shl
sub
aad
fimuls
cmpsb
cmp
inc
inc
fwait
cmc
daa
sbb
mov
std
in
push
lds
jno
adc
push
cmpsb
insl
inc
movsl
jp
push
lcall
mov
gs
add
and
add
xchg
xlat
jg
cwtl
sbb
stc
mov
ret
pop
mov
push
add
xchg
pop
xor
push
les
and
pop
leave
dec
repz
les
or
xor
add
nop
test
cld
inc
mov
sub
inc
in
add
or
cmpsb
sbb
add
lods
int3
and
add
mov
popf
push
xor
lds
test
ficomps
and
sbb
push
sbb
inc
mov
inc
aas
pop
xlat
lea
add
mov
mov
andb
jle
or
jg
xor
fdivrp
inc
inc
clc
cmc
xor
xor
jp
test
xorl
dec
mov
aaa
repz
xchg
fcoms
adc
mov
pop
leave
inc
sbb
outsl
jge
fstps
xor
loop
mov
fwait
iret
and
cmpsl
mov
push
xchg
push
inc
rcrl
mov
gs
jg
in
jb
mov
xchg
stc
pop
and
pop
xlat
stc
mov
out
cli
add
lock
cmp
or
add
push
pop
movsl
jl
adc
cmp
inc
daa
adc
in
sti
mov
mov
sti
xor
ja
lret
ja
sbbl
test
jbe
sub
fldt
cli
test
mov
pop
push
jb
in
int3
sbbl
mov
aas
xchg
pop
adc
jb
xor
xchg
mov
out
pop
xchg
jnp
jbe
lret
stos
inc
inc
push
imul
mov
xchg
jle
xchg
and
mov
int3
loop
xchg
mov
mov
cmpsb
adc
es
fildll
mov
movsl
insb
dec
xchg
rorl
clc
test
das
pop
sbb
fsubrl
gs
lret
stos
sub
adc
add
iret
sub
gs
lds
or
cmp
mov
mov
rol
out
push
adc
push
sahf
or
xor
xor
mov
push
cmp
and
xor
and
lahf
cmp
cli
mov
lahf
bound
xlat
pop
popf
or
pop
sbb
inc
imul
les
pop
cmp
mov
std
loope
lcall
out
out
sub
aas
stos
cmpsb
push
mov
jns
sbb
mov
scas
inc
push
lahf
jge
sbb
ret
mov
hlt
fs
pop
rcrl
iret
js
movsl
in
or
ds
push
mov
test
cmc
lret
sub
lods
insb
stos
movsb
aad
enter
addl
stos
notl
mov
mov
lret
cmp
pop
pop
jbe
push
xchg
rcrb
daa
lea
sub
cmp
push
fisubrs
in
stos
js
pop
xor
mov
and
je
mov
cwtl
pop
dec
dec
fmul
setb
rcrb
jbe
mov
jnp
arpl
dec
push
out
repnz
dec
and
mov
sub
adc
adc
loop
out
mov
insb
inc
call
ficoms
fprem1
test
out
mov
ss
movsl
sub
js
imul
xchg
or
lods
fmuls
jne
push
jle
xlat
mov
xchg
js
aaa
stos
push
ds
movsb
stos
lret
jl
out
fbld
adc
dec
sbb
push
cwtl
dec
ret
add
das
ret
icebp
fnstcw
js
repz
fists
xchg
into
push
mov
out
adc
add
pop
adc
cmc
test
arpl
mov
add
push
and
cwtl
mov
cmp
jmp
adc
mov
cmp
outsl
inc
addr16
pop
aaa
push
adc
das
cmpsl
push
lods
fcomip
inc
das
xchg
call
inc
fldt
mov
lods
fcomip
mov
inc
pop
mov
repz
dec
pop
inc
lock
pusha
fwait
mov
lods
mov
out
dec
lds
loop
loop
popa
adc
mov
in
outsl
mov
jnp
xor
pop
push
nop
or
mov
mov
mov
stc
push
xor
imul
pop
popa
pusha
pop
jecxz
out
out
sbb
cltd
loopne
in
test
idiv
enter
je
mov
adc
orb
jbe
pop
outsl
stc
sarb
lods
adc
jbe
into
scas
sbb
adc
ljmp
jle
sub
inc
inc
filds
pop
pop
push
add
mov
out
mov
inc
fisttpll
dec
or
push
gs
repz
and
push
pop
push
add
bound
push
cmp
or
enter
stc
mov
or
or
xor
arpl
xchg
xchg
pop
adc
aad
xchg
xor
xchg
sahf
mov
stc
sbb
test
push
mov
xor
cltd
add
sbb
js
popf
iret
shlb
test
popf
inc
mov
sub
mov
fisubrl
call
lods
cmp
cmp
or
adc
add
rcrb
mov
imul
cmpsl
iret
add
push
jbe
sahf
sub
lea
in
or
movsb
es
sbb
push
lods
daa
xor
test
out
adc
adc
sbb
fisubl
mov
lock
out
and
mov
xor
mov
push
jmp
xor
push
sub
in
out
pop
pop
movsb
int3
hlt
mov
mov
cmp
out
fstpl
pop
dec
push
mov
push
lods
test
ljmp
dec
xlat
mov
cltd
mov
data16
mov
iret
movsb
push
mov
icebp
iret
dec
mull
stc
incl
iret
pop
jo
in
mov
leave
pop
push
add
jns
push
stos
xor
pop
shrb
int
popa
lock
add
mov
dec
add
mov
aas
repnz
test
sar
sub
imul
lods
test
jno
cmpl
rcll
xchg
inc
xchg
jns
pop
ss
ljmp
cmpsl
stc
iret
insb
jge
out
dec
inc
fwait
cmc
int
mov
sbb
sub
ds
inc
sub
xor
dec
ret
or
hlt
xchg
sbb
es
ret
push
addl
pop
xor
dec
test
rcrb
inc
das
les
xlat
pop
lcall
cmp
fsubl
int
lds
repnz
push
mov
xchg
ficoms
aas
jp
fwait
mov
dec
in
sbb
xor
mov
xchg
loop
pop
or
pop
fdivrl
outsl
jge
scas
inc
inc
loop
sbb
cmp
std
push
dec
or
fstl
mov
xlat
mov
cmp
push
xchg
sarl
aas
aaa
outsb
out
mov
push
add
fsubrl
cltd
pop
rclb
adc
mov
fsubr
bound
data16
ss
add
pushf
dec
lods
fcoms
dec
jl
and
ret
mov
or
dec
fucomp
and
adc
push
push
test
hlt
inc
popf
stos
xchg
rcl
pushf
testl
pushf
cmpsl
imul
icebp
xchg
les
aam
cmp
gs
inc
adc
mov
sbb
lds
cli
enter
ja
cli
icebp
leave
sbb
je
sar
or
pop
lret
mov
inc
dec
xchg
in
inc
xchg
mov
adc
mov
in
mov
dec
loope
mov
mov
xchg
jae
jg
xchg
lret
mov
xchg
aam
xchg
sbb
mov
inc
and
push
test
fdivrl
fs
pop
push
pop
js
idiv
xor
jbe
jg
lret
subb
push
jle
push
fdivr
faddl
gs
mov
sbb
lcall
push
loop
mov
inc
ret
test
inc
insl
fstps
pop
test
pop
scas
mov
mov
xorb
and
inc
xchg
push
and
adc
sub
pop
dec
sti
jne
or
gs
std
jge
out
outsb
mov
ret
ret
push
push
ja
aaa
jle
mov
lahf
push
lods
imul
sub
popf
addr16
aaa
push
test
xchg
jle
mov
xchg
pop
mov
dec
aam
js
pop
pop
mov
pushf
mov
xor
lds
dec
popl
jns
xchg
mov
subl
icebp
add
adc
lock
dec
mov
cli
bound
mov
cli
into
xor
push
cmp
test
sahf
sbb
sub
sub
adc
inc
jle
sbb
pop
cli
cmp
cltd
sar
insb
ret
ret
notl
xchg
lcall
and
sub
fsts
cmp
arpl
das
cwtl
out
cs
and
dec
pop
sub
cs
mov
adc
and
fbld
nop
hlt
push
push
xchg
ret
je
sub
pop
std
pop
add
mov
stos
aaa
outsl
cs
aam
mov
repz
incl
lea
neg
jo
pop
xchg
push
xor
rolb
push
lcall
jle
sbb
add
in
inc
cmp
lret
mov
shr
ss
push
test
jns
cmp
add
jmp
mov
aas
es
insl
cwtl
and
cwtl
pop
orb
xchg
xor
xchg
loop
ret
pop
cli
data16
aad
xchg
insl
aam
stos
outsl
inc
ss
inc
add
sahf
imul
adc
lea
mov
roll
push
or
jae
add
enter
adc
and
pop
mov
mov
sarb
sub
jp
add
ret
popa
pop
cli
mov
or
sub
aaa
mov
adc
cmc
inc
bound
push
icebp
movsb
pop
out
fwait
fwait
jp
stc
xor
xchg
push
or
lds
cmp
fdivrs
mov
dec
dec
aam
xor
jns
dec
pop
pop
xor
mov
in
xor
fisttpl
addb
ret
mov
add
outsb
movsl
out
pop
xlat
bound
sbb
mov
fs
cltd
out
xchg
sub
lret
es
mov
mov
sbb
jmp
pop
xor
loopne
dec
cli
xchg
jle
sbb
xor
jge
adc
icebp
cmpsl
sbb
lahf
imul
data16
lret
push
cli
mov
pop
mov
js
sbb
xchg
ds
jns
adc
adc
xchg
bound
fisubrs
out
pop
xlat
mov
sub
ss
add
and
call
stc
dec
es
cmpsl
hlt
jmp
cwtl
dec
mov
outsl
insl
sub
lahf
test
mov
add
stc
jno
mov
imul
repz
dec
mov
movsl
jno
xchg
in
aaa
mov
int3
enter
or
mov
jp
inc
movsb
xchg
in
jp
push
out
jg
leave
push
dec
fsubrs
sbb
sub
jo
lods
icebp
mov
cmp
in
dec
push
lahf
rclb
mov
cmpsb
rorb
sarb
imul
outsl
aad
mov
int
push
push
add
mov
mov
mov
xchg
outsb
pop
mov
clc
sbb
mov
mov
lds
test
inc
sub
arpl
imul
cld
jp
and
mov
mov
scas
and
daa
lds
es
std
mov
add
or
loop
stos
sub
hlt
jns
push
inc
pusha
xchg
pusha
fsubl
movsw
test
dec
xchg
clc
xor
push
add
mov
leave
aad
js
pop
stc
ret
add
xorb
and
xor
imul
pop
mov
sbb
aad
nop
xchg
mov
sar
lcall
inc
cmp
and
push
xor
popa
sbbl
xor
fistps
les
push
ja
inc
cmpsl
je
pop
iret
dec
jo
lea
leave
cmp
outsb
sub
aam
or
cmp
fcomi
aas
mov
jecxz
mov
sbb
dec
inc
pop
leave
mov
out
push
cld
cmp
shll
imul
push
jae
test
stos
push
pop
jge
xchg
inc
pop
cmp
pop
mov
cli
sbb
insb
adc
mulb
inc
jge
inc
or
inc
orb
and
pop
iret
cmc
out
jne
fsubl
test
and
add
push
adc
mov
fs
fisttpll
inc
cmpsl
inc
and
incl
push
leave
movsb
pop
and
inc
int
mov
call
sub
jno
xchg
adcb
jp
addr16
pop
fisttpll
movsl
lahf
cld
inc
cmp
ret
add
icebp
pop
ja
mov
jge
xor
jbe
mov
sbb
dec
add
das
xchg
mov
test
cmpsb
xchg
mov
cmpsb
adc
pop
xor
sbbl
pop
ljmp
aas
outsl
and
sahf
sub
ss
pop
sub
lahf
or
lds
mov
filds
jl
sub
mov
ds
mov
sub
sbb
aam
mov
cmc
sbb
jecxz
mov
popw
adcb
push
mov
popf
and
arpl
loop
js
cmp
daa
xchg
clc
push
sbb
dec
daa
mov
sub
fdiv
dec
jmp
inc
mov
in
cmpsl
stos
cwtl
gs
push
cmp
frstor
xor
clc
std
in
movsb
dec
pop
dec
sub
inc
and
cs
and
stos
or
pop
sbb
lret
inc
jmp
mov
aad
xchg
and
push
mov
fwait
movsl
pop
add
out
hlt
jae
push
pushf
mov
push
pop
jl
std
sbb
dec
sub
mov
mov
call
flds
jae
fldt
xor
popf
into
shl
fs
arpl
xor
or
and
inc
xor
pop
push
pop
add
xchg
cwtl
dec
ret
jl
sti
aam
in
fistpl
mov
pop
push
jns
outsl
mov
in
sbb
xchg
movsl
pushf
mov
out
fcompl
add
push
dec
addr16
cmp
and
pop
xchg
fdivs
adc
adc
mov
mov
sub
mov
push
mulb
push
sbb
mov
fwait
pop
loopne
sub
and
inc
push
and
mov
insb
pushf
or
mov
xlat
ret
dec
in
sub
ss
popf
sbb
ret
pushf
and
ja
and
lahf
xor
add
movsb
je
sbb
jp
shrl
jl
cmp
mov
push
dec
scas
test
test
test
xchg
fstpl
xchg
mov
push
hlt
fisubrs
xchg
jg
repnz
jmp
jmp
jl
mov
xchg
jns
loop
popa
mov
sbb
or
pop
fsubr
lcall
push
mov
xor
fistpll
jmp
mov
jp
mov
mov
int3
popf
inc
inc
xchg
sarl
push
cmp
jae,pt
xchg
jl
xchg
xchg
mov
push
iret
mov
jg
push
xor
or
push
scas
enter
repz
fcomi
xor
hlt
adc
jbe
mov
jo
adc
daa
adc
out
outsb
push
sub
jae
aaa
into
mov
or
cmpsl
aad
inc
repnz
jnp
push
cmp
pop
je
pop
inc
jbe
lahf
int
nop
out
out
sbb
aas
inc
xchg
or
push
aam
push
insb
cld
mov
push
mov
cltd
incl
jmp
cmpsl
sbb
inc
push
pop
ja
imul
insb
imul
pop
xlat
movsb
cmpsb
pop
aas
jmp
stos
test
mov
add
inc
sub
xchg
jns
dec
sbb
ret
jge
cld
xchg
inc
clc
aam
sarl
lcall
rclb
in
sub
xor
std
pop
test
push
sub
das
add
sbb
mov
xor
push
cli
lahf
and
arpl
mov
xlat
push
add
xchg
mov
daa
pop
pop
mov
xlat
sbb
mov
fisubrl
sbb
cmp
pop
push
shl
jns
xchg
cmp
sbb
test
int3
decb
inc
ds
imul
movsb
push
dec
pop
fists
loope
push
cmp
shll
stos
jp
inc
or
jno
lds
lret
aam
mov
mov
cmc
sbb
sub
xor
sahf
mov
lcall
inc
and
mov
pop
xchg
xchg
mov
lds
cwtl
sbb
and
ret
filds
test
cs
bnd
pop
or
push
cmpsb
sub
sub
test
scas
mov
pop
int3
test
insb
pcmpgtw
adc
cmp
nop
out
addr16
sbb
aas
xchg
push
mov
mov
inc
ss
iret
loope
fcom
outsb
push
mov
cmp
call
pushf
lods
jno
in
lret
jb
add
repnz
loopne
mov
adc
sbbl
add
add
aam
adc
lcall
les
mov
out
in
or
mov
shll
add
js
inc
mov
push
gs
mov
mov
pop
repz
push
stc
iret
hlt
pusha
cld
inc
mov
psraw
mov
mov
pushf
enter
mov
cmp
xor
shlb
test
xor
jae
mov
push
stc
mov
xchg
lret
cmp
frstor
or
imull
cwtl
insl
sbb
pop
xchg
dec
fsubl
fisttpl
xlat
test
testl
fsubrl
xor
sub
add
mov
es
dec
ljmp
addr16
push
mov
dec
int3
pop
ja
jnp
mov
xchg
insl
cmp
mov
adc
inc
dec
push
aam
rcr
inc
cli
dec
mov
je
cmp
call
or
mov
lea
mov
lods
sub
xor
xor
and
pop
mov
scas
mov
cmpsb
xchg
pop
jne
sbb
xlat
or
sub
fidivs
inc
dec
nop
mov
dec
add
arpl
aaa
xor
insb
dec
arpl
pop
mov
or
insl
lods
in
jl
lods
pop
into
pusha
pop
movsb
sub
icebp
aad
aas
xchg
cmp
cmp
mov
out
jns
shll
lea
xor
xchg
and
in
pop
mov
cmp
cmpsl
push
mov
push
dec
dec
testl
stc
lock
fidivs
fsts
jb
or
cmpsl
mov
push
jnp
sahf
dec
pop
mull
nop
cmp
outsl
sbb
rol
ss
ret
orb
lock
dec
in
add
xor
jne
lods
icebp
enter
cwtl
rclb
loopne
add
pop
cmc
xchg
jle
and
sbbl
rcrl
sbb
fcmovbe
out
pop
stos
push
cld
mov
mov
mov
dec
dec
cmp
popa
lock
add
ja
popf
add
and
and
daa
hlt
jmp
push
lret
in
pop
std
scas
xorl
fdivs
arpl
cmp
fstps
loope
lods
or
fsubr
int
sbb
std
pop
test
adc
fisubrl
push
mov
lea
sbb
cmpb
xorl
inc
xchg
repnz
mov
insb
aad
adc
pop
lds
push
shll
xor
jae
cmpsb
and
lods
jnp
xlat
mov
or
lcall
sbb
es
sub
jecxz
push
das
inc
std
push
mov
call
div
mov
cmp
mov
sbb
push
mov
shlb
mov
cmp
fsubs
jp
pop
jmp
and
shlb
ss
out
mov
add
movb
aam
adc
mov
cmpsb
and
rcl
arpl
xchg
pushf
cmp
frstor
jns
dec
jmp
insl
sbb
iret
push
xchg
cmp
enter
adc
push
and
and
xchg
int3
push
fildl
sbb
mov
sbb
ret
push
loopne
mov
inc
cmpl
xchg
or
adc
loop
xchg
int
xchg
outsl
popf
xchg
cli
xchg
jmp
and
mov
cs
outsl
push
and
es
je
daa
xchg
xchg
test
pop
clc
dec
dec
out
rclb
stc
pop
push
stos
push
mov
xor
xchg
inc
push
popf
inc
pop
call
ret
or
jmp
inc
jae
shlb
push
data16
mov
lock
popf
cld
mov
fwait
cmp
fadds
jns
sahf
inc
pop
scas
push
leave
jnp
push
andb
jmp
or
popa
data16
pop
xchg
lret
mov
lea
fsubrs
repnz
push
cmp
loop
lock
jb
test
cmp
aas
jp
mov
aad
test
sahf
clc
nop
xchg
fadds
inc
push
xor
xor
and
push
and
sbb
inc
cmp
add
movsl
jns
push
mov
xor
sub
in
inc
jbe
and
stc
and
outsl
inc
mov
loope
cmpsb
stc
add
mov
mov
mov
sub
inc
movsb
lret
insb
outsl
setae
mov
pop
stos
into
adc
je
movsl
mov
scas
jl
and
or
sub
lret
and
arpl
xchg
inc
jge
mov
mov
stos
sbbb
iret
push
and
adc
lahf
sti
adc
test
ficompl
sub
mov
push
lods
cs
and
call
and
divl
popf
or
push
jne
repnz
push
jb
test
adc
inc
jae
fnstenv
xor
dec
sub
pusha
pop
jno
mov
xor
dec
xorb
icebp
out
sbbl
dec
dec
lea
jge
inc
stc
mov
scas
inc
sarl
sub
test
push
sub
outsl
add
insl
inc
cld
jle
cmpsl
mov
addl
scas
pushf
jl
arpl
sub
and
call
xlat
lods
gs
adc
push
sahf
jge
mov
pop
jmp
jecxz
sbb
and
jo
js
mov
mov
jmp
dec
push
add
stc
ljmp
xchg
mov
push
arpl
sbb
mov
pop
jp
clc
in
loopne
loop
test
or
arpl
movsl
mov
ljmp
into
loope
test
sahf
jb
ret
or
sbb
fisubs
xchg
sbb
pop
mov
cld
enter
pushf
and
jp
xchg
push
mov
imul
sti
jno
pop
insl
fcompl
loop
inc
cmp
mov
push
pop
push
imul
insb
je
out
or
fstpl
cmp
inc
notb
into
mov
in
mov
bound
pop
pushf
enter
out
inc
push
cmp
das
imul
xor
fwait
push
aad
incb
mov
sub
add
in
out
icebp
cmpsl
shl
sti
xchg
mov
fs
jns
ja
or
scas
loopne
in
pushl
xchg
adc
pop
mov
clc
je
ret
movl
outsb
notb
rorb
ss
subl
push
add
movsl
xchg
xchg
sbb
fsubrl
inc
mov
pop
xor
lds
call
jg
loop
jmp
pop
wrmsr
ja
ja
mov
push
push
ljmp
xchg
mov
xorb
jnp
adc
inc
mov
adc
or
sbb
mov
clc
fcmovnbe
sbb
and
das
ja
dec
sbb
stos
push
mov
sbb
ret
mov
push
int
in
imul
cmp
mov
inc
sub
pop
dec
out
mov
out
dec
bound
cmp
jae
xor
mov
arpl
pop
stos
push
jae
mov
push
pop
mov
shrb
mov
inc
push
lcall
pusha
cmpsl
loop
dec
out
mov
fidivs
or
adc
stos
push
sub
out
orl
pop
nop
aad
and
in
cltd
fldenv
sbb
sahf
mov
mov
pop
push
aad
movsb
dec
sar
arpl
adc
adc
mov
xchg
std
fdivrl
aaa
rcl
fucom
sub
push
mov
or
jle
loop
mov
frstor
jmp
xor
push
mov
add
jecxz
ror
or
in
jg
fistps
into
lods
lcall
jne
stos
je
fdivrp
and
out
data16
fistl
movsb
fucom
pop
mov
pop
add
jne
or
cmpsl
loope
insl
es
shll
sbb
fidivrl
lea
clc
lods
stos
fsts
lcall
pop
sbbl
jns
call
cmpsl
ffreep
push
test
cmpsb
cmpsl
push
lcall
cs
pop
les
std
and
sbb
aas
add
stos
cmp
mov
jmp
stc
cmp
rcr
jge
push
sbb
xchg
sbb
inc
lret
jae
mov
fidivs
xor
arpl
fadd
adc
int3
out
mov
outsb
out
ja
pop
push
lods
xchg
inc
xchg
test
std
pop
xchg
in
cmc
or
icebp
movsl
adc
cwtl
clc
sub
dec
das
inc
and
lods
lret
test
mov
rorb
sahf
addl
mov
inc
dec
cmc
and
mov
cltd
jg
aaa
pop
xlat
les
push
add
push
pusha
cs
mov
test
inc
or
mov
xchg
add
jb
repnz
testb
and
lock
int
push
fisubrl
fdivs
add
inc
mov
mov
push
or
cwtl
out
int
lods
and
cmp
scas
repz
push
ljmp
or
lret
sub
push
pushf
cmc
lods
fwait
jg
cmp
cs
adc
mov
fnstsw
in
xor
xor
adc
jbe
scas
and
sub
test
jl
rcll
clc
cmp
inc
sbb
das
jae
xchg
push
xchg
js
mov
insb
cmpsl
add
in
push
or
xlat
rcll
pop
std
cmpsb
fstpl
push
aaa
pusha
mov
push
mov
daa
in
push
fsubrl
pop
push
cmp
movsl
stos
jne
pop
and
dec
test
jp
insl
cs
mov
fsubs
inc
bound
cwtl
pop
mov
stos
jl
dec
popa
inc
push
adc
mov
adc
or
xor
aam
sub
ljmp
ss
xchg
in
cmp
imul
add
aad
cmp
push
int3
inc
inc
out
movsb
cltd
or
daa
enter
cmp
decl
into
pusha
push
insb
push
jns
ss
cmp
adc
in
out
testl
into
sti
push
sahf
inc
lcall
repz
lods
hlt
pop
fadd
xchg
cmc
jae
sbb
mov
sti
lds
and
lret
inc
inc
addb
shr
push
inc
std
rcll
xor
xchg
lcall
icebp
jns
pop
mov
lahf
sti
imul
mov
mov
sbb
aas
ljmp
aad
int
test
test
jnp
arpl
lret
adc
mov
mov
sti
push
ret
mov
bnd
dec
pushw
jmp
mov
cmp
arpl
cmp
nop
inc
push
pop
insl
or
dec
or
inc
jle
sub
repz
bound
or
cmp
xor
push
add
jmp
dec
ja
in
mov
test
and
push
xchg
es
out
repz
into
mov
mov
lahf
xchg
push
movsb
bnd
imul
mov
push
adc
xchg
add
jno
loopne
dec
out
add
inc
and
mov
nop
es
cmp
popf
cmp
dec
xor
movb
lea
int
add
sti
enter
les
sbb
cmp
fwait
jp
jp
mov
and
inc
push
ficomps
sub
ds
in
loop
mov
jle
inc
iret
clc
mov
jmp
je
push
stos
movsl
cltd
xchg
cmpsl
jne
jnp
enter
imul
inc
subb
inc
sahf
xchg
in
jns
sbb
call
xor
lock
mov
push
cmc
mov
adc
in
imul
or
mov
lcall
nop
push
and
or
outsl
xor
xorl
fistl
in
lods
mov
sbbl
pop
loope
mov
out
fstps
pop
cmp
xchg
mov
mov
or
mov
cmpb
lods
outsb
mov
add
push
fcomps
ret
test
clc
aam
lds
mov
cmc
mov
push
fscale
xchg
clc
mov
jns
xchg
int
imulb
mov
aam
adc
cmp
mov
jns
add
ljmp
ljmp
xor
gs
push
mov
dec
inc
mov
out
out
mov
add
xor
push
out
xchg
pop
imul
mov
insl
fisubrs
addl
jae
scas
nop
loope
outsl
aaa
sbb
addb
enter
cmpsl
pop
adc
addl
in
fnsave
in
cld
push
jae
test
jae
stc
adc
aam
shlb
dec
insl
test
dec
sub
stos
repz
xchg
jp
or
aas
xchg
mov
das
ss
or
je
repnz
inc
pop
push
cmp
out
sbb
out
lds
cmp
xchg
fistps
orb
ja
mov
push
adc
scas
popf
cmp
inc
mov
scas
iret
or
cwtl
les
jo
cmpsl
mov
enter
push
out
add
and
cld
push
nop
jg
cmp
mov
sub
dec
ficomps
int3
dec
or
leave
pop
lods
aam
xchg
adc
leave
inc
inc
push
inc
add
jo
insb
push
enter
xor
mov
in
or
and
dec
add
out
mov
mov
xor
lods
aad
jbe
mul
add
test
fldl
hlt
pop
mov
or
or
hlt
mull
or
aad
jg
xchg
jne
pop
scas
mov
lods
clc
imul
ficompl
shrb
cmpsb
jge
jb
adc
and
dec
mov
pop
or
lcall
cmpsb
imul
arpl
sbb
div
adc
movsl
adc
js
and
jb
push
movb
cmp
or
mov
xor
arpl
arpl
inc
sbb
adc
or
jp
fadds
jae
ficompl
ret
xchg
and
xchg
xchg
or
out
sahf
adc
popa
out
ds
push
lods
dec
lret
or
or
scas
jp
mov
and
cld
loopne
pop
sbb
add
adc
mov
adc
xchg
popf
in
push
pushf
mov
jp
negl
jb
jo
mov
cmpsl
add
es
lret
in
xchg
jo
pop
stc
shrl
cmp
mov
adc
in
xor
insl
outsl
jnp
outsb
inc
mov
ljmp
stc
idivl
push
or
sbb
lahf
pop
mov
and
xor
mov
int3
dec
js
filds
add
jno
fwait
adc
clc
jno
mov
cmp
jle
test
out
xchg
or
sub
mov
sbb
fcomp
fwait
je
mov
test
arpl
pop
mov
xlat
and
es
or
fdivrs
inc
sub
jne
rcr
pushf
shl
add
inc
add
in
inc
popf
pop
sti
shll
in
ss
sub
sti
xor
fnstcw
das
cld
lea
and
bound
ss
and
popa
cmp
xchg
jle
xor
leave
mov
aas
pop
jl
ss
ja
pop
ficompl
mov
mov
dec
push
das
sbb
bound
inc
inc
call
outsl
jb
push
adc
in
xlat
or
ds
xchg
es
jno
outsb
pusha
cmp
mov
scas
imul
mov
and
dec
or
mov
push
mov
inc
mov
push
dec
out
mov
jno
mov
das
adc
push
psubb
cmp
insl
pop
ljmp
and
mov
test
bound
arpl
out
enter
sbb
xchg
mov
loope
add
lods
call
push
fisttps
push
ja
pop
cmp
mov
sub
cwtl
pop
jnp
dec
aad
add
mov
mov
std
pop
test
cmp
cwtl
lret
push
icebp
loop
stos
jg
jg
add
jns
mov
and
aas
pop
ret
addr16
mov
addl
xchg
insl
int
imul
push
loopne
popa
mov
mov
rcrb
push
loop
dec
xchg
mov
je
into
jnp
outsb
mov
jecxz
ret
dec
outsl
stos
lret
xchg
andb
iret
into
or
cmc
rep
leave
enter
fs
cmpsb
inc
ror
lret
fwait
testb
adc
xchg
mov
jl
popf
jo
fbstp
test
pushf
xor
leave
inc
xor
sbb
std
pushf
push
xchg
xor
pop
sub
pop
pop
push
test
push
daa
sub
loop
addb
ljmp
js
mov
mov
cli
push
lret
idivl
ror
and
fmulp
jno
testb
fcomip
rclb
sahf
xor
inc
mov
mov
xchg
and
push
push
bound
push
cmp
sub
xor
jno
rcrl
lret
test
mov
sub
popf
sbb
movsb
mov
sbb
dec
idiv
lock
mov
mov
push
mov
sbb
push
sbb
mov
lock
cltd
xchg
jl
popf
cmp
lock
or
jp
int
gs
mov
das
insb
sub
and
ds
xchg
orl
cs
out
push
inc
and
xchg
xchg
xchg
mov
jne
ja
scas
in
mov
inc
mov
jae
ja
jno
jmp
outsl
scas
mov
mov
dec
ret
jge
jl
nop
xchg
pop
sbb
inc
add
cmp
mov
test
in
cmc
mov
jmp
rcl
test
inc
pop
std
in
mov
in
les
outsb
outsb
mov
add
ljmp
stc
outsb
scas
incb
lods
fadds
jp
jo
jb
outsl
xchg
outsl
rcrb
cmpsb
push
jae
sub
add
dec
xchg
jne
ljmp
jo
pop
push
loop
jbe
jns
adc
xchg
scas
sub
fs
mov
and
fwait
out
push
enter
sub
idiv
pop
popa
fstps
insb
sub
adc
inc
mov
jae
sbb
and
push
mov
jg
jl
and
lods
adc
or
mov
mov
fsubp
mov
jl
cmpsb
mov
repnz
cmp
roll
repz
adc
cmp
fisttpl
xchg
sub
push
int3
in
into
mov
arpl
stos
mov
mov
popf
or
push
pop
aaa
sbb
out
jp
sub
inc
mov
ljmp
add
jns
adc
lcall
xchg
dec
mov
les
xor
mov
pop
push
fs
hlt
dec
lcall
int
jmp
mov
int
and
xchg
cltd
push
jecxz
xchg
bound
inc
lcall
clc
cmp
test
jle
xlat
sbb
int
lock
mov
pop
dec
and
mov
xchg
push
mov
pop
mov
insb
icebp
cmc
jl
cmp
fildll
lret
jecxz
ljmp
xor
clc
aas
test
outsb
and
xchg
jno
jmp
pop
and
fnstcw
jle
loope
xor
jns
mov
mov
outsb
cmp
in
mov
adc
and
aaa
jle
int
jle
into
repz
xchg
inc
pop
loop
mov
scas
jb,pn
inc
jno
mov
mov
ljmp
mov
jge,pt
sub
cmp
aas
shll
ficoml
push
aam
je
mov
enter
repz
add
vxorpd
xor
adc
push
cmp
imul
pop
test
inc
movl
sbb
sar
pop
rol
pop
test
adc
add
push
xor
cmp
sub
ja
dec
add
add
inc
dec
adc
and
push
sbb
es
xchg
inc
lahf
in
inc
sub
pop
mov
addl
dec
sbb
push
js
sub
sbb
push
xchg
and
sub
jo
pop
pop
add
mov
mov
push
sbb
pop
dec
lret
and
sbb
addr16
xchg
mov
push
iret
bnd
clc
subl
and
adc
pop
sahf
xlat
inc
cmp
xlat
jl
mov
or
inc
int3
push
jne
jecxz
movsb
jno
jmp
or
stos
imul
addl
aas
minps
dec
sub
cmp
dec
jns
xchg
pusha
bound
cmp
lea
adc
push
sub
mul
sbb
or
insl
pusha
jno
adc
das
pusha
mov
push
pop
mov
mov
fisubrs
aam
fs
xchg
in
shll
pop
insb
cli
dec
out
movsb
xor
push
ret
stc
shr
flds
sub
adc
and
pop
movsb
lcall
pop
xchg
xor
sti
mov
and
push
es
sub
out
jno
fldcw
pop
jge
cmp
sbb
js
ret
dec
lahf
xchg
in
jg
jl
jmp
mov
in
dec
jg
push
lret
mov
dec
jno
cltd
sti
jecxz
gs
add
imul
enter
sbb
lcall
dec
fldcw
and
scas
pushf
bnd
xor
repnz
repnz
or
xor
pop
or
setnp
jns
test
and
pop
jle
cmp
stc
xor
leave
lock
sarb
mov
xlat
imul
test
testb
xor
jne
pop
or
mov
repz
jne
mov
adc
test
cmp
ja
pop
lcall
and
jae
xor
lret
cli
and
and
int3
fidivrs
aad
js
fs
or
repnz
push
in
insb
sbb
mov
jbe
arpl
push
out
mov
pop
cli
mov
xchg
scas
out
jae
mov
mov
jbe
xor
inc
mov
add
mov
pop
fistl
outsl
pop
movsl
add
ret
out
fidivrl
cwtl
xchg
mov
xor
movsb
sbb
push
xchg
pop
sbb
push
xchg
sub
push
dec
cli
jnp
or
mov
fiadds
or
ret
cmp
adc
push
inc
test
push
rorl
xor
push
push
rolb
mov
xchg
jecxz
sub
mov
shll
mov
cmpsb
fldcw
jbe
ljmp
fiaddl
pop
add
rorb
mov
out
and
fstpt
dec
data16
cmp
popf
adc
push
jno
sub
lahf
das
or
aam
movsb
dec
loopne
cmp
or
mov
std
jecxz
cmpsb
es
loopne
mov
cmp
xlat
push
jl
imul
int
xor
out
push
fdivl
sub
pop
mov
data16
shlb
rorb
fsubr
pop
jge
stc
int
mov
ret
andl
rol
pop
add
or
stos
sub
fsubrs
and
jle
test
ss
xor
sbb
cmc
gs
jo
scas
sbb
rol
shll
jne
ret
adc
ret
icebp
add
sub
push
insb
push
fsubrl
sub
dec
stos
and
fdivrs
rcrl
aaa
mov
popa
mov
sub
in
add
xchg
lods
frstor
imul
xchg
push
mov
and
int
jb
jmp
fwait
popf
xchg
outsb
sbb
js
pop
mov
push
call
sbbl
push
push
fistpl
cltd
mov
and
std
mov
js
adc
stos
nop
insb
out
pusha
daa
push
pop
fucomip
dec
xchg
push
fcoms
fildl
out
stc
sbb
mov
data16
jns
test
or
adc
inc
dec
mov
adc
inc
jl
roll
lock
test
mov
jle
popa
addl
jbe
cli
and
xchg
jp
pop
sub
scas
mov
xor
jno
cwtl
into
xchg
mov
sbbl
push
shll
lock
mov
inc
cmp
push
loope
adc
leave
out
inc
or
xor
imul
pop
mov
inc
jl
or
rcrb
iret
enter
pop
pop
sahf
ss
sub
rcll
dec
pop
pop
negl
adc
jmp
sbb
mov
mov
xchg
push
enter
lods
mov
int
mov
in
jne
pushw
xor
nop
lea
jbe
test
xlat
pushf
sbb
pop
cmc
scas
dec
sbb
cs
fprem
fisubl
add
cmp
pusha
fs
leave
out
test
cmc
nop
push
xlat
inc
cmp
jno
mov
pop
ror
sbb
cs
jne
push
dec
mov
pop
lahf
enter
jnp
xchg
cmpsb
xor
js
pop
xchg
dec
decb
imul
xchg
test
mov
movsl
jb
fldcw
test
int3
inc
ds
mov
popa
inc
mov
push
clc
xchg
add
aas
pop
in
ss
xlat
push
push
jmp
jb
and
or
xor
jg
enter
ret
dec
test
push
pop
inc
fcom
sahf
sbb
or
test
int
dec
jmp
nop
and
jle
jnp
sub
push
fidivrs
mov
inc
mov
loopne
sbb
sbbl
pop
xor
test
mov
imul
adc
xchg
sti
sbb
loope
pop
pop
cld
ja
inc
xchg
lcall
xchg
inc
aas
inc
out
add
rorb
xor
test
push
adc
int
mov
sahf
aad
addr16
adc
fstps
adc
mov
pop
icebp
rclb
loope
je
xchg
push
and
aad
imul
fwait
or
imul
mov
mov
das
xchg
test
call
popa
add
ljmp
addr16
adc
loop
cmpsl
js
inc
enter
push
mov
cmp
xor
and
sbb
push
inc
nop
mov
lret
in
loop
jno
movsb
pop
ficomps
mov
test
xchg
push
lods
or
jge
test
ljmp
lcall
imul
sbb
jle
mov
push
mov
sbb
xchg
xlat
or
mov
fs
sbb
and
xchg
push
adc
ds
mov
mov
pusha
push
inc
mov
pop
push
xchg
xchg
lds
mov
aaa
inc
or
popf
dec
pop
sub
xor
adc
andl
add
mov
jae
jb
lret
inc
scas
sbb
cli
test
fidivs
into
push
outsb
jno
sbb
dec
mov
xchg
jae
and
xchg
inc
mov
das
jb
mov
mov
xchg
xor
adc
sub
sbb
repz
or
cs
jb
cld
cmp
inc
jo
icebp
sub
dec
adc
aaa
sub
lods
ja
cmp
test
and
adc
adc
pop
mov
jno
cli
and
dec
xor
inc
xor
lret
lds
addl
daa
lea
mov
dec
fnstenv
out
enter
pop
pop
and
or
sbb
jg
jg
imul
pop
xchg
lock
in
arpl
cmp
cmp
cmp
mov
sbb
xchg
jns
add
xchg
xor
push
push
jae
std
call
xchg
enter
int
dec
push
leave
xor
push
repz
in
loopne
cmpsb
adc
notb
lods
outsb
mov
fisubrl
int
sub
testl
inc
movsl
sbb
les
pop
incb
movsb
cli
sbb
adc
lea
sbb
cmpsl
popf
popa
push
xchg
cltd
jmp
or
pop
dec
dec
fwait
ret
lcall
mov
cmp
repz
ds
xor
sub
icebp
push
inc
stc
and
movsl
fnstenv
mov
xor
sub
shr
cmp
arpl
ds
dec
arpl
jl
outsb
mov
ja
sub
mov
nop
and
repnz
leave
les
pop
dec
cmp
jne
shll
mov
xor
mov
ds
pushl
jl
add
fwait
sbb
repnz
insb
pop
into
mov
xor
testl
out
jmp
add
aas
cmp
pop
out
negl
jo
and
lock
testl
movsl
insl
cld
pop
nop
pop
jecxz
cmpsl
cmpl
cmp
shl
pop
pop
pop
cld
xor
mov
jmp
mov
inc
sub
arpl
mov
flds
loope
mov
shrb
daa
lods
pop
xchg
sbb
adc
or
clc
lods
xor
dec
dec
jl
jg
jmp
adc
mov
stos
xchg
cmpsb
rcl
cmp
mov
rcl
sti
outsb
cmc
inc
cltd
cmpsb
out
inc
repnz
stc
les
lahf
ja
add
mov
mov
mov
ds
jo
push
repnz
out
pop
stos
fildll
das
jmp
xor
jmp
das
mov
lds
imul
push
pop
mov
jmp
jne
in
push
mov
sbb
mov
xchg
popa
stc
arpl
pop
rclw
mov
xor
hlt
test
outsb
mov
stc
jp
inc
cmp
lahf
lock
test
js
inc
adc
add
aas
inc
mov
ds
xchg
mov
test
mov
aam
jnp
in
mov
insl
xor
fidivl
mov
lods
sbb
nop
push
rol
xchg
sub
xchg
pop
pop
push
call
inc
and
xchg
sub
mov
xlat
faddl
fisttpl
jne
scas
daa
in
fsubrl
aad
mov
mov
xchg
dec
inc
push
fwait
inc
add
push
cmp
jge
movsl
sbb
cmp
cmpsl
inc
es
outsl
rol
jnp
sbb
or
movsl
dec
mov
mov
rolb
mov
popa
push
adc
sub
in
inc
mov
pop
into
cmp
push
out
xor
repz
mov
cwtl
pop
add
bound
mov
frstor
push
add
and
cli
xchg
fcomps
js
lcall
sbb
fiadds
pop
dec
add
rcrb
out
cs
aaa
fwait
push
sub
mov
enter
dec
push
xchg
jne
cmp
ret
in
out
jae
jb
mov
push
cli
mov
xchg
mov
repz
sarb
inc
popa
or
test
inc
lea
aaa
mov
fldl
add
sbb
fdivl
sbb
fsubl
pop
popa
in
into
push
lock
repz
mov
cltd
loopne
lods
mov
adc
jmp
add
add
imul
push
aaa
mov
jne
pop
ret
imul
xchg
mov
mov
rolb
cmp
lret
mov
rolb
movsl
lods
stc
inc
out
imul
cmpsl
mov
std
xor
shrb
pop
add
ret
iret
testl
pop
movsb
popf
xchg
xor
inc
xorb
mov
push
bound
das
sbb
cs
xor
mov
push
fidivl
test
sub
clc
xchg
fsubrs
clc
loop
call
cld
sub
lock
xchg
sub
mov
and
sbb
mov
fdivs
cld
mov
fiadds
or
cmpsl
sahf
pusha
dec
xor
or
andb
and
push
imul
jmp
push
enter
push
pop
shrb
mov
iret
inc
ss
lcall
and
out
sbb
mov
mov
and
jg
mov
movsb
mov
sbb
es
ret
jle
aad
popa
repz
sub
pop
jns
cmp
mov
out
out
outsl
test
sub
lock
mov
dec
loopne
pop
adc
inc
aaa
stos
or
or
xor
andb
push
mov
jmp
fdivrl
adc
adc
je
pop
in
cmpsb
mov
pop
adc
pop
scas
mov
mov
jbe
enter
movsb
in
lock
mov
xlat
mov
fadds
aas
pop
test
hlt
insl
jne
fcoml
push
xor
sbb
xlat
sbb
iret
sbb
or
jns
sbb
xchg
push
into
scas
dec
xchg
cmp
add
je
pop
hlt
jne
push
shll
mov
dec
in
mov
sub
addr16
adcl
fnstsw
mov
sbb
jae
mov
sub
ret
push
arpl
inc
jns
inc
movsb
outsb
test
aaa
pop
fistpll
mov
and
test
cmpsl
xchg
jl
loope
fdivrl
xchg
loope
fwait
and
addr16
aas
je
add
insl
sarl
and
jle
ja
dec
roll
sbb
fs
aam
cmpsb
mov
xchg
inc
jae
test
in
fwait
loope
sub
call
push
arpl
cld
lods
jb
inc
inc
add
push
add
jae
jmp
mov
cmc
call
pop
inc
push
test
test
out
shlb
pop
mov
inc
bound
and
xchg
jg
loopne
ror
mov
and
ret
jg
jnp
pop
adc
mov
pop
pop
adc
fsubs
icebp
inc
std
mov
cmp
std
push
cmp
xchg
xchg
popf
cmp
and
aaa
cmp
test
fwait
in
out
sub
addr16
sub
pop
shr
xor
adc
subb
mov
inc
es
int3
fidivs
loopne
cmp
stos
leave
push
push
mov
insb
and
or
jp
out
cld
nop
daa
xchg
add
rcrb
mov
pop
pop
cmp
add
arpl
aad
push
dec
cmc
pop
push
lea
mov
add
cmp
jb
push
jne
pop
dec
je
in
pop
fdivrp
push
cmc
leave
enter
xchg
sbb
aad
dec
push
mov
jge
sbb
jo
aaa
imul
lahf
cli
xchg
scas
and
popa
adc
movsb
push
mov
adc
sbbb
xor
xor
leave
loopne
jg
xchg
mov
inc
das
inc
lret
clc
ss
xor
scas
cmp
aad
jp
push
mov
lret
jp
enter
add
pop
xor
pop
data16
inc
cmpsl
aam
push
int
outsl
scas
cli
cmp
in
add
adc
sbb
scas
fsubs
dec
lods
push
sub
jne
lds
in
xor
inc
push
xlat
mov
mov
lahf
fstpt
cmp
inc
xor
jae
in
xchg
xlat
cltd
inc
fbstp
fisubrl
push
push
or
dec
aas
mov
pop
xchg
cmp
aad
movl
xor
mov
pop
jne
push
and
mov
sti
movsb
inc
cs
jbe
mov
inc
fdivl
aad
push
xchg
inc
iret
iret
xchg
sub
xchg
arpl
cmp
or
sub
popf
repz
cs
dec
and
add
lock
popf
lret
xorl
sub
sbb
insl
inc
ror
add
push
jae
addl
dec
add
push
mov
das
mov
test
ret
adc
mov
xor
out
call
xor
jge
mov
and
add
stos
insl
mov
sbb
push
repnz
add
jl
adc
out
pushf
cmp
mov
sub
mov
cmp
mov
pusha
push
sub
out
scas
jno
loope
out
loope
jmp
cmc
rol
dec
jbe
and
rcl
ljmp
inc
dec
inc
mov
sahf
test
in
pop
int3
jl
add
pop
push
xor
fdivrs
fstps
pop
xchg
xchg
or
mov
xor
outsl
pusha
loopne
in
mov
insl
xlat
sbb
cmp
mov
stc
push
ret
mov
gs
in
pop
lods
sbb
pop
bound
loopne
xchg
mov
pushf
dec
test
mov
mov
icebp
sbb
pop
cmp
gs
pop
mov
hlt
pop
sub
and
sub
or
mov
aas
pop
je
or
adc
mov
push
xchg
lods
jns
cmp
insb
notl
jne
movsl
mov
enter
mov
adc
test
lret
push
mov
cmc
rorw
mov
cmpb
sbb
push
jnp
push
into
xchg
ja
push
imul
mov
into
or
out
int
sub
jle
test
lahf
cmp
dec
cli
xlat
lahf
and
mov
cwtl
and
lods
jnp
mov
stos
push
jl
pusha
add
pusha
jl
bound
insl
cmp
outsb
sub
push
pop
imul
and
std
cmp
or
jp
stc
ljmp
or
jns
sbb
pushf
js
jo
and
negb
loopne
add
fnstcw
stos
jnp
xrelease
xchg
addr16
jecxz
shll
xor
out
push
mov
int3
ja
and
cwtl
or
jp
dec
out
or
inc
rorb
inc
add
pop
lcall
clc
cmp
cwtl
inc
jne
inc
negl
push
adc
lea
inc
jbe
mov
mov
xor
dec
add
sbb
ss
adc
jne
adc
loopne
inc
sbbl
dec
icebp
mov
mov
push
push
lret
ficomps
mov
out
jae
out
xor
xlat
negb
icebp
mov
xchg
js
ret
jge
cmp
inc
xor
popa
pop
lock
or
ss
cmpsb
iret
jb
or
lahf
rcl
aad
fs
inc
push
daa
jmp
leave
jmp
in
dec
pop
loope
pusha
sbb
xor
sub
inc
cmpsb
fwait
popf
rclb
pop
aas
lea
mov
repnz
in
or
lods
out
cmpsb
dec
lret
xor
popa
sub
inc
adc
jge
test
sbb
call
dec
and
xor
pop
clc
jge
lret
mov
or
data16
aas
sub
cmc
ficoml
stos
daa
imul
mov
jl
cmp
pop
sub
dec
xorb
cmpsl
mov
dec
loopne
addb
jg
or
notb
jg
js
sti
add
pop
inc
add
lahf
ret
outsl
rcl
rorb
pop
pop
pop
inc
jno
stos
mov
mov
jmp
call
movsl
sbb
popf
xchg
movsb
adc
sub
xor
mov
cmpsl
pushf
or
add
pop
pop
neg
loop
xchg
mov
and
sub
or
dec
fdivr
or
xor
adc
jne
or
fadd
xchg
xor
aaa
ret
pop
clc
rcr
cwtl
adc
std
xchg
shr
insb
inc
adc
xor
or
das
xchg
or
sub
shlb
cmc
es
popf
out
outsb
xchg
in
sub
rol
push
lcall
into
fldt
mov
cs
xchg
mov
mov
inc
test
cltd
and
test
sbbl
sahf
imul
jns
test
dec
fcmovu
or
pushf
cmp
sbb
pusha
push
insb
add
inc
push
sbb
sub
push
outsb
xchg
jle
sarb
std
xchg
int3
and
mov
mov
mov
mov
hlt
mov
test
inc
pop
es
pop
and
ss
daa
xor
dec
pop
popaw
lods
daa
insb
or
hlt
cs
shl
lret
pop
or
movsb
sbb
outsb
adc
jge
int
or
cli
inc
stos
lahf
shlb
push
les
add
loopne
adc
ss
cmpsl
dec
lods
push
xchg
jg
fnclex
or
bound
sahf
les
adc
lcall
rorl
xor
fildl
shl
daa
divb
repnz
aas
or
mov
sbb
mov
sub
repz
and
pop
out
lcall
dec
mov
insb
lds
fstpt
daa
repnz
iret
pop
sgdtl
int3
pop
adc
pop
push
in
mov
push
xlat
dec
cs
mov
xchg
iret
xchg
dec
test
adc
outsb
push
xchg
or
adc
add
xchg
aad
cmpsb
into
push
inc
mov
fcomi
hlt
shll
cmp
sbb
test
cmp
xor
ret
lock
or
inc
out
sbb
scas
in
or
push
or
mov
dec
lods
dec
js
push
loopne
sbb
leave
adc
iret
mov
test
add
pop
hlt
subb
movsl
fisttpl
fwait
lods
jg
lods
pop
mov
jns
xchg
dec
jno
cli
pop
data16
mov
inc
bound
mov
push
jl
mov
outsl
and
jle
cmp
xor
xchg
add
test
in
cltd
jo
rolb
or
push
mov
sbb
bound
lods
movsl
ljmp
out
and
jecxz
repz
repnz
es
push
inc
mov
push
pop
mov
push
mov
push
ror
cwtl
loope
add
fcmovb
push
mov
icebp
shrb
shrb
lds
adcl
jb
leave
mov
push
xchg
ljmp
mov
xor
shll
scas
xchg
pop
movsl
and
lcall
mov
leave
cmpsl
testl
push
mov
outsb
mov
xchg
push
pop
dec
xor
rclb
xorl
mov
cmp
sub
cmc
cmp
xchg
popf
adc
pop
fsts
arpl
fmuls
lock
leave
xor
outsl
punpckhwd
inc
loopne
testb
iret
or
mov
push
fstl
fcoml
cltd
repz
sbb
jns
xor
filds
lahf
and
sub
dec
pushf
test
push
aas
loope
test
dec
cs
jp
data16
das
sbbb
pop
dec
test
mov
ljmp
sub
dec
cmp
sbb
cmp
mov
inc
mov
into
leave
adc
std
aad
dec
xchg
insb
sbb
jp
jmp
jp
or
push
inc
jle
testl
aaa
adc
xor
cwtl
dec
pushf
ja
push
and
add
insb
add
ljmp
test
mov
addl
xor
mov
adc
test
lods
cmp
push
inc
or
out
ss
pop
sar
fwait
lahf
sti
cmpsl
jl
dec
jg
inc
mov
sbb
adc
dec
sarb
sti
add
mov
filds
sub
scas
ds
and
mov
xchg
arpl
or
mov
push
aad
sbb
cwtl
mull
pop
cmp
test
cmc
cs
mov
cmp
fsubrl
add
sub
or
daa
inc
xchg
push
add
fsub
xchg
enter
jg
inc
lahf
push
pop
or
arpl
sub
dec
pop
sub
push
int3
arpl
pop
mov
lret
mov
cmpsb
jne
sti
pop
push
xor
or
cmp
xchg
mov
push
call
cmpsl
hlt
xchg
mov
sub
inc
jb
es
aam
mov
adc
cmp
jl
mov
test
fisttpl
and
aaa
or
jge
xlat
pop
adc
call
inc
lcall
fadd
rorb
add
out
fsubrs
jmp
aam
mov
pop
pop
mov
adc
and
out
xchg
loop
xor
mov
inc
xor
cmp
pop
arpl
imul
sbb
adc
stos
stos
mov
es
add
push
aam
fisttps
cli
xlat
cltd
inc
ds
add
call
inc
test
or
mov
add
mov
mov
icebp
mov
pusha
rcrl
and
aad
adc
xchg
xchg
lods
popf
mov
sarl
dec
mov
mov
jecxz
xchg
jns
in
dec
into
gs
das
xchg
sub
int3
iret
and
movsb
xchg
or
cmp
aam
push
push
outsb
push
ret
les
pop
inc
cwtl
or
lret
push
test
repz
dec
cwtl
fists
jl
dec
pop
movnti
loopne
scas
push
in
aad
jl
shlb
cli
iret
pop
xlat
mov
jnp
and
push
inc
es
dec
mov
lret
ja
sub
xor
jno
mul
jge
xor
pop
add
filds
lods
aas
fmul
fisubrs
lcall
mov
imul
aam
movsb
arpl
xchg
push
push
out
repz
aaa
cld
iret
dec
push
pop
inc
mov
sbb
or
out
sbb
icebp
mov
and
out
xor
inc
lret
enter
and
pop
sbb
mov
jns
pusha
ss
and
xor
sbb
sub
stos
frstor
and
int
jnp
scas
inc
movsb
jo
jns
gs
iret
clc
or
cld
mov
mov
testl
xchg
repnz
push
adc
adcl
jmp
jp
jmp
jmp
cmp
les
arpl
fdivrs
test
xor
repz
test
loopne
pop
fdivl
popa
out
outsb
and
insl
lods
mov
dec
pop
sahf
jmp
push
push
push
xchg
test
or
in
inc
int3
rcl
scas
jbe
xchg
testb
mov
and
jle
mov
mov
gs
int3
and
cs
lret
arpl
xor
mov
sbb
fnstenv
fidivrl
insl
pop
je
out
mov
or
jne
outsl
sahf
push
push
pop
inc
int3
jg
test
adc
inc
lods
adc
sti
in
into
cmp
mov
xchg
pop
aaa
sub
les
std
sub
mov
cmp
scas
fdivl
repz
cmp
ja
and
pop
sub
xor
addb
add
mov
xchg
jno
fistl
xchg
test
mov
jle
push
js
imul
repnz
xlat
ret
jbe
mov
dec
and
dec
inc
outsb
jo
jno
nop
fldenv
inc
jecxz
sbb
push
cmp
xchg
xchg
dec
lea
and
enter
ljmp
add
push
scas
dec
xor
and
xchg
adc
jo
pop
lods
push
cs
jbe
fbstp
loope
inc
dec
pusha
sub
stos
sbb
rcll
xrstors
daa
pop
flds
push
notl
arpl
ret
cmpsl
lods
cmp
call
rolb
fsubr
lcall
std
xchg
jg
iret
dec
stos
push
dec
cmp
inc
cmpsl
in
enter
adc
lret
stc
outsb
pop
mov
shll
add
scas
shlb
insl
dec
pop
movsb
mov
xchg
dec
fidivl
lock
xor
pop
sti
pop
addb
and
jp
sahf
xor
test
and
ss
repnz
adc
jnp
push
dec
jmp
push
cmpsl
push
mov
push
test
sbb
xor
and
adc
add
cmc
lds
dec
sbbb
push
adc
loop
mov
push
outsb
mov
cmp
ret
pusha
bound
xchg
mov
mov
inc
rolb
out
mov
sub
lods
dec
test
imul
push
imul
and
mov
cmp
dec
or
add
mov
repz
int3
cmc
loope
aaa
mov
loop
daa
mov
pop
pop
loop
cmp
cmpb
mov
imul
xor
adc
push
mov
loop
xor
cmp
in
adc
aas
ds
test
xor
mov
mov
add
lods
mov
lret
lahf
movsb
aaa
xchg
incb
cmpsl
es
cmp
mov
ret
mov
lcall
inc
aad
cmp
or
xor
jge
or
loop
xor
ss
mov
sub
je
jg
mov
imull
lock
lods
gs
xlat
fldt
mov
frstor
subb
fscale
pop
push
fsubrs
int
and
add
insb
fsubr
mov
repnz
jbe
loope
fsubrl
pop
xor
adc
mov
xchg
inc
add
sti
lock
iret
pop
add
push
fimull
adc
aas
sbb
cmc
xchg
pop
jnp
mov
mov
arpl
xchg
adc
mov
scas
mov
jns
sbb
test
ja
in
stc
inc
call
adcb
sbb
arpl
mov
dec
bound
sbb
in
clc
jle
lods
adc
mov
mov
push
out
or
sbbl
dec
add
xor
insl
xchg
or
shrl
xchg
fstpt
push
int
pop
fldl
scas
es
push
dec
cld
loopne
imull
push
dec
mov
popa
mov
pop
dec
in
or
inc
sub
stos
cmp
int3
sub
sub
xchg
cmp
cmp
into
ret
fcmovne
sub
adc
push
cmp
popa
jno
int
daa
sub
jge
icebp
add
push
sub
js
fadd
fwait
sbb
in
je
add
adc
inc
sbb
lods
scas
push
push
inc
mov
inc
cmp
push
stc
xchg
and
icebp
sbbb
lahf
add
mov
ret
shr
ficoml
mov
insb
in
mov
or
pop
fadds
and
add
stos
dec
add
cwtl
cld
in
and
mov
mov
bound
enter
jbe
xor
and
adc
push
leave
mov
pusha
mov
aam
out
aas
pop
loop
pop
sbb
jg
lds
scas
stos
mov
mov
dec
sub
cmp
dec
mov
out
lahf
test
lcall
aaa
mov
les
lahf
lea
cld
jae
dec
mov
fcmovb
mov
nop
add
scas
mov
mov
movsb
je
fisubrs
les
push
or
idivl
xorb
test
outsl
fadds
cmp
cmpsl
in
pop
adc
sbb
insb
push
pop
pop
aas
imul
mov
andl
add
or
clc
push
mov
data16
sahf
sub
pop
es
cmp
pop
sub
pop
push
dec
imulb
jno
roll
cmp
jae
gs
or
inc
dec
ret
cmp
cld
push
jne
pusha
dec
cmp
js
and
cmp
jne
test
rcrb
inc
pop
leave
jno
mov
ja
lret
int3
aad
fcomp
push
sbb
adc
cmp
mov
sbb
mov
cmp
mov
insb
les
dec
xor
insl
push
jg
mov
shlb
movsl
xor
dec
pop
imul
imul
xchg
adcl
lret
dec
leave
filds
test
fsubr
jo
push
mov
lahf
mov
adc
jnp
mov
gs
xor
cmp
cmp
fidivs
fistps
cmp
jecxz
es
pop
or
jbe
mov
xchg
mov
int3
insl
das
mov
or
push
mov
ss
mov
das
xchg
hlt
sbb
push
xorb
push
fwait
pop
aas
push
jg
in
jle
mov
outsb
mov
adc
or
cmp
idivb
aad
sbb
clc
lret
aaa
cld
dec
xchg
loop
outsl
stos
and
dec
adc
sbb
sbb
insb
js
mov
fs
repz
jl
in
inc
mov
insl
outsb
sahf
dec
ficomps
nop
cs
add
test
sub
sub
sub
push
dec
xchg
inc
jge
clc
sbb
mov
push
add
sbbl
scas
cli
mov
aad
out
cmp
mov
adc
loopne
mov
daa
daa
ss
mov
xchg
stos
imul
jle
sub
inc
xor
push
add
out
xor
mov
les
mov
aad
adc
push
adc
nop
mov
push
push
push
fcoms
rol
imul
push
stos
lret
lods
lods
mov
mov
jp
add
in
jns
je
outsl
mov
std
fucomp
outsl
ds
inc
mov
stos
push
sbb
jb
or
push
movsb
enter
dec
sarb
fsubr
sarl
roll
cmp
jg
stos
xchg
mov
in
test
data16
les
out
inc
jo
and
pop
push
test
aad
push
cmp
fsubrs
jne
addr16
cs
das
cli
inc
iret
mov
and
cmc
xor
xchg
lcall
lods
dec
arpl
or
sbb
loope
out
mov
xchg
stc
sbbl
fwait
or
dec
out
movsb
mov
or
mov
sub
test
scas
call
mov
add
inc
sub
or
loop
femms
push
lds
sub
xor
sub
jl
hlt
rol
pop
sarl
dec
in
imul
jbe
xor
cmp
and
inc
mov
mov
jno
cs
std
fidivrs
mov
or
das
xor
inc
xchg
shl
jecxz
loope
jl
in
add
push
insl
xchg
in
mov
repnz
les
fbld
xor
cs
xlat
lcall
pop
jmp
cwtl
fistpll
outsb
popf
cltd
popa
outsb
fldenv
push
and
pop
mov
imul
mov
ljmp
repz
mov
lret
shrl
sahf
dec
fnstsw
and
les
adc
adc
xchg
sub
add
cmp
sub
push
sub
cmp
jmp
jo
jge
dec
test
and
adc
je
pop
adc
mov
jo
inc
lcall
dec
test
ret
push
aad
es
fcmovbe
sub
sub
dec
add
mov
in
subl
les
lock
fwait
std
jns
int3
push
xor
or
sbb
jp
push
insb
mov
xor
inc
enter
pushf
or
testl
ret
movsl
dec
dec
cmp
int
fmul
mov
cmp
lods
mov
pop
loope
out
mov
shll
lods
add
pop
movl
xchg
sub
cltd
rcll
out
enter
ret
mov
decl
sub
sti
stos
or
fnstcw
add
or
push
shlb
es
mov
inc
psrad
sub
add
jnp
in
aad
adc
loopne
cli
dec
cmpsl
jmp
mov
rorl
insl
mov
and
sub
cmpsb
std
cs
jno
dec
je
push
mov
frstpm(287
push
in
push
pop
fbld
inc
lret
test
in
push
jae
cmp
aas
dec
mov
jg
pop
pop
jge
push
inc
or
int3
add
dec
add
jbe
pusha
rcrl
int
fisttpl
int
xor
push
ljmp
inc
xchg
lods
mov
std
sub
popf
push
hlt
pop
cmc
mov
jp
sti
cmc
push
or
adc
scas
test
in
mov
mov
jbe
fnstenv
cs
push
movsl
aas
shll
push
sarb
arpl
cld
inc
int3
xor
cltd
dec
rcl
mov
jecxz
arpl
jnp,pn
xor
push
imul
lahf
mov
ds
push
scas
sub
test
mov
dec
or
mov
js
mov
and
pop
sbb
xor
ret
and
popa
nop
andb
xchg
int
push
dec
sbb
popf
icebp
jg
or
mov
and
test
mov
in
test
ret
iret
inc
ljmp
testl
pop
and
test
xlat
pop
sti
mov
mov
cwtl
xchg
jmp
mov
or
mov
adc
iret
insl
mov
jg
stc
cs
xchg
push
cltd
and
jne
into
xchg
push
adc
inc
inc
out
push
inc
call
mov
lock
lcall
mov
dec
push
sarl
and
mov
cmpsl
cli
aaa
movsl
mov
sahf
ret
adc
pop
pop
inc
mov
cmp
int
hlt
mull
push
add
lods
cmpsl
xchg
pop
sbbb
pop
or
aad
jl
or
push
imul
or
mov
mov
push
lahf
inc
jp
jns
xor
pop
pop
fistps
sete
push
mov
push
fnsave
inc
popf
cmp
das
dec
in
xor
lret
mov
mov
imul
and
popf
imul
xor
xchg
cmpsb
push
ljmp
sub
aas
cmpsl
adc
push
mov
movsl
lods
leave
sbb
and
mov
mov
movl
inc
or
test
sbbb
jae
mov
lock
pop
imulb
pop
nop
cmp
mov
cltd
ljmp
jp
jbe
push
mov
mov
pop
scas
cld
mov
mov
jbe
les
sbb
xor
sub
ret
xchg
mov
lods
fbstp
lds
scas
cltd
xor
out
es
or
aam
and
out
lods
xlat
lods
rcrb
or
mov
jl
aas
fildll
jae
popf
xchg
pop
jecxz
mov
aam
scas
js
fdivrl
xchg
xchg
insb
fnstcw
sub
push
jecxz
push
pop
sarl
iret
ljmp
sbb
rolb
or
addl
jbe,pt
push
sub
cltd
add
inc
mov
dec
pop
push
inc
imul
in
test
dec
pusha
fstpt
gs
loopne
mov
inc
mov
or
mov
mov
sub
out
dec
jne
adc
rclb
cmpsb
mov
mov
int3
sub
mov
jbe
fadds
negb
cmp
cli
pop
jbe
push
pop
and
pop
out
jnp
mov
or
ds
leave
and
mov
sub
xlat
mov
add
push
xchg
scas
xchg
inc
or
sahf
push
mov
stc
xchg
cmp
clc
mov
pusha
push
jb
inc
and
xor
jmp
outsl
mov
sahf
repz
add
lret
addb
pop
and
std
adc
rorb
bswap
sub
mov
adc
xchg
pop
mov
in
dec
jbe
inc
dec
daa
cs
push
shrb
lods
lcall
sub
mov
shll
pop
in
test
push
mov
sar
stos
xor
adc
sbb
jno
jno
pop
hlt
sti
push
jp
outsb
and
mov
arpl
mov
add
subb
add
cmp
fdivrs
fabs
dec
repnz
fwait
test
mov
mov
cwtl
pop
icebp
loope
loop
mov
bound
mov
jmp
xor
rol
xchg
xchg
push
cmp
in
mov
xchg
loop
and
jbe
xchg
pusha
adc
leave
scas
adc
jmp
rclb
inc
add
stos
adc
cmp
not
sub
lret
mov
jno
adc
and
xlat
xor
push
sar
jl
jns
sub
push
xchg
dec
loope
clc
cmp
scas
movsl
iret
lahf
jge
pushf
jl
adc
xchg
and
inc
jno
into
negl
jmp
inc
pop
add
jmp
rcll
mov
fwait
scas
pop
idivb
outsl
push
ficomps
sub
inc
leave
jg
pop
dec
ret
xchg
xchg
jl
xorl
sub
in
or
aam
cmp
jo
test
pop
sbb
mov
pop
aas
adc
sub
sbb
int
mov
mov
and
mov
repz
pop
xchg
xor
rol
lock
loope
dec
lcall
loopne
push
jmp
jp
pop
push
xchg
jle
loopne
jb
sub
mov
iret
push
pop
sub
insb
mov
jle
jge
fs
scas
ret
data16
insl
add
jecxz
aad
jns
pushf
jb
cmp
xchg
push
jnp
pop
xor
sbb
cmp
adc
in
or
out
movsb
pop
inc
es
loop,pt
into
xchg
mov
jp
sti
jnp
insl
pop
pop
add
dec
push
int
jmp
sub
insb
and
cli
add
fildll
fistl
lcall
cmp
mov
leavew
cli
in
xchg
clc
loop
push
and
inc
sub
pause
push
cmp
and
dec
mov
outsb
sbb
xchg
fwait
sahf
pop
pop
loopne
pop
jecxz
xchg
push
mov
ljmp
add
pop
mov
fwait
nop
xor
dec
jns
insl
data16
fnstenv
sti
cs
push
push
pusha
dec
mov
jae
stc
or
jge
jg
movsl
xor
into
and
xor
pop
push
push
adc
xor
dec
lret
pop
fldenv
push
dec
sub
pop
in
xchg
xchg
pop
sahf
je
jecxz
aas
sub
popa
out
add
and
and
xlat
cmp
aaa
clc
pop
add
push
gs
sbb
lods
push
push
lahf
repnz
sti
fsubrl
test
into
jge
sub
inc
jno
sbb
and
jns
fadd
orb
cmc
sbb
cmp
fbld
push
testb
sbb
je
addb
push
aas
push
out
movsb
ja
rcrl
repnz
mov
adc
pop
xchg
les
rolb
mov
fcmovnb
pop
inc
hlt
dec
bound
clc
add
test
pop
lea
push
jge
or
outsb
sbbl
lods
pop
lds
sbb
stos
in
push
xchg
out
cmpsl
and
jne
or
mov
cmp
dec
cld
adc
fdivrs
sub
or
jge
and
lea
test
push
sbb
pop
mov
es
dec
mov
roll
add
dec
mov
cmc
mov
lock
fdivp
pop
test
xchg
cmp
in
aaa
add
ss
lcall
leave
in
add
sarb
jge
movb
dec
jb
outsb
cmpsb
movsb
jae
or
push
inc
jns
push
push
add
push
out
popa
sbb
dec
inc
push
sbb
jo
xchg
cmp
fnstenv
xchg
mov
aaa
cmc
xchg
sub
dec
sahf
cs
bound
mov
testb
push
pop
jns
sbb
jp
xor
in
pop
ds
lods
pop
mov
test
decl
jmp
outsl
jp
jns
sbb
pop
fistps
xor
push
cs
aad
sub
cltd
andb
int3
sbb
fs
or
outsl
fstl
cltd
out
mov
aaa
jl
mov
add
loopne
lret
setl
mov
fimull
aas
ss
icebp
outsb
into
push
inc
mov
pop
movsb
insb
cmpb
repnz
out
outsl
lahf
in
lods
icebp
xchg
scas
push
lods
dec
ret
xor
pusha
mov
pop
jmp
push
scas
and
ss
xchg
aaa
jb
cmpsl
dec
push
pop
cmp
sbbb
inc
and
mov
xchg
jno
outsb
push
mov
iret
ja
je
jnp
test
mov
cli
add
loop
sbb
mov
cltd
cmpsb
sar
dec
into
lret
sub
loope
xchg
lods
xchg
mov
test
pop
call
stos
sub
xor
dec
inc
jns
sbb
mov
inc
das
pushf
jl
enter
pop
mov
call
and
xor
or
or
dec
inc
xor
test
out
imul
jb
fwait
imul
cs
scas
push
xchg
cmp
sbb
stos
pusha
fcomps
stos
cmp
push
cmc
inc
adc
in
fcmove
es
gs
subl
nop
adc
or
imul
fsubp
mov
cmp
push
int3
cmpb
xor
nop
lahf
jp
push
fdivrp
cmp
or
aad
mov
xchg
add
sbb
mov
mov
sbb
inc
aad
in
jbe
roll
mov
pop
adc
push
scas
dec
sub
test
inc
mov
fdivrl
pop
jp
sub
dec
cld
xorl
cli
mov
lods
mov
sbb
ss
pop
or
fisttpl
push
pop
push
cmpsb
push
pop
out
mov
pop
ds
adc
les
fbld
fimull
js
mov
repnz
in
cmpsb
mov
cltd
jge
stos
cld
dec
xchg
outsb
mov
mov
jo
cmp
jmp
jecxz
rolb
rorl
push
out
int3
cmp
push
xchg
leave
leave
fxch
mov
cmp
mov
faddl
pusha
pusha
cmc
test
stos
js
and
push
into
mov
jge
lock
or
and
jo
ror
and
adc
inc
pop
mov
out
gs
in
mov
es
aas
sahf
xor
mov
push
jbe
push
imul
dec
call
insl
cmovg
enter
and
in
jno
adc
push
inc
mov
add
inc
sub
push
dec
fwait
xchg
mov
std
enter
addr16
adc
inc
xchg
aad
dec
fnstenv
jmp
add
add
mov
push
insl
clc
mov
adc
pop
lock
gs
pop
jne
outsl
cmp
out
adc
shrb
aaa
adc
mov
fcoml
dec
mov
cs
xchg
cmpl
addr16
xorb
test
aad
and
ss
lahf
inc
es
arpl
inc
cld
out
lea
or
stc
loop
add
push
nop
or
fdivrs
inc
int3
inc
dec
push
adc
dec
aaa
inc
and
sar
ret
adc
lret
push
hlt
pop
cmp
jmp
jnp
ror
xchg
clc
push
or
cmc
add
xor
mov
push
cmpl
pop
fcoml
and
fxtract
cld
dec
hlt
dec
cmpsb
ss
outsl
sbb
daa
pushf
arpl
clc
sbb
icebp
and
jp
mov
xor
fwait
sbb
outsl
insb
mov
mov
xor
sbbl
pushf
xor
pop
jns
jnp
and
and
jns
jge
cli
aad
pop
imul
push
sub
sbb
dec
repz
or
xchg
sti
orb
popf
aad
cmp
inc
into
or
loop
mov
sbb
enter
das
pop
adc
clc
push
lret
rcll
clc
icebp
jl
dec
jle
mov
and
sbb
sbbl
lret
pop
cmpsb
repz
sbb
pop
adc
fisubrs
iret
es
sbb
lret
dec
into
dec
leave
and
jecxz
pop
mov
add
call
ja
add
rcl
cmp
jb
push
iret
lods
jbe
adc
mov
and
ficompl
jp
leave
jl
mov
cmpsl
push
and
iret
pusha
mov
push
sbb
mov
aad
mov
add
adc
inc
add
cmp
lock
adc
sub
dec
cwtl
xor
mov
sub
xor
xchg
mov
adc
and
sub
add
fiaddl
and
out
dec
cmp
and
insb
dec
push
mov
mov
add
mov
lea
mov
rcrl
push
shr
jge
push
out
jo
in
jae
ret
jbe
or
ficomps
testl
or
lret
arpl
sti
repz
arpl
aaa
jecxz
cmp
jne
cmpsb
int3
insb
insl
daa
adc
negl
and
mov
sub
push
push
sbb
rcll
addr16
dec
scas
adc
inc
jp
data16
push
mov
scas
inc
mov
cmp
das
dec
push
mov
pop
xchg
aaa
add
dec
jge
jp
and
adc
xchg
lea
push
sbb
iret
and
stos
pop
cld
test
cld
jbe
test
sbb
sub
cli
repz
mov
sbb
pop
pushf
pop
mov
imul
fdivrs
jne
mov
loope
inc
loopne
pop
push
sarb
xchg
xor
test
push
dec
jb
mov
jnp
imul
or
add
mov
xchg
jb
in
scas
sub
dec
push
dec
sub
pop
push
push
jne
loopne
hlt
sub
cmpb
push
cwtl
add
arpl
or
jge
aad
nop
gs
add
cmpsb
push
sub
adcl
or
call
jns
mov
pop
pop
dec
ficoms
sub
mov
into
lcall
mov
and
shlb
sbb
enter
xor
adc
cmpsl
push
ret
or
mov
fcoml
std
das
cs
sub
xor
cmpsl
add
icebp
pop
loopne
push
sbb
enter
mov
in
xchg
gs
cs
mov
xchg
sub
outsl
push
mov
sbb
int3
scas
xchg
pop
das
pop
cmc
int3
jle
lcall
or
lahf
mov
push
mov
ja
push
in
pop
pop
mov
stos
int3
inc
mov
mov
cmpb
scas
mov
test
fnsave
xchg
xlat
lcall
pop
mov
pop
dec
xchg
push
add
lret
or
iret
cltd
scas
and
push
mov
cmp
sub
imulb
scas
scas
sti
pushf
hlt
sbb
cwtl
test
jecxz
cwtl
cwtl
dec
into
ror
jmp
cmp
mov
in
in
ficoml
outsl
jge
into
dec
xchg
fs
pop
ret
pop
pop
dec
sub
sub
lea
mov
jb
cmp
xchg
mov
stc
mov
cmp
hlt
into
push
fldenv
aam
sub
mov
insl
adc
lcall
out
mov
shr
enter
xchg
ja
mov
fnstenv
lret
and
and
daa
aam
mov
mov
test
cmpsb
lret
mov
mov
sub
add
cmc
fnsave
daa
push
sahf
or
xor
inc
xchg
aad
cmpsl
dec
xchg
loope
addr16
push
imul
push
and
popa
ds
je
lods
icebp
ficompl
sbb
movsl
loope
pop
mov
xchg
push
cmp
adc
in
or
xor
jns
popf
push
pop
test
scas
je
mov
mov
pop
xor
in
adc
inc
jns
xor
imul
and
pop
cld
daa
enter
mov
lcall
inc
xchg
movsb
jae
mov
fstpl
xchg
addb
push
pop
pop
dec
push
sub
jmp
add
shll
push
addr16
mov
lret
stos
or
cmpsl
repnz
xchg
xchg
lret
cmp
clc
nop
cmc
sub
test
lock
repz
jecxz
push
lods
jle
mov
das
cltd
push
rcll
test
inc
int3
sub
mov
jb
push
push
jl
test
std
popf
hlt
xor
jns,pn
cmp
andl
and
sbb
mov
add
imul
mov
repz
pop
xor
dec
bound
hlt
mov
into
jmp
sbb
repnz
cmpl
daa
push
push
cmp
int3
mov
imul
mov
fdivp
imul
jo
shrl
mov
jl
dec
aaa
mov
sub
xchg
popa
outsl
sub
or
xchg
ret
jb
xor
movsb
mov
jg
jns
and
mov
lock
or
sbb
xlat
push
dec
lea
stos
testl
es
push
push
mov
push
push
add
push
nop
testb
movsb
lods
ds
adc
out
std
cmp
add
and
and
sub
push
data16
pushf
out
mov
in
jno
mov
and
int3
leave
push
push
jb
push
jae
mov
popa
xor
dec
sbb
jl
fidivs
sub
andb
cmpsl
daa
cmp
pop
into
push
mov
iret
and
insl
js
int
mov
sahf
es
mov
pop
int3
aam
nop
int
push
mov
mov
mov
mov
jns
les
add
push
sub
or
push
scas
stos
dec
js
hlt
lret
sarb
imul
movsl
mov
add
hlt
mov
inc
xor
bound
in
fcmovnu
daa
and
pusha
dec
jne
rcrb
push
jo
lret
adc
hlt
insl
iret
inc
cs
loop
inc
data16
lods
pop
mov
push
test
xor
cs
inc
lret
mul
ljmp
aas
or
je
pop
xchg
push
shll
rorl
arpl
iret
xchg
aad
sub
ja
and
cmp
mov
mov
push
mov
jp
shlb
leave
push
jo
cmp
sbb
mov
mov
jge,pn
push
dec
mov
sub
notl
push
jo
lahf
test
push
push
mov
or
cs
cs
adc
flds
or
out
sub
lretw
mov
jecxz
in
fbld
lds
push
push
in
inc
adc
jno
sarl
jg
dec
push
or
sbb
adc
scas
xor
and
jns
pop
push
mov
loop
fs
orl
scas
sti
popf
aam
pop
out
stc
vaddpd
and
mov
push
fwait
std
or
movl
sbb
in
aam
add
cmp
sbb
fcom
shr
pop
xor
dec
gs
cmp
insb
mov
jns
movsb
inc
sub
lods
dec
sub
in
fadds
int
push
ret
in
in
jg
xchg
nop
lock
in
inc
adc
push
sub
insb
mov
mov
xchg
pop
mov
imul
push
icebp
sub
add
lock
sub
mov
js
jl
sahf
mov
cmpsl
sub
fmull
pop
cmpsl
xor
scas
mov
dec
cmp
pop
xchg
add
lds
cltd
nop
mov
xchg
add
adc
test
xchg
xor
nop
imull
bound
jae
pop
out
inc
mov
imulb
and
jge
into
lds
push
mov
insb
xor
sbb
bound
add
arpl
mov
fists
cmpsl
pop
push
xchg
scas
and
popa
leave
rcrb
or
shr
lret
mov
inc
nop
dec
jge
jecxz
rcrb
pop
scas
pop
test
add
cmpl
inc
cwtl
mov
inc
out
sbb
fwait
inc
xor
jnp
ret
jae
cmp
lods
pop
adc
mov
mov
pop
mov
inc
pop
mov
mov
mov
mov
xchg
pusha
push
lea
sbb
inc
pushf
test
push
or
pop
dec
imul
inc
rorb
mov
jbe
int3
jle
pop
sub
push
jbe
pop
mov
pop
push
movsl
push
and
test
int
dec
ds
je
inc
inc
cmpsl
push
in
inc
shrb
pop
inc
out
dec
enter
lret
mov
pusha
stos
into
and
scas
enter
sbb
into
cmpsb
lea
inc
pop
lahf
pop
mov
push
or
jns
mov
mov
xchg
dec
add
mov
hlt
cltd
push
mov
jns
sub
cmp
push
push
decb
popa
xor
lods
pushf
addr16
xor
aam
xchg
andb
pop
jns
int
in
push
out
out
lcall
icebp
mov
fs
xchg
mov
popf
mov
stos
out
jo
cmp
cld
imulb
lcall
rcrl
jno
icebp
mov
or
mov
jae
push
fnsave
int
fldl2t
pop
jbe
cmp
shll
imul
mov
mov
into
in
dec
fmuls
popf
or
sbb
stos
outsl
jg
xor
leave
stc
sbb
je
sbb
xchg
push
sbb
inc
xor
loop
xchg
lds
hlt
mov
dec
ret
test
push
pop
cmp
sub
mov
aam
sub
pxor
ja
dec
push
outsb
cmp
mov
xchg
lahf
pushf
in
negl
dec
hlt
push
mov
sbb
ret
jnp
arpl
dec
icebp
or
xor
sbb
xchg
jl
xchg
mov
stos
sbb
inc
shrb
divl
add
mov
aas
aaa
int3
hlt
xchg
sbb
dec
xchg
repnz
iret
sub
xchg
xor
fcoml
std
mov
pop
cmpsb
daa
xchg
in
xchg
dec
jmp
jg
mov
cmpsb
or
lds
mov
dec
lret
imul
loopne
sub
xchg
test
dec
fdivrl
push
or
test
jecxz
test
mov
jae
leave
enter
xchg
aad
pop
out
mov
jge
out
jmp
pop
lods
inc
pop
ds
push
addr16
ds
fstpl
pop
sbb
inc
ret
pop
loopne
inc
stc
inc
lods
sub
nop
sbb
fidivrl
jno
adc
xlat
sarl
lods
fisttps
pop
inc
inc
sbb
lea
mov
mov
leave
mov
mov
xor
ret
and
pop
imul
movsl
fiaddl
addr16
movsl
lods
insl
clc
xor
lret
mov
out
xor
sub
dec
xlat
sub
testl
add
push
push
shll
jecxz
mov
nop
jno
xchg
movsl
push
into
mov
cmp
shrb
incl
xchg
addr16
in
xchg
cmp
and
push
mov
out
or
loope
insl
leave
xor
negb
aaa
incl
mov
rcrb
xor
push
mov
push
xor
out
or
mov
fiaddl
and
inc
push
pop
mov
push
push
push
dec
sub
int3
pop
jle
popa
xchg
rcr
bound
sub
xor
out
sub
andb
sub
mov
daa
dec
cltd
mov
jno
lcall
pusha
cld
jecxz
dec
movsb
or
pusha
dec
aad
popf
dec
xchg
dec
aas
lock
mov
dec
add
rcl
mov
js
push
dec
xchg
push
or
pushl
gs
fists
mov
push
sub
clc
mov
or
call
repnz
or
dec
add
add
and
push
or
cli
andl
mov
jp
addr16
into
lods
jl
cmovge
idiv
test
push
dec
ret
in
sub
data16
arpl
mov
adc
adc
lock
popf
in
sbb
scas
ret
jb
cs
ljmp
cmpsb
or
pop
scas
psubb
pushf
jle
mov
daa
cmc
add
xchg
outsl
inc
xchg
xor
iret
xorl
pop
push
lahf
ja
dec
bnd
cltd
sbb
inc
adc
into
cmp
mov
scas
rcrl
out
push
fs
push
mov
pop
cli
dec
cld
outsb
pop
jne
scas
fists
enter
in
pop
loop
jns
mov
out
adc
dec
aad
mov
rcll
mov
mov
daa
vpand
gs
fstpl
out
inc
iret
andb
iret
jecxz
insl
cli
pop
loopne
inc
dec
sarb
out
in
jp
rcrl
xor
xor
push
addl
cli
stos
adc
icebp
mov
ja
add
ljmpw
jg
push
movsb
jmp
pop
pop
bound
pop
test
out
jb
mov
mov
xor
cmp
dec
dec
cli
es
adc
push
imul
daa
leave
mov
xchg
push
jbe
popf
shrl
bound
xchg
in
jns
fcompl
dec
in
sub
xor
push
push
cmpb
or
sub
xchg
roll
mov
rcrl
pop
xor
ss
add
push
fs
ret
test
mov
fcomip
mov
pusha
mov
sti
dec
pop
gs
inc
xchg
dec
jl
repz
adc
repz
cmp
test
incl
lods
inc
sub
cmp
cmp
push
or
cmp
mov
mov
and
loopne
cmp
pop
mov
inc
popa
pop
xchg
movsl
inc
flds
push
rolb
ds
in
pop
xlat
mov
loop
mov
add
cmp
ror
and
sar
adc
mov
or
pushf
mov
loope
loop
jae
sub
xor
test
jmp
insb
fcom
ss
out
sbb
out
in
mov
push
push
add
rorl
popf
repz
cmc
or
adc
dec
jo
loopne
pop
leave
xchg
or
adc
sbb
jecxz
dec
or
sub
and
shrl
dec
pop
js
ficoms
jge
cmp
les
xchg
into
xchg
mov
inc
movsl
adc
lcall
cld
fistl
mov
dec
iret
jnp
cwtl
mov
shl
mov
mov
shrb
dec
dec
push
add
cmp
aam
lock
push
in
bound
add
scas
pop
fistpl
and
addl
jno
cmp
fcompl
int
daa
je
fisubrl
fcmovb
cmp
jle
mov
inc
add
mov
pushf
mov
sub
ljmp
cmp
lret
mov
iret
popf
fists
mov
jnp
push
inc
pop
fildl
mov
jns
sub
push
fbld
cmpsl
ja
inc
xchg
out
sub
ljmp
push
or
add
and
loopne,pt
mov
add
xor
out
cmp
in
mov
mov
mov
dec
pop
int3
pop
mov
xchg
mov
cs
mov
fs
fidivs
outsb
scas
repnz
mov
popa
cmp
loop
in
mov
add
pop
cmp
leave
mov
push
hlt
sub
sbb
and
inc
push
lahf
adc
out
loop
enter
add
push
push
cmp
lahf
mov
lahf
sbb
movl
and
xchg
dec
xchg
cmp
pop
adc
xchg
loop
pop
lods
cmc
pushf
scas
inc
data16
mov
xor
adc
sbb
nop
test
and
push
int3
pop
mov
mov
decl
popa
xor
mov
imul
fwait
cltd
in
outsb
pop
sub
rorl
ss
aas
mov
in
or
sti
dec
cmp
in
mov
sub
les
mov
je
xchg
and
adc
and
mov
add
test
push
fcomps
and
hlt
dec
pop
lock
mov
jb
inc
sub
and
xchg
js
mov
and
push
add
es
sbb
sbb
inc
adc
pop
push
push
lods
ret
push
loope
adc
ljmp
lods
ss
xchg
xor
xchg
pop
xor
std
lock
mov
sbb
jbe
idivl
and
dec
mov
pop
or
rorb
dec
shll
jo
add
outsl
test
mov
outsl
push
push
clc
xchg
ret
jne
xor
mov
stos
stc
inc
lret
testl
out
loopne
inc
xor
xchg
ds
cmp
dec
push
and
sbb
xchg
pop
popf
int
jl
mov
scas
and
jno
inc
jae
cmp
and
testl
cmp
mov
pop
jno
lret
lea
push
fists
aad
cmp
test
clc
inc
jl
test
popf
clc
push
xchg
movsb
int3
les
jge
cmpsb
xlat
cmp
test
sub
lods
int3
push
cwtl
mov
stos
out
jae
imul
stos
lret
xchg
inc
ffree
gs
pusha
cmp
lret
insb
out
xchg
xor
dec
sbb
mov
jbe
fwait
or
adc
cmp
out
push
mov
rorl
sub
and
scas
xchg
mov
out
repz
xchg
mov
clc
lock
xchg
dec
mov
add
fistps
jbe
add
and
cmp
leave
hlt
add
fimuls
dec
stos
popf
mov
pop
and
jge
dec
lret
aaa
lahf
ret
sub
xlat
or
sbb
pop
loopne
xor
test
sar
push
fisttps
lods
ljmp
fsubrs
dec
xor
jg
jnp
cmpsb
test
negb
lcall
pushf
jo
cmc
shl
mov
movsl
aas
inc
or
inc
or
stos
mov
into
stc
or
cs
inc
in
loop
or
pop
hlt
aaa
arpl
or
fwait
mov
loope
pusha
jle
push
stos
push
jmp
je
jmp
lcall
cmp
pop
sub
jg
aam
fwait
inc
add
lds
sbbl
mov
nop
in
inc
les
int
in
shll
ret
dec
push
ss
lcall
movsl
push
test
jbe
adc
aaa
adc
and
push
out
cmpb
mov
sub
adc
nop
sbb
add
stos
cmp
dec
and
mov
bound
fbstp
pop
add
nop
lods
xor
adc
insb
aaa
adc
inc
leave
mov
mov
fsubr
push
sub
iret
enter
dec
insl
sbbb
pop
cmp
adc
and
mov
je
inc
inc
mov
jmp
xor
xchg
add
mov
or
push
dec
fsubr
push
cmpb
dec
xchg
sbb
call
outsl
test
adc
inc
xchg
jb
inc
cwtl
call
cmp
aam
and
xor
or
mov
pop
pop
cmpsb
rorl
jmp
cmp
sub
dec
iret
mov
iret
rcrl
xchg
sub
cmp
sub
test
push
push
movsb
scas
ss
mov
out
mov
pop
push
js
mov
lret
fcmovbe
dec
push
fildl
es
xlat
into
cwtl
int
push
xchg
inc
je
jge
in
xor
and
xchg
std
daa
jne
lods
xor
sbb
cmp
int3
adc
aas
mov
push
push
mov
mov
cmpsl
imul
jnp
insb
rcl
dec
sub
mov
fdiv
push
rolb
mov
push
add
or
test
movups
lods
fmuls
mov
ret
xor
jle
aaa
cld
dec
add
leave
dec
out
stos
test
mov
and
cmpsb
cld
in
push
jmp
in
mov
push
fadd
sti
xor
inc
iret
jo
hlt
int3
sbb
cltd
xchg
or
pop
cmpsb
jno
sbb
push
in
pop
jle
mov
imul
jg
push
mov
mov
cli
cmpsb
and
jb
jecxz
xchg
xor
xchg
or
iret
or
xchg
inc
loope
sub
jb
pop
jp
xchg
sarb
lcall
or
sbb
dec
dec
andb
lcall
mov
sub
stc
lahf
aam
mov
clc
ljmp
inc
ja
sub
xorb
sahf
data16
dec
rcrb
ficompl
ret
scas
aam
fisttpl
adc
pop
inc
cmp
mov
clc
xchg
bound
mov
leave
into
mov
cltd
js
stos
mov
out
mov
jns
xor
fimuls
push
or
out
mov
int
jg
dec
push
inc
outsb
mov
inc
xor
xorb
pushf
fnstcw
mov
cwtl
sub
inc
int3
xor
sbb
stos
cltd
es
mov
cmp
add
popf
sbb
adc
das
shll
cmp
push
inc
mov
jge
cmp
add
jnp
pop
inc
sbb
shl
push
aad
dec
inc
add
repz
pop
arpl
push
pop
push
dec
sahf
xchg
inc
idivl
lret
ja
sub
mov
or
loop
in
ret
addr16
add
int3
sar
jecxz
sub
sbb
pop
mov
fistpll
outsl
movsl
repz
inc
xor
fmulp
je
fdivrs
ja
es
repnz
in
mov
daa
clc
mov
stos
lods
push
mov
pop
sbb
mov
mov
in
hlt
ret
adc
push
rcl
mov
cmpsb
ljmp
bound
popa
pop
xor
cli
cmp
add
pop
mov
pop
adc
mov
mov
adc
ds
lcall
inc
test
adc
add
out
mov
push
dec
cli
stc
and
pusha
mov
cld
in
cmp
lods
jo
mov
jecxz
mov
and
mov
and
sbb
mov
fdiv
cmc
aam
push
mov
out
mov
sub
cs
jne
ljmp
push
and
xor
imul
in
xchg
je
xor
insb
ljmp
fs
cli
mov
xor
jp
inc
pop
lods
push
pop
out
call
aaa
fmulp
clc
mov
gs
pop
xor
sub
cmc
jl
inc
mov
push
jp
fcoms
inc
push
mov
sbb
icebp
jmp
xchg
sti
sbbl
enter
rol
test
addr16
sbb
push
mov
xor
std
les
mov
ret
mov
ja
cmpsb
xchg
sbb
stc
add
sbb
cmp
sub
iret
loop
mov
push
rorb
adc
adc
jns
jmp
das
pop
dec
xlat
fidivl
and
mov
adc
into
mov
pop
inc
xchg
mov
enter
movsb
mov
xchg
add
mov
das
mov
dec
mov
xor
adc
push
cli
cmpsl
jb
or
pop
insl
push
xor
in
subb
pop
adc
int3
jge
scas
pop
cmp
inc
lds
sub
jo
xchg
xor
loop
cld
insb
fidivs
lahf
btl
push
xor
inc
adc
shll
mov
je
inc
cmpsb
testb
jge
mov
mov
ja
push
cmp
mov
insb
mov
cmc
or
por
fisubrs
jge
xchg
test
in
adc
insl
sbb
insl
mov
push
dec
cmp
imul
mov
icebp
or
push
add
sub
sub
pop
ret
repnz
stc
in
cwtl
repnz
mov
and
inc
jne
sub
add
jp
xchg
jne
mov
fs
mov
shrb
pusha
inc
xbegin
int
into
fidivrl
sub
pop
in
push
push
push
sub
mov
inc
mov
les
mov
and
into
mov
cmc
shrb
into
sbb
in
cwtl
enter
test
movups
jno
aad
icebp
jmp
sub
lods
mov
fnstenv
and
mov
xchg
mov
imul
or
xchg
mov
notl
cmc
iret
dec
and
jb
push
mov
and
leave
shr
mov
mov
mov
ret
and
ljmp
mov
sti
xchg
xchg
push
jle
cwtl
loopne
data16
cltd
sub
mov
scas
sub
xchg
test
push
movsb
in
adc
pusha
sub
jns
sbbb
mov
pusha
mov
mov
adc
scas
fwait
mov
out
pop
inc
add
mov
lods
adc
push
in
xor
push
add
aad
rolb
pop
adc
hlt
cltd
and
inc
out
roll
gs
fldl
sahf
std
sbb
add
insb
fsubs
and
inc
mov
cmp
movsb
insl
pop
sbb
or
sbb
and
lret
inc
or
jne
cmp
jmp
xor
mov
inc
sbb
movsl
xchg
fbstp
xlat
and
mov
scas
and
bound
shl
dec
and
sti
inc
push
jmp
insb
imul
test
mov
cs
outsl
dec
push
dec
pusha
pop
aas
jp
dec
mov
aaa
push
lods
mov
fs
xchg
mov
mov
xchg
adc
pop
dec
jnp
xor
ficompl
mov
dec
std
or
pushf
in
lret
push
lret
fcmovb
jge
add
mov
push
push
aam
lahf
nopl
push
push
mov
std
jno
hlt
xor
push
mov
mov
fcomps
jp
xlat
sub
and
mov
in
in
and
jb
in
and
icebp
rolb
adc
adc
loop
mov
mov
xchg
iret
dec
ja
leave
sub
out
in
pop
mov
inc
xor
ds
mov
ret
jge
outsw
in
or
pop
xchg
xor
and
cmp
xchg
mov
mov
push
sbb
pop
push
outsb
lret
das
in
test
ss
addr16
mov
push
iret
lret
fcmove
inc
scas
xor
leave
lds
mov
int
addr16
loope
nop
mov
imul
movsb
pusha
std
jne
int
rorb
add
mov
shr
out
sbb
stos
or
add
jl
out
xchg
jmp
paddb
push
les
xchg
imul
add
loop
mov
or
outsl
sub
sbb
pop
mov
add
pop
sbb
hlt
xorb
mov
mov
lds
jns
sbb
xchg
arpl
hlt
fildll
nop
jge
jns
and
test
add
dec
insl
ljmp
cmpsb
jbe
cld
insl
out
mov
aas
mov
cs
push
cmp
leave
jmp
adc
and
test
in
adc
stos
push
xchg
push
int
mov
data16
cmpsl
int3
mov
scas
xchg
daa
mov
mov
lods
sbb
mov
pop
shl
rcl
sbb
insl
fwait
mov
cmpsl
or
cmc
inc
jmp
cld
negl
test
outsb
or
pop
add
pop
xlat
push
adc
push
lea
sbbl
cmp
push
push
bnd
in
test
aam
add
sub
sub
aas
pop
fisubl
arpl
xchg
int3
pop
dec
pop
enter
cmp
out
stc
ret
jg
imul
add
dec
cmp
fadds
dec
inc
stc
aaa
push
leave
mov
sub
nop
lock
mov
mov
adc
sahf
xchg
mov
addb
adc
add
sbbb
mov
mov
inc
int
lods
pop
dec
mov
and
mov
roll
mov
outsl
cmpsl
pushf
in
popa
scas
out
xchg
pop
lret
movsl
lods
mov
adc
and
outsl
adc
or
mov
mov
cld
push
out
xor
pop
mov
mov
and
mov
xorl
sarb
std
scas
push
fwait
popa
xchg
in
jb
movsl
lahf
fildll
dec
daa
jo
daa
daa
mov
xor
jb
leave
sbb
adc
adc
daa
push
push
xchg
gs
icebp
mov
sub
xchg
jge
movsb
pop
adc
dec
mov
push
ds
ss
jns
pop
lock
cmp
cmp
mov
or
fwait
subl
imull
daa
mov
mov
mov
mov
cmp
stos
cmp
cmpsb
sbb
decb
xor
xor
out
sub
mov
mov
xchg
xor
movsl
fcoms
mov
outsl
push
mov
dec
gs
or
out
pop
sbb
jge
pop
jge
repz
cmpsb
mov
sbb
mov
cli
aam
jl
push
cmp
mov
outsl
adc
mov
lcall
sbb
jns
test
in
es
dec
sub
iret
leave
cmp
ret
mov
adc
jmp
aad
inc
jmp
sbb
mov
leave
mov
inc
scas
pop
or
mov
push
mov
icebp
popa
cmp
arpl
inc
sub
jge
fprem
jb
push
pop
sahf
lods
mov
xchg
pop
andb
xchg
sub
testb
xor
cmpsb
fiadds
mov
xlat
mulb
movsl
xchg
fwait
adc
xor
and
repz
loop
adc
xorb
and
scas
mov
loop
inc
lods
mov
loopne
addr16
ss
pop
scas
cmpsb
inc
xchg
test
fmull
out
adc
jbe
cmpsl
movsl
lock
fistps
ror
and
enter
adc
mov
fwait
dec
sahf
cwtl
dec
cmp
jbe
xor
repnz
insb
adc
aas
loop
fadds
jge
clc
pop
dec
popf
scas
sbb
and
stos
cmp
xchg
imul
sarb
fisubrl
lcall
imul
shll
dec
rol
imul
cltd
in
stos
xchg
fistl
push
aas
mov
sarl
scas
lret
fsubrs
mov
and
pop
popa
mov
enter
loop
or
mov
fisttps
fwait
sbb
mov
lcall
add
jo
in
shlb
fdivrs
sbb
out
rolb
mov
popa
mov
add
sbb
clc
popa
jle
sub
dec
loopne
lcall
not
dec
adc
cmp
sbb
lock
jmp
jns
dec
cmc
xor
or
icebp
sti
push
dec
cmp
into
xchg
arpl
shll
xlat
orb
clc
pushf
xlat
inc
std
or
dec
push
lods
push
add
ret
inc
fisubrs
xchg
shlb
inc
lods
xlat
shl
and
pusha
es
or
xchg
shrb
out
gs
dec
lcall
xchg
icebp
inc
dec
mov
sub
xchg
sbb
xchg
pop
bound
fimuls
sbb
xlat
in
xchg
test
adc
mov
mov
mov
dec
popf
int3
rcl
rcl
push
dec
test
inc
add
in
es
or
push
outsb
fists
mov
mov
or
pop
leave
mov
mov
sub
rcll
mov
adc
jae
sbbb
dec
std
jge
addl
xchg
pop
mov
cmp
adc
sar
data16
mov
dec
repz
mov
jne
pop
mov
lods
aas
ja
call
adc
add
call
loop
sbb
aas
mov
enterw
mov
cmp
aam
cwtl
lret
ss
cmp
mov
jecxz
inc
call
sarb
rcl
pop
mov
int
cmp
jno
fs
out
mov
jl,pn
std
shll
addl
ror
mov
mov
lods
mov
imul
sbb
dec
xor
negl
jnp
lret
test
lret
fmul
ds
fwait
cmc
mov
outsb
js
dec
sahf
lock
cmc
movsl
dec
inc
into
ret
jmp
lods
andb
mov
or
xor
add
int3
mov
jl
push
pop
das
jnp
dec
nop
sbbb
ds
pop
jp
push
sub
or
in
or
xor
sbb
xor
jge
cmp
mov
push
shl
adc
gs
jmp
les
in
iret
ficoms
xchg
nop
inc
int3
mov
xchg
sbb
bound
fstps
mull
xchg
cmp
aaa
jns
mov
and
or
es
cmc
add
cs
sbb
lock
pushf
lods
push
data16
push
mov
out
push
outsl
rcr
push
xchg
iret
and
xorb
jae
cmp
dec
sti
fidivrl
and
adc
pop
push
std
aaa
jb
pop
inc
cli
jnp
lods
lds
es
lods
pop
scas
fwait
nop
mov
cld
aad
ret
push
in
sbb
scas
cmc
ret
push
push
mov
adc
gs
jo
or
and
jge
mov
dec
data16
adc
aas
daa
or
mov
and
xlat
xrelease
mov
pop
in
aam
sbb
sbb
sahf
aaa
xor
mov
sbbb
push
out
mov
push
mov
xor
push
dec
hlt
xchg
xchg
outsl
push
mov
ret
mov
jb
ret
cld
mov
mov
subb
sub
std
mov
dec
rcll
shl
adc
cmp
sub
pop
cli
pop
mov
pop
cltd
mov
jb
punpckhdq
arpl
les
xchg
dec
cmp
mov
mov
iret
into
sbb
sbb
cmp
ljmp
push
pusha
out
testb
inc
xlat
imul
xchg
dec
jp
mov
inc
push
inc
jbe,pn
sbb
jecxz
cmp
cmp
clc
out
aaa
in
cmp
xchg
fdivr
sub
imul
sbb
or
xchg
xchg
lods
adc
test
or
xlat
mov
add
inc
sahf
movnti
mov
nop
mov
jne
add
std
rcll
push
cmp
test
sti
fstl
roll
cltd
xchg
sbb
ds
sub
mov
adc
sbb
nop
movsb
je
and
fisttpll
sub
xor
out
or
xchg
jle
cmc
mov
xchg
lcall
mov
pop
iret
clc
test
mov
xchg
jns
fsubp
push
insb
fldenv
bound
adc
xchg
push
adc
scas
pusha
dec
push
lds
imul
inc
sub
aad
fs
xor
inc
jmp
or
jb
movsl
lcall
add
lock
enter
fsubl
loope
jno
aad
mov
mov
mov
imul
push
shll
push
pop
and
pop
lea
test
push
mov
sub
cmpsb
stc
xorl
stc
inc
enterw
sahf
lcall
fs
inc
movsb
and
inc
xor
and
mov
fcoms
xor
clc
out
popf
cmp
mov
sbb
int3
or
or
ds
pop
adc
jl
jle
jbe
jmp
xchg
mov
iret
jae
mov
xor
xchg
push
add
fs
lods
shll
sub
inc
pop
enter
xchg
stos
add
mov
pop
lret
sub
mov
mov
nop
data16
lea
fwait
orb
cs
xor
stos
icebp
add
hlt
mov
dec
outsl
pop
lret
pop
sarl
fs
into
dec
arpl
sub
cwtl
mov
jg
adc
cmp
pop
mov
aam
adc
mov
test
repnz
idivb
call
fdivrp
js
les
outsl
repnz
cld
xor
mov
mov
push
and
ljmp
rcrl
test
shll
sbb
pmulhw
lods
and
sti
mov
push
jo,pt
fs
cmp
data16
jge
inc
cwtl
xchg
cmp
xchg
pop
aas
std
cmp
push
or
andb
mov
adc
pop
idivb
cltd
icebp
fldl
aad
js
jnp
out
imull
cwtl
xchg
fadd
in
xchg
addr16
stos
fmul
sub
lcall
and
mov
icebp
out
imul
mov
adc
adc
mov
pop
mov
and
pusha
sbb
fimull
nopl
jns
inc
dec
mov
out
dec
lock
jae
inc
pusha
call
aas
arpl
sub
stos
int
xor
cs
cmpsb
les
jmp
les
cs
fdivrl
test
pop
xor
dec
push
jo
fs
icebp
int
push
mov
insl
in
in
xchg
adc
inc
hlt
outsl
mov
jl
popf
lret
ret
call
inc
addr16
rcl
mov
and
jns
gs
sbb
pop
xchg
mov
sahf
mov
call
jmp
dec
pop
js
mov
cmp
in
cmp
jae
repnz
lods
rep
jo
dec
ss
fildl
lahf
push
inc
rclb
stc
pop
jmp
jne
or
and
or
pushf
popf
mov
fsubp
clc
xchg
or
sub
stos
repnz
enter
push
jge
jecxz
xor
ds
inc
mov
mov
cld
mov
shll
in
pop
popf
fidivs
adc
cmp
or
xor
push
rorl
or
lahf
sbb
xchg
pusha
jge
pushf
push
fucomi
sbb
xor
inc
xchg
push
stos
int3
xor
rclb
fildl
cli
lods
xchg
gs
pop
inc
fstpt
inc
lods
inc
leave
pop
push
in
cmpsl
mov
out
mov
jbe
jp
daa
pop
in
sti
pop
aas
adc
scas
loope
fsubs
xorb
stos
aad
subl
jp
pop
shl
sbb
cmpsl
and
sbb
adc
lds
popf
lea
dec
imul
flds
loop
add
in
lahf
lods
out
cmp
dec
adc
loopne
cmp
orl
pop
inc
or
aas
mov
mov
rcll
sub
sub
sbb
mov
in
cwtl
jnp
sub
mov
ja
push
loop
mov
lret
sub
jb
inc
sub
call
pop
mov
mov
ljmp
push
aam
pop
js
int
sbb
sahf
inc
inc
xchg
hlt
mov
push
or
and
jb
fisubrl
and
lret
xchg
pop
in
pusha
and
or
xchg
nop
pusha
repnz
jae
sub
xchg
dec
cwtl
push
rorb
popf
dec
les
adc
xchg
push
jle
lods
push
and
jp
pop
jb
xor
xchg
lock
mov
mov
jmp
cli
add
sbb
push
das
mov
mov
cmp
call
xchg
xchg
aam
pop
cmp
outsl
mov
jecxz
cmc
out
sbb
pop
add
add
pop
rorb
ds
jnp
sbb
sbb
or
aam
das
cmpsl
enter
cmc
mov
fadds
cmp
mov
and
xchg
adc
jmp
imul
mull
fidivs
flds
cmp
stos
lock
addb
mov
mov
jo
mov
cmp
sbb
out
addr16
pop
lret
adc
aad
enter
loope
or
cmp
cwtl
stos
mov
fwait
das
mov
and
mov
jecxz
adc
push
mov
insb
ja
daa
cmc
into
add
xchg
mov
pop
call
scas
rcrb
repz
jle
enter
cmp
mov
rcrb
sahf
insb
xor
pop
int3
out
mov
mov
lret
push
shll
push
sbb
mov
xchg
cltd
fimuls
aas
or
faddl
mov
fdiv
arpl
mov
mov
shrl
insb
xchg
test
hlt
pop
loopne
push
push
jae
js
dec
aam
pop
hlt
inc
jl
jno
and
pushf
push
lret
add
push
jbe
jmp
sbb
aas
dec
sub
stc
leave
into
or
sbb
adc
sub
push
insb
mov
cmp
repz
adc
fcompl
push
xchg
out
arpl
les
dec
add
int3
lea
popa
push
cld
out
jg
xchg
mov
jl
popa
xchg
push
lods
aas
rclb
sub
out
imul
outsb
and
push
loope
nop
imul
push
dec
adc
mov
aad
lahf
push
in
mov
add
jmp
inc
sbb
stc
mov
mov
shlb
jnp
testb
mov
lret
cli
mov
out
std
test
popa
lret
add
ja
add
mov
cs
loop
add
adc
push
cli
pop
stos
popa
push
pop
rorl
or
sbb
jle
mov
mov
adc
mov
mov
out
inc
sub
pusha
rcll
pop
mov
mov
addl
subl
jne
bound
or
lcall
rcr
inc
sarl
xlat
sbb
jl
in
sub
lahf
and
ret
jns
int
jae
stos
xchg
jmp
push
daa
fsts
jg
add
cmp
fbstp
and
adc
push
ret
push
roll
out
mov
stos
dec
jbe
add
je
mov
cmc
shll
arpl
out
scas
mov
lret
popa
js
or
jg
das
cmpsb
insb
mov
and
mov
sub
mov
cmp
adc
test
ret
test
je
sbb
sub
lret
sbb
dec
inc
cltd
shlb
pushf
inc
loope
call
push
xchg
adc
in
jnp
fscale
xchg
mov
add
inc
mov
jns
repz
into
push
js
inc
jge
push
mov
in
sbb
mov
lret
xchg
cmp
push
inc
ret
pop
out
mov
xchg
popf
imul
fistpl
mov
mov
fcomp
cltd
fidivs
and
mov
imul
icebp
and
mov
push
ljmp
js
mov
mov
push
pop
stos
jne
xlat
cmpsl
jle
push
add
xlat
dec
ds
or
jne
pop
out
mov
sbb
adc
lds
test
xchg
sub
and
mov
andl
jle
jg
incb
pushf
pop
push
test
das
push
pop
mov
repnz
push
mov
fcomi
out
cmp
mov
sbb
mov
dec
mov
and
icebp
jne
push
iret
lea
or
cmp
test
mov
mov
cltd
push
loopne
iret
lcall
and
mov
inc
sub
mov
test
into
inc
dec
xlat
adc
or
inc
add
adc
dec
fcmovbe
jmp
fdivs
jl
adc
cwtl
jmp
jne
sub
mov
movsb
sub
mov
inc
das
push
dec
mov
or
xlat
das
lods
call
add
aam
sub
mov
es
mov
cmp
test
roll
aaa
orl
jae
adc
outsl
pop
mov
test
xor
and
loopne
rorb
cmc
ret
lret
jg
in
shll
mov
mov
outsl
pop
lret
lret
inc
js
xor
pop
test
test
sbb
shr
xlat
xor
aad
cmp
dec
testl
sub
test
push
cmpsb
int3
sbb
in
test
xchg
lds
scas
test
js
in
push
mov
mov
movsb
repnz
pop
lahf
orl
dec
jp
mov
mov
push
loope
sbb
mov
sbb
mov
shll
jno
cmp
icebp
or
jae
or
adc
pop
pop
js
adcb
pusha
das
cmp
xor
popf
xlat
in
add
add
inc
dec
dec
lea
sbb
xchg
mov
push
bnd
mov
aam
loopne
add
fisubrl
sub
sbb
sub
lods
lea
mov
pop
mov
imul
fidivs
sbb
mov
push
addr16
sub
sbb
push
lret
loop
int
cs
shl
icebp
mov
das
popf
lods
pop
and
orl
mov
pusha
adc
add
gs
ljmp
mov
xchg
dec
lods
test
dec
lret
sub
sbb
mov
test
pop
dec
mov
sbb
cmp
ret
or
dec
insl
lahf
fcompl
loop
fdivl
std
mov
pop
xchg
in
mov
cmp
sahf
stos
clc
ljmp
cli
incl
stc
or
les
fs
jbe
sub
adc
lret
aaa
sarl
inc
les
movsl
inc
mov
fbstp
mov
inc
or
icebp
inc
into
fnstsw
mov
popf
int3
mov
leave
insb
cmp
xchg
cmpsb
inc
out
pop
mov
pop
push
xchg
pusha
cs
test
pop
imul
pop
xor
pushf
rcrl
cmp
cmpl
insl
in
ret
xchg
mov
xchg
or
xchg
jge
shll
jae
loopne
pop
orl
sub
cli
fidivrs
or
jo
xlat
negl
sahf
cld
outsb
sub
call
push
gs
or
push
cmp
lea
inc
idivl
sbb
adc
xchg
jge
in
xchg
inc
clc
paddusw
cli
mov
xor
sbb
or
sbb
jp
out
test
repz
cmp
mov
stos
notl
imul
inc
push
mov
sbb
fcmovnb
pop
leave
inc
sub
push
inc
je
mov
add
sbb
sub
dec
pop
imul
fprem
sbb
push
cmp
dec
test
xor
arpl
mov
mov
cmp
and
inc
inc
add
push
cmp
arpl
mov
jp
inc
mov
cmp
lret
push
popa
mov
int
adc
and
and
into
inc
in
dec
inc
dec
mov
loop
nop
sbb
xchg
out
in
lds
xchg
sub
pop
adc
and
pop
push
aas
fisttps
fwait
pop
cwtl
jp
repz
imul
rcll
adc
cmp
repnz
ret
pop
je
test
sub
arpl
pop
imul
sbb
adc
push
out
and
mov
push
jbe
mov
dec
xchg
loop
or
aas
sbb
lds
jge
adc
ds
and
out
insl
jb
pop
stos
jmp
roll
stos
or
adc
outsl
dec
mov
cli
sbb
and
push
stc
mov
mov
cmp
arpl
sarl
negl
mov
test
add
dec
fsubrl
insb
clc
outsl
orl
loopne
push
movups
lsl
fcmovnbe
and
sub
and
mov
lret
push
xchg
int
insl
push
fbstp
xchg
sbb
mov
inc
icebp
pop
ds
mov
test
aaa
cmp
or
out
js
fsubrs
std
out
cld
dec
jg
pop
sahf
rcll
loopne
or
xchg
je
shrl
dec
out
jbe
call
mov
aaa
and
xchg
sbb
and
out
aad
test
adc
mov
adc
stos
sub
outsb
mov
lahf
addr16
roll
jge
test
aad
hlt
mov
xorb
insb
cmpsl
mov
cs
jmp
outsb
cld
pushf
arpl
fsub
orl
sub
out
cmp
lock
adc
push
adc
jnp
pop
addr16
push
xchg
scas
adc
jb
mov
enter
push
data16
xor
mov
jle
add
mov
cmpsb
in
pushl
pop
push
sti
sarl
mov
xor
mov
sbb
jo
mov
push
invlpg
js
mov
dec
loopne
xor
add
xchg
idivb
arpl
dec
dec
lods
lods
jb
sbb
ret
push
adc
inc
insl
lahf
push
shll
inc
mov
or
out
pop
push
mov
mov
pop
inc
pop
int
or
and
cmpsl
xor
and
notb
push
fs
lcall
sbb
iret
faddl
rcrb
mov
adc
frstor
or
sub
lods
mov
xchg
hlt
adc
mov
sub
pop
repnz
enter
fbstp
dec
add
fisubrs
inc
gs
loope,pn
sub
add
lods
adc
cs
outsb
sbbb
fucomip
push
xchg
test
subb
enter
hlt
mov
repz
testl
pushf
push
addr16
lret
dec
hlt
jmp
mov
enter
adc
jge
xor
ds
or
loop
sbb
push
subb
push
add
loopne
adc
mov
adc
pushf
pushf
cli
pop
mov
jge
xchg
rcrb
sarl
fidivrs
jmp
das
push
jle
jl
es
jo
dec
xchg
je
ja
jo
test
cmp
subl
popa
into
gs
jecxz
int3
stos
push
cmp
mov
pop
cmp
movsl
push
shl
adc
push
fsub
fcmovne
xor
fdivrl
and
pop
and
sti
jge
mul
pop
adc
in
outsb
std
out
mov
std
pop
scas
sbb
push
aam
repnz
dec
mov
popf
mov
adc
jo
hlt
popa
adc
lahf
imul
push
jg
lcall
jmp
loope
inc
jecxz
pop
push
jae
call
pop
dec
cmpsb
jno
int3
sahf
mov
sub
fnstcw
push
xor
sbb
loope
jae
xor
shl
insb
sbb
aam
push
das
inc
pop
lret
sub
pop
cwtl
push
lock
test
jle
adc
mov
std
addr16
xchg
pop
les
ljmp
stc
add
add
mov
lods
loop
shlb
rorb
mov
cmp
arpl
cmp
aam
dec
sbb
mov
xchg
outsl
stos
xchg
or
jb
add
dec
out
xor
out
push
cld
add
or
adc
insb
xchg
aam
inc
ja
ss
and
xlat
movsb
pop
pop
les
dec
loope
jecxz
mov
aaa
mov
into
es
sbb
sbbb
adc
imul
mov
mov
cmp
fldcw
clc
and
rcr
inc
cmp
out
push
xchg
xor
add
loope
sub
shr
nop
mov
out
push
aam
insb
in
loopne
cli
add
and
jmp
mov
adc
es
fcmovnu
pop
mov
sbb
adc
fwait
jne
gs
or
call
sub
cmp
adc
aas
in
ds
sbb
add
out
or
push
add
bound
sub
xchg
lahf
xchg
subl
daa
xor
xchg
sub
out
dec
cmpsb
cmpsl
out
mov
push
add
jnp
push
add
adc
sub
xchg
xchg
jns
jo
shrb
push
jmp
cmp
cmp
into
roll
test
cmp
pop
xor
orb
inc
imul
popf
dec
xchg
dec
fxch
pop
out
fisttpl
stc
outsl
mov
lea
xchg
shlb
std
push
inc
lret
sbb
xchg
sub
push
and
dec
dec
jecxz
and
popa
and
jbe
insb
sub
dec
fists
adc
mov
js
int3
mov
inc
lcall
fdivs
shll
repnz
sbb
add
lahf
fcom
hlt
mov
mov
or
sbb
push
cmp
lods
loop
push
cmpsl
add
jge
mov
xchg
xchg
clc
repnz
xlat
dec
repz
jo
or
jecxz
xorl
movsb
mov
jae
ret
scas
cwtl
fcoml
cld
pop
sub
dec
xchg
cmp
stos
int3
mov
mov
jb
rcrl
lods
push
fidivrl
mov
repz
fnstenv
je
inc
cmp
mov
push
mov
mov
ffree
or
dec
mov
mov
mov
sbb
sub
lcall
andl
xor
mov
loopne
sbb
adc
popf
es
sub
sub
jno
fdivs
dec
mov
sahf
fildl
mov
aam
push
add
dec
sbb
xchg
push
xor
in
mov
fldt
pop
mov
push
add
push
cld
mov
popf
mov
leave
faddp
push
inc
ret
into
sbb
fnstcw
dec
lret
aas
dec
inc
sub
add
add
fsubrs
inc
lods
loope
out
rolb
add
shlb
xchg
in
add
push
xchg
cwtl
cmp
xor
mov
xchg
fs
aam
cli
lods
fistl
ds
shll
add
lock
jp
mov
movsb
add
xchg
cs
push
outsl
push
mull
mov
pop
add
inc
lret
addr16
and
mov
push
stos
test
aaa
faddl
je
jl
mov
ret
test
fcmovne
xchg
lea
outsb
repnz
and
mov
mov
in
cmc
mov
je
scas
fidivrl
loope
add
mov
stc
adc
sub
rclb
addl
fldenv
insb
push
es
stos
inc
add
test
ja
mov
jmp
fwait
xchg
mov
pushf
out
les
sub
sbb
jl
mov
xchg
cmp
outsb
xor
movsb
push
rcrb
clc
adc
push
imul
lret
cmpsb
dec
sbb
fstpt
jo
add
sub
adc
add
add
add
addr16
fstpl
cltd
mov
jle
movsb
xchg
lret
je
sub
jns
jnp
ja
popf
ss
imul
mov
daa
push
fldenv
lock
imul
adc
mov
xchg
outsb
fbstp
sub
das
pop
pop
out
aas
sbb
lods
or
popf
jo
sub
leave
pushl
mov
enter
je
sbb
mov
fstps
clc
sub
pop
xor
mov
pmaxsw
push
cmpsl
mov
inc
inc
jecxz
mov
iret
loope
and
jbe
sub
jp
sub
in
imul
mov
xor
in
push
push
mov
dec
fs
fwait
adcb
cmp
inc
or
lods
pop
mov
testl
lea
in
adc
cmpsl
ret
fildl
gs
adc
test
pop
add
mov
lahf
jb
out
sub
lahf
mov
xchg
dec
add
xchg
flds
out
push
insl
push
lods
mov
add
jl
fnsave
je
shl
sub
push
stc
pop
imul
ret
xchg
sub
cmp
mov
sub
repnz
sub
xchg
and
adc
push
outsb
xor
add
push
lahf
or
jb
push
lret
int3
mov
xchg
popf
push
imul
xchg
pop
mov
ret
add
push
adc
pop
xor
xchg
push
xor
mov
lock
sub
mov
inc
sbb
fsub
bound
cmc
stos
ficoml
push
mov
lahf
jl
pop
ds
add
inc
fnsave
xchg
mov
in
inc
xor
or
aas
mov
testl
pop
mov
test
sbb
fnstsw
rcrl
pop
inc
lods
sbb
aas
jle
adc
push
mov
shr
push
push
test
mov
ret
cmpsl
test
adc
mov
shlb
xchg
sub
xchg
stos
cs
jge
int3
push
data16
mov
jo
cmpsb
stos
pop
jecxz
hlt
sti
insb
sub
test
aad
mov
outsl
add
and
jmp
jp
bnd
ds
sbb
mov
inc
imul
fisubs
call
add
push
popa
xchg
shrl
or
popa
dec
xor
sub
loop
sbb
sbb
pop
cmpl
inc
add
mov
dec
dec
js
int3
cmp
scas
cmpsl
cltd
lret
push
ds
into
mov
adc
and
jb
dec
mov
jmp
cmp
sub
cmp
dec
xor
testl
push
push
leave
push
xor
dec
mov
outsl
call
mov
jo
arpl
xlat
mov
inc
jo
pop
push
adc
or
and
xchg
jb
xor
adc
std
add
pop
int
aas
movsl
add
jae
movsb
arpl
dec
rcr
adc
xlat
lret
es
cmp
inc
xchg
or
or
addb
rol
cmp
push
add
sub
sti
test
punpcklwd
xor
xchg
jnp
push
sbb
and
xchg
jno
or
adc
in
pop
divb
mov
xor
rcll
adc
je
pushf
adc
jmp
mov
imul
and
into
mov
sbb
sbb
jbe
sub
jns
adc
repz
pop
sub
push
mov
push
mov
push
mov
push
cmc
test
pop
mov
jp
xchg
fidivl
ss
aas
fimull
xor
push
and
bound
jbe
cmpsb
xchg
fwait
cltd
and
jns
aam
pop
dec
dec
mov
push
fcomp
push
and
sbb
popf
mov
scas
out
jno
outsb
inc
inc
and
stos
dec
dec
sbb
dec
es
out
dec
pop
fisubl
arpl
sbb
mov
jg
adc
fistps
mov
sahf
xchg
out
sti
notl
inc
push
ds
arpl
mov
inc
inc
xchg
ljmp
in
lea
mov
stc
mov
aad
mov
pusha
and
lock
cli
rcl
push
pop
in
mov
xchg
push
mov
and
pop
mov
xor
xor
ret
xchg
adcl
movsb
mov
mov
and
push
add
and
mov
adc
jnp
sbb
loopne
test
mov
push
mov
push
out
mov
sub
ret
idiv
cmp
mov
jmp
xchg
adc
jae
jmp
ss
lea
rorb
repz
out
lret
lea
shll
addr16
dec
scas
pop
sbb
inc
lods
sbb
insl
aas
dec
mov
lea
jmp
jno
push
in
fisubrs
jb
daa
mov
popa
mov
movsb
sub
jp
call
jmp
sub
data16
xor
scas
mov
dec
mov
int3
xor
imul
push
jmp
mov
dec
hlt
rcrl
in
int3
je
xorl
rorl
imul
jl
fiadds
mov
adc
inc
stc
pusha
push
cmpsb
xor
cmpb
inc
mov
movsl
pop
xchg
js
mov
rorb
mov
lcall
xchg
adc
pop
aad
xor
fistps
negl
jle
ret
mov
mov
clc
scas
fwait
ss
inc
aam
sub
cmp
mov
lcall
aaa
jae
and
dec
xadd
in
mov
pop
cli
rcrl
cmp
jle
push
daa
cmp
mov
outsl
xor
lods
dec
aam
sub
inc
imull
inc
xchg
add
adc
xchg
rolb
ror
push
cmp
lock
push
test
push
push
dec
or
push
mov
mov
scas
xor
cli
mov
xchg
call
pop
testb
cmpsl
cmc
pusha
sarl
sbb
dec
fildll
out
inc
loope
and
shr
in
or
xor
add
push
or
std
ret
fmuls
stos
sbb
sbb
xchg
jns
and
js
sub
xchg
inc
cmp
inc
in
ret
pusha
adc
pop
dec
inc
andl
xchg
pop
inc
xchg
daa
mov
dec
mov
inc
sbb
sbb
push
jg
js,pt
sbb
cmp
aaa
es
cmp
scas
or
push
or
add
cmc
push
loope
nop
sti
adc
cli
jl
test
daa
insl
cltd
xchg
fwait
movsb
lcall
push
int
or
lahf
lods
adc
adc
pusha
add
cmp
or
xor
mov
loope
insb
dec
adc
cmp
aas
xor
andl
in
rorl
push
pop
and
xor
xor
or
lret
rcrb
and
mov
mov
popf
sub
outsb
cs
ljmp
push
ljmp
mov
aad
stos
jbe
stos
push
push
sub
movsb
cmp
mov
inc
or
xchg
mov
out
jo
sbb
scas
ds
ds
shl
push
enter
cwtl
sbb
out
xor
adc
pushf
jbe
mov
movl
jae
out
aaa
mov
imul
imul
sbb
mov
scas
xor
cmpsb
scas
push
jge
pop
out
outsl
pop
mov
test
nop
xorb
lods
mov
cs
jbe
sbb
pushf
cmp
repnz
sub
sbb
in
inc
jge
inc
lahf
bound
gs
xlat
shl
arpl
out
lods
xchg
std
sbb
xor
stc
lods
xor
pusha
xchg
enter
pushf
push
or
dec
pop
mov
push
mov
cmpsl
mov
outsb
push
xchg
loop
in
pusha
jecxz
cmp
mov
pop
in
xchg
sub
es
lock
cmp
sbb
mov
scas
stos
lods
sbb
daa
in
jg
sub
mov
scas
lcall
rcll
inc
push
pop
lret
jnp
jmp
movsb
ja
aaa
jo
jmp
aaa
leave
scas
sbb
fisubl
and
lahf
mov
fucomp
cmpsl
push
stc
inc
rcll
cmp
or
xor
outsb
pop
jge
cmp
xchg
mov
pop
pushf
rcrb
mov
fldt
xor
fisubrs
fildl
icebp
lea
inc
or
pop
fsubl
adc
ljmp
and
insl
jg
push
lcall
mov
in
hlt
movsb
sbb
cmpsl
dec
sub
lahf
int
adc
inc
sub
clc
pop
cld
and
pop
xchg
das
lods
iretw
xor
in
cmp
ret
cltd
lea
fidivl
push
lahf
jbe
jno
pop
sub
add
mov
inc
aad
sahf
sub
or
sbb
cli
xchg
mov
movsl
pop
nop
and
std
clc
adc
fs
push
aad
or
repnz
push
mov
mov
mov
cmp
ljmp
or
lcall
pushf
int
or
pop
test
dec
scas
pop
ljmp
loopne
int3
stos
jnp
out
ljmp
shrb
xor
pop
cltd
leave
pop
dec
loop
mov
sub
ljmp
outsb
shll
lahf
push
sbb
ds
sub
enter
lea
rcr
test
sahf
jbe
push
mov
out
adc
sbb
in
mov
jns
mov
xchg
jbe
test
xchg
jne
test
push
cs
xchg
lcall
bound
xchg
repz
scas
cli
stos
dec
lock
fdivrs
ret
and
call
adc
fs
insb
in
popl
jnp
or
imul
xor
fmull
xchg
test
push
jne
pop
xor
fnstcw
or
in
lcall
mov
mov
mov
pop
rclb
pop
imul
adc
and
call
adc
sbb
inc
out
lret
adc
sti
mov
and
lahf
ljmp
into
lods
lea
mov
xorl
push
mov
test
mov
and
and
xor
mov
lock
int3
mov
in
das
xor
je
aas
in
ljmp
test
and
inc
outsb
dec
xchg
inc
pop
mov
inc
and
pop
in
pop
pop
mov
pop
xlat
insb
hlt
jl
adc
cmpsl
sub
cli
cli
stc
enter
pop
popa
stos
data16
cmpsl
push
pop
or
add
rcl
sarb
mov
lea
cld
mov
inc
xor
data16
xor
mov
flds
mov
cs
fdivrl
in
xchg
jp
and
xor
xchg
scas
fsts
push
dec
ja
ds
push
stos
pushf
es
pop
or
inc
cmp
rcll
es
add
test
out
push
test
xor
dec
ret
push
enter
dec
sub
or
loop
test
rcr
add
iret
idiv
mov
mov
pop
sub
xchg
dec
lcall
movsl
ret
fs
in
xor
mov
popf
imul
insb
lcall
rcr
pushf
fnstcw
data16
cmp
in
rolb
mov
adc
mov
subl
sti
push
ds
inc
insl
or
inc
cmpsb
sub
xchg
inc
fld
xchg
movsl
shrl
pop
xchg
ds
pop
xchg
push
or
insb
pusha
shll
lock
adc
inc
outsl
adc
sti
dec
and
jle
sub
data16
lahf
jae
out
inc
sub
cmp
mov
and
push
pusha
pop
shll
into
into
cmpsb
movsl
bound
cwtl
mov
or
adc
add
and
mov
and
imul
andb
pop
popa
cmp
dec
and
inc
nop
lock
mov
ret
cmp
cwtl
xor
xchg
cltd
insb
jmp
adc
scas
fwait
iret
out
xor
push
xchg
mov
js
pop
rorb
sub
insb
inc
dec
sti
fbld
dec
jbe
leave
pop
cmp
adc
flds
pop
in
cmpsl
ja
out
repnz
cwtl
and
lds
cmp
nop
idivl
sbb
loop
sub
inc
mov
mov
lock
bound
xchg
aam
ljmp
push
aam
pop
pop
fldl
xchg
stos
and
cmp
test
rcll
push
lcall
dec
jb
fwait
imul
sub
stos
or
jmp
in
pop
fs
mov
pop
sub
faddp
push
rcrb
mov
imul
cmpsl
cmp
mov
aaa
add
les
pushf
mov
stos
scas
ja
dec
jno
mov
jg
inc
daa
mov
pushf
mov
pop
dec
in
adc
mov
jb
daa
lret
loope
shr
xchg
lahf
mov
jmp
shlb
pop
pop
dec
jo
mov
mov
jp
adc
hlt
mov
sub
icebp
movlps
cmp
add
in
scas
ljmp
mov
insl
mov
es
stc
movsl
pop
scas
aas
hlt
aad
inc
sbb
daa
sbb
outsb
into
dec
pusha
xor
pop
pop
sub
cltd
mov
pusha
mov
xor
inc
jae
cmp
pop
ljmp
adc
xor
cmp
adc
push
cmp
std
xor
out
bound
gs
adc
push
or
push
pop
divb
aaa
push
pop
lahf
cmp
leave
push
lahf
xchg
icebp
fs
les
jl
xchg
ret
sahf
out
out
jae
rolb
aas
and
jg
add
mov
fnstcw
push
cmpsl
and
les
push
imulb
cld
sahf
or
clc
xchg
test
pop
mov
imul
sarl
jl
mov
ljmp
xlat
sti
push
mov
xchg
push
xchg
adc
inc
sti
pop
shrb
push
gs
aad
shr
int
test
lock
adc
stc
mov
push
test
jge
sbb
pop
adc
lods
loop
pop
dec
sub
xchg
cltd
dec
ret
lods
movsl
aaa
ljmp
cld
outsb
clc
int
daa
loop
add
and
jecxz
lret
cmp
mov
sub
into
pop
sbb
jp
pop
xchg
shlb
cmpsb
rcrb
or
xor
xchg
mov
outsl
and
out
sarl
adc
jp
jl
pop
out
sahf
movsb
add
fsubl
adcb
ss
push
jge
cld
ret
xchg
mov
shll
add
push
stc
mov
fstpl
repz
leave
push
mov
cmp
mov
in
cs
mov
add
adc
mov
push
xchg
test
inc
adc
add
adc
pop
or
adc
int3
popf
stos
cmpl
sbb
jns
iret
jnp
subl
and
mov
test
in
sahf
cwtl
test
loopne
xor
hlt
push
jl
mov
negl
jl
xor
arpl
pop
inc
out
fsubp
push
int
cmpsb
adc
aaa
sub
lea
enter
mov
ss
orb
stc
mov
rcr
adc
ret
movsl
shrb
inc
es
insl
push
in
pusha
jmp
adcb
cmp
sub
mov
push
stc
shrl
lcall
xor
sub
inc
pop
inc
jge
ss
mov
dec
lods
jmp
xor
test
sbb
and
mov
cld
cmpsl
adc
decb
lret
mov
sbb
mov
mov
xor
enter
mov
sbb
mov
dec
adc
mov
jne
mov
test
pop
xchg
adc
aad
cmpsb
mov
push
jo
mov
jge
jge
jmp
imul
mov
push
loopne
data16
aas
hlt
dec
sub
daa
inc
mov
push
sahf
or
jae
sub
jae
sub
imul
and
mov
shlb
adc
inc
rorl
movsl
mov
addb
sub
xchg
or
jb
push
push
fldl
leave
add
or
ret
arpl
lcall
adcl
repnz
ror
cmpsl
adc
jbe
test
in
push
add
imul
jns
fdivl
jg
cmp
scas
sub
mov
outsb
push
js
xchg
cmp
cmp
movsl
lea
call
repnz
mov
ljmp
cwtl
pop
or
jge
cmp
faddl
lods
and
flds
jo
in
lret
sub
movsb
int3
mov
push
imul
fnsave
clc
xor
movsl
out
xchg
lahf
pusha
mov
js
rorl
lahf
xor
into
inc
jb
xchg
std
arpl
clc
pop
es
push
popf
lret
jne
lock
aas
mov
mov
cmp
pop
arpl
imul
in
imul
int3
nop
inc
fwait
loope
push
subb
ret
push
mov
out
sti
leave
push
mov
xchg
cmpsl
daa
popf
out
sbb
pop
imul
mov
mov
mov
cmp
cmc
sbb
adc
xchg
jl
xor
mov
aas
popf
xorb
xchg
lods
cmpsb
scas
in
sbb
push
or
iret
in
and
and
inc
subl
jno
pop
pop
mov
ljmpw
outsb
in
dec
push
push
dec
cmp
loopne
aaa
adc
jmp
inc
mov
decb
and
fidivrl
mov
int
and
xchg
arpl
daa
xchg
mov
mov
cmp
xor
push
inc
xchg
xor
sub
xor
sub
aaa
mov
push
ljmp
mov
inc
cli
inc
or
fs
jmp
out
mov
cmp
ret
rorl
insb
ja
mov
je
add
ret
imul
aaa
push
ret
out
xor
push
rcrl
repz
rorb
movsl
and
cld
inc
mov
loopne
das
enter
pop
fdiv
subb
pop
scas
and
cs
mov
xchg
loopne
mov
jl
pushf
les
sub
ret
cltd
fisubs
xor
adc
xchg
das
movsb
or
unpcklps
sbb
ficompl
inc
mov
bound
mov
mov
inc
fs
mov
fs
add
cmp
add
and
into
dec
jmp
mov
jmp
mov
cmpsl
pop
mov
mov
ljmp
faddl
dec
add
inc
add
adc
push
notb
sbb
leave
jmp
fisttpll
sbb
cmp
sub
pop
shrl
lret
push
mov
fidivs
xchg
push
imul
into
leave
addr16
cmpsb
int3
pop
xchg
inc
stc
jae
stos
pusha
neg
scas
jns
idiv
fcomps
xchg
xchg
lahf
std
out
sub
jne
inc
or
xchg
pusha
xor
sub
xchg
iret
test
daa
bound
adc
daa
pushw
xchg
out
jns
ret
addr16
dec
cmp
in
hlt
xorl
jns
loopne
outsl
xchg
mov
repz
mov
sbb
aad
cs
loop
sbb
aaa
daa
into
push
add
or
add
cwtl
test
pop
es
mov
mov
adc
cld
inc
mov
lock
inc
addb
adc
sbb
mov
stc
xchg
mov
data16
dec
pusha
sub
popl
dec
int3
adc
mov
adc
ret
lods
adc
mov
lea
loop
ljmp
push
xor
loope
ljmp
sub
idivb
pop
cmp
adc
insl
xor
cmpsb
sti
scas
add
jmp
mov
sarb
lods
insl
pop
shl
iret
ret
mov
sub
ljmp
test
mov
xchg
mov
nop
or
add
or
fs
pop
mov
or
inc
jns
dec
cmp
fwait
mov
jg
jnp
xchg
push
sub
out
hlt
xchg
adc
in
lea
cmpsb
inc
aam
imul
pop
dec
out
and
and
or
icebp
rcll
jle
fimull
mov
aam
or
pop
pop
adc
adc
xchg
jecxz
jnp
sarl
sbb
mov
in
aam
jmp
adc
sub
mov
in
fwait
popf
and
in
or
mov
push
mov
shrl
test
cmp
fists
repz
fidivs
dec
repnz
inc
mov
pop
stos
add
cmp
hlt
jbe
push
mov
out
sbb
das
mov
int3
or
inc
stc
rclb
sub
jae
cs
rcrl
mov
mov
outsb
sbb
cmp
pop
mov
xor
cmp
in
popf
test
pop
loope
sub
pop
mov
test
add
push
aaa
cmpsb
mov
fmul
jb
inc
mov
xor
xor
jp
jae
int
jg
xor
addr16
mov
push
jb
out
inc
sbb
in
xor
push
je
fs
adc
push
shlb
stos
push
mov
out
cmp
push
ret
mov
fistpll
pop
xor
push
adc
add
shlb
std
push
lods
jnp
cwtl
stos
ret
or
rclb
adc
push
into
or
mov
insb
lcall
inc
lds
dec
cmc
in
dec
mov
fistps
lds
mov
ds
pop
repz
outsb
jge
adc
test
aas
inc
es
mov
shll
mov
jo
imul
outsl
inc
enter
mov
push
inc
lds
push
pop
pop
pop
adc
pop
ja
pop
push
or
jbe
fnstsw
aam
inc
inc
cmp
jbe
sbb
rcr
out
pop
lods
pop
inc
push
outsl
and
cmp
mov
fwait
ret
iret
add
aad
dec
es
cwtl
test
stos
jle
test
xor
inc
fiadds
cmc
ds
add
xor
std
xchg
jl
adcl
xchg
and
xchg
add
cs
hlt
div
loop
sti
pop
dec
jne
andb
and
add
pop
sti
ja
les
dec
jmp
xchg
push
test
ret
pop
dec
add
jp
adc
leave
js
jg
inc
mov
mov
cmpsl
in
and
addr16
in
fiaddl
xor
test
rorb
mov
pop
pop
arpl
stc
out
push
rolb
cltd
fs
cmp
sbb
sbb
push
pop
and
xchg
push
dec
leave
add
sahf
xor
xchg
stos
out
gs
lahf
mov
mov
and
mov
jnp
sub
push
push
adc
jb
in
pop
or
inc
cs
jp
arpl
add
movsb
jnp
call
sub
sti
iret
cs
dec
rcrb
mov
mov
sbb
push
push
lret
or
jb
pop
dec
stc
push
jb
es
adc
dec
movsl
dec
imul
rcrl
outsb
add
orb
loopne
shrb
or
inc
test
mov
dec
dec
sbb
mul
scas
js
fldl
mov
mov
xor
divl
sbb
imul
cmc
pop
ds
push
sub
les
pusha
push
ja
jmp
in
repnz
bound
push
push
stos
fst
cmp
test
xchg
int
dec
mov
xlat
add
mov
xchg
mov
mov
cmp
in
sti
jl
cs
dec
add
inc
daa
sbb
test
mov
shll
or
inc
adc
nop
sub
bndldx
jnp
xchg
jae
cmp
xchg
mov
sbb
jecxz
pop
mov
lret
inc
push
adc
je
mov
shrb
adc
mov
mov
cltd
bound
inc
and
mov
dec
das
jg
sti
xchg
lahf
les
lahf
int
mov
push
mov
stc
sbb
xor
and
cmc
fcoml
stos
inc
ss
popa
sbb
push
add
das
aaa
fcmove
insl
je
cmp
outsl
loopne
loop
dec
adc
push
lret
fidivl
aaa
rcrb
adc
and
push
int3
dec
lea
adc
cmp
jo
mov
and
push
ss
add
enter
mov
mov
pop
cltd
pop
out
inc
rorb
sti
mull
sbb
pusha
pop
ret
push
xlat
pushf
adc
stc
aaa
inc
sbb
pop
repz
jnp
imul
add
outsb
cmovbe
sbb
loopne
fists
loope
rorl
test
out
jo
jp
mov
shrb
xlat
pop
stos
mov
out
scas
inc
sbb
lret
xchg
mov
jae,pn
int3
xchg
aad
inc
loop
jg
cli
ret
mov
loopne
sbb
push
lret
inc
jbe
lods
imul
loopne
orl
idivb
xor
sub
push
aad
xchg
aad
fimuls
insl
dec
mov
pop
cmpsb
and
xor
pop
cld
mov
in
sub
ljmp
int3
addr16
xorb
jecxz
xor
add
cmpsb
nop
jae
mov
jbe
ja
fwait
shrb
aam
pop
out
bound
jle
push
push
sahf
push
push
pop
ss
inc
fsubs
add
mov
sbb
fs
sbb
mov
mov
rcrl
xlat
jmp
sahf
sbb
scas
push
or
pop
add
inc
pop
sub
jno
insb
insl
pop
sbb
sbbb
stos
add
ds
lds
bound
cli
xor
sub
lods
lret
jb
add
pop
arpl
daa
jmp
popa
dec
mov
or
cmpsb
mov
mov
icebp
inc
xchg
mov
and
dec
call
jmp
add
test
sahf
loope
fiadds
js
or
in
or
mov
sbb
xor
aad
cltd
sbb
mov
int
bound
les
pop
and
pop
movsb
shrl
dec
out
divb
addr16
loop
vcvtdq2ps
les
push
push
pop
sub
aas
cmpsb
xchg
jg
jae
mov
and
xchg
loope
sbb
pop
insb
inc
dec
pop
pop
sbb
xor
in
pusha
jp
insl
ret
fdivs
inc
and
cmc
add
loope
xchg
outsl
shrb
fnsave
shll
add
or
adc
xor
sub
add
pop
xchg
sbb
add
int3
or
outsl
add
mov
xchg
jnp
cltd
cltd
mov
int
in
pop
xor
mov
cmpsl
xchg
xchg
icebp
adc
ljmp
add
in
xor
mov
cmp
push
les
mov
xor
nop
xchg
sti
rcrl
fcomi
mov
out
pop
aas
xchg
inc
push
mov
shrb
sub
push
inc
int
dec
xor
mov
or
ds
xchg
hlt
mov
dec
inc
adc
cld
inc
test
scas
icebp
xchg
std
cmpsl
jle
fisttps
mov
jne
mov
ret
mov
cmc
aad
mov
pop
popf
outsl
lahf
ss
sub
jp
call
cmp
out
rcr
or
xorl
inc
push
cmc
push
or
add
stos
jnp
jle
or
pop
js
push
add
pop
mov
jb
sti
pop
fs
or
test
insb
add
mov
enter
loopne
jns
mov
inc
aas
decl
lds
hlt
cmp
out
sub
lret
inc
mov
icebp
mov
test
or
insb
mov
xchg
dec
inc
add
push
sarl
push
lret
cmpsl
cmp
cli
iret
add
stos
adc
cmp
repnz
sti
pop
cmpsl
push
fstpt
fidivs
and
adc
aas
jae
int3
xor
jae
sub
add
iret
mov
dec
push
clc
fwait
loopne
jno
fimull
add
sub
inc
outsl
pop
popf
ja
arpl
push
stos
popf
cmpsb
cmp
jo,pn
push
test
push
jecxz
imul
or
aaa
test
cltd
out
or
mov
pop
cmp
movsl
outsb
inc
test
ret
push
flds
aaa
mov
cli
jl
popa
and
lea
sbb
rolb
cmp
add
pop
add
test
mov
sub
sti
xor
xor
xchg
adc
xchg
push
xor
mov
xorl
sbb
push
repz
popf
push
mov
mov
lret
xor
inc
sbb
cld
enter
cmp
es
ja
aas
xchg
add
aas
imul
jae
test
and
shl
jecxz
out
cmc
inc
aas
add
sub
sub
es
loop
arpl
push
movsb
push
imul
roll
iret
mov
jns
pop
sub
sub
repnz
jns
add
pop
cmp
andl
sbb
repz
mov
inc
es
inc
sbb
sbb
ljmp
filds
les
mov
mov
push
xor
mov
bound
sub
lds
jb
cmp
mov
pop
push
lret
add
in
sub
arpl
jnp
scas
mov
mov
test
fadd
fisubrl
aam
cmc
in
cmc
aad
xlat
dec
popa
xchg
jl
xchg
popf
mov
xorb
xor
inc
sub
jle
std
sarb
shr
addr16
idivl
dec
ja
or
out
loop
pop
dec
insb
sub
sbb
xchg
push
addr16
rolb
data16
mov
pop
jae
dec
mov
jecxz
mov
in
cmp
and
and
je
push
not
pusha
popf
mov
aas
test
scas
mov
sub
pop
or
popa
in
push
aad
add
mov
imul
jmp
les
fwait
sbb
nop
cmc
dec
and
or
dec
jp
dec
mov
mov
jmp
mov
lar
push
or
inc
cmp
cli
jg
jle
add
movsl
xchg
pop
pop
scas
pop
xchg
test
adc
sahf
push
fs
inc
dec
loope
fidivrl
add
mov
mov
inc
repnz
push
fwait
adc
loop,pt
outsb
sti
insb
mov
push
bound
dec
adc
pushf
cli
sub
std
lcall
pop
adc
or
lcall
test
and
mov
xor
in
add
es
hlt
cmpsl
lahf
fisubl
sub
xchg
adc
js
fisubs
pop
lea
push
mov
jl
adc
sbb
push
push
addr16
js
movsl
mov
push
mov
test
hlt
mov
icebp
pop
aaa
call
cmp
inc
imul
aad
dec
cmp
inc
shl
ds
outsb
movsl
test
or
out
add
leave
andb
inc
outsb
sub
imul
push
cmp
adc
cmpsl
push
aas
outsl
das
outsb
or
out
cmc
push
sub
fcomi
cld
fidivrl
mov
test
leave
sarl
lret
psllw
icebp
dec
iret
mov
xorl
pop
mov
fisttpll
mov
inc
scas
aaa
fst
pop
adc
sub
enter
bound
sar
xor
or
lea
mov
pop
out
loopne
pushf
pop
out
enter
test
mov
outsl
inc
xor
ret
sub
lea
lea
or
sbb
inc
jne
mov
and
or
loop
scas
pop
sub
ret
movsl
in
inc
orl
lcall
adc
xchg
jae
outsb
and
imul
push
adc
mov
xchg
ds
dec
iret
rorb
mov
ret
dec
or
std
popa
lock
mov
adc
mov
into
xlat
sbb
es
mov
das
test
leave
pop
lcall
or
cmp
sub
test
inc
std
repnz
ljmp
mov
imul
xchg
daa
movsb
insb
inc
imul
push
mov
add
jno
xchg
loop
test
in
das
cmc
mov
mov
sub
pusha
imul
mov
aaa
jns
cmpsb
in
lea
lret
nop
ret
mov
pop
lds
push
loop
rorl
sub
bound
and
out
dec
loopne
push
ret
scas
jns
fdivp
in
mov
pushf
js
mov
repnz
mov
sub
gs
push
sahf
adc
add
mov
jnp
sbb
push
or
cmpsl
inc
or
aaa
lret
xchg
jge
pop
mov
push
cld
fdivl
inc
aam
cmpsl
jo
mov
cwtl
mov
cmp
pop
icebp
cmp
push
push
loopne
jbe
movsb
push
jno
out
mov
pop
daa
pmaddwd
lods
and
or
dec
test
push
push
out
clc
lods
ret
fisubl
pop
mov
sbb
mov
mov
xchg
repnz
aad
hlt
insb
jne
jmp
jbe
insb
loop
out
cmc
pop
popa
xor
sub
mov
adc
jg
push
ret
out
arpl
int3
stos
mov
push
imul
icebp
test
sbbb
push
incb
xor
idivl
sbb
inc
in
push
movsl
lds
xor
popf
push
inc
sub
dec
dec
lock
mov
das
xchg
mov
push
fisttpll
push
test
pop
xchg
jbe
gs
mov
iret
mov
inc
and
fst
adc
mov
or
lods
outsb
mov
scas
push
sbb
daa
faddl
sub
or
movb
sbbl
int
add
sbb
jb
xchg
adc
int3
jo
dec
xor
aas
push
cmp
sub
fcmove
aaa
or
ss
push
mov
jne
pop
mov
cmp
mov
add
outsb
imull
stos
fstps
push
jl
mov
jns
push
cmp
add
imul
sbb
xchg
cmpsb
test
push
add
std
arpl
into
stc
pop
mov
xor
pop
sbb
xor
push
rorb
adc
loope
in
cltd
movsl
rcrl
movsl
fidivl
dec
pop
test
lea
and
movsl
iret
ljmp
sbb
shll
push
dec
ret
pusha
xchg
jne
ret
mov
jge
add
pop
icebp
jmp
pushf
push
rcrb
fsubrl
icebp
bound
sub
pop
mov
addr16
mov
sahf
rorl
mov
fstl
fmuls
add
pop
rol
and
fldenv
movsl
sbb
jae
fmuls
lds
jnp
lahf
adc
push
jae
pop
jno
pop
scas
push
sarl
popa
mov
jle
jns
jns
jp
jnp
inc
inc
icebp
jge
cmpsl
push
fcomi
xchg
pop
leave
stos
push
movsl
shrb
push
push
mov
push
je
addr16
dec
inc
lods
fstpl
pop
pop
inc
mov
movsl
arpl
sub
stos
dec
xor
lret
mov
loope
pop
repnz
cli
ret
fimull
xor
push
sbb
aaa
addr16
jno
push
popf
add
adc
adc
hlt
sbb
and
bound
mov
pop
js
aam
sub
nop
dec
inc
mul
aad
jae
add
outsb
mov
outsl
jl
jl
mov
jmp
xchg
sub
mov
xor
insl
inc
jnp
dec
mov
hlt
inc
stos
in
xchg
out
adc
dec
mov
dec
jb
dec
movsl
sbb
mov
pop
dec
cli
test
nop
test
repz
dec
and
or
fistpl
pop
dec
shll
inc
test
in
cmp
push
add
lods
bound
mov
daa
sbb
dec
mov
xchg
mov
out
movsb
push
inc
pop
pop
subb
or
aad
lcall
fdivr
mov
mov
icebp
icebp
jns
ja
jnp
fucom
in
and
add
sub
pop
and
inc
sbb
fdivrs
xor
mov
jo
mov
xor
cmc
mov
ja
xchg
jl
adc
jle
dec
adc
xchg
mov
js
xor
cltd
insb
fistpll
mov
outsl
or
push
fsubl
fstl
pop
cmc
in
mov
in
mov
pusha
dec
cmp
mov
cmp
mov
hlt
dec
ret
pop
cmp
ds
fwait
imul
loop
adc
insb
js
mov
rcr
xchg
imul
cltd
push
mov
add
popa
fnsave
add
ficoms
ja
iret
aam
cmp
es
aam
sbb
or
mov
fidivrl
jle
pushf
push
test
mov
jnp
repz
push
push
push
inc
sti
inc
scas
imul
icebp
cmp
sbb
into
xor
stos
fwait
in
lcall
gs
jmp
xchg
inc
adc
push
ret
and
fidivl
cltd
push
dec
arpl
adc
paddw
jns
rcrl
lock
mull
jl
iret
sbb
je
in
add
sti
lock
je
jbe
icebp
movsb
mov
dec
cs
mov
movsb
mov
movsl
inc
lret
mov
dec
lahf
mov
inc
popf
out
sbb
fdivrl
jno
inc
jl
fwait
lahf
dec
inc
nop
sahf
cs
sbb
lds
fistps
jne
call
mov
push
data16
imulb
push
ja
ljmp
dec
repnz
inc
mov
sub
cmp
pop
pop
inc
dec
rcll
test
mov
pop
or
sub
mov
cmpsb
test
sahf
push
dec
inc
mov
jno
mov
cltd
subl
jg
push
push
fs
test
pop
xor
lahf
pop
ret
and
adc
cmp
imul
jns
outsb
je
shll
sti
xor
mov
in
pop
test
push
mov
push
adc
xchg
cmc
movsb
mov
jns
nop
imul
sub
xor
sbb
iret
push
fwait
rcrl
mov
enter
and
fistl
jmp
push
cmp
scas
in
mov
mov
xor
xor
xchg
mov
aaa
in
mov
jg
push
ljmp
icebp
test
lcall
push
out
jp
rorl
mov
push
js
lock
add
rcr
or
mov
lahf
inc
lahf
and
cmp
in
add
out
inc
fs
daa
ds
mov
push
dec
mov
adc
cmpl
xlat
hlt
into
jg
cmp
fisubrs
inc
lcall
dec
xchg
xor
xchg
aam
push
cmp
cmp
xchg
arpl
popa
xchg
add
cmp
or
ljmp
cmp
sbb
add
rolb
aad
lods
mov
fwait
add
jne
mov
mov
xlat
loope
stc
filds
pop
sti
sbb
insl
add
cmp
pop
fildll
lea
xchg
jmp
out
push
and
inc
lds
testb
popf
pop
aad
mov
leave
in
out
roll
xchg
sub
cwtl
xor
or
inc
filds
and
jae
out
xlat
sbb
or
test
pop
mov
roll
mov
push
int3
imull
test
cmp
push
fcomip
dec
cmc
es
repnz
fsubrl
dec
lret
nop
sub
adc
gs
imulb
xchg
mov
push
repnz
xor
mov
push
enter
pop
xlat
push
mov
mov
sbb
cmp
mov
ljmp
dec
sbb
test
inc
mov
ret
mov
xorl
lds
push
cwtl
mov
or
sbb
mov
int
push
dec
push
imul
stos
pop
arpl
dec
cmp
int3
pushf
cmp
out
cmpb
notb
mov
insb
das
cmp
push
push
inc
mov
pop
pop
or
into
and
and
push
aam
sti
dec
or
mov
sbb
mov
popf
xchg
mov
adcl
iret
aas
test
imul
jle
push
jecxz
in
je
ljmp
out
fcmovb
aas
mov
enter
fstp
imul
add
jle
mov
dec
inc
and
imulb
push
sbb
rorl
mov
push
and
ret
in
adc
mov
ficompl
test
mov
outsb
pop
inc
insl
xchg
push
or
repnz
movsl
fisubrs
pop
and
cmp
inc
cld
rcrb
popf
sahf
inc
xchg
cmp
je
in
add
inc
movb
and
sub
lahf
mov
out
insl
dec
jb
sbb
push
insl
and
xchg
or
in
pop
pop
adc
sbb
dec
int3
sbb
std
imul
pop
cltd
addb
out
inc
push
dec
push
pusha
jo
jecxz
mov
in
mov
cld
shlb
mov
cmp
sub
scas
pusha
test
adc
push
shrb
mov
jns
xchg
sbb
lods
shl
sahf
stos
push
or
shll
test
mov
pop
mov
push
cmp
mov
add
fdiv
jl
dec
sbb
xorl
and
daa
push
fisttps
enter
cli
adc
and
push
mov
xchg
jp,pn
xchg
bound
sbb
and
fisttps
movsl
outsb
xchg
test
mov
rorb
and
dec
jl
push
ds
mov
ss
inc
in
sti
pop
jp
lcall
cmp
data16
outsl
in
pop
push
dec
cmp
movsb
in
sub
into
sahf
imul
mov
push
push
push
jae
sbb
inc
pushf
and
push
mov
mov
loop
mov
mov
lods
das
test
imul
lods
test
dec
push
or
jl
test
sub
mov
mov
ja
xchg
jnp
mov
dec
mov
cmp
jbe
jb
icebp
add
into
mov
mov
adc
std
cld
enter
xor
into
mov
mov
scas
lcall
jge
shlb
ss
clc
mov
popa
into
shlb
rolb
js
mov
aaa
sbb
insb
int
or
out
jp
mov
add
pop
std
and
pop
into
imul
incl
sub
push
push
out
adc
cmp
test
push
push
nop
xor
in
inc
test
loopne
jne,pn
cld
mov
dec
insl
mov
shr
sbb
push
inc
add
mov
cltd
add
jecxz
xchg
xchg
mov
popa
xchg
out
dec
lock
lea
fdiv
jo
into
int3
sbb
xchg
jmp
lahf
push
nop
xchg
cs
add
mov
add
cmc
mov
scas
jo
rclb
out
cmpsl
fcmovnb
call
xchg
les
iret
jle
and
inc
divl
sbb
cmc
dec
aam
adc
xchg
insb
sbb
cmp
jmp
std
add
jns
arpl
pop
xor
call
adc
orb
or
xchg
cmp
test
or
lods
xor
mov
stc
push
xchg
xor
push
cli
adc
mov
and
lds
xchg
mov
insl
shr
inc
out
cmp
rclb
fsubs
dec
push
push
aad
jge
mov
mov
push
sti
adcl
bound
and
push
and
enter
in
stc
mov
push
in
in
pop
dec
cwtl
test
sbb
xor
jmp
ds
mov
jecxz
cmpsb
xchg
aas
lock
dec
xorb
push
or
pop
test
dec
fidivl
dec
pop
shr
xor
or
int
push
test
dec
stos
mov
stos
xchg
idivl
les
into
test
jge
and
mov
dec
jno
mov
cmp
out
js
push
pop
cmp
or
and
test
push
fisubl
inc
popf
cli
adc
fimuls
enter
jecxz
mov
fldt
push
stos
cmp
cld
std
xchg
push
jns
fcmovnb
movsb
cmpsb
mov
inc
lods
nop
outsl
addr16
mov
aad
icebp
arpl
jge
ret
sub
cmp
cwtl
mov
int3
out
mov
cmp
push
ret
jbe
and
test
inc
aaa
sbb
pushf
mov
dec
fldl
sbb
addl
xorl
xor
popa
pop
inc
xor
jmp
add
mov
jno
cmpsl
jo
loop
xor
jbe
negb
and
mov
sar
xchg
in
and
xchg
lret
push
add
fbld
arpl
pop
int
adc
push
mov
pushf
gs
mov
mov
cmpsb
daa
jg
or
or
aam
arpl
sahf
jmp
test
xchg
dec
sub
mov
dec
int
test
push
xchg
pop
adc
jno
jnp
mov
mov
mov
push
call
cmpsl
sahf
mov
xor
inc
inc
cli
dec
sbb
add
or
mov
int
pop
jg
xchg
mov
push
cmpsb
fs
push
jle,pn
dec
aaa
in
jns
mov
xor
or
lcall
cmp
lcall
sub
xchg
stos
movsl
dec
movsl
pop
cmpsb
mov
mov
xor
popf
and
pop
add
rcrb
sbb
mov
inc
inc
jns
dec
xor
mov
call
orl
jnp
jbe
fistpll
shlb
test
out
sub
mov
inc
popf
in
push
fimull
fidivrl
jp
cmp
iret
in
sbb
ret
repz
push
mov
lds
add
test
jno
cmc
xchg
adc
in
shrb
and
out
repz
push
mov
icebp
lods
test
fnstcw
pmaddwd
ffree
fildl
inc
repnz
loope
or
xchg
push
cltd
xchg
lods
ljmp
sbb
ret
into
enter
cmpsl
movsb
or
jnp
pushf
jge
lea
les
ror
je
pop
data16
rorl
ret
es
mov
inc
inc
insb
std
sub
push
pop
aad
push
dec
cltd
push
and
stos
jmp
cmp
not
and
mov
out
cmpsl
xchg
aam
jb
sbb
mov
push
std
or
in
sub
cmpsl
in
mov
and
push
cmpsb
int3
and
ds
loopne
mov
imul
mov
mov
or
mov
cmpsb
xlat
mov
shr
ja
xor
dec
push
je
mov
leave
xor
jbe
add
sub
xchg
add
imul
out
sbb
and
stos
mov
imul
push
in
les
std
or
sbb
out
adc
test
add
cmp
dec
xor
les
xchg
outsl
and
out
push
rorl
mov
push
and
pop
mov
push
adc
xchg
adc
js
xor
or
je
ficomps
ret
sub
cwtl
mov
es
popa
sub
fisttpll
xor
lea
roll
shll
cli
dec
and
mov
enter
jo
repnz
pop
cltd
aam
gs
sub
or
push
repz
sbb
pop
xchg
iret
js
aam
mov
stc
cmp
or
cmp
and
scas
out
mov
mov
ja
xchg
adc
add
loop
xor
movsb
es
movsb
mov
mov
inc
jle
and
arpl
add
outsb
inc
pop
and
adc
add
fimuls
pop
bound
inc
cmpsb
rcr
jl
xchg
xchg
in
pop
aam
mov
push
push
arpl
or
popa
xchg
add
cs
nop
mov
fdivl
cs
add
stc
lods
lods
push
outsb
or
mov
mov
mov
lret
inc
aam
xchg
out
adc
jmp
sbb
xor
dec
push
scas
jne
jno
mov
aas
lock
add
out
fsubs
loopne
cmpsb
stos
les
js
pop
and
sbb
fs
fwait
jmp
and
iret
mov
call
or
xchg
jo
leave
js
sub
dec
mov
or
fldcw
mov
ficoms
outsl
xor
pusha
popa
imul
ret
jo
imul
jp
mov
shl
pop
xchg
clc
lahf
aas
test
nop
outsl
scas
dec
mov
rcrb
das
shll
sub
cmpsl
xchg
xchg
neg
inc
rcll
cmpsl
inc
inc
xchg
and
pushf
lock
pop
xchg
pusha
aas
xor
dec
enter
in
fwait
mov
stc
in
xor
and
ret
jae
divb
mov
jbe
xchg
pop
insb
outsb
test
ds
mov
aad
add
sub
mov
std
scas
fstl
xchg
and
mov
cmc
dec
popa
inc
xchg
scas
mov
popf
inc
pop
ss
scas
sbb
mov
push
cli
movsl
cmp
dec
or
movsb
das
ds
mov
lods
fldl
jnp
push
dec
mov
add
les
push
call
xlat
ljmp
daa
sti
or
mov
adc
sti
or
insb
lock
adc
iret
pop
fsubs
popa
mov
outsb
rcll
sarl
xchg
adc
ds
pusha
fdivrp
movsb
cmp
cmp
popw
and
add
sub
ficoml
and
jmp
mov
and
bound
or
popf
push
leave
cs
and
std
xchg
push
test
js
mov
iret
ror
pop
mov
pop
inc
mov
andb
aaa
and
cmp
adcl
mov
mov
cmpb
or
scas
jno
sbb
cmc
ret
push
icebp
fsubrs
les
pop
test
stos
jne
xor
cld
mov
repz
pop
xchg
mov
cs
cltd
fcmove
aad
subl
sub
jge
lret
and
shlb
mov
sub
rolb
testl
movsl
mov
inc
fimuls
je
push
jl
outsb
scas
stos
push
cs
xor
fs
fwait
outsl
popf
mov
scas
call
fisttpl
cmc
lea
mov
addl
int3
data16
pop
insl
cmp
and
orl
push
popf
or
imulb
iret
repz
jmp
test
test
dec
jecxz
rcll
add
mov
outsl
inc
icebp
cmpsb
sbbb
mov
popf
push
jmp
imul
jo
stos
scas
sahf
arpl
jmp
pop
pop
sbb
or
mov
repnz
dec
arpl
sbb
bsr
and
mov
data16
andb
inc
and
lcall
jecxz
push
xor
xor
jno
jo
jb
leave
stc
dec
das
movsl
setb
sbb
ds
das
adcl
xchg
add
les
inc
jl
imul
lret
jge
shr
mov
adc
mov
ja
cmp
incb
fs
add
add
pop
cmp
adc
in
addr16
xchg
xchg
gs
adc
inc
mov
mov
cmc
dec
mov
xor
rorl
pop
xchg
xor
and
leave
push
add
mov
add
jo
cmpsl
sti
xchg
push
jl
pop
scas
dec
mov
cwtl
dec
jbe
lock
adc
fwait
mov
dec
cmpl
fcoms
or
jg
out
negl
shl
sbb
lds
hlt
pop
int
sub
and
cli
inc
or
popf
stc
or
cmp
cmpl
roll
cwtl
adc
sbb
repnz
fimuls
dec
xor
jmp
mov
loopne
cs
test
dec
inc
insl
mov
mov
push
add
ds
jo
fildll
xor
mov
inc
xchg
iret
arpl
pop
loope
xor
push
hlt
dec
and
loopne
fcmovne
mov
fcomps
repnz
sub
mov
jns
xor
int
mov
lds
xchg
mov
int3
shll
addr16
cmpl
lods
push
mov
imul
mov
inc
inc
movsb
and
insb
xchg
movsl
push
mov
leave
xchg
scas
icebp
cwtl
sub
push
push
sbb
xchg
sbb
mov
pop
iret
out
sub
in
and
test
add
pop
cli
std
push
repnz
xlat
and
ffreep
fildl
xor
pop
dec
wrmsr
jns
push
adc
loope
xor
mov
mov
adc
dec
sti
mov
scas
and
lcall
lcall
xchg
or
aad
and
fisttpl
aas
call
mov
sbb
or
adc
nop
arpl
cmp
mov
pop
addr16
inc
jl
jbe
mov
fmul
subl
leave
rorl
push
fsts
mov
push
flds
mov
popf
xchg
dec
rolb
cs
hlt
inc
les
xchg
sbb
das
hlt
in
imul
pop
push
xorl
adc
aad
lock
popf
xchg
fdivrl
jle
loopne
pop
int3
push
inc
leave
fwait
in
cmp
pop
mov
gs
ds
cmpsl
int3
add
jno
mov
pop
mulb
mov
inc
or
aad
push
pop
cld
les
sub
lret
mov
push
xor
mov
test
cltd
xchg
out
into
shl
pop
xchg
movsb
repnz
icebp
mov
movsl
imull
mov
pop
sub
jmp
sbb
xor
je
xor
adc
lret
mov
xor
cmp
mov
jmp
jns
sti
or
imul
outsl
lods
cmp
xor
cwtl
mov
stos
int
inc
out
xor
out
es
sbbl
daa
dec
repnz
cli
lcall
inc
enter
push
pushw
push
out
mov
mov
sbb
imul
pop
xlat
jle
jp
les
rorl
icebp
subl
fbld
hlt
repz
xor
fwait
outsb
call
mov
mov
fsubr
outsb
jmp
xchg
iret
dec
mov
dec
cltd
adcb
inc
int3
mov
out
push
xchg
adc
lahf
push
xchg
add
insb
lea
aad
mov
int3
push
lock
outsl
inc
cmp
mov
fstpl
xor
xchg
sti
pushf
inc
imul
aaa
in
lods
xchg
xchg
sub
cmp
stos
fstpt
test
dec
sbb
ja
pusha
inc
add
adc
lret
pop
and
outsl
loop
push
data16
lods
sti
mov
inc
lahf
xchg
or
test
out
shrl
repnz
mov
flds
cmpsl
sbb
jl
sub
xlat
jb
addr16
mov
hlt
push
push
sbb
std
fstpt
jg
aas
fldt
sarl
add
aaa
mov
pop
stos
sub
cmp
icebp
mov
jecxz
inc
or
cmc
xchg
cmp
imulb
add
or
sbb
fisubrl
mov
mulb
inc
add
pop
test
repnz
mov
and
dec
lods
jne
xchg
sub
rclb
and
stos
pushf
lahf
jl
inc
and
dec
insb
pop
dec
fisttps
jge
mov
fwait
hlt
or
cmpsl
int
out
jbe
lret
ret
stc
inc
ja
pop
xchg
pop
repnz
hlt
cmp
loopne
sbb
ljmp
in
sub
sub
popf
pop
inc
sub
add
ljmp
jg
stos
sub
ds
xor
enter
sub
inc
sbb
cmp
mov
push
pop
lcall
fistl
xchg
jnp
push
adc
lock
pop
sbb
fnstsw
xor
mov
pop
xor
lret
pushf
and
mov
mov
movsl
enter
or
adcl
sti
lret
xor
dec
cmpsl
push
in
lea
movsl
dec
mov
ret
gs
adc
js
xlat
pop
pop
mov
dec
mov
cmc
push
add
push
aam
pop
mov
lret
pop
or
sub
dec
mov
arpl
gs
insl
aas
lods
ja
push
nop
notl
lds
sub
push
inc
loop
add
std
push
push
in
mov
push
hlt
pop
insb
cld
movsb
push
adc
ret
dec
cmp
sub
mov
mov
cli
xchg
out
insl
mov
pop
loope
aam
or
mov
mov
jg
mov
pop
scas
aam
push
or
pop
add
push
rcrl
leave
shlb
call
lods
in
imul
cs
cmp
jo
or
jnp
fcomps
xchg
mov
xchg
pop
fdecstp
sarl
lret
push
xchg
and
loop
dec
jp
fs
cld
xchg
xchg
jne
mov
xchg
xchg
cs
ss
mov
adc
test
ret
repz
in
ds
or
push
cmp
add
and
in
movb
or
lret
mov
idivb
xchg
ret
mov
mov
lcall
pushf
imulb
stos
push
rcrb
jle
stos
adc
mov
stos
xchg
jge
mov
adc
dec
in
xchg
in
cmp
int
cld
test
mov
jle
mov
and
add
dec
xorb
and
push
xchg
sbb
aad
and
outsb
jge
inc
out
call
push
ds
xor
ljmp
idivb
into
push
into
cmp
pop
jle
add
es
add
adc
dec
les
data16
je
inc
cld
pop
repz
rcll
adc
and
adc
enter
in
cmp
lds
pop
mov
mov
sbb
cwtl
inc
stc
fwait
adc
out
lock
adc
jle
jnp
ja
mov
mov
xchg
in
jmp
loopne
xchg
lcall
outsb
jnp
out
add
mov
lret
outsb
inc
jg
mov
aas
ds
sub
jmp
clc
jp
shrb
cmp
mov
mov
mov
mov
ret
sub
dec
mov
sub
repnz
mov
pop
std
add
fadds
mov
cli
mov
and
ret
lea
adc
fidivl
popf
lds
jno
bound
xchg
push
dec
jbe
inc
and
movsb
setnp
jmp
in
pusha
or
int
jge
xchg
push
mov
cmp
pop
pop
pushf
push
ret
sub
test
pop
and
addr16
loop
xchg
mov
cmp
call
lods
enter
jl
dec
cltd
jmp
pop
pop
adc
push
xlat
jbe
jnp
dec
push
mov
dec
lods
inc
jmp
dec
sbb
inc
mov
cltd
jmp
push
mov
cwtl
push
inc
xor
out
sbb
shrl
gs
pop
mov
jne
cld
lods
imulb
mov
xchg
push
lret
int3
xor
mov
pop
popa
repz
push
rorb
test
into
mov
popf
push
push
imul
or
mov
xchg
mov
or
push
adc
sti
mov
mov
mov
subl
adc
insb
jno
daa
or
sbb
lds
inc
xchg
ret
rclb
arpl
jl
xchg
pop
jge
push
mov
fincstp
adc
cmp
dec
in
xchg
cwtl
loop
mov
movsb
pushf
test
sar
sbb
add
ja
mov
jae
in
js
push
dec
sbb
movsb
mov
lods
mov
mov
xor
jb
inc
lret
vcvtsi2sdl
push
mov
sub
lahf
cmpsl
mov
gs
fs
xchg
mov
adc
ret
inc
je
insl
or
mov
xchg
movsb
test
mov
and
mov
incl
xor
jb
or
mov
shll
and
mov
ret
pop
push
and
aaa
fisubl
xchg
ret
out
and
mov
sub
adc
insb
push
incl
pop
fldt
fcoml
pop
cmc
cmp
stos
cmp
sbb
adc
lock
or
mov
push
aam
xchg
movsb
push
mov
dec
scas
or
sub
rorb
jns
push
cmpl
sbb
int3
cmp
out
jnp
out
das
push
adc
lret
push
sbb
rcl
sub
cmpsb
sub
xor
mov
dec
xchg
js
aam
adc
pop
call
jnp
stos
stos
js
fsin
leave
dec
pavgb
adc
jo
xor
adc
shrb
leave
bound
repnz
ret
ss
xlat
cli
mov
cmp
stos
sbb
stc
mov
add
push
xchg
arpl
addr16
add
xor
jno
out
in
mov
sub
daa
mov
rol
iret
mov
scas
jbe
pop
mov
cmp
stc
adc
mov
lret
andb
repz
pop
cltd
xor
out
mov
xor
inc
mov
push
in
iret
or
in
sub
push
add
jl
fiadds
jnp
mov
adc
and
xor
out
fwait
push
aad
test
mov
pop
daa
insl
pusha
mov
push
lea
ffreep
cmp
cmp
xchg
sahf
addb
shll
hlt
sbb
cmpsb
xchg
dec
imulb
in
cmp
mov
movsl
mov
das
repz
sti
mov
mov
sbb
out
negb
mov
repnz
aaa
fwait
cmp
xchg
pop
pop
mov
and
jbe
lret
jecxz
lods
imul
addl
call
jnp
add
adc
clc
push
xlat
loopne
or
call
xor
jecxz
sti
pop
fistpll
and
push
sbb
out
cwtl
sbbb
lcall
out
lret
xchg
mov
mov
rcl
icebp
mov
cwtl
jmp
mov
mov
jle
inc
or
jns
jb
adc
or
dec
inc
sbb
xchg
int3
lret
call
popa
xchg
pushl
mov
jno
loop
dec
jns
std
jecxz
ret
or
sti
sub
cli
xchg
add
mov
add
sub
adc
xchg
xor
mov
mov
sbb
push
cmp
inc
add
cmpsl
jge
adc
push
jb
adc
out
mov
mov
xchg
sbb
jecxz
and
divl
adc
lret
lock
push
mov
and
fisttpl
pop
dec
testb
push
dec
ret
jecxz
orl
inc
jmp
adc
sub
out
jae
inc
adc
subb
rol
test
call
movsl
cld
or
jb
movsb
push
rcl
repz
fnstsw
push
add
mov
push
rcl
mov
imulb
add
repnz
sub
sar
icebp
sub
dec
jle
shll
push
stos
hlt
nop
out
frstor
in
dec
jns
je
cltd
test
fsubr
std
or
imul
pop
into
movsb
lret
sbb
pop
jae
mov
addr16
pop
jnp
jp
outsb
inc
arpl
arpl
mov
fwait
or
leave
add
arpl
add
outsl
push
pop
pop
clc
or
pop
xor
repz
mov
xchg
mov
jg
push
dec
or
out
movsl
xchg
mov
cmp
js
out
push
ss
cmc
jb
pop
jae
dec
mov
into
test
stc
mov
push
repnz
popa
push
insl
push
jno
stc
cmpsb
cmp
aad
sbb
jmp
cmp
hlt
repz
lds
sbb
ljmp
mov
xchg
mov
stos
mov
test
push
xchg
or
mov
jg
lcall
pop
add
loopne
das
bound
add
aam
lods
dec
test
mov
lret
je
mov
dec
test
dec
fidivl
insb
dec
mov
repnz
imul
cmpsl
sbb
mov
iret
ja
sub
inc
ja
stos
cmp
dec
xchg
add
pop
inc
xchg
idivl
xchg
fsubs
out
imul
lahf
addr16
les
insl
xchg
mov
cmp
sub
dec
xor
hlt
mov
fimull
test
mov
or
mov
pusha
data16
fsub
pop
outsb
pop
cs
sub
jmp
pop
or
jo
bound
cltd
sub
jbe
add
mov
pxor
and
cmp
add
or
push
add
mov
mov
fistl
inc
xchg
sbb
arpl
loopne
adcl
push
loop
fidivs
mov
les
adc
adc
dec
push
adc
sub
in
mov
jle
dec
jbe
scas
fstps
push
sub
sbb
and
movsb
testb
stc
cli
andl
jae
stos
jle
mov
enter
sub
insl
jle
lcall
pushf
cmpsl
ss
push
xlat
mov
lods
mov
xchg
imul
or
sub
icebp
jmp
je
jb
out
xchg
inc
daa
loope
mov
imul
nop
mov
and
das
cmp
mov
aas
icebp
in
mov
adc
sub
adc
mov
sub
pushf
push
push
rolb
ljmp
push
scas
or
in
pop
nop
xchg
inc
dec
sub
negb
cwtl
shl
add
data16
mov
fcoms
addr16
cmpsl
or
pop
mov
nop
sti
cmp
insb
imul
cmpsl
fsubrl
push
ret
inc
add
inc
sub
ljmp
push
sub
xor
pop
cmp
dec
pushf
scas
scas
push
push
and
testl
add
push
arpl
iret
lock
xor
mov
outsl
adc
inc
fucomip
idiv
adc
test
and
dec
stc
pop
sub
notb
mov
cmp
lahf
cwtl
mov
adc
push
jo,pt
cmp
repz
mov
int
dec
adc
cmp
loopne
cld
add
adc
ffreep
jbe
fmul
mov
repnz
fisttps
call
add
lock
orl
jnp
adc
addb
mov
inc
pop
push
pop
inc
and
rcll
inc
mov
jb
fnsave
ja
mov
das
adc
push
movsb
push
in
cs
rcr
and
mov
sbb
mov
sbb
std
inc
out
arpl
xchg
mov
int3
push
mov
rcr
shll
adc
push
jmp
rclb
movsl
mov
test
arpl
int
aam
iret
pop
jb
push
mov
push
aad
shll
xchg
cmp
pop
fisttpl
aad
test
movsb
mov
fisubs
ret
mov
std
aam
std
jo
push
popa
popf
add
dec
sub
clc
dec
mov
outsl
push
dec
push
adc
mov
sub
or
lods
out
cmpsb
push
scas
scas
test
aam
xchg
sti
xchg
push
js
mov
inc
rol
cltd
mov
xchg
repz
popf
mov
popf
enter
fidivrs
pop
insb
cmpsb
cmpsl
idivl
shrb
mov
icebp
int
xchg
sahf
int3
in
pop
scas
jnp
push
jae
pop
lahf
fsubl
lret
push
cltd
adcb
fnsave
movsl
push
popl
xor
push
scas
sub
push
mov
cli
popa
mov
xchg
jae
jge
stos
in
pop
jno
cmp
and
arpl
out
ror
daa
rol
cmpsl
push
sbb
add
jnp
mov
xlat
es
mov
dec
out
ja
jp
and
divb
clc
cmp
pop
adc
pop
pushf
mov
inc
add
out
or
mov
push
loop
fdivr
rcrl
xor
inc
lods
enter
data16
dec
ljmp
and
stc
pop
dec
insb
lea
pop
fxtract
dec
mov
xor
or
cmp
adc
or
movsl
mov
rcrb
cwtl
inc
dec
ja
pop
mov
xor
test
rorl
pop
int
add
mov
stos
cmp
xlat
popa
mov
xor
pop
lds
jle
push
mov
inc
int
sbb
cmp
xchg
or
or
fisubs
pusha
cmp
mov
lods
mov
and
jl
mov
clc
out
in
sub
push
xlat
cmp
aas
lret
icebp
insb
xor
jle
mov
scas
cli
dec
bound
adc
adc
dec
mov
push
jno
cmpsb
add
imul
and
test
push
das
call
adc
or
enter
popf
push
cmp
pop
mov
cmp
sbb
das
out
loop
cli
lds
pop
insl
out
dec
stos
mov
lahf
insb
or
fdivrs
or
ds
mov
stos
xchg
pop
and
mov
pop
sbb
mov
cli
cld
test
icebp
and
pop
xor
dec
ja
int3
push
icebp
and
or
sub
add
xchg
jno
and
dec
cmp
push
add
leave
pop
ret
ret
inc
ds
stos
add
mov
popa
xchg
bound
add
inc
adc
aas
pop
out
xor
push
les
test
pushf
xchg
repz
divl
insl
sub
les
push
frstor
popf
dec
aam
mov
out
cs
das
test
dec
out
aam
test
sbb
out
ret
aaa
dec
adc
in
pop
jge
mov
iret
imul
roll
push
clc
sbb
ret
push
iret
test
push
cs
jl
js
lods
pop
mov
mov
ss
lods
pop
mov
jae
test
xor
push
imul
sub
fucom
dec
cmp
mov
cwtl
hlt
imul
add
sbb
push
adc
mov
or
imul
jp
data16
and
xor
sbb
and
aad
imul
cld
in
mov
xor
sti
sub
or
iret
cmpsb
xor
dec
cmpsb
mov
lods
clc
mov
dec
mov
pop
rorl
out
fdiv
xchg
call
js
push
lods
sub
aaa
pushf
mov
cmc
adc
cmpl
loop
jno
mov
mov
xor
call
mov
iret
outsb
or
sbb
push
jne
pop
sbb
dec
and
lock
hlt
int
dec
pop
push
or
sbb
mov
into
push
dec
roll
cltd
push
cmp
stos
jo
xor
loope
and
jbe
inc
and
fwait
mov
dec
ljmp
rclb
jnp
push
ds
mov
and
loop
dec
outsb
mov
or
mov
mov
xor
pop
fnstsw
outsl
cmc
push
adc
outsb
cld
sub
insb
mov
mov
das
idiv
xchg
and
lret
mov
arpl
in
loop
nop
int
imul
dec
std
pop
fimull
xor
outsb
ja
add
insb
jecxz
push
dec
ss
cmp
pop
push
ljmp
inc
jb
rcrl
and
cmp
add
test
jb
repnz
in
xchg
mov
out
adc
call
int
test
or
lock
jns
sub
enter
cmp
inc
cld
pop
mov
arpl
mov
popf
lcall
jno
jbe
adc
dec
clc
xor
pop
pop
shlb
pop
xor
jne
mov
fdiv
jb
mov
gs
loop
mov
inc
dec
dec
popa
xor
jmp
jge
fdivrp
bound
ljmp
inc
mov
cmc
jno
ds
repnz
int3
stos
pusha
add
pop
fisubl
dec
jne
xor
enter
mov
add
mov
mov
inc
movsb
repnz
insb
cmp
cltd
in
fs
mov
dec
sub
xor
ret
sbb
stos
sarl
dec
xchg
icebp
roll
cmpsb
clc
decb
fwait
or
aaa
lahf
clc
push
add
inc
enter
add
fdivs
mov
mov
adc
inc
test
cmpsl
fisttpll
lods
clc
cltd
push
mov
lds
rcr
sbb
pop
hlt
in
and
and
pop
lret
roll
hlt
sarb
ret
pushf
mov
je
lea
repz
pop
xor
icebp
and
lret
push
bound
add
xchg
mov
out
scas
out
sbb
call
cmp
ja
add
dec
inc
repnz
jno
jae
cwtl
test
std
scas
mov
sbb
push
inc
cs
mov
in
into
dec
or
mov
stos
pop
sub
push
xchg
leave
daa
jecxz
mov
aad
push
lock
testb
bound
dec
iret
mov
adc
call
xchg
js
movsb
in
mov
cmp
mov
les
mov
cli
ljmp
rolb
inc
push
mov
lods
adc
and
lret
cmp
pop
or
or
cli
pop
or
mov
adc
jns
xchg
jne
pop
inc
pop
mov
sar
sub
push
jns
mov
mov
add
aam
adc
pop
dec
les
xchg
out
call
lods
gs
repz
fimuls
pop
ljmp
or
inc
and
push
inc
dec
jl
xchg
push
add
or
aad
out
mov
enter
xchg
leave
xchg
mov
js
lcall
fmuls
inc
jle
stc
insl
testl
adcb
mov
jmp
mov
hlt
xchg
xchg
pop
movsl
loop
stos
ficomps
xor
push
push
xchg
bound
and
sbbb
out
sub
push
ss
fidivrl
add
stos
jp
in
and
cmp
cmpsl
popa
test
fnstcw
inc
and
arpl
pop
jp
and
in
add
cltd
adc
pop
mul
xchg
clc
ss
cmp
or
lock
mov
das
jecxz
test
xor
or
push
xchg
ds
ljmp
shll
sbb
dec
inc
insb
jmp
adc
cmovne
enter
cmpsl
int
xor
outsb
stos
cltd
negb
push
sbb
inc
dec
cmp
push
mov
and
push
jns
mov
pusha
xor
insb
dec
cltd
mov
mov
xlat
lret
adc
pusha
push
test
scas
mov
nop
xchg
cmp
and
dec
call
enter
or
repz
dec
push
pop
jg
imul
xchg
pop
sahf
mov
adc
mov
sahf
rorl
or
sahf
jecxz
push
push
cmc
push
jp
nop
inc
andb
sub
mov
mov
mov
and
les
xor
mov
jne
stc
movsl
add
out
subl
xor
orb
repnz
xor
cmc
daa
aam
lods
or
les
push
ds
pop
jns
repnz
shlb
push
jns
fadd
or
roll
push
in
dec
arpl
inc
mov
inc
stos
dec
rclb
cwtl
cmp
sbb
aad
xchg
cmp
hlt
data16
shll
or
paddsb
insb
out
mov
mov
movsl
aam
sbb
xchg
lds
lds
xchg
outsl
inc
mov
lods
mov
popa
pop
dec
cltd
xchg
das
sub
sub
mov
sub
rcrb
test
pushf
mov
jecxz
cmp
aaa
pop
xor
pushf
jg
dec
iret
out
xchg
orl
daa
push
rorl
addl
popa
xchg
push
jo
sar
lods
movb
push
repnz
pop
mov
inc
mov
ror
mov
daa
lret
popf
lods
sbb
fnsave
add
inc
jl
jne
adc
xor
vpmacswd
setb
out
push
sbb
lods
pop
aas
fiaddl
out
incb
cmp
mov
lcall
sbb
int3
and
dec
adc
cli
lods
pop
js
mov
xchg
fistpll
lods
pop
pusha
jb
jne
mov
xchg
xor
bound
imul
pop
shlb
sub
mov
jno
dec
jmp
jg
fwait
add
sbb
rclb
aam
pop
stc
orl
and
sbb
lods
sbb
sbb
lds
and
mov
sbb
pop
aaa
std
pop
mov
jle
mov
mov
mov
dec
out
push
es
mov
sub
out
movsl
or
and
call
fidivrs
fwait
or
imul
arpl
mov
pause
sub
pop
cltd
jle
std
insb
enter
cmpsl
pop
ja
or
xor
xchg
xchg
repnz
test
lret
bound
cmpl
mov
leave
stos
int
inc
mov
popf
fsubrl
popf
nop
int
clc
pop
mov
or
pusha
push
addr16
rol
push
loope
pop
fyl2x
xor
out
pop
lahf
sbb
push
test
mov
out
dec
int
sahf
jnp
into
call
lods
xchg
loop
fidivrs
daa
mov
mov
clc
xchg
and
jmp
add
sarl
mov
adc
movsb
mov
lret
daa
mov
mov
mov
inc
sti
sbb
pushf
jbe
xor
inc
mov
mov
pop
inc
fistpl
sahf
rcll
xchg
mov
push
mov
ret
scas
inc
jg
cmp
nop
ljmp
mov
outsl
bound
add
pop
xchg
pop
add
jae
push
mov
sub
cs
push
nop
adc
dec
mov
adc
aam
mov
xor
ret
adc
sbb
loopne
jle
jge
mov
inc
mov
test
jmp
iret
hlt
dec
adc
sti
ds
fsubrs
lret
dec
and
adc
icebp
int
mov
pushf
fnstsw
mov
pop
pop
ret
stos
mov
jecxz
adc
out
mov
cli
sbbl
cmp
in
push
mov
js
dec
test
cmpsb
add
pop
les
lahf
imul
ficompl
inc
mov
js
cld
and
shrb
jb
pop
jo
inc
bound
mov
or
cmp
adc
bound
sub
into
mov
push
pop
cmp
mov
popf
fmulp
pop
fsubrl
movsb
rclb
and
repz
call
je
jnp
jmp
mulb
test
jne
es
mov
pusha
hlt
jl
adc
rclb
lcall
cmp
mov
sub
add
or
xchg
xchg
shrl
movsb
aaa
cmpsl
scas
cmp
sub
mov
outsb
movsl
cmp
pop
sub
mov
enter
std
push
decl
pusha
cwtl
xor
jae
cmp
xor
sbb
jae
xchg
mov
jne
in
dec
lahf
test
pusha
cmp
adcb
ja
shl
cmp
add
mov
data16
xchg
subl
mov
fwait
popa
adc
push
lods
push
andb
or
adcb
lret
mov
push
rol
js
dec
cli
add
dec
inc
and
push
repnz
pop
mov
std
ss
ja
icebp
jmp
push
js
ljmp
scas
shll
add
les
push
movsb
nop
dec
mov
fsubp
shlb
mov
das
jmp
insb
adc
or
movd
inc
into
xor
test
mov
mov
xor
mov
movsl
daa
mov
arpl
mov
xor
dec
lock
cmpsl
pop
pop
mov
sub
pop
pop
repz
subl
scas
cmpl
pop
pop
mov
add
sbb
ficomps
iret
add
in
dec
sbb
inc
jl
inc
fmull
mov
out
cmpsl
or
in
popf
fildll
or
dec
mov
sbb
fldpi
fsubrl
das
mov
dec
mov
popa
ss
fnstenv
dec
or
fistl
sbb
mov
dec
and
fs
and
mov
inc
and
addr16
jg
pop
fs
out
call
bnd
je
add
inc
adc
leave
lahf
lret
in
loope
mov
cmc
icebp
shl
xchg
xor
enter
outsb
icebp
or
mov
shl
jge
sbb
rclb
in
lods
outsb
ret
fstpt
pop
std
pop
dec
inc
sti
or
pop
add
int3
pusha
pop
mov
lods
mov
stos
outsb
sub
aas
loope
sbb
or
pushf
cld
lods
adc
addr16
test
pop
out
out
sub
test
inc
das
lahf
fnstcw
hlt
and
test
sub
call
mov
fstps
add
inc
xchg
jnp
mov
xor
xlat
cs
add
xchg
jp
lret
mov
cmc
sub
cmpsb
jg
loope
stc
stos
out
adc
out
push
push
aad
sti
scas
movsl
mov
out
lock
mov
fstpl
sub
lcall
clc
insl
mov
sti
push
sub
sahf
fdivrs
dec
sub
dec
dec
dec
push
or
cli
inc
repz
dec
shlb
lods
and
sub
cmp
xor
cmpsl
ja
aaa
or
loop
lods
add
pop
dec
andl
lret
shrb
sub
sbb
pop
in
in
inc
ret
add
ret
xlat
insl
aas
add
pushw
cmpsl
inc
lret
inc
cmpsb
leave
pop
mov
cmpsl
xor
or
xlat
mov
mov
std
fs
adc
sub
leave
cwtl
mov
push
mov
nop
iret
pop
and
mov
cmpsb
es
push
call
jmp
jl
or
loopne
ss
sub
xor
test
or
xorb
mov
repz
std
cmp
add
xchg
dec
cmp
repz
loope
sub
mov
push
inc
inc
sub
out
sub
and
xchg
ss
adc
pop
into
and
mov
or
out
adc
xorl
mov
jns
xor
and
aaa
adc
fwait
adc
jmp
int3
adc
dec
add
je
pop
inc
dec
lret
adc
cmc
push
xlat
sahf
rolb
mov
fneni(8087
dec
fwait
mov
push
mov
add
out
inc
push
sets
pop
stos
pop
cmpsb
fdivrp
jb
jecxz
je
sub
sub
mov
inc
jmp
mov
jg
and
cmpsb
adc
cmpsl
or
cmp
arpl
fnstsw
cld
push
sbb
arpl
arpl
ds
mov
enter
push
mov
in
xor
push
ret
aaa
add
mov
and
cmp
mov
popf
sbb
and
fcoml
xchg
mov
arpl
pop
mov
mov
push
in
push
clc
adc
xchg
cmp
cpuid
sbb
xor
add
cmp
xor
into
out
lock
jg
sbbl
or
push
jb
xor
cmc
fwait
icebp
adcl
jle
scas
adc
lods
push
mov
inc
push
sbbb
xchg
jge
loope
div
ss
push
roll
mov
and
enter
push
ja
adc
in
addr16
dec
jp
jg
scas
mov
or
sahf
test
or
cmp
mov
pop
mov
aam
and
sub
and
test
sahf
aam
je
shlb
dec
movsl
in
repz
test
inc
pop
pop
std
add
dec
dec
adc
in
jle
dec
iret
xlat
jns
imul
push
jns
or
mov
sub
jmp
or
arpl
nop
sub
mov
iret
popa
out
ss
mov
in
shrl
aaa
int3
jge
lock
dec
das
push
mov
sub
mov
mov
xor
sbb
out
and
push
call
pop
inc
and
dec
mov
into
stc
sbb
in
lods
adc
mov
xchg
jge
push
out
ss
cwtl
mov
lcall
pop
stos
rcrl
cmp
push
cmp
jg
pushf
stc
adc
add
cmp
fcomps
inc
fadd
mov
sar
mov
sahf
xor
or
xchg
push
mov
inc
repnz
fs
push
mov
lods
inc
sbb
sub
mov
lret
ret
push
mov
dec
in
pop
mov
push
add
idivb
xlat
mov
mov
test
lods
dec
jp
push
lds
add
popf
xchg
xor
inc
js
add
push
xor
sahf
fxch
cltd
rcrb
push
arpl
imul
aad
adc
hlt
mov
popw
push
inc
inc
push
mov
push
int
and
idivl
cmp
sub
ljmp
loopne
lods
je
mov
imul
pop
ret
arpl
mov
mov
jne
cmpsl
inc
stos
push
lds
in
je
outsb
push
jns
jg
xor
out
mov
scas
mov
mov
jmp
scas
mov
inc
adc
sub
cli
pop
outsl
loop
jge
test
jle
pop
sub
push
xchg
xchg
mov
int3
icebp
scas
mov
fwait
xor
push
xchg
loopne
xchg
and
dec
mov
mov
push
mov
jns
inc
xchg
mov
add
jb
lea
imul
insl
jge
push
push
mov
fdivrp
mov
jge
mov
insl
mov
mov
lock
xchg
mov
mov
mov
mov
jg
scas
sbb
loop
mov
out
xor
sbb
push
test
sti
jmp
or
aad
dec
dec
and
sub
push
jae
fsub
test
movsb
roll
std
mov
sub
jnp
shrb
lea
and
and
cmpsl
popf
jo
nop
in
sahf
je
sti
jne
repnz
mov
mov
xchg
jo
jbe
ret
hlt
pop
movsl
gs
mov
lahf
fsubrs
xor
enter
iret
lods
inc
xor
fwait
jmp
or
dec
outsl
pop
sub
and
movsl
movsb
roll
iret
mov
dec
mov
sub
shlb
loope
xchg
mov
enter
sarb
xchg
xchg
dec
fisttps
in
xchg
sub
not
adc
sub
jbe
fnstenv
inc
shrb
int
or
scas
shll
insl
add
ror
rolb
cmp
inc
lock
cmp
pop
sbb
mov
leave
imul
mov
in
cmp
sbb
push
xchg
ljmp
mov
cli
add
es
adc
adc
xchg
mov
mov
ja
or
sbb
pop
shl
in
mov
cmpsl
or
cmp
xlat
data16
imul
mov
jmp
push
ret
fisttps
in
movsl
imul
pop
cmp
xor
xchg
cmp
out
add
je
sub
mov
push
cmp
clc
lret
frstor
mov
cmc
xorl
scas
hlt
mov
mov
loope
push
ret
imul
dec
jb
push
xchg
cld
stos
dec
pop
dec
sub
adc
mov
sub
dec
sub
ret
out
pop
mov
jnp
cwtl
dec
aad
sti
lods
mov
addl
mov
mov
lret
xchg
cmc
leave
gs
cmpsb
xor
shrl
mov
pop
xchg
push
jae
shll
loop
add
push
mov
fsubp
ss
sbb
dec
xchg
inc
cmpl
leave
xor
out
and
lods
jg
mov
lcall
cli
insb
xchg
dec
pusha
and
sub
dec
add
xchg
push
dec
mov
xchg
or
xor
and
fnstsw
insl
clc
lea
mov
fadds
sbb
mov
inc
add
mov
jae
in
bound
arpl
pop
out
addl
pop
dec
and
imul
jmp
lock
aam
mov
sbb
sbb
cmc
ja
icebp
into
popa
xchg
sub
in
lds
push
into
clc
cmc
in
mov
in
inc
pop
pop
and
fmuls
ret
mov
in
mov
nop
pop
pusha
push
std
and
mov
clc
sbb
push
ja
add
adc
insb
andl
lret
push
push
sub
fsubrp
mov
inc
sub
scas
inc
add
and
les
pop
inc
bound
hlt
js
js
cmpsl
mov
sub
mov
ret
xchg
icebp
adc
jecxz
das
jecxz
lret
lods
xor
fchs
pushf
mov
int3
aaa
sbb
mov
and
jb
push
out
arpl
push
pop
inc
mov
ja
push
imul
and
and
dec
es
mov
sub
dec
sub
rcr
and
out
dec
dec
arpl
outsl
shll
adc
lods
xchg
movsb
mov
mov
push
add
loope
aas
lahf
sbb
lds
xor
dec
adc
push
sub
pop
cli
daa
cwtl
add
push
mov
es
in
clc
fldl
xchg
std
jmp
fwait
mov
sub
clc
icebp
cmpsb
pop
dec
dec
adc
fxch
mov
push
inc
lock
xlat
sbb
fnstenv
mov
sahf
adc
pop
fstpt
pop
test
and
mov
hlt
pop
out
dec
dec
ds
fwait
lcall
mov
out
xchg
inc
das
test
sbb
je
dec
xchg
pop
mov
pop
nop
rcrl
pop
leave
movsb
rcll
lods
imulb
add
jp
stc
cld
mov
in
out
xor
repnz
stc
push
jge
pop
aaa
xchg
adc
dec
das
cmp
mov
sbb
pop
cmp
dec
pop
push
das
push
outsb
xchg
test
pop
mov
inc
mov
push
ficomps
outsl
xchg
xor
mov
bound
leave
adc
add
mov
call
stc
inc
jge
and
fists
lcall
insb
int
pushl
add
fadds
jo
movsl
or
sub
outsb
mov
jae
scas
mov
out
push
adc
fwait
mov
dec
arpl
mov
shlb
rorb
pop
in
es
sbb
loop
imul
lret
sbb
adcb
dec
outsb
lcall
hlt
cmp
or
mov
xchg
ja
xchg
jo
arpl
sub
mov
xchg
cmp
cmc
mov
jg
jne
push
andb
jne
mov
dec
cltd
or
mov
jg
cmp
divb
sub
pop
xchg
sbb
out
jmp
test
mov
or
mov
popa
ja
fcmovbe
dec
pop
push
ret
arpl
mov
cmp
xor
jle
enter
ja
xchg
adc
jae
std
lods
pop
ljmp
aam
xor
or
dec
imul
lods
into
jecxz
cmp
shll
popf
out
out
mov
cmp
pop
adc
or
nop
cwtl
or
cmp
popf
rcr
inc
dec
cmp
std
xchg
cmp
sbb
jae
das
lahf
jge
lret
mov
or
jbe
jp
les
jns
addr16
mov
stos
lock
popa
idivl
jge
and
sbb
cmp
mov
mov
pop
sbb
push
int3
lods
xchg
aas
aas
adcl
cmp
jae
leave
pop
xchg
iret
xchg
fcoms
cld
ljmp
mov
in
repz
xor
adc
mov
in
lds
sahf
lret
mov
cmpsl
sub
or
add
dec
pop
test
adc
adc
adc
xchg
push
pop
pop
sbbb
shrl
loop
test
xchg
and
test
mov
cmpsb
jecxz
xor
cmpsb
mov
das
cltd
sbb
dec
in
jno
rorb
and
loopne
pop
hlt
and
mov
mov
inc
push
stos
ja
test
lds
mov
imul
loopne
pop
aas
pop
cmp
xchg
add
out
test
daa
sbb
inc
jnp
daa
aas
fwait
scas
fistps
lcall
jecxz
mov
push
clc
mov
mov
jmp
scas
pusha
cmp
loope
or
xor
jecxz
enter
add
outsl
test
divl
xor
or
gs
shr
inc
push
outsl
jmp
xor
push
fcos
sbbl
ss
in
data16
out
je
fwait
les
ldmxcsr
mov
pop
outsl
mov
es
add
mov
xchg
stc
outsb
rcrb
cwtl
jmp
pop
mov
aas
or
lock
pop
xchg
lret
ret
mov
aam
jge
sbb
and
js
xchg
mov
xor
mov
pop
sbb
mov
or
and
adc
xor
test
fs
mov
add
mov
xchg
stos
sub
mov
pop
scas
scas
fstps
mov
sub
push
adc
into
mov
dec
mul
clc
push
sbb
popa
imul
xchg
push
jmp
mov
add
test
test
jae
sbb
addr16
rcr
adc
das
arpl
jp
and
in
rcrb
in
cmpsl
sbb
inc
jo
fs
mov
mov
xor
idivb
std
outsb
int
rcll
insb
xchg
pop
mov
mov
pusha
add
into
dec
inc
lea
orl
sbb
enter
adc
and
add
xlat
mov
mov
cwtl
fisubl
sti
jmp
fucom
mov
imul
cmp
scas
push
fcmovu
mov
sbb
pop
repz
lods
into
mov
cld
in
ffree
sahf
dec
push
test
push
and
add
cmc
adc
mov
arpl
lods
in
cld
adc
and
icebp
mov
out
pop
scas
xchg
std
adc
jnp
les
push
inc
sbb
dec
aad
mov
call
ja
stos
or
jne
jb
aam
fildl
cmpsl
jmp
push
popf
and
mov
in
xchg
dec
rcrb
ds
out
arpl
and
mov
pop
inc
nop
incl
cmp
subl
jno
inc
sub
mov
das
jmp
jmp
cmp
jbe
push
mov
dec
outsb
pushf
or
cvtps2pi
fistps
dec
nop
fcoml
inc
or
or
aad
repnz
dec
stc
outsb
mov
ds
dec
adc
sbb
pop
sbb
gs
fcomps
bound
dec
inc
mov
adc
ds
cmp
cmpsb
mov
loop
push
rcl
repz
imul
inc
fsubs
xchg
pop
jge
aad
lods
sub
pop
jecxz
sub
push
push
dec
pusha
xchg
ds
inc
loop
call
sbb
jg
leave
mov
insb
or
dec
popf
jmp
sbb
sbb
dec
dec
mov
cmp
ss
test
mov
dec
rolb
pop
inc
mov
add
dec
shl
push
sbb
cmp
cltd
lret
push
int3
cmc
scas
cmp
xchg
loope
loopne
outsl
rcr
mov
xorb
cmovns
in
js
mov
push
mov
in
lret
imul
imul
mov
and
adc
dec
jge
dec
std
rorl
shr
jp
loopne
addr16
out
sbb
xor
sbb
inc
sub
in
cmpsb
push
pop
cmp
inc
adc
inc
push
and
outsl
xchg
dec
inc
stos
cs
push
aad
arpl
mov
nop
popf
push
pop
sub
mov
int
or
fbld
lods
js
mov
xor
and
xor
mov
les
mov
adc
test
or
pop
popf
mov
cmp
movsb
mov
pop
leave
mov
jp
gs
inc
jge
fdivrs
in
adc
fdecstp
sar
mov
xlat
dec
cmp
filds
sbb
cmc
inc
sub
push
jp
outsl
ds
jecxz
addr16
fmull
ret
jo
cmp
int
mov
adc
pop
in
mov
mov
insb
imulb
out
fcoml
movsl
loopne
dec
icebp
lds
ljmp
popa
mov
movsl
iret
sub
jle
or
cltd
jl
jbe
imul
dec
jne
cmp
inc
add
das
jbe
cmp
mov
pop
mov
test
outsl
test
xchg
test
out
fs
leave
mov
outsl
bound
sbb
or
test
cmc
out
jae
inc
sbb
jg
gs
jno
inc
inc
add
gs
jns
push
aad
inc
in
pop
sub
in
std
js
mov
enter
out
mov
in
push
xchg
loop
ja
enter
pop
push
mov
push
pusha
push
push
mov
pop
mov
sub
rcrb
ja
push
gs
movsb
les
loop
iret
clc
inc
inc
mov
fnstcw
sti
pop
arpl
push
idiv
inc
inc
out
cltd
add
push
lret
mov
sbb
sub
fwait
push
xor
sbb
jns
xchg
sub
mov
add
mov
and
or
mov
dec
and
xchg
mov
xor
xchg
movsl
push
int
inc
jle
outsl
hlt
add
andb
aas
leave
and
sarb
mov
iret
call
fbstp
jecxz
mov
shll
mov
loopne
adc
pop
test
xlat
cmpsl
fcoml
sub
xchg
pop
sbb
or
sbb
popa
jbe
stos
ljmp
fistl
add
pop
or
clc
xchg
mov
xor
jge
xchg
ror
xlat
xchg
add
push
pop
lock
jne
mov
dec
jae
jmp
ds
cmp
ljmp
sahf
pop
jmp
out
mov
les
testl
xchg
leave
mov
mov
push
or
lea
dec
inc
dec
es
mov
cs
sbb
es
movsl
cmp
mov
cmp
aam
pop
mov
xchg
cmp
pop
inc
mov
fyl2x
aas
clc
xor
xchg
inc
out
pushl
aaa
and
pop
rcrb
pop
insb
pop
jbe
hlt
mov
in
dec
mov
subb
push
add
out
sar
aaa
mov
xchg
jb
iret
out
scas
sbb
clc
lods
pop
sub
inc
in
fstl
xorb
imul
pop
sarl
mov
inc
jnp
int3
push
inc
xor
ror
cs
push
cmp
jl
es
push
and
call
aad
addl
xor
stos
pop
sbb
stos
mov
inc
cmp
movsl
inc
mov
pop
mov
cld
es
aas
in
add
push
add
stos
aam
insb
in
mov
stos
jb
icebp
gs
or
stos
clc
out
fwait
adc
outsb
pop
or
aad
cmp
pusha
out
jmp
push
stos
mov
mov
mov
test
dec
inc
lods
aas
mov
sbb
dec
fwait
arpl
mov
adc
sbb
sub
scas
pop
dec
sub
addb
pop
into
and
push
and
std
mov
gs
jmp
mov
inc
into
xchg
jp
dec
fsubs
adc
dec
hlt
jnp
fcomps
mov
ss
add
ja
movl
adc
xchg
and
daa
sbb
dec
test
out
xlat
cmp
jmp
pop
enter
test
les
jne
add
and
int3
sbb
or
dec
lods
stos
out
lods
xchg
mov
hlt
data16
lock
std
xchg
and
add
test
rorb
gs
pushl
mov
in
jno
shll
scas
in
shlb
sahf
popa
data16
clc
push
sbb
lods
scas
or
and
iret
jecxz
xor
push
or
xchg
jg
xchg
xchg
add
jg
mov
jns
xchg
pop
fldcw
leave
in
cmpb
insb
jmp
cmp
cli
std
lock
mov
clc
adc
mov
adc
shrb
pop
xchg
test
mov
push
jbe
test
out
insl
sub
push
xor
lock
pop
enter
fmuls
stc
pop
inc
cwtl
addr16
test
cltd
add
sbb
inc
aas
sti
mov
adc
and
dec
mov
xor
push
and
dec
ljmp
loop
aaa
cmp
cltd
dec
xor
xchg
cmpl
test
lock
pushf
inc
dec
or
sarb
adc
mov
std
add
and
fstpt
cltd
inc
in
bound
cmpsb
lret
and
adc
push
push
bound
ss
imul
loopne
adc
lret
jmp
ja
or
loope
cmp
dec
cmp
and
out
imul
inc
into
out
fs
pop
xchg
sub
lock
sbb
pop
mov
ret
mov
sbb
stc
pop
dec
push
adc
aas
or
sbb
cmpsb
mov
push
gs
jl
arpl
aad
push
dec
stos
fsts
scas
out
rcrb
inc
pop
cmp
das
cli
test
nop
pop
mov
cmp
gs
sbb
push
pusha
in
lods
cwtl
adc
inc
mov
cs
dec
push
mov
inc
ljmp
stos
aaa
dec
cmpsb
push
leave
xchg
push
sbb
icebp
lea
xor
pop
pop
iret
xor
cld
test
add
push
sbb
iret
sub
jp
mov
sbb
insl
dec
mov
add
fcompl
or
in
aam
adc
fildl
test
ja
jmp
stos
sbb
insb
push
fnstenv
mov
mov
outsl
bound
fcoml
adcl
stc
out
lcall
popf
and
in
loopne
jl
imul
repnz
pop
jecxz
ret
lock
push
push
add
mov
leave
fidivl
inc
inc
adc
movsb
xchg
inc
into
das
mov
cmp
jle
loop
xor
cli
sbb
data16
inc
fwait
sbb
ret
jp
inc
mov
ds
mov
jne
pop
dec
ds
loope
fnstsw
push
mov
enter
or
mov
sub
fldcw
bound
mov
or
es
frstpm(287
cwtl
idiv
and
fwait
mov
clc
stos
fcmove
mov
divb
xor
push
arpl
out
push
in
fisubrl
inc
inc
push
add
lods
push
scas
sub
ss
jbe
push
push
cmpsl
test
pop
out
push
in
dec
outsb
scas
or
sub
mov
aas
sub
mov
repnz
stos
push
add
inc
mov
hlt
fcomp
xor
addb
xchg
sahf
stos
lods
sbb
mov
nop
xchg
pop
sbb
dec
imul
jecxz
lods
mov
inc
mov
add
lcall
mov
pop
add
and
popf
enter
idivl
cld
loope
test
mov
mov
ret
and
xor
cmpsb
jno
repz
and
mov
ret
ss
aad
cltd
and
push
js
div
push
jle
loopne
cld
inc
jg
lcall
pop
mov
divl
adc
mov
jge
inc
stos
daa
sub
and
mov
xchg
push
test
mov
dec
cmp
outsb
mov
loop
dec
add
loopne
aad
lahf
aas
or
pop
push
sub
mov
jo
inc
nop
xor
or
sbb
je
lret
lds
xlat
dec
and
iret
addr16
adcb
mov
xor
iret
pop
add
push
int3
test
out
dec
sub
arpl
push
pop
cs
je
mov
xor
rorb
push
dec
cmp
adc
es
jae
push
das
leave
and
xor
arpl
outsb
dec
leave
test
jo
xchg
dec
mov
scas
rclb
shll
mov
xchg
mov
jae
out
out
ja
mov
les
pop
push
fstl
mov
mov
sbb
jb
adc
roll
mov
addl
cmp
out
cmp
pop
pop
push
jb
call
adcb
mov
cmpsl
xchg
jo
jl
mov
les
pop
ss
pop
fbld
pusha
mov
filds
jo
mov
xor
xchg
dec
jmp
dec
cmc
repz
cmpsb
pop
mov
and
adc
pop
mov
xchg
sub
sub
cld
mov
mov
ret
sub
cmp
push
jns
cmp
cmp
sub
sbb
or
int3
mov
mov
mov
test
xchg
xor
mov
sub
repnz
sti
mov
dec
aas
aad
mov
fstpt
mov
push
jae
lcall
pusha
test
sub
sub
inc
and
pusha
or
pop
dec
stos
cwtl
inc
or
cmp
cmp
imul
mov
adc
repz
pushf
dec
or
fwait
inc
xlat
jno
pop
mov
mov
int
dec
mov
and
sub
popa
xorl
call
cmpsb
sbb
shlb
aaa
cmp
cwtl
aam
sub
mov
push
or
scas
icebp
push
test
inc
push
andl
push
frstor
xor
mov
jmp
jge
pop
and
add
popa
xchg
mov
in
loopne
mov
mov
cwtl
popa
nopl
ljmp
sar
adc
add
cltd
xchg
pop
push
aas
sbb
fidivrs
pop
jp
adc
xchg
or
aas
mov
outsb
insl
enter
icebp
shlb
mov
je
insl
shlb
andl
jge
js
repnz
push
xor
ror
jno
xchg
xchg
mov
pop
pop
sbb
mov
adc
pop
mov
aad
call
insb
loope
ss
push
pop
outsb
inc
jns
mov
rolb
subb
mov
fdiv
test
les
sbb
push
mov
push
mov
mov
jg
cmp
test
pop
and
les
aaa
repz
call
dec
cltd
push
adc
and
je
sbb
sbb
xchg
je
jl
pop
notw
js
push
cmpsl
adc
dec
xchg
jmp
rclb
inc
mov
or
dec
ja
out
mov
push
lahf
shrb
inc
mov
pop
push
dec
dec
xor
movsb
loop
loop
cmc
push
xchg
movsb
mov
addr16
mov
aam
movb
push
out
or
jmp
shll
pushf
insb
and
js
leave
in
push
sub
xchg
fildl
sbb
inc
fists
aas
sahf
and
inc
int3
mov
test
addb
pop
pop
jb
lods
shll
add
sbb
or
std
jp
mov
add
fucomip
add
pop
loopne
in
push
pop
in
sar
xor
mov
call
sbb
addl
aas
sbb
cltd
cmc
mov
insl
adc
mov
in
movsl
aam
es
adc
inc
sarb
mov
cmpb
and
adc
push
and
test
mov
dec
loope
enter
fsts
nop
mov
das
sbb
aas
sti
cmpsl
ljmp
popf
mov
cmpsl
and
jmp
mov
mov
out
xchg
sbb
fstpl
shrb
add
test
pop
mov
loope
sub
neg
je
pop
mov
mov
mov
xchg
lea
cmc
mov
jnp,pn
cmp
inc
iret
push
lret
insb
adc
fnstcw
ljmp
outsl
out
into
cmp
inc
mov
push
icebp
call
lods
in
es
jb
push
fidivrs
cmp
or
dec
popa
repz
lahf
inc
insb
push
fs
push
sbb
pop
imul
jnp
sbb
test
popf
js
mov
repnz
xor
pop
aaa
lds
ds
adc
into
jmp
push
pushf
repz
fisubs
pusha
call
and
imul
mov
push
mov
out
imul
in
pop
std
ds
and
stos
cmp
push
in
movsl
stos
test
mov
cld
xlat
cli
xor
fldl
mov
inc
das
ja
sub
jno
or
testb
inc
gs
sbb
cli
test
adc
pop
repnz
shr
push
pusha
mov
js
dec
ljmp
fistpll
lret
xor
lock
push
push
jo
add
sahf
ds
mov
test
icebp
insl
sub
xchg
nop
int
push
jg
ljmp
cwtl
dec
icebp
and
test
inc
gs
dec
int3
and
and
lds
xor
xchg
mov
int3
jle
fadd
pop
pushf
push
rcll
or
int
cltd
jbe
mov
int3
mov
add
or
jmp
imul
int
pop
lods
sbb
rcrb
push
or
adc
lods
inc
jg
pop
lock
cmp
fists
xchg
xor
xor
sbb
mov
sbb
aam
out
ss
xor
cmp
push
popa
hlt
dec
mov
xor
jne
cs
aad
std
jmp
lret
lret
jbe
xor
cmp
imul
sbb
das
and
aad
test
pop
jb
cmp
xchg
mov
adc
inc
inc
int3
add
jg
test
aam
mov
add
incl
out
push
inc
push
jb
arpl
cld
dec
push
mov
mov
lods
gs
insb
inc
push
icebp
aaa
inc
push
hlt
pop
movb
pop
adc
inc
cmp
scas
xchg
addb
dec
dec
test
add
inc
adc
add
fldenv
mov
gs
xchg
out
sbb
inc
popf
loopne
cmp
push
in
outsb
je
dec
loop
jmp
inc
mov
filds
push
sbb
add
fcompl
xchg
sbb
cmp
loopne
cwtl
push
push
dec
dec
mov
popf
pop
rorb
dec
and
add
pop
out
jo
in
push
mov
mov
into
andl
pop
stos
adc
mov
push
fdivp
sub
movb
mov
lods
test
test
add
or
mov
push
fld
push
xchg
stos
into
xorb
pop
dec
daa
sahf
and
sub
jbe
stc
lea
sub
xchg
mov
mov
push
daa
pop
cli
cmpl
inc
adcl
sub
out
sbbb
sbb
push
cmp
shll
in
push
popf
cltd
unpcklps
xorb
or
push
mov
dec
xor
push
sarb
mov
mov
movsl
mov
mov
stos
xchg
lahf
shrd
std
cmpsb
ss
adc
fdivr
data16
inc
daa
lret
stos
xchg
and
xchg
cmp
sub
dec
scas
mov
popa
push
inc
out
movsl
mov
push
popf
enter
mov
pop
push
lret
pop
xchg
or
push
inc
gs
pop
push
lods
lcall
clc
in
pop
add
das
orl
push
idivl
iret
inc
mov
outsb
jb
add
aaa
cltd
das
push
xor
dec
sahf
roll
mov
in
scas
aaa
and
sbb
push
cld
inc
js
mov
jg
jle
je
push
mov
ds
xor
in
lret
stc
push
fstpl
out
aam
leave
hlt
imulb
test
xchg
cmp
popl
cli
sub
sbb
adc
and
ret
repnz
flds
pop
add
dec
rorl
mov
and
xor
xchg
sti
xchg
xchg
xor
imul
mov
enter
jmp
icebp
jp
int3
push
cltd
int3
and
cs
dec
dec
xchg
pop
cmp
out
cmp
test
scas
popa
mov
movsb
jecxz
aam
add
mov
and
mov
pop
cmp
cld
and
mov
gs
jl
sub
cmp
jg
sbbb
push
xchg
sub
xor
mov
xchg
orl
shrb
push
adc
mov
jg
jl
loopne
xchg
cmp
aas
out
inc
pop
int3
mov
call
rcrb
inc
xor
fisubrs
inc
xchg
xchg
or
ret
cmp
sti
sub
mov
aas
push
push
fildll
test
sbb
imul
dec
adc
and
cmovs
or
and
pop
jp
xchg
mov
mov
pop
iret
xchg
or
in
mov
out
dec
andl
pushf
out
cmpsb
xchg
add
pop
cmp
pop
add
daa
dec
hlt
test
jmp
mov
push
scas
sbb
lds
insl
adc
push
cmp
xchg
sub
stos
sbb
adc
dec
lret
jle
je
stc
cs
mov
xchg
jb
pop
and
shl
mov
rcll
and
mov
insl
test
hlt
sub
sub
popa
push
clc
mov
xlat
sti
dec
mov
mov
jae
jno
xchg
mov
inc
mov
lret
stos
sahf
dec
xor
and
ret
insl
fnsave
ja
sbb
mov
in
fstpl
jae
xchg
push
mov
inc
add
jmp
jb
sbb
aaa
cmp
sub
aad
sbb
loop
aam
cltd
push
leave
call
pop
fstpt
lret
jp
jne
test
inc
into
xor
lret
aaa
xlat
mov
ret
fistpll
add
lret
cs
sbb
lods
fisttpl
rcrl
outsl
test
loop
data16
insb
mov
xchg
adc
into
movsl
ss
pop
cmpb
xor
or
jecxz
push
mov
loope
ret
pop
mov
repnz
sub
adc
int
popf
jg
dec
mov
dec
int3
fs
mov
add
leave
sbb
push
xor
std
imul
cmp
cmpsl
mov
in
test
popf
bound
mov
aaa
jle
test
cs
cmp
jp
mov
push
sbb
popa
sahf
dec
add
sbb
fs
xor
daa
movsl
adc
imul
mov
or
mov
loope
imul
jns
hlt
cli
mov
lret
pop
pop
pop
adc
jmp
adc
imul
adc
sbb
lcall
popf
sahf
cmpsb
rcrb
ret
aaa
or
stc
sub
pop
inc
repnz
xchg
xor
popa
out
xchg
push
jae
adc
mov
mov
inc
cmc
jg
jg
loop
test
cwtl
xchg
dec
mov
add
aas
xor
in
imul
adc
inc
ja
iret
nop
stos
mov
ljmp
mov
mov
mov
dec
push
mov
dec
test
xchg
mov
mov
sahf
pop
insb
mov
ret
and
push
ffreep
inc
rcr
movsb
and
out
sbb
sbb
inc
frstor
movsb
aas
popf
movsl
inc
sub
aam
nop
arpl
sub
shl
fisubrs
out
pop
inc
jo
mov
dec
push
pop
ljmp
fsubr
add
push
test
lret
dec
imul
push
rolb
shlb
daa
mov
test
out
push
cld
xor
or
fdiv
adc
inc
dec
js
jp
out
inc
jae
sbb
aam
jo
lahf
lahf
roll
sub
and
roll
data16
or
std
mov
push
cli
test
xor
leave
fs
les
rolb
aas
push
dec
mov
lahf
insl
push
mov
loop
jo
or
iret
xor
dec
arpl
mov
mov
hlt
lret
cmpsb
pusha
mov
push
js
xchg
rolb
or
push
and
loope
jmp
push
test
fsubr
pushf
mov
decl
xchg
xchg
cwtl
jae
andl
xchg
jb
xchg
das
xchg
mov
ds
xor
push
lds
add
out
fs
shr
jle
mov
loope
fisubrs
inc
jle
add
jae
aaa
cmp
mov
push
push
push
push
mov
in
or
or
rorl
pop
fcompl
repz
or
test
xchg
shufps
jp
sarl
jecxz
or
lea
sub
out
dec
clc
and
sub
int
in
mov
mov
cltd
movsb
sbb
push
loop
mov
jns
repnz
fmulp
mov
popa
push
fnstcw
arpl
cwtl
push
adc
cwtl
movsb
call
ljmp
or
sbb
add
sub
scas
bound
pop
rcl
popa
push
rcr
adc
xchg
outsb
xchg
fidivl
adc
xchg
mov
jp
jae
cmp
in
or
out
pop
jne
inc
in
lret
jb
dec
dec
jp
mov
sub
std
into
decl
adc
mov
jge
sub
push
imul
dec
cwtl
std
xchg
int
and
imul
stos
imul
pop
icebp
sub
push
enter
test
sub
out
xchg
daa
mov
enter
or
cmpb
imul
cmp
inc
bound
cwtl
mov
mov
adc
sbb
ds
add
test
imul
jno
pop
stos
pop
mov
push
dec
pop
dec
outsb
pop
inc
inc
loope
lea
and
stos
adc
mov
xor
mov
nop
pop
test
test
fmull
stos
jl
mov
or
mov
fisttpl
adcl
xchg
lret
jle
insb
dec
adc
in
xor
add
and
leave
pop
pop
jmp
into
sub
pop
cmc
push
xor
fldcw
push
add
fnstsw
or
movsb
sub
pop
and
xchg
scas
pop
inc
adc
sub
pop
aad
push
clc
scas
das
xor
mov
movsl
jne
rcr
data16
sub
xchg
jl
shll
sub
adc
mov
jmp
movsl
in
xchg
shlb
int
add
ret
dec
and
mov
cs
adc
lret
xor
stos
pop
decb
test
mov
pop
mov
add
xchg
inc
js
mov
out
sub
lahf
in
sub
pop
fnstenv
or
pop
jnp
ljmp
dec
cld
mov
scas
mov
test
gs
ret
pop
push
fistpl
les
bound
inc
ss
rol
call
add
scas
imul
aaa
outsb
or
in
mov
jbe
ret
shll
loop
mov
pop
xchg
fnstcw
clc
inc
xor
mov
pop
push
lea
repz
push
adc
xchg
cmp
mov
lret
ret
insl
fnstsw
int3
out
inc
or
loopne
repz
pop
cmova
cmp
ljmp
push
mov
mov
cmp
push
pop
jge
inc
or
pop
mov
int
aam
testb
stc
clc
jmp
hlt
dec
push
sub
jo
mov
out
adc
push
insl
add
sub
inc
cmpsb
loop
fmul
bound
mov
lds
gs
fcmovnbe
leave
mov
lret
push
cmp
shrl
inc
push
inc
push
or
cmp
jmp
xchg
add
xor
push
movsb
popw
pop
jecxz
inc
mov
fwait
pushf
cmp
fdivp
xlat
mov
add
into
mov
push
daa
stc
dec
mov
sub
mov
push
mov
ficomps
cmp
mov
xor
xor
pop
inc
ret
pop
mov
mov
cmpsl
lock
enter
add
es
xor
mov
pushf
push
inc
jnp
cmpsl
add
mov
adc
roll
xor
and
in
and
enter
xchg
push
sbb
dec
inc
scas
adc
ds
push
or
negl
xor
push
shrb
dec
imul
sbb
xchg
int3
movsb
add
mov
xlat
cmp
jl
add
sub
test
sub
sbbl
std
xchg
imul
xchg
and
pop
aaa
add
jmp
jns
rcrb
pop
inc
popf
in
fsubs
cs
mov
pop
inc
xor
scas
jnp
xchg
mov
inc
or
in
loope
cmc
jp
loopne
pop
sbb
sbb
mov
jae
push
test
dec
leave
cwtl
push
mov
adc
inc
sub
xchg
aad
or
aaa
xchg
fisttps
imul
dec
inc
sub
push
lea
jge
cmpsl
pop
inc
push
stos
les
in
pushl
repz
pop
test
xchg
cmpsl
push
pop
rorb
dec
push
push
dec
jl
inc
je
popa
rcll
repnz
inc
lcall
ret
fdivr
jg
sti
jns
clc
loopne
ret
jle
mov
bound
xchg
xor
jp
push
call
inc
inc
jl
incl
sbb
ljmp
push
mov
lods
jne
pop
push
inc
mov
repz
jmp
enter
sbb
lock
mov
xchg
xor
sub
mov
adc
fnstcw
push
jne
cmp
cmp
test
inc
or
and
inc
push
or
rcrb
lahf
jge
mov
jp
cld
movsb
enter
pop
cmp
or
pop
ja
cld
push
out
negb
xchg
or
pushf
int3
adc
and
xlat
arpl
push
adc
es
pop
repnz
pop
fwait
imul
and
pop
xor
jne
mov
lret
push
push
jp
mov
mov
jle,pt
jae
sarb
ret
lds
add
loop
adc
jge
xor
pushf
cmp
inc
sub
rcr
inc
or
addr16
or
test
leave
dec
push
popf
xor
and
inc
jne
loopne
movsb
outsl
sarb
push
ljmp
cs
jge
lods
dec
in
sub
fldcw
jg
test
cmp
ficoml
dec
pusha
mov
jle
jb
adc
sbb
test
int
loope
pop
push
fcmovne
cmp
mov
scas
fwait
mov
or
les
fdivl
addb
fucomp
add
add
inc
push
lea
sti
mulb
ds
ret
cltd
cmp
and
push
adc
cs
pop
jmp
dec
jbe
mov
sub
jp
popf
mov
lods
inc
daa
lods
sbbl
in
dec
mov
loop
imul
cld
ret
mov
ljmp
jo
mov
incb
call
inc
mov
jo
mov
add
dec
daa
sub
aas
hlt
cmp
subl
ljmp
adc
and
cmp
scas
movsb
out
pop
ja
sub
aad
cltd
sub
xchg
xchg
mov
rorl
jmp
stos
nop
pushf
cmpsl
cltd
cmp
push
push
orb
nop
imul
lods
inc
enter
imul
test
fidivl
push
jp
inc
ljmp
pop
enter
jb
call
leave
sbb
hlt
negb
pusha
inc
inc
jge
add
sbb
sti
inc
jne
cmp
lea
bound
add
push
jmp
mov
push
pop
pop
pop
lahf
and
outsl
add
sub
aam
xchg
inc
pop
push
rorl
inc
xchg
jae
adc
adc
sbb
and
pop
out
pop
repnz
jecxz
pop
jne
insb
push
rol
dec
ret
adc
dec
lds
add
das
mov
sub
add
incl
jbe,pt
pop
push
mov
repz
sbb
stos
mov
mov
jp
int
sub
and
int
cmp
ss
inc
ret
test
mov
nop
into
mov
add
xor
lods
dec
lcall
imul
lcall
scas
out
pop
insl
cli
xchg
push
ficoml
add
sub
lock
mov
add
lock
mov
fcmovbe
mov
xlat
or
pushf
jecxz
dec
pmullw
incl
adc
aas
push
int
push
sub
cmp
gs
mov
mov
adc
mov
cmp
imul
ds
lock
outsb
push
mov
inc
xchg
push
and
loope
xchg
aad
pushf
xchg
pop
xor
lea
inc
or
push
fimull
aas
cmpb
xchg
push
and
mov
pushf
jb
lcall
mov
dec
fnstsw
xchg
insb
inc
mov
mov
jge
xor
adc
jnp
int3
xchg
movsl
jb
je
shrb
imul
cmp
int
push
mov
push
fldl
and
mov
cmc
mov
xor
mov
or
jnp
mov
xchg
add
add
mov
pop
in
jb
cli
mov
sahf
mov
mov
lods
add
mov
fists
hlt
push
lock
pop
inc
rcrl
push
push
movsb
mov
mov
xor
mov
cld
lods
fwait
inc
lock
rol
leave
inc
je
arpl
std
mov
test
mov
push
dec
mov
mov
popf
stos
gs
dec
push
sub
in
je
ljmpw
addr16
pusha
xorl
xor
inc
xlat
mov
cmpsl
sub
and
pop
cmp
push
inc
je
shll
sbb
pop
lahf
sti
popf
data16
fmuls
shlb
cmpsb
lret
fs
pop
in
mov
xor
inc
test
lods
aas
repz
pop
push
popa
sub
fidivrs
shr
mov
int3
lret
loope
xchg
call
xor
push
or
aad
les
jb
lret
ja
xor
nop
inc
ficomps
and
xchg
or
aad
mov
cld
mov
pusha
cld
push
mov
js
xlat
pop
pushf
rcr
frstor
enter
push
pop
aaa
or
fs
test
xor
push
xchg
or
and
fsubrl
sub
push
dec
dec
adc
loopne
adc
mov
out
mov
test
imul
add
loop
mov
mov
lea
push
sbb
and
xlat
mov
in
sbb
test
loope
cmp
push
adc
jecxz
subb
stos
mov
fwait
xchg
lret
cmp
and
xchg
and
dec
push
insb
out
lret
xchg
pop
jg
int3
sub
and
cmp
dec
call
jns
or
call
cmpsl
or
dec
add
lock
jp
bound
fmull
ret
xor
add
push
jne
stos
or
xor
xchg
pop
sub
sbb
push
sbb
dec
sub
outsb
jne
push
sub
dec
lods
out
dec
and
imul
dec
xchg
es
cmpsl
xor
sbb
fstpt
push
cmp
or
mov
jmp
add
jb
aas
or
dec
out
aas
push
sbb
add
push
stos
cmp
mov
adc
push
leave
sbb
out
inc
mov
push
and
mov
stos
cltd
mov
or
and
xlat
mov
ljmp
push
inc
mov
mov
hlt
shl
daa
in
jne,pn
inc
pop
jo
aaa
push
lods
je
fcomps
push
mov
add
decl
cli
stos
dec
and
mov
gs
lock
sub
cmpsl
dec
inc
or
adc
mov
lcall
dec
mov
pop
xchg
xchg
jbe
arpl
inc
and
std
push
push
lahf
hlt
jbe
mov
imul
dec
cmp
lcall
jmp
pop
pop
inc
adc
lods
addr16
jae
or
fbld
cmpsl
fidivrs
xchg
fstpt
arpl
cmpsl
mov
mov
aad
xor
pushf
xlat
mov
dec
dec
inc
dec
int
jle
cmp
repnz
outsb
add
and
dec
jl
mov
loopne
das
pusha
sti
out
mov
sbb
pushf
gs
rclb
paddsb
pusha
jl
pusha
js
ret
push
push
fstpl
xchg
sub
push
jg,pt
lds
xlat
xlat
mov
adc
pop
fiadds
jno
les
xor
imul
jns
rorl
dec
and
jbe
rcll
dec
icebp
pop
sahf
push
sbb
cmp
sahf
pop
out
lock
sbb
stc
leave
dec
inc
repnz
loopne
mov
or
rcr
aad
hlt
lea
pop
rcr
or
dec
and
test
aas
inc
xchg
icebp
cs
shlb
mov
push
fnsave
mov
push
mov
cli
stc
pop
outsl
lcall
and
mov
sub
cmp
mov
fisttpl
ds
mov
jmp
xor
jmp
push
dec
and
pop
mov
fdivs
les
addl
inc
push
dec
xchg
and
jne
jae
inc
sbb
dec
sub
outsb
sarb
pop
dec
out
inc
sbb
ja
rclb
test
hlt
mov
mov
icebp
push
jns
mov
push
insl
daa
sub
lods
gs
daa
scas
cli
push
shrl
xchg
xchg
mov
ljmp
lcall
jns
movsl
int
stos
mov
aam
xlat
or
jecxz
cmp
pop
mov
and
call
loopne
lods
loope
pop
xlat
add
sub
sbb
inc
scas
jg
sbb
xchg
mov
jno
out
loop
out
mov
lahf
mov
mov
std
arpl
mov
shr
sbb
cwtl
mov
inc
or
pop
je
add
stc
inc
gs
jmp
mov
xor
movl
fisubs
jge
sbb
pop
in
mov
xchg
ret
adc
sbb
popf
jg
mov
add
push
pop
cltd
loopne
test
aas
add
nop
mov
sbb
in
or
mov
mov
adc
sub
dec
xchg
fiaddl
inc
inc
xchg
push
lods
movsb
sub
mov
mov
fimuls
psubusw
rorl
or
pop
ret
movsb
inc
clc
lds
les
test
pop
int3
push
xchg
sbbl
pop
or
mov
sub
jp
loop
add
mov
inc
lea
dec
xchg
add
adc
sub
lds
push
add
jb
ret
jge
lods
sub
cmpsb
es
and
mov
mov
pushf
sahf
xchg
out
xchg
std
mov
lods
out
jb
fidivrs
adc
nop
and
mov
divb
push
or
getsec
pop
mov
add
xlat
inc
adc
pusha
popa
sbb
mov
frstor
outsb
sub
movsb
repnz
and
das
or
mov
xchg
sbb
mov
jo
cmp
jmp
pop
das
repnz
lret
or
shl
lods
adc
fcomps
aas
push
cmp
jge
sahf
lods
fcoml
push
shll
adc
jmp
fnstcw
outsl
sub
fcmovnb
bound
in
sbb
bound
jbe
add
scas
pushf
jmp
sahf
sbb
jg
push
call
repz
sbb
mov
mov
shl
sub
in
test
push
out
repnz
in
adc
dec
mov
or
sbb
fistl
push
ds
inc
push
dec
into
and
push
sbb
lret
xchg
int
sahf
cmp
inc
pop
and
and
repz
push
jae
popf
data16
mov
shlb
movsl
jo
dec
in
scas
sub
mov
shll
mov
push
cmp
in
int
mov
rcll
push
bound
rol
push
mov
fcomi
loopne
mov
nop
pop
and
cmp
mov
jmp
jge
into
int
push
test
or
sbb
pop
and
pop
inc
pop
cmp
pop
aam
fnstenv
test
mov
fsubl
xor
cmp
xlat
xorl
mov
movsb
jne
push
adc
in
xchg
push
testb
iret
push
jecxz
jb
sti
and
movsb
sbb
insl
fs
daa
hlt
mov
stc
push
nop
cmc
outsl
les
ja
push
loopne
cmp
adcb
popa
mov
and
sub
data16
in
rcrl
cwtl
ss
and
dec
push
clc
add
test
adc
sbb
or
sub
jo
adc
jmp
xor
lods
adc
lea
jecxz
fistl
nop
push
jmp
int3
mov
mov
sub
xchg
cmp
cmpl
jp
es
leave
in
inc
nop
loop
or
lea
adc
push
and
test
iret
sahf
sbb
lahf
mov
or
shll
cmpsb
mov
dec
dec
out
fisubrl
or
loopne
lret
add
out
mov
sbbb
lods
xchg
mulb
arpl
xor
jg
cli
stos
xchg
jecxz
jle
and
add
cwtl
mov
mov
mov
jb
inc
cli
cmpsb
cs
iret
cmpsl
loop
mov
jle
mov
je
scas
dec
ja
mov
dec
adc
out
fwait
pop
arpl
xor
and
clc
cmc
mov
push
fdivl
ret
iret
jne
test
roll
mov
xor
fldt
sub
pop
push
lods
in
mov
imul
into
inc
xor
cltd
mov
stos
insl
fisubrs
pop
cli
ret
fstpl
les
hlt
das
popa
clc
push
fsubl
xor
orl
je
addr16
lods
shll
arpl
imul
in
fcomps
lret
jl
outsb
sub
xor
shll
mov
mov
inc
lahf
adc
mov
std
jmp
jmp
xchg
dec
fiaddl
gs
pop
push
rcrb
sub
lods
loop
stos
jb
pop
fcompl
and
cltd
std
ret
sub
pop
lock
das
jae
push
or
loopne
scas
pop
leave
fcoml
dec
xor
jae
cmpsl
int
cmp
out
adc
push
jae
inc
push
sahf
fwait
push
in
sub
fbstp
dec
sub
iret
rorb
pop
in
mov
mov
mov
ret
test
dec
iret
fstpt
pushf
ds
shll
mov
mov
in
push
decb
and
push
inc
dec
xor
xchg
mov
pop
and
jle
sbb
adc
andb
sti
push
push
lcall
mov
int3
cs
and
mov
mov
test
pop
add
out
test
push
fisubrs
pop
out
scas
cmc
lcall
aas
mov
push
or
xor
sub
lds
cmovp
cs
mov
jb
aaa
pop
inc
std
sub
and
pusha
testb
mov
subb
call
cltd
mov
cmpsl
int
not
jbe
inc
out
ret
cld
movsb
or
cmp
inc
cwtl
pop
push
xorb
aaa
mov
dec
negl
orb
das
in
sbb
lods
test
inc
cmp
add
nop
cmpsl
les
mov
jecxz
fistpl
or
fbstp
fidivrs
ds
and
call
inc
mov
mov
pop
jae
pop
jg
jecxz
mov
pop
scas
xor
mov
int
les
popf
aas
jl
les
cmc
fcoms
sbb
test
dec
rcrl
daa
cltd
push
ret
pushf
push
mov
pushf
ds
shll
adc
imulb
cmp
pop
jne
jae
pop
sbb
lock
pop
xchg
mov
dec
insl
add
leave
and
xchg
imul
cs
pop
push
aas
dec
roll
xor
loop
mul
das
xor
or
cmpsb
and
fldl
xor
mov
inc
loop
mov
inc
je
movsb
xchg
imul
imul
mov
or
cmpsb
mov
sub
pusha
pop
xchg
in
sbb
addr16
int
and
jmp
test
or
nop
adc
sbb
aas
jo
sbb
inc
sbb
pusha
and
adc
daa
aaa
or
jno
mov
and
andb
lods
sbb
sbb
push
jl
movl
xor
sbb
adc
mov
xor
adc
sti
jae
cli
xchg
inc
gs
cli
les
mov
lds
jp
arpl
pop
sahf
test
ss
adc
inc
ds
pop
and
jecxz
or
sbbb
addr16
pop
jecxz
sub
popf
fwait
shr
push
sbb
mov
push
jne
test
mov
cmp
lods
push
xor
push
ja
cmp
test
stos
sarb
pop
inc
orl
inc
push
es
push
les
xchg
mov
icebp
into
adc
add
pop
mov
mov
lods
mov
std
dec
es
lock
mov
xchg
jbe
add
sbb
cmp
imul
or
inc
js
out
fisubrl
fcomip
jb
xchg
or
pop
xor
aad
cmp
test
aas
pop
jmp
or
mov
stos
outsb
jnp
jmp
jp
test
cltd
int
aaa
add
push
andb
cmp
mull
lea
test
ret
xchg
dec
push
or
sub
insl
push
bound
push
push
sub
in
mov
sub
add
add
mov
mov
mov
loopne
mov
dec
xor
fsubr
divl
add
xor
jne
enter
aaa
flds
or
mov
mov
push
jg
sbb
mov
cmp
repnz
ljmp
repnz
jne
stos
or
adc
jae
pop
movl
mov
pop
popa
mov
bound
mov
sti
ret
fadds
in
sbb
or
xor
sub
jmp
and
fmull
add
dec
daa
sub
lea
sub
mov
out
inc
icebp
and
clc
mov
mov
add
lea
jmp
jecxz
inc
or
lret
pop
sub
inc
dec
leave
mov
pop
test
cmp
lods
pop
in
sbb
mov
mov
inc
push
xchg
data16
pusha
add
push
jle
or
push
inc
pop
push
popf
notl
inc
push
testl
cs
repnz
mov
cmpsb
test
add
js
fsubrs
addr16
jmp
mov
jge
push
dec
and
sub
fdivrp
pop
iret
add
test
fsubrl
jno
popa
adc
js
push
sahf
add
push
pusha
adc
fnstcw
cltd
cmpsb
and
into
movb
inc
rol
mov
movsl
ja
pushf
xchg
fnstenv
sub
fcmovnbe
dec
jecxz
mov
xchg
dec
cmp
jp
mov
jmp
nop
ret
mov
jmp
sti
cwtl
xchg
and
add
outsb
dec
rcll
mov
dec
dec
lods
sub
xchg
je
in
add
mov
loope
shlb
mov
ret
mov
push
push
out
stos
jle
imul
mov
xchg
movsb
sbbb
out
pop
int3
inc
in
in
pop
mov
lcall
cmp
lods
stos
lock
xchg
loop
jg
testl
data16
push
fnstsw
jl
jae
dec
pop
mov
and
push
adc
in
mov
cmp
dec
inc
adc
test
jbe
jp
addr16
sub
pop
jge
lret
adc
pop
mov
sti
fs
stos
movsb
push
adc
aas
ja
rcll
sarl
xchg
fadd
call
mov
mov
movsl
push
lret
mov
xor
sbb
mov
imul
loop
cmp
ja
shll
jle
lea
sbb
jg
mov
xchg
push
cmpsb
adc
dec
push
int3
testb
ljmp
lods
fistl
inc
arpl
mov
jp
push
std
jg
sub
cmp
xor
js
sbb
push
and
cld
rclb
mov
lahf
inc
popf
outsl
sub
scas
clc
or
sti
lret
bound
out
dec
dec
cmp
inc
inc
icebp
pop
test
adc
scas
mov
lcall
xor
scas
pop
test
jne
add
xchg
mov
sub
or
das
dec
rcrb
or
cmp
mov
mov
adc
adc
cmp
addr16
adc
nop
repz
and
mov
popf
imul
arpl
and
adc
fdivs
fldenv
adc
in
adc
push
lret
or
pop
push
mov
sbb
fcmovnb
outsb
mov
jge
imul
out
aad
and
mov
mov
pop
sbb
lahf
jge
xchg
add
push
pop
je
lods
ss
pop
repz
cmp
fdivrl
sbb
mov
dec
xor
jmp
shrl
push
lcall
fldenv
xchg
cltd
xchg
xchg
ltr
mov
jp
js
push
mov
sub
add
xor
sbb
cmp
dec
lahf
pop
sbb
push
test
adc
mov
xlat
adc
adc
cld
loopne
jge
sub
stos
jmp
out
xor
insl
push
sub
fwait
rorb
repz
xor
ss
cmpsl
mov
gs
inc
sub
sbb
adc
call
ss
push
lods
ss
ljmp
push
sbb
push
sub
shll
movsl
push
mov
inc
scas
mov
cmc
outsb
cmp
iret
shr
mov
jns
test
mov
shll
aad
int3
xchg
dec
aaa
cmp
aad
jmp
cmp
cld
std
push
test
cmc
xchg
in
mov
aam
mov
rcr
add
sbb
jl
xor
jne
mov
shrb
ja
lret
sbb
dec
ror
push
lods
mov
inc
mov
jo
and
or
inc
lret
cltd
lds
les
fcmovnb
push
add
lds
in
inc
dec
shrb
js
xchg
sub
pop
js
or
push
pop
hlt
mov
mov
xchg
jle
or
movsl
mov
test
stos
sub
gs
lods
xchg
movl
fdivrs
imul
sub
or
mov
test
cmpsl
mov
pusha
dec
sub
lock
fcmovu
out
bound
stos
leave
fildll
fisttps
dec
arpl
xor
push
push
and
add
test
cmp
dec
pop
jle
push
jne
or
add
add
in
mov
fwait
or
cmp
cmp
outsl
push
or
xchg
sbb
or
push
and
push
xchg
cmp
jo
test
subl
push
aaa
adc
dec
push
jns
repz
pop
lcall
lret
add
mov
jb
loope
xor
push
popw
cmp
les
mov
hlt
mov
mov
push
cmp
mov
cmp
mov
or
aas
mov
in
dec
xchg
jmp
add
cltd
cltd
mov
sbb
mov
inc
cmpsb
int3
adc
mov
aas
mov
andb
ja
lcall
sbb
xchg
jmp
call
sbb
jno
cmp
andl
push
cmpsb
jo
mov
mov
pop
js
or
jns
incb
scas
cmpb
push
pop
mov
cmp
sbb
sbb
fisubl
cmp
sti
pop
cli
imul
dec
loope
pop
popw
aam
sahf
or
cltd
add
sub
lret
xchg
loope
popa
mov
adc
push
mov
inc
mov
dec
sbb
rcr
inc
adc
movsb
and
xchg
fidivrs
rcll
pop
add
aas
out
cmp
pop
sub
pop
jnp
lods
cmp
popl
xor
xor
pop
iret
icebp
insl
cmp
pop
std
iret
pop
inc
sbbb
jp
push
mov
fistps
shlb
je
outsl
int3
mov
adc
out
lds
push
xorb
xor
push
scas
mov
pop
jnp
add
in
je
pop
dec
ret
add
sarb
jae
add
inc
repnz
cmp
pop
sbbl
and
loopne
ljmp
in
pop
sbb
sub
add
lcall
sbb
shl
je
rcrl
pop
cld
sbb
jecxz
xchg
repz
adc
loop,pn
aaa
cmp
adc
mov
aaa
call
mov
daa
xor
leave
lods
sub
push
adc
pop
inc
jnp
std
and
out
sarb
adc
mov
push
mov
mov
cmp
cmpsl
test
cs
adc
mov
gs
mov
sahf
mov
call
mov
sbb
sahf
movsl
add
mov
insb
lahf
cmp
sarl
adcl
cmp
pop
lret
out
mov
xchg
add
mov
sbb
lcall
emms
les
test
mov
rep
bound
push
sbb
lods
shr
lret
fisttps
xor
xchg
mov
mov
cmp
xchg
andb
sbb
or
pop
sbb
fiadds
or
jle
pop
pop
dec
push
mov
xor
aaa
xlat
scas
adc
mov
cmp
insb
cmp
rolb
inc
adc
jecxz
adc
sub
loop
xchg
mov
mov
jb
push
fwait
cmpsl
mov
and
xchg
jnp
rolb
testl
or
jno
in
test
sub
mov
push
cld
arpl
jl
xchg
mov
adc
xchg
cltd
xchg
in
xchg
adc
mov
adc
xchg
add
xor
in
add
sub
push
xchg
add
out
fidivrl
ror
fstpt
inc
insb
sub
filds
dec
cltd
popf
in
add
mov
shl
add
sbb
mov
mov
call
call
shlb
es
nop
inc
mov
pop
insl
inc
inc
mov
and
cltd
movsb
or
push
outsb
push
inc
dec
imul
bound
hlt
out
mov
fisttpll
adc
jle
sar
pop
push
fprem1
or
cwtl
push
shrl
jb
cmp
pusha
mov
pushf
aad
or
jne
inc
adc
jno
in
repz
aas
lcall
imul
out
push
push
xor
add
popa
scas
add
icebp
lods
push
sbb
xor
inc
adc
sbb
aam
loopne,pt
pop
aad
lfs
dec
bound
call
test
into
pop
xor
int3
aad
aas
into
enter
imul
stc
mov
mov
stc
cmpsl
xor
jb
out
mov
iret
or
jbe
repnz
fcoml
imul
jae
neg
xchg
das
lret
push
das
inc
ds
mov
sti
xchg
mov
mov
xchg
mov
stos
pushf
ror
xor
or
dec
nop
xchg
fwait
and
jne
or
cmc
mov
pop
jp
pop
outsb
push
idivb
mov
push
gs
outsb
test
lcall
mov
rcrb
fwait
mov
out
popa
ret
call
xor
xchg
push
adc
dec
test
rorb
in
lret
leave
dec
jg
sub
ret
fcmovne
sub
or
int3
xchg
imul
shl
sti
mov
mov
push
xchg
popf
xchg
scas
popa
movsb
bound
or
data16
cmp
test
pop
into
mov
mov
iret
in
xchg
lcall
sbb
lret
stc
mov
cmp
loope
cmp
lret
rcr
mov
push
mov
push
adc
inc
add
lock
pop
ds
lds
xchg
and
cmc
jmp
stos
cmp
arpl
pop
je
mov
sub
sub
std
call
cmc
idivl
adcl
push
imul
sub
scas
sub
cld
shl
sbb
ljmp
out
push
jb
push
cmpsb
imul
sbb
inc
cmp
jb
data16
ficomps
in
mov
jmp
mulb
enter
pusha
test
jb
and
sub
add
xor
addl
push
dec
ja
mov
stos
ds
lods
lcall
mov
adc
and
loope
adc
aad
mov
pop
in
or
xchg
and
dec
xor
mov
test
ljmp
push
cli
and
mov
fists
pop
cmp
sub
and
cmp
pop
xchg
xchg
lret
mov
xchg
movsb
or
enter
jge
js
fcomi
sbb
pop
repnz
cltd
lods
shlb
push
stos
cltd
mov
das
mov
mov
lea
ds
inc
rcrl
mov
push
xchg
out
sbb
push
cmp
sbb
pop
mov
aaa
push
iret
add
lods
or
sbb
and
dec
lea
aam
fs
jbe
push
jnp
sahf
xor
leave
je
ficomps
xor
scas
xor
subl
mov
fiaddl
lret
and
push
mov
out
add
sbb
xor
stos
bound
into
jl
fstpt
mov
and
push
xor
cs
mov
cmc
sbb
mov
in
jmp
aam
xchg
out
xor
push
aas
sbb
fists
ret
mov
out
mov
add
jae
out
les
call
andl
or
outsb
cwtl
xor
lods
sbb
test
mov
xchg
push
aaa
insl
scas
shl
mov
dec
dec
push
add
push
int3
pop
lret
fsubrp
test
cmp
mov
dec
int
roll
push
cmp
xchg
sarb
lahf
pop
lods
xlat
mov
repnz
inc
cmp
mov
outsb
add
sub
loope
gs
add
daa
ss
ljmp
xchg
xchg
mov
xchg
out
in
dec
in
mov
mov
addr16
and
movsb
xor
sub
dec
pop
xor
mov
pop
mov
mov
and
arpl
negl
lea
jae
test
daa
packuswb
push
jecxz
or
repnz
cli
in
shl
cmc
cli
jle
lahf
out
stos
dec
mov
lods
shlb
push
dec
sbb
aas
dec
fldenv
xchg
mov
mov
in
lds
mov
dec
ss
sti
mov
inc
int
xor
in
xor
xor
mov
sub
lahf
imul
daa
and
sub
push
xor
pusha
or
xorl
jecxz
sbb
les
xlat
dec
push
adc
push
mov
insl
std
adc
and
inc
cmp
pop
dec
stos
popf
inc
and
mov
imul
in
xchg
lahf
imul
lds
dec
out
or
rcl
std
adc
mov
fidivl
insb
add
add
inc
mov
test
fstps
lcall
xchg
push
sub
je
xchg
inc
fldcw
pop
xchg
jb
ret
xchg
adc
jno
loop
lret
int
test
cld
jnp
rclb
addr16
and
xor
aam
add
add
test
mov
jge
jnp
mov
add
jl
and
mov
mov
pop
hlt
pop
cmp
mov
inc
and
loop
iret
imul
and
mov
mov
and
push
hlt
push
fcmovnb
test
ficoms
cli
clc
out
dec
sub
push
test
call
sub
pop
movsl
and
movsl
js
or
adc
and
cmp
lret
inc
xchg
les
cmp
movsl
push
fnstenv
mov
mov
mov
lds
pop
jnp
mov
pop
arpl
or
flds
push
pusha
mov
movsl
xor
mov
loopne
mov
push
scas
ficompl
sbb
clc
add
sub
ljmp
mov
push
jo
scas
sub
gs
adc
fdiv
cmp
pop
icebp
dec
sub
adc
dec
cmp
mov
data16
outsb
mov
pop
jg
pop
rclb
sarl
push
pop
repnz
xchg
dec
hlt
aaa
int
push
jns
pop
dec
add
xor
mov
mov
adc
dec
jae
pop
out
push
imul
ljmp
sub
cmp
sarb
sbb
in
pop
adc
push
movaps
or
test
sbb
sbb
push
test
rcrl
lret
test
inc
sbb
mov
mov
out
rcrl
sbb
push
or
cmp
fwait
mov
movsb
jg
test
mov
push
mov
test
lret
mov
in
sub
mov
sbb
ficomps
lret
lret
lret
jno
pop
ficomps
icebp
and
neg
jns
jo
insl
loopne
loopne
cmp
imul
orb
in
inc
jp
mov
adc
popa
fwait
dec
or
add
cmp
mov
aam
inc
jp
lret
push
into
inc
push
ds
xor
pop
lcall
dec
xchg
scas
test
aaa
ficompl
push
xlat
fsubr
rcll
add
js
lcall
and
aas
fldt
pop
or
shrl
es
repnz
mov
jmp
outsb
xor
fstl
jno
dec
ljmp
ss
inc
mov
xchg
inc
xchg
mov
add
xchg
cld
pop
xchg
shlb
ret
dec
ret
add
add
fdivs
jmp
inc
mov
push
cmp
mov
lds
mov
adc
test
out
daa
and
insb
out
in
dec
les
popa
lods
fcmovu
nop
mov
mov
mov
in
mov
xchg
insl
jno
sub
lods
int3
mov
inc
jp
sub
add
arpl
ret
dec
cmp
or
jp
fcomip
adc
outsl
sub
or
call
xchg
push
jae
paddd
std
jecxz
outsb
out
adc
inc
das
dec
push
inc
sbb
jb
xor
fs
stos
cmp
adc
lret
imul
mov
daa
dec
rol
outsb
cwtl
data16
inc
js
bnd
movsl
cmc
and
xor
mov
sti
arpl
call
push
or
push
out
adc
je
pop
inc
jecxz
sahf
pop
pushf
xchg
jne
lea
pop
dec
mov
mull
add
pop
pop
bswap
mov
xchg
enter
mov
stc
scas
into
iret
cwtl
xchg
aaa
add
jl
out
popa
xchg
insb
ja
repz
mov
loopne
mov
and
cmp
dec
push
aam
enter
or
ds
movsl
sahf
addr16
inc
in
ficompl
push
faddp
test
mov
insb
jo
dec
add
enter
mov
add
fstpt
push
pop
std
adc
subb
mov
test
lea
clc
fwait
aaa
leave
pop
mov
xor
imul
xchg
jp
adc
cmc
in
ljmp
movsl
mov
inc
test
xchg
rorb
test
pop
in
sbb
sbb
lahf
mov
js
jne
lcall
repz
rorl
mov
andb
fwait
add
shlb
lret
lock
cmp
mov
xchg
cmp
aas
mov
in
push
enter
pushf
fldt
out
fisttpll
int
addr16
inc
dec
dec
pop
cld
and
push
stos
sti
pop
sbb
push
into
mov
aaa
push
mov
add
pop
outsl
xchg
sbb
ds
and
dec
fadds
adc
ljmp
popf
mov
cli
inc
mov
and
jmp
fists
fmull
shll
and
pop
mov
add
gs
pop
rcr
dec
push
fsubs
dec
mov
sbb
movsl
popf
inc
or
cmp
fistps
out
jno
mov
adc
push
popl
add
stos
mov
pop
movl
shlb
pusha
aad
push
enter
int3
insl
sub
xchg
mov
inc
sub
call
test
mov
imul
ret
push
fstps
cmp
les
push
jo
shr
mov
and
mov
sub
or
mov
mov
mov
aaa
pusha
mov
jp
aam
iret
pop
sti
or
insb
cmp
out
fsubl
push
mov
add
jb
jl
or
jp
mov
add
xchg
adc
mov
xchg
sub
iret
test
lock
mov
push
adc
repnz
xor
cmpsb
add
mov
decb
xor
sti
mov
clc
in
cmp
xchg
mov
push
fisubs
mov
xchg
test
test
jb,pn
insl
lods
sbbb
cmc
js
dec
sbb
int3
jp
les
test
ret
sbb
mov
jg
cli
mov
icebp
sub
xor
inc
cmpb
iret
sarb
in
sub
push
in
mov
les
jl
or
xor
mov
mov
or
jbe
imul
insb
push
out
cmp
pop
xor
xlat
push
fisttpll
out
xchg
or
stc
xor
je
popf
jb
jno
incb
movsl
les
dec
scas
dec
fidivs
shrb
sbb
out
jb
rorl
icebp
pop
xor
lahf
mov
mov
loop
testb
jp
icebp
xchg
sub
mov
lods
cmp
pop
popf
mov
xor
xchg
jbe
xchg
outsb
sub
mov
or
jne
cs
mov
into
popf
jecxz
mov
mov
add
mov
add
or
cld
jns
add
mov
sub
lods
mov
mov
xchg
mov
clc
in
cmp
push
jmp
mov
mov
addb
stos
jg
push
hlt
push
cmpsb
and
loopne
es
popf
lret
movsl
dec
pop
adc
pop
les
hlt
cmp
xor
sbb
cmp
and
mov
aam
in
sbb
push
adc
mov
adcb
mov
lcall
in
cli
mov
xchg
mov
pop
js
xchg
and
push
add
sbb
mov
push
pop
add
out
jmp
jb
in
dec
inc
jnp
sbb
or
xor
xchg
pop
outsb
sbb
xchg
cmp
pushf
loope
push
xchg
jae
mov
lcall
sub
lret
popf
test
adc
setnp
jg
push
cltd
push
and
mov
cmc
stos
cmpb
sub
scas
xchg
clc
pusha
repnz
inc
jo
mov
lcall
jmp
mov
out
add
enter
sub
fistps
popa
dec
icebp
xor
push
pop
sti
test
rcrl
rorl
mov
mov
ret
mov
sbb
cs
cmp
mov
pop
mov
mov
lahf
dec
mov
pop
inc
mov
in
not
sbb
mov
fisubl
cld
pop
rcll
and
fdivr
loope
cltd
int
testb
inc
loope
add
push
mov
popl
xchg
rcrb
mov
jge
pop
dec
gs
pusha
cmpsl
std
jbe
popa
cmp
stc
ss
and
addr16
cwtl
out
sub
addl
test
divl
ljmp
pop
sbb
xchg
fstpl
das
int
xchg
mov
jecxz
inc
sbb
icebp
lods
call
cmpsl
pop
stos
adc
jg
push
cmp
add
loopne
jno
sbb
dec
jg
jl
arpl
fcmovne
aaa
lret
shll
jno
inc
shll
insb
jmp
pop
mov
push
sub
dec
adcb
and
jp
lret
mov
xor
je
mov
dec
je
rcll
push
cmc
mov
fcomps
inc
cld
clc
mov
pushf
add
sbb
pop
xchg
inc
pop
or
mov
lds
sub
mov
fucomip
pop
xor
jl
idivb
lock
in
pop
sub
push
int
xchg
push
xchg
jbe
sahf
cmpsb
lods
add
xchg
cmpsb
mov
addr16
hlt
loope
adc
outsl
movsl
adc
adc
mov
or
out
lret
dec
rolb
push
mov
mov
adc
bswap
sahf
sbb
call
lret
fisttps
ret
loop
jne
int
cmp
repz
push
jae
test
fstpt
lahf
dec
loope
jnp
pop
imul
je
mov
cmpsl
and
jmp
jmp
adc
fwait
enter
in
das
es
jecxz
lret
or
cmc
daa
lret
ds
js
aam
out
lods
xchg
push
int
mov
jg
xchg
pop
pop
mov
cmpsl
mov
nop
pop
cmp
or
cmpsb
out
inc
push
adc
lahf
adc
ficoml
pop
lods
fdivr
dec
mov
xor
inc
sar
imul
adc
mov
pusha
xchg
dec
sub
push
divb
lods
outsb
jl
ror
dec
movl
jl
lret
adc
pushf
sbb
rorb
mov
fnsave
mov
add
cltd
fldcw
jmp
mov
xlat
les
pop
test
nop
into
sbb
mov
sahf
add
mov
in
stos
mov
popa
sahf
movsb
add
sub
inc
mov
or
into
jge
ja
fsubrl
adc
mov
inc
fadds
out
ror
pushf
mov
jb
packuswb
mov
ss
mov
or
inc
cmpsl
jne
sub
out
pop
sbb
and
sbb
pop
test
and
and
add
outsb
adc
imul
addr16
decb
imul
sahf
leave
std
push
sub
shr
in
mov
mov
push
flds
xchg
or
and
loop
add
inc
fstps
cwtl
lahf
hlt
push
negb
clc
enter
push
test
sub
rcrb
xchg
fstpl
pop
in
mov
or
xchg
test
mov
xchg
enter
out
sbb
loopne
mov
cltd
xorl
dec
shrl
xchg
sbb
sub
insb
mov
xor
int3
inc
lahf
jle
aam
mov
xlat
insl
sbb
negl
xchg
movsb
fwait
mov
and
lea
jbe
cmc
mov
push
mov
add
mov
subb
jp,pn
shlb
dec
xlat
stos
fdivr
insb
fistpl
inc
cmp
testb
dec
push
mov
addr16
in
arpl
xchg
inc
pop
sarl
or
jbe
andl
adc
out
shlb
pop
sbb
push
or
fadds
into
not
pop
xchg
notb
push
fwait
dec
dec
lock
push
nop
fidivrs
pusha
movsl
xchg
shl
add
sti
data16
dec
push
dec
adc
xor
call
cmp
bound
cmp
or
xlat
cmp
fnsave
aas
adc
incb
js
mov
pop
out
inc
popa
inc
or
sub
xor
push
mov
jp
dec
pop
cmp
cltd
std
imul
xchg
or
add
lods
add
mov
ucomiss
mov
test
mov
or
xor
mov
cmp
out
cmpsl
mov
add
jecxz
out
nop
or
mov
incl
movsb
lods
xchg
imul
gs
pop
sbb
popf
xchg
rcl
popa
inc
or
fwait
mov
rorl
or
data16
pop
pop
loop
lret
or
dec
lahf
cmpsb
sub
dec
in
and
pop
mov
iret
sarl
jbe
shll
adc
jbe
aas
dec
xlat
xchg
cmp
xchg
imul
xor
or
dec
outsb
outsb
mov
mov
add
or
xchg
shl
scas
ja
mov
daa
subl
jl
jle
mov
jg
mov
pop
aaa
mov
push
add
aad
and
inc
xor
sahf
in
mov
jg
aas
mov
int3
xchg
dec
sub
mov
cmp
not
xorb
or
inc
mov
ss
jo
lods
push
pop
test
stos
jmp
push
jb
xchg
and
jnp
inc
bound
loop
inc
aam
cmc
jmp
icebp
fdivrp
inc
and
mov
ret
scas
xchg
stos
adc
and
scas
push
push
pop
mov
cwtl
push
push
ds
mov
or
sysexit
sbb
cld
inc
popa
mov
add
push
aas
cli
pop
push
jnp
adc
popf
rcrb
mov
insl
cmp
sub
mov
xor
adc
mov
push
push
or
and
push
cs
pushf
sub
jne
imul
or
cli
mov
cmp
add
bound
es
add
jnp
xlat
jb
xor
mov
cld
leave
call
insb
outsl
test
xchg
aam
loop
push
lret
jne
push
pop
or
mov
shlb
pop
into
and
mov
pop
adc
mov
loope
pusha
cmp
std
lock
shll
in
or
xlat
aam
ja
xchg
xchg
xchg
sti
xor
inc
adcb
dec
lcall
sbb
sub
mov
dec
pop
mov
xchg
cmp
addl
adc
jl
sub
jno
imul
fmuls
push
iret
push
mov
jb
jae
fsubp
es
xor
xlat
sti
sti
adc
mov
inc
xchg
cmp
mov
sub
jo
pop
inc
add
adc
out
cwtl
adc
mov
and
shr
pop
fbstp
scas
xor
inc
bound
push
lods
push
jno
adc
lret
stos
sbb
xchg
xchg
cltd
in
sbbb
mov
xchg
pusha
lods
jp
jnp
pop
sbb
js
dec
lret
jno
add
mov
mov
jae
ret
push
pop
mov
pop
jae
jnp
sbb
aad
rcll
mov
add
inc
outsl
mov
ror
jns
lods
inc
prefetch
mov
mov
pop
mov
jmp
or
xor
push
or
shlb
cmp
clc
pop
test
mull
xchg
data16
stos
ljmp
sbb
cmp
popa
xchg
sub
inc
xchg
and
cmc
outsb
xchg
xchg
sbb
jmp
mov
push
out
xor
cld
dec
aaa
shll
dec
jnp
sbbl
fadd
call
mov
and
leave
enter
push
shll
mov
mov
test
mov
push
mov
in
and
fldcw
and
lods
pop
jl
mov
sti
stc
rcr
mov
xchg
pop
outsb
movsl
jne
xlat
add
add
mov
andps
cs
pop
cmpb
push
inc
fsubrl
mov
out
sub
sub
cmc
mov
cmp
mov
mov
push
inc
add
mov
test
insl
data16
out
jmp
dec
xrelease
inc
or
mulb
xchg
mov
push
cwtl
sti
in
subl
into
xor
cmpsb
cmpsb
or
fsubp
mov
dec
or
pushf
lret
sbb
rcrl
outsb
icebp
repnz
mov
ret
xchg
aas
cmpsl
je
movsl
jecxz
aaa
mov
enter
jb
daa
cmpsl
xor
sbb
mov
adc
adc
jmp
push
subb
or
mul
or
sti
xor
mov
push
jg
adc
push
pop
add
xor
inc
nop
and
ret
shlb
and
xor
xorb
insl
data16
mov
pop
mov
in
into
adc
fsubp
fnsave
ret
mov
push
lahf
aaa
jns
mov
lret
sahf
pushf
into
fsubs
in
adc
imul
imul
rorb
fsubrl
or
js
mov
mov
in
mov
dec
xchg
outsl
shl
inc
out
daa
and
hlt
stos
mov
push
dec
adcb
push
mov
dec
pop
xchg
fldenv
cmp
andb
setbe
pop
ret
pop
jae
lods
sbb
mov
in
ret
inc
or
mov
jno
fsts
xchg
push
xchg
xchg
lods
rcll
rorl
popa
sbb
ja
mov
test
loope
xchg
jge
out
dec
cmc
test
fucomp
cmovo
lcall
jne
and
lea
pop
inc
jle
mov
adc
cmp
insl
andb
mov
inc
aaa
jae
cwtl
dec
nop
and
loopne
push
gs
mov
or
lds
mov
fidivrl
scas
stc
adc
int3
dec
lods
dec
sbb
rcll
cmpsl
xchg
les
xchg
dec
sub
mov
jle
shll
data16
pop
pop
iret
mov
rclb
xor
into
jae
mov
cmc
push
ret
leave
fcomps
mov
mov
and
xchg
push
pcmpgtb
std
adc
jmp
sub
mov
jmp
push
roll
out
cld
gs
leave
mov
test
mov
std
push
pop
mov
call
into
imul
pop
push
jno
xchg
inc
cld
cmp
sbb
lea
ret
cmp
loopne
lea
or
andb
xlat
mov
pop
fdivr
pop
jne
add
mov
repz
mov
inc
aas
ja
lods
inc
pushf
das
jg
lcall
dec
ret
shrb
push
sbb
push
adc
sahf
imul
repz
inc
cltd
jno
jmp
fs
xor
insl
daa
xor
or
adc
mov
repnz
outsl
daa
lahf
das
sub
sbb
dec
ret
and
and
pop
push
insl
pop
mov
sub
xor
mov
xchg
cwtl
sub
jmp
sbb
dec
mov
mov
jecxz
in
ficoms
pop
jmp
sbb
fbld
jg
jl
adc
mov
pop
dec
repz
jb
and
xchg
stc
xchg
out
push
xchg
bound
out
lahf
mov
test
mov
in
adc
sub
shlb
sar
mov
jecxz
jo
insb
cli
jbe
cmp
pushf
notl
andb
movsb
adc
std
pop
sub
xchg
mov
loope
mulb
jae
pop
push
rorb
outsl
adc
lea
push
or
sbb
add
and
lahf
rcrb
pop
stos
stc
jne
ret
mov
movsb
xor
js
ror
add
jo
prefetch
or
shl
setbe
and
inc
insb
in
sbb
xchg
inc
xchg
test
in
sub
inc
mov
xchg
aad
mov
pop
xchg
adc
mov
pop
stos
cmpl
fnsave
add
repz
dec
dec
push
push
cmpsb
mov
and
mov
fisttps
ds
aaa
add
popa
adc
das
insb
int3
mov
gs
jo
sub
gs
mov
aaa
cmp
imul
xor
add
pop
cli
in
jno
xor
xor
cmpsb
imul
adc
mov
and
cmp
mov
scas
or
inc
or
mov
jb
test
sub
mov
pusha
das
sub
fsub
dec
jge
pop
jle
sbb
scas
jp
dec
cmp
xor
pusha
loopne
dec
and
lds
std
xchg
fcmovnu
mov
inc
push
rorl
lcall
xor
sbbb
lods
or
test
imul
fisubrl
cli
in
pop
sbb
sub
xor
or
jb
loope
outsb
adc
aaa
cmpb
add
int
inc
dec
bound
inc
fnstenv
dec
inc
jo
clc
dec
jmp
idiv
mov
insb
mov
or
sbb
mov
adc
ja
inc
or
dec
xchg
sbb
ret
mov
lahf
jo
pop
xchg
fcmovbe
inc
movsl
sbb
cmp
aaa
loop
ss
xor
sub
inc
call
lock
fst
test
jb
shrl
cli
lcall
andl
into
mov
add
pop
test
jg
sbb
xchg
test
jb
push
fdivs
lahf
test
gs
stc
dec
inc
lcall
add
jbe
jg
data16
dec
push
or
jmp
icebp
sub
mov
add
dec
xchg
hlt
mov
xchg
sbbl
jb
test
cmp
mov
mov
or
ja
in
mov
push
leave
pop
jb
movsl
push
mov
mov
shrb
and
xchg
push
sub
push
mov
jnp
lahf
add
loope
mov
fbstp
fcmovnb
mov
ret
subl
icebp
je
stos
or
cli
xchg
mov
arpl
lcall
push
add
mov
xchg
pop
insl
jnp
cmp
in
imul
cmpsl
je
add
scas
into
cmpsb
movsl
out
in
cmp
cmp
daa
stc
rorl
repnz
or
dec
repnz
inc
cmp
inc
jb
cmc
fsubs
or
movsb
push
imul
jne
into
fcoms
xchg
adc
and
std
shll
xor
jb
jmp
fisubrl
push
sbb
enter
mov
outsb
pmuludq
sbb
ret
xor
jns
jle
xchg
cwtl
push
mov
scas
sub
lret
inc
jle
lahf
ja
inc
aaa
je
dec
hlt
ja
mov
adc
lea
lods
fs
pop
jl
fstl
push
sti
aad
jno
orl
fs
daa
mov
cwtl
jno
dec
xchg
add
out
sbb
ljmp
enter
xor
or
sbb
cmp
mov
aaa
jg
dec
fldenv
add
push
cmp
out
aad
xchg
mov
pop
lret
dec
mov
ret
imul
dec
popa
mov
add
lock
and
inc
pop
aad
mov
test
mov
inc
movsb
fildll
popa
xchg
ret
call
xchg
std
push
cld
leave
ficoms
xlat
cli
sbb
popf
lds
fldt
roll
dec
movsl
mov
mov
pop
sbb
std
jns,pt
ret
mov
push
stos
stos
mov
and
int
cmpsb
mov
xchg
pop
ud1
jmp
leave
pop
push
sbb
cmpsb
jg
pushf
std
and
sahf
inc
fldt
cmc
testl
add
sbb
add
enter
imul
repnz
cwtl
xor
cs
or
iret
xor
mov
fs
addl
xchg
jecxz
ljmp
jl
sub
cmp
enter
imul
leave
arpl
icebp
mov
pushf
je
pop
fbstp
pop
cld
scas
dec
push
pop
repnz
loope
out
bound
das
clc
adc
or
jne
mov
xor
push
add
or
mov
fcmovb
std
ret
push
scas
sub
jg,pn
adcl
out
mov
dec
cli
iret
jmp
mov
or
iret
cmp
mov
add
cs
daa
add
subl
mov
add
fmul
clc
push
push
sub
nop
mov
pop
cmc
stc
out
test
test
xor
lahf
popf
xchg
add
test
repnz
jbe
subb
cmp
mov
insb
fldl
mov
out
push
jae
push
leave
dec
std
or
dec
xchg
sub
iret
sub
push
push
pop
jne
mov
inc
fldt
ljmp
cmc
jg,pn
inc
jns
mov
rol
mov
pop
sbb
aas
jl
jl
pop
push
mov
es
sbb
cli
call
test
fistpl
arpl
sub
fsubrs
pushf
push
sub
push
jle
cmp
arpl
adc
dec
mov
fdivs
mov
xorl
mov
inc
fdivp
adc
jp
in
daa
inc
mov
mov
mov
test
mov
cmp
jge
mov
ret
push
push
cltd
je
cli
or
repnz
fsubl
jg
adc
int3
add
shrb
in
in
xor
test
jns
arpl
fsubl
mov
push
fs
inc
mov
adc
xor
rol
in
jo
sub
popa
das
mov
or
jmp
or
fists
dec
or
std
pusha
popa
sbb
int3
in
arpl
jg
pop
pusha
es
nop
call
add
fisubrs
sbb
adc
test
dec
mov
dec
jmp
xor
lret
cmc
fxch
ja
fldl
dec
stos
mov
cmpsb
fcmovbe
push
pop
sub
mov
pop
decb
aad
pop
cmp
hlt
jmp
sahf
mov
outsb
ffreep
std
scas
movsl
and
jecxz
mov
addb
jl
jle
mov
mov
clc
push
insb
push
or
mov
dec
mov
push
int3
arpl
pop
sbbb
sub
mov
xor
popa
insl
inc
mov
add
cmc
stos
mov
rolb
mov
cmp
sbb
ret
ret
arpl
sub
or
ljmp
mov
jl
stc
mov
rcll
mov
mov
mov
pusha
rolb
or
aaa
sbb
dec
mov
add
test
xchg
inc
or
sbb
cs
popf
lea
push
imul
mov
jle
push
mov
leave
and
push
add
insl
out
pop
hlt
icebp
stc
loopne
cli
clc
in
jne
mov
xchg
fildl
pop
test
std
xchg
mov
fisubrl
aad
and
icebp
pop
scas
xchg
xchg
add
pushf
pop
lret
lret
jg
mov
and
jno
aad
rclb
add
pop
inc
pop
mov
addr16
xor
mov
jnp
jle
popa
gs
mov
jnp
add
cmp
mov
sub
dec
push
jns
sbb
cmc
mov
cltd
dec
loope
lcall
fstps
xlat
dec
push
jno
daa
es
movsl
mov
sbb
adcl
xchg
lea
sbb
cmc
test
mov
in
mov
lea
push
add
push
inc
loop
nop
in
jb
das
cmpsl
dec
insl
add
call
cli
fisttpll
nop
je
lock
ljmp
lea
pop
stos
iret
add
jbe
stos
mov
int
push
sarl
jp
je
cmp
inc
mov
in
mov
jnp
xchg
stos
addr16
sbb
into
pop
mov
mov
test
cmp
lods
out
or
gs
lret
xor
push
add
lea
std
imul
jmp
mov
in
loope
aad
sbb
mov
call
js
test
jbe
dec
fstpl
scas
xchg
cs
xchg
push
pop
pop
inc
pop
and
jge
pushf
lahf
sti
insl
lea
fcoms
and
sbbl
push
stos
dec
xchg
inc
sti
enter
scas
jno
cwtl
ds
and
xor
and
add
rcrb
test
jge
jmp
das
mov
inc
sub
je
adc
scas
push
dec
cmp
xchg
sbb
ljmp
xchg
imul
out
in
outsb
inc
setno
clc
repz
and
add
rcll
test
mov
and
pop
xor
inc
mov
sbb
cmp
cltd
mov
rclb
test
cmp
push
insb
lods
jae
and
mov
testb
pop
in
xchg
test
aaa
inc
iret
xor
psubsw
fisttpll
push
pop
xchg
mov
mov
sbb
mov
sbb
movsb
subb
js,pn
fs
xor
mov
jl
xor
inc
mov
imul
dec
testb
in
jmp
rcl
loop
adc
sub
mov
repnz
in
sbb
jle
cs
call
sub
roll
pop
nop
imul
daa
js
jae
scas
xor
push
jnp
mov
and
lods
sbb
xor
mov
mov
ds
mov
jae
jl
sub
aas
xchg
daa
xchg
inc
fs
aas
mov
fstpl
mov
shlb
sub
je
xor
outsl
xor
mov
pop
sub
test
addr16
arpl
pop
clc
add
xchg
addl
pusha
sub
sub
push
sbb
add
ja
fistps
push
add
mov
pop
shll
lock
out
pushf
sbbb
clc
inc
dec
testb
sub
push
stos
mov
std
pop
inc
int3
push
imul
sub
cmc
sub
fcmovnb
inc
cmp
cwtl
push
cwtl
add
sbb
shlb
adc
sub
jne
push
mov
or
jo
push
cmc
call
inc
mov
imul
mov
and
xor
mov
xor
and
xchg
lods
ds
fistps
ss
push
add
orb
fcmovu
cli
mov
daa
int
mov
mov
es
jg
mov
adcl
push
and
in
cli
enter
leave
aam
test
test
adc
loop
cs
mov
scas
sbb
jl
outsl
pushf
clc
dec
mov
xor
fwait
cld
xor
imul
sbb
into
inc
data16
bound
or
xchg
hlt
ja
les
ficoms
pop
xchg
ljmp
aas
and
inc
jb
lods
or
sarw
je
sahf
out
adcb
fsubrs
data16
insl
sbb
clc
jnp
xor
mov
leave
push
jno
xchg
add
int
cld
xchg
fcom
xchg
jne
dec
cs
xchg
out
jnp
dec
push
mov
sub
sti
or
mov
iret
pop
cmp
mov
outsb
adc
xor
mov
and
inc
lret
shll
enter
fidivrl
je
pop
cwtl
jge
idivb
push
lods
stos
sub
outsl
cld
test
icebp
clc
jp
ja
fwait
das
xorl
xor
enter
jp
shrb
xor
loopne
lret
mov
jp
lds
out
shlb
cmp
pop
andl
mov
fisttps
out
daa
add
in
xchg
daa
loopne
and
repz
cmpsl
sbb
stos
mov
fsubrl
mov
sbb
in
lcall
rclb
pop
mov
leave
mov
push
scas
pop
dec
movsb
xor
aaa
xchg
pop
outsl
cmpsb
inc
and
call
cmp
testl
arpl
loopne
inc
lahf
push
sahf
and
inc
repz
cwtl
jmp
outsl
sbb
fwait
and
or
jns
inc
cmpb
and
cmc
rol
xchg
dec
cmpsb
cs
xlat
cltd
scas
aad
movsb
leave
scas
xchg
sub
adc
xor
stos
adc
jne
mov
push
mov
mov
push
sub
aas
cmp
sti
sub
iret
cmpsl
int
push
repz
cli
lods
mov
and
dec
and
fiaddl
enter
pop
ds
stos
inc
push
push
jp
in
cs
iret
push
movsl
sbb
or
jmp
mov
dec
xor
jp
adcb
mov
or
dec
inc
mov
sbb
ss
imul
loop
je
call
push
mov
insb
divb
enter
fstp
sarl
adc
loopne
cmp
pusha
lea
jecxz
mov
out
sar
mov
rcll
sbb
or
push
pop
ret
xchg
cmpsl
pop
out
mov
mov
outsb
out
out
in
scas
mulps
lret
and
repz
and
adc
xor
mov
and
aad
ljmp
and
movsl
stc
inc
std
pop
nop
or
out
mov
mov
fdiv
sub
sub
cmp
aas
mov
push
push
pop
rcl
push
pop
pop
scas
mov
aad
ret
adc
fcoms
mov
xor
jg
ret
cmp
jbe
dec
xchg
adc
mov
fmull
into
and
mov
pop
xor
pop
lret
and
push
xor
pop
test
push
cmpb
add
push
sub
bound
in
inc
push
out
je
inc
jmp
stos
or
rolb
adc
pop
pop
push
jbe
adc
int3
aam
sbb
xor
lret
and
stos
popa
dec
rcrl
push
mov
push
cld
rolb
enter
int
mov
lods
daa
js
cmp
dec
and
arpl
pushf
mov
ds
lret
cmp
inc
mov
movntps
mov
ja
xor
mov
mov
ret
mov
je
xchg
xchg
push
mov
adc
aad
lods
shrb
aaa
mov
cli
and
mov
repz
mov
imul
sub
xor
out
call
pop
and
call
and
xchg
or
les
inc
add
aad
aaa
fsubs
add
leave
inc
mov
sbb
xor
aaa
jmp
in
addb
outsl
jb
push
fistpl
mov
adc
inc
cmp
movsb
jp
mov
stc
movsl
sub
or
movsl
leave
cs
push
mov
and
xlat
push
pop
movsl
adc
je
test
nop
jmp
movsb
inc
push
fidivs
dec
ja
mov
xchg
rorb
add
test
jle
sbb
push
in
push
mov
addr16
fiaddl
outsl
jnp
repnz
lea
testl
pop
pop
cmpsb
gs
in
push
add
test
hlt
mov
pop
add
out
inc
fwait
mov
add
sbbb
loope
pop
and
insb
mov
inc
sub
rcrl
adc
push
ss
and
pop
rcr
jae
xor
jae
jmp
int3
jb
push
xchg
ja
ds
fcmovnb
dec
ljmp
faddl
mov
mov
adc
out
out
cwtl
push
mov
lock
pusha
push
jp
jnp
imul
andb
subl
push
and
dec
daa
fnsave
and
sbb
xor
or
out
ljmp
dec
fdivrl
mov
adc
xchg
inc
lea
dec
dec
cmp
and
or
jno
jmp
adc
pop
sub
or
jle
sub
out
adc
push
hlt
aam
pop
or
and
arpl
daa
add
les
cmp
cmc
adc
inc
and
adc
mov
in
daa
xchg
or
pop
js
dec
add
into
pop
and
pslld
iret
pushf
notb
shlb
or
imul
cmc
shrb
push
dec
das
xchg
mov
mov
mov
jns
icebp
sub
andb
push
mov
xchg
gs
dec
aaa
out
lea
jnp
call
fldenv
push
leave
inc
mov
mov
mov
push
insl
pop
sub
or
cmp
jno
int3
adc
rdpmc
out
adc
sarb
pop
test
push
mov
pop
fstl
loop
mov
enter
iret
loopne
shl
sub
mov
stos
dec
std
aad
mov
idivl
addr16
jl
sub
inc
out
xor
fidivs
push
repz
test
js
inc
js
add
fstpl
popa
inc
xor
int
popa
and
push
dec
mov
cmp
push
pop
out
inc
or
loopne
xchg
dec
std
push
push
rol
lock
push
mov
xchg
je
sbb
sbb
pop
ja
lods
pop
aaa
cmp
lea
sub
push
loopne
mov
mov
and
leave
or
pop
mov
pop
mov
ret
jnp
xor
sbb
mov
cmp
mov
jno
fsts
inc
arpl
adc
mov
ret
jg
enter
push
cltd
pop
lock
fimuls
add
dec
cltd
lea
lcall
mov
push
roll
stc
mulb
stc
gs
sub
mov
test
jmp
cwtl
push
xor
std
xchg
mov
and
mov
out
or
inc
dec
daa
popf
mov
push
aad
aas
or
xor
add
je
das
jne
mov
push
data16
sti
gs
imul
mov
pop
repnz
fucomi
outsb
testb
outsb
xlat
fcomps
inc
je
mov
pop
and
inc
daa
cmp
push
mov
jae
mov
xor
cltd
push
ss
push
aam
pop
dec
sub
adcb
mov
mov
pop
aas
cmp
inc
adc
pop
xchg
ret
xchg
int
jb
inc
adc
pop
pushf
rclb
push
rclb
xor
push
shrl
pop
popa
stos
jge
mov
lods
sbb
adc
imul
testl
jns
push
fldl
push
add
mov
movsl
sbb
pop
xor
adc
cmp
push
jge
mov
xchg
xlat
push
mov
cmpsb
daa
lret
fcoml
jmp
js
pushf
aaa
mov
adc
xlat
xor
loop
push
or
cmp
pop
nop
divb
dec
or
int
dec
push
cs
ret
es
mov
sbb
mov
dec
test
xchg
fsubs
dec
pop
pop
pushf
cmp
mov
sbb
ljmp
xor
dec
in
sbb
rcll
es
sbb
xor
mov
and
and
mov
nop
lods
mov
adc
pop
pop
mov
je
pop
rcll
xchg
fdivr
and
or
imul
jo
aam
bound
jns
mov
sub
adc
pushf
mov
mov
in
pop
les
pop
push
out
or
test
fwait
push
popf
fdivl
cmpsb
pop
in
test
int
mov
dec
mov
xchg
out
rcrl
rol
fists
pop
or
test
sahf
xchg
jle
aad
inc
fisubs
adc
lret
push
mov
iret
lods
cmc
push
scas
mov
insl
xor
or
lock
popa
sbbl
inc
inc
xlat
lea
fs
mov
sbb
mov
scas
sbb
popa
ficoml
fsubs
fs
popf
outsl
xor
mov
sbb
adc
fsubrp
inc
cmpsl
cmc
cmp
stos
adc
cwtl
lret
dec
iret
cmp
rcrl
loopne
movsl
sbb
dec
mov
nop
addl
add
fwait
pop
cwtl
shl
pusha
push
xor
add
jnp
mov
mov
sub
pop
sahf
mov
mov
push
mov
imul
out
xchg
clc
lret
dec
jnp
push
sbb
jo
loop
ss
xchg
int
div
lcall
test
xchg
lods
icebp
ror
mov
push
int
sub
sarl
nop
mov
ds
xchg
stc
dec
aam
xchg
mov
call
xchg
mov
imul
dec
les
fidivrl
cmpl
dec
aam
aaa
cmp
adc
insl
cld
je
sbb
lret
or
push
mov
jns
push
dec
xlat
jmp
push
fcoms
outsb
sbb
push
lods
jp
sbb
xchg
cmc
inc
sbbl
xor
fmul
jmp
inc
add
add
jmp
scas
xor
jmp
lcall
test
das
les
clc
cld
lret
sbb
xorl
add
scas
cltd
aaa
jb
jecxz
inc
sti
or
sub
aad
test
mov
gs
sbb
jno
xchg
mov
out
jae
cmpsl
loop
xor
arpl
in
mov
mov
or
pop
cltd
out
movl
sub
mov
cli
movsb
add
push
add
sub
mov
ja
mov
push
push
in
and
lods
test
mov
sarl
jmp
imul
sbb
lret
scas
xor
insl
dec
push
repnz
in
jns
cli
pop
jb
ret
add
mov
lcall
cmp
jecxz
xorl
aaa
aaa
xlat
test
test
mov
inc
cmp
push
inc
idivl
scas
arpl
in
jl
cs
adc
cltd
lods
aam
adc
fidivs
rcll
stos
imul
sbb
call
loopne
pop
fdivrs
mov
cmc
inc
cmp
in
test
sub
repnz
arpl
sbb
pop
jmp
pop
fcompl
push
int
add
imul
leave
pop
dec
pop
rcr
sbb
rcr
insb
js
push
rcrb
adc
loop
push
fstl
aad
or
push
out
inc
adc
ficoml
adc
jge
xor
xor
test
stc
cltd
popf
lock
cli
or
or
ja
jae
mov
std
sub
sub
push
mov
gs
rol
sbb
or
cmp
fistl
cwtl
in
notl
jge
add
cmp
lds
sarb
adc
adc
dec
ja
test
or
xchg
shl
aaa
dec
dec
push
mov
jg
xchg
fld
push
mov
lods
jl
ficomps
movsl
mov
mov
pop
ror
mov
adc
xor
dec
or
inc
xlat
sahf
flds
test
push
arpl
outsb
jp
and
fucomip
push
shlb
ret
fsubrs
inc
mov
push
dec
ret
mov
xor
jns
aaa
das
mov
dec
ja
dec
mov
fstps
push
add
mov
jecxz
or
inc
aam
js
inc
fimuls
mov
mov
pop
sbb
orb
xlat
jmp
das
ds
mov
daa
sbb
cmc
ds
dec
jl
jo
lcall
jnp
jecxz
xchg
popa
sbb
into
in
jp
add
xchg
or
inc
addl
cwtl
jecxz
mov
push
pusha
addr16
adc
imul
jp
adc
inc
mov
cmp
lds
mov
sub
jno
mov
in
cmpb
push
imul
insb
xor
jbe
sti
fimull
aad
or
sub
out
lahf
shr
movsl
dec
leave
ds
scas
filds
lahf
gs
dec
xor
mov
dec
adc
dec
mov
push
cmp
out
or
mov
addr16
cmpsb
cmp
iret
cmp
adcb
hlt
sti
or
sbb
fwait
push
sahf
int3
sti
xor
insb
stos
mov
shrl
in
push
inc
cmp
loope
lock
aad
xchg
push
or
or
mov
sub
mov
into
adc
pop
push
addr16
mov
lock
mov
mov
adc
andl
and
lds
movsl
cmpsl
mov
pop
popa
call
es
mov
mov
bnd
shrb
mov
fcmovu
dec
sahf
enter
test
je
stc
cmc
xchg
out
mov
pusha
mov
je
test
xchg
add
jmp
ret
and
xchg
mov
fldl
cmp
rolb
jns
inc
pushf
jbe
xchg
xor
rolb
aaa
mov
popa
daa
pop
inc
mov
jbe
mov
sub
and
add
push
or
and
mov
data16
negb
hlt
jp
adc
adc
xchg
pop
jle
push
push
push
hlt
cmpsb
sbb
xchg
sub
push
or
inc
leave
jg
out
jecxz
adc
imul
hlt
and
add
ss
push
dec
or
or
andl
cmp
xchg
out
inc
enter
out
outsl
or
xchg
sub
mov
punpckhbw
fsub
fnstcw
jmp
dec
sbb
in
xchg
scas
push
daa
lea
adcb
xor
mov
cmp
push
jb
sarb
pop
or
inc
jmp
xchg
jne
mov
mov
imul
adc
imull
fcmovb
mov
sub
addr16
push
bound
mov
inc
inc
ret
fistps
pop
xchg
das
repz
sbb
fnstenv
shl
addr16
jge
loopne
negb
cwtl
faddl
dec
xchg
push
aas
mov
neg
xchg
xchg
cmpsb
lret
sbb
dec
cmp
cmp
jp
dec
es
or
addr16
mov
lea
jb
sub
pop
aaa
pop
cli
mov
fcoms
cs
rclb
xchg
xlat
lock
jl
cmp
push
test
aaa
outsb
xor
xchg
data16
popa
scas
mov
jge
mov
cmp
add
shll
pop
lahf
push
int
mov
pop
mov
push
sbb
push
or
pop
dec
cmpl
call
adc
xchg
sub
ss
loop
mov
cli
in
popa
pop
push
out
aad
in
mov
mov
dec
jnp
rorb
jp
ljmp
xor
mov
shll
jge
push
xor
inc
dec
mov
mov
adc
dec
mov
jb
in
adc
sbb
cmpsb
xor
imulb
xor
cli
sbb
mov
push
dec
loop
test
arpl
cmp
jp
mul
ret
seto
loop
pop
xor
stos
mov
add
dec
xchg
mov
mov
in
fisubrs
cmpsb
ja
cmp
xorb
pop
sbb
mov
insb
dec
adc
push
cmpsl
adc
lock
inc
add
pop
clc
outsl
cmc
test
popa
into
cltd
add
or
in
std
into
adc
sub
and
mov
add
rcrb
mov
lret
enter
add
mov
stos
pop
sbb
push
xor
popf
xchg
add
mov
ret
pop
inc
lods
pop
test
xor
adc
arpl
into
xchg
enter
mov
pop
clc
jae
mov
outsl
outsl
sub
mov
arpl
decl
push
sub
xor
push
jno
cmpsb
lods
divl
inc
mov
out
mov
xchg
fsubrs
movsb
push
adc
cli
lods
mov
add
insb
xor
add
movsl
inc
loopne
cmp
pop
dec
sbb
adc
aaa
jp
ljmp
push
inc
test
push
push
lahf
jbe
cwtl
sub
xor
push
xchg
sbb
pop
and
inc
into
test
mov
push
inc
ret
lahf
jge
mov
push
adc
sub
cld
xorl
adc
lods
fucomp
push
cmp
xor
cltd
mov
xchg
inc
pop
movsl
dec
jl
mov
or
xchg
dec
jg
call
jl
inc
cltd
push
adc
and
pop
gs
mov
adc
xchg
cmpsl
cwtl
sbb
xor
cltd
sub
insl
repz
pop
inc
mov
ljmp
scas
out
dec
sub
cs
sbb
mov
ja
jp
ss
cmpsl
ret
fldt
and
or
gs
cmpsl
inc
es
lds
sbb
mov
mov
mov
por
inc
jnp
icebp
inc
mov
ret
cwtl
lods
sbb
int3
dec
mov
dec
jecxz
inc
aas
and
call
mov
mov
mov
add
repz
xchg
push
sbb
and
xchg
mov
in
cli
push
adcl
pop
xchg
in
shrl
jns
inc
mov
push
mov
aad
jp,pn
enter
outsl
lcall
adc
bound
out
push
test
mov
leave
push
xor
pop
clc
dec
pop
pop
xchg
adc
add
sub
loopne
push
arpl
popa
jl
mov
add
add
push
cld
stos
or
inc
inc
mov
pop
mov
sub
mov
cmp
pop
jmp
adc
sbb
addr16
xchg
lret
shlb
das
add
sbb
adc
aam
inc
push
iret
cmp
lods
scas
lret
lods
shrb
lock
jne
add
popa
inc
cmp
mov
imul
and
loopne
jnp
je
fwait
or
and
cltd
std
fstpl
mov
sahf
in
lahf
xor
int3
inc
or
mov
sbb
xor
cmc
push
dec
outsl
repnz
stos
jnp
sub
sbb
imul
push
push
cmc
dec
jno
loopne
cmp
cltd
and
cmpsl
sbb
std
jmp
std
mov
adcl
cmp
pushf
and
and
mov
insb
xchg
ficomps
xchg
jae
fldl
lods
leave
jne
addr16
das
push
test
inc
jno
or
lea
repz
and
xchg
or
or
divb
mov
push
jmp
int3
xchg
fs
xchg
clc
aad
sbb
rcrl
mov
jl
mov
fwait
nop
lock
pop
inc
nop
cltd
ror
ja
mov
and
or
out
subl
shll
int3
shrb
lods
and
loop
stos
and
add
test
int3
dec
mov
in
push
stos
push
push
shll
outsb
inc
icebp
and
inc
mov
jno
pop
sti
sub
jne
adc
cmp
test
cltd
jge
das
jg
lods
push
cs
inc
leave
adc
xor
mov
mov
lea
push
mov
inc
jae
sti
movsl
xor
push
dec
test
mov
inc
dec
arpl
add
push
sbb
pop
xchg
bound
aaa
jg
push
inc
pop
fs
repnz
cmp
mov
pop
ss
push
mov
fcmove
sbb
fistps
test
or
push
ljmp
and
pop
int3
dec
cmc
sahf
sbb
xchg
sbb
imul
enter
pop
int3
and
cli
mov
aam
mov
push
fldl
xchg
and
push
ss
gs
int3
dec
cwtl
dec
mov
inc
lahf
mov
sbb
sti
insl
sti
adc
xchg
das
inc
jne
inc
or
jb
in
in
sbb
and
jl
pop
cmp
mov
leave
cmpsb
ret
adc
cwtl
adc
add
nop
mov
xor
aam
sbb
mov
sbb
mov
cli
and
cmp
sbb
and
or
popf
xchg
add
ret
mov
xor
jge
icebp
xchg
adc
daa
arpl
xchg
fidivrs
jo
xchg
pop
lcall
dec
push
sbb
ret
jo
jns
mov
push
mov
mov
sarl
lahf
push
mov
scas
enter
xchg
out
cmpsl
imul
mov
push
call
push
aam
adc
repz
idiv
mov
cld
xor
ss
cli
in
lock
and
xor
sbb
movsl
push
mov
ljmp
repnz
fsub
xchg
imul
mov
mov
sahf
popf
data16
movsb
cmc
dec
jno
sti
or
cmp
xchg
sub
pop
out
call
fnstcw
je
and
sti
movsb
ljmp
push
mov
sbbl
je
xchg
js
mov
popf
lret
push
push
rcl
cmp
test
andb
mov
add
mov
in
jno
ds
iret
test
mov
xor
jb
nop
push
jb
push
dec
mov
mov
cmp
pop
dec
jae
xchg
sub
jnp
adc
fucomip
add
stos
jbe
test
mov
xor
pop
bound
sub
mov
jle
mov
ret
inc
mov
sbb
sbb
lods
sbb
clc
jge
jl
adc
sub
or
or
jecxz
pop
stos
cmc
adc
pop
movsl
sbb
jl
cmp
out
xchg
sub
test
test
mov
cmp
cltd
cmp
fcompl
in
psubq
sbb
sbb
mov
adc
mov
cmc
loop
pop
sub
mov
adc
sbb
bound
xchg
cld
push
repz
mov
sub
in
cmp
in
pop
mov
push
prefetchnta
stos
psrlw
mov
imul
jge
jae
sbb
int3
or
mov
xor
pop
sub
push
sub
xor
popf
or
aaa
add
lret
xor
ficoml
xchg
jae
sbb
sahf
clc
lret
xchg
xchg
into
xor
mov
enter
enter
dec
les
cmp
scas
inc
mov
cmp
sbb
sub
add
sti
xchg
aaa
cmpsb
xchg
mov
sbbb
leave
rcll
leave
pop
mov
inc
xchg
sub
inc
inc
rorb
ss
cmc
dec
jle
mov
and
xchg
in
cld
out
xchg
mov
cmp
loopne
addr16
cmpsl
inc
ss
fwait
lock
lock
cmp
shlb
les
ret
hlt
push
jnp
pop
cmp
push
push
mov
arpl
adc
pop
xchg
and
lods
outsb
add
out
sti
aaa
dec
fsts
shrb
add
daa
push
out
dec
cmp
and
loop
inc
es
push
pop
sub
icebp
pop
add
sub
stos
enter
xchg
popf
mov
fs
dec
mov
fs
add
loopne
test
ljmp
jmp
sub
push
fnstcw
mov
mov
and
aam
testl
add
mov
rcl
inc
insl
or
and
xchg
push
and
mov
mov
push
mov
and
sbb
mov
popa
daa
lahf
xchg
jns
nop
je
or
mov
pop
fsub
ja
xor
test
dec
xchg
jp
xor
scas
jnp
movsl
pop
pop
repnz
or
mov
push
orb
out
insl
mov
mov
in
or
cwtl
out
cmp
and
jg
xor
ds
xchg
cmp
push
mov
pop
popf
aas
inc
add
xor
enter
in
add
push
adc
inc
outsb
outsb
pop
dec
aas
rcl
add
test
xchg
xchg
out
add
movsb
sub
scas
inc
sbb
stc
and
mov
mov
inc
cmp
aam
xor
inc
test
inc
int
mov
fistl
cmp
cmpsl
mov
inc
rorl
push
or
ficompl
xchg
aaa
xchg
test
and
or
addr16
and
push
adc
add
xchg
cs
insl
xchg
jns
xchg
xor
jbe
fistps
fimull
adc
dec
loop
fisubl
mov
cmpsb
mov
or
ficoml
add
setge
adcl
lock
fisubrs
insb
or
jno
test
jae
jmp
jmp
mov
xchg
xchg
dec
repz
out
or
xchg
add
dec
mov
incl
mov
jle
and
and
lcall
mov
nop
iret
scas
out
int
xchg
in
xchg
mov
das
mov
jl
stc
xchg
fwait
pushf
inc
xor
std
maxps
lea
cs
lea
dec
stos
stos
cld
mov
pushf
sub
insl
sahf
cmp
xor
sub
mov
xchg
inc
or
dec
xor
shrl
sti
ss
xchg
xor
ss
push
in
xchg
xchg
repnz
aam
mov
test
rcr
rcr
mov
sbb
out
and
cmp
push
xchg
icebp
std
sbbl
xchg
insb
jecxz
test
adc
daa
in
in
inc
lret
cmpb
mov
xor
fsub
lock
cmpsl
push
xchg
fmul
adc
out
mov
arpl
push
xchg
sub
or
jle
mov
ds
imul
cs
dec
lods
mov
fcoml
adc
fsts
fmul
ficoml
add
mov
sti
inc
cmp
int
xchg
pusha
in
ret
mov
test
push
push
in
mov
enter
xor
dec
pop
jo
jb
imul
and
sbb
dec
cmpsb
mov
insb
xor
push
xchg
cld
sub
add
mov
mov
fstl
jl
movsb
jnp
inc
pop
pop
push
test
in
shl
or
sub
and
test
fmull
pop
imul
sbb
add
cmc
aas
and
leave
imul
xor
and
dec
or
call
or
mov
sahf
pop
xchg
inc
and
add
out
fidivl
jo
ffree
jo
dec
jne
jle
inc
ret
sub
mov
inc
pop
mov
dec
dec
ja
es
add
pop
pop
jmp
mov
pop
out
stos
test
mov
nop
fwait
mov
scas
mov
cmp
sbb
push
mov
lret
bts
cmc
sti
icebp
leave
jbe
loopne
fidivrs
rcl
cs
cltd
sub
loope,pn
lret
push
adc
jmp
std
inc
test
dec
dec
mov
mov
push
outsl
lea
loop
out
inc
out
mov
stos
cli
mov
icebp
out
lea
arpl
jmp
xchg
xor
jecxz
je
xlat
sub
or
adc
mov
out
jmp
push
fwait
movsb
cvtdq2ps
cmp
add
adc
jg
xchg
rcl
cmpsb
roll
daa
adc
inc
and
shl
pushf
mov
dec
stc
les
nop
jmp
test
push
repnz
sbb
inc
dec
mov
mov
out
fs
notl
jp
and
bound
call
imul
pop
jbe
jno
xor
xchg
jp
mov
das
insb
int3
sub
aaa
and
leave
jp
ljmp
xor
movsb
push
int
or
ret
out
imul
aad
movsl
cmp
cmp
and
mov
adc
sahf
xor
sub
push
sarb
addr16
adc
lahf
jp
je
cmp
imul
xor
adc
mov
or
push
bnd
cli
adc
fcomps
fldcw
mov
or
or
inc
mov
sbb
inc
xorb
shlb
sbb
lds
mov
fcoms
jl
mov
and
or
arpl
icebp
jl
jmp
in
jg
sub
rcrb
mov
or
xor
loope
inc
sub
inc
data16
mov
nop
repnz
pusha
or
mov
test
ret
icebp
and
stc
aam
inc
rcrl
mov
cs
mov
ss
fs
arpl
jno
test
inc
pop
idivb
dec
xor
js
inc
ljmp
out
push
les
inc
push
pop
jl
dec
xor
bound
cmp
into
xchg
jnp
xor
test
in
les
in
cmpsb
xor
mov
imul
mov
dec
jg
xor
outsb
jg
push
mov
cmp
cltd
aam
ja
pop
imul
imul
jle
jl
out
clc
repnz
dec
test
lea
mov
lods
jg
inc
fdivl
sbb
outsl
cmp
cltd
adc
fbld
and
jbe
int3
jnp
push
or
add
jb
in
pop
orb
and
adc
jo
pop
dec
or
imulb
inc
push
ret
mov
sbb
or
subb
lock
add
push
xor
mov
stc
loope
push
xor
mov
mov
or
or
push
out
cmpl
mov
repz
inc
or
jmp
mov
jno
and
fdivrl
pop
mov
add
and
and
das
iret
arpl
cmc
clc
out
xor
lea
sub
testl
out
xor
outsl
dec
dec
dec
pop
adc
in
pop
mov
cmpsl
icebp
push
fdivs
mov
cmc
mov
jbe
xor
sub
out
mull
mov
lods
sub
std
aas
and
call
inc
jp
icebp
ljmp
in
mov
rcl
jno
das
decb
das
lods
adc
scas
lret
jge
mov
inc
fists
push
mov
sahf
mov
push
daa
pop
xchg
xor
mov
mov
pop
dec
test
in
push
cmp
outsl
addl
js
push
outsl
stc
adcl
lods
inc
or
jns
lock
shrl
pop
es
adc
mov
sbb
sbb
add
inc
cmpsb
push
sarb
sbb
pop
mov
mov
jae
mov
repnz
outsl
xchg
cwtl
adc
outsl
add
add
rorb
fwait
pop
out
repnz
pop
xor
rcr
call
mov
imull
sbb
xor
adc
cwtl
leave
sbb
movl
mov
pop
mov
jle
scas
mov
std
jl
and
test
mov
mov
mov
inc
mov
or
mov
mov
mov
mov
pop
xor
movsl
mov
mov
out
leave
sub
push
leave
leave
cs
imul
test
popf
dec
push
test
inc
sbb
lahf
fildl
adc
fldl
adc
clc
nop
pop
sti
inc
cmp
dec
ds
lret
test
mov
jnp,pn
enter
imul
jecxz
jo
lahf
imul
rol
pop
jno
js
popf
jb
mov
xchg
add
lret
lea
mov
mov
stc
test
les
bound
mov
movb
cli
aaa
add
fcoms
push
push
xor
xchg
cmp
mov
pop
lds
mov
jecxz
in
push
push
mov
cld
clc
dec
int3
pop
test
in
stos
mov
rorb
daa
ret
sub
lea
xor
adc
mov
inc
adc
lcall
push
inc
mov
and
cmc
sub
dec
in
mov
in
ret
jb
pusha
dec
push
mov
sbb
data16
inc
insb
fbld
add
aas
pusha
int3
sti
inc
and
cmp
jp
imul
pusha
lods
jo
adc
out
xor
sbb
in
sbb
push
lret
add
mov
je
pusha
mov
out
cmpsb
inc
and
pop
shll
mov
mov
add
push
inc
push
mov
xchg
dec
mov
shlb
inc
rol
xor
jbe
and
jne
push
andb
in
cmp
dec
xor
dec
sti
out
mov
or
mov
js
fiaddl
les
xor
je
pop
inc
scas
fisubrl
add
pop
inc
outsb
pop
call
fadd
push
scas
clc
int
sbb
mov
push
adc
stos
enter
inc
push
and
fcoml
jp
in
stos
lcall
xor
in
ret
and
inc
inc
cmp
inc
mov
loop,pt
xor
sarb
or
dec
repnz
insb
xlat
mov
adc
outsb
testl
xor
dec
out
sti
sti
insw
loopne
int
adc
mov
rclb
mov
xchg
pusha
cmp
push
and
std
mov
or
popa
js
or
ja
in
push
out
ret
shrl
dec
xor
dec
mov
cmpsb
push
jb
fwait
pop
popf
out
xchg
pop
loop
sbb
dec
cmp
adc
rolb
les
fxch
pushf
fdivrs
int
mov
dec
dec
dec
sbb
xchg
push
icebp
mov
cmp
push
mov
inc
out
mov
pop
pop
push
xor
lret
pop
stos
sar
outsl
fmuls
movsl
fisubrs
je
or
jns
pop
and
sahf
enter
sbb
or
mov
rorl
adc
movsb
fstps
repz
mov
lea
mov
and
and
fldl
sbb
in
inc
pop
ret
xchg
pop
push
pop
out
push
add
mov
inc
adc
dec
pop
lret
outsb
fsubrs
cmpsl
xadd
pop
aaa
jge
adc
shr
aam
xlat
andl
sub
push
in
out
jp
fwait
iret
js
and
dec
ficomps
adc
es
fildl
jecxz
push
adc
mov
xchg
mov
lahf
add
pop
notb
cmp
xlat
in
mov
xor
out
test
bound
and
addr16
pop
lods
fdivrs
add
pop
insb
dec
xor
sub
add
xchg
push
outsb
pop
adc
test
xchg
mov
or
fs
pop
sub
sbbb
shll
mov
push
inc
xchg
push
pop
fmuls
cmp
lret
movsl
or
idivl
sbb
pop
jmp
ret
xor
pop
jmp
xchg
sahf
es
mov
fsubrs
cmp
out
out
push
jecxz
jle
fxch
mov
cmpsl
push
fdivrs
arpl
gs
in
push
addl
aas
outsl
shrb
int3
dec
push
mov
sub
mov
mov
and
icebp
or
movsl
or
loop
leave
ljmp
dec
push
mov
mov
cmp
jge
cs
adc
push
pop
popa
and
xor
sbb
in
pop
insl
mov
add
sbb
pop
outsb
repz
cwtl
jmp
or
adc
call
add
daa
add
mov
add
xchg
inc
cwtl
popf
or
push
jne
ret
testb
and
xchg
movsb
adc
ss
jecxz
in
inc
jg
clc
mov
cwtl
push
lahf
aam
jp
out
dec
jmp
inc
test
sub
xchg
adc
in
test
cmp
ret
aam
pop
cltd
add
or
cs
pushf
bsr
jl
sub
pop
test
ss
mov
cmp
cwtl
scas
adc
xchg
repnz
out
test
xor
mov
jp
jg
lcall
dec
sti
out
xchg
jle
shll
or
insb
popa
loopne
hlt
ss
in
jle
fs
push
add
clc
xor
je
xor
stc
jns
mov
shll
xchg
sbb
adc
testb
or
push
sahf
cmp
sbb
mov
cwtl
jle
xchg
lahf
jl
sbb
jo
xor
jl
cmp
sbb
pop
sbb
push
shrl
xchg
je
into
imul
lahf
rolb
dec
mov
inc
dec
push
movsb
dec
adc
dec
fimull
mov
push
imul
ja
rol
cmpsb
into
or
push
fnsave
shrl
mov
pop
ljmp
hlt
pop
in
adc
xchg
fucom
fwait
mov
cli
and
insb
mov
mov
cmp
jle
cmp
mov
mov
adc
scas
and
adc
fcoml
mov
cmc
scas
mov
mov
js
jnp
insl
clc
jbe
pop
push
lock
mov
inc
xlat
inc
and
and
adc
imul
or
xchg
cmp
fists
ja
stos
cmpsl
jns
sub
movsl
push
xchg
push
inc
pop
mov
inc
insl
stos
pushf
nop
pop
mov
in
or
mov
sub
das
sub
or
inc
xor
nop
icebp
aam
cmpsb
rorl
je
sbb
sbb
dec
push
xchg
nop
adc
fildl
decl
ds
arpl
inc
test
add
push
dec
xor
shr
add
scas
out
push
or
test
ds
mov
dec
mov
test
shl
cmp
mov
popa
hlt
sub
cltd
adc
and
pushf
pop
jmp
mov
nop
and
xorb
jbe
into
mov
or
pop
stos
push
int
pop
movsl
andb
pop
mov
rclb
daa
dec
pushf
lock
test
jb
call
fimuls
test
mov
xor
stos
sub
pop
sahf
mov
loopne
lret
mov
inc
incb
clc
mov
sub
xchg
push
push
test
xor
sub
sbb
jns
xor
mov
sbb
ret
jb
mov
aam
ftst
aad
push
mov
lea
mov
enter
mov
dec
fcomps
outsl
pop
cli
outsl
add
nop
mov
adc
popf
fdivrl
inc
adc
push
xchg
and
sbb
mov
iret
and
les
sarl
mov
jno
adc
test
in
pop
clc
jns
js
test
fwait
cmp
dec
and
cs
add
inc
mov
shl
mov
ds
jg
cmp
or
mov
cmp
pop
fdivrs
and
xchg
or
lods
dec
jne
or
out
and
nop
push
mov
and
imul
gs
fdiv
hlt
push
and
inc
popf
in
mov
outsb
add
in
lret
repnz
xlat
push
popf
pop
cltd
fs
hlt
cmpsl
pop
sbb
fnstenv
inc
xor
das
mov
cmc
test
cld
mov
add
inc
xchg
pop
inc
not
rcrb
pop
stc
arpl
in
pop
out
roll
mov
lds
rclb
cs
sti
sbb
cwtl
out
aas
lahf
lock
imul
iret
fnsave
jge
cmpsl
loopne
inc
fsubrl
mov
pop
cmpsb
xor
or
data16
shll
inc
fmul
repz
jbe
inc
jmp
ret
in
icebp
das
int
inc
inc
lret
jge
insl
rclb
add
mov
fsts
scas
jb
scas
stos
shll
mov
jge
cmpsl
imul
int3
sbb
subl
push
shll
jge
and
data16
inc
push
scas
sub
aam
xchg
cmp
adc
jmp
mov
divl
scas
sbb
insb
loope
outsb
pushf
ret
int3
mov
repz
sub
ret
push
in
int
inc
adc
add
mov
test
cmp
jmp
mov
xchg
popf
sbb
adc
dec
adc
cmp
lods
or
pop
aas
fstpt
xchg
pop
sbb
test
adc
cmpsb
or
push
xchg
jl
mov
xor
pop
addl
sbb
popf
dec
xchg
loop
mov
push
loop
push
in
mov
xor
ret
popa
in
add
ss
add
lods
daa
push
call
aam
aas
mov
rclw
xchg
lcall
xor
enter
call
pop
in
js
popf
lahf
cmp
mov
or
sub
dec
jp
cli
mov
pop
inc
xchg
test
std
xchg
pop
adc
fldl
imul
fnsave
inc
jns
inc
inc
xlat
out
ret
flds
fidivrs
insl
cmc
pop
jbe
sub
rcrb
pop
cld
jnp
or
ret
inc
mov
sbb
and
fld
mov
js
addr16
adc
jo
repnz
pushf
sti
jl
push
dec
add
pop
inc
push
adc
mov
jae
in
cmp
dec
xor
push
imul
fidivrl
enter
nop
xchg
push
and
fldcw
movsb
aam
inc
aaa
mov
lahf
mov
pop
gs
ret
out
out
xor
insl
cmp
mov
lods
or
fisubs
mov
scas
mov
ret
js
cmc
dec
cltd
add
out
mov
das
xor
cmp
sub
mull
in
shll
js
xor
outsb
loope
xchg
xor
std
bound
xor
jl
leave
jle
popf
dec
testb
cld
ficomps
imul
dec
mov
add
leave
jl
in
xor
lods
cli
scas
enter
cmp
push
mov
mov
push
cmp
ja
push
sub
push
mov
dec
stos
mov
sub
jae
push
sarl
add
mov
and
jns
sbb
data16
shl
in
movsb
mov
into
inc
dec
mov
xor
dec
repnz
mov
sub
std
iret
mov
jle
mov
cwtl
sarl
inc
fcomp
js
add
iret
insb
leave
sahf
mov
stos
insb
adc
pusha
out
and
popa
or
fimull
popa
bound
cmp
sbb
pop
inc
xchg
les
pop
repnz
stos
lock
mov
jbe
fnstcw
sub
mov
dec
hlt
pop
pop
push
jmp
xchg
in
mov
mov
sti
in
cmp
pushf
aad
pop
mov
mov
sahf
xor
out
cmpsl
subb
insb
and
data16
xor
jp
cmpsl
mov
push
decl
subl
iret
dec
and
orl
addr16
sub
inc
lahf
stos
je
loop
inc
in
leave
pop
pushf
mov
mov
popf
jno
add
push
or
sbb
mov
or
dec
inc
xchg
fcoms
movsb
lods
dec
xor
lods
cmp
scas
loope
xchg
pop
and
jp
cmp
sub
sub
cmpsb
mov
jecxz
jnp
data16
jmp
or
sub
xchg
sub
jae
cmp
lods
adc
lahf
cmp
test
lds
sub
add
fildll
jge
xchg
roll
push
sub
pop
inc
orb
mov
mov
sub
clc
cmp
jb
sbb
xor
insl
test
mov
repnz
outsl
push
xor
stos
mov
mov
pushf
cmp
add
sub
dec
lds
xchg
sub
dec
fimull
mov
ja
mov
jnp
mov
hlt
fcomi
shll
in
add
jno
movsb
push
pop
test
js
movsl
sbb
scas
mov
in
cmp
sub
scas
lahf
xor
cmp
sahf
pop
fimuls
loope
test
mov
scas
push
inc
sub
call
fsubs
fwait
ror
dec
clc
adc
mull
test
in
out
jne
out
jge
dec
mov
cmp
inc
jnp
fadds
cmpsb
sbb
sbb
pop
or
and
xor
jne
or
push
cmp
dec
pop
lock
mov
push
cmpsb
mov
sbb
cmc
mov
sub
push
sbb
insb
neg
aam
adc
pop
das
sbb
loopne
sarb
pop
add
cmp
sbb
sbb
or
imull
and
pop
pop
sub
ret
push
sbb
and
leave
sbb
shll
in
mov
ljmp
inc
adc
dec
jp
leave
push
lcall
dec
aaa
add
add
pop
je
inc
mov
out
negl
jp
fs
pushf
xorb
leave
stos
jnp
push
or
cmp
cs
test
mov
mov
dec
or
push
dec
mov
popf
push
scas
lods
mov
nop
fcmovu
icebp
hlt
pushf
cwtl
jg
fidivl
leave
mov
fldenv
jbe
aam
pop
xchg
cltd
pop
pop
mov
iret
dec
adc
loope
bound
mov
aad
pop
leave
adc
sbb
pop
test
sub
stos
push
imul
ljmp
roll
scas
lock
sub
xchg
lods
inc
sub
xchg
push
jo
idivl
xchg
iret
dec
loope
icebp
jp
or
repnz
lcall
mov
cmp
pop
cmp
dec
inc
int
insl
aad
inc
cwtl
sbbl
loope
add
lea
fidivrl
cs
and
lcall
out
or
inc
xchg
cmpsl
dec
add
enter
sbb
adc
inc
andb
add
xchg
hlt
mov
jge
mov
inc
test
sub
sbb
lahf
inc
repnz
jmp
es
std
or
and
loop
add
cmp
mov
add
sahf
sub
loopne
mov
movsl
orb
xor
or
and
cs
ret
xchg
leave
scas
inc
or
aad
idivl
loope
ds
in
lds
adc
cmp
nop
adc
jb
adc
enter
xor
jo
or
in
pop
add
mov
jbe
xor
stos
sbb
cmp
das
pop
insl
sub
fs
and
push
sbb
mov
ds
and
and
cltd
mov
das
aas
or
xchg
repnz
push
into
rcr
inc
pop
shrb
cwtl
ss
push
dec
pop
movsl
and
lock
scas
push
inc
popf
pop
mov
mov
xchg
jae
lahf
or
test
fnstenv
je
data16
sub
cltd
jge
outsl
inc
and
adc
or
push
outsb
ljmp
jae
push
sbb
test
lcall
insl
fsts
jg
call
cmp
pusha
inc
cmpsl
cmc
jmp
jae
lds
xor
pop
dec
dec
test
mov
dec
out
pop
push
inc
inc
pushl
aaa
mov
int3
dec
xor
test
es
popf
test
outsb
jge
mov
outsb
ja
and
arpl
out
enter
sub
mov
mov
fs
int3
int3
push
adc
mov
cld
xchg
movsl
pop
xchg
adc
inc
add
insb
dec
sub
push
repz
in
shlb
mov
mov
mov
push
jg
rorb
sub
pop
xchg
jecxz
mov
insl
push
lods
ret
aad
dec
sub
pop
push
fmuls
fcoml
lret
mov
and
test
fdivl
shrl
xchg
push
cmp
js
jle
int
movsb
ss
test
add
or
fwait
shlb
test
outsb
inc
push
sub
sub
cwtl
mov
aam
jnp
dec
add
jmp
out
fistpll
xchg
mov
dec
adc
and
test
jb
dec
js
cwtl
test
or
cmpb
jbe
add
popa
pusha
std
pop
in
push
out
icebp
test
imul
pop
xchg
mov
jp
dec
addr16
call
cmpsb
xor
imul
push
jnp
lods
test
push
mov
cs
hlt
fdivs
add
idivb
rclb
add
xor
popf
pop
outsl
sub
in
movsb
imulb
pop
lsl
int3
push
fnstsw
insb
sbb
adc
push
xor
cmove
mov
dec
rcrl
das
mov
lds
cmp
or
xchg
cwtl
or
and
xor
aad
cli
sbb
mov
xor
mov
insl
jae
in
and
xchg
js
mov
ret
outsb
fsubrl
in
or
xchg
cwtl
dec
sub
cmpsl
push
out
out
sub
jl
sub
mov
sub
testl
mov
fsubl
xchg
xchg
mov
arpl
inc
cmc
add
mov
and
in
or
push
add
cmp
ret
pop
add
fimull
sbb
call
jmp
and
mov
sub
int3
xor
aaa
shlb
fistpll
cltd
xlat
inc
mul
dec
inc
mov
dec
mov
in
sub
jmp
mov
aas
adc
add
out
adc
xorb
and
fnstenv
sub
cwtl
pop
das
dec
xor
hlt
neg
jl
push
out
scas
dec
and
pop
fbld
addb
and
jns
roll
gs
ja
adc
ja
rep
fisttpll
leave
mov
add
leave
addr16
sbb
jbe
jmp
dec
pop
sub
in
out
sbb
pop
xchg
dec
les
out
add
xlat
ljmp
add
cld
sbb
push
push
pop
fs
test
sbb
add
mov
mov
xorl
xlat
insl
xchg
lods
cmp
mov
lcall
add
aaa
ljmp
or
jmp
rorb
aas
lods
and
je
pop
lods
out
roll
int
cs
and
push
xor
push
outsb
ss
mov
jae
inc
pop
mov
mov
mov
xlat
sub
popa
jge
cld
or
add
insb
add
mov
sub
mov
daa
icebp
add
daa
loopne
in
hlt
jmp
mov
aaa
inc
clc
lahf
adc
dec
fcmovne
fucomip
xchg
mov
cmp
out
sub
dec
sahf
or
test
push
dec
ret
out
push
or
mov
sub
insl
adc
cltd
fmulp
out
jle
dec
addr16
out
xchg
movsb
sahf
scas
or
inc
sbb
test
xchg
addr16
aad
pop
aaa
mov
jmp
fiaddl
movl
iret
push
hlt
cmp
inc
inc
mov
sarb
hlt
mov
mov
dec
xadd
in
add
and
mov
movsb
adc
or
test
cmp
js
mov
mov
mov
jmp
jl
out
dec
rolb
and
aaa
mov
test
jle
adc
mov
lea
jne
lret
dec
addl
adc
xchg
aaa
daa
inc
ret
andl
jb
mov
sahf
adc
xor
in
or
adc
test
pop
pop
cmp
mov
stos
stos
jno
fildl
lods
mov
subl
mov
das
popl
pop
fldt
and
cmp
push
and
rcrl
ss
sahf
jb
scas
sar
xchg
mov
push
pop
icebp
call
inc
test
cwtl
int
pop
sub
cmpsb
ss
pop
mov
cmp
jl
push
lea
jno
jmp
icebp
and
fiaddl
xchg
add
ds
fisubl
xchg
mov
adc
call
push
ss
xor
cmpsb
subb
fistl
fildll
pop
inc
test
jecxz
sbb
pop
lahf
cli
or
lret
push
sub
and
icebp
pop
shlb
jbe
cld
dec
lahf
filds
xchg
out
jecxz
sahf
jo
push
mov
dec
inc
xchg
or
enter
push
popf
orb
mov
adc
imul
pop
out
mov
lods
jns
push
inc
fisttpl
data16
jp
jmp
addr16
sti
iret
mov
dec
adc
add
mov
fsts
or
les
pop
test
cmc
and
cld
push
add
testb
jmp
out
cmpsl
xchg
mov
nop
std
jbe
sub
inc
insl
test
test
out
push
or
add
ss
addr16
sbb
jbe
and
adc
test
push
mov
jge
cmp
jae
daa
add
mov
lock
arpl
hlt
adc
popa
add
dec
push
lock
adc
je
mov
aas
scas
sbb
xor
adc
push
fwait
push
dec
fwait
jno
push
inc
arpl
jbe
jecxz
out
ds
cmp
fwait
in
mov
call
stc
push
push
movsb
sub
icebp
and
cmp
cwtl
pop
shlb
dec
stos
jmp
ja
jo
aas
push
mov
lea
dec
mov
pop
in
sahf
lahf
sbb
mov
dec
dec
add
popa
leave
stos
xor
lret
pop
xchg
sahf
cmp
mov
xchg
ret
lcall
mov
fildl
out
pop
push
js
pop
push
mov
pop
test
and
mov
xchg
hlt
test
scas
inc
sub
and
cmp
insb
imul
aaa
inc
adc
ja,pt
push
fdivrs
cmp
mov
push
ss
push
mov
js
test
mov
mov
fwait
mov
xlat
sarb
test
push
pushf
dec
pop
mov
mov
test
jp
icebp
mul
rolb
outsl
add
scas
int
dec
sbbb
cwtl
inc
jno
mov
dec
mov
push
cmp
cld
in
pop
test
call
les
data16
ret
mov
sub
adc
into
xchg
les
out
js
xchg
cwtl
daa
adc
cwtl
out
inc
stos
nop
xor
insl
adc
ja
pushf
push
adc
sub
out
mov
adc
sbb
mov
rorb
lret
xchg
movsl
or
aas
pop
jbe
hlt
addb
cmp
pop
pop
inc
bound
gs
cwtl
test
jb
arpl
jae
jnp
arpl
push
dec
iret
call
sbb
sbb
lcall
call
sbb
xchg
mov
bound
out
pop
jns
push
jo
addl
lcall
lret
popf
gs
cmpl
sbb
xchg
js
out
ret
lds
mov
pop
lcall
sbb
mov
sbb
pop
mov
pop
push
dec
cwtl
cmp
lds
ja
add
loopne
xor
pop
lds
or
insl
inc
sub
clc
add
and
stos
mov
in
or
cmc
fcom
xor
mov
cli
loopne
mov
push
adc
or
fcoms
jae
scas
pop
stos
adc
lods
es
testl
or
fisubrl
shr
jb
dec
mov
xchg
xchg
test
xchg
pop
jno
test
push
dec
mov
sbb
push
mov
push
cmp
add
xchg
cmp
out
rolb
cli
and
cmp
mov
or
leave
fimuls
jl
test
repz
sub
jp
shrb
aam
ss
test
cld
hlt
dec
ss
adc
andb
mov
scas
test
js
adcl
es
cmpsl
leave
add
and
xchg
hlt
std
adc
fistpl
mov
je
xor
mulps
sub
xchg
cmpsb
cwtl
cld
divl
test
sti
ret
dec
pushf
dec
sbb
scas
jbe
push
leave
dec
lods
lret
push
ret
outsl
in
xor
gs
int3
push
jecxz
imul
push
sbb
inc
cmp
xchg
cs
cltd
js
xor
add
aad
ficomps
loopne
jmp
xchg
sub
ret
out
push
out
aad
mov
inc
pop
mov
adc
enter
insb
ror
pusha
icebp
xchg
dec
daa
out
out
cld
pop
stc
lret
sti
push
xchg
mov
sbb
arpl
push
loopne
or
dec
mov
aas
out
repnz
les
and
std
ss
test
lret
sbb
lods
out
fmul
cli
sarb
push
imul
cmp
popa
cmc
mov
movsb
scas
lock
les
rcrb
popa
mov
inc
insl
jbe
out
cmp
jne
cmp
mov
lcall
mov
bound
jp
shll
pushf
inc
sarl
ljmp
je
outsb
adc
lods
xchg
xchg
mov
mov
mov
nop
in
andb
push
mov
scas
jge
in
xlat
lret
imul
inc
mov
jl
mov
sub
pushf
jo
cwtl
imul
xor
outsl
xchg
popf
insb
das
pop
stc
ja
push
cld
rcr
loop
lret
xchg
repz
ret
mov
inc
pop
in
daa
sar
push
fildl
and
mov
fldt
xor
aam
mov
vpunpckhbw
push
iret
xchg
sbb
adc
mov
pop
lock
call
in
int3
mov
push
mov
mov
dec
andl
mov
stos
iret
insl
es
pop
and
inc
pop
xor
test
shl
jecxz
out
iret
addr16
das
jo
ds
fwait
mov
xchg
xor
xchg
xor
stc
in
mov
stc
mov
sarl
sbb
mov
fld
notb
in
clc
xlat
jno
call
lea
test
int3
cmp
loop
mov
stc
add
mov
pop
sub
in
adc
xor
pusha
cmpsl
xchg
dec
mov
es
cmp
fcomps
aas
pushf
xor
or
test
add
push
cmp
mov
repz
sbb
ret
in
adc
cmp
jecxz
cmp
sbb
ret
in
add
or
testb
pop
setg
shll
cmp
dec
pop
add
mov
or
mov
and
and
mov
je
jge
jnp
jl
cltd
insl
loop
jbe
sbb
lds
lea
jno
mov
cmpsl
hlt
sub
addr16
iret
decl
repnz
sahf
pop
and
inc
add
ds
lods
daa
cmovne
pushf
jnp
pushf
out
mov
or
cmp
jb
sbb
lcall
sub
outsb
nop
pop
rcr
mov
in
test
xchg
cltd
ja
fistpll
mov
out
jb
push
je
out
and
jno
scas
sub
mov
jge
aad
fistl
jg
leave
mov
popa
pop
negl
adc
fs
out
dec
mov
es
popa
stc
xchg
push
cmpsl
dec
push
and
movsb
or
or
jg
stos
fsubl
je
add
scas
jl
adc
and
repnz
xor
fldt
xor
mov
rcrb
xlat
xchg
or
cwtl
sbb
imul
pop
ljmp
cli
jnp
lea
sub
pop
add
shlb
aaa
jl
pop
jge
dec
mov
ljmp
cmpsb
or
jo
add
repnz
sub
push
pop
adc
dec
es
das
xorl
mov
push
xlat
scas
jp
mov
dec
sbb
pop
in
jno
fidivrs
jnp
mov
mov
sbb
bound
xorb
stc
mov
jge
in
nop
in
xor
xchg
cmp
xor
jnp
mov
push
loopne
mov
and
mov
lret
bound
add
fimull
cmp
jecxz
ss
movsb
js
xchg
dec
mov
sub
filds
cmp
push
adc
pushl
mov
int
add
jns
adc
and
mov
inc
jmp
cs
movb
lods
add
nop
lret
jp
mov
mov
cmp
cvtps2pi
sbb
movl
add
lods
into
xor
mov
cli
jmp
cs
or
inc
push
popa
sahf
loope
gs
push
inc
and
in
lods
xchg
push
nop
clc
lock
sub
xchg
sarl
rcr
mov
pop
mov
ljmp
mov
add
je
xchg
fsubrl
ficompl
in
dec
fdivrl
cmp
mov
in
jns
pop
cs
pop
call
mov
mov
rolb
pushf
mov
imul
outsl
mov
pop
sub
inc
pop
mov
or
push
pop
imulb
inc
into
mov
pop
loope
sbb
in
mov
jo
sub
iret
mov
andb
jo
loope
js
sbb
cmpb
dec
inc
push
jo
mov
ret
cmp
xchg
sahf
mov
inc
mov
jb
scas
mov
jle
pushf
mov
mov
jo
cltd
std
adcb
jmp
frstor
cli
push
jne
dec
add
fdiv
and
mov
std
dec
jno
iret
sysexit
lds
dec
pop
cmp
sbb
testb
fs
jmp
push
in
call
fidivrl
std
jo
scas
and
in
pop
push
out
pop
mov
aas
add
fs
arpl
mov
stos
cmp
mov
scas
bound
int
cmp
outsb
jge
out
ret
fbstp
mov
cmp
mov
pop
jge
arpl
int
out
fucomp
aas
xchg
test
pusha
dec
ja
rclb
cs
test
popf
adc
xchg
jge
aad
pop
dec
inc
xchg
scas
or
jle
test
inc
in
or
mov
jecxz
aas
sbb
push
sub
out
or
cltd
dec
inc
sahf
shrl
and
ja
xchg
outsb
scas
lcall
lds
pop
aaa
test
jo
mov
xchg
aas
scas
xchg
inc
sbb
enter
in
inc
cmp
call
mov
pop
rorb
inc
fwait
int
cmc
lcall
insb
ret
push
lods
mov
repz
icebp
or
fidivl
inc
mov
lcall
andl
nop
adc
scas
ret
nop
dec
stc
mov
xor
or
and
scas
inc
in
andb
mov
arpl
xor
ret
hlt
pop
xor
pop
fisttpll
xchg
pop
ja
push
rol
and
outsl
push
movsl
jmp
pop
adc
fmull
in
mov
or
dec
push
mov
cmp
sub
sarl
repnz
xchg
mov
shll
leave
xchg
dec
pushf
adcb
xchg
pop
inc
mov
cmp
fwait
movsb
sbb
jecxz
in
stos
and
dec
mov
test
push
dec
jnp
es
mov
inc
outsl
xchg
pop
jns
mov
add
jmp
fwait
push
fisttpll
sub
rol
adc
int
mov
stos
loope
xchg
fs
push
xlat
mov
rclb
pop
rcrl
and
sbb
inc
push
xchg
jnp
jo
frstor
adc
push
aas
dec
xchg
bound
daa
inc
inc
lret
add
inc
xor
aad
mov
mov
lret
adc
mov
ss
or
jno
sahf
fs
enter
nop
jb
and
mov
stc
pop
scas
call
std
insl
sarb
ret
or
scas
in
leave
adc
into
add
in
pop
ret
xor
xlat
xchg
in
and
jne
push
dec
cmp
lds
push
jns
ljmp
sti
dec
inc
sti
pop
add
mov
nop
scas
push
lds
xchg
ljmp
sub
icebp
mov
mov
je
inc
pop
sub
inc
push
jmp
testl
mov
mov
daa
and
jl
outsb
xchg
hlt
cmp
in
sbb
pop
push
fstl
daa
popa
sbb
and
popf
push
arpl
inc
xchg
jecxz
int
mov
testb
outsl
rol
push
das
sub
cs
cld
out
push
add
push
cmp
fwait
cmp
arpl
sub
and
or
popa
pop
sub
rcrl
es
sbb
in
jne
fistpl
jne
gs
test
mov
sbb
cmpsl
aas
adc
jecxz
rorb
mov
mov
stos
cwtl
sbb
pop
add
mov
insl
into
fmulp
dec
sub
jbe
rcll
sub
test
lods
leave
outsl
push
lea
push
jecxz
cltd
std
in
dec
push
into
cmc
xchg
sbb
clc
xchg
movsl
rclb
inc
dec
cld
cmpsl
or
in
es
shrl
sub
and
outsb
inc
inc
cli
cmp
scas
fimull
sub
mov
sahf
adc
xchg
mov
rorl
call
outsb
cmp
jecxz
and
mov
push
pop
mov
inc
cmpsl
ljmp
lea
stos
enter
sub
popf
sbb
rorb
push
enter
xor
test
mov
cmp
in
pop
adc
jne
xor
xchg
jo
inc
xchg
push
add
mov
cmpl
push
aas
hlt
cmpsb
mov
adc
in
inc
loope
jb
mov
add
adc
mov
xchg
add
dec
lahf
cmp
mov
sbb
push
imul
pop
and
inc
scas
mov
test
shl
mov
cli
xor
push
shlb
fdiv
add
outsb
cmp
add
cmpsb
inc
mov
stos
sub
xor
out
xorl
and
imul
and
inc
jbe
in
shl
cmpsl
inc
outsb
cmpsl
cmp
xchg
xor
bound
scas
test
inc
jae
push
cltd
arpl
xor
mov
jae
lods
movsb
push
inc
xchg
mov
cmp
int
icebp
cli
pusha
ja
clc
mov
push
jl
iret
popf
sub
test
mov
mov
add
push
xchg
ljmp
push
dec
loope
test
test
mov
sub
and
mov
jo
aas
jecxz
add
cmp
xor
inc
out
icebp
inc
inc
push
stc
dec
xchg
outsb
outsb
adc
xlat
xchg
data16
pop
repnz
rcrb
nop
mov
out
xor
pusha
inc
bound
jle
xlat
mov
outsb
ljmp
movsb
insl
scas
es
xchg
or
aas
mov
mov
pushf
rolb
js
into
xor
loopne
push
xor
nop
pop
xchg
repnz
decl
mov
test
and
jno
fstl
ljmp
call
mov
ret
mov
fcomp
add
loopne
insl
add
adc
mull
out
add
xchg
push
dec
push
or
sbb
jb
push
out
hlt
pusha
and
cmc
repnz
sub
ja
sbb
jns
pop
sub
inc
aaa
jl
add
sub
inc
or
out
push
dec
jecxz
insb
xchg
or
xchg
push
cmc
pop
aam
in
sub
or
in
out
pop
mov
add
repz
or
repnz
scas
pop
out
mov
pop
mov
push
lods
fstp
call
add
cmp
std
push
test
es
out
outsl
fdivrs
insb
pop
sahf
cmp
xchg
daa
push
mov
pop
in
push
mov
arpl
jecxz
mov
pop
push
bound
cmpsb
lock
in
or
repnz
jmp
aas
scas
mov
iret
jns
je
es
orl
pop
fcmovnu
push
aaa
leave
stos
scas
test
fsubrl
jge
cmp
ds
sub
test
cmp
lock
jne
add
pusha
pop
ja
xor
pop
or
lods
iret
bnd
add
or
mov
movsb
stc
orl
pop
mov
mov
push
jo
aam
xchg
fildll
fcmovu
bound
sti
cwtl
loope
or
xchg
mov
cmp
stos
loopne
enter
cmpsl
cld
lret
pusha
clc
pop
cwtl
test
or
les
gs
jl
scas
cld
jmp
sub
fstpl
inc
movsl
lret
lahf
in
or
jnp
adcl
addr16
or
pcmpgtd
dec
and
add
pop
inc
inc
cmp
push
dec
fsub
lcall
incb
mov
movsb
xchg
mov
inc
mov
incl
test
mov
pushf
xor
popa
xchg
ret
lock
mov
adc
outsb
out
push
or
adc
sbb
dec
fsts
xor
movsl
lds
mov
xchg
xchg
lret
das
and
mov
ljmp
pop
push
lret
insb
adc
jns
loope
add
jnp
xor
icebp
cmp
test
test
jle
out
aaa
mov
mov
sti
jle
mov
ljmp
out
and
push
popf
and
push
nop
sti
mov
cmpsb
xchg
pop
xchg
loope
jno
das
insb
iret
insl
push
push
pop
mov
popa
xchg
adc
in
add
cmp
test
shll
sub
mov
sbb
int
xor
cmpl
pop
sbb
ret
mov
out
popa
das
ljmp
cmp
cmpl
inc
mov
inc
pop
lcall
lret
in
in
jbe
dec
test
fstps
stos
out
in
mov
lock
xchg
sub
add
test
into
push
mov
jmp
or
adc
mov
dec
loope
rol
cs
outsb
adc
pop
mov
mov
or
aam
add
aam
xor
or
dec
loopne
adc
test
out
or
mov
mov
and
out
rcrb
cmpsb
xor
or
cmpsb
es
test
jecxz
sbb
push
cmpsl
ds
outsl
hlt
scas
pop
fs
aad
jge
cmp
add
adc
scas
push
sub
orl
mov
push
subl
inc
sbb
mov
xchg
sub
leave
imul
fcomps
mov
addr16
xchg
mov
jg
arpl
or
xor
dec
loop
jae
adc
sbb
adc
push
xchg
not
insb
cmpsb
imul
fcompl
xchg
push
stos
flds
scas
mov
imul
in
addb
xchg
shrl
mov
push
cs
subb
rcll
dec
cwtl
lods
push
adc
sub
bound
mov
dec
jno
xor
out
cmpsb
dec
lret
arpl
mov
mov
push
into
sbbl
shlb
popl
dec
inc
lds
pop
jg
pop
xchg
jns
stos
daa
outsb
or
xchg
inc
andl
jp
es
and
in
insb
imul
pop
adc
outsb
pop
inc
loopne
sbb
inc
push
movsb
test
mov
imul
xor
mov
mov
and
mov
in
push
xchg
and
dec
out
and
inc
out
mov
sub
pop
add
pop
cmpb
or
aad
jl
in
cmp
out
sahf
push
push
je
outsb
adc
jecxz
shr
das
jg
jmp
mov
xor
leave
mov
push
xor
in
mov
or
jl
stos
pusha
in
arpl
jecxz
rcr
xor
mov
stc
out
cmpsl
xchg
test
roll
shrb
inc
int3
xor
xchg
movsl
mov
lret
cmpb
loop
xor
xchg
pop
lods
and
pushf
and
data16
ja
cmp
and
push
jmp
add
mov
pop
dec
mov
lds
adc
fsubs
mov
push
int
adc
lods
mov
fwait
out
loope
ss
pop
aam
loopne
stos
jnp
imul
inc
and
add
test
dec
cmpsb
or
aas
fisttps
and
dec
inc
cwtl
stos
js
fwait
add
rorl
or
ret
cmpb
sbb
test
dec
xchg
subb
adc
ja
mov
bound
fcoms
lods
or
in
dec
rcr
les
decb
sbb
jb
aad
icebp
sahf
arpl
roll
daa
lods
or
and
enter
out
lret
int
push
fwait
xor
pusha
sarb
testl
loop
add
sub
dec
repnz
xchg
pop
push
fidivs
cwtl
popf
jnp
pusha
out
loop
jb
ret
cs
cmp
clc
mov
xchg
je
pop
insl
mov
std
lock
sbb
mov
push
lods
lock
in
int
jb
into
mov
lods
scas
and
push
int
mov
lds
xchg
test
cwtl
out
test
out
inc
sub
lret
mov
push
popa
mov
dec
pusha
adc
pop
sbb
arpl
pop
xchg
out
in
fwait
jbe
xchg
out
add
mov
or
aaa
iret
xor
repnz
and
lret
movsl
mov
mov
icebp
mov
fdivl
xchg
push
lcall
arpl
jge
jne
ss
xorl
in
outsb
sahf
add
loope
add
mov
add
jbe
add
fcoml
xor
in
nop
pop
or
rorb
sub
jne
or
imul
aas
aad
testl
enter
les
ja
je
insl
stos
sbb
mov
cmp
repnz
inc
adc
pop
pop
aad
fldcw
xrelease
mov
in
xor
and
test
add
cwtl
sub
sub
and
out
int
xor
xor
ret
cmc
pop
mov
fldcw
xor
jg
sbb
sub
cld
push
daa
xchg
test
cld
in
jl
insl
xchg
lret
lret
add
imulb
insl
and
test
sub
sub
push
sar
dec
mov
enter
dec
mov
adc
gs
dec
push
in
cli
cmp
pop
cli
push
hlt
fldenv
inc
and
clc
jg
or
cli
test
sub
mov
or
jbe
mov
add
mov
testl
lds
jnp
sub
add
mov
jmp
pop
enter
inc
pmuludq
sub
push
mov
sub
fistpl
addr16
fs
cmp
cli
xor
sbb
cmp
add
testl
cmpsb
loopne
push
mov
mov
or
sbb
jb
or
retw
je
mov
call
scas
repz
jnp
and
or
fnsave
shl
in
adc
pop
roll
xor
fisubrl
imull
aam
in
ljmp
pop
inc
xchg
insl
negb
cmp
shr
sbb
addr16
xchg
rcrl
and
mov
inc
xchg
addr16
xor
sbb
ret
push
push
mov
movsl
mov
mov
fs
incb
in
pop
dec
mov
add
add
cmpsl
and
mov
adc
pop
inc
push
adc
push
imul
leave
xor
loop
jl
push
and
sbb
in
repnz
inc
fdivs
pop
in
mov
into
in
nop
and
insl
fistpl
dec
cmp
dec
icebp
popa
jecxz
fildll
pop
sub
xchg
push
cltd
fdivr
cmpb
push
mov
adc
sbbl
inc
imul
mov
pop
in
pop
mov
lock
gs
std
notb
push
xor
popf
dec
fdivrl
popf
aad
xchg
xor
into
mov
jbe
les
in
add
mov
nop
push
mov
push
nop
pop
xor
ja
jle
sarb
sub
mov
les
pop
cmpl
inc
leave
aam
clc
adc
sbb
jecxz
xchg
mov
enter
dec
fbstp
mov
adc
iret
rorb
mov
pop
cmpsb
mov
jae
in
xlat
pusha
sub
and
cmpl
xchg
fdivs
cmp
rcll
inc
in
adc
mov
test
mov
mov
jge
stc
lea
dec
push
insb
std
shrb
jns
mov
jmp
stc
gs
jl
scas
add
cmp
sbb
jp
stos
dec
dec
cmpsl
pop
out
leave
and
mov
cmp
into
cmp
aas
lret
jle
push
mov
push
ss
xor
test
sar
sarl
mov
fldenv
ret
xchg
rcl
idivb
push
jmp
loop
and
cmp
fsubrs
pusha
ret
stc
je
xchg
pusha
cmp
shlb
adc
add
add
rolb
mov
and
mov
movsb
je
in
and
inc
lret
cwtl
push
fcoms
lahf
pop
inc
push
fidivrs
sbb
add
add
mov
add
jne
adc
cmp
mov
jne
mov
xchg
jb
push
add
or
cld
cmp
pop
ljmp
hlt
fistpll
dec
and
or
test
aam
mov
sahf
jecxz
xchg
popf
loopne
or
push
mov
inc
push
jge
adc
sahf
sbbl
cmp
in
inc
inc
shlb
dec
pop
loope
addr16
and
mov
xchg
cmp
inc
xor
bound
or
adc
in
push
in
xor
push
popf
mov
mov
sub
and
and
jo
push
xchg
inc
fmuls
jp
test
test
andl
cltd
or
outsb
pop
mov
clc
ljmp
dec
xchg
aaa
jne
popf
into
lods
sbb
mov
sub
int
cwtl
call
pop
aad
popf
jnp
dec
sub
inc
sahf
cltd
sbb
aad
fdivrl
xchg
test
fsubs
or
mov
adc
push
inc
incb
shll
mov
mov
sbb
mov
jp
fcoml
test
das
cmp
fwait
sti
mov
inc
outsl
xchg
mov
ret
jns
leave
add
jb
add
in
push
sub
cmp
push
xchg
test
xchg
inc
test
mov
std
out
lods
je
cli
add
xchg
cs
sub
or
and
pusha
push
flds
cltd
or
enter
pushl
rcll
dec
test
sbb
xor
ljmp
sti
sub
jp
cld
in
xchg
push
xchg
adc
cmp
mov
push
dec
rcll
add
in
mov
ret
inc
push
adc
mov
js
cwtl
xchg
mov
adc
mov
test
test
repnz
fistpll
jbe
mov
xor
lods
jl
cmp
mov
mov
das
mov
xchg
out
mov
and
lds
cs
insb
pusha
stc
pusha
mov
cmp
pop
adc
pop
jge,pt
mov
popf
mov
cmp
imul
sahf
daa
jle
fisubrl
das
inc
in
mov
jg
push
dec
add
jge
push
mov
or
mov
into
int3
mov
mov
jae
negl
ljmp
faddl
mov
jmp
sub
ja
jne
cli
shlb
pop
sub
jns
or
pop
push
bound
jl
cmp
icebp
icebp
fnsave
notb
push
fwait
arpl
out
jb
mov
inc
mov
mov
arpl
lret
lcall
in
test
daa
jne
enter
negl
sbb
pushf
xchg
stos
pop
mov
xchg
rorb
adc
push
dec
and
pop
aad
fnsave
push
xlat
and
jb
fwait
pop
mov
pop
pop
ficoml
fucomi
xor
ror
pop
dec
cmp
stos
in
mov
aaa
mov
or
into
lock
push
in
mov
fdiv
lock
mov
dec
dec
out
lods
dec
fstps
mov
xchg
cmp
or
jns
sbb
cmp
rorl
es
cmp
mov
pop
inc
sti
scas
orl
ss
test
and
shr
sub
mov
imul
dec
and
xchg
sub
sub
push
xchg
cwtl
jnp
push
jns
mov
and
bound
xchg
dec
xor
push
divb
mov
les
jnp
push
xor
ds
into
add
pop
repnz
xchg
or
cmp
or
sbb
in
sbb
xchg
pop
sub
xchg
and
push
and
je
sbb
repz
add
sub
cmpsb
mov
mov
push
sub
je
repnz
es
dec
popf
es
fs
filds
push
dec
stos
cltd
mov
xchg
push
cmc
cld
fmuls
out
pop
aad
inc
xchg
lret
mov
or
ss
cmpsb
sub
mov
cmp
xchg
fwait
add
xchg
dec
inc
ret
ret
mov
lea
clc
call
add
js
add
dec
loopne
inc
jge
push
iret
dec
jp
pop
scas
jmp
ja
in
adc
out
jmp
bound
rcll
fldenv
xchg
pushf
and
cs
adc
xchg
xchg
test
adc
mov
mov
je
and
sub
add
pop
xor
addr16
jo
cmc
scas
lea
int3
xor
jo
int
insl
imul
cmp
dec
xchg
dec
mov
xchg
aaa
popa
sahf
andb
or
adc
push
std
in
xor
mov
jge
cmp
jg
jb
mov
movsl
cmp
or
loope
call
std
adc
test
imul
inc
jnp
or
add
mov
in
and
mov
bound
inc
ja
iret
fucom
jl
jne
clc
mov
sub
les
cmp
repnz
arpl
test
fcomip
cld
inc
adc
outsb
addr16
fbstp
jle
leave
or
mov
ss
lods
jecxz
icebp
inc
stos
push
mov
xor
inc
xchg
ffree
jb
dec
xor
popa
pop
cmp
xor
shrl
das
pop
data16
add
pop
xchg
mov
add
into
xchg
cmp
int3
lret
arpl
mov
add
inc
outsl
push
mov
mov
dec
pop
outsb
enter
sbb
rcll
aad
pop
ljmpw
les
jne
push
orb
ret
jo
dec
mov
jno
pop
push
xlat
stos
add
inc
push
popf
and
std
adc
jp
cltd
cs
sbb
repnz
mov
dec
jl
rorb
xorl
lods
cltd
bnd
mov
push
push
push
outsb
sbb
divl
pop
dec
jecxz
or
mov
pusha
pop
push
pop
mov
dec
notl
adc
sub
mov
enter
mov
and
mov
push
daa
lds
and
mov
cwtl
sbb
lcall
data16
test
ja
out
inc
ja
mov
dec
ret
lock
fstpl
add
and
arpl
adc
enter
jmp
mov
test
mov
push
and
testb
stos
sub
orl
ret
stos
cmp
push
pop
push
and
jmp
sahf
inc
stos
or
xchg
inc
add
xchg
iret
mov
call
xchg
sahf
subl
sub
jo
dec
and
das
push
in
dec
sarl
fwait
loop
and
inc
subb
daa
add
dec
xor
mov
fldl
in
sbb
jo
adc
scas
sbb
imulb
jne
into
dec
negb
gs
jb
push
mov
test
pushf
out
push
fdivr
aas
stc
push
xor
dec
cwtl
mov
xor
fmull
push
mov
fisubs
sahf
sub
or
cs
sub
repz
mov
pusha
push
pop
out
xor
nop
loopne
ja
inc
fimull
and
cmp
jle
insl
push
mov
cmp
sub
subl
mov
xor
push
mov
push
sbb
enter
ja
es
cmc
jne
rcr
divl
jmp
and
divb
lods
mov
imul
mov
dec
jns
lret
aad
dec
pslld
sub
xor
mov
into
movb
outsb
sub
pop
push
scas
sahf
and
push
cmc
sub
cmp
mov
lret
pop
lret
xchg
push
mov
mov
movsl
sbb
mov
clc
mov
ja
clc
and
xchg
or
cmp
jne
inc
adc
fdivrl
sub
psrlw
adc
mov
mov
pop
inc
and
mov
sbb
enter
mov
imul
jge
loope
nop
jmp
pop
push
sub
sbb
push
pop
mov
or
cmp
ficomps
mov
sbb
jl
lcall
push
push
pop
dec
scas
popf
mov
pop
pop
push
mov
stos
sbb
leave
mov
xor
push
in
pop
or
dec
loop
mov
cmp
mov
repnz
test
xchg
cmp
mov
xchg
cmc
repnz
mov
addr16
cmpsb
lods
inc
ficoms
insl
sti
aam
addr16
repnz
in
cltd
xor
adc
dec
pusha
cmc
fiadds
cwtl
or
fstpl
lock
std
pcmpgtb
inc
xor
test
or
cmp
imul
xor
sbb
scas
mov
insb
cwtl
cmp
pop
pop
lods
in
insl
repnz
leave
test
sbb
adc
ret
xchg
cmp
cmp
mov
push
inc
lahf
fucomip
push
cmp
ret
push
fsubs
insb
and
pop
mov
xor
xor
repnz
mov
aas
decl
jl
loope
push
sub
loope
movzwl
fwait
and
es
stc
add
cmp
negl
dec
lahf
sbb
push
les
mov
sti
sub
xchg
pop
inc
cmpsb
push
jne
lock
sahf
stos
pushf
cmp
add
sub
or
jnp
xchg
in
adc
mov
inc
lahf
out
sub
outsb
and
in
xchg
pop
inc
imul
adc
iret
stos
incb
mov
dec
mulb
jae
mov
mov
cmc
xlat
mov
cwtl
lock
mov
or
cld
fs
dec
hlt
mov
popa
push
adc
add
int
sub
push
inc
mov
out
pmaxsw
mov
jl
adc
sbbl
push
divb
fcomps
clc
push
push
repz
mov
fstpt
insb
jg
dec
rorl
inc
sar
mov
jmp
mov
insl
fdivs
popf
movsl
inc
pop
pop
cmpsb
pop
add
sbb
insl
in
push
insl
push
iret
xchg
sub
xlat
dec
jo
lods
repz
adcb
xor
cwtl
les
dec
pushf
mov
repz
out
inc
sbb
shrb
es
cmpsl
pop
sub
movl
dec
add
cmpsl
int
or
psubd
into
inc
push
je
mov
xor
clc
outsb
mov
sbb
mov
push
repnz
jns
push
push
xor
fidivl
jo
fwait
xchg
xchg
scas
inc
cltd
adc
xlat
shlb
add
pop
pop
insb
pop
sbb
push
add
orl
sub
lods
mov
test
push
in
outsl
dec
adc
xor
enter
lcall
pop
add
cs
jno
xchg
add
adc
outsl
dec
mov
enter
add
push
ret
jge
push
pop
push
pop
and
sub
sbb
adc
insb
js
mov
inc
jmp
test
sarb
lcall
mov
or
pop
sub
dec
push
in
or
cmp
xor
jecxz
loop
and
add
cmp
mov
adc
fwait
clc
cmp
cmp
fildll
imul
insl
aad
xor
or
cld
add
sbb
xchg
inc
cmp
cltd
pop
mov
sbb
pushf
mov
idiv
dec
orl
pop
aas
mov
fldenv
stos
mov
stc
das
mov
mov
xchg
mov
jo
mov
mov
and
pop
test
mov
sbb
xor
iret
or
push
imul
push
sub
add
es
fdivl
clc
xchg
pop
test
xchg
and
xor
int3
pop
jg
in
mov
addr16
xchg
xor
orb
stos
mov
pop
outsl
xchg
add
fadd
rclb
insl
lcall
and
ja
push
cli
mov
sub
fldcw
lahf
ror
add
jg
gs
pop
push
in
sbb
lds
in
dec
push
imul
daa
dec
adc
das
mov
stos
das
rorl
pop
fidivrs
pop
xorl
dec
js
dec
imul
outsl
inc
call
stos
mov
js
lcall
in
fdivl
mov
pop
cld
mov
jo
in
mov
and
jge
adc
xlat
aas
les
mov
mov
in
adc
mov
out
ja
outsl
or
std
cli
xchg
popf
push
nop
push
cmp
jge
das
mov
push
mov
out
cs
cmp
xchg
push
fcmovnb
sahf
mov
mov
pusha
int
mov
pop
rolb
js
jnp
sbbl
sub
xlat
and
push
fsts
shl
test
int3
push
bnd
rcrb
dec
daa
loopne
add
loop
lcall
xchg
aam
push
adc
xchg
popa
mov
mov
icebp
sti
insl
push
iret
in
jo
cmc
pop
xchg
dec
jbe
ret
mov
roll
aas
jl
adc
pop
shrl
je
ret
xchg
test
shlw
adc
cmpsl
aaa
dec
sbb
adc
and
mov
mov
mov
lret
xor
ret
mov
ljmp
push
int
or
je
xlat
outsl
adc
jmp
ret
sub
insl
iret
dec
pop
out
daa
sub
jns
cmp
scas
jg
inc
xchg
enter
hlt
push
mov
pop
push
jle
jecxz
cld
jns
jno
push
fsubr
ja
testb
ret
subl
ficoml
pop
daa
fbld
ss
cmp
push
std
mov
mov
push
mov
mov
mov
xchg
xor
mov
shrl
cltd
imulb
jno
xor
push
out
or
pop
punpckldq
test
dec
push
movsb
rcll
mov
mov
dec
cmp
mov
imul
leave
mov
stos
test
out
jge
sub
push
xchg
mov
ret
repnz
lcall
shrb
int3
cltd
lods
nop
std
jl
ficompl
in
or
or
cmp
pop
dec
mulb
pop
mov
push
or
jbe
das
loope
dec
test
cli
mov
cmp
je
je
cmc
addb
data16
adc
pop
roll
add
bound
mov
inc
aaa
add
dec
sbb
scas
xchg
jns
daa
lret
push
lea
inc
push
or
adc
push
mov
push
push
cmpsl
xchg
sbb
es
and
in
xor
jne
sbbl
imul
repz
xor
adc
aam
and
pop
or
into
mov
jl
leave
mov
pop
fidivrl
je
movsl
mov
stc
cmpsl
out
sbb
cwtl
jno
dec
fsubrp
ds
in
dec
ffreep
xchg
outsb
mov
pop
pop
out
in
inc
pushf
adc
test
fcoml
mov
dec
jecxz
and
mov
jl
mov
fldenv
pusha
dec
push
outsb
js
imul
dec
cmp
jbe
test
in
jl
jbe
jge
popa
fdivs
aad
mov
into
sub
les
or
jbe
add
pop
aam
jae
cwtl
enter
in
pusha
mov
movd
aas
pushf
inc
mov
sub
mov
imul
push
dec
xchg
jg
or
cmp
xor
sti
xchg
mov
popl
lods
sbbb
stos
inc
or
push
fs
cmp
sub
mov
adc
jmp
cmp
idivb
or
loop
stc
mov
push
mov
test
inc
int3
test
test
clc
cmp
xchg
add
xchg
cmp
jns
sbb
mov
pop
mov
cmc
add
divb
xchg
fmulp
inc
jns
out
mov
iret
rcrl
gs
cmp
push
stos
inc
or
push
mov
ficoml
in
clc
test
insb
cmp
and
jmp
xchg
into
scas
out
mov
xchg
push
pop
addr16
sbb
std
divl
lcall
daa
push
lods
jg
repnz
inc
jne
inc
push
add
aaa
stos
aam
push
fcompl
call
adc
clc
lcall
imul
adc
jae
add
lahf
rclb
icebp
popa
mov
mov
cmp
xlat
push
adcl
int
mov
jo
sub
mov
das
cs
fists
xor
sbb
int
icebp
insl
inc
pop
ss
shrb
pop
stc
pop
inc
leave
in
sub
adc
jecxz
push
iret
shl
lock
loopne
or
cmp
lods
jne
fldlg2
mull
mov
out
cmpsl
pop
add
movsb
add
fstl
imul
jge
ret
push
movsl
xchg
stos
stos
imull
push
mov
cltd
out
aas
jge
cltd
lds
sbb
lcall
sbb
ss
jne
mov
outsl
inc
lds
sub
inc
pushf
and
push
push
cmp
jle
mov
shr
pop
pop
push
loope
or
in
mov
test
lahf
nop
repnz
aas
insl
leave
subb
enter
addl
jbe
inc
insb
insb
add
clc
pop
dec
xchg
pop
jmp
add
bound
in
je
repnz
pop
inc
dec
or
sti
jnp
jbe
fcmovbe
sbb
inc
outsb
lock
popf
inc
dec
fcmove
push
aam
pop
push
cmp
test
into
mov
mov
cmp
insl
mov
into
lods
pop
orb
dec
dec
int
rcl
nop
fistpl
sar
mov
adc
je
out
adc
sarl
xor
pop
mov
sbb
jg
insb
rcll
mov
mov
mov
adc
jae
sbb
out
xchg
fbstp
pusha
fistl
mov
shlb
movsl
push
mov
movsb
adc
or
and
fisubs
inc
pop
imul
leave
xchg
xor
mov
pop
cmp
aas
stos
dec
pop
xchg
mov
sub
call
cmp
clc
add
cmc
ds
push
mov
cmp
movsb
insl
imul
imul
popa
xchg
mov
fs
pop
daa
test
je
mov
icebp
mov
cwtl
insb
inc
push
test
repnz
stos
add
icebp
adc
xlat
jne
aam
inc
xor
ss
movsb
jge
xchg
or
pop
test
sub
outsl
shlb
cltd
dec
int3
jle
xlat
leave
dec
mov
sbb
add
jnp
icebp
mov
les
jg
mov
cltd
jecxz
cli
jge
sub
in
adc
jl
jo
xchg
dec
xchg
jnp
mov
lret
cmp
and
sub
in
ret
fildl
inc
sub
add
push
mov
loop
call
sbb
add
inc
pop
push
mov
jmp
push
mov
clc
mov
fsubs
pop
data16
inc
cmp
inc
xchg
sahf
dec
jecxz
orl
cwtl
jg
fidivrs
insb
repz
lods
push
xchg
jns
jbe
push
pop
rorb
lods
sahf
push
push
sahf
pop
push
dec
adc
pop
sub
dec
sub
cmp
mov
mov
negb
decl
pop
stos
scas
push
popf
push
jl
xchg
or
fldcw
out
pop
fsubs
in
pop
cld
and
mov
mov
inc
in
push
sub
add
mov
jb
add
or
imulb
bound
fnstcw
jg
test
in
mov
mov
or
mov
mov
in
decl
pop
cli
fiaddl
shlb
movsb
sub
mov
adc
jb
mov
sbb
addr16
mov
les
out
sub
mov
add
jp
xor
arpl
cmp
xchg
in
jle
loope
icebp
pop
xor
and
jge
xchg
rcrl
cmpsl
repz
xchg
cmpsl
lret
and
je
mov
imulb
xchg
jp
movsb
jae
sti
insb
sbbb
loop
or
sub
fnstenv
add
insb
daa
inc
arpl
addr16
jns
shrl
inc
pusha
add
icebp
dec
out
ficomps
mov
test
inc
or
inc
ja
pop
adc
jmp
dec
push
and
add
and
scas
arpl
mov
adc
adc
test
sub
insl
mov
or
ljmp
fldcw
push
inc
push
call
in
cmp
and
shl
or
adc
sbb
cs
test
or
or
mov
jbe
sub
data16
push
insl
jl
dec
cmpsb
xor
mov
mov
lret
adc
ss
xor
int
arpl
jne
jg
aaa
imul
push
into
divb
xor
xchg
fistl
leave
xchg
ss
sar
xchg
fsubl
iret
and
mov
mov
scas
mov
cmp
fildl
aaa
in
push
jb
in
mov
cmp
xchg
sbb
xchg
shr
jae
andb
xor
aad
leave
mov
push
add
mov
dec
mov
movd
dec
das
lock
and
sbb
int
das
test
push
scas
dec
js
sbb
or
mov
push
icebp
in
inc
mov
push
dec
inc
pop
repz
gs
notl
mov
inc
xor
loope
cmp
shlb
ret
clc
jp
cmp
jge
or
movsl
push
mov
lods
les
ljmp
push
adcb
in
mov
ds
movl
dec
xchg
aam
fcoms
lea
in
bound
mov
add
mov
or
fnstsw
xor
xchg
xlat
daa
xchg
xor
jl
out
push
pop
pushf
insb
push
cmpsl
mov
push
mov
popf
mov
out
repz
mov
dec
inc
push
loopne
jns
xchg
hlt
imul
sbb
mov
incb
pop
cmp
dec
daa
cltd
test
mov
addr16
add
and
aam
fdivrs
xor
or
xor
mov
xor
ret
jle
sbb
rclb
add
enter
int3
cmp
andb
imul
lcall
jne
inc
cmpsl
xchg
xor
jmp
xor
push
ds
jne
int3
fdivrl
xchg
inc
inc
andl
inc
or
adc
js
sahf
pushf
adc
cmp
testb
push
in
cmp
xor
xchg
push
sti
adc
test
inc
mov
fdivrl
test
nop
fcmovnb
test
xor
hlt
js
pushf
and
outsb
mov
in
pusha
loope
and
push
sbb
fwait
mov
mull
lods
sbb
es
inc
mov
andl
lock
int
bnd
repz
and
add
out
cmpsl
adc
stos
test
hlt
fcom
add
sub
jl
jmp
lret
pop
dec
xchg
fld
rol
fnstenv
sti
or
push
les
lods
jo
xchg
movsb
and
out
adc
xchg
fsubrs
gs
or
xor
dec
inc
lods
cwtl
and
add
jmp
imul
icebp
push
mov
outsl
jb
aam
ljmp
jl
inc
cmp
dec
iret
mov
xor
divb
test
out
and
jl
es
jle
ljmp
adc
dec
dec
pop
icebp
mov
and
outsb
rcrl
les
aaa
mov
sahf
xchg
lods
adc
sub
fucomi
lock
test
js
push
or
ja
inc
mov
lods
das
pop
push
cs
mov
stos
je
xchg
xor
into
push
outsl
ss
mov
arpl
cmpsb
andl
sbb
cltd
or
fcmove
sub
adc
sbb
xorb
nop
xchg
test
rcrb
sub
push
mov
adc
js
cmpsb
mov
stos
aam
cmp
ret
adc
inc
fadd
movsb
fisubl
jb
xor
cmc
add
fldln2
cmpsl
jno
hlt
xlat
int
movsb
stos
pop
popa
notl
mov
in
xor
scas
mov
cmp
dec
lahf
imul
sbb
push
fdivr
cmp
addr16
fimull
mov
sbb
adc
insb
mov
add
dec
stos
mov
fcompl
mov
sbb
mov
xor
aas
loope
iret
in
inc
filds
xor
inc
gs
notb
sbb
pop
shlb
dec
cltd
and
and
xchg
std
and
mov
push
jb
test
test
mov
mov
mov
adc
mov
out
cmp
fmul
loop
or
push
jp
push
loop
imul
nop
cmp
xchg
jg
cmp
in
jne
sub
and
xor
mov
sub
and
jne
and
mov
hlt
mov
cmp
rcrl
out
in
aaa
in
into
test
adc
sbb
and
int
addr16
je
cmpsl
daa
cmp
and
popa
lods
into
sbb
pop
rcr
pop
sahf
stos
out
adc
jno
pop
dec
sbb
out
xchg
mov
notb
pop
push
lret
shl
sub
es
pushf
sbb
jbe
lret
jl
and
lahf
add
js
inc
xor
stc
push
add
xor
pop
mov
fldt
pop
mov
aas
in
lahf
mov
scas
neg
sbb
xchg
test
mov
sti
and
xchg
xchg
dec
fmuls
xchg
push
fnsave
mov
daa
xor
mov
loopne
push
xchg
lea
adc
fdivrs
and
sti
icebp
jle
scas
das
sbb
pop
out
in
adc
pop
jnp
scas
mov
loope
inc
movsb
mov
hlt
inc
cld
daa
mov
sbb
mov
adcb
mov
ds
lret
jnp
rclb
add
idivl
das
pop
cmp
mov
fmul
cmp
and
mov
dec
add
adc
fs
pop
adc
sub
sti
repnz
xor
sbb
add
and
sub
mov
add
ret
cli
cmpsl
aam
xchg
rorb
xchg
imulb
into
mov
xchg
inc
dec
ret
cmp
xchg
int
cmp
ret
fbstp
fiaddl
xchg
and
mov
in
pop
inc
pop
cmp
dec
jp
sarl
add
dec
xchg
xchg
mov
sub
rcrb
cmp
cmp
test
nop
dec
jle
mov
cmc
add
bound
sub
mov
inc
mov
and
or
pusha
dec
pop
andps
sbb
xchg
mov
fiadds
iret
je
push
rorl
cmc
xchg
push
mov
pop
popa
lret
imul
popl
push
xchg
imul
lahf
xchg
and
ret
fstps
or
scas
jne
fcmovbe
mov
rcrl
jmp
aaa
add
jb
adc
das
call
mov
xor
out
shrl
mov
pop
out
stos
jae
fisubrl
cmpsl
movsb
inc
repnz
add
mov
adc
insl
add
rorb
add
xchg
or
leave
mov
dec
orb
mov
sbb
out
pop
mov
mov
mov
mov
and
push
out
or
lds
cmp
pop
loopne
push
jp
daa
mov
dec
jno
adc
cltd
add
jo
jl
fisubs
adc
pop
mov
dec
mov
push
dec
dec
loop
xchg
cltd
adc
es
in
dec
mov
jle
dec
jge
int3
mov
insb
mov
xor
jo
test
jae
into
mov
out
xchg
aad
pop
fimull
pop
jecxz
cltd
pop
outsb
xlat
and
cmp
out
hlt
sbb
xorl
mov
jns
add
cmp
push
jmp
mov
mov
out
mov
mov
pop
idivb
adc
mov
push
push
cltd
sbb
mov
xlat
ret
mov
pop
and
and
scas
shll
add
sbb
in
mov
and
or
push
lret
stc
mov
jno
inc
push
mov
push
bnd
xor
lods
insb
sbb
cmc
cs
leave
adc
incl
xchg
fs
jg
stc
pusha
push
jecxz
fnstenv
inc
aam
cmpsb
mov
out
mov
aaa
insl
jg
clc
mov
lock
or
mov
xchg
mov
sahf
mov
ja
lock
icebp
xchg
jbe
or
xor
adc
stos
pusha
or
push
mov
mov
sbb
pop
lss
pop
cmp
pop
hlt
fdivs
in
inc
decl
je
xchg
jb
outsl
lods
cmp
jle
push
daa
popa
pop
fsubl
jecxz
xchg
add
sub
lods
adc
lods
je
mov
ret
mov
psllq
jno
cld
xor
icebp
insl
das
and
shrb
sbb
pop
lea
or
mov
dec
inc
inc
stos
push
mov
addr16
insl
mov
mov
and
addr16
sbbl
add
es
andb
sub
mov
aam
nop
and
jbe
add
ss
adc
adc
or
shr
push
je
cli
inc
pop
pop
lea
push
cmp
imul
push
mov
add
cmp
outsl
adc
xlat
jne
sub
push
repnz
lcall
out
aaa
push
or
mov
mov
dec
daa
call
push
mov
roll
insl
sar
cld
ss
fiaddl
pop
lret
pushf
clc
push
lods
arpl
rcrl
jmp
xor
add
add
sub
sub
add
xlat
int
jg
rolb
jecxz
jno
in
sub
jecxz
mov
or
bound
pop
xor
xchg
mov
mov
cltd
in
push
loope
in
lret
movl
ret
and
into
add
and
subb
push
and
mov
cli
mov
in
cmpsb
adcl
pop
fidivs
dec
pop
jae
pop
cmc
lds
jecxz
test
xchg
add
mull
ret
push
inc
xchg
sahf
pop
xor
test
int
adc
sbb
push
push
ljmp
lcall
cmpsb
insl
arpl
stos
mov
mov
push
cwtl
xchg
sti
adc
in
dec
ret
mov
je
mov
dec
mov
push
sub
rorb
pop
push
outsb
xchg
jge
or
xchg
add
iret
cmpsl
lea
pop
mov
xchg
mov
js
subb
xchg
jns
decb
pushf
packuswb
enter
adc
fildl
sti
push
add
jo
jle
adc
lret
cltd
fnstenv
sbb
jl
jl
xor
jnp
lock
or
jl
lods
push
addb
inc
cld
jecxz
mov
xor
ret
sub
and
lahf
xor
enter
mov
cmp
or
pop
inc
sbb
sbb
cmc
rorb
mov
test
aam
xchg
lods
adc
shlb
divl
adc
ss
orb
nop
dec
cmp
cmc
fidivrs
pushf
jecxz
dec
cmp
xor
cmpl
adc
ret
icebp
mov
sbb
push
sub
jbe
addr16
std
sti
int3
add
call
es
adc
rol
dec
clc
icebp
fs
inc
jmp
pop
aam
dec
jbe
leave
lds
push
mov
stos
add
mov
dec
imul
pop
out
in
mov
sub
sti
ja
into
push
xorb
add
stos
clc
pop
iret
xor
add
js
out
xchg
in
out
lods
inc
lods
sub
arpl
ret
or
jge
mov
mov
test
aas
in
ret
xchg
mov
or
mov
insb
pop
aad
iret
pop
in
cmp
inc
dec
mov
xchg
sub
sub
rolb
fld
iret
mov
xchg
xor
and
dec
sub
mov
xor
xor
push
pusha
ds
push
xchg
xchg
push
loop
adc
or
mov
out
movlhps
pop
add
push
xchg
aas
mov
pop
and
cmc
fwait
add
rorl
sub
push
jg
xor
sarb
mov
inc
cmp
cmp
in
outsb
push
mov
imul
xchg
cmp
test
adc
sarl
add
cmc
jno
push
repnz
jl
and
cmp
sub
aaa
incl
inc
test
gs
xchg
je
push
lret
stos
mov
lcall
pop
bound
imul
fmuls
hlt
mov
addr16
cwtl
icebp
iret
sahf
rcll
stc
aam
mov
sub
cmp
stos
xchg
xchg
cmp
negl
cmp
push
mov
and
nop
mov
pop
pop
or
in
filds
mulb
mov
sahf
pop
fsubrp
mov
sar
ret
ret
or
push
fildl
jp
mulb
cmp
rorb
je
imul
add
frstor
jae
nop
lahf
inc
sahf
lcall
inc
dec
lret
xchg
and
mov
outsb
arpl
imul
ljmp
push
jbe
ss
push
mov
inc
mov
push
inc
and
or
xchg
mov
jbe
push
add
pushf
imul
gs
rcl
outsl
jo
xchg
or
fistpl
xor
mov
dec
xor
fnsave
or
aas
cmp
cmp
stos
fiadds
push
sti
add
test
mov
cld
lds
rcll
lcall
movsl
dec
cmp
lcall
push
add
dec
out
repnz
into
subb
jb
imul
int
adc
mov
mov
mov
mov
mov
dec
cli
add
add
pop
clc
mov
aaa
imul
dec
push
xor
mov
in
cmp
xchg
cwtl
arpl
mov
aad
adc
cli
bound
and
scas
iret
lods
leave
xchg
jg
xchg
pop
adc
xchg
dec
sbb
lods
rcrl
inc
xchg
pop
mov
lock
test
shll
xchg
push
and
sub
loope
lcall
out
pop
sahf
insb
pop
rorl
mull
rclb
pop
adc
mov
mov
xor
cmp
aas
pop
add
pop
pop
xor
mov
cmp
call
mov
int
stos
insb
mov
and
mov
jno
xchg
sub
dec
lret
mov
sbb
adc
dec
push
or
jle
in
rorl
mov
or
stos
xchg
mov
or
fmul
lahf
icebp
scas
dec
pop
push
fimuls
mov
pop
push
xchg
sarl
xchg
fistl
mov
pop
mov
mov
mov
push
scas
fidivrs
xor
jp
push
mov
or
xchg
sahf
stc
mov
sbb
dec
aaa
or
sub
xor
scas
jno
pop
sub
orl
fisubrl
out
scas
xor
or
lahf
decb
jecxz
xor
repnz
jns
pushf
mov
xchg
ds
mov
dec
cld
dec
out
adc
inc
jae
mov
fadds
nop
ss
dec
pop
cmpsl
push
pop
dec
cmc
cmp
data16
stos
jl
lods
sub
outsl
xchg
jne
inc
add
mov
sti
and
ficompl
mov
xchg
mov
fwait
push
xor
arpl
mov
pop
roll
lock
xchg
movsl
pop
sub
xchg
pop
jb
mov
sub
inc
lods
push
imul
icebp
dec
sbb
add
fisttpll
sbb
repz
mov
test
imul
mul
pop
push
xchg
xchg
hlt
mov
fadd
sahf
mov
fwait
xor
pop
or
ficomps
jg
xchg
add
pop
es
sbb
aad
push
loope
scas
and
cwtl
sbb
add
jne
jl
cmpsl
mov
mov
cmp
jns
int3
sbb
xorl
add
test
mov
lcall
mulb
in
xchg
add
pushf
mov
add
or
xor
inc
loop
jbe
xor
rcrb
fsubl
test
jns
mov
xor
jmp
sbbl
jns
ret
xor
add
push
mov
incl
hlt
push
scas
xor
cmp
dec
adc
mov
lret
pop
cltd
pop
xchg
repnz
sub
mov
inc
adc
dec
loop
fcmovnb
out
loop
push
lock
or
cli
js
mov
pop
sbb
add
jae
add
push
cltd
movsl
pop
push
mov
adc
sbb
push
repz
leave
ja
and
cmp
mov
xchg
mov
sbb
fisttpll
xchg
push
dec
hlt
jne
sub
jbe
dec
sub
adc
mov
popa
rcl
pushf
or
mov
mov
fs
iret
les
sbb
inc
pop
in
mov
cmp
xchg
xchg
push
xor
xor
push
sub
mov
int3
fisubs
pop
dec
frstor
xlat
fs
xor
jl
add
jmp
div
test
and
fistps
and
mov
and
outsb
stc
out
inc
jno
into
pop
cmpsb
les
ret
daa
cmc
ljmp
adc
dec
loope
pop
jl
pop
ljmp
add
xor
out
cwtl
cmpb
sbb
and
ret
xchg
std
out
push
cs
lea
fildl
sub
arpl
sbb
movsw
fidivrl
inc
jg
sub
mov
lods
jbe
adc
and
adc
popa
rorl
arpl
jmp
dec
test
stos
stos
popa
pop
rep
add
mov
push
sbb
jne
mov
dec
out
stos
shlb
push
adcl
and
lods
mov
sub
mov
mov
aad
stc
cltd
rorb
lahf
std
ror
pop
lds
pop
sub
fwait
rcl
add
shrb
or
add
xchg
cli
dec
cmp
jbe
das
xchg
sbb
sarb
testb
and
xor
call
or
int3
jecxz
cmp
jp
mov
lea
cmc
lret
cmp
cmp
jmp
orb
pcmpeqb
xchg
int
sub
out
or
and
sub
daa
scas
inc
icebp
push
in
pop
push
pop
jbe
popa
mov
movsb
adc
inc
or
adc
mov
aas
pop
mov
outsb
faddl
je
imul
mov
push
pop
popa
push
mov
sub
mov
mov
dec
mov
pop
out
fadds
ja
adc
cmp
fimuls
mov
addr16
into
and
movl
stos
adc
sub
cmp
fnstcw
cmp
hlt
sub
inc
mov
and
cmpsl
mov
sub
mov
sub
mov
mov
xchg
in
sahf
mov
lret
dec
stc
mov
dec
ret
xchg
loop
cld
bound
les
les
push
pop
mulb
mov
cmp
mov
orb
pop
xchg
sub
xchg
mov
push
mov
mov
dec
or
lods
adc
xchg
cmp
roll
stos
xor
sbbb
cli
sbb
mov
fwait
jecxz
movsb
sbb
add
std
push
mov
adc
es
mov
repnz
sub
adc
rclb
xchg
stos
add
popa
scas
into
ja
loop
dec
push
ljmp
sbbl
mov
packssdw
int3
sub
pop
mov
inc
in
sub
and
outsb
ror
push
jns
test
adc
adc
dec
shll
or
stos
cmpsb
pop
cmp
aam
lods
fldenv
cmpsl
fwait
cmp
mov
xor
dec
fmull
aas
arpl
pushf
cmpsl
out
sub
xchg
xlat
mov
scas
cmpsl
cltd
cmp
or
inc
inc
xor
cmpsl
add
mov
jne
dec
lock
inc
inc
push
pop
or
lea
xorb
into
pop
cmp
out
out
negl
mov
fadds
fnstsw
mov
dec
in
movsb
out
in
push
scas
call
cmpsl
in
mov
lret
lods
subl
rclb
add
pushf
cmp
cs
test
pop
xlat
addl
push
cmpl
movsl
fildll
lea
or
out
arpl
pop
or
repnz
nop
test
add
fsubl
lret
pop
stc
scas
cli
mov
xor
cmp
add
xor
mov
loope
sub
jecxz
aaa
fidivl
adc
in
mov
loop
cld
call
punpckhbw
bound
inc
mov
push
jge
push
mov
loope
jg
sti
mov
xchg
cmp
icebp
pop
mov
push
mov
sbb
xor
shrl
or
clc
xchg
xor
out
ret
mov
cmp
movsb
int
lahf
dec
and
push
add
adcb
inc
sbb
fisttpl
pop
mov
jae
mov
aam
jg
jo
xchg
push
sub
popa
xchg
call
jbe
test
test
mov
jns
test
mov
dec
pushf
test
pop
jmp
push
xor
movsl
sub
push
movsb
adc
add
add
dec
sub
mov
dec
addl
mov
shr
ss
fstpl
pop
add
xor
xchg
les
cmp
les
cmp
fidivrs
cltd
mov
jne
pop
out
mov
in
mov
arpl
jmp
movsl
aaa
jno
test
xchg
push
adc
aam
mov
or
xchg
jo
stos
dec
adc
mov
adc
pop
or
repz
dec
or
nop
je
pushf
outsb
aaa
xchg
push
sbb
mov
sbb
iret
sti
or
cmc
cmp
cmpsb
in
add
scas
stc
shrl
ss
fs
xor
jno
push
mov
xchg
fmuls
and
xlat
fldenv
sbb
movsl
mov
sub
inc
pop
rorb
nop
inc
xchg
mov
das
cmpsl
xchg
xor
test
pop
mov
pop
sub
fsts
js
rcll
daa
xchg
lea
sbb
xchg
dec
push
addr16
sub
dec
mov
pusha
scas
leave
cwtl
std
hlt
adc
mov
inc
or
in
pop
sbb
jmp
fmuls
xchg
jb
mov
or
xor
mov
mov
stos
aas
mov
clc
decb
xchg
insl
push
repnz
dec
lods
mov
jmp
iret
mov
sub
das
xchg
pop
xchg
xchg
sbb
fbstp
std
sbb
xor
jne
adc
seta
daa
mov
add
test
add
scas
pop
daa
sub
and
cld
roll
push
imul
push
pop
shrl
mov
lret
dec
jp
sub
jle
in
cmp
data16
mov
mov
pop
add
mov
popa
ficoml
push
shr
push
call
imul
ljmp
cmp
sarb
aas
dec
imul
adc
lea
cmpsl
mov
call
ret
test
leave
pop
and
std
leave
cmp
sub
jae
inc
mov
dec
sub
inc
mov
bound
or
push
arpl
fildl
shrb
call
xchg
cmp
es
imul
jg
xor
pop
jp
loop
xchg
or
stos
mov
xor
imul
mov
dec
fcomi
lods
fdivs
mov
idivb
pop
icebp
into
ret
xchg
test
in
nop
imul
push
xchg
lock
sti
sbb
jae
and
les
dec
cmp
data16
jae
inc
xor
push
pop
insl
vmwrite
xor
cmp
test
push
js
pop
loop
dec
inc
aaa
incb
dec
or
dec
and
arpl
pop
mov
mov
cmp
stos
dec
ret
mov
lock
jbe
sub
lret
rep
lcall
mov
ret
mov
sbb
add
scas
orb
push
cmp
xor
and
sub
sub
xor
cld
jno
jo
push
mov
sbb
jle
xchg
add
xchg
sbb
dec
lcall
shl
push
xchg
cmp
lock
lret
icebp
lods
mov
push
cmp
mov
jmp
dec
sub
inc
or
push
add
or
sub
jl
jg
mov
lret
fildl
in
mov
test
push
dec
test
cwtl
aaa
mov
mov
cmp
rcrb
ret
stc
mov
pop
sbb
add
sti
out
ljmp
xlat
pop
popf
ret
cltd
mov
mov
out
mov
mov
dec
and
call
aas
mov
into
test
test
inc
push
shr
add
lret
ja
repz
adc
out
dec
and
psubusw
pop
outsl
sbb
outsb
loope
push
movsb
stos
es
leave
mov
xchg
pop
sbb
and
adc
sbb
push
stos
into
insl
xor
dec
cmp
out
stos
mov
loopnew
fbld
push
pop
push
stc
cmp
sub
inc
psubsb
push
xor
dec
ljmp
repnz
sub
popa
xor
mov
jecxz
inc
add
mov
out
mov
jl
sbb
aas
cmp
andb
pop
cli
je
cltd
pop
into
xor
mov
in
pop
rol
and
mov
or
gs
loopne
jecxz
xor
outsb
aad
add
jb
inc
xor
ja
popa
je
in
outsl
adc
arpl
andb
aad
mov
in
int3
dec
jbe
das
insb
mov
mov
scas
and
dec
pushf
pop
or
xor
lods
push
pop
mov
pusha
int3
ljmp
push
ret
popf
dec
sub
xchg
loopne
rcrb
ja
cmc
pop
shlb
enter
sar
inc
dec
pushl
mov
or
in
addr16
mov
leave
lods
cmpsl
sub
jg
cltd
jb
jl
out
pop
mov
push
mov
pusha
lods
push
jge
sarb
push
cld
push
pop
jle
cmp
and
mov
and
addr16
jmp
jle
cmp
xchg
inc
sub
rolb
xchg
sbbb
xor
imul
fldl2t
insb
stos
jnp
xchg
sub
sub
subl
sti
jmp
or
adc
stos
push
fwait
adc
pushf
adc
and
shlb
repz
fldt
jle
filds
inc
add
mov
test
sbb
mull
cmp
inc
ret
push
cld
incb
jae
popa
xchg
shrb
jge
jecxz
pop
push
in
pop
test
jle
aaa
and
dec
inc
nop
out
into
imul
sti
dec
pusha
jbe
pop
sbb
cmc
or
aas
inc
test
cmp
add
out
inc
pop
out
inc
adc
in
les
shlb
cmp
sbb
inc
pop
mov
ret
jmp
loopne
mov
into
jnp
lds
mov
jns
adc
pop
popa
fcomps
fcomi
push
or
dec
stc
addb
lods
repnz
pop
push
popa
add
mov
sbb
jmp
inc
std
lods
sbb
sti
leave
mov
test
test
int3
imul
cli
sub
push
rorb
push
push
sub
out
jne
add
imul
shl
pop
push
outsl
test
ret
pop
cwtl
mov
or
loope
or
dec
hlt
dec
mov
dec
xor
subl
scas
sub
lret
addr16
rorb
aaa
mov
xchg
cmp
add
add
jns
mov
pop
sbb
cld
or
push
sbb
cmpl
lock
fbld
inc
popa
mov
cmp
sub
mov
out
adc
mov
dec
mov
jns
inc
add
loop
notl
fiaddl
xchg
in
lds
xor
and
jge
pop
xor
inc
call
push
cwtl
ret
repnz
popa
mov
mov
out
pop
mov
jle
in
jge
stos
inc
outsb
adc
xlat
jns
or
dec
je
cltd
and
js
mov
add
xor
fst
sbb
or
and
jns
aad
jo
inc
jno
repnz
inc
jb
mov
mov
arpl
imul
bound
std
mov
repz
push
icebp
fsubrl
mov
cld
ficoms
cmc
scas
dec
adc
mov
mov
xchg
mov
divps
push
add
dec
rcrb
leave
ret
iret
xchg
es
push
pop
imul
loop
sub
shll
inc
cli
mov
daa
not
test
addr16
stos
fcoml
sbbb
call
test
es
or
sbb
movsl
cmp
sbb
jle
dec
mov
insb
ja
rolb
js
mov
or
mov
mov
xchg
mov
or
jbe
cmc
cltd
test
adc
mov
jnp
mov
xor
inc
jg
or
mov
dec
push
mov
mov
jae
mov
sub
inc
adc
sub
cmpl
ljmp
into
sti
mov
cmp
cmp
lock
je
std
ja
bound
xchg
cmp
ret
ds
dec
cmp
mov
sbb
in
call
out
lods
push
mov
negb
clc
and
xchg
scas
xor
xchg
test
std
mov
cmp
cmp
mov
mov
sahf
sub
ss
ljmp
ja
adc
ficoml
int3
xor
cmpsb
in
daa
int
pop
ds
call
movsb
xor
mov
ljmp
jne
pop
cmc
lods
mov
int3
fldl
push
push
cmpsb
mov
cmc
daa
pop
cld
xchg
push
jbe
and
push
cmc
les
rcll
inc
shlb
pop
ds
cmpsl
adc
shlb
cli
mov
push
cmp
push
ret
xchg
arpl
sbbl
fisubrl
mov
mov
xchg
out
sub
out
dec
or
rol
in
adc
xchg
xchg
fmuls
push
xchg
test
jnp
sbb
gs
lds
xchg
sub
inc
testl
push
notl
scas
in
push
daa
xor
xchg
arpl
jg
add
cmpsl
mov
out
dec
push
fwait
push
popa
test
sbb
ret
es
xchg
hlt
mov
push
xor
xchg
push
xchg
pusha
in
loopne
add
fmull
push
sbb
sbb
mov
mov
cmp
sbb
xchg
fistl
addr16
mov
push
dec
adc
jl
fsubrs
cmp
insl
in
xchg
cmpsb
out
xchg
leave
jne
out
enter
dec
ds
mov
ds
cmp
jmp
fbstp
mov
adc
out
lds
iret
fisubrl
xor
push
les
and
xchg
xor
out
dec
push
xchg
adc
lcall
fnstcw
subl
and
xor
mov
hlt
cltd
inc
les
cltd
lcall
or
xchg
shrb
or
mov
cmp
sbb
and
jb
enter
inc
xlat
jp
dec
aad
js
js
jecxz
negl
shll
dec
jne
adc
test
add
sbb
out
jl
sbb
adc
iret
sub
or
and
push
in
push
mov
cld
pop
lds
ror
out
inc
mull
mov
in
push
pop
push
dec
cmp
jbe
in
mov
insb
sub
stos
mov
xor
cwtl
mov
data16
icebp
sub
rorl
sbb
lds
push
jecxz
sahf
in
mov
iret
repz
and
rcll
jl
cmp
or
sbb
add
imul
loop
jecxz
cmp
adcb
add
fdivrl
add
mov
sbb
xorb
div
sti
arpl
out
call
or
roll
cld
das
push
mov
mov
xor
in
mov
lret
scas
rcl
jno
jp
xchg
mov
fnsave
stos
add
mov
jae
inc
xor
pop
push
out
pop
push
sbb
xchg
mov
cwtl
das
add
mov
shrb
cmpsl
mov
pushf
dec
fildl
jp
aam
and
or
push
aas
xchg
inc
pusha
test
shrl
int3
mov
mov
add
sbb
out
push
outsb
stos
fstps
mov
push
mov
arpl
cmp
adc
mov
sar
or
sub
xchg
pushf
fisttps
mov
pop
xchg
adc
cwtl
mov
loop
xchg
es
dec
out
scas
aam
daa
xchg
scas
andb
mov
addr16
sub
pusha
sbb
cld
xor
aam
in
cmp
cmc
push
clc
stos
inc
mov
push
push
cmpsb
push
data16
mov
mov
cmp
xor
xchg
pushf
lcall
fsubrl
push
pusha
sub
stos
ds
das
call
inc
in
push
and
loope
es
dec
jno
cmpsb
xchg
popf
xor
shrb
repz
dec
push
pop
or
cmp
add
push
xchg
mov
mov
xchg
lcall
pop
add
pop
out
js
push
cwtl
sbb
jecxz
icebp
sub
inc
add
in
dec
push
gs
sub
mov
xchg
pop
add
jmp
popa
pushf
sub
inc
jl
stos
shll
stos
push
mov
enter
push
addr16
adc
testl
jns
in
xchg
inc
fstl
rcrl
jnp
push
cmp
out
dec
je
popf
pop
dec
lds
pop
fiadds
iret
and
ficomps
out
rcrb
or
lods
xchg
inc
pop
sbbl
fs
xchg
push
adc
movsb
lock
mov
inc
mov
pop
pop
cwtl
daa
addl
repnz
lock
fs
xor
hlt
push
or
jo
repz
add
push
pop
lods
daa
xchg
or
aad
lods
push
cmpb
lahf
and
scas
fs
sbbl
movsb
push
inc
jnp
add
pop
xchg
mov
insb
lock
xchg
xor
inc
popa
push
mov
cmc
and
mov
xchg
sub
test
and
mov
sbb
dec
int3
xor
call
repz
aas
outsb
shll
sti
lret
fnstsw
xchg
rorl
xlat
mov
pop
xchg
cmpsl
out
fisubrs
sahf
pop
cmp
repz
xchg
or
leave
lds
fdivrs
mov
mov
push
jnp
add
stc
pop
rcrb
jmp
mov
add
push
xor
pop
scas
shrl
xchg
out
movsb
mov
imul
pop
mov
xorl
xor
mov
mov
faddp
xchg
mov
sub
mov
mov
cmp
inc
incb
inc
jmp
cmp
mov
push
mov
sahf
cmp
add
pop
xor
xorb
dec
inc
xchg
das
lock
adc
out
outsb
shr
dec
je
push
in
dec
outsb
test
loop
jo
push
or
mov
add
pop
jbe
push
xchg
insb
adc
fstpl
bnd
std
dec
xchg
dec
je
and
pop
ret
sub
push
fsubs
cmpsb
btsl
inc
icebp
fdivl
movsl
in
mov
mov
inc
loope
mov
xlat
ja
dec
pushf
out
push
push
inc
pop
mov
mov
xor
jmp
fadds
jp
es
ds
push
lods
sbb
ret
sti
test
out
inc
mov
mov
std
out
adc
xchg
rol
xchg
jmp
int
pop
hlt
adc
rcrl
or
pusha
ficomps
xchg
sub
nop
mov
or
xchg
mov
je
push
add
movsl
jns
mov
cmc
mov
mov
sarb
pop
or
fildl
clc
dec
scas
addr16
fwait
sub
sahf
sahf
in
or
lods
xor
mov
cmp
mov
rcrl
xchg
dec
nop
xor
push
nop
cmp
dec
fdivs
jl
pop
in
cmp
test
xchg
iret
rcrb
loopne
dec
in
push
fmuls
and
add
dec
fmuls
cmp
pop
ds
cmp
lcall
lss
add
rolb
cld
xchg
cmc
pop
loopne
adc
or
mov
sub
loope
jecxz
xor
movsb
ljmp
adc
and
int3
lcall
ret
jle
pop
pushf
arpl
mov
pop
dec
mov
fs
iret
and
xor
std
icebp
das
xor
les
dec
in
xchg
mov
fmull
fldt
jg
cmp
hlt
dec
fadd
jge
add
mov
cli
xchg
xchg
shl
xchg
sub
scas
test
jle
aaa
jne
jmp
xor
fsub
popf
jmp
xlat
test
dec
xchg
orb
cmp
jno
inc
rcrb
leave
daa
addr16
jp
mov
sub
shlb
fstp
jo
dec
mov
push
add
push
and
cmp
outsl
out
jo
push
scas
add
mov
jp
push
jns
pop
mov
stos
das
mov
inc
jecxz
lret
sub
imul
ret
fwait
insb
test
cwtl
lods
cmp
test
add
fistl
push
test
fdivrs
sub
jne
xor
leave
call
mov
and
or
out
xlat
sub
loop
fistps
cmp
lcall
pop
data16
lret
fildll
mov
jmp
mov
cmpl
mov
adc
sub
mov
xchg
lret
mov
cli
dec
xchg
jae
mov
sub
xor
mov
pop
ret
test
or
jmp
iret
leave
ficompl
popf
inc
xlat
movsl
mov
and
daa
mull
cmp
and
jae
xchg
push
out
fisubrs
les
in
or
outsb
and
xor
xor
sbb
add
jmp
dec
enter
jecxz
stos
test
or
ja
out
push
scas
dec
aam
mov
cltd
jmp
sar
bound
xor
push
test
pop
shll
push
mov
call
in
test
inc
xchg
int
pop
xor
jle
push
out
lcall
dec
xchg
aas
pop
ret
inc
test
cmp
insb
jmp
jae
js
xor
mov
and
sub
xchg
cmp
xor
jno
test
rorb
cld
dec
mov
jl
cmpsb
fdivrs
cs
mov
pop
push
movsl
hlt
lock
loopne
int3
sti
dec
sbb
push
and
repnz
pop
inc
repz
pop
inc
in
or
stos
mov
ss
mov
push
add
mov
stos
mov
fcomip
mov
jecxz
adc
ds
mov
xor
es
int
hlt
neg
sub
out
pushf
jns
mov
aad
pushf
sbb
cmc
cwtl
in
mov
pop
xchg
outsl
iret
sbb
subb
stos
push
push
and
mov
fwait
xor
mov
sub
dec
aam
mov
mov
xchg
mov
and
stc
test
scas
insl
popf
mov
movsl
pop
mov
stos
ret
mov
jb
ss
jg
ret
mov
dec
xor
sahf
mov
mov
adc
mov
inc
addps
add
test
leave
shr
sub
aad
cltd
mull
pop
add
mov
push
sub
loopne
xchg
test
xchg
xchg
out
shlb
push
pushf
add
push
roll
jecxz
sub
jg
cs
push
jmp
dec
xorl
mov
pop
fwait
inc
in
adc
xchg
sbb
xlat
dec
aad
cmp
cwtl
fisttpll
adc
lahf
mov
fidivrl
aad
out
sbb
jae
xor
adc
sub
sbb
sbb
dec
or
push
movsl
jge
dec
or
inc
loope
push
and
jl
lcall
push
sbb
cs
jns
dec
test
rcll
popa
sub
xchg
push
stos
mov
mov
push
pop
or
in
cmp
jg
pushf
movsb
dec
xchg
loop
xor
loope
leave
mov
dec
sub
sbb
dec
repnz
push
inc
inc
addr16
ds
test
mov
out
bound
xchg
sbb
add
xchg
xchg
lea
imul
fdivs
data16
xor
iret
cmc
push
xor
mov
xchg
outsl
add
xor
sbb
jae
mov
xchg
mov
inc
dec
push
aas
push
pop
sbb
mov
inc
dec
out
dec
xchg
outsb
scas
and
js
push
sbb
das
repz
add
mov
jmp
cld
addr16
cmp
scas
data16
repz
sbb
cmp
push
push
mov
lret
sbb
in
stos
shl
enter
movsl
or
sub
insl
stos
js
cmpsb
not
mov
push
daa
or
pop
repnz
test
sysret
insb
mov
xchg
fcomi
into
not
les
inc
arpl
cs
das
gs
ljmp
sub
add
lea
cmpsl
out
negl
cmp
loope
xorb
in
cld
mov
fcmovnb
inc
inc
fs
pop
sbb
imul
lock
lret
stc
rolb
sti
pop
fwait
mov
mov
adc
adc
repnz
inc
mov
mov
aad
pop
push
in
repz
test
and
and
fwait
jnp
ss
sub
popa
jne
mov
and
cmp
outsl
inc
pop
popa
mov
pop
mov
push
mov
push
gs
pop
xor
outsl
mov
cmp
iret
adc
inc
push
ja
jno
jns
shrl
ja
add
mov
dec
fucom
dec
movsb
xor
sbb
shll
sub
mov
xor
push
push
lds
xor
or
and
fiaddl
and
movsl
repnz
hlt
mov
rcrb
push
push
popf
add
cld
mov
int3
stc
xchg
and
mov
nop
jecxz
xchg
mov
inc
dec
inc
lods
sub
arpl
xchg
fwait
xchg
pop
in
or
out
push
inc
fwait
test
push
es
cmp
ret
cmp
add
add
popf
lahf
xchg
fsubr
sbb
fcmovnu
cmp
adc
push
out
mov
add
adc
pop
rol
mov
jbe
dec
test
or
and
lock
jmp
push
sahf
sbb
ficompl
mov
push
sbb
div
ds
mov
jecxz
ja
xchg
sbb
ss
mov
mull
imul
loope
lret
xor
dec
sarb
sbb
cmp
lcall
scas
lds
xchg
mov
and
mov
mov
mov
pop
aaa
mov
mov
adc
xor
aas
ss
fcomi
pop
xchg
and
es
test
iret
enter
addb
pop
call
sub
mov
lahf
lods
insl
push
dec
fisubl
enter
mov
lret
aad
jg
inc
and
push
mov
cmp
add
repnz
jnp
lret
pop
je
fsubl
and
pop
mulb
hlt
dec
gs
cmp
cmpsl
mov
add
std
adc
pop
je
jle
loope
cs
push
xor
mov
dec
push
test
pop
and
sti
push
pop
daa
mov
test
mov
sahf
jne
daa
mov
rcrb
cmp
iret
dec
push
in
mov
mov
call
out
rcl
lds
mov
mov
loop
dec
inc
test
mov
adc
outsb
pop
jge
inc
imul
sbb
aad
loopne
adc
popf
and
cmovae
pop
and
and
cmpsl
in
ret
dec
jle
push
push
jle
testb
rcll
cmp
mov
repz
and
xlat
bound
loopne
adc
mov
ficoms
mov
cmpl
das
in
sar
and
jl
xor
fidivrl
pop
dec
roll
movsb
negl
dec
pop
mov
in
xchg
fwait
sub
inc
adc
insb
cmp
or
pop
push
sub
cli
cmp
lods
ficoml
sbb
adc
xorb
fsubs
arpl
cli
mov
cld
inc
stos
jg
adc
cwtl
cs
sahf
mov
stos
lret
cld
jnp
xor
sub
out
fidivrs
push
out
out
mov
and
dec
sub
insl
jb
adc
stc
out
push
mov
xor
jge
cmp
add
mov
shl
cwtl
out
adc
inc
xchg
push
loopne
and
movsl
jae
fisttpll
mov
and
push
and
or
leave
push
add
xchg
push
push
cmpsb
cmp
xchg
xchg
sub
aaa
push
or
cwtl
fxtract
fucomip
dec
sarl
add
mulb
or
cmp
or
fldt
stos
lret
scas
fildl
aam
test
pop
lods
lods
aam
pop
pop
aad
mov
lcall
xor
jecxz
and
insb
inc
fistpl
sbb
xchg
cmp
lds
jg
jmp
insb
pushf
out
inc
jmp
imul
add
fstp
pop
ret
jnp
dec
mov
fdivrl
jmp
scas
cs
out
je
dec
push
in
dec
out
ficompl
pusha
insb
inc
pop
fs
pop
cmp
frstor
inc
add
cld
xchg
push
fidivl
js
mov
adc
pushf
push
rclb
pop
gs
sub
rorb
push
out
test
clc
loopne
popa
in
mov
scas
fldl
mov
ds
sbb
aad
fldenv
jge
adc
sbb
scas
cmc
test
pusha
sbb
lock
push
xchg
dec
add
int3
sbb
or
std
dec
inc
mov
fcmovne
pop
sub
int
sub
xor
add
pusha
cmp
cmp
dec
lds
mov
jecxz
aas
cmpsl
cmp
xchg
push
adc
insl
stos
jmp
scas
pusha
nopl
out
sbb
into
lock
fldt
sub
cmp
xchg
roll
shrb
lret
imul
das
pop
hlt
stc
in
loopne
pop
cmp
dec
aas
fldenv
iret
xlat
xchg
sub
test
mov
mov
push
dec
in
ds
or
jecxz
out
test
jnp
and
dec
jp
jno
sbb
and
push
ficomps
icebp
xchg
cmp
out
pop
xor
test
fcomp
xorb
mov
outsb
ss
jp
test
push
sbb
mov
pop
mov
sub
xorb
enter
pushf
mov
sahf
mov
push
test
mov
xor
mov
or
xchg
aas
cs
daa
sbb
jae
jno
push
jbe
cli
push
and
call
sub
xor
and
xchg
es
scas
mov
pop
in
xchg
cltd
decb
mov
out
les
ret
ja
enter
test
jns
sbb
scas
add
push
mov
lret
xchg
sti
mov
ds
das
fsubr
scas
add
subb
xchg
or
or
loope
sbb
fimull
pop
inc
mov
jnp
jo
mov
cmpsb
push
std
andl
movb
enter
xor
mov
jecxz
sub
jle
push
cld
idiv
mov
pop
sub
and
dec
test
xorl
xor
lods
or
mov
mov
arpl
lcall
aaa
aad
ret
je
pushf
add
mov
fcmovne
cmp
inc
int
aad
jl
cli
outsb
xor
xchg
push
dec
ja
test
cmp
mov
and
sub
je
inc
mov
dec
mov
mov
clc
sbb
in
sbb
jl
fisttpll
or
fcom
in
inc
imul
mov
adc
mov
mov
adc
sub
lret
movsl
cli
add
popf
fldcw
test
adc
shll
and
xchg
sti
add
dec
dec
mov
jmp
dec
add
out
pop
jmp
gs
cli
f2xm1
insb
xchg
pop
mov
sbb
icebp
pop
sarl
negb
sub
in
dec
faddl
push
pop
xor
pop
sbb
xor
ds
loopne
inc
es
gs
and
aam
xchg
jae
cld
mov
fidivrl
cmpb
inc
jmp
xor
add
pushf
pop
mov
rcrb
roll
and
cmp
lar
jne
dec
xor
cmpsl
sbb
stos
rcrb
mov
out
out
adc
mov
data16
movsl
outsb
inc
into
fiaddl
dec
icebp
jmp
nop
or
jg
pop
or
sbb
sbb
pop
or
add
imul
add
push
sti
push
rorl
stos
push
out
pushf
js
cli
mov
call
cmp
lret
mov
mov
mov
inc
add
popa
mov
in
loopne
adc
mov
insb
scas
push
vorps
hlt
push
xchg
add
mov
adc
mov
add
mov
push
bnd
xor
cmp
mov
cli
push
xor
rcr
lock
repnz
sbb
popa
or
cmpsl
ja
pop
pop
push
sub
and
cmp
jecxz
pop
clc
add
clc
repnz
dec
pop
pop
mov
jnp
pop
movl
lahf
lods
mov
jmp
pop
add
add
lret
inc
cmpsb
call
sarl
fucomip
fcoml
test
pop
lds
xchg
xchg
add
clc
xchg
mov
es
ret
iret
dec
rcl
loope
adc
fsts
das
add
sub
popf
inc
rcll
mov
out
push
push
addr16
jae
adc
pop
add
inc
cmp
test
lea
mov
sbb
cmp
pusha
fdivs
out
lods
push
shrb
data16
push
stc
jnp
fwait
pop
dec
data16
fs
sub
adc
jb
stc
push
xchg
xor
call
cmpsb
xchg
inc
shrb
sahf
adc
call
pop
repnz
sub
std
jmp
punpckhbw
sub
popa
mov
pop
cltd
scas
sbb
movsl
aam
lea
jg
pop
mov
rorb
inc
inc
pop
fidivl
imul
xchg
push
mov
push
test
adc
mov
out
pop
mov
pushf
les
je
cwtl
fbstp
pop
pushf
je
test
insl
call
repz
lahf
cmp
into
es
mov
aam
xor
fbstp
nop
out
push
jecxz
inc
adc
icebp
mov
dec
stc
lcall
call
gs
push
add
mov
xlat
push
test
jp
or
fsubrl
out
xchg
add
xorb
pop
shlb
jo
sbb
scas
adc
sub
push
repnz
sbb
clc
mov
mov
mov
cmpsb
int
gs
stos
lea
or
bound
add
xor
insl
dec
inc
mov
xor
insl
sahf
jb
mov
int3
scas
ja
test
push
insl
inc
xor
xchg
inc
adc
sbb
sbb
sbb
pop
roll
push
aad
out
jmp
loopne
add
push
rep
repz
repz
sbbb
jnp
push
jmp
aad
jb
es
aas
repnz
pop
arpl
subb
sbb
push
inc
es
lds
dec
in
mov
imul
push
repnz
adc
mov
aaa
sbb
adc
cmp
cmc
xchg
mov
sub
xor
and
add
jp
lret
andnps
lea
leave
pop
fsubrs
in
or
test
mov
mov
stc
ret
rcl
call
ja
push
cmc
mov
mov
or
push
outsb
shrb
add
nopl
sbb
mov
aas
mov
cmpsb
pop
popf
jo
repnz
loopne
jae
pop
aaa
pop
inc
ljmp
popf
loop
add
cld
fisttpl
stc
hlt
pop
push
push
inc
lock
dec
gs
inc
lret
insb
gs
jp
pop
hlt
bound
inc
aad
or
pushf
sub
and
andl
sub
dec
mov
xchg
xor
bound
xorb
pop
add
lods
cmp
inc
ret
arpl
ss
aam
aaa
cltd
movsl
pop
cmp
pop
xchg
fcmovbe
mov
mov
sbb
movsl
push
mov
rorb
mov
lcall
lock
repz
js
sub
pop
xchg
bound
sub
insb
mov
mov
imul
movsl
dec
lock
sbb
jl
dec
push
test
lods
jge
push
and
lods
xchg
adc
push
or
imul
jb
sti
cmpsb
pop
icebp
inc
add
add
in
sbbb
cmpsb
cmpsb
pop
jbe
sti
push
outsl
jmp
mov
sbb
les
mov
mov
ds
loopne
mov
int3
stos
dec
mov
mov
jo
sbb
sbb
and
or
sbb
push
mov
dec
inc
pusha
adc
sub
setg
jae
out
sub
stos
mov
xchg
xlat
cmc
mov
insl
rcrb
jle
test
lea
aaa
inc
push
lods
jo
mov
shrl
addr16
arpl
mov
lretw
jecxz
adc
jecxz
cld
inc
repz
xor
sub
xchg
push
fisubs
lcall
pop
or
or
xor
popa
sar
xchg
jmp
pop
sbb
in
push
push
js
iret
out
orl
cmc
jb
stc
ljmp
aas
jge
mov
das
jmp
fsts
fwait
lahf
imul
mov
sahf
lods
sbb
imul
ljmp
push
sar
cmp
decl
lret
mov
out
adc
aaa
add
mov
cmpsb
inc
jl
aas
int3
push
incl
dec
das
and
lock
aam
inc
sub
fiaddl
lret
mov
mov
and
or
nop
and
pop
adc
mov
push
add
jp
push
loop
mov
sbb
pop
js
add
xchg
lahf
lret
add
jb
mov
hlt
leave
push
bound
push
xor
dec
inc
lahf
pushf
lcall
int3
dec
mov
pop
push
cld
lahf
mov
dec
das
and
xor
stc
addr16
imul
ror
push
inc
xchg
loopne
adc
mov
test
add
leave
sbb
mov
push
int
jg
xchg
and
aad
xchg
sti
cmp
adc
leave
pop
xchg
adc
shl
notb
dec
dec
imulb
push
xchg
xchg
sub
cmp
insl
pop
fs
pop
or
outsl
xchg
and
cli
sbb
and
dec
sahf
adc
xchg
pop
sbb
jg
jb
out
stos
rolb
inc
jmp
fsubl
or
testb
xchg
cmpsl
test
xor
sbb
cmpsb
gs
out
jne
mov
mov
add
iret
popa
fimuls
pop
sbb
or
fisubs
cltd
mov
xor
adc
xchg
cmp
sbb
ret
hlt
cltd
loop
cmpsb
jb
nop
iret
mov
inc
shlb
shl
pop
pop
fisttpll
sbb
ja
cmp
xor
xchg
out
test
aaa
pop
sbb
loope
nop
cmpsb
loop
loopne
push
adc
inc
push
les
lock
fsts
adc
push
jns
mov
or
cmpl
mov
or
pop
loopne
repz
movsl
fbstp
repz
ljmp
jno
jns
or
and
int3
jnp
mov
push
sti
sub
or
sbb
movsl
sbb
mov
daa
dec
movl
pusha
das
shll
mov
push
mov
jp
mov
shll
std
inc
jl
rclb
js
sbb
popf
fisubrs
adc
mov
inc
ss
push
mov
lds
ret
fdivrl
lods
adc
lret
out
ret
shlb
lret
sub
sub
mov
xchg
ja
cmp
mov
add
or
mov
dec
lea
mov
sbb
arpl
xchg
push
shll
sahf
in
xchg
iret
pop
push
pushf
xchg
test
mov
cmp
add
cmpsl
push
pop
arpl
sbb
xor
pop
jg
mov
int3
xchg
xchg
mov
add
es
push
push
fildll
int3
clc
sbb
nop
test
dec
mov
repnz
push
add
pop
gs
daa
stos
cs
jecxz
fstps
pop
out
inc
movsl
imul
jge
fwait
xor
sbb
dec
stc
adc
cld
insl
shlb
sarl
bound
mov
mov
dec
sbb
sbb
pop
adc
dec
mov
push
arpl
push
lea
daa
push
jmp
mov
stc
push
jle
leave
jmp
adcl
cmp
pop
jle
std
add
cmc
cmpsb
aad
add
in
jge
stos
jae
inc
out
rorl
push
xchg
jno
fsubl
stc
scas
mov
add
jle
loop
push
or
pusha
cmp
loopne
xchg
mov
sub
pop
cmpsl
scas
dec
fldt
lds
in
and
stos
xor
aaa
scas
add
xchg
mov
push
pop
stos
dec
out
movsb
mov
addr16
popf
cwtl
sahf
lcall
ficoms
ss
jae
outsl
xlat
jo
mov
xor
jnp
mov
nop
jmp
js
jno
cltd
jl
sbb
push
fildll
gs
lock
jmp
inc
orb
adc
pop
pop
push
cmp
out
shl
cmpsb
adc
subb
jecxz
into
cmpl
or
push
mov
mov
sahf
les
loopne
enter
ja
in
push
mov
pop
add
jae
jmp
add
lcall
lea
outsl
mov
insl
in
loop
mov
sarl
xor
lock
in
leave
outsb
mov
into
ss
add
fs
pop
hlt
sub
jg
insb
cld
mov
jmp
and
sbb
cli
and
jo
dec
fcmovu
in
add
xchg
jp
xchg
jmp
addb
hlt
pop
clc
push
repnz
ret
jp
mov
mov
aad
fbstp
add
popf
loopne
rorb
xor
push
pop
in
clc
pushl
mov
sbb
gs
lcall
mov
add
mov
mov
push
and
inc
lods
pop
xor
pushf
mov
cs
mov
hlt
jmp
pop
add
lcall
out
and
cmp
repz
pop
std
scas
loopne
mov
mov
inc
call
mov
and
push
inc
arpl
scas
cmpsl
inc
sub
jecxz
or
cltd
out
or
ftst
mov
test
dec
add
lret
xor
or
cmpb
outsl
popa
popa
dec
js
adc
dec
mov
lods
xor
and
fwait
das
scas
mov
inc
add
sbb
sti
and
popa
aas
mov
and
jecxz
pop
pop
mov
pop
pop
sub
lret
sub
pop
imul
popa
aaa
cmp
ljmp
mov
push
lret
js
sub
stos
mov
scas
mov
fidivs
add
fisubl
fstpt
js
dec
mov
inc
and
xchg
lahf
adcl
scas
push
stos
adc
push
xorb
mov
nop
push
mov
pop
cmp
ja
mov
mov
das
jle
pop
and
loope
jb
jbe
nop
xchg
test
dec
ss
jmp
cwtl
or
add
pop
cmp
pushf
fwait
inc
pop
cltd
nop
sub
cld
std
mov
dec
add
cmp
paddw
sbb
insl
sti
add
adc
fidivrs
les
push
daa
arpl
xlat
in
loop
cwtl
enter
data16
scas
mov
dec
pop
loope
rcl
popf
inc
push
mov
pop
pop
imul
pop
pop
push
iret
mov
mov
fsubr
js
stos
aam
stos
xor
out
ja
xchg
add
inc
ret
dec
and
fisubrl
cmp
ret
mov
jne
stc
repnz
mov
cmc
sub
decb
and
jnp
inc
ja
xchg
pusha
push
psubd
mov
imul
inc
gs
lods
mov
pop
ror
adc
movsb
cmp
jne
aad
jae
dec
imul
ds
dec
test
and
lcall
pop
hlt
add
jle
add
ds
inc
mov
cmc
int3
dec
push
stos
lock
push
aam
stos
sub
fcomps
sub
out
int
ss
fsts
test
mov
rolb
pop
adcl
pop
push
mov
push
xchg
xchg
lods
in
cmc
sub
popa
cwtl
popa
mov
sub
jnp
aad
loop
int3
je
dec
xchg
mov
mov
das
mov
xor
out
xor
xchg
clc
ret
lock
cmc
and
mov
ffree
inc
pop
andl
out
xchg
call
pop
jp
fisubl
rep
mov
xor
leave
xor
pop
hlt
pop
jb
mov
fldl2t
rolb
fcom
and
fisubrl
sub
sub
and
jns
leave
lret
fwait
cmp
inc
addr16
repz
lods
fwait
cltd
mov
or
call
outsb
add
shll
cld
popf
imul
fs
mull
sub
ret
add
mov
imull
dec
jb
dec
out
cmpsb
iret
out
adc
nop
iret
jo
xlat
xchg
xlat
js
ja
les
sahf
xchg
dec
jb
cmc
push
outsb
divl
xchg
lret
mov
mov
or
lea
add
nop
sahf
adc
xchg
mov
xchg
cmpsl
push
fsubl
pop
stos
sub
push
aaa
jnp
cli
mov
pop
xor
xchg
mov
xor
mov
mov
adc
mov
xor
sbb
dec
fucom
nop
or
cmpsb
xlat
adc
jb
sub
push
mov
scas
push
call
arpl
or
lret
adc
or
sbb
subb
outsb
imul
jo
xorl
mov
xchg
jg
cmp
fwait
xchg
dec
cmp
mov
aad
dec
std
jno
jmp
jle
nop
mov
aad
xor
mov
xor
sti
imul
mov
stos
xlat
inc
mov
mov
dec
out
sahf
push
je
aad
addr16
notl
or
pop
out
ret
scas
loopne
pop
mov
sahf
mov
aaa
inc
pop
xchg
mov
sub
out
ljmp
jle
rorb
push
xchg
mov
mov
add
dec
in
lahf
cmc
pop
movsl
pop
push
mov
clc
xlat
lahf
clc
cmc
ror
mov
cmp
mov
in
mov
mov
sar
mov
aaa
addr16
xchg
jle
fldenv
dec
cmpsl
lcall
sub
out
in
dec
fisubs
cmpsl
xchg
jle
pushf
adc
adc
call
dec
mov
shrb
xor
outsl
cmp
out
dec
out
xchg
bound
dec
repz
je
pop
pop
pop
adc
das
lods
xor
shrl
stos
fptan
or
push
jge
in
scas
ret
fisubl
mov
cli
xchg
negb
xor
inc
aad
adc
movsl
out
inc
and
data16
out
pusha
and
jecxz
ds
ss
outsl
imul
nop
mov
jb
mov
aad
xchg
mov
push
cwtl
mov
xchg
xor
lret
sahf
inc
jp
jg
sub
sbb
clc
xchg
cmpsb
bound
mov
in
adc
pop
inc
or
inc
loopne
mov
test
mov
xchg
outsb
xchg
gs
lcall
ss
mov
sar
pop
in
xchg
cmpb
scas
push
push
sub
repz
rorl
in
and
dec
mov
and
jno
or
add
outsl
or
aad
rorl
pusha
or
mov
std
hlt
sti
cmp
mov
adc
fcmovnb
sarl
dec
test
fwait
in
dec
test
xchg
cli
aam
hlt
jne
cmc
xlat
inc
cmpsb
pop
push
fidivl
arpl
movsb
pop
and
fs
dec
pop
pushf
add
inc
push
or
pop
pop
fmull
gs
pop
mov
push
cmpsb
jp
and
inc
mov
in
lds
icebp
mov
and
mov
mov
movsb
push
mov
mov
mov
stos
pop
jbe
test
jmp
mov
andb
lods
stc
out
dec
dec
jp
dec
cmp
sbb
mov
aam
pop
call
cltd
jae
mov
xchg
jbe
test
dec
add
mov
or
loopne
scas
jge
inc
out
imul
mov
cmpsl
mov
mov
jmp
jnp
fisttpll
inc
pop
and
jns
ja
mov
in
mov
imul
add
sbb
adc
push
nop
xchg
pop
in
dec
fs
push
outsb
or
xchg
frstor
leave
icebp
ret
xchg
mov
inc
outsb
ds
enter
xchg
or
jns
ja
and
sub
mulb
lea
sar
jno
cmp
cmp
addr16
cmpsl
cli
lahf
and
mov
addl
nop
in
mov
decl
xchg
inc
gs
fnsave
sub
xchg
mov
andl
add
sub
mov
xchg
xor
xor
xchg
mov
inc
loopne
and
popa
int3
mov
hlt
or
pop
cmpl
jo
xchg
lods
cmp
popf
mov
iret
mov
push
cmp
add
por
fstps
inc
cwtl
push
popa
idiv
xchg
mov
aam
xchg
mov
inc
xor
mov
mov
hlt
sahf
sbb
mov
jno
loope
gs
cmc
mov
repz
jbe
cmpsb
mov
dec
sarb
icebp
pop
mov
in
lods
adc
fs
in
rorl
addb
outsb
iret
xor
or
push
in
push
sub
xchg
out
adc
push
pusha
arpl
jnp
fisttps
or
ss
inc
in
flds
push
add
insl
pop
std
or
mov
cld
bound
push
pop
ret
xchg
aaa
mov
sub
ds
ss
mov
push
xor
xchg
fwait
add
jl
mov
test
cltd
in
xchg
jecxz
lds
adc
xchg
mov
push
mulb
dec
pop
xorl
and
adc
add
int
mov
or
ds
imul
stc
pop
hlt
cmp
or
and
pop
cltd
sti
push
cld
popf
ja
fisubrl
fwait
dec
test
adc
and
fcmovu
filds
dec
popa
cmp
or
pop
test
rclb
inc
fbld
mov
jle
gs
ja
add
inc
cmp
inc
add
xchg
rcll
xor
out
fsub
cmp
sub
rcll
sbb
mov
mov
cltd
fbstp
jb
cmp
xchg
mov
mov
inc
pop
and
adc
push
jbe
pusha
cli
dec
aad
rclb
aad
pop
inc
call
cmpsb
or
and
je
pop
ljmp
xchg
loope
lcallw
sbb
add
or
sub
adc
mov
mov
jmp
scas
mov
icebp
dec
roll
les
rolb
or
cmp
push
fbstp
out
and
inc
ret
mov
out
pop
xor
jl
and
jg
pop
ud2
cmp
adcl
pop
insl
mov
mov
outsb
jg
hlt
sbb
inc
out
adc
enter
or
shl
subw
add
rolb
xor
cmp
rorb
clc
in
mov
mov
lret
lea
mov
xchg
xor
cmc
ljmp
sahf
sbb
dec
scas
int3
stos
pop
loop
and
lcall
aaa
pop
jo
rorl
xchg
test
iret
and
insl
scas
adc
sbb
movsb
dec
mov
ljmp
dec
mulps
mov
sbb
test
adc
or
notl
fmull
int
xchg
push
inc
sahf
int3
ret
push
scas
sub
cmp
repz
push
sbb
push
enter
lcall
call
nop
push
mov
xchg
enter
je
jns
cmp
jmp
pop
or
pop
or
adcl
and
repnz
xchg
mov
in
adc
pop
loop
add
adc
or
mov
pop
in
jg
into
adc
lods
pop
mov
pop
xchg
psrlq
mov
sbb
frstor
and
mov
aas
call
mov
fidivrl
sbb
adc
and
push
xchg
addr16
cwtl
mov
clc
les
or
mov
test
pop
outsl
sub
mov
lock
xchg
mov
xchg
pop
pop
and
xor
mov
adc
jo
imul
dec
pop
mov
pop
xor
nop
clc
push
jl
lods
popaw
scas
adc
sbb
mov
jmp
cmp
outsb
inc
inc
jg
out
sbb
pop
mov
add
ss
mov
sbb
lcall
mov
adc
scas
mov
mov
mov
int
xchg
leave
or
sbb
clc
xlat
movsl
lods
jp
daa
jae
pop
lahf
out
fwait
add
mull
mov
xor
mov
lods
mov
mov
lds
mov
push
inc
lock
add
in
cmp
js
fldenv
jp
push
fs
rclb
xchg
or
data16
cmp
sbb
lds
push
or
adc
xchg
mov
fildl
jo
daa
loope
lahf
mov
rorb
cld
loope
stc
inc
fwait
xchg
cmc
xor
add
loope
cmp
or
loope
xchg
loope
jecxz
subb
in
xchg
pop
sub
out
gs
jecxz
out
jnp
lea
inc
mov
dec
out
mov
add
xchg
add
outsl
lea
sub
je
xchg
cs
pop
sbb
shlb
mov
jb
mov
xchg
stc
std
push
outsb
shlb
in
aas
mov
into
bound
ljmp
mov
jge
subb
sub
into
sub
mov
sbb
and
sbb
ss
mov
icebp
in
je
mov
cmp
mov
cmp
jb
fists
inc
mov
cli
add
push
in
cld
addr16
fimuls
scas
sub
mov
nop
inc
loopne
fwait
jp
lahf
jno
push
insl
jmp
cmc
xchg
xor
scas
roll
xlat
inc
jg
mov
div
cmp
clc
push
and
lock
lret
cmpsb
lds
sbb
sahf
fdivrs
mov
fstps
cmpsl
pushf
js
insl
jae
pushf
test
mov
pop
and
lret
sbb
cmp
cmp
int3
xor
adc
aam
test
inc
shrb
and
cmp
lea
popa
xchg
mov
rcll
cmp
jle
sub
sub
mov
shl
insl
xchg
inc
int
subb
sub
sbb
and
mov
adc
gs
daa
inc
xchg
test
add
mov
jmp
stc
ret
aam
mov
jp
sub
cmp
fisubs
cmp
outsb
cmpsb
imul
shl
stc
movsb
fldl
scas
pop
and
mov
inc
jnp
loope
call
xor
mov
aas
push
jg
jecxz
rorl
push
jmp
out
ja
xchg
pop
inc
cmp
aaa
cmpl
rcrb
and
iret
adcb
xchg
leave
aad
pop
lret
loopne
sahf
inc
decb
shl
sbb
pop
adc
mov
leave
fcom
xor
sub
adc
jmp
push
test
movsbl
jp
jnp
jno
pop
mov
push
in
shl
pushf
repnz
pop
xor
xchg
rorl
pop
roll
dec
int
jno
roll
inc
ljmp
sub
push
xchg
test
mov
in
sahf
dec
and
sub
xchg
xlat
mov
int3
mov
std
fldz
fs
xchg
mov
jge
lret
pop
xor
and
fstpl
jne
popf
mov
cwtl
mov
lcall
pusha
push
adc
iret
outsl
ret
cmp
stos
or
enter
xor
mov
pop
adcl
jmp
bnd
xchg
push
or
push
sbb
dec
insl
negb
sbb
out
cwtl
or
stos
fwait
enter
in
cmp
push
jl
shrb
cmp
xchg
pop
or
int3
xchg
hlt
pop
int3
repnz
scas
gs
cld
nop
add
mov
xchg
pop
inc
and
cmpsl
push
inc
mov
and
lods
mov
ljmp
sub
repnz
inc
imul
dec
xchg
mov
fiadds
addr16
push
jg
adc
mov
scas
inc
mov
je
add
push
in
push
cmpsb
in
push
sub
les
mov
sbb
pushf
sbb
pop
cmp
mov
mov
push
or
lock
mov
add
out
pop
xchg
in
push
insb
mov
cmp
int
test
push
push
sbb
push
shrb
mov
and
push
fwait
popa
adc
cmp
imul
lcall
push
stc
test
lcall
inc
divl
jnp
add
mov
xor
loop
pop
out
or
pushw
cmp
aam
cld
jecxz,pt
inc
daa
pushf
dec
cmc
sub
push
ret
lret
pop
xor
in
sbbb
stc
fs
sub
int
ljmp
adc
aam
jmp
cli
sbb
dec
imul
and
push
sbb
call
sbb
add
xor
and
ret
lods
pop
out
adc
loop
sbb
xorb
sub
mov
outsb
adcb
mov
outsb
pop
mov
loop
das
push
push
mov
mov
cmp
xor
push
xor
mov
pop
dec
jmp
insb
and
outsb
sbb
call
sbb
mov
push
nop
lcall
inc
adc
pusha
jmp
sub
aas
lods
mov
push
add
sub
into
out
mov
xchg
push
and
xchg
dec
xchg
xor
rcrb
ljmp
ret
jmp
popa
stc
xchg
fimuls
cmp
test
fwait
sarb
inc
cmp
or
insb
push
fidivs
repz
sub
jb
daa
repnz
shll
std
js
addb
sti
nop
mov
ret
lea
scas
xor
popa
dec
push
or
outsb
fsubl
sub
imul
and
lock
sbbb
stos
stos
jg
imul
cld
mov
and
lea
into
mov
inc
push
out
fldl
xchg
scas
repz
xchg
icebp
mov
jecxz
xor
mov
xchg
iret
sbb
jo
std
je
loope
cmpsb
insb
mov
test
ficomps
pop
lock
pop
xchg
lcall
out
outsl
mov
jl
out
cli
and
fpatan
push
minps
je
inc
mov
faddl
stos
mov
push
sub
mov
adc
xor
icebp
es
ret
cmpsl
or
in
imul
jns
notl
dec
ret
inc
xorl
sub
jbe
lahf
ficomps
push
pop
test
cmc
pop
jnp
cli
lods
add
lods
mov
mov
xorl
in
les
notl
mov
fwait
addb
aas
sbb
and
fwait
sub
sbb
test
and
pop
xchg
cwtl
xor
mov
mov
jno
xor
bound
jle
int3
pop
xor
mov
mov
lcall
in
jp
movsb
xchg
in
and
sahf
push
test
ja
jns
pop
xchg
inc
flds
jp
fdivp
xchg
push
jmp
inc
jg
xor
pop
jne
jbe
cmp
scas
add
dec
pop
lahf
lods
cli
inc
mov
xchg
xchg
mov
xor
and
pop
in
cld
jge
mov
imul
lock
cmp
ja
mov
inc
notl
in
fxtract
sub
mov
xchg
icebp
pop
inc
stos
inc
xchg
in
aad
jmp
push
cmc
add
sbb
arpl
fwait
jmp
sub
movsb
lret
repnz
pop
ljmp
repz
shrb
and
sbb
and
mov
leave
fnstenv
dec
das
bound
xchg
sbb
lret
xlat
stos
imul
mov
mov
xchg
sub
push
dec
loopne
lea
cli
jnp
push
sbb
push
mov
adc
jns
sub
clc
aad
test
mov
fdivrs
rorb
filds
adc
mov
jge
cmp
mov
mov
xor
insl
cmpsl
std
sub
dec
shrb
mov
jne
cs
fwait
clc
insl
push
data16
inc
add
push
xchg
mov
movsb
xor
lods
adc
sbb
imul
mov
test
pop
call
lds
mov
imul
aam
mov
sub
lret
dec
or
or
adc
cs
push
lret
or
push
push
mov
cmpsl
jne
inc
jle
rolb
negl
hlt
out
subl
shlb
inc
movsl
xchg
cs
dec
pushf
mov
push
in
nop
cmp
int
mov
and
fiadds
jge
mov
jo
lods
mov
xchg
repnz
in
mov
cld
xchg
mov
push
xchg
int3
push
loopne
and
cli
repnz
test
pop
outsl
mov
xor
nop
xchg
dec
icebp
inc
nop
cmc
sub
aad
sub
or
cmp
stos
adc
xor
sub
cmc
push
loop
jo
and
dec
or
insl
xchg
push
scas
sbb
xchg
mov
sbb
or
cs
dec
lods
add
clc
cltd
xchg
dec
clc
mov
adc
icebp
ds
dec
test
jbe
mov
sub
mov
leave
fisubl
lods
cmpsb
popa
pop
adc
inc
and
jb
or
js
enter
insl
adc
jecxz
je
and
mov
xchg
and
dec
iret
xor
and
xorl
stc
lods
mov
shrb
mov
gs
pop
xchg
leave
push
mov
cmpl
sub
sahf
repz
das
int3
lds
and
add
js
pop
push
pop
mov
outsl
les
push
jns
je
ficomps
push
xor
pop
outsb
add
dec
arpl
mov
adc
sbb
adc
and
pop
adc
add
xor
dec
xor
ds
lcall
repz
sahf
sarb
mov
out
popa
loop
test
push
outsb
dec
lock
xchg
lret
mov
iret
sbbb
jno
mov
divb
rolb
pop
push
popf
gs
lds
mov
and
jl
sub
imul
fs
out
jecxz
sbb
fs
mov
cmp
push
daa
mov
or
into
fbld
adc
cld
inc
cmpsl
sub
ret
or
out
sub
push
adc
dec
cmpsb
jmp
jecxz
pop
repz
cmpsl
shrl
call
mov
inc
enter
add
xor
sbb
sbb
mov
testl
pop
pop
add
setnp
push
xchg
jno
ja
xor
into
sti
addb
popf
cli
adc
je
or
pusha
dec
jp
and
insl
popa
or
leave
je
and
arpl
sar
fistps
les
cmpl
sub
test
subb
sub
test
mov
adc
sahf
insl
imul
repz
push
sub
jp
idivb
test
dec
xor
and
ljmp
aas
jns
or
push
out
push
mov
scas
push
shll
gs
mov
adc
test
sbb
aad
mov
mov
ret
movsl
lock
cmp
jnp
test
mov
popf
fdivl
xchg
xor
fs
inc
cmpsb
int
fsqrt
inc
cli
fucomp
mov
je
adc
jecxz
push
jecxz
ret
movsl
dec
insb
push
jmp
sbb
hlt
add
mov
mov
loope
fdivrp
mov
add
inc
mov
xor
xlat
jecxz
jecxz
lcall
xchg
orl
std
sti
shr
sbb
and
dec
add
cs
xor
and
unpckhps
xchg
ret
add
or
faddl
ljmp
xor
sbb
cli
rclb
xchg
fsubrl
pop
cmpsb
mulb
sub
dec
dec
sub
inc
xor
and
or
pop
push
and
lds
dec
sbb
fdivrp
dec
mov
icebp
xchg
lahf
ja
xchg
xor
sbb
pop
inc
call
jbe
cmp
jb
lock
sub
shrb
add
or
xor
rcll
in
pop
scas
cmp
xor
lds
ret
or
outsb
int
sarl
push
sbb
mov
loopne
pop
mov
and
dec
in
mov
lock
mov
pop
in
inc
icebp
test
fcompl
inc
or
mov
jb
xor
ret
arpl
int
xlat
mov
pop
loop
xor
imul
jg
dec
sub
fisubrl
icebp
pop
outsl
fsubr
xchg
dec
scas
movsl
mov
xor
inc
subl
and
leave
cmp
sbb
mov
mov
mov
clc
add
inc
ret
out
jmp
test
aad
push
inc
test
mov
in
dec
inc
mov
and
push
mov
lock
shrl
mov
mov
push
mov
and
pushf
sbb
xchg
enter
sbb
nop
shll
sub
lret
inc
nop
shrb
xor
shl
lcall
mov
or
cmp
insb
xchg
into
or
movsl
ret
mov
push
hlt
enter
das
xchg
mov
pop
test
subb
std
mov
ljmp
in
mov
and
jns
fisubrl
adc
jbe
daa
aaa
call
mov
stos
fbstp
adc
push
dec
loop
add
rorl
lock
or
aam
test
stc
cmp
test
movsl
and
inc
mov
push
pop
int3
repnz
aas
cmc
mov
jmp
cmp
bound
nop
sbb
cmp
lock
imulb
js
jge,pn
or
jl
mov
mov
adc
aad
in
xchg
push
xor
xor
aam
inc
out
rcr
sbb
or
xchg
enter
mov
mov
std
inc
call
xor
cmp
or
xor
jae
mov
out
mov
inc
decb
sbb
adc
dec
sub
sbb
test
loope
pop
xlat
push
into
add
mov
adc
pusha
cmp
add
cmc
cmp
std
xor
arpl
outsl
dec
or
test
mov
dec
dec
mov
shll
daa
pop
push
add
cmp
divl
push
jo
cld
xchg
jae
mov
in
cld
sbb
and
pop
adcb
mov
shlb
mov
push
inc
pushf
xchg
lret
or
rorl
push
jmp
xchg
das
pop
shlb
inc
sub
adc
es
pop
out
das
imul
adc
loop
aad
and
imul
sti
popa
in
movsl
je
sbb
add
jl
lods
mov
jp
out
aad
inc
call
xor
les
lods
int
fwait
xchg
daa
fldt
push
stos
outsl
sbb
push
out
stos
inc
adc
stos
imul
fmuls
mov
push
ljmp
fldt
insb
mov
pop
mov
or
mov
pusha
pushfw
outsb
test
xchg
xchg
mov
mov
iret
sub
test
out
sub
jo
pop
imul
pushf
jmp
mov
int
mov
stos
test
fistpl
sahf
movsb
roll
outsl
mov
jmp
sahf
mov
stos
outsb
sub
sahf
sub
ss
and
fnstcw
push
sub
lods
pop
cmp
jle
in
jb
sbb
fisubl
pop
pop
adc
add
mull
push
imul
xlat
cmpsb
mov
ret
cmpsb
pop
cwtl
movsb
sbb
fildll
hlt
ds
lret
decl
addr16
aaa
mov
mov
and
cmp
jo
out
inc
pop
pop
adc
test
popa
and
clc
xchg
es
mov
add
inc
mov
iret
dec
adc
mov
sub
inc
pop
dec
pop
xor
das
mov
roll
out
rorb
adc
mov
test
leave
in
mov
test
les
sbb
push
dec
ss
push
mov
mov
iret
xor
mov
sbb
dec
jmp
inc
lock
in
data16
add
imul
test
mov
sub
mov
ficoms
xchg
call
jecxz
sahf
lea
stos
and
sbb
fmull
pop
cmp
hlt
lret
and
sub
xchg
and
mov
cmp
or
sahf
ficoms
ficoml
or
cmpsb
dec
mov
ds
or
and
pop
fldt
outsl
prefetcht1
flds
lahf
jmp
jne
adc
adc
push
cmp
pop
or
jecxz
andb
sbb
lret
mov
outsl
pop
inc
mov
inc
scas
pop
imul
mov
lods
pushf
jp
adc
jl
jnp
xor
sub
dec
jbe
and
test
test
sub
sbb
or
adc
jl
repnz
mov
xor
cs
mov
dec
imul
cmp
fldcw
pop
push
ds
push
imul
mov
insl
ficomps
or
pop
mov
and
push
xchg
push
push
addr16
mov
mul
scas
jbe
push
hlt
notb
dec
cmp
xchg
xchg
push
movsb
pusha
repnz
mov
pop
cmpl
jns
stos
xor
movsb
inc
dec
and
enter
xchg
inc
sbb
es
stos
in
or
inc
push
jno
rcrl
mov
movsl
push
out
lcall
cmp
cmc
pop
testb
lods
push
fistpl
or
inc
pushl
cmpsl
jmp
movsl
sbb
stos
lock
and
fdivrl
adc
and
or
lea
jmp
mov
repz
jb
stc
movsb
jbe
sub
xchg
int
shrl
fadd
cwtl
lret
jecxz
addr16
or
enter
jmp
cltd
bnd
inc
inc
dec
sarb
pop
sbb
bound
xchg
xchg
mov
lods
sub
or
cmp
clc
jb
loopne
out
dec
fidivrl
mov
stos
nop
push
sti
cli
add
cli
cmc
jmp
inc
ja
movsl
adc
mov
push
push
cmpsl
movsl
es
das
enter
gs
movsb
movl
mov
lods
mov
jb
xchg
int
lea
inc
jnp
mov
mov
inc
lret
jo
adc
sarl
mov
push
popa
pop
aad
lahf
push
jecxz
cltd
push
js
dec
sbb
mov
inc
mov
and
and
ds
xor
mov
imul
mov
stos
shll
lahf
inc
pop
lret
lods
jnp
je
mov
and
mov
adc
sti
clc
stos
cli
fbstp
scas
adc
jg
out
or
adc
adc
addr16
dec
leave
adc
pop
movsl
outsb
cmp
das
ficomps
push
mov
popa
outsl
xchg
adc
or
cmp
cmp
or
inc
inc
nop
gs
push
out
jg
call
cltd
rol
gs
mov
mov
lea
ss
cli
cmpb
fistpl
xchg
scas
mov
cwtl
or
mov
out
outsb
data16
sbb
jmp
in
pop
popa
dec
mov
or
int3
push
stc
pop
mov
repz
in
ret
xor
das
cmpsl
mov
xor
repz
aad
into
sub
aad
mov
mov
test
mov
mov
inc
cmp
mov
outsl
rcl
push
xor
or
or
out
lret
shll
aaa
nop
inc
bound
test
push
mov
dec
xor
and
mov
pop
inc
sbbl
bound
xchg
je
push
and
jno
popf
test
sbb
push
mov
mov
sbb
jp
jae
mov
sahf
fscale
push
enter
xchg
jp
xchg
push
loopne
out
mov
push
ljmp
mov
cld
lea
cli
cmpsl
or
sub
mov
xchg
push
dec
adc
xor
pop
push
lea
movb
sahf
out
dec
orb
les
aas
sbb
pusha
imul
inc
ret
dec
lock
aad
mov
fs
loop,pn
xor
fmull
int3
push
mov
fsubs
or
out
in
sar
cmpsl
jnp
pop
out
in
sbb
pextrw
cmp
cwtl
cmp
popl
pop
inc
ljmp
outsl
lea
mov
cs
outsb
addb
mov
out
arpl
adc
inc
sbb
sbb
js
mov
nop
lods
cmp
mov
cmpl
mov
shlb
sysenter
shrd
cli
test
clc
in
imul
push
push
sub
in
xchg
jbe
es
repz
push
sub
inc
xlat
mov
jecxz
mov
sbb
mov
inc
leave
dec
dec
and
adc
int
or
mov
xchg
mov
mov
xchg
adc
test
mov
inc
lret
and
out
stc
insb
call
jns
lret
pop
inc
aas
pop
jmp
cltd
xchg
cmp
add
leave
je
xchg
out
mov
in
or
xchg
push
pop
xorps
mov
lock
es
je
push
int3
lea
jno
jae
fscale
ds
in
or
dec
ror
hlt
adc
push
fisubs
add
ljmp
mov
stos
jmp
inc
dec
xor
fcom
lds
push
or
jmp
bound
sahf
sbb
pop
icebp
les
jecxz
xor
and
adc
jnp
cmp
adc
cmp
push
adc
inc
addr16
xlat
into
gs
adc
ret
adc
and
sub
outsb
inc
in
inc
call
jg
lcall
ljmp
jb
xchg
sub
popf
jno
push
xor
inc
inc
mov
fstl
inc
xor
jb
cltd
fsts
aam
cmp
aad
xchg
cmpsl
dec
sbb
jmp
sbb
push
sub
repz
xlat
pop
jecxz
mov
in
pop
mov
or
sub
je
nop
rcll
pop
inc
push
mov
cmp
sbb
mov
addr16
lahf
push
and
dec
dec
mov
mov
jp
push
mov
xchg
jmp
rcrl
mov
cld
lcall
jo
cltd
push
cmpsb
or
int3
test
lahf
mov
mov
jns
int3
or
mov
mov
ds
mov
dec
fs
cltd
dec
and
lds
call
xchg
xchg
inc
stos
mov
sub
outsb
cmpsl
jnp
aam
out
and
jae
mov
sbb
loopne
nop
push
and
lcall
inc
scas
data16
pushl
sbb
mov
pop
sbb
popf
dec
sbb
sahf
adc
add
test
mov
rclb
jge
and
push
mov
jbe
movsl
push
mov
enter
push
pushf
pop
inc
dec
jl
mov
or
xchg
add
aam
xor
subb
iret
std
jp
sub
jmp
pop
and
push
mov
jbe
pop
sub
adc
ret
pop
xlat
sub
dec
jns
push
mov
cmp
test
push
jne
mov
mov
es
sub
pcmpgtd
jecxz
adc
lods
hlt
shrl
pop
ja
pop
sub
or
test
iret
add
xchg
imul
cmp
jecxz
mov
aaa
js
lea
jg
jp
mov
adc
inc
stos
shr
lods
cmp
in
pop
and
xor
sbb
cltd
sbb
imul
scas
cmpsb
mov
ljmp
add
fstp
stc
lahf
aad
sub
adc
push
stos
stos
add
in
lahf
jae
dec
dec
outsb
cld
jb
gs
mov
popa
lcall
cmp
fcoms
dec
cli
xor
stc
bound
mov
movsl
mov
repnz
iret
sbb
pop
jl
imul
lods
cmc
icebp
fwait
xor
jecxz
fbld
out
shll
or
xor
cld
add
dec
pop
or
dec
adc
imul
add
les
sahf
dec
mull
pop
mov
or
sti
lahf
insb
mov
fs
sub
and
ja
inc
pop
mov
push
outsl
xchg
nop
push
push
pusha
xor
pop
clc
sub
sbb
sar
pop
cmp
leave
rclb
jns
sub
jle
pop
xchg
adc
bound
mov
inc
sub
sarl
into
mulb
push
or
inc
mov
mov
jmp
xchg
popa
pusha
icebp
test
xchg
dec
mov
jne
and
mov
dec
adc
out
iret
test
push
add
test
cli
mov
shll
cmpb
jae
shl
lretw
cmpsl
push
push
imul
xchg
mov
imul
mov
push
mulb
fldlg2
push
mov
mov
or
sti
add
mov
mov
dec
hlt
mov
outsb
or
mov
xor
pop
xor
outsb
mov
xor
cmc
das
pop
adc
daa
sub
pcmpgtb
imul
push
push
jnp
jno
adc
or
sbb
and
leave
ss
or
in
pop
out
mov
clc
xchg
ljmp
lcall
cmp
mov
repz
inc
cs
jbe
leave
adc
cmp
xor
adc
cld
sub
adc
out
pop
icebp
mov
xchg
xchg
clc
imul
sbb
mov
push
xadd
pop
inc
fxch
or
pop
ja
out
lods
pop
pop
adc
jge
lock
cmp
movsb
out
jb
mov
lds
mov
and
jns
shlb
aaa
pop
lret
xchg
outsl
or
das
lds
or
jge
add
sub
adc
fnstsw
shlb
ljmp
cs
jl
fiadds
rcl
dec
add
es
cmc
push
fs
xchg
loope
gs
leave
add
out
sbb
pop
sub
out
cmp
test
scas
sbb
sti
in
orb
ja
add
xchg
push
lds
xchg
fldt
les
decl
outsb
notb
adc
out
sbb
sub
mov
dec
std
fstpt
sti
cmpsl
aaa
nop
and
sub
pushl
lock
dec
sahf
imul
negb
xor
loope
jmp
ljmp
pusha
shrl
mov
cli
sub
jo
jo
out
cs
sbbb
push
fs
xor
lret
adc
or
pop
mov
push
sub
loope
xchg
dec
xchg
xchg
bound
mov
xchg
inc
sbb
mov
loopne
movl
imul
les
sbb
xlat
dec
mov
inc
das
inc
xchg
test
pop
xchg
pop
push
loope
out
movb
lret
pop
daa
scas
call
fcmovnbe
lods
cmp
loopne
in
mov
hlt
cmp
fstps
lods
es
sbb
mov
andl
adc
adc
fld
xchg
movaps
stos
out
negl
pop
push
mov
mov
loope
dec
cli
popa
sub
test
popf
push
jmp
add
xor
loop
cmp
insb
rorl
insl
mov
ret
jno
push
lret
out
daa
shl
push
or
sub
cmpsb
jp
lcall
call
sbb
sbb
mov
std
dec
ljmp
fstpl
jge
push
adc
pop
mov
mov
inc
lea
roll
or
push
cltd
ret
in
insl
jle
push
cmp
adc
mov
scas
je
mov
mov
loop
stc
pop
aam
test
inc
jno
int3
push
mov
mov
jmp
push
dec
in
mov
fdivl
addr16
lahf
push
push
js
xchg
adc
in
shll
xchg
movb
fwait
orb
stc
xor
in
ret
popa
std
push
repz
popf
int
movsl
pop
dec
or
push
iret
loopne
xlat
jb
or
and
xor
xor
mov
push
cmp
and
aaa
imul
lret
xor
and
loopne
sbb
mov
outsl
push
sub
jle
or
mov
sub
add
jns
sub
pop
inc
dec
loop
repz
in
xor
cmpsb
bound
data16
dec
inc
xor
adc
lods
inc
enter
mov
jle
ds
dec
cld
mov
inc
test
pusha
out
notb
adc
or
dec
mov
stos
insl
lea
ret
dec
pop
push
mov
add
rcll
jo
mov
pusha
movsl
pop
dec
cmpsl
and
push
notl
xor
cwtl
fmuls
mov
clc
nop
jo
push
or
nop
repz
dec
xchg
jp
fcoms
mov
les
pusha
test
jl
cmp
add
sub
dec
data16
stos
dec
jbe
push
insb
ret
or
cmp
mov
inc
popf
roll
xchg
out
push
push
out
add
int
jbe
or
ljmp
rcl
test
fstps
aad
pop
mov
aas
pop
lret
int
add
aam
outsl
inc
imul
test
cmp
clc
icebp
jb
xchg
push
js
push
jle
inc
push
gs
sbbl
or
cmp
je
push
dec
adc
aas
mov
pusha
push
sbb
mov
cmp
popf
or
inc
repz
js
fsubrs
xchg
sar
fbstp
fcomps
xor
dec
pop
xchg
ljmp
cmpl
xchg
add
mov
fstps
sub
or
or
xchg
cmp
sbbb
insl
mov
lahf
lret
sbb
xchg
mov
jge
sub
stos
cmp
push
or
in
cs
leave
dec
jnp
mov
pop
lods
add
insb
fistl
mov
lret
pop
call
vsubss
dec
xchg
insl
cmp
fimuls
push
aas
rorl
sub
jo
sbb
neg
pop
cmp
jle
out
loope
lea
mov
xchg
or
jnp
jmp
jecxz
mov
fisubrs
jmp
movsb
leave
insl
das
mov
sub
inc
xor
xchg
jecxz
mov
les
adc
ljmp
dec
lock
mov
out
fistpl
pop
push
push
repnz
call
hlt
pop
cwtl
fdivl
and
loope
call
call
pop
movsb
les
push
ljmp
loopne
sbb
fucomip
test
sbb
loop
outsb
pop
adcb
and
in
sbb
dec
fidivrl
pop
sub
and
enter
mov
push
and
jnp
dec
inc
rcr
pop
mov
imul
data16
std
jl
inc
sub
jo
test
cmpsl
mov
mov
loopne
fdivrs
pusha
push
hlt
add
mov
xor
negb
add
and
leave
pop
jmp
xor
xchg
add
jecxz
cltd
in
sti
or
call
dec
xlat
fildl
mov
xchg
mov
xabort
ss
daa
popf
jg
imul
adc
popa
or
cmpsl
xor
ds
cltd
add
pop
add
daa
sub
push
xor
pop
pop
push
mov
call
sahf
mov
xorb
lods
lahf
adc
shr
xchg
xchg
sahf
icebp
mov
lahf
pushf
xchg
mov
add
push
mov
fndisi(8087
shr
mov
repnz
mov
mov
sti
out
bound
mov
mull
jp
xor
int
outsb
inc
mov
add
and
ljmp
cltd
mov
fwait
jl
or
mov
sub
pop
add
pop
bswap
jecxz
fwait
scas
jnp
push
pop
push
xor
push
aaa
inc
adc
xor
jbe
shll
mov
dec
adc
pushl
mov
int
jo
arpl
pop
lds
mov
cmc
xor
add
xor
lret
adc
cmc
mov
cmovnp
pop
add
jecxz
sub
mov
and
scas
mov
insl
inc
jbe
pop
pop
adc
lock
stos
add
xor
pop
pop
andl
push
fsubrl
adc
inc
sbbb
lcall
mov
fcompl
int
cmp
mov
xchg
scas
push
hlt
push
xchg
insl
mov
and
hlt
lcall
fwait
adc
stos
push
movsb
jo
out
insb
and
stc
and
outsb
mov
sbb
push
push
mov
sahf
test
push
clc
leave
push
gs
movsb
pop
dec
cmpsl
int
scas
jmp
mov
xlat
cmp
out
popf
mov
out
push
xlat
adc
push
lahf
loop
lahf
into
push
or
pop
or
ret
xchg
mov
jp
add
or
out
push
dec
cmp
lea
pop
iret
mov
es
out
and
xor
xor
or
cmc
fidivrl
push
and
aam
mov
popf
mov
mov
in
roll
fcoms
pop
mov
shrb
mov
stc
or
dec
jns
nop
enter
jmp
adc
scas
and
jge
lret
add
pop
mov
add
xor
ja
imul
inc
popf
das
mov
mov
fisubs
inc
xchg
xchg
pop
fs
std
jbe
push
outsb
fcoml
jb
pop
aad
xchg
cmpb
sahf
cmc
pop
push
pushf
mov
movsb
in
pushf
pop
es
add
adc
popf
inc
xchg
movl
jmp
mov
shrl
jne
sub
test
mov
shll
shll
xor
aas
stos
adc
mov
stos
sbb
xor
test
fsubrl
dec
mov
add
pop
pop
mov
pushl
lds
mov
insl
negl
jmp
sub
out
rcl
inc
mov
xchg
sub
test
paddsw
xor
push
sub
das
xor
mov
out
mov
pop
xchg
fiadds
push
xchg
cmpsl
jnp
fld1
sub
mov
cmp
mov
pop
iret
push
sbb
mov
jle
adc
mov
fwait
outsl
push
cmp
pop
fldl
icebp
sub
repnz
adc
sbb
fmull
pushf
jnp
inc
clc
test
dec
add
fsts
pop
mov
lds
cmc
adc
cld
outsl
xchg
fwait
xchg
dec
lock
xchg
pop
or
or
mov
pop
xchg
cld
mov
out
push
sub
fwait
inc
cmp
test
push
ss
mov
imul
fdivrl
xchg
imul
inc
adc
pusha
inc
jl
xchg
insl
int
xlat
mov
insl
aas
jecxz
imul
shll
out
cli
test
mov
fstpl
mov
dec
ret
test
xlat
mov
xor
popa
andb
fldt
push
imull
popf
inc
jb
in
les
xlat
hlt
add
pushf
jbe,pt
cmp
into
sbb
dec
and
icebp
dec
stos
imul
mov
dec
push
mov
jns
jno
les
jmp
xchg
das
xchg
cmp
jb
xchg
mov
out
mulb
mov
add
pop
stc
jne
jmp
push
jns
sub
adc
mov
jns
imul
jne
scas
xlat
mov
add
pop
out
fs
lahf
mov
xor
push
je
jg
jnp,pt
nop
cmp
xor
mov
out
xchg
mov
push
cmp
fmull
mov
dec
hlt
xchg
sbb
stos
xchg
xor
xor
jl
push
add
xchg
sbb
mov
jno
cmp
inc
aam
mov
or
in
stos
je
or
inc
jl
loope
jge
push
adc
inc
push
mov
shr
dec
stos
mov
push
adc
adc
inc
bnd
mov
mov
push
out
jmp
bound
add
rcl
jne
outsl
push
dec
into
loopne
push
std
xor
cs
mov
jecxz
cld
arpl
stc
push
lods
or
mov
es
or
mov
movsl
mov
fs
pusha
loopne
sbb
add
popw
stos
cmp
push
lods
cmp
aam
sub
pop
sub
lret
xchg
sub
ds
arpl
into
cmp
fcoms
dec
push
lods
dec
xchg
xlat
jle
popf
fmulp
mov
jno
cli
test
add
mov
pop
sbb
adc
sbb
int
int
arpl
mov
or
dec
sti
and
nop
dec
mov
loop
dec
shrb
or
in
pop
in
xchg
rcll
add
out
xchg
test
arpl
in
cmpsb
out
cmp
adc
lret
out
test
aas
mov
test
icebp
push
shll
roll
adc
xor
gs
mov
out
sbb
cs
popa
fnsave
add
sub
imul
lods
mov
mov
pop
faddp
dec
or
into
shl
xorb
insl
roll
or
mov
jns
jbe
xorl
ja
mov
or
jg
xor
or
outsl
cs
mov
into
mov
outsl
in
cmpl
shrl
adc
pop
push
ffree
mov
cli
mov
jb
jg
inc
dec
mov
mov
sbb
inc
call
ret
dec
out
movsl
xor
movsl
imul
push
inc
push
shrl
mov
fstps
mov
push
and
sbb
sbb
fstp
sub
rorb
out
stos
icebp
add
sbb
xchg
stos
nop
xchg
fcomip
and
mov
rcrl
out
faddl
adc
cmp
jnp
fwait
lret
xchg
fistps
das
lds
lods
jecxz
fcompl
adc
cmp
sub
dec
inc
xchg
mov
bound
jns
mov
lea
imul
ljmp
int
insl
cmp
lock
das
sahf
xchg
adc
loop
jno
jns
inc
or
sti
cld
repz
fldt
sub
addr16
add
mov
lods
cltd
aad
mov
pop
mov
cld
in
add
or
cli
cmpsl
dec
and
jae
sarb
sbb
clc
insb
dec
jg
dec
sub
mov
xchg
mov
sub
imul
inc
jl
stos
pop
iret
mov
add
xor
mov
test
jns
cltd
jge
imul
mov
movsl
mov
mov
cmp
adcl
adc
testl
inc
test
mov
dec
push
aas
mov
imul
out
inc
jae
or
out
sbb
mov
adc
out
insl
lods
or
sub
pusha
stos
pop
mov
sub
dec
repz
out
inc
data16
xchg
leave
call
call
stc
mov
xlat
fstpt
xorb
leave
and
addr16
push
sbb
adc
xor
jbe
arpl
mov
test
xlat
cld
test
mov
rclb
mov
and
mov
mov
or
xchg
sub
jnp
cmp
cs
loop
mov
hlt
stos
dec
inc
int
arpl
addr16
out
shr
fiaddl
sub
nop
negb
test
adc
mov
int3
enter
inc
lcall
adc
adc
je
fisubs
add
inc
sar
repnz
push
jb
inc
cltd
dec
push
adc
xchg
in
mov
lret
dec
popa
repz
call
sbb
mov
jp
mov
or
pop
gs
dec
aas
push
inc
mov
pop
std
loope
cmp
mov
pop
ja
stos
xchg
add
into
mov
shrb
xchg
popa
push
ret
out
in
gs
fsubrs
pop
stc
dec
push
pop
mov
xor
fildll
iret
push
aam
or
je
add
jecxz
clc
adc
cmp
ja
mov
xor
dec
stos
loope
cmpsl
mov
testl
mov
and
mov
ror
inc
jecxz
xlat
dec
mov
mov
fcoms
stc
js
cmp
outsl
in
cmc
fisttpll
push
lret
stos
inc
mov
mov
mov
cltd
daa
aad
push
dec
mov
pop
and
or
movsl
pop
into
adc
iret
mov
push
dec
sub
push
sbb
mov
dec
mov
cli
pop
pop
mov
in
addr16
sti
lret
mov
or
sub
xchg
mov
mov
andl
in
push
push
sarl
test
gs
lods
scas
push
dec
scas
cmp
loopne
idiv
add
dec
adc
mov
mov
add
out
sub
add
jmp
aad
insl
push
or
dec
inc
jo
add
mov
out
addr16
cmpsb
inc
sbb
sub
add
test
iret
adc
cmp
mov
inc
in
inc
enter
sti
sub
mov
ds
out
lock
mov
test
mov
stos
add
mov
add
pop
jnp
ja
push
mov
cld
bound
dec
xchg
xchg
push
sub
sbb
repz
call
test
add
mov
negb
sub
les
scas
xchg
adc
cmp
fimuls
sub
daa
popa
movsb
lds
bound
test
js,pt
les
inc
outsl
xchg
mov
jb
jne
adc
pusha
imul
lret
jg
mov
mov
lds
xlat
mov
or
push
dec
imul
scas
dec
ja
push
xor
lea
movsb
insl
insl
fdivs
push
faddl
imul
push
insb
outsb
cmp
imull
mov
addl
dec
jae
xchg
cwtl
pop
loop
mov
sub
dec
xlat
or
mov
test
mov
add
mov
mov
pusha
lods
pop
cmp
stc
adc
and
call
pop
int3
pop
jb
or
lahf
sahf
xchg
xchg
sbbl
nop
mov
int
enter
clc
in
push
mov
mov
adc
mov
mov
xchg
lock
fldenv
push
cmp
lock
test
rcl
mov
test
or
dec
stos
xchg
adcl
jp
lcall
inc
fadds
rol
add
fcmovnbe
fadd
in
add
and
mov
sub
lret
call
in
dec
cmp
clc
loope
out
dec
sub
data16
cmp
or
test
lea
pop
int3
outsb
lock
rcl
dec
mov
jae
aas
cmp
lcall
sbb
push
in
int3
lods
out
jnp
push
inc
sahf
lea
cmpsb
pop
cmp
dec
jnp
or
and
add
shlb
sbb
sub
shl
push
pop
sub
sub
push
aad
std
arpl
clc
dec
aam
in
mov
mov
mov
shrl
les
add
push
and
mov
lcall
push
mov
pop
cmp
sti
aam
in
xor
iret
mov
xchg
popf
mov
cld
inc
xchg
mov
sbb
lret
mov
push
xchg
ja
inc
data16
inc
jp
clc
sub
pop
insb
cmpsl
in
xchg
std
jp
hlt
lahf
ret
outsl
cmp
cmpsl
cs
pusha
cmp
cmp
sub
int3
sub
std
in
mov
shr
in
adc
pop
int
aas
adcl
add
rorl
cmp
jnp
xor
test
das
loope
pop
and
ss
adc
mov
xchg
or
cmp
mov
ret
add
sub
ljmp
inc
or
adc
sub
or
push
cmp
imul
dec
mov
dec
xchg
push
addr16
in
outsl
push
dec
inc
jge
dec
mov
bound
dec
dec
xor
scas
inc
mov
pusha
xor
out
jmp
stos
das
cmpsl
sbbb
ja
movsl
inc
xchg
xor
push
push
jne
es
fdivrl
xor
in
es
frstor
out
pushf
fisubrs
js
test
jle
dec
icebp
xchg
pop
loopne
dec
push
pop
cmc
fisttpl
mov
mov
mov
push
inc
xchg
adc
sbb
cmpsb
adcl
mov
in
jmp
scas
scas
add
or
sbb
sti
in
cmp
push
sbb
fsubrl
adc
cmpsb
sahf
repnz
dec
or
out
imul
dec
jmp
pop
jle
adc
adc
sbb
mov
sub
mov
stos
and
in
mov
sub
mov
cmp
int3
lahf
xchg
xor
xchg
add
dec
sub
push
jae
mov
mov
daa
adc
inc
aas
dec
add
in
adc
mov
add
lea
cltd
xor
xchg
iret
pop
fisttpll
insb
or
and
test
mov
out
call
mov
push
mov
xor
jecxz
test
loopne
xor
fstl
mov
sbb
and
ds
push
cli
push
jb
adc
repz
js
cmp
adc
cmc
xor
in
and
cltd
xchg
test
repz
test
cmpl
fnsave
adc
mov
movsbl
aaa
cmc
and
adc
int3
and
sub
hlt
push
fwait
pop
imul
jbe
test
xchg
movsb
jle
hlt
jg
mov
jb
sub
popa
add
int
lret
mov
xchg
cmp
stos
repnz
arpl
pop
sbb
sub
inc
pop
shrb
inc
jmp
negb
into
sahf
or
cmp
insb
imul
fwait
rorl
or
lea
out
mov
fnsave
in
cwtl
ss
jo
enter
mov
adc
shlb
mov
pop
stc
aas
mov
pop
push
push
jle
fsqrt
call
sub
and
fs
and
lds
fidivrl
xchg
std
cli
ja
pop
pop
mov
cmp
push
inc
sets
jp
out
inc
xchg
rcl
loopne
push
push
and
aam
xchg
xchg
shr
pusha
mov
mov
pushf
rcll
lahf
out
test
out
cmp
loopne
test
scas
or
addr16
pop
sbb
push
ss
imul
pop
mov
pop
cs
push
fnstsw
jmp
ds
out
aam
fimull
icebp
pop
sub
fsubrs
adc
pop
dec
xchg
mov
mov
dec
jae
faddl
cld
insl
cltd
sbb
mov
je
or
cmpsb
daa
lret
idivl
jne
je
push
jecxz
and
xchg
mov
adc
ret
ret
cld
mov
jne
xor
in
repz
fcoml
jae
inc
in
cmpsl
stos
jecxz
bound
sub
jns
adc
cld
sahf
and
xchg
xchg
movsb
scas
pushf
push
cmp
dec
dec
adc
je
xchg
in
sub
mov
mov
adc
pop
negb
inc
adc
fadds
and
imul
inc
stos
jecxz
inc
xor
xor
imul
cmp
cmp
std
addb
imul
out
mov
push
mov
cwtl
lret
sbb
test
add
dec
loope
out
or
pop
push
push
jns
sub
adc
pop
cmp
fwait
stos
mov
es
pop
clc
mov
dec
or
inc
movsb
call
or
jp
sbb
add
scas
aad
inc
pop
or
mov
pushf
or
adc
sbbb
push
mov
mov
xchg
mov
xor
imul
aad
aas
cmp
cmpsl
aam
std
sub
ficompl
cmp
pop
pop
nop
mov
icebp
int
test
cmp
jns
push
lock
fs
adc
inc
fcoms
mov
jmp
popa
lret
or
pushf
rcrb
cmp
insb
push
sub
sahf
jae
int3
xchg
sbb
push
sub
popf
shrl
dec
xor
sub
cltd
mov
dec
jp
pop
xlat
xor
dec
imul
sti
outsl
int3
push
jl
cmp
inc
add
loop
inc
or
adc
or
sbb
fwait
add
rol
aad
jl
fs
mov
adc
mov
add
jno
and
mov
dec
jmp
mov
pop
out
pusha
dec
shrb
xor
cli
mov
mov
mov
add
out
sbb
add
cmpsl
pop
cwtl
daa
inc
ds
jae
repz
mov
push
repnz
lahf
fstpt
mov
out
cwtl
adc
pop
leave
lahf
cmpsb
push
jecxz
pmulhuw
push
outsb
or
into
dec
push
mov
lods
int3
xor
jp
adc
or
mov
xor
fcomi
xchg
and
add
gs
mov
push
mov
adcl
dec
mov
outsb
scas
and
add
subl
lods
pop
dec
lods
sbb
and
fcoml
test
fdivr
ja
lea
sbb
shlb
outsb
xor
adc
faddl
out
jae
ficoml
scas
jbe
mov
jbe
adc
adc
mov
outsb
cmpsb
pop
mov
adc
mov
xor
pop
out
insb
push
xor
pop
mov
iret
push
cmc
mov
mov
push
ja
ljmp
xor
ja
out
arpl
xor
int
cmp
scas
xchg
lea
cmp
jbe
mov
cmp
inc
lea
push
pushf
iret
cli
mov
sub
inc
pop
js
rcll
inc
pop
cltd
rcll
test
lock
clc
push
or
loopne
xchg
clc
pop
or
test
sti
xor
cmp
sub
sub
mov
movsl
orb
mov
xchg
in
adc
fs
push
jp
inc
lahf
mov
xor
mov
sbb
jne
fiaddl
xchg
cld
ja
stos
xor
lds
cmpsl
lods
inc
hlt
test
es
inc
fnsave
sub
in
and
fnstcw
push
jle
in
mov
aaa
arpl
inc
jns
nop
xlat
cmp
lods
pop
push
adc
cmp
jle
jecxz
inc
add
mov
imul
popa
pop
loope
fildl
push
ss
jp
adcl
jbe
aaa
test
cmc
lret
xchg
mov
pop
sbb
cmp
mov
sarb
daa
xchg
aaa
cmp
scas
sbb
xor
js
sbb
mov
fs
sub
jbe
insb
xor
and
pop
clc
sbb
mov
fidivs
and
mov
add
sub
test
repz
mov
inc
lds
lea
mov
fldt
pop
jbe
xlat
mov
or
and
mov
add
ret
lcall
fs
xor
loop
pop
mov
or
ret
xchg
sub
mov
aas
add
mov
outsl
ret
les
lods
loopne
push
pushf
inc
or
out
fisttpl
sti
fisubrl
inc
push
mov
cs
and
dec
test
dec
xor
adc
sbb
pop
xchg
out
push
fstpt
pop
stos
mov
cwtl
inc
pop
in
sahf
repnz
or
cwtl
push
jb
clc
fnstsw
cmp
lods
int3
push
cmp
xchg
loopne
lods
sbb
or
je
jo
fsubl
xchg
imul
lcall
xlat
in
jnp
inc
adc
movb
ja
leave
in
and
mov
pushf
cmp
xorb
cmpsl
iret
movl
out
pop
push
dec
cmp
xchg
push
dec
aad
dec
enter
mov
popf
insl
mov
xor
mov
push
addr16
sahf
sahf
mov
enter
sbbl
cmp
inc
leave
adc
mov
orb
jg
ljmp
testb
mov
outsl
sub
add
ljmp
sub
lock
out
scas
test
xchg
lret
cltd
dec
out
js
cmpsl
mov
add
out
and
aad
lds
sub
jmp
dec
sub
cmp
int
pop
addb
add
add
in
sbb
mov
rorl
jge
add
scas
jge
or
in
sbb
jl
in
subb
ret
push
pop
xor
aad
mov
push
mov
addb
mov
adc
loope
imul
mov
hlt
pushf
inc
sar
pop
mov
stc
dec
nop
mov
enter
cmp
movlhps
xor
mov
out
push
mov
enter
mov
mov
push
and
cmc
pop
jno
nop
cld
ret
loope
mov
jmp
mov
or
sbb
pop
mov
cmpsl
call
test
add
mov
clc
or
inc
and
mov
cmp
sbb
stos
mov
movsl
es
push
cmp
aad
pop
mov
scas
repnz
cwtl
insl
dec
push
cmp
imul
jae
mov
cmp
pop
test
mov
mov
push
xchg
jge
das
ds
xchg
out
mov
test
mov
pop
ss
mov
and
push
pop
es
xchg
xor
leave
pusha
enter
xchg
std
nop
jl
sub
add
pop
and
adc
arpl
jno
xchg
loope
xchg
outsl
iret
hlt
cwtl
cs
dec
and
push
adc
sbb
xor
dec
or
mov
mov
int
mov
pop
cmpsl
mov
pop
mov
or
cwtl
sbb
fdivrs
daa
mov
aam
out
ds
mov
dec
enter
in
adc
jb
imul
xchg
movsb
sarl
sub
into
xor
sub
shl
mov
bnd
std
hlt
push
scas
cmc
xorl
jb
sahf
ficomps
rclb
pop
rcl
out
xlat
out
bound
lock
and
out
push
int
aaa
add
mov
jmp
xor
jle
dec
push
or
fadd
push
lcall
mov
sbb
push
sub
adcl
fildl
jno
lock
shlb
cltd
cmp
inc
hlt
nop
out
das
or
and
aas
js
adc
repz
xor
adc
inc
mov
mov
sbb
sbb
and
or
push
xor
dec
xchg
mov
mov
xlat
in
xchg
sbb
ret
inc
or
aad
lret
jb
ja
push
xor
ret
cmp
inc
mov
adc
sbb
jg
push
aam
xchg
outsb
shl
rcr
sub
mov
xchg
repz
mov
pop
clc
repnz
push
jmp
in
lret
sti
fcom
outsb
lods
pusha
cli
xchg
lock
jbe
mov
inc
fistpll
push
jg
xchg
push
test
adc
das
mov
ljmp
lcall
sbb
add
inc
jecxz
push
inc
add
xchg
or
repnz
ljmp
add
jg
mov
and
mov
out
mov
mov
push
into
jmp
jne
pusha
sbb
into
or
and
mov
mov
xchg
imul
sbb
je
pop
imul
js
int3
in
ret
xchg
pop
sbb
mov
mov
pop
movsb
rclb
ret
add
and
mov
lock
inc
in
cwtl
mov
arpl
aas
fidivrs
dec
fldenv
movsl
mov
rorb
repz
inc
into
cmpsl
cmovns
cltd
int
mov
mov
ja
push
inc
mov
sti
out
push
mov
cwtl
push
xlat
test
int
jb
dec
icebp
push
movsb
push
jbe
in
and
daa
cmp
inc
fcmovu
shll
into
in
fwait
mov
push
ret
ljmp
stc
leave
xchg
call
pusha
cmp
push
dec
pop
ljmp
lahf
jo
dec
xchg
jmp
push
fsubrs
mov
stc
push
mov
sbb
sub
xor
pop
lods
jmp
mov
movsl
stos
leave
ret
pop
jp
clc
and
sub
iret
fdivl
jge
lcall
inc
add
pop
out
and
mov
mov
jle
mov
fistps
arpl
inc
xor
mov
push
repz
pop
xchg
int
test
fs
aam
test
add
pop
push
nop
cmc
inc
int3
hlt
daa
push
arpl
cltd
pop
and
adcl
jb
cs
inc
push
outsb
add
rclb
mov
shrl
lds
pop
lods
imul
pushf
mov
loop
xlat
sbbb
push
test
inc
popa
leave
add
std
cmp
outsl
lods
jo
xchg
pop
and
gs
out
call
hlt
cmp
pusha
out
sbbb
xchg
sbb
cmp
rcll
pop
iret
push
push
test
push
push
shll
ja
dec
jne
sbb
cltd
xchg
jns
pop
outsb
inc
inc
push
or
sub
ja
fstl
in
ja
mov
jno
mov
in
push
in
nop
mov
scas
test
and
js
shll
jae
stc
test
inc
adc
jp
sub
dec
test
xchg
xchg
ss
int
push
push
xchg
or
je
jno
jle
mov
add
pop
insb
mov
in
je
sbb
cs
mov
aas
lcall
into
test
and
or
in
jno
lret
mov
aad
pop
adc
int3
loopne
pop
xor
and
cwtl
in
pop
or
enter
sbb
fiaddl
mov
inc
fstp
btr
dec
movsb
and
push
jge
cmp
lods
pop
adc
cmp
adc
pop
lret
inc
push
push
adc
fnstsw
push
mov
or
int3
xchg
lea
jp
out
inc
dec
add
dec
js
jns
cwtl
popa
shr
xchg
das
cs
xor
lahf
fadd
jle
adc
incb
ja
pop
out
or
lods
dec
inc
push
cmp
insl
jp
aam
imul
pop
sbb
test
jnp
call
js
push
mov
and
inc
ret
jnp
inc
cmp
test
jnp
lahf
and
dec
js
movsb
or
mov
sub
pop
out
loop
jae
cmp
mov
dec
sub
or
cmp
das
mov
sub
and
jg
outsl
dec
or
sbb
scas
jp
bound
stos
fiaddl
fcompl
mov
xchg
rorl
cld
out
rolb
or
mov
pop
push
and
push
mov
mov
leave
stos
mov
or
les
sub
out
mov
out
push
dec
imul
addr16
adc
mov
jbe
lods
aaa
mov
dec
adc
add
mov
lret
ret
push
out
jmp
pop
fnsave
jo
inc
dec
mov
mov
test
xchg
dec
mov
dec
bound
imul
int3
fldl
aam
adc
adc
std
jge
cmp
gs
jbe
sti
cltd
xchg
sub
lcall
mov
lret
or
mov
push
adc
adc
add
mov
fsts
icebp
rcl
fsubrs
or
rorl
loopne
pop
call
xchg
adc
aas
mov
fistpl
mov
subb
loope
test
leave
cmp
loop
outsb
jmp
cmp
pushf
inc
out
inc
repz
movb
iret
enter
js
push
es
sti
fstpl
cli
jno
mov
arpl
fwait
mov
test
sbb
imull
jns
in
nop
mov
jb
in
mov
push
test
testl
sbb
mov
mov
sub
popf
mov
xchg
jno
iret
cmp
in
push
mov
out
aaa
loop
pop
pop
mov
mov
andb
nop
sub
ds
lea
adc
in
mov
js
out
cmp
dec
nop
sbb
inc
les
cli
mov
lea
out
outsl
xchg
dec
or
popa
xchg
js
loope
and
fisttpll
xchg
scas
adc
ja
orl
int3
pop
cmpsl
loope
push
les
mov
loop
xchg
cli
das
les
sub
js
and
lahf
sbb
cmp
in
loop
cmpsl
les
jp
mov
push
pop
mov
outsb
xlat
mov
rcll
fisubs
xchg
cli
xor
mov
repz
adcb
dec
fstpt
fstl
xchg
ss
xchg
sub
inc
aas
in
cli
cmp
sub
mov
jnp
test
xor
inc
idivb
gs
push
adc
mov
adc
push
xchg
and
jns
arpl
jns
mov
mov
fmuls
and
sbb
adc
les
or
push
or
mov
jns
push
xor
stc
sbb
insb
dec
std
xchg
xchg
imul
xor
sub
dec
cmpsl
ret
popf
rolb
les
xchg
and
adc
out
iret
dec
movl
dec
imull
sub
jecxz
xor
mov
pop
into
cmp
xor
movsl
cmp
jle
repnz
in
and
addb
dec
xchg
dec
mov
imul
sbb
int3
mov
cmp
int
xchg
xor
pop
fstpt
les
mov
out
ds
aad
aam
insl
das
add
orb
bound
dec
xchg
mov
rorb
add
outsb
cmp
cmp
loop
dec
pop
inc
imul
scas
or
loope
push
inc
divl
popf
xor
mov
mov
lds
mov
clc
into
int
rolb
or
inc
mov
inc
push
std
jne
lock
pop
inc
push
bound
push
bound
out
stc
rorl
ljmp
test
sub
inc
ret
outsl
push
mov
xor
xchg
or
add
rorb
popa
clc
cmp
and
test
pop
sbbb
fistpl
sbb
sub
mov
inc
sbb
mov
cmpsl
std
sarl
cmpsb
rorl
sahf
repnz
dec
dec
fwait
lret
jle
push
jno
sub
das
std
dec
scas
gs
sbb
cld
mov
push
mov
jo
xor
cmpsl
lret
mov
xchg
shr
or
flds
xlat
outsb
loop
add
pop
jg
jmp
test
jge
jle
divl
xor
jmp
mov
mov
adc
xchg
test
sub
jecxz
movsb
cmp
sub
mov
fwait
mov
loopne
cmp
sub
xor
movsb
or
int
ljmp
pop
push
push
dec
scas
stc
scas
lahf
icebp
iretw
jns
movsb
xor
add
add
insb
dec
out
jl
movsl
in
cltd
in
mov
add
cld
add
sbb
adc
popl
fisttps
imul
movsl
loope
sub
insb
inc
enter
fists
sub
sbbb
push
or
insb
into
and
inc
inc
aas
sub
xchg
lods
sbb
pop
arpl
popa
call
add
lods
jo
test
xchg
int
mov
xchg
sbb
cmp
addr16
lock
mov
xor
pop
mov
sarl
push
clc
mov
push
loop
mov
mov
shlb
jns
mov
pop
fwait
cld
push
mov
push
aad
bound
or
rclb
mov
adc
inc
nop
xchg
mov
or
dec
nop
pop
adc
rcrb
sub
ss
inc
jbe
sub
popf
inc
mov
in
addr16
add
movsl
andb
pop
fs
pop
push
xor
mov
add
and
jns
jg
movsb
mov
adcl
pop
jae
cmc
loope
xor
and
mov
sar
js
icebp
push
cmpsl
xchg
cmp
xchg
sub
jmp
adc
jle
jmp
sbb
jge
cmp
test
cmp
jecxz
in
and
sbb
std
lret
mov
cli
in
xchg
jmp
out
push
jge
push
cmpsl
push
in
sub
cmp
imul
inc
xor
pop
orl
outsl
dec
popf
jns
loope
mov
lcall
sbb
and
jo
rcr
inc
jns
push
and
add
hlt
jne
roll
test
fstps
outsl
dec
ror
popf
mov
xor
and
xor
jo
inc
insb
jle
dec
iret
dec
dec
mov
sub
in
ret
in
pop
xchg
in
rcr
fcomp
rclb
out
sub
aam
jle
in
notb
ja
movsb
add
pop
sbbb
cmp
scas
lea
je
dec
scas
pushf
fucomp
mov
push
shrb
pop
loope
fcomps
jae
scas
sbb
or
lods
rorl
loopne
nop
sbb
mov
ja
and
lods
and
out
cli
cmp
fwait
out
xor
jbe
push
or
shr
loope
aad
repnz
mov
xchg
in
popl
jne
dec
hlt
mov
vpsadbw
jne
repz
loopne
stc
aad
ss
scas
or
in
push
roll
shl
inc
jl
push
mov
xor
addb
aad
aaa
jno
or
pop
mov
xchg
fs
pop
xor
sahf
jo
and
mov
and
mov
adc
adc
jo
mov
ret
int
mov
cld
enter
dec
scas
push
pop
xchg
add
push
sub
adc
xchg
ljmp
inc
xchg
or
sbb
mov
sub
mov
fstl
ret
cld
shr
sbb
loop
cwtl
insb
xor
loopne
int
scas
push
and
fldpi
mov
pop
cmp
add
sbb
add
mov
mov
fistpl
inc
add
add
pushf
bound
dec
xchg
test
xchg
stc
das
push
je
mov
inc
je
sub
lret
ljmp
dec
nop
cli
pop
insl
mov
push
popl
je
jmp
cltd
adcl
add
dec
cmp
lahf
sub
jg
mov
cmp
int3
mov
int3
mov
xchg
sahf
cmp
mov
repz
data16
and
or
loopne
push
rorb
and
xchg
and
lock
sub
ja
loope
adc
xorl
add
fistpl
sahf
cmpsb
fsub
sbb
fmull
adc
in
xor
aas
cmp
in
or
and
push
mov
test
add
add
sub
sbb
cmp
hlt
cli
dec
mov
iret
push
cs
outsl
xchg
jno
push
add
and
cltd
cmc
fdivrl
in
jge
jg
mov
push
adc
rcrl
lcall
xchg
sbbb
outsb
add
pushf
add
in
aas
jae
mov
or
movsb
data16
jmp
adc
stc
jb
or
mov
xchg
fldl
mov
xchg
add
movsl
leave
loope
test
mov
dec
and
imul
mov
mov
cmpsb
hlt
jmp
sbb
mov
in
ja
sbb
subl
xlat
fidivrs
cwtl
pushf
inc
cs
xlat
xor
icebp
lret
mov
pushl
std
leave
pushf
dec
loopne
inc
filds
cmp
add
xchg
push
mov
mov
pusha
xchg
xorl
xor
loope
addr16
repz
iret
sub
push
cmp
repnz
dec
outsl
outsl
or
imul
mov
dec
cwtl
sbb
popa
popa
popf
bound
xlat
iret
mov
pop
and
and
addb
jnp
pop
adc
mov
mov
cmp
lret
mov
cmp
dec
dec
je
aas
jp
push
lcall
mov
and
aaa
fadds
xor
ja
lahf
inc
repz
mov
mov
lahf
sub
clc
call
outsl
adcl
jne
sbb
jg
cmc
mov
dec
out
ret
cld
jno
dec
out
cmp
push
enter
lcall
sub
cmp
shrb
shrl
repz
rorl
or
mov
xchg
add
pop
jmp
fists
mov
outsl
daa
jne
add
enter
jno
xchg
xchg
dec
bound
and
cli
in
cmp
sbb
xchg
push
and
jp
cmp
adc
mov
pop
jno
jo
test
add
enter
push
adc
dec
dec
or
xchg
adc
cmp
repnz
cld
pop
fimuls
pop
int
aaa
cmpl
sbb
popa
and
and
stos
push
push
cmp
adc
and
xchg
repz
add
fidivrs
mov
shrl
sarb
cmp
rol
sbb
stc
rorl
or
adcb
adc
or
mov
pop
ret
cmp
or
sahf
and
sbb
dec
cmpsb
out
shll
mov
test
imul
mov
or
mov
sbb
jmp
into
xchg
cmpsl
rcll
popf
jnp
insl
push
and
mov
imul
aas
in
pop
sbb
push
dec
jg
outsl
cmpsb
mov
push
andl
fildl
jns
lds
xor
pop
add
int
jle
das
out
xchg
and
push
cmp
cmp
mov
ret
xchg
cmp
push
mov
bound
add
ja
ror
inc
andl
jnp
and
cmpsl
insl
inc
inc
xor
push
jmp
adc
imull
mov
jmp
repnz
mov
pop
pop
pop
and
idivl
push
add
addr16
mov
adc
repz
mov
mov
cmp
mov
and
lock
sbb
sbb
pop
dec
pop
cld
dec
enter
insb
mov
mov
bound
out
stc
aam
sbb
or
push
movsb
fs
and
lahf
push
xchg
and
mov
and
idivl
fstp
mov
xlat
jg
sbb
fcoms
adc
cmp
add
mov
hlt
sub
mov
pusha
ja
adc
add
clc
insl
mov
push
mov
jae
testb
arpl
push
or
xchg
loope
dec
pop
cmpsl
xchg
cli
push
jle
bound
and
ds
mov
xor
into
not
jmp
aaa
push
in
fidivrs
and
mov
rcrb
mov
out
xchg
pop
mov
mov
xor
fstp
nop
testl
je
in
and
xlat
cmp
lds
add
jae
push
jb
icebp
fstpt
pop
fdivl
inc
lea
mov
lods
ja
ret
test
add
cld
popa
jae
pop
in
js
lds
jmp
lret
call
xchg
clc
ret
add
dec
movb
mov
push
out
jge
stos
aaa
out
cmc
push
xchg
adc
sbb
or
xlat
rorb
and
pop
rorb
adc
mov
setne
insb
pop
mov
push
xchg
mov
mov
pop
pop
daa
sub
mov
xchg
and
inc
inc
xor
cmp
pop
lahf
ja
decb
pop
add
pop
test
jecxz
es
loop
mov
jecxz
aad
das
xor
test
cwtl
sti
mov
call
loope
sbb
jg
mov
mov
lods
sbb
mov
sub
or
ficoms
add
dec
mov
jns
xchg
repnz
mov
pop
adc
xchg
addl
xchg
push
push
lahf
imul
and
jae
lods
pop
pop
lcall
test
push
adc
add
bound
sbb
add
sub
dec
mov
mov
jg
fs
adc
mov
xor
mov
movsl
push
inc
push
mov
cwtl
jns
aas
inc
push
adc
mov
cmpl
hlt
lahf
cltd
xor
inc
fists
aam
lds
and
push
rcr
adc
pop
aad
and
push
mov
stc
clc
xor
jbe
or
dec
cmp
pop
or
cmp
mov
jae
call
cmpsl
aam
test
fistpl
xchg
pop
ja
stc
ret
dec
je
add
add
or
mov
jge
mov
pusha
cwtl
xchg
jae
pop
das
lret
aam
jne
rcrl
ds
sbb
aaa
mov
fisubrl
add
push
push
es
stos
or
lret
lods
shlb
jo
pop
adc
xchg
mov
imul
cmp
inc
loop
cmp
mov
sbb
xchg
jg
in
xchg
out
mov
and
out
data16
push
fwait
inc
push
adc
dec
fdivrs
in
jmp
xor
aas
dec
mov
cmp
in
push
aad
jnp
xor
and
xchg
jne
stos
repnz
mov
jge
pop
lock
xor
dec
lock
aad
mov
add
jno
lret
loope
sub
mov
pop
dec
fsubrs
fstl
fists
pop
inc
xchg
add
pop
fstps
test
adc
mov
dec
mov
xchg
mov
aaa
stc
sub
push
cmpsl
out
jbe
xchg
fwait
cmc
sub
cmp
test
adc
loop
fidivl
mov
mov
in
sarl
mov
push
adc
clc
rcrl
popa
sbb
push
xacquire
outsb
and
jns
jecxz
push
scas
dec
adc
inc
int
outsb
decb
push
or
lock
add
add
outsb
mov
cmpsl
inc
scas
mov
sbb
dec
repz
fldcw
stos
ret
mov
in
xlat
mov
movl
mov
repnz
push
inc
enter
xchg
hlt
in
loopne
pushf
inc
lods
cmp
jae
xlat
mov
movsb
scas
call
lods
in
lret
jge
lcall
pop
ljmp
jecxz
rolb
pop
out
out
outsb
repnz
fld
mov
lret
loope
fsubl
pop
xchg
lret
or
xchg
shlb
and
inc
inc
xchg
and
xchg
lods
insl
lea
nop
aad
cld
loope
bound
and
cmp
std
inc
cmp
outsb
push
sbb
xor
fcomi
aad
xchg
daa
dec
xchg
mov
int3
outsb
call
sub
gs
repnz
mov
mov
nop
mov
shr
mov
pop
dec
movsb
loopne
insl
and
imul
and
out
mov
xchg
inc
sahf
push
adc
ud2
and
push
inc
sub
xor
mov
xlat
cmp
push
loop
out
cmp
mov
mov
ja
push
sub
into
sbb
in
and
push
enter
mov
icebp
mov
in
hlt
call
sbb
inc
loop
shlb
rorb
adc
insl
mov
add
dec
pop
mov
aam
xor
out
cmpsb
inc
out
icebp
cli
ja
decl
xchg
or
and
addr16
nop
add
and
sub
cmpsl
subb
jmp
and
dec
ror
bound
xlat
cmp
mov
cmp
aaa
xchg
lahf
or
adc
fistl
mov
pushf
lret
jb
or
lahf
mov
es
sub
mov
mov
lahf
stc
in
ljmp
jno
es
sbb
dec
loopne
fmuls
jle
mov
mov
xor
rorl
pop
cs
das
aaa
adc
addr16
roll
inc
cmp
fs
or
popf
pushf
mov
sub
roll
and
clc
ds
adcb
ja
enter
push
cmp
mov
dec
cwtl
or
xchg
adc
frstor
and
jg
pushf
mov
push
pushf
dec
dec
jle
push
std
out
mov
imulb
mov
outsl
xor
mov
or
inc
fbld
test
test
cmp
cmp
push
add
sti
data16
sahf
xchg
flds
xchg
adc
dec
in
mov
std
nop
aad
jg
out
in
adc
pop
and
inc
cmp
cmp
test
adc
or
addr16
daa
xor
xor
test
ret
ljmp
mov
inc
push
out
push
dec
insb
jae
sbb
adc
mov
mov
loope
into
add
cmp
mov
hlt
outsl
jmp
jge
and
or
mov
dec
arpl
push
fwait
xchg
test
fisttpl
lret
push
scas
mov
xor
popf
movsl
in
inc
and
int
rolb
mov
cld
fisubs
sbb
push
xor
sub
cwtl
aam
add
cmp
les
mov
or
ret
sbb
push
cmp
ficomps
push
pop
in
jbe
sub
je
inc
sbb
and
nop
pop
stos
push
mov
and
jae
mov
jne
stos
ret
shrb
cltd
add
lret
inc
sarl
and
loope
xchg
imul
gs
ljmp
and
stos
in
xor
aaa
dec
and
jns
or
mov
cmp
pop
sahf
xchg
rcrl
cwtl
leave
add
ret
adc
sbb
movsl
lret
fsubp
enter
es
cmp
icebp
mov
xchg
aas
inc
mov
aad
bound
and
lock
ficoml
neg
out
jle
test
movsb
scas
or
clc
mov
into
cmp
data16
call
cltd
dec
sbb
lock
sbb
test
add
add
mov
sbbl
fists
test
imul
push
jns
int3
or
out
xchg
push
push
dec
hlt
dec
or
pushf
sub
stos
stos
xor
lock
cmpsb
rorb
subb
cs
xor
fistpll
fmulp
fmull
dec
pop
xchg
cmc
shlb
in
or
pop
loop
xchg
scas
scas
mov
push
adc
and
jae
loopne
mov
fcom
mov
test
les
ljmp
and
shl
xor
inc
cmp
mov
fidivs
rorb
dec
pop
push
jle
cmp
dec
xor
xchg
in
and
sub
hlt
adc
sti
sbb
cmpsb
in
lcall
cwtl
nop
push
cmpsl
test
xchg
push
jle
imul
scas
ss
addl
not
sub
roll
icebp
jno
and
jnp
jno
lea
je
dec
sbbb
dec
shlb
cmp
repz
les
jge
int3
fildll
das
or
add
arpl
in
lahf
in
jnp
out
mov
lret
xchg
jle
jge
outsb
sti
lods
xlat
dec
data16
pop
dec
or
sub
adc
or
lcall
hlt
loopne
jecxz
dec
xchg
cmp
jb
jecxz
fs
sub
leave
scas
or
je
mov
int
jl
pop
cld
or
push
movsl
mov
or
xchg
nop
mov
in
fs
jp
push
imul
xchg
mov
fisttpll
add
mov
pop
enter
sub
outsl
sub
bts
notl
imul
or
pop
out
in
aas
dec
xchg
lcall
adc
fsubl
pop
inc
fs
ljmp
inc
in
or
mov
lret
lods
lret
call
jbe
fwait
xor
outsl
scas
testl
mov
je
sarl
mov
out
push
nop
pop
lret
testb
leave
xlat
outsl
jg
filds
or
push
cltd
movsb
push
outsb
add
cmp
shlb
mov
loopne
rcrb
sbb
jo
or
xor
sub
sub
pop
add
adc
mov
mov
loop
inc
inc
ds
push
fsubrs
add
sub
jge
mov
xor
mov
push
mov
xor
push
push
jl
shll
jl
es
mov
shrl
and
add
push
lret
psubb
std
mov
fwait
loope
gs
sbb
adc
out
pusha
test
cmc
mov
xor
fdivl
jnp
pop
rorb
es
idivb
scas
mov
repz
and
cs
imul
push
aaa
lods
mov
push
xor
pop
daa
test
outsb
ljmp
jne
xchg
adc
in
stos
mov
rcrl
icebp
mov
les
mov
cld
inc
sub
popa
push
adc
push
fnop
dec
arpl
inc
xorb
pop
pop
pop
loopne
pop
jne
mov
or
xchg
jo
push
insb
popf
mov
leave
sarl
aas
pop
or
sub
outsl
rcl
int3
test
dec
lahf
fcomi
and
daa
stc
ret
rclb
add
cli
sub
cmc
push
daa
dec
nop
rcl
movsl
pop
test
pop
gs
xor
push
aaa
fnsave
push
jg
xor
mov
fwait
adc
adc
stc
roll
and
xchg
jmp
sub
cmp
int
popf
jmp
inc
dec
and
icebp
cmp
addr16
push
mov
and
stos
and
adc
or
xchg
mov
movsb
sub
xchg
pop
ja,pn
jne
xchg
mov
adc
mov
sahf
or
push
enter
aaa
push
mov
call
imul
mov
rol
test
add
out
lret
lods
pop
aam
shlb
adc
rolb
cmp
leave
repz
jg
add
xor
mov
repnz
sbb
test
pop
cmp
push
jb
cmp
insb
sub
cwtl
movsl
iret
sbb
cmpsl
dec
adc
sub
jno
jbe
stos
cmp
inc
add
cmpsb
lock
mov
push
cli
cwtl
pop
daa
pop
mov
mov
fisubl
mov
mov
cmp
mov
jl
sub
cld
mov
and
mov
add
dec
cs
pop
in
pop
or
mov
sbb
andl
mov
push
or
rol
inc
push
movsb
jns
push
and
xor
js
jne
sar
arpl
bsr
xchg
cmp
sub
mull
inc
mov
push
cmp
push
bound
jb
or
pop
and
mov
xchg
insl
or
nop
pusha
inc
das
or
push
shll
gs
push
push
sbb
mov
scas
int
hlt
nop
arpl
repnz
test
sub
subl
sub
cmp
stos
jg
das
sub
addr16
sbb
je
jns
pop
pop
cmp
data16
js
lea
mul
test
sbb
stc
jecxz
pop
or
xor
ret
loope
mov
loope
xchg
dec
pop
fsubs
idivl
ud2
ss
stos
jbe
xor
icebp
inc
mov
cmc
test
cs
adc
mov
mov
cmpsb
jg
aam
repnz
lahf
lahf
mov
scas
inc
push
jnp
outsl
mov
dec
cwtl
scas
stos
outsl
and
nop
push
out
inc
ds
cltd
enter
adc
lret
js
adc
push
pop
out
icebp
lds
jno
hlt
testb
dec
pop
in
push
sbb
jl
ljmp
fcmovb
jg
incb
pop
dec
clc
mov
add
or
in
jbe
fwait
dec
mov
lahf
aam
mov
lods
adc
out
jo
scas
pop
jmp
push
dec
adc
sbb
fwait
cmp
ljmp
mov
inc
xchg
xlat
in
frstor
pushf
mov
imul
jo
cmpsb
jle
push
add
enter
imul
bound
xor
jo
sarl
test
mov
jp
pop
fildll
dec
inc
ja
sbb
inc
fsubl
adc
cmp
in
sahf
inc
in
into
mov
insb
fs
cmp
stc
xor
cmp
imul
shr
loopne
pushf
pop
mov
jge
sub
fldenv
mov
imul
loop
inc
enter
cs
jecxz
repnz
mov
xchg
add
push
inc
rcll
inc
pushf
xor
pop
loopne
push
mov
enter
imul
add
ret
mov
iret
inc
mov
sbb
daa
push
xlat
in
lret
push
and
mov
cmpsl
pushl
sahf
jbe
add
mov
mov
stos
enter
pop
jb
or
xor
mov
xor
sahf
jnp
jbe
orl
sahf
xchg
sbb
lcall
int3
bound
cmp
pop
sbb
pop
aaa
mov
jb
stc
hlt
sti
outsl
or
mov
or
lea
jecxz
or
cmp
xor
ret
loopne
lock
loope
sbb
or
sub
sbb
and
popa
pop
fwait
std
scas
mov
cli
push
pusha
add
mov
pop
mov
sub
mov
cwtl
sbb
sub
jge
pop
xor
aam
pusha
neg
add
adc
lods
cmp
jle
andb
jecxz
lods
cmp
pop
or
in
pop
sti
addr16
xchg
aam
cmc
xor
stos
pop
rorb
inc
xor
cmp
mov
lea
and
xor
in
push
loopne
jp
mov
fwait
add
imul
add
or
fiaddl
cmp
aam
xchg
outsl
jmp
testl
push
scas
xchg
jno
jle
dec
lea
aaa
and
cmp
scas
cs
jb
mov
out
lret
hlt
or
pop
adc
xchg
and
rcrb
push
or
arpl
push
out
mov
mov
dec
or
out
fnstenv
xor
out
adc
inc
or
lock
ds
in
fstpl
sbb
movsb
cld
push
pop
mov
imul
leave
inc
loop
fdivs
mov
xchg
push
rcr
mov
add
jbe
in
cmp
dec
inc
xchg
and
int
mov
dec
daa
sub
test
push
and
arpl
jp
sbb
mov
dec
push
cwtl
mov
jecxz
sti
das
adc
cli
psllq
xchg
xchg
lods
mov
add
loope
dec
roll
sub
lahf
pop
push
arpl
mov
cmp
mov
in
les
mov
add
dec
popa
dec
out
mov
sub
bound
cmpsb
xchg
test
ja
fwait
or
stc
adc
nop
dec
cmp
loope
mov
in
int3
or
adc
ret
icebp
cmp
jmp
ret
les
dec
fs
aam
mov
ss
xor
jb
pop
ror
cmpsb
sbb
sub
dec
mov
ret
and
mov
mov
jle
lock
lea
cmpsl
mov
pushl
add
idivb
punpckhbw
push
out
xchg
push
lock
sti
mov
pop
call
inc
jo
xchg
or
sub
xchg
mov
jno
shrb
je
cld
push
in
inc
lods
pushf
imul
int3
mov
into
mov
push
mov
push
pop
ror
stc
addr16
call
or
inc
jge
add
clc
clc
inc
add
bound
testb
fnsave
popa
jne
sbb
std
cmc
fwait
sbb
repnz
les
jne
mul
sub
das
sub
or
andl
je
loop
mov
xor
pop
mov
popf
mov
cmpb
jo
push
nop
in
loop
loop
pop
xchg
fdivrs
dec
pop
inc
mov
dec
mov
add
pushf
stos
pop
jo
loopne
jge
push
cmp
jb
sub
stc
add
xchg
in
lods
xchg
add
adc
lods
push
jge
fcomps
sbb
test
clc
sahf
and
cmp
aas
inc
repz
or
fbld
lret
jg
leave
push
leave
gs
testl
cld
in
jne
testb
cmp
dec
sub
inc
test
push
jl
xchg
insb
leave
adc
out
push
fistps
pop
add
icebp
mov
mov
int
ret
insl
cmp
scas
aam
pop
push
jnp
adc
jmp
int
lret
outsb
mov
insb
mov
adc
jne
push
cmpsl
andb
fs
pop
daa
and
and
int
jb
push
jl
nop
xchg
or
iret
pop
sti
jle
jg
xchg
push
mov
or
in
push
mov
jmp
jmp
mov
imul
lret
loop
jp
ds
dec
and
sbb
adc
lcall
aas
xchg
push
add
out
or
and
lds
sub
fldl
sahf
jo
shlb
das
pop
pop
pop
popa
adcl
push
stc
inc
pop
imul
inc
mov
jne
into
in
in
scas
push
lcall
test
and
dec
leave
xchg
mov
sti
fdiv
inc
inc
lret
insl
cmc
or
sub
cltd
addr16
bound
pop
leave
and
js
push
xchg
push
sbb
cmp
dec
pop
cmpsl
cwtl
add
scas
xchg
dec
sbb
stc
sarl
adc
pop
xor
and
push
stc
fists
push
dec
pop
imul
test
mov
pushf
pop
test
dec
xchg
mov
sub
out
push
inc
mov
inc
jg
scas
daa
add
popa
mov
in
mov
pop
mov
cmp
sub
imul
pop
cmpsl
and
aaa
add
and
adc
pusha
or
imul
ret
mov
ret
mov
jnp
rcll
ja
cmpsb
jnp
inc
cld
and
cli
pop
or
mov
stos
lods
outsl
in
jb
xchg
rcrl
aad
xchg
test
shr
imul
repz
je
push
shll
subb
push
jmp
jge
mov
repz
addl
imul
clc
push
stc
lahf
lcall
pop
push
in
mov
movsl
mov
add
out
or
adc
inc
jnp
pop
ss
or
int
les
je
push
xchg
push
outsl
lret
xchg
mov
stc
ret
jmp
xor
popa
insb
jnp
sbb
sahf
inc
insl
hlt
fidivs
push
cmpsl
aaa
fnstsw
ficoml
add
pop
flds
mov
mov
test
outsl
xchg
cmpsb
int
daa
push
adc
inc
aad
ss
lods
or
pushf
sbb
mov
push
fadds
mull
push
lods
push
push
adcb
jne
scas
lret
repnz
subl
adc
jne
sub
aas
add
and
hlt
negb
shl
jne
inc
sub
mov
add
jno
lret
dec
movsl
sti
dec
dec
push
push
mov
nop
add
mov
sub
lret
inc
jg
lods
dec
hlt
jecxz
jmpw
std
push
pop
lahf
mov
fstps
cmp
int3
mov
jmp
daa
cltd
push
out
inc
mov
mov
adc
mov
or
mov
arpl
aas
dec
jb
jle
mov
lret
negb
pop
mov
out
into
jnp
xor
sub
or
sub
push
dec
rcr
jmp
cmc
jo
and
dec
or
mov
mov
pushf
fbstp
xor
insb
xorl
mov
icebp
sti
mov
add
mov
testl
andb
cmpsl
mov
jnp
dec
mov
cmc
cmc
sar
fs
rorb
jno
mov
xchg
sbb
cmc
imul
mov
bound
dec
in
xor
ds
cmp
mov
inc
push
inc
lahf
test
test
enter
aam
jge
xor
stos
and
mov
movsb
mov
jge
outsb
sub
push
daa
cmp
xchg
xchg
jp
xor
inc
mov
clc
dec
mov
inc
cltd
out
inc
mov
jb
es
pop
add
in
dec
aaa
xor
jmp
push
js
imul
pushf
jle
pop
sub
adc
push
pop
mov
jne
lock
fdivrl
add
cmp
mov
adc
stc
or
mov
mov
fcomp
cs
repz
icebp
iret
cmp
and
std
jns
jmp
jmp
inc
notl
or
sbb
push
xchg
cmp
add
int
push
insl
jbe
cwtl
int3
lea
nop
sarb
mov
mov
push
cmp
push
test
mov
call
mov
lret
icebp
xchg
or
pusha
cs
out
fiadds
sbb
aam
mov
inc
fsubrs
xchg
push
add
lods
lret
out
aaa
popa
cmp
push
or
and
jg
repnz
xchg
outsl
notl
push
idivl
pop
xlat
std
pop
shrl
jo
cmp
jae
mov
lret
push
clc
les
sub
xor
std
idivl
aaa
cmp
movsl
test
add
stos
push
add
xchg
jne
frstor
pushf
pop
or
pop
movsl
pop
leave
pop
test
into
loope
test
cmpsl
pop
mov
cli
fsubrs
push
push
inc
out
arpl
je
xor
jp
into
leave
movsl
jae
xchg
mull
mov
jo
and
ljmp
fcompl
or
mov
repnz
jle
std
cmp
sti
rcr
das
pop
cwtl
rorb
cmc
cmpsl
ljmpw
clc
dec
ret
aas
jne
data16
sub
jae
daa
sub
xchg
push
add
popf
cmp
int
imul
into
test
add
lret
mov
in
add
dec
jp
outsb
iret
test
mov
push
cmp
dec
pusha
pop
jbe
in
cmp
inc
cld
pop
mov
int
mov
enter
aas
jge
pop
xchg
std
inc
cmpsl
push
jbe
nop
xchg
lea
rcl
cltd
dec
insb
in
jle
push
cs
mov
popa
lret
dec
xor
mov
mov
push
cltd
sbb
std
sub
mov
ficomps
xor
pop
sbb
icebp
out
sub
insb
add
pop
cmp
or
mov
lret
pop
leave
adc
repz
sub
and
jb
jo
nop
jbe
mov
ret
mov
jmp
arpl
enter
mov
into
arpl
push
in
cli
push
xor
mov
pop
ljmp
lock
xorl
jno
stc
adc
or
push
ja
dec
lods
sub
vmovntps
dec
bound
inc
cmp
aas
and
rolb
andl
aaa
adcl
mov
pop
xchg
lahf
lahf
xor
fcoms
rorl
mov
pop
ret
cli
jmp
push
out
mov
fisttpll
mov
mov
mov
leave
push
xchg
xchg
std
mov
and
repnz
cmpsb
dec
pop
pusha
mov
pushl
lcall
sar
pop
adcl
jge
stos
cmc
out
sbbl
lret
adc
insl
sub
rorb
mov
insb
movsl
xor
fildl
adc
mov
push
sbb
sub
repnz
call
fs
lret
pop
push
imul
mov
xchg
push
arpl
fstp
repz
add
outsl
jg
ret
out
mov
icebp
push
push
sbb
pop
cli
fwait
inc
fildll
mov
add
push
inc
jecxz
adc
add
sbb
mov
movsb
paddd
xor
inc
mov
daa
sahf
cmc
add
clc
mov
or
aas
mov
xchg
xor
test
mov
sub
andl
int3
bound
push
push
inc
lcall
int
sbb
push
inc
push
inc
push
cmp
clc
xchg
mov
xchg
jl
aaa
imul
jae
gs
ds
in
mov
stos
jp
addl
call
cmp
pop
imul
mov
repz
out
mov
mov
cmp
jae
mov
and
insl
jle
jno
lds
sbb
popa
sub
lods
enter
ljmp
out
and
test
xor
pop
outsl
mov
test
fdivrl
popl
and
lahf
fs
fwait
lods
movaps
push
mov
int3
cmpsb
mov
iret
adc
aad
call
cs
mov
mov
fsqrt
mov
mov
xorl
xor
mov
and
xor
rcrl
sub
ja
enter
jne
clc
cmp
dec
aad
add
xor
flds
sub
adc
in
cmpsl
mov
push
lods
popa
iret
into
out
push
mov
jb
adcl
or
sbb
popl
jbe
xorl
jl
test
aaa
jae
mov
push
xor
dec
mov
cmp
ret
aas
cmp
add
mov
push
adc
stos
cmp
add
fisubl
mov
pop
aad
jnp
in
sbb
enter
ds
push
addb
inc
cmpsl
je,pt
fldt
add
lods
aam
movlhps
pop
les
int
xlat
sahf
jmp
daa
mov
idiv
repz
in
rolb
sub
push
sbb
pop
loopne
add
sub
ja
fcoml
xor
daa
xchg
or
sub
cmp
cmc
mov
mov
jg
gs
push
lods
fnsave
in
push
jo
mov
dec
aad
fs
scas
jno
fsts
imul
into
mov
jecxz
hlt
ficoms
stos
lret
xchg
pop
cmp
inc
cmp
shll
jbe
fstl
std
rcll
sbb
dec
pop
jg
add
fists
stos
loope
shrb
and
lds
fisubl
js
cmp
jnp
or
arpl
lret
jl
cmc
or
shll
add
push
cld
and
xchg
push
xor
pusha
jecxz
arpl
mov
dec
inc
jnp
push
dec
mov
mov
add
mov
sbb
movsl
cmp
fld
push
movsb
in
jge
mov
mov
repnz
push
sub
push
and
pause
add
xor
or
andl
popa
jl
in
or
lods
add
mov
pop
fmuls
insb
push
add
add
mov
addr16
mov
jnp
mov
inc
xor
test
and
fidivrs
enter
dec
sub
fcom
pop
push
and
jo
popf
mov
and
jb
sub
outsl
xchg
scas
push
icebp
mov
sub
xchg
cmp
dec
cmpsb
jo
xor
movl
jp
pushf
icebp
dec
jle
mov
and
mov
js
and
mov
fsubrs
lds
dec
xlat
fwait
push
ljmp
jb
int
shll
jbe
in
shr
rcrb
jbe
ret
movsb
push
pop
xor
adc
cltd
dec
mov
push
fnstsw
repnz
push
jns
inc
mov
jmp
sbb
test
xchg
mov
mov
ljmp
or
cs
sbb
mov
js
push
mov
add
push
hlt
inc
adc
scas
test
jne
push
jb
repz
out
xchg
push
mov
outsb
cmpsl
push
ljmp
mov
ss
xor
mov
clc
js
jmp
mov
jg
rcrb
movsl
das
sbb
mov
and
jae
addr16
int3
jb
mov
orl
scas
or
xchg
mov
fidivrl
lods
sbb
loopne,pn
mov
jle
xchg
jbe
inc
dec
jbe
dec
ror
jne
jg
arpl
sti
pop
mov
repnz
es
add
jl
and
dec
jae
mov
inc
test
xchg
fisubrl
and
pop
in
cmc
ljmp
shl
ds
mov
xchg
popf
mov
into
clc
mov
hlt
xchg
xlat
test
dec
or
cmp
cmp
out
jp
das
loope
enter
lea
add
movl
pop
add
push
shll
lret
inc
std
cld
cmp
fwait
shll
or
adc
jnp
pop
leave
cmp
loope
rcll
out
dec
je
stos
mov
pop
add
or
sub
cltd
lods
and
fdiv
lcall
push
add
dec
or
popa
test
daa
shlb
xor
arpl
xchg
and
mov
jp
dec
push
out
mov
mov
sbb
sub
ss
in
push
ds
in
movsb
mov
rcll
fstps
jecxz
jbe
xchg
adc
xchg
pushf
mov
rolb
push
cs
xor
adc
dec
jecxz
xor
dec
push
push
xchg
cmp
movsl
dec
pop
sbb
xor
dec
sub
add
jb
push
inc
cmp
les
sahf
scas
adc
sub
dec
xor
xchg
outsb
xchg
add
bound
cwtl
dec
dec
mov
xchg
sti
and
push
lods
sbbb
ss
inc
shrb
mov
testb
inc
pushf
jb
cmp
lcall
cmp
mov
in
pop
jg
enter
mov
mov
imul
int3
cld
hlt
xchg
add
xchg
inc
inc
mov
add
out
pop
pop
or
shlb
mov
aam
leave
aad
mov
lods
std
fldcw
or
lea
nop
addr16
js
fisttps
inc
adc
xor
lret
add
cmp
mov
scas
push
adc
and
mov
pop
aam
xor
daa
dec
sbb
loopne
add
pop
addr16
loope
out
loop
jle
loopne
cmc
dec
inc
dec
dec
fcmovu
pop
jmp
dec
jne
sbb
gs
jnp
xor
daa
into
fdivr
sub
push
push
pop
push
sahf
cmpb
mov
call
out
test
stos
lods
std
loopne
decl
hlt
aaa
insl
das
iret
inc
out
jle
sbb
ss
stc
fcom
jge
dec
mov
iret
push
lcall
xchg
mov
push
sbbl
dec
push
inc
sub
xlat
mov
mov
into
jmp
or
xorl
push
jbe
orl
jp
add
add
shrb
rclb
push
fnstcw
fnstenv
sahf
add
mov
add
dec
andl
lahf
sub
xchg
fldenv
out
add
rclb
xchg
cmp
adc
dec
sti
jno
mov
cmpsb
scas
add
bound
bnd
aaa
cld
mov
cld
adc
jo
add
popf
repz
pop
push
pop
mov
std
or
pop
pop
inc
jne
and
and
pop
test
xchg
pop
mov
das
repnz
movsl
call
sarl
push
dec
inc
jnp
imul
nop
arpl
xchg
inc
cmp
cltd
jecxz
ret
cmp
cmp
mov
loop
cli
sub
pop
testl
xchg
imul
xor
aas
lret
add
call
adc
pop
dec
mov
adc
pop
pop
mov
or
fnstcw
cmpsb
pop
stos
js
repz
imul
stc
test
call
imulb
loopne
fidivs
or
test
repnz
xchg
outsl
lock
clc
inc
fnstsw
sub
movsb
mov
icebp
sbb
mov
popf
mov
sahf
and
and
test
mov
ss
fsubs
aam
out
test
mov
andnps
shrb
push
mov
fmull
leave
stos
imul
lock
push
rclb
cmp
cmp
cmp
out
push
sub
nop
sub
sub
jne
in
push
pop
sub
or
pop
jbe
mov
adc
pop
mov
xor
jae
inc
mov
imul
mov
ljmp
dec
popa
xchg
sbb
lret
push
fucomi
cld
out
or
and
cmpsl
fbld
or
je
lret
jne
jne
adc
sbb
sub
dec
into
dec
int
lahf
xorl
movsl
jns
push
push
xor
cmpsl
in
xchg
scas
fs
mov
ret
xchg
inc
jecxz
mov
ljmp
xchg
subl
add
add
mov
fcoms
xchg
add
push
imul
int
add
repnz
xchg
outsb
xchg
fsubs
lea
or
sbb
adcb
lea
adc
popa
aas
sbb
or
adc
sbb
das
add
sub
cli
add
js
mov
mov
lea
sbb
mov
negl
lret
inc
mov
ret
jle
jo
fsubs
sub
mov
sub
push
decb
add
insl
jae
orl
push
roll
sbb
std
lds
dec
idivl
movsb
and
jmp
leave
jp
sub
cmp
add
dec
addl
dec
adc
push
jbe
pushf
adc
mov
jns
sub
add
mov
fisttpll
mov
mov
dec
sub
xor
pop
les
and
xor
dec
scas
push
sbb
or
push
add
or
fidivrl
loop
xor
push
pop
xchg
insb
out
lahf
mov
jmp
xchg
inc
in
adc
jge
dec
mov
jae
push
pop
rcrl
mull
popf
and
cmp
lcall
incl
cmpsb
rcrl
jne
jl
add
iret
js
or
xchg
cmp
adc
mov
mov
inc
stc
inc
bound
jo
dec
in
mov
jmp
push
repz
es
or
rorl
jno
sbb
xchg
dec
jle
jbe
mov
aas
nop
mov
sbb
out
in
out
add
jo
sub
mov
scas
in
cmp
or
jo
xchg
daa
dec
dec
mov
icebp
lret
cli
lods
jae
pop
rcrb
cmp
adcb
ljmp
xor
test
adc
pop
xor
dec
inc
into
pop
push
pop
push
mov
out
xchg
sub
adc
jb
call
lret
pop
pop
in
inc
scas
mov
lods
aaa
lret
cmp
dec
daa
mov
mov
dec
ss
popf
andb
in
xchg
lcall
ds
sbb
repz
out
mov
pop
leave
and
addb
and
xor
xchg
gs
pusha
in
sbb
loope
mov
icebp
adcb
ja
jo
adc
fildl
cmc
data16
inc
and
cmp
or
test
enter
dec
mov
mov
xor
jae
sub
jne
sarb
add
imul
lds
lcall
orl
jo
ret
sti
dec
jecxz
imul
push
mov
mov
sub
into
lods
mov
cmp
xchg
aam
ret
test
fldt
push
mov
sub
mov
mov
xchg
pop
sub
xchg
xchg
push
mov
add
jae
push
jmp
sbb
movsl
mov
mov
scas
lcall
and
xchg
pop
aad
in
dec
mov
gs
lret
scas
out
ret
xchg
or
out
pop
rolb
lret
jbe
pop
iret
fisttpl
mov
mov
sub
icebp
and
fdivs
aas
mov
inc
inc
call
pop
sub
cmp
adc
cwtl
ffree
leave
cmpl
cmp
jne
mov
out
jae
fiadds
sub
xchg
and
cmpsb
rcr
or
loope
lcall
push
out
xchg
insl
add
in
cmp
shrl
push
mov
stos
add
mov
jb
es
pop
or
shl
cmp
fwait
out
adc
sbb
in
cwtl
mov
rorl
cmc
in
pop
and
fsubs
jg
les
insl
push
mov
cmp
jecxz
and
dec
push
and
inc
lods
shll
enter
ret
cwtl
mov
dec
in
fmuls
dec
add
fs
cmc
push
add
jle
add
icebp
jle
pop
add
inc
push
sbb
pop
cmp
dec
cmp
rorl
jecxz
push
dec
fiaddl
xor
mov
adc
jae
leave
mov
mov
push
pop
notb
das
xacquire
movsl
out
dec
fistl
jp
fcoms
pop
test
add
and
movsb
push
dec
sub
fisubl
test
adc
push
sbb
cs
dec
or
data16
jne
jae
or
inc
push
scas
clc
adc
fisubrs
jmp
enter
mov
push
mov
jp
out
mov
cmp
mov
jne
xchg
out
cmp
movsl
push
xor
aas
dec
xchg
inc
jb
sub
fisubrs
and
mov
xor
test
ret
add
imul
loope
in
cmc
cmp
xchg
dec
sti
sub
int
mov
jecxz
jns
fbld
repz
sbb
inc
sbb
push
out
jne
adc
fsubs
lock
add
ret
mov
mov
fwait
mov
clc
data16
cltd
inc
xchg
pop
aad
fsubrl
mov
push
pop
cltd
imul
dec
gs
sub
add
ss
sub
pop
sub
xchg
sarl
xchg
test
mov
rorl
cmp
or
loop
into
mov
les
int
lea
xchg
fstps
popf
les
jecxz
mov
insb
lcall
lock
out
cmp
sti
ret
push
stc
mov
cmp
xchg
cli
mov
xor
outsb
sbb
call
dec
push
aaa
imul
pop
cwtl
fisubs
or
push
jp
dec
mov
jl
sbb
sub
xchg
adc
xor
popa
jnp
mov
pop
ror
shlb
push
aas
sarl
pop
pop
xor
xor
sub
xor
push
dec
add
iret
out
mov
xchg
sbb
mov
pop
mov
in
repz
rclb
imul
push
add
jbe
negb
movsl
test
add
xor
lret
imul
sub
jg
addr16
inc
fcmove
fisttpll
rcll
push
xor
mov
or
xlat
loop
sbb
mov
mov
mov
out
lock
jg
shl
mov
arpl
xchg
mov
mov
mov
push
cmp
and
xchg
pop
jno
push
add
inc
pop
mov
sbb
xor
cmpsl
stos
inc
xor
jp
or
sbb
lahf
ret
xlat
jns
imul
jae
lret
or
aas
aaa
mov
add
mov
xchg
xchg
dec
in
push
mov
das
mov
jae
dec
xchg
push
jae
jo
xor
fcoml
pushf
rclb
leave
cli
pop
pop
push
add
cmp
icebp
mov
test
pop
shr
ret
xchg
cmp
das
cwtl
popf
and
pop
fdivl
fbstp
jb
pop
mov
and
cld
aas
cltd
cmp
int3
dec
xor
nop
fiaddl
add
or
xchg
or
jmp
movsl
enter
fnsave
fbstp
jbe
cmpsl
mov
dec
out
sub
or
fistps
pop
push
pop
pushf
adc
push
fs
insb
bound
dec
pop
push
pop
movsl
or
lods
xor
das
int
and
popf
pop
mov
fdivp
sbb
fisubl
das
adc
xchg
mov
and
nop
clc
pop
add
movsb
or
add
imul
push
test
push
inc
xor
add
lock
outsb
icebp
ljmp
mov
jp
or
ljmp
imul
dec
sub
fsts
mov
cld
mov
push
xchg
jns
fsubs
inc
sbb
lods
in
inc
xor
call
movsb
test
xor
pop
add
je
xchg
negb
lea
or
mov
in
pushf
xchg
lods
scas
ret
cs
repnz
cmp
mov
cmp
aas
adc
xchg
adc
push
mov
xchg
mov
jae
dec
and
xor
pop
mov
dec
idivl
shrb
rcr
test
dec
xor
jl
and
mov
adc
dec
in
sahf
pop
mov
fsubrl
or
xchg
push
and
inc
leave
das
movsl
loope,pn
xor
sbb
mov
xchg
cmp
mov
pop
adc
xor
xchg
jecxz
push
cmp
jge
hlt
sarb
xchg
mov
pop
dec
dec
mov
fldt
and
mov
or
iret
pop
push
add
lret
dec
arpl
adc
mov
xlat
cmp
pop
mov
jae
scas
mov
and
mov
fldt
or
pop
fxch
fbstp
outsb
push
rcrb
dec
lea
xor
add
lods
pop
ret
ss
scas
dec
ss
add
data16
mov
ds
fnstsw
mov
add
dec
out
mov
xchg
shl
push
fistl
xor
push
pusha
add
rorl
inc
paddusw
in
mov
test
jb
mov
arpl
sbb
sub
int
loop
mov
add
mov
loopne
outsb
imul
stc
adc
pop
sub
lret
cmpsl
ret
cmc
dec
dec
enter
enter
ficomps
into
push
lcall
mov
call
jns
aam
jbe
ss
lock
repnz
cmp
in
pop
lds
xchg
fstps
pinsrw
dec
mov
outsb
repz
inc
dec
addl
inc
aad
xor
andl
outsl
or
fmull
out
push
je
sbb
pushf
push
test
stos
pop
aam
pop
pushf
lcall
je
int
out
mov
and
lcall
push
jmp
je
mov
out
fisttpll
iret
adc
adc
lea
or
or
arpl
lods
mov
push
jbe
inc
and
ss
cld
aam
fadds
push
stc
popf
cwtl
mov
jb
push
dec
je
mov
dec
sub
xchg
cwtl
push
lret
fwait
cmc
sbb
hlt
ja
inc
in
xor
lea
lods
inc
out
cmp
lret
and
popa
mov
or
lcall
bound
pusha
popa
and
jge
inc
push
pop
ds
fdivrp
fnstcw
fiadds
std
fs
ja
mov
push
and
sub
xor
loope
xchg
fildl
pop
lea
aad
lods
stos
rorl
gs
ret
inc
adc
lods
dec
push
xchg
push
or
outsl
call
ja
shl
dec
loop
aas
sbb
mov
xor
mov
je
cld
mov
das
mov
adc
xchg
pause
dec
insb
mov
or
sbb
push
lds
mov
mov
pop
and
add
lea
pop
push
adc
mov
push
and
jmp
jle
xor
mov
cmp
xchg
icebp
xor
int
call
inc
daa
mov
int
jnp
xchg
nop
cmpsb
rolb
sarb
cmp
shrw
cltd
and
cmp
fxch
adc
subl
adc
dec
mov
das
cmp
adc
sbb
lds
sub
xor
test
push
mov
fucomi
jno
out
decb
sub
test
inc
mov
pop
push
push
and
outsl
jno
mov
xchg
mov
pop
push
mov
pop
xlat
pop
cmp
add
into
pop
test
sbb
jp
dec
icebp
sti
mov
pushf
int
sarl
stos
loop
pop
js
xor
mov
test
std
js
inc
in
xor
mov
sub
or
push
mov
sbb
pop
aam
xchg
scas
push
popa
mov
sub
mov
xor
push
jno
sub
leave
scas
xchg
addr16
mov
les
xchg
xchg
pop
mov
arpl
mov
icebp
cmp
rorl
das
fdivrs
fwait
jg
loop
iret
enter
cld
pop
lcall
mov
push
dec
pop
sub
cmp
sbb
icebp
inc
push
adc
xor
arpl
mov
adc
and
hlt
int
lret
loop
add
cmp
xor
scas
push
and
out
test
cmpsl
and
mov
push
inc
push
add
pop
call
xor
lret
les
nop
pop
adc
stos
mov
sbb
lret
pop
clc
movsb
pop
sbb
xor
movsb
dec
jo
push
xchg
int
enter
lcall
fcmovnu
int
loope
cmp
es
or
mov
mov
imul
push
xchg
mov
adcb
xchg
daa
andl
inc
orl
inc
mov
and
leave
lahf
out
mov
add
push
sbb
pop
std
jnp
movsl
outsl
cmp
es
dec
fwait
push
pop
insb
mov
jnp
in
xor
pop
mov
ret
ret
jo
and
push
pop
jle
loop
dec
add
idiv
pop
mov
pop
or
in
jne
fnstcw
in
jg
aam
jl
mov
movsl
test
imul
jo
pop
cmp
and
gs
xor
jno
lods
ret
mov
pop
adc
push
movsb
mov
out
pop
scas
jb
push
rcll
xchg
out
mov
inc
in
loop
and
and
outsl
not
outsl
or
xchg
push
push
cmp
out
pop
std
mov
fcomp
sub
cwtl
and
or
cltd
cmp
sbb
cmp
pop
add
popa
push
mov
mov
mov
rcrb
into
aas
pop
jge
lret
lahf
push
into
int3
and
iret
jbe
loop
insl
cltd
pop
mull
outsb
pop
jnp
jae
in
sub
push
ss
cmc
push
shrl
movb
push
xchg
std
pop
into
jl
pop
mov
sub
jg
negb
mov
ss
fs
aam
xor
mov
jns
adcb
push
cld
jo
out
dec
fnstcw
or
mov
dec
push
or
imul
dec
imul
lahf
xchg
sbb
mov
sub
rorl
push
stc
and
pop
or
in
jecxz
les
stc
imul
xchg
mov
inc
xchg
negb
xchg
scas
inc
cmp
aad
jle
mov
insb
loopne
xor
ja
push
cmp
std
rclb
cld
aad
ljmp
scas
test
fidivl
xchg
jl
or
sub
pop
mov
dec
popa
je
dec
clc
test
xchg
rol
iret
mov
jmp
pop
pop
movsb
sbb
sbb
jo
pop
pop
xor
jmp
ret
and
adc
rorl
or
stos
sbb
lds
mov
fnstsw
xchg
mov
in
out
jno
cmp
inc
xor
mov
lock
loopne
negb
xchg
xchg
jg
aaa
mov
sahf
sbb
lret
rcrl
mov
jbe
call
in
cwtl
cmp
mov
push
fnstcw
std
xchg
sub
stos
rol
movsl
mov
fisubs
aad
or
inc
jle
xchg
jnp
cwtl
addr16
and
sbb
shll
dec
repnz
scas
jno
cmp
popf
pop
or
cltd
mov
cwtl
addl
gs
icebp
stos
fcmove
xor
mov
pop
and
dec
lods
shll
cs
and
popf
ss
jecxz
push
aaa
cmp
sahf
sbbb
testl
ja
shl
mov
cmc
movb
sub
jns
sub
fstpl
pushl
inc
aad
xchg
lret
sbb
fstpt
lret
jp
aas
lods
mov
aad
mov
or
jae
sub
xchg
shlb
adc
dec
xor
push
pop
adc
push
rol
fldl
lods
pop
mov
dec
mov
xor
jbe
clc
pop
push
mov
test
fimull
sbb
mov
jns
and
cmp
je
loop
adc
or
roll
dec
and
mov
adcl
mov
aam
cmp
xchg
cmc
subb
in
xor
push
test
xchg
jo
add
arpl
loopne
repnz
lcall
pusha
js
inc
dec
xchg
mov
jle
mov
lds
stc
inc
and
push
jbe
out
add
cltd
loope
rcll
jmp
out
xor
sbb
je
sarl
add
sbb
scas
outsl
inc
cwtl
or
pop
scas
inc
dec
or
sub
mov
clc
ss
stos
adc
jle
xchg
ds
xor
cmp
pop
sahf
out
and
lret
or
nop
xor
jne
xchg
jg
addr16
imul
andnps
push
insb
cwtl
and
jb
adc
or
add
xchg
mov
dec
add
test
inc
jns
inc
xor
mov
and
xchg
je
inc
fimuls
mov
or
lret
ret
mov
xchg
movsl
nop
xor
les
fdivl
jo
adc
fbld
cmc
xchg
sub
cli
add
xchg
rorl
jnp
out
jnp
pop
jge
popa
insl
pop
push
loopne
lcall
mov
push
xchg
jl
ds
mov
pop
call
jl
and
dec
rorl
push
and
lret
repnz
out
xchg
or
sbb
fwait
xchg
stos
adc
add
mov
loope
bound
add
andl
dec
repz
pushf
jmp
das
rcrl
fmul
xchg
push
scas
dec
and
push
xchg
inc
push
jmp
pop
and
sbb
in
mov
lds
adcl
cld
test
lods
popf
jecxz
pop
jmp
push
dec
aad
jmp
paddsb
cmp
inc
push
pop
out
or
xlat
out
les
call
jmp
pusha
int
xlat
sbb
jl
mov
inc
sbb
push
xchg
popa
push
decl
mov
ret
push
aas
cli
sbb
ret
repnz
mov
cli
pushf
push
lods
sti
call
mov
std
mov
inc
in
sbb
ret
lcall
mov
leave
addr16
stos
sarl
sbb
jmp
fisttpll
sbb
cltd
mov
adc
sbb
cs
inc
mov
push
adc
aam
mov
rclb
incb
inc
insb
popa
push
bound
das
jmp
cmpsb
pop
inc
daa
test
push
test
jae
jl
imul
dec
jl
rorl
mov
add
mov
negl
xchg
ljmp
outsl
in
test
pop
xchg
adc
iret
outsb
pop
inc
jecxz
mov
push
stos
add
xchg
mov
divl
mov
fwait
cwtl
sub
adc
movsl
in
sub
fists
mov
insb
lods
xchg
jno
push
mov
xor
lods
stos
mov
lock
loop
push
fisttps
lret
push
mov
test
or
pop
icebp
or
cmpsb
mov
gs
mov
or
mov
nop
sub
cmc
roll
ret
sub
push
ss
cmp
insb
mov
mov
push
cmp
xchg
xchg
xor
es
stos
sub
jp
jge
push
outsl
inc
jns
push
xchg
jbe
out
rolb
jecxz
outsb
mov
mov
call
lods
jg
mov
mov
loop
in
test
push
scas
cs
dec
push
jp
pop
movsb
add
or
in
ret
pop
jl,pn
call
adc
in
cmp
xor
iret
sbb
jle
je
jo
add
cmpsl
pop
mov
sub
sub
lret
cltd
cmp
pop
outsb
dec
add
and
imul
ret
outsl
pop
les
stc
cmp
xchg
aaa
lods
lahf
mov
dec
adc
xchg
lock
mov
rorl
inc
pop
das
mov
imul
pushf
dec
xor
cmp
fisttpll
lcall
das
push
push
aam
clc
lds
mov
xor
adc
sbb
jge
and
or
push
inc
cs
and
repz
or
adc
pop
push
nop
fimuls
adc
bound
or
inc
inc
mov
lds
xor
dec
js
mov
loope
out
and
pop
pop
sbb
vpsrlq
ja
lret
xor
aad
mov
adc
adcb
adc
and
ja
out
mov
call
cmp
xchg
dec
jbe
pop
decl
dec
das
lea
arpl
and
ljmp
xor
out
lret
pop
sub
mov
mov
sub
cmp
fucomp
sbb
cmc
adc
icebp
insl
adc
je
out
outsl
loope
ljmp
sub
shll
mov
pop
mov
mov
ret
in
add
test
test
enter
outsl
pop
shl
and
decl
and
and
ret
mov
daa
lret
inc
das
rorb
sahf
push
jle
js
jg
mov
jl
cmp
lods
or
notl
or
sub
mov
out
aam
xchg
jb
xchg
stc
js
movsb
add
push
aas
shrb
cltd
pop
cmpsl
outsb
call
push
and
xchg
mov
and
adc
gs
xlat
or
inc
and
outsl
push
jecxz
pushw
mov
pop
jmp
cwtl
xchg
or
mov
mov
fidivs
mov
xchg
fidivl
in
cmp
push
pop
inc
ret
orl
hlt
insl
cmp
dec
jg
sub
lea
jae
cmp
jae
dec
enter
jns
js
adc
add
out
loop
pop
fldt
push
sbb
fdivl
repnz
loop
lds
lea
call
add
movsl
scas
lds
je
fsub
aad
inc
sbb
adc
pusha
cmp
xchg
inc
push
pop
cmc
filds
push
fiadds
or
out
jae
das
mov
ret
mov
roll
leave
mov
xchg
xor
and
enter
jbe
xor
inc
shrl
icebp
inc
cmpl
or
aad
rcll
mov
xlat
test
cmpsb
mov
jo
mov
movsl
push
add
cmp
inc
shrl
lahf
dec
xchg
sub
xor
inc
mov
shrl
cs
enter
push
sbb
lods
ljmp
leave
dec
mov
pop
add
pop
push
out
imul
repz
in
sbb
mov
gs
daa
fimuls
dec
xor
jbe
dec
or
enter
adc
repnz
fcompl
es
filds
sbb
rclb
mov
mov
mov
push
ss
std
dec
fists
xchg
outsb
mov
jb
ret
mov
mov
outsb
jae
stos
dec
inc
inc
fwait
test
pop
cmp
out
xchg
movsl
sub
add
xchg
fnstcw
push
sub
sbb
idivb
xor
or
insl
iret
dec
xchg
mov
stos
jecxz
out
std
imul
cld
mov
pop
in
insb
mov
adc
xor
sub
sti
xor
sahf
mov
ficomps
xchg
movsl
nop
inc
bound
push
jp
xchg
inc
sbb
push
lret
movb
lcall
cli
notl
test
test
push
outsb
aam
or
push
dec
or
inc
jp
pop
in
outsl
or
leave
daa
or
and
mov
push
xchg
aad
add
or
insb
fnstenv
mov
push
push
js
fwait
push
into
add
ret
sub
or
jmp
insl
dec
rorb
mov
or
sbb
xchg
rorl
push
mov
dec
mov
stos
rolb
push
arpl
fwait
and
jnp
and
insb
call
and
test
leave
xor
aad
push
jle
pop
push
push
mov
mov
jge
js
aam
add
gs
inc
mov
cmp
cmp
cltd
rcrb
inc
pop
lcall
pop
dec
jp
je
outsb
push
mov
cli
mov
pop
cmp
cli
iret
je
mov
out
jo
xchg
jmp
push
popf
das
icebp
xchg
ja
fcomp
mov
loopne
pop
push
adc
cmp
or
movsl
loop
enter
pop
insl
les
shll
shl
adc
mov
stos
rcl
or
fdivrl
lods
rorb
mov
cmpsb
fcomps
push
mov
ja
sub
and
dec
sbb
mov
and
jmp
subl
fs
icebp
movsb
cmc
out
call
cs
xor
adcb
out
jbe
adc
pusha
sbb
aam
into
imul
and
pushf
mov
xor
fwait
and
stos
mov
or
int3
ss
dec
dec
push
nop
ja
mov
call
xlat
ret
mov
adc
leave
js
sub
push
lea
into
sub
adc
xor
addr16
aas
sarb
cmp
jns
cltd
lea
pop
dec
filds
sub
or
repnz
int3
test
jbe
xchg
pop
inc
leave
outsb
xchg
mov
js
sahf
add
dec
xchg
shrb
or
mov
xorb
sub
movsb
notb
and
and
test
ret
inc
incl
in
jp
shrb
lret
or
jno
enter
lret
ret
ds
sub
sub
xchg
cmp
mov
in
aam
leave
mov
cmp
popf
adc
xchg
aam
xchg
popa
pushl
pop
push
movsb
push
sub
and
adcb
add
lahf
vcmpunordsd
dec
aas
sbb
test
inc
jo
out
loope
in
lret
adc
rcrb
inc
xchg
sbb
jg
adc
push
clc
or
xor
push
in
mov
push
xor
pop
pop
insl
xchg
out
nop
xchg
daa
adc
sbb
sti
inc
ljmp
xchg
gs
mov
clc
gs
and
pop
das
dec
sbb
push
fsubs
shrl
les
in
inc
js
pop
dec
mov
in
imul
test
lret
lcall
mov
push
and
jbe
jno
pop
std
jmp
xor
push
shl
pop
push
push
jp
lea
movsb
dec
shrb
pop
pop
xor
jbe
mov
fwait
jle
nop
cli
aas
xchg
stos
mov
lret
dec
sti
and
xchg
cltd
push
hlt
inc
mov
or
aam
incb
out
lret
mov
mov
mov
xor
in
ds
add
pop
cmp
int
rcrb
cli
mov
sub
mov
jg
mov
push
mov
mov
sub
lret
or
and
lret
push
ret
in
stos
add
sub
in
and
sbb
xor
pushl
cs
or
and
sbb
inc
jp
pop
jo
push
jnp
mov
xor
mov
jae
mov
dec
cmp
rcrl
fisttpll
mov
int3
cmpsb
lea
leave
push
push
mov
or
stos
push
inc
ja
cmp
xchg
xchg
or
jp
xchg
lds
fs
je
fisubrl
push
mov
stos
lahf
push
lahf
jecxz
dec
push
popa
testl
jmp
xor
pop
lcall
mov
clc
faddp
mov
or
pop
sahf
rorl
lret
jae
fsubs
dec
mov
mov
push
cmp
dec
push
push
dec
jg
and
aaa
or
aas
xor
fs
shl
pop
aad
jmp
shll
jle
cmpsb
pop
sti
xor
and
mov
adc
inc
push
xchg
dec
pop
clc
cmc
mov
jne
jae
dec
divl
cmpsb
jp
mov
mov
test
add
mov
fucomip
or
test
stos
push
das
lret
dec
testl
mov
test
loop
adc
jne
sti
mov
pop
leave
inc
xchg
fcomip
sbb
and
arpl
popf
in
inc
fsubl
sub
push
out
cmp
sbb
jnp
cld
push
jl
adc
sbb
mov
aaa
xor
sbb
mov
push
lea
pop
mov
arpl
in
scas
aad
cmp
mov
cmp
cs
pop
daa
xlat
mov
daa
sarl
jns
jge
push
movsb
rol
xchg
pop
jmp
inc
xchg
ret
pop
fldenv
lcall
xor
mov
sub
xor
xchg
and
call
mov
xor
mov
lea
jl
pusha
push
pop
add
xor
test
mov
lahf
mov
inc
sub
sub
or
bound
push
or
jno
in
mov
das
shr
mov
cmpsb
xor
pop
stc
or
bound
jge
mov
rcl
in
ja
mov
test
imul
aad
jae
popa
ljmp
jnp
int3
out
aas
cmc
pop
pop
pop
scas
xor
fcomp
lds
sub
loopne
adcl
and
sbb
in
jae
dec
xor
inc
sarb
test
adc
inc
mov
outsl
addr16
shrl
xchg
mov
add
mov
push
cmp
movsl
and
int
inc
jg
mov
jle
rorb
ss
inc
push
pop
fwait
test
push
mov
aam
adc
rcrb
test
cmp
dec
jns
mov
mov
je
adc
or
cwtl
mov
loop
pop
and
mov
fstpt
in
cmp
sub
mov
jmp
pop
mov
mov
scas
xchg
add
scas
fucomip
push
sti
push
lcall
adc
add
outsl
add
enter
les
mov
iret
scas
cmc
mov
pop
pop
dec
jge
cmp
cwtl
jnp
in
ret
in
push
sti
or
pop
mov
or
lret
aas
dec
sbb
xor
aad
ret
add
and
dec
aas
adcl
andb
sub
adc
add
popl
loop
sub
mov
mov
sub
roll
testl
ds
sub
iret
add
sub
fmuls
sbb
enter
ljmp
or
int3
mov
xchg
rolb
ljmp
movsb
lret
xchg
mov
movsb
sbb
push
mov
mov
aaa
sbb
jb
in
or
test
mov
jbe
leave
rorb
xor
std
sbb
cmp
inc
push
scas
pop
adc
add
sbb
out
in
add
popf
jecxz
aad
cwtl
jne
arpl
mov
adc
fs
push
add
jnp
jae
test
mov
push
hlt
fincstp
lea
loop
or
xchg
sub
in
cmp
out
ss
imul
ret
rclb
sbb
jl
xchg
mov
adcl
shl
aaa
lods
push
adc
fcmovnu
xchg
fiaddl
jecxz
push
jecxz
jno
incb
imul
xchg
push
ret
out
push
or
ffree
jge
movsb
mov
add
add
pop
scas
pop
push
pop
inc
sub
mov
mov
outsl
and
cmp
or
dec
sub
mov
jno
xchg
sbb
insl
xlat
jnp
iret
imul
and
ja
add
dec
adc
inc
ja
pop
lahf
into
scas
lea
and
inc
sbb
test
mov
stos
sub
hlt
push
insl
mov
mov
sbb
iret
mov
into
lahf
pusha
cmp
aad
cmc
mov
xor
or
dec
lds
xchg
das
daa
mov
sbbl
inc
sub
lcall
leave
xchg
mov
test
adc
mov
sbb
outsb
mov
push
stos
mov
sti
sbb
xchg
loop
dec
lret
jle
hlt
aas
push
daa
mov
shr
or
aam
lds
repz
fisttpl
jg
hlt
fdivs
ja
push
xchg
xorl
cmp
push
dec
daa
push
mov
iret
cmp
out
daa
lret
xchg
std
inc
lods
lds
pop
cmpsl
mov
test
xchg
ljmp
mov
inc
in
adc
jle
lahf
push
mov
jae
imul
xor
inc
cld
lret
add
mov
and
xor
sbb
es
sti
fiaddl
mov
jns
dec
enter
lcall
fucomip
xor
jo
rcrb
fdivrl
aaa
add
mov
mov
or
and
add
pop
jmp
loope
in
in
cmp
mov
push
lds
sbb
jnp
mov
dec
test
clc
mov
pop
adc
ds
pop
nop
xor
stos
mov
push
jmp
in
mov
sbb
cmc
loopne
mov
push
jge
loope
mov
shll
adcl
and
and
adc
xchg
pop
clc
mov
inc
push
jno
cmpsl
or
pop
jnp
outsb
fwait
xlat
aas
cmp
push
adc
fs
mov
inc
sti
sub
add
cwtl
in
call
dec
cld
push
lret
mov
loopne
stc
out
sub
or
pmulhuw
dec
scas
rcr
call
adc
fwait
sub
cld
mov
pop
xchg
sbb
xor
cmp
cmc
shl
in
cmp
stc
bound
aad
mov
scas
mov
cmp
pusha
icebp
das
push
sub
imul
bound
lods
pop
in
sbb
mov
add
xchg
adcb
iret
pop
sub
ret
outsl
nop
adc
je
mov
adc
xchg
es
push
adc
mov
sbb
ret
shll
pop
and
cmp
loopne
rcll
jp
movb
clc
add
xchg
lret
pop
or
test
ljmp
push
add
mov
popf
rcr
pop
adc
ss
jmp
sbb
pop
mov
cmp
mov
mov
pop
sbb
xor
xchg
fadds
lret
and
jb
mov
movsl
insl
jecxz
ret
test
sub
mov
dec
js
aam
xor
sub
in
cmp
les
or
jne
mov
xchg
mov
nop
dec
fisttps
jns
inc
sub
xor
movl
mov
out
mov
mov
adc
jecxz
bound
test
add
and
inc
mov
mov
insl
xlat
mov
and
mov
sub
adc
push
sti
out
add
lods
dec
xor
shlb
sarl
sub
out
jae
adc
iret
popa
mov
mov
icebp
ds
int
pop
add
pop
sti
and
mov
push
aad
jbe
dec
xchg
leave
popf
mov
sub
xchg
add
and
cwtl
jge
loopne
clc
push
push
int
mov
imul
lods
xor
jno
mov
cmc
mov
pop
into
mov
mov
ret
sbb
add
inc
pop
cmp
movsl
cs
test
jo
adc
jbe
inc
punpckhdq
mov
push
scas
adc
call
or
jle
test
add
push
inc
push
je
mov
mov
outsb
repnz
adc
imul
sub
movl
int
jno
sbb
fsubs
and
mov
repz
and
add
fcmovb
sub
cmp
jnp
stc
mov
and
sbb
mov
inc
add
dec
mov
add
lods
enter
xchg
ds
pop
push
scas
pop
push
mov
mov
inc
call
stos
rorb
fisubrs
mov
inc
out
jbe
sub
jl
enter
pop
and
and
mov
pop
jle
mov
std
addb
dec
cmp
into
shld
movsl
mov
sahf
test
outsb
in
mov
dec
inc
movsb
xor
jno
cmp
shll
icebp
stos
fadds
push
xor
imul
xchg
jb
mov
or
push
imul
xchg
in
out
jp
push
dec
jne
add
seto
call
dec
into
popa
addl
push
psubq
lods
scas
test
jno
insb
push
xchg
or
mov
add
mov
imul
jno
mov
sti
imul
cltd
xchg
aaa
outsl
mov
in
or
jle
push
in
fs
add
cmp
jne
dec
mov
fs
xor
aas
test
xor
jno,pn
sub
mov
testb
es
ljmp
ss
mov
add
mov
ret
data16
mov
lea
cmp
shll
cmp
imul
ffreep
dec
sbb
dec
xchg
mov
cs
jb
and
dec
sbb
outsb
push
jmp
xor
and
mov
test
stos
sub
imul
pop
imul
je
pop
push
sbb
repz
dec
jb
push
add
xor
insb
xor
mov
ret
sbb
test
push
jl
jp
cld
out
or
push
jnp
lahf
ret
mov
les
es
and
push
jge
call
adc
pop
mov
jne
push
jne
out
out
subb
pusha
adc
test
push
mov
adc
pop
dec
push
or
test
cmp
inc
xchg
inc
movsl
push
add
jbe
scas
stos
jo
loop
test
mov
les
or
dec
xchg
enter
fs
pop
dec
adc
mov
fldenv
ret
sbb
pop
add
in
call
popa
filds
ja
or
popf
push
lods
adc
cs
xor
push
gs
cld
cmp
cmpsl
jge,pt
jecxz
and
aaa
iret
test
add
mov
adc
adc
pop
rclb
mov
cmp
xor
xchg
cmp
shll
dec
movsb
std
mov
stc
ret
mov
push
pop
sti
mov
inc
out
mov
adc
cmc
loopne
or
es
push
jecxz
jecxz
and
movsl
mov
out
inc
mov
push
aam
dec
popf
mov
aaa
cmpsl
cwtl
stc
push
leave
mov
lret
push
into
div
pop
push
in
mov
jl
xchg
and
adc
cmp
lods
push
ror
fildll
jecxz
cmp
mov
mov
int3
lods
gs
sub
add
adc
push
fcomp
xor
into
jb
adc
and
ja
mov
jns
sbb
repnz
fwait
mov
push
imul
ds
mov
out
in
mov
vmaxss
and
xchg
iret
mov
out
jecxz
scas
and
hlt
mov
inc
cmp
hlt
push
pop
andl
mov
jle
cmpsl
loope
jno
mov
sbb
inc
push
mov
add
sahf
bound
or
pop
adc
filds
and
pop
jnp
in
push
arpl
lea
xchg
shrl
sbb
psubd
xchg
and
mov
repnz
or
icebp
or
lret
pop
fs
es
cltd
aaa
clc
xlat
push
mov
cmp
ljmp
scas
aad
sar
jbe
xor
dec
push
push
je
ss
sub
out
mov
scas
outsl
add
pushf
inc
or
push
mov
mov
dec
mov
dec
imul
stos
mov
xor
xlat
xor
jecxz
xchg
aad
or
insb
ret
lret
fcmovnu
popf
push
mov
mov
repz
test
cld
cld
inc
fdivl
mov
inc
loopne
mov
sbbl
ret
add
sub
push
fwait
mov
stos
fnstsw
mov
push
popf
pop
sbb
nop
push
mov
push
bnd
js
and
lods
xor
and
add
pop
ja
aam
ljmp
pop
pushf
lock
adc
cmp
mov
outsl
movsb
imul
push
pop
je
dec
fisttpl
fisubrs
push
xchg
es
jne
dec
mov
and
iret
aad
jnp
push
mov
push
stos
ds
mov
xorl
pusha
xchg
jo
mov
addr16
outsl
or
push
stos
add
movsl
jecxz
pop
jle
loope
in
or
daa
sbb
sub
pop
in
sbb
imul
add
out
add
sbb
dec
dec
jl
pop
sub
mov
sub
xlat
pusha
mov
adc
andl
aaa
cmpsb
out
loopne
idivl
adc
pop
ss
mov
push
fisttpl
lret
xor
stos
stos
call
push
adc
lcall
mov
sbb
mov
js
outsl
or
pop
aad
imulb
jle
xchg
xor
and
cmpsl
xchg
test
pushf
sti
sbb
lods
mov
inc
and
fucomip
ljmp
and
loope
mov
jecxz
cltd
fmull
fsubs
std
cmp
ret
hlt
jmp
cmp
mov
xchg
xchg
les
aad
push
ja
rcl
adc
inc
pop
jg
sub
and
or
in
mov
fists
xor
sub
xchg
and
lds
mov
testl
dec
lea
aaa
mov
lret
push
fwait
imul
xorb
repnz
push
fstpt
mov
and
jno
jne
loop
je
cmp
insb
popa
sub
in
and
iret
jne
in
and
sub
leave
lret
mov
dec
das
fs
pminsw
idivl
sbb
stos
fdivs
jns
leave
ficoms
mov
pop
hlt
lea
jno
mov
jecxz
in
cmp
ja
test
pop
sbb
adc
rorb
push
jmp
movsbl
mov
xor
inc
aaa
pop
add
xchg
pop
fwait
add
jae
sub
mov
sub
mov
scas
out
in
fadd
fsubp
loope
add
pop
add
or
xor
adc
xchg
int
xchg
sub
mov
mov
fisttpll
loop
repnz
push
rclb
xchg
pop
and
adc
and
lods
gs
mov
rcrl
jg
push
les
inc
xchg
push
pop
fdiv
push
jnp
sub
and
fbstp
rsqrtps
pop
aad
mov
xchg
pop
dec
test
sub
sti
arpl
test
dec
mov
fdivs
mov
mov
mov
jl
jle
leave
addr16
pop
cmp
ljmp
pop
rcrb
daa
add
mov
clc
pop
nop
out
ret
cmp
add
cli
jp
shrb
and
paddw
arpl
testb
mov
mov
lea
imul
sub
imul
sub
add
mov
and
sti
push
daa
nop
lds
cs
cwtl
xlat
hlt
popa
jl
in
inc
jae
in
es
xchg
cmc
idivl
xor
lods
jg
pop
fwait
sub
ljmp
sub
jae
add
or
xchg
mov
xor
xor
leave
jnp
js
mov
pop
mov
pop
jae
or
adc
push
cmc
cmp
cmp
xchg
test
sbb
sbb
dec
out
mov
dec
push
test
adc
sub
mov
lods
pop
mov
sbb
cmp
push
out
adc
out
push
test
pop
in
cltd
or
push
pop
mov
popa
jp
mov
int
shlb
out
add
dec
movsb
cli
int
clc
repz
fildl
pop
cmpsb
mov
fstl
pop
call
mov
mov
bound
xchg
fwait
and
or
wrmsr
xor
sbb
lea
fsubrp
push
or
clc
stos
int
jle
sub
and
xor
xor
fisttpll
mov
sar
jle
int
daa
sti
xchg
stc
mov
sub
xchg
stos
repz
popf
js
lock
jl
mov
lods
xchg
in
inc
pop
xchg
pop
pusha
inc
xor
sbb
mov
push
xchg
mov
push
in
pusha
dec
dec
mov
or
mov
mov
sub
pop
outsl
fcmovu
mov
jmp
pop
fbld
pop
in
je
xor
jo
adc
cmp
lds
iret
mov
nop
jb
stos
stos
jge
sbb
in
fwait
pmaxub
bound
mov
mov
jl
nop
movsl
fmul
push
sub
sub
and
cmc
mov
inc
imul
test
fldenv
mov
cmovo
or
pop
xchg
push
imul
mov
popa
mov
addr16
stos
sub
cwtl
in
dec
repz
arpl
xlat
stos
lods
or
int3
xchg
loop
test
mulb
cmpsb
and
ljmp
pop
popf
mov
sub
div
add
subb
jb
jne
inc
mov
and
add
dec
sbb
mov
add
in
adc
add
subl
imul
gs
sbb
cmp
pop
aad
test
aad
add
lret
or
addb
cmpsb
incb
fstpl
stos
xchg
das
fs
bound
jge
pop
lods
adc
jo
clc
pop
mov
loop
adc
mov
mov
dec
imulb
adc
out
lock
clc
and
push
mov
cmpsl
mov
loope
lret
lret
addr16
popf
mov
out
sbb
fmuls
and
fs
enter
clc
stos
loopne
push
jns
add
push
frstor
lcall
cmp
cmp
inc
out
adc
imul
bound
sbb
push
sar
stos
repnz
push
pop
daa
adc
rcl
scas
leave
dec
mov
or
dec
andb
stos
rclb
rolb
enter
push
jo
mov
into
mov
jo
je
push
dec
lcall
mov
and
or
mov
ret
add
enter
xchg
mov
adc
mov
cmp
arpl
fsubs
pushf
xchg
fwait
pop
sahf
inc
dec
shr
sti
pop
cmp
cld
mov
icebp
jns
testb
fsubl
xor
cmp
jne
lahf
divw
in
dec
sahf
adc
inc
jmp
add
xchg
aaa
inc
shrl
lods
aas
mov
xchg
sti
xor
mov
iret
in
mov
sti
sbb
sahf
scas
jg
inc
lock
cmc
and
fistps
xor
jbe
sbb
lods
icebp
aad
cmp
fdivrs
scas
adc
push
dec
out
xchg
sbb
dec
into
pop
sbb
fdivr
add
push
xor
insb
cmpb
ret
sub
push
scas
or
shlb
xor
sub
es
arpl
lea
lods
push
mov
shll
or
cmp
adcb
mov
mov
sbb
mov
xchg
rcrb
mov
pusha
inc
jae
sub
fidivs
push
push
pop
loope
negb
loope
pop
out
ja
or
xchg
mov
sbb
and
adc
loopne
enter
push
push
pop
iret
sbb
in
cmp
cmpsl
fsubr
and
into
and
adc
loopne
jge
cmp
movsb
pop
push
mov
dec
dec
and
rcll
or
leave
push
add
sbb
sti
stc
or
sbb
sti
scas
cli
pushf
and
jg
push
mov
mov
ds
jne
in
xchg
gs
enter
cld
nop
addr16
add
push
pop
in
cwtl
scas
mov
xor
cmpsl
adc
mov
mov
jmp
ja
cli
dec
cmc
loopne
out
lea
ds
frstor
mov
adc
outsl
jno
fists
cmc
jno
or
jns
pop
test
fcomps
dec
mov
enter
in
ret
fstps
cmp
js
dec
insb
test
jno
stos
daa
sbb
lods
and
insl
pushl
loop
sti
and
sbb
fstpt
clts
sbb
inc
bound
mov
dec
pop
push
int
lds
filds
mov
sub
ss
nop
sti
sub
pusha
jp
jecxz
xor
push
dec
sub
ljmp
xorb
xchg
cmpsl
xor
les
add
mov
insb
jle
add
out
ss
and
push
cmp
aas
adc
sbb
subl
dec
mov
test
les
jle
movsl
inc
and
stos
into
into
aaa
ljmp
push
inc
int3
je
je
mov
hlt
lods
mov
ret
je
inc
pusha
cmp
inc
sub
dec
xor
push
jne
imul
in
or
lcall
aas
dec
sbb
popf
dec
xlat
out
jmp
jmp
xorb
mov
shlb
stos
pushf
mov
mov
fsts
pushf
dec
dec
and
int3
cmp
pop
cmpsl
adc
mov
xor
mov
push
inc
jg
jg
mov
xchg
mulb
inc
insb
icebp
je
pop
inc
cmp
push
jne
cmp
dec
inc
dec
xchg
or
push
mov
scas
lahf
push
pop
inc
scas
add
or
call
xor
test
cltd
fidivrs
jae
xor
xor
mov
pop
cmpsl
lret
mov
xchg
cmp
xor
xchg
addr16
jge
fsubrl
cmp
jb
in
sbb
mov
sti
into
lret
dec
cwtl
test
mov
cwtl
pop
shlb
pop
mov
push
add
pop
xchg
imul
jp
out
jae
in
jg
or
mov
je
mov
mov
repnz
arpl
lods
push
sbb
pop
and
fstpt
test
adc
inc
lret
ljmp
cltd
jecxz
or
sahf
test
nop
loope
sarb
mov
pop
lock
dec
int3
int3
or
insb
add
sub
adc
outsb
adc
dec
movsb
stc
dec
jae
inc
xor
ret
data16
sbb
outsl
idivb
and
mov
cs
sub
xchg
xchg
les
add
sub
outsl
push
xchg
lahf
aaa
mov
push
jecxz
mov
sahf
push
and
cli
mov
sar
rdmsr
stos
inc
cmp
adc
mov
cli
mov
mov
insl
inc
mov
shll
test
jg
add
cmp
in
out
pushf
aad
fstpl
mov
mov
ds
nop
outsb
inc
inc
sti
iret
cmp
int3
enter
lds
adc
scas
dec
pcmpeqd
push
out
mov
je
dec
fisttpll
cmpsb
inc
push
mov
pushf
mov
daa
int
insb
sahf
lea
testb
adc
lods
pop
sbb
inc
jb
sub
das
jmp
movsb
mov
iret
pop
push
and
nop
loopne
dec
sub
mov
daa
xor
mov
adcl
pop
cld
xlat
loopne
cmpl
push
aad
jnp
test
popa
imul
cmpsb
testb
scas
sub
ficompl
sub
mov
outsb
inc
add
lcall
sub
shlb
adc
add
pusha
and
jns
mov
mov
ret
or
inc
mov
js
push
or
notl
das
rclb
pop
call
fsubl
xchg
pushf
fisttpl
fnstenv
jg
enter
or
add
iret
fs
mov
pop
push
xchg
vzeroall
aas
inc
popf
and
pop
ljmp
mov
pop
jbe
inc
icebp
popa
cwtl
lds
cmp
sahf
xchg
mov
test
rorl
sbb
je
lds
iret
jmp
mov
mov
mov
jmp
jns
sahf
mov
dec
xor
cld
sbb
pop
pop
lods
dec
insl
cli
imul
push
stc
jp
pop
call
mov
ret
lret
into
cmp
mov
lods
imul
jp
mov
jo
leave
pop
adc
lret
add
mov
int3
ret
aad
sbb
jb
icebp
xchg
mov
daa
jl
and
daa
icebp
lock
aas
test
push
pop
lahf
mov
jne
adc
jne
inc
in
int
lods
jge
jp
mov
mov
xchg
mov
lods
add
inc
and
xchg
daa
lea
outsb
mov
pop
xlat
mov
andb
mov
iret
loope
lods
xchg
lcall
imul
inc
mov
pop
enter
xor
xor
movsb
pushf
add
outsb
imul
xor
jo
and
aaa
add
mov
jl
mov
insb
rorl
rclb
rolb
pop
dec
std
cmp
loope
pop
es
add
inc
iret
call
inc
es
pop
cwtl
loop
xchg
enter
pop
jnp
movsb
sub
imul
adc
jg
or
cli
inc
mov
dec
ds
shlb
add
icebp
lods
cmp
add
fwait
push
lcall
hlt
hlt
xchg
push
fiaddl
add
scas
jo
popf
out
xor
gs
xchg
test
mov
xchg
add
mov
push
stc
jnp
mov
dec
adc
pop
sahf
mov
cmp
mov
rorb
hlt
test
in
push
push
push
cld
shll
mov
dec
fsubrs
lods
push
lds
mov
out
out
data16
inc
aad
xchg
add
lret
outsb
adc
inc
xchg
jno
popf
pop
cmc
lock
xor
hlt
shll
adc
rcr
adc
insl
jp
sub
sub
cmp
les
lcall
lret
jg
mov
pop
std
fwait
or
cmp
mov
lods
adc
shrl
bound
es
test
jecxz
or
js
rcll
lret
rorl
and
pop
or
into
inc
arpl
jl
sarb
or
imul
xor
cmp
imul
repnz
xor
testl
cld
or
or
or
mov
dec
sbb
and
les
pop
push
clc
int3
dec
xchg
adc
sbb
aad
or
jle
insl
addb
push
fidivl
xchg
jb
scas
div
std
iret
aad
dec
fwait
pop
jae
nop
jno
clc
adc
inc
mov
popa
lods
lcall
int
rorb
insl
mov
xchg
lds
and
or
push
movsb
mov
add
mov
cmp
loop
mov
fisttps
mov
test
outsl
in
jae
and
inc
inc
cmp
lret
arpl
call
jae
or
outsl
xor
fdivs
cwtl
mov
xlat
pop
xchg
cmpsl
cld
arpl
jno
mov
inc
jg
movsb
clc
fwait
inc
add
ret
mov
mov
xorb
push
jne
push
mov
pop
xchg
int3
rcl
jns
and
add
lds
jbe
scas
inc
loop
xchg
imul
leave
fists
addl
loope
mov
lret
sbb
jge
lods
rcl
push
push
ret
aaa
mov
mov
push
adc
push
fcmovnb
and
js
or
sub
dec
rolb
pop
outsl
mov
mov
lcall
sbb
xchg
mov
fnstcw
mov
loopne
clc
scas
test
jge
fidivs
xchg
das
sbb
out
and
in
rcl
xor
push
xor
sub
mov
das
adc
inc
fwait
xor
pop
sbb
mov
ds
sub
addr16
ss
adc
cltd
jge
jb
subb
mov
dec
pop
mov
mov
jmp
popf
jbe
test
outsl
cltd
loop
mov
sub
cld
jns
into
and
and
mov
insl
shl
dec
fldenv
xor
adc
adc
subl
pop
shll
int3
xchg
repz
inc
divb
xchg
aam
gs
scas
pop
xor
pop
pop
xchg
dec
inc
cmp
movsl
push
fidivs
adc
lea
mov
mov
add
add
push
jecxz
cmpsl
jb
add
adc
int3
add
mov
in
xor
pop
test
in
xchg
dec
jnp
cmp
fwait
cs
pop
xbegin
pushf
mov
out
imul
mov
mov
mov
sbb
jbe
fisttpll
int
xchg
outsb
cmp
mov
sub
push
in
fsubrl
cmp
mov
insb
idiv
pop
insl
jge
fstl
clc
aas
inc
mov
or
lcall
xchg
and
inc
pop
cmp
or
bound
jmp
jo
mov
xor
xchg
dec
dec
in
lods
outsb
push
imul
icebp
out
mov
lcall
jle
or
aaa
or
push
xor
inc
cmpsb
in
mov
movsb
sbb
imul
xchg
movsl
push
push
jecxz
mov
stos
xchg
adc
and
in
jp
clc
in
xor
mov
or
cmp
xor
das
call
mov
xlat
xchg
xchg
xlat
repnz
in
inc
xor
mov
sub
inc
imul
pop
add
sbbb
xchg
mull
sahf
mulb
test
out
imul
or
and
pop
inc
in
rcrb
test
cmc
or
stos
and
jnp
lods
xchg
in
mov
jecxz
popa
mov
inc
movsb
addb
loope
es
lret
jne
xchg
movsl
mov
mov
or
jns
adc
imul
or
push
cmp
jmp
sbb
out
mov
repnz
adc
and
jl
sbb
jno
repnz
lahf
mov
rcrl
and
andl
ljmp
ret
mov
cmp
adc
movsb
sub
and
dec
jns
and
fmuls
les
dec
and
sarl
stos
out
jnp
jb
addr16
mov
add
fisttpll
jb
scas
insb
xor
cli
dec
iret
out
imul
shll
sbb
xchg
test
xor
popa
lods
xor
inc
or
xchg
ret
push
add
adc
fs
mov
pushf
imul
lds
lcall
sub
repz
sbb
popa
in
add
inc
fidivs
call
add
arpl
mov
fnstsw
pop
dec
lcall
in
mov
xchg
or
cltd
add
enter
mov
and
cli
mov
sub
rclb
inc
xor
sub
jmp
sub
add
pop
pusha
or
ret
mov
add
xor
data16
repz
xchg
mov
and
adc
xor
dec
push
out
push
cmp
loope
mov
add
scas
adc
stos
aas
push
xor
cmp
pop
add
fwait
ret
test
lds
loop
or
mov
int
hlt
test
xor
mulb
mov
sub
scas
ljmp
jns
jo
adc
and
or
dec
popa
ret
cs
repz
fisubrl
loop
in
add
xchg
sbb
fucomi
fcoms
lods
movsb
insb
clc
mov
sbb
sub
aam
js
xchg
mov
xchg
cmpsb
andb
jbe
das
mov
jb
mov
mov
mov
fucomi
repz
mov
mov
add
outsb
nop
fadds
xlat
sahf
cmpsl
pusha
adcb
dec
mul
es
bound
ret
sbb
mov
les
sub
add
inc
add
js
sub
push
add
pop
ror
add
adc
aas
ret
add
das
aam
or
xor
dec
pop
pop
in
cmp
fs
scas
xchg
lea
test
popf
xchg
pslld
dec
shrl
jo
inc
jns
mov
jp
out
mov
insb
int3
xchg
loop
lret
mov
rcr
std
mov
jae
mov
aam
adc
push
fsubrl
stos
lcall
inc
notb
subl
mov
jle
pop
push
pop
and
lahf
nop
dec
int3
cmp
test
push
inc
mov
jo
add
incb
jno
fcompl
xlat
jnp
leave
scas
es
std
in
test
mov
mov
jo
mov
rorl
mov
lock
arpl
cmp
fldenv
mov
xchg
or
mov
mov
jbe
inc
xchg
push
or
dec
mov
inc
inc
inc
add
test
sahf
push
js
jne
icebp
fstpl
std
sub
sub
jbe
mov
in
dec
int3
es
dec
jl
mov
ja
fists
aad
xchg
mov
dec
pusha
inc
sbb
fistpll
into
push
aaa
xor
mov
sub
into
mov
cmp
fwait
pop
aad
mov
into
scas
pop
mov
pop
ss
cmp
and
mov
out
rcll
or
popa
loope
push
punpckhbw
hlt
adc
fucomp
in
jnp
mov
push
push
sbb
cmc
jb
lea
dec
adc
add
jp
shrb
sbb
adc
test
jge
add
repnz
adc
jge
or
int3
push
push
and
cmpsl
jle
cli
hlt
xchg
rcll
jle
pushl
pop
shll
incb
scas
scas
hlt
fbld
lock
sbb
call
push
pushf
aam
xor
mov
sub
jecxz
rorb
mov
mov
std
dec
add
jnp
popf
rcl
cli
out
fdivrs
stc
sub
out
in
jl
rclb
sbb
jge
cmp
jmp
xchg
cmpsl
push
push
enter
pop
ret
adc
jl
jne
sbb
or
loopne
pop
jo
gs
xor
call
ss
lds
and
sub
pusha
bnd
aad
cmp
cmpsl
or
dec
xchg
mov
popf
fmuls
pushf
xor
sbb
cltd
sti
ljmp
inc
outsb
mov
mov
arpl
dec
sub
mov
push
fldcw
sbb
xor
xchg
ja
ret
loop
inc
mov
arpl
popf
dec
js
mov
xor
lds
scas
sar
mov
jb
int
aam
inc
je
push
push
add
jl
dec
adc
xor
pop
push
lret
arpl
pop
cmc
leave
xchg
xor
shll
je
mov
mov
mov
and
ss
stos
test
out
int
jno
mov
pop
lahf
cmp
or
dec
arpl
cmpsl
test
loopne
into
pop
aad
fidivrs
dec
mov
jecxz
lcall
push
bound
filds
pop
je
inc
and
movsl
inc
inc
push
fisttpl
or
fwait
xchg
pop
cmp
jnp
xor
push
pop
mov
je
add
aas
xchg
push
leave
or
jle
repz
js
jb
mov
orb
inc
xchg
mov
push
sbb
test
sub
push
dec
sahf
fld
adc
mov
int3
sbb
pop
test
cmp
into
mov
movsb
std
ds
in
push
pushf
aas
add
imul
sbb
xor
dec
adc
xlat
ret
pop
jo
stos
jecxz
mov
push
or
mov
pop
cmpsb
aam
ljmp
inc
and
dec
aad
xorb
in
inc
jo
mulb
bound
pop
jmp
mov
pop
pop
das
fnstsw
pandn
inc
xchg
mov
inc
mov
mov
xor
call
ds
out
fisubrl
adc
add
mov
or
popf
loopne
outsb
stc
sub
aad
jns
dec
xchg
lods
divl
and
adc
int
rcll
and
loope
jnp
jmp
add
push
sbb
xchg
inc
ret
dec
jb
sub
daa
add
inc
dec
pop
fidivrs
jae
push
fsubl
jp
sti
push
jmp
leave
cmp
shl
pop
mov
add
movsl
call
pusha
jae
or
mov
xchg
pop
cltd
xor
push
xchg
inc
cmp
and
aas
mov
fdivrp
and
mov
sub
push
stos
mov
adcb
push
jb
out
dec
jecxz
or
mov
xchg
mov
outsb
lahf
stos
dec
mov
sub
mov
sub
cmp
dec
or
pop
jp
fwait
lahf
sahf
ss
sub
jge
inc
stos
add
inc
xor
mov
mov
mov
cmp
ret
sar
enter
dec
sbb
int
lea
lahf
loop
sub
imul
sub
xchg
int
inc
movsb
push
mov
popf
jg
pop
shrl
int
inc
rol
cmp
jmp
jae
dec
xchg
mov
jo
push
mov
adc
or
xchg
adc
fmuls
jns
sub
inc
or
fld
jae
jae
stos
inc
pusha
xor
xchg
insl
mov
test
ret
push
lea
dec
cmp
xorb
inc
outsl
sub
sbb
cmp
or
pop
and
ret
fadds
push
and
xchg
imul
cmp
jg
sbbl
push
leave
push
sbb
jecxz
mov
lods
mov
imul
push
fldl2t
jg
push
hlt
fisubrs
jno
movsb
divb
shl
mov
add
pop
jb
xchg
je
push
fldl
xlat
addr16
push
mov
pop
jne
movl
cld
mulb
sub
dec
ds
mov
add
mov
aas
push
dec
hlt
test
push
push
inc
push
fistl
into
cmp
and
xchg
pop
add
fistl
push
gs
or
lcall
ret
ds
push
xor
leave
lock
popf
lea
test
mov
xchg
mov
cmp
sbb
ja
mov
popf
mov
test
popf
insb
scas
mov
push
lods
add
or
gs
les
push
fistps
movhps
xchg
lods
out
cs
in
jno
je
add
pusha
pop
pop
pop
mov
adc
repnz
mov
imul
add
mov
aaa
xor
push
aam
cltd
mov
icebp
mov
push
shrb
xor
popf
movsb
fistpll
ljmp
loope
jp
nop
test
das
out
xchg
sti
dec
jbe
push
fisttpll
adcb
fdivr
cli
and
icebp
push
xchg
pop
clc
stos
dec
mov
lcall
ja
rclb
clc
ret
jno
dec
pushf
imul
ret
mov
xchg
sbbb
int
adc
test
shr
fcompp
xor
lock
mov
xor
or
push
ljmp
pop
jns
inc
push
in
mov
out
push
sbb
xor
sub
jbe
scas
push
push
stc
rcr
push
in
sbb
js
inc
xor
fsubp
fmull
dec
jle
xchg
loopne
sub
inc
orl
jb
cltd
pop
mov
roll
js
in
or
int3
jmp
lcall
push
jnp
into
leave
fadds
fidivrs
in
xor
shll
mov
repz
mov
mov
cmp
inc
cmp
mov
cmp
test
xor
mov
or
xlat
lahf
data16
xor
aaa
mov
adc
add
insl
and
orb
aaa
adc
push
sti
insb
insl
arpl
jno
leave
dec
push
lret
into
out
or
daa
lret
or
popf
ss
cmp
dec
and
mov
xor
lret
sti
das
xor
dec
lcall
loope
popf
inc
inc
mov
xchg
jmp
mov
or
lds
lods
and
mov
sbb
cmp
bound
int3
inc
mov
sbb
or
aad
sub
xchg
xchg
inc
sub
cmp
jae
pfrsqit1
pusha
push
and
movsl
enter
jae
in
xor
cmp
test
pop
dec
xchg
mov
add
dec
ss
jo
stos
bnd
pop
adc
or
mov
les
mov
adc
mov
andl
xor
sbb
cmc
shrl
arpl
sub
sub
lret
push
dec
div
sti
sbb
adc
dec
insl
pop
push
sub
repz
add
mov
mov
es
mov
fwait
imul
imul
lods
ret
add
or
xchg
mov
testl
imul
xchg
cmp
xchg
out
bound
and
lahf
orl
sub
sahf
xchg
and
sub
daa
sub
mov
cmp
push
xor
dec
pop
mov
into
into
inc
nop
inc
shrl
mov
dec
mov
leave
xor
fdivl
xor
sub
dec
insl
cmc
test
orb
ret
cmp
cmp
aaa
sub
inc
retw
jmp
mov
jle
and
mov
push
xchg
lock
dec
or
cmpsl
hlt
push
mov
or
mov
test
aas
fldl
sub
mov
inc
push
test
adc
jl
cltd
cmpsb
movb
mov
lcall
dec
and
lea
outsl
sbb
iret
sbb
fisttpll
add
dec
and
icebp
shll
and
xor
out
outsb
inc
cmp
xchg
loopne
call
test
push
or
inc
add
adc
or
lret
sbb
jns
xor
rcrb
not
mov
out
out
iret
mov
push
iret
xchg
hlt
push
stos
std
test
inc
push
push
andl
movsl
mov
cmpsl
or
add
insl
fsts
adc
or
pop
mov
xchg
sbb
in
sbb
jns
icebp
bound
push
xchg
je
add
pop
push
in
mov
add
xor
xor
into
jecxz
inc
out
pop
xchg
sbb
sub
scas
push
adc
subb
xor
adc
mov
ss
mov
mov
or
movsb
push
sub
and
pop
cmp
out
scas
push
push
or
jae
push
dec
repnz
cwtl
bound
mov
add
lds
ljmp
idivl
jmp
repnz
inc
mov
loope
mov
and
out
out
push
cmp
shrl
jg
jne
outsb
push
jne
sub
dec
popa
push
mov
sub
stos
sti
or
dec
mov
dec
and
int
xchg
sub
sub
sub
into
js
stos
and
or
and
adc
pop
int
shrb
add
scas
movsb
sbb
dec
jle
mov
dec
dec
call
or
sbb
push
outsb
pop
mov
jne
mov
add
data16
test
jl
in
icebp
pop
inc
inc
jmp
pop
mov
sub
jecxz
adcl
sbb
push
fcoml
test
loope
jg
fld
pop
sar
loop
loopne
sub
aad
sbb
inc
jbe
in
inc
mov
inc
mov
adc
nop
cmp
sub
ja
icebp
cmp
aam
jmp
daa
sbb
pusha
xchg
subl
sub
les
inc
stc
call
xor
cmp
test
push
dec
pop
pushf
test
or
xchg
push
stc
shlb
sahf
pop
and
dec
xor
xor
fld
cmc
cmp
rcrl
outsb
push
lea
sbb
mov
xadd
mov
insb
sahf
sbb
aam
ja
push
mov
stos
mov
inc
loopne
cld
push
loop
dec
test
enter
xchg
mov
outsb
rcrb
and
fistpll
enter
ret
pop
mov
dec
fiaddl
xor
je
insl
jbe
xlat
aad
or
sti
lods
fisubs
outsl
aad
or
stos
fildl
jbe
push
add
cmc
ss
cmp
fld
push
sub
pushf
adc
inc
popa
lea
lds
dec
mov
lds
cmc
les
inc
imul
shrb
dec
insb
cmp
nop
repnz
mov
push
stos
rcr
test
rcl
sahf
in
mov
fs
fwait
adc
sti
sub
mov
sti
xchg
sarb
sbb
mov
hlt
or
jns
mov
mov
mov
push
inc
sbbb
mov
xchg
or
into
jle
rcll
iret
mov
daa
int
nop
jp
jg
mov
xchg
jo
sub
repz
sti
lret
jle
subb
into
addb
ret
xor
sbbb
push
mov
push
movsb
adc
ret
jbe
inc
dec
ss
xlat
adc
lcall
lock
popf
icebp
and
gs
shrb
outsl
lret
or
js
stos
add
inc
push
stc
repnz
jb
pop
add
xor
fisttpll
sub
mov
push
mov
push
insl
out
pop
sti
jae
stc
xor
add
jo
sbb
addb
ljmp
pushf
rcll
mov
mov
xchg
in
lcall
sti
pop
jno
mov
popf
fildl
mov
adc
daa
mov
and
xor
cmpsl
push
dec
movsb
xchg
dec
inc
scas
sbb
aaa
and
enter
or
enter
add
in
push
fidivl
mov
mov
add
scas
xor
jle
leave
icebp
dec
pushf
xor
sarb
insb
xchg
std
mov
fs
bound
repnz
insl
ficoms
aad
and
enter
sti
call
aam
push
sbb
mov
adc
adc
mov
movsb
jns
xchg
xor
fcomp
adc
inc
out
and
mov
mov
data16
adc
sbb
and
push
repnz
loop
push
mov
nop
and
inc
xchg
mov
pop
dec
mov
add
in
mov
into
inc
out
jnp
xchg
stos
xchg
push
daa
pop
sar
xor
insl
fs
sub
mov
xchg
and
add
jae
loop
cs
or
and
mov
cmpsb
cmp
inc
in
xor
scas
pusha
cmpsb
call
and
scas
into
pop
or
popf
popa
cmp
outsb
and
test
and
js
int
orl
add
loop
stc
movsl
xchg
lret
leave
jge
inc
loope
fisubrl
loop
je
cmp
mov
inc
aas
push
icebp
dec
das
xor
push
pop
mov
sbb
fmull
push
or
jnp
mov
and
xchg
popf
xlat
push
sbbl
and
lret
push
test
imul
int3
sbb
hlt
and
jge
mov
jns
dec
xchg
adc
jno
xchg
pushf
or
push
sub
sbb
xor
xor
pop
stos
cmp
frstpm(287
push
jnp
leave
xchg
xchg
jb
inc
into
jae
mov
pop
push
or
push
sbb
and
xor
adc
fbstp
dec
mov
cmp
mov
cmp
jl
xchg
aas
pop
inc
sbb
sarl
idivl
aad
pop
lods
inc
push
jge
mov
loope
cmp
cld
pop
rcrl
mov
fadds
das
adc
mov
popa
cmp
loop
aad
sub
or
and
mov
test
repz
add
xor
mov
mov
adc
test
push
out
ficoml
mov
pop
dec
les
leave
pop
xor
xchg
roll
and
subb
sbb
int
sub
dec
out
xchg
decb
cmp
sub
mov
inc
data16
pop
xchg
sbb
imul
test
cwtl
push
push
neg
lret
imul
mov
mov
or
push
pop
call
test
jl
mov
orb
xor
test
sbb
mov
xor
lds
and
push
movsl
mov
cli
cmp
cmpsb
mov
xor
inc
mov
push
adc
roll
sbb
shrl
popf
cmc
push
jmp
jno
mov
idiv
or
loope
out
shll
xor
mov
mov
lret
pop
mov
mov
adc
cmpsb
pop
mov
and
scas
adc
jae
push
stos
fildll
and
test
test
cli
cs
mov
cmp
push
lods
insl
test
push
add
or
or
push
dec
add
push
add
ljmp
cltd
adc
scas
sbb
jne
in
mov
mov
cmpsl
cmpsb
jo
das
cmp
sbbl
dec
mov
mov
fwait
or
mov
outsb
cmpsl
pusha
sbb
jecxz
adc
fs
enter
jnp
dec
push
es
mov
jecxz
push
ss
push
or
dec
mov
insl
mov
cmp
hlt
inc
sub
stos
roll
sbb
mov
pop
sub
aaa
cmp
cmpsb
cld
xchg
gs
cmp
sub
rolb
push
test
enter
pop
sbb
scas
cmp
push
out
cwtl
pop
fstpl
mov
cmp
in
pop
stc
mov
sub
jecxz
loop
rorb
fdivl
ljmp
negb
mov
or
inc
das
jmp
or
mov
dec
aad
pop
and
push
hlt
loop
cmp
pop
cmp
dec
fs
sub
jge
mov
inc
mov
bound
xchg
scas
cmp
arpl
jo
jg
xchg
mull
pop
outsb
ss
push
data16
test
xchg
push
pop
dec
scas
pop
add
mov
std
lret
ret
test
outsl
outsl
fcmovu
out
or
push
cs
and
dec
dec
repnz
mov
or
lds
sbb
or
outsl
mov
or
sub
daa
inc
sub
mov
inc
mov
ja
insl
movsb
xchg
jp
imul
cmc
int3
outsb
in
in
push
sub
mov
call
testl
push
add
sub
enter
cmp
into
adc
mov
add
fdivrl
pop
and
popf
orb
aad
ret
test
or
imul
out
jo
xchg
filds
lretw
jne
push
inc
cmp
mov
jo
jle
sbb
cmp
fwait
imul
testb
mov
and
or
sub
imul
pop
push
adc
pop
rolb
lock
add
adc
faddl
add
jle
lret
popa
idivb
popa
shll
loop
repnz
lret
pop
inc
rorb
xor
movsl
negb
add
sbb
cmp
inc
dec
into
subl
mov
out
push
cmp
jo
pushf
mov
inc
add
in
lahf
jp
in
arpl
mov
fwait
xorl
inc
fdivrs
pop
std
clc
adc
lcall
jp
and
std
repnz
shr
out
ss
mov
inc
cli
icebp
rorb
in
push
mov
jne
or
lock
xor
adc
xor
fdiv
lcall
test
movsl
mov
stos
lods
push
aam
movsb
dec
das
stc
cmp
lret
scas
inc
lcall
sbb
lcall
and
push
test
loop
pop
push
leave
push
imul
cmpsl
jb
cmp
add
andl
fsubs
xchg
out
pop
xor
pop
and
cmp
ret
xchg
pop
cmp
enter
leave
insb
addr16
mov
dec
inc
pop
sub
xchg
sbb
pop
mov
loope
lahf
pop
cwtl
je
movsb
out
popa
xchg
das
add
loopne
into
add
lahf
sbb
adc
xlat
ja
outsb
sbb
movsb
sbb
test
mov
cmp
dec
nop
sub
fsubrs
mov
jecxz
into
es
jbe
push
loopne
cmp
mov
dec
sbb
inc
mov
jle
xor
jecxz
add
cmp
call
flds
out
adc
cmpsl
dec
stos
movsb
and
and
xchg
dec
ret
stos
mull
xchg
adc
popf
imull
lods
cmc
in
ja
test
xchg
into
adc
stos
imul
adc
into
rolb
outsb
jbe
das
jb
push
dec
leave
xor
sahf
mov
add
push
inc
std
or
pop
push
outsl
sub
push
in
and
inc
cmp
mov
rorl
test
fldlg2
push
cmp
outsl
mov
add
or
iret
fcomps
sub
sub
push
dec
and
pop
mov
dec
cmp
cmc
imul
and
addr16
aad
int
rolb
push
inc
push
mov
cld
xor
shrb
sub
repnz
addl
or
push
in
test
pop
mov
cld
out
jb
cmp
push
inc
out
icebp
out
mov
sbb
cmpsb
adc
xor
sub
lahf
call
aad
jle
jbe
pop
lret
inc
xchg
nop
rcrl
rcr
imul
stos
or
ret
mov
fistpll
subl
xor
dec
xor
cltd
out
xchg
int3
inc
jbe
add
out
cld
pusha
inc
cmp
and
test
gs
dec
iret
repz
fnsave
mov
inc
dec
add
mov
mov
clc
in
xorb
cmp
mov
add
jle
and
insl
push
iret
js
inc
out
nop
mov
shlb
cmp
xchg
cli
sbb
xchg
and
jns
xor
iret
and
inc
xchg
xor
push
sub
and
scas
xchg
xchg
xchg
imul
pop
aam
mov
jmp
ss
cmp
xor
mov
fs
jbe
fiaddl
xchg
in
cmp
sbb
dec
testl
in
sar
and
mov
sbb
jb
push
pop
pusha
lret
ja
int
outsb
js
mov
jp
popf
inc
pop
jge
sbb
mov
inc
daa
ds
cltd
dec
sbb
inc
inc
imul
pop
mov
xchg
and
jno
inc
popa
sbb
xor
arpl
xor
xchg
mov
xchg
sahf
sub
xorps
jae
ss
mov
push
dec
mov
xchg
shlb
sub
xlat
xor
adc
cs
testb
push
sbb
decb
inc
inc
scas
dec
std
lods
jl
mov
test
lret
mov
adc
imul
xchg
cmpsb
pop
fcoml
rol
or
inc
out
sub
inc
roll
sub
mov
adc
in
jp
dec
stc
mov
cmc
negl
call
sub
aaa
push
adc
xchg
les
mov
mov
sbb
into
repz
jns
test
test
rorl
sbb
int
cwtl
inc
adc
mov
fs
je
cmp
rolb
pushf
xlat
leave
xorb
cmp
or
push
mov
in
lret
xor
sbb
xchg
stc
inc
mov
jb
stos
mov
cmp
aaa
in
cmpsb
das
mov
insl
add
sbb
pushf
cmp
jae
or
cmp
push
mov
xor
xchg
pop
rolb
imul
push
adc
xchg
jmp
sbb
adc
jmp
insb
xchg
lcall
fisubl
shlb
sbb
add
dec
inc
lcall
sahf
pop
xorb
mov
pop
arpl
js
out
sub
sbb
popa
fcmovb
or
and
and
fwait
push
mov
mov
mov
fucomp
adc
in
subl
mov
ds
pop
insl
cld
ds
push
mov
repnz
xchg
sbb
fsubs
pusha
rcl
cmp
adc
inc
les
mov
js
xchg
pop
jne
movsb
in
push
out
ds
sahf
dec
call
mov
xlat
mov
cmpsb
lret
frstor
in
paddusb
inc
xchg
push
scas
push
popf
cmp
ljmp
add
push
cmpsl
cmp
js
nop
fisubs
insl
mov
outsb
xchg
lret
pop
xchg
ss
dec
mov
jae
lret
sbb
mov
cmp
mov
loope
push
dec
adc
into
cmp
adc
jo
mov
es
push
mov
das
loope
sbb
sub
jae
ret
mov
cmp
shlb
lea
shrb
mov
and
jo
mov
push
add
mov
aad
stos
popf
add
xor
cs
mov
sar
cmpsl
or
fdivrl
push
sbb
lahf
inc
sub
aad
xchg
xor
xor
mov
jne
fdivrl
push
push
insl
mov
lea
mov
into
inc
and
xor
dec
fadds
sarb
xor
or
sahf
sub
addb
divps
or
outsl
xchg
or
jo
mov
and
gs
mov
into
daa
mov
xchg
xchg
inc
ret
adc
sahf
push
cmpsl
fdivrs
test
jns
incl
ljmp
mov
mov
sub
shlb
ss
pop
inc
sbbb
dec
in
cmp
dec
test
cmp
into
xor
add
mov
mov
test
faddl
daa
outsb
cmpsb
push
mov
xlat
jl
push
jecxz
add
repz
shrl
dec
mov
rcl
mov
jge
sarb
int3
mov
mov
repnz
add
in
in
icebp
jo
push
mov
insl
sbb
std
enter
pop
or
gs
add
mov
push
mov
push
movsb
jns
stc
in
aas
in
mov
cwtl
rolb
xor
shll
cmp
ficomps
test
mov
out
aaa
xor
jecxz
pop
rcl
scas
stos
xchg
popa
dec
xor
pop
and
pop
push
or
fwait
inc
mov
inc
xor
jecxz
aaa
xchg
inc
bound
fptan
or
cmpsb
mov
cmpsb
inc
dec
pusha
insl
cli
mov
fdiv
jmp
xchg
jge
add
jge
sbb
push
lret
mov
mov
js
jbe
adcb
and
mov
aas
ss
into
or
sub
jne
pop
inc
ljmp
sbb
int3
mov
cmpsl
or
dec
lock
dec
or
xor
fs
out
inc
rcrb
scas
pusha
jns
dec
popf
adc
mov
lods
sub
xor
pop
lock
rolb
outsl
sbb
mov
call
je
jmp
xor
jecxz
xchg
cmp
std
cmpsl
outsl
das
jp
inc
test
mov
arpl
or
lcall
mov
mov
out
jno
xor
xchg
je
in
fwait
cltd
mov
std
or
sub
gs
pop
xchg
mov
lea
and
adc
fs
cli
ret
gs
push
test
cltd
mov
jbe
outsl
and
stos
shlb
mov
cs
mov
inc
aad
bound
mov
ds
cmp
adc
mov
popf
pop
jbe
add
and
jmp
or
sbb
push
or
fdivs
daa
mov
lret
push
jmp
xor
inc
xchg
test
or
ffree
enter
imul
loop
out
inc
addr16
push
pop
dec
es
loop
aad
shlb
push
outsl
imul
or
mov
mov
jno
push
pushf
mov
dec
push
pop
les
fcomp
mov
fbld
std
xchg
mov
jl
xor
imul
mov
adc
inc
dec
stos
lods
pop
adc
push
fs
sbb
outsl
test
stos
je,pt
xchg
push
cmp
push
popf
add
imul
jmp
fwait
repz
lahf
inc
mov
push
out
push
fistps
add
push
xchg
fsubrp
scas
mov
loop
sub
jg
xchg
popf
dec
mov
sub
push
sbb
fnstenv
inc
push
jmp
mov
mov
mov
ss
stos
movsb
xchg
xchg
cli
ficoms
movsbl
test
pushf
inc
loopne
xor
pop
or
jmp
jmp
dec
outsl
loop
std
aam
pop
cmpsb
jnp
mov
push
xchg
dec
int3
dec
push
lea
hlt
mov
in
cmp
xchg
in
sar
fldl
out
nop
lods
jb
and
cli
add
hlt
test
add
ja
addr16
sbb
pop
lret
pop
xor
jb
pop
mov
popf
inc
mov
movsl
out
out
and
xchg
sub
xchg
pop
lret
dec
in
jge
inc
inc
dec
loope
jb
int
fisttps
xor
mov
add
push
push
ret
sbb
or
jle
out
dec
push
lea
inc
add
mov
test
outsl
jo
cld
sbb
sub
lock
stos
or
jp
movsb
mov
jbe
loopne
mov
dec
pop
adc
in
flds
dec
and
je
enter
dec
int3
or
rorb
mov
cmp
sbb
icebp
pop
sbb
sbb
push
and
sub
push
dec
adc
and
cmp
dec
addl
mov
mov
push
icebp
int3
mov
pop
lods
jmp
push
test
jo
adc
push
shlb
adc
nop
mov
enter
nop
test
sbb
out
add
mov
jne
ljmp
sub
or
adc
movsb
mov
das
xor
mov
push
mov
cmpsb
fstps
lods
xlat
stos
adc
push
in
jle
je
jo
clc
fwait
sub
inc
xor
scas
and
shrb
addr16
int3
sbb
push
sub
push
inc
cmp
enter
in
xchg
sub
inc
cmc
loop
mov
fdivrl
jo
test
pop
dec
arpl
js
out
jle
repz
insb
adc
stos
hlt
xor
and
dec
outsl
cwtl
call
imul
push
loopne
leave
jl
lods
int
adc
sbb
push
cwtl
push
ret
and
xor
rol
insb
enter
aam
mov
fsubrs
cmp
and
mov
sti
addb
test
pop
mov
lds
jno
add
test
dec
loop
mov
popa
jb
add
std
adc
dec
fucomip
adc
in
sbb
xorl
cmp
addr16
and
fnstcw
cmp
jl
out
xchg
pop
out
test
pop
mulb
push
aaa
pusha
mov
loope
dec
ds
mov
push
xchg
xchg
pop
mov
lods
incb
jg
add
adc
adc
or
and
inc
push
mov
fisubrl
bound
leavew
mov
nop
imul
scas
sti
std
fistps
push
jo
daa
js
mov
out
cmp
aad
xchg
addr16
rcrl
test
mov
fmull
aaa
mov
js
pop
and
scas
mov
cmpsb
pop
jmp
out
dec
popf
stc
dec
ljmp
sub
adc
rorl
lret
inc
int3
add
mov
das
pop
cmc
loope
fwait
lea
aas
sbb
or
pop
movsl
aas
imul
data16
and
arpl
aas
xor
outsl
loop
rol
mov
mov
out
pop
hlt
pop
dec
aam
ljmp
lcall
dec
jge
xchg
cmpsb
lcall
or
stc
xor
in
fildl
ret
sarb
pop
jge
movsb
pop
dec
cmp
lea
mov
sub
or
mov
lock
pop
es
out
popa
and
xchg
cltd
push
push
jle
add
sbb
push
sbb
add
div
repnz
popa
pop
sbb
add
inc
popa
adcb
pop
add
ficoms
imul
or
push
dec
fdivs
inc
mov
pop
inc
and
mov
push
jns
nop
inc
out
imul
jecxz
dec
pop
repnz
and
push
add
jge
outsb
mov
stos
jmp
or
imull
nop
lret
lock
test
sahf
jmp
enter
inc
lea
les
sarl
cmp
or
ds
and
push
lret
daa
dec
adc
add
push
mov
xor
int
std
or
outsb
rcrb
adc
cmp
movsl
mov
hlt
or
jmp
and
sbb
out
mov
repz
movsl
xor
cltd
loope
cmp
ds
mov
add
orl
aas
dec
ss
fdivrl
xor
fsubl
fsubs
jge
lods
loop
int
or
pushf
fdivl
mov
xchg
xor
push
mov
xchg
jae
push
mov
push
int3
mov
nop
mov
in
push
xchg
mov
mov
cli
dec
xchg
add
push
cmpb
fs
inc
pop
lds
xor
out
cmp
aaa
call
call
loopne
push
in
jmp
pop
aam
mov
mov
dec
xchg
cmpl
jmp
jae
mov
dec
aam
rcrl
sbb
jae
xchg
sbb
jb
fsubp
call
pop
insl
adc
subl
xchg
add
pop
call
fbld
xchg
push
fmulp
and
insl
mov
jb
inc
fisubs
jnp
jge
mov
cmp
pop
shrl
sbbb
daa
pop
mov
fmull
es
jmp
adc
mov
push
inc
nop
dec
imulb
insl
push
add
out
cmp
adc
outsl
push
mov
inc
sti
xor
ja
push
cmp
call
xchg
bound
shll
dec
fs
popf
jmp
and
xchg
roll
insb
ss
scas
idiv
push
push
sbb
lods
ss
sarb
cwtl
enter
and
pop
push
cmpsb
les
add
fcmovnb
inc
mov
adc
dec
or
dec
push
dec
hlt
inc
adc
jno
arpl
loope
call
aaa
cwtl
mov
xor
sbb
repz
rol
pop
ljmp
fbstp
xchg
movsl
out
jbe
cmp
lahf
sbb
lret
leave
hlt
subl
fdivs
ror
push
or
inc
scas
dec
or
adc
or
dec
dec
dec
in
shrb
lahf
mov
sub
inc
xchg
popa
fiaddl
mov
out
inc
inc
mov
mov
leave
ficoms
pop
pop
data16
insl
pop
cmpsl
or
adc
ljmp
and
pop
jmp
add
insb
mov
ljmp
loope
push
pushf
test
mov
leave
xor
cld
or
test
xor
nop
dec
fadds
jge
lcall
data16
push
outsl
test
in
push
das
hlt
pop
jmp
sbb
push
push
les
xchg
push
out
sbb
sub
jle
sti
repz
test
out
mov
ss
jo
je
add
cwtl
sahf
call
cmp
scas
cs
pop
pop
popf
hlt
roll
xchg
jnp
lcall
in
sbb
sbb
xchg
cmc
ret
xchg
aad
mov
mov
xchg
mov
inc
adc
mov
xor
fwait
mov
inc
sub
and
rol
and
ret
add
mov
or
dec
xchg
inc
mov
or
and
lahf
cli
add
pop
int
lock
test
mov
or
aaa
cmpb
lret
mov
lahf
loope
push
mov
jnp
mov
in
xchg
aam
in
pop
push
sbb
pop
cmc
mov
test
and
psubusw
cmp
insl
pop
mov
mov
sbb
pop
fcmovnu
push
add
inc
pop
jmp
cltd
xchg
mov
test
js
lds
add
mov
test
bound
ja
sbb
sbb
mov
mov
jne
jl
sub
jno
scas
xchg
push
push
jp
pop
push
fwait
shrb
movsl
xchg
mov
aaa
pop
pushf
icebp
sbb
fldl2e
xchg
scas
dec
mov
adc
adc
fwait
das
scas
cmp
leave
add
mov
xchg
les
push
pop
insb
inc
aaa
cmp
lds
scas
add
push
daa
clc
out
mov
call
or
call
mov
cmpsb
addr16
or
cs
lods
pop
and
sbb
pop
sahf
xor
jo
scas
jp
mov
test
adc
or
clc
pop
popa
inc
push
daa
fs
adc
and
xor
jo
rcr
mov
xchg
jmp
jns
aaa
decb
jmp
je
arpl
idiv
mov
call
mov
pop
push
jne
lods
inc
pusha
rclb
aad
add
testb
push
cmp
xchg
add
int3
cmp
push
inc
data16
fwait
cwtl
sub
outsl
cmp
adc
adc
jg
sbb
lds
orl
fs
xchg
sbb
fisubs
rcrl
sbb
fdivrl
out
add
push
inc
cmpb
movsl
sbb
cmpsl
cli
imul
adc
xor
cmpsb
mov
and
sub
or
sub
gs
ljmp
and
call
sbb
dec
add
je
xor
andl
aas
stos
std
insb
sti
inc
int3
inc
ljmp
xlat
xor
sub
repz
cmp
sub
sub
scas
loopne
cmp
xor
sbb
mov
mov
lcall
cmpsb
ret
mov
sbb
jge
mov
jnp
mov
xchg
movb
mov
xchg
pop
call
push
popa
sbb
adc
cmp
sub
out
cmpsb
call
ljmp
mov
inc
inc
mov
pusha
add
lret
and
out
clc
mov
inc
repz
movsl
mov
sub
lds
arpl
mov
and
fcmovu
xchg
outsl
mov
pop
mov
inc
fcoml
mov
movsb
pop
sbb
inc
mulb
mov
lds
push
and
add
push
flds
mov
adc
pop
xchg
or
push
scas
xchg
mov
pop
and
jp
dec
mov
push
loope
sub
stc
loope
sub
add
popf
jg
in
pusha
inc
xchg
scas
insl
lahf
xor
js
or
push
mov
sbb
cmova
mov
int3
sbbl
andb
xchg
inc
decl
add
mov
push
std
sbb
test
jmp
xor
or
xor
adc
push
fsubr
lahf
test
mov
mov
inc
xchg
inc
icebp
sub
jl
inc
xchg
mov
pushf
or
pmaxub
xchg
and
mov
stos
subl
out
sbb
mov
inc
or
es
mov
dec
cmp
adc
mov
lds
jp
in
cmp
out
icebp
bound
and
call
stos
popf
adc
push
dec
xchg
mov
mov
data16
jle
jp
test
fstl
addr16
addb
outsb
sub
stc
mov
shr
rcll
stos
hlt
and
and
xacquire
cmp
imul
cld
cmpsl
mov
sbb
int
mov
jb
ret
shrb
jecxz
cmp
sti
fdivs
out
jno
mov
fcomi
into
and
mov
pop
and
sub
mul
ljmp
clc
arpl
push
xchg
in
jns
cmp
inc
mov
loop
loop
in
loop
loope
imul
mov
adc
jns
sbb
int
mov
in
jle
mov
xor
test
adc
pop
sbb
add
aas
inc
insb
xchg
dec
jo
push
scas
dec
insl
adc
jecxz
iret
and
jg
xchg
xchg
xor
in
je
mov
sarb
push
shrb
test
enter
mov
adc
mov
pop
and
or
lahf
xlat
mov
push
cmp
pop
jno
shlb
push
or
jp
in
jmp
adc
mov
sub
jno
enter
fsubl
sahf
das
ret
jb
xor
xor
dec
clc
popa
sub
jno
mov
out
mov
push
inc
mov
jne
out
aas
cmpsl
inc
dec
mov
mov
xchg
mov
add
out
mov
sbb
iret
arpl
aaa
leave
jns
arpl
cs
imul
cmp
mov
cmp
insl
and
add
fmulp
cmp
adc
js
push
mov
aad
or
sbb
data16
jae
xor
push
das
jg
or
cwtl
mov
push
cmpsl
jb
push
xchg
xchg
icebp
outsb
jmp
sub
xor
shlb
jno
mov
test
lods
movb
xor
into
cmpsl
sub
inc
mov
push
es
sub
gs
dec
lea
hlt
add
mov
xchg
pop
jge
loopne
stc
ds
in
mov
je
mov
or
scas
xchg
jg
ds
fbstp
dec
mov
push
mov
and
cmpsl
cmpsb
enter
jmp
or
call
xor
sub
test
cmp
xchg
outsb
mov
rclb
cld
enter
fisttpl
outsl
pop
fimull
push
shll
sti
cmp
push
mov
cmpsl
inc
add
inc
inc
jl
ja
mov
jae
and
jge
push
push
lahf
and
jge
mov
js
mov
aad
stos
add
mov
sub
out
or
sarl
sub
cmpb
aaa
push
jns
sbb
movsl
mov
xorb
dec
or
cltd
out
std
dec
pop
bound
jle
bnd
sti
sub
andb
mov
shrb
stos
scas
scas
les
push
sbb
mov
add
pop
jecxz
out
jbe
mov
lock
pop
mov
cmp
fwait
mov
dec
loope
jb
cli
inc
int
add
ret
cmp
inc
mov
mov
xor
push
aam
mov
fsubs
push
xchg
mov
js
xor
out
stc
cmp
mov
ljmp
sbb
ret
gs
sti
xor
push
outsb
pop
addr16
mov
data16
mov
stc
pop
and
and
mov
scas
and
dec
adc
inc
scas
int3
out
aad
idivb
repz
adc
nop
nop
xor
ja
cmc
pop
stos
inc
in
mov
jmp
push
imul
scas
sbb
pop
or
cmpsl
xchg
in
mov
mov
mov
shll
addr16
mov
pop
xchg
adcl
mov
xabort
inc
faddl
fistps
mov
je
fmuls
mov
mov
icebp
inc
mulb
shrl
iret
and
loopne
cmp
add
pop
gs
adc
xchg
enter
and
xchg
into
ja
cmpsb
pop
enter
addr16
mov
inc
jmp
xchg
call
test
xlat
mov
int3
imul
les
inc
xor
adc
add
into
mov
push
pop
test
push
mov
dec
iret
stos
stos
jecxz
repnz
or
icebp
lods
mov
jl
add
xchg
arpl
push
jg
icebp
and
xor
xchg
mov
sarl
addb
lods
jo,pt
or
in
pop
cmp
inc
mov
lock
jmp
icebp
aam
pop
sar
stc
mov
sbb
cmp
es
aaa
shrl
movsb
cmc
jno
jg
fwait
dec
fs
or
mov
cmpsl
fld
notl
cmp
mov
lcall
and
lcall
cld
jae
cmp
arpl
add
adc
pop
mov
stos
lods
fstl
imulb
repnz
push
fcmovbe
push
or
repnz
jns
mov
sbb
std
and
push
jno
fwait
out
fadds
std
jmp
adc
mov
out
test
add
dec
hlt
cmp
jl
push
mov
mov
stc
mov
arpl
adc
ljmp
sbb
imul
pop
pop
dec
pop
sub
sbb
daa
push
clc
xchg
fcoml
stos
xor
shll
pop
pop
or
daa
lock
push
aas
cmp
mov
inc
inc
jp
sub
hlt
dec
outsl
outsb
int3
stos
std
scas
jle
cmp
sahf
out
mov
mov
and
jns
mov
sarb
dec
dec
pop
jo
fcoms
push
xor
push
xchg
sub
jp
sbb
jl
sbb
mov
adc
mov
dec
scas
addl
andl
popa
sarb
jo
insl
mov
and
xchg
mov
loope
xorb
mov
xor
imull
stos
dec
mov
neg
rcr
pop
stc
sti
cmp
cmp
mov
adc
loopne
xor
or
sub
pop
mov
rolb
push
inc
ljmp
rolb
loope
sbb
lods
mov
idivl
dec
push
mov
and
ljmp
dec
lcall
mov
push
stos
inc
pushf
hlt
andl
repz
dec
add
call
and
and
adc
ljmp
loop
or
mov
cld
jne
pop
lea
pop
hlt
mov
ja
aaa
jnp
popa
hlt
lods
sub
pop
jp
push
mov
cmp
shll
sub
mov
ret
dec
pushf
xor
and
dec
into
inc
xchg
out
add
or
stos
dec
test
fucomi
xchg
addl
push
or
adc
push
pop
xchg
fdiv
xor
into
cmp
cli
lock
dec
jl
outsb
scas
mov
or
jo
mov
add
adcb
or
mov
test
add
lods
aad
stos
mov
movsl
sub
dec
test
cmp
cmp
cmpb
mov
sub
and
mov
mov
xchg
xchg
aad
dec
cltd
mov
add
dec
xchg
xchg
jp
push
xorb
sub
cmc
add
je
mov
int3
xchg
dec
pop
jecxz
or
push
addr16
mov
mov
test
xor
push
push
xchg
loop
lea
enter
in
adc
iret
sub
mov
push
call
jge
sbb
mov
cli
hlt
xlat
fs
lret
and
bound
xchg
cmp
lea
mov
pop
in
xchg
and
mov
jmp
push
jnp
jecxz
loope
aad
daa
sub
testb
fs
pop
repnz
mov
sub
mov
and
test
les
test
jp
cmc
popf
lock
add
sarl
addl
jmp
add
cs
test
sbbb
cltd
xchg
sub
scas
add
stc
out
push
jne
arpl
inc
iret
adc
sarl
pop
sbb
sub
sahf
mov
fwait
lahf
gs
xchg
js
cli
fs
cwtl
xor
xor
bound
fstps
jno
inc
jbe
xor
addr16
aam
jmp
mov
or
or
pop
jecxz
mov
lds
sub
sbb
fisttps
sbb
cmp
cmp
fildl
xchg
sbb
lret
xchg
lahf
insl
cmp
jecxz
xchg
aad
roll
xor
testl
mov
add
mov
pusha
incl
pop
das
std
xchg
pop
fstpt
mov
sar
dec
cmp
fistps
push
cmpb
fldl
les
add
insb
push
pusha
pop
mov
js
orl
mov
mov
fidivrs
ss
fcoms
mov
iret
jle
xor
jbe
inc
xchg
add
leave
sub
wrmsr
stc
sbb
mov
inc
cs
cwtl
and
mov
rcll
dec
add
arpl
or
pushf
and
inc
cli
pcmpgtb
ret
mov
cmp
xor
cwtl
or
out
test
jae
push
loop
rol
and
scas
push
sub
mov
pushf
dec
push
test
sbb
fcomi
push
pop
cmpsl
jmp
jns
xor
jo
jno
test
push
inc
xor
and
neg
sbbb
lea
jge
xchg
pop
ljmp
fstp
or
add
push
pop
mov
loopne
add
cmpsl
sub
xor
aas
sub
sub
testb
xorb
aaa
push
mov
xlat
hlt
xor
cwtl
cli
xor
lcall
das
dec
xor
test
dec
jmp
xchg
fisttpll
shll
dec
inc
pop
mov
pop
imul
fstpt
jns
aam
lret
fdivp
adc
xchg
mov
adc
aas
mov
outsl
adc
pushf
cs
sbb
into
pop
ss
in
jle
sar
lock
es
pop
jae
es
cld
cwtl
stc
out
jmp
enter
aam
or
mov
les
leave
in
int
add
imul
ds
iret
or
lret
mov
xor
and
adc
aaa
pusha
xchg
jns
jmp
push
add
aam
lret
dec
add
pop
xor
or
cmc
std
mov
pop
adcb
lods
sbb
ret
enter
gs
or
testb
sbb
sti
bound
and
fmuls
cli
sub
cmpsl
imul
cmp
lret
outsb
test
fnstsw
movb
dec
dec
cmpb
inc
adc
pop
ret
inc
in
xor
mov
int3
inc
cmp
dec
mov
mov
and
js
insl
push
scas
mov
jg
lcall
jmp
inc
add
pushf
arpl
mov
cmpb
dec
and
xor
xor
lods
mov
pop
cmc
mov
inc
ss
fdivrs
jge
mov
mov
xor
or
add
push
jo
clc
pop
iret
jnp
out
fcoml
ss
fmuls
push
cmc
outsl
sub
cmp
mov
aaa
push
ss
push
jne
and
or
push
iret
xor
mov
push
call
jb
mov
imul
pushl
sub
iret
dec
push
aam
dec
mov
das
inc
fwait
or
xor
repnz
lea
cmpb
adc
cmp
shlb
jl
daa
arpl
in
mov
icebp
push
sti
mov
sbb
xchg
push
pop
and
push
mov
insb
push
stos
clc
test
mov
das
movsl
add
xor
movsb
push
insb
dec
addb
push
xor
add
sub
loop
pop
sub
insb
hlt
and
xchg
addr16
pop
mov
adc
insb
jnp
push
pop
sbb
adc
pop
hlt
push
sbb
mov
sbb
cmpsl
xchg
sbb
jnp
sti
leave
xor
sahf
shl
rcrb
imul
cmpsl
mov
sub
adc
fwait
push
mov
push
leave
hlt
xchg
mov
xchg
sarb
sti
cli
in
mov
lret
loop
push
mov
xlat
pop
mov
mov
push
test
xchg
adc
jecxz
lods
sbb
popa
cmpsb
push
and
adc
xchg
and
add
imul
mov
push
pushf
jne
add
mov
in
or
push
jp
push
and
ror
add
pop
push
mul
not
inc
movsl
divb
mov
jns
cmp
fistpl
mov
das
out
cmp
inc
or
push
dec
push
add
or
push
inc
pushf
cmovns
cmp
aam
add
xchg
and
sub
dec
cmp
call
xchg
xchg
xchg
mov
nop
lds
scas
stc
mov
adc
xchg
enter
dec
xchg
in
popa
loopne
aad
fisttpl
lahf
sub
int
dec
cmp
cmp
xor
das
pop
inc
pop
out
pop
mov
push
fbstp
dec
jnp
push
cmp
andl
and
adc
dec
lret
push
xchg
test
xor
int
sub
call
cmp
mov
ljmp
repz
mov
roll
sbb
mov
cmpsl
add
xor
push
push
mov
pop
xor
add
jl
dec
mov
adc
and
notb
xchg
dec
rcll
add
out
movl
jb
mov
les
into
lds
inc
xchg
into
dec
xchg
out
lods
cmc
mov
inc
or
push
clc
call
mov
in
mov
das
fnclex
mov
std
rclb
shrl
sbb
sahf
aaa
cmp
shl
mov
out
adc
push
lahf
sarl
mov
push
stc
repz
cli
adc
pop
push
std
adc
xlat
pop
pop
mov
xor
stc
js
js
mov
mov
out
mov
pop
push
out
sbb
popa
pop
andl
inc
notb
icebp
pop
xlat
cld
stos
gs
xchg
outsl
adc
int3
mov
sub
mov
mov
lahf
nop
test
leave
cmp
lock
test
cld
pop
lahf
mov
dec
and
mov
push
adc
or
das
inc
dec
mov
xor
jge
xchg
and
sti
clc
xchg
lcall
outsb
aas
cmpsb
hlt
shl
fwait
sub
jne
sub
pop
push
xchg
sub
fcomps
jno
cmp
push
mov
loopne
dec
shrb
subb
outsb
or
cmp
test
ficompl
pop
mov
lods
int
ds
test
sub
pushf
rolb
and
pusha
sbb
pop
mov
sti
or
jae
jb
mov
xchg
cli
jg
sub
icebp
jl
inc
call
mov
cmpl
std
aad
or
lods
mov
movsl
in
dec
aas
mov
les
add
adc
mov
lret
adc
push
pop
les
xchg
lods
fisubl
cwtl
fbstp
cmpsl
mov
int
xchg
mov
mov
xor
mov
cwtl
dec
imul
int3
cmpsl
movsl
es
dec
push
mov
pop
push
cmp
in
jno
adc
call
mov
mov
jo
push
ret
cmp
jle
pushf
sbb
mov
mov
jnp
leave
push
call
push
adc
pusha
dec
pop
test
gs
test
loope
aam
inc
push
push
in
or
bound
and
loope
ds
repnz
dec
lret
iret
call
loopne
loop
jae
sub
inc
mov
cli
outsl
into
sbb
mov
jp
into
fwait
aas
xchg
inc
aas
mov
xor
push
push
jl
push
xlat
xor
inc
fld
movsl
rcl
adc
ficomps
pop
insb
mov
add
cltd
repnz
pop
addb
mov
sub
adc
or
pop
rolb
sub
ds
nop
sti
bound
fidivl
lcall
ljmp
mov
cmp
aas
inc
cmp
and
xor
or
cs
sub
xchg
pusha
out
cmp
sbb
pop
ja
pusha
into
adc
add
mov
adc
insl
sti
xchg
das
out
cmpb
aad
mov
lds
fcmovne
icebp
xchg
int
xor
clc
jnp
in
pop
stos
loopne
xchg
adc
sub
xlat
mov
les
sahf
xor
les
insb
pop
inc
or
fadds
rcl
sbb
push
add
inc
aad
jg
jns
scas
nop
das
sbb
out
push
pop
je
mov
jl
xorb
sbb
cmpsb
push
rclb
sub
add
into
cmp
lock
roll
xchg
add
sti
pop
dec
cmp
mov
push
mov
jns
addr16
xchg
lahf
cmp
dec
mov
jb
adc
pop
icebp
into
lahf
jecxz
call
stos
movsl
lods
fsubrl
or
enter
hlt
jmp
mov
sbb
clc
adc
cmpsl
jne
mov
jmp
bound
xlat
lods
mov
pop
sbb
das
call
out
jae
ds
lcall
rcrl
filds
pop
mov
add
xchg
test
push
leave
lahf
outsl
out
lods
sbb
jle
add
out
sub
xchg
movsb
adc
fsubrl
bts
in
sahf
adc
inc
arpl
jno
test
shll
sbb
hlt
xor
jle
mov
xor
jns
add
cmp
sub
les
adc
push
pop
jno
inc
pop
cmp
stos
ret
dec
fwait
jp
icebp
fwait
rorb
scas
push
add
jmp
pop
cmp
or
jl
lcall
shll
xchg
or
jecxz
icebp
jecxz
dec
mov
push
or
cmpsb
xchg
sub
xchg
ds
mov
push
pop
jmp
mov
jge
out
roll
jmp
jae
xor
xor
dec
jo
fildll
sub
insb
dec
or
sub
sub
in
adc
cmpsb
ret
ret
fld
sbb
mov
or
mov
arpl
mov
xlat
sbb
pop
stos
leave
push
pop
test
jge
div
bound
das
cmp
test
mov
jecxz
clc
mov
inc
cmpsl
into
inc
sarb
pop
add
xchg
cwtl
jmp
fst
lods
ja
push
ret
jecxz
cmp
push
jg
pop
jno
xor
push
add
mov
sub
sbb
and
and
fbstp
dec
adc
out
popa
xchg
lock
xlat
add
data16
sbb
push
adc
les
adc
in
add
inc
dec
std
and
xchg
mov
mov
jle
xchg
xor
sub
fidivrs
sbb
in
lret
jmp
or
inc
daa
repnz
ret
fwait
into
xchg
aaa
add
push
roll
jo
xor
insb
rorb
daa
cwtl
mov
push
sub
call
in
shll
sbb
inc
cmc
notl
jg
mov
jae
cmpsb
stc
jle
mov
sti
jnp
scas
out
sbb
data16
dec
pop
repnz
jne
xchg
xor
mov
insl
inc
mov
adc
movsl
ja
test
fstpl
add
shrb
cmp
dec
jp
fwait
orb
adc
mov
mov
scas
lret
dec
cmc
lods
data16
pop
push
shlb
adc
fidivrl
jg
xchg
xor
mov
sti
xor
ds
in
pop
rorl
push
adc
jle
sti
imul
popf
pop
mov
inc
push
lret
adc
sahf
lret
repz
jno
sub
popa
hlt
mov
dec
sub
add
mov
mov
outsl
lods
test
or
out
iret
test
mov
cltd
add
dec
pop
jge
insb
push
xchg
jle
movsl
insb
jl
inc
mov
cmp
jb
xor
xor
pop
inc
xchg
cli
scas
jae
xchg
cltd
jecxz
and
and
sbb
ljmp
cmc
rclb
adc
dec
gs
stc
cmp
andb
pop
sub
shrb
inc
stos
sub
repnz
cmp
mov
fcomi
nop
or
loopne
nop
out
int
sub
jne
cltd
cmpsb
loope
sub
sahf
xchg
push
dec
pop
lret
call
mov
loopne
fists
clc
mov
sub
mov
lods
mov
mov
mov
pop
insb
insl
rol
sarl
sbb
mov
dec
sub
dec
jne
cmp
sbb
sbb
mov
sbb
cs
cmpsl
mov
mov
idiv
push
mov
xchg
rorl
daa
aad
adc
dec
mov
cli
cwtl
aas
imul
fsubrl
fwait
mov
fistps
loopne
lods
movsl
cmp
jb
insl
faddl
imul
dec
int3
mov
mov
cmpsl
in
out
lret
pusha
lock
stos
jbe
and
mov
stos
dec
and
sti
inc
and
pop
hlt
test
addl
push
jmp
scas
movsl
pop
outsb
xchg
push
mov
inc
mov
fwait
jmp
cmp
dec
loop
rorl
insl
sub
inc
sbb
pop
aad
xchg
or
pusha
adc
arpl
out
push
lods
push
sub
std
adc
mov
into
xchg
lcall
mov
das
stc
sbbb
addl
push
jo
fsubr
cld
out
lods
fdivrl
idivl
mov
mov
xchg
and
fstl
int
cmp
xor
pop
aam
mov
xchg
popa
sub
dec
mov
pop
das
sub
enter
test
push
cld
sbb
push
xor
daa
adc
mov
jp
roll
jae
xor
mov
fdivp
or
icebp
ss
stc
jo
nop
sbb
jae
lods
pop
daa
js
dec
and
outsb
daa
aas
sub
lahf
add
xchg
inc
lods
sahf
not
gs
jecxz
cltd
pop
repnz
pop
div
insl
mov
shll
outsb
mov
fdivrs
xchg
cmp
cmp
xor
in
mov
ja
dec
mov
mulb
sub
or
cs
xor
pop
cmpsb
notl
mov
cmp
insb
jle
sub
cmp
adc
cltd
add
pushl
mov
aad
into
push
insb
dec
xchg
rcrb
pusha
mov
loopne
cmpsb
call
mov
ffree
sub
xchg
test
add
test
sbb
ret
icebp
mov
pop
push
and
and
cmp
dec
mov
mov
sahf
mov
fadd
adc
jmp
pop
rcr
sub
xorb
adc
xchg
mov
fstps
lea
sbb
sbb
in
cmpsl
movsl
shll
dec
sub
insl
add
fs
loope
push
stc
mov
imul
mov
js
dec
out
in
xchg
fdivr
lcall
adc
popf
stc
jae
jmp
push
inc
xchg
push
mov
mulb
cmpsl
add
xor
out
xor
mov
into
xchg
mov
dec
jo
inc
push
or
fstpl
xchg
xor
pop
aam
lods
ret
push
mov
sbb
jns
mov
push
andl
jp
and
sbb
test
aam
imul
or
sbb
adc
dec
jle
mov
jne
out
pusha
cmc
fists
mov
xchg
data16
add
xchg
ret
jno
or
push
in
in
jg
rcr
and
and
jecxz
cltd
mov
into
hlt
out
in
arpl
mov
mov
repnz
ret
sbb
mov
and
je
or
and
icebp
sahf
repz
xchg
outsb
add
push
xchg
mov
mov
repz
cmc
pusha
xchg
jae
flds
cmc
cli
mov
cmp
scas
aaa
push
fcmovb
inc
cli
gs
sbb
aad
mov
ss
shll
lahf
adc
int
mov
pushf
xor
sub
stc
mov
shll
push
rorl
bswap
or
cld
sub
add
dec
enter
jle
mov
xchg
sar
int
push
pop
sbb
mov
dec
push
pop
loopne
inc
pushf
add
adc
and
add
sbb
jg
stc
push
in
sbbb
sbb
cwtl
pop
xchg
adc
std
add
fisubl
or
sbb
push
cltd
out
movsb
push
and
dec
jno
cs
push
dec
ljmp
pop
testl
add
mov
jb
andb
xchg
stos
scas
pop
and
inc
daa
idivb
nop
xorl
push
xchg
js
data16
cmp
or
hlt
cld
pop
out
ret
mov
lret
jb
stos
cmpsl
sub
icebp
jb
xchg
push
jmp
push
mov
outsb
lods
addr16
push
xchg
push
fs
jo
rcll
pop
inc
or
pop
test
sub
pop
pop
add
pop
mov
fcompp
xor
mov
stos
out
xchg
aaa
mov
push
negb
fisttps
rorl
jle
xor
pop
repnz
pop
cwtl
jae
and
insb
pop
cld
cmp
dec
xchg
das
dec
mov
shrl
add
mov
mov
es
aam
push
jns
test
xlat
movsl
hlt
in
lfs
std
popa
pcmpgtb
jb
iret
pushf
xor
jb
jecxz
xchg
xor
mov
inc
pop
std
add
bound
mov
pop
cwtl
test
xchg
lret
insl
pushf
iret
lahf
leave
test
mov
xchg
out
sbb
addr16
ss
paddd
shrb
cmp
int
cltd
sub
iret
test
jae
insl
es
add
mov
push
or
xchg
loop
dec
shr
mov
test
rorl
out
fisttpl
sub
push
inc
outsl
jge
or
mov
jle
jno
rep
jg
in
sub
jb
rolb
xchg
mov
xchg
inc
inc
push
xor
iret
ss
xor
fnstenv
cltd
sahf
push
pop
mov
mov
mov
jp
push
imul
or
inc
sub
inc
out
aas
repz
cmp
or
fisttpl
lods
mov
add
stc
xchg
stos
icebp
cli
dec
jge
sbb
stc
in
jge
jg
pop
and
adcb
pop
roll
daa
push
fists
or
mov
jp
xchg
add
xor
mov
hlt
add
loopne
xor
sbb
lods
mov
pusha
std
push
iret
xchg
pop
leave
out
and
dec
insl
fistps
or
xchg
std
jge
aam
and
pop
xchg
mov
out
mov
in
mov
push
jne
in
cs
xchg
sti
mov
ds
xchg
push
loop
aaa
fwait
hlt
testb
mov
fsubr
mov
les
fidivs
sbb
jg
mov
daa
lret
subl
pop
shufps
pop
loope
ret
out
stos
test
and
sti
xorb
in
cmp
pushf
add
fimuls
mov
sbb
add
arpl
pop
dec
mov
in
push
out
or
inc
sub
repz
stos
mov
and
cmp
xchg
xchg
mov
jo
orb
je
negl
popl
popa
fsubl
cmp
popa
fdivr
or
lods
out
aas
mov
jne
mov
push
xor
ds
fdivrl
mov
jno
hlt
mov
int3
inc
clc
jne
xchg
hlt
inc
push
gs
fucomi
push
cld
mov
and
xchg
jo
adc
ljmp
push
sarb
inc
fstps
and
xchg
mov
jne
lret
push
sbb
sbb
iret
sbb
cwtl
and
inc
lret
outsb
aas
in
mov
push
in
out
dec
daa
cmp
add
sbb
lcall
lock
xchg
repz
sub
mov
insl
arpl
in
fstps
enter
lods
mov
addr16
popf
push
add
imul
pushf
stos
sbb
cmp
ret
mov
adc
in
pushl
aad
popa
mov
mov
lds
test
subl
lods
data16
mov
jmp
pop
mov
clc
cmp
dec
lods
out
insl
das
mov
jmp
pusha
xor
stos
mov
lahf
or
xchg
mov
sbb
ret
hlt
stos
mov
pushf
lret
outsb
xchg
jp
add
in
arpl
sbb
sub
pop
dec
adc
cs
inc
aad
and
jecxz
adc
or
cmp
sub
outsl
jbe
out
pop
mov
fidivrl
pop
push
xor
sbb
sbb
fwait
sbb
cli
ds
pusha
or
fchs
mov
lcall
jns
jno
jb
movsb
xlat
test
push
shlb
stc
mov
div
xchg
ficoms
or
scas
movsb
loopne
push
push
rorb
lods
mov
cltd
arpl
pop
jb
jnp
into
push
and
arpl
pop
daa
jbe
insl
pop
cli
sbb
mov
inc
mov
test
jbe
insl
add
push
out
pop
jecxz
clc
cwtl
xchg
sub
mov
jns
push
inc
fs
inc
xchg
or
popa
jmp
std
dec
je
sbb
dec
inc
outsb
in
gs
jae
fsubrs
icebp
enter
mov
cmp
cmp
cmp
dec
ss
fildl
dec
xchg
mov
mov
sub
fcmovnb
aad
mov
mov
jns
fcmovnu
sbb
push
jge
xchg
mov
aaa
or
push
mov
jle
push
dec
dec
in
add
testl
lock
hlt
dec
outsb
es
inc
sbb
mov
pop
xchg
scas
outsl
dec
add
cmp
rol
scas
es
or
lea
ds
xor
movsl
repz
fsubrl
data16
mov
fdivr
cmp
inc
lods
fwait
test
or
mov
sbb
xchg
push
push
mov
sub
cmpsb
fucomip
xchg
inc
pusha
add
cs
or
loope
xchg
jb
xor
fbld
adcb
xlat
sahf
dec
pop
add
and
pushf
aam
jo
out
and
jecxz
xchg
xor
jge
ret
jne
insb
xchg
jb
pop
dec
mov
push
in
cli
sbb
pop
rclb
cld
mov
sbb
xchg
jp
pop
mov
lcall
call
jns
push
dec
sub
add
sub
sbb
aam
and
mov
aam
shl
push
xor
lds
pop
mov
push
imul
xor
xor
aas
icebp
lret
adc
mov
mov
insl
push
lret
adc
mov
inc
ljmp
xchg
fisttpll
mov
xor
xchg
jmp
enter
fstps
cmp
leave
into
cs
icebp
xor
add
xor
jns
dec
mov
mov
push
into
jp
xchg
mov
bound
push
dec
repnz
adc
mov
sbb
sbb
and
jae
loope
std
in
or
or
mov
pusha
xchg
dec
mov
push
dec
adc
inc
sub
and
sahf
push
fwait
cs
xchg
dec
int3
ljmp
sub
add
push
lret
call
mov
cmp
inc
xchg
jmp
jno
adc
or
mulb
xchg
loope
test
sub
aad
ljmp
sbb
dec
imul
cmpsl
dec
insb
movsl
pop
xor
cmp
mov
std
inc
xchg
push
lods
jmp
jns
outsb
jae
add
in
imul
sbb
adc
hlt
push
cmp
incb
jge
cmpsb
shlb
mov
jbe
loope
pop
pop
sbb
fistpl
in
adc
ja
pop
insl
out
mov
les
sbb
movsl
or
xchg
xor
fcom
jecxz
dec
sbb
icebp
jge
xor
popf
jo
rol
mov
adc
push
js
and
sub
mov
pop
pop
dec
adc
pop
xchg
push
and
xor
xlat
sub
jno
sub
add
cmp
sub
or
jg
or
add
push
outsb
int
mov
jge
xor
nop
sub
cld
inc
ja
idiv
iret
jbe
je
aaa
add
repz
pop
dec
adc
roll
jecxz
xchg
and
xlat
lahf
aam
lock
and
fwait
sub
mov
push
and
insb
outsb
negb
dec
fmul
mov
xor
ret
pop
mulps
test
imul
out
or
ret
pop
adc
sbb
insl
enter
inc
mov
cmp
push
out
stos
fld
sbb
ss
mov
jp
outsl
rcrb
pop
loop
cmp
jmp
daa
dec
sub
out
add
pop
lods
jmp
or
scas
int3
arpl
add
mov
lret
or
mov
out
mov
add
xchg
and
or
call
nop
and
call
fucomi
mov
sbb
jbe
cs
lock
inc
xor
dec
sub
sub
fs
push
push
shlb
dec
and
cmp
leave
push
mov
outsb
in
cld
add
or
lcall
or
cltd
flds
gs
lret
and
fwait
inc
xchg
xor
add
dec
sahf
add
or
sub
and
lods
add
mov
xchg
mov
dec
popf
sub
mov
cmpsl
imul
in
es
xchg
enter
fnstcw
xchg
and
cmpsb
out
xor
pop
push
pop
ja
inc
pop
xor
pop
mov
nop
shlb
std
out
lret
jle
das
mov
adc
test
scas
out
pop
push
leave
xchg
cmp
or
sarl
popf
adc
xor
cmp
out
imul
and
je
cs
loope
lcall
jge
in
add
jg
push
mov
jae
push
pop
pop
mov
cld
jl
xchg
call
sbbb
rcrl
inc
jns,pn
fsubrs
adc
sbb
jl
dec
mov
pop
push
imul
jmp
pop
add
rcl
pop
movsb
ficomps
pop
je
dec
stos
xchg
bound
fmuls
sub
lock
xchg
xchg
ljmp
sbb
into
cmpsl
jne
dec
gs
and
cld
push
add
cli
mov
mov
cmpsl
pop
push
sbb
jns
adc
inc
ja
jno
inc
test
call
adc
add
cmp
out
cs
sbb
data16
sti
cmpsl
shlb
ret
cs
shlb
inc
ds
cmp
xlat
out
aas
jb
mov
dec
jno
arpl
fcoms
inc
addr16
xor
add
jne
jno
jge
out
cmpb
mov
pop
cmp
sub
pusha
mov
jnp
fnstenv
and
dec
rorb
fldt
push
dec
cmp
outsl
sub
push
inc
pop
push
or
xlat
adc
les
pop
mov
pop
nop
out
sub
cmp
jae
outsl
inc
ja
inc
ljmp
xchg
and
and
pop
jmp
dec
sahf
push
arpl
mov
stos
test
rclb
aas
out
addr16
adc
in
mov
and
or
sahf
adc
cli
pop
popa
inc
mov
pop
sbb
dec
mov
mov
xor
xchg
jmp
dec
popf
inc
bound
inc
scas
test
in
mov
pop
sbb
or
xchg
jne
or
pop
sub
pop
outsl
add
imul
dec
or
in
out
loopne
aas
pop
sub
int3
sub
push
test
fdiv
fdivs
xchg
mov
inc
mov
lret
push
icebp
pop
dec
mov
and
int
jge
jns
adc
xchg
fwait
movsl
mov
sbb
sub
cmpb
mov
cmp
out
movsl
arpl
cmp
insb
push
jge
dec
mov
xor
jg
ljmp
jl
lret
testb
jb
mov
mov
out
aad
pop
cmpsb
shll
lea
xor
shl
adc
movsl
lret
push
inc
pop
mov
outsl
inc
mov
cmc
mov
jmp
rol
sub
repz
in
cmpsl
pop
pusha
rorb
lret
popw
into
jae
add
pop
shr
aam
push
test
mov
dec
aam
mov
push
adc
std
inc
popf
pop
mov
mov
bsf
mov
xchg
dec
scas
adc
sbb
dec
aam
inc
jbe
loope
mov
dec
jne
out
cmpsb
mov
jle
sbbl
push
loop
mov
xor
ljmp
jo
pop
test
test
stos
inc
aam
sub
and
mov
cmp
and
sbb
pop
mov
lock
mov
pop
sbb
aad
push
xchg
mov
andl
mov
push
ja
pop
jae
add
dec
xor
movsl
fists
imul
push
insl
mov
mov
test
add
jb
daa
rol
jne
mov
leave
add
cli
cmpsb
je
pop
cmp
fdivr
mov
xorl
pop
daa
in
add
cltd
mov
or
sbb
hlt
push
and
mov
dec
mov
int3
pop
xchg
jbe
aas
fiadds
sbb
sub
push
jle
mov
push
ret
data16
popa
in
out
ja
das
sub
insb
loopne
loopne
adcl
mov
pop
clc
hlt
xchg
add
mov
hlt
ret
push
pop
push
jno
mov
stc
push
and
mov
stos
scas
pusha
and
mov
or
dec
cmp
jmp
bound
mov
leave
xchg
jb
cmp
test
push
jmp
iret
dec
pushf
mov
shrb
adc
iret
or
jae
pop
movsl
push
mov
cmp
mov
stos
push
rorl
mov
or
movsb
ret
ja
icebp
daa
or
les
leave
adc
xchg
push
xorl
rorb
jb
stos
scas
or
xor
sbb
dec
bound
subl
into
dec
ds
jle
and
adc
push
push
mov
mov
inc
push
xor
jns
cli
lahf
mov
add
push
xchg
xchg
jl
adc
cmc
and
fstpt
out
dec
adc
mov
xor
adc
lock
psllq
fldl
or
lcall
or
notb
mov
fnsave
sub
ds
aad
xor
mov
sbb
insl
call
jno
das
insb
in
test
mov
popa
mov
daa
add
pop
out
addr16
sti
mov
or
negl
dec
sub
lea
cmp
fwait
add
sub
call
std
ret
out
out
inc
stc
sbb
mov
pop
in
inc
jne
int3
rcll
mov
inc
pop
inc
insl
xor
inc
mov
mov
and
or
sbb
sub
bound
orl
hlt
cmp
inc
leave
xor
lahf
in
adc
mul
jge
scas
jmp
mov
jnp
int3
dec
dec
add
sub
jecxz
test
lods
mov
aas
hlt
aaa
pop
movsl
in
push
or
leave
into
lahf
shl
pop
fidivrs
movsl
in
cmpsl
mov
pushf
cmp
push
add
sbb
or
lahf
out
jg
adc
jmp
dec
addr16
lods
psubusb
xlat
mov
mov
or
ds
mov
lds
inc
repnz
sbb
je
add
imul
lret
pusha
push
jnp
into
sub
popf
pusha
xor
dec
out
xor
imul
outsl
jnp
mov
enter
js
jno
push
fidivs
push
f2xm1
mov
ret
test
movsb
push
mov
and
je
mov
jo
add
sahf
pusha
pop
cmp
mov
gs
sahf
arpl
add
enter
aam
rcl
insb
mov
inc
jmp
arpl
jnp
lds
push
cmc
xchg
push
loop
scas
and
jae
cwtl
lahf
pop
fwait
sub
pushfw
dec
fidivrl
test
mov
jbe
or
or
mov
adc
jmp
cmp
add
dec
mov
or
aad
adc
test
jle
je
in
ficoml
xor
pop
shrw
into
xchg
daa
add
fdiv
cmp
pop
xor
insb
xor
rcr
fiadds
into
adc
dec
inc
jg
xor
cmpb
dec
std
ror
pusha
lea
cmc
inc
sub
mov
test
xor
jo
push
xchg
jne
shrb
dec
inc
insl
sbb
popa
inc
sub
aam
pop
in
iret
int3
lea
xor
add
cmp
push
js
pop
xchg
sbb
jmp
inc
in
adc
sbb
test
pop
fs
mov
fsub
xchg
push
adc
stos
mov
daa
pop
dec
xchg
loope
jmp
rcll
movsl
pop
aam
dec
mov
sbb
in
inc
cwtl
js
xor
mull
cmc
sbbl
jg
fistl
mov
test
pushf
out
inc
divl
dec
int3
inc
fstl
adc
jmp
fiadds
jl
cld
jmp
repnz
cmc
jno
adc
test
jb
test
xor
push
decl
ficoms
xchg
adc
lods
call
mov
mov
ja
sub
les
ret
out
mov
insl
imul
pop
mov
repnz
mov
pushf
aaa
inc
jo
imul
sbb
pusha
pextrw
in
xlat
mov
pushw
xchg
popa
add
cmp
inc
dec
push
pushf
lock
fmull
and
lea
shlb
and
sarb
mov
inc
faddl
pop
imul
lcall
rorb
dec
sbb
push
rorb
imulb
and
inc
incl
sbb
sub
cltd
subl
cli
mov
and
xchg
js
hlt
das
inc
lock
and
xor
cmp
mov
mov
sahf
into
imul
dec
dec
jl
clc
test
add
dec
inc
add
xchg
stc
xchg
das
sub
mov
leave
push
rolb
add
fs
mov
add
pushf
shr
mov
push
mov
repnz
call
repnz
mov
fiaddl
mov
adc
cmp
jge
pop
or
inc
cli
repnz
push
adcl
scas
rcr
nop
movsb
pop
and
test
pushf
es
mov
fsubrs
hlt
dec
mov
cmp
js
mov
xchg
cmpsl
and
and
stc
scas
jecxz
in
notb
push
mov
mov
movsb
dec
adc
jge
outsb
out
pop
push
icebp
lret
dec
rcr
popf
stos
push
add
mov
xchg
pop
aad
fistps
dec
jmp
test
shrb
test
aam
or
ljmp
repz
dec
call
push
movsl
daa
pop
jne
stos
loop
cmp
rcr
in
add
or
mov
push
loope
adc
cltd
jns
test
insb
int
dec
push
adc
es
ficomps
or
lcall
and
addr16
dec
add
xchg
and
ficompl
or
imul
pop
dec
push
sti
in
adc
inc
daa
jne
ret
stos
dec
movsl
test
or
idiv
dec
icebp
leave
popa
insl
sbb
or
sbb
outsl
cwtl
insb
add
pushl
arpl
repz
mov
fistpl
xchg
push
imulb
enter
xchg
dec
cs
push
adc
jmp
adc
sub
dec
shll
inc
mov
repz
daa
inc
in
inc
jae
out
outsl
shr
lea
jbe
pop
les
cmp
and
out
sbb
mov
aad
mov
cwtl
mov
or
add
pop
add
jno
push
je
xor
hlt
pop
mov
jmp
push
sub
out
addr16
ret
or
adc
jne
or
or
imul
and
xor
bound
inc
and
jp
cs
popa
or
mov
dec
ret
or
pop
jo
xchg
xchg
scas
jo
or
scas
shlb
data16
enter
scas
and
lcall
push
stos
add
cli
orl
jne
jb
test
jno
flds
sub
and
leave
pop
adc
or
push
sub
iret
or
xor
subl
mov
pop
inc
sahf
jmp
inc
iret
rcll
ret
jnp
dec
daa
mov
sub
or
adc
dec
inc
pop
or
mov
ja
xorl
cmp
not
cmc
mov
cmp
add
inc
push
sti
xlat
cli
cltd
mov
sub
ss
insb
clc
push
sbb
jl
ljmp
stos
jns
ret
adc
pop
mov
adc
ljmp
xchg
xchg
fs
sub
inc
outsb
sbb
inc
dec
cmc
fs
jg
push
or
in
mov
inc
imul
sbb
mov
enter
push
xchg
xor
xor
jae
lret
jnp
sub
jmp
js
dec
ds
mov
test
and
aam
pushf
push
orl
sub
and
mov
or
orb
les
hlt
dec
jnp
xchg
lock
pop
aad
cs
lods
out
stos
adc
stos
stos
repz
in
stos
pop
ficoml
jp
sub
dec
sti
mov
push
dec
sbb
mov
jecxz
pop
cmp
idivb
push
scas
test
lds
ror
insl
xchg
in
outsb
sbb
pop
in
stc
icebp
out
mov
dec
pop
adc
xchg
ret
arpl
or
add
cli
sub
dec
jg
ja
jnp
rclb
mov
repz
movsl
sbb
mov
inc
or
push
incl
inc
rol
adc
mov
xchg
adc
lret
das
rcll
call
jl
loope
sub
das
mov
test
inc
ret
hlt
or
jle
test
xchg
rorb
pop
dec
rorb
in
test
jns
xorl
loop
jmp
test
sahf
push
addr16
out
fsubp
cli
sahf
mov
sub
fistps
push
popf
loope
jbe
fcomps
loop
or
nop
adc
add
mov
movl
lds
ja
and
int
insb
ret
outsl
pusha
leave
fstps
inc
sub
cld
push
lahf
jge
dec
and
or
lds
and
push
mov
shlb
push
aas
dec
mov
inc
mov
cmpsl
rclb
xchg
popf
fscale
jge
js
xchg
inc
xor
fcoml
movsl
mov
push
pop
mov
or
push
jge
xchg
gs
xchg
add
mov
sbb
push
ret
mov
and
or
add
pop
sbb
xor
aas
dec
or
xchg
ret
add
xchg
insl
mov
cwtl
sub
mov
sbb
mov
sti
es
push
pop
call
movsb
es
dec
imul
aaa
decb
mov
fcoml
dec
daa
mov
and
in
fdiv
adc
xor
fldl
xchg
pusha
call
divl
jmp
xor
sub
cmp
cmpb
rcr
add
ds
hlt
ret
shlb
mov
js
push
out
ds
js
lds
out
pop
adc
inc
inc
scas
adc
xchg
xor
lea
sbb
lea
loopne
and
cltd
jb
push
stc
add
sub
std
inc
and
sbb
xchg
sub
mov
repz
leave
push
lds
fst
xchg
push
fistl
fnsave
lahf
out
outsb
jg
push
shlb
insb
mov
adc
dec
mov
xchg
inc
add
shlb
mov
fnstsw
push
inc
je
rclb
test
cmpb
pop
iret
ficoml
xchg
dec
sub
mov
push
imul
add
dec
outsb
insb
mov
add
add
mov
cmpsl
mov
scas
or
xlat
popf
push
das
repz
je
dec
int
sbb
cwtl
movsb
mov
jae
ja
adcb
loop
jne
stos
gs
inc
sbb
ljmp
jne
push
and
and
dec
and
pop
pop
cwtl
push
push
inc
add
jg
adc
jl
dec
rolb
add
adc
push
xchg
pop
outsb
push
xchg
sbb
pushf
mov
push
mov
fdivrp
out
ret
mov
and
xchg
stc
or
test
ret
ja
mov
xchg
cmp
sbb
jno
add
pop
je
inc
or
inc
pushl
int3
jnp
in
mov
xor
mov
dec
lods
insb
xchg
stos
add
xor
sbb
inc
xchg
ljmp
push
lret
jo
pop
cwtl
mov
mov
mov
dec
lahf
mov
push
and
pop
testb
orl
outsl
mov
popf
in
ljmp
jnp
cmc
sub
vmovhpd
push
mov
sub
clc
xchg
sbb
inc
push
xchg
jg
in
out
ljmp
pushl
sub
jp
stc
pusha
mov
lcall
stos
sti
in
dec
mov
movb
adc
and
add
push
mov
clc
push
pop
mov
shrl
repnz
into
adc
push
jl
or
sub
pop
sbb
mov
loopne
enter
mov
mov
iret
mov
in
out
lock
cmp
je
mov
fucomp
lods
jl
sahf
out
lods
xor
sbb
push
adc
mov
add
add
cmpsb
inc
mov
stos
push
push
out
inc
lahf
rclb
loop
and
insb
mov
xor
bnd
fistpll
cmp
sub
ret
cmp
xlat
mov
arpl
pop
enter
shlb
fwait
mov
xchg
cmp
in
push
mov
lahf
in
mov
lods
rcll
loop
mov
lahf
cmp
mov
ss
aas
lret
cli
in
xchg
inc
enter
fadds
xchg
push
iret
push
testl
lds
inc
adc
daa
movsl
jne
popa
ret
aaa
lea
das
mov
jge
hlt
andb
jae
mov
push
mov
inc
mov
cmc
fistpll
ret
adc
mov
adc
subl
jne
or
adc
pop
dec
ja
sbb
pop
cltd
jle
cmpsb
adc
inc
sbb
xor
popa
lahf
xlat
outsb
rorb
cmpsl
outsl
jp
mov
jae
jns
andl
shll
mov
sbb
mov
ret
lods
jnp
mov
push
pop
sarl
jno
xor
add
in
sbb
and
or
adc
test
loopne
daa
fistps
sub
jecxz
lret
call
push
or
stos
in
mov
sub
fisubs
in
push
push
cmp
loope
addb
sahf
jb
mov
jmp
lods
mov
inc
pop
inc
mulb
in
mov
adc
mov
mov
mov
jl
xchg
inc
sahf
mov
lock
xor
adc
arpl
ret
ja
or
adc
call
test
popf
xchg
push
cmp
sarl
jo
adc
adc
xlat
cmpsl
mov
div
push
enter
loop
cmc
mov
jnp
cmp
jns
sub
cmp
sub
mov
fstl
dec
adc
add
ffreep
je
sar
loopne
or
mov
and
pop
outsl
jne
rep
jno
mov
jmp
jae
iret
xor
outsl
pop
fcomps
or
add
pop
adc
bound
adc
fsts
cmpsl
ss
mov
lret
call
mov
or
sub
loope
in
sub
js
aaa
mov
insl
mov
mov
or
pop
xchg
cmp
fcoml
mov
enter
fdivrl
popa
add
jecxz
rorl
in
aam
jns
sub
xor
mov
les
jo
outsb
mov
inc
inc
mov
xor
fwait
xchg
and
imul
insb
inc
mov
push
fidivs
and
nop
push
je
faddl
add
cwtl
js
push
push
sub
push
leave
mov
inc
and
push
sub
and
int3
out
in
dec
scas
jo
into
idivl
sbb
lods
jns
push
jb
std
sahf
add
push
dec
es
mov
jp
ss
test
int
adc
rcll
xor
lret
movb
ss
pop
sub
add
xor
adc
mov
sub
push
push
mov
inc
iret
push
fists
add
lods
mov
in
fstps
dec
ret
mov
xchg
add
icebp
jmp
stos
push
pushf
sbb
inc
push
stc
xor
negb
filds
cmpsb
jmp
imul
mov
je
imul
push
mov
test
mov
out
jl
jns
jb
dec
mov
mov
push
pusha
dec
jns
faddl
mov
mov
sbb
inc
dec
ret
enter
stos
insb
daa
push
mov
loop
cld
int3
add
jle
pop
or
jae
jnp
addr16
mov
movsb
test
mov
xor
rorb
ljmp
push
inc
lods
mov
cmp
sbb
inc
inc
sbbb
insb
pop
jno
out
dec
fs
imul
pop
mov
or
arpl
clc
xchg
inc
in
insl
in
or
jb
xchg
je
inc
shlb
roll
outsb
push
mov
push
sbb
push
sbb
or
movsb
inc
mov
mov
add
dec
sub
cmp
xchg
cltd
js
in
push
mov
cmp
dec
add
or
push
jl
sbb
add
jge
addr16
sub
jecxz
jecxz
sbb
ja
cli
xchg
jo
mov
jbe
flds
inc
mov
cmp
leave
stos
xchg
nop
mov
pop
lds
sbb
push
iret
mov
stos
mov
arpl
mov
cmp
cmpsl
dec
mov
mov
push
in
xchg
add
and
mov
ljmp
xor
cmp
rorb
push
leave
out
idivb
out
bound
cltd
outsl
xor
or
ret
push
mov
push
or
push
pop
clc
fxch
jge
jo
add
and
add
mov
sbb
imul
in
sbb
pop
pop
lcall
int3
mov
adc
jbe
mov
mov
mov
rcl
mov
add
lods
imul
xor
pop
nop
dec
push
add
xchg
inc
mov
fwait
mov
cltd
rorl
or
or
sbb
loope
cmp
leave
push
insb
pop
hlt
nop
adc
test
adc
addl
enter
dec
popa
nop
outsb
outsl
fwait
sbb
mov
cmp
xchg
inc
push
inc
movsl
mov
xchg
rorl
sub
insl
cs
lods
push
cmpsb
inc
pop
fistpl
popf
sbb
push
aam
and
or
cmp
cmc
dec
pop
adc
sbb
les
and
movsl
mov
xchg
sub
fwait
insl
pop
out
and
das
rorl
cmp
xchg
pop
mov
or
or
sahf
femms
pop
orb
mov
mov
adc
test
inc
out
mov
cli
icebp
or
xchg
fucomp
mov
in
outsl
mov
sbb
cmp
rorb
ficompl
imul
ret
pop
mov
or
and
mov
xlat
mov
mov
xchg
ret
lcall
rcrl
aas
mov
fstpl
inc
or
push
mov
xlat
int
sub
dec
sti
insl
mov
xor
dec
mov
xchg
mov
lock
loope
cld
lcall
leave
lea
jl
dec
scas
push
in
shrb
fadds
inc
mov
lock
scas
scas
inc
dec
mov
push
push
daa
mov
in
pop
mov
ficoml
and
test
dec
add
ja
xchg
mov
jbe
stos
js
pop
sub
in
fsqrt
pop
cwtl
outsb
inc
pop
cwtl
pop
mov
push
jae
jmp
inc
pop
cltd
pop
imul
mov
loop
mov
rcl
mov
insl
test
sbb
out
mov
xchg
push
test
pop
ds
loopne
or
push
mov
scas
xchg
ljmp
jg
fists
sbb
outsb
cmp
es
shrl
iret
cmp
push
mov
pop
push
test
cmpsb
mov
jne
jge
xor
dec
adc
dec
cli
lock
sub
push
repz
div
jno
jl
push
lcall
lods
pop
mov
xlat
adcl
jne
popf
cmp
test
jecxz
adc
lret
insb
out
test
inc
mov
mov
inc
add
rolb
je
fiaddl
shlb
cmp
fldenv
xor
sbb
aad
cmpl
mov
stos
call
ret
pop
inc
jo
data16
stc
inc
ficomps
jge
dec
frstor
clc
add
fcom
inc
ffree
clc
sub
cmp
or
adc
mov
test
ja
xchg
inc
sbb
mov
orb
dec
loope
mov
jae
fistl
sahf
or
sub
arpl
pop
jno
mov
sub
cmc
xor
lock
or
adc
in
jno
inc
pop
xor
cmp
rolb
hlt
inc
mov
lods
mov
jns
mov
push
lret
call
or
cmp
pop
adc
dec
in
leave
imul
push
ss
test
bound
pop
dec
mov
inc
adc
outsl
aaa
mov
mov
xchg
sub
inc
mov
std
in
pop
cmpsb
cs
popf
and
xor
lahf
sti
setl
mov
cmp
sti
jecxz
cmp
or
and
xchg
inc
mov
xor
mov
jbe
jecxz
je
mov
or
js
fld1
adc
xchg
push
lds
stos
push
sub
out
adc
sub
test
sub
rorb
mov
dec
mov
aam
pop
lea
out
fbld
mov
es
cmc
icebp
or
mov
lds
test
cmp
aaa
adc
fidivrl
cmp
or
adc
ret
mov
mov
xchg
dec
jo
add
aas
loop
sbb
xchg
imulb
inc
arpl
out
jle
js
test
pop
push
sahf
pop
pop
test
mov
aas
lock
orb
mov
insl
cmp
mov
out
fdivl
loope
add
test
lea
out
and
or
pop
je
mul
xchg
dec
jo
jmp
jecxz
xchg
cmp
xchg
dec
pop
sub
outsl
jns
data16
push
mov
sbb
pop
add
mov
push
test
dec
xchg
jns
xor
rcll
and
lods
jg
push
movsl
jae
or
jo
xlat
sub
ret
sub
in
or
jbe
cltd
aad
jmp
and
pop
je
in
jo
sbb
sub
lret
or
add
xchg
ret
cmc
mov
jecxz
les
lods
sar
shll
fs
stc
mov
jg
dec
loopne
cld
push
pop
jmp
xor
jl
sub
mov
sub
aam
adc
sbb
fcomip
lahf
shrb
lods
stos
push
sbbl
jns
stc
cmpsl
sub
pushf
dec
cmp
push
sbb
arpl
out
pop
or
pop
lds
popa
sub
mov
scas
dec
fisttps
test
and
xchg
cmp
jns
in
lcall
adc
sub
out
ret
lods
popa
adc
xchg
ja
sub
mov
sbb
adc
mov
xor
sbb
jmp
adc
lea
mov
push
add
cmpsl
push
cld
and
jle
sbb
push
sti
into
mov
jns
push
add
fdivrs
jge
loop
shl
cmp
pop
pushf
jp
inc
xchg
inc
push
js
fcomps
inc
lret
in
pop
pushf
push
out
mov
call
jbe
lock
in
xchg
mov
pop
mov
mov
fstpl
mov
lods
pop
adc
out
ss
inc
and
in
push
popa
mov
ret
into
mov
jb
std
jmp
stos
hlt
clc
popf
push
push
int3
pushf
pop
cmpsb
jne
jmp
jno
xor
jae
jge
inc
jns
shrb
jl
pop
mov
cmp
ficompl
mov
call
insb
dec
jb
sahf
sub
std
das
fstpl
ret
push
pop
outsb
bound
adcl
and
cbtw
and
mov
jge
movsb
xlat
imul
test
repz
sarb
mov
inc
ret
out
inc
sbb
adcl
push
push
pop
push
ret
or
pop
cwtl
push
xchg
lahf
pop
push
sub
out
mov
fisubrs
test
or
cmpb
mov
mov
into
aam
adc
jl
pop
ja
pop
add
inc
scas
xacquire
cmc
data16
pusha
fdivr
xchg
mov
add
and
js
push
fistpl
xchg
int
inc
sub
mov
inc
mov
inc
xchg
ljmp
ds
out
sahf
jno
mov
mov
cli
sub
add
imulb
mov
sbb
xchg
inc
xchg
pop
sub
sbb
mov
dec
mov
outsb
out
inc
jp
mov
sti
mov
jbe
mov
es
and
scas
aad
cmp
inc
iret
dec
and
cli
sbb
daa
cmpsb
push
pop
cmp
add
dec
int3
daa
sbb
adc
pop
sbb
js
mov
xor
mov
in
and
outsl
lock
and
movsl
fwait
aaa
sbb
mov
imull
pop
subl
test
mov
fcomip
mov
jb
out
mov
and
int
adc
in
xchg
repz
and
adc
jmp
dec
jl
jae
insb
jne
mov
popa
cli
mov
fisubl
dec
push
mov
out
ret
jmp
test
divb
shrl
pusha
jp
pop
xor
cwtl
shrb
sbb
inc
add
das
outsl
xchg
adc
mov
add
fstl
fstpt
daa
movb
lcall
cmpsl
xchg
or
and
bnd
adc
mov
test
add
add
addr16
pop
fnstsw
mov
sbb
lahf
lret
scas
inc
loopne
sbb
jnp
ja
adc
daa
mov
jae
shrl
mov
xor
xchg
ss
ss
fadds
dec
loop
mov
and
mov
sub
push
popa
jo
imul
xor
test
lret
jo
cmp
int3
fucomp
dec
test
shlb
enter
fwait
xchg
int
push
lret
rorb
ss
sbb
jne
xor
lea
mov
cmp
pop
lret
mov
out
pop
sbb
daa
repnz
dec
divl
jb
sbb
and
scas
outsb
dec
cmp
imul
arpl
and
dec
mov
inc
int
out
mov
jg
cmp
icebp
sub
in
lcall
loop
jns
fsubr
jmp
stos
cmpsl
push
sub
test
dec
jns
xor
je
mov
xchg
pop
sbb
or
xor
and
sarb
or
imul
mov
lods
add
sbb
mov
into
lods
imul
mov
shrl
cltd
adc
lahf
popf
xchg
dec
push
add
sub
in
fldl
gs
xor
and
stos
std
icebp
ret
loopne
aas
xor
cli
fucomip
call
inc
push
xchg
jnp
adc
sbb
arpl
call
pusha
pop
push
push
outsb
fs
pop
sub
inc
inc
iret
inc
call
movsb
jnp
xchg
add
cmp
cmpl
xor
sub
bnd
mov
in
fisubrl
out
int3
jmp
push
js
dec
mov
add
enter
sub
andb
rcr
arpl
lea
pop
jb
lret
jae
scas
das
xchg
jg
cmp
mov
popf
mov
negb
mov
inc
and
xor
xor
xchg
xchg
ret
loop
test
fsub
imul
inc
test
push
xor
sbb
sbb
add
mov
mov
loopne
mov
mov
sti
out
inc
add
in
sbb
mov
lcall
dec
adc
jb
movsb
leave
xor
leave
push
adc
mov
fldl
rorl
dec
pop
jbe
pop
cmp
es
cmp
aam
gs
mov
and
xchg
out
push
and
inc
das
and
ret
pop
faddl
fsubs
stos
pandn
lea
mov
mov
cltd
mov
mov
mov
fistpll
mov
ss
xchg
pop
xchg
xchg
stos
les
lcall
mov
dec
sahf
fmull
mov
shlb
repz
shll
mov
ret
push
push
and
sar
shrl
mov
adc
or
xor
lcall
jmp
push
adc
mov
xor
pushf
rclb
mov
jnp
int
inc
sbb
xchg
repnz
mov
movsl
cltd
stc
jg
pop
scas
lahf
fucomip
mov
jae
xchg
daa
sbb
sub
xchg
scas
je
mov
sar
sbb
rdtsc
imul
lods
sti
add
test
outsb
and
sbb
hlt
mov
mov
movsb
out
jl
ror
lock
aad
sbbb
cmp
fildl
mov
sbb
subb
sbb
adc
inc
adcl
dec
lret
int
jno,pn
enter
call
mov
mov
adc
inc
mov
js
mov
push
out
pop
jge
cs
and
pop
cmpsb
mov
pop
and
sarl
in
mov
or
cmpsb
adc
pop
and
out
enter
rclb
cld
adc
bound
pop
and
lds
lret
cmpsl
add
cmc
cli
cmp
add
inc
into
jns
lret
sub
sbb
add
adc
dec
pushf
cmpsw
mov
into
jmp
es
xchg
stc
xlat
scas
and
xchg
out
sbbl
call
push
mov
dec
xor
mov
lret
js
mov
lods
add
repnz
call
jb
sub
mov
add
sahf
and
shlb
mov
mov
repz
in
push
sbb
and
cmp
or
jb
shlb
ljmp
mov
pop
fidivl
inc
insb
adc
jg
sahf
sbb
mov
hlt
scas
inc
push
xor
sbb
cmp
mov
dec
std
push
shlb
mov
xchg
xchg
frndint
mov
sbb
popf
cmp
pusha
inc
xchg
or
cs
loop
out
inc
lods
sbb
jecxz
cmpsl
ret
inc
jno
pop
insb
icebp
ss
sarb
sti
bnd
and
lea
inc
dec
popf
stos
inc
mov
jg
xor
mov
icebp
adc
sub
push
adc
es
xorl
je
add
sub
mov
mov
mov
roll
jno
cmp
sti
int
push
mov
inc
cmpsl
jns
les
rcrb
push
imul
xor
add
push
inc
mov
insl
ds
into
sbb
mov
push
jg
cld
nop
cmp
je
les
pusha
outsl
hlt
lods
add
mov
jmp
push
xchg
insb
fwait
inc
imul
dec
jecxz
xchg
or
push
add
mov
mov
xchg
testl
jp
push
fsubrl
scas
push
xchg
jl
jae
mov
insl
push
icebp
push
xor
scas
push
adc
test
push
and
push
push
pop
sbb
ds
mov
mov
stos
mov
clc
dec
or
mov
jne
sbb
gs
inc
or
mov
ret
push
negb
or
xchg
fwait
leave
push
fldl
dec
mov
into
mov
jge
stos
testl
and
mov
sbb
test
inc
jecxz
xlat
push
mov
cmp
mov
sub
loope
adc
stos
int
cmp
popl
sub
xchg
jb
and
outsl
jae
add
testl
sarl
test
adc
and
hlt
inc
lods
test
add
in
xor
pop
mov
fwait
test
lret
cmp
mov
cmp
pop
std
xchg
loope
add
dec
and
xor
mov
icebp
sub
lcall
out
data16
inc
jge
lret
sub
sub
into
sub
ja
inc
call
mov
push
enter
mov
lahf
jp
jbe
inc
add
inc
in
mov
xor
insl
push
add
in
xchg
test
aas
pop
call
ja
push
movsl
mov
das
cmpsb
arpl
inc
mov
dec
punpckldq
mulb
sbb
orl
lea
xor
xor
fisttps
fs
and
mov
or
adc
repnz
popf
sahf
sarb
mov
and
pop
xchg
ljmp
je
ljmp
les
pop
stos
adc
loop
dec
ljmp
cmp
dec
mov
mov
xchg
jg
call
fmull
xchg
fcom
sbb
add
dec
mov
push
pop
mov
or
xchg
pop
aas
add
cld
push
in
leave
jmp
pop
push
mov
jl
repnz
ret
dec
addl
mov
mov
out
cmp
jmp
in
push
cmc
and
iret
xchg
mov
inc
add
imul
jmp
add
enter
fistps
push
cmpsl
js
jae
aam
les
ja
faddl
lds
js
es
push
and
cmp
ret
insl
pop
mov
ja
jp
and
imul
cmp
sub
sbb
cmp
xchg
inc
test
xchg
and
sahf
daa
adc
je
ret
fdivrs
mov
scas
icebp
jne
jge
insl
or
cltd
out
adc
adc
xchg
xor
and
jle
sub
xchg
ret
push
cli
scas
add
enter
ret
push
jnp
pop
mov
or
cld
into
and
lret
xchg
xchg
xor
jne
fs
pushf
in
out
daa
cmp
sbb
jns
int3
mov
pushf
bound
out
jp
push
pusha
push
mov
jae
jmp
mull
cli
pop
int3
iret
shlb
rcll
clc
pop
bound
xor
jecxz
insl
jge
mov
cmpsb
lahf
cmpsb
notb
mov
xchg
dec
rcl
ja
rorl
pop
pop
pushf
mov
in
pop
mov
cmpsl
jnp
int3
js
adc
sbb
stos
pop
adc
sub
inc
jl
divb
xorb
mov
lahf
cmpsl
loopne
shll
jns
inc
std
movsb
cmp
sahf
pop
xor
lods
and
inc
rcrb
jae
outsl
xor
cmp
insl
rorl
xchg
dec
fnstcw
dec
push
mov
or
pop
sbb
jecxz
sub
ret
nop
mov
inc
lods
pop
das
fidivrs
mov
mov
cmp
push
hlt
sbb
fnstenv
mov
adc
ret
jmp
test
filds
xchg
decb
lods
add
daa
add
push
push
cmp
ret
or
or
jb
outsl
lock
xor
inc
mov
jl
pop
in
data16
aas
push
or
daa
lcall
pop
sub
add
jne
test
movsb
adc
xchg
inc
pop
ss
int3
daa
xor
mov
mov
jmp
sub
add
fdivp
into
lahf
mulb
into
sub
jmp
stos
jmp
cs
inc
jl
adc
leave
testl
loope
adc
pop
lods
scas
push
sbb
adc
arpl
xchg
dec
int3
stos
es
ds
std
adcl
in
xchg
fmul
mov
mov
es
ret
frstor
es
roll
lods
loop
xchg
iret
test
mov
cmc
push
inc
mov
inc
adc
jno
fcomps
movsbl
in
rdtsc
nop
lcall
je
xor
out
inc
sub
add
shlb
jae
iret
or
xchg
inc
mov
fnstsw
xor
popf
in
push
mov
cmp
je
push
jo
xchg
inc
repz
mov
pop
inc
jl
dec
fmulp
xor
ss
stos
xchg
hlt
loop
and
decl
lea
test
cmpsl
inc
add
push
or
mov
les
pop
pop
stos
lret
and
das
iret
dec
pop
add
jle
pop
out
push
inc
fwait
lcall
jl
push
scas
lods
fcomps
pop
and
lret
int
cltd
xchg
jns
jae
int
cmp
fs
cmp
and
jecxz
imul
mov
push
mov
sti
data16
add
ja
jo
mov
inc
sahf
iret
idivb
aas
xchg
imul
leave
cmp
adc
dec
lret
sub
insl
shlb
push
testl
mov
mov
mov
pop
outsl
fiaddl
xor
rcrl
xchg
fsub
inc
jmp
loop
jg
jns
or
rcl
scas
jg
cwtl
pusha
dec
cs
shl
pop
test
xchg
leave
int3
pop
and
sti
add
jle
outsl
push
sbb
mov
stos
in
jl
pushf
call
mov
jl
push
outsb
into
je
mov
push
mov
addb
ret
or
cmp
xchg
fmuls
neg
into
cmp
push
je
insb
sub
mov
mov
inc
cld
das
dec
and
adc
mov
aaa
repnz
ret
adc
movsl
imul
xor
inc
jl
int3
fwait
add
sahf
cmp
add
xchg
mov
loopne
insb
imul
jg
fidivrl
jns
sub
sbb
subb
inc
push
push
mov
mov
hlt
xchg
loopne
mov
pop
outsb
dec
cld
out
addr16
lret
dec
cwtl
cld
mov
push
cmp
loopne
or
fprem
mov
mov
adc
dec
xor
mull
or
cli
jle
mov
adc
in
jmp
or
xchg
mov
mov
bound
cmp
xor
ret
jg
ljmp
shrb
lret
stc
jmp
jge
sub
add
pop
mov
fimull
lret
insb
cwtl
dec
test
out
pop
xorl
cld
jg
mov
pop
outsb
pop
dec
mov
fdivrl
pop
movsl
cltd
arpl
xor
dec
bound
adc
les
or
and
xor
and
mov
popa
cmpsb
mov
add
ficompl
mov
popf
mov
fisubrl
push
ljmp
cmpsl
push
cmp
fwait
rorl
ss
pop
stc
jnp
sti
cmpsl
in
cli
faddl
mov
shlb
add
xor
out
cmpsb
cld
fldl
mov
popf
ljmp
or
ljmp
sar
mov
jo
xor
or
dec
adc
shl
stos
mov
mov
int3
xlat
dec
lea
repnz
pop
xchg
sbb
mov
push
push
inc
movsb
out
pop
mov
push
xchg
push
mov
mov
rorb
lret
icebp
cmp
sti
xorl
lock
fidivrl
pop
push
xor
ja
scas
aad
adc
xchg
test
sub
mov
stos
jbe
cmpb
ss
cmp
jmp
push
mov
xchg
adc
cs
out
adcb
pop
pop
pop
imul
or
scas
lcall
sub
xor
mov
rcr
xchg
shrb
fdivr
pop
xor
ja
cmp
mov
ds
mov
xor
jb
movsl
lret
pop
stc
add
sub
test
xor
pop
sub
adc
push
insl
mov
add
jge
sub
je
out
mov
popf
imul
imull
inc
jecxz
xchg
cld
push
fwait
jg
jae
mov
pop
sub
cli
mov
pusha
rclb
xor
out
call
xor
mov
cmp
dec
imul
popf
cmpsl
pop
xor
inc
lock
mov
sbb
adc
lock
mov
inc
cmpsl
test
repnz
loopne
push
xor
fs
and
mov
stos
jne
jb
dec
xlat
pop
xlat
sub
jecxz
mov
inc
xchg
cmp
pop
cmp
cmp
or
add
and
dec
je
mov
dec
or
jnp
pop
aam
and
jns
push
add
mov
mov
sub
or
push
rcr
addr16
mov
push
bound
bound
sub
dec
cld
insb
loope
cwtl
fisubrs
mov
scas
ficomps
mov
push
je
gs
xor
in
jnp
ret
inc
lods
push
jbe
jl
scas
fdivrs
mov
pop
call
icebp
in
cmp
cwtl
or
aad
mov
sbb
int3
das
xor
lea
repz
dec
mov
outsl
or
mov
and
xchg
xor
pop
jp
mov
fbld
ja
out
clc
rclb
mov
mov
shr
push
push
je
or
mov
mov
xchg
dec
sub
ss
out
sbb
int3
add
sahf
sub
xchg
sub
rcr
sbb
or
add
xchg
test
fisubl
adc
cmp
mov
push
cmc
inc
xor
pop
dec
fadd
inc
jecxz
mov
stc
pop
andl
add
add
lahf
cmpsl
and
add
xchg
std
cmp
or
movsb
repz
cmp
insb
jg
ror
scas
sub
jne
mov
pushf
cmp
inc
fistpll
jne
cltd
mov
and
mull
mov
test
jl
aam
test
test
pushf
jnp
or
mov
sbb
je
pushw
inc
popa
insl
mov
sub
mov
mov
inc
outsb
xchg
rcrl
jl
sbb
mov
pop
lds
mov
je
mov
cs
daa
mov
xor
sub
pop
repnz
mov
push
scas
decl
stc
push
stos
sub
jge
fistps
jo
sub
shl
lret
push
ret
xchg
cli
popa
daa
sbb
mov
aam
cmpsl
lahf
fwait
mov
sbb
or
adc
lret
jl
addr16
gs
out
or
sbb
sub
out
push
jns
dec
in
gs
push
add
mov
lcall
les
sub
add
out
out
or
lods
mov
stc
imul
cmpsb
push
gs
int3
lret
ljmp
jge
mov
aad
cmpsl
push
pop
aad
test
jne
xchg
aaa
xchg
mov
out
ja
or
sub
mov
or
jb
in
add
ljmp
sub
sbb
mov
pop
into
jle
mov
in
aaa
pop
cmp
push
repz
mov
scas
outsl
mov
aas
aad
inc
fwait
cld
leave
sbb
nop
roll
int3
jo
das
or
loop
cmpb
loope
loopne
add
iret
popa
fwait
jmp
in
mov
mov
jle
daa
shll
dec
rolb
and
out
shlb
add
push
je
push
xchg
adc
mov
pop
das
data16
test
xchg
in
je
push
and
adc
outsl
sub
cli
sbb
call
in
lds
cmc
push
mov
sbbb
andb
cld
mov
push
hlt
aaa
jb
mov
jle
push
and
in
test
int
push
insb
cmpsl
mov
mov
jno
adc
repz
cltd
andl
xchg
outsb
mov
fidivrs
stos
jbe
inc
mov
cmp
icebp
adc
cmp
mov
xor
das
jnp
jp
imul
outsb
out
inc
add
fdivs
xor
ds
std
data16
aaa
fcmovnbe
xchg
jle
or
lcall
mov
in
mov
es
popf
add
sub
or
subb
es
xlat
jg
das
xor
xchg
cwtl
sbb
dec
xchg
loop
push
sbb
pop
push
jne
decb
pop
mov
add
out
inc
out
pop
insl
test
xor
dec
int
lcall
stos
xor
and
sub
insl
cwtl
test
lds
push
lock
into
jae
mov
xor
stos
jae
sbb
pop
into
loopne
mov
mov
das
pop
pop
mov
shlb
cs
notl
sub
mov
adc
push
dec
leave
popa
mov
addl
adc
xchg
addl
nop
xchg
adc
icebp
push
inc
js
jmp
icebp
jg
pop
clc
mov
inc
inc
jo
out
ror
nop
ljmp
orb
mov
call
mov
test
lahf
ret
repz
popl
dec
xchg
cmp
xchg
cld
jno
xchg
or
sbb
ret
testb
push
adc
jnp
sbb
test
ljmp
sbb
xchg
push
xorl
in
out
xchg
push
dec
xchg
jecxz
jmp
insb
lock
xchg
sahf
and
cmpsb
sub
jl
jp
xor
jno
loop
loopne
push
rcl
out
or
or
mov
cli
insl
repnz
cwtl
inc
mov
cmp
pushf
lret
mov
xchg
mov
cwtl
xchg
les
clc
das
mov
fsubrs
arpl
inc
mov
push
mov
pop
test
pop
imul
sti
into
loope
sbb
cmp
cld
mov
inc
pusha
xchg
mov
mov
xor
add
fisttpll
pop
mov
xor
mov
cmp
pop
jecxz
push
or
repnz
scas
inc
and
jns
sub
cmp
std
push
sub
pop
dec
xor
mov
xchg
inc
mov
call
push
dec
dec
ja
fdivrl
mov
loope
ret
negl
inc
aam
mov
es
lret
cmpsl
mov
mov
cwtl
xchg
adc
gs
add
push
dec
sub
shlb
ret
outsb
lods
mov
imul
xchg
cmp
jnp
and
inc
inc
cs
jo
lods
push
shll
add
mov
cmpl
lahf
int
sub
sbb
xchg
fwait
nop
or
imul
pop
xchg
leave
mov
pop
aam
xchg
push
mov
sub
ret
jle
add
push
mov
dec
adc
in
pop
xchg
out
jl
stos
mov
out
sub
test
push
je
ja
sbb
mov
scas
sbb
and
cltd
test
add
call
xor
lods
rorl
xor
scas
or
nop
dec
mov
cmp
sub
mov
pop
add
push
xchg
nop
cs
mov
cwtl
jnp
xor
insb
outsb
lock
mov
cs
scas
sbbl
loope
movl
adc
add
cmp
jnp
fbstp
jp
lcall
push
jae
pusha
leave
insb
lea
sub
andb
in
jmp
movsl
push
adc
sbb
push
inc
stos
clc
pop
sbb
dec
int3
out
gs
test
aam
sbb
cmp
adc
mov
push
cmp
lods
push
je
je
xchg
mov
in
pop
fs
add
push
mov
fwait
jp
into
mov
je
cmpsb
cmpb
and
push
cltd
lahf
ds
std
loop
loopne
repz
adc
inc
sbb
mov
jbe
dec
add
dec
jle
jo
mov
adc
cmp
pop
and
loopne
rorb
pusha
aad
xchg
aam
or
adc
mov
jge
sub
mov
movsl
in
les
jnp
add
pop
out
orb
mov
add
std
and
xchg
and
in
hlt
cmp
push
dec
push
cwtl
or
pop
movsl
dec
push
cli
mov
and
imul
inc
icebp
mov
pop
jne
mov
jmp
bound
or
aad
jae
loop
sub
dec
xchg
dec
inc
sub
scas
inc
lock
xorb
push
je
add
mov
lock
adc
mov
sub
incl
or
shld
add
cmp
rorb
or
repnz
movsl
jecxz
jns
test
loope
rcrb
xor
loope
inc
imul
pop
aam
fdivr
jae
dec
xor
rcrb
sbb
aad
cmpsl
inc
and
outsl
shl
mov
inc
push
cmp
inc
pushf
sbb
jp
dec
fwait
jle
and
and
ds
or
movsb
and
rcrl
dec
mov
lret
negb
pusha
sbb
add
das
push
mov
ds
clc
call
in
push
sbb
mov
mov
mov
lods
adc
and
mov
into
sahf
lret
cltd
movsl
fwait
insl
push
mov
out
xchg
sub
cmp
das
add
cmp
nop
adc
popf
in
aad
sar
jmp
sti
add
jne
mov
fistpll
adc
mov
or
inc
pop
pop
cmp
cmp
jo
xchg
mov
fwait
test
xor
into
mov
shrl
daa
adc
dec
fsubl
pop
call
jl
inc
pusha
jne
mov
cmpsl
into
mov
xchg
mov
aad
and
sbb
sub
sti
xlat
xor
add
je
adc
imul
data16
push
mov
mov
ja
stos
into
mov
jns
pop
push
adc
cltd
das
js
cmp
pop
pop
sub
xor
subb
loop
rorb
xchg
es
xchg
divb
into
adc
sbb
cmpb
mov
mov
insl
mov
mov
add
and
jl,pn
adcb
in
sbb
xor
inc
out
pop
cs
jae
cmp
or
jle
adc
lret
push
subl
add
pop
push
lods
gs
arpl
test
add
popa
sbb
popf
add
push
fs
comiss
outsb
fs
or
push
sti
pop
jmp
bound
fisubrs
out
inc
insb
mov
les
lret
jb
mov
cmp
mov
fimull
or
adc
or
int3
stc
mov
pop
mov
test
fwait
out
testl
mov
idivb
push
mov
imul
mov
pusha
insl
aaa
sub
sub
push
and
mov
push
lds
lahf
mov
ds
xchg
xchg
ret
cmpb
xor
call
inc
inc
mov
ror
push
jecxz
ja
roll
fcoms
mov
cmp
gs
scas
imul
sub
jns
lahf
fisttpll
loopne
mov
adc
cmp
or
pusha
sbb
and
rorl
pop
cmp
mov
pop
in
lods
pusha
mov
pop
pop
push
inc
xor
dec
cs
pop
sub
mov
pop
out
mov
in
xor
out
dec
cs
cmp
jno
pop
xchg
mov
cld
stos
inc
sub
pop
jb
xor
xor
outsl
mov
or
fidivrs
add
imul
push
leave
les
movsl
or
subl
popf
mov
ffree
das
pop
aaa
les
jb
fisubs
outsl
mov
repnz
iret
cltd
adc
or
mov
arpl
add
arpl
rcll
out
cli
and
fwait
cmp
adc
mov
jo
dec
jecxz
fmuls
addl
stc
jle
fidivrs
imul
fsubrl
xor
arpl
jle
stos
iret
stos
nop
das
iret
ds
sbb
mov
push
ret
inc
xor
pushl
cwtl
scas
cli
xor
aaa
mov
imul
xor
push
lcall
add
pop
inc
in
test
dec
fildl
or
jo
jo
xor
lea
pop
lahf
cmp
jecxz
ds
mov
mov
loope
jno
cmp
iret
into
stos
pushf
dec
aad
ja
xor
sub
mov
mov
dec
cmpsl
repz
ret
mov
dec
stos
outsb
xchg
jno
jmp
fmul
aas
mov
pusha
std
jnp
pop
adc
scas
mov
mov
ffreep
int3
mov
std
jmp
int3
jecxz
rorl
adc
xor
shll
icebp
dec
aas
cmp
adc
mov
jne
in
scas
push
ljmp
mov
add
ss
iret
mov
mov
jecxz
insl
dec
ja
xchg
mov
repz
lcall
rolb
jle
push
movl
push
stos
out
and
lods
test
jbe
sahf
clc
lock
call
xchg
mov
add
test
out
fucompp
daa
inc
popf
aam
mov
push
dec
fwait
pop
pusha
rcrb
bnd
and
pop
mov
mov
push
mov
sqrtps
push
mov
in
push
or
test
dec
inc
dec
repz
jmp
or
sbb
fwait
aad
movsb
xchg
call
push
outsl
mov
jns
mov
push
enter
ljmp
loope
enter
in
test
icebp
push
decl
or
jl
sbb
dec
xchg
xchg
call
mov
pcmpeqb
cmc
adc
add
dec
push
cmp
rorb
inc
out
stos
cmpsl
add
xorb
mov
setle
subl
fcom
inc
mov
xchg
push
js
movaps
cmc
pop
repnz
push
hlt
movsb
imul
cwtl
arpl
out
fstl
dec
and
out
adc
test
inc
test
loope
loope
jecxz
mov
cli
mov
cmp
popa
add
std
cmp
fs
adc
aaa
call
sahf
data16
insb
dec
mov
xor
fdivrl
xchg
dec
call
push
addb
add
stc
icebp
xchg
clc
push
sub
scas
stc
fdivl
cmc
adc
mov
scas
test
insl
pop
cmp
mul
add
negl
aas
pop
shll
stos
cmpsl
stc
xchg
or
mov
jae
shll
and
out
rcrb
scas
test
div
sti
adc
pop
fldenv
mov
xchg
and
push
mov
in
ds
scas
int3
in
fstps
or
or
stc
cltd
cmp
stos
lcall
sbbl
out
push
mov
adc
addl
mov
fimull
jmp
fs
insb
xchg
or
push
inc
push
and
pop
jnp
repnz
mov
filds
jle
loopne
addr16
into
push
jbe
test
mov
aad
lods
xor
daa
mov
stos
or
push
pop
scas
mov
and
dec
sbb
and
mov
push
pop
xchg
into
sub
cmpsl
add
popf
stc
add
rcrl
cmpsl
je
adcl
sbb
jg
mov
int
adc
mov
jmp
jg
adc
xchg
lods
mov
out
stos
out
int3
or
stos
mov
cli
js
mov
and
or
int
jne
dec
xchg
add
xchg
int
jg
adc
test
mov
mov
rcrl
hlt
fnsave
jo
or
shrb
pop
roll
adc
mov
nop
or
dec
cli
pop
aaa
push
fidivl
push
mov
test
push
fdivrp
mov
or
pop
add
aad
les
insl
jge
out
aas
mov
popf
jmp
inc
mov
sub
jg
sbb
cmp
into
cmp
cli
push
push
shrb
sbb
push
push
test
mov
out
je
outsb
mov
dec
pop
push
xchg
stc
movsb
ror
push
fcoml
sub
jne
and
popf
push
sub
insl
mov
mov
dec
pop
bnd
add
das
in
push
add
dec
xor
and
stos
push
test
pushf
pop
test
fstps
jns
jno
aas
cli
jns
movsb
dec
and
rorl
xchg
jne
ret
bnd
out
adc
loope
js
arpl
loopne
jns
pop
sub
orl
mov
xor
test
pop
mov
and
dec
insb
inc
mov
dec
mov
sbb
jge
or
mov
lret
into
es
xor
xchg
sub
test
cs
mov
xor
pop
inc
aad
inc
jnp
sbb
pop
pop
mov
mov
xor
and
testl
xchg
or
xor
pop
ljmp
cld
inc
loop
out
lahf
sbb
hlt
out
mov
sbb
aas
das
bound
pop
sbb
mov
jle
or
dec
das
int
sbb
mov
inc
push
arpl
jg
jmp
dec
mov
jg
mov
push
mov
rcll
rcr
mov
test
cmp
mov
xchg
xor
testl
xor
daa
or
das
cmp
ljmp
inc
fs
or
sbb
inc
idivl
adc
pop
loop
scas
lods
cmpsl
push
imul
outsb
in
gs
outsl
test
pop
lret
inc
and
std
mov
sarb
inc
sub
cmp
pop
jb
jle
fdivs
mov
jmp
cld
xchg
fnstsw
add
outsb
out
test
outsl
lahf
adc
push
jp
and
fmuls
jl
pop
lea
mov
jge
dec
scas
imul
xchg
hlt
mov
sahf
and
jno
sbb
insl
mov
ljmp
adc
dec
je
push
repz
mov
xor
mov
sub
aaa
test
clc
in
cmp
push
inc
push
xchg
mov
hlt
pop
add
pop
mov
jp
mov
rorb
fidivs
and
cmc
jmp
dec
fsin
or
mov
aam
adc
fcompl
or
jl
dec
or
outsb
lock
add
jle
xchg
pusha
les
popa
adc
std
clc
std
rorb
imull
loop
mov
mov
mov
cmc
jno
cmp
test
icebp
inc
rorb
rorl
adc
xchg
packssdw
xor
pop
push
mov
inc
add
jb
mov
mov
lahf
daa
rcr
fstl
ret
mov
cli
pop
sbb
loop
lret
adc
pop
arpl
adc
pop
xor
icebp
inc
push
mov
addr16
jbe
and
sub
mov
mov
or
mov
les
popa
xchg
pop
aam
pop
aaa
xor
data16
das
jb
dec
lcall
xor
jb
dec
xchg
xchg
dec
add
jbe
gs
push
or
cmc
je
adc
rcll
cld
pop
pop
les
xchg
push
dec
inc
arpl
sub
mov
lret
mov
fisubrl
push
lods
push
sub
call
jge
add
repnz
mov
push
js
dec
jbe
in
xchg
inc
inc
mov
mov
jae
inc
fnstsw
xchg
mov
cli
add
xor
cld
sbb
jg
hlt
push
xchg
push
ja
in
xchg
jmp
movsl
int3
dec
aad
sbb
in
nop
or
movsb
test
mov
icebp
jns
pop
push
das
add
add
wrmsr
daa
dec
loope
add
adc
int
and
nop
sbb
nop
lds
dec
mov
inc
stc
leave
pushl
ds
int
outsl
xorl
mov
mov
nop
sub
pop
ljmp
push
xchg
jecxz
loop
pusha
mov
leave
mov
jl
xchg
int
mov
stc
pusha
push
add
fstpl
adc
xlat
xor
test
enter
add
jle
gs
aad
add
add
and
cmc
cmp
sbb
dec
sub
mov
xor
adc
and
sbb
mov
xor
aam
jns
test
stos
call
lahf
and
sarl
mov
lea
in
mov
dec
call
rdmsr
sbbb
sub
xchg
add
pop
dec
inc
xor
mov
xchg
imul
mov
sbb
cmp
xchg
je
dec
daa
movsb
shlb
xlat
xchg
xchg
dec
jle
dec
push
xor
mov
inc
sub
aam
imul
cmp
and
cmp
mov
cmp
inc
adc
mov
pop
mov
and
inc
jns
jl
repz
or
insb
inc
stos
sub
mov
mov
mov
mov
pop
js
enter
cli
cwtl
fnsave
inc
mov
add
or
das
das
dec
fsubrl
inc
pop
mov
push
sqrtps
cs
push
add
lods
and
inc
dec
lods
mov
in
adc
leave
jbe
xchg
outsb
fsubl
int
imul
loop
sbb
aad
ret
mov
xchg
xchg
jne
sbb
xchg
push
mov
daa
popa
fwait
lcall
sbb
stos
or
sbb
dec
rcr
xchg
xchg
cltd
shrb
jns
xor
inc
sub
rclb
lods
jae
dec
push
mov
cmpsb
xor
push
outsb
sub
mov
je
repz
xorl
push
mov
lods
cmp
das
popa
addl
and
push
int3
or
xor
cmp
jmp
or
jle
and
mov
inc
jno
push
cmp
pushf
mov
add
mov
cltd
out
inc
cmc
popa
pop
pop
add
or
outsl
stos
pop
loope
jns
push
lcall
aas
test
lea
lds
lods
mov
cli
mov
cmpsb
fcmovnb
push
mov
inc
sahf
testl
pushl
mov
add
sbb
jne
jl
lock
stc
dec
jae
ss
std
adc
fcmovne
daa
and
mov
imul
pop
mov
std
xor
sub
mov
hlt
inc
sbb
es
ret
mov
fucomip
xchg
adc
out
movb
pop
loopne
mov
pop
sub
fsubp
mov
jp
loop
pop
shll
and
xor
stos
pop
fs
fwait
pop
ja
mov
adc
rolb
cmp
pop
push
mov
in
add
in
xchg
push
roll
cltd
jb
pop
movsb
es
cmpsb
test
notb
addr16
ljmp
mov
dec
rcrl
pop
pop
scas
inc
mov
shrb
adc
mov
pop
out
cmp
cmpsl
lea
rolb
add
jbe
filds
lea
adc
push
ret
xchg
in
stos
mov
incl
daa
mov
fprem
sub
xchg
sbb
push
push
adc
mov
sub
mov
and
cwtl
cli
inc
popf
push
xor
adc
test
les
pop
jbe
mov
push
data16
bound
cwtl
dec
outsb
cmc
mov
xchg
aas
dec
jl
fcmovbe
pop
jns
push
out
add
sub
mov
lcall
dec
aas
mov
mov
xorl
cmp
sub
pushl
fsub
mov
movsl
and
dec
mov
push
sbb
inc
fstpl
aaa
fsubrs
mov
std
shrb
ja
sub
mov
sub
jbe
jb
fidivrl
inc
test
adc
push
addr16
jno
dec
or
push
xlat
clc
pop
sub
loope
mov
in
sub
testb
loope
cli
fs
cmpl
rorl
repz
cmp
cld
adc
js
dec
test
mov
pop
test
gs
jp
pop
xor
mov
aas
pushf
xor
clc
jnp
andl
xor
pushl
sahf
imul
jne
add
cmp
dec
mov
pusha
xchg
aas
push
jae
popa
push
xchg
push
popf
mov
loop
jb
inc
iret
jno
fisubs
hlt
pop
out
add
roll
dec
jns
in
and
fs
add
ja
jmp
ja
fnstsw
ss
jb
pop
in
xchg
hlt
movsl
xor
nop
leave
insl
hlt
mov
aam
cmp
shrb
nop
faddl
out
pusha
cltd
adc
movsl
out
jno
shlb
loope
call
push
jb
data16
xchg
dec
cmpsl
xchg
filds
lret
sti
or
fisubrl
jl
lcall
adc
cwtl
or
ja
mov
rcrb
rorb
lods
sbb
xchg
loop
das
notb
mov
cmp
icebp
out
lret
push
xlat
int
stos
xor
jne
fs
popa
inc
enter
dec
sbb
fmull
cmp
fs
and
mov
sbb
inc
imul
jns
pusha
jne
inc
call
dec
xchg
xchg
jae
in
pop
dec
jnp
jp
or
cmp
pop
dec
lock
mov
loope
ret
jbe
xchg
lcall
mov
icebp
js
cmpsl
add
xor
jno
mov
mov
pop
out
xchg
mov
pop
repnz
mov
rorl
pop
adc
enter
sub
xchg
mov
dec
imul
mov
sub
jbe
pop
pusha
aad
clc
cli
sbb
cmpsl
mov
pop
in
loope
mov
ja
xchg
fs
rcrl
pop
or
nop
jp
fisttpl
lahf
sub
or
mov
add
notb
jno
rcll
roll
cmpl
sbb
fiadds
mov
adc
sbb
shrl
mov
mov
sahf
es
cmp
push
inc
mov
push
and
out
jne
sbb
or
pop
sub
ljmp
add
sub
cmpsb
je
add
in
ret
jae
movsl
fwait
stc
xor
mov
stos
xchg
lods
insb
bound
lret
push
mov
dec
test
dec
iret
cmp
lret
add
push
inc
or
scas
call
sbb
loop
into
and
imul
int
stc
mov
mov
push
inc
xor
mov
sub
jns
xchg
mov
into
fidivrl
mov
dec
gs
sbbb
shrl
fcoms
sti
dec
add
insb
add
or
idivl
ljmp
pop
push
outsb
add
adc
mov
filds
sar
push
sar
sub
loopne
fisttpl
xchg
mov
adc
insb
pop
in
jns
mov
sub
pop
sbb
mov
adc
les
mov
sub
sbb
mov
push
out
es
aaa
sbb
mov
arpl
loopne
push
mov
push
xchg
lret
mov
aad
mov
jg
hlt
sub
pop
or
mov
addr16
sub
nop
mov
cld
fmuls
sahf
sbb
in
arpl
jbe
pop
mov
lods
insb
out
and
subb
ret
lret
inc
ljmp
popa
rclb
sbb
push
push
jae
rorb
leave
jmp
test
lret
mov
mov
sbb
in
mov
sbb
stos
gs
pop
test
cmpb
ret
sub
add
add
sbb
xchg
frstor
sbb
sbb
inc
mov
daa
mov
lret
cmp
call
fidivrl
dec
mov
mov
mov
adc
rcrb
jge
lods
and
xor
or
shll
cmpsl
enter
push
mov
ds
push
mov
or
into
jge
jl
push
inc
mov
pop
bound
leave
and
cmp
xchg
fucomp
hlt
fwait
inc
das
fnsave
and
pop
ret
fdivp
xor
xchg
test
and
mov
mov
dec
lret
cltd
xchg
dec
add
leave
inc
test
jle
loop
out
inc
dec
out
sbb
jmp
or
xor
in
jnp
aad
scas
pop
in
and
cmp
call
leave
pop
rorl
or
mov
stos
cmc
adc
xchg
xchg
mov
rep
sub
push
pop
or
mov
out
pop
xchg
daa
jecxz
xor
lcall
sbb
jecxz
pop
cmpsl
test
xchg
inc
cltd
aas
mov
dec
jne
adc
loope
add
stc
cli
cmpsl
sbb
imul
mov
add
dec
mov
lock
lret
lcall
lret
xchg
je
aad
jo
pop
in
in
add
and
lods
push
lods
push
je
ficoms
out
ret
jp
daa
xor
nop
or
xchg
xchg
outsl
and
test
rclb
fmull
inc
lahf
inc
enter
sti
fwait
das
xchg
test
jno
xchg
fwait
mov
mov
add
push
cwtl
andb
fcmovnu
movsl
stc
xor
stos
rorl
mov
xchg
mov
and
cmc
mov
cmpl
in
testb
sbb
mov
roll
add
pop
cmpsl
ret
stos
scas
addr16
test
dec
shlb
mov
sbb
inc
add
ja
cmp
inc
push
push
xor
fidivl
push
loope
and
std
sahf
push
jmp
jg
enter
lock
out
inc
daa
hlt
push
mov
jle
xchg
data16
add
xor
cmp
push
out
loopne
mov
aaa
xor
clc
rorb
mov
and
sbb
es
incl
daa
dec
hlt
xlat
sub
imul
loope
adc
mov
cmp
stos
mov
push
xlat
mov
ror
push
out
icebp
ds
add
pop
int3
mov
lahf
dec
jmp
jae
mov
sub
ret
call
repnz
sbb
loop
insb
mov
cmp
and
jns
loop
or
fmulp
int
iret
shr
pop
mov
jp
lcall
xor
push
cli
pusha
js
jle
mov
ret
adc
inc
iret
push
das
or
pop
call
xor
mov
mov
fldt
repnz
xchg
pusha
inc
xor
inc
jnp
mov
push
dec
cmp
test
fidivrs
mov
push
adc
xchg
pop
lods
data16
jge
out
jb
sbb
cmp
sbb
xchg
lcall
push
sbb
test
inc
sub
cli
fisttpl
adc
jne
in
and
shll
arpl
insl
mov
and
andl
adc
mov
push
dec
jmp
cld
mov
add
and
push
ljmp
enter
mov
inc
inc
push
mov
mov
jns
mov
fistpll
hlt
pushw
xchg
iret
insb
inc
jle
jg
sbb
cmp
iret
clc
jb
pop
add
cmp
adc
dec
mov
ljmp
cmp
sahf
icebp
daa
ss
jl
loop
mov
andb
dec
in
xchg
inc
outsb
add
lcall
fistpll
jl
fsubrs
mov
cmp
outsb
imul
sub
and
lock
int3
pop
fwait
dec
push
test
lahf
or
jecxz
mov
stc
dec
sub
mov
add
xchg
add
cmc
ljmp
addr16
mov
push
mov
dec
pop
xchg
mov
imul
jl
sub
push
mov
xor
push
jg
and
inc
push
test
dec
xor
xchg
insl
gs
push
jp
push
jl
int
push
daa
pop
mov
sub
mov
mov
mov
and
leave
adc
fnsave
sbb
stos
enter
add
in
aam
in
mov
aam
mov
movntq
out
pop
popa
lret
in
xchg
sbb
jecxz
mov
mov
aam
dec
cmp
cmp
jb
test
aas
mov
xor
inc
test
sub
adc
call
jle
cmc
add
mov
fdivrl
or
fistps
xchg
fcmovnu
lods
xchg
inc
mov
aas
cmp
scas
xchg
sub
and
test
addr16
icebp
incb
or
lds
mov
xor
mov
pop
mov
pop
mov
inc
dec
test
sahf
push
xorb
test
ja
dec
pusha
imul
dec
test
call
or
sub
mov
pop
xchg
popf
add
cmp
test
mov
xchg
js
mov
push
xor
iretw
xchg
loop
pop
and
inc
les
and
scas
mov
mov
jns
out
icebp
pop
movsb
pop
test
repz
movsb
jl
dec
mov
aas
out
push
dec
aam
popf
shll
xorl
adc
jmp
sub
push
inc
out
fld1
fildll
pop
in
loopne
push
stos
lret
add
ss
int
pop
cmp
mov
cmp
loope
xchg
and
mov
adc
mov
shrb
shlb
enter
mov
mov
jnp
pop
fistps
in
iret
jge
pop
pusha
inc
ret
jmp
pause
jmp
aad
xor
xchg
xor
cmp
jae
or
push
mov
movsb
movsl
into
cmp
mov
mov
ss
movsl
or
jle
cmp
fwait
insb
fbstp
push
stos
xchg
push
push
xor
mov
mov
jne
and
and
mov
jo
xorl
dec
cmp
mov
adc
sub
movsl
mov
mov
dec
lock
movb
imul
sbbl
rcrb
addr16
rcrl
xchg
add
xchg
xor
pop
ljmp
je
aad
or
leave
mov
dec
aam
xchg
ljmp
mov
pushf
fsubs
daa
sbb
daa
xor
pop
ljmp
mov
dec
mov
push
rolb
add
xchg
push
out
movsb
mov
cmpb
adc
jmp
iret
jl
jecxz
sub
push
insl
and
sbb
data16
ljmp
jno
or
xor
push
mov
pushl
mov
jg
inc
addr16
cs
cmpsl
jae
call
mov
cmp
mov
iret
xor
mov
pop
shrl
push
and
mov
jle
aas
fisttpll
push
ljmp
pop
dec
jo
loopne
bound
dec
out
jno
xchg
or
xchg
dec
lods
aas
dec
lret
xlat
fsts
repnz
jno
je
nop
rcl
jecxz
inc
jge
mov
call
outsl
jno
imul
aaa
testl
xlat
popa
imul
push
jle
out
fwait
push
js
mov
ret
dec
stos
aam
jae
rcrb
lahf
mov
aas
mov
jl
fwait
inc
push
fwait
addr16
call
int
bnd
push
repz
data16
sbb
ret
push
int
xchg
lret
pushf
cmp
mov
adc
call
stos
sahf
jo
hlt
mov
idivl
daa
mov
push
ljmp
aam
lods
adc
xlat
gs
cmp
pop
fidivs
add
lock
cltd
out
lcall
dec
shlb
sahf
push
mov
add
in
push
jno
inc
xchg
movsb
fdivrl
inc
xor
sbb
jo
out
dec
fcomp
das
sbb
adc
lcall
mov
cwtl
testb
add
cmp
cmp
push
mov
cmp
mulb
pusha
in
subb
shll
or
dec
mov
pop
out
and
xor
or
mov
cltd
mov
cmc
pop
or
pop
divl
push
pop
cld
inc
cmpsb
inc
popf
jecxz
shrl
in
addr16
lea
mov
cmp
mov
xor
pushf
or
scas
jg
and
stos
and
xchg
repz
mov
jg,pt
repnz
test
push
inc
mov
call
subb
sbb
dec
test
sub
test
push
xchg
jbe
lret
push
loopne
ljmp
xor
mov
mov
sbb
out
test
jge
xchg
pop
mov
push
mov
cmc
push
jmp
and
adcb
outsl
lahf
mov
call
mov
dec
imul
orb
and
lds
sbb
add
mov
dec
outsb
sub
icebp
and
lcall
sub
fistpll
jnp
or
inc
mov
cmc
stc
xchg
scas
mov
sub
sti
es
daa
mull
cltd
sbb
repz
pop
inc
out
push
enter
decl
clc
aaa
sub
daa
xchg
push
lea
mov
jp
mov
imul
enter
and
ja
repnz
push
add
xchg
ret
popf
adc
jp
dec
es
nop
push
inc
pop
outsl
lock
popl
nop
dec
int3
repz
lcall
ja
pushf
into
sbb
mov
fcmovbe
inc
mov
jbe
cmp
pop
pop
cmp
jns
test
lods
dec
inc
mov
add
adc
xchg
adc
mov
lock
sti
push
shll
mov
jmp
test
jnp
push
scas
ja
sub
mov
imul
lahf
scas
ja
imul
or
push
mov
icebp
cmp
lret
jp
cmp
imul
mov
ja
lret
add
dec
or
fstps
cmp
faddl
sub
cmpsl
push
sub
sti
mov
rcr
adc
jne
lret
push
ret
movl
adc
mov
in
inc
cmc
ljmp
sub
fsubl
pop
stos
mov
push
scas
mov
push
inc
dec
fstl
dec
add
and
into
mov
orl
call
inc
xchg
dec
hlt
xor
or
imul
cli
and
mov
nop
cld
inc
les
popf
sub
cmp
adc
push
loop
lds
cmpsl
dec
jecxz
daa
into
cli
adc
jge
add
fimuls
fistpll
insb
mov
lods
call
or
lea
dec
jo
js
lods
lods
pop
add
jbe
xchg
adc
push
and
push
adc
push
push
pusha
int3
imul
push
je
jnp
cmc
xor
cmpsl
fstpl
jbe
dec
hlt
inc
lret
cwtl
push
mov
push
add
jno
aas
nop
cmc
rorb
imul
std
cmc
test
cmp
mov
rolb
lahf
and
je
xchg
pop
inc
add
xchg
loop
in
sti
mov
lret
inc
sti
and
xchg
stos
jmp
mov
push
mov
cmp
xchg
loopne
loope
mov
pop
or
and
imul
lods
push
js
push
sbb
adc
push
clc
jae
cmp
rolb
mov
mov
imul
push
sar
add
rol
mov
lea
mov
stos
pushf
mov
dec
mov
movsl
pusha
insb
cmp
fisttpl
gs
movsb
bound
loopne
pusha
scas
aam
insl
pop
push
lds
bound
lahf
and
mov
inc
fildll
xlat
lds
int3
pop
std
in
fistps
jl
out
aad
push
jb
mov
dec
aas
mov
mov
sub
not
icebp
aas
popa
ljmp
pop
jae
inc
fcomip
push
or
mov
lods
mov
lods
fmuls
sbb
scas
add
lea
lret
mov
push
insb
and
mov
push
pop
or
cmp
jl
push
ficomps
out
scas
or
sub
mov
lahf
xor
fsubs
js
push
dec
sbb
jbe
adc
and
arpl
pop
and
outsb
sti
insb
test
push
mov
rcll
jp
incb
jo
mov
sbb
push
xchg
rep
mov
or
out
aam
push
stc
movsb
cltd
adc
or
or
fmuls
cmp
sbb
loop
nop
imul
mov
popf
push
in
mov
popl
mov
mov
fadds
lea
jb
mov
test
or
je
lods
push
test
mov
ss
enter
das
jle
incb
std
or
insl
cs
outsb
add
xchg
fdivr
mov
push
imul
dec
ds
xlat
pop
mov
adc
cmc
sub
cmp
pop
rorb
test
sbb
ret
mov
insb
jl
adc
xchg
xchg
pop
or
andb
arpl
ret
push
sarb
shrl
call
test
in
pop
mov
cmpsl
pop
cmpsb
les
in
icebp
push
jns
adc
add
test
cwtl
out
xchg
xor
lea
outsb
mov
mov
cmp
lahf
push
outsb
inc
dec
xchg
cmp
fwait
aam
add
aas
adc
dec
lea
xor
push
jle
mov
xor
mov
mov
mov
xlat
call
fwait
mov
sahf
rcl
rcll
lret
inc
jae
orb
shrb
pop
cmp
or
leave
jns
ss
cs
pusha
mov
lcall
inc
lods
inc
stos
or
inc
fldenv
js
in
push
test
sti
jle
adc
pushf
or
scas
sub
sub
test
sbb
sub
out
sbb
repnz
icebp
and
fidivl
int
mov
fwait
cmp
mov
ret
test
lea
imul
add
enter
pushf
cltd
xor
add
outsb
incb
rclb
decl
out
cmpsl
lds
pop
int3
call
lods
out
imul
mov
cltd
and
popf
sti
test
xor
call
mov
shl
cmp
lock
xor
mov
aam
test
cmp
cmp
add
sar
out
fcomi
xor
xorl
jno
xchg
add
mov
pop
iret
sub
cs
imul
rol
xor
cmp
xor
lcall
mov
cs
scas
dec
push
push
outsl
jae
call
pop
movsl
inc
hlt
jo
inc
pop
xlat
pusha
leave
mov
fdivrs
lret
xchg
sub
cwtl
inc
xchg
shlb
xchg
lahf
pop
and
xor
xchg
in
xchg
flds
psllq
xor
lahf
or
lahf
stos
and
mov
and
xchg
arpl
lock
fdivrs
ljmp
push
std
adc
leave
push
ss
aam
test
out
outsl
mov
push
add
add
push
mov
push
and
fisubs
dec
sub
sub
fstps
inc
xchg
aaa
dec
jg
popa
mov
and
jle
pop
push
mov
cmp
test
jns
push
in
xor
mov
mov
jne
or
in
mov
and
push
cltd
push
mov
fsts
es
stc
imul
or
in
xlat
and
push
mov
dec
or
bound
xor
inc
pop
lret
clc
divw
pusha
jmp
mov
dec
mov
add
jne
dec
jbe
gs
mov
aas
arpl
mov
xlat
bound
mov
or
inc
ret
jge
cld
rcr
repnz
add
fstp
gs
insl
mov
xchg
jg
popl
lds
clc
lea
inc
mov
lea
mov
mov
test
xor
lret
loopne
mov
xlat
sbb
jns
sbb
adc
mov
inc
push
aas
sbb
xchg
data16
arpl
cltd
pop
xchg
mov
sub
xchg
cwtl
inc
std
fcomip
in
add
mov
clc
pop
pop
cmp
or
fld
push
jp
dec
fst
mov
les
fstpt
jl
or
mov
cmp
pop
pusha
jne
jbe
test
xchg
fnsave
xor
xor
dec
mov
outsb
daa
xchg
mov
jmp
mov
mov
scas
scas
xchg
cmc
inc
push
scas
cmp
pop
ret
in
add
cmp
jp
mov
xchg
add
lods
mov
fs
insl
jbe
je
and
or
mov
movsb
mov
in
pop
dec
call
sub
adc
and
cmp
scas
stc
outsb
jge
inc
mov
je
mov
rcr
or
aaa
ljmp
jecxz
repnz
repz
cmc
and
pusha
push
lret
xchg
mov
xchg
inc
mov
xchg
fs
mov
xor
pop
stos
jle
or
fstl
sub
out
add
fbld
int3
adc
push
repnz
test
push
shll
repz
jne
mov
bound
negl
insb
xchg
xchg
cmp
push
insb
sub
lcall
dec
add
or
in
fldz
mov
roll
loop
in
bound
adc
sub
mov
aaa
je
pop
dec
movb
xor
loope
and
pushf
xchg
out
aam
les
cwtl
push
jnp
add
bound
jecxz
fwait
push
leave
aas
jnp
mov
js
cmp
inc
or
nop
aaa
ljmp
mov
sub
dec
popa
pop
jge
jl
movsl
mov
adc
jg
adc
dec
inc
jmp
dec
pop
xchg
jge
xchg
mov
js
inc
cmp
xor
mov
sub
ja
icebp
lcall
add
aam
or
dec
iret
fisttpl
fbstp
and
or
dec
pushf
jmp
push
sbb
xor
adc
es
add
cltd
xchg
dec
enter
loop
jne
stc
adc
xor
jnp
lahf
xchg
inc
fwait
cmpsl
ss
dec
or
inc
pop
jne
int3
push
add
daa
ret
jecxz
push
dec
int
xchg
or
or
mov
leave
dec
xor
adc
testl
sbb
sub
cld
hlt
cs
cmp
xor
sti
outsl
stos
pop
xor
jae
popa
icebp
xor
das
repnz
insb
enter
jb
insb
jno
mov
jb
mov
popl
and
cmp
mov
cs
adc
mov
xchg
imul
loope
push
in
jne
xchg
jns
adc
ret
dec
mov
lds
pop
or
fisttpll
pop
rcl
out
push
mov
pop
imul
ss
pop
push
dec
inc
pop
mov
sbb
push
movsl
dec
andb
push
dec
inc
xchg
xor
fiaddl
loopne
inc
insb
sti
cmpsb
lahf
jge
pop
and
daa
sbb
inc
inc
shrb
cmpb
ja
data16
push
popa
xorl
rcll
dec
lods
cmp
push
jge
pop
je
xor
out
xchg
xorl
jmp
inc
pop
xchg
in
mov
in
xchg
mov
in
iret
repnz
adc
xor
decl
push
stos
arpl
ret
mov
add
mov
sbb
fsubrp
push
mov
mov
pop
pop
push
in
shl
jle
lods
pop
enter
lock
push
mov
rcrl
fs
jbe
nop
xchg
inc
sbb
fimull
cmpsl
sbb
repnz
jno
sbb
push
les
add
or
pusha
jmp
aas
and
add
xlat
jmp
je
and
or
cld
aaa
cs
cld
fs
aad
adc
dec
cmpsl
movb
ljmp
aaa
xchg
add
movsb
addr16
inc
lret
je
std
pop
pushf
es
mov
rcrl
mov
dec
arpl
test
cs
shrb
test
mov
lds
iret
jp
pop
mov
es
xchg
mov
fwait
cli
dec
aas
lock
out
mov
sub
imul
mov
dec
pop
mov
push
nop
adc
lods
mov
aaa
lea
or
in
int3
aam
js
out
ljmp
bswap
jne
cmc
leave
cltd
nop
leave
push
mov
push
shll
int3
pop
arpl
add
adc
imul
pusha
lods
out
add
adc
pop
pop
iret
rcrb
cmc
iret
icebp
pop
rcll
or
and
mov
inc
mov
int
push
jmp
mov
sub
mov
or
xchg
mov
sbb
scas
out
add
sarb
stc
xor
sub
jmp
ret
icebp
sbb
pop
and
les
jmp
mulb
std
sbb
dec
sub
sbb
fadds
addb
movsb
or
loope
mov
mov
xchg
mov
mov
mov
call
push
push
data16
fwait
rorb
mov
jmp
fistl
mov
mov
xchg
lahf
xchg
ss
adc
cmp
add
mov
nop
pop
lret
sbb
jle
adc
adcl
push
out
arpl
pop
sbb
in
mov
ljmp
inc
daa
jecxz
jb
popl
add
test
aam
mov
push
inc
mov
pop
mov
fidivs
test
icebp
and
leave
mov
mov
mov
sti
std
lret
mov
cmp
rclb
mov
inc
imul
bound
xor
aaa
pop
int
lcall
mov
xchg
fsubrl
adc
in
and
in
sbb
dec
dec
push
mov
test
pushf
pand
std
lahf
pop
sub
xchg
jns
insl
dec
lret
jnp
cltd
mov
mov
rcrl
add
push
push
and
movzwl
sub
pusha
je
roll
sbb
mov
test
jge
sarl
aam
xor
xchg
mov
fwait
scas
pop
lock
movsl
stc
sbb
jnp
mov
cld
shrb
sbb
or
xchg
cmp
aas
xchg
pop
es
pop
pop
fldl
sub
jb
clc
push
shrb
out
insb
test
add
imul
mov
je
mov
rcrb
xor
ljmp
sahf
pop
cmp
fimull
cmp
xchg
sub
lds
pop
and
add
leave
sahf
pop
dec
fadd
jl
mov
ja
mov
frstor
fstps
push
sbb
sbb
push
add
adc
scas
dec
ja
push
mov
or
mov
rcrl
add
rcrb
cmp
dec
xchg
scas
jge
out
push
or
enter
repz
inc
inc
add
mov
cmp
add
xchg
repz
ret
jbe
ds
push
mov
dec
lock
jnp
push
fstpt
sbb
inc
sbb
jle
in
call
out
out
ret
adc
imul
rorb
pusha
pop
ljmp
and
jl
xchg
out
cmp
stos
cmp
push
pop
out
rcrb
clc
sahf
pusha
out
js
pop
adc
jle
movsb
shrb
pop
mov
rcrl
pop
adc
push
jmp
cmc
arpl
pop
inc
sti
add
daa
icebp
loop
rol
popa
inc
dec
adc
or
push
sti
jbe
mov
mov
push
int
jl
dec
shlb
sub
cmpsb
add
cli
in
or
adc
mov
cmpsl
jecxz
js
fcmovb
lcall
aad
call
es
sti
cld
xlat
mov
scas
mov
int3
das
sub
jo
insb
data16
jb
pop
mov
jmp
aaa
sahf
xchg
sti
aaa
xor
push
in
adc
repz
inc
das
notl
mov
inc
bound
cmp
cmpsb
cmp
lods
inc
test
stos
js
mov
fs
or
inc
mov
call
add
test
andb
xchg
add
or
mov
pop
xchg
ficompl
xor
iret
in
xor
push
imul
and
int
lret
stc
xor
iret
les
cmp
mov
popa
iret
cmpl
pop
xor
jnp
add
pop
mov
rcll
mov
out
gs
xor
push
aam
out
out
mov
dec
jo
inc
movsb
jmp
mov
xchg
in
add
bound
jecxz
vshufps
cli
mov
add
addr16
std
loop
or
mov
push
std
mov
and
pop
aas
mov
and
mov
stos
mov
ss
into
xor
sbb
inc
push
push
stos
ja
rep
inc
aad
shlb
xchg
in
lods
sbb
xchg
mov
gs
and
mov
jge
cmp
add
daa
push
movsb
pop
jno
or
adc
std
lods
cmpsb
mov
imul
jmp
aas
fisttpll
cmp
xchg
xchg
dec
ret
pusha
mov
xor
into
cwtl
push
iret
inc
push
sbb
sbb
mov
xor
stc
lock
mov
fwait
scas
lock
fnstsw
pop
stos
fcmovbe
add
jmp
jecxz
mov
bound
sbb
xlat
dec
repz
arpl
and
outsb
mov
mov
daa
sub
lock
lods
inc
pop
lcall
inc
std
pop
je
jecxz
xor
mov
push
gs
pop
push
stc
pop
pop
xor
idivb
in
std
mov
jmp
sub
mov
cmp
inc
pop
pop
roll
or
pushf
int3
jbe
mov
xchg
mov
sub
mov
jbe
xor
shlb
aad
adc
add
sub
mov
test
sub
add
xor
adc
stc
adc
aam
xor
cmc
fcmovbe
pop
pop
and
cmpb
or
sbb
aas
jp
lock
rcll
mov
mov
stos
jl
cmp
mov
in
cmp
dec
mov
stos
in
add
jle
scas
adc
insl
adc
push
out
push
cwtl
pop
fstp
mov
aam
push
pop
sub
loope
mov
jl
and
add
sbb
hlt
jl
ds
cwtl
xor
mov
popa
lcall
filds
out
arpl
mov
cmp
es
push
push
ja
mov
mov
dec
cwtl
inc
clc
outsl
int
pop
lcall
dec
das
pop
push
sub
jp
mov
fildll
pusha
out
dec
xchg
stos
daa
push
imul
out
push
jbe
add
inc
jnp
stc
pop
fs
mov
ss
mov
push
sbb
mov
dec
out
lret
and
out
or
scas
mov
mov
lock
mov
or
jnp
mov
lock
mov
pop
mov
shrl
xor
lds
dec
mov
and
dec
adc
aam
fsubrl
lea
xor
jcxz
cli
adc
push
mov
adc
or
push
cmp
jle
mov
sbb
cmp
movsl
rorb
jno
add
xor
rolb
or
sbb
sbb
lods
and
mov
loopne
push
loope
or
fdivs
inc
add
inc
cmp
scas
add
aas
pop
adc
cmp
sub
and
subl
mov
mov
pusha
mov
add
jmp
nop
cmpsb
mov
inc
ret
ja
test
xchg
popf
xor
or
adc
iret
xchg
loopne
test
xchg
adc
int
orb
push
inc
scas
pop
test
lret
mov
adc
out
mov
setle
and
test
cs
insb
and
daa
rcll
loope
js
mov
out
sub
pop
lea
push
cmp
adc
or
dec
inc
pushf
adc
outsb
jbe
ss
sub
xchg
ljmp
outsb
adc
push
push
sti
dec
mov
xchg
subb
cmp
xor
push
cwtl
pop
aaa
arpl
outsl
add
mov
cwtl
ja
mov
mov
call
inc
out
pusha
outsb
sbb
je
cmp
cmp
mov
add
sub
pop
ss
sub
orb
movsl
icebp
sbb
scas
stos
stos
icebp
in
jnp
nop
inc
inc
jp
mov
xlat
cmp
fimull
sbb
in
lret
cs
lahf
bound
cmp
pop
test
pop
add
in
cmpsl
jmp
jg
pop
xchg
or
xchg
xor
dec
mov
or
or
ss
lcall
jno
adc
js
fwait
lret
or
vpminub
roll
lock
push
jns
sbb
xchg
xor
movsb
push
repnz
insl
add
cs
aam
scas
jbe
mov
out
sub
lcall
cmp
test
call
sahf
pop
dec
fwait
jb
insb
mov
cmp
push
out
sbb
xchg
pushf
mov
out
aad
dec
cmpsl
sti
pop
incl
icebp
cs
sub
psubusb
xor
sbb
ja
and
dec
and
ficompl
xchg
in
daa
arpl
je
fadds
and
adc
and
jae
cmc
int
shr
push
pop
cld
jbe
pop
cltd
add
pop
dec
jae
clc
inc
and
std
inc
sarl
fdivrs
push
cmpb
in
xchg
xchg
mov
sub
daa
mov
in
gs
dec
dec
lds
shr
ss
movsl
pop
sub
scas
cmp
scas
mov
jle
mov
adc
sub
push
fs
test
repz
lret
test
addl
cltd
xchg
ss
cmp
fisubrs
adc
xor
mov
sub
out
mov
xor
add
das
push
jmp
sbb
jg
outsl
push
sbbb
xor
shl
clc
movsb
xlat
pop
mov
inc
daa
cmp
push
hlt
jle
or
ss
xchg
out
add
push
arpl
dec
xchg
aam
add
adc
arpl
pop
jb
out
inc
xchg
sub
insb
jge
out
aaa
nop
imul
fs
fwait
jg
outsb
sbb
jp
inc
test
jns
push
mov
cmp
mov
push
cmp
inc
in
and
inc
push
pusha
jmp
sbb
mov
incb
std
test
nop
jg
mov
inc
clc
sub
xchg
addb
add
roll
xchg
xchg
iret
cmp
xchg
bound
out
jnp
cmpsb
test
add
jle
fdivr
aas
adc
stc
xchg
sub
mull
ret
add
add
cs
push
enter
xchg
push
mov
sbb
cmpsl
adc
xchg
fisubrs
adc
sub
stos
or
push
sti
stos
aas
roll
mov
pop
repnz
xor
xchg
mov
ss
mov
mov
push
dec
push
jg
jg
imul
aas
mov
jne
push
sbb
cld
dec
push
mov
sub
ljmp
sub
xchg
test
mov
aas
mov
jge
sahf
sub
push
mov
mov
dec
mov
cmp
mov
cli
xchg
cli
ds
orb
js
sarl
mov
mov
xor
xlat
pop
add
adc
popf
push
lret
int
incb
push
push
std
and
pop
adc
vpunpckhdq
push
int
sub
out
jmp
or
or
mov
push
push
pop
lcall
pop
push
pop
lods
incb
pop
pop
movsl
das
subl
test
inc
lret
xlat
loope
outsl
insb
xchg
fcmove
add
arpl
mov
loop
pushf
push
incb
fisttps
nop
lcall
stos
adc
es
pop
stos
stos
clc
cmc
fcmovnu
scas
fs
mov
mov
pop
sarl
js
imul
push
test
mov
inc
inc
sub
shll
pop
outsl
add
scas
stc
subb
sbb
in
inc
mov
test
pop
rclb
jmp
and
push
adc
pop
cltd
testb
mov
mov
jb
fstps
xchg
fistl
mov
fldt
push
popa
test
mov
std
lcall
outsb
push
jmp
cmp
cmp
xchg
insb
cmp
sub
mov
fcmovnbe
pavgb
or
or
aas
clc
cmp
mov
imul
xor
iret
or
inc
jmp
pop
in
add
dec
dec
adc
or
std
sbb
add
cwtl
adc
or
aas
mov
test
leave
in
mov
jl
jmp
dec
dec
in
test
mov
pop
xchg
cwtl
jmp
leave
inc
cmp
push
jnp
popf
lret
jge
add
xorl
test
mov
sbb
xchg
aaa
push
in
lock
mov
or
imul
mov
adc
jnp
jl
fiaddl
adc
not
xchg
xlat
adc
xor
sbb
lock
jecxz
js
jo
in
pop
arpl
js
mov
sbb
pop
sub
rcr
mov
cmp
test
in
aas
nop
push
or
stos
inc
jecxz
xchg
insl
mov
inc
sub
pop
pop
imul
shlb
fbstp
mov
and
js
dec
add
push
repnz
xchg
add
add
clc
push
dec
xor
and
or
and
xor
add
and
out
cmc
stc
push
ret
mov
xchg
mov
pop
dec
jmp
arpl
fistpll
jle
mov
jae
add
iret
cmpsl
rcll
fiadds
mov
test
into
mov
dec
push
leave
add
mov
push
xor
pusha
mov
movsl
iret
fisttpll
pop
ss
mov
lods
jnp
mov
stos
push
loope
aas
or
inc
call
xor
add
adc
jle
popf
fbstp
inc
repnz
pop
imul
add
movsbl
addb
std
aam
insl
pusha
pushf
mov
scas
pop
out
fstl
mov
jecxz
shll
jle
popf
mov
ljmp
pop
and
andl
mov
jmp
mov
push
mov
pop
scas
and
mov
sbb
mov
push
lds
data16
outsl
mov
mov
or
jnp
pop
into
xchg
jno
mov
cwtl
and
mov
rcrb
je
jno
xchg
push
in
sub
cld
mov
add
sbb
test
ljmp
cltd
pop
out
jo
popa
or
ljmp
and
fcoml
enter
mov
mov
dec
push
rcll
inc
addr16
leave
les
jno
movl
add
xchg
add
addr16
arpl
sub
mov
imul
mov
mov
inc
or
pop
sbb
or
imul
cld
add
xchg
cs
push
cwtl
pop
adc
rolb
or
ret
cld
add
push
imul
xchg
xchg
js
out
pop
test
ds
cwtl
and
push
mov
arpl
das
stos
sub
incb
mov
pop
add
je
fadd
imul
push
pop
lods
add
mov
sub
mov
fcmovnb
mov
mov
pop
pop
icebp
xchg
sbb
or
movsb
dec
out
sbb
aam
mov
push
xor
push
xchg
mov
sti
fadds
loope
cmp
push
inc
or
idivl
push
sub
xchg
ret
mov
ja
jecxz
in
mov
sbb
mov
cmp
jno
les
sbb
mov
in
testl
cltd
pop
jecxz
loopne
ja
lods
movhps
inc
sbb
cltd
dec
rcll
faddp
out
push
dec
cmc
and
or
arpl
sbb
mov
mov
push
aad
sbb
gs
rolb
arpl
xchg
ja
cmp
inc
mov
shr
jne
sub
pop
lret
out
dec
xchg
jne
adc
jns
into
pop
std
push
flds
fisttpll
outsb
fadds
stos
xchg
push
sub
daa
stos
sub
in
mov
push
jnp
and
daa
adc
add
sbb
push
pop
mov
in
jmp
lods
in
xor
dec
mov
and
dec
adc
push
pop
xchg
or
in
or
in
js
scas
lods
testl
outsl
mov
and
add
push
lds
or
leave
scas
cmp
out
arpl
fwait
and
or
sti
dec
cld
jmp
pop
push
lcall
fwait
aad
ss
lret
sub
insb
sbbb
shr
inc
mov
xchg
pop
xor
cwtl
mov
arpl
add
dec
addr16
add
stos
mov
sbb
sbb
dec
add
mov
arpl
jle
jmp
ss
xchg
sub
lds
jbe
jo
stos
xchg
pop
sub
xor
ss
pop
repz
sub
insl
add
mov
lret
clc
push
fdivrl
pop
stc
jl
cmpsl
xchg
ds
dec
inc
mov
in
push
mov
icebp
fdivs
and
aam
imul
in
sub
stos
pop
dec
inc
jecxz
jg
cmpsl
shl
mov
pop
and
andl
jno
ret
enter
jbe
outsl
push
rol
out
sub
mov
adc
psllq
std
ficomps
inc
lret
repnz
xchg
out
fimull
sbb
push
xchg
std
cld
and
push
hlt
out
inc
clc
sbb
data16
add
rolb
stos
add
sarb
outsb
inc
notl
mov
test
cmc
clc
js
cmp
pushf
scas
adc
pushf
data16
inc
jb
test
ret
or
xor
jmp
repnz
into
jne
lcall
push
xlat
movsl
inc
mov
scas
pop
std
into
mov
jno
mov
pusha
icebp
and
icebp
sub
sahf
mov
cmp
adc
or
inc
sub
sbb
sahf
inc
push
sahf
push
mov
int
jb
mov
adc
ret
pop
lods
shlb
mov
shll
xor
inc
ds
or
loope
lods
je
sbb
shlb
lds
mov
cmc
jmp
leave
adc
xchg
js
jnp
std
push
testb
inc
das
das
loopne
xchg
sarl
dec
loopne
jbe
adc
clc
mov
or
scas
inc
ret
xchg
insb
jl
sub
aam
in
in
sub
pusha
aaa
jge
cmp
ds
mov
fimuls
inc
inc
daa
popa
ss
or
cmp
mov
cmpsl
fldt
sbb
jl
jae
incb
data16
sub
sbb
push
ja
or
popf
xchg
sub
loopne
adc
jno
mov
push
sub
test
jmp
dec
mov
inc
mov
dec
aad
or
or
ds
pushf
push
lods
stos
frstor
cld
adc
ss
ds
out
xchg
sbb
mov
mov
xor
popf
js
push
inc
push
adcl
bound
sbb
jecxz
and
stc
and
iret
xor
dec
and
in
fstl
add
add
in
pop
add
pop
fcoml
je
cmpsb
adc
sub
mov
xchg
xchg
xchg
mov
cmp
movsb
lret
sbb
pop
xchg
gs
fisttpll
xchg
jmp
xchg
xchg
scas
cli
jb
mov
sahf
dec
ja
cwtl
int
pop
fsts
mov
lods
adc
add
insb
mov
mov
imul
mov
adc
cmp
push
push
or
loop
test
and
cwtl
add
add
cmp
cmpsl
imul
adc
jge
je
mov
inc
push
and
sbb
add
inc
pop
int
add
or
gs
pushf
out
xchg
fnstsw
in
stc
nop
push
les
cmp
inc
call
vunpcklpd
mov
out
sub
scas
pop
push
adc
ret
andl
mov
or
ret
mov
popa
cmp
scas
sbb
test
loope
mov
shl
sbbl
cltd
mov
mov
mov
cmc
or
adc
mov
popa
je
hlt
out
stc
push
push
in
adc
pop
repnz
jns
cs
loope
add
mov
inc
jp
lcall
push
fstpl
add
lods
cli
jecxz
sbb
cltd
ret
lahf
popf
into
outsb
sbb
lret
or
mov
fmuls
roll
in
mov
orl
pop
decl
inc
roll
hlt
cld
fbld
outsl
adc
shr
cs
mov
in
mov
push
inc
loope
jge
lods
mov
adc
imul
adc
cld
sbb
notb
lods
pop
cmp
dec
mov
nop
testl
mov
pop
adc
fcoml
lea
jle
shr
imul
dec
cltd
or
movsb
pop
pop
cmpsl
or
in
mov
idiv
repnz
adcl
data16
incl
and
daa
scas
and
pop
jnp
dec
pop
lds
xor
xchg
cld
orl
jno
xchg
adc
sbb
inc
or
xchg
in
xchg
scas
mov
adc
cmp
pop
das
inc
push
pop
faddl
cmp
cmp
mov
sbb
imul
cmp
movsb
and
sub
sbb
in
cmpsl
insb
into
dec
out
outsb
push
sub
cmpsl
int3
sti
jecxz
cmp
sbb
xchg
in
testl
outsl
hlt
cmpsb
arpl
push
jge
pusha
sahf
pop
dec
aad
outsl
pop
mov
lcall
and
adc
inc
pushf
mov
mov
or
sbb
xor
jle
dec
les
cmpb
mov
loope
pop
int
test
mov
ror
aad
leave
fisubl
sahf
in
jnp
fldl
mov
fimull
jecxz
mov
jb
cmp
adc
push
fiaddl
push
jle
mov
mov
out
xlat
das
and
out
loop
mov
int3
movsl
std
jnp
popl
xchg
push
std
movsl
or
pop
movsl
fdivl
xor
push
lret
aaa
pop
je
xchg
mov
lea
push
xchg
movsb
adc
lret
shrl
sarl
jg
mov
jecxz
xlat
inc
das
mov
xor
jnp
fsts
xor
enter
shlb
pop
inc
mov
iret
mov
inc
insl
jb
add
sub
push
xor
test
xchg
hlt
sbb
fwait
ja
jb
ret
rol
mov
div
add
xchg
sub
das
sbb
loop
jnp
xchg
sahf
fwait
dec
xchg
sbb
loope
aaa
mov
movsl
xchg
mov
sbb
jae
pop
mov
lret
bound
pop
int
loop
mov
aam
adcl
xchg
inc
in
popa
push
mov
aad
aas
push
test
inc
or
adc
adcb
or
mov
ljmp
add
ljmp
ret
les
out
aam
in
add
rcrl
jnp
mov
test
jle
out
cmc
jns
sbb
mov
pop
or
fs
lods
mov
ret
jecxz
jl
and
jbe
mov
pop
sbb
int
or
mov
cs
push
faddl
mov
lahf
fwait
inc
loopne
loope
push
imul
ljmp
sub
xor
dec
movsb
out
imul
mov
pop
std
lret
test
stc
jmp
or
push
jle
outsb
pop
xor
mov
jl
mov
pop
cld
push
arpl
ret
lods
lock
test
loope
sub
and
push
xchg
std
xor
mov
push
out
gs
inc
rcll
cmpsl
cmp
js
push
pop
pop
jns
dec
movsb
scas
subl
dec
addb
fwait
push
imul
mov
push
clc
cmpsb
pop
jb
xchg
cltd
mov
xorb
dec
lods
xor
out
pop
std
cwtl
aam
cltd
push
das
test
inc
pop
or
adc
pop
lods
or
das
jno
cs
mov
add
into
mov
adc
popf
fstpt
mov
shrl
call
sub
cld
mov
in
hlt
addr16
mov
lock
mov
arpl
or
add
inc
jae
lea
and
test
dec
mov
xor
xor
test
mov
in
sub
jb
dec
sarl
cwtl
testl
fmuls
xchg
mul
adcb
push
mov
es
lea
fnsave
sbb
push
rorl
lds
pop
sub
pop
push
pop
fidivrs
cmpsl
mov
loope
pop
test
xor
cmp
push
dec
lea
push
loopne
push
fwait
sub
in
cwtl
fcoms
adc
sub
pop
mov
sub
outsl
push
testl
xchg
xor
sbb
xchg
xchg
xchg
push
adc
xor
push
enter
dec
jnp
repnz
sub
cmp
shl
or
mov
stos
and
push
xor
inc
movsl
add
outsl
outsl
xchg
es
popa
xor
int
xchg
xlat
ficoms
or
jo
out
adc
pop
lahf
mov
inc
dec
cwtl
loopne
and
ljmp
into
in
shrl
cli
pop
lds
mov
je
pop
jno
xchg
sarl
add
and
adc
and
mov
mov
jecxz
shrb
nop
mov
or
dec
in
cmp
mov
movsl
stos
shll
dec
scas
shll
jl
and
xchg
jo
xor
jmp
push
shlb
mov
mov
mov
mov
jae
jp
fadd
dec
lods
loopne
in
cld
pushf
and
fcoms
sti
addb
addr16
xchg
pop
imul
mov
jecxz
ja
lock
out
push
sub
les
stos
inc
adc
nop
popa
stos
cmpl
stos
add
dec
mov
jns
lcall
xchg
loopne
mov
fwait
inc
adc
or
mov
pop
or
daa
xor
in
or
jbe
imul
js
sub
divl
scas
ret
pusha
mov
hlt
arpl
insb
mov
push
adc
jle
imul
cmpsl
add
sahf
sub
xchg
and
mov
adc
aas
ja
clc
loopne
cld
cli
mulb
repz
ret
or
cmp
scas
fstpt
inc
ret
and
sti
jmp
cmp
cmp
ret
inc
mov
cmp
imul
call
add
adc
lods
lahf
icebp
in
repz
adc
cmpb
outsb
adc
scas
inc
mov
loop
ja
roll
mov
in
popf
mov
lret
inc
add
inc
pop
push
loope
jno
push
mov
test
rolb
scas
push
or
pop
ret
and
sbb
inc
jmp
mov
sbb
xor
inc
je
sbb
jg
inc
std
call
xor
jmp
out
dec
xchg
jno
add
dec
add
jns
adc
inc
lcall
mov
xor
loopne
jge
mov
jne
xor
scas
sub
mov
stos
ror
mov
push
int3
push
and
push
in
mov
shrb
mov
mov
adc
xchg
aaa
and
shl
and
dec
sti
and
fildll
xchg
mov
sub
xor
jge
pop
push
mov
sarl
aam
in
push
and
push
notb
flds
enter
and
lock
xchg
cli
add
jmp
sbb
cmp
fdivp
pop
inc
test
imul
cmp
scas
push
sub
mov
jecxz
std
cpuid
pusha
ja
jecxz
sub
cli
cwtl
xor
popa
rol
sbb
pop
mov
mov
push
test
imul
cli
push
pop
imul
faddp
mov
mov
dec
iret
out
cs
andl
bound
pop
jne
imul
mov
jbe
push
ficoms
sahf
jns
icebp
aad
ds
push
aas
sub
negl
add
jecxz
fsubl
ds
xor
inc
xchg
iret
and
addps
in
add
cmpsl
sbb
shll
pop
push
mov
push
das
cmc
cmp
je
adc
mov
push
lea
inc
repnz
shlb
mov
or
ret
xlat
cmp
add
fwait
and
push
loope
lcall
pop
mov
sbb
mov
push
sub
inc
or
cmp
dec
add
mov
shl
jg
dec
add
or
scas
movsl
aam
cmpsb
rcrl
jmp
sar
mov
iret
sub
pop
mov
inc
push
ds
sbb
out
ljmp
out
enter
daa
jge
cmp
push
pop
data16
lahf
gs
mov
and
push
cmpsl
pop
or
or
mov
mov
addr16
ljmp
test
xchg
adc
cwtl
sub
sub
push
mov
out
lahf
mov
and
mov
push
js
cmp
mov
testl
in
addr16
int
xchg
sbb
jnp
sub
mov
jle
xchg
arpl
shlb
mov
leave
enter
imul
sbb
in
add
xchg
jge
fstpt
outsl
inc
xlat
push
pop
pop
add
pop
sahf
pop
push
sub
hlt
jo
inc
pop
rclb
jbe
jg
jp
imul
outsl
jns
push
mov
push
pushf
pop
testb
cmpsb
or
pop
mov
movl
ror
mov
or
or
add
mov
sub
addr16
add
xchg
jne
je
fs
mov
gs
sbb
test
scas
xor
test
fistps
test
push
mov
mov
rcrb
pop
jmp
fdivr
jge
outsb
add
lret
dec
push
mov
dec
dec
leave
ja
cmp
sbb
adc
sub
adc
rcrb
shll
sub
push
icebp
icebp
mov
popf
hlt
jp
and
pop
inc
sub
cmp
xor
inc
stos
shrb
mov
xchg
xchg
jmp
jecxz
mov
lea
enter
sub
lods
push
movsb
xchg
inc
mov
push
lods
mov
mov
sbbb
jg
or
movsl
mov
ja
std
hlt
scas
test
in
ret
test
aaa
aam
push
mov
jg
ja
and
icebp
shll
jo
test
sbb
mov
adc
in
add
imul
sarl
movsl
in
add
cli
int
xor
test
out
inc
pop
je
gs
sub
movsl
xchg
cld
popf
insb
lahf
sbb
outsl
mov
adc
xchg
mov
push
jb
ss
mov
cmpsb
iret
leave
jge
dec
xor
outsb
fcoml
mov
cli
lods
inc
xchg
xlat
div
mov
xchg
fwait
lret
dec
int
push
xchg
sub
jb
xor
fcoml
xchg
movsl
cli
sbb
inc
inc
lret
pop
push
ret
adc
imul
fldt
out
icebp
jge
ds
inc
inc
sahf
inc
jne
xchg
xchg
loop
outsl
sti
xor
cld
adc
jae
into
add
xchg
add
xlat
mov
jl
mov
adc
rorb
push
and
cmp
fwait
push
aam
jnp
dec
mov
sbb
cli
mov
test
inc
ds
rcrl
in
xor
lods
fisttpl
call
pop
les
and
mov
xchg
pop
scas
and
xor
in
ds
loopne
push
sub
nop
cmp
scas
aam
inc
stc
inc
jmp
mov
xchg
dec
mov
xor
shrb
dec
or
sbb
sub
cmp
sub
pop
std
xchg
cmpsb
mov
cmp
shll
mov
and
gs
or
cmpb
push
xchg
mov
mov
sbb
ret
sbb
pop
movsl
adc
cmp
sbb
call
jb
cli
adc
mov
inc
inc
pop
icebp
sti
ret
out
in
test
mov
xchg
mov
mov
jb
pop
gs
xlat
shll
loope
sub
int
pop
pop
loop
in
fwait
mov
push
cmp
push
in
adcb
stos
imul
addr16
int
loopne
sbb
dec
pop
mov
int
sti
int
dec
mov
xlat
pusha
cwtl
mov
mov
int3
and
test
push
jmp
decb
stc
testl
mov
mov
addr16
jg
sbb
adc
lods
fdivrs
je
pushf
leave
and
test
pop
cli
pop
or
or
aas
les
pop
notb
sub
mov
and
insb
inc
or
inc
mov
ss
les
fs
pop
xchg
sub
loopne
push
and
repz
ret
jnp
jb
xlat
xorl
fdivl
and
icebp
inc
fdivrs
push
mov
mov
test
fadd
xor
adc
cwtl
js
int3
xchg
pop
leave
sbb
mov
scas
cli
inc
inc
clc
add
mov
aas
ret
das
adc
mov
out
mov
cmpsl
ficoms
ret
aad
cmp
leave
outsl
and
xor
sbb
lods
out
leave
inc
mov
repz
push
or
jecxz
jg
loop
or
jbe
cmp
sub
pop
or
pop
mov
inc
xlat
js
in
dec
popf
jecxz
in
pop
rcrb
fimuls
adc
jns
jns
and
push
call
je
jns
jnp
pop
add
loopne
pop
out
je
data16
xchg
loopne
push
clc
fcmovnb
push
test
xchg
cmp
cs
rcll
imul
pop
xorb
cmp
mov
repz
mov
icebp
mov
cmpw
inc
cltd
dec
jmp
pusha
fdivl
imul
lret
sahf
jecxz
push
fucom
sub
and
jg
sbb
jne
out
push
sbb
pop
xchg
add
mov
jecxz
mov
int3
mov
lcall
rorl
sub
out
aad
scas
aas
iret
cmpsb
subb
sti
jnp
and
rorb
movsl
mov
xor
inc
xchg
leave
into
xor
sbb
shlb
and
inc
cld
add
pop
xorb
popa
loope,pn
cs
jge
mov
scas
arpl
lods
push
push
jbe
jl
push
sbb
mov
dec
push
ds
mov
add
jmp
fildll
pop
adcl
mov
hlt
mov
dec
xchg
outsl
adc
mov
popf
in
lock
mov
repz
cld
mov
repnz
imul
pop
sub
inc
pushf
outsb
pop
out
or
or
inc
ds
stos
mov
or
pusha
jp
inc
pushf
mov
stos
das
mov
popf
sub
xchg
push
popa
repnz
adc
test
push
out
jae
xchg
and
push
andl
pop
sbb
rcl
test
push
std
adc
mov
fdivrs
lahf
push
mov
xor
add
jle
shll
mov
adcl
jge
sub
incl
pop
mov
decb
mov
add
aad
jle
xlat
pushf
lods
jno
es
movsl
loopne
pop
sub
aas
in
jle
mov
sub
push
leave
dec
xchg
int
mov
or
xchg
pop
icebp
adc
cmpsl
jl
mov
cld
fimull
dec
lods
std
in
add
fcoml
mov
cmp
push
aaa
xor
in
lahf
into
in
sub
and
xlat
shlb
mov
inc
or
out
lea
sub
sub
jp
xor
ret
mov
jge
mov
cmp
test
jns
stos
xor
dec
int3
mov
jbe
arpl
lcall
in
cli
sar
mov
mov
mov
pop
loopne
mov
pop
dec
push
es
lods
test
and
jmp
add
push
xchg
shlb
js
sub
or
dec
mov
lods
mov
xchg
int3
arpl
loope
inc
sub
out
xchg
js
rorb
push
adc
pop
out
bnd
imull
sar
into
jo
dec
insb
loop
ds
or
xor
mov
sahf
sbb
jne
jle
nop
insb
inc
sbb
outsb
in
ds
cmpsl
push
or
divl
lcall
cmp
loop
pop
dec
es
mov
es
out
fmuls
data16
mov
int3
test
mov
pop
push
xchg
stos
lea
xor
lcall
js
sub
sbb
jae
les
fldenv
sbb
jle,pt
stos
out
sbb
mov
ljmp
sub
pusha
jl
int3
stos
mov
pushf
inc
test
and
and
in
mov
ret
jge
jge
xchg
cmc
mov
jp
xchg
ja
mov
aas
add
sbb
adc
sarb
into
inc
mov
push
bound
jg
xlat
lret
std
fcmovu
es
mov
je
sbb
push
xchg
mov
test
mov
addl
dec
inc
cwtl
scas
ss
mov
out
cltd
mulps
sahf
je
scas
das
movsl
lock
in
rcrb
mov
dec
jo
add
test
loope
sub
inc
add
rolb
test
movsl
cmp
fildl
xchg
int3
leave
push
cmpsl
dec
mov
xorb
xorb
sub
or
nop
dec
sub
jnp
add
sahf
jb
icebp
pop
mov
xchg
loope
lahf
inc
js
movsl
into
out
fldt
add
daa
lds
pop
jl
loop
jae
int
sbb
sbb
aam
jne
insb
daa
inc
adc
xor
mov
push
hlt
xchg
and
inc
mov
pop
sub
pop
mov
sti
cmp
pop
cmp
out
out
in
xor
lahf
mov
in
jae
icebp
mov
sbb
loopne
xor
hlt
repz
or
roll
or
stos
xchg
les
sub
sbb
stos
pushf
mov
iret
jne
sti
std
inc
push
arpl
jmp
nop
shll
stos
add
movsl
popf
lds
push
push
mov
jns
jo
aaa
clc
inc
or
push
ljmp
daa
dec
push
inc
faddl
mov
rcll
and
ljmp
xchg
adc
fcoms
ss
outsb
dec
aad
jmp
sub
mov
in
enter
daa
pushf
push
stos
sbbl
adc
xchg
xor
mov
pop
pushl
jp
popf
inc
outsb
cld
xchg
push
lret
push
xchg
add
loopne
gs
das
lcall
xor
push
push
mov
ljmp
jg
je
ljmp
mov
mov
rcrb
daa
pop
aad
mov
sbb
mov
shll
inc
xchg
adc
pop
cli
stc
and
mov
add
pop
enter
mov
test
or
xchg
scas
adc
mov
push
fsubr
loope
mov
leave
sub
and
cmp
pop
xchg
jae
push
cs
sub
cmp
int
xchg
cmp
bound
cmp
lcall
loope
xor
cwtl
mov
xchg
es
in
push
les
scas
in
ds
scas
mov
xchg
pop
xchg
sbb
cmp
xor
frstor
rolb
fcmove
notl
pop
nop
xchg
mov
nop
fprem
dec
enter
aaa
inc
stc
lahf
mov
repnz
dec
cmp
mov
or
push
dec
shll
mov
lret
out
stc
pop
mov
jns
in
jp
popf
pop
push
addb
xor
in
lahf
xor
adc
popf
int3
lea
subb
rcll
inc
loopne
inc
add
adc
xchg
dec
cmp
stos
rolb
test
and
push
bound
mov
lret
cwtl
cwtl
fimull
cmp
ljmp
push
js
adc
jbe
jge
loope
add
test
pop
add
arpl
sbb
orb
adc
or
fidivrl
mov
out
pop
jae
jae
popa
ds
rcrb
mov
sahf
xor
dec
sbb
dec
clc
jle
rcrb
xchg
nop
movsb
mov
push
cmp
hlt
add
mov
mov
mov
ja
out
insb
push
cltd
inc
int
pop
sbb
lea
int
lds
arpl
push
lods
aad
push
dec
or
fisubrs
or
loopne
lods
jge,pt
inc
in
and
mov
negl
push
mov
stc
lods
int3
dec
shll
mov
mov
cmp
andl
mov
pop
jge
dec
mov
lods
inc
ficoml
adc
fnsave
sub
mov
out
dec
sub
adc
sarl
cld
jb
shlb
xchg
mov
scas
fs
mov
testb
xor
mov
out
mov
pop
jo
mov
adc
xchg
mov
adc
mov
jae
sbb
or
xor
ret
jns
or
dec
xorb
pause
insb
mov
or
push
rorb
enter
lds
lock
dec
ret
lcall
lods
inc
shl
xchg
es
cmp
dec
int
sbb
imul
mov
sti
sbb
pop
fnsetpm(287
sbb
mov
fldl
test
sahf
sbb
cmpsb
fisubrl
mov
ret
roll
shlb
and
lods
shll
dec
mov
push
jge
inc
bound
cmpsb
movb
adc
lahf
adc
hlt
jbe
movsb
rcr
jae
xchg
pop
aaa
test
clc
in
in
test
add
push
adc
cmc
cwtl
add
add
jg
jns
add
sub
mov
push
jmp
pop
mov
jno
mov
push
xchg
test
aaa
mov
aaa
sbb
jge
or
mov
push
mov
adc
xchg
mov
les
and
xchg
lcall
in
dec
rclb
cmp
or
inc
xchg
mov
pop
mov
daa
dec
pop
mov
mov
or
clc
pushf
outsb
bound
sahf
in
scas
sbb
idivb
sub
mov
sub
icebp
aas
mov
ffree
data16
aas
lds
xchg
int
dec
fadds
mov
pop
mov
push
jecxz
outsl
fcmovnb
jg
jbe
jnp
jb
mov
cmp
sbb
jnp
mov
jne
lods
in
ret
int
pop
in
dec
stos
or
popa
fnstsw
sbb
daa
and
dec
inc
out
cs
jmp
fnstenv
mov
aas
rolb
xchg
ljmp
mov
notl
cmp
movsb
testb
push
jmp
mov
daa
jns
add
gs
mov
daa
out
ljmp
das
fdivs
fsubr
dec
dec
mov
fcmovnbe
jns
jns
sbb
pushw
out
adc
mov
cmc
aad
add
sbb
dec
sub
push
jae
sbb
out
xchg
scas
enter
jnp
dec
mov
je
xchg
hlt
cmpsl
decl
pop
pop
ret
xchg
enter
push
vucomisd
jl
cwtl
mov
out
in
pushf
inc
data16
icebp
xor
cld
js
fists
mov
sub
add
mov
sbb
push
xchg
cs
add
fadds
push
rcrl
lods
lods
mov
negb
push
mov
faddp
pop
lea
sbb
cmpsl
sbb
loop
mov
push
subl
add
pop
sbb
outsb
andl
pusha
sub
and
lahf
pop
mov
push
or
push
std
call
movsb
xchg
ficomps
mov
pop
loope
aad
popa
mov
sub
cmp
add
out
lret
pop
sbb
scas
test
test
add
fldl
mov
jb
nopl
fidivrs
pop
cmp
mov
and
fsubl
call
cwtl
sub
mov
sahf
sbb
popa
sub
pop
shrb
jno
mov
scas
push
and
push
ja
outsb
cs
mov
daa
mov
lods
mov
mov
lods
xchg
cmpsl
orb
pop
pop
lock
cwtl
push
mov
aam
je
jle
xor
xor
dec
enter
je
es
outsl
out
test
add
jecxz
out
add
repz
arpl
test
fcomps
testl
mov
stc
into
push
ljmp
inc
xor
insb
mov
jns
fcoml
into
push
xchg
xor
jp
mov
lods
sbb
dec
add
sub
rcll
addl
push
or
dec
xchg
lock
popa
and
ljmp
lods
inc
push
pop
fs
fisubl
das
mov
aaa
mov
cmp
adc
pop
test
es
sahf
push
scas
and
sbb
mov
jne,pn
std
adc
push
sbb
lahf
push
data16
pushf
jle
outsl
ja
test
add
lahf
call
ret
pop
and
sbb
inc
mov
stc
jne
push
jg
cwtl
loope
dec
cmp
xor
xchg
sti
xorb
test
rorb
es
in
lds
pop
aas
cli
mov
out
aam
iret
cmp
xchg
lahf
add
sbb
pop
sbb
shl
lret
jo
cmp
rol
fstpl
xchg
mov
sub
and
xchg
bound
dec
nop
arpl
aad
pop
decb
xor
xchg
sti
dec
pop
gs
out
std
dec
fisttps
pushf
xchg
rorb
scas
fs
in
pop
cwtl
out
jne
xor
aas
mov
insb
xchg
lods
sbb
adc
sarl
cmpsb
clc
ret
hlt
push
fmuls
push
jge
imul
pusha
int
sub
dec
fcoms
push
dec
mov
fisubs
dec
jne
in
adc
mov
test
push
cmp
stc
xchg
push
sbb
and
push
loopne,pt
pop
pop
inc
syscall
inc
nop
mov
push
js
cmpsb
in
sbb
fucomi
mov
dec
ja
lahf
in
fmuls
call
sub
icebp
bound
and
stos
xchg
ret
xchg
jb
mov
in
lahf
lret
movsb
arpl
daa
jp
dec
fldt
and
xor
movsb
sbb
les
or
adc
repz
das
and
leave
sbb
xor
inc
lock
sub
js
cmpb
movl
outsb
fcoms
sub
pop
call
out
xchg
ljmp
and
daa
aaa
fstpt
je
xlat
xlat
mov
pop
mov
loopne
ds
jb
mov
iret
adc
xor
cmp
cmp
mulb
das
pop
cltd
add
inc
adc
mov
negl
andl
stos
mov
cwtl
hlt
data16
inc
jno
and
into
jg
mov
jge
call
dec
jbe
add
ret
scas
adc
fscale
sub
pop
arpl
mov
mov
mov
mov
fwait
insb
inc
test
jo
cs
ret
jns
aad
mov
and
pop
in
xor
mov
cmc
or
sbb
xchg
mov
div
sahf
jle
hlt
adc
shl
outsl
lcall
incb
mov
notl
andl
mov
or
mov
jae
sbb
sub
dec
sub
add
inc
clc
rclb
shrb
in
dec
repz
gs
push
cld
mov
push
addr16
ss
and
mov
xchg
into
jmp
inc
test
outsb
push
dec
ja
push
pop
ss
pop
lods
std
sbb
ds
sar
cwtl
cmp
out
outsl
aaa
push
ret
mov
repz
movsl
ficoms
xor
xchg
lret
leave
dec
fidivrl
adc
outsb
sub
add
fdivr
push
xchg
lret
xchg
ljmp
jmp
in
ja
mov
inc
std
xor
dec
cmp
mov
movsb
scas
aaa
je
mov
xor
xor
cmc
and
sub
test
and
es
mov
mul
xchg
test
xchg
xchg
dec
mov
mov
mov
xor
imul
and
int
sub
xchg
cmp
adc
loop
or
repz
jo
hlt
mov
dec
mov
adc
jno
jge
add
es
int3
mov
subl
dec
jne
mov
xor
add
xchg
push
data16
sub
mov
pop
inc
push
test
dec
sub
subb
testb
stos
push
imul
push
into
mov
je
mov
movsl
xchg
lcall
mov
js
xor
in
cmpsl
mov
rorb
sbb
lock
imul
xchg
push
in
push
or
mov
jp
jle
dec
jo
pop
lock
pop
inc
push
jcxz
add
inc
loopne
add
sbb
cmc
inc
jb
sahf
sub
mov
xchg
jp
fidivrs
insb
ret
mov
push
ja
frstor
fimull
xchg
aam
shrb
lret
outsb
pop
push
std
add
mov
xchg
add
mov
sub
test
add
repz
stc
mov
sub
inc
imul
push
repz
and
in
sbb
out
jb
xchg
jl
std
call
or
cmp
or
iret
into
hlt
out
mov
loope
test
push
stc
inc
cmp
inc
outsb
mov
or
jae
nop
jns
lea
outsl
jecxz
mov
int3
xchg
fisubl
das
mov
mov
mov
in
cmpsl
mov
addr16
imul
adc
test
push
xor
call
subl
jmp
arpl
test
push
fwait
dec
lret
mov
test
icebp
das
sbb
adc
cmp
sarb
xor
mov
cmpl
xchg
mov
jl
out
xchg
cwtl
sahf
fdivrs
xchg
nop
and
xor
pop
cmpsl
dec
pushf
in
cmp
and
ljmp
jp
sub
icebp
cwtl
out
fdivrl
pusha
aas
add
movsb
xchg
call
cmp
cmpl
push
xchg
dec
or
mov
dec
mov
dec
push
dec
in
fdivrs
ds
lock
xchg
test
mov
imul
out
push
adc
and
add
jge
das
ret
mov
or
jnp
pushl
and
insb
shr
out
or
mov
add
xor
popf
imul
jns
xchg
dec
loop
int3
andb
std
jmp
mov
cld
jl
add
adc
hlt
mov
imul
pop
cwtl
lods
cs
mov
dec
and
or
dec
mov
rorb
push
pop
mov
sub
in
dec
jno
loopne
popa
pop
lods
test
mov
addr16
jo
enter
cmpsl
fld1
mov
sbb
aad
and
mov
rol
inc
mov
repz
mov
aam
movsl
sub
cli
jae
push
iret
mov
and
out
pop
push
sbb
or
int3
test
mov
aam
enter
cmp
adc
push
and
addr16
aam
or
out
test
and
inc
xor
fs
shlb
and
cmp
jns
andb
pop
lock
lods
jne
push
dec
cld
xchg
pop
push
popa
stos
sub
pop
pushf
ss
cwtl
mov
ss
add
inc
int3
nop
mov
cmc
sahf
push
cs
shr
fldl
xchg
xchg
pop
pop
fdivr
pop
push
jo
popf
aaa
adc
cmp
mov
pop
pop
xchg
push
loope
test
lods
dec
cmp
mov
shlb
cmp
int
jnp
sbbb
xchg
mov
push
cmp
subl
jo
mov
mov
fst
jecxz
cwtl
ja
sbb
or
repz
pop
dec
movsl
pop
leave
gs
push
test
xchg
jg
pop
fdiv
add
scas
push
jbe
sbb
dec
inc
inc
mov
sbb
sub
or
pop
mov
fadd
test
cli
jo
out
push
test
sbb
movl
call
in
dec
jbe
jbe
mov
in
push
xchg
cmpsl
ret
or
movsb
jne
int
in
nop
jbe
sbb
aas
and
push
mov
mov
nop
jno
cmp
jmp
sub
jg
test
add
outsl
jmp
idivl
cmp
inc
and
xchg
cmp
sbb
ja
in
sbb
nop
jo
or
gs
arpl
xor
sub
xchg
jle
xchg
mov
das
popf
rorl
jno
jl
sub
mov
pop
pop
sbb
cli
stos
fstps
out
xor
pop
push
mov
mov
xchg
pop
sub
mov
outsb
xor
sub
jbe
mov
leave
xchg
push
and
push
aas
xor
cmp
lret
mov
mov
or
push
aam
movl
add
leave
mov
mov
pop
xor
and
daa
adc
mov
mov
nop
pusha
ret
shlb
pop
pop
icebp
nop
inc
jmp
daa
repnz
mov
xchg
fs
sti
cmp
insb
sub
push
xor
mov
add
orb
in
mov
jo
mov
pusha
cmp
or
les
test
cmp
pop
mov
jb
aas
test
fdivl
subl
or
aam
sbb
arpl
mov
aad
cmpsl
loopne
stos
and
jne
sub
dec
sub
xchg
insl
sub
popa
mov
cmp
fcmovbe
imul
add
add
mov
push
test
sub
add
rcr
loopne
add
mov
jno
outsb
aas
xor
shlb
jl
rolb
sbb
addr16
out
outsl
es
sbb
mov
adc
mov
cmpsl
xchg
ljmp
or
ss
push
jmp
xchg
sbbl
sub
xorl
pop
jnp
andl
out
xor
ds
repz
adc
in
pusha
les
and
push
xchg
mov
jno
and
imul
repz
outsl
mov
xchg
push
in
xchg
in
aas
inc
shrl
push
test
cmpsl
xchg
add
rcrb
dec
mov
in
push
add
loop
jne
xlat
dec
int3
dec
xor
pop
arpl
mov
fwait
ja
in
xor
scas
mov
aaa
mov
push
adc
xchg
and
insl
ret
mov
add
je
push
int3
mov
adc
fcoml
xchg
xchg
pop
push
mov
sahf
xorb
sbb
test
cmp
push
jb
dec
mov
mov
fnstsw
pop
leave
mov
cltd
aaa
js
popa
sub
into
rol
add
movsl
movsl
rep
repz
inc
mov
out
xchg
es
push
push
cmp
inc
mov
out
lock
arpl
in
pop
test
out
popa
fnstenv
idivb
xchg
data16
jb
fistpl
call
xorl
fcoms
dec
cmp
mov
stc
js
and
mov
mov
adc
pop
ficoml
cmp
popa
movsb
push
test
cmp
outsb
adc
sub
lcall
leave
addr16
cld
adc
loopne
ficomps
mov
push
xchg
jnp
jle
dec
mov
pop
jnp
and
push
inc
rcr
pop
in
xchg
and
pop
xchg
mov
movsl
cmp
sbb
and
imul
xchg
pop
stc
pop
add
jmp
xor
aaa
test
dec
mov
stos
std
push
mov
push
cmpsb
push
lock
add
out
cmp
stos
cwtl
hlt
inc
or
lock
mov
dec
xchg
inc
fadds
out
add
cmp
add
and
adc
out
mov
and
aad
xchg
fisttpll
and
bound
aam
push
aas
seta
xor
das
xchg
jecxz
sbbl
xor
adc
sub
or
orb
cmp
das
cmp
ret
sti
push
pop
lods
push
aaa
mov
sub
xchg
lock
sbb
fstps
mov
hlt
mov
test
sub
push
mov
adc
in
or
xchg
xor
push
out
dec
push
pop
add
cwtl
mov
dec
fcompl
and
das
xor
sub
out
inc
in
loope
dec
dec
xor
sub
pop
mov
lods
xor
out
xchg
push
negb
jp
movsl
fbstp
xor
mov
mov
pop
mov
movl
and
lds
sub
stc
les
cmpsl
pop
sub
and
lock
dec
in
pop
cli
iret
ds
mov
orb
or
add
dec
xchg
jp
add
or
mov
test
push
mov
movsl
mov
call
xor
cmp
ret
dec
in
push
cltd
cmp
mov
out
hlt
dec
rcll
in
mov
add
jp
sti
lock
lret
hlt
push
cli
repnz
adc
mov
mov
stos
push
xchg
scas
mov
test
test
test
and
pop
jbe
lods
test
sarb
sbb
imul
subl
fs
pop
or
test
gs
aas
xchg
in
mov
xor
enter
sarl
push
movsl
loop
jb
into
add
inc
shl
and
mov
outsb
out
fld
sbb
das
enter
jae
int
jge
xor
call
xor
adc
lods
test
test
imul
je
cmp
scas
inc
pop
aam
and
int
inc
push
inc
and
jo
test
test
mov
jo
popf
push
call
ds
fwait
inc
and
adc
push
pop
mov
jp
scas
iret
mov
mov
mov
lahf
in
pop
enter
dec
mov
add
in
aaa
sub
lods
test
adc
lock
sub
xchg
test
jo
sbb
outsb
ja
xchg
addr16
js
mov
hlt
movl
sbb
ret
fdivrl
mov
pop
test
jmp
fwait
addb
out
mov
jne
ret
outsb
sub
xchg
mov
cs
insl
clc
rcrl
loop
xchg
sbb
pop
orl
dec
lds
sbb
mov
add
ljmp
xor
push
or
out
fisttpll
push
xchg
popf
or
and
xor
jge
push
loop
cmpsb
sub
out
popf
mov
mov
inc
jl
pop
mov
xchg
iret
or
pop
or
adc
sub
mov
adc
jno
jns
pushf
jmp
fisubl
mov
popa
sub
xlat
aad
mov
xor
jo
movsl
in
lock
xor
loop
ret
jae
jl
addb
hlt
add
pop
push
adcb
xchg
cs
sti
jae
jmp
or
xor
popa
fwait
stc
test
pop
pop
inc
xchg
stos
lds
pop
mov
es
add
repz
and
ret
movsl
sub
out
pushf
bound
mov
cs
pushf
loopne
lcall
adc
xchg
mov
insl
mov
insl
ja
les
pop
loop
inc
fwait
cmpsl
fsubrl
mov
das
cmp
push
inc
loope
dec
pop
xlat
test
aam
sub
lret
adc
sub
inc
das
aam
inc
xchg
push
xchg
ss
sbb
sbb
lods
and
movsb
add
roll
push
push
sub
jecxz
add
xlat
enter
test
bound
jae
cld
pushf
aad
repnz
push
pop
xlat
ss
les
jne
js
pop
inc
dec
push
mov
pop
cmc
jmp
movsl
xor
mov
sub
pop
or
cs
int
xchg
mov
roll
sub
jecxz
cmpsb
and
xor
fwait
dec
stos
addl
ljmp
sbb
hlt
cmp
pop
popw
xor
test
in
loope
xor
adc
icebp
jns
in
es
or
enter
cmp
mov
cmpsb
int
cmc
mov
sbb
sbbl
faddl
push
nop
pop
jecxz
jmp
ljmp
lcall
shlb
rcll
dec
ja
mov
in
push
mov
in
psrlq
int3
mov
push
popf
jmp
addl
push
xchg
dec
loopne
cmp
lock
jb
ret
add
arpl
jno
xchg
mov
adc
gs
incl
lret
lds
aas
out
cmpl
add
jo
or
jecxz
push
rcrb
fidivl
inc
push
clc
in
rorl
imul
mov
and
jb
dec
cmp
icebp
in
jle
jecxz
fwait
mov
call
movsb
inc
arpl
mov
mov
xchg
in
pusha
subl
pop
mov
push
or
jg
sbb
cltd
iret
sub
sbb
cmp
jns
xchg
adc
ds
cmp
aaa
movsb
mov
sbb
jmp
sub
test
cmpsl
jle
xor
rcrl
insl
cmp
mov
outsl
adc
push
addb
pop
sti
sub
add
jg
sub
fldenv
jmp
cld
mov
aam
iret
cmpsb
in
insb
and
js
sti
movsl
ret
aam
or
dec
mov
pop
adc
adc
arpl
ss
dec
jmp
mov
std
test
imul
test
imul
mov
in
in
inc
dec
or
xchg
inc
stos
pusha
cld
dec
sbb
sbb
je
inc
adc
add
pusha
rorb
lahf
mov
mov
dec
dec
bound
xor
ljmp
mov
and
push
jle
and
cmc
or
sti
jge
dec
fists
popf
add
add
and
adc
imul
popa
test
or
xchg
push
adc
and
pop
push
push
aaa
inc
jmp
subl
sub
xchg
test
das
mov
iret
fisttpl
les
dec
out
in
mov
or
jl
inc
or
test
mov
ret
pop
sub
call
cli
and
call
rcr
cmpsb
jle
iret
inc
sub
xchg
sub
jp
mov
outsl
adc
das
dec
sbb
addr16
cltd
in
mov
xor
lret
pop
and
int3
cli
dec
out
push
adc
sbb
mov
pop
pop
popa
mov
cwtl
ret
dec
xchg
add
lods
jbe
das
mov
or
add
sahf
cmc
jae
sbb
ss
lods
mov
aas
data16
dec
rcrb
js
es
jb
loope
sub
mov
mov
pushf
jbe
jg
movlps
movsl
movsl
xchg
dec
repz
arpl
and
lcall
adc
push
stos
add
cltd
out
inc
pop
or
cli
stos
jns
insl
and
lds
mov
sbb
mov
sti
push
jne
push
mov
in
pop
push
loope
mov
imul
shlb
adc
jge
dec
mov
aam
inc
iret
leave
cmp
insb
cmp
jge
dec
hlt
cmpsb
rcr
aam
scas
les
mov
dec
out
aad
sbb
repnz
xchg
repz
scas
mov
adc
ja
adc
jecxz
xchg
cmp
pop
outsb
add
lret
add
lock
fcmovbe
adc
fisubl
push
fisubs
repnz
add
stos
dec
pop
out
lods
cs
adc
xchg
mov
mov
clc
jmp
jl
xchg
test
pop
push
mov
out
or
dec
sub
or
push
fcoml
filds
push
and
jl
aaa
push
and
cltd
js
idivl
je
loope
mov
stos
mov
and
pop
adc
pop
lahf
dec
xchg
xchg
lds
inc
jns
shl
push
xlat
mov
push
insl
push
jmp
jbe
cmp
lock
outsb
sbb
shlb
xchg
pop
test
dec
xlat
xor
xchg
and
cmp
mov
push
inc
neg
mov
mov
pmaxub
inc
mov
and
jne
lret
or
sub
mov
dec
dec
cmp
jle
pop
xchg
jg
movsb
push
clc
fucom
push
mov
xchg
stc
sahf
scas
repnz
cmp
icebp
enter
lods
mov
pop
mov
sbb
jae
lcall
rorb
stc
mov
cmp
lcall
sarb
outsl
sub
repz
mov
dec
in
test
xlat
and
cmp
movsl
xlat
mov
sahf
mov
xor
cli
int3
add
mov
hlt
jmp
inc
negl
sbb
imul
shl
orb
jge
std
cmc
out
mov
push
sahf
pop
cs
pop
xchg
mov
scas
push
lcall
call
mov
lods
out
ret
adc
dec
pop
mov
mov
rorl
mov
enter
ljmp
mov
adc
pop
push
push
sarl
xor
xchg
movsb
neg
mov
ret
jo,pt
mov
aam
in
pushf
dec
jae
add
or
and
addr16
push
dec
pop
inc
sbb
xchg
js
mov
insl
jbe
nop
clc
add
xchg
dec
je
insb
les
dec
nop
push
sarb
dec
and
xchg
lret
fimuls
shrb
push
fstp
pop
rol
xlat
xchg
cmp
stos
mov
dec
in
lods
pusha
adc
fadd
das
inc
sbb
aam
imul
add
and
mov
xor
push
cmp
scas
sahf
mov
inc
test
mov
mov
scas
ds
inc
inc
ja
std
dec
dec
rorb
rcrb
out
fsubrl
mov
xor
cmp
jg
mov
mov
fsts
jmp
mov
lret
cltd
aas
jb
xchg
cltd
aam
and
mov
imul
mov
inc
aas
dec
mov
call
imul
sbb
ss
cltd
in
dec
mov
dec
rcrb
mov
shr
dec
xor
shr
addr16
mov
test
jne
or
mov
dec
fbstp
xor
inc
mov
insl
xchg
sbb
adc
mov
add
or
inc
push
xor
cmp
dec
sub
and
fdivrs
pop
xor
jl
or
jbe
sbb
daa
pop
icebp
inc
lea
mov
lahf
adc
lret
hlt
mulb
mov
aas
sbb
jge
push
lea
orb
pop
or
push
sbb
add
mov
call
and
adc
orb
cmp
mov
int3
pop
jecxz
loop
xor
imul
je
and
lahf
push
xchg
lods
xchg
mov
cmpsb
dec
incb
ret
scas
or
mov
popa
sbb
sub
mov
in
aam
cs
inc
inc
aas
push
sub
push
jg
out
pop
adc
dec
or
out
stc
push
icebp
rcll
enter
shrb
out
fwait
and
repnz
hlt
leave
popa
out
int
scas
sahf
push
push
add
rcrb
leave
repz
cmc
js
stos
gs
mov
inc
pop
fdivs
inc
xchg
mov
sbb
out
pop
jbe
pop
nop
gs
sbb
sub
lret
dec
clc
mov
stos
out
insl
and
sarb
std
or
in
lahf
in
cmp
mov
mov
pop
cli
hlt
test
nop
push
pop
repz
xchg
mov
lahf
xchg
ss
and
sti
cli
das
push
add
adc
cltd
cmpsl
sbb
push
mov
stos
out
mov
fxrstor
mov
dec
or
xor
fsts
push
outsb
adc
or
mov
out
mov
test
ss
lcall
fstp
fimull
rolb
xlat
sbb
loopne
ljmp
cmp
cmpsl
push
mov
test
fists
push
je
xchg
mov
out
or
sbb
pop
cmp
bound
daa
cmp
shll
cmp
dec
fidivs
arpl
orl
add
adc
das
in
test
and
fnsave
imul
jg
or
test
aad
ret
bnd
imul
pop
and
push
jg
adc
dec
call
sbb
xchg
hlt
xor
inc
mov
mov
adc
in
push
jno
imul
mov
gs
mov
push
aad
jmp
jl
mov
lret
inc
xchg
enter
cs
sbb
push
jne,pt
dec
sub
jl
lods
cmp
cmp
mov
shrl
addr16
mov
cld
dec
fcom
jne
sub
sub
test
daa
cmp
test
out
xor
adc
pop
jb
pop
test
popf
or
or
mov
mov
or
push
push
mov
sub
cmc
push
and
cmp
test
imul
sbb
mov
dec
sub
push
push
jo
xchg
adc
scas
dec
adc
iret
fcoml
movsl
jl
mov
sub
repnz
cmp
sub
stc
stc
out
ss
mov
arpl
jl
jo
clc
add
subb
mov
stc
add
fmull
xchg
push
xchg
lds
mov
mov
mov
movsl
sub
data16
jb
in
ljmp
je
scas
or
mov
or
aam
xor
sbb
inc
mov
fimull
sti
add
pop
js
fdivrs
xchg
outsl
mov
daa
or
sbb
aaa
or
sub
into
shlb
arpl
jae
or
pop
scas
or
in
mov
cmc
iret
dec
push
aam
pop
shl
sbb
pop
jmp
call
jg
sbb
idiv
pop
pop
mov
sub
sub
sub
jge
in
and
sbb
sbb
out
adc
jecxz
nop
ja
fldcw
cli
xor
push
sbb
xchg
mov
mov
sub
xchg
inc
imul
repz
inc
dec
loope
jp
aas
ret
mov
sub
mov
mov
es
cs
push
mov
ret
inc
movsb
scas
ds
loope
mov
lea
push
push
sub
push
roll
les
inc
stos
xchg
cli
es
mov
add
dec
lock
push
xor
mov
das
fmuls
loop
fcomps
rclb
xor
pop
fistl
mov
jo
inc
fnstsw
fsts
adc
popf
push
or
int3
sbb
sub
mov
test
pop
add
pop
mov
je
clc
sub
and
movsl
aas
push
cwtl
outsl
pop
mov
inc
jnp
out
inc
jae
inc
mov
xor
mov
test
mov
fdivp
dec
dec
shlb
jbe
in
cmp
adc
ja
orb
in
clc
push
sbb
dec
pop
or
mov
outsb
int3
lahf
enter
out
mov
test
in
cld
lds
ljmp
or
push
ljmp
xchg
loop
push
push
and
sbb
inc
dec
test
lods
notl
pusha
sub
cmp
pop
daa
inc
mov
xchg
jbe
pop
cmpsl
mov
je
mov
push
dec
icebp
inc
lret
lea
jle
push
out
pop
mov
enter
dec
shll
lods
adc
daa
icebp
xor
push
mov
in
cmpsl
mov
and
or
repnz
stos
or
mov
mov
xchg
cmpsb
addr16
or
sbb
jae
adc
sarb
pop
rol
pop
sub
adc
and
inc
jns
pop
in
pop
insb
loop
mov
jbe
fidivrs
xchg
and
push
addb
popa
sahf
insb
jno
mov
mov
enter
dec
mov
scas
lds
or
inc
sbb
sbb
dec
add
imul
adc
push
jecxz
mov
sarb
test
mov
clc
push
call
dec
call
pop
jge
mov
shrb
cltd
mov
arpl
fwait
jo
shrb
pop
hlt
sub
fisubrl
ljmp
sub
fstpt
inc
stos
push
sub
rcr
adc
xor
nop
inc
stos
cmpl
ret
or
adc
popa
xchg
or
add
scas
inc
addb
inc
ds
dec
mov
mov
dec
sbb
cli
push
fisubl
dec
adc
jne
lret
sti
cld
sub
or
or
mov
mov
push
cs
push
dec
outsb
push
mov
fldenv
jmp
cmp
jae
push
sbb
jp
enter
movsl
sbb
push
mov
push
mov
push
sub
verw
sbb
mov
loop
dec
push
lret
mov
dec
or
cmp
insb
hlt
stc
push
stos
or
lea
daa
in
adc
dec
mov
repnz
stc
inc
add
xchg
arpl
xor
imul
pop
xchg
pop
and
jg
rcrl
jae
xor
sbb
sbb
lds
adc
dec
movsl
cltd
adc
push
xor
imul
pop
mov
jmp
xor
in
test
arpl
jmp
loope
shlb
cs
push
lahf
add
xor
and
jb
stos
cs
orl
xchg
sub
push
ret
daa
jge
lret
in
or
pop
push
mov
clc
mov
mov
mov
lods
addr16
jle
jae
dec
dec
popa
push
add
cwtl
jecxz
sub
leave
dec
sbb
hlt
ret
inc
aas
push
cmpsl
push
sti
or
add
in
push
adc
out
xlat
xchg
iret
sahf
push
mov
or
adc
bnd
mov
and
imul
xor
lahf
or
add
sbb
je
cmc
in
dec
cmp
mov
mov
or
out
mov
psraw
ret
in
mov
ds
ja
popf
sbb
enter
out
sub
pop
popf
int
and
or
sbb
mov
mov
jl
fistpll
rcll
mov
sub
pop
cmp
dec
adc
mov
jns
mov
pop
idiv
daa
xor
or
pop
aam
xlat
test
repz
dec
shlb
adc
jae
cmp
sbb
ja
les
mov
jae
and
mov
or
xorl
inc
loope
cltd
fiaddl
call
and
stos
xor
mov
lcall
ror
inc
sub
xor
je
jb
and
sahf
jb
repz
lcall
push
lret
stos
sub
mov
mov
idivl
jecxz
push
ja
cmpsb
test
push
insl
mov
sub
scas
add
inc
lcall
mov
and
int3
sub
ja
loop
mov
scas
sbb
push
pop
enter
pushf
xchg
or
or
movsl
pop
and
test
lods
stos
ja
out
mov
mov
pusha
das
sub
loopne
mov
jg
lds
mov
cwtl
std
mov
add
push
shll
pop
sub
mov
and
mov
cltd
cmp
int
mov
cmp
mov
popf
mov
push
adcl
leave
lods
lahf
mov
in
ljmp
mov
lret
int3
add
inc
test
outsl
repz
mov
out
cmp
cmp
bound
nop
jp
fcoms
and
mov
jb
pop
push
ljmp
sbb
cmp
js
scas
inc
sbb
fcoml
test
xchg
fsts
mov
push
mov
call
sub
or
clc
push
jle
lock
pop
jno
and
movsl
paddusb
add
sbb
shll
shrl
sub
mov
andb
and
jb
jb
jb
outsb
mov
enter
rcr
mov
cmp
sbb
pop
movsl
mov
je
cltd
add
or
jmp
das
fcomps
cmp
push
push
inc
sbb
cmp
push
clc
inc
lock
stc
pop
inc
mov
in
xchg
jge
testl
outsl
lcall
cmp
out
or
cmp
sbb
lret
xor
push
std
dec
roll
fidivrl
xchg
xor
cltd
lods
mov
fsubrp
movsl
adc
pop
adc
jge
cmpsb
cmp
jns
stc
and
and
mov
mov
sysret
loopne
sbb
fildl
rcrb
sub
xchg
ret
xor
call
dec
or
jns
and
mov
scas
adc
or
and
xor
pop
ja
mov
cltd
inc
add
pop
dec
in
cmp
aaa
cmpb
push
fisubl
mov
mov
ret
enter
inc
sbb
pop
pop
outsb
iret
lods
das
dec
xor
push
jl
in
mov
and
aaa
fstps
mov
movsb
cmp
rorb
xchg
divb
lods
cmp
popf
cmp
into
mov
adc
xchg
xchg
mov
in
fwait
push
pop
cmp
std
mov
outsb
sahf
xor
push
inc
int
add
or
push
pop
clc
push
sbb
pop
jnp
jmp
jbe
rcll
xor
mov
add
mov
mov
jno
mov
xchg
push
pop
bound
jbe
sub
fnstcw
inc
js
aad
jmp
in
or
mov
sbb
cmp
sbb
push
in
faddl
imul
fsubr
fistpll
add
push
cmp
xor
xchg
filds
add
mov
lds
jae
sub
fisubrs
sar
mov
xchg
in
cmp
pushf
cmpsb
push
fwait
mov
mov
push
xchg
xchg
data16
push
cmp
repnz
mov
jmp
pusha
xchg
inc
mov
mov
scas
jo
scas
jmp
xlat
jge
enter
loop
jle
adc
jbe
and
cmp
xchg
lret
test
mov
es
test
insl
fsubrp
pop
dec
xchg
push
sub
cmpsb
mov
imul
adcb
dec
push
sub
jge
and
mov
jb
mov
mov
cltd
aad
in
sub
pop
add
cmp
arpl
cld
in
outsl
sub
sti
xchg
repz
mov
jmp
addb
fsubrl
loope
sub
test
icebp
cmp
out
push
xor
scas
dec
mov
mov
icebp
fmull
into
fmull
mov
jae
and
dec
xor
jns
and
push
es
sub
loopne
xchg
lret
in
popf
xor
imul
inc
xchg
or
pop
xor
leave
js
shl
popa
dec
push
or
mov
in
xchg
xor
icebp
or
xor
mov
xchg
sbb
push
push
jae
inc
and
sub
dec
mov
and
and
cltd
mov
mov
fcomp
aas
scas
cs
lahf
mov
pop
testl
in
lds
cmpsb
nop
cmpsb
xchg
mov
sbb
addr16
xor
mov
adc
fcomip
hlt
dec
js
sti
out
repnz
adc
and
and
lret
sbb
test
jns
xor
and
adc
sub
movsb
jecxz
scas
stos
mov
nop
sti
sub
add
addr16
jae
sub
or
imul
jle
lds
add
sbb
ja
shrl
mov
or
xlat
or
clc
pop
add
outsb
xor
cmpsl
ja
jnp
pop
xchg
jecxz
shrb
jbe
dec
xchg
sub
jecxz
ljmp
xchg
lods
call
popa
lea
sbb
mov
andl
or
loopne
stos
pushf
out
push
xchg
inc
xor
addr16
dec
adcb
ja
shr
mov
ds
cmp
out
test
outsl
pop
loop
or
jl
insb
repz
cmp
mov
and
pop
faddl
cmpsb
cwtl
or
fcoml
cs
enter
jo
out
push
insl
cmp
call
jbe
movsb
popa
pop
adc
dec
sub
aad
and
call
jae
mov
mov
add
mov
and
lret
fwait
je
shl
andl
pop
pop
sbb
pusha
pop
repz
sbb
jmp
inc
mov
rcl
push
in
ror
xlat
mov
shlb
pop
jmp
insl
add
push
sbb
inc
push
or
lcall
sti
cli
mov
xor
int
imul
cmpl
stos
and
incl
mov
mov
xor
xchg
sub
pusha
xor
cmc
mov
mov
or
je
pop
shll
add
lcall
cmp
fs
lock
test
sbb
pop
add
add
push
movsbl
in
adc
mov
call
fcos
loopne
inc
data16
adc
pusha
lods
je
outsb
ljmp
push
or
jl
outsl
push
mov
cmp
dec
push
fisttpl
jb
mov
adc
and
push
clc
lock
sbb
or
cs
cmc
jno
test
fwait
or
fcoml
sbb
push
push
sbb
adc
adc
add
push
jecxz
add
mov
shrl
push
sub
test
shl
inc
mulb
push
dec
add
sbb
in
push
sub
stos
les
or
push
mov
mov
xor
repnz
lods
addl
jne
and
xor
mov
pop
jge
adc
scas
cmp
and
int
int
repz
insb
fisubl
fcmovu
fs
ja
mov
or
or
in
push
xchg
popa
insb
sub
ret
adc
sti
stos
mov
jg
sub
dec
cmp
or
insb
add
or
mov
push
jnp
xor
xchg
mov
je
dec
adc
sbb
movsl
adc
jmp
adc
loop
mov
je
mov
dec
and
mov
pop
loop
ja
push
cmp
and
imul
hlt
xchg
sbb
sbb
loope
fistpl
sub
in
add
mov
fcmovnu
sub
jle
mov
jg
mov
fcoms
pop
or
push
xor
pop
mov
sbb
lock
gs
sbb
ljmp
insb
pop
sbb
clc
test
mov
into
mov
shr
inc
xchg
mov
cmp
outsb
shl
xor
adc
daa
psrld
adc
into
mov
out
fcompl
xchg
call
pop
cmp
cmpl
or
pop
sbb
aam
jae,pn
push
stos
adc
les
and
dec
test
pop
lock
mov
push
mov
inc
jge
mov
out
inc
hlt
insb
inc
and
mov
out
or
jle,pt
xchg
nop
cmp
outsb
mov
lcall
repz
popf
jecxz
fldenv
adc
inc
or
inc
in
mov
scas
add
scas
xchg
dec
mov
imul
jl
rolb
push
adc
xchg
jl
leave
adc
xlat
in
stos
add
mov
xchg
div
cld
aad
ret
sbb
jb
add
adc
in
jg
dec
adc
hlt
xchg
jnp
sub
fxam
test
xchg
xchg
in
inc
xchg
fidivrs
adc
jp
in
xchg
mov
dec
dec
push
incl
ret
fsubrl
pop
or
aad
xor
adc
mov
out
dec
ss
into
push
mov
xor
mov
cltd
sub
dec
cmpsl
lahf
xor
push
cli
push
pop
fwait
xchg
pop
add
mov
lret
gs
shlb
scas
test
cmc
xor
jl
and
jmp
ret
cmpl
int3
call
cmp
fsubl
js
push
rol
in
into
imul
rorb
jge
mov
test
push
jl
lret
repz
xchg
sub
arpl
cmp
clc
xor
cwtl
shl
int3
push
adc
addr16
movsl
jle
jl
mov
sbb
inc
daa
pop
ja
jnp
les
jo
out
pop
cmp
mov
mov
enter
and
push
and
scas
dec
adc
inc
jb
lcall
mov
loope
pop
shlb
rcl
push
inc
push
sub
mov
fwait
jmp
xor
repz
ret
cld
addl
sbb
push
xchg
stos
mov
int
dec
mov
loope
sbb
adc
loopne
cmc
mov
fldt
idiv
lcall
push
cmp
and
adc
or
push
pop
addb
mov
mov
pop
out
inc
sub
sbb
xchg
jecxz
cmp
aaa
jb
cmp
dec
mov
aad
xchg
or
xor
addr16
adc
mov
icebp
negl
sahf
dec
js
imul
cs
add
pop
loop
dec
stos
and
and
cs
and
xor
sub
cld
and
mov
jne
mov
xor
jle
xchg
dec
cmp
loope
fistpll
pop
mov
push
inc
pushf
pop
pusha
pmaxub
mov
push
push
jo
loopne
ret
lds
or
insb
out
add
jae
je
sti
mov
cmpsb
ljmp
adc
dec
lds
enter
push
and
sti
xor
or
fwait
jmp
add
and
xchg
mov
adc
cmp
push
dec
xchg
mov
and
add
imulb
shrl
push
sub
dec
sbb
adc
pop
push
pop
xor
add
inc
xchg
lahf
mov
xlat
inc
pusha
and
fdivp
in
push
fwait
pop
mov
mov
and
neg
mov
mov
clc
mov
add
popf
ror
pop
int3
int
or
mov
cmp
ffreep
hlt
and
lock
pop
in
popf
jmp
in
idivl
mov
adc
lock
xlat
fidivs
inc
mov
mov
cld
icebp
adc
xchg
in
dec
aas
add
xor
fsubrs
xchg
mov
test
in
pop
das
into
lcall
in
sahf
jge
pause
add
insl
jae
bound
jae
push
push
out
fdivrs
mov
shll
fwait
aaa
ret
fmul
add
mov
mov
cmp
mov
inc
adc
int
roll
mov
in
and
adc
push
pop
fdivl
mov
adc
subb
in
cmpsl
mov
mov
test
and
stc
fldt
jns
lret
test
add
sti
popa
lods
into
dec
cmp
inc
fcmove
or
fcoms
push
lret
adc
and
in
sbbb
adc
jo
das
xor
or
gs
into
mov
or
xlat
dec
cwtl
and
cmp
push
dec
cmp
in
push
aaa
push
negl
fstp
push
cmc
repz
mov
sub
popf
xchg
dec
jge
stc
out
mov
icebp
xor
pop
fwait
ret
xchg
and
shrl
pop
or
sbb
or
in
mov
lock
std
movsb
xchg
mov
sbb
in
jl
in
pop
xor
xor
cmpsl
jo
imul
icebp
push
test
mov
nop
aad
sbb
mov
jmp
jne
mov
cmpsl
inc
mov
call
cmp
ja
adc
xchg
jmp
or
mov
inc
push
sbb
movsl
fisubs
outsb
mov
cld
outsl
pop
in
xchg
dec
lret
jl
ljmp
sub
push
rcll
rcrl
dec
sub
pop
sbb
aaa
cld
inc
imul
aas
inc
rolb
mov
or
int3
pusha
fistpll
aaa
out
inc
stos
ret
addb
ss
sub
push
loop
shlb
cli
sbb
insl
mov
or
mov
jp
mov
push
jge
lock
stos
xor
add
push
aas
mov
sbb
sub
loope
in
in
imul
mov
sbb
test
adc
pushl
loopne
mov
xor
mov
ss
in
add
cs
mov
adc
inc
jno
push
mov
or
out
add
sub
and
ret
xor
rcrb
and
lret
xor
push
mov
cmp
test
repnz
jae
fsubl
pop
xchg
jbe
mov
xchg
push
jge
and
dec
popa
pusha
sub
lret
cmp
jle
xchg
push
sbb
cmpl
mov
nop
jecxz
mov
pusha
inc
push
test
mov
lds
mov
pop
xchg
xchg
rcrb
stos
stos
mov
aaa
dec
xor
fst
shrb
in
ret
out
neg
das
dec
jmp
add
clc
mov
xlat
sti
push
and
mov
dec
xchg
dec
stos
adc
out
mov
or
xchg
add
adc
inc
jle
es
cmc
pop
sub
pop
or
xchg
push
stc
pop
add
inc
mov
inc
fwait
incl
data16
ja
ret
and
add
lret
xchg
or
mov
lcall
test
lds
out
mov
jp
inc
or
pop
fsubp
adc
inc
mov
bound
cltd
add
sub
dec
adc
xchg
mov
mov
aas
cmp
xchg
sbb
sbb
xor
cli
fidivrs
pop
jge
fwait
cwtl
and
jecxz
aas
xor
add
fdivrs
pop
cs
push
sbb
cmpsl
push
fnsetpm(287
roll
xchg
cli
sbb
loopne
jle
dec
lahf
shlb
dec
inc
outsb
adc
add
ss
xchg
popa
aas
add
bound
jns
popa
or
dec
jns
ficoml
in
xor
pushf
mov
cmpsb
push
push
xor
inc
jae
aad
xchg
mov
jl
adc
inc
orb
mov
push
std
push
rcrl
stos
push
shrl
outsl
test
or
dec
ja
cmpsl
sbb
outsl
lahf
xchg
js
xor
fs
adc
dec
pop
pushf
popa
enter
cld
cltd
mov
add
mov
mov
dec
cmc
fidivl
sbb
aaa
std
mull
jg
bound
in
cmp
dec
xor
push
add
or
rcrb
sub
adc
pusha
in
gs
lock
shl
fidivrl
cli
icebp
pusha
inc
insb
cmpsb
mov
push
leave
or
test
dec
fs
orl
in
or
int
testb
mov
push
cwtl
outsb
inc
fdivs
mov
shrl
add
adc
pop
or
loop
xchg
insl
mov
fdivl
mov
push
jmp
cmc
lret
lcall
push
pop
xor
push
push
in
and
or
fwait
pop
test
dec
mov
sbb
roll
out
mov
loope
imul
xchg
jmp
inc
mov
sbb
insb
push
pop
add
inc
pop
mov
ret
xlat
add
and
sbbb
lds
scas
test
test
or
jl
lret
inc
out
cltd
lea
out
fidivrs
fisubs
sbb
lret
mov
mov
cs
lahf
iret
mov
insl
mov
ret
push
mov
mov
or
movsb
xor
out
mov
loope
popa
stos
stos
cmpsb
dec
subb
cmp
mov
and
repz
mov
mov
nop
je
xor
lret
ret
movsb
dec
in
push
stos
xchg
push
jecxz
adc
sahf
mov
xchg
cld
adc
xor
adc
mov
loope
sub
iret
shlb
xchg
push
scas
dec
fwait
sbb
testl
add
icebp
mov
xor
rorl
push
sti
push
or
ret
push
pop
jge
shl
aas
xchg
cltd
mov
aam
xor
lcall
cmpsl
ret
lcall
pop
push
xchg
or
aaa
cli
inc
rorl
dec
out
insl
xor
jmp
repz
xor
sti
int3
sahf
inc
popf
sub
ret
xor
add
data16
sub
lret
xchg
shrb
cmp
fisubrs
jge
or
dec
dec
push
addl
xorl
adc
test
cli
lret
mov
push
fimuls
or
mov
repnz
sbb
aam
jo
push
sahf
in
add
imulb
or
pop
dec
xchg
push
jecxz
push
int
push
jle
sub
sbb
lods
jbe
pop
aam
dec
daa
add
mov
ret
pop
fmull
push
pop
pop
mov
jge
mov
pop
pushf
push
push
popa
push
xchg
push
cs
rcrb
and
es
mov
and
ss
cld
sub
dec
data16
push
enter
mov
mov
push
lahf
xchg
mov
cmp
js
jmp
jne
xchg
inc
mov
loopne
repnz
out
adc
shll
mov
and
xchg
mov
testl
movsb
xor
jbe
mov
dec
loop
xchg
orl
inc
xchg
aas
inc
adc
push
fstpl
fnclex
jbe
adc
ror
jae
mov
aaa
dec
fwait
popa
bound
push
jne
movsl
jle
lahf
jo
cmpsb
fldenv
mov
jmp
jo
cmpsb
insb
add
pop
mov
out
adc
sub
sub
outsl
jno
out
fidivrl
sub
nop
xchg
add
out
filds
pop
add
out
mov
call
pop
daa
adc
popfw
jp
cmp
add
inc
testb
mov
loope
pop
mov
or
sub
bnd
pusha
and
cmc
mov
stc
dec
xor
inc
and
mov
arpl
jle
repnz
cmp
xchg
jb
popa
pop
js
mov
or
cmpsb
mov
add
movsl
sub
ss
bndldx
sti
inc
sub
xchg
sbb
into
pusha
rorb
fdivl
xchg
insl
mov
push
push
loope
aaa
or
mov
pop
pop
or
push
fsubs
mov
gs
cmp
ror
or
loope
inc
pop
cmpsb
sub
jle
xchg
das
jbe
ljmp
mov
jnp
lods
fnstsw
pop
repnz
pop
popa
bound
outsl
dec
xlat
addr16
leave
test
cmp
push
lock
clc
movsl
fcomps
jbe
insb
xchg
xchg
les
leave
out
mov
les
sar
stos
push
aas
xchg
or
xchg
push
pop
inc
sub
xchg
push
xchg
dec
mov
lahf
cmp
inc
pusha
add
jo
jne
sbb
add
jno
and
sbb
and
pop
ret
xor
out
lcall
inc
pop
xchg
mov
add
dec
xchg
add
sub
clc
pop
das
mov
data16
mov
add
cmp
sub
into
xorb
sbb
mov
adc
cmc
mov
cli
popa
fiaddl
or
rclb
icebp
push
sbbl
cmpsl
pop
dec
push
andl
xchg
fs
clc
movsb
sbb
jmp
and
addr16
jb
adc
mov
testl
pop
addb
jmp
and
sbb
adc
popa
std
pusha
sbb
add
les
mov
push
int
fsub
bswap
and
aaa
pop
push
leave
xor
hlt
push
into
je
stc
mov
mov
adcl
or
rcrl
les
pushf
roll
outsl
mov
mov
aam
add
inc
pop
enter
or
xchg
gs
in
nopl
sub
push
xchg
mov
mov
and
outsl
in
adc
lcall
push
cmp
push
sbb
xorb
js
sti
fimuls
sub
xor
mov
sbbl
mov
add
mov
dec
ret
push
ljmp
lods
nop
and
aaa
decb
repz
and
mov
in
xorb
or
aad
jns
jb
iret
mov
loop
cmpsl
pop
outsl
jle
adc
mov
pop
pop
dec
rol
test
push
out
jns
lods
cmpl
fs
jne
rclb
cmc
in
mov
xlat
jnp
push
cmp
jbe
sahf
pop
out
push
mov
inc
sti
cmp
fidivrl
inc
cld
sub
movsb
push
jae
or
inc
push
lcall
clc
jb
add
clc
mov
lret
mov
ret
adc
movsb
xchg
jmp
leave
xchg
sbb
int3
daa
lret
shl
insl
and
add
fcomi
xchg
xchg
lcall
in
std
mov
mov
adc
in
ret
cmc
stos
sarl
aas
insl
es
inc
push
ds
loopne
and
pop
mov
popf
jmp
or
icebp
stos
jp
and
xchg
or
int3
addr16
out
inc
add
mov
scas
xchg
inc
sub
xchg
lods
popa
icebp
shll
add
cmpsb
adc
add
or
xchg
loopne
mov
jp
jmp
ss
dec
jnp
fwait
inc
addb
jne
mov
or
lods
or
sbb
push
mov
je
add
lcall
sbbb
pop
or
outsl
pushf
lret
cli
ret
add
stc
xchg
adc
dec
repz
adcb
sbb
and
add
mov
js
jne
xor
xchg
rol
jecxz
fs
stos
or
pop
adc
mov
das
inc
inc
xchg
mov
mov
ja
lods
add
adc
popf
daa
push
xchg
sbb
negb
mov
jle
jmp
das
imul
lods
negb
ss
int3
push
mov
gs
jno
loopne
daa
jl
adc
leave
sbb
sub
stos
cmp
xor
mov
scas
mov
popf
inc
into
stos
mov
cmp
push
sub
adc
mov
pop
mov
cld
cmp
call
mov
ss
mov
cmp
div
lds
stc
dec
push
std
mov
imul
sbb
adc
adc
call
shll
xor
sub
push
mov
lods
les
jle
and
out
mov
sub
sbb
mov
out
cli
inc
sub
xchg
shlb
push
test
or
cmpsb
je
sub
leave
std
lcall
xchg
orb
daa
int
stc
clc
inc
add
mov
rorl
cmp
test
out
inc
mov
in
mov
int3
jae
and
mov
jmp
cli
punpckhdq
add
dec
cmpb
pop
int3
and
push
hlt
adc
adc
mov
push
sbb
xchg
stos
dec
jnp
xchg
into
jbe
cld
jno
mov
jecxz
inc
sub
xchg
out
jnp
das
bound
sbb
cmp
mov
xchg
pop
jl
xchg
ret
popa
adc
or
mov
or
cmp
adc
pop
loopne
mov
daa
dec
pop
clc
add
pop
je
pusha
xchg
jnp
or
leave
rcrb
push
int
add
mov
jg
push
jno
mov
fsts
shll
pusha
lret
cmovae
test
xchg
cmp
and
repnz
pushf
sbb
rorl
jno
stc
xor
jmp
lea
mov
movsb
add
repnz
incb
xchg
jns
mov
or
inc
push
sahf
push
push
or
cmp
xchg
lret
fdivrs
daa
fwait
imul
cmp
nop
and
jl
movsb
ret
mov
sub
cmc
sub
call
mov
mov
insb
dec
int3
pop
jecxz
into
jbe
xchg
or
or
insb
pop
cmp
cmp
fistl
mov
fsubrs
pusha
pop
add
pop
xchg
loope
sub
add
add
movb
pop
sub
pusha
sbb
lock
movsl
xor
push
jle
lock
mov
dec
sti
scas
ror
xchg
pop
sbbb
dec
and
int
rcll
outsl
rcrl
in
pop
ret
dec
rcrb
cmc
or
insb
xor
inc
filds
std
fdivr
adc
fs
int
push
out
fdivr
pop
adc
rcll
movsb
call
or
fs
push
mov
cmp
lock
fidivl
mov
rorb
push
jnp
sahf
cmp
cmp
mov
mov
in
rcll
mov
ss
jo
mov
mov
add
push
add
leave
iret
jl
lods
mov
imul
in
cmpsb
out
imulb
xor
test
push
inc
scas
cmpsl
cmp
sub
adc
lahf
cmc
cwtl
pop
lcall
xchg
lcall
sub
imul
sbb
mov
mov
xor
inc
in
xchg
jo
test
ret
pop
lahf
dec
stc
inc
mov
dec
push
xor
lret
pop
or
in
imul
notl
xor
rcll
fidivrl
aad
add
jae
push
adc
dec
jg
nop
push
mov
scas
ss
or
jmp
and
shrl
in
jp
push
popa
xor
jp
mov
imulb
nop
add
and
ret
out
xchg
sbb
and
cmp
out
push
push
sar
stos
xor
push
cltd
in
fwait
out
mov
ss
mov
mov
lret
jle
dec
cmp
inc
pop
lcall
icebp
pop
popa
popa
into
shll
xchg
jb
insl
movsl
adc
sub
inc
xchg
loop
add
out
dec
mov
in
xor
movsb
leave
outsl
out
xchg
data16
mov
pop
out
sar
pop
repz
xor
adc
mov
jge
test
or
int
js
movsl
cltd
pop
xchg
xchg
adc
xlat
jmp
dec
push
mov
sarb
jmp
mov
sbb
std
loop
or
mov
jnp
jmp
pop
mov
add
pop
push
mov
dec
push
ljmp
cmpsl
decl
xchg
xchg
xchg
out
mov
jb
cli
loop
adc
mov
push
bound
and
stc
lret
mov
out
jo
xchg
or
xor
push
cwtl
xchg
mov
jns
pop
adc
sbb
insb
out
or
lahf
scas
mov
add
sti
push
lods
sub
es
dec
and
mov
nopl
arpl
and
movsl
mov
cld
and
cmp
sub
int
xchg
push
xchg
test
cwtl
out
int3
xchg
mov
xchg
loope
jge
push
insb
push
imul
mov
push
stos
rcr
aam
sub
add
sar
clc
cli
dec
pop
hlt
les
movsb
fucomip
inc
xchg
adc
cmpb
jmp
repnz
xchg
mov
lret
cmp
jmp
andl
mov
or
decb
insb
add
mov
cmp
cmp
mov
mov
dec
cmp
mov
dec
mov
jns
push
sbb
add
push
fisttps
ficoms
cmovp
pop
lods
lret
inc
push
mov
xlat
cld
cmp
enter
add
ja
int3
lock
repz
xor
je
repnz
mov
ljmp
imul
mov
mov
fnstcw
call
ds
dec
imul
push
push
jnp
add
push
xchg
cmp
and
push
or
and
in
pusha
rorb
scas
jns
sbb
sub
test
cmp
fnsave
push
testb
push
pop
pop
test
jb
xchg
jle
shrb
imul
cmp
in
and
xor
or
ds
cmp
xor
mov
loop
cmp
scas
gs
cmc
popf
rorl
rcl
jne
mov
inc
pop
cltd
popf
aaa
cmpsl
arpl
ds
pop
jmp
dec
sbb
enter
mov
mov
jg
scas
pop
dec
out
ja
call
dec
xchg
mov
or
insl
sub
ret
sub
jge
inc
fwait
inc
dec
sbb
sbb
mov
xor
loopne
pop
aam
not
popa
cmp
icebp
push
sub
sahf
and
cmpl
mov
and
popf
dec
pop
dec
insb
pushf
addr16
or
outsb
int
in
lea
nop
mov
jl
loop
inc
jbe
cmp
int3
and
stc
xchg
test
dec
imul
and
inc
xor
xlat
dec
pop
pusha
jmp
subl
jne
dec
mov
and
movsl
shrb
mov
sub
mov
xchg
movsl
pusha
js
xor
mov
pop
add
add
scas
push
pop
adc
push
out
fmuls
inc
inc
dec
mov
cmp
gs
cmp
jbe
sbb
rep
push
loop
mov
jne
inc
inc
addb
fldl
hlt
mov
xchg
mov
mov
pusha
shrl
call
nop
inc
repz
cmpl
inc
xchg
aaa
add
sbb
sarl
addr16
out
aad
test
test
xchg
aaa
shrb
push
out
stc
arpl
and
mov
mov
les
adc
outsl
dec
xor
repz
aas
shr
inc
xor
out
fs
mov
mov
xor
les
int3
mov
int3
push
fsub
fsubrl
les
bound
pop
xor
mov
in
sub
shll
cmpsb
dec
stc
push
xchg
dec
mov
pop
mov
jecxz
jb
inc
add
or
sbb
cmpsl
jbe
mov
and
fistpll
mov
pop
loope
push
leave
adc
ret
push
xchg
xor
sbb
ret
mov
pop
mov
cmp
lock
jecxz
xchg
cmp
call
cmc
mov
cmc
imul
imul
loop
push
popa
icebp
and
aam
sarl
inc
addr16
cmp
inc
fcompl
fwait
or
mov
xchg
push
add
xor
sbb
sub
pop
mov
mov
lods
mov
lret
lods
sti
loopne
cs
dec
sbb
mov
lea
xchg
pop
jp
mov
jge
aas
lahf
add
ja
mov
call
cmp
sub
sarl
mov
ja
jmp
jmp
or
lods
lret
inc
xlat
adc
iret
imul
push
add
cmp
repz
sti
in
push
and
lahf
push
ss
sbb
test
jle
test
iret
outsb
pop
pop
mov
leave
pop
xor
loop
and
lcall
in
test
cltd
into
mov
pop
lods
call
push
adc
jl
outsl
sub
std
sarl
arpl
iret
fildl
lock
outsl
hlt
push
jo
add
jmp
jmp
scas
mov
mov
out
push
jb
mov
inc
bound
pop
lods
mov
adc
sub
xchg
mov
lea
xlat
inc
jmp
mov
movsb
mov
xchg
push
xchg
testb
addr16
fiaddl
popa
mov
test
ret
lcall
add
rcrb
arpl
cmpsb
stos
mov
cmc
jo
push
sub
xchg
dec
add
scas
shlb
or
outsb
mov
in
and
mov
jmp
out
stos
mov
stos
ss
add
cmp
inc
inc
mov
or
lock
mov
clc
pop
rcrb
int3
jecxz
jecxz
fmull
xchg
or
xlat
cltd
sti
and
and
lret
pop
jle
push
jnp
xor
push
fwait
push
int
mov
xchg
in
pusha
dec
push
jne
push
cmp
test
jge
cmp
mov
sub
pop
rcrl
cmp
mov
sbb
xor
cwtl
mov
lea
pop
cltd
fiadds
repz
or
shlb
mov
aas
std
push
out
sbb
adc
arpl
hlt
pop
call
movsb
mov
sbb
pusha
data16
aam
mov
jl
je
or
push
mov
or
call
push
enter
pop
lcall
push
adc
sbbl
ficompl
mov
sbb
cmp
adc
xchg
repz
hlt
stos
jbe
adc
cli
push
push
fidivrl
push
shlb
xchg
cltd
shlb
icebp
into
imul
mov
and
xor
stos
jmp
push
ss
repnz
jae
cmpsl
mov
shlb
rorl
cmp
xor
cmp
jbe
dec
push
jg
push
push
push
ficoms
out
push
xchg
jge
mov
imul
inc
dec
mov
dec
movsb
cmp
idivb
sbb
scas
shll
jp
mov
sbb
sti
in
pop
ja
in
movsl
adc
add
pop
adc
xor
loopne
arpl
andb
stos
mov
jne
or
or
mov
test
out
gs
outsb
pushf
sbbl
pusha
mov
xchg
mov
pushf
add
jnp
pop
mov
sbb
int3
jns
xor
jb
lahf
adc
or
pusha
fpatan
jl
test
out
mov
pop
push
rolb
sbb
pop
mov
cmpsl
fcompl
ljmp
mov
inc
mov
pop
call
and
fistl
lcall
outsl
inc
faddl
mov
in
test
cmp
hlt
enter
xchg
inc
out
push
lds
jb
inc
jl
xchg
mov
pusha
and
mov
jge
arpl
aam
or
mov
xchg
pusha
hlt
inc
mov
pop
out
rcrl
std
xchg
jnp
rcrb
push
les
je
push
push
in
dec
ret
pop
mov
out
and
push
mov
or
popf
int3
test
lahf
add
aam
mov
pop
and
sub
xchg
je
push
xchg
aaa
ss
mov
xchg
ficoms
push
test
and
push
xor
xor
push
sbb
fwait
rcll
fwait
fs
inc
cmpsl
xchg
lcall
iret
mov
iret
cltd
xchg
lock
ss
test
sbb
pop
in
popa
jl
daa
push
sahf
aaa
lret
add
dec
cs
mov
fwait
jo
mov
insb
sahf
mov
outsb
aad
shrl
mov
sarl
ret
cwtl
push
jne
add
fndisi(8087
stos
dec
mov
addr16
les
mov
inc
mov
inc
mov
jnp
hlt
enter
sbb
push
dec
cmp
adc
xchg
inc
lods
mov
jle
sbb
push
lret
jl
fadds
les
out
inc
data16
inc
cs
xchg
into
call
and
or
adc
jecxz
inc
xchg
jg
arpl
movsl
inc
rcrl
mov
push
scas
mov
shrl
pop
ds
andl
sahf
mov
clc
or
jl
aas
bound
push
push
xor
lahf
sub
int3
sahf
sub
xchg
add
stos
lahf
or
adc
push
lret
rclb
test
jno
push
ljmp
inc
cmp
ja
fnstsw
push
cs
inc
scas
mov
aaa
imul
pop
data16
and
push
scas
fbstp
lcall
call
stos
mov
fadd
sysenter
mov
mov
lahf
dec
pushf
cli
sub
test
ret
mov
sahf
aam
in
mov
adc
and
xor
xchg
sbb
out
int
mov
xor
shl
daa
scas
cmpsb
scas
pop
pusha
xor
mov
adc
mov
movsl
or
inc
pusha
sub
or
push
adc
dec
push
andb
sub
int3
dec
ret
unpcklps
in
movsb
ret
add
imul
das
test
imul
xchg
iret
fiaddl
lock
xor
gs
pusha
xchg
nop
std
add
dec
xor
lahf
xor
fdiv
imul
clc
mov
push
ja
jmp
mov
jmp
shrb
inc
pop
lods
rclb
and
adc
cmp
mov
in
mov
fidivs
imul
xchg
imul
sbb
addr16
test
call
xchg
add
dec
and
inc
xchg
push
mov
xlat
sub
sub
es
fcmovbe
pop
sub
insb
jl
lods
fsubrs
divl
pop
mov
pop
mov
sbb
cli
ja
out
push
mov
dec
lods
mov
adc
cmpl
cli
hlt
pop
jmp
push
cmpsl
xchg
lret
scas
adc
leave
cmp
inc
int
popa
stos
ss
fdivr
es
in
loop
dec
inc
push
pop
and
inc
imul
push
cli
sbb
adc
jmp
das
jge
sbb
enter
not
pop
add
popf
mulb
lcall
adc
add
or
mov
clc
nop
dec
xchg
adc
call
les
cmpl
out
icebp
js
shll
mov
test
adcl
minps
mov
adc
enter
pop
jp
mov
dec
mov
mov
daa
pop
das
mov
in
xlat
cmp
lcall
sub
shrl
popw
imul
fcom
lcall
pop
mov
jno
jmp
iret
push
daa
fcmovb
mov
ljmp
fidivl
inc
call
jbe
add
fisttpl
cmp
add
jnp
jbe
pop
add
lahf
cmpb
cld
xchg
fsubl
and
xchg
ljmp
out
mov
rclb
pop
sub
sub
out
jae
push
pop
sbb
pop
xchg
enter
sbb
and
jp
hlt
fimull
and
cmpsb
das
hlt
in
aas
repz
push
adc
sti
enter
mov
lds
mov
ds
sub
xchg
xor
push
jl
loope
out
scas
or
call
andb
iret
mov
mov
in
fiadds
stc
mov
stos
insl
icebp
mov
adc
shll
leave
jae
jno
inc
and
aaa
fxch
cwtl
ja
add
mov
jl
push
pop
outsl
sbb
aaa
sahf
or
xorb
pusha
nop
mov
add
and
mull
loope
xor
nop
pop
out
push
adc
push
sbb
mov
cs
mov
test
cmp
or
lcall
pop
cmpsb
dec
loope
cmp
clc
shll
pop
scas
ds
adc
stos
insl
fstpl
out
dec
ja
mov
adcb
fcomp
sti
adc
outsl
xor
cltd
inc
mov
cmpsl
rcrb
out
aas
mov
cltd
xor
enter
mov
into
aad
push
mov
in
mov
fwait
mov
pcmpgtw
or
or
insl
mov
inc
and
scas
or
xchg
jmp
iret
jl
sub
mov
jne
aad
iret
and
jmp
lret
inc
addb
ret
filds
lods
inc
pop
in
and
jbe
mov
mov
and
pop
pop
xchg
sub
in
add
adc
test
adc
add
loope
mov
sbbb
das
push
mov
lods
ds
pop
fs
aas
add
aad
push
es
imul
jnp
mov
mov
cmp
in
mov
mov
xchg
pop
enter
mov
fists
movb
or
repnz
jo
mov
ret
daa
dec
movsb
movsb
div
rcl
push
jne
mov
add
jl
cmpb
shlb
out
addb
inc
lcall
lcall
and
xchg
push
sbb
test
js
inc
adc
das
pushf
pusha
rorl
mov
imul
push
ds
addr16
lret
adc
mov
mov
push
sbb
jmp
test
jns
aas
and
mov
adc
xchg
fs
push
clc
insb
rolb
out
dec
in
push
push
shl
popa
in
sbb
cmp
cltd
test
icebp
jecxz
sbb
ja
lods
clc
and
push
cltd
fs
lret
lods
mov
sbbb
sub
push
fwait
dec
push
xlat
into
pop
cmpl
sbb
inc
push
and
pushf
cmp
jbe
mov
push
pushf
cmp
or
pop
add
rorl
sub
xchg
ds
cmp
lret
call
mov
pop
out
ds
cli
arpl
pop
add
popf
jne
xchg
cltd
pusha
add
stc
adc
ljmp
xlat
dec
out
std
jg
inc
outsb
mov
xchg
mov
jg
sbb
jg
test
add
jnp
shrl
sti
or
incb
insl
mov
mov
mov
stos
push
imul
ror
lods
mov
popf
outsl
xchg
popa
bnd
inc
jge
iret
adc
pop
xchg
idiv
sub
mull
fildll
pop
inc
insl
mov
cmpsl
and
xlat
mov
aas
xor
xor
gs
inc
or
cmp
jmp
pusha
add
js
mov
and
mov
test
adc
jnp
sub
xchg
ss
mov
add
data16
add
xorb
stos
jmp
aad
xchg
mov
mov
incb
stos
mul
popf
cmpsb
rcrb
daa
lret
mov
movsl
mov
aad
xchg
xchg
xor
jno
sti
je
add
ficompl
add
mov
mov
imul
pop
fcoml
mov
imul
dec
sbb
and
imul
mov
push
cmpsb
data16
cs
lret
bound
push
mov
mov
loop
cs
and
rolb
out
inc
jns
outsl
lahf
gs
cmpsb
jo
das
dec
shlb
mov
std
xor
add
call
test
sar
mov
ret
xchg
pop
aas
loope
fimull
mov
add
mov
dec
add
loope
faddl
mov
gs
sahf
je
loope
je
into
sahf
scas
dec
mov
orb
cli
mov
push
lods
lcall
add
cmp
push
shlb
push
fidivrl
gs
cmp
imul
cmpsb
sarl
int3
fistps
dec
sbb
insb
mov
and
mov
mov
mov
das
or
cmpsl
ja
lahf
add
jb
out
fs
rorb
sbb
xchg
lahf
jecxz
les
cltd
dec
and
mov
xchg
sbb
xchg
jo
stos
mov
fcmovbe
dec
xchg
push
loopne
cmp
loope
out
dec
cmp
insl
jge
mov
sub
mov
mov
jp
cwtl
fs
xchg
scas
std
ljmp
cld
xor
pop
jg
xchg
mov
scas
mov
dec
lret
mov
add
push
incl
stc
dec
addl
loopne
shll
sbb
stc
cmp
add
and
lds
es
dec
mov
es
jecxz
jnp
push
out
dec
jmp
je
std
jl
xchg
int
push
in
filds
or
mov
xor
inc
inc
and
adcb
fldt
xchg
or
sub
or
int3
pushf
in
jne
std
popa
xchg
xor
mov
dec
dec
test
sarl
push
je
incl
xor
jp
sub
xchg
jno
in
fwait
stc
adc
or
dec
aam
loop
lret
ja
jne
lea
cmp
mov
inc
mov
es
ja
adc
lock
int3
or
pop
inc
cmp
lods
mov
adc
jge
aam
inc
aaa
outsb
jbe
into
push
clc
std
sarl
sub
push
mov
sbb
getsec
xchg
ret
out
rclb
dec
push
mov
daa
frstor
stos
call
xchg
daa
shll
sbb
pop
mov
jno
xor
lcall
cmp
inc
jbe
mov
stos
push
sbb
lahf
test
ret
and
adc
dec
xlat
cmp
in
fwait
jp
mov
or
popf
in
push
push
scas
insl
mov
cmp
push
insl
les
push
and
popf
adc
jle
popa
add
jmp
sahf
out
fs
int3
or
mov
out
in
mulb
movsb
xor
gs
cmpsl
inc
outsb
push
je
xchg
loope
sbb
hlt
mov
lret
mov
xor
adc
ret
cmpsl
movsb
cmc
dec
int
out
js
xchg
out
movsb
jb
dec
loope
lock
dec
lahf
loop
sbb
jnp
push
cli
movsb
pop
xchg
aam
out
fldl
xor
aas
rolb
and
mulps
pop
es
mov
and
je
das
stc
mov
and
jp
jns
sub
or
dec
les
cmp
push
mov
pop
mov
adc
mov
cld
js
setae
and
int3
mull
sub
call
cmp
stos
dec
repz
push
aam
xchg
dec
stos
mov
mov
mov
test
movsl
sbb
lds
add
call
pop
jbe
ss
push
jg
aam
lret
inc
fimull
bnd
sub
div
loop
lods
push
pop
add
push
fidivrs
in
aad
adc
mov
movsb
das
lahf
pop
fildll
inc
aad
mov
jge
fdivrl
daa
lcall
or
xor
push
or
inc
add
jle,pn
negb
fdivl
jge
out
leave
mov
sub
shrb
inc
push
xchg
popf
sbb
xlat
test
xchg
test
and
xor
inc
fildl
jge
mov
mov
xor
popa
mov
ljmp
adc
cmp
sbb
js
imul
pop
enter
adc
inc
outsb
add
add
add
fisttpll
jge
cmpsb
pusha
push
mov
fildll
stos
push
xor
ss
inc
and
shr
test
jp
popa
xchg
adc
and
pusha
push
xchg
xchg
repz
fs
cmp
sub
popf
push
fstl
or
decb
jmp
cmp
mov
xchg
int3
sub
mov
imul
push
jg
inc
sbb
xor
mov
xor
repnz
and
sbb
call
cmp
rcll
and
out
adc
aas
jg
xchg
int3
js
xchg
hlt
sub
push
loop
jl
es
fsubp
sbb
stos
push
scas
cmp
inc
lods
jno
inc
insb
leave
fbld
mov
mov
shlb
and
bnd
shr
test
lock
fsubs
cmp
das
mov
pop
dec
fdivrl
divb
xchg
sbb
sbb
aad
xor
call
pop
addb
push
jae
sti
mov
sahf
movsb
pop
ror
dec
or
jns
cmc
mov
add
pop
pop
imul
dec
xor
ror
add
xchg
in
cmp
sbb
test
in
dec
nop
orl
mov
jae
pop
jno
int
mov
adc
pop
gs
mov
mov
adc
mov
push
jbe
jb
ret
jbe
mov
rcr
mov
pop
push
test
push
pop
pop
scas
adc
mov
mov
fwait
loop
loope
in
sbb
test
sub
cmp
jmp
mov
pop
popf
les
cmp
lods
cmp
lods
pop
es
cld
in
test
mov
inc
mov
sub
jl
or
std
mov
in
movsl
cmp
into
pop
jae
or
mov
cmp
stc
test
frstor
cmpsl
ret
subl
sub
jns
neg
iret
mov
mov
dec
clc
mov
cli
mull
clc
in
dec
cmp
jae
mov
clc
jl
mov
push
add
pop
jae
xchg
jle
in
mov
and
sti
jb
xorb
pushf
popa
or
lods
shlb
jae
daa
push
addb
lahf
rcrl
xchg
xchg
dec
pop
fs
ljmp
adc
add
out
movsb
ljmp
fmuls
mov
idivl
sbb
imul
cmp
jne
fs
pop
loop
add
or
jne
and
mov
push
pop
add
dec
or
mov
mov
xor
bound
ret
xlat
ja
mov
xchg
stos
mov
mov
xorb
ja
enter
fidivs
pusha
loope
imul
mov
mov
in
jecxz
idivb
addr16
pusha
cmp
xchg
push
movsb
jle
push
pusha
pop
and
adc
xchg
sbb
loop
pop
mov
dec
inc
fsqrt
imul
xchg
test
andb
cmp
add
sbb
aad
dec
into
cmp
pop
dec
repnz
dec
sub
movsl
imul
adc
inc
iret
int3
inc
aas
mov
add
out
jle
jle
mov
jl
les
cmp
push
addb
sti
aam
adc
jno
bswap
cmp
outsb
scas
ss
out
push
and
push
mov
fwait
shlb
cmp
push
or
add
mulb
and
push
fwait
xlat
dec
xchg
inc
mov
xchg
cmp
push
mov
clc
addr16
jecxz
xor
mov
and
push
aam
jge
popf
stos
mov
call
imul
int3
scas
std
mov
lret
pop
xchg
icebp
adc
movsw
outsb
jo
and
in
mov
inc
cmpsb
cltd
pop
cmpsb
lds
jecxz
and
add
pop
test
ret
push
pop
or
call
cmc
mov
std
xchg
push
fdivl
adc
inc
mov
ljmp
sub
ret
subb
imul
mov
in
cli
sub
inc
jge
orl
and
idiv
mov
add
dec
loope
xchg
or
and
stc
mov
jno
push
mov
jae
sbb
lcall
pop
arpl
nop
xchg
fs
pop
lods
clc
push
sbb
cltd
fwait
add
add
rolb
rcrl
fucomi
cs
or
and
or
xchg
xchg
ja
arpl
push
les
mov
and
loop
fdivrs
sbb
mov
leave
test
and
nop
pop
in
es
push
or
pop
daa
sbb
out
cmp
mov
out
add
stos
nop
cltd
push
mov
repz
je
mov
js
jb
test
sub
sbb
sti
or
fnclex
jecxz
aad
mov
fwait
call
mov
addr16
mov
mov
fsubrs
push
das
sahf
xor
shlb
and
mov
cmc
and
push
aas
fmul
pop
dec
adc
add
out
sub
adc
cmpsb
aaa
cld
insb
out
push
add
xor
push
pcmpgtd
or
shl
cli
push
jbe
mov
add
cli
pop
fs
dec
aas
inc
lcall
push
mov
push
pop
lds
push
lods
add
jnp
ret
mov
rcll
mov
call
lret
mov
sbb
mov
lds
pop
pop
out
dec
inc
xchg
adc
mov
push
cltd
lea
test
adc
out
mov
inc
push
lock
stos
dec
insb
jg
xchg
mov
scas
fadds
jg
popf
xor
dec
dec
dec
add
push
adc
dec
sarl
test
mov
adc
fs
mov
insl
dec
sti
xchg
xchg
outsl
sub
lods
imul
pop
pop
movsb
sub
push
sub
sbb
mov
faddl
andb
test
pop
pop
xchg
and
cmpsl
adc
scas
jbe
lret
movsb
rorl
adc
or
mov
fisttps
enter
inc
test
daa
lock
out
pop
pop
fcomip
push
je
jb
mov
jns
mov
lahf
gs
int3
in
jmp
into
or
mov
std
repz
sti
add
flds
adc
xchg
sbb
out
fstpt
nop
dec
push
ret
rcll
popa
scas
pushf
iret
fidivs
loop
xor
test
inc
pushf
dec
stos
push
inc
out
push
sub
push
lods
rclb
adc
add
sub
sub
mov
lock
daa
ds
cmp
enter
test
mov
pop
and
data16
and
cli
jecxz
ss
loopne
loopne
add
scas
jnp
adc
sahf
rcll
cld
pop
imul
call
addr16
adc
outsl
pop
je
pop
pop
sbb
int
jmp
inc
into
push
jp
mulb
xchg
lret
outsb
mov
xor
mov
loopne
cwtl
xchg
and
jp
dec
cld
nop
xchg
adc
data16
push
push
adc
ja
mov
insl
push
flds
stos
lods
push
imul
sub
adc
sub
inc
cmp
adc
xchg
in
shrb
inc
cmc
loope
jbe
fwait
cmp
or
add
sbb
cmp
lods
xchg
pop
dec
sub
cmp
mov
pusha
aad
ds
adc
pop
andnps
jns
lods
push
jp
sti
and
adc
inc
push
in
lahf
loope
test
sbb
xchg
cwtl
and
bound
movsb
push
inc
jge
mov
mov
pop
mov
pop
stos
dec
ret
popa
mov
sub
and
sbb
outsl
xchg
xchg
fnsave
cmp
movd
dec
iret
jne
jns
jbe
pop
aas
cmp
xchg
movsb
out
test
xchg
sub
clc
lods
movsb
repnz
sub
fists
inc
cmp
inc
out
inc
fwait
mov
push
cwtl
xor
cltd
sbb
sbb
xlat
xchg
ds
ficompl
mov
xor
mov
loopne
sar
nop
repz
lcall
popa
mov
xchg
mov
cwtl
lock
sbb
outsl
and
pop
adc
jmp
jg
pop
movsb
sbb
adc
xor
jle
inc
loope
jge
fwait
dec
mov
fwait
push
sbb
cmp
es
movsl
pop
loop
inc
pop
cwtl
scas
push
leave
dec
xchg
adc
into
push
inc
shll
test
sahf
dec
or
mov
sbb
cmp
stos
mov
fadds
test
push
xchg
int
popl
into
mov
imul
fsts
xor
sbb
test
lcall
in
mov
loope
subl
jnp
jge
jmp
leave
pop
mov
enter
dec
lahf
push
xchg
out
shll
inc
in
loopne
out
mov
xor
daa
cmpl
stc
and
mov
pop
xorb
lahf
lods
jg
and
shrl
mov
add
adcl
shll
lcall
stos
pusha
enter
hlt
mov
mov
adc
outsb
mov
pushf
mov
jne
fldt
pop
push
sti
jne
test
jmp
mov
inc
ljmp
lods
aad
negl
push
inc
pop
fs
xorb
sub
jg
call
js
aas
inc
add
fiadds
das
in
je
fnstenv
outsl
xchg
sbb
cmp
mov
test
dec
mov
inc
rcl
dec
ret
jl
push
mov
push
sub
mov
jo
outsb
cwtl
pop
stc
in
pop
frndint
add
mov
jge
mov
inc
ds
pop
cmp
or
cli
loop
aad
out
push
jne
imul
aad
dec
inc
sub
sbb
inc
xor
push
popa
xor
movsl
xchg
popf
mov
and
cmpsb
cltd
aad
stc
jge
int3
fistpll
and
push
push
sbb
dec
in
mov
lods
das
clc
ret
aad
xor
lcall
push
pop
sti
pop
js
jns
cmpsl
pusha
ds
mov
call
mov
out
repnz
sti
jle
jb
ret
outsl
sbbl
test
imul
sahf
in
push
ret
mov
or
adc
sbb
cwtl
xchg
mov
xchg
or
fisubrs
movsl
das
xchg
lret
adc
out
fldl
jb
xor
adc
mov
xor
scas
pop
lds
push
pop
loope
add
insl
jne
push
cmpsb
iret
inc
and
adc
adc
out
and
inc
mov
pop
mov
imul
clc
mov
sbb
sbb
imul
lods
or
jns
pop
xlat
fucomip
int
jbe
sbb
scas
cmp
in
push
add
pop
jns
pop
push
insb
mov
mov
movsb
mov
fwait
mov
aad
pop
xor
in
cmp
sbb
adc
mov
mov
dec
xor
sbb
inc
fstl
sbb
pop
loopne
shll
pusha
jns
add
cmp
mov
je
sub
sbb
add
data16
lods
sbb
orb
sub
or
out
jl
cmpsl
dec
dec
lock
movlps
movsl
fdivrl
sbb
mov
jmp
lahf
out
sbb
push
icebp
add
mov
adc
lret
inc
lret
das
add
aas
and
lea
fwait
add
aas
scas
sub
rcr
das
mov
sbb
cmpsb
xchg
push
mov
lds
loope
mov
dec
mov
into
adc
or
jnp
lahf
imul
dec
cmp
ljmp
imul
movsl
mov
fimuls
and
jge
sbb
mov
mov
xor
call
cmp
dec
add
jecxz
mov
imul
mov
jbe
shll
leave
xlat
dec
and
pop
fsubs
es
push
daa
int
push
lret
mov
nop
aad
gs
mov
inc
pop
jne
movsb
cmp
fs
je
je
pop
or
inc
push
movsl
cmp
mov
lock
int
or
aas
mov
fisubl
loop
mov
mov
and
iret
jmp
ficomps
adc
pushf
imul
add
negb
adc
jg
sti
adc
jnp
or
add
out
cmpsl
jmp
mov
cld
mov
sub
ficoml
arpl
inc
lds
mov
add
divb
inc
mov
xchg
jl
and
lock
jnp
fldl
xor
dec
mov
in
test
lahf
mov
push
nop
mov
decb
xor
mov
dec
int3
fisubl
adc
cmp
movsb
inc
sbb
mov
out
flds
mov
pushf
loop
arpl
out
mov
inc
push
addr16
mov
xor
xor
add
adc
ds
dec
out
pop
and
inc
sbb
mov
nop
stos
sub
xchg
das
add
scas
xor
imul
xor
gs
sbb
ja
jp
xchg
jno
cld
inc
fmul
xor
iret
or
jns
push
adc
xchg
test
imul
jmp
add
out
scas
sbb
cwtl
in
sbb
stc
push
cmp
ds
ret
out
mov
mov
jmp
add
sub
push
pop
int3
adc
sbb
xchg
ss
les
and
or
sbbb
iret
das
mov
xor
dec
xchg
mov
jmp
aam
push
cmc
lcall
es
adc
aad
pop
aad
cmp
lds
xchg
dec
mov
and
insl
sub
jne
sub
and
mov
mov
jmp
ds
adc
inc
and
push
fisubs
pop
jl
dec
cmc
mov
mov
inc
xchg
lods
pop
outsl
jno
pop
mov
in
pop
sbb
push
inc
mov
aaa
jb
lcall
sbb
testb
out
dec
add
adc
mov
push
mov
xor
cmpsl
bound
sbb
sbb
pop
jo
and
sbb
data16
sbb
mov
dec
sahf
rcrl
clc
leave
lods
pop
movsb
pop
movsl
ljmp
pushl
mov
aad
lods
push
sub
xchg
sbb
lods
jne
iret
es
in
out
cmp
mov
cld
insl
lods
dec
push
xchg
rorb
push
cmpsb
jns
fnop
push
inc
mov
mulb
imul
icebp
adc
in
mov
test
orl
daa
adc
in
out
xor
scas
push
sbb
push
out
xor
shll
jns
pop
dec
mov
xor
push
sbb
test
call
xchg
cmp
repnz
das
xchg
popl
xchg
sbb
lret
pop
imul
add
stos
jo
jmp
push
fistl
fwait
sub
inc
cs
rorb
shrl
rcll
add
sti
jb
jecxz
xor
xor
adc
jle
pop
cmpsb
pop
lock
jecxz
test
pop
test
dec
jo
ss
dec
xor
iret
imul
pop
imul
adc
or
ds
xchg
ret
pop
adc
mov
push
aam
mov
or
ret
mov
jae
jne
mov
push
loop
pop
and
and
xchg
shlb
lea
mov
rcrb
inc
loop
xor
aaa
push
scas
ret
ljmp
in
and
add
cmp
mov
fimuls
movsb
ja
in
hlt
jmp
stos
sbb
cld
imul
xchg
sbb
mov
sub
loope
or
cld
inc
mov
lret
or
mov
popf
jg
cmp
sub
jb
std
xchg
xchg
fidivrl
and
shrb
fisubrl
ds
lea
pop
lods
or
out
add
loope
mov
mov
ret
cmp
pop
mov
xor
outsb
imul
or
inc
mov
xchg
add
sub
loopne
fucomp
or
mov
mov
mov
dec
push
xchg
leave
outsl
les
movsb
or
xor
sahf
sub
aaa
pop
daa
mull
push
jmp
into
xor
jle
inc
sbb
or
andl
sub
mov
or
scas
push
xor
mov
mov
cmpsl
push
testb
idivb
mov
enter
les
aas
add
loope
push
sbbl
loopne
lds
xor
ret
pop
adc
jo
and
jo
pop
sarl
sub
xchg
push
stc
dec
movsl
in
lds
and
jo
pop
loope
test
sub
in
jg
test
jge
mov
rcrl
je
in
adc
shl
jmp
xchg
movsl
dec
adc
pop
xchg
imul
adc
xchg
push
sarb
pushf
stos
cs
push
add
cmp
notl
push
popa
int
call
je
mov
pop
xchg
push
subl
mov
test
mov
rcl
loopne
push
cmp
fcmovne
mov
adc
call
pop
ret
jge
xchg
imul
push
pop
cmp
sub
insb
sbb
les
outsl
add
sub
out
mov
arpl
dec
mov
mov
test
jecxz
stc
lret
pop
mov
inc
sub
push
hlt
push
negl
add
popa
cmpsl
test
js
pop
sarl
inc
dec
outsb
and
jl
adcb
inc
jae
int
in
outsl
dec
pop
mov
mov
adc
push
push
inc
push
push
orl
cmp
insl
in
mov
shrl
mov
sbb
popf
cmc
jmp
mov
sbbl
hlt
data16
mov
jl
mov
gs
rorl
and
pop
cmpb
ds
sub
in
pop
cmpb
sbb
gs
cmpsb
rorb
out
ds
dec
jns
fmull
jge
mov
pop
rol
loop
into
mov
mov
outsb
shrb
stc
shll
push
lret
inc
sbb
scas
fnstenv
call
mov
jg
iret
dec
add
test
dec
xlat
fisttpll
lret
and
sbb
dec
es
push
mov
sub
pop
leave
pop
jb
inc
pop
sub
cli
pop
xor
inc
loope
inc
add
adc
arpl
jmp
loop
loopne
xchg
pop
icebp
imul
sub
and
call
mov
out
test
test
pop
jb
jl
pop
insb
fisubrs
fimull
cltd
add
arpl
add
xchg
mov
adc
cwtl
sti
mov
dec
mov
into
xor
sahf
loope
xchg
je
nop
movsl
pop
sub
sub
push
in
add
xchg
cmp
ss
mov
xor
inc
push
push
mov
jae
fistl
cli
aas
cmp
mov
mov
addr16
mov
repz
sub
push
movsw
mov
fs
sbb
arpl
cmp
add
pop
jns
xor
adc
pusha
pop
mov
lahf
or
push
shld
loope
lcall
lods
adc
aam
icebp
test
imul
vmread
inc
fnstenv
nop
jp
add
aam
ds
into
push
stos
imulb
add
lock
xlat
jg
enter
movsb
std
add
shll
es
testl
mov
lods
mov
stos
push
es
popf
iret
scas
inc
xchg
in
shrb
jnp
xchg
in
sub
sub
es
push
pop
mov
xor
pop
ljmp
mov
ret
cmpsb
add
lds
cmp
mov
mov
arpl
inc
je
scas
mov
rcll
jo
fstl
push
inc
inc
or
mov
test
mov
lcall
mov
jmp
adc
xor
sub
gs
mov
orl
pop
push
iret
ljmp
cld
scas
mov
cwtl
cwtl
add
mov
mov
inc
insb
cli
jp
or
aas
je
sahf
or
mov
sub
loopne
hlt
sub
sub
mov
jne
xchg
sbb
aaa
addr16
xor
sarb
roll
jbe
subb
pop
std
mov
dec
cmp
aad
stc
jle
int
lea
sub
arpl
mov
in
outsl
sbb
jge
push
push
sub
ret
adc
in
cmp
mov
adc
and
xor
xchg
ret
testl
lea
xlat
mov
inc
adc
fsubs
cld
loope
jns
std
scas
sbb
pop
lret
mov
add
les
test
and
pop
mov
dec
fdivr
mov
mov
cmp
xor
xlat
mov
xchg
mov
jno
dec
mov
ljmp
int3
loop
clc
pop
xchg
test
and
jo
dec
rolb
std
test
outsb
xor
cli
mov
aaa
mov
test
mov
test
and
lret
call
dec
aam
mov
inc
sbb
cltd
mov
shrb
leave
dec
fcmovnu
fwait
cmpsb
pop
adc
mov
je
int
outsb
rorl
iret
pop
sbb
repz
out
inc
inc
shlb
mov
and
dec
in
jae
cmc
or
push
repz
jmp
out
lods
popa
or
mov
mov
daa
aad
cs
pop
xchg
and
fwait
aaa
out
stc
sub
pop
movsl
in
inc
fistps
rolb
push
mov
and
push
xchg
xor
cmp
mov
dec
out
lret
pop
lds
push
outsl
mov
imul
jl
inc
sbb
inc
push
mov
in
mov
mov
cltd
push
fbld
fs
jmp
loopne
and
pop
fdivs
loop
xchg
pop
push
stc
sub
and
mov
xor
hlt
mov
decl
sub
pop
ja
mov
push
mov
enter
push
iret
negl
mov
icebp
aas
dec
icebp
add
pop
xor
mov
mov
xchg
add
out
cmc
push
or
dec
mov
mov
push
mov
adc
xchg
mov
bound
sbb
in
in
sbb
lahf
mov
scas
sbb
mov
sbb
out
mov
jno
mov
jne
mov
out
rcll
out
push
inc
dec
xor
loope
pop
pop
cmp
cvtps2pd
lcall
into
andl
fnstsw
hlt
mov
cmp
push
scas
fs
push
aaa
xor
ja
adc
add
xor
push
repnz
popf
aaa
cwtl
ficoms
mov
xchg
cld
cld
xor
xor
xor
scas
daa
mov
jg
push
mov
mov
pop
jbe
aas
ja
mov
mov
lea
lods
jae
add
push
xor
repnz
push
sbb
fucomi
sahf
testb
dec
jecxz
dec
mov
xor
leave
mov
bound
pop
lds
fwait
pusha
out
dec
sti
jmp
les
orb
stos
pop
int
cs
inc
sub
int3
iret
in
sar
call
xor
daa
lret
leave
pop
inc
mov
dec
dec
fldenv
js
pusha
fwait
enter
fnstenv
hlt
mov
loop
pop
or
scas
mov
jl
mov
cltd
mov
fs
test
dec
sbb
sti
testl
adc
cmpb
xor
push
jne
sbb
xor
imul
loop
inc
and
lret
sbb
sub
push
pop
pop
shll
inc
ljmp
lret
xchg
add
xchg
push
mov
adc
lret
cmp
sbb
fcomp
cwtl
int
fbld
xlat
xchg
scas
sbb
in
aad
adc
iret
cmp
nop
fwait
jmp
jle
cmp
jae
mov
in
lea
lcall
inc
push
and
in
cmp
inc
hlt
pop
fstl
adc
enter
mov
addb
inc
pop
rorb
loope
xchg
arpl
xor
jne
mov
aas
pop
and
outsl
mov
inc
ljmp
lsl
add
in
test
test
jae
out
lods
fnstsw
icebp
mov
xchg
pop
cmp
jp
jno
xor
sub
subl
icebp
ds
fistpll
shlb
sbb
fsubrl
inc
jge
cmp
pop
mov
nop
fucom
cmpsb
jg
sub
pop
mov
xchg
add
addb
mov
push
mov
add
cmpsl
stos
add
in
incb
ja
sub
mov
add
sub
inc
adc
xchg
and
lea
adcl
push
jle
pusha
outsl
xor
repnz
or
stc
inc
pop
divl
adc
xchg
loop
in
sti
dec
rorb
cmpsb
xchg
imul
jno
mov
mov
inc
and
jmp
jo,pt
push
mov
ss
jp
imul
fmuls
inc
je
mov
mov
hlt
mov
pop
inc
sub
js
mov
setbe
push
push
push
jnp
pop
cmp
loope
fcmovu
mov
inc
aam
adc
dec
sub
pushf
xchg
loopne
mov
test
out
mov
xor
shrb
ja
in
imul
fucomip
andb
lock
std
pop
add
imul
xor
cld
lcall
push
clc
mov
inc
imul
repz
std
mov
movsl
xchg
push
lret
xor
sub
pusha
arpl
int3
aas
mov
xor
and
jle
ds
fstps
mov
or
mov
icebp
xchg
jns
cmpsl
add
das
mov
das
imul
sbb
out
add
rcll
dec
pop
dec
xchg
es
movsb
sbb
int3
push
in
lahf
idivb
out
out
rclb
xor
fidivs
fucomp
xchg
xor
repnz
jp
scas
inc
inc
mov
insb
cwtl
loope
sbb
jmp
mov
addr16
adc
iret
test
mov
xor
nop
mov
dec
push
dec
je
dec
xor
push
lods
mov
hlt
imul
movsb
pop
xchg
fldenv
lret
push
je
repz
and
cmp
adc
xor
and
int3
rcrl
mov
loop
mov
ljmp
leave
scas
sub
and
mov
mov
lods
adc
leave
xchg
and
push
fstl
movsb
daa
mov
ds
sarl
jg
inc
mov
loope
stc
and
mov
enter
xor
or
pop
movsb
movsl
imul
inc
inc
adc
mov
sti
inc
jo
mov
push
dec
push
fldenv
dec
mov
mov
test
or
mov
clc
mov
js
sub
jno
push
xchg
add
out
push
rclb
fimuls
xor
sub
mov
nop
lcall
jmp
outsl
xchg
jmp
pop
mov
adc
mov
dec
cmp
push
jge
jno
pop
and
pushf
nop
sub
movsb
sti
adc
and
ds
sub
pop
or
int
ja
xchg
xchg
add
iret
sar
or
ja
enter
pop
sbbb
jmp
jbe
in
sub
or
mov
xor
cmpb
lcall
mov
out
or
aas
push
xchg
nop
dec
sarb
mov
test
aam
pop
pop
pop
hlt
pop
inc
or
in
test
pop
cmp
sbb
add
sbb
ss
xor
xchg
sub
push
and
in
mov
icebp
mov
popf
cmpsb
ficompl
inc
iret
cmp
jle
mov
popa
jae
es
sub
pusha
mov
fdivrs
or
orb
cmc
mov
jno
ja
xchg
jl
imul
jp
unpckhps
lea
xchg
adc
jae
pop
imul
repz
test
outsb
dec
add
stos
or
inc
mov
sub
hlt
rcll
aam
jle
dec
fistps
xor
pop
inc
pop
imul
xchg
jge
add
iret
add
cmp
inc
inc
xchg
xchg
ds
ud0
fimuls
add
fcoms
testl
jecxz
out
dec
sarl
lahf
mov
jp
divb
jb
lahf
lahf
push
out
das
movsb
mov
mov
cwtl
insb
int
and
dec
hlt
sbb
jl
fcoml
mov
or
clc
pop
stc
xchg
mov
pop
mov
inc
lcall
jnp
outsl
cmp
fsubr
test
jle
stc
leave
rorb
das
dec
in
add
dec
hlt
cmp
lret
shlb
aad
mov
popa
arpl
inc
xor
sbb
add
jmp
pushf
js
rorb
inc
mov
icebp
and
adc
aaa
pop
ret
mov
mov
popa
gs
and
inc
mulb
dec
fstps
hlt
mov
divps
xor
mov
aad
enter
mov
cs
in
sar
insb
jmp
movsl
popf
jmp
or
fnsave
outsl
inc
pop
mov
sbb
lret
mov
pop
iret
in
fisttps
mov
adc
push
cmpsb
aad
shrb
cmp
iret
imul
pop
jae
inc
movsb
xchg
jmp
jle
mov
lcall
sbb
jmp
dec
lahf
lods
cmp
mov
aaa
scas
popa
or
ja
sub
inc
lea
push
push
cmp
push
in
insl
xchg
je
dec
xchg
push
out
shl
test
xchg
dec
sbb
movsl
fs
dec
adc
sbb
inc
cwtl
or
call
add
jmp
jg
std
out
push
mov
out
cmp
test
dec
add
repnz
stos
or
mov
in
and
jne
imul
or
in
pushf
es
and
adc
sbb
dec
sti
xchg
mov
adc
sti
fmuls
add
adc
leave
mov
ja,pt
and
cld
cmp
stos
rorb
scas
jmp
decb
repnz
popa
dec
pop
insl
xor
in
push
pop
push
cmc
xchg
fwait
pop
inc
out
cli
testl
push
adc
push
aam
repz
outsb
flds
inc
dec
add
push
loop
inc
xor
dec
xor
pop
or
loop
shrb
sbb
jmp
test
xor
shr
sbb
aad
mov
sub
cld
mov
clc
jns
sbb
nop
int3
push
cmc
insb
loope
aad
lock
cmp
adc
inc
adc
push
out
add
rcll
test
rcrl
mov
repnz
or
jg
mov
sub
pushf
test
cmpsb
jg
and
mov
pop
scas
test
adc
cld
add
lds
fwait
aam
jae
fisubs
inc
stos
or
in
repnz
and
xchg
jmp
add
rol
xchg
leave
push
add
push
dec
out
movsl
aad
mov
xchg
shlb
ret
enter
xor
das
and
sub
mov
in
das
inc
pusha
add
jb
jge
psubsb
je
cmp
pop
jb
cmpsl
mov
lcall
adc
daa
scas
pop
or
push
dec
adc
pop
xchg
jecxz
mov
dec
lock
cli
roll
xchg
jae
fists
xchg
mov
push
jno
int
push
sbb
lret
push
popa
mov
mov
movsb
testb
jnp
int3
xor
pop
mov
cwtl
sbb
add
dec
mov
mov
push
mov
scas
cmpsl
icebp
pop
fmul
mov
add
add
shrl
insb
and
stos
sti
mov
aaa
popf
cmpsb
cmp
mov
mov
push
push
insb
unpckhps
lahf
mov
xchg
mov
ret
cmpsb
jle
arpl
enter
outsl
idivl
int3
gs
jle
out
jb
dec
dec
xor
dec
and
subb
aaa
mov
lahf
iret
aam
jno
hlt
pop
bswap
lock
xor
andb
test
out
cmp
inc
jl
cltd
insl
lods
dec
inc
fiaddl
sub
imul
outsl
lcall
imull
imul
mov
aas
adc
jbe
ljmp
test
in
mov
int
sbb
xchg
mov
ljmp
xchg
add
mov
das
pop
loop
testb
pop
add
mov
fs
popa
add
pop
add
pop
call
in
sub
cli
jmp
and
cli
addr16
shll
mov
adc
xor
scas
pop
pop
xchg
dec
pop
lahf
outsb
popl
fwait
stc
cmp
mov
int
test
xchg
js
clc
add
add
push
cmpsl
mov
inc
loopne
xor
imul
cmpsb
stc
jge
inc
dec
dec
out
movsb
ss
aas
fwait
std
cs
lret
xchg
sbb
adc
ja
push
mov
mov
outsb
xor
inc
pushf
sbb
pushf
sub
sbb
sub
addr16
iret
jnp
inc
pusha
mov
inc
mov
sarl
dec
cltd
out
shrb
addr16
push
jne
int3
mov
test
xchg
add
insb
adc
dec
fidivrl
cmp
inc
movsb
loope
adc
insb
dec
test
outsl
push
adc
and
dec
inc
xchg
cwtl
xor
push
mov
cmp
lods
jmp
int
mov
add
inc
fdiv
xchg
lcall
adc
ret
jnp
and
mov
add
sbb
cli
mov
fwait
into
xchg
pop
jb
cmp
jns
push
or
inc
sbb
and
pop
pop
insl
orl
mov
sub
jnp
sbb
fwait
cs
data16
adc
push
sbb
aad
stos
dec
inc
lahf
dec
inc
push
pop
in
ret
scas
mov
fisttps
mov
int
sub
imull
ja
cmp
adc
mov
jmp
fs
addr16
xchg
lods
adc
test
mov
cld
inc
sub
jb
pop
bound
mov
lea
call
lahf
add
and
adc
push
add
mov
dec
test
leave
ja
loope
mov
stos
push
pop
dec
movsb
out
pop
cmp
stc
iret
add
cwtl
sub
sub
lahf
call
ret
push
pushf
filds
pushf
bswap
sbb
fsts
push
fld
xchg
lds
cmpl
shl
inc
popf
cmp
dec
movsb
or
pusha
popf
rolb
or
sub
es
arpl
dec
mov
mov
or
adc
mov
in
jbe
push
xchg
xor
add
mov
aaa
xor
or
out
mov
xor
xchg
lods
roll
or
add
push
loope
cmp
or
aad
xchg
adcb
jne
in
aad
cmp
cmp
jns
scas
sbb
outsl
mov
aad
pop
fildll
leave
insl
test
add
gs
dec
sbb
jns
out
mov
and
jle
outsb
std
jne
sbb
add
ret
jo
or
fldt
mov
fisttpll
pop
repnz
sub
mov
mov
mov
inc
jnp
dec
mov
adc
lret
mov
mov
jl
jp
in
bound
adc
mov
adc
mov
dec
mov
adc
rolb
cmpsl
and
je
leave
fwait
inc
push
dec
std
sbb
sbb
mov
mov
mov
sar
adcl
outsb
leave
mov
adc
add
jbe
inc
fdivrs
add
jbe
sbb
push
lds
aas
lock
fwait
pop
insl
adc
dec
jg
push
push
cmpsl
loop
addb
sub
jae
data16
mov
lahf
cmc
pushf
sub
lret
daa
pusha
scas
cs
and
mov
jmp
outsb
data16
mov
std
pop
adc
and
jg
xor
xor
mov
dec
mov
cmc
jo
icebp
ret
jo
and
cmp
es
nop
add
mov
push
std
shl
cmp
ds
mov
aaa
xchg
mov
inc
into
test
jmp
pop
movsb
popf
mov
fdivs
pop
es
ds
fcoml
pusha
mov
sbb
loop
loopne
jg
mov
ds
lods
jge
cli
test
or
les
rol
pop
scas
xor
cmp
xchg
sbb
mov
jle
sahf
cmpsb
jecxz
aaa
inc
shll
lock
lock
push
insb
rolb
mov
arpl
inc
icebp
in
push
rcrb
fdivs
sub
mov
cmc
jp
inc
xchg
sarl
sahf
jmp
or
pusha
lret
add
jo
push
xor
pop
pop
dec
je
cs
sub
loope
pusha
mov
sub
xor
cmp
mov
and
jle
scas
xor
aad
repnz
imul
xchg
sub
incl
outsb
lods
xor
stos
dec
inc
andb
inc
jae
mov
mov
jns
jns
out
cmpl
insl
out
mov
and
cmp
cmp
into
ds
jb,pn
pop
sbb
int
pop
mov
in
mov
jnp
inc
inc
xorl
mov
dec
mov
aad
xor
push
shr
ret
mov
dec
or
rcrb
cmp
ds
les
daa
push
sbb
loope
mov
clc
inc
push
push
cmpsl
xchg
jmp
pop
sbb
into
mov
in
add
movsb
xor
icebp
enter
call
rcrb
ss
in
scas
fadd
out
nop
je
int3
lcall
xor
and
rcrl
ljmp
and
push
cmp
dec
dec
inc
push
mov
in
repz
and
mov
sbb
int3
jne
and
inc
or
js
in
mov
dec
pop
shl
dec
mov
ss
xchg
xor
ljmp
xor
jo
cmpsl
out
jp
pop
push
xor
rcrb
add
cmp
test
das
add
iret
das
loop
add
ss
mov
test
sbb
or
sbb
mov
mov
add
filds
push
and
setge
sarb
jo
push
or
in
movsb
xchg
jne
push
aad
cmc
stc
inc
scas
fdivl
push
ror
pop
iret
inc
cmp
push
lea
repz
and
pop
push
test
xor
in
jmp
aad
testb
dec
aas
popa
push
mov
pop
ljmp
in
mov
lods
inc
enter
mov
and
std
or
shr
cmpsb
mov
fmulp
dec
js
or
leave
xchg
cmp
or
test
lods
clc
pop
inc
stc
adc
add
add
xor
mov
hlt
dec
ret
push
xchg
insl
hlt
repz
or
movups
lds
sbb
icebp
push
and
fildll
in
mov
in
sub
dec
push
jb
mov
push
aad
dec
addb
mov
adc
je
std
inc
and
aam
divl
lods
ret
mov
das
add
testl
cmpb
das
insl
cwtl
and
push
xchg
mov
shll
mov
sbb
jo
and
xor
test
movsb
and
mov
nop
sbbb
inc
movsl
push
lea
pop
fnstcw
inc
out
sbb
cli
add
xor
scas
in
pop
movsb
xchg
sub
les
add
ret
ss
mov
xor
dec
sbb
mov
lret
mov
xchg
mov
dec
rorl
out
add
hlt
mov
jno
add
imul
sub
jo
cmp
mov
lods
mov
rclb
sub
add
mov
lods
adc
test
ja
mov
jmp
es
enter
fwait
lret
ret
xor
push
fadd
and
mov
test
sub
mov
jnp
in
push
adc
hlt
xchg
push
call
fisttpl
xchg
sbb
fsubr
loope
sar
pop
jmp
es
out
adc
add
iret
inc
cmp
inc
jo
gs
ljmp
bound
out
push
adc
icebp
in
es
mov
cwtl
xor
or
xchg
adc
pop
sub
test
shrl
adc
test
lret
aam
insb
test
enter
fcomps
insl
dec
sbbl
cmp
adc
push
dec
adcb
ja
into
push
or
rcll
jnp
sbb
xchg
xchg
bound
shlb
jbe
push
fidivl
mov
and
js
push
mov
xchg
or
rcrl
sbb
cmc
adc
jne
lds
mov
xor
lods
rclb
xchg
cli
sub
add
xor
in
sub
and
in
clc
mov
call
les
shlb
lret
push
shl
imul
shll
js
inc
xchg
stc
pop
imul
mov
or
mov
add
enter
adc
xor
cmp
xlat
cmp
or
rorl
sbbb
jne
cmc
je
das
push
inc
data16
jns
and
sbb
mov
les
ljmp
pop
push
jae
lods
cltd
enter
cli
pop
out
orb
out
mov
mov
stos
loopne
inc
push
test
mov
adc
add
cmp
xlat
ja,pt
xchg
jmp
sub
insl
cmpsb
pop
xchg
int3
jecxz
lods
hlt
sahf
cli
in
xchg
pop
xor
sbb
adc
xchg
xor
add
pop
out
ds
lcall
sub
mov
hlt
ret
shll
decl
rol
mov
fs
popf
in
sarb
ret
int
in
mov
cmp
jmp
xor
push
and
adc
fs
dec
rcll
sti
outsb
and
ja
pushf
pop
repz
push
mov
out
cs
fs
sub
rolb
cmp
dec
add
ljmp
pushf
ficompl
mov
es
pop
hlt
jmp
cmp
sbb
lret
cld
add
cmp
pushf
pop
faddp
roll
sti
dec
inc
ja
mov
repz
shll
add
dec
lock
test
popf
adc
lret
decb
cltd
out
cmp
mov
and
xchg
loop
push
xchg
ss
adc
loop
fcmovu
in
js
mov
pop
lcall
mov
mov
mov
or
mov
int
sbb
js
call
xor
lock
aam
lds
ret
jne
push
cmp
dec
jne
loop
dec
cmpsb
jae
jae
push
andl
jecxz
lahf
fcmovbe
jmp
pop
cmpsb
in
cs
into
int
mov
loop
lahf
into
push
shl
jle
cld
cmp
std
ljmp
rorb
inc
lods
imul
adc
mov
mov
mov
movsb
fldenv
test
cmpsb
outsl
aad
dec
and
pop
inc
and
repnz
jl
fs
jle
cmp
movsb
xor
nop
dec
in
cmp
adc
in
xlat
stos
mov
shrb
push
mov
adc
aaa
bound
sub
and
or
int
inc
add
lahf
mov
in
dec
rclb
add
inc
cmp
xchg
lods
mov
jmp
fsubrs
je
jae
inc
test
dec
lock
movsb
ljmp
in
and
jbe
jne
lret
add
sub
sub
and
push
mov
fldenv
jge
jns
pop
dec
nop
inc
or
sbb
pop
ret
xchg
dec
imulb
jmp
jmp
mov
lods
lahf
ret
je
add
pusha
dec
xchg
jecxz
cwtl
fwait
mov
fldenv
and
mov
adc
stc
aad
adc
or
aas
insl
into
int
jg
jns
cld
shll
je
jle
inc
je
lock
jns
fstpl
shlb
mov
pusha
mov
testb
ret
imul
daa
mov
lret
inc
addr16
push
mov
pusha
int3
push
mov
mov
fildl
push
and
iret
add
into
cmpsb
rcrb
jmp
push
scas
insl
cmp
sub
sub
out
or
xchg
cmp
in
sub
ja
inc
add
pop
outsl
push
outsl
stos
and
jle
rclb
or
fimuls
stos
or
push
fyl2xp1
and
mov
arpl
xchg
xchg
xor
idivl
es
idiv
xor
das
scas
and
out
mov
sub
mov
pop
divl
dec
inc
orb
push
push
and
leave
inc
mov
gs
lea
sbb
mov
pop
stc
fadd
cwtl
ljmp
shlb
xchg
pmulhw
cmpsb
and
sub
call
dec
roll
mov
fwait
and
add
mul
sarl
push
pushf
fst
sub
popf
jno
jb
pop
dec
iret
stos
test
and
int3
jg
fs
jmp
mov
and
cmp
or
add
rcrb
push
fcomps
jb
inc
lret
pop
std
aad
enter
lds
aaa
scas
movsb
lret
rorl
push
scas
roll
aad
push
jns
in
jmp
push
jbe
fidivrs
or
adc
jnp
cwtl
pop
sub
push
stos
xchg
xlat
adc
cmp
pop
cs
cmp
jecxz
ds
pop
mov
adc
scas
pop
scas
or
in
adc
mov
add
jnp
jmp
mov
out
arpl
mov
jecxz
add
cmp
inc
ljmp
or
xchg
dec
fcmovbe
sbbb
decl
or
jo
cltd
lahf
imul
push
incl
add
jns
mov
mov
adc
cld
test
addr16
out
in
out
stc
push
int3
sbb
aas
xor
and
repnz
stc
xchg
or
inc
inc
and
shrl
call
jo
stos
mov
rolb
mov
sbbl
push
adc
shll
and
xor
in
mov
pop
dec
lret
fcoms
inc
mov
sub
ljmp
mov
popf
lahf
inc
xor
push
adc
mov
push
sti
xor
and
pop
push
lods
fcomps
insl
ja
pop
outsl
mov
shrb
outsb
loopne
inc
dec
mov
push
cmc
or
scas
mov
cmp
sar
outsb
or
add
push
add
into
or
ja
inc
push
inc
test
mov
cltd
test
inc
lock
or
jecxz
mov
xchg
popf
dec
dec
out
out
sbb
adcl
rdtsc
push
or
xchg
mov
add
sub
clc
das
enter
mov
iret
arpl
stos
gs
or
rcrl
pop
outsl
xchg
bound
scas
pop
sub
shlb
dec
sub
imull
push
icebp
cmp
add
or
in
pop
das
frndint
lret
dec
call
adc
lcall
cltd
rolb
adc
aas
xor
incl
mov
jp
adc
test
pop
gs
push
rorb
mov
shlb
popa
aam
mov
ljmp
sbb
or
lret
aaa
xchg
push
mov
movsb
push
cmpsb
cmpsb
in
mov
ret
lret
rcrl
mov
pop
adc
jno
mov
sahf
push
imul
mov
or
pop
int
icebp
dec
mov
adc
xor
out
lret
push
cmp
hlt
xchg
push
sti
cli
fadds
das
inc
or
in
adc
cmp
in
adc
fs
mov
clc
enter
and
mov
add
cld
ja
inc
mov
dec
fcom
test
dec
or
clc
lock
add
xor
inc
jns
jmp
jp
int3
mov
push
fstpl
push
aaa
popf
jl
addr16
xlat
dec
cmp
or
add
gs
lock
cmc
and
pop
mov
push
out
fnstcw
xor
pushf
fucomip
jo
iret
dec
jge
aas
aas
jae
stc
pusha
js
les
fmuls
push
mov
jns
mov
jne
mov
jb
das
in
cmp
push
xor
xchg
std
push
aaa
cs
inc
push
push
repz
out
fistpll
mov
or
add
icebp
mov
xchg
lret
mov
xor
pop
mov
addr16
adc
into
pop
lds
cmpsb
mov
lret
aaa
out
jl
clc
out
add
fiadds
mov
push
add
bound
popa
enter
ret
ficoml
test
pop
push
cmp
insl
rclb
idivl
or
aas
adcl
cmpsb
imul
call
pusha
popf
aaa
shlb
adc
sahf
sub
inc
pop
lea
jae
shlw
inc
aam
xchg
pop
ret
scas
jg
inc
xchg
scas
sbb
enter
add
stos
xchg
js
jo
adc
movsl
push
scas
fs
adc
pop
test
imul
mov
into
das
iret
int3
mov
jb
push
pop
dec
inc
les
dec
hlt
pop
stos
out
popf
jecxz
je
jbe
test
inc
inc
xor
mov
mov
push
lret
aas
sarl
sub
sbb
addl
push
xor
arpl
or
adc
pop
repnz
test
mov
xchg
sub
shrb
inc
add
ror
pop
push
mull
dec
fstpt
test
je
sub
insl
adc
adc
dec
loopne
loop
lds
loopne
mov
lret
jae
ret
test
add
sub
jo
scas
lcall
pop
les
test
in
fcmove
cmp
cmovs
scas
adc
or
ljmp
inc
push
ret
roll
out
pop
arpl
pushf
jecxz
rcll
mov
xchg
out
dec
sub
fwait
sbb
pop
movsl
adc
xchg
pushf
pop
das
sbb
or
lea
jge
lahf
sbb
mov
jnp
mov
xchg
test
pop
xchg
fbstp
xchg
ret
data16
mov
cs
data16
out
push
mov
pop
push
bound
out
pop
sub
cltd
test
add
bound
dec
xor
add
imul
push
ja
push
mov
jmp
push
and
push
hlt
loop
popa
or
out
arpl
into
adc
inc
sbb
fwait
iret
xor
push
out
orb
cwtl
ret
aaa
mov
insb
cltd
scas
das
cli
or
nop
cmp
nop
pop
pop
push
pop
std
testl
jo
in
xor
mov
or
repnz
inc
or
xchg
jbe,pn
fwait
add
dec
jp
lahf
rorb
push
add
lret
jg
xchg
ljmp
cli
orb
jno
insl
in
lock
ret
push
and
mov
fwait
jge
or
jg
lcall
jl
int
xor
mov
adc
out
jp
cld
mov
jo
pop
mov
mov
outsb
cmp
add
or
lret
mov
push
push
cmp
sub
es
adcb
cmpsl
push
sbb
scas
jle
fsubrl
enter
mov
add
mov
jnp
insb
xor
lret
xchg
dec
stos
in
sbb
jge
xor
xchg
jo
jne
mov
inc
shl
insl
outsb
fdivrs
das
fistps
cmp
sub
mov
into
out
push
lods
pop
scas
inc
inc
dec
lcall
repz
ss
pop
mov
sbb
mov
sbb
cmp
jge
mov
rcrl
add
mov
dec
popa
or
pop
sub
shll
das
pusha
mov
es
xchg
dec
and
enter
cld
mov
mov
das
adc
pop
stc
loopne
xor
push
mov
test
dec
lds
mov
push
mov
pop
scas
repnz
mov
ljmp
pushf
pop
push
xchg
add
les
pop
scas
fwait
sbb
mov
cmp
icebp
mov
sbb
lods
or
movsl
sbb
imul
or
lahf
sub
in
xchg
rcrl
and
pushf
mov
xchg
xchg
mov
mov
sahf
sub
fidivl
lret
push
xchg
jno
mov
dec
or
mov
mov
pusha
mov
mov
push
or
into
sub
jo
in
push
push
cmpsb
jp
out
into
shlb
ss
testb
test
dec
aam
lahf
or
rcrl
ljmp
inc
and
aam
loop
das
mov
cmpsb
sub
icebp
adc
xlat
dec
loopne
sbb
insl
mov
pop
add
movsb
inc
xchg
or
adc
mov
sub
shrb
xchg
call
xor
rolb
dec
jl
mov
mov
in
mov
pop
cwtl
dec
hlt
add
xlat
lret
xor
adcl
out
shlb
in
sub
inc
faddl
stc
bound
or
scas
cmpsl
fcoms
mov
mov
adc
lret
insl
arpl
dec
jno
dec
sub
test
xchg
lods
into
and
std
jns
sbb
dec
sbb
fs
imul
xchg
adc
aad
push
adc
addr16
loopne
push
in
cmp
iret
movsb
cmp
je
out
in
mov
push
inc
xchg
xchg
icebp
loope
popf
fcom
jno
xor
cmp
pcmpgtw
aam
aas
xchg
inc
mov
js
mov
test
cltd
dec
add
ret
xchg
int3
aaa
pop
scas
mov
cltd
jge
adc
sahf
bound
aam
lods
je
push
cmpsb
lret
adc
mov
cmp
jecxz
sbb
and
xor
fwait
loope
sub
les
pop
xchg
cld
cs
adcl
lods
je
outsb
and
fidivrs
fidivrs
enter
jg
lods
fs
outsb
icebp
jp
cmpsl
dec
xchg
push
jge
mov
ret
sbb
cmp
jnp
fimuls
cmpsl
add
aad
aam
lret
pusha
pop
cmp
or
mov
or
xor
jno
fisubl
int3
roll
inc
dec
insb
mov
xchg
and
dec
add
frstor
xchg
call
ljmp
arpl
daa
adc
sub
ljmp
cmp
and
inc
fdivrl
inc
test
and
jmp
jbe
es
lahf
inc
in
xchg
lahf
fwait
push
cli
repnz
mov
mov
clc
or
test
jns
test
ret
into
cmp
das
mov
pop
aaa
iret
add
mov
ss
fwait
jecxz
push
sti
lcall
cli
jmp
nop
enter
addr16
aad
ret
inc
fmull
cwtl
pop
jmp
loope
xor
call
push
out
add
mov
adc
push
pop
pop
add
stos
popl
inc
adc
shrl
dec
sbb
cmpsl
and
jae
aad
add
std
lcall
xor
arpl
test
ljmp
outsl
data16
push
fs
lcall
fwait
aas
and
mov
bound
pop
test
push
and
jne
pop
mov
out
sub
push
jle
scas
adc
inc
jo
mov
pop
test
mov
pop
pop
push
mov
adc
popa
mov
or
or
mov
mov
or
mov
fwait
add
repnz
fucomip
clc
xor
psubd
int
or
std
add
leave
cmp
ret
sbb
xchg
jns
fstpt
in
popa
cld
mov
jno
or
jg
mov
mull
xchg
add
sub
nop
iret
sub
loope
in
int
test
jp
pushf
push
xor
imul
shlb
jg
out
jb
mov
pop
movsl
cli
xlat
cli
sub
add
outsb
push
mov
ja
pop
rcrb
imul
loope
mov
sarb
or
xchg
test
ss
xlat
push
and
mov
les
inc
pop
test
insb
mov
orb
xlat
adc
mov
xor
mov
ret
aaa
jo
or
add
inc
ss
and
jns
hlt
in
das
ficoml
mov
addl
fwait
stc
sbb
scas
lds
out
inc
in
pshufw
jmp
lds
sub
in
pushf
imul
pop
loop
xchg
cmp
std
jl
jbe
lcall
in
and
sbb
loop
inc
cli
lret
push
jle
idivb
inc
xchg
jg
dec
inc
pop
xor
or
jmp
test
imul
inc
stc
add
jecxz
inc
leave
inc
jo
add
lds
mov
jo
lods
mov
mov
call
cmc
cltd
aam
in
cmc
dec
dec
popa
in
dec
mov
lret
lahf
aas
sub
jo
xchg
dec
mov
lcall
push
popa
push
pop
cmp
repz
mov
shlb
or
mov
inc
push
pop
pop
cmp
inc
add
test
movsb
sub
ret
lds
nop
and
stc
mov
out
adc
xchg
inc
in
pop
cmp
outsl
mov
test
jb
loope
xchg
jnp
xchg
push
jge
cmp
mov
fdivrs
and
sub
mov
lret
add
pop
pop
sub
sbb
mov
jecxz
jmp
popa
mov
repnz
leave
pop
jl
out
jns
inc
shll
dec
adc
adc
push
fldl
sbb
je
jb
mov
dec
iret
push
xchg
lock
mov
enter
xor
xor
sbb
adc
pop
nop
pop
testl
pop
push
dec
rcr
imulb
or
dec
or
jecxz
adc
xchg
lahf
in
stos
insb
sub
movsb
add
popa
lret
mov
cmp
test
outsl
xchg
mov
popa
lds
cwtl
inc
mov
and
jno
jmp
jae
addr16
inc
in
sub
insb
or
add
fsubrl
push
pushf
or
lds
pop
imulb
or
lret
mov
jb
clc
out
xchg
nop
jnp
popa
jg
mov
insb
pop
mov
movsb
imul
lods
dec
xchg
es
mov
sbb
push
imul
rep
bound
clc
jnp
xor
cmpsl
shlb
adc
shrb
pop
addr16
pusha
lret
les
xchg
in
call
repz
mov
push
fldcw
popf
loop
addl
pop
xchg
push
outsb
push
and
movsb
fidivs
and
sbbb
xor
outsl
jo
stos
iret
xor
xor
push
mov
pop
xchg
test
pop
dec
cmp
in
lcall
lahf
and
movsl
stc
sub
mov
sahf
aas
mov
insl
scas
cltd
iret
ror
xchg
into
mov
movb
sub
cld
sbb
mov
dec
mov
sahf
add
xchg
test
dec
dec
stos
xchg
inc
ljmp
rolb
lret
adc
in
outsb
xchg
test
push
frstor
int3
shrl
fwait
ret
push
adc
or
and
xchg
jns
lock
jg
addr16
pop
popf
pushf
adc
add
fsubrs
inc
ds
into
js
mov
push
testb
push
stos
ficomps
jnp
in
out
aam
dec
mov
sub
xchg
aad
push
fdiv
pop
mov
mov
gs
test
or
rclb
loopne
xchg
js
xor
addb
out
imul
int
clc
mov
dec
mov
mov
jno
gs
in
jne
pop
adc
mov
push
and
sti
inc
loop
xchg
sbb
or
pop
std
imul
push
ret
adc
lds
and
ljmp
mov
mov
imul
pop
pushf
stos
push
and
inc
imul
clc
pop
mov
lret
shll
out
out
lcall
sub
pop
mov
cmp
mov
xchg
dec
shlb
dec
popa
test
cli
and
pop
jmp
xor
jmp
inc
adc
sub
cmc
mov
inc
mov
ret
xchg
sbb
inc
jo
pop
sbb
mov
imul
cmp
mov
mov
popa
dec
sbb
mov
in
push
xchg
je
fdivrl
ffreep
jp
xchg
xor
pop
loopne
out
push
xchg
addr16
das
jnp,pt
arpl
dec
dec
in
popa
jae
hlt
lret
pop
fisubrs
aas
mov
or
aas
sahf
dec
mov
jle
fiadds
and
push
subl
and
sbb
adc
bnd
pusha
cmp
dec
into
jnp
mov
pop
pop
aas
faddl
mov
mov
insb
outsl
lret
lahf
shrb
rorb
repz
inc
cmc
cli
jo
shrb
in
push
push
jnp
add
sub
out
outsb
and
mov
test
mov
add
jo
push
test
add
loope
push
xor
xor
leave
adc
rclb
jbe
push
adc
ud0
sbb
fsubl
aas
decl
cltd
repnz
jg
inc
xor
lods
inc
bound
xor
cld
jl
mov
add
lds
cs
sub
gs
pop
pop
or
out
ja
jb
dec
pop
lahf
sbbl
add
loop
call
push
sub
cmp
mov
mov
das
pop
push
imul
cld
adc
je
lret
nop
push
adc
mov
das
test
test
js
push
dec
mov
mov
pop
enter
jl
mov
and
in
test
push
mov
cmp
ret
lahf
xlat
or
aam
test
ss
push
adc
in
jb
or
mov
xchg
ret
pop
ret
dec
inc
loope
push
pop
test
push
les
mov
mov
xchg
test
ficompl
dec
aas
dec
inc
push
repz
jbe
mov
dec
sub
setno
mov
into
jle
negl
push
ficomps
movsb
xlat
lea
dec
paddsb
pop
data16
mov
into
pop
jnp
popa
hlt
mov
negl
jo
fldlg2
cmp
lock
enter
mov
repnz
dec
outsb
test
arpl
lds
lods
cmpsb
icebp
movsb
cmp
lods
xor
adc
outsb
dec
xor
jl
test
xchg
test
cwtl
and
fnstcw
jbe
loop
jno
popa
mov
lcall
fisubs
sti
mov
inc
daa
sarl
xchg
aas
push
and
out
outsl
clc
cmp
sbb
or
and
sbb
iret
cmpsb
jno
arpl
mov
pushf
mov
mov
sbb
pop
divb
test
xchg
cmp
push
dec
icebp
in
push
popf
push
mov
push
jg
movl
enter
stos
xor
push
and
or
rcrb
out
xchg
cmp
mov
sbb
call
out
sti
ja
adc
enter
jb
jmp
mov
xchg
add
sbb
fstps
adc
inc
gs
mov
mov
gs
xchg
pop
repz
aas
lahf
and
add
outsb
cltd
sbb
adc
aad
js
es
and
adc
and
cmp
push
jge
jmp
lods
lods
jg
jle
xchg
jo
pop
clc
aas
mov
daa
jne
in
ret
pop
xchg
enter
roll
lods
daa
add
fwait
add
cs
sbb
pop
dec
jg
xchg
shll
clc
sub
pop
or
ja
dec
adc
pop
loop
adc
mov
das
dec
jbe
fs
jnp
xchg
lods
movsl
insb
stos
lods
push
xchg
out
lods
mov
adc
in
ret
mov
repnz
xor
cmc
sub
ds
xor
nop
orps
xchg
mov
orl
pop
hlt
ret
adc
bound
cmp
ret
cwtl
lret
loopne
repz
pop
mov
cmpsl
aas
imul
sub
or
push
dec
xor
cltd
in
je
out
sub
jne
hlt
cmp
stos
test
inc
mov
call
jg
inc
dec
sbb
mov
xchg
pop
xor
jns
adc
jecxz
or
cmp
dec
insb
mov
subb
sahf
jp
fldenv
movl
nop
inc
gs
clc
and
pop
pop
aam
dec
sbb
dec
lock
xchg
jp
jmp
pop
sub
push
nop
sarl
jl
or
pop
lret
test
fwait
pop
jmp
sbb
mov
out
dec
mov
aas
or
adcb
adc
stos
dec
inc
addr16
mov
sub
sbb
and
mov
cwtl
stc
out
mov
dec
rclb
cld
mov
mov
xor
mov
xorw
jp
insl
inc
mov
out
lahf
in
sbbb
pop
pop
dec
test
in
sbb
pop
xchg
lret
add
stos
xor
sbb
cmp
addr16
pop
mov
mov
push
mov
xchg
mov
repnz
hlt
rcll
sub
inc
pusha
mov
out
mov
jo
or
rcll
jne
push
or
rorl
rcl
orl
and
push
pop
cmpb
mov
pop
mov
cwtl
addr16
inc
lret
adc
fisttpll
je
aas
setge
inc
cmpb
call
inc
adc
mov
shlb
cmpsl
add
pop
adc
jb
pop
in
push
sbb
out
jmp
mov
sahf
in
decl
sahf
push
add
add
aad
es
push
aam
pop
sahf
adc
aam
lods
test
dec
add
xchg
cmp
sbb
push
jle
ret
sub
pop
pop
fstpl
dec
xchg
outsl
add
andl
adc
stos
pop
inc
fwait
xchg
and
xor
pop
not
push
mov
out
adc
or
mov
and
inc
cmpsl
subb
les
ret
subb
add
movsl
add
rcrb
clc
imul
gs
add
sarl
inc
imul
lea
sbb
and
mov
pop
aaa
and
shl
and
out
cmp
pop
aas
push
cmp
psubsb
popa
pop
adcb
and
jae
lret
loopne
and
xchg
add
aaa
mov
lea
mov
add
sbb
fdivrp
sahf
cli
scas
icebp
ret
cmp
inc
out
push
in
loopne
mov
ljmp
sub
and
xchg
lea
daa
test
loopnew
mov
ljmp
sbb
cli
cli
jb
mov
xor
or
mov
fildll
out
call
lret
dec
push
adc
or
jmp
fsubr
cld
dec
dec
pop
imul
filds
stc
mov
loop
dec
into
lahf
insb
cs
mov
xor
push
mov
or
xchg
push
jnp
mov
xchg
fwait
push
lds
sarb
js
ficomps
fsubr
pusha
cmp
push
in
scas
ljmp
sub
sub
pop
sahf
pop
pop
mov
adc
ja
and
test
popa
jno
testb
or
data16
aad
sbb
rcll
cld
movsl
jmp
dec
pop
push
push
imul
sub
jb
mov
insb
and
pop
lods
scas
adc
out
dec
mov
or
push
sub
dec
dec
lds
sbb
jae
into
cmp
in
fldt
out
mov
outsb
lods
mov
sub
out
daa
xor
idivb
xchg
mov
div
sbb
add
cmp
sub
mov
roll
inc
pop
and
inc
dec
jae
in
add
jno
cmp
push
addr16
popf
xchg
out
fs
mov
aad
in
cmp
js
aam
stos
adcb
dec
dec
leave
sahf
xchg
rcrl
in
lea
xor
ficoml
and
fisubs
cltd
loop
and
enter
inc
sub
imul
or
mov
mov
jo
push
add
sbb
lcall
xor
imul
lock
push
cs
lret
fbld
xchg
cmpsb
aam
and
add
es
push
pop
popf
xor
in
xchg
aaa
cmp
mov
mov
fwait
fs
inc
cmp
cltd
adc
out
dec
nop
fsubs
je
popf
pusha
jge,pt
fimuls
ja
stos
das
aam
add
adc
sub
mov
popa
xlat
or
imul
decl
jg
mov
add
push
inc
cmp
jge
push
pop
jmp
cmp
mov
xor
rorl
je
test
outsb
psubw
shll
repnz
add
cli
stos
xor
xchg
add
movsb
mov
dec
psadbw
dec
into
xor
sbb
jecxz
das
jp
sbb
mov
jbe
stos
xchg
stos
pop
pop
cld
inc
cwtl
push
jge
in
inc
in
sti
xchg
ja
mov
dec
repz
cmp
jnp
loop
jge
movsb
push
sti
xchg
rol
into
enter
pop
dec
push
js
sub
dec
out
xor
inc
mov
lret
ret
sbb
mov
xlat
pop
cld
sub
stos
xchg
es
xchg
insb
enter
pop
mov
cmp
lods
mov
dec
adc
and
xchg
aaa
leave
stos
aas
cmp
inc
cmpsl
bound
lcall
inc
loope
pop
loopne
cmp
jg
int3
adc
inc
shll
dec
dec
and
sbbl
pop
mov
bound
cmp
int3
sahf
add
cmpsl
js
rorl
xchg
adc
push
outsl
mov
add
stos
mov
jne
inc
cs
fstpl
push
pop
fucomp
pop
out
jg
fistl
notb
sbb
mov
sbb
dec
aad
and
cmp
out
test
xchg
mov
ja
int
xor
mov
pmaddwd
fwait
call
mov
push
jns
mov
jecxz
lcall
xor
and
jg
mov
xchg
shlb
sub
xchg
test
pop
std
dec
fsts
gs
lret
sub
add
mov
test
or
insb
mulb
ljmp
orb
imul
mov
xchg
mov
pause
xchg
jge
jg
inc
mov
mov
push
pop
mov
dec
mov
xor
pop
xor
dec
out
sbb
jns
xor
repnz
cmc
sub
jae
lock
or
nop
cmp
and
lea
jge
mov
rclb
add
dec
and
shr
lret
push
sub
xchg
mov
insb
mov
lret
out
jbe
xor
in
std
fs
div
sahf
sub
cmp
movsl
lret
push
out
lock
rorb
and
xchg
stos
push
mov
push
xor
push
mov
imul
dec
lock
pop
push
not
and
pop
xchg
push
shll
mov
fcmovu
popf
lcall
hlt
std
repnz
addr16
add
in
pop
mov
cwtl
lods
push
in
test
lea
jg
xor
inc
jo
jno
add
lds
sbb
mov
lahf
das
insb
int
in
lea
jg
sbb
inc
mov
inc
popa
ret
cmp
mov
xchg
mov
icebp
mov
repz
data16
in
push
jmp
into
or
xor
lahf
mov
and
in
rorb
mov
mov
xchg
xor
push
das
sar
movb
jp
jbe
pop
movsb
cli
cltd
cmovne
insb
mov
xor
cmp
roll
fs
and
mov
pusha
idivb
inc
mov
arpl
lret
popa
mov
xchg
das
sbb
xor
std
inc
dec
xor
mov
inc
push
mov
mov
mov
mov
mov
pop
leave
icebp
xchg
push
je
push
lret
add
jle
stos
dec
and
mov
sbb
add
shlb
dec
test
push
in
sbb
inc
push
jmp
ss
ljmp
out
push
xchg
sahf
int3
add
push
loope
xchg
data16
hlt
mov
sbb
lret
jmp
outsl
lret
cltd
push
sbbb
je
push
inc
adc
sbb
sub
adc
call
xor
addr16
inc
cmp
pop
lds
xchg
lret
push
cmp
xchg
loope
cltd
push
lods
out
shlb
jb
pop
adc
stos
rcr
pop
xchg
pop
jmp
sbb
and
jmp
pop
or
in
lret
add
cltd
std
ret
sub
shl
add
mov
cmp
push
and
icebp
mov
jmp
xlat
pop
pop
daa
inc
lea
pop
rcrl
push
clc
mov
addl
or
out
cmc
fnstsw
xchg
jno
cli
shlb
nop
mov
jge
ret
and
sub
jae
mov
cli
faddl
add
repz
xor
imul
ret
loopne
inc
mov
cmp
repz
inc
inc
nop
xlat
inc
das
cmp
outsb
rcr
subl
je
lods
or
add
pop
mov
lds
add
jbe
or
jmp
pop
sub
adc
push
sub
popf
stos
ds
jo
adc
add
fsubrs
mov
out
repz
out
pop
dec
jmp
scas
aas
std
xchg
fiaddl
lret
arpl
mov
ljmp
pop
les
decb
aam
stos
pop
mov
dec
mov
out
sub
and
shll
sbb
mov
pop
mov
popa
sub
insb
xchg
lret
insl
and
pusha
pop
in
sub
aas
add
stos
out
dec
pop
xor
sub
mov
or
sti
imulb
adc
scas
xor
lods
add
jge
mov
rcrb
andl
iret
sbb
lods
or
sbb
xor
xorl
mov
lock
or
pop
mov
push
pushf
mov
out
mov
out
xor
lahf
pop
pop
test
add
leave
or
pop
push
dec
push
jg
adc
fs
sbb
inc
rcrl
sbb
out
fnstcw
sbb
aas
fsts
xor
outsl
test
pop
into
iret
jle
iret
aam
inc
int3
arpl
and
push
je
cmpsl
add
fistl
pop
imul
dec
imul
andb
cmc
mov
xor
ret
mov
mov
jle
out
cmp
fwait
sub
cmp
mov
sub
bound
addr16
cmpsb
cld
pop
jo
in
xor
pop
pop
and
divb
inc
pop
fidivrs
cli
mov
iret
ret
pusha
mov
pop
pop
lahf
sub
push
adc
js
fs
lahf
orl
ret
inc
cld
adcb
xchg
mov
cld
pop
clc
cmp
fsubrs
shll
pop
pop
inc
pop
mov
ret
pop
mov
mov
ds
cmp
inc
icebp
mov
pop
mov
or
into
hlt
adc
add
cwtl
xchg
shl
cmpsl
aaa
xchg
hlt
insb
daa
mov
gs
xor
sub
js
out
lahf
pusha
pop
pop
push
adc
xlat
fcomi
push
dec
das
pusha
mov
imul
ljmp
rolb
fstpl
stc
xlat
lods
xor
jno
test
ror
rorl
pop
jmp
xchg
cld
sub
jle
mov
adc
mov
adc
ret
jle
sub
scas
fs
dec
xlat
les
or
aad
repz
adc
cs
xor
int3
jl
push
sub
jl
imul
pushf
addr16
cld
lods
pop
or
orl
mov
and
push
test
clc
test
fsubl
mov
subl
cltd
mov
test
jnp
xchg
rcrb
cmp
aas
sub
xchg
loopne
jg
xlat
aaa
out
push
adc
pop
push
loope
adc
mov
mov
lods
pop
je
and
adc
outsl
xor
mov
xchg
sub
xor
lret
jl
shlb
or
ret
sbb
test
adc
pop
loop
xchg
pop
inc
stos
xor
and
ds
add
cld
gs
xchg
popf
push
or
repz
pop
push
hlt
jecxz,pn
dec
push
pop
mov
mov
test
scas
cli
mov
mov
mov
mov
call
xor
repz
xchg
cmp
fistps
xor
outsl
push
push
jmp
loop
outsl
loop
pop
mov
and
push
and
and
dec
into
jle
adc
nop
push
mov
pushf
daa
cli
and
arpl
lods
push
mov
sub
dec
and
call
std
enter
mov
nop
cld
cltd
stos
mov
push
adc
stos
pop
mov
mov
nop
xor
inc
enter
lock
jl
and
cmp
das
sub
loope
xor
ficomps
xor
mov
inc
mov
pop
and
inc
out
jns
inc
loope
nop
icebp
inc
jl
or
cmp
not
enter
ss
sub
push
loope
stos
xor
cmp
mov
dec
mov
jmp
movsb
mov
cwtl
dec
stos
subb
and
pop
pop
ja
cmp
mov
rclb
testl
repnz
add
pause
cmp
fistps
adc
stc
mov
ljmp
mov
scas
push
imul
pushf
je
cwtl
sahf
cwtl
pop
in
arpl
or
cmp
adc
dec
add
insl
aam
movsb
inc
jp
ds
stc
lret
cld
loopne
arpl
cmp
cmpsl
or
xchg
arpl
icebp
mov
bound
pop
jp
push
sub
aas
pop
loopne
sub
dec
loop
mov
imul
fwait
mov
ja
lret
dec
xchg
cli
movsb
imul
aam
dec
xor
inc
xchg
mov
jns
mov
ljmp
fucomi
aas
push
in
outsb
adc
push
push
jne
sbb
divl
stos
or
pushf
sub
xorl
out
jnp
pop
xchg
dec
gs
rolb
xchg
inc
adc
pop
add
add
xor
lcall
fwait
add
sub
clc
xor
outsb
pop
mov
mov
xchg
stc
push
inc
mov
dec
repz
adc
call
leave
int
les
cmp
and
rclb
jle
jmp
ss
pop
nop
mov
jp
adc
sbb
mov
test
sub
push
movsl
ret
push
cmp
sbb
add
push
addr16
pop
or
mov
jo
clts
inc
nop
mov
mov
xor
jns
addr16
cmp
mov
jmp
rcll
aas
mov
lahf
les
in
mov
adc
push
pop
pop
jp
jl
add
jb
movsb
imul
jg
mov
mov
xchg
daa
mov
jb
jmp
fnstcw
mov
shl
jp
jnp
xor
sti
stc
test
icebp
sbb
cld
sahf
dec
push
inc
jecxz
jmp
nop
mov
imulb
xchg
aad
jo
xor
sub
add
pushf
mov
add
shlb
pop
cld
pusha
add
aam
sub
fadd
mov
mov
add
negb
out
mov
inc
xchg
sahf
sbb
xchg
inc
mov
jbe
dec
and
push
mov
push
jl
and
ficoms
pushf
inc
and
pop
std
loop
adc
jl
rcrb
jmp
sahf
inc
jg
push
into
sub
ds
xchg
inc
ljmp
std
xchg
pusha
mov
jae
fs
addr16
daa
inc
push
outsl
cmp
stos
sub
rcrl
pop
pop
pusha
jg
sahf
fsub
cmp
mov
or
mov
popa
push
insl
mov
mov
dec
sub
mov
fs
mov
movsb
or
mov
mov
inc
int
loope
repz
inc
loopne
or
ljmp
sbb
xor
fucomip
mov
sti
jnp
inc
jp
xchg
out
mov
xor
jae
jle
mov
rcl
adc
adc
bnd
pop
repz
mov
bnd
push
in
sbb
sbb
hlt
mov
jae
sbb
dec
push
aad
xor
jb
push
sub
or
xchg
ret
shrb
push
dec
stos
bnd
push
or
push
jo
dec
mov
sub
sub
cli
cmp
mov
xchg
pop
mov
pop
jmp
sub
leave
sbb
jnp
cmp
push
xlat
cmp
out
frstpm(287
fdivrl
aad
xchg
push
xorl
push
push
xchg
stc
pop
xchg
cmp
mov
imul
insb
imul
addl
insb
test
test
out
push
scas
nop
xchg
mov
adc
mov
mov
rorl
fdivs
jo
cmp
dec
movsl
ret
icebp
ret
inc
aam
add
aaa
insl
test
mov
into
xchg
popf
aad
in
add
jbe
jge
jbe
clc
dec
jo
mov
clc
into
mov
adc
ds
mov
or
mov
adc
and
ds
add
test
xchg
sahf
jp
bound
in
out
xchg
mov
in
clc
pop
adc
dec
std
xchg
dec
inc
popa
push
pop
mov
aaa
ljmp
jmp
or
outsb
mov
mov
hlt
insl
or
cmpl
in
dec
shll
mov
jmp
fwait
sub
sub
jmp
sti
pop
sub
dec
cmc
mov
sbb
sub
sbb
setp
jbe
cli
nop
fwait
fwait
inc
xor
out
aam
xchg
mov
clc
mov
mov
lods
xchg
aam
sbbb
test
hlt
mulb
in
push
insl
push
xlat
inc
mov
lret
lock
out
std
roll
push
cmpsb
je
jle
mov
or
sbb
mov
mov
sbb
xchg
xchg
lds
scas
inc
insl
push
in
and
adc
dec
jno
mov
mov
shll
lods
xor
in
test
cltd
and
cmp
lds
data16
pop
sbb
scas
cmp
leave
pop
inc
iret
in
cs
daa
pushf
and
cmp
out
fstpl
cmpsb
dec
cli
lea
rol
iret
sbb
cmc
pop
fsts
inc
cmp
popf
arpl
imul
jno
fsubr
xchg
mov
iret
mov
xchg
cmp
repz
pop
xchg
xchg
cmp
jmp
xchg
andl
frstor
popa
stc
lcall
xchg
xor
mov
pop
repnz
add
cmpsb
lods
inc
repz
lret
shlb
cwtl
add
mov
push
jp
rcr
cli
into
int
sahf
pop
test
hlt
repz
int
cmp
scas
clc
daa
dec
fstpt
mov
test
lret
in
xchg
pop
push
cmpsl
shlb
cmpsb
pop
mov
adc
lahf
daa
cmpsl
ss
dec
mov
mov
pop
add
xchg
push
ljmp
cltd
adc
push
xor
jl
cmp
outsl
cmp
data16
fadds
shlb
jmp
sub
pop
add
sbb
and
data16
inc
inc
es
and
scas
mov
dec
push
out
cmpsl
and
into
pusha
pop
jg
mov
jmp
loop
jnp
test
push
int
push
mov
add
xchg
xorl
das
icebp
mov
push
subb
xor
jnp
test
add
adc
push
sbb
rol
mov
shrb
cwtl
popa
xor
xchg
rolb
clc
or
mov
xor
and
inc
push
push
mov
sub
mov
dec
inc
mov
out
xor
mov
xor
enter
jbe
fcoml
stc
inc
cmp
dec
push
add
sbb
or
pop
cmpsl
rorb
repnz
hlt
mov
cs
inc
in
push
mov
mov
fld
pop
outsl
dec
jmp
mov
addr16
out
aam
mov
pop
pop
js
repnz
test
fists
icebp
jmp
push
sbb
pop
divl
push
sub
jle
xor
ret
ret
cltd
jb
fwait
bound
movsb
or
jle
xor
add
push
movsl
jnp
mov
or
push
inc
xchg
mov
repnz
sub
or
mov
or
sti
cmpsl
or
rcr
repnz
xor
lds
pop
xor
mov
scas
inc
mov
scas
jbe
xor
out
push
out
pop
jbe
sahf
fisttpl
xchg
movsb
in
cld
inc
repnz
mov
clc
mov
iret
inc
or
ds
sub
pusha
adc
ss
stos
es
mov
pop
arpl
test
jmp
push
pop
sbb
filds
mov
jns
dec
sbb
adc
outsl
leave
sbb
inc
sti
stos
or
sbb
dec
mov
and
sub
out
mov
out
icebp
and
in
lds
data16
cmp
cmp
pushl
jbe
pop
xchg
mov
push
clc
dec
bound
aam
scas
jb
das
jmp
shld
xchg
sbbl
cmp
sub
jbe
js
ljmp
jge
arpl
test
sarb
jecxz
xor
nop
mov
jnp
clc
jp
adc
je
int
cli
xchg
xchg
fistpll
fistpll
fdivr
scas
or
std
pop
push
fidivl
lods
aas
or
das
ret
nop
js
adc
sti
or
pop
testb
aad
mov
adc
daa
pop
cmp
dec
mov
dec
inc
add
shll
adc
pop
cmp
bound
xchg
lret
pop
popf
int3
fnstsw
test
and
push
bound
leave
in
ljmp
sbb
xorb
jbe
int
lret
mov
lods
push
mov
ss
xchg
mov
fcmovbe
outsl
movsl
push
mov
pop
xchg
or
mov
push
lock
fcmovnu
and
std
jae
outsb
jge
into
arpl
aaa
insb
cmp
and
lds
pop
jb
inc
jmp
movsb
ja
test
mov
call
mov
mov
pushf
sbb
xchg
mov
adc
dec
sbb
xor
bound
into
add
adc
pop
push
mov
lret
jno
data16
std
inc
xor
imul
sbb
das
add
arpl
adc
fisubrl
insb
and
inc
lods
jae
testb
xor
cltd
fcmovbe
leave
loop
pop
shll
pop
mov
jno
xor
nop
shlb
mov
xor
rclb
out
mov
hlt
sub
push
mov
xor
test
leave
scas
sbb
sbb
adc
pop
mov
mov
dec
test
adc
inc
jo
fidivs
pop
loope
addb
movsb
adc
inc
or
lock
jge
ret
mov
je
pushf
loop
cmc
sbb
or
jne
aad
adc
push
rep
xchg
loopne
movsl
and
cmp
aaa
pushl
iret
inc
inc
and
sub
shll
adc
repz
imul
or
inc
lea
xor
shll
movsl
mov
or
leave
shr
mov
ss
es
mov
cmp
js
cmp
cli
mov
ds
mov
sub
cmp
mov
jbe
sbb
movsb
xchg
mov
adc
mov
daa
imul
fcmove
fwait
sbb
cmp
jg
ljmp
addl
aas
in
shl
adc
std
push
int
xor
add
popl
enter
aas
xchg
or
aad
push
fsubrl
push
xor
fidivrs
mov
xor
push
js
out
pop
int
jbe
sub
test
sbb
jmp
jbe
jbe
mov
iret
pop
insb
push
push
fists
jmp
js
xchg
and
pop
jg
idivb
push
xchg
mov
jb
or
test
sti
jge
jle
imul
xchg
push
dec
cmpsl
loop
and
enter
mov
jg
dec
and
daa
lahf
lcall
stos
adc
aad
add
and
sahf
mov
mov
cmp
xchg
test
inc
mov
xor
std
sbb
bound
int3
dec
out
icebp
lea
jno
mov
ljmp
mov
adc
jb
or
mov
into
xor
insl
idivl
xlat
cmpsb
inc
iret
cli
or
xchg
push
ret
xor
ret
sub
outsb
pop
dec
loop
add
xchg
loopne
mov
outsl
fndisi(8087
jae
xlat
pop
push
adc
shr
add
loope
stc
or
inc
add
mov
test
std
pop
push
mov
insl
mov
dec
out
or
or
js
insl
or
mov
jb
push
pop
mov
xchg
pop
in
outsl
outsb
out
popf
cmp
cmp
adc
cltd
cmc
fldl
adc
roll
xor
test
loop
jo
pop
mov
ds
and
fadds
jb
mov
cld
add
or
fs
mov
imul
dec
rcl
pop
lcall
mov
xor
aam
sbb
mov
sahf
sbb
test
jns
pop
iret
call
mov
je
mov
lret
push
movsl
pusha
fisttpl
fwait
cmc
bnd
dec
icebp
lea
mov
lods
in
mov
icebp
and
in
rolb
inc
sbb
and
sbbl
jnp
inc
fmuls
jbe
ss
pop
mov
lock
inc
dec
xchg
dec
mov
out
hlt
cltd
test
mov
daa
pop
sbb
in
pop
ljmp
sbb
sbb
lret
test
pop
faddl
and
and
mov
cwtl
mov
xorb
pop
or
mov
jg
fiadds
das
in
ret
je
xchg
notl
lock
out
in
cs
mov
mov
dec
cltd
push
icebp
aas
jg
mov
sbb
jne
and
xor
sub
rdtsc
das
jbe
test
dec
jnp
xor
lahf
popf
int3
xor
int
lcall
addr16
push
aad
in
rol
sbb
xchg
adc
xacquire
lods
call
mov
out
lods
scas
push
push
loope
into
repnz
adc
dec
icebp
cmp
adc
or
push
pop
sbb
sahf
test
sbb
cltd
cmp
lea
xlat
jnp
out
mov
mov
jecxz
lea
dec
cmp
stc
jbe
in
into
rolb
popf
xor
xlat
inc
cltd
pusha
add
push
mov
out
adc
mov
stc
push
outsl
jge
mov
push
ret
xchg
push
sbb
scas
jmp
addr16
arpl
pop
mov
sub
es
scas
sub
jnp
aaa
sbb
sub
hlt
and
jno
dec
popa
lds
adc
push
notb
cmc
stos
push
adc
fisubs
mov
lds
and
xor
sbb
sub
fstpt
addr16
cmpsl
andl
fcomps
outsl
sbb
stos
dec
cs
mov
adc
nop
mov
mov
add
pop
clc
cs
jnp
mov
mov
sub
sbb
pusha
sbb
fwait
into
int
add
fsub
lods
cmc
jge
cmp
fisubl
mov
enter
aaa
sub
mov
xor
add
cwtl
movsb
mulb
fidivrs
jae
adc
pop
mov
dec
mov
dec
mov
mov
push
xor
sahf
sub
aaa
test
ret
mov
xchg
out
dec
in
pop
cmp
add
adc
mov
sbb
dec
fucomi
mov
movsl
lret
mov
jno
xchg
mov
adc
jge
loopne
cmp
je
jnp
mov
push
fstpl
jle
pop
pop
js
push
jnp
imul
sarb
ss
ror
push
push
bound
sahf
sti
sub
cmp
mov
jge
stc
insl
stos
adc
pop
mov
movsb
mov
outsb
dec
fadds
stos
inc
scas
add
scas
cwtl
ja
stc
pop
add
sbb
pop
push
lea
xchg
sub
lods
xchg
push
outsl
push
xchg
call
into
lret
xor
cs
and
inc
inc
mov
or
loopne
clc
jnp
jmp
stos
or
loope
in
ret
or
and
ret
pop
fwait
daa
sub
push
mov
pop
adc
nop
and
popa
or
fistl
pop
xchg
xchg
mov
xlat
adc
lds
in
sbb
push
cs
lcall
outsb
mov
inc
add
test
cmpsl
push
mov
cld
sti
jbe
sub
loop
xchg
sbb
inc
stc
iret
aas
stos
repnz
mov
adc
mov
cwtl
lds
push
aas
mov
lret
jmp
ret
dec
fistl
jmp
push
lods
xchg
inc
xchg
out
test
mov
dec
or
and
mov
fnstenv
jne
loopne
cmp
xchg
pop
scas
add
add
roll
lods
repnz
push
and
pusha
aam
adc
imulb
aam
xchg
sbb
lds
sbb
cwtl
mov
xorb
sbb
push
push
dec
jns
mov
in
mov
push
loopne
into
adc
push
adcl
insl
xchg
sub
mov
test
test
inc
ret
mov
jo
and
out
lods
or
ljmp
cli
mov
xchg
loope
insl
adc
mov
scas
xor
mov
in
inc
cwtl
cs
fxam
dec
sarb
cmp
mov
lret
shl
sti
test
gs
mov
xor
inc
fdiv
bound
push
aad
sub
and
pop
xchg
jmp
out
dec
mov
iret
pop
fcoml
sti
mov
jne
xchg
cmc
outsb
mov
mov
mov
nop
add
pop
imul
jnp
aas
jnp
mov
int3
sbb
mov
repnz
inc
cmp
enter
xor
push
jbe
cmp
add
lret
les
and
shl
cmp
and
lods
movsl
add
pop
pop
cmp
dec
outsl
idivl
and
cmc
xchg
repz
and
adc
inc
dec
inc
dec
daa
mov
in
lcall
pop
pop
repnz
cld
ja
jno
push
xchg
push
pop
mov
mov
sub
cld
int3
mov
into
jle
cmc
shlb
pop
das
cmp
jno
imul
adc
loope
push
icebp
push
test
clc
mov
popa
xchg
stos
int3
xchg
rcrl
dec
cltd
negb
and
popa
test
sahf
lret
or
ret
xor
mov
das
adc
fnsetpm(287
cli
xchg
jns
pusha
aam
pop
movsb
pop
cmc
jg
and
roll
sbb
movsl
or
mov
dec
mov
inc
add
adc
sarl
mov
pop
pushf
jae
stos
mov
stc
mov
mov
ret
sbb
lret
push
nop
pop
add
rcll
iret
fdivrp
adc
push
mov
lret
aas
bound
sahf
insl
faddl
outsl
fadds
cmp
insl
cmc
in
sahf
inc
adc
sub
lahf
adc
aaa
xor
xchg
add
pop
push
inc
mov
stos
fnstenv
push
add
jp
daa
push
push
mov
push
addb
jecxz
stos
je
dec
inc
push
repz
data16
cs
pop
or
inc
test
mov
cmp
ret
mov
mov
push
push
adc
stos
mov
dec
cli
call
push
jno
sub
sbb
push
testb
mov
pop
fs
bound
test
mov
movsb
pop
out
jo
adc
and
ret
jnp
sbb
int
lds
sub
test
loop
lods
dec
adc
sbb
outsb
pop
test
mov
sub
mov
inc
push
das
loope
loopne
xchg
inc
pop
cmpsl
xchg
pop
and
dec
push
iret
mov
push
cmp
push
push
push
inc
add
jb
shlb
push
pusha
add
jno,pt
ficoms
push
call
push
std
repz
jo
or
xchg
shrb
jg
mov
xchg
and
mov
sarb
cmp
ficoms
jb
xchg
pop
mov
cmc
mov
xor
push
push
sar
cli
mov
imul
add
shll
aaa
mov
outsl
push
add
xchg
sbb
cmp
inc
sbb
pop
enter
mov
dec
call
add
push
sbb
ja
jno
inc
jno
dec
pop
and
push
out
jnp
lcall
insl
lds
or
mov
jns
adc
push
mov
jb
jo
sbb
mov
xor
add
add
rorb
sbb
push
xlat
nop
mov
in
fildll
or
or
add
dec
or
mov
sub
add
negb
and
jmp
push
mov
sbb
divb
fcmovb
dec
mov
ds
mov
jo
xor
jecxz
lds
dec
xchg
in
inc
add
cmp
mov
dec
cmp
pop
dec
xlat
fsub
or
stos
orb
imul
add
xor
out
push
std
leave
aad
aaa
pop
and
lret
and
mov
mov
dec
push
lret
jl
xchg
les
add
jns
jns
stos
and
int3
push
imul
bound
popa
or
outsl
adc
pop
sbb
pop
and
sub
add
out
sbb
mov
test
std
xchg
mov
xchg
fcoml
add
xchg
mov
cld
inc
inc
sub
fidivs
pop
pop
cmp
lcall
stos
ja
imul
add
popf
mov
mov
test
loop
bound
ret
std
stos
loopne
out
cli
mov
pop
xchg
nop
adc
jb
push
std
mov
dec
inc
add
mov
push
jl
js
movsl
push
xchg
cmpsb
mov
mov
adc
adc
inc
adc
push
push
inc
pop
lret
or
jns
xchg
mov
mov
cmc
add
loop
push
or
std
shrb
scas
push
nop
jno
pop
jbe
cmp
icebp
sbb
jne
mov
ror
jae
pop
mov
pushf
jg
mov
adc
xor
push
out
cmc
subb
in
adc
xor
and
out
add
lret
jne
xor
mov
mov
mov
inc
rolb
fnstenv
sbb
pop
mov
adc
aad
mov
or
in
pop
jp
scas
pop
rcrb
out
pop
pop
add
pop
pushf
cmpsl
mov
orl
imulb
cmp
enter
and
mov
int
cmpsb
fs
jbe
dec
movsl
aad
adc
mov
add
dec
aad
cmp
je
sub
push
aad
in
fisubrs
fimull
dec
arpl
loopne
push
fdivrs
sub
fistpl
push
es
mov
fsubs
out
insb
push
mov
inc
out
or
mov
cmp
cmp
push
dec
lds
pop
sbb
jnp
mov
jno
int3
cmp
mov
aaa
in
mov
ss
pop
jg
in
xchg
in
mov
adc
dec
mov
out
cmp
mov
and
mov
fbstp
nop
push
pushf
mov
push
add
jne
addr16
aaa
mov
lock
cmc
pop
or
test
jg
pop
cmp
mov
xor
cmpsb
popf
jl
lods
fmul
pop
push
sub
clc
sbb
or
loopne
dec
mov
xchg
xor
mov
xorl
jnp
imul
ja
inc
subl
push
iret
push
and
imul
add
push
int3
xchg
mov
scas
int
dec
fwait
icebp
pop
lods
mov
sahf
push
repnz
mov
rcrb
adc
das
jo,pn
jecxz
jb
and
lahf
scas
out
scas
mov
sbb
andb
es
bound
notl
sbb
js
pop
adc
or
test
jp
lahf
or
pop
adc
push
mov
cwtl
out
mov
jbe
xchg
into
mov
jb
pusha
icebp
arpl
mov
inc
test
jle
stos
mov
int3
es
ljmpw
mov
fidivrs
xlat
jne
mov
xor
movsl
shl
cmp
pusha
xchg
xorb
dec
les
iret
aam
or
mov
cmp
psllq
nop
pushf
ljmp
pop
or
mov
iret
mov
cmp
ljmp
xlat
cmpsl
or
xor
fidivl
xchg
inc
in
jge
lret
enter
cmp
and
pop
or
add
daa
push
pop
fisubrl
imul
adc
mov
ret
xor
jle
push
and
jmp
int3
adc
add
mov
stos
in
add
test
mov
stos
push
dec
dec
pop
dec
fstpl
mov
cmp
std
jns
inc
cmpsl
insb
cmc
in
adc
int3
mov
fidivs
decb
cmc
sarl
fnsave
frstor
lock
pop
out
pop
xchg
cmp
cmp
js
ret
adc
lret
sub
adc
inc
es
sbb
pop
pop
push
and
gs
fiadds
bound
push
sarb
ljmp
cmp
and
adc
iret
ret
push
mov
or
push
adc
lock
lea
lcall
push
ljmp
mov
push
loop
cmp
repnz
xor
ss
inc
cs
mov
subb
xor
push
stos
fidivrs
xchg
fstps
push
iret
push
inc
jmp
mov
lahf
gs
outsb
das
inc
stc
icebp
mov
xlat
shl
lret
loopne
add
and
mov
mov
jbe
cwtl
add
mov
xor
stos
ss
into
sbb
push
clc
inc
jo
or
add
cwtl
jae
clc
lods
stos
xchg
negl
into
cmp
push
mov
cmp
dec
mov
add
xchg
in
jbe
into
movsb
lods
leave
mov
xchg
cmpsb
lods
mov
adc
adc
xor
fistps
ret
int
dec
ret
add
test
mov
sub
mov
adc
mov
pop
cmp
push
or
in
pop
stos
push
add
test
and
bound
add
rcr
std
fsub
shl
fidivrl
jp
xchg
add
or
in
neg
add
cld
js
mov
inc
pop
in
and
pop
movsl
in
xor
icebp
in
out
icebp
sbb
mov
pop
push
out
or
in
loop
imul
sbb
add
jbe
mov
js
jne
shrb
sar
out
mov
inc
add
add
pop
fs
rcr
xor
insl
test
or
push
jge
hlt
inc
punpcklbw
mull
ds
push
lods
sahf
mul
xor
add
push
mov
xchg
jp
sahf
mov
xor
xchg
fidivrl
inc
mov
mov
push
inc
cmp
divb
insb
adc
mov
adc
mov
ja
rcl
std
inc
fcompl
out
sbb
xchg
cmpsb
mov
lcall
mov
cmp
jno
loop
add
arpl
into
gs
push
and
call
cwtl
mov
sahf
jmp
sarb
fadds
orl
fidivrs
ffreep
fmul
jle
pop
mov
test
mov
xor
xor
lret
loop
loop
jo
decl
call
dec
add
in
sub
mov
lret
shr
mov
inc
mov
jnp
pop
and
movsb
insb
inc
lods
jbe
push
or
push
imull
inc
fstpl
stc
iret
stos
mov
inc
jo
or
mov
mov
mov
push
ljmp
insl
and
xchg
movsl
ffree
jns
andb
rcl
xor
xor
sbb
stos
push
jmp
adc
or
mov
inc
jmp
adc
out
out
loopne
jecxz
call
dec
xchg
int
clc
orb
lea
mov
in
push
xor
dec
imul
aad
maskmovq
test
test
mov
inc
mov
sub
nop
les
inc
mov
mov
xchg
add
jmp
icebp
orb
mov
sbb
xchg
pop
push
outsb
aam
ds
jg
out
xor
jnp
push
lea
lods
mov
fnstsw
add
jo
inc
sbb
inc
in
daa
mov
sub
rorl
test
repnz
pop
cmp
mov
dec
popf
mov
mov
inc
cld
mov
sub
mov
leave
jmp
sbb
ficompl
mov
dec
jne
sbb
sub
ljmp
daa
sub
mov
movb
adc
and
jne
lods
sub
add
test
shlb
inc
stc
adc
movsb
out
xor
adc
sub
and
data16
cmc
pavgb
stc
jae
adc
jmp
jg
rclb
lahf
cmp
add
mov
or
sbb
bound
mov
testb
dec
xchg
mov
mov
std
mov
jb
lret
pop
jae
lret
loopne
in
repnz
jae
add
mov
fisttpl
mov
sbb
xchg
dec
push
mov
push
fcoml
inc
or
dec
dec
dec
repnz
pop
imul
add
out
pop
add
pop
xor
jle
pop
int
sarl
insb
cs
dec
pop
inc
movsl
jnp
repnz
fimull
mov
cmp
dec
ss
xor
mov
cmp
mov
dec
ret
jae
inc
or
lods
lock
jg
jnp
mov
push
cmp
xchg
int
ret
mov
das
and
repz
lret
insb
in
adc
je
mov
dec
jp
into
rolb
leave
in
adc
pop
das
sahf
cwtl
loop
lret
pop
ret
das
pop
cmp
and
cmp
jp
mov
push
dec
mov
adc
adc
sbb
or
arpl
nop
les
ds
daa
mov
mov
mov
dec
in
or
fstpt
mov
lret
int3
lods
mov
pusha
cmp
jg
sahf
xchg
lcall
mov
mov
mov
sbb
test
je
in
imul
andl
pop
push
dec
rcrl
inc
dec
xor
push
insl
aaa
inc
popf
mov
sub
cmp
or
pusha
pop
sub
mov
outsb
jmp
pmuludq
clc
and
mov
test
push
inc
repz
es
dec
fmull
xchg
and
into
mov
and
mov
inc
psubusb
rclb
xorb
add
ds
inc
and
inc
adc
jp
and
mov
scas
pop
pop
es
js
push
loopne
mov
cmp
sbb
mov
dec
cmpsl
mov
in
mov
jl
mull
out
adc
jne
adc
sbb
sbb
dec
sahf
dec
and
add
cld
mov
xor
xor
aas
outsl
mov
lea
int3
mov
dec
mov
push
sbb
sbb
test
add
xchg
or
pop
and
pop
sbb
inc
mov
mov
leave
pop
popf
into
mov
mov
test
sub
and
push
shl
pop
pop
in
mov
jmp
push
push
mov
cmp
push
mov
hlt
xor
pop
fmull
mov
add
lods
into
jo
mov
and
fidivs
xor
jp
inc
pop
mov
xor
add
push
sub
jg
sub
xor
push
push
mov
add
in
and
pushf
adc
mov
xchg
add
ror
fs
xchg
out
jns
addr16
popf
iret
push
outsl
mov
pop
push
jp
xchg
clc
mov
mov
cmp
fisubrs
fs
lcall
fwait
jb
shrl
pusha
loop
dec
mov
xchg
xor
movl
scas
shll
jp
stos
aam
dec
repz
flds
jns
shrl
mov
inc
mov
dec
mov
or
jl
in
pop
cmp
je
add
mov
xorl
mov
push
into
xorb
filds
and
xchg
fmul
push
imulb
les
or
movsl
jmp
out
xchg
jno
neg
loope
inc
shrb
dec
xchg
push
push
inc
xor
mov
shrb
dec
push
jg
inc
cmp
sbb
insb
inc
push
and
add
jge
mov
pop
push
sahf
insb
cmp
push
dec
fdivr
mov
movsl
in
js
sub
xorb
mov
sbb
cmp
sbb
sub
int3
push
inc
mov
bound
mov
lahf
mov
cwtl
pop
cltd
and
ljmp
pop
arpl
xor
aas
andl
mov
dec
push
dec
push
lock
adc
xchg
xchg
mov
cmp
dec
xor
xchg
repnz
imul
test
pop
or
mov
inc
xchg
cmova
dec
jmp
cli
scas
xor
mov
cmp
push
cmpb
je
pop
mov
rcll
sar
or
stos
pushf
stos
int3
mov
je
dec
sub
xchg
xchg
orb
pusha
mov
jne
fs
icebp
gs
jg
frstor
dec
xchg
popa
repnz
xor
dec
sbb
lods
fisubrl
jecxz
sar
int
xchg
cld
fs
sub
sahf
aad
rcrb
lahf
and
outsb
mov
int3
fsts
jg
pop
pop
in
xchg
stos
or
push
loope
inc
movsb
cld
movsb
addl
dec
into
and
cmp
mov
cs
cmp
add
push
push
fidivrs
andl
add
repz
sahf
inc
lea
icebp
pushf
lds
adc
lods
push
or
icebp
out
pushf
mov
test
pop
loopw
cmpl
xchg
pop
inc
mov
jns
xlat
xchg
push
xor
sbb
jecxz
jge
imul
lret
movsb
or
push
fisubs
push
int
fs
movsl
pop
das
movsl
dec
mov
rcrl
xchg
adc
mov
je
fsub
insb
ljmp
inc
mov
mov
push
adc
fildl
push
insl
and
arpl
cmp
or
mov
or
lcall
push
icebp
mov
mov
mov
inc
push
sub
mov
mov
mov
in
aas
sub
adc
jge
in
gs
sub
cmp
fisttpl
mov
adc
movsb
sarb
jnp
ja
mov
add
add
popa
cmp
xor
mov
xor
pop
vprotb
gs
insl
hlt
xchg
pop
hlt
shll
std
dec
dec
cltd
dec
jp
mov
inc
mov
sbb
push
push
and
add
and
test
mov
movsb
sub
jae
enter
mov
into
jae
inc
repz
push
mov
loopne
lods
cltd
or
jne
xchg
xor
xchg
fldenv
pop
push
clc
dec
sbb
out
sbb
in
push
sub
or
aam
and
clc
inc
stos
fwait
test
std
sbb
mov
push
sub
mov
inc
adc
int3
add
ss
mov
ficomps
ss
test
xor
pop
cmp
mov
testb
or
mov
and
jl
clc
dec
pop
mov
sbb
mov
adc
inc
ffreep
addr16
push
mov
es
addl
out
sub
fs
mov
xor
je
pop
sbb
adc
movsb
pop
mov
iret
jp
sbb
inc
jmp
mov
cmp
sbb
jns
xor
inc
loope
jo
repnz
mov
imul
sti
iret
jp
xchg
push
mov
adc
and
mov
stos
popf
mov
cltd
adc
lret
xor
aaa
sbb
jmp
xor
loopne
add
shrb
aad
in
cmp
xchg
dec
xor
inc
and
or
jns
mov
ljmp
or
mov
xchg
xor
addr16
adc
adc
mov
shlb
int
or
push
mov
lcall
pop
mov
sub
push
jmp
add
js
dec
cltd
jbe
mov
bound
mov
mov
rcl
repnz
push
jle
dec
cmp
out
cmp
mov
xchg
cmp
dec
ds
shlb
gs
test
orb
and
movsb
fsubs
xor
lea
inc
ljmp
in
int3
mov
fimull
fbstp
movsl
loopne
sub
ret
and
lret
cltd
inc
pop
inc
lds
inc
dec
lds
lods
mov
mov
inc
sbb
cmp
rcll
loop
jno
dec
sub
jbe
mov
jbe
out
cmp
sub
adc
cwtl
jne
icebp
fisubl
push
add
add
fxch
or
neg
int3
sbb
push
and
mov
xor
orb
xor
push
adc
dec
xchg
pop
push
lock
out
sbb
jmp
int3
int3
jno
jne
adc
sti
fwait
mov
es
rorb
or
es
inc
out
jmp
adc
out
addl
add
dec
inc
imul
xor
or
es
adc
jp
repnz
add
cmp
mov
cld
rcrl
leave
push
add
jnp
shrl
data16
loopne
jl
les
fildll
into
ret
ret
adc
int3
js
pop
mov
cwtl
loopne
push
fldenv
push
jb
call
icebp
lods
xchg
loopne
fcoms
mov
shr
jnp
roll
pop
lock
adc
movsl
aad
pop
mov
pop
cltd
jl
or
push
test
fldt
or
push
jp
lahf
xlat
insl
jp
xchg
adc
push
mov
lcall
xor
xchg
pop
pusha
push
cmp
roll
add
hlt
test
xor
out
ror
and
lret
in
leave
int3
mov
xchg
add
sbb
lret
mov
aas
sub
sub
and
jbe
fwait
add
inc
imul
fisubs
outsb
lods
fdivrl
mov
xlat
xor
ja
repz
in
add
cmp
sahf
jp
mov
movsl
out
mov
movsl
ficomps
sub
inc
xor
or
dec
and
mov
cmp
into
mov
cmpsb
xchg
push
pop
movl
inc
xchg
enter
pop
cmp
movsb
sahf
jno
ja
push
or
dec
cld
int
lahf
adc
pop
out
mov
push
sti
inc
and
pop
add
test
mov
adc
xor
loop
push
mov
or
filds
jecxz
stos
and
cs
jle
and
inc
mov
ljmp
mov
mov
xchg
and
ss
dec
out
push
or
xorl
sbbb
lods
fists
jge
push
test
or
ss
shll
pop
adc
test
in
sbb
movsb
adc
int3
outsl
andb
xor
jo
call
clc
stos
les
ds
push
xor
fnsave
cmpsb
jg
mov
andl
repnz
xor
push
into
std
std
std
xchg
inc
lods
mov
out
jb
jns
mov
int3
popa
ficompl
out
aaa
push
popa
pop
dec
mov
dec
pop
and
cs
jns
xchg
into
divl
ficompl
sahf
adc
loope
sub
loope
mul
cmp
xchg
add
cltd
cmc
and
repnz
loopne
inc
sub
insb
les
push
add
stos
in
inc
stos
fwait
leave
scas
xchg
jns
cld
aas
rol
mov
cmp
or
aam
jecxz
arpl
add
out
movsl
xor
add
add
pop
outsl
jo
mov
push
icebp
loope
inc
xlat
pop
lods
sub
pop
fisubrl
mov
sub
cld
jbe
jbe
cmp
shlb
insl
ljmp
mov
and
jns
xor
adc
popa
mov
xchg
ret
jecxz
xchg
clc
ret
in
ljmp
loop
movsb
inc
xchg
nop
in
jmp
sbb
xchg
pop
test
sbb
daa
mov
js
adc
jnp
push
xchg
mov
insb
pop
outsb
aaa
stc
push
insl
cmpsl
lea
shr
mov
mov
divl
fsubrl
sub
adc
sub
hlt
xor
pop
jg
push
xchg
mov
sbb
fiaddl
stos
push
in
sti
loopne
inc
xchg
out
dec
leave
push
push
or
fdivl
mov
into
pop
dec
mov
pop
jns
in
insb
test
not
aam
cld
push
idivb
jge
shrb
es
xor
inc
lahf
repnz
ret
arpl
fcmovbe
add
xlat
fadds
push
push
pop
cmp
mov
xchg
out
pop
sbb
sbb
add
data16
add
jge
adc
cmp
or
pop
cld
out
xor
into
addr16
repz
xchg
pop
push
xor
pop
mov
pop
inc
sbbb
mov
cld
add
ror
rcll
xor
aas
jecxz
lea
mov
xchg
lock
adc
inc
icebp
mov
dec
imul
pop
inc
int
subl
cmp
push
cltd
nop
lea
sbb
or
cmp
mov
mov
in
fsubl
add
ja
bound
popa
add
jmp
fwait
mov
push
xchg
add
lea
adc
sarb
inc
inc
add
xchg
inc
xchg
cmp
mov
in
jbe
fs
sbb
movsl
xlat
fwait
mov
lods
scas
inc
dec
rcrl
ljmp
mov
jl
sbb
aas
das
jo
xlat
pusha
sbb
out
xor
test
popf
push
mov
jne
pop
popf
cwtl
sub
xor
dec
adc
ret
mov
lcall
mov
push
stos
icebp
imul
sub
enter
scas
loop
call
push
inc
xchg
add
inc
arpl
jno
mov
div
inc
add
add
dec
popf
lds
out
inc
or
or
inc
lods
imul
pop
add
jne
push
movb
mov
mov
xchg
xchg
jl
xor
sbb
jne
stos
mov
pop
dec
mov
xchg
outsb
cmp
xchg
adc
add
pusha
lcall
popa
repz
adc
or
push
sub
lret
adc
int3
dec
mov
jnp
mov
gs
mov
aas
jmp
pop
push
sub
jno
xchg
scas
subl
xor
mov
cmp
data16
pop
jl
fsubrl
cmpb
fists
lods
mov
shr
push
cli
jbe
js
filds
leave
fwait
cli
int
xor
and
xchg
enter
out
push
inc
fwait
sahf
push
dec
negb
mov
sarl
mov
stos
mov
aaa
add
mov
frstor
adc
xchg
leave
lahf
imul
xchg
imul
pop
hlt
repz
push
mov
es
addb
mov
jns
mov
lret
arpl
int3
cmp
mov
or
aaa
cmp
mov
fs
aas
fwait
leave
jle
mov
orb
or
shr
pop
cmp
xchg
lods
loopne
xlat
push
sbb
inc
out
pusha
fbstp
jns
add
rcll
add
xchg
and
jo
gs
arpl
add
test
pop
lea
popf
jne
mov
ret
xor
xchg
push
sub
jbe
jb
xchg
inc
adc
add
stos
add
pop
lea
mov
fidivs
lods
push
push
sub
jbe
push
inc
jb
cld
sbbl
aaa
je
and
mov
inc
scas
fs
ja
pop
xor
shl
loope
and
add
in
xchg
out
add
test
jecxz
and
sbb
inc
lret
ret
push
fwait
pop
push
in
insl
dec
enter
pop
js
add
mov
mov
push
mov
xor
int3
jl
leave
repnz
js
jbe
push
sub
inc
repz
lock
pop
pop
lret
jmp
out
icebp
pushf
add
add
loope
hlt
sbb
cmpsl
popf
arpl
lock
xor
mov
iret
fsub
dec
into
ficomps
push
rorl
sti
cmpsb
in
insl
or
and
jb
ret
cmc
subl
sti
imul
mov
scas
sub
push
xor
ret
cld
xor
fisubs
scas
sarb
outsl
imul
or
mov
add
int
jne
jae
loop,pn
cmpb
mov
lahf
mov
rcl
out
mov
loopne
outsl
lret
and
mov
fcoml
arpl
jl
or
sbb
lret
dec
pop
cwtl
jl
insl
push
sub
adc
aad
sub
sub
adc
xchg
and
mov
into
orl
xor
fcoml
and
or
shl
pushf
xchg
frstor
ficomps
adc
jbe
lock
das
jno
and
push
div
sbb
stos
inc
or
fiaddl
sbb
aaa
sbb
jo
in
pop
es
stos
loope
xor
ja
xor
jle
adcb
stos
js
cvtps2pd
dec
adc
loopne
push
dec
sub
loop
stos
pop
jg
fisubrl
xchg
js
adc
das
cmp
stc
jl
lds
mov
xchg
cwtl
mov
iret
add
repnz
lret
mov
adc
jbe
ror
sub
dec
jge
jbe
popa
push
and
cs
je
movsb
in
adcb
push
mov
cld
lret
push
fsubs
cmp
adc
push
les
sarb
mov
sbb
jg
loop
aaa
mov
test
enter
in
js
mov
test
cltd
cmp
movsb
hlt
insb
inc
bnd
jl
pop
pop
push
fsts
lret
scas
es
inc
hlt
inc
pop
clc
xor
icebp
pushf
mov
mov
cmp
add
dec
lret
rcl
and
jnp
sub
fisttpll
sub
inc
xchg
xchg
call
inc
cmp
fidivl
mov
repnz
es
aaa
pop
or
arpl
xor
xlat
or
mov
pop
enter
cmpsb
pop
and
insb
mov
xchg
sarb
cmpsb
fs
cmp
les
cltd
cwtl
xchg
pop
jle
jnp
xchg
cmp
bound
pop
test
js
sarb
and
add
push
pushf
mov
lods
test
xchg
lahf
xchg
mov
shrl
test
mov
pop
mov
sarl
mov
lahf
xchg
sub
mov
gs
mov
sub
sbb
call
push
cwtl
xchg
inc
adc
push
adc
and
jl
mov
pop
cmp
icebp
loope
mov
jne
fwait
pusha
in
mov
pushl
adc
adc
inc
push
hlt
mov
enter
and
stos
jecxz
pop
psrlq
add
sub
jo
cmovge
mov
inc
push
xorl
push
jmp
stos
mov
mov
cmp
mov
xor
movsl
popa
or
jl
mov
mov
and
add
cltd
cli
and
or
mov
sbb
ret
sbb
jp
cmp
out
cld
arpl
fdivr
sbb
adc
mov
int3
aad
in
add
lods
nop
mov
mov
add
in
insl
mov
stos
je
lret
out
sub
inc
arpl
mov
or
and
push
sahf
dec
jg
aam
pop
or
insb
lods
imul
loopne
std
adc
mov
ret
sub
in
insl
testb
jl
dec
gs
in
or
mov
ret
repnz
xchg
leave
test
insb
shll
or
mov
mov
mov
mov
pop
pop
mov
and
movsb
add
and
in
clc
ja
cmpb
repz
movl
call
add
mov
gs
roll
jo
xor
lret
dec
push
inc
iret
fildl
stos
add
cwtl
jecxz
push
push
dec
xchg
cmc
mov
cmpb
add
dec
adc
cs
ficoml
incl
ja
lret
and
sti
or
popf
jmp
add
jne
dec
or
pop
xlat
addr16
dec
xchg
and
dec
test
clc
cmp
stos
add
insl
lret
cmp
inc
lock
leave
sub
lahf
jo
popa
lock
or
or
enter
aaa
push
lret
cmc
jbe
lahf
shrb
cmp
xor
push
out
pop
daa
jnp
or
scas
or
add
push
mov
jae
xor
dec
mov
add
lret
int3
or
push
jae
pop
push
push
mov
test
sub
xor
mov
outsl
mov
or
fwait
inc
pop
mov
data16
sub
in
dec
sub
iret
add
jmp
inc
hlt
or
insb
mov
stos
sub
hlt
imul
adc
int
jb
bound
popa
imull
add
fbld
ss
inc
mov
lret
sbb
push
nop
ds
out
int
shl
xor
outsb
mov
stos
shr
cmp
insb
lock
mov
std
sbb
jmp
sbb
lea
inc
cmp
scas
pop
les
xor
dec
dec
imul
mov
jne
mov
mov
addr16
pop
pop
inc
into
or
insb
fsubl
jae
push
nopl
xor
push
adc
ljmp
push
sbb
push
mov
inc
pop
and
dec
incb
cmp
test
push
insl
mov
mov
ds
lret
cmp
pop
jb
mov
pop
int
mov
mov
pop
in
aaa
loop
jg
inc
jno
test
mov
dec
dec
adc
push
cld
xor
sub
mov
fidivrs
hlt
sbb
mov
inc
aaa
push
jle
mov
xor
cmc
lcall
pop
repz
ss
imul
cmp
data16
mov
aas
mov
cmpl
into
in
sbb
fisubl
out
xorb
push
orl
mov
mull
add
push
std
add
stos
push
jbe
jecxz
sbb
test
jb
loope
push
push
lods
cmp
bound
sub
idivb
push
ds
js
ss
dec
xchg
dec
mov
icebp
pop
inc
test
cmp
lret
cmp
insb
xchg
fcoms
inc
call
xlat
scas
jbe
inc
dec
adc
jb
mov
inc
xchg
out
mov
inc
loopne
out
rcr
add
into
cmpsl
push
or
pop
mov
test
sub
pop
int3
addr16
cmp
pop
mov
mov
inc
in
cltd
ret
pushf
mov
mov
mov
int3
aaa
xchg
cmp
or
jbe
scas
insb
inc
inc
xchg
push
lock
xchg
out
dec
cltd
clc
and
jb
cwtl
cltd
std
pushf
ljmp
adc
or
std
ret
mov
or
mov
push
mov
je
xor
pop
sti
add
mov
lahf
pop
enter
add
shll
lcall
orb
cmp
sub
roll
mov
dec
sub
mov
add
std
insw
ds
scas
and
test
les
add
lcall
decl
xor
shll
test
push
or
add
or
repz
mov
xchg
int
inc
sbb
ljmp
arpl
mov
mov
jne
repz
shrl
popf
lds
sbb
push
imul
xor
mov
xor
test
xchg
fadd
add
hlt
bnd
and
sbb
sub
mov
cmc
mulb
mov
in
pushl
insl
lcall
repz
mov
lret
das
mov
sub
fs
out
movsl
and
push
imul
push
call
dec
sbb
jo
lds
mov
sub
xchg
cmp
notb
cld
out
xor
xchg
inc
xchg
xor
aad
fucomip
aaa
mov
jnp
test
push
xchg
ss
xchg
leave
adc
dec
stc
jge
and
mov
jg
and
mov
movsb
add
pop
cmp
pop
dec
jae
jne
mov
pushf
sbb
arpl
and
pushf
aam
fcomps
lret
test
xor
call
xchg
jge
lret
sbb
and
insb
xor
xchg
push
fwait
cmpsl
or
cs
sti
cld
imul
jl
xchg
loop
js
inc
out
fimull
in
sbb
xchg
repnz
incb
adc
or
mov
cmp
sub
pop
bound
stos
cltd
cmp
or
xor
stc
push
adc
and
inc
mov
lds
mov
and
jle
fcomps
xor
mov
jbe
jb
mov
sub
mov
repnz
outsl
sub
or
in
push
in
js
call
pop
cltd
cmp
orl
ljmp
xor
sarl
jle
sbb
xchg
test
shl
add
aaa
and
mov
daa
or
enter
pop
loop
dec
ja
push
mov
mov
leave
adc
ret
inc
andl
jb
mov
aad
mov
xchg
fcoms
cwtl
mov
jne
mov
les
ret
sahf
xchg
clc
gs
adc
hlt
jmp
in
decl
lcall
cltd
cmpsl
rorl
roll
xchg
in
jne
push
and
cld
mov
jg
xor
pop
push
push
in
and
cmpsb
ss
scas
mov
fimuls
adc
pop
subl
test
mov
sbb
lds
fbld
and
aas
in
sub
mov
fisubrl
movb
push
pop
rclb
fcomps
pop
lock
add
pop
sti
daa
mov
movb
mov
aaa
mov
mov
cld
push
add
push
add
filds
push
cmpb
divb
cmp
mov
push
movsl
or
cmp
xchg
mov
jl
xchg
cmp
mov
mov
imul
mov
sbb
xchg
mov
push
sbb
jns
nop
sti
adc
cltd
es
gs
fisttpll
sbb
lock
outsb
int3
rclb
gs
icebp
pop
add
mov
pusha
jmp
leave
jb
stc
movsl
mov
sarl
or
sub
mov
mov
push
push
scas
mov
mov
lret
enter
arpl
je
test
xor
sarb
pop
mov
out
popf
inc
mov
inc
js
cmpsl
sub
cmp
arpl
xchg
or
aad
adc
push
inc
sbb
pop
add
cmpsl
xchg
aad
pop
pop
add
sbb
ja
test
push
mov
outsb
adc
dec
aas
add
jecxz
iret
imul
adc
fbstp
pop
imul
lock
xchg
fbld
arpl
pusha
in
xor
frstor
or
mov
scas
mov
adc
lods
arpl
or
mov
dec
mov
mov
push
cltd
lcall
cli
and
repz
std
xchg
int
lea
outsb
ret
or
add
ds
movsb
incl
fsubl
sbb
ja
das
or
add
jl
loope
sbb
imul
add
out
mov
sub
jns
filds
aam
iret
sti
mov
push
dec
jecxz
xchg
sarb
mov
mov
stc
inc
daa
xor
ja
ljmp
mov
mov
push
mov
adc
or
fidivs
or
neg
or
test
arpl
cld
dec
lods
pop
mov
push
lock
fildll
pop
insb
int
mov
leave
insb
pop
cltd
out
sub
mov
clc
sub
mov
xor
cmp
xor
xor
push
mov
idivl
inc
and
scas
jecxz
xchg
xchg
cmp
iret
les
bound
mov
inc
std
iret
xchg
movsb
pop
dec
scas
jle
xor
insl
add
or
fwait
dec
mov
movsl
stos
or
mov
fsubs
mov
in
sub
loopne
xorl
mov
or
cmp
clc
or
fidivrs
cmp
cli
adc
mov
jns
xchg
cmpsl
bound
xchg
cmp
fidivs
fisubl
cmp
mov
mov
lcall
cld
fstpl
adc
xor
pushf
mov
std
ret
fwait
inc
lds
into
push
lret
lds
xor
xor
mov
mov
ljmp
int3
adc
int
mov
sub
push
mov
repnz
std
pop
jmp
jno
jae
lret
int
mov
lea
insl
and
popa
test
pop
pusha
bnd
popa
gs
push
inc
xchg
js
in
mov
dec
aad
jp
je
pop
movsb
jo
sahf
loope
push
cmp
cmpsb
fsubrl
fimull
cmp
ret
repnz
aas
leave
mov
bound
rorb
fisubrl
xchg
faddp
fsub
inc
fnstsw
inc
cmp
sub
dec
daa
and
mov
mov
mov
jmp
sub
cld
push
dec
mov
in
fidivrs
sub
xchg
or
add
sbb
movl
and
ret
out
jo
jg
outsb
fdiv
jb
push
lds
outsb
jmp
jl
gs
call
outsb
xchg
adc
pop
mov
or
inc
dec
lods
push
arpl
pop
jno
leave
push
inc
pop
mov
mov
popa
and
push
fnstenv
gs
pop
es
aad
cltd
sbb
fcoml
mov
mov
sahf
inc
pop
inc
inc
daa
mov
neg
ljmp
in
mov
dec
ljmp
jbe
les
repnz
ret
test
push
cmp
adc
cmpsb
sbb
mov
sbb
inc
clc
stc
repz
adc
xor
xlat
lea
enter
aam
or
imul
daa
scas
fisubrs
popf
notb
scas
adc
sub
push
jle
mov
or
stos
mov
push
sbbl
mov
mov
popl
inc
ljmp
loop
lret
int3
fs
lahf
testb
daa
fsubrs
or
inc
in
rcr
repz
push
push
xchg
sub
adc
sub
sbb
pop
jecxz
ss
in
aam
sbbl
push
push
outsl
shrb
cmpsb
cmp
push
je
fisttps
loope
inc
repz
bound
pop
addr16
jl
and
nop
mov
push
int3
out
adc
cmp
sub
sarb
fidivrl
pop
xor
imul
inc
sbbl
and
inc
xor
cwtl
jg
dec
movsl
or
cmp
mov
mov
or
inc
dec
cmp
lea
push
and
fildl
push
int
push
inc
hlt
roll
xlat
and
pushf
mov
inc
mov
jne
jne
aam
and
mov
int3
cs
aam
mov
imul
adc
out
in
mov
jle
lahf
push
pmullw
ljmp
or
sub
leave
les
repz
enter
sub
pop
xlat
mov
subb
inc
mov
sbb
out
push
pop
xor
xchg
notl
jno
cmc
add
pushf
push
adc
inc
jge
gs
add
sub
shll
inc
mov
mov
pop
xor
sub
mov
xchg
mov
sub
adc
out
dec
jbe
scas
or
das
cs
jmp
mov
insb
stos
adc
sub
inc
cmp
testb
dec
hlt
add
xchg
push
insb
mov
cmp
data16
orb
xor
ss
mov
xchg
dec
jp
xor
adc
or
mov
out
jp
cltd
loopne
push
std
scas
mov
shll
ljmp
mov
xlat
cmp
pushf
pop
out
aam
xchg
out
ds
cmp
mov
faddp
dec
pop
cmp
dec
cs
cli
xchg
sub
sbb
pop
sub
xorb
pop
jnp
pop
mov
pop
sarl
ret
aaa
sbb
push
cmpsl
xlat
movsb
mov
loope
les
jns
and
add
adc
pop
setle
cmp
arpl
rcll
mov
lahf
sbb
imul
call
out
idivb
hlt
in
dec
cmp
arpl
and
in
pop
jno
cmp
mov
popa
dec
push
outsb
xchg
loope
add
adc
stos
pop
dec
inc
pushf
hlt
xchg
add
bound
fsubrs
pop
cwtl
std
xchg
pop
stc
cmp
and
mov
jp
imul
inc
dec
pop
es
iret
inc
mov
push
cmpsl
xorb
cmp
mov
cmp
outsb
mov
stos
imul
cmpsl
add
cld
outsb
into
mov
adc
xchg
jbe
inc
out
fldcw
push
push
cs
xchg
dec
in
and
jno
shrl
pop
imul
xchg
sub
or
into
fcmovnu
test
lahf
and
fldenv
lahf
inc
push
out
xchg
fisttps
pop
fisttpll
adc
jl
sub
or
pushf
xchg
mov
gs
test
aaa
sub
sbb
or
nop
je
orb
cmp
insb
pop
out
xor
mov
and
mov
mov
leave
iret
dec
pop
repnz
jno
mov
ret
test
fsts
aas
inc
push
or
push
dec
rclb
push
daa
xor
and
lcall
push
cmp
mov
out
lcall
xacquire
adc
sbb
fldcw
les
data16
dec
xchg
gs
pop
pop
sbb
lret
roll
sbb
add
mov
dec
mov
inc
mov
pop
cwtl
and
test
mov
push
lahf
mov
fnstcw
jne
push
decl
jo
ret
mov
pop
xor
and
push
cmp
mov
test
sbb
mov
cmp
fcmovnb
mov
pop
add
sbb
out
into
sarb
push
dec
lret
gs
cmp
jle
shll
and
xchg
mov
dec
shll
mov
mov
sbb
mov
mov
daa
jbe
mov
fists
mov
xchg
jb
or
nop
aaa
fwait
or
movsw
lcall
mull
pop
fiadds
add
fucom
or
lds
dec
adc
or
jns
loopne
and
xchg
std
dec
adcl
cmp
inc
popf
and
pop
add
in
cmp
fwait
sbb
inc
mov
add
ret
cltd
mov
xchg
das
lods
or
scas
mov
sbb
adc
cs
popa
mov
int3
lret
outsb
xchg
mov
push
xchg
js
ret
call
push
lcall
xchg
adcl
push
mov
aaa
fiadds
pop
push
into
movsl
mov
sub
incl
xchg
int
dec
sub
or
add
mov
cmp
inc
cld
inc
cmp
sbb
aas
fnstsw
pop
lds
sub
movsb
mov
repnz
in
pusha
insl
lret
jne
adc
pop
leave
fsts
es
int3
jecxz
es
pop
sub
sub
mov
dec
dec
and
fnstcw
imul
jns
pop
sbb
mov
int3
aas
inc
push
out
cs
mov
mov
xlat
out
adc
inc
and
xchg
mov
and
and
test
and
xor
mov
jno
dec
mov
test
xchg
cmp
push
sbbl
popf
inc
cmpsb
shll
lret
pushf
fldt
cwtl
cli
mov
mov
push
sbb
out
pop
mov
xor
and
test
inc
lods
xlat
cltd
aam
mov
pop
and
fsubrl
lods
push
stos
call
sbb
enter
fidivrl
xchg
mov
scas
repz
leave
dec
rorb
mov
push
repz
and
xchg
div
repnz
push
cs
pop
dec
add
in
mov
sbb
jnp
fstpt
mov
dec
xor
add
filds
pop
push
adc
sbb
mov
outsb
push
mov
mov
in
movsl
icebp
repnz
les
das
jge
cltd
rcll
test
out
int3
stos
pop
cld
push
jne
mov
pusha
into
data16
xchg
addr16
jmp
pop
dec
mov
add
or
dec
inc
test
mov
cld
out
xor
call
push
lds
mov
pop
ret
mov
mov
inc
pusha
fs
pop
adc
sbb
or
aaa
mov
rcrl
jecxz
xchg
jge
testl
imul
mov
dec
out
jle
test
in
pop
mov
jnp
sbb
pushl
orb
jp
mov
jae
out
mov
cwtl
inc
pop
outsl
jb
dec
dec
sahf
fdivrl
loopne
fadds
pop
mov
pop
inc
repz
xlat
and
in
sbb
or
or
xchg
add
out
jge
lea
dec
fwait
loope
aaa
inc
mov
sub
mov
icebp
mov
fcomp
lea
fnstsw
insl
sbb
mov
jge
adc
cld
mov
ja
or
pop
mov
sbb
jl
add
xor
inc
cmp
cltd
pop
adc
sub
sbb
cwtl
aad
jb
jmp
push
fimull
data16
popf
add
into
mov
lods
inc
pop
jge
das
or
cmc
add
js
jb
stos
push
mov
clc
push
xchg
or
cmp
push
adc
hlt
lahf
enter
xchg
call
stos
inc
mov
dec
aas
sub
mov
mov
cmp
repnz
sbb
dec
mov
mov
sub
dec
loop
push
cmpb
mov
mov
mov
and
shlb
sti
dec
adc
test
and
bound
cmp
shl
rorl
push
cmp
aam
andl
dec
pop
and
fdivrs
ja
cli
xor
daa
mov
sahf
aam
fisubl
and
mov
in
xor
cmp
mov
xchg
xor
mov
sub
mov
int3
jecxz
in
repz
scas
subl
cmp
sub
js
inc
movsb
xor
jg
mov
shlb
mov
scas
sub
cli
sbb
add
in
mov
jp
sbb
cmpsb
push
dec
sub
dec
sub
nop
xor
sub
cs
push
pop
add
mov
lcall
mov
dec
sarb
cmovns
add
std
std
loopne
push
cmpsb
jecxz
mov
loope
insb
cmp
xchg
inc
mov
mov
ror
xchg
and
or
push
mov
shlb
push
push
inc
pop
push
pop
jmp
adc
mov
jge
push
fwait
pop
cli
daa
aas
test
mov
test
mov
dec
in
mul
or
js
inc
shll
in
sub
mov
imul
push
push
and
cmp
jle
pop
fcompl
sbb
xlat
sti
lods
aas
cmp
push
cmpsl
mov
cltd
and
test
cmp
pop
inc
es
cmp
stos
cmp
scas
sub
sbb
mov
mov
push
scas
mov
sub
inc
cmp
mov
adc
xorl
cmp
mov
pop
imulb
sahf
mov
push
scas
xchg
stos
in
inc
cmp
mov
inc
add
mov
lods
fwait
sbb
lock
pop
ja
test
cli
pop
shll
dec
in
idivl
lods
sahf
int
ret
scas
fildl
cmp
js
mov
push
push
push
push
xchg
lds
int
push
xchg
jl
adc
movsl
mov
test
pop
imul
cmp
call
and
adc
or
sahf
push
mov
mov
ffree
fmuls
sub
mov
cmp
rclb
pop
mov
gs
jecxz
out
cltd
xchg
mov
inc
push
incl
pop
cmc
push
adc
sub
or
inc
push
and
jb
loop
andl
jno
pop
in
lods
hlt
xor
das
mov
or
test
lret
fidivrs
mov
dec
jge
js
jg
pop
leave
ljmp
cmp
mov
adc
repz
inc
bound
sbb
inc
out
scas
std
imul
dec
test
loope
push
inc
aad
mov
ret
repz
dec
jp
lds
out
lds
jl
push
movsb
je
pushl
ret
es
lahf
pop
cmpsl
or
cmpsl
jne
imul
rcl
mov
scas
inc
push
test
sub
cmp
pop
sarb
or
jp
inc
and
mov
inc
shlb
loopne
ljmp
pop
dec
cwtl
js
mov
jmp
or
push
lock
mov
sahf
adc
sbb
rcl
mov
jb
cltd
loope
insl
sahf
sti
push
or
fisubrs
add
int3
xor
popf
rorb
mov
loope
or
jecxz
in
adc
sub
pop
subl
xorb
push
test
test
jbe
lahf
mov
pop
stos
sbb
repz
shlb
in
stos
inc
xchg
mov
sub
mov
and
or
jno
daa
repz
mov
jbe
push
xchg
cmp
repz
cmpl
iret
inc
test
pop
pushf
inc
fdivr
jo
std
lods
leave
cltd
dec
fisubrl
jl
pop
mov
mov
dec
sub
incb
sarb
fst
sbbl
int
push
adc
sbb
daa
mov
out
dec
jns
dec
sbb
lods
xchg
lret
mov
mov
adc
lock
sbb
test
inc
cli
ds
insl
loop
notl
in
or
xchg
ret
ljmp
add
mov
lds
pusha
jae
or
and
shr
adc
stos
lret
sahf
outsb
sub
cmp
ja
xor
data16
jnp
mov
iret
sbb
fucomp
leave
pop
add
mov
daa
scas
jne
pop
xor
pushf
jo
sbb
fcmovnb
aad
lret
push
push
add
stc
sbb
negl
mov
idivl
mov
mov
jne
mov
xchg
dec
cmp
dec
fcoms
add
lahf
imul
in
hlt
lcall
push
cmp
lods
jmp
stos
lods
repz
sti
mov
in
aaa
xor
mov
sbb
push
into
outsb
push
in
das
arpl
iret
or
and
out
shll
fidivrs
sbb
call
stos
aad
negl
fsubp
pop
jg
mov
inc
xor
gs
xchg
je
pushf
push
je
dec
mov
xchg
je
and
movsb
cmpsl
push
negl
sbb
mov
in
lods
lods
nop
stos
fisttps
dec
push
jo
stos
daa
or
cmp
sahf
sub
pop
pop
jmp
imul
push
ret
popf
cmp
xchg
mov
loope
out
xlat
mov
cmp
mov
jp
aaa
adc
xor
dec
es
jp
pop
out
xchg
dec
sbb
inc
and
push
pop
mov
je
mov
push
out
insl
mov
inc
pop
xchg
adc
pushf
lahf
icebp
inc
xchg
cltd
lds
filds
pop
in
stos
jmp
push
sbb
push
and
and
pusha
aaa
cmpsl
mov
mov
mov
jge
jecxz
xor
lret
sti
aaa
rclb
sub
lods
mov
mov
pop
sub
std
pop
push
sub
outsl
scas
mov
popa
aas
insb
cmp
rolb
push
out
sub
mov
push
popf
pop
mov
pusha
out
or
xchg
xchg
pop
or
cld
cmp
mov
xorl
adc
jae
out
cmp
adc
and
loope
hlt
mov
inc
mov
mov
xor
insb
enter
out
std
pop
xlat
dec
stc
clc
pop
xor
xchg
loop
inc
mov
cmp
cmp
jae
in
inc
xchg
dec
cmp
jle
jl
negl
cmp
cmc
adc
pop
jp
or
cmp
lcall
je
pop
mov
popf
aad
pop
andl
cwtl
mov
or
out
pop
sti
dec
stos
adc
or
lea
mov
push
adc
push
aaa
push
and
push
and
cmpsb
inc
faddl
dec
xchg
fcmovnbe
mov
push
dec
pushf
cld
mov
inc
das
push
addr16
mov
xor
pop
out
hlt
ss
jp
test
jl
call
lcall
pop
pop
cmp
orl
inc
dec
pop
adc
mov
dec
popl
iret
lret
dec
adc
in
xchg
lahf
mov
xchg
inc
cmc
les
and
xchg
and
jle
mov
and
mov
iret
pop
and
dec
cmc
pop
out
out
bnd
stos
test
sbb
aas
push
rcl
or
mov
adc
xchg
mov
cmp
add
xchg
shl
div
es
add
mov
mov
imull
shrl
mov
mov
adc
jmp
xor
cmp
leave
pop
push
stc
shlb
dec
sahf
lcall
cmovge
icebp
in
outsl
scas
adc
push
in
inc
ds
mov
jne
cmp
jge
mov
call
inc
or
push
jge
nop
inc
jg
adc
addl
mov
mov
push
out
xchg
push
dec
clc
ret
jns
stos
sbb
push
mov
enter
insl
not
xchg
sub
inc
inc
sub
fwait
stos
dec
jae
stc
xor
push
and
dec
sub
sbb
dec
and
movb
pop
outsb
mov
jb
fsubr
leave
shlb
push
movhps
pop
sbb
out
jp
or
gs
xchg
xchg
mov
xchg
sbb
cs
mul
sbb
sub
inc
imul
xor
xchg
sbb
pop
adc
icebp
clc
into
xchg
fwait
test
loopne
test
mov
jle
xchg
out
kortestw
inc
shrl
pop
mov
sbb
jecxz
mul
push
imulb
negb
sarb
lret
lahf
out
xchg
mov
adc
ljmp
mov
lds
outsl
mov
adc
push
call
lcall
lret
mov
movsb
popa
outsb
push
mov
push
xchg
stc
leave
push
shll
mov
or
int
cmp
decl
iret
in
gs
in
out
mov
clc
mov
rcll
arpl
mov
fdivrl
push
and
mov
mov
adc
fxam
enter
xchg
mov
xchg
jb
jnp
adc
pop
push
and
loopne
or
nop
ljmp
aad
push
mov
dec
inc
mov
sub
aaa
scas
pop
adc
dec
lods
add
roll
and
movsb
and
pop
or
mov
pop
lods
out
hlt
ret
mov
pop
sarb
loope
xor
push
cltd
inc
stos
cltd
mov
dec
fbstp
cmp
cmpsl
mov
les
cmp
dec
repnz
jae
cmp
arpl
pop
rorb
imul
mov
ja
sti
pop
je
xchg
adc
cwtl
and
xchg
mov
shll
and
lcall
inc
add
das
popf
xor
shll
outsl
xor
stos
and
mov
or
pop
mov
xchg
lods
es
fucomi
push
in
test
adc
in
mov
pusha
stc
fisubs
in
adc
pop
xchg
push
addb
repz
pop
sub
adc
xor
fcoms
xchg
dec
mov
addl
add
fisttpll
scas
sub
dec
pop
adc
cmp
sub
jns
cmpsl
mov
pop
lds
push
pmaxub
jecxz
lods
mov
mov
loop
inc
aam
shr
push
das
mov
push
ljmp
jnp
dec
decb
and
aad
fdivrl
enter
aaa
jbe
cmpsb
gs
test
loopne
fcoms
push
sbb
into
out
cmp
jns
push
sbb
pushf
dec
fisttpl
add
je
dec
mov
and
jno
test
movsl
xchg
lods
rcrl
inc
rcrb
adc
faddl
fisubrl
sub
ljmp
es
outsb
lcall
adc
sub
cmc
mov
in
pop
sarl
inc
pop
lret
bound
fmul
mov
inc
adc
cli
push
jle
mov
shlb
pop
push
and
mov
push
mov
loop
and
dec
cmpsb
or
push
aas
xchg
stos
in
outsb
sarl
sub
aas
inc
in
sbb
int3
sahf
add
pop
outsb
fwait
xor
aad
or
shr
lret
mov
test
nop
pop
dec
mov
jge
insl
pop
cmp
into
mov
dec
shrb
pop
jne
pop
cmovae
xchg
test
mov
pop
lds
push
sbb
test
iret
jmp
push
mov
and
xchg
push
mov
inc
xchg
loope
mov
mov
or
fs
inc
frstor
popf
aam
dec
call
xor
in
lds
lahf
mov
sub
iret
cmp
jmp
es
mov
outsb
mov
dec
jmp
mov
pop
mov
and
and
inc
js
inc
xchg
push
mov
and
mov
cs
pushf
inc
jmp
jge
mov
dec
mov
xor
push
inc
int
cmp
cmp
adc
mov
fiadds
pop
push
cmpsb
cmp
shlx
repnz
mov
in
sub
sub
cmp
in
cmp
pop
in
cld
push
aam
and
cmpl
xchg
sbb
sub
mov
fcomps
sub
inc
xchg
call
sub
jp
jne
fisubl
xor
sbb
clc
add
call
xchg
jmp
ret
movsl
jmp
imul
es
outsl
dec
ret
ja
fstps
andb
mov
cmpsl
push
xor
or
pushf
sub
dec
lret
scas
into
enter
test
jns
or
push
hlt
lock
mov
dec
ret
pusha
mov
xor
inc
es
pop
stos
fnstsw
bnd
mov
ljmp
ds
xor
int
enter
test
jns
js
subl
cmpsb
loope
dec
adc
push
mov
or
icebp
shlb
call
sar
nop
jg
pop
jnp
mov
rorb
add
repz
and
dec
xor
xor
pop
subb
mov
out
inc
mov
in
shl
pop
cmp
out
out
loope
or
rcrl
cmp
je
jb
daa
inc
inc
xor
and
andl
adc
xor
push
mov
cwtl
adc
stos
xchg
addr16
dec
insb
fidivl
dec
aas
pusha
mov
imul
jo
adc
mov
lret
sbb
xor
or
dec
fsts
xor
mov
mov
cmp
and
mov
movsb
insb
xchg
or
das
leave
subl
or
leave
sahf
fstpl
imul
cmp
mov
cmp
jmp
and
repz
imul
and
xchg
lahf
sbb
and
mov
data16
mov
dec
sbb
outsb
shll
or
nopl
je
inc
bound
mov
insl
push
shlb
repnz
and
or
adc
mov
pop
add
pop
out
ljmp
cld
leave
jno
mov
cmc
dec
adc
hlt
scas
imul
into
xorl
pop
sub
lods
jmp
jo
mov
call
fstpl
nop
mov
icebp
pop
aam
leave
mov
xor
sub
pop
fildl
jp
adc
cli
stc
ja
lds
inc
lds
imul
inc
push
cmpsl
mov
mov
shlb
add
popa
dec
or
jecxz
lds
aas
lods
push
outsb
pop
or
mov
daa
jmp
sub
xchg
fwait
lret
adc
int3
cwtl
push
and
and
mov
mov
jp
jmp
push
sub
fldl
xor
mov
test
mov
repnz
testl
pop
into
insb
mov
adc
sbb
leave
gs
xchg
mov
rcrl
inc
inc
mov
shr
movsb
insb
mov
jl
test
ret
outsb
in
fmull
test
movsb
push
bnd
sub
push
sti
ja
jae
mov
pop
push
adc
mov
dec
stc
dec
sbb
xor
sub
lcall
add
clc
mov
adcb
leave
js
jne
jecxz
out
insl
jne
or
adc
je
jg
jp
cmp
shl
cmp
xlat
adc
push
stc
jge
sarl
push
repnz
lds
dec
repz
xlat
xor
add
shlb
les
mov
inc
ja
jge
pop
fildl
dec
test
ljmp
icebp
pop
rep
inc
call
into
xor
add
fldenv
xchg
adc
xor
add
or
jb
leave
fstl
inc
push
daa
mov
xchg
call
notl
sbb
push
fstl
cmc
test
rcrl
mov
fs
add
daa
scas
adc
and
cld
mov
movl
mov
sbb
jb
sbb
js
int
cmp
inc
cs
lods
add
jae
adc
dec
jle
daa
cmp
shll
adc
add
loope
stc
lcall
mov
movsb
loopne
es
lret
push
shrl
ds
jmp
dec
scas
sub
xchg
inc
cmp
cmp
sti
icebp
or
jmp
add
lcall
bound
in
gs
xor
sbb
insl
xchg
fdivrp
frstor
xchg
imul
pushf
sub
hlt
cli
clc
lea
mulb
subb
inc
fcoms
xor
cmp
mov
lock
fstl
xchg
sti
jbe
es
pop
xchg
mov
jecxz
dec
push
xchg
hlt
mov
int
xchg
inc
stos
cwtl
mov
jle
loope
pusha
dec
leave
loop
jno
pop
mov
dec
xor
or
lcall
sbb
mov
orl
scas
cld
jecxz
cmpsl
cmp
arpl
sbb
aad
iret
bound
shrl
sbb
and
jecxz
dec
jge
std
bound
sub
sbb
jp
mov
cmp
pop
out
iret
dec
iret
ret
sbb
movsl
or
mov
scas
ret
sbb
inc
add
inc
mov
add
jg
lock
mov
iret
fdivrs
or
int3
mov
jge
mov
add
mov
jmp
dec
xchg
mov
cmp
aaa
pop
jb
outsl
sti
add
mov
xor
fs
sub
loopne
out
fdivl
std
sarl
push
jb
lock
sub
pusha
lcall
ljmp
aaa
ss
dec
sahf
pop
jno,pn
xchg
cmp
lret
jle
jle
mov
adc
sbb
dec
pop
imul
mov
addl
movsl
lcall
outsb
pop
pushf
pop
cmp
mov
fld
addr16
jno
cmp
popf
dec
xor
mov
in
repnz
ret
cwtl
ja
sti
popf
mov
in
dec
xlat
and
jge
xchg
and
sub
xor
aas
aad
mov
jmp
fisubrs
mov
stc
push
ds
dec
mov
sbb
add
xlat
fnsave
add
xor
xchg
xor
imul
adc
push
mov
and
gs
lods
or
nop
adc
call
movsl
xchg
popf
sub
mov
pop
inc
iret
inc
nop
pop
gs
fs
mov
push
inc
push
popf
shlb
inc
ljmp
dec
or
pop
in
push
push
leave
ret
adc
mov
push
loopne
cmp
imul
loop
jo
das
mov
mov
imul
inc
shrl
add
aaa
orb
lret
stc
cld
loop
and
push
xchg
pop
push
sti
push
shll
xchg
cmpsl
cmp
add
loope
mov
movsl
in
pop
inc
jmp
and
enter
stos
mov
cmp
icebp
cwtl
dec
sub
into
dec
sbb
dec
mov
cmp
push
sbb
mov
add
push
in
mov
xor
add
mov
loopne
pushf
or
loop
mov
ffree
lods
daa
pushf
bound
pop
push
and
sahf
rcrb
dec
inc
das
xor
cmp
decl
sub
je
or
test
jb
insl
xchg
pop
pop
shrl
cmpsl
icebp
mov
mov
mov
mov
mov
or
pop
out
inc
cmp
inc
mov
mov
aam
jns
pop
push
aam
mov
cld
or
cmp
test
sbb
mul
rcrb
jecxz
sbb
mov
jmp
xchg
cmp
mov
and
dec
or
pop
lahf
addl
dec
shll
pop
sub
cmp
xchg
inc
sti
cld
mov
mov
test
mov
sti
das
dec
insb
xchg
inc
adc
ss
jle
jae
mov
movswl
jne
in
pop
jecxz
xlat
and
adcl
mov
push
pop
fisttpll
mov
and
out
int3
lret
scas
add
sub
cmpsl
cmc
xor
test
jge
mov
inc
inc
fwait
mov
lahf
adc
jb
test
push
push
ljmp
or
dec
repz
push
mov
fwait
jle
sarl
pop
popa
mov
inc
sbb
mov
mov
sahf
fwait
and
mov
andb
stos
adc
jae
push
sbb
pop
add
cmp
push
cmc
mov
decb
ljmp
and
fdivs
push
and
xchg
sarl
int3
cmc
je
or
aaa
and
mov
addb
sub
xchg
cmpsb
ret
pushf
jae
sti
cmp
add
or
inc
jmp
inc
ja
cmp
mov
or
ret
or
jnp
pop
lcallw
and
xor
cmpsl
lods
imul
subb
mov
adc
mov
rorl
insb
fnstsw
out
lods
sub
fnstenv
adc
add
outsb
lods
dec
in
sbb
push
out
rorb
cmpsb
jae
sbb
jb
scas
xchg
out
jno
xchg
pop
cltd
adc
pushf
inc
fstp
mov
dec
push
sbb
in
stos
cli
xchg
xchg
xor
add
cmpxchg
out
mov
inc
shrb
and
push
stos
aad
lock
sub
jbe
popa
add
pushf
add
xchg
jmp
xchg
fiadds
scas
loopne,pt
mov
in
or
hlt
mov
cmp
dec
xchg
fs
jle
out
dec
and
jns
ss
sub
inc
inc
pop
xchg
xchg
push
das
enter
lods
test
arpl
push
pop
fimuls
shrb
push
int
mov
sar
mov
out
addr16
test
xchg
sbb
push
cmp
std
insl
mov
les
or
insl
mov
dec
inc
cmc
push
sbb
idivl
inc
leave
xchg
sbb
nop
add
bound
pop
xchg
sbb
ret
inc
dec
xor
xchg
sbb
fnsave
add
repz
loopne
loope
popa
fs
aam
dec
add
mov
pop
fcom
jmp
add
sahf
clc
mov
nop
jae
movsl
das
popa
or
adc
rcll
mov
std
sub
and
fcompl
xchg
cmp
mov
cld
dec
inc
les
cwtl
inc
in
lahf
and
jbe
sbbb
mov
mov
xchg
int
mov
mov
inc
or
lahf
or
dec
cmp
loopne
add
mov
sub
adc
inc
push
mov
push
xor
mov
nop
or
and
cmp
or
pop
int
lea
add
pusha
sbb
pop
orb
dec
adc
mov
pushf
ret
inc
out
lock
stos
in
push
cld
pop
repz
sbb
jno
or
dec
pop
cmp
decb
lods
shrb
sbb
push
pop
cmp
sahf
test
inc
mov
and
inc
sbb
pop
popa
andb
sbb
xor
or
cmp
ss
enter
inc
xchg
jle
inc
addr16
icebp
dec
adc
and
jo
test
pushf
sub
mov
xchg
data16
mov
or
rclb
ss
into
arpl
fsubl
push
cmp
jmp
jp
jb
hlt
sbb
ret
mov
pushf
cmp
push
shr
or
clc
sub
pop
sub
aaa
or
outsl
push
lods
mov
xor
test
pushf
es
bound
mov
pop
xor
addr16
repnz
out
shll
xor
or
push
or
into
cwtl
vunpckhpd
fidivl
push
mov
adc
sub
stc
jmp
cmpl
sarb
sub
xchg
movsl
nop
outsl
movsl
movl
or
add
addr16
shll
inc
arpl
push
addr16
arpl
add
push
adc
negl
fsts
and
push
ja
out
cld
dec
pop
jno
stc
orl
mov
mov
pop
les
fwait
cmc
pop
push
xchg
xor
push
imul
ror
or
xchg
lock
or
out
enter
mov
ret
shlb
mov
aad
sbb
and
sbb
loopne
pop
loopne
lods
xchg
mov
sbb
mov
mov
xlat
ljmp
dec
or
mov
mov
loopne
leave
or
fwait
xor
xchg
cmp
testb
sub
add
ss
add
xchg
fstl
cmp
dec
imul
lea
sub
add
aad
sbb
or
sti
pushf
jmp
or
adc
fdivs
cmpsb
pusha
jg
sbb
sub
xchg
pop
xor
arpl
bound
mov
pop
xor
sub
adc
jne
sbb
jecxz
int3
test
ja
sub
icebp
inc
push
jno
sbbb
repz
jp
fistps
add
sbb
aas
aad
test
mov
shr
sti
sub
inc
adc
cmp
dec
insb
js
btcl
es
fildl
dec
call
adc
inc
push
push
nop
and
fdiv
add
sti
mov
jne
xchg
add
cmpsl
rcll
xchg
movsl
adc
stos
mov
jns
cmp
ljmp
push
push
push
subl
mov
loopne
adc
jno
sbb
clc
das
mov
pop
rcrb
mov
rcll
in
and
mov
lods
xchg
sar
int3
mov
adc
cmp
shrl
arpl
sub
mov
icebp
out
jge
cmpsl
pop
cs
and
sub
dec
popa
daa
xchg
into
lfence
cs
jecxz
out
movsb
push
jp
push
ret
nop
lock
cmp
fimull
xor
fcmovnu
sbb
jnp
cmp
jmp
cmc
mov
push
sbb
adc
decl
ret
imul
mov
shr
ret
and
sbb
gs
movsb
sarl
cld
lret
pusha
dec
mov
dec
xor
mov
scas
inc
mov
and
pop
pop
xchg
or
jno
sbb
dec
xor
ljmp
pop
and
xchg
loopne
iret
mov
push
adc
dec
in
xchg
lahf
mov
adc
in
lods
pusha
outsl
mov
fmull
lods
ljmp
jb
aaa
dec
inc
push
sub
jge
stos
and
inc
test
nop
cmp
push
and
fwait
dec
shll
ljmp
cmp
in
adc
push
ficompl
rcrl
jecxz
jecxz
push
mov
fs
jle
cld
jne
jge
mov
or
fildl
subb
pop
mov
fbld
cmc
dec
loopne
xchg
cmp
sbb
outsl
scas
imul
out
test
imul
cs
mov
ret
sub
jno
mov
sarl
jnp
mov
lret
rorb
fcmovne
inc
bnd
jne
int3
lret
adc
repnz
add
lods
es
xchg
aas
and
xor
outsb
mov
mov
and
je
sbb
mov
or
dec
push
add
and
and
and
bound
xlat
lret
pop
mov
xchg
inc
xchg
pop
or
xchg
fistps
mov
rol
int3
bound
adc
add
iret
dec
js
ds
ret
or
add
nop
retw
jae
fcoms
pop
ret
push
aaa
orb
loope
lds
or
loope
or
int
loopne
lret
je
pop
out
lcall
xchg
repz
push
sbb
push
push
imul
cmpsb
and
int
scas
sbbb
mov
imul
js
fwait
jae
les
data16
imul
adc
fimuls
negl
mov
mov
ss
and
fwait
xor
mov
mov
dec
ret
jb
in
in
mov
jge
or
cltd
jl
icebp
adc
xchg
push
mov
push
jp
jbe
fs
scas
stc
xor
sbb
addl
lods
inc
test
aas
or
fisttpl
xchg
out
das
inc
inc
aas
mov
hlt
shrl
ror
enter
add
sub
push
std
out
pop
jns
loope
push
je
jns
enter
je
xchg
ljmp
insb
testb
out
int3
cmpl
dec
jmp
cmpsl
ja
shr
jbe
mov
les
stos
ljmp
xchg
and
sub
mov
mov
fstps
sahf
outsl
jle
adcb
xor
fstpl
call
lods
cwtl
inc
pop
or
scas
in
and
mov
inc
sub
inc
loopne
sahf
pop
xchg
aaa
or
aad
loopne
mov
mov
movlps
cmpsl
and
mov
or
test
mov
cmp
lcall
test
stos
mov
push
outsb
out
ja
jmp
and
jg
sub
mov
inc
mov
adc
inc
int
jl
inc
xor
push
lods
je
divb
lret
mov
xchg
adc
popf
jmp
into
jne
es
dec
jmp
or
jg
push
cmpsb
adc
pop
push
add
mov
pop
stos
jae
mov
fwait
xchg
pop
push
pop
outsl
add
dec
pop
adc
lock
lret
mov
xchg
pop
ss
jo
clc
mov
xor
cmp
out
mov
mov
arpl
pop
out
add
dec
add
les
out
adc
data16
mov
mov
or
repz
shr
in
xchg
ret
pop
cld
aam
aam
ss
sub
mov
sbb
inc
or
dec
cltd
mov
mov
and
jae
andl
lret
stos
sbb
rol
gs
xchg
div
inc
into
xchg
sbbb
dec
xor
add
dec
roll
and
fstps
repz
dec
xor
pop
scas
cmp
inc
cmp
jge
out
jbe
mov
gs
mov
bound
insl
decl
add
cld
inc
fcompl
sahf
call
iret
clc
flds
out
cs
mov
and
push
push
adc
cmp
nop
mov
outsb
adc
mov
mov
jo
sub
out
ret
adc
mov
xor
loope
insl
mov
mov
mov
push
xor
lods
ljmp
data16
mov
enter
ret
inc
mov
lods
mov
cmp
in
aas
rcr
adc
xor
push
mov
pop
jg
adc
dec
pusha
xchg
add
xchg
sub
rol
out
aam
pop
jecxz
mov
sbb
sub
iret
test
lds
stc
lods
mov
in
inc
pop
notb
cmp
push
mov
dec
jl
cmpsb
scas
add
outsb
pop
mov
outsl
test
test
mov
mov
jg
jnp
repnz
dec
xchg
mov
mov
jl
shlb
ja
repz
fnstsw
cli
and
js
add
mov
adc
adc
sbb
fwait
pop
push
pop
out
in
imul
rcll
mov
fwait
push
add
mov
lret
pusha
cli
push
and
pop
lea
rcl
mov
inc
in
cmp
xor
and
adc
shrl
push
shl
or
add
movsb
xchg
sarb
aad
xor
pop
jbe
int3
out
pop
movsl
jo
shl
into
enter
fwait
jbe
les
outsb
shl
cmpsl
jmp
sti
xchg
ljmp
out
in
in
fsub
or
cmp
mov
je
xchg
aad
test
pushf
add
push
inc
sub
ret
aas
xor
pop
imul
sbb
in
cwtl
mov
rcrl
xchg
fldl
push
ds
notb
cmp
pop
jb
gs
xchg
add
movsl
mov
dec
lea
lods
jnp
xor
or
adc
sahf
mov
inc
and
xchg
and
cmp
pop
ret
mov
push
push
cmp
addr16
out
scas
addl
lcall
mov
call
pop
out
insb
mov
fs
mov
xchg
leave
jle
ret
xor
insl
js
movsl
sub
xchg
lret
mov
inc
push
ja
outsl
out
syscall
stos
cmp
sahf
dec
mov
cmp
scas
mov
scas
xchg
xor
or
popf
xchg
cli
pop
cs
data16
in
inc
or
pop
cmp
mov
sbb
cld
fisttpl
mov
cwtl
fcmovu
mov
clc
ret
jmp
xchg
dec
lock
popa
stos
mov
cmp
sahf
pop
adc
call
mov
mov
xor
lcall
popl
adc
lcall
push
mov
frstor
in
scas
and
popf
xchg
out
pop
ss
fildll
adc
leave
mov
lcall
out
aad
xlat
test
movups
pop
push
lcall
enter
mov
data16
and
pop
sub
cmp
aas
jne
arpl
add
mov
in
imul
jmp
fldenv
adc
das
cmp
into
adc
out
call
ret
adc
mov
mov
xor
jo
jns
sbbl
adc
mov
jge
sub
xor
addb
push
fsubr
fiadds
jae
xor
scas
dec
cmpsb
stos
jb
call
adc
mov
xchg
mov
mov
add
inc
div
ss
dec
push
inc
insl
lea
mov
test
ror
lfs
aam
mov
jne
or
cmp
jle
dec
call
lods
dec
rorl
or
in
pop
sbb
push
movsb
stos
test
fcmovnbe
mov
push
sti
enter
pause
outsb
dec
cmp
pop
fwait
pop
push
aad
adc
repnz
ljmp
dec
mov
movsl
mov
addr16
push
sub
cmp
mov
pop
repnz
pop
in
sbb
in
push
pop
jns
divb
out
imul
scas
push
out
and
sarb
shl
popf
jb
in
and
add
cld
leave
pop
mov
cltd
push
inc
les
subb
jp
enter
xor
mov
in
mov
xor
sub
repnz
ja
add
jp
into
test
inc
xor
ret
cmp
inc
fstpt
pop
aas
inc
data16
mov
push
lods
pushl
mov
arpl
sahf
out
fldenv
in
add
dec
jbe
push
add
and
xor
mov
lods
popa
les
iret
jb
jg
ret
cmp
add
xor
movsb
xor
push
aad
lds
stc
insb
sub
sbb
pop
mov
iret
out
jo
or
loope
pop
add
mov
shl
inc
mov
sub
out
mov
scas
into
test
adc
xchg
mov
lods
lods
jno
data16
xor
scas
mov
insb
test
ret
sub
test
jge
jg
bound
mov
cmp
je
outsb
mov
jae
ja
test
out
and
cmp
addl
mov
jno
filds
jg
sub
fstl
mov
cld
call
adc
nop
inc
mov
jb
rolb
not
sti
jge
inc
sub
adc
and
xchg
mov
dec
xchg
jle
inc
in
cmp
xchg
cli
jecxz
xchg
leave
icebp
jnp
mov
bound
aas
es
dec
test
aaa
mov
sbb
push
or
clc
push
cs
adc
sahf
repnz
cmp
cld
roll
xlat
jecxz
xchg
lods
addr16
mov
xor
cwtl
jecxz
dec
fnstsw
xor
and
push
pop
jg
cmpl
add
lret
sbb
fadds
and
xchg
stos
movsb
add
jbe
pop
push
pop
stc
mov
adc
or
outsl
cmp
out
inc
push
mov
test
cmp
lods
movmskps
aas
je
sbb
push
movsb
push
iret
dec
ds
and
sub
jns
and
imul
inc
icebp
sub
enter
cmp
ja
sub
lock
and
insb
inc
mov
mov
jae
leave
mov
icebp
loope
movsb
jae
pop
je
test
adc
mov
adc
pop
shrl
cmc
xor
int
loopne
stc
ret
push
lcall
inc
jne
jb
cmpsl
adc
dec
imul
in
inc
clc
fwait
int
mov
pop
mov
cmpsl
xor
cwtl
iret
push
ja
scas
repz
neg
out
popa
cltd
stc
popa
out
xor
push
fdivrp
and
cld
imul
add
fisttpll
xor
arpl
rcrl
ret
jne
mov
testb
scas
fistpl
jns
shll
mov
push
add
adc
xor
repnz
dec
test
loope
fwait
and
mov
sub
inc
outsb
sti
divl
aad
idivb
xchg
out
sbb
mov
fwait
and
sbb
inc
shll
je
leave
push
daa
push
cmp
and
insl
adc
das
cli
cmp
xor
xor
into
mov
xchg
mov
cmpsl
pop
push
les
pop
inc
cmp
sarb
lret
jo
pop
cwtl
ret
out
inc
sti
mov
sbb
popf
cmpsb
decb
aad
movsb
dec
and
cmc
shll
xor
xor
pushf
mov
inc
hlt
in
aas
pop
pop
shrl
mov
dec
fdivl
mov
xlat
add
ret
dec
pop
rcrl
clc
mov
nopl
jno
inc
push
fistpll
sbb
dec
xchg
idiv
cltd
adc
aaa
mov
lock
andl
sub
pop
fcoml
gs
add
inc
fmuls
pop
aad
ficoms
cmp
mov
fistpl
pop
loopne
enter
push
pop
inc
lahf
mov
mov
jno
inc
iret
jecxz
enter
lods
xor
dec
pop
stos
jae
adc
mov
shlb
sbb
cmpsb
pop
test
lock
mov
dec
test
fcomp
mov
jns
mov
das
aas
jl
aaa
inc
dec
je
lcall
lea
pop
jb
xchg
das
xlat
sar
or
pop
xor
cmpsl
adc
or
loope
gs
stos
cwtl
pop
cmp
sub
sbb
push
mov
xchg
mov
jns
sbbl
out
icebp
adc
mov
data16
sbb
stos
push
leave
movsl
and
pop
pop
scas
push
dec
shrb
sar
movb
fcomp
pop
lods
dec
cmpsl
data16
sub
lret
popa
or
inc
and
sbb
out
mov
imul
adc
sbb
and
jmp
dec
outsl
popf
out
rcr
out
stos
xor
je
adc
mov
ret
addr16
sti
adcb
in
inc
cmp
pop
or
pusha
cltd
jle
insl
pop
out
push
jle
jae
push
xor
jo
daa
leave
mov
adc
adc
mov
ja
insl
sti
xor
dec
jne
push
push
lcall
pop
mov
repz
repz
lahf
xchg
inc
lret
inc
cmp
out
xlat
gs
lods
insl
lcall
mov
or
jecxz
mov
repz
test
ret
push
mov
les
xor
cmp
rolb
out
orl
rolb
mov
add
xchg
jnp
adc
std
fldenv
jne
sub
pusha
or
mov
xchg
enter
cld
fldl
or
push
xor
adc
and
pusha
mov
mov
sub
cmp
arpl
mov
adc
sbb
mov
dec
in
xor
lret
mov
in
ja
arpl
ja
pop
cmpsb
push
shl
cmp
xchg
xchg
dec
xor
ja
pop
sbb
mov
imul
pop
out
xchg
stos
test
mov
addr16
test
aad
aam
in
call
test
std
mov
push
jl
mov
and
xchg
xor
les
pop
pop
movsb
cmp
adc
ja
orb
pop
mov
iret
movsl
pop
dec
xchg
fmull
cmp
scas
fisubrl
loop
stos
mov
setno
mov
jae
add
out
xor
sub
xchg
mov
push
mov
pop
test
dec
lods
mov
rcrl
movsl
sbb
jns
paddd
mov
lock
fwait
stos
popa
jb
fwait
inc
dec
add
lcall
jne
rolb
int
mov
fwait
repnz
mov
and
je
fldenv
into
inc
and
into
mov
xor
sbb
ljmp
adc
pop
sbb
shl
addl
mov
bound
sub
adc
sahf
push
in
mov
inc
jb
push
pop
mov
add
call
sbb
hlt
dec
mov
sub
sbbb
bound
mov
outsb
and
inc
mov
dec
cmpsl
dec
sub
push
stos
test
idivb
popf
jg
and
and
mov
loop
sti
loope
jp,pt
es
cs
enter
in
std
outsb
pop
imul
cmp
rol
xor
fnstcw
sahf
insb
imul
in
shrb
push
mov
add
ficomps
and
mov
fwait
add
or
imul
mov
cltd
and
icebp
mov
dec
int3
push
addl
dec
and
or
lret
push
dec
and
push
bswap
popa
repz
fcompl
xchg
adc
into
cs
into
or
insb
sub
jecxz
push
dec
ds
divb
into
push
flds
mov
iret
mov
rep
pop
xchg
in
sbb
loopne
push
repz
popa
mov
mov
jl
mov
mov
lret
and
lods
jae
arpl
lahf
mov
jnp
jecxz
sahf
je
inc
hlt
pop
push
jmp
add
repnz
or
xchg
arpl
insb
inc
add
and
mov
shrb
mov
gs
mov
jle
pop
jecxz
push
pushl
in
pop
jno
mov
adc
push
mov
insb
js
push
and
cld
outsl
insl
aas
iret
cmc
push
xor
push
enter
inc
mov
movsl
inc
pop
aaa
mov
add
add
cmp
xchg
dec
stos
mov
mov
lds
dec
ss
loope
pop
mov
sar
jne
mov
mov
or
inc
rcrb
xchg
mov
pop
or
inc
xchg
jl,pn
or
and
pop
push
dec
lahf
shl
outsl
push
enter
out
clc
mov
pushf
nop
inc
call
adc
inc
mov
int
out
inc
cmc
data16
pop
inc
int3
sbb
or
fsubrl
mov
jmp
call
push
outsl
adc
loop
add
xlat
fs
pop
dec
and
test
cmp
enter
mov
sub
mov
sub
in
jns
jp
ljmp
push
push
or
sub
adc
aaa
lea
enter
insl
shll
scas
pop
cmpsb
loopne
and
loopne
jns
lret
pushf
pop
cmp
stc
cs
add
mov
sub
mov
jns
sub
in
mov
cli
or
sahf
or
inc
sbb
mov
outsb
stos
sbb
popa
jne
and
fsub
lret
call
adc
lods
decb
das
mov
mov
test
lret
mov
xchg
mov
or
jmp
jl
jp
mov
mov
cmp
and
jp
loopne
bound
and
shrb
sbbl
jp
mov
icebp
enter
dec
cmp
mov
xchg
or
lds
or
mov
sahf
out
xlat
jl
mov
or
int
jmp
int
sarl
inc
xchg
cld
pushf
push
scas
cmp
jle
mov
pop
test
push
jbe
xor
popl
addr16
mov
rcll
in
xchg
pusha
mov
out
sbbb
xchg
sub
and
les
xor
fldl
stos
inc
sbb
add
push
lcall
mov
sbb
xor
add
scas
dec
and
xchg
sbb
inc
fcoms
popf
ret
jae
cmp
pusha
ljmp
cltd
and
mov
dec
push
pop
negb
insl
aas
xor
fcoml
xor
mov
roll
push
cs
shrl
fnsave
ret
push
add
ret
insl
jle
adc
push
jno
arpl
jg
movsl
xchg
mov
mov
dec
icebp
std
jb
fidivs
in
outsl
je
les
fwait
cltd
repz
imul
mov
movsb
pop
ss
pusha
mov
or
mov
mov
or
in
xchg
mov
dec
cltd
dec
adc
test
das
xchg
push
xchg
inc
das
stos
mov
int
jp
arpl
cmc
js
mov
cmp
push
js
ds
subl
fistpll
jg
icebp
inc
jnp
sbb
les
sti
mov
sbb
mov
adc
bound
inc
mov
popf
mov
lods
lock
xchg
cltd
aad
movsb
roll
pop
jmp
fs
lea
addl
hlt
sahf
xchg
out
xlat
xchg
pop
pop
repz
in
xchg
int
dec
jp
fwait
xor
clc
push
pop
loopne
movsb
jge
adc
pushf
gs
and
aas
inc
mov
jmp
mov
insb
inc
mov
mov
in
push
daa
inc
or
ds
xchg
mov
movsl
lods
lret
test
fiaddl
dec
sub
push
ljmp
sub
cmpsb
add
sub
das
jns
and
cltd
addr16
cwtl
mov
insb
imul
jl
imul
lods
imul
add
pop
mov
popl
out
add
push
js
lods
mov
orl
push
subb
mov
test
je
notl
mov
out
or
and
dec
mov
inc
cmp
mov
and
arpl
jmp
adc
gs
cmp
je
mov
call
push
pop
push
inc
pushf
sub
int3
sub
pop
in
pop
lods
mov
or
inc
jl
add
and
jns
and
sub
and
das
and
shll
lods
cs
fs
xchg
or
xor
sarl
xchg
inc
or
lds
data16
fildll
push
lods
fwait
pusha
xchg
hlt
in
into
outsb
pop
lret
and
bnd
jno
into
int
shrl
es
lahf
scas
pop
mov
pusha
sarl
loope
pop
movsl
daa
mov
push
sub
mov
sbb
mov
sti
dec
and
call
mov
xchg
fwait
xor
out
xor
inc
cwtl
popf
hlt
jb
fistpll
test
lods
cli
jg
mov
aam
mov
inc
inc
inc
dec
gs
mov
inc
mov
xor
jge
dec
xchg
xchg
ljmp
lret
push
xchg
cltd
cmp
cmp
gs
mov
mov
sbb
push
mov
mov
test
pop
test
mov
and
pop
lret
inc
and
sub
add
pop
into
fwait
xorl
rep
lock
fs
int
cwtl
lret
sbb
xchg
jmp
mov
pushf
test
pop
sbb
cmp
in
push
bound
cld
insl
out
sub
and
aaa
or
aam
add
loop
mov
and
stos
sti
cld
imul
repz
ja
out
lret
jmp
sub
adc
xor
lcall
mov
fwait
rorb
das
lahf
cmpl
enter
mov
imul
mov
mov
insl
in
test
test
mov
sub
nop
or
out
outsb
pusha
pop
push
or
push
xchg
fisubs
inc
gs
daa
sub
rcll
rcrb
push
sarl
cwtl
and
and
jmp
addr16
test
pop
movsl
lock
cmp
fstps
sub
dec
pusha
ss
in
sub
pop
dec
mov
movsb
push
dec
jbe
popf
test
fnstsw
insb
ret
sarl
icebp
fnstsw
cmp
in
test
daa
cld
inc
or
xchg
mov
and
je
mov
dec
xchg
cmp
jmp
sub
jge
popf
popf
test
lds
push
aad
sub
cmc
push
shl
aam
and
fldt
stc
jp
push
sub
mov
add
jge
imul
ret
loopne
clc
inc
pop
mov
xchg
loopne
push
cmp
fs
pop
pop
sbbb
sbb
loopne
mulb
adc
imul
clc
scas
jne
adc
cmp
jno
pop
mov
cli
mov
push
sub
mov
dec
negb
xchg
negl
fwait
insl
mov
jp
sbb
dec
rclb
in
subl
push
cld
test
jns
xchg
and
pop
cmc
addb
cmp
jb
jnp
dec
add
movsl
mov
xor
mov
mov
test
jno
inc
inc
xchg
data16
dec
int
sahf
or
leave
sub
pop
adc
orb
add
loop
icebp
cmc
out
mov
mov
shrl
lea
mov
mov
jb
mov
test
leave
jp
ds
pusha
jne
test
and
mov
push
scas
pop
data16
jns
mov
adc
sbb
and
cmp
sub
cmpsl
or
sub
inc
mov
xchg
mov
or
push
repz
push
movsl
sbb
cld
jp
push
sub
pop
push
xchg
pop
lods
lret
xchg
push
popf
stc
jne
mov
dec
lcall
bound
jae
jge
ljmp
push
in
lods
aam
sbb
imul
dec
ret
in
mov
xor
pop
int
add
add
rcll
cld
loopne
pop
xor
lahf
push
xor
mov
jno
and
pop
test
rcr
addb
mov
clc
adc
test
popaw
and
lods
arpl
es
and
jb
mov
xchg
test
sbb
imul
xrelease
push
sbb
push
or
cli
scas
out
roll
and
mov
lods
out
pop
sbb
out
mov
imul
adc
and
inc
jl
fisttps
or
or
scas
cmc
xchg
jl
mov
jecxz
push
cmp
incb
fistpl
push
cld
mov
int3
xchg
in
jmp
jmp
cli
pop
scas
sarl
stos
sub
jnp
sub
fildl
aas
fwait
push
sub
or
addl
push
dec
repz
add
inc
les
jne
pmuludq
cmpsb
push
inc
out
mov
pop
bound
push
nop
or
jecxz
lret
lcall
rcr
and
jmp
sbb
bnd
add
lods
push
pop
push
dec
dec
dec
sbb
fcoml
stos
xchg
loopne
leave
out
jae
movsb
pop
push
pushf
pop
out
out
adc
xchg
push
jbe
enter
popa
inc
xorb
stos
inc
xor
and
das
lods
popf
cmp
ret
cs
mov
jmp
mov
and
cmp
cmp
icebp
dec
jbe
add
or
inc
into
xchg
inc
mov
xchg
inc
jno
ljmp
pop
nop
fildl
loop
adc
lcall
sub
cmc
lds
mov
add
fs
push
repnz
bnd
cwtl
push
mov
push
mov
testl
and
inc
adc
test
mov
or
aas
sti
jp
ret
dec
ljmp
lret
inc
xchg
test
add
rcrl
in
push
xchg
je
fsubs
stos
dec
aam
jno
sahf
jb
sub
es
jnp
xchg
xor
leave
mov
lods
popf
icebp
xchg
dec
lcall
aam
xchg
and
cld
icebp
and
lret
pop
or
pop
jl
xor
subb
mov
out
push
es
mov
pop
dec
stc
xchg
mul
addr16
into
shr
dec
pop
or
ret
pop
cmpsb
cli
push
outsl
adc
stc
push
xchg
mov
ljmp
pop
repz
lea
sub
lret
mov
sbb
mov
movsl
dec
icebp
mov
icebp
cmc
js
mov
jne
mov
jp
aas
fstps
pop
add
das
clc
sub
pusha
inc
sbb
scas
mov
orb
cltd
pop
fdivrp
adc
pop
leave
sbb
shr
insb
push
daa
mov
lahf
cld
mov
shr
int3
dec
icebp
dec
jns
roll
clc
push
loopne
cltd
aaa
inc
mov
dec
inc
nop
cwtl
mov
xchg
fwait
aad
mov
xor
stos
cwtl
fcomps
bound
push
shlb
cmp
adc
lods
ja
mov
int
call
sub
outsb
pop
dec
or
outsl
xchg
xchg
sub
or
mov
push
test
xor
fcmovnu
xchg
inc
addl
mov
mov
shrb
push
cmp
and
mov
xchg
cmpsb
mov
mov
pop
mov
call
popf
rcll
and
push
inc
shlb
jns
negb
push
ror
xor
shl
mov
imul
mov
scas
or
xchg
mov
sub
outsl
sub
dec
lret
cld
dec
dec
lods
hlt
lret
in
cmp
push
pop
mov
dec
mov
stos
fisttpll
jns
sub
cmp
sub
or
xor
pop
fwait
or
dec
and
xchg
xorb
add
pop
inc
jecxz
or
in
inc
cmpsl
or
stos
mov
sbb
ret
pop
pop
scas
cltd
rclb
push
mov
xor
fs
push
mov
pushl
mov
pushf
inc
data16
xor
pop
lds
mov
inc
ds
pop
mov
movsb
and
mov
js
mov
jmp
adc
lds
pop
or
inc
cmp
cwtl
push
push
test
insl
in
jecxz
jae
lahf
fwait
push
iret
push
jle
ja
insl
cmp
cld
stc
decb
pop
popa
imul
dec
mov
cld
pop
jnp
fwait
mov
cwtl
inc
ret
push
mov
push
mov
adc
clc
mov
sbb
ficomps
test
mov
cmp
inc
push
push
cmp
lods
adc
inc
xor
xchg
inc
or
sar
movsl
aas
or
stc
dec
stos
lret
and
dec
sti
ss
mov
call
jecxz
pop
lods
cltd
bound
push
xchg
mov
or
jbe
mov
and
add
or
mov
pop
iret
mov
mov
movsl
cmp
and
lret
ret
xor
xchg
xchg
mov
lcall
sbb
or
push
push
or
inc
xchg
cmp
dec
call
mov
int3
xor
jecxz
lods
pusha
bound
jo
push
outsb
das
call
push
loop
mov
cmpl
xlat
test
push
xchg
mov
xchg
fcoms
mov
sbb
push
sarl
jno
inc
mov
ds
and
jae
jae
cwtl
popa
sub
jmp
mov
lock
jns
sahf
lds
sbb
jns
pop
jae
notrack
div
int
jl
lea
mov
cmp
dec
lock
scas
fisubs
aad
push
out
mov
sbb
or
mov
jl
shl
aas
adc
fwait
jl
xor
and
lock
fs
push
xorb
dec
cmpb
add
xchg
bnd
xchg
and
ds
jp
inc
jle
ret
scas
imul
pop
in
into
push
clc
shll
scas
cli
das
mov
push
or
dec
or
mov
ficomps
adcl
divl
mulb
and
push
addr16
movsl
mov
inc
sahf
dec
imul
shlb
mov
cmp
mov
or
adcb
mov
mov
mov
sahf
int3
hlt
mov
cmpl
ja
mov
cmp
shlb
lods
shll
sub
mov
les
adc
jne
int
sub
xchg
inc
push
clc
xor
popa
insl
iret
mov
shlb
fnstenv
insl
and
xchg
fistps
adc
fcmove
stos
or
stos
je
in
inc
and
sahf
pop
jecxz
mov
gs
lret
loopne
lock
and
fdivrs
push
and
inc
out
or
scas
mov
arpl
cs
jbe
mov
in
mov
or
jbe
push
das
orl
gs
pushf
loop
xchg
sub
loopne
inc
sbb
adc
and
or
sti
fst
jne
cmp
xor
inc
ds
into
lret
adc
idivb
and
add
adc
stos
pushf
leave
sbb
ljmp
jae
pop
icebp
dec
ret
mov
lods
ljmp
cmp
idivb
js
aad
jbe
dec
adc
push
das
pop
adc
outsb
or
push
xor
movsb
and
inc
rclb
sub
xor
ds
add
lods
stos
in
data16
daa
xchg
mov
mov
mov
test
add
adc
pop
push
jo
xchg
xchg
xchg
int3
roll
int
sbb
sub
enter
insb
scas
daa
xchg
in
stos
cld
into
out
out
loop
mov
daa
jge
xor
es
mov
setg
push
dec
sbb
lahf
out
jl
sbb
xor
jae
sub
ja
scas
aas
mov
bound
xor
sub
mov
test
loop
shll
bsr
cld
mov
cmc
lahf
push
fistpll
aas
pop
push
cmp
xchg
xor
mov
xchg
lods
nop
or
xor
pop
xchg
out
sub
xchg
dec
push
imul
push
fwait
ss
out
aaa
mov
and
jae
cmp
data16
dec
cs
lea
xor
cltd
out
lcall
lret
lea
repnz
int
cmp
ss
in
cmp
test
xor
push
push
add
gs
lret
fwait
xchg
xchg
cmp
xchg
fsubl
jne
dec
mov
hlt
mov
mov
pop
jno
pushf
push
inc
inc
add
lcall
outsb
cmp
stc
pop
mov
jns
xor
movsl
xor
jl
test
outsb
cli
pop
xor
cmp
scas
cmp
inc
outsl
pop
add
mov
pop
inc
sbb
push
imul
shrl
sub
adc
outsb
or
call
push
cmp
test
mov
movsl
jl
les
push
pop
dec
mov
out
mov
stc
scas
sub
jp
fucomi
dec
jg
sub
dec
js
cmp
int3
xchg
out
lret
pop
push
xchg
in
stc
inc
cltd
cmpl
xor
lcall
icebp
sub
not
sahf
jno
and
lea
ja
ror
adc
jo
push
xchg
sub
cld
inc
lods
adc
adc
dec
rorl
mov
add
das
sahf
ret
inc
xor
mov
pusha
movsb
sub
xchg
shrb
sti
and
cmc
dec
shll
or
daa
aad
aad
fs
mov
insb
pop
mov
cmp
out
shlb
xor
xchg
add
pop
lock
or
arpl
mov
lods
adc
scas
ficompl
cmp
jno
sbb
xor
jbe
dec
mov
mov
or
xchg
ljmp
mov
repz
fnstsw
clc
mov
test
cltd
int
shrb
loope
and
rorb
pop
xchg
mov
test
and
iret
mov
lcall
mov
lahf
dec
aad
xor
cli
lds
loop
xlat
ficompl
jp
lret
mov
sub
sub
idivl
jmp
push
lea
std
imul
jo
xor
push
test
mov
jnp
ret
sbb
mov
out
into
and
mov
mov
lret
ja
mov
xor
je
pop
sbb
fucomip
clc
mov
das
leave
not
rorl
xor
ds
popa
fcompl
mov
or
and
sub
and
mov
inc
fstps
mov
data16
adc
inc
arpl
pop
loopne
adcb
jmp
das
pop
push
adc
aaa
xchg
add
inc
pushf
add
addr16
push
subl
fdivrs
in
mov
insb
and
je
iret
clc
mov
mov
push
cli
or
mov
ret
clc
out
mov
or
push
loop
mov
dec
ret
ljmp
mov
jb
mov
push
rcrb
push
iret
daa
divl
cmc
inc
or
mov
fcom
and
jnp
mov
insl
insb
dec
xchg
aam
pop
mov
pop
push
in
sbb
jmp
dec
mov
das
or
add
movsb
pop
out
pop
aaa
aas
inc
test
jnp
repz
push
sbb
inc
mov
cltd
outsl
pop
ficomps
aas
or
jge
sbb
sub
sbb
xchg
lcall
repnz
int
mov
push
call
sub
jae
cmp
sbb
repnz
in
out
jg
out
dec
fidivl
les
lcall
jmp
dec
mov
mov
sub
bound
gs
sub
stc
cmp
das
xchg
mov
or
jle
sub
push
fmull
std
or
jno
sub
jmp
add
pop
sahf
pushf
andl
mov
push
mov
ja
pop
dec
sahf
jb
cmpsb
lods
sbb
add
fisubl
iret
test
xchg
out
rorb
dec
rcrl
jnp
repz
test
mov
popa
loopne
shrl
mov
pop
or
sub
xchg
cmp
dec
jmp
inc
jb
js
repz
out
leave
repz
sahf
es
inc
jno
movsb
pusha
mov
js
imull
mov
out
outsb
xchg
rolb
lcall
push
xlat
jns
data16
aas
mov
jp
lods
lcall
hlt
and
cmp
call
sbbb
dec
cmp
std
inc
outsl
mov
lods
sub
adc
xlat
nop
lret
enter
mov
rcr
in
add
hlt
inc
push
adc
xchg
adc
push
ds
add
lea
mov
mov
lret
push
adc
sahf
mov
and
mov
mov
sub
mov
dec
stc
lea
pop
repz
adc
and
daa
scas
mov
jg
jnp
lahf
dec
adc
jns
sbb
dec
in
jg
dec
xorl
mov
cmp
mov
xchg
xor
je
cmpsb
inc
mov
mov
test
xchg
xor
pop
inc
mov
sbb
shll
int3
dec
push
pop
jno
xchg
mov
cld
leave
add
imulb
out
sub
inc
xorb
xchg
jbe
leave
pop
xchg
pop
mov
mov
out
nop
xlat
xor
push
pop
and
adc
jge
pop
adc
aaa
jns
mov
clc
and
ljmp
add
cmp
mov
daa
xchg
and
imull
fcmovnbe
sbb
int3
sub
push
cmp
cwtl
mov
mov
addr16
shr
sub
lock
iret
sti
or
dec
lock
shll
mov
outsl
cltd
mov
lret
jmp
bound
scas
jo
push
push
psubusb
add
fldlg2
ret
mov
push
repnz
fs
ret
push
inc
jbe
pop
lds
clc
lea
fstpt
mov
pop
push
jmp
fstl
mov
inc
jns
fbstp
or
cmp
pop
jae
mov
mov
inc
inc
loop
sub
mov
inc
sub
shrl
sbb
xor
lea
xor
mov
test
cs
xchg
mov
ret
push
mov
aas
lods
add
je
cmc
jno
push
loopne
mov
sbb
iret
out
cli
cmp
cld
push
xchg
loop
cmp
jmp
aam
lahf
loope
in
jge
xor
aad
ja
les
lahf
mov
jae
nop
jecxz
or
jecxz
sub
stos
jbe
aad
mov
mov
movsb
aad
mov
fistps
add
insb
jg
fistl
pusha
sahf
test
jns
or
jb
shlb
pusha
test
out
lcall
aad
mov
mov
in
outsl
test
mov
rorl
or
lods
add
mov
mov
stos
xchg
push
enter
pushf
xor
push
xor
and
ljmp
lock
jns
adc
pop
xchg
sti
loop
push
xchg
mov
inc
in
sbb
sbb
call
jnp
xor
mov
cmp
imul
lret
xor
ret
adc
sub
and
xchg
cmpsb
ds
fildl
jnp
cmc
imul
daa
jo
data16
aaa
shrl
ret
out
out
jmp
xchg
jg
out
test
mov
in
push
or
rcl
xchg
push
mov
or
in
stc
incb
adc
sbb
xchg
dec
xchg
fimuls
out
cltd
pop
inc
or
in
or
sbb
dec
out
mulb
xchg
lds
mov
dec
bound
jp
ret
mov
int
in
aam
hlt
test
push
pop
and
mov
cwtl
push
pop
dec
pop
inc
xor
repz
lods
or
negb
cmc
jbe
out
movw
or
pop
in
mov
dec
jns
arpl
and
push
stos
push
outsb
scas
rorb
lods
clc
mov
pop
shll
jnp,pn
xor
jnp
mov
inc
sub
xorl
int3
mov
mov
call
gs
adc
mov
cmpsl
add
sub
mov
mov
cmpsl
mov
sbbl
pop
aam
bound
push
inc
xchg
popl
mov
sub
rcll
call
shlb
idivb
les
xchg
pop
pop
add
pop
into
mov
mov
jae
pop
jnp
xchg
push
push
cmp
daa
out
xor
xchg
roll
movsb
sbb
test
push
push
int
fiaddl
dec
int3
lahf
cmp
movsb
lods
jle
js
inc
fcmove
clc
pop
xchg
adc
xchg
lea
leave
cmp
scas
std
cmc
push
pop
hlt
scas
fists
clc
jbe
mov
nop
aad
divl
cld
mul
and
xlat
dec
inc
scas
insl
movsl
cmpsl
cmp
and
aas
mov
adc
leave
loop
cltd
test
cli
jae
and
cld
das
xchg
scas
mov
push
lea
xor
shlb
pop
dec
cmp
or
adc
cmp
sahf
adc
mov
aas
mov
jge
cwtl
popa
in
mov
fcomps
and
std
xchg
add
fcmovu
adc
pop
cmpsl
lea
outsb
xor
push
sar
repnz
lods
or
sti
add
inc
bswap
mov
pop
jle
sub
sahf
daa
in
rcrb
arpl
xor
mov
leave
jp
xor
imul
xor
shrb
testl
test
pop
loop
lds
adc
mov
test
push
sub
int
jge
mov
inc
repz
clc
mov
mov
jno
push
or
scas
cmp
pushf
or
or
lahf
fldenv
push
push
push
loopne
xchg
mov
sbb
lds
stos
clc
pop
ja
sbb
out
inc
add
sbb
push
test
mov
jo
xor
sbb
mov
cmp
ficoms
mov
xor
xor
jmp
loope
dec
pop
popf
enter
mov
and
stos
pop
mov
aaa
movsl
xchg
lods
jmp
pusha
mov
mov
lahf
int
outsl
sbb
shrl
jecxz
push
mov
sub
test
icebp
loop
push
xor
daa
mov
inc
pop
mov
cli
jecxz
adc
sub
push
cli
adcb
jb
xchg
sarl
or
ror
or
add
js
sbb
pop
mov
cltd
out
repnz
lret
idivl
push
mov
or
int3
notl
jnp
dec
push
cmpsl
lods
push
and
xor
cmpsl
mov
std
jns
mov
jae
icebp
fwait
out
inc
jecxz
in
jbe
clc
in
pop
dec
popf
xchg
popf
sbb
or
lods
mov
push
inc
or
or
mov
or
flds
or
in
cmp
push
jb
adc
and
dec
cmp
lret
leave
mov
in
cli
clc
loop
and
ja
xchg
aad
sbb
and
fwait
sub
and
ds
aas
outsb
cmpsb
and
dec
mov
xchg
sahf
or
idivl
loop
jbe
ja
in
lods
ja
in
divb
loop
dec
xor
mov
mov
cmpsb
iret
inc
mov
les
jne
cltd
in
adc
and
mov
xorl
rclb
or
insl
inc
dec
das
mov
jne
mov
xchg
jns
js
lock
std
ds
xor
xchg
orl
pop
mov
mov
or
cld
inc
xchg
idivl
adc
push
test
les
mov
add
mov
pop
mov
rcll
lcall
aam
and
fs
xor
inc
pop
sub
jmp
popf
jbe
sub
adc
test
xor
mov
adc
pusha
fisttpl
mov
decl
sti
aad
std
add
int3
and
add
lods
mov
out
mov
push
adc
sahf
pop
jecxz
jnp
mov
sbb
cs
or
repz
or
out
outsb
and
pop
add
push
cmpsb
mov
repnz
and
mov
pop
outsb
sub
hlt
mulb
jecxz
push
dec
push
jle
mov
or
pop
loope
cld
mov
inc
in
cmp
jnp
cmp
sub
and
fisttpll
pop
out
dec
pusha
pop
sbb
subl
lcall
rclb
lds
aaa
enter
inc
jle
cmp
cld
int3
adc
pop
push
and
pop
aaa
cwtl
fs
pop
dec
jg
ret
pusha
push
ja
xor
ja
jp
add
sar
inc
push
cmc
or
out
stos
std
shl
push
fildl
ret
add
in
or
jle
les
inc
add
pop
gs
fcmovnb
ret
push
int
cmpsb
std
xchg
lds
shrb
repz
outsb
sbb
add
iret
sti
daa
jg
gs
sbb
or
mov
and
inc
sub
push
and
fsub
mov
cmpsb
mov
mov
mov
mov
fs
cltd
out
xchg
xchg
mov
into
jp
call
add
cmpsl
dec
insb
flds
mov
cmp
aad
scas
pop
xor
fwait
pop
dec
insb
fisubl
jmp
or
int3
lods
sbb
pusha
movsb
inc
in
shlb
decl
mov
iret
icebp
pusha
addl
in
sar
jl
cmpsb
pop
into
push
movsb
fimull
jo
sub
sbb
adc
shll
cmpsb
iret
pop
sub
lock
fwait
push
adc
stos
or
inc
test
adc
movsb
shlb
mov
xchg
out
loopne
or
mov
lcall
xor
movsl
cmp
xchg
ret
lods
aam
imul
loope
imul
cmc
xchg
ret
call
and
jmp
lods
mov
pop
mov
jg
or
fwait
xchg
and
clc
or
lahf
push
push
lods
in
xlat
cmp
loope
jo
add
repz
xor
cs
data16
out
sub
dec
inc
rorb
jno
insl
scas
insb
inc
fistl
mov
popf
and
adc
lock
and
stc
ret
lret
mov
out
sbb
jle
jge
ret
jnp
and
lods
dec
testl
jge
aaa
roll
lds
pushf
jbe
aaa
adc
or
imulb
subl
ss
adc
push
adc
cmp
push
inc
or
cmp
sbb
xor
push
add
sub
in
movsl
out
mov
adc
fmuls
bound
pushf
imul
xchg
add
or
xor
mov
inc
sbb
call
cs
xchg
mov
call
sub
negl
daa
push
sbb
out
in
and
push
mov
dec
jmp
or
lods
arpl
scas
jge
icebp
inc
xchg
xchg
push
imul
into
cmp
pop
mov
cltd
pop
xchg
pop
add
adc
scas
shrl
sbb
arpl
int
popa
repnz
data16
fimuls
pushf
xor
je
add
std
int3
pop
adc
pop
fisttpll
cwtl
dec
jo
pop
jne
test
addl
pop
imul
adc
scas
jnp
test
jecxz
cmp
inc
mov
sub
xor
notl
adc
dec
imul
push
sub
in
rcrb
mov
adc
pop
icebp
mov
sbbb
das
jb
fistl
aaa
bound
mov
xor
push
fcomp
fiaddl
xchg
test
jmp
or
mov
xchg
sbb
out
faddl
jp
fmuls
out
in
roll
add
sbb
or
loop
jnp
negl
std
int
test
adc
hlt
insb
mov
xor
lcall
fwait
mov
push
mov
push
cmp
lahf
pop
mov
dec
out
or
mov
jecxz
xchg
rcl
arpl
xchg
fwait
bswap
mov
dec
mov
mov
orb
pop
sahf
adc
and
dec
xor
dec
shl
lock
or
dec
lock
inc
lcall
std
cld
add
xchg
xor
cltd
xor
lds
frstor
shlb
bound
out
arpl
mov
es
push
fisttpll
push
jle
inc
xlat
and
dec
or
or
fbstp
pop
leave
call
addl
mov
cs
ret
popa
pop
bound
jp
fnsave
xchg
push
xor
cmpsb
loope
inc
andb
outsl
mov
in
jbe
adc
mov
ss
nop
loop
mov
and
outsl
out
jae
nop
push
and
dec
xchg
sarb
pop
xchg
push
popf
xchg
pop
les
pop
jne
sub
insl
stos
push
lret
fadds
mov
fsubrl
sub
sub
inc
fstpt
scas
jmp
sti
cmp
aaa
lods
push
inc
dec
pop
dec
ds
xchg
pop
mov
pop
je
jo
mov
enter
movsb
nop
dec
xchg
leave
mov
push
test
stos
and
xor
sbb
popf
jecxz
sub
mov
or
mov
sub
das
adc
lea
vmaskmovdqu
fincstp
and
cmp
and
xor
xor
xor
cwtl
jecxz
or
mov
fimull
pusha
rorl
xchg
mov
sbb
dec
mov
pop
pop
pop
add
pop
sbb
xchg
pop
rcl
adc
insb
pushl
test
push
adc
xor
ss
adc
sub
mov
repnz
aam
push
data16
outsl
mov
shll
leave
sbb
cs
or
adc
outsl
xchg
cmc
push
push
sbb
adc
ret
in
mov
sbb
adc
and
or
push
call
pop
call
imul
movl
test
in
push
push
test
inc
push
lcall
loopne
mov
mov
mov
pushf
aaa
mov
add
dec
jl
aam
dec
xlat
cmpb
sub
jmp
inc
inc
jae
outsl
sti
adcl
jb
jp
xchg
inc
xabort
or
sub
pop
sub
jo
into
push
shlb
loop
std
jno
adc
pop
cltd
cmp
push
rcrb
pop
mov
dec
push
mov
and
iret
mov
paddsb
imul
cld
jle
das
testl
sbb
pop
or
xchg
gs
pop
jge
bound
rol
out
add
inc
cmc
adc
dec
push
xchg
int3
jns
sub
outsb
aaa
imul
in
pop
arpl
sub
cli
xor
jo
cmpsl
pop
or
fbstp
and
pusha
mov
xor
mov
repz
sbb
mov
mov
insb
mov
add
orb
mov
enter
bound
scas
jb
mov
in
rcl
push
and
mov
cli
lock
in
adc
add
adc
mov
sahf
lock
repnz
ret
push
or
fidivl
out
popa
mov
mov
sarl
inc
insb
lods
into
add
xchg
repz
test
adc
enter
or
nop
and
adc
popf
mov
xor
or
or
das
out
push
int3
lahf
pop
add
sbb
mov
pop
shl
cmc
xor
lods
out
xor
daa
pop
aam
xor
lret
jne
push
dec
fwait
cmp
xorb
and
out
outsl
sbb
jae
adc
std
sbb
jno
add
lcall
add
aam
mov
je
mov
push
dec
jbe
jge
cmc
pop
subl
ret
mov
fsubrs
loop
inc
jle
icebp
fsubrp
dec
dec
je
call
sbb
jge
pop
in
icebp
push
fwait
jae
ds
mov
lret
in
push
sahf
lahf
mov
sub
sub
inc
adc
icebp
add
sarl
sbb
cmp
pop
mov
dec
in
sub
nop
mov
sti
lret
fsubr
push
ret
js
and
jmp
jo
pop
cmp
aad
clc
repz
or
ja
inc
and
lcall
cmp
negb
ret
cmp
scas
cli
dec
cmpl
mov
icebp
aaa
push
pop
nop
push
shll
and
int3
or
imul
mov
mov
xchg
imul
pop
adc
mov
jns
in
add
jo
xchg
cmp
adc
fstpl
add
jmp
rorb
pop
inc
out
leave
lods
nop
cld
aas
dec
pop
fistpll
sub
inc
sti
sbb
jmp
fs
and
in
mov
inc
xlat
add
es
int
pop
add
loop
mov
mov
pop
stc
mov
cmp
dec
push
lea
mov
mov
sbb
xor
stos
and
lcall
push
loop
in
lods
shlb
adc
ret
imul
inc
adcl
xorl
pop
fmul
jmp
aam
inc
hlt
fstps
das
pop
cmovs
or
xor
cmp
pop
dec
mov
es
imul
adc
push
fst
lahf
outsl
cmp
pop
sub
xor
pop
addr16
call
and
xor
adc
lea
add
pop
adc
mov
push
sbb
aad
orb
pop
push
std
dec
loopne
cmp
int
insl
jecxz
sbb
sub
ja
push
ja
sbb
xchg
fisttpll
push
and
call
adc
lret
push
aas
jnp
ljmp
cld
iret
shrl
cmp
leave
pop
mov
lret
cmpsb
in
or
xor
das
adc
dec
scas
shlb
imul
das
leave
mov
mov
jnp
outsl
mov
jl
pop
sbb
pop
hlt
sub
movsb
pop
xor
add
push
js
lret
hlt
pop
xchg
pop
and
ja
or
fcmovnb
add
sti
jnp
mov
pop
loopne
call
aas
or
adc
xor
mov
sub
adc
pushf
inc
inc
mov
cmp
loope
cld
jmp
mov
jl
push
push
lods
js
ljmp
jns
sub
dec
mov
sahf
lods
movsb
fldcw
insb
mov
mov
xchg
xlat
fistl
push
pop
cwtl
push
fldcw
push
out
sarb
mov
ret
shll
cwtl
xchg
mov
cmp
repz
xchg
adc
out
out
pop
push
call
test
push
push
aad
imul
adc
xchg
pop
popf
mov
test
push
and
iret
cmpsb
push
in
ds
xor
or
sbb
lods
mov
mov
stos
scas
cmp
inc
jne
enter
mov
cwtl
ss
xchg
sub
sbb
or
lret
push
push
jg
jmp
je
inc
test
sbb
sub
mov
xchg
mov
push
or
push
mov
mov
sbb
out
add
mov
lock
sahf
xor
fisubl
lock
adc
jecxz
inc
pop
xchg
sbb
cltd
push
orb
or
loop
pushf
push
xor
repz
enter
mov
cmp
pop
push
and
imul
testl
or
push
in
rcll
cmp
mov
ds
ret
jecxz
aas
into
lods
ljmp
push
rcrl
out
xchg
push
push
push
clc
bound
or
push
lcall
add
aas
or
sbb
inc
outsb
jbe
push
dec
outsb
push
push
subl
push
shlb
and
add
aam
push
mov
mov
aaa
or
xor
lock
pop
addr16
pop
pushf
js
sub
xchg
orl
call
xchg
mov
shr
ficoms
les
das
mov
inc
sbb
inc
ja
rorl
xchg
test
and
mov
jb
hlt
sub
aad
cli
mov
lcall
cltd
nop
xchg
lods
xchg
lock
fwait
sbb
adc
add
pop
bound
add
or
mov
inc
mov
fs
cs
inc
mov
push
pop
arpl
xor
icebp
notb
aam
fwait
xchg
push
idiv
inc
xor
cmp
mov
jg
orb
ljmp
les
inc
or
dec
arpl
test
inc
dec
popa
fmuls
nop
shll
popl
lock
jae
mov
pop
xor
inc
jns
pop
pushf
cmpsb
mov
mov
out
push
fwait
pop
daa
push
imul
insl
mov
insb
es
inc
lcall
mov
push
popf
mov
cmc
jecxz
add
xor
icebp
lea
sub
inc
js
pop
jo
jecxz
inc
inc
add
sub
movsb
lds
add
orl
or
out
fcomi
xor
fcomi
test
mov
cmpsb
sbb
mov
sahf
popf
test
jge
cmp
movsb
dec
out
imul
mov
jmp
into
test
ds
fstl
and
inc
leave
fsts
push
leave
sarb
sub
dec
sar
outsl
dec
stc
lahf
fs
mov
sbb
adc
sbb
les
negl
pop
fisubrs
mov
inc
pop
xor
pop
and
jno
rcl
adc
inc
hlt
ja
hlt
popl
icebp
dec
clc
test
dec
cmp
xor
iret
xchg
ss
or
xor
rcl
movsb
pop
jg
add
add
daa
mov
dec
dec
mov
lock
cmpsl
push
pop
stos
jo
cmpsl
jo
dec
sub
jb
stc
aad
push
call
push
fsubp
int3
or
imul
fbstp
jno
ss
push
pop
hlt
push
adc
jns
out
xor
jae
pop
sbb
xor
push
xchg
jne
icebp
push
and
lcall
mov
shll
and
and
pop
inc
pushf
loop
popa
xchg
cmc
cwtl
sahf
aad
je
mov
scas
cmc
jns
cmpsb
sub
into
sub
setae
adc
mov
push
orb
and
loopne
xor
sub
jnp
adc
xchg
jne
popf
push
outsl
mov
lods
fidivl
in
int
out
inc
mov
mov
mov
fistpl
jbe
repnz
nop
mov
pop
lea
jnp
fdivp
cmp
push
cs
cmpsb
jo
xor
dec
push
cmp
sbb
xchg
fldcw
pop
mov
les
xlat
add
je
mov
subl
stc
jmp
hlt
outsl
push
out
insl
fdecstp
shll
dec
cmp
clc
out
lret
fsts
aam
popf
addr16
inc
in
inc
and
dec
mov
cmp
mov
fwait
jnp
adc
push
lret
fsubs
push
stos
ret
je
push
repnz
push
ret
cwtl
jno
ljmp
mov
push
push
std
dec
jge
push
int3
pop
popa
xchg
xchg
adc
dec
std
scas
mov
or
or
test
roll
jbe
lods
imull
mov
loope
mov
call
push
out
cmp
int3
mov
mov
lea
inc
test
out
mov
fsts
les
cwtl
cld
je
or
loop
loope
sub
adc
hlt
mov
cli
test
xchg
push
cmp
clc
push
push
xchg
adc
mov
mov
icebp
mov
std
adc
and
cwtl
ds
adc
movsl
mov
jmp
sbb
jno
xchg
jnp
movsb
add
test
or
cmp
dec
mov
push
fistpl
imul
push
adc
push
je
rcll
sbb
push
out
mov
enter
sbb
dec
les
ljmp
fimull
jl
lods
movsb
sbb
push
add
push
shrb
and
inc
in
ret
mov
ljmp
jno
int3
mov
out
cwtl
je
adc
sub
xchg
iret
insb
call
lret
push
rorb
push
lock
repz
jno
push
push
pop
lods
gs
xchg
xor
out
or
outsl
cmpsb
fcmovu
mov
xor
cmp
mov
sbb
xor
dec
testb
mov
arpl
inc
jmp
adc
and
idivl
dec
leave
insl
sahf
xchg
cltd
aam
inc
pop
pop
jl
mov
pushl
sub
mov
ss
dec
scas
pop
jae
rcl
mov
test
in
mov
mov
mov
xor
pop
and
cmp
sbb
push
mov
call
stc
in
repnz
insb
adc
mov
repz
cmp
pop
stc
inc
sub
dec
mov
neg
add
jg
loope
jns
or
insl
mov
pop
adc
mov
rcll
stos
add
and
mov
sti
dec
ds
getsec
cmp
testl
fisubrl
xor
jmp
fists
xor
jne
call
movsb
dec
je
and
or
dec
inc
mov
mov
jl
cmc
xor
scas
leave
outsl
imul
ret
fs
fcmovnb
sahf
cbtw
push
scas
imul
cmp
mov
push
incb
adc
jmp
fisubl
dec
lret
aam
ret
cmpb
mov
mov
addr16
gs
cmp
fs
lret
sbb
pop
inc
or
mov
cmp
pushf
mulb
imul
insl
push
imul
mov
push
imul
repnz
movsl
jl
bsr
sbb
nop
ss
mov
es
cltd
in
cwtl
lods
inc
pop
sub
subl
ss
iret
sub
out
or
cmpsb
dec
fsubrs
push
lods
outsl
inc
cld
pop
icebp
insb
daa
dec
xchg
pop
mov
jno
out
int
adc
lods
xchg
add
outsl
jnp
mov
mov
sub
shrb
shlb
aas
out
int
push
outsb
sub
fs
xchg
leave
or
xor
rcrb
mov
out
cmpsl
cmpsb
xor
sbb
push
pop
dec
subl
inc
pop
popa
sti
xchg
into
stos
fwait
xor
push
push
std
sub
or
pushw
stos
push
outsl
jnp
add
push
dec
jb
aas
jne
cmp
out
cli
fs
daa
sbb
sbb
adc
gs
repnz
scas
iret
scas
xor
xor
add
or
mov
push
push
pop
add
dec
loop
shlb
xchg
shrl
fdivr
jecxz
je
sar
out
adc
fists
aaa
push
jne
adc
lahf
je
negb
pop
mov
loopne
mov
mov
inc
test
aam
aad
xor
cmp
inc
pop
gs
popa
xchg
or
jmp
or
cmp
cmp
lret
setno
movsl
and
mov
mov
out
mov
and
dec
mov
inc
or
enter
loopne
in
push
lahf
inc
inc
mov
fists
cld
leave
dec
in
jmp
dec
jge
into
mov
decl
mov
cld
scas
stos
daa
add
inc
mov
cli
and
stos
mov
xchg
cld
push
out
jp
cmc
jmp
dec
das
test
cwtl
jo
les
cltd
sub
push
push
fistps
mov
cs
cmp
and
sub
pop
out
rorl
adc
push
rep
dec
jno
lret
jecxz
pop
cwtl
rcll
lret
sbb
dec
xchg
or
sbb
fucomip
fsubl
mov
aam
fidivrl
ja
pop
push
loop
inc
jl
cmpsb
jle,pn
push
mov
sahf
in
ror
sub
pop
inc
int
notl
mov
out
adc
or
sti
insb
insl
data16
out
inc
jmp
int
and
pop
cld
add
or
test
pop
sar
sbb
fstps
mov
add
mov
mov
lods
push
pavgw
or
leave
fisubrl
push
test
mov
cwtl
sub
sub
xor
dec
inc
and
ret
mov
xor
dec
into
adc
dec
jnp
dec
sub
or
cmpsb
stc
stos
fidivl
out
out
out
outsl
mov
mov
lahf
out
inc
mov
and
enter
clc
mov
cmp
pop
sbb
lahf
adc
mov
sbb
mov
push
notb
mov
and
add
pop
push
loopne
xchg
dec
movsb
mov
cmp
dec
jnp
lret
aaa
test
jmp
popf
les
cmc
mov
mulb
mov
push
mov
outsb
jmp
imul
mov
push
clc
push
xchg
test
cmp
mov
outsl
mov
lret
sbb
or
xor
dec
cmc
cwtl
push
sbb
out
andb
std
xor
sub
pop
xor
xor
sub
mov
insb
es
xchg
repz
imul
cmp
insb
jne
sbb
push
test
add
adc
cld
rcl
or
sub
popf
xor
pop
jbe
sub
and
ds
and
xor
lret
int
sub
arpl
lret
push
sub
cmp
jno
mov
adc
adc
jns
push
hlt
mov
repz
or
test
and
lds
arpl
hlt
jbe
mov
mov
incl
subl
int3
ljmp
aas
lcall
in
inc
insb
pop
jns
in
nop
xorb
add
int
cwtl
sbb
ret
ds
cmpsb
mov
shlb
inc
jae
or
xchg
std
nop
sub
mov
in
lods
xchg
divl
das
xchg
add
std
jne
dec
cmp
inc
movsl
or
lds
xchg
stos
outsl
sbb
lock
inc
xor
shl
das
enter
lret
push
and
inc
mov
in
repz
cmp
fmuls
stos
jg
xchg
js
loop
dec
nop
cld
mov
nop
imul
push
jb
lahf
inc
inc
xchg
or
stos
loopne
adc
push
mov
xchg
dec
cmpsl
sbb
pop
xor
loop
add
mov
movsb
in
jecxz
xor
les
cwtl
xchg
push
mov
xor
sbb
sub
pop
mov
mov
push
xor
clc
movsl
mov
jnp
rcr
into
lret
aas
jmp
jge
dec
push
xor
shll
loope
out
ret
aam
push
data16
mov
push
mov
push
int
push
arpl
mov
sbb
mov
gs
dec
dec
insl
and
adc
xchg
or
or
into
inc
push
and
cli
sub
movsb
fstps
mov
pop
mov
inc
roll
mov
jo
push
jne
int3
pop
xlat
cmpsb
cmp
push
and
test
and
xchg
mov
std
sbb
jbe
add
mov
jecxz
mov
scas
leave
pop
jb
adc
shll
aaa
je
dec
pop
sbb
jecxz
push
and
loope
mov
mov
int3
cmp
mov
dec
sti
adc
jno
movsl
popf
inc
outsl
lret
jecxz
mov
subl
adc
iret
or
cld
fbstp
rcl
push
sub
nop
in
pop
pushl
pushf
pop
pushf
cmp
xor
out
repz
jmp
jae
or
pop
pusha
rcrb
pop
repz
cmp
shlb
or
incb
and
cmp
clc
sub
mov
inc
mov
and
lea
sub
xchg
pop
lods
jo
cmpb
mov
rclb
sarb
inc
out
arpl
call
xor
imul
xlat
cmp
scas
stc
and
jno
out
pop
int3
sti
rcpps
or
std
sbb
dec
pop
outsl
repnz
imul
jno
pop
jno
out
cmpsb
sub
sbb
fwait
mov
inc
ret
jb
sbb
mov
sub
sahf
lret
xor
add
outsl
test
gs
insb
test
jl
cmp
mov
cmp
xchg
xchg
dec
sbb
add
inc
jmp
jbe
negl
lret
shlb
mov
lret
es
xor
orb
paddw
call
out
popa
lcall
loop
dec
inc
daa
imul
clc
rcrl
shr
mov
mov
lods
cltd
in
dec
shlb
ret
and
adc
imul
pushf
int
shll
jnp
hlt
lahf
xchg
xchg
dec
mov
test
mov
push
dec
std
cmc
pop
inc
adc
jo
bound
pop
xor
mov
pop
add
aam
jmp
add
and
xor
or
jmp
jle
dec
pop
pop
out
imul
xchg
add
jg
cmc
sbb
jl
jno
add
mov
push
in
mov
push
movsb
lds
and
aas
and
lods
scas
and
xchg
sbb
pop
mov
mov
je
add
mov
or
js
mov
push
bound
mov
add
sub
out
add
cmp
mov
pop
shlb
adc
and
cwtl
movsb
inc
cltd
sub
mov
cli
out
insb
dec
push
xchg
add
cmpsl
cmp
and
adc
jmp
lods
and
pop
scas
test
repz
jnp
ficompl
jl
push
pop
mov
pop
push
pop
in
mov
js
jmp
arpl
cmpsl
mov
adc
jo
psraw
adc
mov
sub
lods
and
jo
add
mov
mov
push
lret
push
pusha
repnz
aas
fldcw
lahf
add
xor
fnsave
jns
mov
push
es
xchg
fidivl
loope
daa
in
shrl
pop
in
sbb
bound
jge
ffree
and
jmp
jo
shll
loopne
xchg
and
ret
jb
sahf
xchg
movsb
out
andb
int3
vcomiss
mull
xor
cmp
dec
movsl
push
scas
cld
in
scas
repnz
jno
push
fs
lcall
and
jecxz
aam
fisubs
push
iret
pop
sub
jno
fbld
jmp
push
xorb
mov
pushl
dec
and
pop
imul
rcr
aad
push
rolb
add
sbb
lods
fsts
and
fsubs
jnp
popf
jo
jnp
int3
mov
and
add
shrb
mov
add
xor
lcall
sahf
mov
sub
inc
lret
jno
std
loop
push
xor
fcomps
call
push
and
test
dec
and
jg
add
les
xchg
inc
sbb
pop
adc
adc
data16
in
cmp
in
mov
and
mov
popf
xor
test
ret
gs
mov
jmp
pushf
aaa
inc
lret
filds
inc
xlat
inc
mov
decb
cs
push
pop
pop
addb
fldenv
dec
aaa
dec
movsb
inc
inc
pop
loop
scas
mov
leave
xchg
mov
into
scas
out
inc
aam
mov
adc
sbb
cmp
mov
fldl
xor
push
sbb
adc
jmp
xor
lods
xchg
shlb
sbb
pop
push
mov
adc
mull
or
ret
nop
fnstcw
jmp
je
hlt
insb
xor
adc
scas
or
jecxz
dec
das
dec
stos
outsl
repz
push
xchg
andb
mov
test
sub
mov
or
imul
rol
mov
pop
movsl
inc
push
adc
daa
xchg
fdivl
mov
pop
xor
add
int
xchg
test
push
out
ficompl
fucomip
xchg
sbb
mov
dec
into
std
mov
push
xor
aas
popa
and
xchg
dec
loopne
push
ffreep
stc
fdivrs
movsb
imul
ljmp
ljmp
adc
jne
test
cmp
mov
cmpl
and
pop
out
mov
xchg
jmp
pop
jp
dec
mov
fistpll
adc
cmp
data16
lods
xchg
fistpl
xchg
sub
popf
cmp
clc
jae
or
rcll
sbb
pop
mov
hlt
jge
mov
cld
dec
push
int3
push
data16
or
sub
stc
push
popa
cmp
push
out
or
jae
mov
jnp
xor
mov
cmpb
inc
mov
xchg
sbb
adc
inc
cmc
cltd
jo
and
mov
lods
mov
mulb
movb
stos
and
lret
js
push
pop
and
stos
into
add
inc
mov
cmp
pop
stos
pop
jmp
push
lcall
pop
rcrl
push
pusha
mov
cmp
jne
iret
push
jg
ret
fsubrs
imul
bound
sub
les
pop
shlb
mov
jmp
repnz
fsub
fisttpl
push
fs
outsl
mov
pop
pop
add
loop
hlt
mov
stos
mov
pop
sbb
push
fwait
out
in
xlat
loop
inc
pop
cmc
aas
insl
lods
stos
adc
push
loope
push
and
iret
pop
adc
out
mov
pop
iret
mov
scas
jno
popa
jbe
dec
fidivrs
cmp
jae
sub
rcrl
mov
call
jno
sbb
cmp
cmpsl
xchg
mov
repnz
ljmp
jae
add
push
cmp
dec
fiadds
push
cmp
aaa
cmp
cmpsl
push
in
ret
or
insb
inc
mov
push
sbb
xor
test
mov
lock
xor
test
mov
std
xchg
sub
in
pop
cmp
dec
cmpsb
inc
pushf
mov
arpl
jecxz
dec
aaa
pop
les
ret
popf
filds
fstpt
sbb
scas
and
aad
cmpsb
rcrl
pop
out
jp
add
mov
ss
sti
fsub
jecxz
inc
rolb
fildl
jo
mov
inc
nop
arpl
push
or
jg
cmpl
mov
jns
ja
out
clc
xor
and
xor
out
bound
sbb
jg
mov
xorb
push
add
movsb
dec
ljmp
test
leave
rolb
sbb
sarl
ja
lock
push
imul
add
repnz
lea
iret
popf
xchg
or
push
cmp
mov
fisubrl
inc
fmull
push
adc
in
insb
sbb
scas
ja
mul
pop
mov
push
mov
fdivrl
jae
test
adcb
clc
sarl
or
jb
stc
add
jno
and
jns
aam
sbb
push
lods
aad
ret
jp
push
ljmp
cs
jmp
mov
push
aas
sbb
jecxz
pop
sbb
xlat
sbb
imul
pop
jle
and
bound
je
stc
insb
and
enter
mov
sub
jp
enter
add
add
push
sub
pop
lcall
cmp
repz
push
inc
sbb
into
rcll
cmp
or
jle
jb
jb
fisubrs
or
and
aad
xor
repz
dec
test
jg
or
mov
mov
mov
cld
add
push
arpl
lods
enter
sarb
arpl
icebp
lret
cmpsb
jb
clc
gs
sub
xchg
push
pusha
ja
jb
adc
xor
mov
in
inc
cmp
loopne
lahf
std
lds
adc
pop
loop
adc
out
pusha
movsb
std
lret
int
dec
mov
sbb
xor
mov
jge
popa
cmp
cltd
pop
add
jno
lea
sbb
ror
pop
sarb
bound
xor
int
divl
in
and
inc
mov
cmp
add
jg
je
cmp
sbb
leave
sar
clc
and
leave
xlat
pop
outsb
dec
dec
or
or
lods
sbb
lret
mov
xor
loopne
and
rolb
scas
test
rcr
adcl
es
not
repnz
dec
inc
orl
les
addr16
pop
mov
cmpsb
aaa
mov
cmc
cmp
push
jmp
out
add
aam
mov
sbb
test
clc
movsb
jmp
xchg
mov
xor
mov
into
push
add
mov
jl
sub
into
pop
push
push
jo
data16
js
pop
cli
lock
mov
addl
add
cmc
push
into
movsl
test
insb
leave
xchg
sbb
jl
push
xchg
dec
and
mov
sti
mov
lods
orl
xor
orl
test
fnsave
jmp
jae
push
insb
push
sub
pop
cs
stos
in
xor
leave
insl
repz
lods
dec
int
sub
popa
popa
lods
mov
pop
jle
jnp
mov
xchg
repz
fs
fwait
mov
lods
xchg
lock
cli
dec
mov
dec
adc
jno
pushf
mov
out
xor
js
cmp
shlb
sub
jecxz
or
popa
push
dec
leave
mov
adc
in
lret
cmp
pop
clc
ror
aam
mov
std
enter
lahf
inc
mov
or
es
mov
pop
enter
movsb
xchg
outsl
cltd
loope
jp
push
popa
jae
js
hlt
jecxz
and
sub
test
push
lods
jmp
sub
jle
loopne
push
push
sub
pop
push
repz
jo
mov
mov
add
jbe
jp
pop
out
mov
inc
insl
pop
add
pop
dec
in
lea
push
mov
adcl
adc
mull
out
scas
repnz
test
fdivrs
fisubrs
in
push
shll
pop
sbb
mov
sbb
xchg
les
cmp
mov
mov
hlt
sbb
and
mov
xor
sbb
insb
sub
lock
es
lret
int3
mov
ljmp
dec
sbb
ficoml
les
dec
les
push
add
inc
ret
mov
ss
push
mov
fs
js
std
andb
or
jbe
inc
loop
loope
pop
push
out
adc
jg
loopne
test
dec
jp
and
sbb
pushf
adc
xchg
out
push
cld
jne
leave
cmp
std
jge
fstps
sbb
fs
ss
shrl
mov
dec
xor
push
test
jg
testl
addl
sti
add
pop
scas
icebp
adc
lods
mov
cmc
inc
aas
mov
pop
cmp
dec
data16
subb
push
pop
mov
mov
dec
xchg
push
stos
mov
inc
cmp
cwtl
das
pop
pop
and
add
jg
scas
inc
sbb
mov
mov
imul
lods
rcll
inc
insb
jecxz
cmc
cmp
inc
cmpsb
jg
xchg
imul
xor
xchg
lods
cmpsl
pop
shlb
adc
lahf
xor
jle
jnp
out
dec
xchg
icebp
inc
pop
std
xor
outsl
xor
dec
dec
xor
jge
lods
sbb
add
nop
jmp
ret
adc
push
andl
sub
fwait
cmp
adc
pop
test
sbb
dec
test
test
mov
pop
aam
pop
xchg
mov
adc
jbe
mov
mov
sub
or
push
gs
pop
push
or
bound
lods
ds
adc
inc
in
sbb
sbb
fisttps
adc
lock
out
adc
push
pop
test
dec
mov
stos
out
mov
mov
mov
pop
or
adc
into
mov
test
mov
jno
and
data16
or
and
pop
and
rol
rcrl
xor
add
dec
leave
lock
subb
fisttpll
std
sub
xor
xchg
xchg
imulb
push
inc
jp
push
lret
jmp
loop
fs
pop
js
mov
and
js
lock
call
inc
and
mov
mov
or
adc
filds
andb
jbe
and
aam
xchg
add
fstpt
lgs
rclb
aam
dec
sbb
or
xlat
push
dec
lds
ds
jmp
jo
rorb
xchg
sub
jne
into
clc
push
jno
cld
mov
inc
push
in
test
jo,pt
sahf
push
jbe
jmp
mov
cmp
in
inc
pop
icebp
xor
jmp
mov
fldl
push
xchg
gs
iret
in
mov
pusha
mov
sbb
add
xchg
xchg
ret
sti
xlat
ss
mov
pushf
pop
insb
jo
shlb
xor
mov
lcall
rep
fsts
cltd
mov
int
mov
aas
mov
in
in
pushf
jp
add
in
xchg
inc
pusha
bound
ljmp
sub
or
enter
cmpsl
int
mov
fdivp
lods
into
pop
cmp
pushf
mov
and
adc
sub
push
mov
and
fwait
int3
xor
sub
adc
lahf
out
cld
dec
pcmpeqw
rclb
fmull
or
push
fmulp
xor
arpl
test
lret
push
xchg
rcrb
into
daa
and
aad
inc
hlt
and
loope
jp
jmp
cmp
fisttpll
jge
lret
xorb
ret
and
xchg
jno
and
or
cltd
adc
pusha
cmp
gs
inc
pop
stos
lret
stc
adc
das
fadds
xchg
inc
aad
jns
jne
movsb
leave
pop
xor
jne
jnp
fcmovbe
sahf
pop
xchg
fildl
les
lock
arpl
std
cltd
inc
pop
jle
leave
fisttpl
or
cmp
leave
out
dec
cwtl
icebp
cld
and
add
cmp
mov
or
jmp
add
aam
push
inc
pop
cmpsb
cli
pop
test
dec
mov
dec
cld
testl
stc
or
push
or
aad
push
jno
inc
jmp
pop
cmpsb
popf
sub
enter
sbb
push
mov
nop
add
test
sub
sbb
mov
dec
ss
jns
cltd
mov
push
daa
cmp
xor
in
mov
scas
cmc
jo
mov
vcmpsd
jge
lahf
sbb
inc
lods
add
shlb
movsb
aaa
push
mov
pusha
adc
or
loop
jb
cmpsb
pushf
xorl
out
fdivs
int
popf
fwait
xchg
mov
loopne
mulb
jo
loope
or
jb
insb
shll
inc
jg
mov
fcomps
mov
sub
push
sbb
and
vmovsldup
cmp
std
popa
cld
inc
sbbb
pop
arpl
jge
data16
pushf
push
rorl
adc
xchg
shl
bound
jns
jl
ljmp
cld
jmp
out
testb
push
daa
das
dec
fwait
add
imul
ret
in
mov
stc
jo
in
xchg
and
je
ret
std
mov
mov
fistps
ficomps
mov
pop
enter
push
cmp
into
mov
sbb
fs
jae
sub
loopne
aad
cmp
and
shrb
inc
in
movsl
jne
sub
or
cli
test
xchg
cmp
cmp
jnp
jnp
mov
ljmp
pop
popf
lcall
out
aaa
bound
push
jno
mulb
mov
nop
call
xchg
mov
ja
xor
popf
into
icebp
xchg
repnz
jb
sub
inc
sbb
out
jns
fwait
sub
or
pop
sbb
icebp
dec
mov
jmp
jmp
aam
xor
lcall
pop
cmp
mov
ljmp
xor
and
or
jp
pop
lret
inc
adc
mov
fmull
shl
adc
jbe
aam
idiv
xchg
in
lret
arpl
mov
xlat
mov
push
or
push
fcmovnu
movsl
leave
call
aam
movsb
mov
scas
push
movsl
adcl
mov
mov
mov
nop
imul
jnp
ds
xchg
jnp
and
lea
fadds
cmp
ds
and
lret
pop
fnstsw
out
sti
call
fwait
into
adc
in
into
or
xchg
shr
test
enter
out
insl
aad
mov
xor
jns
jle
cmp
mov
sub
loop
mov
push
pop
imul
insl
mov
inc
pop
fdivl
jge
sbb
shr
ljmp
lahf
cmp
fmuls
mov
and
add
xchg
hlt
pop
lds
jmp
mov
filds
push
dec
imul
pop
sub
adc
bound
cltd
in
pop
sbb
movsb
pop
test
sbb
lock
clc
sub
sahf
int
out
mov
mov
fstpl
xchg
leave
adc
adc
inc
scas
cmpsb
icebp
mov
jnp
imul
jmp
mov
push
testb
fdivs
gs
mov
into
mov
add
pop
jl
sbb
mov
sbb
sbb
add
movsb
sub
inc
scas
xor
shlb
loopne
push
mov
or
lahf
add
int3
jl
xor
jmp
sbb
gs
mov
mov
cwtl
pop
push
fs
jne
outsl
aaa
sbb
mov
test
pop
mov
gs
scas
mov
inc
add
lcall
imul
sbb
clc
jmp
dec
jl
or
insl
and
sub
pop
stc
fs
std
daa
cltd
test
pop
xor
popa
mov
push
ds
mov
outsl
dec
call
scas
sbb
or
jbe
add
out
int3
test
add
shrb
rol
jmp
adc
mov
addr16
clc
dec
xchg
shrd
mov
or
std
outsl
jg
fnstsw
test
jae
cli
jecxz
sar
call
or
xchg
push
or
gs
ss
addr16
mov
sub
dec
int
mov
scas
cmc
fidivl
fbld
sbb
rorb
sbb
mov
xchg
movsl
ret
into
sub
cwtl
rcll
sub
inc
mov
cltd
xchg
inc
lret
out
movl
dec
inc
mov
mov
test
repnz
push
jle
cwtl
xchg
push
or
jne
mov
inc
test
and
sub
inc
or
sbb
inc
add
lods
out
cltd
idiv
dec
fnstcw
cli
insl
aaa
das
ds
das
ret
cmp
inc
out
xchg
not
cwtl
and
jae
sbb
hlt
pop
in
lea
and
shll
into
fnstenv
fstpl
ds
pop
sahf
xor
cld
pushf
dec
mov
mov
dec
inc
push
call
test
jl
decl
adc
scas
mov
rcrl
and
push
je
arpl
lcall
aaa
or
mov
call
xor
fistpl
shl
xchg
dec
addr16
sub
mov
loop
pusha
adcb
lcall
loope
push
jg
pusha
jmp
xlat
in
std
pop
jbe
fidivs
mov
jns
jge
and
clc
dec
pop
push
xor
loop
insl
xlat
cld
mov
pop
cmp
ja
sub
or
mov
movb
push
xchg
mov
xchg
ljmp
cmp
lock
loop
dec
and
loope
adc
sarl
rolb
cmp
dec
mov
fnstsw
xchg
jmp
in
or
or
or
imul
cld
jb
stc
push
and
rclb
mov
xlat
sbb
test
mov
dec
test
pop
jne
or
jl
ja
shrl
xor
inc
aaa
mov
adc
test
and
js
mov
push
mov
xchg
aam
stc
gs
or
and
inc
icebp
test
dec
jmp
movsb
ja
pop
adc
adc
and
pop
mov
pop
idivb
test
out
sbb
pushf
fimull
push
ss
movsl
fsubrs
fdivrs
daa
cmp
imul
out
cltd
pop
xchg
in
mov
int
xor
ja
lcall
dec
jmp
or
and
and
cmp
pop
push
cmp
push
test
shrb
or
inc
arpl
cmpsl
cmpsl
mov
sbb
mov
gs
and
sub
cltd
or
call
cwtd
stos
jnp
loope
mov
xor
adc
xor
lret
dec
push
out
ror
lds
popa
pop
mov
rcrl
ret
pop
dec
xchg
int
or
xchg
in
inc
aas
push
popa
fdivl
or
insb
jmp
imul
xchg
dec
mov
enter
imul
push
loop
cmp
pop
xchg
addl
dec
and
mov
lock
mov
mov
das
popa
sub
add
mov
sub
jecxz
loope
xchg
mov
push
lds
into
mov
xlat
jp
pop
inc
in
jne
cwtl
je
rolb
pop
push
or
orl
jmp
stos
sbb
jns
adc
pop
insb
fldcw
movd
shll
mov
jl
push
mov
cmp
mov
inc
test
xchg
sbb
sbb
adc
ficomps
pop
cmp
add
fistpll
movsl
jo
cmpsl
mov
jge
jae
pop
dec
je
inc
pusha
mov
or
cmp
mov
das
push
inc
mov
pop
pop
pop
cmp
inc
cltd
es
push
das
push
and
mov
or
dec
andb
push
cmp
fs
jecxz
in
cs
repz
std
jp
and
repz
inc
pop
xchg
stos
cmc
ljmp
add
mov
vmovups
xchg
sub
dec
out
jo
mov
in
fstpl
out
fnsave
fwait
jle
jge
in
sbb
xchg
fisubs
and
pop
lods
scas
mov
popf
or
mov
faddl
mov
mov
lahf
dec
fbstp
jmp
xor
jns
or
jecxz
xchg
mov
outsl
fnsave
fisubrs
dec
jb
ror
aas
push
jl
enter
jge
adc
sbb
frstor
mov
sub
pop
mov
cmpsl
roll
xchg
test
ret
ret
addb
dec
sahf
add
fwait
cmc
adc
mov
aaa
jp
test
inc
inc
pop
mov
sub
dec
stos
stos
sub
jno
cmpl
bound
pop
mov
sbb
mov
cli
adc
or
push
inc
in
push
push
mov
dec
sbb
test
or
enter
stos
or
imul
push
or
stos
scas
push
pop
ret
xchg
gs
dec
jecxz
mov
xchg
add
mov
pushf
cmp
adc
cmp
xchg
scas
sti
sub
jbe
sarl
xchg
xor
push
sub
sub
fucomi
sub
stos
push
cmpsb
loopne
imul
cmpl
and
fcomps
push
ret
imull
je
pop
hlt
mov
add
mov
jmp
and
xchg
movsb
outsl
cwtl
andl
fdivl
jmp
inc
jno
out
jns
inc
add
push
pop
mov
dec
adcl
jno
jns
ljmp
jge
dec
xor
push
pusha
js
mov
push
leave
mov
mov
jp
or
loope
rorb
pop
mov
cli
stos
lods
xchg
testl
push
sub
xor
add
add
pop
imul
mov
mov
mov
mov
sahf
lock
les
mov
add
js
sbb
add
sti
and
cmpsl
mov
cs
mov
jno
push
aaa
or
scas
inc
sub
scas
mov
andb
jbe
mov
inc
sbb
inc
pop
icebp
dec
cmpsb
add
scas
pop
fsubl
push
adc
sbb
cmpsb
jp
lods
cmp
adc
pop
adc
sub
rcll
dec
loopne
test
adc
cmp
iret
xchg
pop
jno
push
lret
mov
mov
cmp
shll
sbb
pushf
add
ds
loop
mov
sbb
jmp
adc
and
pop
xor
popf
dec
lahf
pushf
or
pop
pop
pop
imul
pop
fidivrs
hlt
js
cmp
push
icebp
jp
adc
cmp
insb
cs
and
scas
gs
inc
xchg
in
bound
loope
movsb
in
cld
inc
enter
sahf
push
dec
adc
xchg
orb
sub
hlt
lret
push
dec
pop
inc
enter
or
insb
inc
pusha
dec
shll
sbb
mov
inc
push
lret
pop
push
mov
jmp
adc
add
push
ja
mov
lahf
cmp
push
mov
cld
call
dec
mov
mov
sub
scas
or
inc
cmp
lret
rcrb
sbb
cmp
jmp
or
loope
lret
and
ss
push
mov
in
mov
sub
jae
lds
hlt
cmpb
push
out
sbb
sbb
cmpsl
fstps
and
mov
lret
lret
insb
je
subb
or
jnp
jp
out
xchg
outsb
test
mov
jge
xor
mov
std
mov
sti
xor
jmp
test
inc
sub
sub
inc
jno
cltd
add
fisubs
stc
sar
ja
xchg
les
mov
aas
lods
mov
or
inc
out
out
stos
push
cwtl
ljmp
cmp
ror
xor
push
or
or
push
int3
bound
mov
add
push
ja
out
pop
lds
pop
fidivrl
mov
dec
pop
dec
cld
jo
xor
ret
mov
push
icebp
sub
int
xlat
scas
repnz
aad
js
add
cmpsl
mov
xor
cmp
inc
mov
hlt
xor
add
data16
jp
mov
sub
lcall
push
dec
pushf
pop
clc
jecxz
jno
popa
cmp
fs
mov
out
push
std
jecxz
dec
or
fdivs
xchg
pushf
mov
in
fstpl
popa
jb
pop
sar
dec
test
leave
or
mov
jge
adc
or
rcrb
and
int3
fistpll
sti
or
ficomps
dec
or
mov
sbb
jmp
lret
sbb
jle
scas
in
stos
jecxz
pop
popa
cltd
sub
jo
jmp
xor
jecxz
push
popf
mov
in
loop
sbb
push
jp
dec
sbb
mov
repnz
push
xchg
pop
pop
movsb
push
jae
imul
fdivrl
xchg
leave
in
fsubs
mov
xchg
loopne
mov
cwtl
aaa
out
jp
lcall
les
or
outsb
cli
jle
push
add
inc
gs
xchg
mov
lods
dec
dec
sub
push
xchg
leave
sub
sbb
aaa
jl
and
fsubrs
stos
enter
insl
push
fdivrs
xor
push
outsl
mov
pop
cltd
int
sarl
jmp
rcrb
xchg
sub
cld
das
dec
push
icebp
jmp
jg
xchg
and
jns
hlt
fisubrl
push
iret
mov
lea
mov
subb
pop
stc
repnz
or
cmp
or
xor
fidivrs
xchg
movsb
mov
cmpsl
test
inc
xor
push
fsub
ja
jle
push
sbb
lods
movzwl
mov
daa
dec
insb
cmp
mov
rol
sahf
out
aad
imul
push
dec
add
ret
xchg
std
inc
pop
ljmp
mov
les
data16
push
test
sti
stos
mov
outsl
jns
jg
pop
mov
push
jae
adc
shufps
pop
mov
and
shll
push
icebp
lock
pop
pop
shrb
xor
mov
mov
push
mov
xor
loope
push
loope
inc
out
inc
jbe
iret
out
js
mov
adc
mov
add
subb
jecxz
jg
jo
gs
stos
inc
lret
int3
orb
sub
movsb
test
mov
or
aam
sub
push
es
sub
cld
mov
xchg
cmpsl
cli
mov
add
leave
pop
or
insb
fdivrs
cmp
dec
or
int3
pushf
filds
gs
cwtl
xchg
dec
push
sar
lods
movsb
int
test
loopne
push
dec
in
pop
insl
popl
mov
jge
mov
lock
xor
pop
cwtl
mov
mov
inc
xor
int
jno
sbb
sahf
aaa
into
pop
dec
push
xor
inc
ds
lcall
sbb
cmp
mov
add
mov
or
xlat
push
cli
xor
jp
mov
dec
or
in
sub
andl
mov
or
imul
out
inc
sub
loop
and
movsl
fists
int
pop
call
fsubrl
cmp
ja
lock
and
push
mov
scas
pop
xor
lods
xchg
adc
mov
outsb
insb
rorb
sarb
rorb
popf
rcll
popa
xchg
mov
push
mov
sbb
jg
mov
push
imul
xchg
sub
and
mov
mov
xor
les
insb
lds
pop
inc
dec
or
nop
adcl
jmp
rorl
xchg
stc
adc
mov
enterw
sub
push
or
sbb
movb
scas
in
mov
test
in
rcr
sbb
pop
mov
push
xor
add
mulb
or
lahf
lock
mov
test
inc
inc
loope
and
inc
inc
mov
push
outsl
in
xchg
mov
stos
mov
cld
lahf
cmp
inc
pop
push
nop
imul
cltd
add
rcll
lret
adc
in
cs
scas
pop
and
push
push
gs
or
imul
pop
jae
mov
cmpsb
inc
pusha
fiadds
dec
push
nop
repz
jge
jae
cwtl
nop
insl
jp
sub
pop
jl
push
jp
sbb
pop
fdivl
pop
pop
sub
adc
orb
fstps
mov
int3
xchg
add
test
xor
xchg
clc
aad
popf
testb
xor
addr16
cmc
sbb
jmp
fwait
insl
or
sarl
jbe
mov
imul
or
mov
scas
mov
lcall
dec
cs
adc
mov
jno
inc
and
and
nop
loop
jg
push
jp
or
lcall
jb
cmp
popf
loope
shrl
in
lea
mov
cmovs
mov
imul
lods
push
iret
in
test
stc
js
ret
jl
std
fildll
lds
xor
das
test
adc
pop
mov
mov
fcomi
sbb
mov
fsubrs
jmp
andl
xchg
pop
sbbl
xchg
clc
loope
cmpsl
inc
movsb
stos
xor
jbe
push
xor
sbb
cmc
push
or
loope
stc
xchg
push
js
push
lods
je
prefetch
subl
cmp
cli
or
je
dec
lcall
mov
out
cmp
add
aas
sub
jb
hlt
jnp
jmp
fimull
popf
sub
divb
fistpl
lods
sub
dec
enter
dec
add
adc
call
mov
movsb
fwait
pop
add
cmp
mov
inc
jmp
push
jmp
lea
in
jmp
out
std
repz
nop
jg
faddl
ss
nop
jecxz
dec
lock
mov
push
fldt
addl
sub
jge
xor
cmp
inc
push
out
testl
lock
mov
fucomi
cmpl
sbb
mov
jg
out
mov
sub
xor
loopne
ficomps
mov
pop
pop
sti
pushl
into
rorl
push
mov
call
daa
pop
xchg
lock
pop
jmp
lret
sbb
aad
push
out
sub
icebp
outsl
jns
call
iret
js
mov
sub
clc
adc
and
leave
xchg
cmp
cli
add
cmp
test
imul
faddl
pop
loop
inc
scas
xlat
and
xchg
mov
cmp
jg
and
test
add
lock
cwtl
cld
into
jecxz
mov
sbb
jo
adc
fisubs
pop
nop
cmp
pop
fcmovne
bound
dec
dec
lret
test
std
inc
enter
or
es
clc
lret
cmc
iret
adc
ss
repz
xchg
mov
dec
jo
or
sub
dec
repz
push
ds
and
xchg
pop
out
pop
push
cmpsl
ss
std
in
enter
lret
jb
pop
jnp
xchg
jmp
cmp
dec
fs
lret
daa
mov
mov
sub
xor
adc
push
decb
in
mov
adc
pop
xchg
test
mov
bnd
pop
testl
push
in
jge
in
les
xchg
inc
icebp
mov
xchg
in
outsb
sub
out
xor
aad
popa
pop
fs
repnz
push
mov
jnp
jno
ficompl
push
je
push
clc
jl
adc
xchg
mov
push
outsl
lock
inc
cmp
push
fnstenv
aam
filds
cmp
dec
adc
je
fists
mov
movsb
test
or
bound
or
std
addr16
movsb
imul
divl
mov
insb
movsb
mov
call
mov
test
pop
stc
les
lret
lods
int
push
cmc
pop
shlb
in
xchg
fdivl
sti
or
inc
fmull
or
mov
or
mov
cs
inc
jle
pop
push
pusha
mov
pop
loope
xchg
in
out
or
push
enter
mov
pop
push
pop
pop
adc
push
cli
jbe
cmp
cmpl
xor
xchg
sub
rcrb
sahf
pop
loop
mov
loopne
shl
mov
mov
mov
sbb
add
outsl
inc
add
push
jle
fcompl
sub
xorl
int3
push
mov
cmp
mov
add
xor
jne
pop
sub
aad
xor
adc
int3
sarb
jns
sbb
fs
push
shl
jge
sub
fdiv
dec
xchg
dec
xor
fidivs
clc
jl
xlat
scas
mov
push
je
scas
rcrl
fcomps
mov
xor
into
cmp
push
dec
adc
out
sub
mov
cmpsb
cmp
in
xor
shrl
ja
pop
mov
imul
aam
and
xor
or
mov
lret
outsl
insb
cmp
inc
data16
int
lea
in
gs
and
or
ret
cmp
xchg
test
in
lods
jbe
std
pop
add
cmp
dec
test
pop
fwait
mov
mov
fbld
xchg
sbb
sbb
mov
in
dec
fimull
jbe
lret
and
imul
fdiv
lock
es
test
cli
xchg
fwait
sub
sbb
out
inc
cmc
pop
cmp
hlt
dec
mov
std
das
xchg
ret
outsb
inc
mov
xchg
mov
enter
frndint
movsl
or
dec
xor
adcb
sti
sbb
xlat
and
imul
add
mov
sub
inc
test
jbe
xor
in
int3
jae
xchg
lods
sub
inc
pop
mov
imul
mov
dec
negl
xchg
insb
xchg
movsb
dec
mov
inc
lods
fidivs
jl
inc
rorl
out
es
cmpsb
mov
mov
pop
xor
sub
test
jae
sbb
inc
cs
pop
neg
jecxz
movsb
outsl
push
adc
mov
jp
lcall
ficompl
fistl
jae
push
inc
aad
stc
pushf
xor
mov
sub
push
jns
fsubrl
aad
jl
stos
jecxz
push
rcr
fildll
insl
lock
in
or
cmpl
imul
pop
hlt
and
lcall
out
lcall
mov
pop
mov
cmp
gs
adc
xor
cmp
arpl
stc
dec
lods
fadds
dec
aaa
mov
data16
lcall
out
in
js
hlt
dec
adc
add
in
aaa
add
ja
cmp
or
pushf
mov
jbe
mov
into
xor
pop
je
push
fcom
stc
lods
fcomps
mov
or
push
or
add
mov
mov
sbb
mov
loopne
das
loopne
mov
mov
jecxz
xlat
stos
int
jp
pop
sub
lret
lods
jo
sbb
cld
ss
xor
push
iret
scas
insl
sub
out
mov
cmp
jmp
xor
or
push
adc
into
loop
shll
dec
out
out
mov
mov
js
lods
xchg
or
bound
andl
pop
push
pmaxsw
setg
rcrb
jno
sub
sahf
xchg
clc
xor
pop
ljmp
xor
jnp
mov
cmp
add
fs
daa
arpl
xchg
push
push
fisubs
movsb
jno
mov
fistpll
mov
jae
sarl
cs
cmp
cmpsl
fdivrl
fists
leave
mov
dec
imulb
adc
sbb
jne
lods
and
mov
pushf
push
add
cmpsl
xor
aas
and
mul
mov
xchg
sbb
sbb
movsl
jge
sub
pop
push
adc
push
pop
cwtl
inc
rolb
subl
jae
inc
frstor
fnsave
clc
dec
add
push
xchg
je
ljmp
xor
adc
icebp
test
inc
fsubrl
fucomi
rorl
fwait
adc
jecxz
push
dec
pop
fnstcw
stc
jne
pop
sti
push
pop
lods
aas
cmp
push
popa
mov
jae
addr16
jae
mov
add
pop
add
jle
sub
sbb
movsl
lds
call
or
push
mov
insb
dec
pop
add
lock
add
xchg
dec
push
cmp
into
mov
les
sub
nop
std
rorl
sub
sub
push
jbe
cmp
les
add
pop
shll
cmpsl
data16
xchg
in
out
test
test
and
jmp
adc
jl
xor
cli
inc
mov
mov
mov
mov
mov
dec
insl
dec
pop
sbb
popf
or
leave
in
sti
cmp
jnp
dec
sub
sbb
sub
push
jne
mov
push
sbbl
pushf
cmp
addr16
insb
das
fisubrs
sarb
jge
test
and
cs
inc
cli
inc
sbb
pushl
sbb
addr16
jbe
mov
ja
pextrw
mov
lods
and
xor
loopne
jge
lods
mov
push
push
cmp
dec
or
jo
ret
adc
leave
pop
clc
ljmp
add
arpl
mov
pop
sub
adc
lods
pop
jb
pop
inc
lahf
pop
dec
js
ds
xchg
xchg
pop
sub
sub
shrl
sahf
fcompl
movsl
pop
inc
push
clc
sbb
xchg
hlt
adc
sub
and
inc
pop
scas
inc
movsb
add
mov
ja
dec
mov
sub
js
mov
cmpb
push
out
jbe
sub
imul
fnsave
dec
pusha
add
lods
rol
sti
insb
enter
insb
adcb
sbb
jg
pop
sub
pop
aam
lahf
inc
jp
inc
negb
adc
sbb
pop
stos
jbe
repz
add
sbb
jecxz
das
mov
in
insl
inc
jmp
lcall
sbb
sbb
xchg
call
mov
sub
or
movsl
cmp
push
mov
or
incl
jno
in
mov
cld
sbb
js
aaa
xchg
mov
push
inc
push
adcb
div
pop
push
jnp
xlat
inc
sti
adc
gs
test
in
out
push
sub
dec
xchg
je
xchg
pop
movsl
xchg
adc
inc
imul
psrld
jge
test
sbbb
push
sub
cmp
lds
adc
into
nop
ficoml
outsl
and
jnp
bound
push
mov
icebp
fs
fwait
push
addb
mov
loopne
dec
xor
xchg
dec
adc
loop
sbb
push
inc
xor
movsb
imul
sahf
pop
hlt
pop
fisubl
pop
sub
push
and
aaa
int
lds
fsubrs
dec
leave
test
orb
mov
inc
test
mov
popa
das
push
sbb
inc
and
sbb
and
mov
std
clc
pop
jl
xor
pop
xor
orb
in
shll
pop
push
cld
push
push
nop
dec
inc
loope
and
rolb
sbb
or
fucomi
xlat
test
fdivp
out
mov
aas
push
cs
popf
ret
xor
inc
popa
pop
out
xchg
mov
jo
mov
jmp
push
adcb
mov
negb
hlt
push
sbbl
lret
push
rcll
xchg
inc
je
mov
iretw
cmovle
cwtl
pop
or
bound
mov
mov
push
dec
jnp
push
xchg
fucomi
xchg
pop
in
mov
nop
pop
adc
xchg
sbb
decl
fnstsw
rorl
call
mov
push
add
cmpb
xor
sbb
inc
dec
add
cmc
jge
cmp
inc
pop
push
mov
sarb
xchg
out
jae
fiaddl
loope
scas
sbb
out
fildl
cmp
mov
test
and
mov
or
push
insb
lds
es
jmp
mov
add
in
inc
jg
pop
adc
jo
scas
fcoml
hlt
jae
xor
add
mov
mov
fsubr
mov
inc
arpl
inc
jnp
leave
pop
or
add
mov
push
stos
jnp
inc
cld
pushw
iret
out
fimuls
out
mov
push
push
and
add
mov
xlat
aaa
iret
push
aad
into
sbb
jl
inc
sbb
dec
rolb
or
dec
cmpl
jne
out
and
xor
inc
mov
add
sbb
cmp
mov
popa
dec
sti
mov
mov
rcrl
xchg
or
out
pop
pushf
bound
leave
sbbl
mov
loope
push
insb
add
dec
stos
mov
mov
fildll
xchg
leave
dec
xor
icebp
out
sbb
sbb
je
xor
pop
dec
test
xchg
xchg
inc
stc
inc
ds
sahf
inc
in
sub
out
or
mov
push
sub
inc
movsb
mov
ja
push
mov
jbe
addr16
data16
jno
mov
js
adc
mov
ret
adc
les
xchg
jmp
sbb
xchg
jno
mov
lods
mov
sub
ret
insb
or
lods
sbb
aad
xlat
notb
xor
popa
es
mov
popa
adc
xchg
ds
ret
push
and
push
lods
jns
xor
in
gs
aam
insl
scas
in
dec
and
mov
xchg
arpl
push
test
fcmovne
xchg
push
fisttps
mov
pop
jae
out
les
jg
mov
and
mov
int
mov
push
repz
and
pop
repz
mov
lds
shrl
shl
inc
jno
inc
rclb
and
scas
ss
jmp
mov
cmp
fsubrp
scas
mov
mov
sbb
stos
std
mov
adc
sub
into
in
xchg
inc
xor
lock
call
adc
fcomi
mov
ja
jae
xor
int
enter
xor
out
js
dec
push
leave
adc
mov
aad
mov
ja
mov
xchg
lret
and
adc
pop
pop
out
call
das
shll
xor
inc
cmp
loop
out
xor
data16
pop
loopne
mov
sbb
loop
jg
into
dec
sub
adc
shll
dec
inc
fwait
jae
xchg
pop
stos
jnp
xchg
xor
lods
gs
pop
sbb
cld
mov
sbb
outsb
sbb
int3
xchg
mov
popa
push
sub
setbe
xchg
out
mov
cmp
fildll
ss
insb
add
es
icebp
cmp
xor
cld
outsb
in
add
pusha
xlat
lock
imul
sbb
add
outsb
iret
ret
ja
dec
cmp
stos
mov
rorl
aaa
push
into
xor
test
test
adcl
push
sarb
scas
push
je
shll
push
xchg
mov
cmp
push
and
cld
dec
push
dec
outsb
frstor
jecxz
outsb
sbb
mov
xchg
cmp
mov
inc
sarl
ret
mov
aad
mov
mov
sbb
pop
push
push
mov
sarb
xchg
mov
cmp
repz
mov
sbb
inc
and
test
lahf
sub
ret
stc
push
xchg
mov
xchg
ds
pop
cmpsb
jg
enter
dec
lcall
mov
xchg
push
shlb
das
ret
jg
xchg
or
cmp
fildll
push
pop
mov
jg
outsb
out
xor
aas
add
roll
xchg
or
cmpsb
rol
inc
dec
cltd
push
or
sbb
or
fcomps
lds
xchg
pop
stos
push
inc
push
out
push
ljmp
jl
mov
aad
add
test
ljmp
xchg
inc
les
hlt
inc
mov
pushl
push
inc
icebp
movsl
mov
and
sub
outsb
shrb
dec
mov
cmp
push
ret
ja
fildll
loop
xor
push
mov
pushf
inc
push
mov
add
cmpsb
cmpsb
pop
xchg
aaa
stos
aam
hlt
sarl
and
xlat
push
cli
sbb
push
popa
sbbl
jbe
sbb
jae
lods
cld
lock
or
jb
jg
mov
cmpsl
ret
je
outsb
mov
mov
imul
dec
stc
add
push
xchg
pmulhuw
out
in
and
fbstp
and
dec
mov
and
add
push
sub
daa
xor
sbbb
jno
fidivl
clc
mov
out
mov
cs
add
loop
sub
push
pop
xlat
push
xchg
jns
and
push
fidivrs
mov
and
dec
cld
loop
loopne
mov
mov
xor
imul
rcll
lea
sbb
jg
jbe
mov
xlat
pushf
imul
sbb
iret
xor
jo
cmp
repz
lret
sbb
pop
mov
loopne
jno
imul
pop
xor
push
stos
add
xlat
jo
shrb
and
sti
mov
pop
test
mov
mov
rcll
dec
jp
pop
jns
dec
test
loope,pt
ret
mov
xor
movsl
xchg
cli
push
lret
mov
aas
push
sbbb
push
lods
gs
aaa
es
mov
xlat
sti
jp
mov
fnsave
scas
or
xchg
iret
xchg
pop
adc
inc
stos
jmp
dec
out
push
addr16
lcall
test
ss
test
xchg
lods
outsl
loopne
mov
scas
add
movsl
enter
dec
lods
add
and
pusha
sar
mul
dec
popf
push
mov
mov
mov
and
je
movsb
mov
push
decl
aas
cmp
mov
adc
fs
mov
fldcw
sbb
mov
test
jbe
xchg
mov
dec
adc
in
xor
cmp
sarl
jecxz
mov
shl
loopne
ljmp
cmpsl
push
mov
cmp
mov
es
lea
movb
leave
push
pushf
in
push
jmp
push
jmp
dec
jg
xchg
mov
addl
dec
fisubrs
shl
and
xor
div
sbb
rcl
push
inc
scas
push
es
add
testl
sbbb
mov
and
xchg
push
push
sub
fisubs
mov
ja
inc
mov
cmp
sub
pop
outsl
inc
jb
xchg
push
jp
sbb
in
push
cmp
add
ret
loope
adc
jge
ret
in
insb
fmul
in
and
cltd
lds
fdivrl
xlat
int
sbb
push
sahf
iret
insl
inc
lods
shll
enter
jnp
sub
and
xchg
xor
mov
int3
xchg
mov
xchg
aas
mov
imul
mov
xchg
mov
test
lods
or
mov
mov
mov
lods
sahf
xchg
daa
nop
insl
aam
push
lock
xchg
clc
bswap
jecxz
add
movsl
mov
mov
adc
mov
rclb
xchg
imul
push
cs
loope
and
sub
test
ss
mov
adc
or
fisubl
nop
mov
sub
push
test
mov
stos
adc
cmpsb
xor
fisttps
test
ljmp
jns
pop
mov
nop
das
int3
sbb
clc
inc
ss
pop
shlb
or
pop
jb
mov
adc
jp
add
scas
cmc
call
aaa
lcall
jns
sbb
and
stc
jne
out
pop
cmc
inc
inc
sub
jle,pt
xor
mov
out
cmpsl
jle
push
imul
inc
arpl
es
and
out
ret
pusha
test
push
jl
aaa
mov
test
jle
ja
jecxz
notl
pusha
xor
in
jge
jns
push
xchg
data16
cmc
ds
dec
fsubr
pop
into
cld
push
xchg
imull
jecxz
shrb
mov
add
push
xchg
xchg
or
fwait
adc
jnp
icebp
icebp
push
cmp
mov
loope
cltd
and
scas
xor
clc
push
fcompl
sub
fcoms
lea
mov
fdivl
push
add
test
mov
loop
fildl
push
add
es
mov
or
leave
add
insl
xchg
fbld
es
cmp
rcrl
adc
jae
lret
jl
or
sti
xor
push
dec
sub
movsb
pop
mov
clc
mov
jbe
std
xor
push
jge
add
addr16
imul
or
sbb
xchg
mov
inc
inc
scas
mov
mov
aam
jp
repnz
in
jle
icebp
push
jmp
xchg
jp
lcall
adc
push
aas
daa
dec
lock
popf
fwait
push
jl
push
in
in
jmp
inc
ret
xchg
jbe
pop
sub
push
out
repz
adc
andl
inc
in
shlb
push
or
pop
adc
xchg
sarb
push
bswap
aad
loope
mov
mov
test
aaa
fisubs
addl
cmp
sahf
mov
and
int
pop
push
in
vandnps
jge
mov
call
dec
icebp
scas
pop
xor
sbb
loopne
and
sub
jne
or
lret
rcrl
adc
mov
flds
jmp
add
push
cmpsb
lret
mov
cmpsl
clc
call
jbe
pop
fcoml
and
mov
lret
or
std
pushf
clc
cmc
movsb
push
inc
bound
cmc
pop
imul
push
jle
cwtl
xor
or
jl
imul
mov
stos
sbb
jg
push
aaa
mov
stc
jnp
mov
xor
mov
mul
sub
mov
mov
jnp
data16
jne
mov
ja
int
std
push
dec
pop
add
mov
clc
mov
iret
adc
ss
push
imul
sbb
dec
jbe
fiaddl
xorl
cmp
jnp
push
sbb
jne
mov
out
call
das
mov
jmp
les
push
cmp
sub
mov
es
dec
jg
pop
loop
fiadds
inc
cmp
fisttps
xchg
xor
popl
cmpsb
aad
outsl
outsb
xchg
outsb
push
scas
test
push
loop
inc
bound
mov
add
add
subb
inc
fs
aad
sub
fbstp
cs
xlat
mov
dec
and
pop
add
ret
fs
mov
xchg
jo
mov
cmp
mov
adcb
push
adc
dec
mov
add
cld
test
mov
mov
into
sub
xchg
and
lock
and
sbb
inc
mov
fistpl
rolb
xchg
xor
pop
iret
roll
pushf
jno
cmc
insb
push
es
mov
insl
dec
cmp
stc
and
mov
test
into
loopne
test
jecxz
sub
dec
lea
mov
adcb
sub
pusha
jo
lret
nop
out
out
sub
xchg
jns
jge
mov
inc
or
sbb
andb
out
add
fnsave
addr16
push
std
cmp
aas
jmp
enter
and
xor
add
into
nop
fisubrl
push
push
aaa
fisubs
ret
dec
mov
pop
sbb
cli
sarl
pop
in
lds
fisubl
or
outsb
jb
xor
jae
sar
and
movsl
dec
cltd
mov
dec
sti
ss
push
mov
stc
and
or
fcmove
push
push
aaa
pushf
mov
fidivrl
or
fisttpll
cld
int3
dec
sbb
xchg
in
loope
pop
add
mov
pop
mov
cli
pop
add
cmp
sti
add
mov
clc
pcmpgtd
push
push
mov
jo,pn
fbld
aas
inc
stc
pop
mov
mov
or
sub
lret
inc
add
outsb
lods
stos
ljmp
mov
inc
sbb
out
loop
inc
addr16
in
push
icebp
outsl
in
mov
push
push
std
cmp
stos
scas
mov
popa
jbe
xor
cs
pop
jge
and
lock
das
and
xchg
adc
mov
push
test
jno
xchg
fwait
divl
ficoml
in
mov
pop
inc
push
and
popf
notb
stos
sub
xchg
jnp
lea
ds
pop
jmp
sbb
and
adc
ja
jb
or
jg
aam
dec
ret
sbbb
mov
sub
mov
mov
xor
pop
and
div
jmp
and
call
inc
push
push
repnz
fcmovu
mov
ss
add
rorl
dec
inc
sbb
notb
jge
mov
xlat
jecxz
leave
addb
jg
inc
xor
dec
xchg
xchg
jmp
stos
cld
insl
jg
cmp
sub
int
pop
iret
pop
jo
cmpb
into
shll
je
decb
insl
idivb
push
mov
jle
adc
iret
mov
xchg
mov
das
mov
stos
pop
stc
mov
jnp
addl
das
int
add
in
xor
sub
xor
inc
xchg
fmull
push
sub
dec
adc
sub
cltd
sub
test
scas
jg
and
jae
push
dec
mov
add
outsb
inc
fistpl
aas
and
or
mov
ljmp
adc
cmp
aad
mov
sti
or
adc
mov
shll
cmp
call
jne
int
mov
fstpt
loopne
mov
test
imul
mov
mov
aaa
jg
repz
mov
lock
and
test
xor
inc
cmp
nop
cmp
gs
fnstsw
movsl
push
pop
iret
into
int3
add
inc
mov
call
xor
std
push
sub
roll
adc
fisubs
add
mov
sti
jne
subb
push
vcvttpd2dqx
mov
mov
outsl
xor
rcrl
jne
xor
or
mov
inc
jbe
aad
lahf
addr16
inc
cmpsl
notl
pusha
dec
pop
mov
addr16
test
sarb
nop
push
aam
movsl
cli
mov
sbb
mov
es
jg
pop
jns
push
cmp
push
lods
cmp
clc
sbb
cmp
pop
jo
lods
xchg
jecxz
fnstcw
sub
popf
xor
out
pusha
mov
add
addr16
jne
and
call
rorb
loop
cmpl
leave
dec
into
fisubl
push
hlt
mov
xor
dec
pop
out
add
insl
arpl
es
push
mov
sub
mull
mov
cld
xor
ja
cmp
mov
adc
loop
jb
fsub
lods
insb
mov
ljmp
in
lock
or
xor
cmp
outsb
cmp
loope
adc
or
cmp
ss
jmp
stc
outsb
ret
mov
lock
jge
add
sbb
jmp
cmp
sub
mov
cwtl
xor
push
and
aad
xlat
xorl
repz
addr16
sti
or
dec
cmpsb
dec
mov
movsb
das
xor
inc
cmp
dec
cld
insb
aaa
popa
xor
repnz
cmp
test
pushl
xchg
sar
jno
fldl
out
cmpsb
jne
out
mov
iret
daa
dec
push
xor
add
mov
dec
aad
jnp
daa
outsl
scas
cmp
mov
sub
mov
decb
dec
sti
test
pop
loope
aam
addr16
bound
dec
push
jnp
mov
hlt
clc
mov
enter
test
fidivrl
push
lahf
cs
adc
mov
sbb
outsl
push
add
rcrb
shlb
sub
out
xchg
nop
push
cld
bound
leave
xor
fmull
mov
sbb
rol
jecxz
ret
cwtl
cmpsl
iret
add
jge
mov
lahf
and
sbb
je
pop
rol
mov
add
pop
add
in
jl
sti
inc
stc
jns
insl
call
inc
fmull
mov
xor
xor
xorb
and
jne
test
outsb
aad
sub
stc
xor
xor
les
push
adc
adc
and
mov
out
pop
or
shl
mov
pushf
xor
push
movsb
ja
pushf
mov
dec
adc
jbe
repnz
dec
cmp
hlt
push
pushf
jae
inc
pop
in
adc
mov
and
loop
cltd
cld
popa
and
xchg
iret
pop
pop
idivl
xor
dec
leave
incb
cmpsl
addr16
adc
aam
cmp
jae
arpl
js
mov
jmp
xchg
leave
push
sahf
add
cmp
lfs
add
jns
popf
int
fists
jno
mov
sub
das
outsl
pop
daa
xor
cmp
and
sub
jno
popf
inc
add
sub
iret
rorb
pop
ja
shlb
lods
out
insl
sbb
inc
ljmp
pop
addr16
mov
dec
xchg
jle
pop
jg
insb
cmp
test
cmp
push
loope
int
lea
es
jns
lret
aam
out
call
aam
fimuls
ljmp
xor
ss
cmp
xchg
mov
mov
push
addl
cmp
fdivl
push
cmc
jp
mov
pop
push
aaa
ds
mov
sbb
test
andl
add
into
push
mov
inc
rcll
and
pop
jmp
sub
push
stos
and
xchg
or
sub
test
cmp
inc
mov
jns
mov
pop
fwait
inc
into
stc
arpl
mov
xor
push
add
jns
mov
push
jo
mov
call
inc
dec
mov
ds
and
jb
dec
out
add
scas
sub
inc
and
loope
sahf
dec
mov
xchg
push
loope
rorl
push
and
bound
inc
test
int3
aaa
push
stos
xor
sahf
jmp
mov
or
or
sub
cmpsb
jno
int3
shll
mov
pop
iret
xor
mov
xor
cwtl
mov
mov
aad
lret
adc
jno
ljmp
sub
bound
hlt
sti
cmp
jmp
cmp
addr16
aad
movsb
inc
and
inc
iret
out
xlat
xchg
jbe
cmpsb
inc
adc
js
push
js
in
inc
and
movsb
into
inc
scas
idivb
mov
add
sub
inc
rcrl
inc
cmp
push
ret
and
add
shll
jp
sti
jl
sbb
jg
ftst
inc
push
inc
aam
sub
fistps
stos
push
fistl
pop
out
insl
push
cmc
js
leave
push
jb
xchg
inc
sbb
and
jae
xchg
lcall
dec
xor
pop
ficompl
lret
leave
adc
dec
repnz
jnp
lock
lods
adc
jb
sahf
popf
and
loope
cmp
cs
in
xlat
imul
sub
aas
dec
push
mov
cmp
js
push
sub
inc
fdiv
int
cmpsb
or
pop
lds
push
jns
out
loopne
daa
leave
stos
dec
jns
inc
push
jns
jl
mov
loope
or
push
ficomps
in
movsb
or
push
sub
cmp
adc
ds
test
xor
fwait
mov
enter
adc
aas
pop
mov
call
das
pop
leave
sbb
outsb
sti
repz
inc
scas
xlat
addr16
sub
insl
xchg
dec
sub
jb
imull
stc
jo
pop
shl
out
and
sbb
or
and
pop
ret
push
bound
jae,pn
mull
inc
cmp
dec
jno
pop
icebp
in
adc
test
rcr
jno
ss
jge
out
pop
bound
pop
out
mov
mov
fwait
sti
mov
mov
loope
imul
sbb
pusha
imul
jbe
fidivl
mov
lds
sti
add
repnz
div
roll
adc
cmp
in
decb
mov
cmp
adc
int
xor
hlt
mov
pop
enter
push
enter
je
les
fcoms
addb
jns
sti
xchg
xchg
cmp
push
rol
dec
cmc
dec
dec
fnsave
and
outsl
es
mov
xor
hlt
adc
sbb
mov
mov
lahf
cli
daa
mov
xchg
out
mov
loop
sbb
mov
cmpsb
adc
add
inc
sbb
arpl
xchg
ret
pop
movsl
pop
addr16
repz
mov
xchg
inc
test
push
sbb
xchg
inc
enter
fisubrl
lcall
mov
inc
sub
roll
inc
shrl
cwtl
lods
into
je
cmp
outsl
jns
mov
test
or
out
std
sbb
addr16
stos
xor
xor
push
cmp
jle
leave
gs
call
aad
sbb
dec
jp
sub
inc
repz
pusha
mov
or
dec
aad
mov
in
jne
imul
sub
jge
push
arpl
mov
aaa
jne
pop
loope
jno
sarl
inc
xchg
add
push
cmpsb
int
outsb
dec
xchg
add
in
xor
int3
cmpsl
jecxz
fs
rcrb
or
in
addl
shrb
add
cmp
mov
push
add
add
push
popl
inc
nop
pop
aaa
adc
scas
cmp
or
addr16
lock
aad
inc
fmuls
add
add
jo
pusha
lahf
out
in
repz
jge
xor
dec
iret
mov
repz
jge
inc
in
xor
mov
or
stos
pop
pop
aad
and
xlat
cmp
shl
jle
mull
movsl
push
cwtl
mov
adc
push
loop
mov
das
outsl
or
fdiv
rclb
mov
add
lods
xor
add
shll
xchg
loop
and
dec
push
icebp
fildl
push
mov
xor
xchg
or
setno
dec
mov
pop
cmpsl
ss
add
jne
test
ds
pop
sub
ljmp
pop
inc
hlt
les
lock
sub
or
and
lds
fimull
test
xor
cld
and
add
fcmovb
inc
enter
pusha
sub
jne
decb
pop
xchg
lods
je
ja
and
mov
sar
f2xm1
inc
inc
mov
jns
sbb
jp
flds
cmp
mov
push
or
adc
and
xchg
out
push
imul
sbb
jno
cmp
les
mov
clc
xor
dec
xorl
stos
test
stos
ficomps
sahf
sub
aas
xor
lods
rolb
jnp
mov
sub
cmp
rol
sbb
je
inc
jg
stos
xor
mov
cld
test
int
lcall
mov
dec
not
mov
mov
sbb
cmp
mov
pop
xchg
cld
cwtl
outsb
neg
sub
mov
enter
je
jae
dec
icebp
cmp
lds
cmc
push
and
adc
ret
jae
cmp
div
mov
sahf
sbb
leave
jns
lds
in
or
push
je
sbb
xchg
cmc
aad
aas
fidivl
pusha
sbb
enter
dec
loop
outsl
jmp
movsb
outsl
sbb
dec
aam
js
lcall
loope
pop
aam
pop
fwait
dec
xor
aaa
cmc
jno
jge
popa
sbb
inc
rol
inc
test
push
add
scas
rorl
iret
pop
cmpsb
cmovb
jecxz
sub
jecxz
insb
leave
inc
lods
cmpb
cmp
aas
push
das
push
inc
andb
xchg
stc
pop
cld
ds
sbb
mov
mov
lods
outsb
cmp
arpl
rorl
sub
adc
out
divb
mov
out
cmp
es
inc
shlb
shll
lret
add
jnp
loop
adc
orb
cwtl
jns
xchg
pop
push
popl
setg
pop
daa
in
test
int3
das
gs
dec
out
mov
adc
data16
push
jb
push
lock
mov
fwait
out
or
adc
das
rclb
addr16
inc
sub
jg
stc
adc
cmc
pop
ror
jmp
mov
cmp
dec
or
xchg
add
shrl
pop
mov
enter
push
in
adc
loopne
mov
movsb
add
inc
jbe
mov
mov
jmp
int
jl
mov
insb
sub
push
andb
jae
scas
xlat
pushl
jnp
and
mov
push
jno
ja
xlat
and
lahf
push
cmp
push
mov
inc
repnz
sub
in
fists
pop
call
mov
sub
test
sahf
pop
cld
insb
jns
mov
notl
mov
sbb
in
xorl
loop
inc
rorb
sti
mov
xchg
add
mov
clc
push
sub
gs
adc
push
xchg
and
push
dec
cmp
movsb
jl
scas
add
push
orl
subl
adc
std
push
sub
aaa
xor
mov
push
stos
jmp
push
sbb
lea
jnp
insl
cwtl
push
repnz
pop
or
stos
push
sbb
and
fdivl
xchg
jno
sub
inc
cmp
mov
sarl
aaa
aas
pop
mov
aad
dec
xchg
push
dec
pop
cmovnp
xchg
lods
mov
or
jmp
lcall
sbb
or
pop
jb
lock
lahf
push
jg
pop
xchg
es
movsb
icebp
pop
mov
fists
shlb
or
jnp
push
lock
bound
call
cltd
cli
dec
or
jl
ret
int
lret
pop
mov
inc
or
sub
or
mov
fildll
popf
cltd
test
cmc
sub
ret
cmc
xor
ret
lea
test
xor
mov
movsl
pusha
in
call
pop
jle
mov
xor
ficomps
sbb
mov
sarl
sbb
fdivs
sbb
adc
pusha
mov
icebp
inc
imul
pop
lock
push
and
sbb
cmpsb
sub
mov
push
mov
jle
cmp
sarb
in
test
dec
cld
out
jns
mov
pop
cmp
ret
ja
call
leave
loopne
cmp
call
mov
flds
xor
imul
mov
ret
cs
dec
dec
mov
imull
stos
lea
into
div
pop
and
popa
popa
sub
add
clc
inc
mulb
test
rcll
sbb
and
std
cmc
loope
cli
insb
test
sbb
push
mov
xchg
adc
jmp
xlat
mov
cwtd
movsl
jbe
pushf
dec
pop
add
mov
or
ss
lret
push
push
xchg
jae
scas
mov
in
push
jecxz
xchg
aad
cmc
xorb
adc
push
adc
pop
int
push
lock
cmpsl
mov
cli
movsb
dec
test
mov
cltd
je
jae
push
ret
pop
fimuls
cs
into
bound
adcb
repz
pusha
add
inc
cwtl
in
in
and
cwtl
xchg
ljmp
push
jle
push
mov
inc
dec
and
mov
mov
adc
sub
xchg
xchg
mov
je
fwait
xor
pop
xrelease
push
add
dec
movsl
xchg
data16
pop
cmp
cltd
sub
xor
adc
shlb
mov
in
jne
addb
jmp
leave
and
push
mov
es
shlb
or
out
xchg
dec
outsl
sbb
push
inc
mov
inc
adc
mov
sahf
rol
icebp
inc
sahf
jno
lcall
mov
push
outsl
scas
mov
push
enter
dec
cltd
ret
inc
iret
enter
jl
push
cmp
jb
dec
out
gs
jp
jp
xlat
xor
fnstcw
testb
inc
int3
xchg
cmp
ljmp
lds
push
popa
or
inc
loopne
lods
xor
add
out
add
rcl
fmulp
add
hlt
cli
mov
xor
mov
pop
cwtl
scas
test
lods
aaa
stos
div
lock
jge
test
clc
cltd
cld
push
fnstenv
mov
sub
aad
test
das
cmp
cmp
sbb
and
inc
mov
mov
arpl
push
or
push
pop
test
push
pop
mov
inc
pop
xchg
rclb
pop
xchg
in
mov
call
and
int
into
pusha
jb
push
mov
out
xchg
dec
inc
push
add
jae
aas
les
xor
orb
adc
mov
insb
push
test
inc
lock
sbb
dec
sbb
aam
dec
rclb
fnstenv
push
mov
and
xchg
mov
popa
and
cmp
sbb
xor
sbb
mov
and
stos
leave
add
and
xchg
jmp
lds
sbbb
inc
adc
cld
inc
push
daa
dec
adc
xor
and
lcall
xchg
sbbl
dec
mov
cwtl
shlw
and
lods
test
std
icebp
in
push
enter
jbe
adc
rcrl
mov
xchg
sbb
fsubs
mov
inc
stc
mov
in
dec
not
cwtl
sbb
inc
insl
leave
mov
ljmp
loope
or
filds
sbb
ret
jl
jecxz
es
add
mov
sbb
mov
incb
push
shlb
lret
in
lcall
or
sbb
sbb
enter
and
fidivs
outsb
fiaddl
sub
ds
lcall
stos
lret
add
cvtps2pi
dec
dec
insl
mov
rorb
test
rcr
scas
imul
or
jecxz
pop
ret
mov
adc
test
inc
sub
lock
int3
insl
das
or
insb
mov
mov
xchg
pop
push
push
dec
call
mov
les
aam
lcall
sbb
ja
adc
lea
scas
push
xlat
rorl
sahf
xchg
out
repz
adc
or
lahf
addr16
jg
insl
iret
les
push
adcl
loope
jge
je
popa
inc
mov
dec
out
sbb
mov
loop
lret
ljmpw
pop
sbb
imul
scas
movsl
mov
xchg
jp
pop
push
rcrl
sub
pop
ljmp
lahf
push
mov
adc
xchg
dec
sbb
jg
dec
inc
dec
sub
sub
inc
xchg
sbb
imul
cld
xchg
inc
adc
adc
mov
push
or
out
sub
lock
les
ja,pn
fiaddl
xor
cmpsb
cmp
jg
xor
and
push
jl
in
mov
cmpsl
dec
cmp
add
test
add
add
insl
pop
sub
push
fucomp
add
or
add
insl
mov
jmp
jl
adc
stos
xor
xchg
frstor
cmp
pop
xor
shrl
mov
fdiv
xchg
in
out
push
cltd
sbb
inc
lahf
pop
push
stos
test
mov
inc
insl
jle
mov
hlt
mov
icebp
ret
mov
adcl
inc
out
shl
adc
sub
outsl
dec
xchg
jo
ja
push
movsb
jne
inc
cmpsb
test
push
adc
jmp
mov
inc
mov
out
pushf
hlt
call
mov
mov
mov
jmp
fsubl
xchg
daa
lret
adc
bound
fs
sbb
fcomps
mov
cmpsl
popa
pop
negl
adc
pusha
fwait
test
cli
cmp
inc
jns
leave
mov
mov
and
stos
push
iret
pusha
imul
mov
xchg
pop
sar
pop
popl
js
or
mov
jbe
faddl
adc
sbb
push
or
cmp
or
and
cmpsl
fidivl
sbb
jo
xchg
mov
test
ja
daa
sub
jg
add
lods
dec
int
push
push
imul
push
lods
shl
sahf
cltd
cld
mov
inc
cmp
pusha
xchg
outsl
xchg
inc
push
loopew
call
out
int3
aad
jg
lret
fs
push
lods
lods
fcmove
push
lcall
popa
xchg
mov
sbb
rcl
data16
mov
arpl
rcr
aaa
mov
add
adc
in
adc
test
push
out
mov
push
xchg
inc
filds
or
sbb
repz
and
ffree
sahf
ret
cmp
dec
fldenv
rcrl
mov
mov
jb
dec
scas
ret
imul
or
add
pop
scas
scas
cmpsl
adc
xchg
sub
arpl
inc
jl
cmp
imul
pop
pop
nop
and
inc
fdivs
call
ret
pusha
cli
mov
mov
xchg
rcrb
lods
xchg
mov
sbb
xor
mov
push
aaa
xor
sbb
inc
je
jns
mov
in
mov
add
or
cmp
les
dec
das
mov
loopne
mov
out
outsl
sub
int
sub
shlb
sbb
add
repz
cwtl
ret
lahf
or
pop
xchg
pusha
jle
out
mov
push
jo
pop
pusha
xchg
push
sub
daa
jg
fsubl
sbb
mov
and
iret
or
jae
pop
ret
mov
cmp
mov
fimuls
adc
or
ret
mov
sbb
push
fnsave
mov
pop
and
dec
sti
push
xchg
divb
imul
sub
into
xchg
mov
sub
xchg
mov
sbb
jg,pt
xor
psubsw
sub
rcrb
push
xchg
aam
mov
repnz
lea
xchg
or
mov
cld
or
fbld
cwtl
leave
mov
pop
jns
push
cmpsl
cmpsl
leave
call
pop
xchg
test
sbb
pop
loopne
push
mov
dec
push
adc
jg
and
inc
and
cmp
movsb
subl
or
es
imul
pop
inc
fisttpll
mov
push
sbb
mov
cmp
sbb
jp
cmp
cmpl
gs
push
sbb
jne
leave
xlat
cwtl
xchg
cli
in
mov
inc
push
in
imul
add
addr16
fcoms
jecxz
push
out
push
jnp
mov
add
cmc
mov
xor
and
pop
jo
bound
call
mov
push
jp
je
int3
ljmp
xchg
daa
in
and
and
call
je
adc
push
push
sbb
jecxz
out
jo
aad
stos
jg
cs
jns
push
fadds
cmp
lcall
jge
fs
or
aad
inc
mov
mov
notb
push
pusha
pop
mov
dec
js
es
push
hlt
and
lahf
push
xchg
imul
ret
adc
xchg
cli
shll
popa
sti
int
pusha
sub
popf
shl
scas
out
ror
iret
insb
mov
fst
dec
out
push
ljmp
xor
out
mov
jne
or
lods
aad
or
xlat
mov
jp
adc
sbb
xchg
in
inc
dec
sahf
call
fcompl
xchg
mov
push
mov
lods
les
fistpll
icebp
jl
sub
jecxz
add
or
pop
stos
sbb
rcrb
push
mov
jnp
add
cmp
and
out
popf
inc
gs
mov
arpl
mov
imul
fwait
or
and
xor
jne
sub
mov
div
mov
shlb
add
test
into
jle
add
pop
rol
subl
fnstsw
scas
ret
mov
mov
mov
loop
movsl
jge
or
movsl
mov
sar
test
push
adc
sbb
subl
push
icebp
mov
jecxz
dec
or
lds
movsl
movsl
clc
jnp
mov
int3
xchg
lock
xor
jo
test
leave
adc
into
mov
ss
mov
adc
mov
pop
cmp
adc
outsb
addb
add
lcall
mov
loopne
call
in
xor
jb
mov
scas
arpl
push
cli
cmc
cmp
inc
out
aad
mov
ret
cmpsb
pop
or
data16
nop
mov
flds
jg
cmp
jecxz
sbb
adc
or
push
inc
pusha
and
ds
sar
xlat
xor
out
enter
aaa
mov
adc
outsl
repnz
adc
xchg
adc
mov
or
sbb
jno
outsl
lret
bound
adc
mov
mov
mov
jae
pop
dec
or
stos
mov
xchg
shr
push
xor
stos
sub
sbb
push
lea
sti
gs
xor
sahf
das
sahf
outsb
and
mov
fistps
movzwl
lret
mov
lds
push
push
sahf
lea
mov
ret
mov
inc
rclb
push
or
cmpsb
adc
and
aad
lds
mov
mov
xchg
scas
pop
sbb
popa
imull
mov
imul
mov
lret
adc
sbb
icebp
add
movups
outsl
jne
or
sub
lods
lret
cmp
das
inc
icebp
rcpps
shl
inc
je
imull
pop
push
xchg
xchg
mov
mov
iret
jecxz
add
aam
addr16
mov
andb
jno
push
jge
test
cmc
imul
sbb
ds
in
sub
mov
xchg
iret
sub
push
mov
ja
mov
arpl
mov
ret
inc
dec
mov
cs
mul
or
mov
jnp
out
mov
jmp
dec
mov
mov
ds
movl
cmpsl
aaa
xchg
jbe
cmp
push
call
jmp
mov
push
iret
outsl
aaa
les
lods
test
push
imulb
scas
nop
fisubrs
xor
scas
lock
decb
inc
je
or
lods
test
sub
out
sbb
mov
nop
std
cmpsl
xlat
adc
or
aad
dec
jle
push
cmp
or
sahf
pusha
rorb
ljmp
pop
rcl
cmp
sbb
or
and
std
mov
adc
inc
and
xor
jg
mov
xchg
jp
sub
cltd
out
iret
sbb
sbb
jbe
movsl
jmp
pop
sub
scas
fwait
and
loop
scas
sbb
std
push
jae
cs
das
xchg
adc
les
sarl
lahf
lods
imul
jns
in
lret
pop
push
loop
or
pop
pop
ret
mov
mov
fdivs
jb
andl
push
mov
cmp
jbe
in
fcmove
fsubl
push
ss
fwait
shl
jo
jle
out
sub
dec
xchg
mov
addr16
in
fsubl
jle
or
and
mov
nop
aad
xor
shrl
ret
adc
call
jp
movhps
sub
pop
popf
into
inc
fbstp
test
jmp
shll
in
push
int3
inc
cli
es
out
jl
xchg
aad
orb
fs
push
adc
out
je
lcall
sbb
jne
mov
mov
iret
rorb
iret
gs
mov
negb
jns
mov
testb
repz
dec
stos
rorl
inc
mov
jnp
mov
cmp
out
pop
jmp
and
xchg
push
ret
sahf
call
adc
gs
test
out
test
xchg
xor
add
jmp
xchg
mov
push
nop
pop
mov
mov
jecxz
xchg
cmpsl
mov
fbstp
ret
push
adc
fmull
xchg
and
mov
mov
pop
mov
lock
sub
filds
push
insb
and
mov
imul
imul
into
fnstcw
inc
out
mov
out
mov
pop
lret
out
sbb
pop
loopne
in
mov
dec
rcrb
cmp
sbb
sbb
sub
jo
sub
sub
testb
push
mov
cmp
xor
xorl
pop
or
fiaddl
jnp
xor
fwait
into
and
jns
mov
int
and
std
and
dec
or
fiaddl
fisubl
lock
cmpsb
push
xchg
imul
std
repnz
push
inc
dec
fwait
sbb
inc
imul
test
out
dec
and
cmpl
insl
lea
adc
lock
fildll
pushf
pop
imul
pop
inc
cmp
sahf
jb
push
mov
mov
jns
inc
cmp
or
movsb
fs
mov
xor
xor
icebp
pop
inc
cmp
ret
iret
pop
pop
es
pushf
cmp
add
pop
in
jne
mov
xchg
cmp
inc
jae
xorl
fistpl
leave
sbb
lods
jns
or
leave
lds
jae
fcoms
addb
or
xchg
mov
clc
push
inc
aad
in
cmpsl
xor
mov
cmpsl
mov
icebp
in
push
lret
cwtl
pop
popa
outsb
aaa
pushf
enter
mov
inc
push
inc
xor
mov
cwtl
jge
push
cwtl
movsb
das
lods
fmulp
addr16
xchg
ret
inc
xchg
sub
jbe
shll
push
pop
ss
hlt
lret
pushf
sti
add
fisttpl
push
lahf
iretw
inc
std
push
aam
dec
lahf
in
es
test
sub
or
ret
push
mov
outsb
in
inc
sqrtps
sbb
mov
outsl
dec
xor
in
push
dec
and
mull
ret
test
es
xchg
or
and
xchg
es
into
mov
lahf
inc
sbb
mov
add
scas
sub
iret
and
xchg
mov
and
fs
push
inc
push
push
iret
xor
pop
xchg
shll
bound
btr
cwtl
or
cmp
sbb
xchg
jae
push
test
imul
mov
pop
loop
push
xor
rolb
add
add
aas
pusha
or
xor
syscall
push
cld
stos
mov
mov
enter
or
cmpsl
mov
into
shll
sti
cld
orb
pop
xchg
lea
cmpsb
cmp
in
cmp
lds
pop
mov
mov
leave
out
and
or
mov
sbb
add
scas
insb
mov
and
sbb
inc
and
lret
or
nop
pop
stos
sbb
icebp
sti
mov
mov
es
push
pop
shrl
lods
nop
out
rcr
fildl
outsb
ficoms
orl
add
mov
ds
es
sbb
and
xchg
inc
pop
fistpl
or
pop
push
or
jle
mov
popf
jp
enter
mov
rorb
aad
nop
add
mov
mov
adc
out
sub
mov
sub
cmpsb
xlat
jno
jnp
in
rcrb
mov
cmp
xchg
fs
je
mov
mov
pop
xor
xor
dec
pop
push
push
cli
addb
enter
shrb
and
mov
mov
pusha
stos
xchg
fdivr
aad
idivl
lods
mov
inc
mov
or
lods
pop
repnz
pop
jle
aaa
push
arpl
fwait
mov
in
jl
adc
xor
ss
or
test
dec
xor
sbb
sbb
std
fadd
imul
sbb
push
test
dec
test
loope
cmpsl
sub
jge
mov
push
xchg
mov
addr16
sub
pop
pop
scas
and
mov
pop
fists
in
pop
inc
mov
outsl
jle
add
lret
test
sub
arpl
bound
movsl
sub
inc
sbb
adc
imul
cmp
sahf
aas
or
hlt
imul
mov
pusha
lcall
daa
sub
scas
adc
mov
lods
popa
mov
mov
mov
cmp
enter
insb
and
sub
test
cmp
fistpll
sbb
jae
sub
iret
ds
cld
add
mov
cmp
pop
test
push
aaa
pop
push
les
rorb
jno
fnstenv
in
inc
repnz
xchg
pop
inc
fsub
inc
neg
pop
into
push
outsl
movb
adc
imul
jmp
mov
aas
jmp
imull
ds
inc
das
ljmp
push
and
inc
jno
insb
rcl
fs
call
pop
xchg
jb
es
repnz
add
mov
lret
clc
xchg
cmpb
rclb
mov
mov
mov
jnp
loopne
sahf
pusha
jl
jecxz
cmc
roll
es
mov
pop
cs
pop
shlb
jecxz
lock
rorb
jnp
int
fprem
sahf
sub
inc
lahf
test
aam
std
rcrl
jae
div
pop
jg
sub
int
leave
mov
push
xchg
mov
repz
pop
out
leave
mov
je
subb
lret
ja
jb
mov
add
xor
in
push
adc
or
iret
mov
and
bound
push
popa
mov
cmc
sbb
mov
mov
aad
xchg
xchg
push
xor
sub
fsin
clc
dec
mov
sbb
adc
sub
fdivrp
mov
movl
xchg
mov
in
pushf
pop
dec
es
into
cs
jnp
mov
fcmovu
add
mov
pop
loopne
les
out
pop
sahf
fadd
cmp
xchg
add
andl
cmpsb
push
test
sub
push
in
into
add
cmpsb
pop
xor
pop
inc
add
push
jp
fmull
cwtl
pop
push
sbb
test
mov
inc
into
in
in
push
xchg
xchg
sub
das
xor
js
jle
xchg
movlps
fidivl
int3
pushf
cltd
pop
sbb
jb
push
cltd
popf
jae
xchg
push
fsubl
in
sbb
or
add
call
popf
sarl
push
fs
fnsave
and
lahf
test
adc
adc
lahf
fisttpll
rorb
lock
jmp
std
and
jle
arpl
nop
cmpsl
mov
xlat
lret
stos
mov
inc
mov
das
fsubrl
adc
in
fiadds
dec
fbld
aas
hlt
outsb
xlat
pop
sbb
into
mov
in
sbb
mov
daa
jp
popa
jmp
call
mov
push
sarb
lds
stos
and
cwtl
aaa
stos
in
add
in
inc
mov
adc
dec
rolb
mov
je
pop
xchg
xchg
fisubl
jecxz
jl
sub
clc
js,pn
fld
xor
rcll
xor
jecxz
mov
fcomip
cmp
js
roll
push
jns
add
scas
push
xchg
fisubrs
enter
push
fdivs
insl
in
ja
xchg
dec
dec
enter
outsl
in
inc
mov
arpl
xlat
stc
sbb
jl
mov
mov
mov
cmc
push
outsl
sub
inc
stos
pop
mov
push
mov
mov
rcl
mov
into
pop
fidivrl
aaa
sub
adc
dec
hlt
inc
pop
or
in
out
js
fiadds
mov
or
ds
push
push
add
jb
sbb
xor
je
rorb
push
xor
mov
lcall
dec
mov
stos
insb
and
fsts
jno
dec
js
pop
fadds
cld
add
pop
push
daa
arpl
adc
lret
ret
xor
lret
hlt
dec
int3
dec
dec
mov
cmpsb
fisubs
inc
nop
dec
push
lret
fwait
and
xor
push
sbb
dec
and
push
push
add
popf
mov
adc
pop
and
imul
in
add
push
push
ret
push
ficomps
pop
divb
cltd
or
mov
mov
mov
mov
mov
sub
inc
xchg
ret
add
mov
xchg
in
ljmp
cmp
push
mov
xor
orb
iret
sti
shlb
jg
cmp
imul
aad
shll
sti
add
cmpsl
int3
jnp
ljmp
movsl
mov
xchg
andb
fsubl
fimuls
pop
cs
cmpsl
mov
imul
mov
test
push
addr16
push
inc
sbb
push
pop
pushf
sub
mov
adc
push
aam
std
cmp
push
js
cs
mov
or
mov
repnz
in
jbe
jns
pop
out
pop
js
aas
add
fsub
fadd
sub
pushf
adc
adc
adc
rolb
fldenv
fcompl
pushf
xor
sbb
lds
popf
add
push
push
and
cli
mov
mov
fisttps
cwtl
test
mov
adc
inc
imul
scas
out
mov
mov
dec
out
in
scas
ret
and
sahf
mov
data16
jns
cmc
stos
int
lret
push
and
inc
xor
push
sub
mov
imul
clc
arpl
inc
iret
stos
add
ss
push
sub
and
mov
adc
adc
mov
daa
stos
xlat
xor
jo
cmp
push
sbb
inc
push
pop
push
arpl
sbb
sbb
nop
outsl
lcall
vsqrtss
mov
lea
mov
aad
mov
adc
stos
rorl
sub
inc
ret
movsb
sbb
aaa
dec
ret
mov
push
data16
int
dec
jb
xchg
sti
mov
sub
adc
mov
push
not
cmpsb
imul
push
lock
out
pop
in
lea
jp
xchg
cs
pusha
or
adc
iret
leave
push
les
mov
fwait
push
movsb
imul
adc
cmp
adc
fs
adc
test
jo
cwtl
pop
ljmp
test
adc
lds
lcall
movsb
inc
cs
mov
adc
fiaddl
das
mov
cmpsl
pop
fs
inc
cmp
or
adc
push
mov
push
outsb
sahf
lret
inc
and
aaa
jmp
jnp
xchg
es
stos
outsl
and
es
ror
push
inc
push
loope
cmp
call
inc
or
cld
js
ss
jnp
jmp
push
push
sbb
movsl
mov
out
and
cwtl
lahf
shlb
inc
fistl
mov
mov
push
sbb
jp
dec
fcmovnu
sbb
xlat
add
into
xor
xchg
fstpt
loop
mov
out
fnsetpm(287
jae
or
push
lods
jbe
dec
data16
test
ljmp
inc
ret
out
pop
jge
mov
lret
xor
cltd
je
or
xchg
xor
aaa
fistpll
enter
cmpb
lahf
mov
es
jae
jg
shrl
mov
pop
cmpsl
jo
pushf
outsl
cmpsb
bound
add
sub
iret
repnz
das
insl
pop
rcrl
mov
jp
and
sub
ljmp
mov
shlb
and
mov
test
jp
lret
pop
mov
mov
sti
lods
mov
mov
push
pushf
out
or
add
push
mov
iret
pop
fstl
test
je
sbb
test
lock
ljmp
xorb
sbb
sbbl
aaa
js
inc
adc
xor
ss
mov
iret
aam
inc
ret
int3
outsb
xchg
in
mov
inc
add
xchg
xchg
mov
cmp
repz
mov
inc
push
mov
pop
mov
mov
out
cmp
jo
and
leave
add
out
aaa
jbe
shll
insb
cmpsl
test
jnp
inc
xor
seto
dec
adc
jno
mov
ja
in
ja
arpl
test
popa
shrl
jb
mov
pop
xor
jbe
cmp
cmpb
stc
add
int3
push
mov
aam
dec
and
ret
add
push
lods
cmpsb
inc
or
and
std
popf
inc
mov
mov
in
int
xor
into
dec
addr16
inc
mov
and
sub
clc
cld
xlat
aam
and
jne
ds
js
dec
stos
aam
addr16
loopne
rolb
xor
lds
jae
mov
pop
test
sub
movsl
insl
pop
mov
ficomps
enter
sub
push
jns
pop
cltd
push
inc
pop
and
call
mov
out
mov
leave
pop
in
xorl
pushf
pop
sub
shll
ret
lock
inc
dec
xchg
mov
jge
add
in
ss
add
push
xchg
mov
addl
xor
cltd
addr16
test
cltd
aad
cmpsl
cmp
xchg
mov
stos
out
mov
mov
xchg
push
mov
push
jae
mov
mov
lret
rolb
out
lret
fstp
push
mov
js
sub
mov
xor
mov
inc
jle
pop
pop
fs
push
jge
pop
sub
push
pop
pop
or
test
push
test
scas
test
or
das
aam
insb
mov
jae
in
mov
dec
sar
lahf
mov
adc
fwait
inc
sbb
jle
ss
push
adcl
inc
popl
push
xor
lods
sbb
mov
mov
lods
sbb
add
insb
sarl
push
loop
into
inc
inc
mov
dec
adc
and
shll
pop
sbb
inc
dec
sub
push
dec
sbbb
xor
fdivl
out
testb
xor
sub
add
call
push
gs
frstor
and
icebp
loop
mov
mov
into
mov
adc
iret
cld
xor
pop
jecxz
popa
int
add
pop
push
xchg
mov
in
or
stc
les
hlt
jne
ret
adcl
shl
xchg
xor
outsl
gs
xchg
fcompl
lahf
sar
push
in
and
loopne
inc
fstl
mov
mov
sub
push
ss
push
pop
push
jnp
in
iret
hlt
pop
je
out
call
out
int3
mov
mov
insb
or
adc
mov
add
mov
inc
lea
jnp
stos
sbb
rorb
and
pop
mov
fbld
add
lea
arpl
push
and
sub
int
clc
stos
xchg
scas
loop
cwtl
pop
mov
enter
stos
or
lea
xchg
xor
shrl
and
dec
or
jg
pop
mov
ljmp
sbb
ret
cmpsb
xchg
push
xor
daa
jle
outsl
mov
adc
dec
xor
dec
aas
dec
test
sbb
nop
popf
jl
adc
test
shlb
mov
outsl
push
fsub
ljmp
mov
scas
sub
mov
sbb
jo
push
hlt
push
inc
push
testl
fldt
mov
jno
int
dec
fcoml
testl
not
int3
add
cmp
sub
inc
pushf
push
mov
inc
jns
sbb
test
lret
mov
pop
fimuls
in
push
cmp
stos
mov
xor
mov
movsl
je
je
xor
push
dec
and
aam
int
mov
insl
push
int3
mov
stos
ret
mov
or
movsb
push
loope
ljmp
xchg
sub
sub
sti
je
cltd
fwait
test
test
xor
adc
mov
add
andl
arpl
cmp
jnp
cmc
repz
cmp
push
adc
pop
cwtl
mov
out
or
xchg
jp
pop
inc
mov
repnz
pop
sahf
clc
mov
nop
inc
and
mov
stos
or
rol
fcomip
cmc
adc
ret
cmpl
mov
push
fiadds
adc
lods
dec
inc
fs
lock
and
outsb
xchg
and
push
sbb
adc
cmp
lcall
add
sbb
jp
fwait
dec
mov
aas
add
aam
cltd
subb
jl
daa
mov
push
cmp
cmpsb
pop
fimull
fsubs
test
ja
mov
mov
es
mov
fimuls
fwait
cmp
negb
inc
inc
jmp
or
sahf
cmp
and
in
out
into
sub
dec
call
test
mov
pop
pop
pop
dec
dec
xor
mov
test
sbb
and
jecxz,pt
test
mov
mov
push
pop
nop
and
mov
mov
test
in
aam
mov
mov
test
icebp
or
loope
lock
fucomip
mov
cmp
jae
xchg
mov
ljmp
xor
and
sbb
loope
test
cs
xlat
repnz
outsl
mov
insl
in
cmp
add
sub
movsb
movsb
cmp
sbb
cmpsb
sub
aaa
orl
pop
das
mov
mov
pop
add
mov
add
lods
out
jp
and
pop
ds
push
mov
or
push
in
pop
mov
mov
into
out
and
dec
lock
sub
adc
aaa
leave
jnp
or
daa
das
mov
outsb
out
cs
mov
xchg
xchg
lahf
dec
or
ja
bound
jg
mov
scas
xchg
and
cmp
aas
push
or
inc
jl
mov
out
enter
sti
push
shll
push
scas
pop
cmp
fwait
push
adc
mov
jp
shr
xchg
or
mov
push
push
aas
aad
shlb
ret
dec
pop
in
mov
push
pushf
push
jmp
cmp
stc
loop
xor
ja
push
lods
push
and
cli
gs
mov
mov
mov
aad
mov
popf
mov
and
scas
xor
stos
aaa
sar
popa
jecxz
cmpsb
addr16
or
cmp
or
fstpl
flds
jp
popa
mov
imul
xchg
outsl
push
xchg
outsb
pop
push
sub
scas
xchg
xor
test
sbb
test
subb
xchg
scas
cmp
sub
cmpsb
sbb
sahf
bound
inc
scas
mov
and
scas
aas
shrb
rcrl
daa
cli
fwait
add
sub
xor
das
test
in
repnz
jae
fucomp
push
jne
cmp
mov
jge
mov
jp
cli
ja
test
in
mov
mov
mov
dec
jle
sbb
leave
jo
xor
cmc
adc
outsb
xor
sarl
aas
pop
leave
outsl
add
pusha
push
push
mov
mov
jle
test
iret
push
fmull
fcoml
sub
dec
and
lret
mov
dec
cmpb
jp
adcl
adc
cli
push
jg
bound
adc
mov
xor
imul
push
push
scas
ljmp
fisubl
push
sahf
pop
jg
ljmp
mov
sub
dec
inc
cs
stos
xlat
sub
int3
push
scas
scas
adc
mov
push
inc
pop
in
cmp
in
out
ds
adc
inc
movsl
cmp
push
cmpsb
in
hlt
or
test
cmp
in
cmp
cmpsl
movsb
jno
pop
cwtl
jp
sbbl
icebp
lea
push
cmp
pop
xor
enter
xchg
repnz
mov
insl
lods
jae
cmp
mov
pusha
ja
cmp
jg
lock
movntps
in
arpl
xchg
adcl
out
cli
or
imul
inc
into
mov
sbb
aam
dec
ficompl
out
sub
lret
movsb
mov
pop
into
arpl
push
dec
xor
sub
fsubrl
ficompl
sub
push
xchg
dec
outsl
or
xor
mov
mov
cmpsb
mov
lret
add
mov
push
repz
into
fcomps
adc
jns
dec
mov
inc
sahf
jns
fisubs
rcrl
test
inc
adc
inc
gs
push
popa
mov
enter
dec
mov
lret
dec
push
outsl
push
cmp
dec
mov
pop
imul
xor
ja
jnp
negl
or
mov
cmp
std
sti
imul
sarb
push
push
mov
cmp
sbb
lea
inc
push
jp
jle
cmp
mov
adc
popf
mov
test
into
add
dec
hlt
int3
mov
jne
sub
xchg
into
addl
loop
push
das
roll
lods
imul
dec
lea
xchg
icebp
or
fisttpl
lret
subb
in
in
push
xchg
stc
imul
jmp
sbb
inc
lods
testl
cs
push
push
in
cmp
outsl
push
pop
push
jno
sub
xchg
lahf
dec
adc
fcmovne
mov
fisttps
mov
in
repz
out
ljmp
mov
xcrypt-cbc
cmpsl
push
dec
push
pop
outsb
mov
sub
xchg
data16
sahf
jmp
das
mov
lcall
mov
mov
hlt
in
cmp
xchg
mov
aas
push
xchg
pop
adc
mov
std
mov
inc
lret
jmp
cli
scas
cmp
cwtl
iret
cld
or
or
xor
sbb
adc
mov
ret
add
fldl
xchg
dec
inc
sahf
iret
xchg
pop
test
imul
cmpsb
mov
xchg
movsl
sbb
xor
cs
and
mov
jl
fwait
sbb
dec
loop
mov
push
in
xor
or
bound
rcll
jp
jbe
cs
add
negl
or
mov
pop
cli
cmp
pusha
push
dec
pushf
push
or
mov
imul
jg
icebp
imull
jmp
sub
das
stos
addr16
pop
mov
or
mov
fsubl
leave
add
repz
popa
adc
xchg
ror
mov
mov
aaa
push
or
aas
lahf
rcl
cmc
and
outsb
imul
ret
imul
pop
cwtl
mov
and
in
sarb
mov
mov
pop
sub
mov
fucom
imul
seto
fisttpll
xor
loopne
sahf
xor
imul
ret
jne
lods
dec
or
test
mov
fs
or
xchg
xchg
repz
xor
call
and
add
shrl
xchg
or
dec
in
in
jo
in
test
loopne
xlat
mov
xchg
mov
jnp
or
jbe
and
and
out
adc
pushf
scas
add
mov
daa
divl
test
jbe
lret
mov
pop
dec
pop
ret
push
inc
lea
mov
decb
inc
leave
mov
mov
sbb
les
adc
in
mov
cs
cmp
pop
ljmp
pusha
mov
mov
mov
mov
shll
fbstp
jl
mov
cld
lea
jmp
jmp
cmp
cltd
mov
inc
daa
test
imul
scas
or
fwait
pop
insb
xchg
adc
jne
or
add
lret
scas
bound
cmc
xchg
movsl
cmp
daa
add
jno
das
mov
mov
lret
adc
and
inc
push
dec
ja
push
shrb
push
mov
movsb
jecxz
or
jns
push
pop
std
and
fwait
mov
and
movsb
push
out
jmp
sarb
pop
mov
push
cwtl
or
jle
mov
lods
mov
mov
mov
fdivrs
mov
ljmp
jecxz
jae
sub
lea
test
bound
push
xor
rcl
cmp
shlb
cmpsl
sbb
test
adc
mov
into
lahf
push
shlb
cs
imul
shlb
out
ds
imul
mov
and
pop
inc
scas
stc
or
lock
jno
add
in
pushf
lods
or
loop
push
int
imul
sbb
push
xchg
iret
or
fldt
mov
stc
cmc
pop
dec
push
push
and
fstl
outsb
push
jp
fldenv
inc
and
push
popa
push
loop
in
std
cmp
xchg
int
loope
mov
repnz
pop
xor
mov
sub
inc
jne
rolb
add
jae
cmp
mov
xchg
sbb
push
enter
cltd
add
das
mov
sub
pop
push
xchg
jno
sarl
insl
cld
or
xor
lods
repz
sbb
addr16
and
jae
mov
enter
push
cmp
lock
ror
add
push
jle
lcall
mov
push
sbb
adc
push
dec
mov
adc
mov
xchg
jo
movsl
imull
cwtl
lods
sub
std
mov
test
sub
les
loopne
pushf
fwait
sbb
jge
adc
jl
xor
out
pushf
or
inc
not
mov
out
clc
ja
mov
gs
pop
and
push
repz
xchg
mov
int3
scas
jbe
aad
pop
nop
dec
movsl
cwtl
sub
mov
popf
and
scas
and
jle
rclb
into
mov
inc
cmc
addr16
fdivrs
sbb
push
test
pop
das
jle
add
xor
push
sbb
push
pop
insl
pop
mov
mov
aaa
add
xor
pop
add
pop
outsb
xchg
ret
and
mov
nop
pop
push
dec
mov
out
cmp
mov
xlat
lea
mov
jo
nop
fwait
in
out
in
js
sbb
or
adc
adc
cltd
mov
stos
sti
ja
repz
mov
into
xor
inc
mov
test
pop
jecxz
stos
sarl
aaa
cld
jne
test
into
sbb
sub
pop
mov
fimull
pop
rorl
jge
outsl
aas
fnstsw
dec
jg
icebp
subb
jecxz
mov
fsubr
pop
jb
repnz
daa
lcall
popf
and
int3
lcall
inc
dec
jnp
mov
sbb
or
cmp
jmpw
dec
fs
orl
adc
sarl
loopne
mov
jmp
in
push
mov
mov
jp
add
add
dec
dec
or
xor
adc
arpl
adc
lea
rorl
mov
fs
imul
xor
xchg
adc
cmp
mov
cmp
mov
sbb
pushf
jno
mov
or
mov
xchg
push
push
sbb
lret
mov
lock
pushl
mov
mov
int
jl
mov
mov
notl
pop
mov
adc
repz
outsb
adc
movsl
cmp
xor
jmp
adc
push
stos
xchg
mov
je
jmp
or
and
sbb
lahf
popa
xor
sub
out
repz
mov
push
in
and
bound
xchg
mov
inc
push
fisubrs
out
mov
lret
or
adc
aad
and
imul
mov
push
mov
jne
cwtl
pop
fdivrl
inc
dec
outsl
jne
cmp
xchg
jmp
or
adc
outsl
sub
outsb
inc
mov
ja
xor
rolb
xchg
cltd
loopne
dec
lds
pusha
inc
insb
mov
pop
cmp
or
adc
leave
iret
and
mov
int3
test
mov
outsb
sub
push
and
mov
cmp
shr
outsl
mov
jp
shrl
enter
fistl
shrb
xor
xor
xchg
adc
loope
filds
cli
in
pop
inc
cs
rol
adc
cli
add
dec
cld
jecxz
stos
ja
cmp
clc
in
pop
mov
or
fldenv
cmp
fwait
into
pop
jp
xchg
lods
pushf
mov
or
fsubrl
push
stos
push
sarb
adcl
out
mov
or
lret
aaa
sbb
loope
add
xor
pop
mov
arpl
jge
aam
mov
fcom
sbb
dec
xor
fidivrl
pop
arpl
sub
daa
xchg
or
and
push
aad
fisttps
and
lds
pusha
out
adc
shlb
rol
or
es
jno
pop
lock
pop
push
mov
hlt
mov
and
mov
add
xchg
jp
out
pop
fstpl
ss
hlt
incl
call
add
fmulp
cld
inc
mov
sub
cld
repnz
imul
sahf
pushf
xchg
fstpl
inc
mov
mov
popf
xchg
mov
push
jo
adcb
pop
xchg
or
scas
sub
fdivrl
cltd
xor
or
loopne
xor
insb
push
les
xor
mov
cmp
outsl
mov
mov
sbb
shrl
push
mov
outsb
testb
mov
mov
dec
iret
push
mov
and
push
dec
scas
shrl
out
scas
loope
and
jae
cmp
dec
push
push
clc
sarb
sets
cmp
add
cld
movsl
es
mov
xchg
scas
jne,pn
out
idivl
out
push
rcrb
xchg
and
pop
or
or
fs
xor
pop
jae
loopne
adc
mov
loop
jo
ficoml
jecxz
movsl
jbe
xor
adc
xor
ret
xlat
fs
cmp
popa
mov
adc
cmp
pop
icebp
sahf
push
jne
gs
lret
mov
xchg
mov
xchg
pop
mov
xor
jecxz
dec
jg
push
dec
and
mov
repz
jno
xchg
dec
test
adc
add
cmp
xchg
outsl
mov
sbb
xor
jo
les
bound
mov
fwait
jle
adc
mov
jae
icebp
xchg
insl
push
xor
aam
add
loopne
in
fstps
push
cmpsl
dec
inc
mov
stos
cmc
add
or
mov
adc
jb
dec
pop
or
rcll
fisubs
or
xchg
fidivs
les
icebp
mov
sub
sahf
jp
mov
sbb
in
popf
dec
cmpsl
faddl
push
gs
orl
add
add
inc
movsl
cmc
add
fisubs
adc
adc
int
les
les
enter
js
jo
aas
adc
push
pop
iret
notl
push
movsb
inc
push
lret
pop
aas
imul
or
sbb
dec
sti
pop
pusha
fwait
jmp
xchg
shll
fidivrs
in
lret
mov
push
rclb
fucomp
mov
rcll
pop
dec
faddl
xor
dec
mov
fisttpll
sldt
and
push
cltd
insb
lahf
jp
mov
pop
vpshuflw
pop
push
insb
stos
xchg
enter
lret
pop
or
mov
lods
fwait
and
stc
mov
je
dec
addr16
enter
cmpsb
or
mov
stc
into
dec
out
bnd
dec
and
sbb
mov
adc
jo
or
jo
and
les
dec
xchg
xchg
mov
iret
loopne
jbe
push
clc
ucomiss
inc
loope
loop
cltd
aaa
ret
mov
inc
jl
push
into
jnp
xor
faddl
jo
mov
shl
xchg
gs
mov
sub
or
mov
and
icebp
or
in
mov
cmp
ja
mov
test
push
movsb
push
ljmp
mov
or
dec
js
mov
mov
sbb
cmp
jle
push
or
test
add
sti
jbe
clc
push
inc
imul
inc
push
jb
add
arpl
cwtl
xchg
mov
cmc
xor
out
jge
adc
jno
sub
mov
mov
push
sub
mov
movsb
inc
in
js
in
sbb
xchg
fnstsw
addr16
push
bound
aas
mov
and
and
mov
mov
and
scas
shll
fwait
sub
or
clc
test
into
dec
imul
pop
cmp
xchg
mov
fs
lods
mov
test
rorl
adc
jne
cmp
loopne
mov
fldcw
pusha
aam
sub
mov
lods
xor
fs
mov
jge
outsl
sub
dec
and
adc
push
nop
out
push
stos
jno
push
dec
mov
imul
pop
into
test
test
adc
mov
pusha
test
inc
cmp
and
leave
int3
imul
ja
gs
sub
pop
aad
lods
mov
repz
xchg
aas
or
cltd
mov
test
in
rcll
int
sub
dec
mov
aam
aas
push
lret
and
push
jnp
xor
inc
sarb
cmpsl
lahf
push
pop
push
imul
mov
mov
push
dec
dec
mov
mov
add
cmp
inc
xchg
push
pop
pop
dec
cmp
mov
scas
popf
aas
mov
xlat
int
push
xor
and
mov
mov
adc
sahf
or
xchg
mov
dec
add
loope
lock
sahf
fidivl
arpl
xor
mov
inc
scas
iret
imul
loop
out
fwait
jno
xor
cs
jbe
inc
scas
jb
int3
sub
jle
mov
mov
inc
or
jb
lods
ss
xor
nop
adc
outsb
dec
hlt
xchg
pop
xchg
inc
imul
aas
repz
adc
fsincos
lock
insl
xor
mov
mov
lods
cmp
subl
jno
popa
sub
pop
sti
xchg
push
dec
int3
jmp
inc
jb
psubq
int
mov
pop
jmp
cli
dec
fcmovnu
push
adc
dec
dec
and
xchg
in
or
mov
leave
add
sub
cmp
out
pop
mov
dec
loope
xchg
mov
gs
loopne
add
dec
jge
mov
add
lock
and
imul
repz
cmp
jl
xchg
or
repz
aas
jmp
pop
pop
adc
stc
inc
adc
dec
arpl
out
adc
inc
push
fsubs
xorb
add
rorb
pop
stos
jno
sbb
jmp
sbb
sbb
dec
pop
out
adc
lret
adc
shll
int
nop
add
stc
mull
or
or
pop
push
sbb
add
mov
xchg
sub
lods
mov
cmp
inc
xchg
inc
dec
inc
xor
jbe
lock
rcll
pusha
sub
dec
dec
repz
fdivr
call
dec
jae
dec
cmpsl
xor
inc
pop
add
es
popa
pop
xchg
cmpsl
mov
sbb
into
test
test
push
sub
int3
ja
push
idivb
jmp
or
xchg
stos
dec
and
mov
and
lcallw
mov
aad
mov
xor
jp
scas
imul
xchg
add
mov
push
mul
popa
jne
add
sbb
addr16
imul
mov
in
push
adc
push
mov
sub
xchg
pop
cmpsb
push
scas
adc
add
lea
loope
xor
movsb
dec
add
xchg
and
jbe
scas
jnp
mov
frstor
fistpl
xchg
ret
pushf
mov
push
inc
into
and
jmp
repnz
lahf
dec
sbb
push
sub
and
dec
inc
leave
inc
icebp
aad
lret
adc
xchg
sub
push
jge,pt
cltd
shll
xor
push
add
imul
in
mov
adc
jb
add
inc
mov
imul
push
in
or
cli
mov
pop
dec
mov
push
and
xchg
lods
shrl
mov
rcrl
sbb
xor
jmp
nop
jp
push
flds
xor
mov
sub
cmp
xor
cwtl
sub
daa
hlt
sub
sbbb
outsl
add
test
aad
imul
jecxz
stos
mov
and
imul
xor
pushf
mov
lret
xor
sub
push
icebp
jmp
or
cmc
and
lods
pop
addr16
xchg
jle
lret
fdivr
dec
cmpsl
rcrb
int3
sbb
outsl
divl
icebp
xor
aaa
xlat
pop
mov
lret
scas
cmp
lock
cs
aad
ret
add
cld
jno
mov
fxch
lret
inc
repnz
cltd
mov
gs
cmp
cmp
jo
aam
icebp
popf
aad
jae
xlat
std
popf
pop
mov
adc
push
filds
add
sti
lahf
jns
test
ss
pop
add
test
jp
out
mov
cmovno
adc
jecxz
and
pop
xor
out
call
pop
fdivrs
pusha
call
pop
sub
push
rcrb
fcomps
les
push
push
and
xlat
pop
dec
mov
lret
lock
pusha
cmp
movhps
xchg
cmp
dec
out
mov
outsl
shll
cld
sbbb
test
mov
xchg
lcall
jg
xchg
mov
push
test
xor
les
jns
fcom
repz
adc
inc
and
aam
jle
lret
mov
mov
pop
call
push
inc
rorb
and
adc
and
mov
sti
xor
and
test
sub
das
icebp
inc
nop
dec
and
orl
mov
lock
bound
hlt
add
pop
sbb
test
frstor
pop
xchg
test
xor
fisttps
fs
jg
in
cmp
insl
imull
loopne
adc
or
popa
mov
aad
push
stos
cs
ret
and
xchg
inc
pinsrw
fistps
cltd
push
clc
je
aad
arpl
lret
repz
shl
enter
fwait
cmc
movsl
push
lock
fisubs
lahf
pop
cmpsl
and
gs
clc
jecxz
or
inc
fnstsw
aaa
jp
in
data16
adc
dec
rolb
jnp
add
or
into
inc
push
cmp
mov
cwtl
popf
sub
sahf
mov
lods
aaa
xor
mov
xchg
dec
mov
clc
iret
sbb
mov
and
fisttps
dec
getsec
dec
jne
dec
shl
jp
jmp
fisttps
and
pusha
sbb
lods
repnz
dec
scas
subb
and
das
sbb
loop
fsubl
add
mov
pop
jbe
sbb
fcomi
sub
stos
inc
test
sahf
mov
test
imul
jbe
mov
mov
jmp
in
in
adc
jle
pop
xor
pop
inc
inc
daa
sub
bound
cmp
jge
push
rcl
adcl
idivb
xchg
mov
in
xor
orl
aad
dec
jns
imull
push
sar
inc
in
xchg
cmc
frstor
and
xchg
cmpsl
push
mov
ret
mov
sbb
pop
mov
in
stc
sarb
hlt
pop
das
int
loope
adc
xor
pop
popf
fisubs
xor
jns
sbb
pop
push
std
test
mov
cmc
cmp
and
add
in
into
mov
dec
call
je
rol
mov
adc
pop
mov
outsb
cmpsl
push
xchg
adc
nop
mov
ret
sub
jecxz
fcomps
js
cs
hlt
xor
addr16
and
jno
sbbb
aad
cmp
pop
jmp
mov
or
lods
orl
adc
sarb
sbbl
test
mov
and
and
popf
jle
icebp
dec
stos
adc
lock
das
push
xor
push
adc
sub
dec
js
xor
test
mov
stos
xchg
cmp
mov
push
xchg
add
or
ja
into
fstpt
push
jns
pop
nop
dec
aad
aad
fcmove
test
xchg
loope
mov
xchg
icebp
addr16
dec
or
push
call
ret
sbb
mov
push
mov
lods
push
inc
loop
lret
popf
mov
fisttpll
addr16
fsts
mov
xor
sti
mov
jae
mov
mov
sbb
push
jmp
pop
orl
ja
add
pop
inc
rcrl
ss
inc
xor
out
addl
shll
pusha
scas
sub
adc
aad
push
mov
incl
mov
jmp
inc
jo
mov
mov
add
loop
das
xchg
jle
cmp
repz
xor
and
iret
push
add
aaa
sub
pop
mov
and
sub
dec
arpl
add
call
and
out
cmc
sbb
cmp
cwtl
lcall
lea
daa
data16
jo
cmp
clc
lea
divb
in
dec
jle
adc
insl
cld
data16
mov
cs
adcl
xchg
icebp
imull
mov
test
sbb
out
lret
and
rcrb
test
inc
loope
jecxz
mov
mov
bound
pop
ret
clc
push
lods
inc
cmp
into
std
out
mov
xor
ret
sub
or
fisttps
je
std
imul
and
outsl
ds
ljmp
data16
and
imul
inc
mov
mov
pusha
mov
xchg
stos
ficoms
sbb
cli
gs
ljmp
lods
xchg
scas
cld
hlt
out
mov
sarb
mov
push
add
push
and
mov
das
rolb
lods
test
ss
pop
and
out
push
adc
pop
xor
dec
mov
cmp
pop
lods
mov
pop
cmp
push
testb
repz
lods
mov
xlat
dec
dec
shll
ds
mov
or
add
cmp
dec
push
xor
xchg
sbb
jns
or
xchg
repz
frstor
pop
lods
insb
mov
xchg
mov
addr16
add
imul
das
sbb
pop
mov
inc
ljmp
mov
adc
mov
pop
addl
mov
pop
negb
pop
test
loop
adc
icebp
imul
sbb
or
cmc
jae
jecxz
inc
pop
sbb
icebp
mov
fistpll
pop
cmp
popl
mov
push
movsb
fimuls
sbb
sahf
push
push
sbb
movsl
mov
or
mov
roll
sbb
xchg
loope
ds
ja
mov
xchg
and
pop
sti
jl
and
shlb
stc
test
fs
push
push
lret
ss
xchg
mov
pushf
sti
loope
imul
int3
adc
push
je
repz
sub
repz
push
xchg
fisttps
jmp
add
icebp
fistpll
dec
pop
fdivrl
es
jnp
loop
pushf
call
xorb
sub
out
mov
int
sbb
inc
lcall
lcall
test
insl
sbb
in
push
sbb
int3
jecxz
lock
cmp
jecxz
insb
sahf
pop
idivl
dec
pop
xchg
insl
jne
lret
test
stos
jge
jp
aam
push
lret
mov
mov
pusha
mov
out
fisubl
pop
mov
scas
stos
inc
cmpsl
fs
call
lock
xor
cli
stos
mov
adc
mov
or
jne
popf
clc
lcall
int
mov
mov
iret
femms
jmp
aad
jg
jp
mov
and
insb
sbb
and
mov
jp
cld
mov
add
jbe
adc
inc
les
push
nop
jge
movsb
not
mov
rcrb
into
sub
js
pop
fsubr
mov
ja
int
push
shlb
es
outsb
mov
add
scas
pop
stc
mov
xchg
push
cs
lods
addl
push
xor
popf
call
imul
inc
lahf
movsl
fildll
jnp
movnti
or
outsb
sbb
lods
jo
adc
mov
push
add
lds
clc
dec
xorl
push
dec
cmp
pop
or
inc
es
out
mov
adc
mov
or
dec
ss
jle
adc
pop
or
data16
cli
mov
sahf
xchg
jo
pushf
inc
insb
sub
xor
scas
adc
lock
cmc
cs
sub
fisubs
cmp
adc
rol
lock
mov
repnz
sbb
mov
cmp
icebp
or
jne
pop
sub
inc
ss
jge
lds
xlat
dec
pop
loope
sbb
sbb
gs
xchg
sbb
inc
scas
jle
jbe
lcall
shrb
push
mov
mov
out
stos
inc
sub
out
cmc
xlat
shll
mov
or
mov
sub
jno
cmc
push
movsl
add
jmp
subb
sub
inc
pop
mov
dec
add
push
pop
jne
cmc
pop
mov
mov
cmp
xor
add
mov
ret
in
daa
push
js
or
ds
push
sti
nop
ret
fisubl
push
loopne
push
es
jmp
xchg
add
lds
adc
mov
ret
inc
mov
sbb
jg
icebp
mov
and
loop
cmp
push
dec
enter
sub
pushf
fs
add
jno
addr16
add
sub
stos
xorl
push
lcall
fdivrl
and
ds
mov
mov
or
mov
dec
lods
imul
mov
pusha
stc
pop
add
inc
das
scas
or
xchg
in
sub
pop
xor
mov
popf
cli
imul
out
mov
xlat
aaa
movsl
cmpsl
pop
xor
lcall
inc
incl
out
ret
xchg
movb
mov
das
push
iret
into
xchg
xor
ljmp
mov
stos
inc
push
lret
sti
rorl
sbb
or
push
mov
inc
jne
jmp
outsb
inc
push
push
cmp
inc
cwtl
adc
jo
xchg
dec
mov
mov
sbb
nop
cmp
imul
pop
idiv
js
aaa
or
lahf
add
shlb
lds
cltd
test
push
pop
mov
cli
ds
gs
out
mov
fsubrl
mov
push
and
inc
out
adc
lret
lret
pop
into
mov
jp
jg
mov
sub
movsb
out
xchg
xor
int3
add
fucomp
rorb
adc
or
mov
loop
inc
cs
fnstenv
sbb
ljmp
rcll
inc
lods
dec
test
or
and
sbb
push
shrl
jo
dec
js
addr16
jae
dec
mov
and
dec
ret
fstpt
adc
pusha
bound
sti
fs
idivl
dec
xchg
roll
and
cmc
rorb
out
notl
cmp
cmp
jge
push
push
into
xchg
or
ret
cltd
sbb
jo
xor
test
andb
aam
rclb
nop
mov
jecxz
mov
mov
out
mov
sarb
adc
test
mov
nop
xchg
mov
lret
xchg
pop
and
xchg
mov
mov
push
out
mov
int
xchg
pop
push
add
lret
push
clc
in
lods
mov
lds
xor
push
adc
inc
jecxz
imul
mov
leave
sahf
inc
mov
mov
adc
fldl
pop
sti
xchg
cmp
xor
ret
shlb
fisttpll
add
shlb
iret
aas
cld
xchg
jl
fsubrl
jmp
push
cld
std
jle
mov
jge
aas
and
inc
xchg
xchg
add
popa
xchg
mov
cmp
leave
jo
out
or
mov
arpl
mov
lcall
mov
mov
mov
repnz
pop
mov
sahf
mov
cmp
rolb
mov
cmp
mov
inc
es
xchg
xchg
fnstenv
xchg
jmp
mov
xchg
mov
clc
dec
mov
sub
pushf
icebp
inc
aaa
lahf
insl
dec
data16
jmp
ljmp
int
bound
movsb
xchg
or
cmp
fcmovnb
cmp
pop
adcl
or
insb
mov
cmp
mov
fidivrl
insl
pop
imul
popa
mov
mov
jne
mov
push
add
fisttps
mov
les
mov
add
sub
add
xchg
in
lods
aas
inc
arpl
in
ret
mov
pop
adc
out
fwait
mov
clc
rorb
loopne
sbb
mov
jecxz
mov
or
sub
push
push
mov
jg
jo
mov
xor
shl
mov
xor
and
fnstsw
loop
jnp
stc
pop
push
ds
pusha
mov
repz
aaa
dec
dec
out
xor
movsb
fbstp
in
call
push
add
out
enter
sbb
mov
aas
mov
push
fmuls
ds
cmp
arpl
fisubrl
or
push
in
adc
inc
mov
lcall
adc
cli
fnsave
out
sbb
sbb
lret
pop
sbbl
outsl
jne
cltd
rorl
fidivrs
xor
push
adc
sub
lret
xchg
sub
mov
jge
aaa
les
and
cwtl
push
pop
and
int3
shll
arpl
inc
push
jg
int3
pop
pusha
xchg
pop
mov
add
popa
sub
jg
std
push
push
dec
lds
mov
scas
ret
imul
sahf
lcall
mov
mov
outsl
stos
ret
sub
mov
adc
into
cmpsl
push
pop
adcl
lock
jnp
mov
push
jno
sbb
test
mov
mov
jecxz
mov
aad
lret
or
js
push
addr16
loopne
fidivrs
xor
fisubl
fdivrl
inc
mov
fwait
jns
add
xor
sti
cwtl
xchg
xchg
outsb
and
mov
out
pop
nop
lea
les
js
xchg
jnp
add
pushf
sbb
call
push
addr16
pop
adc
stc
inc
sbb
and
stc
xor
and
dec
cmp
add
jmp
arpl
sub
adc
mull
xchg
aaa
adc
mov
lods
add
mov
xor
mov
jge
adc
test
stc
fwait
inc
sarl
in
dec
xchg
or
fcmovnu
out
scas
sbb
pop
mov
lret
cmc
lret
jo
push
je
fistpl
mov
lret
add
daa
pushf
sub
cmpsl
fcoms
mov
pop
cmp
orl
mov
jns
inc
or
daa
sahf
aas
mov
cltd
in
cmpsb
xchg
cmc
ret
cld
lods
call
loopne
loopne
hlt
jne
mov
jp
stos
repnz
mov
lock
daa
jle
je
scas
call
cmp
pop
xlat
mov
jmp
scas
inc
sub
mov
leave
ljmp
loopnew
std
imul
arpl
jp
jge
pusha
lcall
gs
pop
fiaddl
adc
fsubs
sti
xchg
cmp
out
xlat
fldl
inc
push
out
ds
mov
mov
daa
xchg
or
ja
pusha
mov
in
inc
adc
add
push
andb
mov
stc
imul
mov
pop
sbb
mov
insb
xchg
in
out
repz
jae,pt
inc
xchg
push
mov
push
shlb
in
xor
inc
mov
xor
xchg
enter
je
add
xor
pop
mov
mov
into
sub
or
push
fistl
lods
out
xchg
invlpg
or
ret
fs
inc
call
cmp
push
shll
pop
setnp
testb
pop
mov
add
fdivrp
clc
stos
xlat
fildl
leave
or
stos
cmp
in
dec
orb
push
cli
cmp
movsb
sbb
lock
fistpll
inc
inc
ret
inc
daa
sub
dec
dec
cli
vcvttsd2si
or
adc
aas
imul
aad
pop
ss
sub
lock
xchg
cmp
dec
pop
cmpsb
andl
mov
enter
daa
mov
mov
sub
xchg
sbb
mov
fisttps
push
in
jmp
add
sub
popf
or
fsubp
sub
popa
aaa
mov
shll
out
and
xor
xlat
jae
in
mov
out
inc
push
nop
cwtl
pop
and
aaa
mov
xchg
aas
or
mov
adc
sarl
in
cmpsl
mov
or
push
add
stos
jge
mov
loop
test
xor
add
rol
dec
add
xor
push
push
gs
jns
test
push
outsb
out
popa
cmpsb
mov
test
ss
xor
jmp
sbb
aad
pop
pop
mov
pop
adc
pop
sub
adc
jnp
push
cmc
sbb
fdivs
popl
and
shll
out
lret
mov
inc
dec
scas
enter
mov
adc
inc
sbb
movsb
sub
push
cltd
out
mov
xchg
sbb
arpl
mov
mov
mov
xor
mov
mov
mov
jno
fsubrs
subb
xor
pop
shrb
xchg
inc
arpl
loop
out
xor
out
sti
sbb
cmpsl
jecxz
lea
repz
in
ds
xor
and
xor
cwtl
add
fincstp
adc
cmc
mov
xchg
cs
out
mov
cltd
lods
idiv
and
inc
pop
mov
cmc
daa
sarb
cld
mov
cs
icebp
pop
bnd
pop
jne
add
insb
sbbb
out
into
popf
push
inc
or
sub
pop
pop
inc
cmp
inc
ljmp
pop
jae
add
jbe
nop
sub
mov
mov
rclb
subb
jns
cmpsb
push
fildl
mov
push
outsb
insl
add
mov
std
pop
push
push
sbb
lea
lret
sub
jmp
scas
and
cmpb
and
cmc
xlat
mov
movsl
jne
push
jl
loopne
sbb
les
mov
cs
xor
cmp
notl
sahf
pushf
lods
xor
inc
daa
sbb
adc
in
lock
loope
testb
lret
lret
adc
sbbb
mov
lods
and
orb
sub
pop
pop
sbb
sbb
inc
popf
out
test
push
add
lahf
inc
in
mov
lret
imul
popf
fs
mov
imul
stos
pop
loop
pop
call
xchg
ficompl
fwait
shr
or
xor
call
fstpt
aam
sub
cmc
lret
lret
sbb
dec
pop
cmp
arpl
jecxz
gs
push
pusha
popa
push
cmp
xor
xchg
imul
xor
aaa
add
call
dec
data16
lds
icebp
inc
xor
pushf
pop
and
xchg
cli
test
xchg
lret
gs
in
aam
dec
cmp
sub
cmc
jb
mov
adc
cmpsb
lods
mov
inc
xor
sahf
dec
jne
js
push
mov
imul
push
ljmp
std
xlat
andl
sub
aaa
enter
mov
or
inc
imul
fimuls
in
or
xor
sub
icebp
mov
xchg
mov
movsl
xchg
or
mov
mov
push
ret
out
cltd
lock
aam
xor
testb
push
xchg
xor
sub
push
les
cltd
mov
pushf
mov
gs
int
jmp
dec
ljmp
dec
inc
icebp
adc
or
repz
jbe
fcmovb
es
cmp
repz
xchg
jo
jle
gs
and
ljmp
sbb
dec
jg
jno
enter
fisubl
and
sbb
mov
jg
pop
and
mov
ja
outsb
jl
dec
popf
add
rorb
cmpsl
xchg
sbb
shrb
enter
sub
jecxz
arpl
dec
lahf
lret
in
mov
mov
addr16
mov
mov
arpl
xor
inc
shll
fs
sbb
push
mov
rolb
push
inc
adc
idivl
push
rcr
pop
cmp
cs
ljmp
pop
push
xor
push
outsb
sbb
outsb
jmp
dec
aam
ret
test
jno
and
int
faddp
dec
das
idivb
add
imul
dec
sub
loopne
cs
inc
inc
cmp
adc
sti
sub
test
mov
aam
sti
loope
pop
aaa
dec
and
fmuls
popa
mov
mov
das
lret
cmc
in
nop
in
dec
mov
shll
inc
mov
push
fildl
cmp
mov
out
mov
add
int3
cmp
out
pop
es
xor
and
popa
in
into
stos
xor
pop
movl
aaa
loop
ss
call
mov
ljmp
mov
mov
ljmp
jmp
mov
lods
je
and
in
adc
or
jne
adcb
mulb
mov
jno
xchg
pop
mov
lods
lods
cmc
jecxz
mov
mov
stc
fistl
sbb
cs
js
scas
mull
mov
icebp
xchg
int
dec
repz
add
inc
jne
mov
imul
nop
push
xchg
test
mov
mov
mov
popf
outsl
shl
popa
inc
pop
jmp
lret
pop
pop
push
jns
mov
in
xor
adc
movsb
and
dec
xchg
rorl
dec
frstor
sti
mov
subb
cmp
jp
loope
sub
ds
scas
outsl
out
xchg
loope
mov
xlat
out
out
ret
mov
mov
and
add
jne
mov
mov
dec
jle
shl
sbb
cmp
ds
sbb
cmp
idiv
imul
mov
xchg
jnp
cmp
das
and
icebp
pushf
pop
pop
inc
pop
cmp
xchg
mov
xor
cmp
adc
mov
xor
adc
cmpsl
cs
shr
adc
roll
cmp
mov
jmp
lea
jl
add
or
stos
xor
shll
scas
xchg
lds
sub
xchg
icebp
push
push
mov
add
cli
jge
add
fimuls
fisubs
adc
mov
mov
mov
movsb
pop
cwtl
mov
xor
sbb
popa
pusha
dec
sbb
idivb
add
ljmp
pop
inc
pop
or
scas
jle
rolb
jb
ss
insl
push
in
aad
jno
jp
test
xorl
out
push
push
xlat
push
nop
push
cmpsl
ds
mov
out
sarb
das
test
push
ret
pop
repz
push
in
pushf
icebp
cmp
jg
sub
clc
xchg
sub
dec
mov
jne
pop
jne
push
adc
scas
enter
adc
inc
inc
jl
xchg
int
sbb
popf
cmc
adcl
add
xor
push
or
adc
cmp
lcall
mov
mov
rcll
push
mov
or
push
inc
jp
ja
bound
cmp
popf
dec
pop
sub
pop
movsl
sbbl
lock
fstpl
popf
jp
xchg
outsb
adc
jl
ret
repz
jg
scas
push
jp
movsb
inc
call
aad
dec
sbb
lock
mov
sub
pop
push
fsubrl
sbb
sub
ds
sti
xor
bsf
pop
cli
fisttpl
lret
ss
shrl
sbb
imul
mov
jmp
xchg
aam
repnz
sbb
insb
arpl
and
int3
pop
mov
pop
dec
dec
adc
leave
mov
addr16
ljmp
push
cwtl
scas
sub
pop
jecxz
jle
jl
cmpsl
fistpl
xor
inc
lods
ds
imul
out
addr16
dec
insb
clc
inc
or
xchg
mov
jne
outsb
in
in
lahf
or
aad
pop
hlt
add
out
sbb
repnz
dec
mov
cmp
negl
and
lods
push
outsb
loopne
pop
mov
xchg
das
loop
fldenv
negl
inc
inc
xor
add
sub
cmovbe
stos
ficoml
cltd
and
outsl
xchg
xor
pop
and
ss
cs
xor
in
pop
inc
adc
in
js
sbb
push
test
out
cmp
das
lret
xchg
mov
xchg
jp
or
sbb
push
loopne
cmp
adc
jge
push
add
lock
mov
or
sbb
cmp
push
mov
inc
pop
ss
xor
gs
inc
fsubrl
mov
pop
mov
mov
sbb
into
test
xor
xadd
cmp
cmp
pop
lods
in
push
hlt
xchg
push
or
int
std
mov
dec
cmpsl
std
das
inc
bound
mov
clc
add
dec
cmpsl
xchg
xor
scas
je
sbbl
arpl
mov
xchg
cmpsb
arpl
lret
aad
call
xor
dec
bound
and
popf
mov
xor
scas
fwait
aad
outsb
cmc
int3
mov
es
packssdw
mov
aad
jo
jns
iret
xor
and
sub
inc
mov
xor
xor
leave
mov
jl
and
xor
add
mov
adc
jmp
adc
addr16
adc
add
imul
push
mov
out
gs
mov
jg
mov
pop
jecxz
jge
popa
and
xchg
mov
fwait
je
out
sbb
and
mov
mov
inc
adcl
ret
fstpt
addr16
mov
xchg
pop
adcb
xchg
add
adc
outsb
test
pop
add
xchg
scas
test
xchg
lea
push
xor
jle
mov
aad
cld
out
subb
pop
mov
aad
rcll
fbld
rcr
ret
inc
aam
call
push
std
xchg
scas
mov
fisubrs
push
stc
stos
ret
sbb
adcl
cld
lret
sarl
inc
pop
jle
add
jp
xchg
into
jo
jbe
mov
icebp
shrb
adc
aas
stos
ds
rcrl
pop
rcl
xchg
sub
xor
push
outsl
dec
pop
lock
out
adc
jnp
mov
dec
mov
dec
rdtsc
sub
or
xor
xchg
sbb
inc
cmp
iret
mov
rclb
xchg
dec
stos
mov
dec
push
rclb
mov
lds
bound
xor
js
sbb
push
cmp
mov
int
mov
js
fcompl
xchg
mov
lcall
jg
xlat
lahf
outsb
mov
dec
int
sub
lods
ljmp
out
dec
inc
mov
out
sub
loope
cmp
mov
cmp
scas
jmp
mov
xchg
lock
cmpsb
adc
sub
call
ljmp
jg
jg
or
int3
idivl
pop
adc
sbb
daa
bound
sti
sarb
inc
cli
dec
cld
add
jl
pop
mov
xchg
fnstenv
cli
jmp
xlat
pop
int3
stos
in
sbb
dec
ud0
push
inc
ja
fwait
hlt
cmp
adc
je
sub
pop
dec
mov
push
jl
sub
push
cmpsl
pop
faddl
loopne
enter
sbbb
xor
sub
xchg
lds
xchg
push
xchg
push
mov
imul
xchg
cmpsl
dec
lcall
mov
jmp
cmpsl
xor
dec
xchg
loopne
pop
xchg
imul
lcall
les
or
cmpsb
hlt
inc
daa
push
outsb
ja
dec
jnp
dec
inc
jno
cmpsl
lcall
fdivl
test
xchg
hlt
lock
icebp
mov
mov
dec
repnz
loopne
push
sarl
or
shlb
add
lds
push
test
or
gs
cmp
mov
push
jnp
jl
push
pop
mov
and
cmc
lods
in
ficomps
xchg
sub
dec
out
inc
dec
push
bndldx
push
sarb
dec
data16
mov
mov
inc
dec
adc
ror
mov
cmpb
shll
imul
in
sbb
mov
pop
leave
cmp
adc
xorl
roll
add
mov
pop
jge
pop
xor
es
or
ljmp
pop
cmp
data16
cmp
mov
push
mov
and
pop
shl
mov
or
cmc
mov
cli
mov
inc
or
movsl
enter
dec
ljmp
mov
mov
jb
jp
xor
repz
scas
adc
lods
add
aam
xor
dec
xorb
xchg
add
inc
and
mov
aas
jmp
dec
push
or
inc
pop
imul
jns
sbb
sbb
add
pop
cmp
pop
cs
inc
les
in
lret
aaa
pop
adc
movsl
mov
jmp
lods
jne
fwait
aaa
test
jne
sub
jecxz
inc
xchg
orb
cmpsl
push
xor
call
out
cmp
andb
cmp
or
inc
adc
dec
inc
jnp
shl
xor
adc
pop
fstpl
outsl
mov
sbb
add
popa
xor
dec
sbb
pusha
add
push
leave
pop
scas
sub
and
enter
rorb
hlt
xchg
leave
loopne
popa
fsubrs
loope
jmp
decl
and
pop
jmp
mov
push
sbb
add
xor
sbb
pop
jecxz
les
and
xor
or
cmp
and
push
inc
fcoms
out
pop
shll
push
push
inc
dec
filds
fs
cmp
es
aam
cmp
xor
and
add
mov
dec
mov
adc
mov
jns
dec
dec
popa
inc
push
aaa
jmp
mov
jg
test
je
jo
cmp
fisttps
adc
xor
and
cwtl
push
xor
movsb
jmp
mov
mov
aas
jp
or
fldcw
inc
pop
mov
jecxz
daa
dec
shl
movsb
inc
pop
out
cmp
lcall
aaa
xchg
scas
cmp
and
push
dec
inc
adc
popf
sbb
lods
flds
sub
notl
mov
scas
xchg
inc
pushf
arpl
dec
jno
jbe
mov
test
push
in
not
mov
mov
sbb
jmp
mov
je
add
mov
int3
mov
adc
sarb
fmulp
mov
inc
mov
out
int
and
sub
ja
loop
into
out
and
mov
test
lock
lret
pop
mov
xchg
flds
mov
mov
cltd
push
mov
and
xchg
je
out
jp
jae
daa
pop
adc
xchg
adc
mov
rcrl
js
out
sti
push
lock
mov
int
mov
dec
dec
fdivp
and
sti
mov
dec
cmc
sub
aas
inc
loopne
ja
int
in
aad
inc
in
popa
sub
dec
dec
adc
addr16
mov
pop
loopne
xchg
pop
leave
mov
std
cld
in
std
jmp
je
icebp
xor
sbb
jle
and
cmp
cmp
mov
ret
xlat
pop
es
dec
sahf
ret
push
push
sbb
mov
jmp
stos
jno
xor
ja
sub
int
push
stos
mov
adc
dec
mov
inc
xor
out
and
cld
inc
stc
loop
in
inc
movsb
add
sbb
push
xchg
ret
addr16
divl
mov
sti
sbb
lcall
or
xchg
push
das
aas
fs
scas
insl
imul
lret
scas
in
fwait
div
sbb
add
mov
adc
dec
loope
clc
sub
xchg
push
xchg
xor
mov
sbb
adc
mov
push
sarl
xchg
fisttps
gs
inc
popf
dec
jmp
xchg
add
int3
mov
adc
sub
fmulp
ljmp
inc
jp
jno
fcomps
ret
scas
sti
repnz
and
in
push
and
nop
xor
lret
pop
cmp
sahf
mov
xor
cmpsl
in
ds
fwait
das
dec
mov
adc
cmpsl
add
stc
repz
push
out
push
aam
jg
mov
sub
enter
es
jmp
out
add
push
shl
fwait
mov
test
inc
sbb
xor
jbe
mov
iret
cmp
ljmp
push
pusha
into
fwait
repz
clc
xor
fdivs
cmpsb
pop
fisttps
movsl
mov
xchg
clc
es
push
jge
fisttps
clc
push
out
jl
jmp
pop
pop
sub
jl
mov
pop
jp
jmp
inc
pop
inc
push
imul
das
dec
mov
pop
and
outsb
insb
lock
loope
mov
pop
xchg
pop
pop
and
mov
xor
imul
xchg
push
mov
jle
test
cmc
pop
cs
xchg
cmp
cmc
or
cmc
rcrw
jo
out
dec
les
shll
ret
in
out
addr16
pop
pushf
or
dec
cld
test
int3
add
ja
pop
jae
mov
outsl
jns
xchg
loope
shll
nop
stc
jg
cmp
sbb
and
mov
imul
jno
dec
jmp
imul
jl
xchg
lcall
jno
adc
inc
lret
and
pop
sbb
dec
adc
lret
aaa
inc
push
cmp
cmp
add
or
add
repnz
mov
bound
loope
clc
enter
fdivrl
rcrb
dec
arpl
mov
dec
popf
sub
jae
je
leave
push
pop
and
mov
mov
outsl
mov
movl
shlb
inc
sub
push
pop
cmpsb
mov
or
das
popf
xor
pop
data16
xchg
iret
hlt
add
test
clc
inc
mov
lahf
pop
push
cs
and
xor
push
lods
mov
dec
jns
inc
fists
fcompl
xor
aam
lret
repnz
repz
imul
mov
mov
in
fildll
sub
dec
mov
cmpsl
add
in
movsb
outsb
roll
xor
roll
rol
out
add
lret
mov
xor
push
aas
pop
packuswb
push
fildll
lahf
sub
out
add
shll
lret
pop
dec
fisubrl
mov
pop
jle
imul
das
sarl
repz
nop
xor
or
jle
fimull
test
pop
sbb
repz
mov
repz
cmpb
lret
loop
jae
test
pop
cltd
les
imul
adc
ret
push
shlb
cltd
lahf
cld
fiaddl
in
xchg
mov
add
stc
or
or
imul
mov
outsl
xor
jae
sub
psllq
pop
jmp
mov
or
sub
xor
inc
out
sbb
sub
cmpsl
jmp
jecxz
mov
arpl
dec
aad
outsl
jbe
sbb
mov
pop
cwtl
add
jne
test
imul
or
adc
xlat
outsb
sbb
jp
or
push
and
int3
mov
mov
cmp
stc
test
mov
jb
mov
push
cmc
mov
mov
arpl
sbb
rcrl
out
loope
push
push
fldl
adc
loop
stos
pop
orb
in
ffree
push
mov
jae
dec
inc
inc
mov
xchg
push
ljmp
sub
cwtl
movsl
xlat
add
mov
mov
test
cmc
fistps
rolb
jl
jmp
jo
popa
call
pop
sbb
or
xor
pop
fst
mov
jae
leave
and
in
adc
mov
lahf
jmp
push
arpl
sub
fucom
pop
jp
pop
adc
je
data16
dec
lea
cs
xchg
lcall
dec
add
xor
cld
mov
xchg
dec
mov
and
dec
mov
movsl
test
loop
outsl
outsb
mov
repnz
inc
sbb
adc
jecxz
mov
mov
loop
jbe
push
int
shr
jg
dec
dec
mov
out
in
mov
xor
into
add
mov
in
mov
mov
in
push
xlat
testb
out
test
out
cmc
aad
cmp
xchg
fimuls
popf
jmp
mov
icebp
pushf
imul
xchg
lods
cmpsl
jl
ja
xchg
mov
push
jns
js
adc
adc
cld
js
adcb
cs
xor
or
inc
inc
imul
cmp
push
xor
cmp
xor
push
int3
push
jecxz
inc
bnd
inc
jbe
mov
js
cltd
sbb
insb
mov
dec
jge
or
je
cmc
and
test
and
dec
pop
mov
ret
pop
ja
pop
mov
push
ror
jne
inc
inc
fstpl
nop
cmpl
pop
cmc
daa
push
pushf
push
and
cmpsb
repnz
cmp
cld
stc
or
movsb
mov
lods
fisubrs
sbb
sti
lods
push
mov
call
imul
in
lea
rorb
xchg
scas
jle
neg
sti
push
or
dec
xchg
test
jne
sbb
xchg
sub
loop
dec
jno
adc
in
mov
ljmp
push
mov
movsl
stos
loop
jns
sub
sahf
inc
pushf
cmp
and
push
mov
or
cmpl
scas
loop
jae
lahf
mov
sub
jecxz
push
lret
data16
push
leave
xchg
pop
add
movsl
adc
jmp
ss
cli
xchg
clc
int
pop
test
daa
movsl
ror
test
in
sahf
sbb
lea
jae
push
mov
sbb
ret
inc
sub
js
andb
inc
call
sbb
xchg
notl
popa
mov
lds
pop
adc
lahf
mov
outsb
test
aad
pop
test
add
adc
movsl
add
cmp
gs
shrl
pushf
stos
or
jns
aas
repnz
fdivr
cmpsb
push
push
in
or
mov
mov
in
imul
int3
sub
add
sarb
mov
add
pop
and
inc
sbb
inc
leave
adc
jns
imul
add
in
inc
pop
aad
sbb
out
jecxz
popa
push
pop
leave
xor
mov
sbb
mov
out
stos
insb
xlat
mov
dec
xchg
jmp
popf
sub
mov
and
pop
jecxz
cmc
movsl
jl
rol
adc
push
loop
aam
dec
ret
mov
test
and
add
into
notl
test
pop
push
jp
xchg
in
cmp
mov
jle,pn
and
or
in
mov
dec
and
lock
xorl
movsl
jnp
lcall
fmull
pop
loopne
aaa
cvttps2pi
or
adc
mov
sub
lret
popa
xchg
xchg
fsubrl
call
pop
sbb
push
aam
mov
xor
mov
jns
mov
cmp
dec
or
jp
out
enter
cmp
fldl
jge
repnz
jne
stc
leave
inc
movsl
jo
ljmp
test
inc
repnz
lahf
and
popf
in
add
dec
and
in
pop
jg
cmp
cmp
push
rolb
je
bound
or
jbe
jnp
insl
xor
add
sbbl
push
mov
jns
xchg
adc
dec
and
stos
xor
sub
icebp
in
aad
jb
jge
xchg
inc
out
and
scas
pop
or
fisttpll
sbb
fcmovnbe
dec
jb
std
xorl
jp
mov
mov
movb
icebp
cmp
add
lcall
lret
aas
pop
popa
push
outsb
cld
cmp
dec
xchg
insl
inc
adcb
xor
xchg
dec
and
clc
mov
xor
jae
and
sbb
test
test
cs
gs
jo
or
pop
dec
or
jp
aas
lea
sub
popf
push
push
sbb
shl
fnsave
xlat
lods
in
lret
inc
cmp
push
fldenv
icebp
xchg
xchg
mov
cli
xor
and
dec
push
mov
cmp
rorl
iret
dec
add
cmpsl
and
rorb
sbb
rcll
int3
mov
or
aad
mov
xor
shr
sti
lods
je
xor
sub
scas
js
cltd
xor
jge
xchg
inc
jb
ja,pn
decl
cmp
jo
inc
enter
aam
notl
mov
ror
pushfw
or
les
rcrb
and
inc
and
push
push
xor
cmp
lret
das
daa
daa
or
ljmp
aaa
lcall
dec
dec
jmp
xlat
lcall
outsb
addb
je
sbb
sbb
into
jp
arpl
xchg
mov
int
push
es
fsubrs
pop
lds
add
pop
inc
sbb
lds
insl
aam
shrl
mov
or
adc
les
fwait
add
cmp
test
inc
cmp
fmuls
cmp
test
jle
adc
jmp
cwtl
out
mov
jp
cli
sub
bound
cmc
scas
jge
or
mov
cmpsb
push
cmpsl
jmp
int
sti
sarb
sar
int
aas
mov
xor
or
cltd
pop
loop
shl
dec
mov
add
dec
std
fsubrs
repz
fldt
and
push
inc
lret
mov
add
cltd
iret
or
iret
pop
xchg
jns
push
popa
push
lea
mov
das
cmp
mov
sub
cmp
jbe
sahf
bound
mov
sub
sub
andb
mov
frstor
lcall
cs
push
test
jae
mov
pop
xchg
push
cmp
xchg
out
ljmp
mov
mov
mov
sbb
or
out
notb
sbb
lcall
jb
nop
fwait
mov
adc
push
icebp
arpl
hlt
ss
add
je
mov
mov
lock
aam
stos
jmp
and
pushl
je
pop
imull
jle
pushf
negb
xchg
and
sbb
dec
imul
pop
outsb
push
lcall
es
xor
lock
call
xchg
clc
pusha
pop
push
pop
push
adc
outsb
xchg
mov
cmp
sbb
lahf
repnz
adc
dec
cltd
pusha
mov
inc
cwtl
adcb
cmp
dec
xchg
sbb
stos
aad
repz
bound
mov
cmp
shl
inc
or
in
fmul
cmp
gs
loop
fidivs
pop
cld
mov
jp
pop
jle
mov
push
sbb
sub
pop
and
cmp
addl
scas
mov
in
jle
popf
push
call
jae
aad
lcall
leave
jbe
sahf
arpl
inc
ss
cwtl
cmp
jge
fwait
jecxz
sbb
dec
in
mov
mov
sbb
cmp
movsb
adc
cmp
loop
rclb
lods
and
mov
fisubrs
scas
stos
adc
pop
jge
mov
mov
inc
cmpsb
jnp
jne
pop
push
sbb
rolb
dec
cmp
icebp
rclb
ds
xor
xchg
insb
sahf
mov
in
sub
imul
xchg
sbb
out
sbb
inc
clc
into
imul
jae
addb
loope
addr16
out
popf
movsl
cmpsb
je,pn
in
lds
pop
pop
frstor
mov
scas
aam
add
imull
mov
add
rcll
stc
jae
fsubrl
imul
xchg
call
mov
mov
mov
or
pop
sbb
push
shrb
ret
js
xchg
out
jbe
mov
jb
and
jae
data16
sub
jge
ja
xor
sbb
jns
mov
pop
jne
pcmpgtd
lods
and
pop
mov
jmp
jns
or
fmuls
lcall
aaa
bnd
adc
add
jnp
loope
es
out
test
in
ror
jle
push
fwait
adc
push
mov
adc
fiadds
test
gs
cld
ja
mov
push
pop
out
lahf
jl
ds
xchg
or
xor
push
mov
sbb
jnp
stc
sbb
test
jge
sub
jp
cwtl
push
cmp
pop
into
arpl
push
dec
push
lods
or
outsl
mov
jbe
sub
hlt
xor
mov
divl
pusha
jno
addr16
mov
mov
dec
add
insl
mov
inc
sbb
or
test
ficoms
jp
loope
andb
push
push
pushf
pop
fisttps
push
or
mov
fsubrp
imul
mov
ret
scas
mov
clc
mov
imulb
xlat
xor
stos
push
nop
adc
das
push
and
cltd
jp
dec
sub
mov
loope
xor
jl
add
test
in
aam
negl
sahf
cwtl
jae
testl
dec
cmp
push
clc
adc
sti
dec
int3
sub
in
mov
negb
mov
mov
mov
mov
negb
je
fcoml
pop
jbe
jnp
rol
mov
adc
jp
jne
cmc
push
insl
mov
shlb
jae
repnz
push
xchg
in
js
test
out
adc
scas
fstpt
nop
in
mov
notl
sub
sub
imul
fcmovnb
call
mov
or
ret
xor
popf
inc
add
xchg
les
and
sub
inc
mov
test
push
jns
dec
icebp
lods
dec
jecxz
pushf
sbb
mov
or
add
cmc
push
out
insl
cmpsb
outsb
sub
icebp
pop
adc
sub
mov
jge
fwait
jle
xor
dec
xchg
cli
inc
cld
test
cmp
jae
fdivl
mov
pop
bnd
push
imul
out
ret
test
mov
ds
push
xchg
sub
and
mov
mov
lock
push
cld
cli
inc
inc
pushf
movntq
xor
xchg
fistpll
adc
test
pop
mov
lcall
test
dec
mov
aam
lret
dec
or
scas
int
mov
arpl
add
pop
jle
cmp
sbb
int
aam
movsb
insl
loopne
cmp
xchg
mov
lods
pop
push
notb
imul
adc
sti
inc
cmpl
imul
add
cmpsl
dec
pop
fisubrl
dec
sub
mov
xor
aas
cmc
inc
push
cltd
pop
adc
decb
or
stc
mov
cmp
inc
mov
in
enter
xor
aas
jns
mov
loop
js
sbb
fsubs
mov
pop
cmp
in
xchg
sbb
or
stc
pop
push
xor
inc
lret
mov
pop
sti
call
mov
ret
sysenter
lods
xchg
sub
dec
ret
push
loopne
pop
xor
inc
call
xlat
fwait
jae
mov
es
mov
xor
dec
mov
adc
push
add
cmpsb
pop
jno
sbb
loope
data16
daa
mov
mov
hlt
dec
push
subl
ljmp
les
cmpsl
xchg
xchg
addb
sbb
fsts
pop
fwait
cli
xor
inc
fmulp
fcmove
adc
int
adc
push
arpl
imul
in
mov
outsb
dec
int
inc
lods
xchg
fsubrl
xor
add
pop
sbb
jl
outsl
cltd
mov
cmp
lret
repz
mov
icebp
mov
shlb
in
mov
fs
idivl
fsubs
pop
push
aad
lahf
mov
clc
mov
push
mulb
mov
pop
rcrb
sti
into
int3
stc
push
cwtl
mov
jno
enter
add
ret
lcall
mov
xchg
add
or
fcompl
fldcw
int3
incl
bswap
pop
or
lock
cmp
cmp
popf
push
push
dec
adc
adc
movsb
xor
push
mov
shll
popa
movnti
cmp
pop
pusha
cmp
cmp
pop
mov
xor
popfw
mov
add
jmp
xlat
pop
ljmp
mov
dec
mov
loope
insl
pop
xchg
push
xor
pop
xchg
cli
addr16
or
mov
inc
loope
pop
mov
out
ret
in
mov
clc
sahf
sbb
movsb
addr16
ret
mov
adc
mov
and
loopne
adc
aaa
inc
aad
xor
ret
sahf
bound
enter
out
mov
adc
adc
xor
and
mov
into
mov
out
cmp
loope
add
outsb
push
xchg
sbb
shll
lods
sub
mov
shlb
xor
flds
repz
fidivrs
jno
xchg
xchg
mov
sahf
daa
pop
push
push
jle
jle
and
fsubrs
fsubs
pop
popf
iret
or
sbb
adc
dec
in
in
jmp
and
mov
sbb
lea
cmpsl
sub
pop
dec
insb
mov
mov
sub
mov
je
jbe
mov
bound
inc
pop
dec
test
push
subb
and
cmc
and
addr16
inc
out
stos
daa
push
imul
jl
push
aaa
ss
xchg
filds
pop
add
pusha
enter
mov
jbe
cmp
ficompl
pushf
outsl
incb
mov
jl
xchg
mov
jo
xchg
test
sub
jb
adc
sbb
popl
mov
dec
push
or
insl
mov
mov
test
cmc
sbb
add
lods
outsb
xchg
dec
jp
movsb
cmpsl
mov
call
mov
fdiv
js
mov
mov
sbb
add
in
ficoms
fildl
adc
jmp
dec
sub
into
mov
outsb
iret
and
stc
les
inc
mov
jmp
loop
arpl
and
cmpsl
out
imul
aad
dec
mov
and
xor
or
clc
pop
mov
jecxz
cmp
test
or
lea
fcoml
inc
mov
test
jp
adc
pop
fsubrs
adc
dec
or
mov
leave
aas
cmp
shlb
cmp
daa
mov
xchg
scas
jl
and
push
add
lea
inc
outsb
pusha
push
pop
push
addl
pop
orb
dec
aam
sbb
xchg
scas
mov
ljmp
and
aam
inc
xlat
rcrb
into
mov
adc
outsl
les
cmc
andb
inc
arpl
shr
cmp
insb
xor
sahf
lea
rep
loopne
mov
out
aam
jmp
mov
shlb
int
mov
mov
jne
xchg
sahf
movsl
les
xchg
cs
pop
stos
xor
pop
pushf
leave
xchg
aam
inc
jmp
shll
test
add
mov
js
dec
pop
jne
pop
test
divb
outsb
stc
enter
pop
filds
test
rcrl
mov
jae
xchg
xchg
add
or
in
inc
imull
imul
aam
push
mov
inc
cmp
xchg
mov
repz
jg
popa
sbb
mov
aas
lods
jge
js
mov
lds
aas
fistl
mov
push
dec
or
std
ja
aas
push
mov
shl
jmp
pop
pop
mov
xchg
ret
mov
fwait
jbe
sub
inc
repz
mov
jp
cmp
xor
aaa
push
int
lock
jmp
push
cmp
jb
sbb
insl
stos
sbb
gs
add
sbb
mov
mov
mov
sbb
cmp
popa
stc
dec
push
mov
jmp
cltd
jle
je
mov
push
addr16
push
mov
or
and
repnz
in
daa
das
and
xor
shll
add
dec
inc
mov
adc
sbb
inc
lret
inc
sbb
notl
pop
out
fistpll
fstpl
mov
sarl
aas
outsl
pop
xchg
dec
jno
mov
push
mov
ret
push
jns
es
test
inc
dec
dec
sar
add
push
xchg
mov
popa
cmpsb
push
nop
icebp
inc
mov
jae
xor
xor
roll
loopne
push
jne
xchg
push
cmp
or
xchg
ret
jmp
jns
push
and
aam
lock
je
dec
mov
orl
mov
out
adc
jno
cmpsl
or
pushf
xor
aaa
mov
sti
cmp
loope
xchg
xor
lods
fadds
and
in
adc
dec
sbb
push
xor
fsubrs
mov
mov
int3
lcall
mov
sarb
std
out
or
cli
movsl
ja
stos
das
push
fpatan
cld
test
or
lahf
lods
je
sub
test
mov
xchg
xchg
push
divb
std
cmp
decb
jecxz
cwtl
dec
loop
and
xchg
mov
sbb
sbb
mov
xor
aam
mov
jge
mov
cli
ds
xlat
inc
call
add
push
mov
jl
rorb
add
addl
cld
dec
enter
and
mov
push
sub
bound
enter
push
push
sbb
or
stos
fisubs
in
jae
jmp
popf
cmp
and
cltd
stc
scas
sub
clc
ret
pop
js
inc
push
lock
ljmp
cmp
pop
xchg
sub
and
and
add
cld
stos
push
pop
mov
mov
dec
call
jp
push
jno
rcrb
xor
add
push
mov
pop
mov
jge
jmp
test
cmc
pop
adc
sub
cs
pop
lods
xchg
lods
jle
dec
in
imul
stc
fwait
xchg
sbb
mov
mov
mov
mov
imul
cmc
mov
pop
push
xor
mov
lcall
shl
out
push
and
xlat
mov
pusha
xor
bound
repnz
or
out
xchg
mov
inc
jp
push
mov
sub
xor
rcrb
jle
mov
cltd
or
xor
lahf
push
mulb
mov
jl
cmp
cmp
sub
in
std
hlt
jns
mov
adc
sbbl
xor
jo
imul
jb
dec
mov
adc
test
sub
shlb
inc
out
inc
push
xchg
insb
push
adc
sub
xor
pop
test
loope
jno
cmp
not
adc
or
mov
jecxz
arpl
mov
divb
dec
inc
xchg
andl
fs
scas
add
pop
push
inc
cmc
rcrb
daa
enter
or
lcall
rcrl
arpl
pop
sbb
mov
fdivr
out
icebp
lcall
mov
test
inc
sar
dec
cwtl
mov
inc
repz
cmp
cmp
push
push
mov
incb
aas
pop
and
push
lods
dec
xlat
cltd
fcmovb
mov
nop
fs
xchg
std
fcmovbe
outsl
pop
out
rol
pop
mov
call
jbe
int
ljmp
ret
repz
loop
mov
and
and
lcall
jg
leave
int3
xchg
out
in
xor
loopne
jne
adc
insl
dec
jno
jbe
out
fsts
fdivrl
xchg
dec
scas
xchg
inc
jp
mov
mov
xor
outsl
repz
inc
orl
lcall
xchg
hlt
lds
leave
lahf
movsl
cmp
xchg
mov
ja
daa
ljmp
pushf
inc
sub
js
mov
inc
stos
lahf
ljmp
arpl
repnz
sub
jb
push
adcl
lret
data16
cmc
cmpsb
inc
mov
mov
int3
sub
sbb
hlt
pop
in
je
js
outsl
dec
sub
inc
push
popf
pop
lret
push
inc
push
sahf
in
push
ljmp
push
stc
int3
inc
out
pushf
xchg
and
push
lods
sbb
mov
sarb
outsl
xchg
pop
mov
xchg
adc
xlat
xor
in
ja
sub
mov
sti
adc
fdivrs
cwtl
test
gs
mov
mov
outsb
jnp
dec
dec
inc
imul
xor
clc
or
mov
mov
in
lods
insl
insb
into
insl
adc
xor
pop
jp
icebp
mov
sub
mov
loopne
xchg
jno
fcompl
jmp
pop
push
add
and
dec
xchg
into
jb
sub
adcl
mov
or
push
aas
pusha
xchg
stc
fstl
inc
mov
jecxz
cli
inc
adc
adc
mov
sub
mov
ja
les
or
or
mov
in
or
pop
mov
sub
fildl
push
lcall
mov
sub
jle
mov
cld
mov
ds
int3
push
scas
repz
mov
pop
and
aaa
push
sbb
in
pop
mov
stos
inc
hlt
data16
ror
ret
lods
lods
fwait
cld
loope
sti
frstor
cmp
xchg
sbb
sbb
sub
shlb
mov
dec
dec
fs
jb
dec
out
sub
idivl
mov
mov
sbb
sar
call
ljmp
pop
push
or
xlat
data16
cmp
hlt
cli
adc
loope
pop
jnp
and
xchg
movsb
pop
fwait
sub
test
dec
xchg
mov
rcl
popf
fdivs
or
sbb
sub
call
mov
lea
xor
cmp
jecxz
in
fsubr
add
dec
sahf
or
pop
sub
es
mov
arpl
xor
and
int3
lcall
fsubl
or
mov
and
loopne
pusha
test
cmc
out
fcmovne
xchg
mov
jo
sub
ss
jg
mov
loope
add
aas
mov
xchg
test
push
lea
or
addr16
out
out
ret
sub
push
gs
add
sahf
add
scas
jno
xor
push
add
sub
mov
subl
fsubrs
mov
and
outsb
add
adc
and
outsl
fwait
cmpsb
adc
outsb
imul
subl
sti
inc
inc
xor
sub
mov
xor
xor
adc
jle
xchg
xchg
inc
xor
roll
dec
scas
jo
jno
jmp
xchg
pop
and
xor
mov
ss
adc
sarb
mov
lods
pop
or
fs
cwtl
into
xor
test
xchg
cmovg
fisubl
cmpsb
mov
cld
out
lods
xor
dec
into
adc
rorl
xor
add
and
xchg
ss
cmpb
jne
push
xchg
inc
aas
cli
sti
out
aaa
or
push
xchg
mov
out
stos
fildl
mov
mov
xor
cs
cmpsb
or
in
nop
mov
push
xor
sub
pusha
fwait
cmpsb
cltd
cwtl
mov
dec
add
dec
in
mov
lds
push
mov
mov
movsb
lods
mov
mov
mov
insb
xor
and
and
aam
cmp
inc
sbb
ret
push
lds
popa
icebp
cmpsb
or
mov
mov
aad
dec
popf
jne
test
dec
repz
in
dec
dec
movsl
jl
xchg
push
mov
xor
enter
jge
cld
pop
arpl
jmp
add
lock
dec
jae
loope
lods
out
out
inc
fstl
shll
daa
push
push
dec
jb
adc
leave
out
mov
and
stos
jle
loope
or
popf
clc
stos
call
sbb
out
xchg
in
ss
xchg
sbb
dec
xchg
aad
sub
xchg
xor
jecxz
and
stos
insl
sub
popf
hlt
daa
mov
add
mov
jnp
clc
sub
repnz
and
cmp
cmp
cli
and
jmp
jmp
shrb
xor
lret
and
data16
pop
and
cwtl
xor
inc
jns
dec
sub
mov
int
outsl
cmp
je
out
int
inc
arpl
negl
into
add
cmp
into
pop
jl
jmp
jo
mov
or
cmpl
add
xchg
cmp
inc
lock
imul
mov
add
mov
iret
aas
and
je
out
push
fisubs
and
push
mov
mov
xorb
dec
out
sahf
and
in
roll
cli
das
fistpll
sub
fldcw
out
mov
insl
dec
repnz
loope
out
sbb
mov
icebp
or
push
std
mov
push
arpl
movsl
add
push
mov
push
sar
lods
sbb
incl
pop
xorl
es
loopne
idiv
dec
mov
js
stc
cmp
in
cmc
mulb
popl
add
push
pop
imul
cwtl
xorl
inc
pop
sbb
out
lods
shrb
xchg
xchg
or
inc
cmpsl
leave
xchg
or
xchg
cmc
sahf
jg
adc
pop
xor
xchg
mov
adc
icebp
sbb
push
dec
ss
hlt
add
test
cli
pushf
adc
ja
cmc
inc
addr16
jge
shll
je
mov
rol
lds
icebp
cmp
mov
xchg
xchg
pop
push
mov
jbe
xchg
mov
xchg
dec
lea
dec
xchg
rclb
push
push
mov
mov
int3
sti
ss
mov
popf
popf
repnz
cmp
hlt
mov
mov
out
outsl
jmp
push
gs
mov
shlb
fmuls
icebp
xchg
popf
mov
ret
ljmp
fisubrl
ret
and
jg
fstpl
rclb
mov
inc
mov
cmpsb
icebp
bnd
mov
fsubs
xchg
std
sbb
outsb
lea
scas
mov
xchg
and
push
mov
xorl
inc
cli
pop
or
pusha
in
pop
inc
jg
jle
mov
jne
loop
push
subl
ret
adc
xchg
and
ret
stc
sbb
ret
add
cmp
jg
inc
popa
ljmp
je
pop
idivb
xor
out
sbb
arpl
cli
inc
out
pop
add
push
xchg
jl
mov
mov
push
mov
and
cmc
lahf
arpl
xlat
pop
mov
sarl
mov
inc
inc
stc
inc
mov
dec
sahf
jg
out
cmpsl
jno
sbb
inc
cmp
push
jo
and
push
sbb
aaa
mov
sbb
scas
pop
cmpsl
inc
or
push
cwtl
lcall
out
pop
rcl
fldl
inc
push
lret
adc
sub
pop
lea
adc
push
fdivrs
dec
ret
lods
cmpsl
scas
pop
cmp
inc
xchg
cmc
repnz
sbb
mov
adc
mov
xor
adc
ret
sub
xchg
add
xchg
aad
int
add
ja
add
popf
mov
pop
mov
dec
stos
pusha
cltd
xchg
push
or
jmp
add
lcall
mull
jg
imul
fdivs
ret
repnz
out
ljmp
adc
shl
addr16
and
fwait
call
adc
mov
mov
xor
inc
push
xor
stc
ret
and
xchg
div
push
mov
pop
movsb
add
sub
pop
test
gs
ss
inc
mov
lcall
stos
cmp
fwait
sub
clc
sub
test
testb
or
push
in
je
scas
mov
or
cmp
push
pop
add
sbb
pop
into
push
test
pop
scas
pop
dec
mov
push
and
mov
fmul
stos
inc
icebp
aad
ds
push
push
adc
movsb
notl
icebp
shr
mov
hlt
mov
or
out
xlat
cltd
fcmovnb
dec
pop
jecxz
insl
adc
dec
fldl
popf
lcall
and
sub
subps
mov
imul
les
jbe
in
mov
inc
sarl
xchg
je
xchg
sub
sub
adc
inc
rcr
mov
sub
in
cltd
leave
fmuls
and
out
pop
aas
mov
jne
mov
cmp
and
dec
pop
cli
inc
fdivl
lock
cs
imul
or
cmp
rcr
leave
mov
enter
inc
sub
ja
rclb
cmp
das
fcmovnbe
pop
xchg
and
outsb
stc
aaa
or
fsubrs
pop
xchg
test
sbb
ja
mov
push
movsl
ja
push
fidivl
jno
pop
cli
iret
xor
lret
mov
xchg
add
incb
lds
ficomps
mov
jge
pop
lahf
dec
cmp
mov
sub
sti
cltd
js
out
mov
add
mov
inc
scas
mov
or
mov
dec
jecxz
mov
add
dec
jo
in
ljmp
popf
xchg
inc
jg
jae
lret
add
aad
pop
pop
and
inc
mov
movsb
or
into
iret
ja
push
adc
mov
inc
jmp
lods
push
push
and
and
cmpsb
fnsave
outsl
mov
jno
sub
addr16
rcr
notl
sub
inc
fdivl
fcmovne
pop
ss
jecxz
fs
les
push
out
xor
leave
in
push
or
insl
xor
and
adc
mov
int3
cmp
fisubrl
int3
loop
shlb
rcrb
cmp
bound
jl
orb
insb
inc
pop
mov
mov
mov
sbb
push
cmp
push
push
push
popa
and
mov
daa
aas
sbb
push
lds
mov
xlat
ret
adc
aad
mov
loope
mov
cmp
ljmp
scas
std
cmp
loopne
js
xor
push
outsl
adc
xchg
cmp
enter
adc
sub
jp
jge
and
lods
shrb
gs
push
leave
pop
gs
sbb
push
inc
das
movsl
add
popa
in
fs
pop
mov
mov
or
push
imul
mov
pop
jb
push
les
out
mov
lods
cli
aad
sub
in
xor
jecxz
jnp
lods
hlt
lcall
pushf
xchg
mov
push
sbb
push
xor
pop
cmpsl
bound
outsl
mov
adc
jae
inc
cmp
and
insl
rorl
xchg
jbe
sub
cld
sbb
shll
ja
fyl2x
cld
das
jo
leave
xchg
mov
sub
push
imul
repnz
sbb
push
icebp
mov
pop
inc
add
mov
shlb
lea
cmp
sub
and
test
push
mov
js
into
out
xchg
ljmp
or
jl
fincstp
cmp
push
dec
imul
sub
cmc
cmp
cmp
shl
hlt
les
inc
loope
jecxz
or
daa
mov
pop
xlat
pushf
cmp
dec
popf
cmp
pusha
cwtl
test
or
or
jnp
lock
out
push
int3
sub
inc
dec
loopne
add
sbb
pusha
xor
arpl
dec
lods
mov
cmp
pop
mov
mov
lods
cmp
push
lret
notb
daa
pop
jns
dec
cld
jmp
cmp
test
inc
sbb
push
test
push
push
arpl
xchg
rorb
mov
ret
fdivp
sbb
fstpt
mov
xchg
and
mov
sbb
aas
push
js
lea
mov
js
or
fwait
aam
icebp
inc
pop
jns
dec
ja
loopne
mov
fcompl
aaa
in
pmulhw
imul
and
rclb
mov
hlt
push
pop
test
insb
mov
out
push
or
ss
sbb
xchg
mov
push
insl
push
add
dec
aaa
ljmp
idiv
flds
popl
daa
les
or
hlt
jno
xchg
fnstenv
addps
cmpsb
clc
jo
loop
paddq
and
decl
nop
inc
popa
fidivs
sbb
pop
push
in
imul
cmp
fldcw
jmp
add
ret
push
cmp
sarb
icebp
mov
insl
cltd
inc
mov
jl
sub
insb
mov
inc
xchg
or
xlat
xor
jecxz
inc
sub
std
mov
mov
sbb
jg
test
aas
adc
dec
into
sahf
cmc
add
adc
shlb
test
sub
inc
in
pop
push
sub
or
add
sub
inc
xchg
and
insl
push
inc
loop
aad
shll
cltd
cmpsb
xor
lds
pop
xor
ret
cmp
push
arpl
aaa
and
addr16
mov
xor
and
xchg
mov
xor
movsb
or
fst
imul
push
scas
fs
and
sub
enter
out
cltd
xchg
subl
sbb
or
pop
cmp
movsb
sarl
cmp
outsl
pop
pop
outsl
inc
out
jecxz
mov
push
mov
mov
cmpsl
fnstsw
stos
mov
adc
int
ja
add
xorl
cmp
pop
sbb
or
cltd
dec
xchg
mov
es
loopne
jecxz
sbb
xchg
adc
xchg
add
mov
in
pop
mov
fisubs
add
xor
fwait
pop
rclb
lret
push
xorb
jnp
push
sbb
jmp
mov
or
mov
fisubl
dec
fdivrl
dec
jae
sub
and
into
fadds
and
xchg
scas
test
sahf
sub
mov
sbb
inc
mov
pop
push
push
leave
mov
fnstcw
push
xchg
pop
fsubrs
fwait
incl
mov
inc
sahf
test
mov
adc
stos
sub
js
mov
dec
xchg
ss
push
orl
pop
xor
rorb
cmp
aad
mulb
insb
pop
dec
fnstenv
fwait
roll
jo
sbb
jo
jb
inc
icebp
popf
or
imul
std
sub
adc
add
out
movsl
pop
insl
repnz
pop
or
mov
cmp
jae
add
das
adc
aad
cmpsl
inc
pop
lock
es
stos
cmpsl
mov
loop
or
dec
jb
aad
jae
push
dec
leave
and
push
and
loope,pn
mov
addr16
jcxz
pop
mov
ds
jge
shll
mov
inc
ret
lea
shlb
enter
jmp
clc
das
cmp
or
aad
enter
int3
pop
imul
and
pop
movsb
hlt
xor
enter
imul
mov
cmpl
jle
sub
movsb
and
lods
stos
test
mov
sbb
in
clc
cmc
adc
ljmp
bound
fs
movsb
incl
fisttps
jb
mov
mov
adc
into
adc
jo
ja
push
inc
mov
add
add
lcall
imul
or
movsb
mov
xchg
int
icebp
ret
test
fsubrp
mov
lods
adc
jmp
cld
dec
sub
mov
stos
lds
mov
xchg
fwait
jo
outsb
pushf
cmpsb
hlt
in
adc
push
inc
ficomps
add
test
cli
and
mov
pop
out
adc
andb
jmp
and
insb
fistpll
scas
sti
repz
insb
stc
mov
rolb
lods
cs
jne
add
sub
pop
mov
mov
fistl
ja
cmp
movsl
or
std
push
add
icebp
das
fnstcw
cmp
and
lea
shlb
shrb
xchg
adc
adc
jo
xchg
popf
mov
outsb
mov
mov
sbb
jnp
mov
cmp
adc
cmp
sarb
pop
adc
xor
pop
ja
cld
in
dec
push
xchg
int3
jbe
popa
mov
fucomi
loope
cmp
jmp
int3
inc
mov
mov
negl
popf
bound
ds
mov
adc
lret
imul
jae
in
fwait
in
outsb
xor
lcall
decl
cli
lret
and
push
or
pop
mov
mov
roll
cmp
add
lods
xchg
insb
add
pop
sub
push
sbb
xor
mov
inc
lret
push
and
jge
jbe
xor
jl
out
and
mov
clc
addr16
les
cld
pop
fiaddl
push
lods
adc
push
inc
arpl
mov
or
dec
sahf
aad
test
lret
adc
das
test
pop
mov
test
add
cmp
insb
hlt
pop
in
ljmp
adc
or
cmpsb
push
cmovae
and
iret
xlat
jecxz
popf
loopne
pop
and
mov
sub
cmc
mov
movsb
sub
mov
pusha
aam
test
lds
jno
rep
adc
xor
mov
dec
pop
cltd
test
mov
sbb
popa
sbb
xchg
jne
mov
out
out
mov
jnp
xor
sbb
xchg
mov
andl
call
imul
or
shlb
mov
das
mul
cwtl
subl
mov
std
stos
xor
shrl
xchg
aaa
test
and
mov
pusha
xor
push
or
in
add
ret
xchg
icebp
push
lods
fsubl
rcrb
test
sbb
aas
and
movsb
mov
scas
sub
xchg
inc
jp
aad
mov
sbb
inc
inc
shrl
mov
pop
mov
mov
jae
mov
popf
or
sbb
std
xchg
hlt
sbb
insb
sbb
cs
jae
into
imul
pop
dec
fwait
pop
jp
jecxz
mov
mov
add
pop
push
insl
jecxz
mov
and
movsl
ja
cmp
xorl
jo
add
js
inc
mov
jge
sbb
jne
fwait
mov
into
pop
ss
cltd
aas
sti
xchg
popa
push
and
pop
test
scas
jmp
int
outsb
jb
lret
pop
aam
pop
mov
lcall
xchg
inc
xor
cmp
lret
out
lock
inc
call
mov
push
add
jmp
pop
dec
and
outsl
pop
mov
pusha
push
popa
or
jp
stc
push
sub
out
sub
inc
sub
je
addr16
les
mov
repz
jl
hlt
jae
cli
push
inc
inc
lret
mov
lcall
stos
pop
outsb
mov
fwait
dec
mov
add
xchg
jge
lock
adc
push
push
jle
rorl
sub
outsb
dec
and
das
cmpsb
lock
cs
filds
lcall
jl
pop
lds
cmc
sarl
mov
pop
aam
lret
mov
add
xor
cmpsl
or
pop
cltd
test
dec
fnstsw
icebp
loope
hlt
sti
fs
sbb
lods
mov
mov
loop
inc
add
inc
and
mov
in
lods
xor
inc
and
sbb
jp
pop
sti
xchg
test
cltd
sbb
in
inc
fbstp
fs
push
add
aad
pop
andl
lret
push
int
in
fs
scas
mov
mov
fistps
mov
adc
inc
jno
in
xchg
inc
sar
dec
shll
xchg
subb
pop
sub
fadd
loope
mov
jmp
sub
stos
movsl
mov
sbb
or
adc
jo
sub
fnstenv
insl
add
pop
in
cld
aad
mov
jbe
cmp
push
aad
or
mov
scas
or
mov
lret
add
scas
jle
jb
lret
cli
shlb
lds
cmpsb
popa
rcrb
add
xchg
xchg
inc
repz
dec
leave
mov
add
es
xchg
xor
or
xor
pop
sbb
or
add
int
push
add
adc
lock
inc
cwtl
pop
mov
add
mov
movsb
out
inc
lahf
rolb
pop
xor
mov
movsl
sub
fmull
ds
mull
repnz
ficomps
popa
rcll
pop
cmp
fisttpl
sbb
std
sbb
jbe
lcall
jge
int3
or
fwait
and
enter
push
insb
lods
test
ds
or
mov
add
adc
fisubl
push
or
mov
ds
pop
pop
cmp
mov
jp
push
imul
pop
adc
mov
std
xchg
mov
lahf
jg
mov
jae
das
je
push
dec
add
or
jmp
push
mov
shl
mov
mov
jge
xchg
inc
int3
test
mov
cli
aam
lds
mov
cs
addl
loopne
cld
inc
xor
xchg
xchg
enter
mov
imul
pushf
or
inc
adc
loop
mov
call
pop
mov
add
mov
loop
sbb
test
pop
pop
lret
fld
hlt
into
repnz
jl
mov
push
jp
and
and
add
idivb
repnz
ljmp
icebp
cmp
jb
icebp
nop
daa
inc
mul
mov
push
push
jnp
sub
cli
int3
sub
nop
aas
aad
mov
adc
add
bound
add
out
insb
stos
dec
xchg
and
or
dec
arpl
shll
cmp
mov
call
and
movsl
insb
fldcw
xor
xchg
scas
dec
or
aad
mov
push
pop
pop
pop
fidivrl
mov
add
rorb
ss
jnp
push
dec
ja
pop
pusha
xchg
dec
lds
mov
fnstsw
mov
aaa
js
jb
push
cmp
mov
scas
sub
lcall
mov
push
testl
inc
les
push
mov
sub
sub
frstor
ret
je
mov
flds
or
push
shll
adc
pop
jae
call
loop
popa
addr16
mov
xchg
pop
lret
cmp
fidivs
jnp
sub
movsl
aas
xchg
lret
fstps
mov
sbb
push
mov
lock
imul
and
in
add
push
test
push
movsl
insb
fisubrl
or
inc
jbe
insl
out
xor
mov
pop
sbb
xchg
adc
cltd
push
lret
cs
loop
roll
ja
sub
xchg
loop
sub
or
lret
pop
ret
jl
push
and
lock
mov
movsl
sub
cmp
jno
aas
xor
cld
popl
mov
adcb
jg
stc
filds
das
ss
std
add
out
in
xor
inc
push
jbe
nop
mov
lret
dec
xchg
cwtl
jle
cmp
push
sub
push
in
arpl
inc
inc
in
push
sbb
sahf
xchg
in
jns
aas
out
add
cmp
adc
rcl
pop
mov
jmp
add
cltd
imul
fmull
test
xor
cmp
shlb
arpl
mov
push
mov
cmc
lahf
jns
push
pop
sbb
lods
jb
pop
or
sbb
out
movsb
add
adc
rcrb
or
cmp
cli
or
lods
mul
jo
jne
mov
lds
pop
push
sbb
icebp
fidivrl
movsl
inc
imul
test
lods
fst
mov
add
or
sbb
out
lods
dec
or
imul
scas
clc
pusha
adc
mov
lods
test
lahf
stos
adcl
movsl
inc
xor
lret
xchg
call
mov
pop
mov
fmuls
jge
push
call
xorl
lret
insl
and
and
fbstp
adc
mov
inc
bound
popf
push
xchg
jb
inc
adc
inc
adc
out
xchg
fistpll
sbb
fadds
jne
or
inc
or
mov
loope
xlat
gs
xor
and
jae
adc
mov
xor
movsl
out
inc
xor
cmpsb
mov
cmpsl
daa
rep
inc
xchg
mov
or
cmp
push
pop
jmp
pop
movsl
ja
jl
push
mov
loopne
xor
jno
bound
dec
fisubl
jbe
xchg
ret
ret
add
dec
adc
movsb
aam
not
test
adc
loopne
xchg
iret
andl
lock
mov
or
ret
jle
movsb
adc
lock
push
sub
cld
nop
int
test
test
mov
adcl
les
inc
adc
lods
xchg
mov
sub
mov
fwait
popl
cmp
mov
sbb
mov
cmpsb
adc
mov
xor
scas
sub
jns
cmp
lret
cli
and
ret
lahf
mov
repz
ficomps
neg
jle
test
hlt
xor
and
aam
jmp
mov
adc
inc
mov
insb
lret
repnz
fnstenv
lret
xchg
push
and
clc
sahf
scas
leave
outsl
add
mov
shll
stos
push
into
cmpsb
mov
adc
movb
cli
imul
mov
push
pop
or
xchg
sub
cmp
cmp
movsl
mov
or
aas
cmpsb
xchg
and
xor
push
lret
xor
jo
xchg
ja
stos
scas
ret
aad
pop
stos
std
mov
insl
roll
aas
dec
aas
setp
rolb
mov
mov
rclb
inc
je
jno
or
jp
mov
pop
je
in
rcr
push
cmpsl
jne
mov
out
xchg
jecxz
jne
inc
sbb
or
shll
pushf
mov
loope
pop
sahf
push
cmc
roll
int3
mov
mov
fistpl
dec
add
sar
inc
mov
shrd
mov
dec
xor
icebp
cmp
inc
movsb
pop
pop
push
jne
in
xor
fwait
push
lret
in
xor
cmp
adc
push
add
push
add
pop
push
jo
inc
cmpb
adc
inc
xchg
ficoms
pop
in
push
imul
fidivs
jo
shl
mov
icebp
xchg
in
jbe
jno
imul
insb
js
shrb
in
jns
and
into
dec
lcall
test
pop
cmpsl
ja
mov
inc
outsl
push
out
call
adcb
aam
nop
loopne
popf
cmp
dec
rclb
xchg
sahf
xor
data16
jbe
pushf
xchg
xchg
sub
mov
pop
jmp
cltd
push
cmp
inc
push
push
jg
mov
sub
test
cli
stos
movl
sarl
mov
fimull
xchg
pop
ficoml
cmp
xor
push
insl
test
inc
mov
or
push
push
fildl
imul
cmp
icebp
fbld
data16
sarl
test
popf
xchg
mov
sbb
mov
pop
pop
push
inc
mov
popa
mov
add
mov
xchg
addr16
stos
inc
sbb
outsl
cmpsb
mov
in
mov
dec
add
jg
scas
push
fisubrl
pop
pusha
out
cmpsb
mov
js
add
test
bound
cwtl
pop
aaa
mov
jo
adc
inc
push
add
xchg
and
jne
mov
sbb
int
sub
ja
jle
insl
cld
aad
lds
adc
or
rorl
fyl2xp1
pop
dec
adc
mov
push
sahf
mov
mov
stos
cmp
mov
pop
dec
or
outsl
scas
je
cmp
ss
dec
fs
and
int
loopne
inc
insl
mov
adc
sarl
mov
out
pop
mov
adc
dec
lods
data16
sarl
loopne
adc
addr16
xchg
arpl
adc
sbb
mov
or
fisttpl
push
jp
loopne
pmullw
aaa
test
popf
int
fstl
add
aas
sbb
sbb
add
xchg
pop
jns
fsubrs
cmp
push
jno
lcall
iret
xor
imul
sbbl
jmp
push
inc
pop
fwait
lcall
add
or
movsl
scas
lcall
sbb
cld
inc
mov
cwtl
cmp
pop
bnd
mov
dec
scas
push
mov
ret
mov
out
call
adc
aad
mov
enter
push
fyl2x
sarl
xchg
and
bound
mov
adc
ficoms
gs
and
dec
sub
test
aad
mov
lds
inc
rcll
enter
lock
insl
repz
or
repz
data16
dec
xchg
jo
xchg
sbbb
orb
push
std
push
sbb
jns
rclb
movsl
std
icebp
pop
rcr
sbb
mov
sbb
cwtl
lds
xchg
add
dec
cwtl
xchg
imul
cmp
add
dec
mov
lock
jle
pop
ja
jg
adc
iret
jge
fimuls
leave
popf
mov
xchg
test
xchg
je
into
mov
adc
shlb
mov
sub
push
pop
dec
stos
add
lret
mov
add
sub
sub
xor
adc
jmp
imul
adcl
popf
or
lret
mov
roll
jecxz
loop
push
pop
aad
jg
dec
in
mov
pop
xor
in
push
adc
mov
add
mov
sbb
and
das
ljmp
cmp
cld
push
bound
cmp
fsubrp
mov
pop
hlt
pop
mov
xor
gs
mov
mov
negl
pop
push
pop
gs
in
xchg
ja
xchg
jne
dec
add
aas
jb
inc
pop
pop
je
pop
cmp
cmp
sti
je
push
std
repz
cltd
sbb
andl
je
pop
xchg
cmp
xor
adc
mov
daa
gs
out
mov
mov
ss
xchg
es
pushf
jns
ja
jbe
pop
lock
dec
leave
lock
mov
scas
aas
sub
and
andl
popf
jmp
and
ss
inc
loop
stc
add
pop
mov
add
mov
pop
jg
jo
and
adc
popf
popa
lods
pop
movq
into
iret
cmp
enter
sti
flds
fnstcw
scas
rclb
test
cmp
jg
imulb
push
hlt
imul
ss
iret
pusha
xor
in
aaa
inc
jmp
daa
mov
pop
jle
es
sbb
gs
mov
pop
sbbb
and
movsb
ds
xor
adc
cwtl
cmp
shrb
push
dec
lret
fcmove
inc
insb
aad
jecxz
in
loopne
dec
adc
mov
aad
inc
lea
xor
jae
mov
adc
pushf
fwait
pop
stc
repz
repnz
inc
jmp
movsl
or
loopne
dec
cmc
lahf
cwtl
pusha
add
dec
xor
mov
cwtl
jb
aam
mov
and
mov
movsl
lods
cltd
hlt
insl
mov
stos
mov
sbb
mov
dec
sbb
fsubrl
jge
fwait
clc
sub
mov
pushf
push
mov
mov
push
or
filds
jno
cmp
hlt
mov
insl
fimull
nop
rcl
test
jl
cwtl
movsl
or
mov
cmp
clc
xchg
nop
jle
xor
daa
cld
mov
push
xchg
inc
mov
aad
xchg
xchg
cltd
adc
push
lods
jecxz
and
and
aaa
jb
aam
xchg
and
and
adc
and
rolb
imul
xor
scas
inc
ficomps
pop
fcmovne
fistps
lds
jns
mov
lahf
push
out
rcrb
sbb
shll
xchg
pop
fisubl
mov
clc
sub
clc
jb
push
test
push
ss
cmpsl
insb
test
roll
test
push
popf
add
dec
sti
mov
lods
jae
adc
dec
add
push
jle
pop
jae
sbb
in
cwtl
dec
stos
push
jmp
out
mov
rol
mov
out
testl
jo
mov
jno
scas
jp
ljmp
andl
push
cmp
jl
add
repz
cmpsl
mov
add
loop
xor
sbb
ficoms
clc
mov
mov
adc
pop
add
cmpsl
mov
xor
test
idivl
adc
add
fiadds
dec
dec
mov
xchg
or
lods
int
push
out
in
sti
mov
cmp
mov
cmp
jmp
pop
sti
add
fbstp
add
xchg
sub
jae
mov
jp
sub
mov
aas
loopne
icebp
lods
lock
daa
jae
push
out
ret
aad
clc
mov
jg
into
xor
sbb
jo
push
sbb
cmp
sarb
out
or
inc
mov
mov
inc
or
cmp
pop
lcall
outsl
hlt
dec
mov
std
test
or
or
jno
out
inc
pop
jmp
dec
clc
das
push
push
test
mov
imul
in
add
imul
xor
or
push
push
or
fs
mov
adc
das
adc
lods
cmc
mov
cmp
pop
sub
setne
or
or
cs
rolb
test
ret
cmp
add
mov
in
dec
stos
test
cmp
and
sub
adcl
sub
fsubrs
jae
push
dec
fstp
and
rcr
test
gs
insl
fldt
fiaddl
mov
aaa
sub
dec
aaa
in
ljmp
mov
bound
fs
cmc
out
add
or
fistl
pop
movsb
mov
mov
add
ret
mov
sub
loopne
iret
jb
push
pop
faddl
mov
pop
or
pop
les
inc
mov
popa
mov
ret
push
dec
jo
shlb
cmp
cmc
call
rolb
pop
cwtl
ss
popa
stos
sbb
cmp
xor
retw
xorb
fistpl
aaa
bound
bound
mov
enter
mov
pop
mov
clc
cmp
mov
shrl
xor
jne
pop
ret
cmp
repnz
sbb
add
cmc
adc
jle
shrb
jmp
dec
add
xor
push
sub
out
insb
arpl
clc
insb
cmp
int3
stos
ljmp
dec
out
mov
xchg
mov
adc
lret
dec
push
dec
les
mov
sub
jecxz
repnz
lods
xchg
pop
xchg
fstpt
imul
in
xor
pushf
inc
loop
mov
negb
or
push
xchg
xchg
pop
or
mov
out
fisubrl
movsl
push
sbb
pop
push
mov
cmpl
and
mov
inc
lret
cmovne
pop
jg
test
sti
lea
cli
idivb
lret
lret
popl
lcall
mov
in
and
mov
repnz
mov
sub
fwait
dec
mov
test
sarb
out
cwtl
mov
and
push
fs
xchg
stos
xchg
das
loop
lret
dec
mov
pusha
dec
imul
or
rcrl
push
sbb
adc
pop
test
enter
out
mov
or
jmp
jo
fnstenv
inc
mov
shrb
movsb
dec
mov
comiss
js
mov
cs
std
leave
or
imul
mov
xchg
dec
loop
push
int3
and
lret
arpl
inc
xor
negl
out
add
movsl
or
pop
js
rorl
mov
negl
pop
add
xchg
mov
fwait
push
shll
test
or
mov
mov
hlt
lcall
es
cmp
jnp
fcmovnbe
and
cmpsb
add
popf
jl
test
stos
dec
movsl
jb
and
fcomps
inc
xor
test
cmp
insl
cs
or
push
lahf
mov
rclb
xor
inc
cmp
or
stos
test
xchg
es
mov
call
xchg
jnp
dec
shr
jg
xchg
xor
xor
mov
pop
push
sub
add
fwait
mov
cwtl
fcoml
movsl
and
pop
push
ret
adc
xchg
faddl
and
xchg
sarb
sbb
adc
repz
jbe
leave
dec
cmc
push
adc
push
test
pop
clc
mov
repz
cmp
pusha
xchg
mov
cwtl
xor
cmpb
add
shl
push
pop
adc
pop
mov
sbb
sub
fstpt
xor
xor
lods
jbe
scas
inc
push
or
scas
cld
mov
scas
jbe
push
lods
xor
mov
nop
outsb
insw
ror
call
inc
call
lods
push
and
mov
inc
push
fldt
into
push
and
loopne
jle
xor
and
mov
insb
outsl
pop
xor
cli
cmp
scas
xchg
into
adc
call
mov
sbb
fcoms
xlat
rcl
jecxz
stos
dec
jg
lcall
sbb
push
inc
icebp
lcall
test
xchg
xor
pop
mov
or
pop
rorl
push
clc
imul
rolb
push
femms
pop
xor
ja
pop
subl
sahf
mov
dec
enter
addr16
std
pop
sub
jne
lret
mov
jne
leave
dec
repz
cmc
pushf
jmp
hlt
xchg
in
sbb
jg
pushf
aas
ss
stos
pop
adc
and
adc
and
jle
test
shlb
xchg
push
in
xchg
pop
and
insl
mov
mov
test
push
aas
and
cli
push
ficomps
loopne
je
mov
test
or
int3
mov
stc
inc
adc
cltd
out
fucomi
sbb
arpl
insl
cs
lcall
test
ljmp
addr16
incl
js
adc
out
lock
cmc
push
xor
ljmp
rcrl
dec
test
cwtl
lock
out
sahf
out
lcall
test
push
lds
jmp
push
and
les
stos
pop
out
inc
sub
mov
sar
js
cmp
in
cmp
dec
ds
sti
add
lcall
lods
cltd
adc
or
repz
imul
xor
pushf
imul
mov
pop
sbb
aam
popf
push
adc
fdivs
mov
or
lcall
jg
xor
lret
idivl
das
lock
push
iret
add
add
push
insl
dec
jl
adc
dec
pop
cmp
sub
jno
and
adc
test
xor
jmp
inc
loopne
xor
in
imul
out
lcall
push
rorb
pop
jne
adc
fisttps
stos
xchg
mov
fs
ret
in
cmp
xchg
add
add
xlat
inc
mov
and
jp
mov
andb
or
mov
shlb
push
dec
daa
sbb
shl
xchg
mov
out
fildll
test
push
addl
das
ret
push
enter
sbb
xor
gs
lds
rolb
cli
dec
inc
lea
cmpsb
lahf
or
adc
push
jbe
sbb
mov
call
repz
mov
xor
and
inc
or
aas
outsb
jb
jmp
push
int3
mov
call
mov
and
movsl
out
add
pop
daa
aaa
std
repz
pop
jge
mov
sbb
pop
outsl
aam
pop
add
pop
xchg
aam
xchg
adc
fimuls
mov
rorl
mov
pop
push
cmpsb
ja
pcmpeqb
fistpl
pop
dec
addr16
cmp
mov
and
xor
stos
cwtl
mov
roll
cltd
jg
ret
stc
xor
xchg
push
cmp
fwait
pop
loope
sub
rcll
mov
fildll
test
pop
je
movsl
pop
sbb
jnp
lret
aas
leave
daa
push
addr16
or
inc
cltd
ret
out
icebp
popl
cltd
rclb
adc
frstor
lock
adc
dec
loopne
inc
mov
dec
dec
xchg
pop
jae
adc
mov
push
stos
ja
cltd
cld
mov
es
repz
mov
pop
imul
xchg
cmp
prefetchw
fcompl
shl
and
mov
mov
pushf
jae
mov
jb
xchg
add
nop
repnz
sub
jecxz
jo
mov
mov
scas
in
mov
sbb
jg
mov
int
ja
xchg
pushf
dec
push
mov
fdivrl
jne
mov
mov
fwait
test
dec
push
loopne
cmpsl
mov
xor
call
aad
xchg
xchg
clc
mov
scas
mov
push
dec
cmp
sub
sahf
lret
pushf
jmp
mov
lahf
lahf
xchg
dec
sarb
inc
repz
pop
cmpsb
mov
cmc
and
adc
mov
movsb
pop
xchg
sub
stos
das
cwtl
cmc
dec
sahf
inc
test
push
test
jle
sbb
xor
add
icebp
cmp
in
push
aas
popa
test
imul
in
jo
shlb
inc
pop
mov
jg
arpl
lret
dec
xchg
in
jae
jle
into
pop
incl
loope
jp
jmp
lds
mov
mov
mov
mov
or
mov
xchg
inc
outsb
cmp
mov
cmp
inc
xor
sbb
or
js,pt
and
aam
push
fwait
les
mov
mov
insl
add
pop
and
pop
in
rorb
jns
and
xchg
and
cmp
add
mov
out
or
ja
out
aaa
push
dec
cmpsb
pop
and
mov
and
rcrl
jge
mov
pop
js
mov
lret
hlt
mov
adc
xchg
sbb
pop
inc
int
cmp
repz
jl
imul
mov
popf
xor
or
pop
loop
pop
jl
or
shr
ss
fwait
sbb
aam
inc
jae
ss
xchg
pusha
jb
ja
add
ljmp
ds
dec
test
addr16
jno
test
in
addb
in
push
outsb
push
inc
add
adc
or
int
int3
mov
cmp
jle
fldt
shl
aam
insl
into
pop
pop
push
mov
jmp
push
sbb
int3
xor
leave
aas
jnp
pushf
jle
dec
dec
lret
and
push
xchg
mov
mov
es
pop
repz
mov
pushf
or
movsl
xor
dec
inc
mov
dec
mov
or
cmp
call
hlt
cmp
mov
inc
sahf
fwait
sbb
in
sub
fwait
cld
pop
jae
push
cwtl
inc
out
in
mov
dec
pop
pop
xor
or
pushf
adc
add
add
sbb
cmp
repz
fstpl
mov
and
idiv
or
sarl
loop,pn
sub
xor
movsb
add
add
rcr
pop
pop
push
pop
add
mov
lcall
lret
sahf
arpl
fwait
add
mov
cmpb
loope
xchg
jge
cwtl
cmc
mov
into
int
mov
test
mov
mov
xchg
add
aaa
jl
dec
lea
mov
rol
cmpsb
jb
xchg
int3
into
cmpl
add
mov
mov
aad
xor
fdivr
scas
pop
mov
and
cmpsb
push
inc
pop
outsb
sub
mov
dec
aam
push
imulb
cld
lahf
out
stos
int3
jne
data16
xchg
dec
push
fs
adc
pop
mov
add
inc
mov
cltd
jns
cltd
fmul
in
xchg
daa
test
cmp
sbb
in
hlt
xor
lahf
test
ss
lahf
xchg
xor
insl
push
insb
les
ret
aaa
dec
movsb
scas
pop
or
cmp
xlat
pop
test
cmp
std
sub
add
stos
test
gs
push
js
cmp
test
out
leave
stos
ljmp
push
jae
inc
jne
out
add
mov
pop
daa
pop
dec
sti
sbb
pop
je
xlat
cli
cmpl
int
sbb
jecxz
xor
aam
mov
popa
pop
repnz
inc
ror
sub
xchg
mov
inc
scas
inc
dec
rcrl
scas
repnz
jp
push
add
mov
or
call
pop
mov
lods
icebp
fucomip
mov
mov
lret
stos
imul
jne
add
mov
imul
stos
ret
ret
orb
and
push
dec
addl
arpl
outsb
push
call
push
pop
psrad
and
movsb
cmp
adc
sub
jbe
imul
add
dec
adc
icebp
push
stc
scas
ja
push
and
xor
fisubs
lock
cltd
sub
mov
lcall
scas
xchg
push
pushw
xor
mov
movb
stos
stos
nop
stc
inc
negl
mov
mov
pop
dec
jnp
outsl
scas
and
lahf
imul
cld
fdivrs
add
jb
rorb
stc
jle
push
imul
or
xchg
push
in
in
lods
add
and
aas
xor
or
test
mov
clc
ror
clc
rcll
addb
mov
shll
rclb
sbb
in
xor
jbe
rclb
add
lcall
fdivr
mov
subb
push
lock
inc
pop
mov
ja
mov
pop
sub
xchg
int
int
mov
xchg
rol
icebp
call
mulb
pusha
rcl
iret
loop
jp
cld
cmpsl
push
inc
xor
or
adc
dec
mov
push
and
or
rol
in
mov
jnp
sub
mov
xchg
add
adc
mov
aas
lds
shll
stos
loope
mov
xor
push
push
mov
test
sahf
icebp
dec
lret
lret
xchg
cmp
hlt
in
or
mov
pusha
sbb
mov
jecxz
inc
mov
fiaddl
inc
push
push
inc
xchg
inc
or
mov
negl
jl
mov
cld
mov
rorb
shll
inc
mov
jae
add
mov
mov
repz
sbb
xor
cli
push
pop
push
into
xchg
sub
call
cmp
mov
push
dec
int3
lret
sub
stos
add
mov
fs
adc
sub
jl
aaa
mov
cmp
mov
aad
shll
jo
mov
mov
lock
test
sbb
push
out
aam
mov
cwtl
ficoml
test
mov
inc
xchg
test
pushf
and
test
int
push
cmp
dec
das
pop
adc
and
cmpl
loope
and
test
xor
iret
scas
and
push
repnz
push
push
sub
and
fs
notl
or
jne
xor
pop
push
xlat
and
mov
dec
cmc
mov
lods
add
mov
xor
dec
jb
mov
xchg
in
push
sbb
mov
test
pop
jbe
jno
cli
mov
pop
movsb
or
pop
test
mov
out
add
xchg
jo
xchg
test
in
adc
or
xor
adc
push
push
sbb
fs
add
jecxz
repnz
mov
jns
pop
std
sub
repnz
jne
sub
xchg
sbb
iret
pop
fwait
push
or
pop
cmpsl
lcall
lea
nop
mov
mov
fldt
fbld
xlat
testl
mov
push
and
cwtl
cltd
dec
cmp
sbb
push
test
mov
stos
sbb
loope
cmpsb
icebp
mov
fs
and
push
rcl
aaa
jmp
jae
scas
sti
mov
bound
dec
dec
sarl
mov
int
js
aam
jecxz
imul
and
fldcw
xor
imul
jns
in
pop
scas
and
cwtl
sbb
filds
xchg
or
es
xchg
mov
scas
push
aas
arpl
pop
or
mov
lea
call
mov
mov
loop
mov
jg
mov
mov
ljmp
scas
pop
or
sti
add
or
aad
fstl
sarb
scas
xchg
movnti
inc
pop
and
js
fstp
negb
cmc
push
ret
sub
call
shrd
shll
aad
aam
inc
in
psrld
mov
movsl
cli
mov
ret
std
mov
dec
shr
icebp
cmp
shrb
inc
cmp
aaa
xchg
scas
dec
inc
das
xlat
or
add
test
out
cmp
mov
pop
insl
pop
jecxz
ds
sbbb
ja
fucomi
movsb
in
adc
lock
xor
add
lcall
and
call
outsl
and
xor
dec
adc
jo
scas
and
fiadds
cltd
sub
mov
ds
imul
negb
dec
sbb
aad
in
mov
leave
and
adc
xchg
jo
hlt
outsl
pop
mov
or
and
lea
loopne
sbb
ret
add
sbb
and
pushw
lret
jnp
xor
out
push
sub
inc
je
jg
sbb
xor
mov
xchg
adcl
pop
ret
mov
into
xor
pushl
add
mov
sbb
ficoms
loope
mov
das
ljmp
rol
jg
enter
fisttps
jmp
mov
push
stos
cmpsb
test
dec
xor
mov
lret
cmp
in
scas
and
xchg
or
stos
sbb
testl
cmpsl
dec
pop
fwait
enter
dec
dec
or
lock
xchg
push
jbe
and
inc
mov
mov
mov
inc
fistpl
push
dec
mov
xor
lret
insb
push
xchg
xchg
imul
inc
sbb
fisubs
cmp
push
jns
popf
inc
rcrl
lods
xor
lods
dec
test
mov
and
sub
shlb
pop
mov
test
and
pop
adc
int
inc
cmp
sub
mov
mov
shrl
sbb
xchg
pop
in
or
aad
inc
sub
test
adc
gs
sub
push
fmull
mov
adc
loope
xor
leave
xchg
dec
test
push
and
aam
rcrb
push
int
mov
cltd
dec
faddl
xchg
pop
cmp
dec
imul
and
popf
jg
push
out
popa
cmp
adc
psadbw
stos
ficompl
jo
pop
push
clc
pop
pop
sahf
in
sbb
xchg
lret
out
or
xor
ja
mov
aaa
jmp
lods
dec
mull
xchg
pop
jae
dec
cmpsl
xchg
je
inc
stos
fwait
scas
mov
xchg
cltd
lock
inc
mov
insl
pusha
adc
iret
or
shlb
add
mov
fs
adc
pop
push
insb
jbe
inc
mov
jno
dec
push
fmulp
cs
dec
jp
adc
mov
int3
int
in
push
movaps
jo
or
jb
in
test
xor
mov
xor
dec
mov
xor
fsubrl
push
adcl
out
pop
pop
dec
mov
mov
push
cmp
lods
push
call
dec
out
hlt
pop
xor
mov
fldlg2
arpl
sahf
ret
dec
inc
shlb
sub
jge
adc
loop
je
or
jo
lahf
fnsave
or
or
std
dec
outsl
mov
or
xchg
mov
cwtl
gs
pushl
cmc
imul
jle
cwtl
xchg
es
arpl
int3
fistps
xchg
imul
cmp
mov
cltd
and
dec
push
and
mov
xlat
shll
cmp
xchg
cltd
and
mov
xchg
repz
and
in
inc
ret
inc
call
ret
mov
es
inc
jnp
mov
mov
xor
add
pop
jl
push
daa
adc
and
push
shlb
adc
cwtl
icebp
xor
mov
out
dec
pop
cli
jb
cld
mov
pop
pushf
js
and
mov
js
pop
sub
jp
pop
decb
mov
decb
push
inc
loop
pop
js
dec
insb
call
insl
or
in
pop
push
imulb
adc
jne
rcrl
lahf
stc
ja
dec
jp
jg
cltd
dec
jmp
sar
jmp
cmp
xor
lea
adc
shl
aad
je
jp
das
loopne
sbb
xchg
push
xchg
out
inc
xor
xor
insl
push
lods
in
add
js
mov
repz
gs
jmp
add
jmp
inc
pop
jp
push
push
mov
pop
int
dec
es
fisubs
ss
loope
inc
loop
fisubs
mov
in
in
outsl
shrl
sub
and
fimull
push
sbb
filds
mov
stc
or
outsb
dec
ljmp
test
sbb
xorl
xchg
arpl
jne
and
mov
in
stc
mov
out
pusha
cld
mov
sub
mov
or
outsl
mov
inc
jp
out
pop
into
inc
jno,pn
cmpsb
mov
insb
jo
and
mov
xor
push
ljmp
mov
pop
cli
pop
jno
mov
add
movsb
add
push
in
aas
stos
cmc
add
pop
cld
xor
jnp
push
les
jmp
mov
aam
xor
into
mov
lock
ds
jmp
cmpsl
hlt
push
mov
lods
xchg
cmp
ja
xchg
push
scas
mov
add
mov
jecxz
lods
aaa
jns
jae
mov
aas
push
fstpt
testb
pop
daa
inc
push
fs
loopne
fisubs
test
push
sti
or
cmp
mov
push
pop
mov
popa
add
dec
pop
push
mov
lods
dec
idivl
adc
sbb
lret
jp
xchg
shll
jns
sti
jle
xor
adc
loop
and
in
enter
xor
cmp
ficoml
mov
pop
pop
hlt
jae
icebp
stos
push
dec
push
pop
popa
test
dec
or
lods
jne
mov
mov
test
hlt
sbb
enter
inc
jae
sbb
mov
lret
aad
push
inc
int
loopne
fbld
mov
aaa
imul
lods
arpl
xor
or
mov
andl
cwtl
pop
push
movsb
mov
es
adc
dec
xchg
stos
push
ret
lods
arpl
leave
mov
jmp
repz
sbb
test
mov
inc
das
outsl
ret
subb
popf
sti
pop
jne
mov
mov
or
pop
mov
xchg
pop
out
lret
cmp
mov
jb
sub
push
and
jnp
and
adc
jno,pt
xor
jle
sbb
imul
jecxz
sbb
cmp
ljmp
mov
loope
xor
int
xchg
gs
sbb
or
or
cmpsl
imul
leave
test
xchg
mov
cs
jecxz
mov
test
test
add
std
mov
and
int3
imul
sub
push
xchg
and
mov
lahf
fwait
shll
out
xor
into
inc
pushf
stos
hlt
loope
fstl
shrb
outsl
jmp
lods
cli
lods
pusha
push
aas
lods
inc
lcall
add
into
jbe
sbbl
mov
and
enter
shrb
shlb
and
iret
adc
mov
adc
xlat
rorl
clc
pop
cmp
add
cld
xchg
jge
push
shlb
aam
jmp
cmp
insl
pusha
xchg
sub
sub
push
or
aas
in
inc
sbb
dec
push
sbb
subl
push
ds
das
xchg
dec
add
jg
xchg
push
jae
adc
out
mov
idivl
xchg
fimuls
fisttps
sahf
fcmovnu
xor
mov
out
cmp
test
sbb
shr
notb
pop
sahf
jecxz
std
inc
fmuls
dec
xchg
mov
mov
pop
bnd
clc
sar
xor
xchg
pop
mov
or
add
fidivl
loope
pop
cmc
xlat
lock
push
pop
push
fbld
xor
jmp
jb
int
in
lods
jl
sbb
jmp
push
aam
pushf
test
ds
cld
neg
stc
or
mov
lahf
or
pop
stos
cs
fnstsw
mov
gs
imul
aam
loop
ss
fcos
incl
gs
out
loope
sbb
addr16
pusha
jl
inc
sub
adc
cmp
test
adc
xchg
push
loope
mov
dec
or
cmp
cltd
outsl
mov
int
mov
push
add
and
add
mov
mov
filds
sub
pop
sbb
sub
mov
dec
sete
movsl
clc
add
jp
js
or
xchg
adc
iret
dec
pop
jne
mov
pop
imul
pushf
leave
cmc
inc
push
inc
inc
bound
or
add
push
add
dec
data16
in
repz
and
mov
or
scas
jp
stos
jb
mov
test
inc
push
mov
inc
jle
loope
mov
fidivl
cmp
xchg
test
mov
sub
jg
cmp
sub
pop
out
not
dec
lret
pop
dec
jbe
pop
dec
bound
hlt
in
pop
ret
push
stos
push
or
sub
cmove
stos
mov
pop
clc
movsb
cmp
aas
lds
shrb
inc
out
inc
jbe
pushf
addb
test
mov
xlat
jns
dec
nop
mov
and
dec
cmp
pop
lahf
jecxz
add
inc
sbb
cli
cmp
movl
sbb
or
shrl
mov
imul
lret
cmp
in
pop
rcrl
adc
mov
or
push
mov
push
xor
xor
lea
push
nop
adc
mov
gs
orl
cmpsb
arpl
xor
sbb
lret
loope
inc
test
popf
lock
jno
sbb
jge
inc
iret
and
or
xor
scas
xor
jmp
sub
pusha
inc
div
cmp
mov
push
and
mov
sti
into
je
push
mov
adc
push
adc
jg
push
mov
lock
and
loopne
mov
pop
nop
jmp
push
or
ljmp
enter
int
lock
insl
sbb
stos
jae
jecxz
mov
mov
mov
enter
jg
pop
data16
pop
outsb
clc
outsb
xor
es
xor
cmp
dec
in
pop
xchg
in
inc
gs
imul
jmp
andl
ret
sbb
pop
jle
mov
in
js
xchg
jb
mov
adc
setnp
xor
add
sbb
cmp
pop
fcmovnb
ss
xchg
lahf
jp
push
sti
add
mov
mov
pop
fwait
mov
in
jg
stos
mov
pop
cmc
movsl
lock
mov
cmp
gs
repnz
pop
adc
popa
dec
loope
leave
xor
cwtl
or
jno
inc
dec
mov
loop
and
xor
mov
add
inc
pop
inc
pop
cmpl
stos
fbstp
dec
les
lock
mov
mov
in
push
jp
jne
ljmp
pushf
push
or
repnz
inc
cmc
push
or
mov
xor
popa
add
cmp
mov
xchg
outsb
xor
mov
push
test
lds
cmp
aad
stos
mov
pop
pop
imul
and
add
mov
push
dec
test
cmp
inc
cmpsb
inc
dec
jo
add
int
fwait
dec
mov
sahf
insb
push
orb
or
fcmovnb
fbstp
rcll
sbb
mov
loop
sahf
call
push
pop
adc
or
notb
lahf
loop
mov
lret
icebp
adc
xor
clc
dec
push
sahf
mov
dec
out
xchg
jmp
adc
push
jl
jbe
add
add
aas
adc
mov
jbe
stos
and
sub
mov
js
loope
push
push
xor
lea
cli
dec
call
pop
ret
mov
inc
xchg
cmpsb
cmp
inc
push
add
mov
mov
std
push
mov
setnp
adc
fimull
push
mov
cmpsl
imul
mov
cmp
push
cmp
push
hlt
or
mov
sub
into
jecxz
iret
lea
and
fwait
mov
mov
sub
dec
xchg
push
add
in
pushf
mov
movsl
aam
pop
sub
enter
repz
sub
mov
mov
movsb
pop
imull
xchg
push
ret
xchg
mov
ja
stos
inc
fsub
icebp
fwait
ret
test
aad
mov
sub
pop
jmp
ds
dec
out
xor
cltd
mov
mov
inc
insb
lds
aas
fmuls
lcall
dec
jnp
adc
lock
xchg
cmpsb
clc
adc
jnp
push
push
fdivs
fstpl
cmp
lahf
rclb
dec
or
cmc
arpl
popf
pop
out
lcall
fwait
xor
aad
jle
and
adcb
jg
sti
pop
imul
xchg
cmp
je
cli
add
out
push
xchg
js
add
add
jbe
jns
aam
add
push
fimull
mov
mov
into
add
jge
mov
mov
push
add
push
push
repnz
mov
mov
shrl
inc
jg
mov
mov
mov
jle
inc
repnz
mov
jmp
adc
cmpsl
cmc
add
cmp
jae
in
ret
fcmovbe
cwtl
jecxz
and
push
movsl
lea
dec
aad
lds
mov
dec
sub
lret
pop
aas
add
jmp
mov
sti
clc
je
push
insb
inc
dec
frstor
popf
add
pop
fldl2e
mov
push
mov
push
cmpsl
in
enter
je
adc
stos
mov
mov
pop
insb
notl
nop
jmp
cmp
jbe
cmp
pop
jle
pushl
stc
rclb
push
jo
mov
test
cmp
fwait
cmp
mov
out
addr16
and
gs
mov
hlt
xchg
inc
dec
iret
sub
or
fs
mov
push
fdivs
std
push
dec
mov
scas
push
icebp
sti
test
sarl
loop
leave
or
pusha
inc
sbb
push
lea
cwtl
mov
add
cmpsb
xchg
xor
lret
push
stc
stos
dec
in
lods
cmpsb
adc
rolb
mov
mov
lahf
push
xor
imul
cs
fcompl
insl
adc
clc
add
jno
lret
add
or
rol
imul
inc
adc
fldl2e
sub
inc
inc
adc
fisubrl
cmp
in
and
movsl
jg
fmull
pop
shl
pusha
inc
int3
or
sbb
jge
xchg
lods
lods
lcall
mov
inc
gs
xchg
and
int3
inc
popf
xchg
sub
hlt
fs
add
jecxz
push
mov
loopne
mov
pop
pusha
jle
repnz
and
sbb
dec
pop
and
inc
sbb
add
iret
fdivl
in
enter
mov
xchg
dec
pop
cmpsb
inc
and
lds
and
xchg
adc
add
insl
dec
ret
mov
push
sti
push
inc
cmc
fisttps
cmp
push
cmp
push
enter
mov
pop
jno
jp
arpl
mov
int3
addb
push
xor
mov
sbb
es
or
xor
push
pop
nop
std
inc
hlt
xor
popa
push
dec
mul
mov
loop
cmpsb
inc
push
jp
jg
jnp
fstpl
pop
mov
xchg
fsts
xchg
std
pop
movsl
ss
push
xor
stc
push
insl
ss
nop
sbb
pop
test
lcall
incb
aas
jbe
or
filds
sbb
adc
jge
fistps
in
cli
fimuls
push
sarb
push
ficoml
shlb
mov
sub
test
ret
pushf
add
mov
lahf
adc
jbe
hlt
outsb
pop
bound
popa
stos
std
sub
js
stos
pop
xor
cwtl
sub
test
sub
lock
fistl
adc
jne
jno
cmp
dec
and
dec
out
push
sub
movl
xlat
add
push
mov
sbb
xchg
int3
test
sbb
push
imul
faddl
xchg
out
das
inc
and
nop
mov
cmpsb
or
mov
or
xor
push
popa
icebp
push
clc
mov
add
adc
js
andl
aaa
inc
xorl
mov
push
test
jge
mov
push
push
int3
rorl
mov
imul
fwait
xor
inc
arpl
pminsw
gs
lret
mov
push
test
js
pop
aad
adc
loop
push
jnp
scas
inc
call
or
and
out
lahf
jnp
mov
gs
and
decb
mov
sub
dec
pop
test
daa
cmp
idivb
dec
lahf
add
movsb
pop
mov
sub
adc
sbb
or
les
les
fstpt
pusha
sbbb
mov
push
xchg
std
mov
xchg
jns
or
mov
mov
pushf
divb
mov
test
cmp
nop
out
scas
aad
lcall
fdiv
ret
push
les
ret
imul
mov
push
mov
jecxz
test
aaa
sbb
mov
pop
xchg
test
decb
add
mov
subb
cld
or
mov
mov
das
mov
jae
pop
pop
adc
mov
jns
stc
pop
add
aam
jne
cs
add
les
dec
std
aad
jno
cwtl
pop
push
mov
cmp
fs
icebp
cs
out
scas
inc
adc
mov
add
or
jne
cmc
adc
pop
push
insb
scas
inc
dec
fwait
add
aam
test
mov
inc
iret
idivl
imul
rcrb
movsb
and
or
inc
xor
mov
fistps
test
daa
int3
add
sarl
inc
sahf
adc
and
jnp
test
jne
lgs
jp
ljmp
aam
push
mov
in
cwtl
cmp
rcrb
xchg
adc
mov
pop
xlat
cmp
inc
xchg
inc
shr
int
mov
and
aad
repz
cmpsb
enter
adc
mov
sti
cli
sarb
cmp
pop
mov
or
std
lds
sub
mov
in
cld
repnz
cs
ret
cmp
and
pop
shr
pop
test
mov
testb
fsub
fldlg2
xchg
jo
sub
dec
gs
xchg
stos
sub
jo
lods
insb
fbld
mov
outsb
mov
aam
dec
inc
or
sarb
dec
outsb
adc
sub
push
xor
pop
insb
sbb
or
sti
adc
push
jb
iret
inc
out
mov
cld
pop
addr16
pop
or
dec
adc
test
and
mov
in
outsl
fistps
ret
aad
xor
repz
jecxz
jnp
js
int3
push
or
mov
xor
lret
sbb
stc
ja
sahf
pusha
or
push
clc
adcb
cmc
dec
cmp
aad
xchg
mov
add
xor
faddp
mov
pop
inc
lea
jbe
push
add
lret
les
xchg
out
arpl
hlt
je
push
pop
inc
clc
scas
in
es
leave
cmpsl
push
in
bswap
mov
fs
add
in
sbb
cmp
movsb
call
daa
sahf
push
sbb
cmp
jge
js
cwtl
adc
and
test
xchg
cs
mov
lret
loope
fdivrs
andl
int3
leave
xor
cmpsl
clc
jmp
fisttpl
mov
fbstp
aad
movsl
mov
and
rol
int3
xchg
push
xor
sbb
cmp
sub
add
out
imul
mov
ds
cli
cs
jecxz
popf
mov
jne
lods
mov
ficompl
pop
adc
jmp
add
ja
jae
out
adc
mov
push
add
pusha
mov
ret
sub
fistpl
cld
dec
mov
push
xlat
dec
popf
sbb
pop
sahf
and
or
xor
lds
ds
shll
cmpsl
push
lea
cmpsl
int3
adc
stc
movsb
stos
xor
lods
push
sub
and
jno
js
adcb
fcmovnbe
popa
sahf
shr
cltd
pusha
sub
aam
mov
or
dec
sbb
test
lret
mov
or
clc
shll
ficoml
mov
mov
aam
sub
outsl
inc
lret
cmp
repz
mov
ss
test
or
test
std
jecxz
and
mov
pop
repz
mov
ficoml
fildl
ret
adc
sub
fildll
mov
add
out
pop
inc
imul
jbe
push
mov
call
loopne
or
sti
pop
mov
lds
bound
push
mov
xchg
xor
stos
pop
loop
mov
in
subl
jge
ds
sbb
lret
add
xor
ret
ja
enter
sbb
pop
and
push
stos
int3
loope
outsl
push
stos
imull
in
inc
jb
adc
adc
stc
xlat
frstor
popa
push
je
xchg
hlt
xor
adcl
add
lock
pushf
xchg
insl
mov
sbb
adc
frstor
xor
push
adc
mov
fildl
cli
pop
int
xchg
in
jl
gs
gs
and
mov
xchg
sbb
inc
pop
dec
cwtl
mov
rolb
pop
sbb
jne
mov
pop
or
lret
fbstp
pop
insb
add
xchg
jnp
dec
dec
arpl
and
mov
cmp
mov
call
adc
popf
imul
mov
pop
sbbl
pop
js
and
push
pop
pop
adc
push
dec
inc
stos
or
cmpsl
mov
shlb
std
rcl
ja
es
cmp
arpl
mov
imul
inc
and
inc
cmp
paddw
fldt
add
dec
lret
mov
adc
pop
sub
jle
jbe
stos
adc
or
jae
and
loop
jb
mov
xchg
sbb
inc
xor
rorl
out
cs
sti
fldl
in
mov
int3
hlt
sub
lret
inc
mov
fimull
jg
ret
sahf
fadds
addr16
cmp
jmp
jnp
int
jns
xchg
or
pop
aas
ja
outsl
leave
ljmp
enter
mov
sbb
aad
push
xlat
rcrl
sub
mov
pushf
and
and
mov
movsb
in
and
sahf
mov
aad
cmpsl
xchg
mov
mov
mov
xchg
movsb
pusha
adc
xor
and
inc
scas
sbb
into
and
push
sti
test
sub
mov
into
das
loop
add
stos
jle
xchg
adc
je
push
xor
nop
filds
test
jmp
push
push
sbb
gs
jne
jmp
and
mov
jne
jne
ss
out
cwtl
mov
cmp
sti
faddp
enter
orl
jb
or
iret
add
cmp
push
imul
enter
enter
xchg
pop
add
in
jbe
inc
shrl
adc
adc
popf
pop
ret
dec
in
jmp
lods
int3
push
xor
loopne
pop
gs
push
out
rcrb
repz
arpl
in
xchg
cld
aam
stos
in
adc
jbe
mov
mulb
mov
sub
sbbl
pop
mov
movsb
je
or
pop
jp
xchg
enter
stc
daa
push
pop
cmp
fdivrl
push
push
dec
or
mov
xchg
andl
inc
cli
negb
test
popl
xor
rclb
adc
fwait
dec
add
sbbb
scas
je
int
hlt
push
sub
xor
repz
pop
into
sti
aaa
lahf
mov
mov
and
jb
test
fs
in
push
sub
bound
outsl
fistl
dec
outsl
out
xchg
lods
pop
sub
aaa
cmp
repz
mov
mov
test
insb
xchg
ret
les
ficoml
dec
push
es
push
add
fistps
fs
push
xchg
loope
mov
aas
add
and
and
or
xor
jmp
hlt
jno
mov
dec
dec
push
jl
sub
jo
sub
fidivrl
xor
addr16
sub
aam
cwtl
cmc
mov
cmp
cmp
orb
sub
xor
add
lds
push
cvtps2pi
das
dec
mov
nop
popf
jge
xlat
rcr
jmp
ror
ror
or
xor
cmp
in
add
icebp
pop
sub
xchg
mov
mov
adc
adc
rorl
rcll
in
jnp
cmpb
or
xchg
sbb
clc
xchg
mov
push
js
outsb
shll
fld1
or
inc
pop
cs
and
loop
aam
mov
inc
lods
xchg
inc
stc
das
clc
push
mov
jge
inc
adc
fisubs
popf
sti
in
sub
pop
mov
scas
or
mov
mull
mov
xor
xchg
mov
cmp
dec
fldenv
call
jno
mov
add
insb
test
xchg
int3
fwait
mov
mov
cs
cmp
out
pop
dec
adcb
popa
ffree
cmp
and
loopne
jo
sbb
push
leave
cwtl
add
sub
lahf
int
int3
test
xchg
mov
jno
dec
out
pop
repnz
es
sbb
sbb
addr16
cwtl
dec
or
negl
and
outsb
cltd
pop
pop
jbe
mov
adc
mov
call
dec
lret
stos
icebp
sbb
sbb
mov
add
mov
dec
cmp
ror
xchg
jp
and
cmp
adc
push
mov
icebp
or
bnd
cmp
xor
jae
xor
mov
rorb
ljmp
fcompl
add
dec
popa
shll
stc
adcl
mov
lret
jb
imul
scas
dec
cmp
cmp
js
push
xchg
and
outsl
dec
jge
dec
paddusb
mov
ss
pop
lret
or
loope
pop
adc
shrl
push
inc
rorl
push
mov
fs
mov
mov
add
dec
lahf
lds
shlb
aas
and
aam
imul
mov
jp
jg
mov
push
shlb
stos
push
cmc
pop
mov
loop
adc
push
in
testl
sbb
imul
push
dec
jns
push
jne
inc
scas
test
out
sbb
pop
cmp
mov
int3
andb
addl
jp
lcall
in
and
xchg
pop
mov
or
lock
sbb
pop
adc
negb
or
loopne
or
fstpt
pop
mov
sub
subb
mov
push
mov
int
push
pop
js
or
cmp
adcl
in
inc
mov
dec
lods
clc
scas
dec
inc
lret
dec
sbb
shlb
aam
scas
dec
mov
test
ficoml
push
nop
adc
loop
cmpsb
dec
dec
push
lds
pusha
xchg
mov
xchg
mov
sahf
push
add
push
repnz
repz
mov
fcomi
outsl
sbb
jmp
mov
cmp
push
mov
inc
mov
mov
mov
cmp
jo
add
pop
sbb
imul
cmp
add
mov
lods
fnsave
lret
test
sbb
loop
jae
sti
cmpsb
adc
inc
pop
popa
mov
shlb
mov
imul
mov
mov
inc
adc
sahf
xor
and
inc
nop
add
xor
mov
shl
adc
xor
or
sub
loope
jle
mov
or
mov
add
and
or
xor
ss
mov
dec
arpl
aaa
sbb
sbb
imul
cmpsb
jns
aaa
push
lods
mov
sub
lcall
fdivrl
xchg
xchg
cmp
push
mov
cli
sbb
add
out
jp
inc
dec
inc
add
repnz
cwtl
outsl
mov
pop
ja
dec
sbb
xor
pop
lret
dec
lods
ds
xchg
ror
xchg
fnstsw
xor
adc
iret
ficoml
daa
xor
addr16
insl
fsubl
adc
sbb
cmp
xchg
fistl
jne
or
and
push
pop
and
aad
push
daa
inc
jo
sbb
loope
add
enter
stc
push
out
mov
rclb
std
fisubl
xchg
push
pusha
addr16
and
pushf
pop
pop
test
mov
xor
xlat
iret
mov
mov
xor
faddl
icebp
push
das
xchg
cmpsb
mov
push
ljmp
push
addr16
pop
jo
sub
mov
dec
icebp
inc
dec
mov
scas
cmp
mov
repnz
dec
mov
ret
cmp
cmp
test
lock
lahf
or
jle
or
adc
cli
nop
popf
inc
adc
add
pop
cmp
addl
xchg
sub
sti
sarl
jnp
fidivl
dec
rcrb
cwtl
push
jge
jmp
jmp
dec
xchg
cld
mov
imul
pop
movsl
cmp
outsb
fnstsw
dec
pop
cmc
iret
dec
mov
mov
mov
jg
xlat
mov
mov
sbb
xchg
out
pop
xchg
out
xor
mov
ret
jns
lret
inc
push
iret
jne
sarl
sub
mov
cmp
aas
or
sub
jge
pop
push
icebp
pushf
mov
lcall
sub
push
push
add
fldcw
jae
stos
mov
sub
xchg
push
mov
gs
loopne
mov
mov
add
inc
icebp
pop
add
mov
xchg
cmp
dec
push
dec
mov
adc
mov
mov
xor
xchg
and
in
jecxz
lret
fsubl
mov
repz
mov
xor
add
das
mov
and
adc
mov
ss
dec
mov
dec
sub
mov
adcb
iret
sub
ret
out
ret
outsb
loop
cs
lock
xchg
dec
mov
mov
test
sbb
lret
and
pop
pop
mov
fwait
movl
mov
mov
xchg
stc
sarl
xor
cmc
push
mov
push
into
arpl
sub
add
xchg
lahf
out
repnz
jbe
incb
notl
xchg
insb
jo
adc
inc
jp
push
dec
sbb
jb
imul
inc
push
pop
pop
sub
push
rolb
ret
xchg
xchg
out
bound
bound
in
cmpl
mov
lret
test
jl
mov
mov
out
or
ja
daa
add
fadds
dec
fldt
shl
add
adc
adc
movsl
dec
and
push
ret
std
js
jae
sub
mov
adc
push
cmp
cmpsl
iret
in
stos
add
das
sbb
ret
fcmovnu
sub
rdmsr
outsb
mov
stos
scas
add
push
sbb
cld
jnp
out
rclb
fistps
mov
ss
imul
rorl
cmc
mov
outsl
das
loope
adc
push
std
fbstp
jge
jb
aad
cmp
mov
or
fcmovne
dec
pop
push
and
mov
fwait
imul
and
sbb
mov
xchg
popf
bound
jle
lcall
mov
gs
or
pop
mov
xchg
sub
push
mov
push
add
xchg
js
pusha
fst
mov
pop
sbb
jb
cmpsl
cmp
push
loope
aas
or
cmpsb
add
and
pop
cs
dec
push
mov
fcom
xchg
adc
adc
mov
cmpsl
loope
aas
fsts
pop
inc
fisttpll
jecxz
cmp
aam
sub
push
shlb
dec
jne
lea
lea
push
icebp
sub
pop
sbb
shrl
dec
aad
sar
push
aad
gs
push
cmp
cmc
popf
insb
not
out
pop
jb
stos
xchg
pop
clc
fs
imul
or
imul
mov
lods
hlt
sub
cmc
je
push
sbb
pop
gs
insb
fcoml
mov
pop
notb
sub
pop
mov
fdivrp
outsb
inc
sbb
pushf
inc
test
fisttpll
cmp
outsl
ds
out
jecxz
adc
cld
or
scas
dec
sub
lret
das
lahf
sbb
in
pop
pop
sbb
xchg
scas
push
lock
sub
dec
mov
cmp
xchg
imul
shr
push
test
jne
add
outsl
xchg
iret
pusha
pop
xchg
mov
bnd
or
rcrl
push
adc
mov
jle
lret
inc
data16
popf
cmp
mov
out
xchg
cmp
mov
sub
in
or
mov
jae
es
subb
mov
frstor
fstpl
repz
dec
push
int
and
and
call
jne
mov
loope
add
lahf
insb
or
clc
out
rcr
inc
je
pop
js
clc
inc
in
ja
sbb
mov
push
faddl
cmp
jle
push
lds
pcmpgtb
cmpb
adc
idivl
pop
js
js
sbb
leave
and
loopne
or
xchg
ffree
push
imul
movsb
ja
cltd
clc
gs
nop
and
jnp
test
jns
lcall
mov
cmpsb
adc
test
lret
push
adc
cmpsl
mov
sub
xor
fiadds
dec
in
nop
sub
icebp
fidivl
xchg
outsl
icebp
ljmp
jb
add
cmp
fs
fcomps
cld
sti
outsb
and
aad
inc
in
xchg
out
dec
pop
out
imul
xchg
je
mov
or
pop
leave
and
pop
ljmp
mov
rorl
ljmp
inc
aad
xor
push
xlat
outsl
adc
ret
ljmp
outsl
negb
mov
cmp
mov
mov
push
or
push
pop
jge
popf
call
orb
outsl
inc
imul
fsubs
xchg
insb
cli
out
shll
lock
xchg
mov
adc
jae
lret
dec
ljmp
fnstenv
push
out
addr16
mov
daa
sbb
mov
cmp
pop
push
xor
push
mov
cwtl
sbb
cmc
xchg
add
insb
push
lds
fdiv
or
xor
sbb
or
add
les
push
inc
popf
lcall
vcvtsd2ss
push
test
and
sbb
cwtl
and
xchg
xchg
rolb
sti
ss
sbb
jbe
mov
lods
fwait
test
or
cld
adc
jnp
jnp
stos
jnp
lods
mov
test
push
xchg
xor
and
mov
sbbl
add
shll
xor
fld
inc
int
dec
mov
add
mov
shlb
jp
lret
sbb
jne
fcomip
pusha
fs
fstpl
aam
push
dec
mov
stos
cmp
pop
cmp
ret
jnp
fs
mov
xchg
pop
pop
subb
xorb
imul
incl
clc
es
into
fwait
es
sub
sbb
mov
xor
add
gs
in
adc
aaa
icebp
cwtl
fucomip
in
xor
pop
jle
xor
stc
push
or
xor
sub
int
sub
test
pop
xor
cmpsl
add
mov
roll
push
lret
repnz
adc
mov
js
cli
sub
xchg
leave
aas
xor
je
mov
or
xor
jmp
adc
mov
add
xchg
dec
fldt
dec
fwait
loopne
xchg
add
aaa
pop
mov
dec
and
lahf
ds
ss
inc
xchg
inc
loop
or
das
adc
mov
lods
out
push
xor
and
sub
pop
adc
addl
dec
stos
incl
dec
adc
pop
mov
pop
fmull
imul
pop
sarb
mov
cmpsl
out
fistpll
out
dec
or
aam
popa
je
adc
rcll
mov
push
push
dec
push
lcall
movsb
pop
mov
test
jp
mov
jno
in
pop
in
cmp
adc
pop
sbb
test
rcrb
xchg
jae
ss
ss
cmp
push
jb
sbb
adc
mov
sbb
xchg
addr16
ss
push
and
les
cld
fwait
das
aam
mov
cmpsb
sbb
pushl
or
and
push
and
jbe
sbb
fldcw
ret
bound
sub
mov
inc
adc
je
inc
mov
cmp
inc
or
push
pop
push
mov
dec
mov
and
test
mov
cmc
push
sti
hlt
sub
lahf
or
xchg
ds
inc
jb
mov
jo
xchg
jae
sbb
push
pop
add
push
inc
inc
dec
jbe
aas
out
jp
mov
push
out
xchg
mov
jnp
and
fldl
inc
andl
cmp
adc
bound
les
aad
test
fsts
loope
push
shlb
or
sub
inc
pop
mov
fldcw
and
out
pop
popf
jns
mov
jnp
lock
mov
aaa
add
cmp
and
mov
sbb
add
push
and
inc
adc
sbb
and
pop
sub
adc
lock
add
clc
and
rcll
std
sbbl
pop
sbb
loope
sbb
adc
push
or
sahf
rcl
pushf
mov
test
out
test
fidivrl
lahf
jbe
fsubrl
cli
test
icebp
lods
ja
sbb
push
dec
jb
call
inc
inc
fnstenv
mov
sub
les
xchg
push
ja
push
add
or
arpl
mov
adc
ds
faddp
les
adc
aam
jecxz
repz
jns
add
adc
cmp
aam
fmul
iret
mov
push
push
dec
inc
push
test
in
pop
and
jl
push
mov
dec
jle
fidivs
stos
mov
sbb
out
adc
arpl
sub
leave
into
imul
shll
data16
xor
pop
cmp
dec
sub
les
dec
movsb
aaa
mov
arpl
cmpsb
cmp
rcrb
mov
arpl
and
in
stc
bound
mov
or
jb
sbb
fwait
pushf
ret
and
mov
jge
lret
call
stos
xor
or
in
ss
repnz
add
and
dec
cmpsl
rolb
cs
and
es
cmc
lds
mov
fisubrl
push
adc
fs
add
jns
fisubrl
jno
sub
jge
mov
aad
ret
lret
inc
imul
mov
lock
mov
xchg
test
js
rcrl
fimuls
out
ds
ds
add
daa
jge
jge
inc
aas
push
push
sahf
push
jmp
push
add
sbbl
xchg
out
ja
mov
ljmp
xor
xchg
cmp
pop
sub
dec
xchg
dec
mov
scas
leave
sbb
andb
xchg
lahf
pusha
push
cld
out
iret
rolb
cli
xor
das
push
mov
pushf
cmp
lret
sub
mov
bound
stos
fimull
hlt
mov
mov
cmpsb
mov
pop
imul
jge
jge
ror
mov
push
adc
popl
iret
flds
pop
outsb
dec
sub
mov
jns
mov
mov
lahf
pop
push
mov
xchg
xchg
adc
mov
in
out
aad
xor
mov
in
sub
inc
gs
xor
dec
ret
sbb
mov
pop
mov
pop
iret
and
fstl
cltd
jp
fldl
andb
mov
inc
jp
int3
and
cltd
pop
ss
jge
aas
pcmpeqw
mov
jne
or
imul
pop
ljmp
imul
data16
adc
pop
pop
dec
js
xchg
je
fs
add
gs
sub
ds
adc
add
mov
outsb
les
imul
jae
lcall
push
cmp
jb
loope
jl
or
leave
scas
ficomps
data16
jo
inc
sub
das
xchg
push
cmp
ljmp
rcrb
fstpl
sub
dec
xor
xor
add
lds
push
inc
sbb
scas
pop
mov
mov
sbb
add
adc
out
lea
sbb
data16
scas
or
add
ret
loopne
xchg
pop
imul
xchg
push
imul
add
push
jl
sub
lea
jno
orl
add
notl
mov
and
adc
lods
cld
or
mov
incl
loopne
ret
es
mov
in
add
gs
jmp
adc
xchg
test
or
inc
int3
lods
inc
popa
mov
jecxz
icebp
call
cmp
xchg
shr
sub
andl
sbb
xlat
adc
sub
clc
scas
es
mov
push
push
out
enter
test
jne
mov
or
iret
lea
into
pushf
ja
xor
jmp
shll
mov
mov
pop
or
hlt
and
adc
in
mov
aad
push
inc
cmp
lds
fwait
rorl
jns
cmpsb
xchg
jne
faddp
in
in
das
arpl
icebp
dec
iret
lods
fwait
xchg
fidivs
mov
rclb
cltd
add
inc
cwtl
data16
sub
stc
roll
sub
std
divb
pusha
push
add
int
out
je
movsl
jb
push
pop
loop
xor
lret
movsl
mov
stos
jle
mov
pop
mov
aaa
lods
and
dec
jns
mov
pop
inc
push
test
jmp
cmp
and
push
movsl
dec
idiv
es
push
sbb
stos
js
cmpb
jp
mov
test
push
jp
insb
ss
pop
inc
push
imul
setge
loope
sub
ret
xor
fsqrt
dec
mov
adc
mov
repz
loop
leave
jge
movb
cs
out
pop
lods
dec
push
or
rorb
dec
jns
insl
outsl
push
sub
hlt
jg
pop
movsb
xchg
and
arpl
fildll
stc
push
test
mov
scas
sub
inc
ss
pop
in
jp
jnp
sbb
popa
push
stos
fadds
repz
shr
nop
add
clc
mov
mov
fwait
sbb
or
icebp
jmp
mov
mov
lret
fists
dec
xchg
push
into
addr16
xor
mov
jo
jbe
cmp
cmp
mov
repz
mov
dec
rclb
test
mov
dec
call
sarl
fldl2e
call
in
dec
sub
fisubrs
repnz
ja
decb
add
or
jmp
dec
pushf
loope
mov
je
sub
pop
lret
pop
movsb
lcall
scas
ja
int
jle
add
lret
js
adc
jns
inc
call
xor
inc
ret
sbb
ds
mov
mov
pushf
jno
pop
cmp
push
imul
mov
lret
or
add
xchg
les
sbb
popa
mov
cld
mov
popa
scas
inc
ret
mov
rcrl
test
xlat
push
pop
in
cmpsb
mov
jmp
xor
cld
fnstcw
dec
cmp
jp
xor
int
mov
repz
cmc
fbld
jl
mov
pop
push
push
push
fnstcw
jmp
push
dec
xor
mov
andb
inc
jb
and
adc
aad
inc
lods
push
in
or
xor
dec
fstp
ljmp
call
fdivrs
pushf
inc
mov
pusha
and
inc
lret
add
scas
xor
xor
cld
jmp
inc
dec
xor
and
loopne
mov
adc
mov
jmp
xor
xlat
cmp
jp
in
add
mov
sub
fisttpll
push
xchg
mov
mov
push
mov
push
out
mov
leave
sbb
xchg
push
dec
adc
xor
std
add
pop
rcrb
scas
xchg
pop
test
ret
adc
sub
push
adc
xor
lea
inc
cmp
movsl
xor
cmp
dec
aas
jecxz
push
xor
je
push
mov
inc
enter
lds
jp
xlat
sbb
push
xchg
es
and
cmp
mov
push
aas
fidivrl
xchg
fildl
add
add
ror
mov
bsr
inc
add
sti
scas
add
mov
jg
sahf
mov
push
push
inc
pop
cmpsb
jns
lret
testl
imul
mov
imul
rcr
lds
outsb
cli
test
scas
shlb
addb
aas
mov
sahf
je
out
imul
mov
pop
stc
cmp
pop
mov
mov
mov
mov
sbb
pop
data16
pop
add
out
bound
lods
pop
pop
mov
lcall
into
push
repnz
sub
test
lods
nop
sbb
sbb
cltd
bound
pop
add
mov
or
jge
sti
aad
imul
jb
icebp
les
mov
sbb
imul
loop
test
cmpl
lods
mov
jae
mov
adc
mov
fucomp
adc
jbe
fldt
cmp
aam
lret
push
insl
cwtl
mov
repz
mov
xchg
pop
das
jl
data16
lods
pop
cmp
leave
cmp
shr
aaa
outsb
cmp
pop
popf
adc
stc
sahf
out
push
xchg
movsl
sub
mov
sbb
push
jmp
pop
xchg
or
fdivl
out
pop
jl
cmc
cmp
mov
push
je
lods
and
test
insl
cld
mov
mov
cmp
push
lcall
insl
adc
inc
mov
adc
je
hlt
fs
out
call
pop
mov
test
enter
idivb
imull
rorl
mov
mov
xchg
xor
out
inc
inc
inc
or
add
push
xor
xchg
cltd
jecxz
mov
dec
dec
nop
mov
rcll
push
sbb
sbb
lock
mov
popa
mov
sbb
das
test
mov
scas
sbb
insb
js
out
xchg
ss
je
mov
mov
out
or
lock
inc
sub
bound
jg
jne
sub
stc
sbb
testl
fcompl
jns
dec
andb
pusha
jnp
out
or
lods
out
xor
into
jo
stos
cmpsl
mov
in
xchg
push
and
cmp
dec
xor
das
adc
inc
hlt
call
mov
out
push
push
fdivs
iret
or
stos
sub
jge
xchg
fcomp
aas
lcall
jne
mov
pop
dec
in
push
pop
add
loopne
js
fistps
rcll
jns
and
jp
mov
lock
rolb
add
jle
dec
movsb
push
ss
xchg
dec
inc
inc
and
and
mov
mov
roll
std
int3
loopne
mov
add
jne
mov
aas
sarb
data16
into
xorb
cmpsb
shl
data16
push
inc
add
scas
pop
xlat
orl
xor
or
popf
lds
push
rolb
fists
inc
or
sahf
addl
cmp
lahf
data16
adc
mov
jmp
fidivl
fs
out
pop
loopne
or
add
lea
xchg
pusha
aas
repz
jecxz
dec
popw
andl
icebp
nop
bound
inc
adc
mov
negl
movsl
test
dec
ja
daa
pop
pop
inc
arpl
xchg
push
rolb
mov
ja
jmp
mov
mov
fcomi
mov
jnp
std
sub
pop
jno
fmulp
mov
lret
sbb
jb
xchg
ror
rorb
adc
cmp
ljmp
cmp
in
imul
repnz
mov
pop
jmp
adc
and
jnp
lahf
daa
mov
or
mov
mov
jae
sbb
loopne
daa
pop
mov
push
add
push
mov
inc
jg
jle
sbb
inc
in
repnz
cmc
cltd
cltd
xchg
pop
sbb
out
jne
mov
mov
das
jle
inc
push
std
cli
imul
adc
lods
adc
dec
mov
jo
jmp
iret
cmp
pushf
sub
or
push
xlat
mov
jl
int
add
pop
add
cli
add
pop
push
imul
xor
das
dec
sti
mov
push
push
das
sarl
adc
cmp
js
pop
lahf
sbb
xlat
psubw
cmc
pop
ljmp
hlt
sub
shlb
pop
lock
and
dec
pop
pop
cmp
dec
lret
xchg
and
in
dec
pop
ret
fbld
mov
pop
pop
mov
xor
loop
out
inc
js
outsl
and
scas
inc
push
xor
cli
lods
aaa
shlb
and
mov
shlb
push
out
inc
pop
mov
clc
lret
jg
jecxz
aas
dec
cmpsb
pop
test
adc
fstl
out
jp
outsl
ja
pop
sub
cwtl
ss
ud0
out
imul
mov
les
jge
pop
sbb
push
xor
mov
repnz
gs
cmp
mov
mov
adc
loopne
or
fcompl
xor
daa
inc
rorb
mov
mov
movsl
repnz
mov
sbb
int3
cs
pop
out
lds
scas
add
lods
xor
xor
adc
fisttpll
fwait
data16
rcrl
push
mov
or
sub
ret
mov
mov
push
add
adc
scas
aam
clc
cmp
aaa
jb
in
mull
sar
push
push
bound
mov
mov
xor
push
mov
sub
hlt
sub
ja
js
aam
xchg
fimull
mov
jae
pushf
ret
cmp
mov
mov
daa
out
mov
push
push
inc
xor
dec
rcrl
and
cmpsl
push
rol
lods
lock
lds
insb
popf
clc
xchg
mov
dec
xchg
jb
repnz
or
mov
lods
mov
in
adc
fiaddl
dec
cmp
mov
inc
ss
out
test
and
lcall
aaa
push
mov
add
mov
stos
xchg
or
jb
out
out
sub
pushf
fmul
aas
cmp
dec
jne
xor
sbb
sbb
mov
lds
dec
neg
adc
cmp
pop
pop
stos
pop
inc
adc
xlat
pop
cmpsb
ja
and
fimuls
lahf
mov
stc
das
mov
inc
jle
out
dec
fmul
xlat
sarl
fldenv
test
es
fwait
dec
aam
test
inc
fwait
cmp
movsl
jo
repz
add
jnp
lcall
xorl
lds
outsb
mov
push
stos
int3
aaa
jo
dec
sub
fs
push
into
jg
loopne
xor
sub
mov
add
xor
lea
cmc
push
push
adc
mov
pop
or
cmp
mov
xchg
jns
icebp
mov
jmp
loope
fsubrs
sbbl
xchg
out
cmp
test
ficoms
hlt
push
inc
pop
clc
dec
pusha
loopne
or
outsl
jo
int
fwait
lahf
repnz
jo
or
rol
mov
xchg
jmp
pop
nop
test
xchg
add
add
xchg
jmp
pop
mov
imul
bswap
jecxz
loop
lods
dec
into
scas
cmp
sbbl
lret
jp
leave
and
adc
sbb
lods
cld
ficompl
or
push
adc
pop
cwtl
pop
loopne
aas
xor
or
in
mov
loop
and
dec
push
iret
rclb
data16
cmpsb
bound
sahf
andb
add
xlat
movsl
or
jne
dec
mov
mov
andl
inc
push
cmp
inc
pop
lret
sbb
aas
mov
cmp
adc
rclb
ret
shl
jg
sub
pop
call
push
sbb
jbe
mov
xor
out
sub
mov
into
loop
popf
roll
lds
fstps
subb
movsl
add
jl
or
rorl
jecxz
bound
xchg
loope
inc
out
repz
inc
xorl
jecxz
jne
ret
stc
add
ret
and
jo
repnz
out
sub
faddl
and
lcall
jmp
or
and
inc
cltd
cwtl
inc
pop
sub
rcrb
daa
cli
adc
and
cltd
cmpsb
or
xlat
dec
rclb
into
ret
xor
adc
stos
lcall
dec
fmull
imul
inc
jge
int3
sub
fcmove
sub
aas
lods
ja
lret
mov
movsl
mov
fwait
sub
mov
jne
mov
adc
mov
movsb
sub
sbb
mov
daa
push
and
cmpsl
xor
xor
sbb
ljmp
insl
sti
xchg
push
dec
aam
sbb
or
inc
jl
xor
jnp
mov
pop
call
push
dec
les
ljmp
xor
jge
add
in
or
testb
xor
popa
ss
jle
mov
cmpsb
dec
or
inc
add
scas
mov
in
dec
stos
cmp
js
cmp
xchg
push
shrb
and
sahf
out
jp
aad
xor
aas
add
adcl
stc
mov
mov
nop
jb
scas
pop
or
mov
push
push
jg
sbb
icebp
arpl
clc
roll
outsl
xchg
mov
lock
push
aaa
cmp
faddl
test
in
or
in
pop
addr16
and
sbb
mov
dec
add
rolb
dec
fs
xchg
fwait
cli
mov
iret
push
test
sub
sbb
incb
add
out
std
arpl
icebp
loopne
addr16
and
cltd
sub
dec
clc
or
pop
pop
dec
outsl
mov
ds
xchg
jp
ret
and
sub
xor
decb
lret
dec
add
lret
dec
mov
lods
into
popa
jbe
xchg
jne
ss
mov
push
cwtl
jle
sbb
shlb
sarb
cli
push
gs
push
mov
and
loope
es
cmp
in
sbbb
test
mov
mov
inc
jnp
cmpsl
sub
ret
jmp
mov
lret
jge
cs
rcrb
scas
fcompl
mov
mov
xlat
mov
in
dec
iret
testb
mov
das
add
popa
sub
aaa
lahf
std
gs
pop
and
stos
ds
or
adc
mov
pusha
mov
pushf
cmpb
jle
repz
pop
mov
loopne
adc
stc
lock
ja
or
sbb
jg
subl
loop
test
push
stos
outsl
push
dec
sub
inc
movsl
or
mov
insl
inc
sbb
push
jnp
rcrl
sub
cmp
fs
int3
repnz
addr16
push
push
jp
or
xor
add
seto
push
das
mov
inc
mov
fidivs
mov
imul
jo
xchg
adc
dec
and
push
dec
jo
mov
xor
andb
jae
ds
cmpsb
lds
dec
les
xchg
movsl
xor
xlat
and
dec
or
fildl
out
mov
cmp
jl
into
jns
fmull
pop
mov
je
adcl
inc
fwait
sub
cmp
xchg
sub
adc
mov
leave
mov
int
test
cwtl
aaa
pop
andl
test
cmpsb
in
push
sbb
aas
ja
mov
stos
sub
inc
jne
pushf
adc
mov
pop
dec
and
hlt
ret
arpl
lods
leave
out
fs
inc
call
lds
add
add
sbb
sub
insb
int
add
clc
inc
and
sti
ss
xor
mov
sbb
jp
xor
and
out
jg
test
scas
or
dec
and
cli
fcmovnu
jecxz
int
add
push
push
add
cmc
call
mov
adc
mov
nop
xchg
mov
jecxz
jbe
xchg
fists
mov
inc
push
push
ret
xchg
add
cmp
push
pushf
pop
sti
and
lcall
rcll
imul
fwait
stc
fdivrs
aas
aam
dec
cld
jecxz
pop
sub
int
jns
mov
sub
cmp
test
pop
cmp
movl
jnp
je
lret
or
xchg
pop
push
js
sub
mov
and
cs
rcrl
dec
mov
fisubrl
addb
push
adc
addl
lret
inc
push
dec
addr16
shrl
std
pusha
frstor
mov
cmc
mov
ss
and
jo
and
mov
xor
jp
adc
lcall
push
push
jae
popa
sub
cs
xor
jg
pop
in
sahf
cmpsl
lea
cld
idivb
sub
test
ret
jmp
push
mov
inc
jno
pop
testl
rcrb
add
cwtl
add
lods
add
push
data16
out
mov
mov
orb
inc
adc
fidivl
pop
pop
cmp
pop
xchg
push
push
push
addr16
pop
andb
fs
adc
arpl
mov
es
lods
mov
shlb
mov
pop
push
and
push
cmpsl
insb
insb
shll
xor
es
stos
lods
test
mov
lahf
xor
sahf
cmp
clc
std
call
pop
push
mov
mov
out
or
inc
pushf
xchg
sbb
aam
data16
in
push
xchg
or
gs
out
mov
fsubl
cwtl
int
sub
sbb
mov
int3
xchg
in
xchg
stos
sbb
inc
insl
data16
mov
jle,pt
jmp
out
fs
mov
mov
test
inc
push
fbstp
mov
xor
inc
adc
mov
icebp
dec
leave
mov
push
jmp
jl
outsl
testb
mov
or
sbb
mov
aas
xchg
outsl
jp
sbb
call
movsb
sbb
push
mulb
aad
mov
lods
in
mul
into
xor
jne
inc
mov
push
outsb
mov
out
cmpsb
add
xchg
decb
add
adc
xchg
pushf
mov
jnp
out
adc
and
aam
call
mov
stc
xchg
lea
aaa
xor
hlt
lret
dec
mov
add
pop
pop
xchg
sbb
ljmp
inc
in
jns
int3
pop
and
push
daa
cltd
imul
repnz
dec
lret
imul
lcall
aam
out
jecxz
fwait
adc
lea
into
inc
insb
gs
xor
es
int
jb
aam
test
pop
mov
adc
dec
and
cmp
hlt
daa
rolb
dec
mov
dec
pop
lret
into
push
pop
test
mov
and
jae
fnstsw
mov
jnp
call
adc
sub
test
les
xchg
aad
fistpl
sbb
or
add
pop
fucomi
cmp
cmp
cli
xor
test
lahf
xchg
adc
push
pusha
mov
xchg
movl
and
mov
lods
rolb
xchg
mov
les
jb
jmp
xor
mov
aaa
add
adc
test
mov
lret
inc
inc
pop
jg
sbb
dec
mov
push
sbb
outsl
nop
mov
sub
es
inc
xchg
push
mov
dec
xchg
mov
cs
push
xor
mov
clc
and
adc
out
pop
addb
push
aaa
cld
outsl
mov
push
jno
popa
jbe
adc
popf
das
test
xor
in
xchg
pushf
xor
and
repz
mov
aad
sbb
and
and
mov
xchg
fdivrs
add
cmp
mov
pop
inc
mov
jl
xchg
or
in
or
fistps
int3
rolb
push
std
add
jmp
insb
aam
and
arpl
and
push
lret
cmp
in
dec
jg
inc
or
or
xor
and
or
mov
nopl
or
pop
pop
cmp
es
stc
rorb
mull
cmp
inc
mov
push
in
scas
inc
leave
stc
in
fwait
jle
jnp
cli
iret
pushl
adc
aam
xchg
mov
xchg
mov
mov
jmp
and
sbb
frstor
push
hlt
inc
mov
insl
adc
push
fbld
sahf
xchg
sbb
in
mov
push
push
pusha
xchg
addr16
xor
ja
push
add
jns
add
or
cmp
pushf
push
adc
xor
and
ficoml
mov
and
aas
lods
popa
inc
aad
xchg
shl
mov
dec
mov
mov
mov
subl
sbb
rcrl
push
add
jo
push
xchg
movsb
xchg
fidivrl
insb
rorl
mov
dec
and
hlt
mov
stos
fcoml
out
push
and
ja
mov
mov
inc
xchg
ja
orl
ret
jl
js
popa
lahf
rcl
add
movsl
xor
mov
aad
imul
pop
scas
cmpsb
insl
mov
lock
std
outsb
and
pop
daa
sbb
inc
push
mov
push
cmp
into
inc
sti
sahf
mov
sbb
fs
jecxz
aas
into
jp
notb
adc
pop
pop
mov
loopne
cmc
fcompl
cmpsl
pop
out
and
sbb
mov
adc
insb
outsl
jno
aad
xchg
test
jno
cmpsb
andb
mov
in
jne
and
mov
mov
ss
loope
pop
sbb
add
test
xor
js
mov
adc
repnz
pop
mov
or
push
and
push
mulb
jo
jmp
in
mov
sbb
stos
insb
cmp
sbb
xchg
clc
insl
mov
loop
jne
scas
push
ret
pusha
xor
cmpsl
mov
popl
inc
xchg
jg
enter
and
lods
clc
pop
out
push
sbb
std
aaa
push
jecxz
cmpsb
dec
cmp
xor
jmp
test
mov
neg
mov
mov
stc
sarl
leave
fwait
mov
pop
hlt
ds
das
and
push
test
xchg
mov
pop
aas
add
loop
xchg
jbe
das
call
inc
hlt
pop
sbb
fildl
cli
pushf
nop
in
add
dec
jl
das
and
sahf
or
mov
out
mov
notl
mov
xchg
popa
dec
inc
push
add
es
ret
lahf
xchg
jne
adc
lahf
sbb
mov
les
pop
clc
jno
pop
lcall
push
in
movsl
mov
aad
ljmp
inc
xchg
pop
mov
mov
cmp
xorl
ja
mov
aam
push
mov
insl
and
and
addr16
fs
les
icebp
mov
pop
inc
mov
xchg
in
mov
push
pop
ret
leave
xor
int
pop
jns
shll
sub
xchg
adc
int
pop
mov
les
bound
mov
jns
mov
out
sahf
mov
dec
sbb
call
insl
mov
ljmp
jb
daa
int
sbbl
and
frstor
and
pop
test
jle
xorl
sti
fs
jle
pushf
mov
repnz
xchg
or
sti
jno
mov
std
push
mov
and
push
xor
add
cmp
inc
xchg
ret
je
xchg
mov
stos
push
sbb
dec
jp
imulb
dec
flds
push
mov
xchg
push
mov
xchg
and
jo
and
and
loop
dec
rcl
test
or
push
roll
sbb
aam
jmp
stc
fwait
add
sar
cmp
push
sti
int3
lea
xchg
mov
outsl
out
in
mov
and
dec
mov
xor
inc
movsl
push
sub
fiadds
inc
lock
enter
shll
add
or
add
in
adc
push
cs
aaa
cli
fs
mov
and
push
add
sub
inc
in
push
or
test
pop
inc
and
adc
stos
dec
shll
mov
and
fimuls
mov
sub
ret
data16
jne
jne
in
scas
rolb
push
scas
sbb
bound
pop
mov
push
sub
in
inc
dec
xorb
xchg
adc
mov
ja
and
jge
addr16
cwtl
push
xor
fidivrl
sub
test
jecxz
jns
pop
js
push
jecxz
cmp
xchg
fistl
add
xor
push
jb
dec
and
ja
inc
add
xchg
mov
xchg
lret
mov
pop
insl
les
les
mov
repnz
adc
sbb
outsb
into
shrb
loopw
enter
jle
clc
xorl
pop
aas
mov
pushf
push
cli
stos
clc
add
sbb
push
out
mov
pushf
jp
pop
das
adc
data16
ret
pop
add
xchg
cmp
pushf
mov
inc
xchg
mov
mov
add
lds
xchg
jbe
sar
or
adc
cmp
and
aas
stos
push
xorb
jmp
dec
xchg
fsubp
cs
sub
sbb
cs
mov
lea
xor
add
dec
sub
das
lcall
mov
jp
mov
inc
or
lods
inc
int3
rcll
add
shrl
popa
mov
stos
or
stc
mov
add
push
lods
inc
cmpsb
lods
cmpsl
xchg
jp
jne
in
jmp
push
mov
push
movsl
mov
scas
add
outsl
push
daa
jle
sbb
imul
enter
shlb
in
adcl
pop
rcr
xchg
test
leave
fwait
mov
jmp
sub
ficoml
cltd
xchg
jge
jnp
inc
cltd
sub
pushf
iret
in
mov
repz
andl
sbb
cmp
push
in
aam
inc
adc
ret
dec
and
test
jle
sub
ljmp
sbb
ljmp
mov
sahf
sub
les
sarl
cmp
dec
push
mov
mov
xor
sub
lock
pop
mov
iret
in
jae
call
xor
inc
lahf
imul
mov
cmp
loopne
sub
push
adc
int
orl
pop
push
mov
mov
and
xchg
testb
stc
fsubrl
in
push
mov
pop
mov
stos
repz
cmpl
xchg
cwtl
inc
int3
push
aam
and
nop
jmp
mov
scas
ss
js
jge
mov
fcomps
aas
mov
movsl
loopne
sub
dec
or
xchg
add
xor
and
aad
push
dec
push
aam
mov
cmp
sbb
out
iret
pushf
inc
movsl
mov
and
jns
mov
fidivs
add
sbb
lods
aaa
in
aad
ljmp
iret
jge
or
and
out
stc
shll
xlat
pushf
daa
cmp
iret
cs
push
insl
xchg
or
imul
and
inc
fidivrs
xor
xchg
popf
rol
xchg
push
xchg
and
call
cmpsl
or
ja
xchg
mov
popa
fiadds
mov
cmp
insb
or
mov
adc
mov
fidivrs
mov
daa
scas
sub
sub
movsb
lcall
mov
jne
cmp
hlt
insb
xorb
inc
mov
icebp
jo
nop
lret
xchg
cli
mov
cmpsb
xchg
jmp
dec
subl
xor
adc
cli
into
add
ret
xchg
dec
clc
in
cmovns
test
stc
jle
dec
inc
jbe
ja
pop
pop
call
fdivs
out
test
dec
fisttpl
and
xchg
andb
fiaddl
ljmp
lret
sahf
lea
mov
movsb
dec
movsl
shl
pop
and
sub
mov
loope
and
push
mov
int
iret
cli
dec
jnp
mov
mov
push
repnz
sahf
pop
dec
loope
xor
xchg
jge
mov
mov
sbb
mov
psrld
cmpsl
shlb
sub
xchg
fs
daa
outsb
loopne
fldcw
popf
cmp
jnp
pop
sar
cmp
dec
mov
jmp
sub
sbb
dec
addr16
pop
cli
jae
arpl
adc
fwait
into
in
or
xchg
cwtl
push
dec
idivb
std
pop
xor
incl
pop
pop
clc
imul
xor
inc
mov
movl
xchg
mov
cmp
inc
sub
shl
cmpb
in
pop
xchg
cmp
in
lds
js
fsubr
iret
pop
and
pop
jae
mov
xor
lods
pop
addr16
cmp
fdivs
mov
stc
sbb
cmp
cmp
sbb
pop
xchg
pop
jbe
arpl
jnp
mov
je
jl
pop
and
aam
leave
pop
adcl
fucomip
lods
pop
sbb
mov
pop
lock
repz
fwait
sub
cmp
outsb
fbld
adc
mov
test
rcrl
rorl
mov
cmc
push
and
mov
loop
push
dec
aas
lahf
inc
dec
repz
dec
xor
pop
mov
fidivs
mov
xchg
mov
inc
cmp
std
bnd
scas
sub
mov
sbb
jge
insb
imul
sub
lods
jmp
mov
inc
adc
fs
fadd
jae
jo
or
ss
push
or
cmp
xor
das
imulb
xchg
dec
xchg
data16
fwait
dec
fwait
or
imul
adc
lock
dec
icebp
aaa
jmp
rorb
ds
dec
push
xchg
rcll
cmp
inc
pop
cmp
adc
movl
mov
outsl
xchg
std
mov
jecxz
ljmp
rorl
push
xor
xchg
rol
push
sub
push
xor
stos
jns
mov
mov
xrelease
dec
cmpsb
cmp
popa
test
pushf
or
sub
pop
adc
and
or
shrb
jg
mov
jmp
mov
and
dec
push
adc
rol
xchg
insb
inc
jae
ja
and
mov
cltd
push
rorl
pop
mov
sub
inc
scas
pushf
mov
xchg
cmpsb
pushf
sbb
ret
mov
inc
fstl
push
xor
ds
sub
pop
call
pop
fndisi(8087
and
stos
mov
sti
push
push
dec
xchg
xchg
sub
lods
xchg
sbb
xchg
mov
push
mov
cmc
test
rorb
pop
sub
mov
stos
mov
ret
dec
inc
sbb
jns
inc
mov
fcmovnbe
inc
push
xchg
cmp
cmp
popf
jmp
data16
and
ja
iret
aaa
in
xchg
clc
arpl
add
lds
jno
fs
imul
cmp
paddusb
jbe
fisttpl
add
cmpsb
jp
sbb
popf
jns
pop
std
cmpsl
cltd
out
inc
add
and
xchg
shrl
ficoms
imul
out
pop
add
add
test
dec
push
arpl
fwait
imul
arpl
stc
pop
cltd
test
cs
fstl
bnd
jg
mov
sbb
xchg
mov
sub
sbb
mov
dec
notb
sub
in
xchg
and
xor
hlt
inc
push
adc
out
clc
movsb
mov
pop
addl
rcl
mov
aam
push
or
push
test
jle
xor
pop
insl
jne
xchg
xor
and
cwtl
and
gs
dec
or
add
std
daa
loopne
xchg
out
orb
mov
pop
or
mov
pop
out
cmp
stc
rcrl
mov
xor
jae
xchg
clc
into
jo
sbb
sahf
xor
jns
shl
pop
cltd
jmp
int
inc
imul
je
decb
push
push
mov
xchg
out
std
rcll
pop
test
xchg
iret
rolb
adc
rorb
into
mov
lds
inc
add
pop
subb
test
icebp
orb
add
outsb
aad
mov
das
outsl
mov
adc
xor
andl
fstpl
fldl
sub
and
mov
adc
enter
nop
repnz
xchg
pusha
pop
ljmp
in
jnp
add
lret
jb
cmp
stos
adcb
sbb
push
cmp
jg
xlat
dec
sti
jmp
jae
ljmp
and
dec
and
int3
pop
mov
out
xchg
cmp
clc
mov
cwtl
insl
jg
mov
decb
lock
and
or
hlt
jmp
add
nop
ja
cmp
orl
lret
adc
idivl
cmp
push
cld
and
in
adc
mov
test
sbb
popf
jb
fisubrl
push
jbe
rclb
cmc
jnp
outsb
mov
mov
mov
add
aad
add
lahf
mov
roll
mov
insl
adc
xchg
xor
and
sti
xor
dec
fdivl
cmc
xor
xchg
inc
notrack
sbb
mov
movsl
dec
cmpsb
add
arpl
or
push
jle
cmpsb
sbb
xor
add
or
lods
push
push
xchg
shl
in
push
stos
daa
pop
push
add
cmp
test
popa
xor
mov
jo
jbe
jl
xlat
in
loope
nop
jg
jp
aas
inc
mov
ljmp
clc
loopne
mov
mov
jge
jge
ja
cli
repz
addr16
xchg
push
mov
scas
pusha
push
aas
jo
xlat
mov
sub
mov
cmp
aaa
cwtl
push
jnp
loop
cmpsb
andl
or
gs
pop
pop
sub
aam
arpl
ret
int
xor
jnp
push
xchg
mov
cld
pop
lcall
jae
loop
imul
imul
inc
pop
cld
push
jne
cmp
sub
insl
ss
dec
mov
jo
out
lret
sbb
adc
dec
popa
lret
inc
inc
es
in
fwait
lds
sbb
aaa
popf
adc
mov
fiadds
jns
jbe
mov
es
dec
cli
std
imul
cwtl
cmp
ljmp
push
idivb
ja
aad
mov
out
aas
sub
arpl
mov
loop
inc
rcll
repnz
mov
lods
mov
cltd
cmp
ret
xchg
inc
sbb
fwait
mov
data16
and
jge
lods
xchg
xchg
insl
mov
fldt
pop
adc
jl
mov
icebp
notb
pop
es
push
sar
aam
mov
mov
ja
jecxz
aaa
mov
fisubl
mov
and
sub
loop
pop
test
js
xor
xchg
jl
jb
imulb
rorb
xor
adcb
insb
dec
add
lea
sbb
inc
mov
sbb
lods
fucom
std
inc
jns
ret
xlat
mov
movsb
xchg
out
xchg
out
push
dec
jecxz
mov
cmpb
jo
sub
andb
sbb
cmp
mov
jns
inc
in
aad
adc
rol
mov
push
xor
mov
lahf
js
es
xlat
lods
pop
in
std
fcoml
dec
pushf
rol
sbbb
daa
jp
in
fsubrs
rolb
lcall
xor
push
out
jp
pop
adc
bound
rorl
cmp
mov
addr16
lods
and
pushf
dec
movsl
pop
xchg
add
icebp
inc
mov
iret
rorl
cs
push
cmp
mov
mov
cmp
add
cmp
inc
roll
pmullw
pop
cmp
outsb
mov
imul
inc
int3
repnz
in
mov
mov
clc
inc
pop
sti
cmp
ja
xchg
sbb
dec
mov
cmpsb
outsl
ja
pop
mov
sbb
imul
cli
out
push
add
ret
mov
mov
pop
lcall
mov
pop
mov
push
aad
std
ret
inc
add
clc
jl
mov
or
push
xchg
test
push
popa
fmulp
push
js
aam
outsb
sub
xchg
or
sahf
sbb
pop
loopne
out
dec
jmp
push
sub
aam
adc
out
or
dec
mov
addl
lock
int
lds
mull
fs
pop
xor
jg
xor
pop
sbb
in
jb
mov
fldt
push
ja
cmp
cltd
add
addb
pop
call
cmp
clc
dec
inc
ja
pusha
insl
xchg
adc
aad
testl
sub
dec
out
fidivrs
cli
lcall
repz
fmull
mov
add
mov
lock
adc
out
xor
adc
and
push
jns
movsl
mov
out
mov
pop
jmp
in
lret
fs
lret
jne
in
adc
insl
and
jae
imul
push
scas
dec
loope
repz
or
test
repnz
and
lret
jb
test
rcrb
xor
lock
mov
jle
add
add
cwtl
push
imul
fisubl
mov
stos
and
sbb
cmpsl
shrl
cmp
fbld
and
pop
fsubrl
pminsw
loopne
add
pop
outsl
xchg
adc
cmpsl
aam
adc
sbb
lock
pop
and
xor
scas
cs
repz
std
jnp
cmp
adc
inc
and
in
leave
movsb
and
sti
adc
push
sub
ja
cmp
mov
push
cmc
loop
dec
mov
movsl
cmp
xor
mov
test
xor
aam
mov
lods
adc
hlt
cmp
pop
or
jge
je
aad
lret
jmp
sbb
aam
leave
ljmp
popf
ret
aas
sbb
and
and
call
hlt
faddp
jns
daa
fldlg2
ret
repnz
xchg
push
cwtl
mov
lea
cmp
shll
jbe
mov
pop
mov
xor
push
inc
xchg
cmp
dec
xchg
mov
push
lea
cmp
clc
mov
and
mov
jg
js
pop
in
adc
hlt
lcall
dec
and
insb
push
and
or
mov
insl
mov
stos
or
lret
mov
int
xchg
push
push
sbb
and
mov
mov
dec
sbb
outsl
outsb
enter
mov
in
stos
jne
lcall
mov
add
daa
das
daa
icebp
fnstcw
cltd
lret
call
out
mov
out
sub
cld
add
jg
sub
sbb
inc
adc
inc
ficoms
sub
popa
dec
insl
inc
leave
jo
in
pop
dec
loopne
sub
lret
data16
or
insb
fbld
mov
mov
sti
daa
sbb
imul
cmpsb
out
std
push
loop
outsb
and
cmp
add
js
stc
lods
cltd
mov
int3
push
push
jecxz
mov
xchg
fwait
push
push
jne
xchg
adc
aad
mov
jae
movsl
mov
call
jae
repz
adc
lret
sbb
sahf
mov
clc
and
cmp
lea
cld
or
pop
repz
cs
cmp
push
jge
sub
cmp
pop
dec
stos
xchg
cmp
jp
lret
movsb
sbb
test
sti
add
mov
loopne
and
mov
add
in
sahf
clc
jge
add
stos
add
lret
inc
pop
shrb
sub
or
push
sbb
notb
lds
add
add
pop
push
cmp
mov
dec
std
ja
sbb
jno
mov
mov
and
xor
addr16
xlat
inc
aaa
lahf
leave
mov
dec
and
test
repnz
sti
cmc
jp
adc
into
dec
push
jp
mov
jno
bound
inc
std
btsl
aam
repnz
sbb
xchg
out
cmp
daa
push
push
lods
mov
add
shll
stc
dec
fstps
and
adc
and
and
frstor
add
ljmp
inc
pop
inc
sbb
into
repz
movsb
push
push
loop
push
or
cmp
push
cmp
and
ss
xor
lfs
out
lret
leave
mov
bound
mov
adc
ret
stos
lock
dec
adc
lret
imul
lcall
in
enter
mov
test
negb
outsl
test
popa
std
ret
mov
jp
loop
pop
adcb
lret
shrb
ret
pop
or
cmp
pushf
filds
mov
popa
fs
push
and
add
outsb
imul
mov
aaa
sahf
jg
or
or
pop
int
rcrb
bound
pop
cmpl
es
mov
sti
outsl
stos
jg
scas
or
adc
xchg
call
mov
pop
popa
add
imul
cli
pop
lods
mov
fbstp
mov
pop
inc
mov
in
mov
push
shlb
xchg
mov
stos
xchg
mov
daa
fistpll
sahf
jb
mov
sub
leave
lcall
jecxz
cltd
outsl
cld
fwait
int3
popf
fisttps
sub
xchg
or
fwait
inc
aaa
shll
mov
mov
stc
mov
mov
ja
add
test
fs
into
xlat
popa
cmpsb
cmp
dec
fdivl
and
sti
dec
out
inc
cmp
out
outsb
push
mov
pop
jns
arpl
jo
imul
mov
mov
in
mov
shlb
int
jb
ficoms
repz
sbb
push
lods
lock
pop
shll
xor
xchg
xor
sub
sub
in
loope
ss
cmc
leave
data16
stc
pop
lcall
in
pop
push
pop
sub
hlt
stos
loopne
lcall
shrl
adc
mov
orb
mov
insl
shlb
loop
jns
pop
cmpsb
loop
xchg
xchg
pusha
loope
mov
mov
scas
inc
mov
xlat
ret
cli
lret
lret
xchg
cmp
ljmp
sub
adc
or
test
aad
divps
cmc
or
push
test
sub
or
pop
cmp
cmp
adc
repz
mov
movsl
dec
pop
ret
fmul
aaa
sahf
loopne
mov
xor
rol
divl
imul
rol
push
adc
mov
xor
pop
imul
adc
pop
and
cmc
in
push
dec
lahf
sarb
pop
fsub
ret
in
mov
mov
cmp
xchg
xchg
cld
xchg
andb
jmp
in
mov
fcmovu
lock
xor
dec
add
xchg
in
xchg
xor
jmp
jo
mov
clc
cmpsl
xchg
mov
jb
add
dec
loop
xor
ret
xor
cmpl
jl
ljmp
xor
inc
subb
sbb
out
int3
mov
rol
loopne
xchg
mov
cwtl
xchg
std
movsb
notl
mov
loop
shrb
fidivl
sub
and
inc
dec
arpl
sub
mov
xor
push
xor
std
pushf
jmpw
xchg
pop
mov
test
cltd
push
in
sbb
mov
cltd
shll
jl
push
js
add
mov
rol
in
test
insb
out
mov
mov
dec
add
jo
imul
push
cmp
cmp
pusha
fldenv
fisubrl
loope
out
xchg
mull
hlt
mov
das
negb
or
adc
push
jae
fcomps
mov
mov
mov
shl
popf
jne
mov
cli
shlb
jne
stc
push
jmp
pop
clc
fidivs
scas
cmp
sub
adc
aad
pop
mov
pop
or
test
out
lcall
or
push
outsb
sub
mov
mov
lret
xchg
test
cmp
mov
lea
into
popa
fcmovbe
lcall
xchg
in
outsb
rol
xor
movl
lahf
sbb
mov
es
ds
cmp
xchg
out
push
inc
sub
xchg
in
loop
je
popf
out
mov
fmul
js
or
xlat
rcr
leave
orb
sub
sbbb
fmuls
lods
bound
mov
adc
mov
or
inc
jle
push
or
xor
std
shl
shr
add
insb
mov
test
push
jbe
jp
lcall
pmaddwd
pop
xor
pop
cmp
push
fists
outsb
adc
and
mov
xor
cli
mov
pop
int3
std
iret
and
sbb
mov
int
dec
jns
and
jb
and
cmp
adc
and
inc
jne
fadd
sub
sbb
std
xchg
push
push
push
push
in
test
jo
sbb
mov
jmp
inc
xor
adc
sub
add
push
ja
jmp
jge
fldcw
rol
fsubrl
xor
cwtl
ja
gs
das
pop
jl
inc
and
jbe
or
push
fcomi
dec
push
test
rcl
sub
jno
sbb
dec
mov
adc
push
scas
inc
das
cmp
mov
outsl
sub
push
flds
and
sbb
add
rolb
cmp
rorl
lret
pop
mov
adc
xorl
sub
inc
xor
pop
mov
mov
inc
adc
int
lahf
cmp
dec
jno
adc
jmp
cmpsb
dec
aam
fnstenv
pushf
fildll
push
lds
add
xor
test
inc
insl
cmpsl
xor
loop
cs
jle
mov
inc
dec
lods
dec
imul
xor
fisubrs
xchg
stc
and
mov
and
pop
sbb
mov
cltd
xor
dec
sbb
les
pop
out
ja
daa
fpatan
jb
push
push
cmp
xor
sarb
push
sbb
fdivrl
fidivl
mov
or
sub
lea
das
xchg
jne
and
and
jg
push
lcall
ret
cmp
pop
push
xchg
xchg
jmp
data16
fiaddl
push
pop
inc
xor
rcrl
out
xchg
mov
insb
mov
xchg
xchg
add
push
mov
cmp
int
roll
cmp
xlat
mov
rcrl
xchg
mov
xor
in
mov
mov
cwtl
stos
fidivrl
sbb
rcll
mov
push
cmp
cmpsb
loopne
mov
enter
jmp
jbe
into
cltd
or
out
jo
and
lods
test
ret
or
xchg
mov
mov
lods
hlt
push
inc
movsb
in
iret
pop
xchg
push
fcmovbe
mov
and
inc
push
and
aaa
adc
inc
pop
push
jecxz
push
push
fsubs
cmp
in
adc
insb
out
pop
orl
hlt
push
rcrb
cmp
jmp
dec
aas
or
imul
pop
and
jmp
nop
or
jecxz
sub
bswap
pop
stos
popf
add
jecxz
sbbl
xor
cmp
pop
mov
imul
sbb
into
mov
xor
lods
mov
xchg
int
push
fldenv
sarl
add
sbb
je
inc
daa
test
cmpsl
mov
adc
adc
inc
and
jl,pn
ret
xor
mov
inc
aas
stos
jge
popa
mov
adc
ljmp
les
adc
sbb
into
xchg
test
jbe
aaa
push
xor
xlat
std
ret
stc
stos
fisubl
test
mov
pop
dec
mov
mov
shlb
fs
sbb
int3
mov
jmp
leave
bound
mov
fcoms
add
sub
sbb
and
ja
shl
stos
shrl
mov
aad
dec
addr16
movsl
push
mov
sub
mov
sbb
xchg
lret
mov
out
pop
fcmovne
leave
das
insb
push
fadds
mov
aad
jae
jbe
adcb
xchg
sub
pushf
popf
cmpsb
leave
or
xchg
mov
pusha
hlt
inc
push
jp
jp
daa
sbb
sbbl
loope
shll
pop
rolb
in
popf
lret
fcoml
xchg
add
mov
repz
test
out
mov
pop
and
dec
pop
sahf
movsb
adc
pop
xor
pop
out
mov
ret
xor
cmp
es
ret
mov
xchg
and
out
pop
icebp
push
xchg
and
sub
and
push
lcall
or
sbb
clc
rolb
mov
iret
fcmovbe
or
mov
cmp
jno
dec
outsl
in
sbb
into
sbb
loope
fs
sub
xchg
fbld
xor
add
shl
push
mov
adc
mov
pop
adc
test
stc
arpl
mov
dec
xchg
dec
dec
in
scas
dec
mov
xchg
push
icebp
sarl
mov
push
in
or
inc
sub
sub
mov
sbb
mov
push
orb
stos
sub
stos
cmp
data16
or
popa
inc
call
fldt
cmpsb
roll
xor
pop
xor
push
cmpss
push
dec
sub
ds
dec
scas
xchg
sub
push
stos
jnp
jmp
inc
shll
repnz
sti
rcrb
out
mov
mov
or
insl
std
mov
shlb
sbb
inc
add
call
scas
call
outsl
and
ret
mov
push
lahf
lcall
andb
les
in
aam
xor
leave
xlat
mov
iret
ljmp
scas
jbe
in
imul
aad
out
xchg
enter
test
pop
mov
icebp
in
sbb
orb
sub
jnp
les
xchg
or
rclb
popa
les
push
xchg
lock
fildll
js
xor
incb
stos
pop
xor
out
int
mov
add
jnp
call
cmp
insl
inc
mov
inc
cmpsl
sub
aas
rolb
lret
jp
cmp
fwait
in
arpl
dec
loopne
test
pop
fisttps
das
xchg
cwtl
push
shll
push
dec
pop
stos
cmpsb
cmp
push
push
mov
jecxz
sahf
cld
jns
sub
jae
movsl
inc
mov
xchg
dec
add
and
jo
fnstcw
sub
dec
push
pushf
loop
mov
add
js
subb
in
jns
dec
lea
push
rcll
sahf
adc
sahf
xchg
inc
inc
xchg
jl
inc
xchg
cwtl
inc
mov
jne
jle
push
ss
or
sti
or
sbb
sbb
out
add
data16
das
int3
jl
inc
std
in
adc
inc
jbe
imul
or
pop
add
push
cmp
icebp
out
into
jmp
add
mulb
add
push
jno
jle
insl
ljmp
add
add
into
test
jge
push
xor
sbb
ret
iret
xchg
inc
mov
test
call
jg
lods
test
or
into
inc
rcll
iret
xor
call
in
clc
scas
cli
xor
cs
mov
pop
ret
lds
das
push
cld
popa
int
pop
pushf
xchg
test
xchg
push
push
in
xchg
and
adc
dec
sti
ja
mov
sbb
jae
out
xchg
jg
dec
xchg
push
cmpl
add
stos
pop
insl
adc
push
push
jmp
mov
sub
daa
cmp
fwait
les
xchg
cwtl
lea
test
mov
or
loopne
mov
cmp
mov
mov
in
fidivl
dec
in
dec
xor
bound
xor
xchg
fucomi
cmp
fbld
aam
test
sub
mov
and
xchg
adc
out
ficomps
inc
testl
lds
push
push
dec
mov
into
cli
les
jbe
dec
jecxz
adc
push
pop
movb
mov
lock
in
jp
jge
mov
mov
add
inc
lret
mov
jle
cmp
mov
imul
jmp
inc
enter
xor
cmp
divb
sub
lea
fisubrs
jno
and
mov
or
outsb
daa
or
inc
mov
hlt
jecxz
dec
dec
in
imul
pop
cmp
cwtl
sti
mov
lds
movq
nop
cmp
add
sahf
shr
add
dec
insl
addr16
dec
in
test
mov
lea
pop
xchg
sbb
in
mov
lcall
imul
mov
push
cmp
push
enter
inc
cmc
mov
insl
in
xchg
std
sub
test
cmpsl
nop
sbb
fs
in
sarb
jne
pop
cltd
out
iret
stos
pop
add
sbb
es
pop
inc
mov
adc
out
clc
lret
out
cmpsl
mov
lock
pop
mov
push
outsl
xchg
inc
mov
add
mov
inc
je
sub
leave
dec
sub
in
and
jbe
sar
testb
hlt
lea
jge
sbb
add
pop
fwait
pop
sbb
xor
insl
jge
jp
out
push
rcrb
ret
push
push
es
adc
nop
add
mov
push
sub
test
outsb
or
mov
xor
scas
addl
mov
dec
xor
lods
rorb
movsb
sbb
nop
sbb
or
sub
sub
push
mov
xchg
pop
mov
jae
push
jp
pop
popw
dec
push
jmp
and
cs
leave
jg
and
fwait
mov
cmp
push
cmc
adc
jl
jbe
mov
and
mov
and
xchg
sbb
fucom
xorl
sub
pushf
or
mov
jp
adc
inc
aam
rcr
test
testl
cs
pop
std
mov
mov
insl
xchg
fildl
push
daa
push
xchg
adc
jmp
and
aaa
dec
shll
sub
push
pop
daa
nop
add
fs
nop
leave
inc
dec
mov
outsb
fstpt
lahf
and
icebp
xchg
leave
xchg
or
xor
pop
into
pop
push
xchg
fwait
xor
jno
clc
vsubpd
or
mov
mov
stos
in
mov
dec
adc
sbb
and
push
dec
push
subb
push
ret
cs
xchg
aaa
int
fwait
movsl
dec
leave
or
add
js
xchg
hlt
cmpsb
cwtl
jl
sbb
repz
jg
push
adc
pop
cmp
pop
jo
andl
nop
add
lret
fisttps
jmp
incb
jo
inc
in
inc
xor
and
out
fdivr
stos
int
repz
test
sbb
adc
lods
xchg
push
ds
scas
insb
xorl
add
mov
cmpsl
daa
stos
inc
insl
lret
jb
xor
out
and
repz
sbb
and
aaa
or
mov
push
jge
mov
std
es
jg
pop
mov
xchg
mov
outsl
dec
out
jl
outsb
xchg
dec
bound
pop
mov
push
ret
add
mov
jmp
lahf
mov
decb
jl
mov
mov
iret
gs
xor
xor
mov
mov
sub
sti
mov
adc
mov
mov
xor
fdivrp
cmp
add
sarl
ss
pop
popa
test
dec
rorb
inc
test
fcomp
xor
out
xchg
xor
sbb
pop
nop
dec
pushf
or
pop
icebp
pop
xchg
cmp
or
out
gs
mov
cmp
or
sbb
jl
push
out
sub
loop
add
jge
mov
xchg
jns
out
out
cmc
sbb
leave
and
pop
sub
push
sbb
jbe
mov
movsb
dec
push
nop
out
or
lahf
push
pushf
and
test
cli
cltd
and
popf
fcomps
push
pusha
out
push
jle
les
push
jecxz
cmp
push
repnz
mov
cmp
fdivrl
rorb
fcoms
sarl
popa
nop
adc
mov
stc
jmp
adc
mov
cmpsl
and
adc
push
int
fdivrs
jl
fsubrp
mov
or
mov
shrl
add
loopnew
cld
adc
fcomip
out
mov
adc
xchg
into
enter
sahf
and
mov
fnstsw
shll
insb
add
ja
dec
les
cmc
mov
fisubrl
dec
or
stos
mov
out
ret
push
xorb
fdivl
daa
aad
insl
pop
out
push
mov
mov
push
leave
mov
cmpl
push
pop
mov
inc
jne
fidivs
jns,pt
pop
and
add
icebp
sub
cli
sbb
enter
push
stos
jp
push
cmp
cmp
fisubl
push
jge
xchg
lds
jg
ja
mov
arpl
ds
lods
or
inc
std
test
or
imul
ret
xchg
dec
out
into
jb
shrl
test
js
mov
pop
iret
in
aad
adc
lds
stos
inc
or
aaa
jl
xchg
push
das
aad
movsl
sarb
mov
ret
xchg
roll
jmp
xor
xlat
sub
add
pop
adc
xchg
cmp
dec
daa
arpl
fbstp
adc
adc
movsl
sub
xchg
sbb
push
mov
push
cmp
test
sahf
fstpl
popa
xor
ljmp
xlat
dec
loopne
fsubl
adc
push
daa
and
jp
push
in
dec
dec
or
dec
push
xor
jae
aaa
ret
inc
stc
push
mov
or
pop
repz
mov
repnz
mov
or
jle
pushf
and
ret
outsl
ret
int
gs
cmp
cmc
push
push
xor
xchg
jmp
int3
jb
push
sub
sub
push
sub
add
subb
sub
ret
cmp
adc
int
cmp
sahf
mov
pop
pop
add
lods
lahf
popa
mov
xchg
jl
lds
cmc
loopne
rcll
mov
jecxz
mov
pop
cmp
clc
cmp
adc
leave
cmp
xor
sub
xchg
mov
mov
sub
sbb
xchg
shr
orb
mul
lods
push
dec
inc
lods
jecxz
sub
cwtl
jp
out
rcrl
jecxz
ljmp
in
sahf
dec
pop
cmp
leave
cmp
push
xchg
std
test
push
mov
inc
mov
dec
inc
jns
test
cmp
adc
and
sbb
push
sub
test
not
insb
stos
iret
xor
stos
popf
pusha
mov
xchg
leave
cmp
cmp
popa
push
insb
cwtl
jbe
iret
xorb
out
decb
mov
dec
outsb
dec
jns
mov
inc
pusha
xchg
fstp
jbe
pop
jno
mov
scas
cmp
test
cmp
test
aad
mov
pushf
in
jne
cmc
ds
pusha
inc
or
pop
test
jno
int3
inc
das
sub
fs
aas
mov
ljmp
enter
clc
mov
adc
scas
jno
and
sbb
je
scas
andl
cmpsl
mov
inc
and
cmpsl
push
repz
ljmp
shrb
push
dec
add
mov
stc
fucomip
mov
pushf
lret
arpl
fstl
cmp
movsl
repnz
xor
sub
icebp
push
push
mov
adc
mov
inc
push
outsl
xor
jae
aam
mov
xor
cltd
sbb
movsb
sub
and
fdivs
les
xchg
mov
mov
jb
jbe
inc
sbb
js
push
sub
out
push
mov
xchg
xor
insl
gs
faddl
xchg
pop
add
int
jae
add
std
pop
push
repz
xchg
mov
mov
mov
jbe
jb
sets
mov
stos
sub
inc
push
outsb
xor
lock
insl
arpl
popf
cltd
xchg
and
jne
shll
jns
andl
pusha
push
imul
das
push
and
and
sbb
dec
inc
outsb
mov
outsl
lods
pushf
inc
push
adc
into
int3
outsl
insb
pop
xor
scas
repz
mov
and
sbb
stos
xchg
stos
mov
or
aaa
cmp
adc
inc
rcl
movsl
cld
and
mov
mov
ffree
xchg
mov
sbb
lea
jmp
inc
repnz
xor
stos
inc
mov
nop
mov
pop
lahf
or
add
mov
add
mov
mov
and
push
call
sahf
xlat
jle
mov
dec
and
push
inc
popf
hlt
or
out
inc
pop
scas
insb
pop
hlt
mov
popa
loopne
gs
mov
or
cwtl
repz
xor
fwait
and
or
xlat
int
shl
mov
mov
cmpsw
outsb
fdivrs
jecxz
call
mov
jecxz
push
cltd
shl
xor
adc
fsts
mov
js
out
cmp
cmp
inc
adc
scas
ds
les
pop
xchg
scas
sti
jno
cltd
push
mov
lea
pop
negl
xchg
lret
stos
je
sar
pmaxsw
jg
pop
cld
mov
adc
test
js
mov
mov
mov
bound
int3
lods
mov
negb
jae
xor
nop
mov
push
pop
mov
icebp
outsl
out
mov
pop
push
pop
jne
mov
lds
out
lds
push
rorb
loopne
xchg
cmp
mov
fcompl
pop
lret
in
movsb
mov
pop
ds
xchg
imul
nop
ds
sub
leave
fwait
push
sub
mov
shl
mov
push
jp
xchg
rep
test
jns
sub
mov
pop
fbstp
test
push
push
ds
push
outsl
lcall
inc
dec
and
jns
int
pop
fildll
jae
jmp
ror
stc
pop
orb
or
mov
xchg
out
fs
jge
lret
lret
notl
sbb
mov
mov
ret
mov
mov
orl
push
mov
adc
xor
cmp
fisubl
stc
jle
ss
or
sarl
sbb
mov
xchg
mov
sub
enter
test
xor
aaa
and
fdivs
aas
and
icebp
int3
push
fdivl
xchg
mov
jmp
icebp
cmp
fnstsw
push
mov
add
push
js
mov
xchg
int
sub
cmpb
cmp
in
push
pop
cmpsb
loop
cwtl
pop
push
and
cmp
in
test
int3
mov
addb
sbb
sub
mov
ss
loop
inc
pop
mov
xchg
or
push
xchg
mov
sbb
xlat
pop
dec
cmp
cld
cltd
pop
jo
lret
jb
aad
jne
xor
pop
loop
mov
shr
popf
add
imul
daa
lret
std
in
cwtl
push
add
ja
xor
push
inc
mov
sbb
and
bound
fisubrs
icebp
cmp
adcb
in
ja
sub
xlat
stc
cmp
xchg
or
mov
insb
push
add
insb
mov
xlat
mov
je
fadds
lock
filds
jb,pn
mov
xchg
into
lret
fbld
push
jno
mov
mov
and
xchg
hlt
sbbb
add
mov
push
xchg
hlt
sub
outsb
cwtl
sbb
mov
lcall
push
popf
jecxz
test
and
mov
mov
or
and
sub
lods
mov
adc
jmp
push
adc
out
add
fwait
dec
inc
aaa
mov
pop
cmp
pop
xor
add
push
lahf
and
fwait
xchg
sub
cmp
sub
movsb
out
shr
jae
mov
jb
mov
or
icebp
shll
mov
adc
inc
sub
test
xor
testb
and
xchg
dec
adc
adc
sbb
push
dec
pop
ret
push
scas
int
mov
movsl
mov
mov
and
std
and
int3
out
mov
and
daa
mov
jl
icebp
fldcw
das
test
fcom
lahf
push
cld
inc
outsb
js
push
sbb
shrl
mov
rclb
outsl
jp
or
mov
jnp
adc
testb
sub
insb
cli
add
subb
adc
push
imul
add
lds
hlt
data16
aam
repnz
test
cmp
out
inc
repz
and
add
test
movsl
xor
sub
jle
jle
je
cmp
push
pop
inc
mov
push
or
mov
inc
into
sarl
sbb
lret
and
sub
jae
sbb
push
fsubl
add
aaa
push
add
lahf
or
mov
pop
out
pop
aaa
xor
leave
cmp
pop
cmp
dec
das
jns
and
push
jg
mov
cs
dec
popf
lods
stos
sahf
fidivs
or
xchg
add
xor
mov
aam
sbb
sbb
shrb
xor
push
inc
lods
jg
stc
sbb
rolb
jl
leave
outsl
loope
sub
jns
fldenv
add
mov
cld
add
outsb
pushl
inc
adc
and
mov
sbb
stc
mov
cmpsl
aaa
das
hlt
out
fcomi
lds
repz
sahf
cs
sub
lds
xchg
or
pop
lods
mov
push
dec
call
xchg
fbstp
mov
adc
sti
in
add
xor
push
inc
dec
cmpsb
sub
xorb
jbe
dec
mov
aam
push
lods
faddl
sbb
pushf
push
lods
push
mov
pop
sub
icebp
cmp
mov
mov
lods
jnp
push
xchg
add
fildll
xchg
ret
xchg
xlat
imulb
shlb
mov
into
mov
arpl
xchg
push
mov
jge
arpl
pop
push
mov
gs
and
enter
popa
dec
xchg
mov
push
pop
cwtl
or
out
mov
or
mov
inc
xor
scas
sub
mov
rol
fwait
fwait
aam
jb
jno
mov
mov
ljmp
test
mov
iret
mov
mov
loopne
mov
mov
hlt
pop
xchg
cmp
jge
dec
jge
mov
mov
xor
mov
sarb
das
cwtl
outsb
stos
mov
push
sbb
sub
rolb
std
into
sub
xor
mov
push
mov
xor
std
jg
lods
cmc
jo
mov
repz
mov
pop
call
sbb
mov
clc
mov
sahf
shlb
cmp
sbb
jne
jo
aad
mov
sbb
movl
and
xchg
orl
push
sbb
mov
cmp
ljmp
sbb
sub
sbb
jbe
jmp
mov
mov
hlt
loop
and
fstpt
inc
or
clc
jl
les
out
je
jae
out
sub
push
dec
cmp
mov
lahf
mov
and
add
sbb
in
xor
jle
mov
test
push
adc
sbb
pop
nop
push
fadds
pop
lods
in
enter
ror
jp
adc
push
ja
imul
jp
in
imul
int3
xor
sbb
scas
rcll
xchg
aad
adc
pop
mov
cli
and
int3
ffreep
jmp
sbb
ficompl
faddl
or
dec
js
lock
adc
int
cltd
and
sbb
arpl
cwtl
xchg
or
and
jp
gs
dec
push
aas
testl
sbb
jae
dec
push
adc
add
inc
xor
lret
in
cmp
fimuls
in
and
and
imul
pop
out
mov
push
imul
cli
cmpsb
cmp
inc
xor
jmp
cmc
cmp
test
inc
mov
sub
pop
dec
jbe
addr16
cmovnp
jae
shrb
out
cmp
pushf
ljmp
frstor
inc
mulb
mov
lcall
out
jo
enter
inc
add
out
arpl
push
push
jne
inc
mov
lea
pop
popa
jmp
and
inc
mov
mov
mov
adc
pop
pop
ss
jge
lret
sti
inc
pop
mov
push
cmp
pop
cmp
mov
je
jg
insb
add
into
jae
push
lods
stc
mov
in
icebp
cs
lds
xor
mov
icebp
in
adcl
into
mov
mov
fwait
mov
push
testb
mov
loope
push
loopne
push
lds
cmp
push
pop
sahf
outsb
mov
daa
out
dec
insl
icebp
es
dec
shlb
mov
cmp
mov
ret
or
out
rcrl
xchg
dec
leave
mov
xor
imul
cmp
stos
or
pop
pusha
je
imul
lahf
mov
movsl
xlat
mov
lods
fwait
xor
mov
test
sti
lea
lods
jp
je
enter
jl
xchg
in
pop
test
dec
scas
push
inc
decb
jae
mov
xlat
loope
je
cwtl
mov
adc
orb
xchg
lods
sub
dec
jmp
test
mov
sbb
mov
jne
lea
gs
sbb
cs
or
inc
shrl
dec
push
inc
and
in
popf
add
mov
sub
dec
mov
repnz
fcmovne
loopne
ss
mov
aas
outsb
push
icebp
gs
inc
mov
adc
aam
jo
jmp
cwtl
insb
mov
imul
inc
xlat
mov
into
mov
je
pop
or
das
jnp
js
pop
nop
jge
mov
cmp
xchg
rorl
lea
sbb
sahf
add
mov
shrl
push
or
sbb
pusha
mov
jne
sub
or
fnstenv
aaa
outsl
xchg
adc
xlat
xchg
add
xchg
xorb
jl
mov
ficoml
jmp
and
es
sub
jno
cltd
cmpsb
add
jg
popf
fdivr
aas
sub
std
insb
aad
adc
adc
xchg
fs
mov
cmp
add
fidivl
pop
cmpsb
inc
pop
subl
sub
shl
mov
and
pop
test
or
mov
pushf
shll
int3
xor
movsb
lods
cmp
inc
and
sub
aas
cmp
pop
pop
mov
icebp
cmp
stc
push
test
call
popf
jge
jns
mov
pop
mov
dec
mov
inc
fisttpl
push
mov
sbb
decl
jae
or
out
adc
mov
aas
rcll
jns
and
adc
sub
sbb
es
mov
mov
xchg
popf
mov
stos
mov
inc
rorb
fcmovne
and
scas
stos
test
xchg
add
sub
in
in
nop
aad
pop
push
adc
sub
mov
inc
cmp
lea
jae
lret
bswap
test
arpl
mov
stos
repnz
rolb
rcrl
push
mov
aaa
add
ret
xor
inc
sbb
std
insl
fst
xchg
in
scas
dec
addr16
inc
loop
adc
scas
mov
in
in
xchg
jne
cmp
test
sbb
test
scas
dec
lret
lods
mov
mov
fsubrs
cmp
shl
adc
xor
and
popa
xor
sub
scas
xchg
sub
mov
add
lret
jb
add
test
cmp
sub
loopne
stos
adc
jns
push
dec
rolb
jno
daa
sbb
addr16
aad
les
jb
in
pop
dec
ja
cmp
aad
mov
cmp
inc
mov
push
adcb
js
cmp
push
mov
fs
dec
inc
movsl
out
and
fbld
jp
inc
rorl
or
xlat
and
and
cmpsl
icebp
ss
xchg
imul
mov
jp
pushf
fcoms
insl
rcrb
mov
clc
lods
mov
ret
push
leave
sbb
test
fisubrl
cltd
mov
in
jl
repz
movsb
bound
mov
aas
push
aas
inc
cmc
sbb
mov
dec
clc
cltd
mov
inc
sub
xor
and
mov
sbb
scas
cmp
sub
in
ror
pushf
insl
mov
add
movsb
mov
cmp
popf
bound
mov
inc
stos
sbb
insb
pop
sub
add
call
mov
ds
shrl
or
push
or
cmpsl
cmp
pop
pop
lock
cmp
std
dec
dec
ret
repz
ffree
xor
sub
fucom
lods
sbb
and
ss
xlat
add
and
shll
adc
shlb
push
addr16
pushf
add
enter
das
or
roll
lret
and
and
inc
fcomps
mov
lea
into
sbb
aad
and
jl
inc
jge
mov
mov
xchg
in
xchg
in
stc
fs
rol
pop
bound
pop
dec
test
movsb
clc
out
dec
adc
es
cmp
cld
xor
inc
jle
data16
test
or
jns
loope
pop
pop
test
sbb
ret
aam
iret
mov
pop
gs
sub
sahf
dec
aaa
xorl
inc
adc
xchg
pop
scas
xchg
dec
sub
sub
sarb
in
sti
loopne
mov
jle
sarl
mov
jg
or
push
scas
pop
test
add
push
inc
pop
jmp
lret
movsl
and
insl
push
insl
cmpsb
aaa
stos
xchg
jg
daa
daa
fistps
pop
shl
inc
movsb
lods
xchg
mov
rcl
or
add
pusha
arpl
addr16
popa
sahf
outsb
xor
xor
pop
in
daa
sub
stc
jno
mov
sub
rorl
push
or
inc
leave
dec
dec
std
dec
mov
ret
stos
cwtl
xchg
xor
dec
xor
cli
fdivl
repnz
xchg
mov
jns
lahf
adc
mov
rcrl
inc
mov
aam
xchg
and
pop
aad
lock
pop
dec
aad
push
xor
mov
sbb
jae
push
xor
push
jbe
popf
xor
mov
dec
push
dec
xor
out
or
dec
cmp
rcr
ror
pop
lret
xchg
cltd
in
js
dec
add
shlb
test
daa
incl
aaa
in
mov
xor
test
xorb
sbb
pop
lahf
xor
inc
lock
std
mov
lea
and
lods
loope
inc
dec
pop
push
mov
mov
fldt
dec
pop
or
mov
push
jmp
call
ljmp
inc
divl
inc
int
imul
lods
pushf
stos
fisttps
pushf
push
or
mov
sbb
idiv
js
bswap
ret
adc
hlt
bound
mov
jbe
xor
in
lret
sub
sub
jmp
dec
mov
mov
inc
xchg
sti
sub
inc
pop
hlt
jae
or
clc
stos
push
mov
fmul
lcall
out
movsl
int3
fcoml
mov
dec
aaa
int
int
in
in
inc
pop
les
pop
pushf
adc
push
filds
sub
xor
xor
lahf
fisubrl
es
or
xchg
ret
in
int3
movsb
mov
data16
jle
push
out
mov
sub
ljmp
push
outsl
popw
mov
and
test
das
mov
cmp
and
jb
jg
ret
daa
pop
fwait
js
out
test
dec
ret
pop
inc
sub
lods
insl
fistpl
fisttps
cmp
push
stos
iret
push
jnp
loop
fadd
mov
lcall
dec
mov
test
loop
mov
or
test
or
int
jmp
imul
xor
aaa
imul
imul
mov
addb
popa
ds
aam
sub
mov
imul
xchg
jmp
cmpsl
or
fdivrl
dec
bound
loope
fisubs
ret
lahf
sbb
decl
sti
scas
sub
xlat
fs
lea
or
pop
cltd
int
pusha
xchg
fisttpl
add
scas
pop
cmp
push
repnz
pop
mov
jecxz
adc
or
mov
xchg
cmpb
out
inc
stc
cmpsb
loop
std
pushf
cmp
xor
pop
arpl
inc
jbe
sub
adc
into
add
mov
xchg
mov
aas
or
push
or
jno
xchg
pushf
xor
push
pusha
and
mov
cmp
jp
iret
sub
arpl
and
test
pop
loopne
xchg
std
vhaddpd
imul
xor
cmp
adc
leave
enter
sub
iret
jmp
cmpsb
xlat
adc
in
and
pusha
mov
and
in
xchg
push
loope
addr16
ljmp
mov
adc
cmp
imul
test
mov
scas
hlt
pop
and
fcomp
imul
xchg
sbb
in
imul
mov
cmp
cld
dec
shll
cs
aas
loope
div
jnp
sbb
fiaddl
fs
movsl
jle
test
xor
and
xchg
xchg
imul
out
jp
outsb
outsl
mov
inc
lahf
mov
push
in
test
and
inc
into
jae
jmp
mov
push
mov
jmp
jmp
cmp
and
jecxz
jne
imul
adc
aaa
loopne
cltd
sti
xor
cmpsb
iret
movsb
sub
fs
gs
mov
icebp
mov
adc
jmp
push
and
cmpsb
dec
lcall
loopne
rcrb
cmp
iret
jno
insb
es
pop
ret
or
or
aam
outsb
jecxz
pushf
sbb
xchg
and
cmp
jbe
jg
xchg
pop
out
xchg
sahf
dec
add
clc
jb
push
pop
cmp
ds
data16
popa
loope
lahf
xchg
sbbl
leave
cld
icebp
dec
stos
add
ret
mov
push
mov
sti
sbb
pushf
mov
and
scas
adc
ljmp
mov
jge
adc
out
fmull
jmp
cmpsb
cmp
cmp
inc
xchg
pushl
stos
fucomp
lret
mov
sub
mov
inc
outsl
lcall
int
push
and
push
inc
frstor
cmp
fdivs
inc
outsl
icebp
aas
fiadds
or
jae
or
outsb
mov
rclb
push
in
out
fs
push
clc
pop
and
pusha
mov
cmpsb
xchg
xchg
xor
gs
jmp
and
stos
stc
ljmp
xchg
insl
inc
out
pushl
jo
fwait
add
sbb
lret
iret
mov
adc
jle
jae
mov
mov
sarb
mov
inc
cwtl
pop
xor
ds
add
pop
xchg
out
mov
lock
xchg
xor
cmp
push
into
mov
push
outsl
xor
cli
push
int
out
sbb
cli
jmp
loopne
test
mov
mov
test
movsb
adc
into
and
xchg
imul
xor
sbb
aad
dec
fisubs
xor
enter
movsl
xor
outsl
imul
sar
mov
les
add
inc
push
mov
xchg
inc
xchg
cld
push
ret
and
cmpsb
cli
ljmp
stos
xchg
pop
pop
loopne
clc
sub
and
xor
popa
enter
outsb
jp
pop
bound
mul
or
jl
sbb
test
enter
adc
add
inc
push
mov
mov
pop
out
popf
dec
sbb
dec
sarl
pop
cwtl
mov
lods
xor
call
push
add
shr
bound
in
clc
mov
fstpl
in
and
stc
nop
mov
dec
or
jg
addr16
add
popa
jne
push
push
jg
pop
adc
xchg
inc
push
push
shrl
lock
sbb
xchg
cltd
fs
adc
add
cmpl
lods
arpl
cmc
scas
and
dec
test
add
out
fldt
lret
roll
inc
mov
jb
sbb
in
mov
hlt
test
sbb
rcrl
test
and
mov
rcrl
jecxz
cmpl
jle
mov
mov
jnp
mov
cmp
test
fisubl
mov
add
push
pop
mov
mov
cmc
mov
and
movsb
imul
xor
bnd
mov
pop
add
sub
js
or
adc
ljmp
mov
adc
lcall
mov
jno
push
shrb
xchg
prefetcht2
jnp
ret
out
aam
dec
push
cltd
add
stc
jge
pop
repnz
dec
push
fcoml
aas
xchg
repnz
lahf
das
mov
dec
mov
jns
fsubs
sub
mov
lock
adc
aas
cmpsl
loop
clc
push
add
mov
mov
push
lret
jge
daa
imul
out
nop
mov
xchg
outsb
in
jb
mov
enter
or
and
pop
add
outsl
push
sbb
movsl
sub
insb
movsb
sbb
push
into
push
loopew
mov
sbb
lods
cmpb
xor
mov
cs
in
call
les
jmp
xorl
cmpsl
fs
cmp
xchg
cmp
mov
test
filds
ret
aas
shl
sbb
mov
adc
mov
mov
fidivrl
sar
pop
fdivr
sbb
inc
cmp
outsb
das
imul
aad
js
fwait
mov
test
lods
fadds
push
imul
jl
push
lahf
out
daa
xor
adc
jns
aaa
out
cmp
lret
arpl
fdivrs
cmp
push
jmp
fdiv
add
fdiv
push
push
dec
sbb
mov
cmpl
push
xor
push
arpl
ret
dec
xor
dec
lcall
out
int
aad
je
cltd
repz
add
lods
mov
fs
mov
pop
cs
pop
adc
imul
ret
ret
out
add
ds
fmul
incl
mov
out
cmp
or
push
push
repz
dec
insb
dec
roll
push
mov
and
iret
test
jo
popw
cmp
es
ret
cmp
xchg
cli
inc
cmpsl
jl
aaa
cwtl
jo
jno
lds
or
fmulp
imul
mov
pop
out
icebp
test
pop
shl
aam
lcall
jb
shrb
fwait
inc
lods
daa
loope
inc
int
sub
ljmp
in
sti
push
int3
push
loop
rcll
cmp
mov
xlat
cmp
movb
pop
mov
mov
xchg
lea
inc
adc
icebp
in
int3
les
hlt
mov
andb
ljmp
pop
fstl
inc
jb
mov
lock
push
loop
rorl
iret
push
cli
cmp
mov
sbb
mov
cmc
and
mov
js
imul
push
lret
data16
add
dec
sbb
mov
fsts
cmp
pop
push
aas
mov
xor
add
pop
fstp
mov
insb
cli
fbld
outsl
adc
jnp
arpl
lods
cmp
pop
xor
movsl
push
lea
ds
sti
test
push
mov
leave
push
fcoms
mov
notl
xchg
pushf
dec
pop
int
rcll
je
jae
subl
inc
fs
push
cmp
mov
test
insl
enter
inc
test
test
mov
lds
mov
mov
scas
in
and
shr
test
in
mov
mov
test
adcb
popf
in
pop
movb
hlt
xchg
add
sti
ja
repnz
pushf
rcll
pop
xchg
mov
fwait
sub
pop
xor
and
push
outsb
mov
test
out
rcl
into
inc
or
mov
and
jb
outsl
scas
xchg
arpl
xlat
add
dec
and
sahf
pop
jle
lcall
jne
pop
jne
test
outsl
push
mov
loopne
adc
add
lret
movsb
jmp
lock
mov
sub
pop
int
adc
pop
scas
into
inc
cmpl
andl
movsl
push
fdivrs
pop
arpl
pop
das
cmp
xchg
add
lret
mov
sub
fs
adc
jns
or
xchg
scas
mov
xchg
pop
dec
xchg
or
std
cltd
mov
inc
lret
jnp
dec
push
or
das
xchg
fadd
fisttpl
cmpsb
push
cmp
pop
fldl
int3
or
fs
adc
aas
pop
xor
mov
or
inc
inc
sbb
in
shlb
sub
movsb
xor
lds
xor
xor
xor
test
cmp
push
sti
jnp
mov
aam
es
mov
add
inc
lcall
dec
js
and
sbb
sub
adc
fdivl
mov
cmp
pop
cmpb
adc
pop
outsb
xor
push
and
call
dec
pop
ljmp
pushf
fwait
sub
jg
push
mov
push
push
test
pop
arpl
out
pusha
bound
leave
jecxz
xor
mov
flds
rolb
es
orb
push
jp
idivb
mov
and
mov
add
mov
xor
pop
loope
and
cmpsb
or
sbb
adc
or
std
rorb
js
insb
fs
mov
xor
xor
push
repnz
in
or
mov
cli
div
and
jns
inc
test
movsb
sub
lret
addr16
inc
outsl
pop
fwait
mov
xor
adc
push
pop
jmp
or
lods
cmp
gs
arpl
mulb
hlt
add
fnstenv
ss
sahf
test
stos
enter
enter
pop
cmp
sbb
cli
inc
hlt
inc
pop
sub
sbb
es
jle
ret
and
fisubs
add
push
sbb
faddl
jne
cmp
mov
sahf
nop
rol
add
dec
xor
pop
stc
inc
insl
sub
xor
lcall
mov
push
push
xchg
loop
js
fidivs
insb
jnp
arpl
mov
pop
or
imul
mov
add
xor
test
sbb
cmpsb
xchg
stc
add
insl
cmc
pop
lock
lahf
push
sbbl
jns
cwtl
cmc
icebp
pop
push
pop
fsubrl
aam
popa
bound
out
sub
repnz
push
mov
mov
fstps
mov
in
push
adc
adc
popf
int3
loope
and
insb
dec
push
push
fs
shr
push
fsubl
and
sub
in
add
mov
rcl
adcb
addr16
int
in
xor
bound
sub
cmp
pop
xchg
fcmovu
xor
xchg
inc
popf
in
mov
xor
or
daa
into
bound
mov
or
test
nop
sbb
dec
es
xchg
or
icebp
leave
or
call
fiadds
and
sub
cmp
push
fnsave
jl
addr16
out
cmp
insl
test
cmpsb
jle
mov
or
fistl
jne
in
lret
add
jg
sbb
xor
push
cmp
fs
xchg
fdivl
cld
out
push
adc
push
push
es
add
addr16
stc
xchg
sti
cmp
xchg
add
insb
fs
cld
mov
scas
gs
mov
in
lahf
lret
pusha
dec
mov
add
nop
je
shld
or
repnz
insb
sbb
das
lods
push
jne
hlt
adc
inc
cmp
jo
mov
xchg
ficoml
insb
daa
mov
in
add
add
iret
xor
xor
scas
push
and
cvtdq2ps
into
les
lahf
loope
add
xchg
adc
push
add
test
sbb
sti
push
sbb
xor
ja
insl
jo
dec
scas
mov
dec
mov
pop
or
mov
sub
jnp
mov
scas
call
jae
pop
loopne
jge
sbb
adc
movsb
inc
push
addr16
stos
jp
sub
pop
mov
pop
and
movsl
mov
mov
sbb
pop
push
jl,pn
fisubrs
mov
hlt
mov
xchg
mov
fcompl
ficoml
inc
jbe
mov
mov
jmp
xchg
adc
mov
test
in
mov
inc
dec
cmp
jb
addb
pop
js
mov
int3
outsl
xor
mov
inc
jl
rolb
jno
dec
jmp
sbb
add
fsubrp
cld
cmp
cmpsl
scas
aam
mov
test
cmp
xchg
jb
xchg
das
and
xchg
insl
repz
rcrl
ret
iret
pop
lcall
mov
adc
pop
lcall
mov
mov
aad
es
mov
cmc
push
sbb
sub
repnz
sbb
cmp
or
dec
jmp
insl
into
in
inc
adc
dec
mov
orb
imull
cmp
adc
pop
mov
ja
mov
adc
shr
add
iret
jns
and
mov
sub
add
mov
inc
cmpsb
dec
test
dec
push
adc
xchg
cmp
xchg
jno
sysexit
pop
leave
ret
dec
push
dec
pushf
cmc
add
in
mov
push
iret
push
xor
in
push
or
es
jae
data16
mov
pop
pop
rcrl
inc
cmpsb
pop
daa
les
xor
fisubrs
insl
fistps
addr16
cmp
addr16
jb
xchg
jle
cs
push
lock
flds
sub
add
flds
outsb
jl
or
out
lcall
jle
gs
push
push
inc
iret
mov
loopne
aam
cmpsl
stc
neg
and
fistpl
sti
out
mov
jge
loope
jl
xor
subb
sub
fnsave
jmp
ss
dec
pop
fs
call
outsb
repz
lahf
lods
pop
js
lret
mov
lea
and
cltd
pop
daa
add
lea
pop
pop
xor
cmp
push
clc
sub
dec
sahf
pusha
sub
mov
xor
pop
ljmp
out
loope
adc
push
out
fsubl
sti
dec
scas
loopne
xor
xor
pop
clc
xor
pop
jae
insb
jns
and
fildll
std
xchg
test
sbb
push
into
mov
adc
lcall
xor
into
lahf
mov
pop
mov
int
ja
sti
jecxz
add
mov
stc
or
lea
aam
incl
leave
ret
jbe
sbb
sbb
lcall
jg
movsl
fldenv
daa
jmp
cwtl
or
lret
sbb
addb
insb
outsb
sbb
push
loopne
xor
jns
mov
std
xchg
inc
cwtl
das
pop
and
enter
pop
inc
jge
es
cltd
pop
lods
jmp
es
je
jge
in
loope
xor
ja
js
sahf
testb
insl
rcll
int3
hlt
out
aam
inc
loope
jnp
call
push
jb
or
or
aaa
mov
add
mov
in
scas
and
nop
divb
cmpsl
mov
cmc
xchg
mulb
dec
and
ret
mov
mov
adc
cmpsb
hlt
xchg
cmp
loop
inc
or
addr16
daa
les
jo
pop
mov
or
cmpsl
pop
mov
and
shl
xlat
out
sub
outsl
icebp
movsl
out
bound
enter
in
cs
or
out
aas
cmpsl
loop
cmp
cmp
inc
and
mov
mul
mov
pop
mov
jb
jae
xchg
jbe
sahf
dec
adc
and
dec
cmp
add
jmp
movsb
pop
pop
mov
stc
orl
popa
fbld
push
das
and
mov
out
add
aad
mov
xor
lods
xlat
sahf
xchg
cltd
fidivrs
lret
jl
xchg
hlt
jb
loope
roll
dec
sub
pop
mov
and
int
sahf
cmp
xor
dec
inc
pop
dec
and
and
push
jno
cmpsl
xchg
orl
and
jno
sbb
cmp
cmpsb
inc
jle
jp
sbb
stos
mov
or
aad
xor
push
cmpsl
fldt
negl
arpl
mov
shrb
and
or
push
dec
mov
and
lods
mov
cltd
mov
rorb
loop
push
push
cli
lcall
cmpsl
scas
cmp
add
shl
out
out
cmp
out
bound
loopne
je
cltd
mov
out
sbb
and
adc
push
movsl
pushf
add
push
adc
push
dec
sbb
or
fiaddl
lea
inc
mov
mov
sub
and
sarl
sub
mov
jno
nop
enter
shlb
aas
add
jne
push
ss
add
or
test
push
push
inc
or
mov
lds
jecxz
in
repnz
js
inc
es
ja
cmpb
add
and
arpl
and
add
pop
sbb
xor
xor
mov
pushf
jne
test
dec
pop
fbstp
inc
mov
and
push
vunpckhpd
pop
dec
fistpll
shlb
inc
dec
jg
imul
add
daa
or
into
mov
mov
pop
out
daa
adc
std
rcl
mov
lahf
pop
or
xlat
push
incb
movsl
push
scas
sbb
and
cmp
xor
pop
mov
lret
cwtl
aad
push
out
mov
and
scas
in
pop
xchg
cmp
or
sub
fdivr
xchg
adc
adc
mov
rorl
pop
mov
scas
stos
mov
or
imul
adc
push
sbb
mov
sahf
lret
xor
loop
fadd
inc
in
pop
lea
mov
icebp
aaa
and
mov
push
sbb
addr16
sub
fldenv
pop
xor
dec
xor
shr
sbb
or
dec
pop
aas
aam
mov
pop
in
cmc
repz
fldln2
xchg
into
int
sahf
add
dec
sbb
mov
push
in
push
xor
pop
ljmp
mov
aad
sbb
popf
xchg
pushf
movl
dec
inc
movsb
dec
push
pop
int
jecxz
fwait
insb
insb
imul
cmp
inc
lods
mov
inc
pop
imul
sub
hlt
push
adc
add
insl
call
stc
in
inc
push
or
scas
in
lahf
xlat
add
imul
movsb
arpl
mov
sbb
sub
mov
inc
mov
mov
xor
jns
sti
mov
out
fs
cmp
xchg
dec
mov
adc
fsts
sti
nopl
sub
stc
aas
add
daa
sbb
pop
cs
movb
pop
cmpsb
les
push
mov
jle
es
je
xchg
int3
enter
pop
pop
mov
lock
mov
insl
cmc
sbb
sahf
mov
cld
cmpsb
pop
dec
add
mov
lds
or
cli
xor
mov
int3
adc
lods
cmpsb
stos
out
lahf
mov
rol
pop
mov
pusha
popa
fdiv
or
inc
sbb
jo
in
mov
outsl
mov
aam
sti
push
dec
sbbb
pop
cmpsl
mov
mov
ret
gs
in
inc
jae
lret
out
add
mov
inc
in
movsb
mov
cmpsl
inc
js
inc
jp
or
repnz
ja
out
adc
add
dec
or
das
adc
test
xchg
pop
push
fistl
js
pop
icebp
cmp
cs
adc
add
hlt
in
push
dec
sbb
xor
or
cmc
jge
cmp
mov
cs
xchg
xchg
bound
jg
movsl
inc
stc
cmpsb
aam
xchg
adc
pusha
stos
add
mov
mov
scas
iret
add
cmp
incb
stos
xor
out
xchg
cmp
jo
nop
pop
test
test
jne
pushf
dec
jmp
dec
inc
ljmp
dec
and
test
push
lret
movsl
pop
push
adc
cmp
sub
or
sub
xor
nop
fcoms
jae
cmp
sbb
inc
adc
cpuid
jns
stos
imul
add
outsb
insb
das
inc
sarl
jno
int
dec
xlat
aad
mov
in
outsl
popa
movsl
mull
in
push
pop
jecxz
mov
in
jnp
ss
xor
mov
mov
leave
pop
out
mov
jmp
pop
outsl
stos
sbb
push
loopne
mov
dec
sbb
mov
nop
shlb
jp
pop
xor
and
aam
rorb
aas
cmp
jg
ja
xchg
pop
pop
lods
push
in
rcll
lods
xchg
mov
in
testl
mov
mov
mov
out
jbe
shll
pop
adcb
mov
jp
jmp
xor
xor
mov
adc
mov
pushf
mov
jecxz
fadd
xchg
cltd
mov
aad
pop
frstor
mov
fisubl
out
test
xchg
sbb
lcall
test
pop
stos
in
incb
adc
mov
xchg
add
mov
xorb
das
mov
mov
xchg
mov
cmc
jge
push
inc
lea
je
jb
xchg
lret
cs
push
mov
faddl
roll
cmpsl
push
xor
push
or
add
mov
mov
ss
test
shlb
push
sbb
adc
xor
lcall
retw
cmc
sbb
in
cmc
inc
and
and
jne
adc
clc
jl
add
fidivrl
inc
jb
mov
out
cmpsb
insl
mov
iret
call
sar
cmp
cltd
adc
bound
push
loopne
in
loopw
daa
push
movsl
lods
iret
stc
jmp
lret
fisttps
pushf
lods
and
outsl
xchg
jge
jmp
and
mov
fldenv
and
mov
xchg
aam
add
pop
aaa
mov
stos
cs
add
and
sbb
sbb
jmp
jb
add
mov
mov
imul
sti
int
outsl
mov
mov
stos
pop
lret
adc
sbb
test
push
sub
adc
add
scas
mov
and
sahf
lock
xchg
push
add
shrb
les
leave
jp
pop
test
mov
cs
bound
push
dec
out
sbb
jmp
or
push
sub
mov
mov
imul
std
mov
xchg
mov
clc
scas
xor
dec
pop
pop
enter
mov
xor
imul
out
xor
fsubrl
dec
call
daa
xchg
pop
popfw
mov
sbb
or
jb
data16
adc
mov
shrl
dec
inc
xchg
inc
notl
and
repnz
fs
fiaddl
pop
adc
push
iret
in
sbb
inc
adc
dec
insb
mov
xor
mov
push
push
aaa
mov
aad
jg
mov
adcb
xor
lret
cmc
push
fcmove
out
stos
sub
push
out
data16
pop
add
mov
in
into
imul
test
fsubs
or
es
add
jae
push
mov
aad
sub
mov
inc
in
jge
xchg
cmp
xor
fnstcw
mov
sub
sub
pop
nop
inc
jne
jg
int3
cmp
add
imul
push
aas
dec
roll
inc
mov
xchg
inc
mov
xchg
rcll
pop
pusha
rclb
fucomp
jno
jge
in
adc
psubusw
scas
push
rclb
xchg
cmpsb
test
push
in
ret
mov
jmp
cltd
pop
lret
add
and
adc
pop
hlt
gs
cmp
jbe
sub
adc
xor
sbb
gs
pushl
mov
xchg
adc
xchg
into
jns
loope
in
push
xor
xor
addb
pop
loopne
in
jb
loop
insl
xchg
jp
mov
cli
aaa
sub
push
mov
popf
ds
xor
jmp
cmp
ret
sbb
das
xchg
or
scas
aad
sbb
and
daa
jp
inc
pop
inc
repz
lods
add
sahf
jp
std
scas
out
les
sbb
jo
outsl
and
mov
mov
mov
jecxz
shll
mov
inc
mov
pop
ret
fs
stos
jl
imul
sub
jne
jmp
mov
icebp
ret
fildl
mov
mov
arpl
test
cmpsb
pop
mov
imul
mov
mov
adcl
mov
mov
mov
movsl
xor
pushf
dec
loope
loopne
cs
pop
xchg
hlt
fldl
loope
test
cmp
jl
sahf
xchg
movsl
notl
cmpsb
dec
movsb
mov
lods
nop
popf
and
std
dec
push
mov
pop
push
shll
adc
pop
lock
cltd
pop
cs
dec
xor
ficomps
lds
add
gs
push
sub
call
mov
jle
sbb
jmp
scas
mov
fstl
lds
add
dec
dec
mov
sub
cmp
clc
mov
les
jge
imul
mov
jnp
addr16
add
iret
lret
mov
adc
cmp
add
xchg
loop
lret
cwtl
movsb
push
xlat
or
or
push
jb
ret
pop
lods
inc
mov
and
sub
fsin
sbb
cmp
lods
mov
or
sub
cmp
jge
insb
pop
fisttpl
inc
mov
lret
loope
in
cmp
repz
push
ss
cltd
inc
aaa
stc
mov
imul
dec
mov
insb
sti
je
pop
or
leave
push
imul
nop
shrb
ljmp
lods
popf
test
mov
or
mov
or
shrl
popf
xchg
fstpl
or
fdivrs
dec
push
sbb
aas
nop
push
divl
popf
cmpsl
stc
test
adc
and
inc
pop
mov
mov
add
mov
insl
mov
dec
xor
or
dec
fwait
insb
push
cmp
xchg
mov
xchg
mov
das
lret
mov
fdivl
and
mov
jnp
loop
jb
stos
jbe
xchg
sub
lret
mov
sub
jmp
gs
out
mov
shlb
inc
xchg
or
pop
xor
fsts
xor
lret
xor
add
fidivl
in
icebp
add
das
xchg
and
xchg
icebp
xchg
sbb
mov
mov
cs
or
push
mov
pop
cmp
mov
xchg
or
or
rorb
insl
punpckhdq
icebp
xor
jmp
jecxz
mov
dec
in
dec
cmp
out
hlt
jb
sub
idivb
jne
mov
or
jae
imul
pop
fptan
sub
xorl
lods
les
aas
and
popf
fcomi
ret
fidivl
insl
pushf
jae
lcall
lret
jmp
in
jecxz
adc
jp
shll
loopne
rorb
mov
mov
or
cmp
mov
push
loopne
int
mov
cmp
or
jg
xchg
in
iret
popa
pop
pop
mov
xor
xor
sub
mov
dec
xchg
inc
call
sub
jnp
pop
loopne
xor
js
ljmp
xor
pop
sahf
jg
sar
imul
fidivrs
out
icebp
cmc
rcrb
leave
lahf
jge
int
leave
mov
sbb
sbb
mov
inc
or
mov
cmp
xor
mov
idivb
fstl
cmp
sarb
mov
fisubrs
mov
addr16
cltd
mov
mov
addb
out
repz
ljmp
into
test
sbb
sarb
clc
mov
je
cmp
cmp
cmp
dec
sub
mov
test
sbbb
fmuls
sbb
arpl
lds
ja
cwtl
inc
scas
out
sub
hlt
jg
aas
repnz
lods
icebp
ja
repz
mov
bound
inc
push
xor
push
bound
mov
ret
sbb
out
sarb
adc
mov
sub
and
jge
jmp
scas
xchg
dec
js
scas
jp
scas
mov
pushf
adc
cmp
into
insb
pop
dec
cmp
xchg
jno
inc
mov
les
add
imul
xchg
test
loopne
sahf
jmp
mov
testb
divl
loop
xchg
push
rorl
xor
add
and
pop
jg
adc
jnp
cmp
stos
fs
mov
in
gs
aaa
xchg
repnz
or
fcoms
mov
dec
fnsave
jge
aam
inc
js
sbb
push
outsl
sbb
push
insb
negb
pop
imul
mov
leave
push
sbb
int
and
lcall
pop
mov
cmp
stos
sub
add
pop
scas
loop
jbe
jne
inc
cmp
ja
lret
cs
push
push
cmc
inc
xor
xor
mov
test
test
push
xor
ljmp
cltd
mov
cs
pslld
leave
ds
jecxz
add
push
sbb
gs
ror
in
lcall
stc
inc
sbb
ljmp
and
mov
push
adcb
fsubrl
cmpl
out
mov
mov
movsb
pop
sbb
xchg
mov
mov
or
and
ret
aas
cltd
pop
addr16
push
repz
push
xchg
pop
mov
insl
mov
xor
dec
or
dec
in
inc
test
sbb
lock
fildl
adc
mov
dec
xor
push
pop
repnz
add
ss
pop
cmp
inc
xchg
add
lcall
pop
jl
iret
inc
mov
insb
jmp
push
or
mov
fs
add
inc
jge
sbb
mov
mov
sub
insl
test
xchg
adc
dec
adcb
xchg
cmp
out
stc
and
sahf
sbb
loop
cmp
sbbl
inc
cmp
mov
out
adc
into
ret
sbb
outsl
stos
pop
mulb
js
mov
jg
arpl
bound
fwait
das
add
cltd
jne
ljmp
or
ret
inc
dec
cmp
mov
push
fldl
mov
repz
cmp
or
or
push
and
ja
push
popf
test
mov
jecxz
icebp
cmp
mov
rorl
aaa
loope
pop
ret
jp
cmp
outsl
cwtl
or
lahf
sahf
pushl
cmp
push
xchg
inc
jae
test
jb
sub
add
out
mov
add
mov
lds
in
loope
push
scas
jp
mov
dec
test
rclb
jmp
dec
push
fwait
mov
ret
inc
in
push
pop
ret
loopne
push
mov
or
push
ljmp
inc
gs
pushf
or
hlt
xor
inc
jno
outsl
jnp
jg
rorb
jle
mov
xchg
xchg
mov
inc
pop
je
push
sti
aaa
and
push
dec
data16
arpl
out
mov
inc
sahf
cmp
std
fcoms
xor
adc
push
push
and
ret
jl
mov
pop
pop
push
sbb
das
into
cld
mov
mov
es
popa
jo
sub
push
mov
sbb
pop
adc
insl
sar
int3
das
jle
dec
test
sub
add
xlat
pop
and
out
dec
inc
sti
enter
inc
orb
xchg
sbbl
or
jp
push
filds
clc
adc
ss
cmc
cmc
or
negb
lock
popf
pop
cmpsb
push
std
push
or
mull
dec
pop
cmpsb
lahf
pushf
arpl
dec
or
mov
gs
adc
outsb
sub
xchg
sbb
jno
sar
add
in
add
repz
js
sbb
aam
int
dec
ds
jns
loope
les
xor
or
push
std
dec
or
add
sub
jb
fildl
cmp
mov
sbb
outsb
sbb
mov
sub
xchg
mov
lcall
das
ljmp
imul
leave
push
jns
mov
push
dec
push
ja
repz
shll
cmp
mov
cmc
or
test
mov
cmp
rclb
in
test
lods
push
loope
cmpsl
test
repnz
aas
mov
inc
pop
dec
xchg
enter
in
lea
adc
or
in
in
mov
push
les
mov
fsubs
mov
cmc
mov
push
arpl
mull
push
enter
fstpl
or
jb
mov
shll
lret
add
adc
lock
mov
mov
inc
sti
mov
movsb
jne
cmpsl
les
pop
cmp
dec
push
dec
sbb
dec
sbb
xchg
stos
fnstenv
xchg
out
push
dec
cmp
mov
and
xchg
and
xcrypt-ecb
cmpsl
dec
or
ret
imul
cwtl
pushf
popf
jns
mov
in
xor
ret
adc
push
dec
xchg
sahf
daa
or
cmp
jge
mov
pop
mov
dec
xchg
cmp
aaa
aas
jb
gs
iret
fwait
inc
out
add
js
sub
sbb
aaa
xor
shlb
lock
fimuls
sbb
jg
cmpsl
sub
divb
jbe
xor
sbb
xchg
dec
inc
mov
testl
pop
inc
sbb
inc
push
and
pop
mov
sarl
repnz
enter
jge
push
jbe
outsb
mov
xchg
int
rclb
pop
or
mov
in
mov
jae
jbe
and
pushf
cmp
jmp
addr16
cmp
gs
mov
scas
push
daa
loopne
test
xchg
pop
mov
xor
scas
push
std
dec
add
jae
xlat
xchg
add
inc
mov
dec
adc
mov
fcomi
jge
mov
push
lock
in
nop
pop
add
pop
mov
xchg
gs
aaa
xor
pop
pushl
aad
jnp
mov
bound
push
mov
jne
std
jmp
inc
rcll
leave
lock
shlb
sbb
sbb
in
jno
and
xchg
dec
pushf
jns
sub
or
add
xchg
shll
mov
adc
in
inc
jp
jecxz
ffreep
or
ror
jg
lahf
or
mov
xlat
xor
out
sub
mov
mov
sbb
xor
addr16
sbb
cltd
cmp
in
lods
loopne
or
nop
add
lds
aad
in
pop
mov
lret
pop
xor
mov
and
in
mov
aaa
pop
out
adc
pop
les
push
scas
push
dec
pop
mov
fnstenv
add
push
sub
push
xchg
dec
xor
fbstp
add
lds
fnsave
lret
dec
or
popl
in
hlt
rcl
shll
fs
push
fisubs
dec
sub
push
ret
pop
inc
jb
sub
mov
lcall
cld
dec
pxor
xor
pop
mov
xor
xor
dec
jb
pushf
shrb
lds
int3
scas
adc
aad
idivb
sub
pop
sbb
in
cmc
pop
mov
jle
test
cltd
and
iret
dec
and
and
cmp
or
mov
sbb
aam
xchg
or
sbb
push
test
mov
pop
dec
loope
in
scas
pop
fbld
in
sub
rol
and
inc
movsb
jbe
das
lcall
sub
in
cmp
ja
test
mov
or
mov
les
jns
jle
ja
aas
add
inc
mov
jne
jns
rcr
cmpsl
pop
andl
or
adc
clc
push
in
das
movsl
loope
jle
and
ret
push
xor
cmp
or
popa
push
lock
push
movsb
ljmp
sub
sub
mov
and
mov
popa
lock
sti
mov
cmp
ss
mov
push
push
ret
mov
cmp
adc
sbb
push
pop
jns
sub
push
movsb
outsl
fs
je
sbb
es
loop
adc
mov
dec
pop
cmp
fisubs
push
mov
pop
popf
push
psubd
aad
repz
stc
and
add
add
xchg
sbb
pusha
mov
mov
xor
mov
cltd
add
inc
lcall
int
rep
pop
jb
sysexit
in
xchg
stos
xchg
sub
ds
xchg
leave
or
mov
lret
cmp
jae
add
sbb
movsl
dec
pop
repnz
lods
imul
repz
xchg
cli
xchg
jnp
push
sbb
popf
fistpll
xchg
mov
xchg
out
stos
inc
mov
fdivl
xlat
mov
add
mov
mov
dec
popa
jg
xor
push
mov
pop
jecxz
flds
jecxz
inc
mov
sub
imul
arpl
pop
fsubl
mov
leave
xchg
fstps
mov
pop
and
push
mov
shlb
xchg
scas
push
cli
scas
sub
clc
rorl
jae
imul
lea
mov
and
xchg
les
stc
int3
dec
jp
scas
addl
into
movsb
insb
jmp
pop
andl
mov
or
and
xchg
push
icebp
or
mov
xor
repz
add
movsl
pusha
push
js
add
fdivrs
ret
lods
ret
and
inc
sarb
pushf
jle
push
in
dec
loop
push
sahf
push
dec
stos
test
adc
std
dec
xor
jnp
xchg
add
outsb
in
or
lret
das
movsb
in
mov
je
loope
jg
lahf
imul
xchg
and
incb
sbbl
jbe
mov
or
imul
jns,pt
outsb
test
insb
dec
mov
scas
out
jae
mov
cmp
sub
imul
outsb
repnz
cmpsl
add
std
and
cltd
out
fcomps
xor
push
xchg
mov
in
lods
sub
testb
dec
lods
imul
loope
nopl
test
xlat
inc
es
inc
sbb
dec
sbbl
in
jmp
orb
jne
sbb
push
mov
pusha
lds
or
sub
fstpt
pop
mov
popa
push
js
pushf
sahf
ss
mov
mov
test
movsl
push
scas
cmpsb
movsb
rcrb
lea
sub
mov
sahf
imul
adc
sbbl
jnp
push
imulb
std
stc
mov
ret
push
decl
sub
iret
shlb
mov
inc
mov
lds
out
out
jp
mov
xor
pop
mov
adc
lahf
sahf
dec
popa
pop
mov
fnstenv
inc
xchg
movsl
xor
das
bound
mov
cmp
adc
cwtl
dec
int
mov
int
mov
adc
repnz
push
cs
pusha
jge
push
testl
sub
jno
inc
outsb
jne
int
adc
push
adc
sub
ja
rol
push
mov
clc
cmp
mov
inc
or
mov
das
adc
repz
fs
call
pop
xor
jmp
cltd
or
gs
jmp
rclb
leave
testl
filds
push
stos
cmpsb
cltd
aaa
jne
add
xor
fmuls
dec
das
dec
ljmp
jg
sbb
jnp
dec
daa
fiaddl
cmp
daa
fstpl
out
cld
mov
sbb
pop
adc
call
test
frstor
add
mov
dec
mov
mov
aaa
mov
addr16
xor
mov
xor
push
and
das
inc
inc
add
mov
xor
adc
xor
push
jns
mov
adc
xchg
push
aad
add
cmp
fistpl
sub
fcmovnu
sbb
or
or
cwtl
fs
loop
rcrl
mov
sbb
cli
mov
test
add
mov
xchg
mov
out
mov
scas
cmp
mov
push
push
aam
shlb
lock
cmp
lods
lock
gs
dec
rorl
xchg
enter
sub
pop
roll
xchg
xchg
or
inc
jle
in
pusha
aad
sti
cmp
cmpsl
repz
jnp
and
ljmp
or
cmp
popf
ja
jne
addr16
std
xchg
stos
cmp
roll
pop
sub
jnp
push
xlat
xchg
xor
scas
xchg
sub
sub
aam
mov
fstp
and
jp
push
movsb
outsl
mov
sub
ljmp
mov
cs
mov
add
addl
and
jge
inc
inc
leave
cmovge
cltd
int3
push
dec
push
mov
pusha
or
imul
vhaddpd
addr16
pushf
xor
into
leave
outsl
lahf
testb
faddp
dec
lea
js
arpl
jl
cli
ret
mov
xor
pop
xchg
xor
pop
in
sarl
jbe
push
fadds
and
lea
scas
push
shr
in
loopne
hlt
pop
xchg
out
rcr
mov
mov
icebp
dec
xor
mov
inc
sub
adc
mov
adcb
lret
or
xor
mov
adc
sbb
je
lret
fwait
push
ss
pop
shrb
popf
cmp
mov
pop
lret
sbb
js
xor
and
clc
jb
xchg
dec
sbb
test
inc
cmp
mov
lods
js
and
mov
inc
mov
sti
cli
cmp
arpl
je
add
fimull
or
enter
adc
jle
push
pop
int3
jo
aas
outsb
imul
lock
xchg
mov
inc
outsb
jno
lods
mov
mov
gs
pop
or
aam
int3
test
fldl
pop
cmp
pop
stc
cmp
mov
dec
rcll
jl
jns
cs
aam
jne
inc
add
out
xchg
roll
pop
mov
mov
loopne
cmpsl
data16
cli
imul
xchg
cmp
pushf
fcomi
cmp
movsw
movsb
dec
jl
aaa
jl
mov
lea
jns
mov
sub
jl
loop
ja
jmp
add
leave
mov
sahf
xchg
hlt
add
popf
dec
add
insb
insl
int3
popa
mov
mov
push
mov
add
scas
scas
mov
xor
cltd
mov
ss
pop
pop
jb
das
add
cli
and
das
scas
sti
fnstsw
sbb
sub
movsl
clc
push
dec
call
or
cmp
stc
pop
popf
das
jns
mov
xchg
mov
hlt
dec
push
out
pop
fst
dec
js
sbbb
mulb
cmp
ljmp
out
roll
cmp
imul
lahf
jp
jne
jmp
int
dec
jbe
movl
scas
daa
push
push
cs
outsl
cmp
dec
inc
popf
mov
loop
je
mov
jnp
pop
rcl
out
std
mov
sub
in
lea
xchg
nop
jle
push
leave
pop
jo
inc
or
imul
test
ss
add
fdivrp
fistpll
and
dec
imul
loopne
popl
pushf
cmp
repz
pop
fwait
daa
jmp
push
dec
repnz
pop
add
pop
pop
mov
pop
jcxz
das
ficomps
insl
ds
rcrl
mov
add
fldenv
and
outsl
daa
jmp
pop
jl
sbb
xchg
pop
mov
inc
stc
inc
das
xchg
cmp
ja,pn
loopne
sbb
cli
nop
push
mov
push
call
lcall
xchg
aaa
xor
loop
mov
outsw
add
add
cmpsb
sti
rorb
jecxz
stc
out
push
mov
lods
fimuls
lret
pushf
sub
push
fldcw
adc
jp
dec
cld
mov
leave
push
shl
xor
test
or
fiadds
push
movsl
and
xor
std
test
jmp
loopne
jns
pop
lret
fsubrl
addr16
cmp
in
push
push
cwtl
cltd
sbb
or
dec
mov
lds
mov
push
loope
loopne
ds
mov
cwtl
xchg
and
arpl
fs
adc
cmp
mov
fldcw
call
sub
fadd
pop
adc
pop
scas
ret
dec
cmp
pop
jb
iret
insl
pusha
inc
xchg
pop
push
hlt
sub
xchg
jne
adc
jbe
pop
dec
sahf
scas
imul
sub
inc
aam
pop
xor
in
add
sbb
dec
lahf
lds
pcmpgtw
pcmpgtw
xchg
mov
aas
xchg
cwtl
test
and
insl
aad
push
push
out
sti
mov
sub
add
cmp
rcr
popf
mov
push
scas
xlat
sbb
test
fistpl
push
jns
add
ret
ja
lock
ret
jo
das
or
push
jmp
out
dec
rcrb
rorb
movsl
jb
aad
outsb
in
mov
sbb
or
pop
fnstenv
imul
rcll
jecxz
or
cmp
outsb
fs
call
cmpsb
dec
mov
into
loope
inc
pop
pop
xchg
jp
aam
fimuls
lds
inc
inc
cmp
sti
nop
ss
dec
dec
pop
sub
mov
shrl
jg
pop
loop
callw
jl
and
jno
xchg
xchg
js
xchg
sub
mov
adc
iret
es
cld
dec
add
mov
push
xor
insb
jmp
pop
aaa
jb
popf
imul
and
in
cmp
sub
cmp
cmpsb
lea
aad
sub
repnz
leave
add
pop
stos
mov
repz
sbb
ds
enter
cli
xor
pop
pop
fisubs
push
cltd
outsb
xor
and
add
or
ret
adc
jle
out
and
mov
enter
mov
sti
je
mov
js
bound
lret
pop
jmp
lds
cld
outsl
clc
ds
movsb
js
sub
rcrl
stc
mov
sti
stc
cs
mov
out
bound
mov
cld
mov
pop
cmp
sbb
inc
cmp
int3
sahf
sti
push
mov
jge
cmpsb
fsts
cmpsl
adc
inc
ljmp
xchg
cmc
sbb
lea
pop
xor
and
mov
mov
aaa
addr16
negl
cmp
jnp
add
mov
xlat
adc
sbb
jecxz
sub
jg
loope
shl
int3
xchg
dec
mov
sarl
cmp
enter
sbb
adc
popf
xchg
je
fdivrs
cmc
icebp
repz
xor
arpl
arpl
cmpsb
xor
fs
pop
incl
shl
std
call
scas
dec
adc
sbb
ss
mov
cmp
mov
add
scas
repnz
xchg
mov
inc
or
into
dec
dec
inc
popa
test
push
fistpll
in
jmp
sub
mov
test
lock
repz
les
mov
cmp
or
add
out
shll
iret
out
sub
pop
inc
fimull
insl
shlb
add
enter
push
jmp
mov
dec
jge
cwtl
xchg
cltd
xchg
fsubrl
addr16
mov
mov
testl
shrl
outsb
js
rcrb
aad
ja
pop
jecxz
dec
mov
and
fidivrs
in
push
lods
mov
les
xchg
js
jne
push
icebp
ret
shlb
int
std
jle
pop
lret
aaa
pop
and
lahf
std
clc
sub
lret
les
test
in
cs
xlat
jae
cmp
xchg
cmp
ss
lret
dec
and
xchg
cltd
pop
loope
adc
dec
xor
movsl
fisttps
outsb
test
outsb
mov
es
fcmovnb
rorl
mov
sub
shufps
inc
lcall
out
sarb
dec
add
mov
aaa
ret
cmp
inc
or
pop
sbb
push
cmp
pop
xrelease
jne
fcmovnb
xor
xchg
and
xchg
xchg
lahf
insl
cmpl
push
imul
mov
lea
out
dec
inc
in
or
notb
jg
sub
adcb
mov
add
mov
fadds
repnz
xor
add
stos
fbstp
xchg
xor
lahf
or
or
inc
mov
fucomip
iret
mov
test
xor
inc
xor
dec
sahf
mov
lret
xor
call
clc
das
scas
fisttpl
xor
mov
sahf
pop
pop
pop
pushf
and
inc
mov
mov
scas
dec
dec
cmpsl
mov
mov
sub
ret
mov
cld
das
mov
add
stos
or
repz
sbb
incl
lcall
ljmp
push
and
fistpl
push
mov
movsl
mov
pushf
mov
rcr
sub
pop
or
loope
rorb
pop
mov
sahf
xlat
je
and
les
mov
lock
into
cld
lods
decb
stos
jl
cmp
das
out
mov
in
inc
test
lods
dec
loop
in
mov
sbb
dec
mov
inc
pop
adc
jg
iret
inc
jno
mov
sbb
xor
fsubrs
cs
mov
push
add
push
cmp
mov
and
xor
mov
mov
add
or
mov
and
scas
mov
je
test
aad
push
push
cmp
xor
pop
sub
mov
je
cmpsb
dec
fidivrs
lcall
xchg
mov
mov
rclb
daa
pop
orb
or
repz
fiadds
add
and
and
cs
test
pop
dec
and
inc
inc
push
jne
mov
cmpsl
sti
dec
sbb
add
pop
sbb
adc
or
int
js
lcall
sarb
push
hlt
rcrb
add
inc
add
insb
sbb
pusha
decl
int3
push
int3
cmpsl
xchg
lahf
and
loop
les
scas
or
fs
out
mov
in
mov
testl
pop
js
outsl
fisttpl
movsl
jmp
lret
inc
add
fdivrs
xlat
movsbl
aam
inc
add
mov
ret
mov
fstpt
es
push
mov
fstps
cli
mov
into
or
mov
shrb
mov
xchg
aas
add
pop
inc
jns
xlat
jmp
inc
repz
push
push
lods
scas
in
add
ds
lds
dec
mov
add
add
cmpsl
cmpsl
dec
sub
pop
mov
icebp
sub
jl
xor
pop
mov
add
test
testl
cli
jno
jb
lock
out
popf
imul
push
lea
sub
xchg
mov
push
rcrb
pop
scas
lret
loopne
add
mov
pop
jecxz
pusha
or
lahf
adc
push
adc
out
mov
mov
mov
ret
stos
pop
imul
ss
jo
repz
stc
push
xchg
mov
xor
jecxz
pop
mov
stos
add
mov
les
aas
lret
ljmp
sbb
pminub
jle
mov
nop
sbb
test
or
leave
mov
inc
push
push
sub
lret
aam
call
loope
and
adc
jae
fucomi
and
mov
scas
shll
mov
adc
test
aaa
cwtl
push
nop
testl
mov
fcomps
cld
and
xchg
sub
std
inc
shr
mov
or
fnstenv
repz
mov
mov
sub
jmp
or
xchg
xor
adc
std
sbb
and
imul
xchg
sub
shlb
arpl
fldenv
push
dec
jb
test
adc
repz
std
lcall
je
jg
cmp
cmp
push
cmp
jns
aas
pop
dec
dec
mov
rcrb
xchg
rcr
in
xor
mov
jae
in
movsb
lret
add
add
fs
and
push
filds
in
push
inc
into
popf
pushf
loop
adc
adc
pop
ljmp
cmp
add
int3
cmovle
shlb
jecxz
pop
vhsubpd
mov
inc
push
mov
cmp
enter
je
js
fldt
fs
cltd
imul
sbb
ret
inc
pop
cmp
push
loop
shl
cmpsb
int3
fwait
cld
std
cwtl
dec
sbb
sbb
inc
mov
mov
cltd
int
push
cli
loopne
xchg
pop
scas
in
cmp
sub
pop
movsb
push
icebp
leave
fnsave
cmpl
out
pusha
inc
mov
push
push
into
loop
push
mov
push
mov
and
test
hlt
xor
xlat
mov
out
cltd
ffreep
cmp
xor
xor
lret
pop
jmp
dec
repz
int
in
xor
icebp
cmp
sbb
sbb
xor
fcos
pop
pop
lret
jl
fwait
sbb
or
vpsraw
sti
lahf
pop
mov
cmp
sub
lret
cltd
out
add
and
mov
or
loope
push
inc
movsb
cmpsl
xchg
ret
insl
adc
sbb
gs
push
inc
imul
fsts
add
mov
out
dec
or
jge
shl
cld
or
cmp
mov
rclb
pop
cmpsl
or
mov
cmp
leave
xor
jmp
fldcw
data16
mov
adc
sbb
iret
xchg
cmp
pop
sbb
dec
rorb
sarb
divl
loop
add
pop
nop
das
jge
xlat
add
cmp
cmp
data16
stc
aam
sahf
xor
sub
ja
insl
popf
nop
int
push
dec
test
sbb
xchg
test
ret
adc
cwtl
jp
dec
inc
jb
fs
cld
push
imul
aaa
xchg
lea
clc
popl
cwtl
les
and
lds
scas
bound
mov
push
sub
push
mov
fadds
add
andl
bound
sbb
iret
nop
inc
fisubl
icebp
cmp
insl
cmc
ret
pop
test
sbb
pop
mov
int
imul
adc
pop
clc
xor
jns
es
and
jmp
rcll
test
lcall
pop
cmp
invd
js
sbb
add
xchg
xchg
xchg
dec
fildl
mov
aam
mov
fcomps
inc
out
aas
testb
loopne
rol
repz
ds
jbe
gs
arpl
aad
xchg
das
add
das
lds
ret
inc
mov
cmp
sub
or
dec
out
outsb
lea
out
dec
jle
and
adc
cltd
cwtl
lock
mov
xor
sarb
adcb
mov
stc
sbb
push
cmp
addr16
mov
pop
xorb
adc
daa
jl
cmpsb
xchg
mov
outsb
cmp
and
aad
inc
dec
xor
inc
mov
sahf
stos
iret
mov
jnp
cmpsb
mov
test
add
les
in
sub
in
or
fisubs
int
into
inc
shll
fdivs
enter
and
and
sti
stos
shr
out
ficoms
xchg
cmpsl
out
jb
ficoml
test
sbb
adc
orl
sbb
into
filds
or
and
lcall
out
pop
jmp
mov
mov
hlt
clc
xor
je
int3
pop
pop
int
jae
out
js
clc
daa
jns
jns
inc
dec
sti
or
inc
jo
add
pop
scas
cmp
mov
push
rcr
testl
mov
push
gs
cmc
int3
adc
iret
sbb
je
out
scas
jnp
adcb
push
cmp
sbb
mov
xor
cli
fldt
ja
das
inc
into
fsubs
sbb
xchg
dec
mov
cmp
outsl
adc
mov
jbe
xchg
pushf
xor
cs
xor
and
popf
xchg
xchg
iret
icebp
loop
sbb
divb
ljmp
int3
loopne
cmp
fwait
inc
es
out
xchg
mov
gs
ljmp
dec
sahf
faddl
push
es
fmull
pusha
loopne
mov
mov
cmp
test
ret
inc
add
jbe
ficomps
push
fimull
clc
dec
scas
inc
rol
insl
hlt
fmull
mov
fiaddl
fsubrl
push
data16
push
hlt
cltd
pop
imul
dec
sub
xchg
push
or
out
add
or
pop
imul
sbb
hlt
shl
fs
jno
shlb
jb
das
and
mov
fildl
pop
xor
jl
stc
rcrl
ret
xlat
mov
cmp
imul
pop
fdivl
mov
push
cli
aas
pop
jmp
out
movl
mov
shll
dec
aad
adc
adc
mov
jns
add
add
adc
or
sbb
loope
mov
dec
jg
xor
in
sub
xor
jle
push
push
shl
ret
loope
jns
fnstsw
sbb
lds
cmp
cmp
jge
pop
inc
lods
fs
mov
pop
xchg
or
repz
imul
popf
testl
loope
jl
cld
push
or
loope
in
imul
mov
sbb
or
outsb
sub
push
mov
xchg
push
xchg
jo
sbb
repnz
adc
hlt
or
lods
cmp
or
xchg
and
mov
lods
loopne
cmp
lods
mov
mov
jno
lret
aas
mov
jp
inc
dec
fldt
mov
cmpsb
xlat
addr16
xor
in
out
loopne
movsl
icebp
pop
aad
adc
mov
add
push
imul
inc
jl
jnp
pop
xor
fwait
jo
in
ret
inc
cmp
lods
cmp
pop
cmpsb
es
test
mov
push
jl
int3
stos
enter
sti
ret
mov
jmp
push
mov
sbb
mov
or
cli
xlat
imul
mov
aaa
sub
mov
movl
lret
ror
add
cmpl
ret
pop
sbb
data16
fidivrs
push
inc
sub
das
imul
icebp
mov
cmp
cmpsb
pop
pusha
cld
lea
push
test
cmp
aaa
and
and
dec
stos
loopne
cmpsl
popa
jns,pn
mov
mov
mov
in
sbb
jmp
cmp
cwtl
int3
lcall
adc
cmp
ljmp
rorb
in
push
jbe
mov
pop
jo
test
cltd
inc
mov
jb
cli
sbb
popaw
adc
loopne
outsl
sub
sbb
mov
jmp
in
sbb
je
cmp
inc
jl
in
out
mov
into
add
leave
stos
add
jae
xchg
and
lock
or
in
inc
xchg
jno
sahf
mov
shrl
sbb
xchg
test
sub
dec
js
xchg
push
lods
and
mov
pop
mov
xchg
jl
mov
cmp
add
mov
cmc
jmp
or
sub
dec
aas
lea
dec
push
lea
and
push
xor
or
mov
loop
imul
add
shrl
arpl
ret
cmp
jecxz
mov
gs
xor
push
cwtl
sub
aaa
and
xor
and
js
lret
add
mov
sbb
lahf
jl
test
int
jnp
test
out
mov
push
jnp
jge
gs
loopne
mov
cmp
loopne
int3
dec
push
leave
mov
push
mov
inc
js
or
lock
adc
leave
repnz
ja
adc
ds
lret
add
pop
pop
pop
pop
aad
cmp
ss
xor
xor
popa
mov
xor
lret
pushf
xchg
in
adc
jmp
push
jge
xchg
fwait
jbe
jne
jne
icebp
pop
fxam
mov
lea
mov
mov
int3
mov
sbb
push
roll
mov
ror
push
pop
xchg
jnp
roll
ret
sub
lret
inc
lret
mov
inc
push
pop
jnp
insb
lcall
je
shrl
int3
cmp
pop
les
movsl
sbb
add
hlt
xchg
cmp
sbb
fildll
and
lods
ja
test
fildll
imulb
pop
jp
push
sar
xor
push
sub
loopne
into
sbb
cmc
cmp
pop
or
pop
xor
and
stc
neg
add
push
insl
mov
adc
push
and
or
cld
jnp
arpl
nop
in
jnp
mov
aam
add
inc
push
stc
aaa
cld
or
xchg
popf
je
jbe
sarl
cwtl
out
push
aad
xchg
and
shrb
mov
cwtl
dec
mov
dec
sbbb
inc
adcl
mov
pop
sbb
sub
xchg
xlat
loop
mov
mov
mov
stos
cli
hlt
mov
pop
pop
cmpsl
les
lds
int
rcrl
cmp
test
xchg
iret
sub
int
push
push
mov
jno
flds
bound
mov
xor
insl
bnd
and
add
mov
out
jo
ret
pushf
outsl
mov
in
outsb
lea
ds
jmp
bnd
outsl
inc
add
xlat
enter
jnp
lcall
int3
mov
movsl
xor
mov
sub
nop
pop
repz
out
xchg
inc
sbbb
dec
cld
push
rorl
mov
insb
cs
jmp
push
push
lods
cmpsl
dec
iret
insl
andl
fcomp
cwtl
push
lret
loop
xor
dec
sbb
dec
fbld
scas
dec
cmp
push
out
flds
lock
sbb
push
int3
lds
test
cmp
popf
cmp
test
add
inc
shlb
mov
push
cmc
repz
loop
cmp
cmp
stos
stos
bound
jmp
xchg
push
insb
dec
inc
call
push
push
out
das
push
add
ds
inc
mov
js
mov
outsb
lds
inc
jge
mov
movsb
in
out
in
flds
test
push
or
cltd
push
andb
push
add
aam
clc
mov
lahf
mov
in
popf
lret
movsl
outsb
sub
cmpsb
push
lret
int3
pop
and
aam
jl
mov
pusha
in
out
xor
push
push
dec
and
hlt
ret
xor
sub
call
sbb
xorb
push
cmp
push
sbb
mov
dec
cltd
mov
adc
pop
lret
mov
fisubl
mov
pushl
or
cmp
adc
push
stos
jle
inc
loopne
std
test
icebp
sbb
outsb
mov
repz
es
popa
push
sub
fsubrs
and
jp
lods
adc
mov
neg
inc
mov
dec
and
sub
inc
sbb
icebp
add
jecxz
xchg
adc
push
fiadds
lret
stos
sub
popa
icebp
or
fcmove
jge
dec
pop
imul
dec
stc
pop
cmp
in
sbb
inc
xchg
pop
popf
mov
pop
push
cmp
mov
inc
mov
push
mov
jo
xor
ret
pop
testb
ss
fs
sahf
jmp
inc
pop
faddp
pushf
or
out
jge
mov
ljmp
mov
cwtl
adc
push
add
sbb
mov
dec
jmp
jecxz
lcall
adc
cmpsb
out
outsl
dec
jns
rcl
inc
jl
mov
aad
dec
add
in
loopne
jecxz
es
push
pusha
inc
xchg
sub
aas
andl
and
fcmovnb
jo
dec
add
mov
movsb
in
jbe
sti
push
pop
in
push
daa
mov
fwait
iret
hlt
pop
inc
push
xor
cwtl
xor
insl
xlat
mov
in
add
jl
out
dec
cmpsb
stos
xchg
push
iret
bound
cwtl
loope
mov
or
fbld
cmp
jp
lcall
mov
roll
lods
adc
dec
int
xor
cmp
inc
mov
push
shlb
dec
sub
mov
ja
cmp
mov
mov
sub
push
mov
xor
xchg
pop
jecxz
dec
ljmp
xchg
add
mov
pusha
and
rcr
testl
pop
pop
add
hlt
stc
pop
jp
mov
ljmp
or
add
xchg
xchg
js
add
xchg
xchg
push
in
data16
out
mov
jle
pusha
insl
ficoms
js
xchg
pop
repz
jnp
lcall
adc
loop
jne
mov
mov
cli
lock
je
in
pop
mov
inc
js
pop
ljmp
or
cmp
jecxz
scas
lods
and
push
test
push
mov
pop
int
fstpl
mov
or
aad
or
or
mov
iret
lds
or
mov
pushf
xor
pop
sub
pop
add
add
pusha
sub
out
mov
inc
xchg
xchg
xor
xor
hlt
pop
jmp
out
lahf
mov
xor
stc
sub
sub
decb
cwtl
mov
mov
mov
cltd
stos
push
jo
aaa
cmpsb
cmp
lds
loope
lcall
push
add
mov
push
jg
testb
sti
repz
jle
sub
lcall
inc
lds
enter
mov
jge
push
stc
pop
sub
push
clc
jnp
inc
jge
sub
mov
rorb
stos
add
jl
xchg
pushf
push
int3
sbb
mov
pusha
ja
xor
sub
rcl
or
stos
mov
mov
inc
xlat
je
fcmovnb
ja
or
and
inc
loope
into
mov
pop
outsb
cli
jmp
aaa
cld
cltd
mov
push
dec
push
outsb
call
loopne
arpl
fdivrs
popf
scas
add
cli
and
cmp
cld
pop
dec
ja
sub
pop
cmp
shlb
mov
cmpsb
and
dec
das
inc
ja
nop
fwait
mov
add
mov
sbb
mov
adc
mov
movsb
popf
adc
push
filds
mov
dec
cmpsb
pushf
out
cmpsb
mov
out
cmp
and
cltd
loopne
test
cmpsb
sub
jne
sub
ja
mov
ret
fwait
test
inc
repnz
idivb
loope
pop
imul
rorb
outsl
fcom
scas
scas
or
inc
enter
insl
jnp
mov
pop
jno
lcall
popf
js
jmp
out
pop
pop
and
push
adcl
mov
fdivs
pop
lcall
loope
shlb
or
inc
repz
pop
lret
fs
sbb
loop
jge
add
inc
xchg
outsl
popa
mov
repz
addr16
adc
sub
decb
pop
mov
pop
aam
or
adc
sub
dec
lcall
mov
popf
stos
sub
or
fs
pop
pop
daa
sbb
cli
mov
cmpsl
push
xor
test
and
cmp
jbe
pop
pop
sbb
sbb
nop
rcl
mov
sbb
sub
lods
add
mov
andl
adc
out
test
movsb
out
fsubrl
sub
dec
add
mov
ror
subb
hlt
inc
push
xor
aas
pushf
out
test
mov
pop
call
js
shl
outsb
mov
mov
scas
sbb
add
adc
test
cmpsb
ljmp
movsl
inc
add
repnz
sti
xchg
stc
pop
cltd
pop
push
cmc
inc
mov
push
cmp
inc
cmpl
insb
mov
jne
sub
push
imul
xlat
xchg
and
cld
call
mov
lock
sahf
cmc
stos
sti
fdivrp
push
xor
jmp
cmp
and
push
mov
das
mov
int3
mov
incl
pop
test
iret
popl
in
inc
scas
out
adc
xchg
mov
insl
mov
push
call
sub
gs
popl
cmpsb
lret
dec
push
adc
mov
push
repz
pop
int
inc
lcall
out
push
aaa
xor
dec
pusha
push
aam
out
fmuls
cmp
icebp
add
outsl
jnp
insl
in
mov
es
pop
popa
mov
jno
or
repz
das
out
and
inc
xor
sub
jo
sub
push
push
cmp
xor
cmp
outsb
push
xor
mov
and
dec
test
jne
xor
pop
das
xchg
bound
sub
adcb
pop
or
inc
xor
push
jmp
les
cmp
aam
pop
jp
inc
mov
mov
je
sub
popa
mov
in
mov
lods
out
add
push
roll
and
or
jne
xchg
sbbl
outsl
mov
jmp
int
dec
add
dec
sbb
push
leave
sub
mov
mov
sub
mov
jo
pop
inc
jns
jb
or
cld
sti
pop
add
imul
cwtl
xchg
dec
mov
pop
loope
add
xchg
push
push
lahf
and
xlat
xor
push
aas
inc
shll
das
jp
or
jge
test
pop
test
lret
pop
lahf
enter
xchg
mov
mov
xor
loop
mov
push
ss
adc
pop
addl
cmpl
insl
mov
jmp
mov
fbstp
outsb
jle
pop
adc
das
mov
dec
mov
mov
testb
popf
or
jmp
pop
mov
pushf
lock
aaa
shll
sbb
or
pop
and
fcompl
xchg
push
mov
mov
imull
lahf
jmp
hlt
inc
jmp
add
cmp
les
push
dec
clc
sbb
test
xchg
and
mov
and
add
sbb
xor
pop
pop
lock
test
fistpl
push
and
lods
in
adc
pop
mov
inc
jle
cmp
xchg
imul
add
dec
aam
pop
dec
push
rcrb
int
jnp
scas
inc
out
mov
inc
jae
mov
mov
xchg
adc
in
xor
out
cmp
gs
out
in
add
js
lahf
fdiv
ljmp
mov
lret
jle
jb
mov
push
pop
dec
xchg
shl
lcall
shll
cmp
shlb
scas
mov
mov
xor
insl
add
jnp
or
jns
mulb
movsl
fsubrl
gs
in
pop
cmp
xchg
arpl
sahf
fs
sub
adc
out
dec
mov
add
les
push
loopne
add
rcll
fbld
or
jmp
das
pop
add
pop
jmp
mov
xchg
inc
fistpll
ja
adc
jmp
mov
xchg
xorb
push
inc
push
ds
in
mov
xchg
xchg
push
test
jbe
mov
push
movsl
orl
pushf
fnstenv
loopne
add
repz
rcr
mov
jae
mov
push
lea
movsb
int
gs
xchg
loopne
daa
xor
shll
insb
jmp
pop
loope
bound
inc
ficompl
fisttps
lcall
roll
sub
add
sarw
fisubrl
cli
out
sub
xor
xchg
xchg
jb
aam
cmpsl
insb
es
sub
dec
repz
inc
push
mov
js
jb
arpl
sbb
and
push
pop
repz
adc
sub
pop
lds
popa
pushf
int
mov
sub
sbb
mov
adc
xchg
loop
fcoms
mov
sbb
sbb
xchg
or
adc
ret
and
cmp
loop
inc
pop
out
pop
into
testb
inc
and
cmp
or
mov
inc
xor
call
mov
leave
jg
fs
and
outsl
test
sbbb
lahf
int
in
cld
int3
mov
or
fisttpl
add
rcrl
dec
call
or
push
mulb
lods
or
xchg
inc
jo
jge
xchg
out
test
les
inc
out
mov
test
decb
cmp
pop
pop
test
mov
in
pop
rolb
testl
aaa
popa
fcomps
lods
push
test
pop
sub
repz
sub
mov
fcompl
inc
jmp
cmpsd
sub
inc
mov
jecxz
mov
adc
push
mov
inc
push
rolb
into
jne
stc
stos
je
int
insl
cmp
clc
mov
and
sub
xchg
add
fists
adc
jle
mov
test
cli
je
xor
xchg
icebp
lcall
add
dec
mov
xor
pop
sarb
dec
loopne
movsb
andb
jecxz
into
fcmovnbe
push
frstor
add
repz
fnsave
push
cltd
pop
mov
push
nop
mov
cmp
repnz
xchg
lea
jp
cwtl
xchg
rcll
mov
outsb
pop
inc
enter
sub
out
xchg
xchg
push
sbb
nop
mov
cmpsb
ret
mull
cmpsb
lock
jl
shrl
ss
ret
pop
xor
and
sbb
and
jecxz
sbb
xor
adc
push
call
jg
sub
jno
cwtl
rcll
pop
inc
in
xchg
push
jns
pop
inc
in
into
dec
jbe
push
in
ret
or
sbb
or
jge
fcmovu
xor
test
fisubl
sbb
addb
ljmp
cli
xor
in
mov
or
push
movsb
gs
add
mov
jae
aam
xchg
les
cwtl
mov
inc
mov
mov
jne
sarl
lock
jg
fsubl
inc
fwait
test
aam
mov
add
pop
cmp
test
scas
jne
popw
and
pop
arpl
das
cmp
mov
insb
pop
lods
je
test
cmp
push
pop
fnstenv
negl
adc
mov
sbb
lret
lds
repz
inc
out
loop
stos
imul
mov
int3
lea
add
cmp
sbb
dec
imull
sub
out
or
out
fs
xchg
mov
lret
aaa
inc
sub
int3
es
adc
push
cmpsl
gs
jp
lcall
push
xchg
push
jnp
jns
or
cwtl
dec
mov
repz
and
and
fs
js
fs
xor
psrlw
sub
leave
mov
leave
mov
pop
inc
hlt
test
mov
out
inc
mov
push
ret
push
push
jcxz
adc
sub
xor
push
jecxz
sahf
fstpt
jg
or
jmp
pop
xchg
sti
pop
bswap
mov
fcoml
out
loope
dec
push
xchg
bnd
popa
jecxz
ja
dec
push
mov
pushaw
fsubr
arpl
push
mov
cmpsl
dec
imul
inc
mov
imul
je
xchg
arpl
cmp
sub
dec
xor
lds
int
int
xor
push
adc
outsl
add
ret
hlt
sbb
out
mov
inc
jns
mov
mov
out
mov
adc
xchg
xor
xor
push
movsb
in
cli
jg
es
add
mov
ss
aaa
in
cmpl
out
sub
out
push
out
mov
movsb
arpl
xchg
or
mov
and
fistpl
add
rol
add
adc
xchg
fwait
jns
mov
inc
fwait
push
xchg
in
enter
stc
xchg
mov
push
mov
lods
lds
out
cmpb
js
movsb
lds
roll
pop
dec
int3
mov
add
inc
test
repnz
jnp
jae
in
fisttpll
pusha
addl
sbb
out
adc
push
inc
fsubrs
insl
add
ss
dec
mov
dec
lea
cmp
dec
fcmovnb
pop
das
outsb
mov
mov
cmp
fwait
xor
adc
xor
mov
cmp
mov
fwait
dec
add
or
dec
inc
in
stos
cmc
movl
leave
or
mov
or
lods
popf
xor
push
xlat
push
and
idiv
xchg
push
in
int
int3
mov
les
cmpsb
stos
popf
xor
scas
cmp
mov
dec
sbb
les
add
aam
adc
mov
outsl
cltd
inc
xchg
addb
ljmp
pop
ljmp
lods
mov
jae
xor
lret
mov
xchg
mov
jp
imul
dec
arpl
add
call
jmp
push
mov
pop
push
inc
mov
mov
or
scas
mov
dec
addr16
pop
stos
enter
ret
lcall
out
sahf
aaa
cmpsl
push
or
pop
cmp
gs
mov
int3
mull
addr16
insb
jmp
rolb
es
add
lods
push
mov
xor
test
xchg
shll
test
adc
jb
pop
aam
fdivrs
push
in
push
idiv
xchg
push
jge
int3
lret
fcmovb
daa
bound
addr16
inc
inc
jp
mov
rcrl
jae
das
jle
mov
repnz
xor
xlat
xchg
dec
stos
imulb
das
push
mov
movsl
jg
out
mov
lods
mov
hlt
mov
mov
push
loop
loopne
enter
adc
cmp
mov
nop
or
mov
xchg
xlat
lods
adc
mov
sub
cld
lods
ja
scas
and
loopne
decb
dec
out
shlb
xchg
enter
and
or
pop
or
nop
mov
inc
cmpsl
inc
inc
cli
cmpsb
mov
testl
mov
cmp
mov
jp
xor
ficoml
popa
cld
inc
lea
cmp
mov
pushf
outsl
jns
dec
xchg
jecxz
jb
and
mov
adc
adc
pop
jg
cmp
lahf
sub
dec
pop
je
xchg
rorb
insb
ja
js
dec
fs
jecxz
stos
pop
mov
dec
dec
out
push
sub
aad
mov
loope
inc
inc
ret
xlat
jns
xchg
mov
or
movsb
lods
sub
mov
and
sub
mov
into
inc
mov
sub
pop
out
lds
mov
jp
faddl
xor
pushf
cli
in
out
and
lods
and
incl
cmpsb
out
xor
mov
ljmp
pop
orb
push
nop
sbbl
push
pop
pop
nop
aaa
dec
mov
mov
jns
lret
mov
aad
out
cli
push
and
jno
jge
jp
fnstenv
cmpsb
fcmovu
pop
push
lods
dec
in
or
pop
and
ret
imul
pop
mov
jno
mov
dec
add
lahf
mov
jbe
ljmp
daa
aad
pop
pop
sub
sbb
daa
hlt
sarb
push
push
in
lcall
push
fildl
xchg
addl
insl
push
xchg
lsl
inc
or
lock
cmpsb
and
icebp
cmpsb
mov
or
xor
lds
xor
icebp
das
test
mov
sub
add
or
xchg
outsl
jecxz
outsl
nop
das
adc
lock
seto
and
clc
scas
clc
in
rcrb
jno
scas
lahf
mov
lret
sbb
icebp
sti
faddp
mov
fstps
pop
sub
xchg
jp
cwtl
js
add
inc
add
sbb
rcr
mov
les
mov
sub
push
mov
dec
add
sbb
xor
stos
xchg
fidivs
mov
pop
push
ss
inc
push
icebp
or
mov
mov
movb
jg
nop
ret
std
xchg
mov
loop
lret
jge
pop
inc
push
xor
scas
iret
pop
adc
mov
pop
inc
jbe
cmp
jbe
push
sbb
repnz
sbb
test
pop
cwtl
sbb
lcall
jno
fsubrl
xchg
xor
dec
jo
gs
and
scas
pop
jo
adc
jle
mov
pop
push
cmp
mov
ljmp
cmp
je
iret
jg
xchg
cmp
fldcw
std
std
dec
sub
enter
mov
sub
pop
imul
sbb
sbb
cmp
inc
xlat
cltd
pop
inc
ret
cltd
add
popa
ss
call
hlt
popf
fisubl
ljmp
les
std
rorb
and
fldt
jl
inc
fimull
insl
stos
push
push
push
or
push
xchg
fucomip
push
inc
xchg
or
shlb
jle
and
mov
and
nop
fisubl
mov
and
call
dec
loopne
loopne
jg
das
sbb
scas
lret
rcrl
data16
push
sub
push
adc
imul
out
pop
in
jne
fwait
mov
jbe
xchg
int
push
add
fldl
sahf
and
loop
mov
xor
mov
cmpsl
les
mov
popf
sbb
push
ljmp
mov
fimull
out
push
pop
aad
mov
addr16
fiaddl
repnz
mov
push
mov
xchg
aaa
aaa
data16
fistpl
cwtl
sarb
cwtl
sbb
inc
push
mov
fbld
rcrb
repnz
popa
es
push
and
decb
mov
sbb
xchg
jp
sarl
imul
scas
lret
xchg
mov
adc
cwtl
and
jb
and
fwait
gs
jg
xchg
pop
cmp
cli
mov
fcmovnu
in
outsb
and
stos
std
cmpsl
inc
xor
ret
dec
js
in
or
inc
or
or
test
or
xor
pop
or
jmp
aad
movsb
inc
pop
push
adc
push
ljmp
out
test
bound
int
rcrb
xchg
add
lret
es
les
cmp
mov
clc
jo
or
mov
mov
pusha
cmc
adc
fsts
aam
imul
mov
sub
pop
push
fsubrs
lcall
and
sbb
test
test
add
loop
lods
jge
icebp
addl
js
loop
mov
stos
push
lret
mov
pop
paddw
jmp
rcl
ja
push
push
rcr
xchg
rclb
fwait
sbb
cmc
mov
leave
cmp
jmp
xchg
fistpll
popa
bound
out
jb
or
call
mov
adc
movsl
sbb
cld
rorb
out
andps
and
or
jg
xchg
ja
repnz
mov
andl
mov
sbb
jo
stos
push
or
mov
inc
das
insl
mov
daa
jmp
in
cmp
dec
cwtl
out
data16
pop
pop
sbb
adc
pop
addl
loope
shlb
mov
fcmovbe
rcrb
cmp
sahf
iret
sub
sti
test
xchg
lods
iret
ret
dec
shll
push
inc
dec
push
jae
or
xor
outsl
or
lds
inc
test
jp
test
stos
xchg
push
dec
jbe
call
movsl
aas
xor
das
pushf
and
push
dec
lret
mov
cwtd
icebp
aam
repnz
fs
sbb
cmpsl
xchg
repz
add
jae
xor
data16
xor
aad
aam
mov
xor
dec
cmp
jge
mov
mov
push
xor
sub
mov
xchg
xchg
addr16
or
mov
add
outsl
das
sarb
int
mov
out
or
imul
inc
jo
xchg
into
cmpsb
xchg
pushf
mov
sbb
ljmp
jl
cmpsl
insl
into
imul
add
jp
jmp
xchg
xchg
jno
in
cmp
add
popf
mov
lcall
jnp
je
pop
sub
pop
add
in
test
pusha
notb
jmp
xchg
fwait
pop
outsb
cli
xchg
mov
roll
out
mov
mov
sub
xchg
mull
insl
xchg
test
jne
inc
sarb
inc
and
or
in
pop
inc
loope
je
sub
jne
push
std
ss
mov
pop
xchg
inc
mov
pop
jle
and
sbb
in
mov
lds
test
and
xor
jp
mov
ffree
cmpsb
lds
lcall
cmc
jae
out
arpl
cmpsb
sbb
aaa
stos
pop
and
cld
jns
shll
stc
mov
pop
or
mov
sbb
loop
rol
jo
dec
ret
lods
inc
cmp
sti
and
jg
movsb
cmc
roll
jmp
call
dec
xchg
push
jno
lods
leave
push
psubusw
jle
inc
js
lock
jecxz
jo,pn
fcomps
mov
stc
lock
test
dec
arpl
fisubs
repz
mov
fisttps
jo
xchg
push
fwait
pop
inc
mov
in
push
in
inc
mov
das
push
scas
test
add
inc
adc
je
lds
inc
dec
mul
pop
cmp
sub
stos
push
push
cmp
lret
mov
mov
lods
jb
enter
push
cld
pop
rclb
adc
bound
cmp
nop
mov
push
adc
jo
push
pop
test
les
mov
and
std
jle
sti
popf
xor
push
scas
int
icebp
rcrl
xor
shl
xchg
add
cli
mov
mov
ljmp
add
cmc
fs
sub
mov
iret
pusha
or
leave
out
adc
sarb
aaa
push
adc
push
movsl
lods
and
sbb
bound
xor
inc
imul
mov
dec
mov
icebp
push
sub
xor
mov
sti
adc
push
push
imul
in
ss
sarb
mov
jge
sbb
repnz
sbb
shrl
aam
daa
push
lea
in
shll
add
xor
sub
mov
push
mov
dec
cmpsl
sbb
outsl
mov
mov
jmp
inc
jcxz
sbb
inc
and
int
mov
mov
scas
test
sub
idivb
rcr
sahf
fmuls
hlt
and
pop
cmp
lret
push
es
ret
pop
in
call
sbbb
jp
add
ljmp
andl
xchg
dec
popf
pop
mov
sub
in
fdecstp
jmp
jae
and
out
cmp
ret
mov
mov
pushf
mov
sbb
fwait
cltd
push
cmpsl
fcmovnb
sbb
imul
pop
stc
or
push
add
fstpt
fdivrs
lds
jg
and
xor
or
or
mov
inc
and
inc
add
or
in
repz
fnsave
xchg
pop
and
data16
movlps
jmp
xchg
cmpb
out
mov
hlt
and
pop
add
nop
sbb
pusha
xor
adc
lahf
sarl
pop
dec
add
push
mov
sbb
fists
ljmp
push
test
xchg
xchg
and
dec
sub
push
daa
popa
xchg
pop
and
leave
movsl
stos
dec
mov
fs
iret
fwait
pusha
pop
std
in
dec
xchg
push
push
lods
mov
popf
lods
push
sbb
sbb
stos
or
shrb
jbe
les
and
sbb
cmp
roll
pusha
int3
movb
push
sti
pop
inc
sbb
cmc
mov
icebp
rcr
psubd
pop
and
lahf
add
jp
or
arpl
pop
pop
test
push
jge
cli
outsl
jle
xchg
inc
xor
fistps
in
xchg
dec
jno
sub
out
call
mov
lock
inc
cli
popf
in
mov
dec
sbb
xor
movsl
test
add
lret
push
xor
sbb
jle
arpl
out
js
cmp
cmpb
push
add
rcrb
jb
sbb
shll
xchg
pushl
call
adc
test
test
mov
xchg
stos
fnstcw
leave
iret
xchg
push
pop
in
mov
xchg
mov
les
aad
inc
xchg
jo
xchg
jo,pn
pop
bound
loopne
mov
call
mov
push
jne
push
pop
cmp
cmpsl
sub
xorb
jnp
jnp
sarl
loop
rcr
mov
cmp
test
popa
mov
mov
fwait
cwtl
add
mov
mov
insb
push
cltd
cmp
fstps
inc
movsl
rorb
push
jns
lods
mov
pop
and
fidivl
loope
jmp
cmp
insl
inc
jo
je
out
fstl
aaa
cmpsl
add
cli
into
jbe
and
sub
xlat
lahf
lock
mov
sbb
mov
cmp
out
inc
stos
and
pop
cli
popa
sub
pop
loopne
push
enter
cmp
mov
sbb
dec
adc
mov
pop
pushf
in
outsl
mov
push
outsb
jecxz
pop
call
les
push
cmp
mov
icebp
mov
xchg
sbb
stos
jmp
jecxz
pop
lcall
cmp
inc
xchg
jb
xlat
push
push
jmp
and
fidivrl
push
fcomps
aam
and
lret
dec
fcomip
sub
xchg
ret
and
popf
lea
jp
popf
outsl
lds
mov
fildll
mov
imul
lds
fwait
sbb
arpl
mov
into
jmp
mov
sarb
out
andl
pop
jae
push
jns
xchg
sti
mov
rol
mov
jmp
mov
call
jle,pt
adc
test
xchg
nop
nop
jg
cld
out
add
sbb
lahf
pop
mov
iret
xor
jo
aad
xchg
or
lods
enter
cmp
inc
push
jecxz
cmp
jg
mov
jg
ret
inc
push
dec
sbb
xchg
lahf
sahf
mov
xor
stc
stos
push
pop
pop
mov
daa
cmc
dec
jnp
ss
je
mov
out
jl,pn
imul
ljmp
mov
rorl
push
cmpl
xchg
sbb
fidivs
test
lret
lahf
push
popf
pop
push
stos
push
jge
ret
mov
add
or
push
jecxz
inc
dec
aaa
pop
xor
or
dec
out
or
stos
popf
dec
sub
ss
mov
mov
mov
and
sbb
ret
lcall
loopne
mov
xlat
rcrb
push
sbb
pushf
sbb
adc
adc
adcb
and
nop
add
xorb
add
add
out
mov
push
jp
xchg
adc
dec
fstps
leave
iret
mov
insl
pop
or
lods
lock
rcll
pop
push
out
rorb
add
imul
insl
into
enter
mov
aaa
repnz
aas
lret
scas
pop
and
in
mov
ret
push
fstpl
sub
mov
jnp
push
jns
inc
je
fisttpll
xchg
dec
fwait
sub
pop
lret
mov
out
jp
pusha
popa
fneni(8087
jo
inc
in
mov
scas
mov
adc
mov
push
cmp
pop
xchg
push
int
xor
popf
jg
adc
stc
adcl
push
aas
fstpt
dec
out
imul
out
xchg
repnz
dec
add
cmp
rorl
out
in
mov
mov
bound
jmp
pusha
mov
lahf
nop
xor
add
je
cli
xor
xor
cltd
push
xlat
lods
mov
aam
jle
ret
pop
xchg
xchg
test
inc
dec
lea
cmp
push
xchg
loopne
mov
push
aam
cmp
sahf
mov
fwait
dec
orl
mov
std
iret
fwait
test
adc
ljmp
shll
and
xor
mov
mov
or
mov
inc
fldl
in
xchg
mov
sbb
mov
xchg
xor
or
pop
and
xor
cmp
push
movsb
lds
dec
xchg
pop
cmp
push
xlat
in
mov
adc
push
cltd
sub
fists
sbb
dec
pop
push
push
pop
pop
inc
and
push
push
fidivrs
rcrl
popf
je
and
cmp
cmpsb
pop
cld
xor
test
pop
push
push
inc
into
out
xchg
sub
push
sub
mov
ds
add
in
cmp
pushf
mov
je
in
test
jne
and
ds
lahf
leave
jb
or
sub
cmp
sub
icebp
sbb
mov
push
jp
cmp
xchg
push
std
lock
out
inc
mov
push
clc
pushf
mov
xlat
cmpl
push
rolb
pop
stc
call
imul
sahf
push
outsl
sbb
inc
pushf
xor
xchg
jecxz
inc
pop
jne
lahf
and
inc
mov
mov
loope
mov
push
nop
pop
cli
adc
nop
ret
mov
jmp
js
nop
fidivs
outsb
scas
aas
or
cli
lahf
stos
or
add
aam
cmc
cmp
dec
outsb
nop
lret
cmp
fs
mov
mov
dec
add
fsubs
jnp
repnz
mull
test
ret
jbe
in
cli
adc
in
or
dec
cmp
lea
adc
jl
ja
jp
push
repnz
jae
xorl
cmp
pop
rcl
inc
daa
data16
pushf
mov
push
adc
cmp
cmpb
cmp
hlt
jecxz
je
sbb
mov
in
lret
pop
mov
adc
or
jno
loope
sbb
lahf
push
int
mov
lock
pop
pop
inc
add
mov
push
jle
les
fcompl
repz
fcmovne
jo
lea
bound
mov
xor
mov
xor
sub
js
add
pop
add
rcll
push
pushl
aas
jb
xor
leave
mov
repnz
mov
pop
push
imul
inc
scas
add
loope
sbb
in
ljmp
jle
jge
aad
jge
pop
clc
cltd
mov
mov
lds
sub
popa
jo
rorb
pop
add
popa
mov
jle
leave
dec
je
xor
or
and
ret
mov
adc
insl
push
bt
lods
fnsave
dec
hlt
cs
add
dec
cmp
xchg
popa
dec
jp
stc
sbb
add
pop
inc
repz
and
ja
imul
lret
and
fwait
and
xchg
mov
push
mov
dec
popf
fnstsw
ss
jg
scas
mov
pop
xor
lea
xchg
pop
sub
sbb
ja
and
mov
cmc
adc
mov
ffree
fcomps
push
mov
push
push
test
enter
cmp
dec
test
lret
mov
xchg
push
mov
insb
std
sub
mov
lcall
inc
stos
xchg
fs
ds
cmp
or
pop
pop
std
sub
lods
inc
les
call
or
mov
sbb
add
fdivl
push
xor
adc
cmp
mov
inc
mov
lods
jg
or
mov
mov
lock
or
jecxz
cmp
jns
insb
leave
shlb
mov
in
xor
or
xlat
mov
jb
dec
sahf
pop
mov
in
movsb
push
lcall
add
bound
imul
mov
sbb
push
pop
pop
pop
mov
mov
adc
movsl
mov
jae
sbb
push
inc
xchg
cmp
mov
sbb
lock
push
std
xor
mov
adc
dec
je
insb
xor
pusha
jo
xor
jbe
mov
cmp
loop
je
jbe
mov
jg
fcomps
pop
ffreep
cmp
xchg
adc
repz
or
hlt
lods
js
mov
dec
push
mov
push
and
sbbl
jmp
sub
fcomi
pop
sbb
xlat
inc
xor
out
xor
stc
dec
les
mov
loop
int
cld
jp,pn
or
mov
imul
pop
sar
mov
imul
xchg
jg
out
jge
dec
push
push
dec
outsb
push
pop
mov
adc
repz
lret
mov
jae
negl
pop
lret
ljmp
push
shll
xchg
xchg
out
out
hlt
sahf
adc
xor
ja
mov
sub
dec
cmc
cmpsl
pop
pop
test
je
sbb
stc
cld
or
dec
push
cltd
or
mov
and
inc
mov
ds
push
push
lea
mov
sub
pop
pop
ret
ficoms
in
and
add
jne
add
inc
inc
xor
sub
or
cld
rorl
nop
adc
sub
sbb
aas
test
mov
cwtl
sarb
aas
and
lret
jl
fwait
in
jl
sub
lret
stos
mov
add
inc
test
cltd
xchg
mov
add
aaa
nop
cmpsl
jno
decb
repz
scas
clc
add
insl
and
dec
sbb
or
lret
repz
push
repnz
mov
data16
addr16
sbb
fildll
jmp
enter
icebp
or
jb
xchg
sarb
rol
mov
push
mov
cmp
mulb
pop
mov
mov
mov
scas
sarb
dec
mov
fwait
pop
mov
stos
cwtl
cmp
rep
add
sbb
pop
aam
jae
loopne
daa
movsl
inc
add
push
xchg
incl
or
xorb
xchg
je
int
xor
mov
cmc
xchg
jnp
std
pop
out
pop
mov
push
mov
inc
insl
dec
cltd
push
xchg
test
imul
js
sbbb
ljmp
dec
cwtl
jb
ja
push
sbb
cmp
and
jmp
and
fcomps
adc
pusha
gs
xor
in
and
jmp
movsl
ja
lods
and
scas
sti
ficoms
inc
mov
mov
and
cmp
loope
shrb
mov
scas
addr16
pop
call
in
in
cmp
dec
pop
dec
test
and
into
pop
lods
push
push
pop
pushf
add
mov
in
mov
cmp
mov
int3
and
je
fs
es
or
arpl
dec
cmpsb
lds
or
inc
insb
aad
or
ss
xchg
call
mov
lock
ret
arpl
mov
xor
mov
or
sbb
outsb
hlt
clc
icebp
pop
mov
mov
add
fwait
rclb
sbb
fistl
cmp
rcrb
je
shlb
cli
xchg
mov
pop
push
int3
inc
ljmp
insb
pop
or
repnz
outsb
cmpsl
clc
cld
push
push
cmp
hlt
imulb
mov
js
mov
cwtl
add
xchg
sti
push
outsb
pop
sub
in
adc
lret
leave
bound
mov
pop
add
fildl
dec
adc
inc
dec
sti
hlt
jp
fndisi(8087
pop
rorl
or
mov
sbb
scas
mov
out
shl
inc
int
jl
jge
arpl
scas
mov
scas
mov
mov
pop
xchg
loopne
push
push
mov
pushf
cmp
mov
cmp
lods
fcmovnbe
push
jne
and
mov
sbb
loopne
fadd
movb
add
cmpsl
imul
and
lret
xor
iret
push
repz
mov
in
cld
enter
mov
out
std
or
test
mov
in
or
jp
fdivrl
push
push
xor
inc
jecxz
jnp
fsts
lods
out
call
jmp
in
sub
xchg
and
cmp
pushf
mov
out
sub
push
dec
sub
xchg
dec
sub
shll
fdivs
lods
into
jge
adc
stos
aam
push
mov
fwait
and
add
out
cmp
mov
repz
pop
cmpsb
cmc
das
adc
imul
mov
pop
add
sbb
add
xchg
es
cltd
mov
push
lods
mov
push
vrcpss
mov
pusha
push
lahf
lcall
xlat
jg
mov
and
adc
daa
inc
insl
sub
add
push
adc
pop
pop
into
mov
loope
dec
mov
mov
pushf
cmp
push
mov
sbb
mov
fstl
mov
movl
int3
inc
fsubrl
nop
nop
dec
push
lret
scas
out
push
push
mov
xchg
test
sub
xchg
push
pop
rcl
pop
jns
dec
popa
popa
jae
push
jae
jmp
cmpsb
push
imulb
into
adc
or
mov
jle
add
outsl
cld
int
insb
push
mov
test
int3
cli
mov
int
orb
push
bound
movsb
mov
cmpsb
jge
les
mov
xor
insb
dec
adc
in
stos
sub
aas
xor
pop
and
mov
shll
cmp
in
in
out
int3
jle
and
xor
jne
cltd
mov
mov
hlt
aam
push
in
adc
adc
adc
test
test
leavew
lahf
in
jg
test
ljmp
xchg
popf
pushf
imul
push
sub
out
in
movsb
xor
imul
mov
neg
cmpsb
inc
jno
jl
jno
fdivrs
or
mov
fdivs
repz
out
inc
popa
imul
cmpsb
lods
xor
pop
fisttpll
outsb
xchg
ds
xor
pop
jbe
movsl
mov
inc
fucom
xchg
dec
mov
sbb
jbe
fdivs
mov
leave
cld
ss
xor
in
enter
loope
dec
sbb
xchg
hlt
popa
xchg
adcl
xchg
pop
mov
sub
mov
jo
pop
aam
cmc
in
pop
cmc
add
clc
inc
or
neg
jg
xor
mov
ffree
cli
cli
jae
xor
xor
xor
andb
scas
test
outsb
or
jge
and
out
lods
test
dec
mov
imul
push
imul
mov
in
dec
adc
repz
xchg
push
int3
push
pop
pop
scas
loopne
fsin
fistps
hlt
lret
icebp
pop
addr16
subb
gs
fidivl
cwtl
or
int
iret
mov
jbe
xor
xorb
sbb
xchg
clc
nop
mov
jecxz
rolb
xchg
fs
mov
hlt
pop
mov
stos
add
icebp
hlt
out
add
push
sub
movl
insb
outsl
dec
inc
mov
cmp
pop
enter
dec
aaa
dec
adc
mov
or
pushf
js
icebp
clc
clc
pop
dec
push
push
icebp
mov
cli
add
bound
aas
or
call
or
push
add
push
add
dec
dec
gs
fmull
mov
subl
pushf
jmp
lock
pop
dec
popf
jg
mov
mov
adcl
xchg
mov
jb
or
push
es
and
std
and
jae
fisubl
pop
adc
xchg
rcl
xchg
fwait
lods
xor
cmpsb
out
sti
xchg
xchg
jbe
push
cmp
bound
inc
jne
add
fs
and
mov
test
jge
pop
mov
jecxz
jae
sbb
in
lahf
movsl
int3
fisttps
test
push
jp
div
pop
xor
or
xor
hlt
or
mov
test
nop
pop
in
and
fmuls
inc
jno
outsl
xorl
adc
sub
push
dec
mov
clc
mov
daa
out
sbb
cmpsb
xor
pop
neg
sahf
cmpsl
sbb
pop
imul
std
cmp
dec
loop
mov
inc
inc
cmpsl
inc
or
roll
into
mov
inc
dec
iret
test
insb
std
xor
pushf
pop
sub
imul
pop
xlat
mov
lret
mulb
lret
fwait
mov
xor
testb
call
xlat
fists
xor
rcll
xchg
mov
jmp
cmc
out
cmc
ss
in
adc
lea
bound
cmp
pushf
int
jp
hlt
jmp
rcrl
mov
sti
lret
stos
pop
jle
roll
sbb
fdivr
jg
movsl
lea
xchg
push
cmpsl
add
repnz
cmpsb
mov
jo
or
jbe
cmpsb
movsl
inc
pusha
adc
sub
mov
xor
dec
andb
jle
cmp
xor
xchg
jmp
pop
xor
loope
repz
int3
mov
mov
and
je
xchg
iret
icebp
xchg
insb
cld
popf
or
daa
jge
mov
pop
pushf
movsb
fdivrs
jne
insb
adc
outsl
add
in
test
lds
jb
pop
aas
adc
adc
jae
mov
push
jge
jbe
jno
imul
mov
pop
lock
fsub
jo
data16
sbb
xlat
push
push
shl
lret
lahf
xchg
js
adc
push
cmp
pop
add
test
pushf
decb
push
cmp
fmul
push
mov
sbb
inc
in
jno
adc
in
xchg
dec
mov
mov
or
mov
cmp
loop
mov
xor
push
fisubl
dec
jl
add
push
jns
fidivrs
sbbl
insl
or
dec
mov
les
popf
mov
push
sub
in
movnti
sahf
sbb
pushf
fcmovnbe
mov
pop
addr16
push
mov
imull
push
data16
repnz
push
xchg
push
dec
ja
jmp
jle
mov
xchg
fisubrs
jge
add
outsl
push
outsb
shll
stc
out
push
popa
mov
xchg
and
cmp
roll
mov
lret
jecxz
and
sbb
ljmp
mov
or
repnz
imul
push
decb
out
negl
adc
xchg
jle
xchg
data16
roll
aam
sbb
push
xor
lock
jl
clc
stos
fcmovu
push
loopne
push
mov
push
repnz
shlb
dec
sub
jge
jmp
push
leave
lock
xchg
mov
push
ffreep
sub
jmp
inc
jae
push
shl
xchg
cmp
sbb
xchg
divl
cmp
xor
int3
scas
or
mov
nop
add
enter
xchg
jbe
test
adc
jmp
cmp
popa
bound
addr16
and
mov
jge
lret
out
and
mov
mov
mov
aas
xchg
cmp
mov
arpl
xchg
je
arpl
mov
mov
cmpsb
aam
test
or
add
jbe
movsb
rorb
push
data16
int
push
and
xor
adc
pop
jg
fadds
scas
sbb
nop
jg
call
data16
sbb
cmc
jne
ret
repz
lods
or
add
pushf
int3
shlb
cmc
das
mov
ss
mov
cmp
push
inc
pushf
xor
inc
pop
push
fwait
test
sub
les
lea
lahf
fcmovnb
adc
inc
inc
and
lret
in
test
jle
lret
mov
repz
adc
dec
mov
and
mov
xchg
inc
xor
fdivp
dec
or
aad
sub
push
xchg
cmc
xchg
gs
int
in
inc
sbb
pop
mov
fdivrl
add
fimuls
jge
je
outsb
or
push
int
test
cli
test
adc
xor
data16
and
xor
popf
cli
arpl
xor
dec
mov
jge
cmp
pop
in
test
cmp
or
push
outsb
jnp
push
xor
jae
out
add
push
inc
xchg
dec
xchg
cmp
cmc
mov
popa
and
pushf
mov
mov
test
push
mov
push
lea
leave
jge
jo
add
mov
sub
imulb
mov
sbbl
xchg
adc
mov
nop
push
je
pop
jl
sub
inc
insl
popf
jmp
and
mov
fbld
call
sti
sahf
mov
jp
add
es
insl
and
test
enter
pop
test
push
repnz
cmp
sub
mov
or
cmp
clc
insb
aam
adc
adc
ss
inc
cmp
lock
das
std
loop
sub
mov
or
push
jo
mov
cld
ret
xor
rcrb
push
js
mov
push
ss
popf
xchg
mov
loope
xchg
jne
inc
mov
out
sbb
test
int
lock
xorb
jns
lods
les
call
dec
push
sub
mov
cmpsb
mov
and
cmc
mov
repz
int
out
sub
cmp
out
ret
add
cmp
lds
fnsave
les
pop
adc
pushf
leave
call
inc
mov
test
or
xorl
cmpsl
clc
sub
pop
mov
pushw
dec
lcall
push
lea
mov
pop
jae
scas
iret
pop
outsl
je
leave
lret
dec
lret
sbb
dec
push
mov
movsl
or
sub
jbe
cmpsl
ljmp
lret
into
pop
sub
xor
cmp
adc
call
pop
jp
mov
addr16
call
mov
mov
cwtl
popf
cmp
test
or
out
stos
ret
inc
rcr
rcl
xchg
sub
xchg
pop
or
sahf
dec
out
push
mov
push
jmp
fcmovb
bound
or
cmc
dec
ret
xchg
sub
jnp
cmp
sbb
pop
cltd
adc
mov
xchg
outsb
mov
inc
arpl
adc
adc
add
xchg
out
mov
xor
rcrb
test
outsb
popf
sub
mov
push
xor
rclb
jle
pusha
sbb
rorb
ljmp
gs
sbb
fstpt
pop
ret
imul
sarb
push
mov
dec
les
mov
dec
cs
repz
imul
adc
das
outsb
mov
iret
xor
xchg
mov
decl
ljmp
mov
xchg
mov
std
fstpl
aad
shlb
jae
push
dec
mov
test
test
jb
add
jl
xor
adcl
shll
push
dec
mov
icebp
shll
jbe
out
push
shll
mov
int
push
pop
jge
add
pushf
push
int
inc
sti
fldcw
mov
and
sbb
jne
jno
stc
jle
mov
jnp
xchg
loopne
jp
push
xor
js
inc
mov
ficomps
fstpt
lcall
aas
test
repz
mov
mov
mov
sub
mov
ss
add
mov
in
ret
insb
push
xchg
mov
repz
in
add
inc
out
ret
ds
out
decl
fidivs
inc
and
adc
out
popf
jp
test
and
xor
xchg
push
fadds
lret
xor
xor
lret
fldcw
inc
stc
ret
into
add
addb
fcomi
ljmp
and
and
sub
or
cwtl
fadd
pusha
push
test
push
mov
or
mov
outsb
push
push
gs
call
cs
cwtl
test
je
mov
inc
mov
sub
lahf
call
pop
mov
hlt
nop
inc
icebp
xor
jnp
push
pushf
pusha
dec
dec
es
cld
jge
mov
mov
ret
jbe
mov
xor
loopne
xor
fabs
adc
sbb
test
inc
push
and
adc
shrb
pusha
loop
mov
out
push
in
lea
push
movsl
notb
push
adc
xchg
adc
xor
cmp
mov
cmpsb
sti
testl
mov
test
das
jno
mov
inc
fidivrs
mov
jb
inc
mov
aaa
xchg
popa
cmp
xor
addr16
fstpl
pop
ret
dec
and
fs
in
push
loope
inc
add
out
xor
pop
push
daa
mov
dec
mov
das
hlt
sub
xor
sub
icebp
push
cmc
rcll
mov
xchg
xor
mov
xlat
pop
mov
leave
sti
loopne
xchg
push
or
cmpb
mov
pop
xor
repz
sbb
out
ret
scas
add
cmp
ret
dec
push
cmp
and
mov
jbe
push
dec
dec
mov
sbb
dec
mov
xor
ret
clc
or
imul
icebp
cmp
sub
sub
sbb
loope
scas
dec
sahf
xor
sub
xor
pop
test
cltd
popa
je
rorl
stos
push
insl
cmc
push
jo
int3
or
or
xchg
shlb
or
push
jbe
add
js
arpl
mov
inc
fs
xor
mov
inc
lea
addr16
iret
or
xlat
gs
inc
mov
das
or
test
stos
add
sbbl
imul
cwtl
jnp
push
push
movsb
or
fidivs
lods
movd
or
out
arpl
dec
inc
arpl
adc
and
scas
cli
cltd
sbb
jo
xor
sahf
and
or
inc
add
adc
popf
movsb
stc
pop
sarb
ljmp
mov
cmpsb
adc
into
dec
inc
xor
push
movsl
xor
nop
icebp
lods
cmpsl
data16
adc
aas
pop
in
stc
mov
les
test
dec
lret
add
jg
xchg
add
pop
int
ds
hlt
jecxz
xor
jae
inc
pusha
xor
xchg
dec
aad
fwait
pop
leave
loopne
mov
adc
cmp
ljmp
lcall
cmp
push
add
push
sbb
sub
cmpsb
insb
fsubr
fwait
movsl
pop
dec
inc
cs
outsl
or
std
dec
addr16
rclb
or
push
push
aad
popf
xchg
es
jp
jg
or
push
or
push
les
dec
outsl
aam
clc
cltd
mov
push
les
push
in
ret
pop
fildll
mov
adc
add
and
pop
stos
pop
add
dec
into
insl
cmp
popf
inc
aaa
fstpl
or
sbb
mov
clc
mov
xchg
mov
dec
insb
pushf
aaa
shlb
cmpsl
pop
and
cltd
out
adc
pushf
aaa
decl
xchg
mov
cs
and
mov
call
aas
lcall
jg
ret
mov
lods
sbb
loop
mov
sub
mov
testl
xchg
jo
mov
call
outsb
xchg
imul
xor
mov
test
add
jge
and
sbb
shrl
mov
decb
addl
pop
mov
loopne
and
incl
test
addr16
rolb
fisttpl
xchg
popa
icebp
pop
fadds
and
andb
xlat
aaa
ja
sahf
sub
xchg
std
stos
mov
fsqrt
mov
sti
xor
cld
adc
lahf
dec
and
and
mov
addl
add
sbb
sub
fnstenv
and
or
sbb
ljmp
dec
jecxz
or
dec
cmpsl
lds
pop
adc
arpl
dec
and
inc
push
cmp
lret
cmp
enter
insl
or
push
jge
outsb
inc
or
mov
js
xchg
mov
mov
inc
mov
push
cmp
ja
in
dec
cmpsb
sub
jg
push
and
pop
aam
call
and
and
jb
outsl
jmp
clc
xchg
inc
lock
data16
jo
add
xlat
mov
jge,pn
cwtl
call
jbe
outsl
es
pusha
jmp
in
or
stc
pop
cmpsl
imul
jno
inc
lret
push
jg
and
fs
mov
and
and
xchg
das
nop
jle
jns
sar
fdivrs
sub
dec
pop
dec
iret
movsb
aaa
add
fiaddl
mov
jnp
mov
imul
mov
jl
pop
imul
sbb
movsb
xchg
out
ljmp
pop
pop
xor
or
iret
add
rolb
add
scas
bound
cmp
mov
mov
jne
jnp
aas
push
add
add
popa
fimuls
aas
lret
js
leave
fwait
loop
inc
lods
add
xor
add
lret
sbb
or
dec
sub
xchg
push
push
xchg
sbb
out
pop
cmpb
and
mov
jge
mov
ret
or
pop
cmpsl
adcl
inc
test
xchg
fwait
sarl
mov
jl
notb
jecxz
add
hlt
add
jo
adc
cltd
in
pusha
cmp
cmp
cmc
xor
popf
cs
mov
xchg
int3
rcl
in
fnstsw
jnp
cld
push
sbb
in
loop
fdivr
xor
or
cld
pop
fiaddl
rclb
cmp
mov
xchg
sti
pusha
adc
lods
cmp
aad
mov
fcoml
jl
out
mov
fdivl
lret
adc
pushf
xchg
test
mov
stc
repz
pop
mov
push
test
inc
cmp
ss
subb
loope
cmc
inc
xor
jo
mov
adc
ret
lea
insl
fistps
jbe
jg
or
push
in
and
mov
or
xor
xor
lcall
pusha
sub
xchg
and
pop
shl
jnp
sub
mov
cwtl
push
fildl
or
loope
js
out
inc
in
jno
sub
sbb
dec
and
jb
push
push
push
xchg
jp
and
lcall
pop
orl
adc
clc
and
adc
xor
shll
pop
test
push
mov
in
bound
jmp
add
rolb
mov
out
lret
sahf
sub
inc
int
lea
sbb
mov
push
sbbb
jp
imul
fdivr
fistpll
adc
imul
push
and
or
and
lret
stos
or
jl
loop
cs
cmp
pop
inc
jns
cld
jmp
mov
lds
push
pop
ffree
rcl
jle
sbb
xor
cmp
out
adc
ljmp
test
push
adc
jo
adc
and
mov
and
mov
jo
xchg
mov
sbb
add
gs
push
arpl
mov
add
fisubrl
pop
dec
jecxz
inc
jbe
icebp
fsubr
popa
pusha
mov
push
mov
negb
sbb
outsb
jno
iret
ja
pusha
dec
addb
or
rep
iret
lds
cmp
adc
out
andb
mov
fwait
call
imul
int
mov
adc
fstps
or
fdivs
adc
xchg
jno
js
mov
shl
ds
sub
mov
pop
sar
jbe
mov
aas
inc
sub
lret
push
xchg
frstor
cli
insb
pop
js
mov
inc
or
cmp
js
in
pop
push
in
aas
xchg
shll
bound
push
std
ss
xchg
dec
push
shlb
xchg
fistpll
xor
dec
fnstcw
int
lods
cs
fdivp
jo
mov
int3
ss
adc
inc
adc
mov
in
nop
shll
lods
mov
std
lds
pop
repz
lds
or
pushf
cld
movsb
add
jg
xor
pushf
mov
xchg
xor
mov
jge
adc
icebp
outsb
sub
sub
adc
jb
test
and
sbb
pop
and
or
lcall
cmp
loopne
push
cmpsl
push
rcl
push
sub
jmp
jbe
sti
in
push
fisubrl
imul
fbstp
push
jmp
xlat
inc
pop
add
repnz
adc
jl
inc
sbb
outsb
repz
mov
in
test
popa
jnp
dec
xchg
es
popf
adc
hlt
jae
pop
jno
mov
pop
mov
xor
test
movsl
adc
sbb
faddl
dec
or
and
xchg
mov
ds
cmovns
cwtl
sbbb
add
cmp
inc
xchg
push
clc
or
jp
imul
mov
aad
inc
xchg
dec
int
mov
sub
cmp
push
xchg
cwtl
or
adc
cld
out
pop
std
push
cmp
not
mov
rclb
lods
add
jo
push
push
xor
fnstsw
mov
loope
mov
and
xchg
popf
and
div
test
testl
hlt
push
lods
insl
pushw
xchg
push
pop
ret
mov
and
insb
sbb
jmp
pop
pop
pushl
rol
pop
pop
data16
test
repz
lret
or
jns
xor
int3
inc
mov
in
rorl
sub
mov
inc
filds
fmull
jo
in
inc
aas
scas
push
xlat
pop
movsl
outsl
mov
mov
test
push
stc
mov
stc
cmp
mov
mov
js
mov
sbb
out
lret
jge
bound
mov
lea
inc
rol
popf
mov
or
jo
fisubrl
pop
adc
sbb
lds
jl
shrl
in
mov
js
ljmp
in
pop
dec
roll
jl
inc
addr16
cli
lods
nop
jbe
pop
xchg
xchg
sarl
and
jae
mov
bound
les
or
sbb
pop
test
adc
push
aad
lret
adc
imul
mov
dec
pop
cli
cli
mov
jge
call
lret
inc
xchg
pop
sarb
repz
push
mov
add
jb
outsl
pusha
jb
cmpsl
sub
mov
stc
out
test
lcall
jmp
sbb
cmp
add
out
mov
or
pop
or
int3
pushf
add
or
int
ret
push
das
sahf
bound
mov
xor
dec
xchg
jnp
lret
xlat
jmp
loopne
xor
inc
mov
mov
cld
jnp
in
mov
mov
pushf
out
cld
sbb
dec
mov
ljmp
inc
loop
dec
pop
jne
inc
pop
inc
ds
es
adc
push
push
je
adc
adc
or
std
pop
sub
gs
rcr
or
shlw
in
cmpsl
cmc
push
push
jle
inc
pop
inc
insb
aam
dec
dec
cmpsl
sahf
adc
add
push
sbb
fiadds
dec
aaa
lods
hlt
inc
popf
inc
xorb
test
dec
es
dec
xchg
aaa
repz
jo
je
mov
cmp
add
scas
jle
aam
lahf
sbb
xor
lahf
pusha
inc
bound
pop
inc
add
sbbb
mov
ss
push
xlat
mov
pop
dec
jecxz
xchg
inc
outsb
inc
movsb
test
iret
pop
push
mov
sbb
and
ss
dec
mov
jmp
ss
sub
clc
sbb
fneni(8087
mov
ds
iret
mov
fsubrs
in
pop
ja
loopne
or
cmp
jae
xlat
in
jecxz
adc
movsb
xchg
scas
fwait
sbb
ljmp
and
xchg
or
dec
jle
ss
hlt
and
sbb
lock
mov
lret
sub
pushf
push
adc
mov
xor
jl
cmpsl
jne
jne
cmp
jle
dec
std
pusha
in
les
jmp
pop
cli
cmp
mov
xchg
or
adc
jo
mov
xchg
insb
xor
cli
sbb
ja
mov
loop
dec
cmp
daa
out
mov
adcl
mov
mov
subl
mov
bndstx
jg
add
mov
mov
mov
adc
jl
ds
lods
in
inc
sbb
adc
cmp
ja
jmp
fistps
pop
adc
jae
pop
aas
jbe
mov
test
push
cmp
sahf
or
pop
ret
jle
mulb
imul
int3
jl
int3
cwtl
push
or
loopne
sub
inc
dec
inc
cli
sahf
adc
xor
movsl
sbb
push
lods
lods
push
ja
imul
out
sub
scas
adc
insb
fstpl
xchg
adc
sbb
mov
loop
das
push
and
mov
gs
pushf
jae
or
adc
insb
icebp
sub
cli
std
jg
mov
xlat
mov
popa
jo
psubw
sub
mov
dec
shll
jb
or
mov
or
mov
push
adc
jg
aaa
in
pop
hlt
and
test
mov
out
cwtl
jmp
icebp
ss
mov
mov
xchg
cmpsl
xchg
rolb
xlat
fsubs
mov
data16
dec
xor
pop
push
adc
clc
test
cmpsl
clc
ss
mov
test
in
add
aam
inc
inc
das
adc
pusha
test
inc
in
push
stc
cwtl
aaa
mov
movsl
test
xlat
or
adc
sub
test
and
mov
sbb
sahf
add
mov
push
add
inc
shl
stc
into
enter
pop
int
adc
hlt
cli
ds
lea
shrl
loop
mov
pushf
sbb
mov
das
decb
push
sub
mov
in
aaa
and
mov
mov
sarb
jb
inc
divl
mov
mov
arpl
adc
dec
scas
jle
mov
cltd
jno
adc
lret
popf
aas
and
pushf
movl
push
sbb
ret
jns
inc
cmp
dec
jp
add
enter
cmp
test
push
xorb
xchg
xchg
flds
aad
in
js
jg
hlt
lods
inc
add
dec
push
push
dec
dec
mov
rcrb
faddl
pop
push
push
add
push
loop
mov
mov
lahf
inc
cmpsl
inc
mov
lods
outsl
repnz
out
mov
pop
iret
adc
imul
scas
jecxz
cld
inc
mov
adc
test
testl
dec
pushf
cmc
out
gs
aas
negl
pop
pop
aam
sub
jno
add
jbe
cld
call
sbb
pop
hlt
popf
bswap
imul
lret
repz
adc
mov
xchg
push
mov
xchg
mov
dec
shl
sbb
out
push
test
and
sbb
sub
lds
mov
mov
addr16
sbb
add
mov
test
testb
add
outsb
enter
loope
and
test
andl
std
arpl
cli
in
mov
movsb
shll
ds
lods
subb
push
xlat
add
xchg
add
xor
push
jmp
sub
mov
rorb
ja
int
test
and
inc
jp
pop
lret
mov
sbb
push
fnstenv
mov
sbb
sbb
roll
enter
in
ljmp
sahf
mov
add
mov
sbb
adc
outsl
fcoms
mov
jns
adc
dec
mov
mov
lods
cltd
mov
clc
rorl
xchg
popf
mov
dec
lock
sbb
mov
pcmpeqb
lock
mov
sub
test
mov
sub
jecxz
pop
scas
cmp
fiaddl
bound
and
push
and
imul
lret
push
inc
mov
sbb
mov
repz
dec
jnp
pop
loope
pop
jmpw
dec
int3
hlt
test
mulb
mov
scas
inc
inc
add
jae
pop
scas
dec
ret
pop
sub
les
xchg
push
push
scas
jno
xor
or
negl
je
outsb
xor
sbb
popa
push
test
icebp
sahf
dec
stos
xchg
das
push
andb
add
lret
out
cltd
popa
mov
das
sbb
jg
pop
push
in
pop
or
push
test
stos
test
in
bound
and
lea
das
jnp
icebp
push
iret
mov
iret
mov
and
mov
push
push
pusha
lock
add
mov
fwait
movsb
rcrl
push
sbb
movsb
dec
mulb
subb
fmulp
rcrl
or
push
out
jno
sub
mov
insb
dec
mov
jne
adc
sub
sahf
iret
xor
pop
jecxz
outsl
sbb
adc
mov
cmp
leave
clc
sbb
lods
fdivs
icebp
and
addr16
and
mov
lea
sub
lret
mov
jno
mull
push
stos
addb
scas
push
enter
imull
popa
push
aas
pushf
ljmp
das
inc
push
test
add
or
movsl
jecxz
dec
pop
push
push
ror
mov
popf
or
and
push
or
jo
mov
scas
xchg
nop
fisttpll
les
adc
push
and
cmp
fcmovne
inc
addr16
ficoml
mov
mov
lods
lock
ds
imul
rorl
cwtl
mov
xchg
xor
lahf
pop
cmpsl
pop
pop
lods
add
andb
mov
fnsave
pop
inc
std
cmp
add
dec
cs
mov
push
xor
dec
and
dec
aad
cli
xor
sbb
dec
flds
push
cmp
imul
pop
mov
es
inc
inc
pmullw
shrl
mov
nop
clc
sbb
jb
sbb
roll
pusha
push
and
jp
mov
ds
lahf
or
add
scas
dec
loop
mov
cmp
xchg
jb
xchg
cld
int
pop
jmp
iret
mov
cld
arpl
inc
jmp
movsb
js
add
add
clc
sbb
int
xor
jmp
mov
push
test
push
iret
shll
popa
idivb
jns
addr16
int3
je
sub
outsl
mov
push
lock
push
shlb
sbb
rcrb
idivb
jg
cmp
and
stos
pop
xchg
jmp
cmpsb
imul
cs
fcompl
pop
pushf
add
pop
adc
xchg
idiv
add
enter
test
add
inc
gs
test
pop
lods
sbb
push
stos
sub
push
pop
xor
aas
pop
stos
inc
sbbb
fwait
outsb
jg
ljmp
push
jo
and
add
xorl
loopne
or
and
scas
iret
inc
in
pop
xor
xorb
ret
mov
ljmp
mov
fsubs
ds
aad
shrl
inc
mov
sbb
jmp
adc
sbb
out
test
jb
fists
xchg
xchg
cmp
xor
pop
mov
or
cmpsb
cli
jmp
push
mov
movsl
lcall
test
dec
repz
mov
stc
pop
inc
dec
push
push
aad
rclb
movsb
jl
in
push
jecxz
les
inc
xor
and
and
lahf
pop
lahf
pop
xor
fdiv
jecxz
pushf
inc
add
jmp
leave
ret
inc
push
call
dec
aaa
leave
adc
loopne
fstps
mov
pushw
jo
sub
outsb
nop
repz
js,pn
xchg
sbb
xchg
mov
fprem1
scas
sar
pusha
inc
lods
in
mov
icebp
mov
add
mov
aas
push
dec
jecxz
fldpi
addb
sbb
mov
cltd
pop
add
xchg
push
cmp
jg
add
lcall
mov
out
out
loopne
lock
and
popf
push
sbb
jg
movsb
pop
dec
std
adc
test
lret
cmpsb
push
jno
rolb
enter
mov
lahf
cltd
add
rorb
sub
rcrl
dec
jl
stos
js
daa
mov
jbe
mov
sub
test
adc
std
cmp
inc
icebp
adc
int
xchg
loopne
xorl
lea
xor
dec
xchg
pop
mov
cmp
fsubrl
aaa
ljmp
loope
fcoms
jmp
cld
adc
inc
outsb
pop
jo
xlat
add
push
jle
jb
cmp
stc
mov
xchg
xor
pop
xor
and
dec
ret
outsl
mov
fdiv
outsb
sbb
sbb
push
clc
mov
mov
jecxz
xorl
mov
jmp
jno
inc
cmpsl
ret
dec
aaa
mov
mov
lock
cwtl
test
jo
sub
mov
sub
xchg
shl
xor
sbb
mov
aad
jne
pop
mov
cmp
add
xchg
and
xchg
das
sub
and
adc
mov
lods
scas
sub
cs
gs
and
cwtl
rcrl
xchg
test
dec
fwait
aas
sahf
je
sub
rorb
in
push
test
push
add
mov
add
je
pop
dec
stc
mov
pusha
pop
mov
dec
dec
stos
xor
ret
out
cltd
sub
mov
icebp
push
cmp
repnz
lcall
insl
sub
dec
lea
jge
push
inc
and
pop
fcmovne
lret
gs
int3
not
xchg
orb
sbb
and
and
fldl
test
mov
mov
stos
sbb
pop
cs
pop
jne
fs
aas
sbb
mov
mov
xlat
lea
js
jle
roll
jo
mov
mov
cmp
xchg
sbb
shl
and
mov
jb
jnp
sti
ja
out
cmpsl
add
loope
adcb
das
jecxz
fs
mov
imul
xchg
lahf
es
clc
xor
mov
in
or
call
pop
add
xchg
mov
test
bound
int
xchg
push
dec
add
sub
pop
mov
mov
add
cmpsb
pop
or
bound
mov
stos
movsl
push
or
dec
dec
push
or
ja
mov
out
outsl
sbb
xor
into
jge
shlb
mov
int
dec
push
cld
stos
aaa
mov
add
das
push
sub
mov
lahf
stos
add
sub
sbb
faddp
sbb
nop
cmp
pop
roll
jnp
outsl
sbb
jle
xorb
fs
push
and
xor
mov
ds
bound
fucomp
xor
daa
mov
push
ret
mov
nop
clc
xchg
cmp
inc
adc
sbb
xchg
js
fildll
ja
stos
push
popa
imul
stos
fisubs
ja
xchg
call
or
aam
sbb
add
mov
xor
stos
sti
pop
and
ljmp
mov
sti
es
popf
push
push
pusha
mov
loope
push
xchg
movq
add
mov
inc
dec
int3
lret
jmp
std
inc
iret
rcll
cmp
int
mov
stos
jns
dec
fwait
lods
xor
inc
stos
mov
sub
clc
ja
xor
int3
sbb
subl
pop
jnp
mov
xchg
sub
outsb
push
scas
dec
pop
mov
jno
push
push
xor
mov
xor
cmp
dec
dec
imul
cmp
mov
and
orl
pop
repnz
jne
mov
out
jle
repz
into
pop
jmp
icebp
jecxz
scas
xchg
cmpsl
mov
xlat
aaa
jae
mov
xorb
sub
xor
sbb
sahf
sbb
stc
ret
in
fwait
fwait
xchg
lods
test
mov
cmp
push
add
scas
sub
cmc
add
popa
popf
call
or
gs
add
xchg
cmpsb
int3
mov
leave
mov
or
cld
imull
pushf
repz
jne
mov
push
aaa
shll
sbb
divb
and
xchg
push
mov
cmp
cmp
inc
mov
clc
xchg
push
jne
push
out
pop
popa
xor
dec
rorl
cmp
mov
sub
fists
imul
imul
aad
push
imul
fs
lods
xor
push
clc
lret
in
or
cmpsl
jno
jae
push
add
les
pop
cld
pop
mov
cli
std
mov
fadds
jp
bound
or
je
push
cli
into
lret
push
or
out
xor
push
fs
jg
cld
push
push
popf
add
mov
pop
push
sar
dec
pop
mov
test
sti
inc
adc
imul
out
rcrl
mov
in
cwtl
mov
mov
psubusb
push
outsb
test
push
push
pop
testb
fildl
mov
push
xchg
adcb
inc
xchg
in
and
inc
add
sarb
fs
cli
adc
add
rorb
test
fisubs
sti
cmp
mov
movb
pusha
or
dec
and
lahf
pop
push
adc
push
sarb
cmp
lock
mov
cmc
loope
cmpsl
mov
bound
mov
jbe
cs
insl
ret
cltd
out
inc
xchg
sbb
mov
mov
mov
mov
call
mov
inc
mov
aam
adc
cmp
std
js
int3
mov
fidivrl
xchg
jle
sub
insb
or
lahf
arpl
xchg
mov
and
cli
jbe
add
inc
xchg
popa
in
scas
fsubs
icebp
inc
sarl
dec
stc
iret
jmp
adc
test
shll
les
mov
jno
xchg
mov
aad
pop
sub
sbbl
inc
cmp
jb
pop
xchg
ja
and
sub
insl
sub
loopne
cmp
mov
xor
sub
jecxz
cmp
cmp
mov
mov
das
cmpsl
fcomps
movsl
jge
out
jb
sub
sub
loope
test
imul
sarl
inc
pop
ret
sbb
mov
je,pn
fsubrs
mov
push
aaa
mov
push
or
fnsave
mov
divl
in
sti
mov
mov
movsl
mov
inc
movsl
pop
insb
push
jmp
enter
cmpsl
add
pop
data16
in
std
in
pushf
dec
mov
xchg
lcall
fwait
sub
mov
gs
jg
mov
push
and
xchg
and
cmpsb
cld
popa
jle
mov
ret
repnz
push
into
dec
add
js
xchg
add
inc
cmp
arpl
mov
into
test
and
data16
add
fwait
mov
je
sub
pop
imul
sub
mov
mov
mov
push
xchg
arpl
in
stos
inc
repnz
xorl
nop
js
jle
je
and
loope
dec
int3
out
pop
data16
jl
int
xchg
jnp
test
outsl
mov
sbb
dec
movsb
lahf
insl
sbb
xor
lea
dec
or
fadds
movsb
dec
mov
std
jnp
cli
mov
das
addr16
push
ror
and
push
push
cmpb
mov
test
adc
out
icebp
mov
inc
mov
pop
aam
xor
lahf
or
sub
cs
sub
dec
fdecstp
sbb
mov
rcrb
adcb
xor
dec
xchg
iret
shl
into
and
jge
test
jb
ds
push
fistl
fisubrl
mov
popl
xor
cmp
notw
jne
xor
in
test
clc
leave
inc
outsb
jb
cwtl
addl
stos
sbb
out
stos
int
int
fwait
call
and
xchg
ret
repz
fsubrl
leave
cld
cmpsl
xchg
push
mov
into
mov
inc
test
add
shlb
add
scas
pushf
mov
les
enter
sub
das
or
mov
ss
movsl
sub
mov
xor
adc
push
sbb
jg
jnp
rorb
push
push
add
icebp
jl
mov
cmp
pop
pop
mov
push
mov
sti
aad
les
add
push
jo
pushf
sbbl
add
out
lret
xchg
fiaddl
xor
push
push
stos
mov
push
outsb
std
mov
fnstenv
fisttpl
jno
fldl
daa
ja
or
push
cmp
rcrb
mov
mov
iret
add
cltd
popf
iret
xchg
push
pop
xchg
jle
or
add
imull
repnz
pop
mov
mov
ret
mov
ret
lret
ljmp
inc
loopne
adc
mov
pop
sbb
xor
push
fs
jnp
fs
push
rcrl
jecxz
mov
push
ja
add
in
push
outsl
mov
xchg
sbb
jecxz
addr16
mov
adcb
mov
adc
inc
sti
pop
add
les
pushf
jb
call
jmp
aaa
jnp
lcall
imul
cmp
jae
jnp
mov
inc
outsb
inc
fldl
test
push
pusha
mov
pop
subl
repz
push
lret
dec
dec
dec
and
mov
stc
outsb
shr
js
mov
mov
popf
andl
cmp
ljmp
xlat
lods
or
pop
inc
test
jle
mov
pop
andl
mov
pop
push
out
loope
mov
or
test
cld
aaa
sbb
insb
shll
or
iret
rcrl
or
loop
shrd
mov
sbb
mov
push
scas
andl
adc
divb
faddl
push
stos
and
lahf
inc
push
xchg
das
test
dec
push
dec
xchg
movsl
in
jl
call
data16
push
cmp
lret
xchg
add
pop
test
rcrb
pop
outsl
cmp
mull
stos
iret
lahf
into
popf
movsb
cmp
out
lea
in
arpl
cli
xchg
xlat
mov
or
fchs
xchg
pop
shll
cmpsl
sbb
notl
sahf
push
sti
sahf
incl
jl
gs
in
xlat
mov
shr
dec
xchg
push
mov
inc
dec
dec
lock
mov
jmp
dec
add
in
jg
add
push
out
cmp
imul
sbb
or
mov
xchg
pushf
and
xchg
dec
rcrb
or
pop
cs
mov
lods
rol
sbb
sti
and
nop
push
xchg
out
dec
cmp
pusha
mov
div
xchg
push
enter
xor
sbb
push
test
into
cmpsb
sbb
pop
inc
test
pusha
addr16
mov
frndint
adc
cmpsl
sbb
add
subl
mov
popa
out
pop
loopne
rcrb
movsl
and
fcomp
xor
scas
jae
pushf
sub
call
cmp
sub
fwait
gs
imul
add
ja
adc
add
or
xor
pop
lahf
xor
cwtl
mov
out
cld
pop
cmc
pop
movsb
int
jb
inc
mov
das
inc
inc
out
je
pop
xchg
insb
mov
mov
es
sbb
outsl
mov
or
fstl
fisttpll
push
lods
jmp
push
hlt
enter
and
leave
fildll
cmpsl
stos
ss
fdivrl
ret
cmp
cld
test
mov
rclb
fmulp
lahf
stc
popa
xchg
mov
jae
sub
in
arpl
js
pusha
in
adc
fisubl
mov
xor
dec
cmc
mov
loopne
adc
imul
xor
fstpt
pop
inc
std
sub
stc
mov
push
out
popa
sbb
push
lods
cmpxchg
inc
hlt
and
xlat
insl
and
outsb
sbb
xor
xchg
cmp
insb
icebp
xor
push
sub
cwtl
cli
dec
arpl
sub
test
dec
jl
stos
std
cmp
ja
and
pop
push
xchg
cmp
jns
fsubl
mov
jo
fdivl
push
outsb
mov
adc
dec
push
xchg
shr
fistpll
repz
in
xchg
pop
mov
cmp
jns
mov
shrb
cli
push
into
xchg
inc
mov
mov
hlt
mov
ret
xchg
shrl
add
outsb
fisubs
pop
adc
mov
xor
mov
je
pop
lods
pop
add
jno
mov
sbb
movsl
inc
add
add
and
dec
das
test
xor
or
sub
in
cmpb
pop
sub
sarb
notb
lret
mov
lock
add
setge
dec
fwait
jl
in
pop
xor
add
push
inc
sub
leave
mov
stos
imul
lahf
mov
repnz
gs
loop
mov
inc
mov
or
xchg
jl
or
pop
lret
mov
adc
and
fldl
aad
ljmp
cmpsb
dec
jno
popf
dec
js
pop
popa
add
fld
mov
jno
xchg
sub
dec
and
mov
xchg
xchg
add
rol
lret
xchg
xor
mov
scas
jmp
aam
jge,pn
fisubrs
sub
push
ret
xchg
lods
in
lahf
inc
dec
mov
push
fs
cmp
jnp
jp
cld
push
xor
aam
xor
xor
jne
xor
jecxz
lcall
xchg
fldt
jl
in
fldl
dec
sub
insl
cmp
outsb
sub
lret
mov
shrl
xchg
xchg
or
das
jnp
lods
or
push
xchg
loop
imul
ja
out
mov
mov
mov
cmp
cmpsb
mov
ljmp
popa
xor
xorb
daa
mov
xlat
sub
dec
xchg
xchg
mov
jo
cmpsl
outsb
dec
icebp
int
js
fnsave
xor
and
sti
test
out
and
fisubl
int
inc
mov
mov
icebp
mov
cmpsb
or
jmp
mov
dec
fcomps
movsl
ss
sub
mov
aaa
rclb
ljmp
fsubrl
or
sti
pop
mov
test
test
push
or
mov
sbb
int
enter
mov
pop
aam
and
hlt
jle
in
sub
pusha
and
cli
cmp
jns
jecxz
ret
jnp
xchg
dec
pop
xchg
mov
sti
and
scas
cmpl
push
cli
sbbb
jecxz
popf
out
xchg
call
sarl
xor
mov
or
leave
bound
mov
js
jmp
dec
movsl
lret
cmp
sahf
test
sub
clc
sti
test
imul
push
popf
or
cmp
imul
mov
pcmpgtw
mov
inc
lret
dec
scas
jns
popl
or
sub
cmp
push
cwtl
mov
lcall
jp
stc
lea
dec
test
bound
or
jae
gs
ss
js
sbb
push
scas
sbb
adc
nop
sbb
enter
dec
sub
cmpsl
push
test
mov
cmp
sub
test
xchg
fimuls
hlt
in
cmp
xchg
ja
jle
jo
xchg
dec
lahf
mov
loopne
mov
mov
das
adc
cwtl
je
xchg
aaa
dec
xor
push
fmull
pushf
jg
adc
or
xchg
or
jge
insb
rorb
mov
or
xchg
dec
mov
leave
repz
das
pop
scas
sahf
sub
push
rcl
jae
sbb
cld
dec
int
pop
movsl
popa
sbb
vcvtdq2pd
jg
jecxz
pushf
jl
daa
es
inc
mov
ret
mov
cmpsb
push
push
sahf
mov
or
mov
jbe
mov
mov
sbb
loopne
cmpsb
ds
shll
and
sub
xlat
sub
lea
adc
loop
push
divl
movsl
int3
cld
sub
out
xchg
jnp
add
aad
sub
ljmp
iret
fnsetpm(287
leave
or
int3
addr16
stc
sub
and
into
sahf
push
lods
test
fildll
ljmp
lahf
hlt
mov
ljmp
in
mov
lds
xor
inc
popl
inc
enter
sub
adc
cmovl
mov
lcall
repz
jns
fstpl
dec
mov
add
push
mov
jno
mov
fisubl
or
mov
sti
call
dec
dec
or
xchg
das
jb
jb
fisttps
rcll
push
std
adc
or
call
imul
outsl
mov
cmc
xchg
mov
push
inc
fwait
sbb
popa
repnz
cli
push
mov
xor
add
aad
roll
jg
add
inc
jl
ret
aas
inc
lods
push
mov
scas
fnsave
inc
fildl
mov
int
adc
jns
push
movsb
insb
insb
and
sbb
ret
stos
in
mov
sbb
cmp
xchg
mov
or
adc
iret
mov
popf
popa
cmp
sub
int
push
mov
inc
mov
sbb
xor
int
pop
mov
push
and
xor
in
repnz
inc
in
inc
ds
xor
fucomp
and
cmp
sub
jl
leave
add
test
pop
ja
lds
lods
add
dec
es
mov
lods
ljmp
call
sbb
cmp
mov
repz
mov
mov
xor
rclb
in
jmp
pop
xchg
insb
imul
xchg
add
push
bound
and
out
mov
pop
pop
add
insb
push
cli
cmc
imul
jnp
ljmp
rorb
inc
sarb
pop
negl
out
mov
faddp
xchg
add
sbb
pop
pop
mov
xchg
sub
mov
shr
adc
push
cmp
pop
pop
inc
mov
outsb
sbb
inc
mov
or
sbb
cmp
cmp
mov
lds
push
negb
aaa
mov
insl
loopne
lcall
dec
popf
lcall
xchg
sbb
sbb
sub
or
mov
sarb
adc
sub
shrl
out
es
nop
pop
mov
cmpsb
iret
push
xchg
pop
dec
cltd
movsb
shrl
cmc
and
mov
arpl
push
xchg
pop
in
push
icebp
repz
out
mov
repnz
popf
test
add
xor
mov
xchg
sbb
dec
dec
adc
push
mov
iret
push
adc
jo
repnz
dec
cmp
cmp
psrlq
xchg
lret
dec
xor
nop
xor
pop
outsl
jo
stos
mov
cli
ss
outsb
mov
fbld
pop
sub
fdivrs
xchg
push
mov
mov
push
inc
nop
iret
into
popf
sub
mov
or
cmp
bound
sub
mov
dec
mov
jmp
mov
and
scas
push
icebp
gs
scas
mov
ljmp
iret
mov
inc
sbb
xchg
inc
and
or
sub
mov
daa
fcomps
xchg
inc
rcrb
ror
jcxz
lret
lock
push
lret
into
xchg
loop
push
lcall
call
cmp
or
in
negl
fisubrl
cmc
pop
push
mov
cmp
and
and
cmp
clc
mov
outsb
js
or
mov
sbb
adc
mov
lahf
pushf
cmc
xchg
lcall
push
jmp
mov
xchg
mov
sub
loop
xchg
fsin
sahf
popa
loop
add
and
lock
hlt
inc
xlat
sub
pop
pop
add
xchg
push
add
fwait
pop
add
mov
insb
and
inc
mov
jp
sub
mov
fisttpl
jb
loope
jo
and
xchg
scas
jae
or
mov
xchg
mov
daa
push
aas
pop
pop
mov
shll
add
push
sbb
gs
test
adc
cld
fs
cmpsl
imul
or
mov
incb
fisttpll
pop
cmpsb
inc
test
ja
or
jo
shrb
pop
popa
add
insl
cmc
cwtl
sub
dec
pushf
cli
mov
mov
ss
sbb
dec
daa
pop
aaa
int
cltd
jne
out
sub
push
leave
mov
nop
cs
rcrb
fisttps
pop
jmp
jle
sub
rorl
fstpl
xchg
and
stos
xor
add
push
dec
adc
cld
pusha
mull
insl
xchg
push
add
mov
add
add
rcll
movsl
pushf
cmp
lret
mov
subl
mov
xchg
cvtps2pi
in
push
jge
sbb
in
jmp
iret
jmp
xchg
add
repnz
mov
int3
push
imul
mov
repnz
sbb
ds
adc
imul
inc
test
sti
lds
and
notb
rcl
stc
or
cmp
ss
mov
sbb
cmp
into
mov
stos
ds
pusha
sbb
test
int
loop
and
dec
sub
jno
sbb
add
hlt
dec
mov
mov
out
int
or
ret
push
fisubrl
or
inc
lret
daa
imul
repz
insb
mov
dec
jae
fs
nop
ret
ja
daa
jge
add
adc
call
ljmp
pop
cmp
add
sbb
jle
push
shrb
pushf
xchg
mov
xlat
xorb
inc
xor
jns
pop
dec
push
rcll
lcall
and
mov
jnp
sub
pop
incl
std
and
adc
cmp
add
bound
add
movd
inc
fisubs
pop
push
mov
lds
sub
push
ds
pusha
jle
dec
out
add
jae
sbb
pop
add
push
pop
push
jecxz
sbb
imul
das
cmpsb
rolb
and
ret
lret
das
cmp
inc
add
jecxz
sahf
push
scas
inc
arpl
mov
daa
adc
and
cmp
push
test
push
stc
inc
insb
push
sarb
dec
cld
hlt
out
arpl
mov
es
adc
push
lods
fbld
dec
dec
mov
or
call
sbb
shlb
aaa
sub
pop
pop
and
pop
clc
inc
xor
push
repz
cmp
movsb
cs
test
es
in
dec
js
cmp
sub
sahf
mov
rcll
mov
dec
dec
cmp
pop
fs
pop
pusha
pop
in
dec
fcompl
andl
subb
push
cmp
adc
jnp
repnz
ret
add
jns
dec
es
out
dec
inc
enter
pop
nop
pop
insl
std
mov
jne
out
insb
xchg
cwtl
or
sub
sub
sub
sub
jbe
dec
mov
shrl
and
and
ficoms
ljmp
mov
and
lret
adc
je
dec
pop
sbb
popa
mov
fucom
mov
push
jecxz
movsb
xorb
mov
dec
fs
das
pop
rorb
mov
loope
dec
lret
sub
or
pop
scas
inc
pop
jmp
push
rorl
in
pop
mov
scas
pop
push
lret
and
mov
xchg
sbb
push
jb
aam
fimull
stc
ljmp
cmp
ret
movsb
ret
inc
xor
sar
lahf
push
pop
push
or
movsl
lods
xlat
mov
ljmp
ljmp
push
stos
ja
xchg
dec
ljmp
fidivrl
jmp
jnp
add
push
andl
push
pop
or
pop
sub
je
cmp
xchg
mov
dec
cmc
sbb
or
inc
sti
inc
xor
or
sbb
pop
adc
sub
testl
imul
fistps
mov
add
or
jl
leave
mov
out
mov
out
popl
scas
out
add
sbb
or
call
into
jl
stos
repz
push
insl
push
outsb
dec
lret
xor
dec
mov
scas
sub
adc
add
in
mov
jno
sbb
jecxz
jle
mov
dec
push
repz
mov
pop
inc
fisubrl
jne
shrl
loopne
aas
adc
push
aam
xor
in
in
push
icebp
scas
dec
outsb
sarb
inc
out
cli
jmp
mov
adc
int3
inc
add
pop
mov
pop
mov
ret
mov
xchg
pop
jmp
dec
jle
popf
sbbl
push
add
pop
das
xchg
scas
xchg
xor
enter
sahf
and
sub
test
sahf
xchg
movsb
jnp
and
loope
sbb
mov
push
xchg
adc
aas
mov
mov
mov
xorb
pop
dec
xor
repz
adc
aaa
xchg
bound
arpl
fisubrs
jnp
xor
loop
das
pushf
jnp
sub
cmc
int3
mov
and
dec
stos
icebp
cld
cltd
xchg
fs
xor
pop
add
pop
into
sbb
aam
ljmp
mov
inc
outsb
sysexit
or
sbb
insl
xor
call
pop
lods
ret
mov
jl
mov
repnz
cwtl
and
flds
ljmp
and
inc
cli
pop
inc
repz
lahf
daa
fisttps
jl
sub
lcall
in
lret
out
or
inc
and
stos
mov
sub
xchg
je
cmpsb
sbb
push
jb
dec
and
cmp
cmp
sar
cmp
mov
sahf
enter
negl
push
dec
imul
imul
pop
mov
xlat
int
hlt
add
mov
xchg
or
out
jp
popa
inc
movsb
stc
lret
jnp
jmp
push
and
jmp
push
cmpsb
push
cmp
jmp
cmpb
shl
pop
dec
mov
call
and
jle
or
aas
fisubrs
daa
fs
cwtl
jge
push
mov
sbb
ficomps
dec
mov
push
repz
mov
addr16
lret
fidivrs
push
bound
daa
imul
mov
cli
sbb
dec
ja
repz
mov
push
sbb
popa
adc
xchg
xor
test
mov
data16
shll
and
push
leave
dec
mov
xor
inc
out
mov
push
nop
add
push
sti
mov
fwait
sbb
xor
adc
jnp
mov
add
aad
sub
out
xchg
or
fucomp
stos
sub
jnp
into
mov
mov
cltd
sub
xor
mov
xor
push
push
std
dec
push
adc
addr16
addb
outsb
fs
fstpt
inc
cmp
mov
aaa
xchg
xchg
pusha
rcrb
fs
xchg
pop
adc
pop
andl
push
adc
mov
or
ret
lds
push
and
mov
cmpsl
mov
aaa
aas
into
pop
in
dec
iret
mov
mov
sub
xor
xchg
or
sub
fldt
scas
push
and
call
stos
mov
pop
lds
pop
pop
nop
das
xor
inc
das
out
aad
loop
xchg
inc
and
adc
push
shll
insb
push
adc
rcl
push
mov
jns
cltd
shl
rep
xor
negl
add
ret
cmp
pop
jb
xchg
xchg
sbb
mov
fld
mov
sbb
xor
cmc
pop
push
jg
outsl
cmc
xchg
je
aas
jge
xchg
sbb
neg
pop
sbb
inc
out
add
cwtl
or
jmp
dec
mov
je
dec
jb
xchg
pop
mov
lock
jae
mov
jecxz
jns
repnz
popa
xor
dec
adc
popf
push
push
lods
shr
inc
xchg
push
scas
xchg
imul
decb
fs
nop
lahf
xor
es
jno
test
pushf
adc
mov
jge
jb
jne
mov
fldcw
popf
jnp
movsb
out
or
lret
popa
lret
push
je
js
jmp
adc
push
mov
mov
xlat
popf
flds
lock
ret
mov
lret
jl
test
sysenter
mov
pusha
lods
rep
daa
ds
mov
adc
andb
int3
xor
inc
mov
pop
mov
sbb
mov
stc
xchg
mov
dec
lret
dec
jno
rdtsc
pusha
add
xchg
dec
adc
sub
pop
jl
mov
popa
lret
out
and
cmp
notb
inc
dec
mov
jl
adc
adc
mov
adc
insb
jmp
sub
in
cmp
mov
cwtl
aam
xchg
lods
dec
inc
sub
xchg
mov
ret
cs
lea
ss
out
lds
mov
insl
sbb
cmp
in
orb
fwait
inc
or
xchg
in
lcall
xchg
mov
popf
lret
xchg
mov
push
adc
sbb
lea
cli
cmp
je
push
shrl
push
lret
push
lcall
cmp
push
mov
ds
and
jecxz
jg
mov
sbbb
or
sub
jge
mov
sbb
cmp
pop
jl
or
jp
scas
scas
lods
sub
jge
jmp
adc
xchg
mov
int3
mov
sbb
gs
sbb
repnz
std
add
mov
sub
insb
rolb
movsl
cmp
sbb
shlb
inc
rolb
push
xor
movsb
ljmp
mov
xor
xchg
mov
sbb
mov
pop
jge
aas
dec
sbb
stos
fucomip
mov
mov
xchg
mov
fidivs
fidivl
daa
or
out
ljmp
mov
repnz
pop
popl
test
mov
scas
push
iret
je
aaa
push
shrb
inc
jns
ja
call
setg
cmp
js
xor
leave
jne
cmc
packsswb
inc
mov
or
imul
and
inc
dec
shll
icebp
mov
inc
sub
push
addr16
divb
iret
and
jl
cmp
int3
pusha
jbe
addr16
push
sbb
adc
pminsw
push
inc
mov
sbb
add
fwait
push
popf
aaa
sarl
sbb
xor
add
lock
cwtl
dec
fisubl
mov
xor
dec
subb
mov
adc
xchg
mov
xchg
dec
adc
or
xchg
jbe
cli
and
dec
repnz
adc
ret
jb
pop
mov
call
fwait
mov
dec
loopne
or
jmp
pusha
cmpsl
push
xor
push
clc
pusha
jl
lret
push
cmp
lcall
mov
nop
fnstcw
mov
andl
shrb
out
aam
mov
imul
push
outsl
sbbb
nop
aam
sysexit
test
pop
mov
shrl
shl
cmpb
movsb
dec
nop
mov
adc
in
sbb
mov
mov
jno
jle
xor
adc
sbbb
xor
jb
and
stc
mov
or
mov
jb
sub
sub
mov
xor
mov
push
xor
or
add
xor
jmp
and
out
or
out
fstl
cmp
mov
andl
jmp
cli
and
aas
lods
mov
mov
fsubrs
leave
jp
lret
shrb
idivb
insl
or
pop
cld
add
mov
xor
test
sbb
sar
mov
sbb
pop
pop
enter
adc
sbb
sbb
int
mov
pop
adc
in
adcl
adc
cwtl
mov
jle
cmp
sub
gs
jmp
in
push
pop
xlat
cwtl
pusha
and
je
inc
adc
adc
cmpsl
add
sti
cmp
jg
inc
out
subl
pop
cmp
and
mov
out
and
in
jns
cli
add
push
insl
xor
xchg
imul
push
hlt
add
push
cmp
mov
xor
enter
test
adc
stos
mov
mov
out
mov
xor
push
inc
push
mov
xchg
xor
mov
les
subl
inc
cmpsl
xchg
in
and
cltd
or
lret
jb
movsb
inc
pushl
mov
mov
popa
push
and
movsl
mov
pop
mov
es
jecxz
mov
sub
lock
add
inc
xchg
int
pop
pop
mov
das
adcb
xlat
jns
xchg
shll
mov
push
imul
or
inc
inc
dec
add
and
cmp
pop
lea
push
add
fistl
data16
fidivrl
aad
into
stc
loop
adc
in
cmp
mov
mov
mov
dec
ss
ficompl
dec
xor
cmp
dec
xlat
scas
xchg
jecxz
push
mov
add
lahf
jle
daa
insl
sub
ljmp
pop
xchg
jle
adc
mov
xchg
jns
dec
and
rcrb
stos
pop
shll
sbb
lret
push
mov
and
idivl
xchg
pop
mov
divb
mov
mov
or
sub
stc
and
xor
pop
mov
dec
mov
sahf
fldcw
adc
loope
loopne
and
arpl
in
lret
aad
movsb
and
mov
into
jge
cmpsb
sarb
jo
stos
int
mov
jg
inc
adc
add
mov
sbb
cmp
inc
outsl
hlt
jle
add
lret
aam
bound
gs
mov
aaa
out
repnz
push
ss
std
sarb
cmpsb
and
and
or
jne
sub
xchg
test
push
xchg
jg
lahf
push
and
jbe
or
xchg
ror
stos
cmp
test
mov
popa
int3
xor
out
lcall
adc
jmp
push
lods
adc
insb
rcrl
push
adc
add
shll
notl
sbb
xor
ucomiss
js
test
adc
pop
inc
mov
lahf
mov
pushf
es
arpl
addl
sbb
push
sub
push
icebp
fsubs
fdivrs
bound
cmc
pop
or
push
out
push
or
fsubrl
mov
cmp
cmp
lds
scas
cmpsb
mov
jo
lock
test
pop
and
mov
lods
inc
cli
ret
iret
loope
stc
loop
mov
mov
and
ret
gs
fldt
sahf
mov
fildll
push
imul
sub
imul
subb
mov
add
jbe,pn
jne
mov
xsaveopt
icebp
test
cmc
dec
fbstp
jnp
adc
dec
stos
insb
push
in
pop
pop
and
push
jg
jmp
cmp
lret
enter
jg
mov
stc
cs
push
mov
orb
pop
push
stos
push
mov
cmpsl
cmp
xor
xor
adc
loope
cwtl
push
mov
pop
les
pusha
mov
pop
cld
mov
sub
stc
and
jae
dec
pop
xlat
jmp
or
pop
inc
push
sub
inc
add
shlb
imul
enter
push
nop
dec
jge
repz
fs
or
xlat
xchg
bound
mov
or
dec
movsl
pop
in
sub
cmp
add
dec
fwait
pop
adc
adc
sub
ret
xor
in
adc
dec
dec
xchg
test
xor
inc
sub
movsb
lcall
xlat
rolb
sub
dec
lret
pop
cmp
dec
mov
rcll
stos
lcall
inc
sahf
mov
adc
jmp
cmp
mov
jle
das
ljmp
inc
mov
sahf
cmp
jle
ds
jb
and
mov
cmc
mov
ret
xor
mov
dec
lret
xor
repz
popa
int3
ja
dec
mov
jnp
xor
jnp
scas
leave
add
xchg
mov
or
arpl
hlt
iret
shrb
rcll
mov
in
rorb
and
clc
xchg
add
push
sti
sbb
jb
jae
mov
jmp
cmp
add
cmp
jmp
aaa
stos
jle
xor
out
rcr
mov
dec
lock
mov
cmpps
lock
sub
cmpb
pop
push
mov
daa
scas
in
mov
std
movsb
mov
pop
negl
push
sub
movsl
dec
fisubrl
xchg
xor
js
rorl
out
out
cli
xchg
or
push
pop
aas
ds
sub
lods
ret
loop
inc
or
pop
adc
shrl
clc
xchg
das
mov
outsb
mov
lret
aam
push
dec
sti
add
sbb
push
ljmp
shrl
mov
stos
mov
lods
movsb
add
xchg
or
sub
hlt
insl
lea
and
sti
out
and
xchg
lahf
mov
adc
xor
xchg
sub
push
xchg
loopne
popf
lret
mov
adc
lea
fs
imul
insl
stos
lret
ljmp
pop
sbb
sbb
lea
loop
and
cs
mov
stc
push
dec
js
jge
out
pusha
inc
sahf
icebp
test
pushf
mov
jne
loop
or
cld
and
add
ss
data16
insb
stc
dec
push
and
idivl
test
sbb
pop
out
push
pop
sub
add
adc
pop
pop
cmp
inc
mov
jno
repz
dec
dec
jp
push
mov
xchg
and
insb
mov
jb
sub
popf
icebp
and
fisubl
stc
loopne
test
jecxz
xor
movb
mov
and
push
lea
in
les
inc
pusha
or
dec
ja
or
adc
scas
outsl
movsb
pusha
stos
fwait
pusha
sbb
stc
dec
fwait
inc
push
pop
icebp
nop
dec
add
mov
out
adc
ljmp
popa
fists
icebp
sti
inc
rcl
pop
xor
mov
mov
push
or
dec
sub
or
movl
movsl
stos
fdiv
mov
pusha
clc
or
adc
lahf
mov
shll
shll
mov
and
inc
in
shlb
xlat
jmp
push
xor
imul
fs
add
jle
addb
jbe
xor
fdivrl
cmp
loopne
dec
sti
adc
out
sbb
call
cmpsb
int
dec
fldcw
cs
pop
lcall
inc
fnstenv
or
sub
pop
add
xchg
cmp
fildl
push
add
out
in
push
pusha
adc
movsb
add
decb
repnz
xor
adc
outsl
xlat
or
in
mov
mov
pop
sub
mov
mov
loopne
insb
mov
mov
add
push
hlt
jo
popa
sahf
js
insl
daa
cmp
enter
mov
les
imul
jmp
ds
in
add
in
fistl
repz
cld
push
jne
stos
adc
into
jmp
orb
add
jbe
int
adc
jns
or
pop
cs
lods
leave
sbb
push
out
into
and
push
and
stc
mov
imul
pop
cmp
aaa
pop
test
mov
scas
cld
jmp
mov
mov
adc
std
adc
popf
dec
cmp
mov
pop
imul
dec
lcall
jno
mov
push
addl
pop
cmp
pushf
inc
movsb
add
das
jno
imul
fidivrs
cltd
adc
cmpsb
add
push
repnz
mov
popa
out
dec
xchg
or
loope
xor
rcl
mov
jno
xor
lea
inc
adc
add
or
xchg
mov
jge
imul
push
mov
pushf
icebp
xchg
mov
stc
mov
mov
nop
shl
and
rcrb
push
xchg
in
lods
cld
jge
sub
das
fdivp
pop
add
mov
sub
sbb
mov
jo
pop
stos
or
popf
adc
jmp
add
add
push
bound
ja
lcall
add
mov
pop
mov
push
adc
add
sub
sbb
adc
scas
adc
sbb
stos
xor
push
add
in
sbb
idiv
jb
dec
es
dec
mov
jg
inc
dec
aas
add
loopne
push
hlt
loope
inc
cmp
sbb
lock
icebp
ljmp
enter
clc
ljmp
std
sub
fwait
popf
sbb
and
jg
mov
out
iret
in
jae
jne
movsl
andl
cld
add
sub
mov
cmp
dec
jp
outsl
and
pop
ss
cld
orb
jnp
fisubl
jb
dec
mov
es
adc
xchg
cmp
test
mov
sbb
call
mov
ljmp
dec
jmp
movsb
rcll
mov
and
adcb
sbb
das
fnsave
scas
into
jle
in
mov
jns
push
push
cwtl
pop
pop
lret
ljmp
or
shl
andb
push
inc
and
xor
ss
cli
mov
in
add
ss
and
add
jne
outsb
lret
cmp
arpl
push
xchg
or
sbb
add
sbb
jnp
mov
inc
jge
push
sub
aad
and
addr16
repnz
push
lods
mov
mov
sar
sbb
stc
jg
cmp
or
pushf
in
cmp
cmpsl
scas
pop
dec
mov
mov
js
dec
sub
cld
std
in
cmp
pop
popf
mov
or
stc
popa
data16
ret
and
pop
imul
lods
mov
scas
inc
inc
adc
cmp
sbb
mov
pop
pop
and
inc
add
mov
xor
xor
and
xchg
imul
add
ljmp
xorl
add
in
adc
lahf
in
rcr
pop
adc
jg
ficompl
pop
aam
jg
xchg
les
fadds
popf
movsl
fimull
mov
sar
fwait
cmpsb
jg
aaa
mov
imul
mov
outsb
inc
adc
push
push
leave
cwtl
repz
insb
mov
bound
sub
scas
roll
cmpb
pushf
mov
adc
push
call
sti
movsb
mov
mov
int
shll
inc
test
mov
imul
xchg
in
lea
rcll
scas
push
xchg
sub
or
xchg
pop
add
lahf
mov
jnp
in
lods
xchg
add
mov
mov
mov
mov
pop
xorl
ret
fadds
sub
icebp
xor
dec
lods
stos
scas
inc
lods
adc
xchg
jns
sbb
xor
or
mov
mov
les
sbb
out
aaa
jae
dec
repz
pop
mov
jg
lcall
pop
push
mov
cmp
add
push
in
shr
filds
hlt
inc
stos
mov
xchg
out
jg
call
inc
in
mov
xchg
cmp
aad
push
outsb
mov
jmp
imul
push
or
into
push
dec
pop
add
js
jno
jno
pop
jo
push
push
int
lcall
subb
mov
fbstp
adcl
cli
call
xor
sbb
fsubrs
mov
mov
js
sbb
rolb
js
aas
adc
movsb
cmpsl
sarb
push
pminsw
or
out
leave
es
pop
arpl
dec
inc
adc
clc
repnz
xchg
pop
les
push
and
push
hlt
or
je
mov
shl
mov
jecxz
push
ficoml
xchg
mov
mov
loope
or
and
ljmp
mov
and
int
nop
jg
adc
pushf
add
out
aas
add
js
add
hlt
push
or
test
push
outsb
or
or
inc
sahf
outsb
dec
push
dec
xor
push
lea
and
pop
outsb
int
popa
or
inc
dec
cli
push
adc
test
sbb
add
mov
sbb
mov
adc
add
dec
xor
leave
outsl
xchg
popf
pop
and
fcmovnbe
scas
cld
aam
mov
mov
xor
icebp
xchg
xchg
jg
mov
and
clc
call
mov
sbb
es
add
lahf
stc
pop
mov
sub
lods
inc
cltd
push
cwtl
test
bnd
dec
mov
cmp
ljmp
dec
or
cmp
sarb
test
shlb
decl
jp
lods
and
jmp
mov
ja
or
jae
sub
popf
sbb
cmp
mov
add
popa
pop
push
in
sub
and
add
cmp
mov
scas
jae
ja
dec
xor
cld
sarb
lret
xorb
out
rolb
aam
or
adcb
mov
pop
sbb
adc
sbb
mov
jecxz
add
cmp
negb
xor
mov
xchg
mov
add
add
test
nop
mov
sti
xchg
jnp
sub
xchg
sbb
aas
je
clc
jp
dec
mov
xor
mov
movsl
stos
divl
mov
or
nop
lods
push
aaa
jo
jmp
lret
hlt
inc
ss
inc
jne
pushf
xchg
cmp
scas
sub
fidivrs
inc
mov
pop
xorb
mov
adcl
ret
push
in
adc
insb
pop
and
movsb
or
fcompl
sub
push
fistpl
jnp
inc
dec
push
mov
lds
imul
mov
mov
jno
ss
outsb
jmp
clc
lods
jno
lret
jnp
mov
xor
mov
or
sti
push
aam
gs
pop
add
cmp
push
movsb
add
arpl
ss
fs
shlb
inc
ljmp
mov
lret
and
sbb
sbb
push
cs
loope
xor
lds
inc
ss
lret
push
outsb
xchg
xor
mov
cmp
int
jl
cmp
cmpsl
test
sarl
mov
mov
and
ljmp
dec
mov
sub
jno
dec
orl
aaa
sbb
push
sbbl
movsl
add
dec
jp
or
xor
mov
xchg
fsubr
pusha
fmull
mov
push
jb
cmp
jno
dec
imul
repnz
je
or
test
mov
sbb
mov
icebp
cmp
jmp
inc
and
push
lret
vshufps
cmp
sub
pop
pop
shr
pop
stos
loopw
xchg
pushf
fstpt
cmp
or
test
mov
cmp
dec
jecxz
lret
push
in
in
sar
xchg
sbb
lcall
scas
jo
dec
cmpsb
dec
lods
outsb
xor
in
loop
nop
ljmp
mov
fdiv
mov
sub
das
div
dec
in
gs
sub
mov
call
xchg
mov
sub
test
xchg
mov
sti
es
dec
leavew
call
jae
ret
sub
sub
aas
pop
dec
cmp
repz
mov
andl
sub
mov
sbb
inc
imul
fistpll
and
clc
das
fwait
sbb
adc
stc
push
adc
or
sub
gs
xchg
xchg
mov
sub
adc
mov
lock
pop
add
cmp
jge
mov
mov
jns
add
cmp
mov
xchg
xor
cmp
test
orl
outsl
insl
xor
and
out
xchg
sbb
sub
js
ljmp
xchg
icebp
jns
and
fcmovnbe
jbe
mov
mov
and
lret
bound
rclb
push
mov
xlat
jp
addl
fildll
loopne
fnsave
js
mov
and
out
and
in
repz
test
ror
and
out
icebp
xchg
int3
ds
cwtl
add
push
movl
mov
loope
ret
insl
insb
inc
xchg
sbb
test
cld
inc
push
enter
and
and
repz
out
into
rcrl
mov
inc
add
icebp
adc
pusha
xor
flds
jg
and
lret
in
dec
cltd
push
pop
lods
stos
mov
or
mov
mov
ja
xchg
jg
jno
cmpsb
sub
xor
pop
fdivrp
mov
cmc
out
jecxz
pop
icebp
dec
sub
mov
cmp
dec
push
out
test
stos
scas
mov
rorb
adc
mov
ret
xorb
lds
sbb
push
icebp
jno
dec
sarb
aam
bound
and
fcmovnbe
mov
push
lahf
imul
popa
xor
stc
jb
je
pop
mov
aad
stos
es
jae
jg
push
out
mov
loopne
fidivl
inc
jno
mov
jae
imul
fcompl
xor
cmp
loop
dec
int
jb
lret
and
dec
in
dec
jno
pop
add
xor
push
test
sti
insb
test
shrb
dec
imul
push
dec
xchg
xor
inc
subb
call
imull
cmpsl
xchg
scas
mov
std
addr16
int3
mov
popf
add
pop
scas
jno
pop
bound
mov
stos
mov
jne
xchg
dec
ljmp
imul
cmp
addr16
dec
out
jge
rorb
mov
out
xor
aam
jo,pn
rep
int3
cld
adc
lret
int3
lods
pushf
sbb
push
outsl
cmc
push
push
or
decl
add
leave
mov
jl
or
xchg
mov
push
mov
ljmp
pusha
das
stos
inc
xchg
int
sbb
dec
in
inc
dec
sub
mov
test
cmpsl
sub
cli
mov
js
xchg
mov
cmp
aad
mov
jbe
aaa
sbb
in
les
push
sbb
mov
cmp
add
jecxz
add
aaa
inc
test
nop
cmpsl
mov
stos
dec
aaa
mov
adc
or
leave
dec
push
inc
orb
mov
aad
jb
pop
jp
dec
xor
in
cmp
pop
xor
inc
and
pop
cld
lahf
fs
ss
dec
push
je
and
shrb
mov
jl
test
rolb
inc
arpl
inc
rcll
fcomps
jbe
mov
sub
loopne
xchg
movb
scas
xlat
loope
mov
add
lahf
fsub
adc
adc
xlat
clc
xlat
push
and
mov
inc
push
sub
and
pop
push
cmp
push
call
xlat
ljmp
sbb
and
and
jge
aaa
in
loop
out
cmpsb
pop
bound
adc
cmp
xor
cmpsb
push
push
shll
filds
fs
jle
mov
stos
or
pop
shll
pop
js
xor
lods
lock
xchg
add
xchg
cmp
loopne
push
dec
mov
inc
sarb
cmp
shr
mov
mov
cmc
fldcw
loop
mov
js
mov
mov
daa
xor
jb
xchg
jb
out
dec
xlat
dec
jge
andl
add
sbb
adc
jo
jmp
xchg
mov
mov
sbb
es
or
adc
jb
frstor
popa
ljmp
je
cmp
or
mov
ja
pop
sub
xchg
out
into
and
sub
fldcw
mov
mov
bound
sub
or
add
pushf
mov
out
inc
cmp
repz
and
and
pop
mov
outsb
cmp
dec
stos
jp
push
movsb
jge
lcall
sbb
dec
push
dec
or
imull
xor
mov
xlat
sub
imul
ljmp
add
cwtl
push
cmp
pusha
sarb
jmp
cmc
push
cld
dec
ret
leave
xchg
rolb
jle
sbb
xchg
fisubl
pop
cmp
idivl
push
push
ljmp
ror
nop
iret
push
mov
fdiv
hlt
push
ljmp
imul
jmp
ljmp
movsb
aad
xor
mov
xchg
pop
add
jmp
mov
jle
pusha
add
popf
data16
outsl
dec
xor
inc
adcl
sbb
ss
aam
jl
cmp
adc
mov
cmp
dec
adc
add
or
dec
push
cwtl
mov
mov
mov
test
fyl2x
cmpsl
je
in
jae
les
sahf
ja
add
call
adc
mov
mov
sub
push
andb
mov
push
mov
and
xchg
arpl
fs
in
cmp
out
adc
test
sarb
out
cmp
mov
mov
ret
cmpsb
cwtl
inc
push
lods
sbb
push
sbb
cmp
cmp
dec
jo
or
mov
xor
das
xchg
add
xlat
pop
inc
xor
push
sbb
adc
pushf
js
out
outsl
mov
dec
add
popa
gs
mov
insl
add
lock
or
inc
test
mov
aaa
test
sub
fimuls
pop
push
xchg
mov
sbb
jnp
xchg
mov
fwait
cmp
cwtl
inc
dec
inc
testl
pop
xor
js
rcrl
stos
push
push
roll
cmp
mov
das
rol
insb
hlt
dec
dec
out
or
push
in
icebp
jge
aad
das
lods
inc
pop
inc
das
dec
leave
pop
pop
adc
cmpsl
push
sub
aas
testl
clc
xor
jne
call
lods
pop
inc
cmpsl
fsub
rcr
je
cmc
icebp
jmp
pop
cltd
xchg
pop
adc
xchg
inc
rcrl
lods
aam
pop
jecxz
dec
rcrb
fistpl
adc
mov
loop
jl
test
stc
and
jb,pn
sub
mov
pop
jbe
lock
and
dec
into
aaa
inc
mov
aaa
xorl
repz
cs
mov
mov
jnp
dec
dec
xchg
dec
cmc
jmp
dec
lret
ss
pop
xchg
lret
push
fisubrs
dec
mov
outsb
ret
mov
jl
testl
repz
adc
cmp
sti
rcll
lcall
push
cmp
mov
push
daa
out
jne
push
sti
sbb
cs
test
sub
shl
adc
push
mov
adcl
add
jae
ja
movsl
or
popf
shlb
scas
xor
and
pop
ret
jbe
test
imul
ss
nop
fwait
add
and
mov
xor
mov
xor
inc
sub
mov
shll
xchg
fisubrl
rcrb
dec
dec
xchg
aam
repz
xor
out
rcll
inc
dec
test
mov
outsl
js
pop
outsl
lods
and
scas
add
dec
movsl
sbbl
test
fimuls
push
adc
add
inc
xchg
push
mov
test
sbb
dec
icebp
cmp
jmp
xor
icebp
push
sub
inc
dec
movsl
cmpsl
or
push
push
loope
loope
and
push
push
jmp
push
int
lcall
ss
ret
mov
or
pop
inc
jo
popa
repnz
ja
shll
xchg
int
jp
mov
movsl
and
ja
pusha
mov
ret
sarl
pop
add
mov
pop
mov
sbb
push
adcb
jo
jne
or
cmp
xchg
push
sub
les
sbbb
cwtl
inc
add
stos
push
push
sti
lret
ret
fiadds
jbe
in
in
and
leave
stos
xchg
push
push
or
mov
mov
arpl
cmc
xchg
fwait
push
jno
mov
stos
sarl
es
pop
cmp
xchg
pop
and
or
add
xor
cs
test
add
cmp
cmpsb
outsl
scas
scas
sub
mov
xchg
pop
into
mov
push
pusha
pop
mov
mov
lahf
mov
ret
xor
je
hlt
sbbl
cmp
scas
lock
mov
ds
in
cmpsl
xchg
scas
lret
testl
sub
lahf
mov
mov
andl
cmp
dec
popf
cmp
aad
add
xor
dec
out
xor
pop
dec
shlb
bound
pop
mov
mov
jo
popa
aam
or
int3
sbb
sub
rclb
sub
loop
das
cltd
mov
ja
mov
add
les
arpl
lock
pop
jg
mov
and
sbb
jnp
push
into
xor
add
fs
add
aam
std
mulb
and
sub
sub
das
or
mov
sub
lds
in
mov
jb
loope
aam
and
pop
sbb
pop
inc
sahf
ljmp
mov
sbb
push
les
les
cli
leave
ss
cmp
aas
test
sbb
jo
mov
cmp
jno
jg
pop
pop
mov
lock
xchg
mov
cmp
mov
filds
dec
adc
rcll
xchg
nop
fcmovb
xchg
xchg
and
lock
aam
cmpsl
and
aam
sti
icebp
loopne
sbb
ja
cmpsl
push
xchg
insb
adc
mov
dec
mov
pop
or
testb
nop
pop
add
push
ret
cmpsl
pop
fidivs
clc
add
inc
cld
fdiv
in
dec
icebp
cmc
pop
mov
or
cmp
call
add
jnp
repnz
cmp
push
lcall
sar
ja
std
sbb
iret
jns
popl
sbb
sub
sub
push
sub
sub
push
jmp
jns
mov
and
mov
adc
lcall
hlt
push
stos
sti
cmc
jg
std
cli
fstpl
cli
dec
xchg
mov
cltd
dec
push
jle
jno
and
jl
push
hlt
leave
loope
mov
jae
jl
adc
call
or
adc
nop
sbb
lods
in
or
mov
cwtl
add
arpl
push
mov
outsl
pusha
pop
je
xchg
movsb
loopne
fdivl
faddl
imul
bound
jl
call
cld
insb
dec
daa
aaa
mov
hlt
fistps
mov
mov
lcall
cmpsl
fimull
fbstp
xor
add
cli
je
cltd
push
lods
das
ss
xchg
cmp
jnp
xchg
out
xchg
xor
aam
arpl
fcomps
ja
xor
push
fisubrl
rcll
jno
movsb
mov
cmpsl
push
fsin
xchg
hlt
ja
lcall
add
int3
inc
mov
aad
mov
ds
sahf
int
push
sahf
repz
in
xchg
and
push
das
cmp
sbb
das
mov
sub
dec
mov
inc
rcr
outsb
pushf
xchg
mov
push
push
outsl
lea
les
js
pusha
dec
jns
and
sti
pushf
sbb
in
data16
adc
into
or
xor
ret
mov
and
lahf
sbb
pop
test
and
pop
bound
cltd
or
xor
or
adc
call
mov
jmp
arpl
mov
pop
jmp
push
mov
adc
daa
cmpl
xchg
push
cmp
sbb
cmp
cld
cmpsl
lret
push
leave
sbb
fisttpll
or
or
mov
jmp
pop
pop
ds
imul
push
xorl
mov
lret
mov
popf
dec
dec
pop
out
sub
orb
jg
pop
hlt
jg
mov
lgs
cmpsb
fbld
call
pusha
stos
daa
xor
imul
push
aam
xchg
outsb
movsb
fcomps
sti
dec
xor
ja
mov
js
loop
les
inc
xchg
or
inc
push
mov
scas
test
mov
pop
mov
repz
enter
and
rep
xchg
adc
imul
icebp
mov
mov
jno
push
cmc
hlt
dec
aad
push
xchg
cmp
inc
lods
dec
aaa
mov
movb
stos
push
add
das
jmp
iret
pop
aam
and
lret
jmp
cmp
and
idivb
or
xchg
lahf
jmp
mov
lods
mov
aaa
xchg
mul
sbb
sbb
popa
daa
jecxz
lods
lods
jno
lahf
addl
cmpsl
aaa
lret
pop
or
into
sbb
mov
inc
std
xchg
add
lret
sub
pop
outsb
scas
in
lds
dec
pop
xlat
jo
push
into
mov
es
insl
mov
out
std
push
and
arpl
adc
push
inc
push
std
je
jno
xlat
push
into
cmp
arpl
stos
out
inc
shl
call
cld
imul
imul
rol
push
adc
fstpt
add
jae
pop
xor
cmpsb
push
pusha
aaa
jl
xchg
xlat
adc
rorb
sahf
lret
sub
je
lds
out
test
notl
pop
cs
push
and
inc
fwait
jmp
out
push
pop
repnz
movsb
pop
pop
jo
mov
mov
insl
cmp
ja
fistpl
cmp
pop
pop
dec
add
shr
in
nop
and
push
mov
test
pop
push
in
or
lds
out
push
jo
xchg
stos
add
xor
inc
gs
jno
jns
pop
movsb
fwait
mov
inc
add
lock
sbb
push
jae
stc
stc
je
mov
ljmp
jp
xor
pushf
les
and
cmp
push
scas
inc
cld
mov
aaa
repz
movsl
aam
cmpsb
in
mov
xlat
cmp
cmp
cmp
cmp
lret
out
fwait
push
push
xorb
xchg
into
es
jns
pop
and
pop
xchg
mov
cmp
imul
fdiv
fiaddl
dec
push
push
ljmp
xor
mov
ret
sarl
mov
adc
sub
push
xchg
mov
sub
mov
fs
xor
loopne
mulb
stc
add
pop
dec
out
jg
je
xor
enter
sbb
popa
xor
xchg
pushl
dec
mov
sbb
test
adc
mov
push
rcrl
das
clc
xchg
jnp
mov
mov
mov
mov
shrl
lret
xchg
jne
outsl
sbb
or
lods
rcrl
add
enter
jge
pop
subb
inc
in
jp
add
or
outsl
pushf
or
xchg
xor
out
pop
insl
push
mov
ficoms
jg
xchg
scas
push
popf
lahf
sub
clc
pop
or
scas
push
mov
repnz
jp
cmp
out
fsubrs
dec
add
inc
xchg
hlt
aaa
sbb
or
pop
xchg
mov
mov
testb
imul
adc
pop
int3
lcall
in
pushf
pop
daa
xchg
add
fistl
int
add
jmp
inc
jae
mov
ret
mov
and
lock
xchg
adc
outsb
dec
shll
icebp
ds
es
jl
rorl
hlt
xchg
jle
mov
in
aas
icebp
or
lcall
jl
inc
pushl
add
pop
mov
out
enter
mov
cmp
jae
std
cmp
movsl
jecxz
inc
aaa
nop
push
pop
mov
jp
das
adcl
ja
adc
dec
jp
add
jmp
mov
loop
imull
jmp
cmp
in
dec
mov
push
cmpsb
jno
adc
es
stos
and
jl,pt
xor
movsl
mov
sahf
insl
mov
push
push
outsb
jae
dec
nop
mov
sbb
bound
fucomp
pop
push
ret
shll
lcall
push
mov
mov
xchg
or
clc
lret
mov
push
xchg
mov
push
xor
xor
dec
dec
add
pop
cltd
cmp
les
notb
dec
mov
push
adc
mov
cmp
mov
arpl
adc
jns
adc
xor
jle
pop
mov
repz
pop
adc
mov
cli
mov
fistpll
dec
cmpsl
arpl
test
jbe
test
pop
lea
lock
sbb
jge
mov
lea
jg
cmp
add
sub
js
inc
out
xor
or
dec
dec
pusha
mov
ficoms
aas
ret
push
jecxz
cwtl
popa
jp
push
sub
or
push
cld
push
adc
in
mov
lds
loop
dec
jb
mov
nop
xchg
fstpl
mov
jl
fbstp
mov
and
sbb
push
mov
cmp
push
lds
adc
sbb
repnz
jmp
jecxz
mov
stc
sub
xchg
inc
dec
cmp
iret
cmpl
cmpsl
mov
js
or
pop
clc
cld
mov
mov
sbb
push
movsb
dec
xchg
and
adc
cli
ror
mov
loop
mov
sub
jns
repz
ret
mov
inc
fstpl
push
mov
lock
mov
fbld
ficomps
inc
andb
xor
xor
sti
sub
out
or
mov
into
push
movsb
loope
mov
je
mov
mov
lods
fs
cli
cltd
fstps
inc
mov
pop
jno
mov
leave
sbb
popa
sbb
push
pop
test
add
adc
sti
add
add
test
mov
pop
stos
sub
in
repnz
or
jmp
scas
pop
int3
int
jecxz
pop
fiadds
xchg
into
fs
jp
push
rolb
shll
lret
cli
fadds
mov
je
xchg
mov
and
push
mov
rcll
cmpsb
pushf
add
mov
loope
mov
rcrb
or
or
jle
cs
xorl
jge
ja
sub
xchg
dec
out
loopne
xchg
inc
cmp
xchg
das
push
inc
sub
gs
push
outsb
xchg
cmp
lcall
rclb
pop
add
jns
sub
aaa
cwtl
inc
cld
rorb
inc
rcll
outsb
jne
cmp
xor
dec
out
outsb
sahf
pop
cwtl
mov
bound
or
bound
mov
cmp
mov
out
frstor
ret
inc
xchg
es
xchg
leave
stc
push
pop
and
cmc
jg
dec
call
nop
fwait
xor
pop
mov
dec
dec
lods
pusha
arpl
lods
and
or
lock
jb
rclb
dec
adc
pop
dec
sbb
mov
cltd
xor
aad
jb
xchg
inc
movsb
cmp
cmp
mov
mov
push
mov
xor
ljmp
jb
sti
aaa
out
cmpsl
mov
nop
fbstp
add
aam
popf
or
sbb
cmc
out
adc
sbb
repz
jle
mov
push
gs
divb
out
daa
adc
icebp
mov
inc
pop
add
lds
ljmp
xchg
mov
sub
adc
cmp
pop
lahf
int3
mov
mov
cmp
jg
push
pop
push
je
leave
stc
pop
cmp
cmp
rorb
xchg
ror
jl
jle
movsb
es
xor
jbe
pop
icebp
adc
clc
ret
inc
xor
push
sahf
jg
mov
xor
es
les
mov
add
loop
lea
push
sbb
in
xor
fcoml
jge
mov
push
or
cmpsb
cmpsl
aad
xor
and
pushf
inc
xchg
sahf
mov
fiadds
cmp
pushf
push
out
mov
pop
pop
test
lods
jns
lds
or
adc
dec
mov
out
iret
pop
push
pop
insl
mov
dec
hlt
mov
ficompl
aad
adc
add
rcrl
mov
mov
jg
pusha
xorl
pusha
repz
popa
and
and
stos
cmp
sbb
adc
and
sahf
shrl
mov
arpl
lret
cmc
jb
lcall
scas
pop
test
test
ret
add
xor
stos
push
fmulp
inc
jo
jb
and
or
fdivs
dec
in
add
adc
in
mov
dec
mov
cltd
stc
cwtl
out
jo
loope
call
cmc
not
xchg
fstl
cmp
scas
xchg
ret
xor
xchg
mov
push
mov
push
sbb
nop
cltd
push
or
or
xor
mov
inc
sbb
sub
sbb
pop
mov
pop
mov
mov
cmp
push
dec
sbb
pop
das
movsl
dec
and
push
push
sbbb
sbb
ret
lret
pop
or
das
pop
ret
jbe
rclb
xor
sub
adcw
adc
dec
push
jl
into
lea
sub
push
lea
and
les
inc
lahf
inc
pop
dec
xlat
xchg
lea
mov
into
mov
notb
xchg
xchg
roll
cmp
adc
cmpsb
jmp
dec
sub
iret
sub
jle
mov
mov
jmp
push
imul
addb
and
jmp
or
movsb
addb
cmp
xchg
pop
scas
fimull
sbb
rcrl
shl
push
or
mov
mov
or
orb
dec
fs
imul
out
outsb
xlat
test
pushf
and
mov
pop
arpl
iret
and
or
pop
add
sbb
in
dec
imul
mov
pop
bound
popf
adc
ljmp
ret
mov
lret
sbb
sbb
hlt
outsb
sub
jae
mov
sub
xchg
addl
in
push
mov
shr
cmovb
and
adc
sti
mov
sub
in
pop
out
jecxz
jl
insl
xor
push
or
not
xchg
sti
cmc
pushf
or
mov
mov
and
sbb
cs
and
movsb
mov
or
cs
test
test
subl
ficompl
or
jnp
pop
outsl
xor
mov
or
in
sub
fldenv
movsb
and
in
sbb
dec
and
and
aam
mov
jp
cmp
jo
cmc
sti
outsl
fldenv
cmpsl
jns
bound
and
push
mov
dec
dec
pop
dec
fdivrl
jp
fdivrs
xor
xor
mov
repnz
push
xchg
hlt
out
shll
decb
jo
push
dec
jno
cmp
daa
xchg
std
vmovdqu
pop
xchg
push
shl
stc
aaa
inc
lret
addr16
stos
push
outsb
adc
lea
adc
addr16
in
mov
bound
scas
loopne
ret
mov
and
je
jmp
or
xchg
inc
xchg
test
pop
lret
pop
cltd
pop
inc
push
xchg
outsb
lds
inc
jbe
mov
andb
aad
cmp
adc
pop
push
mov
push
fdivp
xchg
iret
pop
mov
or
cmp
jno
imul
pop
cmp
cmp
mov
cwtl
arpl
fadds
faddp
ret
adc
mov
sub
push
xor
loope
dec
jg
stos
xchg
xchg
and
pushl
iret
adc
ljmp
js
jnp
idivb
push
imul
lret
imul
popa
add
lds
inc
push
inc
mov
shr
and
or
push
jnp
mov
mov
loopne
push
cmpsb
sbb
inc
add
jae
or
leave
cwtl
mov
mov
es
lret
popa
add
cld
sub
repz
data16
dec
mov
mov
dec
in
shl
dec
push
fdivl
push
jl
cmc
or
push
outsb
sub
in
je
cmc
and
jnp
ss
cmp
stc
popa
xchg
ret
idivl
mov
mov
cmp
loopne
outsb
dec
in
and
xchg
in
pushl
insb
sbb
cwtl
mov
mov
jmp
jns
jae
loop
fistl
cmp
fmull
add
mov
mov
sub
addr16
cmpsl
imul
out
test
jo
jae
dec
cmpsb
add
pop
lcall
xchg
movsb
adc
jle
or
sub
cmp
xor
or
pop
jmp
xor
lods
scas
xchg
lcall
les
loopne
inc
aam
rclb
aas
mov
out
aam
cmp
dec
jb
xchg
inc
sub
mov
orl
imul
arpl
fsubrl
test
push
cmc
ja
pop
sbb
loopne
cwtl
std
xchg
push
in
loopne
jp
pop
xor
imul
repz
mov
out
fists
push
addr16
ds
xchg
lcall
into
mov
shlb
fsubrs
push
adc
inc
or
jne
cli
sbb
lock
or
ret
jmp
push
sbbl
test
clc
sahf
add
mov
arpl
inc
push
data16
cmp
pop
shll
xor
mov
stc
sub
or
cmp
or
adc
iret
stos
imul
mov
xor
sub
psrad
sbb
dec
rclb
jmp
cmpsb
icebp
pop
pop
repz
mov
iret
scas
inc
pop
xorl
mov
aad
or
sub
add
leave
cmp
pop
jl
jmp
out
lods
cmpsb
shrl
roll
call
mov
add
cmp
push
jge
inc
mov
mov
pop
packsswb
sbb
sbb
pop
mov
pop
sahf
cmp
sub
mov
push
hlt
push
mov
mov
xchg
mov
pop
push
stos
mov
shrl
out
mov
adc
mov
and
mov
mov
std
hlt
mov
mov
inc
cmp
jns
cmp
inc
rcll
mov
xchg
ret
jne
nop
in
nop
push
stos
std
inc
mov
sub
popa
jo
dec
mov
test
xor
sbb
aas
xchg
pop
jmp
xchg
aas
lcall
enter
aaa
jp
push
mov
xchg
test
jmp
add
sahf
mov
cltd
cmc
mov
mov
pop
lret
fsubrs
int3
mov
imul
lds
cmp
and
gs
pop
je
xchg
aaa
lds
xor
arpl
xorl
test
xor
cmp
add
lret
mov
inc
cmp
pop
gs
ror
jae
jl
jmp
dec
inc
fisttps
push
sbb
out
jno
pushf
int
lea
mov
imul
rorb
jb
loope
jecxz
pop
cmc
sbb
fistpl
push
scas
scas
cmp
pop
fcmovb
jl
iret
pop
out
dec
insl
cmpsl
and
and
arpl
mov
aaa
mov
jmp
mov
sub
ja
push
stos
jge
aas
inc
addr16
inc
fdivl
insl
adc
mov
mov
sbb
sti
mov
in
outsl
out
bound
popf
shl
fcomp
aad
daa
mov
sti
rclb
popf
xchg
lods
mov
fldenv
add
bound
cmpb
pop
addr16
mov
repz
mov
addr16
sub
dec
dec
xor
divb
int
sub
ficoml
ds
push
and
or
dec
mov
out
mov
pushf
stos
arpl
lea
int3
loop
xlat
pop
repz
adc
fstpt
inc
cmpsl
ja
rol
xor
test
cmp
xlat
inc
and
mov
cmpsb
sbb
adc
pop
jg
outsb
mov
mov
test
and
stos
mov
xchg
insl
xor
and
mov
imul
add
push
negl
add
jmp
in
push
orl
adc
dec
dec
pop
sbb
out
push
es
lea
aam
dec
sub
sbbl
or
cld
arpl
bound
xchg
clc
push
xchg
jns
stc
cmp
pop
push
or
repz
xchg
incb
out
and
fmuls
dec
xor
adc
lods
test
into
mov
int
dec
daa
add
lods
fidivrl
jl
inc
and
andl
lods
xchg
pop
cltd
mov
jo
mov
adc
or
inc
cwtl
leave
inc
dec
xchg
inc
push
inc
out
pusha
jbe
jmp
rcrb
xchg
test
xor
frstor
pop
cmp
mov
popa
push
sub
les
stc
xor
pop
int3
insb
mov
pop
xchg
and
out
mov
pop
push
out
lea
popf
xchg
xchg
jmp
mov
adc
add
rcl
xchg
mov
fistpl
cli
push
test
arpl
mov
pop
int3
fists
xlat
aas
inc
dec
testl
lret
xchg
out
push
push
sub
je
aam
test
or
adc
push
adc
shlb
xor
adc
test
lods
pop
sahf
pop
les
fs
in
mov
jne
shl
bound
pushf
je
pop
insl
divl
xor
mov
nop
jmp
arpl
add
pop
jno
push
mov
cwtl
and
pop
lds
loopne
iret
sbb
ret
mov
jge
cmp
sub
or
add
fisttpll
jl
adc
xchg
pop
sbb
imul
cld
adc
lock
jg
test
cmc
inc
add
faddp
push
jae
sbb
jmp
jmp
xor
pop
xor
pushf
flds
and
push
in
push
fxch
je
je
xlat
xor
nop
mov
pop
and
sub
sbb
sub
sti
das
mov
scas
sti
data16
frstor
lret
stos
sub
and
loop
ljmp
mov
cmpsl
push
addr16
movsl
adcb
outsl
cmp
xor
xor
imul
cmp
stc
inc
adcb
push
mov
movsb
mov
sub
fldenv
jb
mov
push
mov
mov
js
rcr
or
add
aas
jnp
stos
and
in
mov
dec
in
imul
inc
popf
mov
inc
iret
ret
test
insb
push
lock
xor
pop
dec
loope
cmp
mov
push
insb
adc
enter
ret
mov
and
cmpl
dec
out
aam
outsb
ds
cltd
or
lret
dec
pop
cmp
mov
mov
aas
push
inc
add
addr16
cmpsb
adc
data16
aad
imul
cli
fiadds
popa
cmpsb
push
out
inc
shl
fidivrl
adc
sub
arpl
push
inc
cmp
insl
lea
in
adc
mov
in
ds
sub
ss
sub
insb
into
into
out
jbe
ljmp
mov
or
call
stos
movsl
insb
jl
sarl
iret
fcmovb
adc
add
jl
mov
xor
arpl
pop
mov
push
add
repnz
sub
xchg
std
pop
fscale
es
fidivs
or
inc
inc
or
add
xor
mov
insb
outsb
out
nop
leave
fs
mov
xchg
stos
mov
arpl
inc
cmp
pop
ss
push
aad
inc
ret
movsb
cmp
in
or
and
or
movsb
and
mov
mov
call
shr
jno
ret
inc
cli
pop
mov
lea
repz
push
mov
test
add
adc
jl
adc
loope
aas
inc
or
dec
cmp
scas
sbb
dec
fs
ret
xchg
push
testb
inc
mov
mov
jno
dec
flds
mov
jecxz
aad
in
mov
lahf
pop
cli
sub
push
mov
mov
testb
test
jmp
adc
xchg
lods
std
pushf
xlat
addr16
pushf
mov
out
out
enter
xor
mov
mov
cltd
xor
adc
ss
movsb
ret
scas
jge
stos
jb
push
outsl
out
sbb
mov
in
pusha
repz
xorl
gs
dec
pop
inc
xchg
xor
in
insb
pop
inc
jp
push
sub
xor
pop
add
stc
jge
xchg
loop
test
add
mov
sahf
push
in
cltd
mov
mov
add
sub
arpl
pushf
sbb
jmp
xchg
loope
addr16
clc
aaa
test
sbb
leave
xchg
insb
push
nop
inc
fcompl
xor
pop
rcrl
adc
sbb
sbb
jmp
int3
in
push
mov
mov
push
loope
jns
inc
mov
xor
int3
mov
in
dec
repz
and
adc
sahf
add
clc
sub
std
int3
xor
movsl
popa
imul
aam
aad
jg
adc
jo
aad
inc
jo
dec
dec
out
xchg
in
scas
fucompp
push
mov
das
scas
push
stos
cmp
adcl
ret
sub
inc
cmp
fcmovnb
jmp
es
and
out
test
push
jb
outsl
inc
add
mov
xchg
cmp
sbb
pop
aam
inc
addl
and
bound
rorl
mov
pop
dec
inc
xchg
mov
mov
stos
xchg
mov
jge
sub
sub
fisttpll
sahf
mov
cmp
ljmp
sbb
xor
je
mov
pop
xor
subb
inc
rep
jno
cmc
xor
push
pushf
add
test
xchg
pop
nop
adc
outsl
call
add
ljmp
mov
push
push
cld
or
out
adc
or
cwtl
push
cmpsb
or
or
cmovae
sbbl
stos
sahf
sbb
sbb
xchg
add
xor
fsubr
in
testb
fnstsw
out
cmc
xchg
cld
and
inc
and
cmp
insl
mov
mov
cmp
in
push
cmpsl
ret
xchg
dec
loop
hlt
test
hlt
jl
sahf
insb
and
test
or
shrl
popf
fcmovnu
sbb
mov
and
push
push
cmp
scas
pop
stos
fistps
in
test
push
imul
pop
add
loop,pt
push
xchg
mov
fbld
xchg
jae
and
jle
adc
and
adc
inc
rcrl
out
bound
bound
sub
insb
fnstsw
jbe
mov
pop
add
inc
ret
cmp
faddl
xor
push
jle
jp
pop
lcall
inc
hlt
xorl
mov
dec
or
mov
test
and
call
pop
adc
mov
dec
push
test
test
repnz
xchg
bound
lret
cld
cmp
scas
and
in
cmp
and
xor
xor
divl
call
cmp
dec
pop
mov
pop
dec
cmp
ds
addr16
adc
fwait
cmp
mov
fs
mov
cmp
and
jnp
sbb
and
xchg
movl
lret
ja
fdivrp
add
in
frstor
shl
cs
cmpsb
into
and
imul
test
imul
push
inc
aaa
pop
ja
mov
sub
loop
push
lock
inc
stc
add
add
xchg
aam
and
jmp
and
imul
aam
or
outsb
daa
test
sbb
and
cmc
lds
es
outsb
cmp
pop
outsb
lods
sub
mov
add
xor
bnd
jb
inc
repz
stos
pop
mov
pop
mov
jns
pop
and
aaa
sbb
leave
into
lods
mov
cmp
or
cmpsb
icebp
jo
lcall
xchg
loopne
lahf
or
mulb
or
mov
out
push
push
shrl
mov
call
xchg
cmpsb
pop
iret
mov
mov
ljmp
sbb
mov
test
push
shrb
scas
jg
xchg
int
inc
and
sub
jecxz
lods
add
out
inc
decl
arpl
mov
cli
mov
ror
adc
ret
cli
out
sahf
popf
adc
lock
and
pop
xchg
push
movsl
lret
repz
jmp
lcall
sbbb
cmp
imul
shl
mov
xchg
daa
xchg
sbb
testl
push
pop
push
dec
ret
jl
into
fs
mov
xchg
call
fidivs
imul
and
rclb
push
adc
and
sub
cmp
pop
sarb
fistps
dec
arpl
jle
cmc
or
inc
jecxz
and
pushl
imul
gs
push
in
cmp
movl
mov
lock
mov
stc
mov
fdivrp
test
fstps
jbe
imul
stos
cs
sbb
or
mov
cwtl
jo
or
xlat
push
jno
sub
enter
out
divb
dec
or
clc
stos
lret
int
jbe
dec
xchg
mov
xchg
mov
shl
xchg
push
push
jnp
aaa
loopne
jge
shr
push
not
xor
aaa
enter
gs
fidivrs
inc
repnz
popa
jmp
lods
popf
mov
scas
adc
push
hlt
adc
nop
add
xchg
std
inc
xchg
sub
andb
cmc
pop
mov
mov
aad
xchg
pop
xor
cwtl
cmovle
imul
mov
xchg
pop
mov
mov
adc
jno
xorb
mov
jno
lock
mov
movsl
add
inc
cmp
pop
cltd
push
jo
clc
adc
xchg
mov
popa
cmp
mov
addr16
pop
jmp
daa
repz
or
inc
roll
imul
cmp
sbb
sti
iret
xor
rol
sbb
and
in
int3
cmc
xchg
fdivrp
rcl
insb
cmp
popa
je
mov
add
movsb
push
repz
push
arpl
pop
scas
popf
scas
mov
pop
add
xchg
repz
jle
loop
inc
push
ss
lret
aam
pop
xor
inc
ss
aaa
or
mov
sub
or
jne
lock
cmp
daa
enter
cli
lcall
stc
mov
int3
outsb
lods
shl
jne
mov
jmp
xchg
or
jno
pop
outsl
jne
sarl
lret
les
popa
int
push
cwtl
xchg
pusha
and
xchg
shlb
mov
sub
jnp
imul
insb
lahf
ret
add
mov
ss
loopne
mov
outsl
mov
mov
js
xchg
adc
pusha
dec
adc
test
movsl
push
mov
leave
sub
fs
jle
sub
mov
jb
fildll
lock
pop
pop
adc
bswap
in
out
into
inc
rcrb
in
mov
jnp
or
cmp
lret
out
or
addb
out
xchg
add
cwtl
clc
jle
xchg
add
and
test
rclb
aad
out
ja
fimull
lock
xchg
add
sbb
push
mov
sbb
push
inc
and
enter
push
and
das
loope
mov
xor
cmp
jge
fwait
dec
sahf
pop
push
arpl
dec
sub
imul
pushf
movb
or
iret
xchg
fmul
or
push
dec
xor
popa
sti
enter
arpl
in
rol
negb
xor
ficoms
fisubs
in
flds
xchg
enter
sbb
insl
inc
mov
stos
mov
jl
mov
adc
push
ja
dec
mov
das
es
inc
lods
sar
sbb
nop
jne
mov
cmp
sarl
inc
cld
pop
fcomps
in
adc
push
cs
xor
adc
sbbl
dec
cmpsb
in
test
mov
adc
addr16
adc
add
fcompl
stc
or
xchg
jp
lods
arpl
loop
xor
xchg
imul
mov
faddp
jnp
or
loopne
sbb
pushf
and
xor
adc
jl
pop
pushf
dec
lret
inc
in
ds
and
popa
jnp
leave
pop
xrelease
shr
xchg
in
outsl
pop
out
or
cs
jb
cmp
inc
mov
sti
add
xchg
inc
cmpsb
repz
testl
in
adc
loop
jbe
or
adc
movsl
sbb
add
cmp
inc
push
lds
dec
push
sbb
out
jle
insb
mov
es
jne
lods
jb
inc
xor
loopne
inc
mov
jge
scas
sahf
test
push
jns
pop
mov
lods
hlt
incb
stc
inc
clc
mov
inc
cmp
cli
int3
clc
inc
popa
dec
add
lds
les
sahf
aam
in
push
adc
pop
add
xlat
inc
inc
mov
insb
imul
or
aam
lods
mov
mov
ja
leave
outsb
out
sti
cld
in
fbld
and
dec
scas
gs
ret
into
or
test
out
rol
and
js
into
movsl
imul
out
or
ds
jo
lahf
dec
int
lret
jle
xchg
or
addr16
repz
sbb
icebp
int
cmpsb
addr16
pop
andl
cli
push
mov
sub
idivb
xchg
or
out
daa
pop
cmc
sbb
add
test
dec
xchg
stc
outsl
call
pop
ret
frstpm(287
loop
stos
clc
lock
cmp
mov
movsb
xor
lcall
and
push
add
inc
cmpsl
jbe
xchg
ret
sub
xorb
xchg
xor
movsb
pop
xchg
shlb
dec
int3
data16
mov
adc
sti
into
adc
jo
push
insl
dec
push
pop
pop
mov
lret
push
cld
insb
les
stc
push
iret
fisttpll
jo
imul
mov
insb
inc
inc
xor
xor
cmpsb
mov
out
fst
mov
gs
add
cs
push
pop
popf
lret
or
adc
sti
adc
frstor
sbb
cmpsl
dec
dec
cmp
das
mov
jno
movb
adc
or
pop
ljmp
leave
pop
adc
stc
jle
sbb
cmp
push
xchg
addr16
cld
test
add
fidivrl
cli
mov
xchg
lods
outsl
cmpsb
push
js
incl
aaa
cltd
xchg
inc
in
fbstp
data16
or
mov
pop
out
bound
cmp
xlat
pop
insb
xchg
mov
jmp
out
clc
adc
xlat
insb
mov
cmp
rcll
ret
shl
sbb
mov
mov
fcompl
push
mov
mov
adc
cs
xor
leave
enter
add
jle
or
and
hlt
aad
sbb
or
add
in
ret
adc
sbbl
movsb
pop
push
aam
lods
mov
jns
fsubr
stos
addr16
daa
rcll
repz
fisttpll
sbb
ret
or
pop
xor
movb
adc
jl
xchg
inc
nop
nop
pusha
jmp
and
add
shrb
shll
mov
jp
dec
adc
sub
nop
mov
push
xor
test
idivl
fimuls
xorl
jbe
or
jl
loop
dec
add
outsl
test
mov
sub
pop
lret
cmp
jle
xchg
inc
sar
push
push
daa
les
pop
out
add
add
mov
clc
movsl
inc
jg
popa
arpl
mov
outsl
dec
or
ljmp
dec
mov
subb
int
cmp
xchg
fcmovu
cli
std
jg
mov
push
mov
icebp
imul
mov
jge
insb
imul
fs
js
stos
mov
mov
sbb
cmpsl
cmp
lea
add
cmpsl
pop
fwait
in
pop
dec
sub
mov
adc
or
sbb
mov
adc
bnd
pop
adc
addl
dec
jb
mov
fists
xchg
xlat
mov
insl
inc
bound
jno
and
sti
ret
jge
adc
dec
jne
mov
enter
incb
not
xchg
call
stos
jne
dec
std
and
icebp
dec
enter
sub
repz
jb
lahf
mov
or
inc
arpl
and
and
mov
mov
and
shll
sub
movsl
ret
sbb
pop
rcrl
loope
push
adc
pop
pop
insl
push
sbb
test
ret
adc
ror
call
mov
xlat
leave
jno
pop
inc
les
push
or
dec
pop
loope
xchg
gs
pop
or
dec
incb
cmp
cmp
ds
sar
add
cmp
or
sti
or
push
push
and
dec
lods
or
push
sub
mov
popa
xchg
dec
jle
int
add
mov
inc
push
ds
cmp
int
sarl
cmpsb
enter
jno
inc
push
fucomi
movl
push
and
cmp
outsl
rcl
sub
std
mov
xchg
add
subl
push
aaa
cmp
addl
enter
fcompl
mov
ret
loopne
shlb
fisttpl
stos
std
rol
stos
rol
inc
and
scas
shrl
addl
nop
repz
mov
mov
mov
stos
push
push
adc
adc
outsb
jle
dec
outsl
daa
mov
adc
sysexit
sub
push
xor
add
push
or
push
pop
ficoml
pop
sub
push
adc
jns
cmc
xor
mov
dec
xchg
jbe
rcr
stos
fcmove
fs
inc
in
out
rorl
or
and
int
push
shlb
in
stc
add
insl
stc
ljmp
outsb
add
scas
inc
mov
enter
fscale
leave
loopne
xor
mov
and
in
add
cmp
insl
cmc
out
sti
arpl
xor
scas
mov
in
adc
xchg
pop
push
fstpt
jo
ja
mov
sbb
outsl
fbld
mov
push
pusha
jo
cmp
cmpsl
rcll
xchg
jp
arpl
lea
fcomps
outsb
xchg
aam
inc
ficompl
into
mov
or
loop
jge
iret
into
or
adcl
fldcw
js
mov
pop
dec
xor
lret
outsl
das
je
fsts
inc
ret
lods
frstor
pop
pop
mov
out
aam
movsb
push
and
cltd
jmp
jle
mov
pop
ja
dec
cli
jmp
mov
mov
setp
xchg
fsubs
inc
mov
sub
jmp
dec
out
ror
add
pushf
leave
mov
dec
jae
cmp
sbb
jnp
xchg
sbb
cmp
xchg
aad
ljmp
outsb
push
in
stc
cli
cmp
in
adcl
mov
and
test
xchg
push
cltd
pop
fmuls
xchg
push
rcrb
loope
dec
in
popa
je
or
in
aam
push
or
stc
add
push
paddsw
rorl
out
and
mov
jg
shlb
outsl
mov
jb
pop
sbb
jnp
mov
sbb
mov
orb
push
call
bound
pop
bound
lcall
sub
fists
adc
xor
mov
ds
add
xchg
jne
nop
bound
mov
adc
ljmp
jmp
dec
addr16
mov
inc
iret
add
mov
cmc
dec
les
rorb
mov
pop
pop
lods
and
dec
xor
cmpsb
mov
jbe
lods
ret
pop
fnstcw
inc
or
push
or
subl
test
add
and
arpl
mov
push
sub
xor
aam
jmp
mov
cmp
lds
mul
ja
ret
xchg
cld
daa
pop
push
or
mov
push
rcrb
dec
insb
fs
dec
or
sub
mov
fsubr
xor
mov
shlb
jae
sbb
ror
mov
xor
inc
int3
sbb
jmp
mov
xor
pop
push
imul
mov
mov
test
cmp
dec
in
pop
lods
subb
push
rcr
das
insb
cmp
out
or
push
fistpll
jnp
repnz
xchg
leave
adc
push
add
shrb
xlat
dec
arpl
dec
cmp
enter
cmpsl
jne
cmova
jecxz
sbb
cmp
adc
lcall
addr16
fcmovnu
js
cmp
outsb
popa
lds
data16
adc
and
iret
clc
mov
mov
dec
jae
xchg
int3
rcrl
adc
lods
cmpsb
xchg
imul
mov
stos
add
fmull
aad
loopne
enter
mov
orb
cmp
xchg
in
lods
push
in
jecxz
mov
aas
sbb
mov
cwtl
cmpsb
xchg
push
fdivrs
dec
cld
xchg
popf
mov
cmp
ja
and
not
sub
clc
out
pop
aas
dec
lods
pop
inc
push
cmp
xchg
or
dec
xchg
add
js
pop
fstl
popa
jmp
adc
inc
sbb
lahf
lods
dec
out
adc
xchg
ret
and
xor
outsl
cs
push
push
jne
rcll
shrb
in
mov
outsb
jg
push
pop
xlat
mov
gs
test
jnp
dec
dec
or
sahf
outsl
aad
or
lcall
pop
sahf
cmpsb
push
xchg
mov
and
or
scas
push
pop
push
push
or
and
adc
bound
xchg
in
cmpsl
les
sub
movsb
push
mov
ret
daa
imul
push
adc
sub
mov
ss
dec
mov
in
jns
push
xchg
push
pop
cmc
xchg
test
clc
jecxz
les
addr16
adc
fs
arpl
fldcw
cmp
rcrl
rclb
ss
or
xchg
fcoms
pop
lods
mull
imul
lret
lds
mov
jne
out
and
nop
sbb
fcompl
sti
mov
call
fsubr
jg
or
in
or
imul
daa
ret
nop
popa
hlt
sub
pop
mov
add
pop
loop
icebp
repnz
cmp
ret
jecxz
push
pusha
pushl
jmp
inc
mov
mov
das
push
mov
inc
mov
xchg
popf
push
mov
jecxz
xor
nop
pop
out
pop
aam
shlb
adc
xor
jmp
pop
mov
sub
inc
fs
fisubrs
xchg
das
in
pop
inc
sbb
pop
inc
imul
mov
xchg
xchg
inc
jb
dec
mov
hlt
mov
jae
and
dec
scas
movsb
dec
push
neg
enter
cmp
pop
pushf
orb
and
lahf
into
fistps
lret
mov
loop
dec
cmpsb
pop
push
addr16
mov
int
sbb
push
les
mov
mov
in
in
into
sub
push
xor
inc
hlt
gs
jo
pushf
daa
inc
popa
mov
sbb
add
lahf
sti
inc
out
dec
mov
dec
int3
cmpsl
outsl
mov
loopne
inc
sub
scas
cmp
jnp
sub
imul
pop
mov
lods
mov
push
shl
and
dec
inc
mov
cmp
cmp
push
and
sub
fstps
jne
outsb
push
pop
sbb
ret
push
sub
cs
cltd
fdivrp
dec
pop
aam
pusha
rclb
call
aad
std
inc
sub
push
aam
lock
mov
pop
imul
das
cmpl
or
rorl
adc
dec
mov
cwtl
push
rolb
mov
jae
scas
test
dec
repnz
push
push
cmp
cmp
movsl
call
cltd
mov
cld
cmp
add
adc
rorl
pop
adc
xlat
call
in
cmp
movsb
mov
mov
push
push
rolb
mov
insl
pushf
jmp
sahf
out
and
repnz
sahf
clc
test
rorb
adc
inc
mov
ret
cltd
adc
cmp
xchg
inc
sub
cmp
cmp
in
sbb
mov
lret
punpckhwd
and
dec
out
pop
pusha
mov
les
inc
adc
jge
sbb
cmpsl
sbb
idivl
mov
push
dec
xor
aaa
mov
js
cmpl
cld
fwait
insl
pop
insb
clc
mov
pop
pop
and
leave
cmp
or
imul
adc
pusha
stos
mov
pop
daa
push
xor
jo
notb
pop
popa
jecxz
fisttpll
add
scas
sbb
cmp
das
lds
sub
sub
lret
and
xor
mov
lcall
lock
cmp
adc
test
xor
xlat
psllq
sbb
stos
and
insl
adc
xchg
in
pop
push
addr16
jns
fstps
mov
adc
inc
xchg
push
xor
pop
xchg
push
jns
sbb
mov
mov
inc
push
sahf
xor
iret
sbb
loope
add
pop
mov
testb
cld
les
push
mov
mov
lea
pop
xor
cmp
cwtl
dec
fadds
or
or
into
insl
pop
xchg
sbb
push
ss
cmpsl
jb
sub
xchg
ss
mov
add
push
sub
adc
jb
lcall
loopne
loope
pop
add
fmuls
mov
mov
push
jp
jns
sbb
sbb
mov
push
mov
shlb
sbb
jne
sbb
into
xchg
mov
call
xchg
pusha
push
cmp
cmp
adc
ret
dec
xlat
leave
enter
insb
adc
xor
adc
sbb
popf
cmp
sub
sub
or
jb
adc
sbb
xor
mov
mov
hlt
cs
mov
fdivl
sub
notb
nop
imul
adc
dec
test
xchg
cmp
xor
bound
shlb
ret
adc
or
ret
bound
pop
and
sub
sti
dec
jmp
jae
mov
jg
shl
pop
icebp
jns
jmp
icebp
sbb
mov
push
call
stc
push
mov
mov
xchg
inc
daa
mov
pop
sbb
dec
pop
mov
push
test
jo
add
ss
popf
pop
cmp
fisubrs
lods
inc
adc
out
cmc
adc
scas
mov
in
enter
sti
xor
rorl
fldt
into
fsubrl
pop
movsl
pop
push
push
aad
cmp
dec
push
in
pop
mov
xchg
xor
mov
sbb
sub
mov
pusha
movsl
lock
push
push
into
sbb
mov
xor
lods
jb
loop
jbe
cld
cltd
adc
sub
in
ss
mov
cli
jb
mov
mov
in
and
or
add
pop
fsubs
dec
cmp
bound
sti
popl
push
aas
dec
sbb
and
ret
sub
inc
lret
dec
or
adc
dec
lock
loopne
lahf
jp
adc
pop
fistpl
or
je
sbb
pop
add
adc
test
xchg
push
insb
sbb
lods
inc
fs
ljmp
in
adc
cmpl
stc
fsub
out
sub
imul
inc
bound
pop
jne
or
bound
hlt
inc
xlat
adc
mov
lcall
gs
lods
mov
jg
adc
xchg
ret
cs
js
jp
lret
mov
out
test
fstl
and
jne
fstpt
cmpsl
add
in
xor
sbbl
ja
xchg
mov
push
add
xchg
scas
sbb
jns
mov
pop
or
sub
rcrl
fs
or
mov
repnz
pop
repz
push
mov
cwtl
xchg
dec
lret
sbb
cmp
addr16
or
jbe
daa
cwtl
stos
xchg
das
mov
movaps
enter
rclb
inc
pop
test
fistpll
push
pop
pop
sub
pop
or
sahf
pushf
mov
inc
add
xchg
scas
std
mov
loop
add
pop
mov
xor
test
push
jnp
dec
cmc
scas
lods
cs
jp
js
push
dec
andl
aad
pop
lds
inc
enter
xchg
cltd
cmp
movsb
mov
cmpsb
aas
stos
stc
jecxz
adc
fildll
pop
xor
jecxz
test
movsl
jo
push
movsb
pop
jecxz
jecxz
out
and
mov
sti
mov
jbe
daa
cmc
nop
js
loopne
popfw
imul
pop
icebp
stos
test
mov
xor
loop
inc
aam
inc
jge
gs
out
fcomps
xabort
xchg
das
pop
push
cmp
aaa
xchg
mov
aam
dec
in
test
lret
push
jns
arpl
inc
push
cwtl
adc
lcall
xchg
lahf
and
jl
fs
movsl
pop
lret
in
push
jge
mov
cltd
xor
js
ror
jno
jg
pop
push
mov
xchg
ljmp
test
imul
add
dec
pop
scas
dec
xchg
popf
stos
movsb
dec
mov
add
mov
fmul
notb
jae
sbb
fiaddl
mov
mov
push
cmc
push
jns
imul
xchg
jns
inc
lea
cmc
icebp
ret
clc
push
adcl
shll
pop
push
imull
push
jnp
ffreep
aam
out
xchg
into
mov
sub
popa
push
stc
je
mov
inc
mov
mov
xchg
mov
sbb
scas
std
jne
inc
popa
or
push
push
mov
adc
xchg
adc
inc
or
or
mov
push
mov
outsb
in
mov
jle
or
and
sbb
push
in
and
iret
jg
int3
mov
mov
mov
rolb
nop
add
mov
fs
mov
mov
lcall
cmpsl
bound
sbb
add
xor
out
xchg
sbb
sbb
pop
sub
add
lock
cmpsb
test
pop
and
shl
mov
mov
mov
cmp
mov
cld
lret
stos
cmpsl
jne
mov
sub
jno
popf
loope
mov
mov
jp
push
dec
fcmovne
sahf
pop
nop
add
push
loop
loop,pn
adc
ds
aad
fisubs
in
lret
mov
jb
dec
repz
in
movsb
dec
out
insl
mov
pop
sbb
xor
dec
mov
xchg
jmp
mov
fwait
add
repnz
arpl
inc
pop
push
fadd
mov
pusha
dec
shr
xchg
mov
mov
mov
loope
int3
int3
dec
jmp
sbb
dec
fucomp
pop
cmp
adcl
mov
mov
and
repnz
mov
bound
fisttps
jne
dec
aad
push
fs
aas
sub
add
push
stc
lret
dec
lret
in
es
jp
jns
mov
and
and
repnz
and
int
xor
inc
out
push
in
test
rclb
jmp
dec
jne
pop
adc
mov
mov
inc
lods
pushf
repnz
clc
in
push
xor
sbb
mov
ds
add
and
loope
movb
mov
test
pop
loope,pt
inc
pop
mov
pop
dec
push
rol
push
stc
sbb
stc
cmp
popf
add
pop
shr
fsubl
mov
aad
je
lods
mov
dec
cltd
adc
jne
xor
mov
xchg
cmp
sti
pop
out
add
adc
ds
xlat
and
ja
push
fs
repnz
dec
push
mov
push
xchg
xchg
mov
out
cmp
mov
push
fmul
test
pop
or
cmpsl
and
inc
stc
push
insl
dec
lods
mov
jns
ret
insl
ja
loopne
fsubrs
and
iret
pop
gs
scas
subb
xchg
sub
xchg
xchg
mov
and
addr16
xor
mov
sbb
jg
repnz
nop
lods
and
adc
mov
adc
xchg
push
je
xor
dec
jecxz
fldenv
lea
or
mov
mov
add
repz
cmp
leave
push
das
push
push
jnp
subl
jge
aas
ret
insb
inc
out
scas
divb
mov
jmp
xor
stc
xchg
lret
fbld
push
cld
xor
lea
ds
nop
orb
pop
fs
and
push
aaa
repnz
xchg
insb
push
ja
dec
mov
sub
inc
jne
insl
pop
cld
test
mov
xor
test
or
xlat
and
repz
mov
pusha
and
int3
js
shrd
push
mov
cmc
mov
mov
sub
xchg
scas
in
cs
mov
adc
fcomps
imul
jb
fwait
call
jbe
data16
sbb
sub
aad
or
not
fimuls
in
jns
mov
pop
mov
push
scas
andl
push
jmp
ljmp
mov
data16
je
push
popa
out
and
cmp
adc
push
sub
pop
xchg
std
mov
dec
dec
pop
xchg
and
jno
sti
frstor
fxch
cs
add
jle
flds
out
jge
inc
dec
repz
cld
in
mov
lods
filds
hlt
addr16
out
xchg
and
sub
mov
mov
cli
adc
pushf
pop
xor
or
xor
push
aam
leave
fiaddl
add
jbe
sub
nop
lahf
or
pop
or
adc
movsl
xchg
mov
lods
xor
and
ljmp
dec
xor
jns
rorb
add
adc
iret
es
hlt
int
mov
inc
fldcw
mov
sub
addl
xor
insb
xchg
pop
inc
insb
sbb
jo
pop
sub
insb
es
pop
aaa
jge
aas
shrl
and
scas
orl
xchg
push
dec
test
es
push
or
test
sbb
hlt
sbb
std
xchg
mov
sub
cmp
or
sti
pop
lret
mov
push
jne
loope
xchg
pushf
and
sub
pop
movsl
ficoms
xchg
fisttps
js
ds
push
sbb
and
and
imul
pop
jae
jle,pt
cs
and
sbb
lock
add
addb
orb
das
push
mov
test
int
daa
add
or
sar
pop
js
pop
mov
insb
xorl
sub
mov
std
sub
jnp
shl
push
xor
inc
popa
cli
or
sahf
fwait
es
jno
push
or
push
enter
jno
les
push
mov
iret
and
insl
mov
mov
loope
fcoml
push
addr16
xor
out
or
xlat
fcomps
xchg
lret
dec
test
mov
mov
jne
xor
fs
mov
jecxz
subb
vrsqrtss
sub
cmp
xchg
or
dec
imul
stc
pusha
data16
dec
incl
sub
incb
lods
jg
out
mov
cmc
ret
dec
mov
push
pusha
push
clc
sarb
vmread
dec
nop
call
lea
das
adc
popf
popa
sbb
cwtl
inc
adc
movsb
daa
push
aad
add
mov
cmpsb
int3
sti
aam
fisttps
xchg
mov
insl
pop
inc
insl
inc
adcl
xchg
push
pop
rclb
mov
sbb
jmp
pop
or
sbb
out
test
sub
cmpsl
or
nop
dec
xor
movsl
mov
jle
mov
aad
jp
sub
or
pop
cmp
mull
movsl
rol
dec
mov
js
aaa
adc
imul
scas
mov
sbb
sub
cmp
mov
and
subl
ja
jge
mov
roll
xor
test
test
mov
fdivrs
mov
fdiv
addl
cmp
push
pop
mov
push
mov
mov
inc
and
mov
xchg
mov
mov
aad
sbbb
xchg
ds
cmp
mov
pushf
push
mov
outsb
mov
rolb
test
mov
sbb
enterw
js
add
mov
or
rcrl
test
or
fildll
mov
push
mov
and
hlt
hlt
push
mov
in
stc
xchg
jmp
add
aas
pop
mov
xor
or
movl
dec
movsb
jecxz
push
dec
fistpl
inc
into
jbe
xchg
lahf
imul
arpl
insb
dec
or
fcmovnu
inc
push
lahf
dec
xchg
adc
xor
cli
loope
jg
cs
fwait
push
js
mov
mov
out
stc
mov
jno
es
sarl
sbb
hlt
movsb
mov
mov
and
fwait
ljmp
test
daa
das
or
clc
movsb
cmp
les
jno
jp
repnz
rcll
stc
pusha
push
pop
pop
fisttpll
cwtl
adc
sahf
mov
jp
js
pop
fcomip
sbb
aad
sub
jnp
cli
test
imul
mov
add
outsb
add
or
std
ss
cmpl
pop
adc
lret
jb
sub
lahf
mov
ficoml
shlb
mov
leave
mov
test
arpl
xor
sahf
aaa
dec
lcall
repz
push
push
xor
inc
nop
out
scas
push
sub
shrb
add
stos
jecxz
jae
jno
popa
cmp
aam
repnz
insb
sbb
jle
repnz
enter
and
loope
rol
adc
scas
out
es
fidivrl
pop
mull
jno
cli
dec
pop
add
lcall
hlt
or
cmp
mov
xor
imul
or
data16
arpl
fisubs
out
pop
int
fistps
ss
adc
add
push
enter
or
mov
cli
cld
sahf
aas
rcrl
push
fisubrl
filds
inc
fsubrl
xchg
arpl
pop
inc
insl
mov
jmp
imul
hlt
mov
and
call
mov
sbb
dec
ljmp
add
fs
mov
cmp
dec
adc
add
cltd
push
ffree
push
jl
gs
sbb
pop
pop
testl
scas
mov
movsb
cmp
dec
loopne
test
push
pop
jl
inc
sahf
into
sbb
loop
mov
jmp
mov
call
add
sub
sahf
or
jecxz
lret
inc
sahf
call
pushf
jmp
mov
or
in
pop
fs
adc
and
pop
sbb
es
cmp
sbb
enter
movsl
test
jecxz
mov
es
inc
lods
and
scas
add
or
lahf
xchg
dec
or
sbb
sub
pop
xchg
dec
mov
add
jae
cmc
mov
adc
stc
mov
bound
jnp
jo
adc
aad
and
stos
or
cwtl
mov
xorb
mov
lahf
iret
mov
adc
push
sahf
negb
or
jecxz
scas
adc
mov
sbb
dec
sbb
and
cltd
mov
in
scas
pop
lock
js
scas
jle
dec
jmp
inc
or
fnstsw
out
mov
ljmp
and
xor
call
inc
adc
repnz
jo
lcall
xchg
mov
test
stos
imul
pop
incl
outsb
hlt
adc
cmp
in
adc
mov
pop
jno
lock
out
push
movsl
insb
adc
cmpb
cmp
mov
movsl
mov
pop
cmp
jb
jl
mov
dec
cmp
addr16
push
mov
inc
aam
sub
in
xchg
or
gs
js
idiv
rcrl
inc
inc
pusha
push
mov
xor
lea
arpl
popcnt
mov
cmpsl
push
jmp
and
into
add
bound
hlt
mov
imul
mov
jecxz
enter
stos
into
xor
movsb
sbb
stc
cld
sbb
cmpsb
xor
repnz
pop
xchg
ficoml
xor
inc
fwait
test
sub
movsb
jbe
sbb
xchg
stos
idiv
mov
jmp
mov
pop
mov
jo
rorl
and
dec
push
adc
jbe
arpl
adc
push
mov
cld
adc
mov
scas
aam
and
sbb
jbe
sahf
inc
and
aas
add
fistpl
mov
add
cmp
push
mov
repz
rclb
mov
pop
xchg
sahf
nop
xchg
xor
ljmp
xorl
or
xlat
and
mov
lret
fsubrs
rep
popa
push
jecxz
or
add
xor
push
jp
sub
mov
add
lret
je
dec
add
add
daa
dec
mov
push
mov
sti
mov
insl
ret
jecxz
push
push
mov
dec
mov
xchg
test
mov
cwtl
pusha
push
testl
xor
ds
leave
inc
rcr
mov
pop
mov
clc
push
xor
aaa
push
rorb
cli
cmpsb
fst
pushf
or
push
sub
aaa
mov
inc
cmp
dec
sub
arpl
inc
scas
pop
imul
frstor
mov
sbb
cmp
mov
jbe,pt
lea
push
xor
mov
and
into
test
mov
shufps
jno
jbe
testl
shl
in
sub
and
imul
neg
daa
mov
je
cs
xlat
cwtl
jecxz
movsb
mov
mov
je
mov
mov
lds
mov
lret
cmp
sub
pop
mov
pop
pusha
into
or
popa
adc
mov
jno
cmp
push
cwtl
jecxz
inc
pop
ffree
adc
loop
inc
test
aam
sti
pop
loopne
inc
mov
cmp
lea
sbb
jmp
mov
lea
inc
xor
addr16
mov
jmp
je
mov
mov
arpl
mov
repnz
pop
orl
loopne
in
inc
dec
adc
lock
xor
popa
fnstenv
add
jmp
dec
inc
rclb
fiaddl
cmp
dec
sbb
shrl
fsubrl
loop
fwait
xor
int3
aad
xchg
mov
mov
jmp
mov
icebp
adc
adc
lret
mov
adc
sbb
test
test
std
rcll
dec
rclb
and
gs
cmp
mov
aam
mov
inc
scas
in
cmp
call
ja
jle
imul
adcl
aam
mov
fldenv
xor
into
add
nop
outsl
cmp
pop
mov
sbbl
adc
movsb
repz
sub
int3
movb
jecxz
cld
mov
icebp
cmc
adc
inc
xchg
loope
adc
jg
rclb
shlb
in
cmpsl
repnz
in
imul
jle
mov
xchg
shrl
mov
aaa
cmpsb
push
jnp
pop
sti
or
ret
stos
dec
dec
mov
cld
mov
imul
js
into
mov
mov
push
push
sub
fisubs
and
add
repnz
lea
cmp
jmp
xor
out
loop
sbb
sahf
lea
and
push
aad
test
mov
pop
pop
push
shll
ret
push
mov
insl
jae
jp
xchg
cmp
push
cmp
fmull
dec
add
jg
out
leave
push
outsb
mov
stos
xchg
adc
jg
and
cltd
jo
mov
sub
scas
fiaddl
ds
push
repz
xor
or
add
test
sub
sbb
clc
sbb
xlat
mov
jge
stos
out
int
add
outsb
pop
push
add
mov
pop
xchg
lods
xor
add
xchg
enter
shl
sub
push
pop
fcompl
add
nop
test
scas
mov
ret
jecxz
inc
jae
pop
mov
cmpsl
mov
loopne
cmp
setns
std
push
mov
push
dec
test
mov
pop
or
int
cmpsl
subl
inc
inc
and
sub
ficomps
popf
fcmove
sbb
mov
push
jp
jno
rorb
lock
test
pop
mov
xor
loop
mov
sbb
adc
adc
add
mov
cmp
int
dec
sbb
push
ljmp
addr16
sub
scas
push
mov
xchg
sbb
pusha
ret
outsb
insb
icebp
into
adcb
insb
sub
sbb
push
bnd
inc
cmp
cwtl
movl
and
out
jnp
push
inc
leave
pop
jnp
movsb
push
pushf
jae
clc
inc
push
sarb
jnp
mov
add
inc
pop
push
in
cmc
in
sti
sarb
mov
cld
fcmovu
push
stos
outsb
mov
cmp
xor
and
mov
sahf
push
fidivl
pop
mov
je
shl
or
add
pop
sub
sahf
mulb
int
andl
jp
sbb
jbe
pop
out
inc
pop
out
fmull
dec
popf
mov
adc
fistps
js
sarb
ret
fnstenv
xor
test
pushf
cld
imul
cmc
icebp
fdivl
push
mov
adc
imul
pop
xchg
dec
testl
add
ficoms
and
vmovaps
out
jns
dec
dec
dec
int3
mov
jae
dec
mov
cmp
mov
dec
push
lock
cmp
sahf
mov
pop
stos
cmp
add
pop
stc
aaa
adc
ja
dec
xchg
xlat
int3
shlb
or
pop
mov
aaa
pop
xchg
imul
dec
adc
or
cmpsb
or
mov
or
cmp
rorl
divb
cmp
xchg
movsl
cmpl
mov
das
mov
jo
stc
adc
lahf
test
inc
dec
xor
pop
push
iret
pop
xor
in
ljmp
in
test
adc
les
sbb
clc
mov
adc
out
sbb
pusha
ret
sub
icebp
enter
add
ret
mov
sbb
pop
dec
push
loopne
jmp
repz
stos
popf
sbb
xor
push
sarb
jbe
mov
arpl
imul
call
dec
sahf
clc
outsl
dec
adc
and
gs
out
jno
and
test
insl
or
mov
test
dec
lods
test
push
gs
ret
fisttpl
in
and
xor
cmc
dec
push
dec
mov
or
sub
xor
ret
add
lahf
cmc
pop
mov
push
dec
sub
jns
sbb
xchg
xchg
fcoml
add
bound
add
call
scas
out
cmpsb
jl
roll
push
into
mov
in
fisubl
jg
dec
jecxz
mov
add
adc
stos
xchg
stc
mov
mov
mov
lcall
mov
jb
sti
mov
dec
and
movsb
push
xor
mov
daa
nop
pop
push
scas
enter
mov
aas
shll
xchg
dec
ja
push
inc
stc
cmpsl
bound
mov
add
sub
lret
nop
add
xchg
push
loop
lret
add
mov
and
sti
mov
cmp
cwtl
jl
ljmp
xlat
movsb
jo
mov
gs
jecxz
mov
rcrb
mov
outsb
xlat
inc
xchg
xor
subb
mov
cmpsl
fidivl
loop
jp
sub
mov
mov
int3
push
sub
daa
out
or
mov
cmp
jo
inc
sub
mov
sbb
inc
mov
pop
or
sbb
pop
mov
std
adc
shrl
mov
or
lds
or
je
imul
mov
rorb
xor
cmp
mov
dec
ret
mov
jne
cmpsl
mov
mov
mov
inc
push
xchg
fcomps
dec
adc
cmp
inc
mov
fists
dec
push
iret
pop
jnp
gs
cmp
daa
and
fsubrs
mov
mov
lret
sub
mov
inc
and
sbb
outsl
mov
dec
jbe
test
fbstp
xchg
jne
dec
push
sub
xor
mov
andl
cmp
pushf
mov
xchg
outsb
lods
les
xchg
pop
or
loopne
sub
aas
popa
enter
add
insl
sub
cmpl
ja
cmp
push
mov
mov
addb
aaa
lea
fmull
pop
lods
and
arpl
pop
data16
rorl
pop
aad
cmp
jecxz
sbb
int
movsl
jb
test
push
enter
dec
cltd
xchg
loope
movsl
adc
inc
sahf
xchg
pop
arpl
test
adc
sub
test
pop
cs
scas
mov
or
pop
int
and
xor
adc
mov
lret
sbb
sub
insl
daa
mov
xchg
xlat
test
int3
div
jg
mov
divb
pop
cltd
cmp
mov
aaa
push
or
leave
push
sbb
and
sbb
jb
cmpb
lock
subl
push
pop
sbb
sar
int3
push
push
or
repz
xor
xchg
sarl
repz
adc
mov
inc
movsl
movsb
cld
or
lods
cmp
rolb
xor
cwtl
scas
xor
add
pop
pop
jmp
push
cmp
pop
push
sahf
add
jle
hlt
es
jmp
jo
inc
stos
push
dec
pop
outsb
xchg
xor
push
ja
cmp
mov
sbb
repz
je
divb
sahf
pop
mov
xlat
lahf
sbb
jnp
xor
stos
sahf
loope
push
sbb
lcall
jle
int
sub
xchg
cmp
mov
hlt
movsb
pop
popf
ja
cmp
mov
adc
sub
lock
cmp
lds
pop
mov
inc
mov
aam
jl
mov
addb
imul
test
aaa
outsb
sbb
mov
dec
pop
mov
pop
insl
fdivs
movsl
xchg
and
stc
imul
adc
test
inc
pop
lds
add
pusha
cltd
enter
lret
imul
int
sbb
lods
jmp
shr
lods
dec
mov
bound
test
jae
std
mov
int3
insb
int3
dec
xorb
fsubp
xchg
push
cmpsl
xor
es
repz
dec
jp
gs
pop
aad
xchg
ret
in
psubusb
lahf
fwait
aaa
or
sbb
lods
sarb
mov
push
add
in
fisubrl
add
adc
call
dec
shlb
jp
sbb
and
inc
xchg
subl
aas
and
push
into
push
mov
mov
mov
lds
smsw
pop
pop
mov
pop
cmp
jbe
popf
shr
fs
push
mov
jl
mov
fdivs
add
mov
cmp
sti
das
cwtl
pusha
cmp
test
int
adc
sarl
cmp
mov
add
rcrb
rol
push
dec
pop
xor
out
lahf
add
cmp
jecxz
pop
inc
jmp
cmp
mov
fucomip
ja
clc
push
dec
jmp
fcomip
sbb
dec
push
sub
and
loopne
sbb
mov
inc
mov
push
je
mov
aam
js
mov
nop
adc
dec
fnstenv
jno
xor
in
pop
cwtl
mov
popf
cmp
push
in
mov
out
ljmp
pop
xchg
push
mov
repnz
add
sarb
test
and
int
cltd
sti
jne
dec
out
scas
lea
xchg
pop
xchg
inc
inc
push
sahf
mov
test
fcomps
jnp
push
mov
add
lods
mov
sub
mov
scas
cwtl
incl
cmp
int3
mov
cmpsb
push
int3
ljmp
jb
and
pop
cmp
ret
push
stos
mov
or
fdivl
mov
push
es
fistl
add
sub
xchg
gs
pop
mov
jne
ljmp
js
pop
lods
into
insb
adc
aad
aaa
mov
je
enter
mov
cmc
lock
cwtl
stos
xchg
cltd
pop
pop
sahf
jnp,pt
push
sahf
incl
cltd
ja
inc
xchg
pop
and
repz
fisttpl
cli
mov
popf
push
test
mov
je
add
mov
xor
imulb
iret
scas
mov
or
xlat
addl
pop
mov
jae
arpl
mov
xchg
das
jge
lock
mov
jecxz
cmp
pop
fstps
enter
int
adc
and
jns
outsb
insl
xchg
jmp
movsl
iret
cwtl
lret
in
int3
cmpb
jecxz
jecxz
js
je
sub
xchg
imul
push
jno
sub
fsubrl
mov
mov
clc
int
test
roll
in
insl
lock
mov
iret
jno
xor
xorl
dec
outsb
fldcw
lcall
orl
sbb
xor
mov
add
xor
xchg
mov
sub
shll
xchg
pop
imul
lods
jb
fcompl
outsb
adc
and
dec
mov
adc
outsl
and
dec
cmp
pop
add
xor
xor
mov
or
ftst
mov
jp
sub
or
data16
mov
jle
outsl
das
add
adc
sub
cmp
mov
xor
inc
cmpb
inc
mov
jae
jne
xchg
xor
cmpsl
lock
sbb
ljmp
pop
outsb
out
out
ljmp
pop
mov
adc
push
sbb
mov
push
fcoms
enter
push
adc
leave
fidivrs
and
fwait
sub
push
popf
in
imul
mov
push
mov
add
out
mov
stc
xchg
in
ficompl
rcll
jg
mov
jg
bound
xchg
mov
sbb
mov
mov
clc
jae
daa
lds
out
inc
fwait
push
call
inc
scas
mov
int
sar
out
call
out
xor
inc
push
or
movsb
jne
fs
stos
lods
fs
cmp
daa
repz
in
mov
dec
fst
fidivrl
in
stc
jnp
xchg
ljmp
rcr
push
jmp
mov
jo
and
mov
xchg
pop
and
jbe
dec
filds
xchg
icebp
repnz
dec
fimull
mov
inc
sbb
jae
out
add
dec
add
lock
mov
popf
data16
shl
addr16
jle
xor
sbb
lock
push
in
sbb
push
lods
xor
push
test
popf
jne
inc
sbb
fucomp
xchg
adc
dec
pop
push
std
jae
aas
dec
stos
sub
je
dec
cmpsb
add
mov
push
inc
pop
inc
sti
xor
insl
test
cwtl
pop
mov
mov
pop
dec
int
push
shrl
xchg
shll
nop
inc
test
or
push
das
repnz
pop
es
scas
jp
stc
pop
push
xor
push
decl
add
fimull
iret
and
jg
inc
in
fisttps
or
xchg
mov
arpl
jl
jl
or
mov
xor
push
insl
outsb
push
lea
mov
cmp
xchg
test
sahf
fsubs
xlat
imul
cmpb
jg
and
adc
inc
mov
loop
aad
dec
andb
pop
ljmp
andl
sub
mull
dec
mov
ja
mov
repnz
add
icebp
add
lods
out
dec
andb
cmpsl
xchg
aad
ss
dec
arpl
fnop
sub
outsl
dec
pop
pop
cmp
idivb
jo
cmpb
pmullw
push
push
push
push
xlat
push
xor
mov
movsl
jns
adc
dec
test
int
stos
mov
cli
dec
mov
cmc
sub
sarl
mov
inc
sbb
jno
les
fs
ret
std
sub
imul
mov
je
lahf
scas
shlb
pop
mov
cld
jbe
scas
shll
jle
insb
in
adc
lahf
add
add
jns
sub
and
sti
pop
inc
pop
fstps
cmpsb
push
bound
ljmp
add
pop
jns
movsl
adc
sbb
cmc
mov
pop
daa
xchg
cltd
push
xorb
gs
dec
xchg
sub
test
sbb
ljmp
int3
pop
sbb
dec
out
ret
clc
jbe
sub
int3
xor
push
das
sahf
in
add
bound
fldcw
inc
add
inc
into
mov
and
push
mov
inc
cs
push
dec
shlb
mull
aam
mov
mov
call
nop
pop
out
pop
int
in
rcrb
mov
or
pusha
iret
jg
fwait
sbb
sbb
pop
inc
inc
jg
test
add
fldenv
pushf
repnz
xor
and
shrb
out
iret
add
jne
ljmp
mov
xchg
dec
outsl
mov
call
scas
sub
loope
mov
mov
pop
adc
add
inc
gs
mov
pop
lret
mov
inc
xlat
aad
dec
sub
push
and
jno
cs
in
or
dec
sub
fsubrl
test
mov
xor
scas
mov
adc
mov
mov
imul
fnstcw
sbb
shlb
mov
xor
pop
dec
add
out
add
sub
aas
sbb
or
pusha
cmp
stos
add
and
mov
pusha
arpl
repnz
pop
adc
dec
test
sbb
jno
inc
add
filds
pop
ljmp
repnz
mov
push
std
sub
mov
rolb
xor
insl
pop
dec
push
fisttpll
cld
cwtl
mov
loopne
sbb
bound
lods
mov
cmc
jp
repnz
xor
repnz
mov
lret
add
pop
aad
add
dec
push
xor
test
test
mov
out
xor
popf
mov
xchg
incb
xchg
add
pop
inc
fs
mov
pop
and
jne
xchg
sti
repnz
cli
cmc
dec
mov
lods
sub
push
stos
pop
push
sub
out
lcall
and
fistpl
in
push
call
loopne
mov
xor
cwtl
push
cmc
inc
inc
pop
dec
js
and
ret
aas
mov
aaa
and
test
stc
sub
lock
cld
fiadds
push
and
fistpl
dec
add
sub
loop
call
pop
nop
add
xor
xchg
or
and
cmp
xor
sub
xchg
out
mov
cmp
sbb
mov
mov
insl
lods
mov
lock
fldl
sbb
test
aad
jp
inc
insb
sub
and
shll
sub
push
add
shl
stos
mov
push
and
inc
sbb
imul
das
js
imul
sub
cmp
dec
jbe
arpl
leave
call
xor
or
add
xchg
xchg
out
sbb
mov
add
scas
sub
inc
jmp
mov
pop
enter
dec
mov
lock
jp
popa
std
pop
stos
push
mov
mull
pop
dec
xlat
and
outsl
sbb
in
fisttps
lahf
sub
dec
pop
xchg
mov
adc
loope
push
fsubl
jge
arpl
ljmp
jecxz
orl
inc
iret
scas
pop
mov
push
xlat
imulb
stos
mov
push
int
int
sbb
ss
xor
divl
jle
add
sbb
xchg
mov
xchg
jp
ja
cli
add
out
incl
add
rolb
cmpsb
mov
mov
fcoml
pop
repnz
mov
xchg
les
xchg
sbb
lock
imul
sarl
ljmp
sub
mov
xor
cmpsl
test
inc
divb
cmp
add
mov
mov
cmpsb
xchg
sub
mov
sbb
inc
lods
lds
je
jg
add
jge
fcmovbe
in
out
das
xchg
xchg
stos
xchg
les
xor
test
xchg
lahf
test
pop
fildl
dec
insl
mov
xorb
sub
jp
xchg
f2xm1
stc
mov
pop
jnp
rol
mov
cmpl
push
leave
mov
dec
arpl
or
push
mov
or
jbe
in
cmp
fiaddl
jp
popa
cmp
ljmp
jmp
dec
xor
rorl
movb
jle
cmp
clc
cmp
icebp
cli
or
xchg
aam
or
jl
lahf
testl
dec
sub
sbb
mov
orb
dec
xor
jne
mov
popa
or
fistps
cmp
lcall
mov
fwait
mov
jg
movsl
mov
testl
div
cmp
add
mov
scas
lds
shll
or
scas
jp
rorb
ja
dec
out
int
iret
push
add
aas
idiv
mov
xchg
cmpsl
mov
mov
pop
push
aaa
xor
stc
mov
into
clc
sti
xchg
loope
rorl
sub
pop
stc
xor
cmpsl
test
aam
pop
mov
pop
lea
inc
idivb
stc
dec
sar
pushf
or
cwtl
jb
push
sbb
int3
mov
cmc
or
mull
imul
mov
fldenv
ljmp
cmc
sub
loopne
std
icebp
pop
dec
in
add
push
dec
mov
pop
pusha
out
imul
mov
jo
inc
jnp
jle
pushf
pop
or
and
xor
mov
pop
rclb
stc
dec
je
and
lea
imul
pushf
adc
fmull
bound
idivb
nop
je
andb
lea
insl
mov
mov
je
adc
dec
cmc
pop
movsb
scas
mov
mov
ds
int3
jns
dec
fld
push
push
cmpsl
push
lds
jge
adc
shll
sti
leave
or
je
pop
sbb
fadd
in
mov
adc
push
xor
fisttps
sbb
insb
fadds
add
dec
inc
out
insb
xchg
into
movsb
outsl
jne
nop
add
sarb
cmc
movsl
std
sbb
je
cmp
jl
xor
stc
xor
sub
dec
jns
fimull
pop
ss
pop
sbb
icebp
pop
movsb
or
and
inc
mov
ficomps
jle
adc
popa
out
add
sahf
aad
push
inc
sub
sbb
test
mov
dec
xor
sub
xor
scas
into
call
or
adc
inc
enter
mov
test
push
inc
adc
in
dec
pop
jg
scas
je
jns
into
cmp
mov
add
or
dec
xor
clc
flds
dec
cmp
xor
out
and
mov
out
jbe
scas
mov
ret
sbb
mov
sti
test
dec
xchg
test
sub
pushf
push
and
jmp
gs
adc
pop
dec
fcoms
loopne
cmp
inc
ret
enter
bndldx
outsb
repz
cmp
cmpl
imul
mov
jl
aaa
test
and
test
in
cmpsl
addr16
push
das
shl
addl
push
dec
push
arpl
cmp
loope
daa
mov
imul
jle
mov
mov
jp
pop
iret
jo
adc
les
mov
cmpsl
jno
lds
jg
aad
add
mov
fisttps
mov
lahf
aad
cmp
pop
je
jl
repnz
mov
fcoms
mov
adc
xchg
das
jae,pn
push
pop
rclb
fldenv
add
mov
arpl
cmc
pop
dec
into
cmpsb
jle
xchg
pop
ja
inc
enter
into
hlt
insb
and
jnp
add
xchg
dec
mov
jle
jae
and
inc
pop
cld
rclb
jp
inc
mov
cwtl
repz
sti
arpl
pop
cmp
fcoml
lret
repnz
jle
out
loop
mov
into
lahf
out
or
sbb
addb
into
or
pop
mov
cmp
inc
shll
roll
test
add
mov
xchg
lods
in
sti
xlat
pop
jg
add
icebp
mov
mov
fbstp
sub
fnstenv
dec
add
arpl
loopne
leave
sti
push
popl
test
in
mov
xchg
rorl
mov
lahf
pop
adc
fnstsw
push
imulb
mov
cmc
pop
and
rorl
dec
fstl
mov
shll
arpl
test
push
jge
popf
ds
lods
xor
and
int3
repnz
js
dec
test
data16
popa
sub
adc
adc
hlt
cltd
xchg
sub
sbb
dec
adc
jecxz
mov
sbb
mov
fwait
outsl
push
mov
jne
sarl
imulb
push
loope
push
pop
jo
jecxz
sub
cmp
ret
leave
mov
jge
fs
scas
outsb
gs
fisubrs
addb
dec
push
cmpsb
sub
ds
inc
out
mov
add
loop
mov
mov
sbb
fldenv
sbb
cld
lahf
das
das
xor
in
adc
enter
je
and
xchg
inc
xchg
shrb
cld
xorl
pop
scas
dec
arpl
mov
movsl
push
xor
or
out
test
repnz
call
imul
movsb
outsl
call
sete
cmp
pop
mov
lret
mov
inc
scas
jb
mov
in
repz
loope
sarb
inc
sub
lds
jb
inc
add
pusha
mov
pop
scas
cli
jne
jbe
lock
es
icebp
fdivrs
notl
push
mov
arpl
xor
mov
mov
and
adc
aaa
cld
and
add
sti
je
inc
lahf
sbb
sbb
scas
and
inc
pop
je
adc
sbb
jp
xor
push
adc
dec
insb
test
push
or
aam
repnz
hlt
cld
icebp
nop
pop
sub
dec
push
cmp
fsubrs
hlt
mov
pop
push
inc
mov
dec
ljmp
std
dec
sbbl
mov
shll
std
sub
jae
popf
data16
push
fsub
fmulp
mov
ja
mov
or
loope
mov
lods
fldenv
push
cmp
mov
cmpsb
mov
dec
into
adc
jnp
cmp
inc
jge
inc
inc
aas
jb
std
mov
xor
leave
push
adc
mov
in
aas
stos
addr16
out
pop
das
jecxz
arpl
andl
dec
stos
push
sbb
or
adc
cwtl
ljmp
leave
mov
lods
dec
add
pushf
fdivrl
test
jnp
sbb
and
mov
mov
aam
xor
add
pop
jle
and
xchg
mov
mov
in
imul
std
dec
pusha
aam
mov
fmull
cmp
addr16
dec
add
insb
pop
push
sbb
jg
fimull
call
idivl
add
decb
fimull
sub
mov
mov
sbb
jg
dec
xor
cs
mov
stos
sub
lret
and
pop
mov
mov
mov
pushf
pop
into
hlt
arpl
mov
enter
enter
or
out
outsb
mov
int3
js
lods
or
roll
std
cmp
sahf
mov
pop
roll
dec
inc
push
inc
mov
xor
xchg
mov
xor
mov
pop
push
sbb
andl
xchg
pop
sub
pop
dec
sub
cmp
sbb
aam
mov
sbbb
js
pop
hlt
push
cmp
mov
lahf
sub
mov
jnp
sti
add
loop
cmp
shrl
push
insl
jae
dec
call
adc
in
or
movsb
lret
add
addr16
sub
push
mov
cs
fstp
xor
sti
cmpsl
outsb
push
sbb
adc
gs
rorl
mov
sub
inc
lcall
adc
jae
jae
add
negl
nop
pop
inc
add
xor
jno
dec
push
out
into
cmp
push
rcr
iret
pushf
lret
icebp
sbb
stos
push
jle
out
mov
mov
sbbb
lea
push
cmp
mov
mov
push
adc
push
xchg
cmpsb
pop
fmul
sbb
rolb
stc
inc
lds
ds
int3
sub
cmc
jmp
mov
xlat
cmc
dec
stos
sub
hlt
inc
push
jge
aam
cmp
cltd
or
jmp
rorl
in
add
leave
cmp
loop
adcl
inc
mov
js
mov
mov
fdiv
or
outsl
fcoml
xchg
rolb
push
jl
js
jmp
sbb
jmp
fs
popa
push
inc
sbb
push
jl
sub
lea
adc
les
aam
decl
xchg
cmp
stos
cmp
jp
andb
popl
ljmp
xor
or
push
sub
xor
push
lret
fstpt
lock
or
insb
cld
jo
bound
icebp
sub
xchg
scas
pop
ja
fbstp
pop
xchg
or
xchg
push
scas
xchg
xchg
and
mov
subl
inc
pop
popl
or
mov
jge
xor
mov
loopne
mov
inc
sub
fsubs
lcall
out
fsincos
pop
adc
xor
xchg
pop
dec
and
in
mov
add
mov
loop
xor
xchg
std
xchg
xor
add
xlat
sub
sbb
popa
sbb
jns
cmpsb
mov
xor
jo
cmp
enter
clc
out
enter
pop
dec
jbe
daa
popf
pop
fs
sbb
sbb
pop
fldcw
leave
xchg
int
in
or
mov
cmp
add
sbb
lcall
lods
out
inc
ljmp
insl
or
jne
mov
mul
add
out
pop
or
pop
jge
out
fisubrl
call
jp
shr
in
mov
test
xor
xor
fisubl
into
or
push
pop
fnstenv
push
pop
loope
or
ja
add
cmpsl
push
adc
mov
gs
sbb
popa
cmc
loop
mov
adcb
testb
sub
push
pusha
loop
xor
fisttps
lods
cmpsl
xor
pop
notb
mov
and
adc
ds
movsb
jl
lret
xchg
cmpsb
aam
das
scas
aaa
nop
stos
cmpsl
pusha
movsl
jmp
jl
test
repnz
sar
add
inc
mov
xchg
pop
add
lock
mov
mov
aad
sub
repz
mov
push
or
faddp
xchg
sub
push
xchg
loop
faddp
loope
mov
mov
shrb
aam
xchg
dec
mov
or
mov
ja
jae
icebp
push
pop
call
sti
add
aam
loope
xchg
jmp
dec
cmp
shrb
xor
push
or
jmp
fwait
cmp
and
jg
aas
mov
incl
adcb
add
and
dec
xchg
out
inc
mov
leavew
mov
jo
adc
inc
cs
xchg
jle
decb
pop
hlt
inc
inc
cwtl
push
cmovno
icebp
lea
movsl
leave
mov
insl
xor
sub
sub
dec
mov
loop
ret
int3
cmp
jecxz
mov
nop
fs
sub
mov
es
cltd
int3
lods
xor
ja
inc
mov
popa
xlat
movsb
into
jb
sub
or
sbb
mov
xor
dec
push
stos
rcl
mov
into
inc
xchg
aam
ljmp
shrb
jb
into
in
fdivs
ss
cli
ljmp
ret
movsb
lret
sbb
dec
sub
inc
cli
iret
mov
scas
mov
sbb
loop
sarb
adc
popl
mov
push
pop
rol
loopne
std
stos
and
mov
adc
sarl
sbb
xchg
mov
outsb
fdivrl
pop
mov
jae
push
adc
inc
xchg
or
lret
mov
or
jnp
inc
leave
leave
mov
xchg
cmp
dec
aaa
pop
mov
pop
jne
pusha
xchg
orl
xchg
sbb
push
mov
mov
ret
pop
mov
shlb
test
ret
mov
inc
cwtl
leave
adc
js
jnp
inc
pop
push
int3
add
sbb
push
cltd
adc
out
fcomp
je
cmp
xor
xchg
mov
mov
lods
mov
cmp
call
adc
mov
cli
cmc
xor
lret
repz
pop
in
push
data16
mov
jno
movsb
xchg
repnz
subl
jo
push
and
movsl
insb
lahf
shr
mov
dec
imul
mov
mov
dec
ss
shl
negl
ret
xor
xchg
pop
dec
add
imull
in
mov
xchg
jne
xchg
adc
push
inc
or
push
cmp
xor
jecxz
stos
inc
push
scas
out
lret
pop
sub
icebp
es
push
jb
int
push
pop
hlt
mov
mov
insb
mov
pop
fsubl
dec
mov
mov
imul
push
psllw
scas
fbld
in
jge
fnstcw
mov
adc
xorb
iret
iret
fnstcw
add
das
adc
hlt
js
add
mov
movsb
lret
mov
lcall
push
lea
shlb
fistl
mov
fimull
popf
stos
pop
loop
fidivrs
mov
and
cmp
test
push
mov
or
pop
lea
add
pushf
sbb
icebp
aaa
dec
test
mov
scas
clc
mov
cmc
pop
jecxz
dec
in
cmpl
dec
mov
lds
fucom
jns
and
mov
rcl
jge
cmp
pop
jmp
sbb
dec
adc
pop
test
xrelease
mov
xor
lahf
in
mov
jecxz
shlb
repnz
jl
mov
sub
jp
es
test
js
pop
pop
jmp
adc
cmp
arpl
mov
mov
arpl
nop
jecxz
add
and
sbb
dec
bound
push
cmc
xor
jb
orb
pop
pop
jecxz
insb
out
push
icebp
pop
cmpsb
push
movsl
and
das
inc
es
dec
dec
mov
pop
xor
loopne
adc
sub
fs
je
sub
into
nop
mov
sub
lret
sbb
dec
mov
js
ret
shlb
aam
outsb
movsl
fsubs
cmpsl
cmc
push
cli
mov
xor
out
add
imul
sub
xchg
faddl
inc
xadd
sbbb
pushf
ds
arpl
out
rol
mov
rcrl
repz
ret
and
loopne
mov
cmpsl
push
cmp
pusha
hlt
mov
addr16
fucomi
sub
inc
das
mov
and
or
add
ficomps
sahf
inc
inc
fisttps
push
int
xchg
jmp
imul
stos
scas
push
call
xorb
mov
rolb
push
inc
ret
mov
xchg
push
cmpsb
inc
in
sbb
inc
mov
sbbb
push
imul
das
sub
insb
clc
sub
fstl
jmp
dec
cmp
mov
mov
mov
dec
hlt
push
sub
mov
lret
push
popf
dec
or
sbb
push
xchg
push
inc
ficoml
cmp
cmp
sub
sub
inc
add
fwait
xor
pusha
lret
rcrl
rcrb
in
aam
jg
sbb
pop
jno
clc
cli
push
popa
inc
sti
mov
outsl
mov
pushf
xchg
inc
shl
xor
mov
mov
dec
cmp
shrb
jbe
jno
xor
and
xchg
shll
or
dec
clc
mov
lock
sbb
cmp
pop
shrl
ja
mov
shrl
loope
jl
repnz
mov
push
fstpt
andb
add
push
gs
pop
xlat
pop
out
mov
ret
jbe
xor
data16
sub
and
pusha
jo
in
mov
dec
cmp
sbb
sub
sbb
scas
push
and
jbe
jl
xchg
frstor
sahf
fcoml
insb
cmp
jnp
dec
shll
mov
or
add
and
clc
fs
aas
pop
jg
ret
les
cmp
dec
rcll
pop
mov
dec
divl
cltd
cmpsb
movsl
jbe
ja
pop
pushl
mov
push
xor
adc
dec
xchg
xchg
rclb
push
pusha
xchg
inc
cmpsb
insb
inc
jp
or
addr16
enter
xor
aam
in
add
xor
dec
sub
and
push
or
lret
data16
push
fsubrp
loop
daa
xor
in
jle
mov
sub
cmp
into
iret
push
sub
mov
int3
cltd
jae
int
repz
push
push
inc
pop
mov
cmp
decl
dec
mov
subl
dec
inc
push
in
lret
cld
test
lea
loopne
lahf
loope
fsubrs
cmpsb
das
adc
jl
cmpl
stos
mov
mov
pextrw
je
leave
popa
lret
lret
add
xlat
mov
push
ss
mov
clc
push
add
cwtl
call
lcall
js
mov
into
imul
jl
cmp
or
push
cld
test
xchg
cmp
sbb
or
cmc
cmp
rcrb
xor
test
mov
jle
mov
mov
idiv
mov
aaa
das
shll
sar
xor
movsb
je
mov
into
sbb
jp
es
fnstenv
mov
lods
and
cwtl
add
mov
mov
movsb
sub
rolb
ret
sti
add
cmp
push
imul
add
insl
sarl
add
jecxz
imul
push
mov
mov
inc
push
mov
iret
push
popf
jg
mov
adc
subb
addl
cld
add
fcoms
xor
dec
mov
pop
fucomp
mov
test
adc
out
scas
sahf
insl
cmpl
bnd
pop
adc
lret
mov
xor
imul
ret
mov
add
fnsave
pop
ja
adc
jo
ja
ja
aas
enter
aas
loopne
adc
inc
dec
pop
jp
aaa
add
je
push
fs
stos
inc
add
adc
rclb
fwait
js
mov
enter
mov
pushf
cli
insb
lock
rcr
test
adc
xchg
imul
js
in
ja
cmpl
sbb
fwait
push
xlat
pop
imul
in
aam
mov
and
inc
pusha
sub
jp
mov
fistpl
testb
insb
test
bound
mov
js
mov
fdivrl
push
icebp
pop
test
inc
rorb
rcrl
lods
sbb
cmp
push
pop
rcrb
pop
or
int3
aad
push
and
lea
lods
lret
lahf
mov
mov
inc
daa
lret
mov
cmp
sub
data16
pop
cmpl
movsl
inc
add
loope
adcb
add
inc
leave
dec
je
push
adc
movsb
daa
sahf
jp
adc
int3
or
shll
push
or
loope
pop
dec
sbb
in
mov
sub
popf
pop
pop
clc
mov
mov
jecxz
out
pop
mov
jle
repnz
mov
xor
jg
and
xchg
adc
insb
or
dec
popa
sub
into
xchg
inc
out
sub
loop
xchg
sbb
mov
mov
sub
popf
push
cmp
imul
icebp
jecxz
jmp
cmp
mov
test
fstpt
cmp
mov
rcl
adc
sub
jge
cltd
mov
xchg
adc
and
xlat
mov
ja
jns
mull
sub
in
push
insl
and
inc
negb
fistl
ds
aas
jb
enter
and
mov
mov
pop
push
movsb
sbb
jb
adc
lock
add
sbb
push
scas
cli
fwait
mov
call
fnstsw
je
jae
xchg
adc
dec
or
or
ret
lret
ljmpw
cmp
insb
jno
jmp
scas
lcall
cwtl
test
mov
inc
test
in
pusha
rolb
fcoml
push
jmp
test
adc
mov
inc
inc
into
xchg
ljmp
xor
test
jnp
sub
jl
xor
xor
sarb
imul
leave
push
scas
xlat
movsl
addr16
movsl
les
popf
mov
popa
jl
out
dec
or
jnp
hlt
fs
or
xor
mov
pop
insl
orl
dec
sahf
fidivs
xchg
jbe
mov
insb
out
imul
ror
jbe
pop
bound
call
xor
nop
mov
push
popa
mov
cmpsb
mov
dec
loop
sbb
lock
push
cmp
sbb
xorl
mov
mov
mov
pop
pop
cwtl
out
lods
test
push
or
sbb
dec
cmp
cmp
mov
rcrb
dec
cmp
sbb
imull
imul
pop
mov
cltd
mov
mov
mov
jmp
cmc
sbb
cmc
std
rcrb
rcll
cmp
inc
pop
jl
insb
xchg
or
sbb
outsb
aam
mull
push
xor
pop
jg
aad
sub
icebp
test
and
mov
rorl
stos
xor
das
ja
stos
pop
cmp
enter
add
jae
imul
pop
xlat
shlb
inc
leave
repz
mov
mov
subl
lcall
xor
sbb
jg
daa
adc
movsl
pop
leave
jno
movsl
dec
mov
outsl
ret
aaa
iret
movsl
inc
xchg
dec
mov
sbb
addb
lock
mov
imul
mov
bound
mov
cmpsb
lahf
aad
sub
xor
ljmp
push
icebp
inc
cld
push
mov
gs
ret
sub
inc
mov
push
movsl
jb
and
negl
cmpsb
pop
scas
jno
xchg
fidivrl
and
sbb
faddl
sub
dec
sahf
imul
test
in
aas
inc
imul
dec
cltd
adc
sub
mov
orl
mov
lock
push
das
andl
ret
adc
mov
pop
and
add
xchg
sbb
adc
and
mov
lret
jae
or
repz
aam
divb
push
xchg
sbb
scas
movsb
push
adc
xchg
sub
mov
push
pop
cmp
stc
fsubrp
call
mov
pop
cld
pusha
pushf
insb
dec
hlt
bound
imul
enter
xchg
pop
shl
add
xor
xadd
addb
mov
mov
sbb
in
sti
mov
mov
mov
jb
mov
jle
test
xchg
adc
sti
and
sysexit
int
test
xor
out
ret
fsts
mov
les
push
add
cmp
imul
imul
lds
mov
lahf
ds
sarl
in
mov
loopne
mov
mov
test
mov
in
pushf
enter
repnz
notb
divl
popf
outsl
lret
mov
jnp
aas
pushf
ja
dec
insl
adc
pop
daa
lods
xchg
adc
mov
mov
xchg
push
repz
add
mov
sub
popf
loope
push
dec
push
sub
pop
cld
ja
dec
dec
fmull
adc
adc
in
mov
aas
clc
mov
fcompl
lods
pusha
lahf
fimuls
lods
sub
mov
outsb
aaa
ret
lret
jle
data16
and
jae
sbb
push
or
sub
add
push
sub
bound
leave
fsub
pop
fistps
fs
dec
ret
sub
dec
and
mov
lods
daa
push
xlat
loop
rolb
pop
aad
insl
pop
shl
fwait
push
aas
imul
jmp
mov
mov
push
int
dec
enter
aam
mov
sub
jmp
xlat
cmp
mov
ret
aad
sbb
mov
fwait
mov
push
loopne
xchg
add
and
pop
mov
fwait
push
or
or
add
xor
addl
pop
stos
jge
push
imul
or
fisttpl
pusha
xor
sti
cmp
lret
sub
add
mov
repnz
ljmp
imulb
lds
ret
sldt
fstpt
jae
mov
push
jb
outsl
mov
jns
sbb
in
mov
mov
add
les
sub
cs
jno
mov
test
imul
enter
mov
ret
inc
jns
bound
inc
shr
stos
pop
int
sub
fwait
fsubs
popf
xor
mov
jnp
add
mov
inc
test
mov
pop
ja
dec
in
movsb
mov
loope
and
lahf
inc
jnp
dec
xlat
xor
jns
mov
pop
cmp
idivl
push
mov
mov
fptan
jb
mov
push
iret
xchg
das
or
push
pop
inc
loope
add
cmp
clc
and
push
lea
pusha
sub
pushf
out
fbstp
push
add
dec
sub
jmp
hlt
push
xchg
mov
push
stc
into
push
adc
loop
out
mov
dec
cmpsl
or
aam
les
jo
cmc
stos
lret
push
xchg
fcompp
cmp
mov
fistpl
adc
or
push
mov
push
in
lds
mov
scas
pushf
add
jno
call
lret
pusha
lcall
jle
pushf
add
xchg
xor
push
dec
xor
jae
jge
lea
test
jl
cs
or
lcall
and
popf
sarb
loop
arpl
mov
outsb
ret
xor
out
les
xor
adc
push
xchg
insl
jle
pop
jle
cli
lret
add
repz
repz
lret
shrl
xchg
aas
bound
inc
cmp
mov
cld
jns
ja
pusha
clc
fisubrl
clc
mov
jnp
sbb
mov
insl
test
rcll
xor
push
dec
fistpll
push
lods
mov
dec
jle
jmp
leave
or
popa
fisubrs
jno
sub
shlb
shl
push
out
ret
sub
mov
out
mov
xchg
and
lcall
xchg
dec
pop
stos
bound
aas
negl
jbe
inc
or
push
xcrypt-ecb
cmpsl
dec
push
xor
dec
xchg
in
movsl
and
pop
pop
out
popf
clc
inc
sub
outsl
divl
push
or
push
mov
insl
mov
mov
mov
in
rorb
mov
sub
mov
jnp
mov
cli
mov
mov
xchg
sub
test
out
add
jmp
cmp
je
clc
jns
jne
inc
fdivrp
clc
inc
scas
cmp
push
daa
and
adc
sub
push
dec
jle
repnz
sbb
sub
popa
int3
mov
adc
nop
shl
jl
jl
nop
jns
aas
xchg
and
sbb
push
sub
aaa
rep
testb
in
or
xor
cmp
shll
jbe
shll
gs
loopne
mov
jns
lods
lea
add
mov
idivb
mov
jns
cmpsb
mov
mov
ret
mov
inc
xor
push
pop
push
push
xchg
jl
add
dec
mov
push
and
jmp
daa
inc
and
pushf
mov
ss
xchg
in
ret
sub
aas
frstor
and
dec
arpl
adc
add
clc
bound
cwtl
shll
pop
inc
cmp
add
mov
pop
xchg
sub
sbb
leave
sbbl
push
shrl
inc
iret
and
pop
add
pop
jge
fs
xor
popf
mov
ret
je
in
or
push
std
ret
cmpsl
hlt
mov
lods
mov
inc
stos
push
inc
push
loopne
push
mov
sbb
sbbb
sub
push
ljmp
xchg
jg
xchg
xor
js
ret
in
xor
leave
clc
loope
arpl
push
out
sbb
lods
shrl
mov
pop
cmp
es
sbb
lods
pop
push
lock
mov
imul
lods
sub
int3
subl
or
jns
mov
es
jmp
adc
in
jne
mov
mov
adc
js
movsl
mov
jge
add
cmp
cmp
xor
ljmp
xor
sbb
fucom
inc
fsubs
jbe
fstpl
xchg
outsl
les
test
sbb
add
sbb
adc
inc
arpl
push
mov
cmc
or
and
ret
sbb
adc
std
dec
push
inc
jmp
test
testl
dec
mull
sbb
or
in
mov
sbbb
add
add
test
imul
pop
lea
addr16
icebp
fstl
or
ret
ja
into
or
push
xchg
int
xor
je
fstps
sub
dec
movsl
dec
cmp
xor
notb
pop
shr
les
inc
inc
sub
jg
fwait
loopne
pop
dec
repnz
push
arpl
fisttpl
pop
push
mov
add
sarb
addb
jnp
bound
fildl
gs
jbe
jg
jp
cmp
jb
jecxz
aas
push
nop
inc
repz
loope
cmpps
and
inc
jp
dec
add
cld
jge
jmp
ds
pop
mov
lcall
movsb
pop
jbe,pt
insl
dec
sub
push
jge
add
add
sbb
loope
xchg
loopne
xor
insb
inc
xor
push
push
into
push
lahf
lret
aaa
push
push
fildl
das
insb
push
ja
scas
enter
stos
out
inc
icebp
mov
mov
push
leave
repz
inc
push
incl
mov
mulb
mov
stos
adc
add
mov
mov
inc
cs
push
mov
or
mov
lds
push
imul
xchg
jns
dec
xchg
xor
and
jb
sub
js
sub
jns
arpl
ss
sbb
mov
push
xchg
in
imul
cmp
adcb
push
lock
sub
lods
pop
adc
je
inc
cmp
je
mov
pop
or
and
add
xchg
mov
mov
imul
xchg
mov
aas
jge
pop
mov
mov
aam
push
je
data16
mov
sti
and
sbb
or
cmpsl
popf
scas
jb
mov
jl
sbb
sbb
ss
sbb
in
push
es
je
dec
outsl
mov
inc
pop
cltd
push
dec
or
jb
cwtl
mov
lea
mov
adc
pusha
dec
pop
outsl
jmp
xor
add
mov
lods
popf
inc
aaa
jle
loope
addb
mov
pop
push
push
stos
xor
and
and
xor
pop
cwtl
sub
inc
cli
cmp
sub
ret
mov
jns
lods
lds
sub
sub
push
mov
lock
mov
or
adc
mov
lock
jecxz
push
pop
lods
mov
bnd
int
and
push
push
fisubs
mov
pusha
jmp
shrl
mov
nop
dec
int3
stos
xchg
sub
jle
leave
sarl
gs
enter
bound
sbbl
mov
inc
adc
divb
imulb
and
cmp
fcoml
aas
mov
aad
aaa
xlat
mov
xchg
sti
shrb
push
aas
insb
pop
neg
pop
dec
mov
push
adc
fcompl
out
mov
pop
shrl
add
in
frstor
fsts
lea
push
sbb
mov
jmp
mov
xchg
les
sub
mov
sub
push
dec
mov
xchg
in
pop
mov
sub
sbb
pop
sbb
mov
loopne
inc
jle
sub
add
test
push
int
inc
and
and
int3
ljmp
aam
daa
mov
div
inc
mov
enter
ljmp
test
mov
call
jp
jp
add
and
push
cmpl
test
fbld
adc
dec
pop
nop
in
out
pop
xchg
pop
fsubs
in
popf
dec
cmc
loop
cmpsl
std
lret
push
stos
outsb
cmp
cmp
lcall
loope
scas
cld
add
mov
mov
fildl
add
cmp
pushf
xchg
push
xchg
mov
mov
mov
pop
fcmove
fcompl
pop
pop
pop
in
or
adc
test
add
imul
cmp
imul
xor
inc
cmc
ss
mov
dec
adc
adc
push
out
jge
notl
xor
pop
test
cmp
scas
lcall
cmpsb
cmpsl
icebp
mov
shll
inc
movsb
int3
pop
pushf
jne
stos
stos
add
cltd
mov
test
push
movsb
sbb
div
inc
push
mov
mov
fldcw
out
add
rorl
mov
mov
push
add
stos
inc
mov
xor
pop
sub
xor
dec
jne
sub
outsl
pop
js
push
lret
sbb
xlat
data16
jecxz
nop
mov
jae
mov
rol
loop
popf
call
mov
es
jle
push
out
lahf
jne
and
mov
sbb
out
gs
xchg
inc
xchg
cmp
sub
jbe
loopne
cmp
gs
movsl
mov
push
call
negl
gs
mov
add
movsb
insb
outsb
cmpsb
push
xchg
adc
sti
or
and
out
dec
mov
adc
fadd
adc
add
push
xchg
push
negb
mov
mov
and
popf
or
iret
mov
and
cs
fwait
mov
loop
xlat
test
sbb
or
and
out
sub
out
insb
inc
cwtl
lret
stc
outsl
push
pop
out
nop
mov
and
push
dec
loopne
sub
cmp
mov
loop
fisubrs
jb
pop
loopne
push
xchg
aam
or
xlat
cwtl
sbb
ret
push
jmp
out
jl
mov
xchg
add
mov
push
loop
lret
and
mov
push
xchg
pop
cli
or
subb
out
push
fsts
movsl
dec
xchg
cmp
cli
sbb
mov
cwtl
pop
and
push
mov
xor
xor
mov
xor
mov
push
xorb
fdivrs
mov
xor
and
out
add
lcall
and
in
fs
jecxz
pop
sbb
stos
mov
inc
xor
es
push
jmp
xchg
jo
jno
add
mov
sti
gs
mov
loopne
movsl
sahf
call
in
rorl
imul
sbb
mov
dec
cmp
fimuls
mov
ljmp
lods
mov
icebp
dec
or
cmpsl
popf
rcll
loope
pop
out
sbb
pop
andl
mov
popa
icebp
jle
ficoms
pop
sub
aam
inc
jo
aad
lods
push
mov
xchg
dec
stos
in
dec
lahf
inc
xchg
adc
setno
pushf
push
jp
mov
lret
outsw
sar
and
cmp
aaa
pop
add
loopne
roll
rclb
aam
stos
andnps
lahf
adc
ljmp
sahf
popl
or
jmp
daa
scas
loope
fistl
pop
imul
and
or
sub
push
inc
imul
arpl
adc
inc
or
scas
xor
dec
add
imul
addr16
shrl
stc
sbb
sahf
cld
xor
mov
shlb
insl
repnz
ficoml
insb
xor
mov
roll
outsb
es
mov
mov
xor
or
mov
out
ljmp
cmc
jns
insb
mov
mov
mov
push
xor
pop
les
in
xchg
sbb
ds
sbb
ja
lea
sub
je
popa
insb
sti
push
mov
inc
fidivrs
insl
mov
dec
jbe
daa
and
xor
mov
sbb
cmp
inc
inc
xchg
sbb
repz
in
test
add
mov
pop
jge
push
push
jno
fdivrl
ljmp
movsl
mov
aas
jp
pop
ja
std
add
add
pop
push
repnz
push
xlat
dec
fsts
jg
and
mov
and
orb
push
test
and
loop
mov
sub
xchg
imul
in
mov
or
nop
sub
sub
add
jmp
pop
stc
hlt
out
inc
mov
sub
pop
sub
mov
push
imul
xchg
sti
xchg
add
rclb
pushf
jae
lret
out
inc
mov
sub
out
push
sub
rorl
int
cmpsb
ljmp
dec
pop
pop
jns
hlt
repz
adc
sub
sbb
jbe
fwait
sub
sub
mov
dec
repnz
jl
das
lea
addl
insl
mov
repnz
push
and
aam
mov
int3
push
or
mov
les
mov
jnp
add
jne
cmpsl
ljmp
aad
xchg
dec
xor
mov
xor
push
fs
rol
int
test
pop
es
lods
out
das
push
movl
mov
xor
outsb
int
repnz
call
pop
lret
inc
vpunpcklwd
sub
bound
shr
mov
and
dec
pop
mov
mov
cmp
pop
sarb
add
mov
adc
mov
movsb
pop
mov
mov
fst
mov
or
mov
pop
or
decb
aad
sbbb
push
mov
fucomp
add
iret
es
outsl
mov
jl
pop
stos
cld
and
add
mov
sti
push
sub
adc
and
decb
cmp
pop
in
ss
pop
mov
push
call
aad
popf
lock
cwtl
lret
movsb
pushf
jne
in
xchg
lods
je
les
jle
lea
xchg
insb
xchg
mov
sahf
dec
xor
jnp
loope
jle
test
mov
xchg
repnz
iret
das
in
xor
fprem
sbb
gs
lods
and
popw
or
inc
adc
shl
sarl
jo
xchg
push
push
inc
adc
clc
test
dec
mov
out
xor
ret
ljmp
dec
mov
dec
push
xlat
sub
xchg
xchg
mov
lods
mov
pop
xor
roll
jo
xor
loop
xor
adc
movsl
aam
sub
xchg
dec
stos
xor
clc
loope
pop
fcomps
rcll
dec
loop
xor
dec
roll
mov
xor
mov
icebp
sbb
pop
repnz
xchg
or
mov
add
fisttpll
repz
rolb
add
ficoms
fistps
sbb
std
sub
out
les
out
cmp
xchg
inc
cltd
sbb
or
push
test
push
or
clc
rcr
cmpsb
mov
or
sarl
pop
xchg
pop
xlat
mov
jb
xchg
xor
lods
inc
cmp
inc
xor
shll
sbb
popa
jae
in
mov
test
outsl
fldt
mov
adc
in
push
cld
or
leave
pop
rcrb
int
in
sahf
sbb
mov
loope
mov
outsl
or
mov
push
jp
xchg
test
jg
addb
fstps
push
shll
aad
mov
or
pop
or
mov
dec
ja
dec
sub
lret
test
lea
xor
fwait
sbb
divl
ljmp
lods
mov
out
xor
push
sbb
insl
test
inc
ds
push
xchg
sub
xchg
ja
ljmp
pop
into
jae
jns
xchg
add
mov
mov
and
aas
xlat
inc
push
jno
out
cmp
faddl
and
sbb
xor
add
mov
adc
cmp
inc
mov
sub
push
shr
jmp
inc
fisttpl
hlt
stos
cmp
ds
jg
sahf
inc
xor
sbb
inc
lds
mov
adc
sbb
ds
frstor
aam
nop
mov
lret
aas
mov
ret
jb
cli
push
imul
add
push
jecxz
cmpsl
xlat
cmpsb
lods
repz
mov
mov
cs
pop
dec
das
pusha
popa
aad
mov
fs
out
adc
test
pushf
mov
jae
ret
lahf
sub
and
inc
rcl
out
cmp
mov
enter
outsb
repnz
out
push
dec
cli
xchg
je
adc
sub
fwait
xchg
and
mov
add
mov
aad
and
push
syscall
rcrb
push
push
out
and
test
jle
js
arpl
es
pusha
add
into
sahf
cmp
mov
fisubl
inc
insl
jns
mov
int
stos
adcl
pop
rcll
cmp
push
xchg
in
shr
xor
insl
inc
and
arpl
mov
aas
mov
pop
xchg
adc
jmp
push
inc
mov
xchg
mov
testb
push
jle
add
inc
ror
xchg
and
jl
sahf
adc
inc
dec
mov
call
xor
sbb
dec
xor
repnz
mov
popa
or
lds
popa
pop
mov
ret
mov
sbb
popf
xor
xchg
fdivp
hlt
jmp
insb
fwait
sbbb
push
jns
jno
inc
xor
mov
jecxz
jnp
nop
mov
cmpsl
lods
loope
call
sub
daa
mov
scas
rolb
sbb
mov
dec
pop
test
mov
subl
insb
rcr
insl
lahf
add
mov
pop
addl
or
ss
mov
jg
test
lds
aam
sti
fdivrl
cmp
fs
orl
pop
cpuid
cwtl
pop
mov
pop
sub
jnp
out
mov
pop
and
adc
mov
xchg
pop
rolb
je
repnz
imul
sbb
push
inc
fsub
adc
test
shlb
mov
inc
rcrb
push
leave
xlat
mov
out
or
movsl
rclb
ja
inc
pop
adc
popf
mov
test
inc
ljmp
ror
lods
cmpsb
shll
xchg
push
stc
movsl
test
or
mov
sub
lret
xor
jmp
adc
xchg
mov
cmp
mov
outsl
cmp
aaa
or
inc
test
arpl
and
data16
ljmp
in
rcrl
in
pop
data16
inc
push
and
movsl
sub
inc
lods
inc
bound
lods
roll
dec
pop
or
push
popf
enter
jmp
push
flds
out
xlat
pop
add
or
push
xchg
adc
jle
mov
mov
adc
movsl
into
xchg
orb
rcl
mov
push
add
jne
sbb
insl
in
mov
xchg
inc
mov
mov
movsl
ja
aas
cmpsl
mov
inc
adcb
aas
jb
lods
ret
lods
jl
mov
call
sbb
and
fcmovbe
pop
aam
das
cs
pop
leave
leave
mov
xor
nop
andl
jecxz
xchg
push
mov
leave
pop
lcall
pop
fwait
mov
pusha
cltd
test
add
jg
out
loopne
add
pop
and
xchg
push
mov
pop
jnp
xchg
stos
xor
incb
fldcw
pop
inc
imul
lds
jae
jne
mov
adc
hlt
xchg
mov
fnstcw
mov
xchg
icebp
aas
stos
in
jle
dec
dec
test
shll
xlat
addr16
inc
out
cmp
jl
jae
jle
pop
dec
push
lcall
jae
mov
ljmp
imul
jle
fs
std
int
mov
dec
fst
pop
addl
inc
jbe
outsb
mov
xchg
inc
push
lods
out
fiadds
out
cld
mov
test
lock
ljmp
pop
outsb
xlat
and
dec
xchg
in
push
jecxz
dec
cs
lods
loope
fstps
jns
jg
mov
sbb
or
push
xchg
popf
std
arpl
movsb
xor
pop
cmc
call
pop
jae
imul
xor
xchg
add
sub
pop
roll
sarb
and
adc
hlt
movsl
dec
test
mov
push
xor
or
lea
incb
stos
je
jg,pn
test
and
addr16
jnp
in
cmp
scas
fists
cmpsb
lea
popa
out
mov
ja
inc
cwtl
stos
pop
mov
testl
imul
jp
in
subl
pop
fistpll
jg
ret
imul
mov
xchg
pop
jae
int
cmp
aas
mov
les
mov
sahf
push
enter
cmp
inc
subl
push
cmp
ja
adc
sahf
and
test
sub
push
push
aas
lahf
jbe
and
out
imul
aas
xor
sbb
dec
in
ret
mov
sbb
pop
and
inc
jle
icebp
aas
jb
adc
pushw
sub
out
mov
loope
pop
imul
mov
jo
inc
add
aad
dec
sti
in
mov
jno
lock
push
jmp
les
cmp
mov
or
in
adc
xchg
dec
aas
jle
mov
xchg
add
push
lret
xor
xorl
in
cmp
jge
xor
js
cmp
inc
lahf
cvtdq2ps
xor
push
pop
das
insl
rcrb
cwtl
in
hlt
lret
ja
push
and
and
jmp
out
xor
std
dec
mov
push
lcall
sbb
pop
cmp
mov
insl
xor
or
jmp
sub
push
std
inc
sub
cmpsl
or
cmp
adc
lock
cs
dec
adc
add
lahf
xor
insb
les
daa
cmovl
dec
mov
imul
jecxz
outsl
jmp
xor
mov
mov
add
in
ljmp
mov
push
mov
mov
cmp
push
cmc
dec
lret
jbe
adc
imul
add
push
in
jge
or
xchg
lds
xchg
sti
mov
sahf
push
push
aam
aad
subb
dec
xor
adc
jb
out
and
adc
movsb
cmp
push
add
dec
mov
rol
cli
and
and
lret
mov
mov
or
inc
test
add
sbb
rcrl
sbb
notl
in
fnsave
aas
sbbb
jb
jnp
push
mov
add
mov
push
stos
movsl
subb
pusha
ret
inc
cmp
push
repnz
xchg
das
mov
pop
xchg
sub
jae
mov
mov
psraw
jb
mov
lea
fistps
sti
loope
stos
mov
jae
stos
and
cmp
jne
push
jnp
repnz
inc
fs
pop
lea
sbb
cmp
rcll
inc
enter
push
sbb
push
leave
adc
jge
test
sti
xchg
sarb
cwtl
adc
bound
and
ss
jg
push
push
enter
mov
test
xchg
mov
sbbl
push
xor
out
stos
dec
or
shlb
lods
xor
add
sub
xchg
mov
shl
sahf
mov
xchg
add
xchg
and
push
js
lods
pushf
inc
jecxz
mov
scas
pop
je
imul
movsl
lock
mov
jb
xchg
inc
arpl
out
lds
sub
pop
pop
insl
push
sbb
and
cltd
mov
cmc
lds
mov
icebp
sbb
and
sub
or
lret
inc
stos
fidivrl
and
or
in
sbb
xorb
in
or
xchg
daa
nop
xchg
shlb
jle
xor
fldenv
dec
insb
test
sbb
sbb
xchg
jnp
rcrb
push
fisttpl
adc
sub
cli
dec
sub
jle
mov
mov
call
pop
stos
lea
push
push
jmp
xchg
pop
mov
xchg
mov
loop
je
mov
or
sbb
mov
out
or
arpl
std
sub
dec
into
sbb
jns
adc
push
lds
and
jns
jbe
cmpsl
mov
fcoml
ret
insl
inc
stos
mov
inc
lret
sbb
fidivl
loopne
xlat
popf
pop
insb
or
insl
pop
shrb
dec
jge
pushl
cmp
cli
mov
adc
mov
xorl
out
loope
push
aas
pop
dec
cli
and
or
add
push
movsb
movsb
outsb
jle
dec
sbb
insb
aam
js
mov
cmp
insl
pop
outsl
xchg
pushf
movsb
jae
ja
adc
enter
adc
out
fwait
mov
out
fisubl
jbe
ret
out
push
test
test
inc
int3
or
push
xor
rorl
mov
fwait
aad
inc
inc
add
movsl
push
pop
icebp
addr16
arpl
fildl
inc
cwtl
mov
mov
in
cmc
pop
push
ljmp
push
cmpsb
je
mov
loop
sbb
jae
sub
setno
icebp
xor
arpl
fstl
sub
mulb
mov
out
pushf
repz
lods
cli
sub
inc
dec
fistps
xchg
cwtl
aaa
and
popf
aad
fidivrl
bound
and
xchg
outsl
adc
int3
dec
mov
xor
addb
xchg
pop
aas
xchg
dec
mov
inc
adc
inc
pushf
sahf
jmp
mov
mov
psubw
icebp
scas
pop
hlt
fistps
loopne
mov
dec
cmp
arpl
sub
dec
mov
inc
cmpl
cs
push
push
leave
ljmp
jb
out
adc
push
or
aad
nop
imul
faddl
scas
jns
sub
adc
ja
sbb
mov
pop
pushf
data16
in
shll
fsts
push
push
mov
cli
popa
mov
add
fwait
pop
sbb
mov
ljmp
sbb
lds
pop
sbb
mov
mov
lret
andb
fldcw
fistl
in
lock
cmpsl
imul
aaa
jno
jne
sti
mov
jmp
add
loope
push
mov
leave
int
mov
test
fnstsw
cmpsl
in
ret
xchg
ljmp
sub
inc
push
add
jle
in
ja
mov
popf
aad
bound
rcl
lret
dec
ffree
mov
std
rclb
in
jne
cmpsl
add
int3
ljmp
add
int
sub
leave
inc
push
out
pop
adc
add
scas
add
iret
push
movsl
call
aaa
and
inc
filds
sub
xor
fidivrl
js
sbb
pop
and
scas
cmp
xchg
mov
xlat
xchg
jecxz
jns
lea
push
fadd
cltd
int
xor
les
push
cmpb
xorl
mov
fnstenv
xor
sti
inc
decl
rolb
mov
scas
lret
mov
out
xchg
jp
inc
aad
das
push
mov
inc
rcl
xchg
insb
mov
test
sbb
sbb
cli
pop
and
inc
cmc
scas
in
mov
mov
mov
and
test
mov
jg
shrl
jl
add
shlb
jp
lods
out
pop
xchg
ja
ja
xchg
lret
xor
out
das
cli
mov
std
lahf
rclb
mov
repz
inc
loop
mov
xchg
cld
cmp
add
xlat
dec
aas
and
lods
add
fistpl
lcall
sbb
sbb
pop
cmp
into
and
or
insb
cwtl
pop
pop
orb
jg
adc
push
sbb
add
cmp
es
add
testb
cmp
test
inc
sbb
fs
xchg
or
xlat
ficoml
popa
not
dec
enter
and
je
nop
sub
cmp
lds
pushf
jns
jns,pn
jecxz
pop
and
cmc
adc
xor
xor
mov
ds
sub
sbb
lcall
add
popa
mul
jmp
hlt
outsb
push
mov
aad
jnp
aaa
out
mov
or
or
add
stos
ljmp
push
scas
xor
xor
leave
adc
inc
xor
fistps
decb
jmp
dec
pop
and
inc
jne
scas
test
fs
or
rol
sub
or
cmp
sub
add
or
out
jno
dec
or
push
adc
out
fwait
dec
fdivs
mov
lock
lcall
jne
pop
aaa
mov
addr16
jecxz
xor
inc
popa
in
and
adc
sub
jne
dec
pop
sbb
test
nop
xor
and
popf
addl
jno
fimull
cmp
and
xchg
dec
ljmp
iret
xor
es
dec
pop
testl
pop
push
xlat
jmp
into
bound
mov
xchg
sahf
inc
jae
ret
shrl
push
pop
dec
ja
xchg
xor
cmp
push
in
hlt
std
pusha
in
or
and
pop
out
lret
and
call
outsl
call
and
adc
adc
fdivs
lods
mov
aaa
aas
or
lods
loopne
es
jns
movsb
stc
mov
adc
sti
leave
sbbl
mov
dec
jbe
sarb
push
lcall
jecxz
movsb
mov
int3
dec
cmpsb
cltd
comiss
mov
pop
jnp
sbb
push
xor
lock
push
gs
test
and
push
lods
sub
xor
xchg
shl
hlt
js
xchg
sti
push
mov
enter
sbb
xchg
add
sarl
adc
or
pop
mov
movsl
stc
mov
inc
mov
and
shlb
pop
inc
jno
movsl
add
lock
push
adc
and
add
das
sbb
xor
mov
iret
mov
sbb
loop
cmp
pop
inc
andnps
jno
clc
jne
arpl
sahf
cmp
jl
sub
push
test
fiaddl
push
fsts
lcall
jno
inc
mov
pop
ds
repz
or
dec
mov
jae
mov
ficoms
fs
dec
inc
orb
les
or
sub
nop
dec
push
mov
sbb
cmp
sbb
push
into
xchg
push
adc
adc
enter
inc
loop
pushf
orl
add
clc
sub
orl
pop
adc
pop
ds
or
mov
dec
jle
add
cmp
sbb
popf
inc
addr16
xchg
sarb
xchg
push
stos
adc
dec
cld
jge
mov
cli
stos
fsubr
sub
lret
sbb
cs
push
std
mov
adc
mov
sbb
jne
mov
mov
mov
dec
sbb
ret
xchg
cmp
shrl
scas
sbb
pushf
test
fucom
cmpsb
ret
push
insb
add
cmp
push
push
popa
fwait
aaa
mov
xchg
rcll
popa
push
xor
and
jmp
xor
fidivrl
xchg
pop
imul
jg
lock
pop
loope
and
jecxz
sbb
jg
dec
cmc
push
aad
mov
rclb
enter
fcoml
movl
ljmp
stos
out
and
arpl
add
jle
and
es
loop
mov
dec
add
dec
das
rolb
sub
test
xchg
push
adcb
ljmp
mov
cld
fdivrl
es
cli
fldt
loopne
clc
dec
aam
xchg
sub
sub
push
mov
cwtl
movsb
jecxz
nop
jae
ja
cltd
lock
jmp
repz
sti
sbb
jb
add
mov
xlat
push
jae
lret
mov
mov
jg
sub
mov
jns
adc
out
aas
aad
xrelease
jo
negl
add
sub
aas
fst
sub
fidivrs
push
shr
mov
dec
mov
push
xor
and
les
add
insb
pop
out
out
pusha
push
adc
clc
subl
cmpsb
cmpsl
mov
loop
and
sbb
mov
movsl
data16
mov
sub
lret
lret
mov
imul
sub
sbbl
in
addr16
int
push
pushf
xchg
jno
shll
dec
movsl
pop
inc
push
mov
mov
jmp
ficompl
cmp
mov
in
imull
mov
int
and
fnsave
xchg
lcall
mov
inc
jne
mov
insb
mov
mov
xor
loopne
and
fcmovnb
xor
jl
and
fs
outsb
xor
shrl
dec
decb
in
mov
call
xchg
or
test
movsb
cltd
shr
push
cmp
adc
shlb
pop
xchg
addr16
movsl
pop
dec
mov
sub
dec
cs
in
movsb
jecxz
das
jns,pn
out
inc
roll
andl
mov
cmp
xchg
ficoms
leave
ds
mov
in
dec
adc
sub
pop
sbb
repz
addr16
rcrb
pop
push
mov
fisttpl
adc
icebp
clc
push
dec
jo
xor
inc
fwait
dec
in
inc
shll
aas
sub
mov
jae
and
outsb
negl
add
mov
inc
push
rolb
les
xchg
sbb
scas
inc
lods
fisubrs
jns
dec
sub
or
mov
fistl
imul
test
incl
xor
adc
dec
inc
pop
pop
jns
mov
mov
lahf
out
cwtl
inc
cmp
out
push
mov
push
sub
ficompl
push
xchg
pusha
popf
lock
and
push
cwtl
sahf
mov
gs
sahf
cltd
hlt
push
or
xor
int3
in
lods
or
mov
out
mov
jmp
scas
and
mov
mov
dec
ss
pop
pop
pusha
or
ja
inc
mov
sarl
cmp
jae
xchg
lretw
push
xor
iret
lods
pop
aaa
jecxz
shl
pop
sbb
fld
pop
jecxz
pop
stos
aam
cmc
sub
scas
mov
cs
cmp
inc
sar
cmp
adc
test
mov
lahf
fwait
and
jl,pt
pop
mov
xor
push
xlat
fnstsw
xchg
push
xchg
xlat
arpl
arpl
aas
out
sbb
hlt
or
cmc
mull
stc
xchg
mov
lcall
push
shrb
xor
pop
lret
leave
ret
sub
mov
mov
gs
test
jne
test
out
leave
jo
std
mov
jnp
nop
pop
push
sti
jb
jnp
sub
in
test
fdivl
data16
ljmp
dec
scas
xlat
pop
adc
pushf
jo
out
and
dec
adc
cmp
out
xor
add
xlat
icebp
sbb
add
cmp
jle
into
mov
sbb
test
and
sbb
repz
sahf
sub
out
repnz
push
addr16
std
lock
mov
fwait
out
lret
orb
xlat
jne
aam
das
mov
nop
pop
mov
jae
test
add
jge
dec
mov
mov
rorl
and
int
stos
lds
push
jle
pop
mov
mov
or
push
adc
daa
dec
cmp
outsl
daa
mov
in
in
add
lods
xor
pmaxsw
dec
or
dec
popa
xor
mov
sbb
push
outsl
xlat
xchg
inc
fcomip
daa
pop
sbb
repz
push
cmp
adc
imul
xchg
fnsave
enter
into
jne
dec
pop
xchg
jo
pop
sbb
add
lret
pop
fwait
mov
or
lcall
stos
mov
cmpsb
mov
loop
mov
adc
wbinvd
sbb
or
jns
adc
xchg
lret
popa
jnp
sub
mov
mov
mov
cmpsb
jb
rcrb
movsb
xchg
shl
mov
mov
lret
xor
cmp
repz
xor
xchg
fdivrs
jecxz
or
call
cmp
jmp
mov
dec
inc
cmpsb
es
ljmp
or
and
cmc
data16
pop
sti
pop
sbb
mov
mov
les
in
fmul
mov
push
xor
jge
fisttpl
out
mov
rolb
inc
push
pop
cltd
jge
jge
daa
sbb
fwait
rorb
arpl
in
pop
lods
adc
in
mov
test
ror
in
mov
shrl
clc
lds
and
xchg
scas
xor
mov
stc
mov
faddl
mov
test
jp
lods
push
lret
hlt
sbb
mov
mov
xor
das
push
adc
add
in
mov
js
or
mov
jp
loopne
or
insl
and
shll
icebp
jns
popf
test
pushf
xchg
push
mov
outsl
scas
adc
jae
mov
push
movsb
stos
pop
insb
push
dec
cmovno
mov
and
shll
push
jecxz
push
test
or
test
xchg
xchg
xor
call
fbstp
or
repnz
and
push
sub
jp
mov
cmp
movsl
dec
cld
repz
mov
mov
cli
cmp
push
fdivp
xchg
enter
pop
jg
fsubrl
mov
stos
adc
and
addr16
rep
movsl
adc
xor
faddl
cmp
les
pop
lea
lods
test
loopne
sub
lcall
leave
pop
cmc
std
pop
pushf
xor
sbb
leave
je
mov
ljmp
dec
sbb
fs
cwtl
test
and
cmp
inc
lock
xchg
cmp
cs
ret
xor
mov
lods
push
mov
xrelease
or
jo
hlt
or
ds
scas
dec
push
push
mov
icebp
sbb
les
dec
ret
cmp
pop
mov
cmp
pop
rcl
mov
push
addr16
sbb
je
jmp
sub
cmp
adc
cmp
and
call
adc
jbe
jmp
xor
push
jp
jb
adc
inc
fidivs
adc
sahf
lcall
pop
mov
sbb
je
cmpsl
cld
nop
inc
pop
negb
lea
pop
mov
xor
pop
or
xor
cs
and
int3
aaa
mov
shrl
js
cmp
pop
adc
sbb
mov
sahf
into
leave
and
testb
cmpsl
inc
movsl
mov
enter
cmp
xchg
out
add
lcall
test
push
incb
mov
mov
je
mov
loope
int3
adc
sahf
pop
inc
daa
dec
sub
cmp
adc
movsb
xchg
ljmp
cmp
sub
loop
fyl2xp1
int
test
jge
sub
or
fsubl
std
mov
inc
movsb
mov
xchg
jae
inc
cmp
jp
xchg
adc
int3
imul
popa
push
inc
mov
jnp
or
jb
mov
je
jb
fstl
xchg
add
fistpl
dec
ret
inc
sahf
xchg
mov
mov
movl
dec
loopne
and
mov
fcomps
fisttpll
call
jno
lcall
scas
mov
mov
or
insl
dec
mov
adcl
xor
cmpsl
mov
or
or
shrb
and
sahf
shl
ja
les
push
rol
jne
dec
imul
cli
mov
mov
scas
notl
push
push
inc
lcall
xchg
push
test
lea
int3
outsl
or
jb
inc
sub
nop
jnp
mul
and
pop
adc
add
mov
iret
cmp
dec
mov
pop
aaa
pop
cmp
ret
xchg
mov
mov
pusha
out
push
push
loopne
test
mov
lret
fldl
adc
out
jbe
ret
out
adc
xchg
sub
mov
fwait
lods
rclb
jns
inc
clc
or
lcall
stos
push
push
lock
jbe
mov
pushf
xchg
dec
and
sub
lods
lcall
loope
outsb
jb
ja
push
movsl
jmp
shll
cltd
xchg
in
dec
cmp
sbb
ss
scas
call
lds
dec
push
pusha
test
push
inc
popf
bound
xchg
int3
adc
out
ficoml
sbb
stos
test
popa
gs
inc
sub
sarb
fcmovnu
lods
xor
jbe
and
das
or
add
stos
in
cmc
sar
mov
jmp
pop
xor
sub
pop
mov
subb
jge
outsb
mov
lds
or
dec
xor
in
xlat
gs
fiadds
and
jmp
pusha
mov
mov
out
or
push
mov
dec
es
jb
pop
aaa
repz
dec
adc
add
ret
mov
mov
lock
ss
pop
mov
cmp
push
push
jae
xlat
jbe
inc
test
pcmpgtw
addr16
pop
pop
sub
lea
out
or
or
je
into
or
mov
leave
cs
add
int3
mov
pop
mov
call
pop
mov
rclb
out
xchg
mov
sbb
repnz
jl
pop
jbe
cmp
sbb
jle
or
fsubl
ficompl
and
add
popf
incl
pop
cmp
cld
int
pop
sub
adc
rol
cmp
insb
jns
fidivrs
lds
pop
shrl
and
andl
sbb
pop
mov
add
adc
dec
inc
add
addr16
scas
fbstp
iret
jno
nop
and
xchg
push
iret
xchg
insb
jnp
xchg
push
adc
pop
mov
xor
xchg
dec
outsl
out
fdivrl
in
push
push
inc
inc
adc
mov
dec
xor
pushf
mov
and
out
jnp
jl
add
inc
xor
sbb
xor
dec
push
mov
cmp
aaa
push
cmp
xor
jge
in
and
and
stc
gs
es
pop
fstl
mov
and
stos
xor
or
std
ret
xchg
jo
adc
bound
pop
les
movsl
lret
int3
negb
inc
loope
xorl
fistps
cs
sub
or
stc
sub
sbbb
and
jl
clc
imul
dec
xor
ror
mov
xchg
test
test
xor
iret
xorb
push
jno
test
es
movsl
jo
jo
dec
jb
inc
in
mov
fiadds
andb
inc
xor
xchg
sahf
adc
sarl
addr16
psrlw
js
cltd
jne
subb
fcomps
js
jnp
popa
addr16
sub
dec
lahf
loopne
mov
fldcw
mov
cmpsb
sbb
imul
not
ds
out
add
loopne
jo
or
jae
clc
imul
out
and
mov
fs
pop
cltd
orl
mov
cmp
and
sti
add
fimuls
pop
fisubs
lret
adc
adc
leave
push
mov
adc
std
data16
repnz
cmp
in
mov
push
add
sarb
dec
or
inc
in
cmovs
push
mov
sbb
push
sbb
and
add
mull
and
push
in
jo
ja
and
cmp
fldenv
pop
popa
sbb
out
xchg
ffree
push
jmp
out
inc
inc
cmp
dec
push
mov
jae
xchg
dec
nop
lret
mov
mov
adc
xchg
mov
adc
icebp
add
fnstenv
pushf
sub
hlt
dec
ret
lock
jns
mov
pop
mov
push
rcll
lea
fwait
insl
mov
pop
leave
into
or
push
mov
scas
arpl
xchg
xor
sbb
out
xchg
xchg
inc
ret
inc
mov
addb
mov
jbe
jle
dec
filds
mov
lock
mov
shll
adc
int
cmp
mov
cmp
pop
leave
sbb
fstpl
loopne
mov
out
jae
adc
cwtl
addr16
paddw
xchg
int
sub
jmp
and
adc
stc
lods
sub
in
rcrl
test
aas
xchg
adc
les
mov
lods
sbb
sbb
cwtl
mov
adc
push
sub
or
jbe
popa
sbb
pop
int
insl
lods
loope
mov
sbb
pop
push
in
rcrl
push
shrl
cli
mov
mov
test
xchg
dec
sti
pop
pop
bnd
dec
notl
sub
and
nop
sub
ja
xchg
mov
mov
cli
push
gs
out
jl
gs
es
sti
inc
adc
std
push
mov
push
push
das
dec
or
or
js
push
or
mov
insb
xor
repnz
push
fs
mov
imul
arpl
sub
mov
mov
pop
or
in
or
push
xchg
cli
out
movsb
add
sti
adc
pop
testl
stc
lcall
inc
pop
pop
pop
movsb
loope
js
sub
sti
cmpb
int
mov
mov
mov
fcomi
sti
mov
xor
pop
mov
aad
push
fisttpl
mov
cmc
push
jg
xor
adc
je
cmp
daa
xchg
jmp
popf
sarb
jnp
dec
adc
mov
test
cmp
sti
dec
test
das
and
shlb
dec
pop
jle
shr
jo
dec
lods
sbb
adc
xor
sub
fbld
aas
sbb
pushf
mov
shll
xchg
pop
hlt
in
inc
inc
aad
div
pop
loope
jnp
dec
std
das
cmp
push
pop
loop
pop
imul
sub
push
out
fimull
mov
mov
push
cs
js
add
loop
jne
mov
popa
push
movsb
and
insb
dec
mov
xchg
cmpsb
fsubrs
int
scas
inc
adc
or
fsubs
mov
cmp
shrl
hlt
adc
mov
adc
jge
movsl
movsl
push
mov
jl
sbb
dec
or
popa
lods
cwtl
inc
adc
mov
mov
out
push
cmpsl
je
push
in
aas
out
stos
or
jmp
sub
adc
xor
imul
fisttpll
xchg
mov
push
xchg
jmp
sarb
push
jg
vmwrite
xor
mov
lock
shlb
xchg
jle
sub
mov
inc
and
xor
pop
sahf
je
or
mov
jmp
nop
lea
enter
sub
mov
add
call
pop
mov
daa
lret
adc
das
sub
movsl
xchg
jle
xor
popf
xor
in
int3
sub
sub
ss
xor
add
bound
xchg
pop
hlt
aad
loopne
or
mov
cmp
sbb
arpl
jle
fs
imul
dec
aas
imul
testb
jne
ljmp
lods
xchg
jle
mov
or
mov
cmp
fcmovbe
mov
pop
jbe
push
adc
test
mov
or
mov
or
mov
out
push
jno
loop
jle
int3
movsl
sub
push
mov
xchg
mov
data16
movsb
test
neg
mov
push
sbb
fwait
pop
jecxz
popa
xchg
pushf
lret
jo
outsb
cmc
fdivrs
jb
sbb
adc
sti
sbb
sub
inc
fmuls
sbb
xorb
xor
push
xchg
push
adc
les
ss
pop
adc
mov
les
pop
cwtl
orl
pop
adc
or
js
mov
add
mov
pop
mov
jno
mov
inc
add
cmp
fidivrl
mov
lcall
push
in
push
fwait
push
out
pop
pop
xlat
clc
adc
and
pop
out
xchg
xchg
add
xor
in
ret
or
pusha
pop
push
jbe
pusha
cmp
and
shlb
lret
xor
test
add
pop
das
sbb
sbb
test
paddusb
push
inc
loope
dec
dec
mov
insb
or
and
xchg
popa
inc
mov
movsl
mov
ret
jmp
cmp
adc
addb
lods
add
imul
adc
push
inc
rcll
add
xchg
mov
shlb
lods
add
mov
aam
test
clc
cmp
add
lock
push
pusha
fisubl
push
divb
sarl
mov
das
push
mov
ficoms
pop
leave
orb
scas
lds
push
cmpl
push
xor
or
popa
push
lcall
out
sahf
bound
rorb
mov
hlt
mov
stos
test
adc
xor
xchg
or
mov
or
mov
mov
mov
mov
xlat
mov
mov
mov
sbb
jge
stos
push
decl
pop
outsb
add
jb
arpl
addr16
repnz
loope
movsl
adc
jnp
mov
xor
xor
xchg
sahf
mov
fwait
xor
icebp
mov
pop
out
pop
outsb
fwait
or
inc
shlb
dec
in
jne
pause
nop
xor
imul
imul
pop
outsl
ficoml
sti
mov
mov
xchg
test
test
push
hlt
sbb
and
inc
xor
imul
xor
popa
xchg
add
xchg
dec
mov
fwait
out
nop
push
lds
sahf
xor
cmp
and
push
lret
das
fisubrs
xor
adc
mov
jne
xchg
faddl
xor
pop
cmc
cltd
outsl
jg
jnp
mov
fistl
lock
xor
addr16
unpckhps
insb
pop
push
xor
rorb
stos
sbb
scas
mov
cmp
notb
pop
imul
xor
add
push
in
lock
cmc
or
or
ret
lea
jl
push
pop
cmpsl
test
inc
test
push
lock
mov
in
gs
lret
xor
clc
jo
cmp
xchg
jno
and
pop
and
dec
arpl
mov
aam
pop
dec
pop
in
lea
daa
dec
and
testb
inc
loop
nop
pop
cmp
cmp
xor
adc
daa
aaa
dec
sbb
popf
ja
cld
ljmp
aaa
add
pop
xor
cmp
and
mov
cmpsb
mov
mov
pop
xlat
into
mov
lock
or
xor
and
adc
push
stos
cltd
imul
cwtl
outsb
or
add
jae
inc
inc
pop
inc
fcmovnb
xlat
add
aad
ljmp
call
data16
in
cwtl
xorb
jae
es
loop
fwait
jns
sahf
lods
dec
out
mov
jge
or
sbb
imul
ret
js
mov
sub
mov
add
rorb
sar
das
lcall
je
cs
cmp
out
jmp
or
repz
rolb
xchg
out
clc
mov
sbbb
ja
ja
push
pop
enter
xlat
mov
dec
pop
out
icebp
or
cmpsl
bound
dec
mov
jae
testb
cmpsl
insl
dec
cld
sbb
pop
cmp
cld
mov
ss
ss
and
fistpll
add
enter
sbb
lods
adc
push
seta
outsl
insl
jns
fsub
es
lods
adc
ror
mov
and
push
xor
or
out
sbbl
mov
cli
push
repz
mov
mov
in
push
and
dec
fcmovnb
mov
fcoms
inc
cmpsl
add
mov
sbb
repnz
aam
xchg
aas
xchg
lock
shrl
mov
inc
mov
xor
dec
movsl
leave
adc
push
mov
and
cwtl
jae
sbb
and
in
daa
imul
push
sub
popa
sahf
pop
cli
pop
mov
pop
sti
subl
loope
xorb
and
xor
or
mov
inc
jmp
lret
pop
adc
jle
aas
xor
mov
push
jb
jp
gs
test
mov
imul
inc
or
mov
lods
enter
sub
or
lret
lock
insl
sbb
xor
sbb
sub
inc
xor
insb
mov
pop
out
xchg
fwait
loope
popa
jle
pop
mov
stc
adcl
and
aam
arpl
clc
or
lods
cmp
mov
test
mov
test
std
sarl
lods
rol
jecxz
movsb
scas
or
loopne
outsl
imul
sar
adc
or
outsl
jnp
test
cmpsl
push
imul
jo
in
repnz
pop
repnz
rcr
mov
mov
das
fsub
jge
loopne
mov
pop
loop
xchg
lods
fdivrs
jg
out
fmul
stos
inc
jg
faddl
push
and
mov
lahf
lahf
mov
jmp
into
add
in
add
out
cmc
adc
cmp
mov
xchg
fldl
data16
push
mov
mov
pushl
mov
shll
cmp
jl
lcall
cs
inc
filds
cmp
repnz
cmpsl
pop
xor
mov
ret
in
pop
psubq
fwait
sbb
sub
nop
and
dec
sub
cmp
lea
aas
cmc
cmp
xor
push
movsb
data16
xchg
push
or
or
pushf
and
adc
lock
in
push
sub
mov
jp
clc
arpl
lods
add
sbb
cmp
mov
mov
push
mov
cmpsl
aam
data16
sbb
pop
cmp
repz
pop
test
dec
mov
sbb
mov
sbb
xor
and
and
mov
sbb
jge
data16
jnp
shlb
cld
xlat
sbb
dec
mov
inc
cmp
cmp
fsts
mov
movsl
fisubl
cmp
or
inc
pop
or
hlt
mov
dec
sbb
int3
push
adc
in
fsubr
cmp
add
push
xor
fcoms
in
add
stc
and
fs
frstor
push
pop
fs
and
mov
add
ret
sbb
int3
xor
stc
jno
iret
pop
inc
push
sbb
xchg
xchg
cmc
ds
push
inc
mov
fildll
sub
or
out
stos
jp
jns
test
or
push
push
mov
test
xchg
dec
cmp
or
sub
jmp
repz
scas
outsl
sub
pop
pop
push
scas
push
lcall
in
jl
sbb
mov
and
dec
xor
fimuls
pop
dec
push
xor
out
mov
scas
ret
push
mov
add
sar
dec
fcomps
push
fdivp
cmpsl
inc
pop
push
ljmp
push
xchg
push
and
das
and
ret
adcb
jge
xlat
jo
pop
dec
adcb
scas
mov
bound
pop
or
push
cwtl
dec
cmp
sbb
idivl
xor
adc
stos
ret
out
cmp
sub
pop
insl
cmc
xchg
mov
jg
xchg
ja
add
enter
sbb
cmp
mov
or
xchg
mov
inc
out
mov
adc
or
xchg
arpl
cmp
repnz
inc
andb
fisttps
dec
xor
jmp
addb
je
mov
pop
pop
lcall
mov
push
sub
xor
dec
aam
xor
sahf
inc
cmpsl
sbb
imul
mov
mov
sbb
lcall
push
push
cmp
jns
enter
mov
sub
mov
mov
rolb
clc
mov
les
pop
push
mov
and
aaa
lcall
jnp
and
loop
push
xchg
sbb
xchg
hlt
push
push
filds
jno
scas
aas
pop
sbb
filds
cltd
lds
loop
pop
and
std
add
and
pop
in
fisttps
rcll
and
push
mov
pushf
mov
cmp
in
sbb
mov
jg
push
sub
cwtl
mov
push
sub
in
sti
imul
lret
lea
js
add
xchg
pusha
sbb
mov
mov
inc
adc
or
fcompl
repz
mov
mov
out
sub
jmp
xchg
imul
push
jae
pop
xor
imul
add
sbb
scas
ljmp
shl
pop
cmpsl
ja
inc
orl
or
out
mov
fiaddl
sub
dec
push
push
mov
in
sbb
mov
adcb
sub
jns
orl
dec
mov
pop
cwtl
sbb
das
mov
sbbb
sbb
xor
rolb
cmpsb
jo
jp
lcall
icebp
and
xchg
sub
pop
mov
pop
jbe
scas
jae
lods
mov
and
or
imul
cmp
repz
outsb
pop
adc
and
mov
inc
xor
pop
add
cmp
aaa
pop
jne
or
pop
popf
mov
cmp
cmp
sbb
mov
bound
jnp
fcompl
mov
rcrl
fcmovbe
fidivrs
xor
jbe,pt
mov
mov
outsb
cmp
inc
adc
mov
leave
cmp
xchg
ljmp
jle
ret
xor
ret
push
sub
or
mov
and
sbb
popf
movsl
fs
or
dec
xchg
pop
outsb
loop
and
xorl
ja
data16
dec
sahf
xor
jle
popaw
arpl
pop
cmp
adc
mov
pop
shr
xor
loopne
addr16
les
pop
nop
rorb
and
ficomps
push
push
das
popf
in
iret
adc
addr16
repz
std
cs
into
movsl
and
lcall
stos
ret
mov
clc
cmp
xchg
scas
jbe
das
mov
dec
ljmp
xor
lock
lods
shlb
xlat
jb
mov
inc
lock
dec
pop
mov
fsubrl
loope
orl
adc
fwait
inc
sub
jmp
cmp
into
pop
rolb
push
mov
cmpsb
adc
push
fidivrs
bound
sbb
jbe
int3
mov
dec
jmp
xor
cld
in
cld
cmp
push
clc
cmpsb
push
jne
lcall
movsb
sbb
or
push
pop
stc
iret
mov
add
adc
xlat
addl
mov
dec
lods
push
jb
jns
ljmp
xor
out
push
subl
and
jge
push
sbbb
mov
repz
xchg
inc
sub
inc
rorl
adc
mov
xchg
xchg
dec
xlat
adc
imull
cltd
sahf
mov
pop
cmp
stos
rcll
push
adc
inc
ja
xchg
loop
movsb
clc
orb
cmp
leave
in
mov
int3
mov
xor
cmpsb
dec
mov
push
adc
enter
test
jmp
pop
cmc
imull
scas
cmpsl
scas
mov
pop
jb
lahf
enter
les
jne
inc
push
jmp
inc
xchg
or
mov
lcall
inc
and
jo
std
pop
cmc
mov
int3
popf
in
insb
or
mov
adc
insl
mov
xor
mov
popf
lock
pushf
cltd
nop
mov
jno
xchg
lds
and
insb
inc
xchg
adc
pop
jg
sahf
xchg
adc
jbe
pop
test
and
aam
std
or
out
repnz
je
push
xorb
sub
mul
mov
mov
inc
mov
sub
xor
push
pop
inc
outsl
add
imul
test
pop
jge
lea
or
mov
or
ja
push
mov
iret
sbb
in
movsb
repz
cmp
cmp
lds
bound
push
dec
pusha
adc
jp
es
hlt
adc
jb
out
out
xor
cmpsb
sub
push
sbb
cmp
aaa
lds
cs
xchg
movsl
test
sub
aas
mov
jp
dec
push
adc
and
and
je
xchg
jo
or
mulb
test
outsb
dec
push
std
xchg
mov
les
stos
stc
mov
and
xchg
push
sbb
aad
popa
das
lret
sub
imul
cmp
fisubrs
xor
ljmp
xor
jecxz
iret
jmp
loopne
jb
leave
xchg
dec
sbb
and
je
jns
inc
adc
jmp
mov
pop
dec
push
nop
dec
andl
push
jno
sbb
pop
lcall
test
xor
lea
out
enter
lahf
cltd
cmp
or
arpl
and
loopne
stos
adc
jle
lret
cmp
movsb
movsb
add
add
cs
jle
mov
add
ret
xchg
ss
mov
dec
push
stos
daa
cmp
daa
shl
enter
add
inc
mov
das
pop
push
mov
push
das
jl
sub
fwait
xor
mov
call
pop
xchg
xor
dec
add
sub
mov
stos
ljmp
stos
and
les
inc
push
ljmp
xchg
rolb
or
ret
inc
in
and
rcrl
pop
pop
pop
lea
jns
push
mov
dec
push
jns
cmp
gs
testb
push
add
leave
mov
mov
decb
cmpsb
dec
push
cmp
add
sahf
sbb
push
jecxz
and
xor
jmp
int3
popa
sahf
ret
test
mov
mov
and
lods
xchg
xchg
pop
into
addr16
scas
jg
faddl
push
das
ds
clc
fimuls
dec
test
jmp
mov
pop
in
inc
in
in
insb
cmc
jle
scas
mov
repnz
sub
push
push
xchg
sub
ja
hlt
xlat
test
idivl
and
jl
adc
loope
sti
pop
loop
push
mov
cmp
mov
mov
test
sbb
xchg
insb
push
orl
insb
cltd
xchg
imul
stos
movzbl
jle
or
fs
push
lds
inc
pop
fcmovb
and
sbb
dec
inc
sti
addr16
imul
push
in
xchg
pop
cmp
test
daa
pop
push
push
xor
push
dec
bound
adc
xchg
cli
mov
negb
xor
js
sub
pop
sbb
arpl
mov
cmp
and
mov
scas
adc
xchg
jge
mov
pushl
repnz
push
mov
faddp
ret
out
jnp
lahf
fwait
or
adc
leave
call
iret
jmp
jl
jecxz
jbe
sbb
pop
push
repz
sbb
pop
cmp
jne
lcall
lods
das
aam
inc
cmp
fcomi
mov
cmp
jg
or
shl
jecxz
and
nop
lahf
sbbl
pop
mov
cmp
add
jp
pusha
push
mov
and
ds
mov
mov
jno
adc
mov
and
dec
adc
add
stc
sbb
jbe
push
pusha
push
or
andl
mov
jnp
call
aas
xchg
cmpsb
mov
loopne
inc
in
xchg
popf
jo
cmc
dec
xor
std
lahf
fdivrl
test
loopne
sub
add
rclb
nop
dec
jae
aad
or
aad
cmp
pop
into
push
add
mov
cli
or
popa
push
push
iret
lds
mov
in
idivl
xor
ss
in
jp
enter
jecxz
out
daa
cmp
popf
sarb
dec
push
xor
dec
add
lret
aad
test
outsl
ss
push
sub
jbe
jno
mov
pushf
push
dec
cmp
stos
sbb
xchg
pop
sub
ret
or
adc
jle
sub
cwtl
xchg
or
dec
stc
fcoms
jmp
call
pop
mov
push
cltd
fs
clc
sbb
sbb
shlb
ret
sub
test
adc
shll
push
lds
mov
shrb
clc
pusha
shlb
inc
xchg
ret
ljmp
cmp
test
cmp
add
xchg
outsb
mov
fdivrl
lods
insb
fisttpll
popa
xchg
popa
inc
xchg
push
xchg
push
or
mov
xor
jecxz
outsl
ficoml
je
hlt
scas
push
subb
mov
dec
insb
jmp
mov
div
sub
push
stos
movsb
jnp
mov
shrb
aaa
push
sbb
ficomps
test
scas
mov
xchg
stc
and
inc
push
inc
sahf
or
inc
xchg
dec
cs
sub
addr16
dec
add
stos
in
loope
dec
mul
scas
rcl
push
hlt
dec
gs
sub
cmp
hlt
fwait
pop
in
and
int
dec
icebp
dec
xchg
mov
icebp
mov
xchg
push
int
movsl
insl
and
test
fimuls
movsl
andb
mov
je
inc
mov
inc
or
or
arpl
sbb
jmp
pop
xor
pop
xchg
jno,pn
and
pop
subb
mov
mov
jmp
lea
mov
loop
test
jnp
mov
dec
jle
shrl
inc
cmpl
inc
dec
xchg
in
inc
pop
jecxz
pop
mov
push
and
repz
dec
rorl
adc
cmpsl
add
fidivl
lods
mov
adc
fstl
sbb
sbb
sbb
xlat
jbe
mov
inc
xchg
mov
mov
xchg
std
push
jbe
xlat
enter
sub
lret
mov
cli
dec
out
loopne
pop
xchg
into
scas
mov
test
push
sti
fistl
movsb
push
pop
call
or
rcrb
lahf
enter
out
pop
push
dec
mov
sbb
fistl
mov
sbbl
push
faddl
adc
cmc
adc
xor
movsl
cmp
adc
shlb
addr16
xor
test
ljmp
jae
test
add
in
test
jb
cltd
mov
add
mov
in
add
pop
mov
inc
jle
cmp
test
adc
js
mov
aaa
push
out
movhps
fistps
hlt
mov
xchg
pop
in
adc
data16
cmp
ljmp
jo
cs
dec
jmp
xor
jno
push
scas
jbe
push
mov
sub
gs
and
fidivrs
pop
xlat
fsubl
mov
jge
sub
cmp
push
or
mulb
push
fcoms
ret
jmp
jns
dec
scas
mov
mov
in
mov
imul
loopne
out
js
fidivl
lods
stos
cmp
push
jns
xor
or
testl
sbb
scas
ds
jns
sbb
pop
xchg
dec
jnp
test
jne
je
mov
and
jnp
push
inc
pop
mov
dec
and
stos
cmpsb
add
popf
out
dec
testl
sub
movsb
rcll
push
stos
loop
jno
sti
sbb
lods
add
xor
inc
dec
sbb
inc
add
jbe
aaa
cmp
jmp
add
repz
repz
jns
in
jp
inc
mov
xchg
aad
add
dec
sbb
sbb
mov
add
mov
jno
dec
stos
das
sub
into
js
dec
cmc
sub
dec
jnp
cltd
dec
push
out
mov
into
and
insl
rorb
enter
or
repz
push
ffree
pop
mov
mov
cld
cmp
mov
lret
je
push
out
fsubl
push
sub
leave
pop
xor
je
addr16
clc
xchg
fwait
es
adc
dec
jecxz
xorb
cmp
outsl
sbb
mov
mov
test
jae
cmp
xlat
cs
adc
sbb
inc
sub
fsubr
jp
pop
lcall
inc
lods
lcall
lahf
jg
adc
lods
or
int3
daa
out
in
fs
pushf
mov
repz
add
cli
or
jbe
je
bsf
sub
sub
scas
mov
inc
jge
push
pop
cmpb
sbb
pop
jge
in
xchg
fsubl
cli
mov
mov
adc
lahf
and
pop
fcoms
fmull
out
mov
out
lret
push
push
dec
push
imul
filds
or
and
cmp
repnz
addl
pop
xor
dec
mov
pop
lret
add
xchg
or
in
jbe
sub
mov
aaa
into
in
pop
ret
insb
addr16
stc
mov
push
shrl
mov
fildl
xlat
je
cmp
mov
clc
mov
aaa
fidivl
fcompl
or
adc
xchg
jbe
add
jb
faddl
fadds
mov
sbb
fcmovnb
or
mov
adc
sub
sub
out
loopne
repnz
xchg
movsl
movsb
mov
shll
mov
adc
fsubl
inc
mov
das
std
test
aad
ljmp
shlb
xchg
adc
push
mull
das
mov
int3
pop
and
push
fs
dec
movsl
mov
sub
outsb
movsl
test
aad
mov
mov
pop
jno
insl
mov
mov
cwtl
imul
inc
fstpl
inc
xor
lea
out
les
mov
mov
mov
pusha
repz
cltd
pop
jg
xor
adc
divl
cmpsb
ret
ja
lock
push
hlt
lcall
rolb
or
pop
scas
sbb
adc
mov
leave
fbld
mov
mov
in
movsl
imul
push
adc
push
mov
cmp
lcall
jge
movsb
je
punpckhwd
aam
or
aam
mov
jle
pop
int3
imul
ret
and
adc
mov
lds
scas
stos
iret
push
jge
inc
shlb
mov
aad
stos
nop
arpl
je
rcr
jecxz
push
push
popf
push
sarl
mov
jmp
jg
inc
outsl
int3
mov
sarb
loope,pn
mov
outsb
sbb
rcll
ja
adc
out
scas
jge
fs
dec
jns
jecxz
stc
and
mov
shlb
jp
mov
in
mov
sbb
insb
pop
mov
movsl
add
push
aad
cmc
push
test
or
xor
cmp
insb
ret
jno
int
sbb
dec
loope
and
aaa
add
sahf
loopne
ret
mov
pop
pop
negb
cltd
push
add
adc
push
add
cs
or
lea
bound
sub
insb
cmpb
arpl
cmp
lret
xchg
push
lahf
fs
mov
add
push
pop
sub
subl
fistpll
lcall
cli
and
cli
bound
inc
shrb
xchg
fs
fwait
ljmp
or
pop
or
stos
add
jge
push
cli
ljmp
push
scas
mov
cmp
cs
fcmove
pop
mov
test
dec
xor
data16
xchg
fwait
sbb
sbb
pop
push
inc
sbb
add
inc
push
fldt
dec
or
or
and
faddl
daa
test
rorl
mov
lret
icebp
pop
cld
nop
scas
daa
ss
push
cmpsb
xor
xor
test
addb
pop
push
inc
jns
cmpsb
xor
shrl
jp
hlt
adc
enter
outsb
ja
xlat
movb
push
xchg
push
idivl
cld
int3
pushf
mov
jl
xor
lods
sti
jae
arpl
shll
fstpt
lods
xor
or
sub
lds
mov
cmp
nop
dec
jecxz
leave
ret
inc
and
insl
jp
or
add
not
push
mov
lods
push
repnz
fisttps
push
xchg
xchg
test
std
push
es
sarb
push
sbb
sbb
or
pushf
out
cmpsb
fnsave
push
dec
scas
mov
add
mov
mov
dec
adc
mov
imul
shlb
or
pop
loop
push
pop
test
shrb
mov
out
insl
jle
into
and
in
icebp
shrb
mov
xchg
addr16
and
rcrb
inc
push
jo
jns
jl
scas
clc
or
xchg
jbe
sbb
xchg
xor
cmp
adcb
xchg
rol
dec
jle
lret
movsl
insl
sbb
loope
cld
hlt
loope
popf
fisttpl
jmp
xchg
sbb
stos
or
and
and
cmpsb
jge
jo
mov
fs
xchg
push
data16
adc
and
xor
pushl
ljmp
pop
ja
pusha
jmp
or
test
add
jo
test
mov
mov
inc
push
jae
xchg
xor
lahf
sub
or
shll
pusha
sub
jecxz
inc
mov
inc
inc
lcall
sub
push
je
outsb
push
movsb
xlat
fdivrp
mov
inc
repz
sarb
mov
ret
jns
push
dec
loop
mov
xchg
push
es
pop
pop
mov
sahf
jp
pop
or
leave
dec
sub
mov
mov
les
testl
lret
push
xchg
inc
outsl
jb
jns
pop
mov
push
add
ds
repz
xor
nop
aaa
jae
add
int
mov
fucom
nop
lret
xchg
mov
push
xor
ss
sub
mov
shrb
xchg
jp
xchg
jno
xor
sub
dec
stos
jl
mov
add
sub
sbb
adc
sbb
aam
in
cmp
popa
scas
sbb
aad
enter
cltd
xor
inc
pop
and
cmp
jb
mov
jmp
inc
or
sbb
nop
daa
adc
cltd
dec
jmp
pop
dec
sti
push
jbe
outsb
stos
mov
pop
repz
adc
sub
mov
inc
and
xorl
leave
loopne
jge
movsb
sub
stos
test
shlb
inc
das
dec
push
cmp
stos
ret
out
xor
imulb
enter
sub
xchg
clc
pop
mov
test
mov
lods
push
int
sbb
push
int3
cltd
pop
test
or
std
popf
rcll
cld
jo
jae
loop
add
ret
xchg
or
xchg
xchg
xchg
push
jl
bound
mov
jne
das
js
mov
push
sbb
int
jmp
dec
mov
sub
jl
pushf
sbb
pop
dec
insl
outsl
ret
add
data16
outsb
fnstcw
push
iret
fcmovu
imul
aaa
mov
cmp
and
lea
clc
ss
fistpl
repz
out
sarl
shll
push
gs
cmc
and
sub
jae
add
and
adc
les
lret
mov
ret
addr16
and
jbe
cs
push
mov
jno
sarb
dec
xlat
xor
cltd
stos
xchg
fdivr
cltd
add
xchg
add
mov
xchg
fs
fisttps
aam
push
xor
sti
or
dec
sub
imul
loopne
pop
jle
adc
out
and
push
add
xchg
mov
jl
xorl
add
cltd
into
rcr
inc
sbb
movntps
jbe
fstpt
pop
into
pop
xor
cltd
push
fadds
xor
mov
adcl
pop
lods
hlt
bound
repz
mov
aad
in
inc
inc
pushf
stos
jle
add
outsl
sbb
popa
pop
into
dec
hlt
ds
dec
jnp
mov
jae
dec
dec
sbb
xor
cmp
or
sar
push
ds
mov
lret
mov
fwait
roll
push
jnp
ds
adc
sahf
js
add
mov
testl
xor
popa
adc
xchg
xor
test
pusha
jmp
scas
lods
int
inc
jne
movsb
leave
cmp
sub
leave
pushf
push
add
lcall
mov
jnp
jle
pop
mov
mov
or
subl
sub
mov
bound
dec
jle
xor
mov
push
and
push
push
mov
cld
aaa
add
stos
jno
lret
mov
or
jnp
jbe
cmpsl
jp
lds
lret
arpl
test
dec
pushf
shl
mov
jb
test
xchg
outsl
inc
pop
jle
jne
and
decl
cmp
or
fldcw
dec
inc
lea
clc
in
push
ds
dec
push
add
shlb
xchg
repz
dec
and
push
sbb
adc
jno
adc
jbe
loopne
dec
je
xor
fistpll
test
dec
jecxz
dec
push
gs
pop
xchg
add
lret
les
add
cmp
cmpsb
call
mov
stc
xor
and
fbstp
sub
push
fwait
lock
sub
test
jae
sti
adc
mov
cmp
pop
outsl
pushf
dec
loope
popa
add
iret
outsb
mov
pop
fs
add
xor
cltd
stc
imul
and
fimull
divl
lea
sbb
or
sbb
mov
aam
out
aaa
push
dec
in
popa
mov
mov
sbb
lds
mov
test
test
out
arpl
pop
dec
or
mov
notl
sub
ret
mov
jp
push
xchg
orb
push
in
pusha
cmp
jl
cmp
xchg
xchg
mov
cmpsb
fdivl
call
fs
les
xchg
popf
xchg
popa
ret
sbb
out
insb
mov
and
rclb
xor
fisttpll
adc
mov
ret
sbb
cld
push
dec
mov
mov
inc
stc
sub
push
pop
movsb
sbb
sarb
and
pop
scas
add
dec
lea
pop
jns
je
fsubs
cmp
xchg
cmc
mov
jge
inc
les
ror
add
mov
negl
lcall
push
pop
je
pushf
and
mov
sbb
or
xor
mov
and
mov
nop
les
ficompl
push
imul
dec
dec
aam
shlb
clc
ficompl
push
and
push
push
loopne
sub
rorb
rclb
mov
push
xchg
mov
add
aas
jne
hlt
lock
inc
inc
mov
jne
loope
and
cld
cmp
cltd
sbb
inc
sbb
mov
loop
lcall
lret
push
adc
test
arpl
pop
std
sbb
clc
mov
and
mov
cli
sbb
call
ljmp
jecxz
into
add
cmp
popa
xchg
fstl
nop
leave
enter
sub
push
out
sub
adc
add
xchg
mov
stos
mov
popf
cmp
movsl
jge
jmp
xor
xchg
roll
sbb
push
lods
mov
dec
and
out
and
dec
popf
add
stos
mov
test
cld
push
push
hlt
jp
dec
or
adc
in
scas
mov
mov
inc
inc
lea
fucomi
sarl
jge
dec
std
add
cmc
rclb
fcoml
cwtl
imul
adc
or
nop
loop
popf
mov
cmp
lea
divb
xchg
sar
mov
mov
push
add
std
push
int
jo
sarb
mov
sarl
jae
push
test
lahf
stos
push
popa
sub
sbb
mov
cmp
pop
jmp
mov
jne
cli
dec
aad
stc
es
lret
hlt
cmp
test
repnz
cmpsl
dec
pop
enter
inc
xchg
scas
adc
lcall
mov
mov
mov
dec
xor
mov
and
mov
clc
lahf
lcall
mov
insl
sub
cmp
and
jb
adc
iret
lods
mov
pop
jne
out
mov
clc
dec
mov
aad
jle
movsb
dec
jnp
into
sbb
dec
sti
iret
push
jmp
addr16
ljmp
inc
mov
xchg
ljmp
lret
jnp
mov
call
push
add
mov
and
pusha
shlb
cltd
cmp
mov
pop
inc
dec
xchg
lods
out
jge
mov
sub
sbb
fucomip
adc
popf
mov
repnz
inc
dec
xchg
imul
incb
adcl
mov
or
push
pop
jmp
data16
in
out
jo
mov
imul
iret
dec
lcall
insb
into
dec
sbb
je
xor
jle
jmp
test
sarb
xorb
or
mov
nop
cwtl
scas
shlb
sti
inc
and
or
daa
or
mov
dec
jno
pop
mov
push
mov
sahf
pusha
sbb
lcall
imul
mov
xchg
sbb
shl
dec
mov
xorl
stc
daa
mov
push
ds
pop
push
jo
int3
aam
sub
lret
or
or
mov
sbb
bound
inc
mov
in
icebp
popa
pop
imul
fcoml
movsb
adc
pop
data16
sbb
stos
pop
outsb
clc
jae
scas
xchg
into
pop
dec
repnz
dec
pop
dec
icebp
mov
adc
fnstcw
shl
add
or
andl
jge
push
pop
fadd
or
cmp
imul
sbb
test
imul
push
lds
jns
jnp
leave
roll
jne
mov
mov
out
push
xor
mov
and
mov
mov
adc
mov
cmpsl
dec
mov
jae
jno
aas
std
rorb
xchg
dec
cwtl
cmc
shll
ficoml
sbb
adc
sbb
mov
movsb
and
xlat
stc
xor
push
lret
scas
pop
lcall
lret
iret
jno
call
daa
pusha
add
pop
insl
lods
mull
xor
sbb
icebp
test
adc
xor
or
xlat
mov
cmp
cmp
loopne
mov
jo
mov
xor
push
cmpb
mov
jne
jne
aam
or
mov
xchg
stc
cmp
stos
xor
xchg
pop
sti
cmp
sub
xchg
jnp
push
xchg
fs
push
add
mov
pop
xchg
push
sbb
xchg
jnp
pop
push
push
in
add
icebp
aas
mov
popl
and
out
jl
adc
xchg
mov
jmp
mov
push
push
movsb
push
sub
xchg
xlat
and
mov
lret
inc
iret
sub
cmp
daa
shrl
sbb
sahf
mov
pop
adc
inc
adc
xor
aas
or
mov
aaa
sub
dec
mov
push
outsl
mov
in
int3
ljmp
inc
mov
mov
ds
or
testb
dec
xor
dec
dec
rolb
dec
aaa
xor
mov
sub
test
mov
cli
or
xor
jno
sbb
dec
xor
jle
xchg
icebp
inc
mov
push
dec
jae
xor
mov
les
adc
adc
call
jne
mov
xor
imul
mov
push
fidivrs
jnp
dec
sub
fistpll
shlb
or
or
fcoms
stos
mov
out
sar
outsl
xchg
call
add
cld
mov
add
insb
les
jle
lahf
std
lds
les
or
pop
adcl
xchg
dec
xorl
dec
jge
aad
jae
xor
xor
adcl
jmp
bound
xchg
or
mov
mov
sub
mov
xchg
imul
fstpt
imul
cmc
pop
pop
xor
pop
sbb
daa
into
fs
dec
lea
fdiv
jmp
fbld
cmp
je
jns
push
add
cld
cmp
xor
inc
and
xlat
dec
subl
cli
stc
out
xor
inc
ja
jle
push
hlt
mov
mov
xor
test
mov
add
or
cmp
mov
nop
loop
xchg
mov
orl
inc
cmpsl
xchg
test
shlb
pop
jbe
mov
dec
aaa
mov
and
dec
dec
add
mov
jno
sarl
sbb
pop
mov
test
jecxz
inc
xchg
aas
mov
and
xchg
cwtl
in
inc
mov
inc
mov
or
lret
jl
sub
sar
dec
push
pusha
cltd
pop
fistl
aaa
and
out
sub
xlat
fwait
add
jp
adc
mov
mov
hlt
lret
lods
in
scas
adc
jge
ret
out
push
cmp
push
and
jmp
outsl
pop
loope
xlat
mov
cwtl
popa
fldt
shlb
push
stos
jge
xchg
cmp
pop
and
mov
pop
xchg
rorb
mov
enter
ss
jb
cmp
and
inc
or
xchg
sub
add
insb
sbb
mov
push
mov
push
xchg
shll
dec
xchg
sub
mov
jno
xchg
adc
outsb
push
inc
cmpsb
mov
jae
xchg
ds
lret
push
mov
fwait
sbb
xchg
xor
fwait
sub
mov
int3
or
iret
jl
xor
jno
mov
rcrb
push
add
aam
test
pop
and
scas
mov
xchg
sub
mov
cmpsl
popa
nop
mov
jg
pop
mov
clc
jns
push
insl
movsb
dec
vmulsd
ljmp
mov
push
fs
ljmp
sub
dec
xchg
jnp
mov
jl
ds
sbb
and
dec
xor
fisttpl
xchg
decb
icebp
add
fiadds
ds
cwtl
cmpb
test
fnstcw
cmc
cmp
mov
imul
jge
pop
cmp
mov
sti
add
test
jae,pn
pop
dec
jae
pusha
mov
mov
cmp
sahf
imul
cli
repz
out
sahf
push
sub
sbb
mov
repz
subb
nop
pop
xchg
xchg
into
push
data16
ret
out
cltd
fld
add
in
insl
or
call
ror
cwtl
mov
mov
mov
cltd
jb
xorl
int
mov
push
stc
mov
ret
and
pushf
orb
xchg
daa
mov
dec
mov
or
mov
ret
inc
push
xchg
in
fdivl
xchg
cmp
out
js
hlt
push
cld
sbb
negl
sbb
pop
sahf
cmc
cmp
jne
lret
add
and
mov
mov
pop
xchg
fnstcw
cmpsb
dec
in
aas
insb
frstor
out
mov
xor
int3
lret
xor
sbb
lds
cmpsb
aaa
adc
inc
in
es
xchg
lods
sbb
jecxz
outsb
mov
pop
aas
cld
mov
repnz
dec
add
jl
rclb
push
xor
in
cwtl
mov
inc
jno
popf
or
xor
adc
mov
test
in
mov
shrl
xor
mov
sub
push
lret
pop
and
sub
jne,pn
cltd
nop
add
xor
fwait
sub
fbstp
fiadds
outsb
inc
sahf
outsb
cmp
add
mov
lods
xchg
dec
lcall
xchg
xor
xor
pop
mov
rorl
pop
mov
loopne
push
rcl
pushf
out
and
xchg
stc
or
sbb
inc
paddsw
movsl
push
rcll
sbb
jbe
cwtl
inc
fistpll
cmp
aad
insl
jbe,pt
cmp
test
loope
loope
add
out
es
and
repnz
jmp
xchg
lds
push
pop
in
push
sub
out
xchg
imul
jnp
xchg
inc
dec
mov
xor
insl
jg
jp
lret
rcrb
push
cmp
test
out
pop
cs
js
inc
inc
mov
fimull
or
sahf
sbb
fsubs
les
insb
sub
lret
arpl
jle
mov
jo
movsb
pop
in
cmp
sub
adc
xchg
daa
cmp
push
aad
mov
and
fcmovnbe
push
adc
aam
push
pop
fcomip
sbb
inc
lret
add
mov
jns
mov
loopne
jns
mov
jae
add
cmpsb
xor
movsl
rcrl
lret
adc
dec
push
push
sub
insb
add
xor
or
sbb
ljmp
ret
sub
in
inc
cmp
xor
pop
jbe
cmpsb
push
fcoml
jno
lods
sbb
fs
xchg
in
btc
addr16
pop
mov
sub
or
pop
fidivs
xchg
mov
sub
mov
mov
add
jbe
sahf
push
mov
cmp
imul
or
sub
or
mov
flds
cmp
in
sub
fldenv
fsubp
insl
mulb
daa
adc
xchg
fnstsw
aas
and
pop
adc
rorb
mov
repnz
or
ljmp
xchg
xor
cli
popa
xor
mov
jb
rcr
push
jns
roll
ret
mov
mov
sub
sub
and
sbb
out
push
rcrl
jns
rolb
sub
insb
adcl
lret
jne
bndstx
adcl
xchg
jecxz
sbb
loop
inc
das
out
sbb
inc
xor
and
dec
jp
fcomi
cli
js
pop
jbe
push
and
movsb
mov
es
gs
mov
xor
pop
lds
mov
or
lea
inc
or
lock
add
dec
stos
mov
push
sbb
movsb
cltd
fstpt
add
les
stc
pop
addb
bound
or
fstpl
nop
lods
dec
fcmovnbe
or
cld
and
adc
addb
sti
mov
in
jp
mov
loope
fwait
add
aam
lcall
or
push
jecxz
mov
cwtl
mulb
and
mov
xchg
jmp
mov
les
ss
and
in
enter
into
xor
outsl
mov
xor
imul
add
dec
jmp
pop
stos
jbe
xchg
mov
subl
or
mov
or
mov
ss
add
bound
loope
xchg
lret
xlat
mov
cmpsb
mov
inc
cwtl
scas
sti
in
mov
in
jno
inc
test
adcl
pushf
add
cmp
jns
xor
jne
lret
xor
mov
adc
icebp
and
test
clc
inc
push
stc
loopne
insl
lret
imull
sbb
lods
push
xchg
add
testl
mov
push
jbe
adc
imul
jge
pop
sbb
xchg
shlb
scas
push
mov
fisubrs
xor
addr16
mov
shlb
mov
xor
jle
or
push
insl
push
test
mov
pop
lods
fisttpll
mov
and
cmp
into
stos
jae
popa
shrl
das
mov
mov
jg
aad
adc
xor
sub
out
loope
clc
inc
fsubl
xor
out
arpl
mov
test
pusha
repz
pop
aam
ds
mov
adc
aas
push
aaa
or
jb
mov
insb
scas
cmp
xchg
ret
pusha
pop
loop
jg
test
lods
mov
imul
jp
ds
mov
jg
jno
jbe
xchg
and
pop
cs
es
mov
mov
mov
jae
data16
dec
mov
ret
and
ds
fstpl
jae
rcrl
repz
xor
xchg
jecxz
fcoms
add
arpl
enter
scas
pop
inc
add
xor
mov
mov
inc
out
adc
sbb
ret
and
sbb
adc
dec
adc
dec
jae
pop
push
jg
jb
and
out
out
popa
inc
pop
loopne
jns
xor
xchg
jb
sub
add
or
sbb
cmpl
sbb
mov
cmpl
xchg
and
mov
loop
adc
rorl
movsb
adc
std
imul
pop
pushf
jae
call
inc
pop
dec
and
cmovp
or
jle
and
jnp
out
mov
push
add
dec
ja
dec
jp
fistps
aam
sbb
out
mov
dec
outsl
inc
cwtl
fadd
mov
mov
jmp
testl
mov
fdivl
icebp
test
jb
outsl
cld
je
je
repz
xor
adc
aad
inc
cmp
loope
dec
cmpsb
popa
pop
aad
xchg
mov
pop
lods
pop
hlt
repz
cmp
in
adc
out
cmc
aaa
xor
js
sub
cmp
add
xor
jge
adcb
jno
xchg
and
inc
fnstenv
dec
sbb
mov
or
and
orb
imul
lods
test
cmc
mov
push
jo
mov
pop
cmp
les
mov
cmpsl
in
psubw
mov
sarl
mov
lret
and
xchg
hlt
fmull
scas
cmp
loopne
sub
jbe
xor
loope
ret
push
cmp
xchg
sub
pop
mov
sbb
push
lahf
cwtl
and
xchg
or
lcall
loopne
out
daa
loopne
sbb
add
mov
mov
xchg
mov
dec
dec
ss
cmp
mov
sub
mov
iret
xchg
xchg
outsb
dec
xchg
sbb
mov
dec
mov
sbb
inc
nop
add
lock
pop
je
fwait
in
negb
je
xchg
adc
pop
outsb
jb
xor
pushf
sbb
in
jne
xor
cmp
fidivrs
jbe
outsb
mov
jecxz
notb
sar
pop
in
pop
int3
sti
shlb
fs
jge
aam
or
arpl
dec
dec
mov
cmp
push
inc
sub
xchg
jb
gs
adc
sahf
dec
ljmp
mov
clc
imul
lea
das
mulb
push
pop
aaa
arpl
add
and
mov
aas
stos
lods
test
cmpsb
and
mov
jl
iret
jge
ret
inc
ljmp
jae
push
fldenv
mov
loopne
insl
sbb
xchg
aas
ror
and
daa
sub
test
push
or
fnsave
mov
repz
lea
mov
mov
or
in
jmp
call
in
call
pop
fisubrs
pop
adc
mov
int3
dec
out
out
mov
std
outsb
div
out
push
outsb
pop
push
andb
mov
or
out
jae
sub
stos
inc
jle
in
lret
inc
in
in
mov
push
xlat
cmp
cli
cmp
das
aaa
das
inc
pop
add
lods
push
scas
or
xchg
jmp
jne
test
pop
mov
pop
into
jecxz
adc
cmp
mov
repz
cmp
sub
cs
bound
movsl
fisubrs
or
mov
insl
les
jns
mov
push
mov
test
rcrb
sub
out
inc
loope
pop
mov
mov
sbb
test
add
mov
or
sub
dec
add
lock
mov
ja
inc
psubq
push
sar
aad
ja
insb
cli
fwait
gs
push
mov
and
mov
pop
and
xchg
push
fdivrl
js
add
or
out
mov
sub
push
stc
outsb
inc
ret
pop
add
insl
inc
stc
jg
movsl
inc
inc
sbb
or
out
bound
test
jmp
pop
jnp
es
sbb
pop
sbb
mov
xchg
cwtl
cltd
jmp
movsb
push
inc
in
fucomip
movsb
fcoml
mov
fisubs
push
es
aad
test
dec
cmc
mov
jecxz
jmp
iret
mov
cmc
xchg
and
cwtl
sub
pop
in
push
or
shrd
jecxz
mov
xor
cmp
mov
push
imul
fisttpl
cli
jne
cmc
mov
mov
pop
or
mov
and
movsb
cmpsl
fstpl
add
mov
sbb
push
shrl
add
lock
push
add
pop
arpl
xchg
and
mov
loop
arpl
mov
xchg
inc
pop
mov
stos
stos
xchg
sbb
ss
in
jae
call
popf
mov
push
popf
jae
push
cmp
sbb
and
in
inc
adc
sarb
push
gs
or
popa
jle
mov
gs
adc
movsb
sub
mov
dec
insl
mov
scas
dec
push
or
and
mov
xchg
xchg
and
in
inc
into
mov
xlat
pop
fmuls
lret
jo
pop
dec
repz
cmpsl
out
mov
inc
push
sbb
fimull
xor
add
rclb
addr16
xor
data16
mov
enter
xor
inc
sbb
cmc
decb
sahf
ja
jl
dec
add
das
pop
pop
cmpsl
lock
xchg
outsb
dec
xchg
sbb
adc
int3
pop
aam
sbb
stos
ret
loop
jns
gs
cltd
and
pushf
loope
mov
lds
test
or
aaa
ljmp
js
je
test
stc
pop
lds
fidivrs
int3
and
leave
pop
push
dec
mov
lock
ljmp
frstor
lret
sub
adc
sbb
ret
xchg
test
adc
xor
js
push
jmp
jb
sbb
or
xor
aad
cmp
pop
mov
cs
shlb
xchg
jbe
mov
fabs
inc
and
and
adc
push
jecxz
outsl
adc
shrl
cmpsl
mull
sub
fsubrs
in
test
sarl
pop
fldl
mov
inc
daa
xchg
cltd
jae
push
add
loopne
pop
into
pushf
test
mov
jmp
iret
jge
cmc
sar
xor
insl
and
mov
pop
or
aam
dec
movsb
mov
testl
inc
bound
mov
movsl
dec
lock
arpl
out
in
lds
pop
adc
mov
movsl
inc
add
enter
sbb
push
das
or
fadds
xchg
ret
inc
xor
je
jp
sbb
add
jnp
mov
push
lahf
rcrb
fildl
mov
mov
inc
or
inc
gs
mov
sub
aad
in
mov
cmpsl
outsb
data16
pop
dec
push
std
idivl
cmp
inc
test
je
addl
pop
clc
out
dec
mov
fstps
call
xchg
in
rorl
fsin
or
adc
and
fildl
sbb
into
mov
mov
pop
je
fucomi
ja
and
rorl
jl
fiaddl
dec
lods
das
adc
stos
xor
lcall
pushf
shll
dec
push
aad
sbb
xchg
cmp
adc
push
mov
sub
push
ret
aaa
in
xor
outsl
inc
mov
sahf
mov
cmpsl
dec
out
pop
sub
add
lock
or
ljmp
xchg
push
mov
push
jns
call
jmp
scas
fldt
stos
ds
jmp
test
test
and
lds
lcall
lcall
sbb
fwait
push
dec
jne
inc
test
push
mov
xchg
push
in
cmpl
xor
daa
insb
cmpsl
daa
cmp
mov
inc
cmpsb
mov
aad
jmp
mov
fs
insb
add
inc
out
push
and
dec
mov
dec
xchg
adcl
sub
shl
int3
inc
fsubrl
dec
or
push
jecxz
cmp
xchg
and
divl
cmp
dec
jno
icebp
pop
or
jno
mov
mov
stos
scas
xor
xor
push
mov
add
add
fcom
push
ds
in
sbb
sbb
inc
les
sbb
push
ljmp
pop
pop
dec
dec
arpl
popa
mov
xchg
xchg
mov
sti
test
daa
cmp
lds
dec
sarb
and
vpcomd
or
mov
sbb
loopne
mov
outsb
xor
pop
fstpl
repnz
pop
hlt
fstps
jle
xchg
popf
fwait
mov
bound
jbe
mov
call
repz
add
test
repnz
jmp
jb
lods
sub
int3
aam
pop
pop
das
adc
sbb
cmpsb
xchg
imul
jae
push
push
sbb
xchg
mov
out
shrl
xchg
in
repnz
nop
cmp
scas
insb
adcl
mov
int
cmpsl
xchg
aaa
and
es
dec
pop
jl
inc
shlb
add
repnz
push
mov
test
cmp
mov
fmuls
pop
stos
cmpsb
ficoms
mov
outsb
lods
sub
add
int3
pop
push
shl
dec
xchg
mov
lret
push
call
addr16
push
call
jmp
dec
adcb
sbb
imul
dec
cmp
aaa
adc
dec
pusha
dec
sar
add
mov
mov
dec
je
stc
sub
loop
into
movsb
popa
out
mov
mov
xor
xor
pop
sbb
repnz
jo
or
fs
jne
pop
outsl
mov
jo
loop
adc
lods
es
test
test
int3
aas
dec
add
inc
or
xchg
sbb
pop
lock
pop
pop
out
xor
add
dec
pop
sub
sbb
mov
xor
add
outsl
out
push
cltd
mov
mov
xor
lcall
test
mov
fiaddl
mov
cli
mov
imul
mov
aam
xor
fisttps
push
mov
jl
jle
pop
call
mov
in
mov
push
adc
int
mov
jne
fwait
xor
inc
cmpsl
loopne
add
cmpsb
insb
xchg
js
add
mov
mov
lock
jp
sbbl
call
xchg
ret
popf
cmc
xor
cli
popa
add
fcomps
mov
adc
aaa
cmpsl
cmp
addr16
pop
pop
xchg
sbb
mov
ja
xchg
push
into
rcr
addr16
ss
inc
push
popa
fnstsw
sub
fs
div
push
cld
mov
lea
adc
xchg
jne
pushf
lret
and
mov
xor
mov
xchg
or
cli
add
mov
out
mov
mov
insb
adc
mov
enter
jecxz
lock
cmpsb
pop
jo
mov
jp
loop
pusha
sbbb
shlb
mov
mov
jne
jmp
daa
cmpsb
lahf
jp
daa
xor
and
xor
add
xchg
adc
aad
mov
stc
sbb
push
cltd
mov
sti
sti
ret
sub
mov
scas
cld
add
imul
xor
xchg
les
sahf
jae
dec
xchg
sti
pop
and
leave
jge
fistpl
ret
cmp
hlt
push
pop
pop
add
hlt
xchg
mov
ja
mov
adc
pushf
movsb
rep
aaa
mov
adc
out
and
setns
dec
iret
or
repnz
cwtl
cmp
js
or
push
xchg
jge,pt
xchg
lret
jl
fnstenv
add
sub
cltd
xchg
push
and
sbb
xlat
and
fstps
mov
jne
lret
adc
jl
pop
jle
pushf
cmc
cmp
mov
sub
push
stos
call
je
xchg
xor
sbb
push
cld
push
xlat
push
lock
movsb
jp
sub
sbbb
sarb
and
add
addr16
mov
pop
or
ss
hlt
movsl
outsb
aas
dec
jne
or
test
cmpsl
iret
cmp
mov
mov
xchg
outsb
daa
mov
repz
xchg
notl
push
cwtl
stos
cmp
jbe
cltd
lea
pop
cld
repnz
fbld
cmp
inc
lea
mov
imul
fcmovnu
ds
out
mov
cmp
aam
repnz
and
int
dec
fistpl
inc
adc
jno
outsb
insl
or
clc
loop
dec
call
cld
call
mov
int3
lret
lret
sbb
push
mov
fisubl
xchg
data16
jmp
cmpsb
lods
addb
pop
mov
sub
aaa
pop
dec
sahf
enter
xor
ret
sub
push
rorl
pop
icebp
orl
xchg
negb
sbb
pop
sarb
add
xchg
mov
fimuls
bound
clc
dec
ds
enter
insb
jmp
clc
mov
adc
shr
dec
mov
inc
loope
orl
add
and
mov
xchg
push
stos
mov
test
inc
dec
das
insb
pmaxub
sub
pop
aam
in
sbb
sahf
lods
mov
and
xor
aas
sub
and
dec
repz
hlt
nop
push
cmp
enter
outsb
sti
dec
jle
jae
adc
dec
push
call
scas
cli
test
mov
sub
dec
sub
xor
int
dec
jnp
adc
add
test
frstor
in
test
bound
jne
or
mov
fistl
jl
out
test
pop
movsl
jno
xchg
addb
shrb
inc
and
popf
inc
lahf
roll
mov
cltd
dec
ret
mov
lods
and
jae
int
test
lods
push
or
adc
cmpsb
lods
mov
pop
test
add
test
inc
jmp
pop
xchg
lcall
xchg
aad
movsl
and
fstpt
test
shlb
jmp
fsts
push
mov
lods
xlat
dec
or
ret
xchg
push
enter
ljmp
popf
sti
pop
dec
dec
fcomip
shr
loopne
xchg
in
cmp
cmp
sub
lret
aam
fwait
hlt
je
push
cmp
mov
mov
or
fcmovnbe
dec
mov
mov
icebp
mov
xchg
lods
fwait
mov
mov
jb
inc
xchg
lds
mov
jns
fldln2
sbb
jnp
mov
or
xor
or
xchg
mov
jns
test
xor
jno
leave
jg
push
lods
jmp
enter
aam
xor
jne
cmp
dec
jl
push
or
mov
xor
jl
cmpsb
pop
sub
dec
aad
add
outsl
xchg
lock
jg
pop
cmpsl
dec
sbb
mov
loope
xor
inc
and
adc
mov
push
mov
icebp
fstl
bound
loope
sbb
shl
cmp
stos
lea
inc
adcb
dec
ror
jo
add
xchg
insb
dec
and
jne
cmpsb
js
pop
lret
jp
ljmp
outsl
xchg
xorl
jp
mulb
adc
xor
test
mov
inc
pop
jecxz
jge
fs
mov
loope
push
stos
out
cmp
bound
inc
mov
sti
sub
lcall
mov
xlat
add
repz
dec
in
mov
jnp
pusha
mov
fwait
ret
sub
hlt
fmul
sbb
pop
and
inc
cs
mov
push
sbb
dec
aaa
sub
xor
dec
push
push
roll
rorl
inc
test
andl
into
or
nop
push
stos
imul
xor
cmpsl
jecxz
inc
dec
adc
push
mov
cmpsb
inc
shll
lcall
and
arpl
mov
adc
sub
andl
mov
lret
pop
xor
jae
mov
xchg
std
pop
sar
andl
cmp
xchg
adc
fdivl
cmp
jns
xchg
movsb
leave
dec
inc
iret
popa
push
out
nop
adc
lret
mov
cmp
jns
in
js
stos
loope
test
fnstcw
aam
orb
mov
sbb
inc
pop
ficoml
mov
or
mov
adc
push
popf
mov
sub
mov
sbb
pushf
loope
shr
aas
cld
mov
popf
inc
adc
call
pop
fnstsw
sbb
or
sub
gs
sub
inc
or
and
and
push
xor
jl
add
cmp
jns
sarl
adc
inc
mov
pop
sbb
pop
loope
dec
sub
push
test
cmpsl
push
pop
inc
js
xor
movsb
into
lods
or
dec
imul
pop
sub
jge
jle
filds
push
jp
mov
loop
mov
xchg
mov
pextrw
sbb
push
scas
push
je
daa
icebp
jb
fiadds
adc
sbb
xchg
adc
fnstcw
data16
and
es
lea
push
sub
pushf
mov
and
in
mov
sbb
sub
or
pushf
push
test
hlt
fisttps
or
leave
mov
mov
dec
fcmovbe
decl
xor
jno
adcb
popf
jle
push
or
jl
mov
mov
jecxz
sbb
xor
test
push
addr16
sub
ja
mov
pop
xchg
adc
jo
test
sub
jmp
lock
movsb
inc
test
xchg
lods
scas
dec
aad
ljmp
pushf
loopne
fldt
rorl
aad
mov
inc
idivb
mov
sbb
out
mov
stos
add
cltd
in
mov
sbb
or
cmp
jmp
dec
in
lret
div
negb
rcll
inc
mov
sbb
sahf
fwait
dec
or
cmp
notb
scas
shr
mov
dec
in
add
sbb
imul
pop
je
cmp
push
xor
fstps
jle
dec
dec
adc
inc
fldcw
adc
sub
lret
loop
or
icebp
sub
out
out
pop
jo
hlt
mov
test
mov
popa
cs
push
daa
jae
fmuls
lods
clc
jl
sbbl
push
rcrb
sti
sbb
push
lds
jl
in
mov
lcall
mov
icebp
pop
out
dec
subl
dec
gs
mov
sub
lock
adc
sub
imulb
loope
or
push
repz
xchg
push
aam
cmc
cmp
data16
test
cmovo
das
inc
das
out
daa
fdivrl
shrl
sub
insl
aaa
push
and
adc
xchg
mov
xchg
repnz
jp
pushf
out
ret
sahf
arpl
pop
xchg
xlat
cmp
mov
cs
ja
and
mov
add
cli
orb
pop
imul
ret
negb
dec
adc
jae
inc
or
test
imul
loopne
call
stos
in
jo
jnp
adc
popa
xorl
test
jg
dec
dec
cmp
xchg
mov
out
or
shll
push
dec
xchg
or
and
nop
hlt
imul
xchg
scas
into
dec
cmpsl
push
adc
insb
mov
popf
sub
xorb
outsb
scas
test
lock
sbb
pusha
loope
fdiv
aaa
add
test
dec
fisubl
outsl
xchg
shl
stc
aas
lret
and
ja
loop
fiaddl
mov
add
outsb
popf
sub
cmp
hlt
push
out
push
es
sbb
mov
bound
xchg
mov
xchg
ss
sub
adc
cmovno
xchg
loope
js
imul
inc
loope
insl
mov
add
addr16
in
or
je
mov
shl
cmp
out
std
dec
xchg
dec
adc
xchg
xor
sarb
cmp
sti
stos
movsb
test
rcrl
divb
xchg
popf
pop
pop
loopne
xchg
fwait
mov
das
add
jl
pop
movsl
sbb
inc
ficoms
insl
adc
cmp
add
lcall
cmp
icebp
sub
sub
test
fdivrp
adc
cmpsb
insb
movsb
imul
jg
inc
xchg
xlat
push
imul
sahf
push
inc
adc
mov
xchg
stc
lahf
scas
jl
ret
imul
push
insl
mov
cwtl
stos
push
shl
std
ja
sub
fiadds
pop
push
cmp
jl
mov
notb
cmpsl
mov
rcrl
mov
aaa
xor
xor
in
sub
comiss
dec
xor
pop
sub
add
aad
sub
mov
aaa
pop
cmp
add
adc
out
enter
cli
add
cltd
push
in
inc
iret
xchg
in
lock
push
hlt
call
les
sub
or
mov
mov
pushf
fwait
mov
loopne
inc
imul
mov
mov
pop
ljmp
inc
mov
or
mov
xchg
inc
cmp
add
jmp
js
fistpll
jo
push
pop
hlt
ret
xor
pmulhuw
lcall
ja
iret
addr16
std
lahf
fbld
add
mov
cmp
xchg
jmp
push
es
and
loop
popf
andl
sbb
dec
mov
add
fistl
pavgb
call
push
hlt
jmp
pushf
fs
or
divl
xchg
dec
adc
insl
mov
push
or
adc
inc
js
fsubl
loop
testl
inc
and
dec
cs
call
add
xchg
jg
dec
out
in
add
fisttpll
mov
repz
jp
loop
cld
mov
cmc
aam
mov
mov
push
jo
fidivrs
lret
subb
std
push
es
stos
stc
mov
jns
inc
scas
arpl
xor
pop
jbe
sub
mov
lahf
in
sbb
or
and
xor
pop
or
push
push
repnz
paddb
enter
xchg
inc
fidivl
mov
dec
pop
ja
jns
add
add
std
and
cmpsb
or
jl
imul
es
dec
pop
dec
movsl
int3
lock
dec
fs
ss
andl
pop
movsl
cwtl
mov
and
leave
in
sub
mov
loope
lret
push
pop
das
pushf
mov
aaa
push
mov
add
aaa
jecxz
xor
sbb
lods
inc
movsb
mov
cld
repnz
or
add
and
aam
dec
cmp
push
scas
adc
jg
lcall
loopne
mov
ret
add
mov
xchg
lods
cmp
jbe
jl
daa
inc
push
sub
daa
out
mov
mov
lahf
pop
push
dec
or
loope
adc
adcl
ds
rorl
imull
jl
aas
pop
and
les
xor
mov
sub
jp
in
pop
add
or
cmpsb
push
inc
sbb
push
add
fs
rorb
add
inc
dec
lock
repz
dec
jne
and
xchg
push
xchg
call
push
bnd
out
sbb
shll
rclb
test
movzwl
adc
jp
js
fwait
subb
inc
loop
and
pop
cmp
jl
push
fiaddl
push
mov
in
test
mov
cmpsl
pop
lock
notb
ret
fdivs
int3
enter
mov
enter
or
dec
mov
adc
jmp
jmp
stos
mov
hlt
enter
lock
insb
sub
and
push
push
adc
fwait
cmp
mov
movsl
aas
push
or
and
mov
int
mov
mov
mov
mov
sub
jne
in
arpl
or
push
enter
jmp
xor
es
loopne
cmp
shrb
pushf
leave
pop
pop
js
sbb
mov
inc
jbe
adc
inc
push
cmp
xchg
pushf
cmp
pop
or
jp
test
cmp
repnz
test
sbb
dec
mov
cmpsl
add
add
cld
sbb
push
sbb
sbb
and
dec
ret
pop
mov
or
pop
in
stos
sti
jno
nop
mov
insb
ss
pop
clc
insb
push
mov
imul
mov
xchg
push
cmpsl
out
adc
push
and
fcompl
or
dec
dec
negl
add
xchg
loopne
es
or
mov
pop
repnz
rcl
fistl
mov
jnp
js
orl
adc
clc
xchg
es
sbb
push
add
imul
pushf
dec
push
cmp
xor
inc
or
cmp
sbb
jl
arpl
mov
or
mov
rcl
mov
mov
cmc
cmpsb
mov
adc
pop
push
jbe
sti
mov
shl
xchg
pop
sbb
push
scas
stc
mov
adcb
aas
add
mov
push
add
dec
mov
cltd
lds
test
gs
lods
mov
mov
jecxz
xor
sub
imulb
fs
pushl
jp
bound
jge
xchg
jbe
cs
pop
mov
add
sbb
jno
inc
jo
lea
hlt
and
std
push
push
decl
mov
jle
cmp
mov
xchg
mov
movb
push
sbb
sbb
xchg
out
fdivs
fistpll
inc
mov
in
pop
in
sub
enter
or
xchg
cmp
sub
or
popl
inc
lds
iret
jo
in
mov
add
and
ss
ret
dec
pop
add
ljmp
test
xor
mov
push
lret
xchg
divb
dec
mov
fildl
imul
mov
sbb
pushw
in
mov
add
adc
stc
push
fisubrl
pop
xchg
sub
push
adc
pop
lea
dec
cwtl
push
xor
sti
sbb
in
push
mov
dec
sbb
bound
mov
mov
or
sub
and
xchg
and
bound
jne
fdiv
push
out
pop
sbbl
push
mov
add
int3
cltd
mov
shrb
xchg
insb
or
jge
scas
inc
cli
faddl
sbb
xchg
iret
in
fadd
ds
arpl
stos
or
fs
sub
fs
cld
int3
rol
pop
imul
mov
sbb
ret
repz
in
mov
in
pop
push
shr
out
leave
cmc
pop
mov
push
cmp
jb
mov
neg
and
mov
mov
cld
in
cmp
fiaddl
push
int3
cmp
mov
xor
sbb
dec
inc
in
lcall
mov
mov
pop
cs
pop
jae
sbb
xor
mov
pop
inc
in
movl
imul
jl
inc
sbb
sub
mov
sub
sub
mov
mov
cltd
xor
and
add
mov
xor
mov
negl
test
andb
enter
js
cmp
mov
sbb
xchg
addb
mov
ss
or
fstpt
out
push
adcl
stos
xchg
xor
rcrb
outsb
or
out
adc
inc
xchg
mov
mov
sub
imul
sub
inc
bound
ror
jle
mov
add
gs
dec
sub
enter
inc
cld
stos
ljmp
xlat
cmc
shll
jo
sarb
in
gs
in
jb
mov
rolb
lods
push
test
mov
push
outsl
xor
repz
in
mov
dec
mov
pop
out
pop
ljmp
call
cmp
inc
xchg
xor
sti
pop
mov
mov
mov
inc
rolb
push
jne
mov
shl
out
and
pop
mov
dec
dec
pop
xchg
push
adc
mov
fldcw
mov
or
in
mov
lods
fucomi
xchg
xchg
mov
push
cltd
out
jl
and
dec
lods
lock
cmpsl
lret
js
lea
or
xor
aad
loope
addl
inc
sahf
daa
fmuls
test
stos
js
sbb
mov
aam
fdivs
out
test
nop
mov
mov
jg
mov
sbb
outsl
scas
stc
call
pop
sbb
jge
jbe
lahf
mov
xchg
inc
stos
lea
gs
lret
pop
adc
mov
lods
test
and
test
adc
jmp
inc
outsl
orl
xchg
inc
scas
or
dec
mov
sub
aam
mov
pop
jmp
pop
nop
movsb
sbb
aas
inc
pop
or
aam
enter
inc
std
ss
scas
lret
pop
jge
push
mov
inc
mov
cli
mov
push
popa
jmp
sub
popa
ret
aam
pop
in
ja
mov
and
out
ss
out
xor
cmpsl
mov
and
add
mov
sub
pop
mov
nop
in
xor
out
fsubl
movsb
jae
cmp
or
or
lods
fcompl
jmp
sub
iret
push
loop
pop
dec
jecxz
inc
xchg
std
inc
mov
adc
dec
and
fwait
inc
popl
sahf
loope
pop
jmp
or
mov
lcall
mov
cltd
add
je
movsb
mov
jne
lds
cmpsl
das
fnsave
loopne
push
call
lahf
in
jno
mov
lods
int3
mov
push
jae
dec
stc
pop
repnz
cwtl
dec
cmp
push
xchg
idivl
sub
push
outsl
ficoml
fcmovne
jmp
inc
sbb
push
scas
inc
add
fwait
dec
add
jp
jmp
xchg
les
cmp
loope
jo
dec
xchg
lcall
movsl
daa
dec
loope
ret
push
cltd
push
jae
push
ret
sbb
lret
sub
aas
jno
clc
sbb
ret
jl
lret
or
mov
cmp
lcall
es
fs
popf
pop
push
mov
sub
mov
dec
inc
lcall
adc
mov
jo
fimull
sbb
das
sub
add
loop
jg
pop
adc
insl
mov
test
lret
inc
pop
mov
in
cmpsb
faddl
pop
jno
ja
data16
add
dec
fldenv
lock
lds
imul
mov
mov
fadds
sub
adc
shlb
cs
adc
push
imul
stc
push
loop
adc
test
pop
adc
cmp
ds
xor
jb
sarw
jbe
fwait
or
ret
into
xor
mov
sti
and
ja
enter
ss
mov
sub
es
xorl
dec
xchg
lea
dec
jp
ret
xchg
cmp
loop
push
xchg
cmp
dec
pop
into
loope
rcr
and
fistl
mov
lods
es
je
call
cld
inc
movsl
lds
jmp
pop
test
and
jb
cs
out
push
stos
insb
or
iret
pop
mov
sub
inc
add
lret
push
mov
sbb
out
mov
mov
sbb
add
mov
push
xchg
incl
jne
pushf
adc
idivl
push
mov
daa
in
in
imul
mov
mov
nop
lahf
outsl
sbbb
and
push
movsl
or
sbb
xlat
push
inc
mov
shll
fidivs
cmpsl
idiv
mov
jno
out
jl
and
dec
arpl
sbb
cltd
mov
sub
lahf
dec
decl
gs
push
mov
push
aad
sub
push
cmp
or
jae
ja
out
in
jno
movsb
test
pop
mov
pop
daa
inc
jmp
pandn
test
jmp
sub
mov
stc
or
into
xchg
popf
sub
lock
ret
imul
popa
and
cld
xor
adc
or
js
ror
in
xchg
or
ret
cmp
daa
ret
ss
call
lods
jnp
bndstx
jno
mov
loope
jb
push
imul
and
repz
insb
cltd
adc
mov
mov
rcl
xchg
cmpsl
jg
cmc
and
push
add
push
leave
sub
pop
sub
push
push
mov
inc
push
jne
aaa
imul
add
pusha
jl
lcall
or
sbb
push
les
xchg
enter
jg
je
lods
add
jl
fucomip
out
pmaxsw
adc
movntps
xchg
rcr
cmp
ja
inc
or
sbb
mov
xor
dec
add
add
cs
mov
fdivl
mov
loop
mov
jns
sub
out
popf
inc
jg
outsl
cmpsb
sub
mov
jle
mov
inc
test
andb
xor
ds
daa
mov
popa
sub
paddsw
dec
lret
jmp
sbb
aad
in
repnz
or
pop
aaa
xchg
outsl
jae
push
mov
mov
icebp
or
sbb
into
arpl
mov
fisttpl
outsb
jnp
int3
mov
pop
xlat
push
inc
inc
mov
sub
inc
mov
cmp
insb
lock
or
rcrb
outsl
push
in
push
push
jno
xchg
cmp
lahf
jle
adc
ljmp
mov
sbb
mov
pop
xor
jae
rcrb
pop
or
cmp
insl
mov
in
dec
add
xchg
mov
psraw
fadds
out
inc
stos
fmuls
xchg
push
xchg
inc
ret
or
sbb
bound
rorb
cmp
sbb
fadd
lods
sarb
xlat
popf
mov
popf
mov
lahf
and
lock
ret
scas
add
xor
dec
jge
insb
aad
leave
aas
mov
push
xor
iret
pop
xchg
outsb
test
cmp
mov
and
inc
mov
loope
push
jge
mov
sub
or
xchg
jle
sbbl
push
pop
outsl
aad
stos
aas
and
jge
jne
jb
cli
dec
lods
mov
fists
xchg
adc
scas
insl
mov
adc
push
mov
ds
inc
jp
adc
inc
mov
sbb
dec
pop
add
jmp
outsl
xchg
addr16
je
subb
pop
insb
cmp
andl
stos
add
stc
hlt
fwait
mov
fstp
mov
mov
dec
in
add
mov
xor
lods
and
test
or
mov
stos
mov
cld
jmp
cmpsb
or
cmpsb
dec
cmp
clc
dec
mov
andl
or
loop
ds
push
adc
aad
jl
push
and
jl
out
sbb
sub
and
test
inc
nop
mov
adc
add
hlt
cmp
gs
sub
bound
addb
inc
hlt
mov
fdivrl
or
filds
mov
dec
cmp
jb
push
in
mov
shrl
cli
inc
inc
xor
insb
adc
insb
jae
sbb
sbb
mov
test
cwtl
rorl
cmpsb
fmul
push
bound
sbb
bound
jno
inc
jl
popa
cmp
les
lock
scas
mov
sbb
popa
xchg
das
call
insb
sbb
add
ret
dec
repnz
jmp
fstps
xor
daa
in
js
inc
pop
xorl
push
sbb
lods
lock
or
adc
fs
or
xorb
lcall
or
cld
jb
insb
hlt
mov
in
mov
dec
insb
jae
pop
sar
and
cmpsl
xlat
and
add
mov
mov
adc
int
or
or
sbb
jns
fsubl
stc
push
pop
ret
out
enter
cmc
mov
push
xor
cs
mov
leave
out
aam
xchg
popf
call
sub
xor
mov
ss
and
clc
fimuls
and
test
dec
jae
sbb
adc
es
aam
fisttpll
xchg
xchg
mov
jns
test
cmpsl
sub
shlb
test
pop
jmp
mov
sub
adc
imul
repnz
sub
mov
add
mov
popf
stos
hlt
add
int3
loop
add
inc
aaa
jae
push
or
push
in
scas
ror
sub
in
mov
scas
rcl
mov
insl
xlat
rolb
jecxz
movsb
notb
mov
jb
jle
jmp
rorb
pop
sub
xchg
outsl
mov
out
nop
sub
or
add
leave
nop
xchg
lret
and
dec
ret
lea
jmp
mov
jae
xchg
loopne
sti
pop
sbbb
jg
rol
ja
in
pusha
loop
pop
jo
xchg
out
int3
stc
mov
jo
jno
jno
cmpsl
cmc
pushf
filds
test
dec
repz
idivb
mov
out
inc
push
sbb
jbe
add
sub
or
jnp
lock
cmp
push
into
loope
scas
mov
rclb
cmp
hlt
stos
add
inc
sti
call
aad
sub
lods
into
cli
xor
add
dec
test
lock
push
popf
hlt
cmpsl
test
dec
or
xchg
rorl
ds
mov
sub
jb
subl
mov
lahf
hlt
sbb
outsl
sbb
jg
cmp
fmulp
xchg
fidivs
xchg
in
xor
popa
sbb
xchg
jnp
inc
dec
jo
mov
xor
push
mov
and
pop
scas
dec
rcr
shrw
sbb
dec
dec
xchg
into
mov
cmpsb
sbb
hlt
push
iret
pop
repnz
push
mov
sbb
or
movsb
rolb
mov
add
sbb
adc
cltd
xchg
xor
rcrb
cltd
pop
enter
mov
push
push
push
ret
mov
xchg
mov
mov
or
icebp
mov
push
cmp
pop
adc
or
aam
test
fcmove
sub
in
arpl
push
fldcw
mov
cld
sub
repnz
mov
jl
bound
or
xor
enter
mov
xchg
movsb
xor
sarl
mov
cld
lret
outsb
jno
dec
adc
out
add
mov
call
push
stos
cmp
daa
hlt
add
or
movsl
sbb
jne
cmp
mov
jne
aaa
fstl
cs
mov
addr16
pop
test
cmpsl
fstps
cwtl
stos
sbb
outsb
addr16
push
enter
aas
jg
cmp
jmp
enter
pop
and
lods
xchg
pop
sbb
cmp
dec
jae
lret
mull
sahf
test
pop
jne
andl
push
dec
lcall
dec
clc
dec
in
ss
mov
leave
inc
int
movaps
jns
push
out
xor
icebp
add
or
push
jge
mov
mov
repz
mov
inc
pop
andl
jb
push
xchg
mov
xchg
xchg
es
jo
popf
lcall
lods
xchg
adc
jns
call
ret
xorb
push
sarl
ret
mov
inc
mov
rsm
out
mov
fildll
dec
inc
insb
insl
add
xchg
lret
jo
cmp
dec
or
and
xor
inc
stc
adc
aad
pop
or
dec
popa
jecxz
mov
mov
cmp
decl
stos
sub
sbb
and
sbb
add
insl
jns
clc
jmp
sahf
fbld
dec
lds
xorl
subl
xor
fwait
adc
sahf
mov
popf
fsubrs
stc
add
pop
inc
fsubl
dec
jae
mov
cmp
lea
stos
sbb
pop
mov
cltd
mov
mov
loopne
pusha
inc
push
ds
pop
packsswb
outsb
loop
dec
xchg
je
int3
and
loope
push
je
test
fdiv
push
mov
mov
and
inc
xor
fldt
pop
pusha
pop
les
dec
add
test
mov
adc
inc
or
sti
dec
imul
sub
sbb
imul
adc
and
mov
mov
in
jg
in
xchg
pusha
pop
pop
lods
cmp
mov
or
sbb
pop
outsl
mov
jl
fisubl
call
neg
adc
out
jo
mov
pushl
test
xlat
mov
pop
mov
aam
and
or
pop
lds
daa
sbb
xchg
and
xchg
cmc
aaa
cwtl
inc
aam
lods
test
add
or
test
cmc
jge
xor
fisubs
popf
xor
adc
mov
arpl
scas
dec
outsl
movsl
sub
les
sbb
push
pop
aad
or
test
sub
loope
aas
cltd
pop
das
mov
mov
jp
inc
push
lcall
scas
pop
ds
jne
outsb
dec
decb
dec
in
outsl
jl
add
lret
pop
ljmp
stc
mov
xlat
data16
lock
scas
std
shlb
xchg
add
cmp
push
pop
test
mov
mov
arpl
mov
sub
dec
inc
adc
cmc
shll
push
mov
mov
jo
sub
pop
scas
jp
jge
das
mov
add
arpl
fidivs
in
sub
cmp
lahf
sti
dec
jg
mov
imul
inc
cmpl
in
push
ljmp
bnd
addr16
xchg
mov
mov
fs
xchg
aas
sbbb
clc
push
mov
mov
adcl
out
stos
push
lds
test
icebp
out
fnstsw
push
jnp
fs
xchg
hlt
loop
inc
sub
adc
adc
in
dec
fldl
ret
shlb
test
lods
and
mov
scas
data16
or
inc
or
jo
inc
in
ds
in
dec
adc
xchg
ja
xchg
js
popa
adc
xchg
pop
mov
sahf
decl
call
movaps
ret
bound
sub
movb
dec
sub
test
gs
pop
outsb
testl
xor
xor
mov
jbe
push
and
ficomps
xor
cld
enter
or
and
and
cltd
pop
and
mov
aas
mov
mov
dec
cmc
lods
mov
or
jp
imul
sbb
jbe
xchg
mov
mov
and
popf
mov
jne
roll
push
sub
sarl
pop
push
adc
jecxz
ret
cli
in
dec
cmp
fcomi
jo
sub
adc
inc
daa
rol
cltd
xor
and
pop
or
push
es
jp
lahf
mov
xlat
or
dec
xlat
and
dec
test
push
push
out
push
js
out
sub
jecxz
jbe
xor
fucomp
insl
repz
outsl
test
jl
push
incl
lret
mov
cmp
push
sbb
jno
rcr
ds
test
aaa
mov
mov
call
push
and
mov
ja
orb
out
or
aaa
cmp
repnz
jl
fnstenv
lret
jae
popf
mov
pop
or
push
sbb
jmp
sbb
dec
xor
aad
std
fs
xor
insb
push
xchg
aaa
and
gs
in
aas
pop
lock
add
mov
fistpll
inc
pop
outsl
push
push
push
pop
insl
sub
jns
and
mov
pop
jb
xor
cs
push
lret
sub
ffreep
and
jp
insl
inc
jp
callw
and
stc
js
rcrl
dec
sti
cmpsb
mov
dec
out
leave
call
in
pop
jns
mov
add
xor
push
xchg
adc
inc
and
insb
test
popf
pop
sbb
mov
fisttpll
and
adc
push
and
and
ss
ret
faddl
xor
mov
jle
pop
mov
push
data16
cmpsl
js
inc
mov
sbb
cltd
cmp
les
inc
out
and
div
jns
stos
lock
enter
push
dec
mov
aad
push
xlat
dec
and
sbb
add
aaa
pop
xlat
outsb
arpl
sbb
mov
sbb
or
lahf
add
imul
dec
sti
pop
push
jno
dec
enter
shl
call
test
dec
in
in
stos
jp
pop
pop
fcomi
xchg
inc
test
scas
and
lcall
mov
sbb
pop
ja
xlat
push
mov
pusha
or
cmpsl
decw
pop
and
jo
aas
rorb
roll
push
mov
fs
ds
xor
push
scas
mov
add
push
inc
jnp
sbb
xchg
sbb
sub
mov
jg
sbb
lea
sub
inc
jmp
mov
cs
and
enter
inc
pop
cltd
push
xchg
cmp
loop
call
and
int3
fsubrs
xor
mov
cmpsb
pop
in
aas
add
mov
sbb
push
icebp
push
lds
popf
test
hlt
dec
xchg
test
loopne
cmpsl
xor
or
lods
dec
imul
push
daa
cmpsl
cmp
dec
das
fstpl
cli
stos
lods
loopne
fisttpll
in
cmc
jne
in
push
ficompl
adc
push
pop
jae
dec
sahf
mov
xchg
pop
mov
loop
lods
sub
testl
sbb
push
pop
sbb
cld
xchg
movsl
adc
ret
aas
mov
and
rcl
stos
cltd
mov
ss
pop
push
pop
inc
lds
lock
movsb
lcall
cmc
roll
jmp
call
add
idivl
aam
jl
mov
das
lea
test
lock
mov
cmp
dec
dec
lret
aaa
jp
sarb
mov
lret
jnp
shl
mov
cmp
and
push
dec
inc
pop
xchg
lea
push
ja
add
int
sub
aas
mov
pop
das
cld
add
out
push
fcmovbe
movsb
and
test
pushf
lret
mov
cmpsl
cmp
sbb
lcall
lock
lds
or
adc
pusha
das
dec
pop
repz
in
mov
in
add
dec
fistl
nop
fcomps
js
bswap
cmp
mov
pop
test
cli
sti
pop
inc
dec
and
dec
arpl
jne
mov
repz
jno
nop
sahf
in
scas
adc
sub
add
sub
fwait
test
sti
xor
sbb
push
das
repz
outsb
das
scas
dec
sahf
movsl
insb
repnz
inc
jmp
jg
jl
add
add
and
cmp
push
sub
sub
shll
aad
ss
pop
scas
sbb
push
aam
or
sub
pop
lds
bound
movl
daa
sbb
mov
and
mov
insl
mov
test
mov
movsb
fmull
add
sub
aam
test
das
dec
ret
cmpsl
shll
cld
cmc
sub
ljmp
xchg
add
inc
adc
mov
lcall
addr16
lcall
popf
das
pop
mov
repz
in
popa
adc
jecxz
pop
and
adc
jns
pop
jnp
sarb
pushl
aas
outsl
andb
lret
inc
sbb
mov
mov
cmpsb
out
fwait
cmp
sbb
dec
mov
mov
jl
fnstsw
mov
pop
jl
cmp
pop
mov
sbb
sbb
imul
mov
dec
ss
scas
stc
sbb
xor
cmpsl
movsl
push
rol
loop
sti
xor
xchg
mov
xchg
mov
lahf
data16
negl
aas
or
pusha
mull
xlat
mov
add
xchg
fwait
popa
in
call
cmp
and
push
imul
decl
pop
cmp
ret
fs
adc
mov
loopne
mov
jge
mov
out
das
sub
fcmovbe
shlb
addr16
insl
mov
fcom
pop
mov
lods
mov
lahf
out
cltd
jne
sub
enter
lock
fnclex
mov
imul
out
push
fisubs
insl
int3
cmc
aaa
cmpsb
mov
jno
push
popf
dec
repnz
dec
imul
and
cwtl
mov
fisttpll
xchg
fstpl
stos
cs
mov
mov
and
popl
xchg
das
divb
push
ds
push
std
adc
imul
mov
jp
mov
imul
divb
stc
add
sbb
push
inc
popa
dec
sub
xor
xchg
test
mov
and
aaa
adc
aad
adc
sub
cli
jge
ss
lds
enter
adc
push
and
fwait
clc
addr16
rcl
cmpps
movsb
out
data16
out
mov
sbb
test
pop
out
push
lahf
sub
xor
hlt
pop
dec
xchg
cmpsb
sbb
clc
push
sub
add
cmpsb
fildll
xor
sbb
pusha
into
ror
incb
ret
cs
xchg
and
stc
dec
jns
sbb
rclb
lods
in
aad
rcrb
fsubrl
dec
cs
outsb
dec
dec
sub
sti
out
loope
add
add
or
pop
cltd
or
bound
loop
pushf
or
movsb
das
or
arpl
lahf
or
sbb
cmpsb
rorb
out
xchg
mov
mov
divb
fs
call
insb
lock
aaa
push
mov
pop
adc
dec
scas
clc
add
mov
jo
dec
in
cs
or
bound
pop
cs
cmpsl
sbb
clc
test
adc
adc
lret
in
push
les
cmp
dec
out
mov
push
sti
lahf
mov
xchg
inc
ret
mov
pop
jnp
loope
cmpsb
insl
xchg
mov
in
jns
aad
test
js
sub
out
sbbb
cmpsb
decl
lahf
jo
xlat
popa
sbb
sahf
jecxz
fstpl
insb
adc
xchg
add
lret
dec
xchg
mov
mov
test
leave
xchg
add
je
cmp
stc
arpl
fisubrl
orl
fbld
and
aad
cs
popa
inc
inc
adc
sbb
jmp
mov
loopne
loope
stos
fdivl
inc
bt
test
inc
inc
cli
or
or
std
lret
je
sti
add
je
popa
cmp
cmp
mov
decb
sbb
jmp
push
fwait
xor
xlat
or
xorb
mov
xor
into
arpl
aam
lds
push
fisubrs
stos
xor
mov
es
adc
scas
lds
dec
sbb
xlat
mov
xor
icebp
mov
fnstenv
mov
imul
int
imul
add
push
push
call
sbb
sub
aad
cmp
and
mov
or
dec
or
push
push
dec
mov
jle
mov
push
xlat
push
pop
inc
push
sbb
cli
or
repnz
dec
test
mov
popa
sbb
adc
add
iret
inc
mov
ret
adc
fnstcw
mov
xor
shll
xchg
int3
test
jmp
enter
push
sub
xlat
popf
outsb
loope
and
sbb
push
mov
popa
or
adc
test
sub
sub
mov
mov
mov
cmp
mov
adc
or
notl
shrb
sbb
lret
inc
inc
aad
add
xor
or
in
arpl
stos
and
test
xchg
or
mov
mov
inc
pushf
movsb
loope
rorb
pop
aas
mov
push
inc
cmp
push
out
ljmp
inc
cmpsl
dec
imul
inc
pop
scas
inc
push
push
shll
mov
out
pop
fstpl
mov
mov
jl,pt
inc
mov
loop
ds
pop
test
fstp
fmuls
lcall
mov
outsl
fnstsw
lret
sub
add
clc
js,pn
xchg
mov
icebp
jbe
shlb
sub
mov
pop
leave
mul
xchg
lods
pop
or
inc
mov
pop
push
lcall
adcl
lahf
adc
xchg
lods
fisubs
jmp
dec
in
lahf
sbb
sbb
fwait
adc
xor
cmp
iret
push
mov
mov
aaa
ljmp
rcll
push
clc
movsl
mov
je
repz
mov
xchg
mov
stos
jecxz,pt
pushl
adc
xor
fwait
dec
xlat
stc
test
inc
into
xchg
in
sub
inc
mov
xor
mov
cmp
jne
dec
xchg
lahf
sub
loop
leave
mov
ljmp
add
std
mov
push
xor
mov
fwait
ja
and
sbb
dec
xchg
jnp
jecxz
shr
mov
adc
out
test
push
lock
or
mov
sbb
pop
adc
or
sbb
pop
adc
outsb
or
sub
cmp
or
sbb
push
push
or
and
pop
leave
mov
jnp
push
xor
scas
dec
sbb
inc
push
mov
or
ret
xor
fcmove
adc
mulb
vpmacssww
or
orb
ljmp
adc
xchg
ds
cli
sahf
add
cmp
inc
push
nop
into
clc
shll
cli
dec
dec
fwait
mov
mov
bound
repnz
scas
and
sti
popf
outsl
mov
xor
xor
popf
sahf
add
ds
and
test
aam
call
sub
inc
cmp
or
mov
pop
jmp
mov
in
maskmovq
testl
sbbb
mov
decb
jbe
mov
imul
iret
incl
jae
ds
adc
adc
data16
jne
negb
out
das
dec
mov
scas
and
jle
ljmp
leave
loope
daa
mov
cs
mov
ss
add
xchg
cmp
lock
shrb
sub
lea
sub
je
outsl
adc
sub
xchg
jle
inc
out
cs
dec
fldcw
addr16
sub
pop
roll
cmpsl
out
popa
dec
jp
cmp
add
jo
sub
rolb
inc
inc
sub
cltd
nop
sbb
aaa
push
and
sbb
xchg
dec
fldenv
stos
mov
lods
adc
psubq
add
das
mov
fldcw
fidivrs
data16
lret
push
jecxz
shrl
or
repz
sub
bound
and
stos
stos
xor
dec
nop
cld
scas
dec
aam
sub
insb
adc
jo
loop
push
xchg
stos
mov
push
mov
inc
xorb
aas
xchg
test
pop
jp
int3
cmpsl
xor
fistps
adc
sub
dec
xor
divl
mov
mov
int3
mov
popa
jl
stos
adc
dec
outsl
mov
gs
clc
cmp
in
and
scas
fs
xor
sarl
popf
mov
dec
mov
adc
mov
mov
jnp
out
and
ret
pop
mov
mov
inc
jno
ficompl
push
cwtl
in
xchg
mov
icebp
test
or
roll
jns
ds
nop
cmpsb
mov
jae
xor
data16
push
rorl
jb
xor
gs
rcr
les
js
adc
pop
cs
clc
mov
dec
and
frstor
xchg
xchg
add
cltd
pop
lds
daa
fisubrs
lods
mov
outsb
clc
sbb
and
dec
pop
std
dec
sub
pop
mov
cmp
fdiv
inc
add
les
jg
in
cmpsl
lods
jnp
cmp
mov
imul
mov
cmp
push
out
insb
sub
xor
mov
clc
or
add
inc
enter
xchg
cli
xchg
xor
push
in
loopne
or
xor
jo
or
lcall
jg
stc
lahf
cmc
mov
out
pushf
lods
sahf
out
dec
jecxz
hlt
cmp
xchg
mov
pop
out
mov
outsb
inc
shl
sub
sbb
sbb
fstps
cld
fstpt
stc
ret
fdivrp
hlt
xchg
subb
mov
mov
outsb
scas
movsl
lods
pushf
sub
cmp
shrb
xor
jle
cltd
ds
sub
sub
pushf
mov
lret
leave
mov
push
mov
fimull
out
inc
pusha
orb
inc
test
mov
lcall
fstl
aam
js
inc
addb
mov
lcall
data16
xchg
pop
add
or
pop
xor
mov
cmp
push
adc
mov
inc
cmp
lret
push
push
imul
sbb
xor
and
ret
aam
mov
repz
fiaddl
insl
out
mov
cli
popf
mov
sbb
enter
or
mov
xchg
mov
push
mov
xchg
cltd
adc
xchg
mov
cltd
and
jle
aas
or
xlat
pop
popa
fidivrs
sub
clc
or
inc
mov
mov
lcall
mov
sar
add
pop
jns
dec
cmp
xlat
sbb
iret
add
inc
mov
fbld
pop
rcrl
and
pop
push
dec
adc
and
inc
xchg
mov
clc
es
test
xchg
scas
dec
mov
lea
lcall
mov
push
aaa
xchg
mov
test
mov
repnz
xor
stc
fnstsw
mov
and
in
dec
hlt
pop
dec
insb
sub
enter
lods
mov
sub
push
pop
std
in
pop
test
movsl
sbb
iret
adc
cmpsl
pop
mov
adc
lock
adc
movsl
fcoml
cmp
push
mov
jg
clc
lcall
mov
ljmp
mov
push
aam
pop
clc
les
pop
sahf
add
inc
fwait
aas
scas
stos
pushf
sub
sarl
testb
jno
xchg
subl
dec
or
imul
popa
js
pop
fwait
sbb
mov
rclb
xchg
pop
or
lret
cmpsb
jg
pop
xchg
lret
mov
push
in
push
adc
in
ds
cmpxchg
fs
cwtl
push
push
adc
pop
push
mov
pop
and
sub
cmp
test
insl
push
iret
push
fists
enter
fs
ret
ja
nop
or
aad
int
fisttpll
xchg
loope
lods
xchg
pop
dec
adc
jne
cmp
popf
push
fwait
push
leave
jg
out
in
test
and
testb
cmp
ja
imul
push
leave
data16
mov
add
sub
push
ljmp
into
pxor
inc
push
cmp
js
mov
mov
pop
or
lcall
or
sbb
pop
inc
xchg
lea
testb
push
fucomip
cmp
push
enter
in
mov
jp
outsb
nop
fcompl
cmpb
or
repnz
dec
pop
add
jp
pop
and
mov
and
inc
mov
subb
aas
adc
aaa
scas
mov
jle
lahf
fmull
and
cmp
std
test
jnp
mov
jecxz
pop
mov
das
sbb
and
jg
or
daa
xor
hlt
mov
fistpl
sbb
pop
fcmove
pop
into
es
sub
sbb
adc
dec
or
adc
test
xorl
sub
loop
inc
and
add
sahf
dec
xchg
jb
pop
fmull
sub
cmp
lret
sub
mov
lret
lret
xor
or
jo
or
jle
fisttps
ret
pop
mov
xchg
inc
dec
fs
xchg
cld
dec
lds
mov
daa
inc
mov
aas
sbb
sbb
dec
mov
jg
sbb
push
movsl
pop
push
xchg
test
xchg
push
lods
add
dec
adc
pop
pop
sarb
mov
fwait
mov
hlt
xchg
pop
pop
movsl
imul
ret
jg
and
repz
or
addr16
mov
out
jo
jmp
pop
shl
aam
fistpl
adc
cmpsb
jecxz
int3
fs
push
out
cmpsb
push
push
dec
dec
and
lret
add
dec
adc
pop
mov
or
push
repnz
sub
or
sbb
push
les
loop
scas
add
sahf
inc
nop
das
repz
mov
jmp
lods
sub
fisubrs
jge
je
sbb
push
pop
push
insb
jecxz
lret
adc
cmp
sub
pop
push
in
aad
mov
imul
jns
ss
cwtl
mov
dec
mull
cmp
ret
mov
data16
push
cmp
pusha
adc
or
xchg
sub
pop
and
insb
in
cmc
in
sub
imul
pop
out
test
inc
or
imul
lret
sub
loope
jns
fildll
rcrb
sbb
addr16
fcmovu
sub
sti
sub
rolb
or
push
nop
and
lods
les
push
ss
rcll
loop
out
jbe
add
cltd
or
push
fwait
cltd
dec
sub
adc
fidivl
cmpsb
jp
inc
mov
aad
ret
mov
adc
cwtl
push
lods
rep
and
cmp
add
fcoms
mov
adc
out
popa
fdivr
dec
mov
shrl
mov
mov
mov
adc
add
and
scas
das
das
cmp
dec
pusha
jb
bound
or
jp
ret
mov
mov
out
sahf
sti
cmpsl
out
push
jecxz
movsl
adc
mov
fstps
loopne
int
cmp
push
daa
aas
lods
sbb
std
push
dec
shlb
sub
out
shll
sbb
imul
mov
mov
xchg
out
adc
repnz
jae
push
jns
and
ret
push
lahf
xchg
xchg
mov
add
mov
dec
pop
xlat
imul
xchg
sbb
cmp
xchg
adc
jle
fsts
roll
jo,pt
clc
test
outsb
fildl
rcrb
mov
rcrb
popf
pop
adc
fcmovbe
shll
scas
jecxz
flds
js
les
cld
jns
push
inc
test
inc
cs
pop
xor
xlat
into
push
pushf
stos
loop
outsl
push
jno
and
xchg
popl
adc
not
cs
mov
push
adc
icebp
addl
leave
bound
cld
popl
mov
std
push
xchg
adc
adc
shll
cmpsb
xchg
jb
push
sahf
xchg
repnz
cwtl
pop
and
test
mov
mov
lcall
jnp
scas
dec
adc
add
xchg
add
xchg
sbb
jne
scas
stos
or
mov
nop
pop
cs
frstpm(287
imul
xor
std
shlb
add
sti
mov
sub
mov
loope
mov
add
in
mov
sarl
lahf
or
aam
rorl
jb
test
rorb
ljmp
out
in
cmp
jbe
pop
or
je
hlt
in
lahf
test
sahf
inc
sub
push
add
mov
enter
push
lods
adc
adcl
push
sub
dec
lcall
dec
adc
dec
mov
cs
mov
mov
std
inc
xchg
les
add
aaa
dec
fucomi
cmp
mov
inc
in
xor
stc
fdivr
test
jns
test
adc
inc
rolb
dec
jecxz
pop
add
jle
bound
in
jne
or
cmp
or
sbb
gs
inc
sbb
jmp
inc
sbb
in
in
cs
add
xchg
push
mov
aad
inc
push
mov
int3
add
or
scas
jge
mov
jo
in
int3
movsl
mov
pop
or
testl
mov
jo
jbe
mov
mov
adc
cld
xorb
jbe
jg
dec
or
sbb
test
mov
inc
outsb
dec
push
cmp
ds
pop
mov
jle
inc
xchg
inc
xor
leave
lahf
rorb
push
push
pop
push
jo
data16
mov
jnp
loopne
pop
rcll
jecxz
cmp
ds
push
pop
fnsave
test
lret
and
cmp
lea
adc
repz
lods
mov
push
jb
xchg
loop
or
mov
xchg
cld
out
pop
jns
pop
loope
pop
scas
fnsave
out
inc
movsb
jmp
xchg
cmp
sti
jo
or
lret
add
dec
jge
push
mov
mov
jne
xchg
inc
jecxz
aas
leave
mov
roll
cmp
stos
lret
jae
sbb
lahf
popf
push
fs
int
aam
jmp
in
iret
inc
adc
inc
adc
jg
pushl
test
pusha
fistps
test
mov
push
add
mov
lods
aad
pop
and
fwait
pop
insl
xor
jbe
jecxz
mov
xchg
push
mov
xchg
push
test
addr16
adc
mov
dec
add
jp
ja
gs
pop
cltd
fldlg2
cmpsb
stos
xchg
adc
movsb
js
push
jmp
sbb
or
mov
stos
dec
jmp
adc
jno
clc
les
and
jnp
data16
cmp
and
pusha
adc
mov
les
inc
fs
mov
pop
jp
aam
sti
dec
jne
push
stos
xlat
lahf
lods
mov
outsl
push
jp
ficompl
xchg
jo
mov
lahf
inc
add
jg
jo
icebp
jl
mov
clc
repz
enter
test
and
in
xchg
lcall
hlt
out
cli
push
pop
stos
fmull
push
scas
cmpsl
lret
add
jl
fdivs
fsts
lock
in
scas
xchg
pop
hlt
movsb
dec
pshufw
rorl
clc
test
pushf
push
clc
jb
lcall
xchg
xchg
repnz
fcoml
dec
sbb
mov
jb
imul
or
pop
push
xor
xchg
cmp
fisubs
pop
adc
rclb
and
sub
xchg
scas
das
mov
or
into
subb
xchg
int3
cmc
imul
sahf
adc
push
and
sub
sub
imulb
mov
and
mov
lret
inc
dec
xor
mov
sbb
fidivs
andl
add
scas
mov
sbb
xlat
mov
cli
pop
je
icebp
repz
fnstcw
sub
mov
ss
xchg
lea
sbb
test
add
ret
rol
jnp
imul
dec
push
lods
dec
cmc
sub
mov
test
decb
lods
dec
pop
add
or
movsw
hlt
dec
push
xlat
push
mov
std
mov
cmpb
rcr
mov
lds
aas
xor
pop
outsb
rol
sbb
cltd
lcall
mov
and
in
adc
add
jno
mov
push
inc
mov
or
adc
inc
fs
jge
push
jg
adc
cmp
push
stc
sbb
popl
and
mov
mov
scas
mov
and
add
outsl
bound
addr16
push
hlt
insb
imul
pushf
aam
repz
dec
hlt
or
mov
fisubrl
adc
adc
enter
cmp
add
rorl
sbb
add
cli
clc
jp
inc
or
mov
out
bound
xchg
cmpsb
or
sahf
clc
shrb
sub
dec
repnz
and
pop
pop
fnstenv
mov
cwtl
mov
inc
outsb
loope
fwait
daa
stos
stc
mov
inc
pop
cmp
dec
sbb
and
test
test
stos
lods
push
cmp
cmp
in
imul
xchg
aas
stc
out
push
aam
dec
popa
sub
addr16
and
xchg
loopne
hlt
sti
daa
pop
test
cmp
lea
pop
jge
jp
pop
jge
xchg
es
push
dec
sub
into
adcb
loop
xor
fcmovnbe
out
jbe
xchg
mov
push
mov
sbb
pop
movsb
int3
leave
sti
int3
insb
int
repz
lods
scas
sub
mov
faddl
jp
xlat
mov
leave
inc
imul
ja
in
inc
jl
mov
xchg
push
test
sub
test
and
movhps
lret
sarb
mull
sbb
inc
lods
sahf
rcr
lahf
push
les
inc
push
pop
sti
stc
addr16
lods
inc
out
xor
aad
and
inc
add
lcall
fidivrs
pop
in
push
cmpsb
fsub
data16
push
imul
movsl
stos
std
call
xor
pop
or
pop
in
sub
adc
cmp
mull
xor
jbe
pop
sub
inc
mov
negb
mov
adc
push
xchg
or
fsubrl
mov
out
test
bswap
lret
push
lahf
addr16
and
adc
imul
stos
movsb
xor
je
add
push
lcall
push
test
or
mov
mov
inc
mov
jp
rcll
popa
mov
loop
dec
cs
lahf
loopne
clc
push
cmpsb
xchg
pop
jb
test
inc
nop
lret
mov
sti
jo
popa
int
nop
mov
clc
popa
push
jle
mov
adc
mov
xchg
imul
fucomp
jecxz
sub
out
mov
jecxz
pop
mov
popa
lcall
add
int3
stc
inc
mov
fistpl
mov
mov
data16
lahf
cmp
sbbl
cmp
cmp
out
xchg
or
iret
xor
std
aad
mov
test
insl
les
cmp
aas
xchg
out
in
mov
lods
andl
nop
xor
bound
xor
lcall
sar
rclb
sbb
dec
cmp
adc
sbbl
daa
xlat
jg
out
movsl
mov
jmp
ret
add
insb
push
mov
scas
jbe
sbb
es
pop
sub
and
incl
lret
test
daa
inc
pop
add
pop
mov
jnp
or
scas
mov
fnstsw
scas
test
or
popf
push
test
sbb
jbe
push
js
pushl
je
push
dec
popa
adc
push
mov
fcompl
adc
sbb
jo
adc
fsubs
adc
xchg
mov
cs
fstl
nop
ret
cmp
sbb
add
pop
pop
pop
imul
imul
ds
pop
sarb
cli
pop
lcall
pop
and
sbb
inc
popa
inc
add
mov
scas
jns
hlt
and
xor
and
adc
stc
mov
popa
pop
sub
movsl
cwtl
call
xor
jecxz
inc
fdivr
and
mov
inc
lock
mov
cmp
jo
adc
lods
sbb
pop
adc
jbe
dec
mov
into
add
mov
pop
mov
adc
jno
ljmp
push
inc
lret
mov
cmp
jecxz
repz
mul
and
dec
xor
mov
subb
cmp
jae
adc
sub
fsubl
inc
hlt
inc
fisubl
lods
sbbb
js
pop
and
jg
cmpsl
jne
add
rorl
dec
enter
jg
sbb
pop
ja
cmpsl
dec
fs
imul
add
out
test
lahf
add
jbe
lret
or
xchg
and
addr16
and
add
movsb
daa
push
stos
icebp
bnd
test
xchg
lds
cmpsb
jmp
imul
push
sub
add
aaa
add
ds
mov
subl
mov
inc
adc
cmpsl
sub
mov
adc
dec
scas
addr16
xchg
cld
fmuls
pop
add
sbb
mov
cld
dec
mov
mov
int
pop
mov
enter
jmp
mov
loopne
pop
mov
cmp
push
lds
not
test
mov
jo
std
sti
lret
xlat
movsl
adc
in
inc
fisubrs
arpl
fisubs
push
jo
push
movsb
xchg
or
add
pop
add
testb
enter
jmp
xchg
and
add
pop
lods
sub
in
jno
jb
cmp
fwait
pop
inc
orl
xor
sub
test
insb
mov
xor
pop
inc
arpl
mov
sbb
mov
xor
pop
repz
xor
inc
insl
push
lods
bound
lahf
clc
or
std
xor
add
daa
js
cmp
push
scas
and
jmp
pushf
dec
jo
adc
mov
fwait
push
lcall
scas
add
ret
mov
mov
rorb
mov
cwtl
aad
sub
into
icebp
shlb
rolb
xor
adc
mov
fnstcw
xor
adc
pop
outsb
or
sbb
mov
mov
gs
ljmp
loope
test
mov
arpl
roll
mov
pop
ja
mov
sub
sti
lret
xchg
shr
fmul
sarb
xor
lods
jecxz
jge
xchg
push
mov
bound
shl
in
add
mov
push
add
jp
pop
inc
push
mov
mov
cltd
gs
insb
in
lea
shl
call
cli
in
mov
xchg
cwtl
mov
mov
ss
aad
cmpsl
lret
fmull
push
inc
add
mov
test
mov
sbb
lds
and
lock
mov
push
aaa
aam
and
mov
subb
lcall
xchg
sarl
jae
dec
dec
outsb
jp
xor
sbb
insb
sub
orb
fdivrp
lods
sub
cmp
jmp
orb
aam
and
fwait
sub
fidivl
loope
es
pop
mov
sahf
out
xchg
loop
mov
testb
stos
pop
add
test
sbb
outsl
pop
loope
mov
ja
hlt
dec
fists
arpl
fidivrl
push
jg
imul
jle
scas
insl
int
movsb
and
xchg
pop
mov
ds
dec
dec
push
inc
xor
int
into
add
clc
jmp
cmp
mov
lods
call
mov
xchg
incb
bnd
lods
roll
mov
in
in
xchg
in
xchg
push
inc
mov
jne
adc
mov
outsl
inc
rcrl
xchg
dec
or
add
int3
movsb
scas
and
pop
int3
mov
push
std
sub
jo
add
sub
cmpsb
adc
stos
inc
jb
and
outsl
and
xor
call
in
js
test
scas
into
jnp
add
int3
out
fdivs
aas
mov
jbe
cmc
cwtl
or
xor
outsb
cmp
inc
xor
add
pop
std
stos
ds
imul
repnz
shll
mov
loope
mov
inc
inc
pop
pop
mov
dec
lea
in
int3
cmpl
jb
scas
mov
movsb
std
xchg
inc
jb
fwait
mov
sbb
push
arpl
int
push
rorl
xor
ffreep
ja
js
ds
sbb
call
sbb
add
ss
adc
in
enter
pop
imulb
xor
stos
mov
xchg
cmp
mov
inc
lcall
sbb
mov
out
cmpsl
or
je
mov
cmp
adc
cmpsb
jo
stos
pop
sub
icebp
inc
sub
jmp
push
dec
fcmovne
jl
jne
insb
imul
test
std
push
cli
shlb
movsl
mov
pop
and
stos
xor
mov
xchg
decl
or
push
shlb
add
push
mov
jp
cld
xchg
lods
sbb
jl
popf
imul
pop
jae
add
gs
loope
or
hlt
cs
jno
push
ss
mov
dec
sarb
push
scas
inc
dec
test
jno
ljmp
cmpsl
cli
sbb
imul
ret
test
pop
shll
mov
imul
dec
dec
adc
sub
cmpsl
mov
cwtl
outsl
xor
push
sbb
jge
mov
popf
xchg
push
ljmp
je
or
bound
mov
mov
rorb
lret
mov
mov
movsb
in
and
and
pop
sbb
or
push
popf
mov
test
pop
and
scas
pop
shl
mov
test
int
enter
xchg
in
jge
mov
cmp
xchg
das
int
ds
mov
xchg
bound
dec
pop
cmpsl
ja
xchg
stos
mov
out
xchg
and
fbstp
or
push
xor
push
mov
push
jl
adc
or
dec
dec
sahf
or
std
lds
add
xor
push
addr16
aaa
pop
in
pop
ret
pusha
pop
std
sub
jno
test
jp
sub
shlb
stos
pop
xchg
lods
cmp
ds
and
push
sbb
inc
sub
and
jmp
jl
inc
scas
scas
das
adc
testl
xchg
cmpl
jo
lcall
cmc
decb
iret
inc
inc
popf
sub
fcompl
inc
inc
fidivrs
jns
int
nop
jge
mov
aad
push
mov
fs
sbb
xlat
mov
aad
test
es
jnp
aad
loopne
scas
adc
lods
and
ret
mov
add
dec
xor
nop
rol
pop
cltd
pop
imulb
ljmp
mov
jne
pop
mulb
roll
int
push
cmpsl
jne
mov
ret
inc
aaa
cmpsl
jg
push
loopne
call
sbb
pop
in
mov
or
dec
cld
push
aas
push
fsubl
mov
xlat
fstps
out
and
and
jle
or
push
jle,pt
scas
lea
and
jge
dec
movsb
inc
push
out
jge
cmp
sub
xorl
mov
shrb
shll
stos
add
cmp
cltd
xor
mov
test
adc
ret
out
pop
enter
aaa
adc
ds
lcall
iret
inc
jp
stc
arpl
xor
jge
adc
dec
cmp
outsb
push
fst
jge
push
data16
mov
stos
stc
push
pop
fldenv
xlat
pop
imul
ret
rcrl
sbb
xor
je
cli
mov
dec
insl
cmpl
mov
popa
imul
xchg
test
sbb
inc
and
push
mov
pop
sarl
shll
je
cmp
pop
inc
xchg
sbbl
mov
dec
ljmp
int
int3
dec
xchg
stos
jae
out
xchg
shlb
adc
call
jno
add
sarb
sub
lret
push
fldt
aaa
mov
gs
nop
xor
cli
xchg
cmp
movsl
dec
pop
out
orb
fdivrs
xor
pop
xchg
mov
pop
int
inc
frstor
stos
rolb
scas
and
aad
mov
lds
jne
popa
orl
mov
js
push
mov
add
loope
push
xchg
pop
bound
sub
lods
or
into
andl
lds
xor
adc
ss
dec
and
movsl
push
inc
nop
inc
int
mov
dec
dec
es
sbb
dec
stc
sbb
pop
pop
fnstcw
enter
mov
inc
push
shll
xor
es
jl
jmp
dec
into
push
cltd
mov
adc
rclb
xor
sbb
mov
bound
cmp
outsl
incb
xor
jge
adc
aaa
mov
lcall
dec
es
fldcw
stos
jl
add
fldt
adc
addr16
inc
lret
jmp
mov
lock
imul
push
popa
ss
mov
mov
ficoms
mov
push
cmp
adc
jb
ret
xor
das
and
popa
mov
test
lea
mov
push
in
in
cmp
adc
movsl
mov
mov
lods
dec
jb
ss
jecxz
push
fcompl
dec
jg
in
divl
jp
mov
int
jnp
out
aaa
pop
sbb
dec
push
dec
push
popl
adc
sub
enter
aad
sbb
inc
cmp
sahf
sahf
fmuls
dec
rorb
xor
pushf
iret
std
inc
lret
jne
mov
xchg
adcl
xorl
inc
insb
jb
xor
mov
nop
add
add
popa
add
add
xchg
mov
psraw
jmp
pop
mov
mov
les
mov
dec
sub
xchg
lret
pop
pop
inc
jne
cmp
lods
xchg
jnp
jae
jb
call
add
loop
hlt
xor
adc
enter
sbb
mov
pusha
ds
ret
cmp
mulb
mov
sub
adc
out
dec
mov
out
jp
jecxz
xor
add
arpl
loope
or
nop
add
adc
into
js
nop
dec
hlt
pop
shufps
enter
lret
lods
rcl
sbb
xorb
mov
ret
ljmp
enter
test
sbbl
loop
jg
mov
xchg
addr16
es
push
jge
jne
adc
punpckldq
gs
dec
mov
lea
fisubrl
jno
dec
xor
fidivrs
or
pop
xchg
fadds
mov
fsubl
push
js
inc
jl
mov
inc
inc
rcr
add
mov
cmpb
ror
push
cld
pop
lcall
or
jbe
aaa
or
inc
ret
sub
cmp
mov
fisubrs
popf
imulb
push
in
push
and
mov
ljmp
pusha
lret
pop
xchg
adc
sub
out
addr16
test
push
push
out
pop
lds
add
jge
push
daa
sub
rorl
sub
ljmp
fs
add
cmp
fs
add
in
mov
rorb
push
push
subb
rcr
out
mov
aad
sahf
stc
mov
inc
fs
push
mov
pop
inc
push
imul
pop
rcr
loop
out
push
or
sbb
cmc
lss
xor
inc
sbb
iret
in
push
push
mov
call
dec
pop
mov
sub
nop
mov
fidivrl
loop,pn
xchg
mov
dec
cmpsl
xchg
in
ret
pusha
jp
std
sahf
dec
fbstp
jle
push
mov
sub
xor
dec
cmp
push
loop
sti
xchg
sti
hlt
lret
xchg
dec
icebp
mov
ljmp
shll
stos
add
dec
add
insl
mov
or
cmp
jle
sub
mov
in
mov
sub
out
in
cmc
fcoml
lahf
in
iret
push
loop
dec
int3
fildl
sub
lret
hlt
pop
addb
addr16
dec
jle
push
jbe
mov
cmp
popa
fisttps
xchg
mov
xchg
sub
mov
sbb
mov
les
mov
clc
or
adc
aad
shrl
popl
add
out
cwtl
pop
jle
lahf
xlat
sbb
xor
add
outsb
decb
scas
fsts
mov
push
test
pop
jge
jne
or
dec
bound
cmp
aas
cs
or
nop
adc
xchg
pop
daa
lock
adc
shld
xor
fisubs
jecxz
sub
out
push
daa
jg
jnp
mov
jnp
xchg
xchg
das
dec
mov
pop
xchg
pop
in
scas
fistpll
jg
sbb
xor
push
sbb
mov
xlat
decl
mov
insl
jns
lock
pop
repz
mov
call
in
and
cmc
std
fsubl
xchg
add
xchg
cmpsl
imul
movsl
mov
push
fbld
fldenv
clc
cmc
rol
lds
stos
sarl
es
sbb
pop
mov
les
into
enter
xor
push
mov
hlt
pop
in
ljmp
sbb
dec
mov
shl
loope
outsl
sbb
mov
mov
insl
popa
and
les
jno
pop
and
sar
sub
inc
dec
cli
in
fmull
inc
lret
enter
cmp
enter
nop
mov
cmp
arpl
sbb
xor
stos
arpl
out
int
sub
add
lahf
stc
into
ss
sbb
loopne
or
jnp
std
fidivl
fnstcw
sbb
push
push
add
push
test
pop
inc
or
cmc
cmpsb
push
add
mov
jnp
push
dec
add
pusha
inc
pushf
jbe
cmp
lret
movsl
xchg
adc
sbbl
push
mov
jo
fidivrl
jne
and
scas
fwait
mov
xor
sub
notl
stc
xlat
ja
add
imul
mov
or
in
jns
data16
pushf
imul
dec
movsb
xor
cmp
jecxz
and
and
sbb
pop
add
sbb
shl
mov
mov
aaa
in
lock
int
orb
lds
pop
sub
or
cbtw
pop
dec
xor
jne
loop
rcl
ret
or
xchg
mov
add
cltd
mov
lahf
loope
mov
loope
std
pop
fistpll
sbb
dec
mov
sub
jp
dec
push
loope
sub
mov
mulb
cmpsb
sub
cmp
add
ret
and
mov
adc
jp
sbb
call
adc
repnz
in
add
add
adc
std
arpl
pop
cmp
js
cs
sub
pop
xor
aaa
adc
insl
incl
inc
xor
mov
fdivrl
and
xor
outsb
lds
cmp
mov
pop
dec
out
lret
lods
dec
call
jo
dec
aaa
cli
addr16
pop
inc
dec
adc
jo
ds
shlb
adc
xor
fildll
or
stos
lods
mov
sbb
xor
mov
js
push
lcall
sub
pop
pop
mov
jae
sti
fbstp
pop
sbb
xchg
inc
cwtl
outsl
stos
fmull
repnz
jae
add
sub
xchg
adc
mov
xchg
pop
mov
push
icebp
pinsrw
lahf
push
clc
jb
shrb
lahf
leave
fldcw
sub
cmpsb
fcomp
ljmp
mov
sbb
std
push
mov
xchg
adc
adc
insl
cmp
push
jae
mov
push
das
mov
mov
rcr
andl
sbb
sub
test
jl
mov
mov
out
cmp
stos
or
adc
inc
ucomiss
lods
jno
jo
rcrl
mov
scas
xor
cs
pop
xor
pop
ret
jecxz
popf
insl
insl
cwtl
jle
int
movsb
jno
pop
mov
sbb
xor
fnstenv
into
in
movsl
and
in
adc
xor
jns,pn
lcall
pop
add
jnp
imul
cltd
popf
iret
push
xor
and
out
inc
rorl
int
cmpsb
outsb
dec
jl
testl
mov
ss
push
fwait
add
xlat
stc
dec
jle
stos
sub
pusha
test
pop
bound
lods
xchg
xor
push
fldenv
mov
mov
and
lock
mov
cmpsb
sti
rclb
adc
mov
and
inc
add
or
add
test
sub
mov
mov
outsb
xor
mov
xchg
add
pop
mov
addr16
dec
fdivs
xor
mov
add
mov
push
fwait
mov
stos
jl
mov
mov
ret
out
sbb
loope
jno
sbb
jle
xor
xchg
jle
mov
push
jge
add
cmp
mov
stos
out
add
xor
aam
popa
mov
sbb
into
mov
xchg
mov
sbb
or
leave
jbe
js
arpl
cmpsb
mov
outsb
jo
mov
sbb
and
lods
and
xor
faddl
cmp
aam
aam
sahf
mov
xor
out
sbb
aaa
add
test
cs
insl
stc
fiaddl
in
movsl
test
cmp
xchg
pop
mov
xchg
push
outsb
stos
jno
cli
lcall
push
stc
push
cmp
push
fnstsw
sbb
jno
pop
mov
xchg
mov
xor
mov
movsb
mov
sbb
mov
ja
pop
jg
and
scas
mov
pushf
push
out
mov
push
loopne
enter
cmp
fdivs
fwait
push
mov
xchg
jmp
aam
push
and
stos
shll
mov
or
mov
shrl
scas
mov
out
in
cmp
adc
sub
cmpsl
dec
scas
adc
sub
xchg
addr16
push
jnp
xchg
daa
mov
aas
dec
jg
fdiv
jb
das
cld
and
xchg
cmp
sbb
xchg
shl
daa
adc
inc
dec
rcl
stos
cwtl
inc
adc
mov
rorl
mov
pop
mov
lods
push
xchg
mov
fcompl
xchg
push
jns
cmpsl
cltd
data16
aaa
cltd
js
lods
add
jb
xor
xchg
xchg
es
mov
stos
mov
pop
mov
add
sub
dec
adc
lods
xchg
pop
add
cmpsb
es
mov
or
sub
cltd
imul
sbb
pop
sub
cmp
fstp
cwtl
fildl
mov
mov
jo
pop
pmaddwd
lods
sub
fbld
jecxz
or
clc
filds
jb
inc
push
sub
cmc
lea
pop
mov
leave
sarl
jb
leave
xor
fisubrs
mov
cld
lods
push
adc
test
divl
xchg
out
and
inc
gs
in
mov
mov
gs
mov
jo
aad
cltd
js
xor
mov
xchg
cmc
enter
mov
mov
fs
and
jecxz
test
mov
aam
aas
push
sbbl
cmpsb
pop
sub
jno
sbb
mov
ret
out
rorb
data16
stc
cmpsl
pop
push
cmc
xor
loop
mov
scas
insl
sbb
les
mov
cmpsb
movl
sbb
repnz
jecxz
xlat
inc
adc
inc
imul
mov
inc
pop
mov
mov
repz
adc
sbb
out
popa
mov
jp
sahf
and
aaa
call
or
rcrl
popa
sti
hlt
fdivr
in
dec
clc
cmp
das
mov
addb
aas
mov
push
inc
jno
es
daa
mov
shlb
cwtl
bound
jg
movsl
movsbl
mov
mov
das
and
dec
mov
or
std
push
sub
jne
cs
lock
hlt
into
test
lds
test
in
inc
xchg
scas
mov
sub
pop
jecxz
call
pop
jae
mov
push
or
pop
rclb
sub
inc
sub
ds
jo
jg
adc
clc
sbb
or
cli
rcll
jo
jl
jp
pop
addb
cmp
and
movsl
jp
adc
and
xor
mov
cmc
push
sub
adc
rcrb
cmp
imul
inc
icebp
push
lds
test
mov
je
std
add
pop
out
pop
jns
lcall
je
lea
mov
jle
popl
cmp
mov
les
cmpsb
sub
orb
cli
add
sbb
inc
adc
sbb
mov
sub
pop
xor
push
mov
sub
mov
cwtl
sub
jae
ss
dec
add
jb
xchg
sub
push
mov
mov
fs
or
jecxz
inc
xor
dec
sub
filds
pop
or
dec
pop
cmp
mov
mov
cmpsb
imul
out
sti
inc
loope
mov
fiadds
mov
aaa
sarl
cmp
xchg
js
scas
es
dec
sbb
xlat
and
orb
inc
cmc
xchg
adc
adc
inc
out
jecxz
mov
imul
inc
jnp
sbb
pop
shl
mov
fildl
jmp
out
repz
jmp
push
fsubs
sbb
aaa
jp
sbb
subl
push
mov
cmpsb
adc
dec
nop
inc
inc
sub
jg
aad
movsb
hlt
add
insb
pop
mov
fisubrs
dec
jbe
ss
and
adc
sarl
push
adc
cmp
test
dec
push
fs
cltd
sti
dec
fisubs
pop
loop
jo
lock
or
ss
and
xchg
fiadds
lcall
rcrb
rcl
and
jl
mov
or
mov
decl
dec
dec
inc
dec
mov
fidivs
fadds
push
dec
jno
fsubrl
sub
shlb
rcrl
and
adc
test
fcmovnu
inc
cmpsl
mov
adc
pop
pop
pop
jno
shrl
enter
scas
mov
lcall
fdivp
insb
in
orb
fidivrs
les
cmp
sub
dec
scas
push
fbstp
andb
sti
imul
push
iret
xrelease
repz
mov
jbe
inc
icebp
out
sub
scas
xor
or
mov
mov
icebp
ljmp
adc
ret
mov
and
call
std
lret
nop
dec
jle
aaa
xchg
sbb
es
mov
pop
mov
xchg
jp
push
xor
mov
sbb
or
and
jg
mov
jecxz
das
cli
add
stos
ret
cmpsl
pushf
pushf
aaa
pop
cmp
dec
adc
in
push
xor
out
inc
loop
mov
int3
mov
sub
add
sahf
mov
add
js
jmp
es
and
or
rcrb
adc
int3
arpl
pushf
arpl
pushf
movsl
fldenv
sbb
insl
aam
adcl
mov
dec
clc
lods
cmp
call
and
add
enter
sbb
cwtl
clc
xchg
push
push
jnp
inc
xor
xor
add
add
push
cwtl
sbb
addr16
dec
lret
shl
call
lret
jbe
and
loope
inc
add
jns
pop
pushl
daa
adc
lds
sbb
adc
mov
fisttps
roll
jne
mov
shr
xchg
fisubrl
mov
push
sub
add
and
pop
leave
es
jecxz
std
je
mov
push
loop
sub
sub
aas
mov
pop
push
cmp
mov
jno
cmp
shlb
xchg
pop
sbb
xorl
out
popf
cmpsb
cmpsb
sub
push
xchg
push
shrl
pushf
xchg
add
and
aaa
jl
add
inc
int
shl
mulb
push
adc
inc
lcall
xchg
movsl
out
xor
inc
cmpsl
push
outsl
mov
lods
lods
push
pmaddwd
jo
les
repnz
shrb
jne
mov
nop
mov
mov
mov
push
movsl
shrl
sub
jle
xor
jl
jnp
inc
jle
inc
dec
es
pop
pusha
cltd
xor
adc
mov
mov
stos
pushl
or
movsb
dec
mov
stos
add
cltd
js
repz
in
pusha
xrelease
jl
aaa
popf
adc
mov
mov
sub
adc
dec
out
or
mov
lret
les
lea
in
stc
jmp
les
pop
or
adc
dec
cmp
pop
in
popf
push
pop
int
adc
jo
pop
jne
pop
sti
inc
test
ror
xor
pop
and
or
mov
sahf
jmp
cwtl
add
mov
cmp
sbb
add
arpl
lock
test
and
mov
cs
pusha
push
xor
adc
mov
lret
add
adc
aas
push
xor
mov
add
aam
add
jl
ljmp
xchg
or
adc
push
inc
cmp
dec
dec
inc
sahf
popf
cs
adc
aam
push
rclb
sti
jecxz
inc
popa
js
test
sub
jne
test
mov
stc
stos
push
aam
pop
adc
js
xchg
xor
ja
insb
ret
mov
cmp
add
stos
cmc
mov
stc
jo
inc
int3
popa
xor
jbe
cs
sbb
rclb
sti
into
outsl
inc
std
aad
enter
inc
lea
mov
ja
cmp
adc
fdivrl
mov
mov
sbb
mov
test
lea
arpl
je
dec
sub
dec
cs
xor
cmpsb
push
es
dec
addb
mov
adc
cmp
sbb
sbbb
and
jmp
cli
push
pop
stos
cmpsl
icebp
push
cli
jecxz
js
in
test
hlt
mov
adc
movsl
xor
ds
cmpsl
call
pop
in
add
xchg
daa
adc
xchg
lods
pop
addr16
into
cld
sub
enter
pushl
fsub
cmp
pushf
dec
dec
fiaddl
mov
mov
das
adc
cmpsl
loop
mov
mov
sbb
lret
bound
lret
inc
mov
aas
cld
sti
xor
sbb
pop
mov
lds
iret
lea
call
enter
loope
cmpsl
push
mov
cltd
div
pop
or
or
test
pusha
mov
out
pop
stc
fisttps
pop
adc
shrb
add
pop
inc
xlat
outsb
push
pop
dec
pusha
bound
js
xchg
add
out
mov
inc
mov
rol
inc
lods
sbb
in
adc
pop
pop
in
or
pop
pop
sub
int
mov
cmp
mov
and
vphaddubq
cli
pop
mov
scas
cmp
cmp
xchg
into
sub
ds
imul
sbb
fcmovnbe
add
cmpsb
loop
dec
shll
gs
sbbb
push
jo
push
and
jmp
and
mov
push
pop
scas
mov
jnp
mov
cmpsb
fimull
rcr
or
jb
xor
or
les
xor
aad
cli
add
jmp
into
jns
inc
lock
roll
in
pop
or
sub
lock
xor
pop
insb
sub
cmpl
bound
mulb
ljmp
jbe
xor
icebp
sarb
enter
pop
sbb
loope
lods
mov
jnp
and
jge
fbstp
inc
mov
pop
and
imul
mov
cmp
push
into
addr16
xchg
push
in
push
aam
mov
and
push
mov
outsl
or
jno
or
push
jbe
mov
outsb
es
push
jecxz
popf
push
and
jnp
sbb
adc
icebp
xchg
cmpsl
les
outsb
push
ret
mov
popa
arpl
push
icebp
add
pop
test
out
test
jge
mov
dec
pop
cmc
or
imul
push
push
and
add
cltd
pop
push
jl
ret
jmp
sti
icebp
dec
arpl
and
add
scas
or
lea
dec
stos
push
sbb
inc
jg
mov
xchg
aaa
fiaddl
cmp
cs
insl
js
fwait
xchg
or
dec
mov
cmc
or
icebp
sub
ds
shlb
shrb
ljmp
scas
jle
out
loop
cmp
and
ror
jnp
loope
mov
mov
jg
adc
in
in
lahf
add
inc
or
and
movsb
mov
pop
push
pushf
inc
aad
out
adc
js
dec
jmp
adc
cwtl
lods
mov
test
mov
ror
dec
lds
sarl
dec
leave
in
xorb
xchg
xor
cmp
mov
sbb
lods
add
pop
jo
out
xchg
mov
leave
lods
mov
mov
stos
cmp
aaa
xchg
pushf
cmp
repnz
xchg
fdivrp
mov
push
mov
inc
aas
aad
sahf
inc
sbb
andb
fldl
fwait
pushf
adc
lret
mov
push
jle
push
out
mov
mov
gs
inc
cld
movsb
adc
push
movsl
push
push
or
in
cmp
lret
or
add
mov
pop
xor
cmp
adc
mov
jb
dec
aas
lds
jns
xchg
or
in
cmpsl
dec
add
ret
mov
sbb
ror
or
daa
mov
jae
add
sbb
test
in
xchg
mov
push
pop
lods
push
mov
shlb
ljmp
cmpsb
lret
sbb
ret
dec
sbb
les
loopne
movsl
sub
mov
push
sub
sub
cmp
mov
push
jle
leave
or
data16
push
addr16
push
daa
mov
rcrb
lock
int
sbb
xchg
daa
dec
repnz
mov
es
mov
and
dec
sbb
push
leave
jae
insb
xchg
dec
aaa
cmpsl
ljmp
in
pop
mov
scas
cmp
lret
cmp
addb
add
sub
fistl
add
and
add
push
lods
mov
inc
sub
sub
adc
pop
xchg
jle
pop
adc
aam
pop
stos
add
shl
fdivrl
sbb
inc
lahf
dec
push
enter
incb
popf
push
pop
mov
push
inc
fwait
test
popa
mov
in
lods
fwait
or
xchg
cli
push
lahf
sub
js
test
cmp
repz
jbe
loop
jp
pop
or
jnp
repnz
int3
cmp
inc
stc
cmc
add
pop
mov
inc
add
rcrb
rcll
call
mov
xchg
testl
in
repz
sarb
ljmp
jge
lock
mov
xor
add
cmpsl
push
mov
push
jmp
or
fbld
sbb
ret
add
ljmp
enter
ret
aad
xor
outsb
cld
ret
es
js
cltd
mov
je
mov
cmp
das
outsl
sub
cmp
and
fidivrl
in
aas
fildl
push
xchg
mov
ja
cmc
xor
outsb
out
out
in
xor
or
and
push
lahf
add
loope
das
scas
dec
bound
sub
push
fdivs
in
imul
mov
loop
ss
cs
add
jne
pop
sbb
frstor
daa
in
pop
add
or
data16
idivl
xor
rcrb
lods
cli
iret
sahf
cs
stos
pop
adcb
mov
pop
insb
or
sbbl
cmpsl
pushf
pushf
gs
les
out
cmp
pop
out
fs
out
lods
or
into
pop
xchg
add
push
add
jb
fsubp
xchg
mov
pop
data16
sbbb
mov
jno
push
test
jo
mov
les
dec
and
cmpsl
xchg
leave
inc
mov
sub
std
es
pop
es
hlt
es
mov
adc
gs
loope
xchg
xor
jno
pusha
movsl
xor
cmp
xor
mov
push
fmuls
fcmovne
in
cltd
jecxz
loop
nop
pop
iret
mov
rcl
adc
aaa
dec
lret
js
and
jecxz
xchg
in
out
scas
aas
xchg
sahf
test
mov
jns
fs
inc
xchg
scas
adc
rorb
in
and
add
das
loope
mov
cld
push
ret
cmp
sbb
mov
mov
enter
sahf
push
sub
pop
cmpsb
jns
add
adc
xchg
push
pop
xor
shl
test
mov
inc
je
mov
je
sbb
adc
sbb
jl
mov
jnp
cs
mov
testb
data16
pop
cld
testl
rcrb
je
pop
push
mov
pop
aas
xchg
pop
shlb
jp
aam
stc
idiv
pop
xor
lcall
std
pop
aad
lods
sub
movl
adc
mov
sub
sbb
je
cmp
mov
jno
push
fwait
aam
pop
cltd
test
xor
scas
pop
mov
test
fwait
mov
test
xor
ljmp
sbb
or
pop
dec
sub
test
fsubrs
aaa
jl
stos
in
loop
dec
aaa
and
sarl
mov
cmp
pop
cmp
dec
inc
push
pop
aam
mov
and
in
aam
nop
fldenv
mov
cmp
pusha
add
lcall
enter
xchg
jp
mov
cmc
pop
pop
out
or
jns
cmp
sbb
int
repz
cs
xchg
dec
andb
out
jmp
stc
mov
dec
lahf
pushf
mov
inc
sti
enter
cmpb
cli
lods
jb
lret
bsr
cmp
mov
cwtl
pop
push
or
f2xm1
push
fstl
or
inc
pop
or
jp
or
lret
cld
pop
sub
out
stc
push
fadd
les
imul
lcall
and
xor
repnz
cmpb
dec
cmp
inc
xor
and
cmp
inc
inc
jg
mov
rclb
xchg
fsubrs
mov
les
imul
imul
test
pop
mov
or
cltd
popf
add
adc
test
push
icebp
aam
pop
cmp
testl
aaa
or
aam
mov
ret
or
adc
sbb
dec
pop
pop
sbb
lods
movsb
jmp
sub
test
xchg
pop
pop
rcll
jo
out
fsubrs
outsb
dec
cmp
jecxz
sbb
adc
aas
jg
mov
stc
lahf
jge
dec
or
mov
sub
xlat
cmc
xor
inc
or
pop
xor
adc
push
mov
cli
jo
js
mov
daa
jae
sahf
scas
mov
out
or
pop
inc
fstpl
xchg
jae
push
jle
fstl
push
punpckhdq
lock
les
das
vprotq
int3
push
mov
mov
dec
jl
movsl
cmpsb
pop
into
out
mov
xchg
test
repz
fistl
push
call
xchg
rol
pop
cmp
loop
pop
in
and
ror
mov
test
test
xor
ss
sub
mov
nop
and
pop
subb
sub
pop
pop
std
cmp
sbb
jae
mov
mov
fucomi
add
iret
and
and
fnsave
dec
or
inc
adc
lahf
into
cld
mov
fnsave
xchg
imul
pop
xor
shll
es
addr16
sahf
adc
repnz
inc
out
arpl
stos
dec
or
sub
sbb
in
nop
xchg
das
and
mov
ret
jb
mov
addr16
lods
shll
ds
ss
insl
jle
std
movsb
aas
or
test
mov
pop
lret
cwtl
test
data16
lcall
dec
mov
ret
pop
outsb
mov
jo
rorb
test
sbb
sbb
lahf
push
jne
inc
inc
add
cmpsb
sahf
sub
push
cmc
jnp
pop
push
rcll
xchg
sub
jne
movsb
push
dec
pop
arpl
lret
sbbb
daa
xchg
cmp
jmp
loopne
dec
and
pop
push
pop
cwtl
cmp
lret
int
add
jbe
aas
int
cmpb
mov
lcall
push
cmpl
leave
and
lahf
iret
js
movsl
cmp
pop
push
sarl
cmpl
and
cmc
pop
insb
icebp
js
or
les
jno
pop
gs
xor
push
cmp
ds
xchg
repz
xchg
fisubrl
rorl
xchg
cs
hlt
sub
hlt
xchg
leave
mov
insl
rol
xlat
sub
iret
mov
fs
int
out
or
movsl
out
pop
fadd
sub
xor
popf
sbb
add
mov
pop
pminub
pop
xchg
inc
ja
cld
clc
cwtl
pop
cmp
clc
pop
iret
pand
cmp
sub
gs
mov
ljmp
inc
sub
int3
fwait
mov
or
filds
enter
add
adc
push
lods
lret
notb
pusha
cltd
lret
dec
test
gs
ret
lret
addr16
push
cmp
jb
xchg
xchg
add
mov
or
lods
dec
jo
test
fstps
jnp
sbbb
push
adcb
test
aaa
out
sub
stc
ljmp
repnz
outsl
lret
add
mov
sarl
mov
sub
or
xchg
mov
dec
clc
xor
mov
insb
jbe
jnp
mov
ljmp
pusha
mov
lods
inc
cld
mov
sbb
out
inc
sbb
mov
pop
fstp
lret
xor
sub
fsubrs
ficoml
add
aam
fs
lcall
fbstp
inc
scas
xchg
sbb
mov
shlb
adc
test
call
add
xor
mov
add
ljmp
add
test
test
pop
jns
fidivl
dec
pushf
insb
inc
std
inc
adc
mov
testb
mov
pushf
mov
pop
out
adc
popw
inc
es
or
push
leave
sbb
dec
xor
roll
push
dec
push
icebp
push
ret
mov
add
xor
or
or
outsl
xchg
mov
test
push
std
insl
ret
jno
stos
dec
in
jmp
cmpl
mov
nop
push
inc
repz
pop
cmpsl
mov
dec
cmp
push
cld
push
inc
mov
leave
cmp
push
ret
xlat
push
outsl
repz
mov
lret
adc
or
push
decl
ljmp
adc
mov
jge
cmp
push
xchg
mov
lret
testl
add
sbb
add
adc
push
into
stos
ret
mov
inc
jbe
adc
xorb
cmp
xor
fistps
jb
test
cmp
call
rol
sbb
push
jl
jl
or
in
dec
add
dec
jl
xchg
cwtl
lds
push
pop
lds
push
icebp
popf
push
jge
enter
in
jns
outsb
mov
pop
xor
inc
lods
cmp
aaa
pushf
pop
push
pop
call
push
imul
loope
add
arpl
or
sbb
sbb
cmp
pop
dec
decb
push
mov
test
xor
cmpb
int
lahf
stos
sbb
mov
push
mov
cmp
in
sbb
scas
sub
scas
fiadds
lret
jb
xchg
push
jne
ds
out
ds
xchg
pop
bound
jmp
or
imulb
add
jns
inc
insl
sti
adc
pop
ja
adc
cmovl
and
outsb
xchg
jns
jge
lcall
in
mov
bound
int3
daa
insl
or
mov
push
aam
inc
adc
xor
in
adc
fmull
push
mov
in
adc
out
scas
test
cmp
push
or
lods
fstpt
jne
aaa
jnp
ja
xchg
adc
jl
pop
fwait
xchg
cmp
xor
or
sub
mov
ret
jne
sahf
les
pop
cmpsl
scas
and
jno
cmp
jp
pop
xchg
outsb
mov
xor
sub
in
cmp
std
mull
enter
mov
data16
cmpsl
xlat
mov
pop
int3
dec
int
xchg
and
sub
cmc
insl
fstpl
lea
xchg
shl
out
mov
loop
xchg
sub
movsl
ds
pop
dec
subl
adc
frstor
insb
mov
and
xchg
hlt
push
pop
imul
lods
dec
and
dec
cmpsl
pushl
std
pop
int
add
xchg
cmc
and
cmp
xchg
or
and
and
mov
cwtl
leave
stc
int
ret
sub
cmp
cmp
sbb
mov
ret
xchg
add
cmc
sti
loopne
imul
xchg
sub
mov
cs
repz
adc
sti
pop
push
sbb
rclb
lret
mov
cwtl
cwtl
mov
jp
jge
xchg
adc
divb
mov
shrb
xchg
push
push
insl
cltd
ret
xor
pop
or
loop
dec
push
push
pop
mov
xchg
aas
iret
or
push
fsubs
sub
imul
xor
cmp
popa
icebp
bound
pop
and
xchg
ficoms
les
call
sbb
cmp
push
cmp
ret
rorl
inc
repnz
aad
inc
leave
push
aas
les
push
bnd
jle
adc
xlat
test
push
sbb
mov
xchg
rolb
popf
jo
or
push
xor
push
incl
and
clc
add
and
das
mov
mov
inc
fs
sti
and
mov
cwtl
mov
out
bnd
in
aad
jb
jb
xchg
push
out
clc
adc
imul
jns
or
inc
in
in
dec
inc
fsubs
mov
jp
push
js
insb
sub
cltd
push
xor
adcb
lahf
dec
xlat
loopne
adc
pop
add
xchg
mov
mov
outsl
push
mov
movsb
into
addr16
lds
xchg
les
jmp
movsl
fcomp
leave
je
inc
inc
ljmp
cmp
enter
adc
insb
push
mov
bound
shrl
mov
mov
pop
push
pop
mov
xor
adcb
pop
stos
xchg
pop
loopne
or
loope
pop
pop
mov
jns
fisubs
pop
add
ret
mov
pop
and
jl
inc
stc
lret
push
adc
in
xchg
dec
loope
cmp
jecxz
outsl
or
dec
cmp
jle
into
addb
stos
loopne
dec
outsb
test
xor
lds
jb
sbb
mov
shl
sbb
test
test
scas
ret
icebp
subb
call
push
aad
inc
cmpsb
inc
xor
push
adc
ficoms
mov
pusha
outsl
add
pop
and
nop
and
enter
mov
and
and
adc
xorl
adc
pop
fdivs
stc
test
stos
or
test
xor
add
pop
mov
xlat
lea
imul
mov
insb
mov
aaa
insl
sub
mov
adc
lock
lods
mov
in
inc
jns
std
aaa
jge
add
xchg
jp
mov
leave
and
mov
into
or
xor
or
lea
js
xlat
cmp
cld
xchg
fs
aaa
mov
or
sbb
and
sbb
lea
repz
xor
xor
ret
dec
iret
dec
jle
mov
mov
jne
arpl
hlt
or
gs
mov
fidivs
sbb
mov
inc
pop
mov
out
scas
cmp
cmpsb
js
iret
cwtl
outsb
or
repz
out
jns
xor
xor
fildll
dec
mov
mov
xor
scas
and
fwait
pop
flds
int3
das
loope
mov
outsb
or
inc
shl
addr16
xlat
pop
pop
and
and
out
popf
dec
mov
dec
test
mov
push
push
int3
pop
cmc
dec
data16
inc
shlb
inc
jno
ja
mov
pop
movsb
rcrl
push
cmp
cmp
or
jae
xor
or
fnstenv
xor
inc
dec
adc
inc
idivb
jecxz
and
idivb
std
dec
or
add
leave
xchg
and
and
sub
movsl
mov
lret
fdivl
and
add
push
lcall
loope
je
jecxz
mov
xchg
fsts
xchg
adc
mov
mov
fisttps
mov
fldt
or
sub
icebp
jecxz
mov
out
shlb
in
shr
adc
mov
bnd
lods
mov
fcompl
adc
xchg
mov
cs
pusha
mov
pop
mov
pop
sub
jbe
roll
or
movsl
in
sbb
jno
movsl
jo
movsl
lret
jle
rolb
bound
mov
fidivs
cmp
test
or
mov
xlat
inc
xchg
jle
mov
cld
ss
adc
or
or
xor
enter
mov
lcall
mov
out
or
push
sub
or
inc
cmp
fwait
gs
les
testl
iret
xlat
insb
in
xchg
jmp
nop
fidivs
and
pop
imul
xor
mov
xor
sub
imul
jmp
jl
test
jg
iret
aas
pop
pop
mov
push
jno
lret
inc
adc
inc
lds
popf
hlt
popa
stc
xor
dec
adc
enter
test
jnp
cmp
jge
repnz
cmp
mov
push
cmpsb
mov
lea
add
mov
rclb
mov
repnz
sarl
lahf
dec
mov
test
cmpl
clc
pop
mov
rcll
scas
cmpsb
and
xchg
dec
cs
xchg
pop
inc
outsl
add
push
mov
pop
ret
add
xchg
ljmp
add
lcall
andl
in
mov
dec
sbb
cmp
loop
xor
inc
out
sub
fldcw
aad
and
mov
in
sbb
sub
fiadds
push
sbb
cmp
out
js
push
jmp
xchg
rcll
add
ror
xor
aas
and
push
enter
sahf
add
sub
mov
insb
dec
jg
mov
into
pusha
or
xchg
movsl
lahf
jno
mov
lcall
in
movsl
popa
rclb
repnz
out
add
fcmovne
pusha
outsb
repz
and
out
fwait
add
cmp
mov
mov
ret
mov
jb
cld
pop
icebp
mov
pop
imul
and
lret
pop
rcr
pop
dec
mov
cli
mov
insb
sbb
ret
outsb
sbb
lcall
mov
dec
test
or
addr16
mov
pop
mov
mov
ljmp
sti
xchg
jmp
and
xor
ljmp
mov
add
fadd
mov
sub
dec
lahf
sub
movsl
ffreep
cwtl
or
fistpl
gs
sbb
negl
sub
insl
mov
pop
cmp
fstpt
das
mov
inc
popa
and
dec
out
mov
lret
sahf
push
lods
jns
jnp
mov
imul
xchg
push
dec
add
add
clc
cmc
cmp
inc
lret
rcll
stos
subb
xchg
aad
dec
dec
in
xor
call
push
inc
or
cmpsl
in
adc
mulb
cmp
sbb
test
push
jo
cmpsl
in
addl
lret
movsl
jl
and
adcl
mov
lret
dec
pop
sbb
cmp
fsubrs
cmp
shr
sbb
push
movsl
inc
in
popa
test
dec
cmp
movsb
inc
shlb
imul
sahf
xchg
shll
mov
and
xor
xchg
popf
pop
dec
dec
jge
pop
loope
dec
divl
cmp
movhps
shl
je
sbb
lea
popf
adc
jge
fcmovnbe
dec
icebp
js
mov
out
call
xorl
idiv
in
sub
cmp
xor
xchg
test
pop
pop
aaa
lds
vpcmpgtd
dec
mov
inc
popf
movl
xchg
inc
mov
xor
out
mov
add
sub
imul
add
nop
xchg
push
outsb
divl
jl
scas
lcall
movsl
movsl
xchg
in
mov
pop
stc
outsb
aas
scas
in
or
dec
into
dec
jl
pop
jns
mov
xor
jne
adc
addr16
push
lahf
fcmovbe
fildll
mov
cwtl
or
xchg
scas
jnp
dec
inc
jns
pushf
xchg
mov
cmpsl
jmp
adc
adc
xor
pop
cltd
mov
adc
sbb
gs
mov
rorb
dec
push
xchg
jg
je
ss
pop
rcrb
lret
das
jne
aas
mov
enter
inc
or
lcall
push
sub
icebp
add
fs
xor
xchg
sub
mov
xchg
rcll
clc
cmpsb
in
cmp
inc
insb
or
push
mov
lcall
lds
adc
or
inc
imul
mov
test
out
cmp
in
subb
add
data16
cld
mov
lds
xchg
imul
mov
lods
mov
test
aad
jl
pop
cltd
mov
daa
repz
jp
icebp
sbb
inc
faddl
insb
xchg
xchg
lods
ret
xor
lahf
sbb
cmp
cmpsl
mov
xchg
sub
sbb
push
inc
mov
sbb
xchg
push
lods
daa
into
call
loop
and
xorl
in
aad
xchg
out
push
sbb
imul
ret
out
dec
loope
push
aaa
push
add
cmp
mov
adc
popa
mov
adc
xor
sub
mov
in
in
aad
outsb
sub
inc
pusha
sub
cmp
sub
js
mov
mov
lods
push
sub
pop
xor
add
xchg
std
mov
aaa
aad
notb
xchg
push
inc
insl
inc
fcmovbe
call
icebp
cmp
xchg
push
cli
and
cmp
sub
cmpsl
sub
stc
and
outsl
stos
in
lret
sub
incb
fmull
push
lahf
lods
out
test
fs
sub
stos
fdivl
sarb
pop
bound
fidivl
inc
lret
sbb
aaa
cmp
or
xorl
jp
es
dec
mov
jb
and
test
mov
rcrb
fdivr
or
out
sbb
mov
jne
and
movsl
aas
inc
js
notb
insl
xchg
js
shlb
pop
aad
std
cli
call
cli
test
adc
pop
pop
cwtl
dec
stos
mov
test
xchg
mov
gs
cmp
aad
jp
mov
jg
add
push
cmp
das
je
push
xchg
jl
es
jmp
and
push
mov
aas
cmp
inc
or
push
mov
xlat
jne
test
sub
push
fwait
lret
dec
ljmp
lahf
jbe
sbb
sbb
fwait
add
add
xlat
jne
outsl
das
bound
push
lods
push
push
clc
sbb
xchg
stos
sub
stos
lea
out
int
leave
fsubl
jae
fdivrl
sbb
fcom
addl
push
bound
out
int3
aam
and
mov
sub
fbld
pop
pop
cmpsb
xor
mov
sub
sbb
sbb
lahf
sbbl
test
es
xor
mov
adc
push
jbe
lcall
dec
mov
test
outsb
jno
outsl
or
out
stos
and
pop
mov
call
jne
jl
dec
or
xor
mov
sub
out
jmp
fadds
pop
inc
mov
stos
dec
int3
icebp
push
jmp
pop
adc
shrl
xchg
and
sub
xor
dec
xor
add
xor
cwtl
adc
push
cli
mov
adc
jns
pushf
push
in
sub
and
mov
iret
push
xchg
pop
mov
pop
adc
stos
mov
mov
inc
mov
mov
stos
mov
inc
mov
xor
adc
or
cs
mov
inc
adc
or
ret
nop
jge
adc
pusha
int3
pop
test
mov
int3
push
cmp
pop
push
cmp
jno
jp
loope
mov
cmpsb
mov
sysexit
movsl
dec
jnp
sub
test
out
icebp
imul
mov
cmpsb
in
cmp
cmpsl
push
mov
and
in
dec
inc
pop
or
out
iret
pop
sti
mull
movsl
leave
setne
dec
bound
or
stos
dec
mov
mov
xchg
decb
imul
mov
aaa
gs
out
push
nop
xchg
and
xchg
mov
cmpb
xchg
mov
aam
je
fs
or
pop
jl
push
sbbb
or
sbb
stc
mov
popf
bound
adc
stos
xor
push
mov
mov
adc
jg
and
and
fs
xchg
cmp
mov
mov
mov
push
xor
fsts
loop
push
ror
scas
and
das
pusha
pop
sahf
dec
lret
pop
sbb
push
jnp
cs
xor
jle
sahf
mov
adc
and
icebp
test
int3
enter
cmp
cli
daa
daa
ficomps
fwait
js
push
or
outsl
add
cmpsb
data16
cmp
clc
ss
popf
lock
add
lods
or
ds
lds
jns
and
mov
mov
pop
dec
insb
mov
adc
xor
jl
dec
out
adc
adc
sbb
mov
xchg
insb
push
dec
push
fbld
stos
fisttpl
dec
movsl
push
cmp
mov
ss
mov
std
cli
fisubrs
mov
dec
aas
test
jnp
sbb
sti
mulb
enter
xchg
xor
out
mov
cmp
sahf
xlat
icebp
push
addb
leave
push
jg
cmpsb
mov
dec
dec
leave
push
aas
fstps
inc
sbbl
lods
pop
add
popf
mov
nop
insb
sti
push
sub
cmc
add
rclb
adc
pop
and
and
or
mov
test
rol
data16
adc
inc
push
je
jne
sub
dec
xor
cmc
push
pop
jp
ret
cmpsl
jne
fcoms
icebp
and
jg
jb
pop
push
aam
pop
imul
pop
pushf
int
xor
ret
fadds
mov
mov
repnz
movsl
lcall
and
add
shlb
dec
dec
into
push
mov
stc
add
cmp
incb
or
cwtl
movsb
push
sub
aam
xchg
stos
pop
loope
aaa
mov
jo
out
or
jns
test
and
jp
lret
sbb
or
aam
fs
xchg
and
pop
loope
cltd
mov
loopne
jno
cmp
adc
popa
jo
jo
mov
xchg
adcl
push
dec
repz
cli
repnz
stc
jns
das
cmp
or
lret
scas
jmp
lock
in
enter
in
cmp
outsb
xor
insl
push
cmc
dec
mov
sub
test
stc
and
dec
mov
das
sbb
xor
inc
lret
mov
push
enter
ret
test
xor
xchg
negb
push
pop
or
lock
pop
xor
push
in
mov
sarl
notb
lret
dec
dec
sbb
repz
rclb
adc
inc
jae
cmp
push
and
xor
mov
ror
or
fisttpl
repnz
jbe
into
jecxz
sub
daa
fadds
cmp
aam
xlat
pusha
sub
sub
rorb
lds
cmp
inc
pop
je
sbb
push
pop
mov
pusha
aas
nop
out
xor
call
pop
and
gs
or
xor
pop
rcr
and
in
xchg
xchg
sbb
jne
sbb
sbb
dec
or
pop
inc
cmpsl
movsl
in
mov
scas
fisubrs
lahf
dec
cli
xchg
imul
adc
pop
roll
sbb
scas
pop
and
cli
scas
outsl
xor
loope
or
sbb
lods
mov
arpl
icebp
fsubp
xor
cmpl
std
int3
subb
pushf
and
cmpsb
push
and
into
xchg
sbb
inc
cwtl
xchg
cmc
push
in
shrl
rcrb
mov
mov
lock
push
pop
aaa
out
inc
mov
fwait
btcl
mov
push
and
dec
repnz
sub
fs
inc
fldl
movsl
in
ja
xorb
mov
inc
mov
inc
shrb
in
test
es
add
pop
shlb
pop
cmp
push
fcomps
jp
or
mov
dec
xchg
cltd
iret
inc
xchg
int
pop
ja
xchg
inc
mov
inc
pop
adc
jno
sub
jbe
mov
lock
int
sbb
bnd
gs
sub
xor
clc
xor
lods
rorl
mov
jg
mov
je
popl
out
pop
sbb
add
xor
xchg
jae
lods
enter
enter
pop
dec
inc
xor
ret
push
je
pop
sub
mov
push
inc
mov
mov
inc
std
cli
xor
gs
inc
movsb
out
mov
addr16
mov
push
jno
jle
dec
ja
out
test
insb
adc
inc
sbb
sarl
push
xchg
xchg
sub
pop
int
pop
fdivs
dec
outsb
dec
sahf
nop
repnz
adc
mov
sub
cmp
pushf
push
xchg
mov
sub
aas
jge
push
repnz
dec
rclb
les
lret
jl
scas
sub
aad
outsb
iret
xor
xchg
pop
leave
push
lods
mov
ss
mov
sub
mov
insl
out
in
pop
pop
les
mov
iret
aas
int3
repnz
mov
lahf
xchg
ret
pop
mov
jne
and
dec
jns
jbe
xchg
mov
jno
and
or
rolb
push
sbb
xchg
sbb
scas
lods
gs
or
push
jb
ret
mov
stos
and
xchg
ss
push
int
push
shll
inc
mov
in
insb
mov
fnstsw
lock
sbb
or
sti
outsl
test
ljmp
cmpsl
adcl
add
or
int3
iret
lea
xchg
loopne
lock
mov
jmp
xorl
jns
mov
orb
pop
enter
lret
mov
ret
push
and
icebp
pop
inc
xor
sub
rclb
push
xlat
mov
mov
sbbb
sub
outsl
jmp
jb
mov
mov
xchg
nop
aaa
and
std
mov
cld
lods
addr16
xchg
pop
mov
cmp
outsb
or
fwait
adc
into
xor
xor
xor
in
xchg
pushf
dec
ficompl
jp
or
pop
adcl
outsl
aam
adc
sub
outsl
inc
push
pop
add
jae
add
test
cmp
imul
movsb
sarl
fst
xchg
aas
das
out
jl
add
or
andb
mov
imul
adc
sub
fistpll
movsl
aad
lret
icebp
imul
push
dec
xor
js
add
pop
into
cs
orl
fstl
scas
adc
adcl
das
dec
push
mov
lretw
rclb
cmp
ja
mov
mov
jl
movsl
lock
popl
sbb
jbe
cmp
iret
mov
aaa
ss
adc
cmp
sti
xorb
xchg
repnz
in
mov
bound
outsl
les
mov
out
dec
iret
rcl
leave
adc
test
xor
inc
int
stos
ror
mov
enter
stos
mov
push
mov
mov
inc
inc
pop
ret
sub
add
neg
fdivl
sbb
gs
popa
cwtl
fmulp
lods
add
mov
int
or
adc
inc
fcomi
pop
jb
push
jno
mov
stos
jne
mov
sub
out
pushf
push
push
inc
push
xor
sti
add
repz
imul
shl
imul
call
fldcw
call
cmpl
lods
adc
cltd
inc
add
lahf
sbb
xchg
pushf
mov
lock
mov
mov
cmpsb
jbe
add
mov
lods
scas
stos
popf
lcall
sub
test
push
mov
insl
mov
push
jno
sub
out
ret
cltd
sbbb
dec
mov
in
jmp
jmp
mov
sub
xchg
in
sbb
sbb
push
sub
jp
jl
xchg
inc
add
pop
cmp
inc
test
mov
jb
sbb
js
hlt
cmp
das
pusha
aam
jns
int
mov
mov
ret
jbe
and
loop
scas
out
aad
inc
shll
je
pop
ljmp
rcrb
mov
mov
mov
push
sbb
sbb
push
mov
xor
jne
adc
inc
mov
sbb
jge
popf
jmp
xor
xchg
aas
push
xchg
movb
or
jg
add
mov
aaa
sub
xchg
adc
add
xchg
sub
mov
lret
mov
cmp
pop
pop
gs
in
or
int
push
lret
mov
cmpsb
mov
in
aas
dec
sbb
pop
jne
adc
int
andb
stc
pop
loope
hlt
icebp
aaa
cwtl
cmc
into
jl
mov
fwait
cmp
out
xchg
ds
sarb
jecxz
and
iret
sahf
lahf
mov
jg
and
mov
inc
mov
mov
fcmovb
test
jnp
add
cmp
push
fs
cltd
push
xchg
xchg
cmpb
sbb
cs
mov
inc
mov
and
test
push
scas
jg
in
cwtl
cmp
inc
inc
scas
lahf
insl
ja
cmp
mull
pop
jg
gs
mov
jbe
test
addl
xchg
inc
fidivrs
pop
xchg
repnz
fsubrl
push
mov
xchg
pop
pop
pusha
sbb
sbb
push
xchg
add
lcall
stos
push
js
cmc
adc
popa
xlat
xchg
in
scas
test
inc
add
jae
xchg
aam
push
fdiv
push
cwtl
aas
out
in
in
mov
sub
cli
in
pop
test
aam
mov
cmp
or
lea
subb
pop
cmp
push
in
xor
mov
jmp
call
sbb
daa
pop
jge
aam
aas
sub
xor
fists
sbb
mov
pop
sbb
and
dec
mov
mov
std
repz
sti
leave
jno
dec
push
adc
dec
loopne
inc
aas
adc
cmp
mov
mov
push
sub
inc
xchg
or
mov
gs
out
add
ds
shll
mov
aaa
mov
shlb
mov
ret
cwtd
aad
repnz
in
addr16
in
cmpsb
cli
or
cwtl
dec
jb
mov
sbb
pop
leave
lret
adc
mov
outsl
jge
mov
pop
imul
cmp
inc
cmp
jbe
ret
mov
push
int3
or
or
or
and
int
sub
mov
pop
adc
rclb
push
cmpsl
cmp
cltd
push
lahf
inc
cltd
sub
pusha
inc
xchg
inc
lahf
push
pop
xor
push
jmp
sub
pop
xchg
push
cmp
pop
jl
aad
cmp
push
adc
xor
call
enter
movsl
into
pop
das
jp
imul
dec
subl
dec
dec
sbb
and
ret
and
cld
mov
xor
rcll
inc
arpl
cwtl
repnz
jmp
xchg
mov
fwait
jecxz
or
shrl
jnp
sub
sub
jle
cltd
push
push
push
jnp
insb
mov
mov
into
sbb
lret
jns
push
push
popf
fnsave
xlat
lcall
mov
cmpsl
sub
mov
dec
dec
cmpsb
shl
push
pop
adc
dec
jecxz
fsubrl
inc
je
movsb
pop
dec
push
pop
and
cmp
mov
or
sbb
test
adc
daa
cmpsb
arpl
or
add
lahf
cld
sub
cmp
adc
push
arpl
int
jbe
loop
jge
ret
inc
in
iret
mov
or
cmp
and
iret
mov
jecxz
sub
xor
in
push
test
ffreep
scas
fnstcw
in
loop
pop
fcmovu
js
xchg
orb
sbbb
and
fdivl
lret
xchg
ficoms
or
lods
in
cwtl
dec
cmp
dec
adc
jbe
into
inc
jl
iret
inc
dec
shrb
xchg
push
mov
fmull
rcr
xchg
mov
push
test
inc
pusha
sti
mov
das
cmovp
gs
xor
sbb
push
lcall
lods
int3
sbb
daa
or
ljmp
xchg
push
inc
jb
jg
push
mov
movsl
aad
sbb
or
insl
cs
sbb
mov
push
inc
fistl
jbe
and
sub
nop
lds
cmc
lret
mov
test
jle
mov
sbb
dec
aaa
xchg
out
andb
daa
outsb
inc
pop
outsb
lods
repnz
dec
push
jb
iret
rep
test
test
push
mov
jle
into
stc
inc
jp
cmp
jmp
sbb
test
or
sbb
outsb
mov
mov
aad
pop
push
sbb
pushf
ljmp
and
mov
movsb
enter
out
xor
push
scas
xor
pop
mov
rol
xor
pop
mov
iret
xchg
stos
shl
sbb
jg
test
or
test
add
xor
cs
std
adc
sbbb
out
jae
aaa
sub
inc
add
push
scas
sysexit
cltd
gs
leave
push
mov
outsl
dec
cmp
jns
divl
movsb
dec
pusha
loope
loopne
int3
xor
pop
enter
jns
negb
or
les
sub
pop
shll
pop
loop
in
cmp
negb
xlat
inc
nop
or
mov
and
jmp
mov
nop
fldenv
shlb
mov
data16
jns
push
mov
or
adcb
inc
jno
insl
mov
int3
sbb
popa
les
sub
inc
sbb
pop
pop
testb
dec
ljmp
aas
mov
popa
enter
prefetchw
rorb
fisttpll
or
inc
lea
push
loop
test
int3
or
adc
mov
push
lret
repnz
rcl
mov
mov
push
ds
and
dec
pop
lock
bound
xchg
push
cwtl
repz
addr16
mov
repnz
mov
adc
in
or
xor
xor
mov
outsb
lea
sub
clc
les
dec
mov
xchg
add
cmp
push
hlt
scas
xchg
sbbb
inc
xchg
jae
dec
lock
push
loope
dec
fdivs
xor
dec
pop
jo
push
and
in
pop
stos
cs
sbb
xchg
and
insb
xchg
rcrb
loop
pop
insl
cmp
mov
sbb
xlat
xor
or
xchg
sti
xor
add
push
lea
push
xor
xchg
mov
dec
mov
pusha
pop
xchg
test
fsubrs
sbb
inc
pop
xchg
xor
loopne
out
fiaddl
or
and
adc
notl
es
adc
enter
fs
push
cmp
push
into
cld
cmp
pop
sahf
std
sbb
cmpsb
mov
outsl
fmull
cmp
jmp
aad
mov
jle
int
jbe
pop
sub
mov
arpl
fs
sub
cmpsb
mov
ffreep
dec
push
movsl
out
adc
cmp
inc
add
or
fcomps
pop
in
aaa
outsl
mov
lcall
mov
cmp
sub
popf
fcoml
pop
sbb
daa
inc
add
aaa
push
pop
or
imul
jmp
mov
sarl
mov
mov
mov
in
scas
and
mov
pop
pop
and
shll
dec
jle
and
dec
xor
divl
out
rorb
mov
out
push
daa
xor
inc
and
bound
cld
outsl
jne
fwait
or
push
loop
jns
pop
push
add
mov
add
cmp
dec
mov
xor
pop
sahf
fldcw
jae
pop
xchg
inc
add
loop
mov
pusha
jecxz
arpl
fmull
xchg
pop
mov
or
das
push
stos
jl
dec
dec
imul
movswl
xchg
dec
stc
xchg
xchg
sbb
cs
aam
mov
add
jbe
push
inc
mov
mov
lea
sub
pop
fdivs
rcrl
inc
inc
inc
mov
pop
lcall
lds
outsb
ret
pop
mov
inc
jne
sbb
hlt
mov
clc
mov
es
mov
inc
cwtl
and
and
in
imul
daa
sub
lock
cmp
ds
inc
sub
scas
mov
push
incl
sub
push
inc
adc
lock
sbb
aam
out
jb
std
xchg
mov
xor
xor
pusha
dec
cs
jge
mov
movsl
sub
fwait
mov
dec
xchg
insl
fidivl
mov
ficompl
xor
cmp
je
test
jge
push
lret
call
add
in
and
stos
inc
jo
xchg
xchg
xlat
xchg
sub
dec
mov
das
shrb
jmp
mov
in
mov
jecxz
je
mov
sub
dec
inc
adc
stos
pop
xor
mov
or
jne
sub
xor
xchg
cli
mov
sub
or
mov
lea
and
sub
push
out
je
adc
jb
mov
std
add
xchg
pusha
sbb
xchg
test
sub
pusha
out
scas
notb
xlat
push
imul
pop
sub
fwait
jbe
push
daa
xchg
test
in
add
mull
xchg
mov
push
mov
xchg
shlb
xor
out
pusha
arpl
and
fcomps
bound
ficoms
imul
imul
nop
icebp
test
lret
or
mov
sub
fisubrl
pop
push
je
or
dec
movsl
aaa
xchg
iret
xchg
fisubrs
adc
rcr
xchg
pop
jl
imulb
outsb
out
divb
mov
movsl
push
lahf
xor
sub
mov
jns
stc
jnp
xchg
dec
cwtl
inc
pop
mov
push
xchg
push
adc
xchg
lahf
cmc
sbbb
stos
imulb
adc
jbe
imul
mov
repnz
cmpsl
xor
pop
in
neg
mov
idiv
jp
mov
cmp
ret
mov
inc
or
jnp
sbb
dec
and
fiaddl
cmp
lcall
pop
mov
bound
push
add
push
sahf
mov
call
fistl
les
cmp
sbb
sub
push
push
push
dec
sahf
add
lods
dec
imul
cmp
and
jg
daa
leave
inc
inc
add
inc
pop
push
mov
dec
cmp
imull
stos
dec
out
lret
cmp
xchg
or
push
jne
push
xchg
ss
push
mov
je
push
fstps
in
js
cmc
rorb
mov
aam
pop
ljmpw
or
jno
call
inc
cs
xor
mov
push
daa
cld
push
sbb
repz
test
push
push
dec
push
ret
mov
xchg
or
and
xchg
push
mov
sub
dec
jmp
shr
xor
movsb
stc
lret
cmp
int3
dec
repz
stos
cmp
mov
sub
mov
inc
fildl
pop
adc
adc
lds
test
cmpl
cmpxchg8b
lret
mov
sbb
pop
pop
xor
iret
insb
push
test
jge
or
pushf
jbe
add
sub
and
imul
mov
sbb
or
in
and
or
imul
lret
aam
ljmp
sbb
outsb
add
xchg
mov
cmc
or
mov
inc
cmp
adc
imul
add
and
sbb
fmull
movsb
ss
inc
xchg
dec
aaa
sahf
js
cmpsb
add
xchg
push
mov
lahf
out
jno
xchg
loopne
and
and
xor
cwtl
sub
sbb
fdivp
arpl
cmpsl
jbe
sub
cmp
xchg
xlat
je
mov
push
es
aam
mov
jns
xchg
dec
adc
push
pop
xchg
and
mov
out
jp
out
xchg
lods
roll
and
pop
mov
dec
aas
daa
mov
jb
out
leave
adc
and
sarl
das
les
and
negl
popf
ja
mov
mov
mov
cmp
dec
adc
mov
ficoms
outsb
data16
movsb
adc
loop
push
lods
push
mov
cltd
loope
shl
in
test
enter
mov
xor
sbb
insl
mov
xor
ljmp
mov
lea
jl
lods
testb
outsb
fldt
adc
out
and
movsb
test
add
ss
mov
or
inc
adc
arpl
xchg
push
pop
inc
lock
mov
ss
jmp
adc
jg
add
out
add
stos
jle
mov
xchg
loope
in
test
fs
push
or
add
sbb
outsb
sub
pop
sbb
jbe
push
insl
pop
cmp
ficomps
and
or
cmp
xor
ret
mov
or
into
pop
outsb
fsts
xor
sub
adc
and
mov
gs
xor
add
outsb
pop
and
mov
dec
ret
insl
pop
sahf
push
in
mov
adc
and
mov
stos
out
fs
mov
add
loopne
test
xor
fldl
clc
mov
and
xorl
arpl
and
mov
iret
dec
popa
int3
jne
and
cmpsb
mov
pop
jae
mov
stos
lods
bound
stc
sub
nop
test
adc
push
call
jle
scas
cmp
repnz
adc
in
pop
or
outsb
cwtl
jle
add
xchg
fistpll
push
call
aam
cmp
mov
fs
mov
sbb
dec
pop
add
mov
mov
das
pop
pop
mov
inc
jae
popa
dec
enter
push
mov
rcr
lret
pushf
cltd
lock
sbb
fldcw
outsl
pop
dec
loope
lcall
add
pop
sbb
adc
or
push
int
sub
sbbl
cmp
mov
mov
jno
xchg
jae
mov
outsb
mov
pop
and
mov
bound
push
dec
jno
jns
mov
jns
dec
xchg
jp
jmp
mov
mov
popf
pop
mov
add
xchg
or
lahf
fstl
into
fstps
push
fildll
mov
or
outsb
or
dec
mov
repz
or
push
inc
xor
pop
xchg
fsubrl
outsl
adc
and
les
addl
sub
inc
setnp
pop
lret
inc
or
in
mov
jmp
sbb
inc
jae
repnz
sub
mov
mov
fidivrl
aam
sub
pop
bound
jo
inc
cmpsb
sub
rcl
sub
add
test
pop
out
insb
mov
xchg
ror
dec
out
push
adc
push
shl
sub
jmp
push
gs
sub
nop
xor
jb
lret
cmp
xchg
fidivrl
pop
xchg
lods
aas
and
or
lock
cmp
cmp
test
cmpsb
ds
sti
add
daa
jecxz
lahf
mov
and
std
cs
hlt
mov
cmpsl
mov
add
sub
gs
add
cmp
xor
cmp
bound
incl
xchg
and
lea
je
jno
adc
imul
xchg
hlt
cmp
addr16
jo
xor
lret
mov
fcom
mov
push
mov
adc
xor
notl
arpl
or
stos
cld
inc
int3
mov
mov
cli
aad
cli
lds
aas
cmp
mov
inc
mov
cmp
or
cmpsl
jae
xchg
push
movb
or
jbe
adc
mov
gs
push
push
mov
ret
and
pop
pop
xchg
mov
xchg
jbe
dec
das
data16
sub
add
js
adc
fcos
mov
inc
sub
jmp
imul
fistpl
insl
dec
lock
shr
jns
js
jecxz
bound
and
ficoms
hlt
in
inc
cmp
movsb
adc
out
xor
repnz
rcll
xchg
int3
or
sbb
adc
sar
push
pop
mov
xor
rorl
mov
aad
jnp
ds
leave
xchg
rorb
mov
xlat
dec
pop
in
push
ret
jno
push
ds
adc
lret
sar
xchg
in
jne
in
out
jnp
jg
mov
testb
mov
test
inc
mov
xchg
xchg
jne
je
movsl
pop
mov
fiaddl
mov
leave
push
xchg
mov
push
pop
arpl
jo
jl
cs
push
add
notb
push
icebp
xchg
mov
sbb
adc
out
popf
push
mov
inc
cli
pop
jle
lock
mov
add
jmp
mov
mov
mov
dec
aam
cmp
cmp
imul
xor
aad
ss
pop
insl
es
jo
mov
aam
stos
jo
xor
inc
cmp
sub
push
jne
cmp
inc
lods
roll
mov
clc
popa
pusha
cmp
add
jo
jmp
movsb
mov
and
xor
imul
dec
inc
push
jmp
push
mov
adc
xor
mov
bound
ljmp
jmp
mov
imul
stc
sahf
scas
sub
and
inc
jecxz
inc
mov
fs
cmp
pop
and
sub
fs
out
in
pop
adc
sbb
xor
sbb
mov
jb
jmp
mov
sbb
or
xchg
cld
jno
push
hlt
shl
clc
iret
icebp
sub
test
inc
lret
mov
and
mov
ficompl
nop
jns
cmpsb
cwtl
das
push
cltd
sahf
mov
icebp
push
int3
xor
fwait
jge
pusha
push
int
xchg
mov
xchg
sbb
jne
aas
mov
cmp
push
mov
mov
fmul
stos
in
cmp
pop
insb
lret
jg
xchg
inc
iret
sub
mov
js
das
inc
and
inc
mov
iret
xor
and
jmp
push
push
int
addr16
dec
nop
sarl
pop
pop
pop
les
pop
imul
ret
sarb
push
push
pop
mov
xor
cmc
repz
insb
hlt
adc
cs
cld
push
push
xor
push
mov
sbb
mov
cmp
das
pop
bound
jle
int3
mov
addr16
fnsave
jno
popf
sub
bound
sbb
fcoml
rorb
jbe
push
les
lret
cmp
xchg
or
shrb
jae
xor
mov
les
jnp
in
jae
mov
aas
dec
lock
jg
pushf
repnz
and
xchg
nop
push
mov
or
cmp
imul
jge
jmp
leave
movsb
cmp
loope
push
loope
and
insl
pop
cmc
loopne
rol
sti
cmc
sub
push
add
sub
cmp
push
dec
cmp
push
mov
cltd
jge
mov
pushf
sub
jg
push
jle
arpl
ljmp
xor
fs
xchg
cmp
loopne
jle
sbb
mov
xchg
sub
in
ret
addr16
jb
cmp
or
pushf
xor
mov
es
pop
fwait
mov
pop
rorl
icebp
mov
int
outsl
enter
xor
mov
fldenvs
fidivl
call
out
ret
xor
jns
ss
xor
mov
popa
popf
jle
or
push
invd
inc
inc
dec
fidivl
into
mov
fwait
icebp
aas
mov
xchg
sbbb
aaa
imul
stc
jmp
xchg
rcrl
jo
sub
sub
sahf
mov
fwait
ljmp
lds
cld
sub
mov
arpl
imul
aad
sbb
lds
test
cmp
js
jno
jb
shrl
mov
arpl
dec
scas
out
int3
pop
inc
cmp
hlt
sub
js
cmp
add
fwait
xchg
dec
pop
enter
or
or
pop
mov
dec
pop
lds
mov
popa
aad
lret
inc
es
cltd
repz
nop
push
test
mov
mov
js
movsb
mov
sub
or
movsl
mov
xor
out
push
jp
orl
mov
nop
or
push
cmp
scas
dec
pushf
push
out
sbb
xchg
bound
outsl
jae
sub
in
adc
dec
mov
jae
push
jl
jbe
or
enter
and
aaa
insb
push
test
mov
adc
jb
jl
mov
outsl
aam
out
loopne
mov
fidivrs
stc
xchg
in
int
stc
mov
pushf
int
out
fstps
add
nop
lods
rorl
outsb
add
pop
sub
sbb
enter
xchg
jnp
sub
sub
or
mov
xor
dec
xchg
hlt
adc
add
cmc
scas
sub
cld
mov
xchg
and
fisubrl
mov
loope
jo
adc
out
pusha
or
mov
negl
int3
das
mov
push
loopne
mov
out
mov
cld
xchg
bound
scas
inc
mov
das
fisubs
mov
push
jle
pop
sbb
pop
inc
mov
scas
xchg
movsl
pop
int
or
movsb
mov
jg
mov
cmc
popf
jo
mov
mov
repz
inc
push
dec
adc
pop
mov
int3
add
sahf
jmp
mov
adc
mov
mov
sbb
adcl
cli
add
push
into
in
aaa
xor
pop
ja
popa
mov
fwait
fs
cmp
sbb
adc
test
mulb
jmp
or
out
xor
in
mov
adc
scas
xor
sbb
xchg
lcall
in
or
decb
jbe
push
mov
subb
cmp
movsl
adc
mov
sub
loopne
ja
test
cs
adc
pop
or
mov
repz
shlb
ret
xor
dec
cmpb
insl
insl
mov
mov
je
std
inc
cmp
lea
imul
hlt
rcrb
mov
jbe
cmp
sbb
sbb
test
dec
int
pop
stos
lret
push
pusha
pop
push
sub
push
bound
lods
test
push
cmp
mov
mov
popa
out
sub
jp
hlt
push
imul
add
inc
push
adc
adc
sub
mov
cmc
mov
xor
cmc
pop
test
inc
or
dec
pop
adc
xor
mov
inc
mov
add
insb
pushf
dec
pop
push
iret
nop
adc
jns
out
mov
decb
adc
sub
or
hlt
push
stos
cmp
ja
lcall
adc
aam
inc
adc
outsl
add
and
mov
mov
push
lret
icebp
pop
std
lret
cmpsb
mov
roll
mov
arpl
popf
lea
mov
shll
insl
sub
test
jne
call
pusha
push
in
add
leave
into
or
add
shrl
add
out
mov
and
or
adc
adc
imul
sbb
aam
sbb
sub
rcrb
add
and
add
rclb
add
out
je
pop
jg
dec
std
cmp
xchg
mov
push
rol
pop
mov
xor
jno
les
or
psadbw
xor
mov
fwait
outsb
cwtl
ja
aas
daa
cld
lret
pop
lret
lret
out
imul
jb
xor
mov
xchg
push
jecxz
cld
adc
add
outsl
dec
inc
push
jno
je
and
pop
fldcw
mov
push
in
lahf
sbb
mov
xor
js
jno
cltd
fisubl
adcl
sub
fwait
cmc
push
icebp
mov
push
push
ds
imul
fildll
mov
fnstenv
pusha
xor
push
roll
dec
pop
xchg
shr
aad
xor
xchg
inc
dec
les
jp
push
repnz
bound
leave
popf
mov
scas
test
push
in
sahf
or
in
mov
adcb
iret
or
idiv
cmp
pop
outsb
xchg
pop
xor
or
push
mov
iret
jo
push
inc
and
out
cmpsb
in
pop
xlat
lahf
xchg
dec
lahf
test
xchg
xlat
inc
pop
sbb
xchg
addb
pop
jge
xchg
mov
fdivl
repnz
cwtl
sahf
arpl
sub
mov
adc
cmpsb
jnp
aam
or
aad
fnstsw
dec
mov
lods
movsl
or
dec
push
add
aam
pop
mov
add
aad
mov
rcl
jmp
xchg
roll
test
jl
sbb
push
test
shl
cs
imul
mov
xchg
mov
mov
icebp
insl
xor
adcb
inc
icebp
adc
fst
and
ds
test
pop
push
pop
lods
push
jb
inc
jno
mov
cmp
push
push
mov
mov
inc
mov
xor
out
fs
pusha
ds
pop
jecxz
das
lods
loopne
sbb
adc
pop
xchg
lahf
cmp
sbb
cltd
shll
cs
int3
sbb
mov
in
adc
jae
mov
movl
pop
xchg
movsl
or
scas
pop
dec
int3
cmp
repnz
mov
shrl
pushf
jge
loope
jge
jp
push
sub
push
or
fsts
xchg
add
dec
nop
repz
cwtl
aaa
mov
push
pop
inc
inc
cli
inc
xor
imul
push
push
cmp
xlat
orb
xor
lea
and
mov
xchg
add
in
test
js
cmp
push
jle
iret
xchg
xchg
jge
test
aam
in
shrl
jp
ds
push
repnz
iret
xor
scas
psllw
dec
jmp
mov
repnz
lret
dec
lds
pop
pop
or
xor
xor
xchg
xchg
scas
push
xchg
cmp
out
adc
mov
test
js
or
xor
rcr
and
or
xor
jmp
adc
ljmp
lods
mov
loopne
cmpsl
cmp
test
jbe
into
jae
xchg
xchg
xor
add
inc
popa
movsb
add
jg
lds
and
mov
jg
andb
repnz
mov
pop
testb
inc
push
aas
popa
dec
movsb
adc
mov
into
mov
or
mov
movl
mov
cmpsl
cmp
jb
aas
outsl
adc
add
daa
dec
adc
mov
imul
inc
dec
cltd
pop
inc
mov
clc
mov
push
mov
addr16
fucomip
adc
inc
ds
int3
popa
dec
popa
icebp
adc
insl
sub
sbb
outsb
or
enter
popa
iret
imul
stos
sbb
iret
arpl
popa
loopew
sub
pop
arpl
xchg
dec
fbstp
jo
loop
stc
scas
mov
pop
xor
fucom
cmpb
push
mov
movq
outsl
pop
xchg
das
push
cwtl
jbe
pushf
lods
push
popf
and
mov
pushf
fcomps
cmp
jbe
xchg
sbb
divl
jmp
cmc
push
cmp
out
repnz
jb
scas
xor
iret
clc
cmc
jp
pop
xchg
bound
icebp
push
jge
es
cmp
iret
outsb
xlat
ds
das
push
dec
sub
negb
jle
adc
dec
push
adc
push
aad
pop
out
pop
mov
xchg
in
cmp
dec
dec
dec
or
add
push
jg
rorb
je
push
mov
stc
fmuls
rcrl
sbb
ljmp
xchg
jl
roll
repnz
repz
lds
out
jnp
aas
adc
shl
aad
xchg
cwtl
xchg
sar
test
out
jmp
dec
xor
jo
pop
aad
mov
mov
jmp
lea
out
pop
andb
loope
jle
cwtl
adc
aam
iret
pop
test
xor
push
in
and
mov
cs
mov
std
lea
and
jo
cmp
jmp
or
sarl
aas
mov
xlat
or
jmp
cmc
jg
adc
fbld
shlb
sahf
push
xchg
pushf
cld
cmp
stos
cmp
daa
and
push
cmpsl
sub
cmp
mov
add
jecxz
xchg
xor
pushf
mov
sarb
sbb
pusha
mov
gs
jmp
movsl
jne
fldt
outsb
mov
push
pop
fstpt
jmp
popf
std
fimull
out
sub
cli
test
push
jl
insl
insl
jmp
insl
push
movsl
cmpsb
addb
scas
pop
sbbl
decl
cld
in
jnp
sbb
les
sbb
xchg
fbld
arpl
sbb
jns
cmpsl
adc
test
daa
jne
icebp
loopne
inc
adc
dec
repnz
cmpsb
loope
xor
fisubrl
clc
sbb
bound
aaa
cmpsl
dec
push
faddl
mov
sbb
in
mov
int3
cmp
push
test
push
cmpsb
mov
es
push
out
mov
mov
mov
lds
subl
int3
rolb
mov
mov
xchg
push
int
shll
movsb
xor
cmpsl
pop
inc
sti
lods
sub
pop
xlat
lret
push
and
add
mull
sub
mov
lds
dec
cli
hlt
cld
in
cwtl
jbe,pt
sbb
pop
nop
dec
lods
add
aad
orl
pop
push
fldt
inc
sbb
in
sbb
fcomp
push
or
pavgb
sbb
fidivrl
mov
cmp
loop
pop
sbb
mov
or
mov
inc
test
addr16
inc
nop
filds
jmp
ret
add
lret
or
and
mov
xor
sbb
adc
jno
pop
cmp
sahf
ljmp
jns
gs
fisttpll
mov
je
push
inc
test
mov
inc
movsb
inc
xchg
add
or
lret
add
sbb
dec
pop
mov
mov
stc
fwait
or
mov
xchg
imul
cmp
je
cmpsl
jae
fucom
fs
cmc
or
and
shll
cwtl
jo
mov
outsb
dec
fisttps
fisubs
fstps
mov
pop
mov
cmpsb
pop
hlt
repz
mov
inc
pop
cmp
iret
add
decl
arpl
pop
jge
xchg
push
add
mov
jl
jl
inc
cli
mov
push
and
enter
sub
add
imul
cmp
movsl
add
clc
leave
into
sbb
mov
mov
push
adc
sub
js
icebp
test
lock
mov
testb
jg
jle
lea
mov
mov
lcall
and
dec
ljmp
popa
mov
les
div
mov
push
mov
nop
ret
mov
js
jns
pop
and
xlat
ret
or
xchg
lds
jb
xchg
popf
push
lahf
pop
sti
mov
mov
add
jp
adc
xchg
int3
xor
jle
xchg
mov
in
test
int3
iret
fndisi(8087
jo
or
scas
or
add
in
pop
addr16
test
ja
and
sub
and
gs
cmp
xor
out
cmpsb
in
mov
mov
pop
shr
or
mov
cmp
cwtl
pop
cmpsb
jmp
fldt
add
inc
lds
dec
xchg
bound
cmp
cmp
rclb
fnstenv
scas
iret
cmp
incl
or
mov
jg
sub
pop
and
mov
sahf
xchg
xor
test
loope
sbb
stos
sub
pop
rcll
orl
fdivrp
inc
idivl
cmp
lock
scas
mov
pop
packuswb
pop
pop
enter
xchg
fiadds
dec
mov
xchg
push
mov
xor
imul
pusha
loopne
adc
imul
mov
sbb
cmp
xor
mov
adc
mov
bound
mov
and
mov
jecxz
pusha
cs
hlt
sbb
movsl
lock
jno
mov
fs
xchg
icebp
fimuls
mov
pusha
xchg
push
push
sbb
or
sub
mov
jne
popa
jg
cmp
mov
push
imul
aad
lret
sub
aaa
pop
cmp
xchg
repz
dec
adc
and
cld
pushf
cltd
jmp
sub
xchg
int3
cmp
push
rcr
sti
pop
out
add
clc
xor
adc
cmp
adc
inc
aaa
or
dec
mov
adc
jg
xlat
sbbb
adc
inc
pop
add
scas
outsl
fsubrs
dec
hlt
loop
out
xchg
aam
popa
mov
add
clc
jp
mov
xor
lahf
xchg
sub
inc
in
mov
ljmp
sbb
adc
or
je
jecxz
xchg
dec
pop
lock
lods
mov
mov
xorl
cmp
dec
loopne
sbb
push
lcall
dec
sbb
ja
dec
enter
flds
pop
outsl
out
inc
push
rcrb
jne
in
test
gs
dec
xchg
scas
ficoms
mov
sub
subl
sub
movsl
jge
pop
lret
movsl
cmp
fcoml
ja
xchg
stos
xchg
out
in
mov
stc
fisttpl
shrl
mov
push
pop
or
cmp
imull
fcoms
adc
je
sbb
iret
fisubl
out
cs
cmpsl
enter
aaa
jle
xchg
mov
cli
sub
mov
jg
lret
jle
iret
sub
je
fldl
dec
sub
push
jae
xchg
stc
int
mulb
fstl
pop
xlat
sub
push
scas
push
xchg
sbb
dec
push
and
mov
pusha
add
dec
pop
ret
sub
jge
sub
out
popa
es
fmuls
add
cld
std
lods
test
std
fisttpl
inc
sahf
push
arpl
mov
cwtl
sar
decb
push
and
out
push
lret
addl
adc
icebp
inc
mov
adc
lret
lock
cmpsl
js
fistpll
inc
dec
add
mov
push
insb
in
ret
cmp
ss
cmp
push
xor
add
and
xchg
jmp
mov
repz
int
lods
rclb
fimuls
scas
sub
mov
cmp
inc
mov
notb
adc
rcr
test
xchg
in
pop
and
push
jp
in
sti
outsl
int3
mov
gs
pop
out
ds
xchg
mov
jl
cmp
mov
xor
xor
xchg
fs
out
test
adc
mov
inc
lods
mov
loope
jmp
or
xchg
nop
adc
rcl
stos
xchg
insb
push
rcll
xchg
or
stos
lds
xchg
lock
lret
clc
sar
sbb
mov
rcll
in
js
shl
lret
ficoml
subb
enter
nop
stos
mov
fstps
das
test
jecxz
lret
cwtl
mov
and
xchg
fdivrs
sti
pavgb
push
cmpb
inc
insb
stc
aaa
dec
xchg
sti
cwtl
pop
rcrl
out
lds
push
push
movsl
mov
and
mov
pushf
ret
scas
mov
out
jmp
inc
jecxz
leave
or
bswap
sbb
cltd
dec
lods
cmpsb
inc
pop
into
pop
mov
int3
xchg
mov
inc
push
pushf
sbb
mov
mov
or
cli
fdivl
mov
and
inc
inc
push
adc
pop
test
sbb
lret
in
sbb
mov
push
shrb
lock
into
test
and
xor
test
insl
and
outsl
icebp
xchg
outsl
mov
cld
sub
pop
std
repnz
shlb
in
sbb
push
dec
sbb
shll
popf
jns
xchg
lds
cmp
cltd
inc
sahf
rcrb
cs
cmpsb
xor
pop
cmp
lods
jne
insb
bound
cmp
loope
adc
bnd
pop
loopne
xchg
sub
sub
xor
push
stc
mov
push
int3
sub
addb
jge
aam
test
out
inc
mov
scas
enter
das
call
fidivrs
div
xchg
mov
roll
cli
popa
xor
dec
sbb
and
ret
mov
cld
pop
cmp
add
push
jns
dec
cmpsl
sub
push
daa
dec
mov
add
inc
call
mov
xchg
xor
mov
rol
mov
sbb
sub
add
mov
out
data16
pushf
lahf
and
mov
xchg
xor
push
pop
adc
sahf
jbe
pop
push
jl
xchg
stos
sub
adc
ja
lcall
pop
jne
jge
jmp
pop
aad
std
mov
xchg
mov
adc
ds
addl
mov
shr
lods
inc
adc
andb
dec
in
sti
cmpsl
dec
jmp
xchg
xor
ret
stos
ror
or
roll
lea
dec
roll
lret
ret
jecxz
and
cwtl
pop
jp
jne
sub
lods
or
dec
mov
push
xor
lahf
stos
inc
adc
mov
xchg
push
or
push
repnz
mov
add
sbb
das
dec
pop
xchg
mov
mov
cld
mov
xor
movsl
jbe
rcll
stos
jecxz
push
fistl
inc
out
jmp
rol
push
xorl
pop
jbe
aam
loopne
xchg
adc
cld
push
and
ja
in
push
mov
ja
jno
jo
test
dec
mov
adc
sti
sub
fildl
cmp
cmp
mov
or
stos
mov
mov
xchg
imul
imul
pop
adc
ljmp
test
add
ss
loop
das
xor
out
lds
and
call
outsl
jae
or
andb
add
popa
outsb
jmp
cmp
mov
sbb
test
mov
mov
cmp
xor
cmp
dec
mov
stos
push
pop
movsl
out
ja
pop
sbb
cmp
dec
lods
test
sbb
xchg
push
xchg
mov
rol
int
sub
adc
xchg
lods
pop
mov
or
in
sub
sbb
pop
movsb
notb
pop
and
mov
mov
hlt
push
loopne
and
push
cmp
mov
fdiv
xlat
mov
fsubrs
pop
jb
jbe
in
xor
lcall
mov
sub
add
outsl
or
mov
cld
les
js
cmp
cmp
jecxz
pop
xchg
cmpsb
out
je
dec
leave
add
aaa
jo
push
push
pop
js
ds
insl
xchg
hlt
mov
decb
dec
mov
int
xorb
fwait
test
pop
cmpsb
sub
movsl
sub
fwait
inc
push
insb
fs
test
int3
xor
sbb
out
mov
xor
rclb
xor
sub
dec
mov
pop
mov
popfw
ret
out
call
sub
rcrb
shrb
inc
mov
fcomps
push
sub
adc
insl
xor
cmp
test
jno
ja
ret
je
sbb
into
cmpb
fdivr
cld
sub
mov
xor
sbb
cmp
fs
fildl
cwtl
mov
pop
mov
pop
outsb
iret
mov
xchg
push
jg
xlat
fistpl
xchg
mov
aam
dec
and
dec
fcoml
adc
das
adc
pop
push
xor
scas
mov
mov
fidivs
inc
push
pop
aas
inc
inc
xor
push
or
imull
cmp
pop
xor
std
out
mov
andl
in
and
mov
mov
mov
mov
jb
push
push
div
clc
dec
or
fadds
int
and
insb
jp
addr16
pop
cmp
in
cmp
movb
mov
lods
shlb
fisubl
aas
rclb
out
add
add
fwait
jle
loop
sub
in
jp
sub
sahf
lds
incl
inc
push
inc
sub
xchg
jo
mov
jmp
push
fidivrs
push
fcoml
lods
ja
out
das
mov
arpl
or
adc
dec
pop
roll
xchg
adc
push
sahf
mov
data16
lahf
push
loope
adc
jae
or
bound
sub
sbb
lds
pushf
mov
cmp
cs
iret
pop
xchg
sbb
imul
mov
xor
ret
repz
sbb
dec
jbe
jmp
gs
in
dec
mov
mov
jle
inc
cmc
xchg
inc
jb
cmp
add
je
scas
lock
xchg
dec
call
xor
xor
cmpb
scas
jae
mov
and
dec
movsb
push
push
movsb
scas
pop
cli
jecxz
mov
mov
adc
and
aas
pushf
adc
add
sbb
repnz
mov
mov
loopne
scas
hlt
fcoms
rol
fistps
add
sbb
jmp
mov
xchg
cwtl
add
jae
shrl
inc
aas
and
inc
bound
imul
push
fidivrs
cwtl
cld
sub
cmc
aad
add
cwtl
sbb
pop
es
insl
out
rcr
cmp
mov
xchg
mov
and
in
jmp
jecxz
sbb
rcll
or
cmp
add
mov
out
adc
inc
movsb
adc
mov
jb
xchg
xchg
shll
aad
ds
mov
xchg
test
sbbb
pop
cs
sub
jl
mov
aam
cmp
mov
mov
and
xchg
inc
mov
push
clc
jnp
jb
divl
movsl
xor
pop
jmp
mov
and
jae
into
sub
fst
fadds
cli
out
sub
mov
adc
jmp
sub
sub
rcll
cmpsl
lahf
pop
mov
cli
std
sbb
incl
push
cmp
adc
daa
outsb
push
sbb
or
hlt
cmp
dec
inc
shrl
mov
rclb
adc
cmpb
mov
test
inc
xchg
inc
add
inc
push
pop
inc
add
jae
cmp
pop
or
cmp
in
or
inc
les
adc
int3
sub
rcrl
arpl
xchg
scas
add
xor
mov
cmp
cld
and
mov
dec
test
clc
pop
push
dec
sub
inc
push
into
dec
jmp
rcl
push
pop
fsubrs
dec
push
mov
push
dec
lods
fninit
call
jg
or
sahf
inc
mov
adc
js
and
ljmp
loope
shl
mov
push
jae
rcll
out
and
mov
inc
add
mov
scas
aas
into
aas
jae
push
cwtl
lahf
insb
jbe
sub
mov
push
dec
test
mov
mov
loope
sti
xchg
push
push
xor
mov
js
cmp
add
or
pop
and
div
cwtl
or
call
in
out
sub
xchg
pop
mov
mov
xchg
add
adc
ja
add
hlt
addb
jg
bound
shlb
jg
div
roll
or
cwtl
setle
add
jg
adc
push
lods
fsts
jae
cli
test
mov
nop
cmpsb
ljmp
iret
mov
inc
lock
popf
bnd
mov
lret
adc
enter
mov
test
insb
push
xor
sbb
jne
jns
xchg
sbb
xchg
xchg
out
push
xchg
mov
sti
pop
sahf
sti
mov
leave
pop
or
or
bound
loopne
fistpl
nop
mov
lock
xor
mov
scas
or
lods
add
imul
jb
stos
dec
mov
push
int3
iret
mov
lea
xchg
push
pop
sbb
add
imul
test
fwait
mov
in
add
mov
xor
test
popa
push
dec
xchg
dec
fistps
pop
je
mov
bound
ret
fiadds
insb
mov
sub
mov
sti
or
aam
and
ret
push
repnz
jecxz
pop
cmpsb
roll
stos
pop
ret
jecxz
sbb
inc
orb
mov
addl
mull
push
or
jle
push
add
sbbb
das
lahf
cwtl
dec
dec
loopne
sahf
adc
jl
xchg
jno
push
mov
inc
xchg
dec
test
divl
paddsw
push
dec
and
xor
out
xchg
test
pop
dec
sub
jp
sub
loope
cmp
add
jb
dec
cmp
adcb
repnz
push
shll
movb
addr16
pusha
and
dec
mov
sub
fsubr
and
mov
pop
and
push
enter
xchg
pextrw
mov
sub
mov
stc
push
xor
aad
dec
mov
xor
imul
lret
popf
cld
cli
test
subb
outsb
or
mov
iret
mov
shrl
mov
or
inc
arpl
inc
ss
sub
outsb
and
xchg
sahf
sub
fwait
push
jmp
notl
test
aad
and
mov
ret
fwait
dec
xor
js
cmpsl
and
jae
shll
popa
leave
jp
int3
popa
fdivl
dec
ret
out
loope
imul
shll
outsb
and
inc
mov
stos
inc
add
push
lret
pop
jg
push
mov
sub
cmp
sbb
lret
in
dec
xor
aad
aaa
or
lea
into
add
pop
adcl
inc
and
jecxz
orb
jbe
hlt
das
in
insb
cmp
fildl
push
rorb
test
mov
rcll
mov
data16
ljmp
pop
pop
es
cmpl
mov
cmp
or
addl
jbe
es
pop
mov
out
stos
mov
lahf
sti
mov
and
dec
and
out
fists
xor
in
into
sti
jge
sbbl
imull
jge
movsb
sbb
loope
cmc
pop
call
lock
int
xchg
test
hlt
xchg
mov
xchg
mov
lds
in
pop
cmpsl
xlat
sar
mov
mov
stc
js
and
addr16
ficoms
dec
or
arpl
fisubs
mov
inc
jmp
push
jge
mov
lret
push
mov
push
dec
mov
mov
fdivrs
jp
pop
out
sub
lods
add
xor
jne
and
cmp
fldenv
inc
fstpt
mov
or
push
adc
cs
jl
push
mov
xchg
xor
adc
jmp
cli
lds
xchg
or
icebp
jb
add
imul
cmpsb
cmc
mov
hlt
jle
cli
stos
and
cmp
mov
jmp
ret
andl
out
push
push
movsl
pop
pop
adc
mov
in
xor
into
insb
mov
ret
cmpsb
add
jecxz
pushf
rdpmc
pop
stos
push
int3
jb
ds
sub
dec
fmuls
jp
out
pop
push
or
insb
iret
mov
das
in
mov
pop
fwait
pop
gs
push
sub
sub
cs
std
cmpsl
dec
jg
inc
repnz
cld
jl
jnp
repz
pop
sbb
push
jle
into
imul
fidivs
push
jecxz
jecxz
adcl
pop
adc
cmp
push
add
in
jp
bound
pop
dec
mov
es
jo
mov
dec
js
xchg
int
push
cs
mov
fadd
addl
mov
sarb
adc
dec
jnp
fstpl
or
dec
push
jae
lcall
add
xor
jae
lds
pop
sbb
pop
pop
test
cltd
pop
add
and
jne
pop
jbe
adc
rorb
sub
adc
xchg
cwtl
push
mov
loop
sti
cwtl
ds
ss
insb
aad
push
push
xchg
push
call
inc
cmpsl
fisubl
fs
push
hlt
inc
pop
rorl
cmp
ds
inc
mov
ficoms
cmp
push
sahf
or
sub
loopne
pop
mov
inc
mov
jmp
adc
lcall
stos
pushf
pop
add
shll
cltd
in
pop
xlat
das
ret
xchg
mov
dec
inc
dec
pushf
mov
adc
cmpsl
fisubs
sub
sub
rcl
mov
imul
and
adc
dec
add
xchg
mov
jb
mov
sub
inc
insl
rolb
das
stc
xchg
sbb
push
xchg
ljmp
or
push
mov
in
jg
ss
clc
push
or
or
pop
roll
popa
push
or
popf
xchg
jbe
xchg
cwtl
jbe
cli
mov
push
data16
mov
pop
loope
push
aad
inc
std
push
and
or
or
sub
inc
jg
sbb
setno
xor
cmc
lds
rclb
mov
push
mov
xor
pop
sbb
jmp
inc
add
pop
pop
adc
outsl
pop
fidivs
xor
ljmp
shll
jno
jo
jecxz
lock
call
adc
mov
fwait
xchg
jo
push
adc
jecxz
aaa
mov
inc
mov
mov
cmp
xchg
dec
xchg
outsl
or
and
lret
cmpsl
mov
test
fstpl
lock
jl
xchg
sbb
mov
add
xchg
imul
cmp
aad
dec
sbb
xor
nop
loope
sti
jle
xchg
imul
cmc
push
subb
lods
call
fnsave
and
push
mov
jmp
sar
xor
int
ss
cmp
inc
jl
testl
mov
minps
push
dec
out
popf
psllq
test
int3
fs
adc
add
pop
pop
iret
mov
mov
loope
mov
leave
cs
add
dec
push
mov
jge
test
inc
sub
or
inc
hlt
add
inc
add
roll
loop
leave
cs
sahf
ds
jae
out
or
xchg
int
gs
cmc
push
xor
scas
or
adc
cmc
popa
jae
xchg
lret
push
gs
std
imul
mov
leave
sub
les
adc
dec
sbb
ljmp
push
fisubrl
mov
gs
mov
mov
insl
dec
and
xor
aas
inc
and
test
sbb
push
pop
jnp
jo
inc
mov
nop
sbbl
movsb
mov
cmpsb
adc
invd
adc
inc
fdivp
mov
imul
push
fs
scas
out
jp
lock
xchg
cmpsl
repnz
out
add
mov
jbe
lcall
cltd
cld
push
ljmp
sub
add
sbb
in
or
pushf
mov
dec
or
pop
lods
mov
dec
cmc
sub
push
cmovle
jp
ss
mov
push
mov
clc
cli
bound
gs
adc
pop
push
aam
sub
inc
jg
daa
dec
ss
push
jl
sahf
sbb
in
iret
pop
or
sbb
sub
jl
jo
pop
cltd
stos
cs
mov
add
lock
sbb
push
iret
adc
mov
add
xor
or
and
fnsave
shrl
or
popa
and
jle
repz
xchg
add
jbe
add
ret
dec
mov
movsl
cmp
pop
scas
jo
mov
movsb
mov
jg
out
rcl
shlb
stc
mov
rcl
orb
inc
cli
std
fwait
adc
fdivrs
inc
inc
push
sbb
xchg
adc
sbb
iret
jle
popf
test
dec
pop
jle
xor
repnz
push
or
sub
mov
jmp
xchg
mov
std
js
mov
add
mov
jae
push
outsl
or
mov
ja
subw
flds
inc
inc
jae
xchg
push
sbb
jge
mov
shrl
or
lcall
dec
repnz
sbb
and
ret
xlat
sub
jo
cmpsl
mov
mov
out
lock
pop
clc
fimull
push
sub
ret
mov
cli
nop
arpl
or
push
int3
and
fcoml
lods
push
bnd
gs
xor
imul
jle
aaa
data16
sub
xchg
ljmp
cmc
idiv
push
cmp
mov
aas
jge
sub
ret
int
scas
lods
subb
cld
push
ror
outsb
nop
mov
dec
mov
lret
mov
push
add
mov
xor
or
sahf
mov
ret
shrb
ret
insb
xlat
mov
adc
shll
sub
push
daa
cmpl
test
bound
jp
mov
sbb
test
inc
test
lcall
adc
aad
cmp
test
out
fsubp
icebp
loop
and
sbb
xchg
ja
stos
jbe
int
add
stos
push
jnp
dec
cmp
insb
lahf
mov
test
and
xchg
sub
loope
sub
pop
xor
sub
sahf
add
insl
mov
insl
dec
sub
inc
fwait
push
mov
dec
sbb
shlb
inc
bound
pop
jns
jecxz
fdivr
mov
sub
pop
addr16
fcoml
scas
push
xor
icebp
iret
in
lods
orb
cmp
dec
mov
sbb
mov
scas
shrb
pop
pop
lock
ret
outsl
pop
popf
out
aad
ret
es
xchg
scas
aas
imulb
push
sbb
hlt
xlat
add
add
add
cs
xchg
sti
sub
inc
imul
mov
test
aad
or
loopne
fisttpll
jo
pop
testb
rcrb
cmp
ljmp
sbb
loop
xor
cmpl
dec
inc
cs
cmp
cmpb
lret
outsb
push
jg
pop
add
cmp
nop
and
jbe
push
iret
ret
lahf
clc
out
inc
adc
mov
sbb
mov
hlt
lahf
fistps
pop
mov
inc
int3
sub
mov
lock
xchg
std
loop
ror
pusha
mov
and
cmp
fwait
out
mov
xor
cmpsb
dec
xchg
adc
test
mov
xor
push
dec
stos
adc
call
adc
aam
and
inc
add
ret
cmpb
rol
cmp
mov
push
fucomip
sbb
out
stos
loopne
dec
insl
sub
jecxz
push
test
das
sub
sub
xor
xchg
lcall
xor
test
test
test
or
cmp
mov
push
shl
andl
push
popa
inc
jmp
xor
push
jbe
xor
push
nop
lcall
mov
imulb
aas
mov
inc
cltd
or
sbb
test
sbb
std
cs
negl
inc
popa
pop
mov
ljmp
mov
lods
xor
push
das
out
ficoml
cmpsl
insl
dec
mov
dec
push
adc
jno
mov
or
jecxz
loopne
pop
dec
iret
ljmp
pop
js
cmpsb
int
jns
enter
stos
mov
inc
repz
ja
inc
sti
insl
and
cmc
jne
mov
pop
mov
out
xor
aad
sbb
jnp
dec
lahf
in
test
dec
idivl
movsb
ds
leave
jbe
pop
adc
or
cmp
fwait
lcall
or
mov
inc
movsl
mov
sbb
push
stc
js
dec
addr16
insb
in
lcall
lcall
insl
xchg
mov
and
xlat
and
inc
cltd
xor
mov
jns
mov
in
rorb
outsl
push
dec
lods
xor
and
insb
mov
mov
xchg
sub
ret
xlat
mov
lea
add
cmpl
mov
push
out
sbb
xlat
jne
mov
and
negb
icebp
sbb
ljmp
lret
adc
sarl
mov
fisttpl
mov
lock
movsl
and
adc
cltd
call
push
lcall
sbb
mov
lds
popf
mov
add
adc
sbb
rolb
idivl
or
sahf
es
lcall
popa
imul
sbb
test
inc
fucom
call
push
leave
iret
inc
lds
sbb
push
pop
cld
cld
notb
sti
xchg
dec
test
setle
push
mov
sti
push
repnz
push
push
mov
daa
daa
sub
insb
push
clc
sub
movsb
push
adcb
jp
sti
mov
and
js
and
fbstp
push
sbb
add
cwtl
xorb
ljmp
inc
test
push
arpl
or
pop
adc
add
es
mov
scas
fs
in
cli
pop
stc
clc
push
adc
dec
xchg
push
ljmp
insl
adc
pop
jecxz
out
cmp
mov
iret
lods
sbbl
xor
xlat
push
cmp
push
push
pop
jecxz
clc
sbb
aaa
loopne
cltd
xchg
adc
addr16
jae
call
xchg
add
loop
aaa
test
mov
popf
cld
iret
mov
sarb
js
cmpsb
or
dec
lea
and
cmp
dec
jecxz
pusha
rcr
and
arpl
sub
ficoms
mov
push
cwtl
rol
fcom
jb
push
or
dec
cmp
add
loope
pusha
add
int3
jbe
orl
jnp
lea
push
jb
inc
mov
loop
mov
cmp
mov
addr16
stos
inc
fidivl
int3
lods
js
push
jbe
adc
addr16
dec
dec
xchg
repz
dec
sub
or
push
in
scas
jmp
push
add
in
mov
push
cmp
ds
xor
xlat
idivl
sbb
mov
test
cmp
out
add
jne
outsb
xchg
jb
mov
out
popa
pop
sahf
push
adcl
rclw
push
push
in
in
xchg
loop
and
or
call
mov
xor
int3
sub
inc
lods
scas
xchg
inc
cmp
ss
push
pop
mov
insb
jns
outsl
inc
fisttpll
lcallw
jne
fs
into
lea
add
jne
rorb
out
xchg
dec
adc
sub
mov
pop
xchg
jmp
lret
mov
inc
cli
inc
mov
fwait
cmpsb
inc
sub
pop
xor
sbb
cmpsl
mov
xchg
inc
popf
mov
mov
mov
faddl
jb
in
or
jmp
pusha
jo
stc
fsubr
dec
pusha
neg
into
dec
adc
ds
pop
out
in
sub
test
outsb
int
adc
mov
bound
push
adc
rcll
inc
pop
pop
jge
shll
mov
insl
hlt
jge
sbb
push
je
lock
popw
push
xor
jle
jne
mov
jmp
xchg
aad
push
sar
or
lret
scas
mov
test
mov
repz
mov
push
imul
int
sub
lds
mov
int
sbb
and
ficoms
mov
jecxz
scas
in
xor
mov
xchg
imul
and
dec
cmp
sub
jno
cltd
out
popf
loopne
or
imul
arpl
mov
push
inc
scas
ds
add
sti
sub
cli
sub
lods
aam
stos
pop
stos
movb
inc
js
cltd
or
into
movsl
and
pushf
jnp
adc
stos
jp
jo
in
add
test
and
repnz
mov
jbe
sub
lods
sbb
mov
into
testb
pusha
push
sub
mov
push
add
outsb
ja
ret
pop
adc
repz
jmp
lahf
push
push
dec
lret
jne
pop
xlat
sbb
mov
jbe
mov
sub
mov
push
movsb
je
cwtl
loope
insl
in
sbb
jno
das
dec
jmp
ljmp
data16
aam
and
repz
in
sarb
negb
mov
and
xchg
popf
sbb
adc
mov
xorl
imul
jne
sbb
jmp
js
js
arpl
daa
stc
push
rol
repnz
rcl
cmp
lret
pop
sub
push
pop
jns
je
adc
jp
ljmp
mov
fs
daa
or
jae
divl
js
cmp
andb
insb
ror
fwait
push
and
xchg
mov
popa
or
das
sub
mov
mov
push
pusha
mov
cwtl
mov
push
fisubrs
xor
aam
and
flds
push
cmpsl
inc
jmp
xor
repz
xchg
mov
loope
ret
pop
arpl
jp
xchg
add
push
sbb
sub
orl
aas
cs
aad
dec
jge
leave
iret
lahf
fisttps
and
hlt
cmp
add
pop
stc
sbb
sti
push
mov
inc
lahf
cmp
xlat
outsb
sub
jle
jbe
adc
repz
xor
mov
pop
aad
and
addr16
dec
lcall
or
pop
or
adc
cmpb
or
pusha
jo
cmpsl
inc
sub
cmp
xchg
inc
repnz
ficompl
fisubs
add
dec
lret
cld
xchg
and
mov
nop
sub
mov
jns
les
repz
mov
je
outsb
das
cmp
ror
iret
jl
iret
data16
out
sbb
sub
pop
jae
bound
ljmp
rcll
in
out
fdivrs
aad
mov
jo
fildl
xor
adc
push
sub
xor
mov
push
sub
or
call
fistpl
in
sarb
dec
push
lods
xchg
pop
test
pop
in
leave
imul
mov
fwait
shlb
mov
xchg
imul
push
movsl
in
mov
or
inc
int3
pop
jne
test
out
clc
fildll
dec
push
lods
stc
aaa
mov
je
mov
push
addr16
scas
mov
push
sub
inc
addb
pop
inc
mov
inc
stos
mov
xchg
mov
inc
cmp
iret
xorb
and
movsb
xor
pop
arpl
xchg
stos
popa
outsl
push
push
bound
fldcw
or
mov
push
sub
cmp
adc
xlat
push
int
in
jo
sub
xchg
lock
shl
pop
pop
rcr
sbb
repnz
xlat
insb
pop
psllq
test
push
les
xchg
std
out
jnp
adc
jp
clc
lret
mov
xchg
icebp
bound
mov
test
mov
sbb
out
mov
sbb
inc
sti
pop
adc
jecxz
aas
int
je
scas
inc
mov
les
inc
push
sbb
jle
fbstp
push
cmc
inc
mov
test
push
sub
out
jb
gs
inc
mov
lds
outsb
adc
cmpsl
cmp
pop
cmp
stos
test
nop
sub
mov
cmpsb
dec
add
adc
rsm
xchg
int
dec
insl
pop
jno
pusha
fwait
es
dec
cmp
inc
and
dec
mov
iret
jo
imul
fwait
xorb
and
mov
cmp
xchg
mov
mov
sub
xchg
leave
out
lea
out
or
idivb
sbb
shr
out
int3
xor
fadds
cltd
scas
and
jns
jge
out
pop
mov
std
mov
in
mov
push
lea
dec
jge
outsb
push
in
push
jg
aad
mov
push
cmpsl
ss
xlat
jge
cs
lcall
scas
ror
inc
mov
push
cltd
fstl
lock
in
in
out
mov
iret
and
xchg
arpl
add
int
or
insl
sbb
jnp
std
fidivrs
mov
mov
lea
adc
js
fisttpll
in
pop
daa
cli
push
xchg
in
cmp
stos
data16
mov
cmp
les
js
inc
stos
jle
popa
mov
mov
sub
inc
sbb
into
mov
inc
bound
ss
scas
jb
cld
jbe
mov
testb
popa
sbb
xlat
nop
xchg
inc
jl
cmpsb
loop
or
mov
push
and
mov
add
sub
push
loop
mov
addr16
mov
sub
xor
ss
test
hlt
fcomi
jno
and
dec
mov
jo
enter
cmp
int3
push
pop
in
mov
pop
dec
xchg
fildl
lods
jle
iret
sbb
push
sbb
imul
cs
outsb
in
pushf
adc
movsl
push
insb
pop
mov
push
imull
dec
mov
inc
insl
lock
add
xor
dec
fistl
ljmp
cmp
xchg
sti
push
mov
mov
jb
jbe
jl
cmp
rcl
rcrl
dec
fstpt
or
testl
xor
or
jns
mov
mov
cmp
xchg
iret
aam
addl
incl
outsl
lods
pop
push
inc
mov
sub
sub
mov
jo
jle
aaa
ret
or
and
xchg
in
clc
cs
xor
inc
sahf
es
xchg
out
dec
xchg
jo
fiaddl
sub
inc
iret
rcr
cwtl
fdivrl
pushf
je
adc
sti
scas
fcoms
push
mov
xchg
mov
inc
sub
push
sbb
movsb
call
xchg
or
sub
das
dec
dec
push
stos
enter
mov
jg
jmp
sti
scas
add
ret
ret
mov
fisubs
test
mov
or
icebp
leave
cmp
lret
bound
push
cmpb
das
cmc
loop
adc
dec
pop
xchg
out
and
cld
jg
xlat
ficoms
adc
jecxz
push
mov
xlat
mov
hlt
mov
add
push
stos
pusha
cmpsl
aas
dec
xor
idivb
and
mulb
adc
das
addr16
call
sub
leave
mulb
call
jno
test
xchg
push
dec
ret
or
clc
int3
xor
mov
push
or
into
loopne
pusha
cld
xchg
push
lock
lock
sub
jl
add
xorps
rcr
dec
dec
sbb
mov
xor
shr
mov
jns
xlat
aas
imul
inc
into
add
leave
or
call
mov
insl
or
add
mov
out
loope
ja
les
mov
mov
scas
and
mov
xchg
ljmp
pusha
push
lods
or
mov
lea
xor
or
pop
add
ret
inc
xor
adc
lret
fildll
or
out
test
add
and
jecxz
push
shl
lret
xor
es
add
pop
jecxz
cmpsb
ja
and
loopne
ljmp
and
and
fsubr
jne
std
inc
mov
ds
test
iret
lods
mov
xchg
divb
ja
sahf
inc
pusha
pop
iret
cmp
xor
icebp
pop
push
mov
cmp
and
fimuls
push
mov
cld
iret
arpl
and
sub
and
lock
jecxz
and
cwtl
push
xorb
pop
fisttpl
js
dec
inc
daa
lret
mov
lea
xor
sti
jae
outsl
dec
xchg
loop
jne
add
mov
movsb
test
sub
mov
xchg
js
mov
ds
add
mov
in
mov
jmp
cltd
arpl
or
js
mov
inc
arpl
in
sub
and
ror
add
sub
pusha
sub
arpl
dec
ja
pop
add
mov
stos
or
cmpsl
sub
lock
or
xor
sahf
push
das
push
mov
imul
in
jg
es
push
cmp
push
sar
mov
mov
hlt
xchg
sahf
jno
aam
dec
pop
lret
aas
enter
adc
cmpsb
ret
lahf
cmp
xchg
and
data16
ret
test
in
jbe
popf
cmpsb
or
repnz
sbb
shlb
jge
hlt
dec
xchg
lods
stos
hlt
push
idivb
out
iret
xchg
mov
sbb
inc
je
in
mov
adc
lahf
inc
dec
test
jge
or
out
mov
inc
xchg
pop
int3
je
pop
imul
cmpsb
sti
jp
scas
sti
cltd
push
jmp
sub
jno
aas
jnp
xor
ja
pop
addr16
aad
pop
fsub
push
inc
shl
movsb
insl
outsb
mov
fsubl
outsb
mov
inc
enter
push
movq
jb
push
std
mov
dec
sbb
adcb
std
ds
scas
imul
imul
les
jno
mov
lea
xor
jnp
fstp
shrb
mov
or
jbe
mov
dec
rorl
out
ds
pop
enter
scas
jmp
out
aam
mov
cmp
pop
shll
mov
cmpsb
adc
mov
adc
or
test
or
xchg
shlb
mov
lds
inc
mov
add
test
fdivl
js
daa
inc
push
into
or
xchg
les
inc
loopne
mov
lcall
loop
lods
es
into
pusha
sub
mov
scas
arpl
xor
lret
pop
mov
ret
xchg
xchg
mov
inc
adc
dec
arpl
push
fcompl
jl
pop
stc
cmpb
lds
jnp
jno
xchg
push
or
xor
ret
in
mov
lock
fistpl
adc
mov
mov
sbb
call
pop
mov
sbb
neg
sbb
add
sarb
lcall
insl
pop
add
int3
xchg
inc
call
inc
mov
cmp
mov
call
test
out
in
ds
add
xchg
pop
js
add
in
jge
sbb
repnz
adc
test
int3
loopne
xor
pop
scas
jns
call
sti
mov
out
mov
dec
jb
adc
jg
lock
xor
sbb
cwtl
clc
cs
outsb
bound
cmp
test
jbe
push
jbe
pusha
sarb
aaa
repnz
lcall
sub
jge
data16
cs
shlb
jle
addr16
shll
in
imul
jle
flds
pop
and
xlat
cmpsl
and
test
popf
jno
int
inc
adc
inc
jmp
pop
xor
lods
xlat
xchg
mov
sub
jmp
shll
popf
outsb
in
sub
xlat
xor
pop
mov
fdivr
lcall
adc
mov
gs
sub
sar
in
cmp
cmp
sub
lods
or
mov
sbb
dec
pusha
dec
pop
cmpsl
fnstcw
outsb
in
xchg
pop
outsb
ret
push
lret
int
test
cmp
pushf
in
mov
xchg
push
cmp
nop
hlt
scas
adc
lcall
or
icebp
pop
icebp
cmp
out
jo
sub
loop
or
xor
cmc
loopne
ja
stos
cmp
into
push
stc
sti
dec
adc
arpl
incb
mov
pop
mull
hlt
test
filds
xor
xchg
stc
xchg
lret
call
cmp
dec
lcall
test
arpl
pop
jns
pop
add
sti
sbb
test
mov
xchg
je
push
cwtl
pushf
das
movsl
int3
stc
in
test
sti
mov
xor
movsb
push
jne
mov
push
add
sahf
fwait
adc
or
notl
push
jge
pop
jnp
insl
int3
mov
jl
sbb
movsl
scas
lock
lods
imul
shll
or
daa
movsb
mov
mov
or
ljmp
push
lods
mov
adc
cmpsl
shrb
mov
leave
mov
pop
xchg
popa
aam
jmp
pop
jl
xor
lods
test
inc
repnz
cmp
mov
in
rcll
sbb
loop
ljmp
xchg
scas
ret
nop
call
enter
loopne
pusha
adc
cmp
mov
push
push
out
pusha
cmc
test
inc
bound
and
inc
fbstp
or
out
jle
inc
sarb
mov
sbb
notl
push
hlt
and
and
mov
jno
adc
dec
and
imul
mov
mov
popf
int3
push
aaa
ficoml
test
stc
mov
lds
pop
jg
pushf
jo
pop
nop
cwtl
in
xor
stos
push
rcrl
mov
test
jo
jmp
inc
loop
sub
adc
mov
das
inc
test
insl
loopne
mov
lock
xchg
shlb
into
mov
mov
ljmp
popa
cwtl
or
cs
jl
ror
idivl
pop
push
fisubrs
je
cwtl
test
shrl
mov
mov
loopne
lahf
daa
jmp
negb
out
and
aaa
lea
push
inc
icebp
inc
push
mov
cmpb
push
into
push
fcomp
cmp
out
rcrb
pop
pop
push
es
push
xor
dec
jmp
dec
inc
lret
dec
xchg
or
cld
pop
and
lods
inc
add
xorl
and
push
gs
push
int
mov
cwtl
popf
pushf
idiv
push
and
loop
pop
push
sbb
test
popf
ret
test
xor
fs
xor
push
ja
test
int
int
movsl
and
aad
in
iret
iret
jg
add
dec
mov
fsubl
sub
cltd
mov
pop
lcall
push
fstl
sub
inc
mov
mov
jle
adc
shl
inc
xchg
fisubs
roll
sbb
shlb
cwtl
mov
aam
mov
sbb
xchg
jecxz
or
les
fsubs
mov
jp
push
jae
lcall
sbb
and
jmp
int3
xor
faddl
or
mov
cld
or
inc
pop
add
xor
out
cmpsb
jmp
ss
mov
pop
daa
sbb
mov
cmp
out
add
inc
iret
pop
cli
clc
xchg
xchg
inc
add
ss
pop
inc
inc
jge
sahf
imul
pop
adc
cmp
jno
dec
ret
xor
lds
jecxz
xchg
cmp
fdiv
shl
out
dec
add
sub
orb
add
push
sub
mov
aas
das
inc
lret
inc
push
jne
add
aaa
ret
cld
cmpb
lea
test
pop
jge
outsl
add
inc
mov
xor
mov
movsl
stos
call
es
sub
push
sbb
ljmp
push
in
outsb
in
pop
add
sti
or
mov
inc
dec
in
int
out
icebp
mov
icebp
xor
rcrl
cmp
push
stc
subb
push
stos
mov
adc
or
mov
repz
cmpsb
leave
adc
lcall
jns
xor
mov
cwtl
xor
push
lret
ljmp
sub
push
push
mov
jmp
into
movsl
into
or
lods
xchg
fdivrl
add
cli
outsl
mov
jle
daa
dec
repnz
add
or
pop
and
js
lods
mov
scas
clc
insb
xchg
add
sub
fwait
jnp
test
pop
push
and
outsb
jb
leave
jbe
ja
add
push
jo
and
cltd
call
add
enter
outsl
mov
pop
sahf
loope
sbbb
pop
sbb
dec
dec
push
pushf
lahf
push
ljmp
mov
or
pop
mov
inc
pop
adc
bound
sub
fistl
xor
in
jp
xchg
popf
nop
jae
push
mov
cmpb
fldt
fistpll
clc
mov
mov
mov
fnstenv
xchg
xchg
sbb
jmp
dec
mov
xchg
mov
dec
lock
jecxz
mov
test
push
jmp
mov
inc
push
push
jge
inc
pop
fisttps
sbb
inc
lahf
mov
rorb
push
add
jecxz
mov
or
int
in
je
insl
mov
ffreep
mov
mov
add
fcomip
aad
mov
mov
inc
lret
out
xchg
push
xor
in
lahf
pusha
mov
mov
addl
xor
lret
shl
mov
ret
ret
addr16
jne
loope
cmc
push
cmpsl
jecxz
xchg
hlt
roll
adc
sub
mov
jecxz
mov
bound
pop
cmp
test
inc
lret
dec
imul
adc
lods
test
sbb
jbe
jle
cmp
jmp
mov
shlb
mov
fisttpl
pop
test
mov
sub
int3
stc
fimull
jae
and
faddl
repz
push
sub
test
orb
lods
push
lods
mov
inc
icebp
imul
sub
leave
adc
stos
cmp
dec
int3
int
fiaddl
stos
loopne
sbb
cmc
mov
xor
mov
in
das
push
cmpsl
mov
je
mov
in
leave
mov
js
jmp
dec
mov
test
ja
das
jmp
sub
jmp
fisubs
aas
add
cs
fistps
ret
pusha
sbb
jb
movl
xor
pop
cmp
mov
cmp
not
add
test
cli
stos
push
repz
popf
jae
inc
in
sbb
mov
shlb
sbb
xor
add
pop
inc
inc
ffreep
dec
mov
pusha
fbstp
inc
sti
popa
fiadds
inc
std
pushf
je
cmp
aas
sbb
mov
shrb
mov
pop
sbb
push
jne
or
out
adc
dec
ljmp
shll
push
loopne
leavew
cli
sub
ss
and
aad
and
leave
es
mov
mov
popf
outsb
and
or
rclb
out
das
orb
in
daa
fwait
pushf
adc
inc
repnz
xor
mov
pop
cwtl
aaa
iret
out
add
lret
sbb
repz
sti
mov
xchg
pop
or
jp
pusha
rclb
jo
loop
mov
push
imul
cmpsb
shlb
inc
xor
and
addr16
enter
stos
test
adc
int
inc
cmp
ljmp
shlb
insl
add
adc
in
cmpsb
cwtl
push
loopne
cmc
icebp
fs
shl
sub
fst
loopne
or
mov
push
je
sbb
addr16
xor
lock
dec
loop
mov
dec
jne
adc
shll
inc
xor
nop
shlb
mov
pop
std
int
xor
rclb
in
mov
shll
adcl
popa
mov
in
inc
in
test
popf
loope
enter
cwtl
ffree
xor
xchg
movsb
sbb
or
xlat
daa
jmp
add
pushf
out
pop
pop
rorl
pusha
ds
ljmp
jnp
push
lfs
test
inc
adc
dec
cmp
push
and
fisubrl
or
ljmp
das
sub
lds
out
mov
repz
add
lret
ds
or
call
mov
mov
xor
push
imul
sub
sarb
sub
pop
push
pop
jae
mov
mov
ja
leave
jmp
flds
mov
sub
imul
data16
push
adc
mov
mov
aaa
lret
xor
push
adc
sahf
js
scas
mov
fst
ljmp
or
or
cltd
inc
mov
sti
sbb
gs
bound
jno
test
or
sbb
dec
mov
es
mov
inc
and
cmp
pop
sub
xor
mov
out
adc
ucomiss
insl
test
aas
jns
test
mov
std
push
jp
dec
mov
stos
cli
jge
jecxz
xlat
lcall
jae
adc
mov
and
inc
xchg
test
inc
rcr
mov
adc
mov
or
jge
fs
pop
cmc
orl
cmp
das
cs
aas
jle
addb
and
call
std
add
mov
mov
lret
les
cmp
fwait
or
shrl
inc
gs
adc
mov
outsl
popf
ret
es
les
das
daa
push
and
or
ror
or
xchg
add
mov
mov
fwait
pop
jmp
aas
jns
sub
sbb
jb
clc
push
aam
pop
xchg
adc
dec
fucom
iret
call
popl
jecxz
fistl
loopne
daa
pop
or
imul
adc
pusha
pop
addl
icebp
mov
xchg
xor
inc
jnp
iret
xchg
push
jae
int3
dec
xor
or
lcall
iret
out
imull
inc
mov
mov
mov
add
cs
cmc
cmp
xor
iret
cmc
jmp
jo
mov
jne
mov
mov
xchg
repz
pop
mov
xlat
imul
push
dec
ljmp
repz
mulb
mov
add
inc
insb
mov
mov
cmp
test
hlt
lret
outsb
or
and
cmp
sbb
mov
jle
lret
out
stc
movsb
out
xchg
lea
scas
test
arpl
rcll
cmpsl
movsl
sbb
stc
in
test
test
add
inc
rcr
sub
push
fimull
pop
jo
sarb
adc
data16
outsl
push
mov
pop
xchg
jne
cmpsl
jg
insb
data16
cmp
lret
xor
clc
ret
stc
mov
jb
mov
dec
xchg
mov
xlat
inc
iret
xchg
jbe
dec
pop
lea
push
xorl
imul
inc
hlt
mov
add
mov
mov
xor
xor
aaa
pop
mov
sbb
push
ret
dec
or
add
push
ficoms
test
xor
popa
test
dec
test
aaa
pop
je
pushf
fldl
push
das
sbb
scas
dec
xor
sbb
sbb
mov
mov
xchg
push
in
out
cwtl
inc
and
mov
push
jne
cmpsl
xor
mov
xlat
mov
mov
pop
cltd
push
ja
rcl
jae
daa
lods
sub
scas
aaa
inc
push
pop
pop
xorl
jge
jae
xor
jo
std
mov
lock
mov
lods
testl
and
jl
push
outsl
mov
aam
data16
fisttps
idivl
dec
shr
in
or
gs
vmwrite
imul
ja
test
jns
push
bswap
pop
outsb
aad
int3
push
push
jae
push
adc
jno
mov
xor
xor
jle
jno
out
pop
inc
cld
arpl
movl
cmp
push
sarb
in
test
int3
jl
lahf
cmpsl
shrb
fcomps
mov
lcall
add
and
in
int
pop
xchg
xchg
mov
movsb
imul
popf
imul
sbb
stos
inc
mov
adc
cli
cltd
aas
scas
mov
push
add
pop
mov
dec
insb
call
inc
dec
adc
cld
fildll
js
mov
adc
cmp
out
cmp
or
insl
filds
lahf
fcoml
stc
icebp
orl
inc
addr16
cwtl
jns
sti
fsubrs
jge
mov
into
shll
outsl
mov
pop
ret
sub
pop
cs
or
ret
sar
mov
es
js
pop
imul
push
nop
mov
pop
adc
and
ja
push
rorb
xor
mov
jg
adc
outsb
dec
adc
daa
icebp
xchg
int
xchg
dec
xchg
lock
push
add
rorb
mov
sahf
sbb
jno
inc
shl
jne
rol
sbb
or
sahf
or
aam
test
aaa
inc
rcl
scas
sbb
sbb
pusha
cltd
pop
and
lds
lahf
lahf
fsts
add
mov
add
cmc
popf
loopne
sbb
sbb
pop
pop
mov
shrb
lds
stos
jne
lahf
arpl
adc
pop
mov
fimull
ljmp
cmp
outsl
fisttps
sti
lods
mov
into
jbe
dec
sarb
push
push
test
aaa
inc
pop
loope
aam
mov
mov
jp
dec
gs
xlat
scas
and
xchg
mov
nop
sbb
rclb
pop
dec
or
out
xchg
sub
les
mov
fbstp
mov
mov
into
stos
nop
out
movsb
jbe
in
push
mov
sbb
rorb
insb
sahf
nop
inc
add
adcl
sbb
dec
in
adc
fs
js,pn
push
popf
and
jno
test
aas
fldenv
mov
adc
das
shrb
shlb
or
mov
rcrb
sbb
and
mov
push
shr
add
add
mov
xlat
mov
sub
mov
xor
cmp
push
stos
ljmp
mov
push
pop
popf
sub
cli
pop
frstor
popf
imulb
cmp
push
push
in
adc
in
sbb
sbb
mov
test
into
adc
mov
jns
or
xchg
js
push
mov
mov
test
pop
in
pop
sti
jmp
clc
jg
ret
ficoms
mov
push
addr16
gs
lods
jns
arpl
jnp
pop
dec
jo
test
out
scas
imul
mov
pop
mov
add
push
add
jno
lret
sub
cmp
pop
sbbb
jae
pushf
orb
adc
fildl
mov
aaa
adc
pop
ss
push
je
jae
push
cli
mov
loopne
adc
shll
iret
ds
add
adc
leave
stos
sub
push
out
inc
mov
cmp
repz
loopne
out
mov
add
pop
xor
enter
mov
mov
insb
push
mov
xchg
rclb
adc
fs
inc
and
outsb
bound
into
and
call
es
sbb
mov
jbe
aad
jae
and
fdivp
addr16
sbb
cmc
xor
xchg
and
test
daa
adc
cmp
push
dec
adc
in
shrb
lods
add
add
aam
xor
scas
xchg
mul
fsubr
sub
xchg
shlb
mov
cmp
and
popf
mov
cltd
sub
push
js
mov
imul
push
fwait
jl
bound
stos
dec
jmp
orl
sub
and
insb
das
push
sub
ret
pop
dec
shll
out
sbb
fldl
inc
jae
push
and
dec
cmp
rol
mov
lea
call
mov
inc
sub
sub
into
xor
xchg
fmul
jb
mov
dec
inc
leave
call
xchg
dec
stos
inc
mov
push
cmp
mov
push
xchg
mov
stos
mov
cld
xchg
lcall
dec
lods
push
push
sti
cmp
scas
push
std
push
gs
pop
dec
imul
push
mov
pop
pop
scas
fwait
pop
repz
jae
sbb
mov
sub
mov
adc
dec
fwait
mov
imul
mov
fisttpl
movntq
out
push
jns
pop
fldl
ljmp
sbb
lock
mull
xchg
iret
inc
test
sub
out
mov
and
jbe
gs
dec
jmp
idivb
push
aam
jnp
cltd
punpcklwd
mov
pop
xor
repz
mov
add
dec
sarl
pop
clc
jmp
jge
in
xchg
clc
ret
hlt
div
push
cmpsb
pop
inc
sub
pop
inc
sub
pop
jne
test
in
iret
rclb
mov
cmc
sbbb
pop
pop
push
mov
inc
js
stc
or
lock
and
lods
scas
jg
push
pop
iret
shlb
fsts
daa
xor
call
mov
addr16
xor
dec
xchg
int3
sub
jo
and
cmc
jno
dec
cmp
push
pusha
dec
and
sub
outsl
cltd
xor
or
sub
xor
idiv
cmp
lea
pop
enter
dec
pop
test
push
inc
mov
fisubrl
fists
test
ja
aaa
jg
dec
in
cmp
sub
cld
loope
mulb
lret
cmp
xor
xor
or
sahf
lahf
out
add
mov
js
jecxz
adc
xchg
cli
or
shr
loope
dec
repz
cmpsb
ficoml
sbbl
mov
xor
mov
std
pusha
movb
mov
ja
cli
sbb
pop
sahf
and
mov
std
lea
hlt
lret
add
push
addr16
stos
repz
test
pop
stos
dec
jno
out
xchg
mulb
js
pop
cmp
and
push
in
mov
loopne
lock
lock
push
dec
inc
mov
sbb
xchg
inc
inc
pop
jns
fisubrl
jne
mov
cmp
inc
in
xchg
fdivrl
lcall
shll
mov
negb
iret
mov
xchg
cli
mov
sar
cmc
ret
dec
add
mov
mov
push
orb
mov
in
in
mov
lods
mov
lcall
gs
xchg
xchg
call
push
pop
repz
mov
movsb
push
sub
hlt
les
test
bound
test
inc
das
add
jno
inc
jg
call
mov
std
test
cmp
inc
sub
and
xchg
jp
sub
pop
and
loopne
ja
cltd
cmpsb
orl
lahf
jbe
mov
or
in
fisubl
jmp
xchg
pop
and
jmp
les
push
mov
pmulhuw
sub
aam
add
pop
xor
and
fldcw
pop
xchg
loope
bound
outsb
scas
idivl
in
into
or
xor
lahf
add
xchg
fsts
xchg
imul
stos
or
loopne
jg
adc
addb
ret
sub
movsb
dec
mov
ror
xchg
sub
adc
fldt
push
std
shr
pop
lahf
add
mov
loope
iret
add
adc
xor
pop
cld
stc
inc
mov
or
or
aaa
mov
flds
test
and
shl
movsb
fdiv
dec
cmp
add
inc
mov
mov
daa
dec
push
fdivrl
push
xchg
cmp
inc
lods
sbb
int3
sub
xor
and
dec
or
leave
jb
or
push
shl
xchg
je
aad
push
or
pop
push
paddb
jo
xchg
in
xor
push
loope
xchg
pop
push
inc
div
int3
aaa
lock
imul
ret
int3
repnz
negl
test
mov
xchg
mov
lods
jg
outsl
and
scas
xor
add
push
aaa
lock
dec
roll
mov
shrl
fwait
iret
or
push
repz
xor
dec
decb
xchg
pushf
pop
repnz
mov
pop
rcrl
xchg
or
push
dec
cmp
dec
dec
adc
dec
add
adc
mov
mov
pop
ljmp
xchg
ds
inc
inc
mov
lock
sub
subb
sbb
out
insb
or
inc
dec
dec
loopne
mov
xor
mov
test
lahf
sub
add
lcall
dec
inc
cmpsl
rorb
and
fwait
pop
jmp
fwait
mov
pop
xor
rcr
xlat
lods
int
mov
nop
inc
xor
cs
adc
jb
add
sbb
test
sbb
sbb
push
enter
and
aad
pushf
mov
aas
popf
test
push
add
cmpsb
xchg
popa
add
lods
jl
mov
std
mov
cmp
add
dec
lods
pop
addr16
aad
das
sbb
dec
in
xchg
inc
and
or
aas
rolb
dec
and
std
jnp
inc
leave
cmp
add
mov
or
cmp
adc
addb
adc
mov
inc
push
lea
movsb
iret
orb
fcomps
test
divl
cli
aad
iret
mov
jecxz
shl
sbb
mov
js
xchg
dec
andb
nop
push
test
leave
sbbb
mov
sub
sub
mov
jl
jae
decb
daa
popa
dec
jbe
enter
sub
movsl
push
pop
pop
js
icebp
push
outsl
dec
pusha
lea
push
inc
xchg
inc
imul
cmpsl
push
lods
jb
addb
loopne
lea
shll
movsl
or
adc
pushf
negl
or
adc
sub
imul
cmp
inc
cmp
xchg
cltd
cmp
jo
test
dec
jo
arpl
inc
pop
sbb
sbb
scas
sbb
or
sub
push
mov
pusha
and
shrl
inc
adc
in
test
or
addr16
outsl
xchg
and
dec
push
insl
ret
nop
and
ja
mov
inc
push
pop
jo
jmp
cmp
icebp
inc
mov
mov
loopne
sbbl
out
es
aam
mov
adc
inc
pushf
shrb
xorl
in
sub
inc
mov
jmp
mov
mov
out
pop
loope
mov
ret
dec
adc
xchg
mov
ja
jecxz
std
inc
and
nop
cmp
mov
std
or
movsl
adcl
push
adcl
inc
out
inc
mov
or
mov
sbb
jno
mov
jg
jnp
hlt
fwait
mov
mov
fs
clc
int3
lods
stos
ret
std
mov
mov
gs
pop
ret
pop
jecxz
dec
add
push
aas
into
stc
lcall
test
inc
pushf
fldenv
mov
push
jbe
call
scas
sbbl
aaa
out
int3
jle
cmpsl
pop
pop
xchg
int3
stos
jmp
aaa
or
inc
test
push
xor
push
and
add
aas
nop
lock
shr
clc
cwtl
lods
pop
pop
and
jecxz
and
or
sub
into
sub
sbb
andb
adc
lock
jo
cmp
daa
mov
in
xlat
addb
shrb
test
cmp
and
xor
lds
dec
jns
mov
lds
dec
das
les
pop
mov
adc
push
dec
cmp
jmp
shl
dec
js
add
adc
jge
lret
push
jmp
xchg
loop
push
pop
movsl
rorl
fs
stos
jg
divb
scas
arpl
in
jl
jp
pop
pop
aas
sbb
sbb
rorl
cmp
xor
mov
js
inc
push
adc
int
mov
mov
stc
fneni(8087
arpl
add
rol
and
mov
sub
mov
aam
pop
fldenv
jl
aad
movsl
and
sbb
jns
inc
scas
aam
mov
pop
sub
loope
pop
aam
dec
push
add
mov
dec
or
test
sub
arpl
movl
int
lret
outsl
insb
aad
cltd
mov
push
adc
inc
cltd
out
pushf
popa
push
xor
jg
out
pop
mov
adc
push
bound
mov
jns
push
sub
lret
pop
int3
cmp
fimull
fldl
pop
dec
inc
popf
xorb
and
mov
popa
pop
adc
push
mov
gs
inc
sbb
fcoms
cmp
xor
jge
std
push
xchg
das
add
lret
xor
insl
iret
push
xor
loope
dec
mov
outsl
pop
xor
test
aam
pop
int
xchg
jbe
push
push
sahf
int
out
shlb
cmpsb
scas
pop
repnz
or
xchg
les
idiv
stos
xor
mov
jbe
lahf
mov
xchg
fistps
mov
xor
sbb
lods
pop
mov
in
push
mov
inc
mov
xchg
pop
adc
push
outsb
lods
sub
ja
push
sub
and
aaa
jmp
int3
mov
push
xor
mov
in
xor
dec
sahf
push
iret
mov
stos
mov
pop
in
sub
xchg
inc
jge
pop
push
in
sbb
push
xchg
setp
stos
and
xchg
jle
mov
mov
popa
shl
mov
lods
scas
fisttpll
subl
and
mov
mov
icebp
fdivs
or
lods
out
xchg
cmp
cmc
pop
jmp
jno
cwtl
ljmp
mov
push
inc
xchg
mov
push
fwait
in
out
cli
sub
xchg
repz
je
sub
rcll
mov
hlt
fadd
ljmp
xchg
sub
adc
cmp
jmp
repz
mov
jp
sub
scas
mov
in
jnp
mov
inc
jl
pop
inc
mov
cmp
mov
or
xor
neg
aad
mov
lret
jb
and
jbe
add
pop
mov
icebp
int3
mul
add
popf
insb
fucomip
jmp
inc
and
repnz
dec
adc
or
mov
xchg
and
pop
andl
mov
inc
mov
and
and
inc
insl
nop
mov
je
fimull
loopne
scas
scas
xchg
xchg
aaa
lret
or
fstps
stos
dec
cmp
mov
ja
fdivrl
add
pop
or
iret
dec
xchg
mov
leave
aas
sbb
ret
mov
or
and
in
push
mov
shrb
pop
gs
mov
lds
std
icebp
cmpsl
out
mov
in
jg
xchg
cmp
loopne
mov
lahf
cmp
push
and
sbb
add
pop
pop
sbbb
add
mov
cmc
mov
jo
les
stos
int
mov
inc
ja
idivb
sub
fs
sub
cs
xchg
inc
clc
sbb
divb
sub
lahf
xor
repz
add
xlat
sbb
fbstp
inc
cld
push
in
mov
mov
mov
inc
in
inc
dec
jp
pop
inc
xorb
scas
call
inc
ret
xchg
sarb
imul
adc
cli
fbstp
sbb
clc
or
dec
mov
jl
leave
cli
mov
xchg
mov
mov
xor
push
push
inc
out
out
jnp
cmp
inc
in
mov
dec
cmp
push
jle
jo
mov
sbb
enter
and
or
ss
shll
mov
push
xchg
stos
mov
divl
push
xchg
or
shll
aad
inc
out
out
mov
pop
xchg
in
popf
sub
inc
cmp
out
adc
int3
add
pop
mov
xchg
inc
das
push
sarb
rolb
cwtl
push
cli
dec
mov
test
xor
dec
mov
mov
xchg
inc
inc
repz
pop
or
adc
ret
xor
pop
mov
sbb
mov
sbb
pop
ret
jp
test
xor
jmp
pop
nop
push
adc
cwtl
mov
mov
inc
ret
xchg
fcoms
jmp
jle
mov
inc
clc
testl
or
imull
push
enter
xchg
or
lahf
les
cld
loopne
stc
outsb
out
pop
pop
lret
jl
loop
out
cmp
mov
test
dec
fistpll
sbb
movnti
imul
jg
jnp
inc
xchg
sbb
mov
ss
mov
in
push
mov
sarb
sbb
imul
or
cmpsl
and
gs
adc
js
imul
out
cmpb
xorl
data16
orl
call
cmp
imul
sbb
lods
pop
adc
sbb
aad
push
mov
sbb
inc
in
stc
jne
mov
jle
stc
mov
aas
lahf
aad
mov
adc
test
orl
inc
push
push
xchg
js
aam
sbb
xchg
cli
sahf
jecxz
negb
dec
movsb
aas
push
or
pop
out
lock
cmp
jb
mov
scas
jmp
pop
leave
inc
or
mov
pop
sarb
rorb
cmc
cmp
xor
popa
push
jmp
inc
bound
insb
fisttpll
cmp
and
jle
or
mov
shlb
in
leave
xor
or
cmp
mov
ret
hlt
cwtl
xor
sbbb
mov
pusha
xor
std
mov
pusha
cmp
jg
loop
hlt
cmp
cmp
or
stos
push
and
mov
pop
outsb
jns
dec
mov
sbb
jle
or
mov
push
pop
hlt
daa
pop
xchg
push
popa
mov
test
rcll
call
cmpb
adc
push
sahf
mov
pop
add
add
or
bnd
cltd
js
jae
test
cmp
mov
xchg
mov
mov
pop
lret
and
loope
outsl
and
nop
jge
mov
xchg
xchg
or
xchg
jnp
mov
push
xchg
imul
cs
jns
mov
push
xor
mov
bound
repnz
mov
xor
mov
mov
cli
adc
nop
dec
push
pop
lods
insl
mov
orl
punpcklwd
xor
aad
in
sbbb
adc
in
out
sub
xchg
rcrl
mov
loopne
lcall
sub
enter
mov
ret
xchg
pop
ja
insl
insb
sbb
add
pop
cwtl
cltd
clc
rclb
xchg
adc
int
jb
dec
push
fsubrl
inc
mov
aad
pop
mov
lea
shlb
pop
xchg
pop
push
scas
mov
inc
notl
push
mov
mov
movb
int3
mov
push
jns
jecxz
mov
in
sbb
insb
std
pop
shrl
mov
cmp
mov
fildll
jecxz
xchg
mov
outsb
lret
dec
cmp
xor
and
sub
cltd
mov
scas
pop
mov
movl
inc
lods
add
jmp
mov
pop
aam
push
adc
es
sarb
std
xchg
ljmp
and
ret
xchg
pop
and
add
stc
pop
mov
push
push
aam
rorl
cwtl
pop
rorl
aas
fnstsw
push
ja
pop
or
and
rorl
mov
add
push
inc
jg
movsb
sub
add
es
aad
cld
xor
mov
dec
push
repnz
sbb
sbb
pop
les
adc
xchg
and
movsb
mov
push
iret
xchg
inc
add
leave
outsl
mov
xchg
iret
pop
or
iret
mov
pop
xchg
ret
sub
clc
outsb
test
shl
outsl
daa
or
fs
fdivr
mov
int3
daa
and
jecxz
dec
pop
pop
sub
dec
adc
inc
ja
or
sbb
loopne
imul
mov
cmp
sub
xor
inc
adcb
dec
shlb
pop
sub
fldl
andb
pop
cmpsb
dec
pop
mov
je
mov
mov
rcr
mov
inc
data16
daa
mov
ljmp
push
orl
cwtl
enter
mov
pusha
sbb
sbb
sub
js
pop
or
leave
fiaddl
cltd
add
xchg
sub
and
jne
sub
daa
or
movl
jo
out
xor
mov
in
push
jmp
lods
cmp
xor
pop
mov
in
lock
sbb
xchg
fsts
in
cmp
push
cmc
dec
adc
inc
ret
pop
sub
mov
iret
dec
dec
sub
bound
leave
dec
repnz
lock
xchg
push
mov
mov
xor
xchg
push
fs
sbb
pop
adc
sbb
fcompl
pop
jns
pop
jle
dec
aad
ljmp
xchg
sub
push
pop
in
add
in
stc
jp
jo
or
mov
repnz
imul
sub
inc
int
push
stos
inc
sbb
sbb
dec
fwait
lret
or
aas
mov
fstpl
xchg
dec
lret
pop
xchg
lea
inc
iret
loopne
mov
dec
fwait
repnz
mov
adc
mov
jmp
fiadds
mov
push
pop
sar
pop
cltd
push
cmp
pop
mov
push
std
aas
xchg
test
cltd
dec
frstor
push
xchg
jecxz
cwtl
add
and
call
aaa
aam
dec
adc
sbb
stc
aad
cmp
dec
test
dec
cmc
cld
rcrb
imul
scas
or
std
enter
mov
iret
adc
in
in
mov
outsb
stc
push
mov
in
mov
jp
in
cmp
mov
push
pop
dec
pop
icebp
push
mov
push
push
adc
or
dec
les
ljmp
aaa
pop
in
mov
aas
imul
rcrl
xor
mov
sti
mov
scas
xor
sbb
fldl
std
jno
dec
out
mov
sub
lahf
adc
ja
and
mov
sbb
xor
sti
or
xlat
jbe
cmp
stos
cmp
cmp
inc
adc
or
pop
dec
cmc
daa
shrl
cmp
fisubl
or
test
enter
js
lock
cld
mov
push
push
pop
arpl
mov
inc
dec
pop
ja
or
lcall
repnz
pop
and
aad
hlt
ss
pop
arpl
push
mov
pop
jmp
mov
into
adcl
or
push
test
push
leavew
jp
scas
jecxz
sbb
mov
pusha
call
sbb
xchg
test
pop
xor
mov
mov
push
cmp
mov
pushf
popa
popf
fs
mov
nop
popf
int3
mov
cltd
lret
mov
rorb
cmc
loop
mov
push
sub
inc
push
jae
push
adc
inc
mov
popl
mov
jecxz
clc
test
xor
dec
adc
mov
lret
push
imul
xchg
push
push
insb
adc
cs
jle
or
or
add
ljmp
ficomps
hlt
mov
popa
or
jnp,pt
out
push
sub
jle
sub
movsl
aas
pop
inc
jo
insb
jmp
andb
jo
lret
scas
pop
and
gs
jno
push
mov
mov
cmc
or
lahf
push
adc
ret
xor
ss
inc
pop
mov
mov
add
std
repz
jmp
es
cltd
stos
and
dec
addr16
sub
push
jbe
pop
mov
nop
dec
pop
call
xchg
mov
es
and
cmpl
fucomi
aaa
inc
test
mov
mov
pusha
add
xor
jg
xlat
jl
add
dec
jp
je
dec
xor
or
mov
ljmp
cmc
call
cld
loope
pusha
inc
std
aam
hlt
jo
jmp
jne
adc
sub
cmp
adc
cld
out
int
xchg
inc
xor
ja,pt
mov
and
mov
rorl
xchg
or
gs
repnz
mov
adc
jg
ja
add
pop
add
insb
out
push
scas
enter
inc
cmp
ds
sbb
fldenv
pop
fldl
jb
push
lahf
xchg
notb
in
push
repz
and
or
pop
xor
adc
outsl
cmpsb
or
mov
mov
and
pop
cmpsl
roll
aaa
cmpsl
jns
out
jbe
sub
cli
es
jb
and
mov
push
dec
cmc
sahf
xor
cmp
fldt
jl
pop
jae
jno
pop
inc
movsb
lcall
dec
lahf
sbb
jb
mov
rclb
bound
jecxz
mov
inc
je
leave
cld
in
fists
push
rcrb
clc
cmp
out
popf
test
ja
std
push
adc
mov
shrl
jle
sbb
and
dec
jns
add
sarl
js
sahf
xchg
sub
jns
jmp
inc
xchg
bound
and
into
push
mov
dec
je
dec
pop
add
fldenv
addb
loope
xchg
inc
mov
cs
pop
ret
int
out
movsb
je
sbb
adc
cmc
add
addr16
std
leave
jmp
lret
jne
rolb
scas
xor
data16
enter
mov
and
mov
test
stos
add
or
add
xor
nop
cmp
outsb
repnz
xor
and
pop
xor
insl
shlb
push
shll
xor
xor
in
dec
pop
jp
jo
aaa
repz
es
int
stos
scas
mov
loopne
and
sub
repz
adc
mov
mov
sub
pushf
xor
dec
pop
cmp
jmp
outsb
enter
sub
inc
rcr
jmp
das
sarl
xor
cmp
jecxz
add
mov
mov
push
stos
shlb
lea
mov
dec
sahf
or
xor
scas
fstps
or
sbb
xchg
sbb
and
push
lock
adc
test
lea
je
push
or
int
pop
mov
cmp
fistl
fxch
stos
and
push
inc
inc
sti
adc
imul
dec
mov
outsb
mov
or
inc
and
fbstp
pop
xchg
sub
lods
xlat
mov
dec
jmp
testb
js
or
mov
cmpsb
mov
ss
add
js
mov
js
xchg
imul
mov
lods
xor
insl
adc
loope
xor
sub
sar
cmp
add
inc
inc
subl
pop
sahf
les
xchg
xchg
out
jb
test
mov
inc
inc
int
push
out
mov
pop
iret
outsl
cltd
inc
or
xchg
nop
xchg
mov
and
inc
nop
add
sahf
movsl
scas
push
lahf
sahf
hlt
and
jmp
fsubl
push
push
stos
sub
dec
push
mov
sub
cmp
add
sbb
stc
mov
pop
jge
cmp
ja
sarl
mov
push
scas
add
mov
pusha
je
insb
dec
mov
mov
mov
adc
inc
aad
jbe
mov
add
stos
mov
mov
jnp
out
mov
stos
addr16
cmp
jne
adc
or
dec
xor
add
add
popf
push
pop
fs
enter
out
sti
xchg
nop
inc
or
mov
jge
adc
push
fcmovu
mov
pop
mov
jmp
sti
outsb
or
jb
dec
les
fisubl
test
pop
repz
scas
mov
lock
mov
jno
mov
lahf
cmc
xchg
xor
jp
ds
pop
or
xchg
jmp
xchg
in
das
mov
negl
inc
push
mov
or
rcrb
sub
pop
jl
outsl
outsl
inc
inc
outsb
jmp
scas
xchg
pop
or
dec
push
adc
lock
addr16
imul
jg
cmc
and
int
sbbl
gs
in
xchg
aam
bound
pop
test
int3
or
mulb
mov
mov
xor
pop
dec
ja
xor
rorl
inc
lret
pop
push
lods
cmp
jg
cli
pop
inc
push
xchg
adc
sub
fs
inc
push
je
bound
in
mov
xacquire
insl
pushf
test
jge
aas
mov
sarb
shrl
mov
dec
sbb
jnp
jecxz
std
jo
or
push
loope
das
cmpsl
jo
movsb
stc
mov
iret
pop
fbstp
jge
mov
fists
lcall
popf
lods
bound
das
cld
pusha
xchg
jae
outsl
test
pop
imul
clc
mov
cmp
pushf
push
pop
mov
cmc
test
adc
out
call
push
xchg
les
in
cmp
js
fwait
pop
lret
std
int3
decb
in
inc
mov
es
jb
mov
add
add
ds
sub
enter
shlb
sub
and
xchg
outsl
test
ljmp
sub
mov
pop
int
outsl
xchg
lcall
inc
mov
js
pop
jp
fsts
stos
mov
inc
adc
cld
ja
stos
ror
sbb
sub
xor
and
sahf
pop
cmp
loopne
adc
lret
or
aad
push
mov
mov
movsb
lods
into
aaa
cld
addr16
shl
mov
ucomiss
in
xor
mov
ror
jno
fsubrl
mov
ficomps
aam
xor
inc
pop
ja
xchg
pop
negb
adc
pop
cmp
repz
clc
inc
test
std
outsl
outsb
dec
pop
jbe
sub
cwtl
rclb
mov
mov
ss
mov
jno
sbb
into
into
pop
add
imul
push
int
fdivrl
icebp
xchg
in
loopne
aam
repnz
dec
jae
push
int
in
loope
test
out
adc
xchg
inc
mov
inc
jmp
mov
pop
daa
mull
lods
fsubs
js
stc
sbb
inc
arpl
cmpsb
fbld
sbb
add
xorl
add
lret
adc
dec
pop
jecxz
xorl
xchg
jno
rcr
sub
mov
ja
cmp
popa
jo
std
call
imul
mov
arpl
mov
mov
movsl
jecxz
out
jns
roll
sub
dec
das
adc
addr16
or
mov
fldcw
xor
subl
adc
xor
xchg
adc
sbb
addl
push
mov
or
xlat
nop
cld
insl
out
xor
and
xchg
pop
ret
jge
mov
adc
fldl
stos
insb
mov
pop
mov
outsl
and
jmp
loope
xlat
loopne
adc
push
dec
in
mov
jne
insb
push
in
repnz
and
lock
rcrb
xor
fwait
add
int
push
scas
push
popa
in
cmp
mov
sbb
cmp
mov
rolb
out
icebp
jno
mov
out
pop
pop
xorl
ret
sub
mov
xor
jl
setae
imul
pop
jle
scas
push
sti
jcxz
sub
mov
cmp
dec
inc
test
add
fsubl
sbb
inc
lret
lea
inc
sbb
movsb
test
push
xor
int3
fdivs
xchg
into
push
cmp
xchg
jp
daa
imul
xlat
shrl
mov
cltd
lods
sbb
pop
adc
jge
nop
push
cltd
and
sub
dec
iret
popf
iret
mov
lods
into
adc
outsl
xlat
or
add
cmp
popf
push
sub
push
jmp
adc
xor
cwtl
mov
add
test
add
ds
sbb
inc
and
push
enter
arpl
jns
dec
push
add
aam
adc
adc
pop
xor
jge
jmp
lret
rorb
movsb
mov
xor
or
aam
lods
push
cmp
outsb
test
fs
mov
nop
fsts
lea
push
es
daa
add
lahf
stos
scas
cs
mov
mov
adc
sub
push
push
jle
in
jge
mov
mov
fadds
int
in
jae
or
mov
xor
insl
aad
lret
into
daa
pop
jne
xchg
outsl
insl
fwait
rolb
aaa
das
add
movsl
mov
stc
pop
dec
pop
movsl
inc
out
dec
mov
scas
mov
pusha
pop
in
insl
mov
inc
dec
out
out
pop
xor
mov
cltd
or
gs
mov
ss
xchg
push
stc
cli
sbb
mov
jb
inc
clc
push
mov
and
repnz
decl
sbb
iret
mov
int3
es
insl
pusha
push
aam
and
das
and
mov
sbb
jg
clc
repz
loop
xor
ljmp
or
cmpsl
mov
test
add
and
movsb
ss
sub
or
loop
mov
fsubr
or
sub
pop
rcll
xchg
mov
add
adc
lcall
repz
and
stos
fwait
lahf
sub
fisubrl
orl
dec
dec
arpl
movsb
sbb
mov
pop
pop
and
jge
sub
sbb
push
lock
loopne
push
stos
xchg
inc
mov
sbbl
subb
mov
or
mov
xchg
jl
sub
fldl
xchg
in
test
or
outsb
sbb
jge
and
outsl
je
jp
cmc
cmpsb
pop
xchg
loopne
adcb
push
idivl
pop
out
mov
insl
dec
sti
fildl
sub
jmp
fsin
lcall
push
mov
adc
negl
insl
pop
mov
xlat
xchg
inc
xlat
jl
xchg
jno
shr
ja
jb
or
fcoms
mov
mov
cltd
dec
dec
lds
cld
fsubrs
les
stos
sbbl
rolb
sub
loop
xchg
mov
push
jbe
popf
ror
inc
sub
push
dec
xor
xchg
mov
fmull
and
mov
adc
pop
loope
xor
iret
lods
sub
sbb
in
mov
leave
mov
xchg
dec
scas
inc
imul
jp
mov
sub
imul
lret
roll
sub
sahf
dec
add
pop
dec
mov
hlt
fimull
cs
sub
push
aam
lret
or
int3
test
imul
cmpsb
push
mov
cmp
xor
sub
or
mov
jbe
arpl
aam
call
lahf
iret
ds
repnz
fldt
mov
fistps
movsl
cmp
xor
stc
aaa
fwait
loop
sti
mov
jo
scas
and
jbe
xor
adc
dec
push
mov
in
sar
jl
mov
xchg
or
pop
or
stos
std
cmp
mov
in
out
adc
cltd
ljmp
repz
and
faddl
mov
pop
fld
push
push
sbb
add
mov
mov
pushf
popf
cli
jne
push
in
fdivr
daa
sub
or
mov
jnp
xchg
dec
push
xchg
roll
inc
in
jmp
in
push
dec
mov
cmp
jg
aad
mov
xor
and
adc
inc
sbb
or
xchg
pushf
jno
popa
imul
repz
addl
xor
inc
and
xor
les
stc
mov
in
outsb
es
sub
into
mov
cmpsb
mov
call
hlt
adc
out
cli
lret
loop
pop
dec
fiaddl
out
jecxz
adc
inc
call
jp
pop
fucomi
loope
or
movsb
adc
aas
testb
lret
push
jge
or
pop
out
pushf
jae
sbb
mov
hlt
in
mov
cmc
fidivrl
mov
mov
les
mov
fnstenv
popa
repz
aas
cmp
xor
std
push
lret
cld
in
fnsave
xchg
decb
pushf
inc
cli
rcrb
mov
xor
sti
inc
pushf
jne
or
mov
jle
cmp
test
mov
jae
adc
push
add
pop
test
jae
xchg
mov
sahf
gs
lods
lahf
cmp
fs
pop
mov
scas
call
cmpl
in
test
sbb
jecxz
inc
adc
lcall
push
push
gs
mov
stc
fisubs
andb
add
lcall
adc
cld
dec
int
rcrl
push
pop
jae
sbb
and
sahf
test
jmp
xchg
and
dec
jl
and
jnp
mov
mov
pop
mov
xor
inc
daa
outsl
push
inc
aad
fucomi
inc
nop
test
cmpsb
pop
cmpsb
mov
xchg
icebp
sub
adc
jno
push
mov
fcmovnu
dec
xor
sub
jp
cmp
pop
add
fs
cmp
fldenv
stos
push
lods
loopne
jne
and
mov
inc
cli
push
and
jp
add
pop
cmc
ss
into
or
jmp
push
add
adc
dec
scas
mov
and
in
mov
sub
popa
movsl
mov
adc
xchg
icebp
xor
mov
add
or
lods
lret
repnz
push
or
out
cmpsb
jg
cmp
mov
and
insb
aad
arpl
cmpsb
sub
in
jmp
out
pushf
cmp
repnz
test
add
insl
cmp
mov
pop
orb
popa
push
cmp
pop
orl
xchg
sbb
mov
arpl
data16
clc
pop
mov
jno
sub
lret
rcrb
aad
add
stos
pop
adc
add
push
push
data16
push
inc
pop
sbb
pushf
std
clc
adc
fisubl
xchg
add
ja
mov
les
mov
movsb
cwtl
push
mov
cmp
imul
cli
fists
mov
inc
xchg
xchg
fnstenv
cmp
testl
pop
in
imul
mov
and
or
int
push
and
adc
das
je
dec
cs
xchg
ds
xchg
lock
xor
imul
jne
and
sub
cs
aaa
loope
popa
shlb
mov
loope
popf
xor
inc
jae
mov
rcrb
mov
in
aas
or
inc
outsl
sti
fisttpl
shrl
or
in
pop
mov
pop
xchg
out
imul
lods
push
outsl
stc
dec
pop
movsb
out
sub
add
pop
inc
push
sub
sti
xchg
push
cmp
ror
fistps
sub
pop
imul
push
mov
std
dec
insb
xor
jo
mov
pop
pop
fistpll
int
sbb
pop
idivl
xor
mov
mov
and
out
jecxz
cmp
jno
sbb
lods
jns
aaa
mov
mov
roll
lahf
enter
add
add
jo
outsb
lret
out
xor
jp
mov
push
pop
xor
jp
cmpsb
in
dec
xor
out
mov
cmpsb
push
push
lods
cmpsl
mov
xchg
xor
mov
dec
push
sbb
or
or
mov
divl
add
dec
add
sub
jg
sbb
mov
push
stc
je
push
orb
xchg
int3
cmp
adc
lret
mov
fidivl
movsl
mov
lds
xorb
jmp
lcall
adc
inc
jns
mov
adc
adc
cli
xor
daa
mov
xchg
pop
sbb
mov
daa
lcall
inc
xor
je
cmp
cmpb
push
roll
leave
xlat
out
pop
pusha
and
lock
cld
lods
and
test
jb
push
cmpsl
sub
pop
inc
nop
sub
mov
jmp
dec
mov
loope
pop
aas
aaa
enter
js
imul
fstps
and
xchg
sbb
sahf
and
ja
mov
fwait
push
sub
add
xchg
mov
xchg
shrl
adc
roll
cmp
out
mov
xlat
pusha
xor
popf
insb
inc
pushf
xchg
add
int3
push
push
aad
clc
lret
out
inc
jno
push
int3
psllq
inc
sahf
add
imul
aam
aas
je,pt
cmp
pop
xlat
jl
lods
xchg
sub
mov
dec
or
in
jne
and
and
repz
negl
xchg
inc
loopne
fsubrs
lods
lahf
lods
jne
popf
ret
xchg
and
scas
mov
cmp
nop
xchg
cmp
lock
mov
add
pop
cmpsl
adc
stc
fnstsw
lds
loope
mov
jmp
cmp
roll
xor
shrl
dec
loopne
in
sub
pop
testl
and
lea
mov
sbb
add
inc
fsubrs
mov
pop
jo
icebp
inc
lahf
sbb
add
xor
cld
pop
insl
imul
icebp
mov
cmpsb
pop
push
aad
push
fsubrl
xor
push
cmp
mov
lea
or
push
repnz
sbb
mov
lcall
sub
icebp
test
ds
xor
xor
xchg
jg
bnd
cli
xor
loop
add
in
cmp
xchg
inc
mov
mov
jp
out
xchg
adc
call
adc
int3
popf
push
jmp
cmp
xlat
andl
testb
inc
pop
jbe
mov
fcoml
stc
cs
jb
les
pop
jno
and
sub
lods
fwait
push
mov
in
ljmp
mov
adc
loope
bound
sbb
idivl
push
lret
ret
fwait
std
add
xchg
iret
jne
pop
xchg
mov
icebp
mov
ss
mov
add
push
xchg
into
inc
pop
sub
adc
push
loope
sub
iret
or
fwait
mov
jge
mov
rolb
lret
push
pop
pusha
fwait
outsl
push
jnp
in
loop
jp
dec
inc
push
movsb
lods
add
aam
pop
sub
push
pushf
mov
or
movsl
xchg
inc
sbb
mov
xor
in
and
stc
lds
add
pop
adcl
mov
push
aas
outsb
ret
sub
jno
movsl
mov
mov
std
push
jp
daa
popf
push
jne,pn
ja
mov
add
sbb
pop
mov
test
sbb
sti
push
adc
fwait
pop
shrb
outsb
shl
cmp
mov
fs
jg
arpl
pop
imul
leave
lcall
cmp
sbb
lcall
xorb
out
inc
orl
jo
dec
pop
shlb
add
lock
pop
in
push
in
sub
push
cli
mov
and
xchg
mov
es
ja
inc
pop
sub
mov
jns
jge
daa
mov
and
mov
cltd
dec
lods
mov
sub
shlb
pusha
jnp
fidivl
cli
outsb
xchg
in
mov
dec
in
xchg
jb
rorb
pop
dec
stc
fdivrp
imull
lret
sahf
jo
fsubs
loope
aad
daa
inc
nop
push
xor
pop
add
cmp
lods
dec
jmp
push
icebp
inc
xchg
push
sub
mov
into
iret
push
test
and
dec
repnz
test
les
add
fmuls
int
sub
xor
pop
xchg
hlt
out
sub
mov
mov
shrb
jge
out
jo
cwtl
cmp
lods
jne
xchg
and
pop
dec
sbb
fmull
movsl
fidivs
dec
sbb
aas
inc
sbb
ja
push
test
fimull
mov
lcall
je
mov
inc
or
stc
cmpsb
or
and
pop
int3
jnp
and
inc
or
test
testb
pop
add
xchg
js
jecxz
mov
inc
daa
mov
adc
jo
mov
dec
frstor
mov
cmp
hlt
mull
xor
cld
int3
jno
xchg
jno
and
sbb
scas
mov
iret
jbe
roll
outsl
sahf
jl
mov
test
sbb
out
incl
in
cmp
loopnew
dec
jle
adc
push
mov
xchg
rcrl
pop
sub
or
imul
jle
std
fbld
fdivrl
ret
adc
xchg
pop
mov
lret
loop
jb
mov
fnstenv
hlt
mov
mov
test
xor
inc
inc
cmpsb
cmp
pop
out
dec
popa
ret
mov
es
jbe
out
arpl
js
jecxz
inc
mov
dec
or
dec
mov
jbe
and
movsb
iret
lods
rolb
sub
fstpt
jmp
loopne
jb
adc
lea
jnp
pop
scas
push
mov
xchg
sahf
pop
jns
xor
ret
and
rorl
sub
cmp
pop
and
cmp
sub
out
cmc
sbb
sahf
add
sub
js
addr16
push
sbb
mov
ficomps
out
out
push
aam
les
cs
jle
push
pop
sahf
std
push
xchg
mov
xchg
testl
xchg
addr16
inc
mov
push
adc
jmp
ljmp
and
das
imul
stos
cmp
xchg
stc
xlat
adc
jmp
insl
les
xor
push
cli
addr16
in
out
adc
jg
xor
adc
add
sub
cmp
add
cmp
outsl
adc
push
stc
and
jl
cld
push
mov
pop
jb
push
jle
mov
push
lret
jle
push
out
shlb
mov
sbb
cmp
lahf
cmp
xor
cmpsb
fisubs
dec
sbb
scas
xor
out
xor
test
iret
outsb
dec
lcall
mov
dec
imul
lret
sti
imul
roll
test
or
adc
adc
stos
ljmp
mov
jns
mov
push
xchg
scas
mov
mov
fs
sub
imul
bound
mov
inc
xchg
cwtl
xchg
je
adc
sti
lcall
gs
cmp
mov
filds
sub
add
mov
dec
dec
and
jae
pop
inc
sub
mov
test
xchg
xor
and
jecxz
lds
test
mov
fisttpl
cs
add
xlat
dec
lods
addr16
mov
mov
push
fwait
xchg
lods
imul
dec
nop
and
test
test
xlat
mov
push
fsubrp
das
cmpl
aaa
std
roll
ret
js
adc
into
or
adc
cmp
push
jns
fs
sbb
pop
xchg
inc
out
dec
stc
mov
jmp
roll
dec
xchg
cmpsl
int
cli
adc
testb
pop
add
call
inc
adc
hlt
ljmp
xchg
jle
xlat
mov
xchg
cmpl
popa
cmp
imul
repnz
pcmpeqd
es
data16
adc
stos
mov
lea
loope
hlt
mov
bound
shrl
ljmp
rcrb
or
sahf
ds
pop
dec
dec
scas
das
mov
mov
lods
inc
je
shld
aas
icebp
and
cmp
cmp
cs
fldt
popa
adc
jmp
cld
jae
mov
cwtl
lds
lods
inc
pop
xchg
sti
imul
sbb
lcall
mov
jge
dec
addl
in
mov
mov
add
int
inc
mov
stos
add
cmp
nop
loop
adc
add
sub
int
cmp
cld
fldenv
add
mov
adc
dec
cld
sub
xor
xchg
sub
and
cli
ss
lahf
aad
lret
mov
loop
ret
jo
mov
push
inc
or
xlat
sbb
xor
dec
movsb
xor
mov
bound
or
repnz
sub
jbe
adc
pop
sub
add
inc
pop
incb
pop
add
add
mov
repz
xor
prefetchnta
push
lock
jg
pushf
pop
into
push
lods
sub
fisttps
seto
xchg
mov
xor
mov
in
mov
add
mov
push
mov
or
dec
out
sbb
sbb
lret
jle
and
add
cmp
insb
dec
pop
fdivrl
mov
push
push
dec
pop
nop
loopne
arpl
cmp
push
nop
test
inc
mov
or
inc
out
push
aam
ss
xchg
cmp
flds
addr16
arpl
lds
add
add
cmp
adc
nop
jne
lds
pop
mov
xchg
mov
sti
push
cltd
aam
dec
adc
jnp
jle
pop
lret
pop
push
add
das
or
in
pop
lahf
out
xchg
ds
add
mov
gs
adc
mov
orb
mov
jno
xchg
lret
arpl
andb
mov
fucom
scas
xor
dec
lret
jo
je
aad
cmc
mov
mov
add
frstor
notb
xor
loop
inc
js
addr16
and
stc
cmp
in
push
aaa
aad
popa
lds
or
add
shrb
mov
sbb
in
fimuls
jl
mov
cltd
dec
jbe
mov
lret
dec
pop
lcall
push
inc
jle
cmp
or
out
sub
test
aas
popf
jns
adc
push
insb
dec
repnz
jno
mov
mov
jecxz
or
out
or
mov
xchg
cmp
mov
or
in
inc
or
out
jmp
out
in
dec
xor
xchg
shll
mov
push
mov
dec
xchg
fimull
cwtl
inc
cmp
push
scas
push
cmp
test
cmp
inc
push
sbb
push
enter
cmp
and
xor
sub
jmp
and
dec
jns
fdivs
int
test
xchg
popa
push
sahf
cmp
pop
jne
push
mov
out
pop
lds
ds
mov
push
mov
xor
add
stos
mov
mov
daa
xor
push
insb
insl
mov
jl
ret
push
loop
pop
pop
mov
mov
pop
cltd
sbb
into
cld
pop
dec
inc
sahf
test
outsl
jge
shlb
sahf
jge
sub
cmp
shrb
pop
xor
aam
imul
dec
mov
lret
repz
jmp
mov
jno
mov
xor
jns
mov
and
xchg
out
pusha
arpl
cmp
pop
popa
popa
jne
daa
or
jb
xchg
mov
push
fdivrl
mov
imul
jb
push
xchg
pop
pop
orl
insl
add
cmp
stos
xor
jp
insl
mov
mov
adc
lret
mov
daa
jp
rorl
mov
dec
hlt
lock
cmc
fiadds
popa
shlb
fimull
shll
fwait
cmpb
cwtl
out
cmpsl
inc
xor
sub
mov
mov
jecxz
fldt
pop
outsb
dec
out
xchg
imul
pop
outsl
loop
xlat
inc
jbe
mov
sbb
jp
int
mov
or
lahf
xchg
stos
fwait
jne
out
pop
adc
sti
mov
xchg
fistpll
xchg
xchg
cmp
inc
adc
sbb
jne
mov
sbbb
imul
shrl
int3
mov
jbe
xchg
mov
cmp
cmpsb
or
enter
cmpsl
popa
ret
out
adc
fimull
mov
or
inc
in
push
and
ja
pop
jns
xlat
mov
sub
fdivp
aas
adc
or
mov
repz
mov
ja
sub
or
icebp
mov
jno
outsl
or
and
dec
cmpsb
in
mov
aas
sub
pop
sub
out
ficoml
mov
outsl
fwait
ss
in
xor
lods
cmc
push
lods
lods
xchg
test
xorb
in
sbb
mov
cmp
shlb
push
adc
sti
mov
jne
dec
mov
cmp
enter
aam
lea
fisubrs
xchg
push
fisttpll
mov
add
rol
hlt
push
xchg
and
fldl
aam
xorl
add
inc
cmpsw
dec
jbe
out
add
test
outsb
mov
add
cli
xor
in
adc
dec
test
jge
bound
cmpsb
imul
into
jbe
mov
or
sbb
sbb
pop
jl
cmc
inc
or
or
adc
or
mov
xchg
pop
xlat
lods
shlb
cltd
aaa
rclb
int
daa
jecxz
addb
orb
imul
mov
stos
mov
daa
outsl
jle
fwait
dec
inc
pop
dec
daa
mov
or
jnp
pop
and
xor
ror
test
jae
js
sbb
mov
gs
push
sub
imul
cmp
add
lret
mov
xor
stos
push
or
dec
pop
stos
cmp
mov
xchg
add
out
add
adc
jmp
inc
mov
push
out
fldcw
fistpl
inc
jb
mov
pusha
mov
jns
xchg
fimull
inc
and
stos
mov
in
sahf
cli
sti
inc
test
xor
movl
stos
dec
cmpsl
mov
in
fwait
in
pop
dec
sub
xchg
ds
mov
xlat
and
dec
pushf
shl
movsb
cmp
adc
insl
cmpsb
sub
push
shlb
xor
xor
sub
mov
cld
roll
in
lahf
inc
jmp
xor
push
enter
mov
ja
mov
fwait
push
ret
inc
iret
jle
lret
push
mov
push
inc
push
sub
pusha
or
mov
pop
pop
into
pop
xchg
mov
jns
mov
sarb
adcb
adc
sub
and
jge
xor
xchg
mov
lcall
subl
jne
fildll
out
jb,pn
in
mov
lods
shll
sub
daa
add
push
cmp
push
rorb
in
test
loop
outsl
repz
inc
mov
in
push
adcl
dec
enter
mov
cli
ss
pop
pushf
cmpl
fchs
inc
in
xchg
xor
shll
movsl
jmp
and
neg
arpl
inc
or
stos
cmp
test
dec
test
or
leave
imul
push
dec
stos
cli
int3
inc
stos
mov
push
mov
mov
fldt
clc
ds
jmp
in
xchg
addr16
mov
jle
iret
pop
mov
clc
cmp
ds
stos
push
mov
mov
inc
mov
jns
mov
popa
outsb
fs
popf
push
ss
xor
push
hlt
push
subb
lahf
stos
lret
jp
pushf
insl
test
push
inc
dec
add
add
dec
stos
je
lods
sbb
clc
mov
inc
mov
out
add
cmpsl
xchg
cmpsb
cs
or
sub
xor
ljmp
mov
lahf
mov
inc
and
in
ret
sbb
mov
push
sbb
jp
jge
lods
test
test
jne
test
daa
repnz
mov
dec
scas
repnz
dec
out
mov
sbb
or
adc
arpl
jmp
jbe
fisubs
je
add
arpl
cmp
aas
mov
add
fwait
add
mov
fldcw
add
sbb
movsb
pop
or
mov
dec
test
pop
insb
aas
pop
xor
dec
lcall
insl
push
mov
mov
add
xchg
addr16
cmpsl
testl
imull
rolb
gs
lret
loope
dec
push
loopne
dec
sbbl
repnz
stc
pop
mov
and
ja
fisubrs
push
pop
dec
mov
push
or
aad
fdivl
jmp
sbbl
das
stc
lea
push
ret
fsubrl
push
movsl
xor
mov
pushf
add
jbe
jg
scas
pushf
test
es
pop
aad
ret
inc
cmp
and
std
ret
or
insl
shlb
ja
mov
inc
ret
or
inc
pop
mov
push
daa
xlat
div
sub
adc
cmc
cmpsl
xchg
jg
add
xchg
in
lret
out
rorl
mov
hlt
pop
test
jmp
in
repnz
add
cs
jmp
jbe
mov
cmpl
shl
jae
cs
stos
add
jmp
iret
fs
enter
fnstsw
sahf
movsl
cltd
jp
pusha
lahf
mov
push
push
rcrl
test
shlb
sahf
outsl
sbb
pusha
push
lods
adc
pop
push
cmp
cmpsl
iret
jno
testl
jno
pop
hlt
pop
addl
das
adc
mov
stc
in
out
add
orl
fcomp
adcb
jnp
aad
daa
out
mov
outsl
movsb
ror
push
leave
pop
xchg
jp
rcrb
xchg
js
mov
out
pop
in
xchg
outsl
call
add
adc
lock
mov
ljmp
xchg
cli
es
push
adc
test
in
xor
addr16
sub
push
sbbb
xchg
push
mov
outsl
jg
mov
stos
inc
push
jmp
mov
xor
sub
divb
xorl
and
xchg
mov
mov
sti
pop
and
call
xor
call
lret
add
jae
adc
mov
movaps
loop
xchg
cmc
inc
and
push
fadds
repz
jae
orb
loope
in
pop
mov
aaa
mov
loope
and
call
mov
mov
pusha
lret
xchg
loop
sub
stc
mov
scas
add
pusha
xor
inc
jb
inc
fsubl
dec
ljmp
mul
icebp
mov
cmp
fdivs
xor
jle
aaa
aad
jns
gs
iret
mov
mov
rol
sub
insl
icebp
and
adc
or
jbe
test
and
ljmp
in
sub
push
jp
loope
or
arpl
data16
leave
scas
gs
push
mov
sti
inc
popa
or
sbb
add
pop
sub
push
movsl
lea
xor
dec
push
mov
out
cmpsb
and
xor
dec
sahf
xchg
mov
mov
out
ds
dec
popa
repz
loop
push
pop
adc
xchg
and
mov
jno
xlat
mov
jbe
shll
cmp
sbb
ret
jg
dec
pop
fdivrl
mov
cmp
imul
sub
push
cmc
jmp
or
cmp
xchg
fsubs
xor
mov
add
sarl
js
xchg
insb
pop
rorb
test
xchg
mov
push
fistpl
pop
adc
inc
jns
repz
add
fstpl
mov
and
fsubs
xor
shlb
mov
xorl
call
repz
das
pusha
sahf
and
jbe
movsl
mov
pop
xor
or
inc
lret
lcall
int
xchg
jno
xchg
dec
lret
scas
lea
push
jae
ret
and
gs
mov
sbbb
xchg
sahf
rcrl
stc
popl
int
mov
mov
add
ds
stos
mov
and
fdiv
fidivrl
pop
push
mov
rcr
or
push
call
jo
loopne
mov
sub
fidivl
push
cld
push
jecxz
aas
xchg
sub
iret
push
xor
xchg
mov
jmp
xor
push
lret
js
pop
xor
repz
xchg
into
pop
pop
dec
insl
loopne
orl
dec
add
pop
negl
lock
xchg
aad
pop
clc
sbb
xor
lds
aam
pop
outsb
shrl
stos
ret
pop
mov
mov
les
cmp
inc
les
jg
add
shrl
out
loop
fisttpll
adc
cmp
pop
push
add
push
aaa
mov
imul
push
or
insb
inc
push
xchg
lods
sbb
xchg
jbe
mov
rol
jnp
in
cltd
mov
xchg
push
pop
stos
xor
std
incl
in
xchg
ror
mov
dec
movsb
jmp
scas
int
je
push
lock
notl
inc
fstpt
leave
gs
outsb
in
es
xchg
dec
mov
pop
leave
leave
hlt
les
cmp
mov
mov
daa
sub
jb
lods
sti
stc
jae
xor
mov
jo
out
pusha
push
popf
jne
adc
mov
shrd
pop
jae
outsb
jp
lods
xor
testl
shlb
sbb
sub
jmp
loopne
xor
mov
scas
pusha
mov
fnstcw
arpl
test
dec
push
mov
push
aad
push
cmpsb
shll
push
sti
orl
ja
and
cwtl
callw
movsl
dec
lock
les
ret
idivb
stos
test
xor
aas
fwait
popf
mov
add
jbe
xlat
les
and
call
push
fimuls
popa
xchg
test
jg
orl
adcl
push
and
xor
xchg
popf
and
adc
das
lahf
loope
push
stos
test
or
les
js
cmp
iret
jns
inc
clc
mov
sub
hlt
jne
xor
jbe
imul
inc
cmp
xchg
sub
push
sbb
lods
dec
es
xchg
jp
jne
xchg
inc
lret
daa
out
adc
push
add
and
xchg
gs
in
mov
jb
int3
inc
add
adc
sub
call
add
cmp
add
jle
pop
fs
inc
sarb
dec
roll
pop
fsubrl
pushf
mov
push
cmp
inc
add
hlt
int
loop
push
mov
mov
sub
lcall
add
test
iret
stos
or
pop
sbb
add
mov
mov
and
flds
add
into
andl
sarl
cmpl
enter
aas
sbb
insl
adc
aaa
leave
mov
cmp
addr16
fwait
stos
addl
inc
sub
pop
adc
out
out
repnz
mov
mov
xor
add
push
xchg
cltd
in
adc
inc
icebp
ljmp
call
frstor
push
cltd
xchg
mull
sbb
enter
xchg
mov
jb
aaa
sbb
jp
cmp
jne
stos
adc
jnp
push
sub
jecxz
mov
clc
mov
aas
testl
adcb
jl
nop
mov
sbb
dec
sarb
ret
jmp
or
lret
cmp
adc
and
inc
adc
enter
sub
in
insl
in
cltd
mov
mov
lock
xchg
leave
dec
lret
pop
adc
gs
int3
jns
sti
inc
outsl
or
jno
inc
ret
movsb
movsb
or
lds
ret
mov
in
cmp
mov
addr16
inc
popf
mov
xor
or
xor
mov
cmp
shrd
xchg
add
hlt
lahf
scas
mov
popf
mov
xor
xchg
ss
sbb
ret
inc
dec
mov
pop
fnstsw
xchg
stos
sbb
mulb
mov
and
inc
push
pop
cmpl
jl
sarl
add
ds
das
xor
mov
repnz
cmp
sbb
cmp
test
lds
cwtl
mov
jae
xlat
pop
mov
pop
and
lret
jae
das
xchg
stos
jp
shl
cmp
jbe
cmp
sbb
movsl
lock
ja
in
cmp
bound
loopne
loop
mov
inc
push
inc
adc
js
or
xor
xor
cwtl
jnp
ss
mov
xchg
adc
sbb
push
insb
cmpb
sbb
imul
and
dec
aaa
out
adc
xchg
mov
mov
imul
scas
in
and
sbb
mov
pop
mov
shlb
rclb
jo
je
movsb
inc
cs
pop
push
repnz
push
cmp
sub
sbb
jecxz
stos
loop
lret
and
rcl
mov
rcr
repnz
adc
or
jge
inc
xchg
daa
insb
cltd
mov
mov
cmp
push
leave
xor
add
fwait
je
pcmpeqb
pop
push
fwait
rcll
cli
or
and
ds
pop
jmp
jo
jl
and
xchg
xlat
gs
shll
test
test
rcr
xor
ds
shlb
insb
xchg
jae
jmp
cmc
fwait
xor
lock
inc
inc
lods
loop
out
test
push
shrb
jno
xor
mov
leave
outsb
dec
imul
das
loopne
and
mov
mov
or
pop
fldt
mov
push
fnstcw
cmp
test
ljmp
sbb
pop
fs
push
test
insb
or
fldcw
xchg
add
je
mov
data16
jle
sub
push
mov
and
popf
mov
adc
push
enter
jge
sub
push
mov
std
push
lahf
mov
arpl
xlat
push
fcos
loopne
or
xchg
das
in
test
call
aas
pop
outsb
mov
adc
mov
push
mov
sbb
out
lds
in
adc
pop
pop
cmp
mov
and
enter
cmp
push
inc
inc
pop
pop
and
add
inc
or
call
pop
push
xchg
jg
lock
lds
scas
xchg
xor
or
push
cld
or
in
adc
jnp
rclb
sub
push
in
mov
icebp
cmp
fimull
cmp
lock
adc
scas
xchg
and
jnp
xorb
inc
cmp
filds
cmpsb
loope
inc
leave
add
mov
dec
adc
daa
sahf
push
gs
movsl
test
roll
xchg
cltd
lcall
cmp
sub
cmp
adc
sbb
stc
faddp
pop
inc
or
xor
mov
fbstp
int3
sub
mov
dec
out
inc
sbb
push
out
dec
mov
jmp
sub
call
cmp
pop
pop
sub
cmpsb
push
mov
push
pop
sbb
out
jge
outsb
or
pusha
dec
pop
mov
push
jno
data16
cmp
jbe
xor
mov
div
jle
pop
pop
sub
lret
outsb
dec
ja
test
orb
pop
out
stos
aam
mov
xor
pop
dec
dec
sbb
xchg
stc
inc
adc
mov
inc
xor
rcll
into
icebp
out
rcll
dec
sarb
xor
mulb
ja
ljmp
xchg
mov
mov
dec
add
and
dec
mov
pusha
adc
loopne
das
mov
inc
ret
es
and
repnz
dec
adc
xchg
push
pusha
pop
adc
ja
sbb
lods
inc
arpl
inc
xor
pop
and
mov
cmp
jge
adc
cs
in
jge
aam
mov
loop
jns
out
xchg
push
mov
cmp
movsl
dec
fistps
adcl
cmp
cmp
jp
and
or
sbb
cmp
shl
je
xor
sub
xchg
mov
mov
adc
fwait
in
jmp
xor
or
sub
push
pusha
cmp
push
in
pop
adc
xor
fmulp
inc
inc
mov
inc
cs
pop
negl
cmp
xchg
sahf
adc
and
and
sbb
mov
inc
ret
xchg
aad
mov
jne
ljmp
jb
stos
sub
out
dec
rcr
rorb
add
and
mov
and
lock
pop
push
inc
cmpsb
pop
mov
cmp
gs
xor
inc
loope
cmp
push
bound
fidivrs
leave
push
inc
mov
popf
cmp
aas
arpl
scas
js
mov
jle
orl
in
fimuls
mov
repz
pop
lret
jae
adc
push
jne
mov
mov
push
or
cmc
sbb
mov
xchg
stos
or
repz
jg
pop
outsb
jb
push
dec
filds
pop
cmpsl
call
inc
in
fs
inc
push
push
push
pushl
and
fadds
pop
gs
sbb
xlat
mov
ljmp
sub
ja
sbb
subb
or
inc
int
faddl
loope
cmp
push
clc
js
int
push
movsl
sbb
mov
mov
call
ficompl
pushf
sub
leave
inc
ret
jno
daa
xchg
lret
dec
mov
leave
jg
mov
in
pop
sub
inc
in
jle
test
popa
lods
xchg
xchg
jmp
subb
movsl
loop
loopne
xchg
sub
jno
mov
and
or
movsb
test
sub
adc
mov
test
mov
cmp
outsb
enter
mov
jle
sbb
out
pushf
add
in
push
and
xchg
mov
mov
xorb
cmc
pop
mov
out
fisubrs
dec
mov
int
inc
inc
mov
jae
testl
jmp
jecxz
popa
sbb
lock
jge
cli
and
mov
sub
rcll
jl
sbb
repz
shl
adc
test
mov
sbb
jl
mov
jmp
std
add
lcall
mov
testb
xorb
jb
mov
sub
inc
nop
mov
dec
jns
push
fcomi
sub
les
iret
and
out
cmp
dec
mov
or
insl
inc
pop
jo
lods
fsubrs
lods
pop
lods
sub
inc
mov
push
notl
addr16
mov
clc
ret
in
mov
dec
push
stos
cmp
push
pop
loop
ror
add
loop
int
adc
push
dec
push
mov
clc
push
dec
and
push
xchg
push
mov
jg
adc
cmc
inc
stc
mov
gs
repnz
jnp
jg
mov
push
mov
cmpl
fwait
movsb
sbb
jecxz
imul
and
sbb
pop
kmovb
insl
fimuls
push
sub
xchg
add
pop
insb
pop
lcall
xchg
pop
add
push
es
mov
xchg
lods
jmp
decb
mov
lcall
adc
adc
mov
imul
lock
jno
scas
adc
ljmp
addr16
mov
mov
adc
cmp
repz
pop
notb
xorb
cmp
xor
lcall
adc
and
adc
jbe
mov
add
jne
mov
xchg
jbe
pusha
mov
loopne
es
mov
add
in
and
loopne
ja
insb
shll
out
mov
inc
or
js
lock
pslld
lret
push
mov
frstor
icebp
adc
mov
addr16
mov
imul
sbb
shr
adc
ds
in
arpl
xor
repnz
aad
pop
xchg
xchg
loopne
ja
add
das
xchg
inc
pop
les
inc
and
int
push
clc
add
pmaddwd
cmp
mov
aaa
cmpb
cmp
push
sub
xchg
imul
fists
frstor
push
jmp
inc
movsb
js
inc
mov
dec
test
pop
cmpsl
iret
xchg
lods
push
sbb
imul
popf
adc
cmpsb
outsl
out
mov
int3
lahf
pop
cmp
pusha
jge
and
cs
js
sub
movsb
push
fs
mov
lods
inc
cmp
pop
pop
sub
sub
sbb
or
notb
incl
adc
pop
fisttpll
out
pop
jmp
sub
fsts
neg
add
shl
es
push
fcomps
inc
imul
xchg
aad
into
add
das
mov
inc
out
inc
cwtl
leave
sub
mov
xlat
pusha
and
enter
enter
cmp
iret
fimull
dec
cmp
mov
fiadds
or
dec
jbe
ffree
shrb
lods
push
das
push
mov
xchg
xor
sbb
leave
ret
decb
call
test
leave
pusha
xchg
mov
xor
loopne
push
add
push
inc
push
pushf
call
cmp
adc
mov
xor
lea
scas
xchg
popa
push
cmc
xor
and
icebp
rcl
xor
push
movl
sbb
inc
dec
mov
shr
cmc
rol
out
mov
popa
mov
cmp
cs
nop
ja
jg
pop
or
jle
sub
cs
cld
mov
int3
movsl
ja
aaa
sbb
lock
addb
icebp
mov
lret
and
xor
sbb
fisttpl
cli
push
lock
fisubrl
cmpsb
sub
lret
lea
arpl
repz
popfw
cmp
inc
clc
pop
jge
rcrl
iret
mov
pop
mov
lock
sbb
mov
push
popa
in
stos
stos
and
jne
in
aas
adc
lahf
pop
push
dec
test
fcompl
test
std
out
sahf
in
and
cltd
mov
scas
cmpsl
pop
mov
addr16
mov
push
shrl
sbb
pop
mov
not
sbb
and
ret
adc
int3
xchg
sub
ss
gs
outsl
ret
cmp
ret
out
loopne
bound
scas
stos
andl
sub
mov
popf
stos
mov
mov
mov
popa
andl
scas
pop
out
dec
xchg
dec
jp
adc
fsubrl
cmp
and
ret
std
loope
jo
sbb
xor
orb
jno
push
lcall
jle
jns
addl
stc
imul
xchg
xor
dec
insl
adcl
popf
xchg
fs
push
loopne
cmpsl
dec
std
mov
rorl
sbb
sarl
xchg
push
int3
out
shrb
jnp
push
pop
sbb
ss
insl
push
inc
mov
jno
jge
xchg
push
rorl
dec
cltd
adc
sbb
shll
aam
fldenv
mov
cmc
add
cmp
addl
fbld
or
lods
xor
pop
cmpsb
xchg
inc
cmp
fwait
daa
mov
js
pop
mov
cmp
and
fldt
jns
fidivrs
sbb
mov
lods
jo
iret
nop
xor
jno
outsb
rcll
std
or
pop
sub
adc
inc
push
arpl
stos
xchg
or
iret
or
rorl
mov
inc
fnstcw
outsb
out
mov
cmpsb
pop
cld
mov
adc
imul
pop
sub
repnz
ja
inc
jecxz
lds
jecxz
shlb
cmpsb
xor
rcr
jo
adc
cmp
ljmp
xlat
sbb
mov
sub
fsts
testl
xchg
fdivrl
push
cmp
push
sub
inc
out
rclb
xchg
jp
or
mov
push
jecxz
dec
mov
mov
mov
adc
push
outsl
mov
mov
stos
jmp
jmp
sbb
pop
pusha
push
pop
sti
sbb
dec
sbb
test
imul
jo
jnp
leave
push
repz
lds
rorb
xor
xchg
or
sub
mull
xchg
mov
sub
adc
je
mov
xchg
andl
stc
sub
mov
idiv
lea
aam
xlat
push
jmp
fisubs
vpmacsdd
dec
cmpsl
out
or
popa
xchg
in
push
cmp
scas
sub
sub
pop
lcall
pop
xchg
insl
scas
loop
mov
cltd
cltd
sub
popa
notb
inc
or
jl
sub
cmp
pushf
jle
jg
repz
adc
or
fs
sar
cmp
aaa
leave
addr16
ds
fs
in
sbb
mov
jbe
sub
push
je
pop
mov
dec
sarb
dec
movl
mov
inc
xor
sbb
scas
sbb
sti
divb
sub
fdivrl
dec
arpl
inc
jle
dec
scas
clc
pop
ss
sahf
fcmovnu
xchg
xchg
cmp
dec
inc
cld
or
and
dec
push
rorb
pusha
inc
jbe
rcrb
dec
nop
stc
and
pop
xor
mov
mov
frstor
jmp
dec
pop
push
jbe
cmp
sbb
pop
leave
pop
inc
xchg
aas
add
bound
std
pop
cmp
les
pusha
xchg
mov
fdivrs
sbb
push
out
data16
test
je
push
popa
andl
sub
pop
mov
daa
cltd
mov
scas
out
sbbl
js
mov
mov
pop
ret
out
pop
mov
and
lahf
push
or
xchg
sub
xchg
js
test
inc
and
jbe
fisubrs
jnp
dec
ret
sub
inc
sub
and
addr16
inc
xchg
pop
mov
js
sub
insb
jl
jle
cs
icebp
loop
into
lods
insl
into
adc
mov
xchg
jg
insb
fucomi
out
data16
das
mov
orb
test
pusha
dec
mov
pop
add
mov
out
mov
sarb
adc
xchg
out
and
scas
out
pop
lcall
jle
cmpsl
lret
call
fs
push
and
or
jge
push
repz
and
add
inc
xor
dec
shlb
pop
jp
enter
daa
and
clc
test
cwtl
lret
cmp
sbb
ja,pt
cmp
jae
xor
clc
mov
icebp
test
adc
fiadds
or
push
enter
outsb
xor
lret
xchg
jnp
inc
adc
push
xchg
repz
jg
sub
pop
and
sub
push
mov
push
das
ret
jbe
and
test
mov
pop
mov
cmp
hlt
outsb
cmpsl
or
inc
scas
test
mov
mov
pushf
xchg
mov
push
add
jbe
xor
aam
in
mov
mov
stos
aad
lcall
repnz
pop
push
sbb
mov
adc
dec
hlt
movsb
lods
pop
push
or
and
cmp
lret
pop
xchg
push
jmp
add
push
popf
fcoms
xchg
pushf
pop
es
lret
cmp
in
xor
push
add
cmp
mov
mov
call
pop
inc
sbb
cmpsb
pop
das
mov
mov
jg
xchg
mov
mov
das
dec
testb
mov
inc
subl
pop
cmp
dec
xor
pop
stos
stos
inc
mov
jmp
adcb
dec
iret
xor
loopne
pop
movsb
cld
pop
clc
inc
jae
sub
scas
dec
cmpsl
fstpl
adc
repnz
lods
push
xchg
push
mov
outsb
mov
xchg
push
push
das
add
lret
dec
or
shrb
adc
aaa
rolb
push
inc
ljmp
and
inc
rol
inc
mov
js
adc
jne
jg
lahf
dec
test
sbb
fs
iret
lret
lods
or
inc
lds
mov
add
jns
xchg
sbb
mov
and
pop
jmp
int
aas
adc
popa
inc
xchg
mov
lret
xchg
jp
mov
in
idivl
sbbb
or
fiadds
faddl
mov
mov
arpl
in
shrl
jge
pop
fcmovnbe
sub
mov
flds
les
xor
fwait
lock
hlt
xor
cmp
popa
dec
jmp
push
int3
mov
arpl
ss
test
inc
lcall
jge
in
xor
sbb
push
hlt
pop
lret
fcos
cmp
popa
mov
leave
insb
int3
popf
pusha
cmp
outsl
fs
sti
stos
insl
mov
xor
lret
jmp
and
or
mov
pop
shrb
mov
mov
inc
ljmp
out
test
ret
mov
mov
popf
scas
inc
or
xor
dec
cmp
mov
test
jg
add
lahf
or
dec
call
sbb
add
add
xchg
sbb
inc
xor
int3
adc
push
out
mov
inc
sub
fldcw
and
test
mov
lock
data16
pop
das
leave
mov
fists
push
xchg
cwtl
data16
sbb
cmp
bound
mov
loope
sub
movsl
pusha
lock
mov
inc
sbb
mov
repnz
cmp
jmp
cmpsl
dec
pop
pop
mov
pop
fcompl
xchg
xor
jbe
pop
dec
lahf
mov
push
mov
aad
mov
mov
xchg
or
push
test
ss
out
pop
cmp
rolb
mov
push
cmpsb
dec
test
fs
in
cmpsb
jb
and
mov
pop
cmc
mov
lds
dec
cmpsb
test
cwtl
aad
lret
cltd
or
jbe
push
mov
push
adc
inc
fdivrl
adc
icebp
dec
mov
jge
and
imul
fucom
aam
xchg
pop
mov
lock
mov
fistps
aas
in
xor
sarb
fdivr
lret
xchg
lea
dec
jnp
xchg
rorb
mov
push
adc
xchg
scas
pushf
outsb
push
push
push
sub
loope
loopne
fdivl
push
data16
int
mov
mov
stc
leave
or
jg
aad
test
mov
ljmp
sbb
mov
lahf
xor
lret
jl
inc
jb
pop
gs
sub
jns
pushf
or
mov
mov
mov
test
nop
pop
insb
adc
jb
cmp
pop
sbb
pop
cmpsl
clc
pop
adc
testl
push
xor
int3
outsb
and
inc
into
jmp
or
enter
scas
add
loopne
fsubrs
push
adc
push
insl
mov
bound
mov
into
mov
mov
dec
fisubrs
fistpll
std
rcl
adc
movsl
movsb
rsm
inc
jae
or
push
roll
out
cmovae
cmp
lahf
pop
jo
xchg
dec
xchg
mov
push
scas
bound
mov
pop
cmp
outsl
cltd
xchg
mov
outsl
lret
in
into
push
call
std
or
popa
sub
adc
mov
cmp
ss
int
sti
addr16
pop
test
sbb
push
gs
mov
lahf
stos
js
movsb
xlat
xchg
mov
js
lock
jl
call
mov
out
aas
bound
mov
popf
imul
mov
push
mov
push
out
dec
outsl
jecxz
insb
sub
sarb
xor
fs
cld
cld
push
nop
mov
mov
mov
popa
lods
fsubrs
insl
testl
in
xchg
bound
jb
push
mov
pusha
mov
sub
out
cmp
sub
stc
cwtl
shlb
and
xchg
rolb
popa
add
push
dec
adc
int
das
mov
jge
sbbb
gs
add
sub
repz
adc
lock
lcall
mov
repnz
inc
fmuls
mov
pop
popa
jge
daa
subl
out
out
sbb
xchg
stc
xor
mov
jle
repz
push
rolb
lock
lock
xorb
dec
lea
repz
lret
pop
dec
mov
pusha
jecxz
sti
arpl
dec
mov
outsb
stc
mov
scas
inc
mov
jns
in
std
sahf
add
or
push
leave
xchg
push
or
popa
xor
mov
outsb
ss
inc
or
pop
scas
out
jns
xchg
les
mov
xor
orl
and
stos
bound
test
push
jns
cmpsl
mov
nop
aas
xlat
xor
mov
pop
es
out
xor
xchg
jno
xchg
cmpb
ss
into
in
lods
jge
mov
xchg
rcll
ficomps
adc
mov
dec
mov
cwtl
xchg
out
arpl
inc
sbb
mov
or
mov
cmp
out
cwtl
mov
repz
ret
pop
adc
jle
add
dec
into
in
movsl
push
cmpsl
jns
fst
leave
call
sbb
bound
clc
inc
das
popf
pop
cltd
dec
mov
stc
add
insb
fidivl
mov
fimull
cmp
arpl
popf
or
mov
test
fisubl
inc
loopne
add
push
push
mov
stc
xor
lcall
lret
xchg
enter
add
xchg
fsubs
adc
sbb
xchg
pop
cs
pop
notl
cwtl
and
addl
sub
cli
mov
inc
sahf
add
ds
pop
jg
dec
jae
enter
into
jecxz
mov
adc
nop
mov
loop
ret
test
ret
mov
les
push
ret
cli
push
dec
std
rcrl
mov
out
pop
and
xchg
jno
add
jl
or
mov
mov
mov
or
leave
or
lahf
fstps
lret
sbb
mov
enter
add
popa
jl
mov
das
or
decb
or
fdivrs
aad
and
pop
mov
outsb
pop
pop
mov
sub
xor
stos
fwait
js
lahf
movl
iret
mov
sub
cmp
xor
movsb
push
push
into
les
js
mov
xor
pminub
pushf
lea
scas
leave
jne
cmpsl
jns
je
push
aad
cmp
insb
sarb
andl
and
mov
mov
cli
add
or
xchg
mov
jl
call
into
sbb
jg
ret
adc
xchg
or
mov
adc
in
adc
mov
pop
jge
loop
mov
mov
mov
pusha
cli
push
pusha
push
jb
js
fmuls
test
stc
insl
in
push
dec
cmp
pop
lea
test
mov
cmp
sbb
inc
inc
sbb
push
jbe
mov
jbe
fsubrl
mov
cmpsb
in
fwait
pop
imul
call
faddl
xor
in
aaa
rcll
in
xor
mov
xchg
add
push
ja
ret
sbb
lods
cmp
pusha
fsubs
or
lock
js
sbb
insb
pusha
mov
cmp
or
jecxz
jnp
push
repz
and
aaa
cmp
xchg
inc
push
repnz
into
or
loope
lahf
subl
mov
sbbb
lahf
jmp
mov
mov
add
int3
mov
mov
push
ss
punpckldq
dec
lds
sub
mov
pop
mov
sub
in
cmp
xor
aad
int
jle
out
pusha
ja
outsl
mov
sub
ss
fimull
in
xchg
adcb
cmp
dec
sub
stos
scas
outsl
dec
xor
imul
loopne
pop
pop
pop
dec
push
in
lcall
mov
ja
mov
fwait
adc
adcb
flds
push
jo
sbb
test
dec
icebp
inc
add
pop
lock
fcomip
xchg
push
rorb
adc
cmp
cmp
bound
dec
jns
push
xlat
bound
dec
mov
int3
in
scas
cmp
ss
sti
and
xor
mov
in
xor
movsl
cmp
and
fadds
dec
daa
popf
lret
jl
ret
dec
or
js
cld
es
or
imul
xor
xchg
jle
mov
sbb
popa
or
scas
sbb
dec
dec
les
nop
cli
or
push
mov
insl
enter
lds
fidivrl
sbb
mov
adcl
cmp
xlat
incb
aaa
lret
adc
or
mov
jb
out
and
imul
lcall
xor
sbb
xchg
bnd
hlt
movsb
jbe
xlat
fcomps
hlt
cmc
xchg
fiadds
and
cld
lcall
jle
pop
mov
xor
aam
pop
cmp
andb
inc
and
in
and
out
fstpt
lret
pop
je
push
dec
push
pop
pop
fcomps
test
ret
push
inc
scas
cmp
scas
or
add
cli
ficoms
mov
push
popa
pop
push
push
negb
inc
ds
dec
aas
sub
sub
fistpl
xchg
and
push
flds
cmp
in
jo
test
shll
aas
mov
sbb
mov
test
inc
aad
xchg
scas
xor
mov
inc
xchg
into
and
or
movsb
mov
push
outsb
mov
in
jmp
sub
stos
icebp
or
lods
loop
shrl
mov
arpl
inc
inc
mov
push
lcall
xorl
cs
mov
mov
int3
lret
scas
inc
shl
add
dec
gs
repz
js
cld
push
fidivrs
lahf
dec
push
pop
fcomps
xchg
iret
pop
adc
cli
inc
xchg
outsb
push
jb
aaa
xchg
lods
or
js
xchg
cmp
and
fisubs
mov
inc
jbe
fimuls
xor
lods
lods
movsl
ljmp
or
push
inc
pop
psraw
ret
push
sbb
jbe
xlat
xor
out
addr16
dec
mov
push
movsl
enter
mov
jnp
cltd
cmc
int
enter
lea
es
mov
mov
jmp
jge
and
adc
insb
lcall
cmc
cld
push
sbb
and
add
js
add
fsts
push
dec
inc
xchg
shl
sub
mov
or
cltd
cmp
out
std
sbb
mov
mov
jg
in
lret
jle
xchg
nop
ret
add
jne
sub
mov
dec
test
ds
lods
dec
mov
mov
imul
inc
loopne
loope
ficompl
lret
jg
ss
xlat
adc
test
cmpsl
es
stos
xchg
cld
imul
mov
dec
aad
sub
leave
pop
es
daa
rcrl
mov
sub
ret
jns
or
insl
or
je
insb
aam
lret
ja
mov
sbb
push
ja
push
jae
xor
fidivrs
addb
ljmp
cmpsb
adc
adc
stos
hlt
leave
gs
imul
mov
jmp
mov
cltd
inc
xchg
mov
jl
bound
or
pop
scas
scas
out
xor
and
mov
test
cmc
mov
cs
mov
sub
pop
fdivrs
sub
icebp
psrad
xchg
fwait
cmpsl
dec
in
jmp
repz
cmp
adc
movsl
push
mov
jp
pushl
adc
xor
add
in
push
shlb
and
adc
cmp
jnp
js
je
xchg
add
iret
iret
inc
into
pop
sub
gs
jno
lret
inc
mov
out
mov
out
pop
dec
rclb
xchg
dec
int3
fdivl
scas
paddw
int
xchg
movsb
jne
xchg
mov
push
mov
ss
pop
pusha
gs
xchg
int3
iret
pop
sbb
xchg
add
insb
mov
dec
clc
sub
leave
lret
hlt
lods
inc
fcomps
test
in
fidivrl
add
sbb
jl
sub
js
and
sbb
sbb
cmp
cs
jbe
mov
arpl
test
stos
mov
cltd
rol
inc
or
jmp
in
jmp
ja,pn
cmp
bnd
push
lret
xchg
fcmovu
adc
lret
les
sbb
out
or
jnp
adc
cmp
aad
mov
pop
loopne
and
pop
dec
cmc
out
xor
mov
test
aam
and
jnp
xchg
jbe
ret
and
sahf
pop
and
or
lock
clc
test
jb
jns
xor
repnz
or
sub
decl
inc
in
push
xchg
dec
mov
and
ret
push
xor
movsl
cmpsl
es
mov
pop
lret
data16
inc
and
stos
shll
inc
xchg
push
xor
mov
cmpsb
test
mov
daa
call
mov
insl
mov
in
jb
xchg
xchg
out
insb
ret
lret
cmp
lea
test
daa
bound
outsl
push
idiv
sbb
adc
iret
sbb
scas
aas
dec
pop
cmp
xor
scas
and
sub
adc
test
xor
daa
mov
insb
stos
sbb
mov
sahf
mov
jnp
pop
js
out
mov
fs
fcomip
sbb
out
subl
fs
push
xchg
xchg
jmp
loope
mov
rorb
imul
push
or
mov
or
lcall
pop
push
data16
test
lahf
cmp
sub
inc
faddl
jns
ds
shl
loop
outsl
xchg
lcall
insb
aaa
lcall
fcmovb
mov
or
or
int
adc
dec
and
fidivrl
inc
fidivrs
or
inc
mov
cld
je
lock
popa
mov
fistpll
das
or
out
xchg
rclb
out
and
xchg
adc
ficompl
cmp
xchg
loopne
lret
adc
testl
sbb
adc
gs
cmp
cmp
mov
push
jge
sub
sbbb
pushf
cmp
jge
mov
sub
test
inc
arpl
flds
xchg
nop
sahf
or
lods
fwait
cmpsb
mov
out
aaa
fwait
inc
das
in
gs
pop
loope
cmp
add
cmpsl
sub
push
or
sub
jb
aam
ja
dec
dec
cmp
dec
inc
ja
mov
pop
clc
fs
les
loope
dec
sbb
cmp
push
jecxz
sub
mov
add
fidivs
int
aaa
xchg
xchg
icebp
fiaddl
dec
push
rorl
sub
sti
fstpt
lahf
outsb
jbe
jge
mov
mov
loopne
add
fstp
pop
into
popf
outsb
out
mov
adc
pop
hlt
jg
popf
mov
sarb
fdivr
inc
insb
mov
push
mov
jo
vmread
mov
sub
loopne
inc
rcr
sbb
or
add
leave
cmovge
popf
popa
mov
lahf
adc
push
or
mov
dec
lret
dec
xchg
cld
arpl
data16
cs
sbb
lcall
in
mov
mov
push
cld
rorb
fucomip
sub
mov
into
es
fcompl
mov
les
lcall
cmp
push
dec
inc
out
cmp
mov
add
cwtl
adc
xchg
xlat
mov
mov
dec
scas
arpl
imul
sbb
inc
jno
cwtl
jl
roll
leave
adc
iret
icebp
out
inc
pop
jl
call
mov
dec
in
dec
xchg
sub
xchg
inc
pushf
jmp
out
jne
pusha
pop
mov
pop
enter
dec
cli
insl
jns
sub
pop
mov
pop
jecxz
insb
je
gs
outsb
daa
jle
mov
insb
ljmp
sahf
test
dec
and
or
shrb
mov
ljmp
jo
insb
xchg
pop
mov
push
mov
stos
jmp
sbb
insb
and
cwtl
sbb
mov
jae
pop
push
xor
sub
loope
loopne
cltd
cmp
addr16
add
lahf
or
adc
sahf
inc
jae
push
sub
sub
andb
push
push
sbbb
dec
addr16
dec
pop
xchg
cs
mov
lea
nop
cli
jg
add
pop
es
inc
push
fwait
outsl
negl
loope
jle
xchg
lcall
sti
subl
push
push
sti
inc
ds
stos
loope
or
jle
lret
addl
out
inc
inc
insl
popa
inc
jno
lcall
and
sbbb
push
push
xlat
or
cmp
push
cmp
cmp
pusha
sbb
fcoml
sub
shrb
jb
sbb
cmp
dec
aad
bound
mov
pop
pop
mov
mov
inc
push
sbb
mov
movups
lods
pop
xchg
dec
adcl
sahf
add
aad
mov
or
bswap
xor
dec
insb
stos
idivb
sbb
aaa
out
add
mov
add
xchg
pop
test
ljmp
xchg
rcrl
mov
js
pop
mov
and
scas
jb
fsubrl
and
dec
push
cli
dec
mov
cmpb
mov
xlat
push
mov
cmc
push
movsl
repnz
inc
add
cmpsl
das
icebp
btr
xchg
adc
mov
jnp
mov
mov
and
pushf
add
pop
push
jl
push
mov
ficoms
sbb
or
mov
in
jmp
adc
and
mov
adc
xor
jno
out
and
std
repz
enter
sub
or
mov
pop
imul
sub
test
jle
fdivs
xor
je
loop
xor
push
mov
ficoms
mov
and
add
cmpsl
les
popf
mov
cmp
cmp
jmp
arpl
xchg
or
or
inc
fldcw
out
repnz
ja
leave
adc
aam
out
sbb
dec
inc
sub
dec
sti
movsb
je
jecxz
pop
shlb
das
mov
shlb
xor
xor
adc
popf
pop
push
popa
push
mov
stos
cmpsl
cmp
test
push
icebp
push
cltd
xor
adc
loope
xchg
inc
cltd
jecxz
movsb
push
in
adc
fstpt
sbb
daa
sbb
mov
arpl
lods
fsubp
jl
std
jge
pop
add
jp
push
inc
xchg
sahf
dec
sub
mov
stos
inc
xchg
add
lea
dec
push
push
mov
inc
aaa
sub
outsl
jno
push
xchg
dec
and
fwait
xor
mov
clc
push
aad
mov
scas
inc
mov
data16
into
ror
sub
cltd
or
jnp
mov
fdiv
add
and
inc
dec
cmp
dec
cmc
nop
fs
cmp
push
pushf
jne
gs
repnz
je
into
xchg
jbe
mov
insb
mov
ja
mov
fwait
in
es
ret
pusha
push
jl
inc
fwait
mov
insb
pop
xchg
stc
adc
testb
jae
or
jo
jmp
adc
ret
sbbb
sbb
dec
xor
mov
inc
mov
pop
js
mov
mov
jg
out
lahf
cmp
jl
or
mov
sub
inc
out
cli
mov
dec
call
jo
das
fldcw
sub
add
loop
pushf
cli
jle
pop
inc
mov
sub
shl
loop
fs
push
inc
inc
sub
jle
and
adc
pop
inc
mov
dec
mov
push
push
push
add
mov
mov
jae
fwait
xor
gs
sbb
cmp
lock
adc
push
into
and
mov
sbb
out
stos
data16
mov
repnz
adc
int3
in
mov
mov
fistpl
repz
and
add
xchg
negb
jnp
and
add
fstl
dec
pop
add
mov
mov
jl
ljmp
les
enter
fs
test
push
int
lea
gs
out
cmp
cmp
jne
sub
cltd
ss
push
mov
fwait
push
mov
inc
pop
je
cmp
nop
or
cld
mov
inc
fbstp
iret
push
aam
pop
sub
xchg
or
mov
in
lods
mov
cli
mov
out
mov
cmp
lock
stc
lret
lahf
xchg
rorl
push
push
dec
shrl
dec
xchg
cmp
push
lret
sarb
mov
scas
xor
loope
jle
pusha
movsl
jo
push
rcrl
add
and
push
mull
lcall
popf
jno
bound
push
and
jecxz
xchg
test
jo
push
bound
jl
aad
xchg
push
aaa
pop
or
mov
dec
jle
sti
xchg
adc
cmpsl
mov
mov
push
push
and
out
test
or
cld
or
inc
fwait
insb
inc
cmp
in
sbb
push
inc
insl
gs
and
cmc
mov
sub
cmp
test
pop
add
pop
mov
pop
jl
xchg
cltd
mov
imull
dec
sbb
xor
popa
xor
outsl
xlat
das
jp
cmc
xchg
jle
push
popa
popf
icebp
jl
inc
mov
cld
es
int
xor
or
dec
leave
mov
xor
jae
sbb
mov
dec
push
in
sbb
cmpl
inc
mov
inc
outsb
imul
inc
adc
push
add
je
adc
or
in
insl
nop
pop
mov
stc
daa
xchg
mov
clc
mov
and
inc
xor
notl
repnz
adc
cmpb
scas
sbb
cmpb
clc
push
or
xchg
imul
data16
sub
movsl
mov
pop
mov
jmp
repz
out
hlt
cmpsl
and
cld
into
or
and
adc
jno
xchg
cwtl
pop
and
mov
push
pop
pop
ljmp
adc
aaa
cmp
mov
out
cmp
testl
movsb
xchg
cmc
mov
pop
inc
aaa
inc
cwtl
push
xor
mov
fistpll
jno
sub
sub
ljmp
inc
adc
xor
stos
push
gs
pushf
or
fidivrl
add
sbb
push
aam
fidivrs
jo
jo
mov
sbb
xor
call
cmpsb
scas
mov
push
mul
inc
pop
xor
pop
ds
xchg
mov
movsb
dec
call
enter
mov
pushf
and
leave
test
mov
aas
lock
mul
push
add
jae
test
popa
cmp
push
mov
pop
lret
mov
sbb
push
xchg
push
in
sub
pop
inc
pop
daa
xchg
test
fldenv
nop
pop
frstor
pop
add
mov
fldl
imul
notb
mov
mov
mov
sbb
cltd
or
sub
iret
jne
cli
rcll
lea
and
adc
les
fs
mov
dec
push
xor
sub
insb
lahf
loope
ret
punpcklbw
adc
stos
dec
push
jmp
cmpsb
xchg
lret
fucomi
mov
cld
xchg
push
subb
jle
test
jle
les
mov
jge
sbbb
mov
cmp
adc
out
sti
clc
dec
cmp
pop
fwait
jbe
dec
cmpb
bound
lods
mov
popa
add
adc
cltd
inc
call
stc
mov
adc
push
icebp
out
cmp
cld
adc
and
mov
int
lret
int3
xchg
movsl
mov
insl
jo
cmp
clc
push
mov
in
std
sbb
jnp
xchg
out
push
iret
push
lock
loopne
xor
ds
push
nop
pop
repnz
xchg
outsb
not
dec
jl
ljmp
pusha
push
mov
movsl
pop
push
aaa
adc
dec
xchg
jns
test
sbb
orb
dec
shrb
dec
inc
adc
fldenv
push
arpl
and
push
pop
mov
add
or
dec
aad
mov
shl
adc
cld
cltd
cmp
in
mov
mov
movsb
jge
ret
outsl
aam
in
sbb
mov
stc
push
faddl
ja
adc
pop
inc
dec
push
decl
out
addr16
sbb
roll
movsb
mull
or
mov
mov
std
cmpsb
popa
in
pop
cmpsb
jp
cmp
in
lea
rolb
xor
cwtl
inc
jp
push
loopne
sub
aas
cmp
orb
add
mov
and
les
or
push
inc
xchg
int3
aas
outsb
imul
xchg
std
repz
mov
add
push
ss
std
outsb
arpl
sarb
dec
insl
add
xchg
movsb
pusha
lret
sbb
scas
jns
or
leave
pop
pop
lea
mov
jle
push
loopne
out
fnstcw
cli
dec
lods
jno
and
push
xchg
adc
aas
or
mov
push
or
mov
movsb
mov
iret
adc
shll
loopne
fstpl
jge
jb
mov
lds
and
push
mov
jmp
xchg
mov
jmp
test
test
dec
xor
push
cmp
rcrl
pop
stos
or
imul
sbb
sbb
iret
nop
jnp
jns
dec
popa
mov
inc
jne
add
stc
sub
inc
in
loope
xchg
in
out
lcall
pop
stos
adc
sbbl
ss
mov
orb
adc
xor
nop
aas
pop
dec
sub
lds
dec
test
jb
arpl
js
push
adc
mov
dec
in
adc
aad
jl
push
in
dec
jo
cmp
leave
jne
sbb
popf
setp
mov
insb
cmp
dec
xchg
imul
icebp
test
test
pop
pushl
mov
in
push
pop
mov
cmpsl
setns
out
mov
lods
ss
inc
adc
sub
xchg
cli
js
cmpsl
icebp
xchg
sub
incb
xchg
sbb
fwait
push
xlat
rclb
lcall
ficoms
aam
out
xor
xchg
sbb
mov
xchg
or
mov
and
decb
punpcklwd
push
mov
xchg
mov
js
popa
xchg
add
add
sbb
mov
out
add
cmp
cmp
cmpsl
test
rcll
sub
mov
pop
or
bound
inc
cmp
je
cmp
scas
xor
das
call
inc
fisttpl
add
pop
sbb
imul
ds
imul
in
jo
xchg
adc
loopne
int3
sbb
pop
pop
lahf
jp
sti
shlb
lret
mov
pop
sti
sbb
push
jge
dec
popl
ljmp
pop
sub
out
stc
push
aad
mov
push
adc
repnz
pop
scas
mov
cli
jne
out
arpl
or
adc
or
mov
faddl
lods
xor
jmp
loop
ds
sub
or
daa
mov
pop
out
xor
push
push
jle
dec
push
and
aaa
outsb
loope
scas
icebp
mov
fwait
shrl
sbb
rcll
mov
push
xor
cmp
hlt
rorl
jmp
std
push
jecxz
frstor
insl
mov
jno
sub
mov
xchg
out
cmpsb
test
inc
int3
cmp
daa
mov
jmp
sti
int
cwtl
mov
test
ljmp
enter
shll
mov
inc
ret
cmp
loop
call
pop
jbe
sbb
imulb
inc
incl
jns
divl
mov
pop
ljmp
repnz
inc
and
aad
mov
loopne
cmp
add
push
lcall
std
ror
mov
pop
jl
mov
pop
popf
cli
lahf
cmpsb
mov
cmp
gs
xchg
sbb
mov
rcrl
addr16
sbb
jno
dec
add
rorl
into
mov
sub
insb
in
pop
cmc
push
mov
fdivl
repnz
adc
push
push
sarb
cwtl
ret
icebp
mov
pop
scas
clc
movsb
cmpsl
cmp
push
movl
leave
fcmovnu
pop
jl
cmp
gs
jg
outsl
sub
test
xorb
adc
xor
int3
jo
adc
mov
mov
pusha
dec
cli
mov
cwtl
and
ja
fsubrl
test
xchg
imul
inc
pop
in
xchg
fbld
loope
add
dec
xor
and
ss
or
dec
fwait
jo
std
data16
xor
sti
pop
mov
imul
inc
add
in
push
cwtl
xor
test
nop
daa
out
sbb
fs
lret
jb
pop
or
sbb
popa
sbb
enter
leave
scas
mov
xchg
and
shrb
mov
cmpsb
mov
inc
push
dec
scas
pmaxub
mov
mov
or
mov
rclb
mov
xchg
cwtl
pop
and
xchg
or
mov
inc
les
cld
ss
insb
xor
aas
cmp
scas
lods
repnz
push
xchg
push
push
ljmp
andb
pop
inc
and
scas
and
outsb
adc
cmp
and
cli
cltd
mov
push
adc
test
fcoml
inc
sti
lock
mov
jmp
adcb
cmp
test
push
test
add
addr16
mov
daa
inc
stos
mov
mov
es
pop
shll
sbb
in
xchg
icebp
jle
loopne
outsb
sbb
xor
mov
icebp
mov
or
fs
adc
cltd
jge
fs
add
fcoms
lret
in
daa
outsb
dec
cmp
fdiv
jbe
orb
fwait
add
mov
gs
sbb
xorb
add
test
sub
ljmp
rcll
loopne
mov
es
mov
push
inc
orl
mov
sub
shlb
in
sbb
std
jecxz
shrd
lahf
mov
sub
mov
jge
adc
pop
lock
sub
xlat
test
mov
je
adc
sbb
or
inc
mov
inc
jp
xorl
xchg
repnz
js
mov
leave
pop
cmp
loopne
xchg
xor
push
xchg
imul
jb
mov
lock
jno
fildll
jae
icebp
dec
xchg
push
aas
xchg
inc
icebp
jecxz
mov
in
xchg
ret
mov
les
enter
mov
dec
cli
push
shlb
js
insb
mov
add
xchg
nop
sub
mov
sarb
bound
int3
cmpsb
ds
imul
or
pop
pop
cmp
int
aad
push
mov
arpl
mov
int
cmp
jno
dec
push
xchg
xchg
sbb
lock
mov
movsl
push
push
pop
shl
ret
and
lret
pop
in
sub
fdivl
mov
push
sub
out
mov
lcall
int3
psrlw
mov
and
sbb
mov
push
fcoml
adc
fiadds
ja
stc
clc
push
sub
lock
mov
dec
test
or
loopne
fdivr
xorl
sbb
fs
adc
push
mov
mov
mov
inc
cltd
shll
std
scas
xor
cmp
je
ret
jno
gs
aaa
test
cmpb
or
sbb
lock
enter
mov
cmp
pusha
out
les
fisttpl
cmp
pop
shrl
xor
push
loope
or
adc
cmp
or
in
jp
mov
sbb
push
notb
adcb
stos
addl
mov
mov
xor
xor
loopne
xor
sbbl
lds
dec
sbb
mov
loope
mov
stc
sub
movl
std
and
inc
mov
loope
xchg
outsb
inc
mov
inc
sub
push
inc
inc
sub
mov
push
pop
jg
mov
stc
ds
jge
inc
rolb
and
shll
ror
icebp
into
dec
inc
scas
add
cld
push
adc
cwtl
fwait
jge
dec
lret
int
rorb
dec
in
addr16
sub
in
or
in
and
insb
in
mov
and
call
push
and
test
xlat
sbb
in
data16
cmp
ja
movaps
mov
and
and
or
nop
jo
cmp
dec
mov
lea
outsl
xchg
movsl
ss
adc
loopne
das
int3
scas
cmp
imul
push
pop
loop
rcrb
inc
cltd
and
les
mov
insl
cmp
repz
rclb
out
xor
shlb
or
xor
imul
mov
sub
fmull
shl
roll
bound
cmp
in
aam
mov
xor
subl
outsb
cwtl
dec
lods
fwait
xor
mov
pop
xor
fistpl
xchg
dec
bound
sbb
pop
push
mov
adc
repnz
inc
jb
mov
orl
lret
add
ret
pop
mov
mov
in
movsl
and
push
xchg
or
adcl
fmuls
sarb
in
movsb
sub
sbbl
cld
das
push
inc
repz
stc
rep
leave
mov
gs
enter
cltd
outsl
or
add
mov
pop
pavgw
mov
push
xor
jbe
dec
pop
hlt
sub
add
push
mov
aas
ja
or
xchg
fwait
and
inc
pop
mov
out
push
fisubs
fwait
mov
xor
fldl
outsb
inc
adc
xchg
arpl
js
cmpsb
roll
sbb
inc
push
enter
pop
sbb
popf
lods
out
dec
adc
leave
cmpsb
je
mul
xchg
mov
test
mov
cwtl
ret
adc
cmpsl
pop
fsubr
in
sbb
repz
cmpsl
in
adc
mov
loop
xchg
push
repz
xor
fiadds
lret
sub
and
lock
push
jl
scas
sarl
mov
data16
xor
adc
idivb
mov
inc
push
pop
loope
or
jge
sbb
enter
sbb
mov
push
subb
jb
adc
pop
movsb
arpl
sbb
adc
xchg
push
mov
fidivrl
push
pushf
and
int3
sahf
scas
iret
hlt
pusha
push
ret
jmp
sub
push
cmpsb
xor
add
int
call
bound
sub
mov
jno
mov
cmp
push
cmp
fnstcw
cwtl
dec
sti
add
sarb
cmp
fistpl
mov
add
cs
mov
out
shlb
push
mov
dec
imul
dec
mov
out
imul
adc
neg
sbb
or
lret
xchg
iret
mov
xor
push
ret
jne
es
xor
mov
ljmp
movsb
mov
dec
mov
scas
xchg
repz
std
xor
enter
shlb
push
xchg
orb
jb
not
aaa
nop
stc
aad
jno
in
cmpsb
add
ja
inc
es
mov
roll
aas
scas
or
andb
je
push
out
cmp
lret
adc
sub
fcoms
push
popf
lret
sbb
cld
aaa
enter
ljmp
ja
sarl
outsl
sub
jecxz
push
ljmp
push
lahf
test
jnp
ret
leave
std
adc
ljmp
arpl
push
sub
push
pop
fistpl
mov
or
popf
sbb
sti
jle
push
outsb
inc
inc
or
jmp
out
test
in
movsb
dec
clc
in
divb
dec
arpl
popa
pushf
shll
lds
dec
lock
int
pop
cli
sti
add
xor
iret
imul
dec
cmp
and
and
icebp
add
mov
fimuls
sbb
xchg
xor
push
dec
fs
mov
pop
loopne
jg
shll
in
add
gs
cs
test
cmc
hlt
add
fwait
push
cmc
divl
inc
testb
or
out
adc
daa
shrl
xor
nop
push
pop
mov
jb
lcall
inc
mov
test
inc
sub
and
cwtl
movsl
cmp
dec
inc
int
scas
mov
mov
faddl
enter
dec
mov
pop
or
fcomi
push
cmp
leave
nop
push
sub
into
jge
int3
mov
or
ret
leave
stc
fsts
call
scas
push
cltd
pop
sbb
jl
fidivrs
lds
push
ja
in
cli
outsb
andl
gs
sti
mov
js
lret
mov
stos
and
ror
test
ss
cmc
xor
push
push
inc
sbb
jmp
sub
jge
sub
lods
pop
add
adc
cmp
dec
in
outsl
jbe
fstps
mov
mov
adc
sbb
outsl
xchg
out
sbb
outsl
dec
in
sbb
dec
sti
ja
subl
fs
xchg
dec
mov
adc
sub
test
jg
mov
aam
push
push
repnz
sarl
std
aad
xchg
outsl
mov
int
pop
jp
fistpll
inc
inc
sahf
nop
push
das
icebp
mov
incb
push
cli
fisubrs
nop
dec
adcb
cmc
sub
adc
fstpl
pop
test
xchg
sub
or
push
mov
call
pop
shl
adc
ret
inc
in
fimull
and
iret
jno
ret
mov
callw
jecxz
pop
lret
xchg
rorb
push
dec
outsl
out
cmc
addr16
gs
mov
bound
out
aaa
ljmp
mov
dec
push
shll
mov
xor
add
sub
arpl
mov
sbb
std
mov
cmpsl
jmp
popf
inc
xchg
cltd
lods
cli
scas
xchg
int
xchg
push
clc
movsb
jb
jmp
cmpsb
jbe
test
test
push
mov
mov
mov
pop
sti
push
pop
push
jle
rcl
add
popf
lret
xor
ss
push
lods
out
dec
fadd
jo
lret
add
addb
cltd
loop
imul
leave
loopne
fmuls
movsl
sbb
out
pop
fbstp
add
mov
ss
pop
fldcw
add
enter
dec
push
adc
mov
sbb
xchg
fwait
enter
or
and
lods
inc
imul
cltd
jle
mov
push
jecxz
arpl
cmpsl
add
pop
cs
inc
mov
lds
xchg
mov
aad
mov
mov
cwtl
add
test
dec
adc
fxch
adc
sti
aad
mov
inc
rorl
pop
xlat
loope
ds
mov
jg
xchg
sti
sbbb
dec
xchg
negb
sub
and
xor
mov
lret
adc
inc
cmpsl
jne
xchg
insb
cmp
mov
ret
cmp
int
aas
cmp
mov
and
adc
push
icebp
dec
adc
mov
movsl
call
mull
lret
int3
sub
stc
out
push
into
unpckhps
mov
push
ljmp
test
inc
test
lods
jmp
or
std
xlat
hlt
xchg
jg
outsl
push
xchg
sbb
mov
in
xchg
mov
insb
imul
mov
adc
int3
mov
jae
pop
inc
insl
orb
ds
jae
dec
call
jmp
mov
inc
lock
fadd
push
sbb
jae
jo
out
fstl
andl
xor
push
sahf
mov
insb
push
lahf
mov
fistpl
mov
pop
mov
or
mov
fimuls
andl
mov
and
jge
pusha
aas
scas
or
add
repnz
in
test
or
jbe
pushf
xor
push
int
push
sub
and
add
movsl
fildl
test
sbbl
dec
std
mov
in
push
icebp
mov
cmp
int3
leave
dec
pop
lock
lcall
cmp
mov
fdivl
arpl
outsb
gs
pop
shlb
daa
dec
add
mov
addr16
pop
insb
and
lret
hlt
divl
outsl
push
je
push
fnstsw
mov
clc
inc
pop
lds
mov
dec
gs
addr16
mov
nop
inc
or
mov
jmp
mov
xlat
data16
cmpsl
and
dec
mov
push
adc
sbb
lds
mov
lods
xor
jbe
loope
mov
cmp
sbb
test
pop
addr16
jno
xor
mov
or
out
sub
pop
sub
fnsave
mov
jmp
mov
mov
lock
add
jmp
imul
xchg
into
add
and
fstl
cs
cli
roll
subl
repnz
call
cmp
and
push
and
inc
push
mov
or
pop
and
dec
iret
xorb
jg
pop
pop
stos
cld
fst
cmc
cld
bound
nop
mulb
sbb
add
int3
lcall
sub
inc
adc
adc
and
fstps
vpmullw
in
push
dec
ror
push
frstor
sbb
or
jle
push
sub
sub
mov
xor
push
test
jmp
and
push
stos
popa
je
push
cs
lcall
and
mov
std
mov
cwtl
decl
sbb
push
inc
xor
add
mov
mov
and
add
xchg
leave
loopne
adc
sub
and
push
sbb
int3
mov
clc
adc
mov
and
xchg
bound
or
bound
daa
dec
pop
loopne
xor
mov
push
push
mov
popf
jnp
cltd
out
lds
sbb
jo
mov
and
push
sti
test
test
xchg
scas
adc
add
push
xchg
jge
cli
fimuls
test
jo
out
jle
mov
dec
stos
fldcw
fidivl
js
rorl
int3
mov
or
test
fdivs
xchg
stos
pop
aas
dec
imul
add
enter
lods
sub
mov
test
stos
test
aad
popa
mov
dec
inc
push
push
push
in
dec
or
mov
xchg
jne
out
mov
jp
das
mov
xor
lods
push
nop
fwait
pushf
loopne
ret
push
int3
dec
repz
dec
test
hlt
or
jl
xlat
sarl
ret
and
mov
mov
hlt
xor
sbb
arpl
pop
push
int3
das
cmp
cs
sbb
fcoml
xchg
pusha
push
sti
inc
adc
xor
lock
imul
pop
mov
enter
sub
cwtl
jl
add
dec
movsb
dec
sub
in
sbb
popa
mov
in
or
rcrb
xor
add
add
je
test
out
pop
inc
adc
xor
outsl
sub
addl
iret
in
data16
leave
inc
mov
mov
cmpsl
xchg
mov
popf
cmp
popa
push
negb
lea
or
push
hlt
dec
inc
push
arpl
mov
fcmovnu
dec
push
mov
aas
mov
sbb
adc
jno
aaa
xchg
pop
xchg
jmp
push
outsl
push
cmp
loope
jge
into
jmp
imull
call
int3
sub
push
or
das
adc
add
mov
imulb
adc
sbb
xor
pop
fcmovb
aas
mov
decb
dec
mov
mov
adc
lahf
adc
in
icebp
inc
je
clc
push
in
jg
negl
cmc
inc
mov
sub
lods
cwtl
pop
fstpt
or
jecxz
mov
fmuls
dec
dec
push
sbb
decl
mov
int
adc
adc
cwtl
ljmp
rcrl
shrl
adc
jno
lock
cmpsb
ja
subl
repnz
jbe
int3
pop
inc
into
outsb
xor
adc
xchg
repz
cmp
add
mov
mov
scas
mov
fiadds
jmp
sbb
jle
sub
les
push
cmp
iret
lock
dec
and
inc
push
cs
cmp
ss
test
movsb
in
lock
jl
push
cli
pusha
aad
sahf
in
mov
and
int
mov
popf
sbb
lahf
aam
ret
ss
shll
stc
adc
push
push
das
or
inc
xlat
or
mov
rcr
test
dec
out
xor
mov
mov
lock
and
xchg
imul
fdivrs
xor
movsb
outsl
ret
cs
lds
push
popa
incb
jp
lcall
mulb
inc
rsqrtps
push
cld
call
sarb
pop
sub
js
scas
popa
imul
clc
das
fiadds
call
fwait
lret
cwtl
aam
nop
sbb
popa
jbe
or
jae
decl
jmp
mov
pop
in
out
cmp
daa
sbb
or
sbbb
jge
push
mov
inc
ret
xchg
mov
das
xor
push
ret
lock
cmpsb
sbbl
jmp
push
js
sbb
lret
pop
ss
inc
cwtl
rcll
out
ljmp
pusha
jnp
mov
mov
cli
decb
and
add
push
scas
movsb
mov
int
nop
daa
out
out
das
js
mov
rcrl
and
push
fs
je
mov
cld
push
mov
inc
test
mov
and
jmp
xlat
rol
hlt
loop
stos
out
cmp
cmp
fidivrl
jb
push
xchg
jge
test
jno
dec
int
and
mov
jno
cltd
xor
and
jb
test
push
inc
imul
push
stos
ret
or
sbb
xor
nop
jae
jg
es
dec
cmp
in
sub
dec
idivb
pop
pop
mov
jae
dec
sub
insl
pop
xor
imul
jecxz
lock
js
cmp
aad
rclb
shrl
rorl
enter
mov
dec
mov
cmpsl
or
movsb
cltd
imul
clc
dec
lcall
inc
dec
sub
mov
or
push
cmp
jp
pop
pop
and
sbbl
xchg
adc
loope
push
int3
into
int
inc
pop
rolb
mov
mov
insb
movsl
or
sbb
and
inc
push
pop
ljmp
insb
add
in
ss
add
aam
rcrb
pushf
imul
cmp
mov
lcall
outsb
push
sub
ret
arpl
mov
sbb
pop
pop
mov
shl
mov
add
adc
cmpsl
push
jle
push
sbb
lods
daa
aaa
mov
sarl
xchg
mov
lods
jl
dec
push
stos
mov
mov
mov
movl
negb
xor
cld
cmp
push
mov
out
movsb
test
xlat
mov
call
js
jbe
mov
dec
and
xor
insl
popa
cmc
mov
aas
mov
inc
mov
pop
cmpl
dec
cmpsb
mov
incb
cmpsb
mov
repnz
fstps
and
outsl
inc
pop
movsb
ss
xchg
add
push
loope
adc
mov
sbb
add
ss
mov
mov
lods
mov
cmp
daa
or
and
test
inc
or
out
fsts
rcrl
mov
mov
lock
xor
fiadds
xorl
mov
pop
jns
xlat
lret
mov
dec
jno
into
into
lds
mov
aad
lahf
xorl
call
add
sahf
adcl
jle
mov
mov
movsl
and
mov
sbb
xor
cmpsb
dec
mov
adc
push
bound
stc
nop
mov
sub
int
xorb
inc
test
pop
lcall
mov
out
push
dec
popa
adc
jae
cli
leave
lret
dec
adc
and
sbb
mov
cmp
cmp
adc
dec
test
sbb
insb
test
xchg
repz
and
hlt
xchg
cmp
xor
and
push
push
xlat
cld
imul
out
xchg
sbb
scas
dec
push
movsb
movsb
inc
hlt
mov
push
mov
cmpsb
xchg
dec
lea
inc
mov
cli
mov
stc
jl
pop
pop
sbb
int3
adc
cmp
and
cmp
mov
in
jb
sub
pop
fisubrl
mov
aad
dec
push
and
nop
pop
push
leave
adc
scas
loopne
xorb
loopne
fdivl
pop
mov
nop
cmp
push
adcl
cltd
sbb
jl
aad
daa
stos
jp
nop
popf
mov
shll
dec
and
lods
dec
pop
test
sbb
sub
jo
dec
adc
dec
dec
add
hlt
scas
jb
xchg
xchg
push
sbbl
inc
jg
or
cs
jae
mov
or
jp
jbe
in
lock
rol
xchg
mov
stc
out
mov
pop
sbb
in
or
out
xchg
jle
sub
arpl
hlt
or
push
cs
xlat
stos
add
sub
mov
pop
loop
push
pop
xor
popf
pop
fmulp
xchg
lcall
add
mov
push
or
out
into
movsl
push
negb
jae
pop
jnp
shlb
inc
hlt
movsb
cmp
ret
push
push
rcrb
push
add
fbstp
mov
fistpl
out
xchg
sbb
sarl
orl
or
push
mov
sti
popf
and
scas
je
shll
mov
int3
sbb
inc
aas
imul
in
sbb
lahf
outsl
cmp
cmp
gs
es
or
in
ret
mov
pushf
mov
cmpsl
sarl
jo
inc
fstl
mov
aaa
add
sarb
jmp
and
insl
cmpl
mov
adc
dec
bound
sub
mov
jo
js
xchg
loopne
hlt
out
out
leave
adc
push
mov
and
cld
aas
scas
aas
outsb
enter
ljmp
push
adc
pop
ficompl
xor
add
jp
push
inc
mov
bound
dec
jbe
stos
dec
jne
pop
mov
push
push
inc
std
aaa
mov
inc
mov
rclb
repnz
shll
lea
hlt
fstpt
repnz
push
sbb
mov
movntq
out
sbb
mov
push
and
xchg
das
adc
mov
and
cmpsl
mov
fisubrl
repnz
scas
insl
jp
jne
imul
dec
and
fsts
adc
xchg
dec
repnz
es
jl
mov
adc
pop
or
mov
xchg
jno
mov
jmp
scas
inc
call
jne
mov
lds
xchg
lret
outsb
mov
push
push
cmpsb
repz
xchg
and
push
mov
add
addr16
mov
loope
and
sub
aad
xchg
enter
imul
xchg
out
mov
or
ss
push
and
adc
mov
push
rol
lods
ds
jge
enter
jge
push
movsl
jns
and
mov
test
in
cmpsb
pop
add
push
data16
loop
sbb
movsl
pop
cmpsb
mov
add
pusha
sub
adc
lret
scas
mov
enter
or
sbb
repz
sbb
jnp
push
or
idiv
repnz
push
and
xchg
gs
push
pop
inc
int
fstl
pusha
pop
jl
push
sub
std
mov
mov
stos
push
ret
mov
xor
sbb
aad
push
dec
lds
pop
gs
pop
pop
jno
sbb
cld
rcrl
stc
sbb
out
scas
mov
ss
sub
jp
arpl
cmp
testl
mov
in
inc
adc
insb
dec
mov
sbb
andb
pop
stos
mov
cmpsb
add
test
out
scas
dec
div
pop
inc
jb
mov
cwtl
roll
xor
mov
mov
mov
std
rclb
sbb
push
test
sbb
push
cmpsl
mov
loope
dec
ficompl
in
jg
loopne
jns
fxch
inc
cmpsb
cmp
xorl
icebp
fwait
cmpsb
mov
inc
insl
cli
test
cltd
lock
push
mov
sbb
mov
and
adc
test
fsubrs
cmp
insl
cmp
pop
hlt
subb
nop
mov
mov
jb
and
jb
add
jns
mov
stc
adc
inc
sbb
scas
cmp
jle
mov
mov
xor
mov
adcb
pop
mov
iret
jecxz
sti
mov
out
sub
movsw
cwtl
xor
aam
and
sub
clc
out
push
adc
jae
push
pop
push
xchg
or
xchg
inc
and
or
nop
sahf
cmpsb
repz
orl
pushf
push
mov
stos
insl
mov
xor
jge
movsb
je
and
mov
test
repz
push
mov
jg
loop
xor
jle
mov
mov
pop
int
loop
fsubrl
xor
mov
loop
xchg
inc
cwtl
mov
cmp
orl
push
daa
imul
xor
or
inc
decl
test
loop
js
gs
sahf
test
lret
adcl
lea
fistps
sbb
mov
sub
jae
cmpsb
jnp
stos
fdivl
leave
sub
out
clc
imulb
andb
cmp
jne
lea
les
push
mov
add
fcmovne
test
test
mov
cmovg
dec
sbb
cvtpi2ps
leave
lret
loopne
sub
out
dec
and
outsb
jno
fs
leave
and
mov
mov
stos
pop
adc
sub
jae
fwait
mov
jo
pop
xchg
pop
xchg
sbb
shll
insl
mov
add
pop
sbb
sbb
jne
sbb
sti
fisttpl
cmpsb
sbbl
dec
inc
mov
xor
imul
xchg
mov
ja
movsl
aaa
les
adc
push
and
adc
lods
out
iret
daa
jecxz
test
movsl
push
loopne
inc
ja
inc
enter
add
idivl
xchg
sti
cmp
incl
cmp
jb
adc
and
jg
lcall
sbb
xchg
aaa
and
in
out
and
push
mov
and
xchg
test
jg
or
in
fiaddl
xor
pop
sarb
ret
ret
inc
packsswb
ds
cwtl
mov
xorl
jb
sti
and
push
mov
dec
cmpsb
mov
pop
jp
push
mov
fildll
in
push
pop
sbb
pop
cmpl
outsb
push
mov
sub
mov
pop
inc
sbb
mov
xchg
fnstcw
dec
and
in
or
or
xlat
test
out
jg
jno
call
rdpmc
inc
push
testb
dec
movsl
push
sbb
js
ja
in
icebp
test
ss
test
mov
push
inc
test
scas
xchg
jb
mov
mov
dec
xchg
fstpl
testb
sub
loop
sbb
pushf
aaa
repnz
sbb
cltd
cmp
ja
stos
loopne
push
out
push
rorl
inc
bound
call
sbb
and
sub
movsl
inc
pop
or
jg
dec
push
mov
mov
lods
daa
pop
xchg
push
push
inc
imull
xchg
add
out
cld
pop
mov
push
and
adc
xchg
adc
rorb
xlat
add
imul
lret
sub
std
subps
pop
in
aas
mov
stos
test
xor
pop
sbb
mov
jae
mov
mov
and
push
sbb
sbb
addr16
xchg
pop
pop
sub
cmp
and
imul
test
sub
push
add
std
nop
xor
sbb
pop
fisubs
icebp
in
pop
xchg
pop
pxor
dec
dec
in
or
in
mulb
cmp
out
mov
and
push
mov
push
xchg
dec
mov
shr
adc
lock
mov
mov
mov
pop
jl
test
ret
and
inc
jnp
repnz
push
clc
insb
les
addr16
das
cli
int3
pop
ret
adc
cmc
lret
pop
fisubrl
and
dec
xchg
addr16
inc
cmpsb
inc
sbb
in
addl
clc
push
pop
mov
pop
pushl
clc
adc
pusha
clc
fisubs
sub
icebp
repnz
jmp
scas
fwait
sti
fildll
lea
repnz
lea
sub
sub
mov
loopne
lds
movsl
cmpsb
js
loop
repz
cmp
ja
addr16
adc
aam
call
je
out
fimuls
cmp
and
out
das
xor
jecxz
cwtl
inc
stos
or
pop
or
test
sbb
stos
fsts
jae
mov
pop
jns
scas
xchg
mov
add
sub
lahf
ret
xor
fcompl
ret
pop
sub
stc
fcom
xor
stos
xchg
aaa
icebp
or
jp
jno
lods
sbb
int
fcom
loope
mov
loope
shl
xchg
enter
movhps
fsts
test
and
xchg
or
sub
dec
pop
mov
popa
or
mov
mov
stos
cmpsl
cli
and
and
jmp
outsl
pop
jns
sti
insw
jecxz
add
jl
sbb
data16
insb
cmp
shr
in
aam
xchg
add
out
in
jge
mov
lret
jne
mov
add
mov
std
imul
sbb
xchg
xchg
divl
lods
push
pop
push
and
cmc
inc
push
inc
cmc
iret
jp
in
lahf
out
pop
mov
mov
inc
adc
mov
into
pusha
bswap
nop
mov
sbb
test
mov
test
adc
add
sub
mov
test
jp
testl
mov
lret
ret
daa
cli
add
cltd
pop
jle
push
or
iret
dec
lea
loop
fucom
out
les
popf
ret
jmp
dec
push
dec
in
mov
das
add
push
xchg
int3
mov
pop
out
sub
jno
enter
adcb
jmp
dec
ficoms
out
loop
xchg
movsb
iret
addl
aas
pop
mov
sub
mov
mov
inc
clc
pop
or
sub
xlat
lahf
and
sub
es
mov
add
xchg
int3
mov
xchg
and
sbb
adc
incl
std
fstpt
cli
cmpsl
jmp
pop
sub
in
pop
orps
outsb
out
iret
mov
dec
sub
cld
cmpb
sbb
push
jmp
nop
sbb
push
sbb
dec
arpl
call
fsubl
cmp
xchg
addr16
xchg
xor
xchg
and
pop
xor
adc
jg
inc
pushf
cmpsl
test
mov
inc
pushf
cmpsl
sarb
loop
pop
xor
pop
inc
pop
jns
xlat
mov
rorb
jge
push
ljmp
cs
xor
cmp
sub
test
sbb
outsl
inc
push
fadd
lods
mov
scas
loope
imul
test
stos
mov
add
jnp
cmc
mov
dec
inc
lock
lods
add
popa
xlat
push
mov
xchg
or
push
xorl
shrl
int
sub
sub
scas
jge
test
ret
insl
movsl
mov
push
xor
push
fdivrs
sarl
dec
daa
sysexit
fmull
xor
pusha
int
fdivrp
outsb
sub
xchg
jo
push
add
popf
in
mov
xor
out
push
lods
dec
adc
into
adc
sub
mov
bound
pop
xor
pop
push
shl
aaa
lahf
out
add
fstl
push
aaa
out
arpl
into
stos
xchg
jae
mov
dec
add
repz
lea
xchg
jns
push
cmp
mul
push
push
repnz
lods
mov
ret
sbb
ja
out
push
stos
xchg
adc
pop
movsb
pop
loopne
leave
push
sbb
jne
cvttps2pi
in
addr16
jo
enter
int
lret
mov
sbb
popa
pop
pop
cmp
insb
mov
xchg
out
jecxz
cmp
mul
push
xchg
xchg
stos
pop
out
aas
pop
repnz
sbb
and
or
xchg
push
test
cmp
repnz
mov
mov
inc
pop
jge
pop
pop
rcrb
stc
loope
pop
repz
mov
or
idivl
not
aaa
fidivrl
iret
push
inc
popf
outsl
jle
cli
jno
dec
push
orl
xchg
inc
cmp
insb
sahf
jl
sbb
roll
adc
lahf
sub
jb
ret
pop
add
xchg
rcll
sbb
push
jae
jne
sbb
adc
ljmp
mov
scas
insb
in
sti
push
xchg
inc
xchg
loopne
sub
adc
call
mov
into
adc
test
and
xchg
mov
or
lea
out
test
mov
clc
out
outsl
xor
push
sbbb
shll
out
addr16
cmp
lods
cli
ret
leave
inc
xlat
jge
mov
daa
adc
pop
ds
jl
mov
mov
das
sub
push
add
mov
push
mov
inc
push
jle
mov
lds
xor
push
inc
inc
cmp
inc
cmp
aas
int3
mov
stc
inc
test
ljmp
sbb
sbb
jp
pop
bnd
in
aad
scas
cmp
cmp
lea
out
out
or
or
adcl
stos
mov
test
lret
mov
jo
call
pushf
pop
push
xchg
stc
nop
ja
xlat
dec
das
adc
or
out
xor
not
sbb
clc
mov
lock
and
dec
enter
outsb
leave
lods
lret
xor
inc
cmp
add
inc
xchg
stos
jmp
add
stc
and
into
test
jg
jl
jne
push
or
dec
or
sbb
dec
sbbb
bound
lahf
sbb
cld
sahf
lds
subl
add
mov
filds
or
xlat
sahf
lods
in
mov
pop
sbb
jo
and
pusha
mov
movsb
pusha
lahf
mov
and
xchg
add
pop
sbb
in
jmp
pop
ret
mov
rcrl
fldcw
mov
outsl
cmp
sbb
xchg
stos
add
loope
inc
fistl
popa
negb
jbe
add
xor
cmp
in
adc
mov
pop
adc
sub
out
xor
arpl
lahf
arpl
xchg
xchg
shll
jmp
fsubl
roll
adc
test
fs
out
jne
xlat
mov
lods
sub
add
and
je
iret
xor
es
jg
aam
add
out
and
cmpl
out
or
mov
mov
push
jae
ja
out
aaa
jo
cmpl
mov
inc
repnz
cmpl
insl
mov
aaa
xorl
idivb
push
lret
dec
push
enter
mov
xor
push
or
ret
mov
lret
ja
ljmp
lea
popf
call
mov
sub
mov
push
jnp
push
lcall
in
aam
movsb
push
loope
push
and
mov
leave
push
pop
cmp
imul
lock
idiv
ja
mov
sub
inc
dec
jle
ja
mov
test
std
lea
shl
div
xor
fs
sbb
pop
dec
aam
clc
xchg
pop
mov
add
mov
sbb
xchg
mov
mov
mov
xchg
in
pop
repnz
mov
jmp
daa
mov
mov
mov
jl
pop
arpl
fbstp
sub
pop
pop
out
sub
mov
and
sub
movsl
mov
mov
scas
int3
pop
enter
or
data16
mov
pop
in
into
daa
jg
jo
mov
outsl
jg
mov
or
cmc
pop
cmp
popf
fisubrs
xor
mov
cmp
pop
or
adc
ja
loop,pn
lods
in
dec
adc
mov
fbld
fs
cmp
inc
mov
fwait
lods
add
das
dec
mov
add
test
cmp
add
dec
and
jbe
adc
jge
jge
mov
or
int
xchg
push
mov
lods
in
sbb
jnp
add
mov
mov
loope
inc
nop
pop
and
sbb
mov
mov
push
and
lret
lods
push
pop
rorb
jmp
xchg
mov
nop
inc
xor
push
into
js
jp
in
pop
arpl
xor
adc
lret
lea
dec
push
xchg
pop
into
les
int3
mov
repz
aas
mov
das
addr16
push
insb
mov
mov
xor
sbb
cmp
mov
or
dec
call
lahf
sbb
pop
mov
xchg
ret
cld
mov
mov
arpl
xchg
pop
jb
push
sub
mov
into
jno
lcall
loopne
cmp
add
cmp
cmp
mov
adc
push
pop
inc
push
and
mov
push
orl
ja
cmp
dec
fwait
dec
fidivrl
cmp
stc
jae
pushf
mov
jbe
pop
out
cli
test
push
scas
sbb
mov
lds
adc
jg
lds
jae
inc
push
inc
in
int3
xor
push
adc
jns
frstor
xlat
dec
jno
ficoms
xchg
pop
lea
popf
shll
out
imul
or
repnz
loope
mov
neg
sar
roll
inc
ficompl
aad
or
or
jp
out
dec
inc
add
icebp
sub
adc
push
jmp
mov
mov
xor
pop
jmp
xchg
sbb
cmpsl
outsl
xor
add
scas
out
push
std
test
push
cli
dec
bnd
push
stc
mov
fs
xor
popw
xchg
push
and
hlt
mov
xchg
mov
cltd
and
movsl
pop
sbb
ljmp
and
pop
mov
add
shlb
jo
loope
push
cmp
xchg
sti
js
pusha
out
out
ja
aas
pop
mov
pop
jns
sub
pop
jae
push
and
ljmp
pop
iret
jbe
cmp
pop
movsl
ret
call
mov
pop
pop
and
lret
jnp
cltd
push
stc
mov
or
outsl
push
inc
inc
out
and
and
sbbb
stos
pop
test
psubq
test
lea
sbb
adc
mov
shll
ds
call
lods
xor
push
shr
test
aam
aaa
adc
das
mov
insl
mov
ret
mov
in
push
daa
imul
adcb
fs
clc
push
sbb
das
jp
pop
lcall
lods
jae
mov
lcall
out
xor
mov
mov
or
or
mov
xor
loop
enter
mov
pop
imul
test
ja
stos
std
outsl
add
jmp
ljmp
out
daa
fdivrp
popa
movb
orb
pop
mov
scas
icebp
cld
shll
sub
jb
inc
adcl
xor
pop
jp
inc
inc
cmpsl
rcrl
test
cwtl
mov
push
movsb
hlt
out
jnp
loop
stos
lret
sub
push
mov
push
sbb
sub
into
cmpsl
mul
mov
push
into
ja
push
fs
pop
rcrl
jl
xor
leave
inc
cld
stos
sub
daa
insl
ror
add
xor
push
cmpsb
push
iret
fsubrs
rcll
push
push
jo
dec
inc
mov
les
xchg
inc
add
jnp
movsb
rorl
mov
sub
sbb
jle
icebp
mov
outsb
rcrb
int
in
sub
aas
pushf
movsl
xor
sub
loope
add
push
and
xor
out
imul
lea
rorb
or
repnz
jp
gs
add
xor
popa
adc
pop
mov
leave
or
jo
push
cmp
push
fucom
pusha
fidivs
or
fidivs
pusha
faddl
mov
enter
icebp
inc
mov
in
gs
scas
jnp
mov
cmpsb
inc
pop
hlt
adc
sti
in
data16
pop
cld
mov
cmpsl
rol
js
add
clc
pushf
in
inc
pop
imul
outsb
mov
add
lods
mov
loop
cmpsb
mov
lods
adc
rcll
lea
pushf
mov
dec
outsl
loop
test
ss
js
jo
fwait
inc
dec
lods
add
int3
loopne
enter
mov
es
adc
imul
dec
sbb
sub
in
lea
pop
pop
dec
ret
bound
inc
cmp
mov
push
add
xchg
push
out
add
mov
in
call
xor
outsb
dec
adc
pusha
mov
cmpsl
fcmovbe
mov
scas
das
pop
jmp
pop
fdivr
andl
and
in
add
push
shlb
aad
jnp
dec
mov
insl
mov
mov
mov
arpl
cmp
aas
or
fs
mov
iret
inc
inc
jns
xchg
popa
and
xor
jge
int3
mov
addb
push
dec
into
ret
push
xlat
push
xor
in
jno
clc
lcall
or
pop
sbb
decb
mov
fimull
inc
sub
xchg
cltd
test
sbb
push
xchg
and
adc
dec
lcall
adc
sbb
dec
pop
dec
mov
lock
repnz
jmp
ljmp
or
or
mov
out
test
cmpsb
push
out
ja
ljmp
push
and
xor
ret
and
pushf
out
and
push
or
xor
pop
xchg
push
mov
mov
jl
outsb
adc
cmp
jne
imul
outsl
cmp
xchg
cltd
push
jmp
mov
call
call
les
loope
push
cmp
and
jge
sub
lret
rclb
jle
push
sbb
push
out
pop
jg
cmp
mov
pop
outsl
ret
or
notl
sbb
inc
adc
push
cs
mov
cmpb
mov
mov
popa
pop
adc
inc
out
sahf
pop
jns
dec
cwtl
mov
popf
sbb
add
sbb
xchg
lcall
sub
iret
push
mov
gs
stos
add
sahf
ss
xchg
ljmp
mov
push
ror
cmp
jne
add
ss
xor
enter
push
insl
scas
jl
test
cli
lock
push
pop
mov
push
push
into
pop
xchg
pop
lock
iret
int3
sub
sbbb
bound
cwtl
or
dec
push
fsubrs
ds
addl
inc
loopne
les
int
adc
je
fldcw
mov
aas
and
cmpsl
ss
ss
mov
je
bswap
scas
stc
add
pusha
hlt
test
adc
mov
dec
sarl
scas
call
ss
xor
sti
fiadds
xchg
or
gs
pop
and
int
push
push
cmpb
das
nop
ret
testl
add
xchg
cld
or
xor
or
push
mov
dec
add
jg
jle
xchg
into
or
sub
pop
xchg
stos
xchg
adc
ja
pop
fsts
mov
mov
push
scas
rcrb
dec
into
cmp
test
test
ds
jp
out
jmp
test
jb
insl
lret
imul
imul
clc
lods
dec
pop
pop
ret
xchg
inc
fsubrs
pop
data16
popa
aam
out
faddl
xchg
pushf
cmp
fildll
lock
fstpt
mov
sbb
jecxz
or
lods
popa
jbe
hlt
jmp
ja
mov
xchg
pop
adc
test
adc
scas
push
add
dec
sbb
sti
pop
lea
mov
jg
dec
int
mov
outsl
add
cmc
sub
jae
mov
cmp
jmp
xor
lea
jae
mull
pop
cmp
jle
int
ljmp
push
inc
xlat
cmp
ljmp
jne
mov
dec
stos
pop
pop
pop
or
test
mov
jecxz
in
cld
fstpl
jg
xor
pop
mov
mov
lds
lret
or
cmc
pushf
cltd
out
add
ret
lea
test
or
push
mov
std
pop
arpl
push
pushf
mulb
add
adc
xchg
push
movsl
sbb
sub
lock
lea
mov
xor
pop
pop
xor
pusha
mov
sbb
pop
lods
and
rcll
jecxz
in
push
pop
inc
mov
in
call
outsb
mov
push
imull
cmp
mov
test
push
inc
mov
fs
dec
sub
inc
divl
not
push
testl
iret
sub
jl
xor
cmpsb
sbb
jae
mov
stc
shll
inc
stos
sahf
jmp
loope
ja
cmp
lods
outsl
xchg
out
ret
mov
sbb
jmp
add
xchg
aaa
scas
sub
dec
xor
push
int3
imul
xchg
xor
andb
xchg
push
pop
stc
jmp
test
adc
cmp
mov
rcrl
push
arpl
lods
push
dec
dec
gs
adc
fistpl
add
std
dec
pop
sahf
jo
out
loopne
insb
stos
or
inc
arpl
mov
adc
inc
push
ljmp
incl
je
push
xchg
lahf
mov
icebp
dec
test
divl
dec
sti
rolb
dec
xchg
jae
enter
dec
lock
push
icebp
fmuls
mov
dec
pop
and
dec
adc
jp
out
inc
pop
insb
repz
push
cld
arpl
and
push
in
orl
jl
xchg
imul
mov
pop
mov
pushf
mov
stc
notl
mulb
push
pop
int
dec
out
insb
mov
or
dec
inc
cmp
mov
sarb
inc
xchg
adc
or
pop
popa
fstpl
fs
mov
int3
jnp
jo
out
inc
pushw
mov
sub
push
mov
out
cmp
and
and
int
out
fs
imul
inc
test
aam
test
test
notl
push
out
es
xorps
cmp
jne
or
push
outsb
xchg
and
outsb
clc
cli
fucomp
insl
sbb
xchg
test
hlt
shlb
nop
xchg
adc
in
call
sbb
fildl
js
sbb
cmp
les
movhps
xor
and
test
sub
sbb
cmp
jg
popa
in
adc
int3
int
in
mov
sbb
jge
cli
add
pop
add
loope
loope
stc
pop
mov
add
cmp
fdivrl
imul
maskmovq
xchg
mov
sbb
into
add
cmp
bound
shl
scas
dec
fists
cmc
je
in
or
lret
mov
inc
test
rol
jne
adc
je
test
push
aad
pushl
insb
jno
pop
cmp
and
xchg
andl
jo
dec
out
pushl
jnp
push
and
mov
sbb
das
and
push
sbb
mov
mov
enter
adc
pop
lret
rclb
enter
cld
loopne
inc
int3
dec
sbb
lea
jns
enter
sbb
adc
mov
out
clc
cld
in
mov
ret
mov
test
push
push
inc
cmp
mov
ret
mov
dec
cmp
or
cmp
xor
insl
inc
push
das
pop
divb
icebp
stos
repnz
push
xchg
bound
or
jae
cmp
xchg
inc
mov
and
jge
nop
cmp
lods
add
push
nop
repnz
mov
in
dec
lahf
leave
pop
fmulp
mov
mov
push
int
icebp
dec
ja
daa
subb
repnz
jo
movsb
outsb
mov
xor
iret
xchg
and
jl
mov
adc
jbe
mov
xchg
xor
jecxz
cli
sbb
adc
mov
pusha
loopne
pop
aas
sub
xor
sub
mov
jl
aad
in
sbb
mov
inc
jp
fiadds
into
xchg
fcoml
aaa
das
insl
sahf
cli
rcrb
pusha
jle
imul
lahf
in
in
xchg
add
out
rcll
arpl
das
ja
mov
aaa
addr16
popf
adcb
xlat
push
sbb
in
cmp
imul
cltd
imul
add
or
ficoms
imul
das
lods
ja
push
call
xor
fwait
push
lds
mov
lods
adc
lea
mov
pop
pop
stc
test
mov
mov
and
cltd
fs
pop
sbb
xchg
mov
sti
popf
lcall
popa
jns
cli
sub
push
aas
ret
or
sahf
jb
jp
cmpl
imul
aaa
cld
test
jno
add
xchg
rorl
fidivrl
push
out
outsl
mov
jb
mov
popf
bound
cld
add
out
call
or
fs
outsb
bound
jmp
adc
jg
mov
ret
push
lock
dec
mov
test
add
sbb
cmp
fsubs
sub
movnti
mov
fcoms
ffreep
rorl
or
or
mov
lahf
stc
scas
cmp
jg
adc
mov
and
dec
stos
cmpsb
mov
into
shlb
shrb
adc
movsl
or
jno
xor
mov
cmp
or
mov
xchg
scas
or
mov
lods
in
outsb
cli
shlb
jnp
mulb
adc
inc
mov
idiv
cmpl
shl
mov
cwtl
xor
pushf
cwtl
bound
fsubr
out
push
xchg
xlat
pop
add
fsts
xchg
shlb
inc
add
je
pop
rolb
cmpsl
add
mov
ret
push
pop
scas
inc
jle
mov
aas
pop
testl
pop
and
sar
addr16
pop
idiv
or
inc
xor
rep
pusha
adc
test
xlat
or
fucomi
sbb
loop
inc
pop
lods
pop
jne
mov
loope
add
fnstcw
imul
loopne
jle
jne
add
cmp
je
and
push
imul
sub
cmp
pop
add
add
cs
mov
ret
xchg
add
adc
push
aas
dec
mov
mov
add
mov
jo
outsl
stc
lea
in
ja
pusha
xchg
mov
mov
hlt
ljmp
push
inc
rorl
push
pop
test
loop
dec
cmp
aad
pop
or
arpl
lods
add
out
xchg
nop
stos
jbe
stc
cmp
sub
nop
cmp
dec
inc
std
push
aam
and
es
nop
in
pop
cmp
and
mov
popa
out
or
fmuls
getsec
fwait
xlat
scas
movsb
cmp
nop
lcall
mov
dec
or
adc
popf
icebp
add
lcall
mov
mov
leave
movb
out
inc
and
repnz
mov
dec
mov
repz
jns
rorb
mov
add
testl
and
in
fcmovbe
in
or
mov
mov
sub
jl
call
ficoms
inc
lret
xor
test
mov
shlb
shlb
sbb
int
xchg
fisubrs
xor
pusha
mov
fstl
adcb
mov
cmpsl
out
and
jne
mov
je
insl
sub
lcall
bound
leave
xchg
or
lret
ret
mov
testl
add
int3
loope
xor
or
dec
and
insb
lret
shlb
inc
mov
sub
out
or
std
cmp
add
dec
push
scas
sbb
arpl
pop
ds
pusha
scas
rcrb
mov
inc
or
mov
adc
int
out
aad
ret
sbb
xor
lahf
mov
cmc
mov
imul
test
mov
mov
repz
scas
dec
lcall
pop
movsl
stos
sbb
lret
mov
mov
adc
mov
stos
xchg
sub
scas
or
shll
sub
jp
movsl
shl
cmp
out
sarl
push
sub
pop
pop
add
pop
mov
lret
test
dec
xchg
stos
in
mov
dec
mov
inc
cmp
or
jp
mov
std
dec
in
cmp
sub
mov
sbb
shlb
and
mov
inc
cmp
mov
and
jns
ss
jg
adc
fs
bound
add
or
jnp
add
push
adc
sub
fistpl
add
pop
lds
mov
mov
jno
decl
pop
fisubrs
add
pop
dec
jmp
lahf
lock
add
mov
jnp
in
xchg
cmp
fs
repz
xchg
mov
add
jmp
dec
fsubs
xchg
movsl
stos
sti
iret
pusha
loop
rorb
mov
mov
outsl
fcmove
jo
xor
gs
push
out
stos
dec
lea
call
jecxz
xchg
shrl
icebp
cltd
mov
jl
rorl
pop
mov
loop
jbe
pushl
cmp
sti
dec
ja,pt
stc
bound
sbb
pop
add
mov
movsb
adc
mov
inc
fld
test
lods
out
inc
jecxz
fcmovbe
inc
cmc
push
jne
in
push
movsb
sbb
xchg
rorl
fwait
xorb
call
ret
std
test
cmp
dec
inc
jg
lret
lea
and
insb
fadds
js
jle
or
sub
or
dec
sub
arpl
xchg
dec
mov
jne
inc
xor
fistpll
or
loopne
and
inc
push
push
pop
mov
jns
pop
and
xchg
inc
repz
in
adc
sub
insl
adc
sahf
in
mov
jl
mov
jo
xor
rolb
lods
dec
mov
or
dec
jp
arpl
jl
in
movsb
or
cmp
push
pop
xor
in
and
jecxz
orl
aas
sbb
xchg
or
pop
sbb
xchg
sbb
adc
sub
repnz
xchg
fsubrl
push
jae
insl
aam
pop
out
lock
inc
lea
push
jle
in
pop
imul
add
leave
aad
and
jle
sbb
rcl
pusha
jns
cmp
repz
or
inc
sub
js
xor
movsb
insl
jbe
inc
test
inc
cmp
pop
inc
pop
sub
mov
xor
jl
imull
addl
sub
ret
pushl
jecxz,pt
jnp
ret
sahf
xchg
add
add
fmul
into
jl
hlt
loop
pop
adc
and
cltd
test
in
ret
mov
in
sbb
mov
or
imul
pusha
scas
lret
test
mov
xchg
sahf
jno
mov
in
pop
data16
inc
jo
pop
aam
or
loope
and
mov
in
sarb
nop
icebp
mov
mov
clc
fwait
mov
jbe
pushf
data16
stos
into
test
cwtl
sbbb
inc
imul
pop
testl
pushf
fwait
dec
stc
stos
push
loop
jl
subb
lret
cmc
int3
out
int
xor
shl
pop
xorb
sbb
dec
aad
fldt
lods
dec
insl
fisttpll
adc
ja
or
mov
push
iret
bound
xor
cmp
or
orl
out
jl
ret
dec
pop
jmp
rorl
push
and
out
in
fwait
shlb
push
jmp
cs
loope
pop
adc
pop
cmp
shlb
flds
and
or
push
cmpsb
pop
inc
xchg
push
mov
inc
push
xorb
iret
push
fdivp
inc
shr
out
xor
mov
or
mov
add
xchg
mov
pop
scas
jecxz
adc
xchg
faddp
sub
mov
ret
sub
mov
stc
orb
pop
pushf
lods
or
xchg
xor
lret
adc
xlat
jmp
add
add
divb
xchg
add
xor
lock
mov
scas
sbbb
icebp
js
lods
mov
or
sub
fidivl
xchg
stc
jne
jge
dec
js
mov
inc
jnp
add
mov
pop
ret
mov
aaa
cltd
jmp
int
push
xor
in
push
insb
pop
insb
xor
jl
push
xchg
sbb
test
jae
jae
and
or
gs
je
pop
imulb
dec
fidivrl
les
call
pusha
lods
loop
aaa
into
lret
jnp
enter
movl
gs
out
inc
outsl
fld
jle
lcall
cmp
xchg
inc
xchg
lock
sbb
push
xor
and
stos
mov
call
int3
divl
mov
clc
mov
pusha
in
pop
rolb
pushf
divb
lea
js
push
xor
loopne
arpl
mov
insb
mov
fucomi
hlt
and
dec
imul
loop
or
scas
xchg
cmp
mov
mov
xor
and
cmp
jae
pop
leave
jl
jmp
es
mov
xchg
xchg
ret
adc
stc
ds
cmp
pop
cmpsb
pop
testb
popf
cmp
outsb
rcll
stos
dec
jge
insl
push
mov
and
xchg
xchg
cld
rcr
push
das
in
repz
add
sbb
in
push
les
adcb
imul
cmpl
loop
add
jg
mov
xchg
cltd
loope
inc
mov
in
clc
sub
or
and
cld
mov
adc
insb
scas
pop
and
sahf
in
cltd
aam
cmp
xchg
sbb
ja
sbb
iret
mov
imul
xchg
mov
push
cmp
fstps
nop
jo
jns
gs
js
lea
mov
add
pop
insl
add
dec
inc
pop
mov
ret
sbb
int3
hlt
sub
popa
sahf
lcall
or
lret
fistpll
ja
ret
jmp
sub
cltd
cmc
cmp
and
enter
push
je
scas
cmp
mov
repz
xchg
jb
ds
aas
in
ljmp
inc
inc
iret
cld
adc
inc
les
leave
pushf
addr16
out
or
and
or
scas
push
pop
adc
adc
out
or
inc
stos
stos
adc
lock
fisttps
popl
jg
dec
repz
mov
fucomi
xchg
das
dec
icebp
iret
dec
jmp
push
fwait
mov
movsl
mov
lahf
push
sub
clc
cmpsb
push
push
xchg
or
push
mov
dec
or
sarl
pop
or
test
pop
fidivrl
int
jae
dec
dec
cmp
aad
or
mov
cld
push
andl
mov
add
in
pop
mov
addr16
std
jne
nop
out
std
imul
mov
jo
inc
add
test
repz
mov
outsl
leave
or
aad
ja
js
insl
adc
inc
xchg
cmpsl
mov
fadd
sub
jne
adc
in
hlt
push
jg
sub
push
in
mov
js
out
out
push
inc
push
mov
mov
in
or
mov
les
fnstenv
imul
mov
imul
ret
stos
je
mov
pop
int
push
shrb
mov
loope
cwtl
sbb
mov
cmpb
test
cmp
mov
adc
xchg
shlb
mov
push
fcomps
mov
sbb
pop
pop
les
add
push
repnz
fldcw
mov
pop
sub
mov
ja
stc
loopne
xor
adc
popa
sub
fisubs
mov
cmp
push
fnstenv
sbb
int
lds
je
mov
pop
out
mov
and
cmpl
push
pop
xchg
pop
pusha
xchg
rclb
adc
jns
fistps
es
cli
mov
fimuls
shll
inc
enter
and
in
xor
push
bound
push
adc
or
jg
sbb
sti
xor
mov
ljmp
push
iret
std
inc
dec
or
aaa
mov
sahf
rorl
sbb
es
dec
jno
lcall
vphadddq
jmp
inc
push
pop
cmp
in
lcall
add
cmp
adc
adc
fstps
mov
push
test
sub
rclb
movsl
lock
cmp
int
cmp
out
adc
rcrb
rorb
cmp
jae
jge
mov
pop
sbb
xchg
cmp
lock
es
fnstsw
xchg
orb
insb
xor
int3
outsb
cmp
dec
ja
sbb
or
scas
out
insl
test
test
adc
ja
mov
hlt
sbb
mov
dec
jmp
inc
fs
roll
dec
into
cmp
mov
mov
mov
es
inc
loop
dec
sahf
pop
shl
and
rcrl
push
test
xchg
jl
sub
push
mov
pop
test
out
les
gs
sbb
fiaddl
lea
pop
push
adc
inc
lret
mov
mov
call
imul
aas
sbb
adc
xor
in
xor
hlt
out
xchg
fnsave
shr
sub
addb
mov
shrb
cli
or
popf
adc
mov
xor
aas
aad
add
mov
js
pop
ja
fisubrs
lret
insl
clc
push
int3
ret
int3
nop
iret
sbb
je
fsub
je
cld
lret
fs
cmovne
cs
xor
mov
pop
inc
lret
fistl
insb
lock
add
stos
shrl
jl
aaa
sbb
lret
mov
rcrl
mov
cmp
cmc
adc
pop
call
mov
dec
sbb
orb
das
pop
orl
popf
xchg
and
cwtl
jae
mov
inc
or
int
mov
xor
test
sub
lret
lcall
or
sub
pop
iret
sub
pop
mov
mov
push
sbb
push
mov
into
push
divb
rorl
fiaddl
push
xchg
dec
inc
xor
sarb
pop
addr16
in
push
and
jg
fs
push
das
dec
dec
in
js
pop
pop
jno
arpl
call
pusha
adc
mov
fsubrl
hlt
aam
push
dec
sbb
pop
jecxz
mov
pushf
and
ja
pop
push
sbb
mov
ja
cmp
xor
imul
stos
jg
or
push
pop
sub
gs
cmpsl
mov
sub
stos
mov
stc
xchg
sar
cmp
jmp
sub
nop
push
inc
xor
jp
ret
pop
out
push
add
sbb
adc
jge
and
int
jb
xor
icebp
in
mov
sti
mov
mov
repnz
js
mov
xor
movsb
lods
movsl
repnz
dec
dec
and
dec
cmpsl
cmp
addr16
inc
mov
cmp
jb
lea
pusha
hlt
cld
dec
imul
pusha
divb
sub
out
sbb
push
add
push
jmp
cmp
aas
nop
xor
iret
xchg
std
sub
mov
xchg
add
push
lret
push
jbe
mov
xchg
sub
lods
inc
lahf
lods
cmp
mov
shrl
outsb
jmp
call
push
pop
fsubs
fisubl
imul
xlat
push
adc
arpl
out
pop
cmpsl
popf
popa
daa
pop
ds
or
in
test
push
push
pop
cltd
subb
aad
dec
fwait
cmpsb
or
sub
inc
fldenv
mov
mov
fucomp
rolb
xlat
sub
iret
xor
scas
out
in
mov
sub
std
xlat
jo
mov
push
push
xor
xchg
xorps
fstpt
std
enter
xchg
fists
inc
cmp
test
jne
test
push
xchg
add
jns
aas
jo
sub
or
sub
outsl
lea
jl
mov
in
mov
mov
ljmp
pusha
cmc
daa
js
cmc
jnp
mov
nop
adc
je
loope
and
mov
iret
dec
int
pop
cltd
xchg
add
mov
mov
mov
arpl
jne
sar
and
sahf
in
in
addl
push
movsl
jg
stc
getsec
mov
ret
mov
int3
mov
sbb
aam
push
mov
mov
sub
fistps
test
ret
xor
mov
inc
xchg
cmpb
or
pop
testb
cmp
ja
sbb
clc
data16
mov
sbb
lods
mov
dec
jne
xchg
lea
cmp
inc
aam
ja
clc
cs
das
subb
lock
aaa
mov
xchg
dec
and
aam
xchg
push
jbe
movsl
add
cltd
xor
mov
xchg
sub
push
push
mov
push
clc
push
sbb
rcr
lea
fcomps
fldt
push
mov
out
mov
jne
cmpl
mov
in
cmp
in
leave
roll
xchg
lea
mov
hlt
pop
sbb
mov
dec
out
scas
pop
into
je
pushf
xor
gs
xchg
aad
mov
dec
pop
xchg
push
or
out
insl
imul
pop
stos
pop
fld1
int
inc
xchg
movb
push
dec
test
xchg
cmpsl
insl
or
sub
cmpb
addr16
mov
push
pop
fxch
pop
fimull
pop
sub
idivl
dec
pop
jle
loopne
mov
leave
out
filds
mov
lods
xor
jl
push
jmp
fcmovnbe
repnz
stos
mov
jnp
jbe,pn
dec
jge
mov
insb
jno
mov
pop
dec
inc
adc
mul
in
clc
scas
push
mov
loop
arpl
vpmulhw
or
lods
push
or
sahf
jae
aas
jae
xchg
sbb
repz
xchg
sahf
jno
cmpsl
mov
call
test
jg
mov
add
sbb
out
subb
jle
fadd
and
jp
and
dec
pusha
sbb
cmp
mov
fcmovnbe
mov
lret
xchg
jge
in
push
int
inc
push
and
mov
xchg
mov
cltd
insl
lods
sbb
ffreep
insl
dec
cmp
cs
sub
mov
pop
jecxz
imul
push
stc
rcr
cmpsl
push
and
cmp
jns
repz
les
aad
clc
xchg
add
cmpsl
push
mov
imull
inc
adc
sarl
insb
xchg
cmp
cmp
inc
mov
adcl
pusha
in
push
pop
dec
mov
fidivl
cwtl
mov
stos
sub
mov
mov
jecxz
mov
pop
xor
pop
dec
das
testb
popf
cmp
jmp
dec
xchg
out
dec
shlb
mov
bound
rclb
call
push
inc
loopne
mov
cwtl
mov
fdivrl
movsl
sbb
ret
mov
lcall
cmpsl
out
xchg
cmpsl
stos
icebp
sub
ja
cwtl
sbb
rcl
push
rcl
pop
mov
bound
cwtl
adc
dec
dec
fucomip
mov
pop
hlt
inc
jl
lret
fcomip
addr16
mov
add
cs
xor
and
mov
push
popa
mov
mov
enter
mov
fnsave
add
dec
stos
test
ljmp
aad
loope
inc
enter
add
push
subb
mulb
in
push
or
and
movsl
in
xor
jns
pop
sub
xchg
insb
pop
sbb
iret
mov
ljmp
ljmp
sub
filds
jp
sbb
or
cltd
icebp
push
in
push
arpl
xchg
sbb
fcoml
sub
xchg
cmc
push
loop
and
shll
fwait
add
das
dec
or
cmpsb
or
cld
lea
mov
and
adc
popa
sbb
dec
stc
xor
add
pop
out
fbld
pop
and
sti
cli
lret
lret
cli
xchg
daa
nop
mov
push
mov
je
dec
lcall
fsubs
inc
dec
jecxz
outsl
repz
ljmp
jp
arpl
cmp
or
jg
ret
jg
aas
jp
adc
movsb
imul
insl
xchg
xor
push
mov
in
sbb
sbbl
aaa
test
clc
cs
xor
xchg
and
fisubl
enter
inc
and
jl
jo
jbe
mov
inc
jb
dec
inc
jmp
jge
aas
jns
mulb
sbb
push
addr16
out
loope
or
dec
push
cmp
fsubs
dec
jo
xchg
push
je
ja
movsb
adc
cwtl
test
aaa
inc
in
push
xor
dec
fsubl
inc
mov
inc
adc
fwait
outsl
add
lods
rcrl
mov
shrb
cld
enter
arpl
popf
xor
enter
insb
addr16
push
cs
lods
cmc
cmp
popa
cld
cmp
push
mov
sbb
out
add
mov
add
inc
push
ja
mov
jnp
lds
cmp
popf
call
push
xor
scas
nop
lcall
bound
inc
dec
std
cs
repz
dec
and
mov
lret
dec
pop
pusha
xchg
push
pop
cltd
inc
xchg
pushf
cmp
aad
ret
dec
adc
adc
jp
bound
sbb
js
jbe
repz
sub
xor
mov
push
out
push
test
and
dec
add
stos
cltd
inc
hlt
mov
enter
hlt
inc
sbb
imul
test
cmc
fxch
pop
adc
cwtl
addl
or
sub
mov
fdiv
cmc
hlt
sub
xchg
cmp
ss
pop
mov
xlat
fdivrs
or
clc
bound
or
fldt
pop
jle
ds
lock
out
out
stos
mov
fs
stos
sbb
mov
aam
mov
rorl
sub
loop
es
mov
inc
popf
push
jb
movsl
and
cmc
xchg
jo
jbe
add
arpl
pop
pop
mov
sub
jb
adc
hlt
stc
ljmp
inc
shlb
dec
mov
mov
inc
sub
cmpsl
jg
js
int3
lock
arpl
out
fiadds
pop
xchg
out
fsub
push
push
subl
mov
mov
push
inc
gs
cmp
cs
xlat
push
inc
loope
push
aas
rcrb
in
idiv
rcl
jb
mov
fildll
lock
adc
hlt
mov
push
sub
sbb
pop
out
and
call
lock
dec
pop
lcall
out
cld
cs
xor
es
sbb
adcl
imul
add
cs
ljmp
out
cmp
bound
inc
dec
fidivs
adc
in
adc
add
aaa
dec
push
cmpsl
adc
and
mov
mov
inc
imul
aas
xchg
push
pop
push
mov
ss
mov
arpl
jmp
push
mov
mov
mov
mov
divl
iret
gs
call
fistpl
data16
xor
or
into
out
and
mov
pop
shll
push
lods
sbb
out
movsl
pop
aam
inc
enter
out
sti
into
inc
in
jmp
add
push
jge
cmp
jae
test
scas
cs
pop
in
xor
sub
pop
ret
adc
sub
sub
and
fistpl
lods
cmp
shlb
mov
jp
xor
add
fwait
sub
inc
jp
pop
pop
lcall
fs
movsl
iret
adc
xlat
pop
out
adc
jne
jae
jae
mov
push
inc
sarl
pop
inc
sahf
enter
dec
lods
in
testl
push
xor
sahf
pop
push
cmp
mov
mov
jno
and
add
sub
roll
dec
enter
xchg
mov
mov
je
ds
adc
dec
dec
lcall
mov
out
push
mov
sub
or
or
xchg
mov
jl
nop
push
mov
aad
or
cmpsl
pop
xor
ret
adc
daa
push
pop
mov
mov
addl
push
xor
jmp
fisubs
jbe
and
dec
test
dec
mov
and
out
sbbb
into
ljmp
aas
scas
popf
jno
dec
scas
mov
scas
mov
cmp
sbb
rolb
jns
pop
xchg
outsb
out
and
add
int
icebp
hlt
imul
dec
push
jge
lahf
pop
out
rclb
or
stos
pop
inc
add
jecxz
dec
in
aad
cmpsb
inc
sbb
xchg
pop
icebp
pushl
adc
cs
sbb
mov
cltd
popa
movsb
pop
lahf
jg
mov
adc
sahf
aaa
sbb
imul
les
add
dec
and
data16
cwtl
sbb
or
pop
into
dec
add
outsb
xor
mov
xchg
jb
push
adc
and
jmp
add
push
push
sub
dec
mov
js
aaa
aad
push
mov
jnp
xchg
push
into
xor
sti
mov
cmp
aad
jge
push
cmp
cmp
ficoml
enter
repz
cmp
jns
or
or
or
aam
lea
inc
cmpsl
mov
jp
int
and
test
push
and
mov
mov
dec
ljmp
fmulp
sbb
jmp
inc
push
gs
and
mov
jns
mov
jge
cltd
sub
test
addb
bound
in
cmp
mov
fcompl
adc
out
fisttps
sahf
jl
outsl
lret
mov
sbbb
push
loopne
jp
lcall
sbb
jp
cmc
dec
cmpsl
mov
pop
enter
mov
inc
add
ljmp
or
js
movsb
roll
outsl
inc
pop
mov
adc
out
es
xor
popa
ds
aaa
adc
pop
test
xorb
mov
lret
lods
je
cmc
adc
in
jecxz
inc
jle
popa
dec
out
inc
jbe
dec
nop
push
mov
xchg
scas
enter
mov
in
xchg
lds
andps
rcl
mov
test
lods
es
fimull
lcall
iret
test
adc
inc
jae
outsl
mov
cli
nop
jbe
dec
inc
mov
into
pop
lret
mov
arpl
fwait
jns
sti
dec
std
push
call
or
aaa
jle
inc
jmp
fs
lret
cltd
cmpsl
mov
mov
push
push
xchg
js
adc
mov
outsl
loop
test
cmpsb
cmpsb
daa
popa
ss
orb
inc
stos
xor
mov
and
dec
adc
ljmp
pop
testb
sarb
ficoml
adc
out
fdivl
shlb
fs
insl
jns
inc
xchg
iret
in
test
push
and
rol
stos
sbb
int
push
xor
out
mov
xchg
test
sbb
imul
imul
jns
sarb
sbb
sbb
xchg
call
sbb
xor
xor
pop
rorb
aad
xchg
mov
cltd
imul
inc
lods
and
nop
sbb
or
shrb
inc
les
xchg
jno
pop
jmp
cmpl
xchg
pop
fildl
xor
pop
je
dec
and
mov
popa
add
cmpsb
sti
inc
sub
mov
cmp
mov
out
inc
adcb
mov
movb
inc
lahf
test
and
add
jnp
das
add
push
pop
adc
jle
and
mov
stc
sbb
mov
xchg
icebp
push
call
push
mov
mov
dec
cli
stos
es
sub
dec
add
xchg
jo
lods
mov
mov
jle
inc
adc
pushf
sub
cmp
dec
sub
out
sbb
bound
mov
out
push
mov
je
imul
push
jge
pushf
outsb
jae
out
repnz
stos
mov
movsb
outsl
je
loopne
loopne
sub
lret
mov
cmpsl
push
jmp
sti
lds
notl
cld
sbb
bnd
add
dec
fwait
imul
sbb
push
and
loop
or
test
cmp
fucomp
xchg
cmp
call
lods
ret
outsb
push
es
mov
add
hlt
fcmovnbe
in
xlat
fisubs
imul
jne
imul
or
mov
js
popf
fmul
add
inc
adc
cvtdq2ps
xchg
out
rdpmc
push
das
mov
pop
and
cmpsl
aam
sub
iret
adc
dec
mov
fbstp
call
lock
cmp
out
je
and
lds
scas
inc
cmp
inc
aas
xchg
push
sub
sbb
sub
xor
adc
dec
mov
sbb
inc
mov
xor
mov
fistl
xlat
push
add
shll
mov
cmp
pop
inc
into
stc
mov
sbb
add
sub
in
and
dec
inc
push
hlt
add
mov
nop
inc
mov
sub
sbb
mov
jp
ds
push
ss
mov
jge
pop
add
ds
and
es
mov
mov
push
shrb
pop
std
adc
aas
and
lea
dec
jmp
xor
dec
pop
add
push
push
sbb
stc
fcoml
je
xor
push
lock
out
or
fbstp
dec
sub
test
negl
jmp
dec
loope
popf
push
movsb
je
jns
xchg
cltd
mov
dec
sub
xchg
stos
call
jg
and
outsb
xchg
xchg
mov
sbb
push
jle
fstl
loop
aam
arpl
mov
test
add
mov
inc
mov
xchg
adcb
imul
and
push
movsb
loop
mov
xor
fdiv
sbb
hlt
sti
sub
pop
cwtl
sbb
push
and
pop
and
test
hlt
push
dec
jl
inc
jno
fisubl
popf
mov
cwtl
sbb
dec
adcb
xchg
cli
out
mov
incl
dec
aaa
jnp
mov
mov
xchg
inc
mov
pop
pusha
sub
lods
daa
mov
aad
pop
pop
dec
inc
cmp
outsl
mov
cmc
into
iret
iret
xor
sub
jne
out
addps
mov
mov
xor
xchg
adc
adc
stos
roll
int3
out
cmp
sbb
mov
mov
push
lods
push
sbb
cmc
pop
sub
pop
sahf
arpl
ffree
shlb
xlat
lcall
imul
sbbl
int
xlat
mov
icebp
xlat
fiadds
push
lock
xchg
movsb
xchg
inc
out
gs
pushf
cmp
mov
add
loopne
hlt
inc
push
and
add
sub
cs
scas
and
xchg
cwtl
out
xlat
xchg
inc
or
dec
and
cs
sub
and
pushf
and
push
je
mov
fdivp
or
cmp
inc
inc
pop
lcall
rcl
sbb
mov
pushf
nop
mov
outsl
cld
shlb
jmp
xor
sub
imul
jmp
xor
inc
inc
inc
int
rcr
jnp
or
enter
pop
cli
inc
cmp
jns
mov
fildll
mov
fistpll
jge
add
divl
inc
stos
mov
mov
pop
sub
stc
xchg
jnp
lds
xchg
cmp
mov
in
in
cmp
out
popf
mov
in
mov
test
push
pop
into
mov
xor
jmp
dec
dec
insl
cmp
lret
push
in
fcmovu
push
icebp
shl
shr
pop
push
cld
cmpsl
jne
jmp
out
test
mov
inc
xor
nop
sbb
enter
js
inc
xchg
es
roll
adc
adc
mov
mov
js
test
imul
test
or
addr16
into
adc
hlt
adc
aad
dec
pop
mov
dec
into
xor
cwtl
pop
mov
push
or
adc
mov
xchg
aas
ljmp
movb
pop
push
xor
mov
in
idivb
xor
and
scas
test
jge
lret
add
lds
fidivs
pop
add
xorl
xlat
mov
mov
mov
lods
ret
faddl
push
push
aam
mov
repz
and
adc
call
hlt
inc
jne
mov
sub
xchg
xchg
loope
pop
cmc
out
or
inc
pop
sahf
xchg
mov
or
mov
xor
push
jg
xlat
test
dec
jl
push
int3
int
and
mov
out
add
sbb
cltd
add
dec
outsb
pcmpgtb
das
add
mov
mov
xchg
pushf
loopne
push
loop
lahf
mov
cli
loop
adc
mov
push
xor
mov
data16
mov
popa
inc
test
iret
loope
pop
adc
imul
hlt
leave
or
or
aas
subl
inc
mov
imul
sub
fildl
pop
sbb
inc
lods
repz
lock
push
adc
push
pop
mov
ss
sbb
call
lahf
out
mov
iret
das
jl
and
mov
aad
xor
xchg
cmpb
and
dec
cmpsl
add
repnz
jle
inc
inc
icebp
lret
dec
rorb
jno
jns
inc
jne
in
les
xchg
movsb
sub
pop
jg
push
xor
out
add
mov
push
scas
adc
repnz
cmpsb
jp
mov
and
and
ljmp
stc
fsubrp
aas
clc
aas
push
jp
or
cmp
or
add
jo
ds
adc
out
dec
bound
lea
popa
jnp
cwtl
or
shr
cmp
out
cmp
dec
movb
movsl
das
outsl
cmp
test
pushf
and
into
lods
rcll
cmpsl
ja
in
and
xchg
pusha
mov
push
push
pop
fcoms
fisttpll
call
and
pop
mov
sbb
mov
mov
push
push
mov
adc
rcll
cmp
push
sub
xchg
xchg
mov
outsb
ffreep
inc
push
pop
cli
iret
sub
jmp
stc
push
dec
clc
lcall
outsb
mov
mov
sub
out
inc
pop
jbe
xchg
ljmp
lock
repz
mov
adc
es
pop
xor
lods
call
xor
or
xor
sbb
ja
imul
pop
cmp
pop
add
jmp
cmp
outsl
add
jo
or
and
ljmp
in
aaa
mov
xor
aas
rclb
test
popa
and
mov
mov
mov
xchg
add
out
mov
insb
arpl
pop
pusha
inc
pop
adc
sbb
pop
and
add
lret
mov
xchg
mov
dec
and
push
shl
loop
jg
push
leave
inc
fistpl
adcl
cs
jp
int3
hlt
xchg
and
sbb
jecxz
xor
dec
mov
mov
mov
clc
stc
pop
adcb
and
mov
mov
push
aam
nop
ss
inc
push
lods
lret
lret
dec
inc
in
pop
or
insl
jae
sti
mov
jmp
mov
or
movsl
mov
sub
out
adc
ds
adc
mov
shlb
call
xlat
dec
shl
lret
dec
xchg
mov
push
push
jge
xor
iret
popa
adc
jge
lock
aas
xor
pop
lret
push
insl
or
repnz
jmp
imul
sbb
les
ret
cmp
mov
pop
sbb
or
cmp
outsb
jae
cmp
in
hlt
popf
xor
mov
push
cmp
fcmovnu
push
pop
imul
cld
mov
sub
rorb
or
roll
aam
ljmp
xchg
mov
sbb
mov
jmp
xor
push
sarb
jmp
pop
pop
test
rol
xor
mov
xchg
or
je
xor
fildl
inc
bound
rcrb
int3
in
sub
bound
sbb
jne
inc
push
jp
xchg
lea
mov
subl
movsb
repz
inc
mov
dec
sbb
push
sbb
jbe
int
dec
jl
pop
dec
cwtl
jb
call
push
xor
adc
xlat
adcb
mov
push
xchg
jbe
push
faddl
xor
sub
ja
dec
idivl
in
lcall
stc
imul
dec
cmpsl
adc
adc
fnstenv
mov
sub
pop
sub
xchg
out
out
jg
cmp
in
add
in
aam
stos
outsl
cmp
pushf
mov
out
jecxz
jo
xchg
xlat
ret
outsl
xchg
inc
mov
adc
fidivrl
test
pop
pop
jecxz
dec
loop
clc
xchg
jns
dec
add
lods
adc
out
xor
xchg
sti
mov
mov
adc
bound
sarl
outsl
inc
mov
inc
or
cmp
arpl
bound
pop
add
or
push
or
ficomps
xor
jns
out
push
ret
shrl
ljmp
push
es
jno,pn
mov
add
pop
jno
add
cmp
pop
test
mov
jb
es
clc
decb
jmp
out
push
add
jnp
mov
pop
movnti
xor
inc
add
sbb
bound
mov
loop
adcl
insl
les
pop
mov
dec
icebp
jg
mov
sbb
jg
dec
dec
insb
es
and
aam
test
add
pop
movsb
cli
dec
mov
xor
mov
add
neg
std
sti
inc
mov
mov
adc
inc
or
xchg
in
into
jno
insb
jns
inc
xchg
and
sbb
jge
jl
stc
sti
sbb
sbb
incb
mov
mov
jge
or
aad
clc
mov
movb
cwtl
pop
mov
mov
leave
push
xchg
lret
xor
int
clc
lcall
loope
push
and
mov
fisubrs
cmp
lcall
xorl
push
dec
cld
mov
cmpsl
daa
shll
ja
mov
out
mov
clc
fistpll
outsb
stos
adc
in
jecxz
jle
dec
sbb
jnp
dec
or
rorl
insb
sarl
in
inc
cs
mov
das
mov
or
in
mov
lds
cmp
adcl
sar
mov
aad
imul
sub
dec
dec
lock
xchg
scas
loopne
cwtl
jl
popa
punpckhwd
das
jle
lods
xchg
mov
add
cmp
push
es
jmp
test
fstl
call
cmp
rorb
insb
lret
add
pop
mov
lds
ret
and
push
add
test
xchg
adc
les
in
les
cmp
mov
adc
mov
and
push
mov
stc
jae
aad
and
in
and
imul
popl
sarl
ds
xchg
lock
das
in
fdivrl
into
pushf
cmpsl
or
scas
cmpsl
pop
ljmpw
daa
adc
shlb
sub
cmp
lods
mov
pop
xor
outsb
add
out
mov
jns
dec
push
xor
jmp
iret
bound
cmp
pop
loopne
cld
xchg
and
imul
fnstsw
pop
dec
jge
movsb
arpl
pushl
push
pop
push
out
sbb
in
cltd
cmpsl
mov
push
mov
jl
mov
push
pop
aad
adc
cli
and
push
push
mov
mov
jno
int3
bswap
pop
insb
cwtl
mul
pop
sahf
out
and
in
mov
mov
mov
pusha
mov
shll
call
xchg
sub
enter
adc
sub
cmp
jg
jo
ds
mov
popa
in
aas
je
cld
jns
imul
testl
sbb
adc
mov
jbe
mov
adc
clc
jno
mov
or
jb
cli
mov
add
xchg
div
fdivrs
jmp
nop
mov
sarl
daa
jmp
sub
xchg
lea
push
or
sub
push
insb
mov
lods
enter
jno
push
mov
xor
fstps
push
xchg
mov
adc
idiv
pop
icebp
clc
lret
popf
mov
push
add
sbb
xchg
push
test
pop
xchg
leave
in
dec
hlt
dec
pop
push
push
inc
push
and
xor
pop
pop
lea
jmp
dec
imul
lret
mov
lret
lahf
jmp
stc
dec
out
scas
enter
dec
sub
outsl
inc
cmp
in
ret
outsl
lcall
mov
push
ret
ret
cmp
or
lock
mov
pusha
aad
lcall
ror
jno
dec
in
and
adc
xchg
fldcw
xchg
pusha
popa
mov
xor
cli
dec
sub
push
out
js
shrl
mov
cltd
or
pop
in
jne
cmpsl
adc
out
fnstsw
jae
sti
fstpl
adc
cli
aad
or
ljmp
iret
cmpsl
sahf
std
pop
mov
sbb
out
call
sti
pop
bound
fidivrl
int
lret
inc
sub
adc
out
mov
repnz
mov
push
iret
push
dec
psubb
sahf
in
imul
push
fwait
stc
mov
call
jnp
dec
dec
mov
jno
pop
imul
jo
daa
mov
sbb
cmp
xchg
and
sub
fistpl
cwtl
jne
cmp
xchg
ret
pop
cld
incl
mov
dec
out
les
cmp
jmp
push
xor
sbb
mov
cmp
adc
ja
stos
jle
shlb
cmp
pusha
test
insl
sub
mov
adc
push
aam
jg
in
adc
movsl
mov
aam
sub
push
jge
mov
adc
lods
popa
or
ret
cld
cli
fstpt
clc
ret
inc
ss
andb
mov
mov
nop
cli
cmp
vpandn
push
lea
ds
xchg
sub
add
push
stos
mov
mov
xchg
adc
add
lock
push
repz
int
dec
scas
inc
aad
imul
mov
mov
loop
js
sti
cmp
leave
push
inc
jge
test
shl
jecxz
adc
pop
and
loop
pop
mov
outsb
mov
es
jge
out
faddl
mov
bound
pop
pop
inc
and
les
ss
jge
or
or
jp
and
add
emms
push
dec
dec
pop
enter
jb
mov
dec
push
mov
jecxz
push
and
jmp
push
ror
push
jmp
mov
int3
mov
or
xor
adc
xchg
enter
ret
dec
and
clts
sbb
mov
xor
inc
or
bound
mov
in
outsl
inc
movsl
or
sbb
pop
cli
jmp
push
inc
push
aas
mov
lahf
cmpsb
mov
fistpl
ds
and
loop
ljmp
lret
jne
push
inc
inc
pop
popf
push
sub
push
sbb
andl
mov
ficomps
loope
mov
add
cmp
jmp
aad
testl
popa
fdivl
sbb
mov
jp
push
lock
xchg
mov
lret
stc
xor
lcall
dec
fs
rcll
or
adc
aaa
xchg
enter
rclb
fdivrl
int3
and
addr16
mov
mov
or
test
push
dec
lods
fnstsw
pop
int3
jno
cmp
dec
pop
jl
dec
out
sti
xor
loope
mov
xchg
mov
jo
lcall
sbb
out
pop
pop
xor
mov
jg
dec
sub
push
or
insl
iret
jecxz
addr16
imul
test
das
jnp
mov
dec
dec
cmp
adc
shll
fidivs
sbb
inc
insb
xchg
subb
leave
lcall
pop
or
jmp
jmp
mov
cmc
pop
push
loopne
jne
mov
cltd
mov
or
mov
add
jl
cmp
dec
incl
loop
push
sar
cmp
out
adc
mov
sub
add
or
mov
test
js
fistps
add
pop
js
nop
test
jecxz
pop
cmpsb
sub
push
mov
dec
popf
mov
scas
pop
aam
icebp
in
cwtl
ds
xchg
cwtl
xchg
cs
lcall
cs
movsb
inc
clc
hlt
mov
shl
addb
ret
shll
sub
push
push
stc
je
xlat
sub
ja
push
push
movsl
mov
insb
movsl
or
cld
pop
mov
inc
lret
add
es
and
lret
or
xchg
addb
xor
dec
sbb
inc
pop
or
add
pop
out
out
sub
leave
mov
jl
push
mov
scas
pusha
test
lods
xchg
push
sub
mov
sub
lods
pop
add
lea
push
adc
jmp
sbb
fbstp
sbb
mov
mov
cmp
inc
mov
jnp
adc
add
decl
mov
rorb
and
sahf
sbb
loop
jp
jl
mov
sbb
lea
fsub
dec
adc
pop
mov
mov
cmpsb
int
ss
xchg
cmp
aas
lret
lock
aam
enter
cmp
mov
fstpl
inc
mov
jge
orl
mov
xor
pop
adc
and
fcompl
ds
or
push
or
pop
xchg
xchg
cmc
mov
sbb
aam
lret
or
movsb
rcll
out
cltd
cli
aad
mov
or
fwait
sahf
arpl
sbb
xchg
lret
jmp
loop
divl
int3
xchg
fwait
out
frstor
negb
imul
push
ds
daa
xor
mov
push
mov
cmp
add
sub
jae
adc
mov
imul
mov
cltd
or
mov
adc
fisubl
pusha
ret
lret
jns
cmp
add
xor
cmc
inc
inc
rolb
int3
and
dec
cs
sbbb
arpl
cmp
mov
adc
scas
scas
imul
or
dec
test
cli
push
mov
subb
fs
popl
push
adc
je
and
mov
cs
push
dec
sbbb
jle
push
es
xor
fisubrl
or
aam
das
fmul
cmp
or
les
gs
sub
and
adc
pop
mov
sbb
push
out
mov
mulb
loopne
add
mov
shll
movsl
or
popf
sub
daa
inc
fwait
loopne
lds
leave
in
adc
jle
push
in
push
mov
das
in
inc
popa
test
js
ror
cmpsb
cmp
dec
pop
test
jbe
push
movsb
cmova
cli
out
inc
cmp
fs
insb
ja
add
mov
dec
cmpsl
es
cmc
sub
std
push
ljmp
fwait
pop
or
cmp
jg
mov
shl
add
push
sbb
xchg
push
lahf
movsb
in
pop
fwait
pushf
add
xchg
imul
popf
dec
dec
jmp
or
xorb
test
dec
push
push
cld
cmp
loopne
pop
fsubr
stc
aam
push
rcrb
mov
icebp
push
jge
and
mov
lods
sub
aaa
ja
aas
les
pushf
inc
add
sahf
loopne
mov
mov
inc
pop
push
shrb
jne
or
cmc
xchg
cli
das
push
push
push
fldcw
imull
push
xchg
and
imul
jne
push
shl
xchg
pop
rolb
pop
es
mov
sub
clc
and
sbb
and
xchg
push
mov
push
ret
add
fisubrs
hlt
cmp
adc
push
sarb
pop
cld
dec
out
loope
mov
mov
mov
dec
lcall
les
dec
and
inc
adc
lret
fcompl
mov
loope
xchg
pusha
jmp
mov
jb
lods
push
loop
mov
jno
cmc
adc
ss
aas
xor
mov
hlt
cltd
adcb
cmp
cli
sbb
cmp
dec
in
sahf
js
sub
shll
sarb
xchg
popf
add
test
pop
jmp
in
jb
sbb
add
push
out
mov
xchg
or
stos
jbe
xor
testl
incl
or
pushf
jbe
pop
mov
cs
xchg
mov
and
cmc
add
and
xor
addr16
sub
and
push
xchg
pushf
stos
jl
movsb
cmp
jbe
jb
jge
mov
xor
mov
iret
or
xor
pusha
xrelease
enter
outsb
sbb
dec
pop
pop
dec
daa
pop
fisubrl
jle
popf
mov
dec
shlb
cmp
aas
xchg
jae
out
pop
sbb
or
andb
jno
scas
test
and
scas
popa
mov
cmp
jmp
push
jnp
insl
lahf
rol
int
pop
insb
sub
mov
cs
jg
adc
dec
mov
in
jg
inc
sbb
jecxz
jge
push
test
inc
enter
sub
pushf
cmc
cmpsl
jno
push
xlat
aad
dec
push
outsb
pop
or
xchg
mov
xchg
addr16
or
xor
imul
mov
pushf
popa
jbe
stc
fbld
inc
lods
clc
lock
fisttps
cltd
adc
shrb
and
aas
movsl
fs
lcall
inc
mov
cmpsb
dec
es
fcoml
mov
or
cwtl
loopne
pop
iret
and
es
xchg
sub
mov
arpl
jge
shlb
mov
ja
iret
ret
pop
mov
xor
pop
sarl
in
jb
mov
nop
lret
clc
in
iret
repnz
mov
push
xchg
xchg
xchg
sub
adc
call
cwtl
mov
and
lods
jbe
or
jne
sti
sbb
inc
add
sub
sub
sub
cmp
mov
push
stos
inc
push
xchg
inc
add
push
push
and
sub
iret
mov
xchg
scas
ljmp
lods
inc
and
ja
roll
rorb
inc
sbbb
fiadds
push
push
in
xlat
mov
rorl
cld
or
cmpl
dec
inc
inc
aad
jae
xchg
addr16
jns
lret
lea
inc
sub
mov
mov
pusha
mov
and
inc
xchg
sub
sbb
daa
xchg
xor
lahf
addr16
fimull
xor
xchg
cmp
mov
lods
lea
shrl
xchg
adc
lret
ljmp
fdivrs
cmp
movb
scas
lret
ss
mov
cmp
lret
insl
xor
repnz
fimull
es
mov
dec
push
lods
test
dec
scas
sub
mov
sahf
ror
into
sahf
jae
hlt
outsb
shl
xchg
inc
fwait
adc
rcrl
out
push
and
clc
push
sti
sbb
sub
push
addl
sub
fiadds
mov
inc
jb
fmul
xchg
or
mov
std
popf
inc
shl
mov
jb
sbb
es
add
pushf
mov
push
xchg
push
ljmp
or
scas
mov
movsl
push
xchg
pop
pusha
mov
jg
jo
pushf
add
lods
mov
cltd
sbb
inc
arpl
inc
mov
scas
inc
cli
push
mov
mov
push
push
or
sbb
test
popa
imul
add
icebp
test
xlat
imul
repz
mov
mov
ljmp
scas
push
das
stos
iret
or
pop
dec
out
xor
sbb
fisubl
movsb
test
xor
mov
into
add
cmp
cmp
inc
stos
pop
adc
popa
or
mov
jo
pop
enter
or
arpl
sub
mov
loop
push
faddp
adc
sub
movsb
in
mov
inc
push
clc
jae
mov
or
sub
in
out
pop
mov
jo
and
sub
dec
jne
test
sahf
mov
js
xchg
sub
aas
xchg
xchg
lock
inc
push
xchg
jecxz
addr16
repz
xchg
mov
xchg
jns
and
sbb
mov
loopne
das
adc
cmp
push
shrl
mov
orl
mov
jp,pt
aaa
add
and
cld
imul
es
out
ja
push
cmc
stc
andb
adc
sub
mov
sub
mov
hlt
push
in
mov
cmp
out
fsubr
or
clc
rcr
rcrb
les
inc
jns
inc
outsb
cmc
call
inc
js
xchg
addr16
aas
daa
mov
lahf
cmp
cs
mov
je
dec
mov
into
in
mov
pop
xchg
out
inc
xchg
adc
int3
imul
test
jle
test
les
sub
das
jecxz
cmp
lret
or
xchg
leave
mov
mov
fsubs
jle
ds
or
lea
cli
aaa
xchg
jmp
js
ficoms
lcall
xchg
mov
imul
in
push
adc
insl
jp
repnz
std
pop
shrl
mov
pop
outsb
sub
jle
pop
pop
jbe
jg
jecxz
inc
into
inc
jo
pop
or
std
push
ret
xchg
and
out
xor
pushf
xchg
daa
int3
ja
aas
xchg
pop
add
ret
cmpsl
adcb
mov
sub
int
or
loopne
xor
sbb
hlt
jno
cwtl
cmp
inc
movsl
and
xorb
mov
sarl
or
es
mov
dec
sbbl
arpl
ret
mov
push
call
add
jmp
jmp
bound
pop
jmp
adc
icebp
fbld
push
sbb
outsb
shlb
add
repnz
mov
mov
inc
stc
xor
hlt
movsl
jge
sub
rep
xor
int
leave
pop
bound
jns
fisubrl
movsb
in
pop
out
push
repnz
pop
ja
xor
dec
subb
shr
cld
aam
dec
out
inc
out
jb
mov
push
pop
lods
outsb
les
jge
pop
fstps
xchg
jne
xor
adc
test
dec
inc
and
dec
test
jbe
cmpsb
mov
test
mov
xchg
adc
sti
call
rcll
jne
addr16
das
xor
in
jge
xchg
dec
mov
add
mov
mov
xor
dec
jp
cmp
les
stos
pusha
pop
jnp
mov
sar
sbb
pop
iret
gs
jb
xchg
xchg
cmp
xchg
dec
push
aad
pop
lock
lods
enter
leave
mov
mov
imul
cs
jmp
jmp
test
popf
fiaddl
fisubs
xor
inc
mov
or
into
pop
pop
pop
xchg
jbe
es
int
add
xorb
lods
icebp
and
jae
jp
enter
push
fidivrs
loopne
mov
xchg
dec
sahf
imul
mov
pop
and
mov
rclb
lcall
pushf
jge
cwtl
mov
jb
shr
int
loopne
ds
movsb
gs
cmp
and
cld
out
xor
cs
adc
out
cmp
and
jne
iret
repz
cmc
andl
jecxz
cs
clc
pop
out
lods
mov
fidivl
push
xor
addr16
mov
data16
fmuls
ret
test
dec
das
mov
mov
and
dec
hlt
in
xchg
pop
sbb
out
sbb
int
or
enter
popa
in
xor
popf
clc
add
cld
fistpl
xor
mov
scas
jns
adc
dec
inc
testb
mov
ds
cmpsb
push
push
icebp
movsb
or
and
and
add
and
jbe
cltd
push
mov
dec
mov
add
or
inc
into
sub
inc
addb
lods
bound
inc
add
sub
cmp
orb
in
sub
cli
and
mov
pop
outsb
add
inc
push
pusha
cmp
xchg
mov
sub
push
xor
aam
movb
lods
and
int3
jne
clc
push
mov
jns
adcl
fstpl
rcr
sub
aaa
test
mov
xchg
push
mov
shlb
mov
sub
pop
xchg
mov
daa
aad
fldenv
shrb
or
jg
jg
cmp
aas
ds
push
mov
std
mov
out
ret
daa
fmul
je
mov
mov
addr16
adc
pop
inc
loope
push
addr16
mov
ljmp
dec
inc
mov
jno
jmp
cmp
mov
jl
fbstp
push
sub
fildl
lahf
mov
icebp
mov
in
add
push
out
inc
cmp
fsubrl
sbb
mov
or
out
or
mov
push
pop
mov
cmp
test
inc
jne
in
pop
mov
sub
aad
pushf
hlt
or
fwait
mov
popf
lret
jp
adc
or
jl
mov
pop
pop
xchg
das
or
test
insl
insl
mov
pop
les
jg
in
les
shlb
pop
sahf
add
stc
ficoms
push
cmp
add
inc
xorl
lods
sub
inc
inc
aam
or
lea
sbb
xor
shll
mov
test
jge
sub
sbb
inc
addl
ret
xor
and
cmpb
ds
jecxz
jne
push
inc
fisttps
pop
or
adc
orl
enter
add
mov
dec
jg
jg
lock
and
cli
lock
xchg
mov
pop
movsl
adc
mov
sbb
jmp
loopne
mov
mov
insl
pop
add
mov
mov
inc
andl
push
xchg
sub
hlt
arpl
cmp
subb
or
sbb
push
popf
cmp
sbb
pushf
int
and
rdpmc
mull
or
ret
inc
ja
in
leave
lods
imul
mov
inc
and
gs
mov
clc
cmp
inc
aas
mov
xchg
jae
mov
call
mov
sbb
sub
xchg
shlb
jb
popa
mov
mov
xlat
loopne
popf
loop
out
cli
dec
xchg
fisubs
add
dec
inc
and
faddp
insb
jo
jecxz
and
pusha
xlat
jbe
add
addr16
in
fistpll
popa
sahf
sbb
icebp
test
pop
mov
xchg
call
pop
cltd
mov
mov
filds
cmp
fcomps
or
outsl
add
push
mov
mov
dec
add
push
mov
inc
jmp
pop
dec
or
je
cmpsl
and
cmp
sahf
mov
in
mov
pop
jne
xchg
add
and
ds
pop
int3
mov
add
mov
fs
adc
sahf
jecxz
sbb
jp
jmp
mov
mov
leave
fwait
test
adc
or
lds
xor
push
shll
lock
pushf
aaa
or
out
dec
inc
outsl
adc
mov
sbb
cmp
leave
popf
sahf
mov
pusha
mov
jb
orb
xor
jp
rcrb
es
dec
push
add
jmp
lcall
pusha
ret
notb
out
mov
outsl
dec
mov
adc
and
pop
sbb
add
mov
adc
stc
mov
loopne
inc
sti
icebp
pushf
stos
xor
jnp
fnsave
sub
test
gs
jb
pop
dec
push
or
orb
in
lds
sub
mov
dec
icebp
adc
lret
cltd
cmp
pop
xor
lret
adc
mov
je
rcll
repnz
mov
ret
dec
mov
and
movsb
lods
mov
aam
add
popa
enter
clc
push
sbb
cmpsl
push
cs
lret
inc
add
sub
icebp
xor
addr16
inc
mov
or
sarl
popa
adc
std
xchg
pop
mov
jnp
cmp
arpl
adc
mov
jae
cmpsl
lds
popa
fmuls
jb
mov
push
ret
pop
add
fmull
sar
mov
xor
mov
fcomps
fcompl
jnp
in
inc
jp
popl
data16
fadds
add
loopne
rep
fcmovne
or
dec
xor
inc
inc
test
lods
dec
shrb
and
cmpb
xchg
cmc
jne
dec
push
out
fcmovnu
adc
or
pop
in
jns
xchg
mov
dec
xchg
jle
aaa
pop
and
scas
incb
inc
add
pop
fucom
mov
cltd
xor
shll
mov
mov
cmp
pop
fcos
je,pt
sub
pop
lahf
cld
imul
dec
sub
mov
add
sbb
hlt
mov
jno
into
ffreep
movsb
xchg
dec
insb
push
or
std
mov
mov
xchg
sahf
test
sub
fnstenv
mull
enter
in
les
mov
lcall
inc
scas
in
movsb
into
test
loope
scas
ljmp
leave
pusha
mov
aam
mov
jno
in
ja,pt
push
adc
sub
mov
jo
lcall
add
mov
inc
bound
inc
divl
enter
mov
lret
das
lret
loop
mov
cmp
fistpll
mov
cltd
test
sahf
in
sbb
jge
cmp
push
pop
mov
sub
clc
mov
xlat
mov
ror
dec
mov
es
enter
pop
aaa
daa
cmp
mov
ja
sub
pop
add
cmc
rcl
in
mov
push
pusha
addb
jns
mov
add
push
xchg
mov
inc
out
or
data16
cmp
cmp
bound
inc
repnz
xchg
pop
fsts
pop
pop
loopne
loope
jo
test
push
pop
or
popf
call
push
fwait
mov
jp
or
loope
xor
push
jle
cmc
test
div
lods
mov
mov
push
xor
and
lret
int3
in
sub
addr16
nop
inc
outsl
xchg
xor
jnp
pop
mov
scas
aaa
push
js
sbb
arpl
xlat
pusha
in
inc
pop
in
cli
add
mov
adc
xor
mov
xor
in
ret
xlat
xchg
mov
mov
insb
das
or
push
push
xchg
and
inc
lds
daa
jae
fidivrl
jns
arpl
ror
inc
scas
and
rorl
stc
addr16
xor
jno
push
jae
mov
lds
fisubl
iret
gs
addr16
fiaddl
in
jp
scas
xor
in
push
ror
lods
xchg
stc
adcl
test
int3
inc
adc
jns
aas
jge
nop
mov
test
inc
xor
lea
insl
daa
dec
mov
push
test
inc
dec
aam
cwtl
je
mov
jp
pop
pusha
aad
sahf
sbb
es
fmulp
dec
test
push
add
lods
js
jb
sub
dec
adc
lods
clc
mov
mov
hlt
cmpsl
mov
aam
imul
das
adc
aad
call
xchg
fsubrs
lea
jg
cli
ss
sbbb
popa
push
adc
loope
inc
cs
adc
or
and
xlat
cld
icebp
xor
clc
sar
mov
outsb
or
mov
cmp
aas
cmp
or
jns
xor
fwait
sub
or
sbb
bound
lods
fcom
call
mov
adc
mov
cmp
inc
or
push
push
in
push
jae
and
xor
inc
loopne
xchg
pop
sub
cmp
sub
and
test
dec
add
loopne
jns,pn
and
jecxz
xchg
and
pushf
and
dec
das
sahf
out
scas
out
xchg
xor
es
pop
stc
sbb
mov
int3
insl
cmp
and
cld
movl
lods
pop
cltd
sub
scas
mov
insb
sbb
es
insb
push
scas
ja
out
and
push
pop
test
or
mov
test
add
inc
dec
fidivrl
dec
lret
jbe
cmp
jbe
jmp
xor
pop
dec
push
adc
xor
push
inc
sub
cmp
in
jo
mov
jbe
inc
stos
fildl
data16
into
fsts
sub
dec
mov
pop
xorb
mov
adc
mov
out
push
jbe
pop
repnz
fwait
push
rol
in
lock
lds
call
daa
mov
test
jne,pn
inc
leave
cmp
jl
sets
push
pusha
mov
std
jae
xor
outsl
lds
dec
mov
in
repnz
jo
je
cmpsb
int3
pop
add
add
ljmp
cmpl
sarb
mov
xor
lahf
xchg
xchg
add
xchg
divb
adc
pop
rclb
pop
out
sub
pop
push
or
jp
or
add
sbb
add
shl
add
out
push
push
sub
xchg
mov
push
push
into
or
add
cltd
loopne
or
jae
inc
popf
adc
mov
mov
shrl
scas
sbbb
imul
leave
in
cs
mov
jne
roll
cmc
jle
push
jo
cs
cltd
lret
adc
into
cmp
push
pop
mull
int
cld
cmp
cld
jae
pop
or
mov
popf
pushf
outsb
mov
aaa
rcll
inc
mov
mov
enter
and
sbb
pop
movsb
jb
dec
test
js
and
mov
mov
call
inc
push
cli
jle
mov
cltd
pushw
out
imul
pop
inc
in
mov
sti
fsubp
mov
stc
pusha
jo
mov
inc
bound
icebp
add
negl
in
inc
imul
fsubrl
cli
xchg
bound
sbb
mov
xor
aaa
or
incb
andb
add
imull
cmp
lcall
aam
insb
mov
test
or
jge
imul
cld
in
ja
push
mov
pusha
clc
sub
mov
mov
jbe
jo
jl
push
jmp
cmp
mov
daa
popf
fucomip
cld
lcall
inc
stos
loopne
sub
addr16
mov
xchg
mov
xor
inc
cmpsl
out
xchg
mov
shll
mov
int3
sbb
jecxz
cld
lods
xchg
mov
pusha
in
outsl
push
iret
loop
mov
daa
aam
and
lock
jp
repnz
mov
cmp
aad
push
mov
into
into
mov
jmp
fistl
cmp
clc
sub
or
addb
add
fistl
jno
imul
inc
or
push
pop
cltd
cmp
push
or
or
sub
mov
enter
dec
or
sbb
fsubs
or
mov
addb
test
bnd
std
adc
enter
inc
pop
cmp
popf
sbb
scas
inc
pop
hlt
dec
xchg
nop
mov
pushf
popf
sbb
xchg
fs
mov
es
jg
lea
ret
sti
test
cwtl
dec
stos
sub
inc
push
cmp
rclb
leave
jmp
mov
dec
xor
imul
and
sbb
adc
in
ljmp
push
int3
out
add
sub
push
jmp
push
fbstp
mov
jo
mov
aaa
inc
imul
push
xor
imul
and
das
bound
push
int
fldcw
leave
sbb
sar
xlat
push
addr16
pop
repnz
repnz
pushf
push
imul
mov
and
ficompl
ljmp
int
outsl
jp
fildl
or
lret
push
addb
hlt
xchg
sbb
sbb
pop
stos
inc
in
inc
push
movsw
loopw
in
mov
insb
cmp
jmp
cwtl
test
and
jmp
cmp
cmp
xlat
or
xlat
xlat
ss
or
movsl
jb
dec
mov
outsl
push
xor
faddl
push
mov
adc
mov
loope
dec
push
push
sbb
fldcw
mov
pop
inc
movsl
ja
in
enter
push
lret
cmp
pop
fsts
fimull
call
xchg
push
xor
cmp
jbe
sub
stos
pop
aaa
daa
and
lods
imul
mov
mov
imul
mov
inc
inc
push
jg
dec
push
loope
or
xchg
inc
ds
pop
daa
inc
enter
adc
xor
mov
sub
fwait
pop
cmp
cwtl
or
inc
xor
add
and
idivl
push
xor
jecxz
roll
inc
dec
aad
mov
pop
pusha
dec
push
dec
imul
jb
flds
pusha
fstl
dec
sbb
mov
sbb
mov
outsb
stos
pop
scas
add
pop
in
jb
psrlq
add
addr16
test
aaa
push
test
mov
iret
or
dec
mov
and
test
flds
push
cli
lock
cmpsl
popf
xchg
jnp
lret
test
or
lods
inc
rolb
jl
popf
outsl
adc
jmp
sti
jle
popa
pop
mov
fdivrl
push
pushf
mov
lods
mov
pop
dec
bound
out
fisubs
dec
stos
mov
popa
imul
fidivl
lcall
dec
mov
iret
jle
mov
jae
movsb
insb
jnp
or
cmp
pushf
or
enter
test
dec
fcomi
std
lret
jno
push
mov
add
pushf
into
jg
nop
sbb
bound
jecxz
in
pop
inc
insl
cli
test
mov
or
cmc
push
gs
xchg
outsb
push
test
lods
mov
inc
inc
sub
enter
mov
xlat
movsb
out
fnstsw
push
push
dec
mov
cmp
stos
fmuls
or
ret
jae
repnz
adc
out
and
adc
adc
push
ret
dec
ja
fmull
add
fstl
push
mov
mov
fistpl
aaa
push
cmpb
imul
int
out
xchg
repz
and
sub
arpl
push
add
inc
jmp
addr16
mov
mov
sti
pusha
cltd
xor
imul
jmp
out
scas
insl
jb
push
inc
cld
pop
orl
iret
popa
jno
push
jb
dec
pop
fisttpll
and
push
pushf
cmp
pop
jae
mov
dec
push
lret
scas
insl
arpl
lods
jne
orb
bound
mov
sbb
sbb
cmp
mov
popa
xchg
in
aad
xchg
and
sbb
jae
daa
pop
or
js
sahf
xlat
jmp
test
int
stc
loop
fst
dec
sti
shll
scas
xchg
xchg
cmpsl
dec
add
lret
mov
jge
mov
fcmovnu
pop
sub
sub
negb
sbb
jnp
mov
call
jae
mov
or
adc
stos
fisubs
sti
xor
outsb
pushf
and
out
and
pusha
xor
mov
add
pop
fnstenv
inc
xchg
jl
add
xchg
cmpsl
into
dec
cmp
cmp
lea
push
adc
and
int3
insl
adc
cld
dec
loop
jno
test
loope
daa
std
push
push
or
sarl
mov
pop
xchg
in
mov
scas
pop
filds
sub
jno
loopne
into
add
pop
inc
cmp
ret
mov
js
dec
sub
xor
jbe
fdivs
scas
pop
test
sub
or
xchg
enter
and
sub
sub
stos
outsl
sbbb
dec
call
lahf
clc
fdivs
jmp
pop
mov
jae
xchg
pop
call
imul
pop
das
test
sarb
inc
ret
movsl
cmp
repnz
inc
xor
dec
xorl
gs
movsb
jmp
pop
xor
xor
decb
ss
mov
mov
or
icebp
jl
in
push
inc
sub
das
push
mov
lret
or
insl
popf
dec
test
movl
jmp
lret
push
push
dec
movsb
dec
pusha
jle
mov
lret
test
shlb
repz
dec
sbb
mov
insb
xchg
test
out
pop
mov
fsubrs
movsl
sbb
xor
cltd
icebp
pop
inc
dec
mov
sub
add
pop
daa
lds
shrb
sbb
jp
popf
or
sub
mov
pop
mov
mov
mov
mov
mov
outsb
sub
push
cmp
xor
sbb
pop
pop
or
or
inc
sbb
adc
lahf
push
je
sahf
lea
idivl
xor
sub
div
mov
inc
and
mov
pop
inc
clc
sbb
pop
sbb
xchg
rcr
fnstenv
pop
or
mov
shl
pop
jae
lock
xchg
addl
fs
jns
sarl
cmp
cmp
cmp
push
loop
lds
arpl
jp
mov
pop
in
inc
jns
fidivs
into
cwtl
cmpsl
repz
xchg
sbb
jbe
mov
push
adc
mov
popa
mov
jo
ja
xchg
xchg
addr16
stc
or
or
stos
gs
lock
lods
xor
mov
mov
cltd
inc
xchg
push
xor
addr16
inc
cmp
inc
aaa
mov
fsubl
icebp
pop
pop
sub
pop
pop
sbb
push
lods
add
push
jmp
adc
outsb
xchg
insb
push
or
jae
test
inc
push
pop
or
cmp
inc
adc
outsb
into
lds
fisubrl
add
scas
inc
and
sbb
fwait
lcall
sti
arpl
sub
mov
aad
mov
enter
aad
inc
push
data16
inc
sbb
stc
fisubrl
jnp
jo
push
mov
dec
adc
mov
xor
jmp
es
nop
sub
sar
arpl
sub
leave
cmp
testl
sub
in
inc
mov
jg
bound
and
mov
inc
roll
sahf
xchg
imul
fmull
das
pop
in
imul
push
sbb
lret
cmp
jge
lds
in
mov
mov
and
gs
inc
add
sbb
rclb
dec
fucom
sub
mov
aad
mov
sti
jae
xchg
add
fisubl
dec
or
pop
movsl
sbb
pop
arpl
inc
cli
out
xchg
lcall
or
comiss
jne
or
inc
jae
imul
cli
mov
outsb
shlb
jle
addr16
rcll
scas
cmpsb
push
push
ret
movsb
dec
push
fstpt
jl
lret
mov
adc
pop
add
int
cmp
xor
in
inc
sbb
stc
pusha
pusha
cmp
jns
and
cmc
imul
add
add
add
adc
dec
loop
xchg
ret
jno
mov
cli
inc
sub
cli
adc
pusha
ret
pop
dec
loop
push
loop
out
mov
ror
dec
cltd
cmpsl
test
sbb
fiaddl
nop
jnp
imul
cld
or
cld
sub
das
bound
imul
sub
mov
add
ss
push
xchg
pop
mov
push
ret
lar
fiadds
pavgb
xor
sub
mov
fs
js
inc
insl
or
cmpsb
aad
and
push
popa
out
adc
push
push
cld
mov
xchg
arpl
xorb
mov
push
jle
aas
fldcw
sbb
pusha
dec
and
inc
ficoml
jge
gs
out
jmp
fisubrs
cmovge
and
rcrl
mov
int
outsb
or
mov
mov
call
jge
iret
xchg
mov
cmpsb
cmp
mov
mov
lcall
iret
push
jo
stos
mov
xor
jnp
xor
push
repnz
push
inc
shlb
xor
xor
add
lock
mov
mov
mov
mov
fdiv
inc
imul
push
call
into
mov
sub
xchg
daa
dec
or
xor
ret
xor
fcmovnbe
pop
push
pop
cmp
mov
leave
push
fnstsw
sbb
mov
mov
sbb
mov
dec
insb
jns
jl
jg
punpcklwd
iret
lods
rolb
rcrl
mov
push
ds
je
int3
in
xor
dec
cmp
or
dec
fxam
jbe
adc
outsb
iret
push
movsl
pushf
in
iret
sbb
test
pop
mov
ljmp
xchg
mov
out
adc
jmp
push
xor
cltd
into
pop
das
inc
test
pop
cmp
aam
inc
pop
and
sub
push
jnp
cmp
test
cmp
mov
out
dec
sbb
mov
jle
aam
dec
jl
or
leave
out
mov
mov
cmc
cmp
dec
jno
cmp
scas
mov
add
dec
les
repz
or
iret
mov
iret
in
lret
clc
mov
push
imul
sub
repnz
jo
push
flds
xchg
mov
fadd
fsubl
push
daa
inc
es
jp
fiaddl
inc
out
loope
push
sbb
jb
mov
jp
lcall
xchg
push
das
jns
addr16
addr16
sbb
push
sti
dec
or
loope
dec
ja
test
stos
aam
mov
rcrl
xor
sub
sub
inc
push
mov
cmp
push
jl
out
cmp
dec
shlb
xor
in
aam
ret
cmp
popa
xor
cld
leave
add
sub
sbb
jbe
add
pop
sub
pop
inc
xor
ss
ljmp
adc
or
jmpw
push
ja
aam
sub
mov
or
out
repz
cmp
mov
loope
push
jge
jno
mov
push
hlt
scas
out
xchg
and
pusha
pop
cmp
and
xchg
in
lock
jmp
loope
mov
xchg
inc
and
test
mov
inc
sbb
outsb
add
sahf
xor
adc
pop
add
ss
pop
jmp
jnp
push
fwait
loope
adc
cmp
jmp
mov
rep
adc
inc
pop
out
add
fcmovu
in
shrb
mov
rorl
jmp
dec
popf
ljmp
imul
sbb
adc
jle
pop
scas
sub
pop
insl
stc
or
dec
dec
aas
sarl
lock
dec
test
dec
ret
fisubrs
xor
sbb
icebp
and
test
insl
fists
stc
fs
sub
dec
inc
insb
jae
sub
scas
mov
sub
mov
push
mov
mov
push
or
adc
test
pop
pop
cmp
mov
mov
notb
fildl
mov
mov
or
adcb
call
aam
xor
xor
push
xor
cmp
dec
cmpsb
pop
push
movsb
inc
xchg
insb
insl
ja
test
insb
sahf
ds
sbb
xlat
pop
xchg
pop
pop
xor
or
jmp
aaa
jl
lahf
out
jl
mov
xor
adc
pushf
mov
push
lret
flds
or
aam
sub
cld
push
sbb
int3
ret
push
mov
out
or
inc
xorl
push
jbe
xor
hlt
test
pop
outsl
sbb
rol
xor
pop
mov
lret
push
in
shlb
or
idivb
mov
push
pushf
shll
adc
aad
or
cli
or
jl
jg
add
add
outsb
inc
jle
cmp
cmpsl
pop
sbb
in
cmpsb
mov
repz
test
jg
and
sub
and
mov
adc
mov
xchg
inc
mov
mov
scas
jecxz
test
aas
sahf
mov
cmp
cs
xor
or
shl
xor
lcall
mov
mov
fldt
scas
cmpl
mov
push
or
xor
rcr
mov
insl
inc
xchg
sub
in
cwtl
xchg
sbb
add
leave
or
iret
mov
cmp
orb
jle
xchg
jo
sub
out
pop
mov
shll
mov
testl
test
push
cmp
push
pusha
mov
xchg
into
xchg
les
pop
int
jne
imul
and
inc
movsb
shrd
loop
jb,pt
nop
add
clc
and
inc
out
rorb
iret
jbe
repnz
adc
pop
add
xchg
dec
mov
xorl
add
mov
stc
mov
cmc
lock
lret
or
xchg
cmpsl
jge
ss
inc
andb
xor
in
les
xchg
ror
scas
jno
dec
jmp
and
movsb
dec
and
add
dec
loope
sub
fisubrs
ret
les
dec
xor
mov
daa
ficompl
out
mov
and
imul
mov
in
sbb
lds
lods
and
enter
ljmp
inc
jno
pop
lea
out
fcomi
dec
jnp
mov
cmpl
dec
cli
divb
lds
fistpll
clc
mov
xchg
in
push
xor
and
int
push
jg
outsl
vpshab
jge
cmp
inc
loopne
mov
loop
movl
aam
call
enter
hlt
or
adc
int
enter
rcr
std
loope
mov
mov
scas
and
lock
lret
adc
imul
inc
mov
jo
pop
shlb
fdiv
enter
cmpb
sub
or
xor
xor
lret
mov
adc
adc
push
fists
mov
xchg
dec
loope
xchg
jmp
popa
shll
jb
sahf
lods
cmc
ljmp
cmp
aas
pop
inc
imul
cmp
adc
faddl
sbb
inc
clc
jg
push
lret
mov
xlat
adc
lds
jns
mov
sub
add
notb
orl
jge
stos
lock
popa
js
in
dec
cli
rcr
push
mov
loopne
mov
inc
rolb
xchg
repz
bound
cmp
popa
insb
roll
or
xor
or
imul
sbb
or
sbb
push
dec
dec
jbe
xchg
xorl
sub
outsl
stos
icebp
add
fwait
into
insb
adc
xchg
jbe
sbbl
test
mov
leave
jns
leave
pop
cmp
js
test
ss
add
cwtl
scas
mov
xor
shll
fld
pop
add
int
sbb
sarl
cmp
cwtl
mov
ds
sbbl
jecxz
sub
jno
adcb
inc
inc
push
in
pop
es
sub
inc
inc
mov
mov
stos
fsub
ja
hlt
adc
mov
lods
imul
cmpsb
loopne
dec
lods
jb
mov
test
mov
gs
cmpsb
lea
cli
ficoms
and
in
stos
sbb
inc
data16
dec
mov
jns
xchg
loop
jmp
cli
mov
shrb
add
xchg
jmp
daa
or
jne
js
inc
add
sbb
rorb
pop
popa
adcl
iret
or
mov
arpl
adcb
sbb
pusha
push
repz
sub
lock
ret
pushf
scas
push
ds
cmp
mov
in
add
lret
ljmp
jle
fisttpll
adc
fldl
or
sti
dec
inc
push
jg
adc
adc
imul
xor
push
insb
fucomip
in
inc
pop
insb
lock
dec
rol
out
or
dec
aaa
xorb
or
daa
sub
xadd
and
push
cmp
divb
mov
daa
pop
inc
inc
aas
xchg
jnp
jns
loop
loop
pushf
lret
dec
push
push
dec
movsl
cmc
loop
push
pop
mov
scas
clc
test
cmc
dec
xor
sbb
add
add
mov
or
outsb
adc
mov
push
and
inc
pop
gs
clc
std
out
mov
sub
push
pushf
test
xor
or
add
and
adc
out
jg
das
or
mov
divb
in
adc
daa
lock
cmpsl
cmc
pusha
andl
adc
out
in
xchg
icebp
fbld
and
daa
jbe
loope
inc
lret
test
imul
xor
sub
out
mov
mov
in
call
xor
or
les
sbb
fdivs
inc
loopne
fstl
aas
popa
cmc
adc
xchg
xor
or
jns
jno
sub
leave
dec
ds
out
mov
adc
loope
cmp
and
arpl
mov
adc
push
xor
lods
in
and
lea
cltd
and
jne
xchg
sarl
shll
dec
dec
enter
add
insl
popf
mov
inc
push
cmp
cwtl
imul
roll
imul
test
xchg
out
add
mov
das
cmpsb
cwtl
stos
mov
cmc
std
mov
and
sub
add
xchg
inc
mov
aam
sub
xchg
cltd
adc
insb
jbe
cs
pop
pop
push
out
fcomip
mov
mov
mov
aaa
movsl
mov
dec
jo
inc
mov
daa
out
adc
popa
ror
pop
mov
dec
lret
push
mov
sub
outsl
enter
pop
adc
ja
mov
insl
jmp
js
sbb
lcall
push
or
pop
xor
int
adc
sbb
or
xchg
les
push
loopne
push
test
or
sbb
pop
mov
mov
mov
jl
dec
test
gs
push
add
les
pop
fldl
xor
pop
inc
xor
mov
push
mov
xchg
jb
pushf
jmp
dec
test
jne,pn
sbb
or
aam
push
adc
jmp
rolb
and
iret
jne
inc
or
subb
int3
xor
pop
gs
aas
jmp
lods
xor
roll
test
push
jmp
pop
in
ret
xor
cmp
push
mov
repz
cmp
add
pop
dec
mull
mov
rol
jbe
dec
inc
adc
mov
in
into
subb
or
xor
aam
ljmp
mov
lret
xor
idivl
mov
cmp
fdivp
in
out
pop
mov
mov
test
cmc
lods
mov
push
push
sbb
jns
sub
dec
cltd
in
adc
xor
or
fildl
sub
sbb
push
xor
and
repz
cmp
imul
dec
push
ja
and
outsb
dec
mov
xchg
sbb
sti
cli
mov
lock
mov
daa
shll
push
cwtl
das
sbb
andl
lahf
in
sub
std
out
cmp
xorb
inc
aad
xchg
je
int
mov
dec
lock
mov
das
out
test
aaa
int
enter
jno
nop
or
test
add
push
fcoml
and
mov
cwtl
and
das
unpckhps
cmp
loopne
negb
adc
fwait
sbb
add
mov
xchg
loopne
in
mov
push
gs
pop
pop
leave
nop
bound
in
or
stos
ljmp
jmp
int3
iret
sub
xchg
cmp
jo
repnz
rep
lods
fcom
ds
or
jl
or
adc
nop
lds
mov
ss
xchg
fists
pop
fmuls
std
out
sarb
sbb
jae
loope
xor
adc
pop
nop
fistpll
mov
iret
das
sbb
pop
loope
imulb
sahf
rcrb
daa
mov
push
arpl
pop
stos
gs
into
pop
loope
sbb
and
xchg
cs
repz
and
sbb
mov
fstps
mov
shll
jecxz
loop
jmp
inc
cmc
jbe
out
mov
xor
xchg
fcom
data16
dec
addl
in
int3
insl
daa
mov
add
mov
js
icebp
cmc
xchg
adc
bound
mov
mov
test
jp
inc
mov
cmp
jl
test
in
jmp
xor
mov
lds
pop
cmp
xchg
inc
icebp
stc
or
add
dec
repz
pop
sbb
rorl
ret
xchg
pop
scas
fs
outsb
ja
leave
xchg
outsb
faddl
mov
out
cmpb
dec
stos
leave
xor
add
enter
push
je
out
fxch
cltd
sbb
mov
inc
popf
js
cltd
pop
dec
loope
inc
pop
arpl
ss
das
cmp
pop
sub
lods
shll
push
add
mov
ret
shll
fwait
mov
mov
test
inc
fwait
sub
cli
pop
pop
add
inc
les
js
repnz
push
jmp
rolb
add
cwtl
mov
mov
xchg
dec
aam
cmpsb
ja
nop
dec
cs
push
pop
sub
out
repnz
icebp
out
xchg
push
mov
xchg
or
ret
pop
pop
pop
jle
insb
and
pusha
mov
cmp
movsl
mov
andb
mov
push
dec
inc
leave
inc
dec
pop
lods
in
mov
sub
test
andb
std
pop
add
into
push
outsl
xchg
xlat
mov
dec
sub
xor
iret
add
inc
inc
cltd
fwait
jns
fsubs
xor
jne
data16
aam
adc
jl
or
mov
faddp
mov
fwait
addr16
popf
push
in
icebp
enter
sahf
lcall
ss
ljmp
nop
adc
sub
jne
ds
sbb
adc
sbb
inc
cmp
mov
jmp
mov
mov
sahf
inc
not
push
push
shr
add
inc
cmp
adc
jge
mov
hlt
outsb
xchg
sbb
pop
jmp
call
xchg
cmp
or
push
addr16
sub
fiaddl
inc
inc
into
iret
imul
dec
mov
fldt
or
dec
sub
jle
scas
push
xchg
push
testb
fadds
mov
and
mov
jae
outsl
xlat
shll
xchg
aaa
scas
data16
in
fwait
adc
dec
in
dec
fidivl
ja
cmp
test
roll
push
xchg
pop
mov
adc
push
sti
cmpsb
ret
inc
sarl
lcall
testb
push
outsb
outsl
push
sbbb
fistpl
jp
dec
fisttps
fistpl
or
mov
xchg
popa
sarb
ljmp
push
and
adc
loope
mov
xlat
xor
out
xor
insb
sahf
in
push
push
aam
mov
xchg
cwtl
sbb
mov
pop
sbb
xor
jnp
daa
pop
xlat
hlt
jle
fwait
and
fidivs
cmpsl
mov
aad
fdivrs
mov
and
out
pop
mov
or
inc
les
mov
and
scas
out
mov
je
cmp
push
lcall
inc
leave
call
mov
push
and
xchg
es
clc
daa
lods
popa
mov
lods
notl
jecxz
sbb
fnstenv
int
test
repz
or
lods
stos
loope
divb
xor
les
test
nop
pop
out
push
imul
jle
aam
or
sarb
jg
pop
jecxz
iret
lods
sub
adc
lahf
cmpsl
mov
xor
cwtl
push
adc
cmpsl
fwait
cli
int3
sub
mov
add
in
adc
pusha
xlat
jns
ja
rcll
xchg
cmpb
sbb
pop
cld
adc
jno
mov
push
lods
fnstsw
jle
sbb
fbld
jecxz
xor
lret
jb
push
aam
dec
jbe
int
fldl
pop
stc
jp
mov
out
pop
jl
mov
lock
das
and
sub
mov
shlb
movsb
movb
ljmp
enter
xor
dec
xchg
pop
inc
or
test
cs
call
sti
add
mov
rolb
lahf
push
in
incl
fdivl
inc
in
mov
js
dec
sbb
fiadds
xor
cli
std
sub
and
dec
loop
sahf
add
ja
outsb
mov
push
icebp
imul
insl
test
dec
or
xchg
inc
shll
outsb
sahf
add
std
rcrb
mov
xchg
cmp
bound
inc
lods
fstpl
fs
pusha
inc
in
popf
inc
add
xchg
data16
data16
mov
or
jp
cmp
push
xchg
xor
add
neg
cmp
xchg
mov
mov
inc
mov
int
sbb
mov
jns
mov
stos
lds
add
sub
icebp
push
incb
pop
in
jne
push
push
loop
js
or
cmpsl
pop
shll
rcrb
cld
imul
jo
jb
xor
enter
mov
movsl
addr16
ror
test
pushf
sub
xor
push
add
dec
icebp
test
movsl
scas
add
adc
orb
jg
pusha
pusha
mov
mov
movsl
loopne
mov
lock
pop
bound
popf
out
xchg
push
mov
mov
stos
xor
shrl
js
pusha
vpaddb
insl
push
mov
mov
fdivrp
rcll
adc
jne
notl
sbb
dec
arpl
lds
test
jmp
cmp
hlt
fbstp
mov
ficoms
es
sub
aad
xor
mov
fs
jl
pusha
push
sub
ret
int3
add
push
adc
push
in
cmpsb
iret
imul
push
mov
jae
out
mov
iret
jo
adc
adc
mov
add
lds
sbb
std
xor
das
lcall
clc
fisttps
jmp
add
dec
lock
push
xchg
insb
repz
fnstsw
imul
cld
cmpl
imul
dec
cmpsl
xor
bound
jg
fcom
jno
leave
cld
rcll
lock
fldcw
sbb
sbb
sub
xchg
outsb
andb
fsubrs
or
aas
mov
cli
pusha
inc
fildl
xlat
daa
inc
popf
pop
sti
std
out
xor
out
push
mov
fdivrl
push
jne
jl
mov
in
jno
cs
xchg
jge
out
push
pop
clc
add
jl
mov
or
xchg
push
adc
mov
jle
jmp
in
mov
xchg
es
jecxz
test
negl
xchg
int3
fdivr
mov
or
xor
push
es
fisttpl
or
mov
cmp
add
dec
enter
ret
out
gs
loopne
test
dec
loopne
jo
cmp
fisttpll
sbb
fwait
xor
rorb
or
sbb
out
xor
mov
int3
call
daa
mov
out
adc
leave
jge
rcrb
rcll
sbb
add
ret
sbb
es
aas
aad
shlb
jecxz
ljmp
lret
cmp
push
jno
loopne
test
js
imul
loop
jae
aaa
cmp
jecxz
jg
sarb
dec
dec
pop
out
dec
insl
out
add
pop
int
dec
cwtl
das
push
sub
andl
movsl
bound
pop
jne
xchg
xor
inc
repz
movl
mov
and
push
mov
pop
lods
push
hlt
ljmp
inc
aad
jb
sub
rcl
fstpl
sbb
push
cwtl
inc
frstor
ficoms
cmp
dec
xorb
inc
mov
dec
sbb
int
and
popf
jle
or
push
sub
leave
xor
and
in
addb
cmp
orl
jb
add
int
scas
mov
icebp
mov
pop
push
lret
out
mov
cmc
pop
xor
push
mov
push
or
in
mov
xchg
jmp
cmp
lock
das
cs
mov
testb
cmp
push
rclb
cmpb
addr16
in
adcb
jo
shrl
repnz
movsl
mov
arpl
add
orb
je
mov
mov
push
repnz
cmpsb
xchg
sub
pop
lock
daa
jecxz
jno
push
mov
xchg
je
shr
cmp
aaa
lcall
sbb
scas
xchg
dec
xchg
scas
divl
mov
xchg
test
inc
or
dec
insb
jmp
add
sub
mov
pop
jle
scas
pop
ret
mov
fmull
xor
outsb
push
sbbl
in
shlb
hlt
sub
xor
xchg
fcomi
pop
xor
scas
das
ja
pop
movsl
ret
push
adc
in
out
das
push
lea
inc
rcll
lods
dec
jne
icebp
repnz
fmul
cld
adc
push
sarb
push
push
mov
jnp
or
jno
aaa
les
pusha
mov
in
push
pop
leave
push
push
mov
dec
mov
pushf
pop
repnz
or
xor
mov
incb
adc
fisttpll
cmp
ret
popf
pusha
enter
movsb
push
cli
dec
sbb
ds
mov
jmp
andl
mov
in
sub
rorl
andl
lcall
pop
cmpsl
in
mulb
jbe
int3
cltd
scas
mov
pop
faddl
pop
outsb
out
stc
sub
daa
ljmp
nop
xor
push
cltd
push
mov
inc
sti
outsl
into
sub
mov
add
shr
push
aad
xchg
jns
hlt
cmp
inc
test
fwait
add
shl
adc
mov
xchg
adc
data16
outsb
sti
dec
and
fistpl
repz
leave
mov
iret
scas
push
mov
cltd
cli
ja
jmp
out
dec
mov
jge
in
xor
pop
stc
pop
sarb
bound
xchg
aad
inc
sub
sahf
cmp
repz
jp
mov
fs
cltd
js
movl
mov
sbb
ds
cmp
sub
or
sub
inc
dec
je
add
and
adc
pop
xor
jmp
in
addr16
push
jmp
jb
sbb
push
or
daa
xchg
sub
xchg
into
push
js
mov
pop
lock
mov
or
add
mov
mov
sbb
je
push
dec
scas
dec
cmc
sub
cmpb
jo
add
sub
hlt
mov
jb
pop
inc
xchg
out
movsl
mov
scas
pop
shrl
fsubl
pop
xchg
push
jo,pt
and
rcr
jle
mov
jno
cwtl
in
mov
xchg
rcll
xor
xor
int3
pop
icebp
nop
daa
pop
or
sub
outsl
stos
imul
pusha
aad
popa
cmp
mov
xchg
mov
ss
push
add
jge
inc
pop
jb
movsl
loop
add
xchg
cmp
insb
je
repz
adc
stos
xchg
sbb
pop
inc
pop
add
rol
stc
int
movsl
push
and
in
das
out
jns
sub
mov
add
push
xchg
sub
jae
inc
cmp
pop
je
nop
adc
or
and
dec
push
pop
xchg
push
popf
and
cmpsb
xchg
or
mov
xchg
repz
xor
lods
xor
mov
pop
aaa
repnz
mov
sub
ss
jmp
xchg
xchg
sahf
rorb
inc
es
mov
push
push
dec
enter
dec
inc
pop
inc
jecxz
mov
or
mov
loopne
jle
cmp
pushf
mov
mov
jno
jge
dec
pushf
jmp
rclb
in
mov
xlat
jo
pop
mov
jbe
in
cmovl
rclb
lcall
mov
mov
push
pop
or
cmp
inc
mov
xchg
push
sbb
xchg
clc
adc
loope
jae
mov
mov
and
lea
sbb
cld
je
xor
sub
orl
mov
add
or
jnp
decb
das
jne
in
out
ret
mov
in
or
sti
out
cmpsl
loop
or
adc
sahf
rcll
sbb
mov
mov
in
mov
clc
in
div
pop
lds
bnd
inc
cs
sarl
jb
push
int3
or
cmpsl
jp
mov
xor
stos
lret
cmp
shll
push
pop
xor
outsl
inc
sbb
push
or
mov
sbb
cmp
shlb
out
adc
ficoml
or
sbbl
cld
sbb
xor
mov
outsl
mov
mov
xchg
xchg
sti
mov
imul
test
or
repnz
dec
xchg
fwait
xor
arpl
xchg
lahf
push
jno
jge
cli
ds
xchg
push
jmp
jb
jns
movsl
repz
pop
dec
mov
jl
jne
and
nop
ret
inc
loop
in
mov
loop
mov
push
icebp
jno
mov
sbb
mov
outsl
sarb
push
cmp
ret
iret
xchg
inc
out
shrl
jne
add
or
std
cwtl
pop
mov
mov
fwait
rcl
xor
fwait
xchg
dec
fisttpl
xchg
mov
out
pop
test
dec
fnstenv
xor
sarb
fldlg2
jmp
and
and
xchg
jmp
xchg
pop
xchg
mov
cmpsb
inc
je
pop
xor
call
call
popa
pop
xchg
xchg
jmp
push
and
je
mov
or
pop
sub
fwait
mov
das
shl
ficoml
dec
push
scas
lea
gs
mov
mov
enter
bound
adc
scas
inc
xchg
in
cmc
ret
sbbl
or
xchg
mov
int
lods
insl
in
mov
jp
sbb
fcomps
xchg
cmp
subb
xchg
ds
inc
mov
jno
imul
dec
and
inc
hlt
scas
or
xor
xchg
mov
pop
sub
pop
jo
arpl
xchg
repz
add
int
jne
or
rolb
mov
lods
jmp
lods
pop
and
xor
stc
fsts
out
sub
jno
mov
or
mov
sbb
pop
fnstenv
enter
adc
outsb
pop
sti
cwtl
lcall
shll
or
jbe
clc
and
enter
aas
movsl
dec
aad
mov
jp
rcl
pop
mov
sub
cmp
aad
sub
xlat
jne
mov
dec
les
rcrl
repnz
loope
sbb
incb
sub
pop
jno
lods
addr16
in
insl
pop
and
inc
mov
dec
shld
sub
mov
outsb
mov
xlat
outsb
cltd
inc
adc
and
mov
jbe
push
and
push
gs
stos
push
mov
je
and
mov
movsb
or
aaa
mov
aad
mov
jne
xchg
push
add
xchg
cmp
lock
mov
cmp
xor
mov
mov
adc
ret
pop
js
lahf
lods
pop
mov
shll
mov
jg
lock
add
in
gs
fsubrs
lods
and
inc
popa
ljmp
xor
push
xlat
outsb
jno
iret
out
ret
fbstp
pop
aad
mov
orb
push
out
dec
jbe
lret
notb
lea
or
sub
mov
jl
add
loop
jge
ja
push
push
adc
repnz
push
mov
daa
mov
in
pop
jmp
mov
cltd
call
subl
fwait
imul
pop
imul
pop
sub
fimull
xchg
add
les
sub
arpl
or
fwait
mov
shr
mov
aaa
sub
sbbb
xchg
sub
jo
inc
or
mov
dec
fucomip
loope
dec
inc
fwait
jge
mov
add
bound
clc
pop
mov
push
aam
xchg
adc
jae
fldcw
jecxz
out
pop
inc
into
repnz
repnz
cmc
mov
and
mov
aad
mov
or
cltd
rclb
pop
insb
mov
icebp
inc
rolb
adc
sub
adc
jae
push
cmp
mulb
and
mov
rcl
mov
popf
pop
push
cld
flds
sub
push
cmpsl
push
fwait
test
pop
mov
pop
adc
scas
pop
jmp
inc
cwtl
lret
cmp
cmp
jmp
dec
fdivrl
cli
sbb
test
push
add
insb
aaa
das
sub
pop
add
aam
jae
dec
sub
aad
cli
inc
imul
jl
push
sbb
int
lds
iret
xor
nop
xor
ret
dec
mov
pop
in
pop
sahf
jmp
and
dec
and
fnsave
stc
xchg
mov
int3
mov
shlb
pop
push
inc
or
jno
xor
cmp
add
mov
mov
mov
filds
mov
and
imul
daa
mov
ja
cmp
and
sub
shl
sub
insl
je
add
and
cs
xlat
ds
jge
sub
sarl
sti
sbb
or
icebp
mov
pop
or
imul
pop
jb
push
mov
imul
push
jno
add
mov
jae
cmp
cmc
push
mov
lds
push
pop
sub
add
inc
in
adc
insb
jbe
cld
mov
imul
into
push
icebp
cmp
xor
jmp
mov
or
xchg
sub
sbb
add
push
push
add
mov
gs
and
arpl
mov
dec
sti
ss
jmp
data16
mov
pop
inc
int
sub
jne
ret
mov
push
imul
popf
push
es
xor
or
and
push
popa
push
pusha
mov
push
xor
dec
push
lret
bound
inc
dec
sbb
popf
stos
and
popa
aad
fcomps
mov
aad
push
in
sbbl
dec
sbb
in
fsts
sti
sub
push
pop
loope
push
mov
pop
xchg
stos
sub
or
lahf
addr16
dec
sahf
push
aas
repz
lds
popl
in
cmpsl
add
imul
cmp
call
push
mov
pusha
movsb
push
lret
imul
xor
fs
popl
pop
push
int3
mov
add
lret
mov
lret
sub
ja
or
mov
jne
cltd
push
and
test
sbb
xchg
jns
cmpsl
mov
adc
mov
pop
jb
jns
std
cmp
leave
or
jge
scas
fsubl
push
or
int3
mov
jmp
jo
xor
push
imul
sub
inc
faddl
aad
or
std
and
jp
insl
adcb
mov
dec
push
out
adc
aad
repz
xor
mov
dec
iret
cmpsb
bound
xchg
mov
stos
mov
repz
sarb
inc
sbbb
or
mov
cmpsl
mov
fidivl
ret
popa
jb
in
idivl
scas
ljmp
cwtl
ss
and
fistps
sub
notb
mov
push
xor
jae
mov
ret
push
push
pushf
xor
in
mov
jl
mov
xchg
mov
cmp
cmc
int
mov
loope
and
leave
jo
and
ja
test
cltd
fimull
push
dec
mov
imul
je
int
shrl
cmp
fidivrs
sub
adc
cmp
stos
xor
inc
mov
mov
das
jecxz
mov
inc
mov
movsb
push
cmp
adc
push
mov
js
dec
out
or
pop
jp
ficompl
xlat
addb
ret
cmp
mov
inc
xchg
enter
lods
dec
cmp
hlt
xor
pop
hlt
repnz
test
sub
and
ljmp
mov
add
pusha
scas
icebp
fs
push
hlt
pushf
clc
ret
pusha
sahf
sbb
pop
outsb
out
push
imul
stc
push
push
adc
dec
jmp
add
andb
pop
aaa
mov
pop
cmp
push
pop
jae
sti
jle
js
xchg
cwtl
cmp
and
lods
mov
inc
subb
adc
adc
clc
push
inc
aam
mov
mov
ror
push
lret
mov
sti
testb
mov
jb
incb
push
jmp
es
stos
movntq
sbb
loop
fsubs
and
mov
ret
aad
dec
add
inc
jb
jo
andb
mov
cwtl
and
adc
ret
dec
pop
add
js
fimuls
insl
ret
lcall
stc
ficomps
notb
bound
mov
es
lahf
fdivr
and
into
jle
int3
fdivs
retw
mov
nop
push
adc
sti
out
xchg
fsubs
inc
mov
push
xor
loop
sub
push
cltd
fisubs
call
jnp
loop
imul
les
pop
ss
adc
addr16
hlt
es
pop
push
add
push
dec
mov
pushf
dec
push
sbb
cmpsb
dec
xchg
out
jb
add
or
fucomi
bound
es
cmpsb
mov
lcall
xchg
dec
adc
jmp
test
pop
out
xor
cmpsb
add
fidivs
pop
jne
scas
add
jle,pn
sbb
push
push
jmp
loopne
push
popf
push
xchg
mov
add
int
or
dec
call
or
lods
jg
sbb
pop
int
dec
cmpsb
movsl
xchg
je
push
jle
cmp
and
mov
fsubl
jecxz
adc
cmpsl
jl
stc
sti
loop
dec
loope
mov
mov
mov
pop
jp
adc
pop
cmp
and
test
lea
insl
imul
adc
jb
mov
cmpsl
add
es
stc
subl
movsb
test
popf
xchg
jae
cltd
ds
dec
inc
fcmovnbe
mov
jle
into
and
nop
or
movsl
shlb
dec
xchg
loop
cmp
fdivrs
adc
rcrl
test
test
jp
bound
lcall
mov
and
adc
sti
idivl
cltd
outsb
adc
inc
mov
dec
std
das
xchg
pushf
js
lcall
jecxz
hlt
movsb
lea
xchg
enter
push
inc
mov
push
xor
das
cli
jg
mov
notb
shll
testb
mov
loope
shl
and
loope
lods
sbbb
lock
fnstenv
hlt
out
lcall
js
sbbl
int
sub
insl
jg
aad
mov
lahf
mov
mov
mov
add
lret
pop
pop
aaa
pop
add
repnz
sub
jg
inc
jno
sub
mov
pop
dec
cwtl
mov
outsl
inc
push
pop
and
mov
ret
rolb
cld
push
cmp
and
pop
cld
push
mov
gs
repnz
xchg
jns
loope
push
adc
testb
cli
push
cmp
push
xor
icebp
cmp
out
mov
cmp
and
sub
mov
enter
and
mov
fsubrp
cmpsb
cmp
mov
jno
add
cmp
inc
outsb
insb
outsl
jb
test
fiadds
test
or
fsubrs
sti
xor
loopne
xor
push
jbe
add
repz
int
outsl
pop
xchg
int
aad
lock
sub
stos
ds
lds
push
stos
or
std
ret
aad
mov
cmp
push
sahf
mov
fisubl
lret
mov
inc
movsb
and
test
ss
lret
gs
add
mov
into
jbe
cmp
xor
cmp
fidivrs
aam
jb
shl
cltd
push
or
jle
outsb
mov
sub
mov
sub
push
fwait
shr
aad
into
daa
test
push
out
test
int
fstps
out
lea
pop
push
xchg
xchg
and
adcl
or
lcall
sbb
mov
lock
cmp
mov
jns
sti
std
sbb
push
repz
mov
or
sub
mov
sub
xchg
sub
std
push
jbe
icebp
in
es
push
xor
add
call
lock
es
add
lea
scas
js
fstpl
jnp
or
jbe
mov
loop
or
cmp
pop
lods
mov
in
xchg
dec
outsl
in
or
push
xchg
shrb
fwait
sbb
pop
xchg
mull
neg
call
bound
iret
or
cmp
divb
sarl
mov
enter
or
mov
jecxz
mov
mov
sub
shrb
or
mov
cmpsl
subb
sbb
icebp
sbb
fcmovb
rclb
mov
pop
sahf
dec
inc
push
or
cs
jae
add
lods
push
mov
jge
cmc
jnp
jb
test
out
push
popa
lcall
mov
lahf
sub
xlat
pushaw
or
sbb
xor
mov
pop
incb
mov
adc
mov
jne
push
stc
gs
adc
test
adc
scas
loope
lods
fdiv
lods
out
xlat
mov
ds
mov
cs
jle
test
aam
add
pop
andl
mov
bnd
imul
push
dec
sahf
xor
pop
adc
int3
sub
ds
sbb
jne
repnz
pop
cmp
mov
push
negl
insb
call
aam
lret
pop
sub
loop
sbb
xchg
pop
mov
mov
push
daa
xlat
and
sub
and
into
sbb
clc
inc
inc
jb
enter
or
and
or
xorl
insb
sbb
xor
fsubr
push
push
into
sub
or
jo
push
int
mov
movl
ret
xlat
jmp
push
xchg
cwtl
jl
push
sub
mov
divb
dec
jo
rcll
bound
cmpsb
lahf
xchg
jo
pusha
pop
cli
dec
dec
jne
stos
scas
add
ffreep
ljmp
sub
mov
push
mov
jo
cmp
orb
ret
inc
adc
in
pop
adc
jmp
stc
fwait
sub
jns
add
xchg
cmpb
dec
ret
icebp
das
inc
cld
xor
mov
pop
out
fwait
lahf
les
pusha
cmp
in
xchg
fwait
mov
fwait
adc
cmc
fidivrl
aas
and
cld
ja
in
or
clc
sbb
mov
cmp
push
or
mov
addl
adc
cmp
call
sbb
jmp
push
loop
mov
mov
jmp
mov
and
bound
in
and
cmp
push
or
rclb
aad
add
and
pop
repnz
jb
rorb
adc
dec
outsl
ret
mov
lock
pop
sahf
mov
mov
jge
movsb
add
sbb
sbb
arpl
xor
mov
xchg
cmp
jbe
or
push
rorb
andl
int3
inc
inc
nop
sbb
push
daa
int3
sub
lea
ja
pop
ret
cltd
push
mov
int
xor
inc
icebp
inc
push
cmc
outsb
sbb
or
and
sub
gs
lea
inc
push
xchg
xchg
repz
add
stos
ret
xor
jb
xchg
les
inc
and
popa
mov
cmp
inc
test
loopne
outsl
push
fiadds
sub
enter
jne
out
jl
or
notb
fdivp
hlt
movsb
les
sbb
sbb
je
cld
pop
dec
fiaddl
jg
and
les
mov
aad
mov
cmp
cli
out
add
push
or
mov
push
ss
push
pushf
andb
aas
mov
cmp
sub
out
in
pop
insl
ja
int3
test
jmp
sub
push
lcall
mov
ljmp
std
sub
movb
ret
movsb
pop
inc
push
dec
push
mov
out
shl
push
into
mov
adc
pop
aas
aam
repnz
int3
mov
mov
sbb
repz
lret
sbb
aaa
adc
pop
dec
sbb
push
insb
xchg
mov
ficompl
pop
jae
mov
adc
mulb
mov
and
cli
addr16
out
dec
add
fists
je
push
sbb
aas
adc
shr
and
mov
push
mov
ja
dec
push
shrl
pop
sub
cmpsb
jno
sub
push
stos
inc
lahf
push
pop
xchg
jno
jmp
jae
in
or
mov
clc
int3
xchg
mov
mov
fsts
mov
push
mov
popa
push
pop
jmp
mov
add
sub
xchg
xchg
mov
out
inc
lret
mov
pusha
xchg
jg
inc
fnsave
push
pop
or
sahf
int3
inc
xchg
stos
jp
pop
mov
icebp
fldenv
push
dec
mov
mov
or
into
sub
frstor
orl
aam
mov
nop
repnz
cld
or
insl
adc
dec
jmp
inc
frstor
jb
and
test
push
and
inc
jb
lock
faddl
stc
cmp
lahf
and
sub
sub
rcrb
push
inc
xchg
bound
ds
insb
inc
scas
popf
scas
jno
pop
int3
xchg
jns
shl
stc
jle
popa
insl
sbb
nop
js
adc
jnp
lret
cmpsl
enter
xor
add
std
daa
out
mov
mov
xchg
pop
mov
ds
push
loopne
hlt
andl
add
iret
xchg
sti
cmpsb
push
pop
and
iret
lret
mov
data16
outsb
inc
in
adc
add
icebp
or
repz
push
repz
cltd
sub
mov
aaa
loop
xchg
push
jecxz
mov
jbe
xor
in
sbb
sti
cwtl
sub
xchg
ja
aad
dec
adc
add
push
std
lret
or
ja
addr16
push
jnp
pmulhuw
and
call
push
outsl
scas
push
jb
outsl
cmpsl
shr
into
loop
lret
das
stc
mov
je
test
cmpsb
fwait
popa
lods
orl
fs
repnz
adc
loopne
xchg
mov
push
test
fildll
jbe
int3
lcall
icebp
mov
sub
fdiv
mov
or
lret
mov
fdivl
jns
rcrb
pop
cli
add
jmp
sarl
jg
or
pop
push
xchg
cmp
int
xchg
pop
or
dec
xchg
push
gs
ret
inc
or
push
mov
and
cmp
xor
insb
mov
shrb
cmp
xchg
push
or
scas
test
push
int
mov
xchg
adc
xchg
out
fisubrs
cmp
sub
mov
data16
mov
fwait
mov
fnstenv
cmp
and
mov
loope
cmp
iret
push
cs
lret
and
mov
or
enter
add
sub
lock
test
loope
add
pmulhuw
xchg
inc
insl
pop
call
inc
add
adc
mov
adc
mov
in
push
lcall
push
sub
xchg
jmp
adc
jmp
cmp
mov
int3
sahf
ss
lret
dec
stc
nop
inc
jmp
lret
adc
add
mov
shll
sbb
out
inc
jo
xchg
lods
sbbl
push
jae
sub
inc
and
adc
sub
pop
mov
xchg
adc
pop
imul
scas
arpl
inc
jg
mov
mov
int
mov
sbb
adc
sub
imul
jno
enter
xor
scas
push
das
inc
out
mov
push
fs
push
cld
cmpsl
test
jo
mov
xchg
das
movsb
sbb
xchg
daa
shlb
cld
pushf
or
out
xchg
mov
jno
and
fists
hlt
leave
stos
sub
ds
addl
and
jnp
jge
test
iret
mov
jnp
mov
xlat
out
imul
jecxz
push
sbbl
push
cli
icebp
aad
mov
mov
imul
jge
das
mov
xchg
lret
test
fldenv
and
adc
iret
std
enter
push
jl
loop
jl
add
and
fimull
push
imul
xchg
cmpsb
mov
xlat
into
cmc
in
js
sbb
xor
sub
jne
mov
xchg
or
mov
xchg
adc
mov
in
pop
in
lds
add
into
sub
fcomps
rorl
jmp
jns
pop
cmpsl
or
add
das
dec
subb
test
stos
sbb
pushf
cmp
lea
or
movsl
movsb
inc
mov
sbb
test
mov
out
loope
pop
inc
mov
mov
int
xchg
mov
jg
fsubr
popa
pop
lds
negl
jbe
pop
mov
or
repnz
cmp
cmpsl
pop
push
aam
xchg
incb
inc
bound
mov
hlt
xchg
and
push
lods
ss
pop
sbb
mov
cmc
mov
mov
pushf
popa
xchg
inc
push
ret
pop
mov
add
xchg
sub
movsb
jae
test
iret
clc
mov
jns
cmc
popf
sbb
in
adc
or
popf
mov
andl
call
into
cmp
lea
xchg
or
or
int
ljmp
pop
jecxz
cwtl
sub
repnz
repnz
jmp
popa
push
js
mov
sahf
filds
mov
in
inc
popf
jno
pop
lcall
jae
pop
pop
imul
mov
cmp
sub
cld
add
xchg
sbb
stos
cmp
mov
xor
shlb
cld
mov
sub
test
jmp
push
inc
aad
arpl
pop
fdivrl
aaa
inc
mov
push
mov
jae
cmpl
shrl
mov
and
xlat
cli
in
mov
mov
std
push
cmp
gs
orb
and
jae
and
pop
incb
mov
fstl
push
jge
int
sbb
sbb
xchg
lock
daa
inc
out
xor
mov
pop
jnp
mov
pop
push
mull
dec
xchg
pop
out
test
lds
and
stos
jge
xor
xchg
push
mov
fldl
sub
adcl
inc
aam
das
add
negb
push
lods
movsl
rcll
add
mov
xchg
push
test
and
icebp
mov
cmc
iret
gs
aaa
es
in
jae
xor
add
jmp
call
mov
add
mov
setg
loope
mov
enter
cmpsl
div
jecxz
bound
outsb
cmp
and
in
jmp
add
cmc
adc
negl
testb
ffree
jp
mov
xchg
sub
clc
pop
xor
test
inc
jns
adc
ret
or
in
test
lret
pop
cmp
dec
mov
shl
ror
dec
cwtl
inc
dec
xor
lcall
iret
jbe
out
addl
xchg
in
fsubs
arpl
and
sbb
js
push
cmp
or
es
sbb
ds
add
cmc
sub
cld
scas
andb
mov
mov
cmpsl
rcll
cli
insl
pop
iret
sahf
shrb
stc
xor
aaa
stos
xchg
push
fwait
scas
fs
nop
xchg
test
inc
inc
xchg
call
mov
xchg
jmp
mov
mov
iret
push
xor
stc
sbb
xlat
push
mov
cmp
cltd
xor
js
arpl
sbb
and
cmpsl
daa
dec
dec
dec
jl
in
jns
ret
sub
or
rcrl
push
add
lods
add
dec
sub
clc
mov
inc
aam
mov
cmpsl
sti
adc
bound
iret
pop
aam
lods
cmc
and
shrl
push
aam
and
inc
nop
mov
fisubs
in
shl
adc
out
cmpsb
popa
negl
and
shr
add
stos
popf
add
add
sti
repz
mov
insb
or
test
insb
adc
inc
mov
inc
daa
sub
dec
jb
in
dec
je
enter
bound
repz
xlat
aas
insb
out
lock
sub
call
ficoml
fnstcw
adc
inc
sub
jg
cmc
dec
out
leave
jnp
cmc
dec
push
add
mov
ror
sbb
cmp
hlt
test
popf
rcr
sti
sub
cmp
ja
xchg
mov
jp
pop
adc
mov
in
cmovs
in
cmc
sbb
insl
aaa
sub
nop
jo
pushl
rclb
ljmp
testb
fstps
cs
adc
and
push
data16
stc
pop
mov
sub
inc
push
inc
cmp
hlt
out
pop
cltd
add
cmpb
outsl
dec
aaa
ret
fcmovnbe
pop
and
or
mov
lret
sarb
fldcw
pop
aaa
jmp
dec
mov
cmp
in
inc
add
sub
ja
imul
jo
dec
aam
popa
idivl
push
adc
pop
jb
test
and
dec
notb
subb
sbb
lods
lds
inc
test
sti
dec
cmpsb
mov
in
in
inc
mov
fucomi
mov
testb
lock
fnstcw
int3
inc
sub
jbe
ret
rclb
fwait
iret
dec
flds
mov
test
jmp
fildl
push
aas
lahf
cmpsb
and
notl
xlat
and
scas
loope
mov
in
dec
fcompl
ror
int
lahf
fisubrl
sbb
gs
sub
jmp
adc
or
dec
enter
adc
fbstp
inc
sbb
pop
sub
out
jb
cs
mov
mov
dec
lock
pop
push
push
mov
call
mov
sahf
ja
cmp
mov
mov
xchg
rcrb
fildl
fiaddl
lret
lea
add
in
pop
push
inc
out
test
mov
sbb
jg
dec
sti
jecxz
mov
push
xor
insb
push
idiv
mov
and
xchg
cmpsl
push
sub
pop
sahf
jl
jmp
push
pop
mov
mov
xchg
fwait
dec
xchg
pop
dec
cmp
out
es
stc
sub
and
sub
jg
lds
les
xchg
ficoml
fcoml
push
out
push
fwait
push
pop
cmp
and
inc
rorb
ret
das
out
fisubrl
sbb
cmp
mov
inc
mov
lret
add
popf
sub
dec
scas
mov
movsl
test
cmp
push
cmp
push
jns
jne
push
jo
dec
out
jmp
mov
cmovle
add
aaa
xchg
frstor
and
in
mov
jns
mov
andl
stos
xor
aas
cmc
cmp
mov
dec
ret
sbb
fwait
adc
outsl
mov
xor
inc
xchg
ret
jne
cmc
shll
adc
and
and
and
push
cmpsb
jne
add
or
mov
mov
cmp
es
cmp
dec
negl
sahf
and
xchg
pop
mov
sahf
imul
dec
loopne
mov
cwtl
or
and
inc
pusha
dec
mov
mov
mov
or
inc
nop
mov
mov
cmp
std
push
lcall
ds
movsl
repz
movsl
test
mov
cmp
fmuls
or
outsl
ja
sbb
and
fnsave
dec
outsl
or
xchg
pop
lock
out
cmpsb
mov
adc
push
mov
sub
stc
int
lock
adc
pop
cmp
pop
sarb
ret
adc
neg
and
mov
xchg
xor
les
sar
inc
in
aam
pop
jno
mov
dec
mov
clc
pop
push
ja
arpl
sub
fs
jl
sbb
cmpsl
mov
mov
cli
std
aam
lcall
test
cmc
ret
pop
sbb
sbb
or
add
mov
add
xchg
mov
cmp
data16
insb
pushf
adc
fdivrs
nop
lods
xchg
mov
dec
pusha
cmp
clc
or
int3
aaa
sub
adc
pushf
add
add
shll
inc
adc
scas
sbb
lods
test
rcll
cmp
test
pop
sub
incb
sub
test
mov
enter
mov
dec
icebp
test
in
jp
decb
mov
mov
jae
adc
insb
xor
sbb
jp
out
pop
xchg
jo
fnstsw
scas
jbe
popa
sub
sub
pop
stos
pushf
cmp
pop
adc
inc
lret
lea
cmp
mov
sub
clc
xor
lcall
stos
and
inc
and
mov
stc
mov
js
inc
pop
repnz
outsl
in
aam
pop
jecxz
popf
mov
xor
shlb
lock
mov
bound
and
in
lcall
sub
cmpsl
mov
pop
xchg
arpl
int
inc
scas
out
sbb
dec
adc
or
mov
or
adc
lods
test
inc
cmp
data16
xchg
sbb
mov
xor
sbb
sub
movsl
test
mov
jno
sbb
lods
pop
push
and
dec
inc
bswap
lret
insb
mov
lret
lods
mov
aad
push
lahf
mov
cmc
cmp
ljmp
push
jmp
insb
ds
loope
or
int3
push
xchg
outsl
pusha
and
scas
cli
nop
add
out
push
dec
hlt
je
or
or
xchg
in
out
and
mov
ss
push
dec
or
ss
add
xor
push
insb
pop
cs
sub
push
out
inc
mov
mov
rol
inc
into
repnz
cs
addr16
fisubrl
arpl
les
adc
dec
lods
push
jo
mov
bound
loope
idivb
ret
push
xlat
ja
or
fisttps
xchg
shll
outsb
jmp
popa
adc
in
aad
xchg
jno
pop
aad
mov
daa
movlps
call
push
sbb
stos
mov
gs
jno
test
adc
ja
movsb
sbb
imul
jge
jle
icebp
stc
push
scas
push
lcall
add
jae
out
bound
dec
mov
sbb
sub
and
mov
inc
je
ret
test
aaa
and
xchg
in
mov
push
sbb
push
ja
jl
add
inc
js
in
mov
adc
js
jge
mov
test
pop
or
mov
fwait
xchg
inc
movsb
mov
ss
push
dec
mov
dec
es
pop
or
inc
loopne
adc
shll
loope
mov
mov
adc
inc
mov
fidivs
pop
fldt
mov
int
sub
out
xor
inc
rcrb
dec
negl
scas
enter
cmp
sbb
int
movsl
or
jae
cld
cmp
popf
sub
xchg
push
adc
fwait
movsb
adc
dec
incb
mov
pusha
out
repnz
or
ret
js
mov
mov
loopne
movsb
sub
stos
aas
pop
xchg
and
imul
outsl
pop
jo
pop
pop
fisubrl
sbb
test
sub
cld
test
cmp
push
ja
jae
inc
pop
inc
sbb
jb
add
popa
pop
icebp
lahf
and
mov
xchg
std
add
inc
aaa
lods
or
divb
mov
xchg
aas
jge
arpl
aam
dec
xchg
and
imul
jp
aam
pusha
ffree
mov
jle
ljmp
ljmp
fldt
pushf
outsl
mov
fwait
mov
jbe
push
add
pop
push
dec
inc
cli
mov
stos
mov
je
jo
or
jl
dec
mov
cmpsb
xchg
in
pop
push
xor
inc
ret
adc
ljmp
mov
shr
ss
lods
pop
mov
adc
cld
and
loop
cmp
add
cld
pop
xchg
push
cmp
inc
popa
outsb
xchg
scas
push
inc
or
jle
or
add
pop
test
fldl
adc
test
pop
jns
cmc
out
add
jl
add
mov
clc
loopne
mov
imul
mov
and
adc
fs
inc
popa
std
adc
sahf
jg
cs
movsb
cwtl
jns
jbe
jbe
mov
out
pushf
or
nop
movsl
lds
notb
pop
repz
lcall
or
cmp
push
out
xchg
lret
fcompl
movsb
test
aad
sbb
stos
mov
sub
loopne
andl
out
fstl
mov
fdivl
rolb
add
test
mov
pop
lds
pop
jno
jp
pop
test
sub
test
or
out
shl
jle
arpl
fnstsw
cltd
enter
xchg
loop
imul
mov
arpl
idivl
addb
rcrl
test
in
movl
test
sub
add
dec
inc
xchg
cld
cmp
test
faddl
sarb
pop
pop
cli
repnz
dec
xchg
movsb
xor
addr16
test
mov
adc
inc
add
test
out
mov
scas
and
cmp
cmc
sub
fs
rcrb
mov
xchg
cmpsb
sbb
xor
mov
inc
push
mov
daa
inc
cwtl
daa
scas
mov
cmp
add
jl
pop
sub
popa
xchg
subb
inc
inc
lret
push
pushf
sbb
dec
test
dec
and
insb
xor
insl
jge
pushf
inc
and
inc
sahf
shrl
jecxz
cld
mov
fdiv
insl
ret
xchg
inc
pop
adc
mov
cmp
lods
fldcw
cwtl
mov
sub
mov
fs
in
sub
roll
push
les
mov
inc
lods
popa
rcr
cmp
fistps
xchg
cmp
push
lods
sahf
sbb
push
out
inc
sti
in
or
adc
mov
mov
gs
add
inc
jbe
xchg
jb
mov
mov
fwait
imul
xchg
lret
pop
imul
lret
adcb
jg
ja
fisttpl
inc
mov
fwait
sub
clc
or
cmp
xchg
mov
cmp
mov
test
pusha
and
push
out
in
int
daa
mov
mov
das
cmc
stos
cli
dec
pop
mov
dec
sbb
xlat
jae
xchg
iret
mov
loop
jns
cmp
sub
mov
cli
mov
idivb
js
xchg
mov
in
roll
mov
mov
outsl
inc
or
repz
fnsave
cmp
and
fsubl
popa
stc
mov
pop
mov
mov
test
popa
mov
inc
popf
jne
adc
xchg
jae
icebp
sti
mov
sarb
into
stos
insl
jo
mov
pop
sahf
aas
es
ds
push
in
sub
sub
inc
pushf
sbb
jle
cltd
push
daa
fisubl
popf
adc
jl
outsb
gs
sbb
fwait
and
fdivrp
jecxz
and
pop
aaa
dec
jecxz
std
inc
mov
cmp
ret
ja
lea
push
bound
sbb
dec
push
jge
les
mov
dec
xor
xor
fsubrl
jge
dec
or
cmp
adcb
mov
mov
sbb
lock
je
loop
fmulp
mov
dec
jecxz
aaa
jmp
xchg
cmp
cwtl
jle
in
arpl
xchg
popf
dec
and
sub
mov
lods
fcmovb
pop
not
cld
sbb
loopne
movb
sbb
vmovq
int3
scas
shll
mov
adc
je
test
lcall
adc
pop
lret
pushf
inc
incb
das
js
movsl
and
dec
push
jns
lock
xor
stos
or
add
jge
mov
adc
mov
std
dec
mov
pop
jg
xor
cmpsb
rcrb
mov
jmp
popa
dec
repnz
pop
pop
mov
leave
adcl
rcl
or
out
fcomi
fisubs
mov
mov
out
xor
cmpl
fisttps
movsb
or
negl
cmp
cmpsb
lea
push
aaa
addr16
push
xor
xor
es
in
cld
fcomps
adc
dec
mov
dec
jmp
mov
das
inc
ds
cmpl
sahf
inc
mov
scas
and
dec
inc
mov
push
test
dec
or
fwait
loop
pop
adc
and
add
mov
cmp
mov
sbb
sub
and
add
jne
cmp
andb
push
shlb
das
lret
lahf
xor
add
sbb
inc
aam
push
mov
pop
and
adc
dec
in
xchg
mov
jp
push
pop
inc
jae
pop
cmp
stos
lods
push
dec
cmp
pop
clc
out
loop
push
loope
jno
xor
add
cmpsb
fmull
xor
mov
jns
fiaddl
xchg
outsb
pop
ret
pop
inc
insb
mov
out
mov
or
add
xorb
inc
iret
mull
xor
lret
aad
iret
mov
lods
jl
push
pop
xchg
fstl
xchg
int3
xchg
ret
orl
add
cmp
add
inc
popa
ds
jo
fnstcw
sub
mov
mov
push
int
push
jmp
add
scas
or
iret
push
or
out
out
out
fs
mov
lcall
dec
lahf
cli
jae
jl
cld
leave
push
js
cmp
pop
adc
std
movsb
sub
in
or
cltd
xor
sbb
out
cmp
cs
sbb
xlat
cmc
addr16
inc
add
cmp
sti
ret
stos
aaa
test
jo
aas
add
adc
andb
cld
test
test
dec
dec
sub
cltd
xchg
popa
ss
inc
dec
iret
mov
xchg
sbb
dec
sub
xchg
aad
cmp
xchg
rcrb
pop
dec
mov
cld
adc
sub
xchg
mov
ja
icebp
js
sbb
and
cmpsl
cmp
xor
ss
ds
insl
inc
and
mov
js
pop
mov
addr16
mov
pslld
xor
jmp
and
add
dec
popf
jl
sub
dec
mov
push
loop
xor
jp
inc
add
es
and
ja
out
fs
movb
call
pop
pusha
jns
jne
addr16
jno
popf
xchg
adc
xor
fdivrl
push
sbbl
test
insl
cli
sbb
loope
xor
leave
mov
add
fidivs
mov
inc
aas
sub
imul
adc
sbb
jnp
push
adc
pop
lods
out
mov
outsl
adc
or
dec
push
inc
pop
and
icebp
jge
rclb
jb
into
dec
mov
repnz
pop
mov
xchg
cmpsl
test
and
insl
test
rolb
push
push
popa
movsb
subb
idivl
jne
leave
scas
cmp
nop
and
or
sub
daa
mov
cltd
imul
cmp
int3
xor
xchg
clc
xchg
ret
pop
pop
sub
add
push
cs
xorl
out
lahf
cwtl
pop
jne
sti
mov
das
mov
add
mov
pop
and
shlb
push
in
jle
dec
fisubrl
jne
cmp
imul
pop
push
rcrb
pop
push
cs
lret
pop
adc
pushf
shr
lock
std
leave
and
lret
arpl
pop
cli
dec
xor
jmp
shl
xor
fs
mov
xor
push
cs
push
mov
or
icebp
xor
imul
mov
cmpsb
les
test
call
mov
lea
sbb
cmp
ret
sbb
out
int3
push
mov
mov
add
sbb
iret
mov
mov
jae
insl
push
cmp
mov
xchg
ljmp
xchg
outsl
dec
push
add
aaa
cld
jno
inc
enter
sahf
pushf
or
sub
sbbb
cltd
jno
rorb
cli
rorb
and
mov
in
cmp
fistpl
es
push
push
test
out
loopne
mov
sbb
stc
mov
mov
js
mov
and
fimuls
push
jns
pop
xor
xchg
pop
pushf
mov
lcall
push
cmp
mov
or
nop
and
push
jle
in
cmp
sahf
int3
pop
xchg
ret
ds
cmc
int3
into
mov
movsb
sbb
xchg
xchg
testl
dec
sarb
das
and
xchg
xchg
dec
pop
or
xor
lock
inc
cmp
pop
inc
nop
popa
popf
jmp
sti
mov
xor
xchg
and
sbb
pop
shufps
movl
cmp
rcrb
push
out
and
cvtps2pi
mov
cmp
cld
cld
lret
push
sub
int
sub
sbb
or
xchg
push
mov
jo
and
add
or
add
dec
xchg
mov
movsl
cmp
mov
aad
subl
or
sbb
push
iret
fnstenv
pop
scas
jns
test
fldl
clc
inc
lret
fdivl
add
andl
stc
push
ficompl
xchg
pop
dec
aas
pusha
setge
pop
xchg
push
rcll
xor
scas
fadds
cmc
loop
adc
adc
cld
xchg
push
fidivl
inc
les
ds
jnp
call
movsl
cli
popa
inc
das
int
in
cmc
aam
fwait
js
sbbb
repnz
and
mov
push
mov
fisttps
mov
push
mov
xchg
and
cwtl
and
test
lea
sub
cwtl
mov
ss
add
or
and
jns
pop
shl
int3
mov
push
cld
call
xlat
push
adc
je
sbb
jnp
and
out
jo
pop
aaa
mov
jg
and
xchg
sub
pop
mov
xchg
gs
nop
std
lods
cmpsl
bound
sub
mov
jg
xor
pop
rorb
push
mov
cltd
jne
lret
loopne
xchg
inc
pop
xor
ja
and
adc
or
loop
cld
sub
xchg
mov
cmp
mov
mov
mov
dec
pop
jno
jns
clc
sarb
divl
or
sbb
dec
enter
and
mov
dec
nop
mov
test
pop
or
mov
jge
mov
mov
popf
sahf
repnz
jns
mov
jmp
push
mov
in
shll
mov
push
cmp
int3
sbb
or
dec
cmp
jg
outsb
sbb
sbb
jecxz
in
in
dec
pop
into
cld
popf
stos
jb
lahf
movsl
fsub
std
jmp
cld
inc
inc
push
mov
outsb
mov
std
adc
or
inc
push
or
int3
aam
mov
jecxz
push
jbe,pn
mov
or
ret
adc
sub
and
jbe
jmp
stos
popf
sub
sbb
sub
dec
insl
pop
xchg
test
mov
shr
mov
jns
push
xor
arpl
stc
std
enter
cli
sahf
imul
faddp
scas
mov
out
das
push
adc
add
cmc
inc
sbb
jb
testb
add
insl
xchg
and
jmp
repnz
xchg
aaa
cld
sti
daa
xchg
mov
loope
je
mov
pop
lods
sub
scas
roll
jl
ljmp
mov
jecxz
or
cmp
inc
stc
orb
jne
push
jle
pop
add
push
scas
sti
ds
gs
aaa
push
mov
lea
test
pop
pop
aas
or
sti
cmp
rcrb
sub
sarl
mov
in
pop
mov
mov
dec
mov
push
lods
xor
lahf
pop
out
sbb
out
mov
dec
aas
out
insb
sbb
add
adc
nop
dec
sarl
faddl
es
push
test
mov
dec
outsl
filds
mov
lret
inc
sub
adc
testb
pop
shl
mov
pop
pushf
adc
jp
enter
mov
mov
jns
call
adc
leave
xchg
insl
sbb
and
cmp
shrl
sbb
mov
popf
iret
xlat
and
outsb
mov
stos
jle
add
fbld
sbbl
movsl
adc
lret
push
cld
lods
jp
fdiv
daa
lcall
mov
int
mov
push
popf
test
push
xor
aad
pop
aam
adc
scas
cmpsb
and
mov
mov
dec
xchg
ja
call
stos
xlat
adc
dec
fnstcw
or
jo
inc
mov
dec
decl
mov
push
push
dec
repnz
dec
aaa
add
add
lret
xor
lcall
loope
cmp
aad
cli
or
pop
fstps
pop
loope
mov
stc
out
pop
test
inc
sub
xor
sub
inc
out
xor
mov
lret
bound
ljmp
add
jo
lret
nop
jbe
ljmp
cwtl
lcall
cmpsl
fisubrs
and
dec
pop
aad
not
iret
les
mov
mov
int
shrb
mov
pop
fcmovnb
fisttpl
jmp
jmp
xchg
idivb
lds
bound
jbe
jecxz
call
adc
repnz
and
jl
loope
xor
pop
pushf
mov
scas
sbb
ret
mov
jne
aad
fimull
pop
stc
cmc
mov
sub
fwait
lret
in
add
data16
cmp
testl
insb
bound
sub
mov
inc
ret
pusha
pop
jno
mov
stc
add
mov
and
mov
sub
and
pop
or
repz
sahf
push
divb
jle
push
push
das
rorb
adc
mov
aad
adc
lock
es
push
cmp
jno
insl
je
jnp
popa
adc
cmc
aaa
ret
push
pop
push
call
jne
jns
or
loopne
cmp
cmp
imul
dec
aaa
pop
sahf
fsubrl
push
pop
pushf
es
xor
dec
cwtl
jge
push
addr16
xchg
fcomps
rcrl
sbb
jp
rolb
leave
add
fisubs
dec
icebp
mov
dec
ja
push
lds
call
push
les
mov
sub
rcl
sbb
jae
jae
fcomps
sub
add
xchg
dec
jnp
ror
adc
leave
inc
lods
addb
fcom
mov
orb
push
fsub
into
mov
and
aaa
pop
mov
insl
xor
xor
xor
test
adc
sbb
add
sahf
lock
inc
jl
sahf
adc
pushf
and
int3
cmc
clc
and
cmc
nop
lret
jmp
cmp
jl
adc
xchg
std
xchg
and
daa
es
push
xor
dec
nop
shrb
outsl
inc
adc
lock
pop
das
jbe
mov
and
cltd
js
or
arpl
mov
adc
sub
adc
xor
sbb
cmp
xlat
inc
loop
scas
lahf
xor
rcr
movsl
sbbb
mov
and
subb
sti
adc
pop
daa
adc
xchg
push
imul
jae
out
std
mov
jo
clc
out
mov
loopne
add
cmp
adc
mov
lahf
or
sub
std
ss
out
aaa
pop
push
jne
xchg
mov
push
fbld
aas
xor
xor
mov
jo
into
popa
xchg
dec
in
push
aas
fcmovbe
dec
aaa
gs
lock
sub
imull
mov
lret
push
call
imulb
xor
dec
jbe
mov
lahf
or
xchg
pop
ret
movsl
rolb
jb
into
sbb
xchg
mov
sub
test
push
dec
or
push
test
dec
fsubr
loope
cmc
scas
dec
ret
adc
aam
and
push
aas
sarl
mov
push
loop
xlat
es
mov
arpl
dec
mov
sbb
mov
loop
sbbl
mov
xchg
pushf
push
rcll
stos
insb
loope,pn
movsl
std
fstl
popa
inc
data16
mov
lret
imul
lahf
mov
mov
ljmp
cmp
xchg
cmpsl
xchg
js
mov
pop
push
jp
xor
js
adc
imul
dec
lcall
pop
add
xchg
lret
push
xor
xlat
xchg
sarl
jmp
mov
fsts
je
dec
lret
fimull
xchg
stos
mov
inc
subb
mov
aad
and
movsb
xchg
mov
arpl
add
sbb
push
lret
or
mov
stos
sub
ja
push
loop
lcall
dec
cmp
in
xchg
iret
inc
and
lea
sti
loopew
rcrb
jo
jg
outsl
cmp
movsl
cmc
mov
xor
mov
add
das
mov
jns
movsl
lcall
jmp
cmp
cmp
mov
cmpsb
inc
add
ficoml
xchg
inc
ror
pop
shlb
test
mov
dec
push
clc
dec
jns
mov
push
sbb
pop
hlt
mov
or
imul
repz
adc
lcall
jp
aam
pop
xor
pop
call
xchg
xor
pop
mov
dec
enter
sbb
dec
mov
sbb
and
int3
dec
dec
popa
inc
jmp
pop
fs
lods
mov
leave
sahf
jno
mov
jo
pusha
out
jecxz
xchg
cmpsl
sbb
aas
pushf
daa
repz
jnp
push
sbb
push
dec
jae
xor
sarb
mov
mov
pop
ss
sbbb
add
push
ja
test
dec
and
push
dec
outsl
cmp
stos
push
repz
rcl
mov
cmp
push
or
leave
stos
xchg
movsl
push
xchg
or
xor
pop
dec
pop
inc
loopne
dec
pop
fldl
mov
gs
popf
and
mov
inc
xor
dec
sub
jne
xor
xchg
push
mov
mov
leave
fisttpll
cmpsl
call
fldt
repnz
lds
enter
mov
int
mov
daa
inc
lods
or
xor
sti
scas
jo
pop
push
in
mov
sbb
pusha
mov
repz
lock
jae
cmp
ret
mov
cmp
or
lcall
stc
out
mov
gs
xchg
pop
out
clc
mov
mov
dec
mov
scas
out
lds
js
movsb
adc
fnsave
pop
push
cmp
ds
popa
mov
add
repz
and
cmc
add
lret
pop
testl
jl
test
lods
leave
xchg
push
insb
or
adc
and
inc
cltd
dec
and
ja
and
stc
push
minps
aas
push
rorb
out
out
cmp
dec
xchg
cmpsl
lret
cld
dec
push
sub
hlt
pushf
pop
push
pop
xor
mov
ljmp
inc
inc
pop
cmp
pop
aaa
jge
loopne
cmp
cmp
mov
or
fs
aad
inc
outsb
scas
iret
mov
mov
les
cmp
sbb
jp
xlat
mov
loope
push
add
scas
in
js
inc
shll
shrl
mov
es
aas
xor
push
or
outsl
xacquire
div
inc
dec
test
movsl
jno
jnp
mov
leave
test
adc
adc
pop
mov
sub
stc
push
xchg
gs
lret
outsl
pushf
mov
mov
imul
mov
jbe
bound
mov
lds
jae
mov
push
call
or
mov
xchg
lret
xor
test
lret
sub
in
cs
jmp
call
fcomps
mov
filds
add
popf
rcrb
pusha
or
outsb
das
in
lea
data16
pop
je
sbb
ret
jl
cltd
mov
ljmp
ffreep
insl
add
push
stos
sub
xor
xlat
aas
je
andb
arpl
cmp
jecxz
sub
stos
sub
push
mov
mov
xlat
repz
mov
cmp
inc
sbb
shll
sahf
popa
and
sub
cmp
cmc
out
mov
in
xor
sub
call
sti
scas
mov
adc
arpl
lahf
out
xlat
inc
add
aam
mov
mov
shlb
add
pop
out
mov
mov
and
xchg
push
sbb
insl
lods
loopne
jp
ja
dec
or
repz
shl
cmpl
notl
test
pop
add
nop
push
mov
xor
inc
mov
outsb
stc
xchg
mov
repz
lret
or
fildl
jno
fmuls
rolb
pop
js
shlb
jecxz
mov
in
rolb
add
lret
jnp
cmp
sbb
imul
ljmp
and
cmpsb
mov
popa
cmp
pusha
pop
adc
pop
mov
xor
adc
xor
stos
jb
ss
or
hlt
inc
push
adc
mov
mov
int
addr16
add
jb
pop
ss
add
add
out
std
test
fldenv
or
mov
leave
ret
fmul
ja
push
xor
lea
push
xchg
lds
mov
mov
test
add
popf
fldt
je
dec
inc
adc
pusha
or
xor
hlt
dec
fadds
incl
rorl
sub
add
sbbl
call
cmc
add
imul
add
enter
jne
and
pop
cmp
dec
imul
inc
sub
xor
loop
negl
pop
fld
dec
mov
stc
ficoml
sbbb
ja
ja
mov
ficoms
or
inc
jb
push
sub
adc
jnp
imul
push
pop
imul
inc
or
cmp
scas
fimull
or
sbb
adc
fimull
xchg
adc
shl
pop
push
lret
pop
mov
out
loopne
in
and
adc
sahf
mov
and
orb
sti
push
xchg
mov
lods
ljmp
push
pushf
xlat
cmp
repnz
sub
add
cmp
inc
push
xor
push
test
or
movsb
jle
in
rcrb
arpl
dec
jle
adc
xor
add
or
fsin
jg
sub
pushf
inc
std
pop
test
insl
int3
out
push
test
fimull
das
int
push
jnp
adc
int3
int3
push
xor
fdivs
jnp
mov
mov
scas
in
imull
dec
pop
xchg
dec
pop
lahf
pusha
xor
sub
sub
cwtl
fldenv
sub
mov
jnp
pop
imul
mov
or
dec
movsb
mov
stc
cwtl
mov
out
xorl
mov
jnp
mov
movl
rol
sub
xchg
repz
pop
jb
lahf
push
xlat
ficompl
je
sbb
adc
xchg
fwait
jno
or
and
jo
pop
fsubrp
test
lcall
jns
inc
stos
sbb
ja
cmpsb
test
addr16
test
loopne
cmp
sbb
push
ja
cltd
fs
dec
mov
jp
inc
adc
out
adc
jbe
addl
jne
push
xchg
push
cld
push
cmp
call
ret
pop
scas
and
movsl
ja
mov
push
xchg
cli
faddl
dec
xchg
loopne
pusha
jge
mov
out
or
push
mov
cmpsl
adc
mov
sbb
je
mov
and
pop
or
xor
jp
fwait
cmp
push
lock
or
in
fwait
sub
pop
sub
mov
loopne
and
test
adc
fs
in
stos
pop
mov
jp
faddp
sub
mov
ret
xor
xor
ja
mov
add
inc
test
and
push
mov
fldz
dec
xor
xor
fidivrl
jmp
adc
fxch
xchg
fadd
dec
test
push
cli
inc
in
out
mov
inc
jle
or
fs
fxch
cli
imul
movsb
lret
fidivrl
jge
int3
leave
jnp
mov
les
fcoms
sub
pop
sbb
xchg
cmp
and
xor
fnstsw
fadd
or
inc
sbb
xor
clc
call
addr16
push
mov
lds
dec
xchg
insl
sti
xchg
and
repz
pop
add
xchg
inc
lea
rorl
cmp
cmp
aas
cmp
add
xchg
lret
rclb
xchg
jge
mov
test
mov
mov
shl
adc
adc
cmpsl
mov
push
daa
lcall
cltd
adc
push
movsb
push
jmp
ja
push
and
sti
in
jns
jmp
push
lds
sbb
enter
aad
fldt
mov
cmp
scas
or
imul
xchg
or
fs
inc
dec
mov
fists
movsl
jb
sub
jno
pop
push
icebp
cltd
icebp
dec
or
jno
or
cmp
cmp
or
add
cld
flds
jae
pop
shlb
leave
jge
mov
out
push
popa
and
or
cmp
mov
jl
or
xchg
mov
cmc
rol
dec
les
adc
ja
gs
adcl
fsubr
das
cmpsb
addl
inc
stos
mov
call
leave
icebp
stos
jns
sub
mov
adc
jbe
pop
jbe
ss
fistps
xlat
movb
push
sbb
and
fistpll
adc
lds
lds
and
jmp
add
adc
fsubl
pop
xor
js
psrlw
imul
sub
faddl
mov
clc
inc
xchg
data16
dec
xor
in
and
adc
stos
pop
xchg
adc
aaa
repz
int3
adc
movsb
loope
mov
push
test
pop
cltd
int3
addr16
aam
xchg
mov
sbbl
mov
mov
dec
ljmp
bnd
cmpsb
loop
repz
fsub
inc
sbbb
frstor
inc
xor
mov
pop
loope
cltd
fimuls
cli
into
sbb
mov
jne
addr16
sahf
aad
fwait
icebp
idivl
js
cld
xchg
rcl
int3
loop
pop
clc
sahf
lea
and
mov
cli
sbbl
and
out
cmpsl
sub
bound
push
mov
mov
add
aas
ja
jno
jge
jo
orb
aaa
pop
mov
sbb
mov
cmp
sbb
stos
pop
das
lahf
imul
push
xchg
stc
adc
push
aad
sti
lock
xor
push
lock
and
add
or
inc
dec
cmpsl
push
pop
mov
mov
jge
dec
mov
test
fstl
jge
pop
fwait
dec
loop
testb
in
mov
jp
and
jecxz
insl
push
jecxz
in
stos
dec
movlhps
addr16
jg
cmp
scas
dec
and
loopne
push
addr16
insb
lock
negl
mov
xchg
xor
pop
icebp
into
add
xor
inc
stos
aam
jno
mov
xchg
fsubrs
mov
pop
inc
adc
jb
loope
cmc
insl
mov
push
dec
fstpt
adc
xchg
cmp
inc
add
stos
fldenv
pop
sub
cmp
insl
push
les
es
cmp
xor
ret
icebp
out
fmull
adc
pop
das
dec
sub
mov
test
int3
lods
pop
add
pop
je
stos
mov
jnp
daa
pop
jg
add
mov
jmp
ds
in
xchg
cmpl
push
shr
fnstcw
pop
or
push
xchg
lea
pop
jb
and
fcoml
jnp
jne
pop
lret
mov
add
sbb
jo
test
stos
lods
jno
outsb
jmp
jle
and
mov
call
push
lret
pop
jecxz
jns
into
mov
add
repnz
mov
jnp
fstp
push
inc
jns
mov
movsb
in
lods
daa
repnz
adc
pop
or
sub
int
push
lcall
insb
jo
inc
out
push
into
mov
das
cld
and
addr16
xchg
test
test
insb
aad
popa
mov
sbb
test
fiaddl
pop
xchg
pop
add
or
insl
dec
jle
test
popa
aad
xor
jbe
mov
push
jmp
out
pop
mov
cmp
or
add
jne
imul
pop
mov
pop
xchg
xor
les
imul
lcall
das
push
inc
imul
fcompl
or
repz
add
fisubrl
cmp
add
repnz
or
in
jg
in
add
sub
sub
xor
addr16
loopne
insl
outsl
push
xor
mov
jae
imul
int3
jnp
scas
je
jle
hlt
imul
mov
mov
adc
pusha
lock
scas
mov
or
and
dec
les
ficoms
sbb
dec
mov
dec
ds
and
icebp
mov
add
ss
loop
jp
fldt
jae
mov
bound
inc
xchg
xchg
outsb
or
lds
add
aas
pop
mov
inc
mov
or
xchg
jno
sbb
in
jbe
jo
or
pushf
push
orb
xchg
sarl
cmpsb
testb
fwait
movlps
rclb
icebp
fucomp
aad
imul
jnp
lods
cmp
fucomp
bound
xchg
add
addl
mov
movsb
mov
pop
filds
ret
push
mov
nop
cmp
cmp
xchg
mov
mov
xorl
shrl
pusha
dec
pop
push
nop
rcr
test
aas
lcall
pop
lock
into
stc
fwait
insb
stos
jecxz
imul
lcall
in
adc
xor
mov
push
mov
sarl
js
mov
in
xor
mov
jae
cmp
out
cld
mov
rcr
ljmp
sbb
in
sub
or
addr16
insb
test
mov
adc
out
mov
add
ret
jb
add
out
fildl
and
popa
or
ljmp
pop
aad
push
cmc
push
outsb
ret
push
pop
xchg
sbb
pop
fldcw
mov
ds
roll
arpl
inc
scas
fdivrs
mov
clc
sbb
xorb
popa
shll
jge
movsl
push
cmp
sbb
out
dec
daa
fiadds
inc
jl
daa
out
arpl
iret
or
scas
aam
jmp
dec
aam
ja
cli
sub
loop
push
ds
pop
imul
outsl
movsb
mov
pop
aas
lods
jecxz
or
inc
xchg
cmc
orb
cli
scas
loopne
cmc
inc
and
pop
hlt
jb
lea
mov
test
xor
jg
inc
adc
cmp
iret
lahf
pop
call
mov
rol
xor
dec
adc
into
int
cmpsl
fisubs
push
mov
sahf
xor
adcl
dec
iret
sbb
scas
enter
jp
add
mov
pop
cmp
xchg
mov
int3
xchg
filds
dec
or
mov
fwait
ret
xor
jge
inc
testb
loope
xchg
mov
pop
cmc
xchg
cmp
xor
sub
in
pop
jecxz
mov
test
aam
mull
or
test
xchg
sbb
add
pop
mov
lods
shl
cltd
dec
mov
or
pop
push
into
call
movsl
or
aam
div
mov
stos
fwait
and
syscall
lret
push
inc
inc
mov
and
mov
cwtl
daa
pop
push
inc
adc
iret
sar
jnp
icebp
add
ds
iret
xor
nop
jmp
push
fs
in
xor
mov
fmul
dec
jns
imul
std
cmp
sbb
sub
insl
pop
insb
dec
mov
jmp
sub
jmp
mov
orps
insl
inc
jnp
pushf
out
sub
mov
fcmovnu
inc
outsb
outsl
cmp
adc
xchg
cmpsb
mov
mov
sahf
scas
push
mov
mov
xchg
inc
dec
lcall
ja
cmp
dec
ret
sub
mov
and
cld
sub
pop
in
or
outsl
dec
cli
adc
cmpsl
sbb
sbb
fdivl
sub
jge
shrl
push
adc
dec
xchg
outsl
jo
push
sarl
icebp
push
mov
and
cmp
ss
fs
cmpsb
cli
fnstenv
sbb
adc
pusha
xchg
les
xor
movl
lret
out
popa
sub
and
mov
cli
lahf
imul
jmp
mov
sahf
movb
sbb
mov
push
adc
lods
lock
jg
lock
cli
jns
out
mov
add
pop
inc
sbb
rcll
xchg
inc
mov
adc
xchg
mov
rclb
cmp
fwait
das
cmp
subl
and
inc
test
insb
icebp
imul
ds
mov
xchg
and
movsl
hlt
in
lea
rolb
leavew
adc
stos
shrb
cmp
clc
xor
jmp
dec
mov
adc
lahf
cmc
push
cli
sbb
pop
mov
ss
jge
cmp
pop
xchg
sub
or
mov
lret
xor
test
push
leave
push
xchg
mov
test
test
test
sbb
adc
nop
shl
lcall
jle
jp
inc
dec
jle
push
sti
sub
test
scas
adc
xlat
stos
sub
mov
in
std
out
mov
les
stos
pop
fstl
jmp
sbb
sbb
imul
out
pop
xor
out
ss
mov
cmpsl
jne
loope
shll
jbe
nop
cwtl
in
aas
sub
sbb
std
xor
push
mov
adc
mov
pop
sub
dec
add
mov
dec
pop
aam
mov
fs
test
cmp
dec
pop
inc
xor
push
cmpsl
or
and
in
push
jg
fstps
jns
repz
cmp
inc
std
lret
push
shr
popa
aad
push
inc
scas
xchg
in
mov
inc
lods
xor
out
mov
jns,pt
sbb
xchg
stos
aad
jl
mov
aas
out
mov
incb
inc
sub
lret
mov
xor
cmpsl
pop
lods
cmpsl
xor
enter
push
lret
fwait
cmp
lahf
or
add
stos
fimull
pop
out
mov
pop
enter
and
jb
sbb
pop
int
add
test
insl
xor
arpl
mov
arpl
jp
fs
out
mov
rorl
mov
inc
das
xor
sub
mov
aas
or
adc
mov
and
mov
xor
icebp
and
ljmp
sbb
lahf
loop
xor
cmpsl
lods
push
and
xchg
or
jne
shll
pop
pop
mov
cli
jmp
cmp
mov
loopne
add
adc
mov
jae
jg
dec
jle
push
jecxz
inc
cmp
fidivs
es
sbb
shrl
sub
xorl
mov
pop
pop
dec
cmp
rol
std
pmovmskb
jae
out
jbe
or
jle
ljmp
testb
std
js
clc
sub
jnp
jp
rcr
in
std
and
xor
jmp
pop
jle
jecxz
push
leave
psubusb
adc
subb
inc
mov
lds
mov
pop
mov
or
popf
add
neg
cmp
or
gs
lret
js
push
inc
sbb
ud2
pop
mov
scas
xchg
scas
jo
xchg
push
add
inc
adc
sti
ret
push
and
aad
jp
and
nop
xchg
or
pop
test
jno
ljmp
and
sub
hlt
in
sti
sahf
lods
movsb
mov
pop
js
sub
sub
aad
adc
ret
imul
xor
xorl
cmpsb
mov
pop
das
jo
xchg
loope
daa
outsb
push
in
xor
jo
xchg
sub
inc
dec
aas
rcll
adc
mov
jnp
mov
mov
pop
nop
cmp
jno
shlb
cltd
insl
insl
sbb
adc
loopne
ds
inc
loopne
int
mov
out
or
pop
and
sub
mov
out
push
xorl
pop
aam
pop
out
in
lds
ror
xchg
or
inc
movsb
jge
fst
pop
or
mov
cmp
hlt
push
nop
lahf
jnp
add
sbb
aad
xlat
lods
pop
jb
cs
js
mov
ret
mov
sub
xchg
adc
mov
xchg
xchg
rorb
andb
jne
insb
call
mov
inc
imul
push
in
adc
add
lds
xchg
jg
push
push
ss
xchg
xor
sbb
jge
pushf
push
in
inc
in
aad
int
or
cld
xchg
loope
rcrl
sbb
push
iret
aam
push
pop
lods
dec
lock
sub
push
sub
and
cmp
test
ret
jo
inc
ja
mov
push
mov
jl
loop
scas
sbb
in
jno
sahf
mov
add
jl
or
dec
into
aas
push
mov
into
pop
cmpsl
inc
cvtpi2ps
loopne
lea
xlat
test
mov
add
movsbl
xor
rclb
mov
shlb
out
or
in
sbb
aad
push
std
dec
and
inc
inc
arpl
xor
aas
aad
mov
jmp
rcrl
sbb
loope
repnz
ljmp
fisttpl
jp
pop
outsb
xor
adc
mov
or
jge
adc
addb
push
sbbl
xchg
daa
jnp
int
sub
into
cmc
aaa
dec
dec
cmpsb
imul
mov
clc
xor
aad
stos
mov
adc
and
or
pop
add
xchg
movsl
xor
int3
xchg
xchg
adc
fidivs
cmp
mov
test
inc
cmpsl
mov
sub
leave
cmpsl
jge
mov
rclb
adc
mov
clc
in
sbb
out
int
and
push
push
int
dec
push
cmp
push
dec
dec
sub
and
mov
jge
mov
loope
pop
insl
dec
sahf
and
loopne
xchg
mov
adc
arpl
jb
stos
mov
fsubrl
imull
ffreep
mull
add
push
fistl
dec
clc
mov
pop
inc
fnstenv
adc
test
or
adc
add
outsl
repnz
lcall
add
orl
ds
lea
mov
sub
daa
or
hlt
inc
jbe
pop
sbb
loopne
scas
addl
sub
mov
in
icebp
xchg
mov
xchg
mov
inc
fmull
dec
jo
jo
mulb
sub
xchg
mov
cmp
cmp
push
outsb
outsb
aad
int3
push
scas
sbb
or
in
fs
mov
lods
mov
call
mov
cltd
stc
pop
pop
lods
mov
rolb
ret
loope
int
inc
ret
ja
pusha
mov
sti
add
stc
std
das
data16
leave
in
iret
add
mov
mov
mov
in
dec
mov
pop
cmp
jl
cwtl
out
xlat
mov
cli
pop
adc
inc
jmp
mov
mov
or
call
leave
rorb
shrb
loopne
popf
add
xor
cmp
xchg
push
xchg
ljmp
dec
cwtl
incb
mov
lds
imulb
roll
inc
xchg
mov
cmp
lods
shlb
fsubs
lods
and
loopne
pop
sbb
pop
cltd
mov
pop
fwait
mov
sub
jns
pop
gs
movsl
mov
inc
test
adc
xchg
sbb
pushf
dec
mov
pop
rcrb
xor
iret
sub
scas
push
inc
adc
pop
add
mov
sub
add
not
jg
jno,pn
xchg
aas
icebp
mov
test
mov
inc
popa
sbb
mov
testb
xor
jl
mov
es
lea
fs
decl
pop
scas
mov
mov
popa
mov
aad
xchg
lret
call
mov
add
fisubrs
adc
leave
adc
icebp
ja
pushl
lock
repz
sbbb
push
test
mov
cmp
mov
inc
imul
popa
mov
adc
stos
push
call
dec
in
pop
xchg
cmp
mov
jmp
ss
fstpl
cmp
ljmp
or
mov
sub
dec
sahf
dec
and
pop
pop
push
xchg
adc
cmp
ja
sub
popa
fisubl
push
pop
inc
mov
cs
mov
jmp
mov
lret
or
cmp
jge
or
mov
sarl
push
mov
or
push
pop
dec
lret
cs
jp
loop
nop
lret
or
add
adc
sub
and
mov
aam
ficoms
pushf
inc
loop
lcall
lahf
in
cmp
aaa
aad
inc
pop
ret
pop
iret
xchg
push
mov
mov
mov
inc
jnp
inc
stos
push
cmp
jle
aam
lret
addr16
stos
xchg
in
mov
mov
ret
fwait
xchg
imul
sub
push
out
xchg
jp
shlb
sahf
cmp
xchg
aaa
stos
xchg
mov
fdivs
imul
add
push
rcl
repz
in
data16
rorl
outsl
in
push
adc
scas
dec
std
inc
sbbb
movsl
orl
and
pop
sbb
mov
mov
lret
lret
xchg
jae
dec
pop
sbb
pushf
fistpl
push
fnstcw
fiaddl
inc
sbb
cli
fistl
jp
out
jbe
inc
xor
sbb
mov
and
lcall
xchg
ret
mov
cmpsb
fwait
pop
and
sti
mov
mov
dec
fimuls
loope
movsl
pop
push
lret
hlt
mov
cmp
jno
inc
mov
jg
andl
pcmpgtb
shr
or
out
mov
jge
dec
imulb
cmp
sbb
pop
jecxz
arpl
movsb
int3
icebp
aad
fprem1
cwtl
in
mov
stos
mov
jmp
inc
movsl
xchg
nop
lea
and
das
cmp
sub
sub
ror
lds
gs
mov
rcl
jb
or
pop
int
ss
pop
repz
push
bound
outsl
sub
adc
pop
adc
cwtl
sub
push
mov
adcl
inc
push
jecxz
sbb
inc
popl
push
jmp
test
dec
sahf
insb
clc
xchg
jns
inc
sbb
mov
dec
push
or
jl
out
aaa
nop
gs
repnz
inc
arpl
push
cltd
into
jbe
fdivs
fwait
test
notl
jmp
fmul
loop
push
jno
push
repnz
insb
andb
fyl2x
popf
pop
xchg
or
rolb
xor
loope
inc
outsl
dec
push
pushf
imul
lock
push
aam
movsl
inc
in
cmp
sbb
or
lret
or
and
sti
lcall
mov
mov
out
ja
cltd
mov
xor
fnsave
fimull
adc
iret
cmp
lock
pop
popf
mov
pop
mov
add
int3
subb
mov
outsb
push
mov
xchg
test
cmpsb
jmp
cmp
push
outsl
xchg
dec
push
int
push
jnp
add
daa
call
cmpl
xor
scas
adcb
inc
je
mov
mov
xchg
sbb
xchg
loop
lret
inc
pop
and
xor
gs
daa
xchg
out
or
mov
jae
jp
stos
add
mov
xor
int
lock
add
sahf
xchg
out
dec
dec
xor
fisttps
iret
std
push
xor
cmp
dec
push
mov
aaa
repz
dec
mov
pusha
pop
enter
dec
mov
insl
jo
aas
decb
sub
xchg
add
pop
sbb
jmp
aam
pop
in
dec
sub
push
loopne
dec
movsb
popa
stc
int3
sbb
mov
pop
loopne
hlt
stos
mov
lret
icebp
movsb
stc
mov
sbb
mov
fld
push
lahf
xor
add
and
das
inc
pusha
sbb
cmp
jo
adc
idiv
add
xchg
idivl
jl
or
push
outsb
push
ljmp
in
cmp
jo
dec
shl
popf
out
outsb
inc
xlat
mov
enter
stos
mov
mov
add
pop
addr16
lret
adc
xor
jle
in
and
dec
push
lea
jo
mov
popf
xor
dec
sbb
lods
std
rcrb
dec
mov
movsl
insb
aaa
daa
inc
mov
aaa
lcall
pushf
int3
aas
mov
push
sbb
dec
xorb
test
push
jo
mov
fwait
xchg
pop
pop
or
sbb
cs
sbb
lcall
icebp
call
lcall
rclb
popa
ret
and
in
bound
enter
into
mov
jecxz
pop
inc
or
push
push
dec
xchg
outsl
jg
push
xchg
xchg
daa
and
fs
lods
cwtd
inc
jp
jp
sbb
jns
test
adcb
ja
dec
int3
data16
lcall
es
push
iret
jo
pop
stc
push
ljmp
ret
mov
cltd
xlat
movb
faddl
test
repz
out
adc
jge
fnstenv
jo
mov
adcb
test
cwtl
adc
dec
sahf
pusha
cltd
push
adc
or
pop
aad
mov
std
shrl
ret
mov
jb
xchg
and
adc
sbb
jbe
fstps
das
push
or
testl
enter
add
cmc
mov
pop
xchg
jnp
add
dec
out
std
push
push
adc
sar
lock
pop
in
das
ret
add
stos
vmread
jl
pop
popa
pop
lcall
mov
push
push
das
mov
push
xchg
sub
imul
pop
inc
out
jp
pop
pushf
push
xchg
xor
xchg
push
dec
add
xchg
mov
pop
test
mov
jge
adc
xor
aad
ficomps
test
mov
jns
inc
fmuls
sbb
xor
push
mov
dec
mov
hlt
test
sbb
stos
movsl
repnz
inc
cld
cmp
inc
aam
jge
jl,pt
mov
mov
jb
dec
addr16
lea
fildl
imul
adc
mov
sub
ror
stos
aaa
or
in
stos
cli
outsb
fnsave
inc
adc
ds
mov
add
adc
mov
scas
push
jmp
jmp
push
push
mov
popa
cltd
xchg
js
inc
bound
adc
push
cli
pop
popa
push
dec
adcl
add
sbb
int
mov
lahf
ss
fwait
sub
in
cmp
cmp
xorb
xchg
fbstp
pop
push
leave
push
rcll
stos
jecxz
dec
inc
dec
xchg
aad
mov
sbb
fbstp
cmc
sbb
mov
mov
mov
lock
fadd
adc
inc
stc
roll
les
inc
rolb
pop
or
xchg
and
loopne
je
fsubrl
xchg
and
xor
lcall
mov
and
push
cmpsb
fists
or
out
mov
ror
test
imul
jo
call
cmpsl
fadds
dec
mov
not
test
fildl
adc
sbb
outsl
testb
mov
out
mov
cmp
push
lret
sub
call
bound
in
mov
lea
adc
popa
andl
adc
cld
jne
cmp
cwtl
ss
lods
sub
cld
mov
in
mov
lret
dec
dec
jne
imul
add
adc
aad
test
mov
ljmp
jae
hlt
mov
daa
iret
das
sub
sbb
jle
inc
push
std
xchg
std
mov
cmp
push
sub
sub
cmp
push
dec
xchg
mov
or
add
sarb
jbe
mull
adc
mov
mov
adc
push
outsb
aas
mov
ficoml
loope
jl
mov
push
out
mov
mov
sbb
cwtl
sub
in
mov
rep
jnp
aas
xchg
mov
sahf
std
es
xchg
add
or
jb
mov
inc
ljmp
mov
jle
mov
aaa
subb
cmp
in
in
imul
bound
sub
xchg
hlt
test
addb
or
gs
bound
lcall
push
push
cmp
test
cmp
cld
cmp
sbb
inc
jnp
call
cmp
repnz
adc
jne
sub
adc
ljmp
push
jle
jp
out
pop
cmpsl
mov
jo
push
shl
mov
mov
out
jbe
aas
and
push
pop
test
decb
mov
sbb
ja
adc
out
dec
stos
sbbb
popf
sbbb
out
test
pop
imul
pop
stos
dec
int3
popf
sahf
sub
les
pop
lods
orb
sub
inc
dec
adcl
sub
fwait
mov
adc
bound
sti
mov
xchg
push
mov
dec
cmp
inc
fistps
cmpsl
addr16
and
out
push
cmp
jmp
pop
xor
ja
xchg
imul
rorl
stos
mov
xchg
fcmovb
nop
std
push
mov
push
inc
outsl
jo
pop
pop
sahf
mov
xchg
mov
dec
mov
xchg
gs
std
push
cmp
imul
xchg
enter
dec
out
and
and
sbb
and
inc
cmp
out
enter
sbb
clc
mov
pop
xor
sbb
push
mov
add
sbb
shrb
dec
mov
into
fs
ss
push
fisttps
andl
lds
out
shll
cmp
rol
clc
jecxz
rorb
mov
movsb
push
sbb
push
inc
mov
fwait
cmpsb
sub
sbb
ja
daa
pop
rorl
jecxz
xor
out
out
ss
addl
test
or
or
arpl
jo
mov
inc
lock
pop
inc
pop
or
int3
popf
mov
xchg
clc
int
or
lock
lret
mov
cs
cmpsl
lret
or
test
jle
dec
mov
loopne
inc
push
imul
pop
repz
push
push
add
add
add
insl
xchg
jmp
dec
mov
daa
inc
loop
rcl
repnz
rorb
jae
adc
lcall
sbbb
push
pushf
mov
fisubs
call
cmp
jb
in
xchg
sub
or
sbb
fwait
mov
fisubl
push
xor
sub
inc
mov
sub
push
mov
pop
dec
mov
xlat
mov
std
push
in
dec
pop
and
xchg
outsl
or
xor
xchg
sub
divl
mov
or
jl
movsb
adc
jecxz
inc
push
lods
xchg
mov
jmp
int3
jo
xchg
ss
jge
imul
fidivrs
iret
or
nop
or
dec
das
outsb
hlt
xchg
ds
pop
fsts
lahf
andnps
pop
cli
popa
dec
cmpsl
mov
mov
scas
jmp
daa
pop
loop
in
add
cmp
sub
arpl
leave
push
loope
xor
push
inc
inc
ss
jb
fisubrl
pop
pop
jo
mov
cld
int
in
mov
shl
adc
in
repnz
mov
push
jae
int3
lods
cmp
lret
cltd
xor
cmp
jmp
movsl
or
cmpsb
sbb
and
pop
push
jno
mov
shlb
and
arpl
out
mov
push
pop
lods
andb
mov
push
xchg
lods
xchg
das
jecxz
dec
insl
add
js
sbb
div
mov
and
adc
imul
call
dec
lods
sbb
shrl
push
insb
cwtl
icebp
and
pop
loop
inc
jne
cltd
movsb
ds
or
cs
sub
or
cmp
xor
xchg
orl
sbb
and
mov
xchg
or
sbb
jbe
add
leave
es
cmp
inc
rcrb
bound
mov
inc
fsubrs
dec
outsl
shll
cli
stos
cli
jnp
cwtl
dec
jne
sahf
call
fsubp
mov
push
mov
xchg
cmp
orl
add
cld
adc
pop
push
push
jmp
sbb
dec
push
inc
xor
movsb
das
inc
in
xor
dec
out
repz
or
push
test
xchg
jno
pop
add
out
sahf
enter
push
decl
idivb
leave
jno
fwait
stc
sub
jl
inc
lea
mov
call
rol
mov
pop
inc
inc
not
xor
pop
and
push
jo
fs
or
mov
sbb
lahf
cmp
flds
or
imul
xchg
shrb
pusha
in
jnp
lahf
imul
daa
or
add
pop
adc
adc
dec
mov
clc
xchg
sahf
push
xor
je
aad
push
add
dec
pop
or
push
ds
movsl
pop
pop
mov
inc
xor
xlat
pop
pop
nop
popf
push
or
cmc
dec
pusha
sub
pop
and
js
xorb
or
mov
rol
xchg
xchg
add
hlt
inc
insl
ljmp
inc
inc
mov
dec
cmp
dec
in
aaa
mov
mov
and
mov
in
sarl
sbb
inc
hlt
hlt
push
shrb
cmp
push
pop
data16
jo
adcl
sbb
mov
mov
mov
pushf
push
loope
or
push
push
addl
xor
pushf
pop
mov
add
xchg
push
or
xchg
or
inc
push
rcrl
pushf
add
pop
scas
mov
fstl
lds
sahf
xor
pop
ds
insl
dec
aaa
jns
pop
shrl
fnstenv
xchg
jo
pop
lret
sbb
lods
pop
popa
sbb
pop
fistpll
ja
adc
fcompl
mov
mul
jae
mov
jo
sbb
inc
je
jae
popf
mulb
out
inc
or
xchg
fstpt
cmp
and
sub
out
lret
dec
mov
jp
cmpsb
lahf
dec
ljmp
mov
xor
shll
add
jo
add
mov
mov
pusha
lock
out
adc
cmp
or
jnp
mov
jle
or
movsb
fsts
push
aas
lret
push
in
xor
call
gs
pop
sbb
or
mov
jle
pop
mov
mov
push
sbb
jne
das
pop
std
scas
aaa
lea
sti
mov
repnz
push
pop
sbb
pop
xchg
mov
sti
mov
std
inc
push
mov
loopne
lret
xchg
aaa
sbb
in
push
mov
test
lds
into
push
notl
lds
jmp
jp
lods
push
out
fsubrl
mov
insb
jns
cli
enter
subl
xchg
enter
scas
jbe
fwait
ds
fbstp
push
ljmp
ja
js
in
jo
divb
push
sahf
xor
popf
dec
sub
cmp
pop
cmp
ficoml
jne
cmp
push
std
stos
cli
pop
ret
aaa
mov
pop
inc
les
ret
loopne
add
fnstsw
jno
or
divl
push
pop
push
dec
pop
repz
push
popf
and
cmp
cwtl
or
xor
sub
mov
xchg
loopne
mulb
xchg
adc
repz
popa
clc
leave
test
dec
cmp
push
dec
jne
psubsb
adc
pushf
jp
pop
push
mov
jp
fadds
cmp
je
jae
iret
hlt
jne
arpl
jo
mov
cld
cmp
mov
jb
or
test
enter
xor
xchg
dec
sub
cmp
iret
out
pop
sti
jp
push
push
inc
adc
cmpsb
mov
inc
xchg
jle
cmpl
push
es
mov
push
std
jmp
lods
divl
mov
lods
mov
fs
inc
mov
int
in
std
ss
pop
fiadds
dec
pushf
test
int
add
out
jns
gs
shll
outsl
sub
jne
fcomi
sbb
jp
pop
jae
mov
fldenv
lock
sbb
loop
push
add
pop
lock
arpl
mov
mov
inc
cmpl
divb
ds
dec
lods
movsb
xor
add
push
sti
imul
sub
ja
iret
into
sbb
mul
out
or
pop
sbb
add
fldcw
and
sbb
outsb
dec
testb
lods
sbb
hlt
push
fcoms
mov
inc
decb
outsl
jnp
into
cmp
sbb
sbb
jne
pop
inc
cmp
sub
mov
mov
adc
jno
jnp
mov
test
loopne
loop
mov
add
mov
lret
and
inc
ljmp
jo
jp
divl
add
sbb
jo
je
ja
sub
lods
popa
and
pop
lea
mov
jecxz
movsb
push
inc
xor
sub
jl
push
es
in
enter
xchg
jl
sar
cmpsl
mov
jg
adc
outsl
add
mov
cmp
mov
jecxz
aad
or
and
mov
std
and
mov
push
cld
pop
jg
icebp
or
cld
mulb
leave
mov
fcmovu
xor
insl
jbe
mov
dec
or
repnz
jns
inc
sbb
pop
jo
jp
jp
in
rclb
out
jg
nop
sbb
jge
lret
outsl
bound
pop
mov
xchg
test
mov
lds
add
xchg
pop
dec
and
mov
jl
jecxz
imul
shrb
std
mov
push
call
adc
out
into
movsb
jns
mov
sub
addl
mov
cmp
mov
psubsw
shrl
push
add
sbb
pop
pop
out
ret
add
lret
out
insb
or
sub
sub
loop
jne
in
cltd
cmp
lea
gs
or
out
ds
mov
sbb
lods
dec
jno
int3
ss
sbbl
lods
stos
dec
jg
mov
cmp
adcl
sub
fnstsw
ret
cmp
testb
addr16
xor
std
xor
inc
push
dec
pop
mov
add
sub
lds
out
lods
test
ds
xor
hlt
jb
dec
xor
inc
das
ret
loopne
pop
mov
fsubl
fdivl
add
cli
mov
pop
dec
enter
sbb
sbbb
cmpsl
inc
icebp
fildl
lahf
mov
add
das
aad
cltd
popf
fcompl
sti
mov
ljmp
cmpl
into
mov
sbb
mov
incl
mov
inc
sub
xor
dec
xor
movsb
xchg
mov
adc
mov
cmp
cli
or
loopne
ret
leave
push
push
jle
sti
mov
push
les
cmp
pop
pusha
insl
arpl
insl
data16
jo
sbb
hlt
popa
push
hlt
dec
cmpsb
cmc
mov
mov
xchg
sbb
cwtl
sub
int
sub
pop
mov
push
lea
xor
and
dec
enter
push
cli
jne
std
test
add
sbbb
mov
outsb
xor
sub
out
push
xchg
lea
outsl
ss
jae
repnz
xchg
and
dec
lahf
add
clc
mov
mov
cli
cmc
pop
fsubl
in
sub
and
iret
mov
mov
loopne
mov
in
xor
out
or
xchg
jb
sbb
adc
enter
inc
add
sahf
sub
fdivl
push
lcall
jno
leave
xchg
loopne
int3
adc
int
cs
les
push
xor
cmp
jl
push
int
ficomps
ss
fstpl
stos
lea
iret
into
push
mov
loop
std
movsb
push
mov
cmp
mov
in
xchg
and
test
into
xchg
sub
rorl
mov
and
js
movsb
hlt
decb
ficoml
jns
mov
cltd
inc
lds
ret
jb
sahf
outsl
adc
test
add
loopne
shl
xchg
cli
fimull
inc
inc
mov
mov
mov
adc
mov
pop
cmpsl
je
subl
jbe
cmp
fwait
leave
stc
pop
jno
hlt
sub
es
sbb
js
and
mov
movsb
add
xor
fstps
xor
sub
outsb
test
out
xchg
outsb
pop
into
or
sub
xchg
int
mov
es
mov
cmp
pop
push
sub
adc
mov
pop
pop
sbb
les
out
jmp
push
mov
add
xor
sbb
notb
fstpl
pusha
mov
xor
movsl
je
test
sbb
cmp
mov
daa
mov
xchg
cwtl
je
sub
fistpl
cmp
into
xor
or
hlt
into
fstpt
jecxz
bound
cwtl
jl
or
imul
jp
lds
subl
sti
cmpsl
shll
cmpsl
sbb
shlb
popl
insl
mov
mov
push
mov
xchg
and
cmp
pop
or
sub
add
xchg
sti
sbb
dec
lods
les
push
or
ss
mov
or
add
jecxz
in
xchg
adc
jl
jmp
mov
push
jno
aas
int
insb
popa
js
movsb
lock
out
inc
jnp
mov
decb
mov
jg
mov
lahf
arpl
and
stc
shll
jmp
addb
mov
inc
xchg
dec
jb
add
repnz
dec
jnp
and
jp
xchg
in
jg
mov
pop
scas
mov
sub
ret
xchg
ljmp
stc
scas
jb
and
cmp
mov
leave
mov
ja
add
roll
or
std
jle
inc
add
shlb
adc
mov
movsl
and
xchg
push
out
cmp
iret
ja
lock
inc
xchg
add
sbb
cmp
dec
es
mov
add
xchg
mov
or
pushf
popa
test
dec
jg
rcl
add
clc
hlt
pusha
xorl
dec
mov
mov
pop
xchg
sbb
sbb
or
lret
mov
jl
inc
mov
push
pop
jmp
fidivs
cld
out
cmp
fstps
and
cmpsb
jg
jb
daa
das
pushf
xchg
ss
fnstenv
sub
cmp
jne
mov
ds
mov
push
or
sub
js
jo
fwait
dec
out
addr16
jbe
xor
sbb
fldl
pop
lea
or
insb
clc
xor
jns
ficompl
loop
and
mov
push
clc
cld
or
call
lret
mov
stc
mov
icebp
sbb
cwtl
push
mov
int
fwait
mov
push
jns
push
add
or
stos
push
push
pop
icebp
push
inc
xchg
push
cwtl
mov
fcom
jbe
mov
sub
lds
cmp
xchg
fldenv
inc
inc
mov
ret
into
pop
mov
mov
jecxz
xor
pop
les
jbe
xchg
pop
gs
xchg
mov
cwtl
mov
jne
jg
into
data16
das
pop
push
cs
shlb
mov
daa
rcll
out
push
fs
inc
add
call
push
push
cmp
fs
dec
xchg
movsb
add
adc
iret
ds
icebp
sbbb
xchg
loopne
andl
jecxz
mov
bound
in
push
jno
fdivrl
js
je
or
leave
movsb
hlt
orb
insl
je
xchg
aas
test
inc
or
add
xor
and
dec
cmp
xor
outsb
addr16
mov
jo
lahf
inc
mov
and
mov
xchg
les
test
test
ss
pop
mov
in
shlb
xchg
mov
push
movsl
push
and
and
test
mov
es
in
repz
inc
sbb
xor
popf
jne
out
mov
out
adcl
xchg
mov
loope
into
jns
add
and
lock
jnp
and
cwtl
jmp
jo
fwait
mov
insl
inc
pop
aam
jp
mov
cwtl
cmp
sub
scas
hlt
shrl
push
jle
inc
pop
adc
xchg
push
test
jecxz
dec
xchg
fcomp
lds
cmc
out
mov
pop
push
xchg
mov
mov
imul
push
adc
sub
xchg
test
push
add
inc
rol
or
sbb
push
or
or
outsl
mov
jl
mov
das
orl
clc
or
inc
jnp
sbb
jbe,pn
aas
mov
jecxz
lret
std
xchg
xchg
cli
enter
js
insl
mov
cmp
and
or
sbb
in
pop
add
xchg
dec
dec
add
push
out
xlat
mov
out
pop
cmpsl
jge
jo
lea
popf
jge
cmp
fisttps
sbb
in
lret
rcll
aam
pop
jge
pop
pop
pop
daa
pusha
cmp
mov
mov
inc
mov
cmp
loop
aaa
pop
add
or
movsl
ficoml
bound
rcrb
jg
fsub
or
or
push
std
out
jo
jmp
ret
leave
js
and
or
mov
mov
test
int
or
xchg
movsb
aas
enter
sbb
rcr
popf
ret
push
imul
or
nop
sub
loope
repnz
xor
popa
js
in
sbb
push
repz
jge
push
insb
inc
pop
and
pop
dec
mov
pop
jecxz
repnz
xchg
movsb
xorb
imul
jecxz
jns
pop
lcall
pop
or
inc
xor
icebp
pushf
iret
pop
and
stos
sub
jae
sbb
shll
xchg
pop
xor
testb
sub
mov
or
push
xor
pop
clc
dec
ret
mov
add
cli
cmp
xchg
insl
dec
ss
add
sbb
mov
jge
cmp
jecxz
jle
and
xor
sbb
dec
adc
sbb
addl
xchg
mov
and
adcb
fnstcw
mov
xacquire
sub
cmpsb
aas
jno
mov
test
pop
mov
imul
stos
testb
adc
mov
jno
or
in
mov
push
mov
aaa
outsl
sbb
stos
idivl
xor
cmp
mov
mov
mov
aaa
jo
mov
shrb
nop
mov
in
lret
pop
fcoml
mov
icebp
daa
push
aam
loope
inc
cs
ja
in
loopne
mov
or
xchg
in
lret
mov
out
push
push
in
sbb
dec
sub
push
fistpl
cmpsl
lock
or
mov
xchg
jo
lods
dec
sahf
jo
in
jle
in
iret
lods
bndldx
adc
cmpb
mov
sub
add
inc
adc
xchg
pop
loopne
sub
and
scas
push
mov
inc
adc
int3
lods
xchg
std
mov
adc
loope
adcl
push
pusha
fimuls
movsl
fs
in
and
out
jns
js
adc
aam
in
pop
insb
jle
jns
mov
jne
mov
stos
pop
mul
in
cmpsb
jo
das
imul
shl
stos
cmp
movsb
pop
sbb
lea
test
cs
dec
push
dec
or
cmpsl
xor
js
lea
jne
aas
adc
jge
mov
push
test
mov
icebp
aad
add
add
inc
mov
push
dec
mov
or
jbe
shll
neg
imul
pop
leave
or
lcall
arpl
popa
xor
dec
pop
scas
into
scas
out
sub
fisubs
scas
repnz
jp
ja
stos
les
out
push
inc
pop
out
mov
push
aas
das
pop
jl
mov
cmpl
mov
sub
push
icebp
popf
jno
jle
dec
lcall
push
dec
xchg
dec
push
pop
testb
mov
add
imul
ja
ds
adc
jne
dec
adc
and
mov
push
jo
fs
es
js
mov
fdiv
rorl
add
xchg
popf
shl
sbb
and
jge
or
lcall
iret
dec
xchg
lods
aad
aaa
sbb
xor
push
mov
pop
push
push
adc
aad
leave
cmp
sub
addr16
outsb
fs
in
cmp
mov
add
cltd
xor
fildll
and
jge
push
dec
clc
scas
jnp
fwait
das
rorl
lcall
in
mov
sti
mov
mov
repz
sbb
mov
pop
test
data16
sti
scas
int
sahf
inc
or
rcll
sarl
dec
daa
adc
jge
pop
loopne
sbb
adc
imul
or
mov
jb
cmp
negb
dec
ret
sub
iret
push
xlat
and
mov
pop
lret
adc
ret
into
xor
js
test
repnz
lock
movsl
fwait
adc
out
ja
pop
loopne
mov
xchg
clc
out
mov
notb
pop
inc
jle
jno
pop
fimuls
cwtl
jg
inc
je
dec
aas
mov
insl
pushf
push
add
neg
mov
pop
outsb
and
fs
insb
scas
inc
sub
jmp
in
jp
test
inc
jne
insb
lahf
loopne,pn
pop
lea
pusha
nop
int3
ret
or
xchg
fcoms
and
jmp
mov
loop
in
fistps
lea
dec
int
and
xor
test
adc
dec
testl
mov
in
push
add
cltd
xchg
sub
negl
pop
xlat
shlb
add
ljmp
push
in
rolb
push
pusha
mov
cwtl
bound
xor
inc
mov
test
or
adc
xor
inc
fsubr
mov
and
mov
dec
in
stos
xchg
sti
int
dec
mov
inc
pop
lds
xchg
cmp
enter
out
je
adc
dec
mov
add
test
mov
fldl
cmpsl
mov
xlat
mov
xchg
sti
shrb
mov
loopne
mov
clc
cmp
stc
stc
inc
xchg
test
dec
jno
push
jl
shrb
xchg
ret
mov
mov
sub
xchg
cwtl
ss
mov
jle
cmp
pop
mov
inc
xchg
pop
dec
notb
jmp
mov
pop
xchg
and
jno
or
ss
inc
fwait
push
jle
inc
dec
or
iret
addr16
inc
lock
movsl
mov
jno
stos
pop
icebp
pop
cmpsl
or
lret
mov
jge
mov
aam
push
popa
mov
ret
mul
pop
sti
adc
je
mov
xorb
hlt
imul
rcrl
adc
mov
sub
jno
popf
aam
mov
mov
shr
mov
jbe
lret
jns
xchg
aad
dec
aam
pusha
add
clc
pop
adc
adc
inc
push
pop
aam
adc
fsts
push
and
movsl
shlb
mov
xor
dec
insb
mov
xchg
mov
std
mov
or
adc
cli
aad
and
inc
xchg
sbbl
inc
sub
cmp
fisubs
mov
sti
mov
in
inc
out
cs
pop
add
inc
xor
inc
lods
sarl
push
cmpsl
mov
mov
test
or
jne
cld
pop
mov
imul
lods
xlat
mov
clc
mov
sub
insb
cld
ljmp
adc
mov
jbe
or
jl
out
cltd
pop
cmpsb
cld
fnstenv
ret
cmpsl
inc
push
inc
jp
mov
lds
xchg
jge
int
xchg
aad
add
cli
sbb
jmp
mov
sbb
int
adc
pop
mov
sbb
icebp
xchg
xchg
or
lock
add
sbb
andb
push
int3
dec
imul
inc
inc
shll
test
in
outsb
xchg
lock
xlat
lcall
loop
lock
mov
mov
and
push
add
hlt
or
ljmp
mov
mov
ds
pop
pusha
callw
lds
dec
push
call
mov
sbb
jle
xor
fxch
jbe
push
mov
outsb
enter
and
stos
popa
jp
jne
add
movsl
sub
push
fucomip
insl
fdivs
xchg
outsb
add
sub
dec
loopne
pop
or
inc
mov
mov
test
mov
pop
sub
aad
add
mov
loope
dec
jge
dec
mov
mov
dec
sbb
gs
dec
jg
repz
imul
roll
int3
fwait
popf
jg
in
sbb
jl
sahf
stos
aas
sti
es
lds
fistl
ds
inc
adc
popf
ret
dec
rcrl
jp
es
jle
test
rcrb
jno
xchg
sbb
lret
pop
js
pop
shr
and
jb
lods
jp
ror
in
cmpsl
inc
addl
and
sbb
lock
enter
jecxz
out
pop
lret
jle
andl
inc
test
push
push
jb
xor
mov
push
in
loopne
cmp
mov
push
aaa
aam
add
clc
popf
push
movsb
out
cwtl
jle
cmp
pop
sahf
dec
inc
dec
je
jg
add
xchg
jp
and
scas
sub
mov
aam
jecxz
add
mov
pop
sbb
lods
movsl
jg
pop
js
js
mov
mov
lcall
jmp
scas
mov
mov
cmpsb
and
pop
sbb
stos
and
iret
jg
pop
movsb
cld
imul
aad
bound
sub
push
push
outsb
dec
stos
inc
cmp
mov
pop
inc
adc
rol
aad
inc
pop
clc
jge
cwtl
pop
pushf
dec
sahf
loope
push
gs
or
jg
sub
std
addr16
sbb
imul
fs
cmp
lret
fdivrs
mov
adc
push
inc
jmp
outsb
jmp
cld
jp
push
xor
or
mov
xlat
mov
add
xchg
decw
adc
xchg
push
pop
xchg
negl
cmpl
cmc
ret
mov
push
imul
mov
xchg
jo
out
das
hlt
in
pop
xchg
add
rol
repnz
shrb
pop
std
and
jns
and
sbb
mov
xchg
in
push
lds
mov
and
fisubl
mov
sti
sub
daa
and
sbb
inc
popf
hlt
movsl
pop
or
stos
mov
iret
cmp
das
adc
push
push
test
out
sbb
and
mov
mov
iret
mov
nop
or
jns
scas
mov
fwait
loope
mov
jb
jecxz
test
fsubrs
push
orb
sbb
push
mov
cltd
pop
clc
pop
mov
outsl
ss
mov
adc
shrl
clc
cwtl
mov
mov
inc
cmp
mov
arpl
inc
dec
stos
dec
push
xlat
adc
clc
pop
push
pusha
and
stos
cmp
mov
mov
dec
pop
pop
mov
push
push
data16
scas
or
dec
popf
mov
xchg
push
in
adc
jg
jae
cmp
pusha
leave
into
fbld
pop
sub
in
subb
cs
and
sub
aam
jecxz,pn
into
pop
test
fdivl
loop
int
jno
mov
cmpsb
aaa
push
sub
out
fstpl
cmpb
outsb
je
arpl
inc
adcl
sbb
mov
das
jno
xchg
test
pop
and
or
and
and
out
addr16
xchg
jne
cmp
lret
iret
and
mov
mov
into
mov
xor
and
mov
or
scas
ret
lock
cmc
cmp
or
xchg
mov
rcrl
hlt
lock
xchg
add
ret
lea
out
xchg
lods
andl
fsubrl
xchg
push
jnp
add
mov
or
push
mov
adc
push
jmp
xlat
mov
add
lahf
jp
repz
into
push
and
push
pop
fbld
out
pop
and
xor
fs
xchg
xchg
cmp
std
shlb
push
popf
add
xchg
xor
test
fisubl
jmp
adc
adc
or
or
daa
push
or
shll
or
fisttps
mov
lahf
xor
and
sti
adcb
xchg
sub
pop
shll
adc
mull
jb
pushf
mov
movsl
adcb
pop
push
fcmovbe
mov
dec
sbb
mov
or
cmp
outsb
sub
push
push
lock
into
daa
scas
cmp
push
mov
xchg
adc
data16
push
call
cli
rcrb
negb
nop
pusha
nop
dec
sarb
cmp
xchg
inc
icebp
sti
mov
fildl
divb
add
fstl
mov
negl
fs
push
insl
pop
inc
outsl
clc
xchg
inc
cmp
in
lds
in
cmp
xchg
sbbl
dec
repz
jb
inc
movsb
mov
push
mov
xchg
shr
scas
inc
fstps
mov
mov
aas
aaa
sar
test
sub
inc
pop
lcall
pop
lcall
and
xorl
bound
inc
pop
cmp
cmp
insl
test
adc
xor
ds
mov
aaa
cmpsl
mov
aad
bnd
mov
imul
cli
add
jb
inc
xchg
add
sub
and
cmc
in
cltd
int
cmp
daa
or
xchg
mov
ljmp
push
outsl
test
push
scas
pop
pushf
dec
sbb
ja
movl
in
clc
inc
loop
sub
ret
sbb
rcl
mov
inc
cltd
jmp
lods
cmc
stc
mov
adc
hlt
sbb
sbb
pop
dec
clc
pop
cmp
nop
fdivrp
lods
mov
loope
ret
mov
inc
sub
fisubl
and
adc
adc
into
sub
cmp
mov
add
xor
mov
fsubs
mov
scas
jo
mov
inc
insb
les
mov
pop
and
adc
pop
mov
inc
xor
pusha
xchg
ret
push
stos
das
xor
or
je
enter
out
xor
xor
dec
rcr
pop
imul
dec
adcl
push
dec
cmp
mov
popf
or
cltd
adc
add
rep
fsubrs
cli
or
sbbb
gs
inc
in
out
jp
mov
imul
ret
popa
pushf
outsb
and
cmpsb
lods
out
mov
dec
add
fwait
rcr
ja
fs
jno
mov
shlb
jp
xchg
adc
ljmp
and
popf
movsb
pop
jge
arpl
cmc
and
push
inc
pop
lahf
xor
push
jo
xchg
mov
adc
cmpsl
call
rcll
dec
pop
mov
or
fwait
jp
jmp
cmp
icebp
push
jl
dec
mov
sub
loope
mov
inc
mull
in
dec
or
enter
pop
jge
sti
decl
push
push
sub
dec
ret
leave
enter
xchg
mov
and
imull
sub
add
pop
or
push
pop
aam
in
lcall
push
pusha
fwait
in
in
adc
mov
xchg
ss
cwtl
sub
mov
cmp
add
test
sbb
sbb
pop
xor
or
ror
add
push
pop
iret
std
adc
or
mov
sub
jg
sbb
sahf
repnz
fcmovbe
hlt
mov
aaa
add
sbb
les
ss
addr16
sbb
inc
xlat
out
adc
mov
cwtl
or
mov
fisubrs
inc
inc
adc
jne
arpl
mov
loopne
ds
add
nop
cs
nop
movsb
orb
adc
xlat
mov
jle
pop
fldcw
cmp
mov
sub
notb
lods
ds
push
clc
mov
enter
std
adcl
ja
jns
icebp
jge
inc
outsl
mov
pop
enter
inc
mov
fs
loop
inc
loopne
ret
gs
int
mull
imull
sbb
test
jo
dec
mov
lea
xor
xor
mov
lcall
mov
adc
ss
sarl
push
lods
in
mov
mov
sub
xor
cmp
mov
or
out
fisttpll
jmp
shl
cmp
call
fs
pop
notb
pop
xchg
mov
sarl
pop
ret
or
call
popa
pop
mov
cmp
mov
sarl
addl
adc
and
test
test
jle
xchg
mov
add
cmp
bnd
push
mov
mov
push
inc
or
hlt
into
inc
faddl
aaa
or
add
add
leave
jae
xchg
in
push
cmp
sub
loopne
dec
mov
mov
aas
test
dec
subl
aam
lret
in
jmp
inc
xchg
or
xor
mov
mov
roll
mov
outsl
and
mulb
pop
inc
fists
pop
in
mov
popf
data16
pop
jnp
sti
lret
mov
pop
repz
pop
xchg
or
cmpsb
inc
sbb
in
in
and
mov
sub
jmp
stos
div
outsl
test
aad
sub
into
mov
dec
es
insl
pop
mov
or
cmp
dec
insl
arpl
sahf
xchg
subl
jb
call
out
cltd
push
mov
gs
mov
mov
test
rcll
rcrb
aas
cld
sbb
out
sbb
inc
mov
mov
popa
and
ljmp
sub
pushf
push
xchg
lcall
jecxz
pushf
fnstsw
mov
xlat
jle
sbb
fucom
inc
jmp
das
push
xchg
dec
push
imul
shl
adc
lea
mov
leave
aaa
push
and
data16
in
pop
ja
mov
push
bound
mov
mov
and
cmp
xchg
imul
cli
std
push
movsl
dec
icebp
cld
mov
mov
mov
in
xchg
sub
aaa
sbb
sti
push
sbb
and
ds
shl
sbb
mov
mov
jmp
sub
inc
add
scas
mov
negb
push
mov
pusha
scas
sti
cmp
into
stos
scas
cwtl
and
paddw
mov
adc
mov
xor
insl
jns
mov
ret
sub
out
out
aam
mov
pusha
xchg
lahf
in
jge
cmp
lcall
xor
and
cmp
mov
xor
push
xor
in
cmpsb
es
mov
stos
mov
ljmp
daa
scas
mov
fimull
je
adc
pop
jae
ds
scas
cltd
jp
mov
mov
jle
fnsave
lret
stc
mov
mov
jecxz
push
test
aad
mov
jne
std
pop
into
push
inc
jmp
mov
clc
mov
fxam
and
shlb
stos
add
imul
jmp
jl
and
sbb
rcrl
adc
pop
inc
adc
cmp
std
out
push
insb
jmp
fdivrl
fstps
xchg
ljmp
or
mov
push
test
ret
push
dec
xchg
lret
dec
ss
outsb
jge
insl
xchg
scas
xlat
xor
push
pop
lds
pop
repz
mov
and
mov
les
mov
cltd
xchg
or
out
bnd
test
dec
loopw
jle
mov
xchg
repnz
fwait
pop
rclb
adc
push
loop
add
mov
add
aas
cvttps2pi
rcrl
leave
mov
mov
cmpsb
clc
fdivrl
rol
fstpl
out
enter
movsl
mov
insl
fsubr
test
cltd
sti
lret
insl
mov
mov
jno
pop
dec
sub
jg
arpl
xchg
inc
rol
ljmp
clc
mov
loop
leave
xchg
push
push
das
add
sub
jo
xchg
mov
movsl
add
inc
pop
adc
dec
dec
mov
leave
push
cld
adc
pop
mov
dec
pop
cli
cmp
fimull
xchg
js
lret
fstpt
es
and
inc
leave
fyl2xp1
xor
jns
insb
mov
xchg
std
arpl
insl
xchg
fldt
mov
ss
les
shr
add
stc
jecxz
pop
xchg
icebp
xor
or
repnz
and
lcall
inc
add
pusha
loopne
dec
repnz
and
add
cmc
in
push
pop
adc
cwtl
out
hlt
xchg
cmp
rorb
mov
cmp
das
repnz
in
and
pop
popa
pop
cmp
push
in
lgs
xchg
jmp
push
imul
sub
stos
add
shl
repnz
into
popf
add
cmc
int
popa
es
adc
cld
xor
js
adc
adc
xor
push
dec
out
cli
cmc
adc
mov
pop
aad
push
mov
das
ret
or
inc
dec
lock
push
inc
notl
mov
lock
stos
movsb
add
ret
out
xorb
mov
gs
std
out
ljmp
cs
in
faddl
jmp
dec
addb
push
hlt
pop
push
xor
fs
add
lret
pop
sub
pop
and
pop
jne
jmp
jno
mov
shll
xchg
dec
decl
xchg
mov
dec
das
or
push
lods
cmp
cmp
mov
and
xor
loopne
pusha
adc
orb
xor
adc
in
out
jp
pop
mov
lds
cmc
cli
or
push
push
mov
std
pusha
push
push
cmpsb
mov
cmp
mov
popa
movups
push
lret
outsl
cld
add
sbb
daa
sub
fucomip
add
or
pop
in
ret
lods
arpl
out
adc
or
and
pop
adc
data16
jmp
shrl
rclb
lret
fcmovbe
adc
inc
mov
and
adc
mov
daa
sarb
xchg
xor
sub
xchg
movl
add
and
jne
orb
xor
mov
pop
test
or
push
into
or
mov
fisttps
js
push
cs
insb
mov
loope
push
loopne
mov
out
xlat
push
lods
imul
cmp
insb
push
pop
popf
xchg
outsb
stos
pushf
jnp
fwait
jg
mov
adc
test
xchg
xor
rcrl
inc
mov
je
fs
lods
in
dec
in
sbb
jno
loopne
and
sub
fdivs
loope
mov
fistl
js
sub
sbb
xchg
sbb
mov
cmp
pushf
addl
movsl
mov
xchg
mov
into
in
movsl
aad
sti
push
loope
jmp
icebp
int3
sbb
sub
data16
dec
fwait
mov
jne
xchg
mov
add
mov
or
into
outsl
add
int
mov
add
xchg
push
int
cld
mov
hlt
pop
xchg
inc
es
mov
fwait
std
mov
mov
and
ret
lahf
xlat
pop
gs
sti
cwtl
inc
into
adc
and
lock
sti
jge
fsubl
mul
jge
pop
push
inc
xor
roll
into
jecxz
pop
loop
push
mov
popf
hlt
add
testb
xlat
repnz
std
lahf
lahf
lea
cwtl
aad
lods
dec
sbb
add
cli
ret
imul
and
cmp
or
sub
or
test
das
cmpxchg
and
cmc
push
xchg
cmpsb
add
pop
add
pop
stos
jo
cmp
xchg
sbbl
out
adc
dec
les
jle
xchg
mov
jae
outsb
push
mov
jmp
pop
adc
sbb
pop
pop
sahf
mov
mov
dec
push
inc
push
clc
jecxz
jl
and
into
pop
addr16
es
loope
jbe
xor
stc
mov
xchg
push
push
das
cmp
jae
push
jne
call
cmpsl
ffree
ds
das
sub
push
lds
movsb
sub
cli
or
out
or
call
cltd
out
hlt
sbb
xchg
mov
adcb
imul
jmp
insl
push
clc
xor
out
mov
in
mov
mov
adc
jo
add
and
or
push
mov
dec
out
push
pop
mov
lret
lock
cmpsl
outsb
sub
mov
arpl
cmp
adc
cltd
add
out
loopne
xchg
push
shll
je
in
call
push
enter
cmpsb
xchg
lret
mov
push
and
cmc
dec
xadd
add
mov
mov
int
enter
enter
dec
test
flds
repz
xor
sub
push
push
pop
inc
in
jo
push
pop
mov
mov
cwtl
lea
lds
mov
fists
dec
jmp
aas
sbb
loop
scas
pushf
das
push
dec
in
and
aas
imul
test
inc
arpl
push
and
pop
subl
mov
and
test
mov
sbb
loope
shlb
lret
inc
and
bnd
mov
out
aaa
jecxz
insb
jno
clc
dec
cmp
lahf
mov
push
das
out
sub
and
lods
add
pop
ds
inc
adc
je
xor
cli
inc
jmp
addr16
add
jne
add
adc
pop
lret
test
adc
cmc
adc
mov
mov
ja
xchg
test
push
js
adc
aad
xchg
test
adc
in
pushf
xor
and
mov
jle
sub
repz
and
daa
mov
les
jae
clc
sbb
jnp
lahf
mov
test
jno
scas
in
jmp
stos
jg
push
and
outsb
andb
movsl
out
sub
or
and
test
repnz
dec
cmp
sub
mov
or
testl
pop
nop
iret
inc
shll
push
cmp
sti
push
add
adc
cmp
add
mov
ds
push
push
xor
mov
outsl
pop
ds
enter
cltd
les
sbb
xchg
loope
adc
push
push
xchg
cmpsb
cmpb
mov
in
cmp
mov
jo
pop
cmp
pop
push
jbe
int3
push
orb
pushf
push
cmpsl
mov
fidivl
push
cmp
pop
jg
roll
loop
mov
add
and
adc
rcrl
js
and
cmpsb
arpl
ret
and
filds
daa
lcall
mov
add
pusha
fnstenv
mov
out
repz
mov
cli
or
mov
push
dec
and
ret
dec
mov
mov
dec
js
pop
cli
popf
test
mull
aas
and
cmp
icebp
stos
lahf
sarl
sets
cmpsb
sub
push
jns
sbb
pop
push
jmp
mov
ret
ret
clc
je
pop
pop
test
mov
lcall
adc
mov
stos
adc
jno
jecxz
fwait
xor
leave
sti
adc
mov
test
cmp
out
xchg
sbb
push
dec
and
sahf
add
incl
mov
stos
mov
adcl
fwait
sbb
mov
and
mov
adc
into
std
dec
daa
xchg
lods
enter
mov
cmp
add
bound
stos
test
lcall
in
out
rolb
inc
lcall
outsb
or
jge
fnstenv
adc
xor
pusha
subb
fsubp
mov
dec
scas
cmp
rcll
mov
jp
out
xor
mov
adc
push
icebp
loope
nop
lea
nop
dec
push
setb
dec
adc
das
push
jne
ss
push
fmulp
test
cmp
testl
mov
negl
sbb
xchg
jle
adc
out
addb
sbb
ret
ud0
jl
push
jns
js
out
lcall
push
leave
sub
add
cmp
lret
adc
mov
fisubs
push
les
xor
cwtl
pop
rorb
iret
mov
pusha
jl
fdivrp
scas
xor
mov
inc
inc
pop
pop
daa
aam
pop
and
fwait
cltd
xchg
push
xor
dec
aad
mov
adc
lea
in
cmp
lods
cmpsb
mov
dec
mov
push
movsb
mov
out
clc
ret
ds
xor
xchg
inc
mov
out
cs
mov
loope
push
cs
sub
in
jmp
jo
inc
mov
in
out
jp
fbld
sub
rorb
mov
mov
push
jge
inc
or
add
cmp
daa
ds
push
mov
xchg
rol
das
jmp
iret
adc
imul
push
sub
inc
cld
jne
std
or
data16
add
ljmp
neg
fs
insl
xchg
lea
lret
cmc
mov
push
mov
mov
inc
dec
icebp
repz
notb
mov
cmp
push
xchg
aam
test
jae
orl
scas
stos
in
jp
xchg
int3
ret
mov
ljmp
repnz
mov
nop
adc
or
sub
xor
add
mov
inc
out
pushf
cmpsl
mov
insl
mov
xlat
xchg
out
xchg
push
adc
popf
push
mov
mov
inc
leave
clc
dec
pop
lock
lret
cltd
sub
pop
jnp
push
cmp
mov
or
clc
test
insb
ds
fistpl
arpl
lds
sub
add
mov
mov
outsb
ja
stc
negb
lret
std
lcall
in
push
jns
sub
or
ljmp
aam
rclb
sbb
mov
fimull
mov
aad
mov
jmp
xchg
mov
mov
jns
divl
in
out
or
adc
mov
loope
pop
jg
xor
pop
sbb
cwtl
push
or
rcll
cld
ror
mov
pop
adc
loopne
out
js
pusha
data16
mov
gs
push
out
ljmp
mov
add
push
sbb
arpl
divb
xlat
and
lods
pusha
dec
fimull
aaa
lcall
arpl
call
mov
sub
sub
loop
rdpmc
divb
loop
adc
or
into
popf
xor
sbb
mov
int
xor
cwtl
ljmp
push
adc
dec
xor
cmp
adc
ret
push
bswap
pop
scas
jecxz
sbb
xor
sub
das
mov
mov
dec
xchg
mov
pop
push
ret
inc
adc
dec
mov
les
aas
lret
hlt
fwait
ljmp
push
pop
inc
push
addr16
adc
xlat
xor
mov
cmp
pop
int3
mov
cmpsw
jae
fwait
lods
pop
dec
adc
ss
outsl
fwait
push
inc
sbb
lret
xchg
lcall
dec
icebp
xchg
rcr
sbb
mov
mov
mov
icebp
jno
dec
test
jp
jo
enter
xor
das
push
pop
cmpsb
mov
mov
aam
inc
add
dec
cmp
daa
cmp
cmpsl
fimull
fucomi
outsb
mov
leave
add
jmp
add
or
gs
sarb
push
mov
push
adc
cwtl
lcall
add
pop
push
lock
aad
mov
ljmp
push
push
out
pop
push
or
cmp
pop
mov
repnz
mov
lret
lahf
rcrb
loope
imul
mov
mov
dec
push
clc
js,pn
inc
lcall
fxch
xchg
jnp
into
or
js
cmp
jae
inc
sar
push
jle
and
pop
ja
mov
sarb
out
xchg
aam
pop
aam
stc
nop
lret
push
or
add
sbb
inc
add
dec
hlt
and
mov
sarb
xchg
fs
mov
jns
mov
cmp
inc
jno
stos
xor
mov
adc
iret
sbb
jmp
rep
pop
or
inc
adc
jmp
pop
outsb
repnz
push
clc
dec
push
sbb
mov
jmp
jmp
scas
mov
xchg
and
lea
add
mov
mov
js
push
ret
sub
xchg
call
jg
inc
pop
inc
sub
lods
fistl
or
fidivrs
push
mov
aaa
dec
imul
jg
fisubs
add
sbb
jmp
inc
xchg
scas
lret
cli
mov
aad
or
outsb
or
mov
jl
mov
cwtl
cmp
pop
leave
dec
nop
mov
outsb
jg
notb
cmpsb
pop
mov
in
in
lds
jle
mov
fldl
push
pusha
loope
push
mov
xchg
xor
shll
xchg
adc
jg
dec
clc
adc
dec
addb
fidivs
or
stc
push
add
movb
lods
add
iret
sub
xorl
loopne
sub
sbb
ficoms
pushf
cmp
cmpsl
ds
xchg
pop
inc
test
sbb
cmc
mov
inc
dec
cwtl
jmp
jb
in
lods
scas
sub
in
nop
xchg
ja
cmc
stos
scas
std
cwtl
jp
mov
mov
int
ret
jb
sub
or
mov
sub
je
mov
in
sbb
inc
xor
mov
dec
mov
call
loope
xor
out
jge
push
jns
fidivrl
ret
adc
xor
dec
pop
xor
mov
or
or
mov
testb
loopne
repnz
xchg
mov
pop
es
test
lahf
les
pop
dec
mov
pop
outsb
jnp
cmp
pop
les
leave
nop
and
shr
dec
aaa
pop
repnz
mov
fcompl
int
adc
cmpsb
std
outsl
decl
jbe
xor
add
jge
repnz
add
in
or
jne
ret
sbb
xchg
addr16
outsl
int
xchg
or
jo
xor
or
jo
push
xchg
nop
ljmp
mov
add
mov
sarb
inc
push
insb
call
mov
bound
loope
je
loopne
daa
mov
popf
or
push
sbb
ret
push
addr16
dec
mov
test
lret
stos
xchg
mov
cmc
sti
ja
fisttps
pop
pop
inc
pop
dec
scas
mov
or
and
imul
stos
ret
jbe
aam
pop
add
mov
cli
fwait
push
cmp
insb
les
cmpsb
lea
mov
iret
repz
add
test
pop
sub
mov
insb
pop
or
mov
push
lds
pusha
inc
iret
and
dec
or
sub
sub
test
fcmove
arpl
aam
xchg
xor
lock
adc
orb
and
sahf
push
sub
mov
lds
sahf
decl
fwait
adc
push
pop
ss
inc
xorl
fs
mov
lods
mov
fucomi
push
xorb
arpl
inc
movsb
ss
int
jle
pusha
movsl
cmp
cmp
xchg
inc
pop
mov
cmp
xchg
mov
or
mov
or
xor
jle
shl
or
std
out
pop
mov
pop
push
outsb
pop
jb
movswl
cmp
in
outsb
xor
addr16
or
bound
inc
test
dec
jecxz
sahf
jns
dec
pushf
icebp
shll
mov
xchg
pop
shlb
pop
pusha
add
dec
sbb
fs
ret
and
ljmp
lret
std
out
cmp
lcall
mov
in
or
add
jg
cmp
pop
std
push
ret
fistps
imul
cli
mov
push
or
jbe
adc
push
xor
outsb
push
xor
pop
cmpsb
lds
inc
lods
pusha
mov
mov
mov
inc
jne
in
mov
jecxz
xor
outsb
pop
mov
and
aad
push
cmp
push
fisttps
int3
ret
sub
or
cwtl
xor
repnz
cmpsl
inc
nop
cmp
outsb
into
cmp
inc
mov
lods
cmc
into
cmp
in
and
movsb
jno
decb
aaa
xor
dec
test
popa
xor
outsl
cmpsb
pop
mov
movsl
jle
xlat
dec
decb
mov
loope
dec
cli
fcmovnb
mov
fldcw
add
jl
ds
popf
mov
ds
or
and
mov
mov
movsb
xchg
sbb
aaa
sarb
add
pop
xchg
mov
xor
mov
mov
dec
pop
negb
push
iret
ret
repnz
jbe
xchg
dec
mov
mov
push
or
insb
fdivrl
inc
stos
or
pop
les
jmp
dec
or
jmp
iret
pop
lcall
mov
inc
pop
push
popa
inc
mov
cld
int3
pop
or
sarl
sbb
ret
adc
xchg
sti
mov
and
cmp
jle
sub
mov
iret
push
pop
test
lock
cmp
ds
mov
test
push
jmp
sub
mov
push
dec
mov
mov
fldt
movsl
cwtl
sub
imul
daa
lret
out
fcmovb
inc
ja
minps
adc
insb
enter
fbstp
and
das
aas
rorb
jno
add
fisttps
mov
mov
and
outsb
popa
jae
fisubs
push
cld
decl
push
icebp
sub
out
fildl
mov
mov
adc
mov
pop
add
pushf
mulb
adc
push
xor
push
and
imul
ficompl
stc
shll
push
xchg
push
stc
mov
add
imul
sbb
mov
pushf
movsb
mov
cld
inc
int
jmp
ficoms
cmp
mov
push
pushf
adc
sbb
pop
xchg
jnp
sub
into
mov
and
pop
mov
xor
data16
dec
loopne
call
mov
sub
ja
lret
jge
sub
js
test
fdiv
pop
lds
leave
dec
mov
lods
jnp
sbb
popa
mov
ds
mov
mov
nop
inc
adc
or
lods
adc
mov
lret
aas
cmc
dec
inc
cmp
mov
xor
sbb
fsubp
jecxz
andl
and
push
add
push
data16
enter
mov
shlb
in
sbb
sbb
xchg
rcrb
fidivrl
sub
xchg
cmpsl
loopne
jbe
adc
add
imul
jp
lahf
nop
cmp
add
cmpsl
pushl
je
movsb
jb
and
flds
mov
fnstenv
test
movsl
ret
mov
mov
adc
movsl
jmp
insl
pop
stc
ret
bnd
dec
leave
or
push
adc
or
lahf
xchg
icebp
sbb
cld
js
stc
sub
fsubr
pop
out
pop
loop
dec
loopne
xor
sti
loop
js
pop
pop
std
push
push
jg
jge
mov
inc
out
push
cmp
out
bound
or
ret
stos
push
int
in
loope
into
lods
fdivrl
jo
dec
cli
cmp
dec
jns
mov
imul
leave
or
sbb
dec
cmpsl
xchg
mov
nop
not
cmpsb
mov
jl
roll
fxch
in
lock
insl
pop
mov
xor
mov
or
imul
mov
add
ds
pop
mov
imul
inc
mov
inc
cltd
cli
test
mov
mov
add
mov
mov
mov
push
push
rorl
mov
lods
bswap
sub
and
jp
mov
add
and
push
push
xor
jge
fnstcw
inc
in
inc
cmpsb
popa
pushf
scas
fiadds
dec
cmpsb
movsl
push
dec
std
and
sub
mov
mov
jae
in
aaa
cmp
dec
mov
or
cltd
lcall
cmp
or
ljmp
cmc
sub
push
cmc
insb
xor
in
push
jns
lock
and
mov
pop
inc
pop
push
mov
test
fucomi
or
fstp
dec
psraw
lods
push
test
pop
or
popf
jns
imul
xor
push
dec
push
and
mov
jne
mov
into
stos
out
clc
jmp
jnp
xor
in
ficompl
andl
xor
test
inc
addr16
fcmovb
ret
jbe
sbb
inc
out
xchg
das
adc
pop
test
je
pop
sbbb
mov
daa
jbe
pop
mov
dec
cmpb
add
shl
xor
mov
ret
nop
xchg
aam
mov
jnp
dec
hlt
iret
inc
or
xor
add
fs
jg
lea
add
mov
cmpsl
add
mov
call
decb
xlat
push
imul
xor
dec
pop
aaa
outsl
sub
mov
in
rcrb
fwait
and
imul
clc
lret
sub
flds
cwtl
and
loop
clc
dec
aas
fdivs
dec
lret
imul
jae
fcomp
sbb
or
movsl
xor
call
sbb
out
jmp
sub
or
out
jle
aaa
pop
jp
insb
and
orb
mov
mov
jnp
imulb
iret
mov
sahf
js
jmp
cmp
add
jp
xchg
bound
mov
xchg
into
push
xor
push
cmpsb
mov
inc
lods
dec
mov
imul
in
loop
fcmovu
pop
and
push
testl
add
sub
test
pushf
jo
scas
cvtpi2ps
fimuls
mov
adc
and
addb
push
stc
and
loope
mov
dec
mov
push
subb
mov
jge
lock
xchg
repnz
mov
pop
xor
cmp
leave
in
rorb
in
sbb
xchg
sbb
inc
movsb
movsl
add
lahf
or
cmp
pop
inc
lods
jle
fistpl
fwait
daa
push
fs
lahf
inc
inc
es
cmp
movsl
or
rcrb
loope
jmp
mov
push
loope
movsb
insb
lock
rorb
fsubrs
pop
outsb
mov
xchg
js
jo
sbb
xor
out
imul
inc
pushf
rorl
adc
nop
mov
cmpsw
mov
adc
mov
mov
clc
pop
push
sar
mov
movswl
jae
inc
xor
dec
cmp
or
fcomip
jns
add
xchg
fmuls
mov
inc
stc
jmp
and
mov
xchg
xor
xchg
ds
data16
mov
lret
gs
lock
inc
xchg
dec
rcrb
nop
pusha
sub
pop
in
sbb
lret
insl
imul
or
in
idiv
jb
shll
push
enterw
xchg
pop
dec
inc
push
shl
arpl
mov
js
push
cmpsb
inc
lock
or
cmp
aam
adc
int
enter
shrb
mov
stc
mov
cmpsb
fists
jnp
dec
xchg
cld
and
in
adc
push
lcall
gs
sub
sbb
mov
ret
dec
or
sahf
in
pop
mov
add
or
movsl
movsb
jp
xchg
xor
sub
inc
xchg
jbe
mov
shrl
mov
sahf
mov
mov
mov
inc
inc
push
insb
xchg
mov
inc
xor
or
adc
movsl
daa
sub
enter
test
adc
jecxz
xchg
jmp
fisttpl
push
je
inc
rclb
mov
mov
cmpsl
cmp
cltd
bound
xchg
in
push
and
sbb
push
es
imul
dec
jae
hlt
cmp
xchg
xchg
or
subb
mov
jo
test
icebp
jp
push
mov
sub
adc
scas
jg
stos
push
dec
dec
ret
stos
jmp
mov
cmp
jecxz
sub
xchg
addl
or
lock
ret
dec
push
orb
xor
jb
xor
push
das
punpckhwd
inc
jo
cld
mov
stc
das
or
es
stos
dec
int3
fs
jge
push
aam
outsb
lret
xchg
popa
xchg
fistl
fcmovnb
std
movsl
std
cltd
fimuls
mov
jmp
loope
jne
hlt
out
sub
mov
adc
mov
mov
add
add
ds
inc
pushf
push
in
mov
pop
add
jmp
lcall
pop
lock
fsubr
gs
jno
nop
mov
popa
jno
cli
mov
pop
iret
mov
sub
xchg
cltd
dec
data16
mov
enter
pop
adc
jno
cwtl
jo
adc
mov
filds
inc
out
stos
dec
pop
lret
popa
xor
mov
call
adc
mov
test
xchg
add
jo
mov
dec
out
push
mov
cmpsb
dec
sbb
ss
es
dec
clc
aad
dec
jp
popa
dec
into
das
inc
sub
mov
inc
outsb
in
insb
insl
stc
stc
sub
test
push
test
test
mov
fdivs
fisttps
pop
aam
insl
jmp
inc
clc
inc
es
insb
or
pop
xchg
outsl
ss
cmp
jae
and
lcall
push
mov
nop
jne
xlat
into
pop
cmp
int3
mov
sub
cmpsb
loopne
mov
push
out
movsb
and
mov
imul
sub
mull
dec
cmp
decl
dec
adc
cmp
xchg
jns
and
daa
movsb
add
cmpsl
sbb
mov
push
xor
or
pop
call
cmpsl
test
cmc
mov
pop
adc
and
cpuid
mov
mov
sub
test
insl
jmp
cli
mov
jb
mov
mov
sbb
jns
mov
pop
sub
aam
gs
and
insl
dec
stos
inc
pop
fbld
das
cmp
stc
sub
cmp
movsb
cltd
mov
push
daa
jae
push
mov
int
jae
and
lret
scas
loope
mov
sti
fwait
push
cmp
xchg
outsl
pop
add
out
add
lods
mov
add
stos
es
xor
shlb
imulb
in
bound
mov
fcompl
mov
clc
daa
mov
out
into
ss
aad
push
popa
es
mov
test
pop
add
cwtl
xorb
and
shrb
ss
jg
insb
iret
sub
iret
sarl
loopne
pop
dec
es
adc
xchg
out
shl
and
std
push
sub
jl
lods
mov
xor
adc
sbb
popf
pop
mov
data16
fadds
lea
mov
outsb
push
pushf
fisubrs
iret
leave
push
fimull
xchg
ret
sub
fstps
hlt
daa
ret
add
and
adc
add
insl
jmp
jb
mov
jmp
pop
repnz
into
addl
aas
outsl
mov
sbb
jne
in
sbb
aas
mov
inc
lcall
dec
jb
mov
xchg
mov
aam
call
mov
shll
clc
pop
mov
cmpsl
inc
test
adc
jl
jns
xorb
cltd
mov
or
dec
pop
and
in
fimuls
lret
lret
lcall
cmp
fdivrs
js
dec
xchg
das
lods
outsl
cltd
dec
into
xchg
repz
sbb
mov
dec
repnz
or
loop
outsl
jg
std
xor
and
xor
cmpsl
lds
sbbb
sub
xlat
inc
fsts
loop
lret
in
xor
jbe
pop
mov
jl
inc
xor
mov
inc
pop
mov
addl
push
dec
add
dec
sub
pop
cwtl
shrb
fs
jle
out
lds
call
insb
and
ret
das
das
jne
stos
cmp
shl
inc
push
cs
stos
and
mov
stc
lcall
das
shll
pop
scas
scas
nop
cld
adc
test
test
adc
add
lea
ficoms
add
mov
bound
imul
lock
jo
jne
popa
cmp
cmp
sbb
pusha
out
xor
pop
or
addb
aam
cmp
push
jl
dec
je
out
push
adc
jp
pop
divl
out
push
movsb
leave
mov
push
cmp
das
repz
mov
push
add
test
inc
repnz
and
lock
fbld
fmull
xor
adc
movsl
push
negl
jo
mov
sub
cld
loop
stos
add
std
jb
je
mov
enter
xchg
fsub
and
fistps
xor
adc
popa
xchg
mov
hlt
mov
inc
repnz
xlat
inc
and
ret
addr16
pushf
pop
and
dec
mov
jno
add
add
jge
jns
inc
fs
dec
jmp
xor
es
jl
sbb
and
sub
xor
mov
pop
pushf
popf
mov
pop
rorb
shll
pop
mov
sub
push
outsl
stc
mulb
mov
daa
das
cmc
inc
pop
cld
mov
and
xor
add
sub
fdivl
cmp
push
lea
movsl
adc
mov
fsubrs
dec
out
pop
sbb
xchg
dec
test
inc
scas
or
test
ja
daa
ja
mov
mov
in
imul
cmpsl
sub
stos
das
pop
fs
test
lock
pop
lock
sarl
push
cld
dec
jbe
ss
xor
dec
push
test
outsl
mov
fdivrs
and
outsl
pop
mov
sub
inc
push
aad
mov
pop
push
mov
dec
cmp
loopne
push
aaa
cmpsb
arpl
imul
push
adc
push
sbb
sub
lea
pop
call
cmp
jns
jecxz
lea
ror
js
xor
sub
out
mov
jmp
push
dec
bound
jp
adc
cld
int
jo
stc
mov
dec
stos
inc
jns
out
repz
dec
int3
sbb
xor
push
ds
addr16
mov
pop
out
xchg
adc
test
test
sbb
and
insl
inc
jp
in
stos
fistpll
dec
mov
inc
sbbl
test
pop
or
stos
sub
and
inc
popf
pop
push
loop
add
mov
test
int3
xchg
hlt
aam
lret
test
inc
add
sub
pop
sbb
add
out
push
push
popf
out
test
rorb
dec
inc
cmpsl
add
pop
mov
mov
mov
test
adc
daa
mov
rorb
and
or
enter
lds
mov
xor
mov
cwtl
mov
aas
lret
jmp
icebp
loopne
mov
jp
jne
mov
movsb
dec
dec
loope
sbb
scas
mov
mov
aad
mov
or
jb
mov
jg
rol
test
or
ret
pop
and
push
fdivrs
cmp
sti
add
les
test
bnd
sub
outsl
pop
jecxz
outsb
repz
stos
lds
rclb
addr16
bound
lea
sbb
sbb
sub
fidivs
mov
or
jmp
pop
test
mov
xor
out
data16
int
push
xchg
ja
lret
mov
push
loop
or
push
dec
push
cmp
xchg
ficoml
add
adc
insb
pop
mov
sub
stos
sbb
xor
mov
mov
jmp
out
cmpsb
dec
daa
in
dec
push
ss
push
pop
inc
xorl
sub
cmp
testb
inc
in
sarb
pop
or
and
mov
and
int3
aam
ja
movsb
or
les
inc
pop
sub
sub
mov
sbb
call
fcompl
jnp
mov
inc
sbb
xchg
push
or
mov
nop
int
out
push
js
jge
sub
repnz
popf
add
lock
xchg
or
and
lahf
dec
mov
mov
jb
pop
push
std
imul
or
mov
dec
pop
je
push
or
dec
test
cmpsl
jmp
inc
pusha
fsub
adc
das
adc
cmpb
dec
push
out
leave
int
inc
cltd
pusha
int3
jae
arpl
std
jmp
aaa
in
daa
and
in
mov
adc
sbb
out
and
xlat
loopne
add
sub
dec
sub
fwait
mov
imul
sub
inc
sarb
test
stos
sbb
addr16
aaa
aam
in
ds
int
mov
sahf
lods
mov
aaa
add
adc
fnstsw
out
xchg
sbb
and
lret
dec
adcl
sub
mov
pop
push
jg
notl
jg
pushf
pop
or
iret
mov
scas
lret
test
and
repnz
adc
cli
shrb
adc
leave
fsubs
mov
xor
sub
popl
adc
repz
pushf
dec
or
in
aas
es
stos
mov
sub
imul
rorl
or
aad
add
cmp
lcall
and
orb
mov
imul
xchg
mov
ficoml
ljmp
push
dec
lcall
dec
mov
or
addl
jge
mov
xchg
clc
clc
xchg
fcmove
andnps
aaa
popa
mov
out
clc
lds
mov
inc
outsb
addl
mov
push
jl
insb
test
sti
shl
cli
test
inc
xchg
lock
into
fsubrs
cld
loopne
aaa
dec
pop
inc
fwait
add
paddsb
in
pushf
jnp
loop
adc
jne
push
and
cmpsl
jns
pop
xchg
pop
pop
push
loopne
imul
shr
fsubrs
xor
xchg
int3
push
and
movb
ss
or
mov
outsb
or
cwtl
aam
lock
idivb
aas
add
adc
rorb
push
sub
mov
cmp
cld
repz
lods
mov
or
inc
mov
ds
pop
andl
fistpll
add
or
xchg
pop
pop
adc
roll
adc
sti
repnz
fidivrl
in
nopl
leave
test
mov
mov
popa
bound
jg
call
es
mov
mov
out
push
imul
je
and
jb
xchg
gs
fsubp
or
fcomps
pop
adcb
or
sahf
aas
mov
sub
loopne
or
mov
push
leave
rcl
dec
push
pop
mov
cwtl
out
or
jge
daa
or
lcall
mov
cwtl
pop
das
testl
mov
add
popa
xchg
roll
cmp
shll
adc
aad
int
ss
outsl
fsubr
inc
jae
jns
cmp
cmp
push
loopne
or
inc
push
std
or
shlb
sbb
pop
cld
fsubl
cmp
fidivrs
pop
cmp
xchg
push
js
out
lods
cmp
fnstcw
fadds
stos
rcrl
adc
mov
xchg
and
insl
mov
mov
int3
rcr
cld
gs
fldt
lock
dec
scas
jne
inc
test
jae
mov
mov
lcall
jno
in
lods
notb
mov
scas
add
pop
jo
pop
popf
in
je
adc
mov
add
int
into
and
mov
filds
in
xlat
push
mov
push
sub
xchg
out
cwtl
outsb
push
inc
test
or
repnz
add
aas
sub
fisubrs
add
popa
cltd
cld
mov
xor
sbb
jne
xchg
and
mov
in
int3
std
aaa
cwtl
js
mov
pusha
pop
js
pop
mov
jl
es
xor
decb
jg
cmc
fsubr
mov
insl
fxch
mov
add
or
cmp
xor
mov
lock
out
imul
rorl
scas
test
pusha
shll
xchg
sub
sbb
ret
cltd
fwait
cmpb
add
jae,pt
mov
add
and
pop
sbb
das
cmp
aas
mov
mov
pusha
pop
mov
clc
aas
leave
mov
test
in
mov
in
test
test
mov
fildll
mov
lahf
jne
jp
mov
in
pop
adc
and
cmpsl
pop
xor
push
inc
cmpsl
lahf
pop
lcall
aas
sbbl
cmp
xor
inc
stos
lret
mov
or
cli
aad
push
mov
lret
inc
popa
jns
cld
xchg
fs
pop
and
mov
push
jae
dec
push
sub
mov
sahf
add
xchg
cmp
scas
push
pusha
add
ror
sbb
stos
aas
arpl
or
or
adc
xorl
mov
popf
mov
aam
cmpl
xchg
ss
sub
decl
iret
pop
loope
or
stos
push
dec
jno
fldl
cli
dec
aad
sub
inc
jae
mov
out
loopne
sbb
jnp
fldenv
xchg
cmc
fcmove
ljmp
lcall
sub
mov
xchg
xchg
mov
xor
jbe
mov
sub
push
mov
repnz
mov
mov
std
cwtl
stos
mov
lods
sub
ja
jp
lahf
cmpsb
imull
aaa
aad
adc
arpl
lret
push
cmp
cmpsl
pop
and
adc
pop
leave
push
outsb
ljmp
push
pop
lods
rcrb
xchg
scas
mov
xchg
and
int3
sti
repz
rcl
mov
inc
push
in
hlt
mov
sub
cmpsl
out
ret
mov
into
push
inc
adc
pusha
push
add
out
push
ja
and
dec
aam
xchg
cmc
xor
sub
cld
jge
out
adc
or
bound
faddp
jle
shl
fistl
sub
iret
cmc
call
sub
jo
mov
arpl
mov
xor
push
and
das
enter
cmp
push
jne
mov
imul
rorb
inc
push
xchg
pop
mov
sub
pop
xor
fdiv
ficoms
pop
lds
out
fisubs
stos
or
rcrb
adc
fldt
aad
mov
mov
lock
fs
out
fs
fstpt
dec
out
cmc
loop
push
sbb
sbb
push
jnp
fistpll
xchg
mov
xchg
movzbl
jl
test
inc
xor
frstor
jge
add
nop
or
lret
dec
test
and
out
sub
dec
lret
ret
test
shll
xchg
xchg
xchg
inc
pop
mov
repnz
jg
fmull
or
sub
or
xor
les
lods
sub
lret
dec
jne
push
cli
dec
xor
lcall
orl
push
sub
lret
adc
dec
mov
sti
mov
cwtl
cs
ljmp
xor
push
ret
movsl
mov
lds
mov
std
adc
and
jno
repz
lcall
xchg
dec
add
inc
int
xchg
mov
cli
mov
test
ljmp
mov
jmp
dec
loopne
movsl
jle
in
aas
in
xor
jmp
cli
adcb
bound
sub
push
sbb
lret
in
jnp
sbb
in
push
cmc
xchg
lea
mov
push
xchg
push
out
pop
add
imul
mov
ss
aaa
jnp
test
or
xor
mov
cmp
ret
notl
jns
mov
sbb
rcrl
adc
cmpsl
push
cwtl
mov
mov
or
mov
xor
push
pop
xorl
mov
or
fdivp
xlat
mov
push
aas
mov
push
jmp
jge
and
es
and
loop
cmp
xor
inc
lret
mov
pop
leave
sub
add
mov
data16
cld
add
out
outsb
and
cmp
mov
je
stos
sti
xchg
lock
je
inc
fsts
aaa
cmpsl
pusha
mov
push
aaa
jae
xchg
frstor
nop
push
xchg
repz
push
mov
xchg
xor
in
int3
lods
add
xchg
sub
lret
jg
fsts
adc
movsl
dec
or
jno
mov
in
daa
mov
inc
sub
fsubl
sbb
inc
sbb
insl
fstpl
aas
mov
cmp
int3
out
dec
jmp
lock
or
jo
mov
pushf
push
or
js
dec
inc
cmpsb
push
and
push
jns
fsubs
inc
ljmp
and
fsubl
adc
rcrb
and
mov
jae
lds
arpl
lea
sbb
mov
loopne
inc
sbb
ret
and
dec
dec
mov
dec
dec
stos
divl
std
imul
cltd
jns
pop
add
push
out
cwtl
and
fnsave
mov
sub
mov
fadds
data16
rcrl
and
std
popf
imul
popf
mov
jns
inc
mov
xor
nop
bound
test
pop
ds
dec
stc
cmp
shll
xlat
lret
sbb
sbb
loopne
pop
cmp
out
xchg
xor
lea
and
call
or
ja
sbb
add
adc
jl
stos
std
inc
out
inc
xchg
aam
adc
or
jl
push
mov
popa
dec
inc
xchg
push
inc
loopne
inc
sarb
orl
cwtl
dec
fwait
sbb
and
fcomp
ja
bndstx
fisubs
jno
imul
push
mov
movsb
test
cli
test
mov
jle
push
xchg
cmp
scas
adc
outsl
loop
lods
outsb
imul
and
and
loop
pop
lods
jae
sub
dec
mov
xchg
cltd
bound
push
xchg
and
and
in
lcall
rcl
aaa
adc
push
cmp
or
jns
out
jp
shr
jmp
insb
mov
sub
cmp
inc
mov
aam
rcrb
data16
xor
sub
ds
inc
aad
mov
mov
lds
inc
fnstenv
mov
pop
pusha
test
or
push
outsb
pop
push
mov
push
push
ds
jbe
mov
scas
inc
jecxz
mov
adc
test
aad
pop
ret
outsb
sbb
fidivrs
add
int
ret
div
enter
add
xchg
movsb
mov
inc
les
pusha
dec
jb
adc
divl
sub
fldcw
insl
pop
xchg
push
sbb
lods
jecxz
loope
mov
push
push
ret
scas
xchg
les
lcall
ljmp
adc
dec
call
lahf
out
scas
xor
xor
mov
in
xchg
mov
mov
xor
es
dec
dec
add
fildll
lea
cmp
fsubl
dec
jae
mov
fcoml
mov
jmp
adc
pusha
or
cs
xchg
dec
mov
pop
pop
test
pusha
mov
mov
mov
sub
and
jo
xor
add
pop
sbb
mov
cmpsl
sub
sub
mov
inc
cltd
ljmp
xor
ss
jbe
push
inc
vsqrtsd
fs
and
xor
ja
push
fists
mov
aaa
mov
shr
add
in
adc
subl
repnz
ret
xchg
xchg
mov
cwtl
cli
cltd
jg
dec
inc
cmpsl
cmp
lret
fsubrs
pop
decb
cmc
das
fwait
sbb
or
divl
xchg
push
inc
add
in
out
cltd
es
ds
mov
and
and
push
stos
mov
inc
in
int3
int3
icebp
fisubl
mov
lahf
xchg
mov
pushf
add
icebp
insl
mov
cltd
sbb
xchg
push
mov
and
inc
call
mov
mov
pop
aad
pop
jmp
out
out
dec
sub
fstl
jo
or
mov
sbbl
mov
inc
pop
jle
std
mov
lods
add
notl
pushf
notb
or
aam
mov
sbb
sub
mov
mov
subl
jb
push
add
mov
cmc
inc
adc
scas
mov
popa
fsubrp
and
pop
xchg
xchg
lea
adc
mov
lret
sub
sub
or
cld
ljmp
repnz
hlt
xchg
jle
push
push
mov
add
xchg
and
mov
cmc
push
xchg
dec
inc
mov
xchg
push
dec
mov
add
int3
movsl
push
add
jge
jnp
and
out
cmp
movsl
data16
dec
cltd
lahf
stos
inc
out
lock
sub
scas
aaa
push
jecxz
outsb
and
adc
shrl
sarb
pop
inc
jg
mov
outsl
mov
mov
cmp
out
push
push
add
popf
push
lahf
cmp
cld
xor
shlb
adc
mov
add
dec
mov
add
push
test
or
mov
das
jb
popf
dec
cmpsb
sti
mov
mov
cmc
dec
fmuls
daa
mov
cmp
gs
push
fistl
sarl
shlb
dec
orb
or
xchg
das
inc
insb
jmp
adc
xlat
repnz
mov
sub
mov
pop
mov
mov
jp
sar
mov
adc
mov
lahf
mov
pop
sahf
mov
fwait
xchg
test
inc
les
mov
mov
cmpsb
and
out
ficoms
in
inc
mov
es
in
mov
adc
cmp
push
inc
loopne
das
cmp
push
mov
test
jg
aas
cmp
fcoml
and
ljmp
pop
bswap
pop
int3
pop
fs
xchg
xchg
push
mov
cld
lcall
mov
or
not
nop
aam
out
push
out
sarb
pop
lods
inc
push
sbb
inc
aam
ret
ror
cs
pop
add
call
sti
rcll
inc
jae
push
xchg
shll
push
test
cmpsl
outsb
xchg
fnstenv
dec
sub
movsb
xchg
dec
mov
arpl
and
and
pop
rorb
xchg
push
icebp
scas
int
je
sahf
push
icebp
dec
movsl
shll
adc
jns
mov
sub
jb
dec
mov
push
jns
or
mov
xchg
fcompl
pop
nop
fcoms
ljmp
out
js
cli
xchg
mov
repz
pop
jae
mov
sar
in
test
pop
mov
push
stc
fwait
daa
cwtl
mov
sbb
or
xchg
and
mov
xchg
mov
filds
ja
mov
stos
add
fwait
mov
sarl
negl
xchg
in
daa
jmp
xor
rolb
je
ror
jbe
addl
fwait
inc
aas
adcl
inc
push
mov
push
push
mov
std
sbb
mov
popf
popf
inc
test
dec
cli
ds
jecxz
es
pop
js
stos
sahf
push
sbb
or
push
inc
jecxz
fimuls
fidivrl
mov
out
repz
mov
in
mov
adc
roll
xlat
xor
cmp
push
sbb
jmp
push
lahf
aaa
mov
rorl
in
mov
fdivrl
aaa
lcall
mov
xor
or
movsb
xor
nop
sub
movsb
pop
adc
mov
shl
das
ljmp
xchg
pop
jp
and
xchg
mov
ror
out
in
sbb
dec
push
pop
jmp
push
sbb
je
mov
jnp
leave
jae
icebp
insl
test
mov
enter
rorl
aaa
mov
hlt
mov
xor
gs
dec
sbb
shlb
sub
sahf
loop,pn
sbb
imul
xchg
jo
mov
mov
sub
mov
enter
xchg
adc
sbb
mov
cmpsl
xchg
cmpsl
lahf
stos
aad
pop
mov
pop
xchg
movsl
cmp
rcrl
jecxz
mulb
push
lods
test
xor
lret
scas
mov
insl
adc
xchg
into
mov
mov
lods
arpl
pop
inc
jge
xchg
xlat
loopne
daa
test
adc
pop
push
into
push
add
repz
cmp
sub
repz
jp
dec
add
pop
fcompl
dec
and
push
pop
mov
loop
pop
arpl
out
push
cltd
mov
je
push
sub
sbb
inc
jnp
inc
stos
push
cmp
cmp
dec
mov
xchg
fwait
mov
int
ja
dec
es
stc
aam
jg
insl
jno
adc
repnz
in
inc
inc
push
inc
testl
ret
pop
aam
mov
imul
xchg
adc
gs
mov
cltd
fs
jecxz
stos
pop
in
jecxz
in
adc
imul
in
cmp
adc
sbb
pushl
dec
jne
xchg
cltd
cli
scas
popf
loop
pop
jae
pop
sub
add
mov
stos
out
and
sbb
out
dec
aaa
or
inc
mov
jbe
cmp
das
clc
sbb
adc
out
and
xchg
xor
lods
push
jmp
js
push
mov
inc
push
pop
in
pop
mov
arpl
jb
cmp
cwtl
out
mov
mov
add
sub
pop
jae
inc
inc
in
sub
ret
pop
cmp
add
xchg
out
xor
pop
pop
inc
shll
in
decl
out
test
mov
dec
push
or
shrb
adc
repnz
scas
mov
je
repnz
xchg
insl
pop
add
push
movsl
mov
imul
fwait
lea
sub
roll
mov
in
and
jbe
mov
lods
push
push
and
popf
ss
push
add
jge
outsl
out
loop
call
pop
mov
xchg
rol
das
sbb
rclb
ret
pushf
push
sub
pop
test
rcl
daa
rolb
repz
das
mov
cmc
xor
dec
jg
lret
arpl
mov
leave
pop
adc
add
mov
jge
data16
add
adc
cs
in
add
mov
out
dec
fistpl
adc
stos
cmp
sub
mov
sub
lea
mov
shll
fcompp
jmp
stos
pop
push
mov
mov
fsubl
int
mov
push
jge
fstl
loopne
push
popf
and
int3
push
mov
sbb
pop
rorl
mov
mov
test
jl
scas
pop
pop
gs
pop
inc
aaa
cmp
ror
test
dec
daa
mov
sub
adc
jb
stos
dec
xorl
inc
jb
lahf
lods
shlb
int3
int
inc
outsl
push
mov
fisubl
movsb
sbb
stos
pop
adc
mov
and
and
inc
dec
imul
stos
push
xchg
das
bnd
andb
stos
inc
pop
xchg
sarb
mov
movsb
insb
mov
out
cwtl
mov
addr16
mov
outsb
lcall
leave
cwtl
push
and
push
lods
sbb
jo
xchg
stos
hlt
xchg
inc
daa
cltd
push
jne
inc
popa
shl
dec
and
int
mov
push
loop
mov
xor
test
mov
jo
je
cmp
mov
pop
aam
cmp
pusha
sub
imul
dec
sbb
push
or
mov
lea
jp
mov
push
push
insl
cmp
inc
xor
mov
shrb
shll
movsb
test
mov
and
lea
iret
imul
xchg
cmpsb
out
jge
movsl
pop
aam
daa
dec
xor
lret
dec
sub
sub
in
adc
push
gs
outsl
pop
mov
in
fsubp
cmp
inc
dec
nop
jmp
xor
mov
mov
dec
sahf
scas
inc
xchg
dec
adc
sti
clts
mov
sbb
and
sbb
mov
push
jg
dec
in
jecxz
jb
pop
lret
xchg
loop
jecxz
jae
pop
lods
sahf
movsl
stos
inc
popa
decl
fstl
mov
das
jg
and
imul
add
iret
jo
jbe
andb
pop
daa
adc
clc
inc
bound
sbb
fisubrs
scas
addr16
insl
aam
repnz
mov
daa
pop
mov
test
pushf
push
sub
jae
jae
imul
aaa
sbb
movsl
xchg
sub
and
das
pop
imul
xchg
push
mov
push
in
cmpsl
pushf
cmp
cmp
mov
out
jo,pt
add
lahf
and
fadds
dec
sti
popf
ret
xchg
nop
inc
jle
xor
add
sbb
popa
adc
js
scas
jne
pop
add
mov
sar
lret
cmp
push
adc
mov
ret
enter
enter
insl
sahf
push
lcall
mov
xchg
in
cmp
fimull
cmc
inc
cltd
sub
mov
std
cs
xor
pop
pop
mov
mov
sbb
stos
mov
jp
push
mov
cwtl
leave
imul
sbb
js
mov
xor
popa
mov
mov
sub
mov
mov
fists
js
push
fadds
mov
inc
repnz
or
and
push
pop
mov
outsl
pop
lahf
and
pop
clc
pusha
add
aad
sbb
fisubl
or
dec
cmc
cmpsb
mov
xor
ja
sti
aad
mov
push
sub
xlat
xchg
call
pop
xor
loope
push
mov
imul
aas
mov
movsl
imul
call
stos
ficompl
sbb
test
lds
add
sub
test
or
fldt
xchg
shlb
pop
jne
int3
insb
push
inc
add
mov
arpl
repnz
int
cs
dec
cmc
xchg
push
xchg
xchg
mov
mov
sbb
outsb
cmpsb
jae
je
pusha
push
js
jg
mov
mov
stos
sbb
pop
mov
and
out
fstl
divb
dec
push
in
mov
jnp
mov
or
push
out
pop
js
mov
inc
out
add
pop
rorl
sub
popa
idiv
iret
xlat
fstpt
mov
ss
gs
ret
pusha
or
aaa
imul
cltd
in
test
rcrb
jl
stos
loop
and
es
jns
adcb
icebp
jp
dec
fwait
mov
adc
sbb
mov
dec
inc
outsl
xor
jmp
aaa
xchg
xlat
jo
and
mov
or
aas
rol
out
call
bound
push
stc
push
faddl
inc
imul
xchg
movsb
aaa
cmp
fistpll
cs
and
out
icebp
cmp
xchg
or
lock
mov
lcall
mov
dec
mov
mov
in
push
jle
loopne
push
sahf
cmc
cmp
cltd
xor
pusha
sbb
and
mov
pop
xchg
push
dec
enter
loop
popf
adc
lret
in
fidivs
or
lret
nop
in
sbb
cld
stos
mov
lds
and
mov
imul
or
jmp
sub
fnsaves
dec
xlat
jecxz
push
mov
call
jp
sub
dec
pushf
testb
sub
mov
mov
rolb
cmp
data16
neg
xor
mov
cmc
jl
repz
icebp
cmpsb
pop
pusha
mov
sbb
mov
adc
insb
in
xchg
and
fwait
roll
lahf
push
xchg
fimull
mov
and
movsl
xor
push
test
fistpl
adc
sbb
jle
cmp
shll
stos
push
jecxz
mov
fdivr
in
push
sti
out
lods
in
js
and
cmp
mov
mov
cmp
sub
mov
push
mov
cli
dec
imul
in
loope
and
jl
add
pop
loope
mov
mov
in
push
mov
in
cmpsb
adc
sbb
loop
stc
sti
loop
mov
in
js
xchg
jecxz
xchg
pushf
inc
push
gs
insl
mov
in
pop
lcall
jbe
mov
divl
enter
je
push
pop
lock
push
outsb
add
mov
and
adcb
jmp
jne
ffreep
jle
and
mov
mov
inc
lahf
out
sbb
mov
sub
dec
jg
mov
adc
xchg
shl
lock
lds
pop
adcl
mov
mov
dec
addr16
adc
arpl
jnp
push
scas
jl
xor
hlt
xor
addr16
or
cmpsb
sbb
xor
cmp
cmp
cltd
aas
inc
jns
inc
nop
adc
pop
pusha
cs
pop
int
mov
jae
adc
movsl
dec
imul
cmp
cmp
shl
jmp
movsb
test
push
fnsetpm(287
mov
js
cmpb
sub
jp
add
cmovs
mov
stos
xor
lock
mov
xchg
addr16
xchg
adc
insl
int
imul
das
dec
popf
xor
inc
sbb
shrl
jg
push
add
inc
cmp
repz
test
mov
stos
leave
fcmovnb
cmpsb
add
imul
lret
popa
cmpsb
rorl
leave
pop
icebp
xor
or
imul
outsb
mov
or
inc
jge
icebp
cmp
push
out
pop
in
jmp
xorl
das
mov
cli
enter
cmp
aaa
movsb
addr16
dec
negb
fists
aad
or
mov
aam
mov
inc
cmp
in
pop
fs
pop
dec
mov
pop
adc
adc
rol
xor
out
inc
jbe
mov
scas
mov
subl
lret
mov
push
pop
push
icebp
pop
out
ss
jns
mov
mov
inc
incl
fsts
ss
sub
jle
mov
insb
mov
push
add
xor
sbb
mov
cmp
ja
fidivrs
stos
jnp
loop
mov
cmp
test
and
fadd
or
xchg
fidivs
rcrl
push
int
cmp
inc
push
hlt
and
jp
pop
pop
clc
fisubl
les
fistl
into
into
out
push
testl
sbb
fidivrs
or
xchg
ret
xchg
ja
inc
dec
shlb
push
lds
ljmp
dec
xor
lret
cmp
pop
adc
mov
popf
scas
dec
out
jmp
and
jo
push
stos
cmpsb
pushf
sub
sub
gs
cmc
imul
divl
lret
dec
push
push
shll
out
jae
push
inc
stos
inc
movsb
cmc
jae
iret
mov
and
pop
inc
mov
sub
cmp
imull
mov
adc
inc
lcall
dec
xor
mov
lea
jns
inc
mov
xor
jge
insl
mov
cld
in
mov
inc
pop
nop
jo
pop
lods
sti
iret
inc
jmp
sub
xchg
stos
mov
ljmp
inc
hlt
out
sbb
test
pop
insl
jns
cmp
fwait
dec
cmpb
movsl
dec
cmp
in
icebp
sti
icebp
dec
nop
xchg
mov
push
cmp
pop
jl
aam
ss
xchg
fidivs
int
nop
cmp
mov
add
push
add
xor
xchg
or
sar
add
adc
lret
dec
push
fwait
adc
push
xchg
jnp
pop
enter
inc
test
cmp
les
or
idivb
loopne
xchg
adc
out
and
jmp
xor
mov
inc
ss
sbb
aaa
sub
lcall
loop
bound
fwait
and
decb
in
mov
in
push
or
sarb
jmp
and
out
mov
sbb
or
fcoml
insb
out
push
xchg
xor
add
mov
jns
fcmovne
or
dec
sbb
mov
cmc
fcmovbe
and
push
notb
cld
mov
sub
jmp
shr
test
push
shll
jmp
scas
jae
mov
adc
dec
dec
cmpsb
push
lret
loop
imull
push
xchg
leave
pop
das
jg
insb
aad
imul
roll
sahf
cmp
int
dec
bound
test
xchg
dec
cmp
imul
into
ret
mov
lock
mov
inc
jb
stos
repz
or
cltd
das
xor
movsl
ljmp
movsb
cs
cmp
lods
sahf
das
ret
mov
lret
test
ja
hlt
mov
loop
mov
mov
ds
fmull
dec
mov
fcmovne
aam
sub
mov
mulb
fldz
xchg
ret
ffreep
in
je
imull
mov
or
sarl
movsb
lahf
dec
mov
cmp
xor
and
pop
push
cwtd
xor
xchg
dec
sbb
lcall
mov
aam
fwait
or
cmp
hlt
ret
or
mov
rolb
adc
cmp
and
movsb
jo
cltd
ss
insl
dec
rep
jns
pop
add
sub
out
xlat
divb
or
ljmp
movsl
orb
stc
add
xor
loopne
movsl
lods
pop
xchg
push
and
in
xor
mov
jbe
aam
xor
add
out
xor
out
or
pushf
mov
scas
sbb
push
lret
jle
repz
arpl
or
cltd
or
repz
in
outsb
test
cmpsl
pop
aam
fcomps
scas
mov
lea
shll
stc
rcll
stos
inc
dec
into
xor
lahf
jno
lods
inc
mov
mov
mov
mov
pushf
pop
bound
cmp
jns
je
cmp
mov
int3
cld
inc
mov
rcrb
lret
movsb
lret
in
shrb
cwtl
loopne
push
add
xor
iret
cmpsb
sub
enter
repnz
push
ja
jae
mov
loope
in
mov
lods
xchg
jae
testb
and
mov
lods
cld
je
push
repnz
movsb
js
sbb
das
aas
cmpsl
ret
in
xchg
adc
or
inc
cmpsl
test
sahf
and
fsubs
push
ljmp
cmp
ret
pop
push
xchg
outsl
mov
js
cmp
lret
rclb
js
pop
out
lret
cmp
push
jmp
fstps
in
push
ficompl
out
xchg
inc
enter
pop
or
int
pushf
ficompl
cwtl
jnp
fucomi
xor
add
ds
in
inc
cmp
and
adc
cmp
inc
pop
sub
adc
push
mov
daa
or
shlb
xchg
push
adc
scas
xchg
clc
cltd
push
shll
sbb
jo
push
jecxz
xlat
pop
jb
xor
lahf
xchg
adc
pop
adc
sbb
or
imul
pop
scas
fsubs
aam
jno
es
ret
sub
or
lea
dec
inc
pusha
scas
lret
stos
lret
add
mov
aad
cli
rorl
mov
test
mov
xchg
test
es
imul
cmp
ret
mov
jecxz
cmp
repz
push
xor
xchg
movsl
fldcw
and
pushf
pushf
imul
push
jle
push
cld
mov
mov
add
es
cmp
hlt
sbb
rcl
ret
out
xor
enter
gs
insl
repz
insb
and
jg
addr16
in
and
loopne
push
push
inc
hlt
daa
inc
pusha
pusha
leave
xor
push
cmc
fiadds
lret
fst
dec
mov
shlb
lods
cmp
ret
andb
stos
inc
sbb
imul
adc
pusha
outsb
mov
cltd
jb
loop
dec
pop
ret
and
testl
push
xor
stc
addr16
mov
test
xchg
mov
xchg
fnstsw
mov
mov
inc
push
dec
dec
fs
es
dec
imul
loopne
inc
sub
imul
inc
aad
imul
xchg
lods
sub
fcomps
add
aaa
cmp
aam
xchg
push
cmc
outsl
aad
and
lods
pop
div
xchg
xlat
test
push
int
dec
sti
sbb
lock
dec
scas
jle
movsl
sub
daa
loopne
mov
in
adc
loopne
inc
loopne
push
mov
lds
subl
inc
dec
push
mov
inc
cmp
add
mov
pop
int3
lds
and
push
daa
push
push
clc
xor
jnp
jns
stos
out
xor
xor
test
enter
inc
rolb
pop
jne
push
movsl
lret
cmpsl
out
negl
push
push
xchg
sbb
mov
jno
gs
mov
mov
cmpb
inc
insl
jno
out
fwait
dec
push
mov
lods
jo
cli
in
cmp
pop
cmp
aas
and
and
fistpl
cmp
cmp
xlat
mov
and
cwtl
pop
imul
or
cmp
das
and
in
inc
sbb
cltd
mov
or
shl
xchg
xchg
sub
out
mov
lods
outsl
sahf
xchg
cli
sbb
push
xchg
popa
jne
cmpsl
ja
stos
xchg
jns
sahf
xchg
pop
sbb
lock
fwait
mov
cmpsb
lret
pop
pop
lahf
xchg
test
cmpsl
in
jno
jmp
cmp
inc
or
je
mov
add
mov
lret
xbegin
cmp
adc
bound
sub
lock
mov
mov
and
clc
fidivrl
adc
mov
repz
sbb
inc
out
add
stc
jae
push
mov
mov
mov
cltd
movsb
imul
aas
scas
fistpll
cmpsl
mov
and
loope
mov
push
fidivrl
adc
mov
dec
lret
xorb
jge
pop
imul
inc
xchg
js
addr16
sbbl
add
lods
adc
xchg
fnstsw
daa
popf
mov
mov
leave
arpl
mov
sbb
jmp
push
jp
inc
rclb
or
stc
arpl
xor
or
inc
ffree
and
imul
test
fs
addr16
int
mov
or
dec
les
xchg
adc
push
cwtl
pop
xchg
cmp
aam
out
or
and
faddl
popa
repz
dec
lods
pop
pop
adc
inc
gs
push
dec
les
movsl
inc
mov
add
int
outsl
gs
rcl
and
xor
lret
shrb
insl
xor
cmpb
sbb
push
hlt
xor
divl
dec
jae
repz
mov
jbe
outsl
jbe
jmp
xchg
cmp
mov
mov
cli
mov
push
in
int
mov
xchg
and
and
pusha
out
mov
sahf
cld
jmp
and
jecxz
shrb
outsl
xchg
test
cmp
pusha
ljmp
imul
testb
sbb
rorl
inc
mov
push
mov
mov
sahf
outsl
pop
arpl
andl
stc
lea
pop
out
repnz
and
sbb
fwait
in
mov
cmp
jbe
shl
imul
mov
call
out
loope
cmp
mov
jne
add
or
jne
xor
push
imul
test
or
jno
out
daa
add
mov
inc
add
xor
xchg
rclb
int3
and
mov
jns
adc
test
cli
lods
jnp
dec
pushf
pop
cmpsb
xor
daa
fsubp
pop
and
pop
adc
mov
pop
sub
shrl
pop
insb
aaa
mov
cmp
lock
adc
cmp
jle
outsb
ret
repnz
cwtl
lret
je
jge
cli
mov
mov
dec
mov
push
or
mov
shrb
pop
lret
ret
xchg
aam
lods
sub
clc
out
xchg
push
add
orl
aas
dec
or
cmp
and
in
mov
mov
dec
sub
inc
sbb
inc
mov
loope
adc
daa
idivl
dec
divl
jle
pop
je
ret
ds
mov
in
out
add
fstl
int3
jns
es
repnz
mov
adc
hlt
imul
and
sbbl
orb
dec
sub
test
sub
xchg
fistpll
sbb
sbb
xchg
sahf
aaa
call
sbb
add
popa
xchg
fisubrl
int
lahf
aas
dec
jg
jne
xchg
sbb
mov
jbe
mov
adc
rcl
loope
outsb
xor
aas
add
add
cmpsl
adc
pop
add
in
xchg
push
and
push
in
jo
lods
leave
enter
xlat
shll
into
or
mov
mov
inc
push
leave
mov
jns
test
push
scas
enter
cmp
outsl
xor
xchg
lret
cmp
popf
push
xchg
jge
xchg
out
xchg
shll
xor
cmp
inc
jo
cwtl
add
movsb
xchg
popl
outsl
imul
adc
lea
and
fwait
stos
sub
das
mov
leave
pop
addl
push
jns
xor
test
fwait
dec
jecxz
bts
in
push
xorl
sbb
fsubrl
divl
outsl
enter
std
int
imul
loopne
mov
or
sahf
adc
ret
dec
orb
pop
nop
in
inc
sbb
ss
or
int
push
dec
jno
cltd
mov
sbbb
push
inc
fwait
pushf
lahf
arpl
sbb
mov
and
sbb
dec
repz
daa
jo
inc
or
fisubl
pop
in
cmp
inc
lock
pop
js
test
in
xchg
jno
sarl
sti
idivl
inc
mov
into
clc
sar
xchg
xchg
arpl
mov
lock
mov
shrl
sub
sbb
popf
mov
leave
enter
mov
out
in
mov
icebp
rcl
add
sub
push
inc
les
stos
and
xor
js
sub
dec
inc
pusha
fcmovb
mov
push
pop
pop
ljmp
sub
xchg
stc
adc
popf
inc
mov
fstpt
loopne
sbb
aaa
mov
jg
les
cltd
loopne
cmpb
jnp
cltd
xchg
or
mov
aas
pop
aas
sub
out
cmp
out
cmp
jno
pop
les
adc
repz
mov
push
into
js
je
ret
iret
push
cmp
cmc
enter
pop
adc
ja
notb
iret
push
ss
jnp
lods
xchg
inc
sub
and
adc
dec
mov
call
aad
sbb
inc
and
adcb
sbb
scas
adc
ja
xchg
rclb
cmpsl
dec
xchg
dec
dec
xchg
mov
and
stos
adc
sub
mov
mov
shr
sbb
in
mov
inc
subl
iret
inc
insl
dec
into
ljmp
cmp
cmpsl
ret
mov
orl
jp
sub
add
inc
and
or
fimuls
loop
shl
xchg
push
inc
add
xchg
repz
in
push
out
push
adc
sbb
in
in
fwait
stos
jne
jl
movsl
dec
adc
mov
mov
or
mov
lea
addb
sub
cmpsl
jg
cmpsb
mov
and
cmpsl
mov
outsb
in
rol
repz
or
outsb
jne
mov
jmp
push
std
addr16
clc
dec
ret
popa
sbb
mov
dec
fs
cmpsl
dec
dec
mov
adc
mov
imul
add
jno
ja
adcl
movsl
push
or
cmc
fdivs
and
mov
push
jae
inc
decb
fwait
add
out
inc
repz
in
mov
pop
js
mov
and
add
outsb
into
and
inc
and
cmp
or
xor
cmp
ja
jp
jnp
sti
lea
pop
dec
jmp
out
adc
ret
out
pop
in
scas
rorb
push
pop
mov
mov
cltd
sbb
xchg
lock
dec
or
push
xchg
js
in
fmul
adc
scas
and
fistpll
dec
mov
jp
outsl
and
add
lcall
jbe
out
xchg
mov
pop
mov
inc
dec
and
fs
mov
je
repz
sahf
and
mov
lea
push
cmpsl
fisubs
adcb
lahf
or
adc
and
jne
out
or
imull
ror
into
lahf
inc
xorb
jne
aad
cltd
movsl
lcall
pop
xor
orb
add
xchg
cmpsb
cmp
xorb
pop
push
leave
loopne
sti
sbb
mov
hlt
js
jmp
push
push
imul
repz
mov
ret
dec
ljmp
pop
jbe
cmp
and
inc
data16
lea
icebp
push
inc
adc
or
adc
mov
push
jnp
ffreep
test
mov
lock
mov
scas
adc
push
pushf
xor
and
adc
push
into
xor
fdivl
sub
inc
test
jge
test
cmp
pop
adc
rcll
movsl
and
pusha
xchg
push
cwtl
mov
mov
push
mov
mov
test
sub
mov
shll
outsl
dec
orb
dec
lret
mov
int3
fcoms
in
mov
fdivs
decb
push
dec
dec
lret
out
mov
pop
inc
push
or
mov
push
jno
and
jb
int
mov
inc
push
add
aaa
cmp
shrl
repz
mov
cmp
in
cmp
ror
popf
or
sbbl
sbb
mov
fcomi
loopne
inc
inc
xchg
and
mov
sub
test
test
sub
mov
lahf
sbb
cmp
adc
leave
cmp
into
jnp
and
mov
je
mov
lods
jp
ret
test
aad
fs
mov
pop
stc
in
xor
adc
je
rol
or
inc
mov
out
fstl
pop
shlb
clc
xor
aaa
pop
scas
mov
ret
mulb
or
push
in
mov
adc
popa
xor
scas
mov
sub
sub
mov
fldenv
movsl
sub
xchg
idiv
add
xor
xchg
pusha
outsb
fbld
jo
pextrw
hlt
jmp
mov
and
cmp
add
or
outsb
jne
pop
adc
jg
scas
out
out
sbb
sub
cmpsl
jl
sbb
nop
sti
iret
aam
bound
ficompl
or
jl
push
xor
loope
jno
sarl
movsb
outsl
sti
mov
ljmp
push
sti
sub
out
jg
xor
test
ss
pop
das
lds
xorb
add
mov
mov
adc
sbb
jbe
lods
addb
sbb
ljmp
into
pop
mov
arpl
pop
stos
mov
mov
pop
js
push
mov
subl
out
in
push
push
push
xchg
popa
inc
mov
lods
cmp
jle
xor
push
xchg
rcr
push
enter
sub
inc
into
xchg
repnz
icebp
call
es
or
scas
sbb
mov
in
cwtl
mov
clc
mov
push
mov
fisubl
sbb
daa
es
pop
mov
jns
in
lods
mov
pop
hlt
stos
imul
fdivrl
cmpsl
sbb
push
js
jbe
cltd
adc
or
jne
ret
lock
add
fisttpl
push
and
inc
or
jns
lock
mov
popf
sti
aam
cmp
xor
fistpll
jb
add
test
mov
fbstp
aaa
xchg
bound
jg
out
inc
nop
fwait
out
xchg
roll
add
inc
dec
dec
jnp
xchg
in
movsl
cmp
ja
ja
dec
cmpsb
cmp
ss
out
inc
lock
lods
add
ret
and
xor
pop
xor
xor
xchg
or
pusha
fbstp
add
arpl
add
mov
dec
scas
xlat
cmp
enter
lds
mov
std
int3
stos
es
mov
je
push
mov
es
push
jns
nop
cwtl
mov
aam
stos
sti
mov
bound
mov
mov
les
mov
ljmp
gs
push
pop
movsl
add
sbb
orl
dec
imul
jecxz
fwait
cmc
stos
pop
mov
call
aaa
mov
jp
and
stc
mov
pop
xchg
cmp
popa
popa
fwait
mov
outsl
dec
loope
xchg
xor
cmpsl
pop
pop
push
and
or
outsl
fsts
aaa
aas
xchg
fisubl
ret
outsb
xchg
sbb
shlb
out
scas
loopne
stos
movsb
adcl
loop
mov
xor
into
sarl
mov
loop
pop
push
pop
push
test
push
pop
add
xchg
mov
push
or
xor
xchg
cmovs
xor
mov
sbb
rcll
push
test
lahf
or
mov
xchg
int3
push
dec
push
loope
pop
lahf
in
jno
xor
dec
sbbb
jae
mov
mov
fisubs
sub
cs
pop
pushf
sub
sub
cmp
jno
fidivs
xchg
scas
aam
jae
subl
adcb
cwtl
aas
in
cmp
and
aad
xchg
pop
lret
sbb
mov
xchg
leave
mov
mov
mov
fs
icebp
cmp
cmp
jne
movsl
cltd
cmp
out
add
ds
iretw
adc
jge
fcomip
cmp
mov
dec
loopne
ja
fistpll
scas
jge
lods
push
push
nop
dec
imul
bound
cwtl
add
ret
xor
stc
cwtl
sub
pop
jae
dec
push
lds
inc
adc
popf
rcrl
popaw
mov
in
test
or
ds
dec
mov
pop
ljmp
add
enter
js
sahf
mov
mov
jnp
les
pop
das
inc
jg
sub
xchg
shl
out
pop
arpl
sbb
and
add
cwtl
fdivs
or
sub
dec
lahf
push
inc
sbb
dec
xchg
sbb
fcom
ljmp
cli
and
xchg
jge
sbbb
ss
loopne
out
add
test
cli
or
call
xor
fnstcw
mov
cmp
bswap
mov
dec
add
fwait
or
mov
pop
cmp
hlt
mov
lods
xor
jmp
fnstsw
clc
fsts
and
inc
pop
outsb
pop
sub
jne
xor
mov
push
or
loopne
xor
je
js
addr16
xor
jbe
dec
cld
push
cmp
pop
xor
lahf
and
mov
dec
lret
iret
jle
je
jnp
push
dec
cli
dec
aad
push
aam
sbb
gs
movsb
insl
jb
ja
xor
lahf
pop
mov
scas
arpl
push
xor
xorl
lea
add
pop
jae
movsb
gs
and
int
addr16
icebp
and
push
lea
mov
mov
aas
jl,pt
mov
mov
pop
xchg
cmp
xor
aaa
in
or
test
jo
fwait
and
mov
fstpt
aas
dec
dec
test
aaa
sbb
out
xchg
mov
mull
popf
push
das
pop
and
xchg
test
fisubrs
mov
stc
sub
mov
imul
fildll
add
lds
out
mov
divl
lods
xor
xchg
mov
mov
rcr
xchg
xor
sub
idiv
mov
push
and
xchg
into
push
daa
pop
out
xchg
clc
ret
ficomps
cli
xor
add
push
lods
jle
test
call
or
cwtl
jmp
lods
and
sub
sub
outsb
push
jecxz
xchg
out
xchg
out
push
mov
mov
push
jge
mov
test
leave
in
xchg
jne
sub
sbb
dec
aad
and
icebp
adc
adc
stc
jge
cld
cmp
pop
or
ljmp
pop
and
sub
hlt
cmpsb
insl
and
ja
sub
sub
jbe
mov
loop
addr16
jp
nop
xor
push
repz
add
sub
jl
cmpsb
data16
pop
enter
inc
or
adc
xlat
ds
push
mov
jge
xchg
aam
lea
cmp
pop
sub
ret
cmp
push
rclb
mov
and
mov
push
aam
scas
xor
cld
lcall
push
lea
sub
sbb
inc
mov
push
push
pop
push
push
sahf
inc
cmpl
jno,pt
pop
jo
pushf
push
mov
xor
sub
cmp
dec
movl
mov
mov
ljmp
test
inc
fldt
sub
stos
mov
inc
and
dec
push
fisubs
pop
jae
and
mov
sub
inc
inc
ds
pop
ds
mov
out
je
es
gs
push
imul
jge
mov
or
loope
out
fwait
int3
repz
xchg
push
mov
xchg
inc
xchg
enter
out
jnp
sub
cmp
dec
xchg
mov
insb
pop
cmc
imul
xchg
sub
int
xchg
pop
mov
xlat
mov
sarb
lret
cmpsl
nop
fmuls
repnz
xchg
sarb
fwait
out
out
lods
pop
clc
xchg
insl
xor
stos
sbb
mov
sub
xchg
jnp
es
paddusw
insl
rorb
push
fwait
pop
int
or
jecxz,pt
jecxz
popf
out
mov
aad
and
cmp
mov
jne
stos
dec
lret
sar
or
popf
pop
adc
jns
ud2
mov
les
loope
icebp
lret
aam
mov
fiadds
inc
and
xchg
subb
jae
xor
nop
es
jmp
pop
popa
js
or
jg
mov
push
sbbl
inc
das
mov
arpl
sub
adc
mov
mov
cwtl
cmp
cmp
pop
movsb
add
sahf
jns
adc
clc
inc
pop
dec
and
cld
popf
inc
test
pushf
movsl
jmp
fs
jnp
mov
add
xchg
pop
dec
and
in
push
push
xchg
call
jb
inc
xor
cmpsl
int3
call
mov
in
sub
test
imul
cli
cli
push
in
inc
cmp
inc
sub
adc
scas
stos
fildl
lret
or
popf
pop
jle
scas
pop
xor
mov
jecxz
and
sub
pusha
mov
mov
addr16
pop
cmc
push
leave
pop
fwait
xor
mov
mov
xor
jbe
mov
mov
add
lcall
mov
iret
or
scas
rorl
ljmp
add
jg
push
mov
je
movsb
pop
fnsave
and
arpl
idivb
adc
adc
sub
mov
jb
cmp
gs
enter
mov
mov
mov
es
xchg
fsubl
imul
sub
mov
xor
je
mov
jae
idivb
add
sub
lods
mov
push
xchg
sbb
sub
xor
dec
mov
mov
gs
les
int
rorl
in
dec
lcall
repnz
jb
xchg
rorb
push
and
lahf
mov
add
xchg
push
or
int3
mov
lret
je
inc
into
and
push
movsl
or
pop
out
mov
push
nop
and
pop
mov
js
aad
dec
mov
fadd
lahf
mov
jo
test
lea
cmp
fld
adc
jmp
std
insl
orl
mov
sarb
out
pop
or
adc
ds
jnp
mov
dec
sarb
mov
bound
pop
lock
pop
cmp
xor
mov
xchg
movsb
call
xor
mov
pop
imul
mov
mov
pop
nop
repnz
or
rolb
fidivrs
jg
mov
arpl
pusha
imul
and
lods
xlat
int
pop
mov
ss
pop
push
xchg
pusha
imul
movhlps
imul
stos
lock
or
push
test
mov
call
and
lods
hlt
dec
cmc
iret
rclb
sbbb
inc
adcb
sti
push
jns
popf
nop
add
repz
xor
lret
mov
cli
orl
movsl
fistpll
mov
ror
out
cmp
js
shll
les
mov
add
add
jmp
push
ror
pop
lods
into
mov
decb
cmpsl
inc
arpl
xchg
or
pop
jne
mov
sub
fcomp
sbb
imul
mov
cwtl
addr16
je
cmp
bound
lods
andl
mov
cmp
dec
int
outsl
sbb
ss
fistpl
xor
pop
sbb
push
xor
cmp
pop
sarl
push
xchg
push
cld
pop
ds
pop
imul
or
sbb
mov
nop
rolb
je
mov
push
ss
jecxz
cmp
inc
adc
cmpsl
jno,pn
test
jne
sub
cmpsl
jne
test
fbstp
cmp
lcall
and
pop
aas
adc
mov
call
xchg
and
cld
xor
push
pop
add
and
out
sbb
push
dec
jle
push
xor
in
jmp
fidivs
ja
fnstcw
loope
dec
cmpsb
lcall
out
sub
mov
rcll
push
sub
mov
jo
ret
jbe
std
das
xchg
movsl
pop
sub
xchg
lret
gs
mov
xchg
inc
lea
dec
sub
push
enter
cmp
fsubr
scas
sarb
insb
pop
jg
cli
sbb
lods
lods
cld
cld
cmp
sbb
mov
mov
or
ret
mul
sbb
push
movb
pop
jo
lods
fs
aas
das
sahf
mov
lock
dec
fmuls
sub
lods
push
out
call
bound
push
in
daa
lret
arpl
subb
pop
xor
pop
hlt
xchg
dec
out
sbb
sub
and
and
inc
mov
push
inc
icebp
cld
sbb
cmc
push
fadd
xchg
test
mul
inc
cld
inc
and
loop
nop
pop
adc
out
adc
js
pusha
mov
inc
add
in
or
loop
mov
in
sbbl
mov
pushf
adc
mov
cmp
cmp
rolb
loope
hlt
dec
or
mov
ss
rcrb
or
xchg
or
push
cld
cmc
inc
xchg
loop
stc
mov
hlt
and
hlt
frstor
jb
sub
pusha
jge
push
jp
int
add
pop
dec
les
int
dec
inc
or
push
dec
xchg
sub
stc
pop
push
rcrl
xchg
lds
dec
push
push
mov
jnp
stos
in
ljmp
pop
push
ficoms
das
sbb
lea
add
ja
loop
andb
jge
jbe
ljmp
inc
inc
popf
popf
addr16
sbb
scas
js
push
popa
lea
orl
fsubrs
push
pop
insb
lds
adc
jb
mov
int
pop
add
xor
popf
adc
xlat
mov
adc
xchg
in
sti
pop
sub
sub
loope
sbb
xor
in
loopne
outsl
mov
xchg
das
repnz
nop
pushf
dec
pop
rclb
cmp
jg
test
sub
sbb
push
repz
cmp
xor
adc
enter
mov
sahf
mov
jl
stos
cmp
cmpsb
add
xor
mov
inc
jbe
dec
xchg
xchg
cli
cli
inc
fs
xchg
inc
cmpsl
lock
out
gs
js
rorb
adcb
pop
xchg
testl
in
xchg
mov
clc
movsb
add
je
push
loop
lcall
cli
je
xchg
jbe
xchg
clc
pop
mov
rorb
scas
push
xlat
icebp
cli
test
testl
xor
lea
jl
outsl
stos
or
out
aas
mov
sub
push
xchg
push
cmp
lret
into
lock
bound
loop
and
xchg
ja
push
lret
testl
sahf
out
aaa
mov
inc
push
xchg
jg
fs
fidivl
cs
outsl
movsb
xor
out
push
or
push
roll
repnz
or
or
pop
int
add
repz
out
adc
cmp
scas
loopne
and
sbb
mov
mov
pop
and
lret
int3
sbb
push
shrl
pop
andl
mov
pop
xor
and
mov
lea
lods
mov
decb
hlt
xchg
out
out
cli
mov
fcoms
mov
data16
enter
sti
aas
xchg
in
xor
pop
jecxz
stc
bound
mov
and
dec
fstpl
lods
mov
mov
pop
stos
add
aaa
xchg
xchg
mov
addr16
jecxz
jo
jp
pop
loopne
and
dec
mov
cpuid
xchg
mov
dec
test
aad
scas
or
dec
movsl
test
sti
mov
in
sub
push
mov
push
add
pop
cli
mov
pop
xchg
mov
out
lahf
sbb
inc
dec
scas
adc
and
addl
xor
sbb
test
add
adc
cld
sbb
push
push
or
sbb
add
dec
sbb
testl
sub
and
and
jae
ds
loope
jae
push
aaa
sbb
inc
pop
sbb
movsl
push
in
stos
dec
sub
push
sbb
nop
notb
lea
int
mov
gs
rol
or
es
je
mov
or
xchg
ljmp
repz
mov
adc
aad
jnp
dec
movsl
in
shl
adc
sbb
dec
xor
stos
xor
xor
cmp
adc
mov
rcrl
mov
outsb
push
sub
jnp
dec
mov
imul
xchg
icebp
iret
adc
cltd
push
imul
idivb
push
aas
xchg
adc
stos
daa
pop
push
push
les
idivb
and
add
notb
mov
out
lods
sbb
pop
outsb
cld
push
mov
test
out
lcall
add
insb
fistl
popa
sub
jg
fimuls
popa
stc
popa
outsl
mov
mov
and
inc
add
data16
mov
mov
push
jle
dec
xor
mov
test
rorl
xchg
jne
rcrl
decl
sbbb
hlt
sahf
mov
dec
stos
std
lock
cwtl
das
sbb
int
cmp
mov
imul
les
mov
adc
add
mov
out
jle
lret
mov
push
lds
shrl
popf
lods
lds
lods
insl
mov
inc
push
test
add
xchg
shlb
sti
dec
push
pusha
popf
jg
outsl
inc
pop
pushf
cmpsl
pop
mov
pop
ljmp
push
addr16
fcomps
sub
or
mov
sub
cltd
ja
outsb
nop
rolb
nop
repz
pop
dec
fcmovb
clc
mov
sahf
cmc
dec
outsl
xchg
ret
out
or
jle
mov
subb
shl
in
and
incb
mov
je
xlat
and
mov
fstps
outsb
xchg
xor
ja
cmpsl
fsubp
add
dec
jp
push
mov
xlat
push
sbb
pop
fstps
outsb
mov
cmp
inc
mov
scas
test
xor
insb
andl
mov
imul
rcrb
clc
mov
mov
mov
mov
mov
stc
jno
xchg
dec
and
sub
lahf
shll
jne
jl
mov
lret
movsl
inc
add
out
mov
ret
test
jne
in
mov
das
push
dec
clc
push
inc
inc
pusha
dec
mov
icebp
pop
das
mov
pop
mov
and
sub
or
faddl
test
xor
decl
test
gs
jecxz
jns
mov
cmp
mov
sub
scas
sahf
maxps
add
fwait
scas
cmpsb
mov
xor
xor
xor
insl
mov
fs
cltd
clc
xchg
popa
mov
or
movsl
movsl
test
frstor
add
out
pop
rcll
inc
jmp
sbb
int3
in
or
push
into
adc
sub
mov
and
mov
adc
enter
divl
iret
imul
sbb
xchg
pop
mov
jl
lcall
jno
inc
icebp
add
and
xchg
jle
movsl
inc
xchg
fldt
push
test
fstl
mov
sbb
push
mov
pop
imul
dec
lahf
mov
in
test
cli
lret
pop
jns
lds
fs
mov
in
ret
outsl
lret
lret
int3
ret
stc
cmpsb
ret
jl
cld
leave
adc
mov
adc
outsl
and
sub
clc
mov
mov
lahf
imul
add
fs
sbb
dec
movsb
jno
jb
mov
adc
jp
adc
pop
fcomps
pop
mov
sahf
daa
call
xor
enter
pusha
adc
sbb
dec
rcll
ds
push
and
xchg
sub
cmp
aad
inc
leave
test
in
push
movsb
adc
test
dec
cmc
clc
mov
xorl
xchg
jecxz
outsl
sbb
lods
xchg
xor
mov
repz
pop
imul
push
cmp
mov
fcoms
add
or
or
arpl
movsb
jle
imul
aas
and
adcl
call
push
shrb
pop
lret
adc
xchg
inc
pop
ret
mov
jle
fwait
into
push
ss
in
mov
aas
out
imul
add
mov
lods
sbb
fdivp
adc
jl
jg
mov
test
pop
dec
mov
dec
xlat
lods
nop
test
xchg
lods
jmp
cmpsb
or
jmp
mov
fsts
repnz
xor
imul
cmp
cmp
lods
test
adc
lock
loopne
mov
dec
xor
mov
cmp
push
sub
mov
jnp
xor
in
cli
cmp
ret
test
aaa
enter
xor
hlt
sbb
insl
test
outsl
daa
mov
sub
scas
inc
rorl
mov
inc
or
mov
out
or
arpl
add
jmp
pop
xchg
and
sub
fdivrp
frndint
in
ret
bound
inc
ja
aas
loop
fisttpl
inc
movsb
dec
stos
lret
shrb
daa
stc
in
sub
fdivrs
jb
adc
push
fcoms
test
push
cmpsl
fildll
scas
fmull
roll
jecxz
lret
xor
cltd
repz
sbb
adc
jae
roll
enter
push
mov
lds
mov
xchg
test
sub
sub
inc
lcall
inc
into
ljmp
or
scas
addr16
mov
cs
prefetchnta
xchg
mov
push
push
xchg
xchg
daa
insl
or
mov
and
popf
mov
out
pop
add
popa
jb
push
inc
mov
xchg
push
and
fadd
push
sbb
lea
adc
xchg
lea
inc
jmp
mov
xchg
fdivl
lahf
pusha
mov
jp
add
push
cli
xchg
fs
test
xchg
xor
dec
add
cmp
in
jnp
out
sbb
out
adc
mov
or
repz
shlb
rorl
pushf
mov
push
sbb
scas
es
and
out
shl
xchg
test
xor
call
das
mov
fcmovne
ss
adcb
xor
loop
mov
jg
pop
xor
cmp
xor
lret
clc
stc
into
or
xor
or
cmc
adc
sbb
dec
sbb
nop
cmp
sar
loope
add
mov
jecxz
int
iret
xchg
xchg
aam
ret
loope
fbstp
outsl
lea
popf
loopne
cmp
and
ljmp
sbb
jecxz
ds
mov
push
hlt
mov
popa
sbb
jne
fidivrl
xchg
pop
call
mov
pop
lods
int3
push
jp
addl
stos
add
dec
mov
add
in
movsl
pop
sub
aam
outsb
mov
xchg
aad
pushf
mov
sub
fbstp
pop
cld
into
rcll
dec
mov
fwait
mov
jge
push
std
jnp
push
mov
push
ret
daa
subl
or
mov
jb
ss
sbb
pop
je
inc
push
imul
sti
jp
push
lock
in
mov
add
test
dec
repnz
std
orb
sbb
stos
dec
arpl
add
sbb
stos
dec
sbb
ljmp
push
pop
popf
mov
ljmp
fcoml
ds
shll
scas
stc
sub
adc
add
cmpsb
sub
adc
cmpsb
fisubrs
aas
or
ljmp
fbstp
loop
mov
stos
add
aas
shl
mov
mov
sti
leave
leave
bnd
adc
mov
lret
outsl
and
push
sub
shrl
loope
rclb
xchg
fildl
pop
test
xchg
nop
mov
loopne
sbb
add
pushf
add
pushf
outsl
out
fs
fistpll
ljmp
mov
or
jno
jne
fwait
sbb
fstpt
movsb
filds
fs
push
lret
mov
iret
mov
aam
imul
int
or
movsl
cld
and
aad
xchg
movsl
pusha
lock
fidivrl
jbe
subl
inc
fcomi
idiv
add
jl
mov
int3
insb
inc
add
dec
pop
stc
fsts
xorl
fistps
pop
adc
mov
icebp
hlt
nop
fsubrp
sbb
push
leave
shll
xchg
mov
into
in
cmp
and
dec
mov
insb
mov
pop
pusha
dec
pop
xchg
xchg
pop
push
lods
or
leave
ret
aaa
insl
adc
out
xlat
dec
stos
stos
test
jmp
andl
pop
xchg
xchg
lret
jp
mov
cmpsl
aaa
dec
ret
inc
adc
cli
fsubr
loopne
out
shl
cmp
imul
insl
in
ret
sbb
fisubl
cmp
cmp
jp
inc
pop
int3
mov
jo
jo
inc
xchg
pop
add
test
add
xchg
ljmp
cmpsb
push
pop
aas
movsl
cmp
imul
lahf
push
mov
pop
popa
dec
clc
mov
inc
filds
sub
jnp
lcall
insb
mov
lret
sbb
cmc
ret
adc
hlt
cmpsb
fucomp
shl
add
sub
lock
inc
lods
sbb
loop
test
inc
rcl
bound
jb
jp
mov
ficoms
or
or
and
cmp
jae
scas
mov
enter
add
repz
in
clc
pop
hlt
aad
pop
test
mov
jl
mov
mov
rcr
jecxz
xchg
jmp
jge
hlt
dec
add
mov
xchg
xchg
dec
xlat
mov
cmc
or
addr16
sub
inc
pushf
pop
sub
rcll
mov
add
insl
pop
pop
xor
shll
scas
and
mov
test
fs
dec
sbb
frstor
fistpl
outsl
mov
cmpsl
mov
aaa
mov
scas
ja
sub
imul
pop
xchg
xchg
lret
inc
jne
cmpsb
shr
arpl
adc
out
out
xchg
fs
and
into
test
dec
lret
mov
xor
xor
xchg
push
lret
push
pop
jle
out
mov
lcall
or
jmp
pushf
stos
repz
sub
xor
jno
push
imul
xor
sti
adc
subl
and
cmp
mov
popf
sub
pop
xor
lods
cld
out
ret
das
jg
loop
adc
or
outsl
lret
dec
dec
and
mov
add
lcall
pusha
push
sub
jmp
or
ror
repnz
dec
and
jle
pop
or
sti
nop
or
dec
notb
fdivr
or
xor
jne
ret
sub
in
push
shll
aad
and
add
out
cmpsl
dec
ljmp
pop
push
mov
cltd
ja
adc
cmp
into
xchg
sbb
fs
jno
outsl
xor
sub
out
mov
imul
add
test
cmp
xor
inc
or
add
mov
mov
insb
jge
sub
pop
xchg
pusha
sar
lcall
outsb
enter
xchg
js
and
repz
sarb
dec
push
fwait
mov
dec
ds
iret
ja
cmp
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
cwtl
gs
shrl
lahf
scas
lods
jge
mov
arpl
fs
jge
sub
push
or
pop
mov
sub
jae
mov
int
jae
ljmp
xchg
sbb
mov
sbb
arpl
leave
nop
adc
in
int
lock
add
mov
mov
push
hlt
cmc
xor
jbe
mov
lods
add
pusha
or
jae
into
push
cmp
jl
or
push
xor
or
sub
push
movb
mov
repnz
aam
fisubrs
mov
das
mov
rorb
jmp
sbb
test
ss
lods
xchg
mov
shl
movsl
ljmp
mov
xchg
adcl
jo
faddp
dec
in
or
aaa
test
in
pop
outsl
xchg
sub
cs
addr16
dec
or
rcr
xchg
fdivs
dec
fnstcw
push
int3
or
iret
xor
in
mov
and
stc
and
jge
aaa
inc
or
adc
xchg
xor
orb
out
adc
outsl
sub
sbb
mov
pop
gs
adc
and
cmc
loopne
adc
insl
or
xchg
cmp
pop
adc
jno
cld
mov
xchg
test
mov
cli
aam
add
in
and
and
gs
push
inc
push
adc
flds
int3
adc
cmp
jle
dec
sti
mov
sub
mov
pop
inc
aam
repz
test
lds
cld
push
xchg
lds
inc
in
aad
pop
shrl
sub
idivb
loopne
les
pop
cmc
lret
movsl
pop
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
nop
mov
add
