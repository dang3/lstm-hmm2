jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
lret
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
add
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
hlt
xchg
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
or
hlt
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
ja
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
xchg
add
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
cwtl
inc
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
call
aam
mov
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
scas
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
loop
inc
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
stos
cwtl
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
sub
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
dec
xchg
inc
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
xchg
mov
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
pop
movsb
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
mov
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
xchg
in
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
and
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
idiv
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
push
call
mov
neg
mov
add
add
test
fadd
add
mov
xchg
lds
movsl
add
fs
movsb
add
pop
je
imulb
mov
ret
cli
xchg
lock
fisubs
out
add
movsb
mov
add
testb
cmpb
jecxz
add
add
out
mov
push
jno
add
rcll
add
push
je
add
add
les
add
add
mov
cltd
out
pop
mov
add
mov
add
insb
aad
add
add
out
add
add
add
add
jge
jae
xchg
mov
add
mov
jne
movsl
add
lods
sti
cwtl
jne
popl
xchg
test
fs
aam
add
loopne
push
mov
add
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
std
add
add
add
add
pop
mov
add
mov
add
roll
mov
movsb
mov
add
mov
nop
mov
add
add
mov
scas
je
add
in
add
pop
add
add
cmc
into
add
add
aam
mov
pushf
cld
out
test
addr16
lea
pop
movl
push
lea
push
push
push
push
push
call
lret
add
add
mov
loop
push
jmp
add
lods
push
add
icebp
pop
jno
pushw
mov
add
add
lret
in
pusha
add
nop
add
add
les
mov
cmc
add
add
add
icebp
into
add
add
mov
add
add
add
mov
lea
pop
popl
push
push
push
push
lea
push
push
push
push
call
add
aam
filds
into
push
pop
pop
mov
add
add
in
je
jnp
lcall
add
fistps
popa
fadds
add
out
add
add
lods
add
fildl
rolb
add
mov
mov
add
js
shll
add
cmpsb
cwtl
pop
mov
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
jp
pop
clc
add
push
mov
add
add
test
fiadds
ret
add
movsb
push
push
add
add
add
xchg
pop
ret
mov
jge
add
mov
imul
add
pop
jle
add
je
xorb
jle
add
aad
add
arpl
pop
call
push
push
call
sarl
mov
add
add
add
je
stos
addr16
mov
add
in
mov
pop
mov
add
jo
jnp
movsb
add
in
add
xlat
movsb
add
into
icebp
add
lcall
pop
movl
jne
add
loopne
add
popl
xchg
fiaddl
add
in
add
pop
jmp
add
test
push
mov
lea
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
mov
add
cmpl
add
add
jge
ret
add
lcall
mov
mov
loop
push
movsw
add
jno
mov
jbe
div
popa
mov
stos
jbe
into
push
scas
add
rolb
outsl
jge
rcrl
jl
add
add
js
push
movsl
out
mov
add
cwtl
hlt
mov
and
push
call
jmp
push
push
call
add
add
fcmove
xchg
faddl
add
mov
xchg
add
mov
add
sarb
mov
test
jmp
add
pop
mov
mov
mov
add
addr16
les
jmp
add
imul
add
push
popa
xlat
scas
jo
rorb
pop
ret
mov
mov
push
push
push
call
gs
add
out
repnz
add
hlt
push
addr16
ja
add
mov
pop
pushf
jl
out
addl
fucom
js
addb
jnp
testb
push
jae
add
movl
andb
mov
add
pop
add
pushf
pop
add
pusha
leave
xlat
std
movl
repnz
mov
hlt
lea
pop
add
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
shl
cld
add
add
xchg
add
test
lods
pop
sti
add
rorb
add
cmpsl
lcall
mov
pusha
test
add
lcall
mov
out
add
xchg
add
add
icebp
mov
lret
jnp
fnstsw
into
out
mov
hlt
jmp
shr
add
jecxz
outsl
add
xchg
mov
lea
pop
add
push
push
lea
push
push
push
call
push
stos
into
push
add
fdivs
add
xchg
ljmp
push
loop
add
movsb
add
add
xchg
mov
add
add
addb
add
rorl
add
push
aam
add
mov
add
nop
mov
add
lock
add
add
xchg
add
xchg
sar
pusha
add
ljmp
fmull
ret
fmull
add
shll
xchg
push
push
call
int3
add
mov
enter
add
add
xchg
enter
add
pop
fcmovnbe
loop
xchg
call
add
test
mov
leave
in
add
jle
add
mov
add
faddl
add
add
lret
add
jmp
add
add
mov
lea
pop
add
call
mov
push
push
push
push
lea
push
lea
push
push
push
call
sti
scas
fldl
xor
add
fisttpl
add
add
jge
out
lea
mov
arpl
les
jbe
fidivrl
loopne
pop
bound
mov
push
mov
lock
movsl
mov
in
xchg
add
lods
add
test
jp
add
mov
add
xchg
add
outsl
jecxz
lahf
add
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
call
cwtl
aam
mov
std
add
in
add
mov
movl
ja
addb
sarb
add
add
add
push
cli
pop
fiaddl
jecxz
add
movb
lds
fwait
into
test
add
add
out
add
mov
add
rcrw
add
add
in
jle
jmp
test
arpl
add
push
push
shl
dec
push
or
not
add
ror
sub
sub
inc
shr
xor
pop
shr
add
pop
push
push
push
lea
push
push
lea
push
call
lret
imul
add
enter
lds
into
fnstcw
add
mov
push
leave
add
add
test
ret
ret
movsl
push
add
idivb
lods
xorb
lods
add
mov
xchg
push
mov
pop
in
int3
lock
faddl
roll
jno
lock
add
mov
mov
arpl
sahf
pusha
pusha
add
insb
mov
lea
pop
pushl
call
push
push
push
push
call
cli
jne
mov
add
stc
jnp
testl
add
cld
mov
add
add
fistpll
add
ljmp
fdivrs
add
push
cli
add
scas
add
add
add
xchg
mov
out
push
xlat
data16
add
mov
lea
popf
push
nop
mov
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
call
lcall
jo
ja
add
add
add
add
jne
call
add
add
pushf
add
add
cmpsb
add
andb
jge
add
sti
mov
add
add
test
mov
roll
pop
add
add
xchg
push
loopne
push
lds
faddp
mov
lea
pop
movl
push
push
push
push
lea
push
push
call
jcxz
add
add
jp
movb
lea
add
add
shll
in
mov
ja
add
add
cld
out
mov
popf
stos
add
out
stos
iret
mov
fisubl
add
add
in
cmpsb
add
add
push
cmpl
mov
add
mov
add
imul
xchg
add
pop
lea
push
push
push
push
push
push
push
push
push
push
call
jae
jb
push
pop
add
sahf
mov
vmulss
push
xchg
popf
pop
mov
xchg
add
mov
add
rcl
mov
jae
imul
hlt
mov
add
add
xchg
add
pushf
mov
aam
lea
add
add
popa
scas
test
popa
add
in
add
push
add
cli
jecxz
add
fnstenv
mov
mov
lea
pop
pushl
push
push
push
push
call
enter
add
add
test
add
scas
add
xchg
mov
add
add
cmpsb
add
in
add
xchg
add
add
add
cmc
addl
jbe
aam
add
add
movsb
add
xchg
repnz
int3
stc
push
jecxz
in
mov
mov
add
push
test
pushf
stos
add
loopne
loop
mov
lea
pop
pushl
call
pushl
push
push
push
call
pushf
add
std
lods
lods
add
cmpl
add
add
push
add
scas
mov
add
add
add
mov
xchg
mov
mul
add
leave
out
je
arpl
add
pop
add
add
push
cltd
add
xchg
add
stc
pop
pusha
enter
add
icebp
js
add
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
push
add
add
test
mov
add
add
add
add
add
add
add
add
add
lahf
add
mov
je
int
lret
insb
add
push
add
sti
out
mov
push
xchg
jno
jno
jge
jle
add
mov
jae
ljmp
hlt
imul
iret
push
add
add
jmp
testb
add
mov
lea
pop
call
push
push
lea
add
push
or
inc
add
add
ror
add
rol
sub
dec
dec
shl
pop
not
add
add
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
leave
add
divl
hlt
fistl
shll
add
add
add
mov
ret
mov
mov
cld
enter
int3
jle
add
testb
add
add
add
xlat
arpl
xchg
add
jno
add
add
leave
add
je
jns
addl
imul
add
loopne
mov
pop
pushl
push
push
call
leave
add
add
test
add
addb
add
push
add
les
mov
fildl
add
add
add
hlt
pop
jle
add
add
pop
add
add
pop
push
into
mov
add
mov
out
lds
push
add
add
add
add
jb
add
add
add
add
add
outsl
add
out
std
add
add
pop
call
push
push
push
rol
dec
lea
push
xor
add
rol
add
shr
sub
sub
pop
inc
ror
ror
sub
pop
push
push
lea
push
push
call
add
ror
insb
add
jge
pop
pop
ja
add
scas
icebp
fisubrs
xlat
loop
mov
cltd
imull
movsl
loopne
add
lret
add
pop
add
mov
rolb
mov
stc
ja
out
in
add
add
add
add
add
add
mov
out
pushf
add
addl
add
pop
jne
add
add
add
mov
add
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
int3
xchg
add
ffreep
rclb
add
shll
add
movsb
lock
pusha
shlb
pushf
out
add
loopne
add
rolb
add
loope
add
shll
add
add
add
add
pop
add
insb
icebp
loope
pop
xchg
add
mov
loope
add
add
int
addr16
insb
add
loope
add
pop
nop
add
jno
mov
sbb
call
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
fidivs
leave
add
gs
cmpsb
int
add
mov
test
push
add
mov
add
add
lret
mov
add
out
mov
sti
mov
jnp
add
andb
jmp
movsb
add
add
test
add
fwait
mov
add
repnz
fidivrl
add
lea
pop
push
push
push
push
push
push
push
push
call
add
mov
push
mov
add
add
jae
push
into
add
add
add
xchg
add
cltd
jae
jmp
add
pop
push
movb
add
add
rolb
xlat
mov
push
add
subb
mov
out
mov
jbe
aam
pop
mov
mov
add
add
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
jecxz
jp
add
add
enter
ja
push
add
pop
mov
add
fiaddl
xchg
add
lods
add
add
add
mov
icebp
add
add
in
lret
add
add
mov
add
popa
add
mov
call
add
mov
add
xchg
add
mov
mov
add
add
push
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
ljmp
in
testb
shlw
int
divb
sti
add
in
iret
lock
jbe
lods
push
shlb
add
add
js
mov
add
jnp
mov
filds
data16
imul
add
mov
cmpsl
lds
mull
add
add
jbe
jmp
add
and
ret
add
add
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
jae
add
add
add
add
scas
add
jnp
xlat
add
add
mov
pop
push
add
cwtl
add
mov
ret
addb
jb
mov
add
push
add
add
ret
add
add
mull
mov
xchg
add
mov
add
add
add
add
add
insb
pop
popf
mov
lea
pop
add
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
push
loop
std
mov
xchg
not
gs
test
add
push
add
push
add
add
jo
lret
mov
add
data16
add
call
mov
ljmp
shrl
pop
int3
add
add
jp
mov
pop
repnz
push
out
test
add
add
mov
xchg
imul
mov
jne
data16
ja
or
aam
bound
pop
xor
push
push
push
push
push
lea
push
lea
push
push
call
lds
icebp
pop
jno
mov
mov
popa
loop
mov
mov
jo
bound
add
imul
mov
nop
test
add
arpl
add
pop
add
mov
jns
jmp
add
add
mov
leave
cmpsb
mov
int3
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
call
jmp
jle
add
jbe
add
xchg
test
jne
add
repnz
add
add
add
out
jbe
mov
add
fisttpl
pop
cld
add
add
pop
js
xchg
out
pop
jae
jecxz
lods
push
add
outsl
jne
add
stc
jns
lahf
add
testl
and
add
push
push
push
push
push
push
push
push
push
push
call
xchg
rolb
jnp
jnp
rolb
call
fprem1
ljmp
cmc
cwtl
add
iret
pusha
xchg
lock
lcall
call
add
xchg
add
ljmp
fcmovb
pusha
test
add
mov
clc
stos
mov
add
mov
mov
mov
lea
pop
mov
xor
add
push
push
push
call
mov
out
insb
jno
add
enter
add
std
push
int3
imul
pop
mov
arpl
nop
pop
add
cmc
add
add
pop
add
add
pop
add
jno
jnp
clc
loopne
push
fadd
add
add
clc
add
push
rolb
jnp
xchg
stos
add
ja
in
add
imul
arpl
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
hlt
xchg
add
mov
fs
fildl
jns
roll
add
js
enter
mov
popf
add
add
add
jb
lods
pop
arpl
pop
push
data16
mov
add
mov
loop
adcl
add
add
add
add
add
add
aam
enter
jp
test
les
aam
bound
pop
mov
xor
push
push
call
add
add
testl
lret
fistl
add
cli
add
ficoms
ret
add
xchg
fs
push
add
cmpsl
jbe
add
mov
or
imul
jge
testl
add
int3
fldl
add
mov
add
ja
mov
aad
add
add
int3
add
add
xchg
out
aam
mov
rorl
popa
or
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
push
mov
aad
add
pop
pop
add
add
sarl
lods
add
add
pop
mov
rol
ljmp
mov
add
mov
loope
add
add
leave
xchg
roll
add
sahf
lret
add
add
add
mov
movsl
xchg
push
rcll
test
add
loope
insb
push
add
pop
mov
xor
push
push
push
push
push
push
call
out
push
add
add
pop
ja
movsl
add
ljmp
lea
add
push
mov
add
pop
add
fldl
add
ja
ret
test
popf
rolb
add
scas
addl
add
add
iret
add
xchg
rolb
add
bound
xchg
clc
mov
popa
lahf
cli
push
add
bound
loopne
aad
add
add
mov
rolb
mov
popa
sbb
enter
push
lea
push
push
lea
push
call
std
mov
clc
fsubs
add
add
pusha
mov
stos
mov
mov
push
mov
int3
fldenv
test
add
out
add
repnz
mov
mov
pop
push
in
popf
jno
add
add
add
into
add
add
subb
mov
loopne
jl
out
add
xchg
sbbl
xchg
add
add
add
adc
push
push
push
push
push
push
push
call
sar
fwait
insb
add
add
lcall
into
add
xchg
fildl
jmp
add
add
jne
enter
mov
fmull
add
jl
push
in
pop
mov
add
add
mov
mov
add
vpcmpeqd
add
mov
add
mov
add
cli
sti
pop
add
lret
mov
pop
push
jmp
mov
lea
pop
mov
push
push
lea
push
call
jp
aam
push
add
push
add
add
jns
repnz
add
mov
add
add
scas
rolb
add
shl
sahf
fcmovne
hlt
add
sti
add
fildl
xchg
add
mov
xchg
aam
jge
add
int3
negb
lods
add
hlt
add
add
jo
add
add
add
cltd
xchg
mov
pop
add
insb
lods
mov
lea
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
pop
ret
add
gs
pushf
insb
cli
jb
lahf
imul
add
movsl
mov
add
push
add
add
add
jge
add
repnz
nop
push
stc
add
add
add
out
jno
add
mov
pop
add
add
icebp
mov
insb
cmpsb
add
pop
add
push
push
push
lea
push
push
call
add
mov
xchg
jl
push
add
mov
add
jge
test
imul
push
jp
jp
pop
mov
mov
fcoms
mov
xchg
mov
add
jno
cltd
add
stos
ret
add
nop
mov
add
mov
add
test
add
pop
add
push
push
push
push
push
lea
push
lea
push
push
call
les
filds
popf
mov
ffree
push
mov
jo
add
jmp
iret
add
jp
xchg
cmpsb
add
jbe
clc
shlb
add
lret
cmpb
int3
cmc
pop
mov
push
les
test
addb
add
int
clc
push
loopne
xchg
in
mov
add
xchg
jp
mov
pusha
and
inc
cmp
shll
jne
ficoml
push
push
lea
push
push
push
lea
push
push
call
movsb
jnp
push
outsl
mov
add
add
xchg
int
push
add
mov
fcomp
lahf
lods
filds
add
jecxz
add
add
hlt
cmc
add
jae
fstps
add
add
jmp
add
test
add
jl
mov
jp
add
andb
iret
add
lea
pop
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
movsl
jnp
fiadds
add
add
add
push
testb
add
add
push
add
in
test
add
jmp
mov
add
xchg
sti
lret
fwait
jns
addl
mov
ljmp
xlat
add
mov
jmp
add
jmp
sti
cwtl
add
add
jmp
add
loope
add
add
pop
add
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
add
mov
incb
loop
add
add
add
jp
add
fbstp
out
add
imul
fisubs
lods
je
xchg
add
add
add
push
add
fcmovnu
add
int3
mov
add
jbe
leave
add
cli
add
jne
stos
mov
lcall
mov
xchg
popa
add
mov
lea
pop
mov
xor
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
int
add
add
xchg
add
jle
add
mov
shll
xchg
cltd
out
mov
add
call
add
rcrl
loopne
add
xchg
add
add
mov
add
cmp
add
add
rclb
mov
add
xchg
mov
add
jns
mov
lea
pop
mov
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
flds
out
in
loope
add
in
xchg
add
imul
jnp
out
add
add
pop
fucomip
divb
add
ret
mov
push
nop
fcompl
int3
fstpt
add
add
pushf
imul
xchg
out
add
push
jle
movsl
pop
add
aam
icebp
add
out
add
loop
add
add
xchg
add
jne
int3
lea
pop
xor
push
lea
push
call
roll
add
test
in
fwait
jno
ror
in
mov
mov
add
shl
mov
add
divl
rol
aad
add
push
add
divl
pusha
cmpsl
add
add
add
add
stc
roll
mov
fiadds
insb
mov
add
push
ja
test
xchg
loopne
movsb
add
add
sahf
add
mov
or
les
lea
push
push
lea
push
lea
push
call
repnz
pop
call
add
addb
add
mov
add
movl
hlt
add
push
into
add
jnp
mov
in
jge
add
push
std
pop
jae
xchg
fdivl
popf
push
add
push
clc
fwait
xchg
icebp
push
add
mov
loope
push
pop
repnz
test
mov
adc
add
add
mov
push
push
rol
shl
push
or
inc
add
rol
sub
shl
not
inc
not
pop
shr
pop
push
push
push
push
call
cwtl
mov
pop
add
add
stc
loop
std
add
add
xchg
add
xchg
mov
loope
pop
add
fadds
add
jae
mov
add
pop
mov
add
add
push
divb
jmp
pop
add
mov
jne
add
xchg
add
enter
push
lods
add
push
add
roll
test
add
out
add
push
add
lea
pop
pushl
call
push
push
push
inc
push
or
inc
add
add
lea
xor
sub
pop
ror
sub
pop
push
push
push
push
push
call
add
test
cmpsl
push
add
je
push
into
bound
add
pop
mov
add
add
aad
add
lods
add
add
gs
add
filds
add
add
push
add
xlat
xorb
add
jle
outsl
cltd
mov
jne
in
stc
pop
out
add
jo
xchg
cmp
add
shl
stc
mov
add
mov
lea
pop
push
push
call
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
enter
cld
js
xchg
mov
add
out
lret
movsb
cmpsl
cli
int
fsubl
popf
xchg
mov
fsubl
add
mov
add
mov
add
lcall
mov
movsb
add
add
add
add
cwtl
add
add
add
add
add
lods
jne
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
js
leave
add
jb
shr
add
in
hlt
std
add
enter
xchg
add
add
add
add
add
movb
push
cmpsb
add
outsl
xchg
add
pushf
popl
add
mov
faddl
scas
std
jmp
lods
mov
xchg
jb
clc
add
add
pop
add
add
add
add
rolb
fmull
push
add
pop
mov
push
pop
add
push
shl
pop
add
add
mov
push
push
lea
push
lea
push
push
push
push
call
mov
mov
add
add
movsl
add
ljmp
add
add
clc
add
mov
add
xlat
lret
jae
icebp
xchg
imul
add
mov
shr
aam
test
pop
add
in
imul
stos
add
add
pusha
add
add
add
mov
lea
pop
xor
push
lea
push
push
push
push
call
mov
aad
in
sahf
add
stos
add
mov
out
popa
bnd
loop
add
pop
add
push
scas
add
mov
lahf
add
add
xchg
add
add
add
pushf
js
fs
add
add
add
in
subb
roll
faddl
movsb
push
outsl
add
lea
pop
add
push
push
push
push
push
push
push
push
call
add
in
call
aam
xchg
push
imul
lea
movsb
mov
mov
add
add
insb
add
mov
scas
mov
add
add
jns
out
movsb
xchg
mov
add
add
add
test
sahf
out
jle
add
xchg
imul
push
jecxz
in
xchg
add
mov
mov
int3
lea
pop
add
push
push
push
push
push
push
call
add
add
add
fsubrs
add
mov
in
data16
add
test
add
add
mov
mov
jns
add
lcallw
push
jns
add
xchg
mov
add
mov
add
add
shl
add
jmp
loopne
lcall
fadds
add
add
pop
push
mov
xor
push
push
call
out
add
pusha
add
pop
push
add
push
les
jmp
lret
push
add
add
imul
add
mov
out
mov
ficoml
add
insb
test
insb
add
add
stc
out
mov
add
lock
add
add
add
push
add
add
add
fcomps
add
add
add
add
add
bound
add
pop
add
push
not
not
sub
pop
pop
mov
xor
push
lea
dec
sub
shr
pop
rep
push
add
pop
mov
push
push
push
push
push
push
push
push
call
addr16
addr16
cmpsl
add
add
add
fidivrl
add
xchg
add
add
pop
out
xchg
add
pop
les
loopne
push
add
add
add
sbb
mov
pushf
add
leave
add
add
imull
fadds
cwtl
jne
jnp
add
lcall
add
add
lret
fildl
iret
add
add
add
out
add
add
add
clc
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
push
call
leave
add
add
pop
xchg
push
xchg
sti
stos
icebp
in
add
sahf
jmp
fyl2xp1
add
add
hlt
add
scas
repnz
pop
pop
popl
add
jp
add
mov
add
add
add
add
add
add
cltd
add
jae
in
add
mov
add
stc
add
mov
mov
jo
testl
add
fs
out
mov
lea
pop
add
push
push
call
nop
jmp
mov
add
xchg
sti
sahf
add
add
add
mov
add
xchg
xchg
mov
add
mov
repnz
mov
add
lahf
pop
addl
add
mov
add
movsl
jo
movb
sahf
add
pop
mov
push
repnz
mov
lea
pop
or
je
push
lea
push
lea
push
push
push
call
add
bound
add
add
addl
mov
enter
addr16
aam
out
lea
pop
add
pop
lods
mov
mov
add
pusha
add
out
add
fiadds
incb
stos
imul
push
add
mov
jmp
loopew
pop
add
add
jmp
cld
lea
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
loope
lock
stos
leave
int3
add
add
add
xchg
rcr
add
lods
xchg
ja
add
add
jmp
jo
add
pop
mov
add
add
lahf
mov
add
fcmovnu
add
movsb
mov
ret
add
mov
fcmovne
add
pop
mov
xor
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
sti
nop
les
stos
add
js
add
jmp
mov
add
addb
leave
add
loop
add
mov
push
pop
ja
mov
add
add
mov
test
lret
fucomip
add
popf
bound
add
add
lahf
mov
add
add
add
add
mov
jno
jns
arpl
mov
add
mov
and
repnz
push
ror
dec
pop
push
push
push
lea
push
push
push
push
push
call
lds
add
add
add
add
push
add
add
lahf
ret
mov
out
je
jle
add
cltd
into
mov
fs
add
add
mov
out
icebp
add
add
add
scas
add
lcall
add
add
sbbl
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
add
jb
loopne
mov
add
icebp
add
ljmp
cmpsb
add
in
add
add
mov
cltd
add
add
add
lea
add
mov
ljmp
add
add
push
cli
clc
jno
test
add
add
add
push
add
aam
bound
pop
xor
push
push
call
int3
lea
ljmp
sub
sti
lret
push
add
add
add
mov
mov
clc
add
add
add
mov
fwait
jo
add
lock
add
fcmove
add
je
enter
add
mov
mov
add
add
pop
mov
add
add
loop
hlt
add
add
out
hlt
lea
pop
add
add
push
push
push
push
lea
push
push
call
fs
add
mov
jbe
mov
add
add
rcll
xchg
add
int
add
mov
mov
leave
aam
loopne
add
add
lods
test
mov
mov
jnp
add
mov
popf
shll
nop
jge
les
add
in
mov
test
insb
pop
repnz
jb
add
add
lds
arpl
pop
pop
push
push
push
push
push
push
call
cmpsl
loopne
in
loop
fnstcw
xchg
add
xchg
mov
sahf
stos
add
stc
pop
add
add
push
in
add
xchg
add
xchg
mov
add
repnz
mov
add
mov
add
iret
push
add
add
add
std
add
nop
add
add
add
mov
js
add
add
add
pop
rep
mov
xor
push
lea
not
pop
or
je
mov
add
push
dec
pop
add
rep
pop
push
push
add
xor
push
or
inc
add
not
sub
shl
pop
inc
ror
pop
push
shr
pop
pop
mov
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
add
push
jbe
cltd
lock
mov
add
xchg
add
add
data16
push
in
add
add
xchg
push
add
push
mov
push
je
into
cmc
add
add
mov
add
mov
pop
add
testl
shlb
lds
add
in
mov
out
in
iret
ljmp
lea
pop
mov
jmp
push
push
not
pop
mov
push
shr
add
pop
add
push
add
inc
dec
xor
pop
push
push
push
ror
pop
push
push
mov
push
shl
pop
pop
push
inc
pop
pop
push
dec
pop
pop
pop
push
push
push
lea
push
call
add
add
addb
mov
fdivrp
aam
iret
clc
add
pop
add
cltd
add
mov
jp
add
movsb
xchg
enter
add
add
mov
add
lcall
jns
mov
jne
test
xchg
xchg
add
add
imul
sti
add
add
rcr
out
ficoml
mov
lea
pop
leave
push
add
pop
ret
push
push
shl
shr
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
mov
add
lods
xchg
add
xchg
fldlg2
add
in
add
add
add
ljmp
lret
push
add
imul
jno
pusha
movsl
popl
add
stc
add
mov
jne
in
xchg
sarb
add
add
loopne
shrl
add
lds
add
lock
out
out
lcall
mov
lea
pop
add
push
push
dec
pop
push
push
push
push
ror
lea
sub
pop
movl
push
shr
ror
shr
shl
pop
addl
test
je
push
push
push
call
pop
je
out
add
iret
jl
add
add
leave
div
into
pop
jbe
add
clc
add
cmc
lods
jbe
add
pusha
add
add
add
jmp
subl
gs
imul
add
add
pop
xchg
mov
test
push
add
jle
out
js
mov
lea
pop
mov
pop
pop
push
push
lea
push
call
add
hlt
add
mov
addr16
ljmp
xchg
data16
add
movsl
enter
add
add
add
mov
add
popf
add
add
xchg
mov
jae
add
int
add
enter
jecxz
sti
sar
imul
fcomps
push
ret
rcrb
call
bound
pop
pop
leave
push
push
push
push
push
call
lods
add
add
lea
push
add
pop
add
add
add
jne
stos
add
add
add
add
lods
add
fisttpll
add
add
mul
add
stc
add
int
add
add
nop
fcomp
lock
mov
in
add
add
add
roll
xchg
mov
flds
push
test
stos
push
add
stos
add
add
lock
icebp
push
popf
add
aad
ret
cld
lea
pop
ret
push
mov
push
push
lea
push
push
call
add
add
push
out
add
mov
add
cmpsl
add
add
hlt
mov
add
add
lock
adc
push
jl
fldl
push
pushf
add
addl
xorl
stc
push
mov
std
test
mov
add
pop
add
push
push
push
push
push
lea
push
push
call
push
add
std
add
add
cld
add
jne
add
push
jle
add
jmp
ljmp
add
add
add
iret
mov
popa
je
push
mov
lods
lahf
lret
stos
add
fildl
test
add
add
add
pushf
jo
addb
add
fiaddl
scas
into
lcall
lcall
add
stos
mov
lea
pop
push
push
push
call
lods
outsl
add
mov
add
add
jo
jp
scas
pop
out
add
add
scas
add
int3
pop
clc
aad
fidivl
loop
add
add
fcomip
testl
mov
out
add
scas
mov
fdivr
out
jge
ret
jmp
jecxz
loopne
cmc
jmp
pop
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
lcall
cmpb
scas
add
add
fsubrp
addb
add
mov
sar
ficomps
xchg
add
push
push
sar
js
ja
add
add
movsl
cmpsb
mov
mov
jecxz
fucomp
mov
add
push
div
add
out
add
into
add
pushf
pop
xchg
add
jp
add
int3
add
add
add
pop
push
push
sub
rol
shl
pop
push
testl
addl
push
push
push
push
push
call
add
mov
add
mov
lods
add
roll
filds
pop
icebp
add
repnz
push
add
pushf
push
add
add
shlb
add
stos
in
pusha
add
add
add
jno
xchg
add
add
stos
ja
add
sti
bound
pop
xchg
add
mov
mov
add
add
add
hlt
lea
pop
push
call
push
push
push
push
push
push
call
add
add
add
mov
insb
cmpsb
add
mov
mov
add
pop
xchg
add
test
aad
sti
add
lret
add
mov
pop
jle
pushf
lret
push
lea
rorl
movsb
mov
add
add
lea
mov
mov
pop
mov
add
add
push
add
call
int3
lea
pop
mov
push
add
add
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
frstor
add
stos
push
in
subl
int
add
add
cmc
jns
add
pop
xor
stos
in
add
mov
icebp
clc
add
push
popf
iret
add
add
add
clc
add
add
cli
add
add
js
jle
lea
aam
pop
movl
pop
negb
rcrl
pop
fisttpll
pop
push
call
cmpl
jne
push
push
push
push
push
push
call
xchg
fs
add
les
loop
mov
pop
mov
add
movl
add
add
imul
stos
out
add
add
outsl
mov
add
scas
add
ljmp
add
add
mov
jnp
imul
add
add
pop
add
cwtl
fs
aam
add
hlt
lea
pop
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
lcall
add
aam
add
add
push
icebp
xchg
lods
fbstp
js
add
pop
mov
xlat
add
enter
push
movsl
add
add
scas
xchg
add
push
add
ret
decb
add
addl
jecxz
nop
stos
pop
les
insb
mov
lea
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
call
faddl
clc
add
movsb
xchg
add
jno
add
pop
scas
add
add
stos
jle
stos
add
mov
push
mov
shr
out
flds
xchg
lock
mov
nop
add
xchg
add
add
int3
add
lds
fisttps
pusha
add
aam
add
add
add
add
rolb
sbb
leave
ret
push
push
rol
pop
mov
add
push
push
add
pop
push
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
ret
lea
rclb
movsl
add
std
fisubrl
add
push
add
add
lret
out
add
aad
push
add
add
addr16
nop
add
add
cli
add
add
out
int3
add
lahf
xchg
jno
add
lret
push
add
stc
icebp
popa
jp
mov
add
mov
mov
xchg
imul
test
pop
push
movl
push
push
push
push
call
add
xchg
jo
add
out
add
int
testl
sti
repnz
add
add
icebp
add
add
fwait
jb
jl
mov
add
int3
addb
lea
add
addl
push
add
lods
sbbl
movb
push
add
mov
xchg
add
arpl
aam
add
add
mull
adc
add
fs
call
aam
adc
push
lea
push
push
push
push
call
into
xchg
cmpsb
add
add
in
add
add
add
mov
mov
shrb
roll
loopne
faddl
pop
testb
movsl
jb
mov
loop
push
repnz
add
fwait
xchg
lods
mov
xchg
bound
mov
mov
pop
add
add
in
fs
leave
add
mov
xlat
scas
mov
mov
js
pop
add
push
cmpsb
mov
lea
pop
push
push
shr
pop
call
subl
cmpl
jne
push
sub
add
pop
pop
push
not
lea
pop
pop
push
shr
ror
pop
pop
pop
leave
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
icebp
push
xchg
lahf
js
aad
stos
xchg
cwtl
add
push
lods
jbe
add
mov
clc
add
add
mov
add
data16
add
pop
add
mov
pop
lret
mov
add
add
aad
add
add
shl
std
fistl
hlt
imul
ret
push
push
lea
push
call
add
add
mov
les
into
push
add
jno
bound
add
add
add
add
mov
out
add
add
mov
add
icebp
add
add
mov
call
add
test
add
fildl
jle
popf
add
add
add
add
test
enter
fmull
push
add
not
lea
pop
mov
add
push
push
not
pop
push
push
inc
pop
push
push
lea
push
push
push
call
add
mov
add
add
in
outsl
add
mov
mov
mov
jns
and
jnp
roll
lea
sahf
jb
add
mov
add
add
ljmp
add
fldt
lods
add
add
ret
out
add
add
push
test
add
sarb
in
aad
mov
lea
pop
push
push
push
push
push
push
push
push
call
leave
lds
push
add
hlt
out
add
pop
add
add
add
add
add
addr16
xchg
add
add
add
sti
mov
iret
rcl
add
ljmp
mov
add
add
push
iret
cmc
mov
fldcw
add
addl
jl
loopne
add
add
in
add
add
mov
int
add
sbb
mov
push
lea
push
push
call
lret
pop
add
mov
mov
add
mov
test
iret
push
fwait
add
scas
add
add
cmc
addb
fwait
pop
nop
loope
imul
mov
shll
mov
pop
in
push
mov
add
insb
popl
fdivl
xchg
clc
mov
add
push
out
jecxz
add
mov
add
add
add
ljmp
lret
mov
lea
pop
lea
sub
push
add
ror
ror
dec
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
ja
mov
cmc
push
pop
mov
cli
leave
in
int
mov
add
add
imul
jnp
add
add
xchg
jge
xchg
add
rorl
jb
cmpsl
add
add
loop
cmpsl
add
movb
stc
scas
jo
add
int3
mov
add
add
add
mov
add
add
addb
add
fiaddl
repnz
add
add
add
jmp
push
mov
mov
lea
pop
shr
add
mov
push
push
push
push
push
push
lea
push
push
call
xchg
fidivs
add
scas
mov
add
mov
add
add
fldl
add
add
je
add
iret
mov
lahf
add
out
pop
add
add
sar
cmpsb
testl
loope
add
add
add
mov
movsl
add
xchg
add
add
test
in
push
add
lret
add
cmp
add
jnp
ljmp
cltd
in
push
add
pop
mov
add
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
std
jbe
add
ret
add
add
add
out
out
lods
xchg
jp
rolb
pop
xor
fiadds
add
out
shlb
add
xchg
jnp
add
push
push
mov
add
leave
mov
jbe
sahf
mov
mov
add
add
xchg
add
pop
add
add
jb
cmpsl
scas
add
pusha
and
shlb
inc
add
add
jecxz
lea
push
push
push
push
lea
push
call
je
je
add
addb
jmp
test
add
add
mov
add
add
pop
divl
jl
clc
pop
xchg
aam
xlat
fidivrs
xchg
arpl
add
add
push
loope
loopne
add
imul
scas
mov
add
add
loopne
cli
add
mov
add
push
cmc
add
bound
xchg
cltd
add
stos
mov
lea
pop
mov
cmp
jne
cmp
jne
push
ror
shr
pop
mov
movl
jmp
push
ror
shl
pop
mov
mov
sub
jne
push
push
call
jle
std
add
add
add
lea
add
hlt
cwtl
addb
add
cli
xlat
add
lcall
xchg
add
xchg
in
add
add
leave
add
stos
clc
add
cld
lcall
jmp
add
lock
jl
cmc
add
add
push
fmuls
push
mov
add
xchg
fs
add
add
mov
lea
pop
mov
push
add
shr
xor
pop
movl
push
push
push
push
lea
push
push
push
push
call
mov
push
std
add
add
add
imul
sahf
add
mov
add
test
add
lcall
mov
fmulp
add
stos
testb
jo
push
cmpl
add
in
push
addl
shl
cmc
shrl
cmpsl
fidivrl
mov
add
pop
jmp
mov
mov
push
lea
push
push
push
push
call
add
add
jl
add
add
add
imul
add
add
imul
loop
mov
add
add
add
add
xchg
add
mov
mov
add
jo
cli
mov
pop
push
lcall
add
mov
stos
add
in
int3
mov
lea
pop
cmp
jne
mov
push
inc
pop
movl
jmp
mov
push
push
push
call
arpl
test
popa
pop
hlt
mov
cmp
mov
mov
arpl
pusha
xchg
add
mov
jge
stos
imul
add
add
add
in
ja
add
add
add
stc
icebp
add
je
data16
add
add
mov
mov
enter
add
add
cmc
push
mov
add
enter
popf
mov
lea
pop
cmpw
jne
push
push
call
mov
add
add
je
test
imul
xlat
mov
add
mov
cmc
mov
jge
add
std
pop
jecxz
roll
jb
add
mov
add
jae
add
add
xchg
add
out
add
lret
lahf
rolb
add
movsb
jecxz
jne
add
jne
jno
add
jb
fcmovnb
aad
add
jecxz
rcrl
lea
pop
mov
push
push
call
add
addb
nop
loope
push
lret
clc
add
mov
add
jne
rolb
pop
add
add
add
mov
mov
call
hlt
add
pop
in
pop
int3
jno
push
add
add
imul
xlat
mov
add
scas
aam
jle
add
mov
lea
pop
movl
push
shr
pop
jmp
pushl
pop
push
dec
pop
mov
push
shr
shl
sub
pop
mov
push
push
push
push
push
push
push
push
call
push
add
add
out
add
fwait
add
stos
out
sahf
add
test
add
add
out
sahf
pop
movb
std
add
add
add
jge
mov
test
in
mov
cwtl
filds
push
enter
test
add
push
add
mov
add
pop
mov
push
push
push
push
pop
add
sub
sub
add
pop
dec
dec
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
rolb
mov
mov
test
mov
xchg
mov
hlt
call
imul
add
push
aam
xchg
add
xlat
add
mov
add
iret
add
addl
std
add
add
add
addl
in
add
out
xlat
add
xchg
stos
ja
lea
addl
add
test
test
mov
lea
pop
push
push
push
push
push
call
add
add
add
jne
flds
add
into
lock
out
add
jecxz
mov
fsubrl
add
xchg
add
movb
test
popl
icebp
mov
add
ret
xchg
mov
add
lds
flds
je
cmpsl
pop
add
xchg
add
std
in
mov
jno
cmpsl
test
andb
mov
shl
movsl
add
push
mov
lea
pop
call
push
ror
pop
cmpl
je
push
push
add
sub
push
and
add
shr
shl
lea
sub
dec
shr
ror
pop
lea
pop
push
push
lea
push
call
add
jge
add
jno
fwait
mov
out
add
add
pop
cmpsb
out
mov
lods
call
jle
adcl
stc
add
stc
add
add
push
add
add
je
movsl
add
out
fwait
clc
in
loopne
js
testb
pop
add
add
arpl
out
cmc
popl
jo
lret
add
add
jnp
enter
cld
lea
pop
push
call
push
rol
sub
inc
pop
cmpl
je
push
push
lea
ror
rol
sub
push
or
not
add
ror
xor
sub
sub
xor
lea
ror
pop
add
rol
shl
pop
push
lea
push
lea
push
lea
push
push
push
call
add
rcrl
pop
mov
push
add
lods
add
ljmp
push
loope
mov
int3
mov
add
add
add
fildl
xchg
xchg
or
add
int3
out
pop
jae
idivb
add
mov
xchg
out
test
jecxz
push
add
lret
fcoms
iret
add
jl
mov
mov
fcompl
sbb
push
push
lea
push
push
push
lea
push
push
push
call
jbe
pop
push
fnstsw
add
out
add
add
mov
mov
xchg
pop
addl
lret
push
mov
mov
add
jo
filds
hlt
bound
fs
add
les
push
jle
ret
test
add
add
iret
shlb
xchg
mov
lea
pop
call
push
sub
pop
cmpl
je
push
push
dec
ror
add
push
or
inc
add
add
sub
add
sub
pop
ror
sub
shr
pop
push
pop
push
push
push
lea
push
call
xchg
add
fldl
xchg
mov
mov
add
in
mov
add
add
add
add
loopne
pushf
cmc
imul
in
faddl
mov
add
mov
stos
enter
loopne
mov
mov
add
into
add
pop
fmulp
stc
idivb
add
add
add
divl
popf
ja
add
add
jp
add
mov
inc
into
add
or
call
cmpl
je
push
push
xor
lea
push
and
add
xor
dec
sub
not
not
shl
pop
sub
lea
lea
pop
push
ror
pop
push
push
ror
rol
rol
pop
call
push
push
push
push
push
push
push
push
call
fldl
xchg
add
push
nop
add
mov
add
add
push
mov
jmp
aam
add
add
mov
mov
add
roll
add
in
aad
push
jmp
push
jne
test
popf
add
fwait
add
in
add
incb
add
lret
add
loope
test
add
mov
lea
pop
cmpl
je
push
push
push
or
not
add
ror
shl
sub
sub
inc
pop
xor
pop
push
push
pop
call
push
push
push
lea
push
push
push
push
call
push
testb
pushf
lds
add
add
arpl
ljmp
in
jecxz
add
fstpl
add
mov
lods
jnp
cld
adcl
add
mov
scas
cli
mov
add
jmp
out
ja
add
add
jo
add
flds
push
mov
lea
pop
cmpl
je
push
push
ror
push
or
not
add
inc
sub
sub
not
pop
add
sub
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
popf
cli
cmpsl
add
xchg
cld
mov
loopne
push
loope
add
xchg
out
add
xchg
jae
add
jl
add
add
xchg
lret
add
add
addl
lods
in
add
pop
add
movsb
sbbl
filds
idivb
add
aad
add
add
fisubrs
mov
lea
pop
push
push
lea
pop
call
cmpl
je
push
push
shr
sub
shr
push
sub
add
add
sub
add
sub
rol
shl
add
pop
pop
push
sub
sub
pop
push
push
push
push
call
je
add
add
add
pop
js
add
sahf
add
lods
mov
add
add
xchg
cli
add
add
add
add
fists
add
add
jmp
shl
add
add
mov
lods
add
mov
add
add
jle
add
add
add
add
mov
cmpsb
lcall
mov
add
fwait
mov
lea
pop
call
cmpl
je
push
push
dec
sub
add
push
push
pop
add
rol
inc
not
sub
ror
sub
pop
lea
inc
shl
pop
push
inc
pop
push
push
shr
dec
add
pop
call
cmpl
je
push
push
add
shr
push
and
add
dec
ror
sub
shl
pop
add
add
dec
pop
push
shr
inc
rol
pop
push
call
push
dec
sub
dec
pop
cmpl
je
push
push
sub
add
shr
push
or
not
add
lea
dec
sub
sub
shl
ror
pop
not
shl
pop
push
push
push
push
push
push
push
call
add
add
fstpt
add
add
add
popa
add
std
push
gs
push
fadds
add
je
addr16
lods
fbld
mov
add
jle
and
out
jbe
add
add
test
repnz
xchg
aad
mov
mov
insb
testl
xchg
pop
pop
mov
add
mov
int3
lea
pop
call
push
ror
not
lea
not
pop
cmpl
je
push
push
not
lea
not
xor
push
or
inc
add
add
sub
sub
sub
rol
lea
pop
lea
pop
push
push
push
push
call
hlt
bound
fldl
add
cmpsb
bound
hlt
mov
mov
add
add
add
enter
lods
push
mov
pop
int3
js
cli
add
xchg
add
add
jl
rorl
add
mov
scas
add
arpl
add
insb
jge
pushf
fwait
add
pushf
jns
std
add
adcl
or
call
push
push
push
lea
push
push
push
push
lea
push
push
call
add
fdivr
or
fistps
pop
push
loope
in
pop
xchg
push
mov
add
add
add
add
jae
lods
loope
add
movsb
pushf
pop
add
test
test
jge
popa
movl
add
icebp
call
mov
add
ja
fwait
add
add
mov
add
add
test
repnz
out
mov
lahf
xlat
cwtl
add
and
cmpl
je
push
push
shl
sub
push
sub
add
xor
sub
sub
xor
pop
pop
push
pop
push
call
push
dec
add
pop
cmpl
jne
push
lea
pop
mov
movl
push
push
push
push
push
push
call
jno
pushf
add
mov
loopw
add
add
add
iret
addl
add
jae
flds
add
lret
add
fisubs
cmpsl
jecxz
add
add
fsubs
add
pusha
jbe
lods
add
loope
roll
addl
sti
mov
cmc
jecxz
fwait
add
addr16
jbe
test
lea
pop
jmp
push
rol
lea
xor
not
pop
xor
pop
push
lea
pop
pop
push
dec
rol
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
leave
cmp
xchg
add
add
add
add
lds
cmc
pop
iret
add
lcall
add
movl
iret
scas
mov
mov
pushf
jns
pop
testl
call
mov
add
pusha
add
pusha
int3
add
data16
push
push
push
push
lea
push
call
fcomps
push
add
lock
add
leave
lahf
jno
movsl
add
add
add
add
outsl
fisttps
add
mov
js
add
popa
add
add
jns
push
add
add
ja
add
cmpsb
add
pop
div
mov
pop
add
push
xchg
ror
imul
in
add
lock
lea
pop
ret
push
push
call
mov
pop
mov
rcrb
add
bound
xchg
add
add
outsl
add
add
add
ja
add
add
add
add
int3
add
add
add
add
mov
mov
cmpsb
bound
rolb
pushf
add
std
add
jge
call
add
rcrl
xchg
jns
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
call
push
enter
add
lahf
test
test
arpl
add
push
adcb
mov
jmp
add
add
popa
add
roll
enter
lods
movsb
out
add
leave
in
add
scas
aad
aad
add
jb
stos
jnp
add
ret
movl
add
jno
add
jmp
filds
lods
arpl
add
aam
bound
mov
push
sub
pop
add
push
lea
push
push
push
push
call
ljmp
add
add
add
xchg
add
sahf
filds
add
out
add
add
pop
in
add
cli
addb
add
add
mov
bound
je
popf
add
pop
push
add
mov
mov
add
mov
push
bound
add
subl
jmp
add
mov
lea
pop
cmpl
jne
push
push
lea
shl
shr
push
push
pop
add
add
sub
not
sub
sub
shl
dec
add
pop
lea
shl
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
add
add
stc
mov
filds
mov
add
outsl
cwtl
mov
push
xlat
adc
mov
arpl
push
pop
shll
add
push
scas
add
add
ja
pop
add
fwait
ret
nop
mov
mov
rcr
add
je
out
jecxz
add
add
fs
iret
xchg
lret
data16
icebp
add
add
mull
add
xchg
fidivl
and
pushl
call
push
inc
rol
pop
push
call
jmp
push
sub
not
pop
cmpl
je
push
sub
inc
sub
inc
pop
cmpl
jne
push
push
push
call
fsubrs
into
mov
add
sahf
add
sti
flds
fiadds
push
add
mov
fldl
stos
add
faddl
jne
add
mov
popf
add
add
add
add
lds
xchg
mov
gs
lret
mov
ljmp
jp
jmp
movsl
add
aad
call
bound
leave
add
push
lea
pop
pop
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
jmp
les
cld
mov
jo
add
add
add
mov
fistpl
add
push
add
test
out
add
cmpsl
add
add
add
xchg
xchg
add
jl
outsl
mov
add
loopne
movsl
loope
mov
icebp
add
mov
add
int3
xchg
add
lcall
iret
add
stos
mov
mov
and
pop
pop
pop
push
add
pop
leave
push
rol
inc
shr
pop
add
push
sub
pop
ret
push
sub
shl
ror
sub
pop
jmp
push
inc
pop
cmpl
jne
push
push
shr
ror
push
xor
add
not
lea
lea
shr
sub
inc
sub
pop
shl
not
pop
push
lea
push
push
push
push
lea
push
lea
push
call
jno
mov
fiadds
add
iret
add
mov
jbe
xchg
add
in
je
cmc
add
add
fs
jno
fnstcw
mov
jecxz
clc
scas
shl
int3
add
add
push
roll
add
scas
nop
mov
xchg
jl
xchg
lods
add
add
int
int3
lea
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
stos
xchg
add
xlat
mov
add
add
icebp
add
add
movsb
push
shr
add
push
test
add
shrb
add
add
mov
mov
shll
add
stos
std
std
cli
add
xchg
scas
sti
mov
add
mov
push
add
cmpsb
add
add
add
mov
lea
pop
push
call
jmp
push
lea
push
push
push
push
push
call
add
add
in
add
add
fwait
add
push
add
push
addl
mov
mov
push
add
xchg
out
jecxz
loopne
add
or
rorl
fwait
add
add
imul
in
flds
faddl
rolb
lock
add
add
out
jae
in
stos
mov
add
pop
cmpl
jne
push
lea
push
call
add
mov
mov
lods
pop
fidivrl
out
scas
enter
add
jmp
jnp
insb
ljmp
je
jl
movsl
add
cli
test
add
neg
add
gs
movb
add
mov
pop
test
data16
add
add
imul
js
mov
lea
pop
mov
push
push
push
lea
push
push
lea
push
call
add
std
into
jle
int
gs
rorb
add
add
fildl
fsub
mov
add
cwtl
add
gs
lret
add
add
fldt
rcl
mov
addl
add
add
shll
pop
sbb
add
add
hlt
lea
pop
mov
push
push
push
xor
not
sub
push
or
not
add
add
sub
sub
xor
add
sub
pop
add
xor
pop
push
shl
sub
xor
pop
pushl
call
call
push
push
not
push
and
add
sub
dec
sub
pop
shr
add
pop
push
sub
lea
add
pop
pushl
push
sub
pop
call
push
pop
call
push
push
sub
sub
ror
shr
push
or
inc
add
xor
shl
sub
pop
add
add
sub
pop
push
dec
not
pop
pushl
call
push
lea
push
call
lcall
add
push
add
incb
add
bound
xchg
jl
add
add
add
add
cltd
add
mov
add
add
add
movsb
cmc
mov
lock
pushf
push
imulb
mov
cmc
mov
xchg
lods
push
add
cmpsl
fs
add
mov
call
std
add
mov
add
clc
add
sti
cmpsb
lock
lea
pop
call
push
push
sub
ror
push
push
pop
add
inc
sub
sub
shr
add
pop
dec
pop
push
push
add
lea
push
push
pop
add
shr
add
sub
dec
shr
pop
add
xor
pop
push
push
call
add
call
xchg
sarl
mov
xchg
test
mov
test
jo
add
mov
mov
pop
test
add
jo
popf
popa
push
int
add
mov
mov
add
fwait
add
add
add
add
jmp
lret
mov
ja
aam
bound
pop
call
push
shr
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
cli
out
out
add
mov
loop
add
jmp
pop
jno
jae
insb
roll
scas
mov
ret
jge
add
push
clc
cld
enter
add
faddl
into
fmuls
add
ret
xchg
add
add
add
add
add
andb
int
add
cmpsb
push
mov
test
mov
lea
pop
dec
jne
push
push
push
push
push
call
push
in
add
add
add
lea
mov
addb
fnstcw
scas
arpl
hlt
add
mov
mov
add
add
add
add
pop
sti
mov
add
mov
add
xchg
add
xchg
pop
sarb
mov
loopne
add
add
test
lds
pop
mov
aad
add
push
addr16
add
loope
leave
mov
lea
pop
call
jmp
call
push
push
lea
sub
not
push
or
inc
add
dec
sub
sub
lea
dec
pop
xor
sub
dec
pop
push
add
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
call
pop
jae
jno
add
add
add
sahf
test
hlt
out
mov
add
add
stc
xchg
push
pop
aam
fs
add
les
add
add
fisubrl
pushf
add
cmpsl
sahf
add
notb
push
push
and
mov
lds
out
lock
lahf
divb
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
call
add
negl
jecxz
add
mov
add
add
add
add
xchg
popl
add
scas
lret
fists
pusha
add
shll
popf
jl
stos
fldl
add
add
add
add
roll
add
lea
lock
loope
stos
int3
add
add
jno
add
add
pop
push
call
mov
push
push
push
push
push
push
call
add
add
fstl
movsb
add
mov
scas
iret
mov
add
insb
lods
mov
jbe
enter
imul
add
movsl
pusha
loope
jmp
test
add
lret
fiaddl
mov
add
mov
push
mov
jo
add
add
mov
lea
pop
lea
push
push
inc
push
or
not
add
shl
sub
sub
sub
pop
pop
push
push
call
add
xchg
mov
add
mov
add
icebp
xlat
mov
pop
sti
add
cmpb
fidivl
push
add
rolb
or
sahf
pop
xorb
in
sbbb
add
pop
call
add
mov
add
loope
add
add
add
fistpll
pop
add
add
jp
hlt
bnd
bound
mov
lea
pop
pushl
push
ror
pop
call
push
push
push
push
push
push
push
push
push
call
test
hlt
mov
add
xchg
add
mov
push
insb
fnstenv
add
jbe
xchg
add
sahf
rol
jmp
add
popf
jbe
jmp
enter
hlt
add
test
iret
add
push
add
jecxz
fs
add
add
popf
xchg
cmpsb
mov
add
jp
add
incb
add
mov
test
hlt
lea
pop
call
push
push
dec
lea
not
push
and
add
sub
inc
sub
lea
shr
pop
add
add
pop
push
ror
lea
shl
dec
pop
pushl
push
lea
pop
call
push
lea
shl
pop
call
mov
push
push
push
lea
push
lea
push
push
call
add
push
addb
movsb
add
call
fildl
add
pop
jbe
xchg
add
insb
add
sahf
movsb
addl
add
add
xchg
pushf
mov
add
push
jge
stos
loopne
fiadds
stos
add
gs
jmp
aam
lret
aad
clc
add
add
mov
lea
pop
lea
push
push
dec
dec
sub
push
and
add
sub
add
rol
xor
pop
rol
add
shr
pop
push
lea
push
push
push
lea
push
lea
push
push
push
call
push
std
add
add
mov
add
add
add
cltd
outsl
mov
cmpsl
jmp
in
fnstcw
jne
add
add
add
add
add
add
add
push
jmp
xchg
out
add
mov
gs
fldcw
test
mov
divb
in
add
xchg
imull
add
add
mov
add
push
xchg
add
lea
pop
pushl
call
push
add
shr
pop
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
add
leave
stos
add
rolb
add
mov
pop
lods
and
jae
out
int3
add
jno
cltd
js
add
cwtl
js
add
test
add
add
out
mov
addb
add
xorb
add
mov
add
jae
mov
in
out
cli
mov
repnz
aam
mov
data16
in
mov
fimull
pop
push
push
push
not
lea
dec
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
lret
loopne
test
jp
int3
add
movsb
mov
imul
out
add
cmpsb
jnp
lods
mov
pop
fs
add
sbbl
mov
js
add
scas
test
xchg
int3
cld
jle
popa
add
add
add
ja
add
jnp
sti
cltd
add
test
add
cli
add
jecxz
imul
add
mov
sti
jbe
mov
lea
pop
pushl
push
push
not
push
sub
add
add
sub
sub
xor
shl
ror
xor
pop
add
ror
sub
rol
pop
push
lea
push
push
push
lea
push
push
call
popf
add
mov
add
in
pusha
loope
add
ret
test
jb
add
add
movsl
fstpt
out
add
enter
fldl
add
roll
mov
cmc
gs
push
outsl
add
clc
add
add
add
add
std
mov
fwait
shl
adc
add
add
add
hlt
lea
pop
push
push
lea
push
push
push
call
fdivrs
je
cwtl
add
cld
add
add
mov
popf
add
enter
add
add
add
gs
mov
sarl
shl
add
add
scas
mov
add
lock
mov
add
add
lods
fisubrs
add
mov
sarl
std
add
cli
add
add
fadd
rolb
pop
add
mov
lea
pop
call
push
push
xor
ror
lea
push
and
add
shl
not
shl
sub
sub
add
sub
lea
pop
rol
add
add
pop
pushl
push
not
pop
call
push
push
push
lea
push
push
push
call
stos
add
add
add
mov
pop
add
out
out
add
mov
mov
add
addb
je
add
mov
out
add
test
in
sarl
aam
cwtl
cmpsb
rcr
add
add
add
rcl
add
add
notb
push
jo
add
in
add
add
fidivrl
insb
mov
lea
pop
push
call
push
push
push
or
inc
add
add
inc
inc
sub
ror
sub
pop
shr
shl
pop
push
shl
sub
rol
pop
pushl
push
push
push
lea
push
call
add
pop
mov
insb
jle
lods
lret
loop
add
roll
aad
add
ficompl
mov
jge
xchg
add
add
jge
ret
bound
xchg
sti
add
cld
mov
add
add
add
mov
add
add
mov
lea
pop
call
push
lea
ror
pop
call
push
sub
lea
pop
jmp
push
shl
add
pop
pushl
mov
push
ror
inc
sub
pop
jmp
push
push
add
push
or
not
add
not
rol
dec
sub
sub
ror
ror
pop
sub
dec
not
pop
push
push
push
push
call
cmpl
xchg
les
cwtl
add
add
jb
mov
lret
add
in
loop
mov
les
insb
add
add
pop
int3
add
push
add
jnp
les
andb
lret
clc
mov
jl
mov
jl
xchg
pop
pop
add
add
pop
add
pop
pop
hlt
js
test
gs
add
add
add
addb
mov
jo
out
add
mov
lea
pop
pushl
push
add
sub
dec
pop
call
push
call
push
push
xor
push
or
not
add
add
sub
rol
pop
add
lea
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
stos
mov
add
in
icebp
add
mov
add
loop
popa
jmp
ret
stc
imul
les
mov
stos
add
mov
arpl
ret
add
pop
pop
add
lock
cmpb
add
xchg
lahf
add
je
add
and
pushl
push
push
push
call
add
jle
lods
loopne
add
add
popa
add
add
cld
add
mov
fs
lods
cmc
add
arpl
add
andl
jnp
shlb
add
in
mov
in
out
roll
add
add
int3
jbe
fprem1
mov
jle
mov
sahf
lods
mov
or
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
rcr
imul
mov
pop
add
jle
add
add
add
jmp
add
lea
mov
out
add
fldl
pop
lahf
add
clc
add
int3
pop
cld
shlb
les
stc
stc
add
lcall
push
loope
popf
xchg
add
lea
pop
call
push
xor
sub
inc
add
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
fs
add
add
test
add
jae
pushf
xchg
fidivs
add
xlat
clc
add
add
movsb
pop
test
add
repnz
pusha
hlt
call
clc
add
push
mov
call
add
andl
stos
nop
add
cli
add
add
add
add
add
xchg
in
add
push
cmpsb
lea
mov
lea
pop
add
pop
pop
push
rol
not
pop
pop
pop
push
ror
lea
not
inc
pop
leave
add
push
push
call
add
out
icebp
mov
add
add
push
add
add
cmc
pop
add
aad
cmpsl
add
icebp
add
nop
lods
add
add
addr16
add
pop
mov
ret
push
add
int3
add
add
add
add
xchg
test
repnz
cld
add
push
jns
lahf
fimull
pop
ret
push
push
push
push
push
lea
push
push
lea
push
call
add
scas
cmpsl
arpl
fisttpl
jne
add
add
add
pop
add
call
xchg
jge
hlt
test
cltd
add
ljmp
test
add
mov
add
in
lods
add
add
ret
call
imul
js
add
jns
mov
in
add
add
push
mov
lea
pop
leave
push
shl
pop
ret
push
sub
rol
pop
push
push
ror
dec
pop
mov
push
push
push
push
push
call
icebp
add
add
add
add
icebp
add
jle
scas
fisubs
add
repnz
add
mov
mov
add
mov
add
arpl
xorb
add
mov
popf
mov
add
mov
in
cmp
add
add
js
mov
jnp
mov
mov
lea
pop
cmpl
jne
mov
jmp
push
push
push
push
push
push
push
push
call
add
mov
xchg
pop
add
call
andb
sti
faddl
lahf
add
push
jbe
lret
movsl
shll
leave
fmulp
cmpsb
mov
add
gs
pop
mov
jge
add
add
add
insb
lretw
pop
mov
and
lahf
add
add
add
mov
add
les
inc
or
ret
insb
cmpsb
mov
loopne
xor
push
push
lea
push
push
call
add
add
aad
lcall
int3
xchg
add
add
out
add
fxch
add
adcb
popf
addb
mov
fsubrl
add
cltd
pop
cld
mov
add
mov
in
lret
add
add
cld
subb
add
pop
gs
ljmp
add
add
test
mov
add
pop
xor
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
js
add
xchg
xchg
pop
add
enter
movsb
loopne
scas
cli
add
add
cmpsl
fadd
lock
fisubs
je
jecxz
add
add
add
popf
test
cmpsb
add
insb
add
push
add
add
add
push
cmpsl
in
mul
add
add
xchg
jb
add
add
cld
add
aad
xchg
mov
lea
pop
xor
dec
sub
push
lea
push
push
push
call
test
add
add
in
add
enter
popa
add
imul
outsl
lret
lds
push
scas
push
popa
mov
add
aad
xorl
out
add
mov
call
add
mov
aad
mov
mov
shl
pop
add
mov
adc
rolb
add
push
add
sub
add
sub
pop
sub
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
xchg
mov
in
add
faddl
lods
movsb
push
lret
fdivrs
jae
mov
roll
add
xchg
jge
add
mov
leave
jbe
add
fiaddl
add
add
jmp
rolb
mov
pop
fnstcw
addl
add
mov
mov
add
icebp
add
push
mov
lea
pop
pushl
pop
push
lea
push
push
push
push
call
xchg
add
hlt
je
std
pushf
mov
lds
add
test
mov
mov
add
sbbb
leave
jecxz
call
add
add
push
pop
addb
popa
fsts
lret
mov
test
jmp
jl
add
add
idivl
mov
push
add
add
test
insb
push
lea
ficoms
adc
sub
push
push
push
push
push
push
push
lea
push
call
mov
xchg
jp
add
in
gs
pushf
add
add
addr16
hlt
mov
add
xchg
add
mov
add
gs
add
add
add
add
lret
scas
test
mov
add
movsb
push
add
xchg
fs
mov
lods
fiaddl
gs
popa
mov
add
add
jnp
add
cwtl
add
mov
add
mov
lea
pop
cmp
jne
push
ror
rol
not
pop
mov
lea
sub
push
push
push
push
call
xchg
rolb
mov
into
sarb
scas
fs
add
lret
jno
data16
push
add
xchg
add
add
in
clc
fisubl
push
add
sahf
mov
add
cld
lods
mov
add
jge
fdivrl
jne
add
cltd
add
cmpsb
xor
add
mov
jne
shll
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
roll
add
add
addb
xchg
jle
add
mov
add
roll
add
add
add
add
mov
je
ret
add
xchg
add
scas
in
xchg
xchg
mov
popf
add
mov
in
out
jecxz
add
mov
push
add
je
add
mov
add
mov
add
add
add
mov
and
jmp
jmp
jle
jmp
pop
pushl
pop
push
lea
push
call
add
add
add
add
add
add
test
in
pop
out
scas
add
jecxz
mov
popa
pop
mov
xlat
add
popf
add
push
movl
mov
add
add
mov
leave
mov
add
mov
addl
xchg
test
add
fmull
jmp
shr
rol
shr
pop
and
push
inc
sub
pop
sub
push
push
push
push
call
flds
add
mov
loope
fst
rcrl
jle
add
stos
push
add
add
push
add
rclb
add
add
xchg
rcl
cmpsb
pop
int3
test
rcrl
scas
add
in
sti
testb
icebp
xchg
jp
clc
push
xchg
iret
add
add
jns
ret
add
cmpsl
add
clc
mov
mov
add
add
xchg
loopne
mov
add
jp
mov
lea
pop
cmp
jne
push
push
lea
push
call
add
add
fadds
pop
andb
add
test
push
add
insb
lret
lahf
jno
add
add
ror
sar
add
out
sbb
add
out
mov
out
jae
movsb
add
cwtl
xchg
add
add
mov
jns
add
clc
add
pop
fwait
jnp
add
add
jne
flds
add
cmpsl
jno
mov
lea
pop
leave
ret
push
add
inc
pop
push
mov
add
push
push
push
push
push
push
push
push
push
push
call
test
js
imul
mov
in
mov
add
les
add
mov
add
clc
add
add
xchg
add
mov
popa
add
add
in
add
pop
sti
subb
add
add
add
mov
mov
mov
stos
mov
xchg
mov
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
jae
xchg
add
pusha
add
fadds
lds
std
add
je
out
jns
add
mov
int3
jae
add
enter
mov
add
push
add
data16
jge
lods
lret
add
data16
scas
cli
add
add
out
repnz
mov
add
add
pusha
sub
push
add
lea
add
pop
push
push
push
lea
push
push
push
push
push
call
jge
add
arpl
add
loope
icebp
add
bound
add
add
scas
add
in
sbb
add
testb
add
add
add
add
fstpl
jge
add
add
imul
andb
add
jae
mov
add
add
add
add
add
xchg
ljmp
in
jge
jmp
add
add
rolb
mov
lea
pop
push
push
lea
push
push
push
call
xchg
add
pop
lods
mov
stos
scas
enter
lods
imul
iret
push
add
mov
pop
pop
add
add
add
add
ja
lret
loop
add
fcomps
sahf
add
cmpsl
mov
cmpsl
cmpsl
xchg
in
add
add
xchg
faddl
leave
add
add
xchg
popl
xchg
into
outsl
enter
lea
pop
mov
lea
push
inc
sub
pop
sub
push
lea
push
lea
push
push
call
sahf
insb
add
jmp
aam
pusha
mov
pop
lea
jmp
imul
roll
mov
icebp
pop
int
xchg
shll
add
pop
addl
lret
mov
in
loop
mov
fidivl
add
add
add
scas
xchg
lods
mov
add
add
xchg
add
lret
les
pop
mov
shr
add
push
not
pop
mov
add
mov
push
push
push
push
push
push
call
jne
add
out
add
add
add
push
add
add
fbld
in
lods
pop
mov
out
add
iret
shlb
add
add
xchg
cmp
jns
add
arpl
add
lea
lock
loopne
int3
xchg
add
pusha
cwtl
add
jb
mov
aam
bound
pop
add
push
shl
pop
xor
mov
and
push
inc
pop
call
push
push
push
lea
push
call
add
std
aam
add
leave
movsb
add
add
addb
pop
sahf
sarb
add
movl
mov
aam
mov
jae
add
add
add
stos
add
add
stos
add
mov
jae
mov
in
push
addb
fldt
mov
jge
imul
je
mov
cmpsb
fnstsw
loope
andb
stos
jae
repnz
jb
mov
lea
pop
add
push
xor
sub
lea
pop
cmp
je
push
shr
lea
pop
add
cmpl
jne
xor
push
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
mov
jmp
fwait
add
mov
jecxz
mov
rolb
test
int
add
addl
add
mov
push
cltd
add
add
popa
adcb
jno
lods
leave
scas
cmc
mov
incb
add
add
add
cmpsl
lock
mulb
mov
mov
movb
int3
add
sub
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
jp
test
push
add
shll
mov
add
pushf
pusha
add
add
add
ja
add
add
pop
add
xchg
gs
fdivr
push
xchg
arpl
mov
test
pop
loopne
add
int
add
jl
lcall
scas
add
add
sbb
push
add
push
xchg
andl
pop
pop
push
sub
pop
leave
ret
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
push
xlat
add
add
stos
mov
mov
jno
mov
jno
jnp
add
clc
arpl
add
push
mov
popf
clc
out
mov
subl
pusha
int
mov
clc
pop
and
std
jle
add
les
lret
add
mov
push
add
aam
add
in
add
add
mov
mov
stos
iret
stos
add
ret
add
cwtl
add
hlt
lea
pop
add
push
push
lea
push
lea
push
call
stos
add
negb
jns
mov
add
clc
add
mov
lret
add
jl
xlat
lcall
add
scas
jp
mov
xchg
mov
shll
add
roll
mov
jl
iret
hlt
arpl
add
ljmp
testl
add
add
test
add
jge
nop
mov
icebp
add
add
icebp
rolb
repnz
lea
pop
push
push
push
shl
shl
pop
pop
push
not
pop
pop
push
push
push
push
lea
push
push
lea
push
call
pop
mov
rcr
add
test
mov
mov
add
mov
bound
arpl
cli
jnp
movsb
fxch
add
jl
mov
xchg
movsl
add
xchg
add
mov
mov
add
in
cwtl
xlat
add
add
xchg
movsl
xchg
add
add
aad
mov
add
mov
lods
rclb
push
lea
pop
mov
push
shr
pop
push
call
xor
push
dec
pop
pop
push
lea
rol
ror
pop
pop
pop
pop
push
shr
sub
pop
pop
push
push
push
push
lea
push
call
xchg
popa
int3
jmp
fs
sti
icebp
add
add
mov
mov
add
cld
mulb
mov
movsb
fldl
add
mov
xchg
push
add
lea
mov
data16
push
test
add
add
add
add
pop
add
scas
ret
xchg
add
add
lea
add
movsb
test
add
add
jge
add
pop
leave
push
not
pop
ret
push
mov
push
push
lea
push
push
push
push
push
call
je
push
add
pushf
jns
add
add
out
test
xchg
cld
pop
pop
imul
xchg
cmc
mov
cmc
fsubp
pop
add
jo
jp
add
fadds
pop
out
add
add
pop
fildl
rol
jne
add
shrl
lods
mov
mov
mov
add
stos
out
add
xlat
int3
ret
add
mov
pushf
mov
pop
aam
add
ret
roll
mov
sbb
add
push
inc
inc
pop
push
push
dec
pop
push
push
xor
sub
rol
shr
pop
push
push
dec
sub
inc
sub
pop
push
push
sub
dec
sub
add
pop
mov
push
shl
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
jns
pop
add
jae
add
test
add
insb
cli
xchg
mov
add
fcompl
les
push
push
loope
jmp
mov
add
jl
mov
xlat
gs
fyl2xp1
add
in
cld
mov
add
jo
pop
add
add
mov
cmp
add
xchg
push
mov
add
add
lret
add
add
add
aam
add
lods
add
mov
mov
lea
pop
pop
lea
sub
push
sub
dec
pop
mov
shr
add
push
lea
push
lea
push
push
push
lea
push
call
add
jnp
nop
lds
add
pop
ljmp
imul
enter
pushf
cmpb
stos
mov
movl
xchg
in
xchg
add
mov
add
mulb
xchg
add
add
lea
insb
add
aad
add
scas
push
add
fdivrs
test
cwtl
lea
rolw
jmp
mov
mov
addl
mov
add
push
lea
pop
pushl
popl
mov
push
not
pop
add
push
push
lea
push
push
push
push
push
push
push
call
fildl
les
add
push
fistps
mov
add
cmpsl
in
add
mov
cwtl
cmc
add
bound
push
je
ja
addl
add
addr16
adcb
add
add
add
mov
add
add
lcall
aam
leave
pop
in
in
shrw
scas
add
loopne
add
js
filds
popa
jbe
popa
rorb
fcomp
into
add
pop
xor
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
jb
mov
iret
mov
in
fsincos
add
iret
filds
add
push
add
jnp
mov
xchg
add
add
pushf
add
rcl
mov
in
mov
add
jbe
movsb
add
in
add
add
fadds
rcrb
add
pop
lcall
jne
cli
jo
hlt
lea
pop
mov
add
xor
push
lea
push
call
push
nop
add
add
test
add
add
frstor
in
ljmp
mov
cwtl
pop
xchg
lret
iret
xchg
add
addl
push
jae
push
lret
stc
add
add
insb
add
adcb
add
xchg
mov
sahf
add
add
addl
jecxz
add
addl
sti
repnz
xchg
push
add
pop
call
push
sub
sub
pop
add
nop
push
add
add
xor
pop
nop
push
not
not
xor
pop
cmp
je
nop
push
ror
rol
pop
nop
push
push
push
push
call
mov
add
add
icebp
add
add
popa
sti
js
cmpsb
sti
fmuls
fldl
movsb
mov
pop
subb
add
add
add
negl
stos
add
mov
ret
lcall
insb
mov
in
add
pop
xchg
mov
lea
pop
inc
push
dec
lea
pop
nop
nop
push
push
push
push
push
call
stc
fwait
rcll
push
scas
add
push
jo
ljmp
mov
loope
add
add
incb
add
js
lock
shl
mov
add
nop
subl
outsl
out
stos
add
clc
aam
add
mov
add
movsb
mov
add
rolb
icebp
mov
jbe
add
add
add
ja
add
pop
in
xorl
data16
cmp
jb
xor
jmp
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
add
mov
jo
loope
add
mov
jnp
jbe
xchg
mov
pop
jl
loop
jl
xchg
push
loop
popa
aam
ret
add
scas
aad
bound
aam
pop
sahf
add
imul
jl
data16
mov
jle
add
loope
std
idiv
icebp
add
lea
pop
mov
push
sub
inc
pop
add
push
sub
sub
lea
pop
movzwl
mov
push
lea
push
lea
push
lea
push
call
add
pusha
mov
add
aam
fidivs
loopne
pop
fsubrl
pop
add
enter
mov
in
add
mov
mov
mov
xlat
clc
incb
mov
fldenv
lret
mov
push
cwtl
add
arpl
mov
add
js
pop
in
push
cmc
addr16
int
cmpb
pop
jge
hlt
lea
pop
add
mov
push
shr
add
not
pop
xor
xor
push
push
lea
push
lea
push
push
call
add
lret
add
lods
lds
hlt
pusha
mov
mov
add
leave
pop
add
add
add
fildl
add
loop
addl
add
add
xchg
add
fstpt
mov
popa
add
into
add
mov
add
add
into
imul
adc
shl
xor
push
push
push
call
pop
cld
div
mov
jmp
add
add
fildl
add
add
add
add
flds
add
mov
lret
mov
out
aad
add
mov
mov
testb
mov
push
addl
pop
add
aam
push
add
clc
add
push
aam
cmpl
add
jbe
add
mov
lea
pop
shl
push
push
push
lea
push
push
push
lea
push
call
add
add
scas
push
add
add
xchg
xchg
pop
cmpsl
add
int
lods
stos
add
push
mov
lret
sti
mov
jb
jbe
test
aad
add
int3
iret
add
js
push
pop
ficoms
ja
add
jnp
add
add
cli
add
mov
push
jbe
add
add
in
fsubrp
add
add
fldenv
push
pusha
mov
lea
pop
xor
shl
xor
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
scas
add
sti
add
fdivs
aad
add
add
pop
popa
pop
add
loopne
mov
mov
popf
mov
xchg
std
test
add
roll
jbe
lds
mov
push
add
lcall
jmp
lods
imull
imul
xchg
int
mov
roll
push
add
xchg
bound
pop
mov
add
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
hlt
cli
add
push
add
xchg
lds
jp
add
idivl
add
add
add
loop
in
movsl
add
mov
mov
movsl
add
add
pop
xchg
add
jmp
add
lods
add
add
push
data16
add
sti
cwtl
fs
nop
cmpsl
add
addl
mov
mov
lea
pop
pop
push
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
add
test
add
xchg
push
out
mov
mov
add
fldt
push
movl
mov
scas
pop
add
mov
mov
filds
add
arpl
shlb
add
imul
cltd
out
add
cmpsl
xchg
incb
add
roll
add
stos
xchg
hlt
popa
rorl
pop
pop
pop
leave
push
push
push
call
push
add
vsubss
mov
push
cwtl
test
pop
mov
push
mov
scas
add
cld
ret
add
add
add
add
xchg
add
pop
cld
ret
mov
movsb
lds
rcll
xchg
add
movb
lret
mov
int
add
les
add
jge
jb
xchg
add
add
fstpl
rolb
add
add
sahf
push
add
or
ret
push
push
dec
shl
pop
mov
push
rol
shl
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
les
add
mov
add
faddl
mov
loope
leave
xchg
mov
add
add
faddl
add
mov
xchg
and
jle
ja
les
add
jecxz
lea
addr16
add
add
lods
pop
add
jo
add
mov
xchg
add
movb
mov
mov
lea
pop
push
push
dec
pop
push
push
mov
push
push
lea
push
push
push
push
push
call
bound
push
add
out
in
xchg
xchg
aam
mov
jbe
pop
add
pusha
mov
movsl
add
add
cmpsl
scas
test
out
add
mov
aam
imul
data16
add
addl
outsl
addb
les
add
scas
testb
pop
mov
push
add
mov
lea
pop
mov
push
add
pop
mov
test
je
push
push
push
lea
push
lea
push
call
lcall
sti
lea
pop
lods
xchg
add
sti
add
add
cmc
cmpsb
ficompl
pop
add
ja
add
cli
add
loope
call
mov
aad
pushf
mov
outsl
add
add
addr16
cwtl
mov
xchg
lods
mov
add
sbbb
shrb
add
jb
fiadds
add
pop
mov
push
push
push
push
call
add
add
js
lds
add
jp
add
jp
add
subl
mov
push
jecxz
lea
and
add
add
rolb
add
stos
fbstp
lcall
movsw
into
add
nop
add
shl
add
add
add
out
mov
pop
add
sub
pop
xlat
hlt
add
mov
loop
add
cmpsb
add
sti
mov
lea
pop
test
je
push
add
sub
inc
pop
mov
mov
mov
push
inc
add
not
pop
inc
push
lea
shl
pop
cmp
je
test
je
push
rol
lea
sub
pop
mov
push
add
ror
add
pop
inc
push
pop
cmp
je
push
lea
push
push
call
fmul
je
addr16
mov
lcall
jmp
push
add
add
in
mov
add
add
add
cli
add
jae
pop
add
add
add
test
fcoml
xlat
hlt
add
push
mov
add
add
add
sahf
pushf
lcall
je
jns
mov
add
bound
add
gs
add
cli
add
lea
pop
test
jne
push
push
push
push
push
push
push
push
push
call
out
add
add
push
lret
add
add
enter
in
push
jp
add
add
add
int3
nop
add
push
mov
pop
jns
stos
sti
add
stos
mov
pop
iret
pop
lret
pusha
mov
jo
add
ret
add
in
pop
add
add
test
mov
add
lea
icebp
shl
jl
mov
leave
stc
pusha
add
data16
xor
push
add
lea
pop
pop
push
lea
push
push
lea
push
push
push
push
push
call
rorb
mov
add
test
jmp
in
lea
add
add
fwait
sar
lock
push
rolb
add
adcb
mov
add
ja
movsl
cmpsl
add
pop
lds
pop
mov
clc
add
popl
cmc
add
out
popf
sahf
push
mov
add
bound
pop
mov
lea
pop
pop
push
shl
pop
pop
pop
leave
push
push
call
fiaddl
add
add
mov
add
repnz
add
xchg
roll
fbld
in
jne
xchg
mov
add
mov
mov
rolb
add
pusha
xchg
in
add
cmp
add
add
jp
pop
out
out
movsl
mov
add
mov
mov
fadd
js
test
enter
mov
lea
pop
ret
mov
push
rol
inc
sub
pop
inc
cmp
jne
push
lea
push
push
push
lea
push
call
popf
fsubp
add
out
in
mov
add
jmp
roll
xchg
int
xchg
add
imul
cli
add
arpl
mov
imul
xchg
data16
xchg
add
add
popf
loop
add
add
jecxz
add
xlat
add
add
add
pushf
pop
add
imul
pop
outsl
add
hlt
lea
pop
lea
mov
push
push
call
fwait
scas
fadds
xchg
add
mov
addb
sar
push
jo
sahf
xchg
add
icebp
movb
add
xorb
xchg
mov
add
flds
incb
mov
jns
addr16
fiaddl
into
popf
mov
add
in
rolb
add
add
movsb
add
sahf
test
mov
cmpsb
mov
je
repnz
mov
lea
pop
test
je
push
sub
pop
mov
push
push
push
push
push
push
push
lea
push
call
fiaddl
data16
xchg
lock
scas
jo
js
fcoms
jo
repnz
pop
insb
mov
add
add
add
add
add
add
add
nop
cltd
popa
add
lock
xlat
add
add
push
add
push
add
pop
pop
test
lods
mov
push
add
xchg
imul
fcoms
loopne
add
mov
and
movb
loopne
test
call
cmp
jmp
dec
cld
and
push
lea
push
push
call
clc
icebp
jge
add
mov
add
pop
mov
add
add
test
xchg
loope
lock
into
add
add
pop
add
test
push
xchg
fwait
loope
int
fmul
xchg
add
push
pop
sti
in
lcall
add
fwait
add
xchg
mov
cli
insb
or
pop
add
add
fwait
mov
lea
pop
mov
push
lea
push
push
call
add
mov
fnsave
add
imul
add
add
add
test
jge
add
xlat
add
iret
mov
addb
movsl
fcomp
add
add
hlt
jge
shrl
mov
mov
fwait
pop
cltd
popa
xchg
push
mov
imul
test
repnz
add
mov
add
add
scas
add
or
test
je
mov
add
push
push
lea
push
lea
push
push
call
add
sahf
inc
imul
hlt
leave
add
lods
add
mov
mov
add
mov
add
fmull
add
movl
add
add
pusha
jmp
pop
jb
rol
shlb
stos
test
add
add
fistpll
std
test
lea
add
add
add
std
jl
scas
xchg
je
xlat
mov
lea
pop
cmp
je
push
add
sub
pop
jmp
xor
push
sub
pop
pop
push
push
push
push
push
push
call
shlb
add
jmp
xchg
mov
int
xlat
mov
add
pop
loope
stos
mov
add
pop
add
call
add
leave
add
mov
jnp
add
shll
xchg
in
add
ja
xchg
add
add
add
test
iret
shr
ror
shrb
sbb
pop
push
sub
dec
sub
pop
pop
push
push
push
lea
push
push
call
cltd
jle
shl
add
jl
cld
add
add
mov
cmpsb
add
jl
add
imul
shll
out
shrb
int3
push
fwait
loope
mov
add
gs
add
push
ja
add
mov
int3
add
hlt
add
aad
push
push
push
add
add
push
fisubl
scas
add
mov
cltd
push
orb
leave
ret
lea
push
sub
dec
pop
pop
pop
push
pop
pop
pop
push
not
xor
sub
add
pop
leave
ret
mov
push
push
call
add
leave
test
add
add
sarb
jns
add
add
add
add
add
add
push
add
lea
loop
rcl
add
add
fcomp
mov
out
popa
out
jl
fnsave
add
out
add
push
jp
add
add
add
test
aam
rolb
sbbb
add
add
mov
lea
pop
pop
push
pop
pop
push
push
push
push
lea
push
lea
push
call
add
mov
add
add
add
movsb
lods
xchg
add
add
add
fldl
pop
int
fdiv
add
add
int3
jmp
push
add
pop
push
sub
push
fisttpll
add
add
lahf
xchg
jns
add
leave
add
mov
loopne
xlat
mov
add
addb
pop
out
loopne
cltd
loope
mov
sbb
push
add
not
pop
pop
leave
ret
push
push
lea
push
call
add
popf
add
movsb
xor
add
pop
pop
add
aad
add
jmp
xchg
mov
add
fldpi
add
add
testb
add
add
popf
or
xchg
test
mov
add
add
xchg
mov
add
mov
add
add
ljmp
lods
mov
lea
pop
rol
rol
xor
push
push
call
mov
add
aam
mov
outsl
add
roll
jecxz
addl
push
add
jmp
push
cmpsl
mov
les
js
add
mov
jno
add
add
jl
add
fwait
mov
mov
pop
int
icebp
insb
add
cmpsl
add
orb
clc
test
in
std
mov
and
in
lods
pop
jnp
add
add
push
add
add
mov
arpl
pop
inc
cmpb
jne
push
lea
add
pop
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
xchg
mov
sti
adc
mov
sti
test
movsb
sub
sti
mov
mov
add
lock
cmpsl
xor
je
push
in
or
int
mov
cmp
ss
push
and
and
jg
jnp
adcl
movsb
xchg
mov
das
in
adc
fdivp
jbe
lret
div
in
adc
arpl
lds
or
ljmp
jns
shll
xchg
mov
inc
inc
mov
shl
push
aas
mov
jnp
xor
cmp
cld
mov
imul
mov
fsubrs
ds
frndint
ds
jp
or
mov
jns
push
inc
loope
test
mov
xor
arpl
sbb
cmpsl
add
leave
fmull
or
or
add
xor
bound
xchg
fmull
movsl
adc
aaa
lds
out
gs
jl
fnsave
dec
adc
out
adc
sti
push
xchg
aam
cmp
call
movhps
cld
dec
mov
jle
xchg
sub
inc
ja
lret
cmp
je
insl
je
dec
nop
add
mov
fwait
aad
aas
dec
mov
xchg
xchg
sbb
repz
nop
cmp
cmp
fwait
shlb
fistl
mov
add
or
sub
push
fcmovb
jns
and
dec
jmp
xchg
cmpsb
mov
sbb
mov
cmp
and
lret
mov
or
jp
mov
inc
inc
ljmp
sub
pop
andl
ficoml
mov
lds
mov
adc
test
pop
pop
fs
repz
sub
push
je
inc
shll
push
fwait
stos
andb
sub
mov
aaa
imull
iret
jbe
sub
ret
or
sbb
or
lods
xchg
aad
adc
insl
out
cmpsb
lret
mov
pop
cs
dec
pop
and
jl
and
add
dec
xchg
and
jl
fs
push
movsl
repz
jmp
mov
aaa
leave
das
dec
xchg
in
mov
cltd
fildl
xchg
add
imul
jb
repz
sub
cmp
mov
insl
subl
adc
and
fisubrs
outsb
mov
popa
mov
jnp
ss
repnz
jg
lods
in
nop
xchg
dec
push
cmp
cmp
adc
in
cmp
es
xor
pusha
addr16
cmp
xchg
in
mov
mov
imul
hlt
adc
dec
fdivl
sti
cmpsb
inc
sarl
xor
data16
popa
push
inc
daa
int
cli
enter
adc
repz
std
in
pop
or
xorl
jle
lods
add
loopne
clc
std
std
and
pusha
xchg
lock
mov
push
mov
mov
mov
mov
imul
mov
sub
xchg
mov
mov
and
int
ret
mov
int3
and
mov
enter
jnp
xchg
push
sti
imul
pop
rorl
push
icebp
xchg
mov
or
pop
dec
subl
sub
ja
mov
push
cmp
dec
xchg
das
and
mov
insl
sbb
sub
repnz
cmpsb
jl
push
and
push
loope
xchg
test
sub
pop
loopne
sbb
jno
cmp
inc
andb
lods
mov
arpl
repnz
mov
nop
or
imul
addl
mov
inc
movsb
xchg
and
xor
or
ud1
cmpl
sbb
inc
mov
push
sbb
out
mov
mov
sahf
idivb
cmc
adc
jge
jmp
rcl
aam
out
push
xorb
jb
pop
and
ss
scas
cltd
nop
es
cs
sub
shl
push
rorb
popf
popf
and
xor
aaa
test
cltd
gs
sbb
negb
movsl
xchg
scas
in
push
sbb
xor
insl
xor
mov
dec
cmpsl
ret
testl
sbb
push
out
xchg
and
dec
inc
push
cmc
ljmp
pop
and
inc
clc
jg
call
xor
scas
call
rolb
or
pop
popa
movsl
inc
inc
or
pop
xchg
mov
jg
adc
sar
pop
std
dec
dec
dec
lea
test
mov
mov
ret
inc
cmp
insl
mov
js
pop
mov
xor
jg
pop
add
fstps
hlt
xorl
mov
push
mov
mov
daa
add
dec
adc
mov
das
mov
adc
aas
cmp
xor
in
dec
imul
cmpsb
pop
stos
inc
mov
arpl
ret
lea
int
xchg
push
mov
cmpl
sbb
insl
loop
lods
jle
sbb
xor
imul
mov
fcompl
xchg
dec
add
jle
xchg
sbb
adc
xlat
rol
pop
adc
xchg
xorw
test
loope
iret
js
inc
aas
sbb
in
ficoml
sti
test
out
ret
jle
xchg
jmp
xor
shl
adc
lods
xchg
mov
mov
shlb
pop
and
xchg
cmp
or
fwait
push
xchg
mov
and
sub
mov
addb
je
ja
cmc
cmp
sbb
xchg
aad
test
mov
ret
and
cmp
imul
xchg
mov
xchg
xor
cwtl
dec
leave
push
jp
outsb
or
xchg
pop
cmp
pusha
xchg
sub
xor
mov
popaw
scas
data16
xor
sbb
les
xor
es
negl
xor
jne
shrl
daa
push
xchg
mov
movsb
push
mov
jb
aad
daa
std
jecxz
mov
or
xor
cmp
xor
enter
pop
fsubl
xchg
jb
cld
int3
gs
sbb
mov
or
jmp
mov
pusha
sti
sti
push
mov
in
outsb
loopne
out
and
aaa
cmp
push
hlt
inc
push
sbb
nop
mov
stos
xor
pusha
cld
cs
xor
repz
in
fmuls
int3
xor
jae
fldl
sub
cvtps2pd
test
shlb
ljmp
mov
leave
sti
mov
or
fisubrs
lock
inc
mov
xor
push
loopne
hlt
cwtl
adc
mov
lea
sub
mov
lahf
cmpsb
into
dec
mov
add
test
popf
daa
int
rorl
test
dec
fnstenv
int
out
daa
fcomip
pavgb
popa
push
enter
xchg
jecxz
jno
lahf
sub
inc
xor
jo
data16
pop
data16
pop
lds
ja
fld
push
sbb
jo
add
or
out
pop
mov
xlat
adc
pop
scas
insl
jecxz
lods
push
in
adc
addb
xchg
dec
dec
cmp
adcl
and
sbb
dec
jl
adcl
enter
push
pop
mov
cmpl
mov
inc
adc
test
nop
cmp
hlt
sbb
cmc
aam
imul
fwait
push
jbe
sbb
out
pushl
aaa
hlt
xor
imul
jge
add
dec
aaa
xorb
add
jae
jge
int
jae
sbb
aas
push
cwtl
cmpl
aas
pop
dec
dec
xor
sti
mov
xchg
dec
mov
jbe
hlt
arpl
shlb
aaa
idivb
adc
sbb
and
xor
xlat
ljmp
mov
adc
pushf
sarl
pop
into
aaa
mov
les
popa
data16
sbb
sub
cmp
sub
lahf
mov
or
das
stc
subb
fildll
and
dec
xor
clc
jp
and
sub
cmp
push
das
mov
loopne
subw
jae
xchg
pop
cmp
jl
test
fnstcw
cwtl
fmull
cld
mov
ljmp
in
xchg
pushf
inc
dec
mov
mov
test
and
incl
mov
adc
sahf
push
inc
ds
push
lods
xchg
shrb
aas
js
ja
pop
push
inc
xchg
popa
sbb
xor
test
inc
or
cmp
out
jg
xor
push
or
mov
or
test
xor
push
xchg
cwtl
push
pop
cwtl
sub
push
mov
cmpsl
outsl
inc
jmp
mov
sbb
or
and
bnd
dec
and
leave
adc
out
xchg
xchg
xchg
xchg
cmp
call
sbb
sti
out
fcoms
mov
fbld
push
out
rclb
adc
xchg
je
dec
push
clc
mov
in
mov
mov
ljmp
sbb
cmp
or
lods
and
add
bound
lret
dec
xor
push
cltd
js
cmp
push
push
sti
xchg
add
outsb
mov
mov
xor
hlt
loop
xor
dec
test
push
dec
outsl
add
movsl
jp
add
sub
mov
scas
jge
loope
in
lret
cltd
cmp
xchg
call
sarb
dec
adc
stos
rcrb
sub
outsl
inc
lock
mov
pop
xor
sub
inc
lcall
sbb
add
lret
addr16
xor
mov
rcrb
in
pusha
cltd
fldcw
push
inc
and
xor
xchg
jb
jnp
mov
adc
lds
adc
push
sub
aas
mov
push
ja
jb
mov
and
fistpl
test
fyl2x
mov
sbb
xor
ds
je
mov
out
je
jl
lahf
mov
push
aas
mov
cmp
cmpb
mov
inc
and
pcmpeqw
mov
scas
xchg
into
lret
dec
push
fisttpl
cmc
test
int
sub
fmuls
or
lahf
cmp
hlt
cmp
dec
dec
push
stc
mov
sbb
mov
cmp
jmp
inc
xor
pop
fadds
and
pushf
loop
aad
cmpsl
andb
xchg
loopne
insb
sub
lcall
scas
dec
ffree
sub
or
jno
aas
enter
xchg
lds
and
mov
stos
repnz
adc
mov
dec
xlat
jnp
or
cmp
adc
out
mov
xor
cmp
mov
and
movsb
xchg
add
pop
sbb
adc
out
negb
testl
les
dec
test
inc
movsl
add
cs
cli
jnp
pop
scas
lock
sub
call
div
inc
lret
ficompl
fisubrs
xchg
jmp
pop
les
imul
cld
sub
jl
popf
sarb
out
pop
jb
hlt
and
add
push
cltd
lea
add
imul
jb
dec
outsl
pop
and
mov
mov
jne
jle
mov
xchg
cmpsl
sub
add
mov
rclb
shr
xchg
or
mov
push
dec
imul
lock
sub
pushf
shl
pop
jbe
and
push
pop
std
jge
addr16
adc
cwtl
pop
das
je
das
or
outsl
stos
add
leave
leave
add
pushf
pop
jno
mov
shlb
and
lock
pop
pop
sub
mov
push
orl
js
icebp
add
fcompl
stos
xor
mov
cmp
out
test
jp
pushf
and
cmp
aaa
icebp
pop
inc
jne
cmp
pop
add
mov
push
sbb
fsts
dec
add
aas
mov
in
mov
and
mov
xor
js
lahf
pop
add
and
int
into
pop
dec
add
aaa
sub
or
loop
outsb
cld
out
push
add
or
sbb
mov
mov
inc
inc
push
adc
pushf
aam
je
fisubrs
push
mov
xor
ficompl
dec
push
sub
popa
frstor
ss
fsub
ret
cmp
test
arpl
rol
mov
insl
xor
cmpsb
ljmp
pusha
clc
xchg
test
imull
add
clc
outsl
xor
xchg
push
inc
test
lds
dec
xlat
adc
adc
push
xchg
daa
push
imul
hlt
jb
enter
out
pop
pop
cld
add
xchg
cmp
mov
bound
enter
in
adc
ret
rorb
pop
enter
lock
sbb
ds
pop
jno
mov
add
std
out
jge
xchg
ljmp
push
mov
pop
fiaddl
pop
xchg
lods
cmp
pop
sub
cmp
lock
test
dec
xchg
pop
inc
out
mov
add
dec
jbe
xchg
mov
fistps
int
mov
inc
pop
pop
aaa
ret
cmp
pop
add
cmp
out
and
push
loope
ret
sbb
sbb
lret
data16
fcoml
inc
in
xor
mov
push
jbe
stos
mov
xchg
xchg
add
mov
inc
push
inc
sub
call
cs
xlat
jl
inc
insb
add
fwait
sbb
mov
int3
and
shr
add
add
data16
mov
push
push
adc
cmp
movsl
inc
xor
loopne
lock
fs
jmp
data16
sbb
ret
arpl
xor
imul
adc
xchg
push
or
mov
sti
push
bound
xchg
xor
imul
and
std
fwait
sub
sbb
hlt
fdivrl
getsec
xchg
adc
push
sub
enter
lcall
int3
scas
dec
and
add
packuswb
outsb
arpl
in
mov
fcomi
arpl
test
fnstsw
push
add
les
imul
adc
hlt
adc
ss
inc
out
pop
inc
xchg
mov
ja
or
push
sbb
mov
mov
cmp
shl
jnp
dec
or
pop
or
jae
stc
and
je
sub
xor
jecxz
pop
cmpsb
bound
sbb
and
ret
scas
fsubrs
enter
dec
test
jp
hlt
mov
jno
push
in
pop
enter
imul
mov
pop
xor
negl
ret
xor
xchg
sbb
jbe
loop
in
cwtl
icebp
out
xlat
inc
out
jl
pop
js
xchg
pop
mov
les
pop
mov
popa
mov
cli
dec
and
add
lret
add
xchg
or
lock
shll
loope
add
enter
lahf
and
add
fwait
out
jbe
jp
cmpsl
stc
push
nop
inc
lds
incb
mov
mov
sbb
dec
lcall
dec
jecxz
mov
xchg
pop
mov
je
ret
and
inc
into
popl
inc
jmp
sahf
cmp
jmp
aam
push
sbb
mov
mov
mov
mov
jge
inc
stos
inc
mov
xchg
rclb
push
pop
or
jg
mov
inc
repz
mov
bnd
icebp
pusha
jl
in
mov
lds
inc
push
bound
jno
mov
test
add
pop
adc
and
loope
movsb
xchg
pusha
movsb
jns
and
jbe
in
sub
jmp
or
jae
mov
add
subl
loopne
jae
dec
ds
jg
pop
adc
mov
mov
xchg
cmp
xchg
sub
mov
inc
push
xchg
popl
jl
add
mov
in
push
call
push
int
pop
xchg
jb
jmp
push
mov
and
add
pop
mov
scas
dec
pop
xchg
push
xchg
outsb
dec
push
sub
xchg
sbb
nop
shr
pop
std
pop
pop
mov
jp
or
sti
popf
or
sar
mov
adc
push
andb
test
xchg
sbb
sub
mov
in
gs
inc
pop
xchg
fldt
sahf
test
loope
jne
mov
jge
inc
fwait
dec
sbb
sbbl
orl
cmp
xchg
pushf
xchg
mov
jl
addr16
movsb
xchg
mov
ja
jo
jl
dec
xchg
push
and
nop
jno
call
cwtl
push
fadds
movsb
lret
repnz
insb
je
xorb
repz
push
jmp
mov
or
hlt
xlat
negb
addb
or
mov
lock
mov
mov
jb
sub
mov
push
ljmp
mov
push
adc
into
stc
aam
sbb
sbb
mov
aam
sbb
stos
popf
lcall
shrl
jb
jle
mov
push
int
jb
std
addr16
shll
shrb
mov
lret
shll
add
push
call
cwtl
push
and
push
lea
fcmovb
mov
aas
ror
lcall
xchg
stos
cwtl
pop
lods
fs
js
dec
jp
and
xorl
cmpsb
out
fsubrl
push
dec
sbb
jae
jmp
stos
testb
jns
outsb
or
mov
mov
sahf
jge
out
fwait
in
in
mov
xchg
dec
pop
inc
dec
test
xchg
mov
test
lds
stos
iret
or
loope
sub
mov
mov
cmp
cwtl
jge
adc
or
popa
add
sub
xchg
stos
fcomi
mov
ljmp
xor
fadds
inc
add
pushf
xchg
jge
xor
xchg
aas
mull
xor
cld
mov
cmp
xlat
mov
mov
jg
shrb
cmpsb
fistpll
jb
mov
stc
les
aam
repnz
ret
nop
dec
int3
cs
imul
adc
mov
es
ss
push
jge
xor
sub
pop
lock
inc
adc
xchg
movsb
popa
sbb
aad
sahf
or
scas
cmpsb
imul
cmpl
pop
xor
ds
lret
push
pop
mov
jmp
dec
xor
int
in
in
mov
inc
lahf
mov
aas
dec
aas
scas
adc
notl
imul
inc
adc
ds
daa
cmp
nop
hlt
add
iret
inc
dec
and
xchg
mov
pop
inc
into
insb
fmull
cmc
xor
test
sub
pop
jne
sarb
inc
xchg
jle
push
jl
jp
std
jo
cmp
jl
inc
and
xor
or
push
popa
jle
pandn
add
xor
xlat
jno
xorl
ret
sub
out
test
sub
ror
mov
mov
xchg
pop
scas
fnstsw
call
je
xchg
xor
loope
xchg
sbb
push
cli
dec
cmp
xchg
cmc
dec
mov
or
cmpsl
pop
icebp
and
aas
add
stos
pop
loopne
insb
jno
mov
daa
gs
xor
xorl
mov
aas
aam
and
mov
loope
popf
notb
ret
and
roll
lea
data16
jnp
and
call
adc
cli
cmpl
pop
sub
lret
or
leave
xchg
mov
push
popa
in
movsl
mov
pushf
push
xchg
jne
mov
and
jg
push
inc
push
sub
fdivs
jle
shll
xchg
or
add
sub
xorl
cmpsl
lret
push
arpl
cltd
mov
mov
bound
ret
enter
or
adc
sbb
sti
jae
or
push
loopne
xor
daa
int
or
fbstp
dec
fs
xor
mov
xchg
push
fwait
popa
fimuls
sub
into
mov
adc
out
hlt
lods
sub
testb
outsl
pop
in
xchg
xor
mov
xor
push
inc
sub
dec
pop
push
loope
sub
add
dec
cmp
arpl
xor
mov
fldt
and
mov
sbb
mov
scas
or
in
xlat
lret
push
scas
cmp
movsl
mov
and
jge
fadds
mov
sarb
xor
mov
inc
aas
faddl
inc
xor
sbb
push
mov
pop
adc
sub
sbb
xor
mov
jne
pop
cmpsb
sub
xchg
loope
lock
rcll
mov
je
xlat
mov
notl
fisubrl
pop
pop
lock
mov
push
sbb
mov
ja
in
mov
and
sbbb
int3
xchg
aaa
mov
xor
xor
fwait
pop
mov
out
fwait
or
cmpsb
mov
adc
add
rorb
fwait
repnz
jge
imul
imul
add
xor
or
les
arpl
pop
lock
cmp
dec
jnp
mov
popa
add
add
mov
mov
test
aaa
iret
ss
out
mov
addl
inc
cmp
rcrl
mov
out
subb
jecxz
mov
aam
add
sahf
xchg
out
ret
aas
lahf
pop
mov
test
xchg
insl
lcall
adc
cmc
lahf
adc
loopne
addb
sarl
clc
std
imull
jecxz
dec
xor
les
lret
push
mov
xor
mov
and
add
sbb
movsb
sub
xor
jmp
mov
test
jne
mov
pop
scas
xchg
dec
and
nop
pushf
mov
mov
cmp
push
mov
jnp
mov
aam
in
dec
xchg
push
int
or
jl
pop
stos
inc
addl
jne
lods
sbb
pop
in
jp
or
dec
lea
ret
cmp
jecxz
sub
pop
pop
pop
mov
and
popa
push
loope
testb
jg
adc
mov
pop
adc
test
scas
mov
add
mov
icebp
repnz
pop
adc
int3
ljmp
call
sub
aas
jge
fbld
pop
into
scas
pushf
mov
jno
stc
dec
mov
popf
and
cmpb
shl
pop
call
loope
nop
xchg
jns
repnz
std
push
out
dec
scas
mov
pop
fldcw
std
or
sub
packuswb
mov
pushfw
scas
xchg
movsl
cmp
mov
lods
movsl
andb
mov
packssdw
xchg
ds
dec
mov
mov
jmp
dec
aam
mov
pop
xchg
icebp
in
or
popa
js
aas
scas
ss
addb
mov
xchg
out
lahf
adc
out
add
adc
pop
sarb
and
xchg
js
jb
stos
mov
int
ret
out
shll
mov
pop
mov
lret
enter
dec
out
pop
add
ret
inc
dec
sbb
add
sbb
push
repz
insl
jo
jp
jno
popa
in
xchg
rolb
pusha
daa
jbe
sti
enter
mov
inc
pop
add
mov
ror
rorb
insb
cld
add
cli
das
jo
addr16
mov
mov
xor
int3
or
fidivs
xchg
divb
and
movsl
cmp
push
scas
insb
cmp
iret
sub
fs
adc
mov
fistl
xchg
ja
daa
fisubrl
cmc
addl
loopne
mov
mov
test
jb
addr16
or
int
shr
or
out
sub
dec
add
ret
js
inc
stos
lock
mov
fdivr
test
pop
push
fisttpll
es
cmp
cmp
push
inc
mov
inc
cmp
xchg
sbb
dec
add
ret
ret
xchg
mov
cs
in
xchg
pop
insb
dec
inc
addb
mov
jnp
mov
push
fbld
sub
cld
cli
jecxz
jmp
sti
movsb
pop
sahf
fdivl
stc
sbb
mov
cltd
fsqrt
mulb
adc
pushf
stos
dec
push
cmp
andl
xor
add
push
inc
push
cmp
testb
es
sub
fisubrl
push
into
push
arpl
jl
xchg
mov
cmc
int3
cmc
arpl
ljmp
xchg
inc
das
xor
mov
movsb
sbb
lret
out
gs
mov
dec
and
dec
loop
enter
push
mov
insl
pop
mov
adcl
leave
rorl
andl
cmc
pop
xchg
xor
fcomp
mov
sbb
mov
nop
and
adc
add
movsl
push
dec
adc
rep
jge
leave
cmp
pushf
jno
dec
pushl
mov
jle
std
and
insl
mov
mov
pop
xor
xlat
mov
ds
mov
jo
push
lds
sub
cli
or
lods
in
dec
mov
decl
sarb
nop
popf
adc
add
jmp
mov
pop
cmp
test
fwait
push
mov
mov
push
adc
sbb
mov
mov
cmc
lret
add
push
enter
scas
mov
or
jecxz
pop
in
mov
stos
es
xchg
pop
out
sbb
addr16
shll
jns
add
and
das
and
xor
jbe
sbbb
fildll
jmp
hlt
test
and
xlat
repnz
cmpsb
pushf
popa
cmp
icebp
test
int3
outsb
adc
xchg
jno
pop
loop
mov
mov
xor
outsl
inc
jb
jne
jmp
daa
cltd
adc
jecxz
stos
enter
dec
cmpsb
shll
push
fisttps
fistpl
xor
jle
cmp
roll
scas
sub
loop
mov
cld
inc
loop
test
in
pop
scas
sbb
je
xor
cmp
lret
mov
and
sub
outsb
add
or
lret
in
sub
bound
fs
push
sti
mov
lahf
loope
loopne
xorb
ss
fiadds
lahf
aam
pushf
cmpsl
and
sub
sub
fs
movsl
jnp
mov
mov
pop
movsl
mov
sbbb
aam
cltd
insl
outsb
test
cmp
call
add
in
push
js
in
stos
add
pop
faddl
cltd
int3
loop
fdiv
cmp
mov
mul
xchg
in
incb
les
adc
out
fdivl
inc
lea
and
iret
jno
into
dec
adc
sbb
daa
xor
push
jp
add
xor
mov
out
aad
ss
sar
sbbl
sbb
and
push
iret
push
ss
mov
cmp
dec
xchg
insl
popa
jb
pop
dec
pop
sub
or
jo
mov
mov
xchg
enter
stc
or
fldt
stos
and
xor
cmp
or
cwtl
mov
loop
test
and
mov
inc
test
mov
or
mov
and
mov
adc
out
adc
jge
rorl
sti
adc
inc
jne
push
sahf
arpl
fimull
clc
pop
popf
jnp
mov
nop
loope
inc
ficompl
inc
and
lods
test
ja
ret
rcr
fwait
test
mov
sub
push
dec
and
sarl
xchg
lds
cltd
fistl
ss
add
addr16
outsl
push
lret
mov
add
jecxz
push
gs
movsl
js
mov
lods
add
mov
xor
mov
lods
xor
js
mov
xor
adc
and
fisubl
adc
aaa
call
fstpl
mov
cmpsb
icebp
push
jae
data16
adc
mov
cmpsl
clc
push
jne
lods
and
fistps
push
cmp
dec
cmp
dec
sarb
mov
cli
and
fsubl
js
data16
lock
fsubr
imulb
repz
loop
mov
add
pop
in
lea
lods
inc
pop
cmp
adc
daa
push
jge
shrl
push
test
dec
popf
popf
and
sti
push
inc
sub
or
loop
sub
bound
mov
ja
xor
je,pn
xchg
mov
pop
cwtl
lret
dec
repz
out
out
mov
inc
subl
js
cwtl
shll
inc
stc
adc
xor
addr16
sub
cmpsb
neg
shl
shl
cmp
sub
inc
cli
ja
add
lods
aad
add
push
mov
std
mov
inc
jne
jo
mov
jbe
ds
scas
iret
out
psubsb
and
cmp
jno
push
mov
push
test
rcll
cmpsl
enter
sbb
aaa
pop
inc
stos
mov
dec
jp
lods
rcll
inc
or
sub
or
add
push
imul
lea
gs
mov
lock
test
cld
mov
add
negl
ret
pop
jmp
mov
and
mov
jne
ljmp
jle
popa
fsubr
stc
out
inc
jno
enter
xor
icebp
mov
jle
mov
repnz
arpl
cmc
sub
jns
stc
ja
pop
pop
cmp
stos
add
pop
pop
ret
icebp
fisubl
mov
adc
icebp
dec
mov
jns
dec
imul
adc
add
nop
pop
sti
mov
cmpb
js
mov
inc
xor
stc
into
jg
into
fwait
lcall
mov
mov
loop
movsl
enter
gs
sbb
cltd
testb
cwtl
imul
mul
aas
xor
xchg
sbb
push
mov
jge
sub
and
inc
mov
pop
mov
in
dec
nop
int3
ret
mov
cli
lret
pop
iret
bound
xchg
popa
fisttpl
xor
xchg
inc
int3
pushf
gs
jb
cli
push
inc
shll
add
cmp
xchg
scas
cmp
gs
ret
outsl
into
rcrl
filds
ljmp
insl
mov
lcall
cmp
sub
xor
and
mov
push
sub
lds
fsubr
test
xchg
or
sub
dec
or
ja
or
push
jl
mov
std
sub
xor
pusha
adc
mov
xlat
mov
fstl
mov
aaa
loop
imul
pushf
inc
mov
mov
je
subl
push
movsl
in
mov
or
push
rorb
xchg
jns
loope
iret
ret
inc
inc
mov
imul
mov
fsubrs
pop
sub
mov
int3
mov
test
adc
ds
out
cmpsb
mov
xchg
test
inc
fistpl
inc
mov
fistpl
mov
dec
cmp
add
sub
cmpsl
jo
xchg
adc
stos
mov
push
cmp
aas
xchg
mov
movhlps
repz
cltd
push
ficoms
lods
pop
pushf
pop
das
add
mov
enter
fcoms
movsl
cs
mov
aam
or
adc
ja
or
cltd
lds
or
rolb
stos
pop
fimull
mov
fwait
push
paddb
xchg
pusha
inc
int
sub
shrb
xchg
out
popf
sub
into
sub
imulb
insl
call
ss
jmp
push
call
sub
inc
cmpl
data16
ret
mov
mov
cmpsl
inc
jg
je
fisttpll
fcomi
mov
aam
das
sub
pop
push
addr16
ds
ljmp
adc
adc
adc
cmp
popa
jns
mov
stc
scas
push
add
cmp
fs
icebp
or
mov
arpl
fiaddl
jmp
jne
jl
inc
es
sub
sub
mov
pop
subb
popa
les
mov
sbb
jg
movsb
adcb
test
bound
mov
sub
aad
xchg
fsts
dec
inc
jl
cld
xor
fs
std
loop
inc
xor
xchg
inc
xchg
lret
enter
dec
xchg
popf
xchg
repz
in
cmpsb
push
dec
mov
jno
mov
ljmp
stc
test
movsb
ret
sub
mov
pop
mov
lods
out
pop
and
inc
ss
out
loope
shl
mov
add
jo
pusha
sbb
test
pop
shlb
hlt
mov
outsb
in
mov
mov
adc
jg
subl
lcall
jmp
fcompl
cmp
idivb
addl
jecxz
push
and
out
cmpb
adc
or
fabs
xor
test
aam
out
les
jo
sbb
fdivl
insb
test
popa
lahf
test
imul
lock
cmc
mov
in
in
sub
adc
rclb
clc
enter
lahf
cld
jmp
sbb
and
aaa
dec
leave
mov
dec
leave
fwait
ds
iret
mov
aas
out
ds
bound
pop
cmp
stos
adc
addb
mov
mov
inc
sbb
jl
jno
push
xchg
movsl
mov
addr16
icebp
out
adc
pop
incb
and
movsb
inc
ret
cmp
push
int3
fdivrl
jmp
arpl
jmp
sub
arpl
std
arpl
xor
pop
inc
fs
ret
aas
adc
inc
aas
xor
push
mov
sub
outsb
icebp
sbb
imul
nop
divb
sub
sub
fnstenv
ljmp
imul
cs
lds
sub
mov
sub
xchg
or
aas
mov
xor
addr16
insb
out
movsb
xchg
test
xor
out
popa
out
inc
test
rcrb
and
int
jmp
add
int
xor
inc
repnz
aas
js
stos
xor
iret
rolb
jns
loop
fsts
sti
jb
push
stos
lea
push
hlt
arpl
sub
mov
or
sbb
push
adc
mov
jno
adc
lods
imul
jbe
inc
icebp
add
out
lea
push
cmp
in
repnz
adc
lods
movsb
sahf
bnd
int
cmp
ret
std
sub
inc
aam
dec
mov
dec
in
mov
jmp
outsl
dec
lahf
inc
sub
mov
jae
xchg
dec
lcall
jmp
fisubs
notb
clc
popa
pop
push
rcll
mov
mov
xor
jmp
xor
mov
cmp
cwtl
scas
and
scas
push
dec
je
test
insb
dec
pop
jmp
test
xchg
imul
push
das
out
cmp
cmpsb
sar
cmp
rolb
sub
insl
out
hlt
lahf
cmpsb
and
in
and
adc
dec
pop
sbb
pop
subb
fimuls
adc
dec
sbbl
insl
xchg
jecxz
clc
jecxz
aam
mov
ljmp
push
roll
es
int
fsubrs
jl
shlb
xorb
jns
push
in
ficomps
arpl
pop
mov
cmp
push
aam
lock
inc
stc
cltd
jmp
pop
xlat
sbbl
outsb
fidivrl
jbe
xor
dec
mov
pop
sbb
pushf
pop
xor
push
and
mov
inc
jae
xchg
mov
call
cld
and
cld
adc
cs
jns
pop
mov
cmp
jp
xchg
jmp
mov
jp
sub
into
cs
lret
push
mov
insl
test
leave
push
jecxz
sbb
out
and
fmull
pop
mov
loope
loopne
leave
sahf
inc
pop
mov
and
adc
xchg
lods
sbb
cld
fsub
sbb
sub
ljmp
test
fdivrl
add
int3
in
xor
xor
fs
xchg
push
loopne
orl
xor
test
dec
out
adcl
cmp
sahf
iret
notb
mov
mov
scas
shlb
test
cli
and
nop
lods
cmc
inc
leave
and
and
ror
jecxz
mov
mov
std
inc
out
and
call
lcall
jnp
aam
outsb
sbb
sub
rcll
out
cs
mov
lds
pop
int
push
dec
sahf
repz
push
jl
cmp
inc
stos
jl
adc
lds
push
cmpsl
xchg
xchg
jno
mov
bswap
mov
adc
bound
sbb
fadds
sbb
fsincos
pop
lcall
cmpsb
sbb
fistps
lods
pop
dec
lret
jmp
add
insb
or
hlt
jg
mov
dec
adc
vpunpckhdq
jecxz
jl
pextrw
fwait
pop
xchg
cmp
cmc
fisttps
scas
cmpsb
test
cmpsl
push
in
xchg
inc
inc
popf
adc
push
mov
shl
aaa
std
mov
mov
pop
lret
call
inc
dec
jecxz
rcr
std
push
pop
xchg
inc
arpl
sbb
pop
pushf
mov
push
push
pop
push
mov
adc
das
pushf
cmpsb
xor
arpl
sub
rcl
fbstp
mov
lods
mov
pop
test
pop
add
xchg
dec
ljmp
sbb
lods
add
cmc
or
lret
push
jmp
mov
test
push
push
push
movsl
push
outsl
mov
add
fstpt
je
mov
inc
fldenv
inc
xor
pop
sbb
insl
jg
push
or
das
dec
jnp
arpl
jns
cltd
daa
mov
xlat
cmpsb
cmp
jge
xorl
imul
loope
mov
or
jbe
popa
xlat
mov
jl
pop
jecxz
mov
mov
push
xchg
pop
insb
sub
outsl
aas
sub
shll
sbb
addr16
test
mov
in
jo
sahf
push
push
cld
dec
test
mov
cli
dec
sub
cmp
cmp
push
jecxz
dec
bound
jle
jae
xor
sub
fcompl
jle
idivb
dec
inc
jns
movl
push
test
sahf
adc
adc
push
push
rolb
and
aam
cmp
dec
rcrb
pop
pop
out
mov
xor
mov
pop
lcall
cmp
adc
xor
imul
adc
mov
sub
pop
jge
fisttps
xchg
mov
out
xor
jle
inc
mov
adc
xchg
sbb
cmpsb
das
test
or
sub
cltd
inc
addl
aas
mov
fsubp
and
cmp
hlt
aam
aas
fs
lret
ret
xchg
stos
inc
clc
push
push
stc
dec
fldt
sub
aaa
mov
test
out
dec
mov
inc
lock
sub
xchg
push
loop
enter
mov
pop
adc
ret
add
lcall
jnp
adc
and
fnstcw
or
mov
scas
mov
jno
add
jns
mov
sbb
dec
fiadds
pop
sbb
push
cmp
fildl
adc
out
adc
mov
mov
pusha
xor
mov
cs
cmp
inc
stos
dec
jnp
push
jp
mov
adc
xor
popf
movsl
xor
and
cmpsb
lret
dec
scas
pop
jb
add
sbb
xor
mov
or
enter
jge
mov
inc
push
int
lods
fcom
push
cmpsb
out
jo
xchg
pop
and
pushf
push
sub
mov
call
loop
jmp
clc
inc
test
mov
xchg
dec
cmp
popa
push
lret
sti
and
scas
fnstenv
rcl
adc
sbb
sub
aam
cmpsl
inc
insl
xor
cmp
ds
popf
xor
sub
in
xchg
push
or
adc
xchg
fiaddl
pop
jle
push
pop
jne
or
xchg
fs
pop
sarb
push
push
add
dec
addr16
imul
dec
sub
popa
into
bound
clc
out
pop
fucomp
jg
add
mov
mov
sub
movsb
mov
lcall
pop
scas
lock
imul
icebp
test
cmp
pop
int
adc
mov
pop
cltd
inc
pusha
inc
ja
pop
sub
mov
outsl
fsubrs
jmp
imul
dec
push
sbb
notl
add
jmp
push
jo
das
adcl
sub
sub
xchg
jle
mov
stc
and
lods
jae
in
hlt
mov
repz
inc
xchg
lcall
jle
xchg
les
mov
and
and
fimuls
xor
jbe
xchg
mov
xor
mov
dec
pop
adc
pop
movsl
xchg
je
je
popf
or
rcrl
insl
jp
jle
mov
adc
xchg
enter
mov
ret
or
gs
sbb
mov
loopne
popa
mov
xchg
out
or
subb
bound
xor
xchg
fisttpl
bound
sarl
sub
xlat
cwtl
pop
hlt
sysret
or
add
mov
sub
test
add
mov
bound
fsub
leave
rcrl
insl
rolw
push
pop
addr16
ljmp
jns
cmp
push
pusha
cld
adc
cmp
cs
movsl
mov
lock
jno
jbe
out
sbb
jne
fs
sub
mov
inc
xchg
jl
mov
sbb
repnz
and
std
sbb
out
ret
or
and
push
shl
cmpb
dec
das
data16
jl
push
subl
in
stos
clc
xor
out
shll
mov
roll
sub
aad
inc
cmp
cmc
scas
add
ficoms
test
in
call
fwait
jecxz
ss
call
test
push
sub
push
jle
fcmovb
xor
ljmp
test
push
or
mov
mov
xor
pushf
ret
mov
inc
imul
lods
and
adcl
cld
and
dec
repz
popf
xor
fcomp
call
in
setns
xchg
jno
fdivl
xchg
sahf
pop
iret
jp
pop
or
mov
mov
cwtl
xchg
inc
cmp
test
jle
ds
pop
cltd
sbb
cmpb
inc
xor
and
das
cs
mov
sub
pop
push
stos
js
adc
jo
imul
out
daa
mov
js
shlb
add
mov
add
push
xchg
fs
aam
stos
cmpb
out
fiaddl
sarl
inc
imull
mov
xchg
sbb
std
mov
lret
xor
idivb
mov
inc
out
add
inc
popf
xorb
xchg
mov
cwtl
out
movsl
push
push
mov
xchg
push
out
subb
dec
mov
dec
lahf
scas
ja
das
jle
mov
dec
lret
aam
adc
pop
adc
out
inc
fdivrs
mov
popa
clc
sub
data16
jg
rcll
lret
inc
adc
outsb
lods
sbbl
mov
push
jp
shrl
std
data16
out
aad
hlt
pop
push
cmp
jecxz
sub
xor
add
adc
imul
pop
sub
or
loope
out
ljmp
push
adc
out
outsl
xor
je
xchg
pop
mov
daa
mov
rep
add
and
push
iret
mov
das
jo
cwtl
ficomps
jno
inc
mov
mov
shrb
clc
leave
adc
xchg
xor
dec
test
iret
xchg
xor
push
cmpsb
jecxz
adc
mov
mul
cmc
jl
adc
jmp
repnz
and
mov
cltd
test
popa
adcb
js
sub
iret
mov
and
or
xlat
mov
xchg
mov
aam
and
mov
arpl
in
test
sub
outsb
pop
cmp
push
es
xor
mov
push
inc
lock
push
dec
inc
dec
jne
je
bound
or
mov
out
fwait
stc
inc
loope
testl
and
ret
jb
push
outsl
xor
dec
push
mov
lods
movsb
into
mov
data16
ljmp
adc
int3
adc
scas
outsb
dec
or
incl
inc
js
cmpl
xlat
shl
jbe
int
ficomps
add
popl
dec
add
lods
xchg
enter
cltd
mulb
mov
xor
rcrl
cmc
inc
ret
add
icebp
push
inc
xchg
inc
loop
adc
out
pop
sub
add
xor
iret
jl
movl
push
xor
out
std
mov
inc
movsl
and
sub
lock
addb
insl
das
mov
push
lods
or
or
pop
pop
push
pop
or
and
push
pop
mov
jl
mov
ljmp
sub
dec
jae
cmc
dec
test
mov
push
dec
jns
aaa
cs
add
jg
xchg
loope
mov
shrb
jo
pop
jmp
xchg
mov
lods
cli
jbe
fnstenv
add
sahf
sub
aas
sbb
xlat
cld
and
push
rolb
fistpl
ds
fidivs
pop
in
mov
cmp
loopne
scas
jp
lcall
sahf
xchg
pop
adc
scas
in
pop
or
sbb
xchg
aam
jnp
jnp
xor
mov
mov
cmp
add
sbb
cmp
aad
mov
push
sbb
or
mov
adc
jp
jnp
jbe
push
jecxz
push
push
in
clc
ret
mov
mov
xchg
test
sub
mov
mov
rcll
push
cs
pusha
insl
inc
outsl
xor
aas
shrl
jb
mov
mov
pop
ja,pn
inc
lret
fdivrl
adc
and
bound
popf
test
or
lahf
notb
repnz
sbb
add
loope
cld
test
les
inc
jecxz
pop
call
push
sbb
push
test
cmp
int
dec
out
pop
mov
inc
pop
in
decb
mov
xor
je
add
xor
out
imul
lahf
call
xor
shlb
fdivs
mov
inc
outsl
jl
out
incl
xchg
sub
sub
int3
clc
leave
test
cmp
outsb
inc
pop
loop
hlt
push
fiadds
push
icebp
jg
adc
ficoml
scas
cmp
ficompl
and
rorb
shl
fsts
pop
ffree
xchg
inc
dec
add
loopne
idivb
std
sbb
jnp
jo
and
push
push
inc
mov
inc
jne
pop
jno
inc
out
inc
fwait
adc
xchg
cwtl
sahf
push
fs
push
iret
popa
xor
dec
mov
mov
push
in
mov
inc
scas
pop
daa
aaa
jne
pop
inc
mov
mov
inc
push
cwtl
pop
pop
pushf
nop
or
hlt
ds
mulb
fwait
scas
popa
inc
rep
jae
dec
jno
mov
or
outsb
add
xor
inc
sahf
clc
arpl
sbb
out
into
lods
mov
idivl
repnz
dec
pop
clc
cltd
or
lahf
icebp
jmp
xor
decb
cmc
test
mov
fstl
cwtl
es
or
pusha
mov
pop
or
imul
lret
fwait
subb
mov
jg
lret
sbb
sub
jl
mov
push
mov
and
test
ja
addr16
mov
cmp
fdivp
inc
dec
xchg
out
push
aaa
push
lahf
sbb
xchg
push
push
add
hlt
addr16
jl
in
cmp
or
inc
std
sub
push
rcrl
or
xchg
dec
sub
xchg
iret
out
cltd
call
cmpsb
sbb
dec
cmp
rorb
shl
jge
push
xchg
imul
sti
repz
cmp
bound
jae
dec
cmp
mov
mov
push
repz
iret
adc
mov
subl
in
push
push
out
pop
into
mov
add
daa
push
mov
pop
lock
inc
jge
cmp
pop
xor
lret
pop
dec
inc
push
or
jno
aam
imul
movb
fldl
sub
clc
outsl
subb
xchg
loopne
mulb
insb
out
stos
jo
fs
xor
inc
jmp
nop
inc
mov
xchg
lods
leave
pop
sub
into
andw
sahf
xor
dec
rcr
sub
iret
stc
mov
mov
arpl
rol
pop
popa
in
push
out
xor
bound
inc
jae
and
add
push
jp
std
out
jo
cmpsl
cmp
dec
sub
sbb
stc
mulb
out
pop
inc
add
pop
push
mov
jg
cmpsl
out
ja
xchg
cmp
das
lods
sahf
insb
jmp
inc
add
mov
dec
pop
mov
xor
cmp
mov
out
js
sbb
arpl
loopne
pushf
jge
lock
xchg
mov
inc
and
jl
imul
daa
fstpt
shrl
push
inc
pop
jbe
cmp
xchg
iret
lods
aam
dec
sbb
add
add
mov
inc
popf
insb
dec
cmp
pushf
adc
orb
sbb
popa
imul
xor
xor
inc
push
pop
rcrb
lahf
test
scas
lcall
xchg
sbb
ds
aam
insb
mov
ds
repnz
insb
call
dec
mov
stos
mov
cltd
jae
cmp
mov
bts
outsl
clc
jns
push
xchg
dec
lcall
sbb
pop
cmp
test
mov
shll
sbb
scas
fimull
pop
sbb
xchg
xor
into
sahf
pop
inc
fs
push
aad
jns
pop
ja
sbb
stos
mov
imul
aaa
mov
inc
push
popf
cmp
bound
shl
add
or
clc
push
xchg
stos
pusha
mov
imul
in
lret
insb
mov
nop
inc
pop
lcall
pop
data16
adc
addr16
jne
insb
inc
fcmovnbe
cmpl
icebp
pop
push
push
popf
cwtl
lcall
mov
xchg
cmc
xchg
mov
cmp
repnz
xchg
mov
cmp
xchg
inc
push
pop
cwtl
lret
jbe
cwtl
fs
jo
adc
jmp
or
fisubl
mov
lock
js
push
flds
adc
mov
pop
icebp
sbb
cltd
pop
adc
fsubr
aad
and
inc
int3
xor
xchg
popfw
cmp
je
shl
popf
xchg
or
jnp
pop
dec
imul
in
add
popa
pop
fwait
shll
dec
call
or
push
test
cli
jmp
jne
cmpsl
daa
inc
jb,pn
stos
xor
add
shl
shr
bound
push
fists
inc
cmp
pushf
aas
jno
dec
adc
mov
cmpsb
fbstp
nop
rcrl
mov
test
or
cmc
inc
shl
mov
std
jns
mov
jl
or
sbb
mov
ss
or
xchg
cld
rorb
sub
jnp
sub
fidivrs
xchg
nop
dec
mov
lds
test
cmp
in
mov
arpl
mov
jo
lods
shrb
dec
mov
rcrl
mov
cmp
mov
das
lret
push
sub
dec
out
mov
gs
or
cli
fs
mov
jl
ja
inc
mov
jecxz
jmp
jle
push
mov
sbb
jmp
sub
or
dec
cmc
fidivl
scas
sub
sub
test
mov
pop
stos
push
dec
mov
lds
test
cmp
iret
sbb
sahf
sbb
sub
pop
or
xchg
cmc
mov
movsb
fldt
sbb
push
bound
jae
nop
iret
xchg
cmp
call
sub
sub
inc
out
in
and
cmc
push
sbb
sahf
xchg
dec
sahf
inc
and
dec
aas
ds
es
ds
frstor
loope
xor
call
add
adc
lret
cvttps2pi
jbe
mov
and
scas
sub
shll
dec
std
xor
shrl
shrb
neg
movsl
jmp
cmp
imul
mov
xchg
testl
inc
dec
mov
mov
decl
add
cli
fdivl
adc
fs
or
adc
mov
out
mov
mov
and
out
adc
mov
add
sbb
loop
pop
mov
adc
inc
inc
sub
push
clc
cmpsb
push
ret
dec
jo
or
insb
lods
loop
dec
cmp
xchg
out
fisubl
scas
sbb
push
xchg
lds
sbb
sub
data16
inc
inc
cli
mov
adc
jg
ret
xchg
popf
sub
jns
or
jge
ss
pop
rorl
add
jne
jge
pop
outsl
add
or
stc
hlt
mov
jge
jnp
mov
in
fisubl
fs
pop
mov
daa
xor
dec
push
lret
mov
cmpsl
dec
push
add
inc
fcomip
sub
rcl
stc
imul
fs
lcall
stc
adcl
rcr
in
xor
jbe
inc
daa
arpl
and
je
ja
sahf
xchg
stos
xor
arpl
lea
add
fists
mov
int3
jge
test
inc
lods
sub
jns
lods
cwtl
inc
sbb
imul
adc
rcrl
and
push
sti
into
or
je
dec
mov
mov
pusha
cmp
cs
adc
jle
enter
movsb
add
imulb
ljmp
sti
andl
xor
mov
add
bound
shrl
outsb
mov
cmp
dec
sub
push
ljmp
xchg
push
ljmp
lcall
fists
scas
xor
repz
popw
mov
popa
lods
leave
pop
jecxz
and
ret
cmp
fdivl
push
xchg
lret
rolb
int3
mov
jno
stos
scas
fwait
cmp
mov
scas
fdivrl
scas
gs
lock
add
clc
xor
call
sub
cmp
xor
and
fstp
mov
mov
addr16
xorl
call
adc
cwtl
jle
arpl
jne
sub
mov
xlat
scas
into
xchg
addr16
xchg
jns
sahf
jae
jp
inc
xchg
or
add
cmp
inc
jo
pop
or
pop
loopne
mov
mov
and
hlt
push
stos
addr16
jno
sub
sub
push
mov
jmp
pop
add
movb
and
push
xor
test
cmovbe
in
jno
call
inc
mov
mov
arpl
es
dec
insl
or
addr16
mov
loopne
jns
lods
mov
add
pop
pusha
repnz
push
les
dec
roll
and
jae
fs
das
mov
jl
mov
outsl
mov
and
dec
jecxz
cwtl
xchg
push
dec
iret
jle
mov
lcall
hlt
dec
adc
insb
into
xchg
bound
ljmp
jl
dec
add
pop
lods
in
sub
shll
jg
sub
add
movsl
adc
xor
jg
ret
pop
xor
mov
ret
adc
leave
mov
lock
lret
stos
xor
scas
imul
invd
int
pusha
xchg
lds
lret
lods
dec
or
cmpl
popf
lods
lock
repnz
imul
mov
fidivs
sub
xchg
test
xor
mov
jns
test
in
push
insb
inc
cmpsl
ret
sub
test
leave
movsl
stos
mov
mov
and
cmp
je
xor
cmp
cld
add
repz
loop
xchg
repnz
and
aas
adc
inc
dec
les
jns
movsl
scas
mov
mov
cmp
imul
test
or
cmp
or
or
mov
xor
mov
xorl
stc
nop
je
jge
xorl
lcall
cli
cs
jge
mov
data16
xor
test
pop
jp
icebp
adc
aaa
xor
sbb
arpl
popa
ja
mov
call
mov
mov
mov
push
or
ljmp
sub
call
stos
subl
jno
cltd
cmp
loope
loopne
scas
lret
xor
inc
jo
sub
int3
or
cmc
inc
jo
dec
in
ds
xchg
ficompl
mov
aas
dec
notl
and
xchg
inc
and
test
xor
leave
sub
pop
cld
mov
add
sti
add
ror
jecxz
dec
pop
and
add
sub
or
repnz
or
sub
ds
and
sbb
aas
sub
outsl
or
daa
mov
mov
pop
lcall
and
ds
repz
xchg
sub
jle
dec
cmp
mov
push
and
fwait
inc
push
fsubs
jge
dec
pop
mov
dec
mov
subb
cmp
lods
jecxz
mov
int3
mov
icebp
iret
inc
mov
pop
gs
push
xor
out
fwait
mov
rorb
stos
repnz
shll
dec
sub
and
les
movsl
push
inc
lods
mov
sarb
dec
dec
imul
mov
push
loope
ljmp
loopne
sbb
push
lret
mov
lods
scas
mov
sub
gs
in
add
popf
sti
test
stos
outsb
inc
test
adc
repz
jecxz
pushf
icebp
pop
push
or
nop
iret
inc
loope
inc
cli
das
add
aam
aad
hlt
mov
fbld
mov
mov
scas
and
clc
lret
adc
cmp
cld
dec
or
inc
loop
pop
test
pop
push
bound
xchg
cltd
es
add
mov
movsl
mov
rcl
bound
adc
sbb
in
xchg
add
cmp
pop
inc
lea
fmull
mov
andl
jl
push
dec
scas
sarb
jbe
shlb
cmp
push
movsl
jb
inc
adc
rcrl
mov
jno
xchg
pusha
adc
or
fidivl
cld
clc
push
and
inc
inc
push
int
mov
push
loop
sub
adc
xor
aas
xchg
cmpsl
mov
push
mov
scas
inc
cli
pop
xchg
gs
sbb
push
fcompl
lods
jns
out
and
or
inc
sub
in
into
jle
or
or
aas
outsb
sub
dec
sbb
loopne
aaa
jb
loope
shlb
jle
mov
std
mov
add
pop
jnp
lods
retw
ds
repz
ss
aas
jmp
fistpl
push
orl
push
shr
and
stos
ret
push
mov
inc
adc
mov
push
inc
push
push
orb
adc
outsb
mov
mov
mov
aaa
mov
mov
lods
inc
ret
xchg
orl
lea
pop
jb
sbb
fsubl
incb
stos
or
or
mov
scas
mov
sub
adc
sub
jbe
popf
lds
add
gs
loopne
sub
add
xor
dec
push
jp
out
sub
clc
aas
xor
fwait
mov
adc
gs
pop
inc
hlt
inc
out
sti
jae
ljmp
mov
sbb
inc
lret
add
xchg
lahf
pop
mov
push
jl
stos
jecxz
mov
pop
mov
mov
sbb
and
out
lods
sbb
repz
push
inc
inc
call
xchg
mov
fs
jge
popf
dec
mov
mov
fs
rcll
mov
ror
fmulp
jge
in
lret
inc
pop
xchg
in
sub
outsb
sbb
fsubr
pop
cltd
fiadds
xchg
test
out
test
cmpsb
add
pop
add
jns
mov
fstps
xor
fildll
jne
inc
mov
sbb
ret
jbe
fisubrs
out
push
aas
inc
fistpl
std
xor
or
jl
movsl
cmp
dec
lock
insb
mov
pop
in
rorl
jge
add
cltd
out
test
inc
in
shrl
jae
fcomps
dec
pop
fidivl
pop
int3
arpl
cmp
jmp
dec
mov
testl
xchg
fstpl
add
ret
xchg
addr16
das
pop
and
inc
lahf
inc
push
adc
scas
cmc
into
and
andl
nop
jnp
insl
xchg
push
xchg
inc
cld
pusha
push
icebp
adc
push
icebp
jle
shr
sub
mov
mov
arpl
aas
test
push
sub
pop
dec
lock
xchg
dec
pop
push
sub
ja
jge
xor
inc
sub
mov
or
in
mov
ret
int3
repz
dec
mov
pop
and
test
sub
adc
vsqrtss
inc
pop
shrl
lds
into
cmp
rcrl
push
sarl
add
dec
lods
or
icebp
xchg
push
ss
stos
scas
jl
lds
inc
xchg
in
hlt
sub
into
push
out
xlat
or
out
jle
cld
nop
dec
call
push
cltd
ret
ja
dec
les
mov
jecxz
jge
mov
int
sbb
lods
fs
adc
enter
xchg
push
xor
insl
xchg
push
push
add
lods
mov
xchg
or
aas
scas
ds
pusha
pop
out
mov
movsl
aad
ret
mov
outsl
inc
rcll
push
les
ficomps
int
add
ds
cmp
out
sub
mov
das
test
out
aad
push
and
out
pop
rcl
push
push
popf
push
lea
setbe
xor
mov
in
adc
xchg
jo
lcall
jnp
lock
stc
repz
xor
pop
mov
loopne
lods
bound
insl
jne
arpl
orl
adc
mov
imul
aad
dec
xchg
or
movsb
mov
inc
insb
jg
lahf
push
test
pop
test
call
mov
out
out
int
mov
dec
cmpsl
movsl
stc
or
jb
and
outsl
ja
add
arpl
inc
add
ficompl
jp
scas
pushf
fbld
cltd
xchg
jbe
lods
jns
shrl
inc
push
xor
add
mov
test
cli
imul
fimuls
jg
mov
call
jb
xor
cli
adc
fcompl
shrl
dec
ret
jg
and
cltd
in
jno
cmpsb
mov
rcrl
mov
dec
jbe
jp
sub
mov
add
std
aas
in
jl
cmp
add
xor
or
pop
test
dec
dec
xor
cmc
das
cmp
mov
cld
mov
add
sub
sub
jge
cmp
subb
mov
fbld
or
mov
pop
scas
push
ret
mov
jecxz,pn
or
pop
adc
loop
and
int3
mov
xor
cld
mov
out
dec
pop
in
mov
sbb
add
movb
ffreep
cld
push
cmp
daa
bnd
xor
pop
notl
mov
xor
sbb
jp
jae
dec
cmp
xchg
sub
mov
mov
insb
xor
push
clc
xor
in
cmp
inc
xchg
mov
pop
sub
push
add
pop
cwtl
and
jno
cmp
sub
push
iret
cltd
jo
andl
jns
das
lods
dec
shlb
mov
aam
or
dec
mov
cmp
movsl
xor
cmp
cmp
fldl
icebp
arpl
hlt
inc
inc
outsl
sbb
jle
ss
push
mov
xchg
fstl
int3
xlat
lods
mov
xlat
sbb
repnz
jmp
adc
xor
sub
inc
cmp
popa
sti
mov
mov
inc
dec
in
stos
lcall
adcl
les
mov
xchg
sub
les
jne
pop
add
pusha
and
mov
jns
jl
mov
fdivs
fwait
enter
sbb
ljmp
je
popa
xchg
mov
adc
and
mov
pop
ja
sub
pop
lret
xor
or
ficompl
subl
jmp
cmp
cmp
ds
push
mov
mov
push
bound
in
push
add
push
adc
add
mov
cmp
sbb
or
stos
pushf
mov
sbb
movb
pop
sbb
mov
mov
push
cmc
xchg
gs
add
clc
jo
pop
cmp
aam
std
xor
xchg
adc
popf
xor
outsb
adc
jge
mov
pusha
stc
movsl
notb
jae
sub
and
mov
cmp
mov
or
mov
cmp
mov
scas
sbb
push
pop
ss
sahf
jb
xchg
jbe
pusha
std
inc
push
push
lea
or
mov
hlt
jns
pop
arpl
mov
pop
push
adc
les
jp
in
idivl
popf
js
out
jo
arpl
cmp
imul
repnz
xor
mov
mov
test
or
arpl
out
fildll
mov
imul
xor
pushf
xchg
filds
idivl
add
cmpb
cmp
jae
notb
or
or
pop
push
mov
in
leave
hlt
xor
jge
insb
cmp
or
cltd
inc
into
leave
sub
sbbb
sbb
rol
ret
mov
pop
inc
lret
rcll
pop
cwtl
filds
xor
incl
xchg
lock
jb
out
shrl
inc
mov
mov
cmc
or
jle
or
nopl
pop
push
sub
pop
pop
lcall
arpl
lret
pushf
xchg
dec
fstl
aad
sbb
mov
jb
dec
ret
std
sub
pop
mov
bound
add
xor
cmpsl
jmp
lods
add
sub
stc
aas
nop
fisttps
cmp
dec
cli
xchg
inc
pop
or
xor
mov
rcll
fldt
jge
xchg
mov
shll
ficoml
imul
icebp
mov
adc
pop
xor
sbb
cmp
push
out
lahf
aaa
inc
mov
sahf
outsl
or
lock
es
mov
xor
shrl
sbb
adc
ds
fidivl
sbb
sbb
push
std
inc
cmp
mov
daa
add
pop
fdivs
insl
pop
cmp
stc
outsl
int
and
xchg
cmp
repz
imul
adc
lock
push
imul
scas
dec
cmp
mov
add
xor
push
sbb
sbb
xor
imul
cmpsb
xor
mov
push
or
xor
imulb
inc
rolb
sub
orb
push
stos
or
loopne
inc
sbb
mov
or
addr16
sarl
adc
or
test
cmp
notb
sub
cmp
sub
sub
mov
ja
inc
lret
pop
adc
sbb
out
cmp
lea
shr
scas
cmp
insb
fcomps
test
out
add
roll
xchg
test
sub
mov
dec
inc
mov
pop
js
xchg
push
dec
pushf
fnsave
test
pop
popa
cmpsb
push
dec
outsb
or
jge
frstor
pop
xchg
and
ret
push
or
cmp
sbb
xor
jecxz
add
adc
lret
sub
mov
push
cltd
aam
push
mov
sahf
popa
pop
pop
xchg
jmp
popa
out
imul
push
ficompl
pop
jns
mov
sbb
arpl
dec
push
std
sbb
xor
test
sub
shlb
or
add
adc
push
jns
loope
jg
xchg
push
jb
or
movsb
xchg
les
mov
xchg
jno
inc
out
jecxz
insl
cmp
mov
adc
jns
je
inc
jbe
push
int3
movl
nop
xchg
mov
mov
sarl
enter
movsb
pop
push
outsb
jbe
jbe
ret
pop
or
push
xchg
jp
repz
jnp
push
test
sbb
xchg
sahf
xchg
cltd
pop
arpl
inc
inc
shr
insb
push
shll
xor
inc
insl
push
pop
pop
stos
outsl
sub
mulb
sub
cld
adc
cltd
repnz
or
mov
cmp
push
addr16
sub
cmp
jle
popf
mov
pop
and
or
push
cmc
mov
adc
aam
lock
xchg
pop
pop
xor
adc
push
das
shll
pop
sub
push
or
jmp
sbb
mov
sarl
cmp
pop
pop
push
dec
hlt
push
inc
ret
fildl
cld
jl
imull
cmpsb
into
stc
push
sub
test
and
packuswb
imul
sbb
orl
iret
sub
jl
mov
cltd
or
add
in
mov
repz
mov
jg
js
inc
cltd
loope
aas
pop
pop
or
movsl
adc
xor
push
inc
ret
pop
xchg
iret
pinsrw
lret
cmp
movsl
cmp
or
push
in
jecxz
es
and
xchg
mov
or
mov
xor
sub
jae
pop
or
std
dec
dec
into
mov
aaa
pop
dec
rorl
in
mov
cmp
pop
daa
pop
mov
lods
sbb
lahf
or
loopne
movsl
popf
cmp
or
orl
push
adc
push
adc
inc
fidivs
orb
stc
daa
adc
jge
cmpsb
cmp
je
cmpsl
ljmp
pop
ret
add
sub
push
mov
rcrb
cmp
or
jmp
add
popa
mov
out
mov
jnp
xchg
add
pop
insb
insb
test
loopne
jmp
push
sbb
jno
xor
fistpl
xlat
add
loop
xchg
outsb
jno
pusha
jmp
jnp
std
push
mov
incb
mov
jae
and
adc
adc
pop
add
jmp
add
mov
and
ret
leave
mov
nop
mov
icebp
lock
mov
adc
mov
jbe
popf
dec
repnz
adc
ljmp
pop
outsl
dec
mov
push
jle
shld
jle
sar
clc
xchg
outsl
stos
sbb
es
dec
out
xchg
imul
cmp
aad
xor
cmp
aam
add
cld
push
pop
loope
mov
in
pop
dec
movsb
sbb
test
dec
mov
clc
pop
imul
adc
outsl
adc
orl
inc
movsb
enter
andl
or
jae
mov
or
fxtract
fistpl
andl
jle
mov
push
inc
cmc
lret
jle
loop
xlat
icebp
shll
inc
sub
inc
pop
pop
fwait
in
xor
add
and
lahf
les
loop
rolb
push
stos
or
arpl
lcall
stos
call
add
push
ljmp
xor
movsl
loop
dec
sbb
scas
loop
popf
pop
into
and
addr16
inc
jne
mov
push
fwait
stos
xor
out
aad
lahf
mov
aas
adc
xor
sub
mov
decb
xchg
xchg
lcall
jno
dec
adc
push
hlt
ljmp
in
stc
and
lods
sub
subb
hlt
data16
mov
in
mov
icebp
loop
push
mov
ss
cmp
fidivrl
push
xchg
aad
lahf
add
rclb
lods
pop
cmp
setbe
test
stos
jne
out
inc
mov
pop
clc
pop
popf
call
mov
test
sbb
enter
cld
fadd
in
mov
cli
fcompl
inc
sub
cmovne
cmp
aaa
loope
fcompl
scas
rolb
sub
add
xchg
jo
sub
push
mov
cmovg
je
scas
lods
popl
andb
jbe
int
outsl
jge
dec
push
mov
in
push
js
push
xchg
jo
loope
sub
mov
enter
les
jp
jmp
sbb
push
or
push
adc
mov
cmpsb
xchg
xchg
cltd
adc
pop
add
enter
movsl
push
mov
adc
or
add
faddl
adc
mov
fsubrs
add
fwait
add
lret
popf
mov
bound
or
xchg
xchg
repz
mov
sub
cmpsl
out
sub
cld
inc
push
loop
loope
sbbl
test
in
inc
test
insl
pop
jb
push
cmp
pusha
orl
mov
jmp
sti
push
bound
dec
jmp
cmp
leave
outsl
aaa
sbb
push
xchg
mov
xchg
jl
clc
aas
push
cmp
and
lds
or
xor
int3
inc
xor
ljmp
jne
add
in
cmp
shr
cmp
ljmp
sbb
push
mov
push
and
sub
lods
mov
push
shrl
repnz
call
inc
cmpsl
lcall
pop
hlt
xor
orb
call
mov
pop
shrb
and
push
xchg
js
xchg
cmpsl
loopne
out
xchg
pop
pop
pop
fwait
es
pop
adc
push
xchg
cmp
nop
xor
enter
shll
push
cmp
loop
xor
pop
addr16
ja
jmp
jns
pop
mov
ljmp
and
andl
out
and
and
shll
xor
xor
mov
aam
cwtl
mov
cmp
scas
mov
mov
cld
sub
sbb
add
jae
outsl
dec
jecxz
cmp
repnz
sbbb
pop
xor
cmc
pop
mov
push
xchg
inc
dec
enter
loope
movl
ret
adc
mov
bound
mov
gs
sti
mov
stc
and
sbb
pop
sbb
pmovmskb
orl
arpl
int
sub
xor
inc
fwait
push
pop
cmp
pop
fadd
and
jmp
in
insl
inc
push
cmp
lcall
pusha
xchg
shlb
in
ja
mov
push
lea
mov
pop
cwtl
mov
outsl
sub
je
and
mov
mov
push
outsl
stc
cld
cld
mov
cbtw
sbb
add
scas
es
adc
cmp
stos
daa
add
inc
outsb
out
pusha
arpl
gs
cmpb
pop
out
out
jp
and
stc
dec
and
dec
and
xor
mov
sbb
test
outsb
clc
in
or
xchg
clc
sub
insl
inc
adc
add
cwtl
pop
sti
fldz
or
clc
mov
adc
cmc
sub
inc
xchg
cltd
and
pop
test
push
jl
les
fs
int
fwait
lods
lahf
and
xchg
test
bound
fidivrl
fdivrs
push
in
add
loop
cltd
mov
lods
movsl
jge
mov
push
and
mov
aaa
ss
and
mov
or
roll
test
inc
push
mov
jae
dec
dec
das
nop
cli
adc
jo
ret
scas
mov
call
adc
sti
bswap
add
repnz
sub
lds
inc
pop
lods
iret
push
jg
cmp
mov
mov
pushf
pop
add
pop
cli
push
pop
push
imul
lods
fxch
aad
push
insl
dec
adc
and
fisubrs
ss
xor
test
mov
imul
push
loopne
xchg
iret
je
or
ja
xor
jns
testl
js
push
mov
adc
fcomp
lcall
aad
dec
xchg
sub
fst
pop
in
sbb
jecxz
add
test
fxch
daa
sub
cmp
in
addb
xchg
adc
bound
cmp
push
sahf
pop
adcb
or
lret
xor
cmp
sub
mov
mov
push
mov
adc
call
out
mov
popa
or
sub
push
push
out
into
das
mov
sti
push
movsb
mov
adc
stos
xchg
push
push
mov
mov
or
dec
fsubrl
pop
fimull
and
cmpsl
inc
dec
dec
lods
pop
push
xorb
mov
pop
aaa
cmpsb
cltd
mov
cmpb
xchg
in
sbbl
sahf
inc
mov
mov
mov
out
mov
aam
adc
in
push
fcos
jp
test
push
sbb
std
stc
add
insb
int3
outsb
push
or
lret
lahf
dec
mov
pop
mov
ds
push
push
psubusw
dec
inc
sbb
scas
dec
out
sub
fwait
cs
add
lret
push
nop
mov
scas
daa
add
aaa
push
mov
cmc
add
movsl
shlb
shlb
mov
les
mov
fdivs
dec
pop
mov
aaa
mov
adc
adc
xor
mov
jge
popf
push
pop
sbb
aam
in
wbinvd
cmpsl
or
mov
repz
or
push
pop
cmc
mov
std
or
add
sbb
adc
cld
jg
xchg
sti
popa
dec
int3
fcmove
aad
sub
and
xorb
shll
out
outsb
pusha
lret
pop
cmp
ret
sbb
sub
scas
dec
cld
les
es
add
aas
cmp
jle
vpxor
movsb
rcrl
add
push
lods
pushl
push
repz
in
loopne
or
les
aas
mov
dec
push
xlat
gs
jecxz
jl
outsb
mov
sub
clc
daa
rorl
outsb
xor
pop
xchg
xor
imul
out
fidivrl
sahf
in
in
dec
xchg
daa
xor
sub
lods
iret
in
or
mov
mov
jge
sbb
mov
mov
xchg
and
inc
jg
repnz
daa
xorl
sub
and
inc
adc
lds
jg
mov
inc
daa
fldt
cmp
mov
lods
mov
pop
pusha
pop
push
jo
mov
adc
subl
jo
jp
jno
fisttps
ret
pop
daa
fdivrs
push
jnp
xchg
stos
pop
mov
xchg
mov
addr16
jb
xchg
fbstp
jo
jo
stos
mov
pop
push
cmp
fisttpl
jmp
fadds
lock
leave
shlb
mov
xchg
dec
data16
fsubr
xchg
ljmp
cmp
push
mov
cmpsb
dec
sbb
pop
push
xor
sti
cmpb
jbe
dec
pop
pop
insl
pusha
sbb
movl
cmpsb
lock
imul
pop
divb
lcall
test
lock
adc
jae
stos
or
mov
mov
loopne
sub
inc
insb
shlb
dec
xor
stc
in
movsw
cltd
pop
jl
push
or
mov
mov
push
je
jle
dec
adc
fcmovnu
in
mov
and
pop
test
call
xchg
or
sti
sub
adc
jne
pop
inc
mov
xor
pmulhw
jmp
jne
cmc
cmp
mov
fld
xor
jp
inc
sahf
fistpll
jge
test
rcrl
sbb
add
adc
lods
dec
jecxz
call
into
ret
xchg
imul
dec
stos
push
repz
aad
mov
dec
mov
cmp
push
or
in
test
jo
insl
loop
js
cmpb
jb
sub
push
jl
in
ss
adc
and
inc
bound
jge
sbb
pop
xchg
xacquire
mov
xorb
lret
cmp
and
push
into
arpl
stos
cmpsl
popf
adc
jo
mov
and
pop
sbb
cmpsl
pop
jnp
pop
push
ss
cmp
jb
popf
sahf
mov
or
adc
push
pop
sub
xor
jl
xchg
add
mov
lret
popa
repz
push
arpl
sahf
xor
pop
dec
popa
add
xchg
jnp
int3
ss
cwtl
aaa
and
test
xchg
mov
jb
aas
jl
push
shrb
adc
jno
icebp
jmp
sub
outsb
xlat
loop
dec
fcmovb
xchg
cs
xchg
shl
out
xor
sbb
test
adc
jbe
xor
pop
jmp
mov
push
mov
stos
fmuls
mov
adc
icebp
sub
and
ss
xor
xor
xchg
mov
xor
sub
frstor
adc
sahf
dec
sub
fisubrs
dec
xchg
dec
cmp
push
mov
cmp
stos
push
sbb
jp
incl
arpl
popf
movsl
mov
add
jo
inc
iret
enter
mov
sub
pop
lds
fldt
sub
dec
ret
jle
inc
sbb
push
xorl
sub
fisubrl
inc
aad
push
aam
mov
add
jp
add
cmp
lcall
adc
ljmp
dec
cmp
mov
xchg
mov
sbb
jnp
mov
mov
sbbl
xor
aam
test
sbb
lret
push
mov
jg
add
imul
fwait
or
dec
or
sub
sbb
sti
pop
or
lock
dec
rcll
nop
fistps
dec
adc
and
jne
mov
les
into
cmpsb
fisubl
adc
add
inc
jmp
sti
fisubrl
fcmovnb
stos
xchg
adc
test
add
sub
outsb
jmp
dec
dec
fst
lcall
cmc
outsb
mov
push
pop
sbb
adc
cmp
lock
mov
ljmp
rolb
cmp
scas
lea
push
scas
push
lahf
pusha
jns
ja
movsb
aad
push
fiadds
adc
add
fucomi
jne
jae
addr16
into
popa
in
or
outsl
pop
push
ja
mov
lcall
push
mov
cltd
mov
mov
xor
dec
leave
adc
pop
cmp
mov
pusha
je
push
jno
xchg
and
sti
aaa
cld
fimuls
fcmovnbe
sbb
cmp
ss
dec
push
pop
jnp
sbb
pop
icebp
or
bound
lods
fistl
in
ds
outsb
stos
xchg
int3
cmpsl
mov
loopne
shlb
push
mov
lcall
adc
int3
pusha
nop
aad
fidivl
push
call
mov
sbb
adc
jle
repz
addl
mov
cmp
adc
mov
mov
jne
stc
adcb
pop
jbe
iret
fwait
jbe
dec
mov
lret
sub
xchg
xchg
add
mov
out
sbbb
cmp
jle
mov
lods
xchg
imul
and
ret
in
xchg
push
mull
out
sbb
in
cmp
inc
imul
jb
bound
test
jmp
xchg
sbb
fcomps
xor
shl
adc
add
dec
hlt
subl
rorb
cmp
dec
aam
or
cmpl
pop
in
sbb
xchg
jnp
inc
mov
addr16
mov
push
jbe
fucomp
mov
ret
in
cmp
push
xor
pop
movsl
lahf
and
icebp
lods
mov
in
adc
out
mov
lret
es
adc
dec
frstor
jns
int3
jo
cs
mov
cwtl
add
add
cmpsb
mov
out
je
add
loop
stc
jo
jno
cmp
int
lock
sbb
stc
popf
mov
lods
cmc
ret
or
cli
incl
jecxz
jne
imul
pop
mov
xchg
stos
mov
pushf
fldpi
xchg
icebp
outsb
je
fndisi(8087
and
add
addr16
ds
mov
mov
mov
inc
in
hlt
bound
clc
xor
mov
xchg
sbb
cmp
xor
mov
add
int3
adc
mov
test
mov
push
test
cmp
pushf
and
in
pop
ja
mov
cmp
int
push
mov
fcomi
inc
mov
int3
mov
ss
shrl
and
dec
mov
mov
push
fwait
add
push
mov
cmp
pop
xchg
mov
push
addr16
push
sbb
or
out
push
dec
pop
test
and
xchg
mov
and
push
outsb
jnp
iret
roll
cmpsb
insb
nop
and
test
aad
call
out
rolb
mov
xchg
rcll
int3
adc
xchg
mov
addr16
jne
stos
in
pop
int3
fimull
xor
movsl
jge
in
push
pop
loop
pop
sub
add
push
repz
jge
inc
cmp
fs
dec
fildll
daa
lret
outsl
sbb
out
rcr
pop
pop
sub
pop
jmp
cmp
fsub
pop
mov
jnp
push
loop
cvtps2pi
jmp
add
adc
mov
test
in
pop
cmp
cltd
pop
push
out
test
sub
dec
ja
jnp
push
push
std
lret
ljmp
sbb
fmull
xchg
inc
hlt
and
insb
hlt
xchg
push
sbb
jbe
pop
enter
imul
jae
lahf
mov
jbe
std
cmc
mov
xor
stos
gs
pop
sub
and
mov
cltd
xchg
pcmpeqd
pop
mov
push
mov
ds
add
fcompl
push
xchg
test
int3
repnz
mov
mov
dec
push
fstpt
cmp
sbb
fistpl
lods
push
out
fcomip
xchg
into
scas
pushf
push
sub
cld
int3
mov
cmp
or
data16
hlt
clc
in
in
imull
jae
or
pop
push
mov
inc
fmuls
call
adc
ret
pop
out
adc
xor
popf
fdivl
je
mov
ror
fstps
cmp
cmp
aad
stos
mov
je
adc
lcall
mov
ds
pop
lret
ljmp
push
xchg
mov
and
movsw
sbb
rclb
pop
pop
outsb
es
int
jnp
bound
lods
mov
push
stos
mov
pop
dec
inc
icebp
insb
mov
adc
mov
xchg
fldenv
fsts
push
not
int3
pop
outsl
add
jle
test
jge
add
xchg
sahf
hlt
loopne
out
sbb
outsl
add
sti
pop
call
out
pop
push
shrl
mov
adc
movsl
mov
jg
cmpsb
fsin
mov
jmp
imul
lea
sub
in
sub
int3
es
mov
inc
xchg
fstpl
and
dec
stos
insb
add
push
cmpsl
mov
mov
fidivl
jo
cmp
sub
mov
inc
sbb
xchg
fidivl
cmp
cmpsb
add
mov
lds
add
jl
in
movsl
adc
call
sub
fcoml
jb
loopne
mov
popa
arpl
cmpsl
daa
mov
dec
insl
jno
jp
and
xchg
xor
xchg
adc
in
mov
push
xchg
sti
jbe
shll
out
lret
push
fldenv
pop
test
and
sub
scas
sbbl
repz
jb
cmp
adc
lret
movsl
or
lret
fnstcw
int
inc
mov
aam
rolb
mov
add
orl
jl
and
ret
data16
rolb
das
fldl
cmp
pusha
ret
std
mov
aad
jne
fisttpl
adc
jne
sahf
nop
add
loop
ds
daa
fcomps
sahf
imul
loope
xor
and
pop
repz
sbb
jae
mov
mov
std
pop
jg
pop
pop
or
cmp
ljmp
aas
dec
pop
adc
xor
cmp
jl
call
in
or
push
add
stos
out
inc
push
les
pcmpgtb
sbb
mov
fwait
mov
ret
mov
les
pop
xchg
jbe
adc
sbb
xchg
adc
sbb
push
jle
pop
pop
test
jecxz
cltd
inc
xor
mov
enter
cmp
orl
sub
shrl
inc
xor
popf
lret
push
das
dec
mov
mov
xchg
mov
jge
out
mov
cmp
or
jp
cltd
fdivrs
xor
pop
insl
out
add
pop
pop
xor
pop
nop
fbld
lahf
leave
imul
dec
cs
pop
sbb
ret
mov
mov
sub
popf
lods
dec
sahf
mov
out
je
inc
movsb
scas
pushf
pop
inc
or
push
hlt
aam
mov
mov
imul
mov
iret
fimuls
sti
xchg
lods
xor
loope
mov
dec
inc
rorl
aaa
cwtl
xchg
add
aaa
gs
add
pop
inc
mov
repnz
jle
adc
sub
lret
cli
ret
cld
data16
mov
jge
fisttpl
shr
or
mov
dec
sbb
sbb
cmpsl
pop
cmp
cmpsb
cmp
cmp
and
mov
popa
fs
push
jb
cwtl
hlt
pop
sbb
int3
mov
ss
mov
movsl
stos
fmull
push
push
clc
and
fnstcw
sub
mov
fcomps
jnp
ss
mov
and
fisubl
inc
push
cs
decl
fistpll
bound
outsl
into
insl
in
les
adc
mov
lds
arpl
push
mov
and
push
pop
or
nop
pop
ja
mov
cmp
mov
xchg
jno
loop
lcall
and
mov
in
dec
push
mov
sub
push
add
or
lock
cld
jns
pop
enter
push
sbb
sti
dec
fnstcw
jmp
aas
rorb
add
sbb
sub
xchg
dec
lods
aas
loopne
lods
adc
cmpsb
cltd
cli
data16
jmp
enter
jp
add
mov
cmpsb
adc
jg
jp
ss
push
lcall
into
inc
push
inc
dec
ror
in
push
dec
jb
mov
pop
push
imul
inc
mov
data16
in
divl
sub
aaa
mov
xor
push
cmpsl
call
in
mov
pop
lret
jmp
mov
jns
inc
jmp
jnp
shl
cltd
inc
pushf
add
rcl
outsb
inc
adc
clc
sar
or
dec
mov
negb
repnz
add
int3
xchg
xchg
jno
xchg
cmc
rorl
mov
inc
out
nop
dec
xchg
dec
xchg
push
xchg
repz
sbb
outsl
mov
aas
test
sub
cs
cmpl
cmp
stos
and
inc
loopne
sub
int
pop
fadds
stc
lock
sub
jle
jnp
ret
fistps
in
lock
or
ljmp
pop
push
or
cld
les
cmp
xchg
nop
lcall
xor
dec
enter
data16
add
xor
mov
in
out
push
imul
outsb
int
cmp
mov
int
dec
push
xchg
inc
lds
push
iret
ss
pusha
jo
cld
jbe
inc
fs
inc
enter
jae
adc
fsub
push
lcall
in
shll
call
inc
mov
call
or
pop
repnz
rorl
fadds
cltd
repnz
or
mov
mov
in
xor
mov
in
jecxz
cld
mov
add
loop
cmp
jo
mov
ficoml
jb
inc
inc
sbb
add
mov
movb
mov
outsl
mov
sti
and
add
pop
xchg
into
add
rcll
mov
cltd
sar
pop
cmp
jae
cmc
xchg
mov
xor
jmp
js
pop
clc
cmp
sbb
sub
cmp
xor
cs
push
lods
adc
loop
dec
cmp
sub
mov
stos
sub
lock
add
lods
jecxz
test
aaa
pop
xor
jl
cmp
fists
rclb
pop
mov
and
fdivp
inc
jecxz
push
or
imulb
out
rcrl
adc
pop
xor
mov
sbb
mov
mov
mov
ret
cmp
jmp
fldl
stc
cmp
adc
cmp
call
and
and
add
jg
jl
stos
test
xchg
sarl
dec
js
mov
cmp
sbb
and
js
lock
adc
xchg
jl
cmp
xchg
stc
int3
xlat
sahf
mov
pop
cmc
jl
jae
clc
xlat
xor
adc
sub
jo
or
popa
mov
mov
pop
mov
mov
lds
add
jecxz
jge
stos
pop
add
cwtl
xor
arpl
ret
loopne
out
je
ds
outsb
xor
sbb
or
xchg
cmp
in
lea
imul
jl
pop
cmc
lcall
mov
dec
mov
sub
mov
and
jb
fisubrl
sti
and
jne
arpl
sub
sbbl
push
cs
rcrl
fnstenv
addb
repnz
mov
push
daa
add
test
imul
mov
dec
scas
dec
sti
gs
lahf
or
aad
adc
aad
pushl
imul
int3
cmp
icebp
adc
cltd
and
dec
xchg
in
movsl
mov
push
rcr
jl
adc
adc
inc
testb
shll
mov
movsl
xor
idivb
repnz
mov
clc
cld
fistpl
xchg
jg
or
sub
mov
shlb
xor
in
cwtl
sbb
push
loope
and
mov
les
push
xor
xor
out
lea
jmp
pop
fstps
sub
popf
jne
lods
int3
jle
orl
lret
daa
nop
fsub
inc
test
inc
cld
sub
sbb
mov
pushf
cli
aad
cli
jg
pop
or
xchg
test
fcmovnbe
add
std
subb
cmp
mov
inc
jl
mov
aas
push
xlat
insl
add
mov
push
dec
adcl
hlt
test
dec
mov
push
add
sub
add
sub
insb
push
fucomip
mov
icebp
jb
test
adc
dec
fimull
push
push
adc
mov
add
mov
cmp
add
enter
insb
int3
xchg
mov
xlat
in
dec
loopne
repz
ret
jbe
ja
dec
scas
sbb
sub
adc
add
int3
ja
movd
repnz
adc
mov
xor
cmp
or
dec
mov
scas
push
push
je
add
scas
cld
or
out
leave
sbb
push
adc
mov
dec
jmpw
or
lds
cmp
mov
jmp
cmp
sahf
cmp
imul
shr
aam
lods
outsl
pop
add
pop
xor
ret
divb
xor
sub
lea
adc
rorl
sahf
mov
sbb
adc
pop
into
pusha
mov
sbb
aas
cwtl
lret
imul
ret
push
lret
mov
aas
das
aad
fwait
dec
stos
gs
idivl
cld
jbe
jle
inc
xor
stc
xchg
cs
in
mov
insb
jmp
cmp
leave
popf
sbb
fs
and
xor
js
rcrl
sar
xchg
mov
mov
nop
pop
inc
loope
push
shll
dec
inc
decl
bswap
add
dec
jne
jae
xchg
loopne
call
mov
jns
or
stos
and
dec
movsb
pop
repnz
test
jp
mov
mov
mov
cmp
add
pop
popf
mov
or
sbb
fiadds
jbe
push
mov
pop
loopne
loopne
fwait
mov
dec
rorl
xor
push
test
pop
push
ret
not
jnp
rorl
out
ficoml
adc
lret
or
push
pop
hlt
movsl
mov
rolb
clc
cmp
repnz
pusha
xchg
mov
adc
out
mov
mov
jnp
adc
mov
stc
sbb
adc
and
pop
or
pop
and
jge
push
mov
push
inc
cltd
popf
push
loop
adc
or
mov
insb
adc
mov
iret
mov
insb
enter
out
pop
mov
add
mov
mov
mov
mov
xchg
xchg
and
cmp
push
push
dec
bound
sbb
and
xor
shlb
inc
loope
fstpl
xor
inc
xor
adc
je
mov
lret
push
pop
shl
sub
sbb
cmp
test
lret
jae
cmc
or
or
repnz
push
repz
cmp
jl
popa
push
cmp
or
data16
push
dec
sub
fmuls
dec
ret
incl
mov
daa
bound
or
mov
pop
cmpsb
ds
ss
dec
mov
lea
outsb
out
mov
out
loope
mov
and
fld
arpl
ret
stos
or
and
sti
push
cmpsl
sbb
dec
je
pop
loopne
pop
sub
sbb
push
mov
adc
jge
mov
scas
push
repnz
cmp
popa
insb
insl
mov
lcall
and
cmp
dec
sub
jno,pt
inc
mov
dec
lods
lods
cld
popa
bound
stos
inc
in
pop
mov
hlt
push
fsub
nop
andl
xchg
pop
adc
divb
sbb
stos
insb
pop
fwait
push
jb
lock
in
loope
insl
cmpsb
cmpsb
push
sbb
testb
nopl
cld
test
fimuls
and
jp
xor
shlb
mov
pop
daa
pop
sbb
mov
add
adc
cs
inc
cltd
ss
ljmp
xor
fbstp
cltd
mov
adc
add
add
pop
pop
push
ja
stos
repz
push
pop
or
mov
jg
adc
movsb
ds
sti
fdivs
cmp
and
push
loop
clc
movb
add
scas
fdiv
jbe
ret
push
pusha
bound
mov
faddl
shll
repnz
in
xor
addr16
inc
and
push
dec
mov
or
pop
cmc
mov
fiaddl
or
mov
lock
cmp
or
popf
push
push
sbb
int
mov
hlt
push
das
jb
out
hlt
sahf
cmp
inc
int3
pop
mov
movsb
cs
fs
in
jae
scas
inc
dec
cmc
mov
leave
sub
andb
cld
rcrl
pop
das
adc
mov
and
sahf
ds
sub
and
jmp
push
fstps
pop
mov
lret
cmp
and
and
test
scas
test
fidivrs
mov
das
mov
dec
cmc
inc
les
sahf
mov
out
rclb
sub
adc
cmp
dec
jo
sub
and
adc
data16
sub
test
pop
ja
dec
ja
aam
insb
popf
lods
ss
mov
cmp
jno
and
cmpsl
add
jbe
shl
cs
jge
insb
push
xor
enter
mov
mov
cmp
into
mov
mov
pop
adcl
gs
int3
xchg
dec
cltd
push
ret
cs
xor
inc
stos
xor
sbb
jg
ds
lret
popf
mov
push
enter
lods
mov
out
xlat
ljmp
sub
bnd
push
jo
push
std
or
stos
push
nop
popf
add
push
or
inc
iret
adc
rolb
sar
fwait
sbb
dec
aam
jge
push
loop
xchg
dec
es
mov
xchg
test
les
stos
cmp
clc
cmp
pop
add
mov
aad
scas
jo
xor
gs
xchg
cli
pop
out
mov
pop
out
mov
movsb
add
lret
adc
call
mov
jae
ja
loop
jmp
ret
aam
jge
les
sub
test
fldenv
cmpsl
shrb
mov
mov
shll
les
pop
mov
nop
lds
stos
jo
sub
inc
imul
dec
dec
mov
jo
ret
pushf
imul
jecxz
sbb
outsl
jbe
sub
nop
hlt
push
mov
add
cmp
pushf
sub
push
js
push
test
jbe
mov
stc
popa
xchg
add
cld
test
iret
fisubl
data16
out
mov
loope
shrb
ds
cwtl
mov
xor
dec
mov
xchg
adc
js
sbbl
fdivrs
mov
mov
cwtl
sbb
out
mov
call
xchg
enter
inc
push
sbb
sub
mov
aaa
hlt
repz
pushf
scas
jp
cs
pushf
scas
pop
sub
xor
mov
nop
mov
hlt
pop
cmp
xor
sbb
cmp
pop
stos
mov
sbb
jnp
xchg
sarb
into
adc
xlat
mov
lret
movl
stc
or
ds
nop
mov
cmp
cs
insb
jmp
in
mov
and
push
insl
decb
xor
fs
in
jns
enter
pop
inc
xor
add
pop
pop
mov
mov
push
pop
push
pop
mov
push
iret
sub
das
jnp
cmovle
cmp
dec
sub
add
xchg
sti
rcll
pop
shl
xchg
cmp
insb
jle
pop
in
in
iret
cs
fistpl
pop
std
dec
in
jbe
jle
rcrl
lret
dec
loopne
sbb
mov
dec
pop
inc
cmpsb
mov
int
xchg
orb
add
je
xchg
adc
push
jo
stos
xchg
jns
adc
ss
push
es
xchg
xchg
aad
fdivrs
sbb
mov
fdivrl
out
aas
sbb
pop
rclb
shl
hlt
jae
and
repnz
adc
jb
xlat
test
xor
mov
cmp
mov
div
cltd
mov
lret
push
dec
cmp
add
into
and
mov
dec
popf
sbb
gs
mov
mov
test
xchg
mov
iret
mov
mov
push
cvtps2pi
lods
pop
jmp
fidivs
aas
adc
sahf
dec
lret
ss
lods
jmp
inc
push
out
aas
push
in
sbb
push
loope
jg
cmp
insb
cmp
pop
pop
mov
aam
sarb
pop
dec
outsl
fdivrp
mov
cmpsl
and
dec
add
mov
xor
push
shlb
lcall
mov
aam
aas
inc
adc
call
xchg
flds
adc
loope
adc
movsb
mov
pop
or
ret
pop
out
jmp
inc
xorb
mov
pop
inc
pop
adc
mov
pop
mov
in
mov
fnstcw
addr16
pop
cmp
xor
pop
add
push
ljmp
mov
imul
pop
loop
add
push
clc
jmp
push
popf
arpl
andl
cmp
xor
aas
test
mov
sbb
hlt
ret
add
jmp
cmpsl
repz
mov
pushf
mov
arpl
stos
or
mov
jns
jecxz
inc
adc
mov
aam
ret
in
jp
add
sub
stc
cli
in
xorl
out
mov
inc
jp
add
sub
std
mov
out
ds
data16
lods
kaddw
cmpsl
repnz
fidivrl
push
xor
int3
mov
cmpsb
mov
dec
rcrb
arpl
xor
dec
std
mov
and
stos
cmpsl
ficompl
mov
shr
or
and
dec
jne
lahf
mov
ss
cld
scas
movsl
shll
jle
xchg
js
addr16
inc
lret
add
push
dec
sbb
popa
outsl
xor
sbb
sbb
pop
inc
or
dec
test
xchg
sub
jns
adc
mov
fldl
pop
xchg
in
mov
mov
cli
xorl
fisubs
insb
push
cmp
xchg
rcrb
add
jp
enter
mov
xchg
dec
cmp
sarl
dec
or
jne
in
cmpsb
les
lcall
bound
outsb
leave
inc
inc
test
pop
cli
xchg
test
loopne
mov
sahf
push
lock
jnp
pop
xchg
dec
lods
sbb
inc
xor
add
outsb
and
or
jne
inc
loopne
leave
in
mov
arpl
test
cmp
in
pop
movsb
movsb
fldenv
and
ds
or
outsb
adcl
stc
aad
jmp
imul
sti
jle
bound
pop
sbb
push
pop
xor
or
xchg
push
mov
fucomi
lods
aam
lcall
aaa
and
int
push
sub
test
sub
add
jns
mov
in
inc
in
sahf
jmp
jp
push
fwait
sub
sahf
cmpsb
aaa
and
push
ja
xchg
add
adc
stos
mov
int3
or
sbb
sarl
sahf
std
es
imul
hlt
mov
xchg
sub
subb
inc
popf
movsb
mov
sbb
cmp
movsb
scas
xchg
xor
push
push
and
mov
or
das
push
jmp
push
add
std
addr16
rol
push
jae
xchg
mov
cmpsl
out
incl
xchg
jmp
jl
cmp
clc
xor
std
add
nop
aaa
jg
jmp
out
jl
sub
je
jo
mov
jge
ret
mov
and
dec
fstps
in
movsb
jecxz
js
mov
dec
int
fisubl
movl
xor
xor
xchg
ficomps
cmp
fbstp
pop
sbb
sub
das
adc
and
imul
xchg
inc
bound
outsb
arpl
js
nop
into
out
data16
loope
pop
add
call
lret
xchg
shrl
addb
aaa
scas
jnp
adc
dec
xchg
rcrl
xor
mov
mov
fsubrs
pop
imul
outsl
push
movb
pusha
and
sub
scas
xor
aam
cmp
addr16
lock
xchg
scas
ror
mov
mov
ds
scas
cld
sbb
sti
jae
lods
adc
cmp
aad
imul
fisttpl
add
scas
add
pop
jno
xorb
jle
inc
sub
insb
ljmp
data16
mov
dec
lods
xlat
fildll
clc
push
inc
pop
and
dec
mov
rcrb
ss
mov
popf
imul
out
and
sar
push
cmp
dec
push
popa
push
loop
insl
jo
leave
rol
add
stos
cmp
icebp
aas
push
inc
dec
adc
dec
inc
cmp
fcomps
sarb
sub
clc
pusha
jns
sbb
push
pop
call
push
ss
dec
in
loop
out
or
movsl
in
pop
out
and
xor
movsl
jbe
xchg
aas
adc
and
cmp
pop
loopne
movsb
pop
adc
push
lea
xor
bound
push
sti
mov
loop
cmpsl
ror
or
mov
call
xchg
ret
mov
mov
xor
lds
pop
mov
cmp
dec
repnz
xor
pop
mov
xchg
int3
dec
adc
pop
xchg
cmpsb
pop
dec
mov
add
or
inc
add
cmp
aad
loopne
shr
push
mov
and
push
ss
jmp
sbb
mov
int
in
mov
or
movsb
and
lods
fisttpll
inc
or
mov
in
push
test
cmpsb
jp
loop
fdivr
cltd
mov
repnz
xchg
xor
mov
xor
fdiv
jle
mov
dec
inc
pop
xchg
mov
pop
or
push
mov
lods
sub
es
imul
inc
icebp
xchg
icebp
push
lret
or
roll
jbe
int3
dec
dec
ret
xchg
push
mov
sbb
jl
nop
rcrb
in
mov
cmp
sbb
mov
dec
mov
xchg
mov
inc
and
cwtl
into
adc
aad
xor
cmp
inc
sbb
pop
pop
add
and
stos
mov
push
dec
rclb
or
in
movsb
or
sub
jbe
inc
lahf
inc
sub
test
jge
sbb
jnp
add
scas
sub
jns
mov
pop
lahf
inc
sti
cmp
cmp
scas
push
int
call
and
jmp
mov
push
gs
pusha
cs
adc
push
lea
in
rcr
fdivs
out
xchg
ret
into
jmp
jecxz
jg
lds
lea
stos
aad
jmp
inc
rolb
jl
sti
jns
int3
adc
jmp
xchg
gs
inc
movntq
test
add
outsl
add
mov
dec
fiaddl
js
das
mov
sbb
xchg
xchg
cmp
xchg
pop
mov
fldl
pop
sahf
iret
cli
xchg
out
rolb
fwait
adc
jns
dec
or
or
adc
mov
lret
mov
jg
jno
bound
cld
xchg
subb
loope
lock
mov
push
or
pop
xchg
sbb
cmp
jmp
mov
inc
adc
jg
dec
outsl
adc
cmp
dec
lods
add
sub
es
lds
test
stos
lock
cmp
lret
into
cs
jns
pushf
fisttpl
mov
jg
inc
jbe
dec
xor
add
push
adc
pop
sbb
das
mov
call
xchg
ds
sbb
mov
sahf
or
xchg
ret
icebp
rorb
cs
push
inc
sub
cltd
jnp
mov
sarb
in
xchg
cli
std
in
sbb
nop
mov
scas
pop
push
jne
repz
jne
scas
lret
cmpsb
or
pop
lret
out
test
loope
or
mov
adc
sbb
sub
outsb
cmp
lahf
aam
pop
stc
repnz
cmp
daa
pop
add
or
jg
mov
pop
push
pop
movb
inc
push
leave
in
and
pusha
test
sub
mov
push
pop
add
repz
cmp
mov
cltd
js
and
in
mov
sti
imul
ja
cmc
in
aaa
js
xlat
cmc
xorps
and
xcrypt-ofb
cmpsl
out
rorl
sub
pop
jle
lret
xchg
nop
dec
mov
faddp
ficoms
ficomps
xchg
movsb
sbb
jno
pop
mov
push
fisubs
add
test
lcall
or
or
call
scas
mov
pop
add
sbb
mov
cltd
data16
mov
test
push
xor
and
int3
xchg
cmp
xchg
stos
sbb
push
adc
ds
and
in
mov
cmp
insl
data16
pop
jb
and
addb
mov
gs
inc
rolb
jae
mov
ficomps
adc
push
adc
out
daa
insb
subl
aam
daa
imul
arpl
dec
arpl
stc
mulb
cmp
es
cmpsb
mov
rorb
pop
sbb
mov
push
push
and
loopne
scas
movsb
jbe
aam
mov
sbb
push
in
pop
imul
int
xchg
icebp
stos
scas
sbb
pop
sarl
mov
insb
xchg
mull
ss
mov
les
lea
xor
mov
pop
test
sti
jl
jp
inc
pop
xor
push
cltd
inc
aam
xchg
add
mov
test
repnz
push
mov
cmp
and
push
or
add
std
mov
mov
pop
or
push
add
pop
adcb
fmul
imul
adc
sbb
stos
jns
inc
push
inc
cmpsb
stos
in
jl
test
xor
push
cvtpi2ps
lcall
aam
testl
sub
sub
enter
sti
lret
outsl
stos
js
stc
inc
xchg
push
test
jl
arpl
loop
xchg
std
lock
mov
xor
outsb
push
outsb
test
or
je
xchg
sahf
int
popf
xchg
lcall
sbbb
aad
mov
sti
xor
imul
pop
xchg
push
ret
enter
and
xchg
insl
xor
stos
dec
sbb
fdivs
test
jns
push
cltd
push
sub
ret
push
aam
xor
mov
cmpsb
push
std
mov
ret
int
jmp
rorl
and
dec
xor
pop
in
sarb
cmpb
push
push
sub
mov
test
pop
or
inc
mov
xor
cli
mov
sub
xor
aas
aaa
inc
test
ljmp
mov
adc
inc
mov
and
or
js
jecxz
or
inc
ret
add
outsb
cmp
sar
addb
aam
cmp
mov
or
xor
or
loope
inc
fldenv
cmp
movsl
lds
adc
insl
and
sbb
mov
sbb
std
rcrl
cmp
test
or
and
jae
lahf
xor
mov
je
pop
sub
mov
aaa
fcom
xchg
lock
aaa
sbb
xchg
push
call
or
data16
jns
jmp
or
adc
enter
jg
pop
rorl
repz
xchg
jo
lahf
ret
adc
jno
into
mov
idivl
imul
sub
inc
fs
or
movsb
xchg
inc
mull
mov
nop
mov
fldenv
repz
mov
sub
scas
mov
jge
cltd
jle
mov
push
fs
mov
push
sub
mov
movsl
pop
dec
inc
mov
dec
and
fst
push
inc
les
xor
and
imul
sub
pusha
jnp
mov
sbb
push
into
xor
fwait
adc
xchg
and
inc
pop
fists
scas
cmp
push
sub
loopne
cmp
out
mov
mov
push
jae
icebp
and
sub
xor
cld
fmuls
jmp
mov
lret
mov
unpckhps
test
addr16
test
sbb
push
and
rcpps
int3
mov
gs
mov
cmp
mov
daa
inc
dec
cmpsb
cs
pop
jbe,pn
lcall
arpl
push
push
pop
push
popf
inc
dec
fnstsw
dec
call
into
xlat
pop
in
in
mov
cmp
outsl
add
jg
jmp
aas
cli
into
je
bound
cwtl
dec
sub
leave
movsb
mov
jmp
cmpsl
xor
daa
ror
repz
cmc
test
add
and
mov
loopne
je
inc
mov
pop
lahf
and
or
pop
enter
pop
nop
out
sbb
mov
rolb
das
idivl
loope
mov
cmp
xor
rorl
test
psrlq
jno
ret
mov
adc
and
fwait
xchg
jg
into
sti
inc
movsb
push
clc
rclb
mov
and
cld
cmp
jns
das
xchg
push
mov
data16
sbb
adc
fimull
mov
add
or
xor
mov
out
ficomps
inc
adc
push
pop
sub
gs
sub
fsubp
lcall
mov
pushf
loopne
or
pushf
shr
loope
leave
push
dec
je
or
aas
fbstp
repz
push
and
sub
mov
pop
ljmp
or
lret
adc
pop
inc
add
scas
xor
add
clc
imul
dec
loopne
push
xchg
sub
insb
jns
xchg
aam
pusha
sub
pushf
xchg
jmp
dec
dec
ror
add
jo
pop
sbb
fidivrl
insl
push
adcl
ret
addr16
add
mov
pop
sbb
xchg
mov
and
sub
popa
std
jl
jg
mov
inc
push
jno
mov
sarb
scas
nop
cmpsb
xchg
ljmp
xchg
in
mov
nop
inc
inc
push
mov
or
pop
jns
inc
out
sub
jno
in
cmpsb
xor
cmpsl
nop
xchg
cld
or
inc
testb
push
xor
test
lret
out
mov
xchg
or
mov
out
cmp
rcrb
rcl
pop
iret
loope
mov
mov
mov
mov
ss
int3
mov
js
mov
repnz
lcall
xchg
and
ret
lahf
jae
xchg
xor
pop
push
and
icebp
test
jp
dec
repnz
fidivl
lods
xchg
add
mov
cmp
ret
ss
xorl
testb
jl
arpl
loop
xor
icebp
or
sahf
cmpsb
js
xor
scas
jp
xchg
sbb
aaa
inc
mov
adc
jle
mov
push
or
and
pop
das
pop
stc
fcom
daa
jecxz
lods
sbb
mov
inc
lea
aaa
fldl2e
ds
inc
fcmovnbe
loope
ret
xor
adc
or
xchg
movb
stos
es
lret
and
cmp
jp
xor
orb
outsl
xchg
shrl
xlat
rcrl
andl
dec
add
ss
add
outsb
mov
push
jnp
sbb
and
sbbl
movzwl
sub
jmp
and
shlb
lahf
scas
push
and
negb
ja
test
ljmp
xchg
imul
nop
jecxz
ror
inc
aam
mov
std
xor
dec
mov
hlt
sub
stos
sub
xlat
push
pop
sub
xor
add
cmp
bound
testb
mov
pop
mov
sbb
mov
stos
rol
add
dec
faddl
dec
mov
neg
mov
push
sbb
das
daa
xchg
test
repz
lea
aas
add
negb
add
adc
insb
shr
fstl
or
and
cmp
mov
jbe
adc
in
js
insl
scas
xchg
aaa
sbb
dec
pushf
jmp
push
scas
xchg
ljmp
pop
push
inc
sub
and
pop
push
in
js
das
js
mov
mov
pop
add
jle
loope
dec
mov
xchg
fstps
cwtl
pop
imul
jbe
lods
test
xchg
jecxz
mov
push
stc
xor
jge
sub
cltd
shll
pushf
push
lahf
scas
pushf
lret
dec
xchg
dec
lods
dec
int3
add
xor
outsl
push
mov
sarb
xlat
sub
inc
sbb
fdivl
stc
repz
jbe
lods
jmp
not
out
out
ljmp
push
fidivrl
aaa
test
mov
push
jmp
inc
add
inc
mov
jl
loope
mov
stc
jns
dec
xchg
ja
stc
cmp
xor
insb
and
inc
and
mov
xchg
ffreep
cwtl
dec
jg
mov
test
mov
push
movsb
and
pop
mov
dec
dec
scas
ror
cwtl
add
mov
in
test
test
lds
or
int
cltd
in
push
repnz
push
mov
mov
and
xchg
aaa
mov
imul
ss
popl
push
aaa
xor
loop
clc
inc
inc
xor
les
and
pushf
pop
jp
sbb
inc
adc
inc
inc
dec
pop
sub
stc
and
jb
jb
cmpsb
ja
sub
cld
rolb
push
je
inc
loope
inc
and
adc
adc
jge
pop
int3
je
popa
push
adc
jo
pxor
cltd
dec
cmp
repz
in
cmp
sub
xchg
mov
ljmp
jb
xchg
aaa
or
add
cmpsb
xor
imul
jbe
fxch
inc
lods
mov
jne
stos
or
push
sbb
push
jg
shlb
gs
ds
stos
aam
int
xchg
and
xchg
fs
stos
popa
add
inc
arpl
sub
jno
das
xlat
adc
jg
sahf
out
iret
adcb
xchg
xchg
xor
das
jecxz
mov
adc
lcall
out
enter
push
inc
stos
xchg
mov
test
jle
push
inc
mov
and
and
xchg
push
enter
mov
pop
jle
into
arpl
jno
adc
pop
inc
lods
inc
fisttpll
out
fdivp
fimuls
imul
xorb
jb
sub
mov
pop
xchg
loope
jne
fldcw
dec
call
mov
jg
dec
arpl
xchg
xor
or
xchg
imul
adc
scas
flds
or
fwait
stc
dec
into
pop
xor
arpl
jmp
jo
mov
test
lcall
sub
mov
dec
add
lock
sahf
stos
cmpsb
dec
xchg
mov
xor
stos
pop
les
into
dec
push
ficompl
je
cmpsb
mov
pop
lock
mov
mov
test
mov
cli
mov
cmpb
jge
testb
sbb
arpl
pand
xchg
jmp
sarl
inc
sbbb
fistl
jo
dec
pop
xchg
int3
les
fs
jae
in
pop
push
jo
dec
mov
adc
sti
cmp
rclb
lcall
sbb
imul
fcmovnb
mov
adcl
out
and
mov
inc
sub
icebp
xchg
scas
leave
imull
lock
adc
xor
dec
scas
out
push
jl
dec
push
jne
gs
pop
fadds
enter
shlb
nop
xor
sbb
stc
adc
enter
out
repz
sub
bound
mov
cmp
pop
pop
mov
cwtl
leave
fwait
jae
mov
lahf
jne
and
mov
push
push
rcll
aaa
gs
daa
xchg
mov
mov
push
sub
xchg
pop
cli
loop
ja
arpl
ljmp
inc
inc
das
pop
testl
lods
repnz
dec
mov
out
fimuls
sub
xchg
jge
imul
nop
ret
dec
cld
lret
clc
lret
fs
and
dec
inc
and
cmp
cld
rolb
mull
inc
sbb
cmp
dec
stos
das
pushf
fs
pop
lahf
movl
cmp
or
cltd
sbb
orb
in
pop
pop
or
lods
lea
lret
inc
pop
dec
fwait
dec
inc
jne
cmp
in
push
inc
imul
add
cmp
sub
inc
shll
fwait
insl
adc
clc
in
cs
dec
mov
mov
iret
iret
seta
ja
jbe
mov
scas
in
mov
fsts
cmp
insb
mov
popa
mov
push
push
out
cmpsl
rolb
cmp
xor
or
mov
leave
jl
push
cvttps2pi
in
pop
mov
mov
mov
out
js
mov
or
push
mov
aaa
add
xorb
jecxz
xchg
lcall
jns
mov
cmpb
loope
push
push
jno
dec
dec
jg
xor
push
cmp
enter
inc
dec
xor
jbe
in
add
mov
push
jbe
call
and
popa
pop
arpl
scas
dec
mov
push
dec
icebp
in
xchg
mov
pop
and
lret
inc
and
and
pop
pop
int3
pusha
mov
lahf
repz
loope
xor
sti
mov
pop
sub
and
popa
xor
or
ret
mov
sbb
int
fwait
inc
mov
xchg
mov
repz
hlt
adc
fcmovne
xchg
pop
jg
stos
sbb
cmp
mov
pop
adc
cld
mov
dec
mov
data16
push
adc
je
pop
in
jge
and
sbb
inc
out
and
mov
pop
dec
push
outsb
fwait
popa
or
mov
movsb
test
hlt
dec
rcrb
jae
xchg
test
dec
add
out
fld
pop
pop
mov
movsl
push
push
dec
in
test
repz
mov
outsb
jp
add
fsubl
ja
pusha
push
adc
push
stos
jns
jle
xchg
fdivl
inc
dec
imul
rcr
and
push
xor
xchg
sahf
sub
jbe
sub
rorb
sub
sub
or
in
mov
jno
inc
sub
dec
lret
dec
ror
ror
inc
jle
xchg
cmpsb
dec
cmovno
push
clc
arpl
inc
mov
fldenv
jmp
ds
jae
add
sahf
out
push
cmp
shr
hlt
std
popa
mov
jo
mov
mov
sbb
cmpsl
rcrl
insb
and
jne
scas
sub
rorb
outsl
hlt
cld
mov
ljmp
pushf
mov
nop
xchg
sub
hlt
jns
xchg
mov
push
xor
xchg
xchg
dec
push
in
mov
scas
jbe
sbb
in
es
out
les
fsubl
sbb
mov
or
aam
pushaw
outsl
inc
pop
out
sub
fistpl
cmp
fs
mov
push
popf
icebp
iret
inc
divb
dec
ret
xchg
mov
sti
lock
fistl
aas
pop
mov
cmp
mov
stos
inc
loopne
out
sbbb
das
rcrl
pop
outsb
in
insl
ret
mov
xchg
cltd
ds
mov
pop
pop
and
pop
xchg
daa
test
push
int
pop
push
push
jno
push
xchg
movsb
fldt
or
mov
repnz
pop
fwait
mov
xchg
sub
enter
xor
repnz
xchg
xchg
mov
or
imul
iret
call
data16
fdivrs
xchg
cwtl
push
xchg
ds
and
pop
jge
and
mov
insb
mov
push
js
pop
hlt
fsubs
jl
jg
mov
cmp
lock
push
popf
mov
cmp
cmpsb
jecxz
shll
adc
into
push
mul
sub
loopne
pop
cmp
cmp
or
or
push
fisubs
lods
fisttps
sub
ds
push
sbb
fdivl
xor
popf
out
mov
cmpsl
push
mov
imul
cmpsb
cmp
mov
cmc
mov
fisttpll
ja
inc
rclb
mov
jns
pop
cmp
jecxz
dec
call
mov
jnp
sbb
pop
iret
jo
mov
scas
test
mov
ffree
fiadds
outsl
roll
or
pop
fdivrl
pop
xchg
and
addr16
ljmp
pop
jmp
inc
lcall
cmc
data16
cwtl
inc
lret
loopne
arpl
mov
repz
lcall
scas
jecxz
aam
out
sbb
dec
ja
jns
xor
lods
or
xchg
retw
push
lea
into
cmpsl
ret
cmp
adc
sub
mov
mov
cmpb
pop
sahf
cmp
lret
cmpsl
movsb
pop
add
pop
clc
pop
or
mov
sub
pop
or
or
test
xchg
iret
push
push
jp
lea
jmp
pop
xchg
cmpsb
clc
mov
mov
pop
mov
test
inc
mov
inc
or
dec
adc
fdivl
ret
jmp
enter
push
iret
sub
jmp
dec
into
adc
dec
mov
push
flds
cmp
adc
or
es
mov
add
fstl
aas
mov
das
xchg
scas
pop
cs
rcll
aam
stos
insl
inc
ja
push
sbb
push
or
lahf
xchg
push
notb
mov
and
addr16
jg
cli
adc
in
mov
inc
out
push
mov
loope
lods
pop
loope
iret
mov
jge
or
cmp
or
lcall
out
pushf
inc
mov
mov
testl
mov
push
and
popa
xor
lret
inc
xchg
dec
sub
xor
ret
gs
jne
scas
cwtl
lahf
pop
mov
mov
mov
icebp
and
xchg
sbb
clc
ds
jae
mov
mov
sub
jecxz
inc
std
fstl
out
out
lret
ljmp
dec
imul
sub
sbb
sbb
fistpll
and
fcomip
fsts
punpckhdq
xchg
shrb
xchg
dec
in
pop
xchg
aam
and
dec
jg
lret
push
jl
das
lods
imul
mov
and
mov
mov
mov
mov
mov
clc
notl
push
xlat
sbb
addr16
flds
mov
sub
or
jmp
cltd
ss
ja
stc
pop
es
cli
das
imul
pop
les
inc
mov
adc
mov
xor
int3
xor
lds
pushf
movsb
leave
jp
sbb
dec
push
adc
movsl
mov
stos
test
hlt
pop
cs
stos
cmp
ds
inc
add
fbstp
cmc
outsb
scas
lock
fidivs
adc
or
rcrb
cld
pop
dec
and
das
jmp
add
scas
inc
or
cmp
scas
jne
int3
sbb
mov
inc
leave
rcrb
inc
testl
rolb
data16
inc
test
or
inc
mov
mov
call
ljmp
int
inc
inc
or
pop
repnz
sti
out
fs
fdivrp
leave
xchg
jnp
js
mov
rcl
push
xor
push
fnstcw
daa
sbb
jle
push
xor
xchg
add
add
adc
cmp
movups
pop
int
ja
scas
cmpsl
pop
sti
movsb
ljmp
xor
scas
hlt
jge,pn
sbb
movsl
xchg
pop
xorb
popa
or
inc
ret
or
cmp
sbb
sbb
lea
or
pop
aad
ljmp
rclb
sub
aaa
cwtl
mov
adc
and
sahf
or
cld
jnp
aas
push
xchg
push
mov
inc
jns
out
jg
or
loop
pop
ret
out
xor
xchg
lods
dec
mov
push
les
pop
mov
neg
fistpl
mov
fldt
push
xchg
mov
fcoml
pop
sub
inc
dec
adc
filds
add
fcomps
mov
and
ss
cmpsb
icebp
movl
jmp
enter
imul
mov
fdivs
mov
fcomps
cmp
adc
push
pushf
adc
jp
or
add
fdivrs
push
arpl
aas
jb
inc
mov
out
sarb
mov
xchg
or
pop
cmp
cmp
xchg
adc
fldenv
ret
inc
jg
inc
and
xchg
scas
and
ss
clc
test
xor
and
dec
pop
or
or
shl
mov
pop
pop
out
enter
sbb
outsl
xchg
mov
out
pop
insl
jle
in
mov
mov
xchg
or
movsb
popf
push
push
addb
inc
xor
push
xor
cmp
pop
pushf
stos
xor
aas
gs
or
stos
mov
aad
fidivl
lret
movsb
stos
jecxz
mov
sbb
pop
pop
addr16
ja
andb
lret
cld
or
adc
xchg
outsb
stos
mov
push
faddl
push
xchg
push
pop
xchg
adc
pop
cld
push
push
fsubrs
shll
inc
dec
jbe
mov
or
nop
sub
mov
subb
ljmp
dec
push
sbb
repnz
hlt
adc
dec
mov
push
aad
lea
mov
adc
rol
add
lock
mov
xlat
mov
mov
addr16
jae
sub
jmp
jne
addl
adc
orb
sub
xchg
arpl
add
or
cmp
mov
leave
vshufps
cmpl
mov
sarb
xchg
mov
inc
popa
das
ja
pop
fwait
push
sbb
sbb
xchg
adc
dec
xchg
jbe
inc
outsl
dec
sub
mov
ret
inc
sub
scas
sbb
sbb
arpl
test
stos
in
xchg
outsb
inc
scas
xor
mov
flds
fnsave
aaa
pop
pop
es
adc
fdivrs
les
jne
dec
mov
sti
mov
fmulp
sti
in
aas
mov
add
leave
cmp
and
sub
xor
dec
cltd
or
adc
into
adc
repz
add
cmp
test
out
loope
loop
test
testb
xor
ja
enter
jmp
jp
mov
sbb
fidivl
es
leave
sbb
hlt
int
aam
lret
or
jb
cmpsl
jno
xchg
sub
dec
testb
into
and
push
lcall
sbb
mov
andb
jg
bound
jl
popa
rolb
dec
cmc
dec
cmp
insb
inc
sbb
xchg
in
sub
sbb
mov
and
mov
dec
mov
sbb
cmpb
cs
mov
nop
dec
pop
leave
cmp
and
cmp
dec
clc
cmp
lock
daa
lcall
js
adc
arpl
fwait
sub
daa
dec
rcrl
sarl
mov
add
mov
and
es
xchg
mov
or
push
mov
out
add
add
inc
and
fldt
leave
sub
adc
mov
cli
jne
mov
xor
sahf
xchg
frstor
cmc
jne
dec
jmp
bound
orb
rorl
cmp
xchg
xor
sarl
fistl
push
cmc
pop
lret
xchg
lods
inc
xchg
xor
cmp
jge
mov
outsl
and
out
js
xor
das
xor
into
mov
inc
aad
inc
sahf
je
xchg
dec
lods
xor
xor
aad
jo
mov
jmp
jnp
cmp
test
xchg
imul
popa
dec
or
icebp
fs
ljmp
fisubs
aam
xchg
xchg
sbb
outsl
mov
cwtl
mov
add
int
dec
jno
push
adc
hlt
shlb
fimuls
pop
int
xchg
jle
or
fadd
out
jns
push
xchg
mov
mov
insl
mov
hlt
test
jne
xor
inc
mov
jne
into
dec
mov
insb
or
jl
lods
lds
shl
mov
cmpsb
movsb
jb
dec
test
xor
xorl
push
ja
sbb
bndldx
test
ret
mov
add
jmp
cmpsl
and
rclb
cmp
dec
repnz
add
dec
fsubrs
add
add
jecxz
shrb
pop
push
dec
cmp
adc
mov
cmpsl
sub
xchg
and
lds
sarb
cmp
ret
mov
xchg
aam
push
pop
mov
pop
jae
lahf
mov
scas
inc
mov
fisttps
in
pop
inc
dec
in
sbb
ret
out
jo
shl
push
pop
out
xor
cmpsl
mov
mov
mov
and
punpcklbw
in
xlat
mov
push
ret
repnz
add
xor
insl
pop
jmp
or
mov
outsl
inc
xchg
inc
and
sub
pushf
leave
add
inc
mov
jmp
call
test
movsb
inc
addl
pop
das
pop
xor
movb
shr
cmp
cmp
xor
insl
iret
and
push
mov
fcomi
hlt
in
lds
inc
orl
into
cs
scas
ldmxcsr
out
or
bound
sti
push
fsts
test
sbb
fsubr
es
dec
fdiv
jg
shll
jmp
mov
mov
into
mov
stos
adc
mov
cmp
sub
popf
push
and
gs
out
rcrl
fmull
mov
sti
sub
add
inc
mov
xor
divl
add
ds
pusha
mov
outsb
mulb
push
jge
in
add
push
fneni(8087
packsswb
popf
xchg
cwtl
stos
lock
data16
inc
add
or
push
and
orb
add
movl
es
push
outsb
leave
cmpsb
das
fdivl
push
mov
mov
jnp
popa
mov
pop
mov
fnstcw
shl
scas
sbb
cmc
jo
pop
movsl
mov
fwait
imul
mov
test
lea
arpl
arpl
insb
sahf
out
xchg
lcall
daa
sbb
push
shrl
dec
lret
xchg
out
jno
dec
mov
dec
mov
sahf
push
jae
xchg
test
es
add
xchg
movsb
mov
or
js
dec
push
mov
xor
int3
push
jae
push
fildl
dec
inc
shl
add
das
inc
fwait
sub
jecxz
arpl
mov
pushf
iret
xchg
sbbl
xor
mov
loopne
sahf
fadd
in
dec
jg
dec
and
adc
sbb
dec
mov
cs
dec
aam
mov
testb
sub
xchg
sahf
gs
test
lods
xchg
pop
xchg
shll
into
mov
scas
dec
aad
jl
int
adc
xchg
mov
ljmp
mov
mov
and
fmul
ja
mulb
clc
sbbl
cmp
or
pop
loopne
xchg
mov
call
cmp
xchg
sub
int
mov
or
cmpsb
sbb
push
mov
ret
dec
into
add
or
out
int3
and
xchg
mov
loopne
in
and
cltd
fsubr
ret
ret
shlb
and
subb
and
insb
inc
lret
dec
in
repz
ficoml
out
insb
xor
mov
sub
in
add
leave
int3
inc
mov
pop
into
mov
lahf
out
fs
dec
adc
les
lahf
dec
movsl
sbb
int
mov
dec
jbe
xor
inc
add
or
pop
in
add
xor
outsl
jne
in
scas
movsb
pop
fmul
fdivrs
add
or
inc
mov
or
mov
mov
stc
push
fiadds
cmc
and
lahf
sbb
dec
call
into
shrb
es
sub
movsl
sub
dec
std
mov
xlat
cmp
cmp
mov
clc
jge
fs
inc
fmulp
test
sahf
mov
fbstp
mov
frndint
mov
incl
fnsave
mov
xor
arpl
insb
cwtl
pop
pop
and
pop
sub
lods
mov
pop
and
xorl
push
jo
xchg
cmpsl
lahf
add
fiaddl
aaa
pushf
insl
enter
fistpl
or
imul
pop
push
decl
addr16
daa
xlat
sti
into
jmp
mov
pop
inc
xchg
icebp
sub
pushf
inc
or
lahf
jp
divl
and
dec
push
inc
pop
lret
sbb
ret
mov
push
pop
lahf
jp
lods
sbb
push
pushf
inc
bound
adc
in
imul
jecxz
mov
mov
sub
adc
mov
cltd
in
lcall
cmp
es
aas
push
jno
dec
xor
push
add
sbb
add
jmp
xchg
dec
xor
orl
mov
lea
bound
push
aas
stos
sbb
pop
lahf
subb
adcb
push
std
out
jmp
xchg
mov
fs
xor
out
xor
jmp
sahf
fisttps
push
cltd
xchg
jnp
ret
nop
adc
jge
mov
sbbl
std
jmp
mov
cmp
inc
mov
bound
stos
shll
addl
xchg
mov
sbb
movsl
sbb
cld
push
cli
xlat
pushf
nop
hlt
ljmp
popa
das
jge
stos
and
jae
dec
movsl
add
pop
inc
fbstp
stc
imull
subl
or
and
jg
sub
dec
adc
cmpsb
pop
jmp
arpl
ret
push
ret
mov
xchg
and
mov
lahf
inc
ficompl
mov
mov
xchg
fldenv
mov
insl
out
mov
jae
ret
push
sbb
or
rorb
mov
mov
sarb
repz
cmp
xor
je
pusha
adc
loop
cmp
cmpsl
cmpsl
cmpsl
cltd
adc
lret
das
jecxz
lds
jne
int3
or
and
mov
mov
pushf
adc
std
and
cmp
or
xor
popf
dec
jmp
das
sub
jecxz
add
xchg
aaa
mov
or
ret
and
rolb
cltd
cmp
xorl
mov
bound
test
xor
pop
bound
aam
and
jle
xor
sub
or
dec
push
ret
sarl
add
cli
imulb
mov
xor
mov
jmp
js
loope
sub
loop
pop
out
popf
rcl
mov
and
mov
sbb
xchg
imul
dec
loop
ja
add
jmpw
inc
stos
push
stos
mov
daa
push
int
jecxz
adc
push
xchg
mov
jns
mov
or
jmp
adc
mov
inc
cld
iret
in
dec
ljmp
mov
das
test
push
addb
jnp
shll
pop
shlb
inc
xchg
push
sub
xor
and
shr
in
fiaddl
stc
hlt
push
shll
push
jbe
lods
rorb
data16
call
stos
or
mov
dec
rcl
cmc
sbb
data16
lods
lret
dec
rcl
ficoml
call
in
pushf
mov
pop
popl
aas
fistl
in
ret
test
imul
fmuls
push
add
pop
sahf
ljmp
addr16
push
test
jmp
imul
mov
test
es
push
mov
mov
popa
jne
pop
mov
jae
dec
lret
dec
popa
test
mov
dec
mov
pop
xor
or
adc
aam
dec
push
fldcw
dec
dec
in
pop
notl
xor
jae
pop
mov
inc
mov
out
setg
lahf
cmpsb
inc
and
jl
mov
adc
mov
in
lock
mov
test
jo
bound
or
out
iret
scas
mov
mov
dec
lahf
stos
sbb
xchg
ss
inc
dec
mov
sbbb
pushf
arpl
loope
les
sub
mov
inc
test
fstps
daa
in
subb
std
out
dec
mov
and
cmpsb
sub
sbb
pop
movsl
lods
mov
enter
cld
fisubrl
xlat
test
push
mov
and
sti
jmp
mov
dec
popl
ds
and
nop
test
mov
aaa
scas
pop
popa
jmp
mov
and
sahf
mov
mov
jno
outsb
sbb
adc
lods
xor
pushf
push
sub
cs
adc
mov
popf
pop
popf
int
das
adc
lcall
mov
add
scas
cmp
xchg
push
mov
jo
pop
jns
test
or
lds
loop
popl
out
sub
mov
stos
pushf
sub
jmp
sub
push
jae
jecxz
mov
std
cltd
cmp
mov
stos
dec
xor
ja
or
subb
addr16
es
push
and
inc
subb
cli
fisttps
shll
lret
push
xchg
and
test
mov
inc
loop
add
movsl
sbb
scas
stos
icebp
ja
mov
insb
xchg
cmc
cmp
mov
cmc
mov
sub
jbe
or
mov
inc
adc
stos
push
dec
aas
lods
lcall
dec
adc
int
aas
lret
imul
je
je
gs
push
ret
divb
ret
sbb
repz
push
push
ss
sbb
cmp
or
cmpsb
adc
in
push
and
and
aas
ja,pn
add
pushf
xchg
int3
inc
es
jns
mov
mov
sbb
subb
or
mov
jle
or
cvtdq2ps
push
adc
repz
stc
pop
popf
add
repnz
into
mov
stos
sbb
cmc
imul
in
loop
push
ljmp
mov
insl
and
fwait
pop
test
stos
adcb
xchg
pop
mov
ss
xchg
lret
mov
das
or
cmp
adc
jo
adc
mov
cmp
mov
int
inc
sub
loopne
roll
data16
xchg
mov
dec
fwait
lahf
cmc
shll
imulb
or
mov
xor
mov
mov
inc
out
mov
dec
cmpsb
rolb
mov
pop
cmp
jo
aaa
cmp
pushf
mov
cltd
ja
insl
add
cs
add
push
into
jae
xchg
cmp
scas
repz
loop
nop
fs
popa
scas
shll
or
inc
outsl
pop
mull
addb
pushf
add
loop
outsl
push
sub
fsubs
das
xchg
inc
enter
movsl
inc
and
fwait
sahf
mov
ja
in
mov
test
or
sub
pop
js
mov
jae
scas
adcl
add
addr16
xchg
mov
fisttpl
loopne
xor
cmp
push
inc
movsb
pop
or
dec
lret
push
aam
jecxz
leave
push
cmc
inc
add
test
cwtl
icebp
pop
and
push
aas
mov
test
ljmp
fwait
inc
dec
adc
mov
or
sub
or
xor
push
mov
cmpb
mov
cwtl
dec
lods
fcomps
iret
into
movsl
mov
addr16
xor
sbb
daa
pop
test
jg
es
addr16
and
and
mov
cld
mov
inc
repz
and
xchg
jnp
jnp
mov
int3
pop
jge
xchg
push
or
imul
jb
scas
xchg
insb
lea
push
mov
cwtl
loop
pop
add
inc
ror
cwtl
and
movsl
push
sahf
push
adc
dec
fldenv
fwait
xor
std
enter
hlt
cmc
jnp
lds
adc
mov
into
movsl
mov
cmc
ret
jno
pop
add
sub
sarl
imul
or
scas
xchg
test
jecxz
xor
outsb
test
dec
jo
and
sbb
rol
xchg
test
fsubr
out
dec
das
test
push
and
lods
push
mov
icebp
pop
mov
mov
pop
and
adc
or
cltd
jp
scas
xchg
pop
jns
loopne
scas
cmpsl
lret
sbb
jecxz
pop
and
jo
sub
jae
movl
inc
icebp
movsl
mov
in
pop
xchg
sar
inc
enter
jg
sbb
adcl
stos
mov
push
xlat
lcall
fsubs
add
loope
lock
sub
bound
mov
jo
push
pusha
pop
sub
cmp
decb
es
push
loopne
jp
xchg
negb
sti
jmp
aaa
inc
cmp
xchg
push
inc
sbb
xor
or
lahf
ret
imul
xchg
xchg
mov
adc
in
push
andb
std
scas
push
and
mov
xor
std
popa
jne
mov
xchg
lds
and
mov
add
xchg
das
mov
rcrb
mov
scas
out
shlb
sub
adc
lea
adc
je
cmp
inc
inc
aas
addr16
add
scas
imul
cmpsb
hlt
xorb
or
sub
orl
rcl
pop
and
mov
iret
and
ds
subl
mov
dec
sub
scas
or
push
xchg
std
std
rorb
pop
pop
push
xor
mov
sahf
or
add
add
pop
es
scas
sti
mov
ja
adc
pop
inc
pushf
add
push
fsubr
and
scas
stos
and
add
rorb
daa
pop
pusha
enter
aam
scas
sbb
cld
cld
push
sub
enter
cmp
mov
mov
cwtl
push
xor
xor
push
xchg
cmpsl
gs
mov
mov
sbb
repnz
cmp
mov
es
nop
je
stos
imul
fwait
enter
xchg
xchg
jecxz
dec
in
cmp
ficomps
out
test
cld
push
insl
push
inc
fnstcw
test
mov
lahf
leave
mov
xchg
lock
lret
or
int3
out
mov
add
lret
inc
cmp
rep
sarl
test
mov
ja
clc
lods
sbb
in
lret
cld
cmpsb
ffree
jns,pn
out
outsb
push
xlat
and
push
mov
ss
add
jp
jnp
out
cmpsl
decb
or
add
sub
sbb
insb
pop
and
and
nop
sub
movsb
cld
adc
xchg
lods
inc
mov
jg
or
frstor
cmp
mov
cmpsl
sub
inc
jmp
adc
imul
inc
lods
scas
int3
mov
fs
shlb
scas
stos
pop
push
insb
repz
add
pusha
out
mov
pop
mov
sub
inc
sbb
jae
test
sub
sbb
dec
stc
cwtl
into
rcl
xchg
stos
xor
rclb
movsb
scas
sbb
and
loope
xchg
lods
pop
jb
xchg
cmp
sub
call
pop
enter
xchg
jno
and
scas
lret
stos
pop
ret
aaa
mov
les
cmp
enter
mov
cwtl
add
cs
mov
push
nop
mov
adc
mov
push
or
xchg
mov
idiv
mov
int3
pusha
bound
cwtl
daa
push
fldl
out
popf
adc
aas
cmp
jge
add
ja
sbb
insl
jle
jp
sub
xchg
divb
inc
adc
subb
inc
ret
jp
addr16
in
les
xchg
pop
dec
xchg
jb
sub
mov
dec
pop
neg
and
dec
and
mov
pushf
dec
jge
add
test
xchg
cltd
rcl
sub
lock
je
xchg
lock
sbb
dec
mov
ja
fimuls
jl
test
cmc
adc
test
in
mov
mov
sub
mov
loopne
xchg
lcall
stc
lea
rorb
adc
mov
cld
cs
adc
push
ret
push
shrl
push
outsl
cmp
ret
push
push
mov
aas
mov
add
jmp
mov
and
enter
nop
sub
or
lret
inc
clc
jg
aam
cmp
ret
bound
insl
rorl
outsb
cmp
pop
negl
mov
sar
imul
jne
mov
lods
pop
dec
mov
xchg
dec
or
test
jno
add
mov
pop
test
xchg
cmc
lods
xor
push
inc
rep
lds
and
dec
ja
mov
fcomip
jl
hlt
and
cmp
pop
mov
sbb
into
cmp
inc
loop
push
mov
sbb
mov
mov
push
xchg
mov
jb
leave
add
rorl
sti
inc
adc
mov
cmp
mov
push
xchg
pop
mov
jno
ss
ja
inc
icebp
jl
mov
inc
push
cmpl
mov
shlb
leave
outsl
xchg
rorl
leave
pop
sub
loope
pop
lahf
pop
inc
and
mov
out
mov
jle
int3
pop
push
inc
pop
mov
inc
loopne
insb
dec
push
cmp
xchg
lock
add
inc
loopne
pop
xor
add
js
mov
xor
mov
xchg
push
clc
sub
pop
iret
or
stos
stos
inc
jb
sbb
adc
es
jne
sub
xor
out
es
add
xchg
sti
ret
lock
xchg
sub
jo
loop
mov
mov
lea
inc
es
cwtl
cmp
loope
out
jb
insl
mov
mov
aas
push
mov
mov
pop
repz
pop
ss
test
xchg
push
pop
adc
add
jbe
inc
or
sahf
xchg
cmp
dec
jne
mov
or
jno
cwtl
xchg
and
adc
xor
loop
subl
in
adc
into
push
dec
loop
adc
imul
dec
in
clc
ret
mov
sahf
dec
fldt
rorb
fdivs
lods
pop
cmp
pop
xchg
jnp
in
xchg
sbb
loop
dec
push
dec
mov
cli
xchg
jnp
fisttps
jnp
pop
jl
movb
outsb
xor
xchg
ds
shll
and
mov
lret
sti
dec
mov
das
leave
adc
lahf
pop
and
push
fstp
pop
dec
sbb
mov
xor
jne
xor
xor
xor
adc
into
sbb
push
sub
sahf
lret
cmp
shrb
adc
push
out
sahf
inc
xchg
jp
int
test
mov
es
data16
pop
add
pop
imul
aaa
sub
in
dec
inc
mov
popf
shlb
into
fildl
add
lea
mov
inc
mov
sahf
cwtl
pusha
fsubl
sbb
sub
lahf
in
cli
jg
cmpsb
push
cmp
aam
insl
inc
jo
scas
inc
fildl
pop
sub
stos
dec
lret
loop
jno
insb
int
push
xor
and
dec
sub
cmc
iret
imulb
xor
out
shll
cmpps
aam
bound
push
lret
lcall
xchg
mov
cli
aaa
cmp
leave
outsb
add
mov
sub
movsl
in
cli
pop
lahf
test
xchg
add
xchg
and
icebp
jmp
xchg
mov
push
jae
lods
mov
dec
iret
stos
orl
in
xchg
adc
jnp
and
sub
addl
push
mov
loope
push
leave
mov
inc
pop
jp
das
push
pop
xchg
stos
mov
mov
daa
fwait
iret
cltd
ja
or
sbb
cwtl
jo
mov
scas
hlt
shrl
sarb
dec
jno
add
call
pusha
cmp
inc
adcb
testb
es
adc
or
das
or
scas
das
insb
dec
lea
dec
out
jmp
ja
pop
jo
pop
inc
dec
pop
mov
int3
xor
scas
aaa
and
loope
add
notb
ret
xor
push
cmp
lds
popa
mov
das
jp
in
dec
add
or
test
into
clc
out
cmp
fmul
pusha
scas
adc
push
fiaddl
xorb
fldt
test
aaa
cltd
push
add
adc
sahf
dec
and
fldl2e
jp
add
xchg
dec
pop
mov
mov
repnz
scas
imul
dec
xchg
add
ret
imul
sub
add
icebp
hlt
or
mov
lock
jl
outsb
leave
call
js
pop
pop
aam
sbb
jl
stc
dec
xor
push
cmpb
idivl
sti
or
repnz
inc
imul
jl
in
std
xlat
xchg
ret
aas
pop
adc
out
jmp
jecxz
loope
or
dec
movsl
ds
popa
push
std
cmpsl
aad
icebp
sbb
inc
ret
ret
shll
loop
ret
add
lahf
loop
and
xor
or
test
loop
lcall
rcrl
pop
jecxz,pn
ret
lds
cmc
into
push
orl
xor
sub
pop
push
fsts
pop
jne
aam
lods
neg
rcl
arpl
xchg
div
mov
in
loopne
and
into
das
add
mov
xchg
mov
sub
jns
test
push
jb
push
inc
arpl
dec
stc
mov
mov
adc
cmp
leave
sbb
dec
mov
rorb
push
ds
mov
repnz
insl
mov
inc
pusha
lret
pop
lods
pop
sub
mov
or
sub
push
cmp
roll
jnp
sub
test
je
mov
mov
xor
cmpsb
xchg
arpl
mov
hlt
es
clc
mov
pop
dec
add
xchg
sub
or
pushf
dec
push
xor
cs
fcompl
out
outsb
or
icebp
sbb
shl
adc
jge
xchg
cwtl
sub
pop
shlb
xchg
inc
outsb
xor
ja
inc
es
movsl
out
call
cmpsb
or
popa
xchg
xchg
into
pop
mov
stos
int3
push
jne
cmp
pusha
dec
cltd
lret
out
push
out
mov
lret
shr
je
in
add
mov
inc
cmp
pop
and
idiv
add
divb
cmpsl
push
inc
jnp
mov
xor
dec
jl
push
or
lds
mul
jnp
shrl
loopne
shlb
mov
fnstcw
push
xchg
cmp
jecxz
std
lret
fisttpl
adc
in
mov
cmp
adc
out
jnp
std
lea
out
dec
push
and
dec
cli
dec
orl
mov
cmpsb
adc
nop
in
or
mov
lds
push
dec
cwtl
cmp
and
push
inc
xlat
sahf
push
cmp
mov
add
inc
xchg
shl
pop
jbe
sub
mov
mov
out
dec
insb
cmpsb
enter
outsl
inc
jmp
clc
cmpsb
xchg
sbb
addb
outsl
fstpl
and
cmp
in
pop
cld
and
cmp
in
fists
sub
sti
mov
xor
pop
cwtl
aas
loopne
scas
test
sub
orb
push
loopne
ret
lods
or
mov
call
sbb
or
push
leave
add
gs
pop
add
add
in
cli
ficoml
xchg
clc
flds
lret
cmp
sub
cltd
push
mov
negl
mov
lcall
iret
xchg
jecxz
dec
lret
xor
xchg
sub
dec
lock
test
adc
mov
inc
push
add
add
in
sub
std
inc
mov
mov
imul
mov
mov
rcll
dec
or
mov
mov
inc
rorb
fdivrs
cmp
out
in
scas
mov
cmp
jne
mov
outsb
pop
sub
pop
or
push
jnp
sub
dec
mov
inc
fistpl
sub
das
fdivrs
sahf
stc
pop
lea
iret
sbb
cwtl
push
pop
mov
dec
fs
jg
ljmp
cwtl
adc
sub
arpl
cmpsb
les
cmp
fs
scas
add
loope
xchg
fisttpl
inc
adc
xchg
xchg
mov
dec
mov
mov
andb
imul
notb
mov
add
loop
ljmp
jne
fldl
into
xchg
add
cmp
inc
cld
aaa
push
fidivrs
fcmovnbe
jmp
and
aas
sbb
push
into
and
aas
frstor
test
xchg
out
fisttps
sbb
cmp
fmull
fsub
sub
cmpsl
mov
pusha
idivl
les
and
cmp
outsl
out
xchg
rcr
push
pop
sub
add
xchg
ret
push
dec
insl
cmp
sti
ror
loop
stos
test
push
mov
sbb
fsubl
push
hlt
popa
cmp
xchg
lea
stos
ja
lcall
mov
ljmp
mov
add
jnp
in
into
mov
or
push
sub
movsl
les
test
psubq
pusha
dec
ds
jno
test
or
xor
push
addr16
lret
pop
fiadds
setnp
fwait
fs
push
inc
sbb
lret
scas
scas
lret
inc
or
xchg
lods
out
add
ds
lea
lahf
in
pop
ficompl
and
xchg
inc
imul
lahf
xchg
mov
jge
jg
jg
mov
cli
clc
lods
lahf
mov
mov
cmpsb
push
fcoms
lods
pop
cs
test
add
push
gs
mov
dec
cmp
dec
aaa
push
aam
dec
pushf
mov
fstpt
dec
pop
add
push
gs
addr16
xor
or
mov
ret
clc
hlt
add
fs
cld
jecxz
xchg
cli
push
push
out
mov
das
in
and
add
out
js
outsl
mov
repz
out
xchg
sub
pop
inc
movsl
adc
pop
imull
jnp
xlat
inc
jbe
pop
inc
sti
mov
cmp
xchg
cmp
mov
add
gs
loop
push
inc
adc
std
int
xchg
pop
jge
sbb
sbb
cld
movb
imul
lods
cmp
xchg
pmaxub
dec
int3
out
jne
or
enter
mov
pushf
cmp
mov
div
xchg
cmp
mov
add
insl
fs
dec
stos
cmp
cld
stc
mov
jae
cs
xchg
rcr
fisttpl
fsts
outsl
or
inc
fidivs
lods
jl
adc
pop
dec
js
jae
pop
call
ret
pop
ret
pop
fiadds
cli
ds
mov
std
jp
inc
sbb
adc
fldenv
outsl
mov
ja
das
ss
mov
add
sahf
fdivl
js
dec
stc
mov
test
mov
jg
cmp
jns
cld
fists
jmp
cmp
iret
mov
add
fimull
xlat
fwait
or
cltd
mov
or
out
sahf
jne
fs
xchg
and
icebp
in
in
icebp
adc
mov
xchg
cmp
sub
xchg
ret
push
fcompl
movsb
and
mov
ss
rcll
dec
mov
mov
lret
sub
clc
push
lock
jmp
adc
in
call
in
dec
adc
xchg
push
and
inc
push
dec
pop
scas
movsl
xchg
dec
xor
xchg
jle
pop
cld
ds
jno
sbb
pop
mov
jg
jae
adc
arpl
sub
and
clc
lcall
mov
outsb
shll
pushf
inc
mov
test
ret
jge
adc
cwtl
outsl
imul
lods
xor
fcompp
out
mov
das
adc
pop
jmp
xchg
out
inc
insl
mov
pop
data16
stos
push
test
cmp
ffreep
mov
xchg
jne
movb
sub
lods
cs
mov
cmc
xor
xor
dec
mov
leave
xor
push
xchg
in
lods
ss
popa
or
shr
mov
add
insb
cmp
aam
mov
mov
xchg
pop
push
adc
pop
scas
cmp
popa
shrb
jne
cs
add
sub
pop
popf
mov
mov
in
sub
dec
mov
in
mov
or
es
xlat
sub
in
pop
push
cltd
adc
rolb
mov
sub
outsl
mov
mov
dec
xchg
js
xchg
aaa
faddp
dec
adc
popf
and
std
inc
sub
rcrl
mov
cwtl
jmp
gs
add
test
in
ja
push
int3
mov
and
fistpl
fcompl
rclb
jae
dec
mov
movsb
int3
xlat
in
fucomip
in
test
aad
loopne
sub
push
xorb
sbb
dec
jp
adc
mov
adc
cmp
adc
push
loop
jecxz
frstor
xor
push
jge
mov
mov
mov
call
pop
ljmp
fists
in
mov
arpl
cmp
and
cmpsb
mov
xchg
stc
jns
mov
mov
xlat
inc
cwtl
into
adc
in
icebp
lahf
bound
ss
mov
push
mov
jmp
mov
mov
lret
xchg
or
push
push
mov
xchg
mov
rcrl
xchg
or
push
rorl
push
adc
daa
sbb
push
mov
scas
dec
std
gs
xchg
mov
fidivs
pop
add
jl
nop
loope
imul
add
aaa
iret
xchg
adc
inc
subl
dec
xor
sub
lcall
out
add
lods
loope
adc
jmp
cmpsb
shlb
adc
cmpsl
sbb
dec
adc
test
lds
or
mov
or
xchg
pop
out
les
mov
jle
cmp
inc
arpl
sub
push
ret
pop
dec
mov
repnz
imull
divb
mov
dec
sbb
subb
lcall
xchg
scas
int
push
scas
mov
dec
cmp
sbb
divb
fsubrl
lods
repnz
xor
sub
stos
add
sti
cltd
loop
jg
and
xchg
outsb
test
or
xor
jg
stos
loopne
lods
mov
insl
jnp
or
jnp
hlt
sbb
gs
cmp
xor
cmp
sbb
pop
nop
fbstp
cmp
sbb
and
insl
std
mov
pop
cmpb
out
push
sub
daa
and
or
test
fidivs
dec
add
dec
xor
rcr
mov
sbb
ret
or
test
jo
mov
or
lods
pusha
mov
mov
icebp
mov
add
movl
mov
mov
sbb
imul
icebp
sbb
scas
push
lret
mov
loopne
test
cmp
push
push
aad
loopne
sarl
lods
fsubl
sbb
xchg
push
or
cmpb
out
pop
jb
mov
xchg
in
enter
jo
dec
sbb
std
ret
xor
adc
cld
cmc
and
mov
push
je
imulb
dec
aad
pop
mov
mov
std
ds
movsl
xchg
repnz
mov
repnz
sbb
jmp
xor
ja
lcall
xchg
push
out
ret
popl
cmp
sub
out
inc
daa
sti
ljmp
lcall
sbb
push
shlb
mov
cmc
jge
nop
inc
cmp
mov
outsl
lcall
aaa
pop
lock
fildl
imul
mov
imul
xchg
dec
pop
dec
mov
xor
call
fdivr
in
inc
mov
mov
fwait
mov
lcall
addb
push
cltd
fnstenv
push
fstpt
test
test
cmpsb
mov
jne
push
je
movsb
fsubrl
push
movsb
and
out
dec
lea
cli
dec
test
pop
adc
fwait
aaa
lods
pushl
dec
sbb
mov
sub
fidivrs
dec
pushf
mov
cs
ljmp
in
in
inc
jns
pusha
jle
call
push
test
lret
sub
xor
mov
aam
ret
push
mov
xor
xor
ss
mov
pop
lahf
xor
mov
pop
ds
aaa
pop
cltd
xchg
jl
aam
mov
nop
xchg
dec
outsl
push
jb
mov
push
cld
add
subl
jnp
gs
sbb
xchg
cmpsl
rorb
les
stos
movsl
dec
xor
in
inc
pop
lds
sbb
cmp
mov
and
fwait
arpl
repz
arpl
das
sbb
jae
lret
mov
iret
xchg
pop
jo
or
or
stos
or
scas
and
icebp
jge
push
imul
or
mov
mov
insl
cwtl
push
push
sarb
nop
imul
das
fisttpl
cmp
mov
cmp
fdivrs
cli
add
fsts
fidivrs
sbb
jne
mov
push
hlt
mov
les
mov
fnstenv
lcall
mov
inc
test
dec
out
sbb
sub
xchg
cld
mov
in
mov
mov
cmp
sbb
loopne
dec
or
push
ss
jmp
fldt
outsl
out
js
inc
jmp
sub
fs
out
loope
sbb
stos
loope
sub
ljmp
sti
hlt
aas
jno
jns
xor
stos
lea
xchg
lcall
cmpsb
mov
movsb
xchg
and
mov
je
pop
fldl
aam
sti
shrb
jle
adc
out
or
movsb
test
repz
lea
fincstp
push
insb
add
inc
outsl
mov
pop
and
stc
sub
push
pop
lcall
fnstsw
mov
sbb
mov
call
pusha
xchg
jp
pushf
fnsave
movlps
out
in
aad
test
lods
mov
dec
xor
cmp
jp
popa
mov
add
add
jno
sbb
xchg
clc
aaa
cmp
daa
pushf
iret
and
dec
xchg
nop
mov
push
gs
in
addb
sub
div
aad
dec
lods
inc
jb
xor
xchg
adc
pop
shrl
fs
cmp
adc
jae
cmp
nop
and
insb
dec
cltd
or
and
push
pushf
add
xchg
mov
xor
cmpsl
mov
push
sub
mull
ret
arpl
pop
dec
mov
pop
jp
cmc
xchg
dec
dec
or
jl
ljmp
dec
jne
cmpsb
mov
sub
jns
test
push
lahf
and
popa
sub
mov
stos
xor
mov
filds
fimuls
dec
fwait
xchg
lahf
stos
adc
or
and
das
add
mov
pop
pop
pop
ret
les
cltd
repz
jns
and
leave
xor
pop
dec
mov
push
inc
leave
aam
out
sbbl
int3
faddl
or
cmp
pmuludq
aas
std
ds
out
testb
dec
test
enter
jg
divb
cltd
fs
and
mov
sub
int3
inc
dec
mov
ljmp
in
pop
sbb
pop
scas
sbb
subb
inc
add
mov
lcall
mov
sub
mov
scas
cmp
pop
push
or
jg
inc
lods
cli
and
test
push
jecxz
movsl
pusha
repnz
xorl
test
push
or
pop
fldcw
sub
inc
jb
jge
enter
jmp
adc
ficomps
or
into
jle
mov
or
ja
inc
insl
xor
imul
add
bound
pop
icebp
pop
sbb
push
fsubrs
imul
bt
xchg
inc
out
pop
cmpsb
jno
lahf
xchg
sbb
fistps
dec
and
lock
fucomi
xchg
fcmovnu
push
shlb
or
xor
and
faddl
sbb
xchg
cmp
cltd
push
and
ret
mov
data16
mov
jmp
lods
js
fidivrs
xor
inc
test
out
int3
cld
aas
mov
dec
lcall
ds
clc
pop
fcompl
pop
xor
or
and
mov
push
sti
out
sbb
shll
xchg
jmp
fwait
rcrb
mov
mov
mov
sub
push
dec
or
cmp
or
jl
mov
dec
cmp
cmp
lcall
popl
decb
xor
rcrb
and
jne
push
test
popa
inc
test
in
lahf
ret
dec
bound
pop
add
or
xor
sbb
loope
test
push
cmp
rcr
jbe
mov
or
test
out
js
pusha
loopne
sub
sub
dec
imul
sub
cmpsb
mov
sub
ljmp
mov
dec
aam
enter
adc
xor
fbstp
lahf
cltd
jp
sbb
arpl
shll
outsb
lods
or
iret
and
cmp
test
fdivs
xabort
adc
cmp
sbb
jnp
mov
cmp
xor
xchg
movl
and
inc
mov
loope
dec
stc
sbb
inc
aad
pop
cli
lods
push
mov
jmp
adc
add
fldenv
pop
in
xchg
or
les
sub
aaa
aad
in
push
insb
imul
mov
or
pop
push
imul
call
pop
mov
or
cmp
sbb
xchg
ss
adc
fwait
or
rcr
popa
jae
sahf
lret
push
pushf
sti
ds
mov
xor
sbb
insl
add
call
mov
stos
push
fstpl
icebp
aam
aam
ds
mov
push
popf
pushf
testb
sti
fcomps
in
mov
dec
cmp
push
int3
jp
xchg
cmp
or
roll
mov
int
enter
jmp
cmpsb
stos
rol
aas
jae
push
inc
outsb
add
ja
jge
xchg
sub
sub
sbb
je
rolb
mov
lcall
sbb
xor
arpl
xchg
push
dec
mov
cmpsb
repz
push
add
jnp
xchg
xchg
int
dec
dec
xorl
imul
pop
out
jmp
sarl
inc
leave
jo
clc
insb
pop
jmp
in
sub
cmp
popf
fisttpll
xlat
push
adc
and
inc
xor
pop
push
cmp
or
push
xchg
vpunpcklwd
mov
das
jmp
repz
out
inc
sbb
fbld
test
adc
and
movsl
std
add
mov
inc
add
mov
cmc
jae
test
rcll
pop
pushf
pusha
mov
adc
sbb
repz
cmpsb
add
aam
xchg
cwtl
jecxz
hlt
or
inc
jge
mov
adc
mov
push
mov
daa
or
push
jmp
hlt
sub
imul
dec
sar
mov
fucom
fisttps
cmp
mov
mov
pop
pop
mov
sahf
jne
loopne
push
adc
mov
ret
lret
xlat
repz
and
sti
and
lret
xchg
int3
ja
arpl
sbb
inc
in
int
loop
inc
cmp
popa
dec
outsl
inc
outsb
lcall
cmp
aaa
cmp
or
loop
dec
sub
pop
inc
stos
mov
jp
push
cmpsl
xchg
jge
cmp
and
cld
aam
out
rcll
push
push
pop
fistl
je
dec
lods
std
sti
and
jmp
gs
stos
arpl
pop
xchg
inc
fptan
lock
xchg
mov
mov
aad
fnstcw
cmpsb
sbb
lods
insb
imul
not
add
xor
hlt
je
or
sub
push
test
mov
pop
scas
push
pop
and
mov
xor
add
hlt
shrl
imul
scas
jb
stos
pop
repnz
mov
imul
adc
mov
in
fstps
mov
stos
mov
push
outsl
jmp
add
out
cs
sub
adc
mov
ljmp
lock
cmpsb
pusha
push
movsb
je
push
rol
cmpsl
cld
mov
and
lock
nop
scas
mov
xchg
clc
pop
lods
in
bound
pop
outsl
iret
mov
sub
cmp
adc
test
jo
adc
cmpsb
lods
cmpsb
cmp
add
sahf
add
loope
testb
movsb
add
sbb
ljmp
xor
xor
dec
ss
fcoml
xor
or
mov
fnstsw
cltd
inc
adc
jbe
out
xor
cmp
subl
add
lcall
adc
jae
dec
jb
sub
push
push
clc
lret
je
jmp
mov
adc
or
mov
inc
mov
outsb
push
enter
int
loopne
lret
lods
mov
aas
imul
xchg
out
popa
dec
call
mov
setle
push
data16
mov
mov
sbb
pop
mov
fmull
lock
mov
gs
or
adc
cmp
jmp
dec
adc
push
in
std
push
int
in
pop
fidivrl
in
pop
in
mov
pusha
xchg
mov
push
sub
iret
stos
xor
xor
pop
dec
in
lock
sub
xor
fwait
in
xor
test
and
in
and
mov
sbb
popf
stos
neg
fdivrs
shll
or
sbb
mov
xor
lret
mov
dec
xchg
sti
sub
leave
mov
sbb
push
inc
mov
nop
xlat
push
adc
push
outsl
mov
in
dec
pop
xchg
jmp
xor
dec
mov
or
sbbl
test
fnstenv
inc
js
dec
arpl
adc
popa
dec
popl
testb
fists
mov
and
cmp
in
mov
dec
mov
push
inc
js
mov
jns
sahf
or
sarl
mov
shll
shr
ja
daa
cmc
jae
rcrl
jnp
push
dec
sbb
cmpsl
ficoml
fwait
imul
aam
add
lods
js
mov
jo
in
sbb
mov
sahf
push
int
insl
sbb
sub
cmp
adcl
outsb
inc
iret
test
mov
pop
add
fsubr
sbb
mov
out
add
ds
push
xor
dec
in
fidivrl
cmp
scas
push
lods
scas
jp
pop
xor
pop
fldt
fwait
pop
pop
jmp
mov
mov
sub
xchg
stos
test
sub
mov
jg
sub
arpl
xor
mov
and
and
adc
jg
fstp
aas
cli
int3
mov
xchg
sbb
test
mov
mov
sahf
pop
adc
jle
jp
std
lds
inc
push
adc
mov
inc
mov
push
mov
push
add
push
and
adc
cmp
adc
popf
lret
rorl
add
sbb
repz
mov
in
mov
dec
inc
add
jne
pop
add
jg
int3
in
cmc
icebp
inc
scas
pop
aam
pop
repnz
movsb
mov
repz
fiadds
flds
mov
inc
icebp
xchg
cmp
push
icebp
into
jns
add
cwtl
and
test
cmp
insb
add
addr16
in
lahf
fcmovnbe
dec
sub
add
fstpl
mov
mov
xchg
dec
loopne
mov
or
push
ds
sub
bound
mov
sbbl
and
mov
xor
cmpsl
cmp
popf
and
adc
test
mov
fstps
test
sbb
or
loopne
lcall
xchg
ljmp
stos
stos
sub
mov
repz
mov
bound
lods
mov
stos
push
leave
mov
lret
sbb
push
movsl
sub
add
mov
jmp
roll
fdiv
rorb
arpl
and
std
repnz
or
pop
fldenv
out
nop
xor
sub
loopne
aam
test
xor
stos
js
pop
or
int
outsl
adcl
mov
out
lock
bound
push
rcrl
adc
jae
push
push
dec
push
xrelease
push
lods
mov
ja
das
push
cwtl
adc
mov
inc
xor
cmp
dec
xchg
and
xchg
addr16
mov
xor
test
loop
popa
fcomps
lcall
cmpsl
je
push
lahf
lock
scas
cmp
aam
jge
or
mov
lcall
jl
push
movsl
jp
push
push
mov
outsl
jmp
mov
inc
subl
movsb
out
sbb
fldenv
cs
je
std
scas
or
aas
mov
js
adc
std
outsl
ljmp
loope
xchg
icebp
shll
pop
call
and
fistpll
inc
cmp
stos
xchg
je
stos
push
lock
push
imul
mov
insl
xlat
adc
cli
enter
add
outsl
pop
out
push
xchg
cmp
in
scas
cmp
ja
nop
sbb
mov
inc
int3
mov
nop
inc
outsl
enter
mov
lods
sub
out
lock
pop
sub
cltd
cmp
and
adc
cld
jbe
mov
mov
push
cmp
ret
in
or
fsubl
adc
jl
xchg
les
pop
cltd
stc
jae
shlb
stc
fcompl
icebp
cmc
jge
mov
jmp
jnp
sub
mov
scas
xor
fnstenv
mov
orb
mov
scas
push
adc
test
push
leave
mov
fildl
mov
ljmp
insl
aaa
fs
cmp
dec
jl
dec
stos
test
mov
popf
rorb
jo
or
gs
xchg
dec
aaa
fsubs
mov
dec
xorl
cs
js
inc
cmp
inc
scas
dec
outsb
push
test
neg
stos
fs
inc
gs
sub
xor
and
xor
push
sti
add
sub
jo
std
xor
into
mov
test
push
jbe
in
push
test
mull
jno
mov
shll
into
shlb
bound
shlb
rorb
inc
add
and
ss
jp
inc
fwait
nop
lods
lret
mov
jl
mov
cmp
cmp
jge
sbb
pop
int3
cmp
xchg
sub
add
sbb
aam
ds
adc
adc
or
xor
cmc
ds
decl
call
in
fsubrl
dec
fistl
aad
cmp
sub
ficoms
in
das
adc
adc
xor
cmp
popa
push
scas
out
sarb
idivl
jl
repz
ja
in
mov
nop
sarl
mov
push
shll
les
xlat
std
jnp
mov
leave
inc
pop
mov
ja
sbb
and
int
adcb
and
or
es
nop
sub
addr16
insl
arpl
mov
cltd
mov
pop
shll
cmpsl
push
xchg
add
mov
mov
sbb
movb
mov
push
lock
int
dec
sbb
jae
mov
in
add
pushf
xchg
add
out
inc
mov
mov
mov
in
lods
adc
adc
mov
stos
notb
sbb
enter
and
adc
dec
jmp
or
jnp
into
mov
dec
iret
movsl
push
mov
mov
lods
cmpsl
sbb
test
xor
dec
scas
pop
xor
dec
add
or
stos
cmp
fisttps
test
add
push
imul
push
sbb
cmp
adc
mov
pop
mov
dec
fstl
dec
or
inc
push
mov
push
in
rorl
ss
mov
sub
jecxz
aaa
mov
sbb
pop
push
xchg
dec
xchg
jl
mov
icebp
repz
ja
pop
ficomps
jmp
out
xor
or
frndint
ret
mov
cld
call
faddl
lods
insl
dec
lods
adc
push
js
aam
or
scas
adc
repz
jnp
fdivrp
es
in
mov
mov
push
xor
insl
inc
movsb
cmp
mov
test
pop
dec
sbb
and
cld
outsl
fwait
cld
push
mov
adc
xor
jno
sub
jge
sbb
cwtl
xchg
xchg
aam
mov
sbb
push
nop
push
add
sub
clc
jecxz
ljmp
cmpsb
mov
sarl
ret
xor
cmc
or
pop
xchg
ja
stos
lret
xlat
test
loop
in
push
imull
loopne
xchg
sbb
adc
fisubs
lds
loopne
sar
jbe
aas
xchg
jne
sub
jl
jle
in
jg,pn
mov
test
mov
pop
sub
ret
ss
xchg
xchg
lahf
mov
push
stc
fs
rorb
sti
mov
xlat
push
mov
movl
aad
mov
xlat
jmp
push
daa
fiaddl
loope
test
xor
cmpsb
shlb
mov
pushf
jnp
xchg
adc
fwait
dec
sub
scas
addr16
lret
mov
jge
cmp
in
fcoml
ffreep
outsb
xor
test
sbb
mov
and
mov
hlt
adc
lock
pushf
sbb
out
or
mov
dec
lea
mov
subb
int3
gs
inc
test
adc
fs
lret
xchg
movsl
lret
mov
push
in
cmp
loope
xor
jle
or
negb
push
cmp
cli
insb
cmp
inc
jne
movsl
fsub
sarb
push
or
insl
adc
xchg
lret
pop
mov
sbb
cmpsb
cmp
insb
inc
dec
loop
fwait
inc
loopne
data16
andl
mov
push
xchg
adc
adc
inc
sub
jb
mov
mov
mov
adc
jae
lcall
and
adc
loope
sub
xchg
imul
imul
cmp
mov
das
inc
xchg
ficomps
cmp
or
stos
imul
and
mov
repnz
lret
jle
xchg
jecxz
pop
mov
push
mov
outsl
mov
cwtl
js,pt
fstpl
loope
fldcw
pop
scas
out
and
dec
xlat
cmc
mov
ficomps
ja
insb
jge
sbb
sbb
xchg
mov
dec
add
xor
stos
data16
xor
das
std
scas
mov
mov
push
movsl
mov
adc
push
adc
mov
cmp
cmpsl
jp
jmp
ret
mov
cmp
rol
inc
movsl
into
fs
sarb
push
and
mov
xchg
add
and
mov
je
add
outsl
pop
mov
or
movsl
testl
jns
mov
dec
inc
xchg
int
add
push
push
ret
fisubs
scas
iret
out
mov
inc
pop
lock
nop
mov
cmp
jmp
lock
adc
arpl
adcb
stos
test
inc
outsl
das
cli
sub
popa
jb
scas
xor
adc
mov
and
es
dec
jmp
movsl
jnp
xchg
les
jns
lds
sbb
jbe
pop
ret
sbb
adc
cmpsb
pusha
pop
inc
jmp
fucomi
or
pop
jmp
push
jo
cmp
cli
add
push
pusha
subl
jne
fidivs
push
mov
aam
clc
orb
lret
push
repz
clc
or
or
jge
aaa
xor
mov
daa
imul
pop
mov
mov
mov
push
or
ret
rorl
pop
sbb
scas
gs
sbb
xchg
xor
js
ja
and
pop
mov
std
mov
int3
xor
mov
ret
aam
ja
jnp
lods
pop
ljmp
mov
mov
jmp
popf
mov
jl
sbb
mov
mov
loope
push
sub
lods
sbb
pop
lods
mov
mov
lods
or
xchg
xor
int
ja
push
cld
jae
mov
push
fdivrl
cmp
imulb
pop
push
cli
xchg
jne
xlat
aaa
mov
mov
insb
popf
pop
mov
scas
outsb
adc
push
push
sbb
insl
leave
mov
sub
jg
mov
out
jecxz
cwtl
shrb
call
test
pop
push
gs
aam
loopne
jg
mov
cmp
aam
scas
pop
mov
jbe
inc
data16
inc
xlat
or
jp
orl
add
pusha
or
jae
mov
sbbl
xchg
pop
sub
stc
int3
xor
cmp
cmp
into
stos
push
pop
mov
outsb
rcll
sbb
mov
in
pop
andb
mov
xchg
and
jg
xchg
and
xchg
or
nop
fwait
insl
inc
stos
roll
dec
or
jnp
or
jno
mov
fwait
inc
adc
out
lret
add
mov
insl
ja
aaa
jbe
cld
std
xlat
add
adc
lea
lock
negb
data16
cmp
mov
mov
sbb
pop
mov
push
adc
sbbl
jl
mov
jnp
jnp
les
xchg
loopne
inc
insb
loop
cmp
cmp
and
inc
xor
fucomp
inc
cmpsb
outsb
mov
aam
out
scas
mov
inc
aaa
ret
cmpsb
fwait
lds
aad
and
xchg
dec
xlat
dec
addb
loop
push
mov
sti
mov
inc
lret
adc
cwtl
fisubrs
mov
push
jg
sbb
fildl
lods
push
mov
dec
jae
inc
sbb
push
cmp
sbb
sbb
loop
xchg
mov
mov
push
ds
inc
mov
mov
jb
mov
cmp
movsb
vcvttsd2si
cld
jb
testl
and
and
ss
push
or
push
icebp
cmp
cltd
or
push
sub
sbb
xchg
lea
divl
dec
pop
cmp
xchg
bound
inc
jns
scas
insw
sbb
leave
dec
jne
iret
fwait
stos
lock
call
mov
das
mov
int3
movsl
leave
jne
icebp
mov
jae
xor
insl
sub
sbb
push
xlat
test
xchg
sbb
les
xchg
scas
push
outsb
clc
icebp
rolb
add
inc
cs
lock
or
jo
andl
stc
add
cmc
pop
cmp
andb
pop
scas
mov
dec
mov
stos
cmpsb
inc
jl
xchg
sbb
sti
shlb
int3
mov
xchg
idivl
ret
adc
out
pop
in
push
mov
jmp
pop
add
test
test
cs
mov
or
insb
sub
lret
cmpb
jge
popl
insb
cwtl
aaa
aaa
movsl
cmpsl
lock
mov
xchg
push
xchg
inc
pop
pop
shrl
push
js
fiadds
xchg
orl
fists
out
outsb
dec
sbb
mov
cmp
imul
jge
testl
es
movsb
dec
sbb
test
push
icebp
inc
adc
ror
xor
add
test
xchg
or
lcall
icebp
out
inc
mov
mov
xor
scas
push
scas
xor
nop
jo
push
push
and
stos
mov
pop
dec
dec
imul
mov
pop
mov
pop
xor
mov
sahf
mov
pop
jge
adc
int3
push
mov
je
mov
jmp
inc
xchg
and
int
mov
inc
stos
pushf
insl
mov
pop
stos
test
out
rorb
pop
xor
lock
cmp
or
lret
xor
mov
fldenv
mov
push
iret
xor
lods
outsl
jae
mull
sub
aad
pop
out
fldt
or
jne
inc
pop
nop
nop
pop
jle
xchg
arpl
sar
push
and
xor
or
mov
jnp
leave
mov
ficoms
add
cmp
and
inc
sbb
sub
inc
cmc
inc
push
mov
jns
in
sarl
int
cmp
mov
sbb
pusha
aam
mov
pop
cltd
nop
loopne
cmc
outsb
test
aas
pop
cmp
test
mov
mov
push
jle
inc
pop
xor
jmp
inc
in
mov
dec
popa
nop
dec
pusha
push
pop
into
sbb
pusha
repz
hlt
mov
ret
mov
icebp
xchg
mov
cmp
sbb
adc
xlat
fwait
and
mov
or
stc
fists
fcomp
pop
mov
icebp
outsb
movsb
jge
in
pop
pushf
dec
xchg
mov
adcl
and
sub
repnz
jno
es
xor
ret
cmp
stc
xchg
adc
addr16
mov
lea
or
ljmp
scas
jl
rcrb
js
jns
int3
nop
aas
test
leave
into
mov
mov
xchg
mov
cld
xor
adc
pop
aad
leave
repnz
shlb
mov
mov
sbb
les
inc
push
inc
ja
inc
sub
push
cwtl
adc
repnz
leave
out
pop
mov
push
scas
xor
rcl
jle
mov
sarb
and
fstpt
sti
lret
add
aaa
mov
jle
negl
cmpsb
enter
ljmp
gs
test
outsb
or
in
cmp
mov
push
push
test
push
jle
and
ss
add
jmp
pop
ret
cmp
icebp
xor
sbb
inc
int
jl
js
dec
cmp
push
ret
xchg
test
rcrb
stos
popa
fistpll
push
aaa
int
stos
add
pushf
inc
repz
pop
ljmp
ljmp
lcall
adc
sbb
pop
mov
and
test
xchg
push
sub
fcmovnu
jle
outsb
int
dec
and
addr16
push
pushf
jnp
push
loope
outsl
cmpsb
outsb
fistpl
dec
popf
and
leave
cmp
xor
iret
in
xchg
or
adc
ffreep
inc
fisubl
rcrl
xor
cmp
xchg
test
shll
mov
ds
daa
fdivl
sahf
fst
sub
adc
int
add
adc
or
push
mov
xchg
mov
sbb
pop
jl
loop
dec
mov
je
movsl
and
jbe
mov
fnstenv
cmp
mov
lods
cmp
adc
bound
popa
xchg
loopne
cltd
add
or
mov
movsl
popa
mov
mov
pop
jp
xchg
loop
dec
subl
loop
lods
into
mov
bound
fnstsw
xchg
subl
test
std
dec
lea
inc
dec
cmpsb
inc
and
rcr
mov
xor
push
popf
sub
adc
rolb
ja
ljmpw
ss
int
cmp
xchg
mov
shlb
test
mov
stos
mov
shr
lahf
inc
cmpsl
dec
js
and
ret
fmul
or
test
mov
add
mov
mov
out
and
sbb
rorl
negb
push
loope
aaa
sub
jge
mov
ljmp
test
popf
aad
sahf
cs
imul
fdivrl
cmc
fnstsw
int
jbe
shll
out
pop
mov
ja
push
in
add
adc
bound
aas
ljmp
and
je
mov
stos
ror
inc
mov
cmp
pop
data16
and
lret
adc
aas
icebp
mov
dec
push
stc
cmpsl
and
jns
sbb
shrb
subl
ficoms
push
cltd
sbb
xor
xchg
mov
add
icebp
loopne
jle
loope
dec
rcr
ds
in
mov
std
and
aad
mov
insb
je
dec
xchg
in
jns
jne
scas
rorl
add
sbb
clc
lret
inc
scas
ljmp
xchg
and
dec
add
and
mov
xchg
cmc
sub
adc
cmpsl
aad
push
dec
pop
inc
pusha
out
pop
xor
repz
inc
adc
sbb
jbe
decb
xchg
and
clc
filds
notb
inc
inc
fwait
je
loopne
mov
cld
outsb
mov
adc
rcll
inc
scas
nop
in
mov
fnsave
sub
dec
and
pushf
fidivs
gs
popa
jb
jl
adc
test
rcrb
push
adc
lret
jns
add
push
loope
nop
sub
pushf
fstps
jmp
pop
pop
jbe
sub
mov
mov
mov
cwtl
loope
in
test
add
test
add
das
cmp
xor
push
jecxz
pop
pop
test
cltd
fcmovne
mov
cli
adc
popf
scas
xchg
into
pop
ror
cmp
ljmp
push
and
push
repnz
mov
in
add
cmp
fwait
shrl
sti
daa
mov
addb
lea
and
xor
enter
outsl
mov
sub
inc
pop
mov
std
lds
jmp
and
shll
fnsave
cwtl
push
inc
test
jbe
int
aas
iret
cmp
dec
popf
stos
std
iret
out
jecxz
mov
fnstcw
lret
or
leave
out
or
and
and
pop
add
xchg
push
stos
dec
dec
mov
cld
and
mov
jg
jbe
push
push
int
jp
icebp
frstor
jg
cmp
and
push
jae
mov
and
adc
and
fisubrs
pop
sub
xor
orl
mov
push
mov
mov
movsl
push
nop
mov
pop
mov
xchg
jo
stos
push
sub
jb
cltd
or
jle
stos
lock
in
movsl
mov
enter
sbb
std
or
mov
in
outsl
mov
sub
cmp
arpl
js
xchg
test
ret
adc
xor
push
push
arpl
jo
das
sar
dec
add
gs
aaa
mov
jbe,pt
jmp
cmpsl
xor
cmp
lret
pop
fwait
cltd
stos
push
mov
insl
or
sub
movsb
mov
js
ret
pop
jl
push
mov
inc
add
adc
int
test
mov
fisubl
push
mov
sub
add
push
outsl
xchg
pop
scas
mov
xchg
cs
into
dec
mov
push
loopne
xchg
rcr
cmp
mov
out
filds
jbe
std
les
sbbl
or
daa
daa
cmc
cli
and
out
or
sbb
in
movsl
ljmp
shr
int3
cmc
dec
das
std
dec
mov
xchg
inc
cmp
push
sub
fwait
dec
mov
hlt
pusha
jl
sti
repz
sub
icebp
xchg
jae
inc
lods
mov
jne,pn
mov
mov
dec
adc
inc
or
mov
pop
in
int3
inc
dec
addb
sahf
pop
cmp
pop
leave
aas
jge
je
cmp
out
and
ss
jg
stos
xchg
lods
cltd
cs
adcl
mov
fsubl
xchg
pop
and
ljmp
cmp
aas
ja
or
das
fldt
cwtl
fistps
mov
scas
lods
cmp
sbb
cmc
cli
call
pusha
jno
notb
nop
add
push
sbb
push
sub
sti
test
sbb
jne
imul
pop
inc
push
sub
cmp
add
or
push
lahf
int
and
dec
mov
jnp
sarl
cltd
int
jne
or
jl
out
adc
rorl
repnz
dec
xor
push
mov
sub
jge
mov
dec
insl
pop
jg
adc
mov
push
cltd
daa
aaa
inc
jmp
or
sub
rcl
mov
mov
jns
mov
int
and
jp
or
jno
sbb
or
ror
aad
mov
xchg
pop
jae
pop
mov
fs
pop
test
and
xchg
cmp
push
int
jg
das
xchg
shlb
sub
scas
dec
inc
push
rorb
mov
mov
mov
call
cwtl
loope
adc
insl
fmull
add
push
push
lret
pushf
xchg
xchg
aas
sbb
aad
inc
pop
add
add
test
rorb
mov
fstpl
fnstcw
stc
aas
mov
fadds
xchg
add
push
pusha
cmp
pusha
out
add
jbe
movsl
mov
enter
ficompl
nop
sub
and
movsl
aas
add
pushf
sbb
adc
and
rolb
jae
mov
dec
dec
pop
cmpb
xchg
sbbl
adc
adc
scas
inc
in
push
mov
add
mov
gs
adc
mov
cmc
push
mov
and
int
jb
sahf
clc
sarb
imul
mov
mov
ficompl
outsb
xor
xchg
push
pop
idivb
jecxz
fisttpll
xchg
out
mov
xchg
mov
mov
and
cmp
scas
dec
ret
or
dec
mov
les
daa
les
aad
cmp
mov
mov
insl
cmp
mov
cltd
das
fsubs
rolb
int
cs
adc
ljmp
dec
jle
sub
push
into
push
inc
jge
mov
sbb
mov
adc
repz
pusha
and
idiv
and
push
add
ret
mov
xchg
mov
sbbl
addr16
xchg
repz
sbb
dec
cmpsb
cltd
sub
cmp
call
test
cltd
jae
cmp
xor
push
adc
rcrl
xchg
mov
inc
sub
xchg
loopne
in
mov
popf
addr16
data16
popf
daa
scas
fidivrl
pop
std
nop
jle
pop
cmp
cmp
or
int
stc
test
test
inc
jb
outsb
int3
xor
ljmp
pop
xor
cmp
test
xchg
cmp
out
pop
aaa
mov
add
mov
pop
shlb
sbb
mov
jl
lds
cmp
inc
lock
std
inc
cltd
pop
dec
sbb
pop
mov
int
cwtl
pop
mov
sbb
xchg
fsubr
pop
push
jl
mov
cmp
push
ds
in
inc
popa
jle
sbb
hlt
jo
jae
xor
in
pop
lret
push
ret
loop
dec
int
pop
mov
out
mov
sbb
leave
mov
or
mov
and
xchg
add
xchg
mov
outsl
je
mov
pop
lcall
dec
mov
sub
addr16
sub
or
aam
and
or
lret
pop
popf
ljmp
pop
sub
repnz
fmuls
xchg
imul
jbe
and
sub
aad
push
lcall
je
pop
jne
push
repz
cmp
pop
sbb
inc
outsl
dec
lret
xchg
xchg
dec
pop
imul
xor
xchg
and
bound
cmp
mov
pop
ds
fildll
sub
cltd
push
push
or
cwtl
add
dec
push
dec
lcall
cmp
push
rorb
lods
cli
outsb
int
cmp
loope
and
js
lods
bound
xchg
xlat
adc
inc
xchg
movsl
es
pusha
test
lock
movsl
sbb
and
push
inc
mov
roll
rcl
test
divb
xor
mov
scas
mov
mov
or
mov
mov
sbb
cmp
pop
inc
inc
in
fwait
sub
adc
in
lods
test
mov
mov
popf
cmpsl
adc
cld
xor
out
inc
jbe
push
push
divl
cltd
and
adc
cmp
call
jne
jmp
add
scas
loop
outsb
inc
sbb
add
xor
mov
sbb
lock
test
gs
cli
jecxz
pop
push
xor
adc
icebp
shr
cmp
push
ss
dec
lret
cmp
push
fsubl
pushf
es
xchg
repnz
adc
dec
and
ja
ja
pushf
or
lock
mov
pop
cmp
mov
inc
fs
pusha
mov
sbbl
mov
jb
mov
bound
aaa
addr16
call
mov
push
jnp
icebp
xorl
add
in
cmpsl
cmp
sbb
mov
stc
push
or
sbb
ss
aam
sbb
inc
inc
stos
push
scas
fisttpl
cmpsl
test
inc
mov
hlt
out
dec
pop
jg
push
call
jmp
xor
push
add
jns
repz
or
push
test
addr16
adc
daa
mov
arpl
jmp
cmp
enter
loope
in
xlat
mov
lcall
push
add
and
js
jmp
iret
pop
and
xchg
sti
dec
dec
lock
and
add
pop
mov
dec
inc
loope
adc
and
fld
dec
pushl
mov
or
push
jge
inc
jmp
xchg
test
sub
jl
mov
fmull
or
mov
popf
cmp
jecxz
in
fmulp
xor
pop
and
stc
sahf
idivl
roll
and
dec
in
xchg
push
std
add
sub
stos
sub
cmpsb
jge
fisttpl
test
fadd
dec
xlat
adc
repnz
and
xchg
addr16
pushf
scas
mov
jo
add
sbb
dec
xchg
dec
jg
out
mov
pminub
fisubl
xchg
or
xchg
js
das
fdivs
sub
push
pusha
cmpsb
and
add
pop
not
xchg
mov
sub
ret
jl
aam
mov
movsb
neg
jge
mov
lcall
jge
push
pusha
popa
inc
xor
aad
cmc
movsl
test
jp
dec
out
stos
add
sub
push
lret
mov
rcrb
aam
addr16
sbb
adc
push
add
mov
xchg
adcl
mul
fbld
xchg
pop
inc
pop
mov
sbb
punpckhdq
in
mov
idivb
mov
and
std
jnp
push
lcall
xor
pop
ljmp
add
pop
lcall
dec
inc
test
mov
mov
or
int3
rcll
push
insl
jb
orl
data16
and
mov
xchg
outsb
jp
mov
fdivp
jns
xlat
mov
adc
and
popa
sbb
sti
cmpsl
mov
ljmp
add
aad
ss
imul
insl
pop
movsl
adc
push
lea
jb
sbb
or
pop
fbstp
adc
outsl
je
xor
dec
jbe
mov
dec
xlat
movsl
push
push
in
ja
sbb
push
xchg
jbe
push
fdivl
movsl
xor
push
inc
and
xor
aad
cmp
fidivrl
adc
in
cli
push
xor
lods
xor
cmp
sbb
pop
jle
jl
aaa
xor
js
dec
sub
mov
popl
push
mov
mov
sub
ss
adc
adc
cmpsl
add
xor
push
imul
and
or
outsl
ss
in
and
shll
mov
xor
jo
sub
pop
in
stc
andb
pushl
into
fisttps
shlb
into
add
fwait
testl
dec
and
xchg
cmp
js
in
mov
mov
lret
jmp
fsubr
mov
addr16
hlt
loope
lcall
lret
pop
into
jp
cmpsl
sub
jo
imul
hlt
pop
adc
mov
adc
movsl
xchg
xor
lds
sbb
lds
in
stos
mov
push
adc
inc
dec
pop
cmpsl
or
loop
ret
push
push
mov
imul
xchg
xor
lds
ret
jmp
xchg
cli
sbb
pop
inc
dec
outsb
hlt
cld
outsl
shll
cmpsl
push
pop
dec
or
scas
inc
xchg
rcrl
movsb
jbe
loope
lea
mov
push
dec
dec
mov
incl
test
xchg
lock
add
lods
adc
jg
out
adc
pop
pop
pop
and
mov
shlb
mov
pop
dec
cmp
push
out
insb
dec
sbb
xchg
sbb
mov
push
pop
adc
add
push
das
out
lret
adc
mov
incl
sti
push
test
int
jb
ror
push
repnz
inc
scas
add
inc
fildll
push
mov
jb
aas
dec
mov
pop
lods
in
pop
arpl
loope
dec
xchg
mov
orl
pushl
test
fcompp
push
and
dec
dec
test
pop
outsb
jecxz
mov
ret
jno
adc
and
mov
cmc
jg
and
imul
mov
mov
dec
xor
stos
mov
inc
push
and
cwtl
cmp
pop
popa
outsl
popf
insb
mov
nop
fisubs
mov
xchg
imul
ss
cmpsl
aaa
stc
std
cmpsb
data16
sub
ja
mov
int
pop
jnp
sbb
push
cltd
inc
xor
pop
int3
subl
out
jmp
fnstenv
test
in
xor
sbb
jae
lcall
inc
fldcw
mov
cli
rcll
mov
adc
subb
pop
push
iret
xlat
mov
loop
inc
rclb
repnz
or
fs
sbb
ja
push
mov
inc
cs
inc
sub
stos
clc
lods
fisttpll
push
push
jbe
jo
sub
std
scas
mov
dec
mov
in
mov
jle,pn
dec
cmp
aam
lret
lods
pop
fists
mov
mov
mov
pop
pop
leave
or
rol
mov
xchg
or
lock
push
or
incl
lds
mov
imul
test
fisubl
fucomip
aam
aas
subb
sbb
cld
mov
bound
shr
ss
inc
cmp
int
lea
loop
mov
fimull
inc
lods
add
mov
jno
aad
inc
jmp
sub
adc
addl
pop
dec
jno
faddp
inc
push
adc
lret
aas
xor
sahf
out
dec
mov
sub
cmp
cli
mov
inc
inc
mov
inc
lods
imul
fxch
mov
push
pusha
sbb
iret
pushf
mov
adc
les
bound
and
stc
mov
inc
int3
pop
jb
mov
daa
mov
cmpsb
sbb
std
shll
fidivrs
push
sub
enter
sub
mov
jmp
mov
insb
mov
sti
out
and
rolb
pop
mov
sbb
push
mov
mov
adc
cmp
xchg
out
mov
fildl
add
pop
pop
cmp
ljmp
sbb
pop
cmpsl
cltd
in
sub
adc
xchg
subl
jne
jo
or
dec
xchg
aaa
aas
cld
leave
xchg
cmpxchg
jo
mov
ss
inc
out
sahf
adc
aad
inc
cmp
popa
cmp
int
enter
xor
and
lods
push
imul
and
mov
sub
sbb
xchg
and
popf
and
sbb
push
mov
inc
xor
jecxz
popf
xchg
pop
in
aas
push
add
sbb
xchg
leave
lods
add
jl
aam
fsub
fwait
jnp
adc
mov
push
ss
lcall
data16
xor
scas
lods
cwtl
xchg
add
mov
mov
inc
pop
jmp
rcrl
fcomps
movsb
loop
aam
mov
inc
adc
jae
lds
mov
dec
push
adc
das
xchg
add
call
cmpb
dec
icebp
popf
lcall
fs
xor
insl
push
cs
cmp
ljmp
int3
aam
jne
inc
sbb
sbb
ret
lret
test
inc
sbb
xchg
lret
popa
das
call
or
dec
add
xlat
add
imul
jns
clc
or
xchg
clc
xchg
sti
cmp
loope
or
insb
pop
mov
cli
inc
mov
adcl
repnz
mov
adc
mov
mov
pop
cmp
ds
fbld
pop
add
popa
jo
scas
jne
pop
loopne
push
in
push
ljmp
ja
mov
lcall
dec
sub
mov
imulb
idiv
jmp
sbb
cmpsl
inc
pop
cs
fiadds
fcom
mov
mov
in
sub
test
xchg
xchg
pop
push
inc
out
loop
or
pusha
pushf
dec
xchg
int
loope
enter
nop
or
repz
jle
fists
shr
sbb
jg
mov
sbb
or
test
adc
mov
push
call
cmp
lret
negl
pop
pop
out
addr16
ret
clc
gs
push
sub
int
cltd
sub
repz
pusha
scas
cmpsl
mov
sub
sbb
loopne
sub
cs
faddl
pop
pop
mov
movsb
inc
data16
cmp
add
or
cmp
xlat
int
or
ret
mov
lods
push
inc
out
sub
pop
jmp
and
inc
push
test
cmp
xor
fucomip
mov
xor
lock
jno
pusha
pusha
mov
in
insb
inc
shll
rcll
out
arpl
gs
popa
stc
addr16
mov
adc
pushf
mov
incb
sahf
scas
dec
lods
leave
jecxz
imul
mov
sbb
aad
mov
bound
insb
pop
lret
inc
cmp
movsl
pop
push
lret
movl
out
in
ja
arpl
mov
inc
pushf
jns
idivl
and
shr
bound
dec
pop
arpl
cmp
xor
pop
jne
jne
shl
mov
push
into
and
dec
cmp
pop
pushf
cwtl
ja
data16
notl
movsb
ret
decb
lcall
inc
movsb
in
push
dec
fsub
out
addl
test
cmc
and
push
loop
repz
cs
ljmp
cwtl
in
fstpt
sub
cltd
rclb
mov
inc
sub
inc
mov
test
gs
cld
xchg
push
and
mov
push
shlb
lock
xor
outsb
adc
inc
xlat
pop
xorb
jle
cmp
mov
dec
sbb
movsb
sbb
pop
mov
sbb
mov
xchg
fs
pop
pop
jg
fstl
inc
dec
push
cld
push
sbb
cmp
aas
test
cwtl
xchg
mov
jno
out
rclb
inc
xor
mov
imul
fs
ljmp
adc
sub
and
stos
leave
xchg
jle
insb
and
xchg
lods
fwait
inc
mov
test
inc
imul
dec
lds
pop
mov
inc
iret
mov
leave
mov
xor
je
inc
push
sbb
imull
sub
sub
lods
mov
adc
es
leave
scas
aam
xchg
shlb
fwait
jo
or
mov
cwtl
dec
int3
or
cmp
mov
int3
sarl
in
cmp
xor
mov
or
mov
xor
rclb
hlt
jg
stc
or
in
xor
fs
and
push
sbb
xchg
mov
imul
push
popf
fbld
scas
jge
jge
lahf
fwait
inc
jg
inc
int
add
sbb
aas
aam
cmp
and
mov
and
jb
hlt
xlat
and
popl
call
and
inc
in
iret
shlb
popa
aam
mov
sbbl
add
loop
mov
and
enter
mov
dec
adc
notb
das
add
mov
mov
mov
pop
jle
cwtl
jae
sub
fnsave
ljmp
test
sbb
iret
push
cld
sbb
sub
repnz
mov
sub
xchg
out
mov
inc
pop
mov
inc
push
or
mov
or
adc
sub
mov
pop
cli
rorb
inc
lcall
mov
repnz
pushf
pop
inc
xchg
pop
mov
es
adc
lcall
test
or
cmpsb
lahf
iret
and
iret
clc
jo
mov
movsl
sbb
scas
daa
cwtl
lret
mov
pushf
in
xor
mov
movsb
test
test
inc
pop
xchg
clc
xchg
test
ret
nop
lods
jnp
fstpl
popa
hlt
xchg
inc
mov
dec
sti
in
xchg
pop
and
das
outsl
shrb
insb
pop
sbb
rcrl
mov
test
mov
js
xorb
cmp
mov
fistps
push
lods
int
or
cmp
xchg
xchg
cmp
mov
xchg
gs
jo
fdivrs
vmovddup
mov
xchg
jo
aas
aaa
dec
mov
mov
jne
test
or
inc
loope
pop
clc
mov
loop
pop
mov
xor
mov
mov
nop
pop
mov
pop
aas
mov
jl
jle
xchg
insl
mov
inc
sub
xor
or
inc
sbb
xchg
adc
and
cmp
js
dec
ljmp
cld
push
xor
jb
fisubl
jg
xchg
push
jno
decb
lcall
push
icebp
pop
lock
pop
mov
push
mov
and
xchg
fnop
adc
mov
mov
fimuls
dec
popa
cmp
mov
dec
rcrb
mov
jmp
cmp
gs
jbe
clc
dec
ja
adc
mov
push
xchg
mov
mov
icebp
in
test
pop
out
daa
push
mov
insl
xor
and
inc
test
cmp
xchg
loope
stc
lock
faddl
int
aad
shlb
insb
add
in
pushf
and
sbb
sub
dec
iret
push
rcll
icebp
xor
int
sub
and
jp
vmread
pop
mov
add
sbb
shlb
xchg
sub
mov
adc
push
mov
jle
and
pop
jge
cmp
or
sbb
xor
out
shr
mov
mov
mov
ret
sbb
iret
dec
lret
rcll
data16
xchg
mov
cmpsb
or
cmpl
notb
into
push
dec
lret
push
in
lods
mov
and
sbb
daa
js
rorl
ja
add
ljmp
add
outsl
add
fadds
sbb
stos
fnstcw
sti
fdivp
movsl
xor
mov
add
cmpl
sbb
inc
or
ljmp
and
and
xor
mov
sub
or
in
hlt
mov
mov
sub
fcmovnu
and
jmp
fsubp
pop
mov
jecxz
push
out
cld
sbb
cmp
lcall
out
ret
test
xchg
ret
iret
sbb
add
add
lock
xchg
test
jae
mov
outsl
xor
xor
popa
popf
cld
push
lcall
adc
gs
pop
xchg
mov
cmpsb
jl
fnstsw
pop
loop
lods
push
sti
jg
aas
fidivrs
xor
das
decl
xchg
in
sub
dec
mov
sbb
popf
scas
inc
ret
sbb
clc
pop
mov
into
shlb
add
int3
movsl
sbb
rolb
cmp
ficompl
aas
ret
pop
or
xlat
mov
fisttpll
sbb
and
cwtl
jnp
push
int
in
stc
push
sbb
push
cli
or
loope
xlat
jle
test
ds
std
shr
jne
lret
xchg
mov
test
aam
jl
test
aad
rcr
push
fwait
idivl
pushf
mov
mov
cmc
mov
sub
pop
cmp
out
cmp
lds
scas
lods
mov
xchg
mov
sbb
popf
xor
lret
inc
mov
add
pushw
or
push
jmp
push
mov
push
insl
dec
int3
rorb
mov
insl
cmp
xor
stos
pop
ljmp
retw
xchg
into
dec
fldt
mov
sub
jmp
fwait
xchg
aam
mov
push
push
lods
inc
sti
mov
mov
mov
pop
push
cli
fcoms
mov
xchg
xchg
mov
and
xor
bound
and
sub
inc
out
std
adc
flds
pop
cmp
mov
aas
push
mov
jmp
add
mov
stc
imul
dec
out
movsl
stos
xor
mov
imul
push
dec
push
push
mov
adc
fs
sub
leave
aaa
pushf
xchg
xor
cwtl
pop
call
add
out
xor
fcomip
add
pop
and
fbstp
movsb
js
xchg
inc
and
out
enter
iret
int
and
stos
push
stc
dec
jg
lds
inc
aad
pop
xchg
push
and
pop
mov
sbb
test
mov
jl
mov
and
mov
jb
mov
mov
aam
lcall
mov
ss
push
sbb
outsb
sbb
jno
lcall
adc
test
cli
mov
inc
jae
mov
xchg
mov
call
int3
iret
pop
mov
mov
test
jle
xor
lds
or
or
in
mov
pusha
xchg
fiaddl
sti
mov
pop
adc
push
test
in
or
int3
mov
pushf
sub
lock
lahf
pop
inc
mov
sub
xchg
mov
sbb
sub
mov
stos
or
dec
enter
mov
out
push
cmp
fisubrl
nop
fwait
or
xchg
push
cmc
gs
pavgw
dec
mov
in
sahf
mov
inc
xchg
outsl
lods
mov
lahf
bound
das
lds
insl
xchg
sub
mov
sbb
xor
das
sbb
outsb
dec
mov
push
mov
lret
xchg
scas
mov
push
push
add
jge
jbe
rclb
fsubs
rolb
out
jb
das
and
xchg
jle
add
cmp
or
and
cmp
cli
sub
jnp
dec
cmp
push
mov
xchg
in
xchg
jb
test
test
pop
cmpsb
insb
loope,pn
or
std
xchg
adcl
addl
jl
jl
jne
push
xchg
push
mov
iret
sbb
push
mov
into
subb
bound
mov
jns
daa
mov
inc
test
mov
mov
std
mov
inc
insl
sub
jecxz
repz
push
sub
rcrl
or
stos
and
mov
sub
mov
sbb
xor
mov
rcrb
pop
xor
xor
push
imul
fcmovnb
aad
lret
sub
icebp
xchg
and
add
outsb
insb
divl
push
das
fwait
sahf
jnp
ret
inc
stc
mov
aas
push
out
lods
out
in
mov
shll
sub
shll
jb
jae
fwait
mov
lret
sub
dec
test
popf
sti
jp
xchg
adc
aam
and
in
test
inc
adc
das
test
sbb
xor
aas
cmp
out
add
sahf
mov
mov
dec
xchg
fcomps
or
ds
lods
shll
stc
test
aas
bound
push
and
pop
test
mov
jge
push
popf
es
testb
adc
ss
pop
jle
orl
xchg
dec
jmp
lcall
mov
mov
pop
inc
cmp
jge
cmp
cmpsl
lods
jo
cmp
pusha
dec
out
mov
loope
imul
push
fsubs
aaa
loop
xor
jbe
push
xorl
rorl
pop
xchg
outsl
pop
jmp
rorb
adc
sets
mov
enter
inc
imulb
rcrb
fdivrp
mov
popa
cli
add
or
insb
or
lret
repz
xchg
and
imul
or
sbb
out
jp
pop
ret
cmpsb
mov
adc
in
addl
push
rcll
mov
js
adc
pop
loope
lods
mov
mov
std
dec
ret
add
xor
iret
fwait
adc
testb
cmp
xor
or
mov
fs
mov
sub
dec
pushf
icebp
movsb
test
add
inc
data16
test
lcall
push
sbb
mov
pop
fsubrp
jb
mov
sub
mov
fsubl
pop
mov
in
jbe
in
repz
jbe
jb
pushf
pop
push
imul
xor
rolb
or
repnz
pushf
and
mov
arpl
divl
xorb
clc
daa
ss
aas
and
xchg
imul
add
adc
jg
pop
pop
test
jle
mov
pop
popf
mov
jmp
xchg
mov
adc
movsl
das
cmpsb
and
fld
dec
fsub
xchg
cs
and
and
mov
out
addr16
mov
push
aas
adc
insb
cmpl
pop
jp
dec
ljmp
add
adc
and
mov
sbb
inc
scas
adc
bound
sarl
stos
lret
out
xor
nop
push
jnp
cltd
push
loope
xchg
inc
stc
popf
xchg
daa
movsb
mov
stc
inc
cs
sbb
les
movsl
lds
mov
jle
and
imul
push
push
aaa
sbb
push
out
test
xchg
mov
add
sub
or
jnp
mov
les
or
in
test
cmp
data16
lret
outsl
or
jno
mov
out
movsl
adc
shll
sbb
fcom
dec
je
ret
jg
sub
scas
dec
negl
test
xchg
cmp
sub
dec
pop
cmc
cmp
sub
adcb
subb
mov
lcall
lods
test
add
push
adc
jns
movsb
stos
inc
sbb
popf
sub
loope
dec
adc
les
mov
jmp
jle
mov
xlat
aam
push
xor
xlat
cmp
adc
fisubrs
in
aas
mov
mov
ljmp
addl
xor
jae
cmp
pop
leave
in
in
dec
mov
lock
lds
call
movsb
fisttpl
jbe
int3
push
and
nop
in
inc
shr
in
mov
lahf
mov
and
test
and
jmp
jnp
pmaddwd
cltd
aam
sbb
std
call
out
dec
cmpsl
movsl
pop
and
and
and
aas
jecxz
mov
cs
in
or
es
xchg
xor
fdivl
cmp
jo
test
repnz
aaa
adc
outsb
cmpsb
int3
shlb
fbstp
jle
call
daa
jbe
adc
ds
xchg
shll
idivb
ret
adc
bnd
insb
mov
push
xchg
push
mov
js
negb
xor
mov
xorl
ret
and
xchg
das
or
and
out
fisubl
mov
andl
xchg
shlb
daa
cmp
mov
and
popa
sub
xchg
bound
stc
adc
mov
inc
mov
movups
pop
jg
push
mov
sahf
ja
daa
sbb
mov
pop
dec
push
xor
jl
lret
mov
jno
inc
in
cmpsb
ljmp
mov
cmpsl
xor
jb
ja
lods
cwtl
movsl
mov
xor
iret
ret
and
outsl
out
call
sarl
inc
sub
and
mov
mov
sub
jne
pop
stos
and
xor
mov
xor
addb
test
xor
ss
loop
inc
cmc
fdivl
loop
sub
sub
xchg
push
mov
movsl
and
lock
shrb
add
jnp
mov
jae
mov
xor
or
add
fistpll
cmc
loope
add
pop
inc
xchg
or
fsubs
push
shr
jae
push
or
pop
fsubrl
xchg
into
aad
mov
xor
arpl
js
aas
xchg
out
hlt
loop
ss
lods
add
psubsw
fwait
push
iret
or
sbb
scas
stc
aas
mov
hlt
mov
scas
jae
sar
cmc
dec
xchg
mov
xchg
or
insb
sbb
mov
vunpcklps
std
jle
mov
notb
imulb
mov
mov
mov
cwtl
pop
icebp
sahf
jb
das
or
pop
ficomps
and
inc
jo
add
sahf
popf
adc
jl
bound
jae
add
sub
xor
lock
cvtpi2ps
inc
test
outsb
jl
das
insl
ja
sbb
sarb
dec
nop
cld
sbb
aaa
push
push
xor
repz
into
or
aaa
sbb
xchg
cs
stos
lea
fldl
cmp
pop
ljmp
test
xchg
insb
xchg
cmpl
mov
call
adc
jecxz
lcall
dec
cmp
mov
loop
icebp
movsl
push
lret
subl
sub
insl
pop
fmull
or
fsts
jo
dec
sbbl
mov
or
dec
sub
ja
sbb
xchg
in
adc
and
jne
or
cld
cltd
sbb
jl
sub
nop
sbb
test
and
ror
mov
lock
adc
or
xor
movsb
sub
cmpsl
rcll
push
pop
jo
js
adc
mull
lret
loopne
jle
cmc
push
jo
bound
popa
into
mov
or
mov
xchg
fisubl
je
inc
push
push
fsubs
mov
cmp
add
and
inc
rcll
jl
rcr
mov
jge
xchg
push
fucomp
push
int
cmp
mov
imul
or
fwait
jecxz
push
das
push
push
test
int
cli
insl
jecxz
add
cld
aam
jnp
push
add
cs
adc
pop
xsha256
cmpsb
aam
dec
xchg
repnz
inc
out
sti
mov
divb
stos
xor
xchg
jl
cmp
hlt
pushf
jge
push
jns
jae
inc
adc
mov
pop
dec
loop
stc
xchg
jge
loop
stos
push
pop
repnz
subl
xchg
out
mov
add
enter
ljmp
imul
jnp
repz
inc
test
inc
arpl
ljmp
pop
movzwl
jmp
mov
lock
les
movsb
aam
addl
leave
jae
fdivrs
mov
xchg
pop
pop
push
xor
stos
fs
and
jp
pop
xchg
xor
popf
ja
mov
pop
and
into
rcrl
add
and
push
sbb
repnz
out
cli
in
or
out
pop
inc
loop
or
mov
jecxz
loope
repnz
into
cltd
xchg
pop
push
pop
jo
mov
lcall
and
testl
test
in
sbb
xlat
jb
inc
mov
cltd
cmpsl
das
fnstcw
cmp
fs
sub
data16
dec
and
mov
fnstenv
mov
arpl
scas
jne
sbb
int3
icebp
pop
popf
dec
xor
lcall
push
and
inc
jns
addr16
test
lds
push
outsb
adc
dec
loopne
movsl
sub
ja
cmp
jo
bound
lods
testl
fwait
outsb
jmp
sbb
out
jge
sti
mov
cmpsl
pop
call
scas
mov
or
mov
mov
jg
repz
mov
xchg
cli
dec
sbb
out
cmp
cld
js
xchg
rcll
dec
mov
adc
movsb
mov
mov
ljmp
xor
jp
lret
enter
into
xchg
in
push
jl
pushf
jae
or
sub
test
stos
shll
outsb
xor
sarb
divb
pop
aad
or
inc
in
pop
fldz
xchg
out
xor
lds
push
sub
mov
call
stos
movsl
sbb
rcrl
push
push
fucomi
hlt
and
outsl
push
fsubrp
xlat
xor
mov
mov
rcr
add
cld
test
push
xchg
dec
dec
push
sub
popa
rorb
cli
outsb
or
jns
ror
fdiv
pop
shl
inc
mov
mov
lcall
sbb
or
ret
jle
mov
leave
push
cmp
std
cwtl
loop
cld
adcb
inc
mov
sarl
andl
mov
ret
inc
jl
sub
pusha
cs
lods
popa
and
popa
xchg
cmc
adc
sbb
int
jg
xchg
in
setbe
mov
mov
ja
pop
mov
out
popf
frstor
dec
pop
sub
inc
dec
push
xchg
cmpsb
mov
jp
cmp
testl
cld
cld
xor
mulb
push
xlat
imul
dec
pushf
imul
insb
out
or
cmpsl
les
jbe
push
lcall
aam
repz
xor
fucom
dec
xlat
popf
mov
scas
lret
mov
and
std
insl
lds
xor
insb
lock
cltd
insl
pop
addr16
enter
mov
cmpsb
push
pop
in
aas
push
xor
int
xchg
or
xchg
dec
push
scas
rcl
imul
fs
add
popf
cmc
cld
mov
adc
sub
mov
adc
mov
sbb
movsb
sbb
es
test
jo
gs
orl
iret
repz
sbb
lods
lret
inc
sti
scas
stos
scas
sbbb
arpl
icebp
xor
outsb
cmp
dec
arpl
push
mov
int
cmp
or
push
mov
gs
aam
aas
mov
repnz
jb
stc
mov
nop
fs
sbb
dec
das
pop
xchg
lds
pop
enter
insb
xchg
mov
mov
sbb
lahf
stos
lock
dec
sub
mov
rorb
in
mov
loope
sbb
movsl
dec
out
push
gs
test
xor
pop
insl
push
lods
add
lds
insb
adc
jno
sub
inc
xlat
ror
clc
lea
fisubs
cmpsb
mov
cmp
xor
nop
out
rcl
lahf
lahf
inc
dec
fimull
xchg
push
clc
push
cmp
push
cmp
push
jae
or
iret
mov
dec
mov
fdivs
mov
inc
cmpsl
cld
pop
das
pop
rclb
adc
add
inc
inc
jle
iret
and
jno
mov
dec
adc
mov
dec
dec
xchg
aad
gs
push
push
ljmp
test
jp
xor
insl
mov
out
dec
lret
loopne
out
sbb
mov
and
les
pop
jge
mov
ja
fnstcw
shrl
push
into
pushf
js
mov
rorb
stos
in
repnz
flds
pop
ficomps
arpl
jl
mov
loope
cmp
hlt
fsubrl
clc
inc
sub
push
addr16
fisttpll
leave
inc
inc
fmull
pushf
popa
push
jno
sbb
out
sbbb
movsb
xor
jb
sub
mov
mov
mov
sti
cmpsl
lret
add
mov
inc
pop
jbe
orb
sub
mov
adc
jp
in
cmp
xor
push
outsb
add
sub
sub
inc
insl
repnz
xlat
push
cmp
and
dec
cs
and
pusha
push
push
push
adc
das
scas
mov
loope
insb
push
lcall
dec
or
or
imul
ret
loope
push
test
rolb
push
popf
mov
data16
repnz
in
mov
push
adc
dec
sub
mov
sbb
sbb
mov
mov
pop
push
test
dec
rcll
sub
push
lock
fistpl
les
aas
rclb
cmp
inc
pop
sub
out
loop
pop
cmp
push
mov
xchg
sub
shrl
sub
push
adc
lea
mov
mov
lods
in
xor
pop
push
xchg
add
sub
outsl
ss
push
xchg
push
lret
insl
inc
mov
repz
popf
or
add
xchg
mov
stc
mov
aaa
xchg
jmp
cli
jmp
loopne
fisttpl
stos
popf
jne
fisubl
or
and
sti
jne
adc
pop
add
das
in
clc
subb
xor
lcall
cmc
cmp
clc
or
dec
loopne
or
popa
lds
jge
adc
inc
lods
stos
push
adc
mov
pop
cli
cmp
inc
ljmp
nop
or
mov
gs
push
mov
fists
les
pushf
and
xchg
dec
cmp
loop
cmp
lock
subl
sbb
aaa
imul
test
sub
push
xor
sbb
filds
scas
clc
fcomp
sub
inc
mov
cwtl
sbb
nop
pop
mov
dec
ds
cltd
adc
lds
sub
xchg
jecxz
xlat
sbb
aas
push
xchg
dec
ljmp
fsubrs
jcxz
fadds
push
orb
ljmp
jbe
or
jne
icebp
xchg
shrl
xor
pop
sbb
mov
leave
xchg
outsl
icebp
bound
dec
xchg
push
rep
push
out
adc
push
xchg
add
push
gs
mov
mov
jge
lea
out
shl
pop
or
pop
iret
mov
dec
hlt
or
in
stos
mov
je
mov
ljmp
popa
mov
push
inc
push
add
add
pop
xchg
aam
jmp
sub
loop
push
sbb
xor
xchg
aad
sub
imul
push
mov
inc
aaa
cltd
lcall
popf
movsl
adc
cmp
test
les
adc
ret
loop
lock
mov
imul
cmp
cmp
aas
fcmove
xor
movsl
bnd
sbb
pop
je
adc
push
xchg
test
in
push
fdivrs
push
xchg
out
and
es
enter
jp
mov
or
or
add
hlt
lock
out
add
jbe
sbb
lahf
movsl
dec
push
lods
mov
loop
jp
fisubrl
fsubrl
inc
and
xchg
mov
mov
fsts
loopne
mov
add
xlat
xchg
dec
and
pop
ja
cld
insl
dec
cmp
mov
or
ljmp
loop
sub
movsb
testb
cs
movsl
andl
inc
stos
xchg
scas
addr16
push
xchg
movsb
aaa
jns
jmp
scas
mov
push
fsubrl
mov
jmp
mov
cmp
dec
iret
cwtl
mov
xlat
insl
pop
cmc
mov
cli
or
xchg
pop
cwtl
cmp
out
dec
xor
fistpl
shlb
sub
arpl
xchg
pushf
psrlq
jg
lock
lods
pop
add
cmp
and
pop
outsl
ret
push
adc
data16
jbe
jb
test
movsl
jl
sbb
cli
cmp
jp
enter
mov
cmp
mov
ss
push
or
sbb
adc
sbb
loop
pop
aaa
sbb
lret
jecxz
je
js
ss
cmpsl
jo
mul
add
aas
mov
pop
cld
push
mov
ja
lock
aad
jno
jecxz
cld
popa
stos
das
es
mov
cld
cld
dec
test
out
mov
mov
aas
addl
iret
fwait
roll
jbe
jae
loop
xor
mov
push
sub
dec
inc
push
fcmovu
cmpsb
pop
scas
ljmp
pop
dec
repz
add
push
fldenv
cwtl
dec
pushf
nop
rorl
cmc
test
xchg
jmp
mov
add
testl
push
cmp
out
or
dec
lcall
int3
inc
ficomps
jl
lret
scas
stos
jae
cli
ds
adc
lods
and
sti
pop
sbb
and
fistpl
repz
mov
xor
pop
std
xchg
mov
xchg
frstor
nop
adc
pushl
int3
popa
mov
orl
xchg
cmc
lahf
pushf
arpl
in
imull
sub
mov
xchg
movsb
fs
pop
dec
jne
out
add
push
adc
or
arpl
cmp
in
push
nop
xor
shrl
loop
sbb
sarb
xor
insb
js
xlat
test
jae
jmp
or
inc
add
in
mov
pop
sbb
lds
jnp
lret
mov
lods
pop
push
popf
cli
sti
cmpsb
loop
pop
or
xchg
adcl
xchg
jb
lcall
sahf
xor
rcl
mov
cmp
roll
mov
shl
push
dec
out
jecxz
cmpsb
or
hlt
sbb
cs
and
data16
cmp
fwait
addr16
cltd
hlt
loope
inc
sub
push
xchg
stc
sub
insb
stos
sub
cwtl
xlat
and
jge
sbb
or
push
and
imul
pop
mov
add
movsb
rclb
rclb
dec
inc
jl
mov
jl
in
cs
arpl
xchg
cmp
mov
daa
adc
stos
pop
xor
mov
inc
testb
mov
int3
cmp
push
ret
push
pop
ret
aaa
mov
jne
rorb
faddp
lahf
movsb
adc
push
push
adc
ljmp
or
push
push
shrb
int3
test
xchg
add
shlb
pop
lods
or
pop
push
push
cmpsl
int3
dec
xlat
sbb
ret
push
in
adc
mov
xor
filds
xchg
inc
mov
fnstenv
mov
fsubrs
in
addr16
mov
dec
add
cmpsl
shlb
fdivrp
mov
push
jbe
xor
cmp
loop
in
and
fistl
jmp
cltd
push
daa
data16
xchg
mov
xchg
add
mov
dec
mov
out
or
cld
movsl
repnz
rcll
dec
pop
jbe
mov
push
cltd
jmp
aam
jns
xor
int
test
mov
shll
and
mov
lock
jae
repz
call
pop
ret
cmp
jno
test
adc
and
mulb
pop
movsb
xchg
add
xchg
les
xor
mov
add
test
jae
clc
push
mov
dec
xor
lcall
ror
in
or
sarb
aam
loopne
mov
push
pop
ss
mov
fisubl
inc
rcll
stos
jge
jmp
imul
xchg
imul
mov
lods
or
gs
sbb
inc
dec
sub
mov
test
dec
rclb
ja
into
dec
or
and
mov
lds
call
sahf
sti
push
inc
and
inc
aam
in
and
jae
pop
pop
jb
movsb
arpl
cmc
out
mov
aas
or
arpl
insb
loopne
push
mov
ljmp
mov
test
lcall
mov
imul
lret
cmp
dec
lock
inc
in
push
mov
into
shll
or
jmp
lret
jge
lahf
aaa
movb
mov
outsb
clc
fidivrs
and
popf
popf
cmc
stc
mov
xchg
pop
dec
movsl
cs
push
loop
pushf
inc
jae
xchg
in
mov
fistps
pop
imul
mov
xor
popf
xor
stos
int3
mov
addr16
stos
das
add
mov
cwtl
jmp
jmp
mov
pop
xchg
ret
fstl
int3
hlt
mov
cmp
out
test
push
dec
and
sub
enter
loopne
cmc
xor
pop
inc
je
jle
leave
xchg
fisttpl
adc
arpl
lods
insl
pop
fistpl
jg
or
testl
pushf
dec
inc
out
or
or
pusha
or
jg
loope
cmp
sub
lods
das
inc
mov
jl
data16
aaa
je
xchg
imul
movl
lds
lret
js
cmp
inc
arpl
addr16
ret
pop
fisttps
cltd
arpl
dec
pop
push
fmulp
int3
in
ljmp
movsl
mov
pop
inc
jg
xlat
jbe
lea
xlat
es
adc
outsb
add
cmpsb
pop
shl
je
repz
push
shll
mov
lods
xchg
pop
call
cmpsl
js
mov
mov
fcoms
or
push
outsb
push
inc
push
test
mov
shr
jmp
sbb
push
xor
out
xchg
adc
inc
mov
xchg
mov
sbb
mov
cmc
xor
gs
lahf
dec
pop
leave
fucomi
stos
jns
mov
sbb
inc
cltd
or
sub
sbb
cwtl
and
daa
or
xorb
push
jo
xor
lahf
jmp
or
loopne
stos
mov
cli
mov
adc
jle
and
xchg
sbb
loopne
jmp
fbstp
mov
clc
stc
fstl
cmc
into
jl
or
sbb
rcrl
cmp
stos
arpl
push
ljmp
outsl
pushl
inc
sub
out
xchg
jns
cwtl
sbb
cmp
xlat
gs
and
sub
lea
fsts
dec
gs
add
pop
mov
loopne
aas
popf
and
in
sbb
mov
sub
pop
jo
xchg
inc
call
dec
mov
jmp
fld
imul
ret
mov
insb
mov
jnp
dec
cmp
out
pop
pop
or
mov
xor
andb
mov
pusha
and
loop
movsb
call
repz
sbb
cld
mov
mov
sbb
pop
mov
loop
int
cmc
or
cld
cmc
cmp
test
sahf
sub
stc
inc
mov
aaa
in
out
daa
lret
lock
cmp
lods
testb
push
sarl
mov
add
xlat
xor
dec
or
cmp
push
outsb
push
mov
adc
sbb
outsb
enter
bound
jns
popf
test
xchg
stc
mov
adc
fs
test
daa
jae
adc
imul
pop
xor
adc
pop
add
cmp
iret
sub
bnd
mov
push
jp
lea
sbb
scas
test
mov
test
jno
cld
push
jmp
xchg
ljmp
mov
imul
fcompl
push
rdmsr
aas
inc
rcrb
mov
dec
std
inc
call
mov
mov
mov
inc
sahf
mov
mov
divb
inc
mull
movsb
int3
push
cli
lock
ja
add
push
out
fisttpl
xor
xorb
andb
daa
xor
xor
dec
pushf
sti
inc
es
xchg
stos
jo
or
push
mov
pop
xchg
jmp
movsb
add
add
sub
dec
sahf
fdivrp
pop
popa
push
filds
inc
push
fwait
mov
push
lods
insl
jnp
jbe
inc
int3
xchg
xor
dec
popl
fnstenv
add
adcb
in
or
leave
cld
xchg
jnp
mov
cltd
cltd
or
arpl
mov
add
testb
push
out
aam
cmpsl
and
movsl
sbb
enter
mov
cs
xor
andb
rcrl
lcall
daa
mulb
pop
ljmp
icebp
cltd
push
xor
and
cmp
out
dec
test
nop
cmc
xor
lds
out
subl
mov
pop
mov
gs
or
frstor
dec
lods
nop
jnp
subl
out
or
mov
adc
stos
lods
fmulp
and
sbb
inc
iret
or
aaa
mov
clc
xchg
sbb
push
inc
sub
test
je
xor
roll
clc
sahf
psrlw
inc
cmp
dec
rcr
mov
je
cmpsb
cli
jns
pop
pusha
daa
lds
jge
insl
mov
sbb
pop
cmp
mov
cltd
or
add
jns
push
lcall
pop
sub
fildl
clc
push
outsb
mov
dec
xchg
xchg
shrl
sub
out
enter
popa
lock
into
cmp
fimull
jne
insb
xor
pop
das
fcoms
out
outsl
or
cmp
pop
lcall
add
jne
lea
add
sub
shr
pop
lods
pop
sahf
out
xchg
mov
fldt
cmp
stos
test
sbb
push
lods
inc
adc
addr16
dec
jb
dec
cmc
push
sbb
push
lahf
xchg
loope
cmp
push
lods
in
sub
cmc
push
and
arpl
pop
dec
imul
fs
jl
and
test
mov
iret
test
scas
sub
cmp
jae
cmc
les
loope
ja
cmp
dec
mov
jne
movsb
jo
add
cmp
xchg
sub
daa
jmp
xchg
in
xchg
jb
mov
jb
dec
pop
or
and
cmpsl
lods
jmp
sbb
mov
outsb
imull
push
mov
popa
sbb
dec
aam
xchg
pushf
cwtl
sbb
adc
sub
nop
cmp
sbb
mov
mov
inc
mov
test
repz
int3
mov
and
fwait
jg
mov
clc
cltd
cwtl
lods
adc
lret
mov
test
ficoml
or
push
adc
sbb
mov
loope
shlb
sub
dec
xchg
push
pushf
mov
sub
or
popa
repz
xchg
and
out
xor
jl
sub
lahf
lcall
xor
iret
fisttpll
fst
xor
sbb
and
xchg
mov
lret
lret
imul
popl
jmp
sbbl
popa
sti
inc
int3
ljmp
ret
xchg
jno
jg
out
xor
ficomps
mov
cmpsb
push
xchg
orl
mov
xchg
out
xchg
in
cli
xchg
jnp
in
push
in
or
stc
mov
repz
aaa
stc
mov
jmp
mov
out
popf
sub
mov
sbb
sahf
adc
mov
mov
pop
outsl
adc
outsb
imulb
ja
mov
push
dec
cltd
cmpsl
jno
or
daa
mov
fcoml
push
pop
jbe
add
add
cmp
xor
or
out
pushf
lcall
xor
xchg
neg
ljmp
push
pop
and
popa
push
inc
and
and
inc
sbb
dec
push
cmpsl
imul
lock
in
mov
popf
les
inc
sbb
sbb
push
pop
mov
mov
xchg
bound
mov
cmpsl
xchg
movsb
or
cmp
push
inc
popf
inc
adc
xor
fs
js
stos
jle
lds
stos
mov
cwtl
push
dec
aas
ja
arpl
mov
xchg
aas
adc
lock
dec
pop
cmp
dec
mov
push
mov
out
dec
xchg
dec
mov
lahf
movsl
into
mov
fimuls
adc
ss
scas
mov
aas
test
popf
lods
pop
jne
adc
loope
cmova
pusha
push
jo
loope
daa
add
mov
pop
js
push
inc
cmc
xchg
pop
nop
dec
and
cmpb
test
mov
and
fldcw
mov
jl
adc
mov
mov
sub
cmp
push
add
aad
rep
jl
insl
lcall
nop
cmp
jno
movsb
in
cmp
out
out
add
adc
icebp
mov
pusha
psrad
out
jmp
scas
pusha
out
sbb
pop
pop
in
dec
jo
mov
and
sbb
adc
xchg
cmp
sbbb
push
out
movsl
ds
test
add
dec
adc
enter
cli
insb
sbb
fmull
pop
scas
cmc
popa
xchg
push
adc
daa
push
mov
loope
in
cmp
dec
repnz
hlt
add
cmp
call
fistl
daa
push
lods
sub
pop
cmp
iret
jo
pop
jns
sahf
cwtl
mov
addr16
mov
adc
std
mov
dec
inc
jecxz
jecxz
cmp
push
ud2
pusha
add
jbe
sbb
lds
mov
stos
rolb
pop
inc
adc
lods
fistps
ljmp
out
lock
imul
dec
adc
mov
mov
shrb
mov
xlat
ljmp
push
popf
jle
stos
insb
out
lahf
inc
cmpl
cmpsl
sub
mov
enter
negb
mov
aad
setp
frstor
mov
cmp
sbb
adc
stc
cmp
fisubrs
sbb
loop
fcmovbe
xchg
inc
sbb
enter
out
or
jae
dec
aad
testl
cmp
push
out
cmp
cwtl
fucomi
jae
inc
test
mov
loop
mov
cwtl
jns
push
and
lcall
imul
aas
shll
cmp
inc
sub
jmp
xor
adc
sbb
push
fsubrl
sbb
pop
mov
mov
or
jle
sbb
pop
notl
fistps
sub
lock
dec
jg
sbb
xor
dec
xor
push
or
xchg
gs
mov
dec
sub
imul
aaa
jecxz
pop
loopne
xor
inc
mov
xchg
cmp
loop
mov
dec
push
pop
adc
inc
decb
pop
add
das
mov
inc
mov
sub
mov
ret
fldt
xchg
dec
cmp
mov
mov
cmp
fwait
clc
push
loop
mov
clc
in
cmpb
sbb
mov
add
in
lock
pop
sti
or
xor
adc
sub
imull
inc
in
das
dec
xchg
test
aaa
rcrb
sbb
insl
icebp
insl
cmpsl
idiv
jle
ffreep
lret
insb
jle
pop
aad
push
jg
adc
xchg
mov
inc
adc
daa
push
lret
sbb
hlt
out
adc
scas
ss
mov
inc
mov
imulb
jns
xchg
cmpsb
test
fdivrs
cwtl
out
imul
lea
or
repz
sub
xor
in
pop
sbb
lahf
inc
insb
cmp
or
and
or
xor
gs
scas
mov
pop
jg
jecxz
or
fidivrl
mov
ja
mov
mov
sbb
and
mov
ja
jns
mov
mull
pop
rorb
mov
fidivl
xlat
jmp
into
cli
inc
sub
pop
cmp
jl
mov
or
pop
and
repnz
cltd
pop
xor
inc
fstl
mov
push
cvtps2pi
pop
in
fwait
add
add
fsubs
popa
jle
xlat
xlat
and
mov
bound
ja
inc
mov
scas
cmpsl
pop
sub
mov
cmp
loopnew
lods
lcall
imul
mov
movsl
cmpsb
push
out
test
fistps
fnstenv
aam
repz
jae
pop
inc
mov
pop
push
aaa
out
jecxz
rcll
pop
jp
xorl
popa
insl
jmp
or
popf
std
push
push
inc
lret
mov
lea
push
jle
xor
int3
push
test
lods
jecxz
push
adc
mull
sub
push
and
sub
pop
cmpsb
scas
ret
or
daa
sbb
repz
sahf
pop
mov
cmpsl
pop
movsb
loop
rcll
mov
push
out
pop
and
lcall
insl
jb
mov
add
loop
and
push
jne
and
je
ds
loope
inc
loop
out
mov
fmulp
dec
pop
push
mov
mov
sbb
testb
adc
xor
movsb
bound
repz
aad
sbb
push
aas
cmc
loopne
movsl
je
mov
int3
sub
rcrb
sub
adc
aas
mov
xor
in
xor
mov
ficompl
add
push
repz
xchg
jp
adc
jb
ret
xor
xor
or
stos
shrb
adc
aam
cmp
pop
push
or
lcall
add
insb
fucomp
xor
ljmp
movsl
bnd
sub
addl
int3
inc
stos
in
int3
sub
or
sti
std
and
xor
or
pop
pop
xor
pop
test
mov
push
sub
in
and
daa
and
push
rorb
cmpsb
inc
daa
fbstp
imul
sub
xor
popl
or
test
test
or
sbb
pop
xchg
lods
jge
and
and
outsl
or
jbe
sbb
out
insl
sub
cmp
push
push
out
cmp
and
repz
stos
sbb
lds
jns
pop
fsubl
out
cld
int
lret
clc
test
mov
pop
xchg
scas
test
cmpsl
or
jno
jecxz
insb
ss
movsl
mov
sbb
pop
fwait
xchg
xor
cli
pop
jmp
in
shrb
add
daa
int3
xchg
fstl
jbe
loope
int3
ljmp
or
adc
fstpl
int3
xchg
fisttpll
pop
jne
int
outsl
push
xor
mov
ss
inc
push
movsl
scas
and
lock
fildl
adcl
sub
imul
jno
les
xchg
xchg
adc
in
inc
cmp
mov
xchg
les
test
xlat
add
add
mov
in
repnz
jb
outsl
aam
inc
call
popf
lods
mov
outsl
pop
push
sub
and
scas
pop
mov
pop
fwait
push
jbe
pop
fisubrs
mov
or
repz
cmp
adc
jae
or
insb
or
xchg
int3
mov
cmp
add
adc
lea
add
mov
inc
and
xchg
testb
sarl
pusha
dec
adc
jge
negb
loopne
mov
jbe
cmp
sbb
dec
lret
mov
scas
popf
out
push
cwtl
daa
in
pop
lcall
in
inc
ja
scas
neg
jns
js
cli
lea
jno
pop
popa
mov
lods
cmp
inc
adc
imul
sub
mov
push
add
test
mov
mov
insb
dec
dec
pop
add
xor
mov
mov
jge
ret
jmp
mov
ljmp
test
sarl
sbb
mov
pop
pop
add
xlat
les
dec
push
mov
lret
xchg
cmp
mov
push
out
lock
scas
mov
test
in
inc
les
fcmovb
xchg
shl
add
mov
pop
adc
sub
or
inc
cmpsb
pop
testb
es
and
loope
jmp
mov
cmp
fs
mov
pop
push
jp
adc
lret
push
sub
cmp
xchg
adc
gs
jo
call
mov
sbb
test
popl
mov
stos
push
sahf
mov
mov
push
pop
out
lcall
arpl
xchg
push
lret
push
jmp
ljmp
sbb
mov
jge
fldl
xorl
cmpb
loope
out
xlat
mov
sbb
cmpsl
and
pop
and
dec
int3
or
pop
cmpsl
adc
jle
jmp
pop
loop
jle
inc
push
push
lods
pop
sarb
icebp
out
xlat
popa
and
repnz
repnz
ret
cmp
popa
pop
mov
std
stc
cmpsb
fcom
repnz
adc
pusha
jmp
jne
mov
jo
fnstenv
dec
xchg
mov
lods
inc
inc
bnd
add
stos
sub
xchg
pop
and
es
cltd
mov
call
dec
xchg
das
pop
js
pop
jp
push
add
adcl
jne
jns
mov
push
push
imul
xchg
lcall
inc
lret
xor
shr
and
sbb
or
sarb
pop
xlat
or
sti
das
and
mov
dec
setne
aas
inc
sub
imul
and
pop
pop
add
mov
ss
push
call
sub
mov
adc
lcall
out
jbe
ds
or
cmp
sbb
xlat
pop
test
test
sub
sbb
pop
lods
jp
and
xor
test
or
jp
roll
push
hlt
jb
mov
aas
adc
repz
mov
int3
sbbb
pop
les
push
sbb
js
dec
or
js
and
lods
sbb
jl
pushf
inc
aam
sbb
shlb
push
xor
fadds
inc
repz
push
fsubp
mov
xlat
xlat
gs
jb
faddl
and
fs
imul
jns
mov
and
mov
jecxz
mov
xchg
lahf
daa
gs
push
add
mov
roll
repz
or
or
or
mov
fidivl
sub
sbb
dec
aad
pop
pop
movsl
cld
xchg
data16
pop
jo
sar
lahf
and
icebp
push
xor
test
or
push
imul
popf
gs
scas
xchg
in
dec
lods
pop
mov
fucomi
je
bound
test
pop
adc
nop
lret
loopne
vorps
rcl
mov
out
fisttps
push
sbb
clc
enter
mov
fisttpl
inc
into
leave
add
lock
cwtl
dec
data16
sbb
push
nop
decb
jb
jo
ljmp
and
lea
movsl
test
adc
xchg
dec
in
sbb
adcl
stos
ljmp
int3
dec
imul
jge
adc
jle
dec
inc
out
sahf
imul
mov
jl
in
cmp
sub
shl
pop
mov
pop
cmp
sahf
stos
icebp
jnp
imul
inc
dec
mov
xchg
push
lods
dec
popa
mov
shr
pop
jle
nop
xor
cmpsb
mov
or
add
xor
fsubr
out
xor
add
and
mov
repz
push
jge
dec
mov
mov
pushf
or
mov
pop
sub
sub
out
fucomp
jecxz
je
nop
adcb
test
sub
sub
xchg
fwait
mov
imul
pop
xchg
pop
push
bound
pop
bound
repz
or
adc
lods
rolb
xor
aaa
mov
rolb
clc
push
mov
das
inc
adc
jge
cmp
inc
cs
rcrb
daa
aam
outsl
sbb
xchg
adc
dec
cs
dec
sbb
xor
and
mov
jg
pop
or
mov
cmp
jbe
mov
test
imul
cmp
xchg
test
xchg
bound
mov
xchg
es
std
shll
movsb
mov
mov
mov
jge
pop
jb
lret
popf
push
insl
inc
fcoml
std
mov
popf
out
mov
dec
ds
jmp
inc
rcll
dec
or
xchg
shrl
divb
movsb
and
test
adc
inc
jae
inc
push
jle
ljmp
jecxz
jae
jns
mov
ficoms
cld
dec
aaa
mov
pop
out
mov
add
andb
xor
fldcw
repz
imul
dec
mov
cs
pop
cmp
bound
pop
jne
pop
fbld
outsb
mov
add
dec
pop
pop
inc
pop
mov
pushf
mov
ja
sub
xchg
jmp
dec
daa
cmp
jns
jl
or
mov
mov
push
ss
xor
jle
jmp
push
xchg
and
test
dec
bound
push
push
inc
mov
push
mov
push
adc
ret
cmpsb
leave
mov
xchg
cmp
push
popa
xchg
cwtl
dec
out
aad
out
loop
dec
mov
push
jmp
jno
jmp
jns
and
movsl
xchg
and
pop
mov
mov
les
cmp
cmp
idiv
cwtl
cmp
jnp
push
stos
repz
sbb
mov
adc
es
mov
addr16
add
push
mov
sti
pushf
loopne
dec
cmp
adc
jp
inc
inc
cmp
cli
pop
aaa
fstp
mov
inc
cwtl
repz
int3
xchg
mov
adcb
dec
mov
cs
mov
ret
popa
add
loop
cwtl
sub
in
movsl
xchg
enter
cmp
fidivs
add
aam
push
cmp
frstor
push
cmp
in
out
test
cwtl
mov
lea
jg
hlt
xor
and
mov
push
adc
fcomps
adc
xor
or
div
outsl
cmp
je
scas
adc
cmpsb
push
jnp
jecxz
jbe
iret
mov
jbe
cmpsb
mov
or
sub
or
add
jle
xlat
jle
add
aam
aam
addr16
pop
cmpsb
sqrtps
das
dec
sbb
jmp
push
and
adc
lcall
dec
jbe
adc
scas
mov
pusha
sbb
ljmp
jmp
mov
test
movsb
mov
inc
inc
sbb
pusha
xor
sbb
or
ret
add
cmp
mov
test
jns
ljmp
loopne
cltd
stos
cmc
jno
aas
xchg
and
dec
jge
pushf
into
leave
mov
dec
nop
jno
and
in
out
pushf
iret
inc
aas
pop
lret
mov
inc
lea
and
jp
jp
inc
fadds
or
cli
ret
or
dec
mov
imul
push
jno
xor
cld
sbb
push
sbb
or
ja
pop
xorl
push
push
cmp
inc
push
pop
arpl
jl
mov
xor
push
sbb
xchg
int3
sub
call
inc
stos
movsb
je
divl
dec
outsb
fisubrl
xlat
sbb
pop
push
repz
adc
dec
aad
es
aam
aad
mov
inc
jns
mov
push
inc
call
xchg
push
and
cmp
pop
ds
push
inc
fwait
and
aaa
pushf
in
cmc
pushf
xor
dec
test
fldt
loop
pusha
inc
stos
stos
int
jbe
icebp
adc
push
movl
jb
subl
jp
push
stos
xor
arpl
dec
mov
scas
sub
in
pop
mov
pop
xor
jne
inc
xor
dec
das
dec
fdivl
int
mov
jnp
ret
xchg
jl
test
jo
in
xchg
push
stc
push
mov
push
push
sti
mov
adc
bound
imul
notl
shr
sti
or
loopne
xchg
or
cmpsl
adc
pusha
movsb
inc
mov
adcl
jmp
inc
in
xchg
jmp
test
cmpsl
xchg
fdivrs
subl
jecxz
xor
or
popf
arpl
inc
push
repz
arpl
pushf
shlb
mov
sbb
popf
lea
fildll
mov
sub
orl
pop
inc
stos
movsl
jbe
shlb
or
jae
jo
pop
test
jmp
sub
popa
add
mov
inc
dec
jp
adc
pushw
scas
xor
cmpsl
mov
and
or
mov
stos
or
sbb
sarl
xchg
aaa
pop
fistps
adc
cwtl
jp
mov
push
xchg
out
lret
inc
mulb
leave
arpl
mov
mov
mov
std
or
mov
adc
fstpt
mov
inc
cmpsl
outsb
adc
mov
mov
testb
xchg
jae
lods
out
stos
cmpsb
jne
inc
stos
push
add
cli
sub
icebp
int
adc
cmp
sub
mov
popf
jb
mov
daa
dec
jmp
xchg
aas
and
lcall
push
nop
dec
inc
out
imul
xlat
add
mov
jp
xchg
ja
cli
mov
jne
pop
fwait
push
clc
rorl
mov
ja
and
xor
js
xchg
mov
clc
popf
iret
push
and
cmp
dec
leave
sti
jo
adc
aas
xchg
push
adc
push
pop
sub
leave
mov
dec
movsl
lock
pop
mov
outsb
int
ret
mov
fnstenv
sti
popf
ja
lahf
inc
and
je
xchg
out
repz
mov
sbb
lods
loope
lods
jae
mov
mov
sbb
ja
xor
int3
mov
pop
or
xor
aas
add
cli
jl
arpl
inc
dec
sub
out
cwtl
and
hlt
clc
lcall
rcr
xor
push
fs
pop
iret
imul
incb
gs
push
sbb
mov
int
mov
mov
cmpl
mov
loop
dec
and
mov
jnp
jno
pop
dec
popa
adc
test
push
iret
clc
mov
pushl
in
ja
insl
jb
into
add
push
push
clc
in
cltd
jns
pop
jge
loop
bound
mov
and
cmp
cwtl
fidivl
pop
jns
jbe
lret
rol
rcll
hlt
adc
es
jmp
or
into
gs
and
sbb
data16
jno
dec
add
jb
sub
xchg
xor
cmpsb
es
mov
sbb
or
xchg
sbb
pop
test
pop
aad
faddp
inc
dec
cmpsb
stc
and
in
or
aad
mov
dec
pop
mov
ficoml
sar
div
call
subl
fistpll
cwtl
cmpsb
into
xrelease
sarb
das
inc
lea
dec
mov
iret
stc
and
xor
in
out
and
out
test
out
jns
shll
cmp
mov
jne
movsl
pushf
inc
lahf
adc
outsb
mov
enter
xor
mov
pop
mov
dec
jbe
cmp
xchg
sub
aaa
scas
dec
mov
push
mov
dec
add
or
notb
sub
mov
xchg
mov
pop
sub
add
sti
aas
into
push
ss
pop
mov
sti
jg
mov
jo
mov
out
popf
out
sub
addr16
xorl
subb
lods
push
mov
xor
xchg
mov
xchg
jnp
xor
or
lret
inc
fdivrs
add
and
or
sar
fsub
dec
adc
xchg
push
or
or
fucomp
into
jns
rol
sub
mov
jle
pop
jp
loop
pop
dec
rol
xor
les
in
fucom
ret
jmp
xchg
xor
mov
pop
mov
sarl
mov
pop
fcom
xchg
lahf
sbb
in
lcall
inc
pop
sarl
push
shrb
lret
js
pop
fistps
inc
dec
sbb
push
cmp
add
cld
in
adc
dec
fisubs
and
mov
test
lcall
imul
mov
mov
sbb
mov
mov
mov
sbb
and
add
sbb
ds
dec
cli
es
adc
outsb
cmp
mov
sub
push
out
cmpsl
lahf
cli
and
xor
cmp
test
mov
mov
jnp
sub
pop
jae
mov
mov
insl
aaa
push
jg
dec
or
jnp
ficoml
imul
popf
gs
stc
fcoms
pop
xchg
pop
fnstenv
inc
icebp
int3
xor
call
rcr
dec
pop
movsb
rorl
lcall
fsubl
add
std
negb
push
lcall
test
mov
pop
cwtl
aas
and
mov
test
sbb
lock
or
mov
dec
mov
xor
mov
xor
jo
push
sbb
xor
test
rolb
dec
movsb
and
jp
imul
jl
shl
adc
add
clc
stc
push
out
sub
cmpsb
lods
in
sub
cmc
mov
xchg
xchg
mov
push
insl
inc
dec
or
inc
les
jge
aad
dec
clc
xlat
movsb
test
ja
add
lret
or
outsl
cmp
sbb
adc
test
fucomip
xchg
cmp
icebp
add
dec
adc
push
adc
dec
jmp
xchg
jecxz
jns
dec
xchg
clc
test
lods
enter
inc
or
mov
or
clc
and
insl
push
negl
sub
dec
or
push
cwtl
scas
cli
xchg
jle
lea
movsl
adc
add
andl
inc
ret
jo
std
jmp
inc
pop
xor
sti
add
sub
push
jle
ror
insl
repnz
rcrb
mov
push
cmp
shl
in
arpl
aam
mov
js
pushf
adc
sbb
or
sti
xchg
sbb
inc
shrb
std
out
sbb
notb
dec
pushf
in
cmpsb
cli
xor
cmp
add
mov
xchg
xchg
mov
hlt
scas
clc
xor
dec
push
ljmp
rcrb
jae
pop
sbb
icebp
inc
add
sahf
push
int3
insb
repz
mov
jno
stos
mov
bound
shl
and
xor
gs
pusha
pop
cmp
fldcw
fsubrs
add
aas
push
sar
mov
sbb
add
dec
dec
dec
sti
pop
ljmp
rol
ljmp
sarb
or
jg
les
xchg
jb
add
xchg
cmpsl
pop
push
xorl
into
sub
stc
iret
or
scas
mov
xlat
daa
xor
popf
inc
pop
inc
sub
mov
lcall
fwait
popa
or
pop
xchg
mov
aaa
jg
add
push
push
sub
inc
cmp
lds
imul
xchg
loop
jmp
stos
jmp
lret
outsb
adc
fs
add
movsl
mov
pusha
cwtl
outsb
test
xlat
or
ret
add
mov
pop
mov
dec
adc
insb
push
cli
iret
out
or
push
sbb
shrb
int
push
adc
fwait
sbbl
adc
in
xor
xchg
cmpb
decb
pop
fld
lret
mov
lahf
sub
scas
imul
cli
dec
or
cwtl
out
sub
hlt
sub
ja
mov
mov
xchg
cmp
mov
cmc
inc
std
ds
and
les
sub
fs
int
cmp
jg
pop
pop
jno
loope
add
add
xchg
in
ss
jbe
jb
push
jo
mov
xor
loopne
push
fs
xchg
fistpl
add
dec
add
pop
mov
in
sahf
xchg
pop
add
mov
jge
jmp
inc
inc
jp
jae
ret
fists
daa
imul
imul
mov
stos
aas
sahf
sbb
xor
fwait
lock
lea
mov
idivl
sbb
idivb
mov
ja
in
inc
out
insl
jmp
je
pop
cwtl
jbe
pop
adc
mov
stos
dec
xchg
aaa
jns
add
push
out
jge
jg
cwtl
stos
cmpb
aam
xor
dec
icebp
call
mov
out
fwait
imul
aaa
loope
cld
and
mov
lahf
mov
mov
pop
pop
or
adc
clc
pop
test
dec
jo
fnstenv
push
dec
mov
ret
enter
push
lds
xor
inc
fucomip
and
std
nop
call
inc
dec
or
sbb
fstpl
pop
arpl
inc
mov
mov
jp
mov
ret
adcl
cmpsl
out
rcr
push
andb
xor
or
pushf
jp
ss
adc
imul
sub
insb
mov
cmp
sbb
dec
scas
int
push
cmc
aaa
std
push
jbe
inc
add
mov
lret
insl
cld
test
dec
cld
mov
loope
cmc
addr16
ds
inc
mov
cli
ds
mul
adc
adc
ljmp
push
xchg
inc
jp
jb
xchg
jmp
jle
pop
jb
sbb
push
mov
pushf
xlat
fldcw
jp
sub
push
xchg
fnstcw
cli
mov
pop
pop
sbb
lcall
jle
je
shll
mov
cmc
fwait
out
lods
jbe
dec
xor
jmp
movsl
fs
ljmp
sub
fld
add
das
cmp
fsubr
sub
stos
add
lahf
xor
sub
cmp
mov
sbb
cmp
push
push
inc
jl
dec
hlt
lea
mov
sub
adc
sbb
and
sub
mov
fisttps
fisubrl
xchg
mov
sbb
mov
xor
xchg
lods
imul
pop
lods
cmp
jnp
testl
pushl
stos
jnp
and
cmp
inc
push
sahf
pop
xchg
sarb
dec
add
jb
hlt
outsl
adc
push
mov
jg
mov
pop
mov
cltd
loop
jbe
dec
jb
dec
fldt
das
das
gs
lret
nop
in
and
dec
data16
aad
pop
mov
arpl
push
adcl
fwait
mov
ret
in
xor
es
cltd
mov
mov
xchg
pop
mov
out
pop
push
cs
or
icebp
xchg
rep
mov
aad
rorb
jp
dec
xor
dec
push
mov
xchg
dec
cmp
cmc
popf
shll
pop
jmp
dec
mov
sbb
in
cmp
add
push
push
or
pop
jo
or
mov
idiv
fldz
int
insb
adc
data16
jae
sbb
add
loop
add
lock
stos
xchg
outsl
push
in
call
sub
xchg
ret
xchg
adc
out
test
xor
jmp
xor
pop
cmp
mov
pop
or
push
jecxz
jnp
test
outsl
xchg
cltd
sahf
mov
add
loope
popa
lahf
sub
outsl
fdiv
shll
mov
mov
xchg
insl
inc
int
ljmp
xor
pop
aas
mov
call
xlat
js
pop
cmp
xchg
sarb
mov
or
push
push
sbb
sbb
fcmove
add
xor
push
mov
mov
adc
xlat
pop
orl
sbb
aad
test
inc
test
idivl
scas
dec
cmp
cmpl
lds
into
mov
mov
ds
xor
ret
rcll
push
push
jo
push
in
sub
out
orb
pop
loopne
jmp
or
test
icebp
cltd
mov
inc
or
enter
add
mov
stc
dec
dec
jp
and
sub
dec
roll
jo
in
shlb
mov
addb
gs
jnp
or
jb
in
outsb
lods
xor
inc
stos
fwait
popf
jle
ss
and
jecxz
or
pop
xchg
mov
outsb
leave
insl
add
mov
jle
loopne
push
int3
jno
xor
rclb
and
mov
cmp
jmp
popa
outsl
out
test
mov
inc
sub
dec
imul
out
in
ss
cmc
out
jno
data16
xor
out
and
dec
dec
test
or
mov
mov
dec
negl
jecxz
repz
jns
shrl
pop
rol
pop
jg
mov
cmp
lret
cli
shlb
pop
add
rcrb
mov
inc
and
mov
adc
es
pushf
scas
cmp
pop
jmp
jno
dec
cmp
ret
and
jle
jns
testb
push
sbb
push
xchg
outsl
jl
add
pop
mov
cmpsb
leave
mov
cmpsb
aaa
mov
mov
add
and
cmp
xorb
dec
outsb
fistps
sub
movsb
mov
inc
lods
adc
lcall
sbb
adc
cltd
pop
mov
push
inc
loop
push
xor
aam
cmp
or
outsl
mov
cmp
ljmp
or
icebp
aas
xchg
add
push
loope
dec
cmp
popa
aaa
or
pop
inc
sub
mov
popa
add
jmp
adc
jae
add
hlt
bound
jnp
fbld
test
lods
mov
mull
mov
mov
pop
mov
iret
jmp
pop
xchg
loop
pop
xchg
les
push
ret
imul
mov
and
data16
out
push
stc
sbb
xor
mov
sub
mov
mov
xchg
ja
popf
idivl
jnp
shll
cmc
into
and
popf
and
jle
and
jns
ffreep
jecxz
add
lods
cwtl
stc
fwait
out
jo
xlat
mov
shr
cli
pop
test
mov
sub
inc
mov
test
pop
push
xchg
lret
aam
xor
mov
cmpsl
mov
jb
leave
sbb
jb
mov
cwtl
mov
fisubrs
fsubrs
mov
mov
jae
cmp
test
cmp
mov
xor
sbb
inc
call
xorb
mov
ja
shll
adc
or
fnstcw
mov
outsb
xchg
or
outsl
add
ficoms
jne
sub
mov
lret
add
ss
dec
push
adc
mov
jae
pop
test
int
dec
mov
fdivrl
pop
dec
adc
add
adc
popa
mov
mov
das
daa
pop
pop
jp
fcmovb
and
cmp
xchg
cwtl
fpatan
nop
lea
add
orb
sub
pop
mov
arpl
cmp
aas
mov
sbb
xlat
es
insl
and
push
add
scas
inc
adc
or
fstpl
ja
int3
sub
jl
outsl
ficoml
test
dec
xor
in
or
popa
loope
jmp
mov
lahf
mov
inc
dec
sub
sub
mov
inc
xor
or
fnstcw
ficoml
jo
push
test
inc
adc
xchg
stos
xchg
or
test
cwtl
popf
jp
mov
mov
pop
xor
push
or
push
stos
fldcw
push
in
dec
adc
push
out
push
les
fidivrs
pusha
lret
aas
push
mov
jecxz
cmp
subl
xchg
cltd
cmp
cwtl
fs
pop
pop
cmp
mov
mov
xchg
in
fs
in
pop
jae
lods
aam
sub
outsl
aas
js
inc
clc
add
nop
push
nop
push
das
mov
repnz
into
repz
loopne
scas
mov
and
xor
rcrl
stc
mov
or
sub
push
in
dec
jbe
mov
adcl
stos
adc
xchg
inc
das
arpl
push
lret
ja
jl
xor
dec
jne
push
std
outsl
add
mov
fwait
mov
mov
or
sbb
cmpl
sbbb
call
icebp
inc
in
dec
pusha
in
sbb
loopne
aam
mov
and
mov
jle
and
jl
jge
fcomps
cmp
aaa
cmpsl
stc
cli
push
rorl
adc
outsb
stos
mov
cli
fs
adc
mov
mov
adc
popf
mov
xor
xor
rcll
add
inc
mov
popa
sub
inc
arpl
jno
push
xor
adc
mov
repz
jns
rcrb
and
lret
popf
xchg
out
add
out
pop
jmp
out
mov
dec
xchg
rcrb
push
and
push
mov
mov
stos
mov
and
jnp
jnp
frstor
nop
leave
and
incl
jnp
xlat
mov
mov
outsl
adc
roll
mov
clc
dec
mov
fsubrs
jns
push
xor
xchg
cmpsb
inc
pop
rorl
pop
mov
push
mov
pop
add
xchg
or
hlt
sar
mov
insb
and
ret
inc
daa
xlat
gs
in
cwtl
pop
fadds
aad
cwtl
jne
out
sbb
dec
andb
lret
out
inc
cmpsb
pop
push
jns
leave
add
dec
mov
sub
addl
scas
idivl
ret
aaa
mov
ja
lahf
and
mov
ret
sub
jne
or
jmp
pop
pop
insb
push
sub
pop
or
imulb
xchg
sub
push
scas
adc
pop
cmp
sub
cmpsb
or
lock
xor
scas
cmp
mov
fnstenv
cmp
mov
in
push
inc
xchg
cli
ljmp
or
jge
out
data16
scas
jb
dec
negb
das
xor
push
call
hlt
lods
adc
mov
jmp
les
scas
imul
dec
outsl
add
lea
mov
cld
out
dec
dec
je
sbb
xchg
mov
ret
cmp
pop
nop
popf
mov
ficoms
lea
sub
sbb
test
mov
fsub
icebp
out
sti
push
inc
or
or
jl
xchg
pop
sbb
cld
scas
lret
loopne
inc
lds
aam
mov
bound
pushf
mov
mov
jecxz
sub
aad
inc
std
shll
jmp
xor
mov
dec
repnz
cmpsl
mov
test
adc
nop
popf
call
cmp
push
lret
xlat
sbb
push
mov
loope
into
movsb
add
lret
push
ficompl
mov
loop
das
sbb
mov
insl
fs
inc
cmpsl
xchg
call
es
mov
dec
and
cld
lea
fwait
icebp
sahf
cmpsl
fildll
lahf
popf
jg
adc
cli
jp
sub
repnz
adc
jo
ret
or
push
and
in
je
push
das
sub
test
int3
scas
mov
mov
dec
dec
cli
mov
xchg
mov
pop
repz
push
xchg
push
inc
in
cmpsb
jbe
pop
popa
xchg
imul
mov
push
ds
popf
test
lret
inc
js
mov
cmpsb
in
inc
and
pop
jns
sti
pop
cmp
mov
cli
xor
mov
mov
jge
fs
add
xchg
cmp
outsl
in
mov
cmp
adcb
pop
mov
xor
adc
fcompl
xchg
daa
add
stos
jmp
addr16
orl
and
adc
pop
sbb
scas
call
stc
test
jo
mov
or
andb
push
lcall
push
push
xchg
jbe
es
mov
add
push
xchg
stos
add
ds
call
outsl
mov
mov
xchg
out
xor
and
sub
sub
and
daa
insb
xchg
fidivs
add
sahf
shr
fadds
add
xor
ss
movsb
push
cld
sbb
xchg
sti
ds
pusha
mov
addr16
into
stos
mov
les
pop
jle
or
lea
jge
mov
popf
leave
push
subl
jle
sub
loope
mov
or
cmpsb
outsl
into
popf
mov
mov
and
scas
sub
adc
push
decl
repnz
pop
xchg
or
in
arpl
pushf
repnz
dec
bound
sbb
push
ds
pop
push
mov
shll
call
sbb
adc
lret
cmp
cmp
cmp
mov
cmpsb
add
lret
push
inc
mov
add
push
push
mov
sub
adc
subl
aad
fsubrl
pop
xor
or
enter
aas
or
jmp
and
lock
iret
adc
xor
adc
cmpsb
jbe
test
popa
adcb
cltd
cmp
mov
jno
lret
xchg
xor
cwtl
mov
mov
sbb
pop
scas
jne
push
das
adc
push
inc
pop
cmpsb
cmc
pusha
push
add
popf
pop
add
push
ret
push
jg
lahf
mov
cwtl
sbb
pop
nop
arpl
loopne
fsubr
pusha
or
int3
imul
aam
inc
cmp
incl
clc
mov
dec
mov
mov
pop
jno
inc
out
inc
mov
scas
pop
lahf
mov
fs
movsl
cwtl
in
repz
mov
xchg
dec
inc
mov
add
xor
mov
stos
push
das
mov
lock
out
mull
in
mov
pop
ret
mov
jb
mov
pop
jno
fwait
xor
fiaddl
pop
lcall
sbb
fnstsw
pop
push
mov
and
mov
sbb
rcl
int
lahf
sti
mov
jmp
jl
dec
mov
dec
mov
push
jp
sbb
mov
push
or
ss
adcb
in
cmp
or
ficomps
dec
mov
cmpsb
xorb
jae
stos
mov
mov
imul
cmpb
mov
scas
pop
mov
add
repz
mov
mov
mov
insl
loop
iret
fsubrl
call
and
jmp
imul
push
std
fnstsw
mov
pop
mov
inc
xor
sub
mov
pusha
pop
out
data16
dec
outsb
mov
mov
xor
ret
mov
adc
movsl
sub
lock
jg
xorl
sub
dec
inc
jg
sbb
mov
sahf
inc
xor
call
lock
mov
xchg
push
push
out
lcall
fnsave
pop
mov
dec
xchg
lds
stc
cltd
jne
jmp
push
push
orl
xor
dec
xchg
adc
fs
sbb
mov
aas
xchg
dec
push
and
call
fsubs
popa
and
cli
dec
out
jo
sbb
out
xor
pop
adcl
xor
leave
cmp
es
out
sbb
roll
out
mov
icebp
mov
and
xor
pop
sub
pop
cld
add
jmp
sahf
sbb
jns
es
cmpsb
ss
jecxz
test
sub
dec
lahf
mov
pop
lods
jle
mov
or
lahf
mov
mov
aam
mov
jp
cmp
fmul
push
lds
popf
mov
sbb
mov
xchg
xchg
push
outsl
push
mov
ret
into
cmpsb
push
cmpsl
stos
sbb
or
lods
jbe
nop
sahf
dec
nop
xchg
sbb
cltd
ljmp
enter
imul
sbb
fbld
mov
and
mov
xor
adc
push
in
cmp
shr
adc
push
mov
xchg
sbb
push
aam
arpl
repz
dec
add
repnz
fnstcw
jmp
add
int
or
jns
jnp
fldcw
sbb
stc
addr16
stos
and
push
std
mov
mov
out
mov
test
cmc
inc
icebp
in
ljmp
icebp
adc
call
test
mov
cmc
ficompl
push
lret
mov
push
jne
imul
sbb
push
push
jp
scas
xchg
add
push
push
dec
loopne
nop
js
push
inc
in
ret
cmpsb
scas
add
sub
hlt
enter
vmovdqa
scas
stos
xchg
mov
movsb
negl
inc
sub
out
adc
fisubrl
xchg
jg
push
js
imul
mov
sahf
nop
jle
dec
add
movsb
xchg
or
jmp
sub
or
adc
xor
std
xchg
cmp
cmp
and
xor
and
ret
cmp
cmp
and
jg
pop
mov
inc
cmc
xor
cmpsl
subb
mov
into
jbe
ret
or
jle
or
add
mov
xlat
cmc
test
mov
repnz
ja
ret
lods
out
ret
lds
lcallw
ret
fstpl
add
icebp
mov
iret
jae
aas
mov
ja
out
pusha
inc
xorb
cmp
mov
xor
add
add
ja
repnz
arpl
fdivl
mov
push
adc
movsl
jge
stc
sbb
push
cmp
test
outsb
push
cmp
cmpsb
loop
mov
and
pop
or
lods
fbld
das
popf
lret
popa
push
arpl
mov
xchg
loopne
mov
mov
faddl
add
icebp
std
mov
jo
fdivrs
add
aam
xlat
sub
adc
xchg
cld
test
imul
sbb
hlt
rcll
jecxz
out
int3
lods
push
sub
push
jnp
and
jno
aam
sub
mov
add
pop
mov
jno
xchg
mov
jg
jb
lds
xchg
daa
mov
and
or
push
es
cmp
out
pop
mov
popa
lret
fistps
sbb
lods
ljmp
jl
sub
fisttpl
dec
ret
mov
add
mov
insb
pop
and
cmp
jb
je
inc
xchg
clc
push
pop
rcrl
cmp
jae
stos
hlt
and
mov
and
push
or
pusha
sub
jo
clc
jb
push
negb
cmp
mov
mov
mov
jno
jg
mov
arpl
cwtl
scas
lcall
sub
push
sub
scas
pop
int3
sub
pop
xchg
cmp
add
adc
andb
push
jecxz
mov
aas
push
outsb
testb
pushf
lahf
lods
test
mov
ss
mov
mov
cs
gs
add
bound
jnp
jmp
or
or
mov
adc
gs
xor
push
loope
xorb
and
fisttpl
mov
lods
in
push
jge
and
jmp
dec
std
sbb
cmp
outsl
jle
jl
or
sbb
orb
scas
mov
iret
fwait
push
mov
shrl
stos
sbb
popa
mov
pop
roll
scas
xor
mulb
stc
fbstp
lea
and
aam
es
xchg
lret
lods
push
cs
loop
adc
jle
xchg
xor
aad
jae
lret
sub
lret
mov
dec
adc
xchg
clc
icebp
outsb
stos
in
sub
imul
push
dec
ss
or
mov
sub
dec
aas
out
pop
movsb
imul
or
fdivr
mov
int3
jbe
mov
fwait
inc
jne
ja
inc
insl
imul
mov
sbb
sub
inc
adc
int3
fidivs
enter
jp
cld
mov
repnz
push
push
ror
cmc
frndint
jb
inc
imul
sahf
inc
outsb
les
lcall
aas
inc
add
jns
and
cmp
mov
fs
cltd
pop
cld
outsl
lds
int
cmp
fcomip
dec
pop
decl
pop
mov
push
movsl
insl
test
in
cmp
add
loop
loope
inc
push
jnp
dec
dec
mov
fmull
and
inc
mov
sub
test
leave
clc
mov
xchg
ret
adc
and
shrl
xor
pusha
mov
sub
ja
cmp
jne
imul
or
out
sub
scas
pop
addl
sbb
repz
fadd
insb
imul
add
stc
push
fwait
in
cltd
adc
or
gs
sub
mov
mov
repnz
das
cmp
jbe
xor
mov
leave
push
push
pop
roll
xor
loop
push
xchg
cmp
pop
dec
cmc
cmp
lea
jo
inc
cmc
pop
inc
sub
add
sub
popa
mov
fisttpl
and
adc
sub
roll
jmp
les
popa
in
rcr
insl
daa
dec
es
enter
mov
call
adc
pop
inc
sub
adc
sbb
cmp
mov
push
mov
cs
push
ja
jo
mov
pop
int3
rol
jecxz
jno
and
sbbb
add
mov
pshufw
arpl
add
ss
fildll
add
out
mov
and
jge
xchg
scas
mov
sbbl
das
mov
pop
loop
out
std
cmp
adc
iret
es
fdivrp
add
jge
mov
in
std
out
popf
lret
iret
cwtl
pop
cwtl
outsl
xlat
mov
jecxz
mov
adc
sahf
jle
lock
rolb
push
cli
ds
int3
jp
aad
adc
out
imul
std
sub
mov
pushf
mov
insl
jns
cmc
movsl
int3
les
dec
pushw
loope
and
mov
push
shl
out
std
enter
xchg
ss
adc
stos
pusha
sarl
mov
xchg
lock
adc
leave
mov
movsb
or
and
adc
rcrl
dec
mov
and
sub
dec
shl
aad
gs
sbb
mov
mov
cmp
loopne
fcomi
arpl
sub
xchg
jp
pusha
push
test
pop
mov
enter
lahf
pop
xchg
fstpt
pop
cwtl
xor
sbb
mov
dec
jg
push
pop
inc
xor
insl
lcall
insl
ret
loope
pop
enter
pop
push
push
jmp
lret
and
mov
mov
outsl
adc
adc
mov
sub
push
sbb
jge
xchg
mov
add
push
jl
mov
or
pop
sub
or
cmpl
ret
mov
test
and
arpl
adc
cwtl
pop
mov
mov
xchg
xchg
xchg
fcmovnu
inc
xchg
jl
outsb
int3
adc
int3
outsb
fildll
int
inc
stos
hlt
movsb
and
sti
lock
inc
xchg
mov
cmp
push
push
xchg
jle
mov
cmc
mull
push
pusha
xchg
mov
fsts
aas
jmp
sahf
or
or
fsubl
outsl
inc
insb
push
int3
pop
lret
lahf
out
inc
xchg
push
mov
ret
cmpsl
pop
out
rorl
jbe
cmp
and
ret
dec
mov
dec
inc
cmpsb
mov
call
push
jle
addr16
ret
stos
jge
es
scas
fcompl
filds
insb
mov
je
stos
arpl
add
push
mov
sub
fistpll
pop
adc
mov
mov
lcall
popf
pop
ficoms
insl
mov
stc
sbb
adc
orb
cs
push
pop
add
shll
int
imul
idivb
rclb
and
add
rclb
xor
popf
jge
rorb
jp
daa
xchg
fucomi
movsb
jg
sub
xlat
in
std
test
sub
loopne
xlat
into
dec
cmpsl
xchg
cmp
sbb
push
dec
dec
aad
dec
inc
xchg
cli
ret
scas
cmp
adc
ljmp
xchg
sbb
inc
inc
scas
mov
mov
fildl
repz
xchg
clc
and
inc
adc
repnz
jne
pop
and
sbb
mov
push
shlb
cmpsb
xchg
xchg
bound
push
add
mov
push
dec
movsb
shl
adc
lock
xchg
arpl
inc
xchg
pop
out
ja
pop
dec
mov
pop
in
out
insb
push
mov
jo
sbb
hlt
sbb
es
outsl
aaa
fwait
ret
popf
pop
mov
pop
gs
or
jmp
mov
addb
ss
in
mov
test
xchg
sub
mov
mov
xor
mov
cmp
enter
xchg
repz
fwait
adc
cmpsb
push
push
mov
push
inc
adc
fstpt
fwait
loopne
mov
aas
outsl
jmp
jge
lret
sbb
pop
mull
lods
je
shr
notl
push
movsl
pop
jecxz
cwtl
mov
mov
sbb
arpl
xlat
popf
push
lods
ficoms
pop
dec
mov
mov
test
rclb
lock
cmp
aas
xchg
jo
adcl
dec
roll
out
je
movd
or
stos
ljmp
inc
adc
xchg
repz
mov
mov
add
push
push
cmc
sarl
jns
mov
inc
cmp
sbb
mov
jle
leave
call
pop
jb
fucomp
stc
loop
push
fidivrs
jnp
mov
push
arpl
std
fs
test
fldenv
jge
and
gs
das
fistl
and
jl
mov
xor
or
cli
xlat
addl
mov
mov
push
cmp
mov
bound
sub
shll
jb
mov
lcall
and
ret
int
int
lods
jne
inc
mov
fxch
std
mov
xchg
xchg
dec
sbb
pop
inc
xchg
add
push
test
fimuls
loope
das
jmp
mov
movsb
pop
dec
mov
push
movsb
mov
scas
ficompl
cmp
orb
sbbb
and
push
cmp
sub
test
enter
mov
stos
pusha
pop
sti
inc
cmp
jge
xlat
or
imul
call
or
and
repnz
cltd
push
xor
dec
int3
sub
add
push
adc
jge
dec
mov
sbb
mov
movsl
or
or
call
inc
xor
es
xchg
pop
in
int3
pop
ret
out
rcr
sbb
out
rorl
mov
sbb
mov
adcb
inc
push
adc
in
test
fldl
lea
xor
pop
movups
xchg
imul
mov
out
cli
je
jb
and
mov
mov
out
or
add
es
adc
or
mov
clc
clc
rorl
shl
lea
pop
inc
call
adc
repz
shlb
lret
or
aas
pop
sub
jbe
dec
lea
sbb
fdivrs
sbb
es
inc
fstpt
insl
push
psllw
xchg
outsl
stc
iret
pop
xor
lcall
mov
or
aaa
push
mov
mov
or
fcmovb
jns
cmp
mov
dec
je
xchg
mov
push
fisubrl
jbe
push
pop
pushf
push
insb
lahf
int3
nop
mov
dec
add
loopne
lock
test
gs
or
outsb
cwtl
pop
lock
adc
sub
pop
mov
loopne
scas
inc
imul
in
stos
mov
push
jmp
je
jge
adc
or
cmpsl
aad
or
into
sahf
push
or
pop
pusha
mov
rcl
lahf
fyl2x
push
mov
push
jae
je
or
mov
sub
mov
and
push
jl
cltd
cli
sbb
ret
xchg
fmull
mov
push
int3
out
cs
or
mov
movsb
and
xchg
xchg
es
addr16
sub
popf
sti
lret
push
jl
loopne
fcoms
xor
xchg
enter
lret
sub
mov
push
fs
mov
mov
mov
jne
out
and
jnp
cmpsb
cmp
xchg
jo
sbb
in
hlt
lahf
push
push
push
cmp
mov
lcall
pop
out
inc
mov
cmp
mov
lock
add
xor
cmc
inc
lods
je
fwait
jno
push
xchg
or
pop
stos
orb
jb
fs
push
jb
xchg
mov
arpl
in
and
scas
lea
lcall
cmp
or
mov
inc
mov
xchg
lcall
inc
imul
adc
dec
xchg
in
aaa
in
cld
arpl
cmp
daa
fs
or
mov
sub
rorb
movsl
dec
mov
lret
adcb
sbb
push
insl
mov
jno
add
int3
or
jge
hlt
xchg
dec
mov
push
addb
inc
jns
xlat
mov
jg
jecxz
mov
push
mov
into
sub
or
jp
test
adc
xchg
xor
fwait
pop
pop
lock
outsl
xor
fistpl
shrb
lret
pop
sbb
outsl
jp
mov
leave
fidivrs
inc
aas
je
fstpt
adc
sbbb
out
push
scas
add
push
loop
inc
aad
adc
cmp
inc
lret
sbb
daa
xlat
cmp
dec
jne
js
pop
test
callw
das
jg
push
loope
mov
inc
dec
fldl
cmc
loopne
adc
out
test
jbe
and
cltd
add
loopne
sub
or
jae
sahf
dec
fisubrl
in
or
cmp
push
shll
ficompl
adc
ficoml
rcl
inc
nop
aas
sti
fldt
push
inc
cmp
adc
push
xchg
sub
call
pop
leave
rolb
sbb
pop
mov
leave
push
add
sbb
outsb
pop
and
popf
push
push
inc
call
data16
insb
int3
cmp
aam
mov
mov
in
jnp
scas
out
fstpl
inc
mov
dec
inc
push
add
ja
sub
push
aad
xor
or
jb
push
scas
test
loope
loop
cltd
jnp
movsb
mov
fistpl
imull
mov
repz
mov
aas
cltd
jmp
sub
push
dec
pop
dec
jbe
cmp
cli
js
negl
pop
popf
cwtl
xchg
and
js
mov
fisubs
decb
or
fnsave
inc
jb
bound
or
xchg
dec
inc
icebp
lock
gs
xchg
andb
stos
test
and
cmp
out
adc
jp
mov
sbb
outsb
pop
adc
or
ja
sbb
jo
dec
loop
adc
cmp
jl
mov
mov
cmp
sti
mov
aad
pop
idivl
pop
jne
pop
inc
fcoml
and
fisubrs
in
lret
out
jnp
es
jb
aas
enter
sbb
cmpsb
add
sbb
inc
ffreep
push
mov
xor
mov
cmpsl
sbbb
lods
push
cmpsb
inc
add
xchg
das
inc
jns
mov
jl
mov
mov
mov
cmp
add
push
insb
aas
aaa
and
pop
fistpll
or
xchg
push
mov
mov
cmp
mov
test
leave
decb
mov
in
xchg
sub
sbb
cmp
pop
out
arpl
lahf
mov
aad
push
scas
outsl
decl
xchg
lods
sub
dec
jmp
ror
ja
mov
cmpsb
add
pop
mov
iret
add
sub
movl
icebp
cmc
cmp
sahf
add
and
ljmp
pop
xor
xor
fldcw
pop
xchg
and
adc
sub
es
or
mov
sbb
mov
repnz
mov
dec
mov
pop
push
stos
stos
notl
mov
push
mov
mov
add
in
sub
mov
jno
adc
fs
sbb
test
xlat
clc
lods
mov
shlb
jmp
call
xchg
out
ret
fsubs
mov
jb
mov
cmpsl
fucomp
sbb
mov
subl
dec
cmp
or
out
add
leave
fwait
sub
in
mov
jbe
ds
inc
and
imul
loop
sbbb
mov
negb
out
aas
xchg
leave
ja
pop
aas
scas
adc
or
aam
inc
push
icebp
aas
xchg
lret
sbb
xor
mov
pop
cmp
jne
mov
sub
mov
mov
test
or
cwtl
sub
sub
sbb
xchg
dec
int3
loop
add
in
pop
mov
loop
mov
jmp
fstpt
mov
idivl
cmc
lahf
divb
xor
mov
xchg
lods
stc
lahf
mov
jne
xor
js
dec
sti
clc
insl
sub
xchg
sub
fcoml
leave
dec
data16
and
mov
repz
repz
jns
in
jle
fs
fcmove
xchg
les
loope
add
ljmp
arpl
shrl
mov
int3
cmpsl
out
xchg
pop
insl
ss
ja,pt
pop
xchg
ja
rcl
push
cmp
dec
ja
imull
jp
jo
adc
flds
cmp
add
fwait
imul
mov
insb
jns
shr
clc
popa
cs
aaa
pop
nop
mov
lcall
xlat
dec
sub
cltd
push
test
repnz
xor
mov
fs
cmpsb
dec
clc
fdivl
out
loop
fistpl
push
dec
test
dec
stc
pop
cs
in
lods
movsl
jno
add
xchg
adc
sbb
mov
lds
mov
cmp
in
inc
and
js
scas
int
arpl
jle
mov
mov
outsl
pop
push
fistps
mov
inc
imul
lods
sub
push
xchg
add
fisttpl
sti
jg
fdivrl
and
xchg
in
xchg
loope
xor
pushl
fistpl
mov
les
cmc
jg
pop
loope
fiadds
testl
push
jns
cli
mov
clc
pop
or
jl
leave
rcll
or
adc
mov
dec
hlt
cld
mov
stos
adc
pop
or
scas
cld
dec
movsb
mov
mov
push
xchg
outsb
sbb
mov
fs
sub
imul
jp
pop
mov
push
pop
mov
negb
stc
jmp
inc
jne
xchg
aaa
orl
cmp
int3
shrd
ret
stc
aaa
xor
xchg
push
gs
or
pop
cmp
fs
dec
enter
fs
or
cwtl
cmp
stos
js
jmp
mov
xchg
aas
das
inc
sbb
out
mov
inc
xchg
mov
or
jl
cld
xor
jle
shrl
and
push
mov
xchg
xchg
pop
adc
xchg
jecxz
jno
mov
jae
and
aaa
jno
scas
enter
iret
push
nopl
lds
push
or
popa
test
ds
cmp
jae
je
dec
cmc
pop
pop
xor
sbb
cmp
test
ds
xor
notl
repz
add
sbb
cwtl
sbb
rcrl
fs
lods
fcomps
ffree
int3
push
adc
push
aam
fdivp
cmp
push
fs
jmp
hlt
add
pop
jmp
ja
lcall
and
sub
out
xorl
mov
lahf
and
int
pop
sti
mov
and
mov
inc
les
xchg
out
out
les
lock
dec
inc
popf
or
fadd
mov
fists
int
xchg
and
and
dec
mov
cmc
fwait
adc
push
dec
sahf
xchg
cltd
jae
repz
decl
push
push
fwait
adc
or
cmc
pop
push
sub
cli
jb
dec
in
int3
dec
inc
or
fildll
xor
insl
xor
cmp
gs
jecxz
mov
imul
test
int3
fldt
xorb
jmp
adc
dec
popa
out
jp
push
lahf
add
cld
jns
daa
and
mov
fwait
and
dec
and
lret
lods
shlb
xchg
cli
ficoms
fisubl
fbld
iret
and
push
outsl
movsb
push
jae
dec
sub
int3
out
stos
cmp
call
stos
adc
jp
jns
push
xchg
mov
in
stos
jp
cmpsl
xchg
movsb
bound
cmpsb
mov
lret
imul
dec
ret
dec
and
lcall
add
add
imul
lods
in
fwait
paddusw
lret
outsl
pop
enter
bound
push
in
dec
imull
loop
sbb
pop
mov
mov
mov
jle
jl
gs
enter
loope
adc
out
orl
mov
aas
into
mov
pop
data16
ja
pop
jns
sbb
xlat
aad
das
lret
arpl
push
out
or
jge
add
jns
xchg
sub
std
ljmp
insb
in
fs
fstps
push
pusha
test
cld
in
test
in
jg
iret
sti
inc
outsb
inc
sbb
jns
aaa
movsb
mov
mov
push
jo
dec
pushf
inc
and
mov
stos
out
jo
sbb
test
popf
in
fnstenv
int
outsl
iret
iret
push
cli
dec
idivl
out
push
es
pop
add
lahf
popf
mov
int3
push
add
out
fs
rorl
xchg
pop
inc
pop
jmp
inc
repz
push
divl
mov
mov
mov
dec
push
mov
inc
loope
icebp
or
test
mov
push
gs
sub
xor
xchg
inc
jmp
cmp
xchg
lods
mov
mov
adc
movsl
lds
sahf
xchg
jge
jge
popa
cs
xor
movsb
pop
stos
mov
sbb
out
sbb
and
jge
pop
cmp
fwait
cmp
and
fwait
jle
out
loope
leave
push
mov
fisubrs
xor
sbb
push
xor
jnp
xor
es
repz
out
xchg
shl
movsl
scas
xchg
ds
mov
jb
xlat
adc
push
xchg
dec
mov
stc
or
pop
lods
adc
cmpsb
mov
mov
pop
sbb
dec
jae
movsb
cwtl
mov
adc
scas
pop
jns
adc
hlt
inc
scas
sti
pushf
out
test
sub
aaa
xlat
fmul
push
lods
out
imul
addr16
mov
inc
lret
push
jns
iret
mov
icebp
xchg
mov
adc
pop
pshufw
fcoml
or
inc
mov
test
ret
add
popf
shrl
outsb
mov
push
movsb
popf
in
and
mov
mov
je
mov
lock
imul
add
bound
fbstp
sub
sub
adcl
mov
pop
mov
jl
cwtl
jb
mov
in
lea
jl
ss
push
dec
lock
inc
xchg
std
sbb
pop
mov
clc
or
negb
ss
es
sub
out
into
push
xchg
xchg
sahf
mov
gs
outsb
outsb
ret
lret
fsubs
loope
dec
sti
cmpsb
mov
rcrl
cs
mov
in
rol
adcl
mov
testl
cmpsl
mov
cmp
psubd
pop
lahf
arpl
popa
mov
mov
sub
push
repnz
in
xchg
outsl
movb
cmpsl
xchg
lea
sub
cmp
inc
mov
xchg
sbbl
dec
sub
stc
js
fwait
mov
xchg
add
and
mov
fs
cmpsb
adc
mov
mov
pop
or
push
jae
inc
and
pop
jnp
push
push
cld
das
mov
cld
xor
nop
and
add
ja
inc
or
lods
mov
divb
fimull
inc
xlat
add
pusha
inc
xor
dec
ret
outsb
int3
mov
push
fimull
inc
fsubrl
mov
pop
pop
mov
inc
xchg
cmc
dec
js
inc
inc
mov
mov
dec
leave
xorb
mov
movsb
push
clc
sbb
pop
or
icebp
aam
inc
pushf
push
in
sub
fsubrp
cmp
adc
pop
sbb
addr16
daa
ja
lcall
add
cwtl
xchg
icebp
cmpsb
push
mov
sti
inc
push
jp
inc
adc
xchg
rcl
pop
mov
sub
mov
fcom
jbe
pop
popf
lret
es
cwtl
test
mov
mov
dec
fidivrl
xchg
shll
in
pop
test
adc
lods
icebp
push
lods
mulb
pop
sbb
jb
fsubl
in
pop
mov
negb
or
xchg
imul
rcll
pop
mov
push
jo
and
and
mov
mov
inc
and
add
icebp
inc
push
or
lds
pop
push
mov
mov
jo
aaa
push
mulb
or
insl
mov
mov
sbb
mov
sbb
pop
mov
sub
leave
addr16
in
shlb
push
xchg
sbb
dec
shll
mov
adc
mov
in
rolb
loope
fdivl
iret
sti
mov
outsb
repnz
or
cmp
stos
lds
lret
mov
repnz
or
mov
mov
mov
adc
daa
xor
rcl
xchg
mov
pop
push
scas
xchg
ljmp
jb
ds
sbb
pop
mov
int
sub
insl
xchg
outsl
inc
mov
add
out
int3
cld
push
mov
adc
mov
jl
mov
jo
iret
pop
test
sbb
out
dec
mov
sub
cli
pusha
lods
lcall
stos
outsl
add
rorb
inc
je
jno
pop
mov
mov
push
inc
cmpsb
and
adc
jmp
inc
sahf
dec
in
add
sti
cli
pop
ja
mov
loopne
cs
call
jnp
cmpsb
sbb
push
aas
adc
jns
rolb
popf
mov
ja
sub
les
jp
aaa
lcall
repnz
mov
mov
mov
das
lcall
jo
inc
mov
jo
gs
popf
out
mov
jne
imul
or
pop
and
lds
mov
leave
outsl
pop
stos
or
int
cmpsl
cld
mov
inc
mov
in
lcall
lea
decb
sbb
pop
addr16
xchg
pop
jne
mov
cwtl
sbb
les
or
movsl
out
lret
lcall
push
mov
in
sbbb
xchg
and
sbb
cld
dec
scas
and
in
insb
imul
xor
cld
mov
push
inc
inc
xchg
dec
inc
fs
xor
add
jp
rolb
fdivr
mov
mov
lods
sbb
mov
pop
cmp
inc
cmp
add
lret
pop
lret
jmp
ficoms
cmp
xor
mov
aaa
mov
jmp
mov
inc
ret
negl
imul
imul
mov
stos
stos
push
cmpb
scas
and
cltd
bound
cwtl
dec
shrb
push
adc
add
cmp
jle
sub
inc
jb
shrb
mov
adc
movsl
add
push
loope
outsb
dec
push
int
pop
mov
call
push
into
lods
mov
rorl
bound
ret
stos
loop
cwtl
js
and
sbb
icebp
andl
ret
xor
ljmp
in
jb
pop
or
sbb
mov
jecxz
jecxz
and
lods
repz
stos
dec
lret
mov
pop
adc
sub
in
cmp
mov
cmpb
cltd
aad
sub
jle
pop
jle
je
aam
inc
pop
je
ss
inc
out
add
or
mov
jno
aas
jle
add
out
aad
inc
aas
pop
pop
repz
fadd
jl
in
popf
mov
xor
push
xlat
ret
cmpl
xchg
gs
or
shlb
pop
mov
add
sub
xchg
push
mov
inc
sbb
sarb
shrb
cmp
fsubs
mov
fmull
mov
nop
imul
icebp
mov
add
push
jo
push
outsb
int3
fnstcw
lahf
mov
mov
push
iret
lea
clc
push
lods
adc
mov
cmpsl
ret
jmp
popa
rcrl
in
jle,pt
pushf
mov
sub
test
add
loop
fsubrl
jnp
and
icebp
sub
cltd
inc
pop
fmull
nop
imulb
pusha
repnz
in
sbb
mov
lahf
jle
add
imul
or
cmpb
inc
cmp
jb
xchg
jp
dec
fwait
push
sbb
rcrb
test
out
pushf
vmovshdup
dec
cmp
xor
pop
jg
mov
push
mov
mov
dec
scas
outsb
lcall
sbb
cld
mov
movsl
add
ds
xchg
jae
mov
call
aaa
xchg
mov
and
hlt
dec
outsb
lods
fsubrs
in
cmpsl
addb
push
cwtl
sub
push
daa
lret
je
in
pop
push
and
mov
fldcw
jle
fidivl
pop
ljmp
ds
test
call
push
pop
push
fimuls
ljmp
fadds
mov
pop
arpl
fnstsw
dec
xchg
stos
xchg
jb
mov
in
push
inc
pop
mov
push
cmp
mov
out
add
jmp
lret
fsubrl
xor
xchg
xchg
xchg
ret
inc
ss
push
loop
stos
mov
mov
lcall
leave
cmc
or
test
sahf
cmp
push
dec
sub
pop
push
fsub
fmuls
shll
push
loope
je
mov
icebp
enter
sahf
lock
in
dec
lods
cmc
ja
aaa
mov
ret
hlt
div
jle
fnstenv
mov
and
jnp
xor
and
jmp
mov
xchg
pop
bound
xchg
loopne
inc
lods
andl
int3
out
in
add
mov
mov
stc
push
cmc
das
and
fs
jae
dec
stc
push
cmpsb
or
and
into
inc
movsb
adc
or
iret
sbb
popa
pushf
insl
fwait
in
and
loop
mov
and
pop
fldenv
fldl
mov
nop
leave
lahf
nop
je
mov
ja
and
fwait
int
cmp
mov
rol
sti
movsl
inc
in
je
cmpsb
mov
cmp
sbbl
movsl
pushf
icebp
or
test
sub
dec
jns
mov
cmp
test
out
int
sbb
xor
mov
arpl
inc
stc
in
sub
mov
pushf
adc
cmpsl
repnz
ljmp
dec
fsubrs
cmp
pushf
movsb
scas
ret
iret
in
hlt
dec
mov
and
xchg
fldl
cmp
std
gs
pushf
and
out
jecxz
out
push
xchg
mov
enter
mov
int
mov
xchg
mov
lahf
negb
mov
fiaddl
jg
cmp
mov
aam
fs
pusha
repz
pop
jae
add
jns
cmp
jae
cmp
aam
jge
adc
sub
nop
sub
mov
inc
jnp
loop
lahf
lahf
xchg
xor
cli
jo
sub
mov
test
out
test
push
mov
mov
mov
out
mov
xchg
add
adc
daa
mov
fxch
xchg
push
out
fcoms
jns
cmp
in
popa
repnz
enter
xchg
mov
add
into
andl
pusha
clc
sub
ret
stos
cmp
sub
into
mov
imul
push
fadd
push
sbb
push
imul
ss
shlb
movsb
fcomps
push
sub
cmp
arpl
adc
ljmp
out
cmc
aaa
fmul
pop
dec
lret
pop
lea
mov
les
jno
dec
jecxz
insb
je
cld
stc
sbb
shlb
fmull
fcoml
test
mov
xchg
xchg
dec
mov
add
xchg
imul
sbbl
sbb
ret
sbbb
xchg
push
mov
sbbl
into
sbb
push
inc
ja
mov
pop
add
or
imul
push
testb
xor
ret
mov
iret
rcrl
xchg
pop
sub
js
xor
lret
repz
int3
lcall
xor
push
sub
addb
lods
test
aam
add
fs
xchg
fidivrs
mov
push
xor
cmp
dec
jae
add
mov
and
mov
add
jb
fbld
and
test
insl
jmp
or
mull
mov
ficompl
inc
inc
mov
xlat
jp,pt
cmp
daa
cmp
test
mov
ret
ret
cmpsb
add
gs
mov
mov
sahf
mov
mov
test
aad
inc
mov
pop
and
inc
add
push
pop
arpl
aam
icebp
mov
add
adc
sbbl
aam
ret
jp
jnp
mov
xorl
sbb
call
jmp
cmpsl
inc
mov
push
pop
rcll
leave
xor
add
fistps
pop
stos
dec
shlb
cmp
scas
int3
pop
lcall
lods
and
fnstsw
lret
popa
fmuls
adc
mov
pop
out
sbb
sti
inc
adc
add
aaa
jnp
je
mov
add
mov
fcmovnb
lea
jmp
lea
stos
mov
push
mov
pop
xchg
push
or
xchg
push
aas
jp
rcl
pop
cld
shl
cmp
lahf
jb
adc
xchg
fdiv
mov
cmc
mov
lret
dec
movsb
ror
mov
js
dec
sbb
push
lret
cmp
dec
lods
jle
jbe
pushf
nop
sarl
jl
xchg
and
push
scas
sbb
cld
mov
push
add
sahf
mov
sarl
pop
ss
cmpsl
int
jl
in
popa
fistps
xor
iret
xchg
cli
lcall
pop
mov
dec
pop
push
scas
or
and
shlb
test
shll
pop
pop
pop
and
and
out
out
xchg
scas
in
sbb
jle
jno
jmp
subl
mov
scas
jmp
test
int3
mov
pop
cmp
test
inc
xlat
js
jb
mov
mov
xchg
mov
sahf
cwtl
ds
pop
fbstp
inc
in
loopne
sub
xlat
shr
sub
sub
fsubrs
or
dec
add
xor
subb
stos
test
cmp
sbb
sub
mov
mov
mov
jg
mov
xchg
ljmp
push
pop
aam
ficomps
and
aas
cld
push
mov
je
insl
push
sub
ret
push
fidivrs
mov
test
mov
pop
add
jecxz
mov
push
shll
jle
in
pop
cmp
xchg
and
rcll
aam
inc
lods
cvttps2pi
adc
pop
jmp
aad
dec
sbb
cwtl
push
jnp
not
xchg
scas
and
int3
xchg
insl
je
sbb
inc
pushf
in
sarb
mov
mov
iret
cwtl
or
and
fs
sbb
cmpsl
mov
ljmp
cmp
mov
mov
jle
fmulp
push
xor
stos
mov
loop
sub
cmp
add
scas
cmp
cwtl
add
fisubrl
js
es
jne
dec
lods
sti
dec
ljmp
xchg
jne
add
xchg
mov
iret
jnp
pop
add
cmp
daa
arpl
jg
add
movsb
or
fwait
jg
lock
mov
mov
aad
mov
dec
lcall
cmp
jle
negb
ja
std
jno
outsl
test
push
inc
pusha
outsl
popa
pop
and
repz
js
jmp
push
push
xchg
loope
mov
push
test
rcrb
jle
adc
jle,pn
adc
jp
pop
fists
lret
inc
lods
jp
mov
sbb
mov
iret
jbe
movsl
arpl
call
sub
ficomps
mov
adc
xor
fwait
out
xchg
jns
mov
movsb
pop
shrb
push
cmp
clc
loopne
mov
push
insl
and
adc
outsb
pop
sub
pop
mov
sbb
push
into
add
data16
or
cli
ljmp
inc
sub
ljmp
inc
inc
outsl
fbld
mov
push
pop
xor
les
inc
push
jns
xchg
push
cmpsb
bound
arpl
cmpsl
pushf
lret
mov
in
cmp
pop
inc
pop
sub
clc
jle
repz
push
repnz
pop
scas
mov
push
mov
sub
dec
movsb
test
sbb
dec
cmpsl
xor
jne
mov
xchg
sbb
push
repz
pusha
clc
xchg
lahf
cmp
dec
pop
dec
mov
jecxz
mov
stos
aad
jp
iret
pop
addr16
in
arpl
adc
mov
orl
lahf
loope
les
test
push
cmpsl
mov
out
mov
mov
cmp
out
and
xor
adc
xchg
xor
or
lret
xor
inc
jle
das
lods
mov
dec
loop
stos
movsb
cmp
xchg
push
mov
xor
cmp
adc
pop
add
scas
inc
jne
xchg
jg
mov
push
imul
add
neg
jecxz
push
cmp
cmc
mov
addr16
mov
push
rol
hlt
sub
pop
mov
cld
mov
adc
hlt
mov
aaa
outsb
das
subb
jbe
sub
int
ret
fwait
add
or
pushf
imul
mov
mov
fiadds
ja
fsubr
imul
mov
popf
cmp
push
push
mov
mov
pushf
fadds
nopl
jmp
lcall
sub
stos
ret
leave
ficoml
lods
sbb
mov
data16
mov
ret
and
pushw
int
dec
cmp
sbb
lret
outsb
cmp
add
jg
loope
push
xorb
fwait
push
filds
ret
jb
sbb
rorb
repnz
xchg
add
and
xor
dec
mov
push
pop
je
outsl
or
lock
mov
xor
and
xchg
in
lods
mov
pop
icebp
push
push
inc
xor
dec
lods
mov
lret
insb
jnp
mov
jns
jle
mov
sub
shl
adc
inc
jb
pop
jl
test
sub
or
xlat
cmpsb
mov
adc
jmp
push
pushl
iret
movsb
lret
add
xchg
xor
xchg
jmp
mov
iret
ret
xchg
orl
sub
push
outsb
cwtl
dec
arpl
sub
mov
repz
das
bound
ja
cmc
adc
aas
cwtl
mov
cmp
jnp
adc
cmpsb
adc
mov
lret
cmp
ja
ret
aad
pusha
por
icebp
add
shr
sbb
adc
jnp
cld
adc
jle
xor
mov
adc
insl
sti
jmp
jne
mov
push
mov
pop
pop
scas
mov
gs
pop
add
jb
sti
scas
sbb
subl
lods
push
cltd
arpl
out
jg
push
loop
js
or
lods
outsl
dec
mov
inc
dec
sub
aam
inc
out
out
lret
scas
xchg
pushf
ds
mov
cmc
xchg
sub
sub
adc
push
scas
in
and
mov
rcrl
orb
fst
jbe
inc
dec
rorb
and
sbb
inc
push
fldt
xlat
pop
cmp
int
shr
cmp
mov
and
stos
adc
outsb
or
pop
pop
or
sub
xchg
ss
mov
adc
add
mov
jae
mov
lret
nop
add
mov
repz
clc
into
std
dec
push
add
sub
xchg
inc
push
dec
test
outsb
jmp
jg
and
scas
das
lret
pop
sbb
ds
testl
stos
or
mov
xor
ja
pop
jecxz
inc
and
lods
in
mul
sbb
jno
sahf
into
xlat
cmp
lock
jno
aam
out
stos
cmpsb
adc
leave
fisttpll
inc
xor
pop
mov
loop
push
pop
mov
ror
pop
and
int3
pop
addr16
adc
or
popa
mov
lods
std
sub
pop
stc
in
inc
test
inc
sub
addr16
insb
push
xchg
sbb
rcrb
in
xchg
xchg
stos
sti
push
int3
xchg
repz
scas
orl
dec
test
out
aad
loope
xchg
mov
mov
push
out
and
lret
sbb
mov
iret
vmovupd
ja
sbb
pop
mov
pop
pop
lds
add
ret
cmp
sbb
arpl
sbb
das
int
and
cmp
push
mov
mov
fisubrl
dec
jno
cmpb
out
sub
push
jg
call
imul
mov
add
scas
icebp
into
pop
and
push
and
push
mov
jne
test
roll
outsb
pusha
pop
fsubrp
movsl
rolb
imul
outsb
popa
dec
pushf
mov
movsb
in
stos
mov
xchg
adc
cmp
mov
adc
lock
gs
insl
in
jle
mov
mov
cmc
jp
ds
roll
jmp
jne
xchg
cmp
inc
jb
mov
xorb
xor
sbb
dec
bound
mov
fcmovb
mov
int
and
fucomi
test
fstl
dec
sub
and
decb
popa
dec
mov
dec
push
roll
sahf
lds
mov
ljmp
movsb
xor
xchg
popf
or
dec
add
divl
push
mov
push
push
int3
push
dec
cld
jg
xor
in
inc
cmp
inc
test
aaa
cmp
test
or
jbe
test
stos
mov
jge
sub
imul
mov
cmp
and
inc
add
push
pop
ljmp
inc
jmp
jp
lret
clc
mov
movsl
rcrb
enter
enter
sbb
xchg
adc
or
pop
xor
rorl
lock
xchg
dec
imul
scas
push
dec
movsl
jb
call
mov
inc
mov
fwait
pop
insl
pop
jne
or
mov
ret
bound
mov
cld
je
mov
ja
sbb
ljmp
sub
lret
es
mov
pop
in
std
ja
xchg
mov
xchg
cli
insl
fs
ja
push
out
popf
lea
inc
in
and
mov
cmp
sbb
xchg
iret
div
mov
xchg
incl
sarl
cmp
aad
lds
mov
xchg
inc
std
sti
cmp
les
adcl
xor
mov
mov
adc
mov
jo
cmp
in
mov
lcall
insb
cmpsl
repnz
inc
js
mov
jno
mov
cwtl
gs
sti
ret
mov
pop
gs
jp
lahf
mov
icebp
or
pop
xchg
popa
pusha
fcomps
out
shl
cwtl
pop
dec
pop
fcmovnb
xor
sbb
loop,pn
cs
mov
out
cld
subb
dec
xor
cmc
outsl
jle
lods
mov
and
jg
mull
aaa
pushf
fcom
cld
lret
lock
jne
std
addr16
cmp
mov
test
fwait
in
in
scas
cwtl
inc
cs
adcl
popa
mov
sub
shll
pop
sub
stos
mov
fisttpll
xor
cs
push
add
mov
lds
cmp
mov
inc
arpl
cli
ljmp
test
jns
mov
push
adc
xor
xorl
imul
xor
dec
and
mov
jnp
fwait
push
popa
icebp
out
xchg
lret
fucomi
fadds
fcomp
sbb
cmp
push
pop
out
xchg
mov
xor
je
cld
loope
xchg
and
out
pushw
sub
lods
sbb
cld
mov
cmp
test
dec
add
jae
xchg
lcall
lea
jb
mov
shl
stos
dec
mov
cmp
jno
push
pop
test
sti
mov
and
orb
add
sub
sbb
shll
xlat
mov
int3
xor
sub
mov
mov
lret
pushf
sti
imul
sub
bswap
shrb
inc
aaa
fisubrl
and
jo
cmc
adc
xor
repnz
push
inc
jle
outsl
icebp
in
stos
sti
and
mov
stos
int
insb
aas
in
add
jbe
pushf
out
push
add
or
mov
daa
cltd
dec
movsl
xor
xchg
inc
push
inc
xchg
xor
sub
movsb
js
ret
and
iret
cmp
mov
jnp
mov
or
inc
pop
je
mov
das
loop
xor
cmp
cmp
xor
sar
inc
hlt
das
dec
pop
sub
ret
add
int3
leave
fisubrl
cmc
leave
out
cmc
scas
in
adc
inc
pop
imul
inc
in
repz
test
pop
jae
popl
lahf
daa
popa
fdivrs
hlt
push
jnp
or
jns
rolb
popa
std
loop
jns
or
sbb
xchg
add
sbb
je
xor
in
out
test
dec
test
mov
clc
shlb
in
dec
jecxz
mov
out
push
cmp
clc
mov
lds
pop
push
aas
fistpl
pop
enter
sbb
test
sti
push
rorl
in
loope
xchg
xchg
push
lea
xchg
outsl
pop
dec
jbe
cmp
bound
fwait
mov
test
jbe
jmp
and
inc
clc
jne
add
das
sahf
imul
pusha
outsl
or
jp
data16
push
outsb
push
jge
mov
or
push
lret
std
in
pop
repz
jae
cwtl
cs
xchg
outsl
xchg
adc
cmpsl
and
fstpt
cmpsl
or
push
or
or
stos
fcom
inc
cmp
je
pop
xor
in
out
jge
push
pusha
and
jl
lahf
pop
dec
pop
stos
aad
aaa
push
cmpsb
pusha
sub
mov
lock
movsb
test
movsb
outsb
lret
cmp
dec
cmp
hlt
setae
or
push
cmp
into
mov
inc
fdivr
insl
and
xor
and
jp
and
xor
jg
dec
mov
mov
aad
dec
push
in
outsl
rcrl
enter
mov
pop
adc
jmp
jae
popf
mov
add
mov
