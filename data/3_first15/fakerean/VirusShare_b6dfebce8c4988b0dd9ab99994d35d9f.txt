sbb
add
mov
mov
xor
pop
xchg
or
shlb
xor
sbb
adcb
lds
aad
and
or
dec
mov
movsb
pop
add
lods
mov
jo
mov
push
test
mov
rol
add
inc
mov
cmp
xor
jnp
inc
xor
inc
mov
divl
mov
inc
pusha
adc
or
pop
daa
enter
sbb
leave
aad
movsl
loop
mov
loope
lret
lock
sbb
mov
les
adc
push
or
or
cmp
js
mov
lods
clc
popa
lsl
mov
nop
push
popl
sub
mov
push
outsb
jb
dec
test
lahf
mov
dec
mov
cmp
loopne
pushf
aas
add
lahf
repnz
push
pop
push
sti
int
bnd
lock
mov
orb
mul
js
jp
rcr
loope
les
fiadds
dec
lock
rclb
stos
test
in
inc
or
je
add
fdivl
jnp
add
sarl
fcmovne
ljmp
insl
jmp
xchg
and
pop
cmp
and
sbb
mov
ja
xchg
xor
mov
movsl
insb
jno
js
inc
cmp
scas
addr16
orb
repnz
into
jge
icebp
jp
fists
jp
xchg
ja
mov
cmpsb
int3
mov
jbe
inc
pop
mov
aam
dec
daa
push
leave
mov
sahf
mov
xorb
jecxz
test
mov
mov
mov
push
jae
pusha
rorl
mov
push
ror
cmp
dec
inc
sti
ret
outsl
test
or
jl
jo
push
push
lcall
push
adc
ffreep
jl
adc
mov
sarl
lds
mov
lcall
jle
jmp
inc
dec
mov
add
stos
loope
ror
adc
repnz
cli
out
jnp
add
popa
jl
rcrl
ljmp
in
repz
in
inc
cmp
sub
xchg
mov
jne
add
hlt
bound
mov
roll
shl
push
cld
xchg
or
and
xchg
movsl
dec
add
insl
test
push
ljmp
push
scas
and
ret
out
pop
addr16
ljmp
inc
das
es
xor
push
cwtl
and
fmuls
js
jmp
outsl
loopne
je
cmp
and
mov
call
pop
out
mov
cmp
mov
pop
fbstp
xchg
dec
sarl
orl
dec
in
jnp
adcl
mov
fnstenv
mov
mov
cmp
xchg
push
and
xor
in
cmp
loope
add
pop
stc
dec
incb
jle
sbb
popa
test
push
test
and
les
pusha
dec
xor
mov
call
daa
and
xor
mov
into
mov
jp
xor
sti
push
adc
adc
pop
aam
shll
lcall
dec
pop
ss
out
fbld
xchg
push
subb
mov
pop
jbe
shrb
pop
imulb
cmp
dec
mov
mov
mov
les
cmpsb
mov
adc
sbb
dec
xor
mov
fadds
mov
pop
push
xorl
xchg
dec
pop
les
fdivs
gs
jo
cmpsl
mov
inc
jmp
stos
addr16
aaa
jge
pop
es
xchg
mov
test
adc
add
mov
loopne
cwtl
fisttps
nop
daa
push
jb
cmp
lea
das
lret
pop
fxch
cmpsb
jmp
push
jbe
cld
rcrb
and
lret
mov
inc
jo
lret
mov
fs
adc
jae
jge
mov
mov
mov
fiaddl
sbbl
hlt
lahf
leave
push
andl
negb
fistpl
pusha
mov
mov
xchg
stos
jl
xchg
in
pusha
hlt
pop
pop
test
xchg
dec
les
cltd
adc
or
mov
push
je
movsb
jl
dec
stos
add
das
out
ja
pop
aaa
mov
and
cld
sbbl
xchg
mov
lret
rolb
push
mov
repnz
sti
addr16
stc
sti
loop
cmp
push
inc
icebp
arpl
jp
pop
test
arpl
jns,pn
cld
aad
push
inc
push
mov
jmp
push
mov
rclb
adc
popa
movsl
sub
es
test
insl
rcrl
ret
int3
dec
cs
mov
mov
push
dec
fnsave
dec
outsl
mov
daa
add
and
pop
pushf
loopne
sti
sbb
mov
imul
add
mov
lods
or
nop
movb
pusha
and
out
push
inc
xchg
mov
dec
fisubrs
in
sub
jg
xchg
mov
mov
mov
fwait
gs
repnz
inc
loop
loopne
cmpb
adc
cmpsl
fidivrl
test
cmpsb
jo
cmp
fstpl
jae
xchg
insl
adc
popf
sbb
data16
adc
adcb
mov
in
cmp
jno
in
loop
pop
mov
adcb
nop
sahf
pusha
cmpsl
stc
mov
iret
xchg
xor
push
imul
cmc
outsb
ror
mov
test
cltd
sub
aaa
test
dec
ret
jns
push
add
or
xchg
jb
sbbl
enter
fs
fs
jp
push
jne
xor
cld
mov
xchg
adc
pop
outsl
test
in
lods
lahf
call
std
cli
int3
xchg
jl
mov
pop
fistl
js
imul
and
xchg
mov
dec
push
xlat
sbb
mov
and
sahf
dec
enter
icebp
inc
xchg
push
imul
push
mov
test
lret
pop
or
jp
xor
out
bswap
test
scas
cmpsb
or
inc
jecxz
lods
xchg
clc
or
mov
js
add
notb
cmc
mov
je
xor
pop
add
shlb
lods
mov
mov
fstl
inc
cmp
fcomps
mov
jb
insb
fs
mov
jbe
loop
shrb
mov
fsubrs
adc
add
push
leave
mov
scas
jge
push
bound
mov
out
cmp
dec
sbb
jl
push
popa
mov
jl
xor
xchg
in
inc
add
mov
push
push
adc
out
cs
xorb
stos
popa
push
imul
test
jecxz
inc
adc
xchg
int
push
icebp
xchg
xchg
jg
push
xor
daa
adc
stc
in
push
mov
pop
dec
cld
not
fmulp
or
inc
inc
loop
dec
in
cltd
cmp
fnstsw
repz
lret
out
sub
or
ret
ss
stc
xchg
xor
pop
scas
mov
and
inc
fiadds
daa
xchg
pop
inc
lcall
data16
pop
int3
dec
loopne
into
mov
push
cmp
loope
cmc
es
popa
adc
sub
cmp
xor
mov
ss
lods
inc
cmp
add
mov
cwtl
and
pushf
sgdtl
in
mov
jp
int
jg
mov
add
popf
jne
out
dec
iret
push
sarl
mov
fwait
out
xor
mov
testl
jne
stc
mov
xchg
push
es
out
and
adc
mov
cmp
inc
jbe
push
pop
mov
test
jle
arpl
mov
sbb
push
mov
cli
pushf
mov
dec
jge
inc
add
cmp
lcall
pop
ret
jb
pushf
lret
adc
mov
mov
in
imul
add
cmp
pop
mov
push
jo
popa
pop
cmp
scas
pop
insb
and
sarb
out
lcall
mov
int3
dec
insl
mov
out
icebp
loop
icebp
or
add
adcl
and
in
jns
scas
jl
mov
leave
in
sub
mov
aaa
or
push
push
ja
scas
push
gs
stc
xchg
pop
or
add
cli
xor
jne
je
popl
jle
push
aam
pop
mov
push
loopne
cld
inc
xor
cwtl
ret
movsb
es
jge
ljmp
sbb
push
lret
pop
cwtl
mov
ret
mov
pushf
dec
pop
popf
or
sbb
mov
in
push
hlt
lahf
xchg
or
cmc
je
nop
lret
nop
xchg
lcall
test
jmp
test
jae
sub
add
fcomps
dec
bound
xor
lcall
orb
push
push
xor
xorb
and
ss
pop
xchg
das
mov
mov
sub
mov
xor
jne
and
jns
ds
and
sub
cmp
xchg
aaa
push
mov
cli
mov
jmp
cmpsl
pop
xchg
mov
push
aad
and
sbb
fsubrp
repnz
into
pop
movsl
push
inc
lcall
andb
dec
add
jmp
sarl
jl
pop
jle
and
ljmp
dec
push
lods
push
pop
and
ds
push
sbb
outsl
clc
pop
lcall
int
and
inc
mov
out
push
sub
adc
sub
mov
je
or
mov
jp
add
popa
sub
mov
add
lret
inc
adc
lds
mov
or
mov
xor
push
cld
addb
mov
cmc
jecxz
fxch
dec
inc
push
mov
into
jb
lods
xor
andl
sbb
xchg
test
push
cmp
mov
inc
cltd
xchg
mov
int
adc
sub
push
push
outsl
jns
or
pushf
fcompl
stos
xor
or
mov
stos
insb
popa
jne
jle
xchg
xchg
cmpsl
clc
jne
pop
fisubs
sbb
fs
xor
movsb
mov
aas
xchg
lods
in
fwait
and
call
add
movsl
ret
lods
rcr
sbb
inc
mov
mov
jne
test
stos
fmull
dec
dec
mov
dec
mulb
mov
sbb
cmpsl
dec
int
js
adc
int3
stos
int3
xchg
sahf
jmp
movsb
push
cmp
imul
popw
cmpsb
jbe
lcall
inc
jmp
test
sbbl
pop
push
clc
xchg
outsb
clc
sahf
jle
fdivrl
ljmp
ljmp
inc
rep
movsl
sub
mov
dec
cld
xchg
lods
push
in
push
add
jle
daa
inc
ret
push
aam
cli
fadd
inc
in
flds
loopne
xor
fwait
jae
mov
fcomps
inc
daa
push
mov
and
lods
cmp
sbb
lret
jle
loop
ret
fbld
xor
fnstenv
aas
dec
mov
sahf
adc
fdiv
push
imul
jg
insl
cli
mov
rcr
or
dec
mov
or
sub
xor
test
dec
sbb
in
mov
mov
aas
pop
fstpl
dec
stos
and
lds
movsl
push
push
arpl
dec
aam
sub
xor
inc
push
xchg
loope
enter
cmp
mov
mov
icebp
mov
jne
push
or
jg
jno
xor
mov
mull
cltd
out
sti
xlat
adc
or
gs
and
pop
add
mov
mov
adc
repnz
hlt
loopne
pop
jb
xchg
jmp
psadbw
cmp
adc
mov
clc
pop
gs
and
push
mov
dec
jmp
mov
xor
or
mov
sub
or
fstpl
xor
or
inc
shlb
mov
xchg
sbb
ret
cmp
sub
call
out
sub
mov
xor
pop
aas
xor
pop
std
and
or
stos
pop
pushw
mov
jg
rolb
lods
cmpsb
inc
sbb
adc
jp
test
scas
fildl
push
mov
inc
in
jns
fistpll
mov
out
movsl
mov
push
bound
aas
adc
lcall
imul
mov
fisttps
andb
cmpsb
push
cmc
sbb
shrl
stos
mov
adc
fdivs
add
dec
icebp
mov
faddl
data16
test
arpl
and
out
aaa
mov
xor
mov
mov
cltd
xchg
cli
cmpsl
popf
xchg
inc
iret
xchg
and
jae
inc
int
push
sbb
lods
push
cltd
inc
xor
push
icebp
gs
jns
mov
push
divb
cmp
fldt
xchg
lods
inc
add
mov
dec
add
cli
cwtl
push
cld
xor
lods
inc
rorl
ljmp
jmp
mov
fs
adc
clc
dec
inc
pop
xorl
call
or
aad
insb
test
mov
test
aad
mov
xlat
std
fnstenv
fstp
into
test
mov
ss
or
or
sti
xor
xchg
mov
sub
adc
jno
lret
mov
loope
jmp
mov
mov
shl
cmpsb
push
jo
leave
les
das
mov
sahf
pop
mov
imul
pop
xchg
jae
cmp
jmp
mov
mov
mov
cs
dec
mov
mov
clc
xchg
xor
mov
enter
mov
out
mov
fists
cs
xchg
sub
and
xchg
mov
xchg
test
into
inc
jp,pt
sbb
cmpsl
and
adc
xor
dec
mov
jae
or
mov
clc
leave
mov
push
sbb
jmp
sub
mov
cmp
jbe
add
add
loop
lret
rol
mov
cs
sbb
sbb
dec
add
ja
insb
rcr
lret
cld
dec
push
outsb
cmc
mov
ret
add
mov
add
jno
orb
test
outsb
call
jle
lock
mov
mov
mov
sbb
les
fimull
dec
insl
jle
pop
and
repnz
nop
es
out
xorb
mov
test
mov
rcrl
dec
push
xchg
xlat
ds
mov
mov
xor
test
mov
movl
cmp
in
cmc
lcall
or
hlt
insl
sub
outsb
scas
push
push
cmc
cmpsb
cmc
cwtl
repz
fwait
add
mov
jne
bound
xchg
in
lea
mov
in
fcoms
mov
inc
sahf
loope
or
aas
xor
xor
in
int3
mov
les
push
cltd
sub
jb
add
nop
cltd
pop
in
jb
loop
cmpsb
mov
push
mov
pop
xor
movsl
xchg
mov
inc
lahf
daa
out
scas
push
adc
aas
jecxz
stos
xchg
push
das
cmp
scas
cmpsb
fisubl
ljmp
ljmp
insb
mov
or
lods
and
mov
scas
cmp
xchg
xor
mov
loope
movsl
in
inc
std
mov
xor
mov
sub
loopne
inc
and
mov
mov
ds
aad
stos
test
dec
xchg
add
loopne
testb
sbb
sarb
sub
fimuls
jne
push
test
push
sbb
cmpsb
fucom
sbb
cs
mov
cwtl
sbb
scas
push
dec
lahf
stc
xor
das
ja
or
sbb
inc
sti
pop
pop
pop
and
inc
mov
pushf
pushf
rorb
adc
cmp
jae
gs
mov
loopne
add
pop
pop
cmpsl
data16
repnz
cmp
pop
lret
jno
in
adc
lock
dec
in
xchg
mov
fs
cmp
or
inc
cmp
mov
testb
popf
in
test
movmskps
mov
adc
insb
std
push
add
int3
out
arpl
cmp
stos
mov
add
stc
push
fwait
cmp
add
outsb
add
shlb
dec
adc
pop
fstl
test
shrb
cli
rorb
pop
cmp
nop
dec
and
fldcw
in
dec
lock
xor
sub
leave
lret
aaa
dec
mov
cmp
push
jg
and
into
mov
sbb
cmp
adc
ret
pop
mov
aad
dec
push
ljmp
push
mov
push
aas
ljmp
scas
ja
scas
push
popf
push
dec
push
jg
inc
inc
lret
or
rclb
mov
das
mov
test
dec
pop
das
jl
stc
add
ljmp
mov
push
insl
mov
in
fisubrs
xchg
fdivl
cli
push
cmp
cs
lahf
mov
xorl
repz
jne
imul
jle
mov
cmp
lds
mov
jb
sbb
dec
jnp
xchg
adc
xor
pusha
lahf
xchg
push
xchg
outsl
xchg
aas
fstpt
and
testb
jns
insl
mov
std
aad
loopne
mov
push
popa
test
fsubs
lock
jecxz
mov
jg
ds
scas
mov
mov
xchg
xchg
push
mov
shll
sub
sbb
jp
repnz
jb
xchg
out
cmp
and
popf
and
dec
push
ljmp
lret
jmp
ret
cmp
pop
lea
lret
inc
std
fistl
mov
out
cs
int
or
les
fiaddl
addb
pop
rolb
sarb
out
stos
fstpl
loope
mov
pop
loope
mov
std
imul
out
cmp
out
xor
sbb
push
and
inc
lock
push
xchg
mov
inc
xor
jno
loopne
sub
add
mull
cmp
mov
mov
cmp
push
fucomp
subl
out
fdivl
pop
loope
lods
ds
adc
lret
add
dec
aas
cmp
mov
stos
jmp
mov
add
decl
pop
gs
cwtl
mov
cmp
lret
ret
andl
pop
jp
and
cld
cmp
dec
cs
rcrl
aaa
mov
lea
mov
and
lcall
stos
test
mov
pop
scas
test
xor
and
ss
loop
lret
mov
lret
mov
stc
inc
jmp
sbb
arpl
daa
sbb
and
sub
rcr
xchg
aad
jnp
hlt
mov
lods
stos
xor
mov
js
js
cmp
sbb
das
sbb
inc
insl
ss
fcmovnbe
jl
pop
ljmp
imul
dec
mov
inc
shrb
push
sbb
add
adc
sahf
es
pop
test
pushf
cs
sbb
or
or
dec
imul
stc
dec
call
pop
aad
jne
sub
mov
inc
xor
out
fld
push
daa
repnz
lret
fistps
inc
cmp
loop
push
inc
lret
stos
and
fimuls
cmp
repz
cli
pop
or
xchg
mov
mov
cmpsb
movsl
mov
push
jo
incb
into
xor
add
dec
clc
dec
sub
ljmp
lahf
popf
jg
dec
adc
and
setb
sbb
rorl
popf
dec
or
jb
sbb
xchg
addr16
sub
sub
test
sbb
and
sub
jae
mov
scas
xlat
in
negb
fs
jae
mov
std
or
or
or
in
ficoms
mov
inc
popf
push
jmp
lock
ss
jae
hlt
mov
or
jbe
cwtl
loope
idivl
jne
shlb
add
xlat
in
fiaddl
fcom
jne
add
dec
mov
adc
mov
mov
pushf
popa
lcall
inc
int
push
sbb
jno
insl
insl
pusha
and
fsts
addr16
sbbb
xchg
mov
out
hlt
int3
lcall
pop
and
aaa
adc
jg
mov
inc
pusha
mov
lahf
mov
dec
iret
xchg
mov
shlb
lock
enter
add
jecxz
scas
in
pop
outsb
push
out
mov
int
or
dec
aam
scas
in
jae
pop
inc
insl
inc
lret
mov
leave
xchg
loop
fwait
lret
inc
and
push
aam
lret
cs
pop
popa
add
or
mov
iret
and
push
ficompl
inc
ja
clc
dec
sbb
loope
std
cwtl
pop
xchg
jecxz
fdiv
outsb
inc
and
in
test
sub
push
shrl
shl
popf
lea
insl
pushf
aas
mov
or
lahf
push
out
sbb
idivb
fisttpll
jp
xchg
mov
dec
sub
mov
mov
out
mov
mov
mov
jae
imul
push
inc
mov
movsl
lds
cmp
fstps
inc
and
mov
out
cmpsb
daa
aas
xlat
test
scas
out
xchg
out
sbbl
mov
das
adc
incl
xchg
or
pusha
cltd
in
imul
pop
push
mov
int3
push
add
or
xor
insb
iret
lahf
cmp
dec
inc
mov
pusha
mov
loop
or
out
xchg
or
or
fnstenv
and
or
xor
push
repnz
xchg
add
jo
pusha
push
in
sub
add
xor
jl
aad
ljmp
mov
lock
adc
int3
mov
push
in
lahf
cltd
adc
add
and
jns
or
std
addl
lods
sub
fwait
mov
mov
mov
or
mov
xor
xor
xor
cltd
sbb
jmp
bound
lods
sub
cmp
xor
sti
cmp
ret
xor
addr16
sar
incb
inc
add
das
shl
jmp
mov
adc
cmp
or
cmp
sti
xchg
mov
repz
lock
in
pop
mov
sub
cmp
test
mulb
outsl
push
iret
aaa
arpl
cli
add
lods
stos
or
mov
shrb
repnz
and
fldl
jle
les
in
lods
push
pop
shrb
addr16
fsubrl
push
pusha
add
pop
adc
imul
pop
into
cmp
stc
xor
pop
out
jns
ljmp
cld
js
and
popf
cmc
push
push
add
in
mov
push
test
nop
jne
cmp
cmpsl
mov
insl
stc
gs
popa
int3
iret
sarl
pusha
jge
xchg
mov
out
push
cs
mov
inc
inc
and
add
jnp
jbe
cmpsb
out
je
xchg
or
ljmp
xchg
addr16
test
arpl
and
mov
sub
mov
mov
fistpll
nop
popf
enter
rolb
das
addr16
test
sti
jle
popa
push
insl
pop
adc
mov
jno
cld
push
fs
xor
in
mov
cmc
mov
push
fisubl
ds
ret
jne
clc
mov
shl
jno
movsb
jo
inc
jns
xor
lea
or
cmp
fstpt
sbb
mov
ficoms
sbb
int3
daa
sbb
xchg
jne
sub
decb
fwait
mov
movsb
mov
test
sub
cmp
je
repnz
int3
mov
xchg
add
pop
inc
in
cld
inc
add
cmc
add
int
mov
dec
outsb
ljmp
inc
scas
pop
mov
inc
xchg
popl
cltd
or
push
sahf
cwtl
xchg
xor
push
mov
testl
dec
jmp
inc
test
jnp
in
into
and
aad
dec
jae
movsl
out
and
pop
enter
xchg
pop
pop
mov
dec
and
fisubrs
aad
icebp
jecxz
pop
int
call
call
push
mov
movsl
clc
adc
cltd
testl
inc
or
enter
test
lock
push
dec
pushf
and
sub
jo
dec
out
push
pop
fistps
nop
adcb
cs
ljmp
dec
mov
adc
repnz
push
pop
or
push
fdivs
adc
push
imul
shrd
jb
dec
inc
inc
and
mov
push
and
cmpsb
data16
jecxz
push
fistpll
cmp
push
jno
mov
daa
test
cltd
mov
xchg
cmc
lcall
mov
int3
cltd
dec
bound
pop
imul
dec
mov
inc
das
mov
out
lock
fldt
pop
add
stc
lret
mov
les
dec
dec
fwait
jne
jae
in
inc
xchg
int
fildl
jmp
test
jbe
sub
lcall
xchg
mov
sbb
pop
pop
pop
mov
push
add
repz
ret
mov
gs
cs
sub
rcl
and
leave
jnp
stos
jbe
lds
fsubrp
cmp
mov
pop
jge
in
js
leave
cmp
mov
sbb
adcl
jae
jns
ds
gs
jle
fcom
sahf
jge
mov
fwait
jp
icebp
out
jne
push
jge
lcall
rcr
dec
cli
push
mov
xchg
dec
add
sub
cmc
inc
loope
pop
scas
fs
inc
and
fstpl
outsb
scas
ret
inc
pop
or
ret
ficompl
cmp
push
cmc
mov
mov
repz
lea
cmp
mov
cmpsb
stc
leave
add
and
sbb
cmpsb
sbb
decb
adc
jnp
sub
dec
jbe
sbb
push
ja
imul
cmp
ffreep
arpl
lret
test
pushf
ret
add
insb
jp
jae
inc
ret
jno
mov
aam
pop
xor
ficoml
mov
push
xchg
add
mov
mov
andl
push
daa
shl
push
add
int3
xchg
mov
mov
jb
add
dec
adc
adc
scas
mov
jbe
dec
mov
mov
inc
mov
cmpsl
push
icebp
and
ret
fs
push
pushf
inc
mov
inc
lock
ror
pop
js
frstor
iret
or
shlb
sub
mov
mov
mov
gs
test
dec
adc
xchg
cli
xchg
ret
xor
pusha
jnp
loop
inc
arpl
shl
push
mov
sbb
push
nop
push
ficoms
sub
jl
xchg
sbb
in
xchg
dec
inc
call
loop
sbb
mov
testb
es
adcl
push
imul
cmp
shr
mov
mov
dec
lds
cmpb
out
adc
xor
idiv
ret
jbe
xchg
xor
dec
jnp
add
sub
or
fadds
shrl
std
xlat
fsubr
adc
clc
adc
test
sub
pop
xchg
sub
mov
rcll
pusha
lret
mov
mov
stos
es
sti
imul
fmull
inc
push
pop
popa
and
test
mov
iret
mov
jecxz
xchg
mov
cmp
xlat
daa
jb
or
icebp
cmp
dec
in
push
mov
mov
scas
popa
or
testl
and
out
cmpb
ss
xchg
sub
into
lcall
mov
sti
js
and
and
icebp
sbb
mov
mov
or
inc
cmp
je
adc
adc
xchg
xchg
pop
lret
aad
or
cmp
adc
lret
jle
and
adc
pop
push
hlt
imul
aam
pop
enter
pop
jge
inc
icebp
in
push
pop
lret
cld
mov
cmp
in
mov
rolb
xor
iret
addr16
or
ljmp
push
insb
mov
jnp
and
call
test
test
out
pop
xchg
push
fldt
mov
jmp
das
lret
pop
xor
fisubrs
ja
jl
fsubrl
adc
lock
cltd
push
test
test
push
mov
jns
movl
ret
sbb
fsubrs
fdivrl
cmp
cmp
inc
cmp
test
ret
inc
or
adc
xlat
push
daa
dec
aas
lahf
movsl
jl
push
cmp
lds
in
pop
outsb
inc
rolb
sti
mov
shll
or
ficoms
cmp
jle
fstps
repnz
and
sub
add
ds
inc
pop
lock
mov
pop
xchg
jnp
stos
sub
cwtl
movsb
aad
inc
std
xchg
test
movsb
adc
repnz
cltd
loope
stos
add
jbe
pusha
out
add
aas
ffreep
enter
lds
jmp
add
push
dec
test
push
xchg
mov
adcl
sbb
aam
sub
aas
adc
add
fwait
inc
jns
aas
iret
out
xor
cmp
cli
pop
stos
fbstp
and
mov
push
sti
pusha
mov
xor
aas
xchg
out
or
dec
xchg
nop
outsl
adc
or
dec
int3
inc
icebp
dec
inc
pop
push
es
xchg
inc
jo
mov
jmp
ljmp
cwtl
adc
xor
das
bound
rcrb
sub
mov
rcll
push
and
inc
mov
lret
lods
sbb
xchg
cmpsb
adc
push
push
hlt
push
nop
mov
orb
movsb
xchg
dec
jecxz
in
pop
xchg
lcall
cmc
inc
adc
xor
and
pop
xchg
sbb
mov
aad
in
push
loopne
div
xchg
dec
dec
enter
shrb
or
push
fs
repnz
lcall
xchg
and
inc
into
mov
add
imul
xchg
int3
push
xchg
cmp
xchg
mov
rcrb
push
xchg
imul
adc
sub
mov
pop
pop
and
inc
cmp
push
jmp
or
mov
xor
fistps
jecxz
pusha
into
iret
sub
dec
mov
inc
mov
push
xor
inc
mov
jbe
sub
rorl
cmp
push
push
mov
gs
inc
inc
xlat
mov
dec
xchg
adc
pop
or
fadds
and
jno
out
and
cmp
lahf
fs
stos
or
sti
push
imul
xor
pop
xor
xchg
sub
jne
cmp
add
negb
fisubs
add
rol
jb
fucomp
loop
lea
xchg
adc
leave
fwait
lea
push
jp
and
lret
push
test
popa
dec
cmp
aas
dec
addr16
sub
rcl
pop
pop
add
add
cltd
lds
lcall
jne
loopne
xchg
mov
mov
xor
mov
out
jg
repz
xor
sub
add
addr16
inc
sbbb
fsub
dec
jmp
daa
data16
jns
dec
mov
lret
into
popa
mov
mov
ret
ja
inc
and
pop
cmpsl
xor
dec
xchg
inc
cmp
pop
out
inc
pushf
in
sub
inc
insl
sti
clc
pop
lods
xchg
xchg
xlat
and
mov
jmp
into
sbbb
in
xorl
pop
push
fdivrl
mov
scas
adc
incb
pop
fisubrl
rol
cld
mov
jmp
daa
cmp
jno
sub
mov
jne
jne
sub
mov
push
lds
dec
pusha
inc
mov
jmp
mov
fildl
fiadds
xchg
and
cmp
shl
adc
addb
dec
sahf
lea
xor
pop
inc
add
pop
xchg
adc
cmc
push
adc
mov
out
in
les
mov
push
push
cltd
je
inc
test
mov
jo
arpl
repnz
push
js
hlt
add
aam
jnp
mov
into
add
jnp
xlat
movb
outsl
mov
pop
mov
jle
fidivrs
mov
mov
inc
std
inc
sbb
push
jne
pop
pushf
adc
xchg
jbe
test
movsl
push
xchg
jbe
pushf
xor
std
xchg
xchg
pushf
xor
jne
xchg
enter
mov
xor
testl
cmc
jo
jge
loopne
pop
or
jmp
test
fisubl
stos
dec
insb
lret
arpl
sub
lds
mov
fwait
outsl
xor
sti
mov
outsl
ja
xor
insl
jp
fcomps
push
sub
jno
aad
sub
enter
daa
and
lcall
fnstsw
push
mov
xor
inc
int3
lea
scas
push
add
aaa
add
pusha
adc
fstps
pop
aas
mov
mov
sub
js
push
in
daa
xchg
jl
cli
cwtl
stos
pusha
rcr
and
es
sbb
cmpsl
cmp
jno
scas
leave
pop
sbb
push
push
mov
lods
in
repnz
in
loope
js
dec
mov
repnz
mov
adc
clc
jae
movsb
pushf
cmp
push
fldt
leave
xchg
mov
jnp
shr
jle
push
jl
iret
xchg
jmp
je
jle
mov
imul
test
sbb
mov
jmp
adc
xlat
xor
xchg
sbbl
stos
and
jb
sahf
push
stc
jns
dec
sub
dec
pop
sbb
shrb
sbb
sub
add
cltd
mov
imull
js
push
add
mov
inc
mov
dec
popa
outsl
stc
xchg
into
loop
aas
jge
data16
stos
add
sahf
pusha
pop
push
inc
sub
ret
jecxz
lea
push
test
mov
push
aaa
mov
cli
pop
out
sbb
add
dec
test
popf
shlb
fcomps
pushf
pop
lock
fstpl
mov
push
dec
push
outsl
mov
sub
scas
cmp
addb
xor
mov
xchg
jb
sbb
pop
ror
sahf
jp
jbe
mov
sar
mov
in
sarb
shrl
out
movb
mov
push
or
xor
outsb
adc
push
lret
nop
mov
mov
jbe
fistpl
insl
icebp
cmp
ljmp
dec
gs
in
xchg
dec
cwtl
cmp
jbe
les
xchg
jb
push
cld
pop
cmpsb
or
jnp
jge
dec
icebp
test
cwtl
pop
std
push
lods
pop
enter
test
sub
lods
mov
orb
call
fwait
add
fldl
aas
stc
cmp
mov
add
xchg
sub
sbb
dec
insl
xchg
hlt
mov
mov
jo
inc
std
cs
push
popf
imulb
adc
inc
add
inc
push
jmp
dec
xor
inc
dec
aas
xor
cmp
push
cmp
mov
movsb
sbb
fcompl
or
fmul
scas
push
js
jbe
xor
fldcw
xchg
xchg
mov
into
or
mov
inc
jge
ljmp
jp
mov
jno
nopl
insl
sub
scas
inc
into
jo
adc
or
adc
lods
mov
lea
das
cmpsb
adc
es
push
rorb
imul
fcomi
adc
bound
mov
push
xchg
subb
or
add
je
dec
dec
xor
mov
add
sub
adc
fstpl
xor
dec
pop
add
fists
mov
cs
fdivr
mov
xchg
jecxz
fimull
pusha
orb
rcl
les
xor
dec
lock
and
fnstsw
adc
mov
into
daa
clc
rolb
add
inc
jmp
adc
adc
rcrb
jne
mov
popf
int3
sub
into
inc
loop
pop
xor
iret
dec
inc
jecxz
int
sbb
mov
mov
stc
stc
leave
push
fwait
pop
sbb
cmc
and
lods
push
adc
inc
push
outsb
mov
push
pushf
pop
and
lcall
pop
mov
sahf
pop
nop
mov
test
mov
sbb
add
shll
into
ljmp
xor
fxch
fildl
push
pop
outsl
push
fdivrl
sub
cwtl
ds
xor
or
cmpsb
cmp
sub
sub
pop
pop
repnz
shlb
sbb
and
roll
pop
lcall
sbb
sti
sbb
stos
add
hlt
mov
add
outsl
adc
movsl
out
xchg
add
add
sti
in
int
jge
push
sbb
add
mov
mov
sbb
xlat
jbe
fstl
pop
daa
popf
or
ficompl
hlt
in
or
cmp
xor
mov
pop
aaa
aam
fdivrp
outsb
adc
jmp
mov
sub
repz
int3
pop
test
sti
mov
sub
ljmp
test
and
cltd
xor
leave
fsubr
mov
mov
mov
shrb
or
dec
ficoms
mov
cmp
fdecstp
hlt
xor
dec
out
pop
push
sub
mov
subl
sbb
xchg
mov
xor
lahf
les
fiadds
flds
xchg
push
cmpsw
subl
xchg
addr16
int3
cmpsl
or
or
cmp
jnp
aaa
test
xchg
scas
xchg
das
lret
scas
js
js
out
push
imul
pusha
add
pop
inc
fcmove
shrl
mov
push
imul
jae
int3
add
adc
sahf
arpl
sub
xchg
jno
xor
xor
mov
aas
dec
cmp
inc
test
push
lea
std
jo
outsb
addr16
flds
or
lret
and
mov
decl
testl
or
pop
xchg
dec
ja
push
aam
js
inc
outsl
mov
lahf
setae
aaa
scas
roll
mov
jmp
shll
les
pop
cmpsl
fdivrs
pushf
lret
xchg
xchg
inc
in
test
or
and
inc
cmpsl
inc
scas
sbbl
push
loope
int
mov
jno
cmp
sbb
and
mov
lock
popf
lods
call
scas
lret
fbld
stos
push
pusha
popf
stos
sbb
jecxz
lret
lock
lcall
scas
ss
inc
cwtl
fldenv
nop
lock
mov
test
arpl
divl
cmp
push
hlt
xorl
jmp
jmp
daa
loop
loop
lcall
inc
test
sub
jbe
cmp
mov
pop
sub
pop
add
popa
mov
jbe
mov
pushf
cmc
dec
sbb
ljmp
nop
lcall
lock
aam
xlat
cmc
and
add
lahf
jecxz
add
xlat
pop
pop
pusha
lds
or
sub
scas
push
pushf
hlt
stos
pusha
sbb
mov
jecxz
mov
or
and
lds
sbb
push
push
loope
xor
jg
aam
cmp
pop
test
movsb
ror
repz
adc
adc
add
stos
idivl
fcoml
mov
and
loopne
sub
sbb
mov
push
ds
out
popa
mov
movsl
xchg
jle
insb
jmp
outsl
in
sbb
inc
lahf
lret
xchg
inc
pop
pavgw
pop
dec
inc
mov
repnz
xor
cmp
cmp
pop
push
xor
sbb
push
push
and
repnz
inc
fmul
aas
push
movsl
into
js
mov
lea
xor
and
mov
insb
push
addr16
cmp
lret
call
cmp
lods
fsubr
jns
sub
xchg
cmp
mov
je
stos
mov
lcall
ja
sahf
mov
mov
subl
jae
xchg
add
shrl
mov
jg
movsb
push
popf
mov
testb
iret
mov
push
rorl
loope
shlb
adc
in
out
mov
cmp
leave
orps
pusha
push
lret
ret
cmc
xorb
sub
pop
repz
xor
cltd
xchg
xchg
cltd
inc
mov
jecxz
icebp
xor
testl
dec
mov
fisttpll
repnz
scas
lcall
jb
scas
shll
lahf
add
push
pop
pushf
lcall
insb
mov
push
test
movsl
outsb
mov
pop
jmp
insb
jb
jg
adc
mov
adc
inc
sub
in
push
aad
ds
push
scas
fwait
sub
jae
jecxz
adc
imul
rcrl
sub
adc
inc
pop
cmc
out
out
jb
cmp
aad
outsb
ficoml
enter
popf
js
mov
gs
add
mov
xchg
in
jecxz
leave
push
test
das
sbb
cli
mov
xchg
sub
in
cmp
adcl
repnz
push
ss
jno
pushl
mov
rcr
cmpsb
cld
scas
clc
cs
push
add
adc
call
push
cs
sbb
fbld
dec
andb
mov
mov
js
or
mov
call
imul
mov
add
xchg
int3
lcall
sbb
iret
in
pop
imul
push
stos
pushf
push
je
lcall
outsb
mov
jbe
jl
test
mov
push
mov
test
jl
lods
cmpsb
pop
sbb
ljmp
jge
sbb
adcb
shlb
adc
pop
jb
mov
scas
jo
outsl
leave
pop
xor
loopne
inc
dec
mov
adc
bnd
pop
fcmovnbe
mov
adc
ret
stc
movsl
or
aaa
bound
add
addr16
adc
pop
pop
lcall
repz
push
leave
pop
jle
jb
cld
add
xchg
dec
dec
mov
push
repz
jnp
adc
adc
into
inc
in
inc
and
pop
mov
xorb
scas
daa
and
mov
xchg
in
pushf
mov
clc
into
xor
cmpsb
inc
lock
mov
rol
mov
mov
lcall
addl
dec
movsl
pop
fsts
jnp
push
push
or
sbb
ds
mov
xor
xchg
sub
jne
jb
dec
icebp
add
xchg
mov
scas
mov
int
xlat
lds
imul
sbb
xchg
dec
mov
pop
pop
int
xlat
sti
lea
and
xchg
into
and
dec
adc
add
pop
mov
dec
test
lock
in
pop
xor
stos
add
mov
rcll
test
pop
lock
sub
jae
xchg
stc
jmp
outsl
hlt
shll
sub
push
and
sub
mov
inc
dec
adc
arpl
outsl
addb
mov
inc
cmc
lea
sub
sbb
push
push
push
insl
cli
mov
sbb
sbb
push
inc
and
outsl
rcrb
test
jl
cmc
dec
pop
mov
adcl
xlat
inc
call
mov
orb
incb
jae
std
push
shlb
push
push
inc
das
push
and
mov
popa
aam
sbb
cltd
loopne
jecxz
clc
fsts
inc
mov
insb
enter
dec
xchg
or
cmp
and
pushf
mov
out
pushf
pop
cli
sub
negl
sub
lret
mov
enter
scas
mov
out
and
mov
pop
lahf
fldenv
in
push
fcoms
test
pop
das
lods
cmp
push
push
leave
xor
dec
and
into
sub
hlt
sub
icebp
insl
push
dec
xchg
sub
lds
lret
test
shl
jle
negl
adc
imul
pop
stos
scas
data16
and
out
xchg
xor
loop
jmp
mov
push
out
stc
aad
sub
cs
and
mov
jmp
and
sbbb
pop
sarl
jns
xchg
imulb
lods
mov
xlat
mov
push
rcrb
pop
aaa
test
cmpsl
hlt
jmp
loopne
es
mov
in
jmp
mov
out
jmp
mov
sahf
sbb
das
sub
xor
ja
in
mov
js
adc
pusha
lds
leave
mov
mov
adc
push
stos
loop
inc
dec
push
ja
jae
mov
and
popf
add
sbb
xchg
adc
adc
push
add
cmp
lods
scas
and
sbb
mov
imul
or
lcall
mov
cmpsl
stc
popa
inc
rolb
inc
add
movsb
pop
and
jg
dec
enter
jecxz
not
ret
and
rcr
xor
add
and
aam
cmc
imul
jg
mov
sbb
test
out
mov
arpl
scas
repz
jg
mov
das
aas
push
shll
push
cmp
add
scas
aad
jg
dec
sarl
imul
push
and
in
push
jo
xchg
inc
jbe
jns
push
mov
test
dec
mov
pusha
faddl
fcomps
fdivl
push
mov
cmp
cltd
jp
inc
aaa
dec
xor
add
add
std
hlt
lahf
push
rcll
test
in
loope
mov
icebp
jo
clc
pop
pop
sti
jne
jge
lods
add
pop
add
jl
in
lods
test
or
mov
xor
int3
pop
mov
das
and
pop
iret
push
jmp
stc
js
mov
or
adc
cs
cmc
pop
jns
pop
insb
mov
loopne
stos
rcrl
cmp
scas
clc
gs
mov
test
sahf
sbb
mov
aas
jne
and
fdiv
and
aaa
addr16
sbbb
cmp
dec
call
int3
mov
pop
jg
sti
push
sbb
inc
js
jl
mov
lds
pop
adc
gs
popf
pop
dec
mov
stc
jb
add
ret
pop
sub
add
pusha
and
int
idivl
dec
push
mov
cmp
outsl
xor
xlat
outsb
or
pop
rclb
into
out
adc
js
pop
add
or
add
mov
cmpsb
and
sti
sti
fwait
jmp
push
es
or
adc
and
push
dec
outsb
cli
cmpsl
rorb
or
daa
pusha
xor
mov
mov
lcall
lock
out
jecxz
or
pop
pop
arpl
imul
aaa
sub
mov
or
pop
leave
dec
cmp
insb
outsb
jo
pop
dec
aaa
mov
or
mov
call
aam
fdivp
push
lods
mov
sub
inc
lcall
pop
jge
fistpl
lock
mov
cmp
into
jb
popa
inc
sahf
cmp
into
jnp
jge
out
mov
pop
out
cltd
and
repnz
push
jl
jnp
sahf
pop
jmp
and
lahf
hlt
mov
lea
mov
pop
aas
pusha
jno
mov
mov
xchg
adc
ret
jge
mov
lret
fcomp
xor
notl
sub
push
rcr
adc
loop
je
rcll
dec
nop
imul
adc
lods
pop
pop
shr
cld
lea
dec
add
repnz
xlat
and
or
sarb
and
lds
sub
in
push
aaa
and
cld
xor
xor
jle,pn
call
into
lret
pushf
enter
out
push
mov
cmp
filds
mov
push
push
rcrl
push
mov
ret
subb
jbe
imul
fwait
out
sbb
inc
inc
pop
or
mov
popa
pop
adc
lock
cltd
cmp
mov
add
in
mov
jp
inc
cli
cmpsl
arpl
or
cltd
jbe
add
add
pop
incb
xchg
jnp
jnp
sub
inc
sub
xchg
jmp
popa
and
adc
pop
orl
cli
xchg
mov
cmp
fstpl
cld
movl
in
jne
out
xor
and
mov
stos
inc
inc
or
adc
movsb
and
addr16
insb
mov
fists
and
test
in
popa
sub
fldt
fadd
insb
sbb
pusha
or
nop
lcall
mov
insl
daa
pop
xor
add
addr16
xchg
fstpl
iret
fimull
inc
sub
jnp
xchg
pop
inc
mov
pop
sbb
clc
add
fs
fwait
jp
or
mov
mov
or
sub
mov
icebp
push
lods
arpl
mov
inc
push
movl
js
xchg
and
cwtl
lcall
je
mov
mov
ret
js
pop
mov
movntdq
sub
cmpsl
popf
sub
shll
jnp
lods
in
push
lock
cs
xchg
add
pop
nop
sahf
lcall
cmp
fdivrs
push
lahf
lret
das
orb
or
push
aas
data16
repnz
outsb
jl
pushf
sahf
adc
xor
mov
push
leave
in
movsl
call
nop
adc
rcrl
aam
and
sbb
int3
and
fimull
bound
push
das
push
call
iret
clc
cmpl
mov
arpl
xor
mov
xchg
ds
daa
rclb
dec
loopne
pop
or
mov
lret
adcb
jns
mov
or
push
dec
out
xlat
shl
sub
or
mov
jb
jmp
push
out
xchg
jae
divl
stc
mov
ja
shl
repz
out
sbb
push
mov
fwait
mov
insl
and
jle
push
push
add
out
mov
xchg
adc
fmuls
mov
xor
outsl
or
lea
lock
rorl
imul
jmp
dec
fsubs
xchg
rorl
sub
xor
out
scas
lea
ss
clc
xchg
push
sub
jmp
adc
icebp
cli
push
jno
loope
sub
sbb
sbb
cltd
pop
hlt
iret
xchg
inc
cmc
scas
cmp
or
icebp
dec
fnop
outsb
jmp
mov
pop
inc
in
aas
ret
xor
pop
add
scas
daa
gs
into
rcrb
dec
insl
pop
sahf
test
data16
push
jbe
fs
jo
adc
adc
in
aas
sub
cmp
mov
cmp
mov
pop
and
xchg
push
mov
int
mov
cmp
push
insb
roll
mov
inc
jae
and
xlat
jbe
cld
jno
jmp
add
sbb
sti
fwait
into
xor
sbb
mov
push
add
add
inc
out
jp
lahf
cmp
sub
out
mov
pop
fs
or
or
dec
pushf
stos
pminub
and
cld
ss
mov
mov
or
lock
in
mov
xchg
incb
leave
pusha
sbb
loopne
popl
inc
dec
push
jno
andb
mov
push
jle
adc
xchg
jbe
arpl
call
sbbl
imull
adc
or
ficoml
ja
xor
lret
push
ljmp
jg
inc
inc
sbb
leave
pop
pop
out
call
fwait
mov
cmc
stos
push
ds
jns
sarb
sbb
sub
jp
push
mov
fcomps
loope
jmp
mov
fnstcw
cmp
xor
fisubrl
sahf
dec
ja
scas
arpl
popa
adc
sub
xchg
mov
je
pop
or
mov
and
inc
jg
pop
es
pop
movsb
test
xchg
repnz
jle
adc
std
packsswb
push
loopne
aas
fcompl
mov
call
scas
lahf
sub
test
lods
jle
add
mov
clc
dec
iret
dec
in
push
add
arpl
xchg
insb
andl
pop
icebp
jp
dec
cmpsb
mov
sbb
daa
push
add
jae
mov
mov
xchg
cmpsb
fstps
sbb
adc
mov
sahf
cmp
xchg
cld
fnstcw
ljmp
fidivrl
xchg
inc
rorl
cmp
sti
add
inc
push
mov
adc
hlt
mov
fmuls
xchg
in
mov
in
sub
jecxz
push
popf
adc
inc
fdivrl
dec
jo
pop
add
and
outsl
data16
stos
sbb
dec
sub
cmp
sbb
aaa
incl
sub
out
sti
xlat
mov
xchg
aad
test
into
xchg
hlt
mov
hlt
fidivrs
jecxz
xor
jmp
pop
sbb
inc
jecxz
xchg
and
mov
insl
sub
inc
pop
mov
addr16
psubb
mov
pusha
xor
xchg
test
ljmp
push
jle
call
xchg
push
rep
js
dec
mov
ret
adcb
mov
lret
mov
cmpsl
addr16
mov
pop
test
pop
jbe
push
cmp
mov
fcomip
cwtl
xchg
scas
add
in
jge
loop
xor
pop
test
lret
adc
test
dec
test
lds
inc
insb
push
jmp
insb
cmp
fwait
movsb
pop
lret
jno
pop
in
data16
push
loop
mov
push
jb
pop
adc
in
mov
xchg
repnz
xchg
sbbb
outsb
cwtl
test
hlt
addr16
in
mov
push
dec
inc
dec
and
arpl
push
sbb
test
push
pop
cmp
movsb
in
aas
leave
mov
or
sub
mov
mov
rorb
hlt
jb
push
inc
cmp
sbb
ds
in
jae
popf
repz
and
xchg
adc
or
ljmp
bnd
sub
lahf
xor
lahf
sbb
fcomps
loopne
or
mov
movsl
out
dec
test
sbb
fwait
cwtl
inc
popf
jb
lea
popf
mov
inc
shr
lret
sbbl
jns
add
outsb
scas
add
and
add
add
sti
ja
dec
xlat
bound
lret
xor
and
scas
imul
outsl
jmp
fisubrl
mov
sbb
push
out
loope
push
xchg
sbb
clc
dec
dec
jecxz
jbe
sbb
pop
in
lods
mov
in
es
arpl
aam
stos
add
xchg
insl
mov
mov
mov
push
xor
test
or
inc
lret
cmp
or
sbb
push
movsl
int
cld
lods
faddl
push
sarb
aam
shl
ret
lcall
mov
mov
push
pop
push
loope
xorb
pop
adc
mov
lods
lds
inc
fnop
jae
push
ficoml
pop
and
dec
pop
mov
mov
aas
pop
pop
jge
loop
dec
pop
idivb
xchg
popf
mov
push
into
in
test
mov
pusha
pop
shr
rol
fcmovbe
cmc
mov
push
dec
mov
mov
mov
xchg
arpl
jbe
fidivs
cmc
ljmp
sub
test
inc
mov
xchg
in
loopne
dec
lock
sti
rcll
fsubs
inc
mov
roll
cs
push
add
les
daa
lds
add
sub
ljmp
sub
je
and
das
inc
xor
mov
hlt
dec
dec
adc
xchg
cs
mov
out
mov
cmpsb
adc
flds
push
or
mov
jae
cltd
test
cmp
lret
je
xor
or
cmp
test
arpl
inc
sub
orl
push
out
out
in
or
in
jmp
mov
cmp
ja
sub
inc
insb
fisubs
leave
jo
mov
cltd
mov
inc
sub
mov
cmp
aad
sub
and
inc
js
and
push
mov
push
mov
jge
enter
and
pop
aad
cmp
adc
lods
lcall
ljmp
lret
adc
cmp
dec
ljmp
mov
cwtl
cltd
xchg
dec
ficoml
ror
pop
jne
cmpsl
arpl
jnp
pop
adc
ret
jp
aad
sub
mov
ret
jge
lock
jnp
stos
int
scas
movsb
or
push
add
xor
pop
add
outsl
lret
xchg
pop
out
add
sub
add
sbb
pop
mov
and
lret
into
adc
movsb
daa
aas
xchg
jbe
int
test
inc
xchg
xor
push
cmp
xor
add
inc
mov
andb
pop
cmp
sbb
dec
mov
jns
dec
shrb
or
pushf
popf
aad
aam
test
ret
clc
jge
popf
out
frstor
and
adc
pop
mov
ljmp
pushf
movsl
pop
flds
cld
inc
or
je
add
sahf
sub
cli
xor
lods
lods
mov
imulb
notb
dec
pmovmskb
or
mov
gs
cmpl
cli
xchg
sbb
pop
adc
sahf
and
push
dec
sbb
or
mov
sahf
ljmp
rcl
mov
dec
arpl
dec
or
dec
xor
test
int3
shlb
pop
sbb
inc
cmpsb
scas
add
pslld
mov
mov
push
cmp
and
mov
or
inc
fcmove
outsb
pushf
sar
iret
sub
add
ss
ja
cmp
jg
rcrb
dec
mov
sub
xchg
add
pop
add
mov
lock
inc
adc
mov
dec
jl
push
pop
test
movl
lret
mov
mov
mov
add
jns
xor
scas
outsl
mov
inc
jmp
fadd
sbb
mov
jae
jle
fdivrl
jne
xchg
repz
dec
jge
xchg
push
adc
cli
movsb
xor
add
in
mov
pushf
xor
adc
and
ljmp
ret
test
sbb
xchg
testb
sbb
jp
dec
lret
pusha
pusha
mov
stos
xor
enter
lahf
movsb
lods
repnz
add
repnz
mov
fsubl
movsb
xchg
push
js
out
out
add
xchg
xchg
jne
mov
je
inc
nop
pop
pop
cli
inc
pop
insb
xchg
adc
mov
mov
dec
fs
lret
jge
inc
dec
pop
adc
negb
and
lcall
jmp
jle
repz
in
pusha
icebp
mov
les
sbb
rol
xlat
mov
jmp
pop
fdivrs
jl
scas
mov
test
inc
shll
div
inc
mov
sahf
fisttpl
jo
mov
and
sbb
jecxz
idivl
mov
les
out
pop
fsubrl
inc
mov
xor
mov
push
int
jne
test
adc
in
lods
or
gs
inc
mov
rclb
jne,pn
push
lret
adc
idivl
and
lret
adc
dec
push
mov
or
and
push
add
cmp
dec
and
push
cmp
je
les
sbb
or
js
movb
adc
ds
sbb
inc
clc
jns
fmuls
int
mov
nop
sete
out
ret
push
lods
es
dec
fsubs
hlt
mul
leave
ret
add
or
mov
adc
jb
in
sub
cmp
cmp
int3
sub
fists
je
insl
ret
xchg
pusha
cltd
adc
flds
test
sbb
sbb
jo
adc
and
dec
mov
xor
daa
shll
jle
outsl
test
lahf
pusha
dec
jg
mov
stc
hlt
push
and
cmp
push
popa
dec
mov
inc
push
push
es
outsl
mov
cmp
in
leave
and
movsl
leave
into
and
ss
pop
shl
xchg
and
push
fsts
sbbl
shrb
mov
mov
psubd
out
fs
jnp
mov
insl
js
addr16
nop
ljmp
add
add
inc
sbb
or
movsl
cmp
jne
lods
mov
outsl
aas
mov
sbb
pop
xchg
test
fsubrl
adc
orb
divl
add
das
add
push
inc
jg
popf
daa
jno
cld
cmp
ret
enter
lock
mov
jg
les
pop
rcrl
outsl
lods
sub
pop
dec
cmp
xor
pop
stos
or
mov
aaa
sarb
stc
mov
fs
mov
mov
mov
cmpsl
ror
pop
mov
mov
jmp
jp
sahf
jb
pop
inc
shl
dec
cwtl
icebp
push
rol
repz
push
mov
jl
sub
fdivrs
repnz
mov
outsl
xchg
jecxz
arpl
bswap
fstpl
mov
dec
loopne
cmpb
arpl
or
xor
and
arpl
jo
push
jbe
insl
push
cwtl
aas
sbb
das
pop
or
push
idivl
test
sub
inc
mov
xchg
lea
lea
dec
and
arpl
repz
popa
insb
mov
dec
sbb
xor
mov
push
out
ja
scas
and
xor
in
xor
pushf
subb
and
xchg
aad
int3
jmp
fidivs
ret
mov
or
xor
sbb
cs
inc
xchg
jbe
xor
insb
sbb
dec
xchg
loopne
fidivrl
jg
stos
enter
shl
xor
pop
push
xchg
xor
jb
lahf
shrl
push
xchg
inc
stos
mov
mov
repnz
mov
mov
xchg
repnz
stos
imul
push
jb
movsb
cmpl
loop
test
sub
int
cmp
or
mov
ds
movsb
jnp
scas
push
loope
out
outsb
sbb
dec
fprem
dec
fdivs
rolb
out
or
shlb
inc
fldenv
pop
dec
push
jnp
sbb
xlat
daa
jae
mov
mov
enter
fstpl
cli
aam
and
jge
cmpsl
mov
shrl
shlb
mov
mov
mov
rcrb
inc
gs
fstl
mov
add
sti
push
adc
rep
mov
xor
mov
inc
shl
popf
cwtl
sub
sbb
pop
mov
cmc
add
sub
push
fidivs
jbe
xchg
pop
aam
stos
dec
aaa
nop
adc
xchg
lock
loopne
dec
cmpsl
xchg
stos
jo
scas
into
popa
mov
adc
sub
sub
dec
loope
cmp
pop
adc
jnp
outsl
dec
push
mov
call
add
sbb
mov
cmp
out
lods
jnp
jne
sub
xchg
fdivs
cmp
ret
rcrb
das
repz
xchg
loop
nop
sub
jnp
pop
pop
insl
outsl
js
pop
lock
xor
out
pop
call
int
enter
pusha
dec
xchg
xor
outsl
nop
mov
xor
dec
or
stos
int
adc
insb
data16
lcall
shlb
jle
lods
sbb
xlat
and
push
mov
inc
push
inc
xchg
jle
mov
jmp
ja
inc
jbe
mov
mov
lea
lods
mov
xor
xlat
lds
hlt
and
push
add
lahf
add
mov
fildl
sbb
pop
mov
jg
incl
fsubs
in
popf
adc
dec
sbb
jno
dec
adc
pushf
push
push
testl
dec
hlt
imul
or
scas
add
repnz
push
mov
mov
clc
pop
fsubl
rcrb
push
xchg
mov
mov
push
jnp
sub
inc
jns
in
loopne
dec
add
icebp
pop
movsb
scas
in
int3
aad
inc
cmp
adc
sub
test
ret
jae
setnp
mov
mov
mov
fisttpl
stos
fiaddl
pop
jbe
xor
rcl
xchg
aad
lea
popa
and
mov
add
fstpt
jnp
lcall
or
fsubrl
stc
loope
xbegin
pop
imul
pop
push
sahf
sar
xorb
mov
call
mov
ss
cmpsl
sbb
gs
push
pop
in
pop
pusha
out
pop
sahf
sti
pop
int3
push
sbb
loop
push
mov
andl
in
lds
jge
out
xor
in
xchg
xchg
outsl
and
push
pop
ffreep
mov
jbe
dec
inc
ret
mov
push
jo
aaa
xchg
leave
je
fcoml
enter
add
pop
mov
mov
out
loop
mov
inc
lret
bt
add
enter
aas
into
test
pop
sub
cld
and
sbb
xchg
jne
and
sbb
dec
dec
movsb
sub
pop
lcall
xchg
je
xchg
push
xchg
jns
cmp
stos
xlat
jns
lahf
pop
ret
xchg
loopne
scas
ljmp
mov
add
xlat
pop
daa
orl
jmp
push
sbb
sbb
xor
ss
adc
push
jmp
dec
mov
sub
push
cmp
xor
fwait
lret
pop
xlat
ljmp
icebp
and
push
cmpl
fidivs
cld
imul
pop
testb
popf
dec
dec
lret
nop
cmp
scas
int
push
nop
clc
mov
divl
mov
push
jg
outsb
mov
stos
or
ds
pop
popf
xor
pop
dec
cmp
mov
fldcw
push
push
sub
mov
dec
test
scas
dec
orl
mov
scas
push
cmp
jnp
sbb
lret
outsb
into
ljmp
mov
xlat
push
mov
jle
sub
addr16
mov
into
mov
mov
jl
sub
and
pop
dec
pop
or
push
push
lods
add
addb
xor
subl
bound
xorl
jo
lahf
movsb
xchg
add
lods
fwait
test
mov
add
xor
mov
dec
jns
stos
cmpsb
mov
daa
divb
arpl
loop
fistpl
and
mov
or
cltd
sahf
adc
pusha
data16
mov
adc
xchg
cmpsb
push
push
sub
pop
pop
ret
jg
jp
xchg
pop
dec
imul
dec
mov
xor
sbb
add
cli
jp
xchg
adc
scas
pusha
leave
sub
lret
or
adc
stc
or
sbb
jne
jmp
xchg
xor
mov
adc
popa
fistpll
lods
cld
pop
or
add
insb
adc
dec
repnz
cmp
mov
lock
in
clc
lods
mov
fwait
movsl
add
ror
js
inc
sahf
jmp
dec
out
popf
push
test
in
cli
pop
xor
mov
outsb
sbb
adc
out
loope,pt
mov
dec
sub
mov
ror
scas
push
les
mov
testb
cmpsl
cmp
mov
add
pop
xor
mov
push
test
push
mov
movsl
cs
in
int3
xchg
jg
push
or
lds
stos
jne
dec
popf
fs
popf
insl
test
aad
sub
arpl
jle
leave
xchg
mov
loope
xchg
jecxz
mov
sbb
rol
xchg
repz
repnz
mov
mov
jb
cmp
pop
mov
or
pop
fyl2x
xchg
add
mov
jl
cmp
inc
lret
les
inc
mov
pop
das
cwtl
lea
fistpl
sub
jge
jge
mov
push
aaa
lret
repnz
adc
scas
pop
pop
movsb
mov
shll
xor
sahf
fstpl
mov
add
or
pop
jno
leave
push
int
mov
fistpl
and
cli
mov
add
mov
mov
icebp
arpl
adc
jp
push
xor
call
addb
out
or
xchg
add
mov
test
bound
jle
cmp
mov
jbe
xchg
dec
arpl
dec
mull
and
scas
dec
xlat
dec
xor
mov
aam
jnp
ret
mov
cli
cmc
es
pop
sbb
fistps
ja
adcl
lret
dec
ficoml
push
ret
aad
stos
jl
movsl
in
fwait
and
mov
inc
xchg
lcall
ss
pop
mov
add
loope
pop
in
xchg
adc
sti
cmpsl
mov
cmp
repnz
jo
mov
jmp
xor
sar
inc
add
lea
ss
mov
out
lret
xchg
or
mov
aad
dec
mov
and
iret
arpl
sub
and
cmpsl
sub
fidivrs
loope
lods
stos
std
insl
test
dec
add
outsb
mov
sub
mov
push
sahf
adc
add
lret
dec
das
add
push
ja
int
int3
xchg
xchg
ja
sbb
pop
pop
pop
xchg
cld
mov
cld
mov
cs
cltd
andb
in
popa
inc
inc
and
jge
adc
std
ja
mov
or
ss
and
fwait
in
cmc
repnz
lahf
in
xchg
cmp
mov
ret
lds
and
xchg
cmp
fwait
test
aad
stos
fcomps
imul
add
jp
hlt
jo
inc
cmp
in
add
push
nop
mov
adc
lret
popf
xor
sub
mov
rcll
mov
sub
shlb
lahf
js
mov
mov
or
adc
jecxz
sub
jle
xor
repz
cs
push
sti
dec
or
je
out
push
xor
rcll
pushf
les
push
out
push
cmc
sbb
dec
cwtl
aaa
add
push
mov
jbe
jne
mov
imul
push
dec
aam
push
mov
inc
fwait
xlat
shrb
scas
mov
xchg
gs
cmp
pop
jne
or
cmp
jmp
jge
jnp,pn
in
movsl
push
xchg
into
pop
mov
mov
jmp
mov
xor
or
call
xor
call
repnz
and
enter
mov
lcall
fs
mov
dec
add
sbb
rclb
jp
adc
or
or
xchg
data16
push
gs
aaa
addr16
adc
xchg
fimuls
ljmp
push
int3
shll
fisttps
out
test
xlat
lcall
mov
cmp
into
enter
push
push
call
subl
cwtl
test
push
shlb
inc
les
cmp
loop
adc
out
pushf
or
or
or
leave
fcmovnb
leave
out
arpl
push
cmp
mov
daa
dec
mov
clc
xchg
xchg
cs
frstor
ds
adc
shll
or
mov
jne
lock
fsubrl
lea
testl
popf
inc
mov
je
ljmp
ficompl
pop
mov
nop
sbb
push
or
mov
mov
outsl
mov
lea
push
push
dec
mul
push
outsb
in
pop
in
fistps
xorl
rorl
scas
dec
lret
add
stos
xor
das
pop
mov
xchg
mov
sbbl
or
push
ds
clc
int3
aad
ljmp
imul
int3
and
gs
in
lahf
sahf
rcrl
scas
sarl
mov
or
dec
jmp
bound
push
gs
repz
cltd
test
add
sub
xchg
cmpsl
xchg
icebp
jne
outsl
and
xchg
add
fcoms
push
sub
inc
mov
notb
sbb
inc
mov
xor
lret
and
sahf
cmc
adc
mov
adc
div
lods
inc
popf
cmp
cmc
push
lods
sub
je
dec
enter
xchg
loopne
lods
jns
sbb
popa
push
and
in
or
mov
jo
fcoml
sub
or
mov
sbb
and
push
rclb
pop
push
outsb
dec
cwtl
hlt
dec
jmp
adc
push
lea
xor
data16
push
iret
fs
ret
stc
nop
addr16
mov
aaa
pop
ret
mov
test
dec
scas
jl
mov
insl
movsl
pop
jg
out
test
jae
push
inc
pop
aas
out
and
or
mov
je
cmp
mov
dec
flds
iret
movsb
testl
sub
sbb
mov
mov
outsb
insb
int
out
mov
rclb
imul
nop
push
xchg
mov
push
xor
orl
adc
sbb
mov
js
adc
add
neg
add
or
orb
cmc
hlt
xor
and
jnp
test
pop
mov
enter
inc
mov
pop
jg
fs
xor
and
fs
scas
adc
aaa
jmp
xlat
pop
mov
xchg
pop
test
fwait
std
sub
int3
pop
int
ficoms
jp
arpl
int
mov
hlt
cs
inc
or
fsubrl
mov
add
ss
fcmovne
stos
clc
adcl
aaa
xor
sbb
adc
push
push
stos
pop
cli
in
fprem
adc
jne
ja
jp
fiaddl
iret
loop
jg
lcall
ja
les
lods
sbb
mov
stos
aam
xchg
call
sub
rorb
jp
mov
and
dec
es
xor
xchg
js
xor
sti
jl
sbbb
xchg
add
repnz
pop
movsl
mov
add
dec
jp
pop
xor
sub
pop
orb
cltd
shrl
jmp
pop
in
adc
jnp
inc
mov
fstpt
sub
test
jb
insb
mov
aad
jge
or
push
ljmp
cmp
outsb
iret
mov
roll
and
int
hlt
xlat
add
jge
cmpl
lock
push
cmpps
dec
idiv
aad
pop
mov
and
and
aad
xor
mov
cmp
das
out
add
cwtl
fdivs
loopne
dec
hlt
shlb
stc
mull
icebp
jp
mov
adc
or
or
pop
rclb
jns
enter
adc
fdivs
push
xchg
mov
stc
out
fsts
mov
sub
jbe
outsl
jo
jmp
mov
outsl
stos
and
test
pop
sub
jge
xchg
lahf
scas
mov
xchg
enter
outsb
call
js
addl
inc
mov
pop
mov
movsl
xor
push
shll
adc
and
jns
and
in
jae
sbb
cmp
xchg
call
or
shrb
std
imul
jge
adc
and
sbb
inc
pop
mov
xchg
mov
repz
data16
sub
data16
jns
test
stos
lahf
mov
lea
jle
push
adc
sbb
mov
ja
out
mov
sbb
js
stos
cwtl
jnp
cmp
lea
sbb
pop
mov
nop
enter
inc
cmpsb
cmp
and
xchg
dec
cs
pop
fldl
xorl
pop
out
pop
test
or
lret
mov
xchg
cmp
dec
pop
shl
stos
leave
adc
dec
mov
cld
mov
inc
fildll
arpl
adc
cmpsb
jecxz
fst
mov
bound
movl
jne
dec
push
lock
sbb
xchg
or
cld
adc
push
sub
in
add
stc
inc
jl
loop
xchg
out
adc
mov
stc
test
out
push
mulb
jbe
fsts
ds
xchg
jo
mov
jne
loope
cmp
or
pop
in
fcomip
mov
cmp
mov
sub
jns
jmp
je
in
add
and
leave
sbb
dec
cmp
mov
cmpb
pusha
sahf
add
inc
cmp
add
jnp
cmp
into
lea
pop
fistpll
xchg
and
pop
mov
cmp
add
cmpsb
sub
xchg
lcall
sti
and
fucom
lahf
sbb
cmpsl
sub
pop
clc
xor
mov
xlat
xchg
push
inc
pop
aad
aaa
sar
add
int3
sbb
notb
sub
inc
or
jns
add
testb
test
jl
inc
push
cld
and
pop
int3
imul
shll
pop
adc
es
sbb
lods
mov
dec
adc
and
mov
aam
xor
test
out
ficomps
sub
sub
lods
sub
bndmov
mov
pusha
sbb
xchg
jae
mov
arpl
add
dec
and
jg
and
subl
outsb
scas
into
ljmp
adc
std
repnz
mov
xor
mov
mov
dec
and
std
sbb
popf
shrb
sub
pop
mov
jns
dec
xor
mov
data16
aas
pop
leave
xor
fdivl
xlat
jo
fists
adc
out
sub
fisubrl
xor
mov
loope
pusha
mov
std
cmp
push
shlb
pop
inc
and
mov
rclb
and
pop
arpl
cmp
fisubl
xchg
mov
mov
and
in
cmp
popf
and
dec
and
xor
stc
loop
add
sub
or
popf
mov
shlb
nop
movsb
push
testl
clc
scas
push
sti
push
lods
popa
out
movb
add
cltd
int3
pop
push
jl
addr16
fidivl
dec
or
packuswb
addr16
movsb
icebp
push
adc
push
fwait
and
dec
cmp
mov
addl
popa
mov
inc
mov
mov
mov
inc
mov
scas
movsb
adc
aad
adc
sbb
pop
jno
das
mov
cmpsb
mov
mov
jnp
out
in
or
sub
xchg
mul
sbb
add
mov
inc
push
adcb
or
shll
xchg
adc
jp
dec
jmp
sub
test
aaa
imul
and
and
lods
add
pusha
bound
cmpsl
dec
fldenv
daa
dec
lds
testb
jge
sbb
fisttpll
dec
jae
jmp
je
inc
adc
push
aaa
sub
mov
sbb
add
xchg
sub
inc
mov
imul
out
js
in
pushf
xchg
lds
out
cli
xchg
stc
jnp
jb
or
mov
sahf
lods
fdiv
pop
popf
push
and
mov
orb
sub
sbb
and
and
ret
test
jmp
xchg
in
sub
subb
dec
test
fistpl
cmp
decl
mov
addr16
xor
shr
or
cs
jmp
inc
or
sbbl
rorb
ror
push
push
jae
pop
and
punpckhwd
mov
jp
rcr
xchg
xchg
loop
loopne
aaa
pusha
fwait
insb
xor
jne
push
call
loope
int
sub
daa
sarb
jp
test
out
adc
cmp
push
dec
xor
dec
arpl
sub
lea
push
or
movsb
maskmovq
divl
bswap
or
pop
mov
out
gs
mov
mov
sbb
mov
aaa
dec
dec
xchg
int
pop
in
xor
test
nop
loope
stos
es
inc
out
push
movsl
in
cli
test
ret
mov
notl
ds
out
mov
clc
or
hlt
pop
movl
aad
inc
xor
cmpsl
push
jns
in
loop
roll
test
icebp
mov
das
movsl
sbb
pop
mulb
jp
push
mov
cmp
hlt
rolb
pop
inc
jg
pop
pusha
lahf
rcll
dec
es
das
test
cmp
call
es
xchg
je
call
inc
hlt
arpl
xor
je
or
out
mov
fdivr
push
lcall
aas
pop
int
mov
test
out
and
inc
ret
lahf
mov
enter
sti
dec
rorb
scas
testb
rorl
aaa
icebp
pop
jns
aas
outsl
enter
ljmp
scas
shlb
in
mov
dec
and
lea
xchg
ret
cmc
andl
jge
and
dec
sub
movsl
mov
sub
jno
adc
insb
fs
sbb
addr16
icebp
nop
jge
push
xor
inc
mov
fwait
movsl
inc
ljmp
popa
cmp
inc
fisubs
jg
pushf
mov
cld
mov
divl
popf
imul
aam
repz
xchg
test
cmp
add
mov
mov
jmp
aaa
dec
fidivrl
cmp
xor
or
ficompl
fnstcw
dec
mov
je
call
xchg
xor
jno
inc
repnz
dec
hlt
xchg
cmpsl
push
es
sti
mov
fisubrs
sub
xchg
nop
stos
mov
cmp
xor
jmp
add
je
call
cmp
iret
adc
in
je
jg
lret
filds
inc
jbe
jno
inc
fnstcw
ds
ja
jbe
aam
in
je
mov
adc
sbb
lods
stc
inc
loopne
sub
in
shrl
je
sbb
std
add
mov
fcmove
loop
popf
inc
cli
cli
mov
cmp
int
outsl
imull
sub
rdmsr
add
sbb
rcl
stos
aad
roll
pushf
push
mull
add
out
add
and
or
jp
and
mov
jecxz
fs
xchg
or
sub
test
mov
xor
leave
enter
jo
fucomi
adc
data16
lock
scas
mov
sar
xor
dec
lods
cmp
scas
pop
stos
call
jno
push
jo
ret
dec
xorl
mov
test
shl
out
push
sub
repnz
js
sub
hlt
pop
inc
jns
clc
push
aad
xor
xchg
inc
inc
sbb
sbb
adc
es
js
mov
xchg
and
adc
std
imul
fsubrl
shl
stc
iret
loope
push
mov
sar
xor
imulb
xchg
push
mov
loop
push
sub
imul
hlt
pop
xchg
adc
mov
in
and
cld
ret
pop
fiaddl
inc
dec
sbb
aas
inc
xchg
lret
push
adcb
mov
pslld
fs
or
test
stos
sub
push
pop
mov
in
ss
shll
or
adc
push
cmp
sarb
frstpm(287
xchg
push
push
mov
das
jnp
aaa
gs
mov
pop
test
cmpsb
mov
xchg
addl
jmp
and
pop
ror
imul
es
hlt
adc
lds
insl
and
movsl
outsl
repz
in
xor
inc
ret
rorl
imul
cs
mov
pop
nop
movsb
testl
adc
das
xor
repz
xchg
lret
sbb
fsub
cmc
sub
lret
lret
or
shlb
arpl
ss
mov
mov
test
test
pop
dec
test
cwtl
stos
nop
mov
cli
mov
jg
sbb
or
es
push
int3
and
gs
jge
add
xchg
jb
jmp
jl
mov
and
dec
push
xor
inc
jge
repz
fadds
stos
in
mov
outsb
push
pop
mov
icebp
sub
mov
fsubrs
sub
into
push
gs
dec
mov
xchg
inc
lds
mov
sar
ret
cmp
dec
pushf
mov
xchg
xchg
cmpsl
push
push
es
lahf
xchg
rorl
sub
xchg
fistpl
pusha
lret
das
test
and
jmp
in
ljmp
popf
into
lods
rcrl
loope
int
jae
jecxz
jno
cwtl
pushl
inc
mov
lods
xor
jecxz
sub
fwait
int
popa
cwtl
jg
mov
test
sub
les
data16
adc
jno
mov
into
pushf
add
xlat
test
mov
add
xchg
sbb
rcll
sub
jae
fucomp
jg
sub
stc
cmc
xor
xor
jmp
popa
mov
and
int
std
out
jbe
dec
clc
loop
push
fidivs
add
sub
xor
arpl
or
fidivs
test
cs
fsubs
jp
push
push
negl
xor
xor
mov
jp
aam
pop
adc
jae
cmc
loopne
push
in
inc
iret
out
sbb
cli
push
pop
cs
sarl
inc
iret
inc
mov
rorb
hlt
leave
ror
and
ret
fs
cmp
jmp
pop
dec
lds
aad
call
in
std
pop
mov
scas
mov
sbb
ja
jb
sbb
lret
sub
mov
push
pushf
gs
pop
adc
sub
mov
sbb
pop
inc
cmp
stos
fs
mov
xor
mov
xchg
cmc
pop
add
add
jg
and
cmpsb
and
mov
fucomi
fwait
inc
test
ja
mov
add
movsb
rclb
sub
sub
je
jl
and
mov
inc
lret
sub
jle
loopne
dec
dec
inc
out
lea
dec
stos
cmp
mov
mov
pop
cltd
mov
and
pop
jo
mov
lods
cmpsl
xlat
inc
pop
inc
loope
ja
je
loop
int3
and
and
shll
xor
pop
loope
pop
loope
push
xchg
jno
int3
out
sub
fdivp
xor
movsl
xchg
or
jle
jecxz
notb
fidivrl
lret
mov
iret
add
mov
lret
cmp
push
or
jb
imul
push
mov
pop
pop
stos
mov
repnz
fwait
mov
dec
out
mov
mov
dec
repz
push
scas
sbb
pop
cmp
xor
jge
mov
mov
roll
sbb
xchg
mov
imul
out
mov
mov
into
push
in
pop
je
adc
sar
dec
xchg
jae
mov
pop
cmpsb
pop
and
push
mov
jno
and
xor
dec
mov
int
or
adc
sbb
stos
mov
push
cmp
cwtl
insl
ja
fstps
ljmp
sbb
outsb
insl
cmc
jmp
mov
push
push
add
jge
mov
fs
pop
push
lea
cld
add
pop
dec
daa
mov
add
push
sub
orb
insl
aad
add
push
and
dec
pop
iret
jle
xchg
mov
xchg
cltd
dec
aas
inc
leave
in
fimull
xchg
sbb
popf
jg
fld1
cmpb
adc
mov
xchg
and
subb
sub
jo
mov
fistpl
mov
lret
pop
inc
test
repz
xchg
add
mov
xchg
ret
lods
stc
mov
pop
aad
xchg
lahf
orl
dec
shrl
jmp
jbe
andb
push
push
xchg
ret
cmp
test
mov
jo
mov
adc
in
outsl
add
sub
test
pop
xchg
aad
loop
fcomp
add
or
lahf
xchg
mov
sub
hlt
sarb
pop
out
out
imul
inc
mov
jno
inc
rcll
rclb
into
je
outsl
test
jmp
cmp
and
sub
imul
cmp
jbe
cmp
inc
mov
cmp
cmp
cmpsl
ret
stc
repnz
in
add
ficoml
push
sti
std
pop
repz
and
lods
es
mov
cmc
xor
xor
enter
mov
inc
cwtl
cmp
jg
aam
popf
repz
push
pop
pop
fistps
pop
das
add
jb
les
and
cmc
mov
add
cs
insl
test
sbb
add
mov
into
sbb
mov
dec
fs
test
enter
pop
test
bnd
mov
mov
cmpsl
movsl
aam
mov
pop
ret
jae
mov
lods
decb
mov
icebp
testl
adc
pop
or
in
pop
sbb
mov
ss
cs
inc
fistl
rorb
ja
push
test
lret
enter
lret
xlat
push
sti
data16
insb
cmpsl
jnp
sti
xor
repz
xchg
rcrl
fsubl
shlb
test
lret
lods
add
mov
data16
xor
push
iret
adc
fs
out
dec
pop
sbb
push
cli
pop
push
mov
aas
popa
out
ret
lods
bound
jo
cltd
cmpsl
hlt
push
push
sub
cld
dec
adc
mov
addb
dec
shl
in
xchg
inc
mov
pop
in
or
dec
push
jg
pop
add
jnp
ljmp
sbb
out
hlt
xor
cmp
movl
or
add
lahf
arpl
lcall
sarb
aas
push
mov
cmpsl
mov
stc
imul
in
insb
inc
bound
popa
mov
in
jp
or
std
bswap
sarb
jge
stc
test
divb
mov
xchg
jge
outsb
add
xlat
daa
adc
ret
mov
add
xchg
and
mov
pop
inc
mov
pop
lds
and
dec
jno
xchg
lahf
pop
sahf
loop
cmp
dec
popa
inc
mov
adc
and
and
jno
pop
jl
shlb
negl
inc
ret
mov
lahf
or
jno
sti
inc
lcall
push
sbb
add
aam
or
mov
or
sub
rcrl
or
andl
mov
xchg
mov
pop
insl
xchg
xchg
dec
jl
adc
and
jl
adc
sbb
adc
jp
jecxz
xchg
pop
jo
pop
sub
jne
xor
pushf
push
mov
icebp
lret
fdivrs
pop
movsb
dec
outsl
xchg
xlat
inc
in
jb
or
xlat
aaa
fwait
movzwl
and
xchg
test
pop
xchg
sbb
call
lods
jne
out
stos
fdivs
aad
inc
stos
lods
xchg
fldln2
lea
push
mov
mov
inc
test
dec
rcrb
xlat
addr16
add
lds
add
pop
jbe
daa
or
or
in
lds
or
jo
scas
outsl
addb
mov
inc
inc
xchg
stos
movsl
arpl
mov
xor
stos
ret
jmp
outsb
icebp
aad
in
mov
jns
xchg
daa
xor
xorb
lret
fistl
cld
sub
push
mulb
test
jecxz
mov
bound
out
sbb
xchg
imul
hlt
mov
fwait
inc
imul
lock
inc
out
jle
jmp
cmpsl
mov
clc
mov
inc
mov
leave
imul
out
xchg
je
sbb
in
in
push
xor
into
add
ja
dec
cmp
out
test
in
cmp
cmp
mov
or
shll
cmp
mov
jne
fiaddl
xchg
cmp
dec
pop
xor
daa
xor
and
dec
or
jp
pop
les
lock
or
shl
cmc
mov
movsl
sbb
int3
jo
adc
inc
mov
arpl
cli
push
shll
in
jge
test
lret
fimull
pop
shlb
sub
jbe
xchg
int
sarl
fstps
mov
hlt
jae
cmp
xchg
mov
pop
push
out
aas
jno
jmp
imul
fildll
mov
and
or
push
sub
insl
cmp
dec
aam
pusha
fs
xorb
daa
mov
ror
ficomps
jns
pushf
mov
cwtl
jnp
outsl
and
adc
repz
inc
push
in
and
rclb
mov
xchg
mov
cmpsb
mov
repnz
pop
popf
jbe
jae
dec
lea
sbb
and
push
cmp
add
push
pop
and
inc
pop
xchg
lcall
xchg
push
shlb
test
sub
popa
cmp
loopne
inc
pop
dec
loopne
outsl
pop
loop
inc
fcoms
adc
mov
clc
adc
mov
mov
xchg
push
pushf
cmp
idivb
push
jmp
xchg
mov
insb
pop
sub
int
and
pop
rclb
and
mov
xor
cmpsb
ljmp
and
or
xchg
or
or
jne
and
mov
pop
pop
vfnmaddps
enter
fiaddl
mov
fldcw
shrl
push
cmpsb
addr16
enter
inc
aas
pop
iret
movsl
pop
cltd
js
rolb
aad
or
mov
in
sub
pop
in
sub
in
pop
fsubrs
mov
adcb
inc
cmp
out
pop
repnz
sbbb
shrl
insb
clc
mov
movsb
sbb
add
mov
dec
xor
test
mov
cmp
repz
rcr
mov
dec
clc
imulb
inc
mov
xorl
cmc
push
sbb
popa
jbe
movsb
add
sub
ficoml
stos
mov
adc
outsl
lcall
lods
push
mov
test
sub
mov
jne
pop
movsb
fisubrs
popl
xchg
sub
test
mov
add
sbb
mov
mov
push
mov
loope
cmpsl
xchg
test
jb
clc
aaa
cmpsl
sub
or
push
xlat
sbb
inc
push
stc
ss
out
int3
lods
xchg
stos
and
jo
fsubs
pop
sar
int
sub
inc
mov
pop
clc
mov
out
das
rolb
decl
mov
lcall
cmp
ss
sub
jecxz
or
sbb
outsb
inc
xchg
dec
roll
sbb
fsubrs
fmuls
pop
enter
inc
and
rcr
sub
adc
sub
cmp
mov
daa
shr
movsl
enter
cli
mov
mov
aam
jo
jl
mov
aaa
mov
aam
mov
jl
push
and
cmp
cs
cmp
clc
mov
mov
es
or
leave
js
fistpll
cmp
stc
or
inc
mov
aas
pop
push
insb
test
adc
mov
call
mov
cmpsl
or
rorb
or
imul
je
pushf
out
mov
mov
sbb
push
mov
adc
jg
push
repz
dec
rcll
hlt
mov
cmpl
push
xor
test
xor
jns
ds
or
ds
in
xchg
stos
andl
sarb
inc
push
ljmp
push
cli
pop
std
popa
push
or
inc
mov
sbb
push
sbb
jmp
mov
outsb
int
lock
shrb
frstor
movsb
loop
xchg
stos
pushf
ss
dec
int3
pop
test
fs
jns
pop
scas
sub
ja
loope
mov
div
fadd
sti
dec
add
xchg
lahf
pop
mov
mov
ss
cmpb
inc
cmp
fldenv
adc
inc
jl
cwtl
mov
arpl
pop
mov
std
jo
repz
mov
fidivrl
les
pop
stos
xchg
jl
sbb
push
sub
rorb
sub
pusha
push
jmp
sbb
cmp
movsb
adc
adc
pop
jle
cld
adc
adc
xchg
loope
into
push
cli
lcall
mov
sti
mov
movsb
and
push
mov
inc
fs
scas
and
mov
test
ljmp
push
dec
jle
push
ss
data16
xchg
mov
adc
lahf
push
sub
fs
lds
xchg
adc
sbb
inc
loopne
inc
cmp
push
rorl
mov
ss
add
add
pop
cmp
out
outsb
scas
mov
xor
sti
jp
test
mov
fsubrs
notl
scas
out
inc
push
and
lods
xchg
insl
rcr
or
add
clc
loop
inc
aas
incb
inc
cmp
dec
jmp
sub
fisttpll
and
inc
pop
mov
test
inc
sbb
xchg
xor
pushf
es
push
xor
into
out
pop
test
and
lret
xchg
sub
add
jns
faddl
jmp
insl
imul
fwait
int
adc
icebp
outsl
sub
loopne
xor
xchg
stos
test
xor
mov
jg
and
push
push
and
aad
push
std
in
fcoml
jo
jnp
hlt
scas
mov
jp
xor
scas
jge
mov
dec
adc
push
jge
or
inc
mov
enter
xchg
jp
arpl
cmp
push
xchg
lea
imul
mov
adc
pusha
sub
push
mov
cmp
cwtl
dec
and
and
dec
movsl
xchg
adc
pop
pop
lret
ret
fs
shll
out
cli
dec
add
sbb
mov
mov
add
mov
xor
into
iret
lret
dec
push
add
outsb
pop
or
lret
out
fldz
dec
mov
pop
je
mov
enter
fnstenv
insb
sahf
andl
movsl
dec
popl
test
push
mov
jmp
cld
and
jo
adc
cli
das
xchg
push
sbb
aam
cmp
adcb
jg
ss
adc
jne
add
fcoms
test
xor
mov
xchg
sbb
pop
lds
push
mov
hlt
mov
lcall
push
scas
sub
jge
inc
outsb
shrb
shrl
or
pop
rcr
daa
rcl
mov
emms
orl
bound
loop
mov
in
lds
addr16
daa
clc
mov
jp
aaa
hlt
in
push
pop
jno
pop
sub
cmpsl
adc
rcrb
inc
inc
push
lcall
pop
sbb
sbb
push
mov
xchg
jge
inc
add
and
fstl
xchg
or
psllw
fnsave
sub
or
cvtpi2ps
fucom
cmp
lea
add
es
fnstcw
xlat
iret
inc
fimuls
in
xchg
lods
out
pop
fnstsw
add
subb
sub
rcr
loop
add
adc
test
frstpm(287
sbb
fucomp
push
mov
sbb
add
sub
push
and
frstor
pushf
aad
dec
insb
pop
in
add
and
test
daa
insl
mov
call
outsb
push
xchg
mov
push
in
or
shll
add
pop
sub
ds
sub
sbb
scas
pop
or
add
dec
out
jb
test
dec
fldt
sbb
incl
push
lea
repz
outsl
jbe
dec
inc
out
pop
mov
sbb
jb
inc
arpl
test
push
scas
std
stos
cmc
sub
push
jg
cli
add
inc
mov
icebp
cmc
hlt
lret
pop
pop
imul
cwtl
mov
test
fwait
jle
xor
pop
movsl
mov
mov
and
cmpb
lods
pop
stos
pushf
jae
out
jnp
cmpsb
fwait
scas
sbb
lret
inc
int3
mov
leave
xchg
adc
push
out
shl
ja
xor
hlt
fwait
jo
sbb
test
loop
cmp
xchg
cmp
mov
xchg
ja
aad
lahf
mov
ja
xor
icebp
flds
xchg
push
jbe
pop
into
sbb
sub
dec
sub
and
adc
xor
daa
push
xchg
and
adc
cmp
pop
es
mov
lea
adc
push
inc
sbb
iret
cmpsl
jne
pop
ja
mov
lds
stos
mov
ds
mov
lahf
fstl
aam
mov
out
test
std
test
jae
mov
jae
fdivl
inc
add
aad
jg
aam
push
lcall
es
mov
ss
jmp
jb
dec
shlb
and
rcrb
inc
add
test
xchg
fsub
scas
xor
mov
pusha
mov
mov
push
orb
pop
cli
outsl
out
pop
mov
ss
fbld
rcl
push
jnp
das
test
bound
fsubl
cwtl
add
sbb
int3
jno
into
adc
fmul
pop
push
or
out
xchg
jl
fstpl
into
fisttps
mov
cmpl
jmp
lret
mov
add
or
cmpl
push
mov
fwait
cmp
popa
rclb
inc
add
aam
xchg
mov
jmp
push
cmp
xchg
out
mov
adc
cmp
shll
insl
xchg
xchg
xchg
cwtl
push
mov
sbb
and
mov
pop
fs
push
out
fnstenv
pop
lahf
sbb
add
test
ficoms
sahf
inc
sub
es
mov
sahf
sarl
sbb
int3
das
cmc
leave
xlat
adc
gs
cmpsb
and
cli
scas
xchg
jo
push
xchg
sahf
sub
adc
cmp
rorb
fsubr
loopne
out
movsb
fs
imul
mov
rcrl
js
pop
inc
cs
adc
push
inc
movsl
call
test
xchg
call
mov
inc
push
push
scas
mov
lahf
fucomi
loop
cmp
out
dec
imul
shll
pop
cmp
in
popf
lods
movsl
imul
ljmp
jmp
inc
stos
js
in
xchg
and
movsb
push
xchg
xchg
mov
lods
pop
hlt
aad
xchg
dec
das
pop
pusha
mov
jne
jmp
pop
insl
cmp
mov
jl
out
sub
out
sbb
adc
ret
mov
aad
add
add
fadds
shl
add
dec
mov
sub
test
dec
pop
icebp
fsubr
and
cltd
sbb
movsb
add
dec
bnd
jnp
or
push
arpl
adc
aas
js
or
adc
cmp
fisttpll
xchg
js
jle
ljmp
sbb
lds
int3
inc
sbb
pop
ret
lret
inc
jns
pop
sti
pop
pop
lods
nop
sbb
jmp
stos
mov
lahf
pop
movsl
pop
mov
mov
or
pop
lret
cmpl
pop
mov
xchg
jne
imul
loop
mov
dec
int
push
sbb
add
test
cmp
les
enter
popf
lret
movsl
mov
nop
dec
mov
dec
adc
lock
xchg
or
cmpsb
push
dec
xor
enter
pop
sbb
xor
add
insl
int
imul
shlb
mov
and
bound
int
aas
lret
jmp
pop
mov
push
mov
jp
vmwrite
jecxz
mov
dec
sub
aam
test
jae
or
sahf
xchg
mov
lods
loope
dec
jbe
daa
loop
mov
xor
pop
fsubp
and
repz
pop
aaa
imul
inc
out
insb
push
or
nop
xor
je
mov
and
shr
out
xor
push
repnz
jae
adc
cmp
mov
int
shlb
stc
add
data16
and
es
cli
add
pop
mov
and
popf
les
inc
pop
sbb
out
jb
lcall
out
ficoms
xor
inc
cmp
pushf
data16
xchg
lahf
mov
and
inc
nop
lahf
mov
scas
std
add
das
mov
cmp
popa
les
jp
repnz
sub
or
cmc
jo
fstl
incb
or
sti
and
mov
pop
pop
adc
jnp
mov
xchg
mov
cmc
jno
push
popa
incl
dec
xor
dec
mov
xor
cmp
xor
loop
sub
loope
sbb
lret
add
stc
in
ja
iret
ret
jmp
fcomps
xchg
sahf
cmp
push
push
test
loopne
daa
cmpl
xchg
push
cld
popf
jmp
in
push
outsb
enter
jmp
imul
sub
lods
mov
outsb
imul
iret
sub
mov
mov
clc
clc
icebp
cmp
sbb
inc
dec
push
nop
adc
jno
pop
fs
aaa
or
or
fld
mov
outsb
xlat
adc
jge
cmp
cmp
fimull
cld
das
lds
push
inc
fiadds
xchg
cli
fildll
push
cmp
sarl
rol
dec
hlt
and
sub
add
sub
repnz
ret
mov
in
movsl
mov
pop
mov
stos
fbld
add
int
dec
sub
sti
imul
insb
insl
loop
mov
push
adc
scas
stos
repnz
and
jg
dec
fdiv
jge
nop
dec
shl
enter
cltd
xchg
jb
movsb
push
daa
push
movsl
mov
xchg
sti
ret
rolb
and
out
arpl
test
popf
xchg
arpl
repnz
fs
push
shl
mov
outsl
sbb
addr16
pop
jnp
out
add
and
popf
out
sbb
mov
lock
repnz
sbb
cmc
sub
cmc
mov
sub
testl
in
adc
jle
inc
outsb
add
xchg
test
mov
xchg
inc
dec
push
cmpsl
sbb
clc
cmpb
xor
rcrb
jae
or
adc
enter
js
jp
stc
test
jo
lods
fmull
inc
mov
or
cs
repnz
int3
addr16
shrb
pop
mov
sti
and
or
inc
bts
enter
xchg
adc
add
inc
cmc
das
push
pusha
loopne
js
jae
inc
loop
pop
lcall
and
add
leave
push
jns
fsubl
jne
sbb
xchg
shll
push
out
xchg
outsb
mov
out
gs
aam
add
dec
bound
jecxz
out
and
ret
cld
cmp
pop
and
xchg
ja
push
xor
mov
mov
call
cld
ss
arpl
in
sbb
gs
sub
push
lock
or
iret
sbb
xchg
int3
in
lods
mov
pop
xchg
hlt
xchg
and
pop
add
stc
loopne
in
jnp
loop
pop
insb
daa
sub
mov
fmuls
cmp
mov
popa
loope
push
test
mov
icebp
push
inc
cmp
adc
scas
ret
enter
mov
lret
out
xchg
das
gs
mov
xchg
inc
xchg
jge
test
dec
inc
out
jne
jns
lcall
jecxz
pop
xchg
imul
adc
add
dec
enter
push
pop
insb
dec
imul
ljmp
test
xchg
out
push
sub
mov
fwait
mov
rol
jecxz
leave
pop
aaa
dec
sub
movsb
dec
sub
sahf
cli
jb
pop
lods
jle
hlt
rorl
lret
push
insb
sub
lea
push
jp
sbb
mov
jp
add
sarb
pop
jecxz
inc
arpl
mov
xchg
mov
mov
sahf
mov
outsb
test
ljmp
cmp
push
cmp
leave
and
sbbl
or
cmpsb
jne
adc
das
jno
dec
sbb
inc
test
pop
mov
lahf
stos
lods
mov
cmc
push
lcall
xchg
cmp
jb
daa
rorl
cmp
fucomip
dec
push
push
das
pop
rorl
into
arpl
daa
add
push
cli
push
xchg
fwait
and
arpl
push
fsubl
jecxz
mov
pushf
or
rcrb
xor
divb
nop
sbb
outsl
test
sub
cmp
pop
inc
insl
jle
clc
xchg
cmp
cmp
inc
push
scas
dec
outsb
sub
xchg
mov
dec
lret
sti
insl
adc
pop
sub
fs
fcmovb
sbb
pop
in
push
lods
popf
pop
xchg
add
ss
incb
ljmp
les
rcll
lret
mov
mov
xor
mov
aam
les
adc
or
rclb
xchg
mov
sbb
cmc
dec
add
ret
out
mov
pop
popf
cmpsb
push
aad
popf
fstl
mov
sub
aaa
aaa
adc
shrl
add
stos
dec
push
out
cld
sub
sbb
dec
cmpsl
jns
cmp
push
decb
stc
pop
mov
das
scas
mov
lods
or
out
dec
enter
or
jecxz
mov
mov
sbb
fs
test
or
or
push
enter
lds
xor
push
aas
fistl
cmpsl
imul
out
or
mov
shrb
into
sahf
add
or
fwait
js
cmpsl
and
les
dec
or
enter
aaa
daa
in
push
xor
push
cmpsl
dec
iret
sub
mov
sar
cmpl
mov
movsb
lret
outsl
loopne
not
mov
lahf
dec
lret
xor
andb
and
sbb
mov
ss
dec
loopne
dec
loop
inc
int
lods
pop
repz
roll
cmp
jle
bound
bound
std
mov
mov
pop
xchg
jecxz
and
pop
stos
adc
jp
xor
int
bound
xchg
movsb
or
rclb
stos
xchg
sub
jo
cltd
jmp
repnz
daa
sbb
stos
pop
imulb
lcall
mov
repnz
pop
das
mov
cwtl
fcoml
lret
leave
es
xchg
mov
je
adcb
mov
sqrtss
cld
xchg
pop
push
pop
arpl
sbb
roll
cwtl
lods
test
sti
popa
sbb
daa
inc
push
icebp
out
sub
mov
xchg
add
dec
test
xchg
and
loope
lds
enter
mov
pop
cmp
adc
jecxz
mov
mov
xor
nop
sub
jne
mov
aad
repz
xchg
and
popa
sub
xchg
xor
hlt
xchg
pop
sahf
testl
push
xchg
insl
scas
fcmove
sbb
cs
inc
enter
push
addb
pushf
insb
add
dec
outsl
xor
push
sbb
sbb
testb
lods
je
add
push
mov
call
sti
push
jae
lret
jno
inc
repnz
adc
sbb
out
xchg
xchg
lds
or
and
xor
mov
adc
pushf
mov
adc
dec
aaa
push
popl
aaa
addl
enter
mov
rclb
in
sbb
mov
sbb
cli
mov
jmp
adc
xor
dec
jl
sub
popf
in
repnz
ss
cld
ret
aam
scas
sarl
mov
and
mov
cmpsb
cltd
movsl
mov
sub
xor
in
sbb
lahf
sar
decb
ss
popf
sub
daa
out
push
pop
hlt
dec
outsb
loope
in
negl
adc
xchg
fstl
jns
popa
leave
rcl
fadds
shl
daa
cmp
movsl
add
sbb
mov
je
cmpsb
dec
mov
fists
aaa
cwtl
cmp
aam
into
push
sbb
mov
cmp
mov
add
stos
xchg
outsl
ret
push
mov
sub
jns
pop
push
jbe
push
ja
aaa
pushw
sbb
cmp
loop
test
lcall
and
jl
movsb
shrl
pop
lea
fcmovnbe
fimuls
push
lods
jmp
push
dec
test
xchg
insb
std
cmpsb
sahf
imul
xchg
mov
repz
jnp
dec
mov
mov
xchg
jne
out
lret
pop
sbb
xorl
sub
into
cmp
scas
stc
sti
test
cmc
add
fstpt
ds
aas
jne
loopne
out
addl
in
cmpsl
mov
loop
xor
daa
fcmovu
dec
je
cmp
mov
mov
sub
mov
jo
push
cmp
mov
in
and
imul
aam
shll
pop
fwait
popa
mov
test
mov
adc
ja
lds
cli
lcall
mov
gs
dec
cld
test
inc
test
cli
mov
push
ja
push
or
out
fdivrl
repz
lret
les
mov
xor
popa
xchg
push
ja
pop
rol
push
push
jne
outsl
cld
or
icebp
xor
int
inc
out
repz
in
adc
out
push
cmpsl
inc
std
pop
cmp
ljmp
cmp
imul
js
addr16
xor
sub
or
negl
jb
adc
mov
fwait
sub
ret
scas
fcmovb
xchg
gs
sub
push
adc
sub
lcall
xchg
jo
xchg
ficoml
sub
je
jb
adc
adc
insl
jl
dec
fucomp
mov
xchg
jns
xorl
mov
push
dec
sub
or
divl
fwait
jmp
cmc
or
mov
insl
fisubs
pop
andl
pop
mov
sub
add
cmp
ret
jmp
or
inc
lods
mov
scas
add
adc
inc
ret
sbb
ljmp
push
int
out
xchg
les
jno
lock
adc
add
popf
push
push
out
jl
mov
mov
aaa
jp
dec
inc
ret
scas
les
dec
cmp
inc
jecxz
lods
jnp
mov
stos
repnz
in
fstpt
mov
dec
jmp
mov
mov
jns
push
mov
es
imulb
aas
rcrb
adc
sbb
xlat
or
push
pusha
mov
pop
push
insl
pop
hlt
aaa
jno
xor
imul
pop
push
xor
cmp
lret
pop
popf
lahf
xchg
inc
prefetcht0
arpl
and
aas
sbb
int
adc
mov
sbb
imul
rcrb
lcall
inc
dec
fbld
pop
xor
inc
or
mov
imul
mov
loop
pop
pushf
sti
les
mov
stos
push
mov
cmp
and
repz
imul
repnz
sub
hlt
inc
popf
iret
ds
lret
jl
test
outsl
stos
popa
ja
pop
jnp
xchg
push
mov
or
mov
mov
add
adc
mov
cmpb
add
js
sar
jns
mov
push
dec
aas
cmp
jmp
popa
imul
pop
add
sub
jl
xchg
dec
jl
adc
mov
fsubs
testb
dec
ljmp
out
or
dec
dec
sahf
pop
push
movb
mov
add
andb
iret
enter
mov
dec
or
arpl
inc
push
adc
dec
sti
fnstenv
push
mov
mov
push
in
bound
xor
mov
mov
adcl
lods
sbb
add
bound
xor
pop
add
shrl
inc
dec
fwait
loop
imul
cmpl
sbb
hlt
stc
aas
insl
mov
movl
iret
cmpsb
popa
jecxz
loope
add
es
and
ret
faddp
les
xor
add
jl
mov
xor
and
and
adc
ret
jle
sbb
mov
jnp
lods
pushw
rcl
fs
sbb
and
imul
lret
cwtl
pop
cmp
in
loop
dec
mov
andb
in
cli
fisubs
fdivrp
cmp
sbb
lea
dec
insb
push
fisubrl
fisttps
js
shlb
dec
shrb
cld
popf
flds
sahf
loope
mov
stos
movsb
cmp
cmp
inc
cld
adc
inc
sub
mov
xor
fdivr
mov
test
xor
std
jbe
jae
je
and
adc
mov
shrb
mov
jge
adc
xchg
fwait
sbb
inc
and
popa
rclb
or
mov
sub
lret
inc
xor
xor
cmp
cmpsb
add
mov
mov
or
shlb
aaa
clc
aas
jle
push
cmp
adc
movsl
cmp
jae
ja
push
adc
push
mov
or
enter
dec
xlat
cmc
pop
push
cmc
fistl
adc
xlat
dec
or
mov
jl
or
jecxz
cld
xchg
shlb
scas
in
loope
sub
cmp
xchg
xlat
adc
loopne
lods
popf
pop
xor
xchg
out
or
mov
xor
and
rcrb
daa
mov
xor
out
or
inc
pop
ffree
sbb
xor
int
mov
pop
jno
sub
sbb
fistps
cmp
sub
sbb
jne
push
nop
adc
push
jno
jmp
inc
movsb
and
pop
cmp
xchg
jmp
xchg
cmp
or
cli
lock
xor
outsl
mov
mov
hlt
lret
pop
imul
or
or
popf
aad
aad
and
push
iret
mov
out
mov
jl
fmulp
cwtl
cmp
addb
enter
dec
idiv
cltd
sub
cmp
pop
cltd
dec
loop
cli
lods
jne
jae
xor
test
add
dec
call
xchg
dec
in
out
daa
dec
push
mov
movsl
jne
cmp
mov
dec
xchg
lret
xor
sbb
xorl
out
pop
pusha
push
inc
xor
idivb
shrb
aaa
adc
mul
xor
add
fdivr
outsl
and
mov
xchg
mov
xorb
jle
arpl
sahf
jge
add
and
repz
sbb
lcall
pop
or
loopne
fildll
dec
cmpb
ss
sub
xchg
in
xchg
pop
sbb
out
add
push
mov
insl
js
arpl
jle
xchg
xor
or
and
out
mov
sub
or
mov
es
inc
push
pop
and
pop
or
rcll
cmp
aam
pop
mov
test
sti
cmc
out
xchg
jg
xor
daa
add
popf
ret
cmp
fs
fstpt
add
loop
repnz
cmp
lea
lcall
push
ss
ds
test
xor
cmp
xor
mov
jbe
mov
sahf
test
mov
jg
out
push
int3
stos
cmp
adc
pop
sbbl
sbb
dec
popf
sbb
xor
leave
mov
adc
decl
jbe
sub
mov
xlat
lds
add
jmp
popa
scas
mov
push
pop
sbb
cmp
mov
sti
shl
inc
mov
adc
xchg
daa
loop
cmp
mov
fbld
mov
mov
rcr
aaa
movsl
popa
in
jne
hlt
pop
pop
bound
lcall
es
jecxz
sub
mov
pusha
lods
add
sub
fwait
dec
test
inc
xchg
sub
data16
ret
cmp
mov
aam
or
in
rcrl
push
popf
add
popa
jbe
fiaddl
adc
dec
lds
idivb
repz
imul
xor
mov
cmpsb
cmp
xchg
lret
mov
adc
mov
loope
xor
imul
adc
jmp
add
and
jle
or
sub
ss
ficompl
pushf
out
das
xchg
rcrb
add
dec
pop
das
andb
sahf
lcall
insl
lea
and
shl
js
xchg
pusha
cmpsl
movsl
pop
ficompl
xchg
mov
jnp
inc
jnp
arpl
xor
jecxz
inc
sub
in
or
add
push
mov
cmpsl
scas
pop
jnp
fcompl
cmp
insl
stc
in
push
sahf
add
mov
mov
and
ret
push
sub
mov
jbe
scas
fwait
push
jmp
mov
pop
fstl
inc
rolb
ficoms
mov
imul
xlat
pop
jne
imul
push
rolb
sub
sbb
cmpsl
scas
push
popf
repnz
mov
ret
stc
fdivrs
pop
mov
cmpsl
sub
xchg
test
ret
testb
popl
sub
add
jmp
ljmp
adc
jmp
test
ret
js
mov
jae
sub
lcall
push
adc
ds
inc
cwtl
fisubrl
ret
inc
sub
shrl
jecxz
test
mov
pop
ret
xor
aad
inc
insb
andl
lahf
movsl
insl
mov
faddl
inc
xor
fbstp
gs
sahf
cmp
pop
mov
imul
dec
out
push
jns
jle,pt
mov
jmp
icebp
add
push
add
adc
ret
push
add
lahf
adc
inc
pop
pop
mov
sub
xor
add
out
push
dec
xor
dec
or
jp
sub
in
xchg
mov
sub
mov
call
pop
jo
xchg
sub
call
je
mov
push
cwtl
popf
les
cwtl
push
scas
sub
ja
iret
push
pop
cmovbe
sub
sub
rorb
jns
fcoms
lcall
cmpsl
lods
pop
xor
nop
inc
enter
jns
sub
mov
xchg
and
cld
and
push
sbb
aaa
rcrl
ret
inc
jo
fsubrs
inc
mov
xchg
fmull
or
mov
or
lea
ljmp
sahf
sbb
inc
and
cmpsb
into
mov
mov
xchg
or
mov
dec
pop
or
adc
add
mov
ss
imull
aam
nop
lods
sub
dec
mov
inc
rorl
cli
xchg
loop
inc
add
enter
fidivrl
fisubrs
jb
inc
cli
sub
sbb
jns
shl
mov
mov
jno
les
mov
test
push
inc
arpl
mov
jle
outsl
mov
stc
pop
xchg
cmp
dec
sbb
out
add
in
adc
mov
jno
push
push
loop
lret
mov
imul
push
pop
inc
pushl
and
mov
orl
add
sbb
pop
and
xor
out
shll
inc
mov
loope
or
jbe
jp
lcall
fs
add
adc
ret
mov
mov
rclb
stc
fwait
sti
mov
lods
push
mov
in
mov
hlt
insb
mov
mov
mov
push
mov
nop
ss
jge
aam
push
push
jge
cld
mov
jp
add
pop
lods
cmc
sti
sarl
jo
pop
xchg
nop
aas
mov
adc
adc
xlat
hlt
sub
cli
xchg
lock
out
lcall
jne
test
mov
ljmp
push
pop
and
js
xlat
cmpsl
pop
jbe
cmp
push
push
fistl
ljmp
and
mov
and
or
fwait
inc
rol
sbb
ss
outsb
add
idivb
pop
repnz
sbb
sbb
and
jne
pop
cmp
mov
adc
hlt
adcl
icebp
inc
lea
imul
lea
push
xchg
lea
pop
es
sahf
mov
and
pop
sarl
sub
mov
mov
daa
popa
inc
stc
out
ss
xchg
add
mov
mov
push
ja
add
lret
aaa
les
rolb
sar
jb
sub
dec
popa
adc
into
loopne
hlt
cld
ljmp
cmp
dec
sub
dec
lds
mov
stos
cld
das
dec
lret
test
mull
add
pushl
adc
xor
xchg
stos
int3
and
mov
and
aaa
and
nop
cmp
inc
push
sbb
push
mov
mov
jb
lcall
sahf
sub
xor
stos
sbb
or
xor
addb
pop
inc
clc
adc
addr16
dec
xchg
sahf
pop
repnz
xchg
inc
inc
pop
pusha
push
inc
adc
cltd
and
fdivp
lcall
loope
test
and
sub
or
scas
arpl
mov
les
sub
or
movq
cs
ja
movsl
ror
flds
push
adc
sub
jne
in
popa
mov
sub
and
scas
push
idiv
inc
ja
and
add
push
loop
ljmp
push
testb
pop
insb
fisubl
sti
push
out
mov
rclb
lahf
insb
scas
mov
xor
push
jae
insb
mov
cmpsl
and
pusha
insb
cwtl
shrb
push
sbb
shlb
std
out
mov
mov
frstor
push
nop
xchg
mov
mov
jo
lret
cmp
xlat
mov
pop
jmp
dec
into
insl
mov
rorl
push
out
test
in
dec
jecxz
xor
insl
ret
lock
fcompl
sbb
mov
pusha
xchg
mov
cmp
xchg
push
loope
inc
outsb
imul
repnz
xchg
hlt
or
push
aaa
movsl
shlb
enter
cmp
clc
mov
mov
jno
fadds
push
enter
pushf
cmpl
add
push
jae
push
mov
cmpsb
in
jle
xchg
mov
push
inc
adc
int
lahf
sbb
pop
js
aam
jbe
or
fcmovu
jno
jg
xor
movb
movsb
mov
mov
mov
sub
loope
inc
xchg
sbb
mov
push
movsb
sbb
in
cmp
mov
and
adc
jmp
xchg
push
xchg
cmp
cs
inc
sub
xor
nop
mov
mov
dec
xchg
cmp
in
ljmp
xor
fsts
jp
mov
xchg
push
mov
mov
loopne
sahf
push
mov
mov
popf
mov
push
cmp
xlat
rcrl
jae
inc
cmpsb
mov
sub
lea
mov
and
arpl
loope
sub
push
mov
pusha
das
pushf
inc
push
jp
inc
and
pop
fsubr
test
sbb
add
adc
pcmpeqw
repz
stos
in
je
xchg
mov
or
xchg
stc
dec
add
mov
mov
mov
push
call
pushf
pop
xchg
jmp
xchg
std
push
jae
out
es
int3
push
mov
ja
cli
sub
movsb
adc
cltd
out
inc
into
jne
cmpsl
adc
jge
fucompp
and
lret
out
lahf
mov
mov
psubw
mov
mov
xor
sbb
adc
movsb
dec
dec
sbb
inc
ljmp
jg
push
sbb
adc
xchg
inc
mov
push
xor
inc
sbb
mov
fidivrl
daa
xor
cmp
xor
mov
popf
pushf
outsb
and
and
daa
xor
outsb
ljmp
shrl
add
aad
shr
std
out
sbb
push
jae
xor
xchg
cwtl
outsb
lret
xchg
loope
mov
and
sbb
sbb
mov
js
pushf
fs
adc
jecxz
or
fbstp
leave
xor
sub
call
lods
xor
xor
lahf
lods
xchg
pop
add
jns
push
sbb
cmp
lcall
mov
aas
mov
inc
imul
xchg
lahf
cld
cli
std
dec
inc
dec
pop
imul
test
adc
mov
cmpsb
mov
or
insl
cmp
lods
xchg
push
jne
adc
mov
nop
in
xchg
xchg
leave
daa
inc
push
out
sti
rolb
jl
pop
fbstp
and
or
push
fistpl
loopne
or
or
fstl
sahf
or
push
ljmp
stc
out
std
std
popl
gs
rclb
iret
sbb
adcb
mov
mov
sbb
mov
jg
mov
mov
pop
scas
rol
pmulhw
or
push
repnz
and
cmpsb
out
mov
in
and
mov
movsb
or
es
jne
inc
shll
xchg
fmull
mov
sbb
fs
test
hlt
popf
les
mov
cmp
mov
rcll
jmp
pop
shlb
outsl
xchg
add
xorb
iret
out
and
jbe
mov
cmp
cmp
arpl
jb
push
or
push
dec
jnp
inc
mov
mov
aam
inc
cmpsl
nop
xchg
pop
xchg
cmp
inc
cwtl
sub
dec
aam
scas
or
xchg
stc
imul
or
mov
add
mov
faddl
push
jb
push
pushf
mov
pop
xcrypt-cbc
cmpsl
push
push
das
pusha
lea
mov
xor
enter
call
arpl
or
push
push
in
mov
or
faddl
or
or
aas
repnz
or
out
hlt
jg
xor
inc
cmp
popa
add
aaa
adc
push
mov
arpl
inc
sbb
mov
add
adc
mov
stc
ljmp
std
incb
xchg
dec
rcll
popa
out
dec
inc
ja
mov
repnz
xchg
and
sbb
fsub
stos
sub
xor
jl
lea
xor
stos
dec
lret
loope
add
adc
xor
pcmpgtb
xchg
mov
dec
jmp
popa
jmp
push
fbstp
dec
dec
pushf
xor
mov
lret
inc
add
xor
sahf
dec
jmp
xchg
push
sti
mov
cmc
fldcw
dec
push
aam
sarb
and
pop
mov
pusha
int
popf
mov
push
mov
in
mov
push
sbb
inc
and
xchg
and
add
mov
int3
ljmp
addr16
sbbl
sbb
imul
xor
xlat
js
push
inc
cwtl
xchg
sub
and
mov
xor
xchg
jmp
pop
faddl
inc
and
lds
fucom
cmpsb
std
lods
dec
cmpsl
jmp
pop
jne
popf
inc
mov
or
jge
popf
xchg
push
gs
sbb
call
mov
xlat
add
and
daa
shr
adc
push
aam
pop
outsb
lahf
ret
mov
gs
movsl
adc
scas
in
enter
xchg
mov
mov
adc
fldenv
loope
xor
xchg
insb
jns
bound
in
xchg
or
test
out
pushf
ret
xchg
xor
std
sti
sbb
add
aad
xchg
jnp
ds
fucom
aad
mov
movsl
jl
xor
fwait
mov
fisttps
into
sub
cmp
ja
bound
inc
ror
dec
cmpsb
imul
mov
in
push
popa
adc
or
and
cltd
xchg
mov
popa
hlt
in
dec
pop
inc
push
and
sub
mov
test
shrb
daa
mov
push
mov
mov
push
aam
mov
jns
filds
loopne
sub
sarl
scas
andb
jle
fsubl
push
pop
jne
aam
stc
xchg
cmp
scas
and
or
add
cmc
dec
xor
enter
adc
shlb
dec
dec
iret
sti
lahf
pop
mov
cmpb
mov
jl
cmpl
inc
or
mov
pop
mov
and
mov
notrack
and
cmp
js
push
out
mov
fwait
jp
cmpl
sbb
cmp
cs
or
pop
aad
repz
lret
rcl
inc
cmpsl
leave
xchg
decb
loope
imul
push
sarl
sbb
xchg
stos
cs
mov
pop
xchg
push
pop
les
or
cmp
addr16
dec
add
cltd
arpl
gs
inc
jb
in
cmpsb
jo
data16
xchg
jb
test
cmpsl
mov
arpl
mov
or
sti
fcoml
xor
xor
dec
xchg
cmc
pop
cmp
dec
or
into
dec
mov
mov
mov
jecxz
fucom
xchg
daa
jns
arpl
aas
out
cmpsb
lcall
aaa
pop
mov
pop
jp
pop
pop
fwait
daa
xchg
pop
insb
or
outsl
pop
inc
into
push
push
xchg
adc
out
jae
btl
push
adc
stos
dec
sub
cs
movsl
sbb
adc
or
filds
in
movsl
mov
addr16
mov
and
and
cmp
in
xlat
hlt
lahf
sbb
clc
or
mov
out
les
scas
add
or
cmp
cmc
cmpsl
cld
xorl
pop
jp
out
and
iret
mov
xor
dec
push
add
jmp
stos
je
mov
fisttps
jno
test
dec
push
enter
sbb
mov
fiaddl
mov
jp
cmpsl
and
iret
mov
dec
or
fcoms
mov
in
and
stos
movsb
dec
scas
and
mov
pop
push
add
ror
jmp
xchg
push
lret
icebp
gs
outsb
fwait
jmp
scas
popa
add
pop
push
call
and
hlt
ret
fimuls
jns
shlb
test
std
stc
dec
mov
loopne
divl
add
xchg
lock
cmp
sub
int3
xchg
dec
fcom
cmp
shrb
cltd
pop
roll
adc
or
loop
and
jae
movsb
pop
testb
popa
and
jmp
ret
lret
fidivl
add
push
pushf
push
lcall
sub
dec
add
in
mov
repz
mov
pusha
cmpsb
addl
insl
imul
or
aad
int
sub
shlb
push
adc
push
fldt
push
je
cmc
mov
test
cli
es
testl
mov
stos
dec
insb
or
and
mov
cmp
sti
mov
sub
insb
rcll
in
xchg
movzwl
push
pop
push
mov
xchg
test
sbb
push
adc
mov
inc
ja
fmulp
nop
dec
push
add
jae
mov
or
leave
sub
neg
aas
jge
mov
cmpsl
ret
dec
popf
push
call
icebp
cmp
xchg
pop
ja
xor
ret
ret
iret
add
cs
lahf
cmp
xorl
xorl
cmp
push
in
mov
pop
iret
sbb
jo
xchg
mov
mov
xor
sahf
stos
test
or
bound
outsb
xor
orb
cmpsb
xchg
outsl
loop
mov
sbb
insb
arpl
pop
mov
and
jae
and
or
pop
inc
sbbb
popa
jae
xor
xchg
add
popa
sub
adc
jl
loope
aam
pusha
push
xchg
movsl
sbb
jae
xchg
aas
mov
and
fwait
dec
xchg
stos
add
xor
sbb
and
stos
add
fstpt
sbb
adc
int3
mov
fsubp
dec
xlat
lea
xlat
cmpsb
insb
icebp
jl
xchg
lret
jecxz
stos
cli
loopne
dec
add
sub
sbb
imul
xorb
mov
mov
mov
std
push
dec
lahf
sti
test
push
ja
sti
mov
cmp
mov
into
xchg
pop
enter
adc
jno
adc
mov
mov
adc
pushf
pop
add
pop
pop
add
rcr
and
into
sub
ja
pop
dec
cmp
jg
xchg
addr16
iret
push
aad
iret
inc
outsb
sti
pop
sub
add
and
fcoml
xchg
xor
hlt
cmc
lods
mov
sub
push
incl
mov
cmp
aam
adc
xor
push
lcall
adc
dec
cmpsl
jne
push
add
sub
push
and
jge
mov
inc
in
lods
xchg
cmp
mov
iret
int3
pop
lahf
cmp
fsubp
xor
add
dec
push
jno
sub
jmp
fs
adc
jne
inc
daa
and
xor
mov
subl
scas
pop
dec
je
inc
mov
nop
add
adc
pop
cmp
cwtl
cmp
add
adc
fisttps
cli
jge
and
xor
js
xor
mov
sbb
ja
add
or
imul
in
mov
insl
aad
lret
xchg
adc
popf
or
fcoms
and
xor
xchg
push
into
std
cmc
ljmp
nop
dec
mov
push
or
push
test
inc
ret
jg
mov
ret
mov
jae
lods
lods
push
adc
inc
push
jmp
out
mov
xchg
add
jmp
jne
push
add
fs
add
mov
scas
aam
mov
cli
in
xor
mov
xchg
push
inc
addl
push
xchg
pop
test
loope
jle
mov
push
push
jo
lret
rclb
jo
pop
mov
lds
fmull
xchg
push
cwtl
stos
adc
adc
test
push
jnp
xchg
test
aaa
int3
frstor
xor
fisubrs
fdivrl
mov
cmp
rcr
xor
sti
push
mov
sbb
mov
lahf
mov
js
mov
mov
add
lock
test
out
inc
subb
sub
mov
sbb
lret
xor
dec
xor
cmpsl
pusha
fadds
int
adc
stos
or
xor
inc
mov
testl
dec
bound
jg
out
fwait
xchg
dec
imul
or
mov
pop
fbld
pop
sub
hlt
popa
pop
fsubrl
addl
cmpsl
out
mov
mov
clc
dec
fnstcw
mov
fucom
sub
jno
and
iret
mov
push
and
sahf
popl
mov
lret
dec
imul
negb
add
nop
jecxz
es
out
jmp
xor
push
test
repz
cmp
and
fcoml
cmpsb
imul
xlat
insl
and
push
pop
push
sbb
add
push
cmp
into
mov
popa
out
into
cmp
pop
into
mov
pop
pop
lahf
insb
mov
jle
lods
mov
out
rorb
in
inc
shll
ss
xchg
stos
int
adc
ds
ret
sbb
sbb
mov
into
repz
inc
mov
mov
repnz
sbb
movsl
stc
and
pop
add
jp
leave
cmp
std
inc
je,pt
pop
dec
pop
or
push
sub
dec
and
jmp
mov
mov
leave
mov
inc
and
sahf
outsb
jmp
insb
imul
adc
sub
mov
cmpsl
enter
inc
insl
mov
xor
out
push
gs
gs
add
lods
cltd
loop
mov
push
addr16
repnz
les
jo
rol
or
jno
cmp
add
adcl
js
cmpsb
jbe
enter
xor
or
jmp
fmull
push
mov
popf
icebp
pop
rcrb
les
xor
imul
mov
aaa
adc
decl
inc
addl
hlt
dec
enter
pusha
dec
fcoms
pop
jge
sub
push
lods
addr16
test
sti
mov
addr16
push
loope
xlat
cltd
fsubrs
push
dec
inc
inc
adc
in
outsl
cmp
pop
sar
jmp
loopne
insl
pop
mov
lds
les
fs
mov
push
outsl
inc
and
jae
or
sub
int
jno
add
sbb
fcomps
push
xor
or
mov
mov
sub
sbb
xor
sarb
jle
lds
cli
sbb
mov
movsb
and
lret
xchg
xor
xor
fisubs
fwait
xor
fwait
jae
rorb
out
jne
jne
daa
sub
jge
xchg
clc
mov
xchg
lods
pop
pop
repnz
fsubs
dec
testb
not
add
fildll
push
xchg
mov
cli
xor
fnstsw
lock
imul
inc
adc
hlt
inc
cs
push
les
mov
loop
xor
sub
lcall
int
stos
repz
mov
mov
push
jo
pop
ljmp
dec
aam
test
fnstenv
cmp
aas
aaa
cwtl
mov
stos
cmpsl
cmp
pop
push
dec
andb
xchg
sbb
jcxz
push
outsl
xchg
add
das
rorl
cli
push
push
imul
sahf
dec
movsb
pop
push
test
and
negl
xchg
lahf
cmp
cmp
cld
outsl
loop
ds
or
jmp
jbe
subl
out
hlt
ljmp
sbb
pop
sahf
jb
xlat
push
daa
xor
ret
or
mov
mov
stc
sub
or
mov
cltd
mov
clc
sbb
xchg
shlb
or
mov
mov
and
pop
xchg
sbb
ss
mov
mov
test
jp
cmpsb
das
into
aad
aam
dec
aaa
push
jecxz
jbe
imulb
mov
aaa
pop
pop
jle
push
icebp
sub
xchg
inc
xor
test
fmuls
sub
add
ljmp
mov
dec
pop
mov
push
inc
xchg
movsb
jge
insl
out
call
fsincos
sub
pop
cwtl
or
ret
ds
inc
cld
out
jecxz
pushf
lock
popa
mov
inc
sbb
jle
aaa
cmp
lret
fmull
adcb
xor
mov
push
je
nop
adc
hlt
dec
inc
xchg
fwait
jno
stc
dec
popa
loope
jne
shrb
pop
mov
sbb
nop
fwait
cmp
xor
sti
testb
imul
popf
insl
or
inc
lods
xor
jg
adc
movsl
fisubs
orb
push
lods
stos
jns
nop
jl
sbb
ret
pop
gs
test
inc
sbb
sub
shl
add
jne
inc
push
sub
mov
out
fiadds
dec
frstor
sbb
or
rorb
sarl
and
or
test
mov
or
sahf
mov
mov
jne
aaa
mov
arpl
cs
int
stos
or
adc
push
xchg
push
xchg
xchg
addr16
sbb
inc
mov
mov
cmp
mov
or
repz
push
imul
jecxz
das
loop
jae
sbb
loop
cmp
cli
lock
mov
jns
nop
xchg
xorl
push
test
inc
pop
cltd
fisubl
or
in
mov
dec
cmp
cltd
or
scas
pop
mov
or
aaa
push
and
cmp
lret
sbb
push
cmp
jb
jae
pop
push
repz
jno
mov
out
mov
sti
inc
mov
add
sbb
loope
dec
mov
adc
cmpsb
inc
or
dec
fimull
add
addr16
cwtl
test
mov
pop
notl
mov
and
loopne
dec
mov
cld
dec
mov
mov
andl
add
pop
and
ret
or
xchg
movsl
dec
pop
fucomi
sub
mov
sbb
icebp
testb
or
fidivs
inc
jo
lahf
shrl
sub
jb
jo
sbb
mov
rorb
dec
jo
push
testl
cmp
outsb
ja
sub
push
lcall
cmp
popl
inc
pusha
sahf
xchg
push
mov
ret
push
cmpb
loopne
mov
loope
push
sub
ucomiss
cs
jl
push
enter
aam
lds
sub
ds
push
mov
les
jns
sti
iret
cmc
mov
dec
pop
push
xchg
negb
pushf
push
push
jae
cs
lret
or
dec
fldenv
pop
adc
ss
pop
in
cmp
xchg
cwtl
cmp
mov
cmp
sub
scas
adc
out
or
mov
sbb
xlat
sbb
daa
es
popa
jecxz
dec
arpl
insl
mov
stos
and
add
dec
shlb
arpl
sar
std
inc
mov
loope
ljmp
int3
out
lcall
lahf
xchg
out
or
mov
stos
xchg
mov
add
xor
stos
push
fs
xor
push
cmp
dec
cmpsl
xor
repnz
push
jl
test
add
addb
pushf
pop
mov
imul
inc
jbe
into
test
or
push
shlb
or
inc
inc
lods
cmp
fldl
jg
xchg
lret
jne
dec
test
ficompl
cwtl
dec
icebp
mov
movsl
sbb
lcall
jmp
pop
out
jae
adc
aaa
mov
and
adc
sbb
mov
test
jmp
clc
cltd
pop
pop
cmp
in
test
and
test
ljmp
loop
sub
std
xor
out
rcrb
xchg
aad
jnp
and
pushf
mov
into
adc
xor
scas
sbb
aad
aam
pop
adc
movsb
lcall
mov
cmc
push
mov
mov
shr
sub
adc
cmp
test
int
pop
or
mov
mov
ret
sub
fsubp
sub
imul
and
shll
inc
mov
int3
ljmp
arpl
add
sbb
fisubs
pushf
sti
and
loop
in
lea
add
xchg
insl
mov
lods
test
sahf
ret
lcall
sub
xor
insb
mov
lret
andb
jbe
mov
addb
jl
xor
adc
pop
dec
dec
add
xchg
iret
ja
addr16
sub
sub
stos
xor
xor
jge
aad
push
cmc
fsub
or
cmp
pusha
ret
repnz
std
dec
and
dec
fidivl
mov
mov
adc
sub
pop
mov
ljmp
cltd
sbb
sub
call
mov
ja
pop
pop
sub
ljmp
les
xchg
fsubl
sub
dec
loopne
or
andl
je
cmpsb
stc
xor
popf
push
pop
nop
jne
scas
mov
mov
notb
rcll
icebp
fwait
iret
mov
dec
mov
cmp
pop
sub
push
or
lret
ljmp
fidivl
inc
jge
sbb
sub
mov
mov
test
jb
mov
xchg
out
stos
xchg
pop
dec
push
jmp
xor
inc
mov
das
les
enter
out
mov
fmul
and
movsl
jge
hlt
test
subb
xor
and
cmp
pop
adc
je
xor
clc
jmp
faddl
je
repnz
test
pop
pop
pop
sti
sbb
outsl
inc
pushf
add
xor
pop
xchg
stos
mov
popa
xchg
or
cmpsl
xor
cmp
or
mov
cli
pop
xor
pop
shll
lret
jne
rclb
push
das
dec
negl
pop
jl
xor
sbb
and
in
add
jnp
jo
sub
inc
push
pop
dec
mov
adc
xor
cmp
or
std
cs
lret
addr16
gs
ret
and
and
testb
cmp
stos
scas
test
mov
dec
push
and
xchg
mov
loope
das
cli
mov
fcmovbe
out
leave
xor
xor
pop
xor
je
scas
jb
inc
push
inc
and
xchg
ret
ret
test
div
push
cwtl
js
and
jbe
into
push
cmc
push
push
adc
loop
repz
cvtps2pi
cmc
push
js
push
jnp
push
imul
fwait
cli
jo
xchg
mov
xor
ljmp
xchg
sbbb
daa
add
es
cld
fcom
pop
xchg
cmp
aaa
cltd
jno
lret
sar
push
inc
stos
aad
movsl
es
pop
popf
sbb
ljmp
jb
add
sub
and
or
call
pop
and
sbb
outsb
inc
inc
les
lcall
test
jecxz
jge
je
pop
push
test
lcall
nop
mov
ljmp
sahf
mov
push
mov
and
lock
pop
popf
add
mov
pop
stos
setp
add
ret
fidivrs
cs
lret
inc
dec
and
mov
sub
movsl
adc
pop
aaa
mov
jb
ljmp
aam
popf
mov
jmp
fstl
out
and
mov
cmp
ja
fsubl
sbb
xor
pusha
mov
popf
ret
or
xchg
cltd
stc
cwtl
sti
mov
pop
repnz
mov
or
popf
push
lret
call
xor
pop
push
push
and
jns
jnp
inc
cmpsl
dec
mul
push
adc
lcall
adc
shl
xor
clc
mov
ja
in
push
ss
loope
dec
cld
lret
and
in
pop
ja
mov
adc
es
dec
inc
mov
mov
mov
fisubrs
cmp
xchg
jp
cli
jmp
dec
adc
mov
lea
lcall
out
mov
jbe
pop
jne
and
stos
jp
cwtl
sbb
rcl
shll
mov
lahf
push
lret
sub
fstpl
xor
add
bound
mov
cmp
xchg
bound
pop
ljmp
loop
imull
push
popa
jno
mov
pop
les
sbb
jns
push
rorb
push
dec
push
or
mov
dec
push
or
sub
outsb
sub
imul
xor
inc
push
test
xor
cmpsl
sarl
fcoms
sub
sti
and
lcall
pop
mov
xlat
in
sbb
fdivs
daa
dec
sub
mov
xor
push
sarb
int3
in
mov
ja
jl
sub
loope
mov
mov
ljmp
mov
xor
addr16
cmp
xor
cmpsb
sahf
lods
xchg
xchg
ret
out
outsl
jmp
dec
test
mov
in
add
fists
mov
push
cmp
xor
mov
adc
dec
aam
lret
stos
fildll
lods
movsl
pop
shrl
pop
in
cmpb
fisttps
ljmp
jnp
lock
cltd
push
ja
mov
test
out
or
es
sub
cwtl
push
lcall
or
mov
nop
aaa
adc
sbb
adc
daa
and
in
and
pop
jbe
cmp
stos
lock
pop
iret
add
jns
dec
aam
jno
pop
out
out
push
filds
imul
pushw
movsb
jp
das
jg
cwtl
mov
jae
imul
sbb
data16
mov
inc
xor
lds
jl
stc
or
pop
fdivrs
test
xchg
ret
sarb
test
cs
movsb
mov
subl
outsl
loop
push
jecxz
cmp
xchg
inc
xor
cltd
ss
cmp
jmp
lea
out
fadds
mov
jae
xor
mov
xor
pop
mov
dec
dec
dec
jl
push
mov
sbb
mov
and
test
popa
push
sbbl
add
out
stos
bound
mov
xor
movsl
pop
sarb
das
dec
mov
dec
stc
and
movsb
gs
fnstcw
mov
daa
jbe
mov
and
and
dec
popf
mov
testb
inc
xchg
pop
lock
cmpsb
rcrl
dec
cmp
aaa
dec
jmp
mov
jnp
loopne
call
mov
lcall
idiv
in
inc
or
incb
and
adc
inc
push
stc
xor
adc
ss
mov
mov
xor
repnz
xlat
pop
mov
mov
mov
cmp
shll
arpl
add
addr16
pop
inc
lea
push
fstps
sbbb
les
popa
xchg
cmp
shlb
and
xchg
add
jo
inc
cs
aaa
cmp
arpl
mov
loop
shlb
lock
xchg
fcmovbe
mov
sbb
scas
rcll
hlt
fiaddl
sbb
rcrl
movsl
cmp
pop
mov
shrb
stos
mov
fsubrs
fldt
jecxz
xlat
cmp
pop
jnp
sbb
and
cwtl
adc
mov
xchg
inc
lds
sbb
push
dec
mov
and
pop
or
aam
rorb
in
scas
push
mov
and
mov
nop
scas
cmc
pusha
and
xor
adc
out
sub
or
pusha
cmp
out
int
xchg
sti
pop
mov
ja
arpl
pop
mov
mov
adc
stos
cmp
rorb
sbb
pop
mov
mov
pop
xchg
clc
mov
dec
pop
jmp
adc
sbb
cwtl
mov
push
push
xchg
mov
and
flds
addb
lret
jl
outsl
or
lret
data16
pop
insl
mov
ja
cli
mov
xchg
fbld
adcl
shrl
push
lcall
fstpt
pop
arpl
mov
sub
int
pop
jb
popa
aam
xchg
int3
dec
sarb
dec
lock
sub
ljmp
clc
push
je
push
xchg
outsb
xchg
popf
insl
jbe
stc
push
jmp
adc
push
test
push
mov
cmpsb
xchg
xor
mov
push
cmp
cltd
cli
andl
cmp
mov
orl
sbb
es
pop
pop
cmp
pop
imul
xchg
movl
add
ljmp
lahf
out
mov
mov
shlb
adc
inc
icebp
jmp
dec
les
in
xchg
subb
pop
imul
mov
or
adc
outsl
pop
shll
xor
dec
mov
and
out
outsl
xchg
sub
outsl
mov
inc
jp
pop
imul
inc
cmp
popa
mov
repnz
out
and
mov
push
xchg
inc
pop
je
and
ds
cmp
fwait
push
ja
movsl
mov
cmp
int
cmc
or
inc
and
adc
fldcw
cmp
jl
lahf
adcb
ret
sub
int
xor
or
mov
push
out
mov
stos
enter
sbb
decl
push
scas
jae
jg
enter
cmp
inc
loopne
insl
push
xor
ja
mov
jmp
in
jp
sbb
outsb
mov
dec
inc
mov
pop
xor
mov
bound
test
aad
scas
push
mov
stos
mov
jg
sub
mov
jl
data16
fsubl
inc
movsl
inc
lods
dec
mov
jne
out
jnp
pop
and
jo
cmpl
loopne
add
movsb
cmp
jo
loopne
jle
aad
mov
and
cli
mov
movsb
and
adc
pushf
repnz
push
aaa
xchg
jp
pushf
sbb
mov
cs
jb
int3
call
int
adc
fsubrl
sti
and
xor
fucomi
movsl
xor
mov
and
in
mov
jp
pop
sub
lcall
jp
xor
push
dec
sub
inc
loop
push
cld
insl
or
imul
xor
pusha
jecxz
jo
jg
imul
std
jp
test
scas
outsl
dec
aas
call
jb
insb
adc
jae
popa
add
mov
in
cmp
ja
mov
dec
mov
push
and
nop
or
out
popa
ficoml
adc
sub
dec
or
outsb
aam
sahf
push
fildl
push
cmpsl
and
cmp
sbb
inc
or
lret
repnz
shl
adcb
and
cmpsb
dec
test
int
fldcw
push
fistps
jge
dec
insb
xchg
aas
inc
cmp
adc
jae
cmp
fcomi
dec
jne
xchg
adc
fsubl
mov
mov
adc
cmp
cmp
pop
iret
je
xchg
mov
jnp
lcall
cld
sbb
sbb
hlt
mov
mov
fstl
pop
sbb
add
mov
xchg
inc
outsl
xchg
jg
popa
std
bound
sar
adc
sub
pop
push
cmpl
xlat
cmp
mov
fwait
xchg
imul
ficoml
xor
cmp
push
mov
jnp
shll
adc
lret
mov
lock
daa
jecxz
sub
push
xchg
mov
sub
dec
cmp
popa
fimull
xchg
xor
mov
and
push
je
sbb
idivb
adc
push
add
ss
in
mov
adc
jg
pop
xchg
test
outsb
push
push
push
pop
test
scas
mov
sbb
loop
into
mov
push
jne
push
cs
shlb
push
dec
lahf
lret
mov
push
test
por
loopne
xchg
ja
mov
nop
jno
idiv
out
pushf
outsl
stos
or
insb
fmull
lcall
fstps
lcall
cmp
sbb
push
scas
flds
or
jmp
call
js
or
daa
push
and
jb
add
and
jo
js
mov
push
test
adc
adc
ljmp
mov
push
insl
loop
rclb
or
push
xchg
iret
pop
fldt
sub
xchg
pushf
or
and
cmpsl
jbe
rolb
sub
aaa
jno
test
std
in
or
sahf
adc
mov
cmc
and
lds
cwtl
shrb
outsl
pop
repnz
or
fidivs
cmp
xchg
test
mov
repnz
adc
jg
add
push
das
gs
lods
jecxz
push
push
mov
ds
and
adc
ret
and
repz
enter
aaa
repnz
int
cld
xchg
ss
mov
jle
stc
pop
aad
stos
mov
mov
popa
ret
mov
xorb
dec
sbb
cld
fsubr
push
push
movsl
dec
push
sub
andb
pusha
mov
mov
xchg
outsl
adc
mov
test
andl
pop
jno
mov
cwtl
jp
sbb
sbb
movsb
movsb
imul
clc
xor
dec
inc
jne
sbb
pop
or
and
sub
lahf
daa
inc
mov
jne
insb
je
je
xchg
adc
or
adc
orb
insb
test
adc
jae
push
rcl
adc
lcall
adc
popf
mov
add
lret
xorl
or
dec
popa
xor
xchg
mov
in
push
fcoml
rcll
ljmp
mov
sbb
andb
std
icebp
movsb
daa
dec
mov
and
in
jne
stos
mov
and
pop
sbb
ljmp
call
and
shrb
call
cmpsl
dec
aaa
cwtl
lea
ds
mov
mov
push
addr16
adc
or
push
rorb
mov
sarb
and
cmp
enter
jb
push
sbb
push
push
test
mov
inc
aad
jno
cmp
adc
pop
test
adc
ljmp
gs
and
sti
add
cwtl
in
cs
ljmp
mov
jns
test
jb
repz
mov
or
movsb
mov
inc
lcall
cmp
push
push
cltd
lods
cmp
stos
xor
xor
or
in
aam
jne
mov
and
dec
add
clc
xor
and
lods
xchg
out
aad
cmp
mov
inc
repnz
stc
std
push
pop
cmp
jnp
aad
sub
leave
int
ljmp
nop
sarl
sub
call
loop
sub
out
mov
nop
sub
pop
ja
fwait
cld
xchg
subl
adc
scas
popa
jno
pop
add
add
mov
mov
pop
jle
jmp
and
mov
cltd
pop
adc
add
push
inc
imul
or
mov
or
enter
int
clc
lret
mov
gs
mov
mov
mov
hlt
mov
in
loopew
xchg
movsb
imul
icebp
ss
popf
or
bound
dec
inc
movsb
xor
add
aam
pop
stos
adc
outsl
fadd
das
or
mov
xchg
insl
aaa
bound
jne
gs
adc
pop
pushf
mov
xchg
push
lea
mov
jg
jnp
xor
sub
pop
mov
cmp
xor
adcl
addb
ds
stos
jae
es
push
gs
aam
or
cli
mov
sub
ljmp
mov
pop
rcrb
ret
cmp
push
ret
cmp
cwtl
pusha
addr16
xchg
insl
inc
mov
rcrb
dec
outsl
or
roll
xchg
stos
stc
fwait
je
pop
gs
shrl
adcb
stos
or
pop
bound
in
pop
push
inc
jl
push
or
outsb
pop
jg
pop
mov
iret
push
inc
push
out
mov
adc
sub
shrb
addr16
sub
xchg
mov
push
mov
pusha
insb
dec
cli
mov
push
loopne
adcl
xorb
sahf
jle
push
pop
insb
ljmp
pop
iret
mov
mov
jbe
insb
push
pop
in
faddl
add
mov
xchg
pop
or
repz
ret
rcl
into
mov
inc
cmp
cmp
and
mov
adc
sbb
repz
lock
fwait
mov
das
push
into
pusha
cmp
shrb
movsb
daa
and
nop
cmc
xchg
xchg
mov
arpl
cmp
das
jno,pt
sbb
cwtl
mov
hlt
xchg
push
inc
js
aaa
sarb
je
and
enter
adc
inc
mov
jmp
mov
sub
xor
adcl
pop
js
dec
sub
adc
xor
jb
or
mov
inc
or
jbe
push
fisubrl
sbb
fidivl
inc
cwtl
call
adc
fiaddl
adc
ja
bswap
push
aad
push
cwtl
ja
add
sarb
pop
inc
cmp
sbb
mov
lahf
xchg
cmp
or
jo
int3
push
sbb
pop
repz
push
sti
mov
out
je
push
add
sarl
dec
pop
cld
loopne
sub
push
jle
dec
sub
jg
mov
mov
xchg
pop
shrb
jle
scas
gs
jl
mov
jns
mov
mov
mov
inc
jno
xchg
movsb
stos
mov
leave
push
pop
bound
mov
pushf
into
clc
sbb
out
mov
adc
or
fcompl
dec
sub
insb
negb
insb
xchg
mulb
test
xchg
sbb
aam
aas
xchg
inc
push
outsl
push
jbe
push
mov
adc
testl
dec
test
mov
pop
repnz
lock
jmp
mov
push
pop
pop
xchg
rolb
inc
add
mov
iret
xor
mov
xorl
mov
ret
mov
mov
mov
mov
mov
gs
push
subb
pop
loopne
dec
mov
pop
jge
cmpsl
sarl
xchg
arpl
mov
rolb
xor
dec
cmp
ljmp
les
inc
sbbb
dec
adc
mov
cmpsl
mov
popf
rol
jecxz
xor
daa
jno
mov
cmp
sub
xor
cld
sub
inc
rdmsr
mov
pop
lret
aam
add
inc
testl
mov
xchg
lahf
mov
loop
fucomp
bound
add
fldcw
and
imul
daa
dec
jmp
sbb
aas
or
fistpll
addr16
stc
xchg
sbb
sub
insb
es
cmpsb
popa
pusha
mov
je
enter
lcall
xchg
dec
mov
jns
imul
fcomps
into
ds
pop
in
or
dec
lods
xchg
lret
out
add
les
mov
pushf
fucom
das
and
mov
into
push
xchg
sbb
test
ret
adc
and
jo
repz
js
sbb
ljmp
shlb
xor
xor
shlb
scas
ret
shr
aad
cmp
out
addr16
inc
inc
jo
cmp
sbb
sub
sbb
enter
sti
add
cs
jl
testb
mov
adc
dec
aad
push
sbb
leave
push
adc
cmp
stos
xchg
cmp
push
inc
xchg
jns
stos
sbb
lret
fsts
repz
addr16
in
hlt
fwait
adc
jae
fcomps
pop
jmp
imul
jle
lahf
inc
cmpsb
shrb
shll
lahf
enter
lods
push
push
imul
ljmp
pushf
imul
ret
pop
jb
pusha
movsl
bound
nop
mov
add
mov
inc
and
mov
sub
fdivrs
mov
xor
cmp
xor
xchg
jcxz
dec
push
rorl
xor
mov
addl
adc
xchg
loope
inc
xor
mov
pop
in
add
or
add
or
out
xor
stc
xchg
icebp
inc
sbb
ret
imul
icebp
jbe
push
add
fsubl
mov
inc
jns
add
jmp
add
jg
ja
pop
jns
mov
xor
inc
shrb
mov
out
test
adc
pop
out
lds
sbbl
lahf
lcall
sbb
mov
mov
sub
stos
das
subb
adc
mov
or
inc
insl
inc
cmc
popf
xor
loop
int
out
sub
push
loop,pn
cmp
movsb
sub
pop
sub
push
push
jbe
xchg
outsl
inc
pop
xor
arpl
lods
inc
stos
stos
insb
jmp
xchg
fisubrl
xchg
lahf
pop
cltd
or
cmpsb
test
pop
icebp
lea
xor
push
ret
sahf
inc
mov
andb
das
lods
mov
in
push
jo
or
aam
sub
mov
or
add
lret
mov
outsb
subb
out
sbb
inc
and
aaa
aam
and
mov
mov
je
lods
jp
xor
xchg
mov
stos
nop
notb
push
test
sahf
bound
pop
pop
out
std
sahf
add
push
push
xor
cmp
sti
mov
mov
bswap
test
nop
inc
jae
fistpl
test
mov
mov
add
lds
movsl
notb
cmp
jbe
jnp
mov
js
mov
mov
icebp
rcrl
mov
movsl
rclb
adc
inc
sub
mov
jmp
pop
enter
dec
notb
push
or
jnp
sub
inc
jp
lods
call
mov
pop
insl
push
test
xchg
es
lcall
jb
icebp
and
add
mov
add
fnstsw
sbbl
pop
mov
ret
inc
cmc
cmp
xor
daa
jecxz
mov
adc
jmp
std
xor
push
xor
mov
mov
mov
ljmp
mov
jnp
jo
popl
mov
xor
daa
mov
xor
sbb
adc
and
call
fucomp
add
sub
inc
add
test
in
test
ja
or
inc
out
add
pusha
pop
sub
pop
movb
fsubs
test
cld
movswl
mov
adc
jle
pop
daa
jle
mov
xor
jnp
mov
popf
inc
lret
and
pop
jne
add
sbb
out
addr16
xorb
not
mov
loope
or
int
jp
jge
out
inc
pop
pop
enter
ljmp
push
lea
mov
and
cmpsb
mov
mov
pushf
add
pop
in
iret
push
ret
aad
adc
arpl
stc
pop
repz
mov
imulb
push
aaa
pop
sahf
faddp
fnstsw
les
mov
mov
enter
xchg
cld
ror
push
add
lods
fmuls
push
scas
ret
cmp
xor
das
call
inc
sub
jne
insb
cmp
les
jne
insb
pushf
xchg
cli
xlat
mov
es
ucomiss
inc
sbb
mov
insl
loop
in
sbb
mov
daa
imul
daa
inc
pushf
pop
repnz
lret
jne
lahf
cli
push
mov
inc
call
in
mov
out
inc
or
negb
xor
mov
xchg
aaa
sub
mov
xor
sbb
test
mov
dec
clc
inc
jg
sub
fiaddl
xor
icebp
adc
xor
adc
jnp
push
mov
lea
adc
fisubs
or
js
sar
add
and
in
call
and
pop
mov
fidivs
lds
dec
xor
cwtl
ja
fwait
lahf
sti
inc
xchg
jecxz
imul
mov
neg
insl
or
out
movsl
in
out
cmpsl
lea
outsl
xchg
rolb
and
cmp
mov
adc
loope
mov
push
jle
xor
lcall
xchg
and
sub
fstps
rorb
cmp
jp
daa
fdivs
sahf
mov
sahf
mov
pop
cmpsl
sub
loop
pop
pop
pop
jge
lcall
push
movsl
call
sub
into
and
inc
stos
sub
push
xor
push
hlt
inc
arpl
mov
loop
rolb
cmp
sub
pusha
jnp
negb
aam
mov
orl
push
enter
leave
jne
xor
mov
pop
mov
or
fcmove
xor
xor
mov
and
sahf
enter
adc
movsl
test
int3
sahf
or
xor
sub
push
fwait
or
cmp
addr16
loopne
js
sub
sarl
pop
xchg
mov
test
sub
jnp
daa
fucomi
or
push
into
xor
mov
scas
inc
mov
mov
xor
jge
pusha
fsubl
roll
fbstp
cmp
mov
push
inc
sbbl
ljmp
scas
lcall
notb
fistpll
lock
rcll
cmp
push
icebp
adc
adc
jb
fsubrp
xchg
pop
mov
stc
inc
adc
adc
adc
popf
cld
repnz
gs
aas
mov
out
mov
pop
aad
push
test
adc
cmp
pop
divl
js
inc
jae
hlt
inc
dec
in
sbbb
jbe
pop
sub
sub
sbb
xchg
hlt
sbb
jo,pn
cmp
ja
loop
jle
adc
dec
add
cmpsb
imul
or
aam
xlat
sub
mov
lret
cmp
push
and
jmp
mov
jmp
add
pushf
jae
in
fcomp
cs
sub
lods
in
jns
xchg
and
and
inc
jns
nop
test
xrelease
and
inc
xor
loopne
sahf
inc
push
outsb
icebp
inc
cmp
jmp
xor
pop
in
hlt
mov
mov
pop
movsl
int3
push
into
bound
adcl
mov
dec
inc
and
mov
sub
dec
xchg
push
sbb
jmp
mov
mov
pop
pop
sbb
jb
orb
andb
add
push
jno
sahf
jg
push
push
sub
aam
sbbl
xlat
cmp
push
jns
js
adc
jae
inc
iret
mulb
xor
adc
xchg
inc
xchg
pop
push
push
mov
mov
lahf
test
fyl2x
insl
ds
mov
test
scas
dec
sbb
jle
out
sub
adc
or
inc
outsl
pushf
outsb
bound
imul
repz
dec
pop
mov
dec
xor
inc
lds
jnp
push
or
or
out
les
incl
fldcw
loop
callw
sbb
adc
out
xor
xlat
push
ret
std
sbb
xor
push
fwait
mov
shlb
jb
out
and
test
repnz
addr16
mov
mov
pop
data16
sarl
mov
gs
mov
jge
aaa
sahf
bnd
inc
and
sar
mov
icebp
xor
push
cmp
xor
mov
leave
mov
pop
popa
leave
aaa
mov
jl
sbb
out
push
fcoml
leave
stos
inc
stos
inc
pop
xchg
xor
add
sub
movsl
pop
pop
jbe
movsl
into
xchg
mov
lcall
mov
loop
in
pop
movsl
repz
xchg
adc
lods
in
pop
rorb
cmp
inc
pop
mov
add
popa
hlt
cmpsl
outsl
aam
jbe
jecxz
xor
repz
lods
mov
jecxz
fidivrl
pop
flds
sti
xor
loop
push
xor
pop
mov
lcall
xor
lcall
jno
rclb
dec
pop
test
mov
aas
les
in
lods
ss
mov
faddp
pushf
mov
pop
mov
pop
xchg
adc
xchg
xchg
adc
int3
mov
mov
jmp
movsl
inc
addr16
jp
or
mov
dec
arpl
xlat
cmp
xor
inc
or
arpl
cmp
fucomi
mov
mov
pop
icebp
bound
sbb
fcoms
xchg
xor
add
lods
dec
inc
push
mov
dec
or
out
gs
dec
mov
jb
adc
dec
xor
and
jle
mov
push
and
mov
cmpsl
lretw
js
and
fdivr
inc
jbe
dec
mov
xor
bound
xchg
sti
outsl
std
adc
pop
mov
jl
movsl
les
out
sub
xor
cmp
jmp
lods
fs
mov
rorb
mov
mov
sub
dec
push
out
push
pop
std
movsl
or
cld
nop
jo
shrb
jp
inc
fwait
pop
or
jl
sbb
outsl
jno
mov
shrl
test
enter
ja
jae
out
rol
jns
mull
lds
mov
shlb
lret
call
jne
sub
movsb
adc
aam
cmp
lods
pop
mov
mov
icebp
dec
lret
push
fwait
cmpl
insl
sbb
pop
aam
sbbl
mov
rcl
cwtl
adc
pop
shlb
scas
das
mov
neg
jle
adc
cwtl
cmpsb
mov
inc
sbb
or
jmp
jnp
lcall
popf
sub
int3
mov
mov
mov
push
jl
jb
mov
loope
push
or
push
add
insl
repz
or
mov
repnz
mov
adc
dec
dec
pop
xor
stos
shl
cltd
dec
decl
enter
enter
pop
ja
out
cld
dec
repnz
jge
inc
shrb
jle,pt
jp
jg
jg
sbb
jecxz
pop
hlt
mov
xchg
pop
sub
add
das
mov
pop
lds
aas
sub
aas
pop
sbb
pushf
pop
sub
repz
lds
shll
or
add
icebp
add
ret
sub
push
out
out
adcl
lds
or
insb
jbe
sahf
popa
push
pop
cmp
cmpsb
jmp
imul
gs
and
dec
mov
inc
sahf
and
dec
into
pop
push
pusha
sbb
cmp
pop
jno
mov
cmovge
cmp
aam
add
mov
sarb
out
adc
rcrb
lods
xor
fwait
loopne
lret
mov
xchg
sub
sarl
mov
or
inc
ret
scas
pop
inc
fldenv
pop
and
rolb
lahf
and
dec
insl
jmp
add
push
pop
pop
cltd
adc
lcall
movsb
jnp
xor
scas
pushf
or
cltd
data16
mov
fcmovnbe
lret
push
adc
in
inc
je
add
xchg
mov
jne
cld
jns
and
xchg
iret
or
pop
adcb
xor
xchg
outsb
aam
ret
xchg
sarb
dec
cmp
push
leave
ja
lea
ret
push
test
inc
in
rcll
add
push
je
inc
xor
sbb
out
sbb
dec
scas
mov
mov
adc
mov
sbb
test
pop
add
aam
test
inc
mov
out
jns
rcr
test
sbb
lret
out
push
cmp
push
jg
loop
insb
and
and
cmp
xlat
fwait
and
and
mov
or
push
sti
daa
jg
aas
cmpsb
popf
mov
mov
push
cmc
movl
or
xchg
adc
add
pop
arpl
add
ret
mov
and
pop
out
imul
jg
roll
push
test
xchg
cli
and
outsb
jbe
xchg
add
faddp
fildll
ffreep
nop
xor
int
std
dec
inc
jle
ficomps
test
jge
aas
inc
sub
aas
add
imulb
inc
dec
and
or
outsb
loope
roll
sub
pop
aad
sbb
mov
cli
lock
movsb
dec
xor
call
xchg
adcl
gs
cmp
fisubrl
mov
cwtl
sub
or
pop
jns
aam
sti
and
jg
es
rorl
push
or
sbb
mov
push
or
mov
jne
pop
pop
adc
ret
stos
mov
lahf
or
movb
jl
pop
movsl
dec
lods
dec
add
negl
or
inc
adc
xchg
sub
scas
sti
mov
and
push
dec
mov
mov
stos
xchg
sub
xchg
mov
popf
in
das
loop
or
adc
mov
daa
mov
sbb
pop
push
rclb
mov
xchg
sbb
jns
fistps
mov
pop
adc
icebp
xchg
or
push
dec
push
lods
icebp
mov
inc
stos
and
mov
adc
mov
mov
jl
les
icebp
in
insl
mov
jg
or
jmp
test
mov
loop
dec
sbb
sbb
addl
push
sahf
xchg
sar
roll
das
fwait
sbbb
ss
mov
ljmp
or
iret
jno
loope
fstpl
data16
daa
hlt
jne
push
inc
aam
dec
fadds
sti
mov
outsl
int
repnz
imul
pusha
push
and
adc
js
les
rcll
add
pop
cltd
pop
lods
or
pop
lods
cmp
inc
daa
lahf
hlt
enter
outsb
push
mov
out
scas
je
cld
enter
rcrl
repz
mov
hlt
xchg
mov
leave
sarb
add
jnp
dec
notl
out
or
sbb
mov
loopne
movsb
sbb
outsb
movsb
dec
push
popa
xor
fwait
cmp
xchg
movsl
push
xchg
imul
dec
cmpsb
aaa
ds
pop
into
test
ror
mov
addr16
push
cmp
xchg
add
cmpsl
xor
or
mov
ret
mov
enter
mov
push
mov
mov
jne
imul
cs
int
push
push
rcrb
sub
or
lods
enter
arpl
push
int
push
cmp
lahf
push
or
out
test
mov
fbstp
jo
jnp
aam
jg
mov
and
push
and
add
mov
mov
push
and
add
cmpsl
dec
out
stos
dec
jmp
and
pushf
ret
cs
push
dec
int
int
out
aas
cmp
adc
add
ficoms
stc
push
fsubr
sti
mov
into
add
pop
cmpsb
es
mov
in
mov
aas
xor
sti
add
or
xor
mov
rolb
cmp
sub
lods
jge
call
lea
adc
jge
dec
loope
pop
push
pop
inc
hlt
add
push
andl
jo
push
stos
out
jnp
lods
cwtl
mov
push
jge
stos
dec
icebp
jl
scas
jns
xor
scas
idiv
movsb
jno
popf
adc
in
mull
xchg
pop
dec
out
div
daa
pop
push
shll
int3
les
test
cli
and
int
inc
out
jns
mov
insl
jl
shrl
push
mov
out
mov
jmp
push
popf
addr16
and
xor
lcall
mov
and
aam
mov
lea
dec
mov
lds
setno
jno
loopne
cli
pop
mov
fwait
movsl
cmc
and
jb
aam
fs
add
jo
mov
sahf
xor
cmp
or
cld
jnp
pop
pop
pop
lock
rcrb
mov
dec
inc
lods
mov
add
sbb
or
pusha
jp
and
pop
xor
jbe
sbb
or
cld
ljmp
mov
fmuls
call
cmp
and
xlat
jle
bound
mov
addr16
in
out
sarb
mov
sbb
mov
fnop
xchg
icebp
cmp
dec
xor
inc
add
push
pushf
out
mov
jle
sbb
sbb
imul
xlat
lcall
jmp
or
push
test
adc
mov
cmp
jg
sahf
out
rcrl
shll
jb
mov
out
int
out
mov
mov
popa
mov
inc
push
inc
sub
mov
dec
orb
lods
xor
fstpl
repnz
lea
inc
sbb
out
add
pop
call
das
dec
xorl
dec
lcall
enter
xor
mov
inc
nop
mov
dec
lret
xor
dec
loope
mov
sbbb
jbe
sub
add
xor
out
sbbb
xor
aam
js
es
sbb
aam
fimull
cmp
incb
idivl
scas
jge
push
out
dec
std
mov
cmp
sub
dec
cmpsl
xor
rcll
insb
cmpb
clc
fincstp
and
mov
mov
popf
or
mov
mov
ljmp
nop
sbb
mov
nop
add
mov
sti
xor
jmp
lods
ror
or
andl
xchg
mov
mov
inc
sbb
dec
sub
mov
pop
fldenv
jle
iret
lods
xchg
cmp
jecxz
and
sbb
fdivrp
dec
fs
mov
mov
jecxz
push
lcall
xor
rcll
dec
icebp
jne
mov
xor
jno
std
inc
lock
xchg
sbbb
stos
insl
leavew
cmp
test
clc
push
loopne
pusha
and
pushf
test
pop
jnp
xor
jg
testl
das
hlt
xor
jl
decb
adc
mov
ret
mov
stos
roll
mov
rorl
mov
test
stos
cmpl
fsub
push
pop
movsb
sub
std
adcl
xor
repnz
mov
jge,pt
push
mov
xor
cltd
sub
push
js
das
fs
sbb
and
es
rcl
popf
ret
xor
add
push
in
cmp
mov
dec
sbb
push
loop
dec
push
incl
leave
ljmp
lret
pop
lods
aad
mov
inc
pop
in
cli
sbb
sub
mov
imul
dec
xchg
cmp
jle
test
js
fisubrl
push
mov
das
mov
fucomi
into
push
fcomi
mov
dec
mov
xor
push
add
cmpb
add
and
xchg
mov
sub
mov
test
pop
addr16
lcall
lock
daa
lods
icebp
adc
aad
mov
out
inc
mov
je
push
pusha
insb
hlt
or
sarb
stos
fs
xor
cmp
dec
adc
mov
lahf
sub
out
xor
out
fs
cmp
push
faddp
out
es
inc
inc
pop
push
jae
ret
and
cmpsb
xor
outsb
fs
mov
push
mov
xchg
into
mov
or
imul
test
jns
or
cmpsl
mov
and
ljmp
inc
xchg
inc
stos
mov
clc
jbe
mov
lret
mov
mov
xchg
jae
ret
push
popf
mov
cmc
sub
ljmp
shrl
dec
imul
ss
aas
or
negb
std
sbb
scas
cld
xchg
dec
pop
sbb
ret
mov
cmc
insl
rolb
and
xchg
and
ret
jns
dec
sbb
mov
test
add
incb
cmp
int3
mov
dec
sub
push
stos
mov
jo
add
xchg
inc
shll
test
push
push
and
push
sub
nop
adc
outsb
data16
push
in
push
int
jge
ja
divl
stc
call
cmp
jbe
gs
lret
inc
loop
cli
movsl
leave
push
xor
lock
xor
fcoms
shrl
mov
test
dec
and
and
and
outsl
fnstcw
cmp
push
pop
dec
call
sti
pop
movsb
sbb
sarl
mov
adc
dec
mov
popf
add
mov
hlt
mov
cmp
pop
sbb
ljmp
iretw
cmpsl
cs
jnp
bswap
mov
mov
lods
inc
dec
ret
fists
fisubrl
rcrl
roll
insl
loop
adc
ljmp
sbb
jnp
popa
jp
jae
or
les
mov
pusha
adc
fdivp
push
adc
imul
in
cli
mov
jg
jo
and
or
lahf
movsb
mov
mov
xor
loop
and
push
add
inc
sub
jae
mov
mov
sub
movsl
pop
push
push
std
add
xchg
push
das
inc
xchg
scas
insb
mov
notb
stos
adc
out
cmp
mov
cmp
bound
int
jnp
loope
mov
shlb
je
pop
es
popf
pushf
cli
inc
inc
out
xlat
or
movsl
sub
mov
sarb
xor
add
add
es
xor
mov
jp
dec
cmp
loope
cmp
or
loopne
call
rolb
out
jo
xchg
fwait
test
fdivrl
pop
outsl
sbb
mov
ret
fidivrl
xor
mov
lods
push
cli
and
mov
jbe
xchg
cld
pop
cmp
insl
mov
inc
sahf
pop
sbb
in
jb
jg
cmp
pushf
dec
cs
pop
lcall
push
push
xchg
pushf
pop
inc
push
outsb
aam
dec
jge
pop
mov
sbb
xchg
sbb
jle
jns
pop
mov
divb
dec
or
add
dec
jg
aaa
mov
data16
icebp
ljmp
andl
sub
les
jecxz
mov
push
pop
sbb
xor
xchg
mov
or
adc
lods
jbe
pop
notl
xorb
inc
mov
popf
fcoml
xor
frstpm(287
pop
sahf
mov
test
xchg
mov
push
sahf
pop
cld
adc
mov
and
mov
xor
or
dec
dec
sbbb
les
out
repnz
push
enter
repz
mov
push
push
mov
and
out
call
cmp
das
sbb
pop
repnz
pop
mov
mov
sub
aas
bound
xor
inc
pop
fs
std
arpl
inc
enter
ds
fcoml
xlat
imul
jb,pt
imul
xchg
mov
rcrl
push
enter
shll
cmp
and
lea
popa
mov
mov
syscall
das
pop
movsl
ret
and
dec
sbb
lahf
inc
xor
push
and
cmpsb
push
sub
cld
pop
mov
cmpsl
out
fldl
xlat
adc
xor
inc
inc
push
scas
out
inc
sahf
mov
jno
sub
and
loop
adc
test
out
int3
mov
aad
xchg
pop
popf
xchg
adc
jne
mov
adc
lods
dec
repz
push
sub
push
push
shl
mov
xchg
movsb
aaa
push
popa
shlb
push
mov
cld
sbb
test
sub
or
mov
jmp
ret
dec
pop
jns
enter
mov
je
aas
fwait
les
push
sub
xor
pusha
aas
frstor
fisubrs
sub
shll
mov
ret
jl
scas
adcl
pop
pop
loop
daa
mov
jae
jmp
sti
test
inc
mov
mov
jle
adc
adc
mov
loope
and
mov
sti
imul
insl
repnz
sbb
loope
out
test
sub
stos
les
shrl
and
mov
mov
mov
sbb
cmp
fcoml
pcmpgtb
mov
mov
aad
sti
dec
xor
scas
stos
pop
cwtl
add
inc
test
push
cmpl
jge
iret
shl
add
dec
gs
jns
insl
push
inc
loop
adc
call
outsl
aaa
ds
sub
bound
lock
out
mov
stos
dec
fistps
js
test
ficoml
xor
xchg
cmp
jno
cltd
mov
jle
or
aad
dec
jae
mov
sbb
jl
push
notl
js
jb
enter
sub
pcmpeqb
les
outsl
sub
pop
mov
and
sub
push
movsb
and
sub
xor
xor
ret
jbe
outsb
and
cli
imul
test
sar
mov
xor
fwait
mov
pop
lahf
cmpsl
shlb
fcmovbe
add
icebp
frstor
lock
add
imul
jae
test
adc
push
mov
sbb
xchg
bnd
add
pop
fnsetpm(287
outsb
bound
mov
shll
mov
mov
sbb
cltd
hlt
sti
inc
adcl
xchg
dec
sbb
scas
addr16
loope
adc
dec
push
push
pop
sahf
shll
dec
add
mov
mov
loop
sbb
xor
fstpt
out
fcompl
push
jo
jmp
mov
ljmp
adc
lods
aaa
stos
pusha
xor
int3
mov
cltd
leave
and
mov
mov
pusha
hlt
xor
adc
imul
mov
fiaddl
call
js
jmp
push
insb
cmp
adc
lds
adc
xchg
jge
mov
inc
adc
adcl
sahf
jl
dec
popa
in
test
xor
lahf
xor
daa
daa
dec
out
mov
or
test
push
aaa
mov
xchg
sub
xor
movsl
and
push
push
push
jbe
push
lret
les
jbe
fsubrp
xchg
lcall
cmpsl
jmp
jo
pop
jb
ds
sub
jcxz
pop
lahf
xchg
outsl
sub
and
mov
mov
sbb
es
dec
mov
lret
pop
leave
inc
mov
pop
insb
and
push
in
push
dec
nop
loop
pop
sbb
loopne
sub
pop
rcr
or
cltd
inc
ja
iret
jns
adc
cmc
cmpsl
das
loop
lods
test
jne
xchg
cltd
jnp
cld
add
jne
dec
orl
and
push
push
or
psrld
fwait
push
popa
icebp
mov
or
in
jl
dec
inc
out
ljmp
popa
mov
je
jnp
aad
mov
or
jno
imul
fstps
mov
jno
loopne
add
adc
in
inc
js
movsb
into
ret
dec
pop
xor
jne
or
daa
cmp
in
adc
push
stos
jge
jns
cs
ja
dec
lret
xchg
sbb
sub
dec
hlt
mov
add
ss
xchg
lret
cld
adc
movsl
jp
pusha
dec
and
lock
pop
popf
cli
fdivrs
ja
push
ficomps
in
gs
inc
rcr
xchg
sub
cmp
mov
hlt
ret
jl
xchg
dec
mov
nop
xchg
sbb
cli
push
sbb
ss
pop
ds
cli
bswap
xchg
loopne
insb
and
inc
mov
imul
adc
outsb
subb
dec
cmp
and
mov
idivb
pusha
mov
inc
add
iret
jb
push
mov
cmp
cmpsb
cmc
repz
sbb
scas
jle
emms
lahf
mov
inc
out
mov
gs
cmc
into
xchg
std
and
in
cmpsl
or
and
mov
cmc
pop
lahf
cmp
lock
inc
in
inc
xor
sbb
xchg
jo
push
jns
cmpsl
repnz
cmc
jo
mov
cmp
test
mov
ds
imul
mov
lock
test
mov
pop
hlt
out
aam
xchg
lret
mov
pop
inc
jne
dec
sub
lods
sbb
xchg
dec
and
bswap
fmuls
mov
into
fsubrl
sbb
daa
adc
popa
push
and
bound
xor
in
aas
mov
repz
je
xlat
mov
mov
jae
dec
or
sbb
mov
arpl
push
add
mov
iret
sbb
push
push
pusha
sbb
mov
pusha
and
rorb
aaa
mov
lahf
dec
push
sbb
shrb
adc
push
fs
inc
mov
mov
push
iret
adc
stos
in
add
jecxz
icebp
pop
inc
stos
sbb
daa
jg
add
push
jecxz
and
dec
frstor
mov
and
and
mulb
sarl
je
stc
icebp
ret
aam
insb
jge
jmp
jae
mov
mov
push
rolb
mov
pop
inc
out
jo
push
sub
ror
mov
sub
adc
mov
mov
jno
mov
movsb
xchg
out
inc
jle
push
pop
xor
push
gs
jne
mov
push
inc
nop
cmp
fsts
mov
or
mov
popf
and
cmp
inc
mov
lock
sbb
sbb
jo
push
call
xchg
lahf
adc
jb
pop
push
mov
das
dec
pop
adc
xlat
fstl
xchg
sub
cmp
hlt
fldl
je
ja
or
adc
ficoml
insb
pop
adc
ljmp
fbstp
and
mov
push
dec
loop
sbb
pop
mov
call
insb
jne
push
daa
mov
push
stos
fstpl
pop
jb
pop
jne
out
cld
xor
mov
scas
jg
sub
or
jae
cmc
cmp
add
in
jnp
push
cmpsl
jnp
inc
mov
sbb
inc
lock
dec
lock
sbb
stos
cld
sub
jmp
movl
sub
jg,pn
cmovs
and
adc
aad
cmp
imul
inc
stc
xchg
inc
ror
fwait
pop
mov
roll
pop
loope
inc
xor
divps
and
pop
aam
lea
jnp
out
add
push
sub
in
cmp
add
out
push
push
add
in
js
lods
scas
mov
and
mov
cmp
cmp
pop
icebp
inc
xor
and
loope
lods
pop
dec
insb
clc
jge
jmp
xchg
mov
xor
mov
cmpsl
pop
loop
jae
pop
jp
xchg
dec
adc
movsb
xchg
aam
insb
add
add
sub
jmp
out
mov
pop
inc
push
rcrl
xor
fs
sarl
and
xor
or
xchg
adc
ficompl
pusha
mov
sbb
outsl
nop
xchg
lret
xchg
and
mov
dec
cli
add
cmc
cwtl
cmpsb
fwait
jle
out
inc
jne
lret
sti
jecxz
add
rclb
rorb
pop
mov
sbbl
sbb
dec
mov
sub
adc
xchg
outsl
adc
adc
jmp
xor
mov
clc
xor
adc
int
add
es
mov
cmc
sbb
imul
out
fnsave
out
xlat
out
and
leave
ljmp
mov
pop
sahf
in
pushf
sub
dec
push
cmp
jae
jo
gs
add
inc
inc
pop
mov
cltd
ret
aad
mov
fimull
mov
sub
sbb
push
mov
in
clc
push
sbb
fsts
andl
dec
adc
add
xor
daa
cs
loope
repz
iret
fwait
mov
shll
rcll
mov
mov
stc
push
cld
les
shlb
jae
mov
mov
negl
imul
dec
icebp
mov
xchg
pop
cli
aad
fwait
mov
icebp
orb
pop
mov
out
je
xor
sub
mov
test
lods
adc
fldt
addr16
xchg
sub
mov
push
les
or
dec
insl
xchg
sub
cmp
sub
stc
subb
mov
jecxz
pop
xchg
ss
mov
adc
bound
loop
sub
add
ss
js
mov
scas
adc
fadds
jnp
cmp
xchg
adc
add
sarb
mov
xor
or
push
stos
into
pmulhw
cmp
pop
insl
addb
jns
fisttps
sbb
lods
adc
push
aaa
fidivs
dec
mov
adc
mov
push
push
push
ss
lahf
mov
and
in
mov
inc
and
stc
and
cmp
rcll
mov
arpl
mov
cmp
call
call
jge
sub
adc
imul
inc
aas
or
lock
jg
lcall
adc
aas
and
inc
push
xor
lods
pop
test
movsl
fistpll
add
cmp
fbstp
rep
push
repz
and
jnp
adc
mov
xor
in
mov
cmpb
incl
addr16
sti
andl
sub
jne
mov
jnp
imul
sub
mov
adcb
jl
nop
jmp
sub
push
out
daa
and
dec
push
movsb
add
sahf
popa
fcmovu
mov
sbb
out
sbb
add
and
inc
imul
jnp
xlat
mov
pop
in
mov
xchg
iret
out
mov
pcmpgtd
mov
adc
pop
mov
jmp
cwtl
repnz
ret
jns
aaa
popl
mov
push
iret
mov
sbbb
fnstcw
sbb
stos
out
xor
rcr
xchg
test
daa
pop
add
daa
sar
into
ret
inc
pop
fcoms
jnp
and
nop
movsl
dec
push
test
mov
adc
cmp
mov
mov
add
testb
icebp
jmp
outsb
and
push
hlt
das
jb
push
mov
push
rorb
dec
fsts
inc
shrb
mov
xchg
icebp
jbe
lea
jg
scas
pushf
jp
fucomp
pushf
and
sub
lock
sub
popf
mov
inc
ds
jbe
hlt
outsl
rorb
test
xor
inc
push
jnp
popf
shll
cld
mov
gs
cmp
cmpsb
pusha
adc
cli
iret
imul
xchg
popa
inc
outsb
int3
testl
sbb
aas
cmc
or
int
loop
cmp
cmp
cmc
mov
sbb
loope
cmp
jo
cmp
js
and
aaa
mov
out
cmp
sbb
fmuls
imul
mov
notb
or
int
cld
push
push
aad
dec
repz
insb
adc
rcrb
jnp
cld
and
push
add
cmp
daa
pop
jne
enter
mov
inc
out
bound
repz
inc
lock
cmp
std
int
adc
adc
sub
ja
aaa
popa
sahf
test
dec
jns
insl
dec
add
pop
jmp
cmp
and
std
xchg
in
lret
sub
mov
sbb
sarb
mov
into
xor
and
lock
pop
jbe
call
dec
clc
aad
jmp
testb
fbld
negb
dec
adc
leave
out
fs
mov
aad
sahf
push
lret
iret
adc
lods
sub
cmp
sbb
jp
nop
nop
out
popa
add
xchg
jge
and
inc
sbb
mov
mov
pop
fnstenv
cld
xor
jo
sub
push
rolb
jmp
pop
jnp
or
mov
ljmp
pop
mov
popa
subb
lock
sub
rol
sub
sbb
pusha
cmp
lock
jo
sahf
testb
test
push
ficomps
dec
lcall
scas
jle
mov
out
or
fwait
inc
or
dec
gs
es
test
sarl
out
fucomp
data16
or
cmp
mov
adc
cltd
rolb
ljmp
mov
sub
jp
outsl
dec
out
insb
mov
hlt
push
xor
sbb
and
scas
and
dec
adc
push
int
insb
or
sbb
fstps
arpl
mov
lahf
mov
xchg
cwtl
movsl
fldcw
mov
dec
icebp
mov
xchg
pop
mov
outsb
xor
scas
mov
dec
pop
iret
mov
cli
mov
movsl
pop
jbe
add
or
pop
push
jne
lret
jecxz
push
cltd
dec
inc
xchg
jo
nop
rol
push
inc
je
xor
daa
jo
xchg
jne
push
or
push
mov
push
mulb
mov
ja
movsl
test
jmp
imul
add
cmp
lds
and
sub
inc
loop
mov
cmp
dec
cmp
mov
rcll
ss
rorb
jno
pop
pop
xchg
arpl
in
push
fldl
repnz
ja
into
xchg
adc
xchg
test
and
jmp
mov
fs
mov
mov
outsb
call
imul
jns
js
sbb
in
rcll
dec
and
outsb
xor
jno
mov
mov
pop
fbld
or
int3
enter
clc
jmp
cbtw
dec
test
jnp
and
test
sarl
sbbl
pop
aam
fimull
pop
lds
and
out
xchg
ljmp
adcl
sub
insl
lods
sbb
push
mov
fdiv
loop
lock
pop
in
push
xor
mov
mov
insl
xor
rorl
dec
sbb
mov
or
inc
push
test
jae
divb
push
dec
lcall
jg
movsl
nop
adc
lret
in
xchg
inc
ljmp
rcll
sarb
ds
push
jae
sbb
mov
and
ret
lahf
and
mov
or
mov
xchg
int3
and
std
out
std
js
inc
lods
push
inc
les
lcall
push
iret
inc
inc
cltd
sub
stos
ret
adc
sbb
lahf
fnstcw
inc
ret
push
mov
movsb
aad
dec
xchg
jo
testb
aas
stc
out
arpl
es
cmc
sahf
insb
pop
fincstp
inc
dec
das
mov
adc
mov
int
rcll
push
outsb
loopne
xchg
and
out
xlat
sbb
cltd
push
pop
add
lret
hlt
cltd
adc
aad
std
cmp
pop
aad
mov
inc
bsf
ret
ret
and
hlt
mov
add
lret
mov
data16
aad
bound
add
inc
pop
and
mov
repnz
inc
imul
and
pusha
sbb
mov
les
push
and
sub
lods
push
cmp
lock
cmpsb
dec
adc
aaa
or
es
cwtl
or
leave
leave
add
mov
lods
inc
mov
dec
loope
sub
push
push
stos
add
mov
jl
loope
pop
dec
shlb
sbb
nop
mov
or
stos
or
fstpl
xchg
or
das
es
xchg
and
cmp
sbb
inc
sbb
dec
or
jns
xchg
pop
mov
mov
inc
xchg
cmpsl
xchg
jnp
mov
dec
mov
fidivs
mov
mov
xchg
xor
inc
xchg
test
jo
dec
int3
repnz
in
mov
aaa
inc
xchg
inc
fbld
xlat
sub
and
pop
pop
icebp
enter
data16
js
lock
adcl
jbe
inc
cmpsl
stc
into
popf
add
loope
adc
addb
cmp
xorb
jle
jae
sahf
in
add
mov
lahf
out
mov
hlt
rcl
fdiv
lea
or
xchg
push
aas
pop
shl
stos
sbb
clc
add
icebp
jae
inc
pushf
or
sti
mov
mov
mov
mov
nop
cmpsb
inc
in
mov
pushf
pop
rdmsr
nop
push
maxps
adc
leave
popa
push
inc
mov
fldt
or
adc
aaa
inc
divb
in
scas
leave
inc
lcall
pushf
out
adc
insb
adc
sub
xchg
push
into
dec
xchg
mov
scas
mov
test
mov
adc
lods
push
stc
clc
arpl
ret
mov
dec
loopne
push
jp
nop
flds
xchg
mov
leave
mov
mov
inc
jg
fisubrl
in
push
mov
lret
sub
dec
xorl
sub
mov
mov
mov
sbb
pop
cmc
repnz
pop
std
insl
addl
push
movsb
cmp
fcomps
jns
aas
pusha
pop
insb
popf
enter
je
imul
sbb
jns
lret
outsl
cmp
xlat
xor
xor
mov
test
bound
dec
mov
dec
jae
push
jmp
cmp
loopne
and
pop
inc
pop
and
jmpw
inc
sahf
or
fld
xor
je
add
pop
fisttpl
jb
pop
pop
rorl
cmp
jb
rcrb
add
in
fadds
cld
fwait
jnp
testb
adcl
pop
jae
or
cs
fdivr
adcl
rcrl
mov
andl
add
popa
mov
imul
les
pop
mov
mov
sbb
lods
int
rorl
popf
lods
cwtl
inc
outsb
xchg
test
loope
mov
movb
adc
mov
mov
jecxz
and
xchg
test
mov
repz
cli
aam
and
and
imul
and
cmpsl
stos
jmp
inc
mov
cmc
scas
mov
fistpll
inc
add
lds
cmp
push
sarb
sbb
push
or
inc
mov
in
jbe
jno
scas
push
sbbl
in
mov
iret
out
push
cmp
jle
push
rorl
mov
das
lods
mov
addr16
jp
pusha
aas
jnp
int3
arpl
mov
mov
es
push
mov
out
adc
inc
push
fsubs
sub
cmp
outsb
clc
pop
add
or
dec
lea
roll
sarl
div
inc
pop
popf
int3
cmpsb
push
inc
and
shrl
jp
mov
dec
jno
mov
int
ja
mov
jo
into
mov
or
add
stos
in
jo
mov
out
push
ret
test
dec
push
cltd
cmp
xor
leave
out
jecxz
or
sti
sbb
pop
inc
and
mov
jmp
and
mov
mov
lret
sbb
inc
dec
cmpsl
pop
pushf
xor
mov
cmc
adc
pop
and
addl
pop
xchg
int3
pop
xchg
ret
ret
leave
and
lods
or
test
and
ss
mov
pop
cld
nop
lea
rolb
jp
cs
mov
je
clc
jle
lcall
mov
sti
mov
test
rcll
testb
aam
js
add
jns,pt
dec
dec
pusha
into
cli
nop
or
xlat
sub
sub
jle
nop
inc
and
mov
mov
cmpl
lods
cmpsl
bound
jnp
insb
cwtl
pop
mov
mov
pusha
gs
das
mov
add
push
xor
pop
pushf
push
push
mov
mov
ljmp
ss
cmpsl
push
dec
nop
cmc
sti
pop
mov
testb
mov
pop
hlt
nop
push
dec
cwtl
lahf
xchg
fscale
loop
movsb
jb
jmp
sbb
mov
cmpsb
sub
lret
imul
repz
xchg
mov
xchg
sbb
cmpl
push
lods
add
fimuls
add
cli
mov
dec
pusha
xchg
lods
orl
adc
jns
orl
ja
aam
mov
xor
and
das
test
fisttpll
jle
push
add
pop
and
sub
rorl
or
stos
popa
movl
adcl
and
js
inc
loope
and
dec
sub
les
lods
jbe
shrl
mov
ret
mov
add
xchg
mov
fnstenv
loope
cmp
popa
add
iret
adcb
popa
fsts
test
les
insl
in
pop
stos
sub
das
data16
jb
mov
movsb
inc
loopne
les
jnp
pop
in
rcrl
and
add
cmpsl
inc
sbb
push
data16
adc
or
or
mov
scas
into
sbb
fstpt
dec
push
pop
push
xor
sbb
out
xchg
loop
jp
push
fmul
adc
xchg
inc
ja
fld
lret
lahf
in
lret
sbb
lods
lods
xor
dec
outsl
mov
push
add
push
or
mov
mov
imul
call
xor
push
negb
jae
or
stos
xor
test
mov
pop
cmpsl
adc
pop
jp
or
test
mov
cmp
xor
popf
out
cwtl
sbb
fistps
sbb
mov
sbb
arpl
mov
outsb
fidivl
fcompl
xchg
mov
test
les
test
in
loopne
xlat
and
or
adc
lods
call
in
jo
xchg
sub
sub
mov
and
stc
int3
call
push
shl
jnp
sub
cmpsl
xor
add
xor
scas
cmpsl
test
push
lods
out
bound
in
repnz
test
aad
or
sbbl
aas
fucomip
push
sub
pop
or
fiaddl
loopne
jne
leave
imul
push
push
outsl
push
addr16
stc
push
xchg
stc
aam
data16
and
test
pusha
jb
lea
mov
mov
mov
jg
inc
rcr
mov
and
int
sub
xor
xchg
xor
mov
or
cmp
xchg
cmp
pusha
sub
fimuls
inc
mov
or
js
sbb
mov
cmp
jns
loop
pop
inc
out
addr16
jns
jbe
cmp
lret
mov
sahf
es
inc
xor
fsubl
loop
cmc
aad
out
push
xchg
movsb
or
ds
dec
jl
call
push
xor
nop
in
push
push
lods
lds
xchg
sti
mov
xor
iret
filds
push
mov
xchg
sub
mov
dec
inc
push
sub
nop
cmp
fwait
pop
adc
jbe
inc
or
ljmp
cmp
sub
aaa
or
jge
sub
push
ret
sarb
add
inc
insb
fdivrs
lcall
push
cmp
ret
sub
mul
dec
into
mov
aaa
mov
xor
and
ljmp
int3
test
movq
add
mov
mov
sub
inc
ret
rcr
xor
jne
out
jge
cmpsb
adc
out
mov
sub
sarb
sub
push
add
insl
cmp
sbb
fs
out
sub
in
sti
hlt
adc
pop
cmp
pushf
or
push
add
ret
aad
movsl
stos
fcomps
mov
roll
adc
or
add
data16
shr
cwtl
jle
mov
xor
inc
int3
push
mov
es
xchg
popf
cli
popf
push
sbb
mov
dec
adc
jmp
cmc
mov
rol
icebp
jl
dec
xchg
jg
adc
mov
push
jo
dec
rclb
mov
mov
or
das
ret
push
dec
sbb
push
push
add
sub
test
scas
ja
leave
jmp
lret
and
sbb
push
push
sub
cmpsl
out
cmp
inc
mov
popf
cmp
int
xor
mov
das
adc
lds
outsl
cmp
movsl
inc
mov
aaa
cmp
and
and
mov
repnz
mov
and
sub
jl
jle
mov
roll
pop
adc
fistl
xor
push
dec
fsubrs
sub
mov
add
mov
mov
xchg
cmpsl
inc
movsb
aad
mov
xchg
stos
xchg
pushf
in
inc
into
gs
shll
pushf
inc
ljmp
mov
xor
push
jecxz
mov
in
bound
pop
pop
sbb
sub
ja
aas
icebp
adc
out
mov
adc
cmp
mov
jg
loop
loopne
repnz
xor
loope
les
cmp
dec
scas
lods
pop
xor
cmp
loope
push
nop
lea
add
jne
mov
cmp
insl
push
mov
adc
data16
adc
push
inc
xchg
mov
xorb
sbb
daa
mov
stos
aas
pop
stos
adcb
jae
repz
dec
xor
aas
test
roll
pop
pop
adc
and
xor
push
fwait
out
jbe
pop
jo
mov
icebp
test
ljmp
fistps
je
std
sub
shl
call
or
pop
pushf
mov
aaa
sbb
mov
jnp
cmp
xchg
mov
imull
test
cmp
cs
or
ja
sbb
in
cmc
cmp
ds
push
testb
into
rclb
movsl
push
aam
push
push
sub
mov
mov
mov
aam
cltd
sahf
mov
push
push
mov
mov
cmp
inc
push
add
pop
into
outsb
xchg
xchg
jg
mov
mov
xor
xchg
xor
sahf
ja
pop
nop
repnz
mov
les
adc
pop
jle
cmp
pop
cmp
sti
in
push
jb
inc
sbb
xchg
and
aam
push
cmp
das
je
ja
cmp
jbe
fadds
subl
inc
clc
xchg
push
sub
mov
fidivl
adc
xor
cmp
mov
mov
pop
lea
imul
cli
jbe
or
and
icebp
clc
add
xchg
test
iret
cmc
cmp
pop
inc
das
or
sahf
ret
sarl
pop
dec
movsl
mov
sbb
jmp
jecxz
gs
pop
jae
cwtl
push
mov
and
xor
sub
sbb
pop
dec
scas
subl
movsb
daa
enter
loopne
lahf
xchg
jnp
adc
stos
icebp
inc
push
push
cmpsl
and
mov
into
bts
inc
sub
pop
add
scas
mov
loop
out
add
push
addr16
sti
in
pop
movl
in
sub
call
mov
jb
jp
adc
rorl
xor
push
les
cmp
inc
dec
dec
ds
call
iret
pop
test
lret
mov
outsb
lret
inc
je
sahf
xor
sbb
cltd
push
lcall
loop
popf
and
dec
xlat
xor
and
mov
and
and
rol
lcall
loopne
lea
nop
out
dec
push
jp
mov
mov
xchg
jno
mov
xchg
faddl
pop
orl
or
scas
cmpsl
lcall
lods
inc
pop
mov
push
jecxz
shl
and
test
ljmp
movsb
mov
sub
inc
pop
cwtl
push
in
or
mov
mov
mov
enter
div
add
lcall
sub
popa
aaa
sub
aas
and
push
out
das
or
and
std
movsb
into
jo
loop
dec
neg
dec
addr16
stc
xchg
inc
leave
rolb
out
aam
push
dec
push
cmp
push
mov
or
adc
push
cmpl
loop
and
sti
mov
sub
loope
pop
sub
inc
mov
fbld
pop
pop
mov
test
sbb
jnp
movsl
mov
test
gs
bound
mov
or
push
add
xor
inc
inc
inc
stos
mov
sub
insl
rorl
iret
xchg
and
or
jbe
push
fwait
jnp
shrb
mov
push
mov
ja
sub
pushf
mov
jnp
jmp
jae
pop
dec
enter
lods
add
xor
mov
rorl
divl
fdivl
pop
push
inc
xchg
jl
and
mov
push
mov
jg
pop
adc
lock
pusha
push
cmpsl
push
jo
inc
inc
xor
outsl
lret
fucom
test
jne
repnz
jns
xlat
out
mov
and
imul
push
sbb
mov
bound
and
lods
cmpsl
lods
pop
cmp
adc
aam
xor
movsb
jmp
inc
outsl
incb
mov
mov
mov
xchg
ffree
mov
clc
xor
xchg
inc
cmp
movsb
xchg
idivl
or
or
mov
enter
pushf
push
or
into
push
out
aam
add
pop
jno
lret
popa
cwtl
add
ds
pop
or
movsb
adc
std
cwtl
sub
test
xchg
xchg
fcomip
dec
mov
xor
dec
mov
dec
cs
insl
mov
leave
fdivl
call
cwtl
mov
push
adc
adc
fdivrl
sbb
inc
cmp
or
and
into
int
add
loope
aam
test
enter
fistps
inc
and
lds
and
push
mov
cmp
push
inc
sbb
push
mov
jmp
daa
mov
mul
push
std
sbb
lods
daa
je
or
sub
and
pushf
pop
push
and
pushf
push
mov
loope
iret
mov
add
inc
sahf
lcall
mov
xor
cmp
shll
mov
shr
and
out
xor
fs
dec
mov
cmp
ss
std
mov
sbb
mov
lds
pop
incb
ljmp
lret
sbb
lcall
xchg
mov
mov
and
flds
jmp
ja
adc
leave
test
insl
pushl
mov
xchg
mov
pusha
fists
bnd
call
cmp
mov
inc
mov
imul
hlt
movsb
pusha
nop
bound
push
cmp
pop
adcl
and
out
mov
xchg
jb
sti
xor
ja
scas
xor
mov
sbb
or
rcrl
aas
pop
cmp
inc
or
pop
fwait
pop
test
mov
pop
bound
push
xchg
fwait
ret
pusha
jns
or
pop
faddl
jno
push
into
xor
mov
incb
in
mov
lahf
daa
pop
cmpsl
cmpsb
shrl
mov
or
xchg
aaa
push
pop
sbb
dec
sub
fwait
stos
jns,pn
sbbl
mov
cmp
push
stos
dec
js
dec
dec
xor
pop
pusha
add
cmpb
sbb
mov
fidivrl
out
or
cmp
scas
adc
fdivr
mov
add
jae
jmp
mov
or
push
outsl
in
jo
shrb
aas
jno
dec
xchg
idivb
loopne
mov
sub
xchg
sbb
ljmp
stos
gs
and
push
or
sbb
cmp
int3
sbb
aam
xchg
xchg
inc
roll
and
test
xor
out
lahf
add
dec
scas
repz
pusha
and
add
lods
jno
push
int
pop
pop
push
outsl
jp
lods
mov
sti
daa
scas
imul
and
jp
inc
popa
pop
int3
xchg
pop
iret
sub
insl
gs
aam
data16
push
mov
and
shll
ror
jbe
dec
pop
stos
psraw
and
mov
pop
adc
pop
aaa
into
hlt
mov
setg
pop
mov
aam
call
jns
inc
pop
mov
push
mov
cld
inc
xchg
mov
inc
dec
je
inc
out
fnstsw
into
mov
outsb
dec
lret
outsb
dec
mov
daa
and
mov
lret
ficoms
and
or
lret
xlat
mov
in
jae
push
add
fists
shr
and
daa
xlat
mov
sahf
cmpl
cwtl
and
xlat
lcall
fists
xchg
sub
out
or
test
stos
test
das
push
add
aaa
or
inc
clc
sbb
sbb
lods
push
mov
add
bound
inc
dec
push
int3
loope
and
movsb
rclb
mov
jne
pop
in
xor
testb
loopne
or
adc
adc
fs
in
add
das
imul
jns
js
ja
sahf
jle
jae
fs
cmc
push
xorl
stos
jg
push
jecxz
jl
int
fcoms
push
jnp
inc
ss
jecxz
cwtl
pop
fdivl
std
jno
and
aam
mov
andb
imul
pushf
push
jmp
dec
xor
xlat
ffree
lret
mov
mov
lock
cmp
adc
dec
mov
mov
adc
adc
inc
daa
and
insl
push
ss
mov
test
sub
fs
pop
push
and
or
es
and
pop
rcl
sub
imul
and
fisubrl
pop
push
leave
inc
aas
ret
ds
out
fisubl
adc
or
insl
mov
daa
adc
rorl
pop
xchg
lahf
andl
adc
movb
scas
mov
stos
shl
rcrl
mov
mov
sahf
fnstenv
fs
sbb
inc
sarl
int
dec
cs
orl
adc
mov
inc
adc
lods
loope
cmp
ja
push
xor
dec
cmp
fstps
sarl
cltd
pop
mov
lods
cs
shr
arpl
in
cmp
mov
fsubrl
mov
mov
loopne
pop
mov
jne
in
scas
mov
jle
jae
in
outsb
enter
in
test
rol
and
aam
push
out
inc
ret
idiv
mov
vpunpckhwd
pop
xorb
push
xor
mov
aam
pusha
das
enter
cmp
repnz
xchg
call
out
mov
outsl
leave
scas
xor
les
push
jecxz
push
sub
mov
jbe
mov
push
movsb
icebp
lret
arpl
xchg
lahf
vandpd
mov
fldenv
jbe
popf
faddl
adc
pop
repz
shl
mov
or
out
movsl
bound
fstps
ficompl
into
ret
xchg
lcall
andl
daa
jns
mov
out
sub
push
xchg
and
push
sarl
pop
inc
out
adc
mul
and
mov
out
in
das
push
and
in
jae
push
fistl
cmp
xchg
push
cmpsb
sub
ljmp
inc
test
adc
lret
push
int3
sbb
sti
mov
outsl
pop
imul
mull
sub
mov
or
dec
sbb
xchg
daa
sub
repnz
cmpb
aaa
aaa
cmp
xchg
es
jecxz
ret
xor
xchg
push
out
lds
sub
or
xor
fnstenv
test
in
add
ret
jecxz
out
sub
fisttpl
or
scas
aam
mov
sub
add
or
sti
push
sub
aam
cvtps2pd
es
jno
push
leave
aaa
das
aad
and
in
arpl
xchg
test
int
pushf
fwait
jne
cmpsl
dec
scas
jo
pcmpgtb
sub
bound
jbe
and
mov
push
jg
cmpsb
push
push
stc
mov
insb
cld
scas
xlat
jnp
int3
xchg
jmp
dec
sti
xor
adc
jmp
arpl
out
enter
sbb
mov
push
mov
movsb
xchg
pop
or
nop
jle
push
push
and
or
subl
mov
and
fstps
daa
aam
jmp
aam
rclb
fsubrs
insl
inc
adc
push
mov
ljmp
or
scas
xchg
pop
pop
pop
inc
and
imull
mov
loopne
jns
cwtl
cmp
xchg
stos
bound
lahf
fstl
aad
imul
cmp
nop
sbbl
push
jl
lock
ds
aas
clc
push
and
rorl
idiv
pop
std
into
dec
and
xchg
push
lds
gs
pop
dec
cmpb
push
jmp
insb
jae
fimull
decb
add
cmp
jp
movsl
sarl
ret
mov
das
jge
clc
push
cwtl
mov
leave
imul
mov
jecxz
and
xchg
or
ljmp
xor
in
scas
push
sbb
in
adc
xor
bound
lahf
pop
es
mov
and
outsb
jns
push
cmpsb
pop
mov
sti
cmp
sub
xor
xor
cmpl
push
jne
and
jbe
lret
aaa
in
je
pop
lcall
mov
mov
xchg
gs
xchg
jb
and
inc
scas
adc
push
imul
pop
lods
add
mov
cmpl
jle
sbb
dec
mov
lea
out
cmpsl
lds
mov
aaa
adcb
test
std
rcrl
xchg
push
mov
xor
cmp
pop
xchg
mov
push
cmpsl
adc
inc
mov
or
ja
mov
cmpsl
sub
xchg
cltd
and
jmp
repnz
into
push
adc
cmpl
xorb
mov
add
dec
jne
jno
lods
test
sub
cltd
mov
inc
lcall
loope
test
push
pop
adc
mov
and
insb
pop
dec
ret
push
into
adc
xor
cmp
xchg
jp
jnp
loopne
adc
fisttpl
push
pushf
push
xor
and
stos
push
sbb
mov
lea
sbb
xchg
fisubrl
adc
std
and
imul
addr16
xor
adc
add
imul
das
pop
jle
insl
xchg
adc
dec
fisttpll
les
js
sbb
push
jo
mov
add
or
sbb
dec
mov
mov
xor
aaa
and
test
enter
mov
jo
insb
sbb
push
sub
jle
pop
inc
sub
jl
stos
jns
mov
cmpsl
or
inc
sub
or
mov
out
push
cmpsw
and
push
out
sbb
je
mov
loopne
outsb
cmc
test
dec
or
adc
aad
mov
push
int3
sbb
aam
cwtl
xchg
adc
jl
addr16
inc
test
pop
fst
aaa
loopne
pop
adc
push
and
pop
aaa
ljmp
xor
inc
or
movsb
xchg
sub
loopne
stos
mov
sar
or
loopne
adcb
cmp
or
and
inc
mov
repnz
mov
adc
jle
add
jecxz
sbb
sbb
or
mov
arpl
adcl
pop
adc
jo
in
test
repnz
aam
clc
mov
sbb
xor
test
cmc
and
xor
mov
mov
push
pop
fwait
pop
mov
and
orl
lods
push
loope
xchg
push
lods
lahf
adc
cmp
js
jns
mov
xchg
in
pop
scas
inc
imul
jmp
adc
jbe
cmp
into
pusha
ret
pushf
dec
daa
adc
mov
fidivs
push
roll
mov
xor
dec
js
les
popa
jmp
dec
push
imul
pop
sahf
push
adc
pop
outsl
cmc
and
dec
jecxz
xorb
test
or
add
pop
mov
xchg
jecxz
test
and
pop
sahf
xchg
pop
mov
mov
jo
scas
test
sub
ret
aas
jecxz
stos
icebp
jp
mov
cmp
add
daa
notl
pop
mov
mov
mov
sub
push
cltd
jns
inc
lret
ret
mov
xchg
sbb
lods
pop
jne
or
cmp
pop
fcmovne
jnp
fcompl
stos
or
xchg
jo
mov
test
lahf
add
js
fwait
pop
jl
inc
pop
inc
and
push
test
movsb
cmp
inc
and
pushf
dec
jg
inc
adc
subl
xchg
pop
xor
sbb
dec
outsl
jl
pop
pop
inc
and
test
xchg
mov
and
pushf
inc
cwtl
enter
push
xchg
lret
out
xchg
mov
or
jmp
xchg
cwtl
jns
stc
pop
ss
push
cmpsb
cmp
gs
aam
and
bound
mov
imul
push
dec
push
pop
xchg
pop
addl
test
push
dec
cld
jbe
and
leave
and
mov
cmpsl
fwait
roll
mov
mov
sub
inc
and
cmp
cmpsl
add
out
test
cli
imul
mov
je
and
test
sbbl
push
mov
pop
ret
mov
sbb
popf
xchg
jg
jnp
adc
repz
out
cmp
add
dec
movl
call
dec
inc
xchg
cltd
jb
push
fs
aam
inc
popa
aas
jo
cmp
fcmove
mov
aas
inc
xor
cmp
pusha
lahf
js
scas
mov
inc
shlb
popf
push
pop
fs
inc
mov
ljmp
fcmovu
lds
fwait
cs
imul
inc
mov
pop
loop
jl
rol
call
lock
fdiv
push
or
cmpsb
adc
inc
test
push
stos
xor
sub
xchg
xchg
jo
jp
lea
pop
ds
mov
mov
and
iret
xor
std
lcall
ja
sbb
mov
aad
xchg
cltd
xchg
imul
jmp
stc
in
xchg
jecxz
dec
pusha
and
add
dec
mov
mov
icebp
loop
cmp
notl
inc
mov
pop
fs
or
xor
and
daa
sub
hlt
pop
arpl
stos
lods
add
or
out
sbb
mov
pop
push
stos
xchg
hlt
cmpsl
jp
pushf
js
xlat
push
inc
pop
add
xor
adc
fwait
sbb
cmova
sub
adc
enter
adc
sub
test
in
gs
das
mov
aad
sub
mov
andl
ljmp
ljmp
and
daa
pop
mov
push
movl
lcall
cli
jg
cmpsl
sub
jbe
roll
pushf
dec
jp
jno
lods
sub
add
xor
shr
rolb
sbb
mov
stos
push
cmp
xlat
scas
arpl
jns
sarb
or
push
mov
in
rorl
push
dec
icebp
adc
nop
lcall
stos
mov
pop
loope
test
addr16
adc
fs
mov
nop
cmpsl
mov
fst
lods
jnp
test
or
jne
add
popa
jb
mov
in
inc
or
aam
mov
ss
out
jge
add
jg
bound
popa
cld
in
cmp
fs
ud2
hlt
push
iret
jae
into
cmp
call
scas
mov
mov
enter
movsb
scas
iret
mov
sti
mov
cwtl
fiaddl
sbb
faddl
jb
lcall
jl
loop
add
adc
nop
and
stc
and
pop
xor
xchg
mov
icebp
outsl
into
jb
mov
nop
aam
out
xor
push
xchg
or
jb
fisubrs
jbe
hlt
or
push
hlt
pop
jecxz
outsl
imul
and
hlt
out
pop
push
clc
repz
xor
les
leave
xchg
lds
add
or
dec
mov
pop
jle
ss
int
mov
shl
xor
xchg
js
es
push
dec
mov
xchg
nop
ret
sbb
repz
pop
jns
cmpsb
sbb
xor
lods
add
ret
leave
push
fs
sarl
add
and
dec
std
rcr
sbb
pusha
imul
inc
mov
sbb
pop
sub
or
mov
xor
out
push
sbb
stos
cli
cmp
inc
jecxz
cmp
in
lods
lea
mov
mov
jecxz
and
xor
loop
loop
lods
ret
aam
adc
sahf
mov
xchg
mov
jg
xor
jno
xor
jns
test
gs
xchg
push
addr16
pusha
pop
rep
cmp
mov
jno
xchg
sbb
ljmp
push
je
subl
cmpsb
daa
add
sahf
dec
aam
in
adc
mov
out
out
cmc
stos
xchg
jg
push
or
xchg
xor
jle
xor
cmp
movsb
sub
mov
and
sub
cwtl
test
pop
push
sbb
test
data16
pushf
or
xor
scas
sub
adc
or
jecxz
pushf
mov
pushf
int
scas
inc
dec
testb
out
int3
cmpb
pushf
clc
je
rcll
sub
dec
in
scas
mov
pop
sahf
call
cmpsb
pop
jb
das
bound
dec
adc
dec
cmp
daa
dec
push
push
ret
lcall
dec
arpl
and
nop
sbb
sub
cmc
aam
sahf
rorl
jb
mov
mov
rcrl
test
jno
xor
xor
inc
enter
xchg
inc
mov
xor
lret
rolb
xor
fs
jno
mov
add
jge
and
inc
pop
test
mov
inc
lea
or
out
pop
aam
daa
jecxz
adc
jno
outsl
inc
pusha
ret
mov
shl
dec
ret
mov
mov
divb
add
insb
sub
cs
jge
aad
jo
bound
cmp
push
and
fisubl
es
sbb
fwait
jae
cmp
popa
pusha
in
push
pop
roll
cld
loopne
je
mov
incb
xor
out
jbe
in
in
movsb
xchg
nop
sub
mov
outsl
pop
sbb
jne
mov
xor
cmp
or
mov
ret
adc
stc
pop
cld
fldt
ret
mov
lock
push
stos
outsb
out
xor
es
sbb
insb
push
out
cmp
add
xor
ret
out
mov
cmp
je
sub
xor
cmp
xchg
divb
mov
sbb
push
popa
aaa
mull
mov
out
jns
out
push
ljmp
aam
les
mov
push
stc
lods
loopne
rcr
shrl
pop
pop
in
cmp
ljmp
call
sub
fstl
int
jge
outsl
mov
dec
xchg
hlt
mov
loop
test
data16
leave
lret
clc
test
lds
xor
inc
ljmp
xchg
jecxz
push
fisttps
bound
xor
pop
mov
xchg
out
jmp
mov
push
pop
jb
jne
pusha
test
or
vucomisd
dec
dec
xor
mov
mov
aam
mov
jb
sub
aas
sub
dec
iret
dec
mov
insb
xor
shrb
insb
or
mov
pop
repnz
sar
stos
popa
test
ds
mov
mov
sbb
mov
out
ja
jle
mov
cli
mov
fwait
insl
add
and
std
shlb
fidivrl
ds
cmp
stos
xor
mov
push
lods
mov
call
jae
or
jecxz
push
cmpsl
fists
and
xchg
cld
je
ja
cmp
enter
cmpsl
mov
lds
fiaddl
test
hlt
pop
mov
cmpsl
pop
fsubrl
jle
dec
jge
cmp
sub
add
pop
in
pop
cli
mov
inc
out
and
sbb
add
adc
movsb
test
xchg
and
ljmp
out
sbb
inc
das
loop
shrl
imul
jge
ret
out
rol
add
inc
iret
test
fsubl
repz
mov
pop
mov
mov
out
filds
jbe
push
xor
cmpsl
push
rorb
jmp
test
add
mov
xor
push
int
pop
loope
int
int3
test
test
lahf
iret
jmp
test
test
mov
mov
cmc
outsb
cmp
mov
ret
scas
push
test
push
sub
pop
cmpxchg
sarb
aaa
inc
push
hlt
jecxz
in
outsb
into
fxtract
call
stos
mov
xchg
stos
push
push
xchg
sub
push
test
std
add
inc
mov
dec
bound
outsb
push
daa
repz
ss
call
or
aam
sbb
out
clc
scas
insb
stos
push
fdivr
pop
aas
fdivrs
or
mov
hlt
data16
cmp
sti
rcrl
mov
leave
test
jno
and
xor
push
out
sub
fldcw
subl
mov
inc
jle,pn
or
out
push
sub
roll
jb
add
mov
jb,pn
cwtl
jg
pop
roll
shll
cmp
adc
imul
insl
add
lret
cmpsb
cmp
mov
mov
xor
nop
arpl
jne
inc
hlt
data16
sbb
cmp
aam
add
test
ds
sbb
pop
in
aaa
idivl
clc
es
pop
les
fwait
or
paddusw
inc
sbb
repnz
mov
jns
lods
jno
mov
dec
push
mov
psadbw
cmp
cmp
adcb
mov
jg
gs
adc
or
adc
mov
sub
std
xchg
jle
sub
jns
bound
dec
lock
and
mov
cltd
jecxz
idivb
insl
pop
lods
dec
jge
cmp
xchg
test
popa
lea
pop
jmp
xor
sahf
mov
add
movsl
sub
dec
pop
mov
outsl
lcall
xor
stc
pop
int3
cltd
ret
pop
sub
and
aas
lahf
inc
int3
add
xor
orl
mov
lock
fldcw
pop
jmp
rolb
push
dec
aam
lcall
push
das
lods
cmp
mov
scas
inc
test
mov
incl
incl
clc
inc
lahf
dec
pop
test
jo
addr16
cmp
in
out
inc
sub
and
jo
mov
sub
repz
cltd
call
fisubrl
jl
inc
fsts
roll
cld
divl
sub
lret
mov
xchg
add
cwtl
push
in
pop
sar
sti
dec
xchg
fs
and
sub
push
pop
loope
dec
rclb
mov
and
dec
adcb
mov
xor
cmpsb
dec
jno
imul
mov
jge
cmp
pop
lods
repz
mov
dec
fs
mov
popa
xchg
sub
mov
imul
popa
icebp
add
sub
hlt
pop
pop
subl
cmp
fcmovnu
push
xor
fimull
jecxz
out
adc
push
push
das
test
fwait
mov
xor
jp
loop
adc
syscall
mov
push
pop
xor
sbb
cld
cmp
cmp
jp
out
inc
fidivs
jae
adc
cs
inc
das
lea
rep
insb
js
int
jp
sti
jp
xchg
sahf
loope
adc
fs
leave
mov
push
add
add
imul
xchg
scas
push
out
enter
cmpb
and
inc
hlt
mov
inc
cmpsb
pop
xchg
and
iret
mov
jmp
arpl
repnz
jns
daa
xchg
push
shl
fcmovnb
mov
jecxz
sahf
or
repz
movsl
mov
loopne
mov
imul
dec
mov
mov
ss
mov
mov
add
mov
rclb
cs
bound
or
lret
cwtl
xlat
cmp
lock
mov
hlt
out
pop
dec
dec
and
mov
in
or
add
enter
or
push
imul
jne
mov
out
cmp
shl
cmp
in
sub
aas
pop
fcoms
xor
and
andl
push
call
in
and
xor
sbb
push
push
fwait
out
mov
or
sahf
stos
pop
cli
inc
add
jmp
mov
rorl
sbb
imul
xchg
loop
fiaddl
xchg
dec
popf
cmp
adc
or
lret
jnp
mov
add
xor
sub
daa
sbb
idivl
mov
scas
pop
into
loope
out
test
movsb
jge
xlat
dec
xchg
jle
jns
adc
push
xchg
inc
mov
data16
adc
sub
fs
call
pop
int3
adc
mov
jle
add
mov
iret
add
cmp
jns
rcll
lret
cmp
mov
les
cmp
xor
pop
xchg
ja
fwait
xchg
mov
mov
aaa
jle
xchg
call
push
fdivrl
mov
shl
into
test
insl
and
movsb
rep
jne
push
mov
xchg
mov
out
and
inc
inc
mov
jnp
cltd
in
ja
add
cmp
lods
mov
scas
jmp
or
mov
mov
xor
je
jae
dec
movsb
mov
add
cld
adc
or
pushl
pushf
jns
and
or
es
loope
sub
pop
sbb
aaa
inc
xchg
mov
rclb
pop
into
sub
jl
inc
xchg
punpckhbw
rolb
aad
xlat
push
mov
aaa
out
push
jle
out
fildl
outsb
jb
lock
stc
xor
dec
xor
les
sbb
mov
mov
inc
push
mov
loopne
jbe
jecxz
inc
mov
dec
adc
xchg
into
cmp
arpl
iret
movsl
push
test
push
jmp
mov
cli
dec
xchg
stos
mov
jg
add
push
xchg
in
dec
and
xor
mov
push
xchg
dec
add
cmp
int
unpckhps
adc
ljmp
loopne
imul
aam
bound
out
cmp
xlat
sbb
sahf
jg
loopne
scas
fcomp
fistpll
les
pushf
insb
or
ja
dec
movsb
mov
push
lods
sub
add
daa
icebp
out
mov
xchg
repz
orb
push
inc
repz
std
or
aaa
rcrb
mov
lea
adc
and
call
test
push
xlat
aaa
xchg
inc
cmp
push
xor
xchg
and
sbb
fucomi
loop
sar
stos
lret
fsubl
inc
add
ficompl
ljmp
fcom
sub
xor
adc
aam
sarl
in
dec
pop
int3
pop
scas
add
or
scas
inc
outsl
or
nop
loope
dec
in
adc
xor
cmp
and
mov
mov
xor
lea
jnp
fcmovnbe
jne
jg
mov
mov
and
sti
pop
cmp
shl
in
dec
cli
adc
xchg
mov
cmpsl
ljmp
inc
xor
stos
sbb
add
or
lods
cmpsb
or
call
cltd
cmp
pop
cmp
pop
lea
dec
movsb
int3
fmuls
fsubr
daa
bnd
cmp
mov
cli
mov
es
pop
call
xor
cmp
inc
imul
cli
pop
and
pop
inc
cmp
add
mov
pop
repz
lods
xchg
aas
xor
jg
bound
mov
xchg
into
pop
cmp
insl
and
imul
adc
mov
xor
loopne
xlat
sbb
imul
in
dec
lahf
and
inc
add
fcompl
mov
outsb
stos
dec
rclb
or
push
inc
lahf
das
rcrl
push
fimuls
xlat
mov
jae
or
test
mov
fbstp
aam
pop
aaa
jmp
jae
mov
shlb
mov
jl
push
insb
mov
dec
inc
xchg
popa
icebp
ret
rol
das
adc
lds
mov
sub
shrb
dec
jmp
sti
xchg
push
sub
shrb
sub
imul
mov
stos
lods
in
mov
test
ljmp
mov
fdivs
cmpsb
mov
push
sbb
mov
inc
loope
std
jnp
push
push
leave
sbb
repnz
nop
lcall
lahf
jb
mov
out
xor
add
or
lock
mov
subb
leave
enter
or
and
fldcw
push
jb
mov
mov
jecxz
mov
sub
ljmp
repnz
xor
addr16
jae
or
testl
mov
test
xchg
push
jns
and
ljmp
out
mov
cwtl
push
call
mov
inc
adc
nop
push
decl
push
cmpsl
xor
bound
iret
cwtl
jno
xchg
movsl
fwait
sbb
and
mov
push
fdiv
push
add
sti
jle
sub
test
pusha
lcall
adc
sub
out
mov
into
mov
lret
xchg
popl
dec
fcmove
aam
insb
xor
mov
sarl
pop
cltd
inc
imul
fiaddl
imul
xorb
lock
xor
xlat
mov
ds
sarb
arpl
xchg
pushf
adc
lcall
fcoml
popf
jbe
jge
es
jmp
cmp
lret
lahf
fs
repz
int3
sub
xor
out
cmp
and
cmp
stc
xchg
es
inc
cltd
iret
popa
sbb
add
and
add
jno
cld
lods
sub
sarl
hlt
and
imul
cmc
fwait
and
scas
lret
pop
out
fmuls
xor
and
sbb
sbb
sub
pop
out
cmp
out
aad
rorl
mov
in
aam
xor
jns
loop
jecxz
mov
scas
fimull
imul
sbb
loopne
adcb
outsb
mov
push
add
jns
adc
xchg
repz
in
pop
xchg
sub
or
rolb
push
pop
jno
push
dec
inc
mov
stos
push
jg
cmc
rol
jb
inc
outsb
enter
sub
adc
add
push
inc
jbe
push
mov
mov
inc
shl
mov
pusha
leave
shlb
add
movsb
jge
lea
mov
test
and
or
mov
dec
movsb
notl
jmp
test
int
fs
dec
nop
lods
or
jp
dec
push
int
mov
hlt
lahf
aaa
mov
fstpl
inc
mov
stos
rcll
sbb
jl
mov
cmpsb
mov
xlat
sub
mov
dec
sub
dec
cmpsb
inc
mov
sub
jmp
xor
pop
xor
sub
jl
subl
push
inc
xchg
xor
int
insl
fsubs
inc
andb
ja
pop
sub
repz
xchg
loop
insb
mov
sub
push
adc
inc
adc
pop
or
pop
insl
jg
rorl
shr
add
jecxz
xchg
pushl
mov
pop
and
test
movb
mov
xor
add
in
js
xchg
add
gs
pop
add
mov
xor
in
inc
push
cmp
or
in
jb
cmpsl
fcompl
in
jp
test
cmp
and
dec
pushf
or
inc
push
adc
call
mov
push
and
into
dec
pop
ja
fists
test
int
mulb
hlt
xchg
into
js
jne
pop
ret
movsb
mov
cmp
stos
push
sbbb
xchg
pop
adc
sub
jmp
fstl
and
loop
mov
imul
xor
imul
repnz
shlb
add
sub
push
rcr
adc
pop
in
in
in
sub
push
out
rol
outsb
push
jnp
lret
stos
push
cmp
pop
aas
test
mov
iret
test
insl
test
cmp
pop
fs
xchg
sbb
mov
push
mov
mov
xchg
outsl
xchg
cmp
testb
movsb
icebp
fdiv
push
adc
sbb
mov
mov
lahf
cmpsb
lods
test
push
sbb
lods
and
je
test
add
push
test
loope
pop
mov
jmp
sub
jecxz
xlat
xchg
pop
lea
bound
sub
call
add
sbb
movsb
insl
shrl
jle
out
aam
popa
data16
cld
aas
inc
pop
aam
scas
adc
push
adc
into
rorb
xor
lret
leave
pushf
sbb
lret
cmpsb
pop
jp
fsts
inc
mov
ljmp
dec
sub
add
mov
inc
sbb
add
sbb
add
jo
lods
outsb
out
fwait
add
sub
rcrl
cmpsl
pop
cmc
sub
rcrb
push
add
pop
call
sub
or
fs
adc
push
dec
jge
add
push
cltd
aam
fwait
outsb
test
das
je
mov
cld
in
adc
sbb
mov
dec
insb
and
sbbl
out
xor
xlat
dec
pop
pop
enter
data16
pop
aas
into
icebp
xchg
je
imul
mov
dec
pop
dec
adc
inc
push
cmc
pop
adcb
loop
inc
jb
push
dec
imul
rcr
decb
xor
rorb
aam
jbe
mov
pop
pop
fucom
sub
leave
push
js
in
and
mov
lret
lods
int3
push
jl
push
fwait
inc
pop
inc
and
into
pop
lods
stos
leave
mov
stos
dec
inc
lods
jo
ljmp
push
test
gs
xor
adcl
in
shll
mov
sbb
inc
xor
lcall
scas
jno
pop
xor
aam
nop
test
sub
iret
loope
mov
sbb
and
mov
pop
insb
cmp
mov
shll
jbe
mov
cmc
mov
or
push
pop
sub
fsubrl
sub
xchg
jno
xchg
aaa
sub
adc
mov
cmp
adc
rcrl
out
ja
mov
push
push
mov
shrl
push
outsl
adc
js
clc
xor
les
mov
lock
fcoml
mov
sub
stos
push
mov
test
ljmp
sbb
hlt
or
stos
pop
sbb
rolb
out
mov
iret
dec
mov
add
je
fcmovbe
jmp
mov
jb
scas
mov
sub
jge
mov
fcmovnbe
mov
scas
data16
push
push
sbb
out
push
mov
adc
fmuls
arpl
into
xor
add
dec
adc
jge
xchg
jl
push
push
out
mov
xchg
or
xor
mov
pushf
pop
ds
and
ret
mov
inc
popf
in
lock
pop
jne
fmul
inc
or
popf
negb
scas
fcomi
xor
call
aaa
vpsrlq
dec
jne
jae
adc
pop
repz
int
xchg
lret
sahf
xrelease
xor
or
mov
insl
push
push
pop
xor
jb
dec
inc
or
push
popa
and
sbb
std
enter
outsl
dec
lret
or
jne
push
dec
mov
les
sub
jmp
inc
call
test
jno
loop
mov
xor
je
mov
cmc
mov
mov
shl
cmp
insl
sbb
mov
push
repnz
popf
dec
in
div
mov
les
lds
loop
cmpsb
in
xchg
mov
out
push
sub
and
push
ljmp
jl
pop
mov
arpl
pop
clc
cltd
or
aad
ret
adc
out
jle
inc
leave
lret
cmp
mov
stos
dec
push
jecxz
js
mov
mov
test
jecxz
or
xlat
movsb
pop
ficoml
jae
jo
into
pop
mov
jno
sub
dec
in
negl
ljmp
out
in
mov
js
shl
out
or
add
ja
lahf
inc
jo
orl
xchg
push
aas
pop
jmp
lcall
pop
sbb
push
inc
cltd
aam
loopne
addr16
adc
out
and
mov
mov
inc
adc
mov
xchg
cmc
mov
jnp
mov
scas
test
jno
dec
call
jnp
stos
cmpsl
stc
out
movsl
mov
xor
xor
fnstcw
dec
mov
push
mov
arpl
mov
lcall
insl
js
jns
iret
hlt
cmpsl
std
mov
lods
mov
roll
mov
jno
dec
mov
fbstp
xchg
pop
cmp
mov
add
jmp
and
adc
push
mov
notb
loop
dec
add
jle
fsub
mov
outsl
iret
xchg
les
scas
hlt
stos
sbb
dec
xor
sahf
jbe
pop
cli
mov
jg
mov
sbb
xchg
rolb
fistpl
repz
mov
mov
out
mov
pop
mov
adc
sub
sub
and
mov
pop
cmp
or
xor
sub
dec
leave
sbb
jnp
pop
movsl
test
pop
lcall
pop
xlat
stos
aas
daa
and
mov
fisttpll
xchg
jne
ror
dec
adc
pop
in
lods
adc
sahf
add
fwait
jo
sbb
data16
xor
or
lea
in
rclb
dec
dec
jae
aaa
xchg
int3
or
cmpsb
out
adc
fsubs
jo
xchg
or
pop
xor
movsl
push
mov
push
nop
loop
dec
mov
movsb
loope
add
jnp
sbb
jo
xor
ja
xchg
and
pop
dec
popa
mov
add
add
cmpsb
mov
jl
adc
xchg
addr16
push
jge
cmp
sbb
and
es
bound
adc
insl
lods
pop
pop
xor
and
push
jno
ficoml
push
loopne
fmulp
inc
stc
or
movsb
push
mov
xchg
mov
cmpsb
mov
js
add
add
adc
fistpl
lret
push
or
inc
call
ret
cmp
or
cld
and
movsb
pop
inc
int3
mov
fwait
pop
test
clc
mov
daa
adc
add
or
lea
and
xchg
sti
jp
sahf
mov
adc
cmpsl
scas
add
in
je
and
mov
pushf
aaa
in
adc
stos
mov
pop
lret
test
sbb
push
stos
out
mov
and
and
push
cmp
aad
repnz
int
push
outsl
push
mov
xchg
aam
dec
cld
push
add
lods
xchg
jmp
pop
fcompl
push
pusha
jle
pop
data16
pusha
pop
cmp
fwait
inc
cmpsl
jbe
mov
push
push
jae
and
int
jns
int3
fadd
inc
push
jns
pop
ret
or
adcl
lret
pop
mov
dec
mov
sbb
iret
jo
shlb
adc
fimuls
pushf
fdecstp
xchg
fildll
repz
loopne
stos
les
or
fnstcw
mov
adc
sub
inc
jae
jne
mov
cld
cwtl
scas
scas
xchg
sbb
cmp
or
jo
inc
xchg
xorl
sub
fstpt
mov
in
repz
cltd
cltd
lods
fcom
push
jbe
add
jno
cltd
lock
stos
sbb
inc
add
cmp
push
int
mov
lock
call
adc
inc
stos
push
xchg
cmp
sub
dec
mov
cmpsl
std
mov
xchg
jg
sub
in
mov
stos
std
lret
daa
mov
leave
xchg
pop
imul
jae
pop
mov
jle
push
mov
add
or
fs
shll
mov
inc
fildll
cltd
out
int3
enter
pusha
ss
xlat
mov
mov
fstl
dec
or
es
cmp
add
mov
daa
and
mov
sub
mov
into
mov
lret
lret
fistl
pop
call
xor
int
mov
push
or
push
popf
jnp
repz
mov
mov
jge
test
mov
and
xor
fldenv
and
cmp
movsl
mull
cltd
xchg
mov
xor
sarb
sbb
fwait
jbe
fwait
push
rcr
inc
das
scas
xchg
pusha
stos
insl
add
dec
xchg
loopne
fbld
test
lods
jmp
enter
mov
and
cmp
stos
sub
mov
dec
cmp
roll
push
mov
jp
imul
xor
sub
xchg
icebp
jle
push
adc
sub
int
dec
mov
hlt
mov
daa
jle
add
xchg
jo
lahf
andl
out
ja
push
mov
mov
out
and
add
bound
adc
popa
mov
xorl
mov
cwtl
outsl
and
pop
sub
arpl
sbb
pop
xlat
or
loop
or
cmpsb
dec
sbb
jmp
lcall
push
out
popa
cmp
or
stos
inc
loope
add
js
cmp
daa
adc
inc
shl
in
loope
mov
mov
mov
arpl
sub
stc
test
dec
sbb
push
lret
xor
jno
lock
aaa
ja
data16
cmpsb
out
js
sahf
fidivrs
xor
cmpsb
add
or
xchg
add
add
enter
push
pop
outsl
stos
jns
mov
rcll
cmpsb
push
xchg
lods
and
rolb
cld
nop
mov
sbb
cmp
aad
sub
mov
mov
mov
enter
adc
cmp
and
loope
rorl
mov
mov
add
mulps
pop
sub
mov
mov
lods
adc
jbe
repnz
add
cmpsb
das
mov
jo
shll
mov
repnz
mov
lret
cmpsb
jmp
cli
ss
xchg
test
sub
mov
lds
scas
clc
std
add
mov
icebp
xchg
pop
xor
jae
mov
push
arpl
imul
enter
aam
ss
xchg
cmp
and
nop
mov
adc
mov
out
outsb
push
ljmp
inc
jae
lods
push
cmpsb
cmp
xor
in
sbb
das
mov
mov
addr16
in
lahf
mov
sub
loop
into
or
popa
insl
imull
jg
dec
mov
cmc
lret
cltd
sarb
bound
shrl
push
lods
gs
and
loopne
scas
and
loop
adc
jmp
sub
hlt
aad
jge
mov
pop
jp
mov
xor
push
mov
mov
or
mov
dec
cmpb
jb
sti
out
test
mov
mov
test
push
mov
stos
adc
data16
adc
popf
shlb
xrelease
jnp
jns
mov
mov
mov
mov
rcrl
pop
scas
enter
pop
jp
flds
xchg
lcall
jg
mov
push
mov
mov
jns
mov
and
xlat
mov
xor
fdivs
aad
nop
int
lock
jmp
popf
rorl
scas
shll
mov
mov
mov
cwtl
int
pop
xchg
mov
imul
add
mov
ret
lods
jmp
sub
push
add
cmp
pop
sarl
data16
roll
jmp
pop
loop
mov
jne
xor
and
xchg
xor
add
mov
in
xchg
jnp
call
repz
fbstp
aam
pop
aad
in
mov
leave
cld
mov
mov
imul
in
ds
in
std
fidivrs
rcll
add
rcr
mov
pop
stc
sbb
mov
out
dec
and
dec
insl
lcall
test
cmp
mov
sub
lds
mov
push
lods
test
imul
mov
in
nop
fiaddl
ja
jg
ret
dec
cltd
cmpsb
test
inc
xor
pop
or
xchg
mov
insb
push
int3
xor
mov
imul
iret
aam
outsl
inc
testl
mov
push
jnp
std
fbld
and
add
pop
cmp
out
mov
aas
movsl
mov
or
fucom
ret
xor
pop
cmp
or
aaa
xchg
push
jbe
xchg
and
ror
in
rclb
xor
xchg
div
je
jns
in
cltd
adc
fdivs
and
lods
jp
out
test
int3
add
maskmovq
push
arpl
lahf
push
xor
add
fimull
add
test
rcll
lfs
push
popa
dec
pop
add
repz
cld
leave
fsubrl
loope
std
inc
outsl
aad
dec
push
push
lcall
mov
xor
push
push
mov
loopne
dec
arpl
test
jmp
mov
push
popa
pop
loope
cmp
add
xchg
jle
test
icebp
test
in
dec
lcall
jmp
add
jb
xor
mov
mov
movsb
dec
cld
push
ljmp
cmc
movsb
pop
in
gs
outsl
or
fs
mov
leave
mov
loopne
in
add
add
sahf
mov
sub
popa
into
xchg
push
iret
push
ficoml
stc
lods
les
jae
mov
ja
rorl
fstps
mov
ds
xor
imul
fwait
repnz
pop
adc
sub
dec
sbb
loopne
sar
jg
dec
mov
add
out
and
bnd
pop
jnp
pop
rorb
data16
std
and
sbb
loop
pusha
mov
out
stos
cmc
push
in
mov
loopne
mov
xchg
jo
test
sub
xor
jl
pop
adc
mov
add
pop
inc
lock
xchg
mov
jnp
test
dec
je
mov
mov
dec
add
push
repz
add
cmp
fsubr
cld
jmp
lahf
and
dec
inc
hlt
mull
pop
ret
and
imul
repz
sbb
cmp
push
pushf
outsl
jbe
and
das
outsl
cmpb
loop
mov
mov
mov
jno
mov
dec
lahf
xchg
xchg
dec
sbb
jne
mov
pushf
ret
mov
es
repz
mul
mov
mov
xor
mov
popf
mov
push
jne
adc
cmp
cs
xchg
ljmp
sub
rcrb
test
fmull
cs
andb
mov
jo
stos
sub
sbb
ret
enter
js
sbb
fisubl
loope
in
in
adc
sbb
jo
cmc
jne
cmp
jg
add
push
jp
and
pop
pushf
imul
add
xor
lahf
or
mov
iret
pusha
mov
fnsave
push
mov
repnz
push
mov
pop
inc
cmp
sub
add
icebp
sbb
mov
ljmp
push
js
cmp
mov
sbb
push
out
xchg
movsb
stos
cld
imul
out
adc
shlb
mov
xchg
add
adc
mov
loopne
les
add
xlat
pop
adc
in
mov
cmc
push
std
out
out
shrb
mov
mov
mov
mov
xchg
popf
lods
xchg
push
sbb
push
addr16
add
cmp
xchg
gs
scas
xor
dec
loope
xlat
sub
out
lods
rcll
dec
cmp
fistpll
stos
xchg
xchg
jmp
add
dec
pop
ss
xor
pop
into
in
jae
shrb
lods
aam
xor
xchg
enter
push
pop
push
stc
repnz
aaa
aad
sarb
insb
mov
cmc
push
insb
jecxz
pop
sbb
es
lods
mov
cmpsb
xchg
inc
into
cwtl
mov
sub
dec
and
sbb
pushf
lret
xchg
shlb
mov
mov
lods
stos
lret
repz
aaa
xor
pushf
mov
repnz
scas
shll
cmp
outsb
fisttps
cmc
pushf
clc
stc
sbb
sub
jbe
pop
pop
scas
rorl
dec
fldcw
imul
into
repnz
sbb
xchg
jecxz
xchg
in
int3
push
out
scas
inc
jnp
add
out
cmp
fildl
adc
push
test
data16
aam
call
inc
lahf
xor
cmp
inc
mov
mov
cmc
lahf
mov
adc
rolb
xchg
sti
repz
sti
xlat
in
aas
and
call
pop
out
pop
mov
in
add
inc
iret
mov
enter
inc
paddsb
out
bound
rcll
mov
stos
sub
addr16
mov
cmp
push
js
or
fidivs
int3
push
mov
lret
sub
mov
mov
sub
aam
adc
insl
mov
leave
rorl
outsl
mov
pop
or
add
or
bound
mov
test
inc
rcrl
rorl
sahf
outsl
call
stos
popa
in
lret
push
dec
jecxz
loopne
imul
stos
and
js
cmpl
outsb
insl
imul
lea
inc
pusha
sbb
fs
cmpsl
push
dec
or
dec
inc
stos
loop
sbb
add
sub
rcl
pop
inc
xlat
sub
mov
repnz
adc
enter
push
cli
test
add
fildll
and
ja
jecxz
fldcw
xchg
pop
loopne
jg
insb
pushf
mov
out
in
xchg
or
xor
add
pop
pop
js
pop
mov
ds
inc
xchg
aad
dec
xchg
or
lcall
iret
enter
imul
adc
jle
xchg
lea
or
mov
sbb
add
addr16
icebp
xchg
cltd
mov
xor
cmp
mov
cmpsl
fwait
pop
inc
ret
fildll
pop
scas
scas
mov
repz
dec
jae
adc
movsl
ja
sub
sahf
sbb
mov
xor
sarl
lahf
cmp
xchg
int
out
mov
std
test
jne
jae
movl
cmp
sub
movsb
sti
push
mov
inc
xchg
and
mov
mov
es
lods
lcall
loopne
xchg
fistpl
xchg
inc
xchg
shll
pop
sti
cmp
adc
fwait
sti
adc
mov
loope
sti
push
mov
dec
scas
aad
sub
in
cmp
hlt
fidivrs
push
in
ret
push
jl
ror
fsubs
fcmovb
arpl
je
jb
mov
xor
or
mov
push
lret
inc
je
arpl
test
out
push
out
inc
and
push
shl
sbbb
pushf
out
cmpl
push
lcall
outsb
pop
mov
mov
mov
popf
or
test
sbb
add
jbe
xchg
insl
das
fstpt
imull
fbld
inc
addr16
js
movsb
inc
ljmp
imul
mov
adc
clc
insb
sarl
mov
mov
pop
pop
cmovne
cs
or
sbb
dec
loop
sbb
add
push
popf
push
insb
cmp
mov
addr16
popa
mov
rcrl
lds
fsts
cmc
je
mov
mov
push
out
test
loopne
in
hlt
pop
dec
mov
lock
les
shlb
mov
pop
sets
jne
sbb
into
aam
rolb
addr16
int
or
fwait
loop
mov
xor
mov
mov
adc
ret
cwtl
xchg
mov
xchg
sbb
push
dec
hlt
pop
cmp
dec
lret
adc
inc
orb
arpl
and
mov
adc
lahf
pop
or
cs
test
cmpsl
je
mov
repnz
xor
or
inc
and
push
test
sbbl
out
sub
sbb
arpl
or
pop
xor
movsl
sbb
mov
aaa
and
das
push
xchg
sub
jno
testl
out
lods
add
bound
mov
nop
pushf
and
or
ret
imul
pop
inc
cmp
mov
loope
daa
aaa
ljmp
jp
ret
cwtl
xchg
push
mov
mov
leave
adc
and
pop
int
loope
mov
add
clc
fstl
cmp
loop
pop
fists
sti
push
insb
dec
lock
mov
cmp
ja
jp
mov
xchg
mov
shlb
pop
inc
mov
cmp
dec
jb
adc
jae
filds
sbb
in
fdivrs
mov
mov
inc
sti
popf
cltd
mov
shl
pop
aaa
fisttpll
lock
addr16
pop
jb
pop
and
jns
pop
outsb
call
add
inc
mov
add
ret
jae
pop
or
clc
or
ftst
push
jl
adc
icebp
test
lea
sbb
lcall
stc
call
mov
pushf
test
or
mov
sub
ret
jne
xchg
cltd
aam
pop
push
sub
repz
lret
cltd
into
fcmovbe
ss
pop
in
cs
mov
mov
outsb
sbb
mov
mov
xor
rol
das
adcl
les
sbb
push
incl
cmpsl
sbb
sti
and
push
jle
sub
shl
lcall
add
pop
inc
xchg
hlt
and
pop
sbb
and
sbb
or
jb
mov
sbb
jecxz
scas
dec
and
sbb
sub
cli
into
outsb
sbb
mov
fsubrl
cld
cmp
inc
sub
mov
movsb
nop
push
and
fistl
sub
icebp
xchg
push
jp
pop
and
lahf
lea
xchg
loope
test
dec
int3
push
push
and
and
or
or
pop
es
imul
push
jge
loopne
and
adc
jo
mov
shll
dec
cltd
and
mov
add
in
sub
or
hlt
aas
ret
cld
push
or
pop
popa
ffree
pushf
sbb
jae
sub
fidivrl
add
mov
jnp
in
mov
call
inc
cmp
and
mov
inc
jno
dec
dec
inc
stc
jno
push
sbb
xchg
pusha
es
adc
push
jg
rcrb
pop
xchg
xchg
fbld
cmp
push
push
inc
push
mov
sub
pop
mov
lret
enter
enter
or
popf
aam
jns
call
mov
mov
imul
daa
push
je
out
gs
push
sub
hlt
fisubrs
imul
push
and
and
fbstp
push
jb
je
decl
adc
stc
cmp
cmpsl
adc
or
insb
mov
out
inc
andl
mov
xor
sub
inc
outsl
push
jmp
ret
dec
cmp
jmp
mov
cs
sub
add
lret
fs
push
sub
jl
xor
mov
dec
fidivrl
loope
inc
test
sub
ror
xor
pushf
out
js
or
lea
fs
test
sbb
jp
jecxz
insb
popf
xchg
stos
mov
push
xor
movsb
adc
add
push
sub
sub
insb
shlb
push
cmpsl
cs
mov
mov
adc
pop
add
add
das
jl
add
outsl
ret
cmp
test
enter
xchg
pop
xchg
adc
add
and
aaa
rolb
push
dec
mov
mov
jns
test
adc
mov
mov
mov
lahf
pop
es
push
test
pop
cmp
add
dec
mov
sahf
mov
movsl
es
sbb
inc
nop
push
mov
es
dec
add
pop
imul
mov
loopne
inc
inc
sub
sarl
lcall
rolb
cmpsb
sbb
sbbb
aad
imul
stos
scas
jbe
xor
jl
dec
ret
lods
addr16
cmpsl
and
fsubr
xchg
enter
popa
bound
inc
out
int3
adc
data16
pop
es
arpl
into
sbb
das
add
stos
fcmovne
push
lret
pop
add
and
xchg
push
sahf
imul
ds
push
fld
ljmp
sub
mov
inc
dec
mov
mov
orb
xor
ja
arpl
mov
mov
push
xor
enter
jecxz
mov
adc
jmp
cmp
mov
outsb
clc
loop
sub
sub
jmp
out
test
xchg
enter
xor
test
subb
xor
out
fnstcw
inc
outsl
mov
fiadds
adc
loope
mov
push
out
add
mov
jb
jg
int
jnp
in
in
shrl
adc
jmp
rclb
mov
sbb
xchg
sub
sbb
cmpsb
xor
imulb
xor
ss
sub
and
and
pop
pop
and
add
adc
jg
sub
inc
outsl
pop
shrl
push
push
mov
hlt
cs
sti
ret
push
cltd
inc
imul
mov
xchg
sub
or
mov
and
xchg
shll
movsb
into
scas
adc
orl
jb
lss
xor
jo
jnp
addr16
push
aaa
daa
mov
pop
xor
mov
stos
scas
sarl
insb
push
push
clc
adc
les
outsb
fcmovbe
inc
sub
sub
cmp
cld
rcll
pop
pushf
jnp
stos
gs
push
test
inc
test
adc
jle
fimull
out
push
dec
les
jo
xchg
pusha
push
or
push
fwait
out
sub
out
jle
testl
or
lock
stos
xchg
cwtl
adc
dec
fwait
lret
sbb
mov
fsubl
jl
jp
inc
icebp
inc
push
test
xor
aad
cmp
mov
push
push
cmp
mov
push
idivb
cmp
mov
icebp
push
jl
lahf
push
shl
inc
fs
push
dec
ss
insl
push
pusha
xchg
cmp
call
pop
mov
pop
fdivr
lods
es
dec
xor
ss
push
pop
ja
jae
shr
lret
repnz
cmc
mov
push
scas
push
sub
mov
fldenv
inc
jne
cmp
jle
push
negb
pop
arpl
adc
mov
or
xor
ret
xchg
data16
lds
jge
sti
push
lret
lret
mov
sbb
inc
or
insl
ljmp
push
mov
xchg
xchg
or
mov
std
pop
mov
into
movsl
adc
adc
adc
sbb
mov
fcomi
mov
mov
or
sbb
mov
sbb
sahf
sub
sub
mov
rolb
enter
cmp
cmp
dec
push
xchg
popf
or
fnstenv
push
es
pop
shlb
into
repnz
test
shll
pop
inc
xchg
popa
adc
inc
insl
jnp
out
test
jmp
and
popf
jns
jmp
sbb
clc
lahf
pusha
into
out
ljmp
push
imul
and
jno
xor
jnp
mov
adc
sar
ja
setp
sub
adc
sbb
js
mov
adc
mov
pop
adc
mov
adc
ret
sbb
or
xor
scas
add
sbb
or
jnp
int3
cmp
rcrb
test
and
imul
xchg
gs
jle
aas
mov
pop
adc
jmp
shlb
rorb
in
xchg
scas
adc
cmpsb
mov
ret
clc
mov
inc
mov
rol
dec
out
cwtl
jb,pt
xor
pop
orl
jge
mov
push
pop
aam
aas
jne
jne
xchg
inc
adc
jbe
lods
mov
in
xchg
and
dec
int
cmpsb
sahf
jnp
mov
arpl
mov
incb
xor
add
out
inc
ret
gs
loop
popf
pop
mov
cltd
jne
decl
loope
add
repnz
lods
push
test
test
xchg
sbb
xchg
lods
xor
sbb
mov
inc
js
leave
inc
inc
cmp
pusha
push
push
mov
pushf
sub
sbb
outsl
cli
leave
or
aaa
mov
cmpsl
outsl
mov
repnz
cltd
in
icebp
pop
cmp
je
and
jnp
nop
jmp
mov
jno
ret
ret
xor
dec
mov
out
mov
pop
lret
dec
leave
stos
dec
pop
cmp
std
inc
sbb
mov
dec
sub
sbb
testb
xchg
adc
jo
xchg
nop
xor
dec
test
repz
jmp
push
mov
lods
in
or
push
inc
mov
jg
pop
inc
movsl
cltd
ja
frstor
xchg
outsl
inc
adc
cltd
iret
divl
data16
and
je
lods
xor
xchg
or
lret
xchg
push
push
cmpb
jbe
ss
fs
and
add
jb
jge
icebp
mov
movsb
dec
mov
cmc
es
jns
gs
clc
movsl
sbb
mov
mov
notl
add
xlat
lcall
inc
xor
pop
in
rorl
push
adc
xor
out
sub
outsb
lods
dec
sub
and
fdivrp
pop
mov
or
imul
mov
cltd
mov
imul
add
dec
imul
xor
jl
sub
cltd
ss
fs
sbb
addr16
sub
sub
pop
mov
sub
movsb
jo
push
sub
pop
fnop
nop
mov
xchg
sbbl
jl
fstl
pop
or
or
push
inc
fnstcw
insl
cmp
aad
test
jmp
mov
push
pop
jno
adc
or
and
cmp
fldl
in
das
xchg
aas
jecxz
stos
xchg
pop
nop
repnz
xorl
push
jns
xchg
pop
push
push
jge
fwait
clc
cmp
imul
in
adc
outsb
jl
daa
repnz
cld
mov
ds
sbb
popf
jmp
pop
orl
scas
insb
or
ret
frstor
mov
mov
mov
mov
xchg
ja
sub
pushf
incl
repz
dec
cmp
mov
mov
daa
adc
jae
stc
ficomps
je,pt
lret
mov
ja
pop
sbb
jne
push
popf
call
xor
fs
test
mov
inc
add
mov
popf
rol
mov
ret
sub
xor
jns
push
jg
movsb
cmp
gs
mov
cmp
icebp
jg
mov
pushf
jbe
mov
fincstp
rcl
aaa
push
cmp
addr16
dec
or
push
data16
aam
aad
dec
aad
ret
cmp
out
or
mov
cmc
inc
ret
iret
mov
repnz
das
lock
pop
or
mov
mov
xchg
cmpsb
aaa
ja
sub
sub
add
mov
or
rcrb
fadds
xchg
xchg
jno
testl
or
imul
ret
popa
popf
sahf
xchg
dec
jns
sbb
sub
subl
mov
lods
xchg
test
xlat
jmp
std
mov
aaa
or
xlat
adc
sub
push
ds
inc
popf
in
push
ds
sbb
mov
scas
fmul
out
clc
ss
clc
xchg
fwait
xchg
inc
mov
imul
adc
dec
pop
push
xor
scas
mov
add
jbe
cmp
xor
repz
sbb
push
inc
push
mov
movsb
je
mov
cwtl
sbb
je
rorl
pop
rcrb
sbb
nop
lahf
fildl
loop
test
fwait
mov
in
nop
subl
sbbb
mov
cmp
les
xor
enter
pusha
cmp
cwtl
aas
sbb
clc
inc
imul
and
cli
push
cmp
xchg
mov
je
pop
fdivrl
dec
cld
out
scas
dec
sbb
adc
sbb
adc
shl
pop
mov
in
and
js
fwait
mov
mov
cmp
popa
xchg
mov
xor
imul
and
inc
jge
inc
inc
ja
xor
in
xchg
mov
dec
jl
cltd
sbb
mov
dec
sub
mov
fs
cmpsl
push
mov
sarb
mov
cmpl
mov
addr16
loopne
cmp
outsl
inc
jle
je
aaa
mov
push
stos
jb
pop
nop
add
add
pusha
lcall
cmp
bound
lcall
cmp
pop
add
and
movsb
pusha
pop
mov
fwait
lods
push
dec
mov
aam
inc
cmp
out
les
sti
inc
push
mov
push
rolb
push
test
insl
add
stos
push
cld
sti
mov
pop
mov
jno
addr16
jno
mov
lret
cmc
jno
lahf
cwtl
out
jmp
in
in
xchg
mulb
xor
push
ss
jno
scas
cmpsl
dec
lods
dec
test
nop
xchg
out
and
int3
or
or
mov
jmp
lock
pop
out
repnz
clc
std
out
inc
adc
movb
jmp
inc
jne
adc
or
or
pop
push
push
repz
pop
sarl
xlat
insl
stos
and
test
hlt
lret
outsl
dec
pop
cltd
mulb
xor
rcl
sbb
xchg
dec
rorl
rorb
in
bound
nop
andl
sti
mov
shlb
in
push
xchg
rcll
xchg
mov
rcrb
outsl
syscall
mov
or
sub
sbb
pop
popf
cld
or
nop
aam
and
enter
inc
cwtl
fstpt
std
or
sub
add
mov
ljmp
mov
daa
push
mov
pop
fdivrs
rclb
fs
mov
sbb
mov
sbb
add
loop
xchg
mov
or
push
mov
sbb
xor
inc
sbb
negl
xor
test
addl
dec
call
jp
mov
mov
cli
push
outsl
lds
fs
pop
daa
xchg
fnstenv
les
dec
jp
enter
xlat
iret
arpl
and
mov
sbb
sahf
stos
inc
mov
je
mov
out
add
mov
or
inc
xchg
jae
scas
mov
sub
sbb
scas
pop
dec
inc
ret
jmp
imul
pop
test
sar
lods
aad
xor
jnp
comiss
adc
popa
aaa
iret
xor
dec
cmpsb
out
dec
daa
fstpl
call
mov
dec
jl
out
jno
xchg
mulb
in
cmpsl
adc
mov
cmp
fistps
mov
daa
ret
ljmp
jbe
add
mov
xlat
ror
mov
mov
cmp
out
nop
fidivs
push
sub
push
pop
inc
pushf
out
in
inc
xchg
mov
dec
int3
es
push
in
test
push
mov
into
fadds
push
cmc
jo
mov
pushl
into
ja
ficompl
inc
push
adc
mov
stc
mov
fstp
inc
jg
adc
arpl
popa
loopne
clc
lcall
sbb
push
adc
fwait
pop
push
inc
xchg
repz
mov
sbb
vmread
jae
add
sbb
sub
movsb
push
sbb
data16
divb
pop
fdivr
jecxz
adc
dec
push
sub
leave
mov
insl
test
cmp
loope
xchg
add
lret
daa
xchg
inc
pusha
lods
call
fdivl
stc
je
cwtl
enter
aas
call
std
call
xchg
and
lds
data16
ds
aas
push
lahf
mov
xlat
cmp
pop
outsb
out
cmp
int
stos
push
dec
insl
notb
insb
fs
sbb
add
xchg
mov
cltd
inc
adc
negl
out
pop
in
push
in
adc
test
jl
mov
push
test
ret
in
aaa
pushf
add
cmpsb
popf
xor
jae
stos
pop
mov
mov
or
xor
jnp
lahf
clc
call
xchg
dec
mov
daa
cmpsl
jmp
sahf
inc
scas
push
add
bound
sbb
mov
push
sbb
mov
dec
inc
sub
mov
sbb
mov
inc
shlb
dec
jae
add
outsl
sbb
mov
push
bound
pop
sbb
cmp
pop
outsb
fidivs
clc
sub
inc
mov
push
mov
movsl
xor
xchg
sub
mov
inc
dec
jne
fidivrl
jae
or
stos
mov
clc
in
dec
inc
jne
sbb
clc
adc
iret
mov
js
jge
pushf
cmpsb
test
cmp
sub
cmp
es
fcoml
mov
inc
inc
popa
sbb
sub
or
in
mov
or
lret
sbb
aaa
push
dec
faddl
ja
aaa
add
xor
shlb
jae
inc
popa
ret
dec
scas
rorl
aam
xor
into
dec
repz
icebp
test
mov
out
loopne
int3
lret
sti
sub
cld
dec
adc
repz
adc
push
push
int3
repz
rorb
xchg
mov
lcall
jle
sbb
jp
cmp
inc
jmp
adc
mov
outsl
addr16
aad
pushf
sbb
sub
push
mov
movsb
fidivs
shr
out
xor
into
loope
into
cld
test
cmp
enter
cwtl
cwtl
ror
sub
pop
pop
movb
cmpsb
push
shll
jne,pt
sahf
mov
dec
push
sbb
xor
cmc
pop
push
mov
pop
mov
cli
mov
xchg
test
pop
push
out
or
sub
inc
out
jo
sbb
sahf
imul
test
ja
out
movsl
dec
mov
aam
jg
jo
js
out
in
movsb
sub
mov
movsl
cmpsb
dec
xchg
adc
jl
pop
ret
add
mov
mov
mov
mov
stos
dec
push
mov
inc
dec
fst
scas
sahf
lods
mov
je
imul
int3
xchg
xor
mov
aad
outsb
jp
pop
pusha
in
mov
mov
mov
xor
ja
jmp
rep
movl
pop
aas
in
xchg
or
cli
jmp
adc
and
repnz
addr16
adc
icebp
mov
or
add
push
dec
sub
pop
xor
dec
jge
test
mov
in
shrl
mov
lea
dec
push
ret
int3
mov
fisubs
jp
jne
mov
fdivrs
dec
xor
or
popa
add
jecxz
rcrl
int3
and
in
cmp
pop
adc
cmc
cli
cmp
mov
das
std
sahf
outsb
es
jns
inc
xor
or
jg
loop
pop
popf
sarl
pop
dec
loope
dec
daa
sti
mov
sbb
or
sub
dec
jbe
dec
lds
and
sarb
dec
add
into
jo
fsub
gs
pop
sbb
jge
in
jno
or
mov
jno
pushf
sbb
and
stc
std
mov
incl
mov
add
add
std
lods
orb
pop
scas
xor
jb
test
adc
add
mov
sub
cmp
xchg
xchg
jmp
xchg
lods
fbld
ss
push
jo
sbb
xchg
daa
xor
repz
neg
push
jo
jne
cmp
and
mov
cli
and
push
dec
push
mov
cmpsb
adc
nop
lcall
inc
in
cmp
mov
je
pushf
or
mov
aas
lea
adc
jg
in
xor
xor
pop
pop
cmpsb
clc
mov
insl
lods
inc
push
in
nop
cmpb
frstor
adc
sub
pop
xchg
add
aaa
in
ret
pop
xchg
jecxz
pushf
mov
dec
gs
filds
lahf
arpl
dec
inc
inc
ss
jp
mov
cmp
sbb
mov
imul
mov
push
or
leave
andb
test
cmp
ljmp
jbe
clc
mov
inc
loope
xchg
mov
test
mov
fstps
aad
mov
adc
and
fisubl
call
xor
std
cmp
fcoms
enter
lret
pop
rcr
jno
adc
subb
xor
pop
testb
es
adc
jbe
data16
add
mov
xchg
fsubrp
sbb
pop
xchg
inc
push
daa
test
out
xchg
push
test
and
add
test
inc
mov
rcr
ja
add
negl
lods
and
pop
push
lahf
sbb
cltd
jl
ljmp
mov
cmpsl
dec
movsl
stos
int
xorb
and
xchg
xor
mov
ficoml
push
xchg
clc
fwait
loope
into
out
das
jb
dec
stc
addr16
inc
sub
pop
xlat
dec
repz
sbb
jae
hlt
mov
test
int
and
xchg
int
std
imul
jae
outsb
mov
aas
adc
cmpsl
mov
add
jnp
mov
jmp
cmp
orb
int
mov
aam
sbb
push
mov
test
in
mov
push
jmp
pop
pop
out
push
cli
pop
fsubr
pop
leave
sbb
mov
mov
movsl
cmp
sti
mov
add
jbe,pn
imul
cltd
jo
mov
jge
insb
sbb
mov
or
and
mov
pop
mov
ret
sbb
outsl
into
test
ljmp
divb
dec
imul
lret
mov
sahf
pop
xor
insl
cmp
dec
outsb
mov
cmpsl
fwait
lret
sbb
aaa
and
jbe
pop
out
aaa
pop
jecxz
xchg
fsubs
cmpsl
mov
pop
cmp
lret
mov
mov
ret
mov
popf
add
hlt
xchg
andb
jl
in
test
jb
sbb
add
movsl
loopne
fsts
xchg
xchg
cwtl
icebp
sub
es
in
push
pop
cmovb
pushf
add
adc
rcl
mov
mov
dec
shrb
daa
lds
test
aas
xchg
adc
sbb
inc
fisubs
hlt
inc
cmpsb
xchg
pop
sete
adc
int3
xchg
cmp
add
es
mov
ror
xchg
mov
pusha
push
out
push
test
repnz
mov
sti
aas
dec
fstps
mov
not
push
sub
mov
jnp
pop
lret
or
in
into
mov
lret
or
je
mov
xchg
or
and
xchg
addr16
fwait
shrb
and
test
call
pop
xor
fwait
cwtl
test
lods
cmpsb
cld
and
lods
pop
incb
mov
xor
and
inc
out
push
inc
xchg
mov
adc
out
idiv
xchg
mov
outsl
pop
les
dec
mov
or
imul
imull
mov
outsl
jg
sbb
ljmp
mov
pop
cmp
pop
cmc
xchg
icebp
ret
jl
add
fwait
mov
adc
out
xchg
insb
pushf
dec
push
jb
add
push
xchg
mov
jge
js
int3
sub
xchg
sbb
sarb
in
or
fildll
outsb
sbb
inc
andb
jg
out
cmc
jo
sub
in
or
out
cmp
xchg
popf
mov
and
inc
cmc
stos
and
dec
mov
push
push
hlt
pusha
mov
cli
dec
cmp
shl
imul
test
iret
test
push
into
lret
mov
mov
scas
in
shll
int3
lods
sbb
testl
pusha
jbe
mov
fs
add
in
outsl
pop
sbb
mov
dec
xor
lods
mov
lods
xor
mov
cltd
xor
add
or
xor
lods
nop
outsb
xchg
repz
bound
mov
loopne
pop
push
jmp
in
or
xchg
ror
jecxz
aaa
pop
pop
cli
sbb
inc
xor
loope
mov
lea
push
mov
scas
dec
add
repnz
scas
lret
sbb
test
jbe
mov
das
pushf
lods
pop
ffree
int3
arpl
xchg
cmpsb
add
in
ds
mov
cmp
add
mov
popa
pop
add
icebp
fdivl
mov
lock
idiv
jle
sbb
mov
out
pop
scas
cmp
stos
pop
aad
dec
add
subl
lods
shr
jp
add
movsl
xor
mov
jmp
repnz
call
pop
test
loope
stos
stos
mov
cmovbe
mov
adc
push
inc
jp
inc
in
cmp
popa
shlb
add
sub
out
mov
mov
aaa
jno
mov
in
inc
inc
mov
pop
inc
push
popf
jb
cld
cwtl
stos
push
mov
test
adc
pop
mov
lea
rcrb
fcmovb
nop
adc
mov
pop
cmpsl
push
sbb
pushf
pop
out
call
mov
cltd
mov
sti
jle
sub
inc
fwait
das
inc
das
add
cmp
xchg
adc
divb
jp
xchg
hlt
negl
repnz
addr16
aad
xchg
adc
sbb
inc
mov
mov
and
xorb
pop
mov
rorl
mov
stos
add
imul
push
shlb
xlat
mov
jo
mov
mov
push
mov
mov
mov
mov
add
popf
lret
sti
jae
sub
stos
cmpsl
push
ss
nop
push
test
rcll
mov
cltd
das
jp
or
mov
push
into
or
xchg
pop
loopne
push
outsl
stc
addr16
out
sub
js
adcl
xchg
and
push
stos
je
ds
lods
outsl
aad
arpl
ds
fdivp
and
cmp
popf
int
js
sub
lahf
sbb
mov
mov
in
repnz
lods
std
addr16
icebp
or
mov
inc
out
mov
mov
subb
cmpsl
cmp
mov
sbb
sbbl
in
insb
add
subb
add
mov
pop
into
jecxz
dec
xor
jns
dec
pop
mov
mov
insl
inc
aas
or
popf
pusha
pop
jmp
pop
mulb
jge
js
cmp
test
cmc
dec
loop
cld
outsb
add
dec
arpl
out
outsb
andb
test
pop
sbb
mov
lods
mov
in
pop
sbb
adc
mov
xchg
push
xchg
cmp
bound
add
psubusb
nop
lahf
mov
push
jno
cmp
cmpsl
imul
lods
add
imul
inc
repz
lcall
or
mov
repz
or
insb
sbb
jo
cmp
out
adcl
and
pop
cmc
insl
mov
testb
and
inc
scas
ljmp
and
lds
add
test
aaa
cmp
sbb
fwait
cmp
in
mov
pop
lret
jle
outsl
ret
fimull
cmpsb
pop
xchg
aaa
mov
mov
popf
jno
dec
or
and
imul
lahf
push
cmp
adc
cmpsl
repnz
in
and
lods
repnz
sub
xchg
mov
mov
pop
sbb
mov
or
pop
inc
push
jecxz
das
mov
sbb
pop
roll
mov
and
movsl
jne
je
nop
clc
xor
lcall
push
xchg
arpl
sbb
jge
pop
fcompl
sbb
unpcklps
cmpsb
push
dec
mov
shll
and
cmp
call
mov
test
mov
mov
addl
out
add
rolb
repnz
scas
adc
test
mov
je
pop
jp
mov
push
jns
sarb
rorl
and
sub
xchg
jp
clc
adc
sbb
jne
inc
dec
or
lcall
add
adc
test
ljmp
rorb
lahf
xchg
out
lret
fidivrs
xchg
or
lret
jae
imull
lret
mov
gs
dec
mov
pop
pop
aad
add
add
or
je
mov
stos
add
shlb
or
add
mov
lret
lret
mov
outsb
push
pop
adcb
add
sbbb
movsb
fistpll
mov
and
xchg
scas
mov
adc
xchg
sti
dec
sbbl
decb
leave
dec
mov
fnstsw
aas
mov
or
repnz
clc
shrb
inc
mov
xchg
dec
add
jno
push
sbb
rcll
push
mov
inc
jo
adc
cmp
or
mov
adc
add
mull
inc
sbb
xchg
leave
icebp
mov
push
sbb
cs
pop
push
repz
cld
clc
and
data16
ret
lcall
out
lahf
scas
lret
xchg
ss
sbb
dec
mov
andl
jb
adc
cmp
daa
add
clc
subb
mov
push
jle
cmp
jo
rcr
jne
or
lods
mov
in
xchg
mov
std
repz
xorb
sub
mov
xor
pop
test
sub
loope
stos
jb
movsb
mov
insl
push
dec
fisttpl
mov
xchg
sbb
lret
out
scas
xchg
sarl
xchg
cmp
pop
inc
jge
push
sub
lea
push
sbb
ss
addr16
repnz
xchg
mov
cwtl
mov
sbb
inc
test
mov
cmp
inc
iret
jecxz
rolb
mov
jb
mov
mul
iret
loopne
mov
scas
addr16
pushf
icebp
sub
inc
xchg
test
loope
push
dec
pop
xchg
inc
icebp
daa
inc
cmp
push
arpl
fwait
and
cmc
and
paddw
jmp
xor
mov
lahf
add
inc
mov
icebp
loop
pop
cmp
inc
jl
or
sbb
dec
shlb
movsb
jp
xor
sub
notl
mov
mov
test
dec
push
inc
mov
movl
xchg
jp
inc
ds
pop
cmp
scas
xor
fsubrp
enter
sti
dec
jno
dec
cmp
cmpsl
cmpsb
sahf
push
xor
or
sbb
sbb
mov
outsb
or
inc
outsl
fwait
sub
mov
sarb
cmp
sbb
inc
sbb
in
popa
and
pop
movsl
jge
lods
sbb
mov
stos
and
psrad
adc
xchg
inc
mov
addr16
cmp
inc
mov
cmpsl
aam
shlb
out
cmpsb
xor
jo
hlt
das
or
cs
add
pop
clc
mov
ljmp
xchg
add
xor
cli
fnstcw
inc
and
shrb
sub
sbb
cli
or
arpl
add
jl
jo
mov
sbb
sti
sub
into
jbe
fcoms
push
xchg
jae
mov
add
mov
xchg
mov
or
adc
xchg
aad
jo
dec
xchg
popa
sub
sbb
dec
push
stos
lret
in
cld
xchg
xor
and
cmp
jp
sub
shrl
xchg
mov
repz
sbbl
into
sbb
inc
out
cs
dec
mov
lahf
sub
cmp
push
shll
sbb
pop
aad
lret
xor
push
mov
repnz
mov
adcb
fistl
gs
out
lret
test
xchg
sbb
dec
bound
mov
dec
ret
adc
loop
mov
ret
stc
sahf
mov
xchg
and
cld
cmp
xorb
lds
imul
lods
insb
std
std
xchg
jg
repnz
xor
jp
adc
rorl
sbb
xlat
pop
cmp
imul
cmpb
rolb
ret
dec
ljmp
push
pop
push
data16
loopne
cli
fiadds
inc
mov
es
repz
cs
adcl
push
shll
cmpsb
xchg
push
xorl
lret
dec
arpl
xchg
sub
mov
dec
pushf
mov
cmp
mov
sti
sbb
popf
test
outsb
inc
xchg
clc
loopne
outsl
mull
cmpsl
sbb
gs
and
es
popa
enter
jae
es
pop
jecxz
stc
repnz
inc
pop
mov
sbbl
pop
jge
jns
sbb
std
cltd
imul
mov
and
iret
out
loope
std
push
mov
mov
test
pushf
dec
je
dec
pop
ljmp
sbb
cli
sbb
into
test
ljmp
test
pushw
scas
out
stc
mov
pop
adc
sbb
mov
mov
mov
dec
ljmp
imul
or
xchg
sbb
mov
das
mov
pushf
pop
and
xor
jnp
hlt
push
mov
sbb
mov
xor
sarl
mov
cmpl
popa
sub
add
ret
sbb
and
sbb
xchg
test
xor
repnz
sub
xchg
jecxz
pushf
loop
lods
inc
cmp
and
out
mov
push
jns
or
and
js
pop
push
lea
into
mov
add
push
imul
js
push
push
lret
adc
int3
or
xchg
adc
lahf
pop
sbb
imul
fwait
aaa
int3
dec
cli
std
notb
xlat
pop
insl
movl
inc
xchg
es
les
sub
and
jmp
out
pop
nop
repnz
cwtl
fsubl
enter
loope
dec
xchg
jnp
dec
jge
mov
cli
push
and
mov
and
cmp
and
pop
lds
ret
dec
int3
sbb
int
test
xor
cmp
loop
or
xchg
xor
or
mov
ljmp
push
xor
push
into
mov
xchg
mov
xor
jnp
mov
int3
daa
nop
aad
subb
fistpll
fs
arpl
mov
xchg
scas
add
dec
xor
xor
push
fcoml
test
cs
ja
sub
outsl
movsl
popa
rolb
adc
dec
pop
jb
in
mov
mov
test
int3
cmpsl
lret
xchg
fdivrl
fsubrs
push
cli
fneni(8087
push
scas
cmp
jle
xchg
in
sub
jno
movaps
icebp
mov
adc
pop
jmp
int
sbb
sbb
jb
cmpsl
pusha
inc
addl
dec
mov
mov
dec
pop
leave
std
scas
ljmp
push
jp
loop
or
inc
hlt
or
mov
idivb
fidivl
mov
fmul
mov
add
jle
mov
or
rcl
sub
cmc
insb
sub
xchg
push
and
pop
loopne
call
test
xchg
aad
cld
jle
xchg
xor
sbb
and
aad
xchg
rcll
add
fdivl
xchg
add
cmp
das
or
aam
jns
xchg
js
mov
fdiv
es
xchg
outsl
loopne
jnp
imul
pop
xchg
jo
js
jno
fcoml
mov
mov
stos
add
inc
adc
int
icebp
adc
sbb
adc
fildl
pop
jno
dec
cmpsb
xor
in
mov
arpl
push
add
add
pushf
jnp
mov
lds
dec
cltd
xchg
outsb
dec
arpl
mov
add
dec
and
inc
mov
fsts
lahf
insb
sub
xchg
movsl
jne
pop
push
dec
hlt
pushf
out
sbb
rclb
push
movsl
add
imul
or
cmc
pop
lock
hlt
call
jecxz
jno
push
hlt
test
push
inc
cwtl
scas
movsb
jmp
fisttpll
scas
add
adcl
sub
into
xchg
mov
js
xchg
or
pop
insl
lods
into
insb
mov
popf
cs
pushf
test
push
fcomps
nop
jae
lcall
jo
jecxz,pn
pop
xchg
inc
jecxz
popa
clc
iret
cmp
in
popf
sarb
js
and
hlt
pushl
add
cs
cld
and
jae
add
leave
repz
divps
mov
cld
pop
dec
xor
scas
pop
push
scas
out
rcrl
sub
fldcw
mov
ret
inc
bt
addr16
or
shl
pop
mov
test
push
push
rcrl
push
lods
insb
dec
inc
ficompl
add
cltd
cmp
xor
loop
cmp
lods
and
stos
xor
cld
cmp
push
loopne
aas
xorb
or
mov
inc
aas
jbe
cli
xchg
xchg
push
mov
jecxz
mov
into
push
sbb
inc
lock
mov
xor
call
gs
fnstcw
out
dec
iret
xor
popa
and
cwtl
test
xor
in
and
arpl
test
xchg
icebp
jns
jl
lds
loop
aaa
mov
mov
xchg
jbe
fisubrl
inc
sahf
data16
push
cmp
cmp
pusha
fadds
aas
jne
mov
inc
ret
adc
adc
test
cli
popl
sub
fidivs
mov
dec
dec
cwtl
and
push
xchg
std
sbb
lods
add
mov
add
sbb
jbe
pop
movsl
mov
mov
lea
enter
icebp
repz
sbb
cmp
dec
lds
inc
add
out
cwtl
xor
ret
lods
icebp
push
cltd
mov
jo
jge
or
push
fwait
cld
shlb
mov
sub
dec
je
lahf
mov
mov
mov
fwait
adc
stos
xchg
dec
cmpl
and
dec
mov
cwtl
add
mov
std
aam
or
push
xor
jnp
cwtl
iret
pop
push
hlt
cwtl
js
and
loop
lcall
aaa
loopne
pop
ror
mov
inc
and
xchg
and
pop
sbb
cs
sub
pop
or
neg
daa
sbb
outsb
int3
shrl
insb
sub
neg
stc
sbb
or
sahf
pop
aad
mov
sub
xchg
test
jns
sub
mov
aam
div
hlt
mov
xchg
add
pop
outsl
shrb
pop
inc
stc
inc
arpl
repnz
aas
jns
xchg
mov
pop
jns
add
jle
and
mov
cmp
adc
sub
mov
cmp
pop
sub
mov
das
fcmovbe
jbe
pop
xor
dec
daa
xchg
inc
inc
sub
out
mov
stos
jb
mov
xchg
or
fld
sub
imul
testb
mov
add
lret
cld
cmp
dec
push
push
pusha
add
sbbb
jmp
push
mov
add
cli
push
lods
cmp
adc
cmp
pop
adc
jg
sbb
add
mov
je
inc
sti
adc
add
mov
ljmp
mov
iret
mov
sub
out
popa
lock
mov
and
sub
sbb
cltd
pminub
jmp
sbb
psubd
pusha
in
push
inc
das
jne
pop
xor
push
int
xchg
jecxz
in
mov
cli
jmp
or
or
test
ss
jbe
imulb
leave
inc
subl
sahf
and
in
call
jb
mov
sbb
icebp
iret
pushf
jle
div
lret
add
fmull
adc
mov
push
daa
hlt
dec
lea
mov
loope
adc
shrl
mov
bnd
std
lods
or
xchg
add
or
fistpl
insb
adc
add
inc
bound
cmp
add
xor
mov
sbb
jmp
lahf
gs
std
xor
movsb
mov
pop
xor
xlat
jno
outsb
test
sbb
cs
je
loopne
sbb
or
jae
adc
sahf
pop
push
jb
cmpsb
outsb
int3
xchg
fs
pop
xor
dec
adc
bound
adc
test
outsl
arpl
lahf
movsl
subl
mov
jne
ljmp
xchg
pop
icebp
loopne
pop
jns
xor
ljmp
sub
pop
sbb
add
mull
lahf
in
mov
mov
icebp
ss
xor
enter
movsl
inc
subb
call
mov
xchg
xchg
scas
xchg
insl
sbb
dec
and
in
push
in
mov
cltd
xor
movsl
push
out
lea
xchg
push
sub
adc
scas
and
movsl
push
mov
lea
cmp
loop
lret
into
test
fistpll
mov
mov
shlb
leave
repz
int
dec
pop
js
or
cmp
mov
jno
pop
mov
mov
pop
cli
pushf
test
leave
aam
xchg
dec
sbb
ja
xchg
cmp
ja
imul
lcall
sub
cmp
sbb
adc
pop
std
insl
in
shlb
xchg
movsb
cld
aam
cld
mov
sbb
adc
imull
pop
cmpsl
ja
push
add
mov
jmp
sbb
xor
nop
add
fs
incb
or
mov
movsw
push
adc
adc
mov
or
daa
mov
das
mov
mov
sub
ret
out
inc
ds
pop
stos
in
sub
data16
lahf
js
or
and
mov
fsubl
outsl
out
jnp,pn
adc
push
fists
sbb
xchg
push
popa
sbb
jge
daa
fsubr
sbb
xor
xchg
rcl
fdiv
mov
inc
and
xor
scas
jne
pop
insl
unpcklps
dec
lods
cmpsb
psubusw
mov
mov
jmp
mov
xchg
jno
mov
mov
cwtl
js
inc
ret
sbb
push
sbb
outsb
xor
aas
sahf
add
push
divb
int
fwait
pop
or
lods
pushf
sbb
jmp
cmc
jo
mov
std
scas
dec
cmp
in
push
and
xor
mov
jl
sbb
pop
mov
mov
mov
fwait
in
and
xchg
pop
jno
jnp
sbb
pop
in
mov
dec
mov
daa
inc
icebp
cld
push
lret
iret
dec
sub
mov
lds
mov
cmp
outsl
sbb
adc
jmp
shll
xchg
push
pop
shll
lahf
xchg
add
mov
mov
sub
std
fldenv
pop
aad
mov
mov
lock
enter
xchg
mov
pop
inc
and
or
push
std
jne
aas
out
pusha
call
cmp
mov
mov
push
lock
and
sbb
add
nop
mov
movsb
ret
inc
mov
cmp
lds
sbb
lock
push
xchg
sub
push
cwtl
mov
test
xor
jg
mov
dec
inc
pop
aam
jnp
adc
jae
ja
inc
and
jbe
pop
inc
fldl
movsl
outsb
xor
sub
lret
fadds
std
add
loop
and
or
jmp
adc
mov
daa
adc
sub
adc
add
mov
outsb
outsl
add
pusha
adcl
xchg
mov
aad
xor
inc
ljmp
arpl
sbb
jae
jo
jp
xchg
jg
mov
inc
rolb
pop
cmpb
jle
test
lods
jmp
pop
notb
cmpsl
mov
rorb
xchg
nop
and
ja
lcall
or
cmp
cmp
mov
pop
adc
xchg
cmp
decb
mov
mov
and
and
jmp
xchg
pusha
aam
mov
and
and
adc
cmpsb
movsl
xor
inc
fcoms
lret
or
aaa
cmpsb
mov
test
xor
xchg
pop
int
push
add
testl
add
sub
mov
jmp
push
outsb
jne
inc
jnp
push
mov
adc
push
sub
adc
loop
mov
lds
aaa
popf
lret
jmp
jb
pop
mov
jbe
adc
inc
mov
mov
mov
bound
loop
notb
mov
jo
test
data16
std
xchg
inc
mov
dec
jne
inc
in
ds
adc
imul
out
add
adc
mov
scas
inc
xchg
arpl
pop
fdivs
sbb
cmp
lret
das
xor
mov
add
in
mov
cli
push
decl
stos
addl
clc
inc
push
pop
xor
xchg
test
ret
push
lret
inc
ds
lret
jns
mov
xor
xrelease
pop
daa
lods
andl
push
pop
fsubs
or
push
movsb
mov
adc
add
lret
aas
adc
push
outsl
push
imul
cmp
shrl
add
cmp
repnz
adc
and
mov
lahf
adc
inc
dec
mov
adc
pop
push
shr
dec
xor
test
jno
scas
cli
mov
addr16
rolb
loopne
and
or
mov
sub
pop
mov
push
pusha
xchg
dec
push
adc
into
out
sub
outsb
cltd
xor
cltd
mov
and
sub
jbe
cwtl
and
pop
or
mov
rcrb
leave
sahf
or
dec
loope
lret
ds
in
sub
stos
xchg
inc
sub
pushf
xlat
leave
dec
sbb
mov
xchg
test
cmp
clc
sub
jbe
cmp
cmpsl
xchg
xlat
das
jnp
jl
ljmp
ror
stc
push
push
ja
xor
mov
pop
mulb
xor
sbb
jecxz
rcrb
mov
cwtl
stc
sahf
push
fisttpl
sbbl
jle
jne
repz
fdivrl
push
fpatan
adc
cwtl
filds
inc
in
xor
dec
push
mov
dec
subl
sbb
out
sbb
add
push
vsqrtps
aaa
inc
cwtl
dec
push
sub
mov
sbb
dec
fisubl
xor
ss
pop
inc
int3
fwait
daa
sbb
xor
cmc
pop
push
adc
inc
sub
out
movsl
jp
xor
dec
sub
aad
xor
dec
xorl
clc
fwait
loopne
xor
dec
icebp
fwait
xchg
inc
rorl
cmpsl
bound
mov
inc
adc
sub
mov
insl
jne
push
sub
call
jp
pop
inc
je
ja
jbe
scas
leave
add
mov
mov
dec
js
pop
inc
sub
mov
sar
jbe
call
gs
clc
mov
imul
jl
insb
push
rcll
mov
fidivrs
in
adc
arpl
sar
cmp
mov
divl
inc
fidivl
jb
mov
jb
inc
roll
add
cmp
lock
push
fcomp
test
xor
jb
push
or
dec
lock
cmc
or
fcmovu
jl
xchg
adc
stos
or
push
outsb
icebp
pop
sbb
jmp
pop
adc
inc
mov
dec
test
push
ja
hlt
cltd
jl
aas
cld
hlt
outsb
sahf
dec
mov
cmp
test
jge
in
mov
push
pop
nop
inc
rorl
ds
mov
dec
xchg
lret
cmpsb
loopne
outsb
mov
mov
add
in
or
sti
mov
pop
push
test
sub
and
xor
sub
or
xor
mov
pop
inc
into
pusha
add
sbb
mov
repz
aad
add
jnp
adc
daa
and
ss
out
inc
scas
push
ljmp
sbb
adc
inc
and
mov
mov
sbb
xor
enter
add
ja
in
sti
test
pusha
xchg
add
repz
stos
stc
or
in
lea
inc
xchg
icebp
jp
lock
lcall
in
jp
repz
loop
lcall
sub
mov
push
stos
sbb
xchg
cltd
stos
aaa
cmc
jmp
sbb
std
shrb
cmc
cmp
mov
push
fisubl
jl
out
mov
and
jne
out
cmpsl
push
cmp
mov
mov
xor
stos
pop
mov
dec
push
lods
and
arpl
pushf
push
cmove
in
mov
mov
loope
in
aas
dec
and
dec
mov
push
jmp
into
add
icebp
mov
out
pop
shr
std
jg
cli
int3
pushf
outsl
adc
jae
out
in
push
hlt
dec
sub
nop
xor
in
xor
enter
mov
add
aas
push
shll
insl
dec
sbb
pop
xchg
jne
ret
out
fucomp
andl
gs
pusha
jecxz
xor
jbe
pop
inc
ss
lods
jnp
mov
clc
scas
leave
test
call
jne
arpl
xor
dec
bound
or
cmpl
sahf
push
scas
mov
adc
adc
push
rolb
and
fldt
dec
pop
xor
sti
xchg
popl
jp
ljmp
jnp
bound
mov
divl
lods
mov
inc
int
pusha
loop
inc
pop
pop
fidivs
adc
push
lea
mov
push
pushf
stc
lea
dec
push
std
dec
or
lret
mov
jge
cmc
cld
adc
pop
or
push
fists
rcll
sarb
sub
xchg
push
mov
mov
cmp
mov
xchg
pop
shrb
enter
push
ret
fstps
mov
stos
or
shll
cli
mov
repnz
or
shl
stos
ss
mov
push
xor
inc
lret
cmp
or
stos
cmpsb
rcl
ljmp
lret
jnp,pt
fdivp
pop
sbb
xchg
cli
lods
push
pop
xor
sarl
test
fdivs
pop
rcll
or
and
and
cmp
cs
mov
repz
mov
lahf
out
call
lret
out
out
sub
mov
bound
bound
stc
mov
xchg
cwtl
movsb
cmp
push
int3
std
jbe
nop
outsl
loop
xchg
cmp
fimuls
inc
sub
cmp
pop
call
ss
aad
sbb
jnp
mov
inc
cmp
pop
out
js
vpaddb
xchg
mov
aaa
pop
shl
loop
dec
lret
xchg
shlb
jecxz
pop
inc
jg
adcb
mov
mov
fmul
sub
inc
sbb
pop
lret
orb
imul
mov
cmp
sti
insl
pop
xchg
daa
adc
gs
sub
adc
and
mov
push
subl
cli
mov
xchg
jg
mov
push
add
xlat
pushf
ja
push
add
or
aaa
mov
cmpsl
pop
and
jno
out
shrl
inc
fmuls
sbb
mov
push
mov
add
push
or
and
inc
adc
xchg
sbb
or
pop
and
and
mov
pop
push
hlt
add
enter
pop
cld
cli
inc
clc
add
cmovs
xchg
inc
xchg
sub
cmpsl
shll
lea
pop
push
xor
int3
cmp
nop
popa
cmp
and
ret
sbb
je
jecxz
shlb
jne
sbb
jmp
mov
fadds
dec
fnstsw
subb
cli
aas
sarb
pop
imul
inc
dec
and
into
and
jb
fstps
mov
cltd
addl
adc
xor
dec
xor
cli
mov
nop
cmp
mov
jns
lock
mov
jl
test
xchg
int
movsl
mov
or
jb
adc
mov
xchg
pusha
push
lret
xor
ss
and
std
cld
pop
cmp
push
xor
stos
sbb
in
outsl
pop
xor
data16
xlat
pushf
les
in
lea
push
ret
imul
dec
cmp
push
aad
nop
xor
subl
ret
dec
outsb
xor
js
jae
mov
mov
sbb
in
outsl
inc
fcmovne
sti
arpl
popf
loope
xor
ficoms
popf
fistpl
jle
faddl
shlb
sbbl
lcall
mov
aas
adc
int
test
inc
mov
repz
cmp
in
and
pop
jnp
ja
in
jg
mov
xor
lods
pop
in
pusha
sub
dec
fnsave
xchg
dec
fs
test
fildl
les
adc
div
stos
adc
das
test
push
movsb
enter
ss
imul
push
sbbb
iret
fndisi(8087
js
add
outsl
or
push
shlb
add
hlt
push
inc
aam
sub
mov
mov
jb
std
sub
jb
into
mov
mov
cmp
mov
xor
lcall
test
jmp
psrld
filds
outsl
int
mov
out
aad
sub
insb
dec
sub
cs
shl
xlat
push
adc
addl
mov
aaa
ret
pop
out
icebp
loope
jns
nop
add
jg
aas
popa
aas
and
fs
aas
xchg
or
mov
test
mov
pop
and
pop
dec
mov
mov
or
xor
mov
frndint
call
cmpb
push
pop
mov
dec
dec
daa
jl
jmp
cmp
sub
int3
dec
or
inc
sbb
and
push
repnz
test
insl
les
clc
fs
jmp
lock
addb
outsl
test
pushl
push
mov
dec
data16
add
pop
pop
jb
mov
ljmp
in
stos
iret
stos
pop
mov
js
cwtl
into
adc
cmp
adc
cmp
cltd
std
jns
inc
sub
cmp
xchg
sub
push
cli
sbb
fwait
loope
pop
jae
sbb
xor
out
fsubs
mov
inc
es
aam
repnz
sbb
loop
movsl
lret
fdivl
push
loop
leave
and
xor
xchg
movsb
adc
xor
insb
js
out
mov
sub
lret
xchg
js
xchg
sarb
hlt
in
dec
or
std
aas
stc
jae
xacquire
jae
or
aaa
cmc
xor
fists
out
lahf
test
sub
in
mov
sbb
inc
inc
inc
push
cmp
stc
and
xchg
jo
push
add
aaa
and
sub
sbb
lock
mov
mov
out
jg
mov
mov
xor
shlb
ljmp
test
mov
testb
pushw
stos
int3
xchg
sub
rcrb
xor
ret
mov
xchg
jo
test
ja
add
sahf
aam
jg
popa
arpl
lahf
sbb
cmpsl
lock
mov
sbb
aaa
jno
call
jp
pop
stos
mov
mov
rorb
xor
ffreep
cmpsb
mov
in
ja
stc
and
aam
mov
cmp
sbb
push
adc
imul
dec
jmp
sbb
push
pop
imul
out
adc
pushf
xor
lahf
out
fiaddl
enter
push
test
call
mov
or
dec
das
mov
pop
adc
out
xchg
add
push
adc
ss
jmp
jl
sahf
push
or
jne
sub
rep
je
jae
fnstenv
imul
insb
fstps
insl
in
orl
cmc
xor
mov
sarb
in
jge
and
pop
push
xchg
and
jo
rorl
inc
mov
adcl
sti
sti
cmp
sub
decw
popa
jl
stc
es
push
sbb
mov
jmp
rolb
inc
jl
outsb
sub
mov
push
lcall
xor
cwtl
pop
sbb
dec
cltd
mov
add
mulb
loop
imul
push
and
adc
mov
jb
xchg
fsubl
ljmp
inc
aaa
addl
add
mov
mov
mov
jbe
rorl
inc
mov
jne
or
jb
sub
cmp
sbb
dec
add
cli
cmc
dec
cs
test
pop
stos
inc
add
scas
and
mov
xchg
sub
leave
cmc
nop
sbb
sub
xor
push
push
add
outsb
or
pop
in
cld
leave
mov
cmpb
cmp
gs
cld
sbb
dec
popf
test
pop
mov
loope
xchg
cmpl
xor
ret
jg
gs
jb
dec
mov
or
jb
dec
mov
adc
jns
cmp
mov
mov
mov
scas
xor
frstor
and
mov
test
test
ss
imul
fsts
sub
mov
mov
mov
mov
cwtl
sbb
jmp
pop
int3
loopne
mov
push
add
out
cmp
inc
imul
js
mov
clc
dec
cmp
testl
sbb
jle
in
ja
xchg
jae
clc
add
mov
insl
pushf
in
and
sahf
icebp
pop
lea
out
fwait
pop
mov
sbb
and
adc
mov
mov
out
cwtl
push
adc
jle
pop
or
jmp
dec
pop
jae
cmc
dec
inc
cmpsb
or
xor
movsb
pop
inc
orl
jne
nop
das
bound
sbb
int3
int
flds
adc
push
or
rcr
sub
jae,pt
cmp
scas
cmp
push
lcall
icebp
inc
xchg
rcrb
sti
push
ret
xor
loopne
lea
push
pop
cmc
ja,pt
mov
lea
test
dec
orl
inc
cmp
std
andb
lods
test
adc
stos
push
or
and
push
mov
rorb
fimull
fdivl
aam
push
pop
xchg
mov
test
xchg
iret
cli
lods
mov
addb
sbb
mov
in
into
cmc
cmp
mov
or
movsl
jne
sub
imul
pop
cmpsl
lret
in
cmpsb
xor
pushf
dec
push
int3
jne
pop
push
das
mov
in
cli
int
bound
xor
mov
test
shlb
push
ret
sahf
jo
mov
or
sub
dec
inc
or
aas
add
dec
aas
ja
jle
jl
mov
jb
lea
jbe
imul
in
xlat
xchg
dec
jle
jp
sahf
mov
push
leave
add
inc
xchg
xor
sub
jmp
pop
cmp
push
call
jmp
popa
jg
jle
inc
jg
stos
pop
les
lret
aad
and
pop
ret
mov
aas
daa
add
mov
xor
mov
mov
call
dec
lret
pop
js
adc
inc
iret
outsl
push
mov
pusha
movsl
xchg
push
movsl
adc
jp
xchg
out
add
out
rcr
adc
addr16
xchg
cmp
mov
cmp
fdivr
pushf
and
out
and
and
add
mov
jo
outsb
inc
cmp
lods
aaa
cmc
or
xchg
sbb
ret
push
pop
or
int3
push
inc
lret
int3
iret
addb
push
mov
mov
enter
pop
adc
xchg
in
jl
insb
jnp
loope
xchg
rcl
fwait
sbb
inc
jle
mov
imul
ss
cltd
inc
scas
jbe
bound
int3
adc
cmp
push
fcompl
in
outsb
and
outsb
lret
fiaddl
inc
cmpsl
test
scas
push
mov
fucomip
in
push
std
xchg
dec
in
xchg
sbb
imul
mov
test
or
in
cmpsl
jns
xchg
mov
scas
add
sub
push
les
cmp
daa
imul
jge
dec
adc
lret
fucomi
add
mull
iret
sbb
sub
loop,pt
push
sbb
shlb
mov
mov
inc
cmp
decl
push
les
sub
mov
ss
fsubrp
jno
out
addb
rorb
icebp
cltd
and
ffree
icebp
test
and
icebp
into
pop
inc
outsl
mov
or
mov
gs
ja
scas
les
add
js
lahf
test
cs
outsb
sahf
dec
pop
aam
xchg
aad
mov
cmp
dec
push
scas
pop
inc
in
xlat
mov
inc
shlb
cli
cmp
out
inc
push
xchg
cltd
repnz
xchg
testl
lret
adc
rorl
filds
inc
pop
pop
imul
or
ret
sbb
ja
stos
ffreep
adc
xchg
push
ret
aad
stc
cli
inc
ja
clc
dec
les
mov
adc
or
aas
sub
jle
aas
xchg
cmp
ss
insb
mov
add
adcl
pop
jno
cmp
out
pop
pop
pop
xor
sbb
test
in
orb
out
daa
mov
or
or
cmp
mov
mov
stos
add
xlat
test
sbb
mov
hlt
and
shr
push
dec
inc
mov
mov
add
adc
xor
mov
outsb
push
cmp
test
test
jno
clc
mov
and
jns
scas
sub
pusha
rcrb
test
pop
rorb
stos
push
inc
sahf
ja
push
push
mov
add
mov
push
outsb
push
xchg
lret
leave
out
in
push
sub
jg
mov
fs
jle
pop
mov
int3
fisubrs
xchg
jnp
push
or
pop
push
cmp
jns
pop
es
and
call
push
int
icebp
push
cmc
das
pop
xchg
mov
cli
mov
or
movsb
test
loopne
adc
sub
test
imul
or
dec
jns
or
and
sub
xor
int3
inc
xchg
neg
or
test
xchg
cld
arpl
mov
and
in
jl
bound
repz
cmp
inc
dec
pop
dec
add
cmpsl
stc
mov
pop
stos
test
xchg
lods
outsb
pshufw
push
mov
dec
lods
mov
xor
rcrl
add
mov
push
inc
aaa
push
ds
std
jge
jne
mov
jl
pop
pop
lcall
sub
mov
std
xchg
es
mov
xchg
push
sbb
ret
jo
sbb
mov
lahf
xchg
dec
movsb
in
jecxz,pt
pusha
or
std
cmp
jae
jo
xchg
or
adc
std
adc
add
cs
mov
in
cmp
int
in
mov
add
fiadds
push
or
xchg
mov
cmp
push
push
inc
lahf
and
xchg
cmpsl
test
mov
cmp
outsb
adc
sbb
fsubl
por
jnp
stos
imul
daa
imul
xchg
cmpl
aam
jae
dec
mov
or
xchg
stc
mov
movsl
sub
pop
rorb
xor
mov
pop
sub
mov
mov
aad
inc
bound
xor
dec
pop
into
mov
stos
xor
shl
nop
fwait
or
push
cs
fidivs
fs
and
sar
xor
test
std
test
pop
stos
shl
inc
mov
js
lods
or
stos
lret
test
gs
popf
scas
pop
mov
push
arpl
mov
je
jbe
hlt
sub
data16
mov
dec
orb
test
jp
or
dec
outsb
pop
ss
mov
mov
stos
mov
hlt
cmp
jmp
stc
dec
adc
mov
push
leave
inc
mov
xorl
cld
enter
loop
fists
mov
clc
rol
mov
mov
lock
leave
orl
cmp
dec
dec
mov
mov
jmp
test
les
adc
cmpl
cmp
cli
jg
pop
sbb
test
mov
in
xor
aad
xchg
jbe
xchg
idivb
rcll
adc
movups
jns
pop
aas
or
push
and
and
cmc
add
sbb
lods
ja
or
lcall
add
add
xor
int
ret
aad
in
fxch
sarb
jne
les
mov
mov
lock
sbb
pop
fcom
xchg
scas
push
sub
push
call
rcrl
aam
lret
pusha
icebp
xor
pop
inc
mov
rep
sbb
lcall
or
into
push
xchg
std
pop
pop
adc
adc
insl
mov
out
xor
out
mov
push
jb
stos
push
xchg
xchg
xor
movb
aam
outsb
data16
popl
sub
adcl
in
pusha
sbb
testb
jnp
mov
movsl
aas
js
ja
lea
and
das
add
xor
lods
or
sahf
mov
xor
mov
fdivrs
cmpsb
cmp
icebp
jp
pop
pop
rcrl
es
std
rorb
add
scas
mov
dec
test
imul
rol
in
xchg
cmp
call
pop
and
mov
mov
rcll
cmpsb
js
inc
adc
sti
dec
movsb
xchg
popf
in
fsubrs
sbb
fs
hlt
rcrb
test
or
adc
inc
gs
fstl
sbb
sbb
cli
sti
sbb
mov
popa
int
xorl
int
add
mov
sti
adc
dec
out
cmp
mov
lock
pop
gs
aam
cmp
int3
loope
pop
push
lahf
scas
scas
shll
xor
add
mov
shr
pop
dec
ret
push
add
hlt
dec
push
or
ljmp
stc
loopne
shr
mov
cmc
jno
arpl
std
jne
cs
xchg
and
les
jne
xchg
aam
mov
pop
dec
sbb
push
cltd
jl
bound
mov
popa
insb
dec
movsb
aaa
mov
movsb
push
cld
mov
ja
frstor
cli
mov
sti
sbb
cmp
pop
stos
loop
cli
fistpl
jg
cmc
int3
add
pop
dec
sub
dec
orl
icebp
fwait
xor
lret
jno
out
xchg
out
inc
pop
es
cmp
loopne
and
xor
cltd
ja
mov
in
jnp
inc
pop
notl
clc
imul
pop
jecxz
pop
movsl
cmpsb
add
pop
cmp
xchg
dec
vphaddubd
push
loop
mulb
movsb
stos
mov
push
sbb
wrmsr
hlt
pop
andl
ss
in
test
xor
cmc
das
in
or
and
push
adc
mov
jecxz
and
adc
addr16
repnz
cmc
out
xorb
xor
fidivl
xor
mov
shl
int3
add
xchg
pop
out
fwait
outsl
cmpsl
xor
pop
sub
outsl
data16
push
push
mov
xchg
int3
add
in
sarb
pop
call
movsl
les
push
xchg
fsubs
std
mov
xor
popl
jecxz
popa
int3
inc
ret
xchg
pop
push
inc
cmp
push
jl
loope
adc
aam
push
pop
inc
push
mov
push
mov
pop
das
or
sbb
inc
jno
sub
push
int3
pop
and
sbb
sbb
das
test
mov
leave
jns
jle
fiadds
add
arpl
cmp
mov
fnstsw
lds
jae
xchg
movsb
ficompl
cmp
lods
lds
inc
rcll
pop
jae
add
imull
fistl
aas
lea
mov
nop
sbb
sub
xchg
pop
rorl
jne
int3
pushf
cld
and
sbb
movsl
sbb
sahf
or
aad
sub
sbb
cmp
es
mov
pop
lea
adc
jle
push
daa
inc
xorl
clc
fs
cmc
xor
or
stc
roll
and
push
mov
ljmp
sbb
xchg
and
divl
int
pop
mul
cmp
out
inc
insl
mov
add
adc
into
aad
pop
sbb
pop
sub
mov
into
add
pushl
xchg
int
cmp
popf
cmp
add
jmp
enter
punpcklbw
add
jmp
adc
push
cs
cmp
imul
xchg
ror
sbb
add
cli
sbb
test
push
enter
sub
stos
xchg
inc
mov
add
mov
les
xchg
call
js
mov
adc
mov
push
nop
scas
xchg
cli
cmp
sub
aas
fadds
std
mov
add
push
and
pushf
clts
dec
ror
add
jmp
nop
inc
pop
scas
push
cmp
push
jb
jb
xchg
sbb
cmpsb
inc
call
push
popa
mov
std
das
sti
cmp
mov
mov
mov
sahf
cs
or
adc
adc
call
js
add
push
adc
test
cmpl
leave
add
xchg
fbld
or
sbb
inc
jge
in
xchg
nop
cmp
jmp
sbb
lds
mov
scas
nop
dec
adc
inc
in
inc
add
lsl
inc
add
arpl
std
fidivrs
inc
out
adc
mov
cmpb
pop
sub
push
lods
lcall
pop
pusha
leave
pop
ljmp
jmp
pushf
pop
dec
or
cmc
and
repnz
jmp
popa
out
mov
ds
ret
push
pop
aad
jns
sti
xor
push
push
or
jmp
stos
mov
xchg
gs
imul
add
lds
jae
call
orl
lds
fsts
fnstcw
loopne
jbe
clc
and
jmp
loope
clc
mov
sub
fnstsw
in
xor
lea
jae
je
mov
mov
call
xchg
mov
mov
add
sbb
and
cmp
sbb
rcpps
or
cmp
pop
mov
jp
movsb
loope
cmpl
push
and
add
add
mov
push
clc
ds
mov
test
clc
mov
xor
dec
pop
scas
pop
je
mov
push
bound
mov
xlat
sbb
fbld
fwait
and
mov
fadd
ret
ret
push
mov
jmp
daa
iret
mov
mov
adc
sarl
sbb
dec
in
inc
bound
jge
rcrb
pop
mov
insb
mov
sub
test
add
xchg
pusha
mov
lods
mov
cmp
pop
push
cli
add
mov
jecxz
mov
mov
out
iret
dec
mov
sbb
out
clc
repz
popf
ja
ljmp
subl
into
repnz
push
ret
pop
dec
ljmp
xchg
add
insl
cs
hlt
lret
mov
stc
jb
and
and
pop
ret
das
mov
xor
movsl
sub
fists
sti
iret
sbb
xor
ss
outsl
xchg
ljmp
pushf
push
mov
xor
roll
fsub
into
ja
sbbl
pop
or
jbe
and
sbb
pop
icebp
mov
rolb
orb
cmp
out
int
lods
xchg
repnz
inc
bound
or
dec
out
test
jno
xchg
push
push
inc
test
leave
cltd
mov
mov
insb
sub
and
jp
iret
insl
pusha
mov
cli
mov
testl
cmp
out
or
cmp
imul
test
in
shlb
jnp
lock
call
push
jns
call
rclb
add
enter
lods
andb
pop
je
mov
repz
mov
icebp
sbb
rcrl
ss
xlat
mov
test
sub
inc
ljmp
mov
jnp
push
pop
xor
mov
dec
xlat
pusha
call
mov
push
movb
rclb
lds
loop
inc
pop
jo
loop
push
das
or
nop
inc
jae
jbe
adc
or
xor
fwait
sbb
dec
jecxz
jae
push
or
cld
pop
add
adc
das
cmp
xor
push
dec
jp
mov
sbb
fcompl
or
mov
adc
clc
cwtl
inc
or
sti
lcall
pop
movlhps
cs
push
out
out
mov
and
mov
or
mov
add
inc
out
or
call
mov
std
xchg
ss
push
negl
pop
loop
enter
imul
mov
fisttpll
mov
in
xchg
cmp
jnp
jb
xor
lds
mov
cmp
repnz
or
add
mov
std
adcl
mov
mov
mov
lcall
push
lret
cmp
jb
xchg
jo
sub
add
jb
pop
xor
arpl
cmp
mov
mov
jae
sbb
rcll
inc
mov
sub
mov
fldenv
add
aas
adc
mov
xchg
test
cmp
lahf
icebp
aaa
jecxz
fistpl
scas
insb
leave
sbb
xor
and
dec
test
sub
xchg
movsl
dec
shll
xor
cmpsb
pop
std
fmull
pop
or
xor
xlat
mov
jle
jno
in
mov
mov
addr16
cmp
push
lea
add
mov
dec
dec
mov
roll
and
xor
pop
idivl
pop
xor
jae
fs
repz
scas
je
mov
fsubs
sbb
pop
adc
xor
insb
pusha
inc
mov
mov
fimull
aad
fucomp
pop
jae
lods
fcom
jmp
divb
fs
sahf
sub
ret
cmp
add
scas
pop
ljmp
mov
inc
add
lcall
idivl
mov
fs
mov
push
xor
xchg
inc
xchg
mov
sahf
push
negb
sbbb
aaa
sbb
sahf
es
xchg
loopne
push
xchg
cmpsl
subl
jmp
stc
popa
inc
add
jecxz
mov
xchg
movsb
cmc
sub
mull
icebp
daa
adc
pop
dec
sub
repnz
std
std
add
imul
sbb
gs
pop
push
jae
aas
sarl
mov
test
iret
sub
adc
xchg
test
clc
loope
and
and
add
test
add
mov
iret
dec
sbb
push
xchg
sub
dec
insb
adc
sbb
stos
jp
xor
push
add
lods
mov
jnp
inc
sbb
dec
data16
iret
movsl
mov
sub
in
add
xchg
into
inc
jo
out
inc
push
lock
push
iret
or
pusha
cmpsl
fsub
scas
rcr
and
lahf
imul
lods
out
hlt
lock
adc
add
inc
loop
insb
mov
je
lock
mov
and
aad
xchg
fdivr
imul
out
jns
jp
pop
jle
mov
xchg
pop
inc
in
mov
leave
xchg
xor
js
push
add
and
inc
cmp
mov
push
ja
lret
pop
subl
xchg
aad
xor
inc
mov
testb
imul
vpsrlq
inc
movsl
loop
xlat
inc
int
imul
dec
pop
push
into
mov
stc
leave
cmp
xchg
xchg
cmp
je
or
mov
sbbl
popf
or
xchg
adc
test
stc
cmpsl
add
cltd
int
adc
or
xchg
cltd
and
mov
rcrl
jns
push
das
arpl
loopne
scas
aaa
std
jns
jp
pop
out
inc
ss
dec
pop
lods
repnz
cmp
rep
rclb
push
gs
inc
xchg
mov
sub
sbb
mov
fcomps
xchg
cli
cmpsb
insl
dec
jnp
pop
sti
lea
repz
ljmp
sub
push
sub
xlat
mov
nop
es
adc
mov
cmp
iret
and
jnp
adc
adc
lahf
jno
mov
push
push
cmp
cmp
pop
mul
inc
cmp
iret
ficomps
sbbl
dec
or
mov
push
repz
mov
mov
adc
repz
pop
or
movsb
xor
fiaddl
mov
inc
repnz
and
stos
xchg
mov
and
ljmp
sub
push
mov
cmp
andl
mov
repz
jnp
inc
add
fsub
push
repz
jecxz
aad
in
imul
jnp
push
stos
nop
cmp
stos
arpl
divl
sub
or
cmc
pop
fstpt
sbb
lret
jl
out
xor
or
lret
mov
ds
add
in
add
ds
mov
lock
pop
sti
jne
scas
cmp
fistpll
pop
xchg
inc
inc
or
scas
std
enter
insb
orb
outsl
jbe
enter
adc
in
cwtl
jecxz
xacquire
mov
jecxz
idivl
cwtl
dec
xchg
cmpsb
nop
xor
inc
mov
dec
mov
bound
movsb
xchg
mov
mov
xchg
outsb
dec
mov
insl
lahf
jmp
ror
fisubl
push
in
or
xlat
mov
lahf
add
nop
shrl
push
sti
jmp
imul
lods
pop
fildl
out
imul
divb
push
lds
ds
movsl
ljmp
jmp
pop
and
out
mov
dec
js
cmp
dec
sbb
in
lret
aam
cmp
jl
push
mov
dec
fmulp
jne
mov
lock
clc
sub
arpl
inc
cmp
jg
shlb
push
cmp
pop
mov
xchg
or
push
sub
dec
jecxz
xor
call
cmp
mov
xchg
or
mov
addr16
and
lds
pop
xor
fsubs
xor
sbb
cltd
repz
cmpsl
cmp
adc
pop
fsts
repnz
test
pop
jmp
dec
mov
adc
divb
mov
rol
hlt
pop
or
icebp
repnz
pop
pop
and
cmp
dec
and
sbb
movb
into
or
cmp
mov
jecxz
inc
push
sbb
xor
inc
out
hlt
and
pop
push
in
push
inc
xchg
movsb
adc
pop
pop
mul
notl
xor
sub
push
sub
mov
add
mov
fwait
sub
cmp
push
pop
cmp
xor
xor
jno
out
mov
jne
lret
pop
scas
stos
je,pn
or
popf
in
cs
sbb
mov
cmp
movsb
push
cs
mov
or
fcmovb
sti
lds
test
mov
aas
mov
mov
imul
dec
mov
mov
cmp
sub
sub
cmp
pop
add
or
js
out
jbe
push
bound
and
dec
sbb
mov
outsl
movsb
mov
sahf
lods
adc
add
or
gs
bound
sub
add
loopne
out
jbe
mov
test
or
jae
push
insb
out
adc
xchg
sub
loopne
push
mov
aaa
clc
mov
icebp
mov
ja
jp
bnd
scas
ljmp
push
lret
addl
push
adc
mov
mov
and
inc
mov
jne
enter
pop
jle
jmp
scas
pop
inc
fcmovb
sub
mov
rolb
cmp
leave
mov
idivl
xchg
mov
sub
xchg
mov
push
push
jnp
inc
cld
dec
jg
adc
divl
mov
or
enter
leave
cmp
addr16
dec
jl
jns
mov
lods
and
pop
icebp
lret
and
frstor
std
sub
mov
dec
mov
or
push
dec
jb
xchg
xchg
aam
cmp
mov
xor
inc
and
loope
xor
xchg
pop
lret
mov
adc
or
pop
in
imul
loope
mov
sti
mov
subl
lock
sbb
loopne
ret
pusha
and
jecxz
xor
aam
hlt
or
mov
jle
jno
pop
scas
fnsave
adc
ja
sbb
jb
rorb
movsl
mov
jo
pop
or
sub
add
fimull
pushf
mov
repz
inc
cmp
ret
ljmp
xlat
push
dec
jo
jg
aaa
push
ljmp
fwait
out
pop
sbb
adc
lods
std
inc
pop
scas
dec
xor
dec
mov
inc
lret
inc
repz
inc
arpl
or
mov
mov
inc
les
push
or
mov
mov
adc
imul
imul
push
dec
pop
les
mov
cmp
out
jae
mov
aam
cmp
dec
pop
inc
or
or
outsb
xor
mov
decb
pushf
adc
pusha
shlb
xor
dec
push
dec
mov
lcall
jae
jns
lahf
jnp
inc
pop
xchg
imul
rorl
repz
push
adc
insl
jmp
stos
hlt
cmc
aad
xor
ds
out
add
aam
mov
push
sbb
or
test
jmp
or
inc
ss
inc
jo
clc
jmp
and
jne
iret
and
xor
aaa
mov
rcl
repnz
xchg
add
cwtl
pop
sti
sbb
jg
jnp
and
popa
dec
or
fisubrl
faddl
cmp
pop
mov
xor
shlb
in
and
add
outsb
repnz
mov
push
and
in
and
outsb
jnp
or
sti
push
lods
cli
jns
aas
fwait
mov
mov
push
mov
imul
xor
out
insb
not
inc
mov
fmuls
js
sub
push
or
mov
movsb
jle
je
cmc
sub
out
test
pusha
or
mov
jno
int
popf
xlat
mov
sub
stc
stos
cmp
dec
daa
inc
xor
iret
fstl
xchg
mov
fsubl
sbb
js
xchg
cli
fst
test
cmp
aad
pop
dec
repz
loopne
roll
pop
mov
fwait
lret
daa
pop
push
adcb
inc
fstl
mov
xlat
mov
jbe
icebp
push
add
jb
inc
mov
bound
and
call
lods
jae
cmp
jo
imul
ss
outsb
outsb
mov
mov
cwtl
out
movsl
adc
sub
stos
lret
cld
pop
ss
scas
lcall
testb
pop
and
gs
jle
inc
and
sbb
shlb
mov
mov
lret
loop
or
jecxz
mov
push
mov
push
int3
mov
adc
cs
outsb
and
mov
sub
or
mov
cmp
push
das
mov
inc
inc
add
add
into
lret
mov
inc
ljmp
mov
pop
sbb
aas
sub
xorl
and
orl
roll
rcrl
stos
jge
jb
pop
inc
es
cmpsb
fdivl
pop
ja
xchg
inc
js
rep
or
subb
mov
adc
xchg
and
std
mov
lahf
sti
fxch
dec
mov
adc
adc
cmc
inc
adc
push
mov
xor
fstpl
xor
imul
shll
push
mov
fcomps
push
mov
aaa
dec
push
cltd
cltd
jo
or
bnd
mov
negb
fcom
cmp
imul
push
mov
lret
repz
jo
insl
mov
fs
repz
out
fiaddl
pop
icebp
mov
lret
jo
cli
lds
pop
rorb
cmp
push
pop
sbb
fdivl
jmp
cmpsb
aas
pcmpgtw
inc
xchg
aas
gs
mov
push
and
repz
rcll
mov
cmp
jle
lret
xchg
data16
popa
in
sbbl
sub
outsb
and
ja
mov
rcl
in
push
dec
movsb
add
sub
push
arpl
insb
cmp
sub
pop
and
into
mov
push
mov
out
lock
adc
sti
daa
xor
mov
mov
into
outsb
xchg
jbe
mov
mov
out
hlt
cltd
sar
call
xchg
and
fimull
movsb
aas
jo
mov
pop
mov
aad
mov
or
dec
and
adc
dec
push
mov
or
pop
cmpsl
or
push
leave
daa
or
rcrl
cld
mov
outsl
or
in
dec
and
adc
cmp
enter
stos
lods
pop
jnp
ljmpw
pop
push
popa
scas
ljmp
addr16
mov
xchg
pop
aad
fcoml
lea
outsl
out
add
xor
and
ss
inc
pop
or
sarb
inc
xchg
jae
xchg
xchg
out
decb
add
and
sbb
mov
test
fsubs
outsb
adc
mov
sbb
mov
adc
mov
dec
xor
jo
inc
jo
xor
cli
in
add
orb
mov
xchg
jne
xor
xor
or
inc
repz
repz
shlb
je
gs
jnp
mov
rorl
sbb
cmp
mov
or
pop
out
repz
push
testl
jmp
cs
mov
gs
rclb
jb
hlt
sbb
dec
leave
adc
add
or
daa
adc
setge
lds
or
nop
add
pop
mov
mov
dec
in
push
stos
mov
cmp
testl
in
xor
js
in
iret
xor
or
icebp
pop
cmp
dec
scas
push
lcall
fisttpll
sub
xor
je
shr
clc
fildll
mov
xchg
sti
cmp
lahf
cmpsb
inc
in
push
jmp
push
inc
shrb
out
rcll
jns
daa
inc
dec
sub
add
cmp
stos
out
in
rcll
add
mul
lods
pop
aaa
and
je
aaa
mov
cwtl
push
xchg
inc
lds
call
or
aas
push
out
ja
push
mov
fptan
add
mov
push
stos
xor
or
sbb
cmc
lds
jp
xchg
fldenv
inc
adc
nop
sub
les
or
cwtl
shr
jae
xchg
test
adc
jo
dec
mov
sub
ss
cld
scas
or
dec
test
lcall
pop
nop
rolb
stc
hlt
cmc
pop
sub
insl
jl
cmpsb
outsb
out
jo
sub
pop
ja
das
notl
sbb
std
add
sbb
in
ds
repnz
add
pop
and
adc
lret
xorb
int3
jg
call
mov
lds
lds
movsb
daa
cmp
adc
hlt
push
and
imul
add
fiaddl
cmp
out
or
enter
mov
lcall
sbb
pop
sbb
mov
int3
ljmp
jno
push
mov
or
xchg
fiadds
shrl
xchg
into
sub
outsb
test
sub
adcb
inc
mov
call
cmp
push
mov
xchg
cmp
shrl
sti
cmp
mov
xchg
cli
iret
mov
jp
push
imul
jo
lods
xor
xchg
je
aas
loop
push
dec
clc
mov
out
daa
mov
testl
lret
dec
mov
in
or
fnsave
ljmp
stos
stos
or
xor
incl
ret
cmp
in
jns
add
push
dec
lea
sub
mov
or
or
jmp
pop
push
test
insl
popa
and
dec
cmp
ja
aaa
inc
jmp
lods
stos
jmp
pop
inc
insl
fisubrs
pop
clc
lock
jnp,pn
ret
cmp
jle
rcr
cli
push
std
test
jbe
xchg
and
leave
sbb
sbbb
ret
out
outsb
incb
das
xchg
pop
pop
mov
jg
inc
das
sub
into
pop
outsb
fdivl
dec
xchg
lock
mov
jae
sub
mov
inc
xchg
xchg
sub
xchg
add
into
jp
add
ret
or
movsl
aas
out
xchg
mov
testb
xchg
inc
movsl
fstl
mov
sub
leave
ficomps
jle
test
push
cmp
icebp
mov
jne
pop
in
cmpsb
std
adc
adc
sub
jnp
ljmp
mov
rcl
mov
mov
dec
sbb
jecxz
jne
xor
cmp
push
aam
call
pop
cltd
shrb
das
dec
insb
ja
sub
imul
xor
jecxz
jo
mov
out
lahf
add
shl
fcmovnbe
push
push
repnz
sbb
and
jbe
int3
inc
ds
or
mov
pop
in
inc
ja
dec
inc
lcall
jl
mov
pop
push
lods
inc
or
xor
mov
cwtl
cmp
dec
loopne
out
mov
lret
push
jecxz
adc
lret
xlat
ret
shrb
sub
sar
lcall
xchg
int3
mov
pushf
adc
and
pop
or
push
sbb
xor
subl
dec
mov
call
negl
or
push
add
sub
xchg
push
cmp
decl
mov
aam
push
or
xchg
sub
rorl
cld
cmp
xchg
xchg
repz
adc
mov
aaa
and
lock
jge
out
xchg
imul
sti
ret
sti
adc
out
inc
test
pop
sti
jg
push
adc
cmp
lahf
dec
imul
or
inc
sub
and
jne
sbb
mov
std
andb
jnp
mov
xchg
scas
aad
cmp
and
cmc
xorl
daa
test
mov
adc
dec
shlb
enter
stos
pusha
aam
mov
inc
lods
dec
add
lret
push
inc
fdivs
hlt
xor
xor
pop
mov
dec
adc
pop
enter
outsb
mov
scas
push
aas
mov
outsl
cmp
pop
fistpl
add
sbb
or
in
mov
sti
xor
xchg
int3
dec
mov
stc
lods
imul
sub
xor
addl
mov
sahf
dec
orl
jnp
addr16
div
cli
arpl
jnp
xchg
sub
popf
push
mov
mov
pop
pop
std
pop
push
inc
cli
subb
jg
rcll
and
test
mov
repz
filds
mov
inc
mov
jmp
pop
sub
push
add
fstl
idivl
sub
scas
sbb
cld
ret
mov
stos
out
ret
xchg
shlb
or
fisubrs
lcall
sub
cmc
imul
sbb
xor
push
shlb
ret
imul
sbb
adc
cltd
adc
jns
mov
clc
rclb
lods
xor
mov
sbb
mov
sbb
cwtl
jp
enter
sbb
rol
mov
mov
js
xor
sbb
ja
loopne
fidivs
pop
cmp
je
adc
mov
test
fidivrl
lret
or
sbbb
cmp
push
imul
iret
fwait
sub
jae
xchg
lahf
sub
decl
mov
xchg
aas
adc
mov
dec
cmp
iret
movsb
push
insl
cmp
rcll
popa
aas
jp
insl
xchg
sbb
pusha
out
adc
jp
xor
push
xchg
pop
int3
xchg
rorb
enter
inc
or
jl
aam
inc
xchg
sub
mov
add
inc
push
push
xchg
out
jnp
test
cmc
mov
xor
sub
scas
cmp
test
movsb
dec
andb
mov
lock
out
sbb
mov
jle
inc
in
or
sbbl
cmpb
loopne
pushf
pop
sub
scas
in
cmp
fwait
cmpsb
call
pushf
test
loope
mov
sbb
nop
fsubr
daa
fs
mov
loop
cwtl
mov
out
test
xlat
inc
sbb
mov
jp,pt
cmpsb
dec
pop
sti
fwait
pusha
mov
mov
int
sub
je
popa
sbb
mov
cli
dec
dec
inc
lahf
mov
es
outsb
pop
inc
cmp
pop
in
in
push
out
inc
jno
xor
push
loope
test
sub
xorb
pop
sbb
inc
mov
in
cmp
push
push
lods
add
pop
push
aad
add
jmp
mov
mov
cs
lahf
test
add
aam
xlat
push
push
test
sahf
cmpsb
cmp
iret
inc
lret
js
rclb
repnz
lds
neg
fadds
rorb
mov
sbb
dec
push
cmp
and
addb
xor
jge
lret
std
mov
outsl
insl
test
dec
mov
mov
mov
jns
mov
sbb
out
xor
add
stc
mov
shl
xchg
in
scas
jne
mov
repz
sbb
jecxz
xor
jp
mov
into
xor
adc
sbb
inc
sub
out
iret
dec
push
fs
jo
xor
mov
rcrl
mov
add
adc
sbb
aas
idivb
mov
jns
adc
out
pushf
and
loope
or
and
mov
lods
decb
mov
sub
fldl
and
je
jo
jl
push
addr16
rolb
ljmp
sbb
lods
dec
pop
mov
push
jne
pop
adc
ja
and
sbb
adc
sub
sub
popf
or
movsb
lods
add
mov
xor
dec
lcall
cli
das
pushf
push
lods
push
cli
cmpb
fcoml
or
and
std
inc
fwait
pop
or
loop
and
xchg
movsl
bound
add
mov
inc
jne
fsubrs
push
xchg
mov
stos
adc
and
leave
pop
test
jns
pushf
adc
stc
pop
push
push
shlb
mov
ficoml
dec
dec
sbb
jns
filds
sbb
int3
sbb
jmp
mov
cmpsb
inc
jle
cmpsb
mov
ret
xor
fmull
jae
dec
jne
dec
popf
popa
sbb
mov
jns,pt
dec
in
not
ss
and
pop
mov
aaa
test
test
jb
sub
mov
test
jge
decl
pop
loopne
fwait
sub
pop
negb
scas
scas
cmp
cmp
cmp
rcr
scas
xchg
cmp
sub
les
aam
xor
out
in
cwtl
repz
rcrb
sub
jp
loop
xchg
pop
ffreep
test
test
cwtl
icebp
jbe
cmc
test
xchg
outsl
xchg
stos
pop
shl
dec
in
push
addr16
push
jg
push
add
mov
fistpl
xor
mov
inc
shrl
pop
test
aam
je
mov
xabort
sahf
idivb
xor
lds
out
xchg
stos
cli
mov
movsb
or
cmp
push
jle
andb
jl
lock
mov
rorb
push
test
out
xlat
rcrl
aas
jle
push
jle
add
or
aad
mul
dec
stos
outsl
sti
and
jo,pt
dec
pop
inc
loope
add
or
adc
dec
jo
xchg
mov
ret
mov
xor
xor
je
insl
xchg
movsl
shlb
mov
lahf
js
cmp
pop
xchg
icebp
adc
or
enter
test
cmc
or
mov
inc
and
mov
daa
pushf
mov
adc
andb
cmp
push
enter
pop
icebp
xor
mov
cmpsl
ror
sarl
xchg
jae
mov
adc
pop
dec
fdivr
mov
xor
std
rcrl
cmp
push
mov
cmc
dec
push
cld
scas
call
add
mov
push
cmp
xor
inc
fcmove
pop
xchg
mov
aam
lret
jp
dec
rep
rolb
adc
test
int3
std
push
and
fsubrl
bound
jle
mov
test
popf
das
lcall
xor
test
cmp
fstpl
pop
xorl
cmp
bswap
mov
add
mov
cs
jnp
fs
lcall
xlat
push
movsb
fdivr
jge
adc
outsb
inc
push
mov
lods
fisubs
and
mov
push
outsb
mov
xor
xchg
dec
push
or
into
dec
je
xchg
jno
lock
or
fcmovnb
or
cmp
mov
xchg
dec
popa
cmp
xchg
aaa
ljmp
sub
outsb
call
xchg
pop
add
out
fisubl
sub
push
daa
mov
test
ds
insl
enter
int3
jbe
push
sti
jo
lahf
dec
movsb
sub
test
fucomp
in
and
push
dec
shl
stos
sub
and
mov
mov
mov
inc
sbb
adc
fcmovnbe
sub
mov
inc
adc
inc
shr
xor
jns
sbb
out
xchg
sahf
out
mov
xor
movsb
mov
je
loopne
cmp
popa
or
xor
add
sub
add
sahf
push
add
les
stc
cmpsb
pop
aaa
sub
aam
jno
xchg
adc
push
pusha
in
cmp
lea
mov
pusha
or
js
in
xor
fwait
pop
xor
mov
or
test
cmp
lret
xchg
mov
add
dec
test
aad
lret
mov
fnstcw
idivb
mov
mov
test
lds
mov
in
hlt
sbb
dec
fdivs
lods
jns
jne
mov
imul
ja
xor
jns
sub
add
add
prefetch
mov
outsl
shll
add
arpl
outsb
fwait
es
sub
rclb
ss
cmc
adc
popf
sub
out
push
lret
repz
ljmp
and
mov
idiv
and
iret
xor
inc
jbe
lcall
sbb
fildll
adc
push
gs
jg
inc
jle
lret
mov
or
scas
fisubrs
jns
negl
loop
dec
ljmp
pop
adc
cmp
sub
fs
iret
sub
or
fstp
ret
mov
cmpsb
repz
mov
mov
inc
fs
mov
and
mov
or
xor
hlt
mov
pusha
and
shll
jg
fwait
xor
fwait
leave
xchg
push
and
scas
cs
cs
xor
mov
jp
loopne
rdpmc
or
fidivrs
in
sub
xor
push
hlt
sub
dec
in
xlat
arpl
repz
frstor
scas
jp
int3
xor
jle
sbb
and
insl
push
jmp
lea
pop
fmull
rcr
push
push
addr16
outsl
clc
nop
dec
sahf
jmp
pushf
inc
das
cmp
cmp
call
mov
scas
sub
add
idiv
cmc
test
xor
lock
dec
xor
xor
pop
test
add
push
les
sub
pop
mov
or
sbb
add
popf
inc
mov
or
inc
push
lcall
in
xchg
aam
jnp
pop
fs
les
adc
and
lock
ja
sti
and
adc
pop
mov
movsl
pop
ljmp
cmc
nop
shlb
jge
nop
out
fsubrs
cmpsl
mov
cmp
push
sarb
jo
cwtl
popa
dec
movsl
sbb
cmc
das
shll
sbb
mov
mov
cltd
sub
mov
jne
and
xchg
fsub
push
lret
repz
add
lret
or
test
mov
push
cmp
cmp
insb
sar
std
jne
lods
push
or
popa
xor
cmp
int3
sub
iret
jge
shll
mov
add
xchg
jg
sbb
or
int
jge
loop
mov
adc
adc
in
or
inc
jecxz
pushf
add
adc
movsl
andl
mov
cli
mov
fs
mov
aam
jns
cltd
cmp
int3
cltd
xchg
ja
loopne
cwtl
test
fs
fwait
or
outsb
dec
or
xor
loopne
dec
ss
xchg
dec
mov
int
leave
xchg
sbb
movsb
push
cmp
imul
jp
xor
aas
adc
pop
pop
cmp
cs
xchg
sub
sti
cmp
jge
dec
mov
mov
out
decl
add
xchg
stos
hlt
ljmp
out
iret
mov
push
enter
or
test
and
fsts
loopne
cmp
bnd
int3
mov
hlt
loopw
lcall
imul
mov
ret
mov
sbb
lock
movsl
sbb
pusha
shl
ret
outsl
les
xor
push
sbb
xchg
add
mov
addr16
in
mov
add
push
sahf
je
int3
mov
xor
ret
fwait
adc
mov
or
aad
iret
push
sbb
lea
cmp
dec
or
rorb
pop
add
mov
xchg
cmp
add
ja
scas
mov
arpl
jno
je
cmpsb
arpl
push
adc
loop
ficompl
and
pop
push
outsb
mov
sti
add
aas
push
dec
lods
ss
sbb
into
and
and
mov
arpl
and
cmpsb
int
xchg
cmp
lds
movsb
daa
mov
xchg
mov
pop
dec
les
pop
push
inc
pop
lock
cmp
inc
lcall
and
mov
aam
xchg
outsb
xchg
cmc
xchg
mov
pop
test
cmp
xorl
lcall
rorl
mov
or
push
mov
loop
repnz
inc
int
jl
jno
daa
nop
adc
lcall
fsubrl
and
dec
cmp
mov
inc
cs
or
loopne
or
popf
mov
in
mov
sahf
lods
arpl
add
push
mov
adc
and
cmp
aas
sub
insb
dec
cmpsb
cmc
xor
cli
test
insl
pop
nop
jnp
lret
shl
fldcw
lcall
test
dec
adc
adc
adc
clc
add
sbb
imul
lds
pop
insb
in
ficompl
lahf
pop
shlb
mov
sahf
rcl
in
enter
mov
jecxz
mov
pop
sub
cmc
xlat
out
cmp
mov
pop
in
lret
mov
aas
dec
aad
test
mov
inc
aad
pop
popf
lahf
into
add
test
pop
clc
ret
fisttps
ror
or
add
xchg
ljmp
mov
fildll
call
cmc
pusha
scas
hlt
push
adc
aam
roll
adc
lcall
mov
mov
in
or
movsb
and
or
out
mov
mov
ror
add
scas
mov
mov
xchg
push
pop
shl
xchg
into
jne
divl
push
out
out
dec
dec
jecxz
hlt
pop
mov
ss
mov
sub
adc
dec
sub
mov
xor
mov
pop
add
cld
mov
int
icebp
jbe
outsl
cmp
je
rcrl
pop
adcb
push
mov
or
outsl
and
icebp
ds
and
jo
xor
cld
and
and
push
mov
adc
cmp
cmp
ljmp
jmp
clc
xchg
mov
dec
add
sub
mov
or
push
out
out
dec
pop
adc
jno
pop
push
xchg
or
enter
into
inc
es
enter
and
cmp
mov
mov
jae
push
lods
cld
cmp
pop
pop
jbe
testl
mov
insb
or
sub
xor
enter
aaa
mov
data16
rcrl
push
mov
aaa
sub
push
cli
push
or
shlb
mov
cli
das
xchg
mov
les
fmull
sahf
cmc
dec
shll
sbb
cmpl
outsb
icebp
add
and
in
repnz
xchg
pop
pop
in
in
in
mov
jg,pt
pop
lret
jle
idivl
cwtl
and
sub
arpl
cmc
xchg
daa
pop
fcmovu
in
or
push
or
in
lea
rcll
loop
and
jmp
dec
les
call
cmovb
mov
notl
sub
int
ret
sbb
insb
mov
pop
int
add
out
jle
mov
sub
je
imul
xor
das
out
jo
xor
das
outsl
cmp
je
scas
mov
xchg
xchg
sub
and
add
mov
cld
jnp
rorl
dec
enter
loope
mov
or
push
in
inc
mov
jge
sti
mov
loopne
pop
add
insb
lock
test
jp
int3
mov
imul
lcall
jl
ftst
bound
and
push
sbb
imul
int
sbb
mov
inc
push
addr16
cli
dec
bound
cmpsb
mov
shll
ret
mov
addl
pop
nop
and
push
scas
outsl
int
jns
cli
lcall
cmp
or
inc
mov
push
dec
push
dec
insl
test
outsl
movsl
xor
clc
clc
push
fwait
jge
or
xlat
mulb
pushf
xchg
ja
inc
fdivrs
mov
sbb
jl
inc
adc
add
fstps
xlat
cmpsb
pop
test
arpl
dec
jbe
popl
int3
scas
mov
jl
jae
pop
insb
inc
push
sub
jmp
sbb
cmpb
bound
call
dec
mov
shll
movsl
cmp
mov
lret
xchg
jns
in
stc
cmp
mov
dec
insb
mov
daa
pushf
dec
add
dec
mov
aam
lahf
fistpll
push
mov
dec
xchg
and
jge
fadds
stc
jmp
inc
loope
pop
fldenv
mov
lock
sub
mov
int
shrb
pushf
sbb
stos
dec
cmpl
jo
imul
sub
mov
or
test
cltd
cmp
lea
adc
adc
fucomip
cmc
rclb
push
mov
xchg
add
pop
bound
lahf
mov
loopne
shlb
inc
cmp
js
lahf
mov
jp
push
sti
jle
jbe
sbb
call
fwait
sbb
mov
sbb
lea
rcl
mov
lds
js
xchg
adc
inc
enter
push
dec
ficomps
dec
adc
or
int3
adc
in
mov
lods
cmp
loopne
sbb
shl
cmpsl
cmp
xor
xor
ret
fwait
sbb
pop
mov
adc
adc
pop
jg
insl
andb
jnp
mov
pop
jnp
mov
and
scas
and
fs
pop
test
cmp
enter
sub
movsb
fidivrl
inc
stos
fbld
xor
leave
inc
fcmovne
push
imul
popf
mov
popa
cltd
sahf
jne
fisubs
push
pushf
dec
fildl
imul
mov
add
popf
pop
xor
ljmp
push
pop
insb
push
jae
sub
xor
test
mov
mov
pop
dec
push
stos
gs
pop
or
stos
adc
mov
lock
xor
and
pusha
pop
loope
test
ljmp
mov
lahf
push
in
in
adc
mov
sub
mov
push
pop
dec
jmp
jnp
loope
sbb
je
and
lcall
add
out
es
mov
jno
cld
push
dec
jl
lahf
cmp
mov
or
shlb
stos
popa
imul
rol
shl
insl
xor
in
adc
jl
xchg
mov
leave
out
lret
mov
jne
cld
inc
mov
cli
xor
mov
dec
or
jb
or
mov
mov
addr16
outsl
cmp
mov
mov
xchg
adc
cmp
pushf
in
cmp
std
pop
mov
movsb
cmpb
xchg
jne
test
inc
rcr
imul
loop
pop
cmpsb
add
sub
sbb
xchg
rcl
mov
out
push
imul
add
push
or
pop
notl
ljmp
pop
mov
add
shlb
ja
sub
fiaddl
sarl
xlat
ret
mov
jecxz
mull
mov
mov
rorl
fidivs
jnp
outsb
notb
cmc
mov
fstps
aad
add
add
jbe
aam
xchg
iret
xor
lret
sub
inc
jne
pop
jne
xchg
dec
iret
and
push
cltd
sahf
jo
dec
stos
push
repnz
mov
lret
cmp
ja
inc
dec
push
mov
add
call
jg
dec
pop
jns
sub
into
push
ljmp
adc
rorl
sbb
test
mov
mov
nop
mov
mov
das
loopne
mov
mov
notb
lret
mov
pop
lds
imul
push
push
xchg
and
lcall
gs
stos
mov
rorb
or
mov
jle
aas
data16
js
in
aam
adc
popf
lods
cltd
cmp
xor
adc
adc
js
xor
mov
out
mov
push
mov
xor
hlt
mov
incl
pushf
fmuls
push
pminub
xchg
xor
push
aam
mov
out
sbb
adc
jns
or
mov
cld
lret
incl
and
adc
mov
shlb
push
and
xchg
lea
addb
mov
fwait
scas
mov
in
scas
mov
push
into
cmp
out
addr16
jo
rcr
lret
enter
sahf
imul
sub
cmp
imul
and
adc
mov
stos
das
jmp
inc
sahf
lock
xchg
js
bound
repz
test
and
clc
rcll
mov
insb
jp
ret
add
pop
mov
loope
lret
repnz
call
add
or
fidivs
out
xorb
xlat
push
or
insl
jp
push
les
mov
sbb
js
mov
mov
pop
mov
mov
and
mov
iret
push
loope
rolb
adc
aad
pop
test
dec
dec
fldt
adc
pop
sbb
and
roll
setbe
shll
int3
shrb
cmp
push
xor
mov
shr
dec
lret
cmp
sbb
stc
inc
lds
mov
sbb
loope
inc
and
and
imul
sbbb
mov
xor
fwait
lods
xor
and
repnz
aad
outsb
ljmp
mov
adc
add
cltd
push
xor
shl
xchg
sbb
mov
and
fisubrs
mov
mov
scas
cld
or
repz
sub
jp
arpl
push
mov
fcmovnb
xor
jge
adc
fwait
add
shll
add
scas
cmp
and
rsm
xor
or
cmc
sub
jecxz
push
mov
add
int3
out
es
orb
mov
std
vpmacsswd
xchg
mov
adc
pop
adc
add
cmp
ja
push
add
push
jmp
jb
inc
arpl
out
rcr
adc
inc
lahf
sub
pop
imul
mov
sub
adc
mov
lods
jno
jae
jbe
repnz
or
subl
divl
mov
or
xor
movsl
stos
mov
std
mov
pop
out
inc
ljmp
sub
inc
push
jp
xor
imul
nop
mov
lea
adc
loopne
ljmp
sarb
mov
xor
inc
idivb
test
xor
imul
pusha
sub
fsts
mov
daa
rolb
pop
nop
xchg
inc
mov
outsb
mov
cmc
add
mov
aas
add
das
outsb
dec
mov
push
fbld
fs
pop
mull
inc
and
cmp
xchg
popa
jo
ret
fldenv
outsl
inc
mov
das
push
mov
push
shrl
loop
adc
icebp
leave
sub
rcrl
dec
push
mov
outsl
cltd
xchg
popf
sarb
jg
loop
dec
xchg
das
xchg
dec
lds
and
xchg
dec
sub
inc
and
out
lcall
enter
cmc
xchg
aam
mov
loopne
mov
xor
out
rcrl
dec
cli
movl
arpl
mov
pop
aas
xor
push
jae
adcb
test
dec
ret
fnstsw
in
rcll
pop
ret
into
dec
cld
xor
mov
bnd
jnp
cmp
loop
jo
pop
in
xchg
pop
sbb
out
xchg
sub
sahf
mov
int
cmpsb
out
inc
cmc
imull
dec
pusha
cmpsl
mov
cmp
or
mov
jno
cwtl
dec
das
loop
jb
xor
mov
push
ds
push
insb
dec
xchg
jo
push
cmovs
movsl
loope
push
lods
mov
imul
inc
mov
sub
inc
push
pinsrw
pop
sbb
mov
xchg
sbbl
mov
lcall
sub
pop
adc
push
aas
leave
faddp
xlat
mov
gs
std
aas
ret
rorl
push
jge
pop
and
pop
lret
test
push
fdivrs
add
mov
add
sarb
rolb
adc
xchg
in
push
dec
fnstsw
pop
cwtl
adc
push
push
or
xlat
das
icebp
test
loopne
cli
mov
jp
cmp
mov
dec
dec
jl
xorb
or
push
push
adc
cs
cmp
aas
ds
inc
dec
mov
jno
xlat
lahf
jbe
gs
inc
push
mov
mov
pop
cmpl
mov
stos
pop
jno
lcall
dec
lcall
decl
in
outsl
jle
and
ret
push
mov
shl
mov
jecxz
imul
loope
out
lahf
xchg
mov
test
dec
je
aas
inc
jnp
mov
mov
xchg
xor
mov
pop
pop
mov
ss
dec
insl
outsl
inc
mov
lret
test
and
push
into
inc
mov
mov
mov
movb
fnsave
adc
jns
mov
mov
repz
ret
outsb
in
loope
mov
xchg
inc
imul
pop
fbstp
adc
mov
mov
fsubr
sub
fs
pop
jge
outsb
xor
inc
fists
add
jnp
hlt
fs
stos
popa
pop
loop
test
popf
xchg
mov
inc
jmp
lret
out
xchg
mull
and
and
leave
xor
scas
xchg
dec
lret
pop
fisttpll
inc
sahf
imul
outsl
js
daa
mov
push
or
mov
test
inc
mov
iret
dec
inc
gs
pushf
flds
or
and
shll
ret
jb
add
adc
lahf
push
mov
mov
rorb
add
repz
clc
add
pop
sbb
adc
push
aam
mov
and
leave
lea
push
mov
out
or
lahf
adc
mov
out
cltd
in
mov
mov
movsb
sub
js
ds
insl
dec
orb
shr
add
push
or
jns
adc
imul
in
xchg
fld
and
cmc
inc
pop
and
pop
lea
dec
jge
cmc
cmp
daa
popf
sub
xchg
mov
cmpsb
mov
mov
ljmp
jbe
xor
cld
lahf
sar
scas
outsb
adc
sbb
cmp
leave
cmp
cmpsl
mov
das
push
nop
stos
sub
cld
lret
js
xlat
sbb
push
jbe
mov
out
xchg
jns
push
ret
out
dec
add
test
scas
sub
add
adc
inc
cmp
ss
inc
pop
imul
sub
xor
add
std
jmp
inc
jns
adc
movsl
stos
dec
push
and
bound
add
ja
mov
ljmp
pop
sbb
add
fs
jl
std
xlat
xchg
shlb
outsb
cs
scas
jp
mov
loopne
lcall
loopne
mov
stc
ja
pusha
adc
push
and
push
icebp
clc
pop
cmp
push
fldt
dec
loopne
adc
sub
cmp
icebp
ss
and
sub
dec
pop
in
mov
loop
or
xor
xchg
jge
mov
cltd
pop
movsl
push
xchg
div
jnp
cmp
addr16
mov
push
dec
jp
imul
or
movsl
popa
or
outsl
lea
mov
pusha
sub
repz
xor
mov
jp
add
mov
or
dec
fldcw
fld
jle
aas
ljmp
mov
shll
cmpsb
pop
jp
dec
gs
popa
xor
mov
jns
and
pop
mov
adc
push
hlt
mov
dec
mov
jb
inc
fcompl
subl
or
fcom
push
pusha
jl
es
xor
mov
and
xor
loopne
sti
sub
jno
and
jg
mov
add
cwtl
lcall
sbb
call
int3
sub
fucomi
pop
bound
mov
pop
mov
sub
fdivl
adc
test
test
xor
call
inc
sub
bts
repz
mov
jbe
inc
arpl
jno
outsl
stos
pop
adc
push
nop
push
mov
mov
and
loope
test
inc
sub
and
call
sarl
jmp
call
fs
insl
fcomp
aas
and
push
and
add
xchg
jge
in
std
dec
add
and
pop
leave
mov
sbb
sub
push
add
sti
lret
in
sbb
sub
sub
inc
or
and
inc
pop
adc
push
and
loopne
imul
sub
jo
cmc
push
inc
dec
dec
outsl
rorb
jns
ret
sub
fsts
movsl
sbb
mov
sbb
sbb
aam
out
aam
subb
clc
mov
xor
push
shrl
mov
push
gs
add
test
pop
rorb
mov
adc
adc
int3
dec
adc
xchg
or
cltd
inc
dec
pop
scas
mov
mov
inc
popf
xlat
push
repz
bound
cwtl
push
shlb
mov
data16
jmp
sub
iret
cmpsb
pop
imul
sub
sbb
and
push
xor
mov
loopne
nop
or
xchg
adc
aaa
mov
push
mov
sbb
lea
adc
mov
cmpsb
fidivs
lods
adcl
out
popa
movsl
mov
xchg
mov
das
pop
pop
mov
popa
xor
adc
xor
hlt
jne
jle
stc
jno
mov
inc
sbb
jp
xor
insb
mov
pop
loopne
sub
cs
leave
das
cmp
and
mov
cli
add
pop
idivb
pop
pushf
loopne
lahf
sub
and
jle
inc
icebp
fldl
fs
test
repz
mov
cltd
dec
jb
pop
pusha
inc
cmp
aad
test
dec
fnstcw
shll
mov
dec
push
or
push
adc
xchg
data16
fwait
outsb
lock
pop
dec
inc
push
and
nop
xchg
fwait
mov
shr
jl
mov
jnp
idivl
arpl
pop
jecxz
add
push
xlat
pop
stc
pusha
sub
mov
mov
movsb
add
pop
inc
in
enter
push
mov
mov
jge
push
adc
and
dec
jg
imul
call
outsb
push
hlt
iret
repz
sbb
dec
jl
sbb
bound
lds
pushf
nop
lahf
pop
divb
popf
mov
insb
pusha
pop
fisubl
mov
ss
push
sub
inc
bound
test
mov
rclb
jns
push
shlb
cmc
or
or
xor
push
xor
jo
jo
or
cld
add
mov
mov
xchg
loope
lea
mov
mov
xorl
bound
ficompl
jmp
and
push
ret
imul
sahf
loope
jg
mov
lcall
lea
and
adc
loope
or
and
push
insb
ljmp
cmpsb
mov
fidivs
sub
dec
sbbb
cld
movsl
sub
rcr
mov
xor
cmp
jne
sub
out
inc
dec
mov
xor
jmp
sarl
add
pop
lret
dec
cld
fmull
pop
iret
lods
std
xchg
hlt
in
arpl
mov
nop
xlat
call
pop
testl
gs
sub
or
inc
les
pop
push
mov
inc
icebp
sbb
cmpl
pop
adc
movsb
or
dec
xchg
stos
cltd
adc
push
js
xor
inc
and
lahf
cmp
sarb
xchg
pop
adc
mov
jae
arpl
aad
sub
cmp
in
lahf
adc
mov
xchg
push
or
jmp
test
fwait
loop
insl
rcrl
push
cld
outsl
mov
call
mov
jecxz
xor
sub
mov
push
stos
das
nop
movsb
adc
jns
jp
cld
mov
cmp
mov
iret
xchg
icebp
pop
mov
push
inc
scas
dec
cmp
ss
bound
sub
jg
pusha
ss
das
mov
dec
and
or
je
mov
mov
cmp
outsl
mov
rol
xor
clc
aas
daa
mov
cmpsl
sub
sbb
mull
or
cmp
fimull
sbb
hlt
mov
pop
mov
pushf
or
xchg
bswap
mov
add
add
sahf
ja
nop
scas
insb
jp
lds
or
cltd
shrb
lods
fucom
mov
mov
ret
ja
xor
pop
jns
mov
sahf
xor
lahf
xor
cmp
xchg
insl
inc
inc
sarl
inc
or
cli
adc
hlt
add
aaa
repz
ret
cmp
mov
sub
loope
popf
pop
iret
movsb
scas
loop
mov
jns
hlt
mov
jp
mov
xchg
mov
mov
inc
sub
je
ja
dec
dec
inc
mov
push
fisubrl
cli
dec
outsb
or
and
cs
movsl
shlb
push
faddl
cmp
cmp
cmp
pushf
imul
aad
cmpb
jnp,pn
mov
scas
hlt
pop
std
or
mov
outsl
test
or
jle
or
jns
mov
push
test
in
or
add
fs
loope
sbb
xchg
or
sbb
pop
lret
aas
aad
leave
test
mov
imul
test
jne
push
jae
sub
orl
stos
pop
insb
pop
pop
mov
and
sahf
mov
jnp
clc
mov
int3
cltd
pop
jmp
std
jbe
shll
in
mov
das
rcrb
jp
fstpt
sbbl
push
mov
call
push
mov
inc
clc
pop
fs
jb
push
in
and
pop
insl
cwtl
mov
sub
leave
fbstp
adc
jle
push
idivl
cmc
in
cmp
dec
mov
int3
dec
loope
fildl
cmp
dec
sbb
loop
arpl
adc
mov
lret
loopne
outsl
push
dec
pop
test
jg
adc
fs
push
add
daa
jo
mov
je
pusha
xor
adc
std
adc
mov
xchg
arpl
sub
scas
mov
cwtl
jb
xlat
add
dec
repnz
jnp
mov
lds
imul
adc
dec
xchg
mov
and
aad
and
insb
into
daa
pop
pop
test
pop
cwtl
xchg
or
jne
fs
cmp
mov
and
roll
jno
loope
pop
mov
aam
pop
mov
and
loop
loop
xlat
mov
mov
into
xchg
ljmp
jnp
add
sub
mov
jmp
and
sub
jge
dec
push
in
add
jge
int
mov
test
ds
pop
rorb
lods
aas
mov
dec
xor
stos
sbb
push
rcll
adc
ror
aad
pop
cmp
add
jb
popf
mov
loope
aad
nop
jnp
fldenv
mov
push
cltd
pop
cmpsb
in
fs
jg
scas
xor
das
lcall
xchg
xor
sahf
ret
out
lock
xor
xchg
mov
cmp
mov
or
dec
cmp
fmull
dec
xor
aaa
data16
movsb
and
push
jmp
call
cmp
repz
dec
shrb
fistps
pop
cmpsb
jne
adc
inc
xchg
call
pop
pop
jo
sub
shl
pop
xor
adc
xor
sbbb
aas
cltd
pop
aas
xor
adc
out
enter
adc
jmp
fidivs
pop
fisubrs
xor
loope
inc
test
iret
outsl
ficoml
mov
add
faddl
addr16
lret
dec
dec
inc
pusha
test
mov
popf
sub
mov
shrb
lcall
les
int
arpl
stos
xchg
fimull
lret
int
and
pop
scas
pushf
dec
or
pop
sbb
sub
pop
xchg
shrb
sub
inc
mov
pop
push
fwait
mov
loop
pandn
xchg
sub
ret
fidivrs
jg
movsl
sti
mov
adc
and
scas
jne
hlt
cli
mov
and
sarl
outsl
pop
adc
push
jns
and
scas
mov
pop
loope
adc
gs
insl
leave
scas
in
outsb
popf
test
das
adc
mov
fisttpll
mov
fidivrs
xchg
sbb
dec
out
or
jo
mov
jns
movsl
ss
inc
call
stos
call
subb
gs
loopne
push
pop
and
or
mov
mov
subb
dec
mov
jg
fsts
insl
repnz
xchg
inc
loop
sbbb
fldl
stos
popf
mov
into
push
scas
push
out
mov
out
sub
fildl
sbb
adc
sahf
movsl
arpl
dec
popf
xor
movsb
insl
xchg
insb
cmpb
out
jmp
or
cmp
js
movsl
xchg
mov
xlat
xchg
pop
dec
test
xchg
jo
ficomps
adc
div
mov
cs
mov
lds
push
add
dec
aad
mov
loopne
je
add
push
mov
popa
mov
shr
lcall
es
aad
sbb
addr16
mov
mov
cmp
cmp
std
insl
or
hlt
sbb
sbb
cwtl
shlb
scas
xorb
mov
mov
fwait
ds
imul
jno
mov
mov
cmpsb
mov
and
ret
loope
es
dec
jno
scas
fistpl
sbb
inc
sub
stos
push
arpl
jle
shrb
fabs
inc
xor
mov
icebp
lea
mov
popf
lds
push
jb
xchg
mov
imulb
cltd
push
test
lds
and
sbb
es
mov
and
out
cmp
fidivs
mov
jne
sti
ss
jle
mov
or
pop
or
fldt
sbb
es
cmp
sahf
push
pop
pop
inc
or
shrb
call
inc
mov
xlat
andb
std
scas
push
jne
test
xchg
sar
pop
mov
stc
cwtl
imul
mov
ror
cmp
fbld
jbe
pop
push
imul
das
cltd
mov
call
aaa
mov
scas
jns
sbb
xchg
ret
push
rorl
mov
sahf
dec
mov
imul
fsubrl
int
mov
sub
or
adc
push
je
xor
or
xor
std
lods
testl
fisubl
push
in
push
in
icebp
inc
inc
loop
out
arpl
stos
fsubl
xor
subl
in
sbb
test
sti
sbb
mov
shl
sbb
mov
xchg
lock
pop
pop
out
repz
and
jg
lret
jle
aad
add
dec
mov
sbb
adc
sbb
sbb
push
ljmp
push
loope
dec
pop
cltd
lcall
sub
push
in
idivl
lea
sbb
insb
es
pop
xorb
call
or
idiv
pop
push
push
mov
in
shr
cmp
mov
push
jle
adc
lahf
inc
and
push
mov
sbb
sbb
stc
xor
pop
jle
movsb
and
inc
enter
stc
sbb
xchg
add
ja
shl
leave
sbb
cld
outsl
and
mov
xor
sub
lock
cmp
in
inc
nop
push
push
jg
lret
shlb
aaa
mov
mov
pusha
sbb
jle
and
pop
xor
xor
lods
cmp
lods
outsl
je
inc
rcrb
insb
addb
xor
mov
cmp
mov
and
movsl
jbe
pop
and
dec
push
popa
dec
push
mov
bound
push
xor
and
mov
fisttpll
sbb
std
cs
sub
push
scas
nop
xchg
mov
mov
xchg
jno
insl
jmp
bnd
jb
mov
jns
mov
popa
xor
inc
daa
xlat
pop
aaa
aas
insb
jb
popl
jns
jle
arpl
std
sbb
add
stc
sbb
adc
hlt
xor
mov
pop
lock
or
les
mov
in
push
arpl
dec
adc
nop
mov
scas
adc
push
push
mov
push
mov
fnstenv
push
push
divl
mov
jle
je
mov
outsl
adc
lods
sub
data16
orl
push
ja
sbb
pop
sbb
shrl
movsb
sub
scas
jns
add
icebp
scas
xchg
sub
cmp
xchg
mov
insb
scas
add
in
mov
pop
sbb
clc
rclb
jge
jp
mov
jecxz
cwtl
cmpsl
mov
mov
lock
sbb
xor
lret
outsb
push
xchg
je
call
sub
bound
addr16
scas
inc
xchg
push
pop
aas
pop
js
int
adc
fld
dec
popa
cmp
sub
cli
imul
sbb
cmp
aad
in
in
mov
aas
dec
xchg
add
jb
sub
es
shl
cmpsb
xchg
adc
mov
xor
popf
andnps
dec
and
lods
gs
xchg
sub
dec
enter
popf
pop
aad
inc
sub
cmc
pop
fldl
insb
push
inc
cmp
movsb
inc
inc
cld
mov
or
or
pop
jp
jl
fildl
scas
sub
lds
xchg
iret
shll
lds
imul
add
shl
mov
sbb
scas
int
push
push
xor
mov
loopne
loope
daa
mov
mov
add
cmp
sub
inc
sbbl
push
xor
lret
ret
ret
inc
ret
movzbl
out
jns
inc
sbb
mov
and
bound
int3
les
scas
xchg
sbb
xchg
and
pop
pop
push
jp
lds
fwait
cmp
std
pusha
push
nop
or
dec
in
push
cltd
mov
dec
stos
aas
push
es
stos
addr16
and
pop
test
aaa
mov
pop
inc
mov
repnz
or
inc
movsl
jl
test
mov
add
push
idivl
push
sbb
add
ret
jge
push
decl
sbb
mov
mov
mov
ja
pop
pop
int3
iret
sub
push
ret
insb
adc
mov
repz
cmp
test
faddl
dec
inc
cwtl
into
and
out
arpl
and
xor
lcall
data16
scas
mov
hlt
dec
mov
fildll
xlat
cld
adcl
xchg
jecxz
mov
std
push
jg
jne
je
mov
pop
cmp
out
cltd
jl
popa
inc
daa
xchg
icebp
aaa
jle
scas
ds
lcall
fsubrl
mov
sub
cmp
xchg
addb
je,pt
idivb
sahf
scas
inc
mov
adc
stos
testb
dec
out
in
js
outsl
ds
loope
add
mul
and
repz
pop
in
dec
ss
mov
xor
mov
xchg
sti
mov
xor
cmp
outsl
jle
lods
jmp
dec
fistps
bound
test
mov
jg
mov
in
fsubr
lret
sub
pop
pop
test
rorb
add
dec
es
pop
lea
fistps
leave
sti
jle
jae
pop
jbe
jmp
sbb
cmc
cmp
ficoms
xor
push
mov
mov
sbb
or
nop
or
push
inc
negl
imul
lcall
in
sbb
sar
ret
test
mov
lcall
lods
loope
call
into
mov
call
or
or
push
sarl
add
mov
mov
inc
pop
mov
adc
cmp
aas
jae
jmp
pop
mov
pop
scas
mov
xchg
cli
dec
cs
inc
cld
pop
sbb
leave
inc
push
call
aas
aad
pop
push
and
mov
mov
mov
fnsave
test
jne
adc
fnstcw
insb
mov
daa
cmpsb
fimuls
adc
jmp
xor
fprem1
push
call
mov
sub
test
arpl
repz
pop
cmpsb
lea
cli
in
mov
mull
mov
or
inc
mov
adc
xor
push
push
sbb
dec
sbb
push
out
stc
xlat
jb
loopne
dec
cld
test
xor
aaa
pop
es
imul
aam
enter
jl
test
mov
leave
loopne
jbe
cmovl
add
divl
movsl
stos
imul
xchg
dec
rcll
mov
aaa
inc
mov
cmpsb
lret
nop
xchg
fnstenv
jge
mov
inc
popa
push
loopne
adc
jnp
je
push
fsubs
xorb
imul
js
icebp
cmp
pop
imul
mov
add
adc
scas
sub
xchg
adc
mov
std
or
jne
shll
xchg
xchg
mov
movd
int
jb
int
in
adc
sbb
and
pop
jnp
scas
dec
xor
shrl
jp
pop
jmp
pop
dec
fimull
loopne
jae
inc
loopne
cmp
mov
mov
mov
imul
outsb
inc
sub
int
add
xchg
and
jno
stc
xchg
add
push
or
out
hlt
dec
adc
xlat
cmc
dec
sbb
or
sbb
std
lock
lahf
xchg
push
adc
xor
xchg
stos
repz
movd
hlt
xor
dec
mov
mov
mov
outsl
les
setns
push
or
xchg
sahf
jnp
and
lock
mov
xchg
fnstcw
push
mov
pop
push
cmp
dec
imul
push
pop
lods
cmp
xor
gs
pop
cmpb
fwait
scas
outsl
jns
mov
cmp
outsb
xor
xchg
push
mov
push
fstps
test
addb
popf
repnz
xchg
scas
push
lods
jp
jno
mov
mov
sbb
dec
aad
clc
testb
es
outsl
fsubrl
rolb
jnp
out
bound
fsubs
sbb
insl
je
xchg
inc
leave
sbb
je
cmc
xor
add
leave
xchg
aas
pop
lods
lds
sahf
test
das
mov
sub
xchg
jmp
sahf
cltd
loopne
jecxz
sub
faddl
test
mov
cs
mov
dec
lcall
add
push
loope
sub
gs
jne
aad
pop
ja
jb
sub
dec
ret
mov
push
fidivl
lcall
push
fisubrs
leave
inc
add
xorb
push
shlb
push
mov
push
mov
adc
jge
inc
dec
aas
pushf
rcrl
into
data16
pop
push
jbe
stc
push
mov
lea
in
sbbb
pop
mov
pop
and
dec
pop
and
int
lcall
dec
enter
rcrl
jmp
inc
popa
leave
arpl
inc
cmp
popf
xchg
mov
pushf
xchg
xor
mov
xchg
ds
pushf
int
jnp
adc
adc
mov
loop
leave
push
jge
push
and
pop
jnp
or
arpl
mov
fs
push
dec
stos
jp
and
pop
adc
jg
jg
xor
cmp
xor
dec
cmp
imul
xor
daa
test
and
ficoms
jmp
imul
mov
into
adc
pop
ds
insl
movsl
adc
fimuls
mov
lea
pop
aaa
hlt
stos
pushf
popf
add
in
stc
mov
shrb
inc
repz
test
sub
xor
out
jae
xchg
pop
sbb
in
inc
xlat
jl
mov
push
sbb
xchg
cwtl
sub
pop
gs
adc
std
dec
inc
les
bound
jnp
rclb
lret
cmpsb
mov
jo
mov
ds
mov
cld
add
xchg
sarl
fstpt
dec
or
repz
test
mov
cli
inc
pushf
xchg
fidivl
test
insb
sub
mov
xor
iret
je
jbe
cs
in
push
xchg
aad
dec
aaa
mov
sbb
je
sub
leave
nop
mov
mov
mov
lds
stos
jg
test
cwtl
and
data16
lret
pushf
scas
mov
out
repz
aaa
dec
mov
dec
sahf
js
sbb
and
mov
pop
test
iret
sub
push
stos
sbb
pop
jns
mov
adc
out
std
int
outsb
testb
call
jmp
lods
insb
cmp
movsl
out
icebp
test
mov
mov
lahf
imul
mov
push
jmp
outsl
into
sbb
fadds
mov
movsb
les
stc
dec
fcmovnb
dec
mov
leave
jb,pn
push
lods
add
push
sti
jp
push
insb
iret
jle
xor
push
dec
loope
stos
int3
jmp
lock
mov
xor
jnp
aad
fsubl
cmp
inc
push
gs
cmp
add
repnz
mov
push
pop
loope
repnz
pop
xchg
push
xchg
ss
pop
jg
repnz
test
repz
jno
jl
movsl
pop
stos
sbb
lret
inc
xchg
popf
lea
xchg
incb
out
scas
jae
sub
stc
jl
push
adc
jp
js
pop
in
aam
sbb
mov
and
into
incb
pop
stos
lcall
in
sub
adc
lds
icebp
repnz
or
decl
jmp
lcall
push
push
hlt
es
xchg
mov
mov
mov
mov
int3
jmp
or
push
aaa
fnstsw
cmp
xor
movsb
xor
jns
sbb
sbb
push
call
xor
push
dec
cmc
lret
xor
in
call
fs
pop
inc
pop
sbb
push
cltd
cmp
cmp
xor
pop
es
lds
or
jbe
jbe
in
aam
arpl
inc
in
xor
lahf
jge
push
jle
mov
sbb
and
repz
push
das
adc
dec
decl
testb
jo
mov
out
out
dec
out
push
aaa
pushf
add
lret
push
sub
mov
aaa
mov
dec
adc
add
xchg
mov
adc
mov
sub
inc
mov
cmp
jecxz
adc
leave
pop
inc
mov
fidivl
xchg
stos
mov
mov
inc
push
and
or
push
jne
out
inc
pop
sub
hlt
adc
les
out
fmul
data16
fwait
xor
dec
test
xor
jns
test
mov
in
int3
sub
mov
dec
stc
fidivrl
popa
outsb
gs
xor
dec
or
or
pop
xacquire
add
mov
sbb
xlat
xor
push
push
div
lea
cmp
mov
push
xlat
add
stc
and
stos
mov
cmp
push
pop
dec
ds
stos
push
loop
or
pushf
or
xchg
push
pop
into
subb
lods
inc
in
sti
inc
popa
mov
ljmp
jg
stc
push
fstpl
popf
loop
adc
int3
add
movsl
fwait
pusha
pop
hlt
sbb
mov
pop
or
ja
fidivl
imul
pop
cmp
push
xor
testb
cmpsb
testb
movsb
dec
mov
pop
push
and
mov
sbb
out
push
adc
ds
mov
sub
jmp
push
pavgb
iret
lods
mov
andb
leave
int
aas
sbb
push
jmp
rcll
add
push
cmp
pop
data16
lods
adcb
data16
pop
aas
push
or
xchg
int3
or
mov
test
xlat
mov
jmp
movsl
sbb
push
or
mov
enter
mov
cwtl
cmp
dec
lods
mov
xchg
inc
pop
push
dec
leave
stos
cli
or
fisttps
inc
jmp
push
mov
lahf
in
in
stos
push
pop
mov
dec
jns
sbb
dec
js
lea
mov
inc
popf
add
and
outsl
ret
cmpsl
frstpm(287
loop
lock
rcll
lea
mov
mov
loop
shrb
clc
adc
sti
sub
sub
pop
and
add
rclb
subl
mov
loop,pn
and
lods
in
cmp
sub
jle
or
out
add
mov
out
adc
xchg
pop
jnp
cli
dec
mov
dec
sbb
rol
mov
dec
mov
sub
inc
fimuls
sarl
lcall
icebp
inc
je
cmp
sbb
mov
out
out
jl
add
in
mov
inc
mov
push
adcl
push
test
fs
addb
gs
rol
jecxz
xor
jnp
jmp
xor
or
ja
fwait
sub
stc
stos
lods
pushf
mul
mov
popf
cmpb
stc
xchg
sbb
jle
jne
movsl
jp
rcl
movsb
dec
fisttps
jae
push
jp
mov
jns
cmpsb
pusha
imul
xchg
data16
movsl
sahf
or
rolb
les
dec
in
cltd
xchg
gs
pop
call
or
nop
inc
int
sub
sarl
aam
lds
out
jmp
gs
std
xchg
sub
push
dec
ja
dec
mov
mov
xchg
cs
cli
mov
hlt
ja
inc
dec
popa
imul
cmp
xor
pusha
int
negl
and
adc
push
lock
fldl
sti
cmp
repz
and
or
sbb
cmp
fists
lds
frstor
inc
xchg
cmpsb
mov
jno
popa
repz
int
in
add
xlat
enter
xchg
ljmp
enter
pusha
packsswb
mov
jecxz
test
inc
jp
and
pop
jae
jg
mov
pop
push
decb
ret
lcall
jl
jg
mov
fistpll
ja
mov
xlat
mov
push
leave
decl
dec
xor
cmp
xchg
stc
fstpl
pop
push
das
sbb
push
insl
mov
jmp
mov
jno
mov
dec
enter
dec
inc
scas
daa
movsl
adc
shll
and
mov
mov
vmovapd
cmp
or
cmp
xor
daa
rcll
jmp
sub
repnz
cmp
insb
mov
in
aas
in
xchg
mov
jo
xor
lock
in
push
out
arpl
xchg
insb
shrl
xor
and
pop
lea
fnstenv
lahf
sub
ja
stos
mov
xor
scas
pushl
ds
pop
fsubl
mov
outsl
test
jbe
ret
xor
subb
add
out
gs
adc
mov
imull
push
adc
sub
jne
pop
test
xchg
jmp
in
xchg
pop
push
stc
cwtl
mov
mov
add
test
xor
jmp
pop
pop
data16
dec
mov
aad
and
out
aad
pop
sbb
push
std
jecxz
push
dec
mov
andl
into
jle
xor
sub
cltd
enter
mov
rcrl
fldcw
push
in
xchg
push
inc
jl
popa
pop
es
adc
ljmp
cld
int3
popa
sbb
test
sub
push
and
pop
mov
push
dec
lcall
ljmp
xchg
fs
xlat
cwtl
mov
and
arpl
stos
mov
sub
sbb
rcrl
push
cmpsb
adc
add
repz
jmp
je
xchg
pop
test
pop
aam
ffree
ja
fwait
sub
or
fistpll
or
cwtl
push
sub
xor
mov
inc
lea
mov
sub
call
sub
int
dec
jp
pop
aam
adcb
jecxz
mov
lahf
test
jmp
add
sahf
xchg
mov
sbbb
lcall
filds
movl
mov
or
cmc
iret
ss
mov
loope
mov
push
pop
stos
add
cmpsl
mov
push
adcl
mov
sti
pop
mov
fsubrp
pop
dec
insb
adc
xor
cmp
out
imul
or
nop
mov
jg
dec
scas
add
or
jl
ds
xchg
jle
jnp
pop
sub
xchg
add
sbb
or
sarb
mov
stos
mov
das
xor
push
sbb
cltd
adc
push
jno
in
sbb
js
sub
mov
fcmovnb
xchg
sbb
add
das
test
pop
mov
sbb
cmpsb
test
das
mov
call
or
xchg
pusha
scas
enter
or
sarb
push
mov
daa
js
les
ret
scas
mov
push
not
les
inc
jb
adc
pop
bound
mov
cld
lcall
add
cmc
push
outsl
test
xchg
sti
mov
xor
insb
and
xor
xchg
push
cli
dec
mov
std
mov
push
movsl
xor
leave
and
inc
and
sub
in
mov
and
sahf
arpl
jns
sbb
push
sbb
loope
into
xor
mov
sarb
dec
and
rcrb
xchg
inc
push
scas
sbb
subl
pop
pop
dec
jb
arpl
xchg
fwait
adc
add
xor
shlb
adc
xchg
into
lods
mov
bnd
jbe
xchg
or
push
and
lret
iret
out
add
xchg
lret
xchg
loopne
cmp
icebp
push
and
xchg
push
pop
clc
sub
loope
lock
decl
fcomi
mov
mov
lcall
into
sbb
cmp
lock
gs
jns
and
add
push
push
stos
cwtl
cmp
daa
push
add
mov
repnz
iret
daa
or
iret
mov
ljmp
jne
pop
dec
xchg
dec
test
int
adc
arpl
push
add
in
fst
push
insb
jmp
push
enter
xor
clc
fldt
inc
adc
inc
xchg
push
sub
jnp
dec
cmc
out
jg
fs
dec
imul
or
test
mov
mov
icebp
fucomi
mov
sub
pop
inc
js
fcomps
in
xor
dec
in
cmp
cmpsb
mov
cltd
hlt
dec
sahf
fdivrs
adc
out
mov
dec
mov
fwait
gs
pop
sbb
dec
mov
hlt
hlt
aam
movsb
lds
push
dec
xor
arpl
pop
add
lea
and
fidivrs
pop
stos
xchg
jmp
fistpl
repnz
bound
je,pt
sbb
cmp
mov
inc
ja
cmc
hlt
out
push
and
cmp
mov
cmp
mov
mov
pop
mov
cs
sahf
fsubp
div
shlb
aas
inc
pop
or
mov
pop
out
cmpsb
adc
jmp
shl
pop
jecxz
cmc
lahf
addb
and
movsl
jge
out
lods
lcall
mov
aam
loop
daa
push
mov
mov
inc
jbe
stos
sub
fcomip
aad
push
mov
sub
adcl
mov
push
les
flds
or
or
mov
adc
fiadds
push
sbb
sub
add
xor
mov
xchg
loop
cmp
insb
test
ja
mov
outsl
mov
push
testl
mov
dec
aaa
fidivrl
sbb
jg
bound
dec
bound
xlat
push
shll
sbbl
fcoms
or
insl
mov
cmpl
mov
jo
xor
sbb
sbb
jae
mov
adcl
mov
dec
int
xchg
jnp
dec
ffree
xor
scas
lahf
mov
stos
mov
cmp
icebp
loop
loope
mov
loopne
inc
ror
rorl
fwait
call
cmp
mov
add
fcmovnbe
mov
adc
add
loope
decb
lea
add
outsb
xor
scas
ret
jnp
test
dec
mov
sti
xchg
cmpb
adc
std
in
shll
repz
add
jne
mov
rorl
push
add
jp
push
and
pushf
pop
dec
jl
rorb
or
loopne
int3
add
sub
iret
inc
push
insb
scas
rolb
fnstsw
sub
sbb
dec
mov
cli
or
push
jb
adc
push
push
xlat
into
xchg
lods
mov
in
lods
sbb
jecxz
loop
xchg
ret
mov
add
mov
arpl
rcl
pop
mov
sbb
aad
xchg
sub
push
mov
xchg
adc
fisttpll
mov
inc
jbe
sarl
das
and
imul
push
out
jg
pop
lahf
mov
movsb
jmp
dec
fadd
push
lds
fwait
jbe
ret
jbe
lds
arpl
inc
insl
lret
inc
jle
inc
outsb
jb
aad
cwtl
gs
pop
or
repz
xor
add
js
xchg
inc
cld
fwait
mov
sbb
lret
rclb
cltd
fs
inc
pop
mov
fildl
outsl
dec
mov
mov
add
cld
dec
add
mov
lods
fcomp
xor
test
les
std
mov
aaa
into
inc
incb
loop
add
out
push
adc
mov
jp,pn
stos
mov
sbb
test
add
xchg
cmp
cmp
mov
imul
stos
mov
inc
les
scas
mov
imul
rorl
inc
xor
jge
pop
imul
xchg
or
add
test
xor
mov
sti
xor
push
pusha
cltd
cmpsb
xchg
and
int
dec
test
aas
cmp
pop
imul
int
cld
sarl
popf
mov
loop
and
adc
xchg
or
in
xchg
lods
adc
test
enter
mov
add
mov
xor
or
je
loope
jne
mov
dec
ret
inc
addr16
mov
pop
stc
mov
aaa
cmp
aas
fisubs
push
or
xor
mov
sbb
inc
xor
out
and
lods
call
sub
rorl
sbb
jae
push
cmp
pop
call
lds
sbb
aas
dec
bound
out
jp
daa
sbb
mov
in
dec
rcll
mov
inc
cmp
scas
scas
push
sbb
push
add
mov
shll
or
and
mov
sub
ret
pop
inc
std
mov
pusha
pop
dec
es
mov
adc
pop
lahf
pop
jle
or
aam
testb
mov
sahf
imul
mov
inc
cltd
hlt
and
cwtl
xchg
notl
cmp
cltd
ss
fnstsw
dec
mov
cmpsb
mov
scas
lahf
sub
sub
loopne
dec
cs
out
mov
jbe
jo
mov
jo
ret
xchg
inc
xchg
addb
add
push
mov
fldenv
pop
push
sti
jp
mov
fistpl
or
mov
shl
or
xchg
dec
push
daa
das
mov
andl
mov
sbb
dec
test
jge
aad
in
or
rcrb
jb
adc
add
adc
and
mov
xor
mov
mov
lds
cmp
cmovs
xlat
mov
mov
sbb
arpl
enter
leave
iret
sysenter
xchg
aas
xlat
xor
rcrl
cmpsb
cmp
cmp
sbb
push
mov
testl
xlat
and
push
add
call
loope
mov
pop
xchg
pop
xchg
lahf
mov
bound
push
in
fisubs
divb
es
in
popf
sub
push
lock
out
sub
inc
add
pop
mov
jnp
dec
dec
lret
cmpsl
mov
mov
mov
dec
divb
lcall
mov
icebp
mov
dec
out
mov
push
xor
int3
add
inc
sti
mov
push
movsl
loop
in
and
inc
enter
sbb
push
add
daa
dec
jb
sbb
adc
add
xor
push
outsl
cli
push
int
lods
push
dec
stc
iret
into
ljmp
pop
pushl
xchg
popf
popa
dec
xchg
movsl
sub
jg
sarl
in
adc
mov
adcb
clc
in
in
adc
mov
out
loop
sbb
cmp
lock
xchg
xor
adc
aas
rcpps
mov
add
cmpl
dec
jecxz
test
add
jae
sbb
jno
into
mov
push
xchg
pushf
pop
jae
clc
mov
xchg
mov
stc
out
mov
aad
test
ja
hlt
imul
in
jnp
fwait
stos
inc
sub
jbe
out
push
jno
negb
fwait
arpl
fbld
cwtl
lcall
hlt
push
subl
cwtl
sbb
pop
ljmp
arpl
faddl
dec
mov
push
jne
faddl
adc
call
cwtl
aaa
cmpsb
repz
jg
aaa
dec
outsl
xlat
or
mov
and
push
cmp
inc
and
xlat
push
cmp
jo
jo
fcomps
add
lret
cwtl
cmp
lcall
fimuls
ljmp
dec
imull
jae
push
shrb
inc
testb
test
xor
lahf
pop
cmp
data16
xchg
out
jnp
pop
mov
sub
aad
or
mov
adc
or
cld
cwtl
pop
lock
nop
jg
cs
addr16
out
mov
push
jb
in
lret
notl
xchg
pop
hlt
push
ret
add
xor
adc
jae
cmc
mov
mov
jnp
xor
dec
bound
sti
fcmove
push
test
cmpsb
das
nop
enter
mov
outsl
dec
call
pop
in
mov
push
push
arpl
aaa
inc
lcall
lods
daa
pop
lret
push
push
sbb
mov
pop
inc
inc
sub
xor
xor
xchg
test
mov
mul
bound
and
cwtl
pop
sbb
push
and
inc
pop
push
mov
repz
in
fs
test
mov
push
jmp
notb
fs
dec
jno
lahf
jo
mov
aam
adc
cmp
lods
xchg
xchg
mov
mov
sti
enter
sbb
xchg
and
lock
sbb
xlat
jge
cmpsb
or
ffreep
sbb
inc
ss
bswap
or
pop
mov
dec
pop
nop
imul
mov
sub
lods
mov
test
dec
in
scas
sub
leave
ljmp
xchg
or
push
mov
cmpb
mov
inc
pop
and
cmpsl
std
push
rclb
out
inc
dec
in
out
adc
flds
inc
subl
push
mov
cmp
popl
adc
jbe
mov
cmp
mov
xor
arpl
js
push
sub
mov
mov
in
jle
movl
jns
lret
arpl
xchg
stos
add
outsl
data16
inc
xor
orl
in
xchg
lock
cmp
shl
fs
jo
call
addr16
outsl
push
daa
ficoms
fimuls
mov
fwait
iret
arpl
pop
je
testb
loop
outsb
push
add
imul
lret
mov
out
sbb
aam
jbe
scas
push
xor
mov
pop
aaa
sbb
lahf
adcb
jo
sbb
pop
ds
fs
lret
cli
das
mov
jne
mov
fisttpl
pop
mov
cmp
loop
shlb
pushf
sbb
rcll
xchg
fildl
js
mov
popf
pop
imul
test
push
data16
into
enter
push
mov
mov
sbb
jnp
adc
jl
repz
sub
and
cmpsl
or
or
push
mov
mov
inc
cmpsl
js
fwait
mov
leave
cmp
xchg
jbe
test
outsl
push
stos
sti
push
sbb
fucom
ficompl
sbb
lock
int
imul
mov
mov
push
cmpsl
push
out
mov
das
fistpll
outsb
repnz
sub
add
xchg
mov
bound
inc
iret
stc
push
aas
sub
sar
adc
mov
lahf
addr16
test
cmc
jge
inc
gs
int
push
push
je
mov
sbb
out
repnz
fbld
rolb
mov
or
adc
cltd
sbb
jge
inc
sub
cmp
mov
stc
call
cmpl
sti
mov
stc
jle
jb
xchg
inc
xchg
test
int3
ret
push
imul
testb
out
sarb
test
push
cmpsb
mov
jbe
addr16
push
and
out
shrl
aam
cmp
jo
dec
or
test
mov
and
xchg
hlt
data16
fsub
pop
adcl
mov
std
sbb
inc
jg
int
add
pop
mov
cmpsb
pop
pop
aam
icebp
ljmp
push
dec
or
movsb
jnp
and
mov
in
dec
cmp
pop
cmp
cmovb
or
mov
scas
mov
dec
cli
xchg
mov
mov
mov
adc
ret
js
movl
into
mulb
xchg
xor
in
cmc
out
imul
xor
cld
std
jnp
decl
add
cltd
mov
stos
or
cltd
sbb
inc
mov
xchg
push
imul
in
lods
data16
call
fnstcw
mov
push
jmp
fs
repz
je
push
rol
push
mov
mov
mov
sbb
pop
mov
les
adc
lock
pop
in
movsl
jl
fidivrs
push
fwait
lock
test
sub
mov
call
mov
and
xchg
jg
mov
pop
mov
jp
cmp
jo
push
adc
in
push
in
shrl
fidivl
out
xchg
fildll
xor
ja
ficoml
mov
lret
cmp
mov
and
inc
scas
pushf
faddl
push
hlt
mov
mov
mov
pop
cmp
std
adc
jg
inc
mov
mov
clc
sbb
add
jnp
sarl
push
rorb
adc
cmp
mov
fmul
es
lds
xor
mov
enter
aaa
sub
jle
push
inc
cld
and
and
pushf
xor
jns
dec
mov
xor
xchg
mov
bound
out
pop
adc
add
in
push
xor
movsl
ret
jbe
lret
mov
adcl
mov
inc
dec
bound
cmp
lcall
and
xor
lcall
sbb
pop
jae
mov
in
sahf
or
sub
loope
pop
mov
lcall
test
fimull
add
mov
mov
sbb
insl
pop
cmp
mov
xchg
push
cmpb
rcll
jge
and
in
jne
mov
mov
js
adc
imul
and
pusha
sub
mov
dec
pop
aaa
call
and
je
xor
push
and
mov
inc
mov
dec
lret
jl
leave
je
insl
pop
mov
jg
add
shlb
mov
adc
cmp
into
mov
push
xor
pushf
cs
test
movsb
out
dec
cwtl
jne
stc
dec
das
scas
pop
inc
imul
dec
clc
push
mov
jb
lcall
fists
popf
xchg
test
leave
cmp
imul
test
incb
loop
fisttps
jle
mov
jbe
cmpsl
addb
js
scas
fidivs
jecxz
mov
andb
lret
add
rcrb
mov
fisubrl
dec
xchg
daa
outsb
sysexit
cmp
stos
xor
gs
fs
lahf
es
push
cli
xor
stos
or
fdiv
xor
add
mov
or
mov
or
jne
adc
adc
outsb
out
dec
xchg
or
push
sub
lods
aaa
dec
lods
jp
shl
mov
leave
std
mov
mov
jecxz
mov
mov
inc
dec
push
adc
push
cs
or
mov
fcoms
repnz
testb
and
rcl
fcomp
in
dec
xor
dec
shl
leave
xchg
ds
outsl
sti
sub
add
xchg
mov
cs
cmpsl
pop
mov
test
cmp
in
mov
aad
jo
and
mov
cmp
push
pop
push
js
push
xchg
adc
pop
xchg
test
pop
adc
mov
outsl
mov
jbe
bound
sub
mov
orps
sub
mov
arpl
xor
cmp
xor
shll
test
push
dec
cld
push
fcmovnu
push
fdivrp
sbb
jo
aaa
mov
sbb
test
cmc
rcrb
fisttpll
add
mov
push
cmp
movsb
loope
test
push
les
or
loop
jnp
stc
mov
add
mov
xchg
mov
jg
and
dec
ja
ficoms
pop
jg
ficoms
rcr
lds
jl
daa
push
and
scas
push
xchg
cli
sub
fildl
std
imul
std
mov
subl
mov
daa
movsb
stos
js
push
test
add
or
sbbl
mov
cmp
cltd
xchg
pushf
out
add
outsl
iret
dec
xchg
shl
dec
imul
rcll
xchg
sub
push
sub
jb
scas
int3
rolb
inc
push
sbb
into
xchg
ja
and
add
jno
lods
and
xchg
jb
jl
testb
out
movsl
jle
push
hlt
out
push
cltd
jo
loope
jge
les
shlb
xor
insb
cmpsb
fsubrs
jmp
outsl
adcb
fmul
jnp
xor
rolb
mov
add
cmp
push
roll
jnp
insb
subb
out
inc
push
mov
jl
or
cmpsb
inc
fsubl
in
add
push
xor
push
inc
stos
fwait
js
mov
cmp
stos
jae
xchg
aad
ret
add
sub
jnp
int3
xchg
push
cli
mov
mov
push
adc
add
push
mov
ss
mov
mov
std
cmc
out
pop
iret
lcall
xor
icebp
jg
inc
ja
sub
loopne
mov
ljmp
mov
cwtl
sbb
setbe
push
xchg
push
les
sahf
scas
lcall
mov
cmp
push
clc
out
cmp
sub
add
push
jb
lods
data16
out
call
dec
mov
adc
and
addr16
and
lods
gs
sub
scas
shlb
adc
faddl
js
ljmp
mov
lcall
pop
dec
ja
leave
adc
imul
ret
mov
mov
nop
test
mov
pop
das
and
xlat
cmp
adc
loope
test
popf
daa
jg
adc
jno
pop
movsb
xchg
add
pop
cmpsb
fcomps
pop
repz
nop
sub
clc
jnp
fwait
push
push
push
inc
dec
inc
add
mov
cmp
aam
dec
lock
inc
jns
mov
fcomp
movb
ds
pop
jae
lcall
ss
sbb
ljmp
or
or
mov
cmp
sti
jo
out
mov
inc
dec
ud1
sbb
mov
push
jmp
rcrb
pop
mov
mov
push
cmp
psrld
ds
fsubr
clc
bound
xor
mov
arpl
js
pop
or
js
aad
pop
mov
inc
aas
jecxz
jmp
popa
lahf
jne
push
pop
out
cmp
xchg
ret
xchg
rolb
sub
sarl
into
mov
jecxz
mov
daa
mov
adc
push
aas
xchg
addr16
xor
je
in
ret
addl
sbbb
jb
mov
shll
pop
mov
push
test
testb
and
and
call
jno
push
cmp
aas
sub
xchg
jb
out
stc
sbb
in
imul
mov
loop
lcall
inc
jns
arpl
inc
mov
add
push
addr16
fdivp
call
ss
xchg
sbb
fisttpll
stc
xchg
int
mov
mov
leave
lahf
into
loope
psubsw
pop
and
cmp
cmc
cltd
notl
xlat
lds
or
pop
lock
or
subl
and
pop
push
push
out
sub
mov
adc
mov
int3
imul
cs
adc
mov
mov
jmp
gs
in
lods
fs
jns
pusha
xor
cld
xchg
push
mov
fiaddl
pop
pop
scas
mov
filds
jle
fmul
jae
sarb
mov
xchg
pushf
sbb
push
sub
pop
dec
add
or
arpl
sti
test
cmp
inc
ret
es
dec
or
jb
xchg
sbb
jbe
inc
sub
add
fadds
lcall
xchg
lea
xchg
pop
fimull
rcll
pop
shll
jno
imul
lret
sub
das
mov
push
mov
pop
pop
sbb
pop
arpl
and
mov
pop
sahf
push
js
xchg
mov
scas
xor
inc
sti
sub
dec
test
and
pop
sbb
test
std
notb
mov
int
loopne
xchg
nop
fst
imull
hlt
int
push
sarb
aaa
repnz
mov
xchg
pop
xor
divb
cld
and
lcall
cwtl
jns
in
xor
in
or
dec
cli
jo
fisubl
jb
fstl
dec
cmpsl
les
std
sbb
push
add
mov
mov
fs
cmpsb
pop
mov
and
pop
and
clc
in
stos
mov
push
mov
movsb
inc
sahf
or
dec
xchg
push
fimuls
sub
jl
aad
mov
ds
pop
aad
xor
outsl
xchg
mov
or
pop
push
add
lcall
push
dec
mov
shlb
dec
mov
inc
push
pop
add
imul
adc
jnp
push
mov
jg
xchg
repz
ljmp
stos
sub
xchg
data16
test
popa
inc
pop
imul
jg
mov
shll
fmuls
imul
stc
test
ja
mov
lods
sahf
cld
or
add
popa
adc
sbb
jbe
adc
inc
sbb
mov
sub
jno
jg
inc
sbb
sbb
call
ret
aam
imul
adcl
or
insb
lret
sbb
pop
scas
mov
out
mov
xchg
dec
int
out
js
sbb
insl
push
nop
mov
dec
add
and
cmp
jbe
das
mov
in
jp
mov
xlat
in
pop
inc
xor
sub
pop
aad
aad
adc
int3
mov
push
scas
dec
adc
and
aam
popa
cmp
mov
mov
jnp
and
outsl
ficompl
cwtl
jnp
and
jl
addr16
ret
xchg
loop
push
dec
cmpsl
loope
add
adc
clc
mov
xor
sti
xchg
sub
mov
stc
pop
aad
push
and
push
jbe
cmpsl
test
xchg
mov
aad
mov
aam
push
clc
clc
mov
jp
roll
cs
xor
push
jno
mov
push
ljmp
xor
add
ss
and
in
les
pop
inc
pop
push
push
sbb
and
and
aam
pop
mov
dec
aas
in
fwait
mov
bound
adc
push
ret
xchg
nop
sbb
negl
dec
jae
push
cmp
mov
mov
in
arpl
scas
aaa
std
jne
xlat
inc
je
mov
mov
icebp
jae
cmpsl
pop
stos
daa
inc
or
cs
enter
inc
cmp
lcall
ljmp
cmc
pop
decl
cmp
cmc
aaa
mov
push
scas
sbb
jns
jo
fmull
sbb
mov
inc
sbb
mov
faddl
xor
mov
add
cmp
fisubrs
xchg
xor
and
cmp
xor
xchg
xlat
xchg
push
inc
lea
stc
jecxz
push
cmpsl
test
sbbb
test
sub
pop
xor
ljmp
push
repnz
fwait
loopne
mov
push
negl
sub
mov
stos
sub
xor
push
and
mov
lret
fs
test
ret
mov
lret
inc
fdivl
add
and
pop
repz
mov
out
inc
sub
mov
pop
xor
out
mov
mov
int3
lods
jno
jo
or
cli
pop
and
pop
fwait
or
fiaddl
loopne
sub
pop
dec
jg
negb
cltd
push
dec
repz
popf
out
inc
mov
call
sub
pop
mov
xor
stos
sbb
sbb
aaa
rolb
dec
fisubs
enter
sbb
pushf
bound
lods
pop
into
adc
popf
cltd
ret
cltd
bound
out
bound
push
dec
les
out
sbb
in
cmp
xchg
jmp
xor
pop
addr16
xchg
sub
std
push
sbb
aaa
test
jo
adc
mov
mov
inc
popa
sbb
mov
jns
add
repz
repz
jp
xchg
cmc
sbb
outsb
push
leave
inc
inc
and
sbb
addl
xchg
push
xor
cmc
icebp
sub
fbstp
ja
jne
clc
add
pop
icebp
inc
xor
lahf
mov
js
fbld
int3
inc
xchg
xor
mov
cmp
scas
cmpsb
push
inc
popa
push
and
push
sar
mov
jns
mov
icebp
cld
out
push
aas
pop
insb
pop
popf
push
or
mov
movsb
clc
mov
decl
mov
sub
adcb
sti
scas
fsub
sub
lods
mov
mov
lea
dec
jge
inc
mov
push
adc
xchg
adc
or
pop
jle
pop
mov
in
mov
ss
xlat
mov
mov
sub
cmp
or
jle
test
ljmp
xor
mov
jecxz
test
jle
aas
xor
or
pop
pop
push
out
je
in
scas
push
fucomip
insb
or
cld
ss
lea
pop
fcmovnb
mov
out
push
into
aaa
fisubs
idivl
cmc
adc
mov
push
xchg
adc
inc
lcall
test
jle
mov
ret
dec
and
and
fdivr
mov
loope
jno
cmpb
xchg
int3
lds
lea
mov
lods
and
aad
jecxz
cmpl
pop
push
push
clc
mov
pop
xchg
hlt
mov
mov
xchg
out
pop
insl
in
mov
ss
mov
out
lret
xchg
mov
xlat
cli
das
inc
xchg
mov
sarb
ret
or
dec
mov
xchg
lahf
leave
scas
jle
stc
adc
lcall
roll
aam
add
push
and
pop
mov
mov
jnp
mov
or
dec
dec
std
fcmove
sti
or
xchg
fdivrl
idivl
xchg
and
insb
hlt
cmpl
dec
xchg
negl
add
sbb
xchg
int
fabs
ficomps
jl
push
or
popf
push
mov
sbb
les
inc
inc
les
test
cltd
data16
in
push
aad
aas
cli
and
push
shlb
mov
jle
loope
in
mov
lret
lods
aaa
mov
xchg
addr16
inc
dec
jns
ret
cli
sbb
fists
push
push
fidivrl
div
sbb
popa
sub
ja
ret
imul
cmp
lcall
mov
inc
into
fucompp
sbb
out
and
mov
jo
or
sub
mov
lret
cmp
jnp
cmp
mov
push
adc
cmp
rcrl
fimull
lds
stos
dec
push
push
mov
add
inc
cmp
imul
int
push
push
movsl
and
inc
mov
pop
das
ret
lock
enter
idivb
jl
sbb
ss
dec
int
jl
aas
jmp
rorb
fisubs
pop
stos
cli
mov
rorl
arpl
test
int3
lret
imul
add
icebp
fimull
push
pushf
ret
pop
cmp
pushf
pop
subps
outsb
mov
jo
mov
add
pop
jae
fs
fwait
call
dec
aas
mov
xor
movb
loopne
aas
mov
mov
fucomp
mov
ljmp
jecxz
lds
jmp
movsl
lret
mov
or
cwtl
mov
push
cmp
fbld
loope
cmp
jbe
push
enter
push
add
int3
xchg
pop
lahf
fdivr
push
imul
lret
ret
cltd
shlb
insl
adc
gs
push
ljmp
sbb
pop
int
cmp
mov
adc
cmp
and
push
popa
roll
push
jb
mov
aaa
push
movsl
pop
in
sub
insl
xor
ss
mov
push
cmc
lods
insb
loope
cwtl
sbb
fists
push
stos
ret
je
mov
mov
add
jge
xchg
hlt
jle
pop
sub
btc
shlb
mov
neg
dec
pop
rorl
scas
scas
or
sub
mov
int
in
insb
rorl
or
jae
xor
int3
mov
mov
pop
push
lret
dec
ljmp
jle
cwtl
adc
adc
cmpsl
xchg
fimull
jmp
jmp
sbb
cmp
adc
sahf
inc
mov
mov
das
call
inc
inc
and
ljmp
icebp
adc
jb
test
stos
shrl
data16
xor
push
mov
iret
popl
sub
aaa
adc
cwtl
cmp
jmp
or
mov
add
insl
fimull
stos
pop
jge
scas
imul
ss
orl
js
rolb
shll
movsb
pop
insl
and
into
mov
sarb
sahf
sbb
push
cmpsb
outsb
std
and
jae
inc
dec
pop
lret
rcll
pop
adc
sub
push
dec
loope
rolb
rol
mov
sahf
popf
push
inc
xchg
out
mov
add
and
pushf
stc
inc
sub
mov
xchg
pop
push
leave
clc
add
mov
leave
cwtl
push
lods
dec
mov
addr16
bound
and
add
nop
xor
data16
xchg
inc
movsl
jp
pop
or
add
sbb
pop
jbe
loope
hlt
mov
or
in
pop
sahf
and
xor
int
test
mov
test
mov
cmp
jge
mov
out
lods
pop
cmp
ffree
xor
or
pop
adc
add
dec
loope
sbb
testb
jl
outsb
cli
or
lcall
push
shlb
movsl
push
xchg
add
add
push
or
fstpl
mov
cmpsl
adc
sbb
sbb
in
sub
adc
ds
adc
fnstsw
sbb
mov
push
mov
fimull
rorb
cmp
data16
xor
mov
xor
jge
test
pushf
mov
jns
sub
jle
out
jae
push
inc
in
cmpsb
bnd
xlat
mov
jne
shl
cmp
ds
xor
mov
push
and
pop
arpl
cld
jl
xchg
xchg
int3
imul
xchg
popa
adc
pop
dec
flds
fstpl
xor
cltd
les
mov
nop
inc
and
scas
adc
ret
cmp
mov
insb
and
div
icebp
adc
mov
imul
repnz
and
enter
inc
or
lods
icebp
ja
adc
hlt
mov
enter
ret
inc
cmp
inc
push
add
jno
adc
fidivrl
stc
pushf
pop
xchg
or
aaa
adc
dec
std
sub
jae
mov
or
sbb
fidivs
dec
mov
and
inc
inc
add
sahf
push
cwtl
jge
and
inc
cmpb
aam
cwtl
hlt
int
xchg
xchg
in
ret
roll
pop
cmp
pop
add
outsl
push
in
test
sub
add
out
lret
imul
inc
mov
fistpll
mov
sbb
stos
scas
stos
cmp
sbb
lea
ret
in
sbb
loop
jmp
sbb
pop
push
or
js
jge
daa
push
and
mov
cltd
push
pop
jb
pop
add
sbb
mov
fwait
add
daa
xchg
mov
mov
in
lds
js
inc
imul
dec
pop
add
aad
dec
add
cmp
fwait
inc
add
fdivrs
scas
sbb
push
aam
jns
push
sbb
or
add
scas
dec
mov
cmpsb
xor
pop
push
stos
xchg
arpl
nop
scas
pop
call
mov
lret
mov
mov
push
cmp
xorl
or
popa
sbb
inc
adc
jae
stos
scas
lret
xor
sbb
imul
sub
xchg
icebp
insl
cmp
cmpsb
mov
aam
fcmovne
mov
sti
xorb
push
pop
and
lret
int
insb
sti
add
xlat
inc
fsin
out
enter
pop
sub
lock
sub
outsl
adc
jae
lret
mov
and
pop
push
rcr
jmp
mov
popa
imul
mov
push
jbe
push
outsl
push
mov
mov
sbb
loope
jo
pusha
push
ss
lods
mov
hlt
pop
sbb
addl
fistpll
les
mov
sahf
icebp
stc
movb
adc
xchg
out
xchg
sbb
jnp
leave
xor
fadd
push
lods
mov
int
shll
nop
pop
lock
or
ficoml
inc
xchg
lea
xor
or
jne
repz
orb
mov
jno
popf
push
cmp
negl
mov
push
mov
mov
jle
ss
dec
xchg
xor
ja
sbb
lds
xchg
test
out
int3
add
mov
and
pop
decl
mov
jno
xchg
ret
idivb
and
test
in
mov
ss
push
mov
call
jns
inc
cld
or
arpl
or
nop
pop
xchg
ljmp
in
test
jbe
movsw
jbe
jns
les
clc
xor
mov
mov
pop
push
or
adc
add
jecxz
dec
push
repnz
jmp
and
jo
inc
add
arpl
data16
addr16
loop
lret
rorb
lret
js
mov
pop
in
pop
lods
out
lret
ret
mov
nop
fldenv
push
ja
aad
pusha
movsl
outsb
pop
xor
add
test
push
lret
jmp
arpl
mov
aad
sub
imul
aam
mov
xchg
lahf
mov
xchg
jmp
push
push
sbb
cmp
ljmp
xor
pop
adc
adc
dec
xor
mov
cmpsb
lcall
cltd
sbb
ret
adc
sub
cli
xor
sub
ret
pop
mov
xor
sbb
cmp
ret
xchg
imul
inc
outsl
sti
xor
push
fsubr
dec
movsl
fidivs
cwtl
std
ljmp
cmp
adc
test
and
mov
cli
dec
orl
shll
adc
xchg
ficompl
int3
imul
mov
xchg
jp
cli
sbb
movsl
lods
stc
pop
dec
xchg
iret
cmp
jbe
push
jecxz
test
into
shrl
nop
xchg
lods
or
inc
jne
pusha
setle
xor
or
mov
out
and
add
cltd
int
jmp
inc
jbe
scas
pop
popa
in
into
mov
sbb
xor
aaa
sbb
dec
in
iret
dec
push
rcrl
mov
bound
mov
loop
cmp
push
rcrb
jge
inc
lods
into
lods
sbb
sub
add
enter
jne
in
push
rcr
inc
mov
ret
mov
jbe
rorl
ja
pop
das
arpl
cmp
enter
cmp
xchg
sbb
jg
popf
or
dec
and
shl
pusha
enter
jmp
stos
pushf
sbb
lret
or
fnstsw
mov
pop
adc
jo
daa
cwtl
out
mov
add
cmpsl
and
ret
or
lret
lock
icebp
stos
shrb
mov
xchg
xchg
jle
dec
mov
cli
xlat
std
mov
add
mov
mov
jle
jb
cltd
inc
dec
daa
xor
sbb
loopne
mov
sbb
stos
outsb
lds
aam
sbb
out
pop
mov
adc
es
mov
test
add
cli
mov
int3
cmp
adc
bound
call
mov
inc
push
or
sub
cltd
or
jl
lock
out
jno
pop
mov
jg
fisubl
dec
xchg
aaa
or
and
in
mov
sets
and
mov
fs
outsl
shll
aad
xchg
and
lret
xor
cmp
push
dec
ret
neg
mov
sub
and
adc
inc
mov
loope
ret
jg
sbb
jecxz
pop
mov
gs
jne
adc
cwtl
cmpsb
imul
sbb
jl
push
lret
mov
jg
fcomp
add
lret
xor
jnp
enter
test
xchg
cmp
aaa
add
inc
or
or
in
sbb
adcb
and
push
ror
das
mov
repz
adc
cltd
jl
pop
pop
push
adc
addr16
mov
jp
cli
or
loop
sub
pushf
inc
xchg
hlt
sub
pushl
int3
inc
lods
push
cmp
xchg
test
jle
mov
insl
sbb
test
movb
xor
cmp
sbbb
xlat
mov
test
xor
cmp
sub
cli
fisttps
mov
mov
adc
call
mov
test
ljmp
dec
sub
cmpsl
test
jae
dec
cmc
and
lret
add
jb
push
daa
mov
dec
dec
cmpsl
sbb
mov
jnp
mov
ficoml
add
adc
ret
fnstsw
push
jbe
ret
in
pop
jl
mov
ds
push
bound
jmp
dec
jg
xchg
jns
scas
and
enter
lods
test
sar
clc
arpl
add
push
xchg
popf
in
mov
jle
push
popf
aaa
das
adc
mov
jecxz
xor
sub
fs
cmp
notl
dec
popf
repz
sub
cmp
cmc
ret
xchg
mov
movsb
mov
loop
xchg
xor
movsb
divl
sbb
into
les
and
stos
mov
mov
mov
sti
cwtl
lret
repz
rclb
pop
cmc
aam
inc
dec
mov
jno
jns
jle
daa
lods
imul
mov
dec
out
jecxz
push
insl
stc
insl
cmp
fcompl
sub
clc
xor
mov
aad
and
movsl
jmp
out
add
and
fnstenv
or
sbb
cmpsl
cs
cmpsb
mov
adc
sub
in
ljmp
and
ret
aas
fmul
fisubs
jae
jb
add
cmc
iret
enter
jecxz
mov
xchg
out
std
mov
shr
movsl
ss
lahf
xchg
lock
leave
jae
adc
add
sbb
xchg
sbb
test
xchg
jmp
mov
imul
sbb
mov
add
fstpl
aaa
xchg
call
add
jno
clc
pusha
cmpsb
loope
aaa
insb
and
add
inc
flds
jne
jno
xlat
bound
ss
int
in
js
mov
dec
mov
inc
cmpsl
sub
out
pop
xchg
mov
xor
sti
es
push
and
ror
in
xor
mov
fchs
fistl
in
push
pop
call
lcall
cmp
sub
lock
popf
mov
repz
and
adc
in
mov
jle
mov
mov
in
jge
cmpsb
cmp
mov
adc
jae
cs
fwait
add
stc
xchg
aad
push
into
xor
mov
mov
icebp
mov
shl
out
dec
add
in
shrb
inc
mov
add
daa
lcall
stc
sub
mov
inc
dec
cltd
add
push
mov
test
ds
fcmovu
sti
sbb
xor
int
sub
shl
jmp
cs
in
jge
or
mov
add
or
mov
push
mov
out
mov
faddl
adcl
cs
ds
outsl
jbe
ss
cltd
out
out
cli
in
or
ljmp
pop
testl
jnp
cwtl
int
ljmp
and
and
xchg
xlat
mov
mov
xchg
mov
dec
lcall
rorl
sti
addr16
add
or
addr16
push
cltd
mov
jge
xchg
imul
adc
test
dec
movsl
sti
mov
add
push
jb
xchg
jns
fcmovbe
fisttpl
insl
and
adc
pop
pusha
rcrl
mov
movsb
pop
bt
iret
cmpsl
inc
mov
addr16
mov
lret
mov
mov
jle
scas
subb
jo
sar
pop
push
xor
push
loope
adc
jp
xchg
mov
sbb
lods
jg
out
mov
in
and
movaps
mov
sti
mov
ret
mov
jle
and
iret
lcall
dec
movsb
and
hlt
mov
das
lods
repnz
sub
pop
mov
lret
jb
dec
lds
pop
sub
or
jno
lds
outsl
dec
out
mov
mov
loop
repnz
mov
adc
mov
call
arpl
mov
push
push
rclb
mov
lea
and
aam
cld
mov
cmp
pop
lods
inc
adc
mov
addr16
and
insb
push
pushf
jp
ljmp
push
adc
test
xorb
or
mov
mov
aas
stos
sub
xor
push
dec
dec
dec
lahf
pop
inc
sub
adc
dec
dec
mov
xchg
mov
pop
leave
outsl
out
dec
ret
lock
scas
sub
out
fadd
sbb
insl
ror
xchg
hlt
jo
dec
leave
lock
addl
inc
mov
mov
dec
imul
dec
inc
inc
mov
pop
stos
and
stc
mov
fdivl
xchg
xchg
out
adc
pop
sub
adc
adc
jg
repnz
mov
jmp
xchg
clc
or
stc
les
xchg
sub
inc
cmp
popf
popa
leave
mov
stos
inc
mov
jne
cld
lcall
outsb
mov
in
xchg
dec
adc
cli
cwtl
js
mov
pop
jbe
jns
pop
repnz
jae
xor
cmc
lods
arpl
call
fisttpl
mov
sbb
or
adc
pop
mov
in
mov
lods
daa
adc
imul
int3
mov
loope
dec
sub
loopne
dec
psubsw
xchg
sub
dec
sub
pushf
xchg
mov
mov
sbb
imul
sarb
mov
in
push
rorb
dec
cwtl
lahf
push
iret
xor
push
stos
mov
xor
data16
adc
and
fmulp
add
bound
rep
cmp
repz
shl
enter
fnstcw
cld
push
mov
fldln2
leave
lret
push
mov
lods
divb
lret
push
loopne
es
repnz
mov
and
arpl
addr16
jne
enter
push
push
and
ret
jns
jl
stc
mov
loop
lods
jge
es
jle
daa
bound
loope
sbb
outsb
cwtl
mov
pop
xor
repz
push
sub
mov
imul
es
dec
inc
xor
and
sbb
and
fld
popa
int
sbb
xor
rcrb
mov
adc
mov
inc
xchg
pusha
loopne
xor
mov
test
push
push
inc
rorb
ljmp
xorl
iret
shll
sub
popf
int3
data16
rorb
mov
inc
in
dec
push
les
shlb
icebp
inc
inc
xchg
pop
add
and
inc
xor
add
imul
xor
xor
inc
das
imul
daa
jmp
push
inc
int
dec
or
xor
xchg
dec
or
cmp
push
xchg
dec
pop
cli
mov
negb
dec
and
sub
test
sub
stos
xchg
mov
inc
cmp
push
jnp
out
or
adc
hlt
sahf
fwait
jecxz
es
push
scas
push
jle
xor
ds
lss
sbb
cmp
idiv
pushf
sbb
or
ljmp
nop
push
inc
cmp
dec
fstpt
jecxz
push
push
popf
mov
imul
movsb
adc
lahf
mov
or
or
cmc
enter
roll
popf
sub
push
dec
lcall
in
fmuls
and
movsl
cs
stc
jno
bound
push
or
cmp
subb
js
call
adc
popl
inc
xchg
pop
mov
repz
lahf
add
cmp
mov
cmp
jb
xor
inc
dec
mov
aaa
lea
fsubrs
jg
inc
sub
xchg
fnstcw
sub
sub
cmpsl
mov
mov
push
int
push
mov
lods
loope
movsb
xor
xor
jb
or
mov
xlat
test
and
pop
lcall
in
adc
mov
aam
rorb
dec
xchg
xor
mov
and
add
out
xchg
aad
imul
aam
popf
sub
aaa
mov
sub
mov
jecxz
ljmp
xor
repnz
and
repz
xor
in
outsb
rcrl
xor
std
arpl
mov
fsub
insl
and
jae
push
add
mov
scas
adc
jmp
inc
loopne
out
mov
xor
rclb
outsb
pop
test
stc
mov
mov
pop
pop
sahf
or
push
push
inc
bound
adc
sbb
xchg
rcll
lea
xor
inc
dec
es
repnz
jl
roll
cmp
cli
adc
je
mov
into
xchg
fld
imul
out
negb
adc
scas
pusha
mulb
pop
mov
sbb
xchg
sahf
adc
mov
mov
push
lock
in
ja
jno
mov
pop
test
add
push
int3
mov
add
and
jle
gs
mov
insl
pop
ds
imul
mov
dec
push
roll
je
sahf
stc
fmuls
adc
sbb
mov
add
leave
jae
loopne
push
loop
cltd
dec
dec
mov
sub
std
dec
mov
scas
adc
stc
xchg
jbe,pn
imulb
sub
push
scas
loopne
js
sub
std
dec
loope
imul
lods
pop
fcoms
inc
pop
or
jp
inc
push
mov
push
mov
push
xchg
or
int
xchg
es
dec
addr16
ljmp
adc
fdivs
sub
shl
iret
xchg
push
xlat
es
add
cltd
test
jmp
flds
lods
ret
add
out
pop
popf
stos
mov
in
inc
lds
leave
movb
or
xchg
cmp
ret
push
jge
mov
lahf
mov
ds
std
mov
test
pop
ss
cs
cmc
pop
es
iret
mov
or
pop
pop
and
movsb
mov
andb
mov
sbb
jno
imul
dec
xlat
mov
ljmp
fisubrs
jae
call
mov
mov
test
test
stos
dec
xor
dec
sub
xlat
scas
stos
es
imul
icebp
or
xor
mov
xchg
ds
mov
pop
lret
mov
out
jnp
jbe
jnp
das
adc
or
in
pushf
stc
in
mov
and
mov
mov
out
sbb
scas
sub
movsb
jle
int3
addl
pop
push
or
dec
mov
sbb
in
add
mov
sub
add
sbb
cltd
sub
mov
dec
aad
int
sar
insb
icebp
cmp
cli
cld
inc
test
sub
push
jle
mov
mov
fistpl
lret
repz
ret
xchg
push
fcomps
sub
test
xor
lock
mov
push
mov
xor
push
test
popa
add
pop
mov
pop
inc
and
fistps
loopne
dec
adc
imul
push
cld
xor
imul
stc
jmp
jno
out
jmp
test
cmpsb
stos
dec
scas
xchg
arpl
lods
dec
in
fcmovnu
out
scas
sbb
push
cmp
les
push
out
dec
int3
adc
divps
add
imul
mov
lods
push
lahf
sahf
shlb
sbb
xor
js
pushf
lds
out
inc
in
mov
std
mov
push
push
bound
mov
xchg
leave
cmp
ror
call
insb
insl
mov
sub
adc
mov
js
leave
push
push
and
xchg
shll
or
pop
fldcw
add
in
lret
mulb
mov
test
leave
inc
pop
fsts
xor
xchg
imul
pop
adc
cmp
in
addr16
pop
leave
and
cmp
xlat
sbb
push
and
lret
stc
or
xor
aad
mov
rcl
insb
jae
cs
fstpt
cli
movsb
push
push
jle
fcmovu
in
sbb
dec
popa
xchg
sar
fwait
dec
ret
xchg
mov
cmpsl
dec
nop
aaa
stos
out
cltd
adc
add
std
dec
jb
push
xchg
pop
lea
push
test
mov
bound
je
int
and
outsl
test
mov
adc
bound
and
test
lret
push
xor
enter
sbb
pop
pop
je
mov
das
test
jecxz
stc
test
fnsave
cmpsb
or
shrb
xor
rcrb
cmpsl
inc
jl
jl
mov
enter
xor
adc
rcrl
sbb
aam
or
imul
je
adc
mov
mov
xchg
jecxz
pop
jge
push
loope
push
pop
mov
sahf
mov
cmpsl
xchg
inc
sti
mov
mov
pop
popf
das
cmc
mov
test
sub
iret
out
inc
popf
sub
fildll
push
stos
repnz
add
xor
or
inc
divb
pop
je
jbe
jae
scas
inc
add
shr
mov
xchg
dec
daa
stos
sub
pushf
or
je
je
xor
fildll
inc
jne
sbb
lret
call
sbb
je
notl
adc
aas
cmp
xor
and
adc
mov
and
adc
mov
sbb
mov
das
in
cli
jmp
pop
mov
pushf
push
xorl
pusha
cld
xor
xor
adc
das
cld
jnp
mov
mov
sub
dec
les
rcl
daa
pop
js
and
push
js
loopne
cmpsb
xchg
jecxz
cmp
and
js
inc
sbb
test
stc
ja
roll
loopne
inc
aaa
rclb
push
mov
lods
fwait
push
addb
jb
lahf
clc
inc
xchg
xor
add
push
mov
data16
stos
and
xchg
in
inc
out
scas
and
popa
dec
ljmp
dec
mov
arpl
and
lahf
std
adc
xchg
push
pop
gs
xchg
in
stos
add
adc
fsub
mov
mov
insb
xchg
nop
sti
push
frstor
or
push
es
xchg
or
out
inc
add
cli
stos
dec
icebp
cmp
mov
aam
jmp
and
mov
ret
rcr
lock
ficomps
xchg
addr16
gs
ss
lea
hlt
roll
fisttpll
pop
insl
cmp
push
lds
jb
mov
aad
imul
fcompl
cmp
jne
xchg
lret
loop
dec
aaa
scas
xchg
push
mov
fldenv
jns
scas
inc
cmp
scas
sbb
lahf
out
sahf
lods
loope
shlb
mov
hlt
test
xchg
jno
push
mov
sbb
add
lcall
sbb
cwtl
lcall
daa
imul
in
out
xchg
mov
push
dec
pusha
test
add
xor
test
les
dec
mov
cmc
or
push
jg
rcr
adc
fldenv
aas
jle
in
lret
nop
fwait
xor
je
sbb
jbe
dec
cs
lahf
test
sub
pop
pusha
aaa
fsubrl
cmp
jmp
and
sub
inc
jp
inc
sub
jle
lahf
scas
jl
push
xchg
and
add
int
dec
lods
rcll
mov
aaa
and
aaa
push
pop
sub
cli
fcoml
mov
outsl
sahf
mov
mov
aad
inc
in
and
xor
and
in
sub
mov
ja
andl
sub
jmp
or
xor
xchg
nop
mov
lea
imul
and
pop
xlat
mov
into
mov
xor
pushf
int
or
mov
bound
stc
sbb
cmp
push
cmc
jecxz
dec
gs
inc
mov
lcall
testb
rcll
push
sbb
ljmp
mov
bound
ds
cmp
xor
jge
mov
cmp
mov
dec
push
faddl
rcrb
lea
dec
adc
scas
cmpsl
nop
cmp
dec
shl
xchg
cmp
scas
cmpsl
ror
jne
js
sub
xor
int3
push
int3
pusha
cmp
into
popf
inc
and
xchg
xchg
dec
scas
mov
out
sub
inc
movsl
pop
jg
std
mov
mov
mov
jge
lcall
and
or
dec
inc
call
sub
cltd
dec
xchg
in
scas
sbb
jo
fmull
pop
xchg
dec
das
mov
pop
jge
xor
jno
imul
inc
cltd
xor
das
out
xchg
adc
lds
scas
jb
or
aaa
xor
jmp
out
mov
add
cld
jecxz
lcall
dec
mov
sbb
divb
cwtl
sub
pop
cltd
insl
out
mov
jns
aam
ficoms
xor
mov
cmpsb
lods
add
dec
rcrb
stos
inc
mov
mov
dec
int3
dec
dec
and
ret
and
inc
xor
repz
ss
add
mov
dec
cltd
mov
fistl
push
clc
pop
fs
add
test
mov
xchg
imul
push
push
rorb
add
in
xor
xor
xchg
cmp
out
inc
inc
fidivl
aaa
sub
cmpsl
or
jo
popf
xchg
insb
dec
in
int
mov
push
call
iret
in
rcrb
adc
add
lahf
mov
pop
popf
fmul
xchg
jp
in
or
hlt
outsb
inc
mov
stos
mov
sub
pushf
adc
lret
mov
dec
push
insb
xor
cmp
popf
inc
xchg
nop
mov
jae
insb
test
ds
xchg
and
into
fsubrl
dec
xor
andl
mov
adc
cmpsb
and
leave
orb
fwait
jae
pop
inc
jle
cs
cmp
adc
ret
inc
popf
in
jecxz
sbb
imulb
out
cwtl
bound
aas
xchg
out
inc
hlt
mov
scas
gs
mov
cmp
ss
fs
inc
mov
leave
jmp
xchg
dec
pop
ficoml
dec
imul
push
push
popf
enter
iret
mov
js
pushf
mov
ljmp
pop
inc
mov
arpl
leave
fstpt
pusha
push
aas
push
add
ja
ret
arpl
lds
jns
dec
mov
lds
xchg
pop
inc
ficomps
pop
out
mov
mov
jl
add
jmp
mov
in
adc
daa
orl
imul
push
mov
mov
lret
mov
bound
or
mov
xor
in
pop
lret
clc
add
mov
mov
xchg
repz
jbe
ja
inc
push
icebp
fidivrl
sub
add
dec
mov
push
subl
aam
xor
pop
jnp
std
syscall
enter
in
popf
jecxz
add
xor
mov
add
data16
lods
inc
add
ret
into
push
mov
cmpb
jo
cmpsl
mov
and
decb
inc
icebp
sarb
cwtl
or
cs
das
jns
out
rcrl
xchg
leave
dec
add
call
dec
mov
mov
xchg
dec
pop
repz
push
sub
loop
pop
test
iret
push
push
jl
imul
jl
movsl
in
pop
fmull
js
adc
and
cmp
sub
jb
test
xor
xchg
adc
mov
repnz
ficoml
push
adc
push
cmp
cwtl
notl
push
popa
adc
loope
cmp
dec
push
jb
sahf
and
dec
addr16
imul
leave
push
mov
dec
sbb
fcomi
ret
mov
inc
xor
scas
stos
add
out
xor
dec
fmuls
scas
mov
mov
cmpsl
leave
popa
or
jo
lods
push
stos
orl
inc
dec
sub
fdivrp
aam
xor
cld
sbb
movb
sbbl
in
lret
jb
xor
xchg
es
movsb
insl
push
loop
jp
cmp
push
dec
cmp
or
test
or
test
sub
fidivrl
sbb
fldcw
std
add
rol
xchg
mov
scas
mov
xor
popa
adc
je
lcall
rolb
or
or
in
loope
add
cwtl
xchg
aad
outsl
outsb
xorb
not
mov
icebp
es
cli
mov
aaa
lods
sbb
lock
or
adc
shl
and
fistl
mov
scas
xor
cmp
lahf
push
mov
stc
xchg
pop
xor
adc
jle
idivl
jae
dec
lods
mov
movsl
mov
add
faddl
cmp
adc
fbld
stos
mov
out
shll
int
pop
pop
outsl
inc
mull
es
scas
mov
shrb
adcl
mov
pusha
outsl
mov
pop
mov
and
cmp
inc
mov
add
rorl
xchg
ret
sub
mov
loop
add
and
mov
les
es
add
sbb
adc
in
pop
push
out
sbb
mov
xchg
rolb
loop
mov
or
or
ret
in
outsl
mov
fdivs
jmp
xor
mov
movsb
dec
mov
fldl
sbb
bound
xchg
mov
dec
loopne
or
sbb
pop
xor
notb
mov
outsb
inc
mov
aaa
and
sbb
int
mov
lcall
fdivs
mov
pop
jbe
sub
inc
mov
cmp
ljmp
adc
pop
xor
imul
pusha
daa
push
sbb
out
lock
cltd
test
mov
bound
and
sbbl
cld
pop
aad
jae
add
jmp
xchg
fiaddl
pop
ret
pop
dec
or
insb
fcomps
or
add
pop
push
lcall
xor
xor
push
aam
push
into
add
pop
popf
call
cmp
and
into
imul
iret
inc
leave
sub
test
xor
xor
lods
fwait
movsl
xor
push
lds
aad
mov
xlat
js
xchg
and
movsb
bound
xchg
outsb
jae
dec
pop
xlat
enter
popl
in
or
jno
scas
test
mov
xor
xchg
int
sbb
push
lahf
test
mov
in
mov
insl
into
lcall
lock
push
shlb
scas
dec
call
int
in
xchg
fcomps
test
pop
xchg
adc
adc
addb
addb
pop
outsb
lods
dec
movsl
lea
jne
shrb
pop
lods
and
and
mov
push
push
mov
cwtl
loopne
dec
xor
mov
lock
inc
stos
xor
insb
sbb
fisttpl
into
dec
ss
stos
inc
fisubrs
bnd
imull
sub
shlb
cmc
adc
cmpsl
outsl
pop
add
sti
fsubrs
sbb
loope
data16
xchg
insb
nop
fldt
in
idivb
add
dec
fsubrl
jae
jg
lahf
fnstsw
aas
pop
fwait
xlat
aaa
insl
dec
test
mov
pop
and
rcrb
imul
push
mov
mov
cmc
jle
jp
loopne
jl
movsb
or
stc
hlt
jnp
sbb
sbb
dec
enter
cmp
decl
lcall
xchg
xchg
fisubrl
sbb
add
cmp
or
dec
sub
xor
idivb
hlt
sub
scas
fucomip
cmp
push
test
dec
add
adc
stc
and
or
pop
outsb
xlat
push
cmp
cmp
adc
xor
lock
push
cmpb
mov
jg
lahf
push
and
ds
sub
mov
push
repnz
mov
outsb
ficomps
sahf
push
adc
lds
sbb
or
dec
test
call
pop
xlat
add
bswap
daa
mov
insb
lcall
leave
mov
and
mov
xchg
rol
push
sub
dec
push
xlat
jge
fwait
arpl
dec
lds
aam
cmp
mov
pop
bound
xchg
jne
ljmp
mov
mov
ret
add
dec
add
cmp
mov
lods
push
xor
fisubrl
dec
cmp
cmp
rcr
and
and
fs
pop
loopne
ret
xchg
cmpsl
and
orl
mov
ss
lret
sbb
jno
or
or
inc
xchg
push
idivl
ja
cmp
lods
dec
insl
adc
sbb
xchg
or
movsl
lods
lods
sbb
leave
inc
repnz
fnstcw
popa
add
xor
sarb
adc
aad
pushf
mov
push
inc
sbb
cmp
xchg
sahf
repnz
int
sbb
punpckhbw
dec
sub
sbb
cld
inc
xor
sub
fwait
mov
xchg
cmp
subl
fildl
cli
cmp
xchg
jmp
rol
add
shll
and
ss
sub
pop
int
mov
lcall
or
push
gs
mov
loope
adc
inc
adc
mov
sub
jg
out
mov
sahf
cmpsl
dec
adc
push
sbbl
aaa
sti
push
addr16
aam
addr16
sbb
or
mov
stos
cmpsl
out
stos
aam
adc
inc
pop
sti
lcall
and
insb
xlat
cltd
mov
mov
cmp
cmp
mov
mov
ja
lahf
fs
shll
stos
cmc
xor
add
xor
adc
shlb
incl
hlt
cs
pop
je
out
xchg
jns
mov
adc
fcmovu
outsl
orb
jns
inc
movsb
mov
pop
lds
xor
call
sbb
adc
jne
orb
subl
icebp
cltd
jmp
or
mov
sub
cmp
adc
push
adc
mov
cwtl
sub
mov
repz
push
hlt
or
ss
shl
pop
adc
mov
or
or
push
lods
sub
rcrb
jo
push
pushf
ljmp
sub
test
stc
nop
test
rcrl
in
push
sbb
rcll
pop
adc
inc
or
jne
jmp
mov
imul
lret
and
sbb
cmpsb
iret
into
jae
mov
or
mov
popa
mov
push
dec
jb
sub
xor
and
out
dec
cmpsb
mov
mov
xor
dec
stc
ret
mov
loopne
inc
inc
test
mov
lcall
dec
test
pop
mov
orb
imul
mov
lock
enter
sbb
and
scas
nop
dec
lret
stos
sti
xchg
fnsave
dec
dec
cmp
inc
mov
cmp
mov
lret
ret
out
mov
decb
scas
imul
nop
iret
loopne
cmp
je
bound
jb
int3
or
jmp
aaa
hlt
pop
loope
mov
je
mov
scas
shl
xor
in
mov
mov
ret
icebp
mov
mov
mov
push
mov
test
push
or
cmp
in
test
ret
fstpt
cwtl
mov
inc
inc
arpl
cli
push
jmp
stc
ficoms
push
jno
and
xor
mov
aaa
addl
xor
cmp
dec
jae
insl
cmpsb
movsb
mov
sbb
ret
xchg
test
in
add
xchg
mov
xchg
mov
icebp
push
or
pop
cwtl
inc
jmp
mov
cwtl
data16
push
mov
dec
adc
dec
popa
test
pop
inc
xlat
subb
ret
or
cs
in
idiv
rcr
repnz
icebp
push
loope
lds
inc
loop
cmp
or
sub
out
bnd
xchg
ss
fstpt
cltd
cli
xchg
pop
insb
mov
inc
push
repz
cli
fadds
pop
add
mov
pop
test
add
push
fsubrs
jno
adc
xorb
stos
mov
fsubr
iret
ljmp
stos
dec
pop
sub
call
mov
cmp
pusha
out
pop
mov
or
or
mov
push
sub
icebp
sub
sbb
test
mov
pushf
inc
xchg
mov
adcb
jb
xor
cmpb
mov
fdivs
out
cmp
hlt
lahf
xlat
sahf
out
pop
outsb
ret
mov
mov
mov
dec
add
loopne
adc
les
ret
inc
dec
jb
jne
xchg
inc
aad
and
push
stc
push
xor
sbb
insb
pop
mov
mov
lea
lock
pusha
aam
imul
or
fnstcw
imul
out
pop
mov
push
lods
fmul
movsl
inc
shlb
movsb
inc
shr
les
ret
movsb
add
push
test
lret
loope
cmp
xchg
add
mov
fists
fistps
sub
repz
xor
and
add
nop
add
setge
or
push
and
cmp
sbb
push
mov
adc
das
dec
and
sahf
je
jo,pt
ss
divb
sub
popa
jae
push
cld
mov
xor
push
popa
push
push
std
loope
in
orl
out
mov
add
shlb
cltd
dec
add
add
push
xchg
les
and
sbb
out
pop
out
jo
jl
test
stos
inc
and
add
push
daa
push
test
rcrl
xchg
es
fs
das
shll
pop
sarb
jno
test
fdiv
fcoms
adc
cmp
aad
jp
mov
jns
leave
push
adc
jb
pop
in
push
or
jae
and
imul
scas
cmp
jb
sbb
mov
mov
mov
repz
add
inc
push
or
rorb
add
popf
rcrl
sbb
push
and
jge
lret
aas
incl
mov
stos
dec
pop
sub
or
push
lret
outsl
imul
mov
cmpsl
addl
mov
and
push
icebp
cwtl
pop
js
loopne
pop
pop
cs
aas
mov
loop
push
test
push
cmp
mov
les
repz
aaa
fdivrl
or
mov
js
imul
daa
aad
mov
aaa
daa
add
pop
mov
xchg
aad
push
sbb
daa
dec
adc
adc
inc
pushf
xor
mov
xor
les
das
lock
push
push
adc
jmp
push
xchg
mov
ss
pop
lcall
int
jbe
lds
inc
or
push
jae
pusha
xchg
aas
rcl
add
xchg
movsl
insb
fwait
data16
fdivrs
inc
mov
ud0
pop
add
and
mov
data16
mov
jb
push
out
jmp
jp
push
mov
lret
in
xchg
mov
lret
xchg
mov
lods
test
int
iret
add
out
mov
jno
push
and
shr
pop
int3
mov
out
pusha
cmp
cmp
and
jp
sbb
cs
daa
sbb
inc
pop
inc
xor
cwtl
or
lock
jmp
adc
lods
jge
cmc
shl
shrb
mov
xchg
cltd
or
inc
scas
and
test
xchg
ds
pop
insl
push
test
dec
test
cltd
pop
jmp
rol
sbb
xchg
adc
and
popf
es
jle
aam
in
lcall
cs
dec
scas
into
and
pop
dec
fists
adc
popf
sbb
adc
loop
movsl
inc
int
aad
dec
cwtl
sub
loopne
imul
stos
in
shrl
aas
mov
std
test
vmread
push
xor
int3
inc
outsl
in
jle
cmp
push
dec
je
cmp
in
jg
pop
add
aam
xchg
add
aaa
shll
fbstp
stos
rclb
subl
inc
mov
jge
imulb
stos
xchg
inc
mov
xchg
fnstcw
mov
mov
adc
lret
popf
sub
mov
cmp
add
insl
sub
inc
cmpsl
or
and
sbb
lea
out
sub
pusha
inc
lahf
pop
cmp
push
stc
push
ss
pop
push
add
je
dec
ficoms
leave
out
adc
xor
scas
or
ret
push
adc
in
lock
dec
sub
sbb
sub
stc
fildl
cltd
push
scas
lods
testb
data16
lods
sub
out
fstpl
jo
dec
fwait
mov
aam
xorl
push
lock
mov
movsl
les
inc
idivl
nop
adc
pop
jbe
sbb
pop
outsl
mov
cmpsl
or
andb
movsb
pop
mov
bound
jecxz
adc
fadd
push
stos
push
ret
xchg
add
adc
cltd
inc
fdiv
ljmp
rcll
or
je
add
fmull
adc
push
insb
cmp
cwtl
ds
sub
push
pop
out
or
sub
or
std
lret
push
idivb
pusha
bound
lcall
icebp
jl
push
sbb
and
dec
rcr
loop
push
ss
pushf
lock
mov
jmp
nop
dec
cmp
cmp
sub
push
dec
aas
testl
out
inc
pop
shll
pop
adc
jle
xchg
mov
cmp
mov
loopew
stc
ss
iret
xlat
add
test
mov
bnd
pop
mov
cmp
lds
mov
cmp
jmp
fbstp
sub
leave
jp
dec
imul
mov
mov
cld
cmp
adcb
cmp
adcl
in
push
inc
shll
sub
mov
or
lret
lea
dec
and
sti
xor
mov
scas
or
jmp
push
fadd
movsb
jo
xor
pop
mov
xor
jne
mov
add
mov
and
adc
push
jecxz
inc
fnstsw
pop
push
fisttpl
movsl
cltd
call
mov
wrmsr
mov
mov
ds
mov
xlat
mov
adc
push
xchg
imul
mov
cmp
aaa
dec
xchg
xor
into
rcrb
jns
xor
fstpl
sarb
les
or
xor
movsb
sti
inc
pop
dec
xchg
iret
pop
movsl
clc
fstpl
push
mov
sub
jl
ja
mov
xchg
out
mov
negl
pop
jae
sub
or
mov
enter
arpl
jg
push
sub
outsl
jp
pop
inc
cwtl
loop
mov
repnz
mov
iret
mov
add
lahf
loopne
adc
jecxz
jp
cmc
inc
ret
dec
push
adc
pop
jp
xchg
in
out
outsl
imul
iret
xchg
addr16
cld
in
repnz
sbb
test
ds
sti
sarb
cli
mov
sub
add
mov
jge
dec
mov
sub
fwait
cwtl
ds
xchg
imul
cltd
arpl
fstpt
xchg
dec
arpl
les
and
push
out
xor
push
aaa
push
test
and
imul
or
out
jne
shll
cld
test
pop
cmp
jg
roll
test
and
mov
outsb
sbbb
mov
adc
shrb
adc
xchg
shlb
and
nop
je
les
ret
sbb
mov
push
pop
jmp
pushf
negw
ret
loope
hlt
dec
aas
movlps
ljmp
lods
push
push
mov
mov
mov
movsl
xchg
adc
xchg
mov
jmp
jmp
add
rcll
xor
insb
stos
cmp
cmp
mov
decl
push
jb
in
popf
xchg
sub
or
jne
scas
and
xlat
add
jae
mov
jnp
out
push
jno
cltd
jmp
and
xchg
mov
ret
or
push
xchg
pop
dec
mov
or
mov
xor
inc
aaa
orl
jae
mov
jle
adc
icebp
nop
push
xchg
ror
fxch
xor
cmp
jg
jecxz
dec
cmpsl
js
xor
mov
mov
gs
std
das
jbe
xorl
pop
add
or
inc
out
xchg
xchg
lods
jnp
sub
mov
pop
or
xor
and
jnp
and
xchg
cs
ficompl
shrb
pop
adc
ja
roll
sub
filds
push
cmp
xor
test
and
shlb
hlt
pop
into
mov
mov
ja
lret
jnp
jle
xor
sti
std
int3
stc
xor
adc
aas
les
xchg
mov
or
mov
aas
mov
out
push
and
out
out
mov
jns
inc
pop
ja
mov
sbb
cmp
fwait
cmp
adc
dec
loope
aam
cmp
cmpl
inc
cmp
outsl
jp
sbb
outsl
ljmp
xchg
cmp
cmpsl
add
stc
icebp
cmp
mov
scas
push
dec
clc
pop
enter
cmp
loopne
js
scas
xchg
adc
fildl
repnz
xchg
push
mov
cmp
inc
mov
jae
jnp
sub
cmp
lret
add
and
mov
dec
fs
inc
sbb
pop
push
sarb
into
loopne
fsubrl
xchg
jns
and
in
out
call
push
into
and
or
lea
out
jo
dec
and
daa
adc
je
push
mov
insl
out
mulb
fwait
push
divb
pop
inc
mov
cli
dec
adc
scas
jae
les
mov
cmpsb
leave
or
out
cmc
push
xorb
daa
les
lds
pop
sub
sbb
mov
add
out
cmp
mov
adc
or
das
inc
jns
aam
fs
lods
scas
inc
shll
int3
mov
mov
cs
scas
lret
jnp
jae
and
sti
pop
dec
repnz
xchg
lahf
cmpsl
dec
push
add
fs
popf
fdiv
mov
rclb
shrl
pop
je
xor
testb
out
cmp
fisubrs
dec
pop
cs
jnp
jle
fscale
je
pop
std
jae
out
int3
inc
push
add
xor
xor
xchg
mov
movsl
rolb
scas
dec
dec
push
push
add
mov
pop
mov
pop
jns
push
iret
mov
sub
loopne
int
dec
pop
adc
pushf
mov
in
jae
repnz
arpl
or
fxch
bound
daa
leave
xor
movsb
mov
push
test
mov
test
push
out
cli
es
sahf
add
and
nop
aam
xchg
out
and
cwtl
call
adc
xor
add
cmc
inc
fsubr
ja
add
sarl
sbb
pop
fucomi
pop
sbb
dec
frstor
dec
pop
ret
outsb
idiv
add
pop
sub
popf
icebp
push
mov
cmpb
sub
inc
pop
pop
push
lcall
in
sub
mov
cli
and
rcll
lahf
subl
jmp
cmpsb
xor
cs
mov
xor
jle
push
and
sbb
mov
cmp
or
aas
pop
jl
in
mov
adc
xchg
pop
and
fisubrs
sub
and
dec
add
mov
insb
mov
pop
pop
scas
test
inc
clc
mov
mov
mov
mov
loopne
aam
call
rorb
sub
lods
and
mov
jmp
jo
cmp
sub
ljmp
test
roll
mov
xchg
rorb
sahf
inc
cli
pusha
mov
xchg
lret
ljmp
push
jbe
push
fidivrl
dec
testb
xor
or
dec
jge
xchg
in
in
or
xor
adcb
mov
ret
dec
pop
xchg
mov
inc
enter
rol
aad
mov
in
jnp
and
outsl
mov
mov
add
inc
lods
pop
push
or
out
out
and
negb
int
xchg
dec
testl
lret
mov
out
xchg
lock
sbb
imul
call
mov
or
aaa
ljmp
adc
jae
ljmp
mov
pushf
lret
mov
sbb
daa
sub
inc
scas
sub
push
repz
movsl
xchg
sub
sub
icebp
movsl
fadds
ror
sub
iret
cmc
jae
mov
push
pop
mov
sahf
out
decb
jmp
stos
add
scas
pop
insl
push
out
inc
out
sub
jge
leave
sbb
dec
dec
mov
lcall
cltd
je
mov
adc
pop
scas
clc
ljmp
fidivs
jle
adc
divb
fsubs
pop
dec
sub
sub
dec
scas
out
cli
mov
sbb
out
rolb
xor
aad
in
js
jle
out
sub
mov
in
mov
aad
adc
adc
call
xor
mov
sbb
jae
daa
xchg
xchg
and
fstp
push
cmp
push
pop
lds
bound
adcl
rcrl
pop
and
cmp
mov
mov
pop
push
or
loopne
sahf
leave
addr16
jl
mov
add
test
jge
cld
sub
popf
lds
aaa
out
mov
mov
xchg
pop
mov
bnd
dec
and
cmp
mov
std
cwtl
and
add
adc
lret
imul
push
dec
loope
es
push
jb
lcall
add
sbbb
mov
cmpsb
push
fcmovnu
xor
cmc
adc
mov
dec
pushf
stos
movsl
jge
ljmp
inc
popa
xchg
pop
in
adc
repnz
js
dec
sub
pop
or
int3
jecxz
mov
bound
jp
and
ds
shll
adc
cmp
inc
push
decl
adc
and
sbb
push
adc
mov
cli
loopne,pn
and
icebp
push
add
mov
jne
stos
faddl
test
jne
mov
pop
aam
lods
jg
subl
jmp
adc
inc
jb,pt
fwait
mov
add
jb
cmp
scas
test
in
xchg
cmp
mov
add
ds
call
push
aad
jns
add
inc
jp
cmpl
adc
push
inc
mov
in
push
sub
hlt
push
add
mov
or
into
and
push
test
sbb
out
jmp
jge
ret
push
mov
js
mov
or
stos
test
addb
xchg
mov
lret
bswap
pop
mov
mov
mov
mov
xchg
jno
repz
sub
xchg
push
pop
inc
test
nop
mov
leave
sbbb
in
imul
stc
xchg
jp
cmp
and
xchg
mov
dec
scas
cltd
lcall
cmp
adc
mov
test
mov
ret
nop
jecxz
iret
mov
add
jae
sbb
sarb
ja
int
and
aaa
xchg
in
cltd
sahf
dec
jl
jns
loopne,pt
lret
test
shrl
out
dec
push
mov
outsl
jo
push
push
fdivl
mov
lea
xchg
sbb
mov
rcll
dec
rcrb
into
mov
sbb
xchg
pop
dec
inc
pop
mov
adc
andb
adc
pop
push
push
imul
addr16
mov
loopne
cmpsb
xchg
dec
push
aam
gs
xchg
stos
clc
dec
out
mov
iret
jp
add
mov
xlat
ds
inc
lea
scas
mov
mov
test
stc
adc
xchg
push
movb
jae
in
inc
or
adc
ret
stos
pop
xchg
mov
es
sub
in
in
fcmovbe
push
stos
hlt
mov
sbb
lods
mov
dec
jg
push
les
mov
mov
gs
xchg
mov
mov
imul
frstor
bound
and
cli
jne
adc
mov
push
inc
inc
inc
sub
pop
test
mov
dec
pop
mov
ret
xchg
test
and
xchg
pushf
push
push
and
outsl
loopne
and
iret
add
das
sub
loope
in
ss
sbb
test
stc
sbb
cmp
push
mov
sub
int
js
sbb
negb
push
lea
xor
and
call
iret
lock
and
push
xchg
mov
xlat
stos
out
repnz
test
or
out
es
aam
mov
inc
into
inc
xor
pop
loope
lahf
imul
xchg
ljmp
cld
or
dec
xchg
and
dec
movsl
mov
sub
mov
dec
cmp
jge
jb
sub
jmp
notb
mov
imul
je
sub
popf
sub
and
fisubl
test
sahf
sti
ss
sub
cmp
jp
stc
adc
jle
push
lahf
sub
jne
mov
sub
mov
mov
mov
test
outsl
mov
jle
in
inc
jecxz
test
in
pop
sub
divl
jmp
sbb
inc
mov
inc
cli
idivl
xchg
sbb
jns
jo
sbb
and
push
jnp
into
icebp
aad
pop
mov
pop
xor
decb
shrl
xor
add
mov
out
ds
and
test
mov
pop
pusha
or
jecxz
loope
sbb
pop
outsb
sahf
dec
pop
into
fisubrl
pop
int
and
repz
mov
cmpsl
cmp
xchg
out
bound
in
imul
jb
in
insl
shrl
cmpsb
cmpsl
cmp
fisttps
dec
add
outsb
out
and
xlat
xchg
push
push
xchg
dec
inc
xor
push
mov
xchg
sub
ja
sub
rorl
jno
pop
mov
inc
in
fsub
int
push
loope
adc
dec
adc
out
fidivrl
das
mov
adc
clts
inc
mov
ret
xchg
lods
negl
out
dec
aaa
xor
cmp
lcall
cmp
sbb
inc
and
xchg
movsb
mov
sub
xorl
jbe
xor
les
mov
pop
in
or
mov
test
mov
mov
and
test
pop
jecxz
addb
jno
push
inc
pop
dec
mov
xchg
push
mov
and
adc
subl
push
popf
pushf
repnz
aam
sub
sbb
ret
push
pop
pop
loopne
or
inc
push
loop
jne
loope
mov
movsl
inc
in
sbbb
add
ja
xor
or
push
push
test
pop
inc
loop
sub
out
jbe
lods
cmpsb
pop
ljmp
mov
cmp
sbb
rorl
loopne
out
fdivrs
insb
cmp
je
jae
jne
pushf
popa
mov
jo
adc
push
gs
push
fistpl
jo
add
cld
mov
dec
cmc
cmp
mov
or
push
pop
jo
mov
ljmp
mov
js
es
dec
sub
sub
xchg
je
push
mov
xor
sti
mov
outsl
mov
and
dec
mov
xchg
adc
lcall
aad
adc
lret
mov
out
jne
ror
mov
cltd
test
lods
bound
fistpll
lahf
mov
popf
fs
push
bound
das
js
stos
push
mov
daa
or
push
lock
push
sub
subl
js
mov
push
cmp
enter
sbb
fwait
aad
inc
xor
lds
adc
daa
inc
lods
sub
and
ret
push
adc
jecxz
xchg
clc
add
and
xor
mov
add
fisttpll
sub
jmp
fs
sbb
dec
lods
sub
xor
mov
leave
fsubl
ficoml
add
imul
mov
cltd
pop
test
push
cmp
callw
xor
jle
adc
inc
pop
lods
pop
xchg
out
xchg
in
ds
dec
pop
cwtl
stc
sbbl
mov
iret
ljmp
gs
xchg
and
rclb
inc
adc
jno
shl
inc
div
out
and
pop
sbb
daa
adc
pop
xor
pop
mov
adc
movsb
jmp
int
loop
lods
enter
aaa
mov
adc
fdivr
mov
mov
sub
mov
or
clc
pop
xchg
shll
std
sarb
cmp
inc
or
xlat
bound
or
data16
or
cmpsb
add
lcall
lcall
xchg
movb
mov
rcll
mov
cbtw
inc
adc
out
push
inc
xor
cld
es
mov
mov
mov
sbb
outsl
int
mov
shr
push
and
cmp
into
adc
bound
outsb
insb
nop
dec
ljmp
test
or
cmp
adc
adc
push
push
pop
xchg
fistl
mov
add
pop
mov
decb
dec
out
sub
add
jle
ror
or
test
sub
int
test
mov
sahf
cli
inc
je
clc
push
movsb
push
xlat
aas
fsubp
jmp
ja
bswap
cmp
mov
sbb
repz
int3
shll
into
sbb
mov
lcall
sub
lods
imul
push
out
fwait
std
stos
sub
mov
push
nop
and
sbb
popa
mov
loopne
outsl
mov
inc
movsb
xor
xchg
popf
cmp
lcall
aad
inc
mov
mov
insl
call
shll
sbb
cmp
scas
popf
xor
nop
ljmp
in
mov
mov
or
aad
push
mov
lods
jmp
xchg
cmp
movsb
mov
iret
mov
pushf
adc
push
ret
mov
xchg
jae
xchg
xchg
adc
push
pop
xor
cmc
mov
adc
lahf
repnz
ljmp
push
adc
sahf
sbbb
das
lret
je
pop
jno
xchg
out
sahf
push
mov
fisubrl
fneni(8087
hlt
stc
test
push
sti
aaa
pop
push
cwtl
sbb
cmpsl
or
lds
mov
mov
jne
sbb
fsubl
loop
cmp
mov
mov
mov
cld
sarl
dec
pusha
sbb
stos
add
sub
mov
fidivs
push
add
rorl
shll
movsb
popa
dec
fdivrl
popa
jle
add
inc
popf
add
mov
and
repnz
jl
push
in
push
rolb
pop
aad
and
jecxz
jo
out
adc
aam
cs
into
div
shlb
mov
cmp
sbb
mov
sub
enter
pop
imul
lret
dec
movsb
je
xchg
add
out
adc
mov
sbb
scas
and
add
xor
out
nop
lds
call
inc
cwtl
jnp
arpl
xchg
loop
shll
and
or
mov
mov
mov
mov
and
and
push
sbb
lea
push
sub
push
lahf
jge
je
jp
cmp
pop
mov
inc
push
xchg
pop
push
push
clc
pop
or
or
cld
lods
stc
call
and
jecxz
enter
test
xchg
jb
cltd
pop
imul
push
mov
stos
cmp
fadds
xchg
lea
xchg
jns
push
test
ret
jp
je
jg,pt
shlb
pop
leave
pop
hlt
add
loopne
cmp
push
mov
pop
pop
aam
dec
cmp
push
testl
mov
mov
pop
pop
push
inc
out
dec
mov
test
add
sub
mov
leave
scas
xchg
xor
ljmp
dec
lea
test
scas
mov
jmp
push
mov
xor
fstpt
mov
and
faddl
push
mov
mov
in
jmp
outsl
call
clc
cmp
into
addr16
test
lret
shll
ret
ja
push
mov
repz
insb
adcl
out
int
adc
inc
imul
stos
ja
lahf
add
jecxz
xchg
hlt
repz
push
mov
notl
mov
test
jo
xchg
jge
daa
xchg
add
sub
xor
arpl
mov
add
stc
popa
adc
movsl
das
jge
rcrl
dec
sbb
dec
mov
test
repz
test
cltd
dec
jno
adc
loope
jl
gs
out
inc
inc
fisubs
sarb
in
or
int
mov
roll
xor
out
out
mov
test
nop
cmp
arpl
fisttps
sti
mov
ret
pop
popa
xchg
jae
subl
sub
adc
into
push
ss
leave
jns
mov
jne
lcall
jne
out
fdivl
push
fisubrl
mov
shll
push
pop
andb
aas
mov
iret
xchg
lock
push
rcrl
mov
fmuls
aad
lods
in
dec
and
cwtl
inc
pop
jg
int
mov
mov
push
repnz
cmpsb
in
das
sub
mov
inc
mov
ljmp
inc
inc
xchg
lods
sti
ret
aad
jno
pop
jne
mov
sub
inc
imul
push
and
repnz
mov
mov
rcl
xchg
test
orl
adc
inc
push
scas
cltd
test
repnz
push
jno
sbb
jno
cmp
fs
cmp
sbb
paddsw
insl
push
lds
aas
sbb
fisttpl
ffreep
ret
outsb
push
aam
and
jecxz
pop
sbb
test
out
jecxz
lret
jae
fiaddl
xchg
and
push
movb
leave
mov
fs
and
dec
repnz
icebp
mov
pushf
mov
push
imul
addr16
sti
push
push
mov
fcomp
je
lock
push
sbb
mov
adc
ror
int3
sbb
adc
js
ljmp
icebp
sbb
idiv
jns
enter
jge
mov
push
lock
outsb
ss
nop
jnp
or
daa
test
js
imul
hlt
ja
xchg
cmpsl
xchg
lret
add
cmp
pop
jne
rcrb
lds
push
jb
stc
cmp
pushf
pop
ja
adc
jmp
jp
jo
insl
and
pop
leave
mov
inc
and
inc
pop
ljmp
mov
mov
fnstcw
sub
ds
dec
pop
sbb
pop
arpl
dec
stos
les
adc
xchg
into
push
arpl
xchg
fistps
sarl
and
or
out
and
xchg
sbb
in
mov
loop
fdivrs
jle
adc
mov
mov
xchg
imul
ja
aam
fsubrl
xor
adc
sarl
pop
jl
inc
arpl
mov
lock
inc
push
xchg
loop
add
add
lret
inc
add
std
or
dec
jns
int3
std
out
in
ret
jge
sbb
ss
or
cmc
cmp
mov
mov
gs
add
push
jns
jecxz
fsub
add
test
loope
mov
scas
js
neg
aam
xchg
xchg
xchg
bound
int3
xchg
nop
adc
cmpsb
test
inc
std
or
adc
rcrb
test
pop
dec
cmpsb
hlt
mov
add
gs
or
pop
test
ss
outsl
push
addb
cmp
insl
jge
mov
dec
sub
dec
fs
cmp
adc
push
mov
xchg
mov
mov
add
jl
mov
xor
std
push
add
cs
shll
mov
inc
in
das
aam
int3
addl
aas
scas
loope
out
xor
insl
cmpsb
dec
addr16
adc
inc
inc
ret
jmp
cmpsb
testb
jmp
xchg
pushf
out
enter
movsb
push
or
imul
nop
mov
leave
out
int
xor
jno
ss
in
and
mov
outsb
aad
out
mov
xor
push
ret
add
push
scas
call
cmpsb
imul
sub
add
push
std
xchg
xchg
out
push
add
sbb
mov
mov
sbbl
or
std
push
or
jle
cmp
adc
jl
lea
cmp
and
int
mov
or
arpl
sub
and
sub
xlat
movsl
jmp
pop
imul
xchg
pop
pop
cmp
out
sbb
movsl
xchg
inc
jns
sti
and
add
dec
or
addl
or
add
loop
ja
mov
in
inc
popf
pusha
repz
outsl
pop
in
mov
bound
push
ror
dec
lahf
arpl
inc
sbb
test
dec
mull
dec
cmpsl
cltd
in
adc
push
jns
adc
bound
leave
cltd
fwait
out
mov
push
lods
cld
push
out
rorb
fs
pushl
adc
repnz
jo
mov
aas
out
mov
push
sar
pusha
adc
inc
sbb
cmp
call
cmp
push
pop
loope
push
fisubl
out
xchg
add
mov
xor
out
adc
xor
pop
jno
sub
bswap
xchg
std
mov
mov
movsb
add
mov
mov
nop
cmp
insb
cmc
repnz
xchg
fnstsw
pop
mov
fstpl
xor
lcall
mov
xchg
mov
mov
adc
sbb
out
jo
or
xchg
pushf
push
add
ss
mov
gs
cmp
push
add
rorl
jle
pop
lahf
ret
ds
add
mov
daa
mov
adc
pop
leave
and
loope
sub
add
loop
and
outsl
push
xor
dec
lds
jmp
cmp
in
mov
jne
push
push
repnz
dec
jb
decb
sbb
pop
sbbl
inc
mov
push
dec
movsb
push
out
sub
andb
inc
xchg
js
inc
call
jmp
mov
fdivrl
jl
xchg
or
push
xchg
jae
inc
aad
arpl
test
mov
dec
into
out
js
mov
mov
lret
sti
in
adc
stos
sub
jne
loope
out
jb
inc
aad
repnz
test
mov
pop
push
enter
jb
or
out
std
pushf
fwait
pop
jb
pop
cmp
xchg
and
popa
mov
ror
jl
sbb
int3
decl
ss
subb
orb
int3
xchg
pop
mov
les
jecxz
lds
je
jge
mov
dec
mov
mov
or
sbb
add
lods
mov
cmp
nop
lret
mov
lahf
lods
mov
out
jle
std
push
out
jp
ljmp
dec
and
test
lock
lock
mov
cmc
mov
jae
or
stos
rcll
mov
mov
adc
lock
dec
out
stos
repnz
gs
gs
jecxz
dec
push
int
jle
insb
sub
dec
loopne
out
push
and
cs
or
mov
addps
cmp
push
ret
cli
jae
jle
push
mov
jne
popf
dec
movsb
aam
cli
enter
cmp
dec
out
mov
loop
hlt
popf
lock
ja
leave
lcall
outsl
es
or
sbb
adc
mov
inc
push
call
jns
test
cmc
sub
int
lret
ret
or
stos
imulb
cs
iret
into
aam
mov
pushf
fistps
mov
and
pusha
push
mov
addr16
dec
mov
add
fucomi
call
xor
imul
mov
xchg
mov
arpl
mov
scas
jns
pop
hlt
add
lret
lods
adc
mov
jae
jb
sti
enter
cmpsl
jns
mov
ret
test
arpl
jns
sbb
loope
sbb
jno
mov
xchg
xchg
cmpsl
push
pop
divl
cmpsl
adc
lret
sti
push
test
mov
add
lret
push
insb
lds
cmpsl
ret
mov
std
test
arpl
inc
jp
in
add
out
xchg
das
fldt
cmpb
jnp
mov
imul
or
cmp
out
xchg
ja
inc
int3
sbb
pop
mov
adc
inc
cwtl
inc
push
rep
mov
jo
testb
cmp
mov
or
outsl
stos
hlt
jno
sbb
cmc
sbb
cmp
fistps
add
ucomiss
movsl
mov
mov
sbb
mov
jmp
jae
call
rclb
or
push
mov
movzbl
adc
lahf
cmp
add
lods
push
mov
push
inc
cld
ljmp
sub
inc
add
test
jnp
dec
repnz
ret
mov
and
popa
adc
imul
jg
shr
xchg
push
iret
mov
int3
pop
lcall
push
leave
cld
mov
mov
and
movsb
repz
or
int
mov
pop
icebp
or
mov
aas
jns
mov
nop
xchg
lret
loope
inc
pop
jns
mov
push
lock
test
icebp
insl
dec
mov
push
jb
cmp
jne
pop
sbb
cli
mov
cmp
sbb
outsb
int3
fisubrl
mov
lret
add
int3
fimull
and
push
fsubrs
sbbl
in
fdivrp
and
push
bound
xor
and
mov
nop
lcall
daa
and
push
adc
mov
mov
lods
data16
hlt
cmpsl
fimuls
es
cli
fimull
cli
movsl
insb
icebp
inc
pop
pop
arpl
inc
push
mov
aam
inc
leave
testl
lea
sar
push
popf
jle
cld
call
aad
sub
jb
aad
stos
subl
xor
cltd
adc
pop
add
add
ret
loope
cmp
cmp
cs
fimuls
fisttpl
je
xchg
and
nop
and
xchg
subl
cwtl
jmp
in
mov
fs
shlb
or
jp
mov
push
stc
mov
jecxz
push
lret
and
jl
imul
sbb
adc
mov
es
inc
xor
push
add
push
or
and
inc
iret
adc
inc
xor
jl
sub
cmp
movsb
and
mov
push
shll
pusha
lock
fstps
leave
mov
jp
mov
es
ds
cmp
pop
sahf
jns
int3
mov
push
sbb
sarb
repz
jb
mov
fcom
daa
jge
dec
jae
push
jle
push
mov
fucomip
or
xchg
into
sbb
adc
push
or
sbb
into
jo
push
repnz
or
add
ret
je
fwait
sbb
push
clc
aad
mov
pop
jg
cmp
sbbb
lahf
cmp
adc
or
jns
not
fstps
nop
in
leave
repnz
notl
add
int3
xchg
stos
stos
push
push
xchg
cmpsb
insb
arpl
movsl
jb
iret
mov
scas
fsubl
and
leave
push
mov
test
jecxz
jge
leave
xor
and
mov
xchg
iret
dec
push
out
imul
iret
mov
adc
pushf
xchg
outsl
in
ficomps
daa
push
or
jmp
sbb
cmp
sub
mov
jmp
xor
js
mov
fstpt
jo
in
mov
call
js
mov
popf
add
loop
lds
mov
add
xor
fildl
aas
push
sub
and
or
push
jns
insl
dec
push
push
mov
cld
movsb
iret
in
imul
push
jge
mov
push
movsl
fisubl
push
les
mov
pushfw
dec
or
mov
and
cwtl
movsl
test
xor
cltd
jmp
out
inc
pop
push
insl
lods
dec
pop
pop
push
mov
sub
cmp
sarl
fldenv
out
jae
adc
sub
roll
adc
addr16
adc
push
aas
xor
add
mov
or
xchg
push
xchg
jae
mov
jge
sbb
ljmp
pop
mov
lahf
or
or
orb
mov
or
and
ret
or
cmpsl
ds
cmp
jno
shl
mov
push
add
bound
jmp
inc
mov
lds
mov
xor
dec
loope
xchg
sub
jmp
fisubs
xor
in
stc
or
cmp
sub
insl
icebp
clc
inc
inc
jo
sub
cmpsb
adc
enter
sahf
mov
adc
mov
sbb
mov
adc
push
lret
or
ljmp
add
lret
cmp
repz
cltd
es
roll
fdivrl
mov
bnd
lods
fisttpll
sbb
xchg
sbb
adc
sbb
lea
or
xor
ss
pop
fs
dec
daa
push
movsb
jne
stc
pop
sub
jmp
stc
test
lock
sahf
add
pushf
popf
xchg
out
dec
test
add
and
out
cli
nop
jmp
iret
push
cmp
in
jb
sbb
jmp
add
lds
pop
orb
or
jmp
cltd
adcl
imul
leave
sbb
fdivp
jecxz
xchg
dec
rol
cs
repz
xchg
rcrb
or
push
jns
push
or
shlb
xor
mov
loop
scas
inc
cwtl
mov
jg
jmp
orb
repz
sbb
jg
sub
in
out
aam
jp
push
imul
sub
rcrb
jg
or
lods
loopne
je
push
cs
sub
out
cmp
fucomi
sarb
cltd
pop
arpl
pop
in
pop
dec
or
test
out
lods
repnz
sarb
push
adc
mov
jno
shlb
hlt
ret
mov
push
mov
rcrl
mov
rcl
leave
jo
rcrl
cmpsb
scas
inc
sbb
imul
mov
arpl
sbb
xor
sbb
cmc
inc
sub
vmovlhps
push
and
shrb
cmpsl
inc
in
mov
cwtl
mov
call
xor
xor
out
js
ds
aas
sbb
sub
xor
mov
jl
add
sti
add
ret
icebp
add
into
data16
into
popf
js
das
cmp
sbb
pop
jno
push
shlb
mov
hlt
mov
cmp
rcrb
mov
jo
mov
push
insb
sub
mov
fwait
or
sbb
mov
xor
arpl
lods
and
xorl
add
push
sbb
dec
int3
jbe
pushf
inc
loop
in
xchg
out
sub
insl
lock
cltd
icebp
sbb
outsl
push
pop
and
into
fisubl
repnz
aam
lods
pop
or
inc
clc
out
cli
ret
ja
dec
jle
fcmovnbe
sarw
inc
jecxz
call
and
out
inc
and
loop
movb
push
loop
dec
pop
pop
das
js
rcr
lods
call
mov
and
pop
fdivl
xchg
or
out
out
loop
push
or
xor
jae
jo
push
test
mov
in
jg
dec
mov
lods
insl
push
sbb
out
in
mov
jns
ljmp
mov
shlb
push
js
push
add
cmpsb
ljmp
paddsb
push
test
iret
into
adc
xor
lret
xlat
dec
jmp
jo
rorl
ret
fiaddl
insb
repnz
mov
mov
xchg
jnp
out
pop
jb
xchg
xor
subl
xchg
mov
cmp
adc
and
loopne
shlb
test
nop
cmc
xchg
je
push
pop
lret
cmp
movsl
add
rdmsr
hlt
icebp
sub
scas
fadds
scas
lahf
les
and
inc
js
aad
sub
pop
jne
outsl
sub
push
fwait
cmpsl
pushl
mov
into
mov
xchg
rcr
cmpsl
nop
push
adc
push
loopne
icebp
xor
les
shl
or
pop
jp
jb
cmpsb
lret
cld
pop
pop
out
cwtl
je
jns
cli
stos
notb
jno
sbbb
sahf
aam
cmpsl
jnp
movsb
add
or
shlb
push
loope
or
dec
mov
ja
cltd
pop
jecxz
das
mov
cs
shr
xchg
shll
into
xor
mov
jno
mov
leave
jge
mov
add
cmp
fcomps
je
popa
jbe
inc
pushl
in
daa
xchg
lret
adc
pop
mov
cmpsb
aam
enter
adc
aas
jo
int
test
sub
das
mov
lcall
mov
test
xor
xchg
and
jle
mov
gs
iret
lret
ljmp
sti
cmc
push
fisubs
aad
into
stc
mov
push
mov
pop
cmp
cmp
sub
in
xchg
mov
loope
mov
xlat
pop
mov
shll
sahf
mov
jno
cmpsb
pop
rep
orl
cltd
jbe
cmpsl
ret
push
mov
jecxz
stc
aaa
mov
test
jmp
push
inc
sahf
outsl
movsl
out
loop
fsqrt
lods
xchg
xor
pop
and
gs
pop
scas
shll
testb
fwait
dec
loope
xor
stos
mov
adc
mov
lods
scas
pop
pop
dec
adc
xor
dec
call
inc
test
repz
mov
jb
jo
loop
gs
mov
inc
adc
shll
and
jne
or
sbb
or
jo
bound
adc
mov
ss
ret
jecxz
outsb
adc
out
push
jnp
and
adc
jb
pop
cltd
hlt
pop
movl
lret
jnp,pt
pop
xor
pop
mov
pushf
lahf
icebp
rolb
xor
fisubrl
inc
add
cs
push
and
jmp
lods
popf
or
mov
in
cmp
cmpsb
inc
movsl
je
imul
lea
dec
stos
sub
pop
jne,pn
fcompl
pop
outsl
jg
xchg
sbb
mov
cs
aas
fstpt
loop
clc
fistpll
push
shrb
pop
addr16
inc
push
mov
or
mov
mov
int
rclb
mov
sub
ffreep
das
dec
adc
ss
sub
or
pusha
and
fcoms
push
lock
mov
push
mov
sbb
fisubs
orl
inc
pop
mov
adc
push
and
mul
insl
xchg
sub
sbb
rcl
push
subl
pop
cmpsl
test
dec
xor
aaa
pop
cmp
xchg
loopne
sub
lods
add
pop
jne
mull
mov
and
data16
out
mov
xchg
ss
test
mov
orb
test
fxch
lret
and
or
orb
data16
adc
xor
fadds
pop
dec
das
jae
push
and
ror
fadds
addb
data16
movsl
daa
dec
test
xchg
mov
and
xor
hlt
xchg
sub
lods
push
sub
rorb
jb
xchg
leave
out
sbb
push
push
stc
insb
and
cwtl
sub
out
test
fs
xlat
sbbl
les
shlb
cmp
ret
push
test
cmp
ja
xor
loopne
out
mov
or
dec
shr
and
add
lods
mov
stos
xor
adc
loop
sbbb
rol
inc
jp
sub
stos
jo
mov
push
pushf
orl
push
xor
scas
test
ljmp
fwait
movsb
das
stos
aad
dec
pop
mov
sbb
movsb
pop
sbb
xchg
in
lahf
or
popf
adc
dec
dec
pushf
andb
xchg
mov
mov
sub
ret
push
aam
mov
lds
stc
mov
cmpsb
cmp
cmpsb
shlb
mov
jno
test
loop
cmpsl
xor
xchg
outsl
aaa
push
arpl
pop
fistps
enter
ror
into
mov
nop
cli
jmp
fdivrs
insb
push
sbb
mov
mov
pop
in
test
sub
or
ja
lock
pop
stos
shll
or
jecxz
xchg
pop
enter
cmp
out
cmp
dec
push
int
outsl
sub
or
jecxz
or
pop
mov
nop
jne
shrl
xchg
xchg
les
shlb
sti
outsl
xchg
xchg
mov
sub
icebp
push
xor
ljmp
movsb
xor
xchg
add
fwait
fs
test
sarl
mov
inc
dec
jp
inc
bound
mov
dec
mov
jns
loop
mov
mov
add
push
inc
ss
ror
mov
pop
xchg
insl
inc
mov
jnp
mov
mov
xchg
sub
sbb
xor
lock
stc
call
mov
ret
sbb
jae
leave
inc
xor
jg
push
sub
das
jne
lock
push
movsl
or
popf
inc
lahf
jg
xchg
pop
sub
adc
imul
shr
xchg
adc
int3
pop
out
add
xchg
cmp
pusha
insl
xor
insb
xchg
or
roll
xchg
or
out
mov
mov
adc
gs
sti
imul
pop
dec
push
cmpsl
sbb
fmuls
add
daa
inc
xchg
add
sarb
push
outsl
cwtl
les
test
lea
jb
push
stc
and
mov
stc
pop
adc
fbstp
mov
cmpsb
mov
push
imul
mov
fwait
das
sbb
or
jns
and
pop
cltd
sub
adc
testl
in
mov
or
arpl
push
out
dec
test
rorl
jnp
jae
movsb
dec
cld
pushf
mov
int
jl
dec
jle
loope
lea
mov
jmp
cmp
sahf
push
sar
inc
negb
mov
xchg
dec
mov
addl
inc
mov
sbb
jae
int3
stos
aam
mov
push
mov
daa
push
xchg
shll
or
inc
xlat
lock
out
xchg
rcr
stos
gs
push
push
movl
push
dec
xchg
popf
add
scas
sbb
xor
push
xchg
pop
jne
push
mov
and
fiaddl
jnp
jp
mov
call
out
jb
in
ret
mov
jo
inc
mov
fistpl
enter
push
idiv
xchg
nop
dec
fldl
fldenv
sarl
jecxz
rcll
shll
add
ds
jmp
addr16
lcall
jae
sub
cmpsl
dec
xchg
inc
mov
test
xor
push
jle
adc
pop
mov
jno
and
mov
inc
and
sub
std
mov
jge
jb
in
inc
dec
sub
xchg
insb
adc
xchg
cltd
jmp
imul
call
add
cltd
push
mov
fs
jmp
mov
push
stos
nop
jg
scas
fs
repnz
hlt
mul
mov
mov
mov
cmc
jecxz
mov
push
push
subl
lods
divl
and
stc
cmc
sti
orl
insl
and
mov
lock
or
imul
dec
cmp
ljmp
mov
inc
data16
adc
cmp
pop
dec
xchg
sub
insb
adcl
mov
aam
je
mov
cmp
fcomp
pop
ja
cmp
incb
popa
jb
divl
jecxz
aam
hlt
fdivs
out
sbbb
inc
loope
popw
adc
test
sub
push
movsl
dec
cs
jge
inc
push
mov
push
push
testb
sbb
aad
mov
mov
fimuls
ja
inc
imul
jnp
fistps
inc
add
inc
int3
and
frstor
pop
cld
mov
out
mov
ljmp
xchg
dec
add
scas
adc
daa
cmc
mov
outsb
mov
or
xchg
rolb
imul
jbe
scas
push
xchg
lcall
sub
mov
jo
sbb
pop
lods
shrb
les
push
mov
mov
daa
shrl
lds
dec
mov
push
mov
sub
xor
sbb
dec
jno,pn
adc
adc
inc
rcrl
mov
dec
shll
outsb
xor
push
dec
sub
mov
jbe
addl
stc
or
dec
stos
int3
add
pop
aam
xchg
xchg
or
es
jbe
mov
pop
sub
adc
in
mov
mov
and
and
sti
push
vmovaps
loopne
inc
xor
xchg
push
jae
sarl
dec
bound
call
adc
jmp
scas
and
jmp
int3
pop
aad
enter
out
xchg
xchg
sub
mov
into
cltd
dec
push
inc
shr
xor
mov
or
pop
lea
sahf
int
das
leave
push
arpl
mov
stos
lea
xchg
fwait
or
call
sub
out
rcl
insl
imul
jo
ret
ljmp
xor
xchg
cmpsb
std
hlt
xor
add
insb
pop
sub
sub
loop
aaa
dec
enter
inc
sbb
pop
pusha
xchg
outsb
and
ss
lahf
push
mov
inc
adc
pop
jmp
xchg
xor
push
xchg
je
mov
addr16
mov
pusha
mov
push
push
or
lret
push
imul
push
out
cmpsl
arpl
mov
out
jmp
es
jae
ret
xchg
iret
gs
jns
xor
dec
or
dec
pusha
mov
repz
daa
cmpsl
sti
jae
push
and
fisubrl
scas
icebp
fcoml
pop
mov
daa
ja
ss
mov
push
xchg
push
mov
lea
cmp
lret
or
negl
cmc
je
sbb
imul
arpl
js
jmp
push
lret
pop
call
mov
cmp
add
ds
roll
inc
addr16
mov
mov
icebp
in
pop
jb
bnd
out
push
fs
test
mov
clc
call
ljmp
jnp
int
add
loope
enter
mov
jae
in
and
pop
and
test
or
aad
jg
push
pop
pop
test
loopne
insb
sbb
stos
pop
arpl
lds
lods
addr16
sbb
fisubs
outsb
movl
aam
add
sbb
lret
jnp
scas
mov
imul
stos
mov
sarb
mov
aas
sub
xor
or
jle
inc
dec
in
dec
mov
mov
xlat
cmpb
adc
dec
ljmp
push
add
call
aas
dec
mov
shr
adc
and
enter
jg
shlb
leave
arpl
pop
or
inc
test
out
pop
adc
jbe
cmp
pop
mov
mov
mov
aad
mov
pavgb
sbb
movsl
push
push
dec
xor
or
jmp
add
shl
dec
xor
nop
rclb
cmp
arpl
add
inc
push
nop
push
rolb
test
dec
jp
pusha
or
xchg
out
add
add
jge
xor
test
shrb
push
stc
add
add
jbe
pop
sbb
cli
mov
push
push
movsb
fcomps
pop
out
adc
into
cmp
fstl
std
dec
or
mov
and
mov
and
cmc
add
enter
xlat
sti
out
and
push
adc
je
mov
jns
push
movb
sub
lds
repnz
pop
loope
or
sbb
cli
xchg
mov
out
mov
mov
pop
into
push
sub
and
outsl
scas
ljmp
nop
and
xchg
fwait
mov
pop
stc
and
frstor
mov
aad
pop
sub
mov
imul
mov
mov
jg
mov
fcomps
mov
xor
adc
pop
sbb
or
es
cmp
aad
stos
add
or
clc
cmp
push
mov
add
scas
adc
sbb
in
adc
cmp
jp
inc
inc
sbb
fst
in
jns
mov
jbe
pop
pop
pop
push
jae
in
pop
repnz
push
stos
cmp
js
jg
shr
lods
ds
icebp
jecxz
cmp
movsl
xor
dec
or
jp
inc
flds
arpl
xchg
push
mov
ret
sbb
outsb
jmp
cmp
mov
out
jb
cmpsl
and
in
jg
ljmp
mov
das
push
nop
sub
pop
repz
scas
cmp
sbb
int
push
mov
sbb
scas
test
hlt
popa
add
imul
pop
mov
ss
insb
dec
fsubs
addr16
pop
lahf
addb
sub
arpl
sbb
cmp
cmp
cwtl
stos
dec
sub
or
pushf
popf
int
jle
sub
ds
jns
push
dec
repz
inc
cld
pop
mov
push
dec
inc
test
movd
loope
push
pop
lret
insb
dec
add
dec
sbb
xchg
pop
mov
dec
pop
rolb
mov
cs
bound
push
pop
cmp
iret
pop
mov
fisubs
inc
sti
in
pop
cmpsb
jp
sbb
jno
repz
fcmovu
outsl
jns
gs
hlt
push
pop
add
or
mov
inc
fisubrs
add
fwait
inc
jle
pop
jnp
add
cmp
das
mov
inc
rclb
jne
push
lcall
imulb
adc
mov
pop
jne
cld
aas
sub
mov
pop
das
mov
add
and
mov
or
mov
push
leave
jns
dec
jae
and
jnp
test
mov
pushf
popa
cltd
stos
mov
hlt
push
std
dec
adc
fistpll
loop
mov
cli
xlat
je
or
push
jecxz
out
push
cmp
xchg
or
test
cld
fxch
test
sti
dec
inc
xchg
sbb
jecxz
lods
mov
ss
mov
movsb
outsl
jle
fisttpll
scas
mov
in
pop
jl
add
pop
inc
push
mov
int3
pop
hlt
dec
push
imul
push
cli
lret
push
jle
ja
inc
dec
sub
out
loope
xchg
mov
jp
inc
out
add
push
xchg
bound
jo
loop
push
lds
push
mov
ret
sbb
nop
dec
jle
and
adc
test
pop
xlat
arpl
in
lret
rep
dec
mov
mov
pop
xor
pushf
js
std
cmp
cmp
arpl
mov
sub
pop
jo
int3
jb
xor
lret
movb
div
shlb
sbb
loopne
aad
cltd
rclb
iret
push
test
add
fsts
hlt
sbb
jl
ficompl
je
stc
and
mov
iret
push
mov
int
xor
or
jg
jp
mov
and
jmp
das
xor
stc
loop
sbb
cmp
imul
sub
xchg
xlat
xor
xchg
adc
nop
push
jne
inc
bound
mov
dec
mov
pop
lds
push
pop
mov
jl
sub
xchg
push
scas
push
incl
movsl
out
add
ret
test
test
mov
lods
popf
enter
mov
mov
dec
jl
mov
xchg
mov
xlat
mov
or
ret
pop
xor
shll
mov
je
inc
clc
dec
inc
lods
jns
mov
sbb
pop
and
aam
xchg
mov
je
test
inc
aas
cmpsb
cmp
jae
shl
pop
push
xchg
xor
cmpsl
cmc
pushl
repnz
xor
hlt
pop
adc
push
insb
jo
push
sub
add
imul
add
rol
xchg
ss
setae
xorl
cmpl
sbb
in
xchg
scas
mov
popl
mov
push
jbe
jb
stc
icebp
sub
adc
or
add
lds
dec
in
sub
mov
sub
rcll
aam
cltd
aas
xor
dec
int3
mov
mov
cmpsb
xchg
or
sub
in
xlat
or
mov
adc
aaa
jecxz
add
push
stos
dec
aas
into
add
pop
push
repz
es
push
cmp
in
cmpsb
xor
jns
xchg
dec
movsb
mov
loope
push
mov
insb
push
or
mov
sub
out
inc
outsb
xor
cmp
xchg
daa
inc
jp
dec
out
mov
je
xchg
aam
and
das
pop
push
sbb
mov
fcomip
lret
hlt
test
pushf
push
in
push
addr16
dec
sub
mov
sti
shll
pop
fdivrl
mov
inc
out
in
std
inc
and
test
dec
leave
bound
adc
popf
jmp
cmp
cmp
stc
mov
push
out
dec
jbe
mov
jbe
add
in
test
pop
outsb
pop
mov
mov
cmp
xorl
push
add
andl
push
call
adc
ja
mov
mov
shll
xorl
mov
cmc
xor
aam
addb
push
push
out
dec
lods
adc
xor
mov
xor
rol
sbb
xchg
dec
mov
imul
enter
loopne
xchg
dec
icebp
add
repz
cs
rorl
loopne
jno
and
xchg
xor
jl
cld
jle
push
jecxz
fwait
jbe
cwtl
aas
leave
in
sbb
pop
add
or
test
pop
dec
push
mov
sbb
js
sbb
xchg
mov
mov
dec
sbbb
jb
loope
inc
sub
in
cmp
mov
mov
popa
mov
pusha
or
shlb
cmpsl
and
cld
sub
lahf
gs
iret
icebp
das
clc
insl
dec
mov
adc
push
popf
mov
in
mov
pusha
not
push
adc
push
xchg
cltd
push
and
scas
lods
leave
or
sbb
sub
lret
mov
lds
loope
repnz
shlb
daa
push
out
dec
pop
cwtl
push
push
push
pop
xor
mov
jmp
jne
dec
jge
sub
push
ficompl
lret
repnz
mov
dec
outsl
popf
sub
xchg
stos
pop
sub
push
mov
mov
loop
push
fwait
adc
inc
mov
sbbb
pop
sub
fistpll
lcall
pop
mov
cwtl
sahf
lret
inc
or
mov
xchg
dec
mov
push
test
xor
pop
in
fdivrp
inc
movsl
inc
cltd
hlt
push
inc
pop
cmp
test
inc
push
sarl
or
nop
js
push
in
into
push
repnz
push
and
push
out
sub
push
les
xor
pop
xchg
int
rol
sbb
dec
or
jg
add
jecxz
fcoml
aad
test
arpl
and
xor
mov
push
mov
jne
mov
imul
xchg
pop
and
cmp
pop
inc
mov
pushf
pop
push
addr16
mov
nop
dec
pop
fsubl
int3
or
shl
orb
rolb
mov
scas
mov
xchg
js
mov
jg
mov
movsl
arpl
inc
cltd
mov
loop
cmp
daa
pop
lcall
cmp
aad
mov
pop
jg
clc
push
push
and
pushf
cmp
adc
adc
cmp
sub
icebp
ds
lcall
mov
arpl
sbbb
jecxz
pop
xchg
clc
pop
iret
fimuls
mov
add
sbb
mov
inc
jnp
daa
sahf
or
int3
xchg
inc
ret
xchg
mov
and
jnp
mov
add
fnsave
cmp
hlt
arpl
add
fildll
aas
daa
sti
jge
or
mov
pop
insb
cmp
movsl
insl
push
jo
cmpsb
push
push
sub
lods
int
scas
in
mov
add
sub
lock
hlt
pop
ja
stos
call
push
sub
pop
scas
hlt
call
cld
cmp
idivl
orb
dec
and
add
js
cs
inc
in
outsl
sub
push
movsl
nop
lea
and
setl
arpl
and
cmpps
pop
mov
ja
pushf
jno
add
shrl
dec
and
loope
jae
adc
mov
push
mov
inc
jg
jle
es
ds
jno
cld
push
sub
js
jp
hlt
sbb
les
cmp
jno
adc
jecxz
lods
mov
sbb
pop
pop
pop
xor
jns
fbld
test
rcll
shl
dec
push
lcall
stos
pop
leave
xchg
lods
mov
das
lods
imul
and
push
inc
mov
scas
jo
mov
test
out
mov
fcoms
out
inc
lcall
add
inc
xchg
add
lock
out
ja
fimuls
xchg
mov
insb
jle
ret
fsubrl
in
jne
mov
shlb
or
and
xchg
ret
dec
add
sub
adc
push
addr16
out
daa
sub
rorb
sub
and
jmp
in
ds
loope
inc
shlb
dec
test
push
iret
in
fists
imul
and
mov
popf
or
stos
inc
sub
imul
mov
daa
sub
ret
mov
pop
push
mov
jnp
test
jp
movsl
push
inc
xor
std
push
dec
repnz
jo
loope
rclb
or
loope
cmpsl
inc
jge
or
mov
pop
add
pop
sub
mov
mov
in
cmp
mulb
jge
dec
cmpb
sbb
adc
mov
icebp
and
pushf
dec
test
mov
lock
fs
jns
mov
cli
loopne
outsb
sub
bound
sub
adc
sub
dec
pop
dec
cmc
scas
ret
jl
inc
inc
sub
push
jle
mov
pop
dec
inc
mov
mov
cmp
cs
mov
xor
int
sbb
mov
pop
mov
lods
jecxz
sub
dec
fstpl
imul
jp
fldenv
mov
cli
add
arpl
cmc
dec
ds
push
movmskps
mov
stos
scas
adc
inc
pop
sbb
cmpsb
repnz
xor
data16
bsf
das
sub
outsb
fidivl
push
or
stc
stc
gs
inc
js
mov
hlt
pushf
addr16
loop
rorb
lock
pusha
xor
jb
xor
gs
ror
inc
aas
mov
push
jno
xchg
xor
mov
lret
jo
outsl
jle
xor
push
out
push
jae
adc
incb
loopne
sub
or
mov
mov
and
or
rcl
pop
pop
loopne
popa
dec
pop
aas
or
xor
into
mov
sahf
mov
push
outsl
roll
mov
push
int
pusha
or
inc
call
mov
mov
cmc
cwtl
fstl
cld
sub
fisubs
pop
rcl
xchg
xchg
sbb
adc
mov
loopne
xchg
ja
inc
and
cmp
push
dec
in
rolb
and
xlat
cmp
sub
mov
and
lods
jae
test
jbe
mov
mov
xor
inc
rorl
sub
jns
mov
fsub
adc
sahf
shrb
jne
pop
inc
xchg
fucomp
xor
enter
xchg
sub
int
add
and
test
jg
out
dec
outsb
jbe
testb
mov
sbb
lahf
add
push
add
nop
movsl
or
inc
mov
ds
inc
fiaddl
fists
inc
idivb
shl
cmp
cmp
sti
lea
mov
adc
and
lods
mov
add
jbe
and
inc
flds
jmp
ss
dec
or
outsl
fldenv
dec
das
movsl
fwait
js
test
leave
or
lahf
jecxz
jl
fiadds
cld
popf
cwtl
dec
popa
xor
test
jns
dec
push
ljmp
ficoms
inc
xchg
inc
out
add
jb
test
dec
cmp
mov
aas
push
mov
rolb
mov
push
push
sbb
cwtl
jbe
stc
in
xor
bound
dec
xchg
int3
add
cmp
cltd
pop
int3
std
jecxz
aaa
xchg
mov
xchg
or
xor
add
jmp
jmp
xchg
enter
into
nop
repz
xchg
sub
scas
or
add
mov
cmp
xchg
cmpsl
xor
sbb
cmp
or
dec
inc
xchg
dec
lock
std
pop
icebp
out
pop
push
mov
fldl
rol
and
mov
lds
push
push
and
ret
jle
mov
lret
stc
add
js
push
divl
aam
hlt
xchg
shll
push
repz
arpl
insb
pop
mov
or
or
cltd
and
les
push
xchg
clc
fucom
jb
lret
loope
mov
xor
sub
pop
mov
sahf
idiv
mov
ja
pop
jbe
mov
push
dec
xchg
push
fstpl
add
inc
mov
mov
ret
loop
pop
leave
out
pop
adc
shr
cs
pop
cmp
je,pt
out
xchg
mov
dec
sbb
leave
jno
xchg
xchg
fstpt
push
lahf
pop
xor
test
push
mov
sbbl
lcall
cmp
mov
cmp
mov
std
add
xor
sbb
mov
pop
inc
lods
mov
hlt
fimull
cli
or
push
xchg
stc
scas
loopne
into
pop
add
rorb
das
test
sbb
inc
sti
jmp
je
icebp
insl
and
imul
shlb
inc
hlt
in
ja
push
and
and
mov
xchg
repz
call
cltd
rcl
jnp
inc
and
outsb
or
out
rolb
mov
cmp
sahf
out
lret
shl
dec
out
daa
xchg
in
sub
mov
adc
gs
aas
jecxz
inc
mov
stc
aad
jnp
fisubs
jne
and
xchg
sbb
fisubrs
dec
mov
mov
and
fimull
pushf
sub
xchg
pop
adc
cmc
mov
xchg
aas
pop
pop
lods
inc
notl
je
jge
pop
jo
sbb
mov
imul
xchg
nop
sub
shl
push
and
call
add
out
out
mov
subl
dec
adc
loope
jbe
or
ret
aad
cli
sbb
fwait
pop
imul
in
das
mov
ds
rcll
leave
rorb
lcall
and
cmc
je
sbb
fs
pop
cmp
add
and
add
xor
lcall
or
lea
test
adc
iret
dec
inc
jo
call
fidivrl
jne
pop
loope
and
test
mov
daa
popa
mov
sbb
je
mov
sar
outsl
lret
mov
add
push
stos
std
push
sub
push
jmp
sbb
sub
movb
jecxz
subb
repnz
out
in
mov
mov
lahf
jle
mov
shll
cmp
jbe
hlt
aas
fisubl
mov
mov
add
or
and
aas
xor
or
or
int3
mov
ljmp
dec
jo
fidivl
push
sarb
xchg
repnz
mov
xchg
lock
and
jge
jge
xchg
sbb
ret
repnz
jge
and
inc
sahf
inc
in
and
and
repz
aas
sbbl
adc
imul
enter
add
out
mov
add
jae
jae
sar
mov
lret
lock
scas
fcmovbe
or
dec
jp
repnz
adc
mov
or
push
icebp
cmp
in
mov
push
xchg
in
fs
sub
sbb
push
sub
repz
sbb
mov
jp
add
cmp
sub
out
push
jbe
mov
incb
gs
cmp
iret
jmp
inc
cmp
scas
les
call
dec
mov
cmc
mov
stos
push
mov
fistps
cltd
repz
stos
mov
or
stos
stc
lods
sahf
scas
and
xchg
pcmpeqw
cmp
lods
bound
adc
shlb
movsl
mov
push
mov
inc
jmp
adc
adc
nop
add
aas
outsb
lea
fldenv
push
mov
stos
into
hlt
cmp
lret
mov
or
sbb
imul
xlat
mov
jb
call
add
jne
aas
insb
enter
pop
cmp
adc
sbb
test
loopne
and
xchg
or
insb
cmp
inc
push
dec
dec
int
cmc
es
xchg
mov
push
pop
xorb
fmuls
mov
xchg
xor
fdivs
cmp
push
cmpb
pop
xor
mov
sbb
and
push
insb
xorl
mov
jb
and
sub
in
mov
das
test
repz
iret
xchg
mov
cmp
jge
daa
das
pop
call
xchg
pop
hlt
ret
scas
xchg
stc
test
push
ljmp
xor
movl
call
cmpsl
cmp
in
jl
aas
mov
test
popf
jne
inc
les
mov
inc
arpl
jecxz
fists
repz
mov
sahf
cmp
push
dec
icebp
les
cld
and
add
call
jo
fistl
lcall
jno
and
or
pop
xchg
pop
push
testl
sub
bound
shrl
cmc
dec
popa
push
xchg
pop
out
sbb
xchg
sbb
and
jge
xor
mov
cmpsb
lods
cwtl
jb
xchg
lret
jg
mov
xor
mov
pop
movsb
push
pop
js
jmp
outsl
cmpsl
enter
arpl
jno
xchg
enter
addr16
aam
imul
cmp
je
push
mov
inc
xchg
xor
pop
add
push
enter
mov
xor
jae
mov
js
addr16
hlt
fnsave
arpl
push
scas
or
or
ds
fdivrl
or
or
mov
adc
pop
adc
xor
push
cmp
div
adcb
adc
mov
adc
nop
xor
xchg
xor
push
xlat
je
punpcklwd
cmp
aad
mov
test
adc
lret
pop
add
scas
rol
out
jl
xchg
push
xor
push
out
mov
out
or
fmull
cwtl
jne
dec
sbb
push
dec
mov
cmp
push
pop
jns
fmull
push
pop
pop
orl
shlb
cmp
mov
jnp
dec
dec
jae
and
jle
mov
outsb
repz
in
cmp
add
aam
jbe
and
mov
in
es
cli
inc
inc
ret
sbb
gs
jae
xor
xchg
or
adc
jno
sti
flds
mov
dec
negl
clc
pop
cmp
mov
loop
dec
scas
mov
lret
push
sti
loop
mov
out
lds
sti
or
jg
mov
push
aas
pop
lock
inc
ja
fucomp
lcall
pop
rcl
inc
lock
dec
fnstenv
pop
in
pushf
mov
lock
push
insb
lock
pop
add
jg
les
jae
int
xchg
cmp
into
jo
mov
adc
negl
iret
add
mov
lods
push
push
adc
jns
lods
scas
loopne
mov
aam
cmp
cmpsl
hlt
in
inc
xchg
pop
pop
lods
sbb
xchg
cmc
in
fs
sbb
inc
sbb
into
mov
fldenv
fwait
sbb
fs
shll
cmp
popf
mov
sarl
aam
leave
in
mov
xchg
nop
xor
or
mov
sbb
lahf
push
mov
mov
inc
aas
and
das
pop
push
mov
fisubl
aad
fwait
or
and
inc
dec
movsl
lret
mov
push
lods
adc
jp
enter
inc
cmp
xchg
xor
sub
inc
dec
popf
repz
xor
add
gs
pop
lahf
outsb
sbb
or
out
movsb
nop
adc
xlat
cmpsb
jg
sbb
xchg
inc
push
xchg
jno
je
fs
dec
jno
xchg
cwtl
pusha
jmp
pop
popl
push
sbb
sub
shll
inc
sub
mov
fdivrl
pop
xor
dec
sahf
lds
xorl
mov
inc
sbb
lret
mov
popf
push
mov
or
push
mov
or
push
imul
icebp
imul
mov
out
jne
ret
fs
mov
push
cmpsl
inc
addr16
andb
leave
or
mov
loope
pop
bound
addr16
xchg
arpl
xchg
mov
cltd
test
mov
pop
sbb
aaa
test
iret
aad
jae
mov
jnp
jg
push
inc
mov
add
fcomps
lret
imul
and
ret
mov
bound
inc
les
out
lods
jp
adc
jns
lods
mulb
into
fildl
inc
inc
shl
jge
loope
mov
fadds
or
stc
ret
cmp
cmpsl
call
push
xchg
pop
sarl
popa
mov
aad
cmp
xchg
movl
sub
std
mov
jecxz
jno
and
push
sbb
fldcw
leave
adc
les
addr16
push
js
sub
in
loope
adc
data16
add
xchg
stc
jbe
xlat
inc
jecxz
daa
gs
ror
cmpsl
imul
jge
sub
fldl
inc
imul
icebp
sub
and
shlb
inc
and
inc
pop
icebp
xor
jmp
adc
cltd
insb
mov
add
lods
inc
jmp
xchg
mov
pop
dec
and
inc
das
xchg
fadds
lret
mov
loopne
adc
mov
push
mov
jae
inc
lea
pop
jnp
test
orl
outsb
lock
mov
aam
xor
xor
test
mov
inc
cs
cmc
xor
sbb
lds
dec
insl
sti
aam
pop
add
fadds
dec
test
inc
push
mov
shlb
cmc
mov
add
xchg
adc
pop
test
xor
pop
push
div
push
rcrb
mov
insl
loop
std
les
and
jmp
leave
fwait
and
inc
push
push
pushf
test
cwtl
push
cmp
xchg
cmpsl
rol
mov
jno
mov
popa
sbb
xchg
xor
shll
fistl
xor
push
sub
int
das
lret
mov
pop
xchg
push
pop
cmp
addr16
mull
out
clc
sub
cmpsb
sahf
mov
inc
push
test
mov
leave
xchg
rcr
push
and
cwtl
mov
or
pop
mov
jbe
dec
mov
pushf
enter
arpl
or
sbb
enter
jnp
xorb
cmpsl
test
cmp
adc
pop
imul
xorb
shr
cmp
movl
inc
out
scas
push
cmc
add
mov
sub
push
cmp
fucom
mov
cld
push
inc
cmpsl
mov
sbb
jecxz
push
jne
pop
and
shlb
xchg
pop
int
xor
orb
adc
mov
adc
and
mov
add
jmp
mov
xor
push
inc
cmp
loop
sti
stc
jl
in
mov
in
and
nop
arpl
popf
lret
jp
test
out
adc
ftst
jne
sub
jb
fadds
scas
inc
push
ss
pop
jmp
jge
test
sub
add
push
pushf
mov
sbb
es
fdivrs
sub
mov
jb
insb
mov
popf
jmp
add
lods
pop
push
add
test
pop
roll
es
push
pushf
mov
jnp
ja
adcb
push
inc
psubsw
adc
movnti
or
mov
add
lea
faddl
push
xor
stos
cld
push
fnstenv
fistpll
enter
xor
cmpsl
outsb
push
insl
or
xchg
mov
ja
mov
out
cli
xchg
push
or
mov
bound
and
mov
push
and
dec
hlt
sti
lret
mov
ss
adc
hlt
bound
je
lds
dec
gs
movd
xor
xor
lds
cmp
add
loop
sbb
or
lgs
adcl
test
push
push
mov
push
iret
repz
das
aaa
sti
adc
jae
add
inc
xchg
add
sbb
add
adc
popa
lds
std
dec
sbb
adc
xchg
dec
dec
pushf
call
or
xchg
mov
mov
inc
dec
cmp
test
adc
xchg
out
push
xchg
int3
mov
xchg
mov
clc
lret
sbb
adc
xor
sub
sub
shl
mov
mov
jbe
mov
test
add
adc
lcall
cs
sub
loop
aam
xor
aas
jle
fxch
nop
push
ljmp
fwait
jne
or
sti
rcr
adc
cmpsb
hlt
stos
sub
lea
mov
mov
and
push
sti
mov
xchg
sub
mov
push
stc
mov
fwait
movsb
sbb
pop
cmpb
inc
movsb
mov
push
jp
push
and
push
loopne
cmpb
pop
add
dec
cmpsb
rcrb
xor
ret
pop
imul
pop
stc
add
cmp
bound
cmp
shrb
int
xor
dec
sbb
adc
cli
mov
repnz
sub
jo
mov
rcrb
insb
psllq
push
sub
xor
popf
rorl
stos
dec
pop
cs
pop
mov
pop
mov
push
mov
xlat
mov
data16
addb
repnz
fnsave
mov
or
fsts
in
cmp
or
xchg
cmp
push
cli
mov
dec
xor
pushf
aad
cmc
test
into
mov
mov
enter
push
sbb
mov
sbb
add
or
mov
enter
cmp
jne
out
out
mov
pop
lret
loope
and
in
cli
and
scas
into
and
xlat
les
scas
pop
enter
fsubrl
mov
pop
ss
sub
xorl
hlt
psrad
insb
push
loop
cmp
mov
adc
stos
pop
clc
push
push
cmpsb
mov
movsb
fcoms
stos
sbb
adc
sahf
insl
inc
lods
push
mov
and
adc
cmpsb
cmpsb
fwait
and
add
jge
lret
sbb
dec
pop
icebp
es
mov
push
call
out
xchg
pop
lret
xchg
sbbb
cmpsl
scas
aaa
dec
jnp
adc
jne
inc
sbbl
pop
jbe
or
jl
jbe
pusha
dec
cmpsb
leave
cmc
or
mov
popf
xlat
sub
cmp
pusha
out
xchg
idivl
jl
dec
adc
ret
movsb
dec
inc
lret
xchg
cmpb
cwtl
popa
mov
stos
into
mov
cmp
dec
xchg
frstpm(287
fsubl
rolb
test
push
mov
mov
jge
push
push
push
and
inc
sbb
mov
mov
ds
cmp
jle
es
cmp
xlat
lods
scas
sbb
ror
popf
pushl
scas
xor
arpl
ret
psrld
mov
xor
lds
push
xor
inc
cmp
movsl
jbe
mov
rcll
jmp
cli
ss
rcrb
iret
mov
dec
adc
xor
dec
in
lahf
and
add
or
jmp
loop
fwait
inc
xchg
pushf
int3
jo
push
mov
cmc
lret
or
dec
mov
pop
fdivs
cmp
sbb
iret
mov
shlb
sbb
mov
stc
ret
or
fnstenv
adc
in
sub
loop
jns
sbb
imul
cmp
lds
test
shlb
popa
popf
ret
je
ss
mov
ja
adc
out
sub
push
cli
push
jnp
fs
and
xlat
lret
add
lcall
std
addr16
pop
lods
bnd
rolb
cmp
jne
inc
dec
in
mov
mov
pop
iret
outsb
loop
rclb
sbb
inc
fistpll
js
stc
loopne
jb
decl
cld
cltd
dec
loop
jl
push
jno
aad
push
add
fldt
mov
fdivrl
rol
repnz
jmp
lds
mov
push
test
out
cmp
dec
mov
mov
rorl
jp
pop
xchg
testl
or
dec
test
bound
adc
dec
imulb
or
test
rclb
cs
sub
les
icebp
push
clc
jbe
loope
cmp
pop
jbe
insb
clc
lcall
in
lcall
repnz
cli
dec
daa
mov
dec
outsl
mov
gs
mov
ljmp
shl
adc
ja
adcl
mov
cmpsl
pop
and
or
xor
inc
ror
sub
sub
test
rcr
pop
call
add
icebp
sbb
xor
fsqrt
cmpsb
je
jmp
and
test
xor
repz
imul
adc
lods
scas
lret
mov
ja
jne
aas
scas
sub
pop
addb
fsubs
imul
sbb
xchg
xchg
roll
push
lods
adc
mov
mov
ds
mov
lret
ljmp
sub
jns
mov
sbb
cwtl
sub
ds
call
ds
dec
push
repnz
push
popf
sahf
inc
gs
mov
cwtl
sbb
in
and
ret
insl
in
addr16
jp
xor
cmp
fimuls
or
nop
dec
xor
stos
rcl
jp
and
cmpsl
and
popf
sbbl
mov
aam
shl
xor
orl
push
pop
fwait
mov
dec
xchg
cmp
scas
arpl
je
xchg
lods
daa
inc
or
fdivrp
push
dec
pushf
mov
ds
fcomps
out
popf
out
mov
cld
jecxz
adc
mov
repnz
dec
arpl
outsb
push
in
fwait
sahf
mov
adc
aam
loopne
jge
cmc
leave
sub
testl
dec
jmp
pop
addl
cmp
movsl
sub
mov
out
mov
inc
mov
imul
mov
pop
fst
cmpsl
lods
xchg
dec
sbb
xor
push
clc
out
vsqrtsd
or
cltd
push
xchg
rorb
push
test
in
outsl
inc
and
les
pop
inc
lds
lods
jmp
dec
jp
or
fstpt
mov
lcall
xor
add
call
gs
mov
loope
mov
mov
pop
pop
push
xor
or
lock
inc
adc
lret
adc
in
insb
fs
subb
jne
ss
inc
mov
lods
xchg
scas
js
mov
cmp
or
add
pop
xor
out
adc
push
loope
call
lea
test
loop
pop
pop
jmp
mov
mov
cltd
pusha
cld
movsb
jbe
inc
push
js
shl
mov
xchg
nop
fisttpll
fistl
popf
and
pop
and
pop
pop
dec
pushf
ret
into
out
dec
add
add
sub
insl
xchg
push
xor
adc
ficoms
adc
sbb
cmp
test
cld
sti
xor
fcompl
sbb
dec
nop
xchg
mov
mov
gs
fsts
lret
in
push
adc
inc
xor
or
pop
adc
sbb
push
adc
pop
dec
lret
xor
sub
add
daa
mov
test
int
aas
sub
jb
lods
xchg
push
pop
pop
mov
in
push
cmpsb
out
xor
dec
jmp
movsb
lahf
or
cld
imul
mov
dec
out
xlat
outsl
sub
inc
fdivl
outsl
or
mov
les
push
pop
and
daa
pop
in
cmp
sbb
js
xor
dec
adcl
jge
ffree
xor
hlt
sub
dec
and
add
addl
xchg
stos
pusha
in
mov
dec
dec
lds
jge
lds
fisttpll
jp
enter
imul
jle
or
out
js
int3
repz
mov
in
inc
push
add
xlat
cmp
scas
cmp
ret
and
mov
and
cmp
pop
xor
cmpsb
mov
mov
loop
or
pop
orb
pop
sbb
call
xorb
ja
xchg
mov
sub
sti
testb
fsts
lds
rorl
hlt
out
jnp
ja
into
add
lret
inc
inc
call
sub
test
inc
pop
es
pushf
pushl
sbb
in
and
mov
aaa
xchg
filds
das
mov
divb
fcoml
mov
jle
push
cmc
pop
cmp
dec
push
dec
cmpl
mov
cmp
cmp
push
lea
and
rolb
sub
or
cmpsl
or
into
push
leave
cld
out
outsl
pop
and
mov
inc
push
cli
pop
cwtl
push
lret
jb
out
clc
inc
mov
pop
sti
pcmpeqd
movsb
jge
div
cmpb
push
ja
outsb
js
pop
push
loope
pop
push
sbb
repz
cmp
cmpl
sub
mov
and
mov
inc
nop
test
repz
leave
mov
andnps
pop
clc
pusha
push
jmp
out
jo
and
in
jb
ds
lahf
addl
cs
inc
dec
fwait
jecxz
push
sub
fimull
ret
mov
sbb
jbe
jne
mov
lods
pusha
cltd
pop
xor
lock
out
inc
mov
mov
jno
mov
jp
mov
pop
sbb
fcoml
shrb
loope
add
insl
jne
stc
cmp
icebp
sbb
cmpsb
stc
popf
sbb
jo
cmp
xchg
xor
insb
push
movsl
into
pop
add
ret
icebp
test
push
bound
mov
add
imul
aad
stc
mov
mov
inc
push
in
cmp
rol
dec
mov
mov
iret
jno
sti
clc
xchg
jbe
das
or
mov
lods
and
pop
mov
incl
adc
push
xlat
sbb
mov
cltd
push
movsl
loop
das
imul
lods
dec
mov
or
orl
stos
int
fs
movsl
faddp
inc
cmp
jmp
ljmp
jne
inc
inc
mov
pop
add
or
inc
subl
sbb
sub
add
aaa
jg
sbb
lret
jb
leave
and
sub
push
adc
push
sbb
jp
test
mov
pop
lcall
sub
add
sbb
insb
add
push
cmp
ljmp
lret
enter
pusha
std
andb
mov
test
mov
dec
jge
sbb
loop
pushf
ret
outsb
push
or
adc
jmp
jg
and
dec
addb
cmp
rcrb
out
out
imul
mov
xchg
insb
push
push
mov
cwtl
stos
mov
sub
pop
daa
xchg
push
bound
mov
dec
pop
sbb
jbe
out
pop
shrb
bound
repz
fistpl
pop
outsl
fnsave
loope
aam
mov
mov
movsb
fwait
into
mov
dec
mov
movsl
lock
inc
loopne
ja
loopne
ret
test
stc
jo
mov
jae
test
mov
xchg
mov
pop
cs
xlat
fistpl
je
jg
mov
daa
add
push
loopne
je
cmp
jmp
loop
sbb
add
push
mov
rclb
adc
fistpl
and
mov
add
pusha
aad
mov
sti
push
int3
adc
shll
lock
pop
popa
loopne
pop
ss
aam
ss
ficoms
pop
inc
xchg
push
scas
mov
xor
imul
mov
outsl
int3
dec
push
idivl
or
dec
out
inc
xlat
xchg
fimull
test
inc
jecxz
xor
repnz
inc
mov
mov
movl
imul
mov
mov
mov
je
scas
js
dec
adc
pop
clc
les
repnz
push
shrb
adcl
insl
mov
push
push
sub
loope
ret
and
push
dec
int
adc
imul
xor
addr16
out
lcall
mov
inc
xchg
aad
testb
insb
movsb
mov
cmp
cld
fbstp
fimuls
jo
adc
mov
inc
ds
jg
sub
shl
mov
out
ret
mov
jnp
jp
iret
pop
cmp
or
mov
sbb
pushf
lods
out
jo
jb
lods
mov
mov
repnz
inc
pop
push
push
push
mov
lea
out
cmp
mov
jne
or
gs
cs
adc
test
add
out
cmc
sbb
mov
or
mov
and
mov
fistps
mov
cltd
clc
push
call
xor
test
cld
ljmp
xor
aad
subb
mov
pop
sbb
sub
mov
pop
imul
pushf
arpl
add
movsl
push
xchg
pmaxub
lahf
pop
mov
icebp
xchg
fcomip
adc
xor
push
fsts
mov
addr16
mov
cmp
push
xchg
jns
add
iret
int
fcmovne
xor
mov
dec
mov
ret
mov
push
add
cld
sti
or
loop
lahf
subl
dec
test
jge
sti
or
lods
int3
addr16
jno
and
stc
or
adc
outsl
push
inc
sahf
dec
fldl
cltd
inc
inc
clc
clc
out
ss
rorb
les
xchg
subb
mov
pop
pop
stos
test
xor
xchg
add
repz
push
das
movsl
xchg
xor
fs
data16
leave
xor
adc
cmpsl
inc
mov
pop
out
cs
push
mov
mov
mov
das
jae
mov
std
shlb
push
outsb
fnsave
pop
or
popf
pop
fistpll
iret
leave
fwait
dec
out
imul
and
rolb
xor
cmp
xor
inc
in
mov
cli
imul
cmp
test
mov
lds
ret
cmp
push
xchg
and
mov
imul
movsb
into
loopne
dec
sub
sbb
fpatan
mov
adc
repz
jp
pop
push
push
mov
push
push
scas
add
out
gs
fmuls
and
mov
pop
data16
xchg
pop
xchg
dec
loop
scas
fwait
out
and
or
add
out
rclb
pusha
pop
pop
inc
cwtl
ret
or
or
sbb
xchg
mul
scas
jns
call
pop
sbb
and
stos
and
pop
in
xchg
mov
in
push
add
and
fists
fists
xchg
insb
and
inc
mov
sub
adc
sbb
in
add
jecxz
jl
repz
mov
mov
xchg
icebp
test
jecxz
mov
jmp
xor
push
leave
fwait
cwtl
sub
xchg
dec
ljmp
jno
inc
push
repz
fs
insl
jl
shll
xor
fldl
push
xchg
xchg
mov
cmp
xor
or
stos
aas
mov
sub
jbe
fnstsw
fldenv
ljmp
pop
addr16
repz
int3
adc
inc
jge
sub
into
in
push
testl
out
fidivl
popa
mov
jle
cltd
ljmp
out
hlt
mov
mov
adc
adc
out
lcall
mov
mov
movsl
add
scas
push
xor
add
shl
sbb
jae
mov
sub
or
add
ret
imul
cmp
ljmp
sub
movl
shl
inc
add
dec
mov
cld
pop
data16
nop
daa
insl
xchg
xchg
pushf
add
sub
mov
arpl
repz
fimull
imul
dec
sbb
ljmp
mov
or
idivb
jo
lods
adc
jge
mov
mov
pop
leave
wrmsr
int
inc
pop
push
fistpl
sbb
mov
mov
inc
pop
jno
push
xchg
push
push
cmpsl
rcrl
cmp
jle,pn
push
rorb
cwtl
popf
jmp
sbb
mov
adc
mov
xchg
jae
pop
push
sub
and
jnp
push
mov
mov
mov
sub
mov
addr16
cmc
push
and
pop
insb
cmp
loop
outsl
out
cli
cli
rclb
cmpsb
push
imul
out
adc
cmpsb
outsb
xor
push
mov
push
and
xor
fsubrs
arpl
fistpll
pop
xor
adc
xor
cmc
push
movsb
cld
aas
sbb
add
sbb
mov
adc
fs
sbb
daa
clc
jns
pushl
adc
call
lcall
pop
jno
or
cmp
sub
leave
mov
mov
js
imul
fs
mov
test
outsl
js
hlt
inc
mov
jg
das
jnp
mov
in
mov
cmp
lret
iret
mov
pop
cmp
movsl
jge
push
sbb
and
dec
jle
sub
mov
push
and
push
fisubs
shll
mov
or
jb
or
xchg
add
dec
pop
std
loope
fsubl
xor
sub
mov
popf
pop
mov
repnz
ljmp
jne
call
sub
mov
enter
cmp
loop
push
inc
add
bound
fdivrl
jmp
fsubs
push
push
mov
mov
fldl
xchg
push
call
mov
scas
insl
or
xor
aad
add
sub
xchg
shlb
add
jl
jp
fists
jns
xchg
jg
std
push
fsubrl
or
xorl
mov
sub
mov
and
lods
scas
ds
incb
mov
jmp
std
mov
pop
mov
lcall
jb
lcall
mov
sbb
mov
push
pop
aas
neg
fcmovu
in
sbb
sbb
and
pop
icebp
jecxz
ds
mov
push
ficoml
add
adc
jmp
test
jp
js
jle
jp
arpl
repz
dec
inc
adc
jbe
scas
aaa
icebp
insl
push
imulb
dec
xchg
mov
pop
outsb
lahf
test
pushf
mov
sub
inc
clc
cmc
push
add
xor
loope
adc
sti
sub
sbb
add
jmp
rolb
adc
mov
je
push
inc
pop
push
jge
inc
push
jno
xchg
add
adc
scas
iret
in
xor
sbb
or
aaa
in
mov
mov
sbb
in
and
xor
sbb
loopne
mov
in
daa
aaa
rol
je
jmp
jle
pusha
enter
das
adc
adc
shrl
push
xor
mov
aam
popf
mov
sub
dec
push
xor
pushf
aaa
mov
jge
jl
pop
sub
mov
notl
dec
incl
push
jae
in
mov
adc
cwtl
lods
maskmovq
movhps
popf
sub
mov
in
push
mov
jbe
mov
xor
xor
mov
xchg
ffreep
jecxz
aad
ss
popf
nop
cmp
lock
add
adc
mov
fistps
pop
loop
xor
out
in
movsl
lods
pop
or
lods
add
stos
inc
xor
xchg
data16
daa
pop
xchg
lahf
cli
xchg
test
push
rcr
xchg
int3
jae
jl
into
subb
mov
dec
jbe
fnstcw
cmpsl
adc
hlt
mov
sub
or
jmp
jo
test
sub
sarb
push
lods
adc
int3
fs
shll
repz
stc
hlt
stos
out
stos
xor
push
inc
repz
add
je
in
ja
out
xchg
rep
push
and
popf
jg
stos
repnz
or
xor
adc
inc
test
mov
cld
pop
imul
push
in
jns
or
adc
cmp
mov
insb
cmpsb
jg
aad
test
mov
or
stc
dec
xchg
xchg
ret
std
inc
bound
or
mov
lcall
xchg
lods
dec
mov
pop
jmp
or
push
call
mov
pushf
add
jle
stc
mov
sbb
insl
cmpsb
pop
and
popf
xchg
xlat
int3
lds
insb
xchg
mov
lods
mov
fisubl
popf
jge
inc
mov
cmp
sti
scas
xchg
and
pop
xor
je
mov
fistl
pop
pop
xlat
cld
sbb
lahf
iret
test
cmp
jecxz
daa
fadds
mov
jbe
pop
out
in
inc
rcrl
orb
pop
dec
data16
jmp
pop
cwtl
in
hlt
ljmp
jns
test
lret
dec
popf
icebp
icebp
sti
cmpsl
cmp
dec
insl
ret
or
fisttpll
out
imul
sbb
scas
mov
dec
sahf
int
lods
repz
pop
adc
test
fsubrl
fdivrl
cmp
push
dec
mov
aam
rorb
xor
clc
adc
in
test
call
sti
sbb
mov
inc
mov
lahf
adc
xchg
daa
arpl
pop
scas
xor
sub
cmp
xchg
mov
or
les
mov
icebp
les
xchg
data16
xchg
xchg
lock
mov
jmp
add
jne
and
ja
push
mov
lea
jb
imul
mov
cli
sub
mov
rorb
mov
and
loop
sbb
and
jnp
sub
dec
mov
icebp
dec
and
daa
popa
sbb
je
sub
arpl
sbb
js
and
mov
xchg
pop
push
inc
test
cs
popa
cmp
inc
push
loop
mov
es
cld
jo
inc
lret
movsl
insb
lods
mov
cmpsl
sbb
es
mov
into
mov
cltd
cwtl
jg
idivb
nop
fdivs
mov
mov
and
pop
pop
add
mov
adc
divl
jmp
push
push
movsb
jle
jns
dec
and
adc
popf
idivl
mov
xchg
sub
adc
rcrb
add
sub
cli
sub
popa
jns
faddp
xchg
xor
in
cmc
loop
sbb
xchg
lods
mov
cltd
push
pop
add
push
lret
lock
or
cltd
mov
lods
out
daa
insb
mov
js
out
sbb
pop
js
aas
filds
jo
sti
shll
ss
mov
and
jo
adc
or
ffreep
incb
xor
cmpsb
arpl
mov
pop
mov
lods
cli
xor
test
adc
in
mov
push
and
es
aaa
mov
sbb
cwtl
lods
jg
sbb
call
sub
sbb
xchg
or
mov
repnz
clc
lock
dec
repnz
dec
jge
nop
mov
test
pusha
repnz
and
mov
push
dec
popf
in
shlb
int3
inc
mov
inc
inc
test
xor
adc
stos
xchg
cli
inc
daa
push
pop
push
daa
sub
lahf
and
pop
fdivr
jecxz
sub
out
lods
daa
out
mov
push
stc
lea
cs
cmp
mov
pop
ljmp
xor
aas
pusha
and
xchg
movsb
xchg
xor
lock
test
iret
repz
cmp
mov
fbld
push
cmp
fdivrp
test
scas
movsb
outsb
ret
xchg
fisubs
fwait
enterw
push
loop
adc
push
jp
popl
dec
mov
out
cmp
adc
add
into
or
jne
inc
mov
out
ret
adc
cli
dec
sbb
rorl
lods
sahf
cmpl
fdivrl
daa
fmuls
gs
sbb
mov
aas
sarb
adc
gs
push
subl
pop
pop
jg
lods
sarl
and
les
or
cs
mov
sbb
xchg
int
stos
insb
pop
mov
int
pop
xchg
add
scas
div
lcall
mov
scas
jl
push
xchg
iret
sub
call
xor
ret
inc
jmp
cmp
mov
pushf
mov
lret
mov
cmp
imul
add
int3
outsl
out
sbb
adc
or
mov
xorb
lds
test
fbld
push
out
aaa
sbb
loopne
test
scas
add
aaa
dec
sub
xchg
mov
scas
outsl
pop
movsb
push
fdivs
addr16
shr
pusha
xor
cmp
inc
mov
xor
jecxz
pop
inc
inc
add
adc
push
push
push
shlb
push
in
cwtl
test
lock
jbe
adc
out
or
or
xchg
scas
lret
fnstenv
divps
xor
stos
mov
inc
lods
sbb
xchg
and
xchg
jno
lret
fisubrl
mov
imul
add
movsb
mov
incb
rep
mov
daa
pop
push
loope
cmp
mov
add
in
sub
ljmp
cmpsl
in
pusha
push
es
jno
out
lret
or
xchg
or
outsb
inc
insl
das
add
and
outsl
inc
adc
jbe
dec
mov
aaa
arpl
scas
mov
shr
cmp
adc
push
into
mov
daa
imul
jp
movsb
mov
push
test
cmp
ror
mov
inc
cmp
cli
mov
clc
in
add
and
sar
push
filds
enter
add
adc
adc
cwtl
sbb
cli
pop
fwait
add
cmpsl
or
loope
xchg
in
mov
stos
push
mov
lcall
pop
push
fwait
push
gs
insl
add
add
adc
cmpb
adc
leave
push
push
dec
ficomps
cld
adc
aad
jle
mov
das
pop
inc
inc
cmp
pop
aaa
mov
hlt
inc
icebp
dec
stos
sti
dec
xchg
aaa
rorb
movsb
xchg
fistpll
out
pop
cld
adc
imul
jnp,pt
fs
sbb
jns
and
and
in
xchg
pushl
mov
push
xchg
sahf
xorb
jae
adc
lods
loop
stos
jb
rcr
inc
popa
jecxz
cmp
cwtl
mov
aaa
lea
jne
call
inc
xor
fmull
rclb
ss
push
sahf
aam
mov
sti
xor
pusha
and
pop
pop
sub
sub
adc
sub
jne
sub
and
sbb
repz
mov
cmpsl
popa
nop
es
fdivrp
jl
mov
fnstcw
push
xor
inc
push
fwait
push
add
cmp
pop
jb
pop
sbb
sub
push
mov
stc
fdivrs
mov
jae
test
orl
mov
idivl
push
loop
loope
movhps
movsl
nop
cmp
inc
or
hlt
push
fiadds
pop
js
rorb
jle
insb
mov
lret
jne
nop
xchg
adc
jae
jl
enter
xor
and
sbb
dec
inc
outsl
inc
jo
cmpsb
adc
mov
in
mov
aas
pop
in
mov
aaa
test
pop
mov
cmc
movsl
adc
and
popf
push
aas
jle
jnp
mov
lahf
ficompl
mov
pop
mov
shll
or
mov
shlb
icebp
jg
sti
adc
addr16
sub
jle
ret
mov
gs
or
jge
cmp
add
pop
stos
scas
xchg
ficompl
fsubs
jo
sahf
pop
hlt
xchg
leave
gs
inc
jp
test
pop
ret
decb
hlt
push
push
aam
sbb
in
aam
xor
rol
daa
push
sbb
or
xor
jmp
xor
sbb
into
and
rcr
dec
cmpsb
int
outsl
dec
mov
call
xchg
mov
bound
clc
lock
call
ret
xor
fldt
in
lock
cmp
add
push
cmc
inc
xchg
mov
repnz
pop
xlat
xor
add
sbb
xchg
testb
stos
xchg
jns
dec
ds
out
insb
pusha
fs
pop
add
imul
push
mov
fwait
jno
mov
mov
inc
or
add
push
add
push
push
lods
hlt
jns
fs
ret
ja
adc
gs
cmpsl
push
imul
inc
jae
pop
push
scas
icebp
data16
xor
fadds
dec
add
into
jp
test
enter
outsb
or
sub
imul
xchg
repz
or
lods
bound
cmp
in
hlt
test
mov
mov
mov
or
mov
xor
add
movsb
xchg
lods
into
les
jl
sub
inc
push
xchg
lcall
sub
push
cmp
sub
or
xchg
sub
sub
gs
xor
aam
xchg
in
lock
rcrb
adc
addb
adc
xchg
repnz
ret
dec
sub
jecxz
mov
inc
jne
push
addr16
sub
jecxz
jnp
cmp
dec
push
stos
idiv
lahf
in
push
or
inc
fbstp
inc
and
cltd
mov
in
mov
cwtl
jmp
enter
and
ds
and
and
daa
dec
pop
inc
push
sbb
lcall
aad
pop
imul
push
jae
enter
or
push
or
cwtl
es
cmp
sbb
ret
fisttps
xchg
and
lea
icebp
cmpb
jno
push
out
adc
clc
adc
int
lret
pusha
xlat
bnd
mov
je
jg
popa
lret
imul
das
cmp
mov
jbe
ss
pop
sti
dec
adc
lahf
jp
push
mov
sarl
ljmp
sbb
mov
in
push
lret
hlt
gs
mov
inc
lret
jne
jb
out
or
push
pop
dec
shrb
mov
pop
das
adc
push
sub
cli
pop
inc
in
lock
jl
xlat
imul
inc
mov
fstl
sub
pop
mov
enter
xlat
mov
mov
fidivrl
add
pop
sarb
mov
inc
mov
push
daa
int
pop
aas
shrb
push
and
and
or
or
fldcw
shlb
fwait
nop
fidivl
into
pop
pop
test
cmp
aad
inc
pop
mov
inc
jns
lds
jle
jns
add
mov
lock
ss
aas
ret
xchg
scas
lret
xor
jg
invd
adc
jno
mov
add
jp
push
sbb
daa
mov
push
std
cmp
or
mov
sti
sbb
sbb
ret
mov
pop
clc
mov
xor
ret
gs
test
adc
pusha
out
sti
mov
inc
mov
xchg
and
push
call
inc
jl
ja
out
jbe
bound
or
cmpsl
test
mov
xchg
call
xor
adc
out
xchg
fisttpl
movsl
xchg
outsb
pusha
and
push
stc
push
sub
and
into
sbb
pop
fstpt
jbe
loopne
fstl
test
xchg
xor
push
adc
mov
or
push
test
mov
and
dec
xor
cmpsl
cmc
jle
int3
imul
push
inc
pusha
hlt
cmc
push
hlt
and
xchg
sbb
jg,pt
imul
inc
outsb
mov
call
pop
jo
hlt
arpl
cs
std
mov
sub
insl
int3
in
jns
dec
adc
cmc
jae
pop
repz
les
add
xor
or
push
adc
xchg
or
hlt
adc
pop
sub
jle
cmp
dec
push
test
idivb
stos
adc
stos
cmpsb
jecxz
xor
clc
loope
mov
jp
outsb
add
insb
aaa
out
push
adc
cmc
and
sbb
outsl
aad
mov
fimull
test
gs
shl
and
push
inc
inc
cmc
or
pop
jae
dec
ret
mov
mov
mov
xchg
rorb
in
out
xor
mov
pop
sub
out
inc
jns
addl
xchg
out
mov
jae
scas
scas
mov
mov
push
inc
push
add
int3
xchg
je
or
adc
sbb
insb
mov
mov
sub
jg
pusha
iret
mov
iret
jmp
adc
ror
nop
int3
repnz
sbb
leave
lret
mov
dec
iret
out
in
fistpl
xchg
mov
dec
mov
and
out
fnstcw
mov
push
rcll
std
sub
push
cmp
sti
add
pop
in
loop
lahf
stc
ja
or
aaa
cmpsb
sbb
in
adc
xor
mov
sub
loop
sub
or
mov
sbb
std
and
idivl
pop
es
aam
ss
inc
daa
into
fldt
lahf
mov
jecxz
and
and
or
repnz
or
and
fsts
jl
fnstsw
xor
loop
or
movsb
out
popf
jne
clc
push
imul
push
lret
lods
pop
lcall
jl
cld
or
mov
test
add
pop
rclb
sti
and
pop
movsl
popl
shrb
inc
imul
jle
repnz
xlat
ret
scas
dec
and
push
or
xchg
dec
and
jg
mov
or
xor
gs
in
dec
sub
ds
sbbl
aaa
xchg
dec
outsl
adc
jno
pop
lahf
sub
jno
ja
into
xor
fmull
jo
mov
call
icebp
lret
fidivl
jmp
lret
sub
jl
and
je
stos
pop
mov
lea
lahf
jmp
int
jbe
jnp
icebp
xchg
jecxz
rcl
orl
and
cmpl
add
jns
ret
icebp
insl
push
mov
pop
xchg
pop
and
sbb
and
jbe
fdivs
pop
ljmp
gs
and
sub
mov
pop
jge
pushf
push
loope
shlb
imulb
sahf
and
repnz
jmp
clc
inc
les
test
inc
daa
xor
jle
das
sbb
jbe
nop
jl
je
jo
and
arpl
mov
shll
test
xchg
xchg
xor
arpl
test
shll
aaa
inc
ror
and
fs
ljmp
in
cmp
sbb
sbb
ret
jp
pop
lods
mov
fcoml
and
inc
mov
ljmp
cmp
lock
in
insb
pop
push
sbb
sbb
jl
int
jnp
cmp
add
xchg
adc
jle
fsts
ret
sub
int3
clc
push
clc
push
popf
sbb
mov
pop
int3
push
xorl
jno
push
mov
lds
push
gs
in
push
and
and
sbb
into
stc
inc
push
mov
or
adc
push
movsl
cmp
lret
or
scas
in
adc
clc
sahf
adc
test
gs
bound
mov
scas
mov
jo
pop
ss
xorl
add
test
push
aas
ss
push
test
ret
dec
jge
fucomp
inc
and
sbb
jmp
stos
xchg
push
inc
inc
xchg
inc
iret
jge
push
inc
pop
mov
xchg
movsl
imul
xor
mov
aam
ja
mov
adc
fisttps
stos
dec
jne
test
dec
xchg
pop
rcll
and
inc
cmp
insl
imul
addr16
in
xor
ljmp
pop
mov
clc
add
jecxz
ret
mov
jb
mov
dec
jecxz
cs
setg
dec
ljmp
push
lcall
pop
movsl
sbb
out
jae
add
stc
push
dec
push
aas
push
data16
jne
nop
xchg
test
addb
dec
xchg
daa
mov
xchg
outsb
arpl
into
iret
rcr
lea
lret
mov
mov
lods
pop
fs
xchg
lods
loope
arpl
add
nop
lods
in
push
das
mov
mov
adc
int
sub
je
test
mov
popf
fs
and
xlat
or
imul
or
lcall
sbb
ret
mov
loope
je
xor
nop
or
sub
scas
je
push
fucom
fcmovne
dec
pusha
test
and
cmp
repz
leave
popl
mov
dec
cli
mull
out
test
pushf
movsb
fcompl
bound
repnz
test
mov
aas
orb
inc
push
jge
pushf
cwtl
jmp
filds
inc
mov
imul
shrb
imul
repz
xchg
inc
xchg
cmpsb
ret
inc
lret
int3
std
dec
clc
cmp
cmp
add
in
mov
sub
lret
cmpsl
inc
dec
lcall
lods
aad
daa
insb
mov
lock
inc
push
mov
sub
push
cmp
add
aad
dec
push
pop
inc
xor
or
xchg
rorl
in
gs
push
pop
stos
jbe
dec
cmc
inc
pop
ja
movsl
cld
mov
lods
repz
fdivrs
or
mov
lock
inc
push
nop
fdivrs
dec
pop
outsb
inc
mov
fisubs
push
sub
loopne
jmp
inc
in
mov
pop
mov
shrl
std
test
xor
cmp
mov
pusha
adc
int3
add
sbbb
or
iret
mov
gs
rclb
out
xor
pop
inc
or
inc
mov
push
dec
aad
lret
pop
lea
pop
test
jle
mov
inc
mov
and
ja
roll
adc
xchg
push
xlat
mov
push
adc
mov
push
sbb
mov
push
or
es
int3
clc
fisttps
push
sbb
push
faddp
arpl
jb
mov
mov
dec
scas
add
cld
sbb
push
pop
mov
inc
les
pop
test
decl
dec
xlat
mov
in
loop
dec
cmc
mov
add
jecxz
shr
and
loope
push
jmp
out
pop
repnz
aas
lret
jae
fcmovnbe
push
inc
mov
jle
dec
add
cmp
and
cmp
orl
dec
lock
add
push
inc
sahf
or
cmpsl
jae
lods
xor
div
pop
outsb
bound
lret
lock
enter
jle
dec
push
push
dec
dec
pop
push
sbb
and
sbb
inc
ja
pop
dec
leave
jmp
xchg
and
aaa
mov
push
pop
aad
add
push
jg
out
mov
or
push
xor
mov
cmp
enter
les
push
mov
jo
sub
sub
out
test
dec
std
inc
pop
push
movsb
out
add
adc
sbb
lcall
ret
cmc
mov
push
mov
fmuls
and
das
add
repz
ss
repnz
imul
imul
stc
or
insl
add
inc
fadd
ljmp
sbb
movb
lahf
mov
ja
mov
ret
stos
sbb
stos
mov
add
lea
lock
std
popa
xchg
jp
sub
inc
and
js
xor
mov
in
enter
sub
push
scas
icebp
mov
nop
mov
sbb
jmp
push
cmp
mov
xchg
push
dec
mov
ret
sub
hlt
pop
ret
fisubrs
cmp
movsl
jg
sub
test
mov
test
hlt
dec
fcom
shlb
xorb
fwait
or
add
mov
and
stos
adc
test
pop
and
or
dec
shrl
push
jl
dec
push
loop
or
push
cmpsl
pusha
shrb
cwtl
push
cltd
testb
mov
xchg
aad
bound
jbe
add
repnz
push
int
push
pop
push
dec
push
int3
mov
dec
movsl
push
jae
popa
aam
push
xchg
xchg
inc
jnp
cmp
mov
xchg
fsts
pop
dec
xchg
dec
mov
add
iret
int3
repz
push
jg
add
or
ja
andl
push
jmp
out
xchg
mov
repz
cmp
sub
push
mov
leave
dec
xor
movsb
cmc
jo
jmpw
add
mov
repz
xchg
fiaddl
xchg
daa
shll
add
int3
cmp
sub
repnz
test
inc
test
cld
out
adc
pop
dec
mov
pop
std
add
mov
icebp
in
stos
nop
stos
push
and
cmp
out
cmp
inc
xor
rcpps
adc
std
subl
sbb
jmp
loope
xchg
lahf
hlt
aam
insl
call
pushf
cmp
mov
outsb
xchg
pop
sbb
push
pop
ret
test
sahf
popf
lods
push
adc
sbb
sub
and
adc
pop
jae
jnp
outsl
movsb
aas
dec
into
pop
add
aas
outsb
adc
clc
mov
sub
nop
std
pop
cmp
cltd
pop
and
xchg
xchg
in
jecxz
push
jg
and
aas
mov
push
in
inc
rorl
mov
mov
pusha
insl
cli
movb
nop
lret
out
jae
mov
fisttpl
jp
pop
clc
cmc
inc
or
mov
test
scas
mov
les
aas
imul
or
addl
ret
adcb
insl
js
pop
in
push
pop
ret
or
inc
ret
jmp
lea
int3
dec
imul
push
popf
cmpsb
or
adc
adc
inc
iret
rcrl
mov
test
fwait
int3
jns
cmc
cltd
shr
cmp
add
xor
jo
mov
push
out
inc
mov
mov
loope
add
mov
mov
sub
lret
decl
cli
divb
sub
ret
mov
aaa
and
fidivs
cmp
movsb
les
sarb
scas
std
notl
mov
ljmp
loope
mov
aas
jmp
xor
mov
mov
pop
xor
xlat
add
xchg
or
xchg
fmull
push
dec
insl
mov
pusha
movsl
sub
inc
fldcw
jmp
sbb
xchg
pop
jno
mov
push
fucom
mov
xor
xor
aad
fadds
lahf
dec
pop
stos
sti
cmc
cmc
or
add
out
pop
subl
cld
pusha
add
lds
negl
lods
add
std
fnop
cmp
cltd
and
xchg
pop
dec
xor
and
mov
in
imul
and
push
xor
dec
lock
dec
aas
nop
in
data16
aas
lahf
dec
ret
shl
inc
cmpsl
repnz
xlat
xchg
jne
jle
out
or
mov
lahf
cmp
and
in
mov
call
pop
mov
mov
adc
repnz
cmp
scas
dec
incb
dec
mov
imul
xor
mov
pop
es
jno
insl
pop
dec
int
imul
jns
pop
mov
mov
lahf
push
fdivl
sbb
xchg
sbb
mov
pop
adc
fwait
and
xor
sub
scas
test
in
inc
dec
sub
pushf
orl
in
sbb
and
adc
lods
adcl
add
repnz
pop
insb
mov
or
test
push
add
mov
cltd
aam
aad
push
mov
mov
push
call
inc
fs
inc
mov
out
inc
jg
adc
mov
xchg
je
mov
sbb
add
sub
scas
or
mov
dec
or
dec
push
sbbl
sbb
lods
nop
in
in
iret
inc
nop
jnp
imul
jno
add
jnp
cmp
xor
call
xchg
test
inc
mov
adc
sbb
shlb
test
movsb
test
push
add
mov
xor
test
daa
std
mov
addr16
jbe
mov
cltd
lds
pop
sbb
hlt
popa
test
dec
lcall
dec
mov
into
adcl
lea
pusha
mov
jb
ljmp
push
xchg
cmp
pop
inc
adc
sbb
arpl
repz
loop
pop
cmp
pop
jb
adc
jne
xorl
arpl
pop
jge
out
out
les
adc
adc
cwtl
rcl
sbb
xchg
cltd
inc
enter
or
cmp
and
jg
repz
loopne
stos
popf
adc
pop
xchg
into
inc
jo
in
out
jp
jae
jle
jl
es
sahf
jo
jbe
push
stc
mov
xor
dec
inc
fnstsw
lds
cmp
bnd
dec
sub
pop
js
or
or
fs
addr16
mov
xchg
lea
jae
loope
rorl
ljmp
lcall
int3
jo
popa
xchg
pop
add
subb
push
shrl
cld
test
jle
adc
aas
ss
sub
push
mov
push
roll
xchg
insb
js
imul
mov
das
adc
xchg
jae
stc
mov
inc
rolb
pusha
mov
lcall
xor
mov
out
shlb
ret
xchg
scas
jmp
inc
sahf
jge
adc
cli
test
test
fistpll
push
in
or
sbb
movsl
pop
and
xchg
test
or
dec
loopne
inc
pop
mov
out
jbe
shll
fs
sbb
and
std
mov
and
movsb
inc
push
push
mov
pushf
iret
jne
xchg
popa
outsb
shl
ret
pusha
mov
or
ds
mov
sbb
sahf
lods
pop
cli
das
pusha
xchg
inc
jo
sbb
mov
inc
lret
pop
popf
out
jns
mov
decl
insb
add
movsl
or
mov
dec
leave
ss
ret
jg
cmp
push
inc
loope
inc
pop
xchg
adc
push
jns
mov
rcll
int3
push
out
movsb
fisubs
push
jns
into
sbbb
mov
cmp
icebp
lds
pop
mov
test
loopne
rcll
shll
ret
dec
cmpsl
or
xchg
jb
jno
mov
push
inc
pop
aas
repz
mov
ja
xchg
jl
iret
cld
push
push
inc
cli
jnp
jmp
xchg
lahf
enter
addb
nop
inc
lret
xchg
jb
push
sbb
push
out
cwtl
cmp
pop
stos
sbb
push
sub
cmp
inc
ds
mov
fwait
inc
lahf
sbb
mov
adc
xlat
dec
mov
sub
jg
ss
loop
sbb
lcall
jns
fstpl
cwtl
mov
repnz
mov
std
mov
aam
xor
mov
cli
dec
sub
mov
jne
pop
outsl
or
jb
push
cmp
rolb
stc
and
sbb
sub
adc
jmp
push
xor
clc
pop
in
dec
subb
movsl
pop
cld
sbb
negb
in
adc
inc
sarb
popa
cs
dec
mov
clc
out
stc
cmp
xchg
add
mov
push
push
mov
fneni(8087
inc
negl
jbe
popf
jp
repz
mov
jg
daa
les
jp
testb
mov
jbe
cmp
inc
imul
add
xor
sbb
mov
cltd
aad
repz
jno
stos
cmp
lods
test
std
mov
adc
dec
nop
jne
dec
jo
les
jno
xchg
sub
or
aad
sbb
mov
xchg
jae
loop
gs
fcompl
mov
es
mov
fstl
or
flds
xchg
jmp
adc
loop
pop
mov
fdivl
int
xorl
fdivs
mov
stos
ja
jns
jo
cmpsl
aas
or
rcll
arpl
stc
lret
and
add
lret
inc
push
xchg
repnz
fiadds
mov
and
mov
xlat
ds
and
xchg
mov
cmp
rol
stc
jecxz
fdecstp
test
dec
cmp
ficomps
sub
mov
xor
mov
insb
and
ds
xchg
jae
in
shll
pop
fdivl
xor
mov
jns
cmp
pop
xor
inc
int3
xchg
push
dec
dec
xchg
jge
sti
adc
pop
movsb
xchg
divb
push
jmp
mov
cs
bound
pop
sbb
dec
adc
lods
mov
dec
pop
les
jecxz
in
and
pop
das
ret
adc
cs
cmpsl
outsl
bound
jp
andl
mov
cmp
std
repz
adc
adc
mov
rorb
mov
cmp
lea
rcrl
ss
es
movsl
cmpsb
out
ja
cltd
aaa
jge
iret
adc
cs
mov
ljmp
xchg
cmp
xchg
sahf
aas
rcll
add
jge
insl
push
sbb
out
test
mov
or
lret
scas
pop
shrb
fbstp
xor
xor
outsl
xlat
fadds
push
inc
out
adc
dec
jb
mov
adc
sbbb
xor
std
data16
sbb
dec
mov
je
pop
push
stc
cli
mov
sub
inc
sbb
jb
mov
jl
jbe
jl
pop
lret
lds
add
pop
mov
stc
dec
cltd
jbe
arpl
mov
xchg
cltd
cld
sbb
lock
out
cmp
xor
jle
nopl
mov
enter
jno
aas
test
jp
dec
inc
ret
cmp
popa
maxps
arpl
enter
pop
cmpsl
scas
mov
dec
fsubr
fnstcw
sbb
dec
sub
in
sub
mov
push
jb
mov
cmpsb
popf
push
mov
ja
sub
stc
lea
jmp
cmp
sbb
int
add
inc
cmp
sti
icebp
sbb
aaa
out
or
xchg
or
pop
int3
sti
add
xchg
imul
dec
cmc
enter
popf
sbb
inc
xorb
inc
fistpl
dec
daa
sbb
xchg
xchg
ss
loop
fwait
pop
scas
ja
sub
bound
lock
cld
gs
cmp
es
ljmp
addr16
pop
in
fisubrl
xor
add
imul
imul
popa
and
icebp
call
and
mov
inc
mov
mov
scas
sbb
ss
sub
xchg
adcb
mov
and
and
bnd
push
je
or
push
sub
add
push
loop
shlb
icebp
outsb
fmull
and
sub
xchg
cmpsl
out
lods
dec
jne
cwtl
mov
in
mov
cs
xor
adc
test
mov
int3
or
or
insb
push
fdiv
ret
lock
inc
gs
insb
mov
jg
pop
dec
jno
popa
mov
push
adc
inc
cmpsb
aas
adc
adc
pop
push
sub
std
dec
mov
addl
orl
adc
sti
aaa
cltd
dec
iret
cltd
mov
adc
ja
pushl
mov
pop
mov
xchg
push
call
aad
scas
shrb
jbe
and
ljmp
dec
xor
or
jns
xor
jbe
jmp
inc
push
or
and
inc
mov
mov
jo
ret
dec
mov
cmp
xchg
add
test
test
cmpsl
int3
push
dec
cmpsl
sbb
add
push
testb
dec
ja
lds
daa
lods
lea
jge
sbb
sbb
ror
jae
movsb
lahf
sub
xlat
rclb
scas
sahf
ret
jge
jne
or
mov
je
sub
xchg
push
inc
adc
pop
lcall
mov
xchg
add
lds
das
cltd
jae
adc
loopne
gs
xchg
in
loop
jl
mov
mov
cmp
mov
jmp
movsl
xchg
sub
movsl
mov
cmp
jmp
xchg
test
push
cld
push
xchg
cmp
and
add
cmp
ficompl
sahf
lock
movsl
stos
push
sub
or
push
cmpsl
lret
into
adc
out
sti
and
add
lahf
mov
dec
and
xchg
push
rcr
andb
nop
sbb
stc
loop
jmp
int
test
roll
jb
and
fbstp
dec
mov
fnstcw
das
add
imul
insl
dec
mov
cld
pushf
jecxz
push
dec
faddl
stos
pop
xor
jmp
or
dec
je
popa
ljmp
pop
xor
std
test
insl
mov
out
mov
test
fisubrl
mov
ret
das
mov
movsb
mov
lods
dec
movsb
push
push
adc
jo
and
shrl
fcomip
sti
push
inc
mov
pop
cmp
in
pop
adc
jne
aas
cs
fdivrl
mov
sub
fs
mov
sbb
dec
pop
ja
push
repnz
mov
je
mov
cmpl
lock
pushf
xchg
icebp
cmp
mov
shll
lcall
cmc
inc
add
adc
jecxz
adc
mov
or
xchg
mov
in
les
or
fstl
aam
xchg
mov
cmp
popf
aaa
jns
add
cmp
mov
pop
std
loope
stc
out
pop
lods
negl
scas
push
push
pop
mov
mov
jb
xor
call
in
xor
add
jae
cld
mov
inc
inc
iret
sti
push
in
add
outsb
or
pop
pop
dec
sbb
mov
xor
push
xchg
ficoml
lcall
sbb
mov
dec
iret
aad
push
ret
enter
stos
jb
repnz
lock
orl
pop
jne
repnz
mov
push
cmp
sti
push
ja
add
popf
and
cwtl
fucomip
mov
imul
jbe
xchg
mov
pop
in
mov
sub
outsl
mov
sarl
call
bound
daa
mov
push
aaa
push
cmp
fs
sub
out
mov
mov
loope
movsb
cmpsl
pop
int3
or
jp
inc
xor
sti
jmp
testl
js
dec
out
jbe
pop
push
ljmp
sbb
xor
mov
push
sahf
lret
pop
xchg
out
jp
shlb
push
adc
adc
nop
jmp
sbb
cld
mov
inc
push
and
sub
xor
mov
stos
jmp
aas
jge
aad
leave
mov
loope
ds
jmp
xchg
rolb
inc
shll
adc
dec
jns
xlat
pop
pop
scas
sahf
iret
and
xor
add
cmpsb
scas
add
je
mov
loope
mov
sbb
mov
pop
sahf
out
xchg
xchg
xor
sbb
mov
pop
push
xor
lds
mov
lods
xchg
xchg
lds
xor
test
jecxz
std
mov
mov
mov
pop
out
das
daa
jae
push
rcll
call
enter
cmpsl
or
push
cmc
add
mov
jo
and
rcrb
pop
je
add
subl
or
ret
mov
mov
jbe
mov
pop
jge
push
popa
add
jge
jo
out
jg
pushf
loopne
xlat
sub
xchg
pop
sbb
loop
ficoms
mov
mov
out
jg
jle
ficoml
cmp
leave
sub
cmpsb
pop
aam
imul
insb
xor
sbb
ffree
fmuls
cld
pop
mov
xor
mov
mov
in
sbb
shlb
or
xor
jge
pop
sbb
push
add
sub
cmpsl
insb
jmp
lahf
fstpl
or
push
leave
sbb
data16
jns
lcall
inc
adc
pop
adc
aam
mov
popa
ds
jmp
inc
push
sahf
adc
jg
or
mov
lret
add
mov
test
mov
pop
out
pop
mov
push
aad
insl
push
jp
mov
fmuls
inc
xchg
push
inc
jb
outsl
xor
xor
dec
jae
lret
sahf
jne
push
bound
ffreep
gs
mov
lret
jae
mov
mov
pushf
les
mov
loope
and
push
cmc
push
repz
repz
dec
arpl
dec
sbb
aaa
clc
pop
mov
stos
movsl
xchg
setno
fs
xlat
cmc
imul
sarb
bnd
pop
fcmove
mov
negl
xchg
cltd
ret
inc
mov
call
xorl
xchg
xchg
inc
aaa
in
das
xchg
ret
inc
inc
push
inc
ret
pop
pusha
in
push
fs
in
incb
push
adc
and
sbb
xchg
push
push
je
outsb
addb
lcall
fisttpl
cmp
stos
cmp
push
mov
sbb
imulb
push
ljmp
pop
in
or
scas
ja
and
and
pop
mov
cmc
lock
cmp
mov
xchg
iret
ret
adc
mov
xchg
jmp
cltd
sahf
add
jl
pop
or
stos
mov
and
pop
adc
and
mov
outsb
xchg
out
inc
out
push
sbb
pop
jp
fwait
push
fcomp
dec
shl
push
adc
sbb
sub
fmull
sub
pop
cmp
xlat
lock
pop
out
jmp
aaa
jns
xchg
dec
push
inc
push
xor
and
scas
cs
mov
into
cmpb
movsb
dec
dec
jbe,pn
pop
outsb
sbb
xor
adc
push
xor
repz
popf
push
mov
or
mov
dec
xor
cs
std
mov
stos
jg
lds
sarl
sbb
mov
mov
jmp
jo,pt
jbe
or
jl
mov
xor
xchg
adc
movsl
cmpsb
jmp
lcall
push
xchg
sub
lcall
call
cmc
cmp
or
pushf
mov
fisttpll
int
iret
pushw
in
xchg
jmp
jae
aaa
xchg
mov
rolb
sbb
xlat
lods
movl
mov
push
insl
aas
dec
cwtl
cli
mov
repz
pop
cs
add
push
sbb
fcmovu
mov
mov
xor
hlt
inc
push
addb
or
pop
enter
scas
and
mov
inc
in
push
jne
popa
rcr
lds
mov
lahf
xor
fs
out
movsl
sti
sarb
jns
ja
dec
or
cmpsb
jne
mov
and
in
adc
mov
pop
inc
jp
cld
stos
push
in
sub
pop
lods
adc
outsl
aad
sbb
in
in
psrld
fldt
enter
xchg
loop
mov
xor
mov
jle
pop
movsb
clc
add
and
xchg
cmp
jnp
adc
pop
test
out
lods
out
ret
push
imulb
adc
xchg
push
std
inc
mov
mov
push
scas
leave
mov
ja
xchg
xchg
call
test
stos
fcomps
push
shll
popa
pop
mov
stos
push
fnstenv
sbb
pop
int
test
test
mov
shll
mov
add
push
push
dec
je
xor
push
dec
push
ret
mov
fsubrs
push
xchg
sub
push
out
mov
push
xor
repnz
inc
shll
sbb
mov
push
pop
lods
movsl
jmp
cmpsl
sub
in
scas
push
fwait
xchg
xor
roll
mov
push
xor
in
xlat
or
cli
xor
pop
les
fs
imul
ret
push
pop
pop
or
fwait
jecxz
sti
int3
sub
xchg
cld
pop
sbb
jb
sbb
sbb
dec
add
in
jp
pop
mov
pop
imul
in
cmp
jge
xchg
das
jb
sub
or
out
movb
or
pop
in
push
jno
sbb
xlat
inc
mov
pop
push
dec
sar
lds
or
mov
sbb
je
es
data16
jno
push
outsl
xorl
or
lcall
sbb
bound
xchg
rolb
dec
mov
add
mov
rcrb
push
mov
subb
cmp
cltd
movsb
push
adc
mov
sbb
xchg
sahf
movsb
cmc
inc
push
mov
scas
inc
push
xor
cmp
dec
xchg
sub
je
call
shlb
aam
fwait
jnp
cltd
push
imul
stos
cmp
imul
or
jne
andb
cwtl
inc
ds
incb
pushf
daa
jl
xlat
jne
sbb
xor
mov
sub
push
enter
dec
jno
pop
lods
dec
sbb
outsb
mov
sub
adc
xor
inc
mov
idiv
out
xchg
fwait
dec
nop
nop
jge
subb
je
arpl
or
push
movsl
sahf
fwait
push
pop
mov
movsl
cmpsl
scas
faddl
add
dec
repz
mov
push
sbb
jmp
inc
les
mov
int3
cmpsb
aaa
mov
fsts
xchg
out
cltd
inc
outsb
and
push
jge
in
fsubrs
fwait
test
xchg
push
sub
ds
outsb
lret
push
popa
pop
xor
inc
ljmp
lock
idivl
ret
arpl
cmp
pop
ret
test
loope
inc
cmp
aad
in
xor
push
int
ret
cmp
mov
xor
lea
shr
mov
jae
xor
lock
addr16
hlt
outsb
and
adcb
inc
cbtw
fmulp
sub
fmull
pop
push
pop
fld
inc
cmpxchg
movsl
or
out
dec
inc
es
shrb
movsb
enter
sub
pop
fmuls
bound
aaa
xor
repnz
mov
or
adc
sbb
test
push
ss
lahf
dec
dec
or
test
adc
mov
sbb
enter
inc
rclb
and
adc
mov
test
push
xor
insb
jmp
mov
pop
cmp
fnstenv
sbb
out
mov
push
notl
js
sbb
mov
arpl
aam
in
pop
scas
aad
int3
xor
sbb
pop
loop
mov
ret
adc
push
jle
les
test
push
adcb
loope
jecxz
in
outsl
inc
dec
xchg
pop
inc
cmp
cmp
jb
cs
jnp
shlb
adc
test
push
mov
shrl
insl
push
arpl
add
outsb
sbb
ja
ds
add
enter
scas
or
jecxz
mov
aad
scas
jne
adc
xchg
dec
arpl
dec
fildl
leave
sub
or
mov
mov
hlt
mov
or
adc
or
pop
add
xchg
and
enter
imul
jg
repz
psubusw
lret
addb
je
addl
or
and
outsl
hlt
mov
lock
pusha
cmp
int
cmp
fidivrs
push
inc
mov
mov
leave
and
aam
push
ja
jge
aas
mov
mov
rcrl
xor
insl
pop
pusha
sarb
add
inc
or
xchg
adc
mov
jns
mov
je
mov
mov
sbb
lcall
std
add
push
xchg
loope
aam
and
dec
ss
std
mov
ds
mov
cmp
add
scas
xor
xchg
test
pop
cli
push
and
das
out
rcl
lods
cld
in
lret
add
pop
jg
out
sbb
or
mov
cmp
xor
sti
mov
notl
add
adc
inc
dec
repnz
mov
mulps
pop
fidivs
inc
lahf
loopne
inc
mov
pop
pop
sub
jecxz
lock
cmp
xor
sbb
mov
adc
adc
inc
dec
cmp
or
nop
adc
int3
pop
xor
sub
fcoms
mov
cmc
fwait
jl
push
mov
rorb
int
mov
and
inc
pop
lret
call
lret
lret
cmp
ss
or
cmpsb
sub
cmpsl
shl
adc
push
xchg
dec
loopne
loope
je
mov
jge
lea
icebp
mov
loop
dec
insl
lcall
enter
xchg
pop
inc
dec
outsb
sub
add
mov
dec
popa
xor
aas
inc
sub
and
jmp
je
cltd
mov
and
gs
or
clc
add
inc
mov
dec
mov
cmp
js
pop
push
das
test
xchg
pop
out
sub
mov
inc
push
ds
ds
imul
dec
xor
xchg
stc
push
dec
cwtl
inc
mov
and
insb
push
test
xor
push
enter
ret
jle
xchg
mul
dec
lret
or
cmpsb
and
dec
movsb
sti
xor
lock
aam
cmp
mull
xlat
sbb
xlat
in
xor
sbb
and
loopne
sbb
jmp
cmpsb
clc
stos
mov
xchg
arpl
nop
out
in
pop
lcall
je
clc
dec
lahf
cmpb
sarb
mov
aaa
mov
mov
jp
out
lock
sbb
cmpsb
mov
and
fwait
out
fdivr
icebp
xor
jg
push
or
lcall
and
xor
pop
je
xor
in
nop
jmp
mul
xchg
jns
adc
xchg
loope
leave
pop
mov
adc
call
push
push
xchg
addr16
mov
arpl
mov
pop
pop
mov
cld
inc
pop
jge
fnstsw
out
out
ud2
dec
test
in
xor
xor
loop
ja
clc
xchg
adc
dec
sub
and
xchg
adc
xor
fs
nop
shrb
fsubl
popf
addr16
scas
in
sbbl
in
inc
repnz
sbb
sub
scas
adc
mov
dec
sub
sbb
or
push
fdiv
sarb
jl
pop
inc
scas
rcr
addb
rcl
scas
test
fldt
mov
and
push
mov
jb
mov
dec
icebp
jecxz
add
pop
pop
cmpl
cmc
cld
cmp
sub
lds
stos
cmp
aam
cmp
dec
scas
pop
js
mov
jmp
dec
dec
test
pop
xchg
mov
add
mov
lret
rorl
xchg
mov
out
jnp
outsb
cli
and
jno
sbb
enter
cmp
lcall
jle
cmc
iret
push
or
sbb
into
xchg
push
jle
test
rcr
sbb
add
test
bound
js
fs
psubq
mov
jbe
and
push
mov
loop
fidivrl
ss
pop
jb
call
jge
mov
adc
add
addr16
sub
lods
xor
mov
mov
gs
mov
pop
jecxz
ret
lock
sbb
leave
icebp
ljmp
aad
pop
pop
xchg
leave
ror
fiadds
fisubrl
push
outsl
jmp
scas
fcoms
imulb
insl
cmp
mulb
lret
aas
scas
cld
mov
push
inc
icebp
sarl
push
je
divl
pop
cmp
adc
mov
or
mov
sub
jmp
das
inc
mov
dec
mov
out
je
stos
sub
mov
ret
orl
in
add
push
xchg
mov
push
adc
dec
orb
pop
sbbb
fmul
xchg
cmp
sbb
mov
push
jb
mov
or
cmpsl
mov
push
arpl
push
in
and
cmp
xchg
movsb
xchg
xor
mov
movsl
sub
inc
stos
pop
mov
fdivr
std
movsb
dec
popf
cld
add
mov
cmp
or
jb
add
or
adc
addb
cld
aad
dec
jg
push
adc
sbb
jo
mov
cmp
int3
cwtl
sub
cmp
cmpsl
int
or
sahf
sahf
xor
xchg
inc
add
jg
xor
inc
inc
mov
dec
movsb
jmp
mov
int
inc
dec
es
iret
xchg
sti
lret
dec
jae
roll
cli
add
xor
add
or
mov
jp
jecxz
fcomps
or
cwtl
mov
inc
mov
out
aaa
fiaddl
cmp
mov
fcmovnb
stos
call
inc
pop
sub
inc
sbb
mov
jne
adc
inc
or
and
js
mov
pop
sub
or
and
xchg
pop
inc
dec
jb
push
mov
shl
xor
nop
leave
cmc
jo
inc
test
mov
or
sbb
push
outsb
in
mov
js
push
mov
adc
dec
int3
pop
mov
roll
cs
mov
xor
pop
mov
push
lds
cltd
adc
repz
xlat
sahf
mov
add
mov
lock
bound
mov
or
daa
loopne
lods
leave
test
sub
loop
ret
ret
stc
and
mov
mov
lods
mov
adc
testb
inc
add
fcoml
mov
cmp
mov
into
jnp
fwait
leave
add
jae
lods
es
dec
arpl
mov
scas
clc
ret
cmp
test
inc
pop
adc
in
stc
repz
leave
idivl
subb
repnz
mov
pop
or
aaa
repnz
test
fnsave
ja
or
scas
ljmp
dec
jg
outsb
and
pop
push
dec
out
arpl
inc
ja
jp
movsl
fdivrs
sbb
cli
std
stos
sar
rcl
lahf
jmp
xchg
mov
cwtl
int3
xor
inc
enter
shll
inc
push
mov
cmp
ficomps
jmp
dec
jp
movsb
out
dec
adc
mov
test
mov
stos
loop
mov
xor
fisubl
cmpsl
xchg
dec
cmpsl
xchg
out
stc
push
inc
fwait
decl
sub
inc
fcoms
outsb
sbb
and
jle
inc
cmc
movsl
addr16
and
pop
in
adc
cld
pop
daa
ret
jo
push
pop
pushf
jp
sbb
inc
loopne
or
jge
shrl
out
loopne
cmpsl
pop
aad
mov
pusha
mov
jecxz
aaa
outsl
mov
sbb
das
xchg
sub
aam
out
xchg
add
sbb
mov
jnp
and
in
popa
sub
push
test
dec
jo
cmpsl
xchg
push
shrb
mov
out
push
xor
shrl
outsl
mov
rorb
or
xor
add
dec
testl
std
std
shrl
dec
hlt
or
push
adc
dec
cs
adc
movsl
jl
pop
addr16
in
jmp
xchg
and
dec
shrb
adc
cmp
push
inc
fnsave
pop
stos
push
push
xor
icebp
pop
mov
mov
loopne
dec
add
add
popf
adc
mov
sub
shlb
pop
js
rcrb
jg
push
mov
xor
xchg
ret
outsl
adc
jae
dec
pop
in
sahf
and
outsb
fwait
jmp
gs
insl
push
mov
xchg
mov
test
push
jae
pop
popa
popa
and
arpl
sub
pop
and
sub
sub
lods
sarl
xor
cwtl
push
cltd
clc
call
jb
push
sub
addr16
movsb
mov
cs
pop
insb
xor
mov
pop
cmp
repnz
cmp
or
mov
int3
push
cltd
mov
inc
mov
push
outsb
add
or
xor
aaa
in
test
mov
xor
pop
mov
fmuls
push
inc
arpl
cmp
lock
or
xchg
test
dec
fst
cmp
data16
sarl
in
cmpsl
xchg
orl
jmp
xchg
mov
aad
shrl
sub
or
outsl
idiv
add
addr16
scas
rcrl
pminsw
pop
and
in
sbb
lret
pop
mov
icebp
pushf
xor
cwtl
mov
lret
test
ror
cwtl
xor
push
sbb
inc
loopne
adc
inc
sbb
mov
popa
or
sub
out
adc
mov
popf
movsl
decl
or
push
loopne
in
dec
cmpl
in
pop
xor
cmpsl
jl
ja
daa
sub
loop
mov
mov
jecxz
outsl
stos
add
xchg
sub
aad
sbb
out
inc
pop
mov
dec
cmc
pusha
sub
push
aas
dec
out
std
mov
stc
dec
gs
pop
dec
lret
popl
xchg
sbb
cmpsb
sbb
jbe
inc
mov
sbb
xchg
je
ss
hlt
cmp
repnz
out
ftst
stc
push
flds
rcl
cmpsl
cmc
push
shlb
testl
shl
adc
push
push
imul
mov
pop
rorb
std
or
and
jne
xchg
fsubrs
cwtl
push
scas
dec
shlb
fdivrs
mov
loop
popf
push
in
insl
fbstp
stos
popf
push
int
add
fcmovbe
in
jno
and
lds
and
xlat
cmp
fistpl
movsb
pop
popa
mov
cli
jns
out
cwtl
movsl
repnz
add
push
jne
stos
std
call
rcll
jecxz
outsb
sbb
cwtl
fsubs
repnz
lret
add
xchg
in
and
mov
mov
xchg
add
ljmp
dec
lods
or
or
inc
jg
xchg
jg
sahf
jns
xor
mov
int3
cld
enter
adc
add
cmpl
pop
adc
lret
clc
es
scas
xchg
rorb
push
jae
inc
cmc
xlat
int
cs
or
xor
arpl
cmp
pop
mov
inc
jns
sbb
jecxz
scas
jnp
mov
rcrl
out
inc
imul
cmpsl
sbb
popa
loopne
inc
ror
int
mov
add
sbb
fidivrs
mov
dec
test
shlb
inc
mov
push
fwait
jo
sub
xor
jle
out
shrb
jecxz
test
sbb
aas
push
pop
add
xchg
xchg
in
test
fs
pushl
nop
fucom
adc
ljmp
in
mov
adc
and
sbb
movsb
push
mov
xchg
jl
jge
nop
add
rclb
stos
xchg
cld
shll
out
outsb
cli
mov
leave
pxor
mulb
cmp
popa
stos
and
xchg
outsl
movsl
hlt
or
cmp
and
cmp
aas
mov
xchg
mov
adc
pop
shrl
popa
push
lods
lahf
ds
daa
test
addr16
sbb
xchg
push
pop
mov
xor
inc
xor
sub
xchg
outsb
std
mov
mov
into
sbb
cli
sub
jne
imul
mov
pop
std
jno
dec
mov
imul
hlt
mov
daa
mov
push
lret
or
xchg
mov
faddl
mov
xor
or
mov
cmpb
les
loope
int3
cmp
addr16
mov
jg
inc
mov
js
sarb
jl
jno
arpl
cs
push
je
and
jnp
lahf
inc
cmp
push
mov
stos
mov
mov
xor
adc
adc
xchg
fst
mov
mov
xlat
rol
in
xor
ja
mov
or
cmp
jmp
je
jmp
xchg
call
jno
lods
or
shlb
mulb
adc
pop
dec
xchg
in
lock
add
pop
es
test
icebp
cli
cmp
addr16
int3
ret
dec
in
out
adc
inc
cmc
adcb
ss
push
ret
hlt
pop
sub
xor
mov
scas
cltd
addr16
jp
addl
fs
es
pop
out
nop
loopne
and
aam
rolb
jp
adc
adc
ds
mov
into
lret
sbb
and
jg
add
rcr
mov
lock
ret
mov
loopne
cs
sbb
mov
mov
dec
mov
push
mov
test
jb
xchg
xacquire
and
push
add
mov
dec
bound
cmpsb
gs
mov
jnp
mov
fsubs
cmp
xchg
or
loope
fcmovb
jg
pop
into
push
std
mov
fstpl
cld
test
push
dec
stos
ret
lret
mov
sbb
mov
pslld
jns
dec
je
pop
rcl
adc
bound
push
mov
sbb
lock
or
sbb
fs
mull
js
out
dec
imul
mov
pop
adc
xchg
cmc
add
aam
jae
push
ret
int
xlat
les
inc
jo
or
lahf
and
mov
inc
fbstp
aam
push
pop
dec
inc
add
sub
rcr
mov
inc
inc
decb
or
inc
icebp
std
ficomps
push
cmc
push
js
mov
add
cmp
push
mov
es
addr16
leave
sbb
insb
xchg
in
icebp
stos
xor
xor
scas
icebp
mov
outsl
in
insl
inc
mov
jp
fisubrl
sub
or
fsubs
or
cs
jnp
sti
inc
sub
in
clc
loope
xor
divl
lret
std
push
ja
testl
aaa
xor
outsb
mov
xchg
fwait
mov
cmpsl
aad
pop
push
aam
jb
pop
pop
mov
jno
imul
inc
sbb
int
mov
test
dec
cmp
mov
adc
sbb
push
xchg
mov
mov
or
cmc
lock
je
bound
push
inc
daa
test
rclb
pop
or
and
das
mov
les
sub
arpl
insl
test
inc
pop
push
nop
sbb
lods
divb
test
jl
fimuls
jecxz
dec
pop
jne
idivl
jge
imull
jl
loope
scas
fwait
pop
loope
in
push
dec
negb
pop
adc
cmp
xchg
inc
dec
arpl
push
js
sub
or
jbe
pop
arpl
cli
jae
pop
add
out
jl
loope
and
mov
dec
mov
xor
pop
jnp
jnp
cwtl
jno
shll
sub
arpl
push
sbb
daa
add
sub
xchg
push
jmp
in
sbb
lock
or
lea
dec
loop
incl
push
movsl
pop
mov
das
and
pop
les
or
test
out
cmp
or
or
dec
mov
std
add
jp
lods
imul
mov
fs
and
xchg
test
mov
loop
out
fimuls
loope
or
sbb
mov
mov
mov
jae
mov
dec
add
jmp
fwait
inc
iret
mov
xor
mov
and
lods
sarl
xor
push
mov
sub
dec
sub
push
lret
xchg
push
inc
je
loopne
mov
pop
pop
or
movsl
cwtl
mov
push
pop
fdivr
aam
push
sti
adc
mov
sub
xchg
dec
lret
pop
jmp
mov
or
sbb
mov
jmp
adc
ss
cmc
dec
clc
push
in
iret
xchg
in
ret
mov
jmp
push
pop
lock
outsl
shll
pop
jecxz
and
mov
repz
int3
in
sub
push
outsl
movsb
sbb
roll
das
repnz
push
jo
adc
pop
js
push
mov
xchg
fwait
insl
dec
jg
inc
xchg
cs
repnz
pusha
es
scas
pop
mov
aad
stos
imull
and
mov
xor
dec
aad
push
out
scas
mov
clc
sbb
add
xor
lea
popa
push
jo
ret
mov
jl
out
xchg
jge
call
sbb
scas
xor
mov
push
cmpsl
jns
fbstp
dec
out
aam
iret
rol
push
scas
arpl
lds
cmpb
movsl
test
mov
jb
insb
pop
inc
fwait
mov
in
mov
and
mov
mov
inc
cltd
ret
lea
push
jno
insl
call
xchg
insl
addl
clc
xchg
inc
insb
mov
ja
or
imul
xor
lret
push
jmp
imul
inc
xor
aam
gs
cmp
es
add
aam
mov
pop
adc
dec
iret
jne
mov
mov
sbb
les
out
dec
testl
add
xchg
movsl
stos
rcrl
add
mov
adc
lret
clc
test
stc
or
sub
jns
push
test
push
adcb
dec
movsb
fstl
in
push
push
aaa
and
add
stos
in
sbb
push
cmc
push
sub
popf
jle
dec
test
sub
push
cmp
imul
mov
inc
out
cmp
push
movsl
adc
and
movsb
mov
sub
mov
out
outsb
mov
add
outsl
loopne
pushf
lods
xor
sub
enter
cmp
enter
dec
sbb
shll
daa
std
cli
push
push
pop
adc
mov
mov
call
mov
add
mov
test
cmpb
fimuls
pop
stos
cmpsl
mov
push
jns
out
daa
in
dec
sbb
mov
popa
inc
push
stc
add
outsl
push
movsb
sub
dec
inc
dec
xlat
sbb
mov
push
imul
adc
mov
push
jb
jecxz
shll
inc
dec
jb
pop
cs
pop
popa
dec
jp
mov
jbe
jns
pushf
arpl
int3
loope
inc
subl
push
dec
sarb
mov
pop
rcl
cli
stos
int
sub
dec
sub
outsb
leave
loop
addb
pop
push
insb
xor
push
sbb
dec
mov
lock
jns
sahf
out
testb
xchg
ljmp
jecxz
adc
pop
data16
xor
icebp
fnsave
xchg
sbb
push
or
xchg
and
sbbl
cmc
in
sbb
push
adc
or
jmp
mov
sub
sub
and
jle
dec
rolb
dec
test
and
mov
inc
or
push
loope
add
rcrb
daa
adc
loop
or
mov
cmpsb
pop
dec
mov
popa
stos
cmp
ljmp
movsb
mov
pop
pop
mov
test
add
push
pop
movsb
mov
cmp
clc
jbe
fisttps
mov
mov
sahf
out
cmp
pusha
mov
stc
aaa
dec
icebp
in
pop
gs
fistps
mov
pop
jl
in
sub
push
pop
enter
out
cmp
mov
lea
mov
pop
xor
push
xchg
sbb
mov
out
cwtl
pop
in
push
mov
in
mov
bound
int3
dec
dec
and
lea
js
sbb
add
into
lea
or
enter
dec
nop
xor
mov
dec
insb
sub
ljmp
rcll
xchg
pop
fldenv
add
mov
fsubs
xlat
ss
or
shrl
pusha
mov
and
push
std
ds
or
lret
inc
fcompp
addr16
mov
dec
push
push
xorb
fwait
push
inc
roll
sti
add
inc
dec
scas
add
out
lds
out
pop
push
in
mov
aad
mov
loope
imul
loop
mov
push
scas
lahf
insb
sub
jae
jae
test
movsl
add
addr16
repnz
adc
jb
in
mov
jge
outsb
jnp
rolb
aam
adc
jo
pop
mov
inc
outsb
mov
sub
sub
fwait
clc
push
jg
into
xchg
andl
jge
ret
mov
inc
lods
or
mov
cmp
jb
xor
cltd
ja
mov
pop
mov
stos
and
inc
add
test
les
mov
push
lahf
and
repnz
stos
sbb
mov
dec
out
mov
cmp
xor
and
sti
jno
sub
adc
sbb
es
lock
popf
sbb
loopne
xchg
push
push
insl
sarb
std
mov
imul
jnp
jno
mov
dec
mov
out
mov
add
sub
out
cvtps2pi
mov
jo
js
or
fstpt
adc
jb
jmp
cmp
jne
inc
jmp
cwtl
jae
mov
jns
or
inc
add
dec
or
es
jo
pop
lds
cltd
jl
push
xor
into
notl
pop
xchg
dec
outsl
or
pop
fmuls
or
xor
sar
xchg
pop
leave
insl
pop
add
lret
mov
cltd
dec
and
in
sub
and
fwait
loope
mov
rclb
enter
les
pop
cld
scas
arpl
or
cld
in
mov
cmc
ret
push
cmpb
pop
lods
xor
and
xor
xor
lods
xchg
jg
into
sbb
dec
mov
ds
sbb
gs
or
pop
pop
mov
js
mov
push
stos
dec
sbb
sbb
clc
sbb
cltd
out
mov
lds
ja
mov
adc
scas
jge
ljmp
lods
ljmp
push
inc
mov
mov
adc
sub
into
xor
jno
ja
pushf
adc
fstps
push
inc
repnz
repnz
rcr
push
test
popl
jnp
mov
gs
xorb
push
call
fdivl
fistl
adc
scas
ret
pop
lahf
mov
or
xlat
repz
mov
std
and
adc
or
sarl
int3
loopne
jle
es
in
and
mov
and
adc
mov
sbb
testb
cmp
das
mov
jg
push
xchg
dec
pop
or
pop
jp
rorl
fwait
and
inc
lahf
sbb
imul
push
leave
and
pop
fsts
xor
mov
lahf
addl
sub
adc
mov
int
jge
cltd
ja
int3
cli
push
cmp
mov
sti
gs
add
cs
cmp
mov
in
ret
loop
and
mov
mov
jb
cmp
lods
pop
push
fwait
jg
push
std
jg
pop
test
push
and
mov
inc
roll
xchg
stos
in
adc
push
insl
lds
fs
scas
fnsave
push
test
int
sahf
lea
fmul
lods
stos
sti
ds
ret
test
fucomip
out
adc
pop
fdivl
rcrl
pop
in
cmp
or
dec
mov
push
out
mov
js
xor
inc
lods
mov
and
and
sbb
cmpb
sbb
rclb
fcmovb
test
ds
jl,pt
and
iret
mov
dec
jge
mov
aad
push
mov
cmpsb
mov
je
dec
xor
test
fsts
mov
sbb
push
hlt
negl
repz
icebp
mov
inc
jge
pop
sbb
fcomi
push
stos
sub
pop
sbb
pop
jne
or
aaa
daa
jmp
imull
jb
xchg
stos
xchg
int
lret
scas
sub
test
movsb
adc
pop
inc
ret
test
test
push
test
pop
cmp
jnp
push
pop
data16
mov
data16
jbe
sub
mov
out
js
call
adc
jbe
flds
fmull
mov
lret
sub
dec
fildl
je
inc
iret
test
pop
pop
mov
loopne
fmulp
aas
jnp
push
mov
outsl
xor
or
xchg
int
daa
push
mov
mov
jge
scas
lcall
pop
imull
das
mov
test
jns
pusha
or
std
rolb
mov
insl
mov
shll
aaa
jo
xor
and
mov
loope
lcall
mov
dec
push
add
repnz
xchg
xor
insl
sub
push
xor
jecxz
outsb
in
jecxz
es
add
push
mov
cmp
arpl
cltd
inc
push
sti
inc
je
mov
cwtl
aas
mov
cmp
imul
xchg
and
mov
xchg
or
test
mov
shrl
in
popf
arpl
mov
inc
aas
lret
lret
cmp
lds
xchg
xchg
mov
dec
loope
lods
cmpsb
leave
fadd
jge
add
aaa
testl
mov
jg
pop
cmp
sbb
int
sub
movsb
jnp
lea
scas
or
lods
xor
fnstenv
js
in
stos
repnz
mov
xchg
pop
in
push
ret
mov
pusha
or
outsb
fisttpl
test
into
sub
repnz
cmp
leave
lret
inc
and
test
adc
insb
loope
popa
dec
sti
push
lret
loope
xchg
cs
pop
lret
daa
fildl
add
stos
mov
mov
jmp
sbb
inc
push
rol
adc
mov
sub
dec
dec
shlb
mov
clc
pop
jnp
mov
mov
sti
popa
dec
inc
out
fnsave
lods
stc
mov
or
lahf
xchg
sbb
xchg
stos
loope
dec
shr
or
popf
sbb
cmp
lret
lea
pop
xor
adc
test
dec
in
or
jl
and
jp
mov
fwait
aad
pop
loope
sarl
leave
push
nop
add
mov
test
enter
outsl
sti
or
cmpsb
shr
ret
sub
repnz
mov
outsl
and
push
cltd
lret
sbb
adc
mov
test
movsl
inc
or
aam
pop
xlat
jmp
xchg
shl
aad
enter
rclb
lcall
int3
arpl
mov
je
inc
pop
adc
repz
or
and
xor
inc
jae
dec
xlat
aad
dec
xor
inc
mov
push
mov
mov
shlb
dec
jecxz
iret
cmpsb
out
mov
and
pop
adc
and
pushf
movl
fsubl
loop
and
push
xchg
cld
cmp
or
add
into
insl
mov
fldenv
push
test
in
fcmovbe
push
loopne
add
inc
fildl
fsubrl
adc
loopne
pushf
cmp
xor
daa
data16
ja
dec
dec
test
es
clc
ds
rcll
mov
ret
pop
push
sbb
adc
int
repnz
jmp
out
pop
cmp
roll
adc
xchg
cs
push
and
inc
in
loop
xor
or
cmp
pop
or
test
xchg
cmp
adc
fmull
adc
scas
aam
inc
jo
fs
cld
js
ja
cmc
fstpl
push
jae
pusha
lock
lcall
sub
or
imul
xchg
pushf
cmpsb
lds
in
inc
add
lcall
sub
aad
insl
repnz
fidivs
pop
adc
repnz
cwtl
test
xor
cmpsb
enter
je
lret
aam
push
or
fsubl
push
xor
clc
cli
mov
xchg
mov
xor
jbe
std
sbbl
orl
shr
lds
push
out
bsf
pop
loope
lods
or
test
jb
jl
push
xlat
insb
mov
mov
push
ret
jl
inc
jg
cmp
nop
lret
es
fs
in
cmp
loop
cmpl
test
int
insl
out
mov
inc
push
or
and
jl
int
dec
and
jmp
popa
push
rcrb
shr
ret
or
or
sub
pop
pop
addb
movsl
fcomps
pusha
leave
jge
imul
fwait
pop
push
sub
jp
inc
ret
es
fmull
xchg
jno
fsubrl
cmp
xor
repnz
dec
cltd
jo
add
dec
adc
dec
push
push
or
jnp
sti
mov
movsl
jns
add
dec
dec
inc
aas
test
or
int3
fsubp
fisubs
xchg
hlt
imul
ret
xor
filds
insl
xor
push
pop
mov
push
stos
xchg
in
lcall
xor
mov
xor
ret
repnz
lahf
in
js
scas
scas
xlat
adc
adc
jno
lahf
cmc
dec
imul
cmpb
das
clc
out
les
inc
fldcw
pop
sahf
fbstp
popa
add
lret
lock
fwait
repnz
jns
jae
mov
aad
cli
jo
popl
stos
mov
xchg
repnz
mov
push
push
inc
mov
fmull
aam
ss
cld
pop
adc
sbb
es
ds
and
inc
iret
pop
daa
mov
lock
adc
je
stos
push
mov
fwait
add
clc
jns
push
js
xchg
dec
push
js
stc
lret
scas
xchg
int
xchg
push
sti
stos
xchg
aam
mov
add
rol
aaa
xchg
addl
xchg
lock
or
lods
stc
sub
or
dec
cmpsb
clc
jle
ss
add
dec
mov
mov
lods
in
enter
mov
cs
inc
loopne
dec
dec
enter
repz
mov
sbb
push
aaa
inc
sbb
stos
int3
loopne
enter
scas
in
lcall
add
jns
stos
cmp
xlat
mov
and
mov
inc
daa
rcrl
into
mov
leave
cld
cs
pop
pop
cli
xchg
add
adcb
xchg
pop
cmp
in
adc
into
mov
push
inc
add
loopne
mov
fldcw
sbb
mov
jp
xor
movsl
sar
int3
fadds
addr16
cmpsl
ja
jns
aam
jb
sub
daa
fistps
sbb
test
mov
test
nop
mov
and
pop
mov
pop
jmp
add
test
arpl
outsl
or
push
xor
pop
adc
pop
sub
sti
sub
xchg
and
xor
addb
fadds
xchg
push
sbb
out
add
push
adc
mov
mov
in
lret
pop
fwait
dec
pop
inc
cmp
pushf
jg
inc
cmp
nop
jo
out
lcall
mov
vdivpd
push
mov
insl
inc
data16
fmuls
jmp
subb
bound
sub
lea
inc
imull
leave
sub
ljmp
adc
mov
fstps
push
in
sub
adc
push
inc
sub
or
inc
test
outsb
dec
mov
pop
lcall
push
dec
clc
sti
push
jb
movsb
mov
aas
xchg
sub
mov
dec
push
add
popa
mov
or
fcmovnbe
sbb
into
aad
lock
push
js
aam
and
cmp
xchg
push
adc
cmp
mov
cmp
ss
jl
sub
cwtl
into
xorb
out
sbb
adc
shlb
cmpl
fcos
xor
sarl
dec
xlat
jno
pop
gs
jg
dec
sub
jmp
stos
jne
test
lods
fildll
fisttpll
sub
ss
sbb
in
addr16
xor
cmp
nop
mov
leave
mov
push
mov
jnp
ja
rcll
add
xchg
push
pop
xchg
outsl
push
addr16
cmpsl
fildll
push
xor
sbb
cmpl
jbe
cmc
dec
addb
add
std
cmpsl
ljmp
and
sbb
pop
lea
xchg
out
inc
sbb
jne
xor
jg
je
adc
jns
cltd
and
inc
jo
daa
int
fdivrp
pop
jae,pt
and
sbbb
xlat
mov
cmp
mov
pop
sbb
pushl
cld
fidivl
jne
rol
inc
cmp
xchg
lea
jne
hlt
jecxz
jmp
xchg
jmp
mull
das
lods
xchg
push
cmp
dec
add
jae
cwtl
sub
mov
in
sbb
pop
mov
addl
addb
in
inc
and
push
insl
ljmp
push
ret
push
addr16
into
pop
cmc
test
jl
inc
jb
lods
js
sub
lcall
int3
xchg
jmp
jp
sbb
pop
cltd
push
xlat
aaa
adc
adc
clc
cmp
pop
pop
push
movsl
mov
mov
scas
mov
dec
pop
dec
xchg
mov
addr16
pop
xchg
adc
stos
ret
push
or
adc
ret
sub
or
repnz
dec
push
sahf
or
fucomp
dec
cmp
cmpsl
jo
insl
mov
push
mov
cmpl
pop
push
xchg
cwtl
sbb
insb
stos
cli
bound
out
lret
mov
cmp
or
lds
mov
fisubl
adc
jnp
lock
lds
lahf
mov
pusha
imul
sbbb
cmp
dec
inc
cmp
or
jno
stc
outsb
fs
jne
inc
add
scas
or
cmp
cli
jo
push
push
test
sahf
mov
xchg
cwtl
mov
mov
push
or
push
and
divl
mov
xchg
jl
adc
xchg
push
ds
jb
dec
add
call
mov
ljmp
jae
shlb
pop
dec
sub
shl
fisttps
add
push
insb
daa
sbb
dec
addr16
std
shll
data16
aas
outsb
imul
or
call
pushf
fcmovnbe
lock
adc
or
fwait
push
aaa
xchg
push
in
xor
mov
push
js
gs
pop
fisubrl
mov
insb
push
test
cltd
push
pop
gs
nop
xor
test
out
sbb
mov
rcrl
xor
std
lret
in
imul
push
push
ret
and
arpl
xor
repnz
scas
sbb
or
imul
jno
pusha
movb
into
scas
ds
add
mov
dec
jb
pusha
dec
xchg
inc
shl
and
and
push
je
sti
mov
push
jno
xor
sub
mov
or
xchg
jmp
cmp
mov
fcompl
cmpsl
mov
cmpb
jae
outsl
push
push
daa
dec
push
jno
mov
pop
rcr
fiaddl
das
scas
pop
inc
pop
cwtl
inc
scas
stc
stos
jle
add
pop
icebp
pop
and
insl
xchg
xchg
ficomps
mov
js
insb
inc
testl
xchg
rclb
inc
out
stos
icebp
neg
push
popf
fadds
adc
imulb
push
cmp
je
pop
mov
xlat
negb
pusha
mov
xchg
mov
inc
dec
je
icebp
inc
xchg
int3
dec
cmovg
int
jmp
or
pop
adc
pusha
jbe
das
mov
inc
test
dec
xchg
cmp
sti
or
rcr
gs
out
dec
xchg
lods
movsl
adc
mov
scas
add
mov
cld
push
push
xchg
stos
or
mov
outsl
bound
or
scas
and
and
pop
fisubrs
adc
shll
push
inc
push
jae
inc
sbb
lret
mov
mov
in
adcl
sbb
shlb
into
push
dec
int3
dec
cld
ds
push
je
pushf
fsubr
jge
arpl
out
sar
inc
xchg
daa
jae
std
pop
mov
inc
jb
sahf
dec
lock
nop
inc
aaa
aaa
and
jl
push
sbb
arpl
sub
jo
cmpsl
jp
out
cmpl
push
and
shlb
outsb
lods
cli
in
clc
dec
cmc
or
iret
aas
stc
cld
cmp
jmp
decl
mov
aaa
push
jae
dec
cmp
aas
notl
cmp
outsb
cwtl
adc
push
movsb
std
mov
or
fildl
rep
push
xlat
mov
sahf
cmpl
mov
add
scas
mov
outsb
jmp
ret
xor
xchg
mov
stc
pop
fidivrl
pushf
xor
cmpsl
inc
outsl
enter
js
sbb
add
ljmp
insl
lds
imul
xor
cmpsl
leave
inc
aad
push
mov
int3
out
mov
adc
inc
sub
xchg
push
orb
andb
loopne
push
pop
pop
inc
mov
mov
jb
sub
cmpsb
ds
sub
mov
lret
xor
push
adcb
push
fists
mov
mov
adc
imul
pop
daa
aaa
clc
es
xlat
mov
loop
iret
xor
mov
mov
mov
popf
ss
aas
mov
mov
cs
xchg
divl
dec
inc
insb
inc
push
xchg
or
repz
adc
cmp
cltd
ds
arpl
xor
xchg
icebp
mov
pushf
repz
sbb
or
addl
jp
cmpsl
mov
fstl
mov
arpl
sbbb
dec
into
ret
mov
jmp
cmpsb
xchg
das
jmp
in
lahf
mov
xchg
arpl
js
outsl
pop
imul
cltd
fwait
ret
addr16
xchg
xchg
outsb
push
xchg
aam
push
jbe
cltd
xchg
insb
inc
test
movl
shlb
ja
mull
mov
iret
push
xchg
insl
jbe
jne
dec
mov
ljmp
test
adc
push
lods
or
repnz
scas
add
mov
shlb
adc
lods
fs
repnz
mov
inc
cmp
int
adc
cmp
js
mov
movsb
and
mov
adc
rcl
cltd
jne
cmp
in
rcrl
push
mov
xor
loopne
xchg
fiaddl
mov
shrb
and
shll
push
lcall
fisttpl
scas
xchg
adc
mov
daa
push
mov
scas
aam
sub
dec
stc
jo
fwait
mov
inc
mov
xchg
sbb
xor
js
cwtl
popf
movsb
lahf
in
lret
adc
xchg
nop
xchg
jecxz
xchg
idivl
in
dec
adc
xchg
pop
and
mov
push
test
push
movsl
push
mov
dec
xchg
dec
sarb
lret
xor
lock
test
shrl
add
pushf
inc
pop
pop
cmp
inc
mulb
pop
ret
add
imulb
inc
jo
jge
inc
scas
mov
or
mov
cmp
inc
loopne
popf
mov
rcl
lods
and
inc
out
sbb
jge
xor
jb
out
add
pop
cmp
and
fildl
into
xor
aad
push
fs
sub
xchg
fs
dec
mov
inc
inc
scas
mov
lret
inc
popa
sti
xchg
orl
fsubs
mov
lret
outsl
adc
xor
sbb
or
sbb
xor
inc
das
test
sub
inc
and
jo
shlb
xchg
in
out
sarl
push
repz
fnstsw
xchg
push
mov
mov
negb
dec
in
sbb
inc
dec
jecxz
cmp
pop
popf
lret
in
in
dec
iret
jns
xor
xchg
ds
les
jecxz
xchg
ds
pop
mov
mov
or
mov
ljmp
or
je
push
sbb
fcmovnb
out
push
mov
stos
filds
fs
pop
sahf
data16
insl
shrl
mov
mov
or
sahf
or
loopne
push
add
orb
xlat
push
push
sbb
pop
or
int3
cmp
daa
shr
push
jo
push
aas
push
std
mov
arpl
lcall
mov
mov
sbb
enter
xchg
lahf
dec
lahf
cltd
movsb
mov
mov
jae
andl
lock
iret
loop
outsl
sub
cld
sbb
arpl
je
nop
inc
ret
imul
push
test
test
xor
add
or
shll
lock
inc
inc
xor
incb
jnp
hlt
sub
sbb
jne
lret
sub
shl
add
inc
test
add
pop
daa
lea
call
inc
ljmp
mov
scas
mov
mov
lcall
mov
xchg
cmp
mov
fsts
xor
es
movsl
outsl
ficompl
mov
dec
cmp
out
enter
loopne
pop
shlb
add
imul
test
pop
std
cmp
insl
jl
xor
cmp
or
dec
aaa
xchg
and
or
sarl
jno
xchg
xchg
int3
mov
xchg
test
call
jecxz
insl
push
in
pop
pop
mov
out
out
pop
jo
xchg
add
xchg
cld
and
pushf
loop
ds
lods
dec
push
adc
data16
sbb
dec
mov
lods
lret
popf
pop
roll
mov
dec
mov
jle
mov
push
or
adc
dec
lea
fldenv
cmpsb
mov
push
je
add
popa
loopne
sbb
xor
mov
add
out
jno
mov
hlt
mov
and
addl
jge
cmpsb
cwtl
cltd
add
lcall
xor
test
bound
xchg
fwait
test
icebp
push
cmpl
sbb
mov
mov
popf
movsl
test
xor
xchg
test
movsb
shl
mov
ds
mov
les
dec
shlb
lods
inc
xor
xor
gs
cmpsl
arpl
mov
cmp
scas
or
imulb
jp
mov
addr16
jno
inc
or
movl
add
fs
xor
icebp
imul
out
scas
pop
iret
inc
jbe
push
movsb
std
add
ret
xor
or
icebp
dec
sti
fdivrs
adc
pushl
mov
cltd
jecxz
adc
cs
xor
jle
cmp
out
loope
add
test
dec
adc
push
jnp
movsl
std
les
xchg
jbe
push
test
jg
icebp
mov
daa
jbe
andl
xor
adc
nop
jae
ds
jbe
fstl
push
xor
call
sub
pushf
jecxz
jo
cwtl
shll
test
out
xor
xchg
pop
nop
pusha
xor
inc
cwtl
mov
lea
das
addr16
rep
adc
pop
mov
cmpsl
push
clc
int3
push
in
loopne
add
xorl
xor
stos
inc
fldt
mov
lods
ret
jne
dec
ret
add
imul
jl,pn
mov
dec
rorb
lcall
fidivrs
mov
lock
add
adc
aam
sub
iret
and
test
shll
sbb
dec
mov
insl
jge
adc
adc
adc
mov
xchg
push
pop
adc
test
cs
adc
mov
dec
cmpsb
int3
cmp
jbe
out
dec
push
cmp
enter
add
xchg
stc
push
jle
idivl
add
pop
lock
push
repnz
fwait
push
dec
out
shrl
mov
mov
cmpl
lret
mov
adc
mov
movsbl
jne
xchg
add
push
sbb
lods
rcrb
cmpsb
mov
or
push
or
inc
arpl
roll
shll
fdivr
ja
cld
movsb
mov
push
dec
sbb
pop
inc
pushf
shlb
mov
call
mov
or
movsb
xchg
mov
je
rorl
int3
lahf
jle
mov
pop
xchg
dec
push
push
lea
mov
insb
lret
int3
addl
jae
lret
jno
mov
imul
inc
loop
out
stos
cmpl
sbb
xchg
pusha
cmc
jp
clc
lret
adc
sub
lea
sbb
jmp
xor
xchg
dec
jg
aam
jo
sub
into
in
jecxz
mov
jmp
lcall
mov
imul
in
out
mov
mov
fwait
mov
sbb
add
cmp
stc
dec
xor
cmp
dec
or
std
movsb
mov
add
or
popl
inc
jecxz
call
dec
mov
push
cmp
fwait
lods
inc
fadds
es
bound
shrb
jo
cmp
add
lret
mov
jle
mov
aas
dec
test
loopne
test
sub
cmp
arpl
pusha
rorb
dec
cmp
dec
adc
mov
jb
xchg
sbb
jns
shl
mov
out
daa
xchg
js
loope
inc
ja
divb
push
xchg
fimull
sub
dec
leave
xchg
aas
hlt
mulb
jp
inc
mov
fisubrs
xor
fdivs
mov
dec
dec
leave
loop
imulb
and
and
mov
pop
test
into
xchg
js
and
mov
add
out
in
push
not
es
or
clc
stc
push
mov
ret
sbb
cltd
out
enter
mov
cmc
imul
cmpsl
jecxz
sub
push
inc
iret
leave
stos
mov
xchg
adc
xor
and
negb
js
mov
pushf
pop
xor
test
mov
sbbl
in
test
aaa
pusha
xchg
and
jl
popf
mov
xor
sbb
or
dec
mov
rcrb
sub
repz
ret
sub
js
and
jl
xor
mov
inc
mov
sbbb
ja
cltd
aad
sbb
mov
mov
push
out
sbb
adc
sub
inc
cmc
cmc
out
pusha
xchg
decl
fistpl
dec
test
lret
ss
lahf
or
sub
lock
outsb
cmp
das
and
jb
mov
cmp
cli
lret
dec
inc
cs
roll
rcrl
sub
fwait
scas
data16
ret
adc
das
std
jmp
arpl
call
test
cmp
arpl
inc
xor
xchg
push
inc
popa
xchg
and
cwtl
out
in
add
sbb
mov
xor
lods
in
rcr
mov
sub
in
loop
sbb
mov
add
push
pop
iret
dec
add
in
fwait
cs
testb
mov
in
lea
jmp
jbe
inc
xorb
cmp
xorl
xchg
push
pop
jmpw
mov
pop
sbb
add
icebp
inc
pop
push
push
enter
lahf
cmpl
mov
addl
cmp
lea
xchg
pop
and
nop
movsb
xchg
xchg
xchg
jp
jbe
xlat
add
push
mov
sub
sti
mov
cmpsl
xor
insb
mov
into
dec
mov
clc
xchg
push
in
or
in
cmc
mov
daa
je
xchg
outsb
mov
js
fnstcw
daa
out
inc
pop
test
mov
in
int
jmp
addr16
lock
lds
andb
mov
cmc
pop
add
sbb
pop
xor
cmp
loop
stc
cmp
cmp
imul
outsb
pushf
inc
cmp
aas
cli
je
and
int
inc
sti
cwtl
ja
lods
sbb
js
pop
mov
jp
adc
fists
sub
into
test
clc
add
test
repz
ja
in
pop
hlt
pop
or
outsb
pop
fisubrl
mov
adc
xchg
cmp
jb
leave
popfw
out
leave
cmpsl
shrb
loope
repz
mov
add
in
sbb
mov
popa
mulb
shll
jl
fwait
and
adc
lcall
mov
or
sbb
movsb
movsb
fst
fldz
loopne
cwtl
or
pop
pushf
cmp
push
sahf
mov
mov
sub
or
push
insb
mov
cmpl
pop
in
rcrl
ret
lea
cld
sbb
cmp
mov
push
xlat
xor
or
and
mov
or
popa
lods
fadd
fisubl
sub
xlat
lods
jae
add
add
jp
xor
shll
push
loope
xchg
dec
outsb
jmp
mov
or
enter
xchg
aaa
fldl
jl
cli
rol
cmp
push
and
fidivrs
inc
loop
movsb
imul
xlat
cwtl
mov
push
push
inc
pop
stos
xlat
cli
mov
stc
lea
xor
inc
cwtl
dec
xchg
out
mov
sarl
mov
or
jae
pop
jmp
xor
ja
inc
es
stos
adc
mov
sbb
push
int3
dec
mov
push
fsubrl
stos
xorb
pop
or
sbb
es
cwtl
fs
jnp
leave
int3
daa
xchg
es
outsl
sub
jo
iret
xlat
enter
mov
pop
stos
lcall
adc
popa
test
jp
data16
sbb
inc
adc
ds
push
sahf
iret
lods
push
mov
pusha
movb
aam
ljmp
ds
out
push
cmc
or
add
std
inc
sbb
fstl
test
mov
ss
mov
dec
lock
push
cmp
pop
lahf
mov
xchg
and
pop
xor
mov
js
insl
jb
adc
aad
aad
push
sbb
into
adc
stc
mov
lcall
dec
int
scas
ds
mov
hlt
cmpb
and
push
fstpt
dec
or
mov
loope
or
inc
arpl
push
inc
sub
mov
outsl
dec
out
mov
or
sbb
inc
insb
jne
fadd
cmp
mov
bound
adc
lcall
jp
fsubp
les
xchg
sub
lock
ret
sti
into
pop
shlb
pop
push
adc
shlb
lea
in
out
xchg
jbe
pusha
pushf
xor
mov
fldcw
movsb
aas
mov
xor
add
hlt
popf
lret
sahf
sub
mov
cmpsb
int
and
das
aaa
sbb
push
mov
fisttps
out
clc
inc
mov
cmp
and
jmp
fldenv
sub
out
ss
push
pop
mov
in
cmp
mov
out
stos
lcall
xor
adc
enter
cmp
ds
mov
in
adc
cmp
or
push
inc
mov
pop
ljmp
loope
pop
mov
imul
movsl
adc
dec
jmp
sbb
xchg
sbb
shrl
cmp
or
jbe
inc
stc
pop
xchg
push
xor
stos
std
adc
aad
push
loope
jne
pop
jg
mov
mov
push
ror
outsb
pop
cmp
xchg
lcall
nop
dec
xor
jns
inc
jbe
dec
mul
dec
jmp
sbb
push
or
dec
rolb
repz
test
xchg
out
pop
fs
stc
or
mov
popf
mov
mov
outsb
nop
xor
lock
mov
or
mov
ss
sahf
mov
jle
fwait
jo
addl
shlb
fistpll
cmp
sub
in
sbb
and
inc
imul
mov
mov
mov
inc
jb
or
sbbb
add
jmp
push
xor
mov
pop
movsl
lret
and
test
xor
xchg
sub
loopne
xchg
dec
dec
sahf
jno
pop
inc
mov
pop
add
fwait
clc
jecxz
xor
fcomps
bound
lods
mov
ret
jge
ljmp
dec
mov
dec
push
aad
inc
add
es
xchg
dec
push
adc
pop
mov
lods
les
int3
cwtl
cmp
cltd
adc
fisubs
scas
cmp
dec
pushf
out
pop
aas
or
mov
jl
int
dec
insl
ja
mov
sahf
ja
sub
rolb
fldenv
add
cmc
sbb
cmpsl
xlat
inc
jp
loop
mov
jl
or
nop
movsl
fadd
mov
dec
sub
and
xor
jp
mov
popf
arpl
dec
mov
push
adc
pop
jl
and
pop
pop
mov
clc
test
sahf
pop
dec
mov
lock
mov
cli
jge
roll
lret
inc
aad
js
bound
sbb
cmpsl
dec
sub
test
xchg
adc
pop
mul
push
cmp
adc
lea
ds
sbb
push
idivb
push
sub
je
and
adc
xchg
and
fnsave
cmp
cmpsb
loopne
mulb
movb
lret
sbbl
insl
mov
pop
xor
jns,pt
mov
mov
loopne
cli
fcoms
or
adc
xor
in
arpl
movsl
jbe
push
nop
and
mov
push
dec
mov
pop
sbb
sbbl
push
pop
clc
insl
push
out
rolb
cmp
in
lea
cmc
cmp
push
imul
inc
inc
idivl
xchg
ljmp
out
dec
inc
cmp
or
inc
shlb
mov
jne
ret
mov
mov
pop
or
sub
popa
pop
mov
aaa
mov
std
xor
stos
stc
lret
jne
ret
ret
test
imul
pop
and
aam
cli
dec
xchg
sbb
mov
dec
out
push
cwtl
andl
shlb
xchg
cltd
add
inc
xorb
sbb
mov
jo
fmull
and
out
adc
push
popf
mov
je
call
push
call
mov
ds
push
mov
sbb
ret
je
adc
js
sbb
in
sub
pushf
and
loope
or
lahf
push
mov
dec
ret
mov
jp
rolb
and
xchg
fsub
dec
fdivr
cmp
or
cmpsl
mov
scas
mov
out
dec
push
test
pusha
inc
clc
add
pop
add
cmpsb
inc
ret
push
jl
add
icebp
loop
jbe
and
fistpll
inc
jns
jmp
sahf
mov
xchg
mov
pop
sub
mov
jno
sbb
push
pop
imull
aam
inc
sbb
jecxz
sbbb
inc
repnz
rorb
inc
pop
gs
add
and
sbb
addr16
mov
test
inc
mov
pop
mov
les
xchg
repnz
out
pop
ja
jmp
ds
push
call
cmpsb
ret
push
xor
pop
lahf
jp
out
enter
out
insb
mov
ljmp
and
cmova
test
jae
std
push
fwait
mov
push
xor
shlb
pushl
push
data16
sbb
nop
call
std
rorb
out
jo
add
mov
es
aas
xor
aaa
pop
out
xchg
popa
ret
js
dec
sbb
scas
pop
or
sahf
pushf
jo
jae
or
xchg
push
test
lahf
push
call
cmpsl
mov
xchg
or
mov
ja
push
jnp
push
mov
int
or
mov
test
mov
adc
lods
daa
clc
clc
jb
and
sub
test
and
jns,pt
mov
arpl
cwtl
frstor
adc
sub
aad
sbbb
pop
adc
bound
dec
cmp
inc
rcrb
test
out
inc
in
jg
out
cmp
sahf
ja
jbe
rorl
sbb
xchg
add
aad
into
pop
cmp
icebp
push
pop
adc
fidivs
icebp
cmp
ljmp
nop
leave
jb
aas
cltd
adc
dec
push
and
adc
pop
add
jo
adc
add
sbb
pop
push
test
cmc
inc
or
in
mov
lods
jp
ret
jno,pn
leave
dec
sbb
xchg
ret
sbb
mov
ret
test
outsl
outsl
ja
fs
ds
add
rorl
clc
ret
test
jmp
icebp
push
dec
fmul
mov
ss
xor
or
stos
push
movsl
outsb
jmp
dec
fldl
out
fldenv
dec
outsl
push
cltd
aam
cmc
dec
xchg
fstl
jb
pop
mov
scas
stos
repnz
jno
dec
mov
insb
pop
or
xor
inc
mov
jle
mov
add
aad
jp
repz
jl
mov
sbb
adc
cld
xchg
or
clc
cmp
lods
sti
cmp
fs
data16
bound
fadds
push
and
lods
pusha
mov
push
popf
leave
or
cmc
nopl
and
dec
mov
mov
in
mov
sbb
pop
rorl
fstl
ret
in
mov
dec
andb
ds
fcompl
sub
jmp
pop
shrl
fwait
xor
lcall
adc
es
aam
jmp
push
fisttpl
pop
ljmp
movsb
dec
pusha
xchg
cli
ja
jbe
out
lock
fdivr
gs
xchg
jp
loopne
sbb
fidivrs
andb
hlt
icebp
push
lea
lds
gs
lcall
jecxz
jecxz
xor
arpl
mov
xchg
jne
mov
adc
aas
jg
or
push
addr16
add
and
hlt
bnd
mov
shlb
data16
shrl
mov
shll
cmp
xor
xor
inc
lret
aas
imul
fs
xchg
das
rcr
mov
inc
jnp
ficoms
loopew
insb
jmp
jmp
pop
testl
cli
xor
fdivl
push
xchg
cmp
mov
dec
mov
mov
xchg
xchg
iret
int3
rcll
test
mov
push
outsb
in
xchg
adc
mov
or
cld
sub
cltd
outsb
int
sbbb
in
movsl
mov
jp
shlb
mov
jae
sahf
pop
pop
xchg
nop
xchg
lds
adc
push
push
packssdw
pop
je
ss
pop
sahf
jmp
outsl
add
pop
in
mov
test
sbb
decl
lock
xchg
inc
cmp
shrb
pop
xor
leave
push
fistps
test
push
icebp
or
loope
popl
pop
jbe
sbb
lahf
xchg
mov
gs
add
adc
mov
cld
pop
or
fistpl
dec
jo
movsl
mul
out
aad
jnp
jnp
jbe
cmp
pop
lock
daa
insb
xor
test
ds
fnstsw
and
enter
jmp
fmuls
adc
and
mov
ss
test
xor
mov
sbb
inc
adc
push
insl
adcb
fdivrp
cwtl
fldcw
lret
pusha
lea
loopne
cmc
test
xchg
xchg
jmp
enter
sbb
aam
jle
notb
cmpb
loope
mov
lock
jb
adc
arpl
cmp
dec
and
jle
push
cmp
pushf
and
adc
pop
xlat
mov
dec
fs
push
enter
adc
ja
jl
add
and
lcall
inc
mov
mov
mov
jns
icebp
push
imul
test
mov
in
xchg
inc
test
fistl
data16
cmp
sbb
fwait
ljmp
test
xor
cmp
xchg
mov
mov
stc
dec
call
lahf
push
xor
xorl
mov
pop
pop
cmp
lcall
or
mov
xor
lcall
jbe
insb
loope
in
stos
jecxz
xorl
test
cld
cmpb
imul
mov
or
ret
cltd
iret
adc
push
das
pop
lcall
insl
mov
mov
push
in
lcall
cmp
mov
fstl
rorb
adc
xchg
cmp
mov
icebp
lds
mov
stos
cmp
add
fcmovnb
mov
sbb
in
and
cmc
xchg
je
mov
lods
inc
iret
jecxz
lea
mov
mov
jno
mov
loopne
inc
inc
push
hlt
xchg
mov
xchg
enter
adc
stos
cmp
jmp
iret
test
mov
dec
orb
incl
sbb
cwtl
push
fcomps
mov
jnp
adc
mov
dec
lcall
mov
push
lock
imull
xor
cmpsl
les
mov
cltd
jbe
aam
sub
or
sbb
sub
xchg
test
jne
or
das
sub
in
mov
cmp
fs
call
push
inc
adcl
xchg
mov
stc
jne
inc
mov
loopne
popf
and
sbb
insb
cmp
cmp
push
imul
jae
cmp
and
cli
cmpsl
mov
fsubrs
imul
call
push
cli
push
xor
cmpsb
pushl
cmp
ret
add
cltd
aam
testl
sbb
jle
out
push
jbe
inc
jecxz
mov
pusha
mov
push
shrl
mov
scas
pusha
fucomi
mov
hlt
loopne
fstps
in
inc
xchg
jns
ljmp
jmp
test
cmp
mov
fdivrl
jg
scas
mov
inc
neg
jp
or
add
add
xor
fmul
jg
xchg
movsl
fisubrl
cmpsl
fmuls
rorb
adc
test
mov
cmp
in
jne
xchg
dec
sbb
pusha
hlt
mov
sbb
pop
adc
in
adc
int3
dec
cmpsb
lahf
xsha256
cmpsb
xchg
fs
or
fildl
xor
int3
jb
scas
clc
mov
leave
push
ret
mov
cmp
ret
cmp
je
inc
xor
inc
push
lods
push
mov
cmp
aaa
jno
fs
loope
push
into
add
sub
dec
mov
cmc
push
imul
dec
addr16
or
adc
js
push
pop
add
lods
add
sub
jae
shrb
int
xchg
mov
xchg
int3
mov
xor
dec
cld
mov
dec
scas
mov
xchg
mov
sbb
adc
ljmp
jae
jnp
mov
dec
pusha
enter
dec
jb
dec
push
cltd
pop
sar
pop
or
in
fistpl
push
sbb
adc
rol
fstl
insb
inc
rcrb
sbb
mov
mov
mov
pushf
insl
mov
jnp
bound
shr
pop
ret
jne
and
fdivr
mov
pop
cmp
cmp
and
and
jbe
xor
out
call
test
pop
push
add
lods
int3
xor
jnp
pop
loop
pop
sbb
ret
rcll
leave
adc
jp
lret
fwait
int
inc
fisubrs
pop
or
jns
mov
cmp
pop
sub
add
xchg
or
cmc
xor
mov
mov
std
mov
dec
jl
insl
mov
negl
inc
mov
add
add
out
cli
lret
cmp
or
xchg
ljmp
mov
cmp
out
mov
sub
pop
or
sbb
add
xor
and
and
lock
je
push
mov
adc
call
test
rcrl
sbb
pop
or
sarb
aas
push
add
adc
pop
add
mov
fwait
xchg
incl
fcomps
cs
fistpll
dec
call
scas
in
lods
jo
bound
stc
stc
adcb
xchg
sub
int
xor
daa
aad
stc
repnz
insb
xor
and
lods
sub
xor
arpl
fwait
clc
lods
inc
mov
test
loop
ja
leave
jnp
ljmp
arpl
or
inc
mov
shlb
fimuls
mov
mov
mov
adc
inc
mov
sbb
fucomp
lcall
dec
cwtl
fimuls
cmpsb
mov
and
roll
int3
and
mov
pop
mov
cltd
or
mov
inc
cmp
sub
in
test
sbb
fcoms
aas
xchg
cmpb
inc
xchg
jae
movsb
enter
mov
fdivrl
repz
jb
inc
lret
mov
stc
add
popf
imull
xorb
mov
sub
das
icebp
out
pop
sbb
insb
push
push
pop
jl
pop
inc
das
and
jg
and
fmuls
pop
cmpl
push
cmp
ret
and
and
ljmp
add
icebp
pop
inc
push
adc
repnz
dec
test
test
push
aas
xlat
mov
mov
lods
adc
cs
subl
test
rorl
dec
in
out
test
in
and
jns
mov
mov
outsb
out
out
inc
add
dec
sub
inc
cmovle
xchg
inc
js
adc
stc
jns
dec
adc
xchg
push
or
sbb
leave
dec
mov
nop
push
fnstenv
adc
push
sti
adc
or
jle
sbb
sbbl
enter
cmp
push
cmpsb
push
aad
fistpll
out
ficomps
cmp
or
insb
dec
jns
xchg
pop
mov
or
icebp
movsl
xor
jo
stos
cmp
jo
loopne
mov
jb
mov
int3
aas
add
cmp
iret
lcall
or
fwait
popf
fwait
cmc
xor
into
push
dec
pusha
xchg
mov
bound
imul
dec
xor
add
push
popa
jns
outsl
push
call
mov
jl
inc
ds
and
mov
fisttpl
int
pop
das
sahf
dec
lcall
mov
ds
shr
adc
loope
jecxz
push
and
mov
xchg
jbe
mov
nopl
dec
daa
aad
push
mov
rcrl
jecxz
mov
clc
sarb
out
int3
fsubrs
stos
inc
cwtl
push
loop
add
gs
decb
sub
mov
adc
out
fbstp
lret
sarb
inc
sub
mov
ds
and
and
stos
shlb
mov
xchg
cmp
adc
pop
ss
inc
fstpl
xor
xchg
inc
je
add
mov
in
and
daa
mov
fsubl
dec
enter
xchg
sbb
jne
gs
xchg
inc
outsb
or
mov
adc
dec
push
mov
inc
stos
xor
test
je
dec
addr16
mov
loop
and
mov
xchg
insb
ret
dec
inc
add
mov
cmp
dec
outsl
mov
mov
push
pop
inc
xor
shlb
shll
lret
sarb
pop
push
out
push
inc
cmp
mov
add
mov
aad
pusha
mov
ret
push
push
rcll
leave
aam
bound
sub
aas
cwtl
lret
in
adc
jbe
push
pop
scas
jecxz
int3
fistpl
lods
jle,pn
sbb
clc
mov
scas
and
test
pop
fstpt
notl
stos
pop
fucomi
mov
ror
and
stos
add
xorb
add
and
repnz
jecxz
sub
xor
es
add
insl
fimull
push
aaa
sti
mov
xor
lret
and
fisubs
pop
int3
jp
fbstp
pop
and
out
push
add
jmp
jns
in
xchg
dec
pushf
or
push
lcall
ret
mov
notl
mov
mov
lds
cwtl
mov
mov
test
xchg
test
pop
stos
sbb
call
jl
jmp
inc
mov
pop
shlb
jnp
std
sub
cs
jmp
cmc
loop
pop
mov
mov
cmc
cltd
and
cmp
das
push
frstor
test
sub
xor
xchg
loop
mov
aaa
and
add
shlb
arpl
loopne
sbb
xor
push
mov
mov
mov
ret
pop
or
cmp
addr16
or
out
loop
leave
pop
push
enter
push
or
inc
mov
in
inc
mov
dec
fs
pop
arpl
jno
scas
idivb
out
adc
shlb
or
cmpsl
mov
hlt
mov
sub
fcmovnu
daa
outsl
inc
push
xchg
rol
xchg
xor
lahf
enter
andb
dec
fnstenv
dec
xchg
repnz
int
xor
in
out
push
subl
and
xlat
mov
sbb
push
xor
cmpsl
rorb
jnp
mov
fildl
test
in
cld
jg
aad
aas
fists
sbb
cmp
imul
pop
rcrl
aad
cmpsl
xor
out
adcl
jae
sbb
sub
ret
push
cwtl
ja
jns
js
mov
nop
insb
int
sub
sbb
arpl
cld
imul
lret
push
xor
or
ds
sar
pop
mov
xchg
movsl
loopne
xor
int
sahf
sub
imul
dec
ret
aad
cmp
cmp
cmp
test
jbe
xor
inc
mov
inc
sbb
ja
or
mov
push
add
lds
lret
fidivs
lods
scas
das
add
mov
mov
sbb
fidivrs
pop
mov
dec
xchg
fwait
repnz
add
push
xchg
fstpl
mov
push
mov
adc
add
dec
aas
aaa
ljmp
sbbl
int
pusha
mov
adc
pop
and
fcomps
and
dec
push
jl
outsb
mov
and
mov
stos
andl
add
in
mov
loope
ret
mov
out
cli
addr16
inc
inc
fs
fwait
pusha
popf
scas
pop
or
jae
out
adc
inc
push
stos
dec
ss
stos
sti
dec
inc
mov
movsl
insb
sti
pop
and
or
and
pop
push
pop
xchg
push
pop
lahf
push
roll
out
and
repz
subb
shll
cmpsb
rorl
sarl
dec
clc
jecxz
adc
sbb
stos
jmp
push
dec
jno
outsl
shr
sar
jl
shl
xor
xchg
xor
adc
dec
fdivl
lock
sahf
add
xor
sub
inc
xor
cs
jmp
xor
es
shrl
data16
dec
mov
mov
xor
add
dec
xor
pop
push
mov
sbb
shll
mov
jae
sbb
pop
xor
xchg
sub
data16
push
loope
jne
imull
dec
out
in
xchg
lds
das
push
mov
sub
pop
outsl
test
lahf
out
push
cmp
pop
ja
jge
std
neg
push
add
jbe
imul
xchg
jle
pop
and
pop
xlat
rorb
jae
mov
mov
inc
mov
fsts
and
shll
in
jp
jbe
fisubrl
mov
jae
inc
sub
add
lret
mov
imulb
mov
inc
or
inc
cmp
inc
fildl
fistpl
inc
sbb
jo
jno
pop
cmp
mov
sti
sahf
push
mov
sub
fwait
outsl
or
out
sub
cmpsl
adc
dec
mov
xchg
mov
repnz
sahf
into
xchg
inc
xchg
add
xor
sbb
push
inc
lock
pusha
push
outsl
js
popf
pop
scas
add
sub
sbb
mov
pop
movb
add
xchg
icebp
dec
mov
leave
repnz
sbb
je
mov
add
xor
not
insl
sub
sbbb
inc
jo
sub
movsl
lret
jecxz
jns
sub
arpl
adc
add
and
mov
into
mov
movsb
pop
push
les
mov
imul
sbb
scas
leave
cwtl
inc
enter
xchg
dec
and
rcrb
add
push
mov
loope
dec
push
fmul
jo
cmp
xor
in
data16
stos
push
enter
adc
punpckhbw
sete
mov
push
dec
mov
jae
and
and
into
pushf
je
xor
out
xlat
inc
clc
push
mov
cmp
dec
outsb
popf
dec
push
or
fisttpl
lds
and
std
fmull
push
mov
fisubl
push
stc
cmpsb
repz
lret
fcmovb
xchg
adc
in
push
xchg
sti
sti
mov
jg
pop
jmp
or
cld
inc
mov
mov
dec
stos
mov
lret
fcmove
jmp
mov
xor
cwtl
adc
push
rcrl
outsb
or
loope
sti
mov
sub
insl
cmp
loop
pop
add
push
mov
inc
int
popf
or
out
daa
rolb
adc
add
lods
jo
lock
add
stos
pop
shll
inc
inc
pop
mov
push
push
mov
cld
mov
dec
jae,pt
cmc
jmp
test
fmulp
rcrl
add
pop
das
test
fdivrp
negl
pop
inc
dec
pop
push
lahf
jbe
add
mov
mov
and
xor
push
cmp
out
push
fmuls
aad
dec
and
mov
xor
ljmp
out
inc
fcmovnb
inc
fisttps
test
cmp
cmp
add
pop
movsl
pop
adc
mov
xor
mov
call
pop
out
push
jg
xchg
in
push
repz
push
dec
jns
sbb
ret
sub
int
sub
aaa
adc
decb
cs
cltd
and
mov
jmp
sbb
fwait
roll
or
imulb
ficomps
std
lods
jns
mov
aad
push
pop
incl
xchg
aaa
mov
pop
pop
adc
mov
xchg
lea
dec
stos
lods
sub
inc
adc
das
pop
cmpsb
mov
mov
scas
adc
cmp
and
shl
filds
aas
adc
or
gs
push
cwtl
mov
jmp
xlat
push
repz
cmp
mov
pop
mov
adc
popa
adc
hlt
rcl
mov
or
jnp
push
js
inc
jnp
jecxz
push
mov
js
ja
ljmp
pop
mov
sub
mov
push
repz
rolb
pop
dec
repz
push
xchg
lods
icebp
jp
leave
sahf
shll
jbe
mov
xchg
jmp
mov
inc
xchg
shll
cmp
cmp
push
pop
push
add
adc
cwtl
mov
hlt
mov
xorl
loop,pt
in
dec
movsl
out
inc
pusha
lret
fs
pop
dec
lret
popf
daa
xlat
loopne
gs
xchg
push
jp
mov
mov
daa
jg
pushl
push
shll
dec
mov
pushf
dec
push
repnz
add
andb
sub
and
scas
fwait
shll
int3
stos
les
out
xor
sbb
sbb
shlb
cmp
pop
popa
jl
fcoml
and
fstps
fnsave
cmovne
fmulp
mov
mov
mov
aad
test
lret
xor
xor
loop
xor
xchg
xchg
test
ja
inc
jns
and
sbb
rclb
mov
fs
sbb
gs
and
pop
das
push
mov
push
and
mov
into
sub
add
mov
rcr
push
lods
popa
xor
jp
je
testb
aam
in
add
lods
add
cmp
aas
jo
stos
mov
cmp
mov
je
jnp
call
nop
xor
mov
push
mov
xchg
scas
sbb
push
dec
inc
shlb
cmc
insb
lds
fmull
std
js
lcall
lahf
shrb
cmp
jg
decb
out
popa
loop
pop
cmp
push
adc
jbe
cmp
xor
push
cltd
mov
pop
out
cltd
icebp
xlat
jno
push
mov
push
clc
mov
test
xchg
aad
mov
push
inc
loop
repnz
movsb
js
cld
jg
inc
out
jb
js
pop
lcall
int
jmp
out
arpl
mov
mov
fwait
gs
in
insb
jle
cmp
movsl
dec
xchg
push
dec
iret
adc
dec
sub
push
aam
adc
arpl
popl
popf
insl
sub
sbb
push
lcall
divb
je
mov
int
cmc
jne
cmovne
arpl
xchg
adc
enter
icebp
nop
jg
xchg
lea
lds
inc
xchg
mov
shl
sub
push
fwait
mov
sub
inc
cmp
aas
test
xchg
add
mov
jmp
cwtl
or
push
add
xor
in
cmp
lods
pop
out
mov
gs
scas
and
inc
bound
cmpsl
adc
cwtl
fisttps
jb
add
mov
jmp
cld
inc
movsl
push
fmuls
jns
sbb
inc
mov
push
cli
mov
push
sub
push
adc
and
repnz
and
adc
xorb
rcrl
outsl
mov
cwtl
fcomip
aad
xchg
out
fwait
fadd
sbbl
jbe
test
sub
lods
sbb
hlt
sub
push
jb
pop
std
lret
jns
aad
pop
loope
mov
shl
push
ds
xchg
sub
cs
stos
divb
ret
sub
mov
mov
rcrl
fists
out
mov
xchg
out
adc
mov
fwait
lcall
ja
push
dec
arpl
mov
ss
lods
jp
mov
and
dec
fimuls
scas
and
inc
jle
test
inc
push
jne
enter
fcmovnu
comiss
shlb
jmp
repnz
je
shll
das
repnz
or
jle
test
insb
in
mov
std
inc
and
jl,pn
pop
ds
aam
cld
sub
sbb
and
push
shlb
call
sbb
add
fdivrp
shl
xor
jne
adcb
mov
dec
dec
hlt
sar
mov
xchg
xchg
xorl
sub
push
pop
sub
mov
jns
push
data16
imul
in
jg
das
iret
mov
mov
lcall
jmp
clc
dec
sbb
rcr
leave
adc
jb
daa
sbbb
jl
or
cld
fsubr
call
dec
lret
add
adc
xchg
jne
lret
inc
dec
arpl
js
cmp
fisttps
xlat
xchg
sbb
mov
lret
sahf
xchg
and
jno
into
popf
mov
cmp
xchg
test
push
cwtl
shl
push
jmp
mov
clc
cmp
and
add
adc
mov
dec
fisubl
adc
ret
lret
enter
repz
and
aad
and
popf
test
add
cmp
fisubs
clc
imul
icebp
leave
insl
sbb
int3
imul
cmp
fiaddl
pop
add
add
leave
adc
sbb
punpckhwd
faddl
cmp
pusha
adc
loopne
xchg
mov
mov
rorb
fs
dec
ret
in
js
jno
jle
xchg
sub
aam
cmp
xchg
lcall
fisttpll
fbstp
loop
insl
jmp
int
lcall
cmp
loop
push
das
xor
pop
ror
mov
pop
push
popf
sbb
xlat
lret
js
pop
mov
or
mov
mov
jmp
outsb
dec
sahf
mov
cmp
mov
iret
ret
sub
xchg
stc
mov
pop
xchg
inc
cmp
push
and
nop
lret
mov
push
out
negl
xchg
aas
fs
ftst
mov
or
jns
jae
jmp
dec
scas
mov
repz
sub
xor
xchg
out
jnp
xlat
cmp
cmp
xchg
push
or
ljmp
inc
mov
stos
sti
push
adc
into
call
iret
xchg
rcrl
adc
lret
aaa
fistpll
push
test
lcall
das
pop
sub
lcall
or
gs
stos
call
sbb
int
mov
jo
xchg
cld
test
ret
push
mov
cmpsb
push
sbb
adc
test
xchg
mov
lahf
lret
adc
pop
add
push
push
dec
shll
cmp
mov
out
lcall
sub
mov
sub
mov
icebp
test
jecxz
outsb
inc
xor
jl
arpl
mov
sarl
sti
dec
mov
cmc
jb
popf
outsl
xchg
mov
mov
repnz
mov
mov
lcall
orl
xor
repnz
jecxz
or
ret
aam
int
scas
clc
mov
cmp
pop
jo
inc
stos
pop
bound
jns
add
xchg
mov
push
icebp
sbb
out
push
inc
mov
imul
in
cmp
inc
sub
aam
jp
pop
mov
push
mov
test
jge
std
mov
cmpsl
ss
add
sbb
fiadds
daa
mov
jecxz
rcrb
in
pop
lret
pusha
sbb
sti
cmpsl
add
dec
mov
pop
jp
insl
cmp
je
cmp
mov
leave
inc
dec
gs
xchg
mov
loopne
ret
aam
rclb
nop
jnp
dec
aaa
xor
push
jp
outsl
inc
enter
or
sbb
popf
pop
pop
xchg
lock
and
scas
mov
mov
cmc
sub
test
pushf
jecxz
outsb
mov
mov
fidivl
inc
test
dec
in
sub
imul
cmp
pop
popa
hlt
push
mov
xchg
loope
pop
xchg
sbb
enter
lods
out
lods
push
push
lds
cmp
mov
andb
mov
inc
push
cs
mov
stos
in
push
lret
jecxz
pop
xor
xchg
inc
shlb
cld
mov
xchg
lret
hlt
pop
fnstsw
pop
push
lods
fcomps
cld
cmpsl
dec
inc
test
mov
xchg
out
arpl
pop
into
adc
or
mov
jno
xor
imul
stc
clc
add
or
xchg
test
popa
dec
mov
or
mov
scas
fwait
rcrl
sbb
movsl
adc
sbb
inc
int
mov
jecxz
adc
xorb
inc
push
dec
pop
loope
data16
scas
inc
xchg
mov
inc
and
pop
cmp
mov
mov
out
mov
sbb
jae
insb
cmp
cmpsb
cmpsl
test
push
cmp
inc
push
ja
cmp
pop
test
fcompl
imul
push
or
push
sub
mov
push
lods
and
shll
or
jb
lods
addl
jb
or
xor
sbb
xor
cmp
mov
mov
int
xlat
xchg
mov
lret
fcompl
jnp
fistpll
mov
inc
inc
leave
mov
mov
imul
xchg
and
loop
sub
in
pop
movsl
icebp
hlt
xor
cltd
mov
pop
xchg
pop
and
sub
mov
ret
jne
inc
add
imul
into
int
xchg
subb
pop
ds
shlb
les
icebp
xor
pushf
xlat
pop
jnp
add
mov
pop
cltd
mov
imul
adc
mov
fadds
in
fidivl
sti
adc
xor
xchg
sbb
adc
out
ja
dec
inc
movsb
lea
dec
ret
movsl
sbb
stos
cmpsb
mov
es
mov
testb
addr16
mov
push
sub
push
movsb
sub
je
mov
or
scas
repz
pushf
mull
aad
fld
mov
mov
les
dec
mov
cmpsb
adc
out
shl
mov
rolb
mov
pop
cs
inc
cmp
lods
push
sbb
lahf
mov
xchg
lods
xchg
mov
inc
pop
in
mov
cld
rep
push
dec
cmpsl
subb
add
push
xchg
std
imul
and
in
pop
subb
leave
aaa
test
mov
aaa
int3
inc
fs
into
push
rclb
inc
in
aas
or
call
clc
mov
nop
repz
dec
ja
daa
cs
xlat
ja
sub
and
push
daa
mov
jae
jb
sbb
push
pop
test
sub
push
push
cmp
mov
jle
sub
sub
rcr
divl
fnstenv
mov
add
loopne
jle
mov
sub
lret
andl
pop
jle
jae
popf
adc
hlt
dec
rcll
lahf
sub
add
mov
xor
pop
jne
fnsave
lock
mov
movsl
sub
sbb
xchg
or
gs
lret
out
fiaddl
adc
adc
test
pop
pop
pop
or
leave
mov
int3
dec
andb
sbb
or
sub
insb
insb
and
roll
fdivl
mov
xchg
add
mov
jle
out
loop
sarb
mov
sub
out
mov
pushf
mov
pop
ja
cltd
adc
test
in
insb
inc
int3
xchg
or
jg
mull
ret
inc
add
faddp
lock
shll
insl
imul
in
or
pop
dec
mov
xchg
cmc
insl
mov
repnz
popa
int3
outsb
dec
outsl
jmp
je
cmpl
mov
call
mov
frstor
addr16
outsb
scas
mov
xor
aas
add
push
and
cmpsb
adc
movsl
dec
cmc
sti
fsts
push
add
hlt
loope
jg
dec
enter
or
daa
push
xchg
mov
fs
clc
bound
fimuls
fwait
loop
cmp
clc
cmc
jl
ljmp
push
out
lahf
popa
jns
push
ljmp
push
rorb
jecxz
pop
xor
jns
mov
fidivrl
inc
cmp
and
inc
iret
movsl
nop
xchg
mov
mov
jnp
in
xor
mov
cmc
xchg
inc
dec
xchg
adc
add
push
aad
rcrb
lea
mov
fstpt
sub
shll
xadd
outsb
mov
ljmp
ljmp
mov
dec
addr16
pop
jg
jo
and
xchg
icebp
xchg
lcall
inc
pop
icebp
pop
xchg
lods
fimuls
loopne
jmp
mov
insb
push
push
cwtl
lahf
mov
mov
mov
shr
nop
clc
pop
and
and
addl
cltd
and
mov
iret
filds
sbbb
xchg
and
cs
gs
lea
xor
jne
pop
dec
and
jecxz
adc
xchg
outsb
addr16
add
fbstp
jecxz
lods
jmp
mov
mov
xchg
jo
outsb
xchg
adc
ja
dec
int3
mov
jl
repz
ss
es
and
and
insb
movsb
int
mov
ficomps
mov
test
jecxz
daa
dec
arpl
test
dec
cmpsb
fwait
jb
sub
mov
fisubs
pop
imul
outsb
push
cmp
outsl
outsb
mov
ja
cli
scas
pop
jbe
add
push
clc
sub
push
inc
ret
inc
in
stos
stos
jae
loop
lods
fwait
inc
add
ja
inc
cmp
jl
into
and
mov
mov
stc
pop
fsubrp
data16
mov
xchg
mov
fldl
xchg
test
ds
pop
mov
xchg
das
icebp
mov
push
cmp
push
sub
and
xchg
mov
lds
std
lret
and
outsb
sarl
xchg
pop
pusha
sbb
dec
dec
mov
fstl
mov
sub
sub
sarb
mov
loop
xchg
jle
xchg
out
jnp
add
jl
sub
xchg
jne
arpl
jg
mov
mov
pop
pop
nop
sarl
arpl
imul
cmp
jns
ja
push
lret
cli
shll
dec
imul
push
nop
arpl
mov
and
adc
xor
mov
int
into
pushf
mov
cli
cwtl
pop
sub
sub
push
or
mov
stc
sub
scas
out
inc
or
scas
cld
clc
push
xor
push
dec
add
sti
leave
sbb
es
xor
or
sub
or
addl
xor
and
jo
fnclex
cmp
cwtl
adc
cmp
cmpsl
clc
jo
enter
sbb
jbe
xor
add
in
sbb
icebp
add
dec
push
or
jecxz
and
insl
rcl
repz
scas
loopne
cmp
xor
lock
jmp
adc
repz
cli
mov
xchg
dec
sbbb
xor
push
sbb
and
in
inc
lock
je
fcmovnbe
inc
js
out
outsb
and
pushaw
mov
mov
test
imulb
jmp
repnz
out
pop
mov
cmp
sbb
adc
push
push
loop
mov
pop
and
push
negl
jg
xlat
mov
rep
je
lods
stos
jb
imul
pop
mov
aad
inc
adc
sar
and
push
stos
outsl
sarl
push
push
add
mov
xchg
inc
inc
sbb
cmpsb
or
cmpsl
add
jne
xlat
mov
jne
jno
sahf
pop
push
addr16
pushl
and
lcall
jecxz
outsl
mov
xchg
iret
int
xor
iret
add
cwtl
addr16
jne
out
into
push
and
cli
adc
mov
popa
fdivrs
sbb
dec
or
xchg
push
cmp
mov
dec
std
jecxz
push
add
and
mov
loope
inc
adc
jle
test
lret
aad
pop
mov
jbe
mov
sbb
lds
fxch
ljmp
inc
jne
in
mov
cli
and
imul
loopne
sahf
mov
stos
std
arpl
push
push
scas
push
das
adc
insl
sub
add
xchg
and
mov
inc
test
xor
or
mov
es
push
test
jne
jecxz
sti
pop
in
mov
pusha
dec
mov
mov
jbe
sub
icebp
loopne
push
insb
idivb
movl
cld
fisubs
mov
insb
pop
push
scas
rorb
loop
xchg
jbe
clc
push
movl
enter
out
xchg
or
lret
sbb
inc
cmp
rcl
cmp
loop
push
lcall
pop
je
cmpb
int3
mov
sbb
repnz
mov
test
or
xor
mov
or
das
fidivs
fldcw
pushf
push
and
push
scas
movsb
dec
xchg
xor
mov
sbb
xchg
and
push
mov
push
and
popa
cmp
sbb
push
cltd
mov
mov
mov
pop
sub
mov
jmp
push
ror
aas
fidivrl
add
call
adc
adc
or
xchg
leave
mov
jnp
cwtl
lcall
pop
adc
fstps
push
mov
loop
pop
ret
pop
jne
jecxz
xchg
out
shrl
mov
stos
and
mov
scas
fisttps
adc
daa
push
or
orb
mov
adc
inc
stos
and
lods
mov
sub
pop
into
xchg
inc
xchg
push
xor
insb
sub
pop
sub
jns
pop
fistl
and
sub
push
adc
outsb
les
fists
add
sbb
cld
adc
pop
xchg
xorb
cmp
push
idivb
mov
mov
in
ret
lods
iret
mov
adc
dec
out
dec
add
clc
dec
xchg
xchg
call
rolb
pop
idivb
shll
add
es
push
cld
nop
movsl
orb
xchg
int
xor
dec
test
stc
or
jge
notl
in
push
and
lret
sub
movsb
sub
inc
in
int3
call
mov
out
fcomps
add
push
sti
mov
xchg
mov
dec
adc
push
inc
rcrb
jbe
hlt
mov
adc
xorl
push
ret
push
in
enter
push
sarb
aad
lea
sbb
cmp
mov
jmp
in
sub
imul
cmp
xchg
addr16
iret
into
cmp
xchg
cmp
push
jne
sub
nop
js
test
mov
mov
or
lods
push
inc
xlat
pushf
push
pusha
pop
pop
pop
cmc
lock
jo
and
cmp
inc
stos
in
out
inc
jae
xchg
test
dec
bound
lahf
sbb
mov
clc
or
aad
scas
cmp
lock
add
pop
scas
iret
daa
inc
pop
inc
lods
aam
les
aam
test
xchg
pop
sbb
sti
adc
xor
arpl
not
cmc
cmp
xchg
rorb
sbb
std
popl
js
adc
scas
jns
je
scas
xchg
sub
repnz
cmp
push
cmc
std
push
or
insb
daa
and
and
mov
or
idivl
jns
daa
push
xor
iret
fsts
inc
xor
mov
push
jb
fsubl
dec
cltd
dec
shl
inc
divb
push
pop
loope
mov
imul
cwtl
mov
push
ret
fwait
dec
adc
outsl
mov
add
clc
dec
jb
repnz
daa
xchg
leave
or
dec
test
inc
push
inc
mov
xchg
jns
sub
shrb
imul
mov
pop
push
in
mov
pop
pop
call
mov
mov
mov
ds
popf
loope
test
shrb
push
in
cmpsl
sarb
mov
cmp
push
adc
int3
mov
rclb
xor
jl
or
dec
cmc
inc
pop
add
jecxz
push
fldenv
rorl
dec
mov
lret
out
ljmp
inc
mov
iret
iret
add
popf
nop
jnp
inc
int
mov
xor
rorb
push
xor
pop
fcmovu
sahf
dec
iret
popf
cld
or
movsl
and
or
stc
sub
stos
xor
mov
cmc
dec
and
sub
imul
xor
xchg
mov
aad
mov
subl
pop
out
cmp
je
push
pop
loope
cmc
pop
cmp
loop
aam
mov
jb
xchg
incl
lock
xor
mov
mov
xchg
call
lahf
rcrb
in
fmul
sub
int
nop
insl
inc
subb
xor
ret
scas
jb
push
pop
xchg
adc
mov
xchg
jnp
push
pop
aaa
aad
pop
add
out
push
js
mov
jmp
out
pop
xchg
mov
imul
lods
insl
inc
repz
push
push
sbb
idivl
mov
negb
jmp
dec
mov
adc
int3
stc
adc
mov
out
out
pop
in
inc
clc
gs
cmp
cmpsb
lds
dec
fptan
or
sbb
adc
les
add
movsl
repz
pop
movsb
xchg
adc
lock
rcrl
in
or
and
jmp
pop
pop
cwtl
add
fnstenv
push
lea
jmp
push
mov
and
add
test
push
jp
insb
mov
add
sub
scas
sti
and
aad
mov
psubusb
xchg
mov
and
add
xor
xchg
pop
adc
stos
mov
mov
je
inc
push
jno
psraw
ret
mov
adcb
mov
lods
fwait
cmp
mov
pop
cmp
imul
lea
pop
pushf
scas
pop
testl
jle
mov
dec
adc
inc
addr16
int3
adc
xor
les
lret
pop
mov
adc
outsl
push
xchg
cmp
or
jge
inc
mov
mov
push
scas
adc
iret
xchg
movsb
mov
lahf
test
cmp
xor
loope
or
mov
scas
mov
subl
neg
jp
pop
hlt
sub
mov
jl
cmpsb
mov
movsl
push
fdiv
int3
scas
sub
and
push
add
loop
add
pop
mov
fisubrs
push
pop
push
pop
jmp
xchg
or
or
nop
xchg
xlat
mov
test
mov
shl
inc
fwait
pop
je
inc
and
pop
pop
dec
push
adc
in
std
sarb
imul
lret
dec
add
cmp
fisubrl
push
sub
dec
daa
addr16
stos
xor
push
pop
ljmp
or
jmp
push
xchg
pop
aad
pop
addr16
adc
jp
push
push
repnz
pop
dec
xchg
push
jg
adc
sbbl
dec
mov
popf
add
mov
repz
fidivl
sub
jmp
jmp
sbb
cltd
out
mov
daa
jg
or
dec
xor
xchg
or
xor
push
rcl
repz
pop
fistpll
gs
repnz
jmp
dec
lock
push
shlb
mov
sbb
loopne
mov
cli
xorl
daa
enter
push
pop
andl
mov
pop
pop
fidivrl
or
or
jo,pn
jecxz
aaa
pop
inc
lret
pop
in
out
call
pop
arpl
cmp
fs
addb
jl
sahf
sub
add
push
jp
fnstenv
fists
js
and
lods
and
repz
fsubrs
sub
jne
fisttpll
inc
push
fs
shlb
jns
jae
and
dec
fstl
lods
fs
xchg
mov
fimuls
jbe
inc
cmp
aad
in
mov
gs
aad
fwait
int
and
sbb
or
push
adc
int3
jmp
mov
pop
nop
add
push
mov
repnz
in
leave
outsb
dec
ret
jecxz
fisttpl
test
dec
ljmp
xor
add
mov
lods
sarl
sahf
mov
test
mov
pop
push
loope
stos
dec
dec
mov
xchg
aad
jno
jbe
cltd
cmp
shr
cmpsl
pop
cmp
push
dec
fsubp
test
test
and
dec
fldl
sbb
mov
xchg
sbb
adc
and
movsb
nop
dec
mov
add
scas
sub
cmpsb
mov
mov
push
sbb
bswap
push
movb
aad
cli
rorl
hlt
sub
and
sub
xchg
popf
pop
ret
add
loop
loopne
add
jns
aad
aaa
enter
dec
int
mov
and
cmp
fidivl
outsb
in
mov
xchg
pop
clc
inc
rorl
out
movsl
fistpll
imul
arpl
test
add
mov
addb
nop
lods
adc
roll
lock
sub
ss
sbb
or
or
jbe
mov
dec
adc
sar
cmovp
xor
aad
dec
cltd
and
int
dec
sbb
out
sbb
cmp
sbb
sub
pop
push
push
lret
adc
rorb
scas
mov
enter
jne
adcl
mov
cwtl
call
loop
aaa
mov
dec
cmp
imul
and
insl
and
imul
adc
push
outsb
jnp
insb
cmpsb
aad
and
lret
das
or
add
xchg
out
and
dec
sbb
test
pushf
lea
int
dec
adc
xor
mov
mov
or
inc
nop
cmpsl
mov
aas
ss
xchg
add
div
xchg
xchg
or
xchg
sub
jp
adc
dec
mov
cmpsb
test
add
push
mov
imul
pop
test
addb
cmp
xchg
cmc
nop
icebp
fists
cmp
push
enter
jmp
xchg
addr16
les
mov
movsb
test
jnp
je
ss
dec
inc
dec
push
inc
mov
jmp
inc
lret
out
shll
fucomip
xchg
loope
pushf
jmp
jo
bound
xchg
mov
or
clc
cmp
xor
adc
aaa
mov
mov
in
mov
mov
add
mov
out
adc
fisttps
sbb
mov
stc
lea
xchg
push
dec
jmp
cmp
or
cmpb
stc
mov
sti
jb
mov
dec
adc
stc
arpl
dec
das
mov
xor
shll
mov
fwait
cmp
fisubrs
jmp
cld
pop
pop
mov
lcall
shrl
sbb
aam
xor
rsqrtps
dec
add
sahf
cwtl
dec
jno
add
jae
pop
jns
xchg
dec
xchg
mov
add
mov
sysexit
into
push
lock
test
lods
sub
daa
cmp
xchg
ret
sbb
push
lret
adc
lods
loopne
dec
pusha
stc
imul
mov
popf
xchg
add
push
std
imul
sbb
cmp
mov
enter
mov
xlat
int
jge
imulb
dec
outsl
adc
jle
lea
mov
jl
cmp
clc
xor
testb
inc
ret
gs
sbb
insl
mov
push
sti
xchg
rcrb
pop
in
rol
xchg
or
adc
in
test
cmp
mov
and
sbbl
add
cmp
xchg
inc
xchg
cmpsl
in
and
mov
adc
mov
imul
dec
pop
icebp
testl
imul
dec
push
mov
pop
jmp
test
es
lods
movsb
mov
into
cmpsl
adc
bound
movsl
cmp
fnsave
and
sbb
test
mov
push
mov
sub
pushf
cmpsb
jns
mov
scas
xchg
cs
xchg
icebp
push
push
adc
lahf
repnz
enter
sub
xor
shll
movsb
pop
cmpsl
outsb
test
xchg
repz
sbb
scas
or
mov
cmp
sub
imul
js
andb
fistl
jmp
mul
mov
xor
test
sbb
or
cmp
into
arpl
out
push
mov
mov
test
aam
call
fdivs
adc
aas
stos
roll
pop
xlat
test
cld
cmp
push
bound
ss
js
daa
mov
mov
call
into
or
frstor
in
mov
arpl
imul
jno
add
add
pop
adc
bound
call
pop
loopne
repnz
scas
stc
lds
xchg
fwait
xchg
mov
adc
mov
imull
popf
jp
mov
pushf
inc
mov
in
cmc
push
add
jo
in
mov
pop
mov
xor
sub
data16
sub
lcall
mov
fcoml
jo
xchg
cmpl
add
leave
sub
or
sbb
push
repz
mov
int3
mov
push
cmpl
sub
addl
xchg
jbe
mov
push
bound
xchg
xchg
fnsave
in
repnz
lret
leave
adc
mov
js
xlat
sbb
lahf
enter
and
in
aad
ja
je
fucomp
mov
ss
rcll
mov
imul
scas
leave
insl
dec
sbbl
lcall
pop
dec
int3
mov
mov
leave
jmp
mov
sub
imul
jb
ret
int3
cwtl
aam
rol
orb
icebp
pop
pop
xchg
rcrl
std
icebp
or
cmp
or
into
es
push
cmp
daa
mov
cmp
test
pop
push
fstl
adc
outsb
rorb
jbe
add
mov
add
mov
cmp
lods
or
ror
dec
lods
and
push
ja
push
in
push
and
adcl
mov
mov
mov
xor
stc
into
in
cmpb
aas
lods
mov
les
loopne
mov
testl
daa
movntq
pop
mov
hlt
pop
lods
push
in
push
ret
popf
call
popf
mov
scas
lods
xchg
or
fiaddl
add
pop
int3
popa
cmp
imul
add
xlat
dec
mov
fucomip
push
add
pop
mov
or
notl
mov
add
stos
sbb
iret
push
mov
dec
sub
movsl
sbb
dec
xchg
jnp
repz
fucomi
jle
fdivs
pop
gs
mov
mov
movsl
popf
push
ret
mov
pop
movsb
pop
arpl
mov
push
xlat
sbb
mov
lcall
scas
gs
mov
in
jne
xlat
stc
bound
mov
pop
cwtl
sbb
xchg
pop
cmpsb
pop
orl
imul
add
lods
stos
cmpsb
popa
jmp
dec
loop
nop
xchg
stc
jg
add
jns
mov
fsin
dec
add
jbe
rcrb
pushf
cmp
sub
xchg
dec
mov
jle
mov
or
push
stc
push
stc
iret
cmc
cmp
in
test
and
cmp
and
jne
jb
addr16
sbbb
sbb
out
dec
push
adc
icebp
out
cwtl
popf
pop
pop
sbb
mov
repz
jmp
sahf
cmpsl
shll
leave
pop
mov
jg
rclb
xor
std
mov
je
sub
mov
in
sbb
inc
xchg
imul
xor
sub
lahf
fld
stos
shlb
stos
pcmpgtb
pop
push
fucomp
iret
sbb
jecxz
adc
push
stos
inc
imul
cwtl
cmpsl
aam
mov
iret
sti
push
dec
adc
cmp
fwait
and
jmp
movb
mov
addb
test
or
je
dec
adc
jbe
lods
ret
repnz
xchg
fs
cmpsl
lods
mov
scas
insl
add
enter
imul
mov
into
aas
icebp
mov
adc
js
sub
bound
inc
or
xor
xlat
push
popa
jb
mov
add
daa
mov
xor
leave
mov
popf
jae
fidivrs
sahf
xchg
jbe
dec
inc
or
jae
out
gs
clc
cmp
sub
adc
sub
rcrb
cld
pushf
into
test
mov
add
rorl
adc
std
sar
adc
int
xchg
jno
sub
icebp
mov
negl
les
inc
cmp
data16
fdivs
pop
dec
aad
adc
sub
fldl
call
and
jne
in
mov
in
push
adc
rcr
jp
sbb
xchg
fidivrs
jp
pop
js
scas
lods
loopne
lret
cmp
adc
loope
and
mov
std
mov
aas
aad
push
dec
or
sub
shl
pop
imulb
push
or
push
fstl
add
pop
ficoms
sti
mov
push
sti
lods
ljmp
lea
mov
inc
pop
ja,pn
out
xchg
in
add
cmp
clc
test
mov
add
xor
in
push
test
sbb
cmpsb
sbb
xor
jnp
sub
mov
and
dec
adc
repnz
pop
sarl
mov
dec
or
movsb
cmp
or
sbb
sub
aam
scas
mov
outsb
add
mov
lods
or
outsb
sub
cmp
dec
das
roll
and
jo
mov
pop
popa
and
scas
jo
das
mov
sbb
push
pop
pop
pop
out
gs
xchg
bound
adc
push
sbb
inc
ljmp
mov
iret
out
call
je
xchg
xor
or
loop
fs
mov
mov
fisttps
and
negl
ret
jo
popa
sbb
mov
mov
inc
inc
out
pop
xchg
mov
cltd
dec
sub
scas
lock
imul
sahf
xlat
add
scas
mov
fsubp
ret
pop
mov
js
sbb
les
mov
outsb
sbb
or
xchg
sbb
test
fdivs
add
stc
adc
daa
lret
loope
aaa
inc
adc
insb
mov
add
lods
ret
and
pusha
out
add
hlt
sub
xor
sub
in
test
push
xor
or
loope
imul
cli
mov
daa
mov
or
hlt
cmp
cmpsl
sbb
shlb
xor
adc
shl
mov
mov
inc
ficoml
loop
inc
clc
subl
mov
jl
lods
sarl
push
test
movsb
js
xchg
lret
xlat
sub
pop
sub
inc
jno
jnp
ret
adc
jmp
xchg
mulb
popl
rcrb
and
jecxz
test
cli
lret
ss
js
mov
sbb
sbb
negb
pop
jbe
adc
lret
adc
addr16
pop
pop
pcmpeqd
jnp
push
into
outsb
adc
gs
cmpsb
add
addl
adc
mov
clc
push
and
outsl
popa
cmp
lahf
loope
stos
xchg
mov
xchg
sbb
call
shll
in
mov
dec
jo
pop
dec
pop
fsubrs
shlb
mov
je
dec
rcl
ja
mov
in
jb
pop
fildl
sti
push
fcmovbe
xchg
mov
xchg
pop
cld
xchg
push
cmp
jl
je
rorb
or
cltd
bound
jle
sbb
ja
jle
xchg
xor
push
sbb
mov
or
iret
sub
insb
sbb
data16
idiv
in
ret
jg
int
dec
lods
addl
out
loopne
insl
subb
int
jae
stc
and
mov
out
xchg
lcall
push
lahf
lret
mov
sbb
gs
leave
in
lods
mov
inc
aas
mov
ret
cmpsb
jno
inc
dec
lods
jbe
sub
mov
sti
cld
mov
gs
xor
stc
pushf
js
iret
arpl
into
push
test
mov
mov
ljmp
mov
dec
add
xor
fiadds
dec
test
inc
and
push
loope
inc
mov
imul
movsl
inc
rcr
shr
and
pushf
push
in
shr
xor
mov
fucomi
adc
jb
mov
and
xchg
sub
or
jp
in
xor
in
pop
fwait
jp
xlat
rcll
mov
cmc
mulb
sub
mov
adc
push
lds
dec
or
or
inc
adc
inc
test
shll
fstps
mov
inc
jl
out
sbb
cmp
or
and
imul
or
mov
shrl
jecxz
sbb
movsb
and
inc
fsubrs
stos
sub
cmp
loope
inc
pop
mov
je
jp
mov
adc
lret
sbb
push
aas
push
sbb
or
adcl
xchg
mov
stos
cli
inc
shlb
dec
int3
xchg
pop
push
cmpsl
jo
outsl
mov
cmp
inc
pop
dec
hlt
lea
scas
jnp
jb
cmp
negl
cmp
inc
pop
jg
sbb
push
xorb
enter
mov
pop
and
lock
mov
stc
int
sub
popa
iret
fmulp
mov
xorb
lods
test
inc
cld
pusha
adc
pop
lret
dec
mov
stos
xlat
fldcw
dec
je
sub
push
xchg
test
mov
js
cs
adcb
inc
mov
mov
lods
dec
stos
push
xor
push
lods
pop
adc
and
sub
fstpt
cmpsl
lret
fadd
mul
adc
cmp
dec
xchg
pop
inc
stos
frstor
repnz
pop
jp
mov
xchg
sar
xchg
cmpsl
es
addr16
xor
push
pop
sti
daa
push
add
daa
sub
cmp
loopne
mov
add
movsl
je
cmp
cmp
jnp
push
mov
jle
jbe
mov
fnsave
xchg
les
scas
imul
bound
fcompl
shll
push
movsb
cmp
outsb
push
adc
sub
ficomps
adc
jb
cmp
push
imul
into
sub
lods
pop
movsb
out
lret
adc
mov
mov
dec
ret
xor
inc
cld
mov
sarb
rcl
xlat
mov
xor
hlt
notl
mov
inc
add
lock
and
outsb
out
dec
xchg
cmp
out
stos
mov
lcallw
fistpll
loope
mov
sarb
mov
aam
sar
and
sbbb
add
xor
bound
mov
aaa
rorl
add
pop
mov
lock
cli
mov
sbb
inc
mov
loopne
scas
pop
xor
lahf
cwtl
xchg
xlat
pop
cmp
mov
dec
insb
mov
add
and
mov
sbb
pop
test
ss
cmpsl
aaa
push
sbb
xorb
xchg
mov
sarl
outsl
ret
ljmp
in
xor
mov
ss
push
in
xor
adc
xchg
aad
inc
xchg
xchg
and
xchg
ds
test
sub
insl
fstl
pop
push
xor
jns
fldenv
lods
mov
xchg
test
mov
mov
test
and
ret
out
arpl
inc
fst
int
and
mov
pop
jne
mov
stos
push
mov
out
shlb
insb
in
cmp
add
mov
insl
adc
xchg
xorb
or
or
aam
lret
mov
cmp
ljmp
push
or
jmp
sahf
outsb
pop
add
inc
mov
push
insb
scas
clc
insb
shrl
mov
cmc
xor
rcr
and
sub
push
aam
loopne
mov
cmp
shll
in
idivb
test
dec
iret
es
jl
xchg
leave
cs
mov
pop
js
inc
lock
pop
test
sub
adc
push
push
js
sti
into
mov
loope
mov
sub
in
push
test
mov
jno
out
clc
jge
adc
xor
xor
js
pop
repz
jge
push
inc
add
push
cs
dec
mov
inc
xor
or
pop
add
mov
sbb
add
and
add
xchg
inc
push
dec
call
and
cmc
jp
bound
push
fs
dec
dec
or
pop
ds
enter
or
cmp
mov
out
loop
jne
out
loope
fwait
or
pushf
sub
sub
lock
mov
int3
hlt
dec
sub
xchg
test
cmp
xorb
aad
in
insl
dec
rcll
cmpsb
and
clc
aad
in
jmp
push
or
and
fs
repnz
jg
dec
test
sbb
cltd
or
dec
loop
in
imulb
or
xchg
sbb
enter
aad
test
stc
aam
dec
leave
fiadds
jge
pop
jge
mov
xor
lret
mov
sbb
lcall
decl
mov
inc
scas
jnp
adc
rcrl
das
scas
sahf
push
pop
mov
pop
lcall
rcrb
pop
ret
jl
in
aas
and
add
inc
mov
inc
dec
lret
inc
fsubl
popl
sbb
cmp
das
xchg
scas
sbb
or
adc
mov
cld
gs
bound
push
pop
imul
and
das
or
insl
cmp
test
push
nop
in
push
or
jb
mov
test
push
inc
sub
mov
arpl
mov
mov
sub
dec
push
aas
ret
push
ds
std
sub
sbb
fildl
add
jmp
push
in
pop
fwait
push
mov
pop
ss
je
into
inc
inc
xchg
or
adc
shlb
ljmp
pop
or
mov
and
or
ss
in
push
mov
jge
push
int
jg
stos
scas
inc
xchg
cli
adc
add
adc
int3
stc
mov
aaa
push
stos
adc
mov
adc
enter
jbe
mov
mov
lret
fimuls
std
sbb
cltd
scas
lds
adc
outsb
je
mov
pop
or
outsb
push
arpl
rclb
std
bound
push
pop
add
inc
mov
mov
jl
cmpsl
mov
aad
cmp
push
outsb
mov
lds
jg
fwait
in
push
mov
dec
imul
push
adc
dec
bound
dec
stos
nop
scas
jecxz
sti
sub
scas
cmc
es
clc
adc
pop
push
cwtl
add
and
outsl
jge
movsl
cld
popf
pop
sbb
xor
mov
push
xchg
arpl
cwtl
test
xor
inc
filds
mov
inc
aas
push
dec
push
cltd
adc
xchg
mov
add
mov
mov
sti
jg
les
pop
jp
outsl
insb
add
imul
or
int
xchg
stos
testb
in
xchg
push
jecxz
es
jmp
nop
sbb
mov
push
jno
push
cmc
int
js
shr
or
add
cld
inc
jecxz
or
out
ret
push
mov
xchg
pop
pop
repnz
jae
adc
loop
xabort
inc
mov
out
test
pushf
inc
and
add
popf
fsts
fucomip
pop
fisubs
ds
or
loope
mov
jp
push
cmpsl
and
push
in
add
cmp
push
data16
fists
cli
push
mov
cs
divl
xor
mov
shl
mov
iret
repnz
mov
pop
call
xor
push
mov
lcall
js
add
adc
cmp
add
jmp
aas
pop
lret
dec
lods
pushf
sub
andb
fs
push
dec
jecxz
pop
mov
mov
add
sbb
aas
cmp
mov
mov
or
push
mov
cmp
in
ljmp
mov
mov
mov
lods
and
and
imul
mov
imul
push
pushf
add
stos
pop
imul
aam
lcall
nop
lcall
dec
inc
das
pop
and
dec
mov
pop
aam
cs
pop
fwait
inc
fldenv
mov
sbb
enter
cli
push
sarb
sub
addr16
clc
incb
mov
sub
push
loop
imul
jb
dec
xchg
sbb
sub
jl
jae
out
cwtl
shll
add
xlat
mov
es
fs
dec
aam
and
add
sub
inc
test
mov
mov
sbb
push
pop
bound
jns
test
or
fiaddl
les
mov
pushl
jo
std
pushf
mov
ret
cmp
mov
xchg
push
push
push
iret
outsl
cmp
data16
stc
push
and
pop
xchg
aad
push
pop
add
lods
gs
fisttps
cld
sbb
and
cs
adc
push
push
or
push
pop
sub
adc
dec
pop
rcrb
lods
test
pop
lods
push
mov
into
dec
inc
test
cs
push
addb
adc
xor
js
out
adc
in
gs
rcrb
push
and
inc
jecxz
jae
ds
cltd
mov
movsb
sti
sbb
test
sbb
fiaddl
push
mov
jb
jle
fldcw
call
sahf
and
rcll
xchg
sbbl
cmp
das
lock
xchg
inc
ja
imull
lock
cltd
dec
push
jle
dec
subl
or
es
divl
out
fdivs
mov
dec
dec
cmpsb
or
pop
push
push
push
fdivl
fisttps
enter
and
in
sarl
out
adc
call
movsb
mov
bound
push
xor
jbe
pop
fst
xor
and
sbb
xchg
out
push
dec
popf
das
in
fisttps
push
adc
xor
js
lea
adc
mov
pop
jmp
mov
jmp
movsl
xchg
mov
or
lds
lret
adc
pusha
add
xor
push
push
popf
aaa
je
jmp
lods
mov
mov
or
aad
xor
popa
mov
std
cmpsl
sti
xchg
dec
and
lret
cmp
inc
out
ret
xchg
jb
in
push
dec
pop
adc
mov
jb
push
pusha
jecxz
mov
jnp,pn
mov
xchg
and
sbb
mov
xlat
sbb
mov
push
cmp
mov
push
sbb
jno
mov
push
in
adc
xchg
and
js
je
mov
scas
repnz
aad
sarb
jb
dec
push
pusha
jg
scas
sarb
out
rcr
andb
cwtl
mov
into
add
icebp
aaa
nop
bound
mov
jno
fsts
and
cli
jg
popf
push
mov
ss
out
adc
jp
fwait
add
jl
mov
xchg
lods
mov
stc
xchg
je
pop
jp
push
sahf
mov
dec
add
mov
scas
stos
dec
cmp
xor
jg
mov
pop
sbb
add
hlt
fisubrl
sahf
cmp
icebp
lea
cli
movl
sub
bound
pop
sbbb
insb
enter
mov
inc
sbb
test
std
jo
xor
mov
pop
cmp
jg
icebp
gs
xorb
cmp
xchg
inc
mov
mov
cmp
lret
js
mov
pop
adc
dec
ljmp
or
repnz
cmp
movsl
pushf
sub
inc
cmp
add
pop
inc
cmp
and
rol
jg
je
stos
xchg
jle
add
mov
jmp
pop
sub
daa
stos
dec
scas
loopne
lcall
out
pusha
test
or
jg
mov
popf
adc
add
mov
dec
out
sub
mov
aad
inc
xchg
arpl
xor
sbb
mov
fcomip
idiv
cmp
sbb
cs
dec
cmp
popf
xlat
xor
iret
jge
icebp
adc
sbb
fdivrl
pop
mov
mov
jg
addl
jae
sbb
fdivp
cmp
imul
fistpll
and
jb
dec
jno
dec
mov
dec
mov
dec
pminub
xchg
hlt
cltd
dec
push
mov
and
out
fnstenv
sbb
xor
in
pop
sahf
fadd
mov
sub
pop
xor
adc
mov
adc
std
or
add
fcoml
clc
mov
adc
clc
and
inc
cmp
pop
lods
push
cli
out
cmc
sbb
xchg
jo
lar
jp
dec
inc
push
mov
enter
das
int3
jno
mov
xchg
mov
cmp
cmp
icebp
lock
push
not
xlat
jle
ret
lret
lods
mov
stos
inc
mov
lahf
cmp
xchg
xchg
mov
insb
sbb
adc
neg
mov
push
lods
mov
cltd
jle
ja
mov
or
lahf
add
fwait
inc
je
jge
inc
push
push
fwait
mov
mov
jmp
lock
adc
dec
sub
jo
lahf
inc
filds
dec
mov
mov
sub
mov
cmp
add
sub
leave
loopne
call
cmpsl
xor
ret
or
dec
out
mov
sub
icebp
ljmp
sub
push
movsl
out
jnp
mov
repnz
pop
int3
loop
lock
jae
adc
out
imul
xor
dec
push
push
inc
jnp
jb
es
adc
mov
push
push
cs
push
jnp
mov
push
frstor
scas
fld
xorb
mov
scas
dec
and
test
push
orb
sbb
pushf
add
add
xchg
pop
in
sbb
cmp
push
or
loop
jmp
notl
jge
lods
or
mov
pop
stos
add
ljmp
xchg
ffreep
xchg
pop
add
daa
popf
loop
xchg
and
mov
test
cmp
lret
push
cmp
mov
or
aam
aaa
inc
push
sbb
popa
incb
pop
test
cmp
push
push
call
push
in
aaa
loope
cltd
or
push
dec
mov
mov
in
ljmp
repnz
mov
mov
inc
repz
add
pop
pop
hlt
pop
sub
cmp
and
pop
popa
xor
lea
mov
mov
sbb
mov
inc
xchg
inc
and
jge
jmp
imul
loope
shll
sub
dec
sbb
loope
nop
mov
mov
push
jae
cmp
in
mov
push
sti
xor
aam
adc
jns
iret
test
bound
add
mov
arpl
push
mov
mov
dec
cwtl
push
or
mov
sbbb
mov
mov
leave
sub
cltd
or
iret
jnp
mov
xchg
cs
imul
sub
sti
push
loop
nop
mov
cmpsl
inc
push
mov
movsl
fmuls
xlat
dec
leave
mov
dec
std
cld
sti
cs
sub
int3
pop
pop
xchg
mov
jbe
loopne
aaa
cmp
xchg
icebp
bound
dec
sbb
test
lret
xchg
fsub
xchg
and
dec
mov
bound
xchg
loope
jns
mov
mov
call
icebp
or
dec
xor
imul
xchg
xchg
ret
gs
push
sub
add
rorb
scas
dec
mov
out
leave
xchg
rcll
and
mov
sub
adc
shll
mov
lods
inc
sarb
xor
in
pop
nop
push
mov
bound
fwait
mov
push
lods
lret
cmc
inc
push
push
xlat
mov
in
imul
in
pop
call
aas
inc
lret
mov
sub
ljmp
add
push
adc
orl
mov
mov
hlt
insb
inc
add
or
int
loop
aad
push
ljmp
xchg
daa
hlt
add
aaa
shll
dec
mov
lret
fsubrp
and
pop
lds
aam
sbb
cli
sbb
imul
xor
sub
aas
jo
lock
push
aas
testb
jae
xor
mov
jb
stos
cld
mov
push
push
xor
cmc
cmp
mov
lret
outsl
pop
jbe
in
lds
shlb
and
stos
mov
cmp
sub
loop
loope
fstpt
mov
and
jge
sti
sbb
mov
aam
mov
rcrl
ja
lods
imul
std
and
or
mov
aas
scas
dec
icebp
stc
adc
out
jae
jo
pop
jnp
lods
fcompl
add
sbb
insl
aam
into
pop
lock
out
scas
enter
mov
dec
or
subb
xchg
xchg
sbb
lret
or
adc
nop
fstpt
les
stos
cs
push
jno
jnp
push
and
push
pop
mov
dec
pushf
cltd
mov
ret
push
in
sub
and
sahf
stos
fcoml
shlb
out
jb
pop
jbe
and
dec
cmp
ja
lahf
pop
and
xchg
add
mov
and
movntq
aad
mov
sarl
dec
mov
int3
mov
fsubl
or
ret
dec
ret
push
mov
pop
rcrb
ret
test
lahf
cs
cmc
cmc
aas
jp
xor
cmp
pop
mov
mov
fwait
push
and
jg
std
imul
adc
outsl
popf
add
inc
loop
add
test
loop
lcall
out
shrl
stos
fdivrs
add
pop
shrb
cs
and
xor
mov
inc
jp
outsl
jmp
fildll
pop
lret
lods
mov
sbb
or
mov
push
push
xor
ret
sarl
sub
out
outsl
sub
aam
sahf
push
add
cmp
dec
cmp
adc
jbe
mov
cwtl
dec
dec
call
roll
dec
mov
sub
popf
cmpsb
pop
leave
cmp
mov
iret
pushf
or
addb
subl
lahf
fnsave
sbb
bndldx
mov
cmp
mov
jbe
xor
dec
call
adc
sbb
mov
mov
shrl
push
mov
arpl
push
push
xor
xor
lret
divl
mov
xor
push
ljmp
cltd
jbe
inc
sub
xor
push
repz
leave
lock
je
sub
cli
out
xchg
sub
out
mov
ret
push
mov
repnz
out
pop
mov
adc
add
jge
stos
adc
pusha
dec
xor
pop
dec
popa
lea
xor
and
jp
fcoms
cmp
shlb
adc
push
cmpsl
shrb
lods
lods
outsb
mov
xor
lret
mov
aam
jmp
pop
sub
cmp
jecxz
sbb
mov
shrl
fcomps
shrl
addb
fneni(8087
pop
add
test
hlt
mov
inc
sbb
into
sbb
loopne
xor
add
cmc
xchg
enter
aam
lahf
lds
mov
in
xchg
push
enter
inc
cmp
nop
mov
inc
aad
repz
aas
in
jp
dec
outsb
ss
xchg
mov
mov
test
dec
add
inc
or
rcr
addr16
in
sub
sbb
insb
jo
inc
js
cld
xchg
fdiv
push
pop
outsb
mov
outsb
sub
loope
adc
jecxz
iret
fmuls
repnz
das
cmp
add
imul
call
mov
mov
add
nop
orl
add
mov
and
mov
leave
enter
outsb
sub
movsl
push
dec
pmaxub
fisttpl
sub
mov
lea
imul
dec
lds
mov
xor
movsl
int
lcall
sahf
pop
leave
adc
sarl
div
insl
jo
mov
xlat
jbe
mov
dec
lea
jbe
push
je
ljmp
cli
mov
aad
sub
add
in
fisubs
pushf
cwtl
push
mov
push
inc
add
or
out
daa
push
add
push
add
inc
popf
cmp
sub
push
xor
sbb
pop
add
jae
arpl
mov
xorl
pop
mov
inc
adc
pushf
adc
cltd
adc
jne
dec
mov
adc
inc
jbe
std
push
cmp
xor
ss
dec
sub
call
mov
movsl
and
sti
das
inc
dec
icebp
pushf
cld
out
xchg
dec
inc
rorb
or
and
mov
mov
mov
adc
xorl
mov
popf
call
mov
ret
mov
clc
pop
jge
add
xor
xorl
stos
mov
iret
or
sub
fistpll
mov
adc
mov
cmp
xchg
xor
and
data16
repz
call
and
mov
ror
push
sbb
xchg
xor
lret
imul
fdiv
jae
lods
lahf
adcb
jle
int3
daa
or
or
adc
aas
mov
xor
pop
xor
sahf
popa
jge
or
test
shrl
aad
adc
dec
inc
aam
xchg
mov
ret
cwtl
loope
xor
sbb
mov
push
nop
mov
lret
mov
insb
jno
jne
mov
or
sbb
jg
xor
jb
inc
out
push
mov
xchg
leave
jmp
push
xor
and
aam
mov
inc
loope
mov
leave
adc
aas
cltd
or
xchg
jns
bound
lcall
pusha
cltd
in
jae
les
fstpt
enter
cmp
repz
cmp
lret
lods
mov
in
mov
in
xchg
fstpl
adc
pop
popf
idivl
push
jecxz
pop
fptan
xorl
dec
into
test
lea
dec
cmp
loopne
jle
pop
mov
or
sub
add
or
rcrl
push
cmp
xor
xchg
aaa
call
call
and
icebp
pop
adc
mov
xchg
ret
scas
out
mov
das
sbb
sbb
adc
pop
push
jl
cmp
in
repz
gs
popa
sbb
sbb
xlat
ljmp
ficomps
test
cmpsb
xor
jo
in
dec
inc
daa
cmpsl
int
mov
jne
push
and
in
push
mov
insl
pop
outsl
mov
mov
ljmp
and
mov
mov
pop
xchg
or
icebp
xor
jnp
insb
jge
mov
mov
shll
cmc
scas
push
ss
movsb
daa
xchg
adcb
xchg
int
inc
js
jns
in
fists
push
clc
out
jle
cli
jge
shl
mov
faddl
ret
jno
dec
adc
frstor
mov
fwait
add
repz
pop
xor
icebp
cmp
fisttpll
fbld
mov
mov
je,pt
mov
sub
pop
jg
xchg
nop
idivb
inc
loopne
or
mov
cld
mov
fsubrs
js
lahf
mov
into
enter
pushf
xor
xchg
daa
in
movsb
lock
outsb
pop
lcall
inc
mov
in
lds
jp
dec
xchg
add
sub
daa
pop
adcb
mov
jl
cs
jp
ss
cmpsb
ja
lcall
int3
ficompl
sbb
fnstcw
push
mov
insb
mov
cli
add
iret
dec
push
push
adc
setne
or
mov
sub
aad
popa
aam
jbe,pn
nop
shrl
ret
aad
push
idivb
mov
mov
and
fldenv
mov
fidivs
gs
sahf
insl
add
dec
outsl
dec
or
inc
jg
mov
sbb
repz
add
lret
inc
mov
mov
inc
pop
sbb
call
cmp
outsb
sbb
or
pop
loopne
pop
out
sub
and
mov
xchg
push
mov
cmp
ret
cmpsl
test
jbe
push
inc
xchg
imul
and
fs
xchg
icebp
out
testb
add
sarl
inc
insb
lods
sbb
push
cmpsb
cmp
mov
test
push
cmp
popf
daa
sub
adc
jecxz
and
sub
adc
shl
in
call
rcll
xor
clc
pop
inc
imulb
in
lods
ljmp
xor
ficomps
int3
push
or
test
sub
dec
repnz
sbb
test
ss
jnp
mov
fnstcw
push
dec
mov
jg
inc
insb
or
dec
sub
icebp
and
cmp
push
adc
rcrl
push
lock
jnp
sub
push
mov
inc
and
fbstp
adc
inc
hlt
jno
popf
loopne
pushf
je
into
shll
and
dec
je
in
mov
shll
mov
push
sbb
mov
push
inc
inc
pop
mov
mov
loop
cmc
fucomp
iret
into
xchg
adc
adcl
std
jge
xor
sub
adc
lret
sysenter
or
adc
jb
clc
jge
out
mov
sti
jg
add
fs
mov
and
mov
inc
aas
neg
jle
mov
test
sbb
inc
or
rorl
sahf
push
inc
pop
cmp
imul
mov
inc
imul
mov
inc
pop
shll
mov
fmuls
jle
nop
in
pop
mov
dec
mov
ljmp
xor
out
ljmp
into
xor
std
out
lahf
fs
movsl
into
popf
sti
xchg
mov
test
je
out
pop
push
mov
fmul
push
inc
cmp
add
push
cltd
mov
sub
test
loopne
cmc
rcrl
jg
add
sub
add
mov
filds
lods
imul
jne
cwtl
insl
pop
lods
shll
xchg
sub
xchg
mov
out
push
js
in
and
insb
cmpb
xor
les
xchg
dec
shrb
add
mov
sbb
mov
jne
insl
inc
add
nop
adc
out
hlt
sbb
sti
mov
inc
mov
lret
add
inc
fdivrl
cld
or
in
pusha
popa
enter
fnsave
test
inc
mov
subl
fdivs
ret
mov
leave
daa
cmp
fisubs
push
stos
insb
fsubrp
cs
arpl
scas
pop
xorb
fisttps
dec
pop
push
sbb
mov
mov
jge
mov
fisubs
mov
jnp
xchg
jecxz
mov
xor
mov
scas
xor
movsl
out
loop
lcall
pop
xchg
out
int3
leave
call
mov
loope
mov
ss
push
or
pop
dec
jno
lods
add
and
xchg
or
aam
mov
ss
subb
or
pop
outsb
fstps
mov
into
xchg
das
xchg
sbb
in
jb
fldt
pop
inc
nop
mov
mov
pop
sbb
js
lea
adc
and
xor
cmp
push
shll
daa
xor
shlb
inc
jmp
jb
repnz
aas
mov
loopne
dec
pushf
sub
sahf
mov
pop
ret
imulb
sbb
scas
addb
sub
sbb
in
xchg
lret
xchg
and
insl
mov
and
imul
or
cmp
mov
jno
xor
pop
xchg
dec
iret
data16
add
mov
cmp
lahf
loopne
pop
xor
inc
jge
inc
or
sub
rorb
fs
sub
ja
mov
lcall
or
push
xchg
adc
je
mov
mov
negl
mov
test
cmpl
jne
lods
push
mov
jb
inc
jp
test
pop
xor
lahf
mov
mov
hlt
xor
cmp
stc
ss
mov
jecxz
adc
push
repnz
push
sub
inc
addr16
xor
andl
outsl
add
sbb
mov
scas
sbb
fldt
das
negb
mov
add
adc
pop
xlat
fcmovnb
pop
enter
clc
add
cmp
xchg
ret
adc
adc
jmp
shll
gs
loope
jg
push
sahf
cmovp
inc
xor
inc
sti
jns
xor
mov
cmp
cmpsl
stc
clc
insb
loop
outsb
sub
cwtl
xor
fiadds
or
repnz
add
adc
and
jge
dec
lods
test
movsl
ja
insl
add
addr16
fiadds
rcrb
lret
add
adc
loopne
stc
or
test
xor
jne
mov
icebp
aam
ss
sbb
jns
stos
push
fwait
sti
jno
jo
fisubrs
mov
add
xchg
xchg
mov
jl
dec
cltd
or
dec
mov
fsubrl
hlt
in
pop
pop
sahf
shlb
sub
lcall
add
roll
add
cmp
arpl
push
cmp
cmp
sbb
scas
mov
int
fsubp
ja
shll
xor
cmp
sahf
arpl
loop
sub
hlt
inc
inc
mov
push
jb
add
push
int
mov
mov
mov
ret
pop
pop
clc
inc
je
cmpb
imul
mov
lock
pop
outsl
cmp
sub
add
cmp
mov
je
jl
imul
ret
inc
sub
mov
adc
les
idivl
mov
sbb
mov
in
lret
jmp
push
ljmp
pop
mov
xchg
fsin
icebp
iret
enter
jle
dec
jno
fs
clc
pop
sub
imul
sbb
and
cmp
dec
push
mov
dec
ja
mov
sbbl
add
xor
mov
xor
sub
pop
mov
cmp
inc
popa
cmp
sbbb
test
push
inc
sti
xor
push
les
dec
or
test
push
adc
xchg
push
add
icebp
test
test
jnp
dec
sub
fdivs
add
ja,pt
enter
mov
aaa
mov
gs
pop
push
mov
leave
pop
dec
movsl
in
and
jl
inc
dec
test
jne
cs
jae
ss
into
inc
out
icebp
arpl
mov
popf
xchg
addr16
nop
adc
xchg
jne
pop
outsl
xchg
not
in
push
fadds
loop
jge
out
add
fsubs
mov
add
push
mov
mov
and
insb
ret
dec
jge
sub
out
cmp
out
imulb
inc
mov
push
icebp
in
ret
les
pop
out
call
jbe
notl
mov
xchg
mov
add
sbb
lret
inc
lret
cld
inc
fs
insl
stos
clc
cltd
and
and
dec
pop
and
mov
rcr
aad
jp
mov
dec
sub
add
and
push
push
ja
cs
xor
hlt
xchg
pop
xor
or
cmpb
mov
fmull
mov
cli
call
xchg
cs
scas
mov
das
lds
inc
xor
xlat
inc
popa
inc
loope
mulb
cmp
mov
pop
movb
and
mov
xor
dec
sahf
push
cld
pop
out
or
pop
jne
mov
stos
aad
pop
jp
xchg
lock
sahf
cmp
in
frstor
and
aas
mov
xor
out
or
cmp
dec
adc
movsb
inc
adc
lcall
dec
adc
fisttps
jne
pop
pusha
xlat
xchg
pop
gs
sbb
pop
lea
sub
mov
xor
sahf
mov
jmp
data16
icebp
lds
mov
sbb
mov
mov
not
mov
mov
loopne
pop
sbb
data16
data16
jnp
pop
and
mov
jns
jge
fadd
mov
xchg
notl
pop
ds
in
add
mov
hlt
jbe
popa
xor
jl
js
dec
xor
lcall
bnd
and
xchg
subb
jle
addr16
es
sti
push
inc
pop
js
insb
inc
test
ret
iret
mov
push
shrl
ja
dec
fdivl
mov
stc
insb
test
out
std
fwait
outsl
xor
subb
mov
push
loopne
aad
xchg
xchg
into
xorl
mov
xchg
and
push
push
mov
in
dec
out
xchg
lods
shrb
jnp
out
loopne
cltd
fninit
dec
xchg
pop
jl
mov
lea
mov
and
scas
jne
movsb
pushl
push
push
jecxz
push
and
loop
maskmovq
notl
sub
inc
xor
inc
int
sahf
cmp
jnp
int
out
stc
das
rorl
inc
ljmp
inc
xchg
data16
lcall
cwtl
rcll
jmp
ljmp
inc
push
jnp
mov
mov
mov
and
cwtl
xchg
cltd
repz
push
adc
cli
pop
inc
push
fs
das
pop
push
cmp
add
fbld
lret
dec
xchg
mov
push
int
mov
cmp
mov
inc
test
adc
nop
xchg
xchg
daa
loope
push
sahf
inc
imul
ja
rcrl
sbb
mov
loopne
dec
hlt
dec
or
push
push
int3
fs
push
adc
adc
out
imul
jae
inc
xor
iret
xchg
stc
repz
mov
jnp
in
add
mov
push
xor
subb
imul
imul
xchg
sub
cmp
mov
test
les
out
adc
or
leave
dec
jb
mov
mov
jg
movl
and
cs
jp
inc
sub
jae
rep
dec
mov
push
cltd
mov
test
ja
push
aas
adc
jns
adc
fimull
data16
dec
out
mov
mov
or
xchg
fiadds
adc
shll
sbb
iret
xor
and
pop
or
inc
cltd
push
dec
iret
loope
mov
or
xor
dec
jae
or
imull
popa
jne
loope
icebp
mov
or
or
fists
xor
vmovapd
insl
daa
arpl
mov
bnd
cmp
imul
jg
pop
xchg
inc
aas
adc
ljmp
mov
mov
mull
das
xor
sti
loop
aad
cld
ror
movsb
lret
cmc
or
popf
dec
cmpsl
ret
sahf
aad
pushf
cmp
sar
cmpsl
in
cmp
mov
mov
ror
jno
fnstenv
outsb
inc
adc
lods
leave
adc
pop
pop
rcr
ret
push
sub
sbb
xchg
sbb
bound
leave
mov
push
and
mov
hlt
sbb
xor
sbb
add
push
test
dec
je
paddd
or
stos
push
out
rcll
aad
pop
clc
mov
jge
nop
stc
inc
dec
push
ret
loop
adc
cltd
inc
test
mov
test
int
sub
inc
jb
enter
int
ljmp
cmpsb
call
push
data16
cmpsb
int3
mov
or
stos
pop
jge
rorl
scas
std
xor
pushf
cmpsl
cmp
adc
out
movsb
test
sub
or
inc
jge
pop
mov
mov
xchg
addr16
xor
dec
popf
mov
out
pop
jmp
push
ret
mov
adc
xchg
js
arpl
cld
jo
xchg
sbb
adcb
adc
aaa
test
sub
dec
cltd
xor
mov
dec
shll
sub
and
or
lea
jns
addr16
or
outsb
mov
int3
aas
cmp
cltd
out
popa
loope
loope
mov
aad
in
inc
cmpsb
test
repz
leave
sti
jl
jo
pop
or
push
push
or
inc
iret
fadds
dec
bound
xor
les
sbb
push
and
leave
jno
or
dec
es
iret
mov
scas
push
pusha
add
pushw
xchg
repz
mov
adc
test
and
mov
push
shl
enter
jg
int
xchg
add
lds
or
pop
add
pop
mov
mov
and
or
mov
and
into
or
adc
cmp
popa
movsl
mov
jo
jbe
push
mov
inc
pop
inc
jo
insl
ficoml
dec
mov
fcmovnb
xchg
mov
mov
inc
xor
ret
jnp
mov
popa
add
ror
cs
ljmp
enter
mov
arpl
cmp
jns
inc
and
jno
lods
mov
es
adc
jo
pop
xchg
orb
jb
mov
pop
pushf
sub
pop
es
in
xor
mov
movsl
nop
pushl
insb
lods
and
inc
ljmp
xchg
fcoms
xchg
scas
push
add
call
adc
into
pop
bound
cmpsl
push
xchg
fiadds
out
dec
jge
add
stc
xchg
sbbb
movsb
dec
cmpsl
xor
sbb
jle
in
dec
in
ficoml
cmp
dec
jnp
cmc
pop
push
clc
sub
outsb
mov
outsl
addl
xor
loop
outsl
add
add
xchg
imul
xchg
jo
xchg
or
ljmp
andl
addb
push
adcl
repnz
pop
push
push
lods
inc
push
hlt
daa
jnp
insl
imul
mov
or
xor
clc
fisttpll
cwtl
shlb
inc
pop
lods
pop
push
add
push
iret
movsb
or
jecxz
mov
mov
jno
and
aaa
bound
adc
lods
cmc
pop
xor
loopne
pop
push
cmp
jmp
push
pop
aad
or
enter
fmulp
fcoms
push
fmull
rcll
rclb
inc
or
mov
mov
stc
and
sub
je
jmp
push
sti
or
movsb
aam
repnz
sbbb
add
xor
divb
mov
pop
xchg
jns
adc
cltd
xchg
add
adc
xor
mov
dec
adc
adc
sbbb
sub
rcll
ds
cltd
stos
jo
pop
dec
sub
pop
or
push
test
test
and
sub
cs
popf
cmp
ds
outsl
cmp
rcl
int3
lock
loop
pop
push
clc
test
fsubrs
sbb
lret
pop
das
xchg
push
mov
in
add
cld
add
lcall
mov
jmp
jo
or
adc
adc
hlt
mov
ljmp
ret
mov
jmp
push
xchg
test
push
cmpb
in
outsl
lds
xor
in
in
fadds
testl
stc
push
jae
cs
ljmp
shll
mov
adc
and
jge
pop
vpsubsb
add
fdivr
pop
push
icebp
xorl
mov
and
mov
xlat
push
dec
mov
sbb
sbb
cmc
je
push
jo
mov
sbb
push
out
jmp
js
insl
cmp
push
pusha
xor
scas
decl
rcrb
xchg
mov
lcall
jecxz
out
lds
mov
test
mov
xor
pop
jmp
imul
out
iret
push
fldt
cmp
movsl
xchg
faddp
mov
call
inc
and
mov
push
outsb
lods
hlt
mov
lods
ja
mov
push
outsb
popl
dec
cmp
out
lret
ret
adc
cltd
ljmp
jge
mov
adc
mov
inc
and
mov
dec
mov
push
adc
xchg
addr16
out
out
jae
addb
cmc
mov
xor
xor
mov
xor
add
test
cmp
cmp
ds
imul
ljmp
imulb
push
fcomps
mov
fcmovne
push
xchg
fnstenv
or
adc
xlat
mov
dec
lret
inc
testb
clc
loop
cmp
in
mov
pop
fwait
pop
add
les
shl
jb
xchg
xchg
hlt
daa
mov
outsl
repnz
fcomps
sub
daa
push
fidivs
dec
mov
sbb
int
mov
adc
add
cmp
jecxz
dec
fadd
and
or
addr16
outsb
push
daa
xor
fsubs
popf
pop
js
pop
dec
jp
sbb
mov
push
xchg
mov
std
mov
lea
outsb
xchg
adc
sub
adcl
jb
or
mov
xchg
sti
das
mov
mov
adc
mov
mov
lds
outsb
mov
imul
inc
hlt
movsb
jae
scas
xor
in
cmpsb
or
pop
mov
pop
inc
test
pushf
nop
mov
push
dec
push
aas
mov
divl
inc
test
and
and
stc
fists
sbb
sbb
pop
inc
mov
and
testl
shrl
in
roll
lods
sbb
jae
mov
xchg
xchg
int
push
adc
ljmp
push
xorb
dec
adc
xchg
in
or
push
sub
ret
aaa
movsb
mov
jg
lcall
pop
outsl
lret
push
mov
add
movsb
aas
mov
js
jae
dec
ja
loopne
icebp
sbb
fidivl
add
xchg
jbe
shrl
ret
bound
jge
cmpsl
cmp
pop
leave
movsb
pushf
repz
sub
popa
test
out
pop
and
inc
int3
and
rolb
pop
pop
inc
int
xchg
icebp
stos
loop
push
rorb
enter
xorl
inc
cmovge
test
adc
pop
jo
add
inc
dec
into
mov
cmpsl
and
xchg
pop
add
push
xor
mov
out
lret
pusha
in
sbb
or
xlat
lods
test
shrl
les
imul
bound
xorb
adc
dec
push
das
jne
xchg
xchg
pop
lock
ss
adc
scas
lds
mov
mov
xor
testb
xor
in
ss
fdivr
lods
ja
pop
add
cmp
mov
outsb
cmp
cmp
fwait
mov
xchg
inc
xchg
lock
add
jae
dec
lcall
shlb
stc
mov
xchg
insb
and
sbb
adc
mov
or
out
jp
jnp
out
testb
push
iret
jo
push
xchg
dec
loope
sub
xchg
mov
addr16
cwtl
dec
jne
push
xchg
js
rcl
clc
fwait
cmp
sbb
xchg
pusha
cmpsl
dec
shlb
popa
rolb
and
xor
ficoms
cmpsb
lea
jge
cmp
dec
xor
pusha
mov
adc
xlat
test
jnp
dec
or
sbb
cmp
shr
imul
push
js
jg,pt
leave
insl
test
repnz
xorl
pop
add
icebp
imul
fisttps
clc
icebp
int3
mov
push
xor
jmp
outsl
push
lea
fistpll
into
sbb
jns
mov
addr16
cmpsb
les
sahf
mov
mov
and
xor
xchg
sbbb
push
mov
stos
ret
mov
rcl
ljmp
pop
pusha
in
sbb
push
dec
dec
repnz
mov
xchg
sbb
cs
rclb
sub
aas
sbb
stos
mov
movsl
lods
stos
cltd
and
jl
fucomp
mov
jmp
mov
mov
imul
sbb
loop
jp
pop
mov
pop
stos
ss
jg
lds
mov
pop
sbb
cmp
jo
sbb
fisubl
pop
jle
mov
mov
decl
movsl
lock
ret
lock
shll
into
in
jge
insb
inc
cmpsb
mov
movsl
adc
push
gs
jge
xor
popa
cmpsl
fsubl
jbe
dec
test
xor
lret
shr
pop
push
inc
adc
lods
lods
out
scas
or
or
adc
roll
xor
movsl
rcll
lea
jnp
insl
ja
aaa
and
xchg
push
adc
sub
outsl
dec
loope
sbb
test
jo
cltd
mov
lds
loope
rol
pop
dec
fldt
je
test
das
insb
mov
dec
aas
xor
lahf
lods
daa
scas
lods
jp
adc
mov
push
stos
mov
xlat
cmp
out
pop
mov
push
push
dec
xlat
ja
adc
adc
inc
lcall
mov
inc
shrb
ret
xchg
xchg
xor
and
insl
popf
pop
xor
sbb
mov
add
cmp
sbb
scas
push
dec
jg
stos
clc
dec
repz
push
and
mov
sub
mov
xor
fildl
xor
pop
push
jno
out
lahf
add
lods
ficoms
cmp
or
mov
repnz
call
sub
daa
xchg
clc
out
mov
push
repz
jo
data16
jae
out
and
sbb
sub
add
out
loopne
fstpl
mov
or
loopne
js
jbe
mov
inc
xchg
int3
inc
push
or
add
mov
jo
push
jg
addr16
cmp
sbb
mov
xor
pop
push
rcll
pop
lret
movsl
fcmove
add
rolb
pop
aad
out
shl
or
mov
mov
sbb
pop
sub
and
xorb
lock
out
repnz
sub
arpl
int
pop
cmp
or
or
lods
addr16
in
jns
rolb
in
ljmp
jl
mov
fdivs
jno
movsb
pop
je
subb
cld
shr
adc
xorb
inc
push
xor
push
lods
aaa
adcb
xchg
adc
cmpl
mov
cld
in
out
jecxz
sbb
mov
pop
in
popf
or
lcall
fisttpll
repnz
test
mov
rolb
push
xchg
push
and
cmpsb
mov
sub
jl
add
pusha
std
daa
lods
movsb
pop
dec
pop
push
inc
mov
ret
movsl
cmp
mov
aaa
pushf
data16
sbb
mov
adc
xchg
or
fidivrl
enter
mov
fstpl
jo
imul
loopne
ds
arpl
pop
cmpsl
stos
and
dec
je
leave
cmp
pop
repnz
loop
sub
subb
push
mov
jp
push
dec
pop
mov
pop
inc
pop
dec
mov
insb
ret
mov
ret
lods
mov
in
stc
rorb
mov
or
mov
push
scas
inc
test
fstpl
sarb
sbb
pop
gs
mov
jl
fisttps
adc
insl
jae
jle
movsb
pop
mov
cwtl
jge
ret
scas
or
inc
movsl
mov
aaa
push
icebp
rcl
xor
call
push
scas
dec
mov
add
jmp
pop
xlat
pop
pushf
pop
pop
xchg
dec
jecxz
repz
mov
pop
xchg
das
pop
mov
mov
invd
cli
jg
push
cltd
push
xor
push
sub
cmp
hlt
sub
and
and
push
ret
or
ficomps
mov
and
push
stc
push
fisubrs
jle
in
ret
adc
dec
adc
subl
inc
in
cwtl
cld
loop
ds
lret
cmpsb
mov
leave
dec
xchg
sub
out
out
int
lcall
and
inc
xchg
add
shrb
es
stos
fistpl
jmp
xchg
jne
mov
popa
push
and
sahf
cmp
bound
aas
xlat
mul
cld
cli
pusha
and
inc
cmp
gs
add
rcr
rcrb
es
sahf
int3
mov
mov
ffreep
inc
popa
jo
and
mov
push
cmpsl
add
sbb
dec
or
add
fsub
pop
add
arpl
sub
add
push
cmpsb
es
cmp
xlat
lods
into
jg
xchg
mov
jae
inc
add
mov
cltd
iret
fidivs
jl
pushw
rolb
pop
hlt
jnp
adc
aas
xor
clc
and
test
mov
out
aam
subb
add
cs
mov
mov
sbb
popf
xor
dec
rcr
inc
push
xchg
int3
mov
into
sbb
push
cld
dec
adc
dec
pop
cmp
push
jle
lea
inc
sub
hlt
dec
imul
rcrb
mov
sub
mov
mov
push
jle
rclb
fstpl
jmp
int3
sbb
cmp
pop
pop
stos
pushf
fsubl
and
adc
pop
loop
mov
rcll
xor
mov
inc
xchg
mov
mov
movsl
and
es
push
cs
xor
adc
in
jb
dec
or
es
test
pop
cmp
push
andb
iret
call
or
std
dec
stos
xchg
xchg
xlat
push
xor
ja
push
je
xor
pop
dec
and
push
aas
add
add
enter
in
pusha
pop
xchg
imul
ret
add
jno
js
mov
jle
in
push
xchg
ret
mov
les
ljmp
mov
jmp
out
inc
bound
subb
mov
adc
mov
shl
xchg
inc
scas
pushf
sub
cmp
je
hlt
lcall
xchg
mov
push
mov
or
xchg
xor
loope
dec
add
adc
addr16
pop
mov
cmp
stos
push
fsubrl
sti
and
aaa
mov
and
iret
add
push
lods
inc
push
pushf
aas
mov
test
adc
mov
es
imul
sub
addr16
pop
push
lahf
mov
jmp
lret
fdivs
inc
fstpt
or
dec
pop
popf
add
mov
pop
jle
jb
mov
push
xchg
mov
popa
dec
cmpsl
push
scas
xor
jp
stos
sub
hlt
outsb
jl
and
popf
repnz
xchg
inc
pop
mov
arpl
xchg
mov
sbb
int
xor
jl
ljmp
xchg
out
mov
js
xchg
dec
xchg
push
insb
fcmovbe
jne
aaa
xor
sbb
popf
cmpsl
test
int
int3
mov
jne
xchg
sub
pop
in
jle
cs
nop
data16
cmp
inc
lods
xchg
loope
fxch
pop
sbb
jmp
ljmp
nop
push
cltd
push
fistl
push
push
lahf
pop
fistl
or
out
mov
sahf
xchg
and
inc
or
ficoml
test
pop
mov
pusha
dec
add
add
test
ja
rcrb
push
cmp
cwtl
loope
jno
push
dec
insb
or
cmp
hlt
imul
add
hlt
add
cmpl
jle
scas
ljmp
push
inc
adc
inc
inc
xchg
pop
mov
out
pop
stos
push
ficomps
inc
xlat
pop
mov
add
or
in
iret
cmc
mov
dec
mov
push
mov
ficoml
jae
fs
es
inc
cs
push
fwait
mov
mov
sbb
or
xchg
push
jge
inc
lcall
mov
push
lea
mov
mov
xchg
ficompl
pushf
mov
jmp
loop
add
lods
jge
mov
out
divl
subl
es
inc
add
shrb
insb
clc
push
addb
jge
mov
push
jbe
adcl
add
lods
pop
mov
sub
mov
arpl
flds
xchg
pop
add
and
add
mov
inc
outsl
inc
rorb
in
in
roll
fimull
fs
jns
adc
dec
inc
loop
pop
sbb
nop
sub
adc
pusha
test
cs
lods
mov
test
pop
pop
mov
mulb
and
imul
je
lods
shl
negb
jns
xorl
lret
loopne
into
in
push
jge
sahf
int
pop
sub
movsl
add
pop
fwait
xchg
xlat
das
pop
stos
dec
shlb
mov
andb
repz
mov
add
mov
mov
test
jno
or
repnz
or
test
test
inc
popf
outsl
inc
or
aam
xor
es
test
cmp
and
cmpsl
pusha
in
movsl
add
nop
aaa
add
sti
xchg
xlat
icebp
scas
inc
mov
mov
imul
mov
loope
aam
jl
sbb
int
add
mov
fiadds
stc
push
xchg
ss
pusha
scas
or
cltd
pusha
pop
or
and
cld
add
arpl
push
inc
push
push
into
rcl
addl
mov
arpl
mov
pusha
adc
insb
cmpsl
mov
repz
dec
xlat
jle
stos
sti
gs
dec
mov
jb
test
mov
cmp
or
lock
clc
add
cwtl
dec
fidivs
repz
fsts
pushf
push
cld
pop
cmpsb
out
popa
cwtl
les
out
adc
scas
cmpl
icebp
jbe
jbe
lcall
imul
scas
lods
pop
add
pusha
scas
lods
clc
sbb
adc
push
push
ret
fsub
and
mov
xlat
push
xor
add
mov
daa
das
cmpsb
stos
sub
loope
insl
mov
sbb
xchg
push
add
fucomip
cmpsb
not
ja
cmp
mov
mov
lahf
mov
leave
sar
das
clc
mov
push
mov
mov
sub
int
jg
pusha
xchg
xchg
nop
xor
imul
jmp
sub
dec
into
add
cld
push
cmp
out
cli
enter
mov
adc
mov
or
xor
cld
jecxz
lods
outsl
cld
mov
ds
xchg
pop
es
dec
aad
mov
or
mov
push
fisubs
xor
dec
lret
aad
jns
or
mov
packsswb
add
negb
xchg
ret
test
mov
loopne
xchg
pop
scas
push
jns
add
ret
pop
pop
fs
ret
jns
dec
loope
scas
push
scas
push
mov
push
add
lods
pusha
mov
dec
mov
adc
mov
jmp
sub
sub
cltd
lret
pop
or
ds
bound
loope
cmpsb
pushl
sbb
jge
mov
push
and
xchg
push
std
inc
mov
cmp
add
mov
loop
sbb
mov
adc
xchg
ss
int3
in
aaa
mov
mov
and
out
gs
sti
mov
inc
jmp
mov
insl
rcr
cmpsb
pop
jne
sbb
or
andb
inc
mov
enter
lock
adc
movsl
push
adc
mov
aaa
and
mov
push
enter
in
xchg
push
jae
pop
mov
test
xor
arpl
insb
aaa
xor
scas
inc
aaa
ror
test
mov
adc
sar
jo
cmp
nop
inc
jg
sti
push
and
in
dec
mov
out
fwait
dec
cmc
or
push
imul
lret
jmp
stos
in
pop
pop
push
push
mov
ja
cmp
xchg
arpl
orl
seto
sbb
xor
and
mov
popf
dec
dec
and
mov
test
lods
je
mov
stos
in
outsl
pop
push
and
cmp
jo
rorl
daa
xor
stc
inc
dec
fs
dec
mov
fiaddl
cmp
je
and
cmp
add
sbbl
iret
dec
ret
cmpsl
xchg
ss
xchg
jbe
xchg
aaa
push
add
jae
loop
sub
cmp
movb
out
scas
lahf
pop
or
fimull
mov
xchg
and
add
inc
outsb
jne
stc
popf
js
sub
mov
sbb
mov
ret
sbb
movsb
xchg
sub
jmp
sahf
pop
aas
cmc
or
fwait
mov
outsb
fnstenv
movsl
jg
xchg
fcompl
jne
cli
repz
das
mov
sub
sub
sbb
dec
adc
mov
repnz
mov
push
rol
cli
lcall
inc
push
push
adc
inc
xor
jo
imul
dec
lret
inc
and
jecxz
lcall
fwait
pop
adc
mov
jns
adc
call
in
add
daa
imul
inc
outsb
sub
shrb
mov
insb
std
mov
into
pop
push
shll
fcmovne
mov
in
dec
in
fcomps
and
push
push
push
jmp
mov
pop
das
repnz
daa
ficomps
gs
xchg
enter
iret
andb
imul
jmp
and
sub
sbb
fsubp
in
mov
mov
cld
cltd
cwtl
cli
xor
sub
scas
sbb
cmp
jle
aas
cwtl
outsl
mull
test
or
pop
aas
xorl
dec
dec
lahf
pop
xorb
fsts
imul
push
iret
cmp
cmp
xor
xor
inc
add
int
dec
sbb
push
nop
arpl
bnd
sbb
pop
adc
xor
jns
push
and
inc
into
add
xchg
cld
cmpsb
xor
pop
mov
rcrl
sub
fstps
imul
jae
jg
mov
fwait
mov
or
test
pushf
xchg
addr16
loope
cwtl
mov
adc
decb
outsl
div
lock
movsl
repz
mov
sub
mov
pop
test
add
aas
cmp
scas
jg
int3
in
hlt
cld
sbb
sbb
pop
mov
in
push
jne
mov
lock
mov
mov
cmp
cs
addb
int3
pop
or
fnstsw
add
aam
sub
aaa
stc
or
mov
aam
dec
xchg
cmc
aaa
pop
inc
push
push
movsb
daa
arpl
stos
ret
shrb
ljmp
outsl
outsb
sbb
aam
fwait
outsl
les
add
inc
imul
fcmovne
shrl
dec
fs
cmp
jmp
insl
mov
jo
cmc
xchg
shll
ljmp
xchg
pop
mov
arpl
add
sahf
xchg
ret
cltd
leave
movsb
jle
scas
pop
mov
mov
jl
sti
xchg
push
sbb
test
or
add
out
sub
cmp
insl
push
inc
and
imul
push
into
xlat
lea
adc
mov
sbb
pop
sbb
xchg
data16
test
std
mov
jbe
popa
xor
xor
rcll
subl
mov
pop
push
pop
loopne
and
mov
test
and
ja
movsl
divb
xchg
pop
out
fistpl
shll
jne
ret
and
sub
roll
push
inc
or
mov
aad
pusha
xor
add
movsb
push
test
lds
dec
mov
adc
cmp
cs
push
push
in
fistl
outsb
pop
jns
ss
mov
sub
mov
adc
jne
inc
dec
inc
push
push
sbb
cld
sub
jne
lock
call
test
pop
lcall
out
or
ret
add
push
xor
aam
dec
ss
insb
mov
inc
fistpl
arpl
adc
xchg
adc
and
insb
bound
hlt
sub
jbe
cmpsl
dec
or
mov
std
inc
inc
repnz
inc
xor
lods
mov
add
adc
insl
test
sahf
ror
dec
lock
lods
xor
rclb
jbe
adc
mov
add
popa
and
outsb
mov
je
jae
incb
mov
je
mov
sub
push
pop
push
aaa
jne
incb
push
in
adc
sub
inc
add
add
dec
mov
aad
iret
add
xor
and
fnsave
xchg
fbstp
mov
and
push
jbe
pop
fcompl
add
sub
jecxz
add
mov
es
testl
out
inc
xlat
ljmp
mov
enter
cmpsl
cmp
adc
jb
mov
divb
out
pop
out
pusha
lret
push
shll
inc
push
ljmp
cmpsb
addr16
lock
lcall
jno
dec
adc
push
or
push
call
fisubrl
add
negl
repz
xor
mov
fwait
push
dec
call
and
cmpsb
in
dec
mov
roll
or
ret
scas
je
pop
clc
fsubrp
dec
lea
daa
subl
or
pop
push
xchg
mulb
lods
movsb
add
loopne
test
and
enter
sbb
push
bound
adc
sti
jge
push
aad
push
aam
pusha
mov
add
inc
mov
or
test
orl
push
mov
mov
adcb
xchg
pushf
add
inc
cmp
xchg
dec
data16
fnstsw
stc
lock
add
inc
adc
data16
jo
neg
add
dec
cmpsl
push
rclb
rcrb
lret
cmp
jp
xor
adc
movsl
test
mov
imul
in
popf
jmp
std
or
sbb
add
xchg
mov
adc
push
inc
jne
pmaddwd
jl
dec
adc
rolb
fldenv
add
scas
jae
jns
test
fldcw
and
nop
lahf
fstpl
mov
sub
push
xchg
lahf
fstl
test
lcall
mov
es
inc
pushf
repz
dec
stc
and
push
or
outsl
js
mov
outsb
sbb
pop
push
push
sub
add
cmpb
scas
daa
loop
ret
rorl
movsb
ja
stos
imul
mov
jbe
pop
sub
popa
int3
mov
ss
aas
jmp
insb
int
dec
pushl
push
daa
int
pusha
popf
scas
fsubl
mov
leave
sub
rcrb
lret
scas
ss
sar
cltd
sbb
push
ljmp
mov
jmp
pushf
cld
pop
jge
pusha
rolb
push
and
push
test
negl
cmp
mov
insb
rcrl
sub
mov
lcall
cmp
lods
repz
mov
arpl
inc
dec
test
mov
xchg
inc
cld
add
das
sarl
stos
aaa
jae
fisttpl
int
cmpb
arpl
xor
orl
aad
add
cltd
xor
xchg
ljmp
mov
dec
pop
es
adc
bound
call
ficomps
pop
adc
insb
sbb
scas
shl
cmp
mov
sahf
js
xchg
ss
stos
jle
pop
xor
scas
mov
repnz
cmpsb
adc
rolb
cmp
lea
in
fisttps
jl
insl
or
inc
sahf
xor
jno
lret
xor
pusha
fstpl
mov
and
pop
leave
inc
and
repnz
pusha
mov
cmpsb
pop
mov
inc
adc
aaa
aas
repz
dec
int3
aaa
pop
iret
ja
cmp
dec
andb
shlb
push
cltd
mov
js
xlat
xor
xchg
inc
inc
or
add
minps
jne
jae
stos
fwait
and
out
in
mov
hlt
jb
imul
xchg
mov
outsb
xor
test
test
mov
xlat
jmp
into
loope
pop
cwtl
or
inc
push
mov
and
sbb
sbb
mov
test
int3
lea
cmp
push
sub
add
mov
jae
inc
adc
xchg
insb
insb
jne
cltd
mov
aaa
mov
pop
jmp
inc
test
fistl
xchg
xor
mov
scas
jmp
adc
push
push
rolb
cs
cs
dec
pop
sbb
in
gs
jno
stc
inc
loop
insl
mov
inc
xchg
mov
popa
das
inc
es
mov
divl
pop
mov
outsl
push
jp
mov
iret
dec
inc
push
push
lock
pop
pushf
imul
dec
push
dec
sbb
fmuls
mov
test
mov
dec
xor
mov
sbbb
mov
mov
jl
cmc
fmull
or
movsb
pushf
jg
push
aaa
cmp
stos
add
add
xchg
cmpsb
mov
xor
jnp
test
bound
mov
loope
add
dec
sbb
cmp
subl
rcr
pop
pop
testb
int3
insl
out
pushf
addl
push
push
inc
aas
rol
gs
pop
jge
adc
mov
push
pusha
test
scas
xchg
and
mov
out
adc
jns
xor
jno
and
mov
adc
stos
std
pushf
nop
pusha
loop
movsb
pop
inc
mov
orl
jl
inc
fs
push
fadds
pop
hlt
enter
pop
jne
fidivl
mov
fldl
das
test
lock
inc
sub
cmpsl
sbb
cltd
fmuls
stc
mov
push
mov
sbb
fimuls
jp
in
mov
mov
mov
xchg
jmp
ret
pop
jno
pushf
roll
pop
add
movsl
lods
mul
xchg
cmp
stos
mov
mov
or
imul
fiaddl
filds
jnp
sbb
fnsave
jo
xchg
les
lcall
rcll
pushl
imul
xor
ds
icebp
into
lret
flds
xor
movsl
pop
jg
mov
aas
stc
icebp
inc
sbb
pop
in
push
enter
pop
xchg
pop
adc
lock
leave
sub
lea
int
cltd
int3
add
mov
lahf
sbb
dec
pop
in
cmpsb
movsl
inc
or
cmp
lods
or
out
bnd
insb
or
xor
mov
xor
mov
inc
cmp
push
lahf
in
std
imul
mov
pop
fdivrs
mov
adc
loopne
fdivs
sbb
sub
xor
dec
mov
aaa
pop
push
mov
push
std
jbe
iret
xor
mov
mov
ja
push
int3
dec
adc
cmpsl
xchg
cmp
mov
push
xor
mov
cwtl
or
mov
xchg
adc
cmp
push
inc
shl
mov
fwait
das
fnstcw
pop
lret
cmpsb
std
pop
cmpb
fs
pop
push
int
inc
mov
xor
xchg
cmp
imul
inc
arpl
popf
mov
mov
or
jno
stc
imul
sbbl
and
cmp
or
loop
add
loope
xor
shll
call
mov
pusha
mov
jmp
push
in
rol
dec
gs
lahf
mov
push
inc
iret
jp
ret
pop
and
xor
mov
cld
jno
mov
nop
sarb
or
loope
mov
loop
lock
movsb
dec
push
cmpsb
inc
jnp
shrl
mov
mov
imul
or
sarb
std
adc
pop
cli
addb
hlt
dec
bound
lds
ja
addr16
mov
jo
andb
jge
jmp
and
popa
stos
hlt
dec
mov
and
push
push
cmc
dec
mov
gs
faddp
aas
popf
pop
cmp
nop
xchg
fmulp
push
dec
jbe
inc
mov
cmpl
lods
jae
xor
mulb
inc
and
jl
xor
xchg
nop
dec
mov
and
arpl
fnsave
dec
lods
or
mov
in
sbb
mov
mov
fsubrs
mov
lret
dec
sub
fildl
addl
popf
xlat
shl
scas
orl
andl
dec
inc
nop
nop
pusha
pop
sbb
jae
mov
inc
jp
daa
roll
sarl
subl
adc
arpl
test
insb
mov
or
fidivrl
pop
arpl
inc
push
push
sbb
mov
mov
xor
xor
addr16
or
test
push
cmp
dec
int
or
mov
dec
jb
orl
pushf
dec
xchg
push
test
sub
xor
fadd
dec
dec
xor
and
imull
mov
loope
je
aad
sbb
mov
adc
pop
mov
sarl
pop
xlat
push
sub
mov
add
in
adc
cmpsl
fsub
movsl
bound
add
and
pop
in
jnp
mov
iret
adc
rcrb
xor
xchg
push
xchg
xchg
xor
xchg
sub
sub
jg
jmp
inc
outsb
cmpxchg
aaa
shlb
cltd
push
mov
pusha
or
int
repnz
cmp
push
jae
rclb
mov
cld
es
mov
ret
cmp
mov
cmpsb
das
mov
fwait
push
data16
lcall
jle
das
int
adc
pop
imul
pop
lds
xlat
jmp
ret
shlb
push
push
push
xchg
inc
cmp
mov
xchg
lods
es
or
sbb
test
je
gs
lods
jl
jo
cmp
cld
cld
loop
pop
mov
insb
jo
and
js
mov
jg
xor
rcll
das
xor
stos
pop
cld
bound
ret
out
hlt
cmp
adc
and
imul
rcrl
jl
test
xor
cmpsl
data16
rcll
mov
aad
add
fcmovnbe
aam
jo
sbb
aam
fadds
jb
jmp
movsb
nop
inc
mov
out
korw
add
cmpl
or
test
mov
pop
xor
jns
imul
push
pop
dec
pop
adc
xchg
ss
pushw
sbb
ret
fsubp
out
aas
xchg
xchg
jl
mov
mov
mov
je
sbb
je
sahf
stos
dec
jp
popa
push
add
ret
shlb
push
sbb
adc
stos
shr
add
in
test
cmp
cltd
mov
sub
jg
rcl
sbb
push
xchg
shrl
cmp
enter
notb
cmp
sbb
or
sbb
jae
and
std
fldenv
lods
sub
pusha
xchg
test
outsl
jl
sbbb
jbe,pn
popa
lahf
loopne
mov
mov
push
dec
mov
sbb
cltd
mov
insl
stos
pop
xchg
pop
push
pop
dec
push
adcl
cli
push
lret
or
loop
mov
xchg
mov
lock
push
sbb
mov
mov
movsl
clc
mov
loope
inc
cs
or
je
out
ja
dec
fcmovbe
in
push
rcl
inc
pop
in
dec
mov
hlt
popf
push
xorl
mov
push
stos
jecxz
fs
or
jae
repnz
iret
leave
or
jmp
cmp
nop
mov
xchg
jae
mov
mov
mov
fwait
decb
out
stos
mov
sbb
addr16
sub
stos
into
or
adc
jmp
js
push
fistpl
loope
pop
dec
mov
xchg
or
push
pop
push
dec
cmp
adc
fistpll
and
ss
sti
cltd
pusha
fmul
dec
testl
gs
dec
lret
ret
icebp
mov
in
jp
int3
lcall
movd
ds
and
xchg
xchg
inc
mov
das
addr16
push
std
mov
imul
aad
lahf
in
cli
stos
mov
inc
add
enter
inc
jnp
rclb
xor
arpl
imul
mov
cmc
mov
dec
into
pop
xor
push
cmp
mov
gs
push
call
lock
movsb
imul
icebp
xor
cmc
out
xor
cs
mov
inc
cli
mov
std
shrb
jnp
pop
div
cmp
mov
lds
push
js
fldcw
inc
in
lahf
inc
out
outsb
cmp
xchg
stos
pop
enter
dec
or
xchg
out
aaa
clc
mov
push
ss
notl
cmp
push
pop
adc
in
xchg
xchg
pop
test
adc
sbb
or
mov
mov
xor
mov
adcb
pop
push
mov
jle
xor
insl
push
lcall
repz
inc
jg
cmp
cmp
jl
out
mov
es
dec
int
popf
xchg
jge
dec
cmp
mov
add
imul
dec
cltd
sub
jae
dec
xchg
js
data16
dec
sbb
cmp
inc
mov
xchg
cmp
ljmp
dec
mov
movsl
xchg
dec
jb
mov
adc
loope
pop
pop
pop
dec
cmp
inc
cmpsb
cmp
stos
dec
push
cmp
out
daa
std
adc
inc
mov
divl
push
jg,pn
adc
pop
je
sahf
jb
jnp
xchg
call
or
hlt
xchg
xor
jns
sbb
dec
lret
xor
jnp
adc
inc
inc
outsl
push
insl
xor
cmpsb
mov
push
cmc
and
rol
and
fdivl
pushf
movsl
std
jl
mov
fs
lea
jae
jmp
xchg
and
xor
movsl
mov
mov
inc
dec
fmuls
sub
scas
daa
dec
push
jns
mov
inc
fstl
add
loop
rcll
rorl
add
test
pusha
enter
adc
jo
add
arpl
shll
movsb
fs
jg
stos
fisttpl
sub
and
mov
ljmp
xor
movsl
aad
and
cmpb
sub
mov
clc
in
lock
sub
pop
icebp
push
xchg
cmp
sub
clc
lods
lods
ficoms
inc
xchg
mov
lods
stos
nop
mov
mov
in
ss
mov
mov
in
jmp
ss
pop
inc
gs
leave
pop
xor
xchg
stos
or
xchg
sbb
fwait
dec
fld
pop
arpl
lret
daa
push
jbe
ds
lcall
fdivl
pop
ja
ljmp
inc
rcll
es
jb
cwtl
xorb
sti
fdivl
mov
enter
movsb
add
cmp
mov
xor
fcomi
fnstsw
je
and
fiaddl
xorl
and
repnz
hlt
stos
rorb
pop
roll
mov
push
fs
fstpl
leave
sbb
std
mov
push
push
xor
loopne
negl
aad
out
lods
hlt
or
cltd
add
cmp
mov
push
mov
aaa
sub
mov
jmp
jo
js
push
sbb
xor
adc
add
and
push
xchg
test
stc
mov
adcb
ja
jmp
call
sbb
cmpsb
push
sbb
mov
adc
out
insl
insb
cmp
cmpsb
xchg
imul
outsl
jb
scas
adc
add
js
cld
cs
sldt
scas
repnz
mov
movsb
dec
fs
sbb
xor
aad
insb
push
xor
and
ret
mov
push
pop
jl
dec
push
leave
push
in
out
cmpsl
inc
movb
pop
or
push
and
cmp
xor
ret
adc
inc
fdivrl
cmp
hlt
jns
lds
jns
pop
pop
inc
pop
std
cs
sbb
ficomps
mov
fcomi
dec
rep
adc
mov
adc
stos
add
jne
fmul
add
ds
add
jmp
push
sub
aas
pcmpgtw
or
cmp
call
in
scas
rcrb
push
and
faddl
lea
fscale
jg
xor
mov
jp
ffreep
or
popa
mov
fildll
dec
mov
aad
mov
mov
xchg
add
pop
or
nop
sbbl
jnp
mov
inc
cld
push
jecxz
mov
cmp
test
and
mov
jg
xor
sub
or
fs
push
mulb
mov
imul
mov
loope
cli
lds
outsb
aaa
inc
jge
movsl
add
sub
and
push
mov
jo
cmpsl
push
sub
mov
or
mov
xchg
out
jl
jle
cmp
outsl
xor
push
cwtl
pop
imul
mov
jmp
div
in
iret
sbb
xchg
cmp
and
es
in
lahf
cs
mov
jl
popf
aas
ja
mov
sub
shll
out
lahf
sub
cmp
es
inc
incl
das
jns
daa
and
in
nop
mov
cmp
ja
insl
or
lret
rcr
xlat
out
inc
lahf
sbb
inc
and
pop
inc
lret
mov
cmp
cltd
ljmp
dec
fildl
gs
sbb
jbe
inc
stos
inc
subl
pushf
mov
lock
pop
orl
adc
jle
pop
and
mov
lods
imull
add
movsl
cmp
jecxz
or
mov
shll
mov
sti
enter
cwtl
lret
andl
std
faddl
data16
inc
inc
jge
adc
stc
dec
inc
push
sbb
jge
test
movsl
xor
icebp
push
ret
inc
xchg
jmp
shl
mov
sub
cwtl
jnp
jmp
cmp
shll
lods
xlat
add
out
hlt
pop
roll
xchg
adc
mov
or
sub
std
lret
inc
popa
push
cmp
ja
pop
ljmp
inc
add
icebp
lret
insb
cmpsl
jg
jge
mov
ljmp
jecxz
mov
xchg
xor
outsb
mov
mov
add
fwait
pop
inc
mov
pop
imul
cmp
mov
xor
pop
gs
mov
stos
mov
sub
sti
or
or
jnp
xor
dec
hlt
insb
in
insl
std
pusha
loopne
push
pop
mov
movsl
push
add
adc
dec
lds
orl
sub
sub
mov
sti
sbb
cmpsl
mov
rcpps
pop
ja
icebp
jbe
aad
jg
gs
outsl
sbb
add
outsb
mov
mov
sub
xchg
in
ljmp
hlt
jnp
gs
mov
xchg
xchg
cmpsb
adc
ret
mov
jnp
jns
decl
cmp
sub
mov
pop
jnp
pushf
pop
adc
dec
xor
ja
pop
shll
push
ret
or
cmp
push
sub
mov
addr16
inc
lods
pop
pop
insl
aad
in
xchg
jno
insl
mov
fnstenv
xchg
addr16
lock
test
cwtl
adc
xchg
mov
sub
pop
cltd
pop
shrl
inc
hlt
in
mov
movsb
sub
mov
outsl
add
xchg
mov
sub
leave
shll
mov
xchg
sub
orb
pop
and
jb
adc
in
dec
js
outsl
mov
cli
adc
std
mov
dec
arpl
or
fs
mov
mov
lock
rorb
xchg
fmuls
xchg
in
sbb
loop
add
push
inc
out
cmp
ja
mov
pop
or
push
sti
add
cmp
fadd
mov
sbb
sbb
sbb
loope
les
push
mov
mov
sub
cmpsb
and
loope
ret
cmpsl
mov
push
shll
jae
xchg
jge
loopne
movsb
add
adc
inc
dec
xchg
dec
adc
repz
loopne
addb
and
pop
clc
test
push
and
inc
lahf
push
imul
pop
mov
movsl
inc
dec
dec
int
test
xchg
jns
cmp
into
ret
pop
push
out
mov
popa
sbb
out
pusha
cltd
lret
jmp
cmp
mov
int
pop
lods
in
dec
pop
and
dec
mov
xchg
sub
adc
fistps
jnp
pop
adc
pop
int3
pusha
in
mov
nop
jg
inc
aad
jecxz
mov
out
pop
ret
imul
or
dec
inc
fldl
sahf
rcrb
insl
xlat
loopne
pop
stc
cmp
sub
ljmp
mov
push
push
inc
rcll
icebp
add
cmp
push
inc
mov
cmp
mov
mov
repnz
and
test
push
mov
mov
icebp
cmp
stc
lods
lods
mov
es
jl
aam
mull
or
mov
fwait
and
fdivs
push
mov
pusha
mov
jnp
shll
hlt
add
fcoml
dec
movsb
inc
aad
lahf
inc
and
imul
push
pushf
xor
pop
mov
push
mov
xchg
sbb
imul
pushf
lods
adc
push
jle
xor
fcmove
stc
mov
cld
mov
xor
adc
scas
mov
rcll
mull
cmp
ret
jnp
and
jne
shrb
jmp
and
mull
hlt
imul
jecxz
scas
in
ud0
add
jecxz
xchg
sub
data16
mov
addb
sbb
push
and
mov
inc
cltd
xchg
inc
xor
mov
shrb
push
jg
cltd
arpl
cs
mov
xchg
add
aas
sbbb
mov
mov
cmpsl
fadds
cmp
xchg
xchg
push
cli
lods
mov
push
push
stos
jle
xchg
and
pop
lock
pop
imul
add
mov
cmpsb
fwait
cwtl
or
push
cmpsb
lock
sub
rcrl
aaa
mov
fisttpll
ret
adc
nop
lock
lcall
sub
xor
ret
mov
xchg
mov
pusha
adc
sarb
jns
mov
pop
sub
mov
jno
sub
jo
out
sub
pop
aad
cmpsl
or
pop
inc
inc
aas
scas
mov
mov
jle
nop
clc
mov
imul
pop
pusha
rorl
or
adc
jg
scas
and
mov
lret
xor
adc
ljmp
push
xor
out
and
lock
sub
flds
add
subl
dec
lds
pop
or
fcmovu
stos
test
mov
push
jp
jecxz
rcrl
fmuls
hlt
cmp
cmp
test
insl
mov
gs
push
sub
inc
mov
adc
testl
sub
mov
mov
add
mov
mov
ret
cmpsl
add
dec
pop
mov
stos
jnp
push
ljmp
lahf
push
jl
cld
mov
fildll
pop
fdivr
pop
lret
sbb
mov
jbe
push
push
mov
out
cmp
xchg
mov
cmpl
dec
pop
adc
adc
jae
mov
scas
incl
daa
mov
or
cli
in
aam
push
in
outsb
js
sub
stos
leave
sub
roll
in
enter
leave
pop
inc
popa
mov
mov
pop
es
repnz
jmp
jo
das
or
mov
xchg
out
mov
or
sub
frstor
jmp
lds
mov
movsl
or
mov
js
fisttps
dec
xchg
or
lea
pop
inc
in
or
add
pop
jge
mov
pop
inc
jecxz
stos
ret
or
mov
sahf
lods
popa
leave
mov
pop
xchg
outsl
mov
fistl
adc
mov
fidivrl
inc
xchg
sub
insb
and
lods
sbb
arpl
pop
addr16
insb
sbbb
or
rclb
inc
test
lret
movsl
pusha
pop
in
repz
nop
into
outsb
imull
rorl
jge
movsl
mov
jns
xchg
mov
sarl
dec
inc
xchg
aam
sbbb
push
hlt
xchg
xor
push
subl
xor
pop
push
adc
enter
das
outsb
shrb
fldl
scas
sti
pop
nop
fsubrs
sbbb
fistpl
cmc
lahf
mov
push
jnp
mov
mov
scas
xor
insb
jae
out
or
or
sti
leave
cwtl
sub
out
or
movsb
bound
cmc
scas
push
add
ret
add
add
cmpsl
mov
jns
mov
push
dec
hlt
jnp
dec
add
pop
jo
cmp
cmp
jp
arpl
lods
push
push
cmp
mov
aam
and
andl
inc
mov
and
sub
xor
scas
mov
lds
ja
sbb
test
or
sbb
dec
inc
mov
add
sbb
lea
sarl
out
hlt
sub
xor
xor
dec
inc
push
rclb
sbb
lret
add
cltd
xor
and
testl
xchg
push
dec
test
xchg
mov
xlat
repz
or
stos
jnp
negl
or
lret
lret
push
das
cmc
lahf
sub
sub
jecxz
out
mov
push
fsubs
mov
xor
lods
inc
icebp
jmp
scas
fadd
mov
add
ljmp
leave
push
sbb
stos
cli
dec
jns
cmp
outsl
loop
jb
mov
je
mov
mov
or
pop
add
movlps
aad
add
mov
adc
dec
mov
daa
sbb
and
inc
jle
jg
pop
mov
popa
mov
xor
int3
bound
push
repnz
or
push
lea
jge
lock
xchg
push
iret
and
in
and
imul
in
pop
adc
and
fstps
or
iret
call
inc
adc
hlt
or
test
jmp
es
mov
jmp
orb
pop
mov
xor
xor
dec
imul
adc
cwtl
movsl
outsl
mov
stc
adc
mov
rcrl
pusha
xchg
mov
sub
sbb
jecxz
lods
jecxz
xorl
loop
xor
pop
jl
jle
out
aas
sbb
push
pushf
xorl
push
push
cmp
ret
push
pop
jnp
sbb
sub
sbb
fisttpl
subl
xchg
lret
ljmp
imul
inc
mov
mov
aas
hlt
repz
add
and
mov
pop
lock
jne
into
bound
mov
xor
outsl
mov
enter
xor
sahf
scas
xchg
dec
scas
inc
pusha
mov
mov
lock
mov
stos
xchg
cmp
dec
je
cmpsb
repz
xchg
jmp
cmpsb
mov
mov
jmp
jg
repnz
movsl
xor
fidivl
dec
sub
ficomps
cmp
shlb
aad
pop
xchg
in
add
shlb
jp
daa
movsb
setge
fs
mov
push
iret
inc
adc
int
ja
out
ret
sti
lret
push
shr
inc
inc
inc
push
jns
push
sbb
dec
rclb
jns
push
adc
mov
lret
scas
jg
mov
add
sbb
loop
or
push
dec
fstpt
popf
addb
in
rcrb
jmp
mov
cs
cmp
xor
loope
sarb
dec
test
ljmp
rcr
mov
mov
out
push
dec
cmp
decl
fistps
cs
cmpb
mov
cmpb
lcall
inc
xchg
inc
cs
repz
ffreep
mov
push
xchg
jg
aad
push
lahf
lock
mov
lock
jne
pop
cwtl
data16
test
out
inc
or
cli
or
xchg
cmp
fs
movsl
and
in
mov
and
lret
gs
je
leave
imul
data16
jbe
push
sti
xchg
mov
xor
inc
out
pop
and
cmp
aad
xchg
push
lret
push
mov
in
scas
pop
jge
out
cmpsl
ds
pop
or
ret
test
cmp
push
sarb
pop
sub
movsb
cmp
push
push
or
mov
pop
iret
sub
stos
jmp
test
inc
adc
jg
xor
fsubp
fidivrl
stos
push
iret
stos
mov
xor
push
test
cmp
ss
rolb
xor
lret
cmpsb
mov
mov
aas
dec
sub
xchg
shrd
adcl
cmpsl
loope
sub
pop
stos
mov
loope
test
mov
or
cmpb
int3
rorl
cmp
add
lock
cwtl
mov
jns
std
scas
or
enter
cmc
outsl
and
cld
loop
xlat
push
sbb
daa
test
xor
shr
add
add
jg
mull
dec
outsl
int
pusha
xchg
lock
mov
iret
popf
ljmp
pop
sbb
inc
out
push
add
jecxz
je
and
jnp
lcall
and
xor
not
sbb
push
push
into
inc
cltd
xor
dec
push
jecxz
xchg
nop
fstpt
es
aam
mov
inc
fldt
testb
repz
mov
or
push
xor
mov
andb
or
jge
mov
nop
pop
push
ret
orl
and
push
lret
cmp
mov
jae
sbb
mov
rcl
std
sub
dec
add
out
rep
lcall
push
lds
out
lcall
push
xor
xor
notl
loop
je
xor
cmp
push
mov
fsubs
loop
imul
pop
scas
adcl
inc
loopne
mov
mov
inc
jp
dec
je
andl
jmp
sbb
aad
and
js
xchg
cmp
pop
lret
xchg
test
rorl
jbe
cmp
sbb
adc
aas
add
pop
adc
outsb
and
sub
stc
lcall
cmp
lds
mov
neg
outsl
call
jne
idiv
andb
cs
out
es
inc
mov
pushfw
insl
rcll
shrb
repz
and
int3
aaa
xor
lcall
lahf
mov
mov
inc
stos
adc
xor
xchg
into
inc
lcall
sahf
pusha
push
jno
repnz
fisttpll
mov
mov
imul
mov
inc
push
cmpb
push
ficompl
jns
mov
xor
scas
sub
in
push
insb
negl
xchg
push
mov
jno
and
aaa
test
sub
std
daa
cmp
adc
and
xchg
push
mov
mov
gs
outsb
out
lret
mov
aad
dec
lods
into
pusha
sub
cmpsl
add
push
jnp
jmp
jne
mov
les
fs
xchg
stos
adc
dec
sbb
bndstx
cmp
xchg
sahf
fwait
mov
push
mov
je
les
push
mov
or
out
fincstp
lods
add
aaa
outsl
inc
cmpsl
aas
sbb
and
nop
mov
pop
ljmp
mov
jbe
out
dec
dec
xlat
xchg
in
orl
adc
daa
sub
mov
or
xor
fsubs
mov
xor
dec
imul
sbb
adc
adc
mov
int
mov
and
jge
bndldx
add
jnp
jp
sbb
addb
xchg
addb
xchg
sub
popa
negl
test
icebp
in
sbb
out
sbb
mov
jg
popa
add
int
mov
adc
aam
mov
cmp
or
lahf
jb
lret
cpuid
pop
test
push
push
dec
repnz
repz
mov
js
mov
mov
push
sub
addb
mov
movsl
mov
pop
xchg
rcrb
jbe
and
cmp
shrb
sbb
test
mov
sub
fs
decb
mov
sub
cltd
test
sahf
nop
icebp
std
push
adc
push
xor
sahf
push
ss
xor
cli
mov
inc
fdivrl
jmp
mov
xchg
out
nop
sub
gs
hlt
aam
movsb
and
cs
cmpl
dec
loop
rol
mov
and
stc
cli
nop
cmp
jp
xchg
sti
js
lods
data16
sti
mov
adc
jae
mov
xchg
into
inc
cwtl
cli
xor
dec
insl
rcrb
scas
aad
pop
dec
aad
clc
xchg
jae
call
cmp
add
arpl
leave
dec
sub
ret
cmp
jae
fidivrl
aaa
stc
mov
aam
jnp
inc
add
ss
arpl
scas
xchg
dec
ret
sub
mov
jo
das
lods
mov
adcb
add
icebp
add
mov
mov
rcr
jge
push
mov
lea
ds
insb
sub
sub
jo
jg
mov
mov
dec
adc
into
sbb
mov
ljmp
ret
je
test
das
roll
jbe
xor
mov
mov
das
aad
or
pop
dec
xor
imul
push
sub
out
push
mov
fadd
mov
loope
cmp
pop
xchg
adc
das
repz
das
or
insl
aad
into
xchg
iret
lods
imull
je
mov
mov
dec
sub
mov
fildl
loopne
mov
cmp
lret
enter
sbbl
push
cltd
clc
mov
js
gs
xlat
mov
sbb
and
cmp
ljmp
sub
jg
sbb
jle
test
xor
mov
mov
fidivl
lret
xchg
mov
imul
sub
mov
jecxz
fwait
clc
imul
or
mov
pop
pusha
jb
fsubrl
sub
out
add
lahf
and
rorl
test
jo
cmp
xchg
arpl
cmp
andb
cmc
xor
push
popf
aas
ss
mov
inc
xchg
es
adcl
pop
xlat
loope
mov
cmp
cmp
inc
mov
inc
cwtl
mov
lahf
fists
fdivs
int3
xor
js
sbbl
in
dec
adc
sub
ljmp
outsb
xchg
lds
pushf
jae
xlat
popa
enter
adc
into
xor
push
or
ffree
std
imul
push
push
xchg
adcl
push
jmp
test
pop
cltd
adc
pop
in
jb
call
mov
ja
fisubrl
or
mov
loope
insb
shll
in
mov
imul
cli
mov
jmp
lcall
dec
jmp
in
xchg
inc
sub
shlb
cld
dec
out
outsl
ret
mov
clc
push
sbb
shrl
cmp
mov
decb
sub
push
dec
loopne
jae
xchg
ss
lds
or
add
adc
fsubrp
xchg
inc
fildl
clc
insl
pop
sub
pop
mov
leave
into
or
and
or
es
and
stc
and
jmp
dec
loope
dec
add
push
sbb
jle
cld
les
xor
fwait
out
lock
in
jo
in
pop
popa
imul
inc
pushf
jecxz
clc
inc
andb
sbb
and
hlt
push
lds
ja
pushf
inc
xlat
xor
adc
cmpsb
or
or
out
mov
push
jg
jecxz
or
lods
aad
jl
lcall
aaa
and
inc
pop
testb
int
mov
or
je
scas
pop
icebp
and
insl
movsl
aaa
sub
cmpsb
xlat
int3
out
fidivrs
and
mov
jg
pop
lcall
popf
cltd
push
repnz
xor
data16
data16
outsl
xor
cmp
popa
sbb
int
jg
push
movsl
add
mov
inc
push
adc
out
sub
pushf
push
ret
flds
js
push
ficoml
shl
lret
lret
pop
pop
leave
icebp
push
xor
rcl
fsubr
int
into
pop
sbb
ret
jb
test
test
ret
out
mov
push
int3
rep
lock
je
xor
cmp
stc
fisttps
ret
lahf
sbb
je
sbb
mov
push
lret
outsl
push
sub
sbb
or
jg
call
pop
dec
je
fisttps
es
adc
adc
sbbl
out
sbb
mov
das
mov
sub
inc
sahf
lds
popf
dec
xchg
icebp
repnz
movsl
sarb
pop
xor
fbld
ja
fsubs
movsl
jecxz
pop
je
movsl
jns
popa
lea
mov
cmp
ret
jae
das
jl
push
xlat
inc
shrl
sub
mov
push
es
cmpsb
rorl
popf
inc
fdivrl
mov
xchg
stc
xchg
sbb
icebp
les
dec
bound
adc
pop
in
out
nop
ljmp
push
ds
scas
cwtl
repz
stos
sub
fisttpll
cmp
fistps
lcall
cmp
push
jne
stc
dec
int
iret
lods
push
sub
push
mov
xchg
add
push
scas
inc
inc
mov
shrb
add
lret
lds
call
movsb
mov
add
or
call
out
inc
mov
add
add
pop
inc
loop
adc
sbb
sahf
cmp
test
leave
in
or
jmp
int3
sbb
pop
mov
adc
jno
ret
lock
xor
mov
push
push
punpcklbw
cmp
lods
sbbl
cltd
cwtl
pop
and
bound
insb
fisttpll
or
xchg
cld
jg
xor
inc
cmpsl
shl
xchg
or
in
fdivrp
add
dec
mov
movsb
adc
mov
mov
xor
pop
mov
sub
push
mov
cmp
insb
ss
lock
lds
add
mov
dec
mov
adc
out
lods
adc
lds
mov
push
and
jns
sbb
pop
outsl
sbb
nop
xchg
adc
outsb
sub
cli
dec
or
xorb
shr
jnp
or
call
pop
inc
cmp
sbb
or
ljmp
pop
xchg
sub
cmp
test
push
push
pop
xor
cwtl
shlb
inc
shrl
cmp
xchg
daa
clc
outsl
ret
bound
lret
dec
dec
sahf
xchg
and
cmpl
xlat
lret
sahf
add
push
insb
push
mov
or
ret
xchg
repnz
dec
sarl
cmp
pusha
xchg
cmp
cs
mov
stc
nop
cs
mov
bound
in
sbb
and
in
dec
mov
jb
add
shrb
rcrb
inc
jmp
sbb
repz
jge
ss
js
movsl
cmpsl
fcomp
stc
and
ss
or
mov
cmp
xchg
adc
aas
nop
inc
imul
loope
inc
insb
pop
sub
call
int3
cli
fs
hlt
loopne
and
popf
or
fs
push
sbb
dec
ficomps
cltd
pop
orb
push
dec
call
lds
icebp
repnz
dec
sbb
and
cmpsb
inc
or
add
pushf
xchg
mov
shlb
cmp
sbb
fst
mov
push
sub
or
daa
bound
xchg
mov
or
data16
jae
call
call
mov
adcb
aas
repz
fildl
pop
add
push
inc
sarl
adc
insb
jo
dec
jmp
mov
out
fstpl
out
push
loope
inc
dec
outsl
push
fidivrs
xchg
sbb
clc
scas
xor
and
xchg
sub
xor
jb
sub
push
test
mov
ret
mov
xchg
andl
les
jg
repz
ljmp
in
test
bound
jbe
pop
fidivl
sub
mov
mov
sub
jge
pop
bound
mov
mov
cmpsb
je
and
test
gs
roll
out
ja
sub
xor
std
push
xor
into
addb
mov
sbb
and
mov
sub
cs
es
stos
sahf
cmpsl
stc
daa
mov
or
mov
filds
test
jge
mov
mov
xchg
testl
jecxz
insl
fidivl
repz
mov
subl
rcrl
jp
pop
xor
lds
enter
ds
xorl
xchg
jmp
mov
and
insl
push
push
mov
jmp
loopne
xor
psrad
sbb
stos
jb
aaa
or
jae
xchg
rol
inc
pop
addr16
xchg
lock
data16
nop
icebp
std
mov
mov
push
adc
cmp
push
in
add
punpckhdq
add
into
lods
in
cmp
lret
shrb
jbe
leave
sub
cltd
mov
or
or
or
dec
jecxz
or
aad
fdivs
xchg
sub
ror
roll
sbb
cwtl
cld
mov
mov
pop
inc
popa
call
pop
or
cmp
cwtl
scas
lds
popa
cmp
mov
fs
mov
mov
pop
jno
ret
into
insl
dec
pop
jp
das
mov
scas
jo
gs
cli
pop
popf
and
and
push
cmpl
and
and
rolb
movsb
adcb
andb
addr16
cmpsl
push
test
jg
or
push
inc
shlb
inc
dec
jge
shl
pop
mov
add
test
ljmp
inc
sub
sub
sti
stc
mov
push
jno
aam
nop
jns
xchg
push
xchg
adc
test
pop
outsl
xor
push
insb
dec
clc
xchg
push
pop
nop
scas
sbb
adc
ja
enter
adc
fidivrs
les
cmc
mov
bound
scas
outsb
jnp
xor
lds
sarb
in
pop
adc
inc
imul
rolb
or
xchg
xlat
jns
and
mov
scas
pop
rolb
mov
imul
lret
call
fadd
xchg
enter
mov
sub
inc
gs
xlat
xor
popa
movl
int
mov
pop
das
push
cli
es
mov
push
mov
ret
add
dec
jne
out
fmull
rolb
imul
adc
out
pop
std
fisubl
or
in
aas
out
imul
test
sub
and
push
leave
stc
hlt
fstl
xchg
mov
inc
pop
xlat
adc
lret
xorl
pushf
mov
shll
in
loope
mov
xor
dec
imul
push
mov
push
data16
inc
jae
movlps
mov
xchg
mov
dec
sub
mov
pop
lret
cmp
xor
iret
jecxz
imul
movsl
pop
push
mov
ss
mov
imul
icebp
xchg
hlt
les
push
pop
xor
cmc
push
mov
adc
loope
mov
leave
pop
jnp
int3
mov
ja
sub
cmpb
in
fnstsw
negb
or
test
inc
mov
cmp
in
and
adc
sub
push
inc
iret
adc
aaa
xchg
and
mov
cld
dec
into
mov
jmp
jle
shlb
xlat
push
xchg
inc
xchg
aad
data16
leave
outsb
ret
cmpsl
insl
cmp
cmp
loopne
pop
mov
test
push
inc
mov
bound
std
xor
sbb
ja
sbb
pop
jp
adc
out
jbe
scas
jmp
imul
hlt
sbb
lcall
pop
sbb
or
rcr
xchg
or
add
lret
pop
outsl
stos
in
sarb
jge
adc
scas
sub
xchg
test
pop
cmp
push
movsl
hlt
loope
setg
shlb
out
pop
movsb
repz
push
imul
lahf
fadd
je
scas
dec
push
mov
or
ja
cmpsb
pop
dec
ret
and
mov
push
adc
adc
mov
insl
add
flds
inc
push
xchg
sahf
mov
femms
push
and
stc
fsts
into
dec
in
aad
cmp
add
cwtl
xchg
sub
dec
push
pop
pop
test
or
jle
lods
fmuls
insb
jp
rcll
insb
dec
and
mulb
cmc
nop
es
subl
ret
or
mov
push
in
mov
test
mov
cltd
push
mov
xlat
pop
test
xchg
push
iret
cmp
add
mulb
das
mov
out
mov
int3
data16
fcoml
loope
dec
mov
and
pop
dec
mov
notl
mov
inc
pop
call
fdiv
dec
and
popa
sub
push
xor
add
aam
mov
pop
mov
mov
out
lods
xchg
imul
stc
inc
xchg
xor
sub
shrl
pop
popf
xlat
lock
aad
pop
inc
xor
jno
in
mov
outsl
ret
in
mov
shll
cmp
mov
mov
movsb
les
xchg
outsl
or
ss
xor
ret
add
pop
sub
mov
out
xor
andb
mov
pop
jns
enter
popa
negl
in
lret
aad
sub
pushf
inc
faddl
xor
pop
lock
sub
dec
dec
lahf
jo
jp
push
sbb
sub
mov
dec
lea
mov
filds
les
call
xchg
sbb
dec
ja
scas
clc
push
pop
cmpsl
sbb
pusha
cmp
jge
cltd
mov
mov
xchg
cwtl
lret
ja
aaa
addr16
jne
jge
jbe
imul
cmp
pop
mov
jnp
inc
fucomi
aaa
fld
in
sbb
cmp
inc
test
test
push
notl
lods
xchg
addr16
cmp
mov
and
outsl
mov
push
in
call
insl
adc
mov
add
mov
sti
icebp
rclb
ret
cmp
stc
imul
push
loopne
aam
cmp
movsl
sbb
stc
mov
pusha
xchg
mov
and
cmp
out
mov
testb
lods
jecxz
dec
lret
jecxz
pusha
dec
jecxz
movzwl
dec
jnp
add
int3
sbb
fsin
push
xor
jecxz
mov
imul
mov
out
inc
lret
sti
adc
dec
adc
lahf
fiadds
xchg
faddl
pop
xor
inc
imul
cmpsl
iret
pop
aas
scas
xor
adc
andl
xchg
out
pop
xlat
mov
xor
jb
lods
fdivp
mov
xor
mov
and
and
loop
cmp
lcall
cmpsb
pop
out
out
ljmp
push
xchg
push
jae
xor
jge
or
add
jb
push
mul
dec
fcoml
lahf
ja
push
icebp
xor
sbb
adc
aaa
daa
push
shll
ret
push
sub
fmull
inc
addl
cmp
sub
jno
xor
push
in
sub
fidivl
push
fs
in
std
jecxz
aad
xor
mov
ss
pcmpeqb
inc
daa
push
add
sbb
std
jbe
cmp
sbb
or
es
imul
xor
testl
jecxz
sub
inc
aad
pop
jge
fcomip
dec
lea
pop
push
sbb
pop
push
sahf
cli
rol
cmpsb
and
jb
lds
xor
sbb
xor
or
loope
xchg
neg
cmp
cmpsb
pop
xchg
mov
loopne
xor
sbb
js
aaa
and
cmp
call
jmp
mov
dec
dec
xchg
aas
pop
ljmp
xor
dec
in
dec
adc
lock
jae
adc
pushf
sbb
mov
dec
mov
repz
arpl
jae
adc
pop
jl
loopne
je
pop
hlt
fistpl
sbb
lahf
push
pop
pushf
mov
or
and
sbb
push
pushf
pop
mov
jg
and
xchg
xor
aaa
testb
sbb
ljmp
dec
pop
aad
shl
add
cmp
mov
pusha
jbe
shll
test
pop
inc
push
cltd
repnz
add
stos
call
sbb
les
punpcklwd
pop
scas
sub
or
hlt
jecxz
mov
orb
cmp
lods
dec
dec
jl
adc
data16
cmp
jge
inc
mov
jl
in
pop
push
stc
cmp
xchg
enter
and
lea
pop
add
jp
lods
in
int3
pop
popf
mov
sbb
xchg
jbe
xchg
repz
repz
push
add
or
pop
sub
pop
sbb
ret
outsb
aad
outsb
jecxz
and
mov
lahf
sub
bound
fptan
iret
cltd
movsl
push
adc
lcall
fstl
js
das
ds
jns
and
bound
std
mov
ljmp
movsb
inc
enter
pop
fimuls
inc
movsb
dec
mov
sub
shrb
push
push
inc
ret
daa
cmp
push
jle
out
repnz
dec
out
das
fmuls
lea
mov
dec
fimull
mov
jecxz
pop
test
and
cmp
and
inc
push
xchg
mov
shrb
or
pushf
xchg
push
fs
mov
mov
xchg
sub
mov
xchg
lds
xor
mov
mov
xchg
mov
add
nop
push
out
or
pop
adc
jmp
movsl
repz
jno
mov
sub
lret
test
fs
lcall
int
mov
mov
mov
jmp
xor
jmp
sub
mov
and
or
pop
mov
bound
xor
adc
pop
mov
mov
add
repnz
xor
rolb
fildll
incb
sub
dec
mov
enter
inc
lock
xor
arpl
mov
mov
test
push
aas
cmp
pop
aas
arpl
mov
out
sub
movsl
jge
xor
push
imul
icebp
cli
fwait
ljmp
idivb
xor
sub
jno
sbb
jg
inc
cli
mov
adc
or
pop
ljmp
les
popa
xchg
mov
fwait
and
and
inc
les
cmp
pop
insb
add
sub
jge
mov
jg
out
sub
pop
dec
mov
pusha
shr
fadd
jl
cmpsb
fmul
add
sub
adc
push
sar
inc
fiadds
fs
mov
adc
cmp
sub
dec
adc
cmp
movsb
fucom
frstor
add
push
lahf
mov
pop
aas
call
jns
push
inc
jnp
add
repnz
xchg
ljmp
les
orb
jecxz
add
xor
fmulp
xchg
aam
or
cltd
dec
mov
xlat
or
pop
insb
push
vandnps
dec
cmpsb
mov
int
dec
sbb
sbb
jbe
aaa
iret
repnz
pmaxub
xorb
mov
seto
lcall
test
or
repz
inc
rcrb
nop
xor
mov
dec
out
movb
inc
sbbb
mov
sub
popa
cmp
shll
pop
push
sub
dec
xchg
inc
lret
xchg
xor
mov
stos
and
jnp
shrl
lods
add
push
aad
adc
scas
sub
lret
pop
fcoml
adc
stos
jle
add
stc
insl
adc
mov
push
insl
or
lods
mov
into
jle
out
ljmp
mov
sub
jae
mov
jb
or
out
mov
sbb
hlt
mov
in
and
gs
mov
push
jmp
out
mov
mov
lods
mov
inc
jne
cmp
icebp
jecxz
outsl
jg
mov
sbb
mov
rorl
and
mov
cmp
xor
jge
mov
cmp
push
imul
mov
fcmovnbe
cmp
or
cmpsb
dec
xchg
pop
xchg
mov
aaa
or
sub
push
mov
add
mov
and
xchg
dec
cwtl
test
xchg
insb
xchg
nop
sub
into
push
push
test
out
mov
xlat
cs
icebp
ret
cmp
dec
fnstsw
fdivl
in
xor
ja,pt
test
bound
ret
xor
and
xlat
movsb
sub
icebp
cmp
sbb
or
lahf
sbb
xor
ds
add
imul
notb
xor
ret
dec
inc
dec
mov
sub
mov
cmpsb
mov
shlb
jle
cs
cmpsb
fwait
jo
ficomps
push
das
imul
sahf
in
rcrl
out
sub
loop
cmc
movsb
sbb
inc
out
mov
test
pop
mov
inc
mov
sub
inc
mov
add
pushf
pop
mov
mov
jnp
sub
and
jmp
cltd
insl
push
dec
jns
sbb
xlat
outsb
xchg
jl
push
push
push
ss
icebp
mov
pop
dec
call
movsl
hlt
lods
xor
nop
pop
cltd
fxch
mov
push
and
push
cld
lea
jmp
daa
aas
lret
adc
dec
pop
cmp
icebp
and
popa
and
jo
repnz
mov
mov
lret
sbb
adc
frstor
leave
mov
scas
icebp
lret
push
aas
add
stos
and
pop
inc
jne
call
das
and
inc
and
out
or
and
mov
fidivl
or
cmp
pusha
dec
neg
shll
or
std
pop
push
scas
ds
pop
mov
dec
jge
pop
loop
pop
mov
repnz
loope
pop
jae
adcb
push
ret
dec
push
shll
mov
add
addr16
xchg
sub
movsl
mov
lahf
stc
hlt
fsubrs
imul
and
imul
pop
dec
xlat
outsb
mov
mov
in
dec
pop
inc
icebp
test
ss
loop
mov
clc
cmpsl
lock
sbb
xchg
and
jno
cmovl
loope
imul
leave
ret
xlat
xor
sahf
inc
das
adc
inc
sar
sbbb
les
rcrl
inc
int3
sub
jns
popa
cwtl
adc
cmp
cmp
cmpsl
lahf
cli
bound
cmp
outsb
ret
outsl
mov
adc
fsubs
xchg
cmp
dec
inc
sbb
cltd
hlt
xchg
mov
in
stc
into
and
sahf
fdivr
into
add
jl
xchg
fcmovnbe
ja
adc
icebp
inc
fldl
sbb
push
fnstenv
and
in
sub
stos
add
jmp
leave
push
lods
pop
add
fistpll
hlt
cmpsb
push
or
imul
out
push
pushf
cmp
lock
mov
push
repz
or
xor
mov
jb,pt
xchg
lcall
push
and
popa
xor
flds
jl
daa
aad
pop
mov
sti
xlat
cld
inc
ret
xor
sbb
xchg
jno
sub
movsl
jp
stc
mov
test
xchg
lahf
fisttpll
push
cld
in
nop
mov
mov
cwtl
jge
test
mov
inc
hlt
int
ret
lahf
cmc
stos
dec
xchg
lods
fwait
jle
dec
dec
mov
lea
pop
test
out
hlt
stc
inc
les
dec
movsl
inc
jl
cmp
mov
sub
idivb
mov
lea
test
xchg
add
in
movsb
popf
inc
adc
dec
test
mov
pop
mov
fs
es
hlt
inc
or
inc
push
les
leave
mov
xchg
mov
add
ja
les
sub
mov
inc
lret
adc
outsb
jle
je
push
dec
lea
je
push
out
xor
test
aas
test
nop
insb
jge
in
xor
out
xchg
pop
adc
lcall
cmp
hlt
push
dec
xchg
push
push
mov
xor
push
outsl
ret
rclb
xchg
push
jle
mov
add
pop
cwtl
cmp
enter
dec
jo
sarb
arpl
push
or
dec
lcall
out
sub
ret
and
stos
mov
adc
mov
gs
push
stc
and
cld
pop
pop
test
iret
shll
xchg
push
inc
mov
cwtl
int3
or
or
test
add
lcall
jge,pt
arpl
and
fisubrs
es
pop
adc
dec
dec
bound
and
icebp
mov
repnz
mov
out
lods
and
and
gs
loopne
xchg
sub
cltd
pop
in
imul
divl
sahf
add
jb
xchg
repnz
mov
pop
and
inc
sub
sbb
and
inc
aas
sbb
ret
and
loope
add
orb
push
add
stc
fld
fsubrl
xchg
shlb
mov
pop
lea
cld
int3
add
icebp
cmp
xor
mov
or
cli
sub
add
rcrb
inc
addr16
ljmp
std
sbb
je
jno
jmp
aaa
and
cltd
daa
or
sbb
jnp
dec
jnp
dec
scas
sbb
lret
aad
call
in
jne
mov
or
int
lock
clc
or
sub
rcrl
push
out
cmp
movsb
pusha
lods
je
pop
loop
jne
cld
push
add
dec
jg
stos
xor
push
inc
mov
cmp
rol
ret
outsl
outsb
je
jmp
movsl
mov
cmp
aaa
push
stos
push
mov
cmp
jge
aad
sbb
push
cmp
out
loope
push
jmp
aas
adc
xor
or
rcrb
add
test
xor
mov
jns
push
shl
push
or
sub
pop
pushf
mov
addr16
fsubr
sbb
stc
push
aaa
sahf
jmp
bound
aad
incb
cli
mov
pop
test
ja
pop
mov
mov
dec
mov
sub
lea
cltd
push
mov
imul
fisttps
int3
sbb
pop
adc
and
cmp
xorl
jmp
fistps
dec
mov
push
pop
mov
inc
test
divb
fdivs
je
inc
rolb
sbb
cld
pop
shrl
iret
sbb
test
mov
fidivrs
mov
pop
mov
loop
ja
in
xor
sbb
mov
jno
mov
xor
mov
shl
loope
sbb
test
je
sbb
out
mov
push
lods
mov
dec
clc
push
adc
xchg
dec
add
daa
adc
mov
mov
add
pop
pop
push
sub
jmp
pandn
xor
pop
push
inc
cli
cli
add
cld
test
data16
movsb
xchg
pop
cld
and
mov
sbb
test
int
mov
inc
xchg
xor
pushf
dec
sbb
cmp
jns
clc
cwtl
cmp
adc
pop
xor
std
pusha
pop
test
pusha
and
fildl
pop
scas
loop
or
ss
dec
push
xchg
rcr
aas
rorb
mov
cmp
loopne
sub
add
mov
adc
paddsb
filds
lock
pop
loop
add
adc
add
ficompl
mov
shlb
jbe
btsl
cmpsb
pop
fimull
fiaddl
mov
jns
fcmovne
in
xor
push
push
inc
int
clc
fcmovbe
bound
add
ja
mov
add
imul
fwait
movsl
push
rcll
add
cmp
and
push
add
push
loop,pt
js
xchg
imul
movsl
push
sub
movsl
loope
cli
push
xchg
scas
scas
sub
cmpsl
mov
pop
cmp
jns
int
leave
lods
adc
mov
cmp
mov
f2xm1
mull
pop
inc
imul
xchg
addr16
add
mov
xor
mov
out
out
cs
dec
movsl
mov
and
fstpl
fwait
js
mov
xchg
div
or
cmp
call
pop
cmpsl
loopne
add
sbb
inc
fwait
jns
xchg
mul
test
xchg
xor
mov
add
dec
add
push
movb
push
test
pop
in
test
xor
sub
cli
sub
ss
cmpsb
or
aad
dec
xchg
loope
call
lock
and
imul
xorl
int
sbb
pushf
imul
cwtl
mov
add
pop
and
cltd
jbe
sbb
test
jnp
xchg
nop
pop
sbb
test
or
mov
mov
insb
cmp
xlat
dec
jge
daa
pop
xorb
faddl
push
push
xor
loopne
imul
cmpsl
jl
mov
adc
ret
lods
cld
movsl
jnp
sub
add
nop
inc
cmp
and
shl
jnp
jno
push
rorb
mov
dec
jo
cmp
jns
arpl
aam
xchg
dec
pop
das
or
in
add
xor
aaa
stc
push
das
outsb
aad
lret
test
xor
adcl
jecxz
dec
cmpsl
adc
mov
ror
jne
icebp
clc
icebp
mov
adc
xor
fdivrs
scas
shll
fisttpl
ds
insl
fwait
sub
insb
push
mov
push
cld
xorl
dec
les
xchg
cmp
mov
mov
imul
in
imulb
insl
push
xor
mov
scas
cltd
sarb
pop
cmp
dec
icebp
ficompl
aam
in
mov
or
cmp
or
add
add
push
stos
xor
add
shld
pop
dec
insl
cmpsl
xchg
out
mov
and
xchg
mov
insl
scas
pop
fsubrp
ljmp
repnz
nop
pusha
xchg
mov
add
subb
cmp
ss
stos
shll
nop
sub
sub
pop
sub
stos
call
sub
xchg
movl
imul
xchg
sub
hlt
or
fcmovne
ja
push
pop
jl
in
sbb
lcall
shl
loope
add
dec
push
and
in
mov
and
sub
jne
xchg
adc
add
xchg
sti
rol
inc
leave
out
sarb
jge
or
test
shrb
xchg
jmp
sub
cli
adc
ja
pop
cmp
pop
clc
dec
movsb
jg
mov
dec
mov
lahf
mov
lret
jmp
jge
mov
enter
adc
std
andb
sahf
mov
mov
mov
xor
lock
lcall
push
lock
sub
inc
scas
insl
popf
pop
jmp
vpsubsw
or
dec
repnz
mov
dec
ja
xchg
push
mov
test
nop
clc
cli
and
out
hlt
jg
je
cmpsl
mov
push
nop
push
ljmp
int3
xor
xchg
into
imul
insb
lret
xchg
bound
mov
cld
int
es
mov
iret
fsub
test
jae
dec
jo
out
cmp
sahf
aam
fisttps
stc
stc
andb
stos
cltd
push
mov
inc
mov
add
lahf
xchg
cld
add
outsb
jp
mov
ja
or
push
lods
mov
push
mov
imul
cmp
arpl
cmc
jge
or
iret
add
outsl
inc
stos
jg
jb
push
and
mov
xlat
lods
fwait
xchg
sti
lcall
dec
pop
adc
into
ror
out
addl
cld
subl
mov
dec
fimuls
xchg
aam
jo
sti
aad
fcomps
adc
mov
mov
rolb
call
cltd
sbb
enter
enter
dec
mov
inc
enter
pushf
push
mov
xchg
movsb
mov
push
cmp
repnz
xor
data16
dec
lods
mov
push
mov
loop
and
lret
add
cli
das
inc
mov
sahf
sbb
sbb
cmp
and
mov
adc
iret
pop
cmp
movsl
sti
in
pop
shll
insb
dec
das
dec
ret
cmpsl
add
mov
mov
jmp
lea
je
sarb
adc
idiv
fisttpll
cltd
add
xchg
xchg
test
pop
in
and
dec
pushf
fsubr
push
and
pop
mov
fucompp
mov
sub
xor
pop
lods
mov
mov
call
das
sbb
push
sub
arpl
lret
subb
out
pop
addr16
cwtl
scas
dec
cwtl
and
xchg
push
movsl
leave
dec
insl
aam
mov
daa
testb
rcll
stc
rclb
jne
out
ja
out
test
dec
dec
or
jle
push
fs
adc
hlt
adc
sub
insb
lahf
xchg
sub
fwait
cld
lods
stos
dec
mov
xor
lock
sbb
imul
cld
repnz
out
in
in
push
sub
sahf
cwtl
dec
adc
in
aad
sahf
inc
add
hlt
mov
fisubs
out
jp
mov
mov
inc
and
lcall
sbb
fisubrs
push
into
bound
aad
std
aas
mov
cld
icebp
mov
fisubrl
dec
cmp
push
adc
imul
sar
sbbl
xor
popf
rorb
jecxz
and
daa
aam
leave
dec
cmc
fists
push
adc
cmp
xor
popf
jns
push
nop
rclb
mov
inc
leave
mov
movsl
es
outsl
cs
mov
jmp
cwtl
pop
mov
fsubrs
inc
add
and
inc
add
mov
push
or
add
add
xchg
insb
hlt
shl
cltd
call
mov
hlt
das
sarb
jae
adc
xorb
ljmp
fs
outsb
mov
fstpt
sub
pop
cmp
iret
fcoml
aad
mov
out
xor
push
cmp
mov
arpl
sar
inc
sub
mov
data16
sbb
mov
cmp
cmp
je
add
mov
lret
dec
mov
nop
rclb
aas
out
cmp
cmp
mov
bound
daa
push
es
jnp
test
xor
adc
or
mov
jb
mov
xor
mov
movb
lock
mov
sub
inc
mov
cld
sub
pop
sub
inc
pop
mov
ljmp
not
push
mov
xor
test
sub
and
mov
das
divl
push
adc
jo
mov
xchg
shlb
jecxz
sahf
jae
lea
pop
loopne
cld
imul
or
push
inc
bound
dec
pop
push
daa
cltd
scas
push
xchg
pop
imul
adcb
int3
push
mov
jmp
xor
and
repnz
xchg
sbb
push
addr16
mov
add
sbb
lods
xchg
cmp
add
outsl
inc
imul
jae
push
push
sub
adc
into
xchg
mov
mov
xor
fdivl
cmp
mov
add
dec
imul
lret
inc
aam
and
push
mov
add
mov
push
sub
test
fcomp
dec
cmp
mov
je
movsb
adc
ds
stos
mov
or
jp
xchg
xor
pop
push
xchg
jge
fiadds
sti
push
pop
jle
cld
mov
mov
and
mov
lret
jmp
iret
jecxz
inc
and
add
loope
inc
loope
adc
xor
aas
dec
mov
iret
xor
jge
xor
inc
into
adc
lock
push
or
adc
mov
push
sbb
in
xchg
lahf
insl
sub
or
addr16
data16
adc
inc
ret
cs
ss
decb
pop
lea
inc
push
jae
mov
sub
std
js
xor
jp
cmp
leave
mov
mov
lcall
sti
test
jb
cmc
test
push
mov
xchg
pusha
test
mov
dec
jmp
mov
sbb
dec
in
pop
dec
mov
jmp
sbb
cwtl
or
jno
jmp
push
loope
xlat
sub
cmp
dec
fdivs
rcl
inc
and
cmp
movsb
mov
or
mov
inc
ret
out
pop
push
das
leave
outsb
jb
sbb
fwait
cmp
mov
loopne
hlt
lahf
push
in
popa
mov
push
int3
xchg
pop
xor
sarl
cltd
xor
add
dec
in
pop
cs
xlat
and
xlat
in
mov
adc
test
rcr
je
lea
push
arpl
pop
jge
push
push
jle
test
retw
aas
mov
cmp
test
inc
daa
mov
dec
sub
mov
xchg
pop
imul
cmp
mov
iret
jnp
je
lods
inc
out
xor
mov
xchg
cs
adc
bound
xor
shlb
mov
lds
adc
roll
cmp
das
insl
popa
sbb
test
std
fistpl
xchg
mov
setg
mov
push
inc
ret
nop
outsl
add
loopne
cmp
lcall
mov
sub
iret
push
outsb
adc
cwtl
stos
data16
mov
mov
ret
es
pop
sbb
push
sar
pop
and
aas
lret
xchg
hlt
jg
fdivp
xchg
dec
lods
ja
inc
stc
scas
inc
dec
push
pop
fs
cmp
mov
jbe
xchg
jmp
sarb
pop
repnz
cwtl
aam
xchg
fs
mov
pop
dec
stc
jle
inc
pop
jnp
xchg
je
daa
and
xchg
je
or
lods
rcl
call
jb
adc
out
shrb
stos
movsl
xor
adcl
inc
jae
inc
add
pop
push
in
repnz
and
fistpl
jmp
mov
cltd
mov
addr16
nop
loopne
nop
mov
rcr
cmpsb
pop
popa
movsl
insb
std
std
xlat
sbb
jne
mov
cmp
scas
popf
fnsave
shrb
inc
scas
outsl
or
jge
xor
aaa
in
jns
jnp
test
push
mov
jmp
pop
lods
rolb
lret
mov
leave
push
jmp
out
and
cli
and
fs
and
inc
sti
pop
loopne
movsl
neg
inc
imul
scas
push
ret
cmp
inc
inc
lahf
frstor
xor
fistpl
push
push
pop
pushw
mov
mov
xchg
mov
vpaddq
das
int
pop
popa
ret
mov
divb
jo
scas
rcll
push
mov
xor
or
pop
sub
in
xchg
pop
mov
cmpsl
hlt
icebp
stos
cmpb
pop
or
add
fists
std
nop
sar
fsts
fcompl
outsl
out
inc
adc
xchg
test
cwtl
ret
add
mov
dec
fisubrs
into
insb
inc
pop
jle
mov
inc
andl
mov
xchg
cmp
loop
test
sbb
sub
add
test
inc
jnp
inc
jmp
xor
daa
es
lods
std
mov
test
out
fistpl
cmc
push
enter
pop
out
sub
mov
push
loopne
data16
mov
xlat
ja
stc
and
movsl
mov
pop
sbb
sbb
shrl
mov
inc
inc
adc
iret
pop
mov
pop
shl
xor
cmp
pop
sbb
sbb
adcl
fwait
push
pop
sbb
xor
dec
dec
sub
movsl
enter
decl
pushf
jne
jl
daa
push
dec
push
ss
inc
pushf
or
repz
clc
int3
pop
jl
popf
stos
xlat
cmc
test
sbb
cmp
orl
adc
adc
cltd
add
jl
xchg
popf
pop
sahf
in
cmpsl
rcll
in
mov
mov
inc
jle
lea
stos
sbb
cmp
xor
push
fcmovnu
xor
inc
dec
add
add
push
mov
mov
add
nop
mov
cmp
out
mov
incb
xchg
iret
div
sbb
fsubrs
dec
cmpsl
js
enter
sub
fadd
cmp
sub
push
push
cmp
adc
push
or
clc
or
sbb
shl
pusha
mov
mov
inc
jno
sbb
xchg
pop
ja
and
push
dec
pop
dec
mov
pop
jae
divb
scas
repz
pop
lahf
mov
out
out
pop
das
leave
lcall
cmp
gs
fs
div
inc
out
jg
or
cmp
push
lcall
adc
add
out
cmp
lods
or
aas
jmp
jle
mov
pop
cmpsl
sbbb
pop
out
nop
fisubs
dec
jmp
sub
pop
hlt
cmp
ret
sub
sub
xor
dec
inc
int
es
movsl
in
std
jg
aad
and
movsb
gs
rclb
out
push
cmpl
in
sarl
cli
sahf
push
or
and
movsl
xchg
stos
sbb
cmp
mov
mull
cmp
enter
fstl
xchg
add
sbb
das
addr16
mov
aad
mov
leave
cmp
inc
out
and
and
lods
mov
or
mov
inc
jb
cld
ljmp
ja
hlt
mov
cltd
addr16
mov
push
cld
mov
imull
or
scas
clc
dec
cwtl
pop
push
sub
mov
pop
call
fisubl
loopne
mov
sub
push
aam
out
dec
pop
hlt
dec
jl
cs
lcall
and
repnz
dec
in
pusha
enter
add
push
mov
into
lods
cmp
dec
mov
test
jbe
fidivrl
rorb
pop
push
ret
or
dec
enter
jnp
and
add
or
pop
sbb
push
fsubrl
movsb
ret
sub
xchg
leave
dec
enter
pop
clc
mov
mov
jle
mov
jb
xor
or
dec
shl
in
ret
out
shrb
bnd
mov
xchg
push
mov
jecxz
popf
cwtl
dec
mov
sbb
fwait
cmpsl
inc
roll
xchg
addl
sbbl
orl
movsl
adc
adc
ret
outsl
cmp
sub
add
lret
xchg
popa
pop
jns
xchg
ficomps
lret
xor
std
mov
out
pusha
push
rorb
in
xor
call
sbb
lcall
aas
dec
mov
xchg
push
dec
jbe
lret
mov
jle
mov
and
cmp
mov
mov
fwait
cltd
xchg
inc
mov
sbb
push
push
lock
add
add
jp
shrl
mov
jle
jmp
sub
imul
lds
loop
or
jecxz
adc
test
sahf
xchg
sbb
int
mov
aaa
mov
arpl
adcb
mov
mov
inc
push
push
add
adc
adc
ficomps
movsb
xlat
mov
ljmp
sbb
nop
shl
cmp
imul
and
dec
and
into
gs
jmp
out
sub
enter
test
addr16
sbb
loop
and
imul
push
mov
mul
or
mov
xchg
jge
and
mov
jns
fidivrs
call
jmp
cld
insl
mov
jns
cld
xchg
leave
bound
mov
add
movl
xchg
fildl
xor
ja
nop
mov
enter
sahf
out
fidivl
push
pusha
and
int
pop
stos
ljmp
fildl
cmpsl
cmpsb
notl
rol
dec
mov
scas
bound
sbb
add
jecxz
daa
xor
add
mov
icebp
mov
ljmp
adc
and
adc
xor
test
faddl
jns
sub
bound
jp
mov
inc
aam
stc
es
mov
and
add
cs
cltd
inc
or
loope
hlt
xchg
sbb
dec
jmp
mov
add
and
mov
jns
adc
jge
sbb
dec
out
jnp
jp
sbb
je
loope
cwtl
lea
aaa
shlb
jnp
xor
xchg
push
lds
div
in
mov
push
lock
jbe
ds
sbb
and
xchg
adc
or
dec
xor
xchg
jg
jno
pop
adc
mov
es
jmp
push
lods
add
mov
cld
repnz
mov
jae
je
xchg
mov
mov
decl
cmp
xchg
fistpl
or
ljmp
push
adc
xchg
cmpsb
xorb
js
mov
adc
fnstenv
mov
lods
push
push
enter
test
adc
cmpsb
cwtl
dec
mov
je
push
cmpsl
bound
inc
mov
ss
out
sahf
add
cmp
jge
daa
ljmp
jge
enter
dec
rorb
push
movsb
mov
adc
inc
mov
xor
cmp
enter
aas
pusha
hlt
cmp
push
in
pop
mov
sub
lret
mov
sub
inc
jne
aad
sbb
gs
jp
pop
cmpsb
pop
xor
loop
and
rcll
fldcw
arpl
or
inc
add
imul
out
pop
mov
jne
cmc
adc
and
mov
scas
cmp
xchg
adc
daa
sub
lds
xor
movsl
push
sti
and
cld
adc
push
adc
fwait
add
ficompl
and
es
dec
push
aas
retw
xorl
add
ret
je
push
sub
jo
pop
add
cmc
pop
jge
mov
fcmovbe
cld
pop
popf
add
dec
hlt
push
test
xchg
jle
sbb
std
xor
ret
je
arpl
mov
sub
fwait
ljmp
je
lret
pop
xor
dec
and
jbe
mov
mov
out
lods
daa
mov
cmpsb
xchg
imul
cmc
mov
shl
fists
js
aas
test
stos
std
in
pop
in
call
jb
inc
cs
stos
mov
aad
pop
arpl
and
lahf
mov
fucomip
pop
and
imul
cmpsb
dec
out
mov
in
sub
jbe
stos
add
andb
adc
addr16
icebp
add
test
cmp
adc
bound
adc
mov
cwtl
inc
push
lcall
arpl
cmp
add
jmp
fildll
sub
adc
addr16
dec
add
add
enter
push
dec
inc
into
cmp
scas
dec
lea
retw
repnz
ljmp
dec
out
scas
addr16
or
aas
out
insb
jecxz
xchg
jo
push
jl
lcall
shll
ds
jns
xchg
test
lret
inc
pusha
and
mov
mov
aaa
enter
xor
sub
xlat
jecxz
cld
rep
movsl
mov
int
movsb
subl
sbb
orb
test
xchg
adc
pop
scas
cld
sbbb
nop
and
in
adc
divb
or
lahf
add
dec
xor
pushf
inc
push
cmp
lods
pop
and
xchg
js
pop
cli
and
lods
out
shlb
std
and
popf
xchg
or
cmp
lock
xchg
cmc
ljmp
in
sub
sub
xchg
mov
stos
stc
and
cmp
add
pop
jae
loop
bound
fdivs
outsb
test
in
xchg
pop
adc
je
cmpsb
push
in
iret
inc
fists
lods
mov
mov
sahf
xchg
jecxz
out
pop
shll
dec
repnz
addr16
push
inc
aas
inc
push
icebp
or
xor
mov
dec
repnz
ss
test
fbstp
dec
mov
jg
inc
arpl
ret
and
out
repnz
mov
adc
mov
sub
fldl
data16
das
xor
stc
mov
mov
data16
fucom
dec
adc
sahf
arpl
stos
dec
adc
xchg
aam
jb
cltd
push
js
loopne
pushf
lcall
inc
sub
repz
dec
mov
mov
in
arpl
repz
in
mov
mov
sbb
lods
mov
sbb
mov
imul
daa
mov
call
pop
mov
inc
cs
stos
fnstenv
js
aaa
mov
xor
outsl
lods
cmp
pop
fldenv
hlt
mov
lock
cmp
add
sub
imul
jmp
rcr
push
cltd
lret
and
imul
loopne
gs
bound
mov
arpl
cmpsl
pop
and
adc
mov
sub
sub
and
sub
daa
sub
jbe
push
push
adc
aas
mov
jo
cli
fists
notl
sub
mov
test
mov
loop
adc
cmp
mov
lock
test
or
mov
fmull
jge
inc
xchg
xchg
nop
jle
pop
adc
push
shll
in
lods
dec
jb
pop
out
inc
inc
jo
or
pushf
rorb
dec
sub
repz
aad
sub
and
fnstcw
xchg
mov
jmp
mov
push
ror
jnp
inc
dec
in
jp
xchg
adc
adc
fisubrl
push
sahf
repz
xlat
movsb
xor
sbb
inc
addr16
test
adc
in
repnz
lods
testl
cmp
jnp
and
orl
cmp
push
jg
xchg
aas
mov
mov
adc
or
xlat
or
lods
addl
sub
mov
xor
mov
add
or
test
shlb
jl
insl
fmull
push
pop
leave
loope
and
ret
sahf
movsl
lret
clc
int3
fsubrl
xchg
inc
jmp
loop
lds
popf
lret
pop
lret
sahf
sbb
lahf
sub
mov
nop
push
push
dec
fisubs
pop
scas
inc
and
or
fwait
add
mov
pop
fsubl
sub
pop
push
roll
clc
xor
mov
push
test
xor
lahf
test
inc
loop
mov
fwait
stos
pop
add
xchg
xor
sbbb
mull
jns
inc
mov
mov
mov
mov
push
jge
int3
out
add
add
sti
scas
cld
in
adc
and
mov
testl
notb
iret
in
rolb
jbe
cmp
mov
adc
cmpsl
push
add
mov
mov
nop
icebp
add
leave
xchg
stos
mov
jae
ss
mov
shl
sub
cmp
call
subl
imul
mov
sbb
les
dec
ficompl
fstpl
jmp
or
mov
inc
add
push
aaa
rorl
sti
mov
negb
sti
pop
adc
lret
sbb
pop
popa
ss
pop
cli
inc
push
or
andl
lea
xchg
sub
shlb
or
icebp
mov
or
sub
mov
push
fimull
sarl
js
mov
mov
out
mov
in
sti
mov
gs
lods
stos
push
out
push
pop
shlb
paddq
and
fstps
mov
inc
sahf
cs
cmp
roll
iret
adc
icebp
cmpsb
iret
xchg
jno
push
loopne
xorl
sub
push
pop
mov
lock
or
call
fistps
ja
arpl
xor
ret
lret
lret
pop
ja
arpl
je
mov
fisubl
stc
jae
mov
mov
push
xchg
cld
movsb
lds
lock
orl
dec
or
pop
fldl
not
xchg
sarb
cmp
lea
jl
xchg
or
push
clc
adc
adc
dec
pop
inc
xor
mov
fld
testl
test
add
repz
ret
pop
inc
jb
xchg
das
mov
cmc
fld
pop
cmpsb
cmc
add
cld
loope
xor
cmc
cmpsb
sub
sbb
daa
lcall
fimuls
in
mov
out
shl
jg
mov
cmp
aaa
xchg
mov
jmp
sbbl
aad
push
lret
insb
imul
sub
and
cltd
xchg
dec
xor
mov
fcmovnu
loope
xchg
mov
mov
ja
lret
pop
and
ficoml
fs
jbe
lret
pop
lea
jmp
push
movb
jae
movsb
xchg
xchg
scas
xor
das
bound
jle
cmc
pop
fstps
leave
data16
mov
ret
rorb
mov
sub
in
cmp
loop
mov
pop
inc
or
pop
sub
test
gs
cmpsl
add
loope
ficompl
xor
rolb
cld
daa
add
inc
cwtl
pushl
aam
pushl
enter
jle
imulb
jb
jp
xchg
hlt
test
sbb
popf
mov
sahf
stos
ds
dec
in
mov
or
repnz
rcrb
gs
push
es
adc
cmpsb
sahf
fwait
xor
mov
cmpsb
fisttps
and
sub
test
imulb
inc
cmp
add
in
pop
shll
add
out
gs
in
inc
les
or
push
adc
dec
negb
add
aad
leave
xchg
jne
movl
xorb
bound
inc
shlb
in
mov
fimull
outsb
cmp
xor
xor
icebp
je
xor
sbb
ja
aad
jns
enter
movsb
cmpsl
sbb
push
fneni(8087
ficomps
lcall
sub
cmpb
mov
mov
lcall
and
rcr
popf
xor
jl
insl
aad
aaa
push
add
mov
jnp
xchg
loop
addb
push
mov
adc
imul
out
negl
sub
subl
xlat
xchg
aad
lods
js
adc
lock
movsl
loopne
les
lret
push
mov
pop
addb
xchg
call
xor
adc
add
add
sub
mov
inc
sarb
cmp
js
sbb
xchg
cmpb
test
xor
int3
mov
dec
add
add
icebp
inc
sbb
or
adc
mov
xchg
cld
scas
ret
push
jno
ljmp
inc
aad
sarb
jp
sti
loop
out
out
add
mov
paddd
sub
xchg
sub
rolb
lods
out
jo
mov
push
xor
loope
repnz
popf
mov
push
scas
pop
push
aas
jbe
scas
add
mov
pop
jmp
cli
outsl
pop
mov
fs
sarb
xlat
cmp
enter
sbb
mov
pop
movsb
les
jae
pop
mov
mov
data16
fdiv
pop
sbb
pop
mov
and
mov
xor
add
xchg
mov
push
rorl
or
mov
fisubrs
iret
stc
popf
repnz
dec
inc
jnp
or
sub
sarb
in
ds
repz
cmp
sbb
pop
fwait
push
stos
shl
push
mov
sbb
ja
jmp
dec
jb
imul
pop
test
mov
test
xchg
xchg
mov
imul
fadds
aam
rcll
movlps
ret
lods
pop
mov
inc
mov
mov
lods
push
sub
mov
mov
and
aad
push
je
adc
inc
mov
xchg
dec
fdivrs
daa
outsl
rorl
test
inc
pusha
adc
inc
mov
aad
rcl
fidivrl
les
sbb
cmp
xor
aad
lods
xor
xchg
cmpl
in
dec
adc
shrl
adc
in
jne
idiv
add
xchg
dec
mov
shrb
mov
in
jmp
scas
inc
mov
cmc
test
jae
loopne
mov
and
sub
aas
loope
mov
cld
mov
sbb
push
andl
aas
inc
inc
lods
xchg
frstor
movsb
lret
jp
jo
jnp
mov
daa
loope
adc
push
mov
mov
ret
cmp
das
mov
adc
xchg
xchg
mov
push
adc
mov
mov
pop
dec
into
pusha
daa
or
adcb
mov
jge
xchg
inc
mov
clc
cli
arpl
out
lods
hlt
mov
add
mov
xchg
dec
cmp
dec
mov
dec
xor
lods
pop
stos
mov
cmp
repz
js
rcrb
das
repnz
push
outsl
subl
xchg
lcall
jne
fld
addr16
jecxz
cmpsl
mov
mov
push
shrb
jecxz
add
insb
lds
cmpsl
nop
push
addb
jecxz
cwtl
xor
stc
adc
test
cwtl
cmp
rcrb
test
sbb
jbe
data16
add
shrb
int
js
fwait
or
xchg
test
jp
sub
and
add
and
cmp
inc
incl
mov
push
fisttps
fwait
or
inc
lods
sbbb
sbb
add
push
sub
push
sub
xchg
xor
mov
push
mov
imul
jb
pop
rcl
jnp
fcmovbe
pop
cmp
clc
mov
jno
fadd
mov
inc
mov
or
inc
mov
xchg
and
xchg
adc
xchg
sub
lds
dec
fistps
cmp
cmc
in
pushf
and
push
inc
mov
xor
or
dec
les
shll
mov
out
push
dec
cmp
mov
mov
scas
push
shlb
in
sub
out
ja
stos
mov
xor
push
push
pop
shll
cmp
test
mov
jne
mov
cli
dec
outsl
loop
cmp
sub
lcall
test
pop
lods
push
dec
into
stos
mov
addr16
rclb
mov
push
stc
jbe
int
and
dec
aad
stos
lods
stos
xchg
jl
frstor
mov
sahf
push
inc
test
adc
imul
jo
andb
incl
pop
nop
movsb
xchg
sbb
push
push
call
scas
or
leave
sub
pop
stos
push
or
xor
icebp
xchg
mov
imul
dec
jg
pop
movsb
mov
stc
jecxz
enter
scas
jo,pt
adc
fs
adcl
jbe
inc
fldt
adc
aad
movsb
mov
sbb
fcoml
sbb
add
pop
push
inc
pop
mov
cmpsb
adc
popf
ja
adcl
aas
jae
in
imul
in
cwtl
lcall
shlb
rorb
test
sbb
sbb
push
lret
inc
xor
sub
xchg
les
lret
sbb
test
adc
jns
rol
std
loope
xchg
add
or
inc
sub
xchg
into
insb
and
jl
imul
ret
adc
sarb
dec
adc
imul
or
xchg
xchg
dec
sub
inc
and
mov
inc
cmpsl
ja
and
cmp
sub
push
leave
jecxz
dec
adc
je
imul
xlat
dec
ljmp
xchg
int
xchg
xchg
fsubrp
push
cmp
fnstsw
repz
push
outsb
xor
or
and
loop
jo
adc
dec
hlt
stc
xchg
in
es
inc
mov
fnstenv
frstor
ss
into
mov
cmpsl
inc
push
jbe
movsb
lcall
xchg
pop
cmp
out
lahf
dec
test
adc
fsubs
shrb
or
fstpt
push
scas
fidivl
scas
sub
pop
ljmp
fisttps
loope
fldt
shl
call
pushf
xor
push
aaa
and
fistl
push
loop
and
scas
inc
push
shl
flds
jae
jl
scas
push
lods
push
and
push
sub
stc
sbb
mov
xor
test
int3
cwtl
mov
adc
push
mov
or
es
mov
jmp
out
mov
push
movsb
push
imul
xor
push
test
stos
test
mov
nop
push
mov
jns
insl
repnz
scas
loop
in
mov
xchg
out
fstps
popl
sbb
stc
adc
pushf
sub
int3
mov
or
and
mov
cmp
inc
mov
mov
cwtl
or
ret
test
cltd
sbb
cmp
popa
movsl
into
cmp
sub
jb
lock
mov
sub
aas
mov
hlt
out
xor
aad
repnz
add
das
inc
sub
popa
dec
mov
jo
pushf
mov
push
jp
idiv
cli
xchg
dec
mov
stos
push
mov
pop
out
cwtl
cmp
sub
jnp
std
nop
adc
xor
call
cmp
push
les
call
or
or
lods
sub
cmc
xor
cmc
and
or
gs
sbb
repz
mov
pop
push
lock
and
cld
lcall
xor
sbb
dec
sbb
lds
mov
and
lock
in
jl
repnz
jns
leave
or
cld
xor
subw
or
xchg
jmp
jo
adc
adc
lods
xor
jbe
mov
jbe
xchg
cli
add
inc
scas
into
cltd
imul
aaa
dec
notb
push
mov
out
jle
inc
jp
out
rcl
mov
filds
pop
push
jle
xchg
ja
arpl
js
sbb
adcl
fdiv
mov
jnp
in
xor
adc
cwtl
movsb
stos
rcrb
pop
xor
dec
or
mov
add
rcrl
rcrb
fnstsw
sub
xchg
mov
mov
mov
bound
adc
push
lahf
aad
mov
test
jbe
inc
call
dec
rcll
jge
shlb
sti
jg
jmp
outsl
adc
scas
mov
jecxz
in
pop
insw
or
inc
adc
fsubrl
sub
dec
lods
mov
testl
add
mov
dec
jmp
aas
out
sub
stos
xor
test
mov
add
adc
and
sub
dec
popa
cmp
arpl
inc
in
mov
xor
inc
push
push
shlb
aad
idivb
iret
cmp
or
mov
pop
int
stc
adc
mov
lea
fwait
out
jno
inc
push
addb
xor
repz
iret
jne
aaa
inc
cmp
inc
fldl
push
pushf
das
mov
add
sub
cmp
out
test
dec
ret
pusha
pop
xor
std
outsl
cwtl
in
mov
push
out
lahf
sbb
push
in
dec
stc
mov
mov
mov
adc
pop
std
fwait
popf
xchg
rorb
hlt
data16
shll
cmp
push
mov
rcrl
adc
mov
sub
sbb
and
ret
fimull
arpl
scas
mov
scas
addr16
jecxz,pt
dec
cmpsb
mov
and
test
jp
addr16
pop
imul
pop
push
pop
xchg
push
inc
push
adc
pop
jbe
call
inc
jmp
sub
aas
jp
mov
mov
in
mov
add
pop
jbe
xor
mov
and
cmp
or
daa
cmpsb
data16
jae
orl
test
inc
mov
xchg
lea
sbbl
ja
call
cli
mov
xchg
out
lock
mov
pop
rorl
rolb
cwtl
ret
fstl
add
cmp
shrb
daa
cmpb
enter
imul
cltd
loope
shrb
pop
cmp
mov
push
cmp
aad
pop
push
ljmp
xchg
jg
clc
scas
fdiv
add
pop
inc
insl
lds
cwtl
das
add
xor
pop
int
loopne
mov
fwait
inc
xor
sahf
iret
jo
pop
in
sbbb
cwtl
lods
mov
pop
shlb
arpl
mov
ljmp
adc
and
add
lods
mov
sar
inc
shlb
outsl
xchg
das
test
adc
je
push
dec
pop
and
mov
push
push
add
cmpsl
adc
popf
inc
cmp
inc
int
imul
sbb
jo
xor
lahf
rcrl
ret
add
insl
fdivrs
pop
mov
int
dec
mov
adc
adc
retw
jge
clts
mov
ljmp
xchg
dec
call
jmp
movsl
fs
jne
rorb
push
arpl
cld
jecxz
das
test
dec
pop
xchg
dec
or
data16
stos
addr16
add
outsb
xchg
xchg
pop
pop
scas
mov
dec
into
fisttpl
test
mov
xchg
jecxz
sub
cmp
ljmp
ja
das
mov
push
pop
popa
or
je
inc
movsb
xor
sub
mov
les
gs
sti
loopne
out
mov
mov
jge
xchg
pop
adc
mov
cli
ss
add
push
movsl
cs
aas
mov
or
negl
dec
cs
add
mov
lret
jnp
pusha
xor
je
and
inc
cmpsb
es
cmp
pop
jae
xchg
insl
cmpb
jl
aad
leave
inc
mov
pop
xchg
movzwl
and
mov
popa
inc
xor
and
jb
sub
ret
jge
rcrb
in
lods
gs
dec
mov
xchg
mov
sbb
jecxz
xor
or
jecxz
movsl
add
ficompl
sbb
ja
in
popa
adc
jae
or
push
dec
mov
xchg
push
stc
test
inc
movb
gs
or
inc
pop
cmpsb
mov
cmc
or
cmpsl
mov
cs
lods
iret
movb
mov
or
cmp
sub
sar
xchg
push
mov
pushf
pop
scas
das
fnstenv
dec
adc
and
lss
ret
mov
cmpsb
shl
or
and
loope
pop
cltd
mov
ror
xchg
inc
push
scas
and
movsb
fsts
xchg
gs
mov
ljmp
icebp
sub
or
sti
ficoml
jb
bnd
mov
shrb
xor
out
lret
movsl
mov
daa
push
mov
jmp
adc
jle
shlb
sub
dec
adc
fadd
je
xchg
push
inc
mov
jle
and
clc
cmovne
push
ret
aam
sbb
or
sbb
outsb
push
mov
pop
orb
inc
mov
mov
add
inc
xor
jnp
ret
aas
xor
lahf
xor
xchg
xor
mov
mov
mov
jno
outsb
dec
jp
scas
mov
int
pushf
ljmp
push
je
inc
or
dec
js
aas
repz
mov
test
mov
mov
dec
pop
sbb
inc
fistpl
lds
mov
cmp
bound
and
mov
dec
adc
ljmp
out
and
movsl
mov
mov
fnstenv
jnp
cmp
dec
outsl
dec
mov
and
loope
pop
adc
xchg
stos
push
cld
dec
test
jge
int
dec
mov
rorl
jo
stc
mov
push
mov
cmp
mov
xchg
push
inc
xchg
mov
bound
or
adc
sar
out
hlt
dec
and
mov
cli
adc
jns
xor
movsl
cmp
cld
or
push
jmp
shrl
adc
cmp
cld
xor
dec
or
fmull
add
adc
cmp
mov
call
int3
rclb
fmuls
out
insl
adc
xor
push
testb
jp
iret
orl
out
inc
repz
insl
daa
dec
ss
mov
sar
jnp
ficompl
and
scas
and
and
sub
and
cmp
cmpsl
or
cmp
jl
push
dec
xor
das
js
mov
int
cld
inc
xor
inc
in
or
dec
daa
sub
enter
push
or
push
clc
repnz
inc
push
adc
mov
mov
sbb
mov
filds
cmp
dec
lret
mov
inc
lahf
cwtl
ljmp
imul
mov
push
mov
lods
ljmp
repz
push
add
jp,pt
fcmovne
mov
mov
mov
add
cltd
mov
es
pushf
cmc
dec
leave
and
mov
xchg
cltd
dec
mov
nop
sahf
repz
lea
jno
xor
aas
jbe
push
jne
dec
outsl
jecxz
ljmp
mov
ret
pop
jno
sbb
je
mov
mov
and
inc
jg
push
outsb
insl
test
rcl
loopne
pop
inc
push
inc
clc
dec
test
sub
xor
mov
xchg
and
xlat
insb
xor
outsl
ret
loop
pop
js
push
cmp
and
lret
repz
mov
dec
lock
xor
icebp
adc
punpcklwd
ds
xor
add
pop
and
fs
cld
mov
or
aad
cli
mov
mov
lock
dec
inc
hlt
xchg
inc
cmp
std
inc
incb
lret
rolb
xchg
xor
cmp
imul
mov
cmp
xlat
lahf
sub
push
ja
mov
ja
mov
subl
stos
outsb
xchg
mov
decl
and
mov
pushf
iret
cmpsb
bound
jecxz
mov
lret
imul
in
jnp
into
sub
adc
xchg
pop
loope
bound
sbb
outsb
jae
and
add
mov
addr16
cld
inc
xor
mov
ja
aad
push
xor
cmpsb
enter
add
push
fisttpll
fs
gs
and
sub
xchg
jecxz
imul
lret
hlt
cmp
jno
ficompl
sub
fsubrs
push
je
vdivps
or
jno
jns
xor
fsubr
and
jae
pop
call
mov
mov
inc
inc
xchg
test
dec
lds
and
dec
dec
cmp
movl
cmp
nop
lcall
lods
mov
int3
movsb
dec
and
int
shl
dec
adc
aas
movsl
pushf
mov
loopne
dec
inc
pop
out
fs
sub
ljmp
neg
inc
lds
fdivrl
loopne
out
daa
and
rol
adc
mov
sti
enter
dec
lret
jmp
push
jno
jg
push
inc
cmp
ljmp
outsb
ljmp
mov
cld
mov
cmp
sub
int
lds
add
mov
mov
xor
jno
mov
sub
xchg
push
test
shlb
insl
fistpll
jo
pop
lcall
cmp
add
mov
into
arpl
aam
adc
mov
add
jmp
jbe
movsl
push
sub
cmpsb
repnz
lret
flds
add
insl
push
jnp
jnp
sbb
mov
and
cmpsl
sbb
xchg
mov
sub
jl
imul
gs
je
ja
sub
add
cmp
push
pop
gs
call
push
adc
pop
outsb
xor
push
mov
cmp
or
les
call
in
mov
xor
mov
xlat
test
sbb
std
stc
out
out
fsubs
jp
popa
cmpsl
popa
xchg
or
cld
les
jge
sub
jno
cmp
into
xchg
and
lods
mov
sbb
outsb
iret
sub
popa
cmpsl
fimull
pop
mov
clc
xchg
mov
pop
inc
mov
jmp
xchg
test
sub
xor
jge
inc
lods
loopne
dec
mov
xchg
jecxz
movsb
popa
loope
or
das
inc
test
jns
lock
stos
and
sahf
pop
fs
popa
icebp
cmp
mov
sbb
call
popa
jo
adc
sub
mov
mov
mov
out
insl
fcmovnbe
push
scas
fimuls
sti
adc
ret
test
in
sub
xor
sub
dec
adc
inc
mov
stos
add
dec
inc
jnp
fsubr
jecxz
adc
outsb
aaa
add
inc
dec
cmp
cmp
xor
fs
mov
into
hlt
pop
arpl
and
lock
or
sbb
push
push
outsl
mov
mov
jg
sbb
subb
push
xchg
enter
and
push
rolb
mov
adc
inc
jns
xchg
mov
int
jb
test
arpl
mov
lock
sbb
mov
sahf
cmpsl
dec
out
sbbb
jle
arpl
dec
dec
test
adc
popa
aaa
repnz
loopne
pop
lret
outsb
shll
and
cld
ret
jecxz
adc
scas
cmp
mov
movsl
pop
jmp
bound
adc
pop
scas
fsubs
sbb
and
jno
daa
adc
pop
jmp
inc
int3
sbb
hlt
int
dec
rol
jge
pop
add
xchg
pop
mov
loop
ret
inc
xchg
adc
xor
xor
rorb
fs
mov
sub
js
cmc
loop
or
sub
jb
fidivs
mov
fs
in
aam
push
repz
dec
arpl
pop
sub
pop
adc
and
xor
fsubr
adc
stos
xor
pop
shll
jmp
loope
and
sbb
sub
xchg
enter
out
aaa
loopne
test
loop
clc
andl
push
fsub
pand
repnz
outsb
fists
insb
pop
push
out
sub
or
pushf
lods
insl
sbb
sub
mov
sbb
inc
scas
sbb
std
mov
mov
out
int3
mov
mov
in
push
jmp
fcmovnbe
sub
push
cwtl
jb
cmp
sbb
arpl
clc
sbb
pop
enter
sub
pusha
cld
fnstenv
loopne
add
dec
pop
jp
fadds
das
ds
fidivs
dec
faddl
cld
sbb
fisttpl
xbegin
cltd
push
or
enter
mov
sbb
stos
dec
pop
ljmp
mov
sub
and
fldcw
stos
mov
mov
xlat
pop
ret
xor
pop
jecxz
lods
fcmovb
addr16
in
cmp
inc
push
rcl
cmpsb
mov
lods
mov
jmp
jb
daa
mov
pop
jg
aas
push
fnstcw
fcmovbe
mov
jl
add
cmc
enter
scas
mov
dec
push
bound
xlat
or
push
add
shrl
loopne
hlt
rorb
jg
mov
dec
leave
cmc
xchg
adcl
xor
xchg
es
or
sub
arpl
in
or
pop
pop
mov
adc
mov
adc
fsubl
fistpl
adc
pop
fxch
imul
inc
mov
loope
in
xchg
inc
loopne
mov
out
or
fisubrl
xchg
push
xor
mov
sti
lods
push
mov
mov
imul
jnp
sti
or
dec
cmp
sbb
adc
out
push
insb
mov
xorl
or
xlat
mov
sar
fadds
mov
or
push
inc
test
or
mov
ja
mov
test
mov
aam
rcll
sbb
cwtl
xor
fbstp
mul
in
repz
roll
push
or
pusha
cmp
push
scas
sahf
mov
in
xor
movsl
inc
ficompl
sub
nop
data16
inc
cmpsl
push
push
mov
sub
enter
mov
std
popa
adcw
jbe
ret
mov
shlb
fists
push
inc
scas
ss
pop
stc
and
andl
sbb
dec
add
adc
and
jge
adc
pushf
aad
mov
pushf
cwtl
push
test
aam
lock
mov
adc
scas
sbb
xor
jb
add
add
sbb
mov
sub
pop
pop
push
arpl
push
xor
cli
mov
jo
mov
or
push
cmpsb
or
push
dec
hlt
dec
fisubl
mov
addr16
mov
fcmovu
loop
add
add
mov
ds
mov
mov
xchg
mov
iret
push
cwtl
push
je
out
inc
xor
stc
dec
mov
cmc
mov
mov
insl
scas
in
rcrl
xchg
sbb
fs
xor
mov
add
mov
pop
xor
or
ja
loopne
push
loope
ror
lds
adc
push
push
add
mov
sbb
mov
das
push
int
mov
pop
arpl
push
dec
dec
cli
jns
dec
inc
fsubrs
js
cmp
movsl
sub
xor
fnsave
xchg
xor
pop
sahf
dec
pop
lret
lret
jmp
cld
nop
int3
mov
out
xchg
pop
data16
xchg
mov
mov
loope
les
std
push
sbb
pop
pop
imul
ror
mov
dec
cmp
cmpsl
out
push
rcll
mov
out
mov
mov
test
popa
mov
icebp
inc
fsubs
cmp
mov
dec
dec
dec
xor
adc
dec
xlat
rol
cmc
cld
or
pop
mov
lea
cmp
test
cwtl
arpl
pop
or
sbb
cmpsb
rorb
pop
jne
cs
mov
out
gs
cld
iret
outsl
imul
mov
mov
push
call
lods
cli
dec
or
aam
dec
dec
je
push
mov
jp
jge
pop
push
pop
ljmp
xchg
xor
pop
xor
lret
mov
in
cld
ret
test
insl
jle
mov
mov
mov
push
pop
js
dec
lahf
sub
outsl
mov
add
cmp
les
xchg
and
pop
push
cwtl
das
xor
mov
xchg
inc
lcall
les
push
jl
rcrl
lcall
pusha
jmp
lret
int3
mov
pop
cld
mov
push
fdivrl
xchg
or
out
sub
jle
lods
xchg
movsb
sub
aas
outsb
daa
sub
add
les
gs
mov
jnp
in
rorl
dec
dec
mov
or
rorl
test
test
shrl
mov
rorb
or
out
fdivrl
add
shlb
mov
lret
push
clc
ret
inc
cli
in
dec
ljmp
xor
inc
pop
sub
daa
cmp
cmp
xor
mov
pusha
pop
sbb
lret
xor
xor
mov
pop
mov
test
loope
cwtl
sub
mov
sti
lret
jnp
cmp
pop
xor
leave
add
add
mov
cmp
imul
jp
pop
jp
repnz
stos
lods
xor
lcall
sub
jecxz
inc
inc
sbb
scas
and
and
dec
push
int3
add
jb
in
mov
loop
jnp
mov
testl
fcmovbe
jne
scas
mov
aas
je
and
into
dec
aad
sarl
dec
sub
negb
dec
in
loope
inc
clc
lret
lods
mov
xor
jbe
mov
add
ljmp
sbb
les
and
or
sbb
sbb
sub
test
icebp
in
or
stos
cmp
jo
leave
pop
sarl
jns
into
and
sub
dec
inc
dec
fimuls
shlb
add
xchg
lret
push
dec
lcall
push
outsl
adc
sti
out
push
dec
sub
sub
dec
or
and
js
cs
jb
sahf
cld
mov
int
inc
leave
ja
add
test
loope
std
sarb
sbb
sub
add
mov
jno
insl
sbb
leave
sti
mov
icebp
out
add
push
push
xchg
loopne
or
sarl
iret
ljmp
sbb
xor
test
dec
jae
test
dec
or
pop
sbb
fistpll
jno
jle
iretw
jne
mov
sub
add
and
add
or
outsb
jnp
stc
idivl
adc
cmpsb
dec
sbb
xchg
xlat
cltd
ss
je
push
or
in
daa
into
in
data16
lcall
fs
arpl
and
scas
fwait
cmp
sti
pop
adc
or
xchg
test
mov
movsl
cmp
mov
test
cli
xor
xchg
je
cmp
rcrb
add
cmp
test
ret
mov
stos
sti
cmp
cltd
lcall
fcmovu
je
xchg
xor
movl
insl
lds
lods
sar
lods
push
push
and
test
jecxz
in
ret
dec
das
and
mov
and
ds
pop
jns
mov
mov
sbb
pop
das
arpl
dec
rcrl
jl
push
aaa
cmp
rorb
outsb
shl
fstpl
bnd
dec
add
sub
push
pop
mov
xor
mov
fstps
nop
test
rcl
lock
jb
sbb
fdivr
loope
push
pop
or
add
add
mov
jno
call
fistpll
add
mov
jmp
sahf
jmp
pop
cmp
sbb
in
xor
ror
mov
jb
arpl
mov
pop
mov
adc
out
xchg
adc
ffree
and
jl
rcr
ds
jns
ss
jle
jg
inc
mov
in
clc
icebp
hlt
loop
xchg
jns
mov
dec
mov
lds
pop
movsb
and
out
inc
and
fwait
mov
inc
cmpb
and
mov
pop
sti
push
mov
lea
jl
xchg
mov
add
and
fadds
movsb
jle
xor
or
mov
loopne
fs
and
shlb
ja
in
pop
pop
jb
xchg
and
rolb
and
pop
pop
les
sbb
mov
cmp
mov
or
lret
in
fcmove
push
push
lods
pop
push
movsl
mov
fwait
int
adc
xor
loopne
insb
xchg
mov
pusha
inc
mov
sbb
outsb
imul
dec
cmp
fwait
cld
stc
mov
push
mov
out
fisttps
mov
sbb
pop
push
pop
sbb
push
sti
out
jno
mov
in
jl
jmp
clc
pop
adc
ret
pusha
push
add
mov
adc
fwait
ljmp
inc
inc
pop
mov
push
or
mov
dec
lcall
adc
adcb
add
aas
adc
into
cltd
das
jbe
mov
dec
insb
and
jbe
popa
push
icebp
jno
outsl
mov
mul
ror
mov
xchg
aad
adc
and
mov
ror
inc
push
shlb
push
pushf
sbb
push
inc
test
dec
mov
mov
stos
add
fwait
imul
or
dec
mov
in
xchg
sbb
leave
mov
outsl
mov
push
add
mov
out
push
mov
mov
mov
or
mov
push
int3
leave
adc
add
sti
bnd
cmp
inc
adc
xchg
lock
dec
push
aam
movsl
pop
ss
iret
inc
shl
lret
fidivrs
arpl
mov
popf
je
jge
dec
mov
push
pop
fisubrl
test
mov
or
in
enter
mov
ja
pusha
inc
sbb
imul
push
fisubs
clc
sbb
add
loopne
icebp
pop
mov
insl
call
or
sbb
sbb
das
push
push
test
nop
push
xlat
stc
add
out
and
sbb
fsubl
js
aaa
shlb
or
outsb
shll
and
cmp
mov
std
push
mov
lret
fimull
test
mov
ss
mov
xor
xchg
dec
lds
outsb
ja
cmp
fadds
xlat
adc
push
and
and
jb
lcall
xor
push
test
push
cli
xor
push
pop
cwtl
xchg
popf
mov
pop
hlt
jo
or
mov
dec
fidivl
jp
ds
jae
lods
inc
mov
in
mov
mov
aas
jmp
cmp
pop
fadds
sub
inc
ror
mov
push
mov
test
dec
mov
ret
je
test
jmp
popf
and
pop
enter
and
pop
mov
hlt
add
pop
adc
faddl
inc
jbe
bts
mov
mov
lahf
xor
dec
ss
aaa
daa
xchg
inc
push
dec
jecxz
fmull
test
and
lcall
jae
rcrl
xor
les
andb
add
adc
or
push
int3
jno
outsb
jne
aam
inc
and
jmp
inc
sbb
add
lea
movb
fidivrl
pop
add
loop
and
hlt
inc
ret
jp
pop
scas
iret
lahf
pop
insb
fsubl
repz
outsl
ret
mov
lret
jl
cwtl
andl
pop
cmc
mov
mov
repnz
push
nop
adc
jle
pop
adc
cmp
fcmovne
cmp
loope
mov
iret
adc
sbb
jle
push
outsl
sti
mov
cmp
stos
ret
movsl
in
leave
cmp
jnp
das
lahf
mov
test
int3
xor
mov
inc
mov
rcrb
jne
sbb
int3
jmp
add
sarl
push
dec
jno
sbb
loope
lret
hlt
popf
mov
js
fsts
ret
cmp
cli
or
fldcw
jmp
sbb
ret
sub
out
daa
inc
mov
xor
pop
cmp
xchg
ret
push
out
mov
sub
xlat
or
movsl
dec
or
mov
and
jo
cltd
push
dec
lods
scas
jno
push
mov
sbb
sahf
push
retw
scas
dec
jecxz
nop
mov
jp
jg
in
cs
movsb
dec
cmp
inc
adc
mov
mov
push
cmp
incl
or
mov
decl
call
mov
je
icebp
cli
or
in
adc
pop
inc
shrb
jbe
jae
mov
dec
daa
mov
int
lds
and
out
mov
mov
cmpsl
dec
lahf
pushf
shlb
imul
sub
idivb
mov
bound
add
icebp
cwtl
faddl
mov
fcomps
loope
xchg
inc
jp
scas
outsl
imul
pop
cmpsb
imul
cltd
mov
pop
dec
adc
push
adc
lcall
cli
jnp
adc
jmp
inc
or
push
and
or
cli
aaa
out
orl
hlt
push
adc
mov
bound
xchg
lahf
pop
dec
ja
sub
je
addr16
dec
sbb
add
adc
clc
pushf
std
mov
xchg
mov
adc
or
cmp
out
pop
mov
mov
in
xor
mov
scas
xchg
fisttpll
mov
lods
jno
mov
pop
addb
fiadds
sub
and
push
pusha
repnz
cmp
dec
cmp
jmp
icebp
pop
and
jecxz
or
outsl
mov
mov
test
cli
data16
xor
push
sub
sarl
dec
rorb
xor
sarl
or
sub
out
and
jns
push
cli
mov
inc
aas
push
std
add
sub
mov
retw
jge
mov
dec
test
bound
test
jo
cmp
push
dec
lcall
cmpsl
add
arpl
cltd
jecxz
or
adc
aaa
xor
std
loop
mov
add
lret
nop
dec
sbb
adc
fsubs
icebp
outsl
cmp
int
and
in
je
sbb
call
sbb
test
negl
jp
mov
mov
popf
rorb
push
hlt
mov
cmp
push
fsubl
xor
jle
sbb
pop
sub
adc
pop
mov
sub
adc
fildll
cltd
int3
and
xlat
jl
cmp
mov
fldt
push
mov
pop
in
cmp
popa
sbb
mov
cmp
test
mov
push
rclb
mov
push
movsb
push
jle
cmpsb
pusha
outsl
xchg
mov
jae
sub
mov
fnstsw
jmp
test
insl
outsb
and
jg
or
or
aad
add
sbb
pop
faddp
imull
int3
mov
xchg
fmuls
lea
add
mov
or
repz
sub
mov
mov
std
and
sahf
jbe
in
cwtl
xchg
scas
xor
xchg
aad
dec
ja
lea
or
mov
push
fnstsw
lahf
inc
jp
push
jno
scas
daa
sahf
adc
xor
mov
push
aas
aaa
mov
jl
adc
dec
cmpsl
fldt
aaa
dec
lret
or
mov
testb
shlb
jp
lds
pop
lock
jae
faddl
add
xchg
xorl
inc
mov
adc
sti
xor
cmp
insb
out
fistps
xor
inc
pop
repz
mov
fstpl
bound
enter
scas
inc
ud1
ret
jle
fistpll
mov
xchg
es
mov
pop
ss
jae
or
int3
pushw
or
flds
mov
in
push
jne
lret
js
xor
pop
cmp
dec
pusha
sub
mov
mov
fisttpll
sub
cmp
repz
jns
pop
xchg
mov
jg
add
mulb
mov
repz
xor
or
jbe
pop
cltd
repz
int
lret
jl
ret
sbb
sub
jne
cmp
mov
and
rcll
mov
aaa
mov
out
lods
cmovg
sub
nop
or
or
in
test
cmpb
jle
xlat
jmp
in
sahf
xchg
mov
xor
cmp
lret
dec
scas
or
pop
sbb
ret
sbb
movsl
loopne
shrl
jg
mov
and
mov
ljmp
xor
rcr
aad
push
push
or
mov
jo
cld
int3
push
sbb
stc
sub
dec
and
xchg
ficomps
cwtl
xor
jge
addb
cwtl
dec
mov
aas
add
xor
push
push
mov
or
jb
out
mov
fwait
xchg
mov
clc
fisttpl
lock
sarb
scas
testl
inc
inc
push
sbb
test
mov
dec
fdivrs
mov
push
push
ds
insb
inc
jno
sub
cmovo
sti
cli
fldt
sub
cltd
sahf
fidivrl
test
mul
xchg
pop
sub
xor
pop
jp
adc
sub
ret
dec
inc
mov
js
ljmp
lahf
sbb
cltd
mov
int
mov
inc
loopne
out
aam
divb
xor
cmp
fnsave
jl
pop
sbb
aad
mov
push
xchg
rcl
test
pop
inc
jns,pt
rolb
add
int
hlt
sbbl
xchg
in
negl
xlat
clc
push
outsl
sub
sub
push
imul
mov
outsl
rcl
or
ret
xchg
push
xchg
mov
aam
sahf
add
stos
mov
xchg
jge
mov
mov
mov
jns
sub
sub
inc
xor
jnp
xor
push
test
add
adc
mov
dec
jmp
jmp
stc
test
dec
and
shlb
pop
data16
gs
xchg
or
mov
sbb
jnp
dec
dec
aas
inc
adc
cmpsl
iret
fmul
bound
gs
rolb
es
sbb
cmp
xchg
ds
sub
clc
push
fmul
ljmp
loopne,pt
movsb
ds
hlt
inc
xchg
xchg
pop
and
test
cmc
movsl
gs
cmpsl
ja
enter
push
mov
inc
add
push
bound
jo
mov
mov
fs
pop
int3
imul
rclb
out
and
mov
adc
adc
nop
push
ret
cmpsb
adc
fisttps
stos
mov
push
test
es
loopne
mov
lods
out
xchg
inc
and
cltd
dec
es
or
sbb
repz
adc
lds
xchg
xchg
pop
push
mov
and
sub
aam
xor
int3
lret
xchg
fmull
loope
jecxz
or
inc
mov
bound
push
pop
scas
mov
popa
sub
arpl
sbb
mov
mov
sub
or
or
add
inc
dec
lahf
ja
mov
lahf
xchg
cmp
repz
xor
xchg
insb
inc
xchg
adc
es
loopne
or
lods
movsl
mov
lret
jp
push
or
das
in
dec
sahf
jmp
stos
mov
cwtl
xchg
jnp
bound
inc
mov
jo
and
inc
in
fsub
xchg
jbe
enter
pop
loopne
push
mov
popf
sub
xchg
push
pop
mov
and
cmpsl
jno
ret
pop
mov
arpl
cmpsl
lret
adc
enter
add
in
mov
aam
sti
and
mov
mov
sbb
fsubrl
pop
inc
sbb
lret
sbb
testl
aas
xchg
loope
cmp
aaa
dec
imul
adc
inc
sbb
mov
push
cltd
icebp
std
push
push
and
loopne
sbb
rcll
pop
jmp
mov
daa
lret
lahf
adc
pop
loopne
sub
xchg
ja
mov
fdiv
sub
inc
mov
mov
fstpl
and
xor
jno
int
cmp
dec
iret
mov
cmpsb
mov
call
dec
test
cli
xchg
mov
popa
sub
movsb
ret
xor
movsb
test
jle
ret
adc
sahf
je
push
iret
add
lds
and
and
push
ficoml
adc
xchg
out
push
push
lret
out
psllw
adc
jno
cld
jno
adc
shlb
fcoms
lea
mov
cmp
testl
insl
jb
dec
xchg
mov
imul
out
sbb
xor
cmp
dec
adc
inc
inc
in
jp
sti
adc
jno
js
or
dec
fistpll
aam
lods
sbb
iret
sub
aas
in
mov
xor
mov
xchg
jae
sti
subb
push
sub
mov
cwtl
sbb
adc
fstpt
stc
mov
inc
std
push
lret
dec
sub
jl
push
dec
mov
and
in
lods
add
lahf
nop
lcall
movsb
cmp
cld
and
mov
punpcklwd
and
enter
das
add
lret
fistl
xor
mov
dec
in
movsb
xlat
fsubrl
jmp
pop
lods
xchg
jb
or
adc
cwtl
test
out
roll
dec
add
stc
jne
inc
movsl
sbb
sahf
mov
js
das
adc
incl
jecxz
aad
rorb
mov
mov
push
xchg
cmp
jg
fs
sbb
daa
jno
movsb
cltd
xchg
sarl
movl
mov
mov
cwtl
add
mov
inc
std
sbb
or
adc
sbb
fcmovne
pop
js
adc
push
add
fwait
adc
push
out
shll
mov
shrb
add
fcoml
or
mov
movsl
scas
add
push
bound
push
daa
nop
movsb
xchg
gs
mov
ret
in
or
andb
repz
ja
adc
dec
enter
test
es
dec
cwtl
sbb
or
mov
std
mov
sbb
addl
repz
sbb
aad
fs
clc
andl
repnz
xchg
cmc
notb
mov
jmp
into
adc
scas
sbb
insb
fcoml
subb
cwtl
adc
std
add
imul
test
lret
enter
adc
xchg
ljmp
mov
or
stos
std
mov
inc
mov
inc
mov
test
cmpsb
rclb
insb
lcall
mov
outsb
mov
insb
inc
cmpsl
sbb
and
adc
fwait
push
jl
lahf
cmc
clc
call
adc
fisubl
pop
fsubrs
and
push
sahf
rcll
jb
xchg
and
mov
andb
adc
out
xor
mov
lock
mov
dec
orl
iret
adc
mov
rcrb
loope
dec
lahf
inc
ss
jp
add
jno
ss
xchg
inc
cmp
frstor
je
jl
mov
leave
and
popa
inc
loope
ds
mov
mov
xchg
ja
bound
xchg
fcomip
dec
lods
add
clc
aad
push
fucomp
jne
and
and
addb
push
aaa
decb
repz
ret
mov
insb
mov
xchg
adc
stc
iret
arpl
mov
fstps
roll
jns
scas
ror
mov
cmp
outsb
pinsrw
aas
ret
sub
add
arpl
hlt
out
xor
xchg
sbb
ja
adc
fs
push
scas
stos
cmpsb
pop
cmp
mov
mov
inc
out
rolb
rcll
push
ret
popf
ret
shrb
pop
insl
xchg
push
stc
ret
sbb
adc
cmp
nop
push
ss
daa
sbb
mov
and
orl
pop
lret
push
xchg
push
fs
call
into
imull
aad
jb
sub
outsl
xor
mov
mov
xor
xor
pop
iret
jecxz
inc
fstpt
mov
fisttpl
xchg
inc
data16
xchg
xor
test
xchg
push
gs
scas
ud1
xor
dec
push
xchg
je
rcrb
push
pop
hlt
adc
cmc
mov
lcall
cs
dec
jp
std
addr16
pop
fwait
les
out
push
outsl
or
add
frstor
imul
push
mov
fisubrl
mov
fcompl
loopne
test
mov
push
xchg
push
xor
in
push
pop
lods
mov
push
jae
dec
add
fcmovne
cmp
lret
test
lds
icebp
xor
outsb
loop
in
push
sbb
out
push
lock
sbb
or
lahf
and
ja
outsb
dec
fnstenv
movsb
out
mov
dec
inc
mov
test
out
pop
mov
psraw
adc
int
and
xchg
hlt
push
xlat
mov
cmp
in
or
shlb
pop
fistpll
stc
push
mov
pusha
sahf
dec
stc
mov
mov
pop
jo
and
add
pop
loope
xchg
insl
push
arpl
mov
adc
scas
pop
ljmp
adcb
mov
pop
int3
arpl
out
outsb
stos
inc
pop
lret
movsl
cmp
movsl
pop
out
xchg
push
push
xchg
imull
push
or
flds
mov
xor
cwtl
scas
add
xor
dec
inc
frstor
jne
cmp
ljmp
xchg
arpl
inc
xchg
cmp
ficompl
testl
bnd
xor
scas
sub
cmpsb
mov
leave
sbb
xorl
test
cmpsl
imul
mov
insb
xor
sub
ret
pop
add
jno
dec
nop
out
mulb
loopne
jae
cwtl
ljmp
andl
nop
rorl
jnp
addr16
adcl
dec
sbb
test
sbb
jmp
loopne
or
mov
das
xor
adc
fwait
xchg
aas
xchg
jnp,pn
push
popf
ss
pop
and
test
icebp
mov
cmp
adc
mov
pop
mov
stc
inc
or
cmpb
push
repnz
imul
xchg
les
nop
icebp
sub
xchg
jl
mov
out
pop
in
mov
mov
sub
sub
cmp
jmp
std
lahf
movsl
adc
mov
jmp
mov
je
cmc
or
cmc
add
bound
and
ss
inc
aas
add
adcl
mov
sub
add
insb
fdivs
insb
jecxz
les
pop
imul
lock
sti
or
xor
mov
adc
jo
test
imul
nop
rcrl
adc
lret
and
push
leave
jbe
in
dec
fdiv
stc
fistps
sbb
orb
and
and
cmp
test
cmp
hlt
mov
sub
in
pushf
pusha
mov
stc
stos
sbb
call
mov
pop
int3
jg
mov
cmp
test
nop
dec
ret
ret
cmp
xchg
pusha
cmp
in
cs
shll
fcom
sub
fisubrs
cltd
mov
mov
or
pop
ds
inc
sbbb
fwait
loop
inc
hlt
loope
outsb
jnp
jle
inc
lock
and
scas
pop
lahf
cmp
inc
rolb
cs
jnp
mov
mov
lea
sbb
push
sbb
mov
hlt
jnp
cmp
movsl
and
mov
inc
push
cld
or
xor
mov
fs
imul
lcall
xchg
ret
repz
push
adc
mov
adc
mov
mov
mov
mov
sarb
lea
xor
sbb
sbb
shrb
test
and
insl
scas
out
jns
mov
adcl
cmpsb
cmp
mov
stos
stos
mov
cs
popf
jmp
repnz
sbb
adc
lock
movsl
out
das
lea
push
push
cmp
std
movsb
sbb
mov
aad
cmc
mov
mov
in
jecxz
pushw
jmp
fwait
xchg
cmp
push
imul
andb
inc
or
mov
rol
clc
pop
movsb
xor
fisttpll
rorl
daa
hlt
jg
sub
and
sub
or
cmp
mov
pop
in
rcll
nopl
adc
jg
orb
cld
inc
repnz
mov
jle
push
sub
je
or
outsl
out
cmp
cwtl
pop
fwait
je
adc
adc
mov
dec
ds
push
sbb
jmp
push
push
ret
bound
sub
pop
sub
cmc
xchg
daa
cli
adc
sbb
test
ljmp
mov
es
insl
cmpb
test
arpl
adc
mov
cwtl
inc
xor
sbb
pop
movsl
aam
movswl
sub
jb
ss
lock
add
mov
addr16
jne
dec
jg
push
dec
or
pop
dec
inc
stc
push
push
and
imul
mov
cwtl
mov
or
mov
repnz
dec
push
dec
jne
adc
sbbl
xchg
and
pop
lret
mov
add
pop
mov
ljmp
cmc
rcl
ret
jne
jmp
adc
mov
sbb
es
sahf
add
rclw
mov
aas
cmp
rcrb
sbb
clc
jp
fisubs
add
test
mov
test
sub
imul
fildll
lcall
and
sbb
adc
roll
shr
fmuls
lcall
inc
or
mov
orb
ds
sbb
call
lods
add
lcall
andb
hlt
aad
js
lods
xchg
das
in
and
rcr
popa
or
pop
mov
icebp
add
data16
sbb
ja
test
jecxz
push
pop
mov
fistps
and
ss
dec
sub
hlt
sbb
cmpsb
addb
xor
sub
es
mov
mov
lea
mov
imul
and
mov
ja
ljmp
ds
mov
add
push
lret
hlt
pop
push
cs
std
mov
jle
mov
not
add
or
inc
je
outsl
sbb
scas
enter
sub
mov
test
mov
inc
icebp
imul
out
add
add
xchg
shrb
push
jb
sti
pop
cwtl
adc
fwait
data16
adc
ds
sub
adc
add
aas
push
incl
insb
adc
int3
rcr
jae
xor
into
addl
inc
pushf
loopne
jnp
push
popf
pop
in
int
jae
jo
sarb
ret
int
mov
pushf
or
and
xchg
inc
or
jbe
push
push
out
inc
sahf
mov
cmp
std
int
jnp
arpl
rorl
lea
mov
loopne
adc
fwait
pop
mov
cmpsl
and
pop
cmc
cmp
xchg
mov
and
jnp
jmp
sti
mov
jnp
xor
pop
inc
test
push
insb
ljmp
call
sbb
fnstsw
cli
pop
inc
mov
xchg
lds
ret
in
jo
fstps
lods
push
loopne
xor
push
fcompl
and
jno
pop
jb
jo
sub
cwtl
fdiv
sub
fs
repz
or
sbb
imul
std
cli
xor
mov
scas
dec
add
iret
out
inc
sbb
xchg
lcall
test
xor
sub
rorl
sti
pop
leave
jns
jmp
sbb
mov
test
loop
sub
xor
add
cli
aaa
mov
and
jmp
pop
inc
inc
iret
out
fsubrl
out
cs
bnd
test
adc
inc
movsb
hlt
pop
push
dec
adc
pop
arpl
jae
jnp
or
jo
push
stc
lahf
mov
clc
fstps
push
mov
lcall
mov
subb
jns
sbb
imul
or
xlat
push
ja
fadds
aas
cmp
push
mov
dec
popa
pop
icebp
cli
das
inc
adc
inc
dec
mov
data16
xchg
pusha
xchg
push
jl
or
lcall
ror
jmp
pop
mov
sub
mov
push
cmp
int
jge
xor
subl
lods
sub
mov
sbb
loopne
les
std
jle
jle
adcl
and
scas
and
imul
popf
pop
lea
xchg
pop
push
aam
cmpl
add
sub
sbb
jbe
jbe
push
push
rorb
inc
inc
add
mov
xchg
and
dec
rcrb
mov
and
push
loopne
push
dec
add
inc
cmp
into
sbb
jle
push
cmp
hlt
add
push
arpl
add
ja
data16
gs
nop
fcmovnb
sub
inc
outsb
fs
popf
adc
int
ficomps
add
fistl
mov
cmp
jle
push
add
jg
ljmp
outsl
aas
jno
sbb
out
cmpsb
or
scas
not
movsl
xlat
andl
push
or
daa
add
xchg
mov
scas
mov
cmp
cs
es
inc
jns
lea
or
popl
xor
shl
je
pushf
movsl
mov
clc
mov
xchg
popa
shrb
inc
pop
push
es
inc
adc
push
repz
sbbl
add
stc
lods
stos
xchg
mov
ficoml
mov
ds
neg
xchg
push
mov
ret
pop
push
cltd
ljmp
stos
in
movsb
sub
in
hlt
dec
xchg
cmp
idivl
or
fisttpl
scas
push
adc
scas
test
fldcw
add
fsubs
cltd
lret
mov
outsb
jne
sub
outsb
inc
add
cmp
pop
xchg
or
jl
xchg
adc
mov
pop
dec
mov
mov
xor
arpl
push
cmp
jbe
cld
icebp
inc
xchg
mov
cmp
push
adc
dec
mov
hlt
jecxz
mov
test
push
lcall
cmpsb
call
lret
mov
mov
cmpsb
lods
sahf
ret
out
lret
inc
push
mov
xlat
add
push
jno
pop
xchg
and
adc
jecxz
repnz
dec
adc
mov
insb
shrl
sahf
xchg
call
cmp
cli
and
xchg
dec
inc
pop
jecxz
xchg
insb
mov
aas
filds
stos
xchg
fnstcw
adc
push
adc
or
pop
sub
or
push
lock
and
ds
cwtl
cmp
cmc
sub
cmp
inc
add
and
dec
push
add
dec
push
xchg
pop
in
jne
or
subb
inc
push
js,pt
inc
ja
lods
inc
jecxz
jnp
popa
and
lcall
fdivr
loope
shrb
push
addr16
xchg
cmpsl
xor
pop
shll
sbb
fisttps
sti
push
sbb
les
cmp
xchg
xor
enter
leave
pop
cmpsl
add
xchg
leave
out
push
sbb
into
jno
mov
popf
in
or
scas
imul
add
cld
cmp
xor
call
cmpsl
lahf
push
xor
je
iret
stc
enter
rclb
jns
adc
push
sub
mov
pop
add
mov
jae
jns
ds
adc
sub
xchg
pop
and
imul
and
repz
push
add
les
jle
out
inc
mov
cwtl
mov
pop
loopne
pop
mov
int3
xchg
cmp
lcall
ljmp
call
adc
dec
into
fldt
sbb
xor
clc
xchg
push
xchg
int3
std
add
ss
push
imul
dec
sbb
xor
and
aam
daa
hlt
js
mov
sub
pop
cmpsl
mov
and
xchg
loope
imul
test
lahf
and
enter
xlat
fiadds
ljmp
add
xchg
enter
es
inc
clc
xor
fwait
jmp
addb
cmp
lret
or
add
call
pop
xor
xor
inc
pop
inc
and
cltd
out
ret
inc
mov
cmpsb
push
xchg
jns
jmp
test
xor
mov
mov
mov
movsb
inc
mov
mov
cmc
das
ret
pushf
cwtl
insl
jne
pop
sbb
inc
pop
xchg
inc
and
iret
cld
adc
xor
cmpsb
in
cmpsb
nop
mov
enter
incl
stos
vphaddubw
xor
lcall
sub
dec
mov
add
pop
pushf
imul
fistpl
push
jg
repnz
dec
jecxz
push
aad
jo
loopne
push
xor
jb
scas
sbb
in
lret
aam
pop
int
sub
dec
vmovaps
sub
es
jmp
mov
fadds
lock
jns
jo
int3
popa
jnp
push
cmpsl
fs
sti
psadbw
xchg
ljmp
popa
mov
jle
clc
or
pop
in
xchg
out
cmp
gs
push
sbb
jne
and
mov
or
pop
or
dec
pshufw
aaa
je
int3
xchg
js
adc
test
ficoml
movsl
dec
cmp
cmc
inc
push
out
xor
es
xor
adc
cmpsb
and
rorb
mov
sbb
test
shrl
aaa
mov
sti
iret
push
aad
ss
jne
mov
sbb
or
cli
mov
lods
out
jno
inc
jnp
add
ljmp
int
pop
xor
add
mov
fstp
leave
les
sub
test
stc
mov
adc
int3
xor
ss
mov
cmp
scas
inc
negb
xlat
mov
mov
sbb
repnz
mov
cmp
adc
out
daa
jmp
xchg
push
jbe
dec
es
daa
hlt
decb
rorb
and
ss
or
rcrb
std
arpl
and
add
dec
sbb
sti
inc
push
jp
mov
adc
notb
imul
mov
repz
hlt
add
sbb
cmc
jle
jno
or
xchg
and
lea
fiadds
sbb
push
fcompl
and
add
mov
adc
or
enter
dec
xchg
cltd
and
fldenv
ds
and
jg
shl
fwait
mov
outsl
mov
test
push
inc
cmp
sbbl
jmp
adc
in
pop
out
mov
stc
jns
stos
insl
jae
call
clc
repz
mov
clc
ss
aas
nop
mov
xchg
mov
int3
push
adc
push
int
dec
aas
pop
dec
sbb
mov
xchg
ds
ret
fistpll
call
mov
xor
lea
or
scas
add
arpl
pop
xor
mov
js
add
pop
das
nop
sub
inc
fimuls
rorl
jb
jl
mov
mov
popa
fcmovb
test
call
sbb
pop
psrld
lea
loopne
jne
push
xchg
movsl
jne
out
cmpsb
push
movsl
out
popa
movsl
mulb
adc
push
cmp
idiv
mov
sub
cltd
aam
inc
add
xor
insl
sub
cs
cli
push
in
mov
hlt
notb
xchg
add
jmp
or
xor
xor
pop
jnp
mov
add
out
or
stos
pusha
in
dec
adc
push
ljmp
jg
into
test
jg
sbb
mov
lock
mov
xor
mov
aam
xchg
out
pop
lock
push
cmp
popa
cwtl
pop
idivl
sbb
cmp
lret
sbb
hlt
scas
xchg
mov
pop
popf
pusha
call
leave
es
fs
pop
sti
add
mov
test
mov
jb
mov
arpl
xchg
insb
mov
lret
mov
enter
ret
aas
jns
daa
pop
mov
loopne
cmp
pop
movsl
or
or
mov
aas
adc
push
and
jg
sub
test
daa
mov
dec
adc
rcrb
inc
mov
xchg
dec
push
pop
int3
or
cmpsb
xchg
mov
cmp
or
ja
in
pop
mov
inc
or
lret
add
mov
loopne
dec
repz
xchg
outsb
lret
leave
jg
mov
add
adc
iret
lods
ja
jp
mov
enter
shr
movsl
loope
das
cmpsl
je
in
dec
loop
in
pop
pop
mov
ss
jmp
in
pop
mov
subb
and
in
fistl
jle
movnti
popf
or
mov
inc
fbstp
dec
sti
arpl
cmp
mov
shlb
jbe
loope
mov
xchg
dec
daa
stc
or
nop
lret
ret
push
jge
push
sbb
ds
and
jge
push
loop
adc
arpl
or
popf
and
incl
repz
fwait
aam
mov
mov
dec
xchg
sbb
mov
test
xchg
lock
push
cmp
call
jno
jo
and
fistpll
xchg
or
push
insl
aaa
jae
cmp
scas
pop
sub
cmp
or
sbb
mov
xchg
fnsave
or
sbb
outsb
jo
insb
jl
mov
std
adc
xchg
sbb
in
mov
jb
ljmp
mov
pop
push
push
xchg
idivl
lahf
lahf
xor
jno
push
lea
pop
das
mov
mov
or
fildl
add
loopw
pop
xchg
or
cmpl
pop
xchg
inc
mov
cmc
int3
mov
movsb
xchg
popf
jne
sub
dec
enter
sbb
fnstsw
aas
mov
ss
jle
mov
enter
jns
dec
out
std
lret
xchg
mov
add
lods
out
pop
ficomps
sbb
daa
lahf
cli
fadd
cmc
iret
clc
dec
mov
int
jb
out
push
out
mov
aam
xor
xchg
jg
inc
cltd
out
adc
shrl
rorl
fidivl
mov
test
sub
or
jno
cmpsb
mov
pop
cli
dec
das
mov
ja
jbe
xor
push
inc
jp
shrb
cmc
jnp
push
adc
mov
add
inc
daa
add
mov
jmp
jg
adc
mov
enter
lock
push
inc
repz
dec
sub
and
test
push
sub
jp
cmpsb
cmc
aad
arpl
mov
iret
cmc
cmpsb
out
push
push
cmp
pop
jmp
inc
adc
inc
inc
mov
cmp
mov
pushf
mov
xchg
insb
iret
sub
movsl
xlat
mov
jl
and
sti
ret
sub
sbb
rorb
sbb
and
sbbb
lea
push
pop
xchg
xor
mov
jp
cld
jmp
mov
dec
sbb
xor
jne
loope
and
inc
jae
cmc
aaa
xorl
xchg
mov
inc
pop
sbb
pop
loope
dec
inc
sahf
dec
jecxz
cmp
xor
sarl
lret
sub
loop
adc
or
mov
or
cmp
in
popf
stos
iret
popf
push
lret
sarl
xchg
mov
shll
lret
jg
xchg
or
ljmp
xchg
add
ret
movsb
out
add
in
cmp
mov
lock
pushf
mov
dec
jg
adc
adc
fs
add
in
jge
fisubl
scas
aas
fsts
fstpl
ret
mov
pusha
shrd
lahf
sbb
adc
roll
xlat
jmp
je
cmp
shll
mov
in
outsb
mov
mov
inc
out
jl
cmp
int3
xor
jne
push
push
hlt
repnz
ror
fildll
inc
icebp
cmp
hlt
jbe
call
or
sbb
mov
sahf
out
clc
xchg
pop
xor
add
jmp
pop
mov
int
jbe
xchg
aam
cmc
add
js
mov
mov
push
out
xchg
sbb
jne
jg
out
daa
sbb
add
cmc
mov
dec
push
loope
movsb
std
movl
add
xchg
stos
sbb
aas
cmp
les
pop
pop
mov
jl
ret
out
mov
sub
add
and
sub
cld
jne
jbe
mov
int
xor
pusha
jecxz
outsb
aam
xor
sbb
pusha
xor
outsl
sbb
inc
jb
push
push
dec
shlb
push
rolb
jb
push
aam
xor
sbb
aas
sub
xor
enter
mov
int
jmp
and
mov
cli
mov
inc
cmp
das
pop
pusha
loop
mov
rolb
add
cmc
xor
call
cmp
jl
test
lea
hlt
inc
mov
scas
fsubrs
jmp
push
ljmp
cmp
pop
xchg
jbe
inc
inc
mov
jnp
adc
mov
ljmp
popa
cmp
mov
jae
push
xor
ficoml
bound
xor
es
mov
pop
test
cltd
in
test
xchg
or
in
jmp
dec
int
sbb
out
pop
adc
fistps
aad
push
lret
lret
fdivl
jnp
xlat
jb
xor
jmp
fsubrs
movsl
or
or
dec
add
mov
jae
incb
jge
outsb
xor
xchg
jg
xchg
lret
sbb
sbb
leave
jb
sub
cli
xor
jle
and
inc
movsb
lret
leave
push
mov
inc
mov
mov
fistpll
xchg
sbb
loope
inc
mov
sbb
dec
cwtl
stos
out
dec
adc
call
xchg
add
out
mov
out
push
rcl
mov
dec
fst
js
push
adc
inc
stos
add
sbb
sbb
les
mov
xchg
xor
mov
push
or
adc
mov
test
cmp
dec
sbb
inc
mov
arpl
imul
or
xchg
mov
mov
sub
sub
js
pop
sbb
pop
mov
xchg
cmp
cmp
mov
nop
mov
dec
xchg
ljmp
mov
les
cmpb
inc
out
push
or
repnz
add
les
popa
inc
ss
sub
es
xchg
cmp
sbb
fidivs
dec
sbb
xchg
push
mov
loopne
dec
mov
cmp
and
fidivl
adc
mov
sbb
sub
add
in
pushf
xchg
jl
idivb
cmpsl
clc
or
adc
cmpsl
inc
outsl
lahf
mov
int3
scas
int3
repnz
adc
aad
das
sbb
mov
outsl
xchg
jg
insb
lods
mov
sbb
roll
mov
lods
fsubrp
mov
and
mov
ljmp
les
lcall
loope
lcall
rcr
mov
in
imul
mov
push
int
fs
ficomps
cmpl
mov
std
andb
and
cmpsb
xchg
pop
mov
test
mov
add
push
mov
or
cmp
jge
aam
push
pop
lret
pop
cmp
std
xchg
and
fstl
pop
or
in
ret
xlat
mov
clc
mov
sahf
sub
push
mov
push
sti
js
cwtl
stc
jg
xor
mov
scas
std
imul
mov
jne
in
in
leave
lcall
pop
lock
sub
nop
mov
decl
pop
test
lahf
repnz
cmp
repnz
daa
iret
sub
movsb
cmp
test
aas
push
movsl
rcll
push
rcl
add
out
mov
push
pop
jmp
les
pop
dec
inc
rolb
sti
dec
in
mov
fstl
js
fs
adc
sbb
mov
ror
fadd
out
stos
movups
sub
fldenv
jecxz
mov
sub
xlat
dec
ds
inc
data16
add
adc
loop
add
and
xchg
nop
jne
enter
dec
sti
mov
addb
nop
add
adc
or
popa
mov
bnd
jge
scas
jns
aad
bound
into
lock
xlat
cli
popf
adc
xor
and
xorl
push
xchg
les
add
and
jns
jns
pop
push
mov
push
mov
cwtl
jmp
xor
stc
xor
xor
pop
pusha
jo
mov
mov
inc
mov
in
add
add
cmp
jno
inc
fmul
clc
into
or
mov
in
and
imul
movsl
mov
bound
iret
stc
out
vmwrite
jmp
stc
cmpsb
xchg
lea
int
pop
lea
xor
jno
add
mov
sahf
adc
jp
cmc
pusha
or
aad
pop
adc
add
sub
sbb
icebp
dec
mov
cmp
sbb
or
outsb
or
or
dec
add
add
push
arpl
adc
jbe
ds
out
sbb
aaa
or
dec
mov
leave
lods
adc
push
mov
mov
sub
sub
imul
mov
shlb
pop
mov
push
jb
xchg
call
mov
lcall
cld
adc
pop
movsb
data16
push
loop
repz
cli
fwait
test
test
shrb
jmp
xor
leavew
pop
mov
repnz
or
or
mov
adc
stos
subl
enter
push
mov
jl
add
lret
pusha
add
xor
mov
or
stos
ljmp
popf
fs
cmpsb
aam
pop
loop
lahf
mov
iret
imull
sbbl
mov
leave
add
jecxz
pop
mov
and
int3
cli
and
and
mov
sbb
xchg
cwtl
sub
inc
cmc
outsb
shlb
out
std
fidivrs
pop
pop
pop
mov
adc
xlat
loopne
or
adc
rorl
outsl
cmp
pop
clc
scas
stc
cmp
daa
mov
mov
fdivrl
subb
xor
movsl
loope
inc
fiadds
testl
testl
out
fadds
scas
int
loope
loopne
cmp
fs
and
inc
enter
insl
gs
int3
push
pusha
mov
xchg
pop
sub
cmpsl
rcr
lock
lods
push
mov
mov
dec
and
pop
mov
and
lea
push
sub
dec
push
stc
loope
pop
arpl
mov
jp
emms
cmp
out
mov
fcomip
popf
pop
and
cmp
push
fadd
icebp
mov
lcall
push
insb
jecxz
shl
dec
pop
mov
addr16
pop
jae
cld
stos
call
dec
xchg
sbb
mov
pop
xor
je
addr16
mov
mov
and
mov
pop
adc
sub
cld
add
push
ss
or
fdiv
into
mull
lds
call
call
ds
sub
dec
lret
mov
repz
sub
dec
lcall
enter
out
repz
popf
xchg
sub
lods
sub
dec
adc
pop
xor
sub
out
and
mov
nop
adc
sub
inc
add
cmpsb
or
xchg
repnz
lods
pop
mov
mov
out
movsl
and
subb
jbe
and
mov
add
movb
movsl
nop
pop
add
xchg
cmc
loopne
push
add
push
mov
dec
xchg
push
push
xchg
clc
pop
xlat
jnp
inc
jmp
loop,pn
cwtl
and
jecxz
adc
in
cmp
aaa
add
nop
adc
add
push
loop
rclb
imul
inc
push
push
in
push
jbe
xor
nop
add
cmp
fdivp
call
add
mov
dec
xchg
frstor
pop
push
mov
test
repz
jno
movsb
mov
jb
adc
inc
stos
sbb
pop
pop
hlt
repnz
push
xor
fistpl
inc
xor
in
and
lds
bound
nop
xor
lahf
ffreep
test
add
jecxz
psraw
add
push
pop
mov
int
data16
xor
inc
js
xor
pop
push
xchg
jg
xchg
jecxz
dec
int
push
loop
inc
inc
sub
out
ret
sahf
jae
loopne
jbe
ljmp
scas
inc
jmp
push
or
pop
cli
arpl
outsl
out
or
mov
cmp
sub
xchg
push
pop
sub
pop
outsb
and
adc
xchg
rcr
mov
pop
sar
sub
movsb
jbe
jns
xchg
push
lds
loop
lea
cmp
jp
xchg
mov
mov
mov
and
push
pop
mov
pop
and
add
lahf
gs
movsb
sti
aas
inc
sbb
mov
and
fs
in
movsl
pop
mov
imul
es
into
jecxz
jl
xchg
hlt
mov
push
sbbb
shrb
and
int
inc
mov
mov
testl
lock
enter
push
pop
adc
adc
dec
pop
insb
lods
push
daa
ret
lret
inc
pusha
add
push
and
push
mov
cmc
repz
mov
mov
sbb
push
loope
arpl
jnp
gs
je
jo
pop
fistpl
stc
fmuls
and
xchg
jl
pop
add
mov
icebp
cmp
ret
in
cmp
js
lds
xrelease
and
fmull
inc
push
test
sbb
cmp
sahf
sbb
cvtps2pd
mov
stos
or
inc
mov
out
cs
fwait
dec
jecxz
enter
pop
loope
je
sub
xchg
and
sti
inc
test
xchg
cmpsl
and
fcomi
test
mov
jo
pushf
jb
mov
dec
int3
in
fwait
push
int3
sub
mov
std
pop
inc
mov
xchg
xchg
dec
loop
inc
loopne
icebp
mov
sub
jo
int
xor
mov
and
daa
popf
xchg
cmp
jno
jg
and
pushf
test
dec
dec
pop
jbe
cltd
sub
fs
fs
or
aad
add
scas
dec
sbb
jns
mov
fimuls
aaa
jp
ficompl
cs
fcomi
mov
mov
shll
imul
push
ret
ss
test
cmp
cmp
test
mov
jae
xchg
rorl
adc
xchg
xchg
sub
imul
loope
xchg
in
repz
dec
mov
dec
fwait
shlb
jp
jae
mov
push
mov
mov
add
out
cmpsb
in
cld
dec
add
jae
mov
movd
adc
push
adc
push
lret
shl
lock
rcrl
adc
jecxz
loop
cwtl
or
push
test
test
es
or
mov
inc
insb
mov
jecxz
pop
cli
and
sarl
insl
dec
add
sub
cwtl
jg
or
aam
jbe
mov
cld
push
mov
inc
mov
dec
xchg
insl
jle
jp
adc
jns
xlat
repnz
loopne
push
repnz
jecxz
jae
in
stos
push
dec
jns
dec
ss
mov
cmp
dec
hlt
jns
mov
add
rorb
add
xor
ljmp
xchg
pop
je
xchg
or
movsl
into
fidivl
mov
mov
jo
test
js
ljmp
fsub
int
sub
insb
sbb
gs
test
fs
xor
lock
mov
fisubrl
test
pop
dec
sbbb
xchg
xchg
and
dec
popa
push
movsb
pop
adc
stc
iret
dec
push
scas
or
pop
jno
sub
pop
ja
sbb
pop
daa
jecxz
out
dec
dec
mov
lock
sbbb
insb
ss
fisttps
js
outsl
sbb
dec
je
arpl
movl
out
mov
sub
pop
out
mov
push
sti
push
adcb
dec
mov
xchg
pop
xchg
jmp
scas
pusha
mov
mov
test
xor
or
jp
mov
loopne
xor
cs
inc
dec
out
lret
cmp
cwtl
and
mov
scas
cmp
test
xor
sbb
hlt
bound
mov
aad
lret
repnz
lods
lret
and
adc
out
dec
mov
xor
push
add
rclb
mov
enter
into
cmp
out
popa
in
sub
adc
inc
jg
push
addl
loopne
add
sbb
jmp
addr16
fucom
mov
movl
push
xor
push
add
addr16
inc
aas
mov
jecxz
jno
mul
jl
cwtl
fs
mov
out
sbb
popf
and
ljmp
and
cs
xchg
mov
adc
mov
mov
xchg
ja
jg
das
or
lods
div
jne
aaa
pop
ret
xchg
sarb
shll
xchg
xlat
in
mov
mov
jne
arpl
mov
movb
insb
mov
xchg
ljmp
adc
es
stos
fsub
daa
movsb
push
aaa
dec
mov
out
sub
mov
jp
jns
sub
sub
xchg
push
nop
inc
add
scas
sub
sub
dec
fsubs
mov
jb
pop
lock
dec
int3
adc
adc
sarl
fdivl
jbe
cmpb
add
add
insl
push
loop
mulb
sub
adc
cmp
lcall
sbb
sub
cmp
xor
cs
rol
imul
js
adc
or
xchg
fiadds
orl
pop
outsb
push
and
outsb
push
scas
dec
stc
je
movsl
adc
mov
in
ss
fs
push
pop
push
fcmovb
jns
sarb
push
pop
enter
inc
sub
arpl
lods
push
mov
sbb
test
xchg
dec
jns
or
pop
fstpl
je
adc
lcall
xchg
dec
and
faddl
pop
inc
cs
gs
pop
and
packsswb
test
incb
inc
test
rcrb
ror
aam
repnz
mov
jns
dec
mov
mov
pop
out
jo
and
test
fldl
and
dec
rcr
call
dec
mov
aad
adc
sbb
shlb
push
ss
mov
lods
jns
inc
mov
sub
mov
and
dec
arpl
jl
movsb
jnp
divl
fdivp
mov
rol
pop
xchg
xor
adc
push
nop
mov
out
pusha
loop
shl
mov
sahf
dec
mov
push
dec
mov
inc
sar
int
inc
rolb
test
xchg
daa
cli
add
pop
xor
xchg
std
shlb
negb
xchg
mov
inc
pop
jb
cmp
shrl
add
insb
jno
pop
jmp
js
push
icebp
push
xor
movsb
jns
xor
call
fmuls
outsl
mov
or
push
dec
adc
xchg
ss
mov
and
add
xor
inc
int
add
or
cmp
fwait
pop
mov
int3
fidivs
mov
push
push
push
or
or
scas
xor
lea
cld
testb
lods
or
cmpl
mov
push
andl
jle
lcall
mov
jmp
mov
movsl
in
pop
repnz
lea
push
mov
adc
cmp
ds
cmp
pop
sti
add
sahf
hlt
dec
fisubrs
sarl
jl
cltd
repnz
js
mov
cmp
xchg
add
sbb
xor
lahf
insb
hlt
mov
jb
movsb
dec
lods
roll
clc
rclb
in
out
fs
negl
pop
adc
int
cs
inc
jmp
fdivrs
jg
std
adc
and
sti
sbb
stos
sahf
data16
ret
pop
mov
or
pop
and
and
push
lea
or
mov
out
add
test
add
mov
arpl
lock
and
nop
in
pop
xchg
ss
ret
push
out
popl
mov
test
enter
ret
dec
push
xor
dec
adc
cwtl
ret
cmpsl
fwait
pop
pop
inc
or
xor
mov
adc
adc
icebp
and
sub
pusha
jne
fcmovnb
push
add
jbe
pop
inc
adc
xchg
cs
jo
add
cwtl
mov
pop
pusha
pop
inc
test
in
imul
mov
pusha
add
add
dec
rcr
inc
subl
cmp
daa
inc
mov
dec
insb
lods
lock
pusha
xchg
clc
jle
mov
je
stos
adc
sbb
lds
and
jb
shrl
pop
mov
out
in
ds
push
push
test
inc
jl
repz
fcmovne
lea
sbb
xchg
popa
cmpb
sub
mov
pop
repz
inc
aas
xchg
pop
lret
and
ds
scas
xor
pop
cmpsl
or
push
ja
dec
arpl
xor
aad
mov
fimull
fldcw
add
mov
scas
xchg
add
imul
loopne
xchg
leave
insb
cmp
hlt
mov
or
sub
xlat
adc
shr
add
inc
xchg
cmc
cmp
sbb
out
lods
pusha
ficoml
pop
rclb
pop
out
pop
rcrb
push
pusha
movsb
fisttps
ds
repz
mov
xor
xchg
jno
jb
dec
push
icebp
cli
sub
xor
lret
loopne
std
add
pop
xchg
pop
in
adc
insb
lea
pop
add
imul
test
clc
pushf
xor
testb
adc
lock
orl
sahf
adc
jno
xlat
popf
out
addr16
inc
cmpsl
shrl
aaa
lcall
jno
call
pop
jecxz
lahf
in
ds
movsb
and
pop
sbb
std
mov
cmc
xor
mov
insb
mov
mov
jg
std
add
pop
mov
icebp
lea
mov
hlt
subl
sub
dec
push
mov
mov
inc
xor
stc
call
dec
dec
mov
leave
cmp
push
mov
stc
fs
sub
inc
mov
adc
adc
push
popa
jle
out
jb
add
mull
lahf
decl
mov
mov
mov
sbb
pushl
sub
inc
xchg
out
testl
jbe
xorl
in
inc
stos
inc
push
pop
int3
das
jae
push
sbb
lahf
pusha
into
jnp
mov
adc
mov
sub
push
stc
sub
and
adc
hlt
insl
mov
jge
daa
xchg
push
fwait
in
mov
out
pop
scas
cmp
dec
out
ljmp
aad
add
pop
lahf
cmp
add
and
or
cld
cmpl
jmp
into
sbb
lcall
es
mov
loopne
ds
sub
mov
inc
push
setnp
std
mov
and
dec
in
mov
mov
inc
insb
sarb
xchg
sahf
mov
mov
out
nop
outsb
or
mov
add
dec
sbb
add
adc
adc
out
adc
mov
jne
nop
mov
cmpsb
pop
mov
sub
xchg
xchg
cli
xor
mov
add
adc
fbstp
arpl
mov
push
xchg
mov
push
mov
hlt
fwait
and
scas
pop
stos
add
and
and
pop
pop
bound
rcrb
mov
add
or
xor
scas
sbb
mov
jo
inc
or
jne
jbe
shrb
stc
jae
mov
cmp
add
mov
daa
sti
xor
aad
lods
jge
xor
or
xor
xchg
lock
add
push
cmpsl
sbb
dec
hlt
cmp
mov
mov
mov
out
xchg
int3
sbb
mov
out
call
rcrl
in
fdivs
xchg
mov
ss
mov
in
daa
mov
sbb
hlt
adc
dec
fwait
idivb
in
sub
inc
add
cmpsb
repz
jnp
pop
dec
mov
add
movsl
adc
rcpps
movsb
lds
test
push
cltd
push
mov
adc
xor
call
addr16
or
mov
stc
out
inc
and
xchg
rolb
mov
das
cmpl
dec
loopne
pop
repnz
popf
or
adc
sub
jecxz
loopne
cli
dec
xchg
mov
cld
icebp
mov
jge
movsb
mov
scas
jo
cs
inc
andl
pop
push
loop
fisubl
mov
xchg
lcall
insl
in
pop
mov
lods
mov
loop
jmp
xchg
sbb
inc
xchg
jle
daa
and
sbb
mov
push
cmp
test
push
mov
and
out
out
lock
mov
mov
and
inc
das
sub
xchg
outsl
outsl
pop
fdivl
or
mov
mov
fistpll
into
jnp
push
xor
push
fcoml
cmpsl
stos
sub
cmp
int
inc
inc
stc
scas
fstps
rol
in
jl
jo
insb
cmp
dec
std
mov
dec
call
mov
ret
jnp
sub
sub
fsubl
enter
ret
int
pop
or
out
cld
adc
sub
inc
aas
mov
cli
xchg
push
aas
push
lcall
repnz
fdivrl
addr16
loop
mov
std
test
push
mov
inc
ficoms
xlat
insl
sbb
leave
loopne
push
mov
jbe
int
movsl
std
add
mov
popa
fisubrl
and
lock
mov
pop
aas
add
fisttpl
xchg
jb
test
jbe
fimuls
sbb
xchg
outsl
shrb
loopne
dec
int3
test
rorb
inc
inc
and
mov
movsl
xchg
lahf
lea
xchg
pop
xchg
mov
repz
xchg
xor
test
jmp
dec
sub
cmc
xor
push
mov
out
jns
roll
rorb
ss
mov
js,pn
jmp
gs
mov
ret
shlb
out
into
xor
jecxz
adc
ret
in
int
cmc
or
arpl
aam
imul
aaa
push
iret
xor
arpl
stc
mov
pop
xchg
push
ds
in
stc
lcall
sahf
xchg
out
cmp
xchg
push
ja
or
push
xchg
lock
lret
jb
sbbb
inc
dec
jge
ror
mov
test
fisttpll
pop
push
mov
mov
vfmadd132ps
jecxz
adc
push
movsl
pop
pop
lret
lds
outsb
gs
aas
pop
add
movsl
cmpsb
xchg
lea
or
push
mov
sub
rorl
mov
cmp
jbe
jb
in
xchg
pop
and
cwtl
gs
jae
ficoms
lahf
ror
or
in
xor
pusha
cmp
lds
leave
add
dec
movsl
cs
lret
xchg
in
popa
lods
out
sbb
xor
mov
test
mov
mov
adcb
std
gs
rcl
cmp
pusha
push
xor
mov
fwait
in
add
inc
rcll
inc
push
inc
dec
sbb
shl
insb
jno
aas
test
mov
add
shl
ret
pusha
mov
ret
incl
jnp
jbe
mov
or
add
inc
push
add
arpl
add
push
sbb
add
mov
mov
ret
repnz
ds
sub
xchg
xchg
pop
dec
xor
icebp
push
push
xchg
lret
xor
or
outsb
cwtl
in
jbe
fstp
xor
test
outsl
and
mov
inc
daa
pop
xchg
lea
lea
daa
andl
cmc
add
sbbb
enter
push
or
ficomps
and
mov
pop
outsb
ljmp
dec
imul
rep
mov
adc
lret
in
mov
shll
rol
jne
aad
aas
jge
idivb
cltd
mov
xor
push
and
inc
in
push
sahf
insb
jo
cmp
int3
xor
into
or
push
inc
ja
call
pushf
adc
pop
add
fxch
mov
inc
jg
xchg
push
add
mov
mov
fisubrl
les
lea
jo
popf
sub
dec
adc
inc
out
xor
pusha
mov
sbb
ret
loopne
mov
mov
xor
jl
negl
jb
pop
xor
jbe
mov
adc
fstl
or
xchg
push
out
mov
decb
sbb
adc
popf
add
aad
jnp
add
sbb
imulb
add
push
mov
and
shl
insl
pusha
cmpsb
rorb
je
xchg
mov
mov
adc
add
xlat
mov
out
rclb
fwait
popa
cli
insl
mov
ss
out
sbb
jbe
push
sarb
js
push
test
popf
xlat
add
cld
test
cmp
mov
jo
pop
sub
sub
decl
dec
xor
mov
and
jne
test
fnstenv
out
sti
adc
test
insb
cmp
mov
and
jle
cmpsb
jge
push
push
push
jbe,pt
aas
mov
push
mov
lods
xor
rolb
test
shrl
fwait
pop
xchg
sbb
out
fcmovbe
mov
pop
fimuls
cmp
adc
int3
test
jecxz
cmp
lods
daa
and
pop
loope
mov
imul
mov
aam
movsl
mov
mov
es
pop
or
xor
in
push
mov
jo
aad
pop
inc
push
or
pop
clc
dec
pop
pushf
in
mov
test
cmp
dec
dec
push
push
js
xor
jnp
ljmp
and
les
stos
repnz
test
mov
adc
arpl
repz
ljmp
enter
stos
xchg
fiadds
sub
pop
inc
int3
cltd
lret
add
cmpsb
lds
sub
dec
and
adc
iret
call
pop
mov
dec
sub
jmp
cli
pop
sub
sbb
add
sti
cmpb
xchg
or
xchg
pop
in
repz
dec
pushf
and
dec
ljmp
push
xor
sub
xchg
cmp
mov
outsl
stos
aam
stc
sub
pop
push
cmp
daa
aaa
mov
stos
cmp
xor
jbe
and
int3
mov
sbb
xchg
inc
mov
repz
je
dec
mov
and
fisubrl
xchg
mov
cmc
sbb
mov
fisubrl
push
jb
jecxz
stos
pushf
add
shrb
cmc
out
sbb
mov
sbb
cltd
clc
aas
dec
bound
lcall
push
insl
insb
sub
nop
inc
and
test
call
mov
mov
jmp
adc
pop
pop
cmp
pop
mov
cmc
lock
and
cmp
mov
dec
out
sbb
add
ds
mov
mov
mov
sti
dec
push
stos
test
push
outsl
dec
mov
test
mov
or
xor
loopne
or
and
int3
xor
push
mov
lds
dec
fmull
repz
sbb
add
lock
jmp
mov
fstpl
jg
pop
rol
inc
push
mov
mov
mov
gs
testl
out
lcall
repnz
arpl
jecxz
repnz
pushf
pop
test
or
std
test
rclb
bound
loopne
add
mov
dec
insb
or
mov
and
cmc
imul
xlat
int
rcrl
decb
mov
xchg
rcrb
pop
fmuls
and
jbe
outsl
pushf
inc
sub
aad
lahf
pop
fwait
out
mov
pop
in
test
repz
aad
fstpl
push
addr16
mov
aaa
ret
aad
sbb
push
cmp
mov
adcb
adc
xor
pop
push
scas
pop
int3
mov
and
sub
xchg
inc
clc
dec
fsubrl
icebp
pop
mov
and
js
fidivrs
jb
arpl
in
mov
cmp
inc
fisttpl
cmp
ret
inc
hlt
lods
aad
fisttpl
je
add
or
add
js
mov
pop
jl
std
jns
dec
pop
jle
jnp
push
jmp
cmp
imul
dec
xor
insl
sub
pop
shr
fadd
mov
data16
int
inc
insl
add
gs
icebp
ficomps
int3
lcall
push
std
adc
loop,pt
andb
dec
and
fimuls
push
sub
push
notb
push
test
jae
mov
pop
mov
pop
ljmp
rcrb
mov
or
xlat
sbb
xor
arpl
push
inc
jle
inc
lret
jnp
popf
inc
sub
lret
js
xchg
aaa
mov
mov
enter
dec
xor
aas
mov
push
and
stos
ds
nop
sub
movsl
mov
loop
clc
je
lret
data16
xchg
sub
push
jg
and
and
imul
fiaddl
sub
in
push
cs
jns
scas
rolb
leave
hlt
jge
sahf
fbstp
xchg
aad
sbb
jge
jge
lds
out
sub
loope
jl
add
adc
sub
fstpt
fimuls
push
stos
fiaddl
xchg
ja
fstps
inc
in
jle
mov
mov
sbb
inc
pusha
jge
xchg
xchg
vpmacssdqh
mov
loope
add
mov
jmp
fsub
popa
mov
push
xor
mov
fildl
in
rorl
mov
stos
cmpsl
ret
and
mov
add
xor
into
out
mov
inc
les
mov
dec
xor
add
add
movsl
push
not
nop
movsb
mov
mov
dec
into
mov
outsb
leave
scas
xor
shll
iret
jno
sbb
jle
mull
add
and
lods
clc
lret
sbb
lahf
or
and
pop
les
jg
pop
fidivs
repz
les
mov
es
push
xchg
or
gs
or
mov
xlat
inc
or
ljmp
lods
mov
pop
mov
test
arpl
stos
lock
and
fidivrs
or
repz
mov
sub
das
cmp
movsl
in
sub
mov
or
mov
sub
pushl
mov
repz
jns
lahf
mov
jl
or
sbb
and
cmp
iret
movsb
pop
inc
jl
adc
ret
aad
or
rorb
mov
in
xchg
pop
lock
subb
scas
inc
xor
cmpsb
mov
add
fwait
push
push
fs
insl
aad
adc
sub
xchg
and
sbb
fdivs
jecxz
pop
icebp
loopne
pop
jle
inc
jmp
daa
mov
jp
sbb
push
icebp
mov
insl
imul
rolb
jmp
push
adc
rorl
rcl
inc
mov
pop
scas
lock
xchg
add
test
push
loop
insb
mov
iret
pop
outsb
mov
mov
cmpsl
and
sub
dec
pop
mov
jae
ds
pop
mov
daa
xchg
cs
inc
daa
sbb
sbb
xchg
mov
ss
bnd
aas
dec
xchg
repnz
lcall
inc
imul
xchg
or
in
lds
inc
lock
jg
inc
fs
sbb
xchg
cmp
je
mov
cmp
and
in
jbe
inc
dec
jp
adc
xor
pop
inc
outsl
fstps
and
lds
loop
push
outsb
cwtl
jp
cmp
mov
stos
mov
mov
push
push
inc
cmp
stos
pop
cmp
lock
pop
jle
and
ret
mov
insl
and
and
lret
and
icebp
xlat
and
cmp
leave
stos
jp
inc
and
or
stos
mov
mov
jp
cmc
fisttpl
cmc
dec
mov
jnp
jne
sbb
inc
push
ss
mov
popf
cmp
adc
push
cmp
inc
or
cli
loope
mov
xchg
outsb
lods
frstor
in
rolb
and
xor
fidivs
jb
xor
and
inc
adc
sbb
inc
pop
and
negb
sti
fs
adc
adc
popf
dec
jo
frstor
add
mov
clc
dec
mov
movsl
and
mov
and
cmp
pop
cmc
push
dec
test
xchg
mov
mov
fcom
ret
or
ja
pop
negb
test
jae
mov
and
jl
leave
ds
imul
and
addb
ljmp
jle
inc
jmp
jmp
xchg
mov
cmp
sub
dec
fsts
in
mov
ret
sbb
lcall
out
mov
testb
ret
test
or
pop
aam
inc
mov
lcall
mov
movsb
adc
pusha
inc
cmp
xor
sbb
jne
test
test
sbb
outsl
xor
stos
xor
sub
adc
mov
je
pushf
push
test
jle
jmp
dec
pop
scas
test
fcom
jmp
imul
pop
cli
daa
loop
push
push
stc
decb
cli
lret
inc
aam
mov
push
sub
sub
mov
mov
imul
mov
cmp
mov
or
adc
mov
test
popa
nop
repz
mov
jg
int3
setle
mov
lea
jae
mov
aad
stos
and
inc
cli
test
and
sbb
test
mov
mov
dec
rolb
insl
iret
data16
roll
nop
insb
xchg
jmp
sub
push
lcall
xchg
push
call
shrl
gs
push
mov
xor
sbb
dec
arpl
dec
pop
pop
adc
iret
ljmp
scas
sbb
out
jmp
cmc
add
fwait
shlb
and
pusha
test
or
pop
fyl2xp1
cmp
and
sbb
negl
cmp
xor
and
mov
movsl
pop
cmp
dec
jl
xchg
loop
dec
idivl
mov
or
les
push
into
fisubrl
sub
add
bound
jnp
addr16
push
imul
mov
clc
pop
xor
test
ret
push
dec
jne
lods
in
push
stc
leave
xchg
jne
movsb
push
jo
stc
out
jae
mov
lods
in
fs
jmp
lock
pop
jnp
int
and
mov
mov
cltd
xlat
arpl
lahf
jo
fs
mov
pop
ljmp
movb
and
xchg
sbb
fisubl
test
imul
dec
mov
ss
add
sbb
or
ret
mov
xchg
push
pop
fwait
push
inc
inc
mov
arpl
fcomps
xchg
sbb
pop
mov
jp
xchg
xchg
and
or
or
mov
arpl
dec
mov
dec
pop
lret
and
cld
jl
dec
andl
ja
mov
repz
aam
lret
xor
mov
inc
sub
adc
cmp
and
test
adc
mov
cmp
adc
add
mull
push
iret
sarb
nop
sbb
sbb
cmp
sub
into
cmp
insb
add
arpl
cmp
sbb
out
mov
loope
fistl
daa
fidivrs
pop
pop
inc
subl
cmp
pop
insl
add
cmp
rorl
mov
out
adcl
dec
cmpsl
xchg
decl
ret
mov
mov
sbb
pop
mov
test
sbbb
ljmp
or
adc
test
test
sbb
into
mov
mov
stos
sbb
add
pop
imul
fucom
sub
fiadds
push
es
jg
cwtl
loop
or
push
lods
mov
cwtl
or
fisubs
stos
call
insl
leave
lahf
dec
xlat
add
xchg
push
outsb
cmpsl
add
xor
mov
cmp
addr16
cli
and
sti
jnp
loopne
xchg
imul
mov
mov
lods
jnp
mov
scas
xor
pusha
aad
mov
dec
stos
popf
flds
out
stc
cmpsb
mov
jae
test
es
mov
mov
fs
insb
inc
mov
mov
in
outsb
in
or
cmp
fnstenv
insb
addl
push
or
test
mov
icebp
push
push
rorb
push
inc
sbb
xchg
mov
movsb
shrb
in
je
jg
sbb
xchg
dec
sbb
jp
jno
fdivrl
xlat
jne
inc
pushf
mov
fwait
ds
mov
cmp
das
push
or
test
or
addb
mov
aaa
dec
dec
xchg
mov
push
jmp
fwait
pop
lcall
arpl
inc
jge
dec
rorb
lret
mov
testb
xor
adc
mov
push
shrb
stc
add
lods
icebp
arpl
dec
sub
jge
add
sahf
cmp
mov
and
iret
mov
fidivrs
nop
adc
loopne
pop
mov
in
add
xor
testb
negl
push
sbb
int
popf
mov
xchg
and
inc
ficoml
inc
into
add
xchg
scas
js
pop
subb
cmp
dec
mov
pop
inc
mov
mov
mov
mov
sbb
mov
out
cmc
aad
adc
mov
out
lcall
jl
add
xchg
mov
mov
fcompl
jmp
popa
sbb
int
mov
and
fldenv
push
sub
jnp
loope
jle
sbbb
les
jno
es
mov
in
sbb
movsl
mov
cmp
loope
mov
sarl
inc
jb
lret
fdivrs
jo
dec
les
sub
and
mov
sbb
push
daa
pop
rol
sub
ljmp
push
push
scas
jecxz
pop
or
stos
inc
and
xchg
push
bound
cltd
bnd
mov
jb
inc
pushf
mov
lds
dec
sahf
loope
mov
in
and
lret
dec
cmp
cwtl
aam
jae
push
pop
rorl
mov
mov
mov
stos
imul
mov
or
cwtl
outsb
dec
add
sub
hlt
data16
sbb
jae
add
or
imul
pop
mov
cmp
rcr
not
or
xor
sub
dec
push
mov
push
mov
mov
xchg
hlt
dec
inc
pop
mov
cmpsl
sbb
pop
imul
bound
push
inc
daa
loop
in
imul
ret
add
aad
push
pusha
sbb
jecxz
mov
mov
mov
mov
jg
outsl
movsl
xchg
outsb
mov
sub
xchg
flds
fs
mov
fidivs
out
sub
pop
loope
pop
push
lea
sub
mov
dec
outsb
mov
pop
xchg
dec
mov
or
call
mov
cmp
adc
push
int
mov
int
test
add
add
mov
mov
pop
xor
inc
shll
xor
aad
and
into
xor
xor
push
imul
jb
repnz
loopne
xor
cld
imul
inc
out
adc
rcrl
pop
jp
iret
call
xor
aam
lcall
add
rcl
andb
aad
mov
subb
scas
dec
movsb
jnp
mov
cmc
and
add
fbstp
jno
sbbl
ss
in
fsubrp
outsb
sub
test
fisubrs
in
andb
push
lahf
test
rolb
xor
mov
das
into
leave
add
mov
mov
mov
mov
cmpsl
subl
inc
cmp
add
cli
inc
lcall
inc
mov
fdivl
push
cmc
stos
and
cltd
xchg
outsl
bound
sub
outsl
xchg
sbb
add
xor
dec
jle
ljmp
sub
adc
or
pop
jecxz
jne
mov
inc
adc
ljmp
out
call
sahf
test
xchg
jae
push
inc
xor
shrl
mov
push
stc
in
xchg
sub
dec
mov
jp
mov
inc
je
es
int3
xchg
mov
adc
call
add
xor
xchg
push
mov
int
pop
adc
mov
xchg
aad
cmp
lds
cli
leave
push
leave
dec
jno
js
or
or
int
push
cmp
decl
popf
popf
push
or
xchg
dec
mov
lret
cmpsb
rorl
pushf
insl
les
sbb
mov
adc
mov
bound
cmp
push
out
dec
loop
push
arpl
jae
jno
push
clc
mov
sbb
jmp
pop
xchg
add
int
pop
jnp
mov
mov
ret
cld
pop
mov
jns
and
icebp
sub
loop
lcall
xchg
mov
ja
dec
ljmp
dec
mov
and
hlt
push
sub
lcall
icebp
push
cli
dec
lock
mov
mov
add
push
and
cmp
sahf
mov
xor
mov
test
addr16
jge
imul
push
rclb
jmp
sub
lret
pop
lret
sbb
cmp
pusha
ficoms
lock
fldenv
lahf
jne
jns
arpl
sbb
pop
xor
jns
xchg
ljmp
test
pop
hlt
nop
xor
sub
adc
dec
in
popf
jne
bswap
das
ds
mov
imul
push
pop
add
cli
and
push
enter
scas
iret
sub
jmp
xor
aam
fbstp
rclb
xchg
sbb
repnz
xor
pop
cmp
inc
pop
cwtl
push
push
sti
cmpb
clc
in
es
mull
mov
gs
call
jbe
mov
adc
negb
sbb
mov
fimull
adc
xchg
dec
xchg
dec
jmp
test
jle
or
iret
cmp
fsubrp
fistpl
push
jns
dec
cltd
jae
cmp
xchg
jge
shlb
fmull
cmp
add
movsl
cmp
adc
dec
xchg
ja
popa
pop
fimull
push
mov
or
xchg
popa
jmp
movsb
call
pop
insb
mov
push
pop
xor
dec
push
sub
mov
mov
sbb
aaa
add
adc
or
adc
pop
mov
hlt
xchg
and
loope
mov
pop
xchg
imul
aam
jbe
sub
mov
pop
inc
pop
bound
xor
push
out
mov
sub
xor
xchg
subl
push
faddl
dec
xor
cs
mov
xor
pop
cmp
mov
mov
dec
pop
jno
xchg
scas
in
mov
shlb
add
icebp
and
aam
loopne
adcb
out
iret
stos
arpl
and
or
fbld
shll
inc
mov
push
xchg
js
cmp
fidivs
outsb
adc
or
add
sarb
jns
pop
add
imulb
inc
sahf
sub
aas
sub
daa
aaa
inc
jmp
std
pop
fnsave
push
cmpsl
pop
mov
or
pop
push
in
mov
int
adc
adc
dec
lods
movswl
dec
repnz
in
bound
sti
inc
mov
dec
mov
imul
mov
dec
testl
sarb
into
xchg
dec
mov
fs
test
mov
mov
ficoml
sub
mov
scas
cmpsb
ljmp
xchg
xchg
inc
pop
mov
fnstcw
adc
mov
hlt
push
lock
xor
mov
xchg
jmp
lea
or
adc
pop
rol
jno
push
leave
mov
out
inc
ss
leave
xor
xchg
into
sub
cmc
inc
inc
mov
or
fisubrs
daa
aaa
in
jg
push
int3
loopne
js
inc
das
mov
mov
ret
sete
mov
push
xor
xor
imul
xchg
sbb
ja
cmp
ljmp
in
pop
adc
push
test
lods
rorb
xor
pop
lds
int3
jmp
stos
mov
scas
jecxz
cwtl
lock
out
and
or
mov
insl
push
mov
pop
push
fcmove
mov
rolb
ds
pusha
test
pushl
push
lret
mov
jp
mov
cld
call
cmp
and
std
dec
fisttpll
cs
out
fisubl
xchg
mov
ret
jmp
subb
cmc
add
push
xchg
xor
push
and
xchg
jns
or
sbb
mov
jecxz
out
clc
into
sbb
add
jo
pop
mov
clc
add
loop
xchg
cwtl
pop
add
inc
out
push
icebp
jns
fs
push
cmpsl
aaa
ljmp
mov
or
ret
repz
push
push
fwait
jbe
divb
mov
and
add
adc
ss
fbstp
xchg
jmp
pusha
aaa
jecxz
mov
es
lcall
repz
xor
inc
in
cltd
and
jb
inc
ret
rcrl
pop
lahf
popf
and
mov
jb
xchg
pop
mov
popa
pop
mov
inc
mov
pop
pop
cmovp
cwtl
cmp
jnp
or
xchg
mov
inc
lcall
stos
addb
sub
mov
repz
cmpsb
sti
stc
bound
mov
insl
jecxz
cmp
lea
mov
int
ret
pop
out
and
adc
scas
xchg
rol
aas
pop
in
push
cmp
pusha
or
or
pop
data16
adc
inc
into
mov
lret
and
xor
mov
mov
mov
pop
mov
adc
dec
addr16
xor
add
adc
cwtl
adc
or
add
lock
leave
imul
int3
loop
adc
mov
mov
lcall
and
xchg
es
pop
cld
iret
mov
mov
mov
push
xor
mov
jmp
lea
les
lret
mov
testl
cmp
lret
or
je
fs
in
popa
bound
or
lahf
hlt
and
test
mov
sbb
sub
add
adc
push
lods
xchg
xor
stos
ja
dec
dec
xlat
jl
or
sbb
or
shr
mov
mov
pop
xchg
les
fisttps
dec
mov
push
ret
repz
inc
ret
jno
mov
dec
pop
cmc
jg
cli
inc
inc
dec
jle
pusha
out
push
bound
add
adc
push
dec
filds
mov
xchg
fidivs
cmp
or
xchg
negb
mov
inc
push
js
aaa
xchg
xchg
mov
movsb
push
lret
nop
jne
xchg
scas
xchg
fcmovnbe
jle
xchg
fstl
dec
mov
adc
imul
inc
into
arpl
ja
jo
sub
int3
sbb
cld
jl
adc
mov
mull
push
xchg
dec
stc
cmp
push
jns
jge
aam
push
sbb
xor
sub
jge
lds
scas
ljmp
idiv
fsub
add
mov
movsl
push
orl
out
or
insb
loopne
dec
xchg
pop
outsb
push
imul
jp
fisubl
cmpsl
hlt
ja
fwait
addb
sub
scas
jae
inc
sbb
stc
cmp
in
data16
arpl
stos
sbb
bound
ss
mov
rol
or
shl
cmpsl
fs
fisttps
pusha
ds
xor
dec
aad
pop
inc
inc
mov
rorl
gs
ljmp
xchg
xor
xchg
lods
mov
idivl
jg
addb
ficoml
cmp
jbe
in
xchg
lahf
and
out
lret
cld
sarb
add
jno
jmp
adc
mov
out
ja
imul
cmp
cwtl
or
out
into
iret
pop
xor
enter
add
inc
inc
pop
inc
iret
in
mov
push
iret
xchg
add
rorl
lret
mov
pop
stos
jl
xchg
rep
stos
popf
test
xorb
push
add
in
sub
aaa
je
test
loope
sahf
push
popf
cmc
ret
inc
mov
jg
mov
icebp
mov
push
mov
movsl
out
fwait
cmp
mov
sub
push
cmp
inc
and
pop
dec
loopne
sub
mov
test
rcrl
aaa
clc
mov
xor
enter
mov
int3
or
ds
dec
pushf
lods
ss
dec
les
bound
notb
add
xlat
lret
mov
xchg
or
iret
aam
inc
mov
lds
or
insb
shl
xchg
cmc
pop
imul
push
xlat
out
popf
movsl
lret
lock
push
nop
push
jno
pop
xor
sub
icebp
dec
mov
or
subl
into
das
mov
les
xchg
popa
out
mov
shlb
mov
pop
inc
sbbl
jecxz
or
shll
popa
or
shlb
mov
xchg
mov
xlat
aaa
enter
fists
pop
adc
lret
lret
fnstenv
repz
sub
sub
repnz
insl
sub
rorl
mov
pop
leave
inc
test
js
adc
rcrl
or
ffreep
pmullw
jo
rorl
shrl
ret
mov
popa
sbb
rorl
cmp
aas
shlb
fdivl
aad
clc
sub
insb
aam
inc
push
inc
jae
add
stos
mov
jmp
dec
out
out
test
push
aas
sbb
xor
ljmp
lcall
pushf
inc
adc
inc
fdiv
divb
je
and
sbb
inc
das
mov
jg
rclb
adc
jmp
insb
dec
ret
bound
fsubl
es
or
and
test
rcrb
dec
add
out
add
dec
aad
pop
push
adc
pushf
xor
loopne
sbb
shll
mov
pop
or
and
xchg
stos
lret
rcrl
lcall
subb
scas
xor
mov
out
aaa
xor
rorl
into
cs
and
outsl
lret
fldl
mov
rclb
sbb
pop
ret
push
insl
pop
adc
push
outsl
or
mov
js
xchg
lods
jo
push
test
sbb
movsl
ljmp
pushf
jns
dec
mov
mov
jo
shl
out
imul
mov
data16
adc
js
int
lea
mov
scas
out
pusha
xchg
mov
adc
jo
mov
add
sub
pop
int3
mov
add
jno
addr16
mov
call
mov
gs
loope
cld
cmp
int3
sarl
or
jecxz
fbstp
adc
sarb
movsb
dec
push
jmp
mov
mov
jns
fld1
jecxz
stc
mov
cmpsb
jle
popf
sbb
jnp
loopne
and
mov
iret
sahf
in
test
insl
sbb
insb
mov
sbb
push
mov
mov
in
fisubrs
adc
aaa
mov
cmpsl
hlt
sub
push
xchg
pop
clc
outsl
push
bound
sbb
sbb
out
adc
inc
in
adc
xchg
push
pushf
outsl
sub
movsl
leave
pop
jno
loopne
dec
and
sbbl
aam
lds
loope
jns
xor
jbe
test
movsl
cmp
in
jmp
loopne
adc
jle
mov
dec
test
jmp
xchg
pop
dec
out
in
mov
popa
lods
sbb
or
test
jbe
insl
cmp
rorb
clc
sbb
int3
test
lret
pop
lret
stos
pushf
mov
mov
xchg
and
add
out
dec
test
daa
sbb
insb
jmp
adc
or
lds
mov
test
adc
jle
and
jmp
gs
jno
repnz
sbb
or
sbb
das
mulb
fidivs
inc
jne
popa
gs
cs
insl
jle
inc
mov
test
sub
adc
add
sbb
lret
pop
imul
jo
dec
test
add
repz
and
test
jp
mov
movsl
dec
cmc
jg
ja
add
pop
mov
fsubrl
dec
sbb
popf
orl
sbb
cmp
mov
push
or
dec
cmp
jmp
cmpsl
rcll
lds
sub
aam
out
adc
in
in
imulb
push
xchg
mov
les
pop
mov
inc
xor
les
pop
jo
dec
out
popa
jnp
cmp
decb
imul
push
test
cs
lods
xor
dec
mov
inc
fstl
sub
adc
jle
or
sbb
mov
xchg
enter
outsl
dec
pusha
adc
fisttpl
push
mov
add
push
mov
movsl
cli
mov
xor
fidivl
dec
adc
lahf
jbe
lds
jne
xor
scas
sbb
xchg
sbb
rolb
cli
leave
and
inc
mov
jb
jnp
fimull
dec
out
cmp
out
out
xor
push
fwait
pusha
sti
inc
aaa
jae
aam
ret
xor
cmpsl
repz
loope
hlt
xchg
stos
cmp
mov
sbb
sbb
xor
int
mov
lret
mov
fsubs
addr16
inc
inc
pop
push
stos
adc
mov
sbb
mul
jge
xor
push
ret
adc
aam
outsb
test
sarb
inc
fs
iret
lds
jnp
jg
sub
arpl
lret
imul
stos
sbb
and
xlat
mov
and
clc
pop
cmp
lods
xchg
cmp
xor
push
mov
lcall
aaa
sub
dec
fs
ljmp
jns
add
pusha
mov
xorl
add
mov
movsl
aaa
pop
or
cmp
cmp
xchg
icebp
hlt
push
in
push
mov
nop
pop
cmp
adc
adc
adc
inc
mov
test
pop
clc
inc
dec
out
push
pop
adcb
adc
insl
dec
fsubrl
testb
ljmp
adc
dec
inc
sbbl
ja
xorb
mov
xorl
imul
mov
xchg
push
fildl
shrb
jecxz
out
shl
dec
lock
jb
jg
and
insl
jae
mov
push
xchg
fstps
sti
mov
dec
imull
inc
test
out
in
jbe
xchg
mov
or
dec
cld
jns
and
or
xchg
or
addr16
sub
or
ljmp
daa
jp
ret
mov
roll
xchg
xor
xchg
pusha
push
mov
pop
jbe
das
mov
sub
scas
or
inc
test
insl
in
roll
stos
mov
dec
stos
pop
xchg
mov
sbb
mov
pop
insb
mov
test
imul
dec
jne
incl
lods
jp
push
aas
adc
pop
fbld
scas
hlt
pushf
sub
cs
push
mov
test
inc
and
xchg
test
mov
popf
xor
dec
cmp
push
cmpsb
and
and
int
xchg
aas
sbb
out
cmp
std
xchg
cld
mov
xchg
pop
int3
dec
push
xchg
ss
sbb
pop
mov
repz
sub
dec
push
mov
add
push
mov
or
and
and
adc
lret
jnp
aam
hlt
mov
iret
push
add
and
aam
mov
ret
in
adc
push
in
jmp
ljmp
xor
test
cmc
jmp
outsl
push
hlt
mov
iret
adc
rol
test
and
in
xchg
or
repnz
hlt
add
loopne
repz
push
mov
sbb
dec
into
mov
add
cwtl
dec
les
sub
out
icebp
loopne
xor
fdivs
xchg
rorl
sub
jne
or
inc
out
repnz
aaa
sbb
add
arpl
mov
pop
jnp
cwtl
imul
into
mov
add
xlat
rcr
hlt
push
in
sub
mov
pop
pop
hlt
pushf
ljmp
pop
aas
pusha
hlt
and
add
loope
das
std
sti
push
lea
xor
and
lds
add
sub
cltd
jno
push
xor
sub
je
fstpl
mov
pop
int
push
lcall
sbb
push
jne
pop
jecxz
pop
aas
jns
mov
jmp
movsb
lret
adc
pop
or
sbb
cmpsl
mov
add
pushf
lret
aaa
push
or
cmp
lea
inc
mov
sub
push
ds
roll
sub
mov
test
inc
mov
lahf
mov
mov
jbe
loope
lahf
fcmovb
loop
movsb
call
add
add
rcll
sbbl
icebp
push
movsb
fnstenv
out
add
push
xor
icebp
cld
rolb
faddp
in
div
divb
lock
ja
int3
jle
lods
stc
push
mov
les
dec
push
push
inc
test
dec
test
xchg
test
jmp
mov
popl
mov
jne
cmp
xchg
mov
mov
loopne
xchg
cli
jns
mov
add
icebp
pop
cmpsb
sbb
or
jecxz
add
in
leave
out
sbb
out
rol
xchg
lcall
sti
stc
push
mov
movsl
call
mov
fs
aam
gs
aad
mov
fisubl
fisttps
sub
xchg
cltd
pop
adc
and
mov
or
das
xchg
lret
jp
mov
das
and
inc
stc
dec
jge
jl
cli
cmp
outsb
call
cld
popa
jbe
mov
lcall
idivl
shlb
mov
or
loop
fucom
sub
leave
push
cs
add
pusha
dec
hlt
pop
cli
cmp
cmp
les
cmp
cmp
lret
sbb
enter
sbb
cs
add
aad
jecxz
or
sbb
in
mov
out
pop
adc
adcl
push
inc
out
add
test
decb
int
popf
mov
dec
stos
mov
adc
inc
and
push
xchg
shll
cmp
addr16
inc
aam
dec
sahf
leave
mov
lock
jecxz
gs
subb
add
mov
or
aaa
jno
mov
test
sub
adc
dec
pop
cmpsl
and
sahf
adc
xor
or
and
jbe
mov
push
sbb
dec
arpl
jbe
pop
subl
insb
cmp
mov
popa
or
pop
sub
inc
xor
sarb
fadd
mov
fwait
sbb
sub
shll
test
jbe
cli
out
xor
add
cmp
fs
fistpl
in
jg
sbb
inc
fisttps
iret
cld
cmc
dec
pop
jb
nop
scas
mov
sti
in
add
mov
les
sub
das
notl
xchg
das
sub
xor
jno
mov
js
sahf
xchg
icebp
cmc
xor
repz
cmp
call
pop
mov
jmp
xor
jle
leave
cmp
addl
testl
ficoms
scas
xchg
cmp
lret
sub
add
psubd
sub
cmpl
pop
loope
rcll
clc
xchg
push
mov
sbb
in
movsb
leave
repz
mov
push
mov
and
pop
shlb
sub
jl
or
inc
ja
mov
xor
inc
in
xor
je
dec
adc
mov
in
cmpsb
int3
lret
cmp
repnz
push
int
push
fwait
mov
fcmovnb
push
or
cmp
add
shlb
mov
test
xchg
mov
lcall
mov
jo
inc
test
scas
mov
lock
and
adc
outsl
xor
push
xchg
fisttpll
pop
adc
cmp
es
inc
inc
push
imul
dec
rol
bound
cmp
in
mov
paddb
cltd
jge
lds
addr16
inc
mov
sub
push
adc
push
jl
jb
pushf
mov
test
jecxz
add
xchg
mov
cmpsb
call
test
jp
icebp
jns
dec
or
inc
xor
or
test
popf
jmp
fwait
ja
pop
xchg
es
pusha
cmc
inc
nop
or
in
aas
inc
adc
nop
mov
gs
cmp
mov
shll
mov
in
cltd
cmp
sub
cmpsl
stc
pop
icebp
cmpsl
cmp
inc
stc
push
in
add
xor
ret
xor
hlt
xor
mov
cltd
dec
inc
push
aad
mov
idivl
fcompl
adc
ja
xchg
fistpl
dec
jne
mov
insl
and
xchg
adc
insl
dec
fidivrs
inc
jne
sub
sub
jp
push
dec
xchg
es
or
lea
pop
out
adc
mov
add
lock
adc
ret
aad
pushf
das
or
jno
out
push
pop
rcrb
lods
icebp
aad
aam
xchg
pop
stos
aad
cmp
pop
test
cltd
and
aaa
xchg
loopne
bound
cmpsb
dec
pushf
mov
xor
mov
sarb
jg
adc
addr16
xor
push
or
xchg
in
mov
xchg
cmp
aaa
pop
mov
ss
ret
push
add
fidivl
insl
idivl
add
or
faddp
sarl
mov
insb
cli
sbb
mov
add
push
aas
sub
lea
ja
fdivp
mov
sub
push
cld
inc
push
scas
leave
jp
and
das
ljmp
insl
insl
pop
push
mov
nop
mov
pop
cmc
in
out
push
insb
push
sti
add
in
lds
inc
sub
sbb
jns
repz
or
ja
xchg
inc
push
push
ret
sub
push
gs
mov
adc
mov
xor
or
repnz
enter
push
gs
mov
ds
dec
inc
xor
push
mov
nop
mov
xchg
xor
mov
xor
std
cltd
add
sub
push
and
and
cmpsl
inc
leave
mov
js
jne
or
cmp
das
jecxz
loope
mov
mov
xchg
lods
cmp
cwtl
push
aas
test
lahf
fisubrs
jle
push
pop
stc
leave
inc
inc
or
cld
xchg
pop
jns
fimuls
push
adc
xchg
xor
pop
test
sbb
inc
leave
push
sbb
rorb
xchg
sub
sbb
outsl
stc
add
xor
sub
pop
imulb
inc
dec
add
xchg
faddl
jl
push
xchg
mov
mov
in
lock
inc
or
xlat
insb
pop
rcrb
jecxz
sarb
inc
sbb
jne
sbb
and
or
orl
xchg
adc
out
std
mov
lcall
outsl
repz
inc
sub
and
das
xor
mov
jecxz
fsts
adc
rorb
icebp
addr16
imul
adc
pusha
inc
inc
loop
or
mov
and
rcrb
movsb
xchg
push
pushf
pop
jb
sbb
dec
loop
adc
mov
xor
scas
pushf
test
mov
adc
xchg
push
test
add
sub
or
out
add
pop
xlat
inc
mov
cli
jecxz
mov
xchg
leave
push
movsl
pop
sub
xor
ficompl
fwait
jae
pop
shl
sarb
inc
addr16
scas
mov
mov
movb
jnp
adc
add
inc
shrb
dec
cmp
pop
call
push
icebp
imul
xchg
les
jecxz
xchg
mov
scas
xchg
into
test
push
inc
sbb
xor
pop
push
inc
xor
fsubrs
out
sub
jecxz
rcll
fs
and
sub
js
jbe
push
dec
ret
outsl
fnsave
mov
outsb
jo
es
pop
cmpsl
outsb
fimull
into
pop
xor
adc
enter
jp
in
pop
out
std
and
lret
in
cli
test
testl
lret
sti
mov
fdivr
inc
movsb
mov
inc
pop
repz
int3
sub
orb
pop
mov
lret
cmpsb
inc
push
pop
mov
das
cli
out
imul
push
push
or
pop
mov
cmp
dec
jg
lods
mov
rolb
cmpsl
add
test
lds
xchg
pop
fsubp
cmpps
mov
inc
jg
push
rcr
sub
pusha
mov
inc
push
int
jl
packsswb
lds
mov
in
inc
adc
or
cli
fidivs
and
loopne
and
mov
mov
xor
cwtl
out
xchg
mov
lahf
sahf
in
sub
cmp
iret
test
jg
sbb
xchg
adc
clc
inc
mov
adc
std
shr
mov
xor
lcall
pop
pop
mov
insb
push
out
jo
test
and
push
mov
gs
jmp
pop
daa
mov
and
sub
leave
dec
lcall
adc
stc
pop
out
aas
and
insl
jge
lods
pop
push
pop
mov
popa
mov
cmp
stos
les
aam
dec
adc
faddp
shrl
lods
sarl
dec
std
xchg
mov
loopne
and
das
mulb
ror
int3
mov
xor
push
add
ja
ret
popa
adc
lcall
mov
cmp
loop
push
push
inc
mov
pop
shlb
rorl
mov
sub
pop
scas
jle
ljmp
jae
lcall
jle
push
xchg
inc
push
and
push
addr16
into
repnz
adc
sub
mov
fstp
sahf
ja
mov
flds
fs
gs
popf
bnd
xchg
inc
and
add
std
imul
and
mov
rolb
rolb
xor
add
mov
xchg
dec
push
sbb
add
adc
xchg
call
or
lds
out
mov
fwait
dec
push
pop
mov
ret
decl
push
sti
sbb
stc
call
mov
pusha
and
xor
mov
push
or
shll
sub
lcall
mov
rcrb
push
cmp
mov
andb
mov
xlat
push
pop
arpl
or
xor
adc
add
mov
mov
pop
push
ffree
int3
push
cmp
cmp
cmp
popf
xchg
int3
stos
inc
das
arpl
inc
mov
cmp
mov
call
fs
aam
xor
sbb
lock
test
out
jno
clc
add
cmp
mov
jmp
js
and
xchg
mov
push
mov
hlt
mov
jecxz
notb
or
pop
cmp
or
and
daa
or
xchg
inc
pop
leave
dec
shl
fcoms
dec
in
fwait
imul
or
mov
lret
xor
sahf
in
cmpsb
pop
mov
insb
leave
mov
not
jmp
imul
ljmp
outsb
scas
mov
sub
rolb
rorb
int3
adc
lcall
adc
ret
pusha
xchg
mov
xor
test
fcomp
dec
or
xlat
ret
mov
pushw
inc
xchg
jbe
bound
adc
lret
adc
test
mov
mov
push
mov
ror
mov
xor
mov
in
scas
mov
mov
or
in
enter
js
das
sbb
ret
leave
push
mov
jp
hlt
sub
out
dec
jae
pop
push
cwtl
fwait
dec
fs
xchg
cmp
aas
ror
clc
pop
imul
out
daa
out
popf
adc
sub
leave
xchg
call
adc
push
inc
repnz
push
cmpsb
pop
or
xchg
inc
inc
fcomi
xchg
cmpsl
addl
cmc
popa
arpl
ficomps
shr
jns
mov
lahf
push
fisubrs
clc
sub
sbb
push
idiv
xchg
cmp
xchg
in
adc
insb
jno
fiadds
aad
cmp
mov
icebp
jnp
bound
loop
pushf
push
in
add
jbe
and
pusha
push
mov
xor
pop
dec
imul
push
xorl
sbb
inc
xchg
pop
nop
hlt
cmp
fidivl
push
lahf
jne
ss
mov
adc
rorl
cmpsb
or
jmp
movsl
and
or
fs
adc
nop
sbb
xchg
add
push
mov
les
imul
jno
sub
cmp
iret
or
and
imul
or
rcl
xchg
mov
cmp
adc
xor
call
lock
aas
js
das
insb
xor
fs
cmp
cmc
mov
xchg
in
mov
lcall
add
test
add
mov
push
sbb
pop
lods
or
and
cmc
cmp
sub
jecxz
fdivrs
push
xor
test
sub
int3
sahf
pop
and
icebp
cmpsl
lock
pop
xchg
push
xchg
mov
out
mov
lret
cld
and
push
fldt
push
and
shrl
daa
cmc
enter
scas
xor
dec
lods
emms
scas
pop
mov
inc
jl
scas
push
popf
ret
out
sub
push
inc
inc
mov
les
lret
pushf
leave
cmp
add
enter
push
mov
lds
adc
or
loop
dec
ret
ret
lret
lock
and
popa
sbb
int
clc
sub
mov
mov
or
fwait
std
pop
out
jbe
loop
mov
mov
pop
cmp
mov
or
out
jo
in
jbe
imul
ret
loopne
push
xchg
mov
cmpsl
and
inc
repnz
cld
xlat
or
je
mov
daa
mov
xor
inc
pushf
mov
dec
scas
sbb
not
jge
mov
inc
cmp
out
sub
out
push
scas
in
insb
arpl
sti
fisubs
mov
sbb
inc
adc
ds
or
popa
popf
cli
daa
mov
or
je
out
sbbb
sbb
pop
mov
xorb
pop
les
rclb
push
jae
fcmovbe
mov
mov
inc
inc
mov
xchg
sahf
mov
pushf
jo
rcl
addr16
aam
in
mov
pop
sub
mov
mov
sbb
jns
rcrb
lock
out
fmull
mov
in
lea
xchg
mov
fstpt
mov
xchg
mov
mov
jae
lods
cmp
and
mov
dec
js
outsl
movsb
les
into
cli
fisubl
inc
push
sbb
inc
inc
fs
cltd
in
push
lret
lds
or
js
mov
jmp
add
add
or
mov
and
cli
test
cmc
adc
lods
mov
out
xchg
ss
adc
out
test
adc
jo
mov
lock
xchg
or
hlt
mov
sbb
mov
push
xor
and
test
xlat
add
jb
jo
mov
fiaddl
jo
sub
inc
orb
push
insb
add
and
ja
lcall
cmp
insb
orb
loop
clc
lods
fists
popf
ficoms
jle
mov
adc
add
cmp
in
call
es
lahf
pop
mov
leave
sbb
add
int3
shlb
ss
xchg
cmp
and
mov
pushf
fstl
shll
sbb
push
jnp
mov
xor
lds
push
das
insb
cmpsb
scas
add
add
repnz
scas
insb
jp
mov
push
cmc
pop
pop
sub
daa
icebp
lods
fwait
cli
xchg
ss
stos
cmpsl
and
lds
call
add
cmp
push
jmp
adc
test
cmpb
mov
sub
in
les
adc
outsl
sarl
and
test
mov
in
aas
lahf
jo
mov
jns
mov
xor
into
xor
cld
jb
cwtl
jae
cld
cs
je
add
add
mov
sti
int3
mov
or
add
jnp
ret
pop
clc
inc
js
xor
add
cwtl
idivb
add
cmp
jb
mov
pop
sbbb
testb
shll
mov
xchg
pop
in
and
mov
push
mov
add
xchg
out
mov
push
lret
xor
icebp
pop
idivb
add
push
test
pop
xchg
fcomp
and
xor
add
mov
or
dec
popf
adc
pop
add
push
insb
fistpll
clc
and
mov
aas
in
in
jbe
push
xchg
stc
cwtl
pop
inc
int3
xor
jecxz
cs
dec
fisubs
pusha
mov
enter
movsb
cmpsl
push
out
fiadds
adc
mov
out
mov
mov
shlb
xchg
sbb
push
test
sarl
pop
test
cmpb
push
cld
or
ret
js
mov
push
and
loop
mov
sub
push
les
xor
xchg
and
scas
add
add
mov
arpl
adc
dec
out
or
and
lret
xchg
mov
xor
pop
fdivr
mov
rorl
jp
pop
lcall
in
movl
pusha
in
xlat
mov
dec
test
enter
fldt
inc
push
enter
in
int
jnp
cmp
xchg
imul
ds
ret
mov
pop
inc
pop
and
mov
cmpsl
xchg
mov
or
rcl
push
fcompl
fstl
lret
jno
jge
imul
daa
and
pop
pop
cmp
and
arpl
aam
pop
andl
pop
jge
cmp
xor
lret
mov
inc
leave
lret
lock
out
outsl
shl
call
mov
sbb
call
daa
mov
hlt
notl
push
loope
xchg
mov
pop
cmp
in
xor
sbb
push
cmp
incl
sti
jmp
ret
mov
stos
fildl
out
dec
movl
inc
dec
xchg
loop
repnz
hlt
xchg
mov
enter
sbbl
pop
mov
rolb
jns
xchg
cmp
xchg
pusha
sbb
add
cmp
pop
add
push
push
xchg
xchg
leave
xor
fwait
dec
lret
and
pop
xchg
xor
gs
push
ds
or
add
repnz
mov
mov
push
mov
and
mov
push
or
xor
ret
mov
pop
mov
mov
jg
push
sub
mov
push
es
aam
add
mov
mov
sbb
out
movsl
adc
jno
andb
cmp
sbb
push
repz
sub
leave
clc
dec
arpl
jno
data16
xor
cmp
clc
push
xor
dec
mov
mov
cmpsb
inc
add
das
imul
insb
cli
dec
enter
push
iret
in
mov
je
out
dec
adc
inc
add
cmp
ds
ss
xchg
add
mov
cs
jl
xchg
and
loop
xlat
xor
mov
faddl
sub
lret
ret
inc
mov
add
dec
push
leave
and
mov
lcall
std
or
sub
lods
push
xchg
push
nop
mov
jp
add
das
adc
push
push
test
fnsave
scas
mov
rclb
fnsave
push
or
lcall
jmp
call
adc
jb
xchg
adc
jne
sbb
insl
movsl
jns
jns
and
and
popa
or
xor
test
pop
add
sbb
pop
lcall
push
imul
jbe
cmp
jg
mov
es
inc
add
mov
mov
jae
and
mov
outsl
sar
xchg
bound
ss
in
mov
or
push
mov
out
sub
nop
mov
push
pop
and
mov
push
out
int
jl
xor
cmp
mov
pop
add
ds
ss
mov
mov
js
xchg
stc
ljmp
jnp
sub
fucomip
es
cli
fimull
mov
xchg
mov
dec
push
mov
retw
daa
addr16
pop
and
aam
enter
out
stc
push
test
movsb
lds
xchg
xor
mov
mov
pop
ffreep
inc
fistps
xlat
and
mov
adc
xchg
mov
push
pop
jno
or
push
addr16
sub
xor
push
dec
adc
ds
arpl
aam
and
and
add
mov
mov
addl
lret
fstpt
ss
mov
cmp
inc
mov
inc
and
cltd
push
or
stos
pop
out
ljmp
movsb
shll
xchg
pushf
push
int
mov
jge
mov
rolb
imul
jo
lcall
outsl
jmp
les
xor
out
cli
cltd
pusha
addb
ljmp
push
jae
adc
jnp
push
mov
sti
pop
cmp
or
lret
scas
xchg
pop
fisubrl
or
imul
xchg
jp
adc
minps
loop
lret
jo
lods
test
repnz
mov
es
dec
ret
repz
or
sub
aam
aad
fwait
dec
and
and
and
or
mov
inc
outsb
test
fcoms
mov
mov
lods
xchg
jg
dec
out
push
int
mov
aad
inc
ljmp
cmp
inc
or
andb
jnp
shlb
dec
fs
loop
mov
lret
add
in
push
inc
jge
pop
in
inc
sub
add
ss
push
popf
push
or
pop
mov
adc
xor
mov
aam
jbe
mov
les
fldcw
lock
xchg
jnp
rclb
mov
and
cs
lret
sti
ljmp
sub
in
iret
enter
jmp
and
push
inc
xchg
sti
popa
pop
jnp
fists
pushw
or
mov
movsl
fisubl
dec
mov
adc
mov
jno
adc
clc
ja
sbb
adc
dec
xchg
lods
pop
jle
push
sub
push
aaa
popa
sysretw
lock
shlb
out
sbb
sub
cs
mov
or
mov
sub
decl
outsb
sub
add
mov
call
in
imul
loope
dec
and
iret
mov
arpl
xor
std
inc
jge
fadds
xchg
cld
movsb
lret
mov
mov
add
and
add
repnz
xor
jmp
or
daa
imul
sub
stc
iret
shl
sbb
std
push
sub
cmp
push
or
adc
cmpsl
inc
sti
or
sti
fdivr
cmc
cld
jecxz
sbb
cmp
xchg
ja
jo
adc
scas
mov
add
jg
mov
int
push
popf
xchg
movsb
mov
inc
jmp
and
in
popa
ljmp
loope
pop
leave
lea
pop
xchg
sbb
mov
push
push
lock
jle
ud2
add
jmp
jge
mov
inc
jge
outsl
mov
adc
cmp
pop
aam
sub
fiadds
pushf
push
add
add
sbb
jl
shl
cmp
stc
mull
rorl
mov
mov
out
sbb
pop
and
stc
xchg
aas
pusha
rcr
sbb
xor
mov
out
pusha
scas
ds
jae
mov
addl
adc
jbe
and
movsb
lods
mov
jecxz
lds
sub
mov
push
mov
ret
enter
sub
ret
adc
jmp
sbb
add
leave
loop
subb
mov
das
call
dec
or
in
xchg
lret
and
xchg
cmp
mov
cltd
jns
or
add
dec
dec
out
jg
in
mov
outsb
mov
sbb
out
push
sti
fldpi
fisubrl
je
addb
repz
imul
or
xor
rolb
cmpb
mov
aad
inc
adc
sbb
mov
bound
inc
xlat
jle
sub
fstl
pop
in
xchg
fildll
cltd
je
fs
push
xchg
and
cmp
push
mov
pusha
loope
sub
mov
and
jno
jmp
sbb
dec
mov
ds
mov
pop
lea
and
mov
sbb
lods
stos
push
scas
mov
sbb
test
mov
add
lods
jnp
orl
push
adcl
dec
push
repz
aad
lret
pop
xchg
loop
andl
xor
cmp
adc
mov
loope
hlt
pop
jp
adc
mov
mov
jp
add
les
cmpsb
xor
jmp
jb
push
test
lret
sub
test
je
sbb
jbe
mov
mov
dec
repz
jg
das
jo
sbb
or
outsl
sbb
and
adc
decb
push
inc
test
mov
or
cmp
mov
icebp
imul
outsl
xor
jl
negl
ljmp
in
jnp
push
cli
mov
push
lds
cmp
adc
inc
cmp
inc
subl
dec
jbe
gs
dec
xlat
or
ss
fcomp
add
fadds
mov
cld
cwtl
addr16
xor
pop
push
adc
rcr
scas
adc
cmp
in
leave
inc
cmp
jl
add
push
out
fmull
pop
xchg
pop
shl
sbb
jo
adc
sahf
test
xor
dec
insl
in
imul
icebp
pop
sbb
inc
pop
rcl
cmp
push
mov
xchg
pusha
dec
adc
or
mov
or
mov
cltd
mov
push
fadd
rorl
jmp
movsl
xor
shll
popf
push
orb
mov
imul
roll
sub
pop
push
test
pop
push
cmp
and
setb
test
gs
into
xchg
aad
add
cmc
adc
in
cwtl
push
cmpl
bound
cwtl
pushf
pop
jae
ja
sub
dec
int
rcl
pop
in
cmp
mov
es
or
outsb
cmpsb
stos
and
ret
mov
mov
ja
sahf
popf
outsb
jl
cltd
das
xchg
jg
daa
mov
frstor
sahf
mov
mov
mov
je
sbb
xchg
lock
dec
push
subl
or
push
mov
call
icebp
sbb
stos
into
loope
xor
vmaxsd
xchg
pop
pop
stos
fistl
mov
fidivrl
pop
adc
adc
test
xchg
mov
inc
repnz
cli
lods
mov
js
xor
subl
cld
gs
stc
lea
fdivrp
jge
subb
jb
subb
pop
jle
xor
ror
push
repnz
jbe
pop
lret
rcll
ficomps
popf
repnz
push
jne
dec
jb
or
aad
iret
popa
fcoml
bound
aaa
adc
dec
in
pop
insb
icebp
jp
call
push
scas
cld
and
ret
xor
pop
loopne
mov
mov
test
jg
sbb
pusha
mov
sub
cmp
lcall
ret
cli
cltd
idivl
adc
bnd
inc
and
inc
and
fisubrl
sub
or
jecxz
rorb
dec
add
xor
lcall
fnstcw
inc
add
inc
das
inc
jo
in
fldln2
xchg
lret
cli
jo
push
push
xchg
lds
cmp
pop
sbb
movsl
push
jbe
and
mov
or
or
lods
push
xor
enter
cmp
sub
frstor
lods
adc
cltd
mov
mov
fsubrp
es
movsb
sub
push
jns
mov
xchg
xchg
orb
scas
or
int3
sbb
hlt
or
xor
jbe
push
mov
jmp
pop
jmp
push
loop
sub
fidivl
fdivr
lret
lret
mov
sbb
cmpsl
push
xchg
rcrb
iret
and
sbb
mov
xorb
adc
loopne
ret
push
sub
mov
pop
jne
mov
push
clc
ret
out
sbb
das
mov
jne
lahf
mulb
push
fidivs
outsb
xchg
lcall
dec
lcall
cmp
outsb
mov
adc
xchg
shr
mov
gs
sbb
inc
jle
in
xor
call
dec
icebp
jae
add
xor
cmpl
or
dec
mov
mov
inc
inc
push
negb
and
xchg
test
nop
test
cld
mov
shll
jmp
cmp
test
cmp
outsb
bound
dec
fsubl
fbld
fisubrl
fwait
pop
mov
pop
push
cmpsl
test
iret
adc
mov
fwait
enter
and
cmp
scas
pushf
fs
jge
fwait
mov
xlat
xchg
in
rcl
enter
xor
pop
cmc
jecxz
fimuls
fdivrs
xor
sub
jbe
xchg
mov
xlat
mov
fs
repnz
add
and
shlb
push
in
jne
mov
fsubr
popa
dec
sarb
dec
push
jg
out
frstor
sbb
es
cli
inc
jle
rcl
jmp
push
push
mov
cli
dec
sarl
sub
ret
aam
imul
jo
jecxz
stos
inc
jl
or
mov
sbb
inc
add
sub
cmp
mov
fcoml
ret
loope
mov
jo
push
sub
mov
into
sub
push
lods
shlb
sub
sbb
notb
hlt
sbb
pop
cmp
dec
setno
movsb
aam
mov
pop
std
add
inc
xor
testl
jmp
inc
das
leave
mov
pop
shll
or
xor
daa
and
adc
mov
outsb
mov
mov
aad
repnz
xchg
pop
cwtl
pusha
daa
add
mov
repz
and
fbld
icebp
out
xchg
cmp
dec
push
ljmp
xlat
xlat
std
mov
sbb
cltd
repz
in
mov
push
xorb
frstor
inc
mov
mov
add
fwait
lret
xchg
xchg
lods
ljmp
icebp
std
mov
es
movsl
pop
rcl
cmp
cs
test
push
mov
inc
pop
pop
sub
nop
inc
xor
cwtl
sbb
mov
push
aas
adc
pop
jo
add
mov
fcoms
xchg
fwait
sbb
jmp
popf
call
xor
and
cmpsb
mov
dec
xor
xlat
movsb
adcb
fs
inc
cwtl
sub
pop
jge
int
jne
dec
adc
mov
cld
mov
jb
call
mov
xor
dec
jns
enter
call
stos
jb
mov
xor
lret
or
cmp
jne
imul
ss
call
rdmsr
inc
mov
xchg
sub
sbb
mov
lods
repnz
call
pop
jl
dec
xchg
lcall
repnz
jno
int
ja
and
clc
mov
addr16
cmp
jecxz
sub
test
iret
jp
xor
or
jnp
xor
test
cld
cmp
jb
jge
dec
sahf
push
or
mov
mov
mov
ljmp
insb
jg
adc
leave
ret
js
ret
or
push
lock
jne
jg
repz
push
cmp
cs
pop
jmp
mov
mov
jnp
add
out
xchg
jae
and
aad
adc
and
std
jns
mov
fsub
adc
lcall
sub
mov
cmpsb
std
jbe
pop
fsubs
jmp
xchg
xchg
mov
push
pop
sub
xorb
inc
adc
iret
or
lock
add
das
inc
cmpl
xor
fsub
outsb
stc
adc
jns
lds
stc
push
ja
jmp
pushf
jo
sbb
bound
sbb
mov
sub
ret
jmp
stos
cltd
stos
fimull
adc
sbb
pop
sub
sbb
cmpsb
and
mov
dec
mov
ret
adc
sub
sbb
or
jo
frstors
fdivrl
in
nop
add
push
pop
pop
inc
lea
and
jns
jb
pop
fs
insb
stc
inc
sbb
add
dec
cmpsl
ds
or
add
or
xor
or
jne
cmpsb
lcall
popf
int3
sub
pop
popl
fisttpll
and
push
pop
mov
test
xor
scas
mov
loop
ret
nop
neg
fwait
xchg
pop
push
and
stc
jecxz
stc
mov
sti
int
rorb
push
push
das
gs
test
dec
dec
dec
imull
mov
mov
xchg
cli
shll
test
dec
xor
inc
xchg
outsl
cmpsb
xor
dec
andl
out
roll
fcmovb
xchg
stc
in
jge
mov
mov
mov
push
ja
add
loope
inc
scas
lret
test
sbb
test
aam
adc
mov
mov
fistpl
lret
into
lock
dec
inc
add
fmul
fs
add
cltd
cmp
mov
add
inc
xchg
or
cwtl
ficoms
mov
mov
mov
lods
or
push
int
hlt
rcll
push
or
pop
push
lea
stos
adc
js
xor
mov
loopne
sbb
inc
fwait
icebp
das
mov
jmp
xchg
loopne
cmc
aaa
mov
dec
mov
mov
fisubs
push
pop
jp
inc
aad
fcos
sub
pop
mov
ret
cmp
lret
sbb
fcoml
add
mov
cmp
fidivl
jecxz
ret
add
inc
loopne
add
test
add
cmpsb
sbb
cmp
in
dec
mov
test
xchg
or
sbb
jl
mov
fadd
mov
hlt
ds
enter
out
mov
lods
daa
cld
scas
xor
or
jne
loope
push
dec
pop
lock
sub
scas
xlat
cmp
rsm
lods
cmc
or
and
mov
scas
je
imul
les
lahf
xchg
ds
jecxz
cmp
pushf
xchg
xchg
xor
stc
jne
add
dec
xor
xor
pop
xor
mov
inc
fsub
lods
xchg
inc
call
out
rorb
stc
test
sub
jo
pop
mov
lcall
add
jo
inc
cmpl
test
dec
xchg
push
xchg
call
mov
ret
add
dec
push
adc
pop
inc
lret
test
inc
ret
jnp
xchg
dec
push
repnz
sub
popa
and
mov
jbe
loope
orb
mov
fwait
adc
xlat
pop
sub
imul
add
add
jmp
std
cmpsb
jb
rcrb
rolb
bound
mov
lcall
leave
jbe
inc
push
imul
aam
ljmp
imul
ss
neg
inc
and
shlb
pop
jbe
cmp
sti
scas
xor
or
dec
adc
xchg
xchg
dec
fldcw
ja
or
mov
cmp
dec
jno
xchg
not
inc
imul
push
imul
cmc
jbe
cltd
jge
jns
lahf
push
xor
aas
mov
mov
popa
xor
rcl
mov
lods
jp
outsl
inc
lods
push
mov
std
ret
neg
les
gs
dec
sub
adc
add
jne
pop
cs
push
add
addr16
rcrb
inc
push
popa
sbb
and
stos
or
lock
mov
ljmp
mov
mov
jle
xchg
in
sahf
pop
and
push
hlt
push
aam
push
into
and
cs
divb
stos
repnz
cmp
cwtl
mov
sbb
es
and
cmpsl
ds
pushf
sub
in
push
repnz
jge
retw
adc
mov
push
icebp
lret
add
sub
pop
rep
mov
sub
mov
out
fldcw
adc
repnz
js
clc
lret
pop
fists
pushw
ret
xchg
std
xor
fistpll
mov
add
push
mov
leave
cmpsb
sbbb
ds
cmc
fisubl
stos
push
mov
rcrb
mov
dec
xchg
push
cs
sbb
xlat
rclb
outsl
pop
adc
fxch
aas
push
in
into
shl
or
push
inc
sub
sbb
mov
in
adc
test
push
xchg
sbb
dec
push
pop
orl
nop
add
fnstcw
into
ss
mov
das
sbb
pop
clc
sbb
adc
inc
shlb
adc
jmp
call
mov
or
inc
pusha
fimuls
je
shrb
pop
mov
jns
shll
fisttpl
shll
mov
cli
xchg
aaa
out
jb
xor
xorb
inc
out
mov
mov
add
daa
imul
or
mul
push
cmp
push
pop
sbb
jbe
into
sbb
orb
mov
jl
lods
or
push
repnz
or
mov
sahf
sub
stc
push
sub
dec
ja
inc
xchg
mov
jge
pop
ja
cmpsl
iret
les
mov
adc
sub
pop
cmpsl
or
fisubl
outsl
sub
nop
outsb
add
and
in
adc
fistps
dec
xor
jmp
clc
push
inc
push
arpl
imul
push
stc
and
cmpsb
cmpsb
mov
pop
push
leave
pop
repnz
out
stos
xchg
es
push
dec
inc
pop
dec
xor
jne
cmpsb
and
imul
fs
push
mov
mov
inc
and
sbb
in
mov
cs
jno
push
out
cmp
mov
mov
mov
cld
add
adcb
or
push
mov
test
imul
icebp
pushf
sbbl
ds
add
push
ja
xchg
dec
ljmp
dec
loopne
cltd
clc
or
add
aam
pop
mov
inc
int
lods
jne
clc
dec
fdivr
adc
test
lcall
test
and
and
dec
loopne
outsb
sbb
jmp
jge,pt
inc
and
pop
hlt
jae
sub
das
cli
add
and
pop
arpl
ds
adc
push
push
out
aam
jae
insl
push
pusha
pusha
out
data16
push
xchg
popf
mov
inc
ss
xor
iret
fwait
lods
sub
cmp
and
pop
lea
in
gs
xor
mov
push
mov
cmp
mov
mov
stos
push
add
es
and
into
push
lock
mov
scas
xchg
add
pushf
xchg
test
out
sarb
sbb
repnz
push
aam
pop
sti
adc
enter
ret
popa
mov
lock
loopne
add
cli
addr16
pop
jae
push
sub
fwait
scas
sub
stos
push
add
sti
or
jo
nop
dec
push
or
push
imulb
and
fwait
dec
xor
lahf
jne
out
fwait
dec
hlt
test
cmp
jno
mov
addr16
jecxz
add
xlat
cs
stc
adc
cmp
push
rcll
and
dec
mov
rorb
jo
adc
push
mov
jecxz
xor
or
lock
inc
js
call
loope
iret
sbb
test
adc
pop
flds
cld
jns
mov
push
das
shlb
adc
jns
ret
loop
dec
mov
or
fldcw
xor
lds
insl
push
outsb
out
test
mov
adc
mov
movsl
push
push
mov
adc
popa
dec
sbb
jbe
push
fists
push
aaa
pop
xor
sub
mov
bound
stos
push
sbb
aas
repz
ds
or
cmc
sbb
jp
daa
adc
xchg
aam
lcall
shlb
mov
dec
in
add
pop
push
fiadds
jbe
mov
enter
xchg
cmp
nop
mov
sbb
or
push
pop
or
je
cmp
outsl
cltd
movnti
mov
mov
fdivrs
jle
in
xor
stos
jmp
and
pop
out
test
and
push
jmp
lahf
mov
add
cmpsl
push
je
mov
movsl
loopne
push
push
push
fcomps
xor
out
out
fistl
pop
roll
sbb
lods
adc
jp
imul
aad
fldt
sbb
pxor
mov
xor
int
lds
xorl
stos
pop
bound
idivl
mov
xchg
ret
push
lea
pop
xchg
dec
cmp
push
adc
pop
jae
inc
and
jnp
push
outsl
xor
mov
or
mov
fsubrs
xor
sub
xor
add
mov
mov
movntq
jb
ror
int3
or
daa
mov
clc
popa
in
and
push
pop
sbb
pop
test
loop
jmp
jecxz
sbb
aaa
xchg
ljmp
and
leave
jno
push
push
scas
add
ret
loopne
lret
cmpsl
pop
sub
rolb
sub
scas
push
scas
mov
push
rorb
jnp
mulb
or
dec
ret
cltd
jge
xor
mov
test
inc
mov
push
daa
shll
imul
clc
mov
mov
neg
sbb
aas
aas
sbb
mov
fidivrs
ret
into
xchg
icebp
pusha
inc
dec
add
das
das
sahf
and
shl
lahf
jae
fisttpll
aaa
mov
and
mov
enter
stos
sti
cld
out
outsl
mov
mov
inc
mov
gs
push
cli
ja
pop
and
or
mov
int
push
add
cmp
scas
clc
mov
cmp
adc
mov
pop
pop
pop
inc
iret
rcrb
jg
lahf
inc
lods
xor
cli
jl
push
jle
dec
sub
ret
xor
dec
neg
das
out
cmp
mov
push
int
int
mov
xchg
shll
cmp
mov
sbb
stos
cmp
sbb
cmc
lods
mov
ljmp
sub
push
pop
or
or
icebp
cmp
mov
and
add
push
adc
dec
call
mov
je
int3
rcl
xchg
and
test
xor
and
andb
lcall
out
in
push
arpl
jo
inc
stc
and
push
movsb
les
ret
fwait
mov
popf
adc
pop
cmp
push
add
adc
sub
cli
in
adc
lods
dec
arpl
clc
push
cmpl
jl
xchg
pop
cmpsb
fimuls
inc
stc
inc
push
loope
mov
jl
leave
clc
addr16
out
push
mov
roll
xlat
imull
push
xchg
mov
pop
pop
fwait
mov
call
mov
insl
sub
or
cwtl
outsb
and
cwtl
pop
loopne
inc
mov
jl
jl
ljmp
fwait
sub
repz
push
ss
dec
xorb
and
arpl
jge
lret
outsl
xor
aad
sbb
ret
xor
pop
jp
hlt
int
dec
pusha
fcmove
xchg
add
imul
movsb
sbb
jbe
loopne
jp
and
lods
cli
js
and
push
rolb
sub
mov
popf
daa
pop
out
repnz
adc
inc
je
ret
dec
xchg
xchg
lock
fldl
or
stos
and
fistps
mov
roll
loope
xor
stos
lock
aad
or
loopne
inc
hlt
subb
std
mov
pop
pop
push
repz
mov
and
test
sub
pusha
loop
subb
jne
sbbb
adc
push
cltd
push
std
push
loop
sub
adcb
std
inc
xchg
test
adc
sti
mov
push
or
in
sub
push
out
das
xor
gs
mov
mov
sub
pop
or
jno
sbb
or
jns
mov
icebp
cli
lea
lret
jnp
ret
sub
lods
jae
pop
jmp
mov
int3
xor
pop
push
lods
ss
loopne
cld
xor
inc
mov
addl
imul
adc
dec
jnp
rcrb
xor
clc
xorb
mov
jno
adc
push
push
mov
xchg
jnp
push
cmc
mov
imul
mov
data16
gs
je
cmp
adc
loopne
jbe
push
lock
pop
cmp
repnz
xchg
std
jo
std
test
dec
xchg
enter
movsb
jmp
cmpsl
sti
adc
lods
mov
scas
mov
adc
mov
cs
shrd
add
iret
outsl
dec
push
dec
iret
insl
daa
inc
pushf
sbb
ljmp
push
cltd
fimuls
outsb
pop
int
sbb
dec
xchg
es
or
testb
insl
imul
fwait
mov
mov
insl
aad
cmp
hlt
push
jge
call
call
pop
pop
aas
cmpsb
jge
les
pop
sub
fwait
adcl
shlb
lds
sub
mov
inc
adc
add
mov
daa
stos
int
popl
xchg
add
dec
sbb
jle
icebp
cmp
sbb
mov
mov
icebp
or
inc
cmovle
add
iret
test
xor
cltd
jnp
mov
out
jne
repz
clc
out
jp
adc
pop
inc
sub
pop
movsb
lds
mov
mov
psrld
sbb
lret
or
jb
sub
pop
sbb
pusha
adc
sub
pop
ss
mov
aad
mov
sub
push
pop
sub
add
hlt
scas
sbb
inc
dec
daa
adc
jno
xor
jecxz
rolb
push
adc
popf
pop
push
cmc
scas
cmp
ffree
idivb
adc
dec
mov
xchg
imul
aad
jecxz
dec
push
xor
pop
das
movd
ror
sub
mov
fwait
mov
cmc
mov
fildl
popa
sbb
nop
arpl
adc
repnz
roll
and
divl
mov
fimull
repnz
ljmp
rcrl
pop
mov
ret
adc
call
lds
mov
mov
dec
sbb
add
and
leave
jge
pop
cmp
cld
mov
lcall
jno
mov
jne
imul
lcall
rcr
fs
mov
and
aaa
loope
out
push
xor
stc
addb
cmp
stc
popf
xchg
fistpl
dec
inc
pop
jge
and
push
addr16
sub
hlt
adcl
fcmovnb
jne
cmp
jae
call
loopne
test
movl
fimuls
push
clc
mov
pop
mov
push
mov
icebp
pop
insl
sarb
iret
out
daa
fwait
std
mov
repz
lea
mov
pop
sti
xchg
ljmp
or
inc
sbb
xor
outsl
add
mov
dec
and
add
pop
aad
or
pop
cwtl
mov
dec
adc
push
out
jmp
and
pop
sahf
mov
pop
fs
adc
js
inc
in
clc
enter
imul
mov
dec
out
jnp
adc
add
jne
mov
add
hlt
sbb
xchg
jae
inc
movsl
xor
pushf
addr16
out
add
xor
or
es
dec
xor
jo
sbb
mov
push
int3
lods
xor
outsl
dec
adc
faddl
sbb
and
ficomps
dec
and
cmp
fwait
test
in
add
pop
cmp
cwtl
lcall
std
or
lock
shlb
jbe
and
insb
pop
ficomps
cmpsb
scas
inc
aam
dec
dec
sbbb
imul
xor
lea
roll
pop
xchg
xchg
pop
push
jmp
ret
add
test
xchg
cmp
pop
leave
stos
cmpb
sub
repz
lds
int3
pop
shlb
mov
fidivrs
inc
add
movb
mov
pop
js
fimull
jne
or
jecxz
xor
xchg
jmp
mov
or
insl
loopne
push
push
sbb
inc
pushl
mov
aad
in
stos
lods
pop
int
dec
sbb
mov
sbb
cltd
push
dec
inc
xor
insl
mov
or
lcall
pusha
gs
xor
arpl
testl
fstp
cmp
lock
pop
sarl
inc
out
pop
repnz
adc
sub
jns
mov
fmull
stos
jecxz
aam
addb
jge
hlt
lahf
aaa
pop
sub
and
dec
das
dec
cmpsb
mov
cmp
xor
shrb
xchg
lahf
mov
hlt
fldcw
loope
sbb
movsl
test
mov
jl
pop
aam
dec
sbb
adc
cmp
call
fistpll
jbe
mov
dec
lds
mov
or
or
imul
adc
or
bound
jo
and
les
xor
sbb
push
aad
mov
jmp
das
sub
lea
adc
add
sub
hlt
push
mov
jge
out
xchg
and
xchg
xchg
mov
push
and
sub
inc
dec
imul
aas
mov
sbb
cmp
or
lods
mov
lods
cmp
test
jae
push
xchg
cwtl
mov
xorl
mov
imul
les
ja
push
sbb
loope
enter
or
bound
dec
add
sub
xchg
int
add
cmp
push
into
insl
rcr
movl
cmpsl
clc
imul
pop
into
imul
mov
dec
jle
sbb
and
and
aaa
sti
pop
shl
lcall
inc
mov
into
stos
cli
sbb
mov
popa
cmp
xchg
inc
inc
or
xchg
and
dec
mov
push
jmp
pop
into
push
inc
push
jp
xchg
jge
or
sbb
fists
mov
push
mov
xchg
out
hlt
int3
xchg
cmc
mov
mov
mov
cmp
xchg
aaa
nop
push
pop
pop
push
inc
mov
jle
adc
cs
jnp
sbb
rcr
hlt
int3
ret
stos
lcall
fimuls
loop
clc
mov
dec
jl
sub
lds
or
mov
ss
les
fucomip
dec
js
and
outsl
xor
jecxz
add
and
mov
popf
jge
iret
push
loope
repz
std
dec
mov
xchg
lcall
std
cmc
and
rclb
jmp
out
xchg
mov
into
jl
jae
data16
jp
mov
cmpsb
mov
xchg
push
jnp
outsl
inc
mul
into
lods
mov
cs
imul
outsb
neg
and
out
pop
and
ret
fnstenv
movsl
aam
clc
add
outsb
sbb
add
jp
pop
fsubrl
stos
fistps
repnz
cmp
fistps
inc
dec
mov
cli
arpl
loop
push
mov
adc
xor
adc
fwait
int
daa
push
mov
add
xorl
jmp
lods
jnp
cltd
sub
sub
push
lods
cmp
mov
jecxz
xchg
dec
pusha
push
pop
or
ljmp
pop
jp
adc
pushf
or
rcr
lret
xor
push
mov
dec
mov
xchg
pop
lods
adc
fdivs
cli
aaa
mov
jae
lds
in
ret
repz
mov
mov
fwait
scas
dec
ret
loop
pusha
jae
jle
xor
push
cmp
sub
lods
notb
pop
push
stos
push
vmwrite
mov
xor
xlat
cmp
inc
xorb
adc
sbb
ss
xchg
xor
dec
loopne
std
in
test
jp
or
and
xchg
sub
scas
xor
mov
es
push
frndint
sarb
cltd
pushf
sbb
cmp
inc
dec
mov
adc
xchg
sbb
popf
push
lock
adc
inc
pop
cmp
sbb
dec
sub
sbb
adc
flds
dec
ret
and
ljmp
aad
xchg
jg
aad
cwtl
test
mov
subl
mov
in
push
mov
outsb
sbb
mov
xchg
jmp
sbb
out
mov
xor
cmp
inc
addb
pop
and
in
jnp
popa
dec
ret
xorb
push
mov
push
push
sahf
rcrb
loop
leave
push
mov
push
gs
sahf
cmp
sti
leave
daa
rcrl
mov
add
mov
insb
dec
add
xchg
fdivs
lcall
aam
push
mov
stc
or
cmp
scas
scas
fdivrs
or
in
lret
mov
out
insl
aad
lcall
lahf
xchg
mov
fwait
push
mov
jg
adcb
or
scas
faddl
mov
sub
repz
mov
fs
inc
or
repnz
or
test
add
inc
cld
pop
lods
mov
loop
ljmp
pop
xchg
inc
out
jno
stc
mov
lods
dec
mov
push
lcall
enter
cmp
fidivl
xor
xchg
lods
call
in
stc
pusha
mov
loop
inc
push
jle
sbb
xor
cli
jnp
jle
aad
xor
out
push
insl
mov
call
popa
jl
xor
dec
repz
xchg
aas
jecxz
push
pop
mov
xchg
fisubl
push
or
dec
icebp
push
cmp
ja
push
in
xchg
mov
pop
subl
mov
sub
mov
aaa
cmc
or
in
mov
inc
pushf
add
adc
add
add
add
mov
shlb
outsb
lock
fwait
das
insb
jae
mov
inc
roll
sub
out
jecxz
test
jge
mov
push
gs
and
sbb
push
xchg
push
cmp
out
f2xm1
cmp
mov
push
sbb
out
jmp
cmp
push
pop
fsub
pop
pusha
ret
popl
jns
adc
roll
pop
inc
xchg
orl
mov
fisubrl
lret
hlt
bound
inc
pop
lahf
das
push
mov
cmp
inc
call
xchg
popf
in
frstor
mov
mov
sarl
imul
add
rol
fdivrl
mov
lods
push
push
pop
repnz
xchg
aad
jnp
mov
lock
gs
push
ret
sub
jp
pop
loope
xchg
es
std
mov
or
and
sahf
push
fwait
inc
xlat
adc
push
jo
sub
mov
xchg
push
idivb
lea
mov
dec
popf
sub
or
into
fldlg2
insl
pop
adc
sti
gs
mov
xchg
xchg
add
xchg
mov
sbb
sbb
adc
aad
sub
mov
xor
add
scas
jmp
inc
repz
push
jge
outsb
sar
stos
fisubrl
xor
int3
shl
xlat
in
clc
jns
mov
add
adc
pop
insb
and
dec
xchg
loop
int3
push
pop
mov
enter
incb
popf
jne
in
fisttpl
dec
out
cmpsb
push
xor
push
adc
popf
arpl
ret
imul
lret
fdiv
and
ret
mov
sub
mov
iret
in
rcrb
pop
cltd
dec
mov
pop
je
lds
mov
pushf
or
popa
mov
dec
push
daa
ret
cmp
ret
sbb
dec
scas
pop
jmp
shr
ror
sarb
pop
out
std
movsl
mov
jg
ja
xchg
add
int
cmp
iret
push
or
add
dec
mov
xor
adc
and
in
push
xchg
fadds
mov
out
mov
jno
adc
int3
mov
rcll
out
pop
add
mov
or
dec
xchg
pop
jecxz
add
add
hlt
cwtl
or
lahf
lcall
into
dec
xchg
sbb
xchg
sub
xor
xor
jle
xchg
dec
jecxz
push
outsl
call
mov
push
imul
cmp
inc
mov
mov
mov
cmp
adc
sarl
movsl
sbb
std
inc
movsl
mov
imul
sti
add
cmp
dec
push
data16
loop
mov
dec
roll
xor
in
pop
scas
sahf
mov
cmp
adc
adc
jg
lahf
pop
mov
mov
xchg
mov
les
mov
dec
rcr
jns
dec
js
int3
jne
je
push
mov
jbe
test
addr16
fidivrs
jg
adc
test
mov
ja
fstpt
pop
inc
mov
pop
push
mov
bound
stc
stc
mov
cmp
or
pop
mov
movsl
and
adc
jb
and
inc
in
push
shlb
test
mov
lret
imul
add
loop
push
rcll
scas
pusha
push
xchg
insb
les
lcall
mov
jo
mov
and
sarb
int
or
push
jne
pusha
fsub
mov
and
cmpsl
jne
cmp
mov
mov
fs
jo
xchg
mov
rorb
push
jns
mov
fstpt
nop
lock
xor
push
lret
gs
imul
jns
add
adc
jge
in
push
repz
jle
pop
mov
aas
sti
cmp
sub
add
icebp
pop
pop
jge
das
test
imul
insb
inc
and
pusha
lock
cmpb
aas
dec
fstp
sbb
addr16
iret
xor
jp
cli
mulb
jbe
in
shrb
aam
jbe
add
dec
lret
push
jae
int
push
imul
out
fdivrp
dec
sub
ret
or
int
sbb
test
ljmp
setnp
push
or
js
mov
inc
stos
and
repnz
mov
shr
or
ss
pusha
fildl
lret
inc
roll
sbb
aas
rorl
xchg
jo
push
jno
addr16
xor
push
stc
mov
sub
mov
inc
lea
and
pop
push
inc
sarb
dec
js
mov
xchg
or
jp
ljmp
and
loop
fmuls
sub
pop
in
pop
jnp
sub
adc
xor
lret
nop
and
jnp
data16
outsb
sbb
mov
cmp
xor
xchg
xchg
cmp
mov
fmull
lret
out
mov
les
dec
std
dec
scas
jle
jns
lret
pop
pusha
xchg
dec
js
inc
out
mov
fdivl
sti
outsb
sub
push
aad
test
out
in
movsl
mov
arpl
xor
sti
repnz
pusha
data16
loope
inc
lahf
aaa
mov
imul
das
fs
inc
mov
int3
or
pop
mov
dec
jp
out
iret
push
and
jnp
xchg
cmp
jae
orb
mov
test
jmp
mov
mov
imulb
hlt
outsl
scas
push
mov
movsl
rcll
inc
pop
pop
push
popl
inc
aad
ss
inc
xchg
mov
cli
cmp
dec
pop
push
push
int3
mov
leave
in
mov
add
test
push
std
cmp
adc
pushf
out
add
jecxz
sahf
movsb
cmp
fadds
fmuls
dec
and
clc
mov
lds
cmc
sti
iret
jns
pushf
xor
loop
push
adc
push
mov
dec
repnz
std
jp
in
call
popa
jno
popf
popa
sub
fldl
test
out
adc
fdiv
lcall
jnp
mov
or
in
mov
and
sbb
mov
inc
mov
aas
jns
cmp
popl
dec
in
and
cld
push
mov
mov
repnz
mov
jecxz
es
insb
jnp
xor
xchg
sbb
insl
xor
aas
or
dec
movsl
aam
fdivs
pop
push
add
mov
cmp
xchg
push
in
jecxz
ss
or
inc
popa
jne
push
add
test
dec
sbb
inc
js
jp
pusha
jl
xchg
pop
xchg
adc
out
pop
push
pop
mov
add
and
sub
or
jbe
mov
in
mov
lds
mov
mov
lahf
dec
pushf
mov
loop
jle
insb
mov
cmp
lods
imulb
mov
push
scas
mov
jnp
scas
mov
pop
fldt
fcmovnu
mov
in
xchg
negl
xor
je
push
mov
into
push
in
ljmp
pop
mov
xchg
adc
dec
mov
jnp
jbe
movsb
addr16
pushf
jbe
mov
dec
dec
fsubrs
fsts
lret
cmp
addr16
or
repz
push
sub
out
pop
adc
xchg
xor
sti
xor
adc
xchg
add
adc
aad
loopne
fs
xchg
fdivrl
push
jl
xchg
or
sbb
add
mov
mov
sbb
and
jge
pushf
nop
pop
int
int
jae
cltd
inc
fidivrl
xchg
adc
mov
lret
outsl
mov
pop
pop
stc
insl
mov
ficoml
jl
inc
lret
mov
cmp
repnz
cmp
mov
int
lret
push
cld
xor
jmp
cmp
inc
xchg
or
jnp
mov
popf
repnz
inc
mov
cltd
mov
inc
or
add
dec
out
mov
ljmp
push
loop
mov
mov
lea
in
stc
clc
daa
incl
and
outsl
xchg
adc
add
outsl
popa
mov
shll
mov
and
jno
rcll
dec
and
shlb
add
cltd
mov
xchg
or
repz
sbb
icebp
es
icebp
jbe
sbb
sub
sarb
repz
jb
rolb
mov
adc
loope
pop
push
in
cmpsl
cmp
push
and
vxorps
jle
adcb
lods
pop
pushf
addb
jge
cltd
mov
xchg
ret
push
repz
inc
fsts
ljmp
jmp
das
lahf
push
dec
in
inc
add
popf
hlt
jg
inc
call
loopne
and
aam
subl
pop
repnz
test
sbb
loop
mov
jge
xor
repnz
mov
mov
clc
ss
dec
lahf
push
or
ljmp
arpl
lods
xchg
mov
in
push
imul
addr16
movsb
repz
dec
xchg
imul
sbb
in
imulb
fsubrs
push
pop
sub
sbb
iret
lods
fidivs
in
push
and
hlt
popa
scas
into
pushf
push
inc
or
stc
mov
lock
nop
jbe
pop
dec
imul
das
push
dec
stos
xchg
pop
xchg
stos
movsl
and
adc
push
xchg
inc
jns
mov
push
das
dec
inc
mov
int
pop
adc
hlt
leave
mov
push
sub
mov
insl
outsb
jae
nop
adc
xor
aas
into
push
fsubs
pusha
cwtl
into
test
and
push
insl
fisttps
outsb
xor
inc
stos
mov
xor
adc
insb
mov
push
aas
stos
or
ja
fadd
fsts
sbb
dec
movsb
stos
jnp
pop
mov
mov
xor
lret
mov
or
data16
mov
lds
scas
rcrb
sub
mov
out
rorb
addr16
js
fimull
add
popf
dec
mov
cmp
xchg
add
add
mov
adc
pop
xor
sbb
test
leave
scas
pop
inc
jg
scas
adc
and
jb
mov
mov
clc
mov
push
sub
xchg
pop
fildll
add
sahf
mov
and
or
cwtl
test
jle
add
push
push
mov
scas
mov
adc
mov
pop
jb
lret
pushf
xorl
inc
pop
flds
insb
lds
or
out
mov
or
cmp
cld
mov
xlat
or
mov
dec
xor
les
adc
lds
jnp
lock
dec
push
xor
insb
xchg
adc
xor
das
arpl
shll
inc
push
push
mov
sub
and
mov
out
jmp
test
test
fwait
xchg
mov
shl
lcall
fstps
mov
in
mov
lahf
jne
es
push
push
inc
sarb
notl
sbb
lahf
push
and
mov
ret
adc
icebp
mov
pop
adc
mov
mov
imul
movsb
ja
adcl
inc
inc
and
in
stos
cltd
lds
imul
mov
jae
shrl
and
sbb
jae
js
xchg
jecxz
repz
cld
mov
shlb
mov
mov
add
data16
push
nop
hlt
lahf
jo
inc
inc
data16
mov
sti
adc
pop
int
stc
add
test
cmp
xchg
xchg
popa
push
jle
call
adc
add
es
daa
scas
nop
dec
in
push
loopne
adc
ret
andb
int
mov
and
scas
pop
movsl
in
and
xor
ficoml
jae
ficompl
or
jg
pop
mov
add
popa
cmpsl
sub
sbb
enter
xchg
push
shrl
and
add
pop
jecxz
sub
pop
xchg
sbb
jnp
or
test
mov
xchg
xor
mov
or
roll
dec
out
shll
fmuls
sbbb
iret
fdivs
dec
divb
sti
mov
push
lahf
lods
push
shrl
out
orb
repnz
fiaddl
jne
jg
pop
faddp
out
and
jae
inc
inc
mov
hlt
pop
data16
cmp
jns
int
mov
gs
xor
fdivr
jo
mov
pop
ret
jg
push
dec
and
lods
lock
dec
sub
imul
iret
stc
and
fbld
cs
jnp
test
xchg
sbb
inc
outsb
into
mull
mov
mov
pop
inc
mov
mov
inc
xchg
incb
divb
push
mov
jmp
xor
inc
addr16
add
enter
xorb
adc
cmp
add
imul
pop
sbb
out
test
sub
ss
repz
imul
cmpsl
loopne
arpl
push
mov
fstps
jae
arpl
pusha
sbb
or
psrlw
scas
pop
cmp
pusha
jle
rorb
sub
and
test
cmp
mov
lea
push
jae
push
loope
lret
xor
and
enter
inc
jo
bound
lods
outsl
ret
lods
xchg
or
insl
xchg
sbb
lods
or
loop
jge
mov
movsb
scas
lret
add
lret
mov
insl
imul
rcrb
sbbl
dec
jecxz
sbb
adc
xor
scas
dec
dec
push
inc
sti
dec
dec
xchg
pop
jb
pop
add
mov
shl
sbb
stos
jg
mov
push
sub
fwait
jl
sbb
dec
sbb
push
cmp
std
call
xchg
pop
push
add
xor
pop
jge
sbbb
cmp
in
or
push
push
adc
jno
sub
test
or
bound
pop
dec
inc
mov
rorl
push
mov
punpcklbw
mov
add
fmull
or
in
sbb
iret
mov
lret
outsl
pop
jle
and
push
ret
lods
pop
pop
add
test
in
notl
push
push
add
mov
loope
xchg
xor
or
mov
add
mov
ret
in
add
negb
cwtl
pop
in
stos
sbb
call
adc
and
fisttps
icebp
fmull
push
mov
sti
sbb
aaa
cld
dec
ljmp
std
pop
xchg
inc
sahf
aam
push
mov
sbb
lret
in
mov
cmp
gs
ljmp
in
dec
adc
dec
outsb
sub
fdivs
stc
and
mov
shll
sbb
lret
cs
push
mov
aad
scas
mov
push
pushf
nop
mov
cmp
cmpsl
call
add
popf
lds
mov
cli
fmuls
xlat
mov
jmp
bswap
cmp
pop
js
addl
xor
mov
xchg
sub
xor
stos
mov
lods
jo
jno
icebp
fimuls
in
push
sbb
dec
jge
cmc
mov
mov
pop
pusha
out
cmp
xchg
test
cmpsl
out
mov
adc
cmp
add
sub
add
mov
andl
aam
mov
jns
lcall
out
fidivrs
gs
jl
inc
rcr
jne
int
data16
sahf
pop
and
push
and
setp
call
iret
sbb
in
dec
mov
pop
mov
pop
mov
fcompl
and
sbb
push
and
pusha
inc
mov
sub
repnz
fisubs
int3
sub
and
adc
iret
mov
push
or
mov
out
cmc
xchg
pop
fptan
mov
inc
mov
mov
and
sbb
adc
mov
dec
pop
adc
xchg
pop
xor
ljmp
mov
mov
outsl
out
add
jecxz
ret
inc
inc
sti
and
lds
mov
cmp
in
iret
pushf
mov
idivb
out
sub
push
sub
loope
outsl
fnsave
lods
or
pop
out
ret
sti
jb
push
sub
cmpb
ds
ljmp
loopne
sti
nop
imul
or
mov
movsl
mov
inc
mov
scas
or
fistps
push
xorb
out
mov
aaa
inc
cmp
fidivrl
mov
popa
sub
stc
out
jl
jbe
inc
ret
push
and
call
jmp
jg
iret
xchg
pop
xor
add
dec
fdivs
adc
pop
cli
das
jno
repz
xchg
add
xor
enter
outsl
mov
mov
nop
mov
outsb
and
dec
and
cwtl
mov
mov
inc
ror
mov
int3
xchg
jno
lods
lods
aaa
and
sub
mov
jmp
sub
and
loopne
inc
add
lahf
inc
repnz
push
push
andl
das
mov
pop
jne
mov
cs
or
sub
xchg
arpl
xor
pushf
mov
mov
sarb
test
adc
mov
cld
in
ffreep
insl
xor
mov
lock
mov
mov
pop
in
imul
mov
sahf
xchg
xor
outsl
pop
cmp
mov
push
scas
pop
jle
xor
jae
test
gs
ret
popa
jge
cli
mov
mov
test
pop
cltd
mov
and
test
jbe
scas
sub
test
ret
int
popa
imul
gs
sarl
lds
rolb
das
and
sub
clc
sahf
push
orps
mov
push
or
addr16
pop
mov
adc
aam
mov
mov
mov
stos
mov
pop
mov
mull
dec
sub
call
loope
jbe
mov
lods
jo
std
sub
mov
jae
jecxz
ds
fmull
addl
jle
loop
sbb
xor
cmp
bound
fs
clc
xor
hlt
cmpsl
sub
insl
fucomp
push
cltd
ret
ja
jge
cmc
ret
push
xchg
mov
bnd
adc
pop
mov
bound
sbb
sub
push
pusha
push
cmp
shrb
sub
int3
aaa
xchg
into
outsb
out
iret
add
into
prefetcht1
and
in
popa
fidivs
imul
fcoms
pushf
stos
rclb
test
ss
ret
mov
daa
call
mov
mov
aas
jo
fstl
cli
mov
jge
push
scas
push
cmp
sbb
dec
bound
push
jp
into
aas
movsl
jle
adc
sti
xchg
repz
lods
inc
je
jne
dec
lahf
xchg
add
imul
loopne
inc
cmp
call
or
sbb
mov
out
inc
mov
stos
fistps
ret
repnz
and
out
loop
scas
outsb
lods
mov
ror
jmp
or
das
repz
sti
jp
test
pop
add
cld
fwait
aas
ds
cmp
mov
adc
jnp
adc
jmp
xor
xchg
or
push
push
hlt
in
xor
cmp
insl
xchg
outsb
lret
xlat
aaa
xor
add
mov
sarl
lods
add
aas
jge
push
pop
les
data16
sub
aas
lret
iret
arpl
xor
push
jae
rcrl
inc
and
cwtl
add
aam
out
mov
imul
test
or
inc
movsl
cmpsb
mov
jle
pop
in
add
popf
push
xor
sbb
mov
adc
jecxz
sbb
stos
shlb
ret
lcall
or
jmp
add
fcompl
repnz
je
jb
xor
je
rcr
pop
add
insl
push
sar
push
mov
xchg
lret
and
test
cltd
stos
cmp
data16
mov
aam
ret
ret
ljmp
mov
or
or
xchg
cltd
cmp
pop
fnstsw
jecxz
xorb
nop
push
rclb
out
dec
adc
adc
test
test
jns
jo
xor
adc
stos
movsl
fimull
pop
push
dec
mov
xchg
mov
add
xchg
jle
sarl
ret
mov
mov
xor
ds
out
inc
adc
or
cwtl
cltd
jbe
xor
repz
addb
jo
mov
add
je
js
inc
gs
loop
xchg
push
inc
mov
xor
mov
in
cltd
movsb
outsb
sti
stos
scas
hlt
mov
lods
or
xor
test
in
sub
aam
into
sub
cmp
in
xor
add
pop
add
mov
sub
xlat
mov
arpl
test
iret
sub
xchg
scas
fnsave
push
movsl
jmp
add
add
outsb
ret
shr
into
push
sti
aas
enter
mov
insb
lea
xchg
jbe
and
and
inc
aaa
pop
sbb
incb
stos
inc
sbb
cmp
icebp
add
and
or
sbb
or
aad
xor
lods
icebp
mov
inc
add
shl
lods
insb
add
subb
adc
idivl
add
fwait
scas
insb
cmp
insl
popa
mov
push
or
shr
out
cmc
hlt
mov
xor
or
adc
fildll
pushf
jo
push
add
push
icebp
pop
add
xchg
and
inc
xchg
mov
data16
mov
inc
popa
pop
xor
ds
nop
add
jbe
out
jl
and
aam
xchg
jae
push
ds
fwait
jne
xchg
sub
rorl
or
pop
data16
idivl
xchg
rcrl
repz
out
push
testb
dec
scas
enter
js
sbb
int
mov
jae
dec
inc
lds
adc
out
stos
push
xor
or
push
or
mov
cmp
mov
or
xchg
cli
push
scas
adc
xchg
mov
mov
xchg
pop
and
inc
dec
and
xor
stos
mov
cld
out
jns
sar
lret
mov
int
rcll
xchg
sbb
add
repnz
cmp
mov
pop
xchg
sti
push
fnstcw
scas
mov
mov
sub
adc
push
cltd
rorl
xor
jbe
cmp
and
adc
mov
jo
xor
add
imul
cmp
inc
ret
in
fstl
and
cs
dec
adc
cwtl
je
sub
xchg
ss
out
sub
push
and
lret
push
aas
add
out
sub
or
stc
cld
fs
cmp
ret
mov
adc
test
sub
ret
test
mov
lock
mov
in
dec
cwtl
push
movsl
lock
dec
fucomp
rcll
test
jg
dec
xchg
int3
xchg
adc
fistps
hlt
sub
cmp
lock
dec
aaa
popa
fsubrs
scas
add
mov
push
lods
cmp
pop
xchg
pop
pop
pop
loopne
aas
jae
test
outsb
sub
mov
clc
dec
jbe
dec
adcb
jmp
cs
or
lock
popa
adc
or
xor
test
lret
inc
movsb
mov
sub
daa
cmc
mov
lods
mov
push
mov
and
jno
ret
and
push
lret
ficoms
nopl
cmp
outsl
icebp
cmp
pop
leave
test
into
cmpsb
cmp
stos
adc
scas
cmp
mov
leave
lods
sbb
mov
stc
cld
mov
mov
notb
loop
imul
jae
dec
popf
stc
push
fildl
lds
adc
sbb
add
jns
and
jbe
jo
std
cmp
pop
sbb
int
pop
sahf
test
cltd
jns
daa
inc
pop
push
shlb
or
add
sub
inc
clc
mov
jecxz
aad
push
rorl
mov
lock
lods
aam
inc
ficomps
xchg
xchg
dec
add
mov
push
int3
bound
dec
sub
fcmovb
movsb
repnz
cwtl
cld
or
insl
fsubrs
xchg
ja
push
sarl
push
push
iret
je
sub
jmp
ficompl
inc
inc
xor
lds
outsb
sahf
jae
cltd
mov
xor
xor
adc
sbb
xchg
mov
or
out
mov
insb
lret
and
fisubl
fnstcw
rcl
add
mov
int
push
das
inc
sarb
mov
cmp
bound
jle
sbb
out
adc
adc
mov
mov
mov
push
xor
adc
jo
fldl
call
lea
jno
push
call
bound
xchg
xchg
and
out
mov
cld
cmp
mov
loope
push
mov
rcll
sub
and
test
js
cmpsb
cmp
out
lret
pushf
inc
sahf
xor
divps
push
lahf
int
ljmp
sub
sbb
aas
rcll
ljmp
adc
push
ljmp
push
sbb
fbld
inc
jg
jle
jmp
dec
inc
inc
jae
adc
sbb
pop
cmp
aam
sti
adc
xchg
movsb
dec
mov
sub
sbb
lods
mov
adc
sahf
fs
add
adc
test
xor
test
or
mov
and
dec
cld
xchg
add
lock
data16
dec
call
fdivl
sbb
rol
lds
or
ja
scas
xor
rolb
push
cmpsb
leave
roll
sub
stc
fs
dec
mov
hlt
add
pop
xor
mov
jle
daa
in
mov
xchg
fisttps
push
pop
jmp
jb
inc
or
pop
and
and
xchg
push
push
mov
lods
add
add
lods
inc
or
scas
push
bound
xor
push
pop
xchg
cltd
fnstcw
mov
jg
imul
jno
mov
sbb
clc
cmc
or
inc
fcoms
sbb
dec
fsubl
stc
or
addr16
mov
je
xor
pop
cld
gs
dec
ret
cmp
imul
cmpsb
sbb
popa
mov
cld
mov
rcrb
call
scas
sub
rclb
jno
pusha
das
lret
scas
mov
ret
fs
add
dec
sarl
cltd
pop
stos
data16
std
loopne
lret
cli
add
cmp
mov
pop
sub
mov
xchg
imul
mov
cmpsb
jle
ds
sbb
push
sbb
mov
xor
mov
xchg
stc
jg
mov
inc
xchg
inc
cmp
subl
sub
clc
inc
hlt
out
mov
cmc
loop
lcall
jo
fcoms
sub
push
mov
fcmovb
loopne
dec
jnp
lcall
in
jnp
ud2
xchg
xor
into
out
fnstenv
xchg
inc
adc
insl
pop
ss
addl
shlb
ret
xor
bound
iret
and
arpl
jns
outsb
xchg
stos
adc
mov
cld
sub
jno
add
fsubrl
or
addr16
add
pushf
fidivs
cmc
mov
out
and
cmp
adc
jo
repnz
pop
adc
addr16
pusha
pop
stos
movsl
ds
mov
cmpsb
inc
in
test
add
mov
cmp
daa
dec
adc
mov
movsb
add
lock
jb
inc
cmpsl
xor
and
sti
add
sqrtps
and
orl
ja
pushf
inc
or
mov
inc
dec
sti
mov
jp
xlat
outsb
push
push
subl
and
orb
sbb
mov
add
mov
outsb
das
mov
rolb
fcmovbe
shll
in
lret
mulb
fistl
pop
std
mov
icebp
mov
std
xor
jg,pt
mov
sbb
out
lcall
sbb
repnz
xchg
sbb
jp
push
cmp
or
pop
je
or
out
fildl
into
out
and
or
pop
mov
adc
test
jnp
add
sub
popf
mov
fisubl
mov
mov
mov
pop
mov
lods
fists
jmp
push
pop
mov
pop
lahf
adc
dec
in
out
cld
xchg
scas
cltd
lods
xchg
mov
int
adc
dec
enter
out
pop
iret
dec
pusha
jne
inc
fmull
rcr
outsl
pop
xchg
inc
popf
dec
dec
pop
inc
lret
cmp
sub
movsl
mov
mov
cmp
les
inc
sub
push
stc
aam
mov
nop
in
xchg
jle
lods
aaa
pop
cmp
fsubl
addl
sub
inc
push
sbbw
in
and
js
pop
pop
imul
or
pop
xchg
stos
xorl
leave
inc
push
sahf
mov
jecxz
lahf
cmp
int
xchg
jbe
inc
test
inc
adc
mov
xor
filds
push
imul
mov
enter
jbe
push
pop
iret
dec
stos
fnstcw
repnz
or
sub
cmp
sub
mov
xor
cmc
inc
faddl
shlb
sub
imul
cmp
lods
sub
or
jle
in
sbb
sbb
sbb
in
hlt
sbb
in
js
pop
jnp
sarl
in
in
mov
fnstcw
scas
mov
cmpsb
push
lahf
mov
push
cmp
push
lock
mov
fnsave
mov
fidivs
pop
lret
out
ds
nop
cmp
mov
adc
jg
leave
and
or
insl
xor
fsubrs
in
aaa
cmp
and
test
jp
out
cmp
sti
adc
hlt
jb
jne
cmc
mov
nop
inc
dec
mov
mov
jl
xchg
out
add
mov
ss
addr16
mov
mov
insb
jo
loop
flds
dec
mov
xor
lods
sbb
cmp
dec
pop
cld
mov
into
inc
push
cmp
mov
and
popa
or
sbb
outsl
jno
sbb
dec
mov
popf
es
rorl
xchg
ret
repz
pop
mov
mov
repnz
jb
push
js
nop
fs
push
jmp
mov
roll
adc
cltd
shll
adc
lahf
fs
movsb
sub
popa
jmp
test
outsb
fcompl
lock
xchg
int3
outsb
ja
jns
rcl
andb
and
ljmp
or
jo
adc
clc
mov
sub
cmpsl
inc
sub
mov
adc
jmp
xchg
je
sbb
cmpb
cs
adc
loop
mov
rcl
pop
pop
repnz
or
push
maxps
mull
das
idivl
add
inc
mov
int
mov
pop
push
mov
in
lret
sbb
ds
xchg
jns
push
test
xor
daa
xchg
pop
leave
xlat
into
jns
sbb
stc
xor
mov
test
into
cmpsl
xor
int3
popl
sarb
pop
add
pusha
pop
xchg
add
test
xlat
mov
push
or
cli
and
lods
aam
add
ret
aad
into
lret
call
repnz
out
loop
inc
leave
dec
sbb
cmp
movsb
dec
lret
sbb
pop
inc
popa
aas
fildll
bound
or
leave
adc
negl
movsb
jmp
mov
testl
fwait
cmp
mov
cli
jg
sub
mov
clc
jle
push
fs
lcall
scas
push
and
sub
sub
mov
out
aam
push
out
dec
xor
sbb
xchg
and
sub
push
cmp
or
adc
stc
add
inc
jno
push
xlat
inc
jge
call
imulb
adc
ds
ljmp
in
pusha
mov
mov
mov
mov
out
bound
jb
out
inc
jl
movsb
jo
sub
mov
or
lret
jne
and
cmpb
inc
pop
pop
and
pop
mov
repz
dec
xchg
mov
xchg
push
jo
jne
or
subb
pop
jo
push
jmp
popa
test
mov
aas
js
nop
into
lods
aam
nop
sub
test
idivl
push
cltd
mov
jmp
mov
into
stc
outsb
mov
mov
sbb
xor
push
test
aam
jbe
bound
adc
xor
xchg
aam
mov
ret
iret
orl
shlb
sbb
push
jno
pop
jae
add
dec
jb
push
xor
dec
push
insl
and
push
mov
loop
jnp
sbb
data16
xchg
cltd
scas
inc
cmp
cmp
in
scas
mov
adc
mov
mov
pop
fstl
mov
std
inc
sub
pop
push
xchg
insb
pusha
cmpb
cmp
and
cmp
push
enter
mov
inc
dec
jno
fdivrl
lcall
push
mov
mov
arpl
jl
add
pop
wbinvd
add
jg
inc
mov
mov
pop
pushf
or
sbb
xor
fmul
mov
into
insb
pop
addr16
push
jge
repnz
cmp
add
mov
aam
mov
or
in
das
testb
loop
lods
imulb
imul
decb
sbb
jl
mov
mov
cwtl
push
sub
out
int3
enter
inc
sbb
mov
outsb
mov
into
cwtl
cwtl
ljmp
imull
and
dec
cmpsb
cmpsb
and
cmpsl
fsubr
inc
in
mov
add
xor
xchg
into
jbe
in
push
lods
es
mov
mov
cs
pop
and
xor
repnz
xor
push
mov
loope
ds
orl
ficompl
fsubl
xor
lds
xchg
into
flds
arpl
mov
popa
icebp
aam
cmp
pop
jae
data16
jl
push
cmp
mov
add
fsubrl
int3
das
outsb
fistpll
stos
bound
sbb
xchg
and
scas
jne
sti
fwait
test
out
xor
and
dec
in
fbstp
pop
out
fsubrl
jb
mov
out
daa
sub
inc
lds
pop
xchg
and
push
jle
push
in
jb
arpl
inc
or
xor
dec
js
dec
testl
xor
xchg
sub
xor
int3
scas
adc
mov
cltd
subl
push
mov
shlb
pop
bound
xlat
dec
fs
in
xor
and
sbb
mov
mov
adc
push
lea
imul
cmpsb
and
jmp
faddl
or
adc
cli
sub
addl
mov
jmp
xchg
sub
outsl
clc
jp
inc
pop
lock
int3
loope
jno
mov
cltd
shll
es
aad
jp
sub
icebp
imul
push
ror
out
dec
adc
jae
sbb
push
xor
dec
mov
jecxz
jp
outsl
loopne
loop
jae
orb
push
scas
leave
outsl
and
add
ficoms
ret
cmpsb
sub
in
call
in
fldt
addl
adcb
push
xchg
and
stos
loope
xor
xchg
jmp
popa
test
data16
pushw
imul
sbb
adc
scas
jo
int
add
push
lahf
fnstenv
fstps
cmp
jl
js
imul
ret
push
popa
call
stos
movsb
fcmovb
out
xlat
out
mov
adc
sarl
mov
icebp
popa
js,pn
cwtl
sbb
daa
out
sub
subb
xchg
repnz
sahf
pop
inc
dec
and
loope
movl
fstps
imul
mov
adc
stos
adc
fldt
aad
les
sub
pop
test
mov
mov
repnz
mov
jle
sbb
adc
aas
cvtpi2ps
mov
or
push
loop
add
inc
cmpsl
mov
pop
lods
jbe
push
push
xchg
test
lcall
shll
lahf
enter
xchg
imul
and
dec
inc
jg
adc
das
dec
xor
sti
jmp
sub
sahf
jle
fists
fwait
push
adc
nop
jle
out
mov
shlb
jp
dec
and
sub
clc
lret
pop
stc
pop
ret
push
jle
ret
aas
cmpb
mov
and
or
test
mov
lret
xchg
xchg
sub
push
sub
repnz
xchg
inc
push
push
jp
ret
mov
das
addr16
popa
aad
cmp
clc
push
es
dec
jne
fisubs
jno
loopne
dec
cwtl
mov
bound
mov
sub
dec
loop
ja
out
das
cltd
mov
iret
iret
mov
push
or
rolb
jns
adc
gs
in
int
mov
inc
mov
stos
adc
mov
inc
ret
rol
lds
fsubs
int
into
int
ret
das
xchg
fld
nop
sub
jmp
add
psubw
mov
mov
insl
in
jbe
sbb
idivl
std
sbb
adc
in
mov
or
pop
add
sub
push
add
cltd
push
ffree
adc
cmc
sahf
mov
push
addl
mov
je
push
jnp
ljmp
pop
push
addr16
sub
bound
ret
inc
mov
shll
aam
icebp
cmpsb
jge
jno
stos
leave
inc
xor
jne
stos
sahf
sbb
xchg
jl
pop
imul
adc
shl
mov
popf
push
mov
mov
stos
jnp
out
dec
jnp
lret
dec
sbb
je
mov
and
xchg
aaa
adc
mov
gs
dec
sub
mov
ss
jo
jae
push
sbb
rcrb
mov
dec
movsl
xchg
push
and
sarb
data16
enter
cmp
popl
fsts
and
mov
push
int3
mov
pop
pop
cltd
in
setb
dec
mov
sarb
cmp
xchg
sub
sti
cmp
ror
jb
add
mov
lods
fmull
aas
inc
shufps
mov
mov
les
or
inc
movsb
and
aad
sahf
mov
nop
subl
mov
inc
and
shlb
pop
adc
pop
cmp
pop
inc
mov
and
stc
pop
cmp
and
stc
andl
pop
mov
bound
push
pusha
jmp
jmp
or
xchg
enter
sbb
sbb
stc
movsb
sub
scas
xlat
in
dec
jecxz
and
add
icebp
cltd
or
push
outsb
push
dec
mov
enter
repz
pop
xor
imul
jne
imul
push
jnp
jne
icebp
lcall
jge
dec
and
int
imul
js
cmc
cli
cmpsl
shll
lret
aaa
dec
dec
pusha
mov
xchg
sub
push
scas
cmpsb
adc
push
out
push
xor
cs
loop
dec
jecxz
and
mov
subl
mov
push
jl
or
addb
or
mov
xor
test
and
cwtl
rcrb
and
dec
pop
sbb
mov
mov
je
scas
pusha
add
stos
sti
mov
add
lea
jo
mov
inc
int3
xchg
shll
aam
stos
push
xchg
pop
push
fisttpl
sahf
int3
add
pop
ficomps
les
fwait
cmpsl
inc
hlt
aad
lea
loope
xor
xor
push
pop
xchg
mov
mov
mov
sahf
xor
sbb
mov
dec
jmp
sbb
inc
dec
cld
cmp
or
mov
ds
test
mov
push
add
popf
cmp
mov
mov
out
pop
pop
mov
or
pop
mov
pop
stos
pushf
scas
incb
inc
imul
mov
mov
outsb
push
sub
sbb
insb
bound
push
sub
addr16
pop
test
sbbl
icebp
cli
sub
leave
loopne
adc
mov
mov
xor
jecxz
and
jae
xchg
xchg
movsl
pop
mov
fidivs
pop
xchg
cli
mov
decb
xor
mov
fldcw
dec
sahf
test
cmp
push
cmp
scas
ret
xchg
push
add
mov
jbe
push
jmp
jecxz
mov
outsl
adc
push
sbb
push
ss
sbb
cmp
insb
mov
call
orl
or
mov
mov
sub
pextrw
add
ffreep
test
dec
insl
movsl
nop
cmpsb
lret
lret
xor
test
add
xlat
imul
jp
xor
std
popf
fisttpll
pop
cmc
js
daa
incl
mov
lcall
mov
rcrl
test
pop
mov
xlat
mov
pushl
outsl
sbb
inc
popw
adc
or
jg
stos
and
jmp
stos
and
ret
fisubrs
sbb
push
clc
cmp
adc
cltd
add
int3
inc
xchg
ror
mulb
inc
jg
add
mov
jg
xor
lods
mov
jg
inc
ror
dec
xor
pusha
xchg
push
inc
adc
adc
adc
mov
dec
popf
jge
xchg
xor
push
shl
inc
sti
jne
je
adc
popa
mov
ffreep
and
sbb
fstpl
mov
in
mov
mulb
xor
xchg
mov
std
add
mov
cmp
sbb
wrmsr
test
push
cmpsl
jg
ds
mov
inc
mov
sahf
cmpsl
sub
adc
int
mov
call
jo
jmp
jno
lock
jg
iret
ret
xchg
inc
ds
les
sbb
push
ss
push
xchg
dec
jo
sbb
jge
pop
pop
sbb
jmp
or
ffreep
push
xor
pusha
dec
add
shll
fsubl
jle
jecxz
ret
pop
sub
aas
fildll
fsts
xchg
sbb
xorl
call
enter
xor
cmp
mov
adc
mov
int
cmp
add
int
aas
leave
inc
fcomps
push
clc
shlb
enter
push
gs
xor
pop
pop
mov
in
mov
out
push
inc
jecxz
ds
lret
push
push
ret
cli
loope
push
outsb
stos
mov
mov
mov
enter
scas
and
inc
mov
clc
pop
jne
pop
lds
adc
inc
fnstcw
pop
out
inc
add
loope
repnz
xchg
sub
fs
push
xchg
mov
int
mov
xchg
pushf
lcall
fisubs
std
call
add
xor
mov
int3
lods
jge
pop
inc
mov
pop
movsb
imul
int3
mov
sbbb
out
ds
mov
rorb
mov
dec
into
sub
mov
lea
das
xchg
add
push
rolb
imul
push
push
dec
jp
push
popf
movsl
cmpsl
mov
pusha
and
dec
rclb
dec
pusha
pushf
test
es
ret
mulb
or
sbb
js
lock
jns
jb
sbb
sarb
inc
ljmp
mov
loop
aad
pushl
imul
or
sub
inc
jae
outsb
jmp
es
sub
popa
inc
sbb
mov
arpl
jg
mov
ljmp
shlb
cmp
adc
in
int
inc
sub
je
sub
sbb
addr16
jg
mov
pushf
inc
int3
rcrb
or
popa
and
imul
sbb
mov
mov
xchg
int
roll
rcll
lods
mov
lods
test
filds
bound
iret
jl
mov
popf
ljmp
mov
pop
lret
shrl
mov
out
mov
lock
add
loopne
mov
nop
gs
dec
leave
inc
mull
movsb
test
xchg
fs
or
lret
pop
xchg
data16
sub
jne
iret
sbb
sbb
lods
xor
cmp
mov
fnstsw
mov
in
cmc
ficomps
leave
add
int
sbb
test
repz
or
cmp
dec
and
jmp
jne
mov
push
data16
push
movsl
out
jno
icebp
imul
lret
lods
jmp
push
adc
cmp
filds
test
aad
insb
pop
pop
ret
sub
push
and
xlat
aaa
inc
aad
fbld
aam
pop
addr16
sub
and
loope
std
mov
cmp
ss
sub
or
imul
mov
cmp
xor
add
sub
xor
ret
cwtl
ss
jge
mov
pop
or
sbb
sbb
jecxz
ja
cmp
ds
mov
xor
xchg
mov
lret
push
sbb
hlt
adc
add
out
sub
mov
add
mov
push
sti
bnd
sbb
cmc
cs
lds
mov
jne
scas
fidivl
shll
pusha
insb
adc
je
bound
mov
pop
pop
push
and
andb
xor
mov
jp
push
shlb
sub
xchg
imul
pop
cmp
sahf
scas
sbb
inc
dec
js
scas
sub
fstpl
cmpl
scas
cmpsb
hlt
call
in
les
jno
add
in
test
jo
js
adc
repz
fsubl
bound
repz
out
lock
cmpsl
mov
or
cmp
mov
test
popa
xor
inc
add
xchg
call
push
and
xor
jge
iret
inc
jne
add
stc
cmp
das
repnz
loope
bsr
or
ljmp
out
je
xchg
and
stos
movsl
pop
push
lods
jne
ss
mov
lock
push
cmp
fsubl
fsts
in
xchg
xor
stos
add
pop
add
in
mov
dec
and
xor
shrl
jne
adc
inc
xchg
inc
cmp
daa
lret
dec
out
inc
test
mov
mov
adc
sbb
cmp
mov
add
adc
addr16
xor
or
mov
rcrb
push
int
sub
mov
in
es
xor
in
aad
pop
inc
xchg
inc
push
sti
mov
add
adc
sub
das
mov
mov
adc
mov
mov
mov
lds
btr
pusha
cmp
cmpsb
popa
inc
xchg
bound
leave
mov
pop
xor
adc
dec
out
popf
inc
dec
jg
in
rcrb
fnstcw
shll
repz
loop
xor
push
out
ret
ljmp
dec
in
das
aam
xor
pop
add
mov
out
das
jge
push
push
mov
scas
cmp
xorb
jno
mov
pop
inc
jecxz
mov
addr16
inc
or
fwait
or
out
movsb
scas
sbb
mov
imul
jno
add
mov
mov
jb
xchg
popa
xor
icebp
lds
sbb
mov
ficoms
fwait
or
xchg
lcall
sbb
sbb
fimuls
dec
ljmp
mov
cmp
icebp
stc
or
or
arpl
bound
jmp
inc
xchg
pop
andb
xchg
stc
lret
or
movsl
cmp
inc
xchg
cmp
ret
jecxz
xor
lret
leave
ds
and
in
xor
por
push
lahf
fldenv
repnz
push
or
dec
mov
dec
pushf
and
dec
xchg
in
push
xor
pop
cmpsl
loopne
test
mov
arpl
mov
rep
xor
loop
fstl
or
les
dec
les
or
cmp
mov
and
push
mov
mov
fidivl
push
push
mov
imul
push
sti
adcb
cmp
sub
mov
pop
dec
push
adc
pop
jle
dec
dec
shr
adc
sub
testl
imul
pop
mov
ret
dec
bound
sbb
push
ja
out
bound
mov
sbb
dec
aaa
cmp
stc
pop
clc
sbb
fimuls
dec
add
cmp
xchg
repnz
mov
jno
pusha
or
xchg
lea
inc
rcrb
jl
lret
jbe
hlt
repnz
rcrl
cli
mov
mov
dec
dec
leave
out
call
cmpsb
out
jecxz
adc
leave
cs
call
cwtl
xor
inc
xchg
fadd
jp
inc
int
call
out
sarl
mov
xchg
rcrb
fdivl
dec
cwtl
cld
stos
xchg
xchg
lcall
dec
adc
mov
mov
or
mov
sbb
sub
out
popa
jmp
cwtl
pop
fsubl
mov
lock
lock
mov
lret
pop
imul
pop
ss
popf
testb
pop
leave
fstl
push
push
mov
into
mov
mov
arpl
inc
hlt
jl
push
dec
jp
ss
add
mov
fisubrl
adc
dec
mov
and
pushf
or
aas
cld
push
int3
dec
dec
test
dec
or
fisttpl
adc
or
or
inc
push
daa
out
pop
test
aaa
divb
add
pop
sbb
jmp
cmpsb
lea
dec
call
xor
add
dec
aam
sub
dec
sub
jecxz
sbb
adc
jg
imul
imul
push
inc
and
xor
or
repnz
pop
cmp
adc
and
xchg
pop
inc
jb
pop
inc
pop
stc
fs
es
cmc
dec
jb
outsb
test
fcomi
in
test
ljmp
std
or
mov
imul
stc
int3
push
mov
ljmp
mov
lock
mov
cmp
or
out
pop
arpl
lret
sub
or
sahf
jmp
pop
xchg
mov
adc
gs
fisubrs
mov
add
or
repnz
or
adc
mov
fstpl
push
mov
repnz
adc
cmp
xor
insb
dec
stos
hlt
and
sbb
pop
rclb
jno
adc
lods
jnp
sub
dec
xor
cmpsb
xchg
mov
xchg
and
inc
into
xchg
push
mov
ss
fs
add
jne
pop
sub
jnp
adc
popa
repz
inc
cmp
inc
mov
sarb
push
push
out
mov
jno
inc
inc
xchg
movsl
cmc
dec
lret
sbb
outsb
ljmp
xor
stc
notl
pusha
aaa
subb
fwait
xchg
push
sub
imul
es
subl
lds
xor
jmp
popa
repnz
inc
sub
sbb
adc
dec
cmpsl
inc
sbb
clc
jae
mov
dec
arpl
adc
lahf
in
pop
jae
mov
inc
sub
dec
stos
stos
or
xchg
xor
mov
push
imul
call
jno
jecxz
test
pop
and
dec
or
into
insl
icebp
or
rcrb
ficoml
lret
into
push
adc
adc
test
adc
sub
jge
js
sbb
push
in
push
outsl
dec
dec
lds
mov
or
xor
mov
jo
cmp
mov
add
call
mov
mov
das
scas
inc
cmp
lahf
in
sub
nop
daa
xchg
add
into
pop
push
sti
int
repnz
lods
leave
stos
jp
jnp
out
add
repnz
rolb
adc
xlat
sub
dec
insb
hlt
insl
mov
fcoms
inc
add
insl
std
add
jb
call
lcall
push
mov
and
adc
push
loop
dec
adc
pushfw
repnz
add
xchg
add
in
xchg
pop
aam
dec
push
pop
mov
call
xchg
push
cmpsb
adc
jbe
loope
xor
iret
sbbl
adc
mov
mov
mov
and
push
cmp
gs
or
pop
jge
aam
xchg
lahf
jg
fisubl
xchg
inc
testl
and
aad
push
push
mov
int
ja
arpl
or
test
mov
mov
out
fwait
rol
cmpsl
lods
imul
lcall
push
pop
into
pop
test
arpl
stos
js
incb
mov
pop
das
xchg
imul
mov
gs
outsw
icebp
test
xchg
and
cmc
clc
call
push
adc
popf
jbe
pop
lret
int
adc
cmp
xchg
nop
aad
stos
nop
mov
stos
in
fistps
xchg
inc
pop
mov
jl
cltd
xor
inc
cwtl
dec
inc
sub
shl
jle
aad
or
pop
ficompl
imull
mov
xor
mov
insb
hlt
mov
cmpsb
and
aas
inc
aam
in
dec
out
xchg
cmp
enter
pop
xchg
mov
xchg
ds
loopne
xchg
xor
dec
out
mov
mov
sbb
dec
packsswb
call
xor
subb
scas
mov
scas
xor
jno
cmp
fmuls
xchg
stc
lock
cmp
xor
or
insb
and
jmp
jb
dec
adc
imul
jbe
addr16
push
mov
push
mov
leave
add
jmp
daa
pop
je
push
aas
and
and
pop
lret
lahf
pop
fwait
or
pop
insl
das
mov
and
xor
fisubrs
fs
mov
insb
jmp
inc
pop
pop
mov
in
dec
rcrl
pop
cmp
xchg
repz
sbb
jle
gs
jnp
nop
fs
popf
fwait
in
dec
rsqrtps
xor
stos
pushl
xor
call
mov
xor
pop
cltd
in
ja
lds
aas
rorb
cmp
js
dec
lahf
push
lret
sbb
and
jnp
add
add
fisubrl
enter
in
adc
inc
lahf
cld
pop
das
dec
fisubl
xchg
xchg
add
lds
insl
sarb
jg
icebp
cmpsb
scas
dec
push
insl
pop
orb
rcr
imul
pop
inc
loop
push
cmc
iret
pop
iret
scas
xchg
lahf
loope
jnp
fnstsw
jmp
add
adc
idiv
daa
xor
lcall
fiadds
mov
mov
ret
mov
xor
jbe
dec
xor
dec
outsb
add
pop
jl
xchg
enter
and
push
mov
cmp
andb
sub
lods
iret
xchg
jb
push
mov
or
pop
pop
xor
in
lret
iret
int
sub
push
daa
ja
or
lock
loop
and
pop
pop
aaa
fnstenv
pop
add
xchg
cmpb
aas
add
adc
cmp
pop
push
cmp
pushf
orb
loop
fnstcw
cmp
imul
or
aam
call
inc
aad
or
jno
jb
jno
jo
add
out
sbb
sub
xlat
je
xchg
jge
jl
fsubs
jns
fwait
jle
jnp
cltd
cwtl
mov
in
mov
inc
rcl
cmp
popa
sbb
xor
xchg
adc
pop
in
mov
ret
or
cmp
loope
and
sub
in
pop
andb
popa
into
xchg
jns
out
and
jbe
xlat
shlb
sbb
ret
xor
sbb
rorl
sub
fildll
pop
mov
pop
mov
mov
cmp
mov
nop
aas
add
cmc
xchg
and
lds
icebp
mov
jle
pusha
int
fwait
ss
adc
orl
pusha
sbb
sbb
mov
aaa
sbb
cli
ds
pop
int
iret
js
ss
idivb
outsb
fsubrl
orb
sub
mov
in
jb
fs
pop
xchg
shlb
push
adc
lods
mov
jp
int
cmpl
xchg
lea
dec
pop
arpl
lahf
lods
sbb
push
cwtl
mov
adc
enter
mov
cmc
jo
je
out
xor
and
cltd
sub
fs
js
pop
and
jle
cmp
int3
arpl
fldcw
push
test
stc
mov
add
mov
sahf
fwait
sbb
xchg
mov
ss
lods
cmp
rsm
lret
dec
dec
fsts
repnz
in
pop
push
fs
jge
xchg
daa
xchg
jp
adc
lods
xor
je
das
pop
pop
out
jns
push
sub
push
imul
add
or
or
repz
mov
cwtl
rcrb
sbb
dec
inc
push
call
xor
movsl
enter
in
pop
mov
test
add
aad
rolb
or
push
aam
test
push
sub
or
jns
addb
mov
xchg
repz
or
cmp
adc
mov
ss
movsb
mov
loope
int3
daa
imul
jle
dec
adc
nop
cmpsb
jmp
push
or
hlt
dec
mov
pop
adc
in
push
sub
inc
data16
orb
rcrl
push
pop
test
test
mov
es
sub
mov
jns
sub
jle
sub
cld
mov
cmp
dec
scas
test
js
mov
cmp
adc
data16
mov
stos
jle
ret
in
xlat
xchg
pop
inc
fstl
cmc
dec
xor
test
aaa
gs
and
cmp
and
out
popf
push
stos
pop
xchg
xchg
int3
push
cmp
fadds
mov
inc
pop
fnsave
test
call
bound
sub
jb
gs
les
and
jmp
jmp
sub
fcoms
mov
icebp
sbb
mov
xor
sub
sbb
adc
push
cmp
sbbl
mov
outsb
arpl
inc
cmp
pop
and
scas
or
or
xchg
fdivl
scas
mov
fisubrl
aaa
mov
push
mov
jmp
lahf
lods
fadd
rorl
adc
adc
xor
int
jp
fwait
mov
xchg
fistpl
pop
push
sbb
dec
aaa
fst
pushl
pop
mov
add
pop
cmc
imul
addr16
sahf
xor
sti
pop
mov
pop
dec
fs
out
or
mov
jecxz
ss
icebp
sahf
dec
dec
jmp
enter
lods
fnsave
sbb
incl
insb
pop
icebp
mov
std
sbb
lahf
je
mov
mov
mov
push
xchg
fnclex
push
cmp
sarl
pop
push
repz
jnp
iret
sbb
fdivs
loop
cmc
pop
ljmp
scas
push
sbb
push
jne
mulb
or
test
hlt
cmp
pop
mov
push
or
or
add
inc
dec
and
enter
les
lahf
out
pop
adc
mov
ss
add
jl
adc
cltd
mov
xchg
cltd
push
repnz
jo
mov
or
mov
push
push
enter
pop
mov
jp
repz
hlt
cltd
xor
cwtl
adc
inc
lret
jle
add
scas
push
cli
movsl
pop
jbe
ds
dec
or
incl
xchg
jnp
or
sub
test
mov
das
push
adc
xor
or
pop
aad
add
movsl
cmp
cmp
xchg
adcb
test
xor
incb
push
ss
xchg
xor
adc
pop
xlat
outsl
out
enter
call
push
jle
cwtl
xor
sti
xchg
and
loopne
fildll
pop
sbb
fdivr
mov
push
xlat
sbb
stos
jb
cmp
fstpl
sbb
mov
cli
and
sahf
push
mov
nop
test
sub
mov
out
sbb
clc
pop
lea
jle
mov
xor
mov
jbe
mul
adcb
test
add
mov
in
fdivrp
push
je
inc
jo
dec
sbb
ljmp
fidivl
cmpsb
mov
add
rolb
mov
fadds
lods
mov
je
and
push
insb
and
jb
jp
pop
xor
mov
aaa
mov
push
cmp
mov
je,pt
dec
and
xor
int
imul
mov
mov
sub
sbb
add
adc
imul
adc
fnstsw
dec
daa
lret
jg
fwait
mov
js
lods
sahf
outsl
jns
mov
xor
mov
inc
xchg
inc
jne
in
stos
sbb
jne
pushf
or
add
jmp
aad
mov
adc
addr16
jo
movsb
insl
rol
sbb
ss
gs
or
push
sub
jl
mov
jno
pop
add
aam
sarb
pop
sarl
js
inc
and
and
mov
arpl
dec
ret
movsb
and
rol
mov
lods
dec
outsl
cmpb
fadds
inc
test
push
loop
xchg
pop
cmp
js
test
loope
outsb
daa
sub
jb
ljmp
pop
cmpsb
mov
insb
pusha
int3
xor
in
push
loopne
cwtl
test
cmpsl
push
ffree
out
pop
jmp
adc
clc
lea
or
inc
lock
xor
scas
add
mov
out
pushf
push
test
sbb
in
add
loop
push
xchg
inc
pop
dec
sahf
insb
lods
ja
pop
int3
xchg
int3
push
jns
int
push
cmp
scas
je
iret
mov
xor
rolb
je
mov
xchg
or
inc
into
xlat
shlb
fsub
sub
roll
lahf
shrb
xchg
sub
push
mov
test
adc
sbb
mov
mov
mov
cmp
pop
das
sahf
neg
shl
scas
jno
mov
pop
push
loope
mov
popf
sub
pop
iret
xchg
fsubrs
push
cwtl
jno
scas
xlat
pop
iret
or
xor
cli
rorl
in
and
jb
xchg
dec
bound
mov
mov
xor
mov
lret
add
and
insl
xor
sub
repnz
arpl
gs
xchg
aad
mov
pop
push
dec
push
sub
or
sbb
hlt
sahf
pusha
aaa
jne
fcoms
adc
sbb
push
and
mov
dec
sbb
icebp
xchg
dec
sbb
daa
push
add
xor
dec
lock
xor
mov
xchg
lea
insb
mov
je
sub
das
or
int3
mov
loop
mov
andb
jge
add
mov
xchg
imul
fsubrl
outsl
jmp
int3
xchg
and
nop
jo
pop
dec
jmp
sbb
mov
test
hlt
push
push
hlt
or
xchg
mov
std
cmp
stc
lahf
iret
lock
pop
sti
ljmp
les
push
jmp
adc
inc
rcrb
push
mov
push
mov
ds
sub
data16
inc
fldz
jns
xchg
sbb
andl
das
cmp
jmp
cwtl
fnstenv
pop
jno
lods
jnp
mov
lods
ds
sbb
jne
sbbl
movsb
rcr
andb
jmp
mov
pop
dec
rolb
popl
xor
loop
xor
test
xorb
mov
aas
adc
pop
divb
lods
inc
cmp
fbstp
mov
or
sbbl
lods
xchg
push
imul
ret
add
mov
rcll
or
jle
pop
nop
sbbl
cld
jge
fsubrl
mov
lret
push
fwait
std
inc
scas
dec
xchg
jae
fnsave
mov
sbb
lahf
imulb
sti
and
test
pop
push
flds
inc
push
icebp
adc
cltd
xorl
mov
stos
ja
sahf
mov
enter
mov
dec
cmp
ja
les
ficoms
lds
push
orb
into
dec
mov
mov
inc
out
xchg
cld
mulb
lret
in
jno
cmp
inc
fldcw
cmp
push
sub
cld
add
gs
jnp
pop
mov
std
dec
stos
bndldx
mov
dec
and
scas
shll
xor
je
dec
jbe
jge
or
lods
or
je
xorl
leave
insl
hlt
push
repnz
fs
sahf
repnz
cmpsl
inc
sub
cwtl
xchg
push
out
inc
inc
jne
leave
inc
cmp
popa
pushf
sahf
ja
inc
mov
sbb
es
mov
popa
jl
mov
push
inc
dec
sub
pop
shrb
aas
xchg
mov
jle
push
adc
in
test
pusha
jns
fbld
movsl
es
cli
sub
testl
das
push
jae
sbb
add
cmpsb
xchg
push
add
sub
into
dec
and
shrl
and
mov
jp
les
in
mov
incl
mov
pop
add
into
jo
dec
ret
inc
out
and
shrb
leave
js
iret
in
dec
out
push
cmpsl
fstl
pushf
push
out
pop
mov
push
in
push
and
pop
adc
cs
sbb
mov
sbb
or
jmp
jge
test
mov
jmp
ret
and
push
xor
mov
out
insb
add
sbb
cmpsl
loop
xchg
nop
cld
cltd
scas
ljmp
stos
fldt
call
mov
mov
mov
sub
mov
bound
pop
inc
lcall
insb
rol
fsubl
inc
add
or
mov
inc
loopne
loop
stc
mov
movsl
inc
icebp
or
mov
or
cltd
idiv
icebp
pop
adc
sahf
sbb
cmc
loope
pop
fwait
mov
or
test
jecxz
push
dec
int
sub
add
pop
or
imul
jge
fdivrl
sbb
xchg
sbb
pop
xchg
xchg
xor
add
xor
shl
sti
adcb
mov
mov
push
out
aad
inc
fadd
inc
arpl
jbe
jl
addr16
jno
or
mov
pop
les
lcall
clc
ja
or
clc
xor
cld
add
mov
jb
adc
outsb
loope
or
mov
scas
mov
and
mov
sbb
add
pop
jmp
fwait
xor
xchg
jmp
movl
hlt
mov
add
sub
sub
xor
ss
rcrb
stos
in
mov
stos
dec
and
dec
cmp
xchg
dec
into
jo
jmp
sub
sbb
into
dec
js
sbb
jge
fidivl
cwtl
popf
mov
push
adc
in
andb
in
mov
arpl
xlat
repnz
mov
test
xor
fsubs
lret
xchg
cmp
into
sti
outsb
repnz
jns
mov
mov
mov
mov
mov
hlt
push
sarl
sbb
xchg
cmp
adc
mov
cmp
or
movsb
mov
cmc
push
ljmp
mov
aam
fistl
xor
ds
push
dec
pop
pop
enter
in
xchg
inc
xchg
repnz
rolb
lods
scas
push
into
stc
pop
test
cwtl
push
in
call
lcallw
mov
rol
loop
mov
inc
daa
inc
rcll
jg
cmpsb
sbb
ss
cmc
loopne
cld
dec
jo
add
jmp
mov
mov
xchg
test
add
nop
push
dec
cmc
test
fdivrs
jge
ficomps
ret
dec
fwait
push
mov
xor
pop
cmp
mov
push
cmp
arpl
jp
notb
fcompp
cli
std
or
pushf
mov
xchg
cld
aad
test
divb
sub
add
and
repz
insl
dec
fcomps
and
shll
xor
mov
addr16
lret
push
loop
or
cld
push
add
aaa
lcall
enter
mov
iret
add
in
adc
mov
in
insb
adc
loop
mov
mov
rcrl
sub
insb
pop
pushf
negl
scas
dec
in
mov
sbb
lods
add
repnz
lea
mov
je
add
cli
out
jo
mov
xchg
out
pmaxsw
orb
fisttpl
adc
jae
sub
orb
pop
cmp
mov
mov
mov
idivb
testb
scas
shl
rol
dec
xlat
shrb
sub
popf
push
dec
ret
pushf
inc
cmc
divl
aad
mov
daa
lret
mov
sbbl
sbb
mov
add
sub
jge
cmp
or
clc
push
fistl
scas
mov
cmc
jmp
fmull
mov
shll
ja
mov
xchg
ret
popa
jl,pt
jno
ds
popa
jp
bound
mov
movsl
out
sub
ja
sub
loope
mov
add
roll
movsb
jmp
xor
sub
cld
mov
out
sub
sbb
sub
lcall
jecxz
mov
xchg
jl
mov
aaa
inc
sbb
loop
clc
inc
inc
xchg
xchg
cmp
loop
cli
mov
je
pop
cs
inc
jne
mov
gs
or
pop
jmp
and
inc
icebp
ret
xorb
scas
es
in
inc
js
dec
ja
xchg
xor
jne
pop
mov
jg
lcall
loopne
shrl
cmp
pop
enter
cmp
lret
sti
add
cld
and
xchg
pop
fdivrp
int3
push
xor
fmul
sbb
movsb
je
inc
lock
push
inc
mov
lret
rclb
leave
mov
jecxz
les
and
jg
push
enter
pop
push
jb
xchg
sarb
das
xor
les
sbb
mov
ljmp
test
adc
push
mov
std
out
mov
popl
sbb
cltd
dec
pop
pop
add
add
xor
push
mov
scas
mov
dec
sub
scas
mov
subb
jns
sti
lret
ljmp
ds
mov
and
jne
jb
clc
les
lcall
xchg
push
xchg
xchg
xor
lods
and
mov
adc
out
or
push
dec
push
stos
jle
dec
in
repz
jo
or
imul
mov
fstps
jl
push
cmp
xchg
daa
mov
fidivrl
mov
cmc
fs
pusha
jecxz
xor
xor
sub
popf
dec
loop
cli
stc
push
lods
push
dec
xor
stos
and
fimull
pusha
rol
or
mov
and
rcrb
jnp
lock
add
push
dec
dec
and
out
xor
xor
fimull
je
or
es
pop
or
psubq
fimuls
imul
pop
imul
jbe
jnp
test
jae
out
xchg
mov
xchg
test
in
dec
mov
sub
or
sbb
xor
push
loopne
cmp
fsts
pushf
xor
pusha
add
sbb
push
stc
mov
or
insl
icebp
sbb
popa
inc
jg
pushf
test
mov
jns
loope
lods
xchg
xor
arpl
xor
addr16
mov
inc
mov
outsl
test
add
sbb
inc
in
sbb
adcl
sbb
fwait
cmp
mov
or
or
mov
sub
setne
mov
je
jecxz
imul
jbe
mov
mov
icebp
out
mov
pop
les
iret
mov
pop
and
jmp
xlat
mov
int3
cltd
cltd
loope
stc
add
fdivl
inc
cli
xor
loop
loope
popf
iret
pop
popf
xchg
jae
add
dec
pusha
pop
mov
inc
mov
sarl
aad
pop
dec
adc
clc
cmp
es
or
pop
dec
in
ficompl
jle
in
mov
xchg
lods
mov
push
test
or
cwtl
call
cmc
mull
sub
push
jo
pop
jo
sub
xor
into
outsb
cmp
xchg
xor
int3
mulb
popf
rorb
cmpb
jb
mov
pop
ja
add
mov
cs
dec
dec
inc
pop
int
std
lret
fildl
push
xchg
cli
lcall
lret
sub
push
push
inc
sbb
or
pop
fadds
sbb
or
push
xchg
cmp
cli
stos
pushf
mov
mov
leave
mov
cmp
ja
push
outsb
test
cmp
inc
fdivl
cmpsb
cld
scas
out
sbb
push
shl
xchg
scas
sbb
jp
lds
jp
mov
mov
js
jge
ljmp
jecxz
push
mov
adc
cmp
sub
adc
stc
in
in
jno
mov
push
or
imulb
jmp
mov
test
fcoms
out
jge
push
gs
mov
xchg
adc
out
sub
or
imul
clc
ja
retw
jl
repnz
rcll
and
xlat
sbb
loopne
mov
cmpsl
stos
cmp
scas
int3
xchg
jae
dec
and
jo
pusha
aad
test
loope
ja
jle
fisttpll
js
add
aad
in
scas
mov
test
xchg
addr16
enter
jg
pop
mov
daa
int3
pop
and
cmc
add
cmp
lods
test
lret
sub
sub
inc
das
dec
lock
loop
jbe
testl
sbb
aad
fstpt
inc
mov
sbb
sub
cmpsl
jne
xchg
nop
xchg
add
cmp
adc
jnp
fnstcw
es
cmpsb
sbb
movsl
adc
xor
xchg
push
popf
pop
pushf
imulb
orb
xor
out
je
scas
dec
xchg
in
subb
push
adc
cmp
xor
push
adc
mov
mov
add
mov
dec
jno
cwtl
fisubs
stc
aas
das
mov
cmp
imull
fisubs
xlat
mov
xchg
loope
inc
icebp
pusha
inc
push
push
sbb
stc
stc
imul
outsl
cltd
sbb
test
mov
repnz
sahf
cmp
out
in
ja
nop
mov
mov
stos
or
inc
repz
ret
mov
xchg
out
lock
sbb
xchg
push
jge
mov
clc
mov
mov
rolb
repz
xchg
lea
add
lcall
mov
test
adc
jg
les
dec
fs
mov
in
cmp
dec
lds
push
or
fdivl
fldenv
aad
std
xchg
pop
mov
clc
mov
sarb
lods
jg
clc
jp
push
ret
mov
mov
call
push
cli
hlt
aad
push
mov
cmp
or
and
aad
dec
shrl
xchg
sub
jp
iret
lods
outsl
aad
stc
push
rcrl
subb
and
inc
adc
in
push
cmpsl
rclb
fcompl
mov
dec
insb
rolb
mov
faddl
jne
aaa
sbb
clc
mov
xchg
pop
cmpsb
jne
mov
in
add
jnp
loope
das
adc
cmp
or
adc
int
insb
dec
pop
mov
dec
stc
lret
imul
and
mov
pop
out
fs
les
in
mov
fnstcw
cmp
cmc
cld
push
movsl
rclb
iret
loop
jns
aam
mov
cs
incl
fimull
ret
push
mov
add
mov
adc
test
aaa
fisttps
mov
jnp
cmp
out
imul
out
fs
and
popf
pop
mov
mov
and
jg,pt
xchg
in
inc
mov
fildll
mov
addr16
ret
lret
dec
push
mov
mov
jb
pop
ja
push
and
fcoml
mov
sti
mov
mov
hlt
jbe
inc
mov
adc
pop
iret
mov
mov
add
sbb
jb
add
mov
data16
shlb
aas
mov
bound
in
push
jne
insl
xor
xlat
adc
sarb
mov
addr16
jmp
fwait
xchg
xlat
mov
bnd
aad
shlb
mov
or
add
add
out
mov
movsb
jge
cs
jae
fbld
lret
pop
sbb
push
pop
mov
test
loope
fldt
fisubrs
xor
aad
push
in
mov
cmp
adc
sbb
xchg
inc
std
add
neg
xlat
test
scas
mov
mov
adc
das
lods
rol
adc
inc
in
xchg
lret
dec
dec
out
std
pop
rclb
gs
xchg
add
xchg
stos
push
adc
mov
mov
mov
scas
daa
mov
add
shl
aas
and
add
mov
or
iret
mov
test
and
xor
lret
lcall
cmc
inc
imul
pop
push
jns
or
hlt
lahf
sbb
mov
ret
dec
mov
divl
xchg
add
or
xchg
add
mov
push
mov
rcl
mov
xchg
and
push
jge
ljmp
inc
cmp
div
xchg
jb
dec
mov
xor
ficompl
outsl
movb
stos
dec
jle
and
fisttpl
pop
push
pop
mov
dec
cmp
cmp
jmp
mov
int3
lret
lret
mov
adc
andb
mov
jae
mov
jp
jl
addl
lds
pushf
imul
idivl
ds
dec
cmp
je
imul
jg
mov
push
mov
lods
adc
mov
xor
xchg
and
inc
pop
pusha
xlat
ret
test
add
and
add
cmp
push
repnz
sbb
rorl
arpl
repz
movsb
imul
add
xchg
imul
aam
arpl
cli
mov
sub
popf
arpl
mov
hlt
test
cmpsb
xchg
fistps
out
dec
pop
mov
aam
dec
test
hlt
aad
sub
xor
or
adc
movsb
and
add
cmp
ret
rolb
pop
adc
bswap
add
fistl
mov
push
inc
rcr
xor
in
outsl
fsub
xchg
nop
cmp
repz
fcompp
fs
les
icebp
mov
adc
fs
or
add
mov
bound
gs
dec
repz
mov
xchg
cmp
cli
stos
daa
inc
lods
pusha
das
pop
int3
call
xchg
dec
aam
sub
xchg
or
call
cmp
addl
daa
fwait
mov
mov
inc
loopne
and
fcoml
das
sbb
sti
sbb
sub
sbb
cmp
cli
decb
mov
adc
jp
adc
inc
hlt
inc
arpl
sbb
jl
pop
aas
cmp
or
push
mov
ror
test
int
dec
test
cmp
outsl
push
aas
and
ret
and
sub
add
mov
or
add
loopne
jnp
push
mov
dec
or
dec
inc
fldt
cwtl
dec
fstl
pop
out
das
pusha
data16
loopne
je
push
scas
cmpl
outsl
loopne
stos
xchg
fwait
icebp
adc
cmp
loop
sub
and
and
rcrl
jns
pop
add
das
test
clc
rolb
cmpb
imul
fwait
lods
cmpsb
push
adc
cmp
mov
pop
imul
add
divl
iret
and
xchg
mov
jmp
daa
clc
xchg
jnp
imul
pop
mov
dec
cmp
aaa
add
addl
cmp
sbbb
jmp
std
les
xor
pop
dec
xchg
test
rcll
mov
inc
add
sbb
jg
addb
cwtl
rcrl
popf
fstl
pushf
dec
jge
popa
mov
and
stos
jb
jae
jmp
add
sub
call
lods
cmp
shl
fwait
and
nop
mov
fs
shll
fnstenv
jae
test
aas
pop
sbb
sub
bound
arpl
je
jp
scas
scas
repnz
xchg
pop
inc
nop
cli
mov
icebp
fcomps
arpl
ret
std
rcr
xor
loope
ret
movsl
nop
es
lods
rclb
sub
xchg
std
in
leave
aas
push
pop
push
outsb
jle
jecxz
or
lret
push
adc
fwait
imul
mov
hlt
and
ret
je
inc
or
test
int
aaa
mov
cli
in
ds
je
pop
fwait
push
shlb
rcll
mov
pop
imul
pop
and
fcoml
outsl
adc
fsubr
inc
ret
scas
aaa
test
mov
inc
cmp
cwtl
ja
mov
inc
sti
or
scas
aam
mov
filds
and
movsb
sbb
mov
dec
out
pusha
std
bound
xor
aaa
clc
and
lret
ja
jg
rorb
cmp
shr
sbb
sbb
ds
ljmp
pop
lods
inc
inc
jnp
dec
imul
shr
push
mov
movsb
dec
inc
fwait
pop
xchg
and
inc
xchg
xor
out
push
adc
xor
leave
mov
movlps
repnz
inc
popa
mov
aas
cmp
je
cmp
push
out
std
add
in
lar
cs
arpl
and
out
push
repnz
lods
cmp
loopne
xor
jge
dec
pop
fimull
add
inc
mov
into
nop
in
ja
packuswb
push
das
stos
and
lret
add
pop
sbbl
dec
out
pusha
popa
lcall
and
jnp
icebp
sahf
or
jp
xchg
xchg
lcall
icebp
xor
xor
or
jmp
cmp
mov
sysenter
inc
or
sub
xrelease
add
movsb
out
sbb
fsubs
dec
gs
sub
jbe
mov
and
or
aad
xlat
ljmp
mov
adc
bound
push
push
pop
inc
push
jp
bound
lods
test
adc
dec
loope
nop
test
jge
mov
out
rcll
pop
fdivr
stc
push
lahf
or
add
fwait
negb
stc
cwtl
in
dec
add
add
jl
das
popf
mov
mov
push
xchg
popf
scas
loopne
pop
sarb
cli
scas
inc
fwait
in
lret
sub
ss
sarl
ljmp
leave
push
adc
cmp
shlb
out
out
push
ret
addb
jo
daa
jmp
out
push
scas
in
xchg
mulb
testl
jp
inc
mov
sbb
das
xchg
inc
aam
in
outsb
data16
mov
mov
fldcw
nop
pop
test
js
cmpb
fsubrs
push
in
inc
mov
movsb
ss
cmpsl
adc
or
in
push
int
adc
mov
push
push
push
cld
sbb
icebp
sbb
stos
mov
sub
rorb
dec
mov
pop
loope
xchg
xchg
test
nop
dec
cmp
xor
mov
mov
cmp
cwtl
dec
rorb
sbb
push
lcall
sti
xchg
pop
inc
aaa
add
adc
cmp
int
cmp
pop
test
inc
push
push
loope
inc
enter
and
insb
xor
sahf
jge
in
sbb
lret
cmp
repnz
mov
jmp
mov
scas
jb
pop
out
jmp
stc
cmp
lcall
orb
outsb
int3
mov
push
cmpsb
sub
je
shll
test
mov
fs
push
adc
insl
out
xchg
xchg
les
jo
sub
sub
test
fcoml
rolb
add
mov
imul
dec
pop
jmp
xchg
fwait
mov
xor
shl
ljmp
shll
cmp
xchg
xor
fsubr
and
adc
xorb
insb
dec
mov
loope
in
idivb
lock
xchg
ljmp
cmp
xchg
pop
je
pop
les
mov
xchg
adc
insb
rol
sbb
xor
push
pushl
and
mov
or
add
mov
fiadds
inc
pop
cmpsb
sbb
ja
sub
cmpb
pushf
movsl
andl
data16
fcompl
lock
fcomps
test
push
flds
jae
or
mov
outsl
xchg
jge
push
mov
test
sub
pop
xor
or
aam
xchg
ljmp
mov
jo
dec
repz
jbe
rorb
cwtl
loope
imul
neg
jbe
into
nop
adc
lret
mov
add
push
push
fisubs
testl
cmpsl
in
inc
jo
jb
loop
rcrb
push
mov
mov
cwtl
sbb
rdpmc
add
ret
mov
testl
inc
lods
and
movsl
dec
dec
pop
jb
test
test
ret
pop
or
dec
fwait
cmp
pop
in
divb
repz
retw
lods
shlb
sub
out
xchg
mov
dec
inc
mov
push
pushf
sahf
sub
mov
mov
int
andb
jecxz
sub
inc
rolb
fidivl
ds
lock
adc
cmp
in
or
insb
sub
mov
xchg
out
fwait
or
sub
pop
cmpsl
out
out
shlb
inc
mov
mov
fisttps
imul
cmp
stos
int3
inc
icebp
mov
movsb
push
cmp
cwtl
cmp
push
das
jb
ficoml
xor
push
pop
fadd
xchg
ja
and
sub
jb
or
inc
jge
pop
or
out
pop
dec
aam
mov
jle
pop
mov
adc
js
sti
xchg
daa
mov
cld
mov
pop
notb
iret
add
ficoml
or
test
jl
pushf
dec
dec
cwtl
addr16
push
popf
jae,pn
cli
addr16
cmp
flds
out
xchg
iret
jp
jbe
push
jns
out
push
movsb
aad
jp
xchg
xchg
data16
test
jmp
mov
xchg
into
stos
jae
mov
test
and
outsb
sbb
test
inc
mov
fidivs
mov
add
xchg
dec
in
push
mov
loopne
inc
jae
out
push
mov
push
xor
lock
daa
push
repz
pop
ds
lea
add
mov
loope
inc
sub
test
inc
cmp
lods
inc
pop
pop
lea
aaa
loope
mov
inc
icebp
inc
mov
shll
sub
out
pop
mov
aaa
or
jl
rorb
sub
jb
sub
sbb
push
pop
xchg
int
dec
mov
pusha
out
mov
pop
pop
mov
loope
lods
inc
fldpi
mov
subl
sbb
movl
aas
jns
xchg
jno
icebp
pop
es
repz
lods
jle
pop
aaa
and
dec
leave
in
xchg
insl
inc
inc
pop
pop
xor
mov
pop
sbb
add
xor
addr16
xorps
call
rcrl
pop
loopne
repz
xchg
sahf
and
or
sbb
pop
jmp
inc
sub
xchg
ja
mov
jl
loopew
movsb
nop
pop
xor
nop
dec
sub
jg
mov
divl
or
aam
jge
jb
sub
cmp
jmp
sub
or
out
outsl
jno
leave
in
dec
jnp
xor
test
dec
sbb
adc
stos
xor
cli
adc
sub
aad
aam
xor
cmp
xor
mov
cmpsb
mov
or
push
pop
jns
icebp
mov
cmp
int3
jl
pop
cmp
or
cmp
fstps
aas
lock
notb
jp
jecxz
cs
mov
jmp
movsb
mov
sbb
pusha
add
cwtl
mov
push
jns
fs
xchg
sbb
scas
dec
mov
xchg
into
pusha
out
or
jl
jg
out
mov
xchg
aaa
lods
mov
mov
ss
pushf
mov
mov
lcall
sub
imul
stos
sub
ret
mov
addr16
test
stc
pop
jo
jbe
shll
push
test
cmp
aaa
xchg
stos
stos
movsb
popf
scas
in
aam
sbb
movsl
mov
jmp
into
add
into
sbb
and
jne
jl
cs
xor
mov
out
andb
xor
shlb
in
pop
outsl
and
or
pop
mov
daa
adcb
dec
andb
push
adcb
or
cmp
shrd
add
push
pop
shll
mov
jecxz
scas
push
hlt
push
sub
movsl
sub
rcr
add
xor
sbb
inc
push
and
push
pop
movsb
push
loop
hlt
push
into
imul
mov
xor
mov
sti
loop
lret
shlb
adc
shrl
out
aam
seto
jge
xchg
popa
outsb
dec
lret
xchg
test
mov
fisubrs
clc
push
ficoms
push
mov
aaa
mov
pushf
mov
ret
and
scas
shl
outsl
mov
pop
scas
jge
push
out
sbbl
stos
stc
in
das
aaa
add
mov
push
lret
call
mov
icebp
xchg
pushf
push
rcr
xchg
test
jno
div
jno
outsb
cmp
mov
leave
loop
addr16
lods
lret
je
idivl
iret
outsb
mov
fadds
nop
pop
sbb
jae
jo
jle
pop
ret
lods
mov
inc
stos
imul
mov
push
inc
and
fiaddl
jge
cmp
sub
xor
dec
xlat
sbb
jne
pop
push
inc
rolb
bswap
mov
lcall
push
mov
push
pop
cmp
addr16
hlt
dec
cmp
das
sbb
into
push
ljmp
adc
fbld
daa
jle
xchg
cmc
or
xor
sbb
dec
jmp
pusha
les
mov
inc
mov
gs
inc
test
sbbb
adcl
fldcw
adc
dec
dec
sub
mov
mov
ficompl
mov
jo
es
popa
dec
movsl
sub
and
shlb
lahf
cltd
imul
out
xchg
xchg
add
adc
add
data16
fistpl
andb
jmp
push
push
xchg
jne
rclb
mov
dec
shrl
mov
cmpsb
aam
pop
push
sub
cli
pop
and
xchg
adc
inc
xor
sub
mov
sub
mov
daa
dec
scas
frstor
sub
add
xor
add
jnp
cs
stos
xchg
xor
cmc
inc
loope
sbb
jmp
pop
mov
and
jno
fistpl
or
jl
es
adc
sub
lods
out
cltd
pop
gs
ss
xor
mov
push
dec
test
lea
scas
sub
loope
cwtl
fcomps
fildl
scas
pop
jns
xor
icebp
mov
das
dec
into
xlat
dec
push
inc
sbb
daa
sbb
mov
roll
lret
or
cmp
mov
xlat
or
scas
jle
cwtl
cld
mov
fiadds
push
pusha
movsl
int
out
or
jno
call
pop
xor
or
inc
shlb
mov
pop
pop
mov
and
sbb
sub
pop
subl
mov
in
movsb
insl
ljmp
push
xor
icebp
push
int
adc
inc
ss
mov
jb
cmpsb
xchg
mull
pop
jno
xchg
adc
nop
fnstenv
ja
rol
repz
inc
lret
call
fcmove
popa
jmp
sarb
call
ss
xchg
jae
in
pop
sub
adc
mov
fwait
dec
mov
add
mov
in
gs
or
xchg
cwtl
xor
cli
clc
jp
cmp
loopne
jno
outsb
sahf
into
push
push
and
mov
cmp
mov
sbb
dec
dec
inc
jnp
add
jl
pop
loope
inc
add
shl
xchg
or
adc
rorl
outsb
cmpsb
imul
popf
aam
pop
push
leave
outsb
adc
stc
loopne
dec
cmp
test
inc
inc
mov
lock
and
cmp
push
nop
inc
add
dec
outsl
xorb
jb
js
dec
pop
fwait
xchg
je
ds
jae
je
jp
dec
push
mov
iret
mov
fsubrl
mov
rcrl
inc
loopne
cmp
scas
and
jns
outsb
mov
ret
movsb
imul
jae
les
mov
in
arpl
mov
mov
imul
rcll
inc
jle
outsl
jp
repnz
ds
mov
or
xchg
inc
cmp
fwait
xorl
sbb
mov
scas
xchg
jbe
es
stc
scas
push
shrl
xor
pop
cmp
mov
aaa
and
je
mov
mov
push
adc
pushf
jbe
clc
fwait
or
frstor
test
mov
testb
ss
add
dec
inc
in
lds
roll
sbb
aas
xchg
xor
test
lods
stos
sbb
out
mov
pop
lods
lods
pusha
in
mov
adc
sub
pop
stos
mov
icebp
les
imul
or
test
mov
and
popa
push
cmp
mov
cmpsl
add
mov
sub
testb
mov
push
ficompl
loopne
xchg
mov
or
add
push
fwait
leave
jo
jae
adc
jle
dec
sbb
sti
nop
xchg
push
jg
leave
lea
or
dec
mov
aam
lret
mov
iret
addr16
inc
mov
jmp
and
push
adc
repz
gs
out
cmp
scas
or
call
loop
jnp
add
sbb
xchg
dec
cmp
notb
lret
ror
cli
and
push
out
add
inc
fimuls
cltd
sub
pusha
fwait
push
out
cld
andl
xchg
mov
outsb
jp
cs
add
lds
and
sti
icebp
iret
mov
popa
scas
insb
addb
inc
popf
mov
ret
push
jb
dec
gs
cld
sahf
mov
inc
pop
dec
add
xchg
jecxz
mov
mov
addr16
jbe
or
cmp
test
jmp
pop
fbstp
out
mov
add
pop
jnp
push
andb
pop
jg
push
ss
out
call
insb
stc
add
pop
adcl
mov
mov
inc
sbb
int3
pusha
popa
inc
popf
mov
enter
sbb
es
aad
in
lahf
out
mov
push
cmpsb
cs
dec
das
loope
clc
in
inc
xchg
leave
nop
adc
incl
imul
les
sbb
ljmp
popa
sub
addr16
stos
push
pop
dec
pop
dec
js
ss
test
xchg
fisttps
inc
mov
sub
adc
jp
outsl
in
ds
nop
push
mov
hlt
loop
or
stc
mov
push
and
sub
scas
jmp
mov
adc
mov
mov
orl
in
fmull
fldcw
imul
fwait
or
cmp
mov
out
push
andb
into
xchg
or
adc
test
inc
xor
xchg
mov
or
push
dec
xorl
add
jecxz
mov
jg
xorl
pop
mov
ja
mov
into
push
ror
das
adc
in
mov
jge
mov
or
sti
test
jge
mov
adc
lods
arpl
ret
xchg
pop
bound
call
mov
push
cmc
mov
dec
jae
dec
jo
adc
outsb
scas
pop
stos
dec
int
jecxz
mov
hlt
or
pop
les
je
dec
dec
xor
inc
cmpl
mov
inc
repz
imul
inc
imul
addr16
lret
mov
out
icebp
xor
orl
out
cld
sbb
xor
push
mov
ret
cmp
adc
push
jecxz
sarb
mov
cli
mov
cmp
push
mov
add
mov
pop
fdivl
add
inc
xchg
push
dec
imul
cli
aas
gs
in
xchg
mov
ret
lcall
test
orl
in
push
dec
pop
les
or
jmp
movsl
add
inc
sbb
cmp
lock
pop
insb
dec
xchg
ss
xchg
paddq
fstpl
mov
push
int
add
insb
inc
mov
hlt
in
movsb
jp
xchg
cmpl
xor
mov
and
mov
xchg
cld
mov
jno
pop
out
mov
dec
testl
cmc
mov
lods
and
test
fwait
stc
mov
xchg
jge
stos
add
add
add
mov
jbe
int
repz
outsl
hlt
pop
data16
ljmp
and
mov
fnstsw
pushf
adc
stos
imul
test
mov
insb
and
sbb
loope
ret
inc
push
gs
popf
mov
sahf
pop
sub
adc
inc
xchg
xchg
pusha
inc
dec
lock
jbe
lfs
test
lret
stc
push
std
inc
xchg
movl
pushf
mov
notb
mov
sbbb
adc
fidivs
gs
ficoml
aam
add
mov
and
and
pop
aad
or
cmp
mov
push
mov
xchg
mov
push
int
xor
push
jmp
adc
lods
inc
pop
pop
popa
sbb
movsb
mov
and
ja
icebp
insl
cmp
mul
jmp
popa
sahf
out
mov
push
fcmovbe
aaa
xchg
mov
xor
ljmp
dec
and
ja
stc
sahf
jmp
hlt
test
hlt
mov
xor
mov
hlt
adc
mov
jg
cmp
pushf
fdiv
xchg
cmp
aaa
fsts
cmp
sbb
adc
and
je
mov
ret
flds
xchg
mov
mov
push
pop
adc
bound
mov
pushf
out
sbb
xchg
pusha
xor
adc
xchg
inc
addr16
inc
inc
movsb
push
mov
xchg
inc
xchg
jl
xchg
loope
fnstcw
int3
dec
xor
sub
fsts
inc
bound
xorl
stos
outsb
and
cmp
jl
test
or
sub
or
mov
arpl
lcall
mov
test
daa
in
dec
fnstsw
shrl
repz
insl
pop
sbb
mov
sub
dec
add
pop
push
mov
imul
and
clc
jmp
mov
lret
mov
jne
lds
push
mov
enter
shr
mov
jo
pop
adc
add
jmp
jmp
xor
inc
add
enter
cwtl
shlb
adc
mov
cmp
out
xchg
inc
ja
dec
xor
ljmp
sbb
cli
loope
enter
pop
scas
lds
push
adc
inc
sbb
add
iret
xchg
lock
dec
xorl
sti
out
or
cs
mov
dec
andb
inc
inc
sbb
jo
mov
aas
mov
dec
out
cwtl
cmp
push
scas
sbb
xchg
das
outsl
subb
mov
cmp
or
popf
hlt
pop
cmp
mov
xor
nop
aad
fdivrp
popf
lods
adc
jns
sbb
xchg
pop
leave
dec
dec
ficoms
mov
stos
mov
adc
xor
mov
jnp
outsl
pop
cmp
mov
or
mov
add
sub
nop
repz
mov
loope
int
icebp
xchg
adcb
fneni(8087
sbb
mov
cltd
sub
dec
mov
jle
pop
loop
xor
ss
add
stos
jmp
jl
daa
pop
ret
imul
cwtl
push
mov
stc
scas
out
mov
sbb
pop
add
cmpl
stc
inc
into
push
negb
inc
and
lds
aad
out
add
mov
push
jle,pt
inc
add
xor
cmpsl
lods
insl
xor
xchg
xor
addr16
sbb
arpl
int
lods
repnz
je
ja
lock
ss
and
xchg
inc
decb
xchg
lds
xchg
rolb
jns
xor
movsl
xchg
sbb
mov
mov
out
lcall
fistl
mov
xchg
rcrb
shlb
jne
adc
xor
cs
mov
pop
adc
dec
gs
pop
sti
sbb
das
add
movsb
add
mov
sub
imul
sub
add
daa
or
sti
subl
inc
cmpl
sub
dec
or
imul
jne
aaa
mov
xchg
dec
ljmp
iret
inc
cwtl
jg
bound
add
aaa
cwtl
cmpsb
push
fcompl
incl
test
cmp
aaa
sbb
xchg
mov
sar
and
je
xlat
cld
inc
add
movsl
cs
pop
sub
cmp
loope
push
orb
push
xchg
xor
dec
ret
jg
cmp
dec
jecxz
push
mov
test
mov
stc
pop
xlat
mov
mov
xor
push
cmpb
arpl
pop
fsubl
cs
mov
mov
imul
movsb
adc
or
out
push
sahf
push
or
mov
jne
fnstenv
pop
xor
jl
stos
mov
xchg
cld
xor
int
push
sub
sub
xchg
add
cmp
std
cmpsb
lds
inc
mov
adcb
pop
test
add
inc
ljmp
fdivs
push
les
movsb
sub
outsl
pusha
call
fstl
out
sbb
xchg
mov
shrb
push
add
add
jno
xor
enter
lock
sub
pushf
out
testl
clc
test
push
jle
les
sub
int3
inc
shlb
mov
test
aad
push
cmp
pop
leave
ror
in
stc
sub
lret
xchg
addr16
and
das
mov
loopne
sbb
popa
pop
add
gs
cmp
push
jp
fxch
add
pop
jb
repnz
fldt
inc
sub
jle
and
push
filds
movsl
pop
cld
pop
rorb
xchg
adc
push
enter
and
mov
xchg
sbbl
xchg
aaa
pop
int
dec
sbb
jl
mov
in
mov
pop
xchg
insl
addr16
push
add
lds
cld
cmp
aaa
pop
sbb
mov
pop
popf
sbb
or
scas
jbe
pusha
out
jg
data16
cmp
je
cmp
arpl
xchg
jno
jne
and
xchg
xor
fs
loopne
stos
je
loop
xchg
dec
movsl
sub
movsb
mov
jns
je
daa
jo
push
push
cmpsl
inc
cld
jns
sbb
pop
test
jo
xchg
stos
ja
pusha
arpl
dec
lret
add
xor
dec
cmp
or
sub
jg
sbb
insb
mov
es
dec
mov
push
rclb
dec
jge
push
clc
sub
mov
iret
add
add
push
outsl
dec
inc
addr16
push
subl
add
mov
mov
dec
rol
pop
push
push
fwait
dec
jnp
dec
fdivr
push
ficompl
sub
imul
mov
bound
xlat
jg
ja
pop
push
add
push
mov
mov
adc
pop
out
shrb
and
push
in
inc
popa
mov
nop
adcl
stos
jno
cmp
push
in
add
hlt
jmp
inc
movsl
dec
aas
mov
call
ja
rorb
lahf
sbb
pop
sbb
or
aas
push
in
mov
int
lods
push
lahf
pop
test
pop
xor
mov
mov
xor
jne
das
mov
push
inc
xor
hlt
cmc
addb
lods
fdivrl
mov
mov
stos
rclb
or
sub
or
inc
add
push
ret
mov
ja
inc
pop
lock
imul
jl
inc
jg
mov
cmp
aad
out
dec
je
mulb
cmp
xor
sbb
dec
jg
pop
inc
loopne
cmp
div
or
loopne
sub
pusha
pop
push
xor
xchg
or
fucomp
lock
jle
pop
jne
mov
js
cmpsb
das
pop
dec
push
add
pop
xchg
inc
insl
jmp
inc
ret
rorl
insl
andb
inc
pop
leave
adc
push
pop
js
pop
cmp
pop
mov
cli
mov
mov
mov
mov
fsubl
inc
bound
out
js
cmp
xchg
push
push
dec
sub
sub
cmpsb
hlt
and
in
ret
in
lcall
roll
xchg
inc
pop
mov
inc
mov
push
cld
mov
mov
push
in
lods
loop
popa
ret
int3
ss
imul
dec
push
out
xor
cmp
push
xchg
cmp
sbb
clc
add
pop
dec
lods
fdivrs
pop
sahf
push
xor
or
push
adcl
push
shrb
sbb
repnz
rcrb
xchg
jno
fwait
getsec
mov
cmp
push
pop
cmp
lret
pusha
or
push
imul
lea
sbb
mov
xor
xor
call
gs
out
push
iret
adc
shll
lock
aaa
cmp
jecxz
fmuls
and
lods
inc
xor
xchg
mov
lods
push
rclb
inc
aad
fidivl
push
sbb
stc
sub
sub
cmp
or
xlat
mov
jp
cmp
xorl
pop
lea
scas
enter
mov
outsb
and
test
cmp
sub
dec
loopne
jns
cmp
int3
inc
cltd
mov
jge
cltd
test
scas
mov
add
arpl
add
int
rcrb
dec
mov
lahf
imul
push
xor
add
mov
pop
mov
dec
add
dec
aad
bound
js
outsl
mov
aaa
stos
push
xor
pushf
adc
push
cmpb
xchg
ds
repnz
sub
imul
dec
test
mov
push
fucom
inc
rcrl
and
outsb
push
std
push
test
push
arpl
inc
add
in
lds
ljmp
adcb
mov
mov
sbb
lea
xor
dec
test
mov
enter
pop
subb
or
and
je
xor
inc
aad
xor
out
push
std
pop
cmp
cmpsl
mov
push
scas
data16
imul
and
test
sbb
mov
jb
fwait
adc
roll
stos
push
mov
sahf
mov
or
out
fstpt
stos
lods
in
mov
loopne
out
sti
es
mov
pop
jl
dec
dec
jp
lcall
mov
add
pushf
cli
imul
jmp
orl
or
mov
mov
sbb
aas
dec
jecxz
adc
out
mov
add
ss
cmc
clc
adc
cmp
call
insb
jg
pop
dec
or
aad
sbb
aaa
xchg
inc
xor
push
cltd
in
fwait
scas
cmc
stos
jb
sarb
js
pop
mov
icebp
mov
aam
outsb
xor
test
xor
inc
lahf
jnp
mov
add
add
cmp
outsl
or
push
loopne
int3
sub
das
in
shlb
fcompl
mov
push
lods
in
out
mov
push
pop
pop
imull
dec
dec
scas
jle
mov
aam
ja
je
jp
insb
adc
sbb
cwtl
or
mov
inc
add
ret
inc
mov
loop
std
cltd
cmp
mov
mov
inc
xlat
jge
daa
lock
mov
out
ss
jnp
adc
ret
loope
mov
mov
jno
bnd
and
and
js
cli
jmp
jbe
fsubrs
enter
jge
mov
sub
in
sub
movss
pop
mov
mov
sti
pop
push
sub
or
ret
aas
mov
dec
movsl
fnstenv
loopne
imul
mov
imul
add
sahf
add
and
cmpsl
adc
adc
data16
mov
fstpl
xchg
in
add
and
dec
leave
or
testl
jl
cmp
sti
daa
adc
popa
lock
inc
lock
xlat
aam
daa
call
sbb
in
jns
mov
je
xchg
inc
notl
movsl
sbb
clc
arpl
or
repnz
ficompl
adc
mov
mov
fistps
add
adc
fldenv
push
lods
push
nop
add
nop
sub
inc
inc
sbb
xor
test
outsb
nop
fisubl
mov
lahf
mov
and
sub
sub
mov
into
test
sbbl
jmp
or
popf
das
add
mov
daa
fistpl
iret
pop
arpl
add
mov
dec
std
js
cmp
dec
jle
jne
xor
cli
sbb
jo
sar
or
insb
sti
mov
or
popf
std
call
icebp
das
push
pop
pop
es
ret
addr16
xchg
clc
ja
add
loope
jl
cmp
rcll
mov
testb
sbb
jns
and
sbb
stos
pop
mov
push
jnp
arpl
lea
fstl
dec
push
sub
stos
jb
jo
mov
dec
nop
mov
or
scas
cltd
push
enter
add
dec
or
push
jg
push
out
outsb
push
aad
add
fcomip
push
out
push
aad
into
or
shlb
int3
loope
aad
ss
scas
mov
lea
test
les
push
fistps
sub
ds
in
outsl
or
sbb
into
mov
xchg
push
out
stos
fcmovb
push
push
mov
cmp
rcr
xchg
in
jg
vpcmpeqb
mov
pop
ljmp
xor
jae
aam
fistpll
sar
dec
cld
cmp
push
mov
outsb
iret
inc
inc
or
pop
iret
int3
cld
mov
jecxz
lea
scas
shll
mov
jp
or
inc
push
sub
loope
clc
push
push
xchg
push
jno
aam
out
fmull
push
inc
out
pop
mov
addr16
pop
bound
pop
fsts
ret
inc
mov
dec
pop
xor
or
dec
push
push
jg
push
rcrb
fisttpl
inc
sbb
call
mov
mov
mov
pop
mov
popf
loope
rorb
dec
hlt
dec
push
scas
mov
sub
jae
arpl
das
insl
xchg
shl
jbe
nop
rcl
js
bound
adc
mov
je
js
pushf
roll
sbbl
out
xchg
insb
or
aad
insl
dec
gs
into
jmp
mov
and
xor
jecxz
xchg
and
inc
jecxz
mov
pusha
push
clc
pop
jmp
loop
sahf
mov
int
adc
pop
fneni(8087
mov
xchg
mov
fs
inc
aas
je
xchg
or
or
mov
insl
cmpsb
push
lock
orl
loop
lea
outsb
pop
fs
setns
sub
nop
lret
loop
pextrw
inc
lods
es
mov
bound
mov
outsb
push
sti
xchg
or
lcall
inc
imul
scas
popf
push
lea
cmp
arpl
in
sub
ret
mov
rcrl
xor
addr16
lahf
rcl
mov
push
jge
outsb
popf
popa
sbb
sarl
mov
shlb
inc
cmpsb
xor
xor
out
enter
call
jo
ss
cmpsl
sub
push
int3
sub
aaa
push
jg
inc
xchg
out
mov
ficoml
std
cmp
rol
xchg
iret
pop
and
hlt
jecxz
movsb
pop
hlt
into
pushf
inc
hlt
ficomps
mov
add
xchg
fincstp
icebp
cmp
jge
add
pop
aad
xor
adc
mov
fiaddl
adc
cmp
or
inc
loope
sbb
aas
inc
cltd
fwait
dec
out
mov
push
rolb
enter
jle
jns
or
ja
mov
dec
xor
push
pop
or
sub
or
imul
fmull
repz
int3
mov
not
mov
out
in
sbb
lret
int
iret
js
xor
mov
inc
fdivrl
icebp
inc
push
adc
push
pop
pop
cmp
shr
sbb
repnz
test
mov
sub
pop
pop
into
rorl
cmpsl
mov
cmp
bound
jbe
pop
sub
mov
int
jno
mov
pop
xchg
xor
scas
hlt
or
mov
add
enter
push
daa
cmp
inc
jb
and
scas
cmp
dec
jb
pop
sbb
pop
testl
push
insb
or
dec
xchg
lret
in
xchg
ljmp
mov
xor
fisubrs
nop
jns
and
insl
fs
adc
inc
inc
jle
add
jmp
mov
xchg
adcl
dec
mov
mov
ja
sbb
jno
daa
cmp
xor
cmpsb
sbb
imul
imul
pop
mov
pop
lds
push
inc
pop
rorl
mov
shl
sub
es
inc
hlt
jecxz
jmp
les
dec
sbb
push
into
xchg
jle
add
and
mov
cmp
lret
inc
data16
sub
test
mov
call
push
jo
jns
xchg
repz
incl
lcall
and
mov
int3
stos
in
jmp
in
push
inc
movb
in
cli
jmp
clc
mov
mov
std
cld
in
add
gs
stc
les
dec
fucomip
or
cmp
jmp
into
push
aad
cmp
mov
test
dec
add
cmp
cmp
aaa
jno
push
or
sub
jmp
xchg
ja
inc
in
sbbb
mov
sahf
sbb
bound
mov
pop
test
xor
inc
iret
mov
scas
fs
ret
int
or
pop
sub
xchg
dec
loop
outsb
jno
repz
lahf
xchg
push
bound
fdivs
rol
pop
sub
adc
test
bound
inc
test
hlt
cmp
ja
imul
dec
inc
lock
fsubl
xlat
xchg
in
in
sarb
in
sti
sub
mov
int3
adc
cmpsb
mov
inc
cmp
xchg
pop
les
jl
xor
fiadds
add
ret
hlt
mov
cmp
pop
les
and
mov
call
cmp
mov
dec
fisubl
inc
and
lea
pop
pop
pop
scas
insl
mov
push
test
nop
call
mov
inc
jns,pt
mov
cltd
xor
jg
mov
add
mov
jecxz
inc
push
sbb
or
subl
stc
push
inc
mov
icebp
nop
pop
cwtl
sub
pop
popa
cltd
mov
sub
jne
imull
aad
mov
or
jge
fwait
mov
push
adc
lcall
mov
push
stos
das
repz
sub
js
daa
test
cmp
adc
pop
pop
xor
ret
pop
xlat
int
clc
push
cmp
xor
xchg
sbb
adc
das
xchg
gs
xchg
xchg
testl
mov
sbb
stc
ljmp
movb
mov
das
dec
push
popa
out
mov
jns
in
xorl
and
push
mov
jns
cmc
fs
dec
jne
sub
js
cli
mov
xchg
adc
test
dec
clc
rcll
pusha
in
and
mov
into
cmp
jp
dec
mov
mov
test
cmp
pop
inc
mov
jmp
shlb
scas
out
cmpsb
hlt
push
mov
and
and
dec
mov
and
push
sbb
lret
push
lds
xor
aad
xorl
pop
push
sbb
inc
dec
xchg
aam
shlb
dec
mov
test
jo
es
jge
cs
clc
mov
xor
lea
int
mov
scas
test
insl
xlat
outsl
mov
icebp
js
test
in
test
cmp
pop
popa
lea
loope
out
sbb
add
xchg
mov
sub
inc
ret
mov
xor
dec
mov
or
add
xlat
mov
pop
add
adc
sahf
xchg
enter
push
or
sti
dec
and
mov
inc
sbb
jecxz
insl
mov
jmp
mov
push
hlt
fistpl
or
xchg
lea
jl
inc
cmpsb
in
sub
test
cli
mov
es
pushf
push
sbb
mov
decb
cmpl
mov
jnp
sbb
cmp
mov
or
popf
dec
dec
push
and
sub
gs
sub
test
shll
mov
movsb
cmc
enter
fdivl
push
xor
jo
mov
xor
cmc
scas
push
mov
cmp
sbb
les
aam
jne
pop
decb
ret
into
out
sti
leave
idivb
push
adc
pop
sbb
sti
or
cwtl
pop
stc
shll
push
repz
test
test
mov
shrl
cmp
sbb
popa
sub
dec
and
das
sbb
mov
xchg
push
sub
nop
int
dec
stos
dec
fimuls
sbb
loopne
out
jb
pop
add
xor
out
lock
push
lahf
orl
or
jne
adc
lds
add
cmpsb
mov
cmp
mov
sbb
pop
pop
int
push
adcb
and
push
out
ds
xchg
mov
adc
sbb
dec
push
sbb
inc
cmp
add
sbb
cmp
popa
jl
sti
pop
mov
lods
pop
shlb
jg
pop
jge
xor
push
ss
sarl
test
xor
xor
repz
lretw
or
sub
mov
mov
and
iret
loop
stos
xchg
and
fs
lahf
push
adc
rorb
pop
xchg
sbb
repz
add
lods
fwait
daa
imul
xorb
push
aad
rcrb
mov
mov
insl
jne
testb
or
ds
cltd
ficoml
push
dec
scas
out
dec
test
mov
and
loop
packuswb
push
pusha
xchg
fidivrl
xchg
mov
cs
pop
jg
out
mov
in
nop
mov
out
scas
sub
cld
push
jns
jnp
dec
cld
fbld
mov
push
int
popa
cmp
xchg
aaa
jne
nopl
lock
xchg
xor
dec
or
out
nop
sahf
cmp
shlb
sbb
imul
adc
cmp
std
sbb
jp
int3
gs
test
hlt
dec
adcl
nop
ljmp
stos
iret
jge
ret
rcll
out
dec
cmp
push
loop
pop
jg
cmp
inc
popa
and
mull
add
inc
stos
popf
pop
mov
mov
scas
dec
rol
pop
mov
mov
jecxz
cwtl
negl
pop
mov
jle
jnp
cli
aas
and
shll
iret
pop
cmp
pop
push
cmpsl
ret
notb
mov
scas
xchg
mov
mov
pushf
and
push
mov
int
or
mov
fmuls
adc
repnz
jns
iret
pusha
mov
or
mov
leave
stos
icebp
imull
cs
pop
jp
mov
adc
push
pop
adc
xlat
scas
mov
and
scas
push
imul
jmp
jno
mov
aad
mov
sbb
lods
add
pop
xchg
and
jmp
es
lods
dec
sub
jge
or
lock
fidivl
ds
das
iret
pop
mov
idiv
outsb
xor
fs
nop
sbb
sahf
out
aaa
mov
adc
aaa
cmpsb
nop
call
in
lock
inc
ret
fimuls
es
sbbl
or
fdiv
call
add
jae
ss
pop
xchg
cwtl
mov
mov
vandpd
ss
mov
loopne
pop
pushf
adcb
testb
mov
dec
pop
pop
mov
ret
pushf
add
in
mov
arpl
mov
in
xor
and
pusha
ret
jno
push
outsl
cmc
jno
jecxz
loop
cmpl
clc
cmp
pop
dec
clc
sbb
jge
dec
mov
iret
in
and
into
sbb
ljmp
out
iret
cli
add
jge
test
pop
push
cmp
repnz
mov
stos
dec
inc
sti
pop
xchg
mov
pop
lods
stc
mov
insb
mov
sti
mov
roll
clc
jno
add
xchg
add
and
pop
nop
ret
mov
in
dec
mov
ja
cs
sbb
cmc
xchg
aad
cmp
adc
ret
inc
pop
out
dec
cs
pushf
rorb
sub
mov
push
inc
dec
xchg
or
or
lock
mov
fcompl
call
sbb
scas
fisubrl
inc
inc
jmp
lea
cmp
sub
nop
pop
xor
lods
sub
push
cli
jb
inc
fnstcw
xchg
ja
nop
xor
in
stos
inc
in
mov
jne
incb
stc
or
sub
cmpsb
xor
mov
xchg
cld
pop
xchg
mov
pusha
shlb
pop
and
add
out
movsb
imul
mov
mov
cmp
cmp
dec
dec
mov
test
repz
imulb
cmpsl
pop
jmp
mov
or
inc
rcl
and
aam
adc
mov
add
fcmovnb
xchg
bound
inc
cmp
xor
je
nop
out
mov
sub
xor
mov
pop
pop
iret
jo
pop
mov
mov
inc
in
pusha
mov
leave
xchg
call
outsl
iret
test
jg
leave
gs
xchg
mov
or
or
fisttpl
and
sub
mov
mov
dec
push
mov
js
add
add
sub
sub
loope
xchg
inc
sub
and
fimull
shll
mov
or
insb
sarl
xorl
push
jbe
lcall
pop
dec
dec
mov
mov
loop
sbb
mov
pop
call
jno
loopne
std
jge
jle
sub
sub
push
je
test
pop
sub
inc
mov
movb
ficoms
mov
adc
add
xchg
fbld
fdivr
out
aaa
ds
pop
pop
cmp
pop
hlt
in
cmp
repnz
push
push
aam
addr16
scas
in
add
sub
cmp
aas
scas
outsl
inc
shll
adc
or
out
jmp
fidivrs
notb
jg
dec
dec
and
int3
inc
sub
mov
push
imul
ret
sbb
js
and
rcrl
in
mov
out
pusha
mov
andb
or
popa
xchg
andl
aad
rcll
and
aaa
inc
movsl
add
test
cltd
push
orb
sahf
js
xchg
mov
xor
mov
push
pop
arpl
mov
mov
jl
andl
out
mov
test
in
sub
xchg
or
xchg
pop
sbb
ja
daa
repz
rcl
cmpl
aam
pop
sbb
pop
mov
pop
aad
jmp
lds
loope
push
cmpsb
add
popf
lods
js
fists
push
adc
pop
mov
push
mov
cmpsl
sub
scas
negb
fsubrs
cmpsb
loope
dec
adc
sbb
inc
imul
dec
dec
shrl
and
filds
mov
mov
xor
sti
out
mov
dec
outsb
movsl
lahf
test
idiv
sub
sub
push
imul
sti
jo
sbb
cwtl
std
sti
mov
inc
inc
push
ljmp
lahf
cmpsl
mov
les
mov
lret
lods
fucomip
test
or
rcr
fnstcw
cmc
sub
mov
and
xor
mov
icebp
sbb
clc
and
and
gs
dec
cmp
jl
jecxz
push
sbb
inc
xchg
cmp
ja
mov
enter
xchg
int3
xchg
les
cld
xchg
push
pop
push
stos
adc
pop
push
cmp
dec
fucomip
inc
or
mov
xor
movsb
jg
adc
or
cmc
adc
imul
cmpsl
push
nop
pop
movsl
in
cmp
or
stc
add
xor
lcall
shlb
jmp
outsl
add
clc
int
pushf
push
lock
into
lods
xchg
pop
repz
cmp
sub
jno
sub
cltd
out
xchg
ljmp
sbb
push
loopne
inc
sbb
icebp
jae
sti
fcoml
leave
push
insb
fwait
sbb
or
dec
mov
adc
and
push
push
xchg
into
mov
imul
iret
mov
sbb
jo
and
adc
lret
sbb
or
push
enter
gs
push
jge
cmp
lret
and
jns
int
jp
xor
cli
jl
enter
fnstenv
adc
sub
inc
ds
popf
jp
xchg
add
cltd
sahf
dec
test
mov
sbb
out
push
mov
hlt
push
pop
sbb
sbb
pop
xchg
imul
in
divb
shl
push
ja
push
cmp
out
add
rorb
add
adc
add
test
sbb
mov
sbb
rolb
pop
dec
arpl
mov
pop
ja
mov
xlat
out
dec
bound
sbb
loopne
mov
lods
int
fcmovnbe
hlt
in
or
jp
ds
or
jo
fnstsw
mov
sub
lock
test
in
mov
int
pop
inc
das
loop
push
pop
inc
insb
iret
mov
lods
ds
xchg
repz
js
push
mov
lcall
xor
ljmp
shll
out
mov
cld
push
mov
adc
push
lods
leave
ss
mov
adc
dec
adc
rcll
mov
gs
aaa
into
mov
push
cmp
stos
repz
popa
out
mov
mov
and
popa
cmpsb
fwait
adcb
adc
loope
inc
pop
xchg
mov
push
xor
cmp
xchg
jp
stos
pop
add
sbb
push
lcall
jl
mov
cltd
out
mov
and
xchg
add
mov
loope
mov
adc
add
imul
push
mov
and
sbb
push
jae
fsts
mov
lods
cltd
lahf
add
jbe
xlat
in
adc
pop
pop
imul
cmpsb
push
mov
scas
dec
pop
cmp
popf
xchg
xlat
jmp
loopne
sbb
nop
adc
xchg
movsl
and
or
dec
rcll
mul
enter
test
dec
arpl
fildl
sti
ret
fwait
inc
mov
pop
es
adc
push
mov
fs
movl
int
mov
add
call
iret
out
inc
in
sti
push
inc
xlat
xchg
dec
xchg
xchg
rcrb
xor
mov
adc
imul
mov
mov
sarl
sub
out
add
addl
dec
jecxz
out
dec
sbb
xchg
push
out
jl
stos
pop
sub
fisubrl
sub
mov
stos
and
inc
cmp
out
cmp
sub
cmp
lcall
popa
cmp
jb
out
test
arpl
sub
push
testl
xchg
test
sbb
iret
xchg
jo
pop
mov
or
jle
mov
dec
cmc
in
aad
mov
xor
dec
push
xchg
rcrb
jmp
push
into
outsl
xor
cltd
sahf
dec
mov
ror
pop
stos
mov
and
sub
sub
push
lret
adc
fstl
dec
or
loope
pop
punpckhwd
int3
lea
sbb
xchg
add
push
push
mov
jne
fdiv
sbb
ljmp
or
mov
imul
mov
sahf
testb
add
sub
lret
or
ss
dec
es
aad
xchg
aaa
cmp
mov
mov
jl
jno
pop
stos
add
jae
insb
pop
stos
in
cltd
movsl
sub
cmp
js
loop
pop
mov
jp
lea
stos
inc
lds
arpl
stos
xchg
repz
lods
inc
shr
sub
call
xor
jne
inc
insb
scas
xor
xchg
lahf
lods
jecxz
fcos
dec
icebp
add
mov
sbb
inc
jo
dec
lret
jmp
pop
ret
mov
aas
stos
add
inc
jno
data16
lds
lea
decb
and
push
xor
stc
mov
dec
movsb
lahf
or
dec
sub
sub
push
mov
mov
jmp
cmpsb
xorl
mov
dec
dec
aad
and
mov
pop
shl
cmp
sarb
mov
lods
fstp
inc
push
jp
arpl
dec
add
arpl
pusha
inc
jg
and
jle
movsl
stos
ljmp
sbb
stos
xor
sub
jmp
testl
loop
add
pop
xlat
xchg
out
dec
icebp
leave
pop
stos
add
outsb
inc
inc
andl
shll
mov
mov
sar
rcll
jbe
inc
sbb
mov
adc
rolb
nop
dec
mov
ds
mov
std
mov
jg
lahf
xchg
enter
je
imul
int
sub
fdivp
out
push
and
xchg
or
xor
mov
data16
popa
insl
jg
sbb
mov
or
scas
add
push
pusha
pop
ljmp
and
sub
popa
sbb
pop
mov
and
cmp
inc
mov
jno
mov
popf
data16
or
sbb
mov
pop
push
es
cs
pop
movsl
cmp
ror
pushf
xor
les
aad
lock
and
cwtl
pop
mov
test
cmp
jmp
jnp
cli
test
ja
or
jae
jae,pt
dec
push
jmp
dec
adc
ja
out
mov
cs
cmp
mov
rorl
jae
cmp
jle
xlat
or
mov
and
aas
mov
std
dec
sub
mov
mov
inc
iret
cmpsb
imul
or
sub
sbb
xorb
dec
js
cmp
pushf
mov
xchg
mov
push
out
pop
mov
lds
jnp
scas
repz
sbb
in
gs
sub
lds
cli
loopne
add
dec
xor
imul
sub
xor
sub
adc
dec
jns
gs
adc
sti
lret
xor
xchg
jne
jp
inc
push
sti
or
in
notb
push
fdivrp
adcl
hlt
jb
jb
jae
adc
sub
xchg
scas
loopne
lahf
lret
test
sub
xor
repz
mov
xchg
lods
cwtl
inc
xchg
outsl
ds
mov
ret
sbb
out
xor
lds
ret
mov
adc
popa
lock
cmpsl
fwait
ljmp
cmc
sbb
icebp
adc
nop
iret
fldcw
sbbl
in
pop
push
out
daa
je
shl
jp
add
ret
roll
inc
ret
sub
ljmp
push
popf
dec
cmp
mov
pop
inc
or
das
jb
in
stc
inc
lahf
repnz
dec
push
cld
shr
sub
cmpsb
sub
je
popf
push
stos
push
pop
or
insl
jae
jmp
outsl
dec
adc
jecxz
jle
lods
and
decb
fdivrs
mov
adc
mov
xor
iret
lods
jg
into
les
daa
and
pop
xor
mov
cmc
push
fucomp
test
inc
jne
std
andb
and
sub
inc
xchg
adc
in
cwtl
repz
or
ljmp
jnp
xor
gs
jl
xchg
aaa
loop
test
mov
mov
or
xlat
addr16
lods
cmc
jne
js
sub
into
les
push
pop
mov
jle
mov
js
push
imul
iret
mov
inc
stos
rcr
mov
sbb
sub
xor
jns
and
add
jle
jne
aas
sbb
repz
jl
sti
or
movsl
mov
xchg
imul
cmc
adc
lret
jge
cmpsl
jbe
jbe
jnp
xor
pop
fcmovnb
cmp
mov
out
fildl
lahf
mov
adc
rol
lret
test
icebp
jnp
fs
lods
dec
mov
pop
pop
mov
ds
aad
xchg
xchg
aad
aam
enter
es
mov
mov
mov
jno
cmc
cmp
je
pop
sahf
outsl
shrl
div
movsl
mov
repnz
rcl
mov
jae
mov
lcall
cmpsl
xchg
sbb
call
adc
imul
loope
movsl
cmp
cltd
fldenv
in
dec
adc
cltd
test
pushf
sarl
rclb
sti
jnp
sbb
lds
cmp
shrb
dec
out
das
shr
cmc
loopne
mov
or
bound
mov
cs
or
mov
mov
fsub
or
out
ljmp
fistpll
rorb
mov
add
xlat
adc
dec
testl
dec
lcall
enter
mov
ret
fisubrs
clc
movsl
loopne
shlb
shlb
mov
xor
ret
cmp
cmc
popf
jge
add
mov
xchg
out
es
mov
xlat
js
fucomp
fstpt
or
mov
fisubs
xor
test
lods
loopne
sub
into
mov
aad
cmp
lods
dec
lret
fistpl
aad
je
xor
lret
inc
xchg
and
notl
add
inc
pop
xor
adc
aaa
out
mov
pop
das
aad
xor
scas
adc
ret
mov
cmp
fs
fwait
sti
idiv
jecxz
ficoms
inc
loope
mov
aas
xor
jae
shl
data16
and
xchg
sub
test
mov
push
test
stos
fiadds
jb
lahf
and
mov
stos
mov
mov
ss
fisttpll
ret
mov
cmp
outsl
jge
cmc
incb
and
jl
jecxz
cs
pop
js
xchg
sahf
in
sbb
loop
fnstenv
sahf
adc
data16
pusha
inc
pop
ror
lods
js
and
jl
cmp
push
stos
push
pop
pop
lock
mov
sub
out
icebp
mov
mov
cmp
test
pop
xchg
jno
mov
mov
sub
pop
inc
xlat
mov
dec
push
push
fsubr
divb
in
notb
xchg
clc
mov
push
test
and
pusha
out
out
nop
pop
repz
jge
int
scas
mov
pop
in
jo
jns
pop
inc
bound
adc
xchg
dec
popf
add
dec
in
popa
rclb
inc
adc
rcll
lock
or
aas
ret
jbe
dec
add
scas
scas
jle
sub
insb
aam
add
imul
and
shlb
in
bnd
arpl
lret
xchg
xor
cmpsl
pop
jmp
adc
sub
pop
daa
clc
enter
mov
cmp
fistps
popf
call
popf
movsl
or
fistps
mov
cmpl
pop
inc
push
jmp
int3
push
inc
adc
in
sub
mov
dec
xor
jae
mov
sbb
movsl
dec
push
clc
sbb
add
sub
pop
xchg
pop
loopne
add
sbb
inc
fchs
cmpsl
scas
int
das
xor
mov
xchg
mov
rcll
scas
inc
pushf
sub
mov
ret
jne
mov
xor
mov
sbb
hlt
cmp
mov
push
mov
mov
ljmp
jg
aas
cmp
lods
dec
aam
ret
cmpl
imul
xchg
push
dec
rol
pushf
push
jbe
les
inc
loope
cmp
mov
xchg
pop
xchg
outsl
jg
jp
mov
ja
mov
xor
rorl
jg
js
sbb
hlt
ret
ds
mov
cmp
enter
xchg
xchg
icebp
jl
fcomp
dec
inc
xchg
jae
mov
add
fsub
arpl
mov
or
mov
xchg
fstps
cmp
mov
std
rol
loop
stos
mov
or
ljmp
mov
ret
sbb
push
push
jo
lock
dec
xchg
leave
int
cmp
in
js
stos
in
jo
mov
fwait
jl
sub
test
les
pop
jge
addr16
fwait
jb
outsb
sbb
test
sar
inc
test
jo
mov
jns
pop
bswap
gs
test
cmc
inc
dec
daa
mov
aam
and
aas
push
lcall
imul
dec
dec
leave
outsl
xchg
ja
adc
xchg
push
test
mov
sub
scas
dec
dec
jae
ficoml
roll
pop
push
push
and
shlb
inc
push
xlat
adc
in
sub
sub
dec
mov
add
jnp
sahf
testl
std
adcl
mov
mov
jle
stos
lcall
mov
mov
sar
or
pop
jno
lds
push
rcr
mov
imul
push
cs
into
test
jmp
mov
mov
dec
cmp
fisubl
pop
and
inc
adc
push
mov
call
cmp
cmp
add
adc
and
fadd
dec
mov
sti
popl
mov
or
sbb
test
rcrb
cmpsb
xchg
xchg
in
adc
lods
sub
faddl
inc
mov
xchg
loop
ljmp
jg
dec
xorb
xor
add
stos
das
test
jb
mov
sahf
push
ss
or
in
cmp
popf
mov
jbe
push
xor
fidivs
out
pusha
pop
push
mov
andl
push
rcll
xor
into
dec
or
lret
cmpb
std
sti
pop
or
fwait
push
icebp
aam
pop
cmp
cmpsb
ficoms
adc
sub
mov
adc
imul
mov
xor
dec
lcall
xor
mov
jno
push
push
sub
pop
jecxz
cmp
sbb
insb
in
loope
mov
mov
xlat
test
clc
lret
sbb
sub
cmp
aam
lods
add
pop
push
adc
cmp
inc
clc
sub
shlb
sbb
dec
test
imul
sarb
push
mov
pop
sarb
mov
cmp
pop
xchg
fstl
fldl
ja
fwait
xor
mov
cmpl
and
adc
mov
sbb
ja
sbbl
mov
cmp
movsl
mov
pushf
mov
iret
enter
xchg
add
mov
cmp
mov
xor
mov
nop
mov
dec
dec
jbe
xor
fs
xchg
cmp
pop
xchg
add
pop
int3
pop
mov
imul
dec
test
xor
clc
adc
lcall
jecxz
adc
out
lds
bound
mov
cmp
jecxz
push
test
mov
test
mov
sbb
rcl
and
ss
jns
mov
sti
lods
pop
cmc
jle
inc
pop
xor
jmp
jp
mov
xor
icebp
push
popf
stc
mov
and
mov
push
lahf
mov
cmp
mov
stos
fcos
push
lea
push
outsl
add
int
push
movl
or
stos
daa
sbbb
xchg
mov
push
inc
push
lds
mov
jns
inc
sub
ficoml
std
mov
shr
or
stos
in
adc
popf
add
and
test
add
cmc
aaa
dec
mov
movsl
int3
idivl
imul
mov
idiv
bound
adc
sbb
pop
mov
out
xor
aas
in
aas
fidivrs
mov
inc
mov
sbbl
sub
inc
lcall
or
pop
jl
dec
adcl
lret
pop
imul
cmp
ja
mov
and
xchg
loopne
inc
pushf
es
dec
adc
mov
jno
jecxz
lret
add
leave
aad
popf
lret
xchg
lcall
xchg
jmp
movsb
cs
in
outsb
add
mov
popf
or
add
add
or
imul
mov
sbb
xchg
sub
pop
leave
cmc
and
and
jno
nop
jmp
push
fiadds
cmp
mov
aad
add
arpl
aas
mov
bnd
fadds
mov
rorb
or
out
aam
mov
leave
stc
cmp
mov
aaa
bound
nop
or
sub
mov
lret
sub
enter
testb
mov
sub
xchg
dec
sub
jb
or
sar
jmp
scas
leave
mov
and
or
js
pmaxsw
dec
ja
pop
and
sbb
inc
pop
enter
mov
mov
jo
sbb
jae
sub
and
push
shl
xchg
jae
pop
cmpl
push
daa
jae
addb
addb
leave
out
mov
in
incl
das
jb
shl
leave
insb
stc
jo
repz
mov
cmp
pop
push
lods
ret
sbb
stos
xor
mov
loop
and
sarl
xor
aad
call
idiv
fsubrs
cltd
mov
icebp
movsl
jmp
mov
pop
cmp
repnz
mov
pop
lret
out
mov
outsb
mov
in
pop
or
mov
dec
add
push
ror
add
jp
dec
cmc
repz
mov
dec
je
mov
push
js
out
mov
xor
outsl
ljmp
loopne
testl
adc
cmp
das
adc
xlat
jno
test
mov
repnz
push
fs
test
add
xchg
divl
mov
leave
xor
cmpsl
jns
lahf
mov
dec
call
fmul
lock
jge
ja
xor
sti
andl
mov
sbb
enter
out
arpl
cmp
mov
int3
jno
lahf
push
fsubrs
mov
mov
lahf
loop
jno
cmpsl
jo,pn
insl
sbb
jecxz
pop
fsubs
arpl
cli
lret
and
ss
outsl
inc
mov
js
xchg
jns
dec
and
add
in
das
pusha
popa
cld
push
pop
icebp
dec
mov
or
push
mov
dec
inc
ret
sbb
rol
std
movsl
nop
mov
mov
scas
mov
dec
movsl
fs
cmpl
test
and
cli
scas
stos
sbb
xchg
jno
mov
xchg
jecxz
adc
arpl
add
ljmp
adc
sub
test
push
jmp
adc
sti
mov
push
stos
in
js
popa
adc
jne
xchg
xor
mov
and
xor
add
test
int3
pusha
call
dec
cld
mov
jae
xor
mov
arpl
rcrb
ret
inc
popf
pop
or
cmp
mov
mov
ds
pop
loope
push
cmp
fnsave
push
dec
pop
out
mov
mov
inc
mov
add
bound
push
mov
mov
cld
loopne
push
adc
xor
pop
shrb
jg
and
mov
and
js
sbb
dec
aaa
dec
mov
popa
add
fisttps
push
dec
arpl
mov
dec
dec
xchg
mov
fimull
and
dec
pop
or
cwtl
mov
cmp
lds
popa
iret
les
ds
mov
xor
mull
aad
movb
ss
and
and
cmc
xor
pop
cwtl
scas
sarl
lcall
inc
mov
popa
addl
pushf
cmp
cmc
addr16
mov
xor
test
popa
jl
push
ret
inc
mov
pop
mov
xlat
aad
pusha
cld
fs
or
stc
ss
std
dec
int
fistps
inc
imul
out
mov
or
xchg
jmp
out
jmp
in
hlt
xchg
in
cltd
fbstp
pop
cmp
xchg
data16
mov
movsb
jl
adc
lret
call
out
andb
lods
fcomps
adc
or
mov
jb
jg
ret
imul
lock
sub
inc
into
imul
cmp
xchg
sub
mov
mov
test
xchg
mov
mov
pop
shr
mov
andb
sbb
fwait
daa
push
dec
mov
and
pop
icebp
push
stos
aam
and
dec
push
iret
push
or
sub
in
xor
popf
pop
or
pop
shl
rolb
sbb
push
add
mov
aas
xor
jae
fldt
sub
lret
push
leave
jnp
pop
pop
pushf
fdivrs
mov
inc
dec
jge
cmc
mov
filds
jo
add
and
mov
cmpsb
test
push
fs
imul
divb
fadd
pushf
int3
mov
das
adc
sub
int
jge
lret
es
cmc
pop
xchg
push
daa
call
popf
xor
scas
ficompl
inc
push
popl
clc
xor
xchg
xchg
fidivrl
cmp
push
out
jge
mov
push
push
mov
es
and
loope
in
das
adc
jbe
test
and
ret
lahf
hlt
push
xchg
sbb
xor
push
xchg
jbe
cmp
adc
into
in
imul
push
hlt
imul
lds
push
xor
shlb
add
push
or
imul
mov
push
dec
mov
and
loopne
hlt
imul
lods
jge,pn
jp
cmpl
mov
ds
repz
mov
int3
es
addb
mov
and
dec
aam
aas
add
icebp
dec
mov
fstps
jae
mov
cmp
adc
notb
cmp
pop
pop
stos
jl
int
movsb
sbb
cmpsb
scas
addl
sbbb
shrb
push
push
lahf
cltd
cs
divl
imul
mov
push
or
loopne
aad
out
jle
or
daa
aam
adc
and
fimuls
jo
cmp
xor
add
mov
cmp
outsl
mov
or
or
ljmp
xor
ds
repnz
pop
sub
ljmp
ffreep
inc
xchg
and
pop
push
add
nop
cmp
cmp
leave
sub
lods
add
fwait
add
mov
mov
xor
sti
xor
dec
in
aaa
mov
pop
add
mov
shlb
add
popf
xchg
lock
arpl
pusha
data16
or
jmp
bound
xchg
mov
add
insl
xor
push
shll
scas
sti
cmp
jmp
dec
fstpt
push
xlat
push
sti
sarb
mov
enter
mov
pop
pop
pop
pop
cmp
fcmovne
pop
clc
sbb
cltd
sub
out
add
mov
sbb
addr16
cwtl
rclb
scas
pop
out
fucomi
int3
lds
xchg
icebp
xchg
movsl
xor
sarb
dec
repz
shll
jae
in
or
ja
xor
daa
sub
outsb
repnz
ret
sbb
sub
adc
ja
push
stc
dec
mov
std
xchg
lcall
jle
push
out
add
jbe
fs
lds
insl
ja
push
ret
cs
inc
mov
dec
mov
mov
pusha
dec
test
sahf
hlt
movsl
jecxz
enter
sub
lahf
outsb
pusha
mov
xchg
and
cwtl
jmp
push
adc
outsb
inc
stos
add
imul
ret
jno
adc
xchg
add
xor
jno
ficoms
outsl
lea
cmpsl
sub
mov
out
ljmp
lahf
jno
fistpl
jno
dec
inc
mov
insl
popa
pop
out
cmpsl
popa
das
xchg
ficoml
lea
fbstp
pop
adc
jp
shlb
push
enter
sub
mov
ret
testl
cmc
xchg
loope
mull
mov
add
xchg
push
mov
aad
sub
icebp
push
mov
ljmp
cltd
cmp
inc
pop
repz
dec
imull
mov
or
in
je
popa
movsl
shll
js
or
pusha
sbb
xchg
mov
in
adc
jle
lea
mov
ds
out
jno
adc
cli
popf
leave
or
movsl
jo
test
pop
repz
stos
add
xchg
jae
ret
sbb
and
addr16
mov
jg
bound
jo
mov
cmc
ss
lea
cmpsl
or
pop
dec
andb
test
jne
popf
lds
push
fs
mov
push
dec
jmp
jns
adc
dec
jne
pop
jmp
add
jnp
out
test
dec
cli
mov
inc
insb
movsb
or
adcl
pop
repnz
dec
mov
mov
jo
jae
out
inc
stc
test
mov
pop
xchg
sarl
cmp
or
xchg
leave
int
inc
cmc
movsb
pop
cwtl
and
sub
fcomi
je
pop
mov
out
mov
pop
mov
mov
ret
and
out
mov
into
adc
mov
jo
pop
fwait
xchg
dec
pop
jge
inc
jle
cmpsl
jmp
ja
xor
in
sub
ret
out
outsl
inc
fcompl
fcoml
pop
and
dec
jnp
daa
push
add
orb
xor
inc
cmpl
cmpb
andl
bound
cli
out
cmp
add
push
cs
shrl
in
push
push
push
xor
and
js
pop
sub
pop
cs
rcrb
dec
out
xchg
add
lahf
icebp
cmp
shrl
xchg
lods
cmp
xor
dec
imul
xchg
inc
jmp
inc
dec
push
das
andl
stos
addr16
or
in
test
sbb
add
sarb
nop
pop
and
cmpb
mov
xor
push
or
cltd
push
lret
roll
out
jnp
sub
jbe
fisttps
imul
sti
lret
call
mov
sbb
push
sarb
out
push
mov
out
sub
jge
cs
mov
cmpsl
push
shlb
xor
dec
push
mov
xor
dec
dec
sub
outsl
out
adc
adc
and
lods
dec
xchg
cmp
inc
mov
std
inc
ljmp
mov
cmpb
sub
mov
mov
cmp
in
push
xchg
cld
aas
ja
in
fisttps
lret
push
xchg
pop
orb
andl
push
jl
popa
xor
mov
inc
cwtd
jmp
mov
push
aas
mov
mov
cmp
pop
xchg
sub
sbb
std
jb
sahf
mov
mov
sbb
in
pop
push
sub
jo
sbb
test
icebp
push
pop
inc
dec
lret
loop
mov
sbb
jo
repnz
flds
lock
and
sbb
popa
lods
cmp
repz
fiadds
movsl
cld
in
or
mov
fwait
stos
sub
inc
dec
and
mov
test
pop
pop
pop
push
push
sbb
sbbb
bound
add
sbb
add
movsb
sbb
or
cmp
jae
ds
dec
hlt
adc
mov
mov
in
jo
aas
sbb
addr16
add
dec
out
sbb
mov
push
mov
xchg
or
nop
std
pop
fildll
bound
movsl
push
cmpsl
jb
inc
mov
dec
imul
lock
addr16
cld
add
mov
push
test
sub
movb
dec
outsl
sub
mov
lret
mov
loope
mov
jmp
cld
xor
jbe
xor
adc
hlt
ss
imul
pushf
shrb
mov
rcr
mov
cmp
fidivs
jo
adc
scas
subb
lret
rcl
add
in
mov
jle
adc
push
out
push
xorl
jnp
inc
testb
mov
pop
and
fsubrl
inc
ljmp
test
das
popf
loopne
ljmp
mov
movl
cmp
cltd
lea
repz
sti
ljmp
adc
sub
adc
xchg
loopne
movsb
andb
jecxz
push
jns
repz
xchg
inc
adc
mov
imul
and
aas
jl
push
mov
scas
mov
bound
inc
cmp
lcall
jle
out
or
ds
dec
lret
sub
mov
mov
std
cmp
mov
inc
fstpt
lcall
and
lods
pop
es
pusha
mov
pushf
xchg
sub
int
outsl
push
rcll
mov
rcrb
call
jbe
xchg
jno
je
dec
fstps
pop
add
cmp
shr
aaa
xlat
inc
mov
push
fimuls
and
jbe
mov
pop
push
nop
pusha
inc
dec
les
jl
adc
sub
xchg
aas
cmp
mov
les
xchg
adc
mov
ljmp
xorb
cmp
rclb
or
lds
out
mov
int
or
stos
xchg
rclb
adc
rorb
fiadds
adc
rorl
repz
int3
xchg
cmp
inc
add
sub
pushf
xchg
xor
mov
popa
stos
iret
add
pop
movsl
jmp
or
mov
xor
pop
idivb
or
in
cmc
mov
jb
add
iret
je
je
hlt
push
push
rcll
mov
xor
cmp
and
jmp
pop
das
xor
pop
nop
dec
push
cmp
pop
shl
sbb
movsl
inc
and
rolb
call
dec
sub
lods
ret
cmc
out
cmp
add
bound
daa
mull
jno
jno
push
or
lret
ficompl
jnp
cmp
dec
xchg
pop
rorl
mov
jge
or
repnz
dec
and
ja
fwait
insl
jl
shll
cmp
imul
push
ret
jg
test
jmp
ss
mov
aam
mov
inc
mov
outsb
loopne
push
popa
std
cmp
lret
fcomps
repz
cld
mov
sub
addb
jp
add
out
cmp
or
mov
mov
out
hlt
ret
int3
push
ds
xchg
cmp
jne
xchg
jl
inc
push
jne
push
push
loop
xchg
xor
daa
daa
lret
lock
pop
test
fidivrs
and
dec
jnp
scas
lea
notb
and
xchg
icebp
mov
and
dec
pop
dec
xorb
aaa
push
fnsave
push
pop
fwait
cmc
jp
into
pop
pop
add
pop
insb
outsl
adc
inc
jno
subb
lock
dec
inc
push
inc
adc
test
into
mov
cmp
xor
mov
mov
sti
pushf
cmc
mov
shlb
cmp
xor
leave
mov
fsubs
aam
jnp
sarl
int3
enter
cwtl
mov
dec
pop
pop
mov
std
add
inc
lcall
inc
mov
push
leave
insl
rcll
mov
cmp
mov
and
jo
dec
ficoms
icebp
clc
mov
sbb
mov
push
push
es
inc
in
gs
fs
out
xchg
mov
mov
in
add
inc
push
adc
iret
add
fimuls
pop
push
add
hlt
mov
inc
lds
and
lock
push
jb
arpl
loope
jge
scas
gs
movsb
pop
rep
shrl
xlat
mov
pop
std
add
mov
mov
rol
push
and
or
inc
dec
popa
lds
ljmp
sahf
and
and
daa
loop
cmc
add
sbb
repnz
mov
cmp
aam
out
push
repz
adc
and
loopne
and
sahf
pop
jo
push
jg
cmp
sub
ficoml
jne
out
repz
daa
mov
jl
xor
clc
sbb
or
movsb
call
sub
loopne
pop
cmc
xchg
test
call
jl
inc
outsl
inc
cmpsb
jb
mov
bound
mov
add
hlt
lds
and
imul
xchg
fs
xchg
jmp
fisubrl
cmpsl
shlb
aas
jl
mov
lcall
or
das
divl
jb
rcl
jae
push
pushf
js
fnstenv
jl
fucomi
xor
roll
mov
cmpsl
sub
xchg
iret
std
or
pop
mov
dec
arpl
and
jle
mov
pop
ljmp
or
push
cmp
int3
iret
or
and
pop
xlat
test
popf
idivb
leave
jecxz
jle
push
std
int3
add
jg
test
adc
cmp
call
addr16
jmp
pop
test
insl
mov
sbb
cli
fisttps
mov
iret
out
pop
fstp
jge
jb
jnp
jae
mull
into
push
int
jo
or
cmp
or
movsb
xchg
aam
or
insl
cmc
xchg
inc
fnstcw
adcb
aam
mov
cltd
pop
sbb
jnp
imul
mov
int
sbb
ret
lock
in
xor
mov
pop
insl
pop
jae
jne
jns
or
out
mov
inc
pop
pop
jbe
int3
popf
push
call
and
ret
mov
hlt
mov
xor
jne
int
mov
jae
cmp
lea
rcrl
jmp
cwtl
hlt
loopne
xchg
out
rolw
dec
lods
xor
xor
jl
pushf
aaa
xor
push
mov
sbb
inc
dec
pop
adc
sbb
sub
rclb
push
test
int3
rcr
mov
int3
out
cwtl
mov
cmp
btr
dec
rolb
mov
inc
fwait
mov
aas
pop
adc
out
insb
dec
popa
cwtl
mov
xchg
nop
sub
stos
rolb
xchg
push
rcrl
fnstcw
push
roll
push
xor
sar
sbb
lods
outsb
mov
hlt
mov
pushf
adc
cmp
fisubs
sar
lret
cltd
mov
jge
mov
fwait
imulb
stc
mov
cmp
sbb
or
std
negl
and
mov
dec
out
push
mov
mov
lcall
jb,pt
imul
ja
push
sub
test
mov
mov
data16
movsb
and
lods
mov
push
mov
mov
pop
cltd
cmpsb
in
out
stc
shlb
or
jle
mov
pop
and
std
dec
xchg
shll
jo
sub
mov
cmpsb
aad
jg
xor
iret
roll
mov
loop
inc
lods
xlat
pop
inc
push
pop
lahf
lahf
enter
sub
inc
popa
test
pusha
popf
or
mov
inc
mov
stos
int3
out
iret
inc
sub
push
mov
rolb
subb
mov
loopne
jmp
insb
outsb
jecxz
mov
inc
cmp
call
mov
andl
leave
arpl
pusha
sbb
jge
rcll
adc
mov
cmpsb
sub
roll
dec
aas
into
pop
mov
sub
mov
movl
inc
fsubrl
push
xchg
scas
sub
xor
xor
repnz
sub
aas
fildl
pop
adc
pop
xchg
das
lret
fstl
cmp
or
movsl
fdivrs
test
in
push
andb
cmp
lods
imul
sbbb
scas
out
xchg
pop
mov
sub
sub
add
jo
jecxz
lret
imul
aas
sub
call
loope
adc
popf
pusha
push
fnstenv
je
rclb
aaa
loope
sub
stc
out
insb
push
fsts
xor
imul
es
lahf
test
repnz
mov
cli
xchg
mov
loop
pushf
dec
sub
push
sbb
and
insb
addb
or
pop
fadd
add
pop
inc
popa
fisubrs
inc
sub
and
dec
outsb
sub
xchg
add
mul
movsl
push
xor
cld
push
add
jbe
add
dec
divb
cld
mov
jl
sahf
push
icebp
fidivrl
sbb
jmp
insl
leave
add
lods
mov
loop
sub
insl
bound
pop
iret
test
fwait
in
lods
or
int3
inc
sub
fisubl
jno
cli
nop
ret
or
cmc
stc
aad
in
outsl
sub
test
mov
lds
addr16
and
and
mov
hlt
dec
mov
lea
or
sub
cld
movsl
cwtl
jne
repnz
cmpsl
cwtl
and
fisttpl
rcll
call
push
inc
pop
mov
bnd
xchg
and
test
jp
mov
push
or
push
ja
adc
cmp
mov
popa
imul
test
xor
mov
or
loope
xchg
adc
in
mov
fcoml
cmpsl
test
insl
cmp
out
lods
jnp
iret
push
ds
push
jle
mov
dec
fwait
imul
push
pop
rcrb
nop
xor
mov
adc
rcrl
call
or
fsubrl
cmp
shll
pop
jle
ret
gs
std
outsl
and
mov
insl
or
aam
lds
jecxz
lods
mov
idiv
dec
and
sub
aaa
add
xchg
add
popf
xchg
sub
and
xchg
xchg
sbb
inc
push
int3
addr16
out
adc
inc
lods
or
in
pop
clc
mov
int
or
mov
test
mov
inc
repz
sbb
imul
jnp
jmp
stc
mov
mov
nop
xor
int
cmc
mov
aad
or
mov
shll
mov
push
mov
in
sub
in
jo
cwtl
xchg
hlt
push
jle
fsubl
dec
mov
xchg
xchg
xor
push
jg
cli
icebp
fisubs
adc
icebp
das
push
fidivl
push
ja
push
mov
jmp
lea
ss
xchg
lock
xor
lcall
jo
pop
test
shrl
and
xor
and
hlt
cmc
cmpl
adc
mov
mov
mov
sbb
pop
jo
fistl
sbbl
shll
jno
jns
outsb
sbb
leave
pop
in
fadds
loope,pt
movsl
rclb
jecxz
stc
inc
imul
sub
push
addr16
or
cmp
ret
int
push
mov
inc
adc
push
hlt
dec
pop
xchg
mov
jbe
dec
mov
sti
inc
add
fcoms
xor
dec
ds
fstpt
push
push
movsl
insl
dec
cmp
mov
xor
stc
pop
sbb
loope
cmp
in
ja
cmpsb
iret
push
mov
and
push
mov
movsb
lea
cmpsb
movsb
dec
dec
xlat
dec
add
loope
mov
out
es
fcomps
pop
and
bound
movsl
aam
in
movsl
jno
test
adcl
xor
add
sarl
dec
mov
and
test
push
std
mov
loopne
adcb
jno
fldcw
cld
addr16
push
sti
push
ret
dec
jecxz
and
rorb
sbb
dec
sbb
cmp
adc
js
mov
lret
xchg
fsubl
hlt
dec
xor
bound
add
fisttpl
and
insb
mov
mov
movsw
int3
mov
rolb
fmull
cltd
mov
out
aaa
test
das
sub
cmp
loop
add
das
sub
je
xlat
or
repz
dec
mov
lcall
pop
sti
aas
adc
sbb
push
jbe
iret
loope
cwtl
or
push
stos
shlb
push
shrb
xchg
addr16
jl
scas
scas
jbe
test
adc
clc
ret
jno
push
xor
cmpsb
dec
and
sar
shlb
cmpsb
movsb
sub
add
shrb
cmpl
pushf
insb
pop
push
mov
adc
sub
loope
and
add
ds
xor
jmp
inc
or
jno
sbb
in
sub
loop
adc
cmpsl
dec
sub
xor
rorl
jecxz
dec
psubq
mov
push
mov
pusha
repz
loopne
xchg
xchg
pop
push
rcrl
inc
dec
pop
je
gs
pop
loop
dec
cwtl
mov
xchg
push
sbb
inc
lahf
call
xor
inc
mov
enter
fs
push
xor
mov
mov
cmpsl
xor
lret
push
mov
call
idivl
fcmovbe
arpl
in
inc
ljmp
mov
add
sbb
pop
inc
mov
lods
aas
pop
inc
loopne
cs
push
inc
push
push
int
fwait
idivb
addr16
lahf
xor
push
rolb
and
lds
out
mov
aam
popf
sub
push
test
std
rcl
insl
ret
iret
les
cmp
test
push
daa
cmp
aam
fwait
sub
mov
dec
sbbb
sub
mov
pop
cmp
inc
mov
lods
adc
mov
lahf
xor
fnstenv
push
push
pop
jbe
jmp
arpl
inc
call
dec
or
aaa
dec
test
sbb
aaa
mov
xchg
lret
mov
pop
and
andl
xchg
mov
or
aam
jl
ret
arpl
loope
shrb
mov
push
ds
dec
lds
mov
rolb
fisubl
lea
aam
out
test
sub
mov
inc
xchg
pop
ret
cli
test
xchg
mov
adc
call
cltd
das
mov
push
cld
aaa
jecxz
mov
dec
shlb
mov
jp
fs
mov
dec
sbb
stos
mov
mov
mov
adcb
mov
sbb
sub
aam
xlat
movsl
lea
xchg
xchg
xlat
xchg
out
test
rolb
fisttpll
in
popa
xchg
lock
decl
xchg
scas
jge
andl
push
repz
gs
mov
pop
arpl
aas
js
inc
jg
adc
leave
std
mov
jne
lds
lds
test
dec
lods
sahf
mov
scas
add
popf
lcall
inc
dec
xchg
popa
popa
mov
add
inc
pushf
jno
inc
mov
movsl
sub
cli
das
es
cltd
inc
out
jns
xor
rolb
mov
sub
add
fsts
or
mov
sub
push
cltd
dec
mov
mov
in
lret
lret
mov
rcll
sahf
and
sub
es
stos
ror
cmp
push
and
mov
fidivrs
mov
ljmp
xchg
sbb
push
and
cmp
into
stc
mov
pop
push
mov
pop
sbb
cli
add
and
push
gs
or
aas
fwait
and
iret
cmp
xchg
aaa
mov
clc
dec
push
pop
and
and
push
in
xlat
dec
cmc
jecxz
pushf
lret
dec
add
fmull
std
xor
xor
jle
mov
mov
aaa
sub
fsubl
rcrb
nop
xchg
add
out
std
rcr
insb
xor
add
incl
ss
and
jne
mov
mov
cvtdq2ps
add
inc
lods
aas
xlat
sub
push
cmpb
jp
aas
dec
xor
inc
cmpsb
shrb
sub
or
dec
popf
sbb
add
pusha
shll
mov
scas
popa
ds
nop
push
sbb
cld
mov
stos
int3
insb
jbe
adc
mov
mov
movsb
fwait
mov
dec
mov
movb
jl
je
lock
rcrb
idivb
out
es
movsb
addr16
xchg
mull
mov
in
push
nop
insb
and
int
mov
mov
mov
lea
mov
and
xchg
or
inc
adc
or
dec
cltd
push
xchg
and
sub
push
xchg
jns
sbb
xchg
lds
in
fildl
sbb
mov
nop
das
dec
inc
jmp
test
xchg
mov
mov
jae
mov
mov
lretw
aam
mov
inc
ljmp
sub
sbb
int
mov
stos
inc
sahf
pushf
ljmp
sbb
add
orl
sub
jmp
add
ja
pop
and
cmpsl
pop
mov
hlt
push
js
fstps
jmp
mov
sqrtps
add
icebp
mov
xlat
push
ficompl
fcomps
repnz
dec
add
sub
or
sbb
fnsave
pop
xor
add
repnz
mov
mov
cmp
cltd
push
call
dec
nop
mov
mov
arpl
ds
pop
fwait
mov
scas
mov
test
or
ret
orb
lock
jp
fwait
dec
mov
lret
dec
call
mov
dec
repnz
stc
je
insb
fdivrs
xor
mov
pop
lret
sarl
sub
sub
push
in
out
push
or
xor
lock
out
aas
pushf
dec
mov
jb
mov
into
imull
adc
aam
xorl
inc
xor
adc
inc
jns
mov
mov
push
test
insl
outsl
mov
bound
push
call
shlb
mov
dec
sub
xor
mov
dec
pop
pushf
enter
fldenv
inc
stc
pop
and
stos
mov
mov
dec
stc
pop
in
sarb
dec
add
inc
mov
sbb
add
xchg
loope
shrb
inc
or
pop
ss
in
loope
aad
push
dec
push
rcrl
inc
test
adc
mov
xchg
test
mov
mov
loope
mov
stc
pushf
jg
int
mov
cmp
ret
or
adc
cmp
add
sub
fisttpl
sub
subl
jg
test
in
xchg
mov
repz
jp
xchg
aad
push
xchg
add
add
xor
xchg
adc
xor
inc
dec
fisttpl
mov
cmp
pop
mov
fcoms
mov
scas
in
mov
or
cltd
adc
divl
loopne
xchg
int
outsb
inc
lods
sub
cs
jecxz
incl
mov
push
movsb
mov
out
and
jl
fxch
adc
inc
cwtl
shll
push
sbb
test
adc
mov
loope
cmpsb
rol
pop
inc
sbb
fildll
fcom
popa
pop
cmp
and
dec
sbb
loope
cmp
rol
jmp
andb
mov
xor
daa
add
shlb
int3
out
movb
inc
xchg
leave
adc
dec
sub
aad
ljmp
icebp
and
pop
jo
xchg
sub
mov
mov
and
ja
pop
push
mov
mov
icebp
xchg
pop
and
pushf
jb
inc
aas
sahf
scas
pop
or
push
mov
rcrb
rclb
jecxz
and
xor
rcrl
outsb
mov
xorl
scas
frstor
xor
std
test
popf
imul
fidivl
lcall
add
xchg
add
push
cltd
fnstcw
mov
jbe
jne
adc
cmpsl
in
sbb
addr16
pop
andl
arpl
not
scas
mov
xchg
pusha
loop
lods
inc
fsubp
sbb
shlb
adc
in
fisubl
mov
loope
sbb
aam
pop
cmpsl
jae
lcall
mov
push
pop
cld
out
pop
pop
jne
rolb
and
stos
jecxz
adc
mov
ljmp
lret
shll
rorl
jns
inc
arpl
shrb
adc
cmp
loopne
or
xlat
into
inc
sbb
jle
sbb
out
or
and
sub
sub
jb
jmp
cmc
add
xlat
cmpl
pop
fdivl
pop
adc
nop
or
jl
fstpt
and
popa
xor
add
pop
sub
lret
movsb
mov
aad
add
add
inc
in
mov
xor
movntq
sub
imul
insl
mov
cli
sahf
daa
xor
mov
notb
roll
jmp
inc
push
scas
out
fistl
cltd
aad
into
iret
jae
lock
pop
popa
out
pop
cltd
in
fnsave
mov
shl
or
push
sbb
inc
roll
popf
inc
dec
pop
lahf
xchg
clc
insl
and
ljmp
aas
stos
jns
inc
mov
sub
dec
add
pushf
cmp
sti
repnz
mov
gs
js
imul
cmpsb
cmp
push
faddl
pusha
adc
addl
add
cmpsb
sahf
pop
aas
inc
adc
cmp
sub
inc
adc
cmpb
sbb
imul
dec
lea
lock
scas
xchg
addr16
ljmp
enter
iret
and
push
sahf
mov
imul
adc
inc
sub
pushf
or
add
inc
mov
and
cltd
mov
aam
pushf
sti
inc
lea
cld
pop
flds
mov
scas
lds
cmp
lahf
sub
dec
pop
inc
sub
fmuls
pushf
and
add
add
ss
pop
clc
pop
adc
inc
stos
push
fdiv
inc
pop
popa
push
sbb
fcoml
jg
inc
xchg
imulb
lret
xchg
xor
hlt
xchg
xor
cmp
pusha
data16
jmp
mov
mov
cmp
lret
sbb
movsl
adc
adc
repnz
lock
shlb
xchg
sbb
out
dec
dec
xor
sarb
push
lcall
shlb
mov
push
enter
cwtl
lea
or
out
hlt
outsl
dec
incb
and
addr16
loope
add
pop
into
fiaddl
mov
inc
jle
das
fs
jbe
scas
ret
mov
jle
gs
test
mov
xor
push
jle
and
lahf
xchg
or
jo
jmp
mov
scas
ljmp
xchg
xor
stos
mov
inc
mov
lahf
stos
jbe
cmp
out
dec
inc
cli
pop
in
inc
xchg
mov
int3
xor
popf
push
adc
scas
pop
xchg
adc
loop
adcb
aam
cmp
sahf
push
sub
out
enter
sbb
cmp
sti
mov
jmp
sub
lret
or
mov
xor
arpl
punpcklwd
xlat
xor
jns
pop
jle
sbb
maskmovq
push
dec
cmp
xchg
mov
xor
gs
sub
dec
vpshaq
pop
repz
add
mov
jnp
mov
push
ja
fucomp
cmp
cmp
ds
xor
mov
jo
clc
test
adcl
out
fistpl
and
and
lods
notl
cwtl
sub
popa
je
cmc
mov
jle
jbe
jns
mov
in
pusha
or
sti
fists
cmp
jnp
pusha
out
mov
bound
mov
fldl
lret
ret
mov
into
shlb
xor
loopne
cmpb
sbb
push
repnz
inc
sub
mov
js
fadds
and
call
test
cs
test
lahf
imul
out
or
in
cs
jae
das
inc
sub
mov
out
and
mov
stos
cmp
sub
lods
out
mov
mov
out
push
gs
roll
int3
xor
jl
icebp
mov
js
and
or
cmp
jp
pop
pop
push
pop
cmc
xor
inc
fistpl
js
test
xchg
into
orb
cmp
mov
inc
leave
jle
push
int3
shl
jmp
jle
inc
jl
daa
sahf
push
jecxz
fsubs
push
pop
shrl
cmpsl
mov
enter
adc
jmp
cmp
xchg
mov
stos
pop
jmp
leave
in
fcompl
jg
iret
in
pop
push
sub
xchg
adc
xor
int
xor
sub
mov
int
inc
jecxz
xchg
pop
dec
negl
xchg
imul
xor
inc
stc
dec
xchg
lea
cmp
mov
xchg
nop
sbb
out
xchg
push
push
fcoml
inc
jg
in
fsubrp
imul
ja
ljmp
cmpsb
pop
push
and
and
gs
push
mov
je
and
push
push
pusha
lcall
sbb
adcb
lock
ss
and
bound
and
loop
cwtl
or
dec
pusha
out
push
jne
lret
fbld
repz
sub
xchg
sbb
out
and
add
fisttpl
aam
icebp
lods
icebp
xchg
stos
add
inc
or
lods
push
jb
mov
hlt
pop
lock
insb
mov
test
pop
mov
mov
data16
out
push
or
mov
pop
iret
imul
add
xchg
enter
adc
stc
jo
int
int
sbb
lahf
sti
cmp
push
lods
and
lock
push
pop
mov
mov
jb
sub
push
mov
and
jns
cmc
mov
enter
adc
mov
dec
sub
das
leave
xchg
push
loop
push
shll
mov
addr16
add
xchg
mov
xchg
rorb
mov
sub
and
pop
and
pop
popf
loope
inc
cltd
or
pop
add
in
xor
push
pop
fldcw
fs
inc
push
jge
scas
xchg
fildll
ror
dec
lea
push
sbb
xor
pop
test
jbe
repz
xchg
or
in
xchg
repz
mov
pop
insl
dec
call
jmp
dec
xlat
lock
popa
mov
cmpsl
or
mov
mov
mov
mov
lcall
fwait
or
adcb
cmp
test
pop
jo
aam
and
push
push
adc
inc
add
std
scas
pop
xor
push
popf
push
mov
inc
fistpll
bound
dec
xchg
mov
aad
and
rclb
test
push
dec
xchg
ror
mov
xor
mov
jl
inc
pushf
js
call
jne
or
std
dec
jg
dec
lcall
bound
arpl
lock
in
xor
and
insl
out
inc
jle
movsl
ret
xchg
cs
inc
and
mov
gs
cmp
xlat
loop
xchg
add
sub
xlat
add
idiv
adc
outsl
inc
scas
pusha
rorl
xor
jge
push
pop
dec
movsl
adc
pop
or
ljmp
jb
js
sbb
xchg
or
jae
pop
lods
aas
jp
jle
aas
test
dec
pop
xor
test
rdpmc
shr
or
ret
loop
outsb
jns
fidivrs
scas
je
mov
xor
inc
outsb
xlat
iret
dec
xor
fbstp
xor
add
dec
repnz
mov
int
xor
sbb
mov
or
mov
mov
xlat
dec
out
cmp
sub
jno
repz
fwait
testl
pop
jecxz
cmp
pop
mov
dec
in
jle
inc
rcll
inc
mov
jmp
mov
leave
mov
out
pop
dec
pop
mov
fcmovne
popf
lods
xchg
std
lahf
xchg
aad
popa
cli
test
lret
pop
mov
arpl
aam
js
fxch
mov
into
cmp
xor
loopne
xchg
sub
lret
mov
mov
fstl
bound
adc
push
xor
lods
inc
mov
les
mov
addr16
jae
mov
push
popf
mov
jp
clc
jp
std
pop
jge
mov
testb
cmp
pop
adcb
pop
aaa
pushf
and
adc
adc
xchg
mov
negl
jecxz
cli
jge
xchg
and
addr16
adc
mov
pop
xchg
sbb
cmp
fs
aad
lret
pop
inc
mov
int3
arpl
adc
cwtl
dec
sub
loop
sub
subb
out
cmp
xchg
rcl
aad
mov
cltd
leave
jle
or
dec
mov
ss
mov
inc
push
pop
aas
mov
pop
cltd
mov
insl
adc
mov
in
addb
pushf
sbb
jp
inc
add
add
jb
clc
mov
push
rorl
stc
xor
ja
idiv
repz
in
loopne
push
lret
in
je
sbb
clc
movsl
test
or
ret
xchg
mov
data16
mov
xchg
adc
cld
pop
and
mov
and
int3
sbb
icebp
in
jno
mov
cmpsb
ja
add
std
aam
mov
jbe
dec
push
xchg
stc
pop
cmp
je
repz
push
movsb
scas
aas
ret
and
push
loope
inc
aaa
sahf
in
xor
pop
leave
mov
icebp
imul
testl
scas
inc
push
mov
rep
add
mov
inc
addr16
or
enter
xchg
movsl
rorl
mov
mov
fcomi
repz
mov
push
adc
mov
mov
enter
les
out
lock
data16
jo
xchg
daa
fs
in
push
adcb
loope
xor
ret
pop
popl
cltd
push
loope
test
fdiv
ja
iret
adc
fsubl
das
pop
pop
jnp
sti
idiv
ja
cld
sub
jne
lcall
ret
in
stos
ret
push
sbb
adc
lock
pop
sar
sbb
mov
sbb
mov
fs
inc
scas
cmp
jne
es
cmp
shlb
adc
cld
sbb
insl
push
sbbb
movsl
cmpsl
mov
adc
int3
mov
fidivs
xor
clc
xor
cwtl
dec
or
jl
js
vxorps
or
sahf
pusha
aam
mov
shlb
imul
or
mov
enter
scas
pop
sbb
sub
xor
jnp
popf
mov
jnp
push
negb
sbb
and
test
xchg
pushf
mov
test
push
adc
xchg
push
pop
mov
jne
negl
mov
fcmovbe
ret
inc
scas
push
into
bound
fs
imul
fildll
inc
insb
leave
cmp
fsts
std
cmp
jmp
adc
fmull
and
jl
enter
aas
test
enter
popl
call
push
popf
leave
inc
aad
divb
ss
cmp
orl
callw
cli
std
push
jle
das
mov
fildll
lea
clc
or
and
jae
cld
jb
pushf
cmc
xchg
xchg
dec
lea
push
and
fwait
xchg
add
cmpb
xor
add
xchg
inc
lea
xchg
sbb
popf
mov
lahf
jnp
data16
xchg
adc
mov
mov
fs
incb
xlat
inc
or
cwtl
imul
xchg
push
xchg
add
shll
mov
mov
scas
mov
mov
dec
sti
ljmp
mov
jp
xchg
sti
in
xor
outsb
sbb
lcall
inc
bound
fistl
jl
add
jp
cmp
or
add
pop
lret
xor
insb
idivb
xchg
lret
jb
enter
stos
je
out
clc
or
inc
iret
mov
or
shrb
mov
adc
in
cmc
add
repnz
mov
test
pop
mov
push
sub
lcall
addr16
xorb
fwait
or
rcrl
xchg
adc
sarl
add
push
xchg
mov
dec
or
mov
ja
scas
inc
cmp
jp
aad
adc
adc
pushf
dec
xchg
jns
testl
jge
int3
adc
add
clc
or
fsubr
or
xchg
adc
repz
lret
inc
dec
divl
push
int
push
std
call
push
or
fiaddl
inc
lock
rcrb
pusha
ret
adc
enter
adcl
cs
leave
adc
shr
cmp
jo
push
ja
in
sub
mov
sub
call
das
ret
jge
push
imul
push
sti
rcrl
mov
mov
cltd
stc
and
call
ror
mov
hlt
or
in
sbb
out
push
fimuls
int3
aam
pop
das
jbe
das
std
stc
out
sbb
dec
pop
add
int
mov
sbb
mov
pop
mov
xor
jae
fxch
leave
sub
mov
xor
dec
dec
or
sub
lea
fxam
ds
cmp
jae
cmpsb
cmp
xor
aas
adc
dec
cmp
out
adc
orl
mov
aad
aam
push
and
add
test
ret
das
mov
imul
rcr
pop
and
call
add
inc
in
iret
fwait
jecxz
push
call
cld
mov
gs
imul
data16
dec
subb
sub
mov
or
cmp
or
icebp
cmp
xchg
pop
int3
ja
andb
lret
test
lods
push
sub
sbb
mov
bound
xchg
addl
js
mov
xor
jo
cmp
mov
fisttpl
sbb
cmp
ret
dec
adc
xchg
ss
popf
out
sarb
lock
rcr
leave
in
xor
test
in
lds
int3
pop
lahf
loopne
cmpsb
push
xchg
jnp
mov
into
bound
pop
aas
pusha
cld
test
movsl
sbb
sub
out
cmp
xor
int3
loope
dec
aaa
sbb
imul
cs
fisubs
inc
jnp
stc
cld
push
dec
pop
xorb
jbe
negb
adc
test
sub
lcall
pusha
ficoms
or
xchg
xchg
sub
fsubrp
cltd
and
cmp
fiadds
cli
mov
insl
xchg
mov
dec
inc
add
mov
xchg
mov
icebp
mov
test
or
ret
pop
inc
out
cmp
push
sti
adc
mov
or
sbb
or
jmp
fmull
subb
or
dec
lret
and
mov
es
dec
mov
sub
imul
xor
stos
inc
addb
push
push
iret
jl
jle
ffreep
pop
or
cmc
cmp
fwait
jle
add
dec
xor
gs
jge
sahf
inc
mov
aam
lea
arpl
xchg
bound
pop
shll
sbb
jo
inc
dec
mov
outsl
movsb
lds
pop
sub
ret
aad
cwtl
and
push
dec
pop
add
and
icebp
in
lcall
xor
popf
testb
sbb
outsl
cmc
testl
in
adc
pop
cmp
cmp
mov
je
pushf
mov
je
fwait
pop
inc
nop
xchg
dec
add
push
insl
or
and
sub
ss
divl
shr
loop
mov
dec
or
xchg
shrb
imull
call
sub
fiadds
dec
or
push
xchg
fnstsw
mov
fptan
lcall
inc
movsb
dec
into
fwait
xchg
fmull
dec
xchg
jne
lods
mov
in
sub
xchg
add
xorb
lea
jmp
sub
ror
push
adc
int
call
push
clc
leave
out
cmpsl
mov
out
add
dec
cmp
mov
pop
jg
or
sub
movsl
xor
mov
rolb
frstor
nop
daa
push
xorb
pop
lods
fistps
aad
sbb
pushf
lods
pop
sub
mov
fiadds
mov
rcl
pop
outsl
mov
or
mov
mov
xlat
cmp
fnstcw
add
sub
mov
mov
push
jge
pop
mov
fwait
in
xchg
sub
adc
jl
imul
sbb
jbe,pt
out
push
mov
pop
mov
push
insb
rorl
mul
xchg
gs
fimuls
xchg
or
xchg
and
push
xchg
pop
aam
dec
mov
pusha
fst
int
mov
mov
mov
mov
repnz
lods
cld
pop
mov
loop
or
pop
int3
jbe
out
ds
mov
rcl
add
jo
lret
and
int3
pop
xor
push
dec
xchg
sahf
int3
adc
test
insb
test
jecxz
xor
test
movsl
jne
bound
cltd
pop
push
shlb
pop
mov
lret
xor
cmc
and
jne
dec
add
xor
out
ljmp
xchg
loopne
or
les
and
lock
mov
imul
into
lods
mov
mov
push
jne
mov
rorl
add
insl
mov
les
pop
xchg
repz
nop
mov
mov
sub
pop
data16
cli
mov
pop
add
sti
xchg
pop
icebp
dec
or
push
pop
push
mov
shl
pop
cmp
fs
xor
mov
loope
jmpw
cmp
movsb
scas
lret
data16
ret
xchg
mov
or
xchg
cld
in
dec
mov
mov
inc
aam
outsb
mov
sbb
xchg
dec
push
xchg
pop
adc
xchg
into
lea
cmp
and
jb
push
inc
xlat
fildl
mov
movsl
movsb
jecxz
jmp
stos
push
pusha
aas
ds
cld
mov
aaa
clc
enter
pushl
xchg
cwtl
repz
notb
mov
sarb
dec
stos
mov
xor
scas
xor
mov
mov
jns
xor
inc
arpl
mov
jne
push
lock
in
cltd
pop
fildl
rcrl
mov
xchg
dec
ret
push
in
popa
ret
xchg
inc
xchg
das
adc
and
adc
int3
adc
push
popf
fs
ds
xchg
push
sub
push
add
mov
leave
mov
ret
mov
enter
ljmp
mov
xorb
imul
call
push
pop
movsb
roll
lcall
jae
dec
push
mov
mov
dec
pop
push
mov
dec
pushf
sbb
aas
sub
xchg
and
mull
xor
cmp
imul
xchg
imul
sub
add
inc
dec
or
mov
imul
add
hlt
repz
lds
push
test
fs
inc
gs
stc
dec
shrl
xchg
ja
imul
or
add
lods
lods
mov
cmp
dec
mov
dec
sbb
mov
dec
aas
out
insb
dec
cmp
pop
in
arpl
sub
jg
push
loope
imul
test
loope
fiaddl
or
cwtl
gs
xor
inc
pop
shrb
outsb
mov
mov
mov
sub
loope
mov
and
cmpsl
insb
outsl
lds
testb
imul
jo
mov
pushf
dec
add
stos
sbb
pop
dec
ja
in
push
gs
xchg
sub
outsb
jb
sbb
cmp
jbe
stos
xchg
and
push
fsubs
inc
push
pop
jo
repnz
dec
shlb
and
repz
jmp
insb
inc
xchg
pop
movsl
ret
mov
sbb
sub
cmp
movsb
in
dec
jmp
lahf
sub
shl
aad
inc
adc
mov
aam
pop
test
lahf
sub
fstps
rclb
xchg
xchg
push
xchg
aaa
lret
gs
sbb
mov
dec
add
add
mov
cmp
push
jnp
loope
mov
cld
inc
or
test
push
stc
js
movsl
xchg
ret
cmp
mov
cmp
or
int3
add
test
dec
arpl
in
push
lds
sub
in
push
mov
push
xchg
and
xchg
sbb
lods
cmp
push
negl
sub
pop
sbb
sub
dec
sub
fadds
or
fcoms
nop
aaa
dec
lahf
cmp
repnz
dec
loopne
and
jp
pop
push
std
xor
hlt
mov
lods
int
loopne
neg
mov
popa
pop
dec
xchg
mov
fcomi
pop
cltd
les
pop
hlt
mov
xchg
cmp
lock
or
sbb
unpcklps
dec
into
cmpb
mov
inc
daa
mov
mov
pushf
and
fdivrl
cmpsl
sbb
lahf
out
mov
jecxz
mov
ficoms
leave
inc
sbb
or
sbb
push
mov
or
les
push
cmp
sarb
std
push
dec
or
pop
pop
cmp
ds
or
ret
popf
mov
mov
cmp
jo
xchg
push
stos
stos
icebp
ja
bound
mov
aam
or
andl
xorl
sub
mov
test
ret
sahf
xor
add
sbbb
ret
loop
add
pusha
sbb
mov
int
cwtl
lods
mov
leave
pusha
cmpsl
jecxz
lcall
xchg
subl
push
jle
push
out
sub
jmp
outsb
ss
mov
mov
push
in
push
mov
sahf
in
enter
popf
fcmovne
adc
xchg
push
or
ds
jge
mov
fucom
jns
scas
and
push
cwtl
push
out
andb
in
loop
xchg
jp
mov
cs
push
sub
shr
stos
enter
mov
mov
insb
dec
stos
cmc
imul
sbb
outsl
jp
cltd
outsb
dec
mov
sub
cmp
rolb
cli
shlb
imul
daa
dec
int
test
jecxz
jg
sub
sub
jecxz,pn
repz
mov
dec
cmp
sbb
sbb
fstpl
fs
nop
mov
xor
jmp
xor
dec
cmp
pop
lea
xor
aaa
andl
push
scas
mov
cld
lods
and
fs
pop
cmp
xor
inc
rcrl
mov
sub
mov
mov
xchg
lock
scas
jmp
ja
fs
scas
lcall
pop
es
xchg
pop
and
outsb
shll
add
cli
aaa
push
xor
sub
dec
xor
jmp
aad
lods
jmp
jecxz
cwtl
nop
xchg
fsubrl
and
ljmp
pop
iret
cltd
out
ds
pushf
mov
les
xchg
icebp
out
mov
aaa
sbb
jp
sbb
mov
dec
jg
cmp
movsb
adc
les
cmp
adc
in
rcll
in
notl
push
std
pop
mov
es
dec
ret
push
xchg
xchg
jnp
dec
jne
sarl
stos
add
ret
ljmp
xor
push
xchg
dec
mov
or
xchg
daa
mov
pushf
jno
push
cltd
jecxz
mov
mov
cmp
and
or
ficoms
or
and
dec
ret
shll
xor
mov
lahf
out
pop
stos
sbbl
xchg
rol
xor
fs
dec
shrl
xor
sbb
jb
mov
movsl
xchg
fdivl
shl
push
and
jl
ljmp
push
push
sbb
adc
xor
sbb
pushf
mov
pop
pop
enter
call
call
aam
push
movsl
bound
mov
push
add
cmp
and
mov
jge
push
fidivrl
push
out
jo
xchg
bound
out
lods
jge
xchg
xchg
pop
ja
aaa
push
out
push
cs
sbb
stos
arpl
pushf
js
sbb
mov
rorl
pop
addr16
repz
jns
aas
mov
and
std
in
insl
push
pop
xlat
mov
xchg
in
fcmovnu
mov
xorl
std
clc
int3
pop
mov
push
fwait
das
jns
test
addr16
imul
insl
mov
rcr
inc
leave
lock
xor
xchg
mov
movsl
imul
movsl
jmp
xor
push
popa
mov
jle
sbb
cs
stc
and
outsl
mov
xchg
shr
mov
xor
xor
pop
pushf
dec
xor
dec
outsl
and
fwait
ja
dec
rcrl
jnp
int
jl
loopne
pop
out
xor
push
mov
loopne
mov
jne
dec
insl
pop
add
or
push
pop
add
js
dec
leave
add
data16
adc
mov
pop
inc
mov
std
xor
idivl
fdiv
fwait
idivb
cmp
cmp
movsl
mov
xlat
in
sbb
ds
xchg
in
cmp
push
sahf
jp
mov
cmc
mov
mov
push
xchg
pusha
insb
push
out
sub
jmp
xor
outsl
nop
mov
into
mov
jno
push
and
xor
sub
and
scas
sub
mov
adc
ja
in
push
adc
push
mov
mov
adc
sbb
roll
cli
cmp
lahf
aad
ljmp
je
movsl
push
sbb
shr
popf
inc
in
arpl
cmp
outsb
push
in
cmp
insb
cmp
lcall
mov
push
je
adc
cmp
shr
call
lret
or
push
mov
movsb
adc
insl
pop
or
test
mov
push
std
mov
mov
fimuls
testl
mov
imul
call
pop
or
ret
jbe
cmp
xchg
mov
stc
push
add
jl
subb
dec
adc
out
icebp
ljmp
inc
xor
sub
sarb
xchg
cwtl
out
in
ret
lds
add
jnp
call
jo
pop
cltd
pop
xchg
jge
sbb
cmp
adc
and
xchg
push
jb
scas
nop
mov
xchg
mov
inc
cmp
push
inc
mov
pop
sub
andb
lods
xor
pop
push
sbb
test
inc
inc
push
dec
xchg
or
xor
push
pop
push
mov
aam
cwtl
pop
mov
inc
mov
cmp
add
push
sub
and
push
lds
pop
daa
jl
faddl
xchg
push
fsubrp
or
out
pusha
shrb
enter
dec
pop
mov
mov
lock
pusha
lods
mov
jecxz
sbb
mov
inc
cmp
stos
popa
jb
pop
hlt
movl
or
movsb
popa
jnp
stc
inc
mov
and
outsl
fldl
addl
daa
lahf
pusha
jecxz
and
xchg
or
rclb
test
cs
cld
mov
dec
jge
outsl
inc
push
into
repnz
scas
movsb
out
sub
stos
mov
lock
push
or
lock
xor
mov
jo
jne
mov
mov
pop
ja
aam
dec
in
imul
ret
nop
mov
in
jae
mov
pop
xchg
out
lods
add
sub
movsl
push
daa
pop
push
sbb
sti
repnz
inc
out
stc
movsb
fdivl
or
sti
and
mov
or
stc
and
scas
mov
xchg
pop
mov
out
sahf
dec
cs
roll
push
pop
push
cld
sbb
outsl
fisubrl
xor
push
cmp
inc
xor
insl
dec
out
sbb
or
repz
pusha
call
std
adc
arpl
cwtl
add
lret
xchg
and
dec
inc
es
cs
xor
dec
jne
jmp
dec
pop
xchg
pop
add
jp
jmp
pop
pop
in
mov
aaa
lods
sub
pop
adc
repz
in
mov
popf
fnstcw
ret
test
cmpsl
call
push
jg
ret
mov
mov
and
fnstsw
and
jecxz
ret
lods
dec
out
sub
clc
and
rol
ljmp
stos
pop
jle
mov
mov
outsl
pop
push
cltd
push
inc
ja
mov
pop
or
rep
add
and
imulb
add
sub
mov
mov
test
pop
into
pop
les
xchg
mov
mov
iret
cli
sub
test
aaa
xchg
xchg
pop
pop
iret
mov
adc
cmp
and
xor
lcall
jnp
fildll
scas
addr16
adc
ss
test
loope
pop
sbb
scas
mov
sub
xchg
mov
stc
xchg
cmp
sub
out
mov
shlb
jecxz
push
adc
pop
sarb
and
repz
lcall
repnz
mov
test
dec
dec
jmp
cmp
and
sbb
pusha
xchg
or
pop
incb
bound
push
and
lret
jle
sub
movsl
shrb
lret
xor
pop
pop
sarl
cmpsb
in
fstpl
inc
mov
dec
rorb
les
int3
dec
test
dec
push
stos
pop
sbb
mov
sub
and
pop
out
data16
gs
sbb
jmp
enter
cld
add
arpl
decl
ja
mov
add
lds
dec
iret
test
sbb
ja
inc
subb
test
xorb
pop
icebp
mov
std
aam
inc
xor
lods
lret
jmp
inc
shll
insb
inc
hlt
iret
je
mov
mov
mov
sbb
lcall
loop
fdivs
jbe
mov
cmp
inc
fs
lds
std
mov
pop
cmp
mov
mov
adc
sarb
inc
mov
cmp
xchg
mov
gs
repnz
aas
sub
cli
lahf
lds
jge
xchg
push
icebp
mov
mov
aam
mov
stc
in
out
repz
lret
push
pushf
rol
mov
add
xchg
sbbb
int
out
adc
inc
add
cmp
scas
add
ja
test
arpl
sarl
fwait
or
xchg
xchg
xchg
sbb
call
and
mov
jo
mov
lcall
sbb
lods
out
test
and
add
sub
jg
push
mov
push
ror
out
test
sub
mov
leave
sahf
jno
loope
enter
pushf
and
xchg
push
leave
jae
pusha
mov
lret
test
jmp
leave
mov
xchg
ror
cmp
repz
jge
mov
mov
jno
and
cmp
out
fadds
mov
adc
inc
jmp
dec
pop
je
xchg
sbb
bound
cwtl
int
lods
sbb
int
lcall
sarl
in
jp
pop
out
jmp
xlat
dec
jecxz
fistpl
aaa
xor
push
std
pop
into
mov
int3
lcall
and
rclb
outsl
dec
outsb
or
and
popa
test
adc
xor
lds
add
inc
xor
pop
popa
dec
pushf
xlat
cwtl
or
add
gs
inc
inc
mov
inc
fidivs
mov
add
mov
fldl
sub
fistpll
loop
int3
dec
icebp
loop
sbb
mov
inc
adc
ljmp
cmp
jg
outsb
mov
sub
xor
lock
lods
jge
sub
into
loope
lds
in
gs
inc
pop
xor
mov
push
lret
aas
lods
push
sub
clc
into
cmp
jp
hlt
in
loopne
addr16
fwait
jl
addl
iret
push
test
mov
movsb
sub
sub
sub
test
orb
push
pop
es
int
lock
sub
push
aad
or
adc
shrl
dec
int
fnstenv
ljmp
out
xor
in
aad
mov
inc
shlb
gs
cltd
xor
sbb
iret
or
sti
cmp
push
ss
nop
loopne
ret
dec
xchg
ret
cmpl
imul
movsb
push
test
adc
mov
push
fstpt
in
mov
add
mov
into
xchg
jle
jle
xorb
fcoms
lahf
lods
add
lods
mov
and
out
inc
dec
icebp
shll
ljmp
mov
xor
je
and
loope
rcll
jbe
push
loopne
xchg
xchg
jae
xchg
cli
jmp
push
dec
fidivrl
mov
pop
scas
insl
fdivrl
jae
jmp
xchg
das
xchg
cmp
or
test
cmp
je
mov
bound
fistpl
pop
lock
das
pushf
outsl
push
aam
mov
loop
or
and
aad
cwtl
cmp
sbb
pushf
inc
lea
loopne
sub
rcrb
aaa
inc
ljmp
xor
arpl
gs
cld
push
imul
mov
inc
outsb
jae
shll
inc
inc
hlt
xor
fs
popf
mov
pushf
or
mov
fs
dec
xchg
iret
es
push
jg
out
or
push
push
or
sbb
popf
xchg
imulb
cltd
or
dec
je
pop
inc
les
jecxz
and
add
shll
push
mov
dec
clc
cmove
sbb
mov
jg
enter
and
pusha
fisttpll
dec
cmp
pop
xchg
xchg
jnp
iret
out
pop
lret
rorb
loope
adc
pop
mov
cmp
loopne
daa
es
jb
stc
loope
sbbl
fwait
xchg
repz
outsb
in
xchg
stc
xchg
mov
mov
inc
mov
and
jg
int3
fucomp
sub
std
xor
lods
ret
rep
xor
daa
cmp
test
xor
shlb
sbbl
cmc
jne
cld
rcll
dec
cld
xchg
popa
cs
xchg
daa
jp
push
aam
jne
rclb
cwtl
mov
adc
outsb
mov
scas
scas
gs
roll
pop
sub
mov
mov
lret
jmp
rcrb
mov
out
movsb
pop
sbb
cmpsl
rcr
and
icebp
add
inc
loop
pop
lds
scas
xorl
addb
xlat
daa
aam
xchg
je
cwtl
cmp
popaw
adc
aam
rclb
fimuls
sahf
xor
xchg
leave
mul
fcoml
bound
loope
sub
sbb
mov
push
leave
pop
inc
icebp
mov
fs
lods
inc
push
dec
sub
or
cs
mov
daa
into
fs
mov
push
or
jp
mov
jo
clc
xor
into
mov
jge
mov
ret
add
add
cmc
cs
imul
cltd
jle
inc
xchg
xchg
pop
cs
ja
mov
mov
fwait
mov
pop
add
and
ficompl
sub
aad
icebp
sub
add
jl
lods
xor
test
and
call
jnp
test
aam
ljmp
cs
mov
mov
mov
jge
sbb
decb
inc
pop
imul
mov
sti
cmpsb
ficompl
imul
jecxz
jnp
pop
jle
loop
pop
mov
pop
repnz
inc
outsb
outsb
push
push
lahf
pop
rorl
add
ror
imulb
je
out
or
mov
jns
add
aaa
aam
or
jmp
in
stos
xor
arpl
push
lcall
cmpsl
int
gs
push
dec
pop
pop
addr16
ret
mov
shlb
dec
adc
arpl
arpl
mov
dec
inc
push
adcb
rorb
pop
out
lds
sbb
mov
mov
mov
stos
mov
cld
ds
outsl
cmpb
inc
push
pushf
loop
push
xor
or
fildl
add
test
jge
xorl
dec
loopne
and
enter
ret
stos
das
nop
imul
out
inc
jnp
inc
lret
gs
push
mov
dec
push
inc
mov
cmpsl
sub
out
mov
mov
pop
push
xchg
or
and
mov
mulb
and
or
adc
add
fsubr
dec
fdivrp
jne
mov
jae
je
fldcw
mov
xlat
orb
fmuls
cmc
in
imul
cmp
sti
notl
scas
cmp
in
sbb
dec
sub
mov
mov
mov
mov
and
dec
xchg
leave
filds
jnp
in
pop
addr16
xchg
inc
out
sub
decl
sbb
cwtl
push
addr16
jl
cmp
cmp
inc
pop
hlt
jns
sbb
dec
cld
lret
sysexit
pop
rolb
addr16
mov
out
dec
xor
aam
add
dec
sbb
lds
mov
and
mov
rclb
into
mov
test
rcrl
jge
mov
out
mov
sub
and
popa
push
insl
sbb
fwait
sbbl
jg
aad
decb
xchg
lods
enter
sbb
xchg
mov
pop
mov
or
cmp
push
jmp
fmuls
mov
mov
cmpsb
add
jns
jb
incl
xchg
sub
lds
dec
call
out
fwait
std
add
inc
outsl
dec
inc
xchg
and
jns
xor
xchg
jne
push
hlt
sbb
xor
cmp
xchg
and
shr
movsb
xorb
stc
push
out
outsb
les
cmp
adc
jecxz
pop
mov
sbb
push
jb
jae
mov
aaa
std
aas
test
jne
dec
icebp
sbb
mov
inc
xchg
pop
scas
std
dec
divb
popa
dec
sbb
mov
or
inc
jl
std
jg
adc
inc
sub
adc
push
mov
pushl
mov
sub
lods
pop
pusha
loopne
xlat
pop
cli
or
call
xor
aaa
int3
mov
xchg
mov
and
and
clc
mov
outsb
fcmovnb
shll
mov
push
jne
cmp
mov
inc
xchg
dec
lock
push
xor
fidivs
in
dec
insb
jecxz
out
lret
in
mov
clc
push
mov
aas
mov
mov
sub
addl
dec
dec
std
push
repnz
pop
jno
imul
pop
add
push
mov
orl
adc
and
pop
insb
jne
pusha
shlb
push
fisubrl
xor
out
aaa
iret
adc
lret
lea
stos
testl
cltd
mov
cmp
movsl
push
sahf
adc
cmp
jno
es
call
jbe
mov
jg
mov
push
push
add
sbbb
jns
stc
out
inc
adc
scas
jno
mov
xlat
scas
shl
mov
sahf
mov
add
push
xlat
sub
or
out
cmpsb
dec
inc
mov
pop
lods
adc
lods
inc
stc
mov
xchg
pop
mov
mov
hlt
fst
inc
push
mov
push
mov
dec
or
stc
stos
cwtl
push
pop
xchg
inc
xor
lods
movsl
adc
sub
sub
clc
lds
test
aas
aaa
ret
xchg
jne
pop
imul
shll
push
gs
jg
push
cmp
daa
push
pop
loop
leave
jge
sahf
dec
ja
push
mov
cld
jge
inc
popa
test
xor
mov
hlt
nop
dec
push
mov
sub
movsl
add
aaa
cmc
adc
mov
in
dec
add
nop
addb
cmp
push
jl
daa
repnz
test
aaa
js
push
inc
std
cltd
mov
pop
test
arpl
es
fisubs
aam
jg
push
dec
push
push
loope
push
sub
aad
jnp
adc
mov
xchg
popa
sub
mov
hlt
andl
pop
inc
or
and
lods
loopne
aaa
cmp
jle
sahf
sub
mov
clc
inc
loope
dec
jne
jae
jb
push
and
push
pushf
dec
fdivl
xlat
sysexit
cmp
dec
adc
cmp
pop
in
pop
mov
hlt
scas
inc
push
cli
pop
push
imul
mov
cld
jmp
outsb
push
cli
test
pop
fcmovne
aaa
lret
push
push
jge
cmp
andb
hlt
jp
clc
mov
shll
jno
inc
sahf
xor
add
shl
shll
lcall
pop
movsl
add
test
fscale
outsb
inc
jg
xchg
and
adc
xchg
arpl
arpl
jae
xlat
testb
je
xchg
insl
and
push
stos
cmpsb
aam
fidivrs
aad
sbb
adc
jns
and
adc
lret
mov
adcl
inc
push
ret
addb
mov
sub
cli
sbb
repz
loop
xchg
xchg
sbb
mov
cmpl
jns
jae
jp
push
mov
push
mov
jo
push
in
lret
pop
arpl
dec
mov
adc
enter
push
dec
xor
mov
xor
jno
or
add
popf
pop
push
lds
and
inc
test
xchg
cmp
aaa
mov
xchg
jae
cmp
mov
lret
inc
inc
and
bnd
mov
or
in
xor
lods
or
decl
fcmovnb
icebp
notb
inc
push
andb
xchg
pop
pop
outsb
sbb
imul
les
rorl
mov
pop
sub
addr16
cwtl
dec
adc
push
xor
fs
arpl
test
lret
out
movsb
sbb
add
repnz
test
std
adc
ret
les
dec
mov
insl
fdivp
jbe
arpl
rcl
and
int
xlat
fwait
cmp
fisttps
loopne
scas
mov
xor
andb
into
into
mov
lret
sahf
add
repz
adc
sub
sub
icebp
xchg
jb
hlt
xor
mov
push
nop
sbb
cld
mov
jp
xor
inc
out
int
pop
inc
and
mov
sbb
sbbb
pop
pusha
cld
sbb
lds
sti
push
leave
gs
mov
rclb
jp
xchg
sub
or
mov
xchg
cwtl
push
out
jle
push
loope
pop
popa
xchg
in
jbe
inc
mov
cmpsb
outsl
aas
cmp
sbb
jg
int3
dec
xchg
popa
les
or
enter
stos
call
lahf
out
lea
push
jmp
loop
dec
mov
pop
out
out
sbb
les
push
subl
cmc
cmp
fidivrs
dec
jmp
loop
xor
cmp
test
test
adc
gs
push
sbb
push
inc
xor
sbb
and
rorb
sub
push
xor
inc
mov
inc
in
out
ret
lret
xlat
popa
adc
sub
insl
and
ret
or
sahf
pop
pop
xchg
int
mov
daa
sbb
pop
jo
push
pop
jle
pop
mov
mov
push
insl
cmpl
int3
lahf
and
outsb
lock
push
test
push
adc
mov
jge
aad
sbb
mov
sbb
in
xchg
push
shll
fstps
mov
in
xchg
jno
or
push
ja
mov
add
adc
int
int3
xchg
movsb
fwait
int
cmpsl
dec
rep
rcrl
push
das
lahf
pop
aaa
push
mov
das
out
inc
inc
sbb
add
mov
sub
jnp
lock
in
add
mov
inc
inc
mov
stc
stos
sbb
and
jae
mov
aas
cmp
daa
insl
pushf
roll
test
pop
pop
sbb
adc
lods
aam
xchg
gs
adc
fsubrs
mov
pop
movsl
push
lods
sub
dec
lahf
cmp
push
jb
push
insb
mov
pushl
mov
cmc
xchg
mov
int3
hlt
enter
scas
mov
jnp
adc
inc
int
shll
roll
lods
fbld
mov
push
or
adc
rcl
jg
shlb
xchg
pop
jg
pop
rcrb
in
cmc
push
and
sbb
mov
stos
cltd
fdivrs
cmpsl
dec
mov
fmuls
jo
out
mov
jp
or
fsts
mov
mov
stos
mov
ljmp
cld
mov
std
jno
mov
add
loope
xor
sub
xorl
pop
xor
scas
stos
sub
push
test
loop
cmpsl
movsl
ss
jl
addl
stos
outsl
push
or
mov
mov
fiaddl
pop
in
sbb
sub
push
push
stos
inc
imul
fisubrs
fsubrl
aaa
and
ss
addb
loop
jo
stos
pushf
aam
sbb
jl
mov
push
pop
jb
sbb
and
mov
sti
psubb
ja
jo
cmp
fimuls
inc
fucomip
sbb
ret
pop
aam
or
pop
shll
je
loop
cmc
repnz
jns
ret
stos
jb
sbb
add
es
ljmp
jne
sub
pop
cmp
inc
mov
dec
inc
mov
cmpsb
enter
scas
fbstp
adcb
mov
jo
fs
fistpl
loope
out
or
js
push
aas
inc
lret
mov
rcr
jmp
fnstcw
push
data16
ds
punpckldq
jo
sbb
mov
sahf
sbb
insl
mov
cmp
or
cmp
sbb
cwtl
jle
fildll
jne
cwtl
bound
lcall
iret
movsl
fcmove
sub
aam
hlt
popa
aaa
adc
pop
dec
test
aaa
push
add
gs
sub
cmp
insl
clc
idiv
cmp
pop
jae
aam
mov
into
flds
aas
pop
idivl
mov
daa
or
xlat
mov
ds
pop
in
push
inc
movsb
arpl
xchg
inc
mov
movsb
int
xchg
ret
cmp
test
ret
push
bound
xchg
inc
ficomps
addr16
dec
mov
push
xor
push
jle
fmulp
pop
incl
pop
inc
cltd
out
movl
jnp
mov
inc
in
sbbl
les
jno
jp
outsw
adc
js
sbb
aam
mov
aaa
sahf
mov
movsb
lret
lock
inc
inc
shr
jg
pop
cmp
or
xchg
cmp
mov
mov
add
stos
mov
and
in
xor
jns
dec
dec
jne
ljmp
mov
dec
sbb
mov
adc
dec
dec
mov
xchg
jno
dec
fldcw
mov
addr16
xor
je
dec
fbld
shr
enter
sub
mov
mov
add
xor
mov
mov
negl
and
push
mov
or
mov
es
pop
dec
in
mov
aaa
push
bswap
mov
pop
inc
cmp
loopne
out
adc
sbb
jecxz
jb
push
adc
int3
hlt
sbb
fwait
xchg
cmpsb
dec
aaa
adc
xlat
fwait
jnp
lods
cmp
push
aas
out
popf
std
aaa
push
jg
inc
clc
in
js
cwtl
out
add
nop
aas
cmp
daa
sbb
nop
test
leave
or
adc
push
jno
mov
xchg
inc
mov
pop
sub
mov
fimull
and
fsubs
xchg
cmp
in
and
shlb
sub
cmp
pop
dec
add
mov
insl
sub
lahf
pop
sbb
std
mov
pop
ja
outsl
mov
fcmove
jmp
xlat
test
push
insl
push
in
mov
repnz
dec
ja
mov
stos
dec
adc
mov
push
fwait
loop
loope
out
mov
jg
enter
andb
mov
dec
aaa
scas
fwait
mov
subl
or
sbb
add
push
sub
push
sub
aas
mov
cld
or
add
jno
inc
jle
mov
dec
popf
mov
ss
stos
jp
dec
dec
jle
jmp
inc
sub
pop
xchg
jecxz
sbb
pop
ud1
cmp
icebp
and
jg
stos
bound
jge
inc
adc
cltd
or
mov
ljmp
cmp
arpl
rcrb
mull
div
jbe
jne
xchg
inc
jne
mov
inc
ss
or
inc
dec
inc
jge
int
pusha
mov
fldt
mov
sar
aam
jp
pop
shll
jo
pop
loope
sub
mov
push
ljmp
mov
dec
sub
xlat
cmp
pop
push
push
les
iret
pusha
add
negl
mov
adc
out
or
jbe
add
mov
test
stos
push
xchg
iret
repz
enter
mov
decb
imul
rorb
add
lods
sub
cmp
test
cld
pop
mov
es
out
lcall
mov
imul
popl
and
ffreep
std
mov
xor
mov
sub
loop
out
adc
inc
cmp
push
jnp
cmpsl
ljmp
adc
inc
lret
push
and
push
cmpsb
sub
and
daa
shrb
sub
mov
add
xchg
jmp
or
xor
xchg
add
fstpl
testl
lahf
xchg
loopne
iret
xchg
fwait
mov
call
test
push
inc
lods
jecxz
clc
or
fdivrs
xchg
xor
cld
add
imul
inc
and
sub
mov
xchg
push
fisttpl
mov
cmp
pop
jno
imul
out
sbb
adc
pusha
lret
rcr
insl
xchg
test
fnstcw
rcll
mov
movsb
fnstsw
or
aas
cmpsb
sbb
lods
nop
jb
std
cltd
jecxz
or
stc
imul
jns
pop
push
lods
xor
sub
pop
aas
cmc
inc
mov
pop
aad
outsb
xlat
pop
scas
sub
jnp
popa
and
dec
out
sahf
in
xor
jge
push
and
iret
repz
outsl
push
mov
repnz
push
gs
lea
lea
mov
fnsave
pop
fcoml
aas
addr16
dec
mov
insl
andb
adc
loope
stos
jb
push
inc
jecxz
adcl
fiaddl
shlb
cmpb
lret
jle
cld
dec
inc
push
arpl
or
jo
lock
out
aas
mov
cmp
addr16
add
mov
xchg
adcb
xchg
sbb
pushf
test
mov
and
or
fbld
cld
filds
mov
pop
push
mov
or
test
xorl
cmc
test
and
in
test
shlb
mov
loop
jb
inc
inc
jge
lret
ljmp
mov
push
jbe
xor
fdivrs
mov
adc
fs
mov
pop
push
push
push
outsb
sbb
addr16
dec
ret
cld
or
ja
add
dec
push
jmp
in
ret
pusha
xor
adc
ja
push
lahf
mov
scas
push
pop
cmpsl
adc
dec
jl
dec
sbb
pop
mov
std
dec
outsb
aad
push
fldt
and
and
sbb
mov
add
mov
fcmovnbe
js
fs
cmp
jg
mov
ja
mov
pushw
sub
js
fldenv
pop
cmp
mov
mov
stc
jecxz
pop
cwtl
ss
xchg
sub
jecxz
std
lahf
popf
notl
xchg
test
imul
mov
int
push
lahf
cwtl
lahf
mov
das
sub
les
push
iret
mov
pushf
outsl
mov
push
pop
inc
rcrl
inc
cmp
adc
movsb
out
dec
mov
pop
mov
int3
xchg
pop
hlt
jbe
jle
jle
iret
dec
mov
insl
jmp
push
and
xor
pop
sar
fiadds
rcrl
and
mov
ret
or
int3
xchg
lret
movsl
xchg
sbb
pop
fiaddl
pop
adc
push
sub
xor
shrl
mov
xor
inc
xlat
ljmp
add
inc
mov
stc
iret
outsb
and
push
and
int3
inc
outsb
mov
inc
mov
jb
mov
test
or
sub
int3
lods
pop
aad
pop
dec
test
xor
sbb
lcall
push
les
aad
xchg
inc
jae
divb
ja
xor
mov
pop
scas
sub
jle
jo
mov
rcr
call
add
lret
js
mov
cmp
mov
push
sahf
or
loopne
lcall
add
cmp
lods
jae
dec
testb
pop
aam
and
xorl
pop
es
cli
xchg
sbb
lock
jmp
xor
xor
lahf
stc
pop
jge
into
xchg
dec
imul
lcall
pop
aad
ret
mov
sub
jns,pt
push
popf
and
push
sbbb
cmp
inc
test
sbb
mov
movsl
popa
mov
into
jp
fimull
jo
push
loopne
dec
push
icebp
lds
aas
jnp
sbb
xlat
sti
mov
mov
push
lahf
xor
out
in
repnz
pushf
scas
ljmp
xchg
or
in
aaa
test
jp
addl
jno
push
mov
sbb
jns
dec
movsb
cmpsb
and
popl
xchg
stos
incb
and
ret
pop
add
push
stos
dec
loop
scas
popa
sbb
mov
dec
cmp
cmp
incb
ret
pop
gs
xor
ljmp
pushf
in
or
cwtl
cmp
repnz
les
ljmp
mov
mov
xchg
fdivr
testb
mul
inc
fs
nop
fprem
repnz
and
fldlg2
repz
fdivrp
mov
rep
add
fdivrp
daa
scas
mov
insl
pop
fmuls
test
std
mov
jbe
cwtl
mov
lahf
jnp
sub
jge
cs
mov
imul
push
aad
sbb
or
pop
add
fs
sub
mov
ffree
mov
test
push
xchg
jae
xchg
adc
pop
fs
jbe
adc
cmp
inc
andb
mov
add
add
stos
push
dec
sub
popf
mov
dec
test
daa
mov
sbb
jmp
out
jg
push
arpl
xchg
ds
pop
jp
sub
gs
mov
add
scas
xchg
inc
clc
out
push
inc
fsts
fs
add
mov
fistpl
push
fwait
mov
call
jnp
lret
rep
adc
outsl
pop
shll
gs
xchg
int3
mov
inc
ret
push
scas
outsl
je
into
ds
mov
mov
adc
lcall
enter
adc
shlb
pop
inc
and
xor
jno
mov
cmpsl
movsl
rolb
jmp
mov
into
xchg
movsl
cmp
xchg
xorl
xor
mov
les
jle
pop
jno
mov
int3
insl
ret
jp
aam
dec
xlat
imul
and
sbb
push
mov
rcll
mov
mov
or
or
jns
adc
pop
pop
shl
sbb
mov
daa
adc
cmp
xchg
roll
in
lahf
js
addl
movl
jl
xchg
cmp
sbb
loopne
jg
es
outsb
je
out
push
inc
mov
xor
in
mov
loopne
out
adc
idivb
es
sbb
lock
push
aam
lds
call
notb
push
jbe
sub
sbb
inc
adc
inc
jle
jns
sub
dec
xchg
cvtdq2ps
mov
pop
push
push
xlat
adc
dec
cs
adc
and
fistl
ljmp
imul
std
out
dec
inc
pop
inc
dec
inc
pop
gs
or
push
and
and
or
mov
enter
jl
in
jno
imul
mov
daa
push
arpl
pop
movsb
pop
jp
pop
mov
mov
sub
pop
mov
fisubrl
out
leave
jecxz
pop
adc
push
adc
pop
jmp
pusha
xor
pusha
push
inc
jp
jno
sbb
add
fists
or
xor
mov
scas
cld
aaa
xor
sarb
test
xor
xchg
adc
cs
out
xorl
int3
mov
negl
jge
fildll
test
ret
and
lock
dec
mov
test
enter
xor
in
xor
ja
push
stos
cs
jne
adc
stos
inc
repnz
rclb
push
imul
popa
pusha
ror
jbe
imul
fwait
pop
xchg
cmp
cmp
mov
pusha
inc
es
adc
adc
lds
loop
add
add
inc
adc
sbb
and
cli
sti
add
in
lock
notl
fstps
push
xchg
adc
popa
clc
mulb
jg
pop
test
adcl
or
jp
or
jno
push
dec
mov
dec
lcall
fcmove
pop
mov
mov
pop
push
xor
in
loope
movsb
cmp
fwait
pop
stos
and
arpl
and
xlat
jno
jl
test
push
nop
mov
test
aad
jmp
push
inc
les
cli
cmp
sbb
sbb
jnp
les
lds
add
insb
add
lock
pop
adc
mov
call
jae
mov
cmpsl
test
adc
call
sbb
int3
dec
mov
mov
inc
lods
sbb
imul
or
mov
inc
out
sbb
adc
cli
fst
jne
add
leave
hlt
pushl
push
adc
icebp
mov
add
and
jns
sub
repz
les
rcr
daa
ss
sti
ret
movsl
lret
pop
inc
aam
nop
mov
xor
xchg
mov
movsb
lea
push
repnz
pop
adc
lods
lods
sub
sub
bound
inc
mov
ss
loop
fidivs
xlat
and
out
cmpsl
ret
lods
call
fmul
fldl
add
loop
push
lcall
xchg
aad
add
add
mov
sub
lds
cmp
add
std
in
loop
xchg
pop
dec
xor
ljmp
sti
xor
inc
cwtl
mov
pop
loopne
sahf
add
insl
xor
sbb
sbb
xlat
dec
test
or
dec
loop
fisttpll
arpl
lret
sbb
add
lret
dec
int
lock
pushf
ret
mov
arpl
jecxz
adc
mov
jns
mov
loopne
push
mov
push
pop
aas
rolb
jp
sbb
cmc
mov
adc
xorl
mov
adc
mov
std
inc
dec
mov
xchg
sbb
and
jl
pop
pushw
inc
add
lret
ja
jecxz
js
push
dec
popa
test
addr16
pop
mov
repz
or
shl
cwtl
jns
or
adc
xor
mov
mov
rclb
cmp
adc
mov
mov
gs
push
loope
mov
inc
mov
pop
xor
insl
icebp
out
xchg
xor
dec
faddl
daa
pop
fsubrl
mov
into
push
dec
in
pop
xchg
repnz
test
insl
and
and
cld
push
pop
jle
rolb
xchg
fdivr
push
fcoms
sub
xor
js
sbbl
adc
test
loopne
jge
enter
adc
arpl
pop
aad
jp
mov
add
mov
not
mov
pop
xor
sbb
adc
pusha
inc
pusha
cmp
test
in
clc
out
push
xchg
insb
insl
pop
push
push
sbb
in
arpl
dec
jbe
mov
cmp
mov
jnp
push
call
call
push
inc
nop
push
jbe
push
xchg
cmp
test
leave
popf
and
out
ror
and
cli
pop
flds
mov
push
sub
add
xchg
jnp
in
add
inc
mov
gs
cvttps2pi
jb
push
fsubr
cmpsb
test
xor
adc
and
inc
into
mov
push
fdivrp
call
cmp
in
es
pop
pop
inc
jg
inc
sub
mov
js
mov
js
cltd
lea
push
std
popl
cmp
xchg
ror
jmp
sub
out
push
outsl
in
jno
cli
dec
push
mov
xchg
aaa
cmp
les
fdivs
mov
ljmp
jno
rol
dec
in
arpl
mov
iret
std
cmp
xor
mov
cmpsl
adc
cmp
mov
push
cmp
sbb
out
data16
fwait
arpl
xor
jbe
insb
bound
cmp
shrd
cmp
inc
pusha
out
ss
dec
test
jl
jge
insb
das
addb
mov
in
pop
adc
pop
mov
les
dec
lret
test
push
faddl
push
jno
negb
je
xchg
enter
xchg
pop
scas
inc
push
lret
mov
in
fdivs
repz
out
and
test
or
cltd
mov
add
push
pop
inc
in
or
clc
lahf
xchg
pop
push
push
xchg
and
mov
fadd
addr16
push
in
lea
aas
out
pop
ljmp
jge
cmp
int3
xchg
in
lcall
xor
test
loope
mov
jmp
dec
fcoml
and
jl
xchg
repz
push
sti
addl
inc
dec
jb
inc
jo
iret
push
outsb
mov
loopne
and
fsubl
lods
mov
mov
dec
xchg
rcll
dec
mov
in
movsl
dec
mov
shl
push
out
push
and
scas
cmp
dec
mov
loope
cmpsb
lods
shl
mov
out
push
stc
pop
les
fnstenv
ficompl
loope
jmp
repz
test
xor
jge
aaa
ret
jp
lret
lret
cmpsl
pop
cmp
out
rcrl
dec
stc
call
in
adc
pop
or
xlat
xchg
xor
mov
sbb
icebp
das
xor
jns
into
shlb
test
out
dec
repnz
pause
jo
aad
arpl
push
inc
or
adc
ret
xor
add
fcmovb
stos
rcl
in
testb
mov
mov
xchg
imul
fstpt
hlt
cmp
adc
test
pop
push
into
mov
out
fs
add
insl
daa
xor
dec
cli
inc
add
stos
inc
lret
fisttps
out
aam
dec
lock
pushf
mov
lock
fcompl
pop
xor
sbbl
dec
or
dec
ljmp
inc
xor
push
out
repnz
cld
adc
insl
mov
and
mov
xorb
sub
xchg
arpl
sub
push
dec
dec
mov
cmp
pop
outsl
adc
lcall
mov
mov
fwait
cmpsl
int3
sbb
rcrl
ss
push
ja
lock
xlat
cmp
stc
dec
inc
xchg
xchg
ja
pusha
aam
fmuls
jns
lahf
push
outsl
stos
roll
outsl
sub
adc
dec
xchg
ret
push
sub
jns
pop
push
adc
out
inc
sub
push
xchg
mov
jo
sarb
jp
push
loop
mov
jb
xchg
mov
into
ret
sbb
or
sbb
mov
sub
dec
inc
jge
sbb
inc
pop
popf
jbe
bound
push
pusha
shlb
out
pop
mov
sarb
mov
inc
pop
es
lcall
aas
jge
fsubl
je
cmp
idivb
push
inc
outsb
scas
inc
jge
fs
stos
add
lods
mov
loopne
jbe
cld
les
cmp
jns
fisubs
xor
jno
movsb
mov
dec
icebp
addr16
out
stc
sbb
pop
cmp
jnp
pusha
push
cmc
push
mov
sbb
enter
faddp
rcl
shl
adc
sti
inc
mov
dec
push
add
mov
push
sub
into
das
inc
test
scas
sti
fildl
outsb
push
fstl
inc
lret
sbb
aad
frstpm(287
inc
popa
dec
pop
mov
popl
xor
pop
inc
push
insb
scas
inc
xchg
loope
fisubrl
aaa
movsb
test
lret
pop
comiss
insl
inc
movsl
loopne
or
mov
dec
bound
and
or
shrb
imul
lds
rcrb
call
mov
jns
and
cli
xchg
mov
stos
ret
dec
add
or
mov
pop
mov
outsl
push
adc
gs
jge
js
pop
push
push
cmp
push
jle
in
mov
iret
dec
jnp
test
sbb
xchg
push
mov
xor
mov
faddl
imul
hlt
shr
leave
out
in
xchg
ds
pushf
fs
add
in
mov
jecxz
movsb
loope
fdivs
sbb
enter
dec
add
fdivr
cld
fimull
xor
xlat
out
push
mov
inc
arpl
shl
cmp
js
inc
fidivs
out
push
push
xor
repz
pop
mov
mov
cmp
push
outsl
add
cmp
xchg
pop
fisubrl
aam
je
in
lds
inc
mov
clc
xor
jnp
out
add
bound
test
icebp
stos
or
add
mov
std
push
cmp
pop
repnz
call
fstl
cmpsb
jo
mov
int
or
lock
in
jle
fimull
jae
out
sbb
xor
fisttpl
mov
ljmp
push
jp
push
xchg
ds
jg
and
sbb
pop
cmp
adc
cmp
fs
sbb
and
call
sbbl
addr16
paddusb
rclb
fld
inc
lret
das
cld
xchg
sbb
xchg
insl
mov
lock
mov
push
and
cs
int3
sub
rep
fisubrs
fildll
adc
jb
in
ror
fdiv
arpl
dec
mov
push
dec
ror
inc
xchg
mov
jne
sbb
jae
movsb
pop
xor
scas
xor
or
sar
fildl
in
flds
imul
or
mov
mov
and
pop
lcall
push
hlt
or
add
inc
and
xor
data16
inc
xlat
enter
negl
mov
add
enter
mov
jb
sti
pop
inc
cmp
insl
inc
in
dec
xor
pop
xorb
jae
add
hlt
testl
aam
mov
cltd
shll
ficomps
push
and
mov
pop
inc
add
push
dec
call
add
fsubl
sbb
aam
adc
sti
loopne
cmp
mov
adc
fisttpll
loope
psrld
faddl
cld
insl
pop
cli
and
scas
pop
adc
add
dec
insb
addr16
jne
push
popf
repz
maxps
insb
sub
fnstenv
les
cld
pop
orl
jmp
imul
xchg
mov
fisubs
or
sti
pop
adc
iret
push
leave
stc
jo
jle
js
ja
push
daa
dec
sub
and
xor
inc
dec
iret
inc
adc
push
addr16
rcll
xor
jb
jle
arpl
rorb
mov
and
xchg
outsl
sbb
sar
dec
ljmp
loope
imul
leave
jne
ss
test
sbb
nop
inc
inc
in
push
xchg
cmp
and
mov
pop
outsl
scas
jns
mov
mov
jnp
idivl
jae
mov
mov
push
xchg
xchg
lret
lds
adc
pop
mov
sbb
and
or
jno
jle
and
dec
xchg
fcompl
aaa
inc
stos
ret
lods
push
popf
add
mov
iret
jl
mov
adc
cld
lds
pusha
mull
mov
das
jnp
pop
aaa
test
outsb
leave
jne
mov
sahf
xor
cmp
xchg
fstps
ss
dec
outsl
dec
jb
pop
bound
lret
out
xchg
push
mov
cmpsb
in
stos
jb
in
mov
scas
in
aaa
fnstsw
dec
lahf
popf
dec
shlb
cmp
ljmp
adc
xchg
lods
inc
sahf
shrb
out
stos
fwait
inc
adc
dec
xchg
pop
icebp
out
mov
out
cmp
or
push
cwtl
insl
test
jo
aaa
inc
mov
xchg
sbbb
subb
pop
or
pop
pop
mov
jb
testl
in
in
cmp
xor
call
mov
pop
ss
mov
call
jb
push
mov
xor
dec
movsl
mov
test
iret
mov
sbb
dec
push
pusha
aas
jb
inc
in
push
mov
push
inc
daa
and
daa
test
imul
popa
pop
push
jg
or
mov
cmpsl
ljmp
std
rcr
cmc
add
cltd
test
xchg
dec
addl
icebp
dec
mov
out
sbb
sarb
push
movsb
sub
and
dec
dec
adc
shrb
imul
or
inc
js
cmp
fdiv
and
sub
xlat
pop
xchg
testl
push
adc
pop
je
jbe
loope
and
dec
loopne
ljmp
ljmp
sub
cmc
sub
mov
popf
adc
les
cmpsb
pop
fchs
xchg
mov
lcall
mov
sub
xorb
aas
mov
popf
mov
popl
loop
arpl
icebp
dec
jo
idiv
pop
or
xchg
xchg
test
std
push
stos
add
push
lahf
sbb
mov
fidivrs
mov
mov
scas
xchg
jae
mov
test
sti
jp
out
mov
jle
test
nop
mov
jno
idivl
push
repnz
cmp
push
loopne
push
int
jecxz
mov
and
je
xchg
jg
or
adc
or
les
mov
gs
int3
nop
std
insl
lods
movsb
inc
pushf
xor
into
hlt
ja
xchg
dec
scas
fldl
adc
daa
pop
mov
xchg
dec
lea
add
bound
mov
imul
pushf
fwait
pop
mov
add
shr
ljmp
jmp
fstps
lar
movsb
lds
sub
xchg
mov
dec
inc
jp
fldt
js
repnz
in
mov
xor
clc
xchg
push
dec
jbe
pusha
cltd
xchg
andl
add
xor
into
aam
pop
call
add
xchg
fiadds
iret
nop
neg
inc
push
lret
jne
dec
in
add
push
das
push
and
lods
xor
mov
push
dec
shrl
xchg
cmp
fwait
bound
push
js
daa
aas
js
test
mov
mov
cmp
mov
push
arpl
xor
outsb
cmpl
sahf
sub
ss
push
repnz
popf
add
xlat
sarl
push
mov
xchg
mov
imul
lds
cmp
sub
xchg
movsb
aaa
hlt
push
decl
loop
lock
mov
dec
pop
rcrl
mov
fs
int3
add
popl
lea
xor
pop
pop
jecxz
mov
mov
lret
add
cmp
inc
pop
mov
je
fcompl
mov
adc
outsl
cltd
sub
add
adc
ficompl
add
sahf
push
adc
inc
pusha
push
mov
unpckhps
hlt
or
mov
sahf
adc
push
inc
cmp
push
and
adc
mov
push
int3
dec
cmpsl
cmc
outsl
insl
pop
scas
sub
mov
arpl
adc
push
aas
icebp
xor
xchg
sarl
cwtl
pop
leave
dec
and
imul
pop
in
adc
sbb
or
xlat
cld
and
adc
mov
xor
aaa
js
aaa
mov
xorb
push
adc
xchg
insl
stc
xchg
cwtl
pusha
rcll
repnz
cmp
adc
pop
icebp
sbb
sub
xchg
shll
xlat
sbb
fwait
pop
inc
fmull
lods
jo
adc
mov
js
out
iret
sbbb
lock
pop
pop
stos
stos
jge
js
ret
pop
jbe
add
push
jecxz
mov
push
xor
subl
xor
jbe
xchg
repnz
and
xchg
inc
sub
push
into
mov
cmp
mov
daa
cmpsl
mov
sahf
xlat
arpl
xchg
sahf
adc
dec
jp
mov
imul
lods
xlat
push
divb
mov
xchg
mov
out
xorb
ja
push
js
adc
pop
sbb
or
cmp
das
in
jo
sbb
push
aad
cltd
addl
js
xchg
cwtl
pop
dec
sub
repz
stos
jns
push
addl
clc
adc
and
push
cli
les
mov
lret
fdivs
xchg
cmovp
andl
xchg
mov
fmull
call
mov
sbb
xlat
or
mov
push
subl
aam
imul
sbb
xorb
dec
addl
ja
cmp
or
cli
mov
push
mov
imul
pop
enter
adc
ret
push
shl
fnstenv
cmc
into
sub
ja
jns
popa
inc
lods
nop
std
and
jne
mov
movsb
fcmovnu
hlt
dec
xor
cmpsb
rcll
push
jmp
inc
or
in
out
jp
pop
test
mov
inc
sub
push
shrd
cmpsl
add
inc
cmp
xchg
aaa
into
add
lahf
pop
adc
enter
stos
mov
pmaxub
or
ds
jg
dec
jle
mov
cmpsl
sbb
cmp
pop
inc
ficomps
out
enter
pop
sbb
lret
jmp
lds
repz
fs
pop
mov
inc
in
mov
rcrb
lock
pusha
mov
iret
jnp
dec
sub
dec
sub
adc
inc
sbb
xchg
xlat
lret
push
or
sti
adc
mov
push
jle
sub
dec
std
xchg
sbb
and
das
inc
push
fabs
in
gs
jge
in
xor
xor
or
scas
mov
call
stos
sbbl
lret
ja
jne
mov
loopne
sub
mov
adc
inc
inc
adc
push
pop
pop
xor
inc
sub
sahf
jno
test
xchg
stos
popa
fdivl
pop
jnp
stc
add
pop
pop
ror
jne
adc
lret
ret
and
lahf
hlt
enter
jbe
cmp
popf
sbb
ss
outsb
push
push
fst
icebp
jp
mov
pop
or
movsl
mov
lea
mov
pop
dec
mov
addr16
pushl
inc
aad
sbb
add
lret
push
adc
and
dec
int
xchg
fmul
fsubs
outsl
adc
imull
inc
cmp
movsb
out
or
mov
jmp
das
add
lret
fcomp
jmp
fimuls
jnp
fwait
add
out
pop
lahf
push
inc
inc
dec
pop
out
bound
or
add
pop
insb
subl
cmpsb
enter
xor
fs
xor
arpl
loopne
es
xchg
dec
outsl
mov
aad
or
dec
ja
xchg
ja
jmp
xlat
and
sub
mov
adc
mov
hlt
mov
mov
pop
mov
lock
cs
les
jns
mov
jge
cmp
mov
mov
out
sahf
in
push
idiv
ds
out
fbstp
clc
mov
dec
fnsave
mov
push
pushl
push
popf
xchg
add
inc
call
lock
and
jle
cmp
pushf
mov
shrb
test
ds
inc
mov
xor
adc
sub
cmp
cmpsb
mov
push
out
pop
pop
xor
pop
fsts
add
xchg
pop
ror
jae
jo
mov
daa
cltd
ss
outsl
xchg
stc
ljmp
push
xor
dec
in
js
pusha
fcoms
inc
or
adc
sbb
notl
inc
pop
cmp
ljmp
mov
icebp
mov
popl
loope
push
dec
pusha
inc
addr16
fs
cmpsl
xchg
outsb
pop
jecxz
jnp
push
stc
pop
xchg
inc
ja
sub
mov
sahf
xchg
sbb
fldl
lret
mov
pusha
jo
mov
push
test
sub
mov
hlt
shrl
mov
mov
ss
not
push
mov
dec
xchg
ret
sbb
lods
xchg
cmp
jge
stos
test
dec
inc
out
outsl
mov
and
mov
sub
in
jl
ljmp
and
insl
scas
pop
dec
ja
in
je
enter
movsl
xchg
xchg
lea
popa
mov
add
pushf
sahf
mov
int3
pop
sub
fcomps
repnz
sbb
cmpb
and
jb
push
cli
test
outsl
cmp
call
push
cmp
xchg
movsb
dec
push
imul
fsubl
dec
sub
xchg
and
jae
push
cs
jg
inc
mov
or
in
mov
ja
jge
adc
jne
pushf
jns
sub
scas
aam
stos
sub
pop
and
repz
pop
jmp
imul
xorl
out
aad
dec
cld
xor
out
sbb
xchg
test
jl
fistpll
sub
inc
sbb
popl
mov
mov
jnp
cli
jle
data16
pop
mov
mov
xchg
jb
inc
in
sub
mov
add
jns
jo
repnz
lcall
mov
add
movsb
dec
mov
lret
test
idivl
or
outsb
cmpl
push
add
ret
clc
jnp
sub
popf
cmp
adc
sbb
add
add
test
add
and
adc
push
in
or
push
mov
bound
sahf
mov
push
idiv
xchg
int
mov
sbb
xchg
add
mov
popf
imull
fcomip
insb
cmc
movsb
cli
rorb
out
lret
cmp
sub
pminsw
aam
roll
scas
enterw
push
stos
xchg
dec
lret
rclb
xor
ds
or
lods
pusha
dec
pushf
sub
lea
inc
cwtl
push
push
push
dec
and
jae
inc
inc
lds
push
sbb
dec
xchg
mov
pop
inc
cmp
mov
xchg
add
mov
in
test
imul
adc
and
outsb
add
mov
sub
adcl
cli
jo
or
nop
jg
ss
cmpsb
and
cltd
sub
es
dec
icebp
xchg
fnstsw
xchg
cmp
xchg
mov
xorl
inc
pusha
inc
jmp
jns
pop
push
xor
cmp
jo
push
paddsw
add
dec
leave
outsl
adc
out
enter
outsb
push
push
cmpsl
jns
stos
fdivrs
cmp
sub
mov
dec
popf
fs
push
jl
add
rolb
or
jne
in
jne
out
add
pop
aaa
fsubrs
adc
aaa
andb
into
xchg
or
jo
arpl
or
mov
out
stc
mov
xchg
dec
pop
adc
jo
ss
repz
icebp
fidivrl
xorl
or
ljmp
mov
shll
in
xchg
push
call
cli
xchg
mov
pusha
fwait
pushf
ljmp
imul
jnp
add
push
mov
xor
pop
fdivrl
adc
sbb
xorb
fldenv
bound
mov
arpl
or
imul
adc
pop
dec
shrl
dec
mov
dec
pop
hlt
out
inc
sbb
pop
jnp
testl
or
push
mov
lret
stc
gs
outsl
cmp
subl
cmc
lcall
lods
push
enter
sbb
repz
dec
leave
lock
movsl
dec
es
jne
and
out
leave
xor
jo
fistl
iret
pop
pop
dec
push
push
sbb
cs
xchg
push
push
xchg
shll
mov
push
call
es
mov
jbe
and
pop
or
pop
popa
test
aas
stos
dec
in
stc
pcmpeqb
mov
mul
pusha
xor
or
scas
adc
aas
std
iret
xchg
mov
test
mov
cmpsl
jno
push
push
stc
mov
push
jmp
sub
addb
or
fmul
cmp
push
sbb
mov
loope
push
mov
movsl
xor
lret
popf
pop
jno
stos
lret
dec
inc
mov
in
adc
fimull
push
mov
push
push
or
xchg
cmpsl
jl
ja
and
in
test
jae
sbb
sub
xchg
add
iret
sahf
push
fisubrl
ljmp
cltd
or
shll
sub
subl
mov
fidivs
lods
dec
scas
aas
inc
fdivrp
jge
xchg
popl
mov
pop
push
mov
push
cmp
dec
mov
jmp
fdivrs
adc
subl
cmp
jae
push
push
fwait
xchg
out
jno
aas
loopne
ds
cmpsb
adc
scas
push
cmc
pop
scas
pop
mov
xchg
xchg
xor
pop
dec
jp
cmpsb
pop
pop
jnp
out
mov
loope
call
push
shrl
cmp
adc
jge
sbb
cmp
mov
pop
insb
ret
or
pop
ficoml
xlat
push
or
mov
and
js
stos
negb
push
mov
enter
arpl
inc
fnstcw
or
inc
jecxz
clc
xchg
xlat
adc
les
jmp
jp
jge
inc
add
mov
xchg
inc
bound
insb
adc
sub
add
xor
pop
cltd
cltd
int3
jo
cltd
sar
mov
out
or
add
insl
int3
aad
mov
jo
or
pop
sub
mov
adc
add
into
je
push
cltd
dec
cli
daa
pop
adc
aas
test
mov
insb
lea
jecxz
lahf
sbb
outsl
into
mov
pop
int
lahf
mov
dec
stc
jg
push
jp
jns
rcrl
or
push
inc
in
in
sub
cmpsb
mov
cld
cmp
mov
lds
push
out
mov
adc
and
sbb
insb
loope
jl
mov
or
dec
xchg
cmp
push
xor
inc
fidivrl
je
inc
xor
sub
sub
dec
fadds
das
sub
xchg
cmpsb
inc
sbb
outsl
cli
test
sub
sub
lahf
hlt
pop
daa
daa
or
stc
jmp
pop
mov
or
imul
ds
in
sub
adc
imul
insb
cld
adc
mov
xor
xlat
adc
stos
dec
out
les
push
mov
sbb
xor
sar
jbe
and
jl
sbb
xchg
mov
sub
pushl
dec
iret
call
pop
inc
call
inc
or
aaa
cmp
addr16
or
cli
mov
dec
mov
loop
mov
add
mov
cld
or
cmp
xor
xchg
mov
fists
cmp
mov
mov
gs
test
out
or
pusha
mov
ja
fildl
and
lret
aas
sbb
lcall
cmp
call
lret
push
int3
fwait
mov
lret
mov
pop
pop
les
dec
or
xorl
xchg
mov
pop
xchg
fmuls
jne
fimuls
insb
rcll
movsl
lods
sub
mov
xchg
xchg
jecxz
xchg
loope
in
scas
les
cld
push
xchg
xchg
test
stos
cmc
je
pop
or
inc
shll
fnsave
outsl
daa
sbb
imul
push
imul
scas
cmp
inc
hlt
int3
shrl
mov
jmp
jp
ret
dec
call
pop
ja
dec
scas
sahf
fistpll
xchg
jmp
dec
fimuls
sub
clc
jno
sahf
idiv
jecxz
loop
fsubr
es
add
mov
push
xor
mov
push
dec
mov
inc
mov
sub
loope
loop
imul
ja
and
push
lods
les
push
push
xor
cs
mov
xchg
std
out
xchg
je
cmp
cmp
idivb
mov
adc
lock
pop
test
fs
sub
stos
xor
cmpsb
dec
jnp
xlat
mov
rcr
mov
xchg
and
cmp
lds
mov
neg
pop
pop
mov
shlb
mov
ljmp
sbb
lret
sub
in
das
sahf
jg
sbb
push
aam
fcoml
shlb
mov
insl
push
lods
and
test
add
imul
scas
xor
push
pop
sbb
sti
shll
pop
mov
nop
nop
aam
adc
repnz
fcmovb
js
mov
insl
ficomps
mov
call
sub
pusha
shll
flds
mov
mov
out
sbb
add
inc
xchg
push
sbb
aas
lahf
test
ret
test
adc
movsb
rorw
and
mov
fnstsw
dec
imul
pop
inc
xchg
mov
data16
sti
call
movsb
out
cmpsb
xchg
xor
sub
push
in
adc
out
pusha
jg
xor
in
xchg
bound
pop
lret
add
je
dec
frstor
loopne
mov
mov
mov
mov
es
pop
pop
mov
jmp
fdivrs
jp
and
loopne
push
sub
or
mov
test
jbe
mov
push
iret
pusha
movsb
push
mov
mov
scas
mov
lds
movsl
xchg
mov
sbb
mov
mov
adc
imulb
fstl
mov
add
mov
sub
mov
dec
dec
in
ljmp
xchg
addb
push
dec
dec
call
mov
push
pop
sbb
mov
aaa
xchg
aad
or
mov
add
and
lea
adc
stos
add
pop
push
xchg
pop
push
fdivrl
test
lock
cmp
hlt
jge
xchg
jno
mov
rolb
adc
and
iret
mov
inc
mov
adc
cmp
in
pop
inc
test
lds
shrl
mov
xor
dec
push
adc
ja
adc
push
addr16
jle
pushf
rcll
lcall
sbb
sbb
lcall
out
add
pop
xchg
stos
test
popl
roll
push
mov
hlt
dec
push
inc
data16
test
sub
int3
mov
mov
add
dec
and
lcall
lahf
fnsave
or
push
jno
jb
out
or
push
icebp
popa
push
mov
loop
and
dec
push
dec
mov
int
pop
sbb
inc
lret
pop
cld
xchg
inc
sub
push
mov
add
xor
mov
push
mov
inc
in
aad
jecxz
loopne
test
nop
cmp
popa
gs
inc
in
loope
loopne
arpl
push
mov
dec
mov
movsl
outsl
les
shll
call
dec
gs
dec
pop
or
mov
mov
inc
int3
and
xor
fstl
ret
and
jmp
cmpsl
sub
dec
xor
cld
aam
mov
cmpl
add
out
mov
cmc
xchg
bnd
lea
enter
dec
fmull
cmpsl
and
xchg
sub
lret
xor
mov
xor
cmp
repz
xchg
cmpb
xor
addb
lret
sub
mov
mov
mov
push
std
mov
push
lea
sub
rorl
cmp
add
add
xchg
test
push
push
stos
outsl
xor
mov
fisubs
hlt
clc
sbb
push
pop
fiadds
insl
inc
mov
and
adc
jecxz
ljmp
jecxz
pop
pop
dec
shrb
das
adc
jp
push
adc
sub
insb
mov
add
push
test
pop
sbb
loopne
arpl
adc
loop
rolb
jg
cmpsb
xor
sbb
adc
or
dec
mov
cmp
addr16
sbb
mov
in
nop
push
push
test
fldl
fsub
int
and
in
in
movsb
aam
pop
out
loopne
out
fs
mov
filds
in
jl
pop
push
cs
cwtl
adc
mov
pop
dec
dec
pop
dec
js
jo
sub
mov
out
xor
imul
inc
in
pop
mov
shr
mov
push
pop
decl
sbb
es
inc
dec
xorb
and
push
ret
ss
frstor
leave
scas
cs
out
arpl
loopne
aas
mov
orb
xchg
mov
xor
push
pop
jp
aad
xchg
sbb
lds
xchg
aad
ja,pn
stos
pop
mov
sub
pop
fstps
sahf
jns
push
sbb
ret
pop
push
or
std
mov
xor
popa
jne
aad
stos
xchg
add
mov
pop
packuswb
stos
insb
jmp
mov
pop
dec
push
xor
stos
xor
outsl
pop
je
dec
lods
xlat
fmulp
stos
sub
inc
push
int
push
pop
fldl
xchg
mov
data16
cli
mov
daa
and
fidivrs
mov
stc
bound
decl
arpl
sarb
xor
jmp
mov
leave
mov
arpl
test
cmpsb
jnp
push
std
push
mov
push
and
mov
and
gs
inc
dec
pop
cltd
lods
jo
idivb
cli
nop
xchg
in
inc
clc
mov
out
add
cmp
js
fisubrs
sti
sbb
outsl
je
adc
pop
lcall
xor
sbb
mov
add
ret
sbb
or
mov
xor
push
in
sub
mov
sti
loopne
ret
sbb
cld
mov
mov
mov
fidivrl
push
imulb
cmp
fwait
jnp
sti
cmp
cmp
fmuls
out
ss
je
test
cwtl
nop
pusha
rcll
notl
xor
testb
mov
scas
movsl
mov
xchg
add
mov
mov
into
jmp
into
je
insb
loope
push
inc
std
push
fsubl
pop
pop
xchg
cmpsb
add
dec
arpl
mov
ret
pop
call
add
std
and
pop
xchg
jnp
or
or
clc
xor
jp
cmp
fucomi
fdivrs
in
adc
movsb
add
adc
ja
dec
js
insb
push
repnz
fwait
or
jne
mov
rcrl
enter
sub
ljmp
jg
ljmp
or
pop
js
xchg
gs
add
div
or
test
shl
divl
je
or
push
leave
sub
daa
lea
leave
jo
sbb
or
inc
adc
cmpl
dec
cltd
test
idiv
jns
je
dec
mov
fisubl
mov
bound
sub
test
mov
fnsave
mull
inc
xor
out
rcr
pop
das
sbb
lds
push
in
aam
mov
mov
fdivrl
add
mov
push
sti
aas
pop
mov
cmp
cltd
aas
dec
ss
pop
jp
jno
fiadds
sub
iret
repz
ss
sub
xorb
sub
mov
and
jnp
pop
cmc
and
or
xor
imul
lods
std
inc
sar
stc
inc
cmp
lret
adc
jns
cltd
inc
adc
jmp
in
mov
jne
sub
xor
push
cmpsb
std
out
mov
add
ljmp
mov
in
pop
inc
cli
adc
insb
icebp
shlb
popf
push
jl
adc
mov
pop
sbb
or
jo
mov
pop
loope
cwtl
jg
pop
out
out
push
int3
popa
sub
xchg
sbb
jl
icebp
adc
jmp
inc
fldenv
into
or
outsl
cmp
sbb
mov
imul
int
jne
cmp
fistl
xchg
test
repnz
lret
stos
dec
xor
fimuls
mov
scas
ljmp
insb
imul
sub
test
mov
mov
out
and
mov
sub
sbbb
movsl
fs
cmp
push
cld
movsl
jns
adc
stc
mov
es
sbb
lret
aam
mov
mov
movsl
mov
lds
daa
pop
mov
xor
les
dec
sbb
fsubl
test
enter
ja
push
lret
movsl
subb
xchg
jns
and
adc
es
insl
sbb
mov
push
enter
fimull
xchg
sub
sbb
xor
mov
mov
add
outsb
jns
andb
pop
xchg
fwait
jmp
or
xor
jecxz
mov
cmpl
inc
pop
pop
sbb
ffree
inc
push
je
rclb
popa
fcomip
pusha
aam
push
ja
insl
repz
xor
movsb
clc
cmpsb
inc
sti
mov
mov
imull
mov
xchg
push
mov
iret
shrb
stc
mov
lahf
movsb
xor
negb
xchg
pop
std
les
in
and
jb
dec
ss
gs
xchg
fwait
outsb
xor
mov
repnz
sbb
mov
mov
push
sub
lahf
pop
fwait
icebp
movsb
mov
mov
and
push
test
xchg
notb
rorb
scas
ret
repz
enter
mov
fmull
fistpl
popf
movsb
cmp
enter
scas
in
push
sahf
out
rcrl
int
mov
leave
repz
cld
sbb
bnd
and
mov
cmp
cli
inc
cld
daa
ffreep
and
jecxz
xor
inc
dec
dec
pop
pusha
push
mov
ror
cli
dec
inc
adc
jbe
jo
xor
or
add
arpl
cwtl
scas
mov
jns
insl
aam
fsubs
mov
out
popa
iret
inc
cmp
dec
or
add
pop
pop
subl
jmp
sbb
inc
push
cmpl
mov
fbld
les
add
lahf
into
out
pop
orl
lahf
imul
xor
adc
xlat
or
rcrb
push
loop
iret
arpl
push
sti
xchg
lds
mov
mov
xor
loop
mov
xor
das
mov
add
push
xor
pusha
aad
or
cmp
ss
mov
das
jbe
push
cmp
mov
cwtl
out
push
add
aas
cmp
ret
jae
push
loope
cli
popa
ficompl
jmp
popa
test
push
dec
sbb
and
iret
xchg
outsb
gs
pop
imul
out
cmp
ret
pop
dec
ja
adc
cmp
mov
std
stos
inc
push
and
push
int3
jbe
mov
in
mov
or
cmp
inc
insb
and
mov
adc
sub
aam
clc
test
fs
jno
pop
mov
sub
lods
jbe
imul
mov
sarb
push
xor
lahf
jno
test
cmp
dec
mov
jecxz
adc
sahf
data16
fsubs
sub
lock
ljmp
mov
dec
popf
add
sahf
pushf
cwtl
pop
arpl
xchg
cmpsb
cmp
ret
into
fimuls
fwait
ljmp
jbe
mov
aas
mov
negl
or
fmulp
stos
aad
call
mov
rorb
jnp
or
shlb
sub
ja
aaa
mov
dec
es
rolb
imul
add
sti
mov
lds
and
xchg
loope
jno
shll
jmp
add
sbb
add
and
mov
fisubl
in
sti
stos
xor
ja
push
inc
inc
fcomp
aad
push
and
inc
xchg
icebp
and
push
fldcw
add
scas
pop
mov
adcb
pop
clc
xchg
or
int
jbe
pop
jl
pop
lods
sar
sbb
imul
jbe
int3
pop
lods
xchg
jmp
pop
or
xlat
push
inc
inc
int3
daa
sbb
fistl
mov
mov
inc
in
in
call
shll
out
and
xor
cmpsb
dec
imul
out
pop
repnz
loope
imul
xchg
dec
adc
cmp
add
adc
sbb
sbb
jmp
cmp
cmp
push
push
cmpsl
in
inc
lret
and
lret
mov
test
sbb
mov
mov
mov
shll
icebp
filds
fstpl
and
scas
out
sbb
aam
idivl
cmp
add
test
sbb
lahf
cld
call
gs
inc
mov
int3
fnstsw
test
movsb
int
je
movsl
ret
jmp
je
mov
das
sbb
dec
stos
test
mov
xchg
adc
es
jae
iret
and
fidivs
out
jge
add
xchg
stc
push
aad
outsb
sbb
and
in
ret
mov
int
orb
stos
fldcw
mov
inc
jne
repz
fwait
cmpsb
dec
mov
jnp,pt
lahf
cwtl
js
mov
inc
aaa
sti
and
jbe
sti
lods
in
add
jp
adc
mov
and
jge
jle
addb
jno
xchg
nop
subb
sub
scas
lds
mov
imul
mov
cmp
jns
sahf
aad
xor
push
lahf
rolb
jge
rorl
mov
movl
fcmovne
gs
testb
pop
xor
test
sub
test
fimull
lock
and
dec
cmp
pop
ljmp
and
dec
cmp
call
sub
cld
sub
xor
jo
inc
adc
cmpsl
mov
pop
mov
sbb
out
mov
xchg
add
loope
scas
int3
int3
xlat
xchg
cltd
mov
jbe
pushf
mull
pushw
not
iret
add
mov
loop
lock
fcmovnb
pop
rcr
popf
pop
add
stc
push
movsb
js
out
xchg
mov
cmc
mov
add
test
aad
adc
xchg
adc
into
imul
ja
arpl
inc
jne,pt
in
dec
ret
adc
fsubrp
mov
lret
pop
inc
out
jg
or
scas
inc
xor
push
pop
push
push
adc
xlat
xor
xchg
or
orb
and
mov
add
test
shl
xchg
scas
sbb
negl
pushw
cmp
push
dec
cmpsb
in
dec
out
add
add
in
fcmovnb
popf
addr16
or
fcmove
push
xor
fdivrp
push
add
bound
fsub
insb
sbb
mov
daa
pop
pop
js
or
cmp
push
pop
addb
jg
mov
push
js
nop
and
data16
mov
xlat
addr16
xor
mov
jl
sbb
aaa
cwtl
or
in
mov
pop
mov
and
cmp
cmp
ficompl
jo
mov
aaa
jmp
daa
call
mov
mov
xchg
mov
icebp
adcl
ds
push
mov
jp
subl
std
add
mov
mov
jp
leave
jno
nop
mov
xchg
pop
dec
push
xchg
mov
das
call
mov
scas
call
mov
sub
data16
test
xchg
scas
ds
fs
call
mov
fiaddl
lret
and
lods
scas
popf
fbld
cmpsl
iret
aad
and
dec
push
ss
inc
mov
push
adc
dec
cmc
ret
xchg
inc
push
loop
mov
in
lcall
jno,pn
mov
rorb
cli
lock
call
xor
int
jo
cs
mov
add
loopne
pop
jne
add
outsl
sbb
cwtl
std
enter
out
clc
mov
xor
mov
imul
out
or
jno
incl
in
cmp
daa
loopne
add
push
fadds
jne
test
out
jge
ljmp
insl
pextrw
or
jmp
pop
fistps
sbb
push
insb
push
sbb
imul
aaa
lret
in
rolb
test
pop
cmc
loop
push
sub
pop
mov
push
add
push
ret
dec
cli
pop
sbb
icebp
xchg
mov
dec
mov
sbb
and
cmpsb
cmpsl
cli
sarb
dec
xor
dec
test
xchg
xor
jno
xchg
inc
dec
xlat
inc
inc
iret
rep
adc
ret
leave
dec
or
cmp
pop
mov
lcall
das
mov
clc
cmp
push
push
fdivrl
insb
sub
and
in
ss
pop
dec
in
enter
mov
enter
imul
test
push
adc
fucomi
cmp
mov
rcrb
push
fs
inc
xchg
jl
dec
lds
cmp
mov
test
mov
aaa
jmp
add
cmpl
pop
in
adc
jno
sti
into
test
push
movsb
in
loope
fs
lret
push
outsl
inc
loopne
dec
rol
inc
pop
xor
add
fmul
add
inc
lcall
loope
adc
sub
loopne
and
xlat
enter
in
stc
iret
popa
push
cmp
sub
shl
shlb
cmp
cmp
inc
push
inc
pop
dec
loop
mov
xchg
and
push
adc
ss
add
imul
mov
movsl
push
cmp
sti
sbb
jmp
sti
nop
int
adc
enter
or
mov
mov
out
mov
cmp
sarb
lds
xlat
dec
fmuls
movsl
test
sbb
add
adc
test
sub
or
push
xchg
dec
xchg
js
ljmp
scas
test
mov
lcall
sub
or
ds
xor
movsb
fwait
andl
jecxz
lret
inc
ss
fs
es
jecxz
pop
movsb
inc
inc
les
call
sub
and
xor
aad
pop
mov
int
in
mov
mov
mov
mov
and
enter
mov
xor
je
sub
adc
int3
imul
mov
out
pop
pusha
ja
cltd
mov
ret
call
mov
push
push
cmp
jle
adc
lock
mov
push
and
xchg
test
das
shrl
adc
jns
je
loop
push
pushf
inc
flds
cmc
mov
inc
push
mov
ret
mov
aam
add
mov
push
sti
jmp
data16
mov
mov
addb
or
cmp
aaa
xor
in
mov
enter
mov
dec
mov
sub
inc
push
dec
shrl
data16
fadds
add
sub
inc
cli
cmp
mov
xchg
pop
pop
and
xor
lcall
add
cmpsb
and
mov
test
mov
int
dec
mov
mov
add
mov
mov
repnz
jae
mov
adc
sti
or
out
xor
idiv
xchg
lea
mov
jl
nop
xlat
dec
and
cmpsb
leave
and
cli
xor
push
loope
out
hlt
stos
adcb
fcomi
imul
cmpl
pop
pop
pop
adc
dec
xchg
bound
pushf
daa
jmp
cmpb
cmp
mov
mov
push
out
test
mov
lock
sub
leave
sahf
sbb
xor
fstl
js
or
inc
gs
mov
sbb
push
mov
repnz
or
test
fwait
dec
add
mov
adc
mov
bound
jbe
adc
movsl
imul
adc
or
adc
sub
mov
sbb
xor
adc
out
insb
iret
add
scas
lock
js
mov
inc
popa
jle
push
xchg
std
mov
iret
or
and
adc
das
ss
sbb
sbb
gs
ja
stos
xlat
ds
imul
shll
jge
popf
mov
and
mov
xor
loopne
lods
inc
js
aas
push
sbb
and
hlt
aas
mov
adc
xchg
stos
xchg
jle
das
mov
ret
shlb
out
mov
lods
push
pop
insb
mov
inc
mov
icebp
pusha
jno,pn
sbb
jecxz
scas
loope
push
inc
jae
add
test
cmp
mov
mov
mov
stc
sti
pop
mov
inc
icebp
clc
push
jl
aam
aas
lcall
data16
inc
daa
fbld
jnp
cmpsl
rclb
inc
xchg
jo
ds
xchg
fildl
dec
sbb
mov
adc
mov
dec
hlt
sbb
cld
mov
jae
rcl
cld
dec
pop
dec
hlt
mov
mov
insb
pop
dec
xchg
leave
adc
pop
dec
mov
pop
insb
sub
sbb
sub
insb
cs
pop
cmpsb
lahf
pop
xor
sbb
les
push
push
rol
inc
ja
sub
jbe
sub
jno
jns
std
movsl
aaa
stc
adc
xchg
xor
lds
pop
hlt
test
shrl
and
ja
js
pop
out
inc
xchg
lock
mov
subb
xchg
mov
jp
sub
mov
in
je
sbb
adc
adc
mov
stos
add
dec
lret
scas
adc
cmp
scas
stos
rcl
lret
cli
ret
lret
push
lods
sub
test
pop
dec
jmp
pop
cs
imul
and
rorb
jp
in
pop
sti
sub
adc
add
aas
mov
pop
jns
cmp
dec
and
in
dec
pop
and
imulb
add
lret
push
inc
adcb
push
sbb
push
out
sub
fdivrl
fiaddl
aas
and
lahf
pop
lahf
mov
mov
test
adc
insl
insl
dec
shl
hlt
inc
push
pop
fdivrl
cmc
push
jl
sbb
xchg
dec
mov
add
pop
into
xchg
mov
fcmove
sub
inc
jno
mov
jbe
xor
push
mov
and
outsb
and
cwtl
fstps
jecxz
jns
ret
sub
rorb
imul
jbe
sbb
mov
mov
fdivr
or
pop
into
sub
sar
push
js
sbb
sub
test
imul
lock
jl
adc
mov
gs
xchg
mov
out
or
lcall
ss
adc
fcmovne
cmpsb
inc
ret
push
adc
lea
inc
shll
decl
sub
aam
cli
xchg
push
xorl
adc
fnstsw
pop
dec
inc
adc
lahf
or
or
into
div
ds
push
jnp
lods
dec
lock
enter
mov
or
stos
mov
mov
jns
inc
cld
repz
fwait
xchg
rolb
xlat
gs
ror
pop
add
int
mov
gs
test
push
ficompl
inc
push
out
dec
cmp
mov
stc
insl
lock
jae
dec
xor
js
test
ret
push
mov
jle
rorl
or
ffree
insb
xlat
adc
lret
daa
xchg
fldenv
jge
sbb
insl
aaa
stos
adc
mov
loope
outsb
fs
sub
loope
sub
push
and
out
mov
and
sti
ja
push
xchg
sub
pop
movsl
orl
xchg
sbb
inc
cld
or
repz
nop
daa
cs
jno
xor
push
or
jne
mov
push
jno
int
out
jge
push
cltd
lret
add
jg
loop
jbe
ret
sbb
loopne
push
aam
add
mov
jg
jno
aaa
xchg
out
stos
mov
cltd
test
jle
or
mov
add
repz
sub
sbb
stos
imul
out
sbb
push
adc
das
cld
in
cmp
mov
ret
ljmp
dec
pop
xor
sbbl
xor
imulb
sub
mov
pop
ret
cltd
jne,pn
mov
or
xor
cmp
xchg
xlat
dec
push
push
call
cmc
int3
jle
shll
inc
jne
pop
xchg
test
push
imul
hlt
mov
pop
push
inc
cmpsl
inc
xor
cmp
or
jge
jne
arpl
pop
adc
lods
cmpsl
adc
push
sub
lock
xor
cmp
cmp
push
cld
jmp
mov
scas
jo
cmpsb
rcll
pop
mov
rorl
fistpll
inc
sbb
mov
sbb
psubb
mov
fs
dec
arpl
jo
pop
ljmp
mov
in
shrb
xor
outsb
rcl
or
stos
cmp
icebp
ljmp
ret
add
sbb
pop
addr16
sbb
cmpsl
insl
lock
adc
movsl
jo
xor
das
subb
pop
out
pop
push
cmp
or
pop
jge
xchg
leave
add
lret
jle
imul
and
mov
push
mov
cmp
push
jno
rcrb
xorl
sub
imul
and
xor
iret
aaa
enter
mov
cmp
cmp
adc
sub
sbb
pushf
jb
dec
cmc
int3
and
mov
lea
repnz
jp
cmp
jbe
xor
sub
xchg
sbb
daa
mov
mov
rolb
mov
mov
addb
addr16
out
jle
mov
lea
mov
test
xchg
cmpsl
mov
pop
pushf
push
jns
ficoml
dec
lret
jecxz
push
fwait
jp
adc
out
push
loop
push
ja
dec
mov
or
mov
mov
mov
imul
mov
cmp
arpl
mov
or
lds
lahf
insl
or
andb
out
cmp
pop
insl
push
movsb
popa
lret
mov
push
test
hlt
pop
shlb
scas
mov
fstl
in
std
test
stc
cli
pop
stc
xor
sbbl
fisubs
ret
mov
jle
in
xchg
fmuls
lock
xor
arpl
jae
mov
add
test
gs
test
xchg
scas
mov
pop
pop
and
mov
mov
push
pop
movsb
sub
outsb
mov
inc
mov
sub
lcall
rorb
mov
hlt
test
shll
add
lret
add
adcb
cmp
les
in
jge
fmulp
pop
imul
sbb
fcom
xor
pop
pop
test
stc
ds
mov
repz
repnz
mov
stos
push
mov
or
inc
dec
mov
repz
adc
cld
pop
cmp
out
cmp
add
cmp
mov
mov
xchg
movsl
xchg
mov
js
inc
fsubs
push
fidivrs
sahf
fdiv
jbe
es
fcoml
cltd
sbb
fildll
loop
push
fucomip
leave
andl
faddl
sbb
lods
push
dec
sbb
cmpsl
mov
pop
daa
push
inc
jae
test
push
fists
test
je
popa
push
test
loop
and
cmp
or
mov
sbb
mov
mov
xchg
inc
mov
divb
push
int3
jp,pn
mov
sbb
repz
xchg
lods
inc
popa
adc
mov
aam
roll
jecxz
insl
andb
aam
lcall
xor
jne
and
int
and
pusha
lods
push
rcrl
push
cwtl
lret
push
inc
mov
ss
stos
mov
pop
mov
insb
dec
insb
dec
push
fistl
xchg
or
push
lods
push
js
mov
cmp
jo
dec
mov
mov
sbb
mov
decb
inc
das
add
cmpsb
icebp
push
xor
push
add
pop
das
jmp
pop
int3
dec
arpl
jno
pop
mov
div
mov
rorb
jbe
pushf
push
mov
push
jne
mov
aad
imul
orb
push
cmpsb
ret
mov
fisubl
jo
in
jns
push
popf
jge
leave
mov
push
push
xchg
jne
inc
jbe
mov
cmp
out
stos
ja
mov
xchg
mov
loope
or
cmpsl
repnz
sub
mov
out
push
pop
push
lock
sbb
xchg
push
xor
gs
aam
sub
pushf
and
cmpl
daa
insl
mov
fdivrs
or
mov
js
xchg
outsb
cmpsb
mov
lret
mov
test
jns
dec
movsb
nop
jge
clc
out
fdivrs
dec
push
jg
mov
js
dec
jbe
add
mov
subb
sbb
imul
gs
mov
inc
adc
sub
add
das
pop
and
cld
loopne
mov
jg
mov
addl
jo
jle
cltd
cmpsl
ds
sub
push
popa
es
clc
inc
sbb
add
adc
in
push
pop
addr16
enter
and
pop
in
mov
sub
imul
les
xlat
mov
fs
dec
push
add
rcr
inc
ljmp
mov
push
sahf
mov
xchg
call
pop
xchg
fimull
gs
jno
xor
cmpl
mov
pop
pop
scas
test
scas
cmpsl
pusha
out
dec
xor
out
repz
mov
mov
fsubrs
jg
inc
pop
call
dec
nop
sbb
inc
inc
aas
or
jp
std
fdivrl
mov
adc
loop
mov
in
jl
shrb
aad
push
negb
fisttps
cmp
aad
jbe
mov
mov
arpl
rol
pusha
scas
jle
adc
out
jae
pop
sarb
leave
push
cmp
dec
and
js
lock
sub
xchg
scas
cmp
adc
ds
fldenv
add
test
cmpl
dec
mov
stos
pusha
adc
sub
aad
adc
mov
aaa
mov
mov
out
inc
and
add
and
mov
mov
mov
push
mov
push
adc
nop
cmp
int3
mov
shll
bnd
shlb
bound
push
sub
out
subl
icebp
cmp
sub
and
fmul
add
int
cwtl
sahf
imulb
outsl
and
dec
pop
pop
xchg
popf
push
bound
push
cmc
jb
pop
cmpl
or
pop
and
fs
test
sbb
jbe
outsb
mov
jg
decl
jno
and
inc
sarb
psrld
in
lahf
push
mov
xchg
mov
pushf
fs
jp
sub
push
pop
fwait
push
mov
es
roll
pop
mov
jle
adc
jg
or
fcoms
jne
mov
mov
dec
punpcklwd
mov
shll
jae
mov
xor
xchg
push
and
jne
fnsave
push
popf
insl
out
test
ds
scas
repnz
psubusb
mov
js
mov
sub
pop
push
xlat
jbe
ljmp
jmp
cmp
bound
sbb
lods
je
mov
ret
mov
inc
cwtl
decl
ljmp
enter
xchg
sub
sub
and
cwtl
loopne
shll
or
jns
ret
lock
lds
ret
pop
test
or
pop
je,pt
xor
lds
insl
pop
mov
out
sub
inc
lret
rcr
jmp
jl
add
rorb
scas
adc
xor
add
and
lahf
lds
cmc
imul
aad
fwait
and
mov
decl
es
adc
mov
sub
aas
push
movsl
scas
and
test
sub
mov
and
jmp
loopne
dec
mov
lods
shlb
mov
adc
mov
ljmp
daa
das
add
add
inc
stos
stos
dec
pop
test
add
pop
jbe
clc
add
and
addr16
xor
xchg
add
jp
sub
aad
inc
mov
fs
add
cmp
mov
xchg
lea
jle
add
ret
inc
add
cld
sub
fptan
icebp
pop
xchg
and
in
stc
push
jmp
icebp
dec
repz
mov
sub
jne
fidivl
pop
cld
cmp
int
push
loope
mov
ret
xchg
ret
rorl
xchg
inc
gs
inc
or
test
or
shl
pop
lret
scas
bound
sub
mov
jmp
or
or
push
mov
dec
insb
iret
jle
add
iret
jg
mov
jp
add
test
mov
push
sub
inc
shlb
test
jo
push
into
jno
pop
adc
loope
cmpsl
cmp
push
jo
xchg
inc
icebp
stos
mov
xchg
adcl
lock
cwtl
add
push
mov
ss
out
call
fimuls
fwait
sahf
pushf
dec
xchg
jae
repz
mov
add
jbe
pop
shlb
repnz
cmp
push
hlt
add
mov
push
lahf
movsb
or
push
and
inc
push
lods
ds
std
dec
jge
daa
mov
jb
fsts
dec
aad
imul
cwtl
je
mov
mov
pop
nop
hlt
fidivrl
inc
and
adc
pop
pop
insl
inc
mov
xchg
and
cmc
shrb
inc
cmp
dec
fadds
xlat
inc
movsl
mov
or
add
add
push
mov
rorb
test
adc
cmp
mov
incl
cld
cltd
pop
or
add
sub
insb
cmpsb
hlt
cmp
jl
test
push
mov
movsb
sahf
negb
mov
add
les
push
dec
adc
mov
rcrl
repz
lea
jmp
in
clc
inc
pushf
in
lock
loope
xchg
pop
orb
push
add
dec
shlb
mov
ret
inc
addr16
lcall
xor
fiadds
push
adc
inc
sahf
fmuls
pop
and
adcb
lahf
in
pop
cli
jecxz
cmp
xor
jge
das
mov
push
mov
or
dec
lcall
jg
xor
xor
push
imul
aaa
xchg
add
enter
or
jns
mov
dec
fcmovnb
pop
dec
mov
pop
stos
cli
jg
mov
xchg
imul
push
and
push
push
imul
mov
pop
push
inc
and
clc
lahf
in
or
add
and
pusha
cld
sbb
xor
sbb
jo
adc
pop
clc
ret
fstps
fiaddl
popa
scas
inc
nop
aam
add
iret
imulb
mov
imul
push
mov
pusha
mov
jne
inc
mov
and
fsubs
adc
call
js
or
bound
inc
xor
sbb
test
add
jl
lahf
in
adc
and
shl
dec
or
xchg
mov
sub
sarl
add
xor
xor
xchg
ljmp
jmp
jmp
adc
repnz
es
pop
push
bound
push
nopl
xchg
add
jp
test
jnp
mov
shll
in
ds
daa
dec
jmp
add
incb
aam
movl
fildll
inc
jns
lret
mov
jp
je
fsts
popa
cmpl
mov
xor
jno
idivl
repz
bound
outsb
xchg
aam
xchg
fiadds
notb
ds
or
ljmp
adc
sbb
xchg
jne
aaa
call
int3
unpckhps
int
push
mov
sbb
sub
gs
scas
test
mov
or
push
insl
push
add
push
call
imul
pop
loopne,pt
sbb
or
push
ret
xchg
dec
mov
loopne
cmp
aaa
cmpsl
stos
mov
push
stos
jge
inc
arpl
jl
mov
jnp
mov
mov
enter
gs
insl
and
cwtl
xorb
mulb
adc
enter
jb
add
add
adc
push
insb
popa
test
sub
test
jmp
shl
test
cli
out
lret
orl
in
scas
push
adc
pop
cmp
mov
add
jb
aad
push
pop
sbb
scas
lret
cli
scas
adc
scas
inc
jl
jmp
scas
int3
aad
cwtl
call
mov
push
sbb
add
test
clc
add
dec
daa
hlt
sarb
ds
fs
mov
xchg
loope
or
into
mov
test
iret
in
andb
shll
clc
in
xchg
mov
xor
jle
sbb
dec
out
xor
dec
adc
fsubl
pop
notl
dec
mov
scas
xorl
inc
cmp
cmpsb
mov
je
adc
les
push
adc
cltd
pop
cmpsb
in
mov
sub
loope
sahf
mov
push
inc
popf
fistps
xchg
lcall
dec
mov
lea
add
in
sub
xor
add
daa
sbb
cmp
adc
dec
add
nop
xor
test
rcll
add
in
push
ret
scas
xor
cmpl
sbb
cmp
fldcw
wbinvd
in
push
int3
push
lods
fldenv
mov
repz
into
loope
xchg
pop
movsl
in
lock
insl
mov
jl
dec
dec
sahf
mov
fld
push
fdiv
pushf
cmp
jnp
jo
dec
sub
pushf
mov
out
inc
pop
cmp
push
adc
cmp
cmp
push
insb
cmp
cmp
not
lcall
pop
mov
push
jle
mov
jno
mov
dec
out
push
sub
mov
stc
mov
pop
jae
push
mov
pop
or
sbb
das
out
adc
add
test
push
test
popl
jne
adc
das
outsb
sbb
mov
inc
sub
sti
mov
xchg
lods
push
roll
dec
fdivrp
pop
adc
ret
push
clc
mov
jge
xchg
mov
add
pop
xlat
or
inc
cwtl
fisubrl
insl
dec
imul
shl
aas
push
xor
sub
out
jno
leave
jae
mov
popf
push
dec
sub
bound
sti
shll
sbb
movsb
adc
movsl
cmp
imul
push
dec
add
lahf
ficomps
sahf
movsl
popl
adc
xchg
lods
xor
sub
scas
stc
imul
jp
stos
call
xchg
icebp
lretw
adcl
stos
je
int
shll
push
pop
orl
leave
fsubrs
sahf
pop
out
loope
pop
icebp
aad
cwtl
ja
sbb
mov
inc
and
out
xor
pop
mov
out
gs
inc
aas
mov
mov
lret
fdivrs
leave
mov
cmc
cmp
sbb
push
stos
jb
jge
cld
mov
xchg
xor
adc
loop
loopne
dec
cltd
add
and
and
pusha
xlat
sti
hlt
or
xor
jb
aam
cmp
inc
andl
pop
js
sbbl
sub
dec
pusha
scas
add
inc
je
out
jbe
xor
jns
pop
mov
cmp
and
out
test
xchg
les
iret
daa
roll
dec
rcll
pop
and
inc
imul
out
ret
push
repnz
lods
cmp
rcll
std
and
jp
sub
mov
lret
fiaddl
cmp
fcmovnb
fwait
in
sub
or
push
push
mov
mov
movsb
mov
cs
repz
stos
adc
xchg
lds
rorb
jae
sbb
dec
jecxz
dec
mov
mov
hlt
or
repnz
xlat
sbb
in
jae
loopne
orb
adc
xor
nop
cmp
inc
inc
xor
push
lcall
fldt
test
push
out
sub
mov
jmp
setno
popf
int
imul
pop
mov
jae
hlt
push
mov
add
gs
mov
mov
cmp
aam
push
fcomip
cltd
xchg
dec
sbb
inc
outsb
add
or
sbb
mov
imul
cmp
xor
in
push
std
dec
mov
cmpsb
pop
add
xchg
jns
fcmovne
rol
rorl
mov
pop
fidivl
fxam
inc
sub
popf
dec
pop
jp
mov
fbstp
mov
cmp
and
push
fwait
daa
jno
push
ljmp
sbb
xchg
ret
jg
out
dec
fwait
out
adc
adc
mov
xchg
into
int3
sub
mov
jmp
mov
sbb
push
pop
jb
leave
lock
and
insb
lea
jecxz
test
cmp
js
mov
add
iret
cmp
pusha
cmp
test
inc
or
fiaddl
cmpl
mov
sub
pop
mov
dec
movsl
or
jecxz
lods
ljmp
dec
xchg
inc
adc
sbb
adc
mov
ror
sub
test
adc
out
iret
repz
jbe
sbbl
cmp
add
fldl
xor
fsub
lcall
test
lcall
xchg
adc
cmp
sub
mov
aas
jg
pusha
fistps
sbb
mov
mov
sub
scas
gs
mov
shlb
vcvttsd2si
mov
ja
sbb
mov
or
mov
cmc
aad
sahf
insl
mov
cmp
push
cmp
repz
mov
into
and
push
xchg
insb
repz
roll
sbb
mov
push
xor
xor
cld
pop
add
repz
leave
mov
sbb
push
shl
ficompl
mov
mov
lea
bound
lahf
inc
pop
loop
cltd
dec
xchg
shl
ss
fistpll
dec
push
inc
push
das
or
sub
sbb
xchg
and
inc
jns
andb
outsl
inc
mov
mov
loop
out
mov
icebp
adc
in
inc
pop
fdivrs
shlb
dec
cmp
out
shr
push
adc
adc
xchg
push
xor
repnz
dec
ljmp
sub
mov
jbe
xor
xchg
and
push
dec
aaa
pop
clc
mov
cmpsb
test
jmp
int
dec
xchg
incl
mov
push
mov
adc
ret
movsl
xlat
jecxz
mov
addl
sbb
jl
sub
mov
inc
je
dec
sub
lods
push
and
ljmp
mov
dec
jg
ret
push
cs
dec
mov
push
inc
clc
sub
gs
adc
inc
arpl
fildll
inc
sbb
push
sub
push
fcmovne
mov
mov
adc
mov
fistpl
mov
push
pop
adc
lret
in
and
rcl
cmp
roll
clc
sahf
inc
sub
daa
jg
jge
mov
add
pop
outsb
push
jl
inc
adc
dec
movsb
aas
cmp
stos
pushf
jp
test
sbb
push
adc
sub
jnp
pop
rorb
xchg
inc
mov
mov
add
push
mov
sbb
inc
xlat
in
enter
shl
push
addb
add
cld
vpcmpgtb
add
mov
and
push
inc
ficompl
cmp
in
mov
dec
std
mov
scas
or
inc
push
adc
mov
dec
lret
repz
aas
mov
int3
inc
cmpsl
es
adc
xor
stos
xchg
and
mov
fdivrs
in
push
xor
xchg
or
mov
sub
adc
aam
and
fs
gs
arpl
push
leave
sarl
mov
add
xchg
rcrl
mov
add
test
mov
iret
cli
mov
lret
jl
adc
ret
int3
jg
and
and
mov
jo
xchg
adc
adc
lods
mull
xchg
repnz
arpl
scas
xchg
aam
and
sbb
inc
arpl
mov
orb
push
sub
cmc
sbb
jne
fdivs
push
xor
mov
pop
mov
push
clc
adc
aaa
jge
fxch
mov
in
cltd
fistpll
aas
imul
popf
push
xorb
jno
add
push
mov
fwait
das
jle
addl
adcl
enter
imul
ds
pop
fiadds
sub
in
cmpsl
int
out
adc
or
cmp
add
cmp
je
mov
pop
xchg
clc
repz
addl
cmpsl
sub
push
adc
add
sti
mov
adc
sbb
push
into
out
sub
sub
stc
fdivr
adc
push
mov
loope
push
test
icebp
jno
adc
cmpsl
and
sbb
inc
ret
mov
pop
ljmp
add
lock
cmpsb
inc
and
push
xor
xchg
mov
or
push
dec
hlt
and
sub
add
clc
mov
sbb
jecxz
test
cmp
gs
xchg
test
xlat
add
je
mov
sti
push
neg
out
sub
and
inc
sub
pop
pushf
imul
popf
mov
xchg
jnp
push
lret
fdivl
sti
xchg
add
mov
mov
out
jle
pop
inc
xchg
scas
sbb
sbb
das
test
inc
in
xchg
xor
adc
mov
inc
cmp
pop
clc
adc
push
jl
daa
imul
incl
cmp
sbb
xchg
int
inc
repnz
sbb
ret
or
test
test
push
inc
icebp
int3
cmpsl
mov
dec
mov
mov
scas
and
cmp
mov
mov
xorb
mov
xor
movsb
into
mov
jmp
sarl
lods
xor
jmp
movsl
pop
xlat
adc
aad
sbb
mov
add
enter
or
sbb
sbb
inc
pop
imul
into
xchg
xchg
fisttpl
aaa
mov
jecxz
roll
add
sahf
out
or
shrb
push
add
jae
in
fimuls
dec
adc
jle
xchg
jl
data16
cmpb
ret
pop
std
into
insl
imul
outsl
sub
rolb
mov
leave
dec
fs
xor
lcall
cmpsl
lods
int
cltd
clc
inc
insl
call
movsb
mov
mov
mov
cmpsl
xorl
sarl
pushf
popl
or
add
adc
fistps
mov
sbb
jnp
bound
xchg
push
push
push
push
in
push
cld
xor
rcrb
fmull
or
out
mov
push
or
std
int3
test
mov
les
and
ss
loop
push
pop
in
xchg
jns
jp
test
nop
jne
aas
cltd
pop
add
insl
xlat
adc
repz
call
cmc
sub
add
jle
jb
mov
xor
outsl
jns
dec
test
cmp
pop
mov
jno
pop
std
movsl
ja
fwait
out
dec
out
andb
dec
pop
test
and
int3
fsts
mov
sbb
adc
mov
or
inc
in
pushf
aam
pop
out
xchg
mov
lahf
rolb
jb
insl
and
fimuls
mov
jno
pop
shll
int3
pop
push
sub
and
xchg
jmp
push
cmp
and
out
popf
cmp
sbb
pop
test
scas
xor
mov
sub
mov
xlat
pop
xchg
mov
in
push
loopne
mov
sarb
jno
lds
jg
lock
mov
mov
and
je
fadds
jb
jl
jp
jge
icebp
cmpsb
lcall
pop
sar
pop
sti
out
cli
adc
jns
sub
popl
dec
in
pop
add
insb
jp
lret
scas
repnz
adc
shl
les
scas
popf
dec
out
outsb
test
mov
lods
pop
fidivs
sub
cmc
bound
xchg
icebp
in
in
leave
imul
mov
bnd
icebp
jae
mov
popf
jp
jne
out
scas
add
and
pop
mov
pushf
in
lods
lcall
push
lahf
mov
outsl
aad
push
xor
mov
jae
gs
gs
jl
les
adc
jmp
fstpt
jo
add
push
inc
test
imul
mov
cld
jp
push
call
es
std
lret
cmp
mov
dec
xor
loop
push
adc
ffree
iret
lods
sbb
pop
cmp
mov
and
mov
bound
push
sbb
in
mov
sbb
outsl
fsubrs
sbb
xchg
push
out
mov
jns
outsb
sub
mov
pop
sbb
sub
fdivp
in
and
jnp
jg
xchg
lods
inc
cli
hlt
nop
cltd
push
sbb
mov
ja
cmc
shl
popa
mov
mov
add
imul
and
push
xor
inc
adc
sbb
sub
mov
xchg
lods
pop
into
jbe
sbbl
cwtl
out
mov
mov
movsl
pop
add
cs
aam
data16
mov
cmpl
sar
test
xchg
rcrl
inc
scas
rcl
pop
test
xchg
pop
jno
ljmp
jmp
into
data16
shr
lock
jnp
jl
shl
pop
cmp
es
and
stos
out
rcrw
repnz
lahf
pop
bound
jno
sub
xchg
xchg
pop
inc
insb
jae
mov
popa
shrb
pop
ja
jmp
dec
sub
ja
push
mov
mov
divl
xor
dec
inc
outsb
lahf
stc
hlt
push
lods
sbb
jb
lods
in
pop
push
lea
in
test
lock
clc
jge
fdivrl
testb
frstor
push
cmp
sti
xchg
into
sub
sub
int3
pop
js
enter
in
fstl
pop
pushf
jnp
jo
xchg
adc
inc
inc
pop
pusha
test
mov
je
mov
pushf
pop
dec
xorb
adc
xorl
addr16
rol
xchg
and
inc
int
xor
nop
popa
pop
sti
sbb
lcall
ds
add
mov
ret
and
and
stc
aam
cmp
outsb
je
addr16
mov
mov
cmpsl
dec
aaa
cs
adc
cwtl
and
push
or
jns
fcompl
ja
xor
cld
aam
inc
ja
adc
pop
pushf
shl
ja
and
or
sub
mov
xchg
sub
mov
pop
jg
cltd
mov
movsb
xor
repz
faddl
das
test
jne
fsubl
out
mov
popa
sbb
or
popa
je
sbb
adc
addr16
dec
push
lahf
or
imulb
xchg
pop
xor
xchg
jo
movsb
jle
lods
jnp
pushf
in
lds
out
or
rsqrtps
dec
cwtl
andl
lock
into
ds
lret
adc
loop
in
mov
pop
fiadds
sbb
pop
mov
mov
rcll
nop
mov
fldlg2
lret
out
and
divl
int
mov
cmp
and
adc
sahf
cli
cmp
or
jg
inc
popf
ds
imul
fistpl
sbb
aas
add
cmp
pusha
xor
mov
ds
and
push
arpl
aas
test
add
ret
sub
test
ja
inc
jp
jae
pop
mov
iret
lret
dec
inc
sub
jp
in
sbb
aam
dec
mov
cmp
aam
push
addr16
jne
push
xor
mov
sub
push
shrb
sub
cmp
cmp
mov
sub
orl
cmp
pop
sbb
adc
out
repnz
ret
shrl
xorl
movsb
rorl
xchg
and
fsubs
gs
mov
xor
aam
pop
or
fistpl
orl
adc
inc
jo
cmp
fnstcw
shrl
mov
dec
ds
outsb
lock
in
pop
cwtl
and
xorb
fs
jo
push
push
cmp
fidivrl
cltd
lods
or
jns
rcll
outsb
xor
fyl2x
mov
push
das
std
mov
loop
aam
or
push
cmp
mov
jno
inc
jmp
cmp
jecxz
out
sub
out
aam
test
aad
mov
test
sbb
inc
cmp
fwait
inc
nop
push
xorb
and
mov
out
xor
inc
cmp
inc
mov
test
setnp
mov
sub
nop
inc
mov
xchg
ja
sbb
and
cltd
mov
aad
in
pusha
test
mov
sub
add
or
dec
mov
divb
jg
test
gs
push
jmp
sahf
fidivs
adc
cld
mov
mov
dec
fcmovnu
mov
add
push
fnstenv
popa
xor
inc
iret
clc
jp
inc
adc
push
stos
lret
loopne
jo
ret
les
loop
les
mov
sbb
hlt
mov
add
push
jmp
sarb
clc
pusha
sub
into
int3
out
dec
aaa
iret
mov
pop
shr
shlb
push
mov
movsl
xor
in
adc
inc
mov
push
sub
xchg
aaa
push
repnz
pusha
dec
enter
lea
push
jno
pop
sub
cwtl
insb
inc
mov
les
loope
xor
out
inc
arpl
nop
inc
lcall
stos
cmp
outsl
add
dec
in
adc
ss
stc
add
lds
dec
add
fldl
je
and
mov
sub
andb
mov
fcmovnu
xchg
out
lcall
or
inc
popa
out
outsb
mov
jns
and
sub
cltd
es
mov
cmpsb
push
fldcw
les
dec
daa
shr
mov
loope
mov
add
leave
pop
lods
test
xor
xchg
push
test
jmp
xor
out
das
lret
xor
mov
les
push
cmc
icebp
shr
cld
movsl
sub
dec
fidivrl
loop
jg
paddd
inc
loop
mov
jne
jmp
es
xchg
cmp
sub
es
mov
xchg
idiv
pop
icebp
xor
pop
cmpsb
pusha
pop
push
jae
scas
outsl
xor
inc
int3
popa
adc
cmpsl
mov
xchg
pop
push
popa
sub
repnz
inc
orl
rorb
or
ljmp
stc
push
aad
shlb
xchg
dec
jo
sbb
aam
js
test
ret
and
mov
cmp
jnp
sub
dec
lea
sub
mov
inc
jae
pop
test
out
popf
stc
gs
adc
xor
push
mov
scas
mov
mov
outsl
es
int
fidivrl
mov
pop
fwait
dec
rcl
jle
and
dec
mov
and
xchg
fwait
lret
in
mov
dec
mov
xor
inc
sbb
dec
jbe
or
mov
fnsave
mov
sbb
imul
aas
out
xor
test
xorb
sbb
jecxz
pop
loope
mov
sbb
jns
xor
push
sub
pop
mov
adcl
adc
jae
mov
cmpsl
fdivr
popa
and
sub
repnz
jne
fs
push
pusha
jno
cmpsb
cmp
push
int3
rolb
dec
repz
in
xchg
pop
xor
inc
rclb
test
sbb
or
je
sub
mov
shrb
fwait
jb
or
imul
jmp
cmpl
mov
pop
jg
mov
mov
test
sbb
adcl
dec
dec
sahf
repnz
das
jecxz
rorb
pop
mov
loop
mov
std
xorl
shlb
mov
add
pop
cltd
adc
ds
lods
xor
push
and
and
push
adc
xchg
cmp
fnstenv
roll
mov
mov
inc
popa
mov
aaa
inc
js
dec
pop
lret
imul
pop
add
sub
inc
xchg
mov
lahf
push
nop
sbb
lahf
out
pop
inc
mov
outsl
jge
ss
cmp
xchg
ret
mov
popa
in
push
cmp
inc
cwtl
mov
lods
fiaddl
mov
arpl
or
in
and
lods
nop
cwtl
cmp
mov
out
mov
push
sbb
sub
jne
nop
sub
dec
xchg
icebp
adc
mov
pop
sub
aad
or
hlt
xor
push
xlat
test
shll
mov
sbb
icebp
gs
movsl
xchg
ja
cmpsl
mov
xchg
jmp
aad
incl
fisttpll
inc
inc
xchg
jb
imul
aam
in
cmp
scas
cltd
dec
ret
mov
mov
lds
add
xchg
xor
cwtl
xor
inc
fildll
xor
mov
iret
push
dec
push
push
cltd
inc
mov
sub
or
out
jne
test
sub
pop
loop
repz
pop
push
lret
jmp
aas
push
push
adc
loop
insb
sti
mov
sahf
jno
adc
outsb
mov
jo
nop
pop
mov
push
push
imul
mov
cmp
mov
in
sub
inc
pop
imul
outsl
pop
repz
jle
xchg
mov
fcompl
sub
jo
pop
icebp
mov
xchg
pop
dec
fcompl
inc
sub
fwait
dec
scas
add
add
push
pop
ss
lahf
jp
stos
sbb
jnp
xchg
xchg
jnp
add
repnz
pop
in
lret
shlb
das
push
mov
cmp
pop
dec
push
dec
and
call
and
lahf
call
pop
nop
adc
bound
xor
cmpsl
shlb
fdivrs
adc
adc
pop
fwait
push
cmp
fildll
scas
out
insb
xchg
data16
jg
mov
pop
xchg
jnp
adc
pop
ss
fsubrs
inc
sub
cltd
int3
adc
add
or
jo
push
adc
call
idivl
outsb
inc
sub
xor
push
or
add
aad
sbb
lret
aad
orb
inc
mov
cmp
into
mov
push
jl
jnp
cmp
push
arpl
int3
nop
xorb
or
fwait
xchg
pop
pop
cmpsl
icebp
ja
mov
sbb
add
or
sub
cmc
mov
out
inc
sbb
mov
imul
adc
xchg
outsb
loopne
or
cmp
mov
pop
sub
std
mov
and
sub
lods
mov
push
lods
les
scas
push
ljmp
pop
cmpsb
cwtl
cmpl
ss
mov
idivb
icebp
fidivs
mov
adc
js
cmpw
loopne
fstp
fisubrl
or
adc
jl
into
popf
stc
cld
mov
mov
or
int3
xchg
cmpsb
jns
aaa
pop
add
mov
bound
ret
xor
inc
push
scas
daa
xchg
mov
into
out
pushf
mov
push
xlat
push
xor
imul
stos
add
popf
ja
aas
shr
aam
mov
cs
pop
inc
push
shlb
push
sbb
xchg
das
inc
add
or
imul
sub
orl
sub
sub
xlat
cmp
jbe
dec
pop
loop
xchg
dec
pop
push
or
and
xchg
push
sub
push
insb
fbld
cmpsb
and
out
inc
repz
das
imul
jno
rorl
sub
into
fucomip
mov
aad
or
sub
push
xor
aam
insb
or
cltd
sarb
pop
jmp
mov
jmp
jb
push
xchg
or
jbe
or
add
mov
les
jns
push
inc
lret
mov
pop
mov
fs
lcall
xchg
cmp
std
leave
icebp
outsb
hlt
in
fimuls
mov
insl
push
xchg
add
cmpsl
adc
fcomp
sbb
out
push
push
rcl
inc
ret
addr16
lods
fbstp
adc
es
cld
pop
aam
push
js
clc
hlt
into
add
cmpsb
les
pop
pop
fdivs
sbb
data16
push
sbb
in
jno
xchg
dec
not
add
es
mov
jnp
push
test
hlt
add
sub
push
xchg
setp
cmp
call
lcall
adc
ljmp
shlb
push
fsubr
loopne
jp
std
xor
in
mov
mov
add
mov
hlt
xchg
add
push
sarb
xchg
push
movsb
xor
stos
jge
mov
push
into
pop
add
out
cltd
stos
mov
jo
or
jnp
and
mov
xor
imul
xchg
in
xor
inc
mov
fcomps
pop
rorb
mov
ficoms
inc
jb
and
mov
sbb
add
fwait
mov
mov
movsb
leave
fs
test
aas
xor
outsb
push
inc
fisttpll
inc
xchg
push
cmpl
sbb
andb
push
repnz
setp
stos
and
xchg
add
jns
add
cmpsl
dec
mov
and
popf
inc
shrl
mov
cld
inc
hlt
xchg
add
mov
icebp
mov
dec
sbb
mov
sbbb
sub
out
dec
cmp
jo
add
inc
jno
sarl
dec
xchg
sbb
sub
lret
dec
clc
testb
sti
hlt
add
data16
in
fistpl
jnp
sahf
rclb
mov
and
rorl
std
cmp
arpl
pop
loopne
cmp
cmpl
xchg
push
lcall
sbb
add
cld
fisttpll
nop
xor
jae
xor
pop
pop
and
mov
sub
out
jns
roll
jbe
fcmovu
fwait
xor
jb
jne
int3
jbe
dec
mov
fstl
push
cmc
jge
jns
loop
into
inc
mov
or
xchg
mov
add
lea
in
pop
jb
mov
mov
xlat
sahf
mov
fistpll
jmp
inc
sbb
or
jnp
cmpsb
loopne
xchg
fcomps
int
mov
push
adc
jne
dec
jb
testl
loope
dec
dec
lods
inc
lahf
inc
xor
mov
je
xchg
xchg
pop
mov
pop
popf
repnz
lock
mov
push
test
pop
dec
add
pop
rol
mov
cmp
not
in
lock
hlt
mov
hlt
sbb
fldcw
movsb
inc
insb
mov
jbe
adc
xorb
xchg
mov
cmp
test
cmp
lds
scas
push
or
loopne
jno
movsl
dec
mov
push
fwait
ret
adc
push
jp
sbb
mov
ret
mov
add
pop
enter
in
out
ja
iret
je
push
and
stos
pop
dec
and
add
jg
jno
push
inc
ror
push
test
cmpsl
inc
test
imul
pop
fcomps
and
lret
adc
ljmp
adc
sahf
jb
out
bound
add
cli
inc
lgs
jne
stos
sbb
add
adc
orl
mov
lret
std
xchg
pusha
gs
fiadds
jne
dec
inc
mov
pop
fmul
nop
int3
ficompl
dec
jb
xchg
test
jecxz
jp
xor
jmp
fcoms
or
xchg
sub
dec
es
arpl
pop
jb
mov
pusha
cmp
int
jp
cmp
inc
add
pop
int
movl
imul
cmp
repnz
ds
cmp
mov
mov
push
xor
jle
xor
popf
ds
sbb
and
aam
inc
inc
xchg
jg
dec
scas
clc
out
sub
pushf
movsl
add
cmpsb
mov
cmp
icebp
mov
out
xor
add
test
outsl
pop
fidivrs
lea
sbb
pusha
xchg
addb
movl
inc
and
pop
jae
les
lods
sbb
inc
push
mov
or
aam
push
and
cld
jecxz
or
jp
or
or
mov
adc
adc
add
outsl
and
das
cs
sub
adc
push
mov
mov
mov
mov
addr16
aad
iret
outsl
dec
mov
jo
mov
mov
fcompl
repnz
test
inc
hlt
outsb
and
push
sub
stos
xchg
aas
push
pushl
add
popf
sub
out
pop
pop
or
popa
dec
add
mov
xchg
ss
decb
mov
repnz
cld
roll
ret
jbe
aaa
mov
sub
pop
into
cmp
andb
stos
inc
jae
lock
xchg
das
sbb
adc
or
icebp
into
icebp
movsl
add
xchg
or
fnsave
sahf
insb
shlb
push
loopne
dec
pusha
popf
dec
xchg
cltd
loop
icebp
dec
scas
pop
xor
dec
mov
lcall
dec
push
jae
jbe
jmp
bound
sub
gs
pop
fisubrl
xor
nop
jmp
leave
inc
fdivr
fcmovbe
aas
rcrb
adc
std
jb
push
fs
sub
loope
sahf
mov
sti
pop
xchg
in
dec
dec
clc
add
movsl
wbinvd
pop
imul
scas
mov
outsb
mov
js
popf
mov
cmp
dec
cmp
xchg
ljmp
sbb
lret
ljmp
ds
cmp
imul
lds
adc
or
dec
mov
bound
lret
xchg
jbe
repz
sbb
in
cmp
shll
and
mov
jo
in
fisttpl
inc
mov
mov
adc
test
add
fistps
mov
jmp
push
cmp
ret
adc
in
ljmp
dec
rorl
xchg
shrl
pop
scas
les
roll
mov
or
test
mov
mov
mov
cmp
sbb
fstl
adc
and
gs
jl
inc
sub
in
stos
popa
ds
daa
lods
fisttps
pop
xlat
xchg
add
mov
adc
and
dec
adc
hlt
leave
sub
scas
mov
stos
jl
dec
mov
or
mov
movsl
flds
mov
test
cmp
movsb
leave
xor
rolb
in
lock
int3
jmp
push
cmpsl
js
pop
sbb
into
ss
lea
aas
rorb
cs
icebp
and
ja
negb
jnp
jae
jo
push
lods
fwait
add
call
push
inc
sub
ficomps
cmp
sbb
ret
js
adc
adc
test
jae
dec
or
sub
popa
lods
mov
mov
push
inc
jns
or
add
cmc
xor
push
shrb
aad
movsb
flds
loopne
jmp
pushf
and
adc
fs
or
fisubrl
cld
jge
xchg
stc
cli
lock
jge
cmp
push
push
mov
sarl
imul
idivb
jns
cmc
sbb
fstpl
push
jg
push
orl
xchg
lea
add
sbb
stc
adc
pushf
jge
or
dec
xor
sbb
gs
mov
xchg
add
mov
lret
add
in
inc
and
or
jle
cmpl
inc
loope
cld
test
stc
enter
mov
inc
cld
shrb
mov
xchg
cmp
mov
mov
andb
mov
pushf
aam
mov
dec
pop
imul
push
icebp
je
adc
pop
cmp
push
out
xor
mov
push
dec
and
inc
jge
int
fsubl
adc
xor
mov
subl
in
aaa
pop
sbb
add
push
sbb
pop
mov
out
in
divl
mov
imul
flds
cmpsl
rcll
scas
int3
and
in
ss
out
push
add
jle
jle
sub
mov
pop
cwtl
imul
lcall
jae
pop
in
mov
xchg
f2xm1
icebp
inc
pop
xor
imul
js
aam
push
gs
mov
and
lea
push
in
ss
adc
fstl
outsl
stc
out
jmp
cmp
mov
fnstsw
cmp
inc
das
dec
into
encls
outsb
inc
sub
pushf
or
dec
repz
idivl
xorl
jg
pop
mov
add
pop
push
xor
clc
cs
dec
out
push
cwtl
and
into
ret
leave
pmaxsw
int
jge
inc
shll
mov
mov
xor
fimull
xchg
inc
mov
mov
mov
pop
jge
dec
jl
lahf
insl
jp
ror
push
or
cmp
not
popa
jns
movsb
jne
push
push
repnz
shrl
in
ss
mov
bound
push
js
aam
cld
push
jl
inc
push
std
xor
scas
mov
or
fimull
daa
loopne
pop
subb
stc
xor
loop
imulb
aam
and
pusha
mov
out
mov
lods
push
cmpsl
into
insb
decl
jns
icebp
pop
mov
inc
jno
mov
movsb
inc
pop
adc
ja
shlb
sub
sub
cltd
jge
dec
faddl
fstp
lods
pop
mov
xchg
jl
sbb
add
je
loope
outsl
jmp
mov
lcall
daa
movsl
cmp
inc
mov
stc
jecxz
jmp
and
jp
cld
popa
pop
aad
mov
jmp
add
push
pop
pop
in
xchg
mov
dec
lret
negb
adc
xor
push
or
xchg
fsubp
xchg
insb
add
push
stc
insl
mov
aas
sbb
and
lret
sti
insb
mov
xor
scas
jl
mov
sbb
and
add
sub
gs
xor
inc
push
data16
shrl
push
mov
outsl
push
inc
mov
jle
mov
scas
cmp
mov
pop
popf
push
xchg
xchg
push
popa
xchg
mov
ret
movsl
xchg
cwtl
pop
and
mov
jge
cmpsl
sub
fbld
decb
sub
and
int
int
dec
loope
bound
push
mov
inc
mov
lret
jl
mov
mov
cmpsb
or
jne
adc
jmp
ret
in
cmp
das
into
jns
cmp
adc
das
mov
jbe
xor
or
pop
data16
mov
jbe
mov
mov
or
es
rcr
insl
jmp
inc
jb
js
pushf
popa
or
xchg
call
int3
rcrb
push
mov
lahf
adc
stos
lods
sub
fucomi
sbb
add
adc
mov
fists
repnz
sbb
sub
pushf
into
test
sub
inc
cmc
loop
imul
mov
jno
in
inc
mov
dec
mov
mov
mov
push
xor
xchg
mov
dec
dec
jb
mov
push
or
ja
rcrb
sub
adc
fldt
mov
loopne
rcr
out
mov
lods
pop
xorl
std
mov
je
stc
adc
shrl
mov
mov
jns
mov
cwtl
mov
icebp
push
cmc
mov
mov
insl
sub
xor
outsb
mov
test
xchg
cmp
inc
cmpsl
mov
and
fcoms
movsb
lret
sarl
inc
repnz
daa
aam
inc
push
sub
hlt
push
xor
mov
sub
test
mov
sti
clc
mov
inc
enter
pop
pop
push
inc
dec
lds
xchg
xchg
add
sub
cmp
sti
insl
aam
rcl
cmp
and
cmpsl
sbb
xchg
xchg
mov
gs
test
lret
sub
add
mov
repz
addl
jo
lods
sbb
sbb
mov
cli
mov
xor
push
std
test
xor
inc
pop
scas
pop
and
jo
pop
push
sbb
push
and
inc
nop
cltd
mov
add
mov
pop
mov
stos
jae
cmpsl
repz
xor
div
test
ret
in
imul
xor
or
out
mov
mov
adc
shlb
in
jae
sub
gs
adc
or
lds
dec
mov
xlat
push
ret
xor
xor
fldl
dec
in
and
push
jmp
inc
pushf
and
mov
loope
dec
mov
jge
lar
stos
dec
out
bound
cmp
push
je
in
sti
mov
fwait
mov
xor
mov
pop
sahf
jmp
in
sbb
imul
push
lock
test
add
out
cwtl
adc
jno
enter
lock
xchg
sub
andl
ficoml
lret
cmpsl
fldt
pop
push
sub
adc
stos
jnp
gs
scas
cmp
mov
or
js
insl
push
mov
fisttps
pop
cmpl
mov
xchg
sub
int
sbb
jl
pop
hlt
ds
xlat
inc
out
sahf
les
outsb
or
jecxz
and
std
adc
aas
sub
arpl
inc
loop
arpl
mov
and
ljmp
fcomi
outsb
pusha
sub
mov
inc
nop
sbb
test
jne
sbb
mov
loopne
test
or
xlat
or
aaa
jg
xorb
inc
mov
mov
fs
sub
mov
ret
mov
xchg
hlt
notb
mov
rolb
mov
outsb
lods
dec
adc
sub
xorl
int
repz
push
cwtl
ret
push
xchg
inc
pop
lock
inc
sbb
loop
and
push
jl
cmpsl
fnstenv
lds
adc
loope
nop
lock
xor
xchg
push
or
push
pop
mov
popa
lods
inc
xchg
rclb
mov
xor
mov
xor
test
dec
jne
mov
fstpl
fisttpl
int3
jl
adc
pop
mov
out
sub
xchg
fdivrp
mov
out
xchg
ss
pop
mov
ret
pop
jno
mov
pop
cli
push
jge
xlat
pop
out
jecxz
pop
push
cld
clc
lcall
and
dec
mov
mov
movb
aam
mov
lock
pop
pop
out
shll
push
outsl
push
lahf
mov
and
inc
les
into
sub
mov
aad
inc
sbbl
push
jp
cli
jge
int3
mov
and
jno
pop
mov
lcall
sub
sahf
or
mov
mov
sarl
fmuls
mov
not
cwtl
add
pop
jne
stos
sub
push
fcoms
jg
cmp
inc
pusha
xchg
hlt
ja
gs
jae
cmc
cli
xor
cmp
cmp
jmp
mov
dec
clc
dec
mov
mov
inc
int3
sbb
xchg
jo
add
cli
sbb
int3
dec
ja
sbb
adcl
sub
dec
cmp
and
loopne
adc
popa
dec
mov
or
xor
hlt
pushf
adc
into
out
cmp
out
imul
cwtl
into
xor
je
mov
popa
jo
fildl
push
movsb
sarl
jecxz
inc
pushf
repz
mov
scas
cs
shll
fsubl
cmc
mov
xchg
or
push
jecxz
sub
or
inc
vprotd
mov
test
repz
leave
cmp
shlb
add
test
ds
nop
bound
mov
rcrb
dec
mov
pop
outsb
or
and
rolb
cs
fbld
leave
dec
and
test
sahf
mov
gs
cmp
dec
pop
ds
outsl
sti
jmp
xrelease
insl
call
lret
nop
ljmp
ret
push
pop
dec
xchg
inc
fs
cmpsb
dec
xchg
andl
das
or
das
fistpl
pop
xchg
pushf
sbb
inc
test
aad
sbb
pop
je
dec
repz
ja
mov
mov
lock
ret
pusha
fdivrs
fs
cld
mov
pop
jle
fwait
ret
lea
inc
jp,pn
mov
test
pop
mov
or
pop
mov
pop
bswap
imul
inc
mov
leave
xor
inc
aaa
lret
jns
and
loop
xchg
stos
xor
mov
repnz
lods
cwtl
imul
pop
dec
push
cwtl
daa
xor
test
fidivrs
fwait
loope
jg
enter
jae
jle
lock
sarl
aam
call
stc
test
rorl
pop
lea
cli
popw
je
mov
cwtl
vmovapd
mov
xor
push
shlb
jmp
bound
stc
push
inc
js
in
cmp
out
or
sarb
imulb
mov
pop
xchg
addl
aaa
mov
rorb
cmp
xor
je
lods
mov
bound
jmp
icebp
jl
sahf
aas
popf
jg
in
and
loope
cmc
cmp
adc
cltd
and
test
mov
mov
fmul
fsubr
lds
stc
sbb
rep
adc
popa
jne
inc
cmpl
ficomps
lds
mov
sbb
adc
push
ficoms
test
cli
and
mov
lcall
into
inc
fcmovnbe
lcall
popa
mov
in
push
dec
and
icebp
test
int3
push
push
sbb
push
add
add
popf
fstl
xor
iret
notl
shlb
xchg
mov
popf
in
pop
js
pop
ljmp
shrb
notb
gs
aam
out
fdivl
dec
scas
jno
cmp
out
and
mov
xor
or
call
fs
mov
mov
leave
jne
repnz
out
sti
loopne
fildll
daa
push
addl
lahf
xor
stc
adc
cmp
or
in
jecxz
push
mov
pop
icebp
fildl
pop
mov
inc
in
mov
mov
cmpsl
and
cmp
arpl
dec
mov
cmp
loopne
inc
pop
ja
cmp
cmp
pop
fidivrs
les
cwtl
mov
out
jmp
dec
lret
jno
jb
rorl
imul
imul
cwtl
or
scas
out
add
jmp
mov
cld
mul
xor
mov
pop
xchg
push
nop
sbb
int3
xchg
outsb
xor
rcrl
and
pop
lret
push
add
daa
xorb
jae
pop
into
sbb
sub
jno
dec
dec
aam
xchg
or
fs
add
and
sbb
mov
je
mov
call
inc
push
shl
xor
cmpsb
cmp
loopne
pop
imul
out
data16
mov
and
aam
cmp
adc
sti
cli
decb
sub
xlat
pop
addb
sbb
push
inc
cmp
aam
subb
adc
stc
lods
add
jmp
jo
jno
loop
mov
or
or
andb
mov
pop
repnz
dec
call
iret
fs
sub
sub
out
dec
cltd
fstl
push
xor
dec
mov
decb
mov
jmp
push
mov
cld
xchg
mov
and
fs
xor
push
dec
stos
pop
push
hlt
dec
and
jo
sub
outsl
lock
adc
and
sub
pop
xchg
dec
or
cld
out
push
test
out
mov
call
mov
fbld
xchg
sar
xchg
push
mov
mov
fistpll
mov
cmc
mov
dec
push
mov
lods
fldl
sub
mov
xchg
adc
xor
aam
pushf
cltd
mov
cmp
movsl
es
and
pop
lods
fbld
aam
dec
adc
mov
and
lds
ss
popl
movsb
orl
addb
clc
mov
loop
das
xchg
inc
pop
lods
lahf
xchg
pop
xchg
or
movsb
inc
sub
sbb
arpl
ds
mov
out
fsts
loopne
out
movsl
in
popa
je
in
mov
jb
xor
push
jl
addr16
iret
loope
shlb
lea
fnstsw
sub
inc
mov
jmp
cmp
mov
aaa
jl
das
jae
pushf
into
push
jb
xor
mov
hlt
ret
add
mov
pop
xchg
pusha
outsl
rclb
inc
mov
push
push
scas
into
inc
jb
sub
inc
mov
add
mov
dec
in
call
or
inc
cmp
or
in
jnp
pop
andb
dec
jne
insl
shrb
jge
int
ret
push
or
push
dec
push
aas
mov
push
std
push
sbb
jb
stc
mov
loop
mov
fcmovb
dec
lds
xchg
adc
inc
sub
imul
adc
xchg
sbb
adc
inc
jo
shll
cwtl
ljmp
xchg
pop
or
mov
fmuls
mov
outsl
push
scas
sbb
mov
push
mov
lret
mov
inc
popa
push
add
push
daa
pop
int3
cmpsl
repnz
mov
in
icebp
repz
sti
or
imul
mov
push
ds
repz
sahf
inc
push
leave
mov
fwait
mov
ja
test
sar
rorl
push
in
xor
sub
jp
add
pop
sbb
js
jg
mov
lret
cltd
inc
jge
stos
add
mov
scas
loop
es
bound
push
daa
sbb
ja
mov
into
in
push
push
test
mov
sub
test
xchg
mov
hlt
push
mov
js
enter
out
lods
xchg
mov
or
int3
pop
idivl
imul
mov
mov
test
dec
scas
je
jne
mov
lods
jle
push
jb
sub
mov
aad
arpl
loope
repnz
sub
or
sti
push
cmpsl
push
pop
in
inc
or
xchg
xor
daa
and
ret
xchg
adc
sbb
ljmp
xchg
cmc
in
sbb
and
xor
mov
shr
mov
int3
pop
inc
mov
add
imul
jge
repz
inc
in
dec
mov
cmp
stos
or
daa
dec
neg
es
or
or
dec
and
stos
stos
jmp
andl
icebp
fiadds
outsl
mov
nop
pushl
fidivs
imul
sbb
mov
lock
xchg
fisubs
xchg
pop
mov
cmp
xchg
fcompl
mov
std
jp
dec
pop
mov
sbb
mov
xchg
loope
iret
sub
roll
fwait
les
hlt
fstpt
mov
sub
pop
pop
out
fucom
mov
lcall
int
in
or
dec
loope
dec
inc
cwtl
adc
sbb
pop
cmp
insb
cmp
in
rclb
inc
push
dec
push
push
testb
popa
ja
adc
out
test
and
fs
insb
imul
jecxz
dec
xchg
xchg
fdivs
cli
sar
push
push
jb
inc
gs
inc
loop
pop
and
ds
push
imul
test
shrl
imul
lea
call
push
cmp
loope
mov
pop
cmp
mov
pop
cmc
mov
jae
and
shll
jle
pop
xor
add
pop
inc
cwtd
and
cmp
loope
stc
mov
mov
cmpsb
outsl
aam
push
lea
outsl
mov
fnstsw
mov
dec
cmpsl
and
sbb
aam
mov
inc
dec
sub
lret
xor
mov
add
into
cmp
subb
dec
pusha
jae
cmp
inc
scas
movsl
shlb
jns
arpl
add
xor
orl
decl
jp
mov
inc
cmpsb
mov
xchg
mov
lret
push
aam
enter
push
cmc
sbbl
fwait
sub
xchg
xor
push
in
dec
das
fildll
daa
shll
les
xchg
in
imul
cld
pop
ds
lods
fisubs
cmp
js
in
repz
or
mov
mov
inc
mov
jne
adc
mov
sbbl
pop
clc
xorl
fcomi
push
lahf
in
sbb
dec
mov
or
jns
sbb
out
vmovaps
mov
lods
inc
mov
into
jmp
scas
lods
dec
fcmovbe
mov
mov
or
dec
adc
mov
sub
stos
shl
xchg
addr16
push
scas
jmp
sbbb
xor
mov
movsbl
inc
insb
movsl
sbb
mov
cmp
loopne
pop
insb
sarb
pusha
into
push
and
sub
jmp
inc
roll
adc
jmp
mov
gs
mov
inc
ss
ds
adc
shll
mov
ficoml
das
inc
leave
mov
sub
add
pop
fisttpl
fsub
ljmp
sub
mov
push
push
jno
iret
fs
mov
pusha
lock
sbb
xlat
push
or
ficompl
dec
nop
inc
daa
mov
pop
xchg
popa
push
push
in
sub
ja
repnz
mov
xor
dec
lahf
xchg
mov
lods
mov
add
mov
or
into
sahf
mov
xchg
loopne
push
jle
mov
outsb
xchg
dec
sbb
cmp
mov
xchg
ljmp
lcall
push
lcall
push
or
in
out
mov
lods
sub
orb
xchg
xchg
adc
enter
movsb
mov
es
push
int
pop
xchg
push
xor
es
std
jg
insl
cmp
cmp
xchg
inc
dec
data16
stos
sti
fmull
lret
adc
sub
shrb
clc
ja
lret
rorb
jl
sbb
adc
pop
bnd
js
push
jle
add
mov
jmp
fiaddl
nop
mov
aas
ficomps
inc
lahf
adc
sbb
xor
xlat
jo
repnz
mov
leave
stos
pop
addr16
insl
xor
xchg
add
pop
xor
push
lret
and
sub
data16
cmpsl
sub
cli
fstps
enter
add
sarl
pushf
popa
das
mov
xchg
pop
test
inc
aad
mov
pop
dec
dec
sub
push
subl
dec
push
or
sbb
xor
pop
sbb
mov
ret
xor
adc
dec
shlb
adc
rolb
arpl
add
dec
out
test
test
push
pop
or
adc
cmp
mov
rclb
inc
rol
pop
xchg
inc
lods
dec
mov
fistpl
aas
jne
adc
push
daa
mov
ljmp
shll
jle
arpl
jbe
inc
jle
ljmp
inc
add
sti
fmul
popa
xchg
jmp
cli
in
jb
int
or
fadds
jle
int3
test
lea
subl
enter
inc
lds
push
xchg
mov
insl
dec
js
mov
inc
and
scas
adc
push
fiaddl
out
xor
inc
xchg
lock
das
lds
xor
insb
fisubl
dec
inc
adc
stos
shlb
or
or
les
sahf
ret
mov
cmp
push
fimuls
xor
fs
ds
movsb
sub
xchg
fildll
sub
aaa
outsl
stos
imul
repnz
inc
xchg
jb
or
negb
xor
pushf
int
add
addr16
inc
daa
std
and
cwtl
mov
dec
cmp
lret
xchg
inc
mov
fcomi
ds
lods
add
mov
ljmp
lods
xor
xchg
jbe
and
jmp
stc
insb
cmpsl
mov
shlb
ss
arpl
dec
push
daa
sbb
and
and
cwtl
movsl
lcall
xchg
mov
shlb
pop
and
mov
pop
les
adc
mov
pop
pop
cltd
cmpsl
add
insb
jbe
jo
stc
cmp
mov
mov
in
leave
sbb
icebp
jle
call
movsb
push
push
mov
xchg
jns
push
fnstenv
push
xchg
outsl
sti
outsb
pop
mov
dec
push
fcomip
jno
push
push
jge
out
add
cli
addr16
mov
setbe
dec
and
sub
jle
mov
add
pop
gs
mov
sub
cmpsb
insb
arpl
das
pop
mov
sub
or
imul
popa
cmpsb
adc
mov
dec
dec
dec
test
bound
dec
ja
fistl
sar
imul
sub
popf
cli
push
imul
dec
push
scas
jge
out
pop
popa
stos
pop
testb
aas
lock
gs
jno
adc
test
popf
xchg
mov
fcomps
out
push
std
in
mov
and
ficoml
ret
out
in
in
mov
dec
jl
xchg
lock
xorl
lcallw
mov
cmpsl
outsl
imul
insl
sbb
mov
mov
outsb
dec
adc
inc
mov
and
cwtl
lods
xchg
inc
pusha
mov
stos
mov
mov
sbb
inc
push
xchg
inc
xlat
jmp
and
sbb
lea
jnp
insb
sbb
das
out
cltd
imul
xchg
lods
mov
fidivrs
das
mov
push
sbb
lea
mov
test
aas
sarl
cmpsb
add
f2xm1
cs
xor
xor
in
cld
insl
lahf
insb
insb
inc
sub
ljmp
out
mov
or
and
xor
inc
inc
jns
push
dec
ss
fstps
adc
mov
xor
sub
insb
xchg
out
sysexit
and
pop
or
cli
ficoms
or
cmc
add
and
sahf
xchg
push
inc
insl
xchg
pop
pop
cwtl
or
popa
lods
sbb
pop
clc
add
xor
xor
jae
mov
repz
iret
push
adc
cmc
addb
push
leave
sbb
ja
std
std
sbb
adc
loop
sbb
shll
andl
adcl
in
ja
pop
out
add
lahf
in
shrb
or
cmp
mov
inc
inc
add
add
and
pop
mov
sub
mov
rcrl
jecxz
sahf
lea
jg
pop
data16
fdivrl
add
sbb
adc
shrb
imul
addb
sub
das
pop
push
add
into
aad
es
mov
cmp
and
inc
testl
fsubs
xor
adc
xor
ret
insb
subb
lods
std
xor
lret
rclb
xor
xchg
mov
xchg
das
lods
rep
ja
mov
mov
or
mov
jbe
cld
es
xchg
dec
sahf
jmp
lods
and
sti
pop
pushf
adc
int
mov
sbb
add
lret
xchg
test
xchg
xlat
out
popa
clc
cli
mov
sbb
or
cmp
decb
pop
mov
test
aaa
add
sub
daa
loopne
pop
xor
lret
test
add
movsl
mov
or
cmc
xchg
push
add
jge
inc
inc
dec
das
fcmovu
push
in
ret
xorl
fcoml
mov
add
rcrb
jb
push
dec
cs
xor
and
das
orb
adc
sbb
rcrb
and
repz
lea
add
dec
push
idivl
push
leave
ss
or
dec
das
mov
shr
mov
dec
jns
pop
ds
outsb
aas
testb
stos
mov
push
mov
ret
mov
cmp
nop
stos
mov
adc
cld
cwtl
arpl
xchg
mov
out
icebp
rolb
dec
ja
push
popa
push
imul
push
mov
fdivr
lods
sub
and
cmp
jg
and
add
inc
out
inc
lret
and
or
sbb
loop
stos
fmuls
mov
fsubrl
cmp
or
imul
and
mov
out
pop
jne
sbb
adc
push
inc
push
and
loopne
or
fwait
inc
pop
or
shlb
outsl
ret
adc
sysret
out
xchg
and
push
pusha
push
jbe
pop
xchg
inc
jbe
dec
fiadds
inc
lds
mov
adc
xor
cmpsl
pop
popa
xor
adc
loop
test
fisubrs
arpl
cld
faddl
dec
lret
or
int
mov
outsl
es
xchg
or
outsb
jbe
xchg
xchg
inc
sbb
enter
subl
dec
sbb
dec
cmp
inc
add
dec
xchg
mov
dec
cmp
xor
insl
xor
lahf
cmpsl
popa
cmpsb
rorl
scas
inc
clc
cmpsb
ja
mov
sub
cli
push
mov
cmp
test
ret
loope
testl
outsb
cmp
adc
icebp
pop
shll
pop
mov
or
dec
fwait
movsw
xor
int
ret
andl
jb
in
out
orb
aam
mov
fisubrs
loope
jmp
pop
mov
inc
sub
or
inc
jle
jmp
push
mov
mov
jae
jb
ficompl
adc
test
mov
jae
add
cmp
loope
push
ret
cld
mov
jmp
in
enter
sbb
mov
loopne
xor
xlat
add
imulb
decb
in
cmp
lods
popf
imul
xchg
xor
ds
loop
dec
jnp
jb
push
ret
mov
mov
subl
cmp
mov
or
arpl
add
adc
mov
repz
arpl
push
jmp
or
cmpsb
dec
xchg
scas
mov
lock
pop
add
sub
xchg
aas
jno
hlt
dec
in
sbb
pushf
in
ret
lcall
pop
shll
jge
jge
loope
scas
jbe
mov
jl
dec
sarb
iret
dec
das
scas
mov
mov
and
sar
or
test
inc
mov
dec
or
sub
xchg
lods
cmp
test
mov
outsb
cli
sbb
pop
dec
dec
fwait
push
imul
in
sub
mov
int3
mov
push
sbb
inc
call
fmuls
lods
or
xchg
xchg
ja
or
pop
aaa
cmp
xchg
or
adc
nop
fs
adc
pop
into
add
or
sti
insb
inc
bound
push
cmpsb
dec
pop
in
mov
call
cmp
shlb
rclb
jle
in
aad
push
push
js
outsl
decl
adc
dec
std
test
ljmp
push
movsl
xchg
fisubrl
push
pop
inc
mov
mov
mov
push
sub
sub
int3
or
jecxz
in
aam
sbb
cmpsb
popf
shlb
pop
jg
in
pop
mov
iret
and
and
in
mov
adc
and
add
or
cmp
inc
add
adc
je
and
push
repnz
rorb
repz
jg
sbb
jnp
or
movsb
stos
div
adc
xchg
ss
test
pop
movsl
dec
cmp
cld
stos
stc
jle
rorl
or
pop
leave
fwait
lret
jb
sub
fisubs
cmp
pop
jg
pushf
jg
shrl
lods
fimull
cmp
nop
push
jecxz
and
mov
dec
mov
adc
je
and
inc
test
gs
fcoml
jns
push
push
test
pop
jno
jae
mov
mov
cs
rcrl
cmp
out
mov
jge,pt
jl
push
sbb
jo
xlat
cmc
cmpl
mov
xchg
sar
das
and
xchg
push
fs
dec
dec
int3
push
xor
xor
or
ficomps
xchg
sbb
add
cmp
popa
andl
lret
cmp
jb
dec
push
test
loopne
je
mov
dec
imulb
lret
jp
hlt
jge
jnp
xor
mov
jno
shll
data16
pop
add
sar
mov
mov
lcall
xchg
movsb
xor
aam
enter
sti
movsb
adc
inc
sub
shlb
test
and
cmp
jg
inc
test
fidivrl
jo
sti
inc
sbb
cmc
sti
sbb
push
cmp
cmp
imul
pop
lods
sbb
adc
dec
scas
jp
sub
in
add
xchg
jns
sbb
xchg
pushf
mov
sti
push
inc
mov
jne
aas
inc
cmc
pop
inc
in
sbb
pop
es
or
push
mov
mov
dec
push
shll
imul
xchg
adc
imulb
loope
jl
xor
int3
push
es
lock
fstpl
movsl
push
fcoml
cmc
icebp
sub
fwait
jge
push
imul
stos
or
jns
jno
mov
rcrl
adc
push
mov
sbb
xlat
nop
push
pop
aaa
bound
dec
pop
inc
jne
xor
mov
pop
bound
inc
pushf
bswap
hlt
or
lock
xor
lret
idiv
push
jg
inc
lret
fwait
sarl
cwtl
cmp
dec
call
add
mov
enter
and
jl
push
sub
ljmp
sub
cwtl
stos
adc
loop
iret
in
jnp
jns
sub
in
cmp
jne
pusha
xchg
jecxz
dec
aad
sbb
imul
fisubrs
cmpsl
push
insb
fadds
add
add
es
xor
scas
iret
jne
movsl
pushf
add
jno
ret
mov
std
mov
push
ds
xor
and
je
mov
sbb
mov
inc
dec
rol
testl
adc
lds
jo
stos
shr
dec
jp
pop
add
sub
jmp
cwtl
fisubs
mov
and
ds
lock
inc
ja
icebp
negb
inc
mov
jmp
outsb
enter
lahf
xor
mov
push
pusha
sbb
stos
aam
mov
aad
mov
lret
inc
mov
loope
cmp
xor
sbb
les
incb
fs
add
ja
inc
mov
mov
push
dec
push
pop
jne
std
xor
inc
jl
fwait
movsl
add
cld
test
xchg
nop
aaa
and
movsl
inc
fucomi
in
addb
clc
lcall
test
cmp
rorl
fidivrl
push
mov
adc
dec
jg
add
push
pop
pop
ficomps
push
or
je
jnp
shrb
cwtl
pop
inc
sub
inc
inc
push
xlat
mov
rcrb
adc
xchg
or
mov
roll
pop
fcomip
pusha
or
fbstp
or
dec
outsl
add
addb
mov
push
aad
mov
lahf
bound
lods
add
int
lods
js
fmuls
add
js
inc
mov
pop
dec
cmp
jae
push
cltd
push
lds
mull
jnp
push
js
jb
mov
mov
mov
inc
push
jb
into
mov
sbb
sti
test
test
insl
roll
xor
hlt
inc
cmc
sbb
movsl
lods
inc
mov
popf
clc
lea
mov
adc
ret
cs
test
push
xlat
dec
cmp
hlt
and
push
mov
lcall
adc
and
jg
ds
and
out
loopne
push
xorb
cmp
fucom
inc
out
or
sub
push
imulb
xlat
fdivrs
cmp
dec
sub
push
cmp
xor
push
inc
and
outsl
cmc
mov
pop
outsl
imul
jbe
dec
adc
dec
adcl
jb
scas
in
adc
cmp
into
arpl
sub
fists
jge
adc
push
push
sbb
cwtl
in
int3
test
push
imull
push
add
pop
mov
arpl
and
dec
sub
push
lcall
push
push
fwait
sub
add
mov
sbb
outsb
jle
adc
mov
pop
aad
pop
stos
jbe
pop
xchg
nop
sbb
out
adc
add
in
mov
xor
pushf
mov
js
repz
push
adc
jecxz
in
xchg
loope
sub
repz
xor
push
insb
mov
lret
out
adc
inc
jne
scas
jg
int
sti
pop
mov
incb
sub
fisttpl
mov
in
push
les
ja
lret
jmp
xor
xlat
dec
cmp
stos
jle
imull
sbb
add
mov
mov
pop
test
add
test
push
arpl
or
insl
leave
sub
insb
sbb
ret
lret
pop
and
mov
ret
test
xor
xchg
xchg
loope
pop
dec
cli
loop
cmp
xchg
icebp
mov
mov
pop
xor
sub
loop
sbb
sub
dec
push
sub
test
iret
cmp
inc
and
mov
mov
pushf
or
inc
int3
jg
pop
mov
adc
jge
xchg
push
fst
xor
xor
sub
jge
lock
das
mov
mov
sub
jle
or
cmp
mov
or
dec
rclb
fiaddl
fdivr
fucomi
adc
cwtl
push
xchg
cwtl
or
xchg
dec
jne
dec
negb
in
and
push
xor
cmc
and
or
xor
mov
jecxz
mov
lea
ss
xchg
cli
es
mov
out
xor
aaa
arpl
xchg
in
stc
add
les
sbb
dec
xor
lahf
pop
xlat
movsb
roll
jae
push
test
imul
lcall
sub
xor
jecxz
lds
decl
mov
fldl
cmp
int
mov
fildll
imul
and
cltd
sub
bound
jmp
cld
das
bound
pop
mov
cmp
push
mov
dec
fnstsw
in
and
call
lods
push
cmp
jae
inc
je
ret
jl
and
add
mov
xchg
jg
xchg
dec
sub
pushf
es
adc
cli
push
jnp
in
test
test
xchg
xchg
aam
xchg
mov
mov
bound
ljmp
push
shlb
lds
pop
or
push
pop
pop
sbb
testl
mov
mov
dec
rcrl
mov
lret
les
cmc
push
in
jle
insl
pop
sti
cld
jns
add
lret
push
dec
cmp
fcomps
cmp
adc
jmp
fnsave
pop
add
fisubl
cmp
arpl
cmc
xor
dec
sub
push
outsb
mov
jmp
push
icebp
test
fmuls
jmp
push
push
dec
adc
lahf
aam
mov
xchg
cs
lods
dec
nop
cltd
inc
jecxz
xlat
test
mov
push
mov
mov
gs
push
aas
lea
int
jge
test
sbb
lcall
xchg
inc
or
or
pop
sbb
cwtl
or
add
xchg
int3
inc
xor
mov
or
mov
repz
mov
ljmp
inc
xor
push
inc
int3
ljmp
jle
cmp
sahf
les
pop
lock
pop
sti
clc
push
lods
pop
cmp
push
xchg
cmp
jmp
aas
jecxz
xchg
lods
stos
mov
popa
mov
repnz
jb
ret
mov
push
sbb
cli
and
jle
or
and
imul
int3
jl
aaa
pop
xor
inc
stc
inc
push
mov
sbb
jge
mov
rolb
push
repnz
dec
mov
jae
ret
and
ja
mov
pop
pop
scas
cmc
sub
lock
sbb
mov
add
pop
mov
xor
pop
and
pop
movsl
dec
dec
scas
dec
ret
lds
js
movsl
cltd
mov
lock
lea
xchg
jg
xor
aas
adc
mov
mov
sub
arpl
stos
jo
cltd
cmc
jb
push
test
sub
adc
mov
fs
fs
jns
lahf
push
lcall
mov
clc
in
push
cmp
and
movsl
push
inc
sub
mov
jnp
cli
pusha
enter
sub
or
mov
mov
pop
ret
pop
mov
je
mov
fsubl
aad
lds
adc
sar
ret
loop
mov
dec
adc
stos
push
lret
and
pop
or
repnz
mov
inc
mov
adc
fwait
push
xor
pushf
mov
and
movsb
gs
push
rolb
loop
and
sbb
xchg
fucomi
inc
inc
sbb
enter
scas
out
aaa
and
pusha
fimull
repnz
cwtl
aaa
cmp
leave
xor
dec
mov
adc
sbbl
popl
pushl
dec
fstps
repnz
lahf
inc
aas
in
out
mov
outsl
sub
jp
notl
sti
mov
inc
loop
imul
popa
push
clc
daa
repnz
movsl
sub
out
jbe
xor
sbb
cmp
jmp
hlt
xlat
push
lock
dec
inc
call
mov
dec
push
rorl
xor
bound
lock
inc
scas
push
pop
and
cmp
push
arpl
popf
scas
scas
cmp
or
dec
mov
rolb
pop
push
and
or
push
push
sub
pop
push
xchg
lret
test
sub
pop
mov
aaa
idivl
mov
loope
cld
pop
repnz
xchg
repnz
test
in
je
daa
or
sbb
cltd
shrb
cmpsb
popa
inc
cmp
mov
enter
fcoml
cld
lds
in
mov
mov
and
mov
ss
faddp
mov
xchg
ret
cs
mov
imul
into
cltd
dec
fbld
and
fwait
sub
ret
adc
ret
fwait
adc
ficoms
aad
ud0
gs
jno
cwtl
mov
fwait
leave
mov
jl
push
sbb
std
push
out
xchg
rorb
fwait
inc
loopne
cmp
mov
inc
imul
add
pop
push
lcall
mov
vmulpd
fistpl
jnp
inc
sbb
jo
xchg
test
pop
and
aaa
rcrl
mov
dec
jno
cltd
mov
and
adcl
rclb
jnp
inc
repnz
adcb
ljmp
mov
adc
inc
mov
ss
adcb
inc
xor
mov
inc
jne
mov
cmp
dec
jecxz
and
sar
mov
and
add
movsb
lret
sarl
adc
push
stos
stos
cmp
jmp
imul
lahf
decl
daa
popa
repnz
adcl
sbb
sbb
jge
inc
sub
cs
jbe
cmpsb
in
insb
int3
xor
sub
and
fiadds
cld
cltd
xor
je
loope
shr
lods
ja
cmpl
pop
push
aaa
jnp
xor
add
jnp
int
xchg
aam
cli
call
mov
mov
popf
or
or
popa
mov
into
maskmovq
scas
xor
out
sarl
loope
xlat
ja
sti
cmp
ret
outsb
fisttps
in
movsl
dec
push
push
push
pop
rcr
cmc
cmpsb
or
addr16
inc
adc
jno
lahf
stos
and
pop
in
or
aas
imul
mov
call
inc
jne
lret
cmp
pop
icebp
adc
in
jo
int3
mov
stos
inc
sbb
stos
sub
mov
fnstsw
push
and
inc
mov
jne
imul
popa
loop
push
dec
or
and
data16
repz
call
sti
cli
lret
idivl
push
mov
ret
outsb
mov
stc
push
test
jle
pop
dec
add
adcb
fs
xor
xor
mov
and
fld
xchg
xlat
mov
rorl
jmp
pop
mov
dec
and
int3
cmp
mov
cmp
repz
push
imul
pop
sbb
pop
xchg
or
inc
pop
pusha
mov
jle
inc
pop
inc
mov
mov
rcrl
imul
dec
dec
pusha
fwait
jge
push
shr
mov
popa
xchg
lret
mov
pop
mov
cvtpi2ps
xor
ds
rcrb
xchg
movsl
jbe
dec
arpl
mov
mov
in
ret
sahf
adc
push
or
call
mov
mov
push
addr16
ja
je
or
mov
cmp
repnz
aad
lret
mov
les
dec
push
sbb
cmp
cmp
push
mov
pop
sub
shlb
rcr
mov
mov
push
int
and
xchg
adc
xchg
imul
fs
sbb
mov
or
xor
push
int
fimull
aas
push
int3
js
mov
or
sbb
int3
xchg
mov
sbb
cmp
add
bound
out
xchg
rorl
mov
and
jmp
mov
cmpsl
sbb
jl
push
jle
and
jnp
shlb
adc
mov
outsb
sbb
xchg
mov
cmp
adc
and
inc
sub
fwait
movsb
lods
movsb
lahf
or
cmp
out
jp
pop
mov
adc
pop
xchg
push
push
test
out
and
mov
mov
inc
xchg
xor
lret
outsl
xor
lds
mov
adc
push
mov
adc
sti
dec
mov
cwtl
outsb
cmc
push
fimuls
addr16
stc
jecxz
mov
imul
rorb
push
or
inc
je
mov
xor
ret
jg
jns
or
pop
push
test
aad
push
std
sub
push
ja
push
das
jmp
mov
xchg
and
fildll
loope
dec
cmp
jne
aas
mov
adc
out
push
push
jb
jns
jg
lds
js
dec
xchg
incb
mov
pop
lods
pop
jno
fwait
mov
inc
hlt
shlb
mov
sub
arpl
inc
cmpsl
inc
xor
insl
pop
cmp
ljmp
je
adc
mov
int
sti
bound
scas
lock
push
xchg
loopne
inc
scas
mov
mov
out
shl
add
jnp
std
xor
xchg
mov
daa
ja
xchg
mov
pushf
inc
adc
and
pop
fs
mov
sti
rcll
push
pushf
pop
in
mov
mov
dec
or
lea
mov
fstp
adc
mov
push
enter
push
inc
dec
sbb
fistpl
push
sbb
mov
pop
test
js
or
jb
das
loope
xchg
cmp
or
int
push
cmpb
push
test
inc
mov
dec
inc
mov
iret
push
frstor
dec
pushf
and
mov
out
sub
in
lds
shl
sarl
adc
jle
lds
mov
jns
jns
push
xor
imul
pop
sub
xor
pop
mov
mov
shll
test
cmp
mov
jne
sub
aad
xchg
xchg
inc
dec
push
mov
scas
push
negb
mov
mov
fwait
cmp
pop
sub
stc
addr16
in
xor
mov
faddl
bswap
inc
aad
imul
sub
divl
call
movsl
cs
inc
rorl
cmp
ljmp
cmp
mov
ret
pop
pop
xor
les
fstpl
push
mov
cmp
dec
xchg
inc
mov
pop
push
insb
imul
imul
jbe
or
dec
dec
push
push
xchg
jmp
mov
mov
xchg
jecxz
sub
cmp
mov
je,pn
sbb
fiadds
dec
xchg
popf
dec
dec
jb
xor
enter
stos
insb
mov
lret
je
adc
mov
push
pop
orl
gs
ret
cmp
pop
add
add
ljmp
pushf
dec
pop
notl
mov
mov
pop
mov
sahf
inc
pop
ljmp
shl
shl
clc
je
out
cmp
pop
or
loope
xchg
jmp
pop
in
pop
xchg
cmpsb
shll
je
cwtl
cmp
jno
xor
loop
pop
mov
pushf
jne
xchg
iret
movsb
leave
sub
sub
add
pop
repnz
in
or
inc
cltd
int
add
sti
stos
shlb
fwait
hlt
pop
dec
addr16
addl
jle
or
or
mov
lcall
loopne
xchg
mov
sbb
test
mov
daa
cmp
insl
test
sbb
pop
je
xor
repz
test
nop
adc
pop
in
or
push
cld
xor
cli
dec
pop
and
sub
sub
sub
sbb
sbb
aas
dec
and
ret
sub
push
mov
adc
push
test
mov
mov
pop
adc
test
push
mov
sahf
dec
int3
pop
in
xchg
sub
mov
adc
mov
out
lret
sbb
and
outsb
cmp
inc
inc
sbb
push
outsb
add
loop
out
jnp
mov
add
adc
dec
call
aaa
inc
mov
movsl
xorl
repz
and
adc
xchg
sbb
push
movsl
cmp
adc
and
test
or
cmp
std
push
out
inc
adcb
cmp
sub
pop
dec
idivl
jmp
negb
xchg
fisubrl
cmp
imul
mov
mov
or
aad
rcll
hlt
push
adc
and
jnp
push
roll
or
xchg
in
mov
mov
jo
bndstx
cwtl
pop
xor
jae
ljmp
int
movsl
xor
push
dec
mov
and
aam
jno
jp
cltd
pop
and
add
mov
jmp
adc
cld
xlat
push
fcmovne
push
nop
or
push
pushf
push
arpl
mov
jmp
out
out
inc
inc
movsl
clc
pop
rcll
clc
dec
clc
cmp
dec
xchg
icebp
jb
inc
shlb
jns
and
subb
mov
pop
sti
in
xchg
sbb
mov
iret
jge
repz
push
lods
mov
jp
sub
xchg
or
add
mov
push
pop
push
popa
in
xor
iret
fsub
or
lock
es
lcall
daa
mov
inc
mov
sbb
push
test
jge
pop
sbb
fdivs
pushf
pop
cmp
fninit
pop
repnz
subl
daa
sub
cltd
add
adc
inc
xchg
inc
mov
inc
dec
js
iret
pop
inc
pop
dec
inc
out
icebp
adc
jae
cmp
cmp
lret
mov
test
and
movsb
mov
push
xchg
test
test
mov
fnstsw
mov
icebp
and
sbb
adc
out
mov
jecxz
les
jnp
clc
pop
push
adc
or
and
imul
xor
fsubs
int
mov
shll
pop
aad
push
adc
xchg
xchg
outsl
sub
cmpsl
xchg
ljmp
pop
or
aaa
dec
and
or
inc
or
fs
mov
add
loope
xor
sarb
imul
out
adc
adc
lods
test
loope
in
and
inc
push
fiaddl
dec
dec
mov
daa
adc
shlb
imul
cs
sbb
out
or
das
add
test
neg
or
data16
pop
inc
outsl
loop
push
pop
cwtl
addr16
fldcw
mov
call
xor
mov
pop
inc
and
xor
mov
lcall
les
dec
cmp
mov
sbb
mov
test
add
or
push
add
ds
ret
mov
jecxz
xchg
iret
jo
and
pop
out
lret
sub
lods
into
int3
cmc
mov
mov
mov
repnz
pop
mov
test
jno
fs
and
and
mov
cmp
es
out
dec
out
xchg
pop
jle
mov
sub
aas
push
adc
out
lods
push
sbb
sti
or
pop
dec
or
std
sub
arpl
stc
add
sahf
xchg
xor
fdivrs
jp
jg
movsl
and
or
mov
not
cmp
gs
daa
std
mov
insb
jl
lods
or
dec
insl
push
pop
xchg
lods
mov
repnz
push
xchg
inc
jo
je
or
and
xchg
jbe
or
pop
mov
call
fisubl
push
ficoml
cwtl
jmp
imul
inc
out
xchg
adc
cmp
mov
fdivrl
lods
ret
lret
sbb
mov
adc
in
imul
sub
sbb
stc
inc
xchg
mov
mov
iret
std
aaa
sbb
dec
loope
mov
jmp
ja
fstpl
mov
js
cmpsb
jbe
nop
sub
out
and
stc
enter
mov
out
hlt
int
cwtl
test
mov
addr16
shlb
fs
or
lods
or
xchg
push
es
push
xor
in
mov
pop
es
cmc
push
xor
pop
and
test
push
popf
sub
xchg
and
add
jbe
mov
dec
push
arpl
movsb
sahf
test
out
inc
inc
cmovae
stos
or
cwtl
and
xchg
mov
add
inc
add
push
inc
int3
js
inc
sbb
ret
mov
test
out
adc
mov
or
mov
mov
andb
jno
incb
add
das
and
enter
pushf
loope
and
rcll
out
or
xor
jle
jge,pn
sbb
notl
les
add
aaa
sbb
xor
xor
pop
or
ja
pop
jecxz
cld
jg
sbb
mov
es
rorl
push
loope
dec
and
test
outsl
out
aaa
xlat
dec
mov
leave
out
in
push
mov
jne
push
and
add
int
dec
xlat
and
cmp
fadds
lock
enter
pop
sbb
sbb
xor
movsl
fbstp
cmp
mov
pop
jecxz
in
addr16
push
cmp
subl
pop
roll
in
popa
inc
pop
push
jne
pop
outsb
fldenv
push
xor
fbld
pop
shlb
test
in
int3
paddw
push
div
fwait
mov
xchg
ss
dec
loope
pusha
data16
pop
add
cmp
pushf
and
jle
mov
add
fstpl
fucomp
dec
repnz
jp
dec
xor
xorl
fsub
lcall
clc
cli
ficoml
pop
sti
in
or
dec
and
push
inc
cmp
push
sub
out
push
xor
jmp
out
add
dec
in
or
push
dec
cwtl
fsts
sahf
or
and
fwait
data16
insl
push
mov
cwtl
test
mov
adc
and
addr16
shlb
or
jnp
insb
xchg
test
addr16
frstor
outsb
rcll
and
fdivl
add
cmpsb
jmp
sbb
cwtl
scas
and
or
fildl
bswap
inc
shrb
mov
pushf
shll
cmp
es
inc
mov
loop
sahf
je
aas
fdivl
jae
cmpsl
mov
cli
xor
mov
mov
sbb
cmpsl
jno
mov
mov
xchg
and
mov
lds
pop
sar
mov
into
lcall
adc
cmp
clc
sub
xor
sarb
pop
adc
sub
sbb
dec
mulb
loope
incl
jo
xlat
std
mov
outsl
add
dec
arpl
in
xchg
xorl
cmp
mov
stos
pop
adc
fmuls
roll
and
test
pop
pop
pop
dec
in
rcrl
add
dec
jp
or
xchg
pop
sbb
mov
xor
je
adc
insl
mov
push
data16
add
mov
cmp
stos
in
inc
xchg
sbb
adc
push
adc
sbb
cmp
lods
and
pusha
or
test
negb
add
fldcw
xor
and
add
jl
push
cwtl
mov
clc
ds
sub
pop
xor
adc
mov
jecxz
out
out
pushf
loop
test
fdivrl
jnp
and
iret
jo
lret
out
in
and
fnstenv
or
jbe
mov
add
add
aad
adc
std
int3
sbb
mov
leave
popa
in
pushf
cmp
mov
repnz
and
in
outsb
push
lock
cmpsl
ljmp
daa
lahf
movsl
sub
nop
pop
push
fdiv
fsubl
push
out
sbb
out
sbb
cmpl
test
mov
fwait
mov
xchg
mov
sub
pop
sub
mov
repz
ss
loopne
jns
test
pop
out
jo
ja
jbe
daa
add
cmpsb
vxorps
popa
xchg
dec
test
rolb
push
sahf
push
cmc
jg
fidivrl
xor
aaa
adc
inc
jp
daa
jno
sub
push
push
mov
xor
jp
sarl
jge
rcll
lock
loope
sbb
loop
jl
je
into
cmp
cmc
in
and
inc
insl
dec
fisttpll
icebp
add
add
sub
inc
cmp
arpl
add
jae
loope
outsb
or
add
or
out
push
inc
int
dec
ret
or
loop,pt
ljmp
xchg
add
pop
push
scas
mov
mov
pusha
imul
cs
call
sbb
mov
aam
cmp
insb
in
cmp
icebp
xor
imull
pop
inc
in
jo
ljmp
xchg
inc
or
adc
out
add
divl
dec
sbb
jg
jae
imul
pusha
mov
mov
sti
dec
fcom
mov
popf
imull
mov
mov
ds
jnp
sub
hlt
sti
ss
inc
lret
outsb
aas
and
lret
xor
sbb
addr16
outsb
xlat
lea
sub
sbb
decb
ljmp
and
cltd
mov
jl
popf
ljmp
int
xchg
pushf
cmpsb
xor
dec
mov
ja
jno
stos
xchg
mov
scas
or
add
adc
pop
push
cmpsb
sub
sbb
gs
inc
pushf
outsb
mov
fs
je
mov
sub
push
adc
jle
iret
push
data16
jo
aad
xchg
jbe
loop
gs
jecxz
pop
dec
and
jno
sub
inc
inc
pop
mov
fcomp
mov
flds
xor
and
mov
inc
lods
add
sbb
fbld
cmc
push
xlat
neg
mov
mov
mov
inc
shr
pop
jnp
jmp
jmp
movsb
mov
addb
and
jmp
sbb
mov
mov
fdiv
inc
jo
clc
insl
and
add
icebp
dec
push
jbe
push
lret
gs
outsb
dec
mov
testb
daa
pop
xchg
fwait
outsl
pop
mov
lods
stc
rcrl
pushf
pop
and
and
jb
dec
aam
enter
sbb
test
push
adc
fmul
mov
inc
insb
sub
insl
lock
pop
bound
std
ljmp
sub
and
dec
or
loop
adc
daa
in
rcll
pop
lcall
inc
enter
mov
je
das
stc
fxch
pop
cld
or
xchg
and
jns
mov
in
sbb
test
insb
in
lret
mov
xor
xchg
adc
or
subl
mov
mov
jae
stos
and
mov
les
jl
shr
mov
call
add
cmc
stos
roll
roll
cmc
dec
xchg
add
in
cmp
adc
jbe
mov
fdiv
mov
mov
xor
rcrl
inc
mov
adc
pushf
popf
adcb
dec
out
in
addr16
mov
mov
test
lcall
test
add
jae
scas
aad
mov
mov
cld
sub
mov
mov
ret
xchg
stc
mov
sqrtps
jmp
popf
xor
mov
sbb
loop
jl
push
enter
jnp
push
arpl
cmp
adc
jle
clc
jge
daa
inc
imul
mul
clc
lods
jmp
mov
xor
dec
call
les
roll
push
mov
cmp
lahf
dec
dec
fstps
aad
cmp
cmpsl
sub
inc
shlb
dec
fidivl
push
ret
ret
add
jecxz
inc
leave
pop
data16
hlt
mov
or
push
mov
jbe
pop
and
cmc
or
sub
clc
and
cmp
inc
mov
cmp
mov
push
jmp
mov
mov
xlat
icebp
fprem1
mov
push
mov
and
mov
ret
pushf
ret
push
test
icebp
jge
sub
add
mov
pop
dec
sub
fcompl
adc
xchg
stos
in
insl
mov
cltd
adc
xchg
cmpsl
and
add
imul
xor
xor
lret
js
loop
jnp
adc
jmp
jnp
or
add
jno
lods
test
inc
lcall
adc
cmpsl
enter
ss
push
in
pop
insl
mov
sbb
gs
mov
mov
or
in
and
jbe
imul
outsb
inc
sub
mov
mov
jbe
adc
ja
cwtl
sbb
leave
in
adc
push
mov
movsb
cmp
add
scas
add
ret
adc
cmp
dec
scas
adc
scas
mov
or
mov
into
enter
repnz
hlt
aad
mov
int
sbb
ffreep
push
in
mov
popa
insl
xchg
cmpsl
push
mov
or
adc
cmp
icebp
pop
mov
mov
or
mov
jns
add
push
sbbl
ret
xor
out
loopne
push
ficomps
dec
stc
jl
inc
push
out
std
cli
mov
mov
out
mov
insb
or
stc
jo
xlat
mov
pop
int
ss
pusha
dec
scas
pop
cmc
jmp
push
out
mov
mov
or
stos
dec
cmpsb
add
stos
inc
jno
or
cmp
dec
and
imul
int3
mov
cmp
out
addl
jbe
pop
xorb
or
sub
rcr
insl
jbe
ja
push
repnz
mov
lods
lods
stos
cwtl
stos
or
push
or
push
pop
incl
rcrb
dec
cwtl
xrelease
xor
pop
sti
inc
xchg
adc
dec
mov
mov
sbb
cmp
cmc
rcll
repnz
movsl
popa
cmpsb
push
jnp
xchg
mov
or
clc
loopne
imulb
mov
xchg
fwait
dec
xor
popw
sbbb
mov
pusha
bound
jno
cmp
pop
add
cld
out
mov
negb
je
or
jbe
jae
pop
adc
inc
lahf
jno
dec
jp
or
scas
mov
pop
xchg
loope
lcall
mov
push
jl
dec
ds
push
cmp
nop
in
pop
out
shr
sub
icebp
aaa
push
ljmp
std
or
inc
jle
dec
push
mov
xchg
inc
adc
and
or
inc
xor
sbb
orb
clc
dec
and
scas
sbb
sbb
aad
xor
addb
push
int3
scas
imul
jp
leave
aam
sbb
jae
cmp
pop
or
and
cltd
xchg
push
fucomip
fcompl
scas
dec
ss
roll
mov
pop
fnstenv
rcrl
sti
pop
pushf
cmpsl
repz
addr16
into
cwtl
inc
jl
xchg
call
data16
lret
in
test
ficompl
cltd
mov
in
pop
or
ds
in
cmp
test
push
pop
loopne
mov
addr16
rcrb
aam
out
outsb
and
mov
sub
mov
dec
mov
pop
nop
out
movsb
mov
inc
leave
test
jae
ljmp
add
push
call
push
push
fwait
test
sub
popa
push
int3
jmp
cmp
xor
hlt
out
inc
packsswb
aas
adc
mov
jl
out
lods
or
add
mov
lds
pop
cs
dec
int
mov
jecxz
cmp
clc
movsl
in
pop
das
iret
sub
cmc
hlt
insl
add
addb
sub
icebp
cmpsb
mov
repnz
cli
xchg
xchg
cwtl
or
pop
loopne
or
sbb
loop
lock
mov
fnstsw
les
inc
xchg
add
popa
stos
lcall
jg
sub
std
push
mov
gs
aas
push
fisubs
enter
movsb
int3
fisttps
ret
sti
inc
cmpsl
fimull
repnz
out
es
shlb
mov
imul
in
lods
insl
push
shll
loope
loopne
cmp
lds
repz
shll
daa
addr16
imul
cmp
mov
mov
lock
ss
push
pushf
in
sbb
xchg
inc
and
push
mov
sub
mov
icebp
aam
rclb
jae
femms
stos
xchg
jecxz
jmp
fimull
xchg
das
in
adc
gs
ds
pop
cmp
shll
mov
lds
adc
aaa
ret
or
lret
push
pop
mov
movsb
pop
push
inc
loopne
popf
inc
add
hlt
mov
mov
adc
mov
jne
mov
pop
mov
ret
mov
pop
pop
lods
mov
mov
nop
mov
ficoml
into
or
cmp
pushf
push
lods
adc
hlt
pop
xchg
sbb
inc
movsl
jbe
ja
xchg
jae
push
or
and
mov
sbb
and
xchg
stos
rcrb
mov
inc
mov
and
xor
xchg
inc
push
sbb
add
lcall
aad
sub
shl
repz
loopne
or
fdivrl
mov
int3
stos
sbb
fwait
sbb
test
and
cltd
dec
pushf
enter
mov
stos
inc
lret
inc
sbb
call
sbb
outsb
bound
pop
pop
push
push
push
fwait
and
xor
mov
addb
dec
add
in
inc
mov
lret
imul
ss
roll
in
push
stc
xor
mov
dec
loopne
add
add
cmp
hlt
xchg
test
popa
push
pop
into
mov
pop
mov
mov
mov
not
into
rcrb
mov
cld
jns
sti
xorl
push
mov
inc
out
clc
or
icebp
cmpsb
add
mov
test
seto
dec
pop
xor
mov
dec
jae
sarb
fstpt
cmp
dec
dec
lcall
pop
imul
xlat
mov
add
pop
jae
jecxz
dec
pushl
scas
js
push
jle
aad
mov
testb
das
pop
sub
lea
mov
test
out
sbb
xchg
pop
mov
push
or
mov
add
sar
in
sbb
pop
mov
gs
add
inc
xor
mull
sarl
xor
insb
pop
sbb
out
jle
daa
xchg
mov
shlb
fisubl
mov
fisubrs
jno
in
adc
mov
mov
xchg
mov
pop
jg
dec
add
pop
xchg
and
mov
das
jp
stos
dec
dec
scas
ja
pop
mov
cmp
repnz
mov
in
or
iret
xchg
ja
or
aaa
push
lods
and
or
cli
push
push
negb
test
add
cmpsb
pop
je
and
push
mov
loop
inc
ja
xor
or
iret
lahf
ret
inc
cltd
adc
jg
loope
leave
xlat
push
int
jae
sbb
scas
cld
mov
cs
mov
dec
pop
mov
ds
jns
cmp
push
bound
jae
lds
mov
xchg
aaa
hlt
jg
mov
cwtl
sub
daa
and
insl
xchg
cmpsl
mov
inc
inc
sub
mov
lahf
xorb
into
cmc
lock
inc
out
movsl
jbe
and
sbb
aam
data16
in
dec
adc
mov
stos
std
mov
pop
imul
lods
fisubrs
and
pop
dec
imul
jmp
sti
imul
xor
subb
dec
scas
or
mov
inc
xchg
sub
fcmovnb
sub
add
dec
sub
or
pop
daa
scas
fsubrs
pop
lcall
mov
add
lcall
mov
and
push
sub
dec
xorl
cmpl
inc
push
jae
insl
dec
or
pop
das
js
rol
dec
cmp
fists
movsb
jo
cmovg
pop
inc
mov
add
mov
ja
adc
std
mov
or
jmp
sahf
insb
mov
sbb
mov
pop
and
test
jg
jmp
or
fldcw
cmpsb
inc
les
xchg
out
daa
aaa
pushf
pop
out
xchg
adc
sbb
adc
sbb
lcall
test
bound
in
jp
ja
scas
cwtl
lcall
sbb
in
or
push
popf
sub
jo
mov
rcrl
stos
stc
mov
popf
test
das
xchg
or
xchg
push
cmp
das
add
jne
push
fwait
cld
lcall
ljmp
xchg
out
inc
pop
subb
xor
sub
popf
fnsave
pop
js
dec
or
xchg
ret
jne
xchg
imul
pop
pushf
inc
jns
cwtl
outsb
jp
ffree
push
fistpll
pop
mov
or
fdivrl
shrl
fcomi
adc
cli
jle
sahf
pop
pop
fbld
mov
data16
cmp
pop
sub
int3
icebp
scas
dec
or
mov
dec
mov
dec
or
push
jbe
jp
cmp
push
xor
push
cmp
into
mov
and
daa
ret
nop
sbb
mov
or
out
pop
je
sub
dec
aas
mov
sbb
mov
imul
into
or
das
and
scas
das
addr16
sahf
cmpsl
adc
jns
mov
outsb
mov
ds
pusha
mov
inc
outsb
push
jo
test
push
out
js
pusha
sub
cmc
aaa
call
or
add
adcl
jae
aas
jge
in
sbb
insb
mov
dec
xchg
repz
icebp
pop
aaa
pushf
sub
mov
into
adc
add
push
fsubrs
repz
or
adc
mulb
mov
lods
bound
xchg
push
movsb
xchg
or
dec
pop
or
dec
jl
mov
sub
jb
mov
sbb
mov
ds
jne
insb
push
ret
rcl
xchg
cli
jecxz
push
inc
push
adcb
test
mov
nop
in
push
mov
jmp
fdiv
push
pop
jb
and
test
inc
jmp
sub
fmul
cli
cmp
sbb
xor
push
rcll
xchg
inc
push
in
jp
add
add
jno
and
push
shrb
loop
jnp
dec
mov
push
mov
aas
out
jns
mov
xchg
mov
lods
or
adc
ja
jb
data16
popa
cmpsb
movsl
lcall
or
shl
filds
repnz
cmp
dec
xchg
cmpb
test
loop
cli
loop
xor
mov
pushf
xchg
test
cmp
cmc
mov
popf
lock
cltd
mov
repz
and
push
push
xchg
xchg
push
dec
xchg
adc
outsl
clc
cmpsb
or
mov
mov
cltd
push
outsb
xor
inc
push
jo
ret
test
xor
push
fisubl
xchg
xchg
pushl
xor
mov
scas
clc
sub
add
pop
dec
in
xchg
pop
es
jnp
jecxz
and
adc
rolb
dec
out
jae
js
gs
leave
in
sbb
shl
jo
out
arpl
fstl
ss
jp
imul
pop
ficoml
push
jge
dec
mov
loopne
cmp
cltd
mov
fs
mov
int3
sbb
and
cmp
mov
das
testb
mov
mov
mov
scas
lcall
xor
test
push
cltd
mov
jp
adc
fsubrs
jg
jae
dec
push
cli
jb
adc
or
dec
aam
les
ret
dec
xor
out
sarb
pusha
jns
cmpsb
fimull
push
andb
adc
scas
cmpl
cs
movb
mov
dec
sub
pushf
dec
sti
inc
ss
outsl
xor
adc
bswap
adc
xchg
lahf
push
jnp
movsl
sarl
lds
lahf
arpl
and
mov
sub
aas
fs
out
and
jp
xchg
sahf
adcb
pop
or
shlb
je
ss
jg
shrl
ljmp
movmskps
in
ret
mov
adc
mov
fstp
mov
mov
pop
cmp
dec
cltd
loop
jae
xchg
sbb
xchg
scas
bound
outsb
add
mov
rcll
mov
push
xchg
test
add
dec
mov
adc
daa
into
xor
clc
sbb
xor
mov
mov
mov
xorl
inc
cltd
andb
dec
test
test
mov
dec
cmp
mov
in
mov
xchg
cld
and
adc
add
sti
pop
cmp
mov
pop
into
out
shll
lods
inc
out
fcompl
push
lret
bound
fisubs
pop
das
sbb
xchg
xor
adc
sub
fistl
ss
jnp
imul
call
cmp
loope
add
adc
ret
sbb
setne
rcl
pop
xor
pop
ficompl
aad
mov
mov
outsb
addr16
xchg
xchg
cwtl
rclb
dec
jl
jnp
cwtl
std
jns
popa
xor
adc
lret
adc
fs
push
and
pusha
xchg
pop
cli
aaa
dec
xor
cmpsb
int
movsb
ret
push
inc
ret
push
arpl
stos
shlb
or
lock
mov
cld
loopne
imul
mov
out
inc
mov
int3
cmp
pop
fsubl
adc
inc
scas
cmp
sbb
sbb
add
and
sub
jne
ds
mov
cmc
hlt
faddl
inc
xchg
inc
std
dec
cwtl
xor
pushf
les
push
push
js
arpl
adc
mov
adc
movzwl
mov
repnz
dec
fnstenv
inc
jp
sbb
ja
cli
dec
jg
fs
push
js
js
cmp
add
lcall
jae
sbb
loopne
mov
add
sub
cwtl
cmc
sbb
out
mov
fistpl
xchg
xchg
jbe
jecxz
incl
lcall
clc
xchg
pop
push
test
mov
xchg
fwait
movsb
mov
pop
pop
repz
icebp
dec
pop
stos
xchg
push
testl
lds
push
push
flds
adc
pop
dec
jle
sub
sub
xor
xchg
pop
or
adc
inc
jmp
imul
mov
inc
into
ret
pusha
add
jns
or
aam
pop
idivb
push
test
adc
inc
inc
fiaddl
inc
daa
in
lahf
dec
fstl
data16
ret
nop
adc
iret
jnp
jmp
push
add
mov
in
dec
lods
lret
jl
push
data16
ss
imul
jbe
mov
mov
add
mov
or
pop
imul
sahf
push
lds
pop
or
mov
inc
cmp
pop
roll
inc
shrl
out
sbb
xchg
cli
dec
sub
push
add
mov
lds
pushf
stc
xchg
sub
addr16
fcmovu
xchg
lret
jmp
push
test
je
movl
aam
fwait
mov
mov
into
xchg
push
sub
mov
pusha
mov
mov
test
hlt
inc
add
jp,pt
mov
stc
inc
jae
inc
neg
xlat
jnp
repz
mov
jl
jg
sub
addr16
leave
inc
scas
or
mov
out
lea
iret
jg
cld
mov
test
out
shrl
in
stc
adc
pop
and
rcr
mov
cmp
mov
stc
pop
mov
or
mov
jne
das
push
cli
cs
and
mov
clc
xor
sub
nop
outsl
cmpsb
cmp
int
andb
sbb
ds
push
sbb
sbb
xlat
pop
inc
mov
dec
scas
pop
mov
ret
pushf
jmp
rcll
xchg
sbb
inc
popf
cs
gs
sbb
dec
xor
pop
fcmove
or
and
shlb
out
fdivl
xor
and
pushf
dec
sbb
pushf
and
ja
xchg
into
lret
insl
push
mov
mov
or
pusha
bound
sub
dec
sahf
mov
jecxz
jge
test
and
mov
sub
pop
insl
int
pop
dec
or
mov
outsl
push
sbb
int
add
insl
das
adc
sarl
jno
sbb
imul
dec
sub
adc
xor
and
or
jae
repnz
cmp
sbb
xchg
rep
adc
shll
or
jno
lock
adc
xchg
loope
inc
shll
or
fsts
xor
dec
jmp
fcoml
mov
imul
je
xor
daa
push
clc
arpl
adc
mov
xchg
xchg
sbb
dec
outsb
mov
int3
and
push
sbb
mov
lahf
xor
pop
jge
and
and
aaa
hlt
lahf
sbbb
ljmp
add
popa
ds
icebp
mov
pop
xlat
ja
sbb
mov
cld
mov
dec
inc
outsb
add
jmp
cs
fwait
stos
push
lcall
cmp
outsl
xchg
mov
flds
mov
lods
and
lods
inc
mov
xor
xor
cld
mov
push
push
cltd
test
call
xchg
sbb
enter
jb
xor
mov
lcall
adc
imul
push
aad
cmp
and
inc
mov
sbb
xor
std
testl
dec
add
inc
idivb
daa
mov
jbe
sti
xchg
sub
fstpl
loop
pushf
xor
or
add
fsub
xabort
lahf
sub
add
lock
js
ljmp
sahf
pop
rcrb
pop
mov
lods
adc
ds
xor
in
jp
pop
cmp
cs
adc
mov
subb
pop
jl
leave
rorb
dec
or
jno
jbe
subb
lret
jecxz
int
dec
les
jae
jo
fmul
aas
outsl
aas
lahf
cwtl
mov
sub
and
shll
pop
sub
andl
jns
lahf
push
xor
xor
and
cltd
dec
or
pop
mov
sahf
inc
in
or
push
xchg
fwait
or
std
jl
jp
lods
push
mov
jmp
dec
sub
enter
scas
jg
dec
jno
adc
mov
push
or
lds
add
nop
inc
int3
cmp
cwtl
or
mov
ljmp
shrb
sbb
out
orl
std
aam
and
cli
sbb
push
mov
sub
into
jnp
jl
repz
repnz
push
xchg
fdivrp
and
adc
mov
inc
sub
arpl
aas
jl
cmp
mov
and
insb
mov
pushf
pop
lock
or
sub
xchg
sub
rorb
lret
inc
push
or
repz
xor
pop
xor
pop
mov
shufps
movsl
mov
and
movsb
mov
mov
pop
jecxz
std
push
mov
lcall
inc
outsb
mov
or
push
fstpt
loope
add
xor
cmp
push
adc
stc
or
jle
test
xlat
and
xor
shrb
mov
inc
sub
in
pop
sbb
clc
pushf
xor
lea
js
out
xorl
scas
or
rorl
andb
ja
sub
push
fdivrs
outsb
into
pusha
and
or
inc
pushl
xchg
ficompl
nop
popa
popa
in
xlat
pop
cmp
or
int3
jge
cmp
mov
add
mov
fbstp
adc
out
mov
xchg
xor
pop
mov
cli
in
jmp
xchg
mov
xor
fimuls
jl
div
sar
inc
aam
addb
fdivrl
mov
cld
xor
xor
mov
in
out
ret
icebp
loop
fmuls
cmc
cwtl
jne
cmp
enter
sarb
divb
xchg
or
xor
es
or
mov
lcall
sbb
popa
shlb
sub
in
cltd
test
nopl
xor
mov
cmp
movsb
xchg
fimuls
repnz
inc
out
push
test
or
sub
xchg
cwtl
mov
jl
cmp
scas
or
jecxz
ljmp
inc
cmp
mov
xor
ja
adc
jmp
test
les
lcall
inc
loope
arpl
test
scas
les
je
or
aad
out
dec
icebp
jmp
shlb
inc
test
push
dec
mov
mov
push
push
inc
sbbl
xor
push
arpl
xchg
and
inc
in
cmp
jne
add
inc
ljmp
inc
aam
push
daa
rclb
push
fistpll
adc
les
cmp
orb
add
mov
jns
adc
add
add
icebp
xorl
sti
scas
cmp
std
fcompl
cld
add
push
loopne
cmpsb
xor
push
loopne
mov
mov
or
xor
popf
xor
popfw
hlt
sahf
push
sbbb
mov
dec
mov
and
testb
lret
push
push
cmp
sbb
mov
out
imul
jle
lds
repnz
pusha
int
mov
mov
lahf
mov
imul
popf
loop
adc
leave
sub
sub
lahf
imul
neg
shrb
or
rcl
ss
out
push
cmp
jno
mov
daa
addl
push
sbb
cltd
aam
push
xchg
faddl
imul
sbb
fsubl
sbb
sti
mov
mov
adc
stc
push
stos
lds
pop
int3
xchg
mov
mov
std
adc
add
sub
mov
nop
jne
cmp
pop
pop
movsb
pop
jbe
pop
push
or
repnz
fdivrs
pop
and
sub
dec
and
xor
pop
out
call
or
xorb
stos
rclb
in
stos
sbb
out
fs
jmp
and
hlt
pop
add
adc
sar
adc
or
cbtw
lret
add
stos
aaa
sahf
gs
rclb
xchg
iret
les
dec
inc
fcmovne
popa
cmpsl
int3
mov
mov
jae
jns
pop
push
int3
inc
jg
or
test
pop
mov
mov
out
aad
insl
and
repnz
je
jb
fsubrs
jg
mov
sub
pop
or
cmp
movsb
push
mov
ja
push
aaa
in
mov
pop
dec
adc
and
popf
ret
mov
test
ret
fcom
insl
pop
add
nop
mov
testl
aas
fs
add
divl
pop
sahf
repnz
test
pop
mov
cli
or
add
and
or
pop
add
dec
fistpl
and
jmp
repz
cmpb
jns
jb
cmc
adc
jmp
sahf
mov
or
or
push
insb
adc
mov
aas
popf
xor
subb
out
mov
mov
mov
jo
shlb
add
in
cmpsb
int
mov
or
xchg
sub
dec
iret
cmc
inc
mov
and
push
in
pop
pop
fstl
testb
pop
pusha
add
je
xchg
and
mov
jmp
jo
push
xchg
ficompl
mov
xchg
and
add
push
xchg
dec
jae
in
xchg
xor
mov
push
and
fistpll
movsb
lods
inc
pop
sub
adc
in
sahf
xor
jge
sarl
cld
aad
and
add
sbbb
sbb
xchg
jne
scas
mov
sbb
ds
xchg
mov
pop
xchg
aam
scas
push
xor
inc
mov
jno
push
xchg
lcall
sub
psubusw
lahf
xchg
int
mov
dec
push
mov
subb
orl
inc
jns
dec
test
sub
mov
es
push
adc
mov
xchg
mov
out
test
add
xchg
xchg
cwtl
fwait
inc
jl
in
fucom
outsb
addr16
enter
pop
ljmp
pop
shrl
push
mov
jne
xor
sarb
in
add
add
xor
cmp
and
aas
or
sbb
aaa
push
aas
mov
aam
or
pop
mov
hlt
dec
xchg
xchg
pop
les
icebp
ja
loop
jge
pop
fiaddl
test
mov
cld
nop
jnp
int3
mov
xchg
add
dec
daa
xchg
push
andl
jmp
xchg
ret
outsl
out
lods
mov
pop
call
pop
xor
shrb
jp
and
aad
shll
lods
xchg
fsubrl
cmp
adc
mov
xor
jle
inc
iret
pop
and
jle
sub
ljmp
hlt
mov
outsl
xchg
sub
mov
sbbb
push
call
mov
mov
mov
mov
fistpl
jae
push
sbb
popa
cmp
and
adc
push
push
outsb
xchg
out
scas
scas
pop
push
sbb
mov
movl
cmpsb
mov
ss
push
lahf
testl
add
mov
lcall
addr16
jno
push
sti
mov
cmpb
xor
push
adc
cmp
in
jbe
leave
push
in
in
add
imul
push
clc
xchg
and
mov
xor
les
inc
loope
fisubrs
in
testb
or
adc
dec
mov
out
jmp
pop
sbb
fimull
pop
or
movb
xor
xchg
xchg
lret
addr16
insb
dec
fstpt
inc
push
xchg
or
xchg
inc
mov
dec
inc
push
out
xchg
cmp
mov
jne
mov
ret
lods
sar
xchg
test
push
cmc
xchg
bound
and
sahf
inc
cmp
std
clc
cwtl
and
es
sub
mov
sbbb
jb
ds
imul
xlat
push
int
lds
cwtl
mov
push
pusha
std
mov
fs
test
cmp
jmp
sahf
cmp
mov
add
gs
out
xchg
js
aad
arpl
dec
sub
jne
pop
pop
notl
ffree
repz
add
mov
jl
loop
cld
std
dec
mov
mov
xlat
pop
ret
mov
mov
mov
inc
push
das
je
pop
mov
jnp
mov
dec
and
mov
inc
cmp
push
jne
sbb
sub
lcall
ficomps
xchg
insb
add
mull
movsl
outsb
jle
inc
int3
out
adc
push
inc
call
les
repnz
popf
push
sarb
scas
sbb
arpl
dec
lea
mov
add
xchg
push
xlat
mov
hlt
mov
outsl
insb
outsl
xor
sti
sub
fldt
je
inc
fbld
orl
and
add
andb
mov
xor
inc
add
jnp
dec
mov
fwait
sub
pop
push
pop
dec
cli
data16
gs
push
out
add
adc
mov
cmp
repz
adc
repz
jb
inc
rolb
push
popf
mov
dec
mov
cli
aad
scas
pop
pop
mov
push
stos
in
cmpsb
jns
mov
call
push
in
add
imul
cmp
adc
jge
push
xchg
jne
xchg
in
sahf
inc
mov
fidivs
inc
js
addb
pop
cmc
and
pop
mov
sbb
sbb
add
mov
or
sbb
es
fs
dec
cs
adc
outsb
inc
pop
leave
andl
push
cld
jecxz
pop
in
adc
inc
xchg
xchg
xor
lds
dec
aad
dec
cmp
mov
enter
in
rol
jne
out
cli
pushf
push
mov
je
jl
xchg
cmpsb
cld
movsb
lds
cmp
imul
jg
or
orl
arpl
fs
xchg
sbb
cmp
and
mov
jp
xor
xor
mov
xlat
insl
in
adc
pop
inc
call
sub
jle
jns
iret
inc
jno
mov
movsl
cmp
loope
sbb
dec
sahf
test
cmpl
roll
mov
pushf
data16
into
test
mov
mov
pop
ss
push
jecxz
rcrl
jecxz
mov
popa
daa
std
std
mov
inc
adc
leave
sbb
aas
and
aam
pop
gs
pop
jecxz
hlt
ss
cmpsb
dec
push
fldl
add
or
sahf
nop
push
add
insb
movsb
lock
stc
cltd
in
lret
pop
test
dec
adc
sahf
sub
fldcw
imull
test
push
in
xchg
dec
jmp
sbb
or
sti
dec
adc
jl
pop
lret
out
cwtl
stos
fbstp
dec
leave
xlat
cwtl
push
ret
rcll
lret
mov
mov
pop
sub
rcrb
mov
mov
in
iret
out
xor
jb
sbb
out
fldcw
loop
ret
mov
mov
mov
push
sub
add
and
inc
cmp
mov
xchg
stos
movl
test
mov
and
xchg
stos
xchg
mov
int3
fwait
rcrb
inc
jecxz
jae
add
pop
negb
mov
add
insb
ret
xor
mov
cmc
push
insb
sahf
rcrl
sahf
pop
mov
nop
and
sahf
mov
in
and
add
aad
adc
dec
enter
adc
pop
cmp
lock
sbb
add
popa
inc
les
mov
in
adcl
insb
pop
cltd
add
and
inc
into
test
stos
ret
mov
xor
in
lcall
and
or
xchg
cmpsl
aas
adc
outsl
inc
push
sub
dec
pop
ljmp
mov
sahf
mov
sahf
scas
xchg
fidivrl
mov
rol
divb
fcmove
cmp
and
addl
cmpsl
int3
lret
jno
dec
xchg
mov
and
sub
leave
int
xchg
imul
mov
lret
ffreep
jge
lret
in
ror
fnsave
jbe
mov
mov
mov
shl
jno
jb
mov
jecxz
int3
loop
fistpll
sbb
and
cmp
mov
push
push
push
dec
push
in
sti
jo
cmp
loope
in
xchg
lods
pop
mov
shlb
inc
sbb
pop
ficoms
test
xchg
decb
sti
jnp
mov
inc
push
mull
mov
out
pop
lret
adc
push
shr
daa
scas
jle
in
push
or
xor
mov
or
ds
sub
mov
loop
mov
and
pop
xchg
cwtl
ja
movsl
fsubp
mov
cmc
inc
leave
xor
ror
sub
clc
cld
repz
aad
repz
mov
iret
dec
xchg
xor
stc
adc
cmpsb
jmp
sbb
mov
lahf
add
ja
push
movsl
push
insl
mov
inc
clc
lods
pop
dec
or
daa
or
sub
out
xchg
dec
or
fs
sub
dec
pop
pop
inc
xlat
scas
xchg
adc
outsl
mov
lret
cmp
out
dec
cmp
loope
inc
shr
inc
enter
jbe
out
jl
pop
lahf
jp
aas
mov
mov
psrlw
int
aad
sbb
mov
pop
mov
dec
mov
cltd
xchg
cmc
mov
add
clc
inc
adc
ret
cmp
stc
stc
add
and
repnz
mov
cmpsl
out
lcall
ret
lret
push
subb
stos
mov
mov
mov
jae
mov
mov
push
sub
dec
pop
stc
aas
add
and
or
cmc
shll
sbb
jbe
int3
fcompl
out
xchg
iret
push
jae
inc
loopne
nop
and
movsb
jecxz
and
mov
mov
rep
jmp
sbb
subb
cmp
test
mov
ret
fmull
mov
jb
push
btc
xchg
loope
mov
push
push
push
in
jmp
ljmp
push
out
cld
mov
push
or
adc
je
imul
inc
xchg
push
mov
mov
clc
fiadds
les
out
aaa
cmp
out
inc
mov
outsl
add
xchg
mov
jmp
adc
fcomps
dec
dec
fsubrl
enter
pop
mov
fs
cmp
ds
add
cli
js
add
dec
in
movsb
icebp
cmpsl
jbe
inc
mov
push
sbb
pushf
jno
sti
leave
add
inc
xchg
inc
mov
into
push
popa
outsb
mov
imul
xor
jns
jge
lods
daa
out
es
xor
inc
or
mov
pop
out
pop
xchg
aaa
fidivrl
add
push
mov
out
out
shrb
add
imulb
cmp
jb
bound
lods
shl
insb
mov
fisubrs
inc
outsb
add
adc
dec
and
jmp
or
fisubrs
push
sbb
push
push
pop
icebp
pop
pop
or
movsl
bound
ljmp
mov
cmpsb
ds
sbb
sub
popf
xchg
das
dec
jg
cmp
rcrl
shl
aas
sub
shlb
jae
xchg
push
mov
push
sbbb
ret
and
and
sub
orl
bnd
push
add
fcompl
ret
outsb
scas
mov
addr16
mov
cmpsb
lret
pop
and
out
jno
add
cmpsl
mov
sti
loope
insl
adc
pop
xor
pop
insl
ret
fisttps
dec
jecxz
out
jmp
xor
ja
shrl
scas
or
xchg
data16
and
jg
pop
and
aaa
pop
out
xor
push
sbb
dec
into
sub
inc
das
out
adc
lret
lods
jg
dec
or
or
jae
jbe
push
push
push
je
and
jae
xor
mulb
test
scas
repnz
jl
and
pop
sub
sub
push
pushf
testb
xor
popf
add
test
xor
and
lock
clc
push
mov
les
and
movl
repnz
sbb
cwtl
push
jno
xor
inc
adcl
rolb
pop
mov
push
aad
xor
mov
icebp
jb
inc
and
fs
fnstcw
sbb
push
idiv
test
cmc
movl
fnstsw
sub
push
add
sbb
fstpt
fwait
jl
outsl
call
inc
mov
out
mov
in
or
sbbb
enter
stc
push
mov
adc
mov
mov
lret
int3
add
xchg
or
and
xor
imul
mov
out
or
and
jmp
dec
sbb
push
dec
and
inc
mov
inc
iret
imul
sub
fisttpll
bswap
loopne
sbb
push
ja
test
pop
pop
xchg
xor
in
cli
ja
cwtl
hlt
xor
jmp
xor
insl
inc
or
scas
jmp
or
cmp
pop
cld
cltd
pop
outsb
pop
jge
dec
sbb
outsb
fadds
adc
dec
jmp
xor
cmp
cmpsb
movsl
sbb
out
sahf
shlb
pusha
mov
jl
push
jmp
cmpsl
test
and
mov
mov
addl
ss
cmp
pop
or
scas
mov
jo
mov
mov
cwtl
adc
cltd
lea
pop
add
adc
push
lret
cmp
lds
xorb
pop
sub
jecxz
push
repz
arpl
jl
gs
notl
inc
push
cmp
ss
ss
and
insl
xchg
inc
arpl
ficoml
aas
fwait
inc
pop
dec
iret
leave
push
cli
int3
adc
fnsave
outsb
mov
adc
lcall
add
cmpsl
std
cld
xchg
or
es
nop
inc
jp
mov
out
cwtl
sbb
je
fnstsw
sbb
sub
mov
jne
inc
inc
dec
sbb
mov
push
push
sbb
in
xor
int3
shr
dec
jo
popf
jno
xchg
mov
ja
sub
jo
mov
xchg
aaa
enter
xor
stos
notb
or
psubsb
sub
jp
sbb
adc
push
jecxz
das
xor
mov
push
out
mov
js
xchg
inc
sti
aad
pop
inc
js
addl
xchg
in
shrl
shrb
ret
sub
push
lret
pusha
and
jp
cmp
cltd
outsb
mov
xchg
cld
jns
loop
fildll
push
xchg
call
jno
sti
aaa
pop
cmpsb
arpl
mov
ja
sub
push
mov
inc
daa
aam
lahf
lret
or
hlt
clc
pusha
jge
mov
xor
mov
mov
mov
addr16
push
adcl
and
push
sub
jnp
xor
or
adc
or
jp
and
fcmovnbe
add
and
sbb
jecxz
cwtl
arpl
addr16
jg
fldcw
and
push
test
cmc
lcall
mov
xor
pop
fcmovnbe
sarl
mov
imul
add
xor
int3
cmp
add
das
push
push
sbb
cltd
xor
aam
idivb
gs
roll
mov
popf
jecxz
pop
fcomps
pusha
sbb
adc
jecxz
dec
sub
js
lret
adc
sub
adc
xor
push
outsl
test
pop
push
mov
mov
jns
xchg
hlt
loope
adc
sub
push
cmp
mov
es
pushf
xor
lea
xchg
adc
push
sbb
int
sbb
and
dec
cmp
or
clc
xor
or
lds
mov
out
daa
pop
cli
pop
sub
push
xor
pop
subb
fnstsw
mov
arpl
xor
inc
adc
push
fwait
int3
jge
mov
jge
je
and
shll
jge
mov
and
iret
dec
push
cmp
and
pop
jnp
icebp
pop
test
xlat
mov
inc
mov
inc
dec
ss
fwait
mov
rcrl
iret
repz
fisubrl
stos
inc
insb
jns
call
pop
xor
inc
mov
sbb
jp
shll
cmpl
jns
dec
lods
aad
push
scas
pop
lret
pop
pop
xor
push
jne
pop
lahf
stos
jle
mov
mov
bound
pmulhuw
into
out
inc
pop
adc
jmp
lret
xchg
mov
push
cmc
jns
lods
pop
outsb
xlat
orb
mov
cwtl
cmc
or
test
outsb
pop
shll
incl
insl
in
mov
mov
xorl
sbb
in
push
les
divb
add
mulb
sub
ss
mov
test
lods
push
test
mov
inc
arpl
inc
adc
test
mov
mov
aas
leave
push
outsb
imul
loop
push
aad
cmp
mov
pop
push
xchg
xchg
pop
mov
push
fs
mov
mov
dec
imul
bound
loop
loop
pop
cmpsl
push
dec
in
add
ja
inc
mov
in
arpl
jmp
ljmp
insb
fwait
mov
push
jmp
or
xor
jl
add
stos
or
push
cmp
lret
stos
repz
out
loop
cmp
inc
mov
stos
aaa
mov
pop
or
mov
fucomp
es
ret
sub
pop
test
mov
jmp
mov
adc
pushf
les
add
or
scas
ljmp
cmp
push
sbb
push
sub
mov
push
cmpsl
xchg
fisttpll
fmull
inc
sub
ja
ds
xor
cmp
inc
lea
lods
lock
sub
inc
xlat
call
cmp
cmpsb
loopne
cmovnp
lds
push
xor
xlat
mov
and
int
out
hlt
cmp
loopne
stos
xor
mov
sub
mov
sbb
push
xchg
add
jb
int
xchg
jno
jle
rclb
add
shr
clc
cmp
or
dec
dec
loopne
rcrl
testl
fsub
jle
shll
popf
inc
addr16
je
jae
fldl
loopne
jo
xor
mov
pop
shlb
loop
cmc
adc
insb
mov
hlt
faddp
cld
mov
dec
aaa
pusha
lret
jecxz
mov
loop
outsl
test
imul
inc
push
in
je
xor
mov
dec
or
jmp
shr
and
aam
dec
jae
xor
adcl
mulps
scas
xlat
mov
xchg
out
je
mov
xor
cmp
mov
jns
and
jl
lret
andb
adc
out
jg
sbb
jae
jno
sub
insb
cmp
jl
sub
adcb
cwtl
out
add
das
pop
mov
dec
orb
mov
repz
shlb
jno
pop
sti
sbb
jecxz
repz
pop
out
les
xlat
pop
pop
sbb
inc
mov
movsl
and
cmp
das
xchg
jmp
mov
inc
gs
sbb
and
dec
ja
mov
push
sbb
stc
ret
dec
sub
xor
sub
je
loopne
mov
orb
imul
aas
mov
std
test
in
into
push
sub
cmp
dec
lret
in
mov
cmp
jmp
pushf
push
ja
out
cmp
stc
movsl
fstl
dec
jno
stos
xchg
push
pop
orb
insl
inc
in
mov
adc
xchg
into
imul
nop
cmc
rclb
roll
outsb
pop
jbe
xor
cld
cmp
adc
mov
fidivrs
movsb
adc
hlt
mov
rcrb
add
rclb
lss
sahf
mov
cmpb
jmp
stos
xchg
push
aam
xor
aaa
xor
movsl
push
aaa
mov
push
inc
pop
sub
insl
test
subl
mov
rcrb
sub
aam
push
dec
insb
aam
ja
mov
mov
stos
sub
xor
push
mov
rol
jecxz
pop
mov
mov
aas
int
inc
jne
out
jb
push
xor
pop
int3
mov
ret
in
sub
ja
lods
sub
ja
dec
and
mov
movntq
jge
xor
clc
aam
mov
pushf
add
pop
pop
xor
mov
dec
aad
xor
in
lock
and
adc
mov
mov
dec
mov
inc
mov
mov
pop
mov
push
lods
ljmp
lahf
and
mov
mov
jb
add
cld
push
cli
mov
movsb
test
pop
pusha
aaa
insl
pop
enter
xchg
dec
popf
lea
ss
popf
fwait
sarl
inc
je
shld
cmpsl
push
stc
imul
cmp
sbb
xor
aam
xchg
rcl
or
fxch
pop
imul
jg,pt
jb
sbb
lcall
or
pusha
rorl
push
stos
add
xor
inc
inc
xchg
and
mov
addr16
in
jp
push
lock
jmp
das
mov
jg
lods
cmc
inc
push
adc
xchg
xchg
std
leave
sub
pop
sbb
dec
add
incb
and
out
std
call
cltd
mov
aas
mov
mov
push
add
sub
xchg
sub
mov
push
push
cmp
pop
sti
add
adc
or
mov
fdivrs
xchg
into
mov
es
je
cmp
jge
ja
inc
xor
sub
xor
addr16
pop
adc
mov
push
fs
inc
and
xlat
sbb
in
icebp
dec
mov
hlt
cmc
push
inc
fwait
xor
imul
mov
or
mov
ret
push
leave
mov
xchg
inc
mov
mov
cmp
jp
mov
mov
fwait
sbb
ret
test
int3
mov
loopne
cmc
dec
mov
cmp
cmp
pop
lods
and
test
lcall
mov
jo
inc
scas
outsl
mov
push
fdivl
or
or
lret
pushf
std
and
outsb
sti
or
clc
imul
mov
xor
fiaddl
push
inc
mov
test
lea
sbb
ret
lahf
and
pop
push
das
jbe
dec
outsb
iret
test
jg
sbb
inc
imul
adc
movsl
xlat
and
lds
ret
mov
aaa
outsb
scas
dec
pop
lds
fwait
sbb
imul
jmp
dec
repnz
shlb
loop
in
sub
pop
loopne
dec
pop
rorl
das
in
inc
lea
sub
xor
mov
sbbl
hlt
int
mov
mov
dec
jns
repnz
sbb
test
icebp
pop
mov
mov
xlat
int3
scas
lcall
sbb
mov
movsl
aam
pop
mulb
loope
aad
push
dec
lea
mov
jb
movsl
pushf
movsb
ss
jg
ss
xchg
jnp
shlb
pop
dec
adc
insl
outsl
mov
adc
fwait
sub
sub
or
test
or
das
jg
repz
cs
mov
adc
xchg
bound
mov
fsubl
jnp
lcall
and
fists
data16
mov
xlat
fwait
adc
push
push
xchg
add
aas
lds
push
ret
pop
in
mov
and
fnstsw
mov
outsb
out
stos
adc
and
sub
sub
add
mov
dec
jmp
das
pop
std
cs
fwait
pusha
xor
or
ret
and
pusha
sub
lods
push
adc
call
cmp
fwait
sbb
mov
lahf
sub
daa
test
and
pop
sti
movsb
pop
idivb
and
xor
push
or
xor
mov
sbb
push
out
cli
mov
fcompl
das
aam
mov
cmpsb
adc
jnp
ds
insl
dec
lea
call
outsb
movsl
push
mov
mov
adc
dec
inc
cltd
shlb
and
ss
aam
push
cmpsl
ss
std
push
mov
fsts
mov
fstps
daa
mov
bound
test
cmp
daa
jb
out
push
arpl
popa
jns
daa
test
adc
sub
out
sbb
cwtl
add
stos
flds
pop
push
aam
test
sub
out
cli
aas
mov
push
frndint
insl
aas
push
or
loope
adc
push
lret
mov
in
or
fildl
adc
jns
adc
mov
add
bound
imul
push
aam
call
and
sbb
mov
pop
pushf
xchg
cs
dec
rcrb
pop
inc
aas
scas
sub
cld
repz
jle
push
lods
enter
sub
jg
les
mov
push
imul
sarl
add
shll
inc
les
mov
fistl
adc
repnz
imul
in
jp
mov
sbb
push
pop
jbe
push
in
adc
test
leave
ss
enter
push
mov
data16
xchg
and
jo
rolb
imul
lret
cld
icebp
popf
arpl
out
gs
fbstp
mov
cmp
sub
cmp
jae
andl
rorl
jecxz
call
inc
hlt
sti
dec
or
bound
aaa
mov
xchg
or
push
or
lcall
sbb
push
sub
adc
add
lea
in
pusha
fmull
out
int3
clc
aad
popa
pop
mov
mov
mov
loop
pop
jmp
es
jo
sbb
pusha
int
push
xchg
jbe
aaa
lcall
dec
mov
loop
sub
cwtl
sbb
call
stos
add
xchg
cld
jb
xchg
mov
iret
mov
shlb
stc
test
pop
push
push
ficoms
jno
in
cld
cli
in
loop
xor
data16
and
call
mov
sub
repnz
mov
xchg
and
jl
mov
jns
pop
push
pusha
fsubrl
xchg
ret
adc
sbb
pop
mov
in
xor
in
leave
push
cmp
aaa
ds
or
cmp
hlt
out
icebp
inc
mov
push
nop
adc
xchg
cmp
cltd
lret
adc
pop
xlat
mov
or
shl
and
dec
mov
insl
outsl
mov
sub
dec
or
pop
sub
stos
mov
addl
pusha
sti
int
jo
adc
int3
out
sbb
mov
out
das
adc
aaa
lahf
mov
jnp
fdivrp
test
mov
std
mov
adc
mov
dec
cmp
mov
xor
fdiv
negb
stos
std
add
les
es
popa
adcl
in
ljmp
jp
pop
xor
push
push
push
ss
xchg
iret
push
cmp
mov
sub
inc
aas
pusha
popf
mov
js
pop
mov
xchg
add
ss
hlt
xor
movsl
in
inc
lods
mov
mov
cmp
xor
ss
add
jo
xor
jbe
in
mul
and
out
jno
mov
cmpsl
repnz
push
leave
cmp
add
sub
ja
jae
bound
push
mov
cmp
push
mov
pusha
movsl
std
aaa
inc
sub
out
insl
xchg
inc
sub
jle
jns
shll
test
rcll
mov
lcall
push
stos
sub
dec
xchg
push
xchg
and
fwait
out
repz
adc
dec
jmp
adc
cwtl
stos
lret
jmp
sub
sub
push
int3
cmp
lret
dec
sbb
cmp
jle
fiaddl
test
movsl
cmpsb
mov
xor
outsb
in
out
push
test
inc
adcb
mov
rol
jge
outsl
fbstp
jle
jae
push
jp
cmpb
loopne
pop
fdivrl
lock
add
xchg
sub
mov
sbbl
lcall
clc
notl
mov
dec
call
rorb
es
incb
push
xchg
pop
mov
aas
les
mov
push
pop
fwait
inc
adc
jo
sub
push
sbbb
addr16
shl
mov
pusha
push
mov
xchg
out
int3
clc
and
xchg
loopne
icebp
loopne
lea
xchg
fisttpll
xchg
ret
les
ja
pop
jns
and
fdivs
inc
es
stos
mov
imul
mov
xchg
adc
in
inc
pop
jecxz
mov
add
mov
outsb
out
jno
lret
mov
adc
sub
xor
dec
xor
add
jmp
cli
add
pop
push
jmp
call
test
or
nop
and
xor
pusha
mov
xchg
repnz
push
mov
enter
movb
cmp
cmp
or
mov
adc
xor
pop
shlb
inc
mov
outsl
xchg
mov
add
jecxz
and
inc
mov
jmp
sub
frstor
nop
mov
mov
es
sarl
pop
repz
loop
and
mov
push
xchg
leave
lret
lods
std
lods
orl
jg
push
adc
nop
imul
mov
and
dec
add
push
mov
mov
test
hlt
imull
jo
shrb
xor
cld
in
jmp
sahf
out
test
into
scas
fs
test
pop
repz
dec
or
mov
lret
push
adc
loopne
push
xor
mov
push
push
inc
mulb
aam
xor
jle
jo
push
mov
adc
ror
mov
dec
inc
xor
jne
cs
xchg
clc
fstpl
sbb
sbb
and
or
ja
ja
out
xchg
jnp
sbb
int
fisubrl
inc
lods
int
mov
in
sbb
mov
push
inc
sub
lods
out
push
pushf
ret
shll
cmp
jne
ja
aaa
lea
imul
sbb
je
push
leave
xor
inc
scas
scas
pop
outsb
cld
lret
cli
push
pop
cmp
shlb
cmp
xor
xchg
mov
jo
jb
lret
push
sbb
ljmp
imul
lods
xor
mov
icebp
rorl
lea
xchg
xchg
cmpsl
adc
in
xor
addl
cmp
cmp
fmul
lcall
pop
push
mov
pop
dec
imul
xlat
or
iret
or
leave
add
adc
outsb
stos
sbb
sbb
lret
or
in
addr16
shrd
mov
pop
outsl
pop
jno
mov
inc
jns
ljmp
or
test
push
dec
jmp
mov
je
stc
xor
dec
ja
mov
and
mov
dec
mov
jecxz
stos
push
xchg
leave
dec
loope
rcrb
jbe
shlb
filds
jge
mov
pop
xor
sbb
lods
insl
xchg
popf
xor
shl
mov
push
mov
mov
mov
and
dec
jp
push
std
in
or
xchg
pop
in
push
lret
lods
pop
cmp
xchg
jle
adc
ss
jo
and
push
fists
hlt
arpl
test
push
push
xchg
push
cmc
lcall
sub
or
flds
sub
leave
aaa
loop
add
xchg
sbb
fs
enter
adc
push
call
mov
pop
jnp
jecxz
dec
dec
sub
cmp
in
mov
xor
jmp
inc
in
cmp
call
in
add
sbb
in
xchg
idivb
lods
addr16
dec
mov
pop
in
inc
and
inc
rolb
test
or
shll
div
negl
stos
jl
outsl
shlb
push
pop
loope
jbe
or
sbb
xor
mov
lret
and
movsb
ret
rcrb
outsl
movsl
push
xor
push
fmuls
inc
movsl
mov
mov
pop
cltd
enter
in
jecxz
and
lret
push
sub
iret
mov
lods
dec
mov
adc
sbb
mov
addr16
push
scas
push
pop
sbbb
mov
adc
adc
cmp
pop
fistps
sbb
ffreep
xchg
and
xor
adc
test
lcall
sbb
push
mov
loopne
gs
push
cmp
in
decb
jle
add
lods
jne
je
push
push
int3
or
lods
stc
mov
les
lea
js
dec
pusha
notl
lods
mov
fcoml
lock
stc
fldl
mov
shll
jne
das
int
adc
in
ret
enter
test
push
add
in
stos
sbb
int
jmp
daa
in
mov
cmp
push
jmp
es
in
rclb
xor
dec
stc
adc
lret
mov
aaa
push
add
rcrl
lcall
or
std
push
mov
out
repnz
mov
dec
cmc
cmp
dec
ss
xchg
sti
fnstcw
pusha
and
leave
inc
icebp
adc
out
push
pop
xchg
clc
pop
loope
push
inc
outsb
rol
push
outsb
mov
jb
inc
or
aas
push
rorl
ljmp
add
shrb
arpl
scas
pop
out
sahf
mov
scas
add
push
push
xor
adc
sbbl
cmp
mov
mov
jge
inc
shl
push
inc
les
sbb
mov
or
insl
mov
imul
stos
scas
mov
into
xchg
jecxz
adc
xchg
lock
xor
rorb
lcall
sub
mov
cmp
outsl
jae
pop
lcall
sbb
or
mov
mov
sub
clc
ljmp
dec
mov
jns
je
mov
fildll
ret
add
xor
jbe
icebp
mov
inc
xlat
xchg
dec
lds
adc
cmp
ficomps
jno
movsl
add
fwait
cmpsl
pusha
int
sub
lret
insb
daa
or
adc
jno
push
ss
faddl
es
cmc
cmc
sub
adcb
test
jnp
xor
loope
jge
inc
mov
push
or
dec
insl
xor
and
cltd
jnp
fnstcw
push
inc
mull
iret
cmp
cwtl
mov
adc
xchg
jg
lods
adc
pop
xor
pushf
insl
dec
xor
cli
sbb
xlat
cmp
push
adc
mov
xor
cmp
js
xchg
mov
and
jl
arpl
scas
mov
in
dec
xor
nop
mov
test
xor
fwait
inc
cmp
lret
xchg
adc
cmp
sarl
fmulp
icebp
cli
je
repnz
imul
xchg
jg
xchg
push
mov
lods
xor
xlat
mov
shlb
leave
syscall
in
shl
cmp
mov
sbb
repz
aam
lods
loop
lcall
loopne
repz
fucom
call
lahf
test
imul
pop
xor
lcall
inc
out
rolb
stos
jl
pop
xchg
cmpb
xchg
mov
pop
insb
adc
sub
ja
sub
adc
sub
inc
fcmovu
jmp
push
mov
test
sbbl
data16
notl
das
sbb
ljmp
xchg
loope
sbb
sub
push
xchg
cs
lret
sbb
mov
adc
xchg
dec
adc
mov
xlat
test
vpmullw
jno
sbb
push
ljmp
mov
mov
std
lea
pop
mov
ffree
cmp
mov
cmp
lsl
and
aaa
rclb
in
es
stos
mov
cwtl
hlt
dec
inc
ja
mov
push
and
das
mov
inc
fs
inc
xchg
int
ja
jp
stc
shll
pop
fists
xchg
loope
in
or
shrb
fdivrp
push
dec
push
sbb
inc
inc
repz
test
jmp
cltd
xlat
insl
shlb
jb
fimull
jmp
or
lds
iret
sbb
jecxz
jp
mov
push
shlb
push
js
adc
push
push
fstpt
push
repnz
mov
divl
js
scas
out
dec
mov
div
xor
in
jle
jns
daa
dec
pop
jmp
xchg
in
push
enter
mov
fidivrl
jl
sar
push
mov
dec
inc
sbb
pop
test
sub
pop
inc
sti
push
fwait
cmpsl
aaa
dec
stc
loope
shr
nop
xor
mov
pop
adc
cmpl
xchg
cmc
lcall
mov
and
sahf
xchg
add
or
inc
out
mov
mov
stos
fucomp
clc
test
lock
add
push
cwtl
test
repz
inc
insl
adc
rclb
rcrl
mov
dec
out
jbe
in
xor
jno
or
jle
and
out
icebp
dec
rcr
mov
xchg
push
movsb
or
in
mov
loopne
mov
mov
ficoml
sub
insl
jo
adc
and
js
fists
adc
xchg
sahf
std
and
push
adc
pop
jmp
xchg
add
repnz
fimull
daa
loop
sarb
in
mov
sub
cltd
in
mov
adc
add
loop
pop
stos
jne
sbb
xor
pusha
push
stos
cmp
subl
pusha
pushf
add
bound
loopne
idivl
jmp
mov
xlat
sbb
cmp
gs
mov
aam
sub
addb
push
fistpl
mov
fs
cmpsl
inc
jecxz
xor
sbb
test
jge
iret
icebp
shl
daa
int
xor
mov
xlat
xchg
enter
lock
add
or
sbb
sub
pop
mov
push
xchg
dec
push
lock
dec
mov
rorl
sbb
jnp,pn
pop
imul
icebp
mov
and
int3
jnp
pop
jp
scas
push
mov
mov
xchg
aas
leave
add
sub
pop
test
jge
in
ficoms
inc
test
jmp
or
iret
arpl
ja
stc
enter
cmp
cmp
call
ret
cmp
out
push
test
mov
addr16
adc
push
ret
add
fldcw
pop
mov
xor
sub
sub
idivl
xor
rcrb
cmpsl
lahf
jbe
loopne
cmpsl
lret
mov
fistl
inc
push
xor
ja
cli
push
xchg
cli
mov
cmp
arpl
jmp
or
outsl
mov
aam
ret
std
xor
pop
outsb
cmp
rorb
mov
fsubl
cmp
cmp
fbld
xlat
loopne
lahf
cmc
repnz
adc
cmc
sbb
dec
das
popa
mov
adc
mov
mov
sub
out
sahf
jecxz
pop
hlt
mov
outsb
adc
lods
adc
mov
add
cli
notb
pop
or
ja
push
in
enter
sub
imul
cmp
fwait
int
je
loope
or
fcmove
das
popf
clc
mov
loop
lock
and
sub
lret
pop
arpl
popl
inc
lcall
test
in
mov
add
dec
mov
cmp
xchg
mov
adc
mov
jne
sub
in
adc
pop
lret
pop
rol
fisttpll
and
out
push
fld
cwtl
xchg
xor
jae
andps
jecxz
or
and
mov
jmp
jae
imull
jmp
sub
and
in
mov
out
in
test
adc
push
fildll
daa
pop
dec
dec
push
cmpsl
test
call
xlat
stc
out
inc
mov
pop
xor
repz
cmpsb
push
lcall
mov
mov
inc
mov
sti
jae
add
jl
push
lods
imulb
mov
fs
pop
bound
xor
popa
mov
sbb
xor
mov
scas
jp
sub
fwait
cli
jge
inc
pop
js
inc
push
jge
incl
fmuls
mov
ss
or
ficoms
pop
adc
push
pop
popf
mov
mov
jne
insl
aas
clc
mov
add
cli
insl
add
shrb
lret
cmp
mov
data16
lods
cmpsl
jns
int
mov
mov
sbb
popa
inc
xor
dec
xor
inc
roll
js
cmp
dec
fwait
mov
mov
dec
jp
sub
inc
mov
inc
fiaddl
adc
pusha
into
stos
ret
adc
je
or
mov
lcall
incb
pop
xlat
es
lds
repnz
gs
pop
aaa
aad
add
call
mov
mov
in
xchg
lcall
insl
aad
jae
pop
fxch
mov
jecxz
mov
popa
int3
cmpsl
fwait
jne
in
inc
push
mov
cs
sbb
movsb
xor
ret
mov
js
ljmp
repz
stc
push
inc
lcall
or
outsl
cmp
sub
add
es
roll
packssdw
and
pusha
fnstcw
lahf
push
push
adc
jo
mov
stos
mov
cmp
jnp
cmp
pop
je
jb
adc
mov
mov
ret
sub
cmpsl
add
dec
fisubs
outsb
push
cmpsl
push
cmp
add
xor
ficomps
add
ret
mov
fwait
jl
adc
push
mov
idivb
out
xor
xor
add
adc
out
movsb
fst
mov
adc
xor
call
inc
jecxz
push
imul
mov
push
stos
fildl
sbb
fbstp
lods
nop
sbbl
adc
idivb
inc
incl
icebp
pusha
jmp
movsb
mov
pop
imul
jp
sarb
out
ds
jl
adc
ret
lahf
dec
sub
push
rol
cmpsb
and
or
test
stos
fcom
ret
arpl
sbb
jge
xor
les
test
jae
mov
into
sub
sbb
andl
lcall
cmpsw
in
dec
cli
popl
shrb
mov
inc
fsubrs
jg
popf
adc
shrb
in
jbe
sti
subl
aas
mov
outsl
sub
lock
push
popf
fists
jb,pn
in
and
pop
lock
push
cmp
inc
mov
jle
sahf
mov
xor
popa
inc
sbb
aad
add
test
int3
js
push
dec
lret
popa
cmp
insl
mov
mov
add
mov
xchg
mov
xchg
popa
mov
fidivs
aas
les
inc
mov
ljmp
xchg
xor
bound
xlat
loopne
mov
inc
lret
imul
ret
jle
xor
int
jmp
xor
mov
aaa
jl
or
popf
pop
leave
fidivrs
lret
je
sysret
push
mov
leave
imull
mov
popa
add
cmp
popa
mov
mov
je
and
mov
xlat
lds
fidivrs
pushf
mov
cmpl
pushf
add
xchg
enter
dec
frstor
nop
cli
cmpl
add
dec
and
fwait
adc
gs
and
sbb
mov
fwait
mov
lods
xchg
jb
insl
push
dec
out
jns
jno
negl
notl
cmc
cmpsb
xchg
sub
mov
adc
imul
clc
in
or
mov
cmp
call
sarb
inc
mov
outsl
mov
popf
dec
inc
outsb
push
out
sub
jmp
push
fidivrl
lock
add
mov
out
mov
push
sbb
jb
add
aaa
pushf
inc
in
fdivp
enter
pusha
fwait
shlb
add
fstpt
ljmp
jne
repnz
sub
iret
pop
js
and
inc
pop
imul
cmpsb
fldenv
bound
lock
jbe
add
xchg
xor
ja
dec
pop
movsb
inc
xchg
mov
pop
push
aas
sbb
pop
pop
mov
add
bound
mov
js
push
in
jnp
cmp
and
push
inc
pmulhuw
mov
movsb
jno
nop
xor
sub
pop
out
cmp
jecxz
mov
je
dec
gs
subb
mov
and
fstl
sub
ret
xor
mov
pop
mov
push
adc
rclb
out
repz
cld
int
cld
pop
jecxz
mov
push
mov
mov
popf
testl
outsl
mov
pop
sbb
sbb
leave
add
sahf
mov
mov
loop
add
rcl
sub
stos
aam
jp
roll
aad
lods
fdivl
roll
repnz
mov
cmpsl
dec
jnp
jecxz
ljmp
movsl
push
ds
xchg
lret
sub
sbb
shll
rol
daa
jns
jbe
or
fwait
out
add
outsl
negb
pop
mov
test
aas
dec
sub
sub
jae
sbb
popa
lahf
cmp
mov
mov
pop
lret
in
pop
leave
push
out
cmp
fists
movsb
aas
ror
sbb
jmp
out
xchg
dec
jns
movsl
inc
movsb
in
mov
xor
dec
mov
fwait
es
mov
inc
test
test
pushf
loop
mov
das
dec
jle
icebp
inc
rcr
mov
frstor
add
imull
mov
les
cmp
mov
cwtl
or
pop
inc
pop
push
ficoms
sub
outsb
ror
arpl
mov
cld
aad
or
pop
fistpll
aaa
scas
roll
jge
jg
enter
lods
scas
pop
sti
movsb
jmp
sub
les
sub
daa
or
mov
mov
outsl
insl
xchg
push
mov
sub
jb
cwtl
mov
or
repnz
cmp
enter
in
mov
add
jo
mov
cmpsb
call
out
xor
test
aad
lret
mov
cld
gs
jbe
repnz
aas
sub
mov
clc
jp
xchg
test
sbb
pop
pop
shll
outsl
enter
jae
aaa
notb
int3
test
cld
std
nop
mov
mov
push
adc
adc
xlat
lahf
gs
xchg
je
mov
xchg
and
cld
jmp
mov
ss
add
mov
jecxz
pusha
cmp
adc
jge
bound
sub
cmp
pop
xlat
cmp
dec
cmc
jge
push
inc
sti
jg
icebp
loop
cld
sbb
cmp
js
dec
addr16
dec
push
pushaw
push
push
mov
ret
pop
gs
inc
adc
and
sub
ja
mov
test
outsb
mov
daa
stc
sub
shlb
and
sub
aam
mov
daa
into
rcrb
mov
inc
ficomps
fisubs
inc
popf
cld
fisttpll
and
jp
movsl
pop
ss
xor
rclb
lea
repnz
pop
repz
push
xor
mov
fisubrl
xor
mov
loope
cmpsb
xchg
ss
aam
in
cmp
rcrl
fadds
or
ja
sub
adc
mov
movsb
in
or
adc
pop
sar
into
inc
shlb
sub
popaw
inc
test
jb
aas
lret
cli
push
stc
mov
pop
lds
push
sbb
repnz
push
mov
dec
sbb
cli
lret
mov
cmp
fisttpl
dec
inc
inc
dec
aaa
add
cmp
inc
or
add
and
stos
jmp
or
mov
lahf
or
shlb
fnstsw
mov
stos
shrl
or
out
push
ljmp
jne
or
xchg
insb
pop
rcl
pop
add
popa
shrl
inc
das
xchg
dec
ljmp
ret
loop
mov
push
pushf
mov
pop
or
leave
fistl
cltd
mov
dec
mov
mov
pop
shrl
sbb
popf
outsl
jmp
imul
lea
mov
mov
mov
iret
and
aad
dec
add
mov
cmp
std
or
mov
retw
mov
cvtps2pd
cwtl
and
pop
xchg
movsb
je
sahf
shrb
fisttps
pop
arpl
pop
mov
mov
stos
jno
dec
jl
adc
push
mov
gs
cmp
daa
and
pop
ficomps
jnp
insl
stc
add
hlt
cmp
ljmp
lret
rcrl
add
mov
push
or
sahf
mov
sarb
adc
iret
pop
and
push
fiaddl
and
add
inc
clc
mov
jge
mov
into
aaa
jb
inc
movsl
arpl
sbb
ret
fidivl
jns
pop
call
pop
push
and
lock
jns
add
add
push
shrb
push
cs
das
inc
jo
adc
dec
pushf
cmp
sub
or
cwtl
arpl
jle
mov
cmp
lods
nop
sbb
jl
shlb
js
or
call
inc
mov
push
stc
dec
xchg
fnstcw
shll
loope
mov
pop
imul
lock
and
test
pop
adc
mov
inc
mov
mov
add
movsl
into
dec
pop
fildll
mov
xor
fcmovnb
and
arpl
hlt
lcall
or
jnp
pop
jno
sub
imul
loope
scas
adc
sub
iret
lock
jmp
or
pop
divl
mov
xchg
je
mov
popa
or
in
fidivl
push
fcmovbe
imul
jbe
xor
and
cld
cs
mov
aas
dec
fidivl
in
stc
outsb
fwait
aas
test
icebp
popa
xchg
xchg
sti
jmp
ss
mov
sub
orl
and
xlat
or
sti
xchg
insb
dec
aaa
into
test
movsb
mov
add
cmc
ljmp
push
in
xchg
rorl
aam
daa
test
or
xorl
adc
rol
pop
mov
test
mov
sti
xor
outsl
pushf
mov
scas
xor
jo
test
add
fs
sbb
pop
inc
movsb
jmp
in
clc
call
dec
jg
in
mov
jle
sub
pop
mov
jl
rep
out
into
xchg
or
shl
popf
adc
inc
dec
mov
pop
daa
or
mov
push
sbb
outsb
enter
sbb
sub
popa
out
scas
cmpsl
lcall
lea
adc
jbe
pop
negb
pop
ljmp
cmp
jno
int
pop
or
test
lret
xchg
aas
mov
dec
cmp
adc
cmp
lahf
cltd
sbb
xor
sbb
fdivp
jmp
mov
or
dec
test
push
mov
in
mov
scas
xchg
insl
lahf
outsl
mov
iret
fdivrs
pushf
mov
test
cmp
sbb
jbe
pushf
iret
clc
pushf
push
dec
outsl
sub
pushf
push
xchg
shrl
push
lret
push
iret
mov
jae
addb
cmp
jge
in
ja
mov
mov
cmpsb
xchg
arpl
inc
xor
fsts
aas
dec
dec
dec
add
in
gs
or
loopne
decb
xor
inc
dec
pushf
inc
add
sbb
pop
leave
jo
aas
icebp
inc
test
jl
scas
fiaddl
out
divl
ljmp
pop
lds
je
in
mov
cmp
das
inc
aad
mov
fstl
out
xorb
mov
inc
and
jle
mov
test
xchg
pusha
pop
sbb
xchg
dec
std
push
add
dec
call
and
jb
xor
pop
cmp
lcall
imul
mov
push
fldcw
ljmp
gs
xchg
dec
xor
inc
mov
data16
popa
fisubs
cmpsl
jecxz
mov
sbb
mov
mov
inc
push
adc
mov
inc
xchg
jbe
xchg
inc
sahf
add
icebp
inc
jo
aaa
mov
adcb
sub
pop
lret
or
movsl
ds
dec
and
stos
adc
sarl
jno
push
mov
icebp
or
inc
fs
dec
sti
jmp
test
fdivrs
shl
inc
xor
jmp
pop
xchg
xor
popa
mov
jae
dec
adcl
jo
clc
or
cmp
cmpsl
push
dec
insl
loope
cmpsb
fdivrl
popa
imul
pusha
xchg
dec
mov
sbbb
mov
int3
sbb
vsqrtpd
in
xor
subb
lcall
push
scas
mov
ret
out
cmpsb
mov
dec
movsw
mov
aad
pop
or
icebp
jge
push
and
pop
mov
data16
leave
shl
xor
lahf
sbb
daa
sub
mov
les
dec
cmc
loop
adc
icebp
mov
add
rolb
push
xchg
push
arpl
inc
xlat
mov
adc
emms
xchg
test
mov
rolb
or
daa
lods
out
pop
cmp
test
les
mov
adc
clc
mov
mov
cmpsl
adc
cli
ret
cmp
push
mov
rcl
dec
movb
fidivs
daa
rolb
std
cli
ret
jbe
jbe
or
and
jmp
ficoml
int3
push
ja
or
test
sub
or
loopne
bound
je
scas
or
lahf
sti
jecxz
adc
fs
xchg
dec
fdivl
lods
into
into
ss
stos
cmc
cmp
gs
mov
mov
jecxz
ret
mov
mov
insb
xchg
loop
nop
mov
and
dec
xchg
int3
incl
jle
push
pop
aam
mov
sbb
in
and
mov
movsl
pop
ja
jmp
pop
cmovae
in
repnz
in
pushf
xlat
xor
rcrl
mov
pop
outsb
loop
pop
cmp
or
sub
push
lea
inc
inc
mov
or
daa
xchg
popa
mov
adc
jbe
pop
lods
sbb
mov
sub
xchg
xor
xchg
stc
cmpsb
sbb
pop
xchg
aaa
loope
out
aam
push
clc
ror
fidivl
gs
enter
dec
stos
out
adc
adc
mov
mov
jno
add
mov
mov
jnp
pop
test
sti
aam
push
add
xchg
scas
mov
push
xor
xchg
scas
xor
out
repz
cmp
xchg
incl
sti
mov
sbb
mov
push
xchg
add
jb
arpl
int
cmp
sub
stos
sahf
outsl
mov
xchg
adc
nop
repnz
pop
lock
mov
and
sub
sbb
fcoml
shlb
dec
stc
inc
outsl
mov
add
pop
iret
movsl
jbe
movsl
mov
jb
mov
mov
shl
fs
mov
incb
sub
and
sahf
pop
addr16
push
push
cmp
pop
and
and
ret
push
mov
rcrl
jmp
movsl
dec
add
ljmp
jae
mov
or
mov
test
dec
push
add
mov
jecxz
in
ret
push
jmp
mov
cmp
cli
or
lret
sbb
jmp
pop
lods
negb
dec
lods
and
lcall
out
cmp
lds
ljmp
fnsave
cmp
stos
movsb
inc
inc
test
push
out
pop
pop
xor
cmp
repz
mov
lahf
jnp
arpl
or
cmp
sti
and
int
sub
or
aas
and
and
lods
mov
aas
fwait
adc
add
ret
xchg
mov
cmp
ret
imul
iret
push
sub
arpl
or
mov
repnz
adc
je
mov
in
push
xor
cwtl
sub
into
jo
sbb
mov
int
inc
movsb
sub
je
addr16
gs
int
cmpsb
ljmp
subl
mov
mov
jo
xchg
or
mov
xchg
sub
rclb
sub
mov
popa
pop
test
and
xchg
cld
out
mov
dec
sbb
ljmp
incb
ja
jp
test
lcall
repnz
or
loopne
imul
or
clc
jae
adc
cwtl
das
or
scas
loop
push
or
jge
mov
adc
bound
std
sub
mov
jb
mov
jge
shrb
ret
sbb
decb
inc
push
sahf
rol
outsb
decb
sub
sub
mov
mov
pop
int3
cmp
fwait
shrb
jge
fistps
add
mov
jo
sbb
pushl
stos
jo
sub
add
push
jno
jns
xchg
call
sbb
test
mov
xchg
xchg
popa
arpl
out
ret
lret
lcall
sahf
shlb
or
icebp
xchg
dec
or
and
loopne
leave
and
aaa
in
inc
mov
and
cmp
mov
and
fsubl
ljmp
cld
leave
cli
inc
pop
lds
xchg
cltd
popa
mov
cld
cltd
dec
push
stos
fldcw
jo
les
mov
sub
das
es
cmpl
fsub
rorb
rdtsc
in
xchg
fchs
push
int
insb
sti
sbb
std
jne
mov
ja
ja
test
icebp
adc
or
sub
sbb
jmp
push
daa
lret
lcall
xor
push
sbbb
inc
sub
mov
push
cwtl
push
aam
lods
ja
lds
add
xchg
stos
and
push
stc
push
imul
mov
enter
xor
fdivs
mov
fcoml
and
mov
mov
insb
cmp
out
cmp
in
and
pop
pop
mov
outsl
push
ds
cmc
pop
dec
xor
xor
inc
lods
sbb
ficompl
dec
jp
popa
mov
rclb
les
shrb
xchg
loopne
or
out
or
adc
dec
enter
mov
xchg
out
sbb
adc
cmp
pop
fdivrp
jne
add
mov
jbe
lret
xorl
cmp
pop
scas
sub
scas
mov
gs
pushf
and
enter
and
mov
xor
pop
jb
jno
sbb
mov
lods
and
fldt
imul
roll
sbb
iret
rcl
mov
mov
fs
mov
lds
scas
mov
pop
push
inc
mov
int3
call
sbbl
imul
pusha
jg
addr16
outsb
xor
les
and
fucomi
inc
sub
pop
out
sbb
mov
or
lods
les
dec
int
lods
and
test
pop
js
lock
ljmp
ss
popa
loopne
shll
dec
pop
pop
fbld
ss
lock
inc
nop
scas
dec
js
sbb
idivb
aaa
dec
xlat
inc
cmp
or
xchg
jge
jne
mov
dec
scas
mov
xchg
xor
xor
dec
dec
mov
das
add
test
orl
outsl
and
in
int3
xchg
xor
bound
lcall
mov
inc
xchg
dec
faddp
idivl
or
add
mov
xor
sbb
mov
jnp
outsl
xchg
cmc
xor
inc
imul
scas
jmp
jmp
ja
lahf
adc
lods
mov
xchg
sbbl
add
sahf
data16
and
inc
mov
mov
pop
je
xlat
mov
adc
mov
or
adc
sbb
sbb
andb
mov
push
xchg
fwait
mov
arpl
mov
mov
pop
push
sub
repnz
xchg
fdivrs
popf
mov
xchg
inc
add
outsl
out
ljmp
lds
outsb
push
rcll
xor
outsl
sbb
mov
mov
mov
lret
shll
pop
xorl
xchg
je
loope
lcall
and
js
rolb
cmpsb
add
scas
push
mov
in
repnz
cmp
loop
inc
push
sbb
push
inc
pop
test
jmp
add
mov
adc
jae
inc
pop
dec
cmp
xchg
int
cmp
add
outsb
es
test
mov
jl
push
xorb
add
push
lods
dec
fwait
aam
frstor
inc
nop
sahf
sub
arpl
mov
insb
movsl
cli
cmp
push
movsl
dec
mov
pop
lret
jb
xlat
xchg
in
mov
imul
push
or
inc
fwait
pop
mov
mov
cmpsb
mov
jo
shrb
cmc
jp
ljmp
xor
mov
and
fnsave
xchg
pusha
add
jge
dec
rolb
xchg
movsl
xor
mov
mov
pusha
jo
jg
test
ljmp
mov
mov
xor
dec
inc
ffreep
movsl
loopne
sbb
int3
lea
push
fstp
fsubrs
call
add
iret
stos
xchg
sbb
in
sbb
sbb
out
out
add
call
test
add
inc
cli
jns
cmp
mov
add
cmpsl
pop
xlat
push
jp
jl
cmp
daa
int
or
xchg
nop
out
sub
je
cmp
pusha
imul
xor
lret
or
lret
or
push
add
pop
mov
test
pop
mov
xchg
sahf
mov
adc
xor
enter
iret
insl
int3
xchg
out
xor
lahf
inc
or
icebp
cmpsb
cmp
orl
jmp
pop
stos
fcoms
aas
xor
fcmovb
cmp
xor
or
push
push
outsl
repz
jno
imul
cmc
cmpsl
mov
cmpsl
sbbl
lea
jno
les
fstpl
outsl
loopne
mov
pushf
lock
lcall
adc
push
mov
test
daa
jnp
pusha
push
mov
lea
mov
insl
shl
inc
int3
and
fdivp
cmp
xchg
call
and
add
dec
sbb
loope
fnstcw
jl
cmp
jecxz
jmp
push
je
and
cmp
adc
adc
jp
les
mov
les
out
inc
cmpsb
gs
xor
sub
aad
pop
sarb
mov
sub
cli
and
orb
cmp
ret
push
scas
imul
push
lods
push
and
and
xor
nop
and
cmp
inc
cmpl
addr16
and
dec
or
mov
es
jl
or
enter
add
lcall
es
out
mov
cwtl
dec
ror
sbb
insl
add
pop
xor
dec
shrb
mov
dec
mov
xor
cmp
mov
mov
shl
mov
jno
jle
dec
call
leave
jle
adc
xchg
call
fs
and
aam
xlat
mov
lret
shr
jnp
stos
xor
jae
cmc
inc
into
ds
adc
pop
cld
xchg
lock
mov
or
test
outsb
imul
xor
jp
pop
adc
faddp
adc
aad
adc
fnstenv
dec
aas
loop
andl
jb
push
and
add
or
push
adc
popl
fdivl
pop
add
mov
jb
and
ret
scas
sub
xchg
xchg
mov
xlat
inc
aaa
push
mov
and
mov
inc
sbb
cmp
and
nop/reserved
cltd
pop
inc
gs
daa
adc
sbb
test
and
stos
ds
rorl
mov
mov
scas
insb
xchg
jle
test
push
push
mov
fnstsw
cli
ljmp
or
inc
int3
cli
leave
popa
cmp
mov
pop
jbe
and
sbb
mov
cwtl
pop
jns
and
push
rep
xchg
push
mov
add
enter
stc
sub
pop
enter
orl
shrb
or
jmp
lds
push
jp
sub
ljmp
aas
sub
fistps
ja
out
push
jns
push
sub
push
imul
popf
cs
imul
inc
cli
pop
pop
daa
mov
and
add
add
inc
stc
mov
je
imul
adc
movsb
mov
lea
into
cld
frstor
insl
mov
in
push
pop
sbb
inc
hlt
movsl
ja
in
divl
pushf
pop
out
cmp
dec
scas
call
aaa
jecxz
arpl
jg
in
inc
mov
repnz
sbb
xchg
lret
ja
sub
pop
int
xchg
std
lahf
xor
push
inc
frstor
or
sti
rolb
sbb
sbb
cltd
or
mov
inc
faddl
popa
xchg
xor
inc
mov
pop
sbbl
outsb
stos
popf
adc
in
cmp
mov
shll
adc
insb
jmp
sbb
pop
repz
in
int
ja
lock
fdivs
adc
push
jb
push
movsb
cmpsb
jecxz
in
cwtl
std
repz
mov
jmp
push
fldenv
pop
and
js
adc
sbb
and
and
dec
or
hlt
inc
xlat
inc
sbb
fbld
jbe
cltd
je
pop
fdivs
push
call
adc
imul
push
lea
push
push
xor
ret
repz
mov
cli
mov
lds
pop
ss
and
lods
mov
js
addr16
ljmp
or
sbb
lds
pop
lea
or
call
adc
and
imul
ficoml
icebp
xchg
or
int
pop
jb
das
iret
xor
scas
notl
inc
scas
xor
out
rcll
and
xchg
test
sub
imul
jne
lcall
shr
sub
pop
xchg
push
mov
aad
mov
sti
mov
mov
cmp
je
pop
lret
or
fmuls
lret
mov
pop
shlb
pop
sbb
shr
push
popa
xor
dec
movsb
cmpb
xor
push
in
inc
mov
and
mov
xchg
stc
pop
xchg
jnp
lret
sub
xor
add
sub
aam
mov
mov
popa
inc
fistps
adc
ja
les
adc
dec
out
sub
cld
sbb
in
pusha
xchg
mov
in
lss
scas
pusha
jmp
cmovbe
jmp
aas
jb
jle
pop
cld
loopne
in
pop
test
dec
bound
mov
mov
jp
cmp
push
xchg
or
cmp
test
insl
cmc
iret
dec
lock
mov
pop
xchg
or
jbe
dec
je
xlat
ret
jle
push
pusha
subl
jne
roll
int3
and
fincstp
shll
push
das
jge
jnp
sbb
pop
dec
dec
sarb
xchg
xchg
mov
inc
mov
xor
addb
out
jmp
nop
mov
add
dec
and
mov
xchg
or
jo
stos
mov
pop
filds
xchg
in
pop
jo
inc
or
jmp
gs
aam
outsl
push
dec
lods
mov
punpckhwd
sub
std
scas
push
bound
js
adc
mov
mov
aad
std
push
mov
push
fistps
shll
repnz
out
repz
ret
adc
sete
mov
fildl
mov
arpl
out
cli
dec
sbb
cld
cmc
loope
loope
rorb
mov
pop
loope
and
sub
jmp
dec
fsubs
jl
cmp
bound
shl
add
pop
iret
jae
test
call
add
and
dec
gs
bswap
mov
movsl
dec
ret
xor
cwtl
lcall
aam
jmp
fmulp
lahf
add
loope
mov
push
jge
mov
pslld
jl
sub
and
into
add
mov
das
mov
dec
and
pop
pop
daa
out
data16
lds
add
inc
mov
add
push
fiadds
movb
mov
xor
inc
dec
add
xor
test
pop
in
push
outsb
push
push
movsb
sub
xchg
fcmovnbe
insb
aas
mov
stc
push
mov
mov
cli
test
adc
cmp
fs
addb
pop
adc
into
das
mov
call
mov
adc
dec
mov
mov
cwtl
ss
call
dec
xlat
mulb
xchg
mov
xchg
stos
pusha
ss
popf
sbb
cmp
jns
into
add
mov
sti
pop
mov
dec
mov
fs
pop
aas
push
adc
fmull
sub
cwtl
out
cmp
mov
pushf
into
cmc
xchg
push
dec
dec
mov
ret
ret
xchg
fsubs
or
sbb
imul
xchg
xor
cmp
sbb
mov
pop
pop
rcrl
pop
arpl
sbb
cmpxchg
loop
adc
push
ret
pop
pop
icebp
pop
xchg
xor
cs
hlt
jmp
or
fs
jmp
cmp
xchg
movb
xchg
add
inc
mov
sbb
ljmp
pop
sarb
fcoms
imul
mov
hlt
mov
xadd
xchg
or
addr16
pop
out
ret
inc
push
jo
orb
fisubl
mov
loope
leave
xchg
arpl
dec
fnstcw
inc
loop
mov
and
adc
cmp
sub
xlat
sub
icebp
fldcw
jecxz
adc
lahf
mov
xchg
imul
xlat
test
in
xor
xlat
in
jmp
iret
lds
icebp
daa
push
cli
bound
sub
xchg
push
xor
mov
lods
mov
sub
out
add
loopne
arpl
xchg
and
ret
push
stc
outsb
jo
xor
xor
cmc
adc
dec
into
xchg
jg
outsb
inc
outsl
icebp
push
stos
jg
adc
fucomi
adc
insb
int
je
aam
push
and
int3
push
inc
xchg
outsb
int3
adc
pop
call
loope
inc
mov
int3
push
pop
fistl
xor
inc
xchg
outsl
rorl
cmpsl
ljmp
jno
mov
icebp
cmc
or
jnp
mov
mov
push
jle
sub
sbb
add
and
ljmp
xor
adc
pop
adcl
js
les
int3
push
xchg
jns
push
or
and
push
push
and
inc
sbb
lds
cmc
xor
jae
or
addl
subl
mov
xor
lret
mov
pop
iret
push
in
jno
call
loope
rcll
xchg
loop
xchg
fstl
ja
pop
gs
mov
mov
add
loope
cmovl
cs
adc
sub
sbb
sub
mov
testb
lods
aad
or
xchg
sub
sub
cwtl
negb
xchg
insb
daa
xchg
lock
mov
add
fs
or
cmp
cwtl
mov
mov
ja
pop
pop
xchg
dec
xchg
mov
jmp
mov
jno
add
pop
pop
dec
sub
rcl
in
pop
dec
cwtl
cmpsl
pop
nop
addl
dec
adc
shll
in
call
xor
loope
cld
aaa
and
inc
adc
push
stc
cmp
leave
test
stc
leave
fldenv
dec
push
test
lds
je
jge
mov
jge
sub
fistpl
pop
les
mov
mov
shll
mov
mov
sub
pusha
jmp
adc
das
adc
movsl
test
dec
xor
push
xor
repnz
int
int3
jecxz
push
inc
fisubl
fcmovne
adcl
jl
imul
mov
addr16
pop
lods
movsl
mov
addr16
test
fwait
mov
xchg
data16
fwait
push
pop
mov
push
popa
ss
mov
adc
loopne
xchg
sbb
fisubrl
mov
lods
jne
sbb
cmpl
std
push
hlt
test
movsb
in
or
scas
mov
sbb
and
sbbb
fcomp
es
jbe
popf
or
dec
xlat
pop
xchg
repnz
or
sub
mov
decb
pop
std
mov
or
sbb
fnsave
lods
mov
pop
out
fcoml
push
cmp
cmp
faddl
fdivrp
repz
repz
xor
aad
or
movsb
pop
sbb
pop
inc
repz
shll
push
arpl
adc
ret
mov
push
lds
adc
mov
insl
cmp
mov
push
jl
fbstp
push
addr16
data16
xchg
mov
xchg
stc
stos
mulb
add
push
add
jns
jmp
in
out
xchg
jecxz
xor
popa
jbe
das
push
dec
clc
mov
rorl
xchg
jp
mov
mov
mov
inc
push
repnz
and
ljmp
fldt
aaa
xchg
mov
push
icebp
or
or
es
lds
and
imul
mov
jae
je
push
jae
adc
mov
rclb
hlt
sub
pop
ror
jecxz
es
out
les
lcall
inc
fimuls
nop
push
pop
sbb
sbbb
mov
test
pop
adc
aas
ljmp
jg
popf
imul
dec
push
int3
scas
test
or
xor
out
mov
push
and
mov
mov
push
out
inc
mov
cmp
pusha
insl
push
sbb
jbe
insb
xchg
imul
aas
jne
inc
call
and
mov
mov
test
sub
sbb
jp
call
sbb
xor
and
xor
push
fisubl
mov
sub
mov
imulb
mov
push
out
imul
jo
xor
pop
xor
mov
das
stos
xchg
push
btc
lcall
pushf
addr16
enter
xchg
out
jle
outsl
mov
dec
loop
sbb
and
shl
mulb
sub
mov
fidivrs
inc
xor
lods
shlb
mov
ds
sub
mov
xchg
sub
ss
sti
push
cmp
jbe
adc
imul
jp
mov
dec
cmc
lcall
sub
mov
lret
cmpsb
ljmp
shlb
setl
mov
jmp
incl
cmpsb
sbb
xor
shl
das
fs
dec
dec
cmpsb
popa
dec
insb
adc
into
add
jns
xchg
jmp
mov
negb
popf
dec
add
out
cmpl
and
out
add
out
hlt
xchg
mov
sbb
push
pop
xchg
jle
sbb
insb
jg
dec
adc
scas
sub
adc
and
jns
scas
dec
insl
sub
jecxz
or
cmp
mov
cmp
push
or
mov
out
adcb
shrl
adc
mov
sbb
pop
das
add
mov
inc
mov
jno
push
cltd
mov
and
push
inc
pop
out
cmc
scas
mov
inc
or
adc
dec
cmp
andb
xor
cld
lret
push
popf
jle
mull
inc
scas
std
cmp
mov
sbb
lret
es
xchg
xchg
out
or
xchg
push
pusha
lahf
mov
or
pop
xor
add
jae
cmp
push
push
data16
mov
ret
add
in
jmp
pop
cs
push
push
push
adc
mov
addr16
mov
int
in
jecxz
mov
xor
mov
clc
mov
mov
psubusb
xchg
pop
insl
cmp
aaa
pop
and
and
jle
or
jb
or
orb
sub
pushf
stos
lahf
inc
mov
dec
sbb
add
sbb
ret
pop
pop
xchg
bound
aam
nop
jo
in
imul
in
lret
int3
gs
sahf
xor
mov
pop
enter
je
shlb
mov
ss
aam
xor
mov
cld
std
sub
adc
pop
pop
jne
push
xor
clc
mov
sarb
lds
lods
add
sbbl
ret
or
fisubl
mov
or
xchg
adc
cmp
cmp
out
sub
jb
cmp
dec
sbb
mov
gs
shrl
fstl
pop
test
adc
movsl
negl
jg
inc
jae
mov
icebp
sti
and
out
push
jbe
push
mov
inc
sbb
loop
jle
mov
mov
outsl
movsl
jge
popf
test
movsl
push
loope
xor
ljmp
ss
push
push
sbb
movsl
inc
ss
cmc
aas
or
cmpsl
aam
leave
dec
dec
call
adc
cs
xor
fcompl
pushl
push
cwtl
mov
out
jecxz
test
jge
popf
jo
cwtl
popa
mov
mov
repz
mov
xor
aad
push
leave
mov
mov
pop
xchg
jle
sbb
fs
xchg
cmpb
xchg
jp
push
pop
mov
sub
dec
enter
push
data16
ret
call
imul
inc
mov
mov
xchg
fcom
les
outsl
sub
nop
loope
or
mov
inc
inc
in
and
jg
scas
cmp
sub
inc
gs
add
hlt
pushf
jmp
mov
mov
sbb
or
sub
mov
mov
rclb
push
push
pop
push
xor
mov
xor
jbe
mov
inc
jge
ret
push
xchg
add
jge
leave
fidivl
in
mov
push
and
dec
aam
test
xlat
xor
scas
arpl
jl
xor
stos
add
jne
lret
mov
push
cltd
mov
fwait
enter
es
aad
loop
popa
mov
jns
push
push
cmp
and
test
dec
push
inc
cld
push
je
jo
mov
sub
cs
pop
mov
iret
dec
mov
dec
inc
jge
es
repnz
xor
sarb
mov
xor
in
dec
mov
mov
popl
dec
ss
mov
add
jmp
imul
imulb
in
mov
push
adc
pop
dec
and
test
inc
or
mov
adc
pop
cmp
bound
fdivrs
push
push
pop
shlb
pop
lea
mov
sbb
scas
mov
mov
mov
lahf
jno
es
mov
pop
xchg
cmpsb
mov
or
and
ficoms
movsl
pop
test
fbld
mov
decb
push
fdivl
arpl
or
xor
push
dec
sub
mov
pop
add
mov
push
xlat
xchg
ljmp
pop
imul
es
movsb
test
ficomps
lods
lret
sub
mov
pop
cmp
xchg
pop
scas
lods
or
cmpsb
das
lods
into
mov
sub
addr16
pop
nop
cmp
fsubl
lret
rorl
xor
xchg
jne
dec
or
test
das
sub
cmp
fisttps
shrb
mov
movsl
pusha
and
push
pop
or
sbb
rorl
popf
int
xchg
mov
imul
xchg
mov
scas
mov
stc
popf
inc
ret
icebp
and
call
in
arpl
mov
mov
push
dec
cmp
pop
je
mov
daa
cmp
lods
mov
and
lods
addb
or
jg
add
orb
xor
xchg
inc
sub
mov
nop
pop
sbb
and
xchg
xchg
dec
mov
xchg
lea
cltd
test
mov
popa
pop
hlt
test
sub
jno
in
fisubrs
test
adc
std
subb
mov
aam
mov
sbb
push
mov
loop
sub
adc
and
in
or
push
inc
mov
in
lds
out
je
bound
and
into
sbb
pusha
jne
movsl
lret
push
push
insb
xadd
jno
jo
xchg
sti
in
movl
inc
es
stos
lock
push
push
add
js
call
stc
add
fdiv
outsl
leave
dec
ljmp
mov
pop
or
push
ds
adc
jge
xor
fildl
mov
add
xor
and
sbb
outsl
and
jnp
lcall
repz
add
ror
aaa
pusha
repnz
push
adc
insl
hlt
or
insl
fs
loopne
loopne
jns
test
inc
fsubrl
lea
xchg
adc
arpl
fiaddl
arpl
xchg
sbb
outsl
loope
mov
aaa
add
jae
adc
gs
mov
adc
out
cmpsl
out
aad
jb
mov
sub
inc
outsb
or
mov
icebp
mov
cmpsb
and
mov
add
out
sub
std
insb
cmp
pop
sbb
and
jl
hlt
ja
sbb
ja
sti
das
cwtl
stc
push
mov
in
jbe
fstpl
rcll
pop
testl
dec
sub
jnp
shrl
mov
mov
add
sbb
pushf
sbb
cld
iret
stc
gs
xchg
sbb
aam
jae
jge
insl
ret
add
sbb
add
std
leave
inc
sbb
int
stc
or
mov
loope
lods
mov
or
ficompl
mov
enter
and
test
into
enter
push
fnsave
lods
mov
push
or
lock
jecxz
dec
aad
repnz
xor
scas
pop
sub
adc
lret
lret
leave
add
loopne
cmp
push
and
idivl
xor
xor
and
pop
subb
sbb
sub
jne
addb
cli
and
sahf
out
mov
lret
dec
test
sub
push
add
popf
das
clc
outsb
stc
jl
xchg
lock
fiaddl
pop
adc
pop
lahf
fmuls
fs
xchg
out
je
xor
sbb
xchg
pop
orl
jne
jbe
pop
jp
mov
sti
adcb
mov
ret
ds
xor
ret
adc
jns
xlat
out
dec
ljmp
add
xor
lock
pushf
or
lds
cmp
push
mov
xchg
aam
mov
test
xor
scas
out
adc
xlat
mov
mov
xchg
js
inc
adc
mov
popf
js
test
ficoms
or
daa
dec
repz
mov
pop
push
in
xor
rcrb
xor
dec
nop
xchg
fisttpll
pop
sub
add
in
shl
test
nop
in
and
mov
aam
push
int3
mov
cmpsb
repz
fwait
pop
dec
sbb
jecxz
xor
inc
test
push
js
fstpl
scas
test
test
push
mov
mov
test
push
lock
dec
out
inc
push
orb
inc
push
fbstp
shrb
inc
xor
add
sti
fmuls
cmpsl
fdivl
adc
mov
and
pop
jle
test
sti
aam
imul
fstpl
mov
bnd
adc
je
orl
jb
mov
outsb
js,pn
arpl
lret
push
sbb
outsb
dec
push
ret
xchg
imul
test
cmc
ljmp
test
insl
in
adc
loope
int3
cmp
sub
je
imul
add
ljmp
or
gs
rcrb
iret
jae
jb
cmp
ret
out
push
inc
adc
sub
xorb
jno
iret
insb
xchg
dec
push
into
jmp
lods
js
into
imul
out
movsb
lcall
outsl
mov
frstor
mov
iret
jg
xchg
fwait
ret
notb
in
mov
scas
test
mov
notb
iret
xchg
mov
pop
inc
mov
cwtl
rol
pop
mov
sbb
push
jecxz
pop
jb
popl
into
inc
ss
jo
sub
lret
jecxz
push
jae
iret
std
mov
lret
xor
push
ret
add
stos
jg
xor
iret
cltd
loope
fmull
inc
insl
lods
iret
mov
lar
enter
arpl
cmp
pop
movl
mov
jmp
mov
out
add
mov
push
incl
adc
out
inc
outsl
adc
fs
shr
xor
sti
sub
xchg
cmpsl
lods
and
lods
aam
inc
jle
jb
daa
pusha
push
gs
shll
xchg
int3
cli
cltd
leave
lahf
test
inc
pop
xchg
lret
loopne
aad
int3
jb
out
inc
nop
shr
xchg
dec
and
fidivl
rcrl
push
out
xchg
mov
and
pushf
pop
pusha
mov
xchg
cmpsl
sub
leave
cmp
add
loope
imul
mov
sub
shlb
testb
jnp
enter
push
and
xchg
fwait
ret
inc
push
nop
lds
inc
cmp
mov
cmpsb
shrl
roll
rcll
pop
sarl
andb
aas
mov
push
or
movsb
orl
lock
ss
sti
cmp
lock
lods
into
mov
sub
lcall
mov
in
fbld
out
int3
xchg
lock
mov
out
cltd
pop
xchg
xor
les
aaa
push
inc
daa
cmpl
add
fs
inc
out
aaa
xchg
nop
nopl
inc
adc
inc
dec
nop
cmc
mov
inc
add
sahf
sub
mov
cwtl
lock
mov
popa
sarl
out
daa
inc
fwait
mov
shl
es
push
lock
xor
add
xor
sbb
push
ret
inc
lea
push
pop
dec
jnp
call
cmp
dec
fwait
adc
movsl
fstpt
cmp
jne
inc
mov
inc
test
rcrl
jmp
sub
push
shlb
or
fisttpll
dec
lahf
add
aaa
das
add
push
loopne
imul
lahf
ja
xor
in
add
rorl
jl
je
adc
cltd
pop
add
stos
xor
loopne
push
enter
add
sub
or
pop
and
iret
xchg
pusha
or
cltd
jecxz
jb
enter
push
or
and
inc
pop
aas
jnp
inc
ss
xlat
cmpsl
inc
xor
xor
mov
gs
xor
aam
cmc
test
cmp
jmp
jo
ficoms
ss
mov
enter
mov
mov
or
shrb
push
dec
mov
xchg
add
inc
cmp
lock
jg
insl
push
sbb
sub
jno
mov
rcrb
dec
xchg
lret
or
sti
rcl
xor
out
jae
iret
test
jno
testb
jns
fwait
loope
aad
jle
ficoml
lds
testl
sub
mov
adc
push
in
jns
aam
mov
addr16
out
imul
dec
adc
inc
mov
out
int
fdivrp
loopne
sub
xchg
inc
cmp
add
mov
fxtract
push
aaa
mov
jecxz
mov
jmp
outsl
adc
fbld
fadds
inc
icebp
imul
xor
int3
add
std
sbb
mov
popa
mov
cmp
ret
mov
dec
mov
jne
arpl
lods
adc
pusha
cmp
loop
mov
mov
push
jg
jle
aam
xchg
icebp
push
loop
xchg
sahf
or
adc
xchg
or
inc
pop
add
sbb
orl
or
inc
arpl
cmc
dec
movb
mov
jno
in
and
divb
ja
dec
add
lea
fnsave
or
nopl
outsb
add
jns
lahf
mov
dec
xchg
push
jno
mov
int
pop
fwait
shll
xchg
out
xchg
mov
add
shll
outsb
lret
sbbl
add
adc
mov
pop
inc
or
andb
xor
test
mov
jecxz
mov
subb
ss
cmpsl
divb
jge
jae
sub
in
sti
pushf
ret
jge
in
mov
out
pop
mov
mov
mov
js
dec
jo
push
cs
mov
movsb
jp
aad
jecxz
lods
push
add
dec
popa
inc
mov
sub
sbb
adc
push
hlt
pop
push
xor
es
xchg
out
les
popa
mov
jge
add
push
sti
jne
and
and
xor
add
or
pop
les
inc
dec
sti
je
or
xor
sete
inc
xchg
adc
test
and
call
push
adc
pop
mov
addl
rcll
pop
scas
in
mov
and
cltd
daa
addr16
and
xchg
leave
clc
notb
push
dec
mov
addr16
sbb
push
cmp
mov
and
inc
popa
cmp
shl
fstl
stc
ret
mov
je
push
pop
insb
mov
dec
fcmovb
cmp
mov
add
inc
fmull
cwtl
push
xchg
cltd
mov
adc
and
sub
sti
jbe
mov
daa
sbb
mov
adc
mov
lcall
lea
or
ljmp
adc
inc
mov
xchg
lcall
jae
jg
fcoml
sub
sub
js
pop
adc
mov
and
and
or
inc
mov
push
leave
add
sbb
sahf
sub
pop
mov
flds
adc
clc
pop
mov
sbb
mov
fcomp
xchg
daa
xor
imul
flds
inc
fsubp
popa
inc
jp
dec
aas
jbe
sbb
pop
sbb
test
stc
cmp
enter
and
imul
add
inc
push
pop
ror
in
sub
sbb
enter
sub
and
push
sbb
into
fsts
inc
jbe
mov
sbb
inc
push
daa
movsl
cwtl
pop
lahf
xchg
add
fwait
arpl
ss
fucompp
push
push
mov
sbbl
out
sbb
test
or
frstor
cmpsl
fwait
adc
nop
stos
scas
jmp
pop
inc
cmp
dec
mov
xchg
push
pop
lock
call
xchg
adc
repz
aaa
jae
filds
lock
dec
inc
sub
jno
pop
lahf
push
and
xlat
sbb
lret
filds
push
dec
addb
xchg
std
xor
or
je
js
in
jle
dec
mov
xlat
lds
cli
dec
cmp
mov
nop
pop
jge
cmpsw
addr16
pushf
aas
jmp
or
cmp
mov
cmpsl
and
cmp
aad
inc
inc
xor
divb
mov
dec
fdiv
cs
mov
xchg
and
xchg
push
aas
imul
test
mov
cwtl
cmp
or
mov
faddp
jg
mov
adc
lahf
ffreep
jae
mov
imul
rorb
cltd
ss
clc
dec
dec
movsb
lods
mov
push
lret
stos
jg
roll
cmpsb
jmp
push
mov
dec
add
les
hlt
jl
mov
push
mov
dec
lock
lods
push
inc
andl
loopne
jmp
pop
ljmp
inc
push
ret
mov
pop
xchg
dec
stc
mov
mov
mov
out
pop
sub
inc
dec
stos
imul
mov
in
and
aaa
xchg
xchg
pop
popf
pop
popf
mov
addr16
in
ljmp
arpl
scas
add
xchg
pop
rcll
imul
dec
mov
mov
testb
mov
jg
in
icebp
orl
out
mov
out
pop
frstor
data16
gs
filds
and
lret
bnd
push
mov
out
mov
sbb
mov
sbb
mov
pop
jb
cltd
cmp
and
in
outsl
cmp
adc
adc
rcrb
sbb
sahf
int
mov
pop
jo
dec
push
cmp
in
jle
daa
faddl
out
in
xor
aaa
pop
aas
inc
fsubr
ret
call
repnz
fcoml
cltd
inc
aaa
aad
popf
and
fcomi
movsb
cmp
push
repz
mov
push
mov
lods
lods
or
dec
int
cmc
fcmove
fistpll
rorl
ljmp
or
or
imul
jp
mov
in
jmp
nop
cli
mov
mov
sbb
pop
sbb
mov
je
cmp
sbb
add
jnp
push
ds
cmp
cmpb
inc
fdivl
fcompl
movsl
cmpsb
popl
sbb
adc
ret
inc
in
inc
mov
lock
scas
icebp
call
es
xor
adc
out
ficoml
add
mov
not
jns
inc
pop
xor
pop
xor
adc
mov
push
pop
cli
xor
push
cmc
cmpsl
divl
cmp
dec
push
ficomps
sub
scas
lods
testl
mov
clc
lea
sub
lock
inc
push
jbe
xchg
push
push
in
in
fnstcw
fnstenv
jae
imul
push
xor
mov
fcompl
xchg
mov
pop
push
mov
stos
fsubl
pop
std
pop
insl
dec
sar
xor
sub
popa
mov
imul
dec
pop
ret
xchg
nop
pop
mov
lds
dec
shll
pop
inc
pop
movsb
adc
fsubl
adc
mov
add
scas
pusha
adc
ret
cld
aam
and
icebp
cmp
and
iret
dec
jg
test
imul
iret
pop
arpl
lcall
shl
mov
std
add
xchg
sbb
sbb
pop
pop
xchg
jge
xor
and
cmpsl
push
data16
jno
aam
loop
shrb
xchg
mov
adc
mov
mov
jo
dec
loope
nop
mov
je
adc
pop
add
rorb
xchg
aam
xchg
js
adc
in
in
cmc
outsb
sub
mov
cmp
fisttpll
lahf
jge
dec
or
stos
mov
pushf
push
xchg
dec
jle
mov
sub
das
loope
cmp
or
mov
lds
pop
std
out
push
add
cmp
movsl
lock
cld
dec
dec
daa
add
std
pop
cmpsl
mov
mov
cltd
adc
pop
fcmovnu
push
jp
push
das
out
adc
jnp
test
in
stos
dec
and
mov
fsubrs
repz
xor
push
dec
add
mov
lods
mov
paddq
mov
push
into
test
inc
outsl
dec
adc
pop
iret
mov
loope
clc
jp
fs
test
mov
out
cli
pop
xchg
adcl
stc
ss
ds
in
mov
cwtl
jno
push
mov
lahf
jo
les
mov
loopne
sub
cmc
cmp
and
loope
adc
pop
out
adc
addr16
insb
idivb
mov
xor
jge
cltd
nop
std
mov
dec
ljmp
jns
mov
add
push
mov
xlat
out
push
or
xchg
push
icebp
lods
sub
popa
je
fisubrs
out
repnz
mov
stos
lcall
imul
cmp
xchg
imul
xchg
mov
push
mov
adc
sub
xchg
and
xchg
ss
xlat
daa
cmp
mov
lods
pop
dec
filds
and
negb
cli
add
mov
xor
xor
lods
loope
lods
sub
or
es
addr16
mov
call
repz
int
movsb
out
lods
cmc
loope
push
mov
cld
out
xchg
jp
mov
fdivs
das
sbb
cwtl
dec
test
xchg
add
mov
xor
testb
loope
jecxz
lds
lods
jmp
popf
jno
push
mov
imul
insl
insb
lods
inc
cmp
xchg
xorl
cmp
pop
aaa
fs
cwtl
xchg
mov
test
arpl
push
pusha
jp
ja
adc
mov
das
pop
lea
leave
push
xchg
divps
mov
hlt
mulb
iret
incb
js
in
fistl
jo
mov
inc
scas
fmuls
inc
hlt
xchg
mov
dec
std
adc
jp
mov
cli
xor
out
insl
std
cmpsl
es
xchg
add
std
adc
jne
stc
sbb
test
cmc
dec
or
cmpb
cli
ror
shll
je
sbb
jnp
pusha
jo
out
lods
ds
or
inc
loop
jnp
jae
loope
push
hlt
inc
jns
pop
pop
push
and
xchg
jns
xchg
xchg
mov
lock
and
sbb
and
add
or
xchg
pop
adc
push
or
cld
in
shrb
sbb
loope
add
daa
or
in
or
loope
insb
mov
out
push
inc
dec
cmp
sbb
xchg
sti
xor
ljmp
cld
mov
mov
sti
call
aaa
or
pusha
cltd
test
xchg
mov
inc
inc
sbb
mov
and
jnp
inc
bound
or
in
push
cld
jg
arpl
subl
test
sbb
mov
jle
mov
mov
nop
xor
cs
call
jne
push
test
xchg
aas
xchg
movsl
mov
inc
cs
dec
add
cwtl
xor
lea
das
lea
mov
ja
lcall
popf
mov
pop
add
adc
jbe
dec
sub
push
lahf
mov
xor
fisttpl
movb
xchg
and
sbb
test
adc
sub
sbb
mov
mov
into
sub
mov
sbb
lods
jns
imul
pop
ja
push
cmp
ljmp
scas
pop
pop
push
iret
fbstp
lock
push
fstl
ret
test
xchg
adc
pop
adc
mov
call
mov
dec
int3
std
cmp
jge
out
pop
mov
jne
xchg
xchg
adc
loopne
loope
rcll
nop
mov
xchg
inc
jge
dec
lea
out
clc
fs
inc
outsb
ret
mov
lods
fldenv
dec
fildll
insb
push
pop
pushf
flds
inc
aaa
sub
mov
xchg
and
mov
xchg
imul
or
iret
pop
pop
mov
cmpsb
dec
cmc
js
idivl
mov
scas
inc
mov
daa
jp
cmc
xor
sahf
cmp
stc
mov
push
fnsave
cmp
jae
cmp
loope
sub
dec
rol
loope
jae
and
sbb
int3
loope
movsb
and
cmpl
mov
jp
sahf
lea
pop
jg
data16
and
jae
in
mulb
dec
fstpl
inc
inc
int
mov
mov
add
sahf
xchg
cwtl
xor
mov
fiaddl
adc
pop
lea
loopne
and
mov
inc
add
insb
sbb
call
prefetch
or
out
xchg
and
out
push
and
out
cld
aaa
jmp
push
enter
xchg
push
cmp
xlat
aaa
xor
cmp
xchg
cltd
fistps
mov
xor
jb
mov
dec
sbb
xor
das
push
js
jbe
movsb
or
mov
shrb
mov
pop
mov
pop
hlt
and
addl
movsb
xchg
daa
cmp
inc
jo
mov
fdivs
inc
je
adc
out
rclb
jg
pop
cli
lds
fistpl
dec
push
sub
jg
stos
loop
dec
out
pop
shlb
loopne
std
bound
data16
scas
jbe
lret
lcall
inc
lea
rcrb
mov
rorl
mov
testb
or
push
insl
fdivl
adc
test
out
std
and
in
cltd
adc
push
push
inc
pusha
pop
pop
mov
pusha
arpl
dec
cmp
test
sub
cmp
mov
jns
sti
add
mov
dec
xor
mov
pop
xchg
sub
aad
inc
repz
mov
xor
mov
cli
addr16
cmp
xchg
out
adc
sbb
dec
mov
push
leave
test
sbb
jg
cmpsl
subb
stos
lods
nop
xor
shlb
xchg
jne
xor
pop
add
xchg
fstl
das
cmp
rcr
xor
movl
mov
xorl
sub
lcall
jmp
stos
jbe
pop
daa
pushf
shl
and
ja
push
xlat
pop
call
pusha
orl
sub
out
bsr
cwtl
lea
or
or
iret
mov
cmp
and
push
popa
cmp
adc
icebp
and
popa
stos
insl
cmc
or
lahf
and
je
jl
cmp
scas
sbb
in
fistl
daa
shll
mov
ss
jl
sub
cmp
das
mov
jae
dec
lcall
idivl
and
and
push
push
jmp
xor
cs
sub
and
lods
aad
mov
je
xchg
xchg
cwtl
shr
fimull
or
cmp
mov
add
dec
aas
push
xor
mov
fistpl
mov
pop
int3
push
fcom
imul
push
shll
clc
push
mov
jle
fdivrl
xchg
insl
movsb
repnz
push
or
mov
arpl
cmp
cmp
outsb
cwtl
cmp
pop
adc
dec
adc
cmpsb
fstpt
loope
dec
rorl
sahf
dec
decb
gs
dec
mov
pop
sbb
adc
mov
ret
lret
sub
ds
dec
adc
sti
mov
fbstp
sbb
sbb
shrb
adc
sbb
movsb
pop
clc
insl
mov
jmp
dec
push
hlt
adcl
or
inc
adc
jle
scas
test
mov
shlb
cmp
jae
mov
jp
scas
cmp
lcall
sub
fstpl
and
fisttpl
mov
lahf
inc
imul
das
ja
testl
add
inc
mov
loopne
outsb
out
test
or
xor
inc
in
inc
inc
test
inc
xorl
sbb
mov
ljmp
out
mov
enter
rorl
fcmovnu
aam
sub
ja
mov
pop
sti
lret
adc
push
insb
cmp
mov
bound
xor
int3
push
ds
mull
push
fidivrs
xchg
push
cmpsb
jno
jae
mov
rcr
inc
xchg
cmp
jecxz
popa
andb
jmp
call
mov
movl
cmpsb
xchg
std
cs
cmp
data16
outsb
lea
out
popa
and
insl
dec
pop
adc
pop
pop
psllq
adc
dec
mov
jecxz
jmp
lock
inc
data16
insl
adc
ret
add
jo
int
imul
shl
movsl
cs
pop
and
lahf
xchg
xchg
adc
mov
and
icebp
adc
cmp
in
test
imul
jle
xchg
fildl
dec
mov
and
outsl
aad
jge
lods
xlat
bound
push
leave
add
add
shrb
data16
or
inc
fisubs
adc
pop
and
test
adc
jo
mov
push
xchg
sub
icebp
cmc
es
jecxz
adc
mov
int
mov
dec
mov
clc
jg
xchg
lcall
inc
inc
jne
xchg
push
cmpsl
scas
mov
pop
mov
bound
jg
rcl
push
mov
ret
jno
fldcw
mov
inc
inc
mov
in
sbb
inc
xchg
or
mov
xor
xchg
jg
shlb
int
sbb
insb
adc
fdivrl
arpl
pmullw
jmp
aam
jge
pcmpeqd
imul
data16
or
test
cmova
or
fwait
mov
or
xchg
shll
aaa
int3
out
nop
jge
jns
lret
sbb
in
inc
addr16
out
xor
adc
jecxz
popa
lret
in
cltd
sub
sbb
and
xchg
dec
shll
push
push
pop
dec
or
out
fnstcw
sbb
mov
xor
movsl
lea
and
inc
xor
pusha
iret
lret
lret
sbb
add
pop
sbb
cmpsl
mov
cmc
lahf
or
rcl
sarb
lcall
jae
jmp
aam
push
sub
jmp
push
or
dec
add
scas
dec
bound
fdiv
aad
pushf
push
or
jne
arpl
fsubs
xchg
lods
inc
xchg
insb
jo
xor
subb
movsb
fwait
mov
push
shll
mov
js
inc
xor
push
mov
sub
std
pop
call
rorb
gs
xor
dec
mov
mov
jae
and
fisubrl
ror
xchg
repz
xchg
mov
sub
cli
das
cmova
neg
hlt
sub
daa
mov
es
ds
test
push
pop
loope
mov
shrl
jge
aaa
sbb
xor
les
fadd
imul
push
ret
fisubrl
imul
jnp
es
leave
outsl
and
mov
inc
data16
pushf
push
shll
addl
arpl
insl
jle
int
stos
lods
mov
sub
rcl
inc
xchg
xor
cmp
mov
je
shll
xor
mov
test
sub
fstps
out
cmp
cwtl
jnp
cmpl
cmpsb
adc
inc
mov
mov
jmp
imul
lahf
movsb
mov
lahf
incl
xor
jb
sub
mov
lret
mov
mov
aad
sbb
mov
cltd
loopne
sub
xlat
mov
lcall
jo
dec
loope
pop
loope
push
stc
sbb
push
sti
cmp
jle
ficompl
or
xchg
je
fnstenv
shll
popf
cmp
sub
lea
mov
mov
jecxz
mov
mov
cmpsl
cmp
push
icebp
loope
push
shlb
mov
insl
mov
jb
add
dec
outsl
sbbl
mov
mov
fdivrs
mov
pop
xchg
stos
pop
and
jne
idivl
pop
sbb
test
pop
pushf
push
mov
xor
ret
and
std
xchg
xchg
int3
jno
xchg
xchg
mov
or
and
sub
gs
dec
sbbb
test
hlt
pop
mov
ficoms
ret
fsubl
lcall
push
xor
sub
cmpl
ret
jno
push
add
popa
adc
mov
addr16
ret
xchg
hlt
dec
mov
repnz
std
jno
cmp
pop
pop
and
cwtl
sahf
mov
notl
repz
mov
jle
test
gs
cwtl
shlb
mov
sub
frstor
pop
push
sbb
push
inc
push
cmp
aam
fnstenv
dec
push
movsb
jmp
inc
jns
int
push
sub
gs
repnz
loope
ret
pop
xor
fucomp
mov
pop
arpl
rol
mov
xor
out
jecxz
pop
leave
out
mov
or
add
nop
das
mov
xchg
fcmove
cmpsl
into
in
shlb
sbb
outsl
dec
scas
pop
sbb
clc
pop
iret
dec
xor
les
into
in
sbb
fldcw
cmp
push
jne
sub
pop
adc
loop
jne
push
outsb
add
jo
pushf
and
pop
movnti
xchg
push
mov
inc
add
add
adc
pop
subl
inc
daa
call
mov
mov
pop
jl
out
mov
push
fwait
mov
xchg
and
in
add
scas
iret
xlat
iret
mov
fmull
notb
or
stos
ffree
fnstsw
lret
sub
inc
and
cmp
ret
test
pop
flds
pop
xor
shl
aam
fdivrl
scas
sub
loope
push
loope
scas
mov
adc
loopne
dec
cmp
filds
add
rcrb
inc
push
sbb
mov
jl
or
in
pop
pop
cwtl
xchg
dec
jne
in
paddd
out
cmp
cwtl
xor
cmp
adc
adc
mov
push
pushf
push
orl
sarl
fwait
imul
out
inc
cmp
ss
jns
int3
pop
and
mov
test
lret
outsl
std
add
ja
js
jmp
iret
or
lahf
xchg
shl
scas
fadd
stos
and
fs
mov
jge
cwtl
popf
mov
ds
in
and
and
addr16
sbb
jbe
scas
jb
sub
push
adc
in
mov
sub
push
popa
add
into
push
mov
sub
dec
rolb
pushf
sub
int
mov
cmp
sahf
cltd
lret
jns
pushl
or
shl
pop
pop
or
mov
mov
jo
cmc
aad
je
cld
cs
pop
jle
imul
aam
dec
pop
mov
adc
mov
or
mov
dec
mov
jno
fwait
adc
cmp
stos
bound
repnz
mov
mov
sub
jle
lea
int
inc
or
fs
push
ret
lahf
sbb
add
pop
popa
fwait
xchg
dec
xor
push
mov
pop
test
sti
xlat
loop
xor
fwait
inc
push
mov
push
add
call
shll
push
jbe
mov
pop
out
inc
fcomps
push
sti
adc
cmpsb
jmp
cld
push
dec
sbb
mov
sbb
inc
sub
ret
lods
mov
xor
pop
push
mov
into
ret
divb
fwait
jg
out
dec
mov
fs
scas
or
jb
addr16
cmp
mov
pop
aaa
pop
jno
movsb
insl
jne
gs
outsb
xchg
xorb
std
xor
je
outsb
mov
mov
xor
mov
or
loop
cmp
cli
add
inc
or
mov
es
dec
jmp
xor
leave
fdivl
shll
inc
in
adc
movsl
shlb
stos
mov
pop
icebp
mov
ret
roll
or
shl
mov
call
or
leave
addr16
inc
adc
test
cli
stos
pushl
adc
into
adcl
add
jo
fs
ret
adcb
jle
adc
jge
dec
mov
and
mov
aaa
scas
cmpsl
mov
lcall
ret
stos
bound
dec
sub
adc
jno
dec
popa
ret
inc
in
push
shlb
add
mov
mov
pop
add
add
xchg
or
hlt
fcomps
sub
stos
xchg
and
dec
push
jmp
xchg
and
push
jg
inc
ret
imul
insb
or
cli
je
sbb
sub
xchg
scas
ret
out
cs
push
inc
adc
jno
and
cmp
xchg
mov
xor
mov
mov
das
gs
xchg
mov
sbb
or
icebp
sbb
out
mov
xor
xchg
std
mov
inc
push
xchg
cmp
addr16
sub
add
movsl
and
mov
test
fisubrl
adc
repnz
in
push
sbb
je
cld
xchg
imul
and
mov
and
cli
mov
mov
stos
in
in
xor
pop
call
jge
jp
into
into
xor
icebp
xchg
sub
cmp
sbb
lahf
or
xlat
jnp
sub
js
cmp
xor
lea
mov
xchg
sub
dec
sar
mov
lahf
mov
pop
movsb
in
repnz
inc
mov
push
fwait
fs
inc
mov
pusha
clc
mov
mov
test
cs
fstpl
xor
xchg
pusha
fs
push
popl
jno
mov
fimuls
pop
mov
lret
in
cmpsl
mov
pop
cmp
inc
xchg
dec
mov
rcll
pushf
push
jl
icebp
je
and
sub
pop
jmp
daa
test
cmpxchg
arpl
movsl
inc
testb
add
push
jp
imul
sbb
mov
xchg
jno
sbb
cmp
aad
mov
popa
jne
or
and
out
pushf
cld
fistpll
test
jmp
jne
sbb
sbb
xchg
ret
filds
repnz
ss
mov
mov
test
dec
cmp
aas
mov
or
out
js
cwtl
push
pop
xchg
sbb
adc
shrb
push
movl
or
out
mov
or
std
fcoms
fcomi
and
sub
lock
enter
xor
pop
movb
push
push
orb
mov
and
mov
xlat
dec
xor
sub
mov
push
dec
lds
gs
push
add
aad
mov
xchg
and
xor
pop
dec
jns
dec
cmp
mov
mov
shll
fbstp
mov
pop
push
or
das
out
lock
in
ret
ficoml
cmp
sub
rcr
leave
icebp
dec
loope
clc
jle
in
jns
test
addr16
xor
cwtl
fldcw
jmp
xor
sub
cmc
xchg
xchg
dec
data16
add
add
cmpsb
lods
test
push
mov
in
lock
out
loope
inc
xchg
loope
out
push
bsf
scas
ja
mov
mov
nopl
cmpsb
pop
fsubp
leave
jl
push
inc
sbb
addb
mov
adc
icebp
daa
mov
lahf
rcl
movsb
push
sub
pop
icebp
mov
mov
xchg
push
pushf
aad
dec
mov
xchg
imul
xor
cltd
and
sub
jmp
dec
shlb
mov
cmp
adc
aaa
shlb
repz
or
ficoms
mov
xchg
ljmp
outsl
ja
xor
cmp
or
mov
inc
jb
sbb
cmovno
push
or
shll
repnz
pop
pop
inc
pop
sbb
xchg
imul
or
jb
call
mov
das
mov
mov
hlt
and
hlt
adc
mov
jae
stos
lahf
pusha
cmp
das
pop
arpl
orb
xor
add
sub
addr16
out
jb
jb
flds
lock
mov
ljmp
add
mov
pop
pop
cmc
in
insl
dec
pusha
lods
jns
push
imul
shlb
adc
lock
inc
inc
ja
lock
pop
popf
push
dec
rorl
mov
mov
or
inc
jbe
int
shrl
sarb
in
repnz
dec
jne
pop
clc
and
and
sbb
call
adc
addr16
mov
add
add
sub
push
fldcw
into
sub
icebp
int3
fwait
or
pop
iret
inc
push
ljmp
and
and
xor
push
sub
jmp
mov
clc
dec
pop
scas
sbb
leave
xor
lea
push
xchg
jo
int3
movsl
cmp
or
andb
ud0
inc
arpl
add
mov
orl
push
sti
and
adc
cmpsb
cmp
jne
dec
fcmovnu
push
imul
fsubr
xchg
adc
cwtl
pop
fldt
sub
jge
mov
les
lret
xchg
ljmp
xchg
mov
xor
scas
subl
xor
inc
outsl
rol
add
cmpsl
sti
xlat
sub
pop
sbb
pop
shrl
push
mov
shr
push
in
ljmp
jb
call
scas
int3
out
or
xor
mov
stc
cs
sarb
cmc
xchg
push
push
push
mov
cmp
jno
fsubr
ja
iret
hlt
cwtl
loope
cwtl
mov
xor
cmp
mov
or
aam
iret
movsl
dec
inc
dec
pop
or
cs
pop
jmp
or
mov
mov
pop
dec
mov
inc
push
pop
imul
add
aam
aad
clc
mov
loop
cld
mov
or
cmpsb
pusha
add
sub
arpl
xchg
cmp
pop
push
adc
sub
js
insl
dec
das
in
cmp
xor
sub
cmp
aad
pop
fildl
arpl
dec
in
pop
xchg
xorl
inc
jae
ljmp
sub
jg
scas
mov
xchg
mov
xlat
jno
call
jo
pop
jbe
sub
les
sbb
in
mov
mov
loope
fdivl
xchg
sbb
mov
lds
xchg
mov
push
sub
mov
ret
jmp
out
pop
xor
test
mov
pushf
inc
or
ret
bsr
ds
lcall
dec
mov
cmp
mov
jle
and
dec
push
or
and
mov
sbb
inc
lahf
add
int
pop
push
adc
adc
mov
movsw
sti
lea
mov
mov
xor
mov
mov
pusha
out
sub
add
push
lods
cltd
cmp
sbbl
pop
xchg
imul
lods
push
mov
mov
or
cmpsb
sub
adc
mov
sbb
dec
push
cltd
pop
imul
mov
aam
outsb
mov
pop
lock
cwtl
insl
jle
out
pop
sbb
xor
jne
add
sbb
xchg
sti
mov
or
pop
mov
sbb
sti
push
jo
mov
in
pop
cmp
gs
std
sbb
sbb
out
xor
lds
mov
mov
jo
das
dec
popa
sub
pop
jae
sti
into
xor
clc
push
cmp
icebp
mov
cmp
cltd
into
bnd
mov
jne
adc
and
lret
and
repnz
push
bnd
sbb
lods
or
lahf
or
and
adc
mov
lcall
mov
js
inc
nop
push
and
xchg
inc
mov
gs
xlat
or
xor
data16
test
insl
adc
xor
push
dec
xor
add
ret
dec
push
insb
jle
mov
shll
icebp
jle
push
adc
pop
add
sub
xchg
push
shrb
sarl
jno
dec
mov
add
sbbl
insl
cmp
hlt
cs
and
cmp
lock
or
movsb
mov
xchg
cwtl
cmpsl
xor
test
outsl
push
movsb
cmc
iret
pushl
test
or
mov
add
mov
push
cmp
jl
mov
push
or
pushf
sbb
cltd
sub
push
fstp
ds
jmp
fidivrs
mov
cwtl
ja
mov
inc
add
lret
cmp
sbb
insb
cmp
pop
lock
pop
push
pop
jne
pop
pop
in
outsb
xchg
fmull
fcoml
adc
adc
and
out
test
leave
mov
xor
scas
aaa
iret
cmovp
inc
and
sub
mov
or
and
inc
xchg
xchg
cltd
aam
sub
jp
scas
add
inc
dec
nop
and
push
test
dec
xchg
mov
sbb
sub
jge
mov
icebp
mov
pop
mov
iret
sbb
push
fstp
inc
movsb
sub
lret
mov
add
or
sub
pop
out
lcall
jmp
mov
scas
fcmovu
add
inc
xchg
cmp
lret
or
mov
out
ja
rcrb
pop
scas
cltd
mov
adc
ljmp
and
dec
sub
shll
cmp
repz
cmp
mov
dec
mov
push
stc
movsl
inc
test
jbe
sub
xor
sub
xor
mov
pop
fs
stc
mov
pop
jbe
mov
sbbl
test
lods
and
popf
fstl
ret
sub
loopne
pusha
hlt
cwtl
rcl
and
inc
sbb
mov
push
xor
inc
sarl
xchg
fstp
add
cmc
mov
stc
pop
int3
pop
out
outsl
aaa
lahf
insl
out
lret
adc
push
stos
iret
scas
sub
sbb
or
pop
test
hlt
sbb
push
xchg
sub
sarb
cli
fistps
pop
jmp
xchg
sbb
adc
mov
push
ljmp
xor
ja
xchg
imul
dec
jle
inc
or
sbb
pop
inc
sbb
das
or
add
imul
cmp
mov
fs
ss
fbstp
mov
push
dec
in
dec
dec
xchg
dec
push
add
leave
fcmovnu
stos
lds
test
lahf
pop
lret
sbb
mov
pop
ficoms
in
or
sbb
out
in
jp
movsb
mov
dec
jmp
cwtl
add
test
dec
sub
pop
jne
xchg
xchg
inc
lock
mov
std
dec
push
lret
stos
and
xor
pop
xchg
mov
xor
iret
dec
jle
inc
jo
push
mov
lcall
mov
cmpsl
aaa
stc
mov
icebp
fdivrs
push
out
dec
cmp
fists
aas
fcmovu
jno
lock
scas
xchg
out
xor
xchg
loopne
adc
fs
mov
in
aad
aas
mov
inc
or
push
dec
or
out
inc
add
mull
jp
mov
xor
fwait
movsb
push
int
filds
mov
cmp
inc
lods
mov
in
push
stos
fmulp
push
pop
sub
popa
ret
add
sub
imull
jg
in
mov
mov
jmp
adc
xor
mov
out
mov
inc
push
sub
outsb
lds
and
xchg
roll
outsl
scas
cltd
or
mov
sbb
lods
lock
std
xchg
xor
sub
scas
jg
cs
mov
shrb
loope
sbb
sbb
jp
mov
jle
jbe
mov
xor
cli
ret
icebp
clc
ljmp
popa
cmc
push
cwtl
or
mov
leave
jg
jns
sub
dec
mov
sub
rcrb
jmp
xchg
insb
addr16
xor
and
xchg
cwtl
aaa
addr16
jne
xchg
lock
add
dec
inc
jmp
adc
inc
aas
repz
aad
pop
frstor
fisubrs
shrb
mov
sbb
repnz
mov
leave
out
push
mov
lods
adc
xor
dec
mov
data16
arpl
loop
das
lahf
ret
mov
mov
xor
adc
test
mov
cmp
add
cltd
pop
inc
clc
adcb
dec
xor
daa
addr16
xor
mov
jp
out
cld
xlat
and
lock
test
mov
push
fisttpll
adc
jo
pop
xchg
add
push
call
and
js
lea
arpl
das
pop
xchg
movsl
lods
sub
es
in
test
cmpsb
imul
inc
pushf
repnz
or
int
push
cmp
push
icebp
dec
lea
dec
nop
mov
ljmp
pushf
mov
outsl
cmpsl
mov
fsubl
ja
daa
mov
leave
push
cwtl
dec
mov
int
es
iret
ds
xchg
pop
sub
lcall
add
cld
loopne
or
mov
mov
xchg
inc
lahf
xor
inc
mov
xor
cmp
iret
cltd
pop
insb
dec
push
leave
mov
push
add
addr16
sbb
repnz
xchg
xchg
adc
cltd
or
addr16
adc
mov
inc
jge
jno
or
mov
mov
sbb
pop
fs
adc
je
fwait
bound
ljmp
testl
in
mov
stos
mov
rorb
dec
mov
push
jmp
ds
test
pop
push
lret
lahf
test
fsts
push
fucomp
cmc
int3
and
or
leave
fidivs
pop
cmpsb
pop
sarb
dec
xchg
push
in
cld
push
mov
inc
xchg
add
pop
pop
movsl
lcall
dec
mov
mov
sbb
lds
lock
ljmp
jl
push
test
mov
sub
lea
repnz
mov
or
mov
dec
mov
je
push
je
sub
lret
mov
or
cltd
sub
addr16
jae
cs
in
lret
lea
repnz
cli
adc
nop
add
mov
xchg
and
dec
jnp
das
xchg
std
fsubr
popa
or
dec
sbb
fisubrl
fwait
sbb
stos
add
int3
cltd
cmp
sbb
dec
icebp
out
gs
call
xor
and
stc
fbstp
jno
pop
data16
lahf
push
push
mov
aad
mov
adc
inc
mov
int
negl
lods
push
dec
divl
arpl
cmpsb
mov
jmp
lret
pop
push
arpl
inc
call
push
cmpsl
xchg
addb
clc
sbb
jmp
mov
adc
rcrl
test
pop
sbb
mov
mov
sbb
jecxz
or
insl
xlat
push
and
bound
je
jnp
adc
xor
aaa
sahf
ljmp
out
sbb
popf
jae
pop
push
insb
inc
sar
movsl
xchg
ret
jle
ret
mov
iret
mov
cs
in
mov
std
jecxz
in
sbb
mov
sti
mov
pop
dec
xchg
stc
fs
mov
xchg
cmpsl
ret
inc
dec
mov
icebp
push
shrl
js
pusha
je
cmpsl
adc
sbb
push
pop
jg
pop
sbb
lds
loop
xor
push
pop
je
orb
cmp
cmp
test
dec
add
lret
cmp
jge
mov
je
ljmp
int
lock
test
pop
xchg
push
icebp
idivl
in
stos
ss
popa
stc
cld
pop
dec
imul
mov
fstl
push
outsl
addb
aam
sbb
cmp
subl
add
mov
adc
popa
data16
push
ja
les
push
sahf
in
cs
test
lods
xorb
adc
mov
mov
xlat
dec
xor
stos
popa
xor
js
mov
daa
or
push
mov
shll
out
mov
cs
push
jge
inc
dec
test
int3
mov
sbb
lock
inc
add
jp
call
dec
stos
ret
movsl
mov
sbb
xchg
add
push
mov
lahf
mov
mov
jbe
sahf
mov
into
rorb
push
mov
jp
pop
shlb
insl
mov
sub
mov
and
and
jae
test
inc
cld
mov
pop
insb
dec
inc
es
mov
lea
xor
jb
fildl
push
arpl
dec
cltd
push
ss
mov
sub
lock
aam
dec
inc
mov
inc
mov
incl
fcmovb
dec
cmp
sbbl
push
imul
dec
cmp
sub
mov
ss
cmp
mov
hlt
adc
leave
xchg
mov
or
push
ljmp
adc
pop
mov
pop
and
xor
or
or
movsl
sub
call
push
xchg
jg
adc
cltd
cmc
mov
ret
jmp
out
ljmp
lods
shlb
dec
xor
lret
pushf
xchg
inc
xchg
sub
popf
ret
sub
lds
and
inc
jge
rcll
cmp
arpl
scas
and
andl
mov
add
push
fstps
xchg
xchg
add
pop
pop
adc
pop
aaa
or
push
sbb
mov
mov
bnd
std
add
push
les
adc
shl
push
int3
jo
and
ret
xchg
xchg
stc
std
cli
mov
pop
mov
xor
and
aad
sbb
lret
jnp
mov
fs
insb
push
sub
sub
divl
and
ret
iret
lret
mov
xchg
push
sbbl
and
imul
bound
jno
mov
scas
mov
imul
popa
inc
pop
hlt
aas
ret
loopne
jge
jg
xlat
adc
xor
mov
das
fdiv
pop
adc
mov
mov
stos
lcall
sbb
jmp
aas
scas
aaa
adc
pop
imul
jnp
shl
jmp
cmp
mov
and
out
aaa
je
sub
and
out
push
xlat
sbb
xchg
xchg
push
sub
ja
ret
mov
inc
out
filds
jle
xor
inc
mov
les
xor
mov
in
xchg
push
adc
jno
sbb
adc
xchg
dec
mov
push
cmp
mov
hlt
adc
mov
fstpt
and
je
add
sbb
sub
mov
out
mov
mov
clc
or
and
int3
jle
insl
jnp
ret
mov
in
sub
jns
psubq
pop
sbb
imulb
pop
stos
xor
jae
stos
je
cmp
mov
lock
xchg
mov
in
out
ja
push
mov
jmp
dec
mov
popf
outsb
pushl
mov
mov
mov
pop
mov
xor
mov
stc
mov
inc
adc
push
pop
add
ja
nop
stos
mov
cmpl
addr16
jae
ljmp
sbb
sti
lods
adcb
push
sahf
mov
data16
cmp
ret
shlb
mov
cmp
jbe
jnp
add
test
inc
pop
pop
mov
adc
jns
pop
popf
mov
and
test
mov
xchg
lahf
imul
std
push
mov
fldl
clc
fwait
or
iret
mov
mov
jbe
inc
sbb
sti
call
dec
or
sahf
fs
inc
sbb
cmp
xchg
dec
push
movsb
notl
mov
test
nop
shll
test
sbb
mov
pop
inc
mov
and
xor
jns
movsl
ret
popl
mov
aad
cmp
add
pop
aas
xor
fimuls
stos
mov
int3
lahf
test
inc
add
jmp
push
dec
pusha
dec
test
ds
push
push
pop
faddl
inc
mov
mov
das
adc
push
sahf
ja
leave
enter
incl
add
cmpsb
mov
xor
xchg
loop
adc
sbb
fisubs
mov
push
jle
in
push
mov
out
cmp
lcall
aam
pop
movsb
je
pop
je
ds
in
data16
push
dec
ja
in
mov
jb
push
xor
push
mov
rclb
mov
hlt
cmc
movsb
lock
sub
rcrl
push
and
bound
xor
repz
push
cmp
std
push
jg
cld
jp
sbb
or
sub
cmp
cmpsb
xchg
mov
or
cld
lahf
rorb
mov
clc
out
adc
shlb
pop
xchg
sbb
into
xchg
push
test
lea
rcll
mov
mov
or
pop
outsb
mov
decb
cld
cmpsl
popf
add
mov
lock
fists
jnp
repz
push
movsb
pop
lahf
dec
bound
call
jmp
jns
out
lret
out
add
shlb
lock
add
mov
xchg
scas
or
dec
sub
push
clc
pop
ljmp
inc
pop
mov
cld
cld
fnstcw
push
mov
fstps
xor
testl
inc
repnz
cltd
push
hlt
pop
pop
cltd
mov
jb
nop
xchg
scas
into
push
pop
arpl
pop
push
cmp
movsb
adcl
xor
test
insl
or
push
enter
cmc
dec
push
clc
and
popf
sub
out
es
xor
mov
test
mov
pop
outsl
sub
dec
pop
stos
repz
adc
sub
jo
in
mov
lea
cltd
inc
sbbl
rcll
arpl
fistl
and
divl
xor
add
pop
pop
push
mov
sub
or
ffreep
shrb
jecxz
stc
or
mov
lea
add
addl
inc
cmpsb
test
mov
jbe
test
pop
aam
iret
cwtl
ljmp
and
mov
sbb
cs
fadd
inc
or
loopne
movsl
or
nop
rcll
mov
out
push
or
xor
test
ja
sbb
jb
pop
jmp
push
mov
dec
sbb
xchg
xor
fdivrl
push
mov
les
mov
in
insl
mov
popa
insl
mov
or
add
inc
xchg
stos
adc
jle
pop
fs
lahf
pop
jnp
lods
inc
shrb
jg
pusha
adc
mov
add
bswap
lods
xchg
add
mov
add
pusha
leave
stc
mov
cs
repnz
aaa
pop
push
pop
xchg
pop
scas
dec
mov
lahf
and
mov
jp
popa
jo
xchg
enter
lods
mov
stos
pop
mov
cmp
sbb
pop
jae
fsubl
push
cmp
in
push
inc
ret
arpl
test
inc
push
xor
out
jb
out
adc
pop
int3
mov
jne
iret
sbb
ljmp
adc
add
pop
and
dec
dec
fprem
jno
jl
cmp
stos
fbld
ret
dec
or
lds
daa
movhps
inc
mov
fistl
out
lret
sbb
stos
sbb
std
sbb
fmul
and
out
out
and
cli
in
movsb
shrb
mov
and
outsl
outsl
in
add
mov
cmpl
push
lods
decl
mov
push
js
leave
leave
addb
mull
cwtl
add
in
xor
and
orl
jp
add
movsb
outsb
stc
mov
out
ficomps
out
push
call
jne
test
int3
cmp
mov
push
mov
add
fwait
adc
add
in
mov
aas
or
lods
lock
sub
mov
movsl
xor
mov
xchg
and
dec
and
mov
fs
push
jb
mov
xor
clc
pop
and
inc
xchg
fsubs
out
ds
inc
test
sarw
jmp
cmc
adc
cmp
mov
xchg
andb
cmpsb
call
xchg
and
shlb
push
pop
jne
xor
clc
and
pop
cmpsb
sbb
xchg
andb
repnz
icebp
sub
adc
jp
mov
aaa
imul
sub
mov
negb
lea
rcrl
mov
xor
sub
insb
or
shll
outsl
inc
daa
mov
fldt
flds
pop
fidivrs
jbe
pop
sub
xchg
and
mov
mull
push
out
sahf
jo
ret
mov
cmp
xchg
cmp
imulb
call
clc
mov
mov
lea
add
and
add
iret
insb
insb
je
xchg
push
jecxz
ficompl
fbstp
fwait
fs
inc
push
popa
sar
jb
in
sbb
cmp
or
int3
push
mov
sbb
imul
rolb
cmp
or
jg
xchg
cmp
test
inc
push
push
daa
das
sub
inc
pop
je,pn
adc
mov
loopne
pushf
rclb
jnp
pop
xchg
dec
push
xchg
cltd
movsb
je
mov
ror
or
cwtl
test
mov
pusha
dec
sbb
lods
iret
test
movsl
cmp
test
popa
xor
fucomip
inc
js
mov
lcall
xor
pop
lcall
sbb
add
or
nop
mov
in
push
fimull
pop
pusha
mov
push
adc
loopne
xor
lahf
data16
stos
mov
repnz
sub
insb
sbb
add
cmp
bound
out
mov
push
popa
sarb
leave
or
jmp
jo
jle
mov
enter
cmp
sbb
rclb
orb
jno
xchg
out
push
or
fisttps
jbe
inc
pusha
push
xchg
cmp
add
scas
jp
inc
cmpsb
mov
orl
dec
data16
call
push
mov
cmp
pushf
or
les
addb
cmpsb
sbb
cmp
cwtl
pop
pushf
mov
xor
adc
out
pop
push
mov
iret
das
shrl
pop
adc
jmp
shl
mov
sub
jbe,pt
xor
incl
jmp
sbb
cmp
in
xor
push
sub
cmp
sbb
cmpsb
and
fdivrp
adc
int3
jmp
mov
and
insb
cmpsl
adc
pop
das
movsl
inc
repnz
jp
sti
push
je
ds
inc
shlb
sub
rorl
stos
insb
mov
sub
into
fs
int3
cs
push
test
mov
or
mov
pop
mov
out
or
das
pop
int
pop
inc
in
test
shlb
mov
sbb
lods
cmpsl
sub
sub
nop
sti
cld
lret
push
cmp
sahf
ret
in
pushf
adc
dec
scas
loop
mov
or
fimull
sub
adc
mov
push
dec
dec
cs
loope
ja
lds
nop
js
jae
lea
push
cmpsl
add
jb
xor
sbb
rclb
jne
mov
or
sbb
shl
insl
xchg
push
lods
nop
inc
test
mov
sub
fistpl
cmp
js
mov
push
mov
sbb
les
and
jl
mov
dec
divb
pop
imul
mov
bound
jb
icebp
pop
fs
test
adc
fldl
fmull
push
adc
cli
lret
iret
sbb
jl
xor
lock
and
les
cmp
cmp
dec
jae
xchg
out
lahf
xchg
movsl
js
or
das
inc
cmp
rorb
int
test
test
pop
push
cmpb
push
mov
mov
loopne
jno
cs
mov
rorb
push
insb
out
mov
test
cld
test
cmpsl
frstor
es
add
insl
jp
pop
push
fldcw
imul
movsb
add
ret
mov
insb
sub
lcall
daa
mov
push
mov
add
mov
jg
imul
jne
call
ljmp
repz
or
jbe
pop
add
jno
repnz
fimuls
add
jg
hlt
sbb
jp
mov
mov
movsb
fsubl
jge
sbb
add
mov
cmp
mov
repnz
popf
pop
arpl
mov
mov
inc
nop
cmp
xor
push
and
mov
enter
mov
jecxz
mov
call
lods
sub
cmp
mov
mov
leave
inc
push
call
mov
mov
out
push
mov
adcl
xor
xchg
test
cmpsb
pusha
rcrl
repz
mov
pushf
mov
out
shll
fdivr
mov
imul
jno
adc
dec
into
mov
popa
subb
mov
xchg
and
cmpsb
mov
push
scas
ret
vpaddd
aas
hlt
enter
lret
popf
lods
cmc
xor
cltd
fiaddl
jmp
dec
imul
pop
xor
xchg
test
push
jb
pop
lea
add
xchg
cwtl
repz
js
ss
push
loope
inc
xchg
mov
mov
popa
mov
sahf
insl
adc
iret
sub
push
int
clc
or
lahf
or
dec
lock
jmp
jp
movsb
inc
icebp
mov
cmp
loope
push
outsb
push
xor
mov
arpl
push
cltd
xor
pop
inc
mov
orl
mov
in
shlb
cs
clc
sub
outsb
xor
aad
out
iret
std
in
jae
movsb
and
aam
cmp
enter
push
mov
and
es
cmc
popf
jno
pop
hlt
shrb
out
sbb
ret
pushf
inc
ret
xlat
sti
or
jp
xchg
cmc
in
adc
and
adc
mov
into
pushf
jns
xchg
in
push
and
mov
subl
push
add
mov
lret
cmpsl
sub
cmpl
lods
or
pop
sub
lods
jno
jb
mov
cmp
lret
push
and
push
ret
push
cmpsb
mov
and
adc
popf
in
test
cmp
test
push
adc
adc
call
aad
lock
sub
stos
or
add
jbe
inc
iret
sahf
sar
bound
aad
enter
gs
hlt
add
pop
loopne
sub
xlat
xchg
push
cltd
mov
stos
in
jne
call
test
sub
cs
aaa
mov
fdivrl
jnp
mov
mov
cmp
in
int3
mov
pop
lahf
xchg
sub
pop
lods
sub
lcall
fmulp
dec
shrl
and
xchg
insl
fmull
in
cmpsb
aam
xor
inc
pop
cltd
out
shrb
sub
outsb
aad
cmp
sub
fxch
cmp
xor
mov
adc
ja
mov
cwtl
lcall
aam
aam
jns
das
jbe
jne
xchg
in
jbe
mov
repz
mov
pop
mov
jnp
je
pop
repz
cli
jp
jp
lods
cmp
stos
pop
mov
cmp
and
lahf
sbb
mov
cltd
xor
push
mov
pop
xchg
push
and
test
push
decl
imul
addr16
aad
pop
or
negl
push
push
add
push
sahf
mov
sub
lock
lock
scas
into
mov
shlb
mov
iret
ja
pop
and
incb
and
lock
mov
ret
arpl
mov
pop
push
loope
shlb
mov
sbb
popa
cs
fwait
sbb
in
pop
adc
mov
xchg
jmp
fsubrs
enter
jne
lahf
add
adc
dec
cwtl
xchg
stos
cli
lds
jae
scas
scas
jbe
or
mov
and
movsl
cmp
fwait
or
ror
add
sub
push
xchg
mov
pop
scas
jae
outsl
inc
negb
test
mov
fldt
fisubrs
sub
inc
add
xchg
ss
lea
mov
subb
cmpsl
mov
and
mov
movsl
mov
in
stc
outsl
out
lahf
ss
gs
pop
adc
cltd
pushf
notl
or
arpl
and
and
adc
lds
movsb
mov
push
sub
xchg
stos
out
loope
sub
cmc
aaa
dec
xchg
imul
mov
jg
out
in
shrb
lods
lds
cs
mov
bound
roll
cmp
inc
in
out
or
sbb
sar
in
adc
shlb
xchg
or
push
and
sbb
repz
cmp
js
gs
dec
pushf
pop
cmpsl
mov
dec
inc
adc
dec
das
cmp
bnd
mov
insb
mov
dec
lret
dec
popf
jo
cmp
jbe
je
pop
cmp
adc
into
push
test
enter
jmp
imul
cmp
push
mov
mov
pop
loopne
cmp
and
in
fstps
cmp
jmp
mov
xor
loope
imul
push
inc
pop
cli
xchg
imul
add
or
repz
xor
xchg
dec
stc
jle
sub
fistpll
xchg
cli
dec
push
mov
ds
add
shrl
push
popf
inc
dec
ss
jb,pt
pop
sbb
repz
and
mov
ja
jae
movsb
push
or
enter
dec
xchg
mov
mov
lret
hlt
adc
int
xor
aas
sub
ljmp
sahf
sbb
push
in
hlt
das
dec
fdivl
outsb
xor
xor
pop
mov
or
pop
mov
jecxz
dec
pop
mov
jmp
pop
inc
pop
imul
pop
xor
bound
xlat
arpl
jno
mov
cltd
out
add
push
fld1
mov
shlb
in
push
add
pop
pop
mov
add
repnz
xchg
cmpsb
dec
mov
sub
xchg
mov
jns
push
mov
mov
mov
int
or
imul
mov
and
and
jmp
xchg
cli
jbe
jno
push
test
mov
mov
scas
out
and
stc
mov
arpl
pop
in
loop
or
mov
and
jp
mov
addr16
and
sub
orl
inc
cmp
shl
ret
push
fmuls
rolb
int3
jnp
int
sub
lret
jbe
jmp
xor
loopne
bswap
or
bound
in
and
push
jmp
fcoms
ds
into
dec
fsubrp
cmp
int
inc
outsb
divl
roll
dec
in
testb
sub
jne
es
fldl
fucomp
mov
push
fdivl
int3
mov
push
ljmp
mov
sarb
xor
xor
or
dec
adc
pop
stc
and
into
push
xchg
xchg
and
add
callw
insb
insl
mov
std
adc
jp
mov
out
in
lds
aas
push
dec
jmp
xchg
int
sub
imul
fldl
out
popa
xor
ficomps
lahf
or
inc
arpl
ret
or
int3
ja
cli
std
in
pop
dec
or
sbb
outsb
push
inc
popa
mov
andl
xor
aas
jg
xchg
shlb
xchg
fmuls
insl
std
loope
dec
shrl
pusha
pop
pop
nop
mov
aad
repnz
iret
pop
sahf
mov
insl
jb
cmp
das
cmc
mov
lds
fnstcw
int
xor
das
cmp
enter
movsl
aam
push
dec
jg
insb
xadd
cmpsb
mov
pop
xchg
lock
pushf
sub
pop
in
int
loope
inc
js
sub
pop
clc
cmp
pop
sbb
or
inc
mov
notb
jmp
xor
jno
js
fidivl
pop
xor
imul
or
insl
in
daa
add
jecxz
popf
cmp
out
fwait
imul
add
mov
cld
in
ja
push
repnz
sub
xchg
pop
orb
pop
adc
in
ljmp
mov
loop
andl
sbb
sbb
mov
pop
inc
cli
xor
sub
xchg
adc
xor
jg
sbb
fbld
popf
cmp
fst
push
aad
jnp
imul
ror
rcl
dec
or
int3
mov
xor
adc
push
mov
cmp
jbe
push
cmp
lods
stos
test
adc
pop
rcll
inc
fidivrs
xor
aas
mov
es
out
cmp
or
inc
out
in
jp
subb
dec
imul
push
fimuls
pop
cs
in
lods
aaa
cs
and
mov
stc
jle
sbb
inc
ficomps
xchg
cltd
jl
jns
idivl
sub
ljmp
pop
and
mov
or
xlat
mov
jae
and
mov
or
or
or
jnp
sbb
push
repz
push
jecxz
adc
stc
push
xchg
repz
dec
test
push
testb
shrl
mov
call
or
jl
mov
out
add
sub
xlat
out
jae
sbb
sti
xchg
mov
loop
rclb
and
sbb
lds
pushf
daa
xchg
aam
sti
popf
xchg
lretw
aad
fistl
fisubl
ret
imul
jge
adc
lret
lds
mov
ret
jmp
fcmovne
jb
ljmp
fwait
cmpb
dec
ja
aad
xchg
sarb
xchg
inc
das
and
js
sub
pushf
fistpl
inc
cltd
jnp
or
jae
iret
scas
jle
stos
popa
cmp
cli
jns
int3
popa
cmp
xor
and
mov
loope
andl
lret
push
sbb
fs
aas
inc
sahf
pop
or
ret
fildl
sub
mov
test
dec
popl
jmp
cmp
ss
xor
push
pushf
sbb
push
fwait
cmp
push
std
lods
lret
or
cld
xorb
inc
adc
push
in
add
rcrb
aaa
lock
mov
xchg
jb
insl
fsubrl
outsl
lods
data16
add
cmp
test
jnp
cmp
aas
shrb
sub
ficompl
stc
sub
pushl
repz
pop
dec
es
push
clc
mov
jge
outsl
push
out
clc
cltd
sub
test
pop
add
pop
dec
mov
cwtl
je,pn
mov
inc
or
pop
pop
in
dec
jns
cmc
ljmp
icebp
out
jg
lods
lods
inc
rcrl
add
bound
and
xlat
stos
cmp
ror
mov
ljmp
xor
cmpsl
fidivrl
clc
je
mov
nop
and
inc
jno
jns
insb
mov
in
add
sbb
aaa
inc
jp
and
fs
jns
aam
mov
xchg
or
scas
add
push
dec
ja
xchg
lahf
xor
imul
cltd
in
mov
clc
mov
push
push
stc
pop
mov
push
cmc
xor
test
adc
popa
popa
cmp
inc
aaa
dec
jne
mov
cs
mov
inc
rcll
and
cltd
int3
pop
xchg
or
pop
mov
and
js
adc
aaa
mov
lahf
pop
and
jle
sbb
adc
jg
loop
mov
outsl
subl
imul
mov
iret
insl
pop
out
popf
inc
sahf
repz
cwtl
lahf
inc
das
lahf
jp
mov
aaa
adc
hlt
xchg
popa
cmp
sbb
jo
in
mov
scas
cmpsl
push
adc
jbe
and
cmpsb
mov
jnp
fisubl
mov
push
pop
mov
rcll
lock
lcall
rcrb
pop
push
sbb
xchg
ficoml
imul
mov
les
pushf
hlt
cmp
iret
cmpsl
je
das
pop
ljmp
adc
pop
iret
imul
scas
jp
les
mov
dec
xor
adc
stos
dec
fidivrl
and
push
enter
adc
mov
out
jg
add
pop
fistpll
inc
fs
in
push
dec
push
add
inc
divb
jb
or
and
mov
jb
js
xor
in
sbb
mov
jg
mov
mov
scas
loope
push
hlt
hlt
push
sarl
lods
jecxz
daa
push
lcall
xchg
xor
in
xor
mov
scas
push
lds
popf
sbb
out
movl
aad
cmp
outsb
push
mov
in
cwtl
add
jbe
test
add
sub
and
test
ljmp
faddl
iret
push
mov
jl
clc
and
mov
sbb
or
ss
and
enter
stc
outsl
std
les
addb
mov
lds
push
in
sbb
xchg
daa
xorb
movsb
jns
imul
mov
push
xchg
repnz
hlt
shlb
gs
dec
pop
ljmp
mov
push
mov
xorb
mov
cmp
pushf
and
popf
mov
jno
adc
pop
shr
pop
out
fdivrs
jle
mov
jecxz
outsl
in
pop
jl
sbb
fidivrl
scas
sbb
movsb
fwait
mov
pop
pop
xchg
das
aaa
xor
cmp
iret
pcmpeqw
lods
jmp
dec
test
sbb
fsubl
out
into
clc
subps
jne
cmp
or
xchg
mov
bound
iret
ror
mov
sub
data16
jge
jno
fsubs
sub
pop
pop
and
lret
call
pop
mov
or
mov
movsb
xlat
sbb
iret
ds
jb
js
fisubrs
mov
cmc
mov
dec
dec
daa
jge
sub
xor
hlt
gs
popa
cltd
inc
mov
add
adc
cltd
cli
scas
aam
xchg
mov
inc
mov
mov
popa
mov
push
sub
repz
call
xor
mov
sub
fistl
jae
imul
movl
lret
mov
scas
scas
xor
mov
jmp
xchg
adc
lock
jbe
sbb
or
pop
mov
dec
cmpsl
mov
out
loop
mov
test
sahf
add
jmp
add
lret
ret
fcomip
and
add
xchg
cwtl
sub
jecxz
ds
loope
push
sbb
int3
inc
dec
push
outsb
pop
or
fs
lret
and
xchg
les
xor
fiadds
cltd
jae
inc
xchg
xchg
jbe
sbb
fabs
mov
flds
std
stc
xchg
xchg
mov
cld
and
stc
call
cmp
aam
loopne
int3
xor
push
xchg
movsb
mov
in
mov
jne
add
sbb
repnz
adcl
decb
test
mul
adc
inc
dec
pop
iret
int3
pop
mov
out
scas
xor
cmp
subb
push
icebp
in
pushf
mulb
scas
push
inc
fwait
hlt
sub
dec
cmpsl
mov
pop
ret
and
ror
fwait
sarb
adc
dec
test
adc
xchg
insb
daa
push
adc
test
iret
adc
mov
xor
inc
fmuls
push
inc
jno
fisttpll
shl
arpl
aad
mov
xor
int
sahf
adc
fsubrl
repz
test
push
inc
loopne
jle
int
notb
std
insb
sti
repz
or
iret
movsl
gs
mov
adc
cmpsb
adc
rol
aam
inc
out
inc
xchg
sbb
inc
daa
sbb
fsubr
inc
mov
cmp
adc
mov
cmpsl
loope
xlat
sbb
js
mov
outsb
jg
mov
hlt
cmp
cld
hlt
cmpb
xchg
pop
jno
lcall
movsl
pop
lods
cmc
inc
pop
ja
adc
cmp
sub
std
ds
test
push
mov
and
sbb
insl
pop
xor
push
push
jo
pushf
lock
and
clc
mov
pop
outsl
loopne
push
in
jnp
les
mov
inc
shrb
out
dec
inc
test
or
mov
gs
dec
push
lods
sbb
xchg
inc
adc
in
call
cmp
stos
pop
dec
or
mov
mov
pop
pop
mov
push
idivl
imul
xchg
sarl
or
pop
inc
mov
les
movsl
xor
out
fdivrl
addr16
cmp
cmp
xlat
adc
fwait
int3
and
dec
int3
sbb
pushf
mov
int3
cmp
sbb
inc
mov
imul
imul
jnp
dec
push
lea
or
jg
jp
data16
or
out
fsubr
out
mov
sbb
nop
jae
hlt
mul
push
scas
mov
insl
pop
mov
jne
lea
bound
mov
jnp
push
shlb
mov
das
cmp
push
and
mov
rol
mov
aaa
and
and
inc
mov
stos
sub
daa
and
mov
or
dec
addb
sti
insb
imul
sahf
shll
push
scas
mov
sbb
outsl
cltd
cld
lret
inc
mov
xor
hlt
leave
hlt
outsl
jbe
jge
inc
cs
sti
mov
mov
xchg
or
das
sbb
sub
push
adc
shrb
iret
int3
xchg
adc
aas
data16
adc
fst
lahf
cmpsb
inc
mov
jg
dec
in
push
aad
and
sub
pop
jae
mov
lods
pushf
aam
mov
pushf
loop
scas
mov
daa
xchg
gs
das
into
aad
out
cli
jo
push
dec
jbe
sbb
mov
loop
test
push
inc
jp
or
sbb
loope
stos
shl
inc
js
lcall
xor
jmp
shrb
pop
icebp
xlat
pop
shrb
in
pop
test
xchg
and
push
dec
sti
or
mov
dec
loopne
cmp
push
push
xor
lods
sti
mov
xchg
xor
and
movsl
jne
sbb
stos
gs
push
dec
insb
mov
push
lea
pop
cmp
push
jmp
mov
test
adc
mov
cmc
xlat
pop
push
pop
inc
jl
lock
mov
push
sbb
daa
fisubl
insl
jp
fs
cs
xchg
add
or
ss
jnp
xchg
in
push
es
jmp
sbb
mov
movsb
pushf
jle
movsl
push
cmp
xchg
sub
inc
fs
adc
mov
inc
cmpb
mov
rolb
sar
clc
fdivs
jns
cli
cmp
xor
enter
mov
pop
js
sub
mov
in
jg
jmp
xor
inc
or
jns
dec
mov
out
pop
in
imull
mov
repz
xor
pop
fisttpl
xchg
lcall
lcall
fabs
ja
sub
add
and
ss
jno
push
xor
scas
cmp
and
jmp
test
xor
fyl2xp1
enter
fcomip
mov
push
mov
push
aaa
hlt
mov
mov
addl
add
jnp
hlt
out
test
leave
adc
test
insb
repz
roll
cmp
into
cmp
aad
mov
mov
pop
mov
sti
daa
xchg
rcll
mov
jbe
dec
mov
sub
cmp
or
sub
mov
fldt
mov
dec
push
jecxz
mov
pop
mov
sbb
xor
in
out
push
inc
mov
imull
push
inc
push
lods
lcall
in
fsubrs
pop
jns
clc
pop
cmp
outsl
out
in
aas
jns
ficoms
pop
jno
mov
add
mov
ret
ss
sahf
or
daa
hlt
xchg
movsl
cld
loope
xor
rcll
jb
push
push
in
notl
inc
mov
fdivrs
or
imul
jo
jl
xor
mov
jmp
sub
mov
inc
dec
adc
outsb
adc
insb
cmp
mov
les
jl
push
jae
sti
fadds
push
cmp
out
xchg
cmp
mov
add
sahf
push
sbb
or
cmpsl
fwait
mov
popa
leave
pop
push
or
test
insb
int3
dec
pushf
pop
rorl
aam
in
xor
mov
sbb
push
jne
lds
push
xchg
push
pop
or
adc
sarb
and
and
mov
push
mov
inc
stc
sub
jnp
out
sahf
sub
in
out
sub
pusha
jnp
mov
xor
jo
ret
push
mov
xchg
xor
xchg
cli
dec
lret
cmp
addr16
in
sub
mov
dec
clc
mov
cmpsl
mov
lock
mov
pop
outsl
and
push
out
and
push
popa
xor
andb
push
data16
lock
mov
mov
out
addb
out
and
sub
addr16
movsb
jecxz
in
push
push
stos
push
mov
xchg
notb
add
int
or
movsl
je
push
inc
sub
push
lret
in
pop
aad
mov
ja
mov
dec
xor
std
inc
mov
arpl
mov
imul
fsubl
ljmp
jnp
sti
lea
mov
pop
mov
stos
sbb
std
and
push
sbb
mov
cltd
inc
pop
repz
adc
in
inc
push
mov
dec
aaa
cwtl
ret
push
pop
or
dec
into
cmc
adc
ljmp
adc
mov
loope,pt
out
mov
add
frndint
ret
daa
roll
fwait
mov
lret
jns
sub
lods
je
cmpsl
out
xor
mov
arpl
sbb
mov
jle
ljmp
dec
dec
sbb
leave
adcl
push
dec
inc
ret
icebp
inc
stos
adc
mov
jne
mov
insb
jbe
mov
test
inc
jns
mov
sub
pop
ja
cwtl
sub
pushf
jmp
int
xor
rcrl
iret
test
cmc
addl
sbb
je
imul
sar
ljmp
int
sarl
inc
mov
sub
lods
cmp
scas
dec
mov
scas
sbb
dec
or
xchg
xor
fstpl
stos
lods
out
outsl
jne
or
dec
and
inc
cmp
or
cmp
lcall
jnp
dec
mov
fld
sarb
jns
js
outsb
jo
or
xor
inc
xchg
movsb
jg
icebp
imul
inc
insb
out
xchg
lods
sbb
and
inc
test
xor
jle
sbb
into
daa
push
dec
push
bndstx
divb
jns
dec
jb
push
mov
pop
and
std
sbb
pop
cmp
in
push
jb
cmp
inc
stos
test
pop
ljmp
jae
add
pop
fwait
repnz
xchg
cmp
jecxz
dec
mov
leave
sbb
js
ja
shrb
stc
pop
aad
in
repz
mov
lret
les
sbb
and
mov
push
cmp
push
int3
out
sbb
fnsave
push
idivl
xor
add
pushf
mov
subl
lret
jb
repz
scas
mov
in
iret
push
addr16
imul
mov
mov
mov
leave
push
rcrl
fsubl
jno
xchg
sbb
std
pop
stos
jo
xchg
jno
ret
pop
cltd
or
inc
sbb
cmp
or
jns
push
fisttpll
ds
push
mov
mov
das
or
sub
in
mov
inc
mov
lcall
xor
nop
daa
xor
sbb
add
cld
xchg
decb
mov
and
loope
fnstenv
fbstp
enter
pushf
adc
or
out
lds
repnz
dec
mov
movsl
pop
pop
add
pop
jnp
mov
icebp
ret
les
dec
repz
test
popa
mov
int
scas
sbb
pop
xchg
test
mov
dec
int3
jbe
bound
push
call
pop
and
cmp
cld
lret
scas
mov
xchg
jg
out
clc
data16
mov
ds
in
jge
push
lea
nop
cmp
bound
subb
sahf
xchg
iret
inc
out
inc
mov
lcall
mov
cmpl
inc
repz
lock
mov
push
mov
mov
fimuls
xchg
mov
xor
imul
jmp
push
adc
dec
dec
add
dec
pop
cmpsl
adc
lcall
cmp
mov
cmc
xor
cld
mov
jle
mov
cmp
div
xor
and
std
push
push
xor
insl
mov
adc
add
ja
and
ret
icebp
sub
mov
arpl
popa
rcrb
xchg
ret
mov
inc
add
xor
shr
inc
nop
scas
dec
inc
into
inc
out
je
lret
scas
xor
test
xchg
lcall
icebp
test
or
out
int
xor
std
sub
test
rcrb
es
cmp
inc
shl
stos
lret
insb
mov
cmp
inc
mov
and
in
xchg
push
loope
mov
outsl
insb
mov
jno
adc
mov
rorb
cld
shl
adc
fstpl
and
and
lcall
push
and
mov
sub
mov
cmp
cmp
scas
mov
or
jle
stos
or
pop
jecxz
and
lods
out
scas
cmc
inc
jecxz
or
imul
xchg
mov
in
icebp
push
das
nop
popa
xchg
enter
dec
or
mov
bound
sub
imul
iret
sbbl
popf
mov
jg
scas
pcmpgtw
inc
push
jp
loop
jnp
and
xor
xor
nop
sub
hlt
or
pop
addl
js
cmp
dec
jne
or
push
and
cmp
jae
scas
xchg
int3
out
mov
andl
push
lret
shll
dec
fwait
and
adc
divb
mov
pop
cmp
push
pop
inc
add
add
jb
out
movsb
in
inc
jecxz
add
mov
fcoml
pop
jnp
jns,pt
add
scas
ret
mov
cmp
push
mov
nop
movb
jb
icebp
sbb
add
cwtl
or
sub
add
call
test
sbb
les
mov
pop
imul
scas
adc
leave
enter
lahf
cwtl
std
sbb
popa
int
adc
fstpt
mov
aaa
call
cmp
jnp
cmc
out
jmp
mov
stc
and
sbbb
push
enter
add
in
jg
or
xor
add
xor
popf
arpl
sbb
cmpsb
int3
in
mov
xor
push
adc
push
out
mov
out
out
mov
ret
pushf
inc
les
adc
inc
push
xchg
xchg
lods
mov
jmp
mov
xchg
adc
sahf
dec
push
addr16
jo
and
mov
inc
mov
daa
test
gs
sub
mov
cmpsl
jmp
push
pop
add
jnp
mov
lock
mov
sub
out
daa
jne
adc
push
mov
cmp
scas
rorb
pop
ss
and
mov
clc
mov
or
std
popf
sub
popa
sbb
stos
add
sub
loope
xor
jae
bound
push
sbb
cmp
xchg
add
dec
push
dec
insl
mov
fsubp
inc
stos
add
shll
xor
push
shl
aaa
mov
mov
addr16
aas
cmp
jmp
sbb
fimull
jne
loope
scas
cmc
pushf
xchg
xchg
push
mov
mov
out
jecxz
test
fnsave
xor
xor
jbe
inc
xor
mov
adc
popw
mov
mov
add
xor
ja
mov
xlat
mov
pop
mov
sbb
movsb
mov
daa
xlat
mov
popa
into
and
sub
adc
dec
stos
sbb
or
pop
scas
loope
sarl
repnz
es
into
mov
push
jmp
rorb
mov
sbb
pop
jbe
stc
xor
lahf
push
in
mov
xor
outsl
pop
xchg
pop
mov
dec
enter
mov
jnp
sub
fildl
pusha
and
hlt
test
imul
add
pop
int
or
in
dec
jg
shrb
and
sti
jae
jb
push
xor
jge
add
orl
hlt
mov
clc
out
push
and
sbb
es
dec
add
fildll
jnp,pt
or
xchg
pushf
lea
and
mov
jl
mov
into
xchg
jle
aas
mov
test
push
sub
cmp
mov
fdivrp
aad
scas
scas
jns
xor
xor
lea
xchg
add
jmp
insl
xlat
push
inc
fistl
lock
aaa
pop
mov
sahf
test
rclb
mov
xchg
aam
lds
jne
inc
je
out
push
push
mov
cli
movsb
xor
xor
cmp
push
or
pop
push
jecxz
pushf
cmp
pop
mov
jg
in
xor
call
jnp
xchg
loopne
sbb
pop
ret
and
mov
fidivl
shll
sub
mov
mov
cmovbe
inc
mov
stos
mov
inc
out
pushl
js
mov
fwait
testl
mov
sub
cmc
or
fnstenv
inc
movsl
out
rorl
add
xor
mov
add
pop
sbb
sub
dec
pop
in
push
in
add
adc
cltd
xchg
mov
xchg
inc
jle
movsl
movsl
dec
jl
pop
sbb
rclb
push
shl
mov
lret
jl
mov
sbb
insb
roll
mov
rcr
pop
sub
or
xor
sbb
in
adc
gs
jmp
xchg
idiv
movsl
pusha
cmpsb
mov
js
or
and
unpcklps
out
in
shlb
mov
int
or
or
and
or
arpl
repz
and
mov
push
push
push
xchg
xchg
cwtl
xchg
cmp
cmc
cli
sbb
mov
insl
adc
mov
ret
mov
mov
cltd
pop
xor
lahf
aam
mov
xor
add
fdivl
outsl
xor
pushf
add
pop
stos
dec
mov
pop
sub
fmul
jmp
call
aas
icebp
ja
fsts
xchg
hlt
movsb
xchg
mov
imul
or
loopne
addr16
les
lret
inc
dec
repz
sbb
flds
clc
xchg
call
jbe
int3
shrl
sub
lods
cmp
test
addr16
inc
mov
jae
mov
push
orb
mov
mov
insb
mov
dec
adc
outsl
mov
and
scas
cmp
cmp
popa
cmp
mov
and
xor
arpl
mov
xchg
push
mov
sarl
test
inc
mov
ds
scas
lock
jb
repnz
addl
lods
sbb
into
adc
pop
sub
in
mov
ret
outsl
sbb
pop
sub
pop
mov
xchg
es
xchg
sub
xorb
int
adc
stos
push
in
cltd
and
push
popa
rcrl
jb
popa
mov
mov
mov
lea
rep
sub
and
stos
adc
fiadds
mov
mov
or
adc
push
inc
adc
dec
pop
pop
scas
jbe
ljmp
fs
outsl
xor
pop
cmp
xor
jno
mul
ret
mov
push
xlat
test
or
xor
lret
sub
ljmp
pop
push
popf
jno
fsubrs
imul
jle
repz
popa
sub
clc
out
sub
popf
aad
cmp
jmp
dec
mov
push
outsb
roll
mov
es
and
lods
daa
lods
mov
jb
dec
xchg
sahf
jg
sub
ja
sahf
sbb
pop
imull
push
push
push
clc
sub
sub
arpl
sti
iret
jmp
ja
std
jne
xchg
push
sub
push
std
pop
rorb
push
out
push
xchg
imul
ja
in
xchg
xor
cmp
lds
sbb
fistpl
inc
push
lods
arpl
outsb
mov
cmpsl
sub
shll
fisubs
mov
clc
outsl
add
ds
in
xor
jmp
push
xor
jl
jecxz
in
pop
mov
loop
test
mov
test
push
jnp
jge
push
lea
test
stc
stos
pop
inc
lahf
jl
outsb
inc
je
gs
aam
add
xchg
addb
jl
orb
sbb
mov
add
xchg
jb
push
fmuls
das
in
pop
icebp
xchg
popf
sub
js
push
inc
push
les
imul
stos
or
nop
cmc
repnz
lcall
daa
in
into
xchg
fs
shll
movhps
leave
or
rorb
cld
ja
adc
std
aam
jl
cmp
call
aad
xchg
pusha
jp
adc
cmpsb
cmp
pusha
cmp
xchg
leave
adc
std
and
inc
mov
mov
mov
pop
inc
cmp
add
push
push
movsl
and
dec
xchg
push
jno
lods
cmp
mov
fistpll
mov
pop
mov
mov
repz
movsl
jg
ret
xor
mov
gs
xchg
sub
mov
and
clc
lds
mov
sbb
dec
jl
shll
push
mov
push
stos
push
stc
jle
cmc
dec
gs
add
scas
mov
std
cmpsl
xchg
push
add
lret
insl
stos
sahf
insl
lret
iret
shll
mov
or
cmp
jp
cmp
dec
pop
mov
popa
outsb
xor
add
cli
popa
inc
xorb
js
mov
fcmovb
pop
out
das
cs
in
push
adc
insb
push
lds
shlb
pop
cmp
push
jb
xchg
dec
ret
push
jno
orb
enter
mov
rolb
jb
push
jnp
pop
nop
iret
push
mov
mov
fisttpl
leave
jo
aas
cwtl
cwtl
fstps
pop
lea
mov
add
xchg
rclb
or
loope
push
into
sub
push
outsb
jecxz
pop
js
push
mov
dec
add
dec
adc
sbb
jmp
insb
jnp
adc
adc
movb
push
test
ljmp
mov
sub
inc
inc
dec
dec
jno
push
and
shl
adc
fsubs
push
repz
shrl
or
pop
test
push
std
and
cmp
bound
repnz
pop
fldenv
lcall
push
dec
bound
pop
outsb
iret
lea
lea
sbb
icebp
push
fstpl
es
shl
mov
push
stos
lds
out
fidivrs
rcrl
cmp
pop
les
xor
jno
lea
push
stos
stos
or
call
adc
nop
fsubs
lods
mov
push
test
jns
push
xchg
push
pop
pop
cmc
lret
jp
stc
mov
xchg
lock
aas
add
pop
sbb
mov
pop
test
icebp
out
fwait
mov
in
pop
xor
fisttpl
sbb
ja
lods
jns,pt
imul
std
ss
sbbl
imul
xchg
iret
jg
xor
push
les
imul
stos
and
fwait
xchg
mov
not
sub
cmp
scas
fcoms
cmc
fsubr
and
lcall
inc
shlb
sub
pop
cmc
jl
sub
mov
test
mov
int3
ljmp
mov
lods
xchg
test
sub
xchg
xchg
mov
push
fsts
adc
pusha
mov
or
xchg
in
scas
out
cmpsb
and
pushf
sbbb
pop
test
mov
leave
mov
into
jb
test
pusha
xchg
ss
xchg
fimull
mov
icebp
stos
sbb
shrl
mov
xchg
sub
adc
pop
sbb
jp
sub
pushl
test
in
pop
mov
ret
xchg
addr16
cmc
inc
sbb
sub
xchg
add
loope
test
push
cmp
inc
jnp
xchg
int3
fisttpl
push
and
subb
push
push
cwtl
add
cli
ret
out
iret
aam
stos
jge
jg
cli
fs
xor
sub
cmp
dec
sarl
jge
push
mov
inc
mov
fsubrl
jnp
in
lods
sub
mov
mov
add
gs
pop
lahf
imul
sbb
loope
lods
and
push
lret
adc
mov
jecxz
stos
push
int3
out
aam
jo
mov
mov
pop
negb
lcall
lret
jne
add
xchg
mov
loopne
stos
xchg
adc
or
mov
mov
sbb
pop
daa
imul
mov
push
and
test
mov
rorb
pop
cmp
mov
or
jnp
jns
xchg
in
mov
fstpl
jnp
daa
push
cwtl
fnstsw
or
sti
shll
jb
pop
ja
xchg
mov
cmpsl
pushf
lret
cmp
stc
shrb
lock
das
pop
lds
lea
stos
cmp
mov
icebp
repz
sti
xchg
addr16
clc
rcpps
push
adc
lock
sbb
jle
aaa
sub
cli
mov
test
sbbl
jecxz
arpl
xor
push
xchg
dec
xor
adc
adc
jae
or
aam
push
xchg
cmpsb
mov
xchg
and
iret
mov
push
xor
lds
es
lods
jl
loop
pop
adc
mov
mov
or
cmpsb
fst
ljmp
loop
ss
data16
mov
loopne
adcl
cltd
xorb
into
loopne
popa
sub
mov
cwtl
pop
or
movsl
test
int3
adc
mov
jle
rcrl
xor
adc
push
mov
sbb
mov
dec
cli
add
jge
inc
dec
fwait
xor
sub
scas
nop
lahf
xor
cwtl
push
dec
pusha
adc
pop
xor
xorl
pop
mov
out
jne
jmp
inc
int3
jl
pop
mov
sahf
into
cli
outsl
data16
test
sub
pop
push
add
cwtl
movsl
repnz
into
int3
fidivrl
int3
test
sbb
fadds
mov
out
aas
orl
jecxz
mov
lahf
mov
dec
testb
sbb
test
jge
sbb
sub
jecxz
testb
and
adc
mov
and
idivl
fiaddl
cld
add
or
pop
addr16
in
pop
call
loopne
jae
mov
mov
push
jo
push
adc
xor
xchg
rcll
sbb
adc
push
push
push
gs
pop
orl
js
call
mov
mov
sub
daa
or
fisttpl
sahf
adc
jl
lock
pop
jne
sti
push
in
sub
mov
cmp
mov
dec
sub
jbe
in
xchg
ja
std
pop
adc
xchg
cmovge
push
sbb
jg
push
popa
pop
sbb
enter
push
in
xor
inc
fisubl
adc
hlt
xor
aam
xor
adc
cmpb
xchg
das
arpl
ds
leave
stos
ret
push
out
test
idivl
jp
or
xchg
enter
and
cmp
imul
push
sbb
hlt
push
dec
test
sar
shrl
add
aad
jp
xor
and
adc
cs
or
aaa
sub
sub
adc
in
mulb
out
ja
aas
mov
scas
pop
out
js
outsl
sbb
mov
es
push
decb
scas
les
xchg
push
mov
ss
ret
pop
pop
adc
push
cmp
push
jl
sub
and
sub
enter
xchg
insl
roll
shll
xor
sub
pop
fldenv
adc
lods
inc
sahf
mov
stc
in
adc
pop
stc
pop
jg
bound
mov
fs
mov
mov
clc
jbe
add
adc
pop
mov
sub
cmp
xchg
lret
adc
pushl
int
sbb
xor
lret
push
and
fiadds
sbb
adc
mov
lods
cmove
inc
shll
test
xchg
fimull
loopne
sbb
ret
out
push
addr16
sti
mov
inc
push
divl
ss
adc
mov
sbb
ljmp
cmpsl
movsb
adc
dec
push
xor
mov
jo
adc
mov
and
std
sub
dec
or
xchg
les
jg
in
mov
and
stos
sbb
jns
lcall
and
ja
lret
movsb
jnp
orb
add
jne
cmc
mov
mov
mov
xor
repnz
cmp
inc
shll
inc
pop
jns
dec
or
add
xchg
por
pop
jae
sub
add
movsl
mov
dec
lcall
add
jbe
cmp
xor
jno
loopne
inc
jl
xchg
sbb
icebp
data16
jle
testl
sar
dec
call
das
sub
xchg
inc
addr16
int
gs
stos
js
sub
jge
sti
aam
cltd
cli
xor
in
xor
mov
inc
pop
pop
bound
mov
xor
jns
xchg
enter
das
popa
fldl
dec
repnz
pop
movsl
inc
adc
js
push
pop
and
jae
mov
cmp
mov
addr16
mov
icebp
mov
xor
ret
mov
enter
outsb
std
lret
inc
cmp
dec
les
push
rorb
iret
cmp
and
add
bound
jbe
jne
test
cmpb
insl
mov
mov
pop
mov
jle
loopne
xor
and
repnz
lock
movsb
xchg
addb
in
and
pop
idiv
fsubrl
int3
jmp
jno
ja
push
mov
fiadds
sti
push
aas
and
out
les
sbbl
dec
inc
mov
push
mov
dec
mov
or
jl
mov
xchg
sbb
adc
fcmovb
pcmpgtb
loopne
fmuls
or
cmp
jns
add
rcr
repnz
je
stos
and
sub
sub
ljmp
mov
sbb
test
jmp
or
fwait
jns
pop
or
hlt
cmp
and
dec
xchg
out
cmp
mov
fdivr
hlt
sbb
out
xchg
jge
cmp
gs
dec
jb
mov
rol
fdivr
out
cmp
in
fucomip
cwtl
rclb
pop
gs
pop
add
popf
nop
mov
sbbl
inc
out
inc
stos
das
ret
adc
or
adc
cld
scas
int3
adc
arpl
loop
shlb
subb
xchg
js
and
sti
outsb
lds
shll
test
test
xchg
call
add
rclb
scas
out
stc
fdivl
jnp
icebp
lret
ret
or
movsl
jle
cmp
jle
in
cmpsb
add
loop
test
inc
xchg
jbe
cmp
movsb
fisttpll
jns
xchg
jl
pop
and
arpl
dec
pop
stos
cmp
jecxz
mov
stc
pop
leave
xchg
mov
js
xchg
fsts
jns
call
cmp
je
cmp
addr16
xor
mul
cmp
push
std
mov
sbb
adc
push
testl
jmp
addl
pop
inc
and
orl
int3
mov
push
xor
test
mov
mov
mov
dec
repnz
mov
std
pop
xchg
xlat
inc
std
push
sub
xlat
cmp
iret
out
mov
fstpt
out
bound
mov
out
clc
cs
lock
xchg
dec
mov
ds
or
pop
stos
push
call
xor
dec
and
mov
cltd
ljmp
cmpsl
or
bound
das
or
push
mov
sahf
cmc
out
popf
mov
loope
push
inc
cmpb
ficoml
xor
adc
mov
cld
sub
xchg
and
jno
pop
int3
and
xor
mov
and
or
out
aam
xchg
orl
or
hlt
test
ljmp
jnp
stc
jae
shrl
mov
xchg
fnstenv
bound
into
push
sbb
xchg
das
adc
sub
dec
fbstp
push
inc
or
jp
mov
or
xlat
pop
jmp
out
rcrb
jne
push
mov
jmp
mov
mov
lret
sbb
aam
stc
jb
popf
sbb
clc
test
fstps
cmp
pop
outsb
push
xor
xor
pop
xor
pop
jmp
inc
out
mov
stos
sub
jnp
push
jo
call
mov
loope
cmp
pop
sub
push
sti
xchg
adc
data16
loopne
or
pop
push
sub
or
outsl
icebp
cmpsl
and
xchg
daa
xchg
mov
xchg
scas
or
add
pop
loope
xchg
test
or
jl
add
sti
outsb
fs
mov
mov
std
jb
jne
jno
inc
sbb
cmc
insl
mov
inc
shll
push
and
test
push
popf
pop
adc
sbb
andl
lock
test
mov
outsb
sar
loop
cmp
cli
imul
sbb
ret
loop
or
inc
add
or
xor
je
iret
jmp
pop
or
sbb
mov
mov
jb
mov
je
cwtl
aad
or
push
test
daa
pop
hlt
addr16
hlt
fistps
fidivrl
cld
dec
mov
pop
sbb
or
out
mov
mov
jns
inc
clc
imul
inc
imul
pop
push
mov
ror
pusha
repnz
mov
test
test
lock
xchg
fisttps
movsl
push
sbb
jb
sahf
in
ds
xchg
enter
cs
orb
mov
divl
pop
or
or
pop
sahf
push
pop
dec
sahf
fucomi
pop
mov
test
mov
int3
arpl
dec
addr16
nop
aam
mov
jns
insb
push
dec
xor
call
cmp
mov
cmc
push
mov
pop
sbb
xchg
orl
je,pn
pop
pop
pop
scas
mov
push
or
adc
movsb
xor
mov
js
mov
lods
nop
sub
popa
lods
and
jne
dec
cmp
cmp
mov
out
xchg
adc
in
jno
and
inc
add
jp
out
out
and
pop
inc
or
lcall
cmc
in
xor
cmpsl
mov
insb
lock
pushf
mov
mov
loop
mov
mov
mov
cmp
sbb
sub
repz
mov
fidivrl
mov
popa
call
sub
mov
mov
lret
push
sbb
repnz
imul
pop
push
xor
mov
push
inc
xchg
jecxz
push
pop
pop
mov
xor
mov
jecxz
sub
sbb
jg
outsl
xchg
xor
mov
hlt
mov
inc
mov
cmpl
jbe
mov
or
dec
add
loop
nop
mov
xchg
push
mov
adc
out
rorl
repz
sbb
xorl
inc
cmpsb
mov
mov
xchg
sub
mov
out
mov
sub
or
mov
nop
jae
std
je
pop
popf
or
mov
cmp
ret
mov
test
xchg
and
xchg
ret
loope
mov
cmp
rcrl
xchg
dec
popf
jge
inc
inc
xor
or
test
sub
push
mov
xor
shlb
pop
jb
mov
mov
ret
test
mov
jmp
repnz
xchg
lods
pop
aaa
xchg
xlat
and
and
inc
enter
inc
fs
ljmp
into
mov
xor
mov
imul
int
xor
outsl
dec
cld
std
add
xchg
pop
and
arpl
xor
rcr
lods
fs
jle
push
not
stos
popa
outsb
adc
add
test
out
mov
dec
adc
test
fldcw
jnp
push
rcll
pop
leave
sub
add
jo
adc
fbstp
rcr
dec
sahf
jle
jg
test
int3
adc
js
push
xor
sbb
jl
es
sti
mov
pop
loop
jle
xor
adc
lea
dec
dec
adc
adc
ret
inc
cmpsl
cmp
xchg
out
rolb
icebp
jle
push
jnp
sub
mov
pop
push
lock
imul
js
push
pop
lahf
movsl
pop
mov
sti
mov
or
pop
mov
sub
in
dec
mov
dec
lock
dec
sub
bound
xchg
mov
loop
outsl
inc
jnp
ja
aaa
aaa
into
cwtl
xchg
adc
lcall
aad
out
cltd
xor
xor
aad
adc
mov
orl
xchg
pop
sub
cmpsb
push
mov
jns
jne
gs
ljmp
bnd
inc
inc
lods
iret
insb
push
adc
mov
lret
js
shll
mov
pushf
neg
jbe
cwtl
rclb
ds
outsl
dec
aam
call
iret
out
test
xchg
sbb
loopne
out
mov
xchg
push
pop
sub
int
xor
add
adc
fwait
xchg
or
push
push
inc
inc
in
jmp
daa
adc
mov
sub
fmuls
xchg
inc
push
stos
mov
inc
adc
and
adc
bound
movb
rclb
addr16
out
loope
xor
jg
adc
arpl
test
mov
sbb
xlat
ljmp
jb
inc
into
jnp
pop
jbe
dec
repz
inc
dec
mov
push
pop
shrl
insl
xchg
flds
xor
rcll
mov
xor
lcall
cli
mov
jno
or
xor
inc
imul
in
jb
das
push
adc
mov
sahf
jmp
dec
loope
ljmp
and
lods
jns
sub
mov
aam
aaa
sub
adc
insb
cwtl
rolb
mov
jecxz
jne
jbe
lods
insl
xchg
hlt
adc
mov
pop
push
iret
mov
fdivl
or
mov
arpl
gs
fnstcw
xor
jg
dec
pop
jne
popf
dec
push
xchg
sbb
or
mov
pushf
jge
ret
push
loope
xor
lret
je
mov
vunpcklps
pusha
pop
jbe
out
jecxz,pn
mov
sbb
push
sbb
xor
cmp
movsb
clc
ljmp
and
scas
mov
xlat
adcl
mov
adc
aaa
sub
mov
sbb
pop
mov
sbb
pop
pop
xchg
inc
xor
dec
fiaddl
add
xchg
push
dec
clc
ret
loopne
fdivrl
cltd
dec
xchg
cltd
xor
in
mov
movsl
iret
or
test
mov
popf
jo
inc
push
arpl
fistps
int
out
outsl
nop
sub
sbb
sahf
lcall
lret
jmp
jmp
jge
cmp
and
js
adc
sub
mov
inc
xor
jno
cmp
test
mov
xchg
push
out
cmp
cmp
push
mov
arpl
add
das
cmp
mov
push
push
inc
jp
and
add
pop
scas
inc
adc
sub
cwtl
or
xchg
leave
test
push
jp
jl
ret
aam
cmp
ja
lcall
jle
sub
repz
lret
push
sub
aas
add
add
cmp
or
or
subl
enter
lock
ss
aas
ljmp
pop
or
jge
test
lahf
xchg
jae
jg
mov
lock
movsb
jp
ljmp
and
cld
into
mov
add
cmp
movsb
js
dec
arpl
mov
add
cmp
pop
aaa
cld
and
sbb
sbb
push
aad
cli
add
dec
jbe
insb
sbb
js
adc
loopne
inc
loopne
pop
mov
insl
sub
cmp
das
imul
repnz
adc
sbb
out
insb
pop
lcall
rolb
arpl
int
mov
mov
daa
std
shlb
xor
mov
fs
imul
xlat
fmull
fisubs
pusha
and
inc
sbb
pop
cmp
adc
jb
lahf
ja
repz
lret
lahf
push
jne
sbb
lds
hlt
std
test
push
fbld
pop
xchg
pop
sahf
cltd
out
adcb
insb
inc
cmp
loopne
addr16
or
xor
xchg
or
pop
and
cli
jns
test
jae
mov
icebp
mov
loop
in
sahf
mov
push
into
add
int
loope,pn
les
out
mov
loop
pop
or
dec
inc
into
or
push
mov
hlt
fldcw
dec
out
in
inc
sub
and
mov
cwtl
push
pushf
clc
call
aas
pavgw
or
mov
in
xchg
insb
xchg
add
xchg
rcll
aam
cmp
es
pop
movsl
mov
lods
inc
add
mov
mov
outsl
popf
mov
sbb
clc
nop
push
jl
dec
scas
sahf
add
mov
pop
dec
ds
lret
stos
add
je
je
xlat
mov
or
test
cmp
and
outsl
adc
or
movsb
and
inc
sbb
lds
inc
insb
int3
dec
push
inc
xor
test
cmpsb
in
dec
push
ss
scas
xchg
mov
and
and
stos
repnz
jmp
fwait
adc
inc
lret
mov
aas
loop
mov
cmpsl
xor
and
into
or
pop
popf
stos
mov
pop
leave
inc
test
pop
aaa
adc
or
outsb
clc
or
popa
mov
rol
fs
jo
pusha
xchg
mov
je
xchg
scas
mov
enter
jae
fcmovb
insb
cmp
inc
out
jl
or
and
adc
fstl
negl
hlt
or
shrl
xchg
adc
mov
pop
call
push
ds
mov
lods
loopne
imul
test
lock
rorb
xlat
stos
sbb
xor
lds
sub
enter
rcll
jle
jae
and
xlat
push
nop
cmp
faddl
xor
add
lea
loop
pop
inc
add
clc
mulb
arpl
push
xchg
fists
pop
shrb
dec
jno
cmp
pop
shr
roll
out
mov
test
out
xchg
insb
call
xchg
paddb
sub
mov
js
add
add
shr
sub
shrb
cmp
std
mov
pop
mov
ret
lds
scas
loop
das
adc
cmovle
rcll
stc
test
fwait
pop
pop
insb
inc
jl
mov
in
jge
pop
push
jns
scas
mov
dec
pop
inc
cmp
jo
adc
enter
negl
mov
mov
add
in
jecxz
cmp
inc
fwait
in
sub
push
sti
adc
mov
bound
jne
inc
outsb
mov
fstpl
dec
jnp
cmpsb
push
imull
jno
movsl
loope
dec
dec
pusha
jmp
lea
outsb
mov
jnp
or
clc
cmp
xchg
ret
xor
dec
xor
cli
jmp
sbb
jge
in
in
adc
or
mov
lret
scas
sahf
xor
cmp
test
test
jo
or
fs
or
xor
jne
add
out
ret
shlb
adc
mov
add
test
imul
std
add
outsl
ret
lret
push
roll
insl
sub
jle
sub
push
jmp
sub
dec
mov
cmp
mov
stos
mov
xchg
and
cmp
mov
out
adc
sti
jg
sub
or
shll
push
nop
mov
push
shl
fsub
out
pop
pop
hlt
outsb
or
movsb
test
dec
arpl
sub
movsl
cmp
push
dec
mov
add
xchg
sub
adc
dec
fisttpll
mov
and
cmp
cmp
jb
sbb
push
iret
sbb
fincstp
cmp
pop
mov
or
int3
inc
pop
repnz
pop
outsb
or
cmp
pop
and
dec
cld
ds
pop
push
mov
and
pop
xorl
push
push
adc
xchg
add
cmp
iret
or
xchg
out
dec
push
cmpsl
pop
dec
aaa
repnz
sbb
and
movsl
or
out
dec
bound
sub
imul
loopne
pop
sub
pop
ret
jo
loop
cwtl
pop
dec
js
push
push
mov
aas
mov
mov
test
nop
xchg
insl
ud1
lret
aas
js
jno
dec
dec
stc
addr16
jb
inc
pop
pop
mov
adc
mov
aas
add
pop
adcl
mov
aas
out
fwait
or
out
jmp
cwtl
push
lcall
jl
repnz
jmp
cmp
sub
add
negb
es
and
inc
mov
fstps
lret
adc
pop
int
push
push
jmp
filds
ret
or
xchg
xor
rorl
pop
xchg
pusha
fsts
mov
fisttps
jne
scas
dec
adc
imul
push
nop
sahf
fldl
out
add
mov
and
mov
mov
ficoml
fcompl
push
jg
in
test
xor
push
xlat
mov
addr16
fisubs
jnp
and
mov
and
and
lods
mov
mov
int3
inc
inc
and
mov
enter
mov
sub
out
leave
cmpsl
imul
dec
rcll
movsl
sbb
stc
inc
arpl
loopne
or
out
lret
sti
dec
adc
jb
add
or
scas
xchg
out
mov
out
cmpsl
lods
pop
push
shl
jl
cld
xlat
mov
ljmp
jmp
jo
das
xchg
mov
push
mov
xchg
jecxz
cmp
jo
and
adcl
mov
pop
out
inc
mov
faddl
cmc
xor
dec
jno,pn
testb
movsl
subl
cmp
cmc
jg
rep
movsl
sbbl
aad
adc
pop
dec
test
xor
orb
andb
sbb
push
push
pop
div
fs
ret
dec
adc
mov
mov
mov
mov
inc
repz
sahf
out
icebp
sbb
push
in
add
lock
push
jl
rclb
push
or
cmp
repz
sbb
shrb
mov
out
pop
adc
popa
out
sbb
push
jmp
adc
jle
pop
mov
dec
mov
cmp
sar
push
int3
pop
sub
sbb
mov
sbb
test
add
cmp
inc
fs
aas
mov
xchg
mov
fcmovne
lret
test
int3
cld
mov
arpl
inc
mov
test
cmpsl
cmp
mov
mov
rorb
jae
imul
aaa
sub
movd
mov
test
and
rolb
pusha
inc
andb
mov
daa
and
pop
pop
xchg
fistl
mov
rcrb
push
push
pop
gs
and
xchg
lret
mov
loope,pn
repnz
push
mov
out
mov
rcrb
lds
test
cmp
jo
lahf
add
xorb
dec
insb
cmpsb
jmp
adc
insb
pop
xor
mov
jge
sub
and
ror
add
and
aas
xor
cli
mov
mov
dec
and
mov
pop
mov
pop
sub
neg
dec
ret
or
mov
push
divl
mov
movsb
dec
sbb
sub
and
inc
lret
pop
and
xchg
xlat
hlt
pop
xchg
das
ret
push
dec
dec
inc
pop
jg
push
xlat
test
out
ljmp
push
stc
pop
loopne
inc
lret
ret
fs
xchg
push
inc
pop
mov
hlt
mov
push
pushf
mov
cmpl
xor
aas
fptan
inc
cwtl
inc
mov
adc
lock
add
jg
inc
data16
add
sti
mov
out
push
inc
in
inc
scas
in
sbb
fwait
out
jmp
mov
pop
aad
das
jmp
push
adc
pop
lea
xor
xor
aad
bound
cmp
inc
pop
sbb
mov
dec
lret
sbb
add
icebp
add
outsl
add
into
sub
jo
sub
fldt
andl
add
inc
xlat
pop
movsb
outsl
and
lret
mov
sub
popa
fs
jge
test
sbb
pushl
mov
in
jp
dec
pop
cmp
dec
xchg
in
popf
int
mov
cmp
insl
clc
bnd
push
fs
shlb
add
lds
insl
outsb
leave
add
cmp
pop
shll
adc
and
ds
xor
nop
rcr
add
cmc
inc
addl
cmp
test
fs
or
mov
arpl
in
lods
jb
sbb
add
bound
pop
xchg
mov
les
dec
nop
pop
mov
insb
sbb
jl
xchg
sbb
loopne
or
cmp
iret
adc
lods
cltd
jno
ljmp
test
push
mov
push
popl
jge
pop
jecxz
clc
pop
mov
mov
inc
push
in
arpl
flds
mov
xor
cmpsl
daa
ret
adc
cmpsl
dec
into
inc
pushf
fwait
les
daa
cmpsl
idivb
lods
je
hlt
xchg
mov
shrl
dec
fnstsw
inc
add
dec
outsb
sub
jnp
int3
mov
pop
push
or
loope
fwait
dec
lret
dec
dec
push
test
jnp
or
inc
cli
add
adc
mov
gs
sbb
leave
push
mov
mov
ss
push
mov
notb
or
andb
arpl
shlb
sbb
imul
enter
data16
fldl
mov
sahf
jnp
dec
aaa
adc
orl
call
nop
add
sbb
jno
inc
ja
gs
sub
xchg
test
cmp
xor
addr16
dec
push
add
fsubp
xor
sbb
jge
pop
stos
loopne
notb
hlt
or
mulb
sbb
push
add
mov
ljmp
in
cs
imul
in
or
xor
cmpsb
push
dec
jmp
pop
outsl
lcall
sbb
and
cmp
xor
inc
jb
xchg
push
xchg
icebp
je
icebp
es
jle
and
adc
push
incl
xor
movsb
movsl
es
or
mov
outsb
adc
or
push
cld
in
out
cmp
add
mov
std
jle
outsl
sarl
or
push
in
jb
xchg
xor
test
jae
fwait
repnz
sub
sbb
mov
rep
test
dec
mov
repnz
cmp
icebp
imul
hlt
inc
cmc
lret
nop
push
jae
in
jne
outsb
push
jbe
pushf
adc
das
shrb
enterw
xchg
pop
xchg
nop
jecxz
push
jae
fnstenv
sbb
sbb
es
dec
stos
lahf
xchg
mov
pusha
arpl
rorb
pop
sti
or
or
lock
mov
ret
popf
sub
mov
xchg
xlat
mov
lea
dec
das
pop
ljmp
scas
adc
stos
and
popf
inc
mov
fs
in
inc
subb
mov
cmp
imull
test
outsb
int3
lods
fs
mov
shl
lods
cwtl
ret
push
push
lea
dec
subl
pop
sbb
mov
cs
inc
fstpl
enter
lock
mov
jnp
rclb
mov
int3
xchg
loop
mov
or
jbe
mov
xor
pop
repz
ljmp
daa
pop
mov
adc
das
xchg
xor
std
fimull
mov
lods
pop
xchg
jle
dec
popa
pop
sub
fcmovnu
and
inc
lock
imul
or
pxor
enter
or
dec
es
repnz
inc
pop
mov
xchg
aad
lods
pop
icebp
ljmp
sbb
imul
stos
mov
scas
adc
aam
ds
imul
aas
mov
fdivrs
inc
decb
pop
call
stc
mov
or
mov
test
jl
in
and
cmpsb
mov
aas
loopne
adc
xchg
jne
test
dec
pusha
pop
adc
imul
xchg
xchg
push
push
xor
outsb
pop
test
clc
test
xchg
adc
xchg
cmp
in
insl
arpl
pop
icebp
xor
mov
in
dec
mov
lea
dec
sub
imul
ss
xlat
arpl
adc
push
stc
orb
dec
in
into
jb
sub
divb
xchg
push
xor
sbb
mov
mov
pop
add
cmp
adc
push
int
jbe
ljmp
pushf
mov
jo
ss
add
outsb
andl
repz
ds
std
lret
mov
jmp
hlt
and
scas
adc
aas
mov
xor
inc
dec
xchg
jg
in
and
rclb
cmp
and
mov
jne
and
dec
cltd
xchg
sbb
in
mov
dec
lds
jae
int3
cld
push
das
xor
je
mov
lock
jmp
cld
cld
aas
pop
mov
mov
lea
adc
lods
stos
ror
daa
in
mov
dec
mov
popa
and
std
pop
cmp
icebp
mov
add
lock
push
mov
xor
notb
test
sbb
mov
pop
sub
mov
cli
insl
test
jbe
inc
pop
fisubs
imul
sarl
jbe
mov
mov
lock
dec
jb
popa
mov
push
aas
fbld
rclb
cmp
cmp
ja
push
xor
mov
shrl
push
sti
inc
xor
frstor
movsl
xchg
or
loopne
mov
mov
push
jbe
mov
pop
aas
stc
int3
insb
inc
cwtl
fistps
arpl
addr16
cmpsb
xor
repnz
shlb
popa
xchg
ljmp
push
sahf
jecxz
cltd
outsb
movl
ficomps
xchg
push
ficomps
pop
sub
and
dec
mov
xor
jge
sub
test
adc
out
adcl
push
xchg
mov
lods
inc
cmp
adcb
icebp
and
mov
sbb
jno
jle
pop
mov
mov
sub
ja
adc
adc
adc
sub
aam
dec
bound
adc
or
lcall
ficomps
jg
push
fisubrl
fsubrs
mov
stos
cmp
and
sbb
subl
stos
rorl
outsl
or
inc
pop
lock
pushf
sub
les
das
shlb
arpl
gs
adc
jo
stos
insl
sbb
cmp
fcoml
nop
or
outsl
iret
jbe
pop
fidivrl
ja
and
cmpsb
and
mov
mov
jmp
repz
xor
sbb
rcr
les
mov
jl
leave
subb
das
cld
mov
imul
sub
fsubl
pop
and
popf
test
jge
or
in
andb
scas
stc
add
test
fiadds
sbbb
sub
in
and
imul
rcrb
fcmovbe
jbe
jmp
cmpsb
jo
enter
or
leave
test
dec
test
pop
insb
pusha
and
icebp
mov
lods
mov
out
lods
arpl
ja
pushf
clc
aam
sub
cld
cmpsl
push
dec
inc
scas
mov
fwait
jno
mov
mov
sbb
das
mov
or
mull
das
js
sarb
jnp
pop
xchg
cwtl
dec
movsl
cli
push
subl
jle
imul
notb
fidivrs
ja
dec
jecxz
mov
cmp
daa
xchg
adc
loope
inc
mull
movsl
fstps
add
pop
movsl
in
in
lahf
mov
cmc
adc
pushf
pop
popa
iret
or
mov
aam
int3
loope
pop
out
mov
jno
in
cmp
push
das
arpl
jbe
jg
jne
xchg
cli
out
adc
cmp
roll
jno
nop
jne
xchg
cmp
mov
xor
fs
mov
cmp
xor
or
aas
mov
xchg
cmc
inc
pop
xor
mov
dec
mov
sbb
and
sub
jle
inc
jmp
stos
xor
xchg
outsb
jo,pt
adc
rorl
cmp
or
out
push
and
ret
fiaddl
add
xor
mov
insb
jecxz
subl
dec
push
es
add
icebp
lods
jnp
scas
clc
mov
gs
cli
jecxz
fsubl
jb
arpl
hlt
inc
cmpsl
add
test
fdiv
xchg
or
popa
shrl
inc
daa
mov
adc
or
ds
sarb
cmp
test
div
or
and
adc
xor
jb
sub
and
repnz
mov
push
inc
sbb
and
stos
jl
push
pop
push
dec
fwait
ss
rcrl
xor
aad
mov
mov
test
or
mov
in
sub
or
jmp
mov
in
stos
divb
rclb
sub
lock
fsubrl
int
cmp
in
xor
lret
dec
into
jnp
fisttps
movsl
addl
test
or
pop
out
xchg
addr16
sub
xor
gs
sub
sub
dec
xchg
fldcw
mov
cmp
js
xchg
fnstenv
les
adc
call
cltd
insb
out
push
lcall
xchg
ret
adc
dec
mov
xchg
mov
stos
sbb
jbe
jmp
sahf
sub
push
std
mov
cmp
imul
sahf
nop
jge
fmul
xchg
and
adc
loope
test
mov
mov
sti
fs
scas
jnp
iret
xchg
mov
fisttpll
jle
test
push
cs
mov
negl
mov
ficomps
inc
mov
jb
push
jb
pop
jb
in
or
push
loope
and
pop
mull
inc
cli
test
jb
aam
call
sbb
loopne
push
or
cmpsl
cmp
dec
shlb
pop
mov
call
cld
pop
sbb
mov
pop
jmp
add
cltd
cmp
in
nop
rolb
cltd
or
add
pop
sbb
cmp
xchg
and
push
popf
push
out
sbb
je
jg
and
inc
xor
subl
leave
mov
cmpsb
or
data16
xorb
es
stos
mov
mov
scas
aaa
jns
js
dec
jno
cmp
jns
pop
dec
inc
lea
mov
or
xor
fwait
stos
sub
pop
mov
pop
sub
push
cmp
aad
popf
dec
xor
gs
cmp
push
daa
in
mov
mov
lahf
mov
jl
inc
lret
push
out
xlat
push
xor
ja
mov
cmc
add
shlb
push
inc
fisttps
enter
rolb
sub
jl
xor
les
xchg
sub
out
inc
arpl
repnz
mov
push
dec
sub
gs
lcall
jnp
xor
or
in
dec
push
sbb
dec
shlb
push
lret
sahf
add
jle
sbb
cmc
jmp
sub
sub
and
outsb
jnp
imul
xlat
add
cli
push
cmp
push
pop
and
daa
pop
das
lods
jecxz
cmpsb
sbb
mov
mov
mov
mov
pop
pop
shll
ret
xchg
sbb
xor
xlat
imul
pushf
adc
loop
mov
adc
adc
fisttpl
stos
dec
and
repnz
in
daa
clc
xchg
sbb
sti
mov
mov
cmp
inc
je
jb
aaa
imul
xor
push
je
jp
test
xchg
sbb
lock
les
icebp
inc
push
pusha
stos
cli
dec
fists
mov
into
mov
fcoml
imul
add
leave
dec
xor
mov
arpl
imulb
scas
fstps
loopne
iret
fstps
je
stos
nop
jno
push
fmuls
or
xor
xchg
mov
dec
jno
popf
cli
pusha
mov
nop
mov
in
pop
call
dec
sbb
insb
mov
aad
fs
sarb
jno
dec
loop
jle
and
xchg
hlt
out
jle
fwait
sub
test
aas
jnp
pop
add
mov
loope
insb
adc
fstpt
mov
in
fwait
inc
pop
out
sub
ucomiss
adc
cld
es
dec
dec
stc
and
pop
sbb
loopne
and
mov
xchg
leave
push
push
notb
lahf
jnp
dec
inc
mov
or
jb
negl
adc
testl
jbe
mov
sub
and
pop
and
test
lods
call
push
iret
imul
das
sub
xlat
test
int
push
mov
adc
mov
addr16
inc
adc
nop
mov
xchg
mov
mov
and
daa
push
mov
fsubrs
stos
aas
shr
and
ljmp
sub
push
and
pop
jge
jmp
adc
test
jg
lods
icebp
mov
xchg
push
lahf
outsb
ret
repnz
push
pop
mov
cwtl
adc
stos
lea
pop
add
cmpsb
dec
lods
xchg
mov
inc
idiv
cli
ret
mov
mov
lods
adcl
mov
and
add
and
clc
jae
pop
add
fldcw
or
out
jb
xchg
or
pop
xchg
fadds
out
stos
fcoms
adc
push
pop
loope
movsb
push
and
in
stc
mov
sbbl
jnp
icebp
out
push
and
fwait
movsb
push
aad
sub
shll
sahf
es
mov
loopne
sbb
push
sbb
fwait
in
sbb
mov
add
repz
ljmp
pop
xor
test
xchg
add
push
xor
inc
cmp
add
sbb
leave
fidivs
fistpl
sub
stos
sub
jle
sub
ljmp
sub
push
out
addr16
push
xchg
lret
jg
fistpl
mov
sti
shl
push
pop
imul
cld
mov
add
push
push
mov
js
add
inc
adc
out
out
movsb
sahf
adc
ljmp
je
mov
add
sbb
xchg
and
pop
scas
push
sub
lds
jge
sub
push
jno
sbb
sub
jle
push
adc
nop
inc
cmp
popa
pop
clc
jp,pn
pusha
shll
pop
daa
mov
xor
cld
dec
dec
cld
xchg
push
lods
pop
mov
orl
mov
pop
mov
out
leave
cmp
test
clc
push
js
jmp
cli
adc
xchg
inc
call
fwait
je
popf
jbe
sub
fstps
push
cld
push
push
and
loope
xchg
pusha
dec
lock
sbb
mov
scas
arpl
adc
gs
sarl
repz
fcmovu
mov
jmp
sbb
push
cmp
add
add
xchg
into
xor
sarl
arpl
xlat
sti
or
and
dec
sbbl
or
in
ss
cli
loope
add
push
push
push
xchg
orb
mov
cmp
lcall
or
ljmp
int
adc
aam
into
vmovupd
sub
jnp
sub
arpl
xchg
arpl
gs
aaa
loope
dec
gs
push
adc
popa
mov
imul
sub
or
cld
int3
jne
es
pop
push
mov
sahf
jns
mov
sub
out
add
jb
xlat
shrl
push
das
cmpsl
pop
sti
add
popf
xchg
outsb
arpl
cmp
filds
shll
cwtl
inc
jbe
inc
mov
cmp
mov
adc
repz
mov
push
test
imul
cmp
mov
lods
lea
out
push
cld
leave
cmp
std
sbb
hlt
cmpsb
fisttpl
push
pop
dec
mov
pop
or
fisubrs
shll
pshufw
xchg
xchg
and
in
sub
jns
sbbb
loope
cmp
lcall
xchg
push
sub
das
mov
insb
test
push
sti
mov
das
mov
jnp
cmpsb
nop
push
mov
out
adc
stos
adc
adc
jo
dec
mov
ret
adc
test
pop
repnz
test
push
shr
aaa
mov
push
fistpl
out
and
pop
shrl
outsb
push
inc
popl
mov
in
add
fmuls
mov
pop
dec
mov
inc
mov
stos
xchg
mov
jae
cltd
jb
daa
or
sahf
mov
push
lret
xlat
out
mov
push
xchg
hlt
push
or
nop
shlb
mov
loop
lcall
pusha
inc
dec
mov
push
xor
inc
pop
js
pop
lds
sbb
cmpsb
push
out
cmp
xchg
scas
or
out
sbb
dec
jge
mov
pop
ret
mov
insb
or
clc
adc
daa
add
push
sub
and
in
arpl
xor
cltd
lcall
fsubs
or
adc
xor
inc
inc
mov
inc
dec
jecxz
push
rcrb
shlb
push
jb
jge
jb
jnp
cmp
or
shrb
jecxz
add
jg
insb
dec
pop
decl
mov
jge
jp
stc
clc
das
mov
mov
cwtl
jmp
mov
cmpsb
popa
push
add
out
xor
jmp
add
mov
or
cli
add
push
fcmovb
or
cmc
mov
movsl
or
push
outsb
mov
fsubl
scas
int
mov
jle
es
stos
or
dec
mov
data16
lret
dec
and
test
sub
jecxz
push
mov
daa
add
sbb
jb
and
mov
mov
stos
xor
mov
push
test
mov
test
cwtl
or
mov
out
pop
lods
and
sub
clc
jl
mov
mov
bnd
ds
stos
loope
sbb
cli
push
adc
addr16
mov
fwait
cmp
sub
ja
or
testb
push
lods
lret
jecxz
fcompl
in
pop
dec
xor
pop
int
data16
loopne
movsl
dec
or
lods
and
hlt
xchg
push
pop
pop
xor
clc
arpl
pop
arpl
pushw
adc
and
dec
fistpll
dec
stos
mov
push
mov
inc
lcall
rol
clc
inc
push
adc
incl
pusha
xchg
and
es
jl
pop
inc
sub
mov
aad
cmc
fsubr
outsl
frstor
adc
xchg
jnp
mov
aam
into
sub
inc
jecxz
std
pop
out
test
in
inc
mov
adc
inc
push
and
push
jne
mov
aaa
mov
rcll
or
ljmp
sarb
imul
mov
dec
insl
fidivl
imul
xor
insl
es
jg
stos
push
fildl
or
testb
jp
sub
push
mov
daa
or
xlat
mov
lret
add
hlt
fdivs
daa
ss
and
outsb
test
push
cmp
inc
sub
cli
clc
sub
jg
or
scas
jae
push
or
jno
xor
out
in
push
cmp
lea
jmp
add
add
inc
nop
loope
add
fwait
push
filds
icebp
cld
es
out
icebp
cs
push
add
mov
fs
xchg
cli
adc
or
call
xchg
sbb
mov
cwtl
jle
imul
sbb
xchg
arpl
mov
adc
sbb
ja,pn
add
shll
insb
cs
mov
mov
pop
aad
popf
adc
stc
xchg
rclb
mov
push
aam
dec
fisttpl
jle
in
cmp
sub
sub
out
sbb
out
popa
cmpsb
gs
add
sbb
pusha
pop
sbb
bound
add
and
mov
rcrl
cmp
xchg
test
mov
jecxz
shrl
xchg
scas
xor
testb
push
mov
mov
mov
cmp
inc
fs
add
pushaw
scas
inc
mov
push
leave
cld
sbb
xchg
scas
rcll
fcomp
xchg
mov
jp
adc
leave
mov
mov
movhps
add
push
or
adc
cltd
mov
pop
loopne
mov
jnp
sub
test
sarb
xchg
rcll
lcall
jle
cs
pushf
outsl
xor
or
mov
cld
cs
pop
frstor
ret
push
test
mov
call
das
xor
cmp
sub
mov
xorl
mov
test
and
mov
dec
dec
mov
js
popf
cmp
cmp
mov
sub
mov
sub
sbb
enter
dec
cmp
test
daa
jb
or
sub
adc
push
adc
es
push
jmp
pop
imul
jno
adcl
mov
loope
jb
movsb
pop
jb
aad
cmp
push
xor
data16
add
pusha
adc
in
mov
int
ja
pushf
popf
bound
sbb
push
rcll
andb
mov
daa
loope
mov
nop
subb
dec
mov
xor
mov
call
int3
add
xor
leave
push
sub
aas
push
test
xor
add
leave
data16
sti
push
data16
outsb
xlat
and
fucomp
adc
ja
mov
or
jns
sti
lahf
cmp
sub
cld
mov
xor
cmp
fs
scas
sbbb
scas
add
and
jg
cmc
out
push
sub
add
xor
aas
syscall
xchg
test
test
int
andb
lea
pop
mov
jb
lods
mov
outsb
pop
sub
out
or
orl
sbb
mov
jmp
cmp
stos
mov
jno
movsb
stos
stc
nop
jo
popf
repnz
mulb
int3
xchg
sbb
imul
xchg
push
je
mov
hlt
jno
adc
adc
inc
mov
push
and
hlt
or
pusha
gs
mov
addb
ffree
jle
push
daa
adc
or
imul
gs
xchg
jno
dec
sbb
dec
outsb
fstl
xchg
xchg
mov
sahf
iret
loope
push
je
mov
insb
and
add
repnz
icebp
imul
outsb
stc
repz
ret
adc
add
pop
divl
and
mov
rcll
mulb
mov
cmp
int
sti
inc
cmpsb
lock
mov
lret
insl
jns
cmpl
cmpsb
imul
movsb
ret
xchg
test
cmp
outsb
pop
jb
jecxz
out
cmp
int
cmc
js
xchg
js
push
jmp
repnz
insl
xor
imul
jle
aam
mov
jg
scas
cld
or
jne
movsb
data16
daa
cmc
jmp
imul
and
imul
push
sub
nop
sub
fs
andb
inc
push
fcmovnb
pop
dec
shr
inc
xchg
dec
fstl
adc
xchg
mull
mov
xchg
push
sub
loope
pop
mov
roll
stos
inc
in
fnsave
pop
pop
lret
push
mov
popa
insl
xor
shlb
adcl
inc
pop
popf
sub
lahf
scas
mov
jno
mov
sbb
fmull
neg
inc
mov
popf
inc
push
in
jno
mov
fidivrs
lods
dec
inc
or
xchg
in
pop
fidivrs
testb
mov
popa
das
xchg
fidivrl
rorl
xchg
mov
push
or
lea
out
xchg
sub
repnz
mov
sub
mov
mov
std
dec
push
mov
push
divl
sahf
filds
dec
cmp
pusha
push
xchg
push
popa
in
in
scas
or
sahf
inc
pop
mov
cmpsl
jo
mov
push
xchg
jne
cmc
or
lcall
enter
push
lret
and
inc
xchg
mov
daa
lea
in
lcall
jmp
sti
test
fcmovbe
test
push
xlat
dec
int
ret
ret
imul
int
jmp
clc
out
jne
out
mov
pop
outsb
mov
ficoms
adc
pusha
cmp
js
mov
xor
fsubrs
jecxz,pt
add
sbb
mov
stc
mov
pushf
mov
mov
xor
mov
icebp
add
jecxz
sub
cmp
mov
bound
sub
pop
mov
pop
xor
call
jb
or
pop
mov
lds
popf
pusha
test
adc
pop
pop
sbb
jne
or
outsb
jb
jns
in
sbb
insb
or
pop
cld
jns
pop
mov
pop
pop
xchg
jno
add
pop
cmp
pushf
fcompl
adc
fdivrl
pushf
cli
outsl
outsl
cmpsl
das
shll
push
lds
orb
push
xchg
popf
or
clc
mov
add
dec
lods
inc
or
aad
pop
ja
add
or
push
loop
test
or
mov
loopne
pop
xor
sbb
inc
inc
loopne
rorl
cmp
xchg
sbb
mov
push
push
imul
inc
into
add
insl
aam
fldl
les
add
inc
js
mov
inc
push
aaa
mov
mov
mov
jp
fdivrl
xchg
cmc
push
push
in
sub
mov
push
adc
sub
sub
lds
mov
cli
mov
rep
cmpsb
shrl
test
popf
leave
popf
icebp
lods
sub
pop
sahf
aaa
lret
in
or
pop
xlat
dec
popf
lods
mov
lret
ss
call
arpl
add
cmp
xor
and
int
inc
add
add
movsl
pop
cmp
pop
sti
insl
cs
push
push
out
cwtl
add
fdivl
cmp
cmpsl
push
jno
fcompl
inc
ljmp
push
cmp
inc
in
imul
vcvtdq2ps
shl
xchg
xchg
mov
dec
mov
mov
sub
mov
mov
int3
je
imul
cltd
loop
pop
cwtl
add
lods
cmp
std
cmpsb
adc
sub
into
lret
call
push
out
aaa
jbe
inc
fxch
push
mov
jg
xchg
in
iret
jne
js
mov
movsb
int
rolb
pop
lock
pushf
mov
push
sub
mov
push
push
jbe
jle
mov
mov
fimull
dec
cmc
mov
xor
mov
pop
insl
inc
pop
cmp
icebp
jb
ret
push
sub
data16
rolb
jecxz
lds
push
or
xchg
arpl
add
mov
in
sbb
xor
pop
stos
and
inc
pop
cli
les
adc
inc
in
dec
pop
mov
push
xlat
subb
dec
popf
pop
in
lods
mov
xor
cmp
push
and
jne
sbb
pop
daa
jmp
sub
jp
cmpl
addr16
incb
aaa
cmp
dec
dec
push
lods
sbb
and
repnz
stc
sbb
xchg
outsl
leave
cld
cmc
clc
aam
roll
in
cmc
into
ss
push
inc
inc
pop
or
jae
leave
fsubs
lcall
jp
push
div
pop
lods
std
mov
xchg
leave
outsl
mov
pushf
push
je
cmp
addb
mov
inc
scas
and
dec
or
into
les
cli
xor
xchg
sbb
adc
mov
idivl
rclb
adc
aaa
bound
cmp
dec
and
xchg
mov
sub
lret
mov
or
push
mov
mov
adcl
push
sbb
push
pop
xchg
add
pusha
adc
xor
sub
aad
daa
arpl
flds
mov
popf
bound
mov
jp
fdivrp
xchg
pop
jae
std
insl
mov
adc
xchg
push
add
mov
sbb
push
aas
sbb
fucompp
fistl
and
in
test
out
pop
js
roll
clc
aas
adc
pop
mov
push
shr
sbb
insl
adc
mov
sarl
sti
movsb
icebp
jmp
sbb
jp
dec
lock
rorl
lock
lahf
cld
in
mov
lea
and
in
cli
insl
lea
faddl
sbb
cmp
sub
mov
sbb
popf
push
xchg
xor
jbe
scas
popf
sub
xchg
pop
dec
pop
orb
fwait
xlat
and
rcr
rcrb
adc
xchg
imul
mov
data16
int3
push
pop
repnz
arpl
mov
shrb
push
loope
ret
iret
xchg
repz
inc
push
cld
leave
aad
dec
sub
mov
cmp
out
ret
in
pop
sahf
xchg
ficoml
pop
mov
data16
outsb
sbbb
cltd
push
jge
xor
cld
lds
cmp
in
mov
decl
cltd
subb
mov
rcrl
mov
and
or
fdivs
mov
lods
and
mov
xor
ret
xchg
sti
hlt
ret
pop
adc
fs
sub
les
push
sbb
and
add
sbb
and
inc
lods
movsb
dec
dec
mov
gs
imul
adc
add
aam
movsb
jne
lods
pop
sub
shrb
leave
push
incl
ja
mov
inc
sbb
andb
adcb
cmpsb
push
cmp
jecxz
and
scas
imul
cmp
aad
mov
pushf
adc
pop
adc
push
push
cmc
lret
frstor
xchg
mov
jle
push
jge
decb
dec
push
fistpll
xor
mov
jo
std
nop
sub
pusha
xor
rcll
adc
in
shll
inc
and
jecxz
cmc
movsl
jmp
nop
mov
ficompl
mov
adc
pop
pop
cwtl
aaa
add
rorl
ja
mov
pop
mov
test
pop
lock
add
inc
shr
pop
jns
lds
cli
pop
jne
xchg
pushf
sarl
cmc
push
mov
add
jae
sub
cmpsb
cmpsl
push
adc
cmp
repnz
mov
into
fstl
pop
pop
daa
loop
sbb
daa
mov
mov
aaa
mov
mov
fadds
int3
sbb
hlt
and
negl
xor
cltd
cmpsl
mov
fldl
leave
cld
int3
jmp
lahf
rorl
add
or
dec
je
faddp
push
aam
push
pop
lret
out
shl
jmp
add
mov
out
inc
sahf
mov
mov
pop
or
imul
xchg
roll
aad
fldl
or
dec
mov
sbb
mov
pop
out
pop
js
mov
inc
pextrw
es
dec
push
mov
loop
hlt
mov
test
or
pop
imul
das
out
and
aaa
orb
insb
or
or
push
push
movsb
scas
adc
mov
mov
xchg
pop
shl
mov
dec
xor
cmp
or
push
push
or
fildl
lret
das
imul
xor
fs
rolb
mov
and
push
mov
dec
in
pop
or
sar
sti
subb
fwait
call
mov
lcall
sbb
inc
pop
insb
cmp
iret
jge
loope
or
inc
dec
push
fstpl
daa
cld
mov
push
add
dec
adc
fsubrs
push
out
or
lcall
xor
lret
jns
insb
loop
movsl
mov
dec
cmc
or
lcall
out
dec
or
popw
pop
test
loope
nop
xor
push
test
dec
dec
in
les
aad
sahf
add
daa
sbb
push
rcll
mov
negl
stc
xchg
mov
bound
cmp
jmp
push
call
push
jne
push
inc
inc
push
sti
shlb
adc
cltd
int3
movsb
leave
out
sbb
xchg
add
lods
pop
daa
push
cmpsb
movsb
in
cltd
and
popf
sbb
and
lea
pop
adc
inc
in
insb
xor
mov
add
loopne
daa
mov
js
xor
ja
add
in
inc
fnstsw
aam
mov
fldl
in
movsb
dec
dec
clc
imul
inc
pop
cltd
ret
inc
cmp
inc
mov
cld
popf
aad
mov
pop
xor
ljmp
jno
dec
jne,pn
ret
lods
cmp
in
mov
addr16
dec
dec
pop
jnp
lds
je,pn
js
or
and
mov
hlt
jno
loop
popf
and
into
cmp
and
mov
lret
aam
mov
and
lods
jmp
push
sbb
lods
add
lea
inc
xchg
pop
add
fidivl
fwait
mov
mov
aad
jns
jmp
movsl
mov
jns
cmpsl
shl
or
aaa
test
sub
aad
fs
jg
sub
or
sbb
sar
lret
movsl
repnz
cli
aad
rol
sarb
add
cmpsb
fstpt
mov
nop
loop
out
pop
xchg
mov
lods
ja
dec
aas
scas
add
cmp
xchg
std
or
or
and
mov
xchg
out
arpl
insb
shll
repnz
ret
rcrb
cltd
daa
test
and
add
sub
xchg
push
add
push
jo
rorb
rolb
dec
dec
and
cmc
mov
pusha
or
in
cmp
jg
movsl
or
xchg
push
sub
pavgb
jecxz
ret
repnz
xchg
push
jbe
push
sahf
jmp
fisttps
push
push
jl
sub
sbb
push
pop
fistl
dec
mul
outsb
and
xchg
pop
inc
cmc
jp
test
out
pushf
jg
leave
mov
movsl
pop
sbb
mov
loope
push
and
inc
jge
andl
xor
pop
in
pop
pop
push
arpl
pushf
add
and
xchg
ds
js
stos
jae
and
test
stos
lods
mov
pushf
add
dec
push
xor
mov
jge
jbe
movntq
out
imul
jnp
pop
rcll
test
push
lods
rep
cmpsl
das
popa
adc
inc
lods
jno
cmp
out
jg
add
mov
sub
scas
adc
jno
addr16
ljmp
mov
and
jle
adc
popf
sub
movsl
popa
xlat
push
and
setae
faddp
out
mov
adc
sbb
pop
cmpl
pop
shrl
and
das
pop
pop
or
inc
daa
cmp
xor
imul
jae
add
dec
imul
adc
std
addr16
js
ss
jmp
shl
ljmp
scas
cmp
cli
out
sbb
sub
and
xlat
scas
mov
push
sahf
cmp
imul
inc
dec
test
adc
pushf
test
and
push
arpl
jno
mov
stos
shl
xchg
sub
ficomps
jecxz
fcom
inc
icebp
lret
lcall
xorl
lret
fdivrl
inc
movsl
push
mov
andb
fsubl
add
sbb
xor
jge
arpl
aas
sahf
imul
xlat
jecxz
jecxz
fs
cmp
jne
pop
out
std
lret
mov
loopne
stos
cmp
mov
cld
xor
mov
xchg
test
adc
out
xchg
jmp
jo
push
pop
sub
dec
bound
ja
mov
pop
sti
xor
ret
rolb
gs
inc
push
lret
setp
out
or
addr16
in
push
loopne
mov
inc
stc
or
inc
aas
pop
cli
mov
jno
push
adc
mov
repz
das
daa
rcrb
nop
or
dec
add
frstor
push
in
or
push
adc
cltd
gs
jp
out
in
iret
je
les
clc
fidivl
push
in
push
mov
mov
dec
ret
jmp
mov
mov
loopne
imul
out
loope
leave
insb
push
dec
push
inc
mov
cld
mov
addl
or
leave
push
and
or
mov
inc
jmp
and
out
add
dec
scas
jo
outsb
pop
dec
jae
push
xor
sub
jo
notb
cmpsl
gs
fcmovnu
or
adc
cmp
mov
mov
lret
aam
rorb
lcall
pop
xor
jl
insb
sub
jno
in
shll
jge
or
cmp
cwtl
sub
popf
mov
call
xor
inc
imul
xchg
out
repnz
sbb
orl
arpl
push
inc
jbe
jo
inc
push
popf
lods
aad
pop
dec
clc
push
jle
out
loopne
repnz
xchg
inc
mov
divb
sbb
sub
mov
push
jne
mov
xchg
js
xor
fucomp
or
out
lods
mov
pop
imul
xchg
jmp
jnp
push
pop
sub
aas
mov
jne
data16
das
stos
nop
cld
adcb
fs
imul
jle
mov
fs
leave
push
xchg
mov
data16
outsb
xchg
jg
xchg
lods
xchg
out
and
pop
cmp
adc
loop
adc
popa
ljmp
push
mov
lret
adc
stos
jge
test
lods
xchg
pop
mov
out
cmp
cmp
out
jnp
jbe
rcll
je
lods
sbb
jnp
call
pop
pop
cmpl
je
sub
mov
push
js
mov
pop
jbe
clc
jbe
mov
sbb
loopne
data16
rcrl
and
pop
and
js
adc
imul
out
mov
andl
xchg
sbb
int3
in
scas
push
inc
mov
push
addb
les
addr16
xchg
cwtl
sbb
xor
inc
pop
fisttpl
hlt
out
mov
jo
dec
add
pop
in
sub
je
es
xchg
mov
pushf
lret
stos
lahf
outsl
mov
or
into
inc
mov
adc
aam
pop
int
mov
inc
cmp
clc
ja
pop
add
enter
nop
gs
orl
icebp
add
xchg
movsl
lea
shlb
mov
enter
sbb
mov
insb
and
lods
cmpb
and
dec
or
test
test
cmpsb
mov
mov
in
push
inc
les
xchg
dec
mov
popa
loopne
mov
clc
repz
mov
bound
push
in
pop
mov
test
mov
push
aad
mov
andb
gs
nop
cltd
sub
mov
or
lret
ss
aas
jp
shr
ljmp
and
movsl
cmpsl
dec
in
ds
shlb
xchg
xchg
sbb
ret
xor
sbbl
push
pop
daa
inc
jl
jb
shrb
mov
xchg
xor
cmp
jg
in
inc
and
jge
or
lods
push
shll
push
add
adc
xor
xchg
push
xchg
sbb
mov
jmp
jmp
sub
cmp
jg
xchg
enter
inc
xchg
or
sub
lea
aad
shlb
dec
fcmovne
xlat
pusha
xchg
xor
les
cmp
outsl
icebp
mov
mov
icebp
mov
stos
lcall
mov
rcrl
lods
js
jp
or
inc
les
ret
lds
sbb
inc
cmc
add
cmpsl
push
mov
mov
push
inc
aam
adc
enter
or
outsb
cmp
push
les
sbb
inc
jp
jno
xor
pop
sub
xchg
and
push
les
nop
in
push
lahf
add
xchg
test
xor
dec
ret
ret
and
push
mov
data16
test
out
adc
mov
jnp
mov
add
incl
testl
cmp
pop
dec
cmpsb
out
inc
cwtl
add
ss
xchg
inc
call
push
push
mov
enter
and
fmulp
or
pop
lds
test
adc
mov
sti
push
call
out
push
dec
mov
sub
inc
cld
in
jbe
xorl
cmp
xchg
add
daa
je
shrd
and
lret
mov
inc
mov
in
push
insl
jbe
daa
mov
or
adc
paddb
fimuls
mov
cmp
inc
push
push
sarb
mov
xor
insb
jnp
jmp
xchg
ret
pusha
xor
addl
mov
dec
mov
ret
nop
mov
pop
aad
mov
adc
sub
stc
xor
pop
mov
subb
pop
sub
sbb
aad
rorb
shll
movsb
mov
cmp
int
mov
xlat
or
push
mov
push
lea
lret
mov
adc
lea
jo
in
dec
es
adc
or
inc
fidivrs
cmp
add
cwtl
inc
outsb
out
xchg
sarb
mov
inc
push
fiaddl
test
pop
cmp
in
mov
push
jle
iret
mov
xchg
inc
hlt
jecxz
imul
test
mov
pop
mov
adc
jg
jmp
aad
xlat
ret
arpl
mov
pop
jecxz
outsb
push
jg
movsb
adc
dec
aam
mov
push
je
or
inc
bound
sbb
sahf
mov
inc
addr16
cmp
pusha
test
sbb
addb
push
les
xchg
roll
icebp
pop
ja
aam
ret
iret
sub
movsl
adc
xchg
mov
std
sbb
inc
neg
ud2
mov
push
sbb
mov
sub
leave
cltd
insl
jae
sbb
sbb
stc
in
sbb
cs
movsl
mov
out
cmp
loope
test
adc
xchg
dec
loopne
adc
push
iret
int
xlat
sbb
std
pop
negl
shrb
pop
or
mov
int
into
dec
aad
cs
movsb
push
movb
std
adc
push
or
test
jne
cltd
mov
insb
sbb
sub
add
lds
add
les
jo
dec
mov
out
pusha
stos
push
aas
ljmp
out
pop
add
inc
xchg
stc
fcmovu
dec
insb
jns
lea
cld
mov
xchg
in
fsubs
mov
xchg
pop
adc
or
in
clc
adc
pop
stc
pop
loop
scas
lret
push
push
imul
cmp
xchg
cmp
xchg
dec
scas
call
in
sbb
or
scas
dec
mov
pushf
scas
jge
les
pop
mov
into
dec
cs
push
aad
add
adc
addr16
adc
adc
rcll
xacquire
adc
or
ds
pop
aad
nop
ss
arpl
jae
les
jl
imul
mov
dec
in
sbb
dec
jno
sbb
out
jae
mov
mov
sarl
lock
mov
cmp
xchg
jecxz
les
jge
lock
ja
mov
cltd
mov
mov
xchg
sbb
test
loopne
gs
sub
push
sub
cmpsl
mov
jle
sbb
mov
sbb
loop
movsl
nop
xchg
dec
add
jmp
jne
xchg
jnp
stos
mov
push
test
ss
movsl
scas
ficompl
mov
iret
out
in
lods
pop
push
popf
test
ss
lret
ja
fldt
int3
incb
xchg
shll
mov
adc
scas
add
repz
jbe
daa
mov
ret
lds
add
gs
int3
mov
cwtl
scas
out
sti
push
mov
iret
mov
insl
or
insb
out
imul
stos
inc
xor
js
sahf
mov
dec
cli
adc
adc
pop
inc
cld
jge
cld
pop
es
fistl
fisubs
xor
inc
push
sub
add
sbb
pusha
outsb
and
repz
mov
mov
mov
and
test
stos
or
test
rclb
in
les
mov
sub
lods
ja
sti
cld
or
adc
ds
into
outsl
pushf
dec
pop
adc
loop
xchg
mov
mov
jge
sbb
pop
mov
dec
call
mov
push
gs
xor
movsb
mov
idivl
pop
ja
lods
adc
sar
or
cmp
xchg
fstps
push
jns
add
add
push
jno
and
iret
jno
hlt
adc
push
mov
aam
cmc
into
movsl
jne
jno
add
cmp
dec
andb
movsl
les
mov
pop
popa
dec
pop
jae
out
push
aad
jns
pop
bound
xchg
inc
xor
repnz
dec
sub
jle
inc
sub
push
mov
add
cmpsb
inc
mov
notl
add
push
mov
pop
and
outsl
testl
fildl
into
iret
je
jp
ss
lcall
or
fs
sahf
or
push
jae
or
lcall
lds
mov
pop
cmp
sub
icebp
jmp
les
sbb
push
pusha
jge
push
sub
mov
dec
movsb
les
or
js
mov
lea
xchg
ss
cmp
lcall
jo
mov
inc
jne
test
or
mov
mov
popf
fwait
mov
xor
mov
cld
in
sub
loope
mov
aas
cltd
insl
sbb
rclb
mov
repnz
test
dec
or
sub
mov
je
lret
std
sbb
xor
test
fsts
inc
cmp
rcr
dec
in
inc
xor
dec
stos
js
aam
jp
or
lock
test
fs
aam
into
rorb
mov
sub
cmpsl
mov
inc
insb
add
jecxz
out
mov
idiv
add
jmp
out
in
add
lock
sub
loop
fs
stos
mov
mov
fsubrl
out
stos
push
and
sub
in
mov
lods
in
pop
jb
jl
movsl
sub
ret
mov
lss
xlat
jl
pop
jne
sbb
pop
cwtl
pop
adc
xor
jge
pop
dec
pop
sahf
jbe
mov
push
xor
addr16
fs
movsb
and
add
jge
fdivrs
pop
xchg
loope
jbe
dec
mov
mov
pop
pop
mov
es
xor
lret
mov
insb
ja
mov
add
push
scas
xchg
cld
stos
mov
mov
out
jae
push
fistpll
cmc
std
mov
mov
and
in
insb
out
nop
inc
lock
inc
mov
mov
pop
lock
aam
lret
outsl
mov
addr16
pop
or
add
mov
xlat
mov
adc
pop
add
xchg
rcrb
loop
pop
lret
aad
xor
mov
stos
cmpl
aam
fldenv
outsl
sub
dec
sub
jp
ret
movsb
ror
adc
jecxz
fwait
push
icebp
addr16
sbb
jno
dec
psubd
mov
in
sub
push
jg
jge
xor
test
or
int
fistpll
cmpsb
mov
lds
test
mov
iret
out
mov
cmp
and
dec
sub
cmc
test
cwtl
int3
or
cmp
mov
aad
dec
dec
sub
push
add
out
mov
out
mov
test
pusha
test
adc
push
fbstp
jb
add
mov
inc
lods
add
outsb
lahf
int3
cmc
dec
outsl
push
push
ss
cmp
sbb
inc
loope
jl
inc
push
mov
pop
xor
cli
mov
xchg
scas
loop
and
xchg
inc
mov
xchg
push
in
fcmovu
jmp
pop
jecxz
dec
or
lods
ljmp
dec
lea
into
lcall
xchg
xor
mov
or
xchg
loope
sub
xchg
subb
rolb
ljmp
int3
es
outsb
sub
xchg
addr16
sahf
mov
pop
pop
add
enterw
pop
mov
dec
in
xchg
lahf
jge
nop
xchg
inc
test
arpl
inc
fwait
ja
or
xchg
adc
sarl
cltd
mov
sbb
or
mov
in
or
jmp
frstor
fmuls
cwtl
or
fs
mov
lret
sub
into
inc
push
or
xchg
lods
pop
test
add
std
mov
sbb
les
xor
lea
insb
jp
adc
xor
dec
or
call
mov
subl
inc
lret
inc
sub
repnz
enter
or
sbb
lds
or
dec
inc
out
add
outsb
cmp
aaa
fisttps
cmpb
jno
push
lcall
enter
mov
sub
in
cltd
or
aaa
xchg
ror
mov
and
movsb
mov
jne
adc
cmpsl
int
insl
fisttpll
inc
ja
xor
mov
sbb
bswap
mov
dec
xorb
les
test
fwait
sub
or
outsb
imul
jp
rcrb
dec
jle
nop
xlat
lcall
xchg
lds
push
mov
pop
mov
mov
movsb
subl
sub
lahf
popa
rcll
in
xor
mov
fs
fimuls
shlb
adc
frstor
je
es
xchg
jg
push
mov
cld
fstps
and
or
xchg
push
in
jmp
mov
mov
cwtl
mov
sarb
jae
xlat
cmc
sbb
mov
push
inc
cs
and
fcompl
out
bound
test
stos
fstpl
mov
xor
pusha
mov
or
mov
or
fsubrl
mov
loop
inc
sar
cmp
cmp
xlat
movsb
mov
test
mov
loopne
jle
std
dec
iret
mov
mov
and
pop
pop
dec
inc
orb
rcrb
inc
push
push
testb
insb
mov
sub
cmp
bound
pop
add
inc
xchg
insb
pop
xorb
push
dec
out
xor
mov
loope
lret
pop
cmp
xor
push
adc
xchg
loope
lret
movsl
mov
in
ret
inc
push
pop
mov
xchg
and
xchg
mov
les
xchg
scas
xchg
dec
fs
jno
mov
or
fsubl
outsl
lds
mov
and
dec
cmp
pushf
adc
dec
das
dec
outsb
add
into
aam
jp
ret
jo
xchg
adc
xchg
ljmp
jo
xchg
pop
fcomps
daa
mov
xchg
dec
nop
js
adc
pop
pop
add
std
hlt
sub
test
and
scas
fidivs
stos
adc
mov
push
inc
imul
rcrb
inc
clc
pop
repnz
mov
aas
xchg
stos
mov
clc
cli
xchg
fs
test
or
and
push
xchg
inc
mov
lahf
mov
push
jno
cltd
mov
std
loopne
or
mov
daa
mov
inc
lret
or
test
jmp
int
das
aas
les
loop
sbb
pop
aad
inc
cmp
inc
xor
mov
xchg
jecxz
into
lcall
xchg
mov
imul
test
out
jecxz
lods
cmp
pop
std
mov
and
rol
daa
pop
jp
mov
add
cmp
movsb
scas
cs
add
cmp
ficoml
pop
es
int3
cmp
cmp
int
mov
inc
movsb
adc
popa
pop
sub
aas
pop
out
cltd
jmp
or
mov
js
sub
jne
aaa
nop
cmp
lods
mov
and
sub
mov
mulb
adc
rcrb
dec
add
roll
lret
test
test
fstl
or
divl
hlt
das
sbb
dec
jo
movsl
lods
mov
sub
out
mov
test
int
push
jmp
and
xor
xlat
mov
loope
mov
mov
mov
in
jne
mov
mov
cmp
mov
test
jge
loope
mov
repnz
je
cmpsl
jecxz
fisubrl
jns
push
dec
push
stc
fisubrl
jns
cmp
fsubs
scas
pop
loope
dec
flds
mov
adc
pop
outsb
inc
push
lods
cmp
cltd
mov
inc
or
pop
pop
out
jmp
call
or
mov
lret
out
repnz
aas
fistpll
ja
subb
add
pop
and
clc
into
adc
inc
fisubrs
push
mov
hlt
ljmp
jl
mov
xchg
jb
push
daa
sub
fs
lret
jp
inc
mov
sub
fisttps
sbb
imul
mov
jp
in
pop
into
and
fmuls
outsb
in
inc
je
das
inc
jp
aaa
repnz
cmpsl
sub
jp
mov
test
rorb
dec
jns
inc
hlt
scas
negb
adc
cmp
aas
sub
jle
sbb
mov
mov
pop
mov
jecxz
stos
lds
inc
adc
pop
adc
mov
dec
push
ficomps
imul
fnstsw
vmovhps
ja
cmp
jg
or
pop
pop
mov
sub
lret
inc
xor
pop
stos
jge
sbb
push
fcmovnu
pusha
mov
mov
inc
mov
sub
mov
fbstp
or
sub
jns
or
cmpb
sbb
and
xor
lods
int3
inc
addr16
sbb
cwtl
int3
out
xor
jo
mov
lret
inc
pop
fistps
and
shr
mov
in
and
fcmovne
inc
pop
in
js
cltd
xor
add
out
lahf
sbb
mov
inc
add
shl
loop
pop
mov
clc
mov
and
shrb
jp
fwait
add
inc
inc
jp
or
out
dec
and
mov
mov
cmc
or
in
cltd
sbb
movsb
pushf
adc
mov
and
jge
inc
std
cmc
push
add
adc
out
and
pop
cli
mov
clc
test
addr16
cmc
loop
and
imull
mov
dec
loop
ss
aad
fists
aas
outsl
sbb
cwtl
xor
lock
xchg
aad
xor
xchg
xchg
and
mov
outsl
mov
daa
mov
jns
mov
mov
out
pop
push
arpl
xchg
movsl
test
mov
cmc
lock
iret
imul
inc
loopne
sub
xchg
mov
outsl
cmp
lahf
in
push
pop
inc
adc
mov
hlt
bound
inc
outsb
int
jb
stos
fwait
data16
repz
or
or
ds
int
sti
mov
out
push
cmp
arpl
fisubl
push
add
push
adc
out
push
dec
dec
testb
jge
push
call
aas
mov
js
shll
add
mov
pop
loopne
pop
sbb
push
push
add
out
clc
add
push
cmp
lods
jmp
bswap
outsl
pop
xor
jno
popf
xchg
sbb
jno
movsl
out
dec
adc
xor
loope
ret
insb
enter
lret
mov
popf
mov
pop
sbb
sub
popf
repz
mov
insb
adc
inc
int3
and
lcall
mov
and
lret
jecxz
lea
test
add
or
mov
cld
je
clc
xchg
pop
sub
add
jecxz
sbb
jp
and
mov
dec
mov
dec
lds
cmp
loop
xchg
jae
jo
inc
dec
in
fisttpll
fstpl
inc
in
dec
adc
mov
arpl
xorl
sahf
push
jns
rorb
in
jne
mov
push
ds
push
enter
sarb
ret
add
das
enter
pusha
mov
jbe
dec
jle
popf
push
ljmp
dec
gs
iret
repz
jns
out
sbb
inc
sbbl
inc
xchg
jmp
repz
sbb
push
out
xlat
test
aaa
push
and
imul
lret
pop
xor
nop
insb
jb
std
add
loop
dec
out
jns
hlt
iret
jnp
dec
outsl
jne
call
dec
pop
mov
mov
rcrl
sbb
shrl
mov
cmp
push
out
jle
push
outsl
push
jo
xor
int3
push
mov
pop
pop
in
ss
mov
or
sub
repz
mov
sub
xchg
je
adc
push
or
sbb
in
out
push
sub
sbb
jecxz
stc
fnstsw
es
or
mov
fsubl
sub
adc
xor
pushf
cmp
call
addr16
fisubrl
shll
jmp
in
mov
sub
popf
ds
add
and
js
jmp
or
orb
jg
test
inc
test
inc
dec
fs
in
pop
shlb
xchg
sbb
sub
fs
pop
sub
fnstenv
insb
stc
lock
and
inc
dec
dec
mov
and
jb
sahf
and
dec
sahf
push
sti
inc
aaa
sub
xchg
xchg
mov
mov
mov
aad
mov
into
mov
lds
cmp
pop
xchg
icebp
inc
pop
clc
and
jnp
cli
cmp
mov
outsl
inc
push
shlb
mov
pop
push
jg
call
dec
push
dec
shl
sbb
mov
xchg
push
pop
mov
adc
sub
movsb
jmp
sti
aaa
inc
fst
leave
xor
sbb
push
sbb
pop
xlat
and
iret
jne
cmpsb
fdivs
mov
sbb
mov
pop
mov
jne
mov
xchg
dec
jecxz
sub
sbb
xor
cmc
xor
rcrl
push
ficoml
int3
outsl
pop
ret
imul
sub
jmp
addr16
loop
push
sub
shll
repnz
icebp
and
or
pop
sbb
mov
adc
jg
rcrb
jns
adc
idivb
ja
imul
lds
gs
arpl
fs
xchg
xchg
cmpsb
xchg
out
inc
in
mov
inc
enter
push
mov
leave
inc
scas
push
imul
sub
xchg
xorl
mov
stos
xchg
sbb
pop
ja
cmp
jle
xor
mov
push
xor
add
xor
fbstp
mov
cmp
arpl
add
lods
sub
or
lea
lods
push
or
ss
test
inc
cs
pop
add
loope
mov
add
pop
fwait
push
insl
xor
mov
or
dec
jmp
add
aas
sub
jle
imul
seto
in
mov
fildl
fmul
mov
rorb
mov
add
fwait
jns
inc
cmp
pop
jle
icebp
xchg
mov
fisttps
mov
inc
mov
sti
xor
mov
bound
adc
in
xchg
push
sub
hlt
sub
in
add
xor
xchg
repnz
popf
jp
sti
lret
cmpsl
inc
sbb
ljmp
and
jp
dec
sub
cmp
loop
pop
adc
mov
ss
add
je
ja
jle
dec
pop
imul
test
sub
cltd
mov
lret
xchg
cli
push
push
sbb
inc
ds
imul
xchg
mov
insl
mov
sbb
or
es
mov
xor
adc
addr16
sti
or
xor
ret
pusha
xchg
movsb
rcrl
jge
push
adc
lea
pushf
mov
add
insb
inc
enter
sub
push
push
xchg
sub
rclb
std
mov
lea
out
sbb
insb
js
cmc
pop
addl
rorb
fwait
mov
sbbb
jl
lret
loop
jle
call
repnz
mov
jbe
pop
loope
mov
and
push
cld
and
ror
xor
mov
mov
ljmp
mov
push
dec
movsb
ds
mov
js
std
push
fdivrl
xor
or
cmp
pop
shl
cmp
mov
cwtl
mov
add
and
out
int3
dec
add
cs
jb
mov
adc
cs
js
int3
dec
jl
cmp
loopne
cs
pop
adc
sub
push
stc
and
mov
xor
jae
adc
mov
stc
aam
scas
int
jne
jle
rcr
roll
xor
mov
and
or
dec
mov
push
outsb
test
pop
aaa
mov
adc
call
cwtl
stos
mov
lods
xor
movsb
loop
cmp
sarb
cli
test
jp
shrb
sbb
and
jnp
in
fidivs
mov
sub
insb
sbb
adc
xchg
cli
inc
and
sub
pop
inc
leave
pop
ret
and
pushf
mov
data16
cmp
push
call
icebp
roll
and
aas
imul
sub
aaa
or
mov
stc
dec
stos
pop
mov
jno
jo
cmpsl
sbb
leave
scas
in
sub
push
cwtl
loop
fucomp
mov
dec
or
push
xor
mov
pop
mov
inc
dec
mov
inc
imul
push
ss
daa
jmp
sub
adc
pop
out
xor
clc
push
or
mov
stos
add
sbb
jge
loop
mov
jmp
mov
sar
sbb
pushf
aaa
xor
sysret
mov
dec
jae
ret
push
jne
daa
pop
cmp
pusha
sub
sub
sahf
movsb
test
fidivl
xor
icebp
pop
inc
lret
pop
cmp
inc
inc
push
xchg
popa
sbb
sbb
add
in
out
leave
shr
fdivrl
cli
xchg
push
leave
push
cwtl
cmp
inc
icebp
lods
inc
jnp
addr16
sbb
xchg
adc
mov
sub
mov
scas
cmp
mov
pop
int3
int
mov
fisubs
test
mov
shlb
push
pop
enter
inc
mov
mov
insl
sahf
test
stos
dec
pop
in
mov
enter
pusha
iret
mov
xor
push
inc
mov
test
ret
jmp
cmp
adc
adc
sub
aaa
mov
pop
push
loop
mov
mov
fiadds
xchg
mov
lock
movsb
fmuls
stc
je
and
lods
lea
andb
cmp
jle
or
jmp
or
in
and
xor
ret
pop
shlb
dec
out
call
jne
lds
aad
repz
jb
lock
lods
jmp
mov
xor
fsubl
mov
jl
gs
or
and
gs
iret
push
jge
sub
stos
bound
mov
inc
pop
mov
shll
xchg
es
xor
sub
fnstsw
xor
or
add
or
mov
iret
insb
inc
inc
jne
shr
mov
xchg
sbb
test
xchg
inc
jb
sahf
xor
mov
pop
xchg
push
xor
shll
jo
xchg
stos
xchg
fisubl
fxrstor
shrl
sub
jo
in
and
les
sub
cld
hlt
adc
imul
push
mov
adc
lods
cmp
pop
jmp
bound
sub
fdiv
mov
sbb
and
pop
xchg
pushf
gs
mov
das
add
push
daa
fwait
stc
ficompl
popf
mov
js
push
leave
mov
pusha
je
and
add
lcall
and
and
add
loop
hlt
push
out
pushf
cltd
pushf
sub
inc
jnp
pusha
fbld
out
sbb
stc
rcll
imul
adc
aaa
test
jle
jnp
inc
jp
pop
mov
mov
in
cmc
jo
dec
idiv
roll
jb
aam
sub
popf
dec
mov
lahf
insl
mov
jecxz
mov
ds
sahf
adc
cmpb
shll
pop
daa
xor
mov
xor
xchg
sub
mov
popf
inc
les
adc
xchg
ret
lret
xor
out
dec
inc
shrl
scas
pusha
cmpb
pop
xchg
cs
cmp
in
sub
mov
mov
je
xor
pop
int
xor
cltd
add
xchg
out
pop
xor
sbb
rcrb
adc
mov
sub
mov
jne
mov
dec
pop
fstpt
inc
pop
xor
add
aad
xchg
cmp
jno
mov
out
sahf
and
imul
sbb
nop
into
shrl
sub
sub
popa
ds
es
inc
and
mov
ljmp
imul
movsl
aad
cmc
pop
add
dec
xchg
sub
dec
loopne
pushf
fsubl
sarl
loopne
lcall
cltd
aad
xor
or
adc
lret
es
repz
xlat
ret
outsb
mov
pop
pop
mov
or
popa
push
test
fisttpl
push
push
shll
js
setns
nop
test
andb
add
pushf
enter
orl
fwait
inc
mov
or
fistpl
mov
mov
mov
lea
mulb
ss
mov
xorl
iret
xlat
or
jp
fnstcw
mov
pop
stos
adc
sbb
add
stos
push
mov
mov
mov
lods
mov
cmp
test
pop
jo
and
stc
add
inc
dec
rol
ja
cltd
dec
sbb
dec
dec
sarb
int3
andl
fwait
pop
inc
rorb
hlt
mov
out
pushf
pop
sub
insl
push
dec
fcomps
xchg
mov
das
push
cmpsb
add
ljmp
cmp
jne
pop
add
push
mov
push
xchg
es
jnp
xor
movsl
daa
fcoml
sub
cld
rol
cmp
push
cmp
jle
ret
outsl
sub
arpl
std
cmp
repnz
out
lods
andl
xchg
mov
mov
add
test
test
inc
xchg
jmp
sbb
int3
mov
daa
xchg
outsl
mov
shll
jae
jne
inc
inc
inc
xchg
cmp
rcrb
push
cmpsl
sbbl
cwtl
loope
outsl
pop
nop
sahf
loopne
push
jg
int
and
or
xchg
in
mov
push
ds
pop
out
xchg
dec
stos
int3
cli
adc
cmp
xchg
sub
sarl
in
inc
fs
and
pop
push
mov
mov
sbb
cltd
or
push
es
or
cmpsb
dec
mov
mov
jns
or
mov
jno
dec
mov
aam
cmpl
movsb
mov
repz
call
call
sub
jbe
iret
cmp
stos
add
push
mov
lea
xor
shll
push
push
cmc
int
in
inc
and
cmp
sti
repnz
xor
jno
out
sub
sub
dec
fcoms
movsb
insl
movl
adc
inc
jl
aas
mov
repnz
scas
cwtl
mov
fnstsw
aad
xchg
stos
out
stos
fisubs
pop
push
mov
inc
dec
or
test
scas
stos
cwtl
in
cli
rolb
mov
or
mov
aad
and
shrl
aas
mov
jmp
xor
in
es
adc
std
inc
cmp
fwait
xchg
pop
int
adc
nop/reserved
jns
sbb
mov
push
clc
test
cmp
mov
mov
jne
sbb
add
mov
jecxz
push
xor
rcl
cmpxchg
or
add
ds
cmp
jge
scas
pop
aam
dec
sbb
push
mov
outsl
pop
jl
and
addb
pop
ror
hlt
mov
dec
rcrb
and
sbb
jns
aas
cmp
imul
sub
xor
call
cmp
in
adc
test
lcall
out
lock
sahf
sub
add
rcll
or
lcall
arpl
stos
jle
push
pusha
fs
jnp
cmp
stos
dec
mov
into
add
rcrl
aad
in
inc
mov
repnz
imul
add
pop
es
dec
loope,pt
xor
ja
lret
int3
adc
repz
push
inc
mov
call
ds
test
call
adc
jae
cld
cmpsb
push
mov
sub
sbb
inc
lcall
sub
fwait
mov
cli
iret
jecxz
mov
mov
cmc
lahf
les
push
pop
lock
or
fmulp
jb
pop
pop
fdivs
loope
mov
jp
out
cmp
call
pushf
xor
test
fwait
mov
jle
dec
repz
jle
xor
sbb
pusha
outsl
inc
add
adc
fstpt
xor
icebp
cmp
sbb
insb
icebp
ror
mov
lds
shlb
test
adc
xor
mov
mov
ret
xchg
mov
out
push
push
adc
movsl
mov
mov
lock
push
push
add
enter
mov
repnz
rcll
xor
adc
push
ret
sub
sbb
lods
adc
mov
mov
sub
repnz
ret
xchg
xchg
dec
push
in
inc
jg
sub
add
or
fiaddl
ljmp
stos
rorb
push
in
pop
cmp
test
sub
dec
scas
sbb
jo
cmpb
rorl
hlt
xor
loop
and
push
movsl
mov
stc
adc
xchg
xor
imul
out
pop
pusha
imul
insl
mov
pop
int
lock
jnp
fiadds
dec
in
dec
data16
xor
dec
mov
inc
and
pop
dec
fucomi
mov
scas
pop
imul
push
ficoml
decl
or
inc
stc
push
daa
repz
ret
jle
enter
popf
jl
push
aas
pusha
test
movsl
inc
jno
clc
imul
xor
movb
mov
xchg
inc
lods
or
and
xor
lock
cs
xor
dec
sbb
arpl
push
dec
repz
mov
push
enter
mov
adc
mov
xchg
bound
dec
push
and
xor
clc
mov
imul
cwtl
pop
xor
insl
test
je
push
mov
xchg
out
jno
daa
das
add
inc
xor
sbb
test
and
cmp
pop
testl
jbe
daa
bound
pop
xor
fdivrp
inc
sbbl
jo
stc
mov
stos
and
dec
pop
lret
rclb
orl
fldt
clc
xchg
add
cmp
adc
xor
lret
leave
lret
mov
adc
fisubrl
cmp
out
push
or
jne
pop
add
push
imul
jne
outsl
jle
pop
mov
hlt
cmpsb
mov
rorb
inc
mov
sub
test
and
or
repnz
jb
xor
xchg
repz
les
lods
test
push
addr16
outsl
mov
jle
adc
popf
lcall
mov
aam
stos
pop
xchg
dec
jnp
mov
lret
mov
fs
pop
add
mov
mov
mov
inc
or
lahf
add
sub
fstpl
inc
in
add
ficomps
insb
pusha
dec
sub
pop
xor
add
loop
rcr
cli
cwtl
stc
and
push
gs
pop
pusha
out
mov
cmp
mov
outsl
out
fdivs
rorb
lret
test
in
or
inc
in
mov
test
pop
sahf
xchg
iret
js
mov
xor
mov
jnp
lahf
and
cmpsl
mov
mov
int3
insl
jbe
inc
jl
out
sbb
scas
inc
xor
cmp
xchg
xchg
push
pop
cs
aam
std
push
movb
mov
push
ret
xor
mov
xchg
test
aam
sbb
push
stc
pop
or
cmp
imul
push
cvtps2pd
add
nop
iret
xor
add
cmpsb
ja
nop
divb
insl
cmp
pop
or
xor
in
xchg
push
ljmp
das
shl
xchg
mov
xchg
into
dec
in
xchg
imull
adc
add
aad
out
pop
dec
pop
mov
movsb
push
or
cwtl
or
in
repnz
je
ds
cmpl
xor
sbb
cmp
je
lret
ror
insb
fcoms
pop
xor
inc
jge
mov
and
ja
pop
bound
les
xchg
gs
and
inc
mov
ljmp
push
std
enter
add
imul
jo
push
scas
or
sahf
lods
in
ljmp
dec
inc
fmuls
testl
xchg
push
inc
shl
inc
stos
push
mov
add
scas
fs
mov
mov
xor
push
icebp
fst
adc
rolb
cmp
mov
test
jecxz
push
jl
jae
adc
mov
in
mov
or
in
add
call
scas
dec
push
out
loop
divb
xchg
pusha
xchg
sbb
sbb
cmp
fnsave
jl
mov
addr16
ds
or
das
sub
aaa
xor
shlb
jne
cmp
jo
in
add
inc
xor
fistpl
int3
inc
in
sub
inc
jns
push
push
or
movsb
xor
xor
push
hlt
jb
mov
outsb
das
ret
push
inc
std
mov
push
xor
mov
mov
xchg
out
rorl
orb
fldt
cs
aad
lods
jle
not
sbb
jae
ret
sub
cmpsl
xor
jl
ds
ds
jne
shl
and
xor
xor
fcomps
push
in
aaa
jmp
add
cli
loop
inc
dec
push
popa
clc
push
mov
jo
push
aaa
jo
xlat
inc
mov
inc
sbb
xor
push
xor
hlt
xchg
jp
xchg
sub
enter
ss
rcrb
data16
ljmp
xor
and
push
and
insb
fisubrs
add
lds
loopne
out
shl
ret
orl
stos
xor
popf
pop
decl
cmp
mov
cmp
xchg
xchg
mov
pop
push
in
in
push
decb
outsl
int
int
mov
or
pushf
mov
cmp
sti
js
test
xchg
add
imul
nop
lcall
mov
mov
pusha
jg
dec
mov
dec
xchg
cld
jmp
stos
aas
clc
scas
cmc
fnstcw
cli
add
and
xor
loopne
pop
cmp
mov
pop
int3
ret
sub
jle
aam
dec
movsl
fstpl
mov
test
test
adc
hlt
stos
fs
mov
fldenv
mov
push
stos
mov
inc
shl
stos
dec
les
jmp
cmp
jl
out
subl
stc
mov
or
push
ret
xor
lahf
dec
dec
cmpsb
pop
mov
xor
stc
xchg
push
and
mov
je
fs
popa
scas
pop
sub
aas
xchg
jecxz
test
mov
repz
enter
jns
jne
mov
sbb
je
jns
sub
sbb
test
lret
hlt
out
mov
push
adc
ja
movsl
mov
lods
push
outsl
out
push
lock
mov
mov
cmp
pop
dec
pop
xchg
iret
outsl
or
sbb
pusha
int
sub
mov
push
in
xchg
pop
pop
xor
jmp
and
scas
loopne
std
pushf
sti
push
adc
outsb
xchg
cli
cli
xchg
movsb
test
dec
cs
pop
dec
jl
pop
jg
test
adc
dec
repnz
xchg
xchg
enter
sub
sbbb
xchg
pop
hlt
mov
mov
xor
ds
movsl
ror
mov
out
adcb
sbb
mov
mov
mov
sahf
or
mov
scas
out
jmp
iret
pop
mov
fcmovnu
leave
aam
icebp
in
mov
mov
xchg
fstpl
pop
lds
pop
sub
ss
or
pop
lods
jg
lock
dec
mov
mov
jo
mov
arpl
ret
outsl
jne
add
out
outsl
xor
lea
xchg
cmp
lret
stc
push
aam
inc
pop
sbb
fcmove
shll
enter
js
jle
hlt
sbb
mov
sub
mov
lds
cmpsl
pop
mov
es
repnz
mov
iret
or
gs
mov
xor
push
std
std
sub
sbb
jge
jle
andl
adc
insl
sahf
dec
xchg
out
fcomps
gs
enter
insb
lock
push
lods
stos
andl
in
jb
fcoms
sbb
hlt
xchg
jnp
aad
or
call
shlb
inc
sbb
cmp
out
shrl
and
in
cltd
cmc
push
and
dec
jmp
inc
jo
mov
repz
testb
adc
andb
ret
mov
cwtl
fldl
inc
cmp
mov
ret
out
lds
jb
fldcw
and
dec
mov
outsl
jecxz
sti
sub
and
jg
test
adc
fidivl
mov
jno
inc
inc
push
das
pop
cmp
xlat
ss
scas
jle
imul
jg
cmp
lret
and
mov
mov
pop
push
mov
mov
or
jno
outsl
push
adc
pop
mov
popf
mov
lfs
xchg
enter
jnp
xchg
scas
ljmp
faddl
cltd
ss
sub
adc
dec
clc
cmp
add
cmc
cmp
or
sbb
xor
mov
push
clc
cmpsl
orb
adc
pusha
movsb
loope
add
movsb
cmp
and
sahf
fsub
and
jno
mov
sub
add
push
stos
push
imull
ret
adc
push
push
dec
cli
stc
bnd
inc
and
in
adc
mov
pusha
movsb
pop
pop
push
xchg
cmp
xchg
clc
scas
das
divb
mov
inc
ja
test
ja
cwtl
lods
fstpt
xor
sub
pop
mov
mov
fcmovb
in
pop
xor
and
push
push
xor
dec
push
andl
test
sub
sub
mov
ret
paddusb
pop
hlt
cmp
pop
cmp
mov
cmpsb
or
xor
inc
aaa
enter
cmp
sub
xchg
es
adc
loopne
shlb
or
jmp
or
iret
dec
ficoms
xchg
push
call
daa
xchg
mov
fdivrl
jmp
popf
repnz
movsb
mov
push
aas
sbb
jae
sub
sbb
pop
out
icebp
fwait
pop
repnz
ja
push
ficomps
mov
mov
jmp
rcrl
insb
push
hlt
fmuls
shlb
aaa
int3
dec
xchg
in
loopne
in
not
adc
and
sbb
test
jnp
push
cs
cmpsl
lea
push
jecxz
mov
lds
cmpsb
scas
cmp
mov
or
std
cwtl
jno
cmp
mov
pop
jmp
push
xor
jnp
popf
adc
inc
loop
push
push
clc
in
pop
mov
enter
mov
orl
push
add
xchg
shl
xchg
xor
push
icebp
cmp
movsl
push
or
sarb
out
and
es
push
push
and
mov
xlat
add
das
jne
xchg
adc
in
lret
cld
xchg
xor
mov
es
adc
aas
pop
lahf
sbb
and
and
jnp
mov
adc
lods
jmp
xor
fs
mov
int3
cmpsl
cltd
sbb
out
shrl
jmp
mov
push
mov
cli
out
fcomip
adc
inc
cmp
dec
inc
cmp
je
insb
aas
daa
or
stos
movsl
pop
andl
jg
test
inc
movsb
xor
dec
add
inc
cmpsl
popa
or
push
fnsave
cli
pop
movsl
mov
sub
adc
pop
dec
mov
gs
stos
inc
hlt
and
dec
testl
pop
shrl
daa
sbb
pop
sbb
les
lcall
pop
popf
push
jg
dec
and
xchg
push
pushf
mov
inc
sarl
fildll
leave
movsb
push
pushf
insb
inc
insl
in
notl
sub
add
fidivrl
rol
jbe
mov
test
pop
jne
scas
popa
in
popa
out
out
jmp
or
xor
lcall
icebp
adc
sbb
sub
xchg
aaa
sub
fcoms
adc
add
and
inc
pop
or
adc
add
pop
lds
cmp
shrl
pop
sbb
xor
inc
movsl
int3
inc
inc
leave
push
orl
aaa
fiadds
dec
mov
adc
scas
push
jl
lahf
repnz
xchg
pop
clc
xor
sbb
lock
lgs
js
test
pop
inc
pop
inc
jae
push
gs
mov
jg
movsb
jb
jge
jb
mov
out
fwait
andb
or
mov
or
push
cwtl
mov
aas
jb
inc
cmp
adc
loopne
mov
leave
dec
dec
lret
mov
mov
push
and
pop
mov
mov
ret
xchg
xchg
out
and
psubsw
dec
ljmp
xorl
fstpl
lods
push
jle
rcll
lea
hlt
fdiv
mov
jo
xorl
cmp
test
and
pop
scas
pop
sahf
in
nop
cmp
je
repz
loopne
mov
imul
sbb
and
cmpsl
sub
daa
xlat
inc
jns
sub
repnz
push
jo
mov
xchg
imul
in
sahf
jb
inc
fnsave
cmc
ret
int3
adc
sbb
popf
clc
pop
out
adc
mov
mov
jns
sbb
inc
sub
jg
cwtl
int3
adc
sahf
or
push
inc
dec
adc
out
mov
add
sti
mov
push
fdivrp
sbb
sub
pop
cmp
insl
fbld
ret
adc
aam
cmp
vmovddup
scas
clc
pop
aaa
jne
cltd
mov
push
cld
test
insb
into
int3
sbbl
adc
jle
fcoml
sbb
inc
mov
shr
fwait
mov
loope
testb
scas
out
sub
xchg
cmp
xchg
popa
jg
stc
subl
mov
push
mov
stc
sub
fldenv
pop
clc
sbb
in
pop
sbb
jmp
rorl
lock
rolb
sub
mov
pop
out
jne
lret
fcmovnbe
mov
lea
adc
dec
jb
hlt
out
stos
or
test
and
adc
mov
mov
aad
add
dec
jmp
jp
mov
pop
in
sub
cmp
test
ss
outsb
insl
js
test
loopne
inc
sbb
lods
cmp
inc
cld
mov
mov
add
shlb
xchg
fsubrs
iret
shl
mov
push
sub
jge
sbb
inc
lds
and
insl
cmp
mov
xchg
dec
aaa
push
movsl
jae
jns,pn
push
shrb
dec
aad
cmpsl
mov
adc
sbb
mov
rclb
repnz
out
and
cld
cmc
icebp
xchg
imull
push
add
sarb
je
push
stos
pop
xchg
iret
test
repnz
add
push
dec
pop
push
xchg
jbe
lods
loope
push
shll
or
cmp
xor
sub
ds
fsubrl
call
push
outsb
inc
dec
sub
mov
mov
stos
pop
imul
shll
into
fdivp
push
inc
pop
ljmp
out
add
mov
pop
lret
lea
psrlq
inc
nop
lret
mov
movsb
ljmp
lret
mov
fstpl
sbb
out
add
adc
imull
sbb
mov
push
sbb
inc
shl
lea
mov
cmp
mov
mov
inc
stos
iret
aam
add
or
or
xor
xor
mov
push
push
fiadds
pop
mov
dec
cli
cmpsb
adc
and
xchg
xchg
in
pop
pop
sbb
test
and
pusha
mov
out
fidivrs
jge
test
stos
roll
scas
mov
push
xlat
mov
lock
cmpsl
scas
lods
pop
adc
cmp
std
jo
adc
aam
mov
mov
mov
sub
ja
or
jns
pop
xchg
addr16
or
cmp
orb
dec
mov
fwait
daa
stos
xor
cmp
add
mov
ss
xlat
pop
cmp
outsl
jne
fsubrp
and
enter
jmp
jl
sub
sub
or
sbb
mov
sub
movsl
inc
xor
xor
daa
dec
jb
xor
mov
xchg
sub
sub
test
scas
outsl
sbb
aaa
sbb
mov
push
in
xchg
adc
sbb
and
in
cld
in
lods
lock
movsl
repnz
sti
push
mov
hlt
push
mov
pusha
inc
cmp
or
cmp
das
shll
sarl
xor
push
lods
or
xor
stos
loope
push
pop
popa
or
cmp
jnp
movsb
lock
or
ret
in
lock
or
add
dec
xor
das
lret
scas
cmpb
dec
jg
xchg
repz
subb
mov
adc
cmc
pop
into
xchg
out
and
ret
pop
jge
or
ret
mov
and
scas
out
push
add
push
dec
in
jp
movsl
arpl
iret
rorb
bound
outsb
push
and
dec
dec
nop
out
mov
or
outsl
out
cmp
ja
push
mov
sub
cli
mov
pop
dec
dec
inc
push
sbb
push
jg
sbb
push
pop
mov
cmp
push
sub
sahf
jmp
aad
iret
cs
xchg
mov
cltd
movsb
add
aas
mov
cmp
push
imul
and
pushf
sbb
popf
mov
lods
xor
xor
jae
ret
lock
push
icebp
stos
fistl
mov
sarl
imul
cli
test
shr
shll
movsb
and
daa
movsb
inc
repnz
or
andb
shll
cmc
loopne
adc
je
sub
adc
jg
dec
pop
adcl
lahf
aaa
cld
inc
mov
loopne
lods
subl
nop
gs
push
cmpsb
xchg
in
xor
cmovp
test
loope
dec
les
mov
movsb
nop
pop
push
es
jb
ss
dec
sbb
in
fbld
push
out
adc
ljmp
sbb
jg
ja
stc
jno
pop
xorb
test
jge
out
fstl
ja
shlb
xchg
sbb
repz
testl
mov
sub
paddw
lock
cmc
pusha
sub
cmp
loope
mov
xchg
jno
scas
arpl
scas
int3
sbb
and
scas
movb
pop
ret
cmp
fildll
stos
mov
xchg
fs
pop
sub
push
cli
imul
push
add
xchg
cmp
ret
mov
shl
roll
adc
aaa
enter
push
stos
and
test
xchg
cmpsb
xchg
pop
loope
mov
scas
dec
adcl
xlat
iret
ds
xchg
cwtl
and
rclb
add
and
push
lds
mov
and
jb
inc
fcoml
inc
push
adc
cvtps2pi
sti
jae
mov
into
aaa
fwait
mov
nop
dec
cmp
ret
stc
popf
idivl
jbe
mov
xorl
jnp
arpl
jge
in
push
mov
mov
leave
lea
inc
std
aaa
aaa
or
jl
lret
cmpsb
dec
pop
adc
inc
jae
in
mov
fcoms
js
sti
mov
push
inc
pop
nop
fisubl
push
push
inc
pop
xor
sub
mov
mov
mov
les
adc
push
add
pushf
xchg
adc
mov
add
jmp
loopne
ret
dec
int3
xchg
test
adc
into
mov
ja
mov
mov
data16
dec
mov
pop
jb
jp
sbb
js
xor
cmpsb
test
adc
in
push
add
xlat
call
mov
addb
adc
sbb
sarb
mov
enter
cld
subl
test
aas
and
mov
mov
push
cmpsb
aam
push
pop
je
cmp
fstpl
add
shlb
lods
push
aam
rcrb
mov
xor
fnstsw
mov
lcall
sbb
pop
inc
fisttps
sub
nop
das
pusha
fimull
push
or
push
int
shrl
arpl
or
popa
daa
cmp
bnd
test
hlt
dec
int3
lods
or
dec
sbb
mov
add
arpl
mov
lods
andb
repnz
iret
inc
mov
xor
push
into
push
mov
punpckhbw
dec
add
stc
stc
loopne
rcrl
lea
fists
xor
push
adc
out
mov
outsb
cmc
bound
faddp
sbb
inc
outsl
adc
mov
arpl
inc
jl
or
das
ljmp
mov
sbb
pop
push
and
les
push
mov
pop
mov
daa
mov
ficoms
call
cmp
out
jmp
scas
std
push
inc
out
cmp
int
int
pop
push
aas
and
jp
push
enter
or
or
mov
cltd
sti
push
jl
lea
icebp
out
xchg
jo
mov
lods
xchg
fisubrs
fcomps
pop
int3
das
or
insb
test
test
scas
xchg
cmp
outsb
dec
jle
flds
cmp
adc
jl
inc
add
decb
leave
or
sub
sbb
aas
outsl
and
aad
cs
jge
mov
fisttpll
lret
hlt
gs
adc
sahf
xchg
aam
dec
push
cmp
movb
call
sbb
cmp
lds
pop
mov
std
mov
sub
mov
fs
clc
mov
inc
out
sbb
cmpsl
dec
es
mov
ret
sbb
psadbw
mov
lods
lret
push
es
push
jno
repz
in
dec
xlat
cmpsb
dec
arpl
popf
pop
adc
cmp
in
lea
mov
sbb
xchg
testb
xchg
mov
push
pop
shll
xchg
cltd
fstp
aas
cmp
clc
xchg
xor
rcrb
mov
and
cmp
movsb
in
adc
mov
repnz
cmp
mull
inc
enter
push
clc
rorb
ret
xchg
out
push
xchg
dec
pinsrw
jo
call
pusha
sub
mov
mov
js
pop
push
xorl
jle
add
and
in
out
imul
stc
data16
jecxz
aas
stos
sahf
dec
and
or
inc
js
dec
push
xchg
xchg
mov
or
jp
rclb
push
icebp
aas
dec
test
sar
or
cmc
inc
add
push
xchg
add
out
scas
mov
adc
push
nop
dec
fdivr
outsl
rorb
mov
lods
sub
sub
ss
outsl
add
stos
sti
or
mov
and
nop
mov
pop
jp
fwait
adc
sbb
pop
movsl
lods
mov
add
adc
xchg
mov
std
xchg
cmp
inc
aaa
insl
hlt
inc
or
dec
jae
into
lock
aas
push
fwait
push
mov
xchg
daa
jne
clc
aaa
mov
sti
mov
cmp
or
and
and
jnp
mov
fsts
xchg
dec
addr16
inc
mov
xchg
cmpsb
popa
push
pop
int3
mov
mov
xchg
lea
push
das
sar
adc
mov
add
inc
pop
dec
movsl
inc
mov
cmc
test
mov
mov
mov
push
cmpsl
mov
testb
hlt
shrl
mov
cli
loopne
sahf
push
in
push
setns
sar
dec
rorb
sub
or
es
jo
sub
shll
mov
cmpsl
ljmp
jg
mov
call
mov
nop
movsb
sub
cmp
dec
jle
xchg
cld
call
mov
lahf
aas
imul
cmp
mov
sub
fdivs
sub
scas
in
inc
aaa
inc
xchg
lret
dec
scas
cld
mov
mov
xchg
xor
xchg
cmp
jecxz
or
adc
sbb
lahf
divb
sub
lahf
jmp
sbb
cli
cmp
popa
cmpsb
mov
mov
cmp
ret
cli
testb
jnp
call
and
pop
cmp
lods
ljmp
fidivrs
stos
cmp
ja
lods
jp
jg
iret
xor
mov
aad
fistpl
push
mov
push
addb
data16
fisttps
jae
sub
sbb
in
mov
cmp
or
sub
adc
inc
sbb
and
mov
sbb
adc
dec
mov
idivb
xor
push
jbe
sbb
push
jecxz
pop
sti
inc
lcall
aaa
adc
sahf
lahf
jns
or
outsl
in
jbe
add
enter
repnz
adc
mov
data16
ljmp
loopne
mov
cmp
repnz
and
jg
and
adcl
xor
fdivs
adc
jl
cli
adcb
dec
jg
shrb
fwait
es
gs
jo
test
pushf
mov
or
sub
lods
push
insl
lock
shrb
sti
orl
outsl
xchg
sbb
jge
and
inc
dec
loop
jp
mov
or
stos
adc
das
ficomps
lcall
fsts
pop
jmp
div
test
cmc
test
lea
xchg
imul
pusha
ds
aaa
in
pop
add
aaa
testl
mov
lret
insb
in
sarl
xchg
mov
xor
outsb
mov
push
out
and
loopne
jl
arpl
inc
fmulp
add
stos
in
sti
fimull
bound
mov
adc
rorb
std
jle
es
push
and
and
pop
popf
adc
shlb
push
xlat
mov
shrb
loop
faddl
fmull
and
or
lcall
ljmp
xchg
dec
and
mov
repz
lock
cmpsb
adc
icebp
fcompl
and
out
mov
jl
cli
cli
dec
mov
jl
cli
lock
ljmp
push
fiaddl
push
fldl
mov
pop
call
mov
out
repnz
out
sbb
neg
sti
stc
movsl
arpl
fsubl
cwtl
fdiv
mov
mov
aam
jp
fucomp
popf
stos
pop
jae
sahf
enter
and
xchg
mov
xchg
and
sarl
sarb
sub
add
jno
fwait
sbb
out
push
push
sub
and
mov
in
imul
negl
into
mov
add
dec
dec
cld
or
fldl
xchg
in
scas
xchg
int
stc
mov
popf
sub
stos
loop
movb
and
dec
dec
mov
mov
ret
pop
jg
loope
nop
adc
jg
inc
fdivr
lret
lcall
mov
sub
iret
rorb
add
addr16
lods
pop
lret
sbb
test
jg
add
and
int3
mov
hlt
cli
inc
lcall
inc
mov
out
cmp
dec
push
mov
dec
or
clc
mov
or
jne
jbe
lret
pop
loopne
lods
js
paddusw
jne,pt
jmp
or
les
mov
and
and
pusha
or
sub
push
jecxz
mov
pop
mov
imulb
gs
mov
dec
fwait
inc
addl
cmp
mov
jp
mov
dec
aad
dec
jae
out
imul
sbb
mov
mov
shll
mov
and
fwait
test
xchg
and
call
imull
sub
ret
add
inc
and
mov
jno
cmc
or
inc
loope
popf
fs
push
cmp
mov
movsl
icebp
sbb
gs
and
jns
xchg
lods
lret
or
aad
push
stos
dec
or
lcall
add
adc
push
inc
add
sub
ret
jg
jg
or
roll
inc
fisubs
jmp
cmp
push
test
dec
push
and
je
pop
pop
sub
pop
arpl
xchg
insb
pop
jg
pop
sbb
and
out
jge
xchg
shll
xor
sbb
addl
mov
ret
mov
dec
xchg
idivb
call
lock
out
cmpsb
or
cmc
movsb
add
mov
mov
pop
mov
imul
mov
mov
jg
cmp
fs
lret
repnz
mov
push
jbe
idivl
in
int3
scas
push
jg
imul
mov
leave
fwait
adc
leave
inc
out
mov
inc
push
outsl
and
daa
in
xchg
int3
test
lods
outsl
sbb
and
mov
in
sub
into
mov
fistpl
mov
xor
loope
cmpsb
xor
xchg
in
jae
fnsave
add
xchg
mov
sbb
hlt
stc
and
movsl
xchg
movsb
cmpl
xchg
push
adc
dec
inc
mov
dec
and
rol
iret
adc
lmsw
shll
inc
push
pop
sarb
adc
or
jl
mov
call
iret
push
pop
ss
rol
dec
pushf
in
aam
aas
sub
pop
jo
lods
lret
sbb
pusha
pop
in
xchg
ljmp
pop
lock
lds
xor
ret
xlat
scas
adcl
mov
and
and
inc
stc
mov
xchg
lods
cmp
add
xor
add
dec
mov
inc
popf
inc
out
inc
mov
scas
clc
lea
int3
pop
push
jl
cmpsb
or
stos
ret
sbb
imul
aam
loope
sti
in
imul
and
or
cmc
and
adc
mov
mov
mov
ja
add
xchg
sbb
xor
pop
fs
mov
sub
mov
addr16
ss
and
xchg
cmp
or
rolb
dec
ror
jo
out
xor
adcl
cmpsb
pushl
popf
and
fs
pop
jmp
fidivs
test
pop
test
add
adc
lahf
add
ss
mov
and
cwtl
iret
ret
sbb
push
xor
ds
stos
push
push
adc
sarl
push
jmp
out
cmp
xor
xor
jnp
cmp
fwait
mov
push
push
dec
aad
or
jl
inc
scas
movsl
imulb
leave
jo
sarb
pop
int
fsubrl
adc
push
sbb
pushf
or
into
ss
mov
pushf
sti
aam
inc
inc
adc
add
sub
inc
fmull
jb
push
insl
cld
mov
lock
push
ds
es
push
popf
push
xchg
jnp
fmuls
mov
jno
daa
cmp
test
mov
mov
cmc
scas
icebp
fisttpl
jo
adc
es
out
ds
mov
add
sbb
and
sbbl
mov
pop
out
and
mov
rorl
inc
mov
addb
xor
fbld
pop
inc
cmp
adc
and
mov
jg
push
jae
sub
cmpsb
scas
push
push
ds
mov
fs
dec
fstpt
cmp
add
xor
mov
xchg
mov
xchg
pop
es
dec
and
mov
pushf
scas
push
subw
jg
negl
pusha
nop
xor
cmpsb
int3
jle
aaa
rcll
and
cld
and
dec
push
mov
enter
outsl
sbb
or
mov
outsb
and
sarb
test
dec
out
arpl
push
aaa
inc
lock
aam
out
inc
out
enter
pop
ljmp
mov
test
leave
shll
daa
ret
jae
cmp
or
pop
lea
ficomps
push
aaa
mov
scas
aam
in
pop
int
inc
jle
jmp
lea
add
insb
dec
pop
cltd
jo
or
sub
pop
and
arpl
xor
add
scas
push
data16
lcall
push
out
mov
add
pop
out
jae
pop
jl
push
pop
dec
push
add
xor
inc
iret
loopne
push
sbb
inc
inc
xlat
pop
jae
out
xor
sbb
mov
xor
je
adc
gs
jge
shlb
fld
mov
lahf
inc
data16
mov
lock
sub
fwait
jae
sub
mov
or
das
sti
mov
idiv
popa
cmp
sahf
adc
mov
aas
enter
push
mov
add
mov
push
dec
xchg
pop
pop
jnp
ret
incb
ljmp
or
pushf
mov
insb
insb
in
jle
shlb
cmp
cwtl
sub
inc
pusha
adc
xor
cmc
or
jbe
out
fwait
mov
dec
push
xchg
pop
push
inc
popa
nop
dec
arpl
sub
iret
repnz
sub
sti
pop
and
mov
xchg
shrb
loope
aad
xchg
mov
pop
scas
or
in
push
in
sbb
cmp
mov
push
jge
ja
mov
xchg
jp
cmp
outsb
in
dec
test
push
imul
dec
adc
adc
bound
xor
sbb
cmp
push
por
sub
popf
pop
xchg
sub
sbb
jp
sbb
sub
dec
sahf
cltd
dec
mov
inc
lret
jl
sarl
test
mov
aad
xor
dec
scas
ret
jne
mov
xchg
mov
jp
add
adc
adc
sbbl
mov
dec
shl
xchg
jnp
mov
cld
dec
mov
xchg
push
inc
push
and
add
movsbl
inc
fiadds
jecxz
mov
xchg
imul
les
cmp
push
int3
mov
sahf
sbb
lret
dec
mov
jne
adc
sub
lahf
xor
leave
pop
jle
sbb
pop
repnz
cs
jmp
mov
mov
rorb
pop
lods
lret
shll
inc
pop
jecxz
fcmovnu
shll
js
movsb
gs
dec
dec
out
mov
test
cs
out
insb
ja
out
cmc
or
je
mov
pushf
loope
inc
sahf
xchg
andl
or
mov
repz
pop
xchg
lock
sbb
dec
mov
mov
or
out
cmpsl
mov
sub
cmc
pop
xchg
add
orb
mov
cwtl
insb
sti
mov
push
int
xchg
xchg
pop
mov
push
leave
mov
cmp
xor
or
inc
es
and
ljmp
notl
inc
mov
or
cmp
cmpsl
cltd
int
pop
xchg
add
xchg
call
push
inc
psubusw
and
fmuls
cli
aas
mov
inc
out
pop
add
cli
jns
sub
cli
lea
jb
scas
ja
or
das
bswap
xlat
jle
push
out
dec
lcall
adc
movsb
loope
mov
js
mov
insb
pop
ja
fucom
movb
adc
push
insb
ds
popa
test
jl
mov
ds
dec
jne
test
push
inc
mov
ss
in
outsl
sub
xchg
cmp
and
mov
pushf
test
arpl
icebp
rcrl
or
adc
cmp
cmc
adc
je
aam
push
sub
add
out
outsl
sub
inc
inc
dec
sti
pop
nop
pop
test
fcompl
test
inc
dec
dec
and
adc
fcos
pushf
ficoms
rcrl
mov
mov
mov
pop
inc
fildl
inc
xchg
cli
pop
mov
out
mov
loope
xchg
outsl
fdivrl
hlt
clc
add
dec
sahf
fbld
jl
cli
xor
push
jns
pop
push
push
and
sahf
inc
pop
jb
lret
lods
lods
ror
mov
ds
jnp
cs
cld
mull
mov
add
stos
xchg
fisttps
jae
mov
rol
cmp
sub
mov
add
push
xchg
inc
das
mov
mov
lods
roll
cmp
movsl
pop
push
inc
xor
cmp
rol
cmp
movsl
mov
in
jp
inc
icebp
jne
inc
inc
aam
adc
imull
test
aam
push
mov
pop
fbld
and
inc
pop
fcoml
inc
ja
or
jp
cmpsb
xchg
xchg
cmp
cmp
pop
ss
test
add
jns
out
pusha
ljmp
leave
dec
add
inc
mov
cmp
hlt
inc
jge
dec
lods
hlt
sub
sbb
in
cmc
mov
insl
and
clc
pop
fmuls
cld
shld
mov
mov
mov
mov
shrl
roll
adc
bound
int
adc
dec
add
fisubl
test
fidivl
dec
dec
mov
xchg
fdivrl
stos
ret
lret
xor
jl
adc
mov
loope
sub
push
jb
inc
icebp
mov
cmp
mov
cld
xor
fs
pop
out
mov
mov
loope
fimull
push
jl
pop
adc
ret
xchg
add
pop
leave
xchg
add
inc
ds
sub
push
push
fnstsw
push
add
pop
xor
dec
dec
movsb
in
leavew
xor
cmp
cmp
jbe
xchg
js
rol
dec
ficomps
mov
add
pushf
inc
cwtl
imul
in
mul
adc
pop
dec
punpckhwd
ss
jb
int3
mov
in
xchg
daa
pop
lods
or
mov
fwait
dec
mov
jle
sbb
dec
jecxz
aaa
lret
jle
jl
cmpsl
mov
lahf
leave
add
dec
pop
cwtl
pop
xchg
rorl
hlt
mov
pop
test
out
std
dec
mov
lods
imul
aam
sub
fists
adc
cmp
sarb
adc
pop
andb
cmpsl
iret
pop
mov
dec
dec
rcr
nop
sub
loop
roll
and
sub
mov
out
int3
sbb
test
test
dec
lret
lods
sub
pop
cli
mov
xchg
sbb
jg
add
int
mov
in
ljmp
jae
xchg
insb
adc
jbe
ja
xor
fs
xor
fldenv
cmc
jp
cmc
adc
orb
outsl
dec
leave
jecxz
sbb
nop
xor
pop
popa
jns
dec
popa
mov
pop
or
push
out
mov
jge
movsl
insb
jge
popf
adc
outsb
fadds
xor
lcall
pop
jecxz
add
pop
js
cmpsl
repz
stos
out
inc
call
xchg
xchg
shr
int3
lods
sub
jae
fldcw
jl
push
xchg
mov
dec
shl
hlt
jb
jp
cli
loop
push
xchg
xchg
shr
sahf
jmp
add
or
inc
in
cmpsb
scas
inc
mov
mov
ja
sahf
pop
mov
jnp
out
jbe
adc
sbb
enter
sahf
xchg
push
in
and
fldt
cmpsb
int3
data16
hlt
fisubrl
mov
shll
les
and
sub
dec
rcrl
popa
les
outsb
js
jge
xlat
lret
pop
fisubrs
out
or
xchg
cmpsl
or
mov
inc
nop
jmp
mulb
clc
adc
in
jl
daa
aam
insl
jle
fisubrl
cld
jae
push
pop
inc
cmp
cld
in
imul
adc
jb
cmpsb
in
adc
dec
inc
shl
shll
stos
into
and
xor
out
push
push
ret
mov
cmp
xchg
lods
cs
inc
sbb
loop
push
push
add
movsl
pop
inc
call
xchg
inc
jns
das
pop
sti
and
popa
hlt
dec
mov
push
sahf
jbe
or
mov
lret
out
cmp
shl
cs
daa
lcall
mov
mov
cmpsl
imul
adc
and
mov
mov
mov
int3
gs
shr
pop
movsl
inc
or
jecxz
adc
outsb
cltd
pop
add
orl
out
out
add
aaa
or
add
and
aaa
mov
push
scas
test
movl
inc
jae
aad
push
lcall
mov
inc
pop
out
cmp
dec
lods
cwtl
shlb
push
pop
xchg
adc
add
sbb
jb
lcall
cmp
js
jp
mov
push
cmpb
mov
cmp
fsubrs
iret
jmp
and
mov
cmp
jp
in
push
subb
cmp
jecxz
sbb
shrl
cmp
loopne
frstor
repnz
test
xchg
cltd
jno
pop
push
in
popa
cmc
sbb
incb
sbb
sub
push
inc
jno
sub
dec
aad
lcall
mov
mov
mov
imul
and
shrl
adc
arpl
mov
in
js
aas
fwait
mov
ljmp
lret
mov
sar
sbb
xchg
dec
inc
adc
es
push
lret
dec
jbe
xor
sub
pop
pop
add
mov
in
xor
popa
and
clc
scas
mov
fiaddl
inc
or
jns
pop
push
nop
cmp
add
cltd
sti
pop
adc
shlb
arpl
jne
push
push
outsb
les
xchg
test
wbinvd
nop
mov
dec
sbb
out
int
pop
mov
cmp
mov
pop
cmp
bound
test
jne
pop
mov
cmp
and
jno
mov
jno
push
fsts
pmaxsw
ljmp
fsubp
in
add
and
data16
in
mov
out
and
rorl
dec
arpl
cli
sbb
xor
push
xor
mov
imul
js
mov
push
add
mov
test
pop
cmp
mov
aam
mov
movsl
jmp
adc
pusha
fistps
les
ss
pushf
jl
inc
ljmp
mov
cmpsb
or
pop
or
adc
outsb
adc
push
je
push
mov
fdivp
pop
jl
jno
mov
aaa
aad
in
in
in
xchg
stos
imul
pop
mov
xchg
sub
std
sbb
and
pop
xor
pop
mov
aaa
mov
push
jo
daa
jg
push
aaa
outsb
jb
and
cwtl
pusha
daa
mov
cmpsl
cmc
jno
fdiv
bound
mov
jnp
into
sahf
mov
test
and
ljmp
push
sbb
dec
mov
mov
mov
mov
mov
pop
lcall
pop
jnp
mov
adc
inc
inc
cmp
fistps
fsubl
adc
xchg
lea
mov
cmp
lcall
and
sub
lahf
xchg
leave
std
insb
ss
adc
insb
lret
pop
int3
xor
and
mov
jbe
xor
shl
scas
daa
pop
ret
xchg
mov
pop
jne
mov
mov
cmp
es
push
in
test
testb
or
mov
dec
mov
mov
xor
aad
cmp
adc
xchg
stos
mov
xor
inc
sub
js
pop
cmp
ss
and
outsl
adc
pusha
shrb
adc
stos
pop
in
ljmp
or
repz
mov
mov
loope
xchg
inc
out
xchg
mov
scas
mov
sbb
adc
mov
mov
mov
stos
out
mov
or
adc
mov
mov
mov
cltd
insl
mov
push
jmp
mov
adc
out
ja
ficomps
push
arpl
xor
push
rep
jnp
nop
enter
mov
arpl
aas
inc
push
popf
scas
mov
pusha
jnp
xchg
mov
pop
sub
dec
popa
adc
in
loope
jle
lret
adc
gs
push
icebp
nop
mov
mov
fnstenv
stos
xor
out
jbe
push
movzwl
push
adc
cmp
pop
sub
pop
jp
es
mov
test
call
dec
das
mov
dec
or
clc
mov
or
orl
cmp
push
jge
gs
jns
int
rorb
cmp
daa
xor
negb
icebp
adc
jp
adc
loopne
mov
enter
fwait
stos
dec
adcl
xchg
in
inc
lahf
outsb
stos
or
push
jns
iret
xchg
insl
pop
jecxz
cmp
or
cmp
mov
stos
cmp
sub
clc
stos
out
aaa
and
sbbl
sti
dec
rcrb
lods
jo
xor
mov
sbbl
pop
mov
dec
adc
jmp
add
aad
cmpsb
decl
fidivl
imul
imul
pushf
push
xchg
js
cmp
xchg
bound
pop
sub
xor
and
inc
pusha
stos
repz
icebp
repz
fprem1
inc
test
fstl
mov
xchg
mov
fwait
cmpsl
andl
push
scas
rorb
in
es
jo
pop
pusha
mov
or
mov
sub
into
inc
sbb
jge
dec
mov
test
pop
pop
dec
mov
mov
xlat
jne
popa
sti
pop
adc
dec
outsb
pop
bnd
add
mov
jmp
fs
push
xchg
inc
mov
xchg
jmp
add
gs
jno
sbb
sahf
imul
mov
aaa
rorl
dec
pop
add
lahf
xor
xchg
or
xor
adc
in
shr
mov
sub
sahf
cmc
mov
mov
jo
das
pop
jle
sub
push
loope
lds
gs
movsb
mov
shrb
push
jbe
call
dec
lahf
mov
ret
std
nop
pop
xor
int
addr16
lahf
xor
jg
dec
inc
and
loopne
out
pop
les
sub
test
inc
test
sbb
lods
pop
mov
adc
push
bound
jne
das
pop
aaa
dec
and
in
movb
rcr
std
imul
insl
mov
test
cmp
in
xchg
lcall
loope
xor
aas
xchg
jo
mul
scas
xchg
adc
movsb
popf
jno
mov
out
dec
pop
add
out
cld
mov
dec
into
pop
pop
jne
insb
insb
pop
add
in
les
xor
inc
aas
sbb
in
fnstenv
mov
lods
stos
dec
jle
mov
cltd
and
cmp
out
add
push
dec
xchg
repnz
mov
add
sbb
add
add
xchg
pop
pushf
push
mov
int3
jnp
mov
jbe
inc
call
sbb
or
jecxz
rolb
jo
xor
lret
mov
mov
ja
jnp
push
and
xchg
pop
movsl
lock
clc
hlt
or
sbb
incb
ljmp
mov
icebp
popl
jnp
jnp
pop
addr16
sub
rcrb
lods
push
mov
out
fs
pop
std
xchg
repz
out
lea
jp
sti
das
adc
push
lods
and
cli
stc
and
outsb
je
popfw
jl
mov
int3
roll
lds
mov
repnz
lret
andb
in
sub
xor
loopne,pt
mov
outsl
mov
dec
push
pop
jne
nop
outsl
jae
fisubl
and
scas
mov
fisttpll
xor
mov
adc
outsl
sbb
hlt
push
push
dec
sti
xor
cmc
dec
mov
xchg
cmp
stos
dec
inc
adc
imul
mov
nop
repnz
jno
push
pushf
std
adc
lods
dec
jns
push
cmp
clc
cltd
cmp
xchg
jbe
xchg
or
jno
push
sets
out
mov
fld
lret
ret
mov
hlt
pop
or
mov
jle
xor
aad
mov
push
mov
xor
mov
pop
dec
rclb
out
clc
inc
lret
int
dec
adc
enter
or
lret
xchg
notl
or
push
nop
fs
mov
adc
mov
mov
mov
call
and
and
xchg
push
fadds
test
jg
inc
sub
lods
in
shll
xor
in
add
es
mov
test
pop
fs
xor
out
xor
aas
addr16
imul
inc
jns
and
std
mov
push
or
aam
pop
gs
xchg
and
fdivs
ds
pop
int
arpl
ja
add
mov
push
rcll
inc
leave
insb
add
xchg
daa
std
sub
jb
inc
in
sub
hlt
in
insl
iret
pop
xchg
sbb
and
addr16
in
divb
icebp
push
cld
jno
gs
pop
scas
js
xor
pusha
fcmovbe
in
jge
and
add
dec
xchg
and
jno
add
in
mov
inc
call
or
push
mov
cwtl
dec
cmp
cmp
mov
out
test
lea
mov
lods
cmp
divl
mov
leave
das
mov
decb
inc
shll
inc
mov
out
jp
dec
in
add
jg
or
sbb
inc
andl
and
imul
cmpsl
sarl
int3
inc
rcl
inc
ja
outsl
leave
jl
popf
mov
cmpsb
adc
mov
xor
mov
shr
sub
fdivrl
xchg
stos
xor
subl
push
dec
cwtl
jno
xchg
rolb
jge
cld
notl
popw
mov
sti
mov
icebp
sahf
inc
icebp
pop
ss
andl
loope
fistl
icebp
fcoms
out
andb
jp
in
scas
popf
mov
push
cwtl
lret
pop
mov
lahf
add
ss
mov
lret
fs
cld
push
or
dec
hlt
rorl
xchg
xchg
jo
sub
cmp
fmull
test
jns
mov
cli
jbe
jbe
insb
jge
scas
stos
xor
bound
cs
outsb
imul
inc
shll
out
imull
xor
out
ss
jge
gs
inc
xor
ds
iret
sar
outsl
sub
inc
fwait
push
scas
je
sub
fdivrs
push
inc
pop
or
cmp
test
mov
pop
push
sub
sbb
leave
fiaddl
sbb
ss
mov
test
mov
divl
and
cs
mov
imul
dec
cmp
fs
dec
pop
lods
das
inc
mov
push
mov
mov
cwtl
test
ja
sbb
push
push
xchg
xchg
jge
orb
imul
clc
mov
int
pop
shll
dec
pushf
inc
cs
lea
inc
inc
insb
pop
xor
ret
inc
cwtl
inc
lret
pop
lods
es
mov
mov
and
mov
lods
dec
jmp
push
jnp
adc
pop
lahf
insl
test
sub
fucompp
out
cmp
jl
mull
leave
cmc
out
sbb
insl
and
clc
std
fsub
jnp
subl
or
add
cld
mov
and
push
pop
xor
pop
push
aas
mov
inc
jnp
dec
pop
push
mov
std
loop
pop
mov
dec
add
iret
inc
daa
arpl
outsb
dec
movsl
pop
lret
sub
testb
or
aad
test
push
dec
ja
scas
adc
sbb
mov
data16
mov
cmp
cmp
jns
fwait
push
and
aas
xor
sub
pop
jno
mov
push
mov
test
insb
mov
out
out
sub
in
xchg
imul
pushf
movb
jnp
pusha
sbb
sub
insl
push
aam
sbb
fsubl
sub
nop
xchg
ljmp
sub
pop
pop
notl
call
fisubs
sbb
add
lods
pop
imul
addl
shrl
pop
and
sub
jge
movsl
inc
lock
pop
and
ljmp
jb
sti
aas
and
xchg
push
rclb
ret
pop
push
or
pop
add
imul
inc
jmp
mov
xor
ficoms
rolb
push
repnz
xor
fisubl
jae
xor
adc
lods
cmpsl
jecxz
cmp
leave
adc
mov
push
adcl
lds
pop
imul
les
ss
call
into
popf
jno
jg
push
xor
sbb
in
sbb
leave
mov
and
pop
std
jo
movl
add
leave
mov
cmc
sbb
sub
cmpsb
cmp
in
jae
lret
jmp
rolb
mov
aad
mov
subb
fisttpll
xchg
jmp
sbb
in
mov
or
jb
or
nop
xchg
in
push
add
sub
cs
scas
add
xchg
insb
jl
sub
and
sahf
lock
push
adc
inc
mov
fldl2t
int
sbbl
movsb
mov
mov
mov
repz
dec
cmpsb
push
xor
inc
cld
mov
jp
pop
inc
adc
lods
cli
icebp
adc
xchg
cmp
imul
das
cmpsb
and
aam
and
lods
sub
xchg
insl
cli
jb
sbb
lods
cwtl
shlb
stos
shl
dec
inc
add
sub
and
fs
push
sub
xchg
pop
push
adc
sbb
mov
adc
fisubl
dec
xchg
push
jg
xor
push
cmp
sub
xchg
xchg
je
cmp
dec
xchg
and
jge
mov
push
pop
xor
cli
int3
jle
push
adc
and
pop
push
clc
repz
mov
lea
test
pushf
imul
cld
and
mov
stc
inc
mov
pop
int
sub
pop
cmp
jge
mov
ss
push
popf
or
add
jmp
and
fidivrl
sub
leave
jbe
lahf
pop
loop
ret
data16
or
xlat
mov
out
mov
cmp
aam
cmp
mov
xor
das
mov
mov
sbbl
and
popf
out
xchg
push
les
or
dec
mov
xchg
xchg
jge
in
mov
jb
push
mov
sub
mov
das
sub
mov
add
cmp
mov
mov
jge
mov
mov
popf
or
sub
sbb
add
gs
mov
mov
cmp
adc
es
push
nop
push
ret
xchg
jp
push
fcomps
ljmp
in
mov
int
mov
or
lcall
cli
loopne
imul
mov
mov
shl
pushf
out
movsl
mov
imul
loope
cmp
out
inc
mov
loope
popf
mov
mov
sbb
mov
arpl
jl
adc
jae
push
mov
fistpll
push
pop
mov
fisubrs
dec
xchg
aam
aam
stos
jb
adc
add
rolb
adc
idivb
inc
xchg
repnz
push
and
mov
dec
jge
outsb
and
pcmpgtb
lret
mov
adc
push
cli
jnp
cmp
repz
inc
mov
fildl
cmc
shrb
fldenv
push
les
xchg
adcb
pop
add
scas
jb
mov
cwtl
movsl
outsb
xorw
cwtl
mov
lcall
mov
inc
lahf
rclb
pop
das
sbb
dec
rolb
imull
dec
mov
pusha
sbb
shlb
std
pop
cltd
pop
popf
mov
aas
out
movb
mov
pop
lret
dec
jp
cs
scas
mov
mov
jo
or
test
dec
mov
pop
les
jno
dec
adc
add
ret
test
push
mov
cltd
ret
and
cmp
popa
xchg
inc
cmc
lds
sbb
outsb
adc
js
mov
dec
fisttpll
out
mov
sbb
jl
sbb
and
fisubrs
popa
jo
jle
mov
mov
clc
push
jbe
xor
adc
call
rorb
mov
insl
sub
mov
inc
dec
icebp
push
fbstp
adc
add
mov
movsb
xor
loopne
cmp
lea
into
mov
pop
scas
int3
cmp
fildl
sub
in
mov
shl
cwtl
mov
test
sub
dec
divl
pop
fbstp
in
icebp
sar
add
pop
jecxz
shrb
aaa
xor
dec
sub
mov
pop
test
arpl
adc
out
cmp
adc
sbb
daa
push
repz
lea
test
mov
cmp
mov
into
push
sbb
bnd
lea
xchg
pop
adc
inc
gs
push
mov
clc
outsb
stos
stc
push
or
adc
stc
arpl
xchg
out
sbb
call
mov
cwtl
add
pusha
jb
push
sub
cmp
cmp
lahf
and
mov
pusha
gs
dec
add
dec
mov
das
data16
pusha
test
movsb
push
into
aaa
test
xchg
sahf
dec
xchg
mov
push
jmp
repz
adc
nopl
notb
sbb
cltd
jno
jle
test
mov
lods
xchg
pop
jp
mov
enter
mov
adc
pop
pop
and
mov
cwtl
dec
mov
rcl
test
movsb
jbe
loope
lret
xlat
ret
test
call
and
jg
rorb
fiaddl
sub
cmp
adc
inc
jg
mov
pushf
cwtl
mov
mov
rcl
push
inc
jbe
or
arpl
movsb
xor
dec
repnz
pop
xor
jnp,pn
inc
aas
stos
mov
or
daa
and
sub
dec
pop
ds
cs
adc
call
loop
adc
lret
push
mov
fnstcw
test
mov
stos
xor
stc
jae
outsb
test
xlat
mov
notl
aas
sub
xchg
cmp
sbb
pop
std
pop
insl
int3
pop
sbb
mov
add
xor
or
cmpsl
dec
cltd
pop
mov
out
int3
ret
ja
inc
pop
js
scas
pop
es
cld
cmp
mov
mov
mov
and
lods
fmull
sub
dec
imulb
cmp
jle
dec
repz
adc
sub
fucom
int3
dec
jnp
iret
loop
pop
loop
add
lcall
shlb
sub
mov
das
pop
xchg
out
sbb
mov
test
pop
mov
add
and
push
aaa
mov
xchg
pop
inc
xor
xchg
lahf
pop
andl
out
out
pop
in
push
mov
fstpt
inc
outsl
in
jecxz
sbb
xchg
inc
inc
shll
aaa
stc
repnz
sub
sbb
mov
fbld
mov
enter
mov
daa
sbb
push
mov
bnd
ds
mov
cli
clc
ljmp
rcll
and
cmpsb
outsb
ret
sbb
outsb
sub
fidivl
fadd
adc
mov
xchg
and
dec
ds
pop
inc
xor
out
popf
adc
adc
xor
sbb
insl
loope
cmp
inc
fsubl
sbb
fisttpll
mov
xchg
subb
push
inc
and
pop
pushf
pop
cwtl
mov
clc
dec
aaa
xor
ljmp
cmp
lahf
lret
cmp
or
daa
popl
xor
pop
fstl
test
dec
arpl
cmpsb
jno
jo
mov
inc
enter
cmp
push
xchg
sti
push
dec
sarl
inc
sbb
inc
cmp
mov
or
pop
outsb
movsl
and
push
mov
lods
inc
out
cs
xor
mov
movsl
fwait
jmp
leave
pop
fisttps
push
sub
xchg
mov
cmp
cltd
loope
jmp
mov
pop
rclb
sbb
mov
push
lods
inc
mov
pop
mov
xchg
arpl
ret
popa
popa
mov
push
movsl
inc
sub
and
testl
shld
lcall
push
fsub
outsl
clc
in
adc
out
aad
lahf
ja
mov
mov
sub
sbb
xor
fsubr
lcall
jl
jcxz
sbb
pop
bound
jle
xchg
les
leave
addr16
xor
and
fiadds
xor
lods
xchg
push
pop
sbb
xrelease
in
fnstsw
and
std
out
adcl
call
pop
test
mov
out
inc
mov
pop
pop
sbb
iret
pop
ja
fcmovnbe
mov
inc
lcall
inc
and
lods
xchg
sti
stos
fistps
or
inc
cmp
or
mov
and
jo
add
bound
push
cmpsl
jbe
jns
inc
lret
push
sbb
inc
push
nop
push
add
cmc
mov
dec
pop
mov
insb
testl
pop
push
sahf
cld
and
push
ss
and
and
xor
pushf
push
outsb
mov
fs
inc
sbb
test
les
test
xchg
rcl
jl
inc
ss
loope
in
ljmp
test
insb
mov
inc
movsl
push
xor
add
jbe
sub
int3
mov
stos
imul
bound
xchg
icebp
xchg
loop
fcomps
int3
call
pusha
and
adc
jmp
icebp
or
mov
filds
xor
adc
clc
or
xchg
cmpsl
mov
mov
push
and
lock
inc
das
mov
ror
sub
scas
mov
bound
pop
dec
add
sub
pop
cmp
xchg
test
fistpl
inc
sub
sbb
sub
xchg
fst
fisttps
inc
rcll
mov
xchg
fnsave
lods
leave
mov
mov
in
lea
stos
mov
push
mov
pop
and
enter
popf
pop
pop
xchg
sahf
mov
addr16
hlt
cltd
inc
sbb
shr
outsb
inc
ret
ret
add
test
inc
ficoms
mov
xchg
mov
rcrb
js
mov
jnp
addb
maxps
es
xor
or
sub
jb
xor
pop
imul
mov
jl
fiadds
mov
pop
push
fisubs
inc
enter
pop
lret
mov
in
and
mov
inc
hlt
pop
lds
push
mov
repz
inc
lret
je,pt
mov
add
movsl
popf
jo
arpl
enter
arpl
gs
xor
cmp
stos
xor
clc
sbb
in
jnp
and
lods
loope
ds
sahf
lods
andb
fwait
sbb
mov
sub
pushf
xchg
pop
call
arpl
mov
rcr
loope
enter
sub
or
sub
andl
jl
imul
adc
inc
ds
xor
xlat
add
add
adc
inc
jge
mov
inc
roll
adcb
loopne
xor
xor
sbb
mov
or
inc
xchg
dec
outsl
and
xchg
xor
dec
js
xor
imul
add
outsl
inc
ret
sbb
cmp
je
xchg
cmc
push
stos
push
adc
dec
pusha
out
cmp
pusha
lcall
mov
cmpsl
sbb
cmp
add
shll
push
lods
mov
in
mov
stos
adc
popf
in
stc
js
stos
ja
mov
and
xchg
push
and
mov
adc
jge
aam
mov
bound
pop
and
push
sarb
push
js
in
mov
cli
fiadds
dec
gs
repz
pop
lsl
and
rol
sysenter
ficompl
and
inc
mov
cmpsb
cli
mov
stos
out
xor
xchg
pop
divl
xchg
mov
inc
shlb
jle
adc
mov
pusha
gs
leave
xchg
cmp
sti
xor
aaa
jmp
in
add
jne
xor
push
movsb
sub
cmp
das
fimuls
arpl
mov
pusha
test
pop
scas
loop
outsl
jns
test
repz
inc
mov
jne
xlat
imul
push
rorb
lcall
xor
pop
fs
jae
movsl
imul
fdivs
inc
test
mov
imul
jae
adc
push
and
ljmp
std
test
xchg
sub
hlt
sub
cmp
push
imul
or
lods
xchg
mov
pop
jns
xor
je
push
lods
adc
enter
out
sbb
pop
xor
enter
jg
aas
push
mov
dec
dec
decb
insb
mov
icebp
jge
mov
nop
lahf
push
push
xor
cld
mov
lea
sahf
stc
nop
notrack
out
xor
adc
mov
sbb
xchg
adc
mov
loopne
lret
pop
mov
out
push
push
scas
push
dec
lds
mov
xor
dec
xchg
lods
loopne
jl
out
add
mov
cli
sub
mov
faddl
lret
aaa
scas
mov
adc
out
and
cli
call
mov
dec
push
stos
adc
sbb
ret
shlb
es
push
dec
imul
daa
xchg
mov
ror
or
andl
in
fbstp
mov
xchg
and
imul
pop
and
int
mov
xchg
fisttpll
push
cld
adc
mov
mov
xor
test
pop
sub
mov
jbe
xchg
xchg
bound
and
push
cmp
in
jp
sbbb
pop
inc
and
popf
loopne
pop
cmpsb
jge
movsb
pop
repz
xor
pop
mov
lods
cmp
ror
not
push
leave
in
cmp
jne
mov
mov
push
hlt
ja
out
sub
int3
mov
out
push
ds
ja
negb
scas
mov
xor
xchg
arpl
ret
or
jb
or
push
rol
lcall
pop
aam
outsb
insb
and
fldl
jnp
out
or
mov
or
pop
ret
push
cltd
dec
rep
adc
mov
jno
lods
push
loop
or
push
jp
add
dec
rcrb
out
bound
mov
addr16
xor
ja
jb
cmpsb
lcall
pop
in
xor
cmp
pop
cltd
mov
icebp
leave
bound
lods
test
add
dec
dec
xchg
inc
and
fxch
mov
scas
in
ret
cld
push
dec
mov
into
mov
call
test
sbb
sbb
aam
ljmp
shll
lcall
adc
push
inc
dec
mov
add
push
jno
ds
repz
fstl
fldt
mov
push
or
jmp
fistps
xor
icebp
push
xlat
aam
push
jle
stos
insb
or
pop
test
mov
cmp
testb
inc
in
inc
inc
repnz
mov
addr16
adc
loope
mov
mov
add
jmp
mov
out
outsl
mov
ljmp
pop
xchg
xchg
xchg
pop
inc
push
xor
aad
xchg
aad
insb
sub
cmc
out
xchg
aad
pop
loop
xchg
ja
push
xor
movsl
xor
inc
pop
sub
adc
inc
js
test
mov
lds
push
inc
adc
loopne
sub
mov
andl
shlb
mov
in
into
pop
sti
push
sar
and
in
scas
mov
daa
xchg
cmp
xor
sbb
inc
add
fs
mov
jge
mov
mov
ret
scas
aad
lock
and
lret
movsl
sbb
mov
pusha
rcll
imul
paddb
adc
cltd
xchg
into
xor
es
xor
out
jbe
mov
ljmp
std
jo
jge
fisttps
push
adcl
mov
mov
add
test
xchg
and
leave
inc
or
sbb
adc
sub
fimuls
popa
fs
fidivrs
iret
insl
std
mov
int3
jmp
aas
cmpsb
sahf
sub
outsl
mov
mov
mov
lea
mov
les
mov
ror
adc
mov
xchg
jnp
inc
sub
sub
movsb
mul
cmp
negl
das
fisubrl
sbb
in
dec
leave
xchg
ds
stos
sbb
rcrl
into
es
mov
mov
or
subb
lret
push
mov
lods
js
dec
mov
ss
xchg
push
shrb
add
push
jg
jae
jnp
adc
iret
mov
not
imul
pop
xchg
ror
mov
imul
pop
pushf
loop
pop
push
mov
aam
cmpsb
stc
std
cmpl
sub
inc
jecxz
fsub
jl
mov
cmpb
in
cmc
push
loope
je
cltd
fistpl
int
test
lock
or
mov
jmp
jnp
inc
push
enter
and
scas
fs
push
popf
xor
call
push
pop
sub
xchg
mov
rorl
inc
fldenv
push
outsb
mov
mov
test
push
ret
out
adc
sbb
out
out
inc
mov
pop
data16
in
nopl
int3
xchg
adcb
outsl
cs
js
shl
imul
inc
outsb
pop
rolb
ja
mov
imul
xchg
dec
push
push
cmp
mov
fcoml
icebp
fmulp
dec
outsb
hlt
addb
pop
xor
fstpt
pop
cmp
shl
arpl
jnp
cli
outsb
or
pop
addps
in
dec
loop
sbb
out
inc
jg
sbb
outsb
es
inc
mov
or
jbe
inc
fildl
pop
popf
inc
les
int
lock
cs
les
push
sub
push
or
dec
imul
je
lcall
inc
and
mov
aad
lds
popa
lret
bound
inc
fsubs
aad
sti
or
xchg
mov
fucom
mov
subb
rclb
mov
dec
push
movsl
add
js
xor
jnp
jmp
xor
ss
mov
pop
xor
shlb
adc
add
pop
call
insl
fistpll
popf
lcall
cmp
fcomps
mov
sub
call
lret
pop
mov
cmp
out
mov
das
mov
sbb
pop
sub
mov
pushf
inc
sarl
lret
lahf
cs
jge
out
jne
xlat
jl
mov
out
fcmovne
mov
jns
and
notl
mov
fiadds
push
fcmovnu
mov
inc
and
stc
add
and
sbb
stos
stc
mov
lret
addr16
inc
jo
mov
ret
imul
sbb
mov
jecxz
mov
daa
mov
adc
jge
push
cld
lret
pushl
mov
popa
sbb
and
test
jl
mov
loope
or
daa
inc
inc
push
inc
mov
mov
add
jl
in
dec
paddw
push
adc
lret
push
add
enter
enter
inc
lret
sub
sbb
jecxz
mov
jmp
jns
push
cmp
imul
fmull
dec
mov
mov
cmp
cmp
adc
out
cltd
cmpsl
pop
xlat
in
inc
incl
js
mov
pop
aas
jnp
test
fmuls
cmp
add
inc
leave
mov
lcall
sbb
pusha
xor
aaa
jg
and
ret
jmp
ljmp
inc
icebp
or
ret
std
adc
insb
push
stos
dec
push
loopne
push
push
faddl
popa
fisttpl
fsubs
cwtl
push
data16
adc
inc
adc
or
aas
jbe
pop
mov
sub
mov
lods
arpl
jmp
mov
sbb
dec
xchg
lea
sahf
sub
inc
inc
fildll
scas
push
pushf
stos
pop
loope
sbb
sbb
adc
pushf
sub
cmp
jnp
aaa
int
aas
jp
out
xchg
pop
out
inc
jno
sbb
repz
pusha
test
jno
shrb
cmp
pop
icebp
aaa
cmpsl
mov
int
shrl
xor
jl
sbb
jmp
imul
dec
fcmovne
xor
mov
sarb
lock
xchg
in
add
or
mov
mov
test
add
cmp
sti
mov
fsubrs
into
cld
xchg
jp
mov
cltd
and
push
mov
lock
inc
xchg
cmpsb
iret
push
and
mov
or
adc
ret
icebp
scas
rorl
pop
es
cmpsb
ret
inc
xor
subb
cmpsl
outsb
lret
cmc
add
loope
movhps
jo
push
je
data16
pushf
fwait
pop
xor
add
mov
orl
cmp
test
mov
in
push
adc
orb
xchg
mov
mov
cltd
mov
cmpsl
jmp
test
cmp
aam
divb
jmp
jmp
jns
subb
xlat
mov
sub
movl
pop
pusha
sub
pop
movsl
das
xor
cmpb
test
das
pop
jne
xchg
mov
fstpl
xchg
rol
lock
and
stos
dec
cmp
shrl
push
jae
mov
ja
pop
xor
and
sbb
stos
mov
and
and
dec
xor
jecxz
fiadds
out
or
fisubl
insl
movq
sub
ds
cmp
xchg
sub
jmp
xor
je
mov
or
stos
mov
mov
mov
inc
ret
movsb
mov
mov
push
imul
enter
into
push
out
fwait
adc
ds
mov
cld
shrb
sbb
test
mov
cmp
pop
inc
inc
iret
cmp
call
ja
loop
in
inc
add
ss
mov
xlat
mov
aad
shll
out
mov
xor
sbb
mov
int
mov
push
lock
repz
test
outsl
mov
pop
sub
pop
dec
popa
inc
pop
in
and
pop
jl
pop
pop
add
in
cmc
dec
cmp
cmp
push
movsl
push
inc
cmp
mov
dec
sub
mov
out
add
bound
clc
pop
fbld
arpl
pusha
adc
mov
adc
test
stc
int
das
std
adc
pop
sub
cmpsl
int
sbb
dec
push
inc
in
cmp
imul
movsl
scas
out
pusha
lret
push
daa
lahf
mov
sub
push
out
mov
mov
sahf
sbb
xchg
pusha
loopne
push
stos
enter
out
test
adc
scas
bound
test
push
mov
sti
xchg
xchg
mov
in
and
and
cmp
push
push
sbbl
lods
xchg
in
gs
scas
aas
fwait
adc
lock
aaa
cmpb
mov
in
and
repz
sbb
test
jnp
cmpsl
shl
cwtl
xchg
sub
scas
iret
jmp
dec
mov
jl
xchg
and
push
movsb
popf
jae
push
xchg
stc
and
mov
mov
pop
mov
inc
fcompl
inc
das
cmp
pop
enter
je
fcompp
xorl
lds
out
and
push
mov
mov
mov
lock
mov
in
push
sub
cmpsl
popa
ss
and
popa
mov
loop
pop
popf
dec
and
loop
les
mov
hlt
idivl
dec
sub
movsb
add
pop
fucomi
adc
loopne
outsb
inc
xor
sub
scas
mov
xchg
mov
arpl
pop
sub
ret
push
xchg
cli
iret
mov
jge
movsl
sbb
adc
lods
leave
sbb
lds
adc
jle
lods
xlat
cwtl
and
inc
stos
jl
cmpsb
in
dec
insl
scas
loopne
sarl
decl
in
mov
sahf
mov
mov
cmp
ss
int
repz
mov
mov
mov
adc
or
dec
cmpsb
fwait
xchg
popf
mov
xlat
adc
std
dec
ds
je
es
inc
stos
mov
rcll
fsubrl
adc
sbb
xchg
cwtl
popa
xchg
decl
gs
xchg
dec
gs
icebp
mov
add
mov
add
mov
lret
imul
mov
fwait
scas
frstor
dec
mov
sbb
or
or
dec
ss
xchg
inc
mov
pusha
arpl
dec
loopne
ret
xchg
sub
mov
icebp
rol
pushf
pushf
ja
scas
dec
inc
push
pushf
movsl
sub
addl
or
das
std
imul
out
sbb
dec
cmpsb
fwait
mov
sbb
jp
fmuls
sbb
or
push
iret
fmull
rcll
add
sub
test
mov
push
rclb
imul
sub
mov
ss
mov
lea
mov
int
cmp
pop
out
in
xchg
into
push
mov
shll
cmc
aaa
lcall
adc
push
or
icebp
aas
jp
lea
outsl
mov
enter
push
outsl
lock
test
mov
ret
inc
cltd
in
hlt
scas
or
mov
das
out
mov
xor
insb
dec
add
and
repnz
leave
or
mov
mov
xor
pop
mov
add
sub
rorl
cmp
dec
jge
jnp
sub
jns
lcall
push
movsb
aam
jno
inc
dec
mov
jne
in
test
sbb
xor
push
jne
pop
cltd
pusha
ret
mov
cs
dec
stc
adc
xor
or
add
jp
pop
jmp
sub
enter
enter
pop
std
sub
xchg
ret
sti
hlt
pop
ds
cld
adc
and
cld
mov
pop
and
imul
int3
stos
mov
xor
fsqrt
cmpb
rcrl
idivb
cmp
fnstenv
inc
cmp
pop
inc
or
pusha
in
int
fmull
ret
sbb
mov
push
mov
jnp
mov
in
add
sar
xchg
or
int
xlat
mov
aam
adc
mov
mov
in
and
adc
fnstenv
int3
in
sub
jge
sbb
scas
cmp
add
sbb
sti
test
xor
sbb
mov
enter
clc
lcall
sbbb
shrl
movsl
cltd
inc
xor
lds
pop
mov
adc
orb
sbb
mov
jns
mov
addb
dec
adc
mov
and
lods
inc
in
mov
lret
mov
insb
imul
push
out
xchg
dec
adc
cmp
xor
jg
lock
sub
cli
call
sub
rcrb
cmpsb
fwait
pop
add
sbb
mov
push
fcmovnu
sub
inc
mov
jno
xor
fnstenv
or
rorb
out
aam
loopne
sbb
fldt
and
mov
jp
xor
xor
cltd
xor
in
push
xor
inc
rcl
cli
and
ja
pop
xchg
fucomip
arpl
xor
xchg
push
mov
sbb
out
mov
fistpll
mov
hlt
enter
sub
fs
mov
icebp
adc
ror
push
call
jnp
mov
lock
cmc
adc
xchg
loop
arpl
xor
lcall
test
pop
jmp
mov
adc
loop
js
and
int3
adc
shll
xor
out
cmp
inc
lret
out
push
push
push
mov
es
ret
mov
add
inc
jge
pop
enter
jge
aas
pushf
sbb
and
xchg
js
imul
jle
dec
enter
xorl
punpckhbw
into
cmp
mov
sbb
andl
cmp
jp
xchg
xlat
and
aaa
inc
mov
movsb
push
mov
call
pop
invd
dec
push
into
xchg
jae
jne
add
mov
fimuls
jnp
xchg
call
mov
jo
push
outsb
stc
insb
mov
inc
dec
lahf
push
nop
aaa
sarb
pop
and
jbe
and
call
pop
loop
and
or
nop
hlt
rclb
out
and
sub
ds
icebp
or
das
andb
hlt
jbe
cmp
call
dec
lock
mov
in
pusha
call
lock
cwtl
inc
push
push
fs
in
sbb
loop
pop
adc
lds
into
scas
out
mov
jmp
jne
icebp
mov
rcrl
cmp
imul
mov
sbb
push
xchg
and
pusha
ret
xchg
mov
arpl
jge
xchg
cli
push
xor
fnstsw
xchg
pushf
jecxz
lret
or
lcall
mov
jp
and
lods
dec
lock
cmp
push
lahf
sub
add
je
xchg
jg
into
jno
test
fdivp
adc
cmpsl
push
push
int3
sub
out
mov
sub
in
push
jmp
hlt
inc
int3
repnz
or
test
in
sahf
and
adc
sti
inc
out
cmpsl
cltd
sub
les
pop
jecxz
adc
stos
pop
add
pusha
neg
push
push
xor
int3
mov
dec
xor
push
lret
stos
jecxz
mov
nop
imul
rorb
and
push
xchg
and
test
into
push
jp
pop
les
pop
sahf
in
push
sub
fmuls
es
push
push
mov
and
jecxz
inc
adc
jo
pop
fstpt
cltd
xchg
subb
insl
inc
out
inc
popa
shll
mov
jns
int3
pop
cmpsb
cmp
addr16
dec
fdivr
mov
cltd
pop
cwtl
xor
mov
pop
jns
fstps
into
dec
sub
faddl
mov
push
and
sti
insl
and
mov
aaa
lock
daa
jg
aas
xorl
or
cmc
movq
aad
stc
shl
cmpsl
push
ret
aas
cmp
repz
jne
mov
mov
stos
xchg
aam
or
cmp
daa
test
jo
cmp
mov
push
dec
dec
xchg
jle
fdivrs
inc
pop
mov
xchg
pop
ffreep
ds
stos
add
push
jp
stos
dec
das
in
outsb
or
lahf
push
loope
lahf
rcrb
fdivl
pusha
enter
pop
das
stos
repnz
xchg
lahf
inc
lcall
popf
mov
lock
lds
js
test
sub
pop
lea
push
movsb
jns
aaa
xchg
and
jecxz
jo
adcb
imul
popa
xlat
mov
lret
mov
dec
xor
bound
jecxz
push
sub
loope
adc
dec
or
dec
jae
mov
add
out
inc
lods
mov
mov
add
dec
fcmovb
xchg
xchg
mov
lods
sbb
cmpsl
lods
cltd
orl
cmc
idiv
sahf
and
xchg
mov
fdivs
call
aas
in
cld
aaa
or
and
popf
pop
enter
dec
jb
mov
out
and
xor
nop
mov
sbb
scas
push
xchg
cli
out
mov
cmpsl
jg
inc
inc
lahf
outsl
shrb
test
int
cmpsl
in
push
jg
fiaddl
test
or
jl
and
icebp
xor
mov
push
cmp
sub
inc
ret
mov
jle
mul
dec
inc
lahf
xchg
inc
pop
dec
mov
insl
fwait
int
pop
cld
adc
lahf
cmp
loope
jne
movsl
push
cmp
mov
iret
fsubrl
xchg
inc
arpl
out
dec
xor
cmpl
adc
jle
int
cmp
cmp
add
mov
sub
sub
mov
loopne
out
ret
jnp
rol
adc
jo
or
or
jno
push
inc
pop
mov
clc
mov
xor
out
push
mov
leave
lret
shl
push
push
fcoml
or
mov
jmp
xchg
pushf
call
xchg
mov
sbb
popl
cld
mov
and
fcomip
push
inc
js
sub
stc
push
push
pop
add
lods
push
dec
xchg
mov
out
lret
jb
sub
arpl
sub
cli
test
adc
mov
fwait
pop
mov
ds
or
cmpsb
adc
sub
mov
jmp
mov
in
push
lds
loope
insb
push
cmp
out
aas
test
ret
loop
and
dec
daa
jne
sbb
mov
int3
jb
cmp
jl
sbb
jl
mov
adc
jge
push
mov
test
push
inc
ss
mov
pop
das
hlt
pop
mov
cmp
insb
bound
negl
test
inc
mov
scas
xchg
pandn
faddp
pop
add
popa
sbb
icebp
fiadds
test
and
jb
push
adc
or
dec
shll
out
test
sub
stos
cmc
jmp
jne
mov
adcl
mov
push
mov
out
imulb
fildll
stc
lods
mov
mov
jne
popa
sbb
mov
inc
dec
aas
mov
lret
insb
hlt
loop
fiaddl
rorl
test
repnz
jo
push
ret
mov
es
daa
in
mov
jp
and
pop
xchg
xchg
aas
mov
cmp
cmp
mov
sub
lods
inc
xchg
pusha
and
mov
or
clc
jl
jb
daa
call
addb
rcr
jb
mov
pop
mov
cmp
xor
jno
lret
jl
mov
mov
jp
adc
add
je
test
out
test
push
inc
xchg
push
push
or
jnp
fsubp
int3
loope
lret
ljmp
mov
bound
push
call
dec
xor
aad
fwait
xchg
adc
mov
xor
cmp
enter
xlat
insw
xchg
dec
xor
insl
xchg
xchg
add
push
jecxz
notb
dec
pop
imul
dec
adc
das
xchg
xor
xchg
sahf
ret
dec
pop
add
mov
sbb
sti
adc
ljmp
xchg
pop
pop
or
shlb
pop
push
inc
push
sbb
mov
mov
pusha
cmp
mov
and
dec
icebp
ja
jbe
popa
data16
add
push
imul
in
pop
jne
cmp
insb
pop
sub
test
add
sbb
cmpsl
cltd
int3
xor
js
add
outsb
cld
test
mov
mov
jb
insl
sbb
rcrb
fldenv
xchg
inc
push
aam
push
movsb
lret
push
mov
xchg
lds
mov
dec
push
stos
sahf
sub
jge
push
push
mov
repz
jnp
sub
int3
pop
ret
pop
mov
jl
or
sbb
dec
adc
mov
mov
scas
mov
add
add
xor
mov
cld
mov
add
cmc
dec
ds
adc
cmp
lock
adc
sub
jo
cmp
sbb
ds
push
cmpsb
jb
mov
in
adc
lahf
cmp
sub
fs
jo
add
outsb
or
cmp
mov
xchg
sti
lock
mov
es
in
sti
adc
push
mov
xchg
aam
jo
adc
push
fists
pop
cld
mov
cmp
and
jbe
adc
daa
xor
sub
jmp
jo
das
xor
fwait
mov
cmp
mov
rep
fidivrl
jle
pop
jecxz
mov
loope
push
xchg
es
stos
mov
add
fwait
lods
addr16
adc
adc
dec
sbb
push
stos
imul
dec
add
xor
xchg
enter
push
pop
dec
movsb
dec
lcall
mov
xor
and
lods
jnp
fisubl
sbbb
lcall
out
mov
jb
shrb
adc
fisubs
out
test
jge
stc
push
add
je
jno
jne
ljmp
sbb
xor
out
xor
xchg
adc
nop
lods
repnz
cli
loopne
fistpl
inc
and
sti
enter
xor
or
sbb
jle
jb
rcrb
jmp
test
cmp
adcb
movsb
cwtl
loopne
aas
addl
push
cmpb
mov
idiv
xor
addr16
sbb
dec
push
mov
aam
cld
mov
pop
leave
add
pop
xchg
inc
pop
cmpsl
pop
jmp
stos
subps
mov
sub
bound
sub
mov
popf
mov
repnz
fnstsw
lods
aad
data16
cs
lcall
mov
je
int
and
mov
jb
push
sbb
sahf
jno
lds
pop
lds
sub
mov
mov
mov
rol
jb
bound
cmpsb
imull
hlt
outsb
jbe
movsb
imul
popa
pop
mov
imul
sbb
popa
dec
pop
out
sbb
mov
xor
lcall
xchg
push
iret
mov
sub
sti
rcrb
enter
inc
inc
jmp
sbb
or
arpl
repz
xor
lahf
push
jl
shlb
cmp
jecxz
ja
sti
popa
mov
fisttpll
movsb
scas
xchg
mov
cmc
sti
in
stos
lock
push
mov
pop
cmp
in
hlt
mov
or
popa
lret
int
adc
xor
xchg
dec
mov
sbbl
cmp
and
mov
lcall
inc
ljmp
push
leave
pop
aam
pop
add
into
sbb
push
test
ja
iret
jl
lret
in
adc
xor
xor
lods
add
mov
cs
lcall
popf
test
ret
fstsw
mov
inc
xor
inc
xchg
movb
dec
adc
imul
cmpb
fs
cmp
in
out
xchg
cmpsl
pop
loope
pop
adc
out
inc
stos
dec
jge
push
insb
push
mov
popa
movsl
std
inc
repz
ja
neg
adc
aas
push
je
sarb
add
adc
xchg
icebp
scas
lret
outsl
sub
jb
repnz
int
dec
call
jbe
jl
sub
xor
mov
std
daa
cmpsl
addr16
incb
push
mov
loope
hlt
icebp
mov
stos
pop
xor
mov
fs
rclb
jnp
cwtl
pop
fs
jp
ja
mov
aad
int
cmpsb
ja
stos
add
rcrb
mov
es
xchg
push
dec
int3
cmc
and
test
in
cmp
dec
push
xor
out
cmp
ret
push
cmpb
sarb
jmp
mov
mov
in
mov
int3
sbb
fucomp
aas
xchg
cmp
pop
inc
or
mov
jne
sub
add
or
adc
inc
movsl
mov
cs
fmull
push
pop
jg
add
jno
repnz
add
shr
popa
push
cmpsb
call
add
inc
and
popa
push
pop
int3
pop
addr16
mov
mov
sbb
aad
inc
fcomip
inc
ljmp
adcl
push
or
mov
jmp
sub
dec
test
pop
fnsave
pop
shrb
push
mov
cmp
push
sub
or
inc
out
shlb
pop
lahf
iret
pushf
xor
insl
xchg
popf
cmc
aaa
ljmp
jmp
sbb
push
sbb
jne
sub
pop
test
int
jo
push
stc
cld
sub
pop
call
push
mov
lea
and
stc
outsb
mov
repnz
sahf
and
fldenv
push
sti
jmp
lret
inc
adc
inc
sbb
inc
or
ret
insb
popa
out
cmpsl
in
fildl
movsl
or
pop
lret
lret
inc
push
mov
mov
or
mov
les
mov
inc
gs
cmp
and
in
sbb
lcall
fbld
sub
mov
jge
jp
nop
add
or
push
icebp
dec
jecxz
jae
cmp
jle
add
lock
daa
into
adc
leave
inc
or
lods
call
incl
lret
cmc
xchg
xlat
push
inc
and
std
call
fwait
cwtl
or
sbb
jg
jle
fwait
jae
mov
jg
loop
shlb
or
lcall
popf
gs
jb
xor
les
cmpsb
add
xchg
cmp
mov
cmpsb
sub
mov
aaa
mov
je
shlb
cmp
fisubs
lahf
cltd
push
ds
enter
cmc
insl
cmp
xchg
adc
movsl
into
popa
pop
popf
cmp
test
les
stc
bound
or
jne
out
ficoml
popf
movd
jecxz
xor
aad
repz
jne
xor
inc
jae
lret
mov
cmp
mov
sahf
mov
add
mov
push
push
xchg
xor
jbe
dec
xor
push
jl
test
inc
push
stos
jmp
inc
inc
xchg
cmovb
popa
in
inc
jno
test
cmp
das
data16
sub
push
pop
test
imul
or
jl
ljmp
fmuls
inc
pop
in
pushf
cld
and
sahf
rolb
testl
dec
push
sbb
xchg
das
scas
dec
xor
shrb
add
sbb
mov
mov
and
mov
pop
xor
jmp
out
pusha
aam
and
popa
sbb
dec
lea
jg
jl
xor
push
cmp
cmp
scas
or
jo
adc
clc
xor
inc
xchg
mov
dec
sahf
movsb
or
ror
outsb
leave
rorb
and
xchg
pop
pop
xor
sahf
stos
mov
movsl
or
sbb
ret
aad
scas
lock
cld
add
nop
xchg
ljmp
xchg
xlat
ds
cmp
arpl
add
push
call
mov
fcoml
fldenv
and
push
clc
pop
call
fcompl
dec
dec
test
and
jae
test
dec
sbb
js
push
clc
insl
dec
mov
imul
mov
dec
in
xchg
cmp
jae
xor
inc
add
pop
mov
stc
dec
sahf
stos
cmp
cmp
sbb
sbb
or
fstpl
cli
into
dec
rolb
popa
addl
jbe
xor
mov
mov
sbb
inc
arpl
xor
insb
leave
and
cltd
lds
sub
push
or
and
into
clc
popl
pop
fsub
xor
dec
andb
pop
pop
pop
shl
icebp
hlt
push
popf
aas
inc
jp
clc
jmp
mov
cli
in
enter
dec
mov
cmpsl
repz
outsl
aaa
dec
scas
dec
jne
jle
mov
fidivrl
lret
jne
jne
les
call
idivb
out
dec
inc
sti
orl
lock
movsb
notb
jp
fcmovb
inc
xchg
mov
and
sub
fcoms
dec
lret
pop
and
inc
repz
sahf
xor
and
lcall
push
outsb
rclb
and
cmpsl
jecxz
xor
loope
std
ret
or
cmpsl
jecxz
out
mov
cld
and
inc
aam
sbb
sahf
mov
jmp
inc
xchg
cmc
insb
adc
out
xchg
xchg
push
lds
fsubp
and
test
fbld
fidivrl
mov
enter
jbe
and
push
mov
push
push
mov
pop
movsl
fnstcw
inc
mov
xorl
bound
fnstcw
repnz
dec
adcl
scas
jne
mov
clc
jne
ret
pop
stos
or
pop
roll
cmp
loopne
test
lret
xor
cmp
lds
inc
scas
mov
in
movsl
inc
xor
mov
add
loop
and
mov
leave
push
or
push
inc
sti
push
push
aam
inc
and
push
xlat
xchg
xlat
test
ss
inc
into
jge
int3
or
adc
or
push
or
movsl
mov
stos
and
xchg
into
jne
dec
add
mov
ss
cmc
inc
loopne
jg
les
or
or
mov
dec
cmp
lcall
adc
push
push
sub
push
inc
aam
or
xchg
testb
and
push
ret
push
cmp
orb
jmp
std
fdivs
daa
fwait
jb
sub
sahf
jno
cld
lahf
outsl
push
fsts
jb
jo
add
lret
mov
aas
aaa
js
push
mov
cmp
into
cmp
jle
lret
pop
loop
insl
mov
xchg
imul
pusha
adc
scas
add
xor
push
lea
test
sub
scas
cmpsl
sub
addr16
in
xchg
dec
repnz
int3
xor
stos
orb
cli
mov
insl
mov
pop
sub
xor
mov
xlat
push
leave
and
sub
sbb
sub
mov
shl
in
sbb
and
mov
push
xor
sub
cltd
lods
andb
and
xor
xor
fnstsw
bound
loop
mov
inc
and
and
stos
dec
das
inc
aam
jbe
adc
scas
mov
xchg
lock
enter
push
je
sub
das
pop
mov
mov
adc
inc
imul
mov
xchg
bound
xchg
mov
ljmp
push
sti
outsb
cmp
and
dec
add
incb
aaa
jns
sbb
add
hlt
loopne
cmp
xor
mov
jecxz
in
jp
inc
add
mov
mov
fsubrs
add
shll
shll
pop
icebp
test
leave
sub
and
cmp
mov
dec
cmp
cmp
pop
sarl
pop
call
gs
ja
jb
dec
xchg
incl
lret
push
int3
add
daa
mov
sub
add
movsl
imulb
stc
dec
sbb
pop
cltd
or
roll
loop
fs
js
inc
addr16
and
mov
stos
iret
push
mov
jmp
rolb
jb
rorb
test
subb
adc
xorb
pmullw
insl
ds
jmp
mov
pop
pushf
outsl
sub
sub
pushf
mov
mov
out
mov
lcall
bound
mov
xchg
scas
popa
je
mov
fs
jb
sub
pop
loop
inc
imulb
fsts
rorb
adc
mov
jmp
int
scas
shrb
push
lea
and
and
fnstcw
mov
xor
mov
cld
lea
dec
imul
mov
mov
sbb
jbe
hlt
push
cli
into
or
popa
xchg
pop
sub
mov
jb
in
fpatan
push
xor
ss
jmp
incb
add
cltd
sub
cmp
sbb
fisubl
cmp
popa
mov
scas
std
xor
pop
ja
enter
popf
add
insw
inc
dec
movsb
xorb
xor
sub
xchg
adc
add
aaa
fisttps
mov
sbb
mov
add
js
ljmp
int3
dec
in
int
sti
cmp
cmp
fxch
loopne
test
add
icebp
cwtl
or
xchg
cmpsl
loope
xchg
fisubrs
out
xor
std
lret
push
mov
or
mov
int3
je
lahf
dec
pushf
cld
loope
cwtl
mov
lahf
adc
xchg
jmp
xchg
sbb
cmp
sbbb
repz
or
fs
cld
insb
ret
fs
cmpb
mov
insb
push
mov
xor
lahf
in
inc
sahf
in
scas
jnp
jmp
popa
rcll
dec
jnp
bound
jo
mov
jbe
loope
mov
xor
xchg
cltd
outsl
mulb
je
arpl
pop
fisttpl
loope
cmc
into
pop
xor
lods
ljmp
aad
lret
lcall
scas
cwtl
mov
xchg
mov
or
cld
in
xchg
sub
add
jne
daa
xchg
xlat
jne
adc
sti
add
out
cmp
xlat
nop
mov
add
or
ret
add
mov
dec
jno
call
xchg
inc
adc
ds
mov
mov
pop
pop
aaa
xor
pop
out
into
xor
xchg
pushf
das
insb
mulb
add
xchg
xchg
mov
fcompl
notb
lcall
rclb
jae
jecxz
pushf
xor
enter
cmpsb
ljmp
jg
mov
int3
or
popa
or
sub
push
and
les
and
push
and
addb
jmp
cmpsl
push
xchg
jbe
add
mov
test
sub
fisttpl
push
cli
push
dec
pop
daa
lahf
mov
inc
jmp
fisubs
ficoms
test
mov
push
insl
cmp
cmp
dec
jg
shlb
int3
or
js
popa
sub
and
push
rorb
push
mov
and
mov
mov
or
sbb
cmpsl
sub
cmpsl
arpl
mov
or
lcall
hlt
jle
sbb
xchg
or
ret
mov
rorl
je
mov
in
add
mov
jo
push
arpl
mov
mov
pop
push
cmp
test
xchg
sbb
dec
or
push
ror
xchg
mov
pop
and
fnstenv
mov
and
testb
orb
inc
das
push
pop
lds
mov
outsb
xor
adc
adcl
fsubrs
push
sub
jecxz
imul
imul
idivb
rcrb
mov
out
mov
idivb
mov
xchg
jmp
dec
sub
inc
fmul
repz
sub
icebp
shl
test
inc
insb
fsubrl
ja
scas
xchg
rcll
xor
test
or
mov
sub
ret
cmpsb
cmpsb
das
mov
popa
leave
inc
push
inc
sub
and
cs
lret
dec
jne
or
sbb
sub
jae
mov
ss
lret
scas
push
cmp
mov
pop
lds
mov
out
or
ss
cmpsb
cmpsb
lret
fsubl
sbb
pop
add
cmp
xorl
adc
and
xlat
mov
and
and
inc
add
sti
pop
dec
lret
xchg
int3
adc
ret
or
cmpl
loop,pn
push
ss
inc
scas
dec
ljmp
pusha
pop
mov
add
popf
lods
sub
insl
sahf
arpl
in
movsb
dec
adc
sbbl
xchg
sbbb
nop
mov
or
mov
pop
and
mov
lds
dec
mov
ret
and
lahf
arpl
push
test
push
es
inc
mov
mov
out
out
pop
out
cmpsl
cmp
mov
or
or
or
loop
sub
mov
loope
push
adc
shlb
ficoms
ja
sti
mov
mov
pop
loope
xchg
and
xor
lock
or
mov
push
popf
out
and
cmpsb
pop
add
jno
cmp
in
jmp
in
cli
stos
iret
lds
inc
je
dec
mov
sub
fsubr
xchg
push
testl
ret
dec
subl
rcll
lret
inc
ficoml
sub
mov
mov
adc
repz
push
inc
dec
xchg
inc
xchg
cld
xchg
js
sub
push
cmove
pop
add
ljmp
jmp
jnp
dec
add
mov
movsb
lcall
xchg
pop
xchg
jnp
stos
add
repnz
arpl
dec
ljmp
mov
std
scas
inc
movaps
sbb
jp
ret
dec
mov
enter
xchg
sub
xor
sub
testb
out
or
dec
inc
test
inc
and
cli
pusha
ljmp
sub
push
mov
sahf
aad
sbb
mov
xorl
jbe
cltd
sub
push
repz
loopne
rcl
mull
icebp
nop
subb
mov
pop
cmp
mov
sbb
je
or
and
roll
jle
mov
and
sbb
mov
jg
sbb
hlt
jl
push
jge
div
into
insb
mov
mov
jns
into
add
ret
mov
std
inc
pop
pusha
fwait
mov
cli
mov
xor
push
jp
cmpsb
scas
rcl
xchg
adc
leave
mov
pop
stos
lds
add
jmp
stc
lret
mov
cmp
fsts
pop
and
aad
stc
xor
lret
sub
sub
das
push
xor
add
ss
add
stos
imul
jge
mov
pop
dec
fidivs
fs
mov
aas
fnstenv
loop
insl
mov
jecxz
ss
inc
test
mov
push
sarl
rcl
stc
pop
popa
dec
xchg
mov
mov
mov
sub
inc
clc
adc
xor
fcmovb
xchg
mov
mov
imul
ret
movsl
sbb
sysexit
imul
stc
dec
mov
pop
mov
fildll
mov
and
adc
mov
sub
scas
icebp
sbb
or
cli
out
xor
fidivs
inc
xor
jp
cs
mov
imul
xchg
arpl
into
adc
and
vmovntps
fldcw
sub
xor
aad
rorl
mov
insb
mov
sbb
adc
sbb
out
xchg
sub
jnp
outsl
xor
cmp
int
jbe
into
fmull
sbb
xor
clc
cld
lock
movsl
push
cmp
mov
xchg
call
adc
mov
dec
inc
add
xchg
aam
popa
xor
stos
cmp
inc
lods
sub
andl
adc
test
sahf
ficoms
and
imul
ss
jmp
scas
loopne
dec
cmp
stos
xchg
jnp
or
inc
jo
sbb
xchg
sub
loopne
loop
xchg
ret
jb
mov
xchg
lock
sti
in
add
or
mov
sbb
mov
xchg
inc
mull
and
xchg
lock
dec
cmp
je
ja
pop
mov
in
lea
sbb
imul
mov
fldt
adc
and
add
dec
pop
sub
add
add
mov
xor
in
call
int
fidivrs
xchg
jbe
mov
cs
and
mov
jge
mov
or
mov
popa
mov
clc
mov
mov
add
shll
mov
jg
cs
mov
push
jnp
and
mov
pop
cmc
mov
insl
inc
mov
xor
shll
push
inc
mov
inc
je
jmp
pop
into
mov
popf
mov
addr16
dec
into
inc
lret
mov
cwtl
jge
jo
push
divl
or
andb
lret
dec
mov
fld
popf
in
push
fistpl
pop
xchg
push
dec
fidivrs
jne
add
cmp
adc
mov
add
inc
dec
cmpsl
xor
jg
addr16
scas
fsubrl
adc
pop
xor
xorl
adc
add
fwait
int3
cmp
cmp
sbb
out
pop
dec
popl
addr16
mov
cmp
jae
js
lahf
jp
icebp
and
mov
mov
hlt
stos
push
dec
shlb
pusha
out
cmpsl
or
lret
cli
shr
arpl
out
xor
cs
jecxz
add
or
js
push
jo
aad
xchg
mov
pop
jns
dec
pop
pop
data16
lods
and
leave
sub
mov
jmp
cmp
ja
add
and
stos
xor
push
ja
inc
clc
int
adc
jno
jno
mov
js
stc
outsb
imulb
inc
dec
jae
mov
jg
pop
mov
out
mov
sub
es
hlt
ljmp
push
rcrb
inc
fsubrs
inc
push
jno
fnstsw
or
aaa
mov
orl
adc
mov
jo
adc
dec
push
mov
clc
push
push
loope
mov
sbb
sbb
or
mov
dec
mov
mov
adc
mov
sbbb
fimuls
or
rorl
jg
insl
inc
cmp
les
popa
fcompl
addr16
lods
js
shll
mov
push
cmc
aad
rcrl
sub
das
lcall
scas
or
aam
push
add
test
lds
sbb
xorb
enter
xchg
lret
roll
and
loop
in
mov
cmp
enter
in
das
inc
hlt
dec
jb,pn
ja
out
mov
lods
inc
cltd
adc
fidivs
sbb
mov
xorb
pop
push
add
add
mov
das
ljmp
in
jo
test
inc
lret
imul
pop
mov
adc
incl
jp
fbld
mov
je
jle
dec
and
int3
add
cwtl
cmp
adc
fldcw
cmpl
sub
dec
jae
push
lret
pop
xor
cmp
pop
add
orl
mov
pop
adcb
push
mov
fisubs
imull
lods
add
jns
mov
push
dec
jbe
jmp
dec
mov
add
cmpsl
jmp
orb
in
sub
cld
mov
push
sub
pop
mov
das
into
push
xchg
ret
loop
js
pop
stc
loope
or
je
pop
scas
outsl
and
ret
sub
sbb
pop
gs
outsl
iret
aad
loopne
in
imul
push
inc
inc
add
stos
dec
dec
and
popf
stos
xchg
inc
adc
cld
std
pop
sahf
xchg
imul
cs
add
mov
ficompl
insl
jg
pop
out
mov
xor
cli
iret
sub
mov
sbb
in
aad
rorl
pop
push
pop
mov
mov
aad
dec
mov
jne
mov
xadd
inc
jno
in
adc
adc
mov
call
push
add
decl
sub
adc
roll
gs
jo
out
add
cli
mov
push
fimuls
shll
xor
push
ds
push
in
imul
mov
xor
sahf
xchg
ljmp
dec
jb
sbb
addr16
push
out
mov
pop
arpl
push
repz
daa
xchg
insl
jp
lret
shrb
popf
or
insb
xchg
sub
cli
inc
mov
push
jnp
insl
cmp
pop
add
lea
outsl
jle
mov
dec
mov
divl
or
or
push
mov
mov
add
cmp
hlt
jne
stc
cmp
push
mov
push
and
xchg
enter
dec
pop
sbb
lea
mov
dec
dec
stos
push
dec
imul
jno
subl
inc
inc
sub
push
and
lods
mov
inc
xchg
dec
push
data16
in
add
incl
rsqrtps
flds
stos
or
les
xchg
pop
adc
movsb
sarl
es
scas
rolb
ret
xchg
jl
mov
mov
fwait
add
xor
rcrb
adc
repnz
js
repnz
es
cld
enter
inc
cltd
scas
inc
insl
xor
jae
enter
je
xchg
sbb
mov
loopne
mov
daa
fists
cmp
data16
xchg
scas
addr16
mov
add
jnp
inc
fdivs
fldcw
or
inc
cmp
imul
sub
or
xchg
xorb
addl
cmp
jl
ficompl
push
dec
rclb
or
pop
jle
or
xchg
jbe
sbb
gs
lret
shlb
cwtl
mov
sbb
mov
add
movsb
std
pop
cmp
inc
add
push
push
dec
cmp
or
fldl
dec
dec
inc
out
push
test
and
sub
xor
fnstenv
popa
andl
push
inc
jmp
movsb
add
cli
mov
dec
bound
mov
mov
fwait
out
test
adc
jbe
pushw
add
jp
call
mov
jns
dec
pop
dec
ds
push
cwtl
into
jo
mov
push
aas
es
pop
enter
into
sbb
xor
xchg
dec
push
es
add
xchg
xchg
pop
or
stc
fcom
and
arpl
adc
dec
decl
in
pop
shrb
cmp
pop
aas
mov
push
jg
inc
jcxz
pushl
cmp
and
dec
sarb
pop
add
sbb
mov
pop
adc
ljmp
nop
or
push
pop
rcrl
mov
pop
xchg
xchg
add
jb
and
jge
jb
dec
mov
mov
push
sbb
push
outsb
into
sub
pop
or
inc
add
pcmpgtb
imul
sbb
data16
repnz
pushf
jae
rcll
cmp
jp
std
mov
or
dec
inc
add
lret
dec
add
inc
dec
lret
and
lret
sbb
lds
cmc
out
mov
subb
repz
in
lock
and
jno
adc
mov
rorb
in
pop
mov
adc
push
inc
enter
mov
pop
call
xor
shl
outsb
scas
test
inc
popa
push
out
jmp
lds
xchg
fildl
test
xchg
mov
sbb
pushf
pushf
mov
sub
ret
fcmovnbe
cli
stos
mov
mov
aam
in
mov
in
push
sbb
xchg
sar
cmpsl
es
mov
enter
outsl
add
mov
xor
popf
mov
mov
int3
pop
in
push
push
sbbl
into
popf
mov
aam
or
xchg
stos
pop
or
mov
and
adc
fnstsw
testb
inc
fistpll
js
adcb
add
insl
push
movsb
mov
cmpsl
out
push
ss
pop
jecxz
sub
mov
xchg
xchg
push
add
int3
xor
out
sahf
jle
call
or
das
daa
adc
dec
dec
mov
ret
mov
out
cmpsl
ljmp
jg
pop
jge
xchg
add
loop
adc
sub
and
xchg
jecxz
inc
or
add
pop
mov
fsubl
xchg
les
mov
jl
pop
out
jp
cmp
mov
outsb
and
inc
frstor
and
movaps
or
cmp
jle
sub
and
push
lea
add
leave
push
stc
mov
or
insl
addl
adcl
push
xor
lahf
jecxz
sbb
stos
cs
sbb
insb
or
or
xchg
fstpt
leave
mov
mov
xorb
clc
int3
lahf
aas
xchg
pop
mov
call
pop
and
popa
scas
push
pop
leave
push
les
cmc
and
aad
aad
push
sbb
mov
jmp
mov
cmp
int3
into
jp
cmp
mov
push
push
std
or
push
inc
jmp
mov
pop
inc
repnz
mov
mov
xor
lahf
cmpsl
mov
sub
add
in
rolb
aas
cmpsl
lahf
adc
pop
sti
jnp
test
mov
jp
fdivrp
dec
and
pushf
lods
scas
sub
test
jmp
add
xor
jne
xchg
dec
bound
sbb
inc
andb
scas
aas
adc
mov
nop
in
jge
imul
leave
jbe
pop
subps
sub
jge
push
pop
pop
test
and
jle
pop
add
arpl
mov
pop
push
loope
ds
test
cmpsb
mov
jb
dec
jl
sbb
sbb
out
push
add
cwtl
sub
push
cwtl
push
jo
arpl
xchg
jo
or
pop
and
mov
pop
mov
ljmp
leave
xorb
pop
mov
xchg
dec
dec
jae
pop
imul
sub
fwait
cmp
cmpsb
jecxz
push
scas
dec
and
sub
sti
fnstsw
cwtl
xchg
cmpsb
add
inc
in
sub
insl
imul
mov
cmc
sbb
cmp
repz
fsubrs
cmpsb
sub
rclb
lret
dec
stc
outsl
daa
pushf
push
in
sub
dec
dec
lds
in
sbb
add
sub
dec
jmp
pop
pop
push
idivl
lods
pop
mov
sbb
sahf
xchg
and
ret
ret
adc
cs
or
push
lea
test
in
enter
pop
scas
rorb
es
pusha
in
incb
daa
sbb
or
stc
stos
mov
push
pusha
in
sbb
inc
data16
add
cmpsl
inc
add
out
sbb
out
mov
sub
push
xor
inc
cmpsb
or
mov
orb
jbe
sub
fwait
mov
xor
add
dec
incl
pop
cmpsb
fisttpl
xchg
in
out
mov
pop
sti
cmpb
mov
pop
test
inc
in
inc
jle
insb
sub
cld
jl
add
adc
leave
icebp
jo
jp
xor
notl
nop
test
les
cmp
jmp
mov
mov
push
mov
stos
dec
ja
xor
nop
pop
mov
inc
scas
mov
call
test
push
sarb
outsb
pop
cmp
adc
push
insb
and
outsl
ret
cmp
mov
shll
cmp
dec
adc
mov
xchg
add
cmp
fistpl
xchg
mov
xchg
stc
dec
xchg
pop
adc
mov
aaa
sti
std
test
jmp
sub
push
mov
stos
rorl
mov
mov
push
sbb
inc
orb
scas
push
sbb
enter
mov
and
sub
jbe
subl
sbb
jle
jmp
mov
fwait
add
jge
cmp
shrb
out
test
mov
ljmp
jb
ret
adc
test
push
sub
or
bound
insl
mov
dec
rcr
cmp
ja
cmpsb
lret
je
dec
cmp
push
push
test
out
push
sub
cltd
mov
mov
jl
mov
pop
fcomp
frstor
repnz
dec
out
outsb
lds
cs
gs
jns
ss
stos
xor
adc
and
aad
test
xchg
mov
mov
jb
sbb
push
stos
repnz
pop
int
push
add
into
mov
mov
xchg
enter
loop
or
mov
xor
fnstcw
fcompl
in
aas
xchg
push
xor
fsub
test
sbb
or
movsl
or
mov
insb
stos
inc
sub
cmpsl
lods
sbb
in
rclb
or
in
cmp
xchg
cmp
shrb
cld
addl
pop
inc
mov
and
add
fistpll
or
bnd
lds
lock
push
aad
or
mov
jecxz
adc
mov
cmp
and
mov
fwait
or
outsb
call
and
dec
rep
sub
adcb
or
push
bnd
xchg
xlat
sub
mov
in
sub
fidivrl
inc
xchg
adc
adc
mov
xchg
in
movlps
lods
cs
cmp
dec
lods
rcrb
jbe
clc
divl
movsl
xchg
jp
mov
xchg
inc
ficoms
or
imulb
aad
inc
cmp
fisttpll
pop
sarl
jle
add
dec
sbb
inc
out
xchg
mov
psrad
and
or
inc
mov
or
xchg
mov
int
out
and
pop
pushf
fisttpll
cli
pushf
popa
incl
mov
or
push
cmp
out
out
push
xor
inc
bound
push
xor
or
pop
aaa
scas
aad
and
sbb
lcall
inc
addb
pop
adc
sahf
push
scas
pop
pop
sbb
sbb
sahf
pop
and
or
fcoms
mov
stos
or
loope
vmwrite
test
xor
cmp
lret
mov
mov
jns
dec
sti
sbb
pop
adc
xor
and
fiadds
lods
leave
dec
jae
movsb
cmp
ret
sub
jbe
push
push
inc
std
or
xor
mov
insl
xchg
jbe
mov
sub
xor
add
movsl
int3
inc
xlat
cmpsl
mov
sti
stos
sarl
jg
pop
add
dec
int
inc
ja
lods
aad
call
iret
adc
hlt
or
xor
adc
mov
push
minps
inc
sti
cmp
sbb
or
mov
in
mov
lds
call
daa
pop
bound
adc
daa
xchg
and
stos
xlat
mov
movsb
popa
and
inc
push
iret
pop
and
push
lods
aad
jg
icebp
push
cli
dec
and
out
mov
movsb
sbb
xchg
scas
xchg
outsb
push
xor
loop
fwait
rcrl
cld
push
ljmp
mov
call
add
inc
xchg
pop
enter
pop
add
jmp
push
fldt
jmp
cmp
aas
out
repz
push
add
pop
sbb
shr
sbb
movsl
or
sub
insb
cli
push
dec
divl
iret
push
add
push
fdivrs
sbb
rcl
push
arpl
addr16
dec
lahf
mov
inc
pop
dec
call
ret
mov
insl
adc
repz
add
addr16
cltd
test
cmpsb
js
int
mov
inc
aam
daa
lods
ret
aam
mov
add
ficoml
xor
mov
jae
inc
imul
aad
cmpsl
mov
nop
fwait
mov
or
jmp
aam
sub
lods
or
cltd
fdiv
out
and
mov
je
popf
mov
cltd
xchg
imul
or
jne
fdivs
or
mov
pop
insb
and
and
pop
and
jl
add
rcl
xlat
sahf
xor
rcrl
mov
sub
add
xchg
pop
cmp
cmpsb
out
xor
out
pushf
add
nop
nop
jb
and
repnz
pop
xchg
popa
pop
and
mov
cmp
sarb
xor
mov
inc
pop
and
pop
test
cmp
stos
cld
mov
fwait
repz
adc
jg
lret
xchg
test
cmc
loop
push
xor
xchg
test
and
xor
sbb
pusha
inc
mov
leave
stc
repnz
sbb
pop
cmpsb
adc
jb
add
stos
xchg
ds
cmp
mov
jl
pop
add
stc
add
push
mov
mov
xor
and
addr16
cmpsl
add
es
cmc
mov
inc
out
adc
movd
push
repnz
xor
jo
sub
jbe
in
js
and
and
in
xor
in
int
push
sub
ficoms
jle
jge
je
lock
sbb
daa
sbb
push
ss
sbb
and
aad
xlat
sarl
jo
mov
adc
push
sbb
xchg
mov
js
sbb
roll
and
adc
mov
and
dec
cli
imul
or
inc
mov
add
gs
xchg
mov
pop
stc
insl
movsl
loopne
ljmp
cmpsl
push
pop
data16
dec
pop
add
sbb
adcb
rcl
arpl
mov
push
or
cmc
and
mov
add
mov
push
rcrl
out
lahf
xor
and
or
sbb
xor
das
inc
imul
cmp
push
or
addr16
je
test
cmp
and
fs
jecxz
pop
or
xlat
xlat
xchg
outsb
inc
jbe
xor
aaa
inc
hlt
in
pop
push
push
xchg
jno
fbstp
jmp
nop
dec
mov
lods
int3
push
adc
in
movsb
xchg
pop
fs
outsb
nop
jae
mov
push
lahf
inc
mov
dec
inc
pop
notb
cltd
cltd
pop
js
stc
and
dec
mov
aas
ret
fdivrs
push
test
repnz
sub
xchg
jbe
xchg
sbb
sub
dec
mov
pop
call
cld
ret
lock
cwtl
sub
mov
lock
fbstp
xor
lock
outsb
add
clc
mov
aas
bound
rol
shr
cwtl
cwtl
cmp
cmp
enter
rolb
es
inc
inc
fcompl
pushl
fld
movsb
stos
fadds
dec
addl
lods
mov
sub
jnp
arpl
mov
mov
mov
mov
adc
fadds
jge
mov
push
fdivl
imul
xchg
lds
sub
and
repz
out
gs
repnz
sub
mov
add
or
js
ja
jbe
popa
push
xor
add
mov
jg
std
arpl
and
hlt
cmp
addb
imul
into
lods
add
mov
and
imul
pop
xor
mov
sub
inc
and
icebp
jecxz
out
dec
ss
or
test
push
and
aas
in
cmpsb
jbe
pop
icebp
xchg
push
or
jns
ret
test
fldenv
sbb
mov
mov
or
test
imul
pop
mov
scas
push
and
imul
stos
push
stos
mov
push
outsl
lea
outsb
push
adc
shll
and
int
fwait
stos
loope
icebp
sbb
mov
mov
push
add
gs
dec
outsb
mov
pop
out
adc
sub
push
push
jnp
inc
shl
mov
ds
rolb
lea
cmc
stos
mov
push
mov
sbb
adc
arpl
mov
pop
cltd
pop
lret
or
loope
jp
mov
xor
mov
cwtl
and
fs
fnstsw
int3
mov
adc
xchg
mov
popa
cmp
push
mov
lock
arpl
jecxz
and
in
push
cmp
cmpsl
mov
cmp
sub
neg
jmp
lret
fists
mull
sbb
mov
xor
cmp
lods
nop
cmp
inc
dec
jo
xor
jg
sub
test
scas
imul
adc
aas
dec
cld
sub
jae
sub
add
lods
push
pop
or
stos
sbb
sarb
outsl
jns
xor
and
in
jmp
jmp
adc
xor
or
shrb
out
lock
test
xor
sub
cltd
inc
out
loopne
push
es
addr16
dec
subb
or
adc
ret
loope
lods
sub
in
stos
or
addr16
shrb
cmp
add
mov
test
imul
xor
xor
adc
jle
xor
loop
add
int
inc
lock
inc
xchg
jge
inc
hlt
or
shll
ja
loopne
cmp
out
xchg
pop
xchg
out
dec
imul
and
add
roll
push
imul
jge
xchg
ret
stos
mov
incb
inc
xchg
inc
cltd
inc
cltd
sbb
xchg
rcl
aaa
mov
pop
fdivl
test
adc
xor
pop
jns
or
int3
fwait
enter
cmpsb
out
rcll
jnp
mov
adc
mov
push
ret
mov
pop
inc
out
or
dec
add
aam
or
mov
movsb
jmp
les
pop
cmpsl
and
add
dec
xor
sbb
sub
inc
mov
xor
andl
sub
jmp
into
faddl
pop
std
stc
int
dec
adc
pop
jp
jp
je
movsb
pop
mov
and
cld
pop
cmpsb
jns
pop
insl
cld
add
push
addb
or
stos
mov
lret
test
pop
fdivr
adc
out
movsb
subl
xlat
push
push
jo
cs
push
mov
mov
jle
mov
addr16
jb
aas
mov
sbb
jmp
nop
or
jl
addps
or
inc
lds
stc
ja
fs
adc
dec
leave
rorb
scas
mov
in
mov
cmp
jle
or
xchg
push
jne
in
shr
pop
cs
sub
adc
xchg
mov
stos
adc
stos
or
sbb
mov
repnz
outsb
cmpsl
dec
fdivrs
cltd
decl
data16
ss
push
or
sub
movsl
inc
fisttps
add
fidivrl
insl
mov
stos
ret
dec
fisubs
adc
push
xor
inc
cltd
sbb
cltd
or
scas
mov
out
fsub
lock
inc
push
push
cmpsb
out
xor
movsb
cmp
dec
popf
repnz
out
fistl
iret
inc
fidivs
into
jno
loop
push
and
fwait
insl
loopw
stc
cli
pop
cmp
out
adc
nop
clc
jl
xor
test
cmc
sbbb
pop
in
into
xchg
pop
mov
and
in
lret
inc
adc
mov
push
sub
fs
cmpsb
and
jmp
iret
pusha
scas
adc
mov
or
cmpsb
add
cmp
pop
test
ffreep
arpl
or
sub
loop
rorl
mov
mov
sbb
pop
int3
cmp
test
add
orl
sub
divb
jnp
mov
xchg
repz
adc
int3
cltd
xchg
pop
leave
test
fdivrs
add
push
mov
cmpsl
mov
xchg
cli
mov
add
add
mov
out
into
repz
repz
fidivrl
popa
inc
add
insb
dec
andl
inc
or
jae
int
cmp
cmp
divps
jns
sub
mov
fdivl
mov
lods
inc
sbb
cmp
and
loop
iret
pop
mov
lods
xor
or
into
imul
out
xlat
fistpl
mov
int
test
add
sarl
mov
clc
sbb
or
incb
dec
stc
ret
adc
ss
cmpsb
or
pop
test
inc
data16
pop
and
lea
xor
lret
mov
push
ljmp
loop
xor
pop
roll
int3
xchg
pop
and
ficomps
cmp
insb
sub
lcall
imul
push
shll
xchg
pop
mov
mov
sahf
out
fbstp
jne
negb
inc
pop
cmp
leave
lock
pop
clc
lods
sub
icebp
jge
lcall
dec
push
jb
and
mov
out
pop
popa
jl
or
in
mov
mov
es
out
cmpsb
cmp
mov
mov
call
data16
mov
lret
mov
xorb
mov
cmp
scas
xchg
lcall
sbb
imul
mov
mov
stos
push
sbb
and
sub
jmp
pop
in
movsb
pop
mov
pop
jl
fldcw
sub
lcall
rcll
lret
xchg
pop
and
inc
iret
les
movsl
in
xchg
jo
mov
fiadds
and
pop
mov
xlat
push
mov
mov
add
cmp
pop
mov
aam
fucomp
mov
ror
pop
sbb
cmpsb
pop
xchg
popf
lret
test
stc
cs
pop
nop
das
mul
jmp
push
sbb
hlt
ljmp
out
mov
mov
aas
dec
lds
cmpsl
fiaddl
pop
xor
out
lock
ss
dec
and
in
mov
inc
add
xor
jbe
cwtl
pop
mov
lahf
mov
push
or
ret
shlb
popa
dec
mov
leave
iret
cmp
lret
push
pop
sbb
loopne
xchg
or
push
mov
mov
mov
mov
jmp
xchg
popa
sub
adc
push
pop
mov
push
mov
push
dec
mov
or
add
scas
xor
push
aad
repnz
mov
pop
mov
std
pop
repz
push
into
out
out
andb
aam
pushf
outsl
mov
arpl
add
popa
mov
jmp
pop
sti
in
cwtl
push
mov
fadd
xchg
addr16
and
int
leave
je
xchg
jbe
pop
xchg
mov
movl
int3
lret
jecxz
inc
lret
adc
cmp
fldt
fldl
inc
stos
mov
mov
test
sti
dec
ja
leave
cmp
stc
dec
inc
xchg
leave
adc
call
jg
pop
mov
and
fsts
lahf
mov
scas
das
xorl
mov
cmp
mov
rcr
imulb
pop
xchg
cvtpd2ps
pop
xchg
cld
xor
cwtd
jp
sbb
adc
xor
inc
jae
add
push
mov
push
pop
scas
pop
imul
and
cwtl
push
and
aad
popf
pop
cmp
xor
movups
mov
cmp
rorb
les
dec
pop
movsl
cmp
mov
mov
pop
push
xchg
rcrl
jno
nop
pop
xchg
xchg
fildll
dec
pushf
and
fldl
sbb
fnstenv
fadd
loope
jp
push
stos
cmpsl
ret
fildl
pop
mov
or
sete
cmp
and
dec
mov
inc
rcl
ret
leave
sub
lahf
out
in
mov
enter
sbb
test
ds
mov
fcmovb
mov
pusha
add
inc
dec
sti
mov
jns
fadds
lret
scas
xor
mov
mov
xor
iret
jne
pop
pop
pop
sarl
jb
lret
pop
sbb
xor
and
and
xor
out
dec
cmp
mov
lcall
nop
fwait
xchg
and
loopne
daa
xor
adc
pusha
and
xchg
inc
push
pop
xor
shlb
cmp
cmp
movsb
and
imul
aam
mov
mov
je
pop
inc
sahf
cld
adcb
aaa
stc
lods
out
dec
jbe
lret
xchg
divb
sub
fbstp
sub
add
in
jg
daa
add
cmpsl
xor
mov
inc
rclb
jnp
lods
sub
loopne
sbb
aam
pushf
leave
cmp
and
mov
test
icebp
out
sbb
out
sbbl
cmp
mov
popf
add
ja
dec
mov
fsubl
mov
notl
loope
dec
jne
xchg
push
js
in
mov
push
aas
inc
sbb
sahf
js
pop
xchg
lret
std
loopne
sub
mov
and
or
add
cwtl
mov
lds
inc
ss
les
insb
mov
ja
push
adc
in
mov
sarl
jno
jae
jmp
mov
add
fs
jae
sub
imul
out
sub
cmpsl
aam
add
mov
stos
pop
out
in
dec
sahf
outsb
jecxz
jle
cwtl
mov
pop
in
fisttps
insl
mov
es
insb
push
or
ficoms
test
pop
xor
pushf
sarl
in
outsb
lds
pop
cmp
out
test
adc
dec
or
in
mov
jl
fcmovb
leave
ss
xchg
movsl
loopne
mov
and
rcrb
mov
xchg
notl
add
inc
add
adc
in
and
xor
push
lods
popa
movsl
icebp
sbb
dec
ret
or
or
lock
addl
sbb
adc
lret
inc
rorb
sbb
mov
ss
scas
hlt
cmpsb
dec
add
pop
movsb
movsb
mov
ror
pop
pop
pop
inc
jnp
mov
jo
fldt
ret
push
insl
push
push
mov
arpl
pop
fisttpll
ss
adc
out
inc
imul
add
outsb
cld
mov
sbb
call
mov
imul
sbb
aam
in
in
aam
xor
jnp
jbe
pop
mov
xor
push
xchg
adc
roll
pop
and
mov
push
fwait
push
mov
xor
xchg
out
daa
lea
jle
sbb
add
xor
je
jmp
adc
in
and
test
push
leave
loopne
das
jbe
xchg
shll
mov
roll
sarb
dec
pop
icebp
adc
mov
lcall
fsubrl
cmp
test
and
in
es
std
xor
test
xchg
cmp
test
pop
pop
dec
rcll
jle
cld
sbb
enter
mov
jp
scas
cmp
or
test
lods
scas
sti
adc
inc
icebp
xchg
cld
test
loope
mov
mov
mov
cmp
aaa
lds
in
inc
int
xchg
add
push
hlt
clc
adc
shll
inc
inc
adc
out
mov
cmp
nop
cmp
lret
mov
dec
push
xor
cmp
repnz
adc
out
adc
mov
outsb
pop
ss
cmp
mov
inc
pop
push
out
push
fsubrs
jne
insl
push
inc
sub
jge
cmp
out
notl
fsts
add
aam
sub
in
cmp
daa
pop
and
xchg
inc
icebp
or
leave
xor
dec
loop
ret
dec
loopne
dec
fldt
imul
test
loope
mov
addr16
sub
xor
nop
fidivrs
movsb
push
xor
or
add
jno
lea
sub
xchg
mov
inc
mulb
mov
into
mov
inc
jp
gs
arpl
lock
xchg
jb
std
shrl
mov
out
ja
or
push
mov
and
add
adc
mov
imul
pop
leave
pop
lea
pop
shll
fsts
repnz
fcmovnb
and
ret
daa
ret
xchg
push
arpl
jmp
sub
sub
inc
mov
cmp
push
out
andps
dec
std
sbb
rcrl
orb
dec
add
aam
xchg
and
jle
xchg
mov
sbb
scas
test
adc
cmp
push
mov
mov
push
inc
push
pop
dec
jmp
test
xor
dec
bound
lds
je
push
cmpl
addr16
dec
adc
hlt
and
std
xor
imul
call
push
adc
or
sti
arpl
mov
sbb
xor
ja
scas
cli
mov
seta
and
jp
xor
adc
mov
mov
popa
push
add
inc
sub
adc
xchg
int3
imul
cltd
iret
mov
push
mov
dec
mov
sbbl
sahf
int3
cmp
mov
or
xchg
or
lods
int3
popa
pop
dec
push
mov
push
xlat
and
loop
sti
and
mov
sahf
push
mov
leave
mov
aad
out
insl
lds
xor
and
mov
dec
lahf
adc
montmul
cmpsb
sbbl
fistl
push
xchg
mov
jle
nop
adc
lret
fcmovb
aam
sub
daa
movsb
dec
fldl
imul
sub
cs
lock
inc
sbb
xchg
adcb
and
or
pop
jbe
dec
sbbl
int
movsb
movsl
jl
test
cmpsl
sbb
lods
rcr
push
xor
pop
pushf
xchg
hlt
lret
sub
pop
insb
adc
push
lcall
in
mov
arpl
mov
subb
lcall
loopne
arpl
dec
push
aad
fstpl
clc
dec
cli
std
out
cwtl
push
xchg
in
jbe
rcll
jge
cmp
dec
pop
stc
pop
push
add
sbb
test
and
push
jns
and
or
mov
or
push
sub
dec
fildl
mov
icebp
cmp
js
push
call
dec
pop
mov
jge
dec
and
arpl
fcoml
sarl
and
rolb
mov
or
scas
fiadds
push
lret
cwtl
or
es
addr16
outsb
push
rcr
inc
leave
push
fidivrs
popa
push
nop
and
dec
xchg
stos
gs
mov
pop
mov
lods
mov
das
push
fcompl
sbb
out
and
adc
mov
test
mov
jno
lret
push
in
je
push
adc
cs
fcompl
or
dec
inc
into
sbb
adc
xor
jmp
cmp
cmc
enter
xor
jae
push
andl
push
lea
add
pop
fisttpl
adc
das
push
ds
jno
out
ja
sub
in
roll
push
orb
call
call
sbb
jmp
jl
cmc
inc
movsl
or
test
addr16
push
mov
dec
loop
fcomps
cs
mov
gs
shl
xchg
pusha
sub
leave
cltd
push
divb
or
mov
mov
repnz
inc
out
sbb
insl
dec
push
pushf
inc
mov
ja
mov
add
mov
sbb
pop
adc
popa
mov
scas
cmp
dec
add
clc
imul
xchg
dec
mov
lods
nop
lock
adc
pushf
pop
xor
and
jae
imul
xor
push
jmp
mov
mov
rolb
jb
cmpsb
adc
add
out
aam
adc
imul
push
cli
dec
jo
cld
mov
lock
lds
insl
mov
push
push
lret
mov
and
or
bound
outsb
int
in
xor
inc
sub
in
nop
aaa
pusha
movsb
push
subb
sub
ret
in
sbb
in
repnz
push
cltd
pop
fisubl
push
add
cwtl
sahf
inc
sub
negl
outsl
fdivs
andl
push
iret
cs
jg
out
add
pop
pop
mov
sahf
insl
xorb
xchg
mov
fcoms
ret
push
daa
jp
and
lcall
shlb
ret
or
call
scas
stos
cmp
push
mov
push
jb
divl
add
int3
dec
in
inc
push
mov
pusha
mov
mov
fildl
and
sub
sub
mov
nop
into
mov
xchg
jmp
push
loope
and
inc
sbb
loopne
rcll
imul
dec
push
mov
push
into
inc
xchg
stos
aaa
xor
aad
xor
mov
idivl
adc
fsubr
push
aas
dec
out
std
inc
fstps
mov
test
dec
mov
push
ret
mov
lcall
jle
bound
mov
adc
push
idivb
out
sub
rcr
scas
add
rorl
out
inc
cmc
jbe
shll
sub
out
inc
push
push
aaa
ret
fcoms
or
cmp
add
enter
jge
lcall
test
xchg
cmpsl
idivl
out
std
mov
out
pop
iret
cmp
pop
push
les
aam
push
enter
xchg
sahf
xor
pop
out
movsl
add
add
pop
adc
int3
mov
jne
fs
dec
sub
jl
arpl
fcoms
inc
ss
sbb
xchg
sub
dec
rcl
adc
test
sbb
pusha
and
test
cli
cwtl
xor
movsl
sbb
test
and
ljmp
mov
data16
pop
repz
pop
cmpsb
cmp
fdivs
les
scas
xchg
jmp
mov
or
mov
cmp
test
jle
pop
mov
nop
fidivl
pop
mov
jl
sbb
xchg
mov
dec
test
js
clc
in
jne
push
ret
mov
or
lret
mov
inc
sbb
mov
out
and
jnp
stc
out
jb
sub
mov
addr16
and
jnp
cmp
gs
outsl
pop
sbb
xor
stc
jae
lea
insl
icebp
sub
lcall
xor
das
mov
jmp
inc
int3
or
or
jp
add
int
inc
dec
movsb
addr16
or
popa
push
in
ds
insl
push
adc
jmp
int
add
ret
stc
gs
adc
fwait
or
cltd
adc
loop
in
and
lret
je
xor
push
stos
in
in
xchg
sti
fsubs
stc
or
adc
mov
pusha
pop
loopne
ret
xor
test
sbb
inc
add
sub
add
mov
and
popf
jnp
lret
int
pop
in
outsb
lea
mov
sub
mov
adc
push
ljmp
mull
mov
fsubl
cli
jne
inc
cmp
lret
inc
pop
xchg
mov
add
int
mov
in
mov
and
adc
sahf
and
dec
dec
ja
push
dec
mov
xor
jp
cs
shrl
jge
out
addr16
push
mov
mov
xorl
out
test
sbb
jno
repnz
sub
xorl
stos
in
and
jo
inc
je
das
sub
mov
xchg
call
fcmovu
sarb
mov
mov
xchg
and
enter
ss
jo
lea
pusha
add
xor
inc
xchg
insl
daa
fldt
jbe
push
sub
jp
lock
mov
imul
out
inc
outsb
xchg
xchg
jae
mov
pushf
dec
mov
cmp
dec
into
jge
dec
and
into
movsl
sub
lods
mov
orl
pusha
addr16
or
jbe
mov
jge
jge
fdivs
pop
sub
and
inc
js
dec
iret
xchg
pop
mov
pusha
std
sub
movb
fcmove
js
imul
push
stos
orb
lret
xor
jmp
xchg
mov
mov
scas
ret
xor
fs
outsl
adc
mov
or
adc
nop
je
repnz
or
and
xor
decb
sub
imul
sti
push
dec
outsl
add
incb
mov
les
arpl
adc
mov
push
push
inc
adc
xor
mov
in
mov
adc
pop
cwtl
add
fildll
adc
cmp
jl
outsb
cmp
ja
or
outsl
mulb
sbb
in
test
ficomps
xor
sbb
adc
push
lea
mov
jb
or
mov
pop
aas
adc
les
adc
jne
sub
and
sar
out
xor
push
push
mov
es
ljmp
mov
jg
inc
and
sar
lods
loopne
ja
push
cli
or
aas
sbb
push
sbb
xor
lds
mov
dec
jnp
push
gs
sub
xor
jmp
mov
dec
pop
adc
jae
mov
fwait
xlat
outsb
addl
adc
inc
jo
call
mov
loop
das
jp
pop
aam
sbb
std
aad
lret
mov
or
rcrb
insl
or
push
fcmovnu
loopne
cltd
xor
jno
fstpt
or
mov
lret
jmp
pop
rol
mov
adc
jge
add
sub
jg
rolb
popf
pop
test
jne
sbb
bnd
mov
aad
jbe
add
sbb
pop
cmpsl
cmpsl
in
and
inc
enter
fldenv
scas
aaa
adc
cmp
jl
push
stos
sub
xor
cld
add
or
dec
pop
adc
jne
popw
imul
lea
dec
insb
jmp
insb
aad
movsl
into
xchg
xor
decl
rclb
lds
sub
adcl
sub
mov
nop
divl
std
pop
push
pushf
add
popf
pop
out
xchg
mov
and
lret
add
jl
and
xchg
inc
subb
xor
arpl
sbb
inc
adc
dec
dec
les
xor
pop
incb
and
jns
insl
pop
enter
outsl
cwtl
test
fisttpl
pop
js
fs
mov
xchg
dec
aas
insl
iret
into
sub
loope
arpl
xchg
shr
pop
dec
cs
fsubrl
jp
fs
mov
cld
mov
mov
cld
fsubrs
mov
scas
pop
sub
stc
cmc
cmp
pop
mov
or
ja
out
pop
jb
decl
cmpsl
lahf
imul
sbb
mov
xor
jno
out
cltd
sub
mov
movsb
mulb
fistl
out
xchg
dec
inc
xchg
sub
dec
mov
fbstp
out
mov
lret
js
repnz
and
dec
outsb
rorb
xor
push
out
gs
aas
fdiv
mov
cmpsl
xor
adc
cs
mov
ret
mov
pop
ja
add
daa
and
stos
jnp
sbb
ss
mov
std
dec
push
test
mov
add
mov
xchg
add
mov
fbstp
ret
hlt
or
stos
ja
inc
inc
pop
cld
cmp
lods
out
mov
shr
ret
insl
ret
xchg
nop
jge,pt
jbe
int3
pop
xchg
mov
cmp
dec
mov
cld
cmp
imul
lret
push
mov
inc
jecxz
sbb
fsubs
and
fildll
mov
lock
pop
sbb
inc
sbb
jns
inc
jnp
lea
adc
cmc
sub
or
imul
rcrl
jmp
xor
jp
imul
xchg
push
hlt
out
es
cmp
mov
repz
nop
movsb
lret
and
jns
xchg
xchg
iret
or
sti
aaa
int
jg
sbb
repz
adc
sub
popf
imul
test
adc
into
inc
jge
mov
int
sub
sahf
xchg
xchg
leave
xchg
mov
fcomip
jnp
cld
insb
xchg
adc
mov
pop
das
movsl
push
or
jb
jge
mov
jmp
mov
and
in
std
mov
and
out
lcall
leave
dec
inc
lahf
push
push
and
stc
mov
jle
icebp
fistl
outsl
jno
or
dec
or
shrl
iret
adc
sahf
push
push
std
push
insl
bnd
popf
lcall
inc
fs
filds
insl
push
xchg
arpl
mov
ss
lahf
js
add
dec
es
imul
xor
pop
out
pop
adc
clc
ss
jb
pop
shl
out
cmp
pop
cmpsl
push
mov
mov
int3
rclb
pop
or
js
dec
rcrb
push
pop
fisubrs
fadd
loopne
push
test
mov
imul
adc
test
jo
push
and
add
popa
movl
fidivrl
std
scas
cmp
sbb
lcall
and
call
inc
scas
aas
loope
mov
sbb
or
inc
out
adc
inc
push
stos
fsubl
mov
and
mov
clc
pop
pop
outsl
cmp
xor
pop
ret
mov
dec
test
pop
cs
aaa
mov
movsl
mov
jmp
adc
sbb
pop
mov
pop
jae
ftst
inc
and
roll
or
and
or
mov
sub
sub
jno
and
popa
leave
add
sub
jns
je
adcb
pop
jo
leave
jbe
mov
mov
sbb
cmpb
idiv
cld
sbb
in
lods
ror
pop
aaa
xor
rcrb
je
stos
ja
sub
pop
mov
jle
pushf
cmpsb
addr16
sub
pop
jmp
aam
dec
xchg
call
movsl
inc
out
movsb
shlb
sub
loopne
movsb
lods
or
fs
cmp
mov
mov
fnstcw
rcrl
mull
dec
xchg
sbb
add
test
mul
sbb
mov
idivl
cli
push
pop
sbb
popf
test
xchg
pusha
inc
mov
stos
pop
push
jo
scas
data16
sahf
scas
mov
incl
inc
adc
cmpsb
mov
add
int
lods
popf
scas
xor
addr16
and
pop
sbb
cmc
pop
mov
cmp
leave
cwtl
hlt
cltd
push
push
mov
ja
fsubs
out
subb
out
xchg
inc
pop
push
cmpsl
mov
lds
incb
push
stos
mov
in
mov
rclb
mov
mov
add
jb
into
cltd
daa
mov
inc
std
mov
lret
jecxz
and
inc
enter
push
adc
int3
push
loope
imul
mov
das
xchg
ret
out
dec
clc
aam
outsb
mov
or
shll
pop
push
sub
roll
es
clc
cmp
rorb
repz
push
imul
xchg
call
mov
mov
push
and
es
push
pop
lods
adc
jg
xchg
pop
fs
or
mov
lea
ficomps
mov
adc
shrb
nop
outsb
cmp
cmp
jns
andl
div
add
inc
pop
jg
ja
daa
fldl2t
xor
insl
and
rcll
addr16
es
jno
xor
sub
mov
jae
movsb
arpl
jb
mov
push
xchg
inc
nop
sub
jae
mov
push
mov
icebp
sbb
jl
fldl
mov
cmp
mov
dec
mov
aam
jnp
daa
inc
push
jl
mov
lret
je
pop
fistps
jno
add
fs
lock
inc
hlt
jg
xchg
push
ret
mov
loopne
hlt
int
loope
jmp
outsb
sub
and
xor
pop
scas
mov
faddl
or
les
mov
mov
jge
mov
flds
or
add
push
lea
aaa
jb
mov
push
xor
xchg
sub
ds
stc
add
out
mov
int3
sbb
loop
int
mov
mov
orb
pop
inc
ss
pushf
movsb
rclb
addr16
mov
jg
jp
add
jge
xlat
les
aad
xor
mov
jnp
inc
insl
mov
std
fs
aas
cmp
ds
test
push
roll
test
add
and
jbe
arpl
mov
xchg
xor
rcrb
sub
push
and
push
pop
or
scas
inc
out
and
cltd
pusha
dec
cltd
inc
icebp
sar
es
inc
pop
dec
scas
in
imul
jbe
stos
cmp
xchg
daa
cmp
xchg
or
fucomi
sbb
xchg
test
mov
jecxz
adc
inc
inc
mov
xchg
pop
xchg
xchg
iret
and
pop
leave
test
add
popf
push
xchg
movsb
mov
dec
mov
adc
incb
xor
or
roll
fstpt
sub
loop
jmp
insl
push
jl
scas
addb
ljmp
add
add
xor
inc
shll
pop
lret
push
pop
adc
jo
shll
stos
inc
aaa
loopne
adc
out
jl
hlt
dec
daa
push
jle
dec
add
rorl
enter
jbe
add
aas
lods
subb
lds
jl
pop
sub
iret
jmp
cmp
adc
or
jecxz
into
into
testl
fucom
cld
cmp
mov
pop
iret
inc
out
and
xchg
xchg
or
sbb
adc
mov
sub
jmp
jbe
push
and
cmpsl
sub
sub
test
bound
mov
jns
rclb
xchg
sub
push
aad
mov
mov
fidivrl
int3
sub
mov
add
sub
jg
xchg
and
xchg
ds
cli
push
stos
mov
push
inc
call
cmpl
stc
mov
or
nop
jns
fwait
xchg
jns
push
xchg
mov
call
mov
in
and
dec
call
xor
in
outsb
cmp
mov
mov
out
ret
cmpsl
sbb
cwtl
int
std
push
push
pusha
int3
push
inc
mov
sarb
sbb
scas
pop
sub
imul
arpl
movsl
shll
xchg
xor
aaa
xor
or
stos
addr16
pop
adc
lods
or
mov
adc
ret
sub
cmp
inc
push
xchg
hlt
sahf
js
aad
cmc
sub
sub
in
repnz
mov
jge
dec
and
or
clc
andl
inc
jmp
lahf
sbb
push
call
jb
out
dec
inc
ss
or
insw
in
aad
frstor
repz
jp
xchg
mov
leave
repnz
les
or
lcall
out
jb
push
pop
sub
rorb
sar
xchg
pushf
jl
mov
out
mov
cvtdq2ps
ljmp
cmpsl
xchg
adc
jge
cmpsb
inc
popa
ret
mov
sahf
inc
gs
xchg
movsl
int
push
mov
cmp
mov
push
mov
fbld
cmp
mov
loope
jp
hlt
les
mov
fldt
sbbl
cltd
push
sub
pop
or
xor
dec
int
or
xor
andb
and
push
cmp
pop
push
push
sarb
and
pop
sbb
shrl
sbb
adc
and
ja
add
or
and
clc
xchg
dec
adcb
outsl
mov
insb
scas
pop
push
dec
outsl
hlt
or
iret
or
daa
jmp
xchg
lock
aad
pop
xor
fwait
loope
xchg
mov
adc
jecxz
xchg
fwait
out
insl
xchg
and
sub
mov
sbbl
cmp
sti
rolb
push
popf
mov
push
xchg
mov
and
xor
and
push
enter
push
jmp
out
pop
lods
std
jbe
add
roll
pop
shll
adc
mov
jbe
mov
cld
mov
js
in
popf
jle
imul
mov
stc
mov
pop
pop
in
sbb
add
vpsllw
stc
jae
mov
mov
adc
mov
xor
test
sar
inc
lods
push
loope
pop
arpl
decb
insl
inc
sub
mov
inc
and
jne
js
orb
inc
test
nop
xor
out
dec
inc
in
outsb
pop
mov
mov
mov
icebp
xchg
imul
jnp
ficoml
adc
aam
popa
jge
aaa
mov
mov
xchg
jbe
cmp
inc
les
inc
dec
push
popf
inc
xor
push
les
adc
cmp
mov
sub
cmp
push
sub
int3
dec
cmp
insl
pop
jle
mov
sbb
xchg
repz
cwtl
or
add
into
clc
mov
cli
jb
into
and
aad
shl
nop
mov
sub
mov
add
clc
xchg
pop
lods
mov
lds
adc
dec
push
cmp
rcrb
shll
ret
add
cs
xchg
adc
int
fiaddl
jl
mov
or
jp
daa
mov
pop
cmp
xchg
fisttpll
add
pop
inc
in
jge
shll
fs
xchg
not
dec
scas
pop
dec
imul
inc
sub
mov
xor
pop
fcomps
loopne
inc
push
push
loopne
jo
lea
mov
aas
iret
cmp
out
add
sbb
jno
jg
pop
out
sbb
add
outsb
fnstsw
xchg
adc
stos
inc
and
add
sarb
arpl
shrl
dec
pusha
jne
jmp
mov
sbb
aas
or
sub
jmp
and
rcl
push
jle
cmpsb
cmp
ljmp
int3
adc
sbb
jmp
add
xor
cmc
repz
stc
repz
enter
pop
daa
repnz
add
cs
aaa
mov
dec
test
sub
pop
adc
lea
aaa
cmc
mov
mov
sbb
mov
stos
or
pushf
and
sbb
pop
xchg
aaa
mov
sbb
jnp
call
dec
clc
cmpsb
pop
xlat
out
les
fisttps
shrl
popa
pop
in
xor
xlat
mov
dec
in
test
aad
add
sar
jo
mov
dec
fcoms
xlat
aam
pop
dec
mov
sbb
mov
rorb
cmpsl
arpl
je
cmpsl
cli
xor
mov
pusha
jmp
inc
push
jle
inc
push
pop
fnstenv
adc
jo
ljmp
xchg
push
add
scas
mov
sub
sar
xchg
and
bound
stc
xor
adc
add
mov
jb
mov
dec
data16
and
int3
je
add
mov
push
and
push
dec
pop
gs
ljmp
mov
jns
cli
dec
pop
mov
inc
mov
jmp
fisttps
push
ljmp
pushf
pushf
lock
addr16
js
xor
mov
xor
jmp
mov
cwtl
cli
rclb
iret
or
cld
push
repz
or
cli
in
xlat
iret
popa
pop
iret
push
jnp
insl
loop
pushf
aaa
scas
ds
fnstsw
popa
and
dec
pop
cli
into
lds
lea
aas
loop
nop
add
sbb
xchg
vpcmpeqb
xor
test
bound
adc
mov
xor
pop
movsl
push
mov
xor
dec
mov
lods
inc
nop
jbe
ret
sub
movsb
pop
imul
cmp
sub
ljmp
ss
pop
inc
cmp
dec
lea
add
xor
sub
cmp
push
lret
lock
and
in
dec
push
xchg
fstps
or
pushf
xor
sbb
pop
and
leave
ljmp
lret
jmp
rorl
clc
xchg
lea
inc
or
test
mov
ret
lods
ret
outsl
lret
roll
xor
pop
sub
push
fstpl
adc
ficoml
ret
outsb
daa
mov
popa
sub
ret
mov
test
mov
ds
push
insb
loope
out
les
dec
iret
in
jmp
fldenv
sbb
stos
outsb
arpl
mov
fadds
or
movsb
xlat
jge
dec
lcall
push
or
adc
pushf
adc
hlt
test
sub
stc
jmp
es
ret
lret
pop
xor
je
ds
movl
imul
mov
push
fidivrl
xchg
dec
ds
jcxz
inc
adc
out
xchg
iret
int3
inc
push
enter
jg
push
xchg
std
pop
out
inc
mov
fidivrs
pushl
push
add
xchg
push
cmpsl
test
sti
and
sbb
push
js
and
sysexit
dec
sbb
add
mov
aaa
xor
inc
jb
adc
aas
xor
pop
xchg
mov
jae
sub
jns
popa
addr16
imulb
insl
mov
in
xor
mov
lock
fldt
out
xchg
sbb
adc
cmp
ja
cmp
outsl
out
xlat
popa
inc
cmp
insb
lret
dec
ffree
mov
std
mov
bound
les
sub
jmp
rclb
push
and
and
jbe
dec
shll
mov
adc
vshufpd
mov
push
push
ds
cmp
sbbl
mov
in
inc
xor
xchg
sbb
pop
mov
sbb
in
add
mov
xor
sbb
xchg
mov
loopne
outsb
sti
or
mov
testb
addr16
pusha
inc
jo
jno
mov
sbb
xchg
xchg
lock
cmc
xadd
pushf
fs
adc
pop
insb
nop
mov
cmp
or
pop
cs
outsl
imull
mov
sbb
inc
cmpsb
ds
cmc
loop
adc
in
cli
sbb
or
add
jmp
jge
sub
and
in
and
mulb
mov
pop
push
dec
jl
fcompl
sub
jecxz
lahf
adc
jnp
lock
add
sti
add
push
stos
xchg
jns
sub
pusha
dec
cs
cmpsb
mov
out
adc
adc
ret
push
out
mov
xor
sbb
icebp
aam
lcall
jae
mov
xchg
jecxz
ud0
gs
fwait
lods
inc
rcrl
arpl
pop
push
out
decl
mov
cld
lds
lods
xorl
jl
sub
and
mov
and
dec
imul
pop
rorb
mov
and
add
mov
mov
rorb
pusha
dec
or
add
andl
xchg
orb
loope
jno
mov
adc
and
aas
out
shlb
repnz
out
sbb
out
mov
push
test
iret
sbb
aam
stos
in
popa
fstpl
out
xchg
int
in
insb
and
push
jp
push
xchg
mov
inc
popa
jg
and
daa
push
or
js
fldenv
loopne
add
mov
mov
popf
push
pop
icebp
fistl
inc
gs
dec
iret
sub
fwait
bound
fimuls
loop
movsb
dec
mov
push
lcall
ja
ja
repnz
mov
xor
push
popa
jbe
scas
and
add
mov
repnz
pop
pop
mov
inc
icebp
sbb
lock
xchg
stos
xchg
push
addr16
das
imul
xchg
enter
insl
je
mov
mov
lahf
lds
sbb
imul
sbb
xchg
sub
xchg
adc
xor
loop
sub
loopne
sahf
cmp
and
test
shlb
xchg
mov
inc
push
mov
and
dec
inc
subb
push
fwait
in
jne
jg
out
cmp
push
push
push
arpl
and
stc
dec
jecxz
push
fnsave
call
fisubrs
xchg
push
xor
push
mov
loop
iret
leave
push
sub
xor
fisubs
rcl
cmpsb
sub
mov
jnp
into
cld
pop
jecxz
shlb
jp
dec
jg
push
mov
sub
insb
pop
das
jae
cmp
aad
push
sub
add
mov
push
hlt
mov
push
data16
jo
lods
and
hlt
push
and
mov
sub
out
out
xchg
and
xchg
rol
cmp
pop
push
dec
inc
dec
int3
xchg
rorb
mov
jp
cmp
imull
mov
movsb
imul
pop
pop
sbb
mov
pop
shrl
cmp
pusha
lret
adc
loop
mov
xorl
cmp
adc
jbe
xchg
cwtl
push
mov
lret
cmpsb
adc
pop
mov
aad
inc
cwtl
sbb
jmp
movsb
lea
mov
add
iret
add
and
pop
inc
push
addr16
adc
stos
mov
sbb
pop
aad
insl
sub
xor
cmpsl
push
ljmp
mov
out
push
mov
test
xor
xlat
xor
mov
shll
or
add
push
scas
ja
out
add
sbb
cmp
pop
jg
std
push
out
pop
pop
add
cmc
jl
fnstsw
mov
aaa
icebp
mov
xor
int
das
and
cmpsb
cs
mov
push
cmp
inc
pop
dec
or
clc
xchg
lret
dec
jno
adc
mov
or
out
pushf
adc
mov
push
inc
inc
jmp
push
or
push
stc
enter
test
push
loop
add
stc
push
inc
dec
sub
mov
pop
mov
sysenter
inc
push
dec
movsb
jno
jb
pop
sub
adc
lea
js
js
pop
sub
sbb
iret
fldl
ret
lea
scas
cmp
imul
xor
cmc
push
data16
pop
stos
and
sub
dec
pop
xchg
adc
or
ss
imul
xchg
mov
push
mov
jne
dec
sub
sbb
and
sub
jg
test
add
gs
stos
pop
cltd
sbb
das
mov
pop
adc
add
dec
cli
arpl
or
pushf
push
fwait
nop
mov
fsubs
sbb
mov
sbb
lahf
pop
inc
inc
xor
rcll
dec
or
dec
add
sub
xchg
and
fsts
push
mov
in
jg
faddp
xchg
sub
dec
inc
xchg
js
xchg
nop
out
or
shlb
ret
call
lahf
mov
inc
call
jae
lahf
xor
and
and
jbe
jo
jb
mov
xchg
das
js
sbb
push
add
sbb
jnp
stos
push
mov
add
ds
jl
pop
add
enter
pop
jnp
stos
sbb
fdivr
in
aam
fbstp
push
bound
pop
dec
cs
arpl
xor
in
dec
outsb
into
push
aam
stc
inc
pop
mov
jns
push
push
cmp
bound
repnz
es
outsl
scas
fucomp
xchg
push
xchg
iret
mov
xor
jge
into
arpl
out
jecxz
rcll
sarl
mov
subb
lret
mov
insb
insb
lock
jge
fidivrs
xor
jb
int3
les
fldt
lahf
scas
fistl
enter
jo
cmp
rol
movsl
shl
xchg
and
call
divl
pusha
das
inc
and
xchg
or
or
je
movsb
jecxz
jne
test
pop
add
add
or
add
add
out
pop
ja
push
cmp
sahf
jmp
shrl
cli
and
sub
sub
ret
add
inc
sub
cmp
adc
add
xor
cld
mov
imul
mov
cli
cmp
rorl
movsb
sub
jecxz
add
in
loopne
cs
iret
push
xor
sbb
inc
add
pop
or
pop
stos
fcmovu
mov
fs
mov
in
gs
in
loopne
sbb
outsl
mov
adc
jbe
fwait
jge
or
fwait
cmp
push
or
lret
xlat
jno
nop
outsb
sbb
cmp
inc
out
lret
jbe
fcmovbe
popf
sub
cmp
xchg
outsb
icebp
ja
ja
icebp
push
leave
push
cmp
or
sbb
test
fnstenv
mov
cmp
xor
jl
inc
pop
pop
xchg
pop
inc
inc
lea
cld
dec
xchg
mov
xlat
pusha
push
xchg
jmp
xor
jnp
rclb
and
push
inc
xchg
dec
sbb
jmp
jno
popf
subl
into
sub
push
lock
dec
mov
pop
pop
or
out
cmp
mov
mov
roll
mov
arpl
imul
jl
mov
fadds
mov
scas
test
aad
and
sarb
add
jecxz
pop
xchg
pusha
xor
jmp
cmpsb
xor
lods
push
push
push
enter
xchg
mov
pop
jmp
jb
xchg
sub
push
push
call
dec
adc
sbb
xor
aam
pop
jecxz
xor
sbb
dec
mov
rorb
pop
add
push
cmp
and
sub
sub
pop
lcall
cmp
inc
enter
and
sub
outsl
cmc
lods
in
fs
imul
shrl
mov
fs
dec
sub
or
stc
pop
add
adc
idivb
lock
in
jecxz
push
push
mov
scas
push
decb
popa
adc
xchg
inc
nop
pop
mov
sub
xor
loop
mov
enter
push
cmpsb
mov
jle
test
jno
nop
jmp
stc
cmp
mov
xor
mov
out
ljmp
adc
xor
cwtl
sub
jno
test
xor
idivl
cli
mov
mov
and
aad
scas
push
adc
fstpl
out
std
cmp
aam
fistpl
call
xor
jg
mov
mov
add
adc
scas
or
pop
loopne
cmp
push
cmp
popa
std
inc
jp
loopne
sub
mov
dec
popl
xor
in
adc
push
hlt
fstl
std
cmp
outsb
clc
leave
pushf
shll
in
jno
arpl
je
push
jecxz
shlb
rcrl
push
lahf
inc
in
ss
sub
xchg
xor
cmp
ret
pop
aam
mov
add
jp
fwait
cmc
xchg
cmp
push
fidivs
movsl
fwait
push
roll
mov
addr16
jbe
mov
or
in
fldt
jp
popf
nop
push
jl
dec
and
cmc
std
pop
and
mov
mov
repnz
sti
or
inc
imul
jno
add
lea
dec
cmp
insl
xor
pop
inc
jmp
xchg
in
push
push
push
sbb
je,pt
sbb
fcompl
pop
sub
pop
xchg
cwtl
bound
push
gs
dec
imul
and
and
push
fists
movsb
insb
push
xchg
fs
lret
xorl
and
fs
dec
mov
inc
int
adc
ret
mov
xor
and
data16
dec
jp
mov
test
dec
push
mov
aas
mov
les
stc
cmpsb
lock
sub
xchg
lods
in
insl
lcall
incb
xchg
arpl
dec
push
adc
push
or
and
lcall
in
mov
in
test
andb
mov
stc
push
fcmovnu
push
jle
push
cmp
sub
mov
jecxz
push
or
insl
sbb
sub
js
outsl
pushf
xor
pop
xchg
cli
sbb
cltd
pop
rol
mov
enter
pop
jb
arpl
in
xchg
mov
arpl
inc
fcomps
mov
jmp
arpl
cmp
cmp
shl
cli
movsb
jne
test
push
jge
and
out
lcall
enter
mov
les
fnstenv
push
mov
pop
sbb
movsl
repz
pop
pop
andb
cmp
sub
push
stc
mov
arpl
call
jmp
or
and
push
fidivrl
mov
mov
sub
pop
push
std
dec
and
test
pop
test
sub
mov
test
mov
cs
jne
or
popf
sub
add
add
and
fstl
ret
xor
out
mov
xor
ds
outsl
mov
les
cli
pop
jnp
hlt
je
xor
icebp
dec
cli
int
jae
mov
insl
ja
push
jns
out
inc
cwtl
je
cwtl
jge
fwait
add
les
mov
pop
pop
popa
shrl
ficompl
loopne
stos
xorl
xchg
int3
jecxz
pop
adc
dec
dec
inc
dec
adc
push
stos
jl
jmp
stos
loop
and
cmpsl
arpl
sub
xlat
jmp
jecxz
pop
fidivrl
in
xor
out
pop
mov
mov
inc
dec
mov
subb
mov
mov
jno
adc
push
push
rcll
daa
xor
insl
in
cmpsl
ret
je
adc
sub
cmp
push
rcll
mov
mov
adc
iret
adc
adc
test
in
push
lods
fnstenv
stos
lds
imul
mov
sub
sti
pop
cmpsl
stos
fldenv
movsl
cmpsb
iret
lods
xchg
mov
sub
cmp
push
pop
sub
aaa
lods
lods
mov
jle
sub
in
add
adc
mov
cs
sbb
aas
or
pop
pop
inc
lcall
push
das
lret
sub
js
aad
mov
jae
stos
xor
pop
outsb
sbb
or
cli
mov
daa
mov
rcrl
pusha
movsb
pop
aad
push
fbstp
mov
ljmp
call
push
mov
call
scas
and
aam
rdmsr
les
xor
sbb
xchg
xor
fs
mov
shl
cmc
adc
nop
daa
pop
push
aam
xor
lret
mov
icebp
rorl
jg
mov
in
and
pop
pop
adc
arpl
cld
cmpsl
fisttpl
mov
add
and
ror
int
pop
add
sbb
jbe
xor
push
mov
adc
pop
sub
push
mov
aad
les
sub
xchg
ret
pop
stos
add
push
addr16
shll
cs
mov
iret
fmuls
sbb
dec
fnstcw
inc
mov
ret
js
mov
test
jg
xchg
or
fdivl
ljmp
mov
inc
in
ret
jne
cmpsl
rclb
into
inc
push
jg
jecxz
leave
gs
iret
lea
push
mov
and
pop
cmc
push
movsb
ljmp
mov
leave
and
mov
jp
repz
push
xchg
test
loope
test
scas
imul
push
push
add
je
inc
and
sbb
mov
ds
push
lds
cmp
popf
stc
push
ja
inc
cmp
in
sahf
push
aas
or
movsb
enter
inc
mov
pushf
js
cmc
add
addl
rorl
mov
decl
add
out
push
rcrb
fldcw
sbb
dec
les
xchg
push
cmpsl
into
mov
xlat
icebp
js
in
inc
loop
push
fwait
out
les
cs
call
sbb
pop
testl
rolb
into
rorl
mov
ret
push
daa
ret
jb
push
jp
icebp
pop
aad
jb
ror
mov
pusha
xchg
dec
fadds
adc
dec
addr16
test
cmp
dec
fcomps
shrl
and
ds
leave
xor
cmp
std
icebp
das
lds
rclb
cmp
imul
inc
popf
sti
xchg
loop
lcall
sbb
mov
cmp
insl
jge
stc
dec
clc
int
and
push
xchg
mov
es
add
fiaddl
arpl
ret
jg
outsl
push
and
es
fildl
sub
jns
into
hlt
mov
adc
ror
idivb
dec
test
jp,pt
ret
arpl
shll
sbb
cli
xchg
idivl
or
lods
push
ss
and
insl
sub
dec
mov
pop
pop
pop
stc
mov
mov
iret
out
int3
adc
neg
out
sbb
out
mov
jmp
ja
fidivrl
sbb
sub
test
lods
call
nop
cmc
cmp
cmpsl
xlat
insb
mov
int
call
push
int
sub
jl
and
fimull
dec
pusha
sbb
inc
push
inc
add
pop
lret
inc
adc
xchg
mov
sbb
dec
fisubrs
push
sbb
or
aad
mov
mov
mov
jno
cmp
inc
add
jbe
lds
lret
movsl
push
mov
push
lods
cli
mov
mov
loopne
out
mov
adc
pop
sub
push
cmpsb
ljmp
scas
loopne
fwait
jp
fistl
pop
f2xm1
lcall
lods
adc
cmc
out
push
iret
push
idivl
mov
pop
mov
lahf
jno
push
stos
add
add
inc
adc
decb
xor
lea
rcrl
inc
pop
outsb
mov
movsl
ss
jne
std
aad
push
je
pop
push
mov
or
pop
pop
les
inc
jmp
ret
imulb
cld
mul
mov
dec
inc
mov
fmull
insb
stc
mov
sub
out
lods
and
cltd
jb
lock
cwtl
jl
cmpsl
sub
sub
cmp
popl
shll
addb
cmpsb
inc
sub
pop
out
xchg
cmp
hlt
xchg
ficoms
pop
mov
sub
pusha
sbb
pop
lret
sbb
sbb
cmp
push
push
jcxz
jg
dec
mov
cmp
push
sahf
vorps
das
cmc
xor
mov
inc
lret
jb
pop
push
rolb
das
xchg
sbb
ret
dec
div
loopne
jmp
mov
clc
movsb
or
and
lcall
sbb
subl
stos
cmc
sub
subb
xchg
fbstp
sbb
or
or
jne
inc
outsb
mov
bound
adc
inc
xchg
in
imul
aaa
push
cltd
xor
clc
jmp
push
mov
iret
mov
inc
sarb
xchg
cltd
sar
je
lds
popf
xlat
ss
sub
pushl
or
test
test
arpl
out
imul
mov
pop
mov
xchg
jmp
xchg
movsb
pushw
xor
sarl
mov
adc
imul
add
mov
fcoms
andl
shll
fidivs
ja
stc
xchg
mov
call
and
daa
pop
jo
inc
mov
cmp
jmp
xor
inc
dec
dec
xor
inc
push
sahf
mov
jo
hlt
call
mov
scas
lret
cmpl
data16
cmp
xchg
mov
fldcw
in
cli
cmp
mov
test
mov
xlat
fs
in
orl
cli
cltd
mov
imul
fmull
xchg
xor
out
repnz
push
pushf
mov
cmp
mov
outsl
sbb
mov
sbb
fsubs
cmp
movb
mov
jo
add
xchg
and
nop
inc
jbe
adcl
aam
inc
jne
xchg
std
cs
enter
repnz
sub
or
aaa
int
sub
divb
dec
or
push
in
inc
xchg
push
mov
sub
mov
mov
cs
mov
mov
mov
in
adc
lock
jecxz
das
sbb
inc
loop
cmp
xchg
cmp
or
lods
ds
pop
adc
addr16
lock
inc
push
mov
ss
xchg
or
pusha
popl
cs
adc
lea
popa
in
mov
add
dec
xor
jns
movl
gs
xor
sbb
je
ja
xor
sub
insl
divl
adc
das
jns
inc
or
into
xchg
mov
jno
fsubl
mov
out
bound
jo
sbb
mov
or
and
inc
mull
xor
xchg
pop
sbb
out
sbb
sub
dec
xchg
cltd
movsb
xchg
jecxz
fdivl
bound
inc
sub
stos
mov
subl
int
mov
scas
fldcw
data16
sbb
add
dec
push
pop
test
push
out
xlat
mov
fstl
jae
imul
dec
mov
xor
xchg
jb
movsl
mov
cld
popa
loop
in
adc
dec
mov
rcrl
adc
sub
or
mov
jnp
jo
xchg
inc
cmpsl
int3
imul
jle
lods
lret
mov
je
mov
dec
dec
adcl
add
push
into
xchg
ret
mov
push
inc
and
sub
sbb
xor
cmp
pop
nop
lret
aad
std
sub
xor
cltd
inc
lea
push
out
fs
cwtl
or
push
xchg
test
cs
outsl
sub
xlat
pop
ret
cmpsl
int
addr16
mov
xor
mov
push
sub
outsb
fdivrs
ss
lret
dec
je
xchg
imul
xchg
push
test
dec
cmp
adc
lods
cmp
std
lahf
xchg
fsubrl
fldt
jg
push
popa
lret
outsl
adc
cmpsb
push
inc
and
mov
add
repnz
out
lods
repz
xchg
loopne
and
adc
xor
xchg
sub
testb
inc
lahf
insb
sarb
fisttpll
push
push
mov
dec
jmp
push
das
repnz
test
dec
push
jl
or
inc
xchg
cmpsl
mov
dec
fsub
imul
cmp
cmp
dec
scas
mov
ss
adc
push
arpl
push
shll
out
cld
mov
xchg
jne
pop
dec
outsb
or
dec
xchg
xchg
es
sbb
loopne
jo
jmp
add
test
lods
xlat
lods
cmpsl
adc
mov
xor
das
out
mov
arpl
push
mov
and
push
lret
fwait
jge
sti
rorl
test
loope
pushf
jp
sbb
sahf
add
fdivrl
sub
mov
movsb
cli
cmp
addr16
adc
mov
nop
lret
sahf
push
stc
push
mov
ds
pop
mov
push
push
jo
inc
or
ret
adc
dec
xchg
cwtl
sti
push
in
movsl
pop
or
dec
add
inc
cld
sbb
repnz
sub
fcomps
add
shlb
aad
pop
idivl
pop
mov
push
sub
mov
and
jge
repnz
pop
mov
lods
movsl
ficomps
xor
mov
and
sbb
mov
ja
hlt
mov
aad
into
pop
pop
jb
inc
in
insl
add
sbb
aam
inc
jg
adc
iret
add
jl
loope
mov
fldt
jmp
push
rcr
adc
ja
repnz
stos
frstor
cmc
stc
loop
jge
shl
adc
jno
cmp
out
daa
rcrb
lock
xor
or
cmovg
sbb
pop
push
mov
inc
adc
imul
orl
sub
xchg
mov
sub
das
test
shrb
mov
sbb
sub
sbb
and
decb
jl
cli
lahf
cmp
jb
push
mulb
and
test
lret
lret
adc
mov
xchg
in
mov
into
ret
adc
fistpll
loop
nop
ret
in
add
or
psrlw
ss
orb
pop
std
gs
les
pop
or
into
push
les
jg
cmp
xlat
inc
enter
cmc
movsb
in
mov
into
std
push
ds
mov
xchg
push
lcall
xchg
mov
or
cmpsl
in
jp
add
fldcw
pop
xchg
inc
dec
fdivs
addb
cwtl
push
idiv
in
add
inc
clc
jge
addr16
jb
sbb
loope
lds
enter
lcall
stos
xchg
adc
sub
xchg
fidivl
les
dec
dec
aam
xor
cwtl
and
jb
adc
test
in
loop
data16
into
fmul
sub
ret
or
cli
cmp
data16
lret
mov
cmpsl
in
add
jl
out
sub
stc
cmp
loop,pn
dec
dec
mov
and
mov
sarb
mov
mov
xlat
and
cmpl
xchg
rcrl
outsl
jmp
push
fbld
dec
cmpsb
push
add
test
cmp
mov
push
and
add
xor
lods
pop
shll
movsb
cmc
outsl
pop
jae
shlb
mov
jno
into
and
sbb
fldcw
xchg
sub
adc
loopne
xchg
cli
ss
jmp
sbb
data16
popf
push
daa
incl
js
scas
sbb
dec
jne
dec
inc
mov
cli
inc
fmull
pop
fs
add
inc
mov
outsb
leave
es
je
sbb
jle
and
mov
cmpsl
fstps
add
test
mov
jp
inc
pop
shr
outsl
fisubl
dec
jae
fldt
dec
in
in
inc
jg
ss
mov
cmc
inc
mov
je
out
imul
jne
sub
enter
mov
or
test
fwait
dec
xlat
test
lods
lds
lods
push
cmc
faddp
js
bound
sahf
push
out
ret
test
test
fsubrs
adc
movsl
lds
js
cmpsl
push
adc
inc
push
sub
push
fs
cmp
dec
xor
aad
jbe
adc
jp
inc
test
mov
gs
out
mov
sbb
sbb
das
jbe
jbe
xchg
inc
mov
in
jecxz
xchg
push
jl
cld
lea
adc
sub
mov
test
mov
add
into
insl
jmp
mov
push
sbb
insl
ret
in
mov
out
inc
pop
mov
mov
out
dec
lahf
inc
call
lods
das
addr16
pop
dec
push
cwtl
inc
sub
cmc
sbb
xchg
pop
addr16
dec
sbb
cs
loop
pusha
cmp
cmpsb
pop
in
je
sub
ljmp
sbb
pop
pop
inc
dec
iret
dec
out
int
jp
inc
sub
rolb
popf
jp
mov
and
xor
cwtl
adc
in
dec
push
pop
adc
gs
dec
xor
adc
test
sahf
mov
insb
arpl
dec
stos
cmc
push
lds
cmpsl
scas
std
inc
mov
fmulp
call
popa
and
and
add
sahf
mov
jecxz
add
ret
and
gs
xor
xchg
mov
and
out
scas
daa
fiadds
fidivl
mov
cld
mov
popf
mov
mov
xor
mov
iret
lods
mov
fnstenv
fistpll
xor
loop
out
mov
rclb
push
mov
out
arpl
and
jo
in
push
push
test
fwait
insb
jmp
shll
insl
xor
xchg
enter
and
sub
cld
inc
aam
lock
rcr
adc
and
hlt
insl
pop
iret
and
mov
jno
dec
xchg
outsb
mov
push
dec
xlat
jo
mov
cmpsb
jae
mov
or
push
mov
mov
sub
pop
jo
pop
aas
jne
adc
sbb
lods
jns
mov
imul
addb
and
xor
nop
je
xor
sbb
push
test
sub
jle
js
pop
in
clc
outsl
adc
addr16
test
xchg
mov
and
xlat
sbb
pushf
xor
xchg
add
xor
pop
push
add
jle
das
outsb
lcall
xor
xchg
adc
imul
shlb
push
adc
popa
stos
sahf
sub
xchg
lea
xchg
pop
xchg
repnz
and
inc
mov
push
or
xchg
scas
jbe
mov
mov
push
stos
repz
mov
rorb
movb
xor
ds
ja
jb
xchg
pop
sbb
jo
mov
mov
aam
xchg
stos
pop
jmp
out
aaa
jg
outsb
cmp
xor
out
fdivp
mov
jo
mov
nop
sahf
or
in
or
push
xchg
ret
jb
mov
sub
fstps
out
cld
push
sbb
daa
mov
imul
inc
cmp
dec
in
cmpsb
out
pop
jns
mov
jp
pop
data16
je
xor
push
in
sbb
dec
pushl
add
jge
aaa
mov
bound
dec
lods
lahf
filds
dec
clc
sub
or
pop
dec
inc
js
inc
xchg
dec
movsl
outsb
dec
les
xor
lcall
inc
test
cmp
and
mov
loopne
mov
in
nop
or
aas
cmp
jecxz
sbb
mov
xchg
xor
cmc
jnp
scas
test
and
push
iret
ss
mov
cltd
gs
insb
mov
std
add
xlat
cmpsb
xchg
cltd
push
dec
cltd
rolb
dec
int3
adc
mov
ss
dec
jo
arpl
mov
xchg
or
jo
mov
push
mov
js
cs
test
data16
xor
mov
sbb
push
ja
xor
fildl
cmpsl
dec
mov
scas
fadd
xlat
clc
xchg
sub
mov
inc
cmp
pop
jge
dec
aam
dec
mov
dec
dec
icebp
jmp
or
push
add
push
mov
push
jb
add
int
cmp
aaa
lock
jbe
jle
movsb
or
pusha
out
mov
imull
in
or
lods
and
and
jl
mov
ss
sub
outsb
mov
sbb
mov
cmp
jbe
pop
jg
mov
or
rcrl
mov
mov
mov
stos
mov
jo
sbb
ja
arpl
rcr
decb
sti
mov
sbb
bound
add
mov
out
mov
xlat
pop
aaa
cmp
and
test
loope
test
call
lret
xor
aas
addr16
out
je
add
mov
xchg
xchg
mov
jne
adc
dec
adc
pop
push
out
les
mov
sti
out
es
jge
into
popl
adc
sub
pop
and
js
bound
mov
mov
mov
mov
mov
adc
dec
out
stos
xchg
xor
aam
gs
stc
and
and
ljmp
js
dec
sbb
test
adc
mov
inc
add
mov
xor
xchg
movsl
adc
sub
jecxz
cmp
orb
mov
adc
jg
lret
scas
add
into
mov
jns
repnz
mov
stc
inc
sub
imul
jmp
cmp
jecxz
or
inc
mov
inc
sub
shrl
mov
shr
xchg
push
mov
pop
xchg
stc
mov
pushf
popfw
outsb
out
fistps
das
xorl
daa
movsl
stc
ja
fcmovb
xor
sbb
leave
stos
mov
cmp
je
adc
cmp
mov
pop
pop
roll
cs
je
sbb
cld
es
repnz
lret
cmpb
cwtl
imull
aad
incl
andb
add
ficompl
nop
int3
xorl
xchg
adc
imul
jle
test
ja
inc
loop
cltd
stc
and
fs
mov
xchg
xchg
add
out
lds
jmp
stos
popa
and
daa
xor
jo
push
xchg
scas
sbb
cltd
adc
and
movsb
stos
xchg
out
les
mov
ret
dec
adc
in
dec
ficoml
les
sub
mov
repnz
insb
jl
in
jnp
pusha
leave
push
std
sub
push
es
mov
ljmp
test
pop
mov
hlt
adcb
aaa
daa
mov
jns
test
adc
push
add
jb
mov
in
arpl
neg
jnp
push
fadds
push
xchg
aas
cld
cmp
push
lea
out
lahf
cmpsb
fs
mov
jle
and
gs
mov
stos
push
pusha
ret
aaa
in
ja
dec
call
aad
adc
fwait
gs
ljmp
dec
jae
add
fdivs
dec
adc
xchg
addl
fistpl
dec
in
and
xlat
sub
cmp
js
mov
insl
dec
push
inc
xchg
or
adc
inc
arpl
ret
inc
dec
sti
pop
add
xchg
pop
insl
ret
xchg
pop
push
mov
aaa
push
mov
aaa
cmp
xchg
int3
jecxz
rcl
fcomps
mov
mov
bound
popf
repnz
cmc
ljmp
add
insl
push
cmp
and
sub
hlt
out
or
int3
in
aas
loop
sar
pop
nop
adc
cmpl
loop,pn
xor
and
push
jne
or
ret
add
pop
lahf
int
jns
outsl
clc
ja
cmpsb
outsl
and
out
xchg
mov
xchg
xchg
out
and
stc
mov
adc
pop
jo
cld
push
fcmovnbe
lret
dec
mov
int3
lcall
push
ds
cmp
xchg
mov
pop
out
es
sbb
cmp
dec
mov
pop
test
mov
hlt
lock
divb
mov
jg
dec
xchg
jb
nop
data16
adc
xor
dec
mov
adc
or
outsb
shlb
adc
push
xchg
xchg
xchg
xor
or
and
dec
in
js
ds
and
pop
inc
fcoms
ss
mov
jp
xor
pop
js
lods
add
jae
sub
data16
roll
xor
insl
mov
daa
jge
cli
out
pop
xchg
mov
pop
imul
push
and
dec
inc
and
out
fsubl
mulb
mov
aam
cmp
sti
mov
add
test
add
pop
repz
sbb
mov
mov
fldt
popf
sub
and
xor
add
int3
xlat
adc
dec
movsl
sar
sar
inc
loopne
dec
jno
filds
leave
repz
pop
mov
mov
mov
pushf
xor
into
add
xlat
mov
stc
int
mov
xchg
int3
aaa
xchg
xchg
out
sub
or
icebp
jnp
cmp
mov
jp,pn
icebp
mov
lods
fs
scas
imul
rol
mov
aas
jno
sub
xchg
leave
imul
or
inc
cld
xchg
push
inc
movsl
xlat
lcall
clc
mov
sbb
cmpsb
je
pop
adc
jb
push
cmp
shrb
std
leave
cmpsl
popf
mov
or
scas
xchg
fldenv
mov
cmp
sub
movsl
pop
sub
sti
addb
cmp
addr16
mov
popa
scas
xchg
mov
cs
jns
cmp
scas
or
dec
ds
push
xchg
push
dec
iret
into
mov
push
mov
mov
jp
push
mov
and
insl
pop
popa
pushf
mov
mov
pop
sbb
js
xor
cltd
in
addb
sbb
icebp
sub
jbe
or
push
xchg
je
lahf
mov
pusha
adc
mov
fcoms
out
leave
cmp
out
clc
cmc
inc
cs
cmc
or
jae
pop
gs
mov
rorl
ficoms
loopne
dec
and
inc
data16
loop
mov
test
xchg
stc
xchg
pushf
pop
xor
loope
push
addl
and
data16
mov
xchg
aas
pop
jge
mov
pop
mov
nop
fisubrs
popa
test
mov
lock
or
or
je
pusha
into
in
int3
addr16
and
adc
add
mov
pushl
shl
pusha
sub
jae
das
lret
iret
mov
test
int
sbb
js,pn
aam
xchg
ljmp
xor
and
out
pop
ds
enter
leave
xorb
adc
ds
pop
inc
jnp
or
push
ret
add
add
xor
add
enter
jp
mov
das
iret
lret
mov
pop
sbb
notl
inc
das
incl
inc
out
fnstcw
inc
gs
mov
enter
xchg
addr16
call
fcomps
cmpsb
jbe
sbb
stos
jnp
or
mov
jecxz
mov
inc
add
dec
icebp
mov
jnp
mov
or
push
or
es
shll
jp
adc
or
or
aaa
push
sbb
fsubrs
cmpsb
adc
test
lods
dec
pop
nop
aam
push
or
inc
mov
aam
cmpsb
pop
pushf
sbb
sti
jne
cltd
in
adc
adc
xchg
cmpsl
test
cli
xlat
das
int3
inc
jb
mov
in
movl
xchg
or
fisubl
fs
jns
pop
imulb
inc
xchg
out
push
test
ljmp
pusha
jae
inc
jns
cmpsb
insb
lock
cmp
out
adcl
push
jne
fsubrp
movsl
mov
fmull
push
je
push
and
stos
inc
aam
push
or
icebp
sarl
mov
addb
sbb
mov
xchg
js
mov
push
pop
adc
loope
ficoms
shll
sti
pusha
test
jecxz
push
cli
cwtl
mov
cmpsl
xchg
cmpl
add
dec
mov
imull
mov
mov
jns
adc
and
adc
sub
add
fs
adcl
fs
xorl
add
lret
xor
push
std
shll
movsl
icebp
dec
in
imul
shr
mov
ds
dec
insb
mov
pop
push
bound
pop
out
imul
jmp
or
adc
inc
push
aad
jbe
push
dec
scas
mov
dec
ss
jmp
mov
insl
cld
inc
gs
cmp
jnp
ret
repnz
outsl
sti
arpl
aaa
mov
or
enter
jecxz
aaa
push
cmpsb
imul
scas
popf
and
loop
mov
out
mov
sar
sub
cmp
cmp
xor
pop
insb
sbb
sub
loope
or
and
je
cmp
ror
scas
xchg
lcall
inc
xchg
sbb
mov
divb
xchg
jmp
rol
out
popf
mov
mov
push
hlt
mov
lahf
inc
fwait
mov
in
repz
jns
mov
push
dec
xchg
push
xchg
xchg
jno
mov
rcrb
das
push
jge
ds
mov
dec
ret
adc
add
and
pop
push
subl
mov
movsb
sub
pop
push
mov
lds
rorb
mov
add
pusha
push
shrl
shll
lcall
inc
aas
xor
xchg
nop
cmpb
std
xchg
ljmp
pusha
pop
sub
ljmp
jmp
add
scas
scas
loopne
out
outsb
or
ss
mov
stos
jno
loopne
movsb
pop
aam
jg
mov
and
jbe
imul
cltd
push
lret
cmp
sub
sbb
pop
lahf
leave
sbb
adc
call
insb
movsb
iret
pop
jmp
inc
cld
gs
fnstenv
jp
loopne
inc
outsl
mov
jne
fcoms
insb
loop
push
sbb
pop
js
pushl
sub
sub
push
push
add
inc
sub
arpl
div
xor
pop
out
lods
cmp
xchg
popf
add
or
xor
push
test
nop
jno
mov
sbb
xchg
sub
dec
ret
cmp
pop
xlat
mov
movsl
mov
jbe
das
pusha
cld
pushf
shll
cltd
loope,pt
div
repz
sub
dec
jo
mov
dec
sbb
xchg
ds
testb
pop
hlt
bnd
roll
sub
add
pop
mov
aam
mov
pop
test
cmp
mull
and
aaa
sahf
jge
cmp
int
or
es
xchg
test
xchg
test
test
pop
mov
and
dec
repz
int
mov
sbb
mov
xchg
or
xor
fstpl
iret
adc
dec
inc
hlt
add
addb
jmp
cs
jne
add
je
subb
addb
fcmovu
mov
sahf
push
add
test
dec
addr16
jb
in
add
iret
sub
popa
lret
in
mov
mov
pop
push
jnp
xchg
fs
fst
inc
add
mov
push
adc
negb
mov
popa
scas
xchg
pusha
lds
insl
sbb
xchg
pop
fwait
out
pop
test
es
je
lods
inc
add
xor
xchg
and
jnp
sub
xchg
int3
dec
push
fnstenv
jle
pop
int3
dec
iret
mov
mov
cmpl
in
and
pop
bound
jo
cmp
lock
push
mov
fistps
mov
or
add
aaa
insl
iret
sbb
pop
repnz
adc
divl
inc
in
dec
arpl
mov
pop
jle
clc
ja
imul
jp
lcall
popa
mov
cmp
iret
push
popf
icebp
push
push
add
sbb
mov
lods
add
in
jle
cmp
insl
pop
push
jle
sub
lret
cltd
shlb
rclw
dec
jnp
lret
loop
jmp
aas
jns
sub
loope
adc
jecxz
inc
add
lret
add
inc
scas
sbb
ror
lea
xchg
adc
or
inc
xchg
sub
xchg
int
out
pusha
cmp
xor
gs
or
loope
sbb
mov
jne
popf
xor
pusha
pushf
mov
inc
sbb
cmp
sbb
scas
dec
or
or
push
mov
les
mov
sbb
cmp
push
aad
dec
mov
cmp
or
daa
jg
js
test
pop
pushf
daa
je
test
pop
in
mov
in
ds
sub
negb
aam
pop
sti
cwtl
add
mov
shl
jge
clc
movsb
xorl
sub
mov
decb
cmp
in
push
jge
inc
pop
je
ss
insb
cmc
fiaddl
inc
lcall
mov
dec
pushf
dec
xor
jp
inc
fisttps
call
mov
inc
push
pop
xchg
push
into
add
dec
inc
inc
cmc
cmp
xor
mov
add
sahf
daa
sbb
xor
jl
sbb
into
int3
in
ficoml
popl
mov
jge
and
push
mov
rcrb
or
icebp
jmp
loop
loop
scas
jmp
sahf
pusha
pushf
push
mov
jmp
push
sub
cwtl
movl
loope
les
adc
jae
xchg
leave
orb
pop
out
movaps
out
xor
xchg
clc
mov
stc
arpl
and
ficomps
cmp
lock
or
jecxz
xchg
xchg
mulb
lahf
ret
xchg
mov
out
fsubrp
movsl
mov
in
and
loop
jmp
out
fdivr
add
adc
out
adc
mov
sub
rorb
lea
sub
pop
enter
mov
fucom
xchg
jnp
pop
rcrb
insl
xchg
mov
and
hlt
mov
xchg
inc
lcall
rol
xor
out
xchg
dec
dec
jp
pop
pop
in
test
shl
or
repnz
ret
mov
lret
mov
jecxz
rorl
scas
mov
add
outsb
cltd
jns
xor
scas
add
mov
mov
dec
xorl
arpl
dec
or
cmp
and
psubq
fnstcw
adc
mov
test
add
xor
push
or
or
pop
jl
jg
mov
jb
pusha
jmp
cmpsl
sub
gs
pop
insb
icebp
add
pop
push
lret
popf
sub
insb
fwait
mov
popa
fcomps
fdivrs
rcll
push
fwait
lods
sub
xchg
adc
test
cltd
push
cmp
filds
loop,pt
aad
test
push
sub
jmp
jl
and
cmpsb
add
push
add
xchg
testb
test
adc
dec
jne
inc
sub
pop
aaa
xor
cmp
out
and
mov
hlt
ja
sbb
dec
ja
push
aaa
cmp
cmpsl
mov
fsubrs
andw
mov
vmovdqa
xchg
scas
mov
mov
incb
inc
and
dec
hlt
mov
mov
dec
movsl
and
push
inc
xchg
sbb
outsl
outsl
jns
xor
shll
sub
enter
push
jmp
add
rol
mov
pushf
cltd
mov
fsubr
lods
dec
dec
or
mov
mov
push
out
loop
dec
movsb
in
dec
out
ror
inc
sub
arpl
lret
hlt
cmc
mov
mov
ret
rorl
outsl
repz
adc
mov
shl
test
lcall
fs
dec
mov
int3
jg
cmpsb
push
in
leave
xor
fidivrs
and
adc
jge
jge
nop
lahf
lods
xchg
std
add
imul
xchg
int3
fmuls
mov
js
outsl
add
movsb
and
mov
aam
jbe
inc
test
push
adc
fisubs
int3
jo
pushf
sbb
xchg
test
adcl
jg
pop
xlat
pushf
xor
mov
icebp
adc
inc
lcall
or
mov
add
push
sbb
push
and
js
les
jnp
xchg
test
push
mov
mov
mov
in
clc
scas
mov
jge
rorb
pop
xor
outsb
mov
call
in
add
push
mov
push
sbb
jp
testb
sarl
aad
and
or
dec
and
gs
orl
sub
lret
mov
loop
stos
jecxz
test
jbe
dec
jnp
push
mov
and
push
adc
adc
fisttpll
inc
push
jns
shl
std
inc
or
negb
xchg
sub
cmpsb
and
mov
ret
in
sub
mov
dec
hlt
test
sub
xchg
jo
rorl
out
mov
cmpsl
pop
push
stc
bound
push
scas
ss
shll
xor
iret
sbb
test
ret
fldl
push
mov
fs
push
cld
ss
dec
jmp
cmpsl
xchg
mov
pop
lea
js
addr16
jne
icebp
out
xlat
ljmp
loop
aaa
cs
sub
xchg
jo
cli
jnp
test
mov
mov
inc
in
stc
test
mov
int3
ret
sub
lods
int3
add
scas
ds
mov
cmp
mov
inc
fisttpll
sub
pop
push
sti
sbb
xlat
dec
js
out
dec
into
mov
dec
jg
adc
jnp
cmp
jb
out
dec
in
jge
and
xchg
jns
hlt
lds
inc
push
lret
pop
pop
insb
mov
mov
aam
dec
mov
lahf
lret
insb
add
lds
mov
hlt
int3
adc
pop
push
mov
scas
sbb
or
faddp
and
and
cmc
xor
cmp
sahf
roll
es
sub
gs
lock
mov
mov
mov
fwait
xor
out
mov
jp
data16
in
insb
xchg
ss
or
shrb
xchg
mov
mov
out
jae
jp
insb
add
jp
imulb
decl
mov
add
jae
xchg
xchg
data16
cmpsl
jle
pop
dec
mov
dec
or
fnsave
sub
cmpsl
lret
mov
push
mov
mov
aad
aaa
and
add
jg
inc
rorb
fwait
dec
add
cld
jmp
aad
jbe
cmp
mov
mov
mov
ret
and
cs
idivb
pop
dec
pop
sub
clc
ds
xor
pop
add
pop
pop
or
scas
scas
sub
add
pop
jno
sub
into
bound
sbb
adc
in
enter
push
into
lock
sub
ss
or
pushf
xor
lods
or
pop
jg
dec
mov
cmp
loopne
aaa
pop
add
sbb
xor
test
outsl
jbe
mov
das
test
imul
imul
movsb
std
adc
jge
lods
dec
int
movsb
push
jg
jne
es
inc
xchg
inc
xlat
shrb
mov
jo
incl
adc
mov
repnz
setae
addl
xor
sbbl
jns
pop
insb
fisttpll
mov
in
mov
add
xor
sbb
mov
fstp
pop
enter
shr
fcoml
movsb
xlat
mov
shr
popf
sbb
pop
dec
fyl2xp1
xor
lahf
lds
xchg
xor
or
test
mov
loope
mov
jno
sbbl
push
add
sub
mov
sub
sub
fadds
frstpm(287
push
inc
aam
jns
lret
mov
push
cltd
jecxz
adc
sbb
sub
or
nop
je
push
out
lea
rcll
imul
and
call
mov
hlt
ljmp
lret
mov
movsb
mov
inc
sbb
pop
ja
push
leave
xchg
jbe
pop
mov
jbe
cmp
pusha
imulb
clc
xor
fstpt
push
sub
inc
pop
lret
mov
xchg
mov
fstps
and
push
push
cmp
jae
push
stc
fmuls
loopne
push
fcoms
cwtl
sub
dec
aas
push
xlat
ja
cld
pop
push
adc
add
daa
movsl
je
insl
loope
jae
out
jge
fs
jns
sub
jo
fs
mov
mov
or
jo
outsl
add
xlat
lods
dec
in
jmp
push
mov
fsubrs
andl
dec
je
mov
pop
jl
xchg
repz
jae
mov
mov
or
loope
movsb
push
jmp
ss
mov
movl
imul
loop
mov
into
arpl
mov
int
pop
xchg
pop
shl
outsb
call
jns
popa
js
mov
xchg
fcoml
dec
jge
ss
mov
cli
or
outsb
js
leave
xor
inc
jno
pop
jb
scas
jo
das
xchg
or
dec
xor
mov
movsl
xorb
wrmsr
addr16
daa
fcoms
ds
orb
int3
jge
or
jecxz
cmp
dec
fwait
sarb
popa
aaa
cmp
cwtl
xor
data16
sarl
and
sbbb
out
repnz
mov
pop
mov
push
add
data16
es
dec
cwtl
test
lret
mov
sahf
rcrw
scas
and
dec
sbb
xor
pop
xchg
jle
scas
cmp
mov
pop
fwait
paddusw
sahf
or
addl
dec
mov
mov
dec
ljmp
stc
outsb
mov
sahf
leave
pop
mov
xchg
adc
mov
in
mov
jne
or
nop
pop
and
mov
scas
into
jae
jle
jne
mov
sahf
lcall
jle
pop
jg
jno
pushf
dec
aas
jbe
mov
mov
fsubrl
pop
stc
mov
fdivs
shlb
insb
mov
sbb
sub
mov
call
js
addr16
adc
dec
insl
outsb
push
test
fwait
sub
fcoml
fsts
leave
cmpb
outsb
aas
mov
mov
mov
mov
sti
inc
mov
out
gs
fimuls
xchg
test
add
int
jnp
sbb
xchg
int
jmp
test
cmp
mov
inc
jl
sub
scas
mov
adc
jmp
xchg
mov
mov
pop
cwtl
ss
loop
xchg
cmp
test
dec
dec
jge
sub
cmpsb
xchg
dec
and
jbe
gs
hlt
mov
popa
sbb
push
and
mov
imul
push
or
sub
inc
shll
jg
jo
out
sti
and
lea
sub
adc
inc
popa
out
xor
in
or
mov
sub
int3
xorl
mov
int3
andl
les
fistps
add
out
cltd
lods
imul
lea
dec
je
fisubl
popa
jae
cmp
xor
inc
fwait
dec
nop
scas
pusha
xchg
or
shll
add
pop
rcrl
pop
cmp
lods
subb
sub
add
mov
push
popf
sbb
mov
lock
sub
inc
mov
pop
icebp
jne
xchg
into
cmpb
mov
mov
cld
mov
mov
jns
bound
xchg
test
sub
and
int
xlat
adc
loope
pop
ret
leave
test
rep
or
or
jmp
xor
arpl
adc
cmpsl
mov
mov
nop
popa
dec
adc
mov
inc
shll
out
sub
fldcw
movsb
sahf
cmp
loop
mov
in
int3
add
outsb
enter
call
inc
outsb
xchg
mov
data16
cmp
scas
divb
xchg
daa
dec
insl
cmp
in
popa
add
xchg
fldcw
xor
mov
test
mov
out
movsb
iret
stc
mov
mov
imul
rcrl
dec
xor
xor
xchg
jecxz
stc
stc
mov
popf
sti
ljmp
shl
ds
and
pop
les
inc
sub
enter
mov
ret
mov
push
shll
sub
mov
fcoms
movsl
fmuls
and
mov
cli
hlt
push
insb
pop
cli
push
jmp
add
push
push
add
in
and
shll
leave
xor
sub
pop
push
push
mov
cmp
shl
ret
loope
mov
adc
xchg
mov
sbb
push
inc
sub
cmp
jns
dec
cmp
sub
lock
xchg
aad
scas
mov
push
adc
adc
add
push
cmp
imul
mov
sbb
mov
imul
xorb
jae
out
cld
int
lds
jl
push
push
std
push
icebp
mov
cmp
popf
nop
punpcklbw
sub
mov
inc
and
mov
or
pop
imull
xor
jmp
dec
push
call
movsl
jns
rcll
hlt
jecxz
jle
rcr
mov
in
jo
fistps
mov
inc
sub
adc
cmp
shrb
jb
out
mov
pop
hlt
jecxz
loop
sbb
add
push
lret
inc
repnz
mov
jp
pop
cmp
push
push
scas
out
cmovnp
push
and
and
pushf
nop
push
es
dec
clc
lahf
enter
cld
clc
das
jno
inc
lcall
add
cmc
jmp
pop
sbb
jb
xor
cmp
push
push
lods
mov
and
pop
scas
loopne
sub
sub
aam
cmp
fcoml
mov
ja
xor
sbb
jae
xchg
push
test
loopne
shlb
cmp
inc
xchg
push
and
jg
repnz
imul
cltd
stos
test
ss
popa
jnp
or
mov
out
xchg
ret
push
inc
mull
and
push
mov
mov
cmp
sub
push
loop
outsl
pop
lds
lret
push
xchg
aam
jmp
pop
xchg
cmp
mov
sarb
je
popa
fsubs
mov
cmp
mov
adc
xor
mov
mov
fwait
cltd
lret
stos
xchg
in
call
jmp
mov
push
push
push
test
mov
fsubs
out
jo
aas
or
ljmp
cli
fwait
aam
in
dec
cmp
jns
in
cli
inc
shr
jae
leave
mov
dec
add
mov
rclb
mov
cld
cmp
aas
arpl
sub
adc
pop
fimull
and
mov
pop
in
xchg
xchg
imul
fs
stos
vmovaps
pop
je
js
ljmp
mov
cmp
rcrl
ja
aaa
fidivs
sbb
leave
pop
nop
inc
nop
mov
subl
or
inc
dec
into
pop
es
insl
icebp
fnstsw
jmp
xor
lods
xchg
das
push
or
inc
mov
gs
mov
cmc
xor
mov
mov
inc
pop
stos
adc
data16
aaa
repnz
sub
xchg
add
repnz
cmp
xchg
leave
sar
add
out
and
xchg
dec
movsl
cmpb
and
cmp
aam
jbe
lcall
ljmp
xchg
lahf
loop
sub
loopne
push
popf
sub
jp
jecxz
xor
xchg
sti
cmpsb
lahf
add
fdivp
and
fcmovb
loope
push
fmuls
sub
or
dec
inc
lahf
js
xor
cmp
dec
xchg
mov
insl
lret
and
push
sbb
inc
lods
sub
xchg
scas
push
stos
jecxz
and
jecxz
ret
out
fldt
into
pop
jnp
push
popa
filds
mov
ret
in
cmp
aam
push
popa
pop
cmp
mov
fistps
out
ret
xchg
in
leave
mov
aaa
punpckldq
mov
mov
js
mov
xor
adc
loopne
cmpsb
mov
repnz
sub
fldt
in
loope
jns
sub
jo
testl
push
lds
popa
push
ficompl
dec
in
xor
fcmovbe
jmp
jns
jecxz
pop
xchg
das
cmpb
test
scas
mov
cmp
or
push
adc
sti
inc
cwtl
adc
xchg
int3
mov
jecxz
repz
fmuls
mov
cmp
jb
push
jmp
cltd
inc
sub
push
and
cli
adc
orb
jnp
aas
loop
popa
ret
jge
fwait
mov
dec
push
adc
inc
xchg
jns
pop
mov
out
pop
xchg
in
mov
xor
cli
mov
jl
popa
jmp
mov
les
xchg
xor
jb
dec
arpl
cltd
popa
popf
push
scas
add
and
int3
inc
dec
fwait
rcr
cli
adcb
push
mov
cmp
jg
jmp
lods
pushf
dec
mov
setge
fsubs
adc
xchg
popf
add
push
inc
cmpsb
fidivs
aad
and
push
cmp
fcomps
fcoml
cmp
ret
fsubs
pop
ret
sbb
push
cmp
movl
push
call
shrl
out
or
xchg
js
sbb
or
jg
icebp
xorl
aaa
test
and
sti
in
dec
mov
pop
ss
lock
daa
push
xor
cmp
inc
adc
out
xchg
push
mov
jbe
ss
mov
jae
xchg
shlb
cmp
mov
push
adc
leave
outsb
adcb
pushf
ja
inc
dec
ja
add
lea
cli
adcb
repz
divb
add
dec
ret
insl
push
aas
push
add
sbbb
and
lds
movb
cmpsb
xor
inc
loope
cmp
mov
inc
ss
mov
adc
mov
cmp
mov
popf
mov
sbb
mov
gs
adc
cli
mov
lods
cmp
mov
cwtl
scas
mov
fstl
outsl
stos
dec
daa
cmp
jp
mov
in
call
pop
mov
xor
jb
lods
jnp
ljmp
cmpsl
pop
dec
iret
cli
into
aas
dec
lcall
pop
pop
sub
cltd
lret
adc
shlb
fisubl
inc
mov
xchg
sbb
aaa
jae
imul
mov
in
fs
pop
popl
in
ljmp
pop
pusha
jae
fwait
or
jge
sbb
test
loope
add
pop
mov
xchg
jnp
test
or
dec
push
lods
lcall
mov
mov
test
dec
ds
scas
cmpsl
testl
pop
adc
aaa
xchg
stos
stos
leave
not
ds
and
dec
jns
xchg
cmpsl
xor
lock
cmp
and
je
cld
sbb
cs
dec
sar
dec
mov
and
mov
push
or
data16
xlat
push
loope
push
adc
mov
mov
xor
xor
adc
addl
int
es
xorl
rcll
pop
into
orl
and
mov
push
in
ljmp
inc
xchg
mov
adc
push
int3
sub
out
xor
adc
xchg
inc
xor
aas
in
fiaddl
cs
in
xchg
mov
lea
mov
push
in
stos
ljmp
sub
add
ljmp
negb
fs
push
in
inc
mov
inc
pcmpeqd
mov
and
pop
shlb
mov
stos
scas
fbld
mov
data16
mov
push
pop
mov
add
push
push
decb
cmp
faddl
dec
aad
test
sub
fimull
lret
mov
ud2
movsb
imul
inc
push
add
scas
push
mov
mov
pop
jmp
pop
push
shll
lock
mov
mov
lret
push
cmp
jbe
xor
shr
push
test
add
loop
repz
xchg
mov
jge
clc
les
cmp
mov
lods
int3
jl
notb
push
bound
aaa
outsl
inc
cmp
dec
cmp
loope
inc
adc
mov
in
adc
jp
or
dec
sbb
gs
jecxz
xorl
scas
lods
cmc
out
sub
mov
mov
stos
xchg
int
popf
jge
push
adc
or
test
popa
mov
xor
lods
jne
pop
and
call
inc
stc
xchg
out
loope
cmpl
xchg
push
test
imul
test
xacquire
sbb
out
cli
imul
sub
in
repz
scas
mov
jecxz
out
movsl
insl
pop
lods
adc
mov
add
jmp
int
xlat
fisubl
mov
cmp
lea
adcb
pop
sbb
cltd
movsb
sti
data16
cltd
enter
in
dec
mov
xchg
or
aam
adc
sti
shll
xor
push
mov
sti
stos
and
cmpb
mov
movsl
push
push
xorb
mov
sbb
mov
fmull
xlat
mov
mov
sub
leave
fucomp
rcrb
aam
out
xchg
and
test
imul
pop
ja
inc
inc
movsl
cmpsb
fsts
mov
imul
adc
scas
jl
das
imul
aaa
lods
mov
mov
inc
mov
out
mov
mov
pop
shll
mov
sahf
sbb
rorb
cltd
push
inc
in
xchg
outsl
test
mov
out
cs
push
mov
pop
and
adc
xchg
fdivrl
pop
je
push
inc
out
mov
dec
outsb
sarb
inc
in
adc
push
cs
mov
xor
insl
loop
mov
mov
cmpsb
andb
js
sub
push
pop
push
dec
je
repz
sbb
xchg
push
jno
or
jns
xor
dec
and
or
mov
and
cmp
or
jno
in
xor
inc
ds
cmp
dec
xchg
nop
add
pusha
mov
xchg
rol
dec
jp
rcl
mov
test
xor
sbb
out
and
and
sbb
jb
cmp
lahf
mov
mov
je
sarl
push
sub
sbb
mov
jp
xor
jecxz
inc
mov
mov
pop
cmp
xchg
jbe
cmp
push
inc
fmuls
jg
aaa
or
cld
or
movsl
push
test
stc
test
add
ficoms
out
push
scas
mov
mov
int3
push
fxtract
add
negl
stos
test
repnz
imul
adc
sub
dec
mov
push
adc
adc
mov
push
scas
ret
cs
dec
scas
shr
ja
aas
into
lret
sbb
rorb
inc
dec
lret
daa
mov
push
aas
aaa
sub
push
mov
xor
leave
cmp
lods
jo
xchg
add
int
outsl
adc
mov
mov
pop
lcall
shll
adc
pop
pop
lds
add
add
sarb
adc
mov
push
sarb
into
xorl
mov
stos
jae
repz
inc
jnp
idiv
xor
cmc
push
lods
outsb
lcall
mov
insl
sbb
dec
ljmp
dec
sbb
or
mov
push
pop
test
es
or
movsb
sub
sub
jns
cli
push
sarb
aad
xchg
jle
rolb
mov
jg
cmp
repnz
fdiv
shlb
popa
jnp
mov
dec
pop
and
dec
jno
xor
adcl
lds
dec
roll
push
mov
lahf
ret
arpl
mov
hlt
jecxz
inc
in
sbb
lods
mov
cmpsb
or
mov
adc
inc
hlt
addr16
mov
aas
push
sbb
cli
jp
cmp
imul
test
es
pop
or
cmc
dec
jns
ret
ja
push
cmp
rcrb
lahf
stc
push
and
xchg
stos
add
mov
xor
fmul
scas
jle
pusha
insb
filds
cmpsb
lea
dec
divb
iret
jl
or
mov
and
and
add
mov
xchg
ja
and
aaa
push
inc
mov
int3
sub
add
inc
lret
lods
fbstp
xchg
sti
cld
xor
ffreep
cmpb
movsl
lea
rcrb
test
sbb
fimull
sysexit
and
jnp
sbb
dec
jg
sbb
xor
pop
jecxz
ret
add
lea
mov
cmp
js
push
into
std
jp
les
loope
mov
movsl
or
mov
repnz
hlt
loope
ljmp
loop
or
xchg
out
hlt
adc
cmp
sti
jle
out
and
data16
in
test
mov
xchg
push
or
cmp
jno
push
repz
pop
sbb
jge,pt
jmp
imul
test
mov
ret
push
lahf
sbb
push
push
into
jmp
xchg
sub
repz
icebp
pop
sub
movsl
sub
scas
or
ret
pop
lahf
xor
int3
in
mov
ljmp
sub
xchg
and
inc
mov
xchg
fs
sti
outsl
cmpsb
add
stc
mov
in
pop
and
fs
or
negl
pop
ret
jg
xchg
jp
lea
jle
nop
sti
cli
ja
loop
and
xlat
mov
sahf
dec
xor
inc
fwait
mov
mov
js
mov
xchg
mov
imul
mov
cmp
mov
xchg
incl
icebp
cli
adc
xchg
ljmp
mov
sbb
mov
cmp
and
push
inc
dec
sub
push
or
arpl
out
lds
mov
movsl
cmpsb
rorl
inc
mov
adc
lret
aaa
pop
mov
inc
mov
jmp
inc
sbb
test
js
mov
xor
dec
cmovns
push
cmp
lods
into
xor
sub
mov
push
mov
stos
js
dec
xlat
fs
ljmp
jnp
mov
cmpsb
xchg
shlb
mov
xor
nop
leave
mov
mov
cmp
xor
mov
aaa
jae
pop
mov
pop
and
or
cmc
xchg
jp
hlt
pop
or
xor
jae
mov
push
jae
test
mov
or
ja
popf
mov
sub
icebp
and
adc
and
fucom
mov
iret
mov
or
popf
andl
std
outsb
testb
loope
shr
ret
fwait
sbb
push
mov
push
stos
push
mov
out
add
push
dec
jae
sti
and
test
or
add
cmpsb
ljmp
mov
jno
cmp
daa
orl
sbb
xor
cmp
fs
adc
push
inc
lods
and
push
movsb
jecxz
icebp
scas
and
popa
and
xor
mov
sub
xlat
sbb
or
or
mov
add
sub
adc
cmpsb
in
mov
mov
inc
scas
adc
xchg
hlt
xchg
cmpsb
xlat
sbb
sti
mov
adc
sbb
notl
lahf
imul
or
daa
out
mov
inc
pusha
jp
test
xor
imul
sbb
stos
jmp
js
test
loopne
sbb
stos
fbld
adc
aas
cltd
shrl
movsb
fiaddl
scas
jge
sub
adc
dec
xchg
test
lahf
fiadds
mov
in
lahf
addr16
mov
sbbl
in
cmc
shrl
movsl
shlb
push
fldenv
ret
pop
jle
dec
popa
pop
or
out
sub
test
lret
out
popf
and
ljmp
adc
push
fstpt
push
cmp
cmp
mov
bound
cmp
iret
xor
rcr
hlt
sahf
cmp
bound
inc
addr16
lods
fistl
cltd
cmp
mov
cltd
in
adc
inc
mov
lcall
sub
or
outsl
or
push
jb
popa
adc
push
mov
mov
and
push
sub
cmp
cmp
lea
or
pop
lcall
jno
nop
cwtl
sbbb
sub
aas
and
mov
add
pusha
or
add
push
cwtl
and
hlt
addr16
dec
and
xlat
jno
cmp
and
cmp
inc
mov
imul
xchg
shlb
ret
sub
or
adc
sahf
sub
aad
in
dec
push
les
mov
cmp
les
push
jp
jge
lcall
rcll
scas
adc
xchg
fwait
aaa
inc
lods
mov
xor
push
pop
in
fists
inc
pop
sub
lahf
jnp
adc
aad
mov
lret
inc
leave
xlat
aas
rclb
xorl
or
clc
hlt
stos
xor
test
ja
nop
popf
mov
jp
mov
xor
loop
xor
test
mov
fstpl
adc
pop
pop
ds
movsl
dec
dec
es
popa
fisubrs
pop
scas
lret
add
gs
scas
nop
test
ja
cwtl
ljmp
loop
push
ds
dec
jg
jle
out
sub
lret
clc
sarl
stos
mov
dec
data16
ret
xchg
leave
iret
mov
sub
sbb
cmpsl
mull
jecxz
sub
shll
aaa
add
pusha
add
push
int3
inc
cwtl
pop
mov
test
out
mov
pop
scas
in
dec
and
push
aas
jg
ficomps
imull
push
clc
or
jb
negb
fs
mov
xchg
stc
cli
mov
jno
insl
rorl
jge
mov
pop
nop
mov
mov
push
mov
out
mov
push
jo
mov
xlat
add
lret
xor
xchg
lea
push
jmp
sub
roll
xchg
pop
sub
jecxz
shl
fcoms
jmp
cmc
jp
inc
sub
jmp
fsubr
sbb
aaa
add
cmp
mov
popa
stos
dec
jl
cwtl
rolb
pop
ljmp
jae
push
inc
loop
scas
cld
aad
aas
fstps
sbb
sub
dec
fwait
sti
loope
scas
inc
out
and
jge
or
in
in
xchg
and
xor
xor
jg
adc
or
in
mov
jge
xor
jmp
mov
or
mov
cmp
adc
iret
pop
push
ja
jge
mov
xor
sar
mov
fistpll
mov
pop
ds
mov
inc
jecxz
xchg
shrl
das
imul
xor
jl
xchg
cmp
test
cmpsb
repnz
ret
mov
or
push
pop
jmp
scas
testb
or
pop
push
loope
inc
lahf
dec
ds
das
sub
daa
in
pusha
mov
repz
inc
out
bound
fcomi
push
push
sbb
fldl
imul
xor
aad
loopne
add
dec
xchg
out
xorb
push
mov
lock
aad
out
inc
or
mov
add
mov
jmp
imul
jg
pushf
pushf
cmc
test
lret
dec
dec
notb
or
and
mov
push
imul
out
add
stos
or
xchg
inc
orl
aad
addr16
out
sub
xchg
push
and
cld
rcll
aad
std
inc
shlb
out
xchg
xchg
xchg
dec
push
pop
jne
add
xchg
xor
shlb
adc
nop
adc
add
leave
clc
dec
shlb
dec
aaa
stos
push
mov
stos
push
fsubrl
push
cld
sub
dec
mov
xchg
scas
push
dec
mov
das
loop
mov
pop
mov
or
cs
stc
fcompl
ljmp
adc
dec
pop
test
push
jae
lret
xor
xchg
decb
and
adc
shlb
outsb
jg
aad
mov
iret
std
pop
andl
jl
shll
dec
ja
pop
arpl
sbb
adc
js
push
jge
pop
icebp
sub
lretw
dec
sbb
mov
out
stc
rclb
dec
sub
arpl
pop
imul
pushf
in
push
push
stc
movsb
incl
into
popf
sbb
jg
enter
leave
std
es
sub
jnp
subps
inc
push
mov
mov
inc
cltd
dec
xor
daa
out
arpl
mov
ret
xchg
pop
bound
enter
jne
out
push
add
add
sbb
aas
int
aaa
adc
cmp
pusha
mov
repz
inc
push
outsl
mov
pop
jmp
pop
mov
mov
adc
inc
test
repz
dec
repnz
lea
out
add
mov
hlt
xchg
hlt
xchg
enter
ret
cmp
pop
push
sub
int3
and
stos
cwtl
cs
fwait
push
mov
aam
xor
pop
inc
mov
jae
push
rorl
idivb
xchg
push
cmp
aam
mov
push
aam
outsb
mov
lret
lock
mov
mov
and
sub
cmp
cmpsl
js
cltd
lods
push
and
test
mov
jnp
test
call
ss
imul
sti
out
mov
cmpsl
cmpsb
ljmp
out
pop
xor
in
sbb
int3
xor
dec
fadds
inc
mov
cmp
lcall
leave
addr16
mov
jp
int
and
push
mov
rcr
hlt
lret
jae
or
sub
xor
in
fldt
adc
jbe
fisubl
adc
xor
push
cmpsl
ss
sub
test
std
into
push
jns
sbb
xchg
pop
mov
xchg
push
push
cmpsb
fstl
mov
lock
pusha
subl
mov
xor
jl
adc
cs
mov
bound
loope
inc
insb
add
aas
push
push
loop
gs
daa
pushf
mov
cmp
pop
in
cwtl
mov
mov
out
adc
sti
adcl
cltd
popf
fwait
adc
or
jge
scas
out
mov
fildl
mov
fistpl
incb
push
mov
sbb
adc
inc
inc
sti
sbb
loop
test
ljmp
jne
and
xor
xchg
ja
out
jns
daa
inc
cld
cmc
ljmp
test
lds
scas
incl
jl
push
fwait
inc
mov
mov
pop
pop
xchg
aad
mov
dec
sub
adc
ja
mov
xor
hlt
aaa
mov
dec
sub
push
rorb
and
sahf
ret
je
movsl
dec
lret
xchg
sbb
sahf
fwait
cmp
and
aas
xchg
mov
popa
push
push
iretw
sbb
aam
testl
pop
xchg
inc
loope
add
int3
cwtl
push
push
xchg
sbb
xorb
cs
mov
add
ret
out
push
push
xchg
cmpsl
push
fcom
inc
gs
push
xchg
loope
cmp
ret
mov
cltd
xchg
or
adc
fldt
andb
push
cmp
ret
movsl
out
int
inc
nop
mov
stc
scas
setp
arpl
mov
xchg
xchg
enter
lcall
or
ret
mov
xor
aad
insb
repz
icebp
adc
cmp
xor
jo
lods
push
in
jl
js
movsl
xchg
xchg
jnp
lods
dec
lea
test
ret
mov
repz
divb
xor
mov
and
les
fcoml
cwtl
test
and
xor
jle
enter
jecxz
out
ja
and
iret
in
stos
lret
xor
ret
sti
xlat
jne
jl
cltd
inc
int
aam
sbb
stos
jo
mov
popf
mov
shll
push
xchg
jbe
sbb
addb
mov
dec
loop
and
in
pop
mov
gs
rorb
cld
adc
mov
mov
dec
adc
out
add
pop
add
mov
xor
mov
mov
inc
dec
mov
fcomps
shrb
lahf
push
clc
ljmp
add
popa
lcall
jmp
push
shll
enter
and
push
pop
sbb
inc
xor
pop
mov
lds
jg
das
nop
inc
shll
xchg
mov
sub
ret
ljmp
js
mov
sbb
mov
pop
stos
call
jnp
cmpsb
pop
jp
mov
cmp
cltd
xchg
sub
dec
mov
dec
xchg
fwait
das
fsts
mov
imul
sbb
nop
pop
clc
loope
xchg
and
xchg
sbb
mov
xchg
push
inc
std
inc
fistl
mov
stc
or
jp
and
mov
push
inc
in
inc
xchg
mov
pop
xchg
lret
inc
dec
cmp
push
stos
xor
cmc
jno
test
jbe
mov
pop
or
push
jo
add
mov
iret
jae
jb
jbe
mov
ss
pop
loop
int
jge
js
mov
aas
out
push
ficoml
lahf
bound
adc
int
inc
mov
and
hlt
sub
in
stc
aaa
mov
hlt
js
lods
aas
rcl
xor
pop
jmp
xchg
test
push
inc
mul
cmc
jns
sub
pcmpeqb
pop
fs
inc
cmp
shrb
and
dec
xor
movsl
xor
dec
jbe
nop
xor
testl
ret
xor
outsl
xlat
stc
or
xbegin
push
cmp
mov
idivl
ljmp
or
push
adc
cld
adc
jns
mov
or
rcr
aas
aad
std
int3
sbb
jl
inc
adc
stc
and
mov
push
xor
loopne
sahf
xor
loop
adc
dec
push
sub
adc
es
push
pop
imul
into
adc
mov
or
dec
ret
mov
movl
and
cli
and
xor
inc
xor
repnz
lret
mov
jo
dec
push
icebp
fwait
ljmp
xchg
dec
test
mov
sub
lock
lret
or
popa
push
in
test
fs
sbb
adc
sbb
cmp
push
mov
inc
lahf
sub
ss
and
xchg
lcall
shl
push
movsb
test
xchg
fcmove
jmp
pop
xor
dec
or
cmpsb
cmp
mov
xor
test
cmpsl
ret
fsubl
out
adc
lock
jecxz
mull
cli
cs
dec
cmp
sbbb
adc
jns
mov
inc
jle
sti
fbstp
aas
push
pop
out
call
mov
cmp
popf
sti
cltd
pop
arpl
adc
imul
mov
jno
in
push
iret
jl
loopne
dec
mov
pop
inc
pushf
mov
loope
xor
xor
push
adc
addr16
pop
lea
xchg
jmp
xor
fdivrs
or
mov
pop
mov
sahf
fimull
adc
aas
cltd
add
adc
xor
xchg
xorb
pushf
mov
aas
loope
add
adc
jmp
filds
pop
adc
mov
add
adc
mov
popf
jmp
cmp
mov
std
dec
repnz
arpl
xor
inc
jp
scas
ret
xchg
insb
push
orl
push
adc
mov
jmp
dec
adc
cmp
inc
mov
pop
fsubl
test
sbb
and
and
xchg
push
cli
push
xor
xchg
outsb
sbb
inc
inc
fsubs
iret
jmp
mov
pop
inc
in
push
sbb
cwtl
dec
ss
lods
out
ret
pop
jecxz
sub
pop
push
mov
xor
aas
std
scas
cmpl
add
fnstsw
js
xchg
stos
rcrb
je
or
jae
lahf
icebp
cmp
dec
cmpsb
adc
inc
cld
cs
cmp
in
mov
outsl
push
mov
ljmp
hlt
into
ljmp
push
pop
pushf
adc
call
jmp
xchg
ret
inc
xor
movsb
out
mov
fmul
pop
mov
pop
ds
mov
pop
xchg
aaa
or
adc
test
jecxz
cwtl
xchg
adc
mov
xlat
or
mov
push
mov
es
lcall
sub
test
xlat
push
sub
jmp
cld
pop
xchg
call
cmpl
cmp
sub
sbb
inc
es
cmpsl
and
jbe
addr16
stos
aad
bound
mov
adc
into
cmp
movsb
mov
adc
addr16
push
mov
or
hlt
add
mov
mov
adc
cli
adc
mov
std
test
subl
jecxz
pop
and
dec
out
mov
pop
dec
icebp
pop
lods
loopne
int3
add
jae
pop
or
mov
sbb
fs
out
daa
and
mov
das
movsb
sub
lret
mov
mov
aam
or
scas
es
cmpsb
nop
cmp
cmp
movsl
add
out
inc
cmp
xor
mov
cmc
mov
sub
aaa
nop
scas
add
std
lret
xor
adc
cmp
lcall
mov
arpl
leavew
mov
xor
sbb
addr16
insl
dec
mov
addr16
push
lret
adc
inc
flds
scas
xlat
and
popf
das
mov
ret
outsb
rorb
stos
ljmp
or
push
test
inc
aam
sbb
bnd
jl
mov
stos
stos
adc
in
data16
pushf
or
aas
decl
je
push
xor
push
scas
inc
ja
add
or
bound
xor
and
xor
pop
ss
cmp
jecxz
shll
sub
lods
mov
test
xchg
adcl
cs
incb
loopne
js
cli
pop
sbb
inc
cs
mov
test
sbb
or
lret
push
sbb
test
dec
pop
push
imul
ljmp
jge
cmpsl
dec
jno
push
pop
rcll
cmpsb
jl
cmp
aas
hlt
mov
call
and
dec
xor
divl
xchg
jecxz
cmp
sbb
cmp
dec
std
pop
test
push
imul
mov
push
shl
jne
mov
xchg
xchg
pop
cmp
int3
lea
add
addr16
lahf
adc
int
aaa
leave
jl
fs
inc
mov
sbb
cmp
roll
test
jp
adc
fidivl
jbe
cmp
mov
dec
inc
mov
or
scas
pop
outsb
push
js
mov
insl
or
ljmp
xor
gs
cmp
mov
xor
sarb
rorb
dec
sub
rclb
sub
xchg
stc
dec
sub
pop
adcb
add
jle
cmp
in
jnp
outsl
push
fstl
sbb
stos
xchg
sarb
push
jge
or
repz
jecxz
aad
dec
cwtl
xor
int3
jmp
adc
mov
ret
lds
and
and
add
jmp
test
xchg
push
leave
inc
pop
je
mov
or
xor
push
out
cmp
sbb
outsb
xor
and
inc
push
add
sub
int
cmp
ja
or
push
sub
mov
jne
mov
sbb
inc
mov
inc
adc
push
roll
loopne
xchg
aaa
push
adcl
scas
sti
scas
cmp
hlt
push
and
xchg
adc
cmp
cmpsb
rcrb
stos
loopne
aam
test
xor
push
push
out
pop
stos
and
and
lcall
or
loope
pop
repz
repnz
jns
sbb
pop
stos
mov
adc
aaa
jne
inc
dec
adc
cmp
cmp
dec
stc
pop
pushf
sub
and
popa
out
xchg
add
dec
dec
test
insb
pmaxub
sbb
dec
lock
andb
test
js
cmp
inc
shrl
inc
enter
icebp
dec
sub
inc
cmc
test
loopne
orl
leave
jns
div
add
pop
mov
imul
loope
pop
cmc
jecxz
or
clc
mov
push
fwait
and
push
insl
loop
int
push
call
pushf
mulb
push
test
inc
out
xchg
xchg
mov
xchg
dec
in
ret
movsl
ret
das
pop
mov
daa
inc
mov
cwtl
sbb
add
fstp
and
mov
and
push
push
repnz
mov
out
mov
ljmp
cs
pop
iret
push
push
pop
mov
push
dec
mov
mov
adcl
cwtl
fs
cs
sub
jo
mov
pushf
mov
loope
in
dec
bound
jmp
cli
xor
imul
int
or
sbb
test
push
jp
clc
push
int
mov
or
xchg
mov
mov
mov
aam
mov
mov
xchg
inc
imul
in
mov
lret
dec
xchg
in
jno
out
shll
cs
or
add
mov
mov
fcoms
xor
xchg
jl
xlat
push
adc
jbe
jno
pushf
sbb
iret
loop
inc
push
add
jg
mov
ret
cli
inc
add
adc
inc
and
das
pop
out
xor
sub
dec
jp
out
mov
add
xchg
jae
sub
decl
dec
dec
fmulp
mov
pop
sbb
pop
cmp
inc
sahf
pushf
inc
test
and
push
dec
xor
std
xor
push
mov
inc
mov
mov
mov
pop
imul
xor
int3
jp
data16
add
sbb
repnz
inc
xor
mov
dec
hlt
mov
out
push
cmp
daa
jns
idiv
stc
lahf
inc
rol
mov
loope
push
xor
arpl
sti
dec
cltd
ret
test
jo
push
std
dec
or
mov
lcall
mov
pop
cmp
ja
xchg
insb
divb
cmp
mov
icebp
out
mov
in
popf
jg
cmp
sub
inc
fisttpll
xorb
ss
jne
lcall
aaa
ja
sbb
lock
in
jnp
add
xchg
mov
adc
mov
push
fdivr
nop
repnz
push
bsf
shll
fisubrs
dec
mov
mov
int
push
dec
repnz
fnstcw
outsl
or
js
testb
mov
lods
in
adc
inc
jecxz
dec
loop
out
push
mov
xchg
nop
int
ljmp
xor
in
dec
addr16
push
cmc
mov
pop
jno
inc
inc
mov
adc
subl
mov
jno
scas
push
inc
and
aas
xchg
adc
lods
leave
jp
pop
dec
inc
adc
mov
clc
negl
dec
jae
out
imul
fs
sub
mov
pop
insl
ds
push
sbb
lret
jbe
sbb
or
adc
cmp
outsl
fwait
cmp
lcall
xchg
push
sbb
inc
inc
lret
adc
in
cmp
fwait
into
sbbb
xchg
rolb
jns
xlat
mov
mov
push
inc
cmp
lods
repnz
mov
jle
push
ficoms
xor
test
sbb
inc
shrl
or
insb
testl
data16
xchg
push
popl
ljmp
out
scas
frstor
xchg
pop
sub
js
out
fwait
rclb
mov
push
or
xor
dec
out
dec
mov
rcrl
icebp
mov
cmp
xor
adc
adc
cld
aam
push
nop
adc
and
jmp
mov
cmp
sbb
dec
inc
cmp
xchg
jae
ss
stc
or
mov
mov
cs
mov
pop
aad
sarl
arpl
xor
shll
mov
loopne
adc
dec
adc
pop
scas
jg
jge
push
xor
push
push
dec
int3
adc
data16
stc
bnd
xchg
pop
mov
adc
adc
fdivs
jnp
subb
pop
test
shll
iret
sub
ficoml
mov
out
aad
xchg
fidivrs
jbe
cmp
je
clc
shrb
cmp
fiaddl
jl
xchg
sub
into
cmp
push
cmpsb
and
cltd
sbb
aas
jns
fildll
ss
push
les
pop
ja
cli
push
mov
and
cwtl
sbb
test
outsl
int
pop
adc
pop
ficoms
sub
out
mov
push
and
push
add
jne
sbbb
loope
pop
pop
push
cwtl
dec
push
add
inc
or
stc
xlat
stos
mov
jle
or
xor
pop
test
push
lret
cwtl
rorb
enter
mov
scas
inc
jno
xchg
mov
cmp
pop
dec
sahf
addr16
mov
xchg
xchg
loopne
popa
xchg
mov
inc
loop
aas
jbe
shlb
and
or
dec
cmp
mov
andl
fsubrs
pop
sbb
pop
insl
aam
xor
mov
mov
cmp
jp
add
subl
sub
jae
push
aaa
pop
push
stc
pop
push
add
leave
sbb
out
dec
or
pop
pop
xchg
sub
or
xchg
stos
cwtl
sbb
fnsave
stos
lea
sbb
inc
cmp
ljmp
repnz
pop
nop
jg
add
push
adc
ss
sahf
xchg
xchg
ss
cs
mul
inc
sub
mov
jbe
sarl
popa
xlat
and
fbstp
xor
ret
out
mov
jp
out
jbe
jmp
or
out
outsb
cmp
adc
pop
mov
scas
mov
or
jmp
xor
and
fstps
add
leave
cmpsb
sub
out
dec
cld
mov
cld
ss
cmc
push
and
iret
lahf
std
ljmp
mov
inc
movsb
lock
mov
test
jbe
into
out
cmp
inc
push
jl
dec
fstps
sbb
pop
cmp
rorb
mov
xchg
flds
and
popf
enter
jae
jne
mov
mov
out
stc
lret
push
pop
fwait
push
pop
cli
pop
inc
mov
mov
xchg
add
or
outsl
push
int3
ret
xor
aaa
xor
scas
loop
mov
xchg
out
fsubl
xchg
das
cmc
push
xor
add
outsb
or
or
inc
loopne
push
enter
mov
dec
popf
jne
mov
imul
mov
pop
adc
dec
sbb
fstl
fsubrp
push
gs
xor
adc
pop
ds
mov
pop
mov
pop
or
push
pusha
cmp
bound
adc
inc
out
mov
pop
mov
mov
add
push
mov
push
mov
fadds
cli
mov
pushf
push
or
mov
gs
xchg
adc
push
push
adc
test
dec
add
outsb
sbb
or
jnp
test
lea
xchg
pop
scas
sub
cmc
mov
cmp
aad
int
mov
rorb
dec
out
loop
cmp
in
jmp
sbb
scas
push
adcl
push
inc
jg
scas
mov
mov
je
push
and
repnz
mov
sub
mov
cmp
test
xchg
add
cli
add
ds
test
cwtl
or
jns
jne
and
call
or
pop
mov
test
cmp
mov
jnp
out
dec
lret
lea
cwtl
sub
push
push
leave
dec
enter
mov
lret
les
lds
mov
sarb
sub
add
and
pushf
xchg
lcall
push
daa
repz
loop
push
and
ret
movsb
fisubl
pop
and
nop
das
fcmovnu
and
outsb
lods
sti
lret
sbbb
scas
imull
inc
shrl
sbb
mov
jbe
in
imul
pop
test
jbe
aam
ret
or
shl
inc
hlt
xchg
sbb
mov
xchg
xor
mov
xchg
cwtl
daa
xchg
out
ja
insb
hlt
inc
stos
xlat
jmp
dec
call
insl
sub
pop
add
cltd
int
rcrb
cs
ljmp
in
dec
fwait
jge
jle
mov
cli
dec
or
movsb
das
pop
loopne
mov
mov
shll
jmp
mov
lret
jnp,pn
sahf
xchg
fstl
and
cli
mov
aam
sbb
and
jle
mov
dec
outsb
pop
mov
int3
xor
xchg
sbb
aad
lea
and
aam
test
mov
pushw
rcrl
pop
pop
insb
inc
int3
jecxz
push
hlt
dec
outsb
cmp
mov
repz
lret
dec
mov
cwtl
add
inc
cmp
mov
sub
out
jo
cmpb
pop
fwait
xchg
push
xor
or
cwtl
mov
mov
xor
scas
repnz
cmpsl
aad
inc
cmp
sub
mov
cmp
ret
sub
sbb
das
in
and
out
sbb
js
jo
or
adc
dec
orl
mov
sti
cmp
out
jno
pop
mov
mov
sub
sub
cli
mov
fsts
jae
push
cmpsl
push
fwait
add
bound
mov
rclb
pop
sbb
sahf
pop
int
mov
xor
out
sub
adc
jge
inc
xchg
test
cmpsl
mov
mov
sbb
xchg
ds
sbb
cmp
jne,pn
je
movsb
popf
in
pop
roll
data16
out
push
mov
aad
xchg
xchg
cmp
pop
sub
xchg
cli
fdivl
test
insb
mov
pop
sub
jno
in
push
fmuls
subl
testl
decl
mov
pop
imul
sbb
mov
sub
lods
outsl
adcl
mov
in
push
push
addr16
incb
test
mov
in
lods
push
sub
aad
idivl
cmp
jg
imul
in
mov
push
insl
dec
loop
ljmp
jp
imul
and
jb
mov
xchg
xchg
dec
mov
cmp
push
sub
xor
iret
cmp
cmp
dec
cmp
adc
sti
mov
test
ds
out
outsb
sub
cmp
push
popa
sbb
rol
mov
or
mov
sub
mov
fstpt
icebp
cmp
push
inc
ret
fdivs
xchg
pop
sarb
inc
cwtl
sub
lret
arpl
mov
mov
ja
ljmp
xor
cmp
loopne
mov
test
les
movsb
cs
std
inc
incl
lret
mov
insl
inc
push
fsubl
or
test
pop
and
mov
push
cmp
movsb
push
scas
dec
xor
mov
jnp
push
aad
cmp
xor
in
pop
jne
sbb
sub
insl
sahf
aas
sbb
pop
push
hlt
std
outsb
loope
mov
cs
pop
jno
outsb
xchg
jg
and
mov
lcall
pop
lea
or
repnz
lods
sub
daa
xlat
sbbl
mov
inc
ds
push
push
es
jnp
out
test
xor
xchg
sbb
push
lret
cmp
dec
adc
mov
pop
or
push
ret
mov
cld
rorl
lea
hlt
add
and
cltd
mov
vprotq
mov
mov
ljmp
cltd
dec
cmp
push
sub
jl
clc
sub
adc
fcom
mov
mov
repnz
sbb
int
rclb
add
cmp
enter
jno
movsl
cmp
gs
fdivr
push
cmp
cli
push
pusha
adc
adcl
and
mov
imul
inc
insb
or
push
jge
je
in
pop
inc
mov
push
adc
inc
dec
mov
out
popf
addb
add
dec
mov
movsb
dec
stc
push
out
outsl
cwtl
popf
xchg
dec
cmp
jle
es
adc
aas
dec
pop
sbbl
xor
push
xchg
pop
in
rorl
stos
inc
inc
sub
or
push
or
repz
push
fdivl
in
mov
mov
icebp
das
jmp
cmpsb
out
fcomp
mov
push
mov
sub
fwait
ja
into
mov
xchg
sbb
enter
repz
add
loope
je
and
pop
lret
mov
stc
pop
xor
popa
or
mov
pushf
sub
frstor
push
fwait
roll
lahf
jle
cmp
movsl
or
add
fnsave
call
pushf
cld
mov
add
das
loope
out
mov
popf
test
cmpb
or
dec
outsb
cmp
repnz
sti
fwait
adc
lods
outsl
push
icebp
mov
jbe
push
daa
pop
loope
cmpsl
push
call
jno
xlat
jbe
pop
ja
xchg
xchg
and
cld
sti
cmc
add
mov
dec
pop
cmp
hlt
and
mov
loop
xchg
jle
loope
sbb
dec
daa
scas
stos
jg
stc
inc
bound
sbb
enter
inc
cltd
popf
mov
and
sahf
lods
pop
repz
hlt
jg
mov
call
cwtl
xchg
mov
iret
or
sbb
jo
cmpsl
fsts
dec
or
jne
mov
clc
or
pop
sti
jecxz
hlt
loop
sbb
jl
leave
lret
data16
or
push
in
cli
xor
add
add
iret
mov
test
cwtl
mov
or
es
pop
daa
insb
cld
add
hlt
cmc
scas
jne
nop
push
xor
sub
addr16
addr16
jg
mov
mov
inc
call
cmpsb
mov
pop
dec
mov
mov
lea
xor
adc
push
lcall
scas
jl
movsb
xchg
inc
subb
ret
sub
sub
and
pop
cli
jmp
movsb
lds
not
loopne
cmp
outsb
test
xchg
mov
ss
leave
loopne
xchg
mov
mov
aaa
in
in
pop
aad
pop
cli
push
xor
stos
in
fsubrl
pop
mov
xchg
adc
pop
popa
lea
ljmp
aaa
andl
cmp
rol
cmc
imul
push
jp
andb
or
mov
adc
test
test
lds
xor
xor
dec
icebp
pop
push
arpl
fisubl
ds
mov
xchg
mov
popa
xchg
rcrb
iret
sbb
jecxz
xor
mov
out
pop
daa
scas
mov
insb
imul
add
jae
push
mov
dec
dec
scas
sub
cmpsl
je
mov
cli
and
sub
int3
repnz
inc
xchg
lock
icebp
jns
hlt
cmp
xor
ja
dec
push
gs
xchg
je
imul
leave
mov
fs
jl
sbb
out
sbb
leave
mov
mov
mov
mov
sub
mov
jp
adc
in
dec
lahf
stos
call
hlt
add
adcb
leave
inc
pop
xor
or
jg
mulb
mov
insl
dec
rcrb
icebp
decb
fldcw
test
out
and
add
add
mov
add
cmp
cmc
mov
movsb
leave
test
push
gs
in
inc
xor
mov
push
outsl
sarl
stc
repnz
sbb
inc
push
cmp
or
jle
cwtl
cmc
mov
loop
push
pop
fcomps
repnz
jecxz
pushf
jns
outsl
int
mov
sbb
adc
stc
push
lea
icebp
jnp
ret
mov
decl
inc
dec
idivl
sbb
mov
push
lds
jne
lds
pop
shl
push
aaa
mov
dec
sbb
add
push
jp
ja
jns
jg
xchg
iret
lret
aam
mov
imul
lret
enter
adc
cli
add
xchg
imul
scas
pop
cmp
and
jg
aad
adc
dec
cltd
mov
pop
or
iret
and
movsl
mov
mov
insl
and
push
aad
les
jbe
mov
pushf
pop
or
cmp
into
xor
jae
jno
cwtl
cmpsb
and
subl
or
mov
ret
adc
movsb
in
aaa
mov
shll
xchg
test
xchg
adc
das
insl
ret
xchg
sub
sbb
test
jmp
lret
addr16
cmp
xchg
cs
xchg
mov
ss
imul
lret
out
bound
jns
jl
pop
cmc
test
inc
subb
ret
adc
mov
js
mov
xor
rorl
imul
push
sub
xchg
jae
lret
sbb
mov
fwait
imull
push
or
xchg
pop
into
sbb
out
mov
js
xlat
lods
mov
dec
push
or
push
push
mov
mov
repz
das
or
les
pop
dec
test
adc
sbb
add
pop
mov
int3
sub
adc
scas
lods
sti
int3
jno
sbb
jp
pop
mov
dec
add
pmulhuw
and
push
imul
clc
push
jecxz
dec
mov
add
mov
test
jl
iret
das
dec
pop
cmp
test
imul
mov
mov
mov
mov
or
dec
add
cmpb
cltd
add
lcall
loop
jb
subb
mov
cmp
lret
add
push
mov
pop
sbb
fwait
jno
mov
mov
push
sbb
lcall
js
xchg
sti
sahf
lea
scas
scas
jnp
lds
inc
stos
in
outsb
sbb
insl
movsl
mov
push
gs
daa
push
call
lahf
pop
in
es
pop
jno
sarb
lock
ja
clc
add
aam
push
sub
pushf
call
imul
aad
iret
add
cld
jl
mov
icebp
cmc
dec
or
stc
js
scas
gs
lods
aaa
movsb
movsl
rcrl
jo
shrb
imul
out
scas
sub
and
add
stc
mov
cmpsb
mov
mov
pop
bnd
fisttpl
xor
cs
loop
sub
out
add
mov
xchg
aaa
jbe
adc
or
xchg
clc
mov
movsb
lahf
pop
cmpsb
sbb
stos
clc
push
stos
ret
jecxz
cmp
xor
testl
in
mov
pop
cmp
in
and
pop
adc
dec
orb
xor
dec
in
sti
sbbb
push
mov
and
ds
xchg
jg
out
int
mov
xchg
adc
cwtl
stos
cmp
mov
mov
pop
jmp
ret
add
jge
cli
sub
mov
adc
lcall
enter
scas
xlat
in
mov
adc
test
pop
testl
xchg
mov
push
add
mov
cmpsb
insb
scas
fwait
add
into
push
out
cmp
fildl
push
lds
icebp
mov
pop
jae
fnsave
or
repnz
jmp
lods
push
mov
loop
movsl
outsl
sbb
dec
gs
outsb
lahf
sub
sub
pop
faddl
rcll
scas
ret
dec
in
pop
pop
sbb
mov
das
pop
sub
out
mov
mov
enter
movsl
lea
mov
mov
mov
mov
lcall
cmp
sbb
sbb
push
mov
jns
dec
sub
xchg
mov
ds
sbb
and
push
dec
fwait
inc
fidivrs
add
dec
sub
cmp
lret
stc
jle
or
mov
xchg
push
js
fsubp
jmp
imul
insl
fs
or
cmc
enter
jb
cmpsb
mov
inc
and
nop
mov
mov
sbb
inc
adc
mov
btrl
xor
out
sbb
dec
outsl
xchg
dec
pop
pop
movsb
pushf
add
addr16
or
dec
add
mov
mov
cs
adcl
push
mov
stos
test
dec
movl
movzwl
mov
sbb
push
xchg
outsl
xchg
jns
sbb
pop
sarb
sti
shl
mov
xor
fstps
mov
jne
dec
mov
xchg
sub
mov
xchg
enter
push
inc
xor
mov
mov
icebp
xchg
jg
dec
push
pushf
cli
fisubl
mov
leave
idivl
sbb
popa
insb
out
rcrb
or
divl
xor
mov
or
mov
daa
in
pop
pop
mov
mov
dec
mov
dec
inc
and
jmp
push
mov
xchg
es
pushf
xchg
adc
mov
jecxz
shll
dec
mov
adc
xchg
out
lahf
addr16
adc
jae
rcl
pusha
push
pop
dec
call
sarb
or
outsl
arpl
faddl
lret
jno
add
mov
test
dec
inc
enter
or
int3
jns
loopne
shrb
and
cmc
pop
dec
in
popa
test
aam
adc
fs
in
das
pop
mov
push
xor
and
sub
mov
das
cmp
int
popa
xchg
lahf
add
jo
sbb
seta
shrb
mov
push
hlt
mov
stos
mov
into
add
inc
into
mov
in
xor
mov
jne
cs
cmp
cli
ficomps
rcll
and
inc
stos
push
jne
icebp
inc
add
mov
lock
dec
shl
mov
mov
pop
jmp
xor
mov
inc
ljmp
je
mov
ja
call
or
jl
call
push
das
andb
dec
sub
cmp
mov
jo
adc
cmp
jbe
movsl
mov
lcall
sahf
in
push
jl
into
dec
mov
addr16
ljmp
lods
stos
jl
data16
push
cmc
loope
ja
pop
inc
sub
pop
xor
sub
dec
add
push
fwait
cmc
movsl
mov
sub
cwtl
in
js
lcall
call
cmp
les
ret
xchg
xchg
ret
dec
outsl
jns
push
add
cmpsl
ljmp
cmp
in
adc
rcrb
test
insl
mov
ret
mov
out
push
add
loopne
or
push
arpl
mov
out
add
inc
std
aas
cmp
mov
cmp
xchg
pop
cs
in
mov
movsl
mov
xchg
mov
scas
and
rorb
lods
inc
lea
jmp
adc
xchg
out
push
aaa
pushf
pop
shrb
xchg
mov
push
leave
aam
xchg
push
sub
and
sbb
inc
adc
sub
sbb
icebp
jne
call
adc
add
loopne
xchg
stc
mov
mov
adc
out
or
mov
or
pop
imul
es
sbb
mov
ffree
dec
mov
bswap
fcoml
cmpsb
cwtl
cmp
add
in
ficomps
and
ja
inc
in
or
gs
jle
dec
cli
jnp
mov
inc
js
insb
mov
lret
and
fadd
enter
jg
ljmp
fdivrl
and
sub
mov
aad
js
in
std
test
popa
xor
xchg
jge
mov
movsl
xchg
push
shrb
dec
addr16
movsb
notl
fbstp
jno
outsl
mov
ret
int
jne
sub
lea
and
jae
repz
mov
pop
jl
popa
xor
jmp
xorl
cmp
pop
dec
inc
sbb
and
xchg
or
adc
jae
pop
rorl
mov
cwtl
mov
inc
imul
jecxz
ljmp
push
ljmp
cmpsb
bound
pop
cmp
mov
repnz
pop
jae
sbb
js
fistps
mov
test
out
aam
inc
fimuls
repnz
mov
ficomps
out
cwtl
test
jb
arpl
shll
sbb
pop
or
cld
sbb
movsb
flds
loope
outsl
out
jg
add
xchg
pushf
sbb
roll
das
clc
fsubl
xchg
inc
cmp
cmp
arpl
sbb
push
mov
jno
jno
push
cmc
lods
into
mov
clc
dec
shlb
dec
mov
pop
out
cld
cmp
sti
fwait
sub
jp
scas
sub
lods
mov
outsl
icebp
test
or
fcompl
push
shrb
sbb
sub
mov
ret
std
fisttps
data16
in
push
lods
jecxz
lcall
movsl
pop
mov
gs
jge
lock
addr16
push
sub
cli
sub
or
dec
cmp
loop
arpl
jne
jge
imul
or
push
mov
push
sbb
div
pop
jmp
mov
sub
and
pop
jl
flds
imul
stc
imul
jg
into
mov
scas
daa
sbb
mov
jbe
sarb
xlat
ret
ja
leave
rcll
xchg
pusha
cmp
mov
addr16
sti
push
xchg
xor
lea
jp
push
in
cmp
dec
subl
or
xor
cli
mov
adc
and
jnp
out
scas
cmc
cmp
std
jbe
sbb
jne
leave
ds
pop
cltd
cmp
xor
jnp
add
mov
jnp
jae
fwait
in
lahf
rclb
and
es
loop
pop
pop
or
stos
lahf
leave
icebp
pop
jg
sub
iret
mov
push
loope
icebp
and
xor
dec
fs
ret
aad
jmp
pop
push
enter
subl
rcrb
mov
jge
ja
ds
or
push
mov
pusha
inc
cwtl
push
lea
ja
push
fildll
jl
jnp
xor
fs
jle
jo
imul
jae
enter
cmp
adc
push
xor
test
stos
mov
sti
and
jb
lret
xchg
clc
imul
gs
pop
inc
pop
mov
add
mov
mov
mov
stos
les
testb
pop
hlt
xor
loope
mov
jbe
and
xor
in
jl
add
data16
loope
adc
inc
movsl
mov
loop
fdivrp
dec
test
decb
sbb
dec
nop
js
pushf
pop
mov
aam
lds
mov
xchg
jnp
into
scas
dec
add
inc
add
stos
pop
popa
push
fstps
add
je
push
mov
cs
adc
adc
test
xchg
sbb
cmpsl
roll
dec
xor
in
lods
jle
pop
fimuls
repnz
and
xchg
icebp
sahf
repnz
fiadds
jae
testl
jg
sbb
jns
aaa
xor
sti
cltd
and
movsb
sub
or
aad
xor
mov
scas
inc
loopne
push
sub
or
jmp
add
pop
cmp
fsubr
ljmp
and
push
mov
xchg
insb
shlb
loope
dec
cmpl
add
mov
stos
cmp
hlt
cld
add
cld
or
je
rclb
adc
cltd
lods
fdivl
lock
dec
push
mov
cltd
daa
jo
sarl
push
movsl
cltd
jno
xchg
cmp
push
outsb
ja
xchg
jns
test
pusha
xlat
inc
xor
inc
pushl
add
jo
cmpsb
mulb
pop
jno
movsb
stc
sub
pop
aas
fidivl
inc
out
inc
mov
or
mov
adc
ret
inc
hlt
loope
test
test
sub
cld
and
mov
adc
and
push
and
cmpsl
outsl
int3
pop
sbb
inc
aas
test
rcrb
add
test
iret
jno
xchg
sbb
or
push
nop
mov
insb
inc
mov
out
test
cld
xchg
xor
mov
push
jno
jb
mov
cmp
and
mov
or
scas
cmp
sub
ja
push
and
lret
dec
roll
add
in
stc
mov
daa
sbb
aam
test
fucompp
imul
dec
xor
pop
add
inc
sahf
sub
mov
clc
rcll
jle
leave
aad
imul
mov
cltd
xor
adc
addl
popa
int3
arpl
into
movsl
and
xor
pop
gs
xchg
stc
xchg
mov
dec
add
imul
push
fwait
jge
adc
jl
out
dec
cli
insb
icebp
mov
gs
cmpsb
mov
shrb
xchg
lods
aas
insl
in
loop
adc
negb
pop
in
into
cmp
dec
lds
adc
test
and
gs
in
stos
in
ljmp
xor
js
rep
testl
into
xchg
fwait
stc
mov
sbb
adc
fbstp
mov
loop
clc
mov
decl
movsb
mov
in
sub
dec
loop
sub
sub
fimuls
mov
xchg
jns
das
pop
push
pop
push
sbb
push
pushf
popf
pop
neg
es
adc
cmp
pop
adc
into
movsl
sbb
push
jg
push
lods
push
dec
cmp
fxam
ljmp
dec
mov
lock
imul
push
stos
pop
pusha
sub
nop
dec
adc
jge
scas
mov
rcrb
add
cmp
es
fcompl
lock
add
inc
xchg
je
xorl
dec
movsb
mov
sbb
push
or
std
mov
fisubrs
push
mov
outsb
out
fsubl
mov
jmp
adc
mov
je
jns
dec
cld
mov
pop
pop
fiadds
mov
mov
fwait
mov
push
repz
sub
cmpb
insl
scas
push
add
hlt
dec
sahf
fldcw
ret
cltd
cld
fdivrs
adc
jl
fldl2e
jo
stos
enter
sbb
je
mov
inc
ljmp
sahf
mov
add
xor
repnz
daa
xchg
fnstcw
inc
inc
ret
nop
imul
mov
xchg
lods
sbb
or
mov
adc
pop
push
leave
sbb
arpl
mov
lock
inc
in
fldcw
bound
ja
push
push
fildll
adc
pop
hlt
or
mov
in
nop
addr16
cmp
fistpl
xchg
jbe
pop
ja
ret
in
and
movsb
sbb
hlt
and
push
mov
push
xchg
dec
std
daa
lahf
out
stc
adc
push
decl
ror
negl
ljmp
fwait
inc
adc
push
inc
test
xchg
std
rcrb
lret
mov
add
dec
sbb
fisubrs
jl
xor
outsl
lret
push
jno
push
and
pminub
insl
pop
xchg
aas
jg
lcall
inc
and
and
cs
pusha
jno
in
sbb
mull
jl
adc
jno
jge
add
pop
lahf
jne
xchg
cmp
jae
push
daa
inc
leave
mov
pop
mov
ljmp
mov
leave
scas
loopne
push
mov
clc
aas
sub
push
fucomi
pop
pop
cs
xor
sub
xor
bound
or
aaa
xchg
jno
sbb
xor
loop
inc
stos
push
fdiv
fistps
and
inc
jnp
mov
push
add
in
push
imul
adcb
xlat
or
inc
mov
push
push
jp
jne
popa
fisttpll
xchg
push
imul
call
xchg
sahf
ficoml
mov
cmp
sub
stc
stos
test
imul
sahf
and
xor
hlt
pop
pop
xor
fisubl
mov
call
xchg
lahf
test
loopne
lahf
arpl
aaa
or
insb
or
pop
pop
mov
add
mov
sbb
les
sub
adc
aam
jg
or
daa
jle
xchg
mov
daa
lock
adc
jle
add
pop
or
sbb
orl
push
ret
xor
addr16
popf
cmp
sbb
jg
pusha
xor
mov
stc
sub
int3
mov
in
pop
pop
lahf
ljmp
in
loop
jmp
push
sbb
dec
mov
adc
push
sahf
fldenv
lds
xor
dec
sub
hlt
inc
sub
aaa
sbb
pop
pop
sti
fcoml
ljmp
aas
inc
dec
sbb
scas
and
int
lea
jmp
mov
mov
sti
mov
fildll
pusha
ja
push
test
lahf
lret
sbb
inc
cld
jno
sti
lcall
push
in
jo
adc
sbb
loopne
push
ret
lcall
movsl
lret
add
enter
sbb
sub
loope
dec
xor
cmpsb
dec
push
push
and
psllq
in
or
clc
sahf
jb
or
sub
in
sub
xlat
inc
cmp
jb
add
mov
repnz
mov
les
pop
inc
xor
test
add
cmp
movsb
xchg
insl
inc
out
push
cltd
insl
sub
add
jb
adc
cmp
cmpsl
pop
and
sbb
aam
insb
imul
inc
push
iret
inc
scas
fnstsw
mulb
sub
movups
scas
paddb
insb
mov
ljmp
xchg
pop
and
test
lret
dec
or
inc
loope
ja
add
add
mov
push
mov
lret
ljmp
and
pop
and
dec
testl
sbb
out
sti
cmp
adc
mov
frstor
push
xchg
scas
int
imul
cltd
or
and
stc
jbe
dec
dec
roll
inc
inc
adc
fldcw
xor
sbb
dec
sbbl
jne
test
add
into
jbe
test
mov
frstor
call
dec
inc
adc
rolb
and
xchg
xlat
push
ret
jo
dec
shrl
pushf
test
sbb
sbb
in
mov
mov
in
push
arpl
push
push
es
lock
inc
lods
repz
out
inc
xor
mulb
mov
aaa
pushl
sbb
xor
mov
jle
mov
jno
and
add
int
inc
repz
test
clc
negl
fistpll
in
mov
mov
shrb
add
ds
mov
inc
inc
leave
pop
xor
xor
aad
test
xor
lock
cli
mov
mov
cmp
into
add
cmc
int3
jne
lods
pusha
int3
or
jns
negl
out
dec
loope
push
cld
arpl
push
sub
leave
sub
cmp
push
mov
push
push
fcomi
and
jge
into
dec
enter
cmp
in
xor
and
lret
push
pop
sbb
push
adc
cmp
mov
out
xchg
and
pop
jmp
xlat
fildll
jmp
arpl
or
mov
push
pop
jmp
jmp
sbb
test
adc
sub
test
inc
xor
pop
andl
pop
pop
mov
and
int
pop
scas
dec
cs
adc
int3
xor
mov
jae
cs
push
mov
push
repnz
cld
xor
or
insl
or
daa
mov
xor
mov
pop
and
pop
jbe
sbb
outsb
sahf
into
popf
lods
popa
adc
scas
test
loope
sub
cmpsl
shll
pop
js
imul
inc
push
push
scas
lods
cli
bnd
or
and
test
xor
pushf
push
pop
cltd
jno
cmc
cmp
mov
enter
stos
inc
cmp
or
in
addl
sbb
imul
mov
scas
inc
arpl
cwtl
jmp
fadds
out
jecxz
fnstcw
popa
in
cmp
jne
scas
and
scas
xchg
adc
sub
sar
xchg
in
mov
mov
stc
xor
jmp
mov
jl
mov
mov
jno
add
push
cs
pop
pop
pushf
jg
arpl
push
xchg
push
dec
cmpsb
xchg
sub
pop
dec
mov
mov
or
orb
and
or
in
adc
push
xchg
sub
jbe
jo
scas
sahf
cmp
rep
repz
xchg
js
xchg
mov
out
xor
les
loopne
and
inc
fwait
pop
pop
jp
push
repnz
not
addr16
xor
or
adc
add
repz
jp
mov
call
adc
or
mov
rorb
mov
dec
xor
dec
or
xchg
jbe,pt
neg
sbb
xchg
in
scas
jne
cwtl
adc
or
cli
push
scas
fstpl
enter
xchg
loope
mov
fildll
and
mov
movsl
or
cmp
ret
std
mov
stos
push
inc
xor
xorb
icebp
cmc
repz
dec
lret
aad
bound
repnz
push
adc
scas
int
inc
sub
dec
dec
add
incl
push
out
lret
add
gs
xchg
xor
add
mov
ret
cmpsl
rorb
movsl
xor
dec
mov
pop
sub
decl
push
ja
jl
ficoms
xlat
std
pushf
push
mov
inc
stos
push
inc
jp
bound
cltd
fidivrs
das
nop
int
enter
jle
add
add
das
pop
test
cld
insl
cmp
mov
icebp
sbb
rcrl
lods
lret
insl
pop
and
arpl
adc
adc
xchg
xchg
mov
movsb
mov
xchg
mov
inc
adc
std
rorb
aam
mov
mov
mov
lret
pop
xchg
mov
cmp
mov
mov
and
and
and
fldl
and
fnstcw
enter
inc
insb
mov
adc
sub
lea
dec
xchg
mov
xchg
mov
ljmp
ss
repnz
or
mov
test
pop
jnp
ja
and
adc
icebp
addb
lret
shrl
dec
xor
std
pop
lea
cli
sub
rorb
inc
adc
jg
xor
or
prefetchwt1
or
mov
lahf
jno
es
mov
push
sahf
scas
sbb
decb
aas
fsubl
addb
push
pop
inc
xor
aam
pop
addl
push
fs
sub
enter
popa
cmp
bound
jb
xlat
pop
xchg
mov
fwait
int3
xor
adc
mov
xchg
test
seto
in
push
and
mov
add
jmp
xchg
filds
sub
or
dec
inc
ret
push
or
call
loope
in
cltd
xlat
jg
iret
rcll
les
inc
inc
inc
cmp
out
adc
into
das
lea
and
or
jae
scas
popf
ret
aas
into
cld
mov
cmp
inc
scas
push
xchg
imul
dec
nop
xchg
sub
loopne
in
dec
nop
iret
sahf
xor
dec
push
loopne
imul
push
xor
mov
inc
add
or
xchg
pop
lret
sti
daa
inc
daa
push
lret
jge
jbe
jnp
andb
cwtl
push
push
adc
cli
hlt
sbb
inc
mov
js
cmp
xchg
dec
in
test
push
dec
mov
sbb
movsl
pop
fdivrl
mov
or
jbe
ja
sub
int3
daa
in
xlat
or
push
addr16
ds
jmp
stc
fsubrl
mov
cmpsl
add
adc
lds
mov
adc
inc
xchg
sub
adc
sub
sbb
pop
jns
cmp
mov
adc
sbb
lret
jmp
dec
jmp
xchg
out
sahf
dec
movsb
jne
adc
into
xor
mov
popf
or
mov
cmp
mov
mov
insb
xchg
pop
jle
inc
push
add
sbb
test
cld
clc
cmc
mov
lods
xchg
mov
mov
push
pop
mov
lea
sbb
aad
adc
and
mov
fcmovne
in
jns
fwait
xchg
mov
push
inc
sbb
mov
mov
inc
out
lahf
movsl
shll
mov
adc
cltd
adc
inc
push
mov
xor
lcall
xchg
js
scas
or
mov
xchg
mov
adc
arpl
push
ja
dec
push
sub
aas
clc
push
inc
mov
flds
cmp
sbb
push
mov
jmp
mul
xchg
fcomps
jb
and
iret
inc
imul
lock
sbb
or
mov
adc
cwtl
nop
shrl
jge
out
dec
cwtl
out
jb
or
mov
lods
mov
cmp
repz
loop
add
xor
cmp
lods
sbb
bndldx
stos
ja
int
add
ljmp
lea
bnd
xchg
jae
jae
jle
cmp
xor
add
insb
enter
cmp
push
lock
enter
movsl
loopne
jne
jl
fdivr
jle
and
add
stc
xchg
leave
cmp
or
adc
mov
pop
adc
mov
mov
addr16
add
jl
sbbl
mov
jl
mov
push
rcll
out
cmpsl
cmc
xchg
ret
mov
fidivrs
xor
mov
or
in
push
jo
pop
cmp
xchg
xchg
repnz
push
push
and
cmpsb
shlb
jne
hlt
scas
xchg
cmp
icebp
jmp
xchg
xchg
dec
pop
jl
dec
jne
scas
adc
ja
inc
and
not
jl
jo
popf
sbb
xchg
mov
outsb
add
test
mov
out
test
into
jbe
mov
push
jnp
cli
jl
movb
pop
mov
clc
stos
cmp
stos
vpmaxuw
push
dec
pop
jns
xchg
mov
pop
mov
dec
jbe
in
jbe
out
mov
xchg
sbb
mov
jb
test
sub
adc
rcrl
jecxz
mov
arpl
xchg
sub
dec
fsubrl
and
in
mov
out
sub
nop
cltd
enter
pushf
test
or
pop
pop
test
scas
xchg
adc
xchg
and
ljmp
hlt
mov
aas
inc
int3
mov
fs
movsb
out
int
pop
or
sub
cmp
jae
mov
aas
mov
mov
orl
pusha
dec
into
push
xor
ss
stos
sbb
mov
cmp
xor
xchg
mov
mov
mov
je
aas
test
lods
test
dec
int3
gs
push
inc
jmp
add
inc
jle
gs
sub
jmp
push
dec
fmul
or
aas
gs
pop
mov
cmpsl
sbb
ret
fnstcw
push
adc
hlt
std
popl
daa
mov
cmp
out
pop
cs
sub
xor
mov
dec
cltd
mov
and
popw
iret
les
mov
lea
popa
enter
sbb
addl
pop
or
ficompl
daa
lock
ss
inc
test
adc
lds
pop
cmp
inc
xchg
xchg
pop
daa
test
aas
mov
inc
xchg
and
mov
loop
int
dec
pop
popf
mov
leave
xor
loop
test
enter
cmp
xchg
cmp
cmpl
and
fadds
xlat
ja
test
pop
hlt
idivb
sub
xchg
aam
lcall
mov
sbb
mov
cmc
dec
mov
scas
dec
mov
mov
cmpsb
sbb
push
mov
jno
ljmp
fwait
sti
jae
and
int
dec
adcb
sbbb
xchg
sbb
dec
xor
stos
dec
pop
push
mov
add
mov
lock
imul
mov
xchg
mov
inc
dec
jmp
inc
in
sub
mov
add
push
mov
inc
das
and
fistpl
fiaddl
out
jo
push
outsl
mov
jle
xchg
sbb
aaa
mov
icebp
aad
or
cmp
add
popa
mov
in
mov
bnd
sub
mov
jb
cmp
cmpsl
jbe
push
sbb
jns
mov
push
dec
xor
fistpll
push
dec
dec
iret
mov
push
dec
push
adcb
roll
jbe
push
scas
loopne
das
andb
pop
push
pushf
pop
sub
push
sar
imul
and
jg
in
pop
jbe
ljmp
popa
pop
movsl
rcrl
push
lods
enter
push
pop
xchg
es
das
add
in
dec
xorl
push
add
lcall
sub
mov
xor
jnp
insb
lea
dec
mov
push
js
icebp
xchg
cmpsl
aam
bound
jnp
fldcw
fbstp
pop
test
cmp
aas
fldenv
jmp
mov
cli
push
loope
fstl
push
cmpsl
sub
mov
jbe
or
inc
adc
sub
mov
jnp
imul
xchg
fnstsw
push
push
inc
pop
push
icebp
pop
mov
jns
add
enterw
fsubs
jo
lret
adc
divl
lret
outsl
test
cmpsb
mov
mov
mov
or
ja
scas
xor
test
inc
out
pop
pop
icebp
cmp
adc
int3
fdivs
test
cld
ljmp
popa
sub
add
movsb
fsubs
mov
lcall
mov
mov
cli
dec
rcr
cld
or
pop
ja
test
push
dec
je
arpl
loope
imul
sbb
iret
pop
adc
mov
imul
jbe
mov
ds
ljmp
cwtl
lea
cmp
je
iret
imul
sbb
mov
stos
dec
xchg
leave
call
rcrl
nop
and
aam
xor
or
mov
jg
add
loop
jne
add
add
pop
adc
sbb
add
cwtl
int
fwait
iret
test
fnsave
mov
jae
jecxz
test
shl
mov
ret
mov
ss
fadds
or
dec
cmp
or
cmp
and
inc
lock
inc
sub
jle
nop
int
frstor
repnz
and
jg
sahf
inc
xchg
xor
sbb
repnz
lcall
push
xor
outsb
jae
fdivp
aam
and
dec
mov
xchg
bound
lods
orl
adc
and
or
pop
xchg
dec
inc
sbb
xor
or
aad
pop
xor
and
push
lret
iret
fmul
stos
add
incl
mov
lret
sub
sbb
pusha
jl
sub
mov
xchg
scas
test
fists
xor
mov
lods
mov
imul
aaa
mov
lock
cwtl
push
shll
push
ror
mov
sub
mov
mov
aas
cmpsb
sub
shll
inc
or
push
mov
push
movhlps
jmp
xor
mov
out
add
pushf
loopne
add
leave
mov
mov
stc
lea
lcall
jmp
pop
pop
jo
lahf
sbb
adc
jle
adc
mov
pop
roll
js
int
xchg
cmpsl
inc
inc
hlt
test
cmpsl
pop
pop
xor
cmp
outsb
fcoml
fs
pop
xchg
mov
adc
insl
adc
stos
xchg
outsb
cmp
pop
clc
mov
add
and
mov
cmc
xchg
test
insl
inc
push
cmpsb
je
dec
cmp
adc
shlb
bound
fmul
sub
clc
cwtl
mov
enter
pop
cs
in
dec
xor
out
adc
push
enter
aaa
dec
adc
icebp
fmul
xor
ret
adc
lret
mov
xchg
es
aas
sbbl
mov
sti
pop
push
dec
in
inc
out
shl
jne
orl
or
inc
or
nop
push
ja
inc
add
sbbb
ret
mov
or
sarb
orb
jmp
jmp
nop
jmp
and
popa
push
fisubl
enter
test
mov
jno
stc
nop
out
xor
push
mov
mov
pusha
sahf
pop
sub
sbb
adc
subb
jmp
mov
mov
lcall
pop
push
mov
lds
pop
mov
in
ss
mov
sbb
jns
mov
stc
dec
rorl
cmpsl
lods
pop
xorl
cmp
cmp
nop
jecxz
push
cwtl
mov
xchg
daa
jl
mov
xchg
cli
or
out
sub
xchg
test
loop
mull
aam
in
xor
out
std
repnz
xchg
pop
jle
int
adc
iret
fwait
in
push
cmp
in
jbe
insl
fbld
xor
push
or
ret
pop
cmp
std
push
sbb
pushf
sub
aad
jmp
out
fisubs
inc
mov
js
pop
ret
and
inc
sub
gs
mov
sub
outsl
pop
and
xor
inc
clc
fs
or
inc
xchg
add
into
mov
hlt
xabort
mov
add
push
mov
jae
add
inc
mov
lea
add
xchg
rcr
sbb
mov
cmp
mov
mov
gs
rclb
sbb
cmp
pop
jg
outsb
imul
std
sub
add
popa
mov
out
sub
and
mov
mov
in
fucompp
push
sbb
fimull
mov
mov
jne,pn
outsl
cmpsb
arpl
and
mov
or
mov
adc
daa
add
out
or
outsl
stc
dec
adc
inc
xchg
out
enter
sbb
mov
cmp
iret
test
add
xor
sbb
cmp
cmp
faddl
xchg
and
in
dec
mov
shll
mov
idivl
jp
mov
cmp
loopne
mov
lock
or
int
cmp
jmp
push
pop
dec
pop
push
orl
dec
jl
aad
cwtl
sub
add
xor
inc
mov
adc
and
aad
cs
add
dec
mov
int3
das
pop
inc
mov
lahf
sar
inc
or
data16
repnz
or
push
lds
mov
and
cmp
mov
and
mov
repz
push
dec
testl
ss
fs
cmp
jle
test
stos
adc
sbb
push
rol
out
mov
pop
enter
inc
xchg
mov
xlat
inc
or
orb
push
cmp
out
imul
and
je
xchg
push
add
mov
dec
js
mov
nop
push
arpl
pop
gs
add
add
cltd
push
dec
mov
sbb
push
loop
push
push
loopne
ljmp
and
sub
mov
inc
cmp
roll
push
jmp
mov
add
and
shl
or
xchg
sub
adc
mov
cmp
ret
push
std
xchg
fwait
jge
mov
insl
std
push
fisubrs
dec
push
aaa
push
mov
mov
fs
mov
xor
push
mov
out
jl
pop
adc
xchg
mov
inc
out
stos
cs
xchg
in
xlat
add
bound
mov
adc
push
xor
dec
rorl
mov
les
and
ja
inc
ja
inc
jg
imul
mov
sbb
mov
add
cmp
sarb
nop
ror
mov
int
sub
xor
sub
gs
mov
mov
gs
popf
enter
aad
movb
cmp
test
inc
or
sbb
cmp
xchg
xchg
pop
pop
repz
inc
inc
mov
scas
inc
adc
and
lds
pop
out
jae
sarl
cwtl
mov
adc
or
bound
mov
and
jge
dec
sti
dec
aas
inc
mov
movntps
pushl
in
mov
in
inc
scas
addr16
adc
mov
mov
sbb
div
push
les
int3
scas
adc
push
rorb
dec
adc
pcmpgtw
pcmpgtw
jp
mov
dec
rol
aad
inc
dec
subb
es
sbb
push
clc
mov
je
nop
nop
pop
sbb
dec
dec
rorl
stos
pop
ret
in
mov
push
loopne
sbb
cmp
fstps
sahf
inc
pop
push
xor
dec
xor
push
repnz
movsl
and
pop
iret
pop
and
pop
push
jo
movsl
hlt
inc
aad
sub
movsl
sahf
jl
dec
jno
xchg
xchg
mov
xchg
pusha
add
mov
adc
mov
in
loope
or
pop
movsb
cmp
jle
jmp
jb
mov
mov
loopne
or
stos
jp
lock
aaa
cli
fadds
mov
xor
outsb
push
mov
testb
lahf
mov
pusha
xchg
rorb
push
lea
daa
mov
out
xlat
fwait
or
mov
push
xchg
sbb
sub
in
or
nop
add
push
pop
fbld
mov
push
cmp
mov
mov
imul
fcoml
push
fs
ret
cmp
xor
imul
sahf
adc
sub
inc
orb
pop
lcall
push
daa
cmpsl
and
shl
and
loope
icebp
das
dec
cmpsl
fstl
adc
jns
adc
testl
mov
push
sub
mov
cmp
das
out
adc
nop
out
fcos
shrb
sbb
sarb
das
popa
xchg
shrl
imul
adc
add
jae
sbb
fs
sbb
dec
jp
stos
xlat
out
or
xchg
dec
dec
push
inc
add
dec
es
pop
out
inc
iret
xchg
or
iret
lea
jns
push
scas
dec
sahf
rcll
mov
jo
iret
cmp
aaa
inc
sub
add
pushl
test
xor
roll
ret
jno
xor
sbbb
mov
outsb
mov
js
xchg
mov
sbbb
and
cmp
xor
lock
add
sbbb
push
int3
mov
movsl
sbb
outsl
jno
ret
or
inc
or
adc
jecxz
aas
or
inc
pop
mov
mov
xchg
pusha
aaa
inc
sbb
shrb
push
mov
xchg
xor
ljmp
sarl
mov
cmpsl
popa
mov
shll
sbb
lcall
sub
repnz
sub
imul
ret
shlb
push
adc
xchg
into
sub
mov
jle
or
and
push
rclb
and
lahf
or
sbb
arpl
cli
dec
push
sbbl
enter
adc
xor
pop
adc
nop
xchg
cs
loope
cmp
out
jno
daa
and
jg
ds
das
into
js
adcb
and
push
into
add
jle
sub
sbb
sbb
xor
movb
test
outsb
push
xchg
mov
sub
sarl
daa
xchg
xor
pop
cltd
add
xchg
jne
push
lcall
jmp
lcall
sbb
in
sbb
dec
mov
out
and
xor
adc
push
fmull
or
cmpsl
stos
xchg
outsl
xor
inc
jle
and
dec
rcl
mov
jl
fdivp
insl
xchg
adc
sbb
sbb
xor
aaa
sub
leave
data16
jmp
test
jbe
std
lock
daa
jmp
xor
dec
js
jns
sub
nop
imul
bound
out
nop
push
push
loope
mov
cmp
arpl
or
je
or
int3
scas
cmpb
and
dec
mull
xchg
and
adc
or
dec
sub
mov
push
in
mov
and
sti
sub
jmp
sbb
mov
cmp
pushf
mov
mov
inc
std
xlat
out
jle
dec
jo
add
insl
popf
fs
pop
aas
dec
leave
pop
pop
xchg
clc
movsl
push
ret
addr16
sbb
mov
cmpsl
in
cmc
sub
dec
xchg
dec
stc
leave
jno
adc
or
int3
mov
mov
shrb
mov
popa
shlb
dec
sti
fimuls
sbb
fdivrl
adc
call
scas
and
pop
push
mov
int
xor
hlt
int3
add
fwait
sub
loop
jp
aaa
pusha
jns
cs
lret
mov
js
jp
repnz
sub
push
retw
dec
scas
loopne
rcll
mov
add
in
hlt
stos
lret
mov
push
cmp
xor
push
inc
divb
fs
out
xor
pop
jnp
pushf
jae
stos
or
mov
fs
xor
xchg
cmp
xchg
imul
stos
lods
pop
push
sub
adc
mov
fldcw
pop
clc
cli
xor
and
mov
fs
mov
mov
mov
jb
mov
jecxz
loop
xchg
in
cltd
adc
cld
aad
popa
xor
jl
xchg
pushf
not
stos
mov
outsl
insl
inc
pushf
out
dec
xchg
cltd
mov
pusha
mov
push
nop
and
pop
jae
mov
pop
cmp
jmp
je
jle
xchg
add
fcoms
cs
mov
int
inc
mov
push
and
in
int
inc
jae
inc
popf
in
xchg
ljmp
push
sbb
js
mov
into
das
lret
or
movsb
in
cmp
js
lock
ljmp
pop
xchg
xchg
and
loopne
sbb
or
dec
nop
fcomip
inc
xchg
mov
icebp
out
adc
pop
xchg
xor
pop
xor
or
pop
mov
bound
mov
cmpsl
mov
xchg
mov
scas
loop
mov
in
stos
loope
ja
and
push
pop
sti
adc
xor
stos
jecxz
xchg
sub
dec
popa
mov
ret
divl
jle
jbe
pop
jle
fisubl
inc
pop
gs
xor
pop
jb
push
xchg
push
aam
hlt
push
dec
sub
ficompl
in
mov
ret
mov
sahf
repnz
mov
out
out
lret
gs
insb
in
cmp
lock
sub
pop
test
les
into
in
xchg
or
xchg
outsb
push
test
mov
testb
jb
add
inc
test
fmulp
xchg
outsl
outsl
adc
xchg
ss
popf
mov
test
xor
pop
push
adc
dec
xchg
mov
sub
in
cmc
cmp
scas
mov
add
cwtl
test
mov
fs
imul
push
iret
jae
roll
icebp
mov
out
pop
add
fsub
ret
std
add
ss
imulw
xchg
clc
mov
daa
daa
and
sti
push
fdiv
and
jns
push
xor
jno
jp
lahf
clc
lret
mov
mov
cmp
inc
out
push
sub
fistpl
xchg
ret
hlt
xchg
jmp
inc
mov
loop
leave
dec
pushf
jne
push
mov
fistl
pop
pop
jg
aas
jmp
add
jno
mov
mov
enter
stos
push
and
lock
sbb
mov
lcall
scas
in
outsl
leave
int3
lea
iret
mov
sub
adc
cmp
dec
les
xor
movsb
fstpt
lcall
add
add
sub
add
out
xlat
fcomi
jp
cmp
repnz
into
iret
sbb
ds
hlt
gs
movsb
insb
in
movl
xor
pusha
sub
in
movsb
xchg
ds
lea
cmp
int3
stos
xor
les
iret
in
test
mov
scas
movsb
xor
subb
test
insl
movsl
shrb
mov
mov
pushw
popf
mov
hlt
pop
repnz
push
dec
pop
dec
push
test
push
adc
pop
mov
or
mov
imul
notb
mov
and
aad
fbld
imul
testl
jnp
sub
decb
aad
dec
xor
in
mov
xchg
pop
mov
mov
and
fsubrs
js
mov
repz
mov
lods
outsb
sahf
add
cmpsl
or
mov
mov
xlat
xchg
out
jae
pop
mov
mov
cmp
mov
fistl
sti
mov
fildll
shll
sub
pop
imul
pop
and
ja
and
fwait
push
cwtl
cmpsl
cwtl
dec
push
jns
inc
sti
sbb
mov
sbb
jno
test
in
roll
imull
cmp
enter
dec
and
xchg
js
int
adc
adc
sub
pop
insl
nop
jg
inc
inc
lds
aam
pusha
inc
orl
jnp
and
cli
insb
mov
jb
jmp
insb
push
loop
jb
or
test
pop
lock
mov
call
push
into
leave
call
inc
inc
mov
adcl
fstps
cmp
push
repnz
lods
lahf
cmpsb
daa
ret
add
jbe
mov
int3
cmp
and
mov
cmp
inc
es
xor
adc
xchg
xchg
inc
dec
iret
mov
jo
jnp
fwait
pusha
push
mov
lret
push
dec
cmpl
mov
lds
xor
jecxz
stos
addr16
or
xor
jnp
adc
ror
out
inc
repz
stos
xor
leave
negb
insb
ds
icebp
sub
test
test
fwait
jp
icebp
dec
pop
inc
sbb
pop
mov
xchg
out
imul
test
mov
sbb
push
push
in
inc
dec
insb
repz
pop
mov
call
mov
xchg
mov
inc
xchg
das
push
lret
out
bound
dec
gs
and
jb
add
ret
mov
movsb
adc
lods
sbb
xchg
fwait
in
inc
shr
scas
jno
roll
sbb
adc
sahf
pop
xor
out
out
add
push
mov
out
xor
loopne
leave
shrl
xchg
loope
ret
mov
out
call
add
clc
push
insl
imul
lret
or
cs
sub
shr
inc
dec
cmc
xchg
ds
cmp
xor
cld
ja
dec
push
cmpsl
in
in
mov
or
imul
or
movsl
out
iret
ja
or
fldl
sub
and
mov
scas
mov
lods
mov
jne
arpl
jle
push
loope
sbb
adc
mov
lds
mov
adc
sbb
mov
mov
aam
lret
add
adc
mov
dec
and
fcomps
mov
fcoms
mov
adc
fldenv
jl
shlb
or
in
pop
or
jns
outsb
pushf
mov
fisubs
mov
mov
popa
mov
test
sub
push
adc
rclb
mov
sarb
test
into
lods
jp
bound
adc
xchg
addb
aaa
fsubp
aam
add
cltd
mov
adc
jae
test
shl
test
addr16
cltd
adc
into
dec
push
add
ret
movsl
mov
ljmp
jne
push
aam
shrl
pop
mov
jp
cmp
mov
adc
lock
fidivrl
shll
dec
jo
les
xchg
sbb
test
imul
aad
lret
movsl
je
dec
inc
lods
pop
pop
or
xor
bound
mov
push
stc
mulb
stos
add
jmp
mov
fbld
shrl
fwait
xor
or
mov
jne
ret
adc
shlb
push
dec
jnp
gs
rcrl
outsb
xchg
sbb
push
stos
jle
movsl
rcl
xor
jnp
or
mov
ja
inc
add
sub
pop
in
inc
or
inc
jge
mulps
int
jno
xor
lret
and
repnz
subl
cmp
jb
dec
fstpt
bound
jge
xchg
pop
rolb
add
fmull
loop
fwait
xchg
xor
rcll
push
lock
push
std
fsubp
aad
pop
dec
sbb
push
sbb
or
mov
ret
jl
xchg
mov
pop
and
xchg
push
test
lahf
cmc
stos
ret
mov
jmp
mov
adc
jmp
rclb
dec
xlat
fs
jne
lret
in
mov
sarb
shrl
jno
popa
or
lds
xchg
dec
in
jns
mov
sbb
push
in
pop
daa
xlat
and
test
aad
and
test
lods
mov
cmp
js
mov
add
sub
fs
out
stc
jo
xor
imul
dec
rcrl
dec
leave
jge
imul
mov
repz
sbb
or
jbe
mov
jne
das
mov
adc
xchg
push
mov
jb
shll
mov
jecxz
xchg
pop
jecxz
rcrl
mov
scas
dec
loopne
sub
jb
or
mov
aam
pop
movsl
aaa
stos
dec
leave
and
xchg
cmpsl
push
mull
pushf
test
jnp
add
ret
cmp
imul
xchg
add
sbbl
pushf
jb
mov
aam
and
inc
rolb
lods
fnstcw
pop
sbb
sub
mov
or
adc
addr16
xchg
sub
lret
cmpb
fsubs
add
imulb
lock
push
test
lea
pop
test
mov
inc
out
mov
les
xchg
sbb
fidivl
mov
mov
cld
insl
andb
bound
lods
int3
sbb
jp
cwtl
mov
clc
ljmp
xor
sbb
call
in
pop
jl
out
pop
cltd
sti
addr16
push
and
cmp
stos
xchg
cmp
jge
rcr
mulb
clc
fdivs
jl
cli
pop
test
push
popa
mov
mov
arpl
dec
pop
nop
or
dec
adc
je
fidivs
pop
stc
andl
and
cmp
faddp
or
jo
lods
dec
arpl
xor
cmp
idiv
add
cmp
mov
fcmovbe
fcoml
cli
inc
xchg
ss
xchg
fists
outsl
aas
ljmp
mov
or
ret
sbb
out
data16
test
and
loop
xchg
inc
pop
push
adc
xor
xorl
lcall
repz
pop
xchg
xchg
or
cld
add
mov
sub
dec
pop
sub
pop
ds
jns
push
nop
pop
sbb
cmp
or
adc
add
in
pop
sbb
adc
sub
insb
mov
dec
lret
js
pusha
pop
test
inc
and
jnp
popl
shlb
mov
pop
lods
mov
push
pop
insl
mov
decl
pushf
or
andl
mov
cmp
or
sbb
push
scas
mov
mov
mov
pop
lods
push
adc
orb
leave
ss
add
int3
cmp
imul
jno
inc
shl
popf
sti
sub
sbb
xchg
rcrl
outsl
mov
dec
ss
out
jno
leave
shl
int3
adc
add
xchg
aam
out
push
push
push
mov
mov
cli
push
test
adc
cmp
cmp
xor
out
and
mov
test
xrelease
outsb
push
xchg
cmpsb
push
fmul
scas
pushf
stos
addr16
mov
leave
dec
out
pop
call
icebp
xor
mov
inc
mov
test
in
or
jne
pop
jp
loop
add
jbe
clc
mov
or
ljmp
push
mov
dec
mov
xchg
mov
test
nop
xchg
stos
xor
xchg
jmp
into
pop
sub
push
out
ja
xor
xorl
pop
lcall
loop
mov
and
in
je
ret
ja
stc
cwtl
inc
sbb
mov
mov
jge
mov
xor
push
arpl
mov
pop
or
testb
ljmp
lock
lea
push
fnstsw
aam
popa
or
push
mov
xchg
push
daa
lahf
jecxz
lods
xor
aaa
lock
int3
and
mov
pusha
bound
push
push
or
cmpb
outsb
outsl
fwait
jp
mov
sub
or
cltd
sbb
add
push
sub
orb
add
cmp
sbb
sub
insb
adc
or
cs
or
sub
and
decb
dec
ficoms
ss
aaa
rorb
mov
cmp
pushf
push
call
sti
push
push
gs
lret
adcb
jae
xor
inc
inc
ss
add
mov
loope
add
cmc
add
mov
insl
xchg
loopne
imul
adc
cmpb
lcall
cmpsb
xor
mov
hlt
jb
loop
das
jne
movsb
sarb
and
xchg
adc
es
mov
push
dec
inc
mov
fdiv
imul
pop
das
push
imull
cmp
stos
in
mov
sarl
push
pushf
xlat
adc
push
or
pop
add
das
push
xor
dec
push
sub
mov
push
jmp
mov
jmp
lea
roll
mov
lcall
scas
sub
fcoml
sbb
dec
mov
push
jns
lret
icebp
fistps
jl
dec
push
inc
xor
mov
cmp
dec
lock
fnsave
mov
mov
pop
inc
test
ljmp
sbb
imul
into
jbe
mov
xor
mov
fdivs
out
cmp
inc
dec
sti
xchg
scas
pusha
push
mov
cwtl
ljmp
lds
lret
cmp
lcall
pop
daa
outsb
adc
jmp
push
fsubrp
push
push
sahf
cmpb
rorl
jne
or
cwtl
popf
inc
dec
xchg
xor
inc
call
pop
adc
sub
lods
pop
das
xchg
ret
test
imul
ret
dec
imul
jnp
dec
push
pushf
adc
jne
pop
lods
scas
xchg
mov
adc
push
ja
test
loope
int
je
shll
in
push
push
jno
pop
leave
into
mov
outsb
repz
xchg
cmpsb
in
push
mov
jo
aam
cmpsb
mov
mov
and
and
or
and
loopne
dec
adcl
mov
popf
xor
cwtl
scas
cltd
rcl
lods
pop
rclb
or
int3
loopne
pop
insb
gs
icebp
push
adc
jbe
idivl
mov
pop
xor
es
and
mov
add
and
sbb
mov
pop
xchg
ret
and
jb
sbb
cmp
test
xchg
xchg
in
xchg
mov
mov
and
mov
cmp
test
and
sbb
xchg
or
dec
inc
popa
jo
repnz
cmp
int3
inc
mov
jmp
push
push
sbb
or
jne
xchg
pop
or
push
call
gs
jp
rorb
cltd
mov
dec
in
stc
add
enter
popf
lods
scas
repnz
pusha
mov
out
xor
imul
jmp
xor
xor
jne
mov
pop
aad
jns
repnz
out
lock
mov
shll
icebp
out
push
and
pop
outsb
dec
aas
mov
imul
leave
sbb
and
push
xor
jne
jb
xlat
scas
lods
movsb
inc
js
adc
jae
stos
pop
lea
push
mov
imul
jb
sub
add
psadbw
lock
in
scas
mov
push
mov
inc
scas
and
test
cwtl
lret
mov
jnp
xchg
jb
mov
push
pop
and
mov
mov
adc
mov
pop
test
cli
push
adc
call
mov
sub
leave
lret
pop
xchg
inc
insb
mov
mov
cmp
push
test
clc
fiaddl
dec
inc
jae
mov
xchg
jp
std
int3
push
data16
and
push
imul
sub
in
ja
jmp
ljmp
fucomip
add
sub
out
pop
pushf
cmp
iret
add
sti
ja
dec
test
stos
push
xor
int3
xchg
mov
xor
xchg
lock
ret
add
rcl
pop
and
or
and
adc
or
mov
fisubrl
and
add
mov
stos
mov
popf
mov
pop
cs
adc
aad
repnz
inc
inc
dec
sub
dec
cmpsl
add
roll
scas
push
fstl
int
out
clc
mov
test
mov
clc
cmp
cmp
stos
test
inc
test
mov
iret
mov
imul
shlb
mov
mov
push
inc
je
imul
push
pop
je
push
lods
and
mov
or
mov
xlat
or
pop
mov
mov
aam
lcall
adcl
xchg
lret
popa
jo
push
imul
ja
mov
xchg
mov
fcompl
cwtl
sub
lcall
popa
mov
loop
ja
mov
cltd
jp
pop
dec
dec
in
stc
sub
jno
push
sbb
adc
xor
adc
loopne
sub
test
pop
lods
loopne
test
mov
leave
rcrl
aam
sbb
xchg
cmp
jmp
gs
cmc
fimuls
cmp
insl
ficompl
faddl
cmp
add
dec
jo
sti
loopne
jo
daa
rolb
ds
roll
int
push
xchg
xor
test
jecxz
inc
popf
and
test
loope
iret
or
push
sti
add
jae
dec
fnstenv
or
inc
cwtl
in
not
mov
mov
adc
insb
jbe
test
fimuls
fadds
in
rcll
cmp
adc
and
push
sti
into
pop
mov
stos
cld
inc
add
stos
cmp
xchg
push
bound
imul
mov
rclb
lods
sbb
xor
pop
push
pop
jmp
sub
dec
sub
push
pop
xor
sub
adc
xor
data16
mov
mov
xchg
cli
sar
pop
or
inc
pop
pushf
xor
and
aas
xchg
test
push
sahf
push
pop
jns
test
jge
jne
lret
leave
sub
movsl
pusha
lret
cld
popl
lods
std
fiaddl
mov
jle
data16
sbb
jecxz
mov
cli
adc
mov
test
sbb
fdivrs
push
cwtl
cld
push
aas
or
jne
cmp
mov
pop
into
aam
imul
dec
push
shlb
insb
outsb
sub
imul
or
jecxz
test
pop
rclb
repz
jg
sarl
jae
ret
into
and
scas
stos
test
inc
out
jg
and
scas
mov
cmp
sub
test
je
mov
test
xor
xchg
lret
or
sbb
or
xchg
sahf
mov
push
or
or
jno,pn
sub
mov
iret
nop
jb
cli
out
ret
dec
mov
mov
sbb
movsl
out
repz
imul
xor
insb
fstpl
fldt
jle
mov
outsl
push
repz
in
mov
testb
lods
xor
loope
xchg
jns
shrl
push
jae
std
sub
push
mov
pop
adc
push
or
out
inc
sbb
adc
stc
push
push
jb
pop
outsb
sbb
push
mov
pop
cmp
sbb
adc
je
repz
pop
mov
push
inc
xor
arpl
xor
and
pop
rep
in
out
out
pop
hlt
std
jl
pop
mov
inc
das
ljmp
add
xchg
shr
push
ret
ficomps
js
cmp
clc
out
outsb
es
sub
out
call
xchg
decb
mov
pushf
je
cmp
mov
js
shll
cmp
jmp
sbb
sub
sbb
imulb
mov
sti
dec
icebp
or
imul
das
cld
lods
ja
inc
pop
bound
js
mov
cmc
mov
mov
cmp
jo
roll
jae
dec
loopne
cs
or
xor
jne
lods
rolb
pop
dec
jno
and
addr16
cwtl
in
mov
inc
dec
mov
pusha
xor
xor
jge
xchg
adc
arpl
add
lods
iret
out
stc
mov
out
dec
cmpsl
jmp
sub
lea
push
push
fcomps
daa
mov
in
rol
addr16
pop
jp
inc
popf
fadds
jae
mov
or
and
out
push
mov
pop
or
jns
inc
sub
jnp
jle
fiaddl
push
daa
incl
fwait
cmc
jbe
cmpsl
jl
or
int3
inc
movsl
cli
or
sub
shr
push
push
sub
pop
pop
imul
pusha
pop
sub
in
and
mov
jecxz
jns
fwait
outsb
xchg
inc
std
nop
add
call
mov
orl
or
mov
mov
or
and
lea
pop
sub
jp
inc
insl
scas
jb
out
jmp
ret
popf
xlat
xor
repz
push
lret
shll
loope
jp
fcoms
stos
xchg
fs
mov
jg
dec
dec
sub
test
sbb
cmpsl
jge
sub
dec
cmpsb
scas
scas
imul
in
lods
testb
mov
add
xor
lods
and
test
cmpb
cmp
mov
daa
outsb
pop
ds
dec
lret
ljmp
pop
lods
push
cmc
fsubr
out
mov
inc
pop
cld
cmpb
xor
sbb
bound
adc
xchg
push
sub
mov
addr16
inc
ljmp
cld
les
jle
ret
sbb
arpl
sti
les
add
fs
add
lahf
stc
pop
pushf
add
mov
sarl
sub
inc
mov
pushf
adc
adc
imul
push
and
mulb
lea
les
movl
cs
sbb
add
dec
xchg
gs
data16
nop
cmp
inc
cmp
xchg
sub
pop
sub
sub
push
xor
dec
pop
call
or
xchg
int
aam
lret
push
adc
mov
fwait
push
mov
call
xchg
xor
dec
xchg
sbb
scas
leave
leave
sarb
loope
popl
scas
int3
cmp
in
and
shr
mov
and
push
and
popa
inc
inc
int3
mov
and
mov
popf
aam
push
mov
jl
push
or
sbbl
fmull
xchg
ret
adc
jp
fisubl
pop
addl
xor
mov
add
pop
ret
scas
and
subl
sbb
lcall
mull
adc
cwtl
arpl
or
push
pop
push
fstpl
add
push
lea
xchg
mov
pop
je
inc
xchg
int3
scas
add
or
or
inc
mov
jecxz
scas
inc
jmp
mov
js
add
jnp
lods
push
mov
lea
sub
fdivrl
xor
insb
mov
pop
arpl
mov
sub
mov
cmp
frstor
dec
hlt
dec
roll
cmp
xchg
frstor
push
mov
das
inc
cmp
aas
test
dec
test
push
fnstsw
lods
adc
ljmp
nop
jg
pop
push
dec
xchg
mov
inc
xchg
fistpll
mov
mov
push
pop
sub
movsb
mov
xchg
addr16
and
xchg
icebp
icebp
cmpl
movsl
mov
in
lds
insl
scas
cmc
fbld
bound
popa
test
xor
testb
or
test
sub
xor
add
sub
nop
jg
adc
xchg
cmp
push
xchg
and
fs
lcall
fcomip
lea
mov
push
call
xor
dec
and
lret
jae
pop
xor
outsb
cmp
cmpxchg
push
xor
cli
sarb
xchg
repz
inc
inc
pop
pop
cmp
xchg
leave
sub
fwait
push
sbb
lods
pop
adcb
gs
adc
dec
jmp
inc
push
or
lods
or
push
out
xchg
pop
xor
push
or
das
mov
and
lock
andb
stc
loope
adc
adc
in
cli
ljmp
or
test
insb
xchg
inc
int
rorb
outsb
mov
incl
fdivrs
lahf
xchg
test
fs
dec
ret
mov
pop
pop
int
test
or
scas
flds
push
insl
mov
jb
ljmp
pop
lcall
sahf
push
cwtl
std
pusha
adc
cmc
lods
push
incb
jg
scas
xchg
outsb
mov
mov
repnz
lret
hlt
inc
jb
xor
dec
adc
mov
jb
mov
das
aaa
xchg
insb
sub
daa
jo
push
xor
pop
sarb
std
jecxz
cmc
enter
adcl
mov
pusha
cmpsl
in
addl
pop
scas
sub
lret
dec
out
addr16
les
popw
jg
sti
out
mov
pop
sub
lock
xor
repz
pop
loopne
dec
mov
xchg
stc
nop
in
jae
loop
jle
sub
ljmp
insb
sbb
add
sti
add
loope
cli
lock
pop
and
mov
inc
hlt
sbb
je
add
pop
rcll
dec
aad
ljmp
add
sbb
fdivs
in
jnp
pop
pop
cli
push
rcrl
sbb
dec
stos
jno
adc
pop
in
mov
daa
hlt
in
adc
imul
std
test
jl
mov
jb
rorb
popa
mov
mov
je
icebp
xor
int
push
cmp
pop
xor
xor
or
addb
xchg
imul
pusha
push
ljmp
fisubrl
dec
jne
mov
mov
sbb
pop
xlat
insb
ficoms
lods
stc
aas
sbb
sbbl
adc
adc
lahf
inc
fcmovbe
mov
daa
dec
jb
sbb
push
ljmp
shll
xchg
iret
mov
out
dec
mov
cmpsb
cmp
fistps
jae
pushf
adc
xchg
and
shll
aam
lock
mov
push
sub
subb
push
sub
repnz
lahf
pop
pop
mov
push
and
mov
jnp
xchg
mov
and
stos
jl
jp
fstps
xchg
fistps
or
aam
mulb
jns
pop
leave
lahf
call
divb
jl
adc
insl
daa
add
std
sub
insb
into
mov
in
dec
dec
pop
mov
lock
fcoms
xor
jmp
dec
test
jmp
and
lcall
add
and
adc
pop
mov
and
ret
xchg
xchg
cmpsb
aas
das
cmc
jns
cmp
subb
add
testb
rcll
cwtl
dec
and
dec
insb
pop
in
into
das
ret
test
sbb
iret
inc
sbb
jecxz
xlat
push
add
jge
mov
cmp
add
xchg
mov
mov
faddl
stos
loopne
aas
pop
xchg
movb
call
push
adcl
addr16
push
or
adc
sub
or
in
sti
into
add
jnp
movsb
imul
cmpsl
repnz
mov
and
sub
xlat
out
fcmovnu
inc
inc
or
popf
or
lahf
mov
popf
jns
or
in
adc
adc
mov
call
jns
mov
sub
and
push
rcl
mov
inc
and
ljmp
push
or
cmp
adc
mov
sbb
test
div
notl
jns
les
fildll
add
xchg
xor
xor
jmp
loope
fstp
jle
lods
imul
andb
push
insl
lea
pop
xchg
sti
xor
jp
ljmp
repnz
cmp
xchg
aam
adc
into
xor
js
mov
call
lods
hlt
stos
repnz
xchg
mov
pop
ret
icebp
stos
push
push
lcall
icebp
fwait
inc
daa
dec
js
loopne
hlt
aad
nop
push
xor
sub
sbb
adc
xorl
ret
push
imull
cld
mov
add
pop
in
lret
mov
add
xor
loopne
bound
das
xchg
inc
les
fisubs
mov
sbb
ds
je
push
sub
adc
test
xor
push
sub
imul
mov
rorb
repnz
inc
gs
dec
popa
jp
je
mov
xchg
js
inc
cmc
test
push
push
or
aad
xchg
xchg
pop
out
ret
xchg
mov
cld
repnz
bound
stc
loop
sub
jbe
cmpsb
xor
xor
push
sbb
or
inc
mov
je
addr16
jae
aaa
dec
lea
stos
mov
or
loopne
xchg
fldt
es
sbb
mov
mov
jge
cwtl
daa
cmpl
xchg
xorb
mov
test
shll
shr
bnd
int
sub
ficompl
dec
cmp
sub
aas
or
scas
sarb
insl
dec
cmp
sarb
inc
lret
sub
fisubrl
cs
int3
ja
push
or
dec
out
xchg
ljmp
and
es
js
lret
sbb
xor
mov
xor
shl
or
mov
fisubs
je
sbb
lea
inc
xlat
mov
lods
in
popf
and
lret
sbb
scas
xlat
repnz
mov
cmp
jne
xchg
inc
cs
ret
xchg
cmpsb
sbb
and
mov
fidivrs
lret
daa
loope
mov
fwait
aam
insb
inc
bound
ret
outsb
subl
fwait
and
je
lds
pop
mov
in
dec
aaa
mov
es
and
sub
jge
or
shlb
mov
std
clc
jno
push
mov
pop
popa
xor
out
push
ja
lods
sub
push
icebp
pop
scas
aam
dec
mov
bound
in
jp
jmp
sbb
loop
or
add
pop
stc
ljmp
sbb
out
cmc
jno
lods
adc
xor
mov
sbb
push
nop
ret
xor
inc
cmpb
mov
cmc
xlat
sti
ss
mov
std
jb
mov
mov
push
mov
fs
pushf
mov
push
and
popf
mov
mov
enter
sbb
cmovl
cli
shrb
fs
in
pop
iret
enter
js
arpl
fildl
mov
dec
filds
leave
testl
mov
sahf
dec
data16
cmc
dec
mov
test
mov
cmp
int
mov
pop
dec
lock
sahf
push
fcomps
ficoms
dec
sub
int
call
sbb
int3
xor
adc
fwait
shlb
xchg
pop
mov
and
ficompl
divb
sbb
jge
add
pushf
nop
popf
call
mov
pushf
cmp
ret
dec
cltd
xchg
sub
test
bound
and
out
xor
inc
cli
and
mov
xchg
fcmove
push
mov
in
ffreep
lds
add
pop
push
inc
cmp
enter
mov
add
fs
sbb
ljmp
test
jg
scas
mov
jb
roll
lock
pop
enter
or
shll
xor
mov
xchg
inc
ret
push
and
push
scas
mull
fsubp
mov
sub
aad
ret
dec
fcmovbe
xchg
or
int3
jnp
ja
add
push
push
mov
xchg
jo
inc
adc
or
pusha
inc
mov
sub
mov
icebp
sbb
mov
add
stos
cmc
or
adc
sub
cmp
sbb
sub
dec
push
sub
add
aas
and
cmp
lods
adcb
shr
shl
xor
mov
xor
pop
push
dec
sub
popa
add
shrb
add
pushf
add
fcmovnb
gs
ja
xchg
and
call
lret
dec
pop
mov
mov
pop
nop
pop
cmpsl
ds
and
test
cmp
out
adc
push
std
in
fidivs
or
ss
enter
pusha
adc
lods
pop
and
mov
sti
outsb
jmp
addl
movsl
and
aad
jbe
outsb
fnstsw
or
mov
test
testb
in
sub
and
je
ss
ret
mov
inc
inc
or
iret
add
or
mov
test
jle
aad
mov
mov
in
sbb
xor
push
dec
pop
aam
push
data16
out
add
xor
mov
loop
out
adc
xchg
jno
loopne
adc
mov
scas
dec
sbb
mov
stos
sbb
xor
push
push
fwait
push
and
pop
mov
leave
std
stc
xor
enter
fstp
mov
add
test
add
daa
sarb
insb
scas
mov
ss
std
jae
jo
mov
and
or
xor
test
xor
adc
into
mov
and
push
cmp
push
rcl
add
jne
xchg
pop
fsubs
pusha
adc
xor
dec
lea
mov
sbb
push
or
push
push
pop
pop
out
ljmp
sub
sti
add
dec
jge
je
dec
add
jno
bound
or
mov
mov
cld
repz
aas
sarb
into
pushf
mov
es
push
jecxz
out
sub
pusha
not
dec
out
test
lds
roll
jnp
fcmove
mov
mov
push
aad
mov
fcom
adc
cwtl
mov
stc
pop
data16
sbbb
sub
shlb
adc
int3
lods
ret
notb
lret
popa
sbb
push
fdivs
pop
inc
adc
or
xchg
mov
in
lret
cwtl
movl
sti
push
lahf
idivl
dec
push
scas
xor
fcmovnu
popf
aam
inc
dec
push
jbe
jge
xchg
push
lahf
pop
xchg
add
sbb
rolb
hlt
fsts
mov
sbb
sbb
sub
jle
cwtl
leave
shlb
mov
fucom
and
fldt
sbb
push
lcall
mov
and
inc
sub
enter
mov
pop
pop
pop
loopne
sub
xor
xchg
mov
addr16
pop
scas
or
xchg
dec
push
insl
and
push
mov
adc
pop
rcll
cmp
sbb
or
js
pop
pop
popa
out
push
cmp
cmp
inc
push
or
fdivs
je
cld
sub
adc
cld
loope
push
xchg
shrb
dec
out
loopne
addr16
loopne
sbb
fwait
mov
imul
xor
out
mov
and
dec
mov
rorb
inc
pusha
mov
cmc
scas
cltd
push
adc
sub
sbb
shlb
inc
jnp
fiadds
mov
or
call
fs
inc
xor
and
pop
xchg
cltd
jns
rolb
mov
dec
push
sahf
add
loopne
cmpsl
pusha
orb
and
inc
dec
mov
push
xchg
idivl
movsl
rorb
cmp
fidivl
aas
push
pop
mov
pop
push
cmp
test
sbb
je
cmc
imul
out
mov
mov
inc
mov
inc
xchg
jno
loope
rclb
sub
ds
sbb
push
mov
xlat
xor
popa
xor
and
sub
jns
enter
mov
sub
jb
dec
sub
mov
lds
xchg
sahf
dec
push
rcll
out
lret
mov
aaa
or
jnp
adc
mov
inc
pop
call
xlat
pop
out
xchg
fdivs
jbe
cmp
push
repz
popf
fs
mov
adc
add
lret
jno
fistl
pushf
ficomps
jle
cmp
lahf
fucompp
fwait
test
lods
cli
es
lods
mov
sbb
shll
fistpll
ficompl
mov
pop
outsl
leave
loope
xlat
jbe
std
ja
adc
sub
adc
fsubrl
mov
test
test
js
and
add
xchg
cmp
icebp
add
xor
sbbb
adc
inc
cmp
jb
pop
mov
xchg
jl
mov
xchg
cltd
push
dec
mov
je
nop
roll
pop
in
mov
pushf
mov
adc
stc
xor
ja
sarb
test
dec
or
sub
add
lods
mov
cmp
jg
sub
pop
push
jecxz
and
xchg
ja
pushf
pusha
lea
pop
cli
adc
mov
xchg
das
inc
pop
fdivl
adc
pop
gs
lahf
and
mov
sub
pop
in
push
mov
cmc
dec
clc
ret
xchg
jle
mov
and
imul
repz
cli
lods
rcll
icebp
sub
ret
insl
jg
jecxz
sub
mov
mov
sub
int3
addr16
je
xchg
sub
fmull
sbbb
mov
out
insl
mov
scas
arpl
mull
scas
fisubs
jmp
fstpt
int
insl
insb
jne
xor
push
jno
or
in
rorl
add
pop
xor
mov
jp
jl
push
jmp
dec
lods
jmp
jg
fistpl
stos
push
ss
aad
cmpl
ja
and
out
inc
lcall
iret
movsl
push
xor
add
jno
in
xlat
mov
mov
shlb
fildll
dec
inc
sub
mov
and
rorb
fadd
sub
mov
rorl
sahf
mov
jno
pop
cltd
loope
loopne
ds
test
fucomp
popa
les
inc
insl
xchg
and
or
mov
and
rorb
in
cmp
fbld
pop
shll
jmp
movsl
mov
cmc
sub
sbb
rorb
push
sti
popf
add
mov
icebp
cmp
fs
jl
jge
or
sbb
cmp
cli
lea
cs
mov
sub
dec
pushf
jge
stos
ss
stos
negl
push
lods
fnstcw
stc
ljmp
adc
imul
xchg
sarb
out
notl
lds
sub
insw
sub
loopne
mov
jns
je
push
jle
push
add
sub
add
mov
jecxz
ss
in
ret
sbb
cltd
add
int
lcallw
iret
ljmp
cmp
xor
gs
jbe
dec
push
jp
int3
cs
popf
incl
rcl
movsl
aas
sbb
in
fisttps
scas
js
jae
js
sub
fwait
popf
adc
mov
ljmp
mov
mov
pop
xchg
sub
out
sub
or
les
aas
xchg
pop
push
mov
out
push
insb
adc
imul
sub
sbb
or
pusha
es
push
jge
sahf
mov
cmpsb
in
cmpsl
movsl
roll
rcr
mul
enter
fcompl
pop
repz
sbbb
jns
cltd
dec
xchg
mov
fmulp
mov
xchg
mov
mov
cld
fdivl
lret
loopne
xchg
mov
dec
fcmove
rorb
push
sbb
fs
cmp
int
in
pop
pusha
xchg
mov
jmp
jmp
push
data16
es
adc
xor
leave
sbb
rorl
push
pop
scas
add
push
lock
pushf
push
popa
shrb
inc
enter
jae
xorl
and
cli
push
arpl
mov
mov
out
outsb
scas
and
sub
xchg
jb
lret
mov
cli
lret
arpl
sbbb
enter
sub
pop
pop
roll
push
jno
mov
jl
push
int
cwtl
add
cmpsb
in
adc
adcl
aam
popa
shrb
inc
lahf
leave
cmp
and
repz
cmp
in
stos
in
pop
xor
sti
sbbl
adc
imul
call
cld
fmull
lret
xchg
cmp
orl
mov
imul
in
nop
xor
std
int
jae
xchg
push
in
mov
and
push
adc
notl
push
lods
pop
jne
sub
inc
out
jg
scas
jge
jmp
jne
pop
jnp
cmpb
adc
dec
mov
xchg
test
es
aaa
ja
in
cli
mov
or
shl
mov
cmc
testl
mov
cmp
xchg
icebp
sub
scas
in
mov
int
jp
ret
loope
mov
dec
in
mov
imul
lods
aaa
lods
inc
call
jp
lock
fmulp
jne
fisttps
mov
data16
int
mov
lods
and
das
in
and
fldln2
push
fimull
pop
and
notl
lea
addr16
sub
add
jp
mov
cmp
jnp
je
mov
pop
mov
xchg
fstl
pop
xchg
mov
cwtl
inc
dec
dec
xchg
fldt
call
notb
jmp
enter
lds
test
inc
ss
add
pushf
jb
jo
dec
aas
inc
adc
jae
addb
mov
pop
pop
lea
add
push
push
xchg
dec
bound
lds
adc
adc
add
mov
add
pushf
pop
add
push
mov
fsubp
jb
pop
xchg
sarl
test
pop
into
imul
adc
or
das
outsl
adc
clc
pop
call
adc
sub
adc
dec
rol
lock
and
fwait
inc
loop
mov
jl
int3
add
push
scas
and
pop
lea
add
pop
jg
sbb
out
mov
scas
jne
cmpsl
mov
and
int
cmpsl
ret
negb
pop
inc
mov
iret
int3
inc
out
imul
push
inc
test
shll
in
mov
and
testb
inc
test
mov
pop
jbe
lret
lds
repnz
dec
in
xor
fnstsw
jg
scas
cmpsb
push
aas
fcmovne
in
std
lret
test
xchg
fcoms
mov
not
mov
aam
pushf
cmp
test
repnz
out
int3
jbe
test
push
xor
push
ret
out
ja
orl
add
ficompl
cmpsl
or
pop
jg
loopne
xor
jns
add
popa
jecxz
adc
or
lahf
pushf
popf
int3
mov
and
rolb
jae
inc
movsb
xor
stos
jecxz
data16
fdivl
cltd
lcall
and
fcomps
dec
stc
push
scas
ss
inc
fdivs
jo
icebp
in
fcomps
sbb
jne
test
movsl
xchg
ja
rcll
sbb
addb
je
mov
or
jp
adc
icebp
mov
xor
movsl
repz
dec
idivl
lahf
stos
mov
cmp
dec
shlw
push
mov
adc
mov
test
mov
mov
fisubs
lret
inc
mov
fildl
subb
adc
push
data16
push
jecxz
add
mov
mov
imul
stos
jmp
icebp
ret
scas
pop
fwait
jns
sub
xchg
cmc
push
xor
cwtl
jp
add
adc
add
mov
out
popf
mov
mov
bound
movsb
push
or
mov
mov
and
add
in
or
data16
cmp
fldt
sub
iret
rcrb
and
adcb
xchg
adc
fdivp
test
xchg
pop
test
push
mov
push
push
dec
mov
clc
outsl
out
testl
push
shrb
xor
mov
and
pop
loope
jae
jl
out
fldenv
jae
jle
jecxz
insl
cmc
inc
negb
mov
sti
cmpsb
inc
fisubrl
leave
add
dec
cmc
adc
les
sti
sbb
push
sub
xor
jo
xor
pop
inc
lds
jmp
xchg
mov
inc
fs
cmp
adc
add
xor
push
mov
fldl
movsb
and
lds
insb
loop
and
in
mov
icebp
dec
mov
fwait
popf
dec
mov
pop
into
iret
insb
ljmp
mov
sarb
pop
addl
or
pop
out
movsb
ret
pushf
sbb
cmpxchg
mov
push
mov
pop
lret
push
add
loopne
std
cmp
jnp
dec
sub
inc
icebp
sbb
xchg
sub
adc
das
ficoml
mov
and
and
xor
shl
fs
fsts
pushf
and
mov
orb
pop
add
je
mov
lcall
lods
movsb
add
pusha
mov
mov
in
sahf
sar
lods
adc
fildll
xchg
in
std
dec
jp
scas
bound
sbb
es
fst
ret
cmp
daa
sub
mov
sbb
ja
nop
pop
in
or
pop
pop
cmpl
hlt
mov
lret
jmp
cltd
adc
and
xchg
xor
bound
fwait
sub
adc
addr16
push
in
push
int3
into
jne,pt
push
inc
xor
in
sahf
cwtl
cmpsl
fmuls
loope
data16
pusha
ret
sbb
pop
lcall
cmp
cmp
imul
mov
xor
lret
pop
jge
cli
scas
jno
xchg
gs
pop
add
mov
cmp
adc
mov
mov
dec
negb
mov
pop
push
xchg
aam
das
xchg
sub
ja
outsb
std
lcall
mov
sub
rcr
rcl
lods
repnz
int
int
jne
sub
mov
add
xor
repnz
add
pop
or
cmp
jns
mov
loop
add
xchg
out
xor
aas
fists
mov
aad
sbb
mov
ret
nop
in
bound
jo
mov
dec
fcoml
pop
inc
lods
xchg
cmp
adc
and
and
bound
push
popa
insl
pop
ds
inc
mov
mov
xchg
and
out
sbbl
jno
xor
mov
mov
ds
dec
or
lods
push
push
fmul
push
xchg
pushf
cwtl
movsl
daa
push
push
mov
das
loop
pop
inc
mov
jle
or
ds
outsb
ret
sbb
bswap
lret
scas
mov
notl
lahf
mov
ret
mov
int3
xchg
sub
mov
mov
cli
out
mov
ret
popa
cmpl
or
mov
pop
lcall
loope
push
lret
mov
stos
sbb
in
sbb
dec
js
loope
in
test
jae
fists
sahf
lods
arpl
dec
mov
push
jb
sbb
push
mov
jp
inc
push
jmp
icebp
mov
jb
ja
lahf
int3
scas
dec
mov
movsl
sbb
dec
cmp
add
shll
pop
sbb
push
imul
rcrl
or
out
mov
xchg
jl
ljmp
icebp
dec
cmpsb
cmp
jnp
dec
mov
xor
jo
nop
outsl
rclb
inc
shrb
inc
xchg
lcall
outsl
mov
inc
pop
sarb
adc
mov
mov
cs
call
mov
pop
mov
sahf
jmp
add
mov
jmp
push
fsubrs
xchg
mov
mov
sbb
andl
xchg
push
sub
sub
and
imul
dec
fisubs
pop
inc
data16
dec
mov
pop
aam
jle
push
arpl
sub
jp
sub
mov
push
adcl
dec
dec
imul
fisubrl
and
loope
ja
mov
les
scas
adc
jle
pop
push
les
das
cwtl
push
jno
xchg
movb
mov
adc
sub
cmp
out
add
mov
mov
pop
adc
sete
adc
cmpl
repnz
outsl
xor
xchg
test
xor
pop
repnz
ficoml
add
push
sbb
fmuls
mov
ret
adc
mov
jns
sub
mov
gs
fisttpll
ja
mov
push
mov
mov
mov
movsl
sub
xor
repnz
or
mov
ljmp
out
fstpt
test
je
inc
mov
push
push
inc
or
loop
and
and
enter
das
jbe
clc
fcompl
stos
mov
clc
pop
pop
and
push
sub
or
jno
pop
test
sbb
sarl
xchg
dec
cltd
imul
cld
xlat
jecxz
xlat
sbbl
or
jge
popf
push
cmp
mov
es
stos
xor
fscale
daa
aad
pop
xchg
pop
cmpsb
cmp
pushl
es
bound
ss
mov
mov
fcoms
dec
cmp
cmp
cmc
xchg
cld
mov
sbb
xchg
pop
cltd
jno
sub
mov
pop
adc
test
pop
cmp
imul
jno
lcall
sbb
adc
test
pop
dec
cli
sahf
push
cwtl
sub
popa
dec
push
jae
daa
mov
mov
mov
dec
mov
push
dec
cmp
jmp
lods
fcoml
inc
rcrb
sub
or
out
and
dec
lods
scas
rcrb
sub
sbb
cli
push
ret
leave
or
int
daa
insb
stos
stc
lahf
xorb
or
and
in
sti
dec
addl
je
fidivs
ret
stc
cld
and
adc
fldl
pop
mov
mov
mov
ret
mov
mov
rorl
insb
push
bound
sarb
dec
ja
jp
xchg
loop
adcb
fnstsw
daa
mov
pop
jg
clc
sbb
loopne
scas
aad
stos
imul
cmpsl
jns
add
outsl
dec
and
mov
cmp
xchg
in
mov
and
hlt
lahf
ljmp
push
dec
xor
dec
or
or
xchg
or
dec
sbbb
fisttpll
cmp
cmp
cmpsl
rcrl
pop
xchg
adc
jp
adc
inc
add
push
fwait
data16
mov
es
cld
jnp
sahf
and
add
cmp
lcall
lods
mov
repz
fld
mov
mov
ret
imul
pop
push
cmpsb
mov
cmp
aaa
cmc
hlt
push
mov
xor
leave
jbe
fisttpl
mov
pop
xlat
sub
ret
ss
fsubrs
sbb
push
jae
add
scas
fistpll
out
lods
xor
nop
sub
fsin
mov
xchg
push
daa
roll
dec
loope
push
mov
jae
leave
adc
pushf
mov
out
mov
enter
sbb
icebp
loopne
or
sub
cli
fsub
inc
push
lret
push
cmp
adc
pop
test
push
and
inc
push
dec
push
repz
push
cmp
mov
shlb
cmpsb
int3
cmp
jge
shl
and
shrb
sub
rcrl
icebp
fsts
popa
test
movl
mov
and
push
imul
cmp
mov
sbb
ja
push
mov
add
out
adc
jbe
insl
and
clc
into
jne
inc
or
out
mov
adc
jp
add
neg
mov
adc
add
ret
or
ret
or
clc
push
push
std
ret
jle
stc
push
iret
pusha
cmp
lahf
fwait
jl
dec
jns
test
jl
mov
jbe
lahf
add
shrb
std
lahf
jne
test
orb
stc
or
xchg
fimull
sti
orl
inc
mov
bound
xor
lret
fists
inc
ja
xchg
std
pusha
inc
push
adcb
loopne
popf
ja
aam
cwtl
sub
lods
jmp
js
push
loopne
xor
phsubsw
mov
sub
inc
out
in
stc
push
shll
push
js
icebp
rcrl
pop
and
pop
fadds
xchg
sbb
fsubp
lods
mov
das
test
lahf
in
ss
lahf
out
push
mov
movsb
sub
and
scas
or
mov
mov
jb
mov
lcall
mov
mov
jg
enter
das
push
mov
inc
loop
pop
sbb
pop
xor
xchg
mov
mov
pop
nop
jno
imul
sub
lcall
dec
jne
push
lods
fnstcw
xor
fwait
add
mov
ret
mov
and
repnz
xchg
sbb
mov
xchg
jg
scas
int
loop
movsl
xor
imul
test
and
jno
add
dec
cmp
sahf
sbb
shlb
jl
sbb
push
inc
aas
jo
pop
or
mov
dec
xchg
adc
cmp
push
sub
sbb
pop
xchg
jg
xlat
hlt
in
push
arpl
pop
mov
adc
rcll
fcmovnbe
add
jne
cmp
xchg
sbb
fistpll
cmpb
and
sub
add
ja
iret
xchg
mov
shr
cmpsb
add
movsb
xchg
fisttpl
out
call
xchg
mov
gs
mov
xchg
sbbb
dec
ja
loopne
leave
icebp
lcall
js
cmp
ss
addr16
daa
out
lea
dec
jmp
lcall
pop
insb
clc
int
int3
dec
test
stos
aam
fisttpll
jg
js
xor
popf
jne
stc
test
or
cwtl
enter
and
jecxz
shrl
rcrl
jno
cmp
leave
adc
movsl
cwtl
mov
ret
stc
xor
hlt
mov
iret
inc
std
add
mov
pop
mov
fidivs
and
push
les
adc
jp
push
or
cmpsl
add
xchg
jo
cmc
inc
pop
sub
pop
cmpsb
lea
xchg
aaa
pop
sbbl
pop
jnp
add
std
mov
mov
xchg
cltd
test
adc
and
aas
clc
lock
push
push
cmpsb
xchg
jne
fnsave
shrl
out
cmc
ja
aam
dec
mov
js
cmpsb
inc
adc
rolb
jno
mov
sahf
cld
sbb
or
and
cmp
lea
mov
adc
lock
stc
push
mov
xor
push
xchg
stos
pop
mov
pop
dec
xor
cld
test
daa
ret
adc
shll
cmpsb
cmpb
fwait
sub
mov
call
mov
pop
mov
lock
loope,pt
addr16
out
dec
mov
xchg
stos
lcall
mov
scas
sbb
mov
sub
xor
add
int3
outsb
cmp
jae
sahf
adc
mov
jle
ds
test
push
inc
xchg
add
test
btr
lea
pop
cwtl
icebp
fcomp
nop
adc
nop
mov
push
pop
rorl
addr16
lock
bound
fs
in
andl
insl
fs
mov
faddl
hlt
js
mov
outsb
adc
jb
jl
or
sbb
pop
cmpl
cmp
int
movsb
ret
and
cmp
pop
aam
mov
sub
dec
lock
mov
in
lock
in
cmp
frstor
sarl
sbb
pop
pop
inc
xor
sbb
loopne
lahf
scas
and
aas
bound
inc
ljmp
loop
push
jno
test
je
sbb
mov
sbb
pop
push
mov
ljmp
cmpsb
sub
sbb
xchg
dec
jl
dec
mov
push
sub
out
xchg
rcll
xchg
pusha
enter
icebp
es
dec
enter
je
xor
je
jmp
fidivl
jmp
pop
mov
jecxz
xor
pop
mov
mov
jecxz
mov
xchg
xor
push
pop
jmp
call
out
inc
jns
add
jmp
dec
std
movsl
stc
out
or
adc
xlat
and
lds
mov
sbb
in
cs
adc
pop
mov
and
gs
out
cmp
xchg
dec
insl
scas
inc
jae
jns
adc
or
mov
in
sub
and
movsl
rolb
fmuls
ret
jge
outsl
test
mov
addr16
push
iret
shlb
xlat
sbb
fwait
pop
ja
ja
addr16
dec
das
popa
pop
mov
es
jns
repz
cmpsb
and
data16
jg
pop
inc
jmp
data16
adc
mov
jns
mov
mov
sub
cmp
subl
int3
mov
xchg
pop
push
sub
sub
push
push
sub
mov
imul
imul
mov
inc
dec
xchg
leave
dec
hlt
sub
js
sub
cltd
daa
iret
sbb
cmpsl
cwtl
imul
adc
push
sbb
mov
or
std
in
cltd
test
in
lods
add
and
jmp
enter
bound
fimuls
aam
pop
and
jge
or
bts
iret
dec
push
pop
dec
je
push
addr16
lcall
jmp
cld
push
cmp
ficompl
sahf
sahf
sub
inc
inc
or
sbb
ret
stos
es
cld
stos
mov
nop
test
jg
mov
or
xchg
sar
loop
jl
cwtl
ret
mov
popf
out
pop
into
out
mov
call
idiv
inc
push
pop
imul
mov
xchg
lret
sbb
and
pusha
push
fwait
and
dec
sub
fstpt
int
pushf
lods
repnz
imul
mov
test
ja
xor
and
les
outsb
mov
popf
je
in
stos
divb
jle
lock
loop
or
or
imull
addl
data16
cmp
jmp
outsl
pop
das
jo
mov
pop
push
pop
mov
xor
inc
in
mov
ret
push
xchg
in
or
loopne
dec
dec
jne
add
and
push
mov
cmpsl
xchg
shrl
mov
jmp
jbe
dec
aad
adc
jbe
movsl
and
pop
jle
push
mov
shll
inc
loop
mov
adc
push
iret
jns
bound
stos
test
or
div
pop
fnstcw
pop
jle
inc
ficomps
mov
or
or
and
roll
clc
adc
sbb
push
nop
pop
push
jne
lahf
xchg
adc
xchg
aad
push
and
jb
std
nop
icebp
lahf
xchg
pop
rcr
dec
or
xchg
xor
stc
sbb
mulb
mov
inc
arpl
out
dec
fidivrs
and
fistl
call
sbb
stc
inc
repnz
mov
and
decb
push
sbb
imul
outsb
pop
cmc
mov
sbb
mov
sahf
pop
cli
pop
pop
sub
js
sub
inc
daa
and
dec
sar
inc
mov
in
cmpsb
cmp
ret
ja
in
stos
pop
std
dec
and
jb
cmp
repnz
negb
xchg
imul
test
or
dec
rcll
fdivrl
cs
pop
imul
lret
xlat
inc
aas
push
shll
cli
in
push
cs
lret
add
dec
sbb
clc
out
enter
cld
movsl
mov
lcall
mov
leave
out
or
add
divl
in
dec
fmull
mov
push
jle
out
dec
lahf
jnp
mulb
sbb
mov
iret
fistl
adc
and
or
mov
fadd
in
lea
fdivrl
leave
gs
cmp
fs
lds
in
lds
and
int3
pop
push
fisubs
pop
repnz
dec
insb
push
or
gs
lods
mov
sub
mov
mov
test
cmp
jne
or
inc
aad
jmp
dec
clc
inc
fnsave
sub
mov
sbb
mov
xchg
ljmp
in
sbb
inc
mov
adc
mov
inc
or
push
dec
dec
push
nop
iret
enter
cmp
and
in
daa
dec
rcll
sbb
ds
ret
mov
lods
shl
mov
dec
in
sub
pop
call
leave
inc
es
pop
icebp
fisubl
stos
fwait
aas
sbb
notl
pop
xor
mov
mov
bound
adc
add
sahf
jmp
adc
cwtl
mov
arpl
js
mov
test
fstpt
jecxz
bound
and
sub
out
out
jle
jmp
lea
mov
cmp
sub
data16
xor
sub
aad
push
add
lods
mov
cmpsl
fildll
xor
mov
xchg
pop
mov
call
scas
mov
mov
shlb
sbb
add
cmp
cmc
push
xchg
mov
mov
push
mov
add
cmp
mov
xchg
into
xchg
mov
mov
lds
in
cmp
cmp
negl
outsb
shrb
cmpsl
das
push
add
je
xor
cwtl
hlt
scas
sbb
shll
mov
in
and
data16
adcb
call
sub
jnp
add
lods
sbb
aas
dec
add
add
mov
jle
lret
mov
lahf
sbb
inc
and
cmp
cmc
push
pop
sti
lcall
xor
ficomps
scas
ja
mov
in
addl
sbb
addb
mov
iret
shll
or
fwait
enter
mov
negb
frstor
jp
in
xor
or
xor
outsb
xor
xchg
jl
shl
aad
add
gs
push
cld
sarl
xor
jnp
inc
inc
cmp
cmp
xchg
pop
rolb
xchg
or
rcl
shl
divl
repz
push
pop
mov
mov
mov
sbb
cmp
mov
insb
pop
sub
inc
ljmp
decb
sub
jg
xor
dec
add
jbe
or
pop
xchg
pop
shr
add
dec
mov
sahf
mov
cmpsl
pop
std
in
mov
push
cmp
fsqrt
popf
pop
add
dec
mov
les
repz
fidivrl
movsb
cmp
lods
lea
repz
jae
pushf
adc
jge
jns
jne
jo
mov
les
or
incl
xchg
adc
jl
add
sub
icebp
pusha
bound
add
or
insl
sub
daa
adcb
mov
outsl
push
in
mov
and
dec
aad
xor
mov
cmp
mov
sub
mov
push
leave
std
cli
repz
push
popl
ror
add
fstpl
add
aad
sub
dec
push
aad
adcl
repnz
push
mov
lods
adc
out
mov
adc
mov
push
inc
xlat
push
adc
in
or
xor
cmp
pop
iret
push
aaa
xor
add
ret
mov
pusha
mov
mov
arpl
cmp
mov
subl
cmp
sbb
sbb
cmp
frstor
xchg
imul
shll
jno
or
cmpsl
nop
pop
mov
mov
fimuls
push
notb
mov
pop
leave
js
clc
test
push
jge
add
ljmp
mov
fdiv
mov
xor
stc
lock
sub
addr16
fnsave
mov
dec
sbb
mov
test
pop
sub
jae
mov
test
add
out
cmp
mov
sub
xchg
inc
dec
jge
jecxz
in
fstpt
add
pushf
rolb
jo
cmp
jo
js
in
inc
rol
mov
and
sbb
mov
incl
or
leave
rcrb
js
mov
sbb
dec
fbld
shl
icebp
lds
stc
popa
add
xchg
push
pusha
mov
inc
mov
imul
cld
or
add
and
push
decb
ja
pop
rcrl
sub
xlat
ret
stos
pop
stos
test
inc
scas
punpckhbw
cmpsb
mov
mov
inc
and
pusha
pop
mov
loopne
push
xor
xor
sbb
dec
dec
fldenv
xlat
push
fmuls
fchs
sbbb
inc
dec
sbb
test
dec
dec
sti
and
adc
insl
jbe
ficompl
movsb
pop
test
inc
jae
jl
xorl
inc
sub
das
push
or
add
pop
jb
ja
inc
and
inc
cmp
outsb
loopne
xchg
pop
aas
leave
stos
jbe
dec
test
cmpsb
or
xchg
faddp
nop
fwait
inc
jbe
outsb
pop
or
jnp
xchg
fistpll
add
cmp
fisttpll
les
mov
iret
adc
std
movsb
dec
repz
or
ja
inc
shlb
add
aas
dec
scas
mov
cmp
das
stos
xchg
call
aam
ja
dec
add
push
rclb
addb
push
xor
scas
aad
js
inc
jne
popf
or
sub
cmp
stos
cmp
lock
out
dec
jmp
push
lds
loopne
std
cmp
and
jne
outsl
ret
jp
jne
jbe
or
xor
cmp
jg
cwtl
dec
mov
jp
pop
jl
dec
jb
in
and
divb
adcl
sub
xor
int3
dec
and
out
jb
sub
lods
pushf
test
repnz
std
lock
insl
dec
stos
adc
or
hlt
adc
ret
dec
jne
clc
pop
cltd
jp
bound
aam
jb
inc
lahf
cli
xchg
xlat
sbb
dec
repz
push
in
sbb
popf
mov
ds
cmp
dec
or
ljmp
jae
rsm
fld
inc
pushl
or
jge
sub
push
test
in
xchg
cwtl
subl
inc
insl
or
out
mov
imulb
shrb
inc
and
enter
and
fiaddl
mov
das
jmp
lds
jns
and
xor
fs
rcll
nop
xor
xor
jmp
push
shlb
dec
sbb
inc
jmp
cli
es
into
das
sbb
movsb
xor
ja
mov
xchg
mov
pop
xor
mov
and
or
orb
inc
out
std
push
and
xchg
adc
mov
inc
jecxz
cld
lds
add
sub
enter
mov
mov
jbe
arpl
xor
test
cwtl
push
cmpl
mov
rolb
jb
xlat
cmp
sahf
adc
fidivrs
xlat
cwtl
fistps
cmpsl
dec
test
cmp
test
or
add
inc
pop
lock
push
inc
inc
jbe
stos
pop
cltd
loopne
mov
dec
dec
xor
nop
push
je
sub
leave
sbb
cmp
cmc
and
out
cmp
cmp
sahf
nop
insb
mov
es
inc
inc
stc
cltd
imul
ficompl
fwait
push
adc
inc
outsb
jl
mov
ret
push
dec
scas
jno
adc
stc
repnz
xchg
inc
push
inc
imul
nop
pop
push
and
aam
mov
imul
es
enter
inc
cmp
xor
xchg
scas
lret
subb
adc
andl
dec
add
dec
xchg
xor
mov
pushf
pop
insb
shr
pop
adc
mov
xchg
popa
jo
add
jl
cmpsb
out
jns
repnz
jmp
int3
ss
pop
adc
xchg
jae
loop
fsts
pop
aad
scas
mov
sub
mov
lcall
jle
mov
test
leave
call
sahf
int3
xor
pop
fdivl
into
sbb
and
cmp
xor
xor
insl
and
dec
mov
outsl
ljmp
out
sub
push
cmc
sbb
and
imul
cwtl
xor
push
cmpsb
add
mov
arpl
lds
mov
push
addr16
data16
test
in
mov
mov
les
mov
and
and
pushf
js
mov
clc
sarl
hlt
scas
shrl
pop
xchg
jno
dec
pop
call
xchg
jo
fisubrs
test
movsl
int3
lret
fistl
inc
loope
adc
sub
xchg
inc
add
mov
mov
sbb
adc
out
data16
adc
sub
negb
out
push
mov
pop
fbstp
sub
icebp
int3
orl
cmpsl
push
lds
jecxz
call
mov
mov
leave
into
loop
jns
stos
aas
gs
cmc
xlat
pop
pop
mov
cmp
adc
enter
shll
loopne
and
ret
out
shlb
mov
sahf
inc
int3
lea
call
push
cli
inc
pop
xchg
or
cld
dec
mov
jns
and
inc
mov
adc
pusha
mov
cmp
sbb
and
je
jae
mov
xchg
dec
fdiv
es
out
push
clc
icebp
mov
inc
lods
cmpsb
xchg
mov
testl
in
add
mov
out
jb
nop
repz
lret
and
cmp
mov
clc
fisttpll
xor
cmp
mov
add
pusha
int
xor
pop
and
cwtl
cld
jl
pop
hlt
sub
insl
pop
adc
cmpsl
fbstp
fs
les
imul
inc
adc
popf
sub
mov
adc
cmc
xchg
test
bound
test
sti
cmp
jecxz
inc
sahf
mov
lahf
insl
js
fistpl
mov
movsb
lods
mov
and
pushf
repnz
outsl
sbb
cwtl
shrl
inc
jb
call
loope
xor
cld
push
movsl
inc
pop
or
sub
dec
roll
idivl
sub
push
lcall
ja
arpl
andl
xor
cwtl
stc
pop
shlb
dec
add
add
scas
movsl
cmp
aam
mov
xchg
pop
xchg
adc
mov
pop
cmc
lea
cwtl
fcmovb
pop
and
add
lret
mov
in
je
scas
or
shrl
pop
or
sbb
loop
mov
ds
ljmp
das
ss
test
mov
dec
jnp
out
lahf
cmp
add
jae
ret
subb
and
iret
ljmp
in
xor
ds
cmp
push
aas
fisubl
pop
loope
jne
lahf
mov
lods
jae
xchg
xor
sahf
mov
out
jno
mov
fs
stc
cmp
movsl
sbb
xchg
icebp
hlt
nop
and
xor
mov
jne
inc
sub
adc
jecxz
xchg
mov
inc
cmpsl
mov
mov
dec
mov
aad
addr16
cmpsb
lahf
mov
and
cld
mov
push
test
mov
sub
lcall
std
jle
mov
fwait
cmpsl
aam
adc
stos
push
jl
inc
dec
push
push
pop
jge
xchg
shlb
pop
dec
movsl
jae
std
ss
push
mov
xor
inc
stos
sbb
xchg
mov
push
cwtl
lea
fcoms
or
jbe
ds
dec
and
inc
arpl
enter
fstps
popf
adc
mov
std
adc
loope
mov
scas
clc
xchg
out
ljmp
sub
pop
or
movsb
mov
lock
or
jae
and
iret
adc
cmpsb
push
jnp
cmpsb
push
jnp
or
and
add
mov
push
xor
leave
cs
xor
mov
lds
iret
dec
arpl
scas
fstl
leave
mov
cli
into
inc
push
xor
mov
test
cmc
push
xchg
lret
mov
scas
iret
pop
push
pop
pop
cli
lret
insl
pop
add
outsb
int
push
mov
sub
xor
inc
push
imul
mov
add
ret
mov
and
or
insb
loope
jne
mov
sbb
lahf
push
test
push
mov
negl
or
mov
jbe
aam
xchg
xchg
jo
leave
inc
mov
and
xchg
cmp
sahf
sub
in
das
mov
push
cld
pop
inc
inc
into
push
dec
push
pop
out
hlt
mov
mov
gs
push
and
int3
jle
pushf
rcl
mov
xor
cmp
or
pop
push
push
push
loope
shl
dec
idivb
sub
push
mov
orb
pop
add
lret
gs
out
sub
xchg
loopne
xor
cmp
adc
icebp
jns
out
outsl
cmp
pop
dec
adc
sti
aaa
pop
fldcw
inc
push
pop
stos
mov
mov
stos
xchg
repz
dec
push
das
add
push
ret
call
mov
jae
xor
mov
or
aad
mov
ret
jnp
push
inc
mov
push
testb
js
dec
stc
ss
jnp
xor
sahf
jb
lods
sbb
repz
aas
add
mov
adc
push
jae
lock
pop
repz
mov
in
in
mov
cld
cmpsb
pop
sbb
xchg
lea
sub
mov
fstpt
dec
sti
or
sbb
icebp
inc
call
mov
inc
loop
fidivl
jns
pop
jp
js
aad
fisttpll
push
std
scas
mov
inc
ss
push
cmpsb
loop
mov
xor
in
sub
jmp
push
sarl
stos
mov
fsubrp
lea
adc
or
shrl
sbb
xchg
divl
pop
aad
lds
inc
pop
jg
add
push
xchg
in
shlb
mov
mov
cld
leave
cld
test
adc
jb
xor
mov
fwait
push
test
jns
sub
mov
cmc
mov
and
xchg
jbe
push
push
mov
or
lret
repnz
xchg
xchg
inc
outsb
pop
sub
icebp
cld
mov
aaa
and
pushf
in
mov
repz
pushf
inc
clc
push
jl
pop
aaa
add
jo
in
sub
das
cmp
push
stos
cmpsb
xor
rcl
sti
ret
int
mov
jl
dec
imul
negb
ljmp
sahf
out
test
inc
shll
push
adc
stos
and
dec
xchg
int
pop
sbb
je
jmp
mov
les
ret
add
test
rclb
in
xchg
dec
mov
gs
out
jmp
popl
xchg
cmp
inc
jae
jge
xchg
shrl
mov
cli
cmp
mov
dec
add
test
popf
popa
ror
xchg
insl
fwait
lahf
adc
pushl
jl
outsl
cld
or
sbb
daa
test
fldenv
pop
iret
mov
cmp
pop
push
outsl
add
aaa
xor
int
mov
repz
pop
xchg
enter
push
lock
xor
xor
mov
aaa
popa
aas
mov
test
add
lods
mov
loopne
in
cmp
xchg
xor
je
add
fdivrl
roll
enter
cmpsl
je
movsb
push
aam
std
ss
pop
loope
pushf
divl
push
dec
push
sbb
adc
jl
sarl
pop
jnp
cmp
add
inc
jge
das
sahf
jecxz
jge
pop
xchg
mov
aad
xchg
mov
int
cmpl
jp
aam
mov
mov
xchg
mov
mov
xor
sti
inc
aad
jle
xor
dec
pop
mov
pusha
fucomp
inc
pushf
scas
sub
push
notl
adc
add
sti
sub
lahf
daa
stc
ficoml
xlat
or
sub
sbb
test
jecxz
sarb
pusha
arpl
sbb
jnp
and
mov
rcrb
notb
jo
adc
add
cmovs
inc
cmc
aas
adc
mov
ss
call
test
and
jmp
xchg
cmp
mov
aam
adcb
lds
jno
mov
adc
fs
push
xor
sbb
std
cmp
sub
je
insl
fnstenv
inc
push
loope
and
sti
pop
push
add
mov
bound
iret
mov
sbb
dec
jb
xor
add
icebp
cwtl
cld
lods
repnz
pop
bound
lea
or
inc
jae
loope
push
lea
push
leave
scas
cmc
stos
mov
pop
call
inc
ja
in
mov
fwait
stc
imul
and
adc
stos
testb
iret
sbb
mov
imul
adc
scas
mov
loope
ret
ret
pop
leave
rclb
jns
dec
jnp
fstl
mov
shll
jbe
or
cmp
cmpsl
mov
mov
inc
sbb
pop
sub
aad
sbb
xchg
pop
and
pusha
sub
jne
push
adcl
mov
lock
lcall
or
insl
xchg
push
arpl
mov
test
popf
sti
and
mov
pushf
mov
loope
push
adc
aam
daa
cmp
inc
mov
xchg
into
daa
stc
fwait
jno
aad
xchg
mov
mov
mov
xor
cmpsb
or
xchg
xor
lret
xchg
mov
mov
mov
clc
fcmove
lods
inc
pusha
outsb
movsb
mov
mov
arpl
cwtl
push
cmp
xor
cmp
or
test
test
or
pop
xor
mov
or
lods
arpl
dec
nop
add
je
sbb
scas
adc
idivl
push
shll
movsb
jl
jle
sbb
fistps
pop
daa
clc
out
test
push
in
add
and
jb
jle
fdivrp
jmp
dec
cld
daa
xor
add
inc
cmp
rclb
push
ja
push
add
mov
imul
icebp
pop
adcl
jl
lds
je
cli
jnp
mov
or
and
repnz
insl
or
addl
fistpll
out
js
xchg
std
insl
popf
dec
das
xor
mov
mov
ret
mov
addr16
xlat
ret
into
stos
xchg
mov
ja
in
inc
insl
inc
into
adc
movsl
cli
and
outsb
flds
sbb
xchg
mov
lret
dec
cwtl
insl
xchg
inc
test
mov
cld
int3
mov
mov
mov
add
fnsave
mov
push
cmp
lods
push
mov
mov
xchg
sti
fs
sti
add
mull
subl
cld
add
jo
daa
or
and
stc
dec
push
xchg
or
sub
ret
add
adc
shll
sub
pop
mov
in
flds
cmp
dec
push
shll
adc
dec
imul
outsb
push
mov
cmp
sbb
hlt
push
mov
in
mov
mov
sbb
daa
cmp
xchg
mov
scas
test
inc
inc
je
push
add
xlat
fs
mov
adc
outsl
jnp
ret
push
aaa
mov
out
mov
js
rcll
sbb
pop
xchg
sub
iret
push
cmp
push
or
repnz
dec
cmp
cmpsl
sbb
mov
sub
pop
sbb
pop
inc
sbb
mov
jle
or
imul
lcall
sbb
or
int3
int
fsubrl
aaa
dec
and
mov
xchg
clc
aas
popa
cmc
out
cmc
aad
dec
mov
sbb
pop
js
test
xchg
into
je
movsl
popf
daa
pop
jbe
cld
or
cli
sar
lods
push
push
push
jnp
push
outsb
jle
scas
insl
pop
ret
inc
sti
and
jmp
xor
inc
ja
lahf
jnp
inc
ret
jns
or
xchg
push
das
and
outsb
arpl
orl
xchg
sbb
and
sub
adc
add
addl
cmpb
pop
xor
mov
sbb
pop
add
out
rolb
jo
jg
jno
inc
in
data16
push
fsubrl
add
daa
icebp
daa
pop
or
divb
filds
adc
push
push
pop
pop
push
lods
xchg
push
or
jns
stc
mov
pop
inc
mov
pusha
aaa
ficoms
je
testl
aaa
notl
and
cmc
or
pop
xor
pop
sub
mov
and
shr
add
push
pop
cmp
push
ret
sti
xchg
add
pop
repnz
inc
addr16
and
sub
jg
cmp
and
xor
push
fnstcw
movsl
aad
shl
jl
sti
lods
inc
fwait
out
das
adc
pop
int3
out
scas
xchg
jmp
pushl
imul
in
fbstp
leave
dec
jno
pop
cltd
push
xor
dec
cli
icebp
pop
icebp
xor
fwait
mov
jb
jb
in
fcomps
add
sub
mov
es
shll
lods
or
ror
and
insb
shll
aaa
inc
pop
sbb
sub
mov
mov
in
test
cmp
outsb
xchg
xor
lea
push
out
movsl
cmp
inc
mov
jmp
inc
or
mov
pop
mov
add
aad
xchg
gs
add
cmpsb
inc
dec
or
mov
je
mov
andl
insb
scas
popa
std
addr16
dec
out
sbb
jecxz
adc
mov
inc
iret
test
push
out
ja
add
pop
gs
pop
scas
hlt
cmp
fmull
and
popf
xor
xchg
std
and
sub
inc
dec
aam
daa
mov
mul
add
rcrb
rcrl
jnp
xchg
fistl
pop
aam
sahf
sbb
rcll
aas
orb
add
int
push
fs
pop
das
scas
jae
test
arpl
xchg
mov
push
pop
add
inc
and
insl
das
sahf
cmpsl
inc
push
xchg
popf
mov
and
enter
call
lret
pop
adc
mov
cmp
addl
dec
push
mov
in
pop
xchg
daa
xor
sub
mov
lret
mov
shlb
jbe
dec
lahf
mov
adc
lods
xchg
or
repnz
in
and
pop
dec
mov
lahf
in
loop
testl
fistpl
push
in
sbb
lods
lock
jecxz
repnz
and
movsb
stc
fcomi
xlat
clc
xor
les
into
inc
jge
rol
cmp
ljmp
jmp
clc
xchg
mov
aad
jb
sbb
cmp
or
sarl
mov
xor
mov
stos
jl
lret
scas
sub
scas
sti
lds
sbb
xchg
xchg
icebp
push
jnp
sbb
mov
xlat
jae
lock
sbb
or
push
ljmp
ret
inc
shl
aas
ja
pop
int3
outsb
push
insl
pop
jge
dec
testb
pop
sarb
jmp
bound
fucomi
bound
mov
inc
ljmpw
bound
xor
push
xor
fidivrl
shlb
xchg
repnz
xor
dec
add
pop
rcll
xor
das
inc
push
sub
lret
jns
mov
das
pop
xchg
lret
arpl
push
fadds
mov
mov
push
enter
imul
enter
rorb
shrl
mov
mov
jge
jp
fcoml
xchg
dec
mov
les
shlb
test
jb
cmp
push
rclb
cmp
push
sub
in
hlt
sar
mov
into
xlat
sub
lahf
pop
sbb
pusha
stos
imul
pushf
rclb
pop
lods
addr16
test
xor
loope
faddl
std
mov
insl
ja
add
pop
lea
stos
xor
push
lahf
lret
out
outsl
inc
imul
imul
ret
dec
mov
push
add
ja
shlb
in
and
jo
cmp
mov
scas
popf
ja
push
loop
rclb
lahf
push
mov
fistpl
and
xor
dec
mov
decl
lret
rclb
insb
jbe
cmp
mov
jl
in
dec
scas
push
sub
sub
mov
jecxz
out
stos
inc
sub
push
aas
mov
sbbl
xor
hlt
int
pop
repz
fidivrl
iret
mov
mov
lret
dec
movsb
popa
ljmp
stc
imul
shlb
xor
scas
xlat
sbb
xor
mov
rorb
andl
mov
daa
jns
adc
mov
add
or
push
pop
pusha
mov
push
bound
das
mov
hlt
mov
std
hlt
pop
rclb
addr16
push
ret
sub
shr
add
lods
push
fwait
rcll
cmp
and
xchg
jae
jecxz
sbb
mov
and
inc
scas
fucom
dec
test
mov
clc
push
sbb
movsb
in
roll
xchg
pop
icebp
pushf
jnp
adc
pop
call
adc
jbe
jmp
testl
aad
add
pop
stc
dec
dec
cmp
out
stos
xchg
add
imul
sbb
imul
push
sbb
xchg
jno
cmp
es
mov
lods
jae
cmp
clc
rcll
imul
or
movsl
pop
arpl
aaa
mov
inc
xlat
pop
or
and
adc
pop
in
cwtl
das
out
mov
or
jns
lret
repnz
mov
sti
inc
add
and
mov
inc
sub
aam
dec
lahf
and
push
push
sub
int
jno
push
aas
sub
cmp
xchg
call
dec
mov
data16
push
xor
test
lret
leave
sub
dec
rclb
addb
subl
mov
mov
mov
pop
outsb
or
aaa
mov
dec
sub
fstl
int3
adc
sbb
jmp
cwtl
cmpsb
add
shlb
test
jb
arpl
inc
lret
add
loop
cwtl
in
js
cmp
mov
mov
dec
aas
repnz
mov
rolb
push
out
shr
mov
je
lea
sbb
jp
push
push
nop
mov
xor
or
mov
dec
ret
scas
fwait
mov
loope
pop
or
bound
xor
mov
leave
push
sbb
xlat
iret
and
fcompp
jmp
movl
jl
pop
fadds
xchg
dec
xor
mov
fildll
push
mov
jge
add
xlat
adc
rolb
ret
aas
and
jae
mov
lcall
adcl
movsl
add
ds
iret
mov
cmpb
out
sbb
popf
jnp
jle
int
push
sub
push
repz
rolb
cmc
cmp
jno
test
stos
int3
mov
fstpl
pop
adc
fs
rolb
dec
mov
adc
push
and
lret
mov
paddq
push
and
in
mov
inc
xorb
adc
divl
sets
ret
ret
push
push
and
shl
int
adc
ljmp
test
add
push
in
cwtl
rolb
test
test
cmp
jbe
ss
lcall
in
cmp
fcompl
push
sbb
push
xchg
aad
sar
shl
or
sbb
push
pop
jge
push
sub
add
scas
gs
stc
xchg
test
and
mov
lret
mov
mov
jno
hlt
rorl
pop
enter
dec
nop
test
xchg
repz
das
xchg
prefetch
pusha
lret
mov
adc
pop
jns
cmp
push
sub
cmp
out
testb
cmpsl
inc
leave
bound
mov
jnp
mov
inc
std
or
and
mov
lds
push
imul
jnp
rorl
pop
jmp
jge
sub
aad
mov
push
stos
movsb
lcall
pop
jle
xchg
enter
imulb
mov
mov
or
daa
js
and
je
cs
out
idiv
dec
in
mov
and
cmp
mov
scas
addr16
sub
and
and
pop
cmpb
xor
jle
daa
mov
mov
mov
dec
cld
sbb
bts
outsl
adc
ss
add
push
sahf
enter
push
push
icebp
dec
cmp
mov
xchg
push
jg
out
out
data16
sarl
push
test
dec
cld
mov
and
adc
xor
push
iret
jge
imul
cli
and
decb
mov
bound
mov
jg
lods
test
add
hlt
rclb
ja
nop
sti
fwait
test
inc
outsl
dec
shrb
or
out
fwait
lock
insb
xchg
fistpl
xlat
dec
pop
mov
jle
repnz
fwait
nop
adc
arpl
or
cmpsb
cmc
movsl
mov
inc
aas
jo
aas
sarl
xchg
popa
or
loop
or
movsl
sahf
test
mov
pop
pushf
pop
test
sbbl
inc
into
and
iret
int3
mov
xchg
jp
cs
xchg
cmp
add
mov
xchg
add
add
pop
jnp
iret
jo
sbb
pop
adc
or
or
and
mov
mov
fidivs
into
ret
jl
add
mov
and
fnstcw
cmp
mov
jb
repnz
xchg
mov
adc
ds
mov
sbb
cmpb
inc
mov
popa
add
dec
mov
cltd
sbb
push
call
pop
dec
lret
je
sti
insb
adc
loopne
jg
pop
push
cmpsb
outsl
mov
inc
xchg
xchg
test
call
xor
inc
and
pop
sbb
test
adc
cmpsl
stos
push
add
out
cmp
inc
inc
xor
out
dec
in
mov
sub
xor
mov
sbb
mov
pop
xor
fisttpll
mov
loop
js
stos
dec
xchg
in
inc
sbb
mov
lahf
sub
outsb
push
pop
jnp
jo
bndstx
testl
sub
adc
orl
in
push
push
call
pop
stos
mov
push
push
out
add
test
cmp
jmp
fcmovnbe
mov
inc
push
stos
mov
repnz
testb
push
mov
push
sub
arpl
scas
xchg
inc
jg
push
rorb
ljmp
scas
xor
cli
jmp
cmpsb
inc
aad
in
aad
je
imul
in
adc
mov
push
add
lods
out
push
push
mov
daa
je
mov
shlb
sub
push
mov
bound
jnp
ret
sub
inc
lock
push
sarl
jl
scas
jae
xlat
mov
mov
mov
jb
sahf
jecxz
dec
jne
sbb
std
cltd
pop
ret
push
sub
ficomps
adc
fstp
insl
xchg
sti
and
ficoms
mov
andb
mov
mov
inc
cli
inc
mov
cmpsl
std
andl
cs
insl
sahf
xchg
repz
sub
mov
mov
out
sbb
rcrb
xchg
cmpsb
xor
xor
jp
neg
test
sbbl
adc
cwtl
int
dec
imul
push
adc
nop
aas
loopne
mov
fisttpll
ja
fs
cmp
out
mov
and
xor
fnstcw
ficoml
imul
and
nop
nop
jl
lcall
adc
je
jns
adc
lock
jg
inc
push
inc
push
add
xchg
clc
test
je
lcall
outsb
loopne
movsb
add
scas
and
add
xor
out
emms
in
rcrl
dec
loopne
xchg
jo
sub
fildll
sub
cmpsl
cmp
repnz
loopne
add
mov
mov
lea
ljmp
sbb
mov
data16
gs
mov
aaa
inc
clc
sbb
cwtl
mov
fnstenv
mov
ljmp
sub
scas
pushf
ds
nop
ret
mov
aad
push
adc
fildl
mov
mov
pop
mov
pop
jge
add
sub
mov
fs
and
pop
fdivr
dec
es
adc
and
data16
pusha
std
mov
dec
jns
psrlw
js
aaa
into
ret
mov
stos
fsub
jmp
enter
jecxz
insl
out
xor
stc
jo
cmp
imul
test
cmp
pop
test
ret
loope
jecxz
lahf
sbb
in
push
inc
jns
mov
aaa
popf
ss
lahf
fsubs
xchg
jne
add
jbe
in
jmp
mov
adc
ljmp
jp
push
mov
xor
cmpsb
test
stos
push
cmp
pop
dec
aad
fs
mov
test
shll
das
cld
push
test
sti
enter
out
int3
xor
mov
add
fistl
sub
stos
inc
pop
xor
rcll
and
adc
int3
pop
xor
push
negl
mov
pop
adcl
jmp
add
lret
dec
outsb
pop
lock
fnstenv
push
addr16
insb
push
add
in
xor
inc
icebp
shll
jmp
cmovs
push
call
mov
je
loop
test
inc
mov
fucom
push
loope
mov
shl
gs
pop
jno
jl
push
xor
xlat
jno
pop
mov
aas
and
pushf
das
outsl
aaa
jge
cltd
in
adc
notl
adc
popa
mov
pop
xor
iret
je
push
outsl
push
jno
jb
sbb
dec
pop
fistpl
pop
and
jmp
push
inc
mov
frstor
repz
or
mov
push
sub
adc
sub
push
push
addr16
adc
dec
shrb
sti
mov
sbb
adc
jle
pusha
cmpsl
fstpt
push
push
std
xchg
mov
or
fdivl
xchg
out
sbb
fbstp
es
sub
adc
mov
sub
dec
inc
dec
xchg
push
or
inc
test
or
out
xchg
pop
cli
add
dec
jl
fadds
cmp
xchg
andb
fsubrs
int3
push
inc
outsb
sbb
xor
clc
sarl
jmp
or
xchg
addr16
cli
cmp
mov
cmpb
nop
in
adc
loope
mov
mov
int
cmp
push
cmpb
cmp
push
inc
mov
xchg
mov
push
and
sub
mov
inc
shll
pop
scas
mov
mov
sti
int
sbb
push
jb
loop
andb
inc
rclb
adc
test
or
inc
cmpsl
testb
loope
rclb
cmc
mov
repz
test
and
sbb
outsl
bound
shlb
sti
cmovge
mov
pop
xor
jmp
or
std
mov
push
enter
je
jg
sbb
xor
jmp
sbb
mov
movsl
fucomip
add
mov
sub
and
cmp
jns
dec
add
cmp
fwait
in
and
mov
and
mov
aas
lret
jne
js
mov
cmpsl
inc
and
lods
mov
add
dec
and
add
test
sti
mov
xor
inc
push
rcr
movsb
lret
outsl
mov
add
negl
or
push
pop
je
orl
in
pop
gs
adc
cmpsb
push
loopne
mov
add
xchg
fnstenv
or
inc
fcom
xor
std
movsb
scas
subl
mov
jo
sbb
psllw
cmc
rcrl
push
shlb
rol
inc
subb
sub
loopne
dec
xlat
cli
popf
ds
cmpsl
sub
fistps
sbb
popf
ljmp
arpl
push
loop
hlt
lahf
sbb
addr16
insb
loope
lea
xchg
test
movsl
out
insl
orl
mov
dec
insb
adc
mov
out
std
xchg
push
or
xor
or
push
lea
mov
in
jp
inc
cmp
aad
leave
xor
push
xchg
int
in
pop
adc
lods
insl
clc
movsb
mov
dec
sub
in
mov
sub
mov
xchg
mov
pop
xor
les
lret
xor
jecxz
xor
jl
int3
pop
push
lods
cmp
xor
outsl
pop
adc
pop
push
mov
lahf
and
jne
push
xor
push
movsl
pop
add
repnz
xchg
int3
dec
mov
xchg
xchg
bound
pop
pop
and
test
cwtl
daa
adc
cs
in
hlt
or
and
dec
insb
push
push
adc
ror
ja
test
insl
cmp
rorb
pop
mov
adc
stos
inc
pushf
push
std
dec
and
loop
mov
ret
mov
movsb
sub
inc
adc
into
lds
fwait
gs
mov
adc
in
mov
push
inc
mov
cmpsl
push
sbb
scas
loop
cmp
les
movsb
icebp
jle
or
cs
mov
out
iret
pop
out
cmc
cli
xor
mov
lcall
imul
sub
dec
movsl
cli
and
out
jge
std
stos
fnstsw
and
jbe
sub
faddl
imul
nop
pop
popa
dec
ficompl
testw
jl
ss
stos
aad
fldl
addr16
mov
and
fdivr
stos
inc
sbb
adc
popf
mov
iret
inc
sub
adc
and
mov
mov
jb
mov
xchg
jg
xchg
pusha
fwait
xchg
mov
adc
mov
jo
pop
sbb
sbb
add
andl
out
and
jae
xor
sub
pop
test
mov
call
xchg
test
addr16
aam
pop
cmp
inc
out
mov
in
add
bound
xor
add
out
pop
popa
mov
xor
xchg
adc
arpl
inc
das
cmp
in
xor
fs
mov
push
fnsave
ja
pusha
jl
movsb
fwait
stc
out
push
out
pop
dec
sar
sub
ljmp
shrd
inc
ljmp
xchg
pop
mov
test
mov
cmpsl
adc
iret
sub
add
push
dec
and
xchg
shll
jae
jmp
fwait
or
add
fwait
roll
cmpsb
ret
cli
sbb
xor
push
out
inc
pusha
imul
push
ljmp
pop
lret
subl
sub
mov
pop
stc
push
or
pop
out
or
pushf
mov
in
add
out
aam
and
jp
das
cmpxchg
sub
mov
loope
pop
les
inc
fisttpll
inc
jmp
dec
pop
fistpl
jnp
aad
not
not
inc
rorb
mov
sti
loopne
xor
sbb
mov
push
mov
cmp
inc
aaa
xor
inc
cli
adc
xor
je
dec
xchg
loop
movsl
scas
mov
sbb
xor
pop
mov
pop
arpl
pop
scas
cwtl
arpl
xchg
inc
or
push
dec
clc
cmp
sbb
pushf
push
roll
popf
cmp
popf
adc
sbb
fdivl
jno
ret
movb
jl
sub
sbb
insb
cmp
dec
sub
test
outsb
popa
or
ret
cmpsb
xor
jmp
or
dec
mov
mov
lret
imul
or
jo
js
push
jle
mov
aam
push
jl
fcomi
sbb
movsl
sub
decb
xor
lods
mov
in
mov
std
inc
lret
cmpsl
dec
and
cmp
out
cmp
sarb
mov
sti
sbb
sub
xchg
sbb
push
cmp
lret
leave
mov
dec
push
stos
push
je
jb
sub
loop
adc
pushf
inc
in
test
fs
popf
mov
push
jbe
popa
mov
mov
push
pusha
fldt
jge
xor
or
lea
repnz
fst
jge
xor
push
push
or
mov
inc
inc
push
pop
mov
ds
sbb
dec
das
lea
cmp
jmp
sbb
addr16
ja
pop
and
adc
pop
out
xor
lcall
and
lahf
dec
outsl
roll
cmp
das
push
out
jl
andl
inc
arpl
mov
das
fs
push
and
jbe
aaa
inc
mov
xchg
loop
imul
je
adc
pop
cmpsb
xchg
mov
pop
roll
xchg
imul
lcall
addr16
lds
fcmove
aad
incb
jge
mov
mov
fisttpl
xor
inc
inc
mov
pop
dec
mov
cmpb
test
jp
add
adc
lret
sub
pop
jo
int3
in
mov
cmp
fwait
mov
inc
lds
cmp
das
shl
sbb
mov
daa
sbb
js
jno
js
add
and
push
je
cld
sub
mov
adc
xchg
mov
test
mov
repnz
popa
mov
or
and
inc
imul
inc
or
cmp
mov
jp
mov
test
mov
xor
cmpsb
xchg
and
mov
cmp
sti
mov
push
test
insl
leave
xor
insb
push
subl
pop
lods
filds
dec
test
loopne
and
push
mov
jbe
pop
icebp
push
enter
fidivs
outsl
cltd
sbb
xor
mov
sbb
adc
loope
dec
hlt
or
add
fstp
cltd
stc
test
xor
jmp
add
aaa
fisubrl
dec
and
jl
adc
xor
cmp
outsl
xchg
or
pushl
push
sbb
sbb
lcall
nop
adc
insl
aad
popf
or
and
rol
xor
xchg
dec
ja
jge
shll
xchg
popa
jo
push
gs
or
sbb
leave
popf
xchg
ret
inc
or
popf
mov
cmc
into
ret
inc
mov
scas
in
add
mov
outsb
mov
adc
push
push
stos
jnp
or
lock
lock
ljmp
clc
out
dec
mov
in
mov
ds
pop
loopne
jl
dec
adc
mov
or
cmp
jb
pop
pop
lret
ret
or
mov
sbb
subb
in
cmp
push
jnp
pop
les
test
jns
bound
ret
mov
bound
enter
jo
jecxz
into
mov
mov
gs
out
test
in
inc
in
pop
add
dec
xchg
cmp
scas
arpl
lahf
push
jbe
fnsave
inc
lcall
and
sub
out
popa
jbe
xor
push
mov
cmpsb
out
out
mov
fcoml
jne
cmp
lret
mov
push
hlt
mov
xor
cmp
arpl
dec
repz
icebp
inc
and
xchg
cld
lods
ljmp
lods
push
movsb
fwait
and
into
ret
outsb
xlat
sbb
dec
les
daa
xor
and
mov
pop
clc
pusha
and
xchg
inc
inc
jne
js
rcr
push
add
ss
cmpsl
lcall
fst
sub
push
sub
pop
cltd
pushl
icebp
rorb
mov
enter
sub
sbb
jbe
ja
cmp
sbb
mov
mov
arpl
xor
loope
rcr
pop
adc
xor
rcrb
jle
movsl
outsb
dec
xchg
lods
add
xor
xor
mov
scas
pop
jb
pop
testb
js
popf
aas
sub
test
inc
sub
xchg
std
xchg
and
xchg
stos
jp
dec
add
xchg
fdivr
push
mov
insl
popa
jnp
stos
dec
dec
jae
bnd
in
icebp
ss
xor
inc
push
pop
mov
xchg
mov
out
in
jge
idivl
sub
xor
outsl
repz
mov
jb
dec
daa
mov
push
loope
leave
addb
ljmp
dec
and
cmpsl
mov
and
push
rclb
cmpsl
shr
mull
sbb
adc
sbb
ds
stc
cmpsl
mov
jae
aas
jnp
mov
dec
movsl
and
lock
xchg
jl
movsb
mov
push
daa
add
popf
movsl
jge
jbe
adc
mov
mov
outsb
adc
push
mov
xchg
imul
nop
mov
push
sbb
sub
dec
cmp
cld
cwtl
jb
inc
subb
adc
sub
imul
mov
dec
push
jne
test
push
cmp
pop
clc
sbb
dec
push
sti
inc
mov
sbbl
je
adc
iret
shr
adc
or
aaa
mov
jle
sbb
in
or
rcll
adcl
push
aaa
ret
daa
dec
ja
mov
icebp
or
sub
jno
dec
ja
mov
push
mov
dec
adc
sub
add
lods
or
pusha
jb
aam
push
scas
sbb
andl
mov
in
or
les
mov
ja
pop
xorb
jmp
imul
ja
cmpsb
push
mov
loopne
fwait
icebp
sub
pop
push
add
fs
cmpl
call
jne
and
iret
testl
push
pusha
jbe
xchg
ret
data16
loopne
cmp
fbstp
push
jno
dec
scas
xor
in
add
sbb
neg
inc
push
nop
lea
addr16
jg
ret
test
cmp
inc
jl
mov
call
add
jae
and
jle
pop
xchg
adc
loop
inc
mov
mov
add
add
inc
jo
out
xor
jecxz
inc
push
aaa
andl
sbb
loopne
icebp
mov
lea
cwtl
xchg
es
mov
loopne
ret
mov
js
dec
nop
fstp
popa
aas
filds
sarb
push
aam
imul
push
in
xchg
fadds
or
adc
or
or
pop
cmp
sub
and
xchg
out
pusha
sub
adc
sbb
lret
mov
sbb
push
insb
scas
in
loope
pop
sub
mov
xor
add
popf
std
jae
inc
test
mov
int
fs
dec
jl
bnd
mov
incl
push
fdivl
xor
aas
xchg
mov
pop
dec
pop
jecxz
xchg
repnz
cltd
jb
test
push
jns
subl
in
bound
push
mov
xor
cmp
xchg
push
mov
push
sub
out
xchg
cmpsl
fisttps
loop
lea
test
adc
out
xor
jbe
push
popl
jns
sbb
add
lret
fs
xchg
sub
pop
jge
mov
aad
jg
repnz
lea
push
pop
mov
lret
aam
dec
mov
repnz
adc
jo
std
loop
mov
mov
mov
ss
divl
push
int
loope
cmpsb
mov
push
mov
adc
xchg
and
add
out
cmp
repz
mov
xchg
xor
fwait
in
dec
and
pop
hlt
pop
xchg
gs
or
push
mov
daa
gs
adc
addr16
xor
xchg
and
inc
mov
loope
fisttpll
ret
int
pop
scas
push
or
xor
ss
adc
in
int
lods
fcmove
cmp
pop
sahf
sbb
cmpsl
pop
imul
adc
push
xchg
lods
lock
rorl
out
sbb
xchg
outsb
outsb
mov
stc
outsl
adc
aaa
fsts
scas
iret
sub
in
jge
pop
call
mov
inc
fadds
aad
pusha
aad
out
mov
or
cmp
stos
xchg
push
adc
lea
repz
in
out
mov
lret
ret
or
lahf
xlat
inc
push
cmp
pop
outsl
push
in
stos
xchg
jge
mov
nop
pop
ss
loop
rcll
scas
pop
mov
rcrb
mov
enter
jmp
cmpsb
out
push
in
mov
sbb
cmp
jp
xor
fisttpl
clc
inc
hlt
mov
out
jne
push
push
lahf
in
fbld
jl
mov
pop
pop
mov
sub
int
adc
sbb
lods
dec
popa
sbb
and
xchg
movsl
xor
lds
sar
sti
aad
cs
popa
nop
adc
mov
push
lock
push
clc
shl
push
inc
dec
stos
ljmp
scas
jle
cmp
mov
repnz
inc
jae
insb
adc
add
lcall
or
insl
xor
bound
int3
jne
shl
push
fimuls
aad
inc
cld
cli
inc
cs
fs
xchg
mov
out
push
or
jbe
adc
inc
adc
es
jl
inc
lock
shrb
cmp
fcmove
pop
lds
ja
dec
call
cmp
jbe
dec
or
jle
imul
outsl
nop
out
stc
push
sbb
sub
popf
aam
bound
and
cmpsl
test
xchg
add
arpl
push
mov
loopne
or
mov
push
mov
push
popl
pop
push
cmp
dec
dec
mov
js
loopne
aas
cmp
repz
in
repz
iret
push
sub
es
into
sahf
repz
mov
jg
cmp
mov
jo
pusha
sbb
scas
push
push
call
cmp
test
xchg
or
push
mov
pop
xor
push
sti
inc
jmp
cltd
shll
mov
inc
hlt
sbb
aam
adc
mov
jmp
sub
fiaddl
mov
mov
dec
clc
dec
fisubrl
cld
mov
mov
psubq
jmp
ss
mov
icebp
aaa
mov
fwait
push
mov
shr
push
inc
xlat
cmp
test
stc
ja
addr16
call
mov
rclb
hlt
inc
xor
sbb
jp
int3
hlt
loopne
stc
stos
sub
sbb
pop
adc
mov
sub
pop
or
ljmp
sub
pop
test
fsubrs
mov
jp
jl
arpl
out
pop
lret
das
jle
nop
pop
mov
xchg
cld
add
scas
jp
repnz
inc
and
call
lock
fdivrp
adc
lret
outsl
inc
xchg
movsb
fdivl
pop
dec
rolb
sbb
jg
daa
lret
adc
pop
pop
stos
jns
push
or
movsl
ficompl
dec
xchg
icebp
cmpl
sbbb
or
out
pop
xchg
aad
push
mov
scas
mov
dec
mov
cmp
loope
icebp
mov
push
orl
or
ret
pop
lods
push
adc
rep
into
xchg
loop
xchg
pusha
and
jle
aaa
mov
xchg
aaa
or
test
mov
dec
mov
adc
jae
push
xlat
add
out
shrl
call
pop
insb
aam
iret
mov
mov
out
mov
mov
insl
cwtl
lret
insl
jmp
mov
jne
and
jne
mov
in
sti
pop
fdivrl
in
aaa
push
aam
and
pop
lock
ljmp
subl
das
cmp
jbe
jge
jecxz
test
inc
fdiv
aam
sub
xor
cmp
data16
jmp
dec
cmp
and
std
cwtl
jb
popf
fbld
add
incl
jmp
les
ret
add
xlat
push
arpl
inc
xchg
fsts
pop
in
sti
shrb
aas
pop
sub
sbb
mov
sub
mov
test
cmp
sub
jp
adc
aad
mov
jecxz
lods
dec
jg
or
jl
pop
test
mov
and
adc
scas
mov
insl
add
and
mov
xchg
mov
movsb
mov
pop
leave
cmp
sub
jge
out
movsb
cmpsb
cmp
jae
and
mov
dec
jl
orl
mov
es
repz
xchg
sbb
push
repz
mov
add
jmp
jg
jecxz
insl
fs
cld
aad
nop
notb
cmp
push
pop
push
dec
pop
pop
testb
scas
sub
dec
sub
aad
jecxz
cmp
add
les
cmp
rol
mov
data16
in
in
pop
in
add
imul
sub
out
jns
or
jnp
in
sub
in
and
dec
adc
xchg
cltd
cwtl
jg
in
adc
shrb
les
icebp
aaa
push
jge
mov
loop
cmpl
jne
fs
cli
movsb
fsubrl
cmp
imul
push
loopne
rorb
inc
test
test
pop
lock
inc
mov
rcr
scas
in
into
test
aad
shll
fadds
mov
and
mov
fsubrs
les
pop
adc
sub
pop
js
xchg
or
inc
leave
fucomi
call
or
testl
jnp
pop
inc
movsl
sub
negb
mov
inc
mov
imul
sbb
aam
sti
add
or
dec
insl
repz
ja
shrl
push
test
cltd
jle
imul
mov
les
fdivrs
sti
sbbb
pop
and
arpl
push
into
inc
iret
pop
nop
pop
lcall
imul
jbe
fidivl
cmp
push
out
jo
jge
mov
data16
mov
adc
stos
cmpsl
mov
sbbb
add
pop
adc
pop
jg
out
inc
cltd
inc
sbb
push
in
sub
xchg
mov
mov
cwtl
jae
pushf
inc
xchg
popf
xchg
sub
ret
sbbb
out
jno
or
inc
mov
add
mov
test
push
jl
cmpb
jmp
push
push
outsl
cmc
mov
sub
mov
jmp
notl
lret
push
inc
cli
adc
push
inc
jne
inc
mov
sahf
test
in
sub
loopne
out
aas
popa
addr16
mov
pop
movsb
loope
outsb
mov
lock
xchg
push
dec
scas
hlt
pop
aas
std
lds
push
adc
mov
mov
fstpl
jno
cmp
inc
cld
lods
lret
inc
jbe,pn
add
clc
dec
sbb
ss
inc
mov
xchg
sti
adc
xor
cmp
pop
aad
dec
popa
test
or
psllw
ss
xchg
outsb
js
mov
or
inc
mov
inc
fcmove
and
int
cmpsl
xchg
inc
push
mov
pop
test
inc
clc
inc
inc
fidivrs
push
int3
dec
pusha
into
push
into
scas
pop
cmp
rol
adc
iret
orb
cmp
add
xor
pushf
or
bound
outsb
out
scas
addr16
out
jns
sub
test
fisttpl
sbb
mov
dec
cmp
loopne
mov
imull
jns
nop
sbb
mov
mov
xor
arpl
rclb
popa
xor
ds
sub
cld
aam
testb
pop
rcrb
jae
push
out
nop
std
roll
rclb
shll
inc
push
jb
add
clc
shr
dec
lahf
loope
mov
pop
dec
std
mov
imul
fldcw
push
xchg
xchg
scas
push
out
mov
jmp
sbb
mov
testb
das
cmp
ljmp
pop
test
xlat
jb
aas
loopne
arpl
pop
add
das
dec
icebp
loopne
dec
adc
fldt
hlt
ret
in
mov
fsubrs
lret
adc
jns
jp
rorl
xchg
adc
lock
or
lock
cmp
std
notl
insl
mov
andl
push
jb
rcll
jbe
pop
sbb
xor
loopne
jae
sbb
dec
pop
jp
nop
out
js
int
mov
ret
movsl
repz
dec
inc
xchg
fiadds
mov
mov
pop
fisttpll
mov
sbb
andb
pop
mov
sbb
xor
lea
loope
or
hlt
sub
mov
push
lret
mov
fwait
scas
cs
sbb
pop
xorl
lahf
mov
xor
adc
adc
mov
shlb
jg
adc
add
push
in
cmp
sub
movsl
in
loopne
aad
movsl
jmp
shlb
nop
popa
leave
gs
inc
or
stc
jns
cmp
xchg
push
inc
push
and
in
adc
leave
add
negb
mov
sub
mov
or
xchg
push
xor
mov
jns
repnz
inc
es
xchg
and
aas
mov
ja
sbb
pop
daa
out
repz
ret
outsb
outsb
outsl
sub
das
scas
outsl
addr16
ss
cmp
addb
call
add
fnstsw
push
jmp
sub
sti
loope
insb
cs
mov
stos
jb
pop
loopne
cmp
xorb
adc
or
push
inc
push
xor
aas
add
es
repz
jg
adc
out
cmp
dec
pop
push
scas
repnz
push
cli
push
jnp
xchg
jmp
lahf
mov
rolb
pop
jns
in
jae
imul
and
loop
mov
jge
cld
pop
data16
test
adcl
mov
fnstenv
push
push
cmpsl
shlb
mov
dec
popa
push
jne
dec
inc
or
out
push
sub
pop
stos
scas
xor
or
stos
mov
movsb
jno
lret
or
sbb
or
out
inc
add
lods
inc
mov
sahf
or
mov
mov
stos
mov
scas
cmp
rcr
xchg
cmovs
adc
jp
rorb
ret
bnd
sti
rorl
lcall
pusha
sub
clc
pop
jae
out
mov
aam
in
cld
out
roll
jnp
shll
rorl
inc
sub
sub
bnd
enter
add
xor
adcl
sub
leave
cmp
or
rcrl
sbbb
mov
jne
sbb
pop
dec
dec
arpl
dec
add
mov
loop
jecxz
sub
imul
ficoms
inc
outsb
push
jns
and
mov
and
xchg
and
outsl
inc
clc
out
fldt
dec
adc
int3
add
aam
push
xor
decl
push
jo
notl
jecxz
dec
cmpsl
je
dec
mov
pop
push
shl
and
sbb
out
dec
jp
and
mov
aam
inc
repnz
shrl
add
mov
in
jbe
aas
lahf
lods
xor
jns
inc
fwait
shll
cmpsb
test
insb
add
or
cli
sbb
icebp
scas
sbb
mov
jge
testb
stc
adc
pop
loope
mov
movsb
lcall
lret
xchg
daa
jl
dec
jbe
xor
inc
jg
jecxz
or
mov
sarl
push
mov
pushf
inc
pop
dec
fmull
jae
fs
sub
cmp
or
push
rcrl
sbb
and
jp
lahf
aaa
fucomp
cmp
movb
add
sbb
arpl
mov
pop
sbb
dec
sti
dec
test
xor
push
or
mov
dec
or
xchg
sbb
or
adc
in
mov
sbb
roll
gs
pop
and
mov
fcmove
sub
pop
add
dec
mov
lds
add
or
inc
pop
ret
in
sub
push
push
jae
test
pop
aam
jae
loop
imul
cmpsl
bound
fldenv
cmp
imul
push
fstl
int
cmpsl
out
aam
int
xchg
inc
sub
xchg
lahf
push
pop
mov
mov
insl
inc
dec
jecxz
ljmp
ds
ds
sub
repz
xor
push
dec
popf
pop
push
xor
sbb
jecxz
dec
fstps
push
dec
jb
sbb
test
mov
inc
rorb
out
fs
inc
xchg
mov
lods
and
fisttps
movsl
cmpsl
lcall
test
adc
xor
aas
mov
rcrb
xchg
mov
fcom
xor
or
out
aad
sbb
fmull
popf
jo
rorb
dec
gs
int
sub
dec
dec
inc
fimull
fstpl
jb
std
mov
mov
xchg
jno
test
sub
cmp
shl
pop
xor
imulb
push
jb
mov
dec
iret
xchg
mov
sbb
jge
pshufw
and
stos
sub
mov
xchg
mov
cmc
std
mov
mov
jle
xor
rclb
lret
mov
xor
lock
cld
inc
sti
push
negl
inc
lods
and
xor
or
movsl
mov
dec
out
cwtl
int
pop
adcl
and
loope
ja
mov
or
scas
jbe
adc
subl
and
jae
sbb
jmp
jne
mov
leave
cmpsb
clc
popa
mov
and
call
js
out
pop
imul
ja
adc
mov
adc
por
fnstsw
bnd
add
sub
inc
jnp
mov
fsubrl
out
sub
enter
les
fistl
adc
push
iret
divl
cwtl
add
add
pop
push
mov
andb
push
inc
loop
jl
add
movsb
or
dec
out
arpl
pop
cltd
test
pop
dec
mov
imul
or
jbe
leave
sbb
int3
int3
xchg
xor
addr16
call
mov
dec
mov
insl
loopne
out
aad
adc
pusha
jae
addl
mov
inc
les
mov
mov
mov
pop
sahf
cmp
ja
xchg
pop
cmp
inc
add
fcompl
add
movsl
insl
jnp
out
clc
inc
cmp
or
cmpsb
fsubs
push
sub
inc
mov
cwtl
insb
or
push
pop
ss
movsb
sbb
mov
and
jmp
push
testb
mov
xchg
pop
stc
inc
rcl
addr16
and
rol
popa
and
pop
sbb
and
je
enter
enter
hlt
imul
pop
push
aam
push
jecxz
das
cmp
imul
mov
xchg
jge
nop
xchg
push
pusha
loop
int3
mov
outsb
imulb
inc
icebp
or
mov
les
cltd
cmc
adc
ja
incb
push
and
lods
pushf
add
xor
arpl
mov
inc
das
push
fistps
cs
test
pop
push
stos
insl
xchg
jmp
add
adc
mov
aas
ret
xchg
test
mov
icebp
add
lods
cmp
jmp
and
adc
out
mov
in
stc
jne
out
in
pop
mov
loope
test
repnz
nop
jecxz
and
and
jns
mov
ds
jne
xor
cltd
iret
adc
fdivrl
mov
mov
sti
and
xchg
ficomps
and
xor
in
or
gs
xchg
ret
sbb
pop
and
movsl
mov
xor
sbb
xor
in
adc
fdiv
clc
sbb
ss
clc
cmpsb
push
test
fprem1
cmp
movsb
xor
jmp
sbb
mov
sub
jg
dec
push
aas
sbb
cmp
stos
push
das
inc
xchg
stos
dec
test
out
cli
cmc
fwait
imul
xlat
fisttpl
or
call
loopne
out
test
push
push
out
test
adc
int
sub
or
sub
inc
push
pop
sub
push
mov
jmp
in
xor
mull
subb
sub
xchg
out
cld
dec
xchg
cmp
dec
das
mov
mov
imul
inc
fs
sti
iret
jae
cmp
jle
cmp
mov
and
xchg
flds
push
xor
mov
fimull
sbb
adc
popf
insb
and
lock
test
fdivs
xor
leave
adc
ss
xchg
push
roll
ljmp
or
ja
xchg
fildll
mov
pusha
loop
jg
inc
inc
adc
xchg
push
push
mov
inc
sbb
shll
pop
jmp
xor
jns
les
jae
push
enter
and
pushf
xor
mov
mull
mov
sub
sarl
mov
dec
jns
push
rorl
hlt
loopne
push
and
xor
out
insl
adc
icebp
les
sbb
or
int
sbb
out
mov
pop
jb
ret
movsl
notl
mov
push
ja
cmp
xlat
fdivrs
and
inc
scas
das
sti
aas
rcrl
mov
ret
jmp
loope
jl
lods
out
xchg
popf
jnp
loop
in
test
pushf
ja
dec
adc
mov
shll
jmp
sub
lea
js
inc
rol
or
dec
stos
sbb
mov
adc
es
test
negb
cwtl
pop
adc
das
mov
and
jne
lock
aad
xchg
in
jecxz
jbe
in
push
fbstp
pop
mov
rcl
lahf
xor
xlat
clc
das
xchg
push
cmc
dec
cld
js
adc
ja
xor
xor
cld
cmp
pop
mov
or
nop
fcoml
fwait
clc
jl
popf
sub
jge
shll
pop
inc
mov
xor
inc
nop
mov
ljmp
and
into
push
aas
outsb
push
lret
mov
imul
cmc
or
xor
es
mov
mov
mov
dec
pushf
dec
popf
stc
xor
aad
lods
hlt
jp
sbb
jp
es
push
cmpsb
mov
push
scas
movsl
cmp
or
lds
jecxz
sbb
dec
inc
sub
or
cmp
hlt
in
das
cwtl
repnz
lret
hlt
jle
hlt
in
pop
pop
pop
and
jbe
sbb
adc
lcall
cmpb
mov
xchg
out
fs
ret
fbld
adcb
cmp
inc
iret
shlb
mov
data16
jnp
scas
xchg
mov
fwait
push
pop
bound
mov
aaa
or
xchg
inc
or
fiadds
xor
pop
pop
lods
jbe
lret
adc
in
out
roll
inc
sbb
negb
bound
push
rclb
sbb
jmp
insl
and
test
cmp
js
jb
adc
repz
insl
sbb
mov
add
xchg
mov
push
scas
jbe
and
xchg
mov
mov
or
add
daa
push
loope
cmp
push
adc
push
pop
test
sub
xchg
sti
and
xchg
sub
mov
xor
mov
cmc
sub
add
fildl
jns
jg
mov
aad
repnz
ret
jae
or
or
jecxz
xor
jmp
notl
lcall
jge
mov
push
mov
scas
imul
or
dec
fs
push
push
pop
sub
sbb
dec
lds
dec
cli
clc
std
sub
test
or
jo
je
inc
bound
add
cmp
sub
push
imul
cmp
inc
mov
divb
ja
jno
jno
xor
jg
jmp
push
inc
inc
pop
jge
sbb
mov
test
cmp
xchg
sub
or
je
and
mov
push
xchg
and
xor
sbb
add
flds
lock
mov
pushf
mov
les
out
rol
mov
test
in
and
pop
cmp
and
out
sarl
gs
sbb
lret
jb
mov
pop
mov
sbb
or
add
inc
add
mov
lock
test
rorl
in
pop
sbbb
mov
push
inc
pop
hlt
mov
pop
add
sbb
mov
fwait
insb
repz
adc
mov
jo
or
out
nop
push
iret
rolb
in
out
add
dec
pop
cmp
jns
fcom
lock
cmc
pop
pop
jnp
pop
sub
outsb
and
data16
test
pushf
push
xor
dec
dec
dec
jns
scas
je
in
lahf
and
mov
jae
push
cmpsl
loop
call
std
shl
scas
or
scas
cmp
sub
call
fimuls
inc
cmp
sbb
je
cs
into
mov
lea
shl
dec
jbe
mov
cwtl
daa
loopne
andb
insl
sbb
sbb
dec
pop
cltd
enter
aad
add
mov
in
test
xchg
pop
clc
inc
in
aam
or
push
sub
sub
jecxz
aad
mov
add
mov
mulb
mov
pop
cmp
dec
mov
mov
sahf
sahf
jge
lahf
cmp
ret
testl
mov
pop
mov
fmull
ljmp
dec
add
imul
or
in
dec
mov
lcall
sbb
xlat
or
pusha
inc
pusha
test
outsl
mov
loop
repz
mov
jmp
mov
ret
sbb
xchg
pushf
xor
fsubl
lahf
es
scas
xchg
into
push
in
dec
ds
into
sbb
in
cli
pop
test
loop
jle
mov
orl
sbb
mov
in
test
rol
clc
xchg
jb
mov
sub
pop
dec
cmp
adc
dec
cmp
mov
jne
lods
in
jp
mov
sbb
mov
dec
sti
mov
dec
add
jbe
xlat
jnp
rol
test
lods
sub
int3
loop
test
inc
popf
jg
jp
pop
or
pusha
dec
push
repnz
xor
push
bound
cmp
ss
jns
inc
adc
sbb
scas
mov
gs
fldt
ljmp
lcall
je
cmp
sahf
xchg
sub
clc
adcl
and
mov
inc
notl
pushf
mov
xchg
shll
loope
scas
and
sbb
lock
mov
pushf
sub
in
or
mov
mov
testb
push
lret
sti
sbb
aaa
inc
add
sti
fs
and
sub
inc
cmc
mov
out
mov
int3
jb
pop
and
movups
or
mov
dec
out
imul
jno,pn
test
pop
or
sub
pop
outsb
inc
inc
lret
pop
orb
cwtl
repnz
cmp
mov
orb
adc
fisttpl
pop
and
add
jno
pop
daa
lea
aas
out
mov
xor
rorl
cmp
xor
movsb
mov
lea
xchg
push
mov
or
jb
pop
dec
int
pop
mov
or
mov
push
sbb
addr16
pop
cltd
inc
mov
sub
movsl
imul
mov
jle
mov
scas
pop
xor
pop
sti
mov
pushf
or
mov
mov
pop
lock
popf
or
mov
in
jl
push
cmp
push
adc
rcll
arpl
test
fsub
mov
dec
aad
loope
sub
sub
daa
pop
or
xchg
aad
insb
setl
pop
dec
ja
jmp
push
mov
mov
ret
push
sti
aam
or
sbb
fld
push
adc
icebp
repnz
lahf
pop
inc
sub
out
in
scas
or
push
xchg
xchg
and
and
fcoml
subb
cmpsl
jo
xor
pop
notb
call
jb
cs
cmp
lock
mov
xchg
mov
sub
sbb
bound
test
mov
xor
sahf
and
dec
outsl
scas
pop
dec
adcb
nop
xchg
inc
out
aas
cmp
push
mov
hlt
push
outsl
mov
sbbl
test
ret
pop
mov
aas
sbb
push
popa
clc
je
jmp
dec
sahf
mov
jae
addr16
or
xchg
cmpsl
push
sub
xor
fstl
sub
fidivl
add
rclb
fsubs
fisttpl
cmp
cwtl
jg
mov
popa
mov
std
lcall
or
insl
cli
shlb
mov
mov
ret
insb
jbe
arpl
jg
dec
jp
pop
fcmovnb
pusha
out
inc
and
addr16
add
cltd
pop
and
push
pop
ffreep
or
cli
or
lock
imul
jb
or
shll
sub
cmpsb
push
insl
sub
mov
jge
lea
jp
inc
ds
std
orb
pop
out
enter
scas
aaa
mov
jmp
push
arpl
pop
fnsave
fists
add
es
fcoml
fistps
mov
fidivs
mov
stc
xchg
xlat
dec
add
jp
mov
xor
jnp
bound
stos
fnstcw
mov
lcall
xchg
neg
mov
xchg
push
dec
jo
dec
shrb
xchg
xchg
dec
iret
movsb
push
scas
xchg
push
imul
sub
cli
fs
pop
fdivs
data16
test
inc
inc
sub
or
sub
inc
mov
lods
ds
int3
cmp
leave
popf
dec
aad
scas
mov
outsl
stos
jmp
mov
push
cmp
pop
sarb
pop
int3
and
and
adc
adc
dec
pop
jnp
fsubr
mov
cmp
test
ja
pop
ret
adc
xchg
xor
or
inc
add
addb
popf
aas
ficompl
and
out
scas
xchg
inc
div
fs
sbb
push
or
fxtract
mov
or
les
jbe
dec
add
movsl
cmc
shlb
inc
mov
ds
sar
inc
outsl
sub
dec
leave
cmp
insl
movsb
push
je
push
mov
insl
idivb
cmp
xchg
xchg
or
jecxz
inc
mov
mov
loopne
mov
xchg
mov
das
add
pushf
inc
mov
jmp
add
daa
sahf
adc
arpl
mov
jp
inc
sbb
sbbl
xchg
dec
jecxz
sbb
mov
jp
stc
das
pop
test
fdivl
xor
je
xchg
xor
lea
sub
add
out
call
fs
pop
push
enter
lods
stos
dec
pop
out
dec
dec
aas
inc
lods
dec
xchg
jnp
fsubr
adc
ljmp
aas
cmpsl
or
jne
inc
xor
mov
xor
mov
pop
in
adc
call
dec
fwait
inc
cld
push
repnz
xor
gs
cmc
out
dec
mov
jg
dec
lcall
pop
sub
ljmp
fisubs
mov
jae
mov
fsubrs
outsl
test
push
mov
mov
pushf
cmp
sbb
mov
push
lcall
and
mov
sub
mov
mov
pusha
add
movsb
shlw
dec
loope
cmpsl
pop
pop
lock
pop
push
mov
adc
add
lret
mov
cld
mov
push
pop
pop
jle
daa
jecxz
stos
jg
das
ljmp
push
dec
les
loop
les
int3
push
dec
push
cmp
jecxz
mov
fwait
mov
shrb
aaa
out
shlb
fldt
out
pop
xor
sub
fidivl
add
xor
std
pop
stos
call
jo
loopne
mov
aaa
rorb
mov
mov
sarb
iret
ljmp
ss
insb
push
mov
sti
sahf
or
inc
mov
adc
inc
xor
aas
dec
out
or
jbe
or
jmp
mov
aaa
test
lcall
adc
lods
push
shrl
xchg
dec
insb
xchg
push
fadd
mov
ljmp
xchg
dec
sbb
mov
pop
std
dec
sahf
cmp
stc
sahf
sahf
das
pop
int
loopne
mov
popa
jns
rorb
movsb
jbe
and
fildl
jne
jmp
outsb
sbb
imul
in
popf
in
sti
movsl
xor
shr
pop
mov
mov
push
add
out
mov
xor
js
loop
fwait
mov
xor
adc
pop
shll
cwtl
push
cmc
jg
jae
jns
mov
mov
lcall
cmp
mov
xor
dec
jmp
inc
pusha
int3
inc
in
cltd
rcll
fwait
test
or
pop
dec
lret
dec
shrb
fpatan
ret
xor
cmp
and
jge
xchg
and
cmp
mov
inc
clc
jl
sahf
jle
mov
mov
sbb
pop
shlb
dec
fisubrl
out
iret
popl
jno
lcall
in
pop
imul
mov
mov
lods
dec
sbb
out
cmpsl
lret
aad
leave
ror
xchg
xor
xchg
enter
jmp
sti
jbe
and
mov
test
jae
andb
ja
pusha
movsb
je
xchg
inc
and
cmp
cwtl
imul
and
mov
into
sub
mov
cs
or
pop
sub
jmp
adc
adc
inc
inc
xchg
cmp
cmp
leave
test
fmull
mov
sub
leave
leave
mov
lods
pop
add
in
enter
jecxz
sahf
aad
mov
xchg
lds
sub
inc
inc
xor
lret
outsb
std
mov
rolb
mov
icebp
sbb
fwait
loopne
mov
sbb
dec
into
push
xor
push
pop
pushf
and
loope
ret
aas
call
fldcw
and
int
int
call
pop
jle
inc
jp
mov
es
dec
in
xchg
ss
xchg
adc
pop
lahf
inc
inc
lret
sub
outsb
cmc
mov
ljmp
scas
jns
mov
jno
jae
adc
cmp
in
push
xchg
rcrb
inc
inc
shlb
jg
psubw
in
lock
out
dec
minps
loop
xor
imul
pop
into
pop
pop
repz
pusha
andl
rcr
test
aas
fnstcw
cwtl
in
inc
adc
cmp
cmc
lahf
sarb
sub
sbbl
les
in
in
lods
xchg
and
hlt
adc
jns
adc
int
ret
mov
lcall
ret
in
cli
pop
aaa
lock
fcomip
xchg
nop
mov
test
pop
addr16
iret
mov
push
clc
pop
mov
push
sbb
mov
mov
in
out
inc
pop
cmpsb
or
jbe
packsswb
mov
push
cmc
inc
or
enter
push
lahf
mov
loope
or
lret
sub
test
jge
mov
inc
icebp
aas
pcmpeqd
inc
dec
add
cmc
cmc
movsb
or
lea
xchg
push
adc
xchg
into
pusha
ja
jl
lock
mov
jo
lods
xor
ja
out
mov
adc
imul
cmp
mov
mov
lret
sub
daa
fisttps
cmp
lret
jne
out
shrl
sub
lods
mov
and
xchg
pop
inc
movsl
aam
sub
push
aam
je
sub
or
xor
push
out
mov
adc
mov
adc
cwtl
in
test
dec
dec
dec
nop
incb
popf
add
inc
lea
push
mov
std
cld
push
test
pop
add
adc
fcomps
insb
rorl
popf
pop
cld
jne
mov
push
cmp
pusha
jo
pop
pop
or
rolb
dec
add
flds
cmp
xor
cmc
add
dec
pop
scas
rorl
sub
xor
inc
imul
or
cltd
loope
or
mov
std
nop
pop
fistpll
push
loope
test
lods
adc
mov
dec
in
sub
sub
mov
jecxz
xor
outsl
push
in
pop
jb
popa
lret
push
mov
arpl
mov
pushf
ss
mov
ljmp
out
or
cltd
jnp
testb
jle
mov
not
jns
imul
movsb
or
sub
cmp
mov
adc
adc
imul
mov
out
pop
push
dec
xor
jno
out
std
les
fstpt
andl
mov
sbb
adc
jp
jno
push
jb
mov
cld
sahf
push
call
jae
mov
aam
sarl
jmp
jnp
cs
inc
cmp
pop
mov
outsb
or
dec
fnstcw
xorl
inc
mov
in
push
cmc
ss
clc
imul
jg
hlt
popf
mov
loopne
sti
jg
popa
ret
mov
sub
push
jmp
popf
mov
clc
jo
or
fiadds
addr16
pop
sub
mov
pushw
and
push
sub
insb
paddsb
lods
push
push
sbbl
mov
shll
cmp
pop
mov
es
addr16
xchg
shlb
sbb
inc
or
jae
cltd
cmp
pop
pop
mov
mov
imul
mov
jbe
mov
or
mov
icebp
pop
pop
add
xchg
outsl
loope
inc
mov
mov
add
mov
and
cmp
and
add
insl
add
xchg
lods
lock
xor
push
jns
gs
push
fildll
sti
sbb
xor
dec
add
add
inc
xor
shlb
mov
ja
mov
cmpsl
xorb
fstps
mov
xchg
popa
push
inc
sbb
movsl
inc
jecxz
dec
jo
lds
mov
ds
orb
or
sub
lret
stos
cs
add
mov
jle
add
loop
xor
dec
sti
mov
mov
sub
inc
add
lahf
jge
test
mov
gs
popa
or
das
lods
xchg
dec
pop
adc
pop
adc
xchg
add
mov
lcall
adc
pop
sti
mov
out
mov
xchg
sbb
push
jns
loopne
fists
mov
ret
push
fimuls
ffree
into
jno
cmp
outsl
add
push
push
test
je
and
or
rorb
pop
mov
fbstp
jl
mov
sti
js
adc
sti
mov
movsb
xchg
inc
outsb
repz
repz
leave
sahf
addr16
sbb
aas
fsubr
aas
xor
fisubl
outsb
jmp
cld
imul
push
pop
pop
adc
ret
sub
les
cltd
push
xchg
mov
mov
push
xor
in
inc
dec
xchg
mov
push
mov
mov
adc
stc
push
mov
lahf
and
dec
or
mov
mov
pop
cwtl
xor
and
aaa
xchg
imul
inc
cmpsb
dec
cmp
pop
add
mov
inc
inc
js
cmp
jmp
mov
mov
call
les
add
in
push
cmpb
adc
mov
xchg
adc
movsb
push
loop
dec
or
fwait
cs
mov
scas
mov
inc
loopne
xchg
sub
fwait
daa
out
or
sbb
pop
int3
test
into
outsb
leave
mov
inc
inc
outsl
push
adc
jbe
rorl
add
ffree
sub
inc
jns
and
je
idiv
ret
dec
xor
inc
jp
and
lahf
mov
jg
jns
sbb
inc
repz
mov
fsubrs
jecxz
and
jae
jmp
xchg
and
fisttps
lahf
dec
popa
cmp
in
call
addl
mov
xchg
xor
pushl
adc
or
and
xlat
sbb
aas
shll
cmp
cwtl
xor
fsub
mov
shrl
aaa
movl
cmp
into
call
lds
scas
jno
jle
sbb
ja
cmp
cmpsl
mov
addl
cs
adc
aaa
jl
ret
xor
mov
lods
sub
jno
cwtl
das
mov
dec
sbb
andl
pop
mov
lods
and
outsb
push
push
push
int3
fs
out
xlat
pop
or
divb
xchg
xchg
sbb
rcrl
in
adc
or
lods
lods
mov
mov
dec
lret
es
cmpsl
ljmp
cmp
enter
inc
xchg
dec
push
lock
cmpsl
movsl
cltd
loop
inc
dec
mov
andl
cmpsb
ficoms
int
xchg
xor
jge
jo
subl
outsl
mov
or
out
jecxz
mov
or
dec
jg
cli
jae
sub
les
ret
cmp
jg
cli
sbb
or
inc
cmp
mov
mov
sbb
fisttpll
lods
xchg
inc
popa
ret
cmp
push
or
mov
popf
ds
inc
xchg
mov
push
cld
and
ret
xchg
arpl
add
je
cmp
movsb
mov
mov
add
nop
out
sub
or
inc
inc
and
mov
test
pop
jae
iret
adc
into
push
ljmp
add
add
out
fldcw
test
mov
dec
cmp
lods
mov
cmp
mov
push
xchg
xchg
jno
stos
dec
gs
pop
sti
sbb
add
imul
cli
cmp
xor
std
das
mov
in
sbb
jmp
movsl
adc
sarl
inc
and
and
add
push
jmp
addb
cld
mov
and
inc
xchg
jno
jnp
out
int3
movsb
es
hlt
aad
imul
repz
cmp
push
imulb
pushf
loop
mov
daa
shlb
mov
jb
xor
out
push
adc
inc
add
daa
inc
sbb
imul
outsl
lahf
call
test
mov
fisttpll
jbe
in
fisttpll
mov
addr16
lock
je
test
jb
lods
stc
mov
sbb
dec
dec
repnz
mov
repz
imul
lock
incl
insl
dec
push
sbb
not
jae
imul
popa
es
fwait
mov
push
stc
xchg
mov
jmp
xchg
cli
jl
repnz
daa
scas
mov
xchg
jge
mov
rol
sbb
cs
out
mov
push
jb
push
sbb
sti
sahf
cmpb
mov
jmp
xchg
pushf
mov
jne
js
jne
aad
adc
jno
out
outsl
jg
and
insb
data16
mov
xor
add
sub
insb
jmp
cli
stos
les
fnsaves
push
mov
xchg
dec
jmp
popa
stos
pop
pop
xor
adc
pop
ffreep
out
pop
inc
hlt
xor
jg
ret
addl
fistpl
inc
jne
inc
imul
or
sbb
jno
jg
xlat
andl
mov
mov
fwait
xchg
cmc
imul
add
sbb
inc
add
add
and
ss
ja
hlt
xorb
imul
insl
fcomps
cli
push
xor
or
mov
rcrl
or
sub
std
les
adc
mov
cmc
loopne
in
adc
mov
in
movsb
hlt
adc
or
je
mov
jmp
add
xor
test
xchg
xchg
pop
inc
adcl
and
jge
xchg
out
mov
and
jecxz
adc
lods
inc
xor
dec
pop
add
jne
mov
xorb
mov
fs
and
popf
sti
ss
aam
jg
lods
mov
mov
sbb
and
jne
cld
mov
in
sbb
outsb
in
push
push
add
add
lahf
mov
loopne
and
push
inc
adc
sahf
or
mov
pop
mov
sub
xor
fcompl
loopne
clc
jns
mov
mov
jo
cmp
dec
xchg
enter
or
jae
mov
push
push
mov
push
sti
sub
pop
fwait
mov
xor
ret
cltd
dec
aam
test
or
xchg
lds
xchg
sub
in
lret
and
adc
arpl
neg
mov
add
out
or
xorl
icebp
add
sub
inc
pause
shl
lock
addr16
jmp
fdivs
pop
test
mov
lea
lods
negb
cmp
xchg
frstor
jmp
hlt
sub
jl
out
rep
addr16
fcoms
cltd
lret
movsl
mov
ljmp
mov
loope
xor
hlt
and
jbe
filds
bound
lret
pop
sbb
jg
nop
mov
sbb
push
shr
pop
daa
gs
stos
push
out
mov
loopne
mov
pop
mov
data16
data16
stc
idivl
add
ret
rorl
daa
dec
mov
in
jl
cmp
data16
xor
or
lock
pusha
pop
push
int
xorb
cwtl
xor
jno
dec
out
cs
outsl
jbe
test
in
shlb
daa
sbb
dec
cmpsb
adc
sbb
nop
dec
daa
mov
dec
sbb
in
pushf
mov
rcl
xlat
data16
xor
or
inc
ljmp
cltd
daa
ret
add
and
rcrb
push
scas
jo
outsb
aam
inc
or
data16
xchg
lock
inc
movsb
mov
fs
bound
push
sub
popf
sub
mov
xchg
sub
xchg
sahf
sbb
dec
scas
iret
loop
adc
sub
push
xchg
mov
movsl
nop
mov
cmp
aad
hlt
mov
mov
or
or
mov
popf
jle
cmp
inc
lret
jnp
or
xchg
stos
pusha
inc
cmp
push
add
scas
or
mov
jb
add
dec
pop
xchg
mov
lcall
lcall
sbb
arpl
cmp
fstps
add
out
push
mov
leave
mov
ffreep
loopne
sub
cmp
xchg
jmp
cwtl
testb
inc
xor
dec
popf
outsl
dec
jnp
add
cwtl
out
pusha
xchg
lock
push
push
pop
dec
fchs
call
mov
outsb
and
testb
jmp
mov
push
orl
dec
nop
sub
jb
popf
filds
pop
call
sub
xchg
jge
mov
mov
jns
scas
shll
in
cmp
sub
inc
das
push
pop
mov
dec
and
lods
xchg
mov
adc
test
jl
daa
ljmp
adc
jecxz
adc
popa
push
lock
push
xchg
add
cmovs
fstl
in
outsb
pushf
adc
xchg
lods
jns
jbe
in
insb
dec
addr16
pop
movhps
into
lahf
jne
fimuls
mov
addr16
cmp
leave
jae
push
xchg
imull
insb
mov
es
lcall
mov
xchg
adc
mov
xor
jmp
gs
fcomip
jb
call
cmp
xor
add
jmp
push
std
mov
in
test
dec
aad
fstps
je
dec
pop
stos
gs
imul
scas
je
push
push
mov
lret
cmp
mov
dec
mov
cs
lret
fstl
out
pop
lahf
cmp
out
testb
test
pop
inc
xor
filds
jae
push
daa
mov
sub
push
mov
xor
pop
mov
cltd
inc
mov
xchg
lods
out
mov
cmpsl
into
bound
movsb
popf
es
push
pop
and
into
faddl
mov
out
pushf
adc
add
lds
inc
sub
xor
out
cmp
adc
push
cs
cwtl
xor
mov
in
pusha
dec
jg
jmp
add
test
fs
imul
outsb
and
mov
imul
cmp
cmpb
or
dec
loop
xchg
adc
iret
mov
dec
push
loop
pop
pop
repz
jnp
pop
addl
fcoml
xlat
lret
aad
dec
mov
das
push
mov
sbb
sbb
adc
mov
add
pop
sub
mov
cwtl
sbb
lret
jae
cmc
dec
push
jne
inc
loope
push
in
call
out
inc
pop
ss
mov
aad
sub
inc
lret
push
jl
jmp
sbb
push
js
stos
lods
and
pushf
push
pushf
sbb
sub
lcall
cs
and
adc
adc
or
xor
mov
ljmp
imul
gs
imul
xor
movsb
lea
and
call
aam
inc
ret
xor
push
inc
xorb
xor
dec
in
out
mov
push
sbb
pop
in
icebp
test
mov
sub
xchg
mov
daa
mov
pop
pop
cld
nop
push
loope
arpl
cltd
adc
lock
and
enter
shl
push
fisubs
enter
xor
sbb
pop
rorb
fstl
inc
inc
loopne
js
mov
adc
fstp
ret
pop
sub
fstps
in
bound
adc
out
int
ds
daa
dec
mov
pushf
das
aad
lret
test
xor
rolb
imul
add
insl
jne
dec
in
sbb
mov
lahf
jmp
push
stc
int3
push
fildl
sbbl
pop
test
push
push
ja
sub
push
insb
xchg
fwait
dec
cs
aad
roll
push
stos
movsl
jns
out
sub
add
js
jle
xchg
lock
jecxz
cli
lret
jg
cltd
fisubrl
jno
fstl
in
add
fiaddl
and
ret
cs
dec
mov
xchg
arpl
je
into
cmp
push
lea
in
inc
and
pop
aad
test
fdivrl
rorb
ds
inc
mov
add
and
adc
sbb
ret
push
jnp
pop
ja
mov
lahf
imul
mov
inc
pop
xor
int
mov
cmp
mov
xlat
cli
sub
cld
sbb
sbb
sti
int
das
pop
std
cmc
xor
mov
push
xlat
mov
pushf
adc
inc
lods
push
hlt
hlt
test
iret
xor
pushf
out
das
cmpsb
sbb
movsb
inc
sub
shrl
push
sarb
dec
add
insl
mov
aad
xor
std
pop
jg
jo
hlt
adc
push
test
jecxz
inc
fistpl
dec
ja
mov
cmpl
ljmp
dec
dec
in
outsb
jne
daa
pop
dec
dec
sub
loop
pusha
stos
gs
lret
or
push
or
add
imul
and
cs
cmpsl
or
mov
sub
fstl
fwait
cs
adc
mul
shll
xor
imul
sub
and
das
loope
xchg
jl
adc
push
and
push
loopne
xchg
push
jns
fwait
xor
or
xor
dec
xor
out
cmpsb
pop
popf
imul
fsubs
sub
xchg
pop
jnp
mov
mov
addr16
div
daa
outsb
mov
cmp
dec
test
add
add
fnstenv
test
daa
pop
mov
cwtl
xor
fxch
fisttps
push
insb
dec
mov
mov
cmp
jnp
add
sbb
cmp
pop
mov
xchg
cli
addr16
xchg
mov
pushf
notl
das
dec
fiaddl
out
rcrb
pop
cmpsl
cmpsl
test
mov
adc
stos
sub
mov
loop
cmp
std
test
outsb
xor
cmp
js
mov
dec
loop
or
fildl
adc
push
xchg
jns
stos
adc
mov
jg
dec
subb
jmp
mov
cmp
adc
dec
ficompl
data16
add
mov
adc
xor
jnp
daa
int3
mov
ret
ljmp
xor
cmp
rorb
mov
jns
in
pusha
dec
pop
ret
fcoms
sub
xchg
out
or
xchg
popf
mov
in
shl
ret
sub
cmp
pop
push
jg
roll
pop
mov
pop
adc
scas
xchg
pop
mov
mov
sbb
fcmovnu
dec
lcall
pop
add
adc
and
nop
sbb
pop
xchg
xchg
lret
enter
adc
sub
fwait
mov
cmpsb
mov
inc
mov
xor
inc
mov
lods
and
test
dec
out
sbb
rorl
daa
dec
mov
push
out
ljmp
cmp
stc
jecxz
jo
pop
or
mov
out
js
add
shlb
fwait
test
cmp
dec
in
lock
inc
add
sub
xor
fbstp
scas
rol
cmp
cld
xchg
sahf
cld
mov
jp
lods
mov
hlt
pop
push
jle
cmp
lahf
xor
ds
in
fst
les
push
ljmp
inc
sbb
fistps
jp
test
pop
lods
into
xchg
mov
or
dec
psraw
sub
test
hlt
repnz
mov
bound
mov
sub
ja
xchg
andb
iret
inc
and
mov
jmp
xchg
mov
stc
imul
fnstsw
or
jp
outsl
xchg
mov
insl
nop
lods
sti
addb
fs
adc
sti
inc
cmpb
xchg
mov
cmovo
icebp
pop
push
sahf
dec
pushf
repz
sub
sbb
popf
add
popa
ret
cmp
jg
dec
fs
imul
pop
inc
aas
push
mov
push
cli
dec
jno
push
push
push
ja
xor
push
dec
cmc
pusha
dec
lods
lcall
cli
ret
data16
lock
push
add
and
cmp
xor
in
sbb
jno
mov
sbb
xlat
in
push
or
mov
js
sub
inc
jnp
mov
fistps
in
push
sarl
mull
cmp
sub
pop
daa
aam
mov
popl
mov
xor
insb
xor
cmp
mov
aad
je
sbb
mov
imul
ds
shrl
divb
sbb
mov
jnp
scas
or
in
clc
bndldx
icebp
js
int
push
cltd
xor
aaa
and
push
in
fwait
cli
ret
pop
jns
psrad
xchg
lods
mov
jecxz
sarb
inc
addb
std
mov
mov
icebp
in
call
enter
aad
inc
xorl
test
stc
lahf
push
mov
adc
sbb
out
popf
lods
in
std
push
mov
bound
xchg
lock
scas
js
cmpsb
scas
sub
scas
jne
addr16
pop
sbb
adcl
test
dec
mov
mov
sbb
sbb
insl
inc
fcmovu
je
out
jae
in
aad
lcall
popl
jecxz
test
push
pop
shl
pop
bound
push
leave
aaa
add
push
and
mov
das
jmp
push
cmp
test
xchg
int3
push
jmp
mov
cld
pop
pop
pop
xor
icebp
xor
std
sub
jbe
xchg
adc
imul
loop
jg
cs
stos
lahf
movsl
push
or
and
and
mov
xor
cs
decl
call
sti
sarl
push
pop
add
lret
sbb
mov
mov
adc
testl
adc
sub
xor
inc
dec
rcrl
dec
add
out
jns
repnz
mov
jae
or
aam
scas
and
fists
gs
push
jbe
push
aaa
adc
sbb
data16
or
in
sbb
mov
lds
movsb
icebp
dec
mov
cwtl
roll
or
jae
lret
jo
mov
int
aas
fisubrl
dec
and
push
sbb
mov
cmc
arpl
jecxz
test
pop
and
out
xor
mov
jae
mov
movsb
clc
sbb
insl
scas
insb
xchg
cmp
lea
push
iret
and
xchg
out
shll
fwait
pop
dec
fdivrs
scas
lcall
inc
in
cmp
bound
and
es
ficomps
je
mov
sarl
adc
pop
add
int
dec
call
mov
movsb
push
sbb
xor
or
or
pop
in
inc
inc
lahf
dec
pop
outsb
loope
leave
push
inc
shl
inc
pop
pop
sub
stos
push
add
xor
xchg
std
int
ret
cli
push
add
and
xchg
jne
and
inc
ret
dec
popa
add
cmp
xor
loope
sub
jmp
stos
clc
call
insb
jo
push
jns
fsubl
cltd
cmpsl
adc
mov
xor
mov
ljmp
adcb
jno
sub
jo
loopne
add
dec
fistl
xchg
push
xor
cmp
xchg
dec
mov
adc
push
jl
pop
in
test
jns
sub
jae
mov
aad
dec
dec
imull
dec
inc
repnz
inc
cmp
xchg
jge
ret
shll
sbb
icebp
cwtl
xchg
dec
rcrl
xchg
popf
jecxz
clc
fildll
cmp
dec
aas
nop
mov
dec
cmp
and
cwtl
dec
scas
hlt
pop
pop
lods
or
loope
test
repz
negl
mov
lret
leave
mov
aam
call
jecxz
or
adc
mov
in
xor
push
test
mov
aad
mov
mov
cmc
pop
testb
out
add
movsb
jb
dec
jno
outsb
push
cmpxchg
int3
bnd
out
adc
xchg
push
mov
fwait
cmp
sbb
jne
std
cld
cmp
out
lods
out
inc
mov
rcrl
push
xor
sbb
adc
sarb
bound
rcll
scas
and
int
xor
pusha
sbb
sahf
xor
pop
lcall
jge
insl
stos
lods
faddp
push
mov
mov
mov
ljmp
test
sub
xor
pop
outsl
imul
les
subl
inc
adc
mov
jbe
adc
add
push
pop
fwait
push
ljmp
out
sub
cmp
and
and
test
xchg
aas
dec
sub
mov
rcll
clc
dec
fildll
mov
jb
fnstcw
mov
daa
cmp
shr
and
int
stos
add
insl
mov
pop
sub
scas
cmp
divb
data16
xchg
das
aam
jns
mov
orl
ret
jb
clc
fwait
stos
adc
mov
sbbl
or
mov
call
dec
dec
fcom
sub
aam
cmp
push
or
mov
jecxz
mov
sbb
shll
cmp
int
inc
adc
mov
sub
and
or
jbe
out
cmp
mov
or
sti
maskmovq
divl
lret
aam
in
out
or
sbb
js
jae
mov
pop
clc
sbb
xor
ret
movsl
push
mov
mov
repz
lahf
push
jg
aas
enter
arpl
cltd
or
ds
shlb
xchg
inc
idiv
mov
push
jl
pop
mov
sbb
push
adcl
adc
mov
imul
jg
inc
loopne
push
ret
pop
out
mov
aaa
popa
stos
vpslld
sahf
jg
push
rcr
mov
adc
daa
pushf
out
xor
insl
sbb
in
repz
es
mov
xor
ds
addr16
fadds
adc
in
stc
out
jno
xchg
jno
mov
mov
mov
lret
jl
lea
insl
pop
cmc
and
subb
insl
add
dec
sub
mov
adc
push
jge
sbb
repnz
mov
adc
jmp
xor
addl
lds
xchg
mov
adc
outsb
je
aaa
scas
adc
xchg
xor
jns
sub
shrb
mov
iret
sbbb
dec
mov
push
pop
xchg
inc
sub
adc
lods
dec
push
cmc
icebp
xor
jae
adc
adc
inc
repnz
les
enter
xor
pop
fisubrs
add
jecxz
fimull
in
das
mov
pusha
and
insl
lds
movsl
jmp
shll
stos
test
xchg
xchg
adc
cmp
sbb
add
iret
mov
cli
jne
hlt
xchg
test
aas
pop
mov
ret
cmp
sbb
cmp
lock
mov
sbb
ret
xchg
shrb
cwtl
jae
inc
out
pop
xor
in
and
xor
mov
sarb
sbb
es
loop
ds
mov
scas
into
jae
xor
sub
cs
gs
jno
pop
and
sub
cld
add
sub
aam
in
xchg
jg
test
lods
lahf
outsl
fwait
cmp
das
jb
ret
push
adc
pop
jmp
call
xlat
je
xchg
jo
popf
sbbb
inc
push
xchg
sarl
mov
test
sbb
cmp
adc
sbb
mov
cmpsl
daa
outsb
fs
xchg
inc
pop
cmp
xor
cmc
mov
loope
fnstsw
xor
pop
sub
in
add
testb
into
push
and
push
jo
in
addr16
dec
push
fildll
pop
mov
sub
ja
addl
adc
repnz
sbb
arpl
xor
leave
repz
add
fnstenv
mov
xchg
ss
add
mov
jns
je
and
fucomi
hlt
pop
xchg
mov
push
or
xchg
jg
imul
mov
outsb
stc
arpl
adc
orl
in
mov
inc
outsl
inc
xchg
enter
jge
repz
sahf
aam
xlat
sub
and
sti
scas
sbb
in
imul
lret
inc
sbb
sub
mov
sub
scas
test
add
xchg
cmp
jnp
out
pop
sub
ja
ret
iret
es
push
push
cmpsl
lds
or
dec
jne
pop
jo
lret
popa
cltd
in
lret
je
xchg
mov
pop
lods
dec
sar
fwait
aas
and
jle
pop
in
push
pop
xlat
pushf
stos
fcompl
xor
movsl
es
pop
cld
mov
dec
popa
orb
hlt
push
xor
fadd
in
mov
pop
jo
subb
popa
push
rol
or
xchg
roll
mov
jns
push
xor
les
push
push
lds
aaa
sub
push
int3
jbe
sub
lods
or
scas
cmp
pop
lds
mov
sbb
pop
test
pop
cmc
movsb
xchg
test
mov
out
adc
push
rcrb
ds
and
pop
mov
lret
xchg
and
fadd
mov
xor
and
cmp
add
lea
stc
notl
int3
mov
mov
in
mov
or
xchg
jbe
imul
fnstcw
add
outsb
mov
test
dec
mov
mov
xor
int
mov
or
aas
gs
dec
outsl
pop
fcmovnu
mov
in
cwtl
pop
ss
in
adc
adc
jo
or
aas
ja
jmp
inc
repnz
repnz
hlt
call
pop
fwait
in
inc
mov
in
sbb
push
xor
sub
into
push
jne
xlat
lret
cmpsl
xrelease
lahf
add
mov
sub
addl
push
in
xor
xchg
jbe
jg
jne
fwait
xchg
or
pop
aad
dec
je
sbb
push
pop
sbb
les
sbb
xor
add
sahf
icebp
mov
dec
inc
pushf
push
loop
cmpsl
inc
adc
shrb
fsubrl
loope
mov
mov
cmpsl
in
cmpl
fisubs
mov
inc
jp
mov
push
mov
shl
cmp
push
lock
mov
adc
fsubp
shll
sbb
mov
push
lds
int3
mov
out
hlt
pop
loop
jbe
addr16
pop
cmpsb
push
pop
mov
mov
pop
or
xor
sub
clc
or
testl
cmpl
int3
cwtl
popf
out
cs
xor
fstpt
sub
pop
mov
lods
icebp
js
sub
fimull
fs
std
adc
push
pop
fcmovbe
lods
in
and
ja
fcoml
sbb
out
jb
mov
or
sti
fldenv
xchg
imul
or
daa
sub
call
xor
xorl
stos
mov
mov
mov
dec
cmp
mov
pop
in
mov
jnp
mov
data16
sub
mov
mov
arpl
ljmp
push
stc
mov
es
daa
jb
popa
sbb
push
lods
jge
mov
test
pop
ss
lock
add
popa
or
jne
pop
dec
scas
xchg
fldt
pop
sub
or
sub
push
fdivs
xor
lock
sbb
in
push
leave
cmpsl
inc
sub
inc
push
fcompl
inc
arpl
cmp
inc
call
outsl
fnstcw
leave
sub
sub
aas
jecxz
mov
out
dec
int3
adc
imul
test
and
mov
mov
pusha
out
cli
lcall
in
fmuls
cmp
xchg
lock
sbb
subb
sub
inc
into
adc
dec
pushf
lret
rcr
mov
ss
hlt
into
or
cmp
xor
inc
ret
mov
xchg
bound
in
lret
or
cmpsb
mov
pushf
movsb
negl
pusha
mov
lds
pop
jl
mov
jns
xchg
movsl
inc
mov
or
mov
cmpsb
inc
push
and
mov
fcompl
xchg
jo
mov
mov
or
clc
push
in
cmc
dec
movsl
mov
les
call
xor
int
push
sbb
std
insb
stos
and
mov
mov
push
data16
xchg
lahf
loop
mov
stos
pusha
and
mov
jle
push
mov
sub
fdivrs
xchg
imul
std
lds
push
pop
xchg
pop
les
pop
dec
sub
mov
cmp
xchg
out
ds
xchg
movl
adc
pop
mov
sbb
jge
push
pop
xorl
sub
add
xor
es
lea
cld
jp
inc
mov
cs
mov
stc
std
popa
fistpll
xchg
mov
cmp
sub
ret
xchg
aaa
idivb
stos
daa
xlat
xchg
and
xchg
xchg
sbb
jle
lods
sbb
push
inc
js
inc
pop
leave
inc
xchg
aas
xchg
adc
lcall
and
cmp
test
in
ret
jo
xor
fsubrp
or
outsb
mov
roll
sbb
nop
in
aam
push
jnp
xchg
mov
lock
push
outsb
adc
adc
add
pusha
lcall
clc
leave
xchg
pop
into
scas
adc
xchg
mov
pop
mov
or
cmp
into
test
cmp
fisttpll
je
mov
int3
push
enter
pushf
pop
xchg
and
aad
stos
push
lret
inc
sbb
mov
dec
movzbl
mov
inc
jg
ret
aam
lock
pusha
aaa
jbe
js
pop
stos
movsb
jg
insb
jecxz
mov
xorl
scas
xor
cmp
add
movsl
fwait
in
push
sbb
cmp
push
cmp
outsl
fnsave
test
dec
in
jno
aaa
xchg
and
xor
cmpsb
cmpsl
cmp
enter
mov
sub
out
mov
dec
or
lret
cmp
and
shl
sbb
mov
xor
ss
lea
mov
jns
pop
incb
xchg
ljmp
mov
icebp
das
insb
in
or
push
jo
inc
cwtl
test
decl
dec
popf
fstp
sub
mov
cmp
mov
dec
jmp
adc
adc
shl
icebp
jle
jecxz
push
out
loope
inc
adc
jl
enter
jb
xor
add
hlt
push
push
mov
pop
mov
inc
ja
popf
push
imul
mov
push
test
inc
mov
pop
cmp
loopne
mov
pop
mov
push
or
arpl
sbb
adc
lods
scas
stc
adc
and
mov
xchg
aaa
pop
add
jbe
jge
insb
add
add
out
mov
and
cmp
test
mov
mov
sub
xor
aaa
mov
xchg
into
mov
pushf
jae
xchg
xor
add
lcall
enter
jp
adc
sub
push
aad
inc
lahf
mov
dec
xor
sbb
pop
cmpsl
add
out
in
add
inc
jp
xchg
iret
arpl
cwtl
pop
push
or
xchg
mov
dec
fwait
mov
add
sub
sahf
repz
clc
into
adc
inc
mov
enter
arpl
mov
cmc
stos
mov
pop
xchg
lds
ffreep
ret
sub
or
ret
mov
xorl
mov
mov
dec
dec
sub
stos
jae
adc
cmpsb
sub
outsb
mov
addb
or
mov
pop
mov
aad
adc
fisttpl
mov
adc
xor
lods
in
hlt
pop
fistl
fwait
dec
dec
fisttpl
cmp
insb
dec
popa
sbb
cmp
and
insl
xchg
mov
loopne
mov
test
or
ja
inc
out
jns
mov
add
sbb
adc
test
gs
test
jae
push
shrb
push
adc
jmp
clc
mov
rcrb
push
fwait
sub
scas
xor
bswap
xlat
imul
ss
add
lods
add
lods
mov
clc
loopne
cmp
pop
sahf
jl
mov
dec
mov
cs
pop
sbb
mov
pop
and
sub
jle
pop
es
mov
jbe
xchg
xchg
sub
mov
outsb
in
xor
mov
xor
xchg
sub
cwtl
adc
push
subb
inc
xor
pusha
ljmp
ja
adc
xchg
mov
les
push
jmp
push
out
dec
xchg
insl
push
push
or
daa
xchg
fstps
mov
sub
popf
std
fsubrl
xor
pop
test
insb
add
lret
idivl
xchg
cmc
add
fwait
movsb
push
pop
fstpt
aam
shl
or
sti
push
scas
shll
xlat
sbb
mov
cmp
jmp
out
mov
cmp
mov
mov
pop
mov
sbb
cltd
sbb
ljmp
mov
dec
jno
xchg
in
ljmp
div
out
mov
dec
aad
mov
adc
das
sbb
aaa
jae
jno
hlt
adc
mov
or
adc
loope
sbb
scas
arpl
cmp
js
aad
dec
dec
mov
xchg
push
outsb
jo
xor
xor
in
mov
cltd
addl
shrb
pop
mov
aad
push
cmpb
lods
xor
add
cmpsl
and
sub
inc
out
stos
nop
repz
mov
xchg
mov
mov
insb
dec
cmp
lahf
divl
sub
xor
lret
outsb
sbb
xor
insb
cmp
shr
fs
jb
leave
pop
test
pop
mov
lret
push
push
xchg
movsl
test
dec
aam
arpl
jnp
pop
push
pop
enter
lods
sub
push
scas
sbb
xchg
mov
lret
mov
jno
sbb
add
shlb
mov
fildl
inc
gs
popa
icebp
inc
adc
js
push
fidivs
sbb
or
dec
movsb
mov
paddusb
fmuls
aam
fldl
mov
xchg
push
inc
dec
in
test
cmc
jp
jo
dec
cmc
mov
xchg
mov
inc
sub
mov
sub
cmp
jno
xchg
mov
hlt
cld
lods
loope
negb
mov
xchg
sub
rol
sbb
ficoml
mov
push
shlb
pop
cmp
lahf
jp
pushf
adc
and
and
aas
dec
jns
fisubrs
repz
ds
mov
push
and
test
adc
xor
pushf
mov
mov
add
push
push
jl
insl
stos
cld
dec
sbb
jae
adc
inc
in
gs
sbb
lds
and
divl
insl
sub
iret
adc
mov
mov
loop
push
lcall
mov
push
jecxz
fists
cmpsb
test
add
jns
cwtl
xor
pop
insl
jl
mov
repz
iretw
jae
cmp
mov
in
stos
fisttps
cmp
xor
stos
cmp
push
adc
push
adcb
cmp
jnp
push
call
lret
dec
and
mov
popf
pop
adc
js
dec
shrb
inc
mov
aaa
jnp
adc
push
pop
push
push
push
inc
jnp
je
adc
int3
arpl
shlb
test
cmp
or
push
nop
fidivrl
cmp
cmp
in
push
cmpsb
cmc
mov
in
stos
enter
mov
dec
cmp
mov
test
jle
cld
insl
or
pop
adc
adc
add
cmp
or
mov
mov
jmp
push
mov
aad
outsb
gs
xchg
das
cmc
pop
jnp
mov
fmulp
xor
mov
subl
cmp
push
pop
cs
and
mov
addr16
iret
mov
xor
jnp
cmp
jecxz
fwait
push
js
rorb
loopne
movsl
cli
inc
notl
mov
pop
mov
fnstcw
sub
mov
into
shl
int
cli
daa
fldl2e
in
sbb
jg
popa
test
xchg
xchg
imull
jnp
ds
mov
sbb
scas
jg
sbb
mov
cmpsb
pop
mov
adc
mov
enter
adcb
jl
aaa
jle
xor
inc
inc
out
insb
cltd
mov
pop
sbb
jne
insb
cmp
addr16
pusha
mov
sbb
mov
xor
clc
shrl
push
mov
fstps
xchg
jg
outsl
and
out
lret
and
xchg
cmc
cmpsb
dec
int3
jmp
jb
xchg
out
add
pushf
neg
stc
cmp
jbe
mov
xchg
mov
arpl
inc
int3
cmp
fmull
xor
mov
sub
xorb
ret
data16
push
fstps
add
push
inc
xlat
cli
cmp
lahf
nop
mov
jnp
lea
addr16
fsubrs
jbe
mov
mov
addb
iret
aad
rorb
testb
in
cmp
and
pushf
inc
push
mov
aad
push
pop
pop
pop
pushf
inc
fldl2t
mov
xchg
test
push
mov
notl
cmpsl
push
pop
mov
and
push
adc
inc
dec
pushl
loopne
and
or
fisttpll
repnz
test
jecxz
mov
mov
sbb
test
loope
jne
faddl
inc
out
je
xlat
mov
shll
push
into
mov
andb
imul
jne
push
xor
inc
mov
das
mov
inc
add
xchg
add
dec
mov
jge
mov
add
movsb
pop
nop
adcb
or
or
leave
fs
out
mov
ret
into
int
nop
pop
adc
dec
xchg
mov
data16
mov
nop
stos
cmpsl
addr16
jbe
stos
popw
aaa
dec
int3
push
mov
decb
iret
das
mov
pusha
mov
mov
pop
xchg
in
pop
inc
add
test
pop
shrl
dec
push
push
inc
mov
dec
pop
imul
or
iret
xchg
pusha
mov
aaa
sub
jle
jnp
jle
adc
ret
mov
pop
lret
xchg
inc
fildll
xchg
push
insl
cld
or
push
mov
lret
sub
lret
scas
inc
inc
adc
add
or
in
jge
mov
arpl
andl
mov
mov
cwtl
imul
clc
add
jno
mov
test
jge
bound
cmp
mov
cli
pusha
mov
add
jno
adc
cmp
push
ss
pop
cmp
jo
sahf
out
popa
loopne
test
or
jl
test
out
es
cmpsl
push
xchg
and
sbb
sbb
out
push
lds
icebp
and
test
test
lahf
dec
pop
mov
pop
call
mov
sti
loope
mov
cmp
xchg
mov
sub
pop
mov
jbe
outsl
roll
ret
add
bound
inc
shrb
fs
call
test
or
jb
sbb
pop
lahf
in
outsb
dec
call
xchg
fisttpl
shlb
clc
adc
lret
sbb
ja
jae
xchg
xchg
sbb
mov
js
movsb
jno
addr16
in
fwait
sti
add
push
push
loop
test
mov
pushf
icebp
sbb
xchg
ss
fs
pop
stos
xchg
lret
sub
mov
dec
add
gs
out
frstor
movsl
test
adc
mov
test
rcr
cli
imul
jecxz
dec
mov
sub
adc
cmp
scas
movsl
ja
fnsave
cmpsl
inc
adcl
inc
dec
andl
ss
jno
add
ret
xor
mov
mov
jbe
mov
pop
dec
jp
lret
push
notb
and
fwait
sahf
xor
aaa
mov
rcr
xor
sbbb
add
xchg
scas
pop
inc
imull
xchg
call
push
push
jp
pop
aas
popa
mov
pop
movsl
lcall
and
xchg
and
push
clc
loopne
addr16
adc
insl
mov
repz
sbb
mov
xor
mov
cltd
jns
cmp
pop
sub
push
fdiv
icebp
sti
out
pop
mov
hlt
mov
mov
inc
aas
push
nop
adcl
and
add
lods
out
add
aas
sbb
in
cmc
mov
lea
leave
jl
inc
in
sub
popa
loop
xchg
pop
xchg
leave
jne
and
pop
adc
xchg
movsb
out
xchg
imul
arpl
pushf
aam
mov
dec
mov
int
dec
jo
divl
mov
xor
xchg
lcall
mov
sbb
sbb
jmp
lcall
xchg
in
or
inc
int
jmp
pusha
fbstp
sbb
dec
xor
sbb
jb
adc
out
xor
fs
out
fwait
sub
jg
sub
lret
sub
rcrl
cwtl
xchg
pop
fnstsw
outsb
mov
or
xchg
cmp
dec
mov
pop
jle
inc
ret
xchg
ds
jno
push
sub
repnz
cwtl
mov
add
cmpsl
mov
lahf
push
fwait
mov
lahf
movsl
or
dec
sub
adc
sbb
push
adc
incl
push
or
cs
lret
fstpl
popf
inc
cmc
mov
jo
mov
and
rol
dec
sarl
jnp
add
fs
mov
jo
sbb
sarb
cmp
mov
xchg
out
std
in
out
add
ficompl
cmp
jbe
andb
rorl
mov
or
and
sbb
cli
popa
mulb
mov
inc
aas
xor
ljmp
stos
pop
jbe
add
imul
jg
in
mov
add
mov
mov
adc
adc
jl
fninit
jmp
fsts
cmc
mov
xor
inc
xchg
mov
or
icebp
movsl
xchg
cmp
loopne
xor
lahf
mov
aaa
jbe
xchg
hlt
push
mov
pop
ficoms
movsb
cmc
mov
sub
dec
adc
push
iret
cmp
sub
in
jns,pt
sbb
repnz
repz
inc
call
jne
mov
sub
out
je
xchg
dec
add
mov
sub
mov
inc
es
lods
div
fidivrl
xchg
shrl
adc
inc
or
cmp
inc
dec
and
leave
push
lods
sub
sbb
xchg
in
repz
fidivrl
xchg
jg
ss
mov
outsl
pop
outsl
jo
mov
lcall
sub
or
adc
xchg
inc
add
cltd
adc
clc
sbb
push
xor
arpl
pop
aaa
sarb
lea
loope
or
jo
jecxz
lret
mov
mov
mov
lret
addr16
cmp
xor
lret
push
in
aad
mov
enter
sub
mov
addr16
pushf
push
inc
mov
pop
repnz
xchg
add
xor
pop
jbe
adc
cmp
push
or
scas
sti
cmp
mov
cmc
or
insl
fmull
push
outsb
dec
lcall
test
sbb
sbb
iret
stos
adc
jl
push
jb
and
add
mov
mov
xchg
pop
mov
icebp
cmc
mov
adc
xlat
sub
push
scas
fnstcw
lahf
js
out
inc
aaa
jmp
nop
or
and
clc
dec
mov
int3
mov
andl
push
xor
js
pop
inc
lahf
push
mov
mov
jbe
and
pop
cmp
push
scas
jle
lret
shrl
adc
je
cld
cmp
pop
jl
mov
aas
mov
xorl
push
pop
dec
jns
cli
mov
mov
mov
mov
cmc
jp
imul
stc
aas
stos
push
jle
mov
mov
jns
or
cmc
mov
pop
roll
in
loope
mov
and
or
cmp
sub
and
js
push
push
xchg
mov
mov
addr16
jb
sub
in
cmpsb
or
lea
push
incb
mov
imul
pop
in
mov
mov
cmpsl
sti
pop
pop
sub
lea
sti
sub
mov
shll
inc
pand
movsl
or
lret
ljmp
imul
movsl
inc
mov
notb
insl
test
int3
insb
dec
or
idivb
dec
repnz
mov
jae
sub
dec
cs
imul
and
fstpl
js
mov
dec
shrb
arpl
stos
xor
rclb
jno
push
mov
mov
add
lea
scas
jmp
sub
sbb
or
mov
push
lret
lds
push
mov
sub
push
clc
arpl
sahf
mov
jnp
xor
repnz
xchg
pop
or
shrb
dec
lock
daa
sub
push
jmp
push
mul
stc
repz
lahf
js
mov
or
ror
mov
push
adc
icebp
pop
dec
inc
mov
jno
push
or
sbb
sub
pusha
sub
xchg
int3
cs
sbb
ret
xchg
and
pusha
lods
aad
fs
cmc
aam
push
push
push
and
xchg
fistl
cli
stos
jl
and
scas
jne
sti
into
sub
loop
cmpl
adc
pop
pop
mov
dec
mov
fsubl
in
lods
and
inc
loope
int3
jb
std
and
xchg
jb
cmpsb
out
sbb
push
ljmp
mov
xchg
cltd
add
fcomps
cmp
mov
jp
xor
in
jb
mov
jb
add
mov
stos
xor
ror
test
and
pop
fstpl
in
test
dec
jns
dec
ds
inc
jae
and
cmp
rolb
add
cld
add
lods
fwait
das
rorl
adc
and
jge
mov
mov
push
enter
xchg
int3
into
iret
insl
daa
cld
or
dec
in
bound
js
xchg
aam
jl
loopne
jecxz
daa
push
jae
jle
inc
or
into
and
lret
cmpsl
sarb
sar
inc
hlt
xchg
or
ss
xchg
bound
je
test
mov
sti
sub
mov
out
dec
vcvttss2si
pop
xor
mov
sub
leave
cmp
pop
incl
nop
lock
iret
adc
sbb
incl
enter
cmp
or
fnstenv
or
push
xor
jle
adc
mov
aam
imul
xchg
mov
ficomps
hlt
mov
jle
lds
pop
jge
mov
mov
nop
pop
ljmp
pinsrw
js
push
out
inc
pushf
out
mov
fdivs
mov
sbb
fadd
push
xchg
jbe
and
aaa
dec
stos
mov
jmp
cmp
push
int
mov
inc
sub
inc
lret
adc
ss
icebp
xor
and
sub
testl
mov
xchg
cvtps2pd
icebp
sti
rcrl
clc
xchg
mov
rolb
jns
sbb
mov
loop
insb
mov
fidivl
fiaddl
mov
or
add
adc
lret
and
addr16
mov
dec
fisubrs
aas
sahf
jns
ljmp
ds
push
sti
or
add
mov
add
push
adc
pop
les
aaa
popf
add
push
push
dec
and
nop
dec
sbb
jne
cmp
ficompl
lret
cld
push
jmp
pop
out
dec
fnsave
addr16
xchg
int
mov
stos
cmp
dec
mov
jp
dec
mov
enter
pop
sbb
and
shrb
jle
cwtl
inc
add
pop
negb
andl
pop
or
das
sub
jmp
jbe
bound
mov
out
mov
jb
lahf
xchg
icebp
cmpsb
push
jmp
icebp
sbb
arpl
mov
xor
push
adc
cli
inc
stos
add
mov
cmp
test
mov
lods
mov
cmpsl
dec
jmp
mov
stos
inc
repz
in
mov
adc
fildll
clc
xlat
hlt
aaa
push
ja
adc
dec
je
pop
mov
cltd
fwait
insb
stc
shl
fcomi
jns
jb
push
negl
repz
fdivs
add
adc
mov
push
mov
out
sub
pop
sarb
dec
sub
les
icebp
pop
insl
cld
js
mov
mov
jecxz
dec
mov
pop
outsb
adc
fstps
push
jns
fnstenv
lods
jae
movsb
inc
bsr
shll
sub
cmp
sub
add
inc
pop
cmp
xor
lahf
hlt
push
xchg
push
sub
pop
in
sbb
lret
out
adc
xchg
fimuls
out
stos
je
jg
stc
mov
and
fstps
mov
sub
push
inc
mov
mov
mov
out
les
in
pop
or
filds
push
xor
mov
inc
or
div
popf
shrl
loope
sub
jo
hlt
ret
fstl
data16
jae
mov
pushf
lahf
sbb
mov
cmc
rclb
cmove
mov
mov
dec
lds
sub
xor
add
imul
cs
mov
or
push
or
loope
dec
lahf
addr16
inc
sub
cmp
lods
and
imul
add
into
pop
pop
sbb
adc
or
push
jmp
pop
js
push
mov
xchg
dec
adcl
test
sub
push
pop
scas
ret
jl
dec
or
jb
cmp
shlb
mov
incb
daa
mov
jnp
sbb
cmp
push
adc
pop
gs
mov
add
push
test
xchg
xor
in
hlt
test
frstor
stos
add
sbb
xor
daa
jbe
cmpsl
add
mov
cmp
mov
cmp
ret
dec
jecxz
push
sbb
ds
pop
or
pop
inc
jne
mov
loopne
das
in
idiv
push
mov
bound
inc
pop
dec
das
mov
mov
push
mov
ficoml
push
dec
fcomps
cs
lret
pop
dec
ss
imul
lock
arpl
push
xchg
out
call
mov
loop
in
lret
shlb
lahf
pop
loopne
push
jae
lahf
lret
popa
out
inc
and
iret
aad
xor
or
jl
mov
pop
inc
int
jge
fisubrs
adc
scas
pop
data16
push
or
xchg
pop
inc
xchg
sub
in
xor
pop
and
dec
lods
jmp
fstpt
stos
inc
and
sub
add
out
push
jmp
add
jae
adc
push
sbb
pop
mov
pusha
loope
test
push
ret
cmp
ds
jb
xchg
mov
lods
push
jb
fwait
mov
ret
sahf
fst
xlat
test
rcrl
cli
xor
dec
xchg
icebp
in
mov
jnp
xchg
fidivrl
insb
jg
repz
dec
mov
and
testl
push
rclb
loopne
int
push
xchg
test
dec
fwait
pop
pop
adc
sub
in
push
push
in
repnz
mov
mov
mov
or
dec
sbb
xor
xchg
jl
das
mov
adc
stc
ret
rorl
mov
cmp
sbb
or
sti
or
or
idivb
jb
scas
in
adc
pop
call
or
popa
nop
mov
jae
push
push
and
inc
ja
cmp
imul
daa
outsl
lock
out
outsl
inc
add
fdiv
je
loop
jno
sbb
xchg
insl
sbb
mov
jo
outsl
and
push
fmull
pop
aas
pop
dec
sbb
push
ss
xor
add
mov
repnz
icebp
pop
add
fisubrl
shrb
sti
fwait
sbb
pop
dec
jo
inc
cltd
xchg
or
test
sbb
push
cli
mov
clc
jns
mov
mov
or
or
sub
dec
adc
push
add
adc
cwtl
cmpsl
cmp
inc
xchg
loop
sub
jbe
fwait
inc
arpl
inc
pop
je
emms
pop
imul
call
sbb
jp
fadds
test
jne
or
pop
in
pop
xchg
mov
add
shrb
popa
add
xchg
aas
sub
fnstsw
push
add
test
add
data16
pushf
insl
sbb
daa
or
stc
jle
ds
sbb
mov
test
sbb
loop
hlt
nop
mov
leave
sbb
add
jne
lock
cli
sub
ret
and
test
fildll
mov
dec
jb
or
inc
stos
xor
or
stc
andb
mov
ss
lcall
rdmsr
mov
fimuls
repz
adc
pop
sbb
adc
mov
imul
out
in
xlat
xchg
inc
js
in
xor
lret
jb
bound
out
jb
and
cmp
fs
mov
cmpsl
inc
adc
dec
cmc
jne
jbe
js
cmp
xchg
sbbb
out
push
xchg
subl
outsl
and
add
cmp
jecxz
shll
shl
pop
pop
dec
mov
rclb
mov
jecxz
dec
xchg
mov
inc
insb
inc
fs
sbb
aad
add
call
adc
scas
dec
call
sahf
sbb
and
pop
loopne
adc
sbb
jp
mov
sub
test
popf
push
js
fldl
nop
jnp
mov
ja
lods
sub
test
push
ljmp
cmp
insb
out
xchg
adc
sub
fdivr
sbb
jbe
adcb
fwait
mov
out
pop
ret
lea
lret
out
addr16
cmp
cmp
inc
sbb
fucomp
mov
add
clc
fdivl
xor
or
dec
cmp
popl
dec
nop
mov
or
xchg
jg
jne
xor
lret
cmp
xchg
int3
testb
fs
inc
inc
shlb
cmpsb
cwtl
clc
lea
pop
push
sarb
jns
sub
lds
rorl
jecxz
xchg
subl
fs
or
dec
pop
xor
sub
mov
add
aaa
jno
pop
xchg
cmp
lcall
adc
imul
pop
cltd
xchg
mov
les
gs
sub
out
jae
ja
push
loopne
pop
and
test
in
mov
fidivl
stos
mov
cli
pop
adc
xchg
adc
pop
ds
cmpl
movsl
mov
xor
adc
mov
aam
popa
sub
pop
xchg
lock
pop
jne
push
out
jnp
dec
jb
and
xchg
xor
gs
xor
xchg
jne
mov
inc
jmp
jmp
pop
pop
loopne
shl
add
cmp
shll
lods
pop
rcrl
add
mov
out
icebp
rcl
push
xchg
dec
mov
xor
lret
xor
add
xchg
js
add
mov
mov
movsl
enter
cmpsl
add
or
popa
andl
rolb
jnp
xor
and
call
jecxz
std
xor
int
lods
fstl
or
pop
jge
sbb
pop
sub
xor
mov
sub
pop
jmp
ss
outsl
repz
js
mov
xchg
mov
adc
in
aaa
adc
fisttpll
sub
ljmp
adc
daa
add
mov
andl
inc
xchg
hlt
inc
insb
cltd
ds
rcrl
pop
pop
jmp
iretw
in
popa
ret
jmp
dec
addl
mov
or
sti
int
mov
jmp
xchg
pop
and
jno
repz
jnp
pop
test
mov
push
xchg
lcall
outsl
lahf
ficoml
lods
pop
pop
fwait
lahf
std
or
testb
jmp
jns
loop
repnz
addr16
pop
mov
pop
xchg
cmpsb
mov
and
or
xchg
popf
add
out
addr16
test
loope
insb
addr16
out
xchg
inc
or
push
pop
pop
mov
shr
sbb
and
xor
add
aas
jns
xor
lcall
cmpsb
ret
std
inc
jno
adc
adc
and
mov
cli
outsl
addr16
pop
test
pusha
out
and
push
sahf
pop
mov
enter
inc
push
push
inc
lds
sbb
lock
mov
movb
lock
hlt
cmp
mov
call
adc
cmp
jns
cltd
fisttpl
sbb
sbb
inc
hlt
js
jl
shl
daa
pop
inc
lret
js
xchg
jg
popa
pushf
rcll
aad
test
cmp
mov
loopne
cmpsb
call
adc
mov
adc
dec
aaa
sarb
push
fnsave
dec
xchg
push
adc
in
jbe
mov
dec
dec
mov
popf
mov
gs
adc
sub
push
gs
push
rcrb
ja
lods
ret
ja,pt
test
add
aaa
daa
cmpb
je
out
and
sub
int3
ljmp
into
push
xchg
fstp
sbbb
ret
sqrtps
xchg
lock
xchg
mov
adc
jno
les
stc
or
mov
sub
push
aad
sub
shll
jbe
xor
insl
outsb
push
pop
ret
cmp
or
add
out
jge
mov
lret
xchg
xchg
dec
pop
das
sbb
sbb
scas
sbb
into
add
adc
cli
cmpsb
mov
jnp
xor
jno
push
and
jo
dec
lea
push
fildl
dec
cltd
lods
inc
xchg
jo
arpl
mov
xchg
ffree
aad
cmp
pop
pop
cmp
lods
pop
fsubp
data16
rorl
stos
jmp
rcrl
cmp
add
into
mov
xor
xor
push
fsubrp
pop
rclb
enter
je
and
pusha
jecxz
stos
cwtl
sub
xor
repnz
nop
cmp
or
mov
ret
mov
int
jmp
push
std
dec
lcall
int
jnp
jns
cmp
inc
mov
pop
cltd
movsl
and
popa
std
xlat
mov
imul
mov
popa
std
int3
jp
mov
xchg
adc
loop
mov
xlat
add
addr16
pop
mov
loopne
adc
js
call
jo
pusha
enter
xor
mov
mov
popf
dec
pop
out
xchg
pop
jge
ljmp
mov
xor
or
sub
sbb
push
or
aam
cld
dec
cmp
jae
lds
cld
and
xchg
rolb
mov
mov
jns
pop
enter
stos
adc
jmp
dec
outsl
jge
lds
icebp
jg
xchg
dec
in
fstps
adc
sarl
bound
outsl
dec
imul
xor
lcall
sbb
sub
aaa
ficoml
loop
mov
pop
cltd
in
test
push
loopne
gs
add
and
roll
sbb
mov
add
sbb
inc
push
test
mov
and
xchg
sbb
or
cwtl
daa
jecxz
inc
test
fidivrs
xchg
and
aam
jo
sbb
mov
pop
xchg
in
arpl
addr16
pusha
pop
mov
inc
lea
pushf
fdivl
in
je
aas
add
push
test
jae
adc
mov
fistps
pop
jno
xchg
push
and
into
or
inc
cmp
mov
mov
or
jae
jmp
mov
mov
xchg
pop
fnclex
pusha
aaa
adc
mov
mov
or
xchg
sub
push
punpckhdq
test
jns
push
ret
out
add
out
adc
fcmovne
and
scas
jne
repnz
inc
pop
scas
ja
jnp
jb
push
push
nop
or
pop
inc
lcall
dec
xor
mov
cwtl
mov
add
lea
mov
or
mov
repnz
addr16
cmp
in
insl
shll
fadds
ljmp
pushf
es
xor
xlat
mov
pop
pushf
push
bnd
pop
sub
push
inc
imull
xchg
mov
add
lret
inc
or
adc
dec
dec
sub
sub
hlt
pop
cmp
or
mov
adc
pop
push
fimuls
push
adc
cmp
lods
jb
mov
cltd
xor
cmp
sbb
mov
iret
leave
mov
test
push
push
and
xor
pop
lods
mov
daa
or
in
pop
fmull
cmp
xchg
mov
ss
insl
adc
out
es
mov
cmp
fbld
repz
fwait
ret
aam
into
hlt
mov
jge
ret
add
push
clc
or
add
jbe
cmpl
cs
iret
les
jo
push
test
stos
es
inc
xlat
jo
lock
jbe
test
cmp
pushf
fisttpl
je
xor
iret
mov
pop
mov
adc
or
sbb
out
fmull
jns
idivl
cmp
lcall
xor
rorb
xchg
mov
sub
jle
cmp
ja
out
pop
out
jnp
pop
pop
into
sbb
gs
xor
xchg
fcomps
pop
dec
lret
jle
les
push
in
pop
jp
int
test
add
fbstp
sbb
lret
nop
mov
pop
shrb
pop
adc
repz
push
add
out
lods
lret
inc
inc
jnp
adc
fs
cwtl
mov
mov
cld
mov
push
sbbb
fs
push
dec
inc
or
adc
andb
fstps
out
jp
pop
data16
sub
cld
insb
xchg
jp
daa
jmp
loop
je
cmp
daa
test
dec
lcall
jg
sbb
add
dec
mov
jge
mov
lds
mov
ret
setne
dec
shlb
call
stos
xor
cli
jl
jge
or
mov
cli
inc
pop
and
add
pop
xlat
loopne
cmp
mov
mov
test
pop
or
jno
js
dec
jecxz
out
pop
data16
test
imul
dec
and
jbe
jno
out
cmc
loope
add
push
jge
xchg
dec
push
and
push
push
ss
xor
xor
push
bnd
sbb
pop
test
sub
dec
and
shr
or
sti
jmp
inc
mov
lods
jmp
cmpsl
push
jbe
xor
adcl
xchg
push
mov
or
movsb
or
xchg
jnp
and
xor
testl
jnp
fldlg2
cwtl
adc
popa
scas
push
mov
in
xor
out
pop
hlt
jl
mov
icebp
cwtl
push
jl
nop
dec
lcall
in
das
push
or
adc
push
xchg
fsubrl
jns
inc
xchg
pop
and
and
add
or
add
icebp
stos
out
sbb
aaa
pop
inc
pushf
pop
and
js
in
cs
rorl
adc
lcall
loop
test
pop
mov
jbe
sbb
lock
push
ljmp
xor
jge
adc
pop
ds
jge
cmpsb
int
ljmp
jns
or
stos
mov
int
nop
iret
add
push
lahf
fisubrs
cmpsb
jmp
pop
scas
sarb
jl
cltd
sub
imul
mov
ds
loopne
xlat
aad
stos
xor
sbb
mov
sbb
pop
xchg
xchg
add
mov
out
addl
sbb
nop
adc
xor
scas
insb
popf
icebp
setg
ja
fcmovbe
ret
ljmp
outsl
fwait
sahf
hlt
pop
popa
pop
adc
mov
xchg
sub
mov
pop
xlat
mov
test
outsl
es
push
imul
lea
inc
jbe
xchg
mov
or
icebp
and
sub
mov
lret
dec
aas
cltd
mov
jno
cmp
mov
mov
jb
ljmp
sub
ljmp
sarl
jmp
sub
dec
repnz
cltd
mov
or
mov
hlt
push
inc
insb
movsb
out
pop
add
mov
cwtl
inc
out
icebp
outsb
mov
push
sub
scas
or
or
push
imul
and
int
stos
pushf
mov
bound
fs
es
imul
int
push
sbb
pop
mov
ljmp
gs
in
xor
test
out
mov
sub
inc
pusha
add
out
ja
div
clc
ret
lods
push
in
xchg
mov
mov
ss
outsb
inc
inc
push
popf
and
pushf
dec
push
mov
cmp
or
test
loope
pop
imul
inc
dec
jne
mov
sti
in
jne
stc
sbb
mov
aam
popf
add
outsl
sahf
inc
jg
xchg
sub
sub
cmp
rcl
mov
dec
je
cltd
pop
bnd
add
mov
pop
dec
ret
pop
aaa
add
pop
xchg
inc
in
ret
pop
push
loope
inc
inc
nop
insb
xchg
mov
pop
fsubr
pushf
mov
test
mov
adc
out
repz
sbb
sbb
mov
enter
pop
inc
xchg
jbe
cmp
and
mov
popf
stos
dec
pop
outsb
es
and
sub
mov
mov
int3
loop
and
inc
bound
adc
add
inc
repz
dec
xchg
add
jl
mov
mov
lea
jl
add
mov
sahf
cmc
nop
or
sti
cmpsb
xlat
repnz
negl
sub
sub
sbb
push
dec
sub
mov
push
icebp
xchg
sbb
fcom
and
or
jecxz
add
hlt
or
push
cltd
vpmacsdql
sbb
dec
mov
dec
push
push
stos
cmp
pop
add
lcall
je
mov
test
push
mov
and
shlb
push
mov
in
jnp
and
pop
mov
push
imul
cmpb
daa
jno
jg
push
mov
jl
out
adc
xchg
int3
std
mov
in
mov
dec
cmc
stc
push
add
inc
pop
fnstcw
outsl
mov
adc
das
inc
mov
loope
lcall
int
in
and
xchg
lcall
adc
jg
mov
inc
shrb
sbb
adc
scas
dec
adc
and
and
aam
dec
lret
dec
in
in
lret
movsb
jg
shrb
pop
pop
jge
je
testb
lock
leave
js
testb
data16
or
lahf
fcoms
inc
add
xchg
cmp
sub
pop
into
lret
sub
out
dec
hlt
fsubrl
ss
mov
es
ds
push
jp
and
scas
xchg
add
mov
mov
jae
repnz
xorb
out
push
and
fidivs
mov
scas
repz
ljmp
sti
sahf
mov
lods
arpl
xchg
fs
loope
sbb
mov
pop
cli
jle
jecxz
cs
in
push
dec
push
cmp
sub
and
cmc
aam
mov
jbe
sti
or
pop
outsb
insl
aad
lea
push
movsl
push
pop
sahf
adc
adc
loop
push
push
pop
pop
daa
incl
popf
cmpsl
mov
daa
fisubl
push
cltd
mov
mov
dec
and
jmp
pushf
insl
mov
sub
loope
std
xchg
mov
rorl
mov
or
pop
jp
jbe
int3
sbb
xlat
sti
jmp
out
sub
and
add
outsb
scas
sub
xchg
fimull
fs
test
cwtl
fcmovbe
arpl
loope
xchg
lock
jnp
pop
and
fistl
push
mov
push
mov
inc
in
push
aaa
ret
pop
push
pushf
push
pop
push
xor
sbb
push
lods
adc
jns
rcrb
lds
ja
out
cld
pusha
xor
push
inc
adc
cmp
pushf
gs
stos
js
pop
iret
sbb
adc
mov
xchg
addr16
xor
pusha
mov
mov
mov
push
mov
pop
mov
lods
cmp
movsl
xchg
cs
jecxz
mov
pushf
lea
dec
pop
test
sub
jl
ret
push
outsl
sub
dec
xor
into
fidivs
mov
jg
int
shrb
push
mov
cmp
in
mov
aas
lock
fs
mov
add
in
divb
cmp
lret
repz
or
jns
add
pop
push
xchg
xorb
les
repz
pop
rcl
push
pop
mov
lds
mov
sub
ret
sahf
dec
lret
mov
mov
insb
out
int3
xchg
test
dec
and
sti
mov
mov
pushf
rorb
repnz
cmp
and
ret
dec
push
popf
push
repnz
xorb
loopne
add
jo
mov
mov
xor
sub
xor
sbb
mov
out
pushf
add
pop
mov
pop
xor
imul
add
enter
adc
jne
mov
lds
adc
fsubr
cmc
add
push
shrl
popa
xor
dec
push
xchg
mov
xor
push
test
lock
fadds
jne
cmp
mov
shll
ss
adc
stos
int3
std
lods
imul
cmpsb
adc
mov
jmp
frstor
fbstp
cmp
mov
mov
stc
push
mov
fwait
push
unpcklps
ljmp
mov
ret
dec
lret
and
mov
out
cs
repnz
lods
inc
jno
or
bound
and
mov
and
add
mov
mov
gs
push
in
adc
std
mov
into
cmp
inc
out
imul
xchg
cmp
xlat
xorl
jl
add
ss
int3
sbb
add
adc
push
xor
mov
and
mov
push
test
out
or
jae
outsl
pusha
ss
and
inc
sbb
dec
jno
sbb
mov
push
or
std
xor
cltd
mov
mov
jl
jae
xor
cld
add
popa
ds
ja
arpl
call
push
es
stos
in
cmp
or
mov
push
push
addr16
cwtl
mov
sti
das
pop
xor
repz
fsubl
jg
push
test
dec
popa
je
call
dec
inc
data16
jbe
bound
push
push
push
enter
test
xchg
out
ret
sbb
push
xor
out
mov
insl
mov
sub
or
xor
cmpsl
sub
iret
fisubl
or
lods
rcr
mov
enter
cmc
jl
cld
adc
enter
popf
ja
mov
sbbl
push
repnz
mov
sub
dec
mov
into
xor
and
bound
les
mov
dec
test
dec
popa
xor
jp
pusha
push
gs
es
sbb
popa
iret
add
sbb
bnd
sub
lea
or
rclb
adc
cmp
cmpsb
ss
rcrl
sahf
in
addr16
stos
mov
mov
cmovne
mov
mov
stos
and
pop
out
cmp
xchg
inc
movsb
iret
fildl
sbb
push
pop
adc
xchg
out
pop
and
insb
int3
dec
cmpsl
les
mov
sbb
test
cli
movsb
cmpsl
and
xchg
in
sbb
adc
or
jo
repnz
dec
adc
iret
cmp
outsl
pop
sbb
mov
lret
add
ljmp
das
xchg
ret
xor
cmpsb
inc
popf
sbb
lret
mov
mov
mov
pop
xchg
jb
jl
push
nop
addr16
pop
mov
mov
xor
and
push
adc
adc
mov
mull
pop
or
adc
pop
cmp
fadds
or
adc
push
sbb
add
into
cmp
and
pop
in
pop
xor
flds
cmp
test
sub
bnd
jnp
out
popa
cmp
roll
icebp
dec
lea
xchg
outsl
jmp
mov
mov
std
daa
xchg
pusha
push
pop
and
sub
mov
ds
mov
ja
and
icebp
adc
cs
adc
sbb
test
orl
or
ss
loopne
mov
test
fsub
adcb
lahf
inc
rorb
fwait
icebp
sti
or
cmc
cmc
xchg
jo
jo
jnp
les
or
push
adc
mov
or
cmp
aam
dec
jle
fstl
ss
or
push
stos
cmp
aas
xchg
inc
js
ljmp
testb
test
xchg
or
aad
in
xchg
jmp
dec
pop
add
lret
mov
pop
pop
pop
mov
clc
jg
cmp
int
cmp
adcl
pop
mov
xlat
push
in
mov
fwait
xchg
adc
fsts
xor
test
xchg
ret
cmp
ficompl
in
add
cltd
mov
lcall
das
xchg
mov
xchg
and
imulb
and
ljmp
and
mov
fdivrs
jl
fbstp
ret
insb
pop
mov
test
std
orb
into
mov
test
lahf
es
insl
pop
lock
sbb
adc
imul
aam
subl
test
inc
mov
jp
das
mov
repz
push
orl
dec
fwait
ret
dec
mov
lret
icebp
aam
sti
test
mov
fs
xchg
pushf
xor
push
and
js
pop
dec
insb
push
cmpb
int3
sbb
les
mov
jb
pop
push
orb
test
arpl
loop
jge
sbb
inc
cld
mov
test
repnz
je
test
mov
push
cmpsb
cmpsb
mov
and
repz
mov
dec
inc
outsb
pop
test
cltd
pop
lcall
or
mov
inc
push
ss
add
dec
dec
mov
xchg
data16
pop
adc
sbb
cmc
inc
and
sbb
pop
loopne
movsl
pusha
or
rcrl
movsl
xor
lcall
ljmp
in
mov
mov
cli
call
int
jle
cmp
ljmp
shlb
lods
les
lods
sub
fildll
out
ss
xchg
test
leave
push
cltd
pop
push
xor
stos
push
adc
sub
iret
repnz
fs
jbe
adc
jecxz
and
add
loopne
or
icebp
xor
sub
mov
sub
test
add
mov
repz
bound
hlt
test
insl
dec
hlt
adc
mov
mov
add
dec
pop
cli
dec
adc
testl
les
rorl
sbb
pop
mov
out
mov
inc
imul
outsl
sbb
sub
pop
rol
sbb
fwait
add
push
mov
sub
movsl
and
outsb
sub
jne
and
or
icebp
xor
das
lock
sub
ss
dec
or
xchg
mov
fwait
outsb
ror
adc
stos
cwtl
imul
xor
adc
or
ja
pushf
dec
enter
ficomps
ret
push
and
int3
xstore-rng
cmpsl
add
repz
sarb
push
lock
mov
push
xchg
xor
jae
sarl
mov
sbb
xchg
test
mov
icebp
mov
sbb
ret
adc
adc
sbb
cltd
mov
aad
fsubrp
adc
mov
jnp
mov
jmp
pop
adc
xchg
nop
insl
xor
pop
stos
enter
lret
xor
pop
mov
popa
cmp
mov
aas
push
push
or
leave
dec
stos
jo
pop
xor
push
lret
jne
cwtl
int
cltd
jb
std
scas
mov
out
sbb
xlat
jecxz
jecxz
js
jbe
test
popf
pop
push
ret
in
lret
clc
lods
lcall
dec
adc
fcmovu
mov
push
decl
cmpsb
ss
into
lea
or
mov
mov
lock
jp
out
enter
xchg
movsb
loopne
das
jns
shr
push
mov
in
adc
sub
push
vmwrite
mov
cmc
outsl
shlb
jae
cmp
leave
out
xorb
in
sub
inc
mov
mov
mov
push
cli
dec
fildll
sub
sahf
imull
lcall
orb
inc
jp
orl
das
dec
add
pop
orb
xchg
push
testl
fldcw
insb
lock
sub
lods
pop
xchg
and
xor
cmp
push
hlt
lahf
jnp
lahf
add
sbb
call
sbb
les
adc
icebp
fisubl
xchg
nop
mov
mov
pusha
aaa
sbb
sub
sbb
sti
daa
mov
sti
mov
adc
xor
test
add
outsb
dec
lret
aad
lock
aad
stos
cmp
scas
jb
shlb
xchg
jnp
int
jp
ret
sbb
cld
out
push
dec
cld
pop
xchg
imul
cmp
mull
testb
js
pushf
jns
les
orb
in
sub
adc
lret
adc
enter
mov
ljmp
dec
push
aas
mov
or
mov
int3
imul
and
lcall
and
push
xor
sbb
push
iret
popf
stos
and
cld
cwtl
lods
cmp
fidivs
xchg
out
loopne
mov
dec
jne
data16
inc
fistps
sbb
dec
out
inc
xchg
insb
push
pop
nop
mov
fwait
sub
test
inc
jecxz
push
js
jmp
ret
jnp
dec
mov
jge
sub
adc
shrb
and
push
add
mov
fildll
fisubrs
mov
mov
fildl
scas
push
sahf
rcrb
sbb
sbb
lret
stc
pop
cmpsb
add
out
into
ret
iret
cmp
dec
popa
nop
xchg
xlat
fisubrl
mov
fs
xchg
xlat
inc
mov
js
sbb
add
lock
cmp
mov
mov
in
xchg
enter
outsl
dec
jle
in
dec
in
cli
out
popa
push
add
xchg
test
shrl
ds
dec
lods
adc
mov
aas
sahf
lcall
and
and
and
std
mov
test
cs
stc
data16
mov
std
outsl
rclb
or
pop
xor
cmovl
frstor
jb
mov
cli
cltd
repz
and
ret
ret
in
enter
dec
jmp
ds
psadbw
sbb
test
into
or
std
sbb
and
ljmp
cltd
inc
icebp
cmp
push
sub
loopne
jno
xchg
xchg
inc
loop
imulb
cwtl
pusha
and
xor
and
testb
js
adc
xchg
js
or
daa
stos
test
dec
dec
and
fmuls
adc
jl
fisttpl
arpl
sahf
jb
cli
xor
sbb
sbb
sarl
pop
test
sarb
aaa
push
pushf
mov
std
aam
add
jne
xor
and
idivb
out
inc
mov
lds
mov
mov
mov
xor
cmc
popa
xchg
pop
mov
xor
pop
cs
loop
jl
jp
sub
mov
inc
adc
or
cmp
adc
sub
pop
cmp
mov
sub
int3
sub
jno
aad
mov
roll
adc
pop
adc
outsl
fisubrl
cmp
sti
mov
or
xor
fcoms
sbb
pop
or
and
movntq
mov
loopne
cmpsl
or
fwait
stc
dec
imul
dec
rcr
stos
push
cli
cs
xchg
jg
xchg
jns
jnp
or
jno
pop
test
fisttpl
jno
mov
loopne
out
cwtl
xor
inc
test
xchg
push
jg
js
cmp
lods
call
dec
fwait
xlat
jmp
xchg
cmp
jl
idiv
sbbb
lds
fs
repz
dec
jne
cli
cmp
pop
xor
mov
jp
and
mov
cmc
stos
jmp
daa
lods
in
je
pop
in
jecxz
fwait
inc
fidivrl
jg
jo
push
or
shrb
mov
mov
mov
cmc
mov
and
pop
mov
div
hlt
cmpsl
jbe
into
lret
push
dec
ret
lods
or
dec
push
fwait
sub
addl
daa
xor
mov
dec
mov
pop
add
push
or
imul
rolb
test
jmp
rorl
lcall
es
mov
ss
dec
lcall
int
scas
aaa
negb
aaa
lret
add
sub
xchg
push
cmp
mov
clc
sub
out
dec
or
out
pop
shrl
dec
cmp
pop
push
or
cmp
stos
popa
sti
adc
push
push
dec
lock
out
sub
out
shl
lock
xchg
and
xchg
inc
ljmp
add
aad
mov
fimull
lock
lcall
repnz
jb
jo
push
push
jae
out
aaa
call
sbbb
push
or
lods
jns
scas
ffree
aas
push
pop
ljmp
adc
jbe
xor
aaa
sbbb
fisttpll
pop
pusha
pop
push
push
adc
mov
jae
aad
ljmp
xlat
sar
stos
mov
aad
movsb
imulb
inc
arpl
scas
sub
in
fsin
addr16
movsb
mov
or
push
movsb
sbb
mov
sbb
mull
loope
lea
mov
inc
mov
cltd
fistl
adc
jbe
out
jge
movsb
cmp
movsl
pop
das
inc
mov
cmp
lcall
mov
xor
xchg
xor
xchg
inc
test
leave
insb
rcrb
mov
in
cmp
mov
dec
push
mov
gs
xor
popf
mov
clts
dec
pop
stos
pusha
inc
cmp
jecxz
mov
or
test
mov
xor
push
bound
or
mov
and
outsl
xchg
or
clc
mov
inc
or
dec
fisubrl
das
repnz
sbb
in
test
or
call
ret
pop
sub
shl
idivb
xor
xchg
inc
lds
push
dec
pusha
mov
inc
jns
daa
jge
mov
mov
mov
popa
pop
xchg
mov
hlt
add
cli
mov
jno
loopne
frstor
jge
jae
testl
test
in
or
and
out
sub
mov
ret
hlt
lock
daa
mov
or
sti
pop
enter
xchg
mov
pop
mov
fidivs
pop
insl
lret
fs
push
iret
jne
aad
out
std
pop
mov
sub
into
rclb
and
outsb
pop
cltd
fildll
aaa
mov
mov
bound
xchg
pop
test
cmc
and
repz
or
jmp
jl
cmpsb
xchg
in
xor
shl
mov
push
repnz
fwait
add
push
rcr
inc
mov
adc
push
ljmp
dec
stc
pusha
outsb
push
inc
pop
stos
sub
loop
fs
inc
int
sub
out
and
sbb
call
in
ds
fsubl
in
inc
inc
or
sbb
dec
push
mov
jnp
mov
rcll
stc
pop
cmc
pop
lcall
sbb
dec
jb
push
repz
imul
inc
or
cli
iret
addr16
and
sbb
push
adc
setnp
xchg
stos
cmp
jae
icebp
out
imul
in
loope
xchg
mov
xor
insl
in
loopne
ret
push
fwait
mov
mov
fsts
xor
sbbl
adcb
inc
push
mov
sarl
and
xchg
lcall
xchg
ds
pop
movsb
lahf
cmp
and
repz
cltd
add
nop
arpl
jb
sbb
roll
jl
sub
test
test
pop
push
cli
jne
loop
rorb
jb
in
lcall
push
pop
mov
jnp
mov
loopne
repz
mov
andb
in
imul
test
xchg
fisubl
jecxz
iret
scas
xchg
in
lahf
std
add
and
not
pop
mov
nop
data16
inc
flds
cmpsl
mov
pop
push
scas
fistpll
inc
xchg
loope
mov
es
adcb
fcoms
aad
jns
sub
outsl
adc
cltd
jne
add
xor
push
aam
mov
push
ja
cmp
popa
pushf
pop
movsb
push
lock
loope
push
pop
outsb
daa
lods
movsl
inc
cs
dec
pop
inc
jle
adc
mov
pop
inc
test
mov
aam
int
shll
mov
push
sarb
push
in
xor
test
hlt
test
add
dec
xchg
aas
clc
decl
pushf
jbe
into
scas
js
mov
dec
in
dec
test
js
push
mov
jno
add
sbb
imulb
mov
loope
or
es
sub
push
mov
stos
sub
insl
call
push
cmp
outsl
repz
ljmp
cmp
lock
lds
adc
sbb
out
sbb
pushf
dec
push
insb
ret
jo
mov
bswap
pop
testb
fneni(8087
addr16
add
int
sbb
or
movsb
xor
cmp
sbb
rcrl
and
lret
fimull
test
inc
xchg
mov
stos
pop
sbb
loope
sbb
mov
and
pop
fcoms
push
icebp
mov
pop
push
pop
cmpsb
jbe
dec
lods
sub
lret
sub
cltd
aam
push
aas
inc
stc
test
xor
mov
xchg
lock
dec
cld
lds
sbb
inc
xchg
int
pop
cltd
repz
sub
inc
xchg
scas
sti
add
push
adc
lahf
fs
xor
ss
fucomi
ds
js
or
outsb
out
push
cltd
lds
jo
cli
inc
mov
push
mov
sbb
nop
xchg
dec
lret
cli
inc
inc
push
call
aas
movb
mull
loopne
jp
negb
adc
sti
out
xor
aad
hlt
jp
sub
stc
fnsave
popf
pop
xlat
addr16
jmp
push
mov
in
int
add
sbb
out
sbb
aam
insl
lock
aas
pop
rorl
cs
mov
push
repnz
rol
and
test
dec
cltd
subb
or
repz
mull
fisttps
mov
bound
je
pop
or
loope
scas
ret
add
and
ret
sub
push
call
test
cmp
int
dec
add
arpl
enter
aad
adcb
rcrb
sub
into
and
or
jo
imulb
cmp
gs
arpl
pop
loopne
stos
inc
or
ds
dec
lret
push
loope
pop
mov
mov
jmp
lahf
rcr
dec
test
dec
ljmp
loop
je
imul
fchs
cld
pop
hlt
jae
push
pop
xor
enter
ljmp
test
adc
sub
loope
repz
ror
or
pushf
mov
sub
insl
sub
mov
mov
sub
pop
pop
inc
push
lock
jp
test
inc
add
xchg
stos
mov
pop
movsb
dec
lahf
jne
sbb
popf
cld
jmp
je
xchg
pop
jl
mov
ret
lcall
pop
fdivrs
push
cmpsb
xor
ror
mov
popf
lods
iret
pop
jge
cwtl
shll
inc
sarb
or
pushf
pop
out
fcoms
add
jae
xchg
js
pop
and
push
daa
ds
add
ja
dec
jae
adc
sub
or
or
mov
sub
fucomp
scas
pop
stos
lahf
fadds
dec
xchg
xlat
xchg
lahf
push
aaa
flds
inc
jmp
lds
jno
mov
in
dec
mov
xchg
inc
push
pop
adc
adc
xlat
sub
js
data16
hlt
xchg
icebp
xchg
xor
enter
inc
dec
movsl
sti
lock
call
jmp
lret
popf
jnp
sbb
xchg
loopne
lret
fcomip
aas
inc
andb
cmp
mov
push
push
mov
add
addr16
xchg
std
push
push
xchg
dec
jg
xchg
in
lahf
mov
cld
inc
jmp
inc
divl
push
push
push
add
or
pop
cmpsb
ss
adc
cwtl
sbb
arpl
scas
shlb
or
jmp
ret
testl
ljmp
dec
lahf
push
and
mov
mov
jae
inc
cmpsb
rep
xor
js
cmp
adcl
in
int
mov
fucomip
xor
call
push
les
std
test
aad
lods
ja
xlat
xchg
loope
jl
and
add
or
xlat
in
nop
out
push
les
movsb
push
xchg
lea
mov
movsl
popf
orb
test
sbb
jl
faddl
in
sub
dec
aad
test
push
xchg
fidivrl
push
jmp
stos
ret
jo
pop
orb
nop
jns
arpl
pop
inc
sub
mov
in
fdivr
and
jne
lods
inc
loopne
mov
aas
xorb
rclb
push
imul
mov
and
jle
cld
aaa
push
sbb
or
jp
push
dec
cmc
cmp
jmp
aam
pop
xchg
repnz
subl
xor
and
rclb
push
ds
push
jae
ljmp
cmp
sti
xchg
cld
jmp
push
inc
xchg
daa
and
sub
mov
push
outsl
and
dec
andl
mov
dec
fs
aaa
pop
hlt
mov
jo,pn
idivl
jns
mov
sub
clc
adc
inc
cmp
test
dec
mov
arpl
and
das
pop
stos
push
or
pop
clc
xchg
push
mov
push
sarb
xchg
xor
cltd
je
loop
orl
or
xor
push
mov
loopne
mov
test
mov
cmp
fstpl
jns
lea
mov
or
adc
fs
push
lret
add
dec
lcall
sbb
or
mov
in
arpl
and
push
jmp
loop
daa
mov
les
dec
test
push
pop
add
mul
inc
imul
decb
not
xor
es
mov
jo
or
jmp
inc
aas
mov
insl
xchg
andl
and
clc
push
push
push
sbb
inc
inc
mov
mov
int3
sbb
cmpsb
fidivs
repnz
ds
or
hlt
add
or
daa
in
lds
js
xor
outsl
dec
push
imul
insb
mov
cmp
leave
mov
in
pop
push
cli
fwait
mov
dec
jmp
sub
pop
jl
mull
cli
adc
mov
and
movsb
fistpll
js
in
cmpsb
jns
mov
fscale
lea
cmpsb
mov
xchg
pusha
outsl
xchg
xor
or
shlb
push
pop
mov
sub
pop
cmpsl
repnz
lahf
mov
cli
or
sub
fiadds
fsub
das
push
jle
fidivrs
jns
mov
js
and
pop
rclb
js
test
adc
pop
scas
dec
jge
mov
inc
adc
ret
mov
push
lcall
mov
mov
aaa
xlat
inc
pop
or
adc
pop
ja
mov
cmp
ja
stc
sbb
movsl
xchg
xchg
es
adc
ds
inc
xor
nop
ss
iret
sahf
icebp
cmp
je
push
push
sbbb
in
xchg
popf
adc
jne
xchg
inc
or
jp
movzwl
mov
sub
cld
je
fldl
mov
test
dec
sub
cld
jmp
mov
inc
xchg
cmpsl
dec
lahf
clc
push
in
xor
add
lods
outsl
daa
jg
dec
mov
dec
fwait
sbb
cld
insl
jbe
shrl
sub
cmp
jl
imul
mov
pop
cmp
pop
push
out
fimuls
pop
xor
xchg
fistpll
mov
ja
cmpsb
movsb
test
cmpb
or
mov
mov
testb
repnz
test
mov
pop
adc
xchg
je
cltd
test
adc
pop
sbb
xchg
xchg
in
adc
xor
mov
pop
in
pop
fnstenv
out
loope
lock
push
iret
daa
mov
pop
jmp
pop
push
hlt
add
adc
scas
sarl
push
and
push
and
iret
lahf
flds
mov
popf
dec
cmpsb
xor
mov
adc
or
xchg
and
leave
les
cmp
lret
inc
xchg
cmp
mov
mov
sti
popa
and
lret
xor
cmpsl
stos
add
add
xchg
mov
stos
sub
in
push
std
sbb
lods
push
inc
add
movsb
test
push
je
sub
jle
mov
xchg
inc
sbb
xchg
test
xor
xor
dec
js
out
mov
idivb
push
push
cli
cmp
xor
dec
sub
jge
rolb
or
and
cmp
pop
lret
notl
std
sbb
add
aam
jo
mov
out
dec
sub
ss
sub
xchg
ud2
fldl
jb
test
mov
aad
enter
adc
jns
xor
imul
push
dec
sub
add
push
or
adc
mov
repnz
in
mov
mov
test
jb
aas
fidivrl
xchg
ds
push
add
mov
push
lock
aas
or
cmp
sub
dec
sahf
sti
mov
imul
sub
nop
dec
jg
clc
rcrl
mov
sbb
inc
jg
fbstp
test
loopne
clc
movzbl
fcmovnb
lcall
jbe
fldcw
push
popf
mov
fidivrs
shll
sbb
popf
movsl
dec
pushf
je
jnp
mov
lcall
sub
or
pop
fwait
loop
mov
andl
aad
insl
mov
mov
cs
dec
cmpsb
clc
jp
mov
cmp
inc
jns
mov
pop
dec
inc
stos
adc
add
inc
mov
add
sti
and
inc
or
mov
fisubs
cmp
mov
fbld
inc
push
jg
lds
mulb
xchg
icebp
out
out
daa
pop
sahf
and
call
test
push
js
in
xor
pop
add
shrb
and
shrl
ss
aaa
scas
shlb
xor
pop
adc
call
pusha
loop
shll
loope
mov
jmp
pop
sub
mov
gs
push
xchg
pop
das
ss
test
pop
adcl
adc
jmp
cmp
incl
in
outsb
cmp
aaa
ret
loopne
pop
cmpsb
mov
test
addl
inc
and
inc
div
iret
stos
cmp
cmp
pusha
pop
pop
adc
aam
inc
std
xchg
aad
loopne
pop
fnsave
test
imul
push
aam
mov
push
addr16
jp
jmp
sub
mov
imul
fildll
jp
outsl
and
and
sbb
mov
imul
mov
inc
jb
pop
in
das
dec
sub
or
setb
xlat
jg
cmp
push
into
add
je
cltd
jmp
push
inc
mov
lret
pop
cmpl
inc
imul
lods
stos
idiv
xor
outsb
scas
fwait
mov
mov
ret
inc
or
mov
cli
fstpt
sub
mov
movsb
cmp
adc
sub
mov
xchg
cltd
or
fistl
push
cmp
add
pop
sbb
test
push
or
es
mov
sti
and
or
inc
shlb
insl
or
and
dec
sub
push
push
imul
add
je
das
cwtl
insb
int3
jecxz
xchg
loope
paddusb
addl
clc
es
xchg
cmc
aas
jp
pusha
aad
fnstcw
int3
shr
sbb
jg,pn
sbb
in
jnp
aas
pop
popf
or
push
mov
sub
fistps
repnz
mov
enter
mov
mov
or
popf
adc
aad
or
clc
ljmp
lcall
adc
outsb
inc
leave
cwtl
inc
jmp
xchg
and
out
imul
fwait
hlt
dec
pop
iret
jp
mov
movsb
and
mov
daa
push
jbe
nop
mov
dec
repnz
test
mov
clc
pop
push
mov
adc
aad
add
push
loop
loope
lret
movsl
mov
mov
xor
outsl
sbb
xor
xchg
mov
inc
pop
stos
pop
cmp
adcl
inc
fidivrs
pop
dec
in
lock
notl
cmpsl
fidivrl
ret
push
mov
xchg
pushf
jnp
in
adc
std
xchg
fchs
cld
pop
sub
mov
shll
out
aam
cmp
out
push
push
cmp
inc
pop
mov
insb
loop
xchg
lcall
mov
mov
popa
sbb
inc
inc
jo
stos
insb
mov
dec
xor
out
rcrl
pop
cwtl
mov
push
push
dec
add
pop
push
leave
pop
mov
or
repnz
cmpsl
cmp
loop
jecxz
test
xchg
enter
bound
xor
lods
pop
cmpsb
pop
jb
mov
xchg
sub
outsl
das
in
dec
out
and
cltd
mov
mov
jmp
fcoms
ret
and
cmp
repnz
inc
add
mov
add
sub
repnz
push
cwtl
test
inc
mov
or
fwait
xorb
adc
clc
repnz
dec
insb
aad
mov
cwtl
cmp
xchg
lods
dec
pop
ficoms
xchg
or
cmp
adc
out
loop
pop
fimuls
add
push
sub
xor
pop
sbbb
xor
ficoms
cmpsb
add
xchg
or
push
pusha
cmpsb
xor
dec
daa
and
shll
mov
repnz
fiaddl
add
sbb
cmpsl
adc
pop
std
push
cmpsl
add
cmp
arpl
cmpsb
cmp
sub
jae
or
adc
out
jne
push
jne
push
jb
mov
movsl
movsl
test
jmp
or
push
decl
add
and
hlt
call
mov
push
clc
add
xchg
fstpl
das
stc
adc
loopne
push
fisttpll
call
mov
mov
inc
or
or
mov
mov
orb
rcr
pop
call
out
mov
jecxz,pt
lret
aad
sti
shl
push
test
arpl
adc
and
addr16
test
xchg
adc
data16
push
cmp
test
mov
ja
mov
mov
cmpsb
jl
sti
dec
and
addb
or
pop
jg
add
xor
mov
push
sub
out
outsb
fwait
sti
cmp
stos
or
inc
lret
add
les
fistpll
mov
or
sbb
adc
daa
push
add
scas
inc
mov
pusha
loop
sub
int3
cltd
cmp
clc
gs
leave
xor
daa
repz
in
cli
fsts
decb
mov
ljmp
jg
movl
inc
aam
add
inc
lock
scas
arpl
mov
nop
into
jmp
std
add
inc
mov
mov
notl
dec
insb
mov
popf
in
inc
sbb
inc
aas
add
leave
test
ret
lret
loop
push
test
or
popf
sub
int
jb
in
xor
add
fs
add
imul
cmp
sub
mov
mov
mov
xchg
cmp
jbe
cmp
cwtl
mov
pop
shrb
sbb
push
cmpsb
lods
xor
fisubrl
sub
lcall
aad
push
dec
in
insb
adc
pop
mov
test
xor
mov
cmp
sbb
dec
iret
sbb
ja
pop
dec
imul
mov
pop
cmp
aam
xor
pop
imul
cmp
dec
sti
lahf
push
and
adcb
jl
pop
xor
scas
sbb
push
loop
inc
push
or
pushf
lds
subl
mov
lods
cmpsb
sub
ret
ljmp
and
enter
fs
adc
jnp
fldcw
sbb
xor
nop
nop
add
pushf
int3
leave
aas
fisubrs
pushf
cmpsb
test
dec
adc
inc
fisubl
or
jle
jne
in
in
imul
inc
icebp
movsl
cltd
or
es
and
mull
cs
jmp
mov
sub
lds
sbb
xor
insb
jmp
dec
mov
addb
cltd
inc
sbb
jmp
movsl
xor
pop
cs
xor
mov
and
mov
andl
adc
or
push
xchg
aas
and
test
mov
inc
nop
aam
lret
ss
sub
mov
clc
cmp
sub
insl
mov
sbb
dec
mov
hlt
in
mov
out
and
repz
mov
pop
in
inc
mov
ds
adc
fs
add
mov
sub
cli
stc
pushf
adc
xchg
mov
imul
add
cmp
xchg
out
loope
push
rolb
push
push
adc
dec
out
cmp
mov
popf
sub
jge
daa
imull
pop
int
lods
ss
jmp
or
pop
mov
cmp
and
addl
jmp
dec
push
aam
daa
lret
push
cwtl
mov
pop
call
dec
shl
mov
daa
sub
loopne
negl
mov
es
adc
xchg
push
lock
or
jb,pn
pop
into
jne
adc
sbbl
add
dec
cmpsl
jmp
mov
out
sub
rolb
jge
cmp
ds
in
adc
rcr
es
fcompl
add
add
and
sbb
pop
icebp
dec
mov
or
mov
xor
sarl
fbstp
mov
orb
cltd
xor
popa
roll
repnz
sub
fwait
jae
test
aas
and
aas
dec
cmp
jo
and
sub
dec
jp
mov
lea
mov
jbe
call
sti
mov
mov
clc
inc
aas
dec
push
xor
sub
add
ret
cli
push
jp
call
gs
sbb
inc
frstpm(287
xchg
sbb
int
jno
pop
out
cmp
mov
ja
icebp
cmp
sahf
cmpsl
adc
aad
ret
xor
addr16
arpl
ljmp
jmp
mov
imul
movsb
cmp
aaa
out
out
fadd
in
pop
aam
imul
push
xchg
jmp
dec
and
xchg
std
mov
cmpsb
insb
cmp
or
stc
ds
out
pop
mov
push
loopne
ljmp
push
mul
adcb
stos
xchg
and
hlt
sub
mov
sub
bound
or
cli
push
les
sub
or
add
fsubrs
push
stc
shrb
xor
mov
pop
in
jno
testb
inc
dec
push
mov
pop
or
jno
xor
fsts
adc
out
imul
mov
inc
mov
mov
sub
lock
mov
sbb
add
out
pop
xchg
cltd
cmp
icebp
jb
cmp
cs
sbb
popf
inc
mov
push
mov
mov
jmp
fsts
mov
inc
jne
subb
arpl
xchg
jns
int
fsub
rcll
mov
jp
sbb
test
fcmovnbe
insb
into
pushf
xchg
outsl
xchg
call
sbb
iret
pop
or
and
or
pusha
and
movsb
mov
adc
stc
scas
pop
cltd
lods
cmp
cmp
insb
xor
cli
mov
or
je
outsb
mov
std
adc
fmul
fildll
push
lods
cld
cmpsl
dec
pop
and
leave
jp
fwait
addl
rcrb
out
mov
and
push
iret
aas
cmp
xlat
xlat
sub
pusha
and
sbb
popf
dec
and
aaa
sub
dec
lret
inc
ja
or
js
inc
pop
mov
lret
fisubs
pop
js
push
test
ud2
add
push
stos
loope
dec
add
fidivrs
lret
ja
xchg
sbb
pop
xchg
das
cli
xchg
mov
and
ljmp
and
lcall
xchg
ss
mov
xor
mov
outsl
pop
xor
sarb
push
rolb
in
out
xor
ljmp
cmp
jns
jg
inc
ss
popa
aaa
push
test
andl
bound
loope
shlb
dec
sbb
jle
int3
mov
jnp
jge
cmpsb
pushf
xlat
ds
lods
js
out
or
movsb
dec
mov
popa
enter
pop
push
add
add
jecxz
xchg
cmp
ret
dec
fisttpll
mov
orb
ljmp
or
lret
fdiv
adc
push
notb
sbb
mov
scas
lods
pop
sub
orb
faddl
mov
fistps
mov
dec
rcrl
imul
fs
popl
push
in
push
fdivl
cmp
jnp
test
aam
std
idivb
and
adc
lss
xor
adcb
push
cld
pop
setns
shlb
test
aaa
push
test
jecxz
xlat
inc
adc
add
or
xchg
push
adc
sbb
mov
cmpsb
sbb
mov
sbb
ja
cltd
jno
jmp
jecxz
icebp
imul
fcomps
rcr
add
popf
jecxz
mov
loope
out
xchg
push
inc
jb
dec
or
xchg
push
jp
xchg
int
dec
popa
call
pop
popa
xlat
cmpsb
lea
lret
clc
xor
mov
outsb
pop
xor
adc
in
mov
pop
mov
pop
sbb
jp
dec
inc
add
popf
xor
or
repnz
and
rcrl
jbe,pn
cmp
fcoml
leave
lret
sub
adc
popa
push
outsb
testl
pop
pop
adc
pop
shl
das
lahf
cmpsl
nop
add
icebp
sbb
pop
lret
xor
or
popf
mov
dec
sbb
data16
hlt
mov
iret
xchg
cmpl
xchg
push
cmp
inc
test
or
or
and
inc
and
icebp
jmp
jns
pop
jo
ljmp
sbb
mov
mov
mov
jl
fidivrs
cmp
sub
xchg
dec
adc
iret
cmpsb
not
inc
data16
push
sub
mov
push
push
pop
xchg
add
cwtl
mov
xor
mov
inc
push
mov
xchg
cmp
cmp
test
xor
fistps
leave
mov
dec
xor
xchg
mov
adc
mov
inc
mov
jb
int
or
push
xor
push
cmp
add
adc
mov
jle
pop
ret
pushf
lret
push
fprem1
jae
outsl
mov
dec
sub
in
and
inc
mov
xchg
movsb
and
mov
inc
rclb
push
shr
subl
das
stc
inc
adc
sub
loop
sub
imul
and
or
popa
xchg
jnp
xchg
cmp
jecxz
jbe
insb
xchg
in
mov
jp
aam
ds
inc
pop
stc
inc
pop
sub
mov
mov
pop
push
jns
loopne
mov
sub
addr16
pop
xor
ja
ja
jne
or
mov
ja
sbb
mov
xchg
lock
test
lret
or
scas
enter
aad
es
das
dec
xor
leave
sti
inc
insl
movsb
out
sub
jo
push
mov
test
sbb
mov
mov
and
data16
cmc
xchg
jp
dec
cmp
mov
push
pop
cli
out
mov
loop
or
dec
jp
cli
pop
roll
adc
sub
nop
shl
hlt
dec
pop
xor
imul
sbb
cmp
ss
xchg
je
fsubr
dec
sbb
negb
ljmp
and
jge
push
cmp
lods
sbb
les
test
add
lret
push
gs
out
out
jae
jge
sub
repnz
cmp
ja
sbb
je,pn
dec
dec
mov
out
dec
data16
mov
and
enter
xchg
mov
inc
pop
sub
clc
mov
pop
dec
testb
test
aam
jno
ret
dec
jmp
imul
iret
leave
push
adc
cld
push
pop
nop
in
out
fisubrl
xor
in
cmp
inc
pop
jnp
and
sub
stos
les
sub
adc
int
add
push
std
inc
mov
lret
jmp
iret
cmp
iret
jle
pop
rcrl
daa
mov
mov
mov
popa
rorb
mov
pop
rcrb
lahf
cmpsb
js
xchg
cli
mov
scas
push
push
in
repnz
cmpsl
ss
cld
inc
mov
adcl
adc
fnsave
movl
rcll
int
sub
mov
push
imul
mov
imul
dec
sub
fnstcw
lods
cwtl
and
adc
push
add
clc
mov
iret
ljmp
loop
push
pop
inc
mov
adc
sbb
insl
push
out
xchg
scas
lds
cmp
mov
xor
iret
aam
push
mov
jns
and
jbe
sbb
mov
iret
mov
jmp
les
arpl
push
xchg
push
repz
aas
js
pop
rcll
psubusb
leave
cld
adc
xchg
mov
mov
fdivr
out
outsb
push
fcoml
lods
pop
mov
int
sub
scas
dec
ficomps
mov
mov
ds
inc
subl
mov
dec
add
jnp
mov
fistl
xor
mov
mov
sub
out
add
or
repnz
rcl
lret
or
fcompl
out
push
mov
stos
mov
mov
mov
fisubrl
dec
in
sbb
mov
sub
xchg
mov
imul
cmp
int
sbb
mov
repnz
jmp
jne
add
pop
xchg
and
sub
cmp
call
sub
mov
pop
ss
or
loope
shll
jge
fmull
mov
mov
sbbb
or
nop
sbbl
cmpsl
stos
rcll
outsl
add
and
inc
sarl
sbb
gs
popf
inc
icebp
jnp
dec
mov
out
fnstcw
jo
add
cwtl
lcall
nop
in
outsl
adc
xchg
dec
sub
fwait
movl
stc
or
cmp
pop
mov
dec
mov
push
push
daa
push
jne
mov
sbb
stos
rorl
inc
mov
arpl
cli
daa
aad
addb
pop
fldenv
push
dec
shr
and
and
mov
call
orl
div
cmpl
mov
cwtl
shrb
cltd
mov
sbb
pop
xor
push
sbb
add
cs
xchg
dec
pop
insb
mov
dec
dec
jnp
fistps
pop
inc
inc
mov
stos
add
fistpll
mov
mov
into
sub
ja
mov
and
stos
pushf
daa
fldcw
xchg
aad
fisttpl
shlb
scas
bound
xchg
adc
sub
aam
inc
ss
push
repnz
lea
and
xchg
out
adc
insl
ss
push
stc
cld
adcl
bound
sub
sahf
dec
ret
fisubrl
push
movsb
lods
int
gs
popf
sbb
or
sar
lods
push
int3
bnd
cmp
push
ret
cmc
push
test
shll
stos
jo
or
aad
mov
cmp
add
or
loop
int
clc
aad
out
adc
sub
push
mov
mov
data16
push
ljmp
notl
mov
imul
leave
mov
mov
repz
rorb
dec
push
je
mov
mov
scas
fmulp
sub
imul
push
lock
sbb
push
inc
jecxz
sbb
stc
jmp
xchg
jg
mov
iret
add
sahf
insl
aad
pushf
mov
lret
or
xrelease
out
movsl
xor
dec
in
into
jge,pt
jne
jbe
testl
mov
ja
lret
loopne
dec
in
sbb
jg
ds
push
cwtl
mov
and
sarl
cmp
negl
inc
divl
xor
sbbl
jnp
dec
les
aas
inc
aam
mov
jg
xor
daa
inc
loop
mov
pushf
js
add
andb
sti
jmp
add
pop
add
push
lock
lahf
cs
cmp
mov
call
icebp
push
xchg
scas
mov
addr16
adcb
push
bts
push
sub
push
sahf
lea
mov
jl
adc
jns
xchg
lret
aas
sahf
jnp
test
xchg
sahf
adc
xor
inc
repz
movsb
dec
cmpsl
xor
or
push
pop
sub
pminub
mov
sbb
push
insl
cmp
dec
inc
mov
and
push
data16
rclb
sar
lcall
jl
lock
dec
loopne
inc
sub
push
mov
mov
push
aad
pop
into
rcll
jbe
adc
or
nop
and
aam
jp
mov
and
dec
and
in
in
pop
mov
mov
sbb
mov
pop
adc
rcrl
addb
sar
jbe
int3
or
sub
cmpsb
outsb
inc
push
add
pop
sti
out
fsubp
mov
in
mov
shlb
popa
inc
insl
cmp
movsb
sahf
add
js
jae
sub
aas
adc
cmp
cmpsb
push
cmp
out
add
jp
add
mov
out
int3
repz
lea
cmc
mov
pop
inc
cmp
fyl2x
mov
jg
cld
push
xor
lea
movsl
xor
sti
out
enter
scas
clc
shl
push
and
cmp
idivb
sti
mov
lock
in
mov
mov
or
add
sub
jl
mov
imul
lods
or
xchg
je
push
and
icebp
push
inc
ds
xchg
ljmp
cmp
ljmp
sub
in
jbe
ljmp
lcall
mov
nop
hlt
cmp
lods
pop
add
xlat
inc
dec
add
mov
daa
xchg
cmp
imul
adc
jns
push
ja
xchg
sbb
das
rolb
cmpl
adc
or
sub
iret
mov
pusha
loopne
sub
fsubrp
clc
lret
xchg
or
in
xchg
jnp
xchg
mov
jl
inc
mov
gs
sub
test
jb
mov
jbe
test
sarl
xor
gs
mov
sub
mov
adc
ficompl
stc
scas
int3
sub
add
sbb
test
mov
or
push
sbb
push
insl
ret
imul
int3
out
push
sahf
mov
sub
sub
clc
mov
jbe
mov
xlat
and
fadd
dec
fildl
pop
stc
imul
cmp
nop
jo
xchg
xor
xor
adc
hlt
mov
outsb
adc
sub
pop
pusha
aas
les
sbb
xchg
hlt
iret
pushf
leave
addr16
push
xchg
ss
clc
aas
outsb
sbb
outsb
cmp
aaa
cs
out
mov
lcall
fs
pcmpeqb
ljmp
adc
mov
rorl
lods
in
mov
bnd
pop
fbstp
aad
or
les
stos
fs
and
testl
and
and
cmpl
pop
int
and
push
loop
mov
lods
iret
fs
jno
mov
leave
mov
xor
pop
in
test
and
or
adc
xchg
sub
jo
sbb
jg
arpl
ret
xorl
mov
jg
mov
leave
dec
shl
mov
xchg
mov
divb
lahf
lahf
out
loopne
pushl
jg
clc
inc
test
push
push
repz
cmpsb
jecxz
imul
inc
ficomps
push
dec
testl
dec
sahf
out
addr16
rcrb
ficompl
sbb
mov
sbb
dec
cmovnp
push
inc
dec
iret
lcall
pop
push
and
xlat
lock
mov
icebp
jmp
sbb
fistpll
adc
orl
and
adc
and
adc
jno
dec
push
cmpsb
xor
mov
es
xchg
push
mov
aam
aad
lahf
jbe
ficoml
xlat
sub
xor
mov
leave
icebp
in
lods
sahf
sub
dec
cmp
ljmp
fs
adc
sub
insb
int
push
shlb
mov
lret
js
inc
lods
and
cmp
xchg
imul
mov
push
pop
mov
mov
aam
or
mov
inc
cmpsb
mov
add
fnstsw
xchg
scas
imul
repnz
popa
addr16
out
mov
sbb
xorl
push
adc
loope
popl
fwait
lock
pop
sbb
pop
pushf
mov
lahf
scas
jmp
addb
or
push
xchg
jge
pop
shl
jmp
adc
cmp
call
mov
je
std
daa
mov
mov
fists
and
lods
adc
scas
lahf
bound
out
sub
or
movsl
fimuls
inc
nop
arpl
add
push
adc
pop
pop
push
enter
and
push
jge
xchg
adc
incb
hlt
xor
push
int3
cmpsb
mov
cmpsb
jb
jle
dec
mov
scas
pop
xor
mov
imul
ljmp
push
pusha
sub
push
mov
ret
cmp
add
sub
xor
cmp
call
or
sbb
add
inc
ja
pop
jnp
enter
sti
cmp
daa
ss
int
adc
dec
mov
xchg
test
shl
push
or
xor
jo
and
and
dec
mov
add
cmp
mov
lock
cmpb
xchg
lds
fs
and
cli
push
inc
xchg
ret
js
testl
and
xchg
stos
sbb
pop
and
hlt
jmp
loope
cmp
cmp
popf
repnz
arpl
cwtl
mov
loop
cwtl
int3
clc
aas
nop
repz
lcall
pop
dec
hlt
push
and
sbb
icebp
test
sarb
ret
stc
nop
out
into
test
cwtl
adc
mov
mov
xchg
mov
cli
fmul
inc
sbb
stos
bound
outsb
addl
pop
les
or
mov
dec
jns
rcll
sub
sub
sbb
mov
xchg
xchg
cmp
pushf
gs
loop
pop
add
xor
cmc
sub
out
movsb
cmpsl
sub
pop
mov
inc
jge
data16
mov
mov
inc
push
inc
mov
cmc
cltd
ja
imull
popf
mov
lret
repnz
enter
rorb
jnp
adc
adc
xchg
xchg
push
or
test
mov
arpl
mov
ja
inc
jge
inc
in
pop
add
mov
and
sub
or
mov
mov
pop
or
adc
jno
jmp
adc
ljmp
or
ret
cmpl
rcl
mov
cmp
les
mov
mov
loop
xchg
stos
xchg
insb
fidivrl
push
ret
jns
xchg
insl
jbe
out
mov
testl
inc
fpatan
inc
pop
std
sar
jo
clc
lods
scas
lods
dec
popl
mov
lods
sub
idivb
push
out
mov
dec
sbb
mov
gs
stos
dec
pop
pop
les
or
sub
adc
loopne
add
std
scas
or
mov
fs
iret
fisubrs
ret
clc
das
pop
push
arpl
add
outsl
pop
scas
sbb
push
inc
fcomps
sbb
aam
dec
dec
es
popf
int3
loopne
mov
out
imul
adc
test
dec
pop
pop
cwtl
out
ja
pop
popf
in
loope
hlt
push
inc
mov
div
jl
jp
inc
sti
xlat
cmp
out
ja
lahf
xchg
sub
pop
inc
lret
mov
mov
cmp
das
push
mov
push
sbb
out
sarb
rcrb
xor
mov
push
aaa
inc
xchg
loope
outsl
mov
or
enter
push
pop
ds
and
dec
pop
cmc
push
lret
cmp
push
ffreep
popf
mov
adc
push
movsl
mov
adc
test
std
sarl
in
outsl
add
pop
cmpsb
and
scas
out
bnd
pushf
mov
sub
jg
cmpsb
out
ss
or
hlt
test
aaa
xor
or
out
jo
pusha
fistpl
lahf
or
cwtl
nop
icebp
jmp
dec
sti
shrl
jo
mov
push
adc
dec
mov
stc
cmp
xchg
ret
leave
mov
cmp
xor
cmp
idivl
outsb
clc
and
push
xchg
sbb
push
nop
jle
adc
fisttps
jmp
cmp
test
and
push
call
scas
dec
adc
jg
cmp
mov
scas
fdivl
enter
jns
mov
leave
jecxz
shlb
sti
fimuls
xor
jo
mov
lea
jnp
out
fistps
sbb
fimuls
push
rol
xor
push
ret
xchg
mov
sbb
pop
int
xchg
jmp
jecxz
mov
andl
mul
mov
jmp
adc
push
xchg
push
xchg
mov
aad
dec
and
ret
ss
xor
mov
cwtl
push
adcl
inc
call
cmc
dec
inc
lahf
lcall
or
push
pop
mov
sti
inc
sahf
fsts
iret
in
adc
out
lcall
cmc
fnstcw
sbb
js
sub
fidivs
lret
dec
add
push
out
scas
or
push
sbb
xchg
xchg
int
sub
inc
xlat
scas
movb
jno
add
mov
dec
or
es
sbb
mov
pop
sub
enter
mov
pop
inc
adc
aad
jmp
push
xor
pop
nopl
inc
lods
push
in
cmp
jns
xchg
test
into
pop
dec
mov
popa
lds
pop
shlb
jne
pop
push
cmp
repz
dec
jnp
pop
in
xorb
stos
jmp
jbe
ficompl
push
cld
and
mov
xchg
and
out
or
pop
mov
scas
push
outsl
in
jg
in
mov
pop
out
ret
sub
repnz
adc
faddl
setne
ret
test
incl
inc
ret
arpl
popa
xchg
pop
mov
mov
add
jge
cmp
in
adc
orb
inc
loope
and
fnstenv
sub
cmpl
js
xchg
and
sbb
mov
test
push
lock
inc
mov
pop
xor
jecxz
ret
shld
lahf
xchg
xchg
fisubl
out
or
lock
push
and
inc
loope
into
mov
lds
fldt
loopne
xchg
cmp
in
test
pop
ss
popa
cltd
xchg
inc
cli
imul
adc
jecxz
push
test
mov
mov
ffree
clc
or
fstpl
cmp
bound
jns
cmp
cmp
sbb
movsl
out
into
mov
bound
jne
mov
jns
push
sti
jmp
js
jb
jmp
adc
std
cmp
or
scas
mov
fiadds
in
dec
jno
xchg
test
btr
or
imul
lods
sbb
lahf
mov
or
cmp
lret
dec
lret
cmp
into
rcr
jnp
xchg
cmp
movd
lcall
xor
inc
fidivl
xor
jp
and
nop
mov
add
insl
fidivrs
mov
decl
jno,pn
aas
inc
int
add
mov
xor
ret
int
insl
xor
fwait
loop
jae
pop
shrl
scas
ds
xor
inc
mov
hlt
enter
sub
dec
lret
ljmp
jp
cwtl
jno,pn
jge
mov
mov
ret
xor
mov
mov
lret
pop
dec
test
sahf
cmpsl
push
or
pop
icebp
repnz
test
adc
leave
ret
arpl
pushf
and
adc
test
test
test
imul
leave
jg
mov
inc
loop
xchg
fcmove
test
out
mov
cli
xchg
jne
in
jb
daa
jno
xchg
lret
mov
clc
xchg
sahf
ds
and
shrb
aaa
xor
adc
jbe
enter
xor
xchg
pushw
and
sub
cmp
add
dec
dec
mov
ja
lea
mov
fidivrs
or
and
imul
hlt
stc
in
mov
sub
or
xor
add
call
repnz
int3
imul
xor
pop
sub
popf
sbb
push
xorl
shl
scas
rorl
clc
push
outsb
test
movsb
xor
loope
cmp
cmp
mov
out
fcoms
adc
ficoms
popf
mov
mov
inc
and
nop
adc
xchg
sbbb
or
call
mov
sub
aam
arpl
jge
test
lahf
decl
arpl
mov
lahf
andb
push
mov
movsl
in
push
ss
and
mov
xlat
stos
outsl
mov
popa
movsb
jp
adc
jecxz
push
pop
andb
xor
sbb
xchg
lret
mov
cltd
out
pop
out
xor
xchg
mov
pusha
pop
roll
mov
lret
mov
imul
and
or
push
stos
es
mov
cwtl
jecxz
sbb
and
lods
movsb
mov
pop
cltd
jp
xor
in
loopne
mov
pusha
ja
fcmove
mov
and
mov
xor
and
es
js
scas
push
pusha
in
xor
pop
jl
jp
mov
jbe
scas
pushf
add
push
jmp
mov
fimuls
scas
xorb
jp
pop
mov
mov
es
push
lea
fwait
repnz
xchg
push
mov
xchg
cmp
jl
pop
mov
daa
gs
xchg
xor
subl
push
xchg
xchg
popa
outsl
jns
push
cmc
testl
push
lret
push
mov
popa
hlt
push
out
pop
inc
addr16
mov
xor
mov
frstor
adc
rcrb
cmp
into
push
movsl
loopne
sbb
rcl
call
mov
mov
repz
mov
mov
incl
xor
insb
loope
and
jecxz
out
shlb
clc
lods
orb
bound
push
add
and
out
test
jge
filds
in
mov
ds
jbe
xor
ret
mov
dec
xor
pop
add
rorb
imul
adc
add
daa
xor
dec
mov
sub
fcomi
je
inc
push
or
pusha
test
shll
sahf
dec
mov
es
xchg
sahf
sbb
sbb
hlt
lahf
adc
lds
test
rcll
mov
test
in
inc
std
cli
xor
adc
je
push
cmpsb
test
daa
pop
scas
outsl
clc
clc
and
das
data16
sahf
btr
push
and
and
call
sbb
xor
cmp
out
jns
inc
lcall
fisttpll
lahf
insl
lcall
jmp
adc
cmpsb
push
xor
scas
mov
and
push
inc
xchg
insl
jae
jb
inc
adc
dec
push
punpckhdq
sub
or
lods
mov
stos
dec
mov
sbb
subb
xor
andb
cmp
sbb
into
imul
xor
pop
scas
fistpl
stos
pop
enter
mov
mov
shrl
adc
cmp
sub
cs
and
and
dec
pushf
mov
outsb
lret
ret
push
movsb
outsb
subl
and
cwtl
mov
mov
pop
mov
dec
lahf
rclb
sbbb
aad
nop
movsb
in
aas
fs
pop
test
std
or
jo
inc
or
popa
nop
clc
es
and
add
mov
mov
push
cmp
arpl
divb
cwtl
dec
subl
insb
cs
xchg
add
mov
popa
in
out
sub
lods
and
out
out
pop
ljmp
dec
in
test
sbb
data16
orl
mov
xchg
mov
aaa
in
imul
mov
mov
aad
ja
mov
into
xor
add
jp
xchg
push
cmp
notl
adc
mov
fists
fimull
or
dec
idivb
sub
dec
fsubrs
pop
mov
jle
xchg
ficoml
ljmp
ss
mov
xor
enter
lods
jp
lock
mov
jle
out
pop
sub
push
in
pusha
mov
sub
daa
imul
stos
fistpll
cmp
add
bound
xchg
mov
push
and
jae
push
jae
stc
lret
sbb
xor
cmovp
aaa
aas
mov
or
popa
in
or
insl
mov
pop
not
ficompl
xor
sub
decl
mov
sub
mov
push
fcompl
enter
push
inc
iret
stc
int
mov
adc
add
cld
and
lcall
fucomip
cld
test
fmull
mov
aaa
inc
pop
mov
out
mov
push
xor
lea
stos
cmp
add
stc
mov
mov
or
pop
sub
out
int
rcrb
sub
lret
popa
add
out
push
sub
add
cmpsl
js
jg
stos
push
mov
aas
test
repnz
gs
lods
add
xchg
outsb
and
pop
inc
add
rclb
xchg
ret
fbld
movsb
sub
jns
jo
aam
test
imul
and
sbb
int3
mov
inc
fbstp
mov
fisttps
add
imul
ja
sar
outsl
sbb
dec
and
popl
repz
jnp
add
dec
mov
jmp
setge
and
scas
mov
shlb
test
int
pop
call
push
mov
and
or
mov
xchg
pop
outsl
mov
das
pop
aam
adcl
insb
mov
mov
imul
pop
hlt
std
sbb
loop
pusha
bound
push
loop
xchg
or
iret
sbb
gs
cs
sub
inc
or
pop
in
xchg
ja
ss
mov
pop
sub
xchg
sub
jge
movsb
fisubs
jbe
inc
mov
addb
dec
rolb
jl
and
xchg
adc
xchg
adc
fdivs
mov
sbb
les
sbb
loop
inc
mov
sub
in
jl
and
inc
ljmp
sar
ds
in
mov
dec
mov
xchg
fdivrl
test
jns
aas
sti
iret
xor
jb
push
shll
das
pop
pushl
or
andl
add
gs
rorb
bound
inc
test
mov
jnp
insl
int3
jecxz
mov
add
fdivrp
mov
push
leave
push
sbb
gs
mov
addb
mov
loopne
mov
and
cld
sti
pop
into
dec
xchg
ss
mulps
cltd
test
mov
inc
adc
xor
gs
mov
in
jmp
fstpl
lcall
push
test
jns
lea
mov
popf
mov
movsl
out
in
and
clc
inc
add
sbb
mov
fidivrl
xor
in
test
sub
lock
mov
jmp
lret
subl
and
cli
sahf
mov
cld
dec
enter
sub
fldt
sbb
movsb
fsubs
scas
xchg
out
push
sbb
fdivrs
dec
in
mov
xor
clc
dec
push
mov
xchg
out
ror
dec
and
adc
add
jmp
push
sbb
in
mov
mov
and
repnz
jns
jnp
jnp
jle,pn
dec
sbb
daa
add
mov
cli
pop
data16
cltd
mov
jmp
mov
lcall
sub
or
or
pop
hlt
mov
jb
inc
imul
sti
aam
sahf
mov
inc
imul
int3
mov
dec
mov
in
divps
insl
push
jb
inc
cmp
inc
aad
mov
das
sbbb
popa
sub
push
jb
sub
lcall
insb
test
adc
jecxz
popa
mov
loopne
cltd
repz
mov
adcl
enter
xor
xchg
out
add
fidivl
lea
mov
pextrw
add
sbb
movsl
mov
shrl
sbb
je
pop
adc
add
or
adc
inc
jb
mov
sbb
adc
push
out
or
cmp
fadds
add
fsub
adc
out
repnz
mov
lcall
mov
dec
inc
cmp
mov
test
sbb
lods
mov
xchg
inc
jmp
mov
fdivrp
pusha
and
ficoms
mov
adc
push
aad
mov
pushf
and
mov
xchg
aaa
inc
idivb
outsb
cmp
rcrl
loope
jbe
or
cwtl
pop
and
pop
mov
and
popf
jnp
sub
and
jle
fchs
and
sbb
cmp
mov
jle
movsl
xlat
inc
inc
push
cmp
in
scas
xchg
push
fisttpl
jle
jmp
mov
popa
xlat
lds
lods
push
mov
xor
adc
ret
sbb
lds
daa
pop
lret
ja
or
bound
sahf
inc
stc
std
repz
test
test
dec
lcall
xchg
mov
scas
mov
jbe
xchg
add
ds
arpl
mov
jns
cmpsl
in
cmp
fimuls
mov
or
xlat
ret
xchg
iret
or
add
shl
mov
adc
int
add
sub
add
movsl
mov
xor
rol
mov
mov
aam
pop
je
fldt
roll
aas
hlt
mov
in
or
nop
pusha
ss
jp
js
scas
push
fwait
out
bound
dec
popa
scas
std
and
or
scas
pushf
ret
dec
ljmp
cld
jb
outsb
push
fmull
divl
arpl
push
push
subl
push
roll
dec
and
mov
js
test
js
out
aam
insl
jge
jle
mov
sub
flds
pop
fisubs
pop
and
stos
mov
dec
mov
dec
std
ret
aas
dec
test
push
dec
js
cmp
cltd
sub
sbb
ss
ret
cmp
loopne
push
or
jl
mov
insb
lret
lcall
inc
xor
iret
dec
mov
ja
in
sarb
mov
pop
stos
mov
fisubrs
pushf
lods
xchg
jo
in
dec
mov
pop
xor
jecxz
sbb
mov
shlb
cltd
mov
push
dec
es
sti
mov
dec
jle
push
mov
out
into
sbb
sub
out
out
js
movsl
push
inc
and
push
scas
push
call
rorb
dec
and
xor
inc
mov
aas
js
inc
add
vmread
cmpsb
in
testl
icebp
push
sbb
rolb
mov
dec
or
aam
dec
cmpsl
mov
insl
ret
inc
cmp
ffree
dec
sbbl
and
dec
mov
outsb
push
and
je
les
lahf
and
mov
inc
mov
cmp
inc
aam
mov
test
jg
ret
notb
stc
jae
jbe
dec
lahf
out
test
push
ja
pusha
fistl
test
rolb
inc
jo
inc
bt
xchg
or
test
out
cmp
or
fwait
ja
push
mov
orb
dec
push
cmpsl
pop
clc
fisttpl
jmp
mov
dec
jne
aam
fs
ret
mov
mov
and
xchg
jg
addr16
call
mov
sarw
rolb
test
mov
scas
nop
xor
sub
adc
out
lods
mov
cmp
xchg
cld
lock
pop
nop
ja
pop
sub
fdivs
stos
cmp
repnz
daa
xchg
mov
dec
ret
scas
adc
sub
and
mov
scas
lcall
nop
ror
and
add
inc
inc
in
sub
inc
adc
inc
mov
xor
jp
dec
repnz
sti
cli
loope
push
lret
imulb
stos
jmp
test
std
mov
push
mov
xor
sub
push
inc
inc
add
pop
dec
cld
js
sarb
ret
jae
aaa
mov
fstpl
stos
jl
fsub
jae
lock
xor
dec
xor
enter
shlb
add
sbb
or
pop
hlt
cmp
rclb
mov
lcall
icebp
xchg
mov
jae
test
loopne
jbe
or
add
push
adc
pop
and
aaa
push
ljmp
lcall
mov
sub
das
sub
push
in
push
or
psubusw
fisttps
out
sub
inc
js
add
jmp
orb
shl
adc
xchg
xor
call
fsubrs
or
pusha
stos
sarb
sub
mov
pop
aad
cs
scas
call
and
xchg
stos
cld
cmc
aad
xchg
xor
fisttpll
ljmp
jmp
and
dec
xor
sahf
mov
pop
mov
sbb
cmp
fs
clc
sarb
cmpsb
je
std
lods
pusha
xchg
std
or
in
ljmp
push
jp
sub
jecxz
je
cmpsb
xor
push
movsl
cwtl
push
repnz
in
insb
das
jae
mov
pushf
sbb
leave
clc
sub
shrb
repz
or
and
jns
gs
jle
adc
popf
sub
inc
sub
or
out
adc
addl
js
lcall
or
lds
lock
clc
or
sahf
data16
ficoml
sbb
cwtl
adc
sub
dec
stos
xlat
mov
add
dec
ja
sub
mov
bound
pop
out
ljmp
sbb
adc
sub
hlt
rol
insl
pop
lret
mov
stos
cmp
fwait
mov
shl
scas
stos
sbb
cli
sbbb
lcall
xchg
loopne
inc
jp
movsb
ret
arpl
jmp
mov
inc
cld
mov
xchg
fisubrl
cmp
movsl
loopne
xor
mov
mov
add
push
pop
adc
cmp
arpl
push
push
sbb
imul
xchg
xchg
je
popf
ret
movsl
sbb
mov
sbb
mov
xchg
pop
pop
xchg
mov
outsb
xor
dec
stos
adc
mov
xor
mov
push
adc
dec
dec
sub
dec
dec
cltd
shl
pop
push
out
inc
push
enter
add
sbb
mov
and
xchg
loope
dec
test
pop
mov
imul
xor
out
in
mov
add
in
inc
mov
rcrb
out
and
adc
loop
aad
adc
outsl
pop
adc
imulb
iret
lods
mov
inc
cld
add
inc
cmc
adcl
xchg
adc
sbb
jge
and
add
in
push
cli
nop
xchg
pop
dec
jl
aam
or
mov
xchg
ret
dec
xlat
mov
dec
xor
xchg
jg
pop
lods
xor
push
mov
je
dec
sbb
cs
leave
cltd
push
cmp
mov
std
aaa
push
pop
pop
jns
je
xchg
pusha
xchg
adc
add
mov
mov
xchg
out
enter
inc
sub
xchg
jp
cmp
jmp
mov
add
push
loopne
push
hlt
sbb
mov
mov
jae
icebp
xor
movsb
cs
ss
dec
push
mov
jmp
pop
dec
scas
add
sbbl
insl
shrl
fwait
lahf
sub
dec
dec
jmp
sbb
fmull
push
pop
lcall
cmpsl
jne
sub
add
pop
out
jp
scas
cmpsl
lea
sbb
addb
pop
xchg
jbe
in
out
scas
leave
mov
xchg
jge
mov
push
aas
mov
aam
jno
xor
adc
das
cs
pop
cmpsb
repnz
scas
mov
inc
add
push
imul
pop
and
xor
sarl
inc
inc
mov
or
xchg
test
sahf
lods
sbb
call
js
sbb
inc
inc
lods
ret
test
ror
jae
int3
xchg
push
icebp
roll
popf
add
cli
outsb
cmp
lods
inc
fs
cmovnp
pop
xchg
subb
jecxz
inc
sub
and
or
std
cmpsl
push
dec
adc
push
dec
cmp
xchg
fwait
xchg
add
xchg
mov
mul
push
inc
pop
push
cmp
aam
test
pop
int
inc
mov
testl
ja
dec
fimull
lret
inc
dec
rorb
mov
xor
fildll
sub
and
daa
sbb
test
fsubs
daa
ja
mov
es
mov
sbb
je
dec
ljmp
aaa
lret
cli
testl
and
in
mov
dec
cld
push
pop
iret
stos
xchg
xchg
into
sub
mov
sbb
mov
xor
test
adc
mov
imul
mov
dec
movl
aam
push
loope
scas
jo
inc
add
xor
xor
imul
jl
jg
enter
pop
push
scas
mov
repz
arpl
xchg
mov
inc
in
mov
add
sahf
ss
pop
ret
std
daa
fcmovu
pop
xlat
or
pop
popf
scas
lret
sbbl
jge
dec
mov
test
add
jecxz
adc
or
mov
data16
lcall
enter
leavew
xor
mov
ficoml
and
dec
imul
push
push
sbb
add
icebp
lret
mov
adcl
dec
adc
cmp
sti
and
push
lock
scas
sti
jle
dec
movsb
dec
and
fwait
sub
ficoms
test
cmp
mov
cmpb
popf
lret
push
mov
jmp
std
pop
push
mov
jg
xor
sub
dec
jp
adc
nop
sub
scas
cmp
xchg
lods
loope
dec
pop
jecxz
or
push
mov
mov
dec
clc
sbb
jge
adc
jb
out
repnz
pop
dec
scas
sbb
cli
mov
xor
fnsave
bound
inc
and
mov
dec
xor
aaa
mov
out
stos
sub
fmul
xchg
filds
mov
nop
negl
ss
jb
inc
mov
mov
jo
xchg
js
aam
orb
lret
push
scas
in
addr16
cmp
sub
cmpsb
push
inc
mov
fiaddl
ss
repnz
mov
lret
insl
popa
sub
pushf
jnp
adc
add
and
cs
xchg
out
orl
aas
incb
pop
sbb
adc
dec
aam
das
push
and
cwtl
sbb
addr16
xor
imul
lcall
jmp
rcll
mov
stos
out
mov
sbb
mov
subl
cmp
inc
pop
mov
mov
xor
mov
adc
aad
sbb
xchg
pop
rorl
add
fs
sub
shrl
xchg
adc
mov
fsub
lcall
lea
inc
stos
inc
cmp
mov
jge
mov
dec
and
sbb
dec
leave
add
or
subl
pop
and
mov
jne
push
mov
clc
sbb
lcall
ljmp
sbb
bnd
shlb
xchg
and
rorb
and
repz
mov
sub
sbb
jmp
sub
cmp
test
cmc
enter
aam
orl
sbb
mov
mov
fisubrl
sbb
inc
sub
adcb
xchg
mov
outsb
xor
mov
nop
and
mov
xor
mov
ds
nop
and
adc
iret
dec
in
sbb
stos
lods
cmp
movsl
popa
and
push
xlat
jbe
imul
dec
xchg
and
and
rep
aad
sbb
and
cs
or
add
imul
jge
hlt
outsl
xchg
les
cmp
or
inc
add
addb
rolb
popa
xchg
mov
incb
or
lret
or
in
popa
lret
mov
lds
sub
iret
pop
push
inc
mov
sub
jne
dec
jl
cmp
push
fnstenv
add
push
insb
and
lea
inc
xor
sub
mov
sbb
cs
inc
cmp
test
sub
push
aam
mov
out
and
fildl
inc
enter
sub
fldl
mov
pushf
cmp
out
mov
les
scas
repz
adc
dec
xchg
and
aad
negl
and
fwait
and
adc
push
dec
dec
lods
mov
pushf
push
and
sub
mul
cli
pop
std
lahf
mov
shrl
arpl
add
dec
rcl
test
mov
pushf
mov
jno
xchg
jae
mov
xchg
aad
mov
inc
shlb
data16
sub
adc
aam
lock
mov
sub
pusha
xor
push
stos
dec
fwait
mov
ret
in
outsb
fildl
lcall
lock
sbb
sti
testl
fists
mov
xor
mov
or
sub
push
inc
sbb
mov
or
ss
xchg
sbb
pushf
fnsave
loop
dec
repnz
adc
std
rcrl
pop
mov
and
orl
ret
add
lods
inc
enter
xorb
test
dec
push
arpl
lods
pop
xchg
xchg
xchg
pop
lods
add
lock
pop
iret
lret
lcall
inc
pushl
insl
decb
insb
xor
int
insb
xchg
repnz
data16
jno
cs
out
lahf
hlt
aam
decl
lcall
xchg
jnp
push
pushf
mov
js
mov
mov
push
lahf
jl
adc
dec
test
push
stos
inc
fldcw
jno
scas
lret
imul
jnp
lea
xor
dec
and
sbb
mov
movsb
call
mov
mov
ja
faddl
push
rol
add
mov
sbb
mov
mov
jmp
push
bound
adc
insl
sahf
and
popa
icebp
out
sarb
scas
scas
dec
outsb
lds
pop
lock
and
dec
jp
notl
add
jle
sbb
test
addr16
hlt
mov
jp
mov
mov
dec
scas
mov
jne
lahf
scas
out
imul
inc
xor
xchg
daa
cmp
adc
sti
xorb
dec
mov
addl
movsl
fnstsw
cmpsb
push
test
mov
xor
clc
ss
jne
mov
mov
test
push
or
push
movsb
xor
pop
lahf
scas
pop
rol
push
sarl
fucomi
leave
fisubl
or
mov
mov
or
dec
mov
cltd
fwait
shrb
in
or
mov
push
push
adc
push
sub
stos
std
movl
xor
xchg
dec
add
xor
lea
in
or
mov
test
adc
xchg
or
xchg
push
lret
inc
jae
imull
jecxz
pop
dec
xorl
mov
stos
repnz
loop
stos
lds
push
xor
fsub
je
ljmp
mov
call
inc
dec
or
and
rcll
out
out
cmp
xchg
test
xlat
repz
nop
and
add
fsts
cmp
icebp
sahf
imul
cmp
sti
dec
stos
sub
jne
pop
sbb
incl
repz
das
mov
call
loopne
popa
push
or
sub
pop
push
xor
dec
xorl
push
ja
mov
or
popf
stos
sbb
xor
pop
pusha
and
cmp
sub
mov
xchg
xchg
cmp
jp
and
test
mov
jbe
push
test
cli
cmp
sub
add
aad
rorl
repnz
xor
xlat
mov
mov
pop
pop
lret
hlt
aas
cmp
roll
or
mov
xchg
mov
scas
test
arpl
inc
xchg
add
out
inc
test
add
sub
pop
or
in
inc
mov
dec
sbb
push
lret
adc
fcmovne
prefetcht1
and
cwtl
fstpt
ss
xor
shrb
push
repnz
cmp
push
adc
mov
rorb
fstpl
call
cmpsb
xchg
in
rorb
dec
cld
cli
repnz
cmp
adc
arpl
push
xor
sahf
inc
test
in
aam
sbb
jno
cwtl
bound
pop
lea
xchg
pop
mov
js
xor
or
sti
cld
push
sbb
sbb
jl
cmp
cmp
add
cmp
mov
mov
jno
jg
or
mov
jbe
inc
sub
cltd
ret
mov
mov
js
les
push
sbb
push
xlat
mov
pop
dec
adc
cmp
cmc
mov
orb
enter
lds
in
cmp
dec
fildl
sub
mov
mov
iret
int
push
rcrb
mov
mov
lea
add
in
movsb
dec
mov
mov
xor
mov
add
push
lahf
or
sub
popa
pusha
xchg
ficoms
fistpll
inc
and
addr16
dec
push
adc
mov
addr16
nop
test
inc
mov
sbb
xchg
push
jge
sbb
outsl
out
mov
ljmp
stc
jle
cmp
cs
inc
out
push
cmpsl
mov
mov
inc
pop
or
jae
pop
out
mov
dec
and
push
repnz
loop
rcr
pop
add
std
icebp
dec
jae
orb
adc
sbb
fiaddl
xlat
movsl
addr16
faddl
fcoml
outsl
scas
imul
and
cmp
aaa
sub
ret
xor
mov
mov
xchg
sbb
js
idiv
pushf
mov
and
popa
inc
jg
data16
fidivrs
popf
mov
xor
xor
mov
adc
int
adc
jge
fisubl
int3
fildl
mov
mov
sub
push
jle
imul
pop
int
add
fisubs
dec
mulb
xor
stos
mov
xor
stos
js
nop
adcb
lock
cwtl
stos
nop
push
popa
fmulp
imul
jmp
sbb
pop
push
mov
dec
sub
insb
and
or
xlat
cmpsb
loope
adcb
inc
pop
repnz
aas
xor
out
in
nop
les
ja
loope
lods
xor
test
mov
mov
stos
lds
xchg
mov
cs
mov
inc
jge
xor
pop
lret
stc
push
dec
xchg
out
stos
push
mov
mov
aad
xor
push
hlt
aas
push
sbb
mov
jno
push
jae
add
inc
shll
mov
inc
mov
mov
or
pop
leave
inc
dec
fisubl
mov
adc
dec
sbbb
adc
adc
scas
shl
sub
push
jp
lods
pop
add
jbe
movsl
movsl
and
dec
or
mov
in
in
mov
jmp
sbb
adc
mul
fimuls
adc
jnp
jno
sub
mov
mov
mov
sbb
andl
mov
adc
or
imull
movsb
inc
sub
jnp
call
rcll
cmp
fistpll
outsb
mov
xor
mov
movsb
leave
mov
pop
mov
inc
push
cs
addr16
pop
in
pop
cmp
mov
and
pop
mov
cmc
pop
loope
push
rol
out
sahf
sbb
cmpsb
sbb
leave
mov
xchg
mov
je
inc
mov
daa
fsubrl
lcall
imul
cmp
mov
adc
test
dec
ret
adc
aas
sub
xor
outsl
jns
dec
std
loope
xchg
mov
sbb
aas
cmp
mov
stos
scas
adc
imull
inc
jns
sub
dec
cmp
pop
bound
ficoms
sub
or
push
push
addr16
xchg
inc
dec
nop
cwtl
lret
lret
xor
fcmovnb
pushf
adc
subl
daa
cmpsb
in
pop
sub
jl
push
js
pop
ror
inc
sahf
mov
addr16
dec
and
mov
inc
aam
mov
and
int3
push
mov
les
pop
lret
xor
fildl
push
cmp
mov
roll
insl
or
movsb
insl
or
mov
cmp
stc
std
mov
mov
sbb
out
xchg
ljmp
xor
sarb
jp
inc
cltd
adc
or
fidivrl
fs
sub
ficoms
pop
testl
ja
add
insl
je
mov
mov
and
push
mov
xchg
nop
ljmp
leave
nopl
dec
xchg
xchg
fdivl
loopne
xchg
gs
sbbb
adc
xchg
insl
add
push
mov
fs
fs
sarb
daa
push
jl
stos
xor
das
popf
pusha
or
push
add
dec
mov
mov
scas
jae
test
test
jmp
not
ljmp
popf
cld
xchg
out
ds
cmp
sub
mov
mov
loope
cld
mov
dec
es
dec
jp
push
mov
mov
push
dec
mov
inc
mov
xor
mov
inc
pop
mov
mov
pushf
cmp
hlt
lock
mov
jecxz
loopne
jns
or
fiaddl
jmp
sub
nop
int
ss
in
fsubr
in
jecxz
dec
fisubl
das
mov
fcompl
ret
ret
js
mov
pop
call
pop
push
cli
inc
xorl
xchg
add
mov
push
in
clc
jb
or
adc
xchg
lret
fidivrl
xor
inc
fdivp
mov
imul
in
jns
jno
add
icebp
mov
add
ret
sbb
pop
insb
and
jg
fbstp
inc
push
pop
xchg
push
iret
mov
andb
jnp
int
pop
in
lock
sbb
xchg
and
xlat
xor
mov
xor
das
push
pop
xchg
icebp
or
andl
lret
lret
sbb
jmp
ret
das
mov
xor
inc
sub
jge
mov
cmp
push
jmp
xchg
add
popf
pop
pop
fisubs
or
lret
sub
jne
or
and
pop
test
bound
pop
loop
cltd
gs
add
xlat
add
adc
push
push
xorb
xor
mov
and
xchg
mov
rorb
shll
orl
or
hlt
fidivrs
mov
popf
dec
mov
cmp
mov
xor
sarb
insl
mov
cwtl
ja
sti
outsl
scas
mov
inc
inc
mov
dec
nop
clc
int3
es
push
int
and
fdivrs
push
stos
call
inc
sbb
dec
push
inc
daa
test
adc
jecxz
pusha
pop
lods
jp
aaa
dec
sbbb
int3
cmc
mov
mov
popf
iret
and
fistpll
push
xlat
push
dec
sbb
leave
or
pop
add
sahf
xchg
jmp
mov
or
push
scas
lods
pop
repz
mov
movsb
dec
mov
push
popf
or
ja
jl
dec
cmpsb
clc
push
les
dec
aaa
jbe
int
inc
stc
es
sbb
inc
mov
add
mov
in
aaa
xor
sub
mov
loope
dec
lret
outsl
loopne
test
fs
scas
push
fwait
test
mov
inc
push
push
add
push
jbe
add
in
in
xchg
lds
dec
adc
mov
xchg
out
jne
cmp
sbb
mov
out
or
inc
nop
mov
das
insb
and
mov
popf
inc
or
das
fists
cmp
inc
mov
jl
xor
xchg
imul
xchg
add
mov
bound
jns
stos
in
adc
jae
inc
xlat
out
sub
stc
adc
and
pop
mov
lea
push
dec
and
sub
mov
mov
pusha
sbb
dec
loopne
fdivs
sbb
adc
add
test
dec
pop
popa
mov
xchg
mov
xchg
adc
shrl
inc
cwtl
divl
stc
mov
daa
daa
in
sub
mov
lds
roll
repz
sbb
mov
pop
ljmp
adc
inc
jae
mov
hlt
jne
pushf
rolb
int3
pop
or
lea
fwait
nop
cmpsl
mov
or
stos
lods
add
cmp
xchg
aas
mov
cltd
lea
loop
pop
popa
scas
leave
mov
ja
mov
jmp
jo
sbb
adc
jle
push
movsl
sub
mov
xor
loopne
jns
hlt
jno
scas
adc
and
add
push
loopne
int3
dec
or
mov
cmp
push
testl
nop
mov
lcall
inc
mov
jne
mov
jae
insb
mov
mov
dec
push
subb
mov
scas
int
pop
leave
push
and
pop
pop
dec
addr16
fs
push
je
lock
cmp
pusha
sbb
mov
jo
push
jne
and
mov
dec
mov
iret
mov
out
mov
cmp
sbb
mov
in
and
iret
sub
hlt
pusha
stc
pop
test
imul
repnz
test
mov
cld
sub
out
sbb
jle
mov
cmp
ss
push
out
and
inc
aaa
bound
outsl
dec
ret
test
icebp
scas
mov
cwtl
push
lret
dec
gs
xchg
ja
cmc
rcrl
pop
sub
shlb
mov
ja
cmc
aad
adc
jg
pop
push
add
cltd
aaa
mov
not
in
out
sbb
xchg
and
push
mov
push
test
add
sbb
test
jae
and
sbb
mov
sbb
xchg
rorb
test
mov
adc
cld
mov
test
cmpb
xor
pusha
inc
sub
stos
stos
sub
aaa
xchg
call
fidivrs
mov
dec
push
in
faddl
add
jns
mov
add
fldenv
lds
loop
push
sbb
mov
xchg
fsub
popa
and
cs
inc
mov
sahf
inc
in
scas
aaa
sbb
out
sbb
dec
xchg
and
mov
xor
scas
adc
popf
stc
pushf
scas
arpl
pop
mov
pop
mov
pop
and
sbb
add
outsl
lods
xchg
cwtl
xchg
sub
jl
stc
mov
adcl
call
jbe
out
loop
enter
fimull
xchg
inc
jo
sarb
aas
in
js
roll
push
hlt
cmp
or
insl
cmpb
sarl
xchg
mov
je
jecxz
sub
xor
pop
inc
add
pop
inc
pop
mov
les
sub
push
dec
pushf
rolb
lretw
imul
imul
fsubl
and
sub
cmpl
push
sub
cmp
and
int3
sub
out
inc
je
inc
sahf
jb
scas
xor
rcrl
cli
cmp
xor
pushf
rolb
and
or
jmp
scas
lret
dec
pop
add
sbb
pop
fimull
arpl
fcompl
jge
lahf
daa
xchg
lea
jge
cmp
adc
mov
pop
test
jne
scas
jb
add
ret
sbb
jmp
xchg
pop
sub
ja
cmp
push
mov
mov
sbb
addl
or
iret
into
aam
stc
cs
aaa
iret
fcompl
jmp
cmc
xor
sub
lret
and
cld
rcll
or
fstpl
sub
sub
push
lds
add
lods
and
icebp
mov
mov
mov
ret
push
mov
pop
in
pop
imul
jbe
jo
push
push
bound
dec
pop
arpl
repz
cmpb
push
mov
sahf
fisttps
clc
popa
or
in
lahf
es
push
jmp
mov
bound
or
add
aaa
and
adc
les
add
ret
sahf
repnz
js
fldenv
sbb
xor
cld
mov
mov
push
mov
imul
xchg
mov
arpl
add
inc
adc
pushf
test
in
or
ds
ss
in
ret
mov
jp
popa
shl
inc
sub
scas
sub
cltd
jnp
and
vmovmskps
dec
mov
scas
cmp
lods
pop
lock
xchg
movsl
popa
add
sub
hlt
jbe
xchg
xchg
pop
mov
enter
sarl
push
or
test
cs
fstps
jne
inc
stc
rcrl
jne
sbb
loop
scas
add
xor
pop
jae
and
addr16
arpl
or
cmp
icebp
dec
adc
xchg
mov
or
test
pop
outsb
mov
fldcw
ret
inc
inc
popf
mov
gs
xor
pop
xchg
mov
inc
mov
daa
mov
inc
pop
push
int
lods
test
mov
adc
insb
push
lret
sub
cmp
and
sub
xchg
aad
fwait
in
sbb
xchg
inc
insl
cmpsl
rcll
scas
adc
test
mov
lea
popa
adc
lods
lock
aad
and
jmp
jae
and
in
jbe
inc
xor
xchg
sbb
and
repz
lcall
jmp
and
sbb
xor
mov
ja
inc
xchg
add
int
icebp
adc
push
call
sti
mov
addb
call
stos
adc
xchg
dec
xchg
mov
ja
rclb
lahf
jl
nop
insl
clc
inc
fdivr
lds
addb
xchg
inc
sbb
int3
test
inc
inc
push
adc
xor
std
sbb
aas
push
repz
sub
sub
mov
movb
jmp
pusha
cltd
inc
mov
call
sbb
sbb
inc
adc
loope
inc
lahf
push
enter
aaa
es
or
cmpl
movsb
jle
mov
push
dec
sub
inc
stos
mov
and
mov
int
cli
je
pushf
je
or
add
fs
hlt
jne
sub
jbe
xor
add
add
movsl
hlt
js
rol
sub
pop
mov
repnz
lret
icebp
xlat
popa
js
mov
push
test
xchg
imul
inc
mov
not
sub
sub
dec
ret
xor
sub
adc
repz
mov
or
mov
in
call
test
mov
fnsave
mov
fldenv
arpl
dec
hlt
mov
test
push
push
hlt
dec
cmc
xchg
dec
sbb
in
hlt
cmpsl
xor
xchg
mov
daa
cmpsl
call
loope
lahf
hlt
imul
daa
cld
push
sub
sbb
xchg
out
mov
repz
repz
dec
mov
xor
push
dec
cmp
ja
sub
adc
xor
sti
xchg
push
jbe
test
lods
lcall
xchg
cmp
shlb
arpl
arpl
mov
into
dec
in
cmp
inc
arpl
jl
and
cmp
scas
push
imul
gs
js
or
hlt
stc
nop
sysenter
test
jae
adc
lahf
push
add
lods
rorl
loopne
mov
xchg
mov
shl
js
or
enter
push
into
out
fisubrs
in
mov
sbb
xchg
shrb
fsubrs
cmp
pop
sub
and
stos
or
push
and
jp
push
adc
aas
fdivs
pushl
pop
push
movsb
mov
or
or
sub
xchg
daa
pusha
int3
imul
sbb
stos
icebp
pop
mov
lods
adc
add
and
outsb
xchg
push
add
outsl
sub
js
add
push
or
jo
and
xchg
out
sarl
inc
push
cmpsb
pushf
push
rep
rcrb
xor
jb
iret
movl
pushf
lods
push
push
cmp
stc
jnp
sahf
pop
xor
mov
mov
mov
das
add
repnz
stos
dec
cmp
xorl
xchg
in
out
pop
mov
pop
aad
aas
or
pusha
xor
inc
mov
pop
mov
add
xchg
in
mov
dec
arpl
pop
cmp
pusha
dec
adc
je
incl
fsubrs
fcoml
add
adc
pop
xchg
imul
and
jl
dec
pop
out
push
mov
mov
mov
add
mov
pop
and
addr16
fimuls
dec
lret
mov
push
in
jo
popf
out
or
testb
aas
adc
push
pop
push
aas
in
cmp
mov
das
pop
fsub
fcomip
push
shll
shl
iret
adc
add
aas
sbb
lock
fwait
mov
cmpl
add
push
push
mov
addr16
mov
popa
insb
pushf
mov
lcall
test
push
outsb
jmp
sbb
das
call
fcmovnu
lret
jp
jae
int3
lcall
daa
dec
div
push
sti
mov
into
jns
lds
inc
dec
daa
aad
add
sbb
jmp
sub
shlb
inc
xchg
cmp
lea
aas
int
mov
sbb
push
pop
jnp
popf
lods
cmpsl
adc
fwait
push
xchg
popf
lea
stos
test
paddw
loop
sbb
push
loope
repnz
aas
mov
sub
sahf
mov
mov
aam
out
rclb
hlt
sub
mov
stos
test
andl
js
adc
sti
rcrb
pop
lcall
inc
pop
dec
fimull
cmc
rolb
sbb
and
and
jg
daa
arpl
and
push
pop
sbb
test
pop
out
cltd
out
mov
push
and
xor
cmp
fsubl
pop
in
push
inc
mov
ret
push
into
xchg
jnp
sbb
lret
repnz
or
inc
mov
sub
outsb
pop
ds
push
test
ja
fcmovu
add
ret
stc
adc
xor
push
rcrb
mov
outsl
inc
jne
xor
fs
aaa
arpl
mov
ds
xchg
aaa
jnp
int3
adc
cli
lds
enter
cltd
cmp
mov
sarl
sub
sbb
aad
sete
fcmovbe
adc
and
push
adc
ret
mov
adc
pop
lret
cmp
xchg
ljmp
fisttpll
cmp
lea
addl
pop
inc
movb
adc
jae
call
call
mov
or
gs
or
xchg
test
and
popf
loopne
sub
xchg
xchg
push
mov
arpl
jbe
push
stos
jp
mov
dec
adc
sub
loopne
jmp
dec
cmp
push
xor
or
nop
loope
mov
ret
negb
ljmp
dec
jno
inc
outsb
pop
dec
pushf
push
jbe
xchg
or
stos
out
sbb
mov
add
ret
cmp
add
int
cmp
sarb
dec
mov
imulb
insl
mov
add
cli
aaa
dec
cmpsl
ret
xchg
enter
les
sbb
and
push
push
xor
loop
aad
pop
mov
mov
lds
lods
xor
mov
in
jnp
aam
jg
xor
hlt
popf
test
insl
push
sub
mov
pop
push
lret
pop
push
aad
xchg
rorb
repz
repz
addr16
or
sub
pop
jbe
dec
lods
scas
jo
stc
outsb
xchg
sub
pop
fidivrs
stos
inc
enter
push
sub
jb
fisttpll
lods
data16
cmc
outsb
xor
jne
mov
lret
pop
push
cmpl
imul
sbb
popa
mov
test
lods
add
fldt
out
rcrl
pop
loope
adc
rclb
and
mov
inc
movsl
cmpsb
scas
ja
ret
cltd
dec
cld
fs
mov
in
cmp
adc
in
movsl
js
and
and
sbb
dec
add
outsl
sbbb
xor
cmp
xor
int3
insb
cld
lret
mov
popa
xor
imul
and
leave
pop
ret
pop
jmp
push
pop
jge
mov
mov
pop
imul
lods
sbb
std
ja
xchg
xchg
clc
adc
icebp
movb
mov
pop
imul
fstl
enter
sbb
push
pop
cmpsb
lret
adc
mov
movsl
adc
iret
addr16
shl
rorl
scas
add
nop
std
jmp
pop
dec
cmp
mov
ljmp
xor
adcb
std
repz
ljmp
mov
cltd
arpl
insb
xchg
out
xchg
out
inc
xor
push
movsb
outsl
and
xorb
movsl
nop
sbb
sub
and
jge
sbb
cmc
loopne
cmp
fisttpl
jns
pop
jno
xor
ljmp
fcmovnu
xlat
idiv
add
jg
cmp
jg
mov
dec
or
push
in
ljmp
movsb
adcl
mov
cld
sub
or
negl
pop
fwait
and
adc
or
jp
sahf
push
sbb
xchg
inc
inc
pop
loope
arpl
jae
insl
lock
jp
mov
shr
int3
or
or
ftst
fwait
pop
and
int
ss
fcmove
add
xor
pop
and
ss
gs
mov
pop
mov
test
sbb
adc
xchg
dec
lods
cmc
push
mov
or
ss
stos
cld
aas
xor
jle
push
scas
enter
cltd
dec
mov
dec
stos
sbb
gs
mov
push
aaa
sti
lmsw
sti
fstl
pop
test
fists
dec
mov
jg
in
inc
insb
scas
xchg
jmp
stos
add
scas
push
adc
mov
pop
jmp
pop
mov
fbstp
mov
int
inc
fucomp
push
ljmp
out
lock
sahf
lds
divl
jp
fcoml
out
push
pop
push
aam
lcall
bound
cmp
dec
sub
iret
mulb
adc
ja
int
outsl
sub
xor
ljmp
jg
rorl
mov
mov
inc
js
inc
je
add
mov
mov
rcl
dec
in
sahf
stc
xor
sbb
xchg
inc
pop
xchg
addl
pusha
mov
mov
add
rcrl
pop
adc
inc
icebp
sub
in
lock
nop
pop
xchg
test
in
cltd
lds
adc
hlt
outsl
mov
jb
ds
lahf
and
xchg
cmp
pushf
cmp
in
imul
addr16
inc
jecxz
cmp
cmpsb
mov
out
and
inc
xor
test
pop
mov
fcmovne
minps
ljmp
pop
lods
mov
aam
sub
rcrb
mov
push
pop
xchg
in
dec
xor
iret
out
adc
inc
pusha
pushl
mov
ret
cmpsb
inc
jp
scas
bound
add
adc
in
cltd
test
and
out
popf
nop
into
pop
enter
in
jge
lcall
pop
test
mov
cmpsl
and
mov
xchg
dec
cmp
or
cld
xchg
and
popa
ret
out
xchg
mov
dec
mov
pop
xchg
fdivr
push
pushf
popaw
fsubr
mov
lcallw
pop
fdivs
pop
mov
cmpsl
aas
cwtl
ljmp
push
adc
popf
sub
add
fwait
inc
mov
mov
movb
mov
jge
pop
sbb
les
test
in
imul
push
xor
ret
test
das
imul
aaa
fs
xor
sbb
add
xor
stos
push
leave
pop
imul
clc
sbb
add
in
movsb
sbb
xor
mov
cli
or
sbb
pop
data16
hlt
sbb
push
aaa
cmp
cmp
mov
mov
lret
repz
cmpsb
insl
loope
sub
pop
xchg
rcrl
call
in
dec
ja
addl
mov
adc
mov
adc
push
push
xchg
push
aaa
dec
adc
mov
xor
cmpsb
sbb
lcall
and
imul
jle
ret
inc
and
fs
jbe
pop
call
nop
xor
dec
inc
xor
ret
flds
shl
push
jg
scas
mov
cwtl
rcrl
ds
push
jb
push
cmp
mov
test
push
subl
test
adc
mov
out
inc
outsl
inc
push
adc
cmp
gs
rorl
inc
aaa
mov
cmp
xchg
pop
pop
icebp
ljmp
movsb
jmp
mov
gs
adc
nop
stc
arpl
sub
movsb
pop
icebp
inc
int3
aam
fistpl
push
inc
les
insb
negb
clc
adc
adc
lret
inc
add
iret
and
imulb
inc
jns
mov
dec
pop
push
scas
fistpl
cltd
mov
stos
ljmp
xor
es
xor
push
xchg
and
jae
paddq
push
adc
mov
and
pushf
js
fwait
sahf
aas
jne
les
xchg
and
mov
xorl
jae
lret
add
lahf
mov
adc
mov
push
adc
loope
imul
jecxz
arpl
repz
push
decl
add
dec
jns
jmp
jo
sub
lahf
fcompl
jbe
popf
sub
insl
fxam
pop
dec
fstps
jnp
adc
xor
or
stos
sbb
push
or
xchg
les
mov
add
fnstcw
clc
fmuls
mov
fnstenv
test
and
fs
mov
jge
repz
movsb
push
popf
outsb
mov
push
push
lods
pop
rcr
pop
xchg
or
mov
nop
popf
mov
xor
inc
gs
inc
pusha
adc
jae
jns
jae
pop
and
jns
icebp
cmpsb
adc
adc
or
sbb
fnstsw
enter
int
mov
xlat
in
call
mov
xchg
or
xor
pushf
cli
push
jle
imul
mov
push
jbe
adc
push
arpl
sbb
jmp
cmp
cli
insb
movsl
dec
daa
jnp
dec
push
scas
into
add
jmp
out
jle
push
in
dec
cmp
movsb
lahf
push
lret
pusha
xchg
test
xor
popf
sbb
in
xor
sbb
adc
sub
pop
sub
lahf
mov
xchg
in
mov
and
pop
push
cltd
lea
or
sub
int
sarl
mov
mov
arpl
insl
mov
aas
ds
adc
testl
cld
xchg
xchg
sbb
mov
sub
out
cmp
imul
and
je
fsubr
into
int
mov
sub
out
push
shlb
jmp
mov
xor
mov
jbe
jo
and
pop
subl
cmpsb
mov
jnp
mov
push
dec
inc
xor
add
xchg
lods
adc
addb
in
pop
cmpsl
aaa
sub
add
xchg
icebp
mov
repnz
adc
incb
inc
in
pop
push
mov
dec
jo
out
sbb
mov
cmp
sub
test
ret
mov
push
sbb
add
inc
pop
xlat
push
adc
popa
mov
inc
lock
fdiv
xchg
or
outsl
cmc
xchg
icebp
call
sub
test
cmp
ficompl
rorb
and
incb
stos
cmp
inc
add
ds
mov
add
in
xchg
adc
subb
ret
dec
cli
jns
shlb
aas
or
xor
jae
iret
add
dec
loope
cmpsb
or
or
push
dec
jg
fs
cld
dec
fisubs
mov
ret
xor
inc
adcl
dec
lcall
lds
pop
sbb
push
xchg
xor
and
xchg
sub
in
cmc
sbb
icebp
add
add
jo
cmp
fldl
xor
inc
fwait
xchg
adc
sbb
or
xor
lea
push
mov
call
push
adc
jae
mov
jp
jns
inc
int
dec
stc
xchg
dec
pop
dec
notb
or
dec
inc
fs
mov
pusha
push
adc
pop
lods
inc
fldt
cwtl
cmpsb
int
jmp
lret
repz
inc
mov
movsl
sbb
xchg
lock
xchg
ljmp
imul
cmp
mov
inc
addl
fists
and
outsb
mov
psubd
mov
repz
vmovaps
pushf
add
addr16
subl
into
push
in
stos
sub
js
imul
dec
adc
sbb
jns
mov
daa
aas
inc
mov
dec
lock
in
add
push
mov
jb
adc
fbstp
dec
xchg
sti
xchg
movsl
clc
jbe
negb
or
adc
clc
cmp
ror
test
es
adc
add
fs
inc
cmpsl
shlb
sub
mov
lcall
pushf
notl
mov
cmpsl
jmp
andb
xor
xchg
es
inc
and
syscall
fadds
pusha
mov
loop
mov
xchg
add
cld
push
rclb
lcall
xor
fcmovnbe
inc
ja
sub
sub
shl
xchg
dec
cmp
lcall
clc
pop
add
decl
repz
sbb
lock
aad
inc
in
fisttpll
out
jp
mov
in
test
cmp
push
lcall
lret
dec
in
notl
dec
push
jg
xchg
jl,pn
pop
imul
test
int
and
xor
xor
dec
pop
and
mov
or
roll
ret
fs
adc
sbb
pop
in
stos
fldl
movaps
scas
jmp
cmpsb
inc
or
lea
lods
add
fstpl
sub
sub
and
ss
adc
push
xchg
stos
jb
shll
movsl
div
push
or
arpl
push
or
in
lods
shrl
clc
or
mov
out
arpl
lds
pusha
adc
movsl
ss
push
adc
jb
pop
js
push
pop
lret
mov
mov
out
std
mov
sub
leave
fsubl
cwtl
int3
int3
xchg
hlt
enter
pop
popf
cmpl
call
pop
push
push
pop
sbb
ficoms
outsb
sbb
xchg
ret
adc
push
in
insb
sbb
lahf
lds
xor
daa
out
xchg
sti
mov
inc
push
push
cmp
pop
pop
jge
xor
cli
out
popa
pop
popa
ret
rorb
pop
cmpsb
or
push
jbe
xorb
pop
xchg
or
rorl
jne
dec
jb,pt
mov
vmread
or
mov
cmp
jno
jmp
mov
pop
jp
xor
add
out
pop
cmp
enter
jmp
sbb
lds
out
loopne
outsl
cs
add
mov
jno
xor
std
pushf
ja
stos
pop
pusha
mov
xlat
cmp
outsl
add
pop
test
sub
xchg
insb
cltd
pusha
fidivrl
mov
mov
push
xchg
adc
sub
jno
cs
and
cs
lahf
mov
ljmp
fsubl
push
pop
xlat
or
cld
mov
lods
cwtl
cmp
push
insl
pop
fwait
pop
mov
mov
sub
scas
fsubs
sbb
xor
enter
cmp
mov
aas
sub
xchg
dec
aad
xor
inc
ljmp
cmp
push
pop
loopne
xchg
mov
jp
arpl
push
js
arpl
dec
sub
adc
mov
pusha
or
xchg
loop
adc
lret
fildl
mov
mov
mov
out
inc
jmp
jl
movsb
in
sbb
rolb
add
data16
pop
bound
pop
xchg
out
and
xchg
mov
clc
mov
xorl
mov
sar
pop
fisttpl
pop
mov
movsb
push
xchg
flds
les
gs
pop
cmp
adc
jmp
aas
dec
mov
inc
shlb
cltd
ret
xor
mov
sbbl
js
add
jae
push
daa
add
adc
push
aaa
and
sbb
add
push
lock
int
jp
out
leave
stos
mov
inc
pop
xchg
insl
into
mov
cmp
push
add
inc
cmpsl
notb
lods
stc
push
inc
jae
xchg
subl
add
cmp
popf
inc
in
sub
pop
mov
sbb
out
arpl
jmp
outsb
fcoms
cltd
in
lcall
shlb
xor
add
mov
xchg
cwtl
incl
ret
dec
cmp
cmp
scas
cmp
dec
sub
mov
daa
sbb
out
jnp
sbb
push
inc
pop
mov
mov
xchg
sbb
cmp
xchg
in
hlt
jmp
cmp
pop
ret
faddl
roll
mov
fcmovnu
sbb
cmpsl
jno
int3
in
sub
jp
cmc
in
jl
jge
stos
jae
or
pop
push
mov
push
adcl
fdivrl
sub
and
or
cmp
xorb
sub
es
jo
sbb
push
sbb
imul
mov
or
jb
mov
dec
rol
push
adc
xor
js
sbb
fdivp
pop
jne
outsl
mov
es
adc
pop
inc
out
and
xchg
cmpsl
ljmp
fwait
mov
das
loopne
inc
and
cmp
pop
lock
add
jnp
push
dec
daa
out
loopne
insl
or
jl
out
xor
insl
lcall
sub
jp
sbb
mov
lret
xchg
or
push
mov
test
xor
loop
pop
ja
addl
dec
ret
ljmp
pop
inc
xchg
cmp
daa
jmp
movsb
xchg
cmp
fs
push
cmpsb
dec
mov
mov
shlb
xchg
sbb
je
loope
xorb
adc
xlat
mov
loopne
mov
arpl
decl
or
lret
xchg
jle
sub
lds
jl
cmp
outsb
xchg
sbb
jbe
or
mov
aam
ss
addb
sarl
push
pop
cmp
sbb
adc
or
pop
andl
nop
or
sti
movsb
dec
mov
pop
mov
mov
or
lods
push
inc
push
rorb
in
leave
jae
mov
repnz
jae
inc
and
mov
hlt
mov
mull
sbb
jmp
pop
pop
into
pop
jecxz
sbb
outsl
mov
mov
pop
sbb
addr16
rcll
or
lret
js
pop
mov
aas
out
jl
faddl
sub
pushf
jbe
fwait
jnp
int
stos
data16
cmp
sahf
leave
lods
idivl
jl
adcl
fistl
dec
xor
xchg
xor
push
mov
jae
add
and
addr16
les
cld
fnstsw
test
fs
dec
mov
pop
es
push
or
mov
jge
push
mov
sbbb
imul
push
sti
in
inc
inc
or
add
decb
clc
ss
arpl
mov
fwait
jl
pop
call
pop
xor
adc
in
or
scas
pop
lods
jge
addr16
pop
ret
mov
in
push
push
adc
outsb
jbe
lock
icebp
mov
outsb
iret
cmp
xlat
xor
test
call
dec
or
inc
mov
out
dec
dec
xchg
mov
push
mov
push
dec
dec
sub
mov
ret
mov
cmp
or
fstl
inc
mov
loope
xor
jno
sbb
sbb
sub
adc
jle
add
lock
jecxz
xchg
mov
lret
addl
sub
adcb
aas
mov
pop
inc
scas
dec
outsl
xchg
dec
push
and
and
mov
jno
mov
adc
sbb
jl
sti
push
jl
adc
inc
popa
cmpsb
mov
in
xchg
pop
call
scas
push
arpl
mov
cs
and
dec
mov
lods
sub
lds
xchg
mov
dec
adc
inc
nop
fistps
xchg
mov
inc
imul
ficoms
in
gs
dec
addr16
dec
mov
not
mov
cmc
je
dec
incb
fcom
push
loopne
xor
xchg
cmp
cmpsb
je
test
and
push
ret
mov
inc
fscale
popa
jg
jmp
inc
and
es
dec
loope
dec
mov
test
push
mov
popf
cmp
test
push
pop
sbb
std
mov
push
or
and
xchg
out
jne,pn
sub
cltd
jbe
fdivr
imul
stos
test
loop
shll
mov
mov
nop
mov
mov
in
stc
std
stos
pop
mov
cs
imul
push
loopne
xchg
shr
pushf
cmp
test
mov
mov
shl
xor
mov
mov
fisttpll
aaa
mov
jge
cmp
push
scas
pop
and
aad
daa
repz
lcall
ds
jno
mov
jl
adc
push
fs
jno
cwtl
pop
inc
jo
dec
shll
dec
inc
jp
into
inc
or
in
stc
dec
shll
call
mov
test
fistps
pop
insb
cmp
fwait
mov
popf
out
mov
les
lds
lret
ljmp
jmp
subb
cmp
adc
xor
jbe
push
jne
mov
inc
imul
lods
popa
push
jmp
sbbb
xchg
shlb
mov
ja
mov
mov
mov
sti
gs
dec
xor
pop
in
lock
rorl
out
or
outsl
mov
push
pusha
call
cmp
cld
lods
lea
jmp
mov
mov
mov
xor
insl
ret
xor
push
movsl
push
popl
jmp
clc
pop
nop
adc
scas
and
mov
jmp
es
xchg
xlat
idivb
into
pop
addl
xadd
push
pop
addl
ret
cmp
addr16
mov
movsb
add
jne
pop
js
arpl
sbb
cmp
push
cmpsl
xor
jle
mov
repz
stos
in
aam
dec
jb
push
dec
std
mov
xor
pop
jne
test
out
and
rcr
scas
pusha
fdivl
mov
push
clc
sbb
cs
adc
aas
movsb
bnd
loopne
adc
aam
dec
add
sub
ret
mov
push
jecxz
loopne
ljmp
mov
add
xchg
inc
scas
add
and
add
cld
inc
out
lcall
scas
cltd
icebp
mov
dec
mov
adc
in
push
jmp
shrb
aas
je
loop
push
xchg
adc
lods
sub
fistps
sub
outsb
push
nop
pop
stos
ljmp
xor
cld
outsb
mov
push
outsl
push
sbb
lret
push
iret
lahf
inc
es
adc
arpl
cmpsl
or
and
shrl
adcl
fmulp
dec
mov
cli
mov
in
loope
popf
xor
mov
push
lret
lock
pushf
inc
enter
inc
push
mov
adc
adc
cwtl
cmpsl
mov
loope
nop
pop
xor
fldenv
popf
jle
jecxz
mov
dec
lods
dec
sub
es
sub
das
sub
sbb
aam
mov
xor
mov
dec
enter
pushf
adc
mov
movsb
add
clc
push
dec
leave
or
xor
daa
sbb
mov
cwtl
xor
enter
sbb
mov
fiaddl
call
fnsave
xchg
inc
insb
aaa
mov
into
fs
jecxz
mov
lret
js
ljmp
sahf
je
test
pop
pusha
cmc
cs
adc
in
dec
dec
mov
aas
inc
nop
into
sbb
and
push
push
jmp
test
std
out
push
gs
fidivs
mov
repnz
xor
imul
sbb
push
sbb
jle
sub
int3
fcmove
fwait
mull
fsubr
cmpsl
xchg
mov
sub
orb
xchg
xrelease
loope
hlt
dec
fisttpll
cltd
jnp
sarl
mov
add
andl
pop
lds
sbb
cmp
add
and
fsts
sarl
mov
daa
icebp
lock
lret
fsubp
ja
pop
movsl
repz
sbb
je
cmp
sub
xchg
js
int
in
mov
fildl
push
ja
inc
jns
mov
sub
adc
mov
pop
jg
sbb
push
outsb
mov
mov
lds
rcrb
inc
jae
lret
arpl
sbb
insl
mov
jb
sbbl
aam
mov
and
dec
pop
lods
add
push
or
popf
xchg
cltd
adc
dec
and
mov
push
aas
mov
pop
ja
cld
jle
movsl
fcmovnb
mov
lahf
sub
xor
jne
movsl
mov
fs
add
out
sahf
add
fs
adc
and
cmp
dec
hlt
sub
and
out
dec
add
into
mov
sbb
sbb
dec
pop
jnp
shlb
decl
mov
inc
xchg
addl
jnp
push
sbbb
das
inc
jb
out
mov
jb
inc
pop
bsf
pop
pushf
pop
popf
xchg
scas
mov
push
pop
enter
lahf
inc
stos
push
stos
lods
dec
int3
dec
dec
inc
cli
lret
dec
push
fidivrl
mov
mov
jl
shll
xor
cs
push
sti
imul
loopne
fdivr
push
scas
int
testl
lahf
mov
add
push
and
mov
pop
mov
add
add
pop
cli
cld
pop
fdivrl
fisubrl
call
sub
frstor
rcr
inc
stos
insl
outsb
push
and
sbb
add
in
pop
lcall
ja
rcr
into
xor
xor
popa
sbb
or
sub
scas
stc
dec
xchg
lock
fs
mov
sbb
mov
sbb
fadd
fldenv
jmp
mull
xor
inc
jbe
pusha
xor
lcall
pop
les
or
or
inc
scas
call
or
mov
inc
daa
mov
mov
jae
sub
icebp
loopne
inc
mov
mov
sbb
imul
cltd
jns
and
mov
movsl
mov
gs
xchg
in
mov
adc
and
outsb
cld
mov
call
in
lcall
les
sub
lods
inc
sbb
scas
cwtl
xchg
in
xor
or
std
cmc
fidivrs
dec
sbb
adc
mov
sub
mov
fwait
xchg
and
data16
popa
or
scas
out
add
imul
push
mov
out
cs
in
sub
dec
into
sub
shr
dec
push
popf
stos
pop
sbb
popa
sti
jl,pt
add
fstl
push
ljmp
inc
addr16
xchg
js
movsl
or
ljmp
jge
xorb
and
pop
pushf
scas
mov
std
push
stos
js
adc
leave
mov
das
dec
ds
fidivs
lcall
jnp
xchg
jno
or
popf
iret
fimuls
jmp
jge
jns
std
and
push
add
jne
incb
icebp
mov
mov
xlat
xor
stc
jnp
int3
push
jmp
iret
sub
mov
gs
outsb
add
in
scas
cmp
dec
lcall
stc
aam
shrb
iret
in
movsl
mov
or
push
je
lea
imul
imul
mov
test
jle
test
ds
pop
pop
dec
push
mov
sahf
shll
or
sub
sbb
add
fwait
mov
xorl
mov
add
fdivp
mov
fcmovne
pop
mov
cmp
inc
push
enter
xchg
leave
inc
fistps
xor
stos
sbb
dec
and
pop
or
lcall
pop
popa
sbb
push
lea
ret
pop
movsb
sbb
adc
cmp
jo
cmp
and
xchg
rorb
fisubs
stos
movsl
mov
ja
jl
cmp
inc
dec
bound
ja
das
add
xchg
xchg
stc
dec
mov
insb
cwtl
push
and
push
jmp
sub
das
shll
arpl
dec
addr16
adc
dec
insl
fidivrs
or
mov
sbb
aad
enter
dec
xor
jp
inc
or
nop
push
sub
sbb
int
push
mov
mov
jecxz
notrack
and
jo
iret
fs
push
or
enter
sbb
mov
cmp
or
jl
das
inc
cmp
xor
sbb
xchg
cmp
stos
and
sbb
jo
roll
dec
and
mov
mov
lods
arpl
add
repnz
ret
mov
daa
filds
cmp
shl
in
dec
decb
rorl
and
xorb
jo
or
leave
xchg
test
jne
imul
out
inc
cmpl
inc
mov
insb
shll
sti
in
or
leave
and
cmc
sub
and
jno
mov
stos
lcall
in
loop
sbb
test
sbb
daa
and
jb
jp
stc
stos
mov
inc
test
mov
dec
out
pop
fists
mov
loopne
in
jmp
mov
xchg
and
inc
inc
mov
mov
pushf
ret
bound
sbb
adc
out
enter
ljmp
dec
lret
aad
jnp
and
das
pop
mov
jecxz
loopne
push
lahf
sbb
repnz
xchg
aaa
rcrl
out
lcall
jne
inc
mov
pop
push
popf
dec
xchg
into
xor
fcomps
out
into
mov
add
mov
adc
sub
inc
add
sbb
sub
je
pop
fwait
es
mov
jl
xchg
mov
je
pop
iret
xor
out
lds
sti
or
add
movb
aas
stos
mov
pop
aas
xlat
mov
fbstp
inc
and
and
les
jmp
insb
xchg
mov
clc
cmp
push
mov
inc
pop
xor
repz
scas
js
adc
or
jg
andb
out
xchg
jnp
imul
adc
xor
rorl
mov
mov
adc
mov
mov
dec
mov
push
mul
cs
jp
sub
fdivrs
dec
inc
stc
mov
or
cltd
mov
lcall
or
in
gs
push
imul
mov
sti
scas
sub
lahf
push
xorb
call
cmp
xchg
enter
add
push
mov
pop
pop
lods
out
mov
loop
mov
push
ret
dec
cmc
xor
pop
popa
int
pop
repz
jns
pop
jbe
mov
pop
aad
les
adc
in
scas
pop
or
call
adc
add
inc
fdivrs
daa
aad
stc
sub
icebp
mov
jae
pop
sub
cs
push
lods
mov
shrl
jno
lock
add
mov
mov
dec
jmp
dec
aas
inc
lret
mov
inc
dec
jns
xchg
mov
dec
pop
mov
inc
out
pop
std
call
iret
xchg
lds
push
sub
mov
mov
mov
fistps
dec
lods
inc
mov
jge
dec
mov
or
leave
mov
icebp
xchg
cmp
adc
inc
xchg
sub
mov
jge
and
push
insb
aas
dec
or
pop
outsb
adc
data16
ja
lock
mov
pop
rcrl
test
sub
sar
add
jb
dec
jo
fcompl
xchg
xchg
xor
ja
loope
pop
in
loopne
outsl
andb
inc
xchg
add
loopne
dec
js
in
cmpsb
jg
cmc
inc
or
sbbl
inc
push
or
shl
sub
xor
xchg
mov
popa
mov
dec
inc
dec
adc
pop
andb
cmp
ja
in
sbb
loop
pop
fs
mov
pop
cmpsb
lret
cmp
fs
imul
mov
sti
icebp
ljmp
adc
rcrb
fld
mov
dec
sti
imulb
mov
clc
mov
scas
dec
mov
fldenv
mov
mov
sbb
bswap
ret
xchg
adc
shll
jo
pushf
sbb
mov
jne
fsubrp
xlat
or
test
mov
bound
sbb
xor
iret
scas
add
in
test
or
fsubrl
leave
adc
or
cmpsb
roll
sub
xor
push
int3
dec
cmp
jge
jnp
cmp
xchg
push
jne
xor
incb
jnp
xor
fisttpll
dec
lea
push
dec
test
dec
dec
out
mov
repz
add
das
sahf
and
aam
xchg
in
pop
push
pop
cwtl
jmp
aam
dec
sbb
std
jg
sbb
mov
xorb
popa
lock
int3
lods
lea
shll
inc
mov
popa
mov
jle
in
mov
jne
loop
scas
jecxz
lcall
cwtl
shlb
repz
xor
in
ret
leave
xchg
xchg
jne
dec
mov
adc
roll
in
popf
jns
gs
out
out
repz
inc
iret
xor
push
mov
cmpsb
xchg
cmpsl
arpl
adc
xchg
faddl
lret
sbb
call
mov
scas
pop
or
dec
lods
loope
cmp
addb
das
cmp
push
mov
pop
out
movsl
loopne
pop
pop
sub
sub
pushf
imul
or
inc
fwait
xor
dec
daa
cli
in
adc
cld
add
mov
fcompl
inc
int3
rcr
pop
mov
out
push
inc
adc
es
data16
pop
out
jnp
pusha
jmp
rcr
add
and
cmp
push
xchg
fistpl
ja
mov
or
fldcw
sahf
mov
push
arpl
call
inc
lock
insl
cmp
ds
jp
cmpsb
cs
scas
leave
pop
icebp
aas
push
les
inc
addps
push
mov
fptan
cmp
rcr
jno
dec
push
loop
movsl
jne
ss
lods
or
xchg
movsb
gs
push
test
or
ds
fucom
popf
decb
cmp
and
adc
js
dec
shr
lock
dec
sub
repnz
adc
outsl
xchg
mov
cs
out
jge
neg
inc
and
pop
imul
repnz
xor
add
adc
pop
or
jecxz
or
gs
int
sub
xchg
push
mov
lods
or
sub
lcall
and
movsl
imul
xchg
prefetcht1
sbb
icebp
subb
pusha
add
addr16
roll
mov
pop
std
xor
sbb
aam
adc
xchg
push
jae
and
sub
bswap
stc
lods
pop
cmp
lret
test
sub
push
cmc
xchg
test
xlat
inc
jmp
mov
outsl
mov
dec
aaa
lods
pop
jle
into
cmc
xchg
aad
xor
arpl
fiaddl
xchg
iret
sub
stos
mov
mov
bound
aas
xor
pusha
inc
sub
adc
leave
scas
popa
cmpsl
dec
xor
jp
mov
lock
shlb
mov
sbb
faddl
push
ret
les
mov
jg
adc
jmp
ret
iret
and
int
sbb
insb
js
pop
push
pop
inc
cs
or
pop
lcall
sbb
sbb
push
enter
out
lret
cmpsl
xor
cmpsl
int
mov
inc
stos
inc
pop
sbb
filds
out
ret
loope
sub
dec
lock
clc
cmpb
or
lret
xor
sub
sub
icebp
rolb
mov
jo
or
cltd
adc
inc
jecxz
xor
clc
stos
fs
ret
xchg
sbb
jle
aas
popf
aas
repz
adc
outsb
cmp
mov
jne
mov
or
outsb
push
test
cmpsb
adc
sti
mov
xchg
vmwrite
test
in
sbb
adc
sahf
adcb
dec
mov
sub
mov
mov
negl
out
popf
mov
sub
mov
int
es
cmp
jmp
fcomps
call
into
fs
mov
and
push
mov
ret
scas
mov
jge
dec
icebp
ss
ret
movsb
xchg
int3
and
movl
pop
aad
rorb
in
jp
popa
xor
sub
test
lcall
test
das
jo
aaa
les
clc
push
pop
xchg
iret
repnz
imul
or
test
mov
aam
xorb
push
loope
mov
cmp
ret
pop
mov
xchg
xchg
addl
push
or
int3
mov
push
pop
cmc
pop
cmp
aad
lds
repnz
in
jecxz
fidivs
stos
xor
shr
xor
jle
in
ficoms
cltd
cld
out
mov
dec
xchg
push
cmp
dec
mov
push
insl
dec
stc
sbb
dec
je
or
into
int3
aad
mov
in
push
loopne
mov
xchg
int3
cmp
pop
jns
lcall
adc
sbb
insb
or
pusha
push
out
inc
adc
lcall
out
pushf
dec
imul
dec
cmp
add
in
sbb
cld
sbb
movsl
mov
jns
jae
xlat
in
mov
jp
inc
push
mov
sub
ja
dec
outsl
sub
mov
jb
xchg
pop
pop
out
lock
in
lea
in
aad
pop
test
idivl
pop
je
add
jl
push
mov
mov
repz
and
fcoms
mov
mov
loope
jo
push
sbb
rorb
mov
push
loopne
mov
je
push
or
push
pop
pop
fldl
int3
test
fistpll
adc
mov
mov
push
inc
push
dec
clc
movsb
push
aam
bound
dec
inc
jge
dec
sbb
orb
es
cmp
fistpll
jl
movsl
enter
dec
movsl
jle
ficompl
adc
or
addr16
in
out
lds
push
mov
rorl
popa
mov
call
or
loope
xchg
jl
int
fistpl
pop
jge
mov
push
pushf
fnsave
cli
mov
test
cmp
fistps
adc
cmp
adc
mov
lret
fsubl
mov
xor
rolb
imul
mov
fildl
pushf
loop
cmp
sbb
loop
mov
popf
jne
mov
inc
pop
aas
add
or
mov
lret
sub
lods
and
data16
test
jb
shll
xchg
int
push
loope
je
jbe
arpl
sub
sbb
xchg
std
stos
push
insl
orl
jbe
and
xchg
jp
jmp
pop
sbb
pusha
mov
movsb
fldt
mov
mov
call
pop
cli
lret
jae
jecxz
sti
push
rorl
push
pop
or
jmp
movsl
jne
pusha
rcrb
bound
lcall
popf
aas
lock
cmp
xlat
jle
faddl
push
xchg
pop
push
jg
sbb
push
loope
mov
pusha
or
jno
cmpsl
repz
and
xchg
inc
sub
push
subl
addb
outsl
in
test
das
adcb
cmp
mov
xchg
movsb
les
scas
mov
fwait
ss
add
mov
and
mov
nop
addr16
test
mov
pop
in
out
and
dec
jg
sbb
push
adc
ja
jecxz
mov
sub
pop
and
sub
subl
mov
pop
lret
mov
inc
inc
cmc
ja
out
inc
iret
les
in
sub
jmp
push
pop
cmpsb
ret
add
pop
dec
out
mov
xor
in
xor
out
test
repnz
rorb
movsb
mov
cmp
and
jle
jl
cmp
pushf
loope
mov
out
dec
dec
mov
rcr
cld
mov
bound
in
aad
outsb
sti
inc
mov
popa
addr16
push
out
cmp
stos
pop
rorb
loope
das
cmp
push
add
xchg
lret
push
fistl
push
cltd
sub
mov
dec
sbb
xchg
mov
push
add
add
into
jae
je
in
fwait
cmp
inc
jmp
adc
mov
mov
cs
sub
negb
sub
and
lods
fdivrl
push
mov
inc
lret
fsubrl
jmp
inc
add
out
loope
add
clc
adc
repz
or
jns
out
mov
pop
and
or
pop
daa
std
aad
xchg
xchg
jp
leave
pop
aad
rolb
jns
lcall
gs
bound
rcrb
lret
divb
mov
jp
out
sbbb
pushf
xorb
rclb
push
pop
mov
pop
push
fbstp
push
data16
mov
lods
in
mov
lods
icebp
sbb
mov
lret
add
inc
iret
adc
inc
pop
add
mov
aaa
jmp
mov
add
stos
ss
cmp
stc
push
pslld
cltd
in
push
cmp
negl
fiadds
int
pop
cmp
cmpsl
and
cmp
dec
ljmp
push
jmp
or
adcb
push
pusha
bound
cli
inc
dec
in
sub
dec
mov
int3
scas
push
mov
adc
xor
arpl
jmp
and
inc
push
sarl
sbb
mov
out
pop
xor
int
sub
ss
or
mov
stc
mov
jecxz
shll
dec
mov
addb
gs
in
jns
lahf
ljmp
bound
jmp
mov
sti
push
daa
fisubrl
sbb
ftst
dec
icebp
aad
fisttpl
mov
stos
test
mov
aas
scas
pop
adc
loopne
xchg
insl
adc
out
mov
jg
push
fdivrl
cmc
or
sbb
xchg
xchg
scas
xor
int
imul
mov
cmp
fsubrl
arpl
aam
sub
dec
pushl
mov
cltd
cmpl
fsubr
cmp
push
lret
mov
jbe
mov
data16
mov
pushf
ljmp
dec
cmp
dec
loop
movsb
cmp
lock
cmp
insb
sahf
mov
xor
inc
fisttps
inc
and
mov
mov
or
or
out
idivb
jo
and
jge
into
sbb
xor
test
mov
inc
pop
cmp
shlb
pop
push
inc
adc
iret
inc
imul
add
adc
in
rol
mov
out
mov
dec
ja
dec
inc
cmovs
xor
push
fwait
es
mov
mov
icebp
push
and
or
mov
rcr
cmp
mov
jecxz
pop
push
mov
adc
sbb
mov
jns
in
cmp
and
xchg
lock
aad
pop
push
fsubrl
xchg
and
ret
and
pop
lds
inc
pop
push
cs
mov
std
sbbb
adc
dec
cs
int
ss
cmpsl
and
jg
xchg
mov
insb
lcall
mov
or
add
mov
pop
mov
fucomp
and
and
mov
dec
out
xor
dec
mov
outsl
xor
lret
inc
xchg
cwtl
push
or
inc
ret
out
xorl
mov
and
mov
repz
mov
in
mov
push
in
mov
push
push
lret
add
mov
dec
out
jae
xor
sbb
jge
dec
test
or
jmp
mov
arpl
lret
dec
jge
xor
sbb
hlt
adc
inc
pop
leave
cld
adc
mov
ret
and
jns
roll
sbb
cmp
cmc
out
pop
aam
inc
ret
cwtl
data16
push
jns
mov
mov
movsl
xchg
jno
testl
mov
outsl
daa
mov
pop
pop
inc
xor
xlat
push
addr16
inc
push
xchg
xchg
xchg
loop
cli
loopne
loop
test
mov
xchg
js
imul
rcrl
cmp
mov
test
repz
mov
adc
mov
ljmp
in
fisubl
and
sub
repnz
dec
out
push
pop
insb
rcrl
negb
dec
int
xlat
inc
and
cmc
fisubl
shrl
push
cmpb
push
sbb
adc
jge
hlt
or
inc
stc
pop
cwtl
push
mov
scas
sbbl
mov
mov
xor
popa
dec
push
push
stos
pop
mov
push
jno
movl
xchg
jb
neg
xchg
iret
jg
cmp
ret
add
and
stc
rcrb
fistpl
call
movsb
mov
sub
decl
aaa
out
mov
pop
mov
divl
test
mov
loop
imul
in
lret
fidivrs
int
dec
mov
icebp
clc
adc
mov
lea
sbb
adc
pop
jns
jg
mov
je
out
xchg
cmp
or
lea
and
mov
out
mov
inc
outsl
jns
gs
loop
push
mov
or
es
mov
jp
aam
mov
dec
shll
xchg
les
cli
dec
into
ds
pop
imull
adc
mov
sbb
movsl
or
or
cmp
mov
push
mov
fwait
sti
jecxz
loop
inc
ret
sbb
lock
mov
sub
xor
add
mov
daa
int3
add
xor
pop
fdiv
cltd
test
shl
fildll
jae
and
pop
push
jmp
push
add
jmp
daa
ss
jae
cmpl
in
adc
aad
test
shll
addl
inc
sbb
cmpsb
push
sar
sub
push
add
mov
inc
sbb
mov
lahf
movl
xchg
xchg
insl
pop
aad
xchg
call
push
out
push
je
idivl
sub
imul
cwtl
movsl
dec
dec
cs
mov
pop
push
adc
cs
ret
insb
repz
pop
iret
mov
lods
xchg
ret
add
iret
mov
push
bound
hlt
push
arpl
xchg
ja
jnp
fwait
rcll
and
movsb
or
popf
cmp
loope
add
insl
div
push
inc
aad
xor
test
popf
push
lods
xor
jle
pop
inc
or
push
sahf
sbb
fucompp
dec
ds
into
mov
pop
and
das
add
mov
int
adc
and
test
dec
xor
pushf
stc
sar
xchg
mov
repnz
xor
jmp
xor
dec
adc
les
ret
adc
jl
sub
mov
push
inc
jmp
adc
mov
movsl
jns
lock
shlb
pop
xor
and
jns
gs
sbb
xchg
xchg
mov
push
mov
stos
je
inc
jo
inc
cltd
into
cmc
add
cs
xchg
aam
icebp
ret
add
xor
lret
dec
lock
insb
aam
sub
jb
or
std
mov
leave
enter
stos
addr16
inc
sbb
pop
cmpsl
jno
bound
pop
inc
das
cmc
mov
and
sysret
or
les
xor
lods
std
shlb
dec
or
call
push
cmp
idiv
lds
jg
pop
insl
in
out
push
ja
pop
pop
sub
btcl
fldcw
cltd
pop
movsb
add
dec
pop
jg
push
test
push
push
mov
int
aam
xchg
push
ja
jne
ss
inc
sbb
add
mov
cmpsb
fnsave
pop
mov
push
pop
loop
insl
jle
cmpsb
jge
inc
push
bound
dec
lahf
scas
inc
cmp
inc
ret
adc
adc
or
aam
add
push
push
mov
imul
out
test
lret
fistps
fstpl
scas
loope
xchg
or
arpl
and
push
dec
lock
sti
adc
push
push
in
outsb
mov
mov
jnp
dec
sub
or
push
scas
fnstenv
movsb
inc
sahf
enter
pop
adc
xor
sub
js
add
out
sub
xchg
adcb
mov
fimull
ficoms
xchg
sbb
dec
xor
test
xor
and
sbb
clc
push
pop
movsb
into
stos
dec
jmp
pop
xor
cmp
scas
jb
sub
in
mov
mov
mov
test
mov
and
loop
orb
xchg
js
and
aam
jns
nop
inc
cs
iret
sub
mov
mov
or
jns
icebp
stos
enter
icebp
lods
xchg
popa
jb
je
mov
jbe
repz
push
stos
lret
sub
orb
mov
adc
jl
pop
jno
test
adc
lahf
js
pop
mov
mov
sarb
adc
jmp
aad
pop
and
or
pushf
inc
std
xchg
jb
inc
test
out
loope
sub
sbb
mov
test
mov
cmc
sbb
hlt
adc
add
iret
push
add
pop
or
adc
hlt
das
in
shr
aaa
sbb
repz
mov
mov
jmp
inc
outsb
pushf
mov
dec
movsl
mov
fnstsw
cld
fmul
repnz
adcb
out
fs
insb
and
dec
mov
jnp
loopne
sbb
ficompl
es
mov
inc
sbb
lea
data16
and
mov
out
mov
in
shlb
dec
dec
cs
sub
fisubs
inc
out
cs
jae
out
aad
cs
sbb
and
dec
fidivrl
outsl
add
dec
out
mov
pop
idivl
fnsave
test
mov
or
popf
sbb
das
cld
lea
enter
sbb
insb
sub
in
cmp
dec
aad
adc
cmpsb
pop
jbe
clc
int3
je
cli
push
adc
xchg
cmc
mov
mov
lods
cltd
cmp
jmp
loope
inc
sahf
into
or
out
mov
ja
ss
je
aaa
push
jg
imul
scas
sbb
dec
xor
mov
xchg
push
ds
and
sbbb
roll
and
pusha
aas
xchg
test
dec
mov
mov
popa
cmpsl
fcoml
mov
scas
fsubl
idivb
jmp
fwait
ds
test
addr16
call
and
and
inc
andl
inc
cmp
adc
fnstsw
pushf
popf
int
sahf
adc
push
pop
pop
rcl
aas
push
leave
sub
mulb
je
cmp
mov
push
push
add
loopne
mov
sbb
xor
ss
cld
imul
clc
popf
pusha
fs
and
pop
pop
dec
jle
add
rorb
push
adc
sub
cmp
rclb
inc
fdivl
jle
sub
cmp
mov
lock
into
mov
cmp
js
xor
inc
das
aad
adc
xor
loop
into
mov
lahf
sbbb
pop
jo
adc
fildll
cld
ret
idivb
mov
outsb
push
xchg
cltd
mov
push
fstps
inc
pop
and
je
cmc
jecxz
or
xor
xor
xchg
push
cmp
jae
fbstp
mov
xchg
lods
test
push
stc
bound
pop
xlat
dec
and
fcoms
mov
add
sub
insb
xchg
xchg
addr16
mov
cld
mov
add
hlt
mov
or
push
movb
repz
testl
das
out
xchg
jg
dec
xor
mov
pushf
push
jo
sbb
cmpsl
sti
cli
int3
xchg
push
fidivrl
jecxz
or
add
push
cwtl
ss
mov
das
flds
pop
xor
repz
jno
xchg
out
outsb
sub
jecxz
adc
dec
mov
lods
mov
xchg
cmp
sub
dec
loope
pop
enter
das
fbstp
cvtpi2ps
shll
mov
mov
mov
ljmp
cmpsl
or
into
jg
lahf
sbb
sub
shrl
into
imul
mov
scas
cli
ficoml
iret
cmpb
and
std
pop
in
adc
js
mov
mov
jle
pushf
jne
pop
repnz
notl
aas
cld
xor
dec
add
insl
into
xchg
mov
ficomps
mov
jecxz
or
cltd
lcall
add
or
xchg
push
adc
out
das
outsl
aam
dec
popf
xor
push
jo
mov
adc
sti
out
cmp
fs
inc
addr16
jle
push
mov
mov
aaa
mov
out
cmp
push
adc
ret
xchg
ss
add
setb
clc
cmp
std
sub
push
jb
fildll
adc
push
aaa
dec
push
mov
mov
and
aas
addb
clc
addl
cmpsb
inc
out
pop
test
mov
pop
jns,pt
fnstsw
inc
sub
test
mov
imul
icebp
cli
add
cmp
int
inc
shl
rcll
jns
addl
jns
xor
pop
inc
ljmp
or
aam
add
sub
adc
in
mov
push
ds
cmpsb
stc
push
call
cmp
fidivs
sbb
or
add
rcrl
jp
fistl
xlat
and
add
testl
outsl
push
pop
ficoms
cmpsb
mov
inc
mov
or
imul
pop
jnp
lds
inc
insl
les
or
jbe
ret
call
arpl
and
dec
enter
rclb
jnp
xchg
lea
mov
outsb
push
mov
test
loop
lret
test
arpl
mov
rorb
dec
pop
add
repz
lods
mov
imul
lcall
jge
mov
jmp
sbb
inc
or
test
jbe
xchg
jbe
imul
stc
push
mov
push
cmpsb
fs
xchg
into
cmpsb
lcall
mov
insb
loopne
add
cmp
fistpll
movsl
ja
xchg
xchg
xchg
jb
xchg
dec
sub
jg
in
mov
imull
dec
aam
mov
push
push
jbe
push
inc
xor
clc
push
pop
dec
pop
dec
jp
lret
cmp
xor
scas
adc
inc
psubsw
fistpll
xchg
test
jge
and
fimull
das
xchg
in
xlat
rol
in
push
pop
dec
std
sbb
repnz
pop
dec
inc
loop
cmpsl
lar
stos
push
dec
lea
sub
fldcw
sbbl
and
xchg
imul
imulb
or
jne
mov
mov
movsl
shlb
pop
push
mov
sbb
outsb
xlat
out
dec
ja
in
ret
push
cmpsl
push
repnz
inc
and
fdivs
mov
sub
aam
pop
pop
roll
push
xchg
aam
imul
and
xchg
ss
int3
sbb
xor
aad
lret
jp
jb
xchg
mov
xor
fs
out
jle
cmp
xor
daa
mov
paddw
aas
jecxz
jp
aam
addl
repz
cmp
cs
repnz
fildll
pushf
mul
cmp
mov
adc
popa
in
xchg
push
adc
hlt
lret
and
cld
jbe
rol
repz
xor
jno
shll
rolb
adc
jnp
jae
aam
std
push
fiaddl
in
bound
mov
mov
push
aam
out
ljmp
fsubp
adc
adc
repnz
fadds
mov
and
dec
sbb
das
flds
enter
outsl
pop
jmp
jecxz
xlat
pop
int
xchg
inc
adc
out
mov
cmp
and
shll
xor
scas
loopne
sub
js
clc
stc
stos
stc
sbb
sbb
and
outsl
pop
inc
sub
sti
pop
and
mov
mov
xchg
loopne
cmpl
sbb
jnp
inc
dec
imul
mov
insb
das
arpl
inc
loope
jmp
fidivrl
jg
cmp
lret
movsl
iret
xchg
xor
notb
pop
loopne
add
mov
rolb
rep
push
in
add
das
mov
lea
test
xchg
icebp
sub
fcomps
cmp
dec
jecxz
stos
ja
loope
int3
inc
mov
mov
sbb
dec
lcall
mov
gs
jle
pop
insb
insb
adc
jb
cmp
aad
inc
push
int
aaa
movsl
repz
sub
repnz
add
push
daa
or
xchg
cmp
cli
or
cmpsb
xor
loopne
or
pop
rep
mov
jne
loopne
mov
jle
ss
test
cmpsb
mov
daa
xorl
test
jle
jae
pop
inc
add
int
mov
mov
adc
add
lods
imul
das
mov
sbb
cmpb
adc
test
xor
xchg
push
test
subl
int
cwtl
sub
dec
jg
popa
xchg
and
xor
mov
sbb
xchg
mov
xchg
xchg
pop
mov
loopne
sti
xchg
xlat
mov
ja
in
hlt
adc
push
xchg
adc
xchg
stc
mov
mov
stc
cmc
popf
xchg
rorb
inc
dec
stos
in
mov
lods
sahf
mov
pop
inc
ds
mov
dec
cmp
cld
adcb
mov
iret
cmp
add
jecxz
les
xchg
jo
add
clc
ja
xor
rolb
or
cs
ds
cmpsl
fisubl
cmp
sbb
out
xchg
gs
pop
sahf
add
ret
pop
push
enter
push
push
xor
xchg
xchg
xorb
or
hlt
mov
sub
mov
cld
xor
nop
push
cmp
push
mov
add
out
jecxz
jecxz
subl
add
sbb
and
inc
jl
sub
xor
scas
and
outsl
lcall
loope
sub
clc
arpl
rolb
jl
insl
lods
sub
fdivs
or
cwtl
insl
xchg
cs
mov
fcompl
test
mov
push
loop
stos
pop
gs
andb
push
push
jge
aaa
add
fstpl
loope
into
push
inc
and
jge
out
mov
addr16
mov
push
mov
mov
pop
stos
clc
ds
idiv
dec
les
das
jae
jecxz
arpl
push
addr16
aas
push
xchg
stos
es
pop
jle
add
aad
dec
add
fisubrl
mov
push
shl
aam
cmp
mov
js
add
imul
aad
daa
dec
xor
pop
inc
cmp
mov
jl
pop
mov
pop
test
push
mov
mov
pusha
pop
pop
mov
jno
xor
jb
int3
sbb
icebp
pop
or
mov
add
data16
add
inc
jp
enter
rclb
icebp
mov
xchg
test
in
pop
aas
lcall
mov
pop
xchg
jg
mov
cmc
inc
popf
in
repnz
jb
inc
push
sub
mov
test
out
dec
mov
pop
jp
push
push
mov
arpl
out
loope
in
rcr
pop
mov
insl
movsl
push
add
movl
lods
lcall
xchg
inc
jbe
cmp
sub
sahf
pop
imul
add
lcall
cmp
pop
mov
push
mov
int3
mov
push
or
sub
mov
sub
popa
ret
adc
es
sbb
jp
lcall
lahf
enter
addl
and
outsl
mov
xchg
sti
mov
lret
nop
mov
jecxz
in
push
out
out
xor
xor
sarl
call
mov
or
divl
shrl
add
psrad
mov
mov
or
sub
xor
shrl
sarl
fimull
pop
addr16
sub
ds
jnp
sub
jb
and
mov
sub
cs
cmp
mov
test
push
es
int
aaa
sti
addr16
mov
shrb
clc
inc
in
pop
push
mov
subb
es
lea
into
xor
and
sub
dec
mov
cmp
pop
pop
fwait
fwait
ret
jp
xchg
or
and
nop
fcomps
mov
push
jmp
icebp
cmpsb
dec
add
mov
arpl
jo
dec
and
out
cmc
jecxz
lds
movsb
mov
std
cmpsl
ficoms
imul
hlt
fsincos
addr16
mov
mov
ret
jb
mov
icebp
dec
cmp
sarl
lock
xor
test
mov
and
clc
lahf
orb
jmp
push
icebp
fxch
mov
ror
adc
mov
jbe
out
inc
inc
mov
aad
stos
not
movsb
daa
int3
fwait
jnp
xor
sarl
rcr
mov
push
loope
nop
jge
mov
or
or
je
flds
mov
iret
push
mov
xor
gs
xor
mov
inc
adc
mov
mov
sub
sbb
mov
inc
and
jo
test
adc
or
xchg
shll
fs
or
adc
mov
mov
aad
mov
xchg
dec
dec
or
xchg
sbb
addr16
sub
add
cmp
ja
sbb
es
dec
out
mov
mov
sarb
insb
or
fdivl
sbb
int3
sbb
add
xchg
dec
jno
mov
scas
pop
push
sub
xchg
popf
xor
frstor
fildl
inc
fsubrs
shr
js
les
mov
lock
test
sbb
aaa
cmp
pushf
imul
inc
push
clc
push
sub
push
push
cli
movsb
pop
dec
jbe
pop
push
int3
sbb
xchg
add
pop
enter
mov
xchg
mov
push
push
add
xor
in
pop
jae
pop
pusha
inc
mov
sti
sub
mov
jo
movsb
jg
das
xor
adc
les
xor
sti
fimull
mov
dec
stos
mov
in
inc
push
or
inc
xlat
mov
mov
fsubrs
push
cmp
inc
mov
mull
sbb
clc
cmpb
jbe
cmp
mov
aad
movsl
out
xor
cmp
inc
lcall
shr
pop
pop
movl
out
mov
mov
or
das
stos
js
dec
das
in
cmpsl
cmc
adc
loope
sbb
test
sbb
or
adc
lock
xchg
test
fwait
lret
sub
jge
mov
test
je
mov
cwtl
loopne
ljmp
mov
cs
insl
xor
pop
mov
lahf
sbb
adc
icebp
stos
or
cli
rolb
pop
and
lock
repz
lret
fwait
enter
clc
sbb
mov
xor
je
insl
xchg
cmp
aad
push
hlt
cmpsl
mov
mov
sar
std
nop
or
out
arpl
adc
ljmp
pop
movsl
mov
pop
or
xchg
in
sarb
sbb
jg
std
dec
in
mov
in
adc
jge
int
pop
cld
arpl
and
div
sub
mov
jecxz
repz
outsb
rcrb
xor
or
add
pop
test
mov
sub
xor
inc
popf
out
sub
in
mov
sbb
es
xor
and
sarb
out
addr16
or
sbb
scas
scas
pop
loop
xchg
loop
cwtl
xor
lock
rorl
pop
cmp
push
ss
push
sub
push
add
scas
dec
mov
inc
mov
xor
sub
sbb
rclb
mov
lret
loop
cmp
mov
dec
inc
cltd
mov
cmp
shlb
aas
into
cltd
jecxz
inc
inc
mov
sub
inc
pushf
add
jno
sbb
in
test
xchg
sbb
aad
xchg
int3
sti
sub
mov
xchg
fsubl
or
xchg
mov
add
mulb
lret
dec
mov
das
jle
aam
inc
mov
mov
push
aaa
sti
cmc
dec
rcrl
and
push
fidivl
adc
enter
rorb
subl
mov
push
aam
fxch
adc
jnp
inc
mov
sbb
inc
add
pop
fwait
sub
add
or
sub
sahf
jb
inc
mulb
ficoml
xchg
mov
out
xchg
and
loop
jo
insl
jnp
xor
xor
pop
imul
aam
or
addb
inc
dec
cmp
or
andl
sub
push
jp
inc
dec
dec
xlat
fsub
cmp
inc
xchg
aas
add
faddp
mov
xchg
push
fs
loop
adc
xor
stos
mov
scas
push
leave
addr16
push
fstp
jb
or
rcll
and
pop
gs
ret
adc
out
sbb
hlt
sub
sub
in
jge
inc
cmpb
pop
call
cmp
sub
lods
pop
mov
lods
xchg
push
mov
mov
clc
sub
xor
mov
push
add
cmp
std
into
jae
ja
add
pop
ss
push
cmp
std
mov
cltd
and
cmp
arpl
out
icebp
pop
adc
sbb
sbb
js
mov
sti
mov
pop
mov
xor
insb
lret
sbb
cwtl
mov
pop
gs
pop
lock
shlb
jge
das
cld
dec
mov
popf
lret
jbe
popf
mov
ds
data16
fs
cmp
ficoml
daa
xchg
out
movsb
dec
mov
inc
lock
fdivl
clc
pushf
add
xor
pop
pop
int
lods
je
cmc
add
test
stc
inc
adc
sub
mov
adc
sbb
loopne
pop
mov
jno
icebp
push
out
hlt
pop
std
cmpsl
push
lea
adc
sub
and
inc
mov
xchg
loop
sub
adc
push
add
ret
outsb
sbb
lds
mov
shll
repnz
pop
inc
and
adc
idivb
and
scas
int3
sbb
jmp
test
popa
pop
inc
enter
aaa
js
inc
pop
pop
adcb
mov
nopl
sub
adc
jno
or
test
xor
add
sub
cmp
jno
addl
clc
push
or
insb
pop
push
jge
lcall
or
cmp
or
inc
outsl
mov
repnz
jb
sub
push
outsb
rol
inc
lods
repnz
or
cmp
and
dec
mov
push
and
cmp
or
divl
cmpsl
sub
sbb
fwait
pusha
xorl
sbb
rolb
adc
xchg
jmp
movsb
fdivrs
sti
sbb
test
pusha
mov
addb
mov
movsb
pop
push
cmp
repnz
ljmp
mov
push
enter
outsl
sub
int
daa
into
cmp
loope
aam
cs
xor
daa
mov
daa
inc
mov
push
sub
pop
test
js
lock
int
pop
std
std
xchg
or
adc
or
repz
xor
int
cwtl
xchg
fildll
pop
imul
mov
cld
mov
daa
lcall
loopne
jbe
insl
jmp
mov
xchg
push
lds
push
pop
loop
sub
or
std
nop
test
test
sahf
or
mov
push
dec
sub
xchg
std
jbe
inc
cmp
cmp
jne
or
idivb
mov
and
arpl
das
xchg
mov
or
inc
jg
jge
jecxz
out
movsb
hlt
leave
mov
andps
ss
add
std
xor
mov
jle
inc
cwtl
dec
jge
lea
lea
movsl
push
mov
pop
outsb
fiadds
movsb
popw
add
pop
nop
lods
dec
and
and
push
dec
jge
sub
sub
aas
sub
fistps
lahf
sbb
ficompl
sbb
in
imul
call
fs
rcrl
inc
jbe
movsl
add
jo
push
out
lret
mov
sbb
in
or
jecxz
scas
push
pop
add
mov
adc
mov
leave
jp
adc
or
pop
adc
dec
and
rorb
or
test
push
call
lahf
shrb
dec
ret
sub
mov
mov
pushaw
inc
fldpi
mov
subl
out
jp
in
and
enter
add
repnz
mov
xor
mov
loop
jb
cmp
call
shlb
dec
iret
rorb
out
ds
iret
pusha
hlt
or
in
xor
cwtl
mov
mov
aad
fldenv
aaa
cmp
scas
mov
cld
jp
data16
ljmp
test
push
loope
fmuls
repnz
jae
movb
imul
daa
popf
inc
inc
xchg
or
imul
fdivrl
fstpl
data16
inc
mov
ljmp
insl
lock
mov
jmp
inc
lea
addr16
and
in
sbb
mov
inc
js
mov
add
dec
outsb
adc
dec
mov
push
mov
icebp
divb
and
sbb
shr
push
popa
jmp
les
push
mov
les
aam
pop
loop
mov
rol
out
lods
mov
out
push
nop
xor
jno
jmp
inc
and
xor
mov
jne
mov
sbb
xor
mov
mov
or
add
cli
xchg
ret
mov
gs
pop
inc
enter
lods
fistl
orb
mov
int
sbb
or
in
and
push
ret
mov
inc
in
jecxz
adc
and
in
xor
stos
push
inc
mov
mov
sbbl
outsl
mov
and
jae
and
subl
into
or
adc
pushf
insl
cmc
xchg
cmp
in
sbb
fldl
fldcw
out
cmc
jno
pop
xor
movsb
jge
or
pop
adc
ret
insl
cs
stc
fdivl
lahf
xor
in
sub
adc
mov
mov
movsl
jb
mov
sti
arpl
add
stc
mov
add
cmc
mov
mov
push
xor
or
sti
shrb
mov
jb
push
stc
lods
test
mov
mov
mov
insl
ds
push
jge
mov
adc
jbe
mulb
sub
mov
mov
xchg
add
add
ja
xchg
rorb
inc
add
mov
fdivp
daa
sub
daa
sbb
test
rclb
inc
movsb
dec
mov
sub
add
add
into
adc
insb
inc
cli
push
jno
in
mov
push
or
shrl
lcall
fs
mov
mov
iret
mov
jbe
dec
cmp
push
testb
push
xor
stos
cltd
out
push
out
cmpsb
push
push
mov
add
and
mov
xchg
pop
movsl
xor
cmpsb
pop
xchg
adc
sbb
aam
sub
repnz
dec
mov
jl
push
dec
mov
shl
lods
js
ret
dec
mov
sbb
orl
and
jmp
scas
xchg
pop
ljmp
aam
mov
lds
dec
xchg
mov
xchg
xchg
add
cwtl
mov
add
fs
push
clc
icebp
push
js
ja
filds
cmp
cltd
ret
call
jge
sbb
jecxz
aaa
xor
ss
cmp
and
out
jnp
in
pushf
xchg
cmp
bound
mov
shll
test
loopne
test
sbb
out
pop
inc
mov
mov
jb
pop
mov
aad
sub
roll
into
mov
repz
mov
cmp
lods
sub
sub
sub
adc
insb
scas
push
leave
xor
imul
mov
fldcw
push
shlb
lahf
sbb
iret
inc
inc
pop
or
and
xorl
enter
insb
movl
in
orb
mov
lods
jl
movsl
sub
cmp
mov
hlt
add
jmp
inc
sbb
jo
outsb
and
pop
iret
mov
fs
adc
lods
jbe
or
xchg
or
ljmp
xor
inc
leave
enter
mov
jecxz
in
or
pop
inc
xlat
pop
stos
pop
hlt
mov
mov
lods
es
cmc
adc
fisttpll
out
jg
adc
into
stc
jle
push
sbb
inc
jnp
sub
rorb
or
pop
out
test
inc
data16
xor
jnp
push
inc
sbb
fwait
ret
ficoms
pushf
int3
mov
test
enter
xchg
sti
ja
pop
sarl
or
jg
push
dec
or
inc
dec
addr16
xchg
xchg
cltd
mov
adc
xchg
imul
fsubr
out
shrb
cmp
iret
clc
js
stc
out
mov
xor
xor
fistpll
sbb
dec
daa
cmp
pushf
ds
insl
push
mov
xor
hlt
xchg
cmp
add
mov
sub
dec
lcall
call
xchg
push
jae
insb
movsb
mov
out
daa
fidivl
fldl
or
inc
add
xchg
adc
push
mov
cmp
lock
notl
add
bound
into
add
mov
bswap
push
xchg
outsb
scas
cs
add
push
xor
push
aas
push
pop
cmpsb
cmp
sbb
out
fidivrl
sub
int3
pop
xchg
cltd
inc
out
jecxz
sub
in
mov
adc
imul
icebp
in
pop
imul
push
mov
adcb
scas
cmp
clc
shlb
jne
push
pop
lcall
pop
es
push
shr
mov
shrl
push
outsl
pushf
aas
cmpsl
fnstsw
jmp
aas
fists
int3
lahf
cmp
gs
test
sub
or
sub
popf
enter
cmp
mov
adc
imul
adc
enter
filds
sub
arpl
fnstcw
fldt
cmp
inc
jns
push
push
or
adc
out
add
cs
mov
gs
movb
out
xchg
dec
push
sub
dec
jp
addb
xor
xor
movsl
insb
and
orl
out
push
mov
pop
out
incl
fistps
inc
mov
inc
aad
xor
inc
lret
nop
icebp
fnstsw
xor
jl
lret
mov
cli
fmulp
mov
cld
jle
pop
mov
adc
pushf
sar
int
cmp
pop
cmp
das
pop
pop
push
cmpsb
insb
lahf
int
rorb
and
rcrb
test
inc
mov
xchg
hlt
sarb
test
jmp
movsb
fisttpll
loopne
inc
imulb
movsl
lea
mov
cld
cmp
push
stos
rolb
stos
mov
xor
sub
iret
rorl
cmp
cmp
or
ret
mov
mov
push
mov
adc
inc
mov
movsb
repz
xchg
mov
cld
dec
xorb
div
add
cmpsl
cli
push
mov
sub
imul
dec
xlat
cmc
call
and
lahf
fs
pop
mov
das
jecxz
push
repz
mov
sub
out
xor
int3
push
mov
sub
outsb
jp
sub
cld
mov
push
and
mov
or
mov
xor
lods
cld
aam
stos
mov
pop
repz
rorl
and
cmpb
jno
stos
aam
jo
xchg
lds
adc
or
pop
mov
and
out
and
outsb
mov
pop
xor
dec
jo
jnp
daa
div
fisttpll
pop
cmpsl
lahf
push
rdpmc
jg
aaa
or
jp
pop
xchg
xor
mov
rcrb
repnz
cmpsb
push
jmp
mov
das
dec
dec
xchg
adc
stos
repnz
sahf
lods
dec
aam
cmpsl
inc
adc
pushf
pop
inc
inc
fsubr
inc
movsb
add
outsb
cwtl
sbb
scas
iret
shl
jo
jmp
js
push
mov
mov
cmp
mulb
fwait
mov
mov
rclb
ret
xor
cmp
loope
sub
push
popf
mov
mov
adc
adc
aaa
shr
and
sub
cmp
dec
jns
dec
add
mov
and
ret
jmp
mov
add
push
bound
push
mov
jns
inc
int
iret
add
adc
adc
leave
insb
push
mov
sbb
xor
stos
test
je
mov
cmp
xchg
xor
mov
push
push
insl
ljmp
popa
testb
lret
arpl
in
sarl
scas
fcmovbe
push
aad
dec
das
inc
cmc
mov
stc
js
or
mov
into
pop
ret
xchg
dec
lock
test
ret
jnp
cmp
jbe
add
jp
inc
sarl
les
push
adc
lds
es
add
aam
hlt
xchg
stos
cmp
push
icebp
outsb
stos
ret
pop
shl
das
inc
das
jnp
insl
mov
jns
fildl
ja
fstps
into
or
fcmove
test
aas
sbb
in
xchg
cmpb
mov
sub
hlt
mov
aas
test
inc
push
rcrb
mov
xor
out
or
dec
mov
adc
test
cmp
test
loope
loopne
cltd
inc
addr16
inc
adc
sub
push
inc
pop
in
lahf
and
xor
fwait
int3
xor
sub
lcall
pop
sub
movsb
mov
jne
out
test
xor
pushf
mov
lret
push
dec
cmp
loop
scas
mov
js
adc
and
movl
out
xchg
stos
or
mov
jne
cmp
jg
popf
cmpsb
dec
sbb
and
xchg
test
add
leave
cmp
shlb
ljmp
pop
cmc
mov
xor
hlt
jmp
and
xchg
js
mov
fsubrs
test
jmp
push
xchg
sbb
shll
cmp
bound
xchg
mov
add
sub
lcall
insb
pusha
test
pop
sbb
bound
mov
mov
subb
into
pop
cmpsb
scas
in
mov
and
cmp
sub
bnd
xchg
jp
test
adc
cmpsl
ds
inc
xor
scas
popf
int
add
out
mov
mov
and
lret
dec
mov
add
add
adc
xchg
leave
in
cmp
hlt
cltd
mov
jl
jns
xchg
inc
ds
shll
sbb
nop
jge
jecxz
pusha
mov
xor
pop
pop
addb
mov
push
xchg
sub
test
in
das
aad
add
cwtl
into
movsb
imul
fcmovb
mov
dec
out
in
add
push
out
ja
in
pushf
fwait
xor
pop
imul
test
adc
ret
mov
or
addb
and
test
lcall
jle
or
fs
xchg
fs
mov
sbb
in
push
loop
imul
lods
dec
lods
dec
mov
or
mov
lea
repz
inc
mov
testb
push
lret
or
sbb
data16
repnz
ficompl
and
adc
inc
movsb
dec
sbbb
ljmp
das
inc
fildl
aad
iret
cmpsb
and
callw
daa
push
push
and
or
daa
cmpsl
or
xchg
sbb
pop
cltd
in
shl
mov
jno
jnp
mov
dec
sub
xchg
add
adc
clc
jae
pop
pop
push
add
sub
in
inc
shrb
or
arpl
es
jl
mov
aad
sbb
add
or
mov
test
pop
je
dec
sbb
xchg
jno
lods
push
xchg
mov
and
xor
aaa
jge
jne
daa
aad
pop
add
aas
xlat
ss
cld
cmp
pop
pop
push
sbb
push
xlat
fcomp
mov
xchg
hlt
in
out
cld
clc
call
xor
push
mov
dec
sbb
xor
jb
push
int
ret
mov
mov
gs
pop
pop
push
mov
dec
xor
test
test
pop
xchg
pop
fcomip
jp
sub
cmp
mov
push
icebp
jge
imul
outsl
add
mov
lods
int
jge
addb
in
lahf
pop
xor
popf
daa
pop
sbb
xor
and
adc
add
mov
sbb
mov
iret
inc
mov
cs
pop
andb
shrb
flds
mov
inc
and
dec
jo
mov
je
push
arpl
in
lcall
fnstenv
mov
jle
mov
roll
cmpsb
jo
int3
add
lods
test
jnp
sbb
insl
jmp
push
lret
outsl
fcompl
out
js
mov
adc
cs
push
dec
ret
push
jg
mov
dec
push
xchg
jb
loope
jmp
pusha
incb
test
je
in
lods
loope
inc
insl
aad
dec
sbbl
dec
inc
pushf
xchg
mov
sahf
dec
fadd
cmp
inc
data16
ja
dec
mov
mov
imull
or
in
mov
sarl
push
pushf
cwtl
lret
fdivr
in
cmp
out
mov
std
adc
ja
mov
pop
adc
mov
cmpsl
sub
jnp
cmp
shll
es
nop
loope
jo
lea
sub
pop
movsb
pop
mov
dec
mov
jb
aaa
lods
push
sub
mov
addr16
or
dec
lods
mov
lcall
ret
vmwrite
xor
dec
es
ja
or
cli
mov
mov
mov
or
lock
popa
mov
test
addb
add
mov
std
mov
cmp
aas
mov
out
cld
shlb
outsb
decb
andl
insb
push
and
push
out
push
setge
sub
sub
je
mov
cmpsb
jmp
dec
jle
jl
adc
cmp
pop
pop
and
insb
jp
scas
lahf
mov
and
andb
enter
int
push
and
xchg
pop
xor
fbld
out
hlt
jnp
inc
mov
and
ja
daa
insb
nop
jb
xchg
aad
ds
xchg
fiaddl
cmp
pusha
dec
fisttps
sub
add
sub
out
rcrb
in
or
mov
testl
lret
ffreep
mov
jecxz
rorl
adc
push
ljmp
cmpsl
lcall
aas
lea
lods
fmuls
pop
inc
push
cmp
clc
dec
outsb
inc
and
add
and
sbb
scas
xchg
mov
cltd
cmp
push
icebp
aaa
call
lods
pop
pop
loop
in
int
enter
fsubs
xchg
mov
aas
ret
imul
into
sub
inc
movsl
fwait
mov
arpl
xchg
xchg
lock
cmp
jnp
pop
movsl
adc
leave
mov
add
int3
inc
out
mov
in
lea
or
pusha
or
jns
mov
fisttps
movsb
push
cli
mov
outsl
jle
push
mov
out
adc
fs
mov
jge
cmpsl
ret
out
mov
or
mov
xor
lcall
mov
pextrw
or
movsl
push
lods
aad
inc
arpl
lds
dec
and
jne
sbb
fnstenv
cmpsb
sub
dec
fcoms
or
xlat
icebp
push
sub
ret
data16
pusha
aaa
pop
cld
and
push
lea
daa
or
fildll
fldcw
adc
insl
test
daa
insb
mov
js
push
and
daa
push
lcall
imul
ss
dec
or
test
addb
insl
pop
loopne
mov
xchg
mov
cmpsl
jp
push
negb
es
inc
movsl
push
cmp
jbe
xor
and
push
cmp
call
dec
add
mov
or
add
lea
xor
lahf
lock
adcl
fimull
add
mov
clc
popa
loopne
inc
cltd
push
cmpsl
and
stos
clc
lea
and
pop
or
mov
xchg
sub
aaa
mov
and
cmp
or
insb
adc
jp
out
out
mov
fidivs
pop
call
sbb
mov
addl
dec
fsub
leave
and
gs
in
and
pop
imul
cmpsl
ucomiss
sbb
inc
pop
hlt
xchg
cld
clc
daa
out
scas
mov
and
add
ljmp
pop
rolb
cltd
pushf
test
out
xlat
scas
dec
mov
jb
xor
mov
push
sub
test
out
push
pushf
add
push
fcompl
xchg
xchg
jno
mov
loope
imul
out
pop
mul
pop
cmpsb
inc
aas
cmc
inc
mov
sbb
inc
call
cs
sub
inc
rol
push
ror
lds
mov
leave
or
lea
repz
aam
push
pop
xchg
jae
fidivs
lcall
and
cwtl
mov
pusha
fmulp
test
sub
dec
ds
inc
mov
insl
dec
push
mov
xchg
push
repz
push
pop
xchg
adc
lds
mov
jns
outsl
xchg
faddl
mov
pop
mov
inc
mov
imul
testb
jmp
and
dec
sub
insl
xchg
sbb
and
push
push
dec
leave
bound
fcoml
jle
movsl
stos
sbb
popa
xor
bnd
fld
nop
imul
add
inc
lds
out
jp
dec
lock
in
sti
stc
ljmp
lods
cmp
xchg
xchg
ds
insb
xlat
daa
sti
adc
ds
test
adc
sahf
jmp
adc
xchg
push
fucom
inc
jge
sbb
jmp
cltd
xor
push
mov
sbb
inc
pop
scas
mov
arpl
sub
cs
xchg
lds
fyl2xp1
sarl
or
sbb
xlat
jae
and
stos
aaa
fdivs
fnstsw
inc
pop
lahf
mov
pop
ret
pushf
mov
xor
adc
scas
cmp
xchg
jmp
rolb
pop
repz
push
orb
pop
enter
xchg
aas
or
cld
aam
mov
push
mov
dec
or
lahf
scas
scas
mov
cmpl
push
sbb
mov
pop
insb
push
insb
sbb
imul
lret
dec
or
shrb
xchg
inc
add
test
or
inc
insl
xchg
mov
xor
rclb
jbe
stos
data16
subb
fsubrs
hlt
mov
ret
in
jp
sub
pusha
add
test
jp
pop
lcall
pop
outsb
jl
cmc
pushf
adc
pop
insb
std
loop
inc
jnp
cmc
lret
and
mov
and
xlat
test
mov
dec
jne
rol
inc
sbb
in
imul
pusha
dec
stc
scas
inc
out
xchg
in
push
out
jl
or
in
xlat
mov
sahf
fiadds
lods
and
mov
sub
dec
les
and
adc
ss
iret
pushf
gs
adc
aaa
stos
mov
popf
inc
inc
arpl
sub
add
ficomps
int3
shll
icebp
fsts
jecxz
mov
push
je
ret
inc
xor
jno
adc
push
in
je
sub
cmpsl
lds
int
js
sbb
rolb
test
sbb
mov
and
mov
jno
hlt
dec
outsb
inc
repz
stc
fisubrl
cmp
xor
mov
mov
repnz
sbb
je
mov
xor
xlat
mov
pop
cmp
mov
leave
dec
cmp
insl
xor
repz
push
cmp
add
mov
addl
aaa
mov
inc
push
call
push
mov
jo
sbbl
movzbl
stos
mov
dec
mov
pop
lock
add
aaa
cmc
mov
pop
jmp
mov
stos
xchg
or
lock
out
inc
int3
mov
aam
sbb
ljmp
inc
ljmp
test
inc
cmp
mov
ds
ja
ret
stos
cmc
sub
pop
inc
aaa
mov
mov
lock
jmp
aas
dec
xchg
jns
loopne
stc
dec
jb
out
dec
lods
pop
in
cmc
ret
add
cmpl
cmp
clc
cmp
leave
inc
sahf
xchg
jnp
pop
or
adc
sub
jl
sahf
shrl
fisttpl
dec
xor
in
xchg
pushf
inc
jl
lods
jbe
mov
inc
mov
add
cmpsb
mov
jge
inc
es
mov
xchg
scas
cs
sbb
mov
inc
cmpb
mov
ja
popa
stos
inc
add
lcall
into
into
mov
dec
test
in
in
fisubs
fsts
adc
push
dec
dec
leave
mov
in
dec
lahf
pop
imull
ficomps
adc
jp
js
cli
data16
mov
popl
or
aas
add
or
push
xchg
je
xchg
and
out
repz
cmp
out
aam
fwait
pmovmskb
fsts
fstl
or
lret
bound
sti
andl
popf
push
jae
imul
or
sbb
xchg
push
push
jb
mov
ficoml
adc
inc
mov
divl
mov
pusha
das
aad
jge
inc
mov
in
gs
xchg
jmp
sub
mov
dec
sub
jecxz
mov
cmc
dec
sub
jmp
int3
lcall
inc
inc
sar
lods
sbb
jecxz
stos
jp
mov
jp
inc
insl
push
imul
popa
into
out
lds
inc
cmpsl
lods
scas
xchg
mov
push
fldl
icebp
test
testb
jnp
cmp
mov
jg
or
or
mov
push
pop
mov
loopne
fwait
or
or
fucomp
hlt
mov
push
inc
fisubrs
jne
ret
imul
fldenv
ds
iret
add
out
push
cmpsb
xor
leave
mov
push
mov
sbb
daa
jae
inc
and
cmp
jbe
add
jae
pop
pop
pop
vpmovuswb
and
mov
cwtl
fstp
jae
sub
leave
sub
call
sbb
mov
and
mov
mov
adc
test
cmp
cmp
dec
dec
fisttpll
or
fstps
add
arpl
sub
outsb
mov
or
pop
ja
cwtl
xor
iret
cmpsl
lea
pusha
cli
sub
xchg
or
jg
daa
fisubrl
sub
xor
test
pushw
rep
dec
pop
faddl
fstps
xor
iret
imulb
mov
push
pop
mov
arpl
cmpl
cs
adc
inc
js,pn
dec
xchg
dec
ds
xorl
dec
cmp
add
sub
push
iret
imul
xchg
xchg
iret
stos
mov
in
daa
inc
mov
imul
inc
aam
pop
out
fisubrl
lock
sub
ret
loopne
pop
ss
call
add
lea
loop
inc
mov
in
into
nop
adc
mov
shr
scas
les
ds
gs
sub
pushf
fwait
mov
xchg
cmp
sub
sub
nop
fisubrl
rcrl
lods
and
mov
and
mov
adc
mov
clc
stos
and
inc
push
out
mov
push
mov
fidivrs
leave
cmp
push
sub
sbbb
sbb
cmp
hlt
lret
cmp
movsl
in
adc
iret
outsb
and
movsl
cmp
in
add
es
cmp
leave
test
mov
cmpb
dec
pop
add
cmp
cmp
mov
dec
lods
cwtl
iret
xlat
les
scas
repz
cld
lds
addr16
pop
das
dec
or
xchg
jo
dec
lods
notl
nop
repz
bound
dec
shrl
xchg
add
jnp
pop
fs
xchg
or
and
ret
fdivs
shll
mov
and
sbb
ret
shl
ja
sarl
insb
xor
or
mov
jae
mov
out
mov
and
pop
loope
cmp
or
add
call
test
nop
mov
das
adc
or
test
stc
ror
iret
jb
sti
xlat
cld
test
cmp
in
push
pop
cmp
mov
and
daa
mov
out
cmp
inc
rcr
or
movsb
xchg
je
mov
mov
jmp
test
test
ljmp
loop
sub
bound
add
cs
add
add
hlt
nop
inc
aam
push
cmc
test
mov
push
xor
fnsave
loopne
adc
roll
mov
mov
and
shlb
leave
les
scas
dec
ror
xchg
aad
dec
pushf
push
sti
pop
sbb
push
lcall
jae
addr16
inc
sahf
outsl
jno
dec
mov
stc
icebp
adc
jae
push
scas
adc
xor
push
mov
dec
push
adc
adc
pop
shll
test
xor
jae
jg
insb
mov
pop
test
pop
es
dec
sub
lock
cmp
out
dec
jge
aad
or
jbe
aam
punpckldq
lds
js
mov
xor
cmp
cwtl
fnstcw
rcll
pusha
push
leave
jecxz
mov
mov
clc
aam
xchg
outsl
bound
push
cwtl
mov
icebp
mov
mov
daa
push
xchg
add
int
ret
xchg
jl
data16
xchg
mov
push
fidivrl
repnz
and
inc
ljmp
es
pop
insl
inc
aas
xlat
clc
jno
scas
lahf
jmp
cmp
inc
lret
push
sbb
movsb
es
xor
or
dec
loopne
in
mov
arpl
push
add
xchg
fbld
outsl
push
add
jae
mov
testb
data16
mov
jnp
sbb
or
mov
jl
movsb
icebp
dec
lret
or
pushf
push
lock
mov
xor
scas
lea
inc
push
jmp
push
pop
mov
mov
lret
jge
popf
adc
jno
jg
or
add
mov
mov
imul
or
imul
mov
rorl
lods
sub
fcmovnbe
outsb
xchg
cld
dec
bound
mov
mov
push
fisttpll
sub
push
fcmovne
std
icebp
inc
mov
dec
int3
loope
xchg
cmp
roll
xchg
lock
leave
mov
mov
arpl
iret
ror
cltd
adc
push
push
aaa
sbb
jmp
push
jge
rcll
das
cmp
push
push
cmp
test
lret
mov
sub
imul
test
jge
dec
scas
lods
adc
mov
gs
sbb
nop
push
xchg
std
std
int3
inc
push
sub
push
fildll
loope
mov
adc
push
data16
mov
and
mov
dec
or
cmc
inc
test
rolb
inc
nop
fistpl
sti
or
leave
pop
lret
sbb
fstps
push
xchg
pop
clc
aam
xchg
stos
popf
lds
inc
cltd
add
xor
adc
xlat
in
inc
movsl
lods
pop
lock
loop
and
shr
push
aam
andb
std
sarb
dec
add
gs
loop
xchg
fcomps
ja
add
xchg
mov
sbb
daa
push
mov
outsb
push
data16
jle
popf
pop
fmuls
xchg
cli
mov
int
out
iret
cmp
loopne
repnz
inc
sbb
inc
fstps
add
jmp
test
shlb
shlb
ss
mov
in
loope
ss
outsl
lea
pop
pop
popa
cmpsb
mul
push
adc
add
adc
inc
insl
adc
jecxz
xor
das
mov
cwtl
mov
shlb
outsb
andl
lret
std
sub
jbe
imul
clc
enter
pop
cltd
cmp
adc
sub
test
mov
das
xor
adc
mov
or
leave
mov
dec
lds
in
or
adc
sti
icebp
jns
cld
imul
imul
stc
xor
xchg
dec
mov
imul
lds
adc
mov
push
scas
mov
in
ret
inc
push
ret
jb
fmuls
adc
aam
stos
cld
bound
ja
adc
bnd
in
pop
insl
ret
pop
xchg
adc
xchg
insl
cmc
in
dec
sahf
jmp
jg
outsl
out
dec
push
xchg
pop
jb
out
leave
inc
pop
adc
adc
lcall
aas
mov
repz
in
push
icebp
sbb
sti
lea
stos
push
arpl
aad
outsl
push
xchg
cmp
mov
jge
mov
and
popf
das
je
je
pop
dec
mov
in
test
movsl
jecxz
cmp
push
mov
das
aas
das
mov
xchg
cmp
imull
and
cmpsb
xchg
pop
imul
xor
dec
xchg
sbb
sbb
inc
imul
jo
insb
dec
dec
aas
subl
mov
xchg
jo
sub
stos
inc
out
or
divl
add
sub
stos
or
pushf
xor
pop
sbb
in
and
repz
dec
dec
movsb
mov
sub
pop
jecxz
loope
loop
es
and
cmp
mov
jnp
loop
xor
out
out
fimull
sbb
stc
cmc
fcmovb
les
popf
adc
outsl
mov
xor
iret
not
xor
mov
sbb
pop
bound
jp
and
mov
jae
shrb
sahf
push
lret
mov
jae
repnz
cltd
test
ja
subl
push
mov
jg
gs
xchg
xchg
ja
jb
movsb
rolb
and
fstpl
nop
pop
dec
cmp
or
xchg
das
jmp
xchg
cmp
fs
and
push
xorb
jae
cmpsl
mov
lcall
push
ss
push
frstor
lds
pop
test
les
lcall
xchg
adc
out
sbb
outsl
sbb
xchg
daa
inc
cmp
out
push
gs
les
lahf
inc
jbe
loopne
cltd
jo
jae
push
insl
adc
push
dec
movsb
xrelease
ret
jnp
enter
jo
adc
push
call
add
lods
out
sbb
movsb
jge
xchg
in
iret
inc
adc
ds
cmpsl
and
ret
dec
leave
mov
fldenv
and
movsb
loopne
test
fadd
aaa
jle
lds
xchg
mov
lret
dec
mov
hlt
pop
out
or
add
push
cmp
mov
xchg
ss
jmp
sti
dec
es
cmp
lods
movsb
mov
mov
xor
push
xor
mov
add
rcrb
pop
addr16
mov
mov
ror
jnp
cmpb
aam
in
scas
sub
aaa
nop
mov
add
std
xor
fstp
jle
out
test
jb
fbld
inc
mov
cmpsb
xchg
jmp
ret
jns
data16
ljmp
mov
cmp
sarl
ja
cltd
mov
fstpt
call
cmp
or
jmp
lds
sbb
clc
add
cmp
out
stos
cs
mov
nop
out
xchg
sub
lock
pop
fstl
fcomps
lret
jle
sahf
or
gs
mov
cmc
add
xor
repz
andl
cmp
pop
movl
pop
lods
jnp
cwtl
fbstp
or
mov
cmpsl
das
clc
jg
inc
jns
dec
loop
inc
sahf
call
aad
xlat
ljmp
pop
inc
insl
lahf
xchg
stos
fdivr
mov
lahf
lods
stos
add
xor
add
icebp
mov
push
push
xchg
mov
sub
or
test
pop
dec
jbe
jae
gs
xchg
stos
mov
mov
sbb
out
sahf
jb,pn
jge
lea
xchg
lahf
adc
nop
cltd
dec
add
push
pop
adc
subl
inc
cmpsb
push
mov
sub
push
cli
sbb
mov
fwait
rcr
jl
pop
add
cltd
nop
jo
test
fiadds
sbb
nop
xchg
push
xor
loop
xlat
fldl
mov
mov
mov
ficoms
jecxz
out
std
fwait
nop
dec
xor
idiv
xor
clc
fcomps
jb
jle
push
xchg
xchg
outsb
fcoms
aaa
pop
movsl
add
mov
aam
mov
in
call
repz
dec
dec
sbb
insl
or
pushf
in
andb
jne
test
and
cld
mov
jg
outsb
das
and
sarl
dec
loopne
mov
into
enter
or
das
jmp
movsb
sbb
scas
and
dec
pop
pop
cltd
inc
cmp
sahf
sub
sbb
ja
add
psubq
sbb
std
aas
negl
inc
push
mov
pusha
xchg
xor
push
jecxz
dec
ljmp
xchg
les
xchg
imul
push
fcmovu
int3
adc
outsl
push
cmpsl
ljmp
push
lods
je
movsl
cmp
ja
sahf
shll
xor
sarl
lret
je
pop
jo
or
movsl
test
jae
outsl
cmp
sarb
adc
popf
cli
imul
and
fdivl
lret
pop
push
data16
and
loop
lcall
stc
lea
sbb
pop
jecxz
jo
cmp
cld
push
dec
cli
movsl
inc
cmp
pushf
mov
sub
call
push
pmuludq
mov
daa
adc
or
out
or
cli
popf
lret
jne
sbb
or
xor
xor
and
lea
mov
lahf
and
orl
jg
add
out
jbe
test
fiaddl
and
inc
mov
cmp
push
lock
add
sbb
mov
adc
nop
lret
mov
and
jl
and
sbb
in
aaa
test
push
push
lea
je
iret
int3
mov
xor
insl
push
inc
popa
cmp
enter
cltd
inc
pop
and
sbb
stos
jmp
lea
in
lds
jle
push
daa
adc
test
xchg
outsl
ljmp
lds
das
xor
cmp
jnp
mov
mov
push
inc
in
add
pop
and
cmp
mov
fiadds
push
pusha
pop
insb
cld
mov
pop
sub
adc
cwtl
scas
push
in
ja
sub
pop
sbb
roll
add
dec
mov
pop
insl
cmp
loop
movsb
add
and
sbb
lods
lret
lea
pop
inc
mov
adc
push
fmull
xor
in
dec
push
scas
jg
fsubs
mov
out
leave
jecxz
mov
popa
xor
inc
fildll
mov
call
xor
clc
mov
pop
jle
dec
and
jle
aaa
and
mov
aam
outsb
pop
mov
lret
pop
mov
push
movsl
pushl
jecxz
push
mov
cmp
sbb
sarl
int3
test
adc
dec
aam
shlb
lods
sub
jp
push
mov
arpl
jo
xchg
aam
mov
or
or
pop
call
in
and
iret
sbb
lds
sbb
push
xor
xor
mov
xor
mov
fwait
mov
test
and
pop
push
int3
sub
jno
fstps
shll
jg
shll
rcrb
jp
push
std
sti
fstps
inc
inc
lahf
ficompl
cmc
sub
out
imul
pop
sub
sub
das
ret
pop
mov
push
xor
das
or
pop
lea
push
fs
das
pop
sti
xor
stc
xchg
inc
pop
out
filds
in
cmpsl
jge
dec
push
je
mov
pop
jle
push
push
add
push
or
jle
jp
jbe
js
fistl
xlat
mov
sub
cmpsl
or
jne
pop
cmp
sahf
pop
lock
scas
mov
out
xchg
popa
test
pop
int3
mov
adcl
fcmove
xor
push
mov
fdivs
rorb
and
fs
nop
push
jmp
adc
xor
test
call
call
notl
scas
xchg
aad
or
push
jb
xchg
aad
loope
lea
in
lret
adc
or
leave
and
xorl
or
add
mov
es
xchg
push
aaa
add
mov
add
cwtl
dec
cmpsb
push
pop
xchg
or
popa
push
add
cmp
mull
sub
jp
or
push
ja
fldenv
inc
ljmp
and
lods
out
mov
and
mov
in
fs
imul
sub
sbb
mov
mov
mov
pusha
lods
push
rolb
sub
aas
inc
rorl
int
setle
loope
sub
lock
xorb
cli
pop
ja
jp
scas
mov
mov
mov
add
or
xor
jge
in
cmp
test
sbb
push
imul
fdivs
mov
and
shl
adcl
lea
loopne
insl
pop
out
push
ret
out
imul
rcrb
lret
mov
in
ljmp
bswap
push
sarl
fdivrl
shrb
adcb
xchg
test
mov
daa
or
sahf
push
or
es
jno
sub
loopne
mov
movsl
jns
xchg
push
neg
stos
mov
jg
sarb
push
frstor
dec
push
mov
lret
inc
lea
mov
cmp
cli
xchg
add
xchg
enter
mov
sar
sub
iret
xor
pop
mov
cmp
mov
pushf
jae
loope
ficompl
or
jns
decb
or
out
faddl
gs
push
js
roll
insl
pop
fstpt
sub
sbb
cmpsb
enter
enter
push
dec
shl
addr16
repz
mov
or
leave
adc
outsl
jp
cli
and
lods
sub
cmp
xchg
cmp
cwtl
in
and
fistps
fisubs
fcoms
xor
add
pop
sbb
push
clc
inc
xor
int3
jmp
stc
pop
or
pushf
pop
cmc
imul
andl
mov
inc
fwait
in
adc
or
outsl
in
mov
fisubs
loope
push
rcll
lret
jae
and
pop
sbb
cmpsl
les
sub
stos
add
in
or
shlb
lods
cmp
int
sub
pop
in
jae
jp
mov
sub
sti
fwait
sbb
jge
mov
ss
xchg
in
mov
stos
push
outsl
mov
ss
cld
jg
insb
bound
xor
jno
sub
mov
fdivs
ficoml
js
mov
cmpsl
jb
es
out
mov
sbb
cmpsb
sbbl
push
push
loopne
mov
imul
sar
pop
lret
aad
in
clc
std
popa
pop
andb
shlb
cmp
push
xchg
adc
scas
orb
or
and
dec
mov
in
sbbl
inc
fwait
test
shr
cmp
inc
and
inc
xor
pop
sub
mov
in
xor
lahf
sub
aaa
pop
push
pushf
jp
add
sti
mov
sbb
je
add
mov
add
repnz
adc
xchg
dec
inc
mov
cltd
stos
push
or
outsb
cmpsb
in
lock
lods
shlb
or
add
insl
and
outsl
sarb
pop
mov
enter
pop
or
aad
jge
inc
loopne
test
nop
shll
lret
jns
subb
pop
mov
jmp
dec
mov
pushf
in
xlat
add
dec
fstp
pop
mov
cmp
mov
inc
lahf
inc
mov
fistpl
adc
in
stos
sub
iret
imul
mov
cmpsb
in
pop
push
sbb
mov
in
xor
sar
ss
into
mov
outsb
inc
js
movsl
sahf
in
daa
jo
or
mov
daa
pop
iret
clc
enter
push
stc
mov
ljmp
sub
jb
pop
adc
outsl
es
gs
sub
in
scas
imul
sbb
lahf
cmpsb
nop
test
es
push
testl
pop
outsl
pushl
and
mov
shll
push
sub
pop
mov
gs
in
icebp
imul
pop
fdivrs
mov
mov
and
scas
mov
repz
test
xor
push
or
iret
outsl
push
inc
lcall
loop
inc
pop
jno
inc
test
jle
xchg
sbb
popa
xchg
dec
adc
lock
nop
adc
jb
sub
aaa
pushl
stos
bnd
insb
adc
jbe
lea
pop
ljmp
mov
int3
cltd
cmp
and
jnp
fisttpl
addr16
push
outsl
sbb
dec
inc
sub
xchg
fwait
push
adc
sti
mov
jge
xor
mov
insb
lods
mov
cmp
mov
stos
xchg
adc
neg
shll
sbb
ret
rolb
xchg
ret
sub
in
jle
cmc
inc
iret
push
xchg
dec
xor
jbe
mov
and
mov
std
push
mov
jg
addr16
data16
das
jnp
inc
out
filds
cmc
clc
pop
sarl
inc
shl
push
fsubr
jge
or
xor
stc
icebp
xchg
clc
loopne,pn
fsubrs
cmp
scas
dec
cwtl
lods
lea
jecxz
bound
adc
jge,pn
inc
stos
sahf
fdivr
lock
cltd
js
sbb
enter
add
data16
mov
into
out
and
outsb
pop
in
bound
loopne
cwtl
rcll
pop
mov
addl
add
pop
jmp
or
loop
inc
iret
loopne
xchg
cmp
sub
pop
jns
imul
xchg
dec
xchg
rcrl
jecxz
inc
inc
xchg
mov
sub
aad
adc
jno
jnp
jmp
add
xor
data16
fdivs
fwait
sub
daa
sub
cli
stos
mov
jle
pop
lods
pusha
mov
out
repnz
test
aas
mov
or
inc
aas
in
fadd
pop
ret
loopne
sbb
jbe
and
subb
nop
pushf
push
jle
test
adc
or
nop
stos
shlb
clc
push
nopl
cmp
pop
test
pmaxsw
fwait
pop
int
dec
scas
xor
fisttpl
mov
mov
stos
in
imul
stc
or
pop
sub
sub
shlb
push
push
pop
outsl
movsl
sbb
loop
mov
ja
or
push
jge
andl
rorl
sub
and
inc
xor
add
data16
stc
repz
shl
dec
aam
and
int3
mov
test
lods
or
call
add
shr
imul
dec
in
sbbb
push
pop
adc
arpl
fs
stc
test
jbe
xchg
mov
add
adc
ljmp
sub
xchg
adcl
dec
mov
test
adc
pushf
lods
sbb
ret
xlat
dec
or
stos
std
jno
test
push
mov
cmpsl
inc
pushf
loope
scas
outsl
jmp
mov
lret
lods
pop
and
arpl
rcr
xor
xlat
pop
jnp
and
test
sbb
jne
adc
hlt
adc
sbb
fcompl
add
sbb
mov
xorb
xchg
scas
lea
push
add
pop
adc
add
outsb
push
aas
negb
dec
mov
loop
xchg
add
sarb
push
lods
xor
movsb
mov
jmp
lcall
add
ret
cltd
push
adc
ds
push
dec
add
dec
sub
in
jecxz
sub
add
fwait
nop
xchg
das
inc
clc
fcomps
inc
adc
aam
lods
dec
push
sub
es
outsl
mov
cmpsb
jg
and
shlb
mov
inc
int3
mov
out
pop
ret
in
in
xchg
lcall
pop
popa
movq
rorb
lea
subb
ffreep
test
pop
cli
xchg
mov
sub
push
stos
adc
and
xor
sbb
pushf
pusha
add
sub
and
pop
push
and
stos
dec
sub
sbb
pop
fsubr
aad
mov
ss
jl
js
sub
jecxz
adc
int3
insl
ss
or
cmpsb
call
iret
sub
pop
fistps
sub
call
fwait
sti
sbb
inc
inc
mov
jne
and
in
in
addr16
loop
inc
mov
rcrb
jae
mov
lods
roll
xchg
push
repnz
hlt
aad
movl
adc
clc
addl
aam
inc
jp
fiaddl
stc
mov
push
or
mov
mov
fildll
push
mov
nop
das
push
mov
flds
je
xchg
mov
in
or
jp
xchg
jle
pop
clts
xchg
call
sti
inc
xor
insl
inc
nop
fiadds
movsl
flds
add
jle
jne
mov
cmp
aas
jns
adc
subl
sub
jecxz
cmp
lea
popa
jecxz
pop
mov
sarl
inc
push
cmp
adc
imul
jb
out
ds
and
jge
lret
inc
mov
incb
xchg
jns
mov
notl
mov
fdivr
add
jbe
and
cmpsl
lcall
and
rol
ret
adc
sub
xchg
ret
int
orb
dec
xor
movsl
and
repnz
je
aas
lret
inc
aam
rep
cmp
rcr
or
cmp
imul
pop
jno
mov
std
mov
mov
mov
push
mov
pop
sub
pop
sub
jae
lods
cmpsb
jo
xchg
repz
jne
call
sub
in
inc
cmp
divl
clc
dec
dec
and
push
jns
xchg
lock
fnstsw
adc
dec
xor
push
dec
int
xchg
ja
mov
mov
loopne
push
xchg
jmp
rcrl
xchg
ret
orl
push
scas
cmpsb
pop
outsl
adc
pop
cmpps
fcomi
sbb
mov
pop
loop
mov
aam
enter
or
ljmp
clc
leave
push
push
scas
in
bound
out
enter
insl
push
sbb
add
pop
inc
push
or
xor
std
pop
loopne
and
xchg
push
pop
ds
dec
xlat
aaa
push
xlat
push
jecxz
cmpsb
in
cmpsb
sub
rcrl
jns
stos
sbb
inc
cltd
xlat
scas
jo
sub
rorl
scas
arpl
pop
adcb
andl
mov
js
mov
shrb
ds
js
loop,pt
or
mov
xor
dec
jg
add
jns
adc
lret
mov
jmp
fnsave
pop
xlat
scas
dec
inc
sarb
out
fwait
in
add
xor
scas
xlat
out
shrb
jo
lods
test
xchg
pop
shll
and
test
cmp
xchg
adc
push
cld
lods
push
addr16
cmp
in
push
cs
inc
cmp
dec
fidivrs
mov
xchg
lods
pusha
cmp
ja
push
push
mov
es
jbe
imull
add
hlt
call
jbe
insb
loop
add
and
dec
jg
lods
popf
jns
into
lcall
lret
test
push
add
or
sbb
mov
adc
mov
adc
adc
std
xchg
pop
movsl
aas
rclb
les
jmp
enter
mov
daa
and
outsl
xchg
push
bound
sbb
inc
dec
push
xor
xchg
icebp
pusha
mov
jns
loope
pop
test
mov
jp
iret
aad
and
aam
xlat
xchg
pop
mov
and
mov
in
xchg
jg
scas
addl
fwait
ret
int
cmp
shrb
idiv
sub
dec
cmp
cmp
and
and
xchg
cld
dec
stos
mov
cmpsl
fwait
dec
dec
bound
rcr
push
adc
stos
or
lds
xlat
add
pop
ss
insl
jg
mov
add
mov
xlat
lcall
nop
out
mov
ds
mov
cmpb
pusha
push
into
shll
movsb
jmp
dec
add
jb
mov
ss
pop
fstpl
push
dec
lds
xor
jecxz
es
rclb
and
xchg
xor
fs
icebp
ja
xchg
movsb
adc
or
jne
or
adc
stos
aaa
lcall
icebp
std
fdivrs
mov
sbb
mov
sbb
lea
cmp
adc
mov
loopne
mov
icebp
ds
imul
stos
shrl
jg
ret
ss
xor
arpl
into
xchg
push
jbe
imul
jmp
fucomip
loope
mov
out
sub
push
add
jge
jecxz
jno
icebp
pop
cmpsl
rol
push
movsl
sub
mov
jne
xor
sarb
pop
adc
jae
push
push
jno
push
repnz
adc
dec
xchg
subl
xchg
nop
lret
adc
adc
add
and
lret
push
jb
add
mov
push
lds
mov
stc
ja
rcr
rclb
inc
int
inc
dec
cld
addr16
mov
xchg
add
je
mov
fisttpll
cld
and
cld
nop
xor
inc
push
cmp
and
jge
add
or
bound
push
xchg
pop
int
out
out
popf
push
in
loopne
pop
les
imul
pop
les
dec
pop
fwait
cs
pop
xor
and
pushf
rclb
decl
mov
out
setp
fdivl
cwtl
mov
mov
mov
xlat
sub
and
adc
push
je
add
adc
mov
aam
or
inc
mov
mov
cmc
stc
or
sub
iret
mov
nop
leave
movsl
movsl
movsl
scas
pop
out
clc
loop
and
jno
xchg
int3
pusha
out
xor
addr16
dec
bound
outsl
jp
add
stc
xchg
and
out
test
xchg
stc
outsb
jmp
mov
daa
aad
xorl
iret
inc
idiv
jge
fidivrl
in
cmp
inc
fidivrl
and
adc
pop
xor
xor
mov
popa
add
inc
push
inc
and
aas
pop
inc
int
pmuludq
je
push
pop
adc
dec
adcl
mov
dec
insb
sti
das
xchg
pop
add
inc
popa
and
aad
sbb
pusha
test
ret
jns
sbb
mov
sub
mov
nop
pop
add
jae
mov
popa
loop
out
loop
je
das
ficompl
insb
out
xchg
andnps
cmp
xchg
movsb
fmull
push
stc
in
push
cmc
cmp
xor
fidivrl
pop
mov
add
jno
in
lods
pusha
movsb
xchg
pop
inc
lahf
adc
pop
aaa
xchg
or
mov
loop
push
out
aad
mov
inc
outsl
mov
imul
jecxz
scas
push
inc
ss
movsl
outsl
xor
jmp
int3
test
ja
fisubs
fidivs
xchg
jno
xchg
cld
xor
aaa
sbb
mov
xlat
sbb
lcall
and
push
andl
sub
call
cmpsb
clc
xor
mov
sbb
lds
loop
dec
or
mov
jne
cmpsb
sahf
idiv
jns
jns
leave
or
and
lea
ror
out
pushf
dec
push
mov
pop
movsb
pop
add
mov
insb
inc
sub
inc
repnz
mov
mov
jno
pusha
jnp
lret
mov
lods
cmp
push
leave
mov
test
nop
jle
pop
xor
fs
fidivrs
add
jge
mov
or
jle
call
jle
mov
out
pop
push
iret
dec
pushf
sahf
pusha
pop
je
dec
testb
lods
lcall
out
mov
cmp
cmp
test
mov
dec
mov
popf
mov
fs
inc
push
xchg
movsl
int
iret
mov
sub
je
sub
adc
inc
mov
rorl
mov
fiadds
pop
ja
mov
push
outsl
cmp
test
pop
movsl
repz
dec
popf
push
enter
leave
add
xor
cmp
sub
inc
movsl
jnp
mov
jecxz
ret
mov
mov
stos
xor
test
adc
xchg
push
ja
xorl
or
adc
loope
cmp
mov
ret
ss
inc
sub
pusha
bound
incb
in
jle
push
pop
call
orb
pushf
lret
shll
in
out
lahf
pop
adc
xchg
mov
cmpsl
pop
jo
mov
fs
imul
andb
pop
inc
stc
mov
pop
push
lcall
mov
dec
movsb
or
xor
jle
rolb
idivl
and
xor
aam
pop
sbb
cs
roll
sbb
rcll
push
ja
adc
fistps
mov
dec
lret
mov
outsl
in
sti
push
mov
cltd
xchg
arpl
push
lea
es
cmc
add
aam
sti
repz
xchg
hlt
into
out
sbb
adc
sub
arpl
shlb
fsubs
nop
dec
or
push
inc
fsubrs
jecxz
aaa
loopne
mov
into
pop
push
push
movsl
mov
sbb
arpl
and
call
mov
out
push
test
addb
dec
adc
or
sub
je
push
mov
in
xor
xor
pop
pusha
mov
outsb
inc
inc
das
and
sbb
popa
mov
sti
push
or
out
enter
cmp
jl
cs
or
test
loope
pop
aad
fiadds
cli
or
and
or
in
lcall
xchg
repnz
stos
push
in
lret
and
scas
push
push
jecxz
stos
mov
lcall
xchg
adc
jge
test
mov
pushf
mov
inc
nop
int
cmp
fiadds
mov
add
pop
sbb
pop
jmp
repz
rcrb
xor
inc
push
or
cld
xor
arpl
ret
jb
adc
xor
jl
jb
push
push
mov
xchg
pop
testb
insl
mov
push
xor
int
adcl
lret
in
cmc
cmpsl
or
cld
push
das
push
cmpsl
or
cmp
repz
gs
adc
inc
int3
mov
shrb
jne
cmpsl
out
xor
push
fs
test
in
mov
inc
push
lods
or
xchg
mov
xor
fisttps
loop
repnz
arpl
mov
arpl
test
add
push
jmp
out
jb
inc
int3
lret
stos
cltd
mov
das
cmp
mov
fwait
dec
dec
iret
mov
movsl
add
xlat
and
je
jp
out
sbb
adc
sarb
leave
icebp
iret
inc
xlat
adc
rcll
jnp
mov
pop
dec
outsb
pop
movsl
or
pop
mov
mov
stc
je
and
mov
add
push
mov
cmp
stos
mov
movsl
repnz
jecxz
pop
push
inc
and
decl
xor
pop
sub
pop
sub
jae
inc
jo
cmp
mov
sahf
sub
in
pop
mov
add
insb
sub
fwait
jecxz
mov
add
clc
aam
push
js
xchg
inc
pushl
or
or
ret
push
push
lcall
or
mov
mov
pop
pop
adc
sbb
mov
pop
into
or
dec
cmp
negb
mov
loop
sarl
ja
outsl
mov
int
jl
jae
pop
sbb
stc
or
mov
dec
and
in
pushf
sbbb
cmp
adc
mov
pop
mov
stos
cli
jo
test
jge
mov
jbe
cmp
jnp
lret
jnp
mov
fs
mov
stos
out
lret
mov
mov
mov
mov
stos
jno
add
or
jmp
jge
test
or
aad
mov
fwait
mov
sbb
cmp
mov
xchg
xchg
sub
shr
push
hlt
cwtl
dec
jb
jmp
fdivrs
sub
stc
ds
adc
daa
lret
sarl
test
mulb
bound
mov
rcr
in
or
or
les
sbb
xor
inc
and
lret
daa
outsl
movsl
mov
fwait
cmp
push
add
clc
mov
cmp
out
and
mov
lret
inc
mov
mov
movsl
vmwrite
out
popa
xchg
add
rorb
inc
sub
dec
stc
enter
pushl
sbb
cs
dec
cltd
out
inc
cmp
stos
addr16
shll
aam
jae
jnp
test
div
push
add
sbb
xchg
lahf
xor
testl
aad
jns
pop
add
add
shr
sub
xor
inc
daa
fs
test
push
inc
xchg
sub
fwait
mov
rol
jmp
std
popa
lea
mov
aaa
push
inc
pop
mov
ja
jne
test
add
cmpsb
test
outsl
cmp
arpl
fs
fisttps
scas
test
push
rorl
push
push
popl
xchg
mov
dec
in
push
out
dec
jb
push
mov
or
loopne
xor
add
mov
out
in
lods
dec
or
dec
ja
shll
es
jo
arpl
jae
jbe
pop
push
arpl
xor
sub
xchg
insb
dec
fwait
enter
mov
xor
inc
scas
pop
mov
test
pop
inc
icebp
cmp
add
jnp
pop
sbb
out
bswap
xchg
xchg
rcll
xor
lds
dec
and
inc
imul
imulb
push
in
stc
clc
test
xchg
jo
insb
mov
xor
aam
aam
mov
mov
lea
xchg
mov
dec
xchg
lret
insb
daa
les
push
jg
xor
mov
flds
jg
popf
push
adc
mov
cmpsb
loope
daa
negb
xlat
aas
mov
outsb
or
mov
xor
sti
lds
adc
aaa
pop
xor
shlb
cmpsb
dec
or
sbb
sbb
xchg
rcll
aam
pop
sbb
pop
push
cmp
push
imul
add
push
in
mov
fbld
xchg
lahf
xor
shll
cmpsb
mov
lods
cmpsb
jmp
sahf
sub
aas
shll
jo
cmpsb
lahf
xor
pop
icebp
sub
cmp
pop
add
sti
pushf
mov
or
ja
aad
out
and
lea
mov
int
inc
jp
iret
in
or
xor
xor
loop
add
mov
lcall
movsb
scas
out
jb
cmp
ret
not
fsub
push
outsb
mov
subl
in
push
adc
xorl
xchg
jb
das
into
stos
jns
data16
cmp
or
mov
xor
push
arpl
dec
enter
rolb
imul
dec
stos
movsb
pop
jae
mov
sti
dec
sbb
mov
mov
xor
loop
pushf
xor
push
adc
aas
cltd
aas
stos
add
mov
filds
jp
bound
aam
inc
sbb
in
ficoml
mov
int
jl
lods
adc
add
movsb
nop
std
jb
adc
fdiv
pop
iret
movsb
add
sarl
dec
out
insl
test
inc
ljmp
cmp
fs
leave
ret
ds
cli
lock
call
dec
stc
or
xor
mov
lret
stos
stc
and
movsb
gs
xchg
lods
clc
lret
mov
mov
xchg
lods
lahf
dec
sbb
arpl
xor
andl
pop
test
int3
into
cmpsl
es
in
arpl
cwtl
out
outsl
jb
cwtl
push
dec
xchg
sub
mov
lret
mov
cmc
push
clc
sub
into
das
sub
sbb
inc
scas
push
mov
push
cmpsb
jle
sbb
ljmp
cmp
pop
cmpsb
shll
push
xor
popf
test
lods
mov
es
xor
lret
dec
adc
xor
sub
xchg
faddl
fstp
push
and
dec
stos
stos
fistpl
add
pop
std
inc
pop
jl
in
push
imul
in
daa
repz
xor
inc
mov
jecxz,pt
pop
xchg
push
mov
cmp
rcrl
stos
dec
and
loop
out
xchg
shlb
in
jl
xlat
sbb
stos
ss
nop
and
addr16
outsb
stc
std
inc
lret
and
mov
push
mulb
adc
insl
push
sbb
add
inc
push
dec
mov
mov
negl
dec
inc
jne
loope
lds
push
xchg
hlt
xor
mov
mov
push
test
in
popl
jle
push
jno
inc
mov
adc
mov
cmp
fidivrs
in
add
jo
int
sbb
adc
insl
mov
xor
mov
mov
dec
add
xchg
sub
lret
fldt
rolb
loop
mov
cltd
lret
inc
cmp
insb
shrb
arpl
mov
add
cli
mov
mov
jmp
loopne
stc
add
mov
mov
in
sub
mov
jp
mov
enter
push
inc
fisubs
outsl
and
or
inc
add
iret
push
pop
adc
xchg
jle
fistpl
cmp
jge
mov
addr16
push
adc
dec
pop
and
cmp
jbe
mov
imul
cmc
jle
jge
mov
cmp
test
mov
loope
jecxz
cwtl
cmp
pop
cltd
stos
loope
enter
stc
dec
pop
es
pop
jns
add
mov
cmc
and
mov
shrl
into
jge
test
or
lcall
ja
aam
and
inc
pop
popa
cmp
pop
mov
out
mov
or
bound
or
or
mov
lahf
std
rclb
fcoml
pop
cmp
mov
mov
into
mov
int
test
rol
mov
stos
sub
push
xchg
mov
mov
cs
test
and
cmp
xchg
xchg
mov
out
ds
mov
pop
insb
mov
enter
mov
shr
lret
lret
jge
push
and
xor
add
xor
out
xor
sahf
test
scas
adc
les
repnz
cmpsb
lds
lds
adc
lahf
movsb
mov
adc
xor
cmp
pushf
sbb
outsb
add
imul
dec
and
jmp
pop
cld
cmc
xlat
sub
sub
stc
add
daa
inc
ret
hlt
cmp
inc
push
mov
sub
cmp
adc
mov
arpl
ret
pop
jnp
cmpsb
loopne
movsl
pop
dec
fsubs
cmpsb
adc
je
icebp
add
xor
pop
jmp
dec
lods
mov
jbe
fisubl
iret
lods
loope
ja
sub
call
jb
addb
or
lret
add
les
imul
enter
lea
sub
push
fnsave
ret
mov
add
das
push
test
mov
lods
adc
shl
clc
or
loopne
mov
loope
cmp
dec
add
xlat
test
aas
pop
ja
jmp
test
push
inc
cmpl
dec
pop
in
jp
push
aam
lcall
or
daa
bound
je
mov
sub
or
jp
orb
mov
std
jge
push
cmp
shrl
ds
ja
fadd
cmp
shl
int
pop
les
lcall
dec
fdivr
cmpsb
jns
lahf
xchg
enter
dec
jne
sbb
and
out
test
push
out
lret
mov
xlat
or
sub
mov
adc
mov
add
push
adc
fimuls
es
or
pop
sub
push
jae
xchg
repnz
in
lret
aaa
shlb
dec
dec
inc
ljmp
cmpsb
nop
shrl
pop
out
inc
or
inc
and
mov
and
push
or
cmp
or
cltd
sub
adc
test
adc
xchg
data16
repz
enter
dec
or
push
fisttpl
pusha
sbb
divb
and
ss
outsb
add
test
jp
icebp
sbb
dec
push
repnz
lea
loope
std
or
aad
lods
jne
sbb
cmc
sub
outsl
iret
aam
jns
cmpsb
daa
and
cmc
mov
adc
inc
push
ss
xchg
iret
loopne
mov
ja
lds
pop
lcall
gs
add
insb
test
dec
adc
inc
addr16
dec
add
adc
sub
data16
and
repz
jmp
in
test
int3
dec
testl
mov
popl
dec
lods
iret
in
sbbb
cli
out
repz
addb
mov
ret
aam
xor
shl
ret
adc
push
lods
jl
adc
mov
jbe
cli
sbb
mov
jae
mov
out
pusha
dec
dec
cld
fildl
cmp
xchg
cmp
inc
mov
add
push
addr16
cmc
into
mov
inc
cmp
pushf
rcl
adc
scas
adc
xchg
icebp
pop
notb
lret
loopne
rorb
xchg
add
loop
outsb
mov
arpl
daa
push
mov
mov
jo
jbe
mov
ds
jp
pop
bound
lods
imul
lods
movsl
inc
icebp
xor
sbb
mov
das
popa
fdivl
call
inc
inc
cld
ljmp
out
mov
ja
pushf
test
add
push
inc
jno
xor
dec
push
orl
mov
shrl
pop
cmpsl
inc
push
xor
sbb
jmp
ret
xor
push
popa
and
jb
or
xor
jmp
fstl
cltd
mov
rcll
stc
xchg
pop
js
mov
shrb
add
and
mov
inc
dec
add
fbstp
clc
inc
out
lcall
pop
dec
dec
add
sbb
xchg
dec
lock
dec
and
mov
xor
js
les
cltd
insb
jecxz
leave
ljmp
lret
in
mov
sbbb
out
mov
push
mov
xor
and
pop
pushf
jns
sub
loope
adc
push
shll
adc
or
pop
adc
out
sub
sbb
cmp
inc
cmc
sbb
push
sbb
movsl
jno
mov
xor
out
imul
mov
add
lcall
inc
hlt
sub
jbe
mov
lahf
xchg
mov
sub
dec
pushf
inc
addr16
dec
jecxz
mov
pusha
fidivs
addb
ljmp
sub
and
cmp
jg
dec
fucomip
popa
outsl
mov
sub
in
cmp
icebp
adc
pop
jo
sbb
add
dec
adc
mov
dec
pushf
inc
mov
sbb
mov
enter
push
mov
scas
mov
subl
mov
jle
fdivl
mov
in
mov
sar
into
ds
xor
and
orb
repnz
xchg
in
mov
sub
sbb
push
es
stos
insb
jb
pop
test
xlat
data16
jne
pop
pop
in
push
int
sub
cli
add
xlat
cmp
in
mov
insl
add
jno
add
cmp
jb
testl
repz
mov
jmp
call
mov
inc
or
mov
sub
push
adcb
ret
inc
xor
sarb
sbb
imul
mov
mov
cmpsl
shll
cli
ret
push
nop
gs
fistps
sub
sahf
mov
cmc
push
xor
cmp
inc
xor
pop
mov
fists
jl
add
sbb
dec
jnp
mov
xchg
or
mov
mov
mov
xlat
push
outsl
fwait
dec
jge
mov
xchg
in
jnp
push
or
inc
stos
jecxz
jl
push
imul
pop
popa
cmp
jno
dec
loope
pop
cmp
sub
lahf
mov
out
repnz
lcall
inc
mov
mov
addl
sub
mov
push
jge
cmp
mov
pop
aaa
adc
mulb
sub
frstor
or
mov
out
mov
mov
cmp
pop
insb
ja
ret
add
inc
mov
aam
push
xor
mov
sbb
repnz
pop
sbb
icebp
and
and
xor
je
dec
mov
iret
push
xchg
std
imul
mov
xor
pop
in
orl
jecxz
jae
xor
pop
dec
icebp
es
jns
cmp
in
mov
jp
data16
pop
orl
pop
dec
and
es
je
or
and
pop
and
add
sbb
xor
xchg
sti
add
into
mov
rcr
iret
dec
pop
or
loop
mov
adc
in
stos
sub
call
or
inc
mov
ljmp
push
mov
sbb
loop
xchg
jle
nop
movsb
jl
sbb
mov
push
mov
cmp
adc
in
cwtl
popl
adc
test
mov
mov
test
loope
sbb
pop
rorl
add
dec
fbstp
mov
jl
and
push
add
or
mov
dec
adcb
mov
mov
out
enter
or
mov
data16
and
js
inc
cld
sub
ss
insb
es
sahf
lods
fldt
or
fucom
pop
jno,pn
addr16
fnstcw
push
mov
lea
rcr
dec
aam
xor
push
push
xor
and
jbe
std
sbb
and
mov
push
lea
xchg
je
xlat
shrl
inc
jo
xor
and
xchg
pop
mov
dec
cmp
mov
or
ljmp
mov
pop
rol
rcrl
fldl
stos
and
dec
xchg
fprem
aaa
ret
mov
mov
jnp
es
pushf
adc
test
sub
lock
and
imul
mov
adc
imulb
repnz
fs
nop
dec
mov
xchg
jg
subb
mov
fnstsw
lods
sub
add
mov
push
sbb
mov
push
mov
or
push
fldl
dec
test
outsl
outsl
dec
jge
and
jb
pop
cmc
fsubrl
out
ret
repz
out
pusha
leave
imul
pusha
xchg
ljmp
loopne
jne
sub
add
inc
loopne
dec
js
loopne
stc
pop
orl
test
je
inc
pop
aas
mov
xlat
dec
addb
repz
sub
ljmp
loopne
cwtl
fsubrl
int
cli
xchg
sbb
inc
inc
mov
xor
cmp
fmull
add
lcall
ret
cmp
xor
sbb
add
popa
mov
fcmove
or
cltd
mov
int3
or
xchg
add
ds
std
sbb
dec
pushf
imulb
fwait
imul
pop
sbb
nop
insb
fimull
dec
pop
scas
cmc
outsl
cmc
repnz
and
ret
lret
xchg
push
fs
imul
mov
jg
dec
cwtl
in
test
cmp
xor
les
xchg
dec
inc
inc
sar
rcll
lods
data16
and
cltd
inc
aaa
mov
jns
pop
xchg
push
sbb
dec
sub
cli
xchg
cmpsl
pop
ja
jo
inc
loopne
fimull
and
mov
out
cltd
std
insb
lods
xchg
test
mov
cmc
lret
jnp
faddp
loopne
cwtl
mov
popf
pushf
sub
stos
push
rcll
testb
sti
inc
or
mov
mov
sbb
out
sbb
test
dec
inc
or
loope
pop
das
inc
test
clc
dec
pop
inc
mov
stc
sub
sub
push
jo
mov
shl
mov
daa
jmp
stc
imul
les
mov
inc
cmp
mov
in
int
fldt
mov
sbb
jne
or
outsb
jnp
movb
xor
sbb
test
jge
mov
lcall
mov
addr16
push
xor
jbe,pn
cli
inc
rcrb
xchg
or
test
push
adc
mov
mov
cmp
jl
jo
testl
xor
push
shlb
es
aaa
outsl
leave
add
negl
and
pop
lret
mov
mov
xchg
pop
sarl
add
in
inc
imul
dec
repz
mov
jo
mov
nop
mov
cli
xchg
and
or
push
scas
repz
lcall
or
inc
jb
mov
fildl
out
das
and
arpl
push
xchg
int
aaa
sub
ret
lods
ret
divb
push
add
movsl
sub
out
hlt
and
enter
jmp
pushf
stc
sbb
pop
jb
xor
mov
and
cmp
mov
in
fwait
cld
and
cmpsb
pusha
and
pusha
xchg
inc
dec
cmpsb
scas
cli
ss
lret
mov
mov
daa
jl
sbb
flds
mov
push
push
insl
vpshab
cmpsb
xor
add
add
shl
sub
imul
mov
testb
shl
push
mov
or
enter
out
xchg
add
aam
or
mov
pop
test
outsb
add
repnz
aam
xchg
out
pop
push
int3
push
sbb
stos
andb
pop
ljmp
and
cwtl
push
insb
fstpl
stc
es
pop
or
xor
iret
std
xchg
jno
in
cli
sti
xchg
sbb
movl
in
xchg
test
aad
bound
mov
sbb
and
cwtl
into
sbb
scas
or
mov
mov
sbb
shll
push
lods
stc
mov
addr16
filds
mov
jne
lret
adc
dec
mov
cld
push
std
inc
ds
sub
xchg
add
and
pop
mov
stos
out
jno
icebp
cld
jg
lret
jne
insb
into
mov
in
dec
push
movsb
cwtl
test
jecxz
ja
pusha
fistpl
push
or
and
pop
push
inc
mov
cmovl
adc
and
adcl
in
mov
sbb
cmp
inc
scas
idivl
nop
inc
adc
nop
lret
js
lds
ret
push
sbbl
push
jg
jg
mov
gs
push
inc
sub
inc
call
gs
call
jmp
dec
in
in
bound
sub
in
mov
adcl
sahf
lock
lahf
pop
test
pop
ret
das
cmpsb
repnz
cmp
out
aad
push
shrl
sbb
jmp
aad
iret
sub
inc
cmp
add
pusha
popa
xchg
xlat
fdivs
pushf
push
out
nop
rclb
bnd
enter
push
movsl
sahf
js
push
adc
adc
and
jp
out
xchg
xchg
fmuls
popa
and
adc
or
out
sbb
push
or
mov
or
mov
mov
sbb
xchg
mov
fmull
js
in
sbb
pop
or
out
fldenv
mov
fsub
adc
scas
add
jp
jne
jp
lds
jns
mov
mov
adc
icebp
xchg
pop
xor
add
aas
or
inc
jno
push
arpl
xchg
stos
mov
dec
xchg
dec
stc
mov
pop
jp
sub
andb
sbb
dec
addr16
dec
or
in
inc
sbb
mov
cmp
adc
repz
pop
lret
fldcw
aad
outsl
inc
mov
mov
scas
mov
test
aam
xor
insl
jbe
push
and
cmp
imul
pop
or
push
xor
add
insl
inc
mov
lds
jge
inc
pop
xchg
adc
sarb
fs
les
mov
outsl
inc
mov
jle
lea
adcb
cmpsl
sub
mov
cmpsb
xchg
xor
push
mov
push
lar
dec
cmp
sub
int
lock
push
outsb
mov
push
and
pop
xchg
jg
mov
cmp
and
mov
scas
mov
out
sbb
dec
stc
movsb
test
push
scas
ja
jl
sbb
fstpl
out
out
mov
cmpb
imul
in
out
jge
imul
ficoms
mov
lods
data16
out
mov
push
lahf
or
jnp
inc
dec
fs
adc
or
dec
sbb
es
and
adc
sub
pop
cs
or
call
or
adc
fwait
mov
inc
lods
mov
stos
les
xlat
and
std
cmp
xchg
mov
stos
into
fidivrl
add
subl
aam
jb
in
popa
out
bound
pusha
jecxz
scas
sub
dec
add
jne
adcb
pop
mov
mulb
das
mov
outsb
push
push
std
jl
gs
cmp
cmp
mov
jg
mov
pop
jle
dec
xchg
test
into
mov
mov
mov
fiadds
dec
sub
leave
lds
mov
ja
into
jbe
pop
pusha
xchg
and
pop
dec
inc
mov
scas
jae
xor
leave
loop
fldenv
mov
fistps
rolb
cld
sahf
std
scas
ret
sar
mov
sbb
sbb
in
xchg
imulb
addr16
mov
testb
fcoml
pop
mov
mov
push
mov
sub
sbb
push
stos
stos
lret
push
rorb
cmpsl
and
adc
add
sbb
pop
cmp
test
test
popa
mov
add
fcmovnbe
ret
mov
and
pusha
test
mov
decl
leave
popa
fcompl
inc
inc
shll
mov
mov
pop
imul
insl
lods
jge
sub
cmc
mov
or
mov
jbe
xchg
fsub
xor
lret
scas
xor
mov
jmp
outsb
mov
jecxz
scas
push
mov
movsb
push
shll
daa
out
pop
hlt
loop
mov
pop
pop
mov
fistpl
sub
or
loopne
pop
nop
pop
inc
orl
pop
fnsave
push
scas
cmp
jmp
out
jne
pop
testl
dec
cmp
addr16
push
imul
xlat
lods
call
nop
cli
mov
rorb
or
mov
xchg
dec
xchg
push
adc
ja
icebp
movsb
data16
push
cwtl
pushl
jge
mov
clc
sti
aam
movsl
dec
imull
rcr
sub
imul
push
pusha
orb
mov
pop
sub
or
rclb
pop
lahf
push
out
les
into
nop
lret
pop
imulb
bound
outsb
cmp
jno
xchg
adc
cld
push
dec
mov
jl
push
iret
shrl
inc
add
sarb
pop
je
testl
ljmp
sub
repnz
scas
js
xor
mov
xchg
sbb
xchg
cmpsl
ret
repnz
dec
sbb
sbb
ja
adc
shlb
sahf
out
test
rcrl
stos
int3
mov
mov
call
xlat
push
pop
cmp
dec
jp
outsl
lea
fsubs
add
sbb
add
xchg
pop
daa
addr16
mov
out
jp
inc
jecxz
lret
lds
xchg
dec
lods
gs
js
add
xor
popf
sub
lock
repz
mov
into
mov
sbb
jne
pop
jns
mov
and
or
pop
lret
and
outsb
pop
add
add
popf
xchg
or
jns
pusha
or
cmpsl
bound
aad
les
add
outsl
sbb
sub
cltd
pop
jno
add
push
jae
mov
sub
lds
and
cmpsb
sub
adc
rol
inc
inc
xlat
stos
scas
add
int
fistl
mov
lods
lock
sti
shll
mov
repnz
sbb
xor
gs
aad
mov
cmp
dec
mov
fbstp
xchg
push
xchg
push
loopne
pop
out
ret
jbe
sti
or
jb
pop
push
xor
sub
aaa
push
cmp
xchg
xchg
shlb
mov
lret
into
xchg
frstor
xlat
xchg
xchg
cmp
shrl
or
inc
lahf
xchg
jmp
sbb
xchg
xor
outsl
mov
lea
pop
fdivs
pop
insl
push
pop
sbb
fisttpl
mov
push
inc
lahf
sbb
lds
adc
xchg
xor
cmp
xchg
insl
cltd
adc
add
std
setl
dec
adc
jo
idivb
ljmp
fwait
adc
ljmp
add
outsl
push
xchg
sub
and
mov
jmp
cli
mov
inc
je
stos
dec
pop
les
dec
cli
addr16
sub
xchg
shll
or
test
rep
cmp
ret
push
and
xchg
shrl
cltd
stc
xchg
je
inc
pop
and
mov
push
cmp
shlb
sub
imull
out
xor
xor
jne
int3
and
mov
rol
les
fcoms
xchg
test
push
pop
lock
sub
into
xor
outsb
mov
push
in
xchg
lds
jns
push
sub
mov
cmc
incl
jecxz
jo
dec
dec
mov
and
inc
jmp
sahf
xor
enter
inc
mulb
push
mov
sub
sub
or
mov
rcr
push
mull
rolb
xor
lret
adc
sbb
xor
mov
andl
icebp
jns
stos
cmp
lahf
cmp
ljmp
push
push
mov
jae
inc
divb
xlat
sub
in
xor
jns
ljmp
jne
jg
jg
out
push
push
int
int
outsl
clc
mov
insb
sbb
iret
cmc
sarl
sbb
arpl
sub
sbb
sub
mov
sbb
cmp
xor
fcmovne
or
ret
jno
sti
or
es
fdivrl
xchg
movsb
and
hlt
fs
test
les
fisttpll
push
mov
jno
ds
aam
add
lods
popa
out
xchg
outsb
in
mov
jne
les
outsb
ss
cmp
enter
jo
add
js
cmp
stc
scas
dec
repz
pop
inc
mov
pop
dec
notl
mov
mov
into
icebp
fcompl
pop
dec
stos
shll
push
bound
aam
xor
mov
inc
ljmp
push
jno
mov
mov
jg
push
or
js
pop
cmpsb
push
nop
je
push
inc
test
aad
push
iret
mov
out
andb
aad
xchg
push
push
sbb
gs
outsb
in
inc
imul
stos
and
jecxz
pop
xchg
idivb
js
lret
push
cmc
jp
cli
or
iret
stos
aas
scas
push
popa
push
xchg
loop
nop
push
stos
jo
jg
sbbl
xchg
es
insl
inc
into
pop
int3
loope
loopne
out
out
sbb
leave
and
mov
leave
dec
jae
out
push
sbb
sub
pop
fldl
test
xchg
insl
or
out
jge
add
adc
hlt
or
out
aaa
aaa
push
outsb
or
je
dec
sub
or
cmp
daa
mov
dec
scas
adc
and
in
jecxz
mov
dec
sub
jmp
pusha
sub
add
je
adc
pop
pop
add
fnsave
push
addr16
push
inc
sub
out
sub
notl
andb
xor
ljmp
lods
xchg
jge
add
fidivs
and
mov
loop
pushf
int3
mov
lret
push
popa
loope
dec
dec
js
test
lret
fs
rorb
pop
aaa
xor
xchg
lea
aaa
mov
mov
daa
daa
and
xor
push
mov
je
jmp
arpl
cmp
es
push
inc
fldpi
add
int
addr16
fsubs
fcmovne
xor
stos
push
jnp
ja
inc
cmp
sbb
inc
add
insb
xchg
push
inc
add
jnp
mov
xchg
loopne
test
or
or
popa
and
jne
repz
add
frndint
idivb
mov
subl
aas
out
int3
mov
inc
push
andl
repnz
leave
cltd
ret
mov
mov
pop
push
xchg
fstl
jo
insb
outsl
and
cmc
rclb
pop
incl
addr16
xor
cwtl
mov
lods
mov
pushf
cmp
mov
jnp
fdivl
enter
mov
pop
aaa
mov
xor
lret
sub
jge
cmp
cmp
push
repz
mov
cmp
jmp
sub
test
and
aam
push
mov
xchg
pushf
dec
ja
mov
and
idiv
pf2id
or
pop
or
cmp
xchg
jp
or
lods
ja
popf
mov
inc
and
push
lcall
scas
adc
add
mull
out
arpl
icebp
repnz
or
arpl
leave
mov
mov
mov
imulb
or
xor
add
dec
jle
sub
imulb
arpl
adc
cmp
notb
pop
roll
sarl
xlat
xchg
mov
mov
out
cld
add
and
sbb
ret
in
xchg
outsl
int3
nop
and
pop
ficoml
ret
inc
and
sahf
rol
xchg
in
dec
std
mov
lea
es
cmp
mov
dec
movb
outsl
mov
sti
add
xchg
subb
add
cmp
bound
into
hlt
push
inc
sub
sarl
add
jns
fmuls
push
fistl
addr16
jae
insb
sbb
into
adc
mov
int
inc
dec
adcb
outsl
test
xor
loopne
lds
inc
jno
pop
shll
sbb
hlt
loopne
dec
add
lret
push
add
dec
xor
ret
int
pop
insb
adc
jo
fimull
rorl
stc
mov
sti
cmp
gs
jp
push
mov
and
imul
jecxz
fmul
roll
push
mov
pop
in
mov
test
ret
hlt
fadd
pop
mov
iret
fldcw
sub
mov
mov
sub
push
test
cld
mov
cmpsb
jle
push
rorl
cmp
pop
dec
push
xchg
or
jno
adc
mov
orl
int
sub
adc
daa
in
fcomp
jmp
sub
test
repnz
pop
or
out
xchg
xchg
mov
mov
push
int3
call
mov
push
mov
fldt
js
in
outsl
push
frstor
mov
mov
test
lret
hlt
mov
imul
scas
sbb
and
mov
inc
cmp
mov
jp
ljmp
sub
stos
ds
or
xchg
jo
xchg
add
fistpl
jl
inc
jno
pushf
push
inc
sub
xor
in
cmp
mov
imul
mov
jmp
aas
add
xchg
push
idivl
jge
test
shlb
push
pop
cmp
sbb
xchg
mov
add
addr16
ret
call
movsb
aas
popa
inc
jae
jno
pop
mov
outsl
sub
cld
or
jp
loope
jb
hlt
or
sbb
dec
lods
mov
xchg
push
fmull
jne
fldenv
push
mov
adc
test
sub
hlt
mov
ljmp
pop
jae
dec
and
mov
dec
aad
xchg
arpl
repz
sbb
lds
push
xchg
xchg
popf
ds
jl
cmpsl
pop
aas
cmp
sub
lret
cwtl
cmpsl
jo
data16
mov
rcrb
mov
jecxz
adc
push
adc
jb
shll
pop
pop
stos
sti
ja
fwait
les
xchg
je
les
adc
int3
in
shrl
cwtl
rorl
xchg
sub
dec
insb
ss
mov
out
mov
imulb
bound
xor
inc
inc
xchg
lods
aas
faddl
aas
insl
fbstp
mov
mov
cld
mov
mov
outsl
jb
stc
push
lods
and
movsb
or
or
gs
int3
es
test
mov
mov
adc
gs
outsl
sub
bswap
jecxz
mov
jmp
dec
loope
bnd
gs
lods
xchg
stc
dec
repz
add
pop
cwtl
test
jbe
data16
inc
iret
push
loope
shl
sub
idivb
popf
push
outsb
push
inc
xchg
mov
xor
push
pusha
lock
adc
in
rcrb
adc
xor
mov
mov
mov
push
test
dec
or
xor
fwait
mov
mov
sti
xor
mov
sarb
stos
adc
loopne
mov
cli
xchg
xchg
push
pop
mov
mov
mov
outsb
in
mov
jae
aaa
jb
adc
call
cwtl
jl
cwtl
repnz
dec
ds
jg
sub
shll
daa
lds
bound
outsb
or
inc
jl
sti
push
lea
js
aam
jmp
out
inc
adc
jae
popa
lods
shlb
adc
lds
xchg
push
and
sub
jecxz
hlt
mov
or
insb
aaa
repz
cmp
mov
fs
leave
xor
jg
add
xchg
xlat
lcall
movsb
xlat
jae
push
sub
out
sbb
mov
daa
jl
add
aad
imul
push
mov
inc
jbe
iret
jp
sub
cmpsl
push
add
fists
mov
in
jg
sbb
iret
cwtl
leave
lcall
mov
hlt
inc
nop
test
je
das
es
imul
lds
and
add
mov
data16
fnclex
pop
add
cmpsb
lcall
data16
sub
dec
lea
pop
andl
push
in
pop
shrb
mov
push
stos
clc
dec
test
int3
sbb
les
mov
add
pop
mov
jnp
push
push
ljmp
pop
xchg
mov
lds
out
loope
push
and
test
data16
jmp
inc
sarb
outsb
ljmp
mov
rclb
hlt
je
inc
push
jl
fiaddl
mov
jge
scas
bound
loopne
ljmp
out
dec
xchg
or
mov
lret
and
in
push
dec
mov
xor
jo
icebp
loop
and
xchg
jne
jg
mov
hlt
popf
nop
les
pop
dec
xorb
jle
xchg
push
gs
sti
inc
and
outsb
lea
in
xor
xchg
movsb
les
mov
iret
dec
movsb
decb
cwtl
insl
jl
mov
sub
mov
mov
lcall
into
aaa
xlat
fldl
xlat
in
sub
push
into
cmpsl
loop
cmpl
scas
or
cmp
repz
mov
stos
or
addr16
xchg
and
mov
mov
mov
pop
push
shrb
mov
mov
hlt
repz
mov
into
sbb
test
jns
add
or
sub
push
cs
add
cmpb
jge
fwait
push
rorb
dec
cs
push
pop
test
sbb
fistps
leave
pop
mov
enter
fs
ret
aam
int3
arpl
fldcw
jmp
xchg
or
int3
stos
jecxz
cmpsl
sbb
inc
sbb
iret
cltd
int3
out
icebp
lahf
pop
das
xor
push
jne
inc
or
cmp
xchg
out
pop
mov
mov
or
jl
jecxz
add
xchg
ja
int3
aad
cli
in
inc
lret
and
jo
mulb
mov
mov
xchg
sbb
push
lds
inc
js
sub
fldenv
mov
ja
insl
adc
or
jnp
pop
fcomps
pop
lods
imul
mov
jmp
cltd
cmpl
sbb
inc
pop
push
les
pop
out
insl
sti
lret
cmpsb
aad
xor
jp
add
lds
xor
xchg
pop
popa
and
lret
icebp
jl
adc
lret
jmp
testl
jne
je
jmp
aam
call
jle
and
cmp
aad
ja
cld
add
and
xchg
inc
inc
lcall
push
xor
adc
cmp
inc
movsb
or
sub
push
mov
leave
loopne
cmp
dec
dec
adc
aad
fstps
fldenv
push
sar
mov
daa
insb
lea
cmc
mov
outsl
pushf
sbb
sbb
or
nop
dec
int
push
arpl
lret
mov
sub
fs
outsl
lods
cmp
in
pop
adc
cwtl
or
mov
mov
inc
sbb
mov
pusha
es
mov
aaa
mov
pop
dec
xchg
fistl
pop
movsl
jl
adc
test
xchg
xor
cmp
sbb
roll
cld
cltd
cmpsb
stos
mov
es
xchg
bound
decl
add
mov
mov
mov
sbb
sbb
push
mov
sub
push
jmp
sbbl
subb
out
mov
in
pop
scas
pushf
mov
les
cmp
and
leave
mov
ret
movsb
ficompl
enter
sbb
lds
aam
add
or
sahf
int
test
jae
xchg
leave
ds
pop
ja
pop
into
inc
std
in
roll
ljmp
or
adc
push
dec
dec
pop
std
inc
pop
xchg
in
pop
ret
inc
lods
dec
repnz
fnstenv
or
movsl
dec
mov
xor
push
dec
test
xchg
xchg
das
or
or
xor
pushf
mov
cld
loope
sbb
adc
lods
fbstp
test
or
shl
mov
adc
and
imul
inc
pop
sbb
inc
stos
sub
push
rcr
jo
xchg
or
jb
xchg
sub
ljmp
xchg
mov
xor
sbb
out
push
pop
sub
jge
dec
and
fs
enter
test
push
fiaddl
rol
cmpsb
push
xchg
pusha
insb
into
jns
ljmp
ds
inc
aaa
mov
jmp
push
push
or
je
or
int3
inc
fbstp
lret
dec
cmc
push
lret
jl
stos
mov
sub
cld
insl
inc
and
push
ds
xchg
aad
inc
int
popf
outsl
and
popf
xchg
insb
xchg
dec
dec
push
shll
sub
push
ds
out
sub
push
jmp
das
mov
and
mov
sahf
or
dec
add
jb
fs
das
xchg
mov
jge
data16
cwtl
mov
jo
out
add
aaa
inc
mov
and
mov
popf
inc
mov
bswap
ret
jo
arpl
out
jno
sub
adc
xlat
jmp
aas
test
sbb
push
jo
sahf
leave
mov
test
cmp
in
test
je
nop
ds
sbb
aas
jl
adc
xlat
cmpsl
lock
push
popa
pop
cmp
dec
jbe
fbstp
adc
adc
in
dec
lcall
jp
fmul
outsl
in
imul
filds
ret
fisttpl
xor
lcall
mov
xor
jp
xor
and
push
mov
mov
scas
or
rorb
pushf
sub
jmp
jp
push
jmp
sbb
enter
icebp
cmpsl
mov
test
and
in
and
cmpsl
test
jbe
push
or
stc
push
pop
int3
add
fwait
imul
mov
lods
stos
inc
pop
inc
xlat
cmp
mov
sub
xlat
and
les
push
clc
andps
dec
push
add
stos
popa
in
adc
sarb
fwait
std
shlb
push
movsb
mov
stc
pop
pushl
adc
xchg
jne
aas
js
add
les
sbb
mov
pop
xchg
pop
loop
mov
pushf
fs
jno
xor
add
lahf
pop
bound
jp
sub
aaa
push
sbb
fisubs
pop
xchg
sbb
xlat
cmp
or
push
arpl
push
shll
insb
int
inc
rcll
and
enter
iret
js
dec
push
clc
addr16
push
inc
sub
xchg
lods
cli
cmp
jnp
in
xor
mov
mov
cwtl
xchg
push
add
loopne
dec
or
fsubl
insl
mov
mov
std
jae
mov
add
std
rcl
xor
sub
pop
pop
out
mov
clc
mov
and
or
inc
repz
fwait
push
jmp
div
popa
pop
add
dec
jg
and
or
mov
dec
sub
fnstcw
and
notl
arpl
sti
fs
mov
loop
push
xor
sbb
rcl
add
sti
cld
or
push
mulb
cmc
add
mov
adcl
push
paddsb
mov
and
mov
xor
fwait
lods
repz
jmp
es
or
cvtps2pi
mov
jg
xor
lock
jge
mov
jg
sbb
popa
js
andl
imull
jno
loopne
dec
inc
test
add
mov
out
dec
mov
pop
pushf
or
outsl
test
loope
pushf
ret
xchg
icebp
dec
dec
xchg
test
xchg
fwait
push
das
into
inc
mov
ljmp
jecxz
mov
xchg
cmp
aas
in
lret
push
jns
fsub
out
int3
ret
rcrb
shl
lahf
lock
xchg
cmp
cmpsl
inc
adc
fcmovnbe
or
cmp
loope
jb
fwait
ljmp
test
pop
and
bound
enter
push
inc
rcll
fiaddl
jbe
mov
inc
mov
push
subl
push
jecxz
mov
lea
xchg
jmp
mov
les
jmp
ljmp
shl
jmp
scas
xchg
test
fisttpll
sbb
xchg
loopne
sbb
out
sahf
inc
dec
out
push
shlb
mov
lock
or
rcll
sbb
icebp
mov
dec
adc
add
push
mov
ret
cmp
js
pop
ja
ja
inc
dec
xlat
xchg
incb
pop
adc
adc
loop,pt
dec
jno
insl
not
popf
mov
cmp
lret
loop
shlb
dec
add
mov
and
ja
adc
sti
sub
divl
repnz
lret
xchg
out
cmp
pop
out
xor
and
inc
dec
lock
sbb
cmpsl
ret
nop
mov
hlt
cmp
mov
call
and
das
pushf
std
jno
lret
dec
jp
mov
iret
mov
xlat
ror
imul
xor
dec
lods
jb
add
xchg
adc
jmp
sbb
adc
xchg
jb
test
inc
push
xor
cmp
jnp
mov
jecxz
cltd
adc
dec
push
pop
into
xchg
pushf
mov
sti
push
pop
jo
std
sbb
hlt
cmc
add
cmpsl
enter
out
xchg
loope
mov
adc
lcall
xchg
movsb
dec
jl
pop
jge
or
cmc
dec
inc
daa
mov
int3
xor
stc
stos
sub
es
in
jne
mov
mov
sbb
dec
xchg
sbb
mov
xchg
mov
mov
repnz
call
lock
sub
inc
and
xor
scas
inc
in
or
jp
subb
pop
or
subl
inc
sub
dec
sbb
lahf
or
icebp
mov
push
aas
pop
addr16
sbb
pop
xchg
push
mov
xchg
cmpsb
add
push
rolb
and
aaa
loope
rcrb
aaa
dec
xchg
add
mov
aad
sti
int3
out
push
adcl
mov
xlat
test
jne
and
push
pop
xchg
push
push
out
cmc
dec
jbe
jmp
sub
outsw
mov
dec
dec
fnsave
xor
sub
test
sub
pop
xor
iret
jle
insb
push
push
je
mov
fildl
jp
adc
aaa
push
out
inc
rorb
popa
mov
cmc
ds
mov
sbb
cmp
ja
out
push
movsb
insb
lods
outsb
fnsave
inc
adc
cs
inc
divl
sub
addr16
cld
add
scas
xchg
mov
jo
xlat
subl
push
pextrw
xor
jo
add
xor
out
jo
ss
push
inc
repnz
ja
aaa
insl
jae
push
mov
in
mov
sub
int
xor
xor
std
xchg
shlb
pop
stc
sub
mov
add
je
sbb
or
jmp
gs
mov
adc
fiadds
orb
mov
in
lahf
inc
in
out
pop
stos
push
leave
repz
mov
inc
and
xor
jg
inc
mov
pop
stos
and
fst
push
and
pop
rcr
and
sbb
and
sub
dec
mov
mov
hlt
fisubs
mov
jmp
xor
movsb
or
mov
fstpl
and
cmp
push
cli
lret
pop
xor
mov
aaa
shl
lea
outsb
jno
insb
fdivl
xor
idivl
cmpsl
xlat
adc
or
and
addr16
pusha
push
jmp
push
mov
insb
pop
popf
imul
and
adc
and
cmp
and
ss
add
dec
push
insl
lcall
cmp
pop
inc
clc
mov
test
int3
scas
inc
lret
adc
fidivs
mov
loope
xor
fists
jl
inc
push
divb
fstpt
repnz
das
jae
jo
pop
movsb
loope,pn
jnp
fstp
popa
xor
mov
andb
lea
mov
sahf
push
orl
shll
add
pop
dec
out
xor
roll
out
aam
sahf
sub
dec
xchg
dec
inc
inc
adc
pop
xacquire
and
adc
scas
sbb
fs
xchg
push
imul
sbb
cmp
push
pop
cmp
add
push
xchg
sahf
icebp
repz
push
movsb
cmpsb
sbb
jp
sub
pop
add
ljmp
xor
into
push
fs
test
mov
mov
jmp
repz
mov
pop
mov
cmp
sbb
and
pop
add
jecxz
pop
push
and
pop
jge
out
fadds
xor
xchg
lds
xchg
adc
lock
inc
adc
fldt
sbb
mov
cli
adc
ret
rorl
popa
lea
out
mov
adc
push
cli
or
addps
aad
cmp
in
dec
mov
dec
lods
scas
pop
lret
popa
adc
push
jge
aam
into
cmpsl
add
mov
in
xchg
cmpsb
sahf
movb
pop
dec
mov
js
pop
neg
dec
aas
push
rcrl
adc
fwait
pop
rol
jae
jmp
shll
inc
bound
lret
mov
outsb
xchg
push
or
shlb
dec
outsl
cltd
mov
mov
or
push
inc
sbb
dec
push
mov
push
jo
ja
pop
mov
imul
lret
add
add
jae
outsl
nop
pcmpgtd
cli
push
sbb
jg
test
inc
xor
push
test
jns
jno
jns
push
dec
jnp
cmpsl
xorb
lret
hlt
outsb
scas
pop
dec
push
push
xchg
test
scas
mov
int3
scas
icebp
mov
push
inc
in
das
in
xchg
adc
ret
cmp
into
dec
ret
xor
push
xchg
pop
xchg
in
sbb
imul
and
sub
pop
lcall
mov
xlat
sbb
popf
imul
dec
ss
lret
lcall
shlb
cltd
cmp
xchg
jle
mov
fistl
or
push
sub
pop
cmpsl
out
dec
popa
je
jmp
xchg
cld
cltd
cmpsl
rorl
mov
sbb
push
mull
ss
call
enter
punpcklwd
outsl
jno
xor
mov
mov
fs
mov
ljmp
repnz
sub
or
cmc
sbb
mov
shll
decl
jg
lods
stos
arpl
iret
mov
iret
xor
shrl
jae
arpl
rol
popa
add
or
mov
sahf
aas
fistl
scas
push
pop
nop
dec
xor
push
fwait
cltd
test
movl
movsl
fcompl
das
pop
sbb
pop
pop
imull
xor
out
hlt
test
loop
mov
sarl
and
xchg
adcl
push
sbb
jmp
cli
in
inc
js
cmp
mov
outsl
fimull
aaa
sarb
push
fwait
add
test
jmp
xchg
sbb
xchg
and
lods
in
int
jns
sbb
cltd
dec
inc
xor
and
mov
inc
fisttpl
or
rcll
and
in
jae
in
pop
sub
push
inc
and
jo
sti
pop
add
push
lods
fisttpl
mov
ss
xchg
mov
adc
sub
int
sbb
push
mov
xchg
cli
nop
adc
negb
aad
and
inc
dec
adc
cmc
out
movsb
das
dec
dec
mov
xlat
or
mov
dec
dec
stc
jg
mov
repz
popf
add
mov
jbe
xchg
pop
cltd
test
cmpsb
mov
xor
mov
pop
xchg
sti
cmpsb
mov
mov
clc
imul
adc
add
xor
shrl
xchg
mov
jo
push
dec
ds
cld
cmpb
sub
fdivs
loop
je
dec
iret
fcoml
ret
xor
popa
je
pop
clc
add
cwtl
adc
dec
fmuls
fnsave
mov
or
fistpl
inc
sbb
push
test
das
cli
jno
or
movb
dec
js
les
dec
xor
in
push
sbb
push
pusha
inc
xchg
inc
pop
out
repz
xor
popf
int
dec
scas
xlat
jns
mov
and
fadd
cli
mov
cmp
into
mov
xchg
mov
fistpl
push
xlat
sub
push
sbbb
scas
xor
andb
shr
inc
js
jl
into
adc
sub
adc
dec
push
es
lret
jecxz
and
enter
xor
sub
push
enter
mov
pop
in
jmp
add
mov
xchg
sub
out
dec
adc
int
sbb
arpl
push
notl
pop
lock
mov
mov
loop
inc
sub
pop
pusha
in
push
push
sbb
push
cmp
fiaddl
sub
lds
jnp
andb
jbe
shlb
aad
into
test
addr16
loop
mov
popf
push
pop
and
dec
orl
jg
add
push
lea
and
jne
push
add
sub
scas
inc
test
hlt
cwtl
arpl
out
fbld
add
ret
cmp
cmp
and
adc
cmp
fucomp
scas
into
add
lock
jne
les
pop
xchg
cmovno
inc
dec
sbb
xor
out
andl
sahf
insb
cmp
jmp
jns
ret
xor
adc
fwait
pop
dec
insb
xorb
dec
mov
fbld
lea
sub
dec
scas
out
into
and
js
dec
or
lods
sub
movsl
jge
insb
or
outsl
arpl
movsb
xchg
repz
jo
or
int
xor
cmp
stc
mov
sbb
push
movsb
shld
push
sbb
and
add
pop
decl
loopne
ljmp
lret
icebp
fisubl
mov
packssdw
imul
frstor
hlt
cmpsb
xor
and
gs
or
mov
jmp
mov
pop
jnp
or
xchg
sbb
or
in
dec
inc
sbb
sbb
repnz
loop
stos
mov
aad
into
aad
push
or
and
and
repnz
scas
or
int3
mov
fs
mov
popl
adc
jns
repz
mov
cmp
and
sbb
sbb
test
icebp
push
sub
jmp
mov
bound
shlb
scas
lret
stos
dec
stos
mov
jno
repz
cmp
ret
daa
stos
mov
stc
jb
or
cmpb
pop
repnz
fwait
xchg
xchg
push
sbb
mov
into
in
in
mov
insb
add
pop
out
popa
das
adc
xchg
or
int3
xchg
push
jg
sub
fstps
movl
scas
stos
jle
mov
call
cmp
mov
push
cwtl
clc
or
fstpl
cli
in
rcll
push
mov
xor
sub
xchg
push
jns
aas
sbb
xchg
sbb
es
sbb
ss
dec
popf
jae
jb
sbb
sbb
fistps
jae
int3
xchg
data16
std
sub
shlb
ret
mov
subl
xchg
in
imul
pop
jl
xchg
xor
dec
gs
int
jge
mov
mov
dec
jo
and
inc
or
data16
adc
jo
sbbl
in
cmpsl
sbb
add
xlat
dec
lods
in
test
xchg
addb
rclb
dec
daa
mov
adc
pop
les
scas
jnp
aad
cmpsb
xchg
loop
cmpsb
les
fldenv
adc
sbb
loopne
inc
cmp
sti
jno
enter
jp
in
int3
js
dec
movsl
push
xchg
pop
int
cltd
mov
mov
movsb
test
push
sub
push
mov
mov
daa
int
cmpsl
cli
add
lods
push
icebp
js
sub
mov
insb
scas
lods
mov
loopne
jle
ret
xor
fcomi
adc
jo
xchg
andb
das
les
movsl
addr16
in
dec
push
popa
test
outsl
xchg
push
jl
and
xchg
icebp
hlt
aad
xor
roll
sbb
fcomps
imul
loopne
xlat
sub
cwtl
sbb
jae
repnz
scas
ja
mov
and
inc
jp
mov
mov
mov
sub
xchg
or
lods
aam
sbb
push
scas
out
int
or
cmp
ljmp
popf
push
xchg
mov
mov
stc
sub
data16
in
pop
rcrl
jns
add
mov
loope
scas
add
push
add
pop
icebp
movsb
dec
dec
pusha
lock
mov
xlat
add
mov
add
adc
jle
aam
sub
cmp
sbb
push
loope
mov
jbe
mov
adc
outsb
hlt
inc
jb
lock
xlat
xchg
out
gs
out
inc
pop
lret
jmp
leave
push
popf
mov
sbb
sahf
inc
xor
jmp
and
roll
xchg
add
adc
adc
and
mov
inc
sbb
ss
iret
mov
dec
lcall
data16
rcrb
lods
cmp
adc
call
xor
int3
outsl
pop
pmullw
in
mov
or
add
int3
je
inc
pop
push
xchg
clc
adc
pop
jbe
sbb
aad
or
add
shrb
inc
inc
or
xchg
ss
mov
mov
and
dec
xlat
mov
inc
test
imulb
cs
lret
movsl
lods
sbb
aaa
sbb
push
shlb
mov
mov
fistpl
jns
sbb
mov
repnz
lea
dec
xchg
pop
add
adc
in
test
dec
mov
out
out
cli
mov
sti
in
cli
adc
int3
adc
hlt
push
ret
test
lret
sahf
shll
jne
hlt
mov
xor
mov
sbb
push
dec
cmc
add
in
in
orl
gs
lods
cld
mov
shlb
popa
mov
dec
lds
sti
imul
lds
jbe
bound
push
stos
lret
xchg
and
mov
fyl2x
pop
int
sbb
js
mov
out
sub
xor
jae
das
push
mov
sbb
mov
adc
mov
adc
repnz
sar
inc
adc
push
or
test
dec
xlat
inc
fsubrp
mov
push
xor
adc
push
popf
mov
inc
movsl
dec
scas
lods
test
cmp
frstor
add
jne
inc
jl
dec
and
xlat
std
mov
scas
or
fs
xor
cmpsl
add
cmp
xor
inc
repnz
movsl
icebp
cmc
ret
cmpsl
mov
out
test
out
mov
aam
xor
and
sub
mov
xor
jp
bound
rcrl
fldt
ss
out
dec
adc
dec
mov
pop
pop
xchg
outsl
test
inc
repz
and
jmp
es
and
sbb
sbb
lods
fbstp
aas
mov
mov
cltd
push
pop
mov
gs
push
jmp
jnp
std
cmpsb
in
ds
dec
leave
call
gs
shl
push
mov
shll
out
dec
aad
fsubrl
mov
adc
movl
clc
fcomp
aas
jns
lea
cltd
mov
jle
int3
in
push
add
push
push
sbb
mov
je
push
and
jg
and
mov
arpl
inc
xchg
out
mov
lret
pusha
cmp
xchg
pop
scas
aam
cmc
sub
movsl
mov
popa
mov
dec
jl
test
pop
sub
push
arpl
jmp
and
fincstp
mov
mov
loope
icebp
adc
push
xor
sti
cmp
leave
or
pop
popa
sub
imul
frstor
rcr
pushf
scas
shld
cs
fldl
iret
data16
les
mov
rorb
inc
xchg
mov
ret
cli
mov
mov
int3
push
data16
push
adc
fadds
xor
push
cmp
jo
add
fiaddl
aad
add
sub
mov
dec
cmp
test
inc
loope
test
or
xchg
mov
mov
xchg
pop
mov
je
pop
lea
fstps
fmuls
mov
xor
cmc
rcrb
das
icebp
jo
xlat
mov
loop
fstpt
stos
aad
xor
dec
sbb
mov
shlb
xor
movsl
sbb
lret
xor
in
bound
jmp
jne
fimuls
mov
and
and
xchg
int3
jmp
push
inc
movsb
mov
mov
out
addr16
pop
push
aas
pop
mov
sub
inc
or
cmovo
xchg
mov
cmp
pop
or
shlb
sub
daa
cli
leave
or
repnz
mov
loope
dec
movsl
daa
and
movsl
and
pop
fidivs
jns
insl
pop
iret
push
add
cmc
jnp
mov
sti
insb
cmpsl
das
repz
jecxz
inc
dec
clc
inc
add
push
cmp
xchg
mov
mul
jnp
inc
inc
divb
mov
cmp
adc
hlt
sub
rorl
xor
into
mov
add
call
and
das
or
add
mov
mov
in
test
sub
jecxz
pop
dec
cmp
int3
clc
sahf
xor
in
and
mov
mov
mov
sub
sub
inc
xor
fsubl
push
cmp
mov
mov
testl
mov
and
mov
call
mov
stos
fildl
cmp
adc
test
add
pushf
shlb
push
xor
push
gs
inc
mov
pop
mov
mov
outsl
test
fadds
mov
lret
jb,pn
test
repz
data16
push
sub
cmp
mov
clc
xchg
and
roll
leave
pop
dec
and
dec
dec
sub
aas
sbb
aad
popf
sub
add
dec
push
lret
mov
stos
xlat
out
push
push
xchg
add
sub
cmp
arpl
jae
setg
dec
ficoms
cmpsl
or
and
xlat
ds
loop
jno
pop
in
stc
scas
jp
pop
jle
mov
lcall
movsl
xchg
and
mov
cli
sbb
in
inc
sti
mov
sbb
test
mov
mov
std
pushf
imul
or
jg
iret
xchg
mov
pop
rol
cmp
hlt
and
jb
sub
jo
inc
subl
xchg
xchg
loop
push
shl
xchg
sbb
add
lock
call
xor
bound
gs
in
out
jecxz
and
js
and
ret
repz
sbb
dec
dec
push
pop
lea
xchg
xchg
or
cmc
pop
xlat
aaa
adc
ljmp
jg
shlb
fisttps
daa
enter
push
and
xor
lds
addl
loope
pop
lcall
xor
fcomip
in
jo
outsl
data16
jg
into
xchg
or
movsb
lahf
adc
sbb
out
sbbl
dec
dec
sbb
push
sbb
repz
sub
pusha
push
cmp
loope
cmp
lcall
push
js
ds
pop
ret
mov
sbb
adc
or
in
mov
jge
call
out
sbb
fwait
jae
es
dec
and
std
sar
add
js
imul
clc
dec
pop
mov
stos
push
push
sbb
popa
rcl
add
dec
lahf
mov
push
mov
mov
imul
out
dec
pop
les
les
and
dec
stc
mov
push
add
jne
mov
std
cmp
movsb
mov
insb
or
push
mov
or
adc
add
jae
adc
pop
push
ret
mov
lcall
dec
std
cmpsl
mov
sub
rcrb
or
imul
jno
inc
mov
sahf
sbbl
pop
leave
out
into
addl
xchg
mov
adc
dec
rcl
hlt
insb
lahf
pop
repnz
push
add
loop
mov
out
jg
dec
sbb
in
sub
add
mov
in
cmp
arpl
push
lahf
mov
in
sbb
ss
loope
shrl
aam
xchg
add
fldt
test
cmpsb
ja
divb
pop
mov
xchg
fdivrp
lods
into
or
andb
push
mov
idivl
popf
push
test
mov
add
xor
sub
cmpsb
aad
sarl
jp
stos
mov
add
or
adc
decl
fidivs
lahf
popa
push
sbb
sbb
mov
jmp
inc
or
adc
inc
aam
push
adc
jge
jmp
std
adcl
sar
faddl
or
xchg
inc
pushf
nop
faddl
loopne
and
stc
pop
sub
dec
mov
xor
filds
cmc
mov
inc
push
fistl
inc
mov
lcall
decb
and
popf
in
scas
icebp
add
mov
and
movsl
cmp
movsl
test
sbb
ja
test
loope
or
stc
out
xchg
push
ja
cmpsl
mov
sub
dec
outsl
fcoml
pop
sbb
das
adc
icebp
xor
jae
pop
sbb
inc
mov
mov
xchg
hlt
inc
jbe
dec
mov
mov
repnz
gs
ja
sbb
push
aas
adc
pop
ljmp
shlb
or
xor
and
adc
out
es
add
jmp
mov
scas
subb
daa
pop
outsl
movsb
sti
stos
sub
dec
test
fmull
xlat
les
mov
aas
jg
add
stos
scas
iret
or
mov
add
cmp
adc
and
aaa
shll
mov
inc
mov
loopne
xor
cmc
pop
xor
dec
fwait
xor
adcb
fwait
jae
jo
add
xor
fnclex
dec
std
scas
add
adcl
lret
or
movsl
insb
adc
mov
mov
jle
movq
mov
add
jae
xor
bound
add
out
orl
js
inc
rcrl
and
add
or
sbb
test
daa
push
xor
and
aaa
subb
mov
outsl
shlb
lahf
sbb
mov
out
nop
xlat
jb
fidivs
stc
lds
es
movsl
push
int
popa
or
lret
dec
xorl
jo
mov
jns
ds
js
pop
and
or
in
adc
jae
xorl
mov
and
stos
bound
fdivl
popf
mov
enter
loopne
cli
mov
repz
mov
xchg
mov
aad
and
mov
jge
mov
addr16
xor
dec
pusha
icebp
leave
gs
out
and
aaa
add
push
addl
fsubrl
cmp
adc
xor
sbb
sbb
push
mov
popf
lods
mov
jle
lahf
stos
add
pop
daa
and
js
push
andb
push
movsl
loope
pop
fcoms
lods
cmpps
call
imulb
xchg
jmp
push
shl
inc
and
rcrl
jb
pop
in
sub
movsb
jge
and
sbb
lds
imul
fisubrs
pop
inc
pusha
fmul
adc
sub
mov
aas
fsub
sub
outsb
test
pop
arpl
xchg
clc
jmp
ret
or
mov
mov
addr16
test
rolb
lods
or
xchg
mov
leave
inc
test
adc
scas
mov
test
sbb
push
jcxz
xchg
cmp
jbe
negl
stos
int3
pop
cmp
or
pop
pop
daa
push
sbb
call
aas
sbb
lahf
lock
inc
pop
push
sub
xor
add
orl
sub
leave
shll
mov
mov
rolb
jmp
cmc
shll
out
dec
fwait
nop
push
lods
outsb
stc
or
ja
and
daa
add
and
hlt
or
mov
jmp
xor
fistpl
dec
aaa
sbb
daa
sbb
sub
int3
cmp
rcr
pop
jmp
jno
mov
mov
dec
or
xchg
lds
scas
or
lods
idiv
mov
or
sahf
mov
imul
pop
add
inc
jl
bnd
faddl
cmp
ja
shll
cltd
std
gs
loopne
and
test
popa
adc
in
sub
mov
lock
jmp
adc
sbb
inc
jnp
dec
out
adc
insl
pusha
xchg
xchg
in
aaa
repz
mov
inc
fwait
jmp
jmp
mov
jns
aaa
cmp
mov
add
mov
gs
mov
xchg
cmp
and
mov
out
mov
outsb
sbbb
jbe
cmp
mov
push
inc
outsl
adcl
lods
rcl
test
sahf
cmp
popa
pop
cmp
add
ret
inc
lods
lds
lods
xchg
les
and
loop
popa
lods
xchg
cmpl
jo
jbe
xor
rolb
scas
int3
popa
movsl
cmp
repz
or
loop
mov
into
mov
jl
mov
mov
icebp
out
dec
adc
mov
sbb
movl
enter
xor
adc
mov
jle
mov
clc
cmpsl
mov
leave
mov
or
mov
add
xchg
shll
jecxz
movsb
pop
js
mov
test
add
push
push
movsl
in
add
shlb
add
int3
xchg
mov
ja
fnstcw
cmp
dec
add
add
dec
jg
in
lods
gs
sub
jno
dec
andl
popf
mov
or
xor
insb
ret
iret
outsl
adc
imul
sbb
ror
sbb
daa
jbe
and
add
push
inc
jo
leave
add
xchg
scas
jp
test
pop
pop
push
fdivrl
stc
out
sub
vmovshdup
stos
mov
in
test
dec
adc
xor
lock
xchg
xor
jecxz
push
xchg
xchg
stos
jmp
xor
add
add
mov
mov
push
lret
pop
push
xor
inc
pop
out
loopne
std
push
jp
jecxz
push
mov
lahf
hlt
pop
mov
xchg
adc
pop
xchg
push
and
fs
shl
and
imul
mov
xor
push
mov
mov
pop
jl
std
xchg
pop
pop
sbb
ret
and
out
cld
xchg
stc
mov
push
lret
iret
jb
xor
inc
inc
inc
mov
adc
push
jecxz
hlt
xor
std
and
ss
adc
cld
sbb
jmp
leave
xchg
das
jo
adc
loope
jg
sub
mov
pop
sub
ss
mov
push
pushf
mov
sbb
dec
pop
jg
pop
lahf
mov
sub
xchg
call
aam
call
mov
cs
pop
lahf
adc
rolb
pop
js
sbb
and
repnz
and
dec
test
push
popa
sbb
or
dec
popf
enter
mov
xor
mov
adc
sbb
push
rcl
sbb
sbb
push
lods
test
sub
sbb
push
leave
pusha
popf
dec
pop
ficoml
xchg
ret
aas
in
es
cli
fucomp
movsl
push
sbb
in
jg
ret
add
pop
aas
mov
cmp
mov
mov
mov
sub
inc
sbb
xlat
mov
pop
xchg
fsubrp
ss
mov
cwtl
xor
int
sti
inc
fimull
fcomps
dec
mov
xchg
inc
dec
adc
fxch
sarb
xorb
jnp
inc
addl
add
sti
sub
loopne
jo
negl
pop
adc
js
push
pop
ret
jbe
arpl
aas
push
clc
pop
cmc
jo
add
push
xchg
add
outsl
fstpl
xchg
ljmp
jo
fsubr
sbb
dec
or
dec
sahf
and
push
lahf
icebp
and
int3
inc
lret
push
scas
mov
jne
dec
jns
xchg
cltd
or
push
aaa
push
mov
aas
adc
cmpsl
adc
pop
push
out
adc
fwait
outsb
dec
aaa
in
xchg
mov
ja
push
sbb
sub
rcr
mov
mov
sbb
push
lods
mov
adc
sbb
daa
cmp
jecxz
loop
fwait
jp
loop
loop
add
sti
movsl
lcall
add
mov
mov
int3
lret
push
popf
lods
add
and
mov
je
sub
ljmp
mov
adc
testb
nop
jl
arpl
cwtl
fs
or
mov
jb
jbe
push
sbb
enter
gs
icebp
and
pop
cmpsb
test
dec
mov
lods
mov
lea
and
xchg
xchg
cltd
mov
lds
in
mov
dec
sahf
test
leave
pop
insl
ss
jl
cmpsl
insb
xchg
or
scas
push
fistpl
cmp
push
mov
jge
int
leave
fdivl
dec
sbb
fxch
xor
and
add
insl
lock
mov
sti
push
shll
arpl
jle
and
push
mov
clc
lea
cmp
pop
inc
and
lds
sbb
mov
jle
test
jb
lea
and
xor
insl
dec
loop
int3
add
fcom
rorb
sbb
xor
pop
iret
mov
shr
xchg
daa
cmp
out
push
icebp
fwait
sbb
repnz
int
mov
bound
aam
sahf
add
int3
jge
cwtl
data16
adc
pop
imul
jbe
scas
jbe
mov
pop
pop
xor
in
xor
mov
aam
inc
ss
jp
cwtl
out
insl
or
repnz
hlt
loope
stos
popf
dec
lret
jns
outsb
stos
enter
or
int3
xlat
in
dec
pop
cld
adc
sbb
xor
aaa
shlb
nop
or
rorb
adc
jl
orl
pop
or
jns
filds
adc
je
arpl
pop
hlt
test
into
pop
ret
test
pop
sbb
dec
shrb
adc
pop
out
pusha
rcrl
in
les
mov
out
cwtl
or
adc
outsb
cmp
xlat
add
mov
mov
jno
sub
mov
xlat
or
jl
xchg
mov
mov
repz
lahf
outsb
jb
pusha
inc
fcmovne
sahf
sub
scas
xchg
jnp
mov
dec
xlat
mov
sahf
inc
jmp
aam
xchg
lcall
inc
xor
ljmp
jno
pop
nop
sub
icebp
and
or
sbb
xchg
int
lods
lcall
enter
xor
dec
mov
jmp
adc
sbb
mov
popa
xchg
lahf
sub
xor
cmpsb
xor
inc
and
jb
mov
les
xchg
mov
xor
scas
cmp
aas
adc
cmp
pushf
push
in
cmp
lods
insb
push
mov
pop
inc
pop
outsb
xor
pop
in
push
xchg
lods
push
lea
pop
mov
push
shll
out
fcmovnbe
sahf
push
repnz
push
adc
fidivl
dec
out
gs
jne
fbstp
loop
mov
push
popa
stc
insl
inc
adc
mov
pop
or
enter
sbb
stos
lock
fwait
xchg
adc
jecxz
cmc
lret
mov
mov
fidivrs
shrl
test
movl
sbb
push
dec
ljmp
les
je
cmp
mov
pop
ss
int3
ds
shlb
xchg
or
imul
xchg
int
in
mov
cmp
add
test
shll
and
jbe
cli
cwtl
leave
aad
or
insl
dec
stos
fsubrs
mov
cwtl
cltd
mov
inc
xor
bound
jns
into
xchg
adcb
neg
jno
or
push
jne
jbe
dec
ret
jae
imul
dec
push
cwtl
jecxz
mulb
xor
andb
xchg
mov
mov
jbe
xchg
lret
aad
push
decl
inc
ss
xlat
adc
aas
xor
stos
cmp
insl
insb
jo
and
jp
scas
mov
or
in
jp
add
or
imul
add
inc
dec
pushf
out
out
leave
popl
mov
les
jp
arpl
outsb
push
add
outsb
lds
push
inc
push
orl
lret
mov
data16
es
push
add
xchg
and
inc
cwtl
cmc
push
jle
mov
cltd
shrl
ss
mov
into
jbe
mov
cmc
dec
inc
cmp
call
xchg
dec
push
cs
add
not
xor
cmp
push
jl
popa
jno
ss
mov
pop
xchg
cmp
sub
leave
popa
push
hlt
and
roll
inc
or
lcall
inc
xchg
fsubrs
cmp
jnp
cwtl
test
jmp
aaa
mov
pop
out
scas
enter
into
mov
scas
or
test
jmp
xchg
mov
daa
and
mov
inc
scas
xor
dec
jnp
xchg
sbb
imulb
imul
sbb
mov
dec
mov
or
loope
dec
je
fstps
or
push
and
sub
cmp
addl
inc
or
repz
push
ljmp
pop
or
int3
aaa
negb
mov
mov
cmp
lods
imul
cmp
negb
test
xorb
mov
test
jle
mov
loop
jae
pop
xchg
inc
mov
mov
or
lods
cmp
addr16
push
dec
lret
xor
lock
rolb
stc
mov
fisubl
es
fwait
subb
mov
sbb
lds
sub
adc
sub
inc
lcall
fsub
lea
mov
or
jns
cwtl
and
stc
jno
xchg
ds
sub
sbb
pop
es
dec
clc
fdivrs
sub
mov
and
cltd
fdecstp
scas
dec
lret
or
jge
inc
jo
mov
arpl
imul
dec
inc
ja
mov
sub
movsl
icebp
movsb
adcl
mov
scas
jns
sbb
mov
or
fimull
daa
jge
xlat
pop
sahf
popf
ret
sbb
push
mov
push
call
jge
xchg
out
daa
sbb
mov
shlb
icebp
and
push
gs
pop
rorl
or
nop
dec
adc
push
aas
stc
adc
pop
cli
ss
lods
inc
orb
js
add
adc
stc
mov
xchg
xchg
mov
arpl
fisttps
mov
imul
push
mov
adc
jp
ja
mov
movl
cs
aaa
or
fdiv
out
hlt
fnstsw
inc
movsb
rorl
es
adc
sbb
cltd
cmp
push
rclb
test
jbe
mulb
test
lret
pushf
rcl
dec
les
out
in
hlt
pop
xorb
or
and
enter
rolb
pop
in
fisubl
jb
ljmp
dec
push
shll
out
xchg
jecxz
mov
push
push
mov
push
mov
xchg
mov
dec
pushf
cmpsb
addr16
add
or
dec
push
sbb
pop
jg
xor
cld
push
loop
arpl
fsubr
mov
xchg
fdivl
dec
cmpsb
push
jno
out
ss
bound
cld
test
and
pop
and
ja
mov
daa
jle
aad
jb
jmp
xor
cmp
inc
dec
enter
movsb
xchg
inc
mov
test
inc
out
sahf
sti
ljmp
flds
jl
ret
test
cmpsb
xchg
dec
mov
mov
std
sub
test
roll
imul
out
stos
jp
adc
mov
mov
je
or
leave
test
inc
push
push
aam
into
pop
insl
nop
dec
push
cmp
sbb
popa
push
or
shl
mov
insb
xchg
sub
data16
mov
outsl
sbb
cmp
dec
in
mov
outsl
and
jb
sbb
dec
pop
mov
xchg
enter
cmp
push
iret
sbb
out
xor
insl
je
adc
and
jge
cmpsl
rcll
dec
lods
ds
gs
test
faddl
aas
dec
lea
jae
in
movsb
adc
insb
adc
rolb
push
insb
icebp
call
popf
push
jae
arpl
inc
pushf
fimull
repnz
jg
pop
jp
sbb
dec
in
pop
and
fstp
fistps
push
aaa
jmp
imul
add
pop
stos
jae
sub
repz
jnp
in
addr16
mov
push
je
iret
sti
scas
lock
mov
imul
aaa
pop
sbb
int
jne
sbb
push
or
sbb
or
pop
clc
mov
jle
cmp
xchg
iret
push
lahf
push
mov
cmp
pop
inc
scas
xor
bnd
and
loope
mov
fwait
sahf
idivb
and
clc
mov
insb
jae
fs
inc
ret
aaa
les
mov
fcom
sbb
imulb
or
or
repz
adc
xor
fs
in
cltd
fsubrs
repnz
inc
and
jnp
mov
inc
push
lds
add
mov
inc
fdivr
mov
xchg
fdivr
mov
cwtl
or
pop
inc
inc
jbe
insb
insl
ss
call
mov
mov
sbb
sti
test
push
sbb
xor
mov
int3
jge
stc
cmpsl
sbb
lods
fdivs
push
stos
std
aas
rorb
int
inc
aaa
xchg
cmp
jmp
fimuls
mov
mov
ds
fldcw
es
lret
es
and
aaa
inc
dec
and
lcall
pop
fnstenv
sub
sahf
sbb
loop
loopne
pop
nop
aad
popa
xchg
movsl
push
or
mov
xchg
fwait
ja
mov
mov
das
dec
pushl
sbb
ljmp
insb
stos
lods
imul
push
cmp
insb
adc
lcall
clc
mov
xchg
or
jp
adc
in
inc
out
sbb
ret
ds
mov
mov
hlt
aaa
lcall
dec
stos
inc
add
inc
aaa
clc
inc
xchg
mov
pop
push
add
sub
test
insl
push
cmpsb
dec
xchg
pop
in
sub
jp
pop
out
fcoms
insb
jae
push
cmp
pop
out
xchg
dec
stc
inc
or
test
and
call
xlat
mov
xchg
sbb
mov
sub
add
data16
mov
jp
lret
scas
sub
mov
mov
out
and
dec
test
popa
loopne
cmpsb
cmc
jbe
xor
and
mov
or
lret
test
out
push
aam
push
adc
test
pusha
jl
orb
or
dec
xor
lods
add
sbb
or
jnp
mov
nop
scas
icebp
mov
sbb
sub
sub
cmp
xchg
jb
data16
test
cmp
xchg
imull
mov
fldenv
in
hlt
aas
mov
jae
pusha
and
and
aaa
outsl
xor
sbb
lret
stos
lods
xor
jge
jne
out
xchg
mov
scas
imul
jecxz
repz
fsubp
out
pop
xor
or
or
xor
jmp
out
mov
adc
or
ret
pop
ss
cmp
mov
inc
dec
or
subb
mov
sbb
lods
add
loopne
stos
ss
ja
leave
and
bound
icebp
ljmp
ljmp
mov
mov
in
adc
sub
pop
popa
xor
cs
xor
inc
jge
cmp
xchg
pop
xchg
lods
mov
jae
adc
pusha
aad
mov
cmp
dec
test
jp
pop
mov
cmpsl
idiv
mov
dec
xor
lock
mov
andl
cwtl
scas
dec
add
sub
push
inc
mov
mov
js
je
bound
int3
mov
cli
jno
ds
pusha
xchg
cmp
cmpsl
or
das
sub
and
dec
mov
xchg
arpl
cld
push
lahf
mov
cmpsb
outsl
sahf
test
repz
push
sub
imul
inc
push
scas
int
roll
outsl
sbb
mov
repnz
jl
fistpll
jp
mov
sub
out
sub
or
shlb
imul
pop
in
cmpsb
jecxz
add
stos
xchg
cmp
jbe
pop
scas
stc
dec
cli
xchg
imul
into
movsl
xchg
fwait
pop
mov
and
inc
pop
mov
adc
jb
push
push
pop
mov
mov
lret
xchg
jae
adc
loopne
mov
repz
das
jg
and
add
ja
lods
mov
inc
outsl
and
mov
test
outsl
fs
xchg
das
enter
sub
lods
pop
sub
cmp
jle
sub
add
hlt
repz
daa
ss
test
iret
sub
adc
in
jb
pop
add
push
fnstenv
sub
cmc
adc
call
lock
inc
cs
mov
mov
pop
or
jnp
fs
lret
into
mov
inc
ret
rclb
shll
xchg
xor
leave
lds
adc
shrl
mov
repz
insb
xchg
rcrl
test
int
mov
aad
dec
adc
into
mov
cmpsl
orb
lcall
shrb
pop
dec
iret
push
jae
rorl
mov
mov
pushf
mov
and
mov
fsub
push
jmp
mov
scas
mov
inc
enter
adc
dec
clc
sti
test
mov
stc
or
push
and
jne
inc
stos
pop
ds
out
xor
jle
out
jbe
jmp
dec
jecxz
pop
mov
iret
jns
shll
ret
test
jne
push
iret
cmp
mov
fisttpll
in
fnstenv
pop
ds
or
xchg
push
cmpsb
adc
subb
mov
mov
out
inc
int
sbb
out
mov
adc
cmpb
mov
decl
loopne
push
add
mov
shl
fistpl
inc
lods
mov
andl
dec
mov
jb
mov
jge
repnz
push
dec
cmp
xor
addr16
or
cmpsb
pop
cmpsb
adc
inc
dec
mov
rorb
mov
test
push
scas
pop
shl
mov
and
or
adc
out
loopne
pop
jmp
dec
mov
loope
fldt
fcoml
ficomps
int
pop
pop
dec
push
js
sete
clc
lret
lock
fildl
pop
test
mov
subl
xor
ret
cli
popf
push
push
hlt
mov
adc
jmp
mov
jnp
xlat
inc
orl
idivb
xor
das
xor
jnp
mov
mov
sub
in
or
call
pushf
shrb
or
mov
and
outsb
xchg
lret
sub
inc
sbb
mov
or
xchg
out
scas
lock
mov
in
mov
or
pusha
or
mov
xchg
test
pop
xchg
jns
pop
push
and
movsb
cmp
mov
call
imul
lods
aam
cmp
xchg
dec
es
stc
cmpl
cwtl
daa
das
mov
jbe
push
into
adc
lret
lock
sbb
inc
imul
dec
and
mov
inc
or
mov
xchg
repz
andl
cld
shll
lds
movsb
cli
out
sbb
mov
add
adc
dec
js
jg
mov
movd
and
pusha
mov
in
jg
dec
mov
sahf
aam
sub
or
mov
mov
aam
dec
or
data16
add
push
in
out
cmp
push
and
mov
pop
sub
mov
xchg
pusha
subl
cmp
fildll
mov
cli
xor
pop
mov
jge
inc
add
lods
repnz
inc
test
jecxz
mov
inc
stos
fiadds
mov
orb
push
push
sbb
out
fcmovbe
dec
dec
add
mov
mov
pusha
popf
hlt
pushf
cmpb
ja
enter
lea
and
into
cmp
fiaddl
stos
scas
leave
xchg
cmpl
lods
decl
nop
or
xlat
repnz
and
cmp
jp
aam
sub
pop
jecxz
mov
mov
adc
icebp
jae
adc
cmpsb
adc
jno
mov
stos
incb
out
scas
xor
in
add
xor
int3
rcrl
inc
insb
sub
inc
cmc
sti
or
jl
inc
add
dec
movsb
cmc
push
ficomps
imul
push
pop
bound
mov
fadds
fimull
adc
and
sbb
cmp
nop
stos
push
jmp
outsb
lods
in
pusha
dec
lods
rcrb
dec
dec
imul
das
popa
or
insb
cmp
cmp
inc
pop
shr
inc
sub
sub
out
xchg
pushf
pop
imul
dec
outsl
stos
add
mov
xor
ja
pop
fs
pop
gs
outsl
mov
mov
cmp
repnz
lods
je
pushf
pop
mov
jp
aam
xchg
xchg
int
xor
sbb
sbb
cmp
pop
inc
icebp
push
pop
xchg
push
into
xchg
add
sub
mov
sbb
fyl2x
lea
movsl
and
addr16
sahf
pushf
pop
or
pop
test
ret
lret
and
ss
scas
sub
out
ret
pop
inc
mov
movsb
idivl
xor
es
imul
mov
shll
jle
mov
mov
aaa
test
cmp
fisttps
lahf
mov
xor
popa
pusha
mov
push
loopne
sub
subb
inc
jmp
or
stc
pop
js
sbb
cmpsb
push
mov
lcall
cmp
xorb
jno
in
out
jne
out
call
adc
jne
add
push
add
mov
jns
xchg
ljmp
rol
imul
jmp
inc
cmp
add
mov
adc
mov
adcl
jp
sbb
insb
mov
jg
sbb
cltd
xchg
or
les
xor
push
cmpsb
in
push
lds
sub
cmc
pushf
sbb
into
xlat
pusha
push
xor
dec
mulb
adc
fcompl
cmp
decl
lcall
loope
xchg
rol
dec
mov
add
mov
popa
cli
scas
cmp
loope
adc
xchg
fstp
ftst
cmpsl
aad
dec
aam
jnp
and
out
scas
or
ljmp
inc
push
mov
xor
add
mov
jno
es
mov
fucom
lock
les
fs
xchg
aam
scas
mov
sbb
mov
inc
cwtl
add
sub
cs
loope
xor
push
cs
popf
mov
jns
push
add
imul
inc
pop
das
push
lods
inc
dec
std
sbb
iret
or
xchg
sub
mov
or
in
or
in
leave
xchg
fdivr
pop
pop
jo
xchg
xchg
push
lcall
push
mov
mov
push
mov
sub
push
out
sbb
add
sub
and
or
int
xchg
stos
roll
sbb
dec
jg
pop
rcrl
out
mov
mov
xor
out
mov
adc
in
adc
out
or
pop
mov
xlat
sub
insl
inc
aam
dec
mov
inc
scas
dec
loop
imul
popf
xlat
bnd
cltd
cmc
xchg
inc
pop
popa
clc
mov
fsubp
lds
rcll
loope
stc
cltd
testl
push
xchg
insl
sub
insb
xchg
insb
lret
in
pop
test
sub
jl
push
dec
and
mov
jg
push
cltd
dec
sub
jge
jns
jnp
sbbb
or
cmpsb
or
outsb
or
lods
stc
xchg
cmp
sub
test
push
jmp
xor
mov
inc
cmp
jns
stos
pop
test
scas
into
aaa
test
bound
rorl
imul
xor
push
cmp
and
xchg
mov
sahf
dec
xchg
xor
int3
inc
pop
or
adc
inc
popf
xor
or
mov
sahf
pop
mov
test
inc
push
inc
sti
add
mov
push
cltd
mov
bound
loope
movsb
out
aad
out
int
dec
cmpsl
test
ror
pop
jb
add
push
imul
pushf
idivb
mov
xchg
dec
icebp
cld
ja
dec
cli
shlb
jp
mov
sbb
mov
dec
pop
jp
enter
rcl
stos
xor
xor
sbb
addr16
mov
out
cmovnp
ret
sub
mov
rcl
test
bound
xchg
jmp
inc
cmc
lret
push
adc
mov
xchg
shl
cmpsb
jns
lret
lahf
cld
in
mov
adc
insb
cmc
lcall
scas
fwait
lods
imul
ja
adc
insb
mov
mov
into
mov
inc
mov
cmpl
xor
jmp
bound
xor
jg
dec
push
fmuls
or
dec
mov
movsl
push
jb
out
mov
int
in
dec
imul
lock
cmp
test
inc
xchg
jg
or
fstl
pop
or
push
orb
sub
inc
dec
cmpsb
sbb
and
pop
movl
sldt
pop
in
push
sahf
aas
fdivrs
adc
sub
jnp
fwait
sub
lods
out
cli
pop
push
jmp
dec
or
jecxz
xchg
sbb
dec
jp
test
scas
in
mov
jno
lret
icebp
cmp
mov
sarl
sahf
mov
push
movsl
sbb
push
fbstp
mov
in
push
pop
loop
out
sti
shrl
std
shlb
pop
sti
sbb
adc
push
pop
pop
or
dec
out
xchg
mov
negb
dec
push
xchg
and
lds
sub
fwait
lods
xchg
xor
add
xchg
loop
insb
xchg
pop
test
add
push
sub
push
or
sbb
sbb
pop
test
daa
mov
or
cli
insl
mov
push
popf
jmp
or
push
and
aad
hlt
mov
pop
dec
adc
fidivl
psrad
cmp
iret
sahf
xlat
ljmp
pop
aam
gs
aas
je
andl
addb
mov
test
fstl
loop
std
cmp
sbb
jnp
inc
icebp
aas
insb
les
mov
ds
lret
out
pop
enter
lea
jno
testb
in
fidivl
mov
std
jns
mov
xor
jne
jg
je
pushf
add
add
xchg
out
sub
or
xchg
jae
enter
fs
hlt
push
mov
imul
movsb
mov
ret
ret
in
test
movb
std
popf
fcompl
cmp
dec
push
inc
notb
mov
adc
mov
imul
bnd
and
sbb
std
add
inc
pop
mov
pop
rcrb
pop
push
lcall
xor
lods
pop
addr16
addr16
stos
push
bswap
mov
daa
in
sub
addr16
pop
out
and
mov
mov
sub
mulb
repnz
out
pop
mov
cmp
cmpsb
push
out
int
dec
jle
sbb
iret
jbe
sub
cmp
inc
test
push
push
aas
lds
ficompl
adc
into
push
mov
adc
xchg
lods
dec
pop
pop
cld
arpl
sbb
xor
sahf
dec
push
push
jno
js
clc
jmp
push
pop
call
cmpsb
dec
fwait
arpl
adc
mov
rol
popf
sti
inc
popa
mov
or
dec
and
mov
and
adc
mov
xchg
pop
inc
imul
loope
adc
jmp
dec
scas
xchg
mov
sbb
aad
ret
out
mov
pop
or
push
ljmp
test
ret
inc
loope
mov
jmp
in
clc
cmp
mov
dec
xchg
aam
pusha
and
jnp
adc
or
jbe
insb
lock
fcmovu
jns
outsb
mov
sbb
rorl
or
in
pop
adc
adc
je
mov
in
xchg
ss
ljmp
and
cmp
mov
cs
mov
pop
lock
xor
ret
sbb
aaa
lret
shr
leave
decb
cli
shrb
push
push
lret
movsb
xchg
rorb
frstor
std
cmp
in
lea
cwtl
inc
xchg
into
aad
data16
sbb
fs
lea
popa
inc
xchg
cld
cmp
pop
sbb
out
xchg
std
sub
mov
xor
enter
jle
ds
test
ljmp
es
adc
in
rol
xchg
push
mov
lret
call
jle
mov
add
ljmp
imul
push
es
movsb
xchg
and
out
pop
es
dec
pop
xorl
push
test
dec
sub
mov
push
or
jb
cmp
xor
and
or
clc
jns
mov
into
lea
aad
mov
pushf
out
mov
int
call
mov
dec
dec
sbb
mov
xor
pop
ljmp
jnp
je
xor
aam
insl
xchg
std
cwtl
xchg
sbb
pushf
pusha
xlat
cltd
sbb
inc
rcrb
adc
pushf
es
xchg
and
insl
popa
cld
xor
repnz
lahf
pop
in
push
arpl
in
sti
shll
out
jnp
sbb
xor
idivl
fnstenv
movsb
aas
cmpsb
in
cmpsb
dec
lods
loopne
pcmpgtb
iret
mov
adc
cmp
fs
cmp
movsl
push
repz
clc
hlt
inc
stc
inc
mov
out
in
data16
and
jge
scas
cld
mov
cmpsl
sbb
lahf
leave
popa
add
dec
cmp
fsubs
ja
mov
sub
jb
test
js
or
fs
ror
or
test
out
xor
test
pop
xor
loopne
cmp
dec
xchg
sub
test
fs
mov
cli
pop
inc
pop
ret
nop
mov
dec
or
jge
mov
into
mov
mov
push
dec
ret
pop
inc
ret
fbstp
push
push
hlt
xor
test
mov
div
ret
mov
aaa
cmp
xor
dec
scas
dec
lcall
add
push
mov
xchg
mov
sbb
in
imul
xchg
aaa
mov
xchg
add
js
enter
add
xchg
and
mul
push
dec
add
pushf
jmp
loopne
out
cmp
test
loope
dec
ror
jp
cmpsb
imul
mov
add
sbb
mov
mov
mov
movsl
xlat
mov
clc
fcmovnu
repz
leave
mov
cmpsl
out
cmp
adc
fisubs
lahf
mov
fisubs
jnp
fnstsw
mov
aaa
jbe
xchg
je
int
jae
rclb
inc
jo
cs
into
loop
repnz
mov
rcrb
push
imul
sub
xchg
mov
or
mov
aas
in
das
int3
lods
filds
mov
or
add
lea
ja
fistps
xchg
loopne
loopne
stc
or
inc
int3
mov
pop
jno
mov
pop
adc
fld
aas
dec
cmpsl
stos
ja
pop
cmpsb
icebp
pop
inc
jge
dec
ret
adc
roll
lret
mov
pushf
mov
mov
mov
repz
dec
clc
push
les
ja
push
sti
dec
pop
imul
sbb
adc
addr16
test
mov
jg
insb
add
cltd
sbbb
loope
fsubrs
sarb
ret
mov
out
test
jno
aaa
popa
push
push
inc
icebp
lods
pop
sub
int
mov
ss
sbb
scas
popa
das
mov
xor
daa
xchg
and
mov
clc
out
mov
xchg
repnz
daa
sbbb
test
aaa
gs
inc
inc
ss
jo
jg
lret
test
jmp
leave
push
mov
xchg
lock
xor
sbb
cmovne
inc
add
test
shll
ljmp
pop
mov
dec
inc
inc
mov
pop
stc
iret
push
and
and
fistps
adc
pop
cmp
mov
or
into
std
xor
sbb
mov
inc
cmp
xchg
xor
xor
mov
adc
jo
jge
xchg
data16
inc
cwtl
testb
std
popf
adc
icebp
aas
enter
ljmp
loopne
stc
pop
push
or
decb
int3
cmp
pop
xor
pop
sub
mov
dec
test
inc
or
in
and
icebp
dec
inc
push
mov
cli
sbb
mov
jmp
or
mov
sbb
inc
push
adc
dec
test
push
and
push
cs
xchg
or
insb
mov
lcall
adc
sbb
stos
fmul
or
add
daa
jmp
popa
add
jb
inc
mov
sub
pop
mov
jg
scas
jle
cmpsl
cmp
inc
pop
xor
vpmacsdql
add
pop
add
stc
mov
sbb
loopne
int
xor
leave
jo
and
or
out
xor
movsl
sti
pop
cltd
clc
jae
insl
dec
rcrl
sarl
push
inc
movsb
ja
repz
xchg
push
subb
dec
stos
lret
adc
jmp
pusha
xchg
and
mov
lods
add
pop
icebp
mov
xchg
in
mov
adc
or
negb
and
addr16
sub
cmp
xchg
mov
push
mov
mov
xchg
and
adc
pop
imull
int
pop
push
and
nop
or
fdivrp
popf
into
test
xor
pop
das
dec
push
jmp
cmpsl
sub
xchg
inc
aad
pop
hlt
inc
jnp
icebp
jge
and
adc
jbe
cmp
pop
dec
mov
adcl
mov
stc
xor
sarl
pop
lcall
xor
ror
or
insl
js
cmpsl
loop
jg
aaa
fildl
sahf
mov
iret
enter
leave
outsb
inc
cmp
and
push
cmp
enter
jmp
in
rorb
pop
repz
insb
lods
sub
insl
addb
sub
push
mov
push
shll
push
cmc
adc
xchg
add
pop
out
int3
mov
lahf
cs
lods
arpl
sub
mov
sub
rcll
iret
in
int3
js
add
inc
cltd
jg
xchg
push
cmp
int3
cwtl
out
inc
mov
mov
fs
mov
movsl
mov
test
and
in
jae
stc
test
testb
cmpsl
mov
xchg
xchg
xchg
mov
jmp
jge
xor
cmp
sub
aam
cmp
xchg
sahf
sti
loopne
in
pop
aam
fldt
pop
cli
or
xlat
xchg
ret
sysenter
dec
add
loope
aas
sti
std
mov
pop
in
add
dec
sbb
jbe
popa
push
out
movb
mov
mov
les
push
mov
inc
lahf
mov
lret
and
mov
filds
and
dec
mov
inc
ljmp
insl
xchg
push
sbb
jle
dec
cmpsb
inc
or
clc
adc
out
push
hlt
add
mov
dec
xor
lods
hlt
add
imul
xchg
mov
xchg
aas
test
repz
jp
mov
pop
imul
mov
jns
add
mov
and
inc
aam
sub
xchg
call
popa
jno
sbb
jno
in
adc
and
cmp
add
dec
icebp
out
adc
das
cmp
ja
das
lds
nop
outsb
loope
bound
dec
jl
movsb
mov
aam
cmp
jge
cltd
outsl
cld
push
test
stos
loopne
scas
into
add
dec
mov
cmc
pop
out
sub
mov
test
inc
mov
sub
mov
icebp
lock
test
dec
xchg
scas
sbb
icebp
aad
mov
dec
xor
xor
push
in
fbstp
adc
lods
fsubrs
or
out
call
adc
daa
xchg
mov
in
js
jb
jb
jecxz
in
lret
fst
icebp
mov
ss
cld
callw
xor
xor
push
sub
aas
test
sti
loopne
mov
mov
dec
mov
movsl
int
dec
push
lods
cmpl
add
pop
mov
mov
pop
je
or
pop
loopne
and
inc
adc
lods
dec
loop
cmp
imul
xchg
rcr
push
inc
jbe
mov
cld
jno
in
inc
dec
inc
adc
aam
or
ss
inc
cmp
xor
adc
leave
xor
mov
call
lods
es
add
mov
xchg
jb
adc
jmp
jbe
jnp
dec
xor
cmp
cmpsl
in
mov
jno
jmp
jge
adc
out
pop
push
push
xchg
insl
jne
or
aad
inc
iret
pusha
out
xor
arpl
das
cmp
push
repnz
int3
cmp
outsl
std
test
rcrb
add
adc
cli
cmp
andb
ss
cmp
xor
xchg
mull
stc
inc
clc
push
stos
dec
add
or
dec
jae
add
or
sbb
or
inc
pop
mov
dec
lahf
pushf
add
push
dec
test
jp
cwtl
call
pop
sub
or
xchg
push
in
out
lds
mov
aad
pop
shrl
add
sub
pop
insb
lret
lds
mov
mov
mov
std
pop
les
outsl
lock
jnp
imul
push
adc
out
lock
jbe
out
xor
dec
sbb
or
cmp
into
int3
loopne
imul
mov
jle
cmp
scas
cmpl
pop
or
dec
scas
inc
mov
xchg
xchg
insl
sarl
fdivl
jle
jo
mov
mov
aam
pop
shll
pop
xchg
add
jne
add
pop
sbb
mov
and
pushf
xchg
pop
loope
loopne
cltd
xchg
mov
dec
out
sbb
xor
jmp
out
cmpsl
popf
dec
out
jne
dec
or
adc
xorps
pop
inc
popa
sbb
inc
rcl
test
iret
fdivrs
adc
clc
lds
movsb
or
xlat
cmp
sahf
xorl
cmp
in
xchg
test
mov
fwait
out
sbbl
jmp
sbb
es
fcmovnbe
add
push
add
scas
or
dec
inc
xor
pop
jge
mov
jae
cli
dec
sbb
cmpsb
mov
or
push
mov
aas
cmp
das
shlb
sti
ljmp
fdivrl
outsl
lock
xor
pop
push
lahf
insl
pusha
ja
jp
lret
dec
aaa
push
and
lahf
cmpsb
jne
dec
les
and
mov
dec
enter
xchg
jp
or
cli
xchg
dec
pop
sub
pop
mov
pusha
shlb
jg
mov
icebp
sbb
push
pushf
pop
adc
add
jno
mov
test
pop
cmp
lods
adc
sbb
jl
pop
movsb
out
mov
fwait
mov
push
mov
loop
stc
mov
pop
lret
mov
cwtl
dec
pop
xor
cwtl
mov
in
sub
adc
call
mov
mov
pushf
fcmovu
sbb
sbb
inc
jb
mov
out
mov
jae
test
cmp
clc
aam
iret
jmp
sub
xor
mov
dec
xor
pop
ret
push
adc
out
jne
cld
sbb
xorb
mov
bound
dec
data16
out
aad
ret
imul
dec
outsl
inc
fildll
xchg
jecxz
in
stos
adc
loopne
stos
pop
cmp
dec
xchg
sbb
add
add
pop
aas
insb
add
inc
dec
mov
jnp
ds
loopne
and
sbb
cmp
jnp
stc
mov
lcall
cmpsb
pushf
pop
mov
xlat
inc
cwtl
stos
ret
inc
lea
sub
jnp
out
lea
lcall
push
loopne
add
jb
sub
outsb
cltd
imul
fdivrs
andb
xchg
xchg
stc
mov
ret
add
sbb
adc
dec
rcrb
andl
fsub
das
aaa
in
les
ret
dec
mov
mov
jp
aam
sub
out
lahf
fiaddl
xchg
test
jmp
lea
dec
js
jmp
repnz
loopne
lret
push
in
xlat
aas
jns
ret
push
cmp
repz
test
nop
mov
fucomi
mov
rorb
test
fs
mov
push
push
and
xchg
inc
outsb
adc
scas
or
aas
sub
mov
fcmovbe
mov
or
sub
mov
pop
jg
addr16
lods
aas
xor
mov
adc
xchg
push
jne
ret
pop
repz
cli
jbe
sbbl
leave
sub
adc
das
and
pop
repnz
jbe
or
push
xchg
inc
cmp
je
pop
daa
mov
mov
pop
ds
sub
sbb
mov
jp
add
xchg
sub
out
inc
enter
inc
sbb
jbe
inc
out
out
movsl
movl
add
es
dec
xchg
btr
lods
scas
in
pop
loopne
xor
dec
lret
icebp
mov
mov
and
mov
xor
stos
or
in
das
xchg
shll
cltd
fbld
push
shll
and
adc
enter
subb
addr16
bswap
and
sbb
ss
imul
cmp
je,pn
pop
int
nop
stc
es
jecxz
hlt
scas
xlat
subb
dec
out
or
mov
add
push
movsb
jge
jnp
inc
leave
jno
xchg
xlat
orl
loope
pusha
mov
cmp
int
into
adc
into
and
lds
or
sbb
hlt
mov
or
inc
sbb
sbb
sub
shl
adc
loope
pop
pop
lret
push
test
push
imul
pop
mov
test
fwait
ljmp
fisttpll
es
sbb
mov
out
or
mov
xchg
test
and
test
xchg
insb
stos
sahf
pop
and
pop
and
int3
lret
aam
xchg
jbe
rol
xorl
adc
cltd
cmp
xor
push
jp
jle
divl
out
aam
xchg
lahf
addr16
test
loope
in
ficoml
fwait
jno
pop
mov
jne
test
dec
ljmp
ds
loope
ljmp
insl
cmp
dec
pop
push
adcl
pop
fdivrp
pop
push
push
mov
adc
or
dec
mov
sub
ja
lods
iret
inc
jno
cwtl
jp
or
fistpl
sbb
fdiv
aad
lea
aad
hlt
lods
mov
in
aam
shll
mov
sub
sbb
in
imul
cltd
sarl
sbb
call
pop
pop
push
jns
xchg
or
mov
cmp
movsl
fdivrl
and
add
movl
mov
int3
addb
iret
popa
mov
xchg
xor
push
jecxz
sbb
je
shr
mov
pop
int3
leave
push
pushf
in
in
dec
pusha
scas
out
inc
jae
out
cmp
stos
sti
lahf
xlat
mov
out
imull
inc
jecxz
clc
fldl
jne
ds
ficoml
hlt
insb
imul
xchg
es
mov
push
in
xchg
adc
mov
cmc
sub
les
xor
xor
stos
movsb
sub
into
pop
pop
xor
mov
mov
pop
fs
add
adc
scas
or
rorb
mov
sub
push
push
mov
dec
sbb
mov
push
sub
in
push
das
cmp
xchg
shll
jge
dec
imul
cld
cwtl
pop
inc
pushf
shrl
pop
iret
cmp
ds
test
sub
mov
and
push
ret
add
test
sbb
inc
aam
adc
dec
xchg
add
and
xor
push
lahf
sub
arpl
mov
xchg
out
addb
aas
inc
jecxz
mov
adc
or
jb
hlt
adc
mov
cld
int
call
adc
xor
in
cmpsl
into
scas
sub
xor
cmpsb
xchg
rol
lret
jle
jo
subb
dec
mov
cmp
xchg
add
outsb
adc
mov
stos
fs
adc
jmp
cmp
loopne
push
pop
std
fsubrp
stc
sbb
aad
int3
test
mov
leave
sub
mov
lret
shll
xchg
add
aaa
movsl
xchg
push
mov
adc
fldl
or
out
sub
mov
insl
or
push
insl
and
mov
sbb
test
jne
add
adc
mov
pusha
lret
pop
daa
add
sub
cmp
add
enter
dec
push
xor
pop
mov
push
loope
fcompl
mov
cmp
add
pop
or
mov
xor
orb
shlb
lret
fwait
add
jecxz
push
repz
jle
cmp
sub
bound
outsl
aam
inc
imul
lcall
stos
sub
jecxz
dec
adcl
bound
cwtl
dec
pop
test
popf
out
jns,pn
lret
push
cmp
fldt
fldt
jmp
out
add
icebp
inc
lods
push
push
ljmp
jns
adc
xchg
jb
pop
fisubs
lods
mov
test
aaa
subb
jle
cmp
into
jecxz
xor
xchg
jg
arpl
imul
out
mov
push
adc
pusha
push
and
inc
int3
in
dec
repz
les
in
sbb
mov
int
dec
loope
adc
jge
jmp
xor
or
in
ljmp
fsts
out
fidivl
ret
and
mov
adc
mov
out
xor
or
add
adc
add
xlat
jp
pop
jbe
mov
mov
or
lahf
clc
xchg
testl
enter
push
adc
push
fdivr
loopne
adc
push
js
mov
int3
andl
rorb
sarl
fistps
js
inc
cmp
jbe
and
push
sar
xor
outsl
fmulp
sub
or
inc
cmp
stos
sub
loopne
adc
hlt
mov
cmp
outsl
sbb
inc
pusha
push
cli
cld
jecxz
inc
xchg
pop
jl
push
lea
jge
fmull
int
inc
scas
shl
je
push
test
popa
jg
insb
ja
push
sbb
cmp
sbb
and
xor
dec
sub
popa
fcmovu
mov
cmp
cwtl
icebp
mov
daa
fstpt
mov
pop
andb
mov
stos
mov
fisubs
pop
or
rcll
es
sub
fwait
add
xor
aam
cmp
dec
and
dec
jo
xchg
retw
add
mov
xchg
inc
inc
mov
mov
ret
push
jp
outsb
adcl
mov
std
sub
inc
fadds
or
or
sbb
cmp
mov
add
inc
xchg
xor
in
cmpsb
gs
scas
sbb
cmp
pop
jl
pop
mov
frstor
pop
movsl
out
mov
out
lahf
mov
ret
fwait
hlt
sub
push
lds
cmp
pop
xor
out
outsl
ret
scas
ds
mov
jns
jg
jp
mov
icebp
push
sbb
mov
mov
sbb
testb
movsl
fldenv
jmp
imulb
jecxz
fs
adc
xor
jb
push
xchg
fisttpl
jl
jb
mov
xor
hlt
mov
mov
sbb
cltd
es
jmp
add
js
ja
imul
test
mov
lret
add
xor
repnz
jae
jge
pop
mov
in
sahf
jle
sahf
jno
popa
or
and
cli
mov
lods
push
dec
lods
pop
mov
or
push
stos
int3
leave
lods
leave
insl
jl
or
lret
dec
pop
mov
andl
in
add
mov
push
jae
sub
push
mov
and
and
out
mov
sahf
ds
test
push
cmp
ja
sub
test
stc
cmpsb
int3
xchg
aas
xor
push
jge
fstpl
pop
adc
lcall
and
nop
das
outsl
jg
fnstcw
aad
sbb
out
fwait
dec
loopne
cmc
leave
sbb
shll
add
rolb
ret
cmc
ja
mov
stc
inc
sbb
aad
test
lods
pop
push
xor
jmp
pop
dec
stos
lret
std
inc
xchg
cltd
add
jecxz
inc
push
aaa
test
jl
or
pop
adc
jno
fistpll
cwtl
xchg
sub
in
jmp
movl
ficoml
aam
mov
scas
iret
xchg
cltd
push
or
adc
adc
fsubrl
jo
dec
loope,pn
fwait
fwait
jnp
push
or
fimuls
cmp
jne
jne
loope
lcall
cwtl
mov
outsl
ds
and
or
mov
or
sub
cmc
mov
orl
xchg
es
pop
stc
mov
push
dec
push
adc
mov
cmc
inc
mov
in
js
aas
ss
mov
mov
push
dec
scas
cltd
fidivl
jp
push
and
or
cmp
pop
cmp
cmp
fwait
jge
inc
mov
push
imul
mov
push
xor
inc
mov
adc
test
and
rcr
adc
in
insl
popa
outsb
lcall
cmp
push
xchg
sbb
fs
fistpll
lods
sti
adc
xchg
movsb
sub
cmp
test
sbb
or
xor
sub
cld
pop
hlt
xchg
pop
mov
jecxz
add
jle
aad
jnp
lahf
jo
pop
mov
aad
xchg
js
iret
insb
pop
mov
adc
and
and
jb
mov
mov
mov
jge
inc
ds
stos
lea
int3
push
mov
push
push
and
cmp
sbb
jns
sub
cltd
les
ss
stos
mov
dec
cmp
cmp
push
stc
mov
push
scas
pminub
inc
mov
aam
xor
push
es
std
out
out
mov
shlb
hlt
mov
shlb
in
inc
lock
jp
cmp
adc
jns
arpl
push
pop
das
push
stos
jle
movsl
mov
and
adc
std
cmp
ficoml
dec
fldcw
icebp
sub
xchg
in
mov
mov
push
mov
sub
and
cmp
mov
xchg
mov
push
adc
imul
dec
mov
xchg
pop
clc
mulb
cmp
mov
stos
or
and
jo
nop
sub
xchg
xchg
push
gs
xchg
jmp
leave
lods
mov
mov
jo
mov
loopne
or
xchg
and
out
nop
mov
hlt
leave
push
fidivl
jecxz
faddl
cmpsb
int
jmp
loopne
or
cmp
jae
pop
stc
jns
jmp
dec
mov
lahf
or
pop
loopne
ds
xlat
pop
sub
jg
sbb
jecxz
jne
in
xchg
add
and
pop
lcall
cwtl
jbe
into
mov
addl
popf
mov
into
es
mov
jnp
das
mov
maskmovq
idivl
int3
or
jo
in
mov
mov
inc
outsb
imul
push
pop
cmp
dec
inc
clc
scas
mov
jbe
insl
jae
push
sbb
inc
sbb
jno
outsb
pop
in
mov
shl
sbb
mov
std
ss
fldt
ret
cltd
mov
or
xchg
imul
jae
dec
test
stos
mov
in
adc
imul
lcall
inc
scas
je
mov
pop
and
dec
dec
add
sbb
mov
add
fcoml
aad
lahf
rorl
cltd
jp
mov
fwait
arpl
negb
jbe
jge
sbb
fstpl
xlat
push
sub
adcl
mov
sbb
cltd
dec
das
add
jo
pop
rolb
add
pop
or
imul
sub
pop
hlt
ja
aad
ffree
mov
stos
fbstp
mov
addr16
lcall
jae
jg
add
into
mov
sbb
aaa
std
outsb
add
fs
jae
popl
cli
lods
mov
mull
fsubs
adc
pop
out
push
mov
mov
and
pop
jo
sub
xor
or
mov
pop
bnd
pop
jle
cmp
lock
lret
pop
jl
cmp
xor
jmp
adc
xor
jg
jbe
test
mov
dec
ljmp
out
int
adc
sbb
fcmovnu
add
je
scas
hlt
or
push
jno
loope
jmp
scas
mov
insl
inc
inc
dec
mov
sub
mov
scas
mov
nop
inc
iret
add
jge
push
fsubr
mov
sbbb
pusha
fiaddl
and
es
nop
mov
and
clc
ds
sti
mov
shl
insb
lret
mov
pop
clc
cmp
mov
and
fcoms
sub
lret
or
orl
mov
orb
push
mov
mov
cmp
fs
pop
pop
clc
cmp
fcmove
adc
xor
sbb
arpl
daa
lret
xchg
mov
xor
jbe
inc
out
and
jae
add
scas
inc
push
mov
fcomps
insl
stc
popf
jno
fdivs
mov
repnz
and
or
js
mov
jge
loope
imul
pop
in
arpl
fwait
pop
xor
ja
sbb
in
pop
imul
mov
pusha
out
push
sbb
repnz
pushw
mov
mov
and
jns
xchg
jo
and
xchg
cmp
movsl
pop
pop
push
add
dec
dec
outsb
cld
clc
xor
dec
lods
xchg
repz
and
pop
hlt
lea
adc
and
inc
lea
shlb
xor
stos
or
push
fisttpl
jle
insb
cmp
es
jge
fdivrl
add
lahf
mov
sbb
or
shlb
ja
cmc
jns
fs
mov
int3
je
movsb
mov
jns
mov
hlt
push
addb
add
inc
cmpsb
lods
pop
push
in
sbb
fs
vmovaps
mov
and
jbe
lea
or
sub
push
dec
andb
sti
popf
aad
sarb
das
std
fbstp
add
dec
mov
cmpsb
push
dec
adc
xchg
scas
mov
mov
xchg
pop
hlt
xlat
out
int3
lea
pop
mov
mov
sub
cld
out
lds
je
cmp
mov
pop
out
xchg
jns
test
xchg
std
enter
test
cmp
das
jl
lods
push
rolb
add
daa
imull
lret
and
inc
dec
sarl
pop
jo
mov
jno
push
inc
push
dec
inc
inc
repnz
pop
sar
adc
loop
cli
pop
mov
imul
in
mov
sub
and
jecxz
jae
js
mov
lods
dec
sub
jb
add
cmp
pop
call
adc
xor
cmpsl
negb
jnp
popf
int3
addr16
inc
xchg
ret
push
inc
xor
into
pop
popf
test
xor
push
and
jp
inc
and
aam
outsb
sti
cmp
adc
mov
add
dec
xchg
jg
fwait
int
idivl
scas
icebp
xor
test
mov
jnp
decb
mov
sub
jne
jne
mov
pop
jl
stos
push
xor
pop
or
fstps
rolb
jg
sub
frstor
stos
pop
dec
mov
pop
lret
dec
hlt
cmp
adc
sub
sub
xchg
cli
fisttpll
sbb
push
and
mov
dec
aas
movsb
xor
mov
daa
lret
jae
xor
sbb
das
inc
push
test
in
in
bound
dec
or
outsb
xchg
sub
cmp
stos
std
cmp
fwait
mov
adc
jns
jo
scas
ss
jg
adc
dec
loope
jnp
cmpsb
xor
loopne
addr16
daa
adc
push
popf
mov
push
call
stc
scas
pop
push
and
xlat
ljmp
in
xchg
in
mov
adc
mov
jmp
mov
mov
and
aaa
out
and
jle
in
mov
push
pop
cli
shl
mov
mov
testb
aad
insl
in
pop
and
xchg
pop
xor
rol
adcl
xor
inc
add
sub
insl
pusha
enter
push
mov
adc
outsb
jle
mov
mov
pop
imul
mov
cmpsb
mov
xor
in
sarl
dec
popl
mov
arpl
adc
cmp
gs
or
add
mov
loop
mov
inc
rol
cs
lahf
jo
fbld
nop
mov
push
imul
mov
out
mov
dec
mov
pop
or
sbb
out
pusha
addb
scas
sub
int3
jne
lea
pop
inc
sbb
daa
test
addr16
push
sub
sub
sahf
jae
mov
inc
test
fs
jmp
cmp
cmp
mov
lds
fcompl
and
pop
jecxz
lret
mov
inc
jl
and
adc
add
inc
jbe
sbbb
inc
jne
adc
and
into
ficompl
pop
inc
inc
in
mov
jns
push
xchg
std
pop
dec
jno
int
and
mov
push
popl
lret
push
aad
test
push
adcb
or
inc
pop
mov
pushf
dec
dec
jno
ss
mov
inc
rcll
inc
push
nop
sarb
mov
aad
jbe
jae
jmp
loope
jmp
lock
scas
ficoms
push
cmpsb
sub
add
xchg
adc
mov
dec
lret
add
out
mov
call
aad
fists
mov
loope
movsl
xchg
inc
imulb
jo
ss
ret
ret
pop
lahf
gs
dec
and
dec
sub
sbb
imul
cmp
adc
inc
or
jle
rcll
shlb
pop
dec
push
stos
push
mov
lret
push
scas
jbe
sub
push
xlat
xlat
pushf
je
lahf
scas
xlat
dec
or
mov
adc
fwait
push
cmpsb
aam
adc
jbe
test
aaa
push
fdivs
std
frstor
xor
cmp
jae
cs
mov
stos
sbb
mov
cs
adc
dec
pop
lock
inc
inc
dec
xor
jo
ss
or
lea
ficompl
push
clc
mov
leave
insl
add
inc
clc
clc
or
inc
inc
mov
inc
push
scas
add
jl
icebp
hlt
adc
ds
pop
xor
inc
imul
call
mov
lea
mov
rolb
lods
mov
lds
in
sbb
cli
add
push
int
push
adc
ljmp
fisttpll
and
inc
addr16
cmpsl
push
movsl
and
mov
dec
rcl
inc
xor
mov
adc
pusha
ds
and
mov
dec
jl
lcall
cwtl
push
push
pop
pop
mov
push
mov
loopne
xchg
in
cwtl
push
xchg
mov
aaa
rcrb
add
scas
mov
sbbb
bound
pop
nop
aaa
test
xchg
xor
cmpsb
push
fsubrp
aad
out
and
inc
mov
lcall
pop
in
fsts
adc
stc
mov
repnz
push
xchg
shlb
sub
mov
push
push
ljmp
lods
jnp
fwait
xlat
push
mov
mov
adc
fdivrl
jo
or
ret
pop
jecxz
int
adc
push
dec
arpl
js
push
mov
into
scas
pop
ss
or
dec
mov
mov
in
cmp
xchg
scas
jecxz
data16
int3
jns
daa
int3
jg
mov
out
sub
push
mov
push
ljmp
push
sub
aam
cmp
imul
inc
jl
xchg
cmp
clc
push
movsl
out
jbe
xchg
out
or
loope
das
dec
dec
movb
sub
mov
test
add
test
add
cmc
and
outsl
loope
dec
dec
ljmp
out
xchg
int3
sbb
jno
fmul
inc
popa
lahf
add
outsb
pop
in
hlt
dec
xchg
pushf
fistps
mov
adc
repnz
pop
inc
dec
jbe
pop
test
out
call
dec
stos
sbb
jecxz
xchg
jle
fimuls
mov
orl
mov
sub
xchg
scas
jmp
imul
movsl
push
or
push
push
push
push
adc
testb
enter
push
pause
or
out
jne
mov
inc
es
push
ds
stos
imul
cmp
stos
les
mov
inc
jle
or
shrb
and
and
and
and
mov
or
out
dec
insl
movsl
push
xor
jb
pop
cmpsb
jb
cmp
mov
mov
mov
sbb
jg
js
mov
dec
test
sub
ss
inc
xor
dec
jno
icebp
sub
pop
inc
push
mov
test
cmp
sbb
cli
inc
and
fidivs
or
ja
cmp
lret
test
arpl
mov
clc
inc
inc
mov
adcl
iret
je
insb
xchg
in
test
add
das
stc
bound
aaa
repz
sti
popf
cmp
into
fmulp
int3
add
mov
mov
and
xchg
xor
mov
mov
scas
jae
ret
cs
xchg
pop
outsb
int3
cwtl
push
push
push
or
adc
rorb
jg
cmp
pop
fsubrl
fwait
mov
call
pop
push
jle
and
adc
xor
cmpsb
mov
pop
jge
fs
mov
xchg
add
aas
xchg
dec
xchg
and
test
cld
out
ds
sarb
cltd
jl
and
cmpsb
xor
nop
pushf
jmp
mov
sbb
outsl
mov
shll
add
xchg
adc
and
jbe
mov
sub
dec
mov
xlat
lea
mov
cld
cwtl
rcl
push
mov
cmpb
fildl
xlat
add
lea
rolb
push
ljmp
pop
pop
jno
pop
mov
sbbl
test
sbb
popf
int
pop
fmuls
push
cmpsl
or
mull
jmp
jg
inc
scas
lahf
adc
lahf
mov
aas
dec
xchg
lahf
cmp
imul
xchg
enter
pop
and
jae
dec
xchg
dec
cwtl
inc
xchg
leave
pop
push
lret
es
inc
mov
inc
scas
push
out
xchg
pop
adc
fbstp
popf
push
out
pusha
std
inc
cli
into
push
xchg
or
or
lock
jp
out
mov
orl
rcll
push
inc
push
pop
jnp
ljmp
xchg
mov
std
test
pop
pop
add
add
add
push
lods
rep
test
push
dec
sub
adc
sbb
add
sahf
rcll
cmp
mov
mov
inc
popf
jl
inc
cmp
xchg
enter
push
fisttpll
icebp
icebp
cltd
popf
and
lcall
adc
ljmp
hlt
jmp
pop
push
sti
mov
jne
pop
scas
inc
shl
jecxz
ss
xchg
jnp
pop
cmp
pop
add
aas
cli
push
push
adc
or
add
arpl
rorl
daa
mov
mov
fwait
in
xchg
cmp
jmp
leave
sub
jb
jecxz
repz
scas
jnp
inc
out
into
sub
add
mov
jns,pn
xchg
scas
iret
lea
adc
push
and
mov
dec
adc
add
xor
and
out
aaa
mov
push
jecxz
leave
call
popa
xchg
xchg
pop
pop
filds
in
aaa
notl
xchg
jno
loop
hlt
add
mov
pcmpeqd
cld
mov
adc
mov
rcrb
das
mov
mov
das
or
or
imull
lds
jmp
cmp
sbb
cmp
sbb
sbb
data16
jns
jo
pusha
dec
sbb
fimuls
andl
mov
xchg
rcrl
sbb
push
pop
popa
je
outsl
xor
inc
daa
jns
pop
mov
push
cmova
jns
xchg
jmp
jne
sub
test
test
or
into
fcomps
cmc
cmp
jae
and
add
pop
repnz
loope
enter
pop
cmp
jp
cmp
lret
jecxz
cmp
pop
sub
ret
inc
cmc
and
bound
jl
mov
sbb
outsl
lea
mov
mov
lret
pusha
cmp
xchg
pop
fmuls
or
push
jnp
mov
mov
pop
mov
pusha
insb
mov
adc
dec
xor
testb
cmc
xor
jge
push
cmpsb
in
dec
adc
mov
cmc
rcrb
push
inc
adc
xchg
or
inc
dec
xchg
xchg
shrb
in
test
subb
pop
adc
cltd
daa
lahf
or
xchg
insb
cld
or
sbb
xchg
xor
loopne
cmp
mov
push
mov
out
add
mov
push
aaa
test
aam
cmp
in
notl
imul
dec
mov
ret
rorl
jp
sub
add
outsl
lcall
xchg
xchg
push
into
xor
add
pop
jmp
out
sbb
adc
jae
outsl
xchg
inc
test
cmpsl
mov
jp
pop
mov
mov
push
sub
fs
inc
loope
scas
popf
sarb
loope
stc
aas
fstps
je
xchg
lds
test
out
or
orb
xor
and
xor
jp
mov
jnp,pn
fimuls
ss
inc
jb
mov
fists
mov
jg
mov
mov
jno
aam
sbb
ds
nop
ret
repnz
jo
daa
pop
and
or
xor
inc
adc
push
sub
pop
cmpsb
sbb
out
cmp
and
cmpsb
sub
push
jns
sbbb
push
adc
xchg
aad
data16
loop
js
shl
or
repz
pop
mov
push
test
lcall
mov
push
xor
push
xorl
mov
or
sub
bound
jb
cmp
lret
cld
sarb
shlb
pop
addr16
loope,pt
fcoms
sbb
xchg
pop
clc
fnsave
idivb
icebp
incb
sub
mov
mov
cld
test
and
mov
insl
lahf
push
xchg
cs
xor
pop
hlt
shl
and
xchg
inc
dec
or
ja
jecxz
mov
cli
inc
inc
dec
insl
inc
xchg
mov
xor
jno
mov
imul
movsb
sub
mov
mov
sbb
mov
aas
rolb
dec
je
xor
loop
dec
in
mov
dec
loope
xchg
pop
sbb
ficoml
outsb
jo
stos
push
push
mov
lds
addr16
std
xor
or
cmc
mov
and
push
jmp
inc
mov
outsl
out
mov
jae
lret
cld
jg
aad
mov
aaa
cs
fmull
insb
pushf
jge
xor
stos
cs
add
fimuls
add
cmp
pop
xlat
out
jns
and
lock
lods
test
xchg
dec
lock
in
movsl
fldl
xlat
sub
adcb
jmp
loop
push
jbe
hlt
nop
mov
jns
iret
mov
loopne
es
mov
sbb
and
gs
int3
aam
adc
pop
adc
xor
push
jl
mov
lods
ret
arpl
aad
xchg
out
mov
loope
jns
lahf
mov
sub
enter
out
stos
fisubrs
ljmp
icebp
inc
sarb
mov
pushf
mov
int
jg
insl
mov
push
ljmp
es
bound
fsts
mov
iret
sbb
call
fstpl
jl
sub
lcall
and
les
cmp
jle
add
pop
adc
xchg
fisttpl
mov
inc
lock
mov
xor
fisubs
lahf
xor
adc
mov
xchg
lret
push
cwtl
xchg
lock
cmpl
into
testb
inc
xor
aam
je
imul
out
call
xchg
jno
dec
push
popa
lret
mov
ss
xchg
enter
fwait
sti
sbb
cmp
xchg
addr16
scas
cmp
imul
aam
ss
inc
daa
push
or
add
jl
loope
sub
jle
xchg
jno
stos
mov
dec
test
loopne
push
pop
sub
xchg
inc
xchg
or
loop
into
push
lods
jp
scas
lds
dec
jge
sub
inc
je
aam
dec
jecxz
xchg
jbe
dec
fidivrs
mov
loope
jnp
and
dec
aam
adc
into
aas
jecxz
aam
test
shr
repnz
stos
loope
dec
inc
ljmp
jecxz
mov
jne
xchg
frstor
mov
dec
fcmove
int3
sbb
cmpsl
mov
fidivrs
jp
sub
push
mov
js
sbb
out
inc
adc
sub
jb
adc
mov
push
out
testl
jecxz
inc
popa
fucomi
mov
cwtl
push
mov
test
xor
js
loopne
fstpl
inc
jmp
shl
vmovsd
sbb
cmpl
negb
jg
inc
inc
in
pop
push
iret
mov
gs
fdivrs
fwait
test
inc
pop
cmp
mov
roll
cmp
inc
fwait
sub
push
sbb
test
sarl
or
lret
rclb
push
fwait
out
adc
filds
adc
imul
leave
fisubrs
add
lret
inc
ja
aad
cmp
jno
cmpsl
adc
mov
inc
loop
je
into
sub
add
pop
andl
sbb
in
mov
jg
scas
inc
idiv
enter
add
ljmp
add
js
imul
adc
adc
out
push
jb
in
paddd
xchg
lcall
mov
push
push
les
lods
outsb
loop
jbe
sbb
push
mov
xlat
push
imul
clc
mov
mov
push
loopne
xchg
stos
xor
jne
cmpsl
jno
gs
dec
and
cli
aad
movhps
xor
outsb
pushf
stos
mov
and
xor
adc
aaa
inc
outsl
push
jne
push
mov
das
jmp
mov
dec
or
je
sub
ss
les
xchg
aas
mov
jns
mov
xor
test
ret
fwait
mov
push
cwtl
or
lods
aaa
sbb
cmp
and
scas
jb
fcmovb
xchg
int3
gs
sbb
repz
call
pop
test
cmp
sti
scas
cmc
pop
fmull
pop
shlb
jbe
icebp
push
pop
into
and
inc
mov
dec
imul
mov
mov
shll
ret
cmc
gs
repz
ja
inc
int
add
jl
sub
sbb
iret
pop
and
xchg
icebp
into
pop
popa
ret
stc
clc
add
cmp
xchg
outsb
sbb
push
add
test
mov
mov
cmp
cwtl
rolb
orl
jle
bound
dec
push
dec
bound
xor
xchg
sti
and
stos
popa
lret
dec
push
in
and
bound
fdivl
loope
mov
aam
lret
mov
mov
add
add
add
in
lods
dec
inc
push
xor
cld
pop
ds
jb
stos
scas
and
js
cmpsl
mov
adc
fimull
inc
cmpsb
cmpsb
lds
push
jbe
shlb
movl
push
pop
sub
movaps
mov
jle
cmpsb
xchg
inc
xchg
sbb
inc
pop
or
out
jbe
pop
push
notl
cmp
dec
repnz
clc
mov
mov
test
leave
mov
mov
mov
mov
push
ret
adc
cmp
or
cli
mov
fiaddl
mov
sub
outsb
jge
js
pop
mov
jle
ja
scas
fadd
call
mov
push
lods
loope
inc
or
fldt
imul
mov
add
sbb
pop
aaa
xor
inc
rcr
lret
xchg
mov
jp
dec
out
cmp
das
inc
lcall
mov
clc
mov
maxps
fildl
pop
pushf
xor
in
out
ficoml
dec
ljmp
fsub
xor
testl
adc
iret
mov
shlb
mov
add
cmp
test
cmpsl
pop
out
ss
stc
subb
pop
aaa
add
out
int3
push
xchg
jo
rorb
shlb
test
jp
testb
gs
pop
js
add
shll
adc
inc
pushf
fbld
sti
add
mov
stos
sub
lea
lret
aas
scas
xor
pop
int3
aaa
sub
xchg
or
les
xor
adc
inc
jge
pop
push
push
out
mov
sub
sbb
repnz
cmp
and
xchg
stc
je
mov
dec
cs
dec
dec
in
dec
dec
out
mov
mov
add
out
scas
outsb
mov
sub
sbbb
cltd
nop
movsl
sub
cmpsl
mov
adc
jg
lcall
idivl
add
mov
testl
pop
mov
adc
pop
loope
inc
cmp
pop
lret
rcrl
mov
jo
and
sbb
pop
sbb
fwait
es
fsts
enter
xchg
add
mov
inc
adc
push
pop
adcb
mov
repz
mov
fistl
cmpsb
xchg
and
cltd
add
ss
and
subb
xor
adcl
inc
int3
mov
mov
push
mov
dec
fdivr
add
sbbl
loop
mov
ss
mov
cld
sbb
pop
sbb
insb
or
fisubrs
xchg
sbb
lea
mov
repz
add
xor
ja
mov
loope
out
mov
test
xor
cld
dec
lock
xchg
or
out
mov
shrd
jecxz
dec
ja
das
pop
inc
dec
movsb
jg
dec
mov
xchg
xlat
or
shll
xor
adc
arpl
adc
les
sbb
adc
pusha
mov
das
sub
data16
cmpsl
dec
stos
dec
ja
cwtl
or
and
fcomp
popf
pop
jge
jae
ret
or
xor
cmp
scas
cmp
sub
xor
add
adc
pop
fists
xchg
dec
outsl
movsb
lret
jge
gs
lods
adc
dec
mulb
fwait
mov
scas
imul
adc
loop
lahf
sbb
notl
jle
xchg
ja
cmp
scas
orb
xchg
arpl
ret
jl
fcmovne
adc
enter
ss
push
jecxz
add
sbb
es
leave
lcall
fldt
insl
dec
rcrl
push
outsl
lret
cmp
mov
mov
fs
out
ficomps
add
mov
insl
pop
pop
sbb
mov
dec
push
icebp
cmp
fs
jle
enter
cs
leave
push
xor
lret
fmulp
iret
outsl
test
pop
jnp
sbb
push
popf
loope
jl
imul
sahf
leave
inc
adc
dec
add
adc
inc
add
je
cli
fwait
push
sbb
or
out
add
notl
inc
cltd
jne
push
or
lea
jmp
movsl
mov
shrb
push
orb
jg
aaa
icebp
dec
cmp
das
jp
adcb
nop
xchg
cld
imul
xor
in
popf
mov
lods
push
jmp
lods
hlt
sub
mov
addb
inc
cmp
xor
in
mov
insb
cltd
jo
sbb
popf
jecxz
inc
or
mov
adc
dec
outsl
lods
jae
cmp
pop
cmp
jmp
repnz
xlat
xchg
hlt
movsl
pop
lret
lods
and
xchg
loope
sub
dec
out
mov
xor
fbstp
sub
add
mov
inc
xor
popf
push
insb
adc
mov
dec
push
xorl
rcr
pop
aas
test
jb
jbe,pt
stos
ljmp
push
mov
scas
jne
sub
test
cmpsl
pop
fildll
xor
icebp
mov
push
scas
xchg
imul
movsb
xor
imul
or
mov
inc
jae
mov
adc
pop
push
insb
bound
xchg
imul
cmp
mov
and
pandn
fisttpl
cmp
cmp
data16
pop
pop
negl
push
lods
decb
std
gs
jmp
cli
xor
stos
pop
addl
loope
mov
nop
addb
arpl
into
xor
sub
push
mov
movsl
push
hlt
bound
sbb
xchg
push
jns
jg
arpl
lret
stc
dec
mov
inc
mov
jecxz
in
sbbb
ret
pop
fcmovnu
xor
and
xor
mov
sub
adc
xchg
mov
ljmp
cmpsb
push
notl
add
je
ja
imull
mov
xor
test
mov
out
out
std
pop
adc
fs
outsl
in
les
mov
mov
aas
pop
xlat
or
or
nop
pusha
test
xor
test
outsl
mov
dec
mov
adc
enter
push
pop
loop
add
lret
mov
add
addb
jge
mov
xchg
scas
push
mov
lods
jmp
xchg
inc
loopne
loop
adc
push
hlt
repz
sbb
xchg
push
lods
out
fbstp
std
adc
arpl
popl
push
mulb
incb
clc
jne
sbb
xor
aad
mov
and
lods
loopne
std
adc
sbb
test
and
add
and
fxam
sub
push
in
fnstsw
ret
cmp
fsub
icebp
push
jmp
push
jl
out
rcrl
dec
or
pop
jne
adc
mov
or
sub
pop
dec
push
mov
dec
mov
enter
in
mov
xlat
sub
bound
test
mov
lds
lret
rorb
mulb
insb
cs
mulb
jo
aad
cld
push
xor
stos
inc
push
dec
sar
dec
cmp
mov
ljmp
mov
sub
fildll
fwait
sub
into
xchg
xchg
mov
sub
mov
std
addr16
push
pop
mov
jne
cmp
sbb
adc
sbb
pop
or
xchg
mov
add
mov
test
test
mul
scas
add
aam
adc
mov
add
dec
pop
push
scas
pop
xchg
cmp
sahf
fisubs
mov
inc
dec
mov
ds
add
repz
mov
dec
stos
or
ds
sbb
cld
push
pop
or
out
lea
mov
nop
xchg
add
or
xor
stos
jle
arpl
mov
jp
in
je
push
inc
movsb
pop
jbe
sbb
subb
and
mov
imul
out
into
daa
or
jo
aas
jbe
test
push
repz
outsb
dec
fistl
jg
and
xchg
inc
or
rorb
cmpsb
adc
xor
push
cmc
jge
xchg
mov
push
xchg
lea
mov
mov
push
add
adc
clc
jne
dec
add
out
and
xchg
xchg
outsl
jmp
imul
mov
sbb
push
adc
sbb
cmpsb
sub
mov
or
push
mov
daa
gs
mov
call
dec
add
mov
jg
add
jb
jmp
mov
ret
pushf
dec
out
mov
mov
sub
dec
or
xchg
cmp
xchg
add
sbb
jns
sub
jo
mov
inc
iret
repz
jecxz
addr16
adc
xchg
cltd
jp
lods
push
insl
icebp
mov
adc
push
jp
int
mov
fmull
lea
test
mov
gs
push
movsb
cltd
dec
mov
push
adc
xchg
xchg
xchg
fwait
mov
dec
mov
fldenv
lock
repnz
adc
fucomi
shlb
xchg
lret
xlat
sti
cmpsb
jo
xchg
fsubs
or
std
iret
je
add
and
jmp
cs
push
sti
dec
movsl
aad
pop
mov
cmp
xor
inc
jg
mov
out
cmp
sbb
pop
xor
xchg
cwtl
mov
call
aas
xor
rorl
xor
mov
shl
push
lods
test
jnp
je
mov
in
adc
xor
jns
gs
xlat
jbe
flds
or
loop
cmpsl
sub
das
lods
jmp
out
cmc
aad
dec
sub
or
add
lret
cli
mov
in
pop
lret
push
mov
test
inc
pop
xchg
into
inc
or
jmp
mov
call
sbb
add
out
adc
lods
xor
mov
add
dec
push
cltd
sub
and
inc
aam
punpckldq
bound
cmp
inc
mov
icebp
sub
aad
lods
xchg
push
das
push
mov
mov
aam
idivl
repnz
push
push
aam
into
mov
lahf
out
cwtl
jo
cmp
add
cmp
fwait
icebp
sbb
scas
scas
mov
decl
int
sti
out
dec
and
scas
inc
mov
fidivrl
scas
sbb
pusha
cmp
mov
and
push
xor
test
inc
push
mov
icebp
and
mov
addr16
cmp
dec
xor
shrb
or
or
inc
inc
mov
lods
or
sbb
inc
and
lock
testb
xchg
dec
jle
mov
add
mov
and
bound
aam
xchg
fucom
mov
test
or
push
cld
or
lea
cmp
aam
out
repnz
push
xlat
xchg
inc
cs
push
rolb
pop
pop
test
pop
cs
aas
add
cwtl
hlt
cmp
and
gs
mov
xor
push
sub
add
test
ja
ljmpw
jno
mov
jo
les
push
repnz
cwtl
push
dec
call
sub
pop
lahf
ja
fidivl
xor
mov
int
push
incb
hlt
pop
repnz
jg
jle
mov
adcb
jae
xchg
lret
jp
jae
add
dec
arpl
lods
mov
inc
inc
aad
inc
pop
ret
xor
ss
iret
outsl
fists
ljmp
and
in
pop
jns
daa
adc
mov
sub
sbb
in
pop
push
fidivrl
pop
sbb
mov
fadds
fdivs
add
and
popa
pop
mov
sub
fbstp
jns
add
imul
or
enter
fimull
xor
lret
or
mov
push
insb
aaa
popf
imul
or
inc
push
or
or
loop
das
or
out
arpl
jmp
cwtl
pop
mov
cmp
cwtl
outsb
leave
jo
mov
ficoml
imul
mov
gs
xchg
mov
aam
mov
pushl
xor
ljmp
ds
in
xor
mov
std
xchg
cmpsb
movsl
stc
sub
pop
cmp
push
clc
clc
pop
sahf
xchg
sbb
lds
mov
mov
enter
rcrl
inc
cmpsl
xor
and
adc
insl
jnp
ret
fwait
addb
insl
add
clc
inc
stos
and
lock
fwait
mov
mov
shrl
int3
jle
dec
xchg
xorb
or
call
in
popa
out
mov
loop
int
jno
jl
or
mull
sbb
clc
xor
wbinvd
movsl
in
gs
rolb
shll
jae
mov
movsw
xor
add
stos
dec
test
jno
fisubs
enter
inc
push
clc
xor
push
insb
pop
loop
mov
xor
ds
xchg
cwtl
cmpl
or
aam
pop
jge
test
push
call
sbb
mov
cli
jg
sbb
mov
test
xlat
dec
and
lcall
push
pop
out
clc
pusha
dec
cwtl
out
cmp
mov
cmp
lret
add
mov
jl
mov
ret
or
adc
out
mov
jo
scas
pop
inc
add
rcr
mov
lret
push
push
orb
ds
inc
aam
test
mov
cmp
jae
int3
adc
fs
sbb
gs
in
adc
aad
inc
or
lcall
cmp
and
sbb
push
mov
and
test
je
mov
sub
jo
ret
pop
mov
inc
out
jecxz
adc
in
lret
lea
ror
iret
adc
xor
out
clc
int3
insl
mov
xor
dec
mov
fildll
into
divb
push
fisubrl
sub
aas
xchg
push
pushf
pop
addr16
adc
pushf
inc
outsl
popl
inc
stc
sbb
icebp
jnp
mov
fiaddl
movsl
mov
lods
jmp
nop
fisttps
pop
int3
movsl
mov
or
int
jo
jle
negl
bound
arpl
popl
popf
adc
in
inc
xchg
inc
in
jo
ljmp
and
mov
popf
loope
popf
bswap
sbb
mov
cld
mov
repz
jg
and
sbb
adc
in
push
lcall
push
leave
enter
xchg
inc
ljmp
and
fnstenv
lods
mov
inc
ret
lret
fnstenv
outsl
je
jae
cltd
and
dec
pop
dec
aad
cmpb
enter
push
nop
lret
lret
popa
setne
xor
fsts
and
mov
or
mov
fisttpll
fcoms
pop
movsl
lods
lea
nop
arpl
lret
fs
inc
dec
in
jnp
fcomps
pushf
aas
movsb
pop
ds
cld
mov
inc
dec
pop
insl
ja
jl
push
jmp
and
sbb
sub
mov
es
add
arpl
bound
fs
inc
movsb
dec
pop
iret
incb
lea
sbb
mov
test
xchg
mov
into
imulb
mov
cmp
std
pop
lahf
mov
xor
addr16
push
inc
mov
sub
lar
add
and
xchg
fs
jge
push
pop
adc
inc
inc
cmpl
rcrl
inc
ret
adc
or
repnz
sbb
frstor
add
int3
push
insl
fcomps
mov
cltd
nop
sub
loope
xor
adc
mov
cmp
repz
ret
adcl
add
mov
dec
paddusb
sbb
mov
mov
pop
bswap
mov
gs
cmpsl
adc
fildll
std
shl
loopne
dec
mov
lret
sub
xchg
cmp
mov
mov
mov
into
mov
push
incb
in
xor
adc
dec
mov
or
dec
nop
cmpsl
gs
decl
outsl
lock
add
sub
mov
jae
roll
sbb
sbb
cltd
push
xlat
lret
and
inc
sub
dec
neg
data16
out
pop
adc
outsl
jg
hlt
xchg
or
call
cwtl
adc
shrl
dec
cmp
ja
mov
andl
pushf
in
push
mov
out
and
popa
enter
es
repz
lea
push
pop
dec
icebp
mov
insl
dec
cmpsl
bound
inc
inc
push
xor
andb
pop
sub
cltd
imul
cmp
or
out
shlb
roll
adc
popa
push
lods
ucomiss
xor
jp
pop
jbe
pop
mov
mov
pop
popa
addl
adc
mov
push
sub
mov
out
sub
lahf
push
or
pop
ret
xchg
sbb
stc
pop
rolb
add
cmp
roll
push
ljmp
das
stos
ds
push
jmp
sbb
xchg
add
call
xchg
jbe
mov
test
imulb
out
and
cmp
inc
push
mov
mov
cmp
cmpsb
in
out
adc
and
repz
mov
xor
int
lahf
xchg
and
dec
popf
inc
ljmp
adc
pusha
outsl
test
and
fistps
pop
pop
xor
or
inc
call
pop
fprem1
jno
dec
inc
sub
stos
fsubrl
sub
test
imul
icebp
ret
lds
cmc
std
fistl
push
xchg
movsb
cmp
push
adc
mov
or
cmp
cmp
outsb
push
std
mov
pop
jo
inc
and
fildl
jle
or
sub
dec
pop
add
aas
lret
call
pop
jns
mov
adc
adc
subb
cmp
mov
mov
dec
xchg
push
aad
loope
jb
hlt
lcall
insl
fisttps
andb
loop
cmp
sub
cs
and
mov
add
popf
xchg
add
xor
out
jne
sub
cwtl
sahf
test
shrl
addr16
sbbb
xchg
or
mov
xchg
push
xor
mov
and
cmp
mov
sbb
mov
pop
push
sbb
sbb
cwtl
mov
aas
sbbl
popf
into
or
out
sub
pusha
cwtl
loope
fsubrl
cli
enter
cmpsl
cmp
or
es
xchg
fldt
iret
in
mov
js
fnstcw
imul
xlat
cld
lds
jg
scas
scas
sbb
push
push
sbb
lret
shrl
lret
leave
fildll
dec
insl
mov
lret
jge
imul
call
int
dec
testb
sub
lods
das
cmp
or
outsl
dec
in
stos
cwtl
and
sub
push
loope
loope,pt
or
jg
js
pop
les
jge
mov
mov
xchg
xchg
iret
out
rcll
xor
pop
adc
cmp
pop
les
popl
add
jge
push
xchg
loope
pop
push
insb
cmp
out
sbb
pop
mov
lret
js
jg
lods
jb
add
cmc
add
xor
and
loopne
hlt
pop
push
in
cs
lods
stc
push
fiaddl
jge
test
mov
or
test
inc
imul
in
jle
mov
adc
inc
arpl
pop
arpl
in
pop
jge
mov
aam
push
orl
pop
add
jb
push
push
pushl
das
adc
cwtl
rorb
mov
jns
ret
mov
xor
push
jbe
fbstp
sti
adc
inc
mov
jmp
xchg
stc
mov
mov
fwait
popf
push
jp
and
stos
mov
rclb
xor
or
sub
insl
push
icebp
ret
movsb
jmp
xchg
cli
stc
loopne
lret
jno
and
or
xor
pop
mov
push
xchg
fs
ficoms
inc
sbb
jecxz
xchg
mov
and
mov
pop
repnz
dec
divl
push
mov
pop
lock
movsl
pop
jns
xchg
xchg
fnstcw
fisubs
mov
inc
mov
cmpl
shlb
mov
xor
out
jmp
orl
fidivl
fsubrs
mov
or
test
hlt
mov
or
mov
pop
push
pop
cmp
or
mov
mov
or
sbb
dec
outsb
add
inc
ss
mov
or
lret
xchg
outsb
xchg
out
fwait
adc
xchg
es
in
mov
aas
fsts
andb
icebp
push
arpl
jbe
pushf
sti
cmpsb
mov
jge
push
inc
dec
shll
xor
cmpsb
pusha
imul
iret
popf
push
pop
faddl
and
jg
mov
loop
test
jmp
in
ja
pushf
xor
jmp
mov
push
int
adc
jno
dec
repz
push
test
in
push
iret
mov
pop
bound
es
sub
in
push
sbb
pop
dec
nop
gs
lds
dec
std
aam
xchg
ja
leave
gs
movsb
sbb
push
add
test
dec
push
lret
cs
sbb
cmp
sub
xor
ds
push
inc
ljmp
lock
mov
xchg
aas
pop
xor
xchg
jno
push
inc
test
sub
aam
in
mov
xchg
rcll
lods
xchg
sti
aas
adc
data16
cmp
je
dec
xchg
add
add
cs
mov
aaa
xchg
adc
rep
push
lahf
sti
jb
mov
cli
fdiv
or
int3
jg
sub
mov
push
test
push
aam
jns
mov
int3
dec
mov
add
rol
cltd
daa
orl
pop
shll
shll
out
pushf
add
aaa
xor
xchg
aas
lods
jbe
int3
push
rorb
mulb
fldt
push
xchg
hlt
push
inc
lock
sub
mov
cld
fdiv
insb
orb
repz
mov
pop
addl
jge
arpl
sbb
lret
rsqrtps
fcoms
xchg
xchg
sti
cmp
inc
lods
and
rorb
pushf
mov
repnz
cmpsb
outsl
jno
mov
cwtl
fwait
inc
shlb
pop
stc
xlat
pop
sbb
int3
arpl
cwtl
add
adc
xor
dec
mov
jne
aad
loopne
movsb
xlat
mov
sbb
adc
out
shrb
pop
mov
sub
js
mov
int3
bound
sarb
sbb
lock
ret
sbb
shll
decl
push
push
xchg
dec
adc
mov
adc
lods
scas
cld
pop
sub
sbb
stc
adc
pop
cmp
sbb
fsubl
ret
pop
dec
inc
cli
push
movsb
and
lods
imul
add
es
hlt
sub
pop
jg
aas
add
push
mov
aaa
mov
pop
ja
push
frstor
fadd
push
add
loopne
loopne
push
jo
sbb
ret
stc
or
sub
push
inc
aas
jns
mov
pop
mov
inc
notb
xchg
cmpsb
inc
enter
fwait
sub
pop
test
fxch
rol
inc
into
and
lods
dec
push
icebp
lahf
mov
jp
lods
pusha
dec
movsb
lahf
faddl
es
push
clc
xchg
fstpt
mov
inc
push
outsb
mov
push
dec
dec
in
js
cmc
std
jp
scas
shrb
cmp
aaa
in
and
pop
in
popa
hlt
in
sub
jp
fwait
loop
movsb
faddl
sbb
mov
jb
jg
mov
and
std
xor
adc
fidivl
sti
xor
inc
pushf
daa
icebp
cs
aas
push
mov
lahf
pop
aam
xchg
jae
push
sbb
adc
mov
jns
stos
cwtl
sub
into
mov
sub
cmc
xlat
push
jno
repz
int3
sbb
stos
mov
inc
push
mov
push
mov
xor
or
jecxz
inc
jne
leave
xchg
inc
push
dec
or
data16
add
inc
push
cmpsb
loop
or
ljmp
test
bound
mov
nop
aad
shlb
push
into
cmpsl
cmp
sub
in
fistps
orb
aam
leave
sub
dec
das
push
mov
sbb
inc
test
xor
mov
pop
lods
in
repnz
cmp
fcoms
pop
xor
in
xchg
ret
dec
sub
in
xor
shlb
inc
dec
pop
jns
lods
loopne
mov
fnstcw
lods
fistl
push
fisttpl
dec
int
jl
pop
sub
xchg
cmpl
les
and
jno
xchg
dec
movsl
xor
xor
mov
sub
mov
lods
fsubrs
fwait
dec
mov
imulb
xor
ficoms
xchg
loopne
cwtl
jmp
push
cmc
pop
jg
xchg
fstl
call
stc
and
xchg
push
inc
xchg
inc
jns
mov
sbb
jae
or
add
fs
imul
pop
lcall
sti
sub
fwait
and
shl
jns
jns
jmp
ret
xor
aad
dec
int
xor
daa
jnp
xchg
aaa
not
mov
into
add
loopne
clc
xor
outsb
ljmp
dec
pop
and
lds
in
add
lock
subb
xchg
lea
mov
mov
dec
int
mov
lods
fists
sahf
push
cmp
mov
addr16
jl
fwait
cs
mov
dec
push
popa
and
in
test
mov
mov
jge
les
loop
inc
outsb
or
add
test
cmp
mov
int3
inc
and
fs
pop
out
roll
test
and
mov
xor
rclb
aad
adc
adc
inc
out
sub
leave
dec
je
push
mov
js
jns
lds
and
stos
insb
pop
lcall
cli
mov
aaa
add
lahf
push
ss
mov
xchg
inc
popl
sbb
fnstcw
ss
and
inc
mov
jns
pop
lea
call
adc
outsl
jae
int
inc
push
ret
mov
cmc
fldl
pop
shlb
dec
jl
sub
adc
subb
aas
dec
inc
jmp
icebp
mov
inc
cmpsl
push
fwait
or
adc
mov
insl
inc
pop
lcall
test
mov
or
pop
orl
mov
adc
adc
inc
mov
ss
jp
mov
xor
or
push
in
cmc
sub
sti
lcall
lods
xor
dec
fs
pop
insl
cmpsb
inc
push
jno
inc
xchg
pop
jecxz
loop
sub
pop
movsl
andb
sti
es
xor
loopne
outsb
pop
mov
jns
inc
lea
loop
je
xchg
inc
nop
pop
aam
cmc
or
or
ss
call
mov
push
inc
test
adc
in
test
add
dec
or
and
lods
imul
adc
es
fwait
out
pushf
fstl
sub
lret
fnstenv
pusha
xor
icebp
pop
mov
out
mov
scas
and
roll
sbb
rorl
fidivl
dec
stos
ss
out
lock
rcll
push
fsub
popf
xchg
pop
fidivrl
iret
push
push
pop
scas
or
push
jo
mov
rcrb
cmp
cltd
cmp
aam
jge
add
cs
push
in
fimull
lods
aas
scas
pop
in
sub
in
cwtl
xlat
inc
mov
mov
test
popa
jb
cmc
mov
jp
and
stc
cmc
loope
popf
add
in
daa
adc
adc
cli
aas
mov
pop
push
sbb
cmp
adc
xor
and
jmp
lret
cmpsb
mov
cmpsl
hlt
xor
add
pusha
rorb
icebp
add
push
testl
add
lret
neg
push
fnstenv
addr16
aaa
pop
repz
xor
inc
cld
mov
cld
ret
sbb
out
repnz
loop
mov
lret
push
sarb
dec
sbb
inc
sub
ss
cwtl
mov
or
lds
jle
sahf
xchg
insb
sbb
jns
pop
mov
xor
push
mov
cmp
fldl2t
pop
repz
adc
fdivr
mov
jge
lea
scas
cmp
sbb
pop
and
jb
inc
add
inc
sub
push
int
fidivrs
les
mov
sbb
pop
das
xor
add
pop
and
cmp
xor
xchg
clc
movsb
xchg
sahf
adc
ds
mov
fwait
xchg
add
sbb
orl
mov
and
jge
mov
pop
es
dec
cmpsb
jns
fiaddl
aaa
fsubl
adc
sar
lds
int3
jo
lret
out
test
repnz
ficoms
in
test
div
sahf
mov
inc
sbb
iret
jae
enter
add
pop
mov
icebp
ret
push
cltd
dec
adc
cmp
rolb
popf
mov
xchg
aad
in
mov
mov
ss
add
xchg
fbstp
enter
lock
clc
cmp
nop
xchg
xchg
loopne
aad
sub
mov
inc
push
out
stos
jle
xchg
repnz
xorl
sbb
ljmp
add
sub
push
mov
mov
cld
add
mov
and
cmp
adc
addr16
mov
mov
push
shlb
pop
test
je
sub
push
clc
fsubr
int
push
push
aam
insb
and
out
scas
jnp
lcall
enter
lock
nop
arpl
test
cli
dec
ja
xchg
dec
insb
test
out
or
es
loop
shlb
popf
inc
in
fyl2xp1
imul
pop
jb
mov
shrb
mov
mov
fs
mov
pusha
or
and
push
sub
lds
and
in
jne
testb
inc
dec
jl
pop
fcmovnbe
imul
lret
push
clc
mov
jmp
pop
mov
cmp
sub
jecxz
rcr
sub
and
and
loop
aaa
pop
movsl
addr16
xor
pop
mov
or
clc
jb
cld
push
call
ret
cwtl
or
or
pop
aam
mov
jp
shlb
or
insl
insb
mov
sti
cwtl
xchg
pushf
cmp
ficomps
inc
das
repz
jnp
fstps
fsubs
pop
repz
sbb
mov
adc
into
xchg
test
idivl
add
dec
fldcw
loopne
sti
lods
stc
or
dec
or
call
xlat
dec
mov
xchg
xor
jb
adc
inc
std
pop
sbb
call
push
test
or
add
jg
and
loope
movsb
cmpsl
aad
mov
pushl
mov
insl
daa
jo
jnp
movsb
sti
lcall
popf
dec
mov
popf
int
into
roll
arpl
mov
fwait
rol
xchg
data16
jbe
xchg
repz
and
mov
lret
out
ficoms
inc
enter
jg
out
mov
pop
xchg
xlat
es
cli
mov
aaa
faddl
mov
lcall
mov
mov
ds
dec
lcall
jo
pop
sub
cmp
jno
mov
test
dec
adc
mov
iret
rcll
cltd
int
shrl
sub
xor
add
inc
popa
ret
inc
std
adc
subl
dec
in
add
cs
test
adcb
mov
je
jno
lret
pop
jnp
mov
leave
stos
lods
inc
push
sub
fidivrl
pop
popl
inc
loop
cmp
dec
popa
cs
cmpsb
aad
stos
cltd
sarl
mov
popf
fcmovne
adc
adc
rorl
sub
out
mov
cli
jl
xchg
inc
and
sbb
mov
and
and
sti
les
flds
pusha
ret
sbb
dec
push
push
rcrl
enter
mov
sti
mov
jno
in
and
xchg
pop
out
scas
jns
dec
push
imull
jo
mov
push
jl
push
nop
lret
out
xchg
jo
xchg
or
js
rcr
add
int
sub
mov
mov
and
rcll
pop
stc
jne
and
push
aas
pop
jge
inc
loopne
push
jg
lods
nop
push
mov
add
das
repnz
mov
fwait
in
stc
xchg
sub
inc
sbb
shr
stos
scas
xchg
mov
enter
xorb
ret
das
push
and
cmpb
daa
cmpsb
sub
xchg
push
mov
jo
xor
seto
les
filds
ds
sbb
xchg
sbb
iret
pop
test
mov
test
cs
cmp
pop
sub
add
lods
mov
faddp
xor
mov
icebp
mov
daa
and
dec
push
pop
lahf
and
pushf
xchg
dec
add
daa
scas
mov
inc
call
movsl
cmpsl
inc
mov
mov
xchg
inc
out
scas
mov
iret
inc
pop
cmp
std
lds
insb
add
sti
rcll
inc
out
je
cmp
sbb
fsubrp
mov
rcrl
push
icebp
int3
adc
inc
jns
loope
jno
loope
push
stos
sbb
and
outsb
xorl
cmp
mov
pop
sub
addr16
jno
mov
icebp
mov
int3
rcll
xor
xchg
pop
jno
fisubrl
pop
test
ds
lock
add
add
adcb
jns
stos
dec
loopne
mov
xchg
pop
or
and
mov
lods
aam
popf
adc
inc
jecxz
xor
aas
push
cli
jp
idivl
jle
xor
andl
and
inc
test
cmpsb
mov
iret
mov
test
lea
hlt
cmp
and
inc
fisubrl
add
movb
movsb
and
pop
mov
push
movq
shll
fstpl
movsb
pop
in
enter
in
jp
mov
cli
insb
aam
repnz
jmp
sbb
add
aad
cli
dec
enter
jmp
cs
ss
and
cmp
ret
and
mov
lds
fidivs
add
adc
adc
push
dec
leave
into
dec
incl
inc
jne
repz
subl
xchg
push
and
stos
bound
jmp
xchg
imull
jp
icebp
bound
mov
inc
sbb
sub
lods
arpl
cmp
mov
fbld
ja
loopne
or
xor
sub
in
pop
cmpl
es
shlb
push
fsubs
add
adc
jbe
bound
ss
and
test
pop
and
push
mov
xchg
cmpb
xor
or
insl
jecxz
addr16
push
inc
inc
jnp
negb
test
mov
cmp
incl
icebp
sbb
sahf
jne
fsubs
stos
adc
and
jns
sbb
jl
xor
faddl
dec
test
ss
adc
sub
adc
pop
cltd
xor
mov
repz
push
stos
lret
loop
jbe
subl
push
xchg
dec
lcall
mov
fimuls
jbe
mov
mov
sub
add
add
dec
or
push
sbb
pop
pop
daa
mov
fisubl
jns
repz
mov
mov
fisubrl
aaa
or
push
add
movsb
incl
sbb
lods
sub
adc
repnz
inc
sbb
mov
loope
mov
pop
push
add
and
xchg
pop
rol
dec
repnz
mov
dec
scas
sbb
loop,pn
sbb
outsl
in
cmpsl
add
xchg
xor
sbb
stos
adc
cmpsb
jno
mov
call
movsb
aaa
or
sub
sti
fdivrl
cmp
or
daa
lret
adc
adc
pop
lods
or
jmp
cmp
pop
loopne
rorl
ret
es
jmp
mov
xchg
mov
cmc
push
jmp
mov
stc
add
sub
ja
mov
sub
mov
lock
mov
bswap
sub
pop
jns
movsl
cmp
stc
addl
jge
std
cmp
push
sbb
dec
ret
or
in
mov
mov
inc
fs
dec
repnz
mov
xchg
rorl
sbb
gs
fisubs
jp
outsl
mov
iret
xor
stos
repnz
dec
dec
popa
jg
nop
jne
sbb
negb
int3
out
add
mov
mov
popa
dec
xchg
push
dec
inc
js
lods
xchg
pop
test
cs
mov
jno
sub
imul
mov
jns
dec
or
xchg
jg
fisttpll
xchg
push
add
jnp
js
iret
mov
outsl
or
ret
and
out
fdivrp
mov
mov
pushf
adc
and
mov
cmp
mov
cmp
mov
sub
into
stos
hlt
mov
inc
pop
jne
or
fimull
xor
mov
pop
jae
cmpsl
pop
push
dec
clc
mov
jne
jne
mov
ja
sbb
push
in
in
les
cs
pop
xchg
dec
mov
pop
mov
mov
add
sub
sub
test
insl
pushf
mov
inc
cmp
cltd
mov
push
imul
jne
data16
add
jo
imul
push
sbb
sar
and
arpl
push
sub
loope
add
mov
pop
push
lret
sahf
mov
pushf
inc
fistpll
jmp
push
push
jmp
mov
or
cld
cmpb
mov
out
push
loopne
mov
lret
xchg
outsl
or
push
ret
stc
stc
jnp
shll
dec
sbb
loop
scas
fxam
pop
data16
enter
or
jb
xchg
jge
outsl
enter
and
and
cli
das
push
adc
push
popf
cmpsb
mov
sahf
xchg
js
pushf
mov
dec
xchg
inc
fisubrl
and
ljmp
jnp
sbb
popa
xor
cmp
xchg
sub
imul
aam
jl
out
ret
dec
mov
call
mov
or
push
mov
out
stos
adc
mov
push
std
cmp
popf
mov
test
fstl
sti
arpl
lock
mov
sti
xchg
xchg
clc
jecxz
lahf
rcrb
loop
stc
jae
dec
sub
and
cmp
pop
dec
mov
outsl
imul
cmc
jns
pop
leave
and
or
fwait
bound
jnp
popa
inc
cli
push
pop
inc
jnp
ja
push
insb
je
lock
rol
lods
mov
mov
clc
sub
sbb
les
test
jb
fs
aas
out
pusha
int3
jmp
or
movsl
pop
mov
fcmovb
cmp
jo
xlat
inc
mov
fcmovnb
dec
outsl
xchg
xchg
inc
js
mov
mov
sub
mov
fcmove
sbb
adc
scas
jnp
lcall
sbb
decl
ss
xor
stc
leave
push
jo
push
es
in
xor
imul
ja
mov
movsb
mov
xor
cld
cmpsl
es
std
filds
arpl
out
pop
stc
loopne
test
adc
inc
jne
mov
sahf
lods
mov
loop
dec
dec
nop
cmpsl
adc
cmp
lahf
popa
mov
repz
insb
lds
iret
in
test
dec
fmuls
push
shlb
fsubr
aaa
add
into
sub
inc
jge
push
dec
dec
in
mov
sub
mov
mov
mov
arpl
add
fs
into
out
jae
fidivs
sbb
ret
data16
test
sti
movsl
or
outsl
adc
ret
cld
call
fsubrl
hlt
xor
imul
leave
and
cltd
mov
jp
jmp
shl
add
ret
out
popa
std
push
fdivrl
xor
andl
lret
cli
push
mov
cmp
pop
movsl
mov
mov
jle
xchg
sahf
cli
aam
stc
sbb
mov
bsf
iret
jb
mov
insb
jbe
fstl
inc
fcomip
xor
test
push
hlt
in
nop
and
in
stos
or
inc
mov
jmp
pop
push
icebp
std
arpl
mov
pop
movsb
jmp
lahf
pop
in
fwait
jmp
or
pop
dec
mov
and
mov
xchg
cmpsb
sarb
cmp
dec
and
and
xchg
loope
mov
jo
in
sbb
fisubrs
mov
iret
in
lock
mov
and
xchg
xor
cmc
inc
mov
pop
xchg
mov
push
int
fucomi
add
iret
jae
push
xchg
lea
mov
imul
push
or
mov
sbb
adc
pop
imul
fbld
loope
lea
call
or
scas
xor
pop
stc
push
xchg
pop
sub
data16
jmp
add
out
push
data16
inc
fcmovb
jg
jae
inc
out
xor
adc
in
mov
jo
in
sahf
leave
push
xchg
ds
lcall
xchg
add
xchg
aas
inc
sbb
cmp
into
das
repz
shrb
xorl
mov
jp
mov
push
cmp
inc
cwtl
add
push
mov
cmc
or
pushf
sub
pop
inc
je
test
xor
arpl
and
cwtl
sub
pushf
add
out
cwtl
push
mov
sbb
mov
cmpsb
dec
xchg
data16
imul
ja
es
adc
adc
xor
pop
add
idiv
xchg
or
mov
aad
xchg
inc
leave
adc
lds
imul
jge
shlb
dec
pusha
imul
insb
add
add
jbe
aam
sahf
sub
cli
es
sbb
sub
dec
adc
outsl
ret
adc
aas
icebp
sahf
or
pop
jo
xor
test
sbb
in
int
lods
xchg
jge
add
fisttps
icebp
cmpsb
lret
mov
imul
stos
push
scas
or
cmpsb
sbb
add
xchg
fstpl
in
in
divl
popf
idivl
in
lahf
lcall
dec
out
ret
xor
adc
aaa
out
jle
icebp
inc
xor
out
cmp
shll
push
sar
sbb
mov
ret
push
pop
mov
out
push
lret
add
jbe
lods
mov
mov
jmp
jge
adcb
mov
dec
adc
mov
gs
mov
push
out
push
or
aas
jno
lret
rcll
shll
sbb
xchg
or
mov
cwtl
shll
xor
cltd
movsb
in
jnp
insb
je
xchg
pusha
mov
sub
sub
lock
sub
pop
ret
push
jmp
or
pop
loopne
push
out
sub
mov
outsb
push
or
loop
push
jbe
mov
add
jno
mov
mov
mov
mov
bound
lods
jle
sbb
mov
cs
ret
fscale
cmovnp
scas
xlat
jns
jg
sub
daa
inc
jmp
cmp
and
mov
flds
cltd
in
pop
std
sar
pushf
ljmp
insl
leave
jb
adc
jp
inc
je
sbb
clc
loopne
xchg
pop
jge
push
int
mov
call
jno
aas
fldt
daa
out
in
lock
lret
loope
pop
or
fwait
cmc
mov
jge
jecxz
je
cmovle
pop
mov
mov
cmp
inc
js
mov
pushl
mov
xlat
mov
cmp
lcall
push
mov
xchg
mov
lret
fucom
aam
clc
lret
push
xchg
adc
xlat
imul
mov
push
jp
push
aad
push
pop
ljmp
mov
repz
jecxz
mov
mov
je
nop
and
outsb
push
or
mov
cmp
lret
and
out
xlat
test
aad
test
popf
lods
loope
jge
or
add
sbb
push
and
mov
mul
ljmp
in
shl
and
mov
clc
arpl
xlat
jbe
pop
rorl
sub
and
dec
push
in
cld
pushf
xchg
mov
pop
das
fidivrl
sub
or
pop
arpl
jb
fwait
and
and
cmc
add
jl
cmp
xchg
mov
leave
fs
adc
inc
fstpl
sub
xor
push
sbb
inc
fimull
jnp
movsb
inc
jmp
fdivl
enter
cmp
fs
inc
pushf
or
adc
icebp
cwtl
add
sbb
aaa
test
mov
fs
mov
fs
inc
adc
adc
iret
pop
sub
rcll
nop
clc
jnp
aam
test
adcl
dec
pusha
pusha
mov
add
or
ss
in
adc
dec
xor
and
ds
addr16
sub
incb
adc
inc
xchg
jp
xor
cli
jo
faddl
pop
mov
fcoms
cwtl
mov
adc
std
jbe
xchg
ds
xchg
lret
test
xchg
in
mov
xor
mov
push
pop
ds
push
pop
shr
insb
push
cs
flds
push
mov
lahf
pop
mov
imull
add
ret
pop
stc
and
mov
movsb
jg
mov
push
xchg
jge
in
xchg
push
push
sarb
jo
push
test
ds
in
imull
jecxz
fsubrp
cmc
adc
idivl
mov
repz
cmp
insb
fadd
mov
push
lods
inc
into
pushf
rorl
stos
push
imul
sub
js
and
mov
repz
push
xchg
push
xchg
sub
push
mov
aas
mov
mull
aas
movsb
adc
addr16
dec
mov
test
popa
rcrb
nop
shlb
stos
imulb
adc
iret
enter
jns
jbe
lret
js
in
popa
sub
mov
jae
clc
mov
pop
mov
xchg
pop
pop
fwait
lods
cltd
mov
jb
jle
lods
imul
iret
mov
fistps
sub
les
pop
inc
and
or
sti
test
and
hlt
add
mov
mov
imul
mov
outsl
jne
xor
or
leave
icebp
hlt
adc
into
scas
sbb
sarl
lock
test
sub
push
sub
fisubs
bound
xchg
jnp
mov
xchg
cmp
mov
push
pop
and
out
addr16
and
lock
pushf
mov
and
je
cmp
dec
sbb
rorl
call
cli
rcl
dec
or
sbb
pop
les
mov
xor
daa
jb
push
insl
mov
jg
pop
ja
mov
mov
scas
std
scas
mov
div
jge
pusha
jl
mov
js
adc
inc
ds
les
add
push
sub
outsl
int3
jg
cld
push
add
cmc
subb
xchg
loope
pop
jmp
cmp
or
sbb
xor
and
push
fcmovnu
or
sahf
fiaddl
cld
repz
push
mov
es
shl
and
sbb
cmp
movb
out
aad
in
test
loopne
shrb
dec
addr16
fnstcw
imul
scas
xor
aas
jo
call
mov
xor
in
sbb
in
xor
mov
cmp
ljmp
inc
out
imul
adc
outsb
push
jb
or
mov
cmpsb
addr16
add
xor
dec
push
cs
lcall
dec
sub
addr16
lods
scas
mov
ret
ljmp
jle
cmp
cli
and
push
xor
int
add
sbb
mov
fldenv
cmpsb
lcall
test
out
into
test
ds
dec
cmpsl
push
or
sub
xchg
mov
lret
pop
out
std
cmp
sub
repnz
mov
call
mov
dec
ja
jne
inc
mov
jge
inc
leave
push
xor
ss
inc
test
jp
out
loope
rcl
sahf
icebp
mov
jae
or
cmp
pop
adc
mov
dec
pushf
arpl
mov
nop
mov
inc
dec
pop
lcallw
lret
es
orb
or
dec
jge
in
jecxz
scas
mov
adc
xchg
iret
daa
cmp
test
mov
add
mov
cwtl
pop
fdivs
mov
push
popf
dec
sub
sahf
bound
jne
popl
cmp
nop
movsl
insb
mov
popf
data16
ffree
bound
sbb
pop
inc
pop
repnz
inc
ljmp
je
ror
fldl
mov
imul
push
out
pop
add
lea
jae
or
fidivrl
cmpsb
je
dec
adc
fdiv
fisttpll
shlw
mov
daa
hlt
stos
dec
lods
cmpsb
fdivrs
pop
lahf
fcoms
mov
or
jbe
cli
cmp
popa
roll
and
ret
mov
sahf
test
mov
xor
out
inc
and
addr16
call
and
cmp
ljmp
int
push
subl
jecxz
ret
fildl
mov
pop
lea
xchg
pop
test
scas
stos
lea
push
movsb
ds
inc
and
jbe
jo
or
pop
add
xchg
xchg
mov
out
push
adc
int3
pop
mov
pushf
inc
fdivrl
xchg
push
fisubrs
lcall
and
sbb
sub
fs
dec
pop
push
lock
cmp
cmc
mov
add
mov
add
cmc
xor
testb
cmpsb
push
cmp
push
mov
jo
aaa
pushf
scas
cmp
loope
mov
mov
dec
repnz
add
aas
out
imul
daa
cmp
shll
loope
testl
subl
dec
ret
sbb
imul
mov
subb
jns
std
rorb
jbe
dec
cmp
lods
push
mov
push
sbb
iret
iret
sbb
mov
jle
xchg
xor
mov
in
mov
inc
cmp
insb
sbb
mov
xchg
pop
and
mov
sbb
mov
push
pop
and
add
xchg
outsl
pop
gs
scas
hlt
aad
insb
lods
dec
pop
adc
mov
pop
dec
cld
xchg
pusha
mov
pop
lahf
xchg
inc
jb
sahf
mov
xchg
inc
adc
mov
inc
sbb
cmp
jp
nop
adc
aad
mov
rcrl
int3
mov
cmpsl
fdivs
fiadds
push
ljmp
enter
pushf
stos
pop
int
adcl
out
sub
in
mov
arpl
cwtl
dec
cmp
push
push
jg
repnz
arpl
pop
movsl
fildll
test
ret
and
shrl
test
jle
or
push
push
mov
push
push
ljmp
repz
sahf
push
test
enter
cmpsb
pop
lret
popa
xor
sub
mov
pop
adc
adc
sub
dec
outsb
icebp
jle
adc
je
sbb
lcall
mov
push
mov
int3
mov
nop
repz
mov
pop
stos
jbe
mov
sbb
pop
aas
test
push
pop
enter
xchg
xor
arpl
outsl
fisubs
movsb
adc
mov
xchg
push
popf
add
inc
adcl
cwtl
into
push
jg
push
cmp
shrl
sti
sub
lahf
mov
and
cmp
or
xchg
scas
xchg
lods
fldcw
jb
pop
cmpl
sub
pop
xlat
fwait
adc
xor
addr16
sub
nop
mov
push
inc
scas
jae
push
pop
jb
dec
std
jbe
stos
jge
or
and
testb
imul
pmuludq
inc
mov
stos
mov
loopne,pt
daa
mov
fisttpll
jbe
cmp
lods
leavew
xor
int
mov
jnp
sti
sbb
adc
pop
add
in
inc
popa
sbb
adcb
mov
mov
push
inc
ja
dec
sbb
sahf
sti
mov
movsl
enter
inc
sub
push
cs
lods
jnp
lahf
sub
xchg
arpl
inc
lock
push
inc
popl
sbb
imul
outsb
in
sub
fsubr
int3
ds
aas
cmp
imul
aas
add
mov
in
sub
imul
sbb
aas
in
loop
dec
mov
sub
adc
pop
mov
out
repnz
push
popa
enter
clc
cwtl
clc
mov
fsubrs
cs
enter
xchg
xchg
jne
xor
push
out
xlat
arpl
pusha
jbe
or
sbb
xchg
ret
cld
adc
out
sub
xor
xchg
jae
pop
mov
xor
adc
out
and
addl
les
adc
pop
movsl
outsb
and
and
dec
cmpsl
sub
xor
movsl
icebp
mov
cmpsl
mov
cwtl
xor
xchg
pop
fistps
sbb
and
dec
add
or
rorl
xlat
nop
testl
xor
dec
jno
xchg
push
mov
imul
sbb
adc
imulb
enter
cmp
mov
pop
mov
scas
and
jle
stc
pushf
adc
bound
inc
fdivrs
push
cmp
ss
scas
lods
or
or
inc
cwtl
add
pop
dec
pop
cmp
inc
lea
pusha
xor
jae
loopne
aam
decb
jns
fmulp
into
inc
arpl
xchg
iret
stos
imulb
into
lahf
pusha
add
aas
test
adc
fldpi
pop
testl
xor
xor
out
fsubrl
in
ds
in
sub
mov
mov
imul
sbb
inc
cltd
outsl
movsl
adc
shrl
sbb
dec
jl
jle
jne
mov
aas
in
add
repz
and
cmp
mov
mov
int
jg
cld
xor
test
xor
mov
scas
test
repnz
sahf
scas
test
xchg
cli
jo
das
sbb
xor
add
or
and
sub
fs
faddl
cmp
and
sti
xor
sub
lret
xchg
xchg
mov
js
pop
rclb
mov
and
jo
and
xchg
xchg
pop
sbb
pop
add
or
pmaxsw
xchg
clc
clc
sbb
pcmpgtw
rorb
fcoml
lret
stos
add
cwtl
mov
in
xchg
push
out
fxtract
mov
int3
ror
std
jo
and
adc
mov
jns
inc
mov
mov
pusha
cmpsl
addr16
pusha
gs
out
mov
aaa
mov
icebp
outsb
fistpll
dec
in
ret
mov
iret
jmp
inc
gs
sbb
repz
call
inc
icebp
sbb
fidivl
and
or
jbe
xor
test
pmaddwd
jecxz
test
popf
mov
mov
loop
je
mov
add
push
sti
inc
mov
pop
jne
loop
pop
cltd
movsl
sbb
sub
xchg
mov
and
scas
or
jmp
mov
sbb
mov
or
addb
in
xor
mov
jae
stc
add
lret
sahf
cwtl
popl
xchg
dec
repnz
pop
sti
sbb
push
xchg
gs
imulb
pop
shll
pop
loope
pop
mov
andb
adc
unpckhps
cmp
pop
pop
sahf
or
mov
jne
daa
cmpsb
or
stos
loop
addr16
mov
mov
push
add
ljmp
addr16
cltd
js
cli
dec
nop
sub
and
and
aaa
add
and
or
sbb
jg
sti
sar
mov
push
xchg
push
popa
aad
in
pop
jle
fs
cld
inc
mov
jl
aas
into
push
jmp
xchg
cmp
mov
insl
mov
xor
sbb
xor
sbb
lcall
rorb
jno
ss
push
adc
sub
and
dec
jle
push
mov
dec
sub
push
fwait
rol
in
push
fmull
aam
jg
adc
jae
les
cmp
xchg
pop
call
push
mov
insl
outsb
stos
cwtl
or
pop
add
sarl
jmp
mov
aam
pop
iret
or
xchg
push
aas
mov
rcrb
lods
push
ljmp
dec
mov
add
outsl
nop
inc
push
add
and
push
arpl
ffree
test
xorl
fxch
sbb
mov
mov
adc
and
int3
rclb
jg
cmp
imul
cltd
out
out
sub
mov
clc
decb
jb
out
push
jno
movsl
ds
mov
je
mov
mov
or
test
shlb
test
jge
jle
push
insb
push
std
cmp
jne
push
or
out
pop
ret
lods
pushf
rclb
jo
pushf
ror
jne
fadds
arpl
movsb
es
arpl
jge
or
loop
fldenv
xorb
mov
inc
das
jbe
mov
bound
mov
not
sti
test
xchg
in
mov
bound
add
sbb
jne
push
pop
pop
bound
fistps
pushf
cld
in
movsl
rcrl
rcll
lret
pop
xor
sbb
sbb
popf
loop
mov
es
mov
sub
cwtl
ljmp
testl
lret
inc
scas
inc
aaa
or
pop
inc
fldcw
jnp
ss
sub
insl
or
push
cmp
xor
or
inc
add
pop
mov
sub
cmp
cld
add
into
pop
aad
ss
adc
jmp
xor
push
out
imul
jns
mov
movsb
lret
rorl
cmc
stc
sub
popa
aaa
adc
add
xchg
pop
arpl
jne
in
loop
push
out
in
xor
lods
test
pop
cmpsb
dec
shl
repnz
jle
push
es
js
mov
les
ljmp
sub
enter
loopne
sub
dec
dec
mov
pushf
repnz
adc
pop
push
mov
call
sub
xchg
nop
mov
fdivs
shll
lret
insl
sbb
mov
iret
pop
or
xlat
rorl
lods
jp
or
cmovb
pop
push
fsub
adc
jbe
cmpsb
mov
sub
pop
test
dec
pop
jno
sarl
mov
pop
jb
pop
cmp
inc
sub
call
iret
addr16
mov
pop
fcmovnb
ret
or
mov
pop
push
jg
ljmp
push
inc
aaa
push
mov
pop
sub
nop
jmp
fs
addl
push
mov
int
and
mov
fsubrs
cmp
mov
xor
repnz
mov
and
xorb
shll
pop
nop
nop
or
lds
jecxz
lret
inc
mov
mov
mov
scas
push
stc
icebp
cmp
test
mov
dec
cs
mov
jne
cmp
sbb
or
xor
addl
aas
fdivs
mov
mov
fstpt
mov
push
adcb
cmovge
inc
lods
pop
rolb
pop
sti
push
faddl
xlat
mov
xlat
and
sbbl
sub
ret
cmpsl
fldcw
or
movsb
mov
add
ds
iret
daa
out
ficoms
pusha
and
loop
out
inc
inc
jo
addr16
pop
popf
sbb
ret
pop
icebp
mov
ret
loopne
inc
push
cmpsb
enter
int
xor
push
shrb
inc
mov
and
sub
js
sub
mov
sub
orb
insb
push
dec
mulb
add
out
mov
shlb
das
mov
cs
lods
js
push
mov
pushf
inc
ja
orl
push
hlt
dec
in
or
pushl
inc
xor
or
pop
inc
push
xchg
dec
push
je
fisubrl
test
lcall
hlt
orb
das
mov
shlb
mov
sti
test
xor
js
shrb
sub
inc
add
movsl
push
or
incb
test
xchg
test
pushf
push
into
add
cli
push
sub
xor
sbb
ficoml
outsl
sub
iret
push
dec
popa
dec
jle
adc
dec
mov
push
sbb
mov
or
iret
and
and
inc
or
iret
xlat
push
xchg
jbe
cmp
lock
mulb
fbstp
lods
loop
rcll
jbe
ror
or
cmp
jmp
aaa
movsb
mov
outsl
lds
aad
test
aam
ds
fstpl
cwtl
xchg
push
rcrl
or
cmpxchg
js
xchg
out
lahf
mov
lds
lods
inc
inc
divb
lret
loope
loope
mov
or
ds
out
lock
shrl
pop
inc
orb
push
inc
xchg
jae
cmpsb
jns
imul
jb
jo
cld
sbb
jae
aas
push
call
mov
cmp
lret
movsl
cmp
inc
lret
or
mov
cmp
sub
mov
dec
jnp
cmpsb
jg
fisubrl
fldcw
jecxz
push
mov
hlt
jle
or
out
sub
jp
adc
lret
adc
jno
sub
call
fimuls
stc
xor
xor
xor
ret
in
mov
or
or
test
sub
cmp
mov
lret
or
add
dec
test
dec
fcompl
xchg
test
arpl
sub
add
xor
mov
js
add
shlb
mov
xor
nop
pusha
std
xchg
xor
pop
test
ss
pop
testl
sbb
jl
add
or
push
add
sti
lods
sar
jl
fsubr
lret
push
repz
ljmp
les
arpl
aas
add
dec
cmp
and
das
sub
lcall
jp
adc
das
pop
icebp
push
mov
addb
mov
movsl
shrb
mov
test
xchg
push
aas
adc
jae
cmc
pop
push
xchg
mov
fwait
xor
test
push
les
jmp
mov
inc
shll
dec
ss
jmp
out
adc
test
or
imul
ds
sub
dec
outsb
lea
into
jle
cmp
mov
iret
test
xchg
data16
dec
push
sbb
idivb
aaa
adc
sbb
pop
jle
fwait
in
push
xchg
sbb
jb
sub
loope
xchg
xor
cmp
out
loop
mov
dec
sbb
or
mov
in
ja
and
scas
adc
or
adc
inc
and
shl
mov
les
jb
movb
jo
mov
mov
pop
dec
adc
xchg
leavew
mov
int3
js
call
push
ljmp
lock
xor
sub
les
in
arpl
xor
iret
stos
or
inc
fildll
push
mov
lods
pop
lret
or
and
addr16
fwait
push
xor
cld
mov
xchg
xorb
shrb
and
and
repnz
cmp
xchg
div
xchg
sbb
dec
out
mov
scas
popl
dec
lcall
popa
ret
jne
xor
fistl
jle
mov
test
mov
iret
xchg
push
clc
cmp
fcoml
movsl
and
sbb
mov
fcoms
in
imul
jg
xor
test
mov
mov
push
dec
test
pop
add
jae
sub
lods
leave
int3
push
pop
pusha
xor
or
xchg
lods
jecxz
xchg
sbbb
out
cwtl
ret
push
movl
ljmp
xchg
mov
lahf
dec
outsb
out
das
test
adc
test
popf
inc
sub
push
sbb
mov
hlt
leave
dec
iret
stos
movsb
mov
xchg
inc
mov
fiadds
mov
adc
sub
xchg
lcall
cmp
adc
out
jle
fcmovu
das
sub
cmp
push
push
sbb
std
arpl
mov
adc
ds
mov
aam
or
lods
les
mov
xorl
and
sbb
sbb
sbb
cmpb
jmp
cmpsl
mov
cs
adc
or
adc
jg
add
add
mov
sub
sbb
stc
xchg
lcall
shlb
and
or
mov
mov
int
scas
adc
into
stos
add
mov
subb
jb
or
pusha
cltd
adc
or
push
sub
fdivrs
pop
cltd
cmp
insb
jl
or
adc
cmpsl
test
imul
into
loopne
test
cmp
mov
aam
bound
sub
mov
pop
and
push
or
or
or
jbe
popf
ret
aad
push
mov
mov
pop
push
in
cmpsb
jle
and
fidivrl
int
int3
mov
pop
xor
inc
bound
aad
sbbb
movsw
or
jle
push
jo
ret
or
aas
repnz
mov
cmpsb
scas
xor
sbb
inc
mov
lret
outsl
idivb
loope
sbb
movsb
int
xchg
or
movl
mov
rol
bound
repnz
fcmovbe
xchg
or
jmp
aas
rcrb
mov
mov
sub
je
outsl
insb
repnz
push
out
idivl
and
jnp
repz
or
test
out
stos
xor
add
stos
xchg
mov
xor
test
test
and
imul
inc
aaa
insb
ror
adc
mov
sbb
out
mov
mov
cmp
sub
sbb
addr16
inc
inc
fisttps
in
movsb
jecxz
push
push
cmp
loop
pop
sti
int
repz
pop
dec
cmpsb
shll
or
das
sti
test
lret
je
stc
cmp
aas
add
xchg
popa
cmpsb
push
test
or
xlat
add
inc
xchg
shlb
inc
mov
mov
mov
or
push
fnstsw
or
mov
xchg
jae
xor
or
add
mov
sahf
mov
jo
lret
mov
movsl
push
push
pop
xlat
ficompl
pop
mov
mov
rolb
adc
ds
movsl
push
test
loopne
out
scas
jmp
mov
sahf
movsb
mov
xchg
pop
cwtl
mov
popl
es
xor
insb
add
fiadds
aad
inc
lock
add
sub
into
mov
cmp
xor
lahf
das
mov
and
cmc
xor
insb
fsub
cmc
or
in
or
pop
xchg
sahf
outsl
cli
jl
mov
mov
pusha
adc
xchg
in
add
xchg
sub
fwait
movsb
fcompl
mov
inc
rcrl
jmp
xchg
xor
lock
dec
xchg
mov
adc
and
lds
or
inc
icebp
fldl
add
fildl
cmpsb
adc
pop
xor
xor
ret
pop
fwait
loopne
pusha
cmp
imul
or
cld
pop
das
lds
push
int
aaa
jecxz
loop
bswap
pop
mov
movsl
ret
cmpsl
rorl
dec
icebp
add
xchg
mov
mov
outsl
lea
mov
stos
pop
xor
xor
hlt
add
add
mov
iret
fildl
cwtl
fwait
mov
add
jns
mov
push
jl
jl
es
add
inc
xchg
je
jns
xor
test
pop
sbb
cs
aas
je
xor
and
jb
mov
xchg
add
pop
aaa
cmpsb
clc
or
subl
dec
rolb
arpl
adc
dec
cmpsb
jg
mov
xchg
push
ficompl
adc
rcl
push
add
out
adc
xchg
or
xor
mov
xchg
fdivrl
jnp
adc
sub
adc
lahf
fsin
jae
out
add
aad
movsb
and
es
or
pop
add
fsubl
cmpsl
clc
jmp
or
loope
repnz
push
fildll
test
test
mov
das
movsl
pop
scas
rcrl
inc
insb
dec
push
fwait
les
adc
aad
mov
sbb
jl
xor
mov
lea
test
psllw
pop
or
mov
push
int3
push
pop
add
pushf
or
pop
aad
cld
out
imul
cmpsb
and
adc
sbb
mov
pop
mov
popf
xchg
fwait
jb
cwtl
leave
dec
scas
xchg
jne
insb
cli
mov
lahf
cltd
adc
clc
stos
sbbb
cmpsl
int3
mov
sub
cmp
int
call
pop
cmp
test
cmp
sbb
ror
add
mov
cmc
ss
cmp
aas
dec
addr16
push
leave
ret
mov
xchg
inc
xor
mov
sub
insl
push
pop
fisttpll
jno
cltd
mov
lods
adc
mov
cwtl
ret
std
rclb
mov
xlat
cmpsl
sbb
dec
lea
stos
push
mov
sti
js
push
pop
mov
cmpsb
xchg
cltd
adc
rcll
test
mov
int
jp
data16
mov
shrb
hlt
add
sub
or
pop
push
movsl
push
inc
push
repnz
mov
decl
addl
xor
mov
mov
sub
stos
data16
out
sbb
push
xor
icebp
and
fstpl
imull
enter
inc
xor
mov
nop
arpl
cmp
mov
cmp
ret
fisubrs
jle
movsb
iret
and
rcr
in
cmpsb
pop
push
imull
xor
mov
fs
adc
jno
mov
repz
shlb
mov
xor
xchg
repnz
xor
insb
stos
cmp
das
cld
pop
or
out
mov
divl
cs
pushf
xorb
es
push
or
push
fisubrl
pop
icebp
out
and
cmp
repnz
inc
movsb
stos
pop
and
pop
jg
xor
arpl
stos
mov
popa
or
dec
test
inc
fs
addr16
and
inc
push
lock
enter
pop
adc
inc
push
jmp
fsubr
sahf
push
xor
test
les
mov
mov
pushf
cmp
adc
push
cmpsl
data16
lret
in
mov
mov
cmp
movsl
adc
inc
cmp
movsl
sti
aas
jmp
adc
xchg
outsl
pop
and
xor
shr
stos
mov
roll
sub
cltd
pushf
push
pop
loope
push
mov
popa
fsubrl
out
cmp
push
icebp
insl
insl
sbb
ljmp
pop
push
sub
dec
or
push
cwtl
pop
xchg
dec
dec
cmpsb
cmc
mov
push
mov
push
or
xor
enter
das
jge
es
in
fidivrl
inc
adc
pop
push
push
cmp
push
adc
mull
and
and
inc
mov
aaa
mov
mov
stos
jne
mov
cmp
pop
xchg
or
mov
stc
inc
dec
jb
icebp
push
ror
pop
lds
or
les
cmp
sbbl
push
pop
xlat
jge
arpl
xor
mov
pop
popf
stos
cmp
ja
mov
xor
sub
inc
shr
xorb
popa
mov
inc
fdivrl
and
pop
pop
je
call
cmp
call
fs
ja
add
sbb
mov
shlb
dec
add
mov
mov
and
scas
stc
dec
movsl
mov
mov
mov
out
cmpsl
dec
shrl
mov
jp
add
movl
or
shrb
xchg
xchg
inc
adc
inc
aaa
sbb
pop
out
jns
sbb
sarb
sub
push
lahf
pop
clc
mov
out
pop
or
mov
in
fwait
div
clc
mov
scas
sahf
mov
xchg
push
push
stos
mov
pop
dec
daa
mov
mov
push
je
sbb
sarb
or
xor
jo
ja
inc
lcall
push
jns
add
xchg
inc
pop
imulb
adc
xor
std
mov
sbb
mov
pop
mov
les
mov
insb
popf
pusha
mov
inc
fdivr
sbb
mov
sbb
clc
sti
xchg
mulb
std
mov
mov
cmp
incb
jae
fsubrl
sahf
xchg
mov
in
inc
movsb
stos
push
out
int
xchg
sbb
mov
cmp
pusha
aas
cmp
or
mov
cmp
mov
in
mov
test
xor
adc
inc
cmp
cwtl
inc
jle
and
inc
fcoml
or
inc
ds
nop
or
mov
mov
mov
and
lock
call
mov
xor
adc
mov
sub
push
adc
gs
cmp
adc
inc
test
les
inc
pushf
xor
pop
xchg
sbbb
pop
scas
sbb
and
xchg
js
mov
inc
pop
cltd
pop
lock
js
adc
and
out
pop
dec
cmpsl
mov
cmp
mov
push
bound
jb
jmp
dec
xor
pop
imul
daa
aas
and
xchg
fnstsw
and
movsl
das
jbe
popa
stos
jbe
mov
ret
sub
sbb
scas
push
fs
adc
sahf
xchg
icebp
push
pop
jecxz
add
jl
mov
cli
stos
pushf
hlt
xor
mov
push
lods
addr16
les
adc
leave
mov
jmp
xor
sbb
adc
jns
pop
pop
arpl
mov
and
popa
jmp
movb
and
test
loopne
push
stc
std
enter
dec
add
and
ljmp
inc
mov
jnp
mov
mov
neg
xchg
sbb
mov
js
loopne
dec
jns
jmp
dec
mov
in
data16
mov
jmp
sbb
mov
mov
mov
xor
cmp
std
aas
loop
shlb
test
dec
or
adc
push
mov
push
xor
ret
dec
sarb
and
imul
fidivs
shlb
cmc
mov
mov
push
add
adc
xor
adc
scas
mov
mov
das
cmp
cmpsl
faddl
repz
int
loop
int
aad
xchg
lret
add
adc
call
mov
push
push
cmp
and
ja
pop
int3
sti
push
mov
test
jmp
arpl
jb
and
mov
bound
pop
mov
stos
lahf
insb
and
xor
std
scas
dec
ret
repz
les
sub
and
int3
shr
inc
mov
fisubrs
jbe
xor
fcoml
test
sub
sbb
stc
xchg
push
lret
cld
repz
into
std
sub
int3
mov
fidivl
arpl
or
sarb
fabs
mov
mov
rorb
xor
adc
inc
add
call
and
sbb
xor
mov
sub
scas
xor
test
dec
jno
push
mov
mov
xchg
cmpsb
hlt
pushf
mov
jge
in
aaa
dec
mov
pop
stos
push
mov
jp
sar
push
mov
adc
rol
stos
or
sbb
rorl
push
xor
cltd
aas
and
push
in
jnp
xor
imul
mov
sub
scas
fwait
repnz
cmpsb
inc
mov
inc
mov
adc
test
fldcw
xchg
push
mov
mov
addb
cmp
shlb
scas
xchg
or
gs
add
pop
lock
or
stos
xor
xor
daa
repnz
stos
pop
mov
stc
mov
xchg
bswap
xorb
gs
inc
lds
push
mov
jmp
orl
mov
out
pop
adc
push
lcall
imul
mov
lods
adc
sbb
outsl
jno
in
sub
and
or
aam
out
add
xlat
in
out
xor
loope
mov
aam
bndstx
call
inc
or
jb
lret
inc
outsb
lahf
mov
add
imul
add
call
jmp
mov
aas
lock
lret
push
pop
sahf
movsl
shrb
cs
mov
jns
xor
lods
mov
push
mov
pop
push
push
jmp
jecxz
ja
mov
ret
mov
outsl
mov
popa
ret
enter
pop
adc
stc
int
pop
mov
mov
je
es
cmpsl
lds
push
sub
xor
cli
xor
mov
pop
je
xchg
fwait
aas
add
jg
aaa
icebp
test
mov
scas
inc
add
sub
fcomps
aad
push
loope
aad
sub
mov
in
pushf
jns
je
inc
mov
ja
into
into
mov
mov
cli
andb
test
imull
outsb
dec
push
imul
sub
cwtl
aas
xchg
sbb
psubq
stos
sub
gs
dec
sar
or
insb
adc
xchg
inc
int
cmp
fstps
arpl
loopne
xchg
dec
into
addr16
stos
jno
add
idivl
sbb
outsl
adc
xchg
cmp
xor
repnz
push
jp
fsubl
fs
leave
or
xchg
fimull
jae
adc
cmpsb
fwait
insb
inc
pop
cmp
mov
loopne
jp
and
mov
cmc
loop
mov
imull
sbb
ret
test
dec
push
cs
mov
out
pop
cld
icebp
lret
mov
dec
repnz
daa
jae
mov
jge
sub
pop
leave
loopne
add
mov
mov
add
xchg
dec
cmp
cmp
sub
mov
ficoml
mov
inc
xchg
and
repz
in
lahf
mov
ds
das
pushf
mov
lods
xor
pop
xor
or
xchg
fildl
les
cltd
fadds
mov
scas
pop
mov
leave
cmp
iret
icebp
lea
fsubrs
dec
lods
mov
jle
mov
movsl
fmuls
repnz
inc
mov
flds
xchg
inc
pushf
movsl
out
pop
pop
test
mov
jbe
jp
push
add
lret
add
mov
and
or
mov
int
in
movsl
setne
jo
mov
mov
sti
dec
inc
jo
adc
cmp
push
loop
out
xor
or
xor
hlt
xor
mov
pop
mov
adcb
mov
je
les
jb
insb
adcl
push
neg
cmpsl
movsl
insl
out
repnz
hlt
std
jmp
and
int3
xchg
ffreep
sbb
lock
stos
scas
mov
dec
or
fistps
es
lods
ljmp
int3
in
imul
fisubl
testb
jnp
ret
popf
jl
mov
popf
jne
lea
mov
mov
cmp
dec
fisubrl
fcmovu
add
call
fcmovb
or
mov
jle
push
push
mov
push
stc
push
mov
into
mov
sub
mov
pop
adc
sbb
loope
daa
popa
ss
mov
repz
add
loopne
repz
sub
in
sbb
cmp
aad
leave
in
add
repz
sub
sbb
dec
sub
pop
pop
divl
xor
cld
mov
inc
xchg
lods
ficompl
xor
xor
push
adc
outsl
lret
add
jo
mov
mov
lock
or
dec
out
mov
rcrb
pop
rolb
pop
adc
insl
inc
std
out
pop
mov
sub
push
jecxz
push
inc
jmp
mov
out
movsl
sti
outsl
adcb
add
popa
popl
outsl
and
daa
stc
icebp
mov
cmpsl
imul
fildl
and
test
ficomps
cmc
push
lods
pop
cld
mov
insl
lods
arpl
cmpsb
mov
in
mov
mov
push
dec
andl
out
mov
arpl
call
push
mov
fdivrl
cmp
xchg
pop
pop
popl
stos
xchg
mov
or
push
addb
sub
jb
mov
xchg
add
xor
lahf
inc
cmc
lcall
push
std
dec
test
jge
cld
dec
js
cwtl
data16
add
sbb
mov
rorb
into
imul
sub
mov
les
lods
mov
movsb
inc
inc
push
pop
icebp
dec
pop
add
cmp
pop
sub
cmp
mov
dec
mov
inc
movsb
dec
scas
test
es
sub
inc
add
inc
out
jecxz
lcall
pop
push
call
leavew
outsb
rcrl
pop
sbb
outsl
sub
push
movsb
mov
mov
repz
add
repz
repnz
pop
out
je
movsb
push
pop
movsb
pop
pop
test
jnp
cmp
fbld
clc
inc
icebp
aad
xchg
test
fsts
lds
sbb
ja
push
mov
push
cmp
mov
insb
outsb
push
mov
or
loopne
aaa
push
fwait
hlt
clc
push
shl
xchg
pop
das
xchg
pop
pusha
in
iret
subb
cmp
shlb
gs
testl
loopne
push
and
mov
mov
fildll
imul
aad
out
push
stos
pop
cmp
scas
mov
pop
insb
push
popa
fiadds
pushf
xor
test
popf
lods
sub
mov
sub
gs
mov
lock
and
mov
js
xor
lods
sub
movsb
lds
iret
jno
add
push
sbbl
jp
fisttps
inc
fidivl
cmc
pushf
mov
fidivl
sub
aam
mov
movsb
pop
lret
xchg
lcall
mov
jbe
iret
repnz
push
fadds
xor
pop
xchg
pop
stc
fwait
mov
out
xlat
stc
mov
test
mov
jp
mov
mov
int3
sbb
sub
cltd
xor
rcrb
les
or
xchg
mov
cmp
pop
jbe
hlt
adc
sbb
inc
jbe
sub
pop
xchg
sub
testl
aad
imul
xchg
rorb
pop
js
xchg
cld
scas
push
dec
adc
xlat
scas
xchg
ljmp
out
inc
add
adc
dec
pop
adc
or
or
ja
adc
movl
ficoms
and
pop
push
mov
roll
test
leave
sub
out
xor
pushf
in
movsl
push
pop
test
int3
mov
xor
mov
adc
scas
or
aas
xlat
push
ret
sbb
iret
movsl
sbb
and
imul
sub
and
rcrb
clc
enter
xchg
loope
pop
enter
test
sti
jo
dec
in
adc
aaa
or
dec
xor
sets
cmpsb
int3
lea
dec
xchg
enter
popf
sbb
rcr
inc
nop
fimuls
bound
push
insb
fmuls
sbb
dec
gs
rorb
jge
and
xchg
mov
mov
xchg
xchg
loopne
lds
stos
xchg
lock
adc
jne
pop
xchg
lods
or
addr16
addr16
and
push
mov
aam
push
xor
xor
cmp
xchg
out
in
pop
push
lock
push
inc
push
sub
rcr
xchg
add
pop
test
aaa
cmp
ret
fdivs
out
cmp
mov
movsl
shrb
sub
aas
jno
jmp
test
jo
test
sub
dec
dec
sub
mov
rorl
xchg
sub
popf
cs
xor
neg
xor
xchg
mov
addr16
sub
clc
dec
mov
mov
js
or
outsl
push
push
mov
int
in
push
mul
inc
stos
addb
push
lock
adc
xchg
jnp
std
ljmp
cmp
sub
sti
ja
or
inc
in
push
pop
xchg
jo
mov
shr
sete
mov
cmc
orb
adc
std
pushf
roll
pop
andb
and
mov
imul
and
fldcw
xchg
sbb
shr
daa
insb
push
push
sbb
mov
add
hlt
push
lret
lods
aaa
push
pop
ljmp
or
pop
iret
repz
leave
xchg
pop
hlt
pop
xchg
xchg
and
jg
xor
jo
cld
mov
cwtl
xor
repz
fwait
ja
or
push
cmpsb
sub
pop
fidivrl
gs
jns
dec
sbb
jg
dec
xchg
xchg
and
cmp
add
push
fcompl
sbb
cmp
call
shrb
aaa
movsl
out
push
xor
sub
movsb
mov
mov
outsl
jl
inc
sub
jo
mov
stos
adc
int3
sahf
adcb
mov
fsubs
jl
xchg
dec
jge
adc
mov
cmp
fwait
lret
mov
orb
mov
gs
lds
add
cli
mov
ja
notb
xor
push
stos
aam
insl
cmpsb
shrl
jl
push
sahf
push
add
jo
stos
jecxz
ret
movsl
push
mov
push
pop
test
ficoms
adc
cmc
xor
xor
cmp
xor
mov
cmp
and
sub
push
or
pusha
les
or
xor
jp
movsl
inc
into
jae
mov
out
pop
pop
push
popf
cltd
push
cli
adc
push
jle
aas
cli
cmc
xchg
int
aaa
cmpl
in
and
pop
scas
mov
jle
add
sub
sarl
cmp
xor
sbb
or
adc
repz
xchg
lret
cmp
cwtl
or
pop
fmuls
in
add
les
xor
dec
mov
inc
cmpsb
lods
stos
rorb
arpl
test
fwait
xlat
fisubrl
lret
outsb
push
cmp
xor
fdivrs
popl
shl
in
inc
jg
mov
pop
dec
push
or
fs
lock
inc
add
inc
jl
les
fcmovnbe
es
and
je
jae
xor
cwtl
fsts
cmpsb
scas
fdivr
sti
call
fcom
inc
sarl
data16
cwtl
pop
dec
fwait
mov
fs
xchg
in
jecxz
push
sbb
or
hlt
inc
adc
insl
icebp
inc
inc
jl
xor
or
xchg
loope
insl
push
sub
xor
addl
scas
lahf
outsl
loop
cmp
iret
sbb
jb
rolb
lea
outsl
ror
popf
movsb
lock
cli
lods
mov
jno
movsl
shrb
les
dec
outsl
cltd
mov
cwtl
arpl
repnz
leave
jecxz
add
or
test
mov
lret
movsl
jbe
les
or
int
mov
inc
inc
inc
mov
mov
mov
and
push
shr
add
std
xchg
call
rorb
jp
push
out
sbb
cld
or
pop
sti
pop
push
je
pop
fcoml
add
dec
dec
xchg
cmp
out
xchg
inc
and
mov
mov
inc
out
int
lcall
mov
imul
fcmovnbe
mov
xchg
out
jecxz
cmpsb
xor
stos
pop
push
mov
imul
gs
jg
lods
and
dec
sbb
ss
out
pop
fsts
mov
dec
nop
outsl
and
or
out
clc
cmp
jecxz
sbb
adc
incb
insl
sbb
xchg
test
inc
xlat
aad
and
xchg
jecxz
imul
inc
out
jecxz
lods
xchg
push
loop
sbb
not
lea
dec
adc
daa
mov
clc
jle
loope
les
jbe
cwtl
aas
pop
aad
jbe
into
push
out
mov
add
mov
mov
movsl
cmpsl
and
popa
adc
roll
jae
or
hlt
out
jle
mov
sub
pop
add
inc
in
mov
popf
xchg
adc
jb
out
in
push
pop
or
push
ds
jg
imul
inc
mov
or
iret
popa
cmp
sbb
add
sbb
mov
test
paddsb
sub
add
mov
pop
filds
xor
push
cmp
jb
inc
movsb
jbe
jl
xor
xchg
pop
and
pop
mov
cmp
pusha
outsb
in
mov
inc
push
movups
int3
and
fidivrs
mov
daa
sub
std
add
mov
in
in
ret
aam
and
test
test
push
adc
popf
lock
jecxz
mov
pop
pop
and
imul
jge
in
insl
pop
mov
imul
inc
add
fsts
mov
je
push
mov
repnz
mov
add
dec
adc
xor
add
in
shll
aam
outsl
nop
fcoms
adc
dec
xor
adc
leave
negl
push
inc
add
orl
imul
sbb
pop
fnstcw
ffreep
mov
mov
add
fildl
xlat
or
push
add
pusha
mov
idivl
aaa
xchg
cmc
sbb
test
xchg
xchg
add
inc
shll
mov
popf
mov
out
nop
fistps
mov
pop
mov
out
fucom
pusha
int3
pop
test
fsubl
mov
and
pusha
hlt
xor
addr16
test
lret
sbb
inc
gs
std
dec
dec
xchg
jl
pop
lods
jge
fisubl
ret
cmp
xor
test
aam
in
lahf
mov
stos
xor
push
repnz
cs
loopne
pop
loope
cmpsb
xor
pop
pop
jns,pt
arpl
andl
xor
jne
mov
sbb
mov
int3
mov
in
lret
mov
push
pop
into
icebp
cmp
loope
push
xor
jne
dec
std
insb
xchg
ja
loopne
jbe
sahf
subb
xor
scas
push
jge
fadds
test
mov
lock
orb
add
test
icebp
out
pop
cmpb
mov
mov
stos
icebp
lock
test
in
pop
jmp
inc
dec
repz
lcall
xorl
enter
rol
xlat
sub
fcoms
call
int3
ds
lret
xchg
sbb
test
negb
idiv
push
and
fstps
jno
inc
js
rorb
adcl
out
sub
dec
adc
and
mov
stos
mov
fcompl
xor
pop
xor
shlb
mov
xor
nop
and
push
jmp
ss
mov
stos
into
pop
ds
enter
je
test
jns
test
in
or
shll
notrack
pop
pop
cmovg
and
int
dec
cmc
in
testb
inc
icebp
xchg
or
daa
out
cs
and
and
sub
add
cli
push
xor
cmp
insb
or
lock
and
cmpsb
stc
int3
ret
outsl
push
push
or
add
aam
sbb
or
out
and
cmp
cmp
mov
xor
or
pop
cmp
mov
fwait
shlb
imul
inc
das
mov
cmp
mov
jg
dec
mov
mov
std
rorl
mov
add
ret
aas
adc
ss
fisttpl
mov
cltd
push
adc
nop
mov
in
sahf
orb
cmpsb
in
lcall
shrb
insl
mov
lds
xchg
mov
mov
mov
sub
popa
xchg
push
inc
add
xchg
gs
push
sub
xchg
sahf
fs
mov
test
cmp
sbb
pop
adc
mov
ds
repnz
and
mov
lret
mov
adc
shll
ret
adc
sbb
mov
inc
ret
lret
inc
sub
sahf
mov
sub
dec
popa
outsl
test
orl
ficoml
loope
sahf
mov
insl
enter
jne
push
pop
ret
xchg
mov
pushf
pop
inc
in
add
call
inc
adc
ss
or
daa
stos
jle
xchg
rcl
scas
sub
mov
and
cmp
fildll
inc
lret
sbb
mov
and
sbb
jns
call
fmul
add
out
idivl
jmp
push
lret
arpl
dec
xor
aaa
mov
shl
mov
mov
jg
push
push
pop
mov
adc
pushw
test
insb
push
mov
aad
add
xlat
popa
mov
test
sub
test
cmp
rcl
sti
pop
loop
and
xlat
lods
push
mov
sbb
test
fnsave
push
ret
adc
std
pop
jle
sub
popa
dec
jno
dec
movsb
xchg
cmp
fs
xchg
ficompl
movsl
and
loopne
mov
xchg
push
push
push
add
popf
adc
xchg
pop
or
mov
addr16
dec
pop
clc
fwait
divl
xor
sarb
mov
incl
adc
push
mov
loope
mov
mov
sbbb
fbld
mov
mov
push
cltd
or
rorb
xchg
adc
pop
iret
scas
mov
sub
aaa
shlb
adc
in
pop
shlb
mov
sub
mov
mov
xchg
xor
xlat
push
pop
adc
push
enter
je
sbb
enter
cwtl
mov
inc
adcl
loopne
sbb
gs
adc
jp
pop
outsl
push
in
adc
mov
in
mov
pusha
add
or
into
dec
cs
popf
pop
jge
push
and
decl
cltd
fimull
scas
or
sti
aad
sti
mov
movsb
dec
mov
les
mov
cmp
cmp
or
push
int
fnstsw
sbb
xchg
cmp
xor
xor
rol
out
nop
sub
jl
push
into
mov
sub
test
push
adc
push
movsb
in
out
fcoms
jle
inc
xchg
push
dec
jge
stc
fwait
pop
mov
lock
jo
adc
xchg
lahf
in
jge
fldl
push
xor
mov
pop
inc
pop
mov
test
les
repz
xchg
cpuid
pop
fcoml
hlt
fnstsw
les
xchg
add
popa
outsb
dec
sub
pop
test
cwtl
stos
pop
outsl
loop
add
icebp
jmp
mov
jle
adc
xchg
push
and
and
test
ja
movsb
repz
ror
je
dec
aam
pusha
jl
or
xor
jp
xchg
dec
sahf
jg
pop
push
sbb
insl
inc
sbb
xchg
pusha
pop
and
pop
jp
jae
negl
mov
dec
test
adc
aaa
push
stc
ficompl
test
add
dec
sub
push
xchg
std
mov
mov
fs
outsb
inc
pushf
cmp
pop
mov
mov
imul
pop
sbb
imul
inc
cmc
mov
dec
hlt
jecxz
lcall
cmp
sarl
add
arpl
jl
or
sbb
fisubrs
sbb
imul
lcall
dec
aas
daa
xor
dec
xchg
mov
lcall
mov
dec
jecxz
daa
outsb
insl
jbe
outsl
pop
setbe
cmpsl
test
int
pop
nopl
cmp
cli
mov
mov
iret
add
xor
out
aam
push
jnp
add
jge
or
add
add
mov
out
and
aas
pop
push
daa
loope
jbe
xor
mov
out
jne
cmp
fbstp
and
loopne
test
adc
sbb
pop
or
mov
popf
inc
andl
mov
cmp
or
push
out
jecxz
pop
pop
test
insb
fwait
pop
loop
jae
inc
mov
movsb
xchg
pusha
repz
and
sbb
test
jmp
ss
clc
sbb
test
rclb
jg
addr16
mov
mov
jb
fildl
aas
add
push
mov
pop
insl
sbb
cmp
xchg
dec
push
aam
fidivrs
sbb
sbb
xlat
jnp
jne
mov
clc
xor
pop
out
loope
icebp
or
inc
jne
ret
jle
lods
jmp
xor
adc
mov
cld
arpl
loopne
push
xchg
call
mov
lahf
inc
push
cmp
movsl
sarl
testl
pop
adc
or
ret
lea
inc
cmc
iret
fs
adc
ss
inc
dec
mov
repz
test
and
xchg
mov
movsb
sub
ret
leave
pop
mov
out
xor
out
dec
sub
cli
jne
xor
fs
and
cmp
xchg
cmp
out
cmp
dec
mov
pop
inc
add
out
leave
js
pop
jmpw
push
or
add
mov
jg
mov
xor
push
pop
stos
call
fsubrs
lods
inc
xchg
dec
popa
arpl
dec
dec
push
lcall
mov
mov
jp
lds
aad
inc
dec
mov
xor
dec
jp
mov
cmp
inc
adc
pop
dec
cmp
jns
fsubrl
ss
cmp
jb
mov
or
adc
dec
int
test
jae
addr16
insl
das
jns
push
and
rcrl
add
xchg
jns
movsl
loope
adc
daa
jbe
mov
mov
push
pop
cmp
ds
ret
add
daa
push
mov
insl
je
inc
cltd
addr16
fdivs
dec
js
inc
mov
pusha
inc
mov
fistl
ss
sbb
rclb
add
jecxz
pop
xchg
adc
dec
dec
push
xor
ja
jmp
xchg
inc
jle
jp
gs
mov
gs
test
stos
jge
xchg
adc
loop
lds
sbb
adc
movsl
int3
movsb
jg
sbb
mov
rorl
pop
subb
nop
mov
xchg
adcb
pushf
and
pop
jne
or
jno
das
cmp
aad
add
addr16
sti
jbe
adc
jecxz
into
cs
sub
pop
pop
mov
mov
jle
shlb
or
jne
scas
aaa
lret
add
insl
sub
sbb
arpl
aad
pop
popa
fwait
stos
sbb
or
push
dec
mov
add
and
add
push
jmp
icebp
pop
dec
dec
add
sub
xchg
inc
jnp
or
push
pushf
gs
roll
sub
inc
push
pop
popf
aad
push
clc
add
jmp
jmp
test
aaa
xor
sub
mov
pop
test
fcmovbe
sbb
xor
mov
pop
lcall
repnz
mov
pop
xchg
xchg
xor
adc
dec
dec
dec
addl
xchg
jnp
push
dec
xchg
nop
inc
mov
push
xchg
sti
mov
jnp
jbe
push
adc
pop
xchg
into
divl
addr16
push
fwait
call
std
adc
mov
ret
test
and
stos
jg
rcrl
fcmovnu
scas
mov
rolb
lea
fs
enter
xchg
push
mov
adc
mov
push
jl
daa
loope
mov
lock
xchg
jp
cli
xchg
xlat
fiadds
js
dec
adc
in
push
ret
outsb
lcall
jnp
repz
idivl
lds
in
cmp
cmp
sbb
fnstenv
mov
push
fs
nop
loop
imul
addb
pop
pop
test
hlt
xor
leave
lahf
int3
cltd
xor
lea
jo
pop
push
lret
xor
jb
clc
jecxz
mov
imul
add
dec
scas
adc
ret
mov
mov
call
fsubs
sbb
sub
pop
lea
adc
mov
movb
fnsave
pushf
outsl
loopne
decb
cmp
je
mov
cmp
sbbl
cmc
movsb
jp
iret
inc
push
lods
pop
fmull
xor
push
add
jmp
out
cmp
xchg
data16
pop
pop
ret
repz
in
add
mov
ret
sarl
movsb
sbb
lcall
into
inc
cmp
loopne
pop
inc
lret
aad
addr16
and
aam
stos
rorl
out
sbb
subl
mov
stos
pop
jmp
std
testl
sahf
push
out
adc
xchg
pop
xor
xchg
jns
xorl
lds
loopne
repz
insl
roll
xchg
insb
test
or
popa
in
dec
mov
sub
xor
pop
mov
adc
jmp
aaa
in
enter
pop
and
sahf
in
divb
mov
repz
cmc
in
xchg
mov
mov
xor
mov
inc
test
sbb
mov
dec
stos
add
scas
cmp
xor
push
jg
jg
aaa
push
fstl
leave
or
in
sbb
ror
sarl
loop
xor
dec
xor
xchg
add
imull
cmp
or
mov
in
pusha
ja
int
inc
lea
test
test
sahf
fst
push
cmp
enter
lock
pop
cmp
mov
sub
mov
std
push
fcompp
out
cmp
nop
inc
enter
pop
or
dec
pop
inc
mov
push
mov
mov
lahf
pop
sbb
adc
jp
cmc
inc
xchg
aaa
sub
data16
add
mov
scas
rcr
and
shlb
adc
mov
lcall
mov
xchg
pop
mov
shl
jecxz
in
or
jle
jmp
icebp
loop
imul
inc
adc
mov
fisubs
mov
xor
and
jno
jbe
inc
andb
inc
mov
push
in
movsb
xchg
ret
xor
pop
ds
jg
push
mov
aam
out
lods
clc
mov
imul
and
in
mov
mov
flds
out
mov
ds
pop
aaa
loopne
mov
pop
and
jns
outsb
mov
push
add
jb
cmp
mov
repz
pop
jne
cmp
int3
test
or
enter
test
push
sbb
pusha
das
stc
fcmovne
lods
leave
xlat
ret
jg
fs
dec
mov
bound
push
push
cwtl
sub
ss
or
sbb
rorb
insb
std
mov
insb
pusha
adc
dec
les
negb
sahf
outsl
mov
sbb
jp
enter
cmp
insl
mov
cmpsl
movsl
aas
sub
js
mov
subl
dec
jle
imul
xchg
js
test
loope
dec
imul
test
adc
cltd
mov
jae,pn
or
loopne
test
cltd
mov
pushl
or
add
ret
inc
inc
popw
adc
inc
push
pop
dec
or
pusha
movsl
jo
cmp
ss
sbb
sbb
dec
cld
movsl
adc
int
rcll
sbb
inc
dec
and
push
xorl
popf
dec
pop
pop
ret
mov
pop
inc
mov
add
and
dec
lods
jb
repz
jbe
das
sahf
add
ja
adc
aaa
or
xchg
cmp
pop
sbb
sub
testl
sarl
jecxz
out
adc
testb
xchg
sar
jmp
aam
sbb
ret
int
xchg
push
push
insb
xchg
out
movsb
sahf
sti
or
dec
rcr
mov
fdivr
and
scas
imul
push
dec
and
fadds
and
adc
sbb
mov
cltd
cli
pop
cmc
pop
pushf
push
push
movsb
mov
jb
pop
mov
lods
loope
or
aad
shlb
scas
test
cli
gs
sub
scas
ficoml
fnsave
shll
adcb
cld
mov
fs
ds
push
and
or
pushf
push
out
das
jo
mov
cmc
cmp
inc
or
push
mov
mov
adc
sbbb
pop
cltd
leave
fs
mov
lret
fs
dec
xchg
mov
pop
pop
and
clc
add
xor
fadds
add
push
push
push
iret
aam
ljmp
push
jo
cmp
inc
or
inc
xchg
movsb
cmp
add
fildl
xchg
scas
push
sbb
mov
lret
and
push
lret
push
fbld
bound
adc
test
and
data16
cld
in
imul
stos
pushf
adc
cmp
ret
mov
xchg
xchg
jnp
xchg
and
adc
adc
stos
mov
inc
std
in
iret
dec
jno
xchg
call
outsb
adcl
xorb
mov
notb
mov
dec
fisttpll
sbbb
jae
add
shr
jbe
add
xchg
xor
pop
cmc
subb
aaa
or
push
adc
sub
mov
xchg
aad
jp
jb
test
lcall
imul
pop
jl
jmp
xchg
scas
or
outsb
xor
mov
dec
jmp
or
shrb
dec
cltd
popf
mov
sahf
lcall
xor
bound
mov
mov
sbb
dec
clc
mov
loope
sub
jl
sbb
fisubl
adc
inc
lods
xor
dec
adc
sub
mov
test
sahf
and
cmp
repz
lahf
aam
ja
sub
adc
jae
inc
loop
dec
mov
stos
mov
pop
pmaddwd
mov
ret
or
cmc
popf
xor
loopne
scas
mov
inc
mov
sar
lea
ss
sbb
mov
inc
mov
inc
jmp
dec
into
cwtl
xchg
repz
dec
mov
fstpl
mov
jle
and
mov
pop
shlb
inc
xchg
push
imul
stos
test
jmp
xlat
aas
mov
fdivs
lcall
gs
and
mov
mov
movsb
jae
sbb
movsl
pop
or
inc
mov
xchg
fisubrs
int3
push
cmp
sub
insb
mov
xor
dec
dec
lahf
dec
inc
ljmp
pop
xchg
push
jnp
inc
cmp
mov
jne
and
pop
fldl
ja
aas
jnp
mov
or
cli
dec
jns
xor
mov
or
daa
push
add
repz
stos
add
cmp
aas
cli
fdivrl
add
dec
fs
mov
sbb
mov
adc
arpl
cli
addb
jo
pop
mov
cmpsl
push
mov
push
sbb
cmpl
test
cmp
scas
add
push
adc
adc
aad
mov
adc
pop
sub
loope
mov
push
mov
mov
iret
push
out
pushf
inc
jne
dec
imul
push
faddl
fisubs
arpl
add
pop
cmp
mov
stc
movsl
add
pop
cmp
stos
aas
push
push
pop
push
stc
dec
inc
shll
adc
xchg
push
pop
sahf
int
addb
cmp
lds
add
jae
pop
xor
mov
mov
xchg
cmp
and
lahf
xlat
mov
rcrl
movsl
pop
xchg
lods
aam
xchg
sbb
stos
jno
pushf
or
outsb
mov
push
ja
call
stos
cmovl
outsb
dec
popf
push
dec
cld
testl
xchg
push
mov
jmp
aam
mov
mov
fimull
push
xchg
fisubs
test
mov
xchg
xchg
inc
pop
push
jg
lea
lahf
jg
push
addr16
jne
in
jl
lock
sbb
xor
aad
loopne
sub
sub
out
movsl
scas
mov
cmp
or
icebp
mov
adc
out
pop
es
iret
popa
sub
mov
gs
mov
push
imul
inc
mov
outsb
jge
insb
cmp
jo,pt
movsb
dec
push
and
insb
pop
cwtl
ljmp
xchg
pop
shrl
mov
and
cld
pop
mov
fsubrp
push
push
pushf
pop
add
fwait
outsb
outsb
jo
mov
mov
loope
insb
adc
xchg
xchg
repnz
add
cmc
push
xchg
icebp
jne
mov
enter
mov
ss
test
sub
test
data16
sbb
adc
aad
mov
cmp
int
mov
mov
stc
je
fiaddl
sbb
int
je
out
stos
push
in
inc
ret
jg
scas
aas
test
out
xor
fsubr
ret
xchg
cmpsl
pop
in
mov
ret
pop
jge
adc
xor
dec
xchg
daa
cmp
push
cmc
arpl
xchg
mov
jbe
sub
push
js
sarb
mov
xchg
cwtl
test
or
pop
jns
lahf
nop
jle
popa
cmpsl
xchg
insl
sub
rcrb
adc
aad
xchg
cmp
fisttpll
push
and
sub
sbb
repz
call
test
cltd
loop
mov
xchg
cmp
out
adc
xlat
rolb
imul
inc
loope
cmp
mov
mov
and
stos
sarl
gs
pop
mov
inc
mov
in
mov
lods
cli
push
rcl
mov
add
add
mov
fisttpll
lds
sbb
dec
in
daa
sbb
lock
lret
xchg
lea
js
in
test
in
sahf
cmp
push
inc
or
xchg
cmp
mov
js
nop
jns
test
xlat
fwait
jl
mov
shlb
mov
aas
dec
adc
dec
aam
jno
and
xor
cwtl
roll
sub
jle
arpl
pop
xchg
imul
xchg
and
push
das
ljmp
in
push
pushl
mov
and
xchg
int
popa
mov
xchg
inc
jns
mov
aas
pop
mov
dec
ror
dec
imull
xchg
ds
push
shrb
subl
push
ror
pop
push
push
xor
cmpsl
cmp
fsubr
cmp
pop
jno
or
cltd
loop
lret
inc
jno
pop
mov
insb
out
sub
out
mov
rcll
stos
call
mov
pop
imul
mov
push
and
mov
jg
insl
pop
xor
daa
xor
stc
xchg
clc
in
mov
es
addr16
add
jnp
lods
enter
inc
lods
mov
jle
icebp
cmp
dec
add
loopne
cs
cmp
cltd
fnstenv
sbb
cli
add
or
dec
fldl
adc
sub
adc
loopne
scas
fadds
lahf
push
inc
xor
lods
iret
scas
sub
add
and
and
insl
add
insl
sarb
cld
dec
cwtl
scas
les
xchg
mov
std
scas
pop
sub
push
add
push
mov
mov
push
dec
mov
scas
mov
test
jae
outsb
sahf
sbbl
js
cs
sbb
cmp
pop
mov
stc
mov
inc
ds
inc
icebp
add
test
dec
jp
xor
cmp
sbb
lods
push
ss
imul
adc
cmp
cs
jle
or
imul
mov
lcall
stc
aad
adc
or
dec
sub
repz
pop
pusha
push
daa
lea
push
ds
mov
mov
fdivrl
xor
and
in
push
pop
mov
sbb
lods
mov
jbe
jge
dec
add
lods
fucomp
lahf
mov
clc
pop
cmp
xchg
and
imul
adc
divl
mov
pop
dec
and
shrl
mov
pop
jmp
inc
mov
in
adc
or
add
andl
pop
out
xchg
and
aaa
ds
add
mov
aas
fsubrs
insl
ljmp
in
je
mov
jg
or
mov
inc
test
inc
movsl
sub
mov
clc
mov
jb
pusha
clc
pop
and
and
lea
push
leave
test
pop
xor
cmp
and
jp
or
pop
cwtl
mov
in
add
cmp
std
push
xor
inc
xchg
adc
aas
xchg
sbb
jnp
cmp
neg
inc
fistpl
jne
push
xchg
pinsrw
out
inc
and
and
adc
in
jp
lcall
aam
pop
mov
pop
mov
mov
cmp
imul
xchg
pop
lret
sub
fisttps
jp
xchg
int3
cmp
pcmpgtw
mov
add
mov
ja
dec
jle
and
mov
lret
jae
cli
pop
mov
xor
mov
add
icebp
mov
cmp
rcrb
test
lahf
shrb
cltd
sbb
cmp
roll
or
mov
push
test
mov
sbb
adc
sbb
inc
mov
pop
ljmp
and
jge
outsb
repz
loopne
fisttpl
mov
dec
inc
adc
pop
push
loopne
xchg
dec
test
dec
jle
repnz
loopne
clc
in
stos
aas
push
jbe
xor
push
add
into
daa
pop
out
mov
and
adc
aam
outsl
push
sub
pop
mov
ficompl
jp
jl
testb
es
ret
ret
or
inc
pop
jo
and
test
mov
sbbl
fmul
xchg
or
pop
movsl
cs
or
out
mov
jg
mov
iret
data16
aaa
mov
jbe
pushf
arpl
rcrb
dec
xchg
add
sbb
mov
mov
cmpsl
add
rcll
mov
xor
ja
insb
and
insb
testl
adc
das
or
dec
jno
lcall
sbb
mov
repz
in
jnp
rclb
jge
imul
dec
xchg
push
push
jl
fsubl
fildll
je
or
pop
fstl
scas
js
xchg
sbb
enter
jnp
cmp
repz
int3
lds
dec
bound
out
xchg
or
xchg
in
repz
mov
or
in
mov
icebp
lret
xchg
fimull
sbb
sahf
daa
xor
mov
adc
ret
movsb
pop
mov
sbb
mov
push
imul
test
push
imul
test
or
sarl
push
inc
inc
addr16
stos
xchg
cmp
stos
xor
hlt
sti
pop
adc
mov
and
loope
test
add
sbb
cli
hlt
mov
pushf
out
pushf
les
imul
cld
lods
mov
dec
insl
sbb
inc
or
add
cmc
lock
cli
inc
ja
mov
adc
push
je
stc
or
pop
jg
or
xchg
insb
lcall
xchg
jnp
push
fisttpll
add
mov
loope
mov
and
aam
lds
xchg
cltd
xor
sti
jno
mov
dec
or
cwtl
out
lock
lahf
ror
add
les
mov
sub
mov
adc
mov
fistps
out
bnd
mov
or
pop
cli
gs
stos
shll
jae
adc
xorb
fistps
xchg
sub
adc
mov
or
adc
arpl
xchg
inc
and
mov
lds
stos
and
jno
test
out
insb
enter
mov
cmc
lret
inc
or
adc
ficompl
sahf
lcall
mov
andb
adc
dec
subb
jl
xor
mov
push
cmp
pusha
dec
and
scas
dec
push
mov
pop
mov
ss
in
adc
mov
xchg
test
wbinvd
test
shll
lea
inc
sub
cmpsb
add
jp
add
es
into
mov
push
push
inc
nop
xor
xchg
mov
push
pop
add
ffree
sbb
xchg
xchg
sbb
mov
stos
enter
xchg
test
xchg
xchg
inc
push
inc
stos
add
or
rorb
fdivr
inc
or
xor
andb
aas
shlb
sbb
test
outsb
bnd
mov
in
std
ljmp
sbb
jne
notb
jg
mov
push
iret
mov
test
jo
push
repnz
sub
cwtl
rcl
fidivrl
lret
repnz
loopne
nop
sbb
sti
mov
push
cmc
sbb
mov
js
or
xchg
cmp
stc
push
movsl
cmp
imul
jecxz
push
add
jo
loope
rorl
add
dec
int3
pop
or
fdiv
push
cmpsl
pop
pop
cltd
jge
repnz
scas
xchg
inc
mov
cld
pop
push
mov
out
shll
or
push
iret
lods
jmp
jge
mov
push
mov
add
push
jl
call
ss
sti
aam
lret
sahf
addr16
mov
xchg
mov
jl
jne
xchg
inc
aaa
add
out
push
outsb
int3
or
stc
scas
jl
jo
movsl
test
movsb
addl
imul
xchg
imul
mov
std
jle
pop
cld
pop
lahf
test
xor
add
xchg
cwtl
insl
xchg
in
into
repz
ret
pop
xchg
sti
test
ret
push
dec
adc
stc
mov
adc
jge
sub
mov
inc
pushf
je
loope
sub
cmp
xor
rcl
xor
leave
cmp
negb
add
pop
aas
cwtl
lock
sub
lahf
xor
sbb
cmp
in
and
inc
jbe
mov
outsb
jg
sub
add
cmp
push
jl
fists
xchg
clc
adc
jae
inc
inc
push
mov
jnp
dec
mov
push
push
adc
repz
jne
jno
jno
dec
and
push
cmp
cmp
fdivs
push
int
and
sub
jmp
or
dec
pop
pop
std
adc
jmp
pop
mov
icebp
push
sbb
int3
mov
aas
andl
loopne
xchg
mov
dec
and
sub
mov
rcrb
loopne
cmp
sub
pusha
jmp
fdivl
dec
push
jne
mov
mov
cmc
in
ficompl
out
jl
adc
inc
push
xor
pop
lret
out
cmp
mov
adc
lock
cwtl
scas
jg
dec
inc
mov
stos
add
adc
mov
xchg
add
xchg
inc
push
jmp
adc
fsts
or
xchg
push
or
repnz
loopne
orb
inc
popa
pop
cmc
outsb
dec
fnsave
jns
test
inc
je
or
xorb
inc
stc
add
gs
lahf
lret
sarb
dec
cs
mov
xorb
scas
xlat
mulb
sub
and
std
out
aad
inc
es
push
push
das
or
mov
mov
mov
xchg
decb
xor
ret
pop
mov
mov
jno
aas
sub
mov
imul
pop
or
jle
sbb
and
fwait
test
in
aam
sub
arpl
jp
mov
aad
mov
adc
fs
test
clc
push
inc
ja
loop
in
inc
fisttps
cmp
mov
sbb
sar
xchg
and
mov
push
sub
aas
pop
mov
arpl
pop
out
mov
bound
repz
push
pop
jge
je
test
cmpsb
js
test
and
jg
mov
sub
cmp
int
or
xchg
xchg
lock
js
mov
dec
repnz
mov
mov
xor
pop
jg
xor
imul
outsl
addl
push
xchg
stc
sbb
cmp
mov
ja
cmp
jb
ljmp
cmp
addb
es
adcb
movsl
cmpsl
out
jno
imul
shlb
jae
xchg
xchg
mov
movsb
adc
push
sbb
or
mov
ss
lods
pop
stc
adc
pop
mov
xor
adc
loopne
lahf
sub
mov
lds
out
mov
fisttps
imul
jp
cmp
dec
test
mov
xchg
clc
mov
push
xchg
popa
imul
cs
shll
ja
fs
insb
out
mov
dec
cli
imul
or
mov
or
je
inc
sti
push
out
mov
push
xchg
sahf
mov
inc
mov
dec
push
mov
out
mov
cld
pop
cmp
pop
pusha
pop
mov
ret
dec
dec
xchg
fnsave
sarl
insb
insl
test
ss
xor
mov
mov
jge
cmc
shll
ds
xchg
sbb
and
mov
jecxz
pop
ret
cltd
mov
xor
jo
lods
mov
mov
cmp
ljmp
and
cmp
sbb
mov
in
lret
cmpsb
imul
push
cmp
jg
bound
inc
jecxz
hlt
mov
xchg
in
sbb
pop
stc
jae
mov
or
ss
ljmp
mov
inc
arpl
or
sbb
and
es
jge
and
add
mov
inc
test
hlt
xchg
shrb
das
call
js
sbb
outsb
out
cli
cmp
bound
icebp
data16
xor
out
stos
mov
push
mov
jno
jbe
push
jne
fldt
pop
sbb
fwait
or
repnz
movl
test
xor
imul
arpl
pop
insl
push
jge
lret
and
notb
orl
addl
sti
dec
repnz
push
jl
stc
insl
cmp
fmull
sbb
pop
jo
mov
adc
dec
fsubrp
loope
scas
lods
mov
hlt
push
mov
cmp
jmp
sbb
inc
mov
push
jge
in
pop
add
mov
push
mov
xchg
pop
push
call
jle
lret
dec
js
fsubl
cwtl
mov
cmpsb
or
dec
mov
pop
das
add
and
sub
ret
aam
std
jl
iret
aam
cmp
push
jmp
fnsave
fdivs
adc
scas
data16
ficomps
jne
push
pop
sub
dec
into
and
push
pushf
out
loopne
sub
dec
loopew
push
shl
mov
add
insb
rcl
push
mov
jo
lods
xor
aam
jnp
fwait
int
addr16
orl
pop
ret
js
sub
push
adc
aam
or
mov
push
push
dec
dec
cmpsl
lea
data16
mov
ss
mov
test
movsl
pop
jg
aas
jno
sbb
sbb
cmpsl
pop
in
fmulp
xor
mov
es
sub
or
mov
jg
dec
cs
in
jmp
icebp
dec
add
push
gs
ja
cmp
sti
inc
inc
ret
jns
ss
and
pushf
and
cmp
iret
jne
cmp
mov
cli
mov
insb
mov
adc
shll
mov
int
imul
or
mov
xchg
ja
sub
xchg
cmc
sub
fidivl
add
jae
loope
mov
mov
pop
cli
cmp
xorl
jno
je
std
shl
adc
jp
xor
pop
lahf
fisttpll
mov
xchg
js
push
mov
jb
aam
loop
repz
mov
insb
scas
xchg
stos
orb
jb
mov
mov
int3
nop
inc
cli
into
fs
and
sbb
mov
cmp
aad
sbb
pop
inc
mov
daa
shr
insb
cmp
jp
add
pop
pop
lahf
pop
inc
pop
pop
mov
push
das
pop
incb
orb
in
shll
hlt
push
pop
out
cld
aam
mov
and
xor
call
inc
daa
or
loopne
jmp
lret
jno
cmpsl
sti
lret
negl
cmp
push
or
mov
sbb
call
adc
std
sbb
rolb
dec
mov
shrb
adc
pop
jns
stc
inc
ret
sbb
jo
ss
lahf
mov
sbb
into
idivl
and
lret
jns
mov
movb
fldt
test
ret
in
cltd
test
cmpsl
adc
lods
and
or
test
jno
xor
jmp
movb
and
sbb
mov
dec
inc
jae
stos
iret
mov
jp
in
xchg
xor
jo
call
mov
test
xchg
pop
pop
iret
jo
iret
xor
push
divb
arpl
jmp
jl
mov
jl
out
sbb
dec
mov
into
rep
or
add
mov
adc
cmpsb
sti
cmp
jmp
mov
sbb
xor
aaa
aaa
adc
jne
lock
mov
shll
push
test
hlt
adc
insb
xor
dec
int3
mov
push
jl
movsb
xor
inc
xor
subl
sub
mov
call
jae
cli
stc
push
data16
push
iret
lods
addr16
pop
add
stc
ret
sahf
lcall
mov
inc
fstp
mov
and
push
xor
sub
cmp
aas
fimull
jecxz
pop
mov
and
mov
ret
aam
sub
mov
movl
add
or
je
mov
hlt
push
mov
inc
sbb
jp
add
xchg
shr
pop
test
rcrb
in
aad
outsb
and
push
sti
hlt
mov
mov
lea
ja
sub
add
pop
pop
xor
sti
in
das
cltd
int3
mov
cmp
adc
sub
imul
ficomps
add
dec
add
xor
into
mov
xlat
adc
rolb
and
popl
pusha
out
lret
mov
js
mov
je
mul
imul
gs
push
out
bound
cltd
out
sub
sbb
roll
aas
push
sub
scas
push
or
add
aam
cwtl
push
adc
mov
insb
mov
aad
std
or
inc
negb
je
int
mov
nop
imul
js
enter
mov
jno
fidivrl
inc
aaa
sahf
outsb
pop
jb
pop
inc
movsl
outsl
out
pop
dec
xchg
popf
adc
push
inc
imul
mov
ret
pop
out
sti
inc
lods
xchg
mov
mov
push
push
dec
or
dec
sub
sti
fdivs
adc
dec
fadds
int
cmc
push
xchg
scas
cmpsb
xchg
fwait
mov
lods
or
cld
push
push
push
out
ljmp
adc
and
mov
mov
ret
ja
shrl
aad
pop
dec
scas
adc
cs
or
dec
sti
je
xchg
add
xor
and
mov
es
mov
in
sbb
mov
ficomps
cmpsl
push
icebp
test
outsl
sbb
mov
je
mov
out
jno
rorb
jmp
dec
sbb
xchg
enter
push
daa
insl
mov
stos
add
mov
ret
js
dec
insl
sbb
scas
add
push
add
add
dec
pop
sarl
pop
iret
add
fucomp
sbbl
pop
sbb
clc
push
push
pop
jno
sar
mov
mov
mov
fwait
dec
xchg
pop
faddp
lds
add
push
dec
dec
xor
jns
mov
in
out
test
push
into
jno
xchg
or
stc
enter
out
rcl
or
faddp
push
icebp
popf
arpl
push
pop
cli
mov
mov
fidivl
hlt
sbb
xor
fldt
stos
repnz
xor
pushf
loopne
mov
aas
arpl
jge
pop
jl
cmp
dec
test
mov
in
int3
nop
push
xchg
mov
ficoml
inc
fnstsw
imul
lcall
movsb
sbb
scas
aad
leave
push
stos
dec
cmp
call
es
arpl
aad
inc
or
clc
xor
jp
adcl
arpl
dec
bound
dec
add
jnp
sub
clc
push
mov
fiaddl
cmpsb
mov
fstps
sbb
mov
pushl
adc
std
icebp
push
push
push
pushf
fxtract
loopne
neg
dec
loope
repnz
pop
aam
jns
jb
orl
nop
test
stc
sub
pop
jnp
cli
mov
xchg
xor
gs
hlt
scas
leave
inc
sbb
ja
nop
or
imul
push
in
test
or
aaa
std
push
xchg
mov
jle
arpl
or
lock
push
add
stc
fs
notl
cmp
test
stc
andl
or
and
out
and
mov
int3
les
out
gs
outsl
aam
jge
sub
fucomip
int3
bound
sbb
fstpt
in
movsl
enter
push
xchg
addr16
outsb
jnp
jnp
out
inc
call
insb
dec
pusha
inc
cmpsl
dec
cli
pop
push
clts
add
cmp
jecxz
jbe
mov
adc
cmp
sbb
stos
lock
or
fwait
xor
fisubl
cld
arpl
or
notl
lea
insl
mov
aaa
mov
cmp
and
inc
sub
pop
inc
shlb
pop
inc
xor
xor
mov
mov
pop
add
mov
sub
cmc
cmc
ret
mov
int
outsb
inc
cli
jecxz
mov
mov
dec
fldpi
push
mov
xchg
cwtl
push
sub
adc
xchg
mov
xor
insl
xchg
mov
cmc
in
inc
cmpsb
mov
xchg
push
pop
and
int
dec
jo
inc
iret
std
jle
xchg
push
or
subl
in
mov
sub
mov
mov
or
add
sbb
je
mov
add
mov
cmp
mov
negb
push
lods
mov
pop
cmc
add
rclb
sahf
leave
or
xchg
xchg
je
xorl
outsb
mov
push
pop
push
test
inc
sbb
enter
pop
movsl
sbb
pop
inc
andb
jns
insl
sub
loop
xor
fisubrs
cmpsl
add
or
push
stc
mov
adc
rorb
dec
pop
int3
jg
xchg
mov
adc
pop
out
lcall
dec
cmp
sbb
adc
pop
aam
enter
sub
push
das
adcb
xchg
popf
mov
jge
les
out
mov
push
push
lds
aam
lods
sbb
cld
adc
cwtl
ljmp
fcmovu
out
sbb
jmp
mov
incb
xchg
xlat
pushf
out
sbb
mov
inc
ljmp
xor
pop
pop
xor
xchg
cmp
xchg
mov
mov
dec
or
inc
jmp
add
loopne
es
sub
js
fiaddl
inc
das
xchg
pop
inc
push
fcmovnbe
add
adc
adc
sti
popf
adc
sub
scas
lods
inc
inc
divl
nop
rolb
dec
push
leave
out
inc
sub
lock
xchg
mov
aas
sub
movsb
mov
cmp
sub
lret
pushf
jge
hlt
pop
jbe
mov
cmp
sbb
jge
ret
out
cmp
mov
and
enter
les
mov
orl
pop
add
incl
popa
loop
jno
aad
cmp
mov
cwtl
enter
fcmovbe
mov
ficoms
shll
jae
icebp
pop
add
ror
mov
pop
icebp
fwait
push
stc
in
push
push
push
mull
jmp
inc
loopne
gs
mov
in
mov
je
mov
xor
insl
int
les
cwtl
push
cmp
push
out
pushf
or
mov
test
outsl
or
lahf
cwtl
outsl
adc
inc
aaa
repnz
test
cmp
fwait
mov
xchg
rcll
js
sub
inc
inc
loopne
add
test
dec
and
cwtl
std
xor
jno
adc
outsl
mov
fistps
loopne
sbb
push
lds
mov
or
lock
pop
ret
dec
aad
inc
aam
inc
test
xor
out
sub
iret
es
repz
and
je
loop,pn
addl
or
xor
pop
out
push
push
enter
lea
inc
add
sub
in
push
incl
xchg
insb
xor
psubq
cmp
jae
sub
mov
mov
sub
xor
testb
notb
fcmovnb
out
pop
mov
adcw
add
aad
cld
xchg
mov
cmp
jmp
add
mov
fdivrp
in
test
jo
call
into
mov
fwait
cmp
movsb
push
inc
mov
jp
lea
mov
dec
scas
adc
or
inc
jge
jge
lods
lret
jno
push
cmp
outsl
es
mov
mov
mov
into
add
test
adc
sbb
pop
fdivrs
ss
xchg
jge
or
mov
jbe
mov
out
push
pop
je
and
jne
xor
gs
mov
inc
decb
and
mov
jno
jnp
push
iret
adc
jle
addr16
test
mov
add
out
sub
push
inc
mov
movl
nop
enter
jle
xor
cs
loop
movb
sub
or
push
push
pop
pop
push
cmp
and
imulb
sub
jge
mov
xchg
jnp
aas
xor
jnp
xchg
xor
dec
dec
add
push
jbe
mov
mov
push
mulb
movsb
test
and
pop
lret
xor
and
rclb
jbe
pop
lods
inc
lahf
jno
je
stos
leave
out
fildl
pop
test
cmpsl
pop
push
movsl
decl
dec
and
or
das
sbb
loopne
bound
das
push
ja
shrl
mov
mov
or
mov
jbe
aas
cmp
test
jl
aam
xchg
pop
sbb
mov
mov
xchg
pop
stos
xchg
pop
je
sbb
sbb
pop
daa
sub
adcb
pop
inc
jp
sbb
in
xchg
sub
cmpsl
in
addl
lds
or
rcrl
out
dec
outsb
dec
mov
xlat
nop
pop
rclb
in
push
rol
sbb
scas
and
sbb
mov
dec
pop
es
add
aas
mov
cmp
sbb
imul
sub
sub
push
lods
lea
mov
xchg
call
sti
pop
sbb
loopne
popa
in
ret
add
push
add
mov
jmp
inc
hlt
sub
lock
shrl
imul
loop
add
sub
sbb
test
aaa
js
xchg
jmp
rol
jp
cmp
test
aad
imul
inc
xlat
xchg
cli
cltd
and
adc
mov
xor
ret
lock
divb
in
cltd
mov
shrl
leave
shrl
and
mov
xor
jge
push
pop
jg
xor
xchg
clc
dec
inc
aad
inc
dec
push
lock
sub
call
xchg
mov
mov
lods
sbb
xor
das
pop
mov
int
inc
daa
jg
pop
lret
aad
loopne
xchg
pop
sbb
pusha
sahf
or
xlat
fs
lret
jae
jle
or
imulb
and
es
andl
push
jmp
pop
aad
jo
sti
out
xchg
popa
loop
lret
popa
sbb
mov
xchg
ss
cmc
outsb
xchg
pop
mov
mov
rcrl
out
and
adc
ficoms
xor
sarb
dec
mov
orb
mov
jae
add
repnz
mov
pop
add
hlt
xchg
mov
sti
sbb
mov
andl
pushf
andl
mov
outsl
popf
ljmp
or
rcll
xlat
dec
es
std
sub
rolb
lcall
sbb
cmpsl
dec
or
stos
jmp
push
pop
out
inc
xor
into
xchg
xchg
sbb
les
and
outsb
clc
cmpl
xchg
pop
add
mov
cmpsb
les
int
in
adc
jo
mov
stos
aam
or
add
sahf
das
ja
jecxz
sbb
fcmovbe
pop
and
push
or
mov
lds
lods
pop
js
jb
in
jb
mov
sub
xchg
rcrl
movsl
jmp
adc
add
push
xor
stos
xchg
loope,pt
inc
sub
xchg
ret
fimuls
lret
cmc
clc
sahf
inc
imul
mov
push
push
cmp
adcb
xchg
mov
sub
test
xchg
xor
sub
imul
push
popf
lods
mov
jns
call
push
adc
out
inc
insb
or
popf
es
subl
data16
inc
divl
dec
jae
cmp
dec
dec
or
mov
stc
mov
pop
sbb
fs
lds
ss
rclb
ss
ret
push
cmpsl
sbb
aaa
stos
mov
jl
ds
lods
xor
push
jl
inc
pushf
cmp
cmpsl
enter
or
ljmp
outsl
pusha
sub
xor
xchg
cwtl
cmp
push
mov
decb
sbb
movsl
inc
sub
sub
mov
stc
dec
in
sub
or
or
and
leave
jmp
hlt
dec
enter
and
jp
add
add
jae
mov
push
jo
mov
or
sti
loop
mov
add
and
pop
add
pop
mov
jge
jecxz
jbe
and
push
add
pop
sti
adc
mov
scas
push
daa
mov
add
repz
xchg
jbe
pop
insl
sub
les
push
xchg
adc
sub
pop
xchg
and
out
out
lret
adc
xchg
or
xchg
stc
mov
sub
adc
andl
adc
filds
or
out
jnp
push
dec
test
fistpll
data16
xor
nop
lds
das
fdivrl
and
pop
mov
iret
das
dec
cmp
push
sub
xchg
loope
pop
push
test
pop
pop
jmp
rcrl
cmp
and
mulb
movsb
xchg
rcll
loope
jle
into
pushf
hlt
mov
jmp
icebp
cmc
pop
repz
and
in
aam
dec
mov
sbb
jns
sbb
subb
dec
sub
xchg
mov
and
cmp
sarb
inc
pop
fsubr
xor
outsl
xchg
mov
sarb
fwait
xlat
bound
sbb
imul
push
fimull
cwtl
or
fcoml
lret
lret
insl
push
lds
cmpsb
mov
xor
inc
fsubrl
push
jl
or
imul
neg
arpl
inc
and
fistps
in
pop
inc
negl
mov
aam
xchg
movhps
shrl
loopne
lret
in
adc
lods
pop
lcall
scas
gs
sub
inc
cmp
sub
fldcw
add
pushf
and
mov
enter
cs
fstpt
cwtl
xor
pop
xlat
shrb
fdivl
std
xchg
adc
in
sbb
adc
mov
cmc
and
push
in
cld
mov
inc
jae
push
ror
in
fwait
hlt
sub
dec
pop
lcall
rclb
add
jbe
out
sbb
cmp
jge
pop
jno
test
flds
jnp
push
negb
inc
dec
push
mov
jle
bound
mov
lods
adc
inc
test
fisttps
idiv
cwtl
sbb
sub
cmp
insl
movsb
dec
int
cmp
ret
enter
loopne
lea
add
mov
push
lea
repnz
int
rorl
mov
xchg
int
lds
stos
lds
outsl
xor
out
push
adc
test
jl
xor
aad
sub
repz
repnz
imul
lcall
out
mov
cwtl
loope
ljmp
mov
dec
ljmp
nop
sarb
mov
out
sub
mov
pop
loope
xlat
xor
or
test
jg
jp
js
push
aaa
mov
mov
or
mov
sub
outsl
aas
mov
das
sbb
lcall
xchg
sbb
push
dec
popf
repz
push
dec
inc
xchg
or
hlt
popfw
incl
insl
push
xor
outsb
xorl
out
cmpsl
rcl
inc
outsb
hlt
xor
mov
xor
or
jae
inc
and
cmp
popf
add
imul
cmpsl
or
or
and
pop
enter
jnp
popa
pop
pop
and
outsb
push
pusha
inc
xlat
pop
loop
add
dec
sub
jp
dec
in
mov
aad
out
cmpsb
xchg
fs
imul
test
dec
push
mov
xchg
lods
jns
push
inc
and
cmp
notl
mov
inc
jg
sub
push
pop
sbb
add
out
dec
movsl
pop
rorl
xor
es
xchg
sahf
push
cmp
in
mov
lea
add
nop
test
enter
mov
cltd
dec
inc
xchg
inc
or
or
jns
dec
aam
inc
arpl
ljmp
xor
outsb
sub
cmp
pop
jo
shl
imul
mov
sub
insl
and
aad
cmp
iret
mov
inc
lret
pop
inc
inc
ljmp
scas
sub
inc
out
fiaddl
pop
xchg
push
mov
pusha
out
mov
mov
or
loop
sub
stc
add
addr16
sti
jle
cli
fildl
inc
xor
dec
fxch
pusha
jnp
jp
adc
sub
fcomps
pusha
hlt
adc
and
sub
mov
sbb
addr16
xchg
pop
mov
mov
add
cs
mov
std
orl
dec
rol
dec
dec
pop
xor
or
out
mov
in
add
out
ret
mov
int
pop
fldl2e
scas
jmp
sbb
inc
jbe
jnp
xchg
mov
idivb
mov
mov
call
mov
xor
mov
lret
imul
rclb
stos
popa
sbb
xchg
push
shll
roll
sbb
adc
push
inc
ret
out
push
jp
mov
sti
movsl
push
jo
cltd
in
fwait
cmpsb
in
inc
fimuls
repnz
fldl
rcll
cmc
clc
mov
push
dec
sub
xor
jnp
xchg
adc
rcl
xchg
aas
and
add
mov
pop
incb
mov
bound
fsubrl
ja
or
jae
fdivrs
cmc
movsl
lahf
pop
xor
xor
in
dec
xchg
testl
jmp
int
sub
clc
sub
sbb
in
jl
mov
out
sti
daa
inc
xor
sbb
outsl
outsl
xchg
or
pop
cmpb
sbb
lcall
jg
mov
jp
insl
rol
or
mov
cmp
jl
xor
orl
cmp
xchg
std
shlb
mov
push
pop
push
jne
push
xchg
scas
iret
aaa
decb
push
gs
jne
in
lods
push
push
iret
mov
cmc
or
mov
jge
xchg
xchg
cmp
and
es
pop
inc
in
test
inc
out
lea
xor
or
pushf
cli
inc
xor
cmp
into
fiadds
inc
jns
pop
clc
fisttpl
pop
and
popf
adc
lahf
outsl
xchg
push
push
cmp
shlb
and
mov
nop
and
add
sub
aas
repz
loop
std
mov
in
fidivrs
mov
lret
sub
inc
mov
mov
sub
movsl
out
shll
lcall
cmpl
in
scas
xorb
xor
mov
sub
add
mov
dec
mov
lea
out
fldt
dec
adc
loop
xor
sbb
mov
faddl
push
inc
jmp
mov
xor
pop
gs
repnz
cmpsl
jge
repnz
fnstsw
not
pop
pop
xchg
sarb
mov
add
frstor
in
cmp
addr16
cltd
bound
pop
and
pop
lret
shlb
leave
xor
lds
mov
xorb
and
popf
jp
xor
push
movsl
xor
fldenv
xchg
into
cmp
sbb
aam
testb
in
sbb
mov
call
int
fdivrs
mov
mov
in
dec
push
sub
sarl
jge
cmpsw
push
xor
jbe
xchg
dec
setge
mov
fs
ret
cmp
insb
mov
loop
fiadds
js
ss
shlb
cli
clc
cmc
pop
or
jns
adc
int
int3
cmp
mov
lea
sub
addl
stc
cwtl
mov
sbb
fstpl
outsl
sbb
ljmp
inc
sub
out
js
mov
sub
movsl
insb
inc
inc
xchg
pusha
mov
add
push
movsl
push
or
dec
xor
mov
data16
movb
dec
rcrl
mov
jo
xor
xchg
cmp
adc
inc
fmuls
insl
push
push
dec
cmp
dec
pop
inc
push
adc
inc
cld
cmp
adc
adc
mov
lods
orb
mov
or
fdivr
aam
jne
sarb
cli
inc
pushf
mov
push
mov
lahf
sub
popa
cmp
mov
rcll
fisttps
pop
mov
rcrl
xchg
xor
call
dec
and
mov
lods
mov
dec
fsubl
jnp
mov
mov
xchg
pop
aaa
int
imul
call
sbb
notb
jge
mov
sbb
pop
add
mov
and
xor
fstps
mov
xchg
sbb
test
push
adc
into
dec
push
xchg
je
gs
and
push
xor
lea
cmpsb
call
mov
add
inc
lcall
xor
and
stos
or
xchg
mov
push
outsl
in
lcall
mov
outsl
fs
inc
aam
push
lods
movb
nop
ret
aad
sbb
in
dec
fnsave
xchg
pusha
aad
mov
or
lahf
scas
scas
cmpsb
ret
repnz
sar
jmp
mov
pop
jae
pop
out
adc
mov
xchg
mov
mov
mov
dec
dec
mov
jb
subb
add
insl
aam
add
cs
and
lahf
push
addr16
leave
push
nop
pop
mov
dec
or
mov
shll
in
loope
xlat
loope
outsl
scas
mov
pop
and
jae
nop
push
inc
mov
mov
nop
xor
clc
adc
push
lret
cmc
push
inc
add
jns
data16
mov
adc
add
add
out
pop
push
mov
out
std
fistpll
insb
pop
xor
iret
shlb
jnp
call
mov
insb
das
pop
jb
orb
fstps
addl
pop
mov
add
jmp
inc
cli
bound
loop
and
fsubrs
fidivl
sub
fadd
jae
sub
insl
pop
jmp
faddl
ja
int
xchg
xor
and
dec
testb
pop
xchg
mov
sbb
ret
inc
dec
or
loopne
sbb
loop
xchg
cmp
test
pop
insb
push
stos
inc
scas
fldenv
dec
sahf
movsl
mov
cmp
adc
negb
mov
loope
cld
add
push
inc
add
push
stos
dec
scas
dec
test
stc
clc
push
jge
add
insb
movsb
lea
insl
lds
cmp
les
xchg
stc
and
or
mov
sbb
cmp
aad
sub
adc
bound
faddl
or
imul
mov
hlt
xor
jns
jbe
push
mov
pop
mov
clc
pop
orb
ffree
xlat
inc
int
fsub
cmp
sbb
add
jns
xchg
ds
pop
push
lea
fiaddl
pop
ret
addr16
dec
pop
push
aaa
inc
ss
test
sbb
imul
jbe
test
pop
push
xlat
adc
lods
dec
add
test
cmc
dec
mov
in
popa
in
movsb
mov
test
cmp
pop
scas
inc
pop
jne
push
mov
arpl
imul
jae
xor
lcall
push
fsubl
push
fistps
jno
inc
aad
cmp
xchg
into
ds
inc
dec
jg
fidivrl
fcomps
add
cli
adc
jne
push
fimull
loop
ljmp
pop
scas
or
rorb
xor
addr16
test
cli
pop
xor
pop
push
fidivrs
cltd
push
cmp
pop
xchg
dec
mov
cltd
imul
add
push
mov
movsl
mov
cmpsb
push
sub
cmp
cmp
jbe
push
sarl
hlt
jecxz
dec
adc
pushf
xchg
decb
stos
stos
xchg
call
cmp
rorl
jns
fwait
mov
or
in
dec
cmp
rcr
mov
sub
lock
dec
sub
and
mov
les
rcrb
jecxz
cmp
add
pop
cli
sub
aas
clc
xchg
hlt
and
gs
dec
in
je
insb
sahf
sbb
aas
out
ret
movsb
xor
pop
jne
loopne
cmp
pop
rorl
sbb
cmpsb
repz
add
lahf
add
pop
add
push
out
pop
and
fstps
or
inc
pop
pusha
adc
ret
xchg
lods
rcll
je
lds
xor
ds
movsb
jbe
adc
cmp
and
push
repnz
mov
jmp
and
popa
enter
mov
mov
and
aaa
push
cmp
mov
insb
xchg
aam
pushf
push
add
ret
and
sub
cmp
test
xchg
push
mov
sub
jns
lcall
cmp
imulb
pop
into
cmc
stos
bound
sbb
lret
xor
repz
iret
icebp
ret
mov
movsl
inc
sbb
xchg
adc
je
sub
mov
ret
push
int
sbb
mov
outsl
pop
or
sbb
xor
mov
imul
mov
das
bound
imul
add
sub
and
insl
and
dec
stc
mov
repz
or
or
mov
mov
sahf
test
xchg
add
push
pop
fdivp
aad
xchg
les
call
sbb
fisubrl
sbb
fstps
fs
mov
dec
aam
pop
out
aam
mov
jno
sarl
add
imul
adc
add
and
std
mov
and
lea
sub
shr
aaa
pop
sub
xor
out
pop
repnz
lock
inc
mov
ret
xchg
jmp
inc
xor
lods
arpl
pushf
jge
outsb
and
and
cmp
push
es
idiv
adc
and
add
sbb
mov
pop
push
mov
mov
cmpsb
cli
inc
shrb
pop
je
movsb
movsl
out
arpl
push
mov
pop
das
add
lods
fcoms
push
arpl
pop
sub
mov
cld
push
mov
adc
add
mov
inc
xchg
cltd
inc
test
mov
or
pop
repz
push
mov
lcall
cmp
lcall
mov
es
jle
or
push
ja
add
ret
mov
jge
mov
icebp
xchg
pop
mov
push
inc
or
sub
aad
sub
imul
cli
lds
mov
imul
cmp
jmp
and
push
cmp
cmp
iret
xchg
add
popf
fsts
pop
push
insb
mov
adc
cs
out
dec
or
ss
fcoml
shufps
sahf
and
shll
cwtl
cmp
cmp
inc
cmp
or
ret
mov
ror
or
and
idivl
stc
sub
adc
jecxz
jae
add
in
mov
lcallw
les
xor
xchg
fwait
movsb
sbb
mov
pusha
loopne
mov
aam
dec
fsubrl
or
jg
out
mov
pop
aad
mov
mov
lahf
jnp
jmp
sahf
loop
sub
mov
insl
ja
xor
or
aas
fisubs
ljmp
mov
jle
fwait
dec
movb
jge
sahf
cmp
push
cld
pop
jecxz
lret
add
cld
jae
sbbb
xchg
dec
push
addps
or
cmp
fwait
mov
xchg
jnp
dec
fildll
xchg
dec
push
jmp
pop
sbb
andl
xlat
shl
cmp
js
inc
daa
dec
fsubs
repz
arpl
out
or
cmp
push
mov
add
jecxz
adc
mov
pop
mov
popa
ret
imul
cmp
push
mov
rcrl
mov
jl
movb
dec
mov
xor
xor
popf
adcb
fisttps
hlt
pop
inc
pop
sub
and
hlt
pop
popf
shrl
inc
and
mov
xchg
add
lods
xchg
inc
cmp
leave
lods
aaa
mov
aas
sti
repz
lcall
sbb
sub
fcoml
cmc
cmc
shll
pop
sbb
adcb
add
mov
hlt
jle
and
sbb
orb
lods
mov
and
mov
int3
add
out
sbb
inc
push
shl
sbb
fdivrs
xchg
jbe
subb
add
cmpsl
or
fnsave
ljmp
add
imul
cmp
sbb
inc
loope
data16
cmp
xchg
daa
notl
js
shr
inc
data16
daa
pop
fisttpll
jecxz
loope
adc
mov
cltd
stos
fld
jns
aad
and
push
mov
cmp
push
es
or
lret
pop
sahf
scas
push
mov
cmpsl
sbb
lock
adc
sub
jle
xlat
xchg
inc
mov
mov
lret
fcmovnu
cmp
cmp
push
push
pop
sti
push
hlt
mov
inc
adc
pop
xor
out
sbbl
in
fbld
test
imul
mov
leave
adc
sub
adc
push
xor
scas
xor
stos
dec
enter
push
jno
pop
aas
adc
mov
jb
push
mov
push
dec
sbb
dec
cmc
insl
push
push
mov
jae
outsl
and
mov
xchg
mov
or
add
stc
mov
dec
push
cmp
and
popa
xor
mov
dec
xchg
mov
sahf
insl
lds
adc
mov
adc
xchg
and
test
fs
push
jge
jg
fisubl
sbb
add
add
jb
sbb
fwait
mov
add
sbb
xor
bound
push
mov
mov
int
test
mov
add
iret
mov
rorb
sub
or
mov
add
call
xchg
out
pop
ret
cs
mov
xchg
push
and
daa
loopne
push
jl
jecxz
xchg
js
pop
das
test
dec
iret
or
lcall
dec
sahf
jae
fsubp
out
ds
test
mov
outsl
inc
fildll
scas
popa
es
mov
sub
or
icebp
xchg
insl
sub
jne
fsubl
out
test
mov
cld
cmp
cmpsb
enter
std
loope
pop
jmp
inc
out
pop
out
aad
rcpps
pop
sub
inc
call
daa
shrb
imul
jge
xor
xchg
fistpl
mov
cmc
adc
maskmovq
push
mov
cmp
cld
popa
inc
or
adc
es
pop
ret
xor
sbb
and
xchg
push
nop
jno
movsl
push
js
push
dec
roll
push
mov
xchg
inc
hlt
pop
dec
push
cmp
ret
fmull
jmp
mov
mov
mov
mov
mov
jo
mov
and
mov
jge
subl
add
ja
mov
insb
cmpsb
fistpl
lret
stc
gs
icebp
pause
jns
in
inc
mov
aas
inc
mov
ret
dec
mov
and
pop
push
fcoms
dec
test
mov
test
push
dec
sub
loope
lock
mov
add
lcall
imul
cmpsl
insl
cs
lods
xor
clc
sbbl
xor
lods
xchg
out
lods
cmp
imul
add
es
cmp
jmp
data16
jg
ja
int
gs
push
xchg
adc
filds
jle
cmp
aad
mov
cs
scas
imul
clc
mov
push
repz
mov
xchg
or
push
jno
shll
push
in
sbb
inc
inc
int
in
loopne
sbbb
mov
aas
mov
adc
sbb
rorl
jnp
movsl
and
jnp
push
testl
dec
loop
mov
shl
daa
add
xchg
cmp
stc
push
add
mov
push
shll
out
nop
nop
cmpsb
adc
fs
inc
and
mov
rcrb
sbb
scas
fidivrl
call
rcrl
repz
dec
call
xor
dec
and
add
sub
cmp
mov
adc
mov
or
idiv
sahf
cmp
mov
jle
and
mov
outsl
and
test
pop
ds
jge
ja
lds
rorl
push
fcompl
xor
pop
sub
add
shll
and
pop
lret
push
out
ret
fdivs
add
cmovs
mov
fidivrs
pop
and
add
sub
aas
call
inc
pop
xor
outsb
arpl
xchg
icebp
lods
pop
scas
repz
dec
push
jge
dec
mov
movsb
jbe
mov
push
ret
pop
mul
push
out
popa
xchg
push
or
notl
shll
cmc
cli
jl
dec
mov
daa
sarl
testl
sbb
push
sbb
push
addl
out
mov
aam
popf
xor
cltd
sbb
scas
cwtl
cmpsb
lods
inc
pop
pop
add
pop
pushl
xchg
jns
mov
adc
shrl
mov
cli
fldcw
cli
push
rcl
cmpsl
add
pop
jg
fstpl
cmpsl
mov
pop
jbe
add
jecxz
mov
cmp
sbb
das
fisubl
push
enter
pop
jns
xchg
fsubrs
test
outsl
mov
dec
stos
add
ss
mov
xchg
pop
add
sbb
sbb
pop
sbb
pop
jns
push
out
add
mov
orl
xchg
fildl
es
inc
inc
out
push
cmp
orl
pop
pop
in
push
mov
stos
or
add
and
lcall
pop
adc
andl
mov
aad
test
shr
sub
out
push
pop
and
and
pushf
or
in
push
addb
xchg
inc
push
sub
push
mov
data16
push
lods
mov
test
inc
std
arpl
jno
add
jns
add
push
cltd
pop
sahf
dec
mov
push
adc
imul
jne
cmc
iret
pop
test
fcmove
sbb
pop
rcrl
inc
push
push
stos
ficomps
ljmp
stos
jae
ret
and
ror
test
xchg
mov
cmpsb
xchg
sub
ret
popa
xor
dec
arpl
dec
popa
and
pop
dec
das
fisubs
pop
cmpsl
lcall
arpl
fstpt
xor
jae
aas
cmpsl
sub
mov
sub
push
xor
sub
xor
stc
push
fildll
ljmp
sub
mov
mov
xor
lods
jns
mov
ss
jns
lahf
sti
fisubl
adc
mov
and
imul
cmp
int3
shrl
jle
mov
sub
or
jmp
xchg
dec
mov
call
mov
cmp
jl
loop
inc
sbb
cmp
and
sbb
dec
lods
sbb
xor
sbb
push
mov
insb
sub
incb
xchg
and
adc
inc
and
cmpsb
dec
out
jp
cmp
mov
insl
dec
cmp
sbb
push
movntq
out
mov
sbb
pop
mov
scas
mov
mov
push
adc
cltd
scas
sbb
rcr
je
roll
xor
pop
mov
insb
cmc
fnstsw
loopne
ja
shll
push
lods
dec
iret
cli
addr16
xor
push
icebp
lcall
xchg
sbb
jp
jle
mov
add
mov
cmpsl
daa
inc
stos
outsl
sbb
iret
or
testl
sub
sub
sbb
lcall
mov
push
mov
or
adc
in
es
iret
or
jno
loop
adc
pop
or
addr16
mov
adc
dec
jnp
push
jo
mov
loopne
fsts
ljmp
fwait
dec
sbb
lret
xor
rclb
and
leave
es
mov
push
cmp
or
adc
subl
dec
popf
pop
mov
aaa
jae
lds
inc
shrb
xor
mov
mov
jno
adcb
ret
aaa
or
sbb
jl
sbb
xor
andl
sbb
clc
xchg
xor
addr16
dec
xchg
imul
pop
adc
int
std
push
xchg
dec
jp
mov
lds
loop
pop
xchg
mov
and
jb
nop
dec
sub
jmp
lret
or
clc
or
cli
ja
popf
mov
or
sub
sub
in
mov
add
scas
inc
xor
data16
dec
xor
frstors
popa
add
inc
sub
sbb
mov
push
out
ss
adc
xchg
ret
aad
nop
and
sarl
sahf
push
mov
rcrl
xor
inc
mov
rclb
mov
pusha
jae
mov
cmp
push
add
imul
pop
mov
cmp
push
push
mov
lea
jno
fcoms
aad
jno
inc
xlat
sbb
xorb
addb
jge
fs
pop
jl
loop
cmc
adc
dec
andl
loopne
aad
jl
mov
scas
mov
mov
gs
cmp
cs
mov
into
jns
imul
adc
outsl
mov
and
les
fmull
cmc
mov
pop
jecxz
js
pushf
cmc
popf
std
cmpsb
ficoms
pushl
inc
xchg
mov
cmp
jo
mov
xchg
mulb
xchg
fdivrl
subl
adcl
add
and
mov
or
movsl
leave
shl
mov
addr16
jo
cld
mov
outsl
and
adc
fldt
fists
xor
ret
mov
pop
outsb
pop
cli
outsb
frstor
adc
or
mov
jge
movsl
imul
push
dec
lea
xor
aaa
test
and
test
push
scas
scas
jg
inc
cmpsb
std
adc
or
rsm
mov
shrl
inc
xchg
cltd
xor
xor
enter
popa
repz
mov
lds
pop
xor
icebp
sub
and
stos
xor
mov
pop
lcall
punpckhbw
out
mov
push
and
push
rorl
scas
sbb
sub
clc
pop
popf
movsl
jecxz
sub
xchg
ret
adc
lcall
mov
rcrb
adc
ret
outsl
lods
iret
adc
pop
mov
xor
out
xchg
mov
cli
stos
jge
scas
les
ss
sbb
fs
ja
push
jp
test
push
subb
dec
xchg
sbb
popa
mov
push
dec
std
movsl
aaa
loop
and
loopne
fbld
pop
ret
mov
dec
mov
insb
fadds
cld
cmp
dec
inc
mov
add
and
sub
pop
sbb
pushf
xchg
xchg
aas
xorb
push
into
pusha
pushf
addb
jnp
cmp
les
lods
in
add
mov
mov
cwtl
or
inc
outsb
push
test
fdivp
fimuls
jge
mov
adc
fs
outsl
jae
out
or
sbb
shrl
lahf
xchg
cmovne
jb
jl
stc
push
mov
dec
jnp
inc
jae
push
add
and
sbb
test
repnz
sub
js
cwtl
cs
and
sub
push
cmpsl
fmull
dec
or
push
add
mov
pop
xor
xlat
inc
fmuls
sub
inc
fisttpll
aaa
cmpsl
subb
add
xor
dec
cmp
push
sub
add
cmp
ds
in
mov
push
push
mov
gs
xor
cli
xor
add
push
in
fldt
lahf
ss
inc
mov
test
int
call
mov
sahf
adc
mov
ja
inc
mov
das
cmp
scas
stos
inc
test
gs
test
dec
cmp
jecxz
nop
sbb
js
or
xchg
addr16
repnz
or
mov
int
insl
push
inc
or
mov
inc
cld
popa
and
icebp
inc
push
test
cmp
jae
mov
or
movsb
int
rcr
and
push
and
leave
mov
add
jl
mov
test
and
mov
loope
mov
push
pusha
push
cmpsb
sub
into
inc
jl
mov
stos
inc
adc
add
rclb
adc
cltd
shlb
jns
imul
jmp
bound
sub
addr16
push
test
movsl
push
xchg
lret
or
rcll
dec
push
or
lcall
jno
jo
cs
jo
inc
adc
pop
cli
lods
aam
adc
xor
or
xor
push
pop
shr
insb
call
pop
and
add
inc
mov
push
pushf
cmp
push
jbe
xor
or
add
pop
inc
xor
adc
mov
add
dec
or
dec
ds
out
sti
outsl
pop
push
lods
sar
enter
lret
xchg
cmpsl
inc
jecxz
fwait
push
xor
cmp
and
and
shll
sbbl
and
or
jb
cltd
cwtl
divl
rorb
mov
push
mov
lock
cwtl
mov
scas
mov
ret
push
sub
aam
dec
lret
dec
or
add
or
mov
mov
rcl
mov
insl
sub
leave
or
je
inc
mov
movsb
dec
cmp
xlat
xlat
call
pusha
lea
enter
adc
push
mov
xchg
imul
lods
cmp
add
cli
pushf
dec
andl
jg
arpl
fwait
jle
lcall
push
sti
mov
call
repnz
imul
jb
mov
sti
shlb
insb
loopne
scas
jecxz
or
push
jno
add
in
jecxz
std
das
inc
jnp
lret
xchg
in
mov
mov
imul
rol
lea
jp
xor
mov
mov
push
test
test
ljmp
fdivrs
test
arpl
sbb
adc
pop
lret
lea
xor
push
push
adc
mov
stc
mov
adc
adc
jbe
dec
lahf
mov
testl
les
out
push
std
mov
ret
sbb
mov
pause
ftst
cmp
stos
lahf
adc
sti
mov
xchg
xor
xor
outsb
movsl
lcall
imul
xchg
add
inc
scas
pop
jns
enter
push
xchg
sub
or
or
das
outsb
repz
add
bound
jmp
adc
mov
cmp
mov
insb
push
mov
popl
lea
dec
or
pusha
in
sub
aaa
test
adc
cld
jb
inc
in
push
dec
fadds
outsb
frstpm(287
xor
or
mov
cmp
push
adc
xor
enter
pop
hlt
faddl
xor
pushf
mov
dec
mov
clc
insl
inc
dec
lret
push
xchg
mov
out
jmp
stc
xlat
cltd
mov
movsb
pop
mov
test
lds
jno
insl
xorl
lods
orb
mov
mov
adc
int
adc
inc
aas
jmp
push
mov
add
push
out
sub
mov
mov
mov
into
adc
inc
cmpb
jge
mov
adc
xor
dec
call
sbb
pop
test
negl
mov
push
push
out
inc
push
inc
xchg
sub
adc
or
jne
pop
pop
mov
fucom
fstpt
or
push
push
stos
push
aas
and
fisubl
or
sbb
push
mov
add
jbe
data16
push
adc
jle
lods
push
loopne
mov
dec
test
add
cmp
iret
icebp
stos
pop
mov
ss
cmc
jae
pop
pop
xor
lods
add
sbb
mov
inc
cmp
in
imul
gs
mov
adcb
movsb
sbb
repnz
cmp
sub
cmpsb
aam
inc
jl
data16
mov
out
cmp
bound
dec
jns
jmp
idivb
jl
fs
adc
pusha
jno
cmp
jmp
pusha
mov
ljmp
fldcw
stos
lods
mov
sub
and
addr16
ss
stos
rclb
pop
pop
mov
pop
jne
push
rcrl
out
rclb
and
hlt
pushf
xlat
push
mov
ret
adc
iret
pop
outsb
iret
inc
std
mov
orl
lahf
movb
mov
push
mov
rcr
ret
cmp
addr16
lods
xchg
stos
inc
cs
lea
jp
cld
sub
insb
je,pn
sub
sub
test
push
outsl
xor
dec
repnz
out
mov
sbb
jo
pop
je
sbb
push
es
popa
fstps
jne
ds
and
push
mov
int
jo
incb
adc
or
pop
jecxz
adc
lret
xlat
pusha
fbstp
movsl
in
cld
lods
fs
outsb
push
push
sbb
les
fs
pusha
in
add
sbb
leave
mov
sbb
iret
push
jne
add
out
enter
mov
or
inc
outsl
movswl
mov
mov
imul
ds
lods
xlat
xor
test
pop
mov
adc
int
fldt
xor
push
adc
bound
mov
sarb
ss
add
push
mov
push
pop
sub
aaa
pop
fistps
sub
push
push
adc
dec
inc
jg
dec
hlt
add
cmpb
push
bound
dec
or
outsb
cld
and
aam
repz
xor
jmp
xlat
sbb
sbb
jl
loop
jecxz
add
mov
call
xor
sub
roll
add
imul
xchg
out
push
mov
ljmp
ja
push
push
add
inc
adc
jge
outsb
in
cmc
fcompl
pop
fstl
add
push
insl
ljmp
push
sub
or
mov
je
lods
dec
ret
std
or
sub
gs
mov
mov
jae
lcall
lock
adcl
inc
test
nop
inc
aaa
test
xchg
ds
xor
jmp
es
imul
es
ja
adc
lds
fisubrs
cwtl
dec
fbld
add
push
add
loop
inc
mov
cld
ret
mov
into
and
lcall
adc
xchg
mov
jne
sub
dec
outsb
sub
xchg
iret
add
pop
pop
outsb
mov
mov
into
in
or
call
rorl
push
fimuls
cmp
cmp
sbb
adc
xchg
cmp
xor
jns
xor
addr16
ret
jp
mov
subb
push
test
cmp
sbb
imul
inc
push
shll
mov
mov
loop
outsl
pop
jb
in
add
notb
shrb
or
cmp
cmp
and
mov
jge
pop
sahf
push
cmp
mov
xchg
push
ljmp
lods
xlat
sub
push
lret
adc
outsl
push
je
imul
shl
data16
and
imul
flds
cmp
adc
and
hlt
fsubs
mov
xchg
sbb
xor
xlat
dec
and
test
stc
into
leave
xchg
jmp
mov
les
lcall
mov
jnp
push
pop
mov
cltd
rorl
inc
push
sbb
test
jno
aas
enter
fs
sub
bnd
cmp
mov
aam
dec
jb
add
shl
adc
testl
fldenv
xchg
adc
push
jae
rcr
cltd
jo
cmp
xor
xchg
ss
lahf
cmp
adc
jno
and
inc
push
int
dec
popa
push
push
ror
xchg
lods
cld
pop
out
lods
mov
xor
jne
fstl
xor
movsb
jnp
fcomp
fisubrl
sub
sbb
mov
xor
cmp
bound
mov
mov
les
icebp
push
in
repnz
loope
cli
cmp
or
lds
or
push
sub
incb
mov
aaa
out
int3
push
and
pop
mov
sbb
dec
and
movsb
jo
in
cmp
mov
xor
cmp
outsw
jmp
jl
loopne
in
sub
dec
pushf
sar
dec
sbb
movl
sti
data16
dec
or
inc
mov
jge
loop
cmpsb
dec
aaa
fsubrs
pop
pop
stc
rclb
leave
aad
xor
mov
mov
ret
repz
and
jae
aam
and
or
cmp
fdivl
xchg
push
cvtps2pd
jnp
push
addb
fimull
xor
cmp
stos
adc
out
sbb
adc
inc
pop
sbb
pop
sbb
sti
cltd
xor
mov
mov
data16
or
loope
sbb
or
pop
das
loop
jno
dec
gs
pop
sbb
xor
lcall
sbb
push
jge
frstor
adc
cmp
dec
push
mov
scas
dec
sbb
or
adc
jp
and
sbb
clc
scas
dec
das
pop
or
sti
pop
adcb
in
inc
cmp
mov
sub
in
add
rcl
jg
add
ret
xchg
lret
sbb
mov
and
outsb
ss
fcmovnu
or
flds
jmp
fwait
inc
out
dec
mov
ror
nop
ja
or
sbb
pop
pop
sti
scas
mov
outsl
daa
mov
cmp
push
dec
push
push
inc
scas
push
xchg
jb
out
xor
push
ss
push
push
mov
test
ja
push
or
mov
xor
sahf
pop
lea
and
test
je
cmp
or
std
inc
jns
stc
xor
dec
ja
shrl
inc
mov
ljmp
popa
mov
sar
test
sbb
lea
mov
ret
inc
sbb
rcl
mov
out
pop
ljmp
xor
mov
sbb
add
adc
pusha
mov
inc
pop
jl
push
or
stos
push
cmp
ja
add
push
js
out
leave
sbb
jnp,pt
xor
and
std
xchg
sbb
mov
insl
mov
sbbb
mov
jb
insl
pop
xchg
push
test
cmpsl
mov
and
mov
push
in
adc
inc
xor
shll
out
mov
pop
leave
rclb
or
ja
xchg
popa
ffree
sti
xchg
shll
insb
push
vcvtsi2ssl
inc
jae
filds
xchg
in
sbb
xchg
mov
jle
sbb
pop
pop
or
inc
aad
adc
orb
mov
push
in
or
and
nop
fiaddl
out
mov
xchg
fstpt
nop
in
in
inc
aaa
xlat
mov
jbe
inc
movl
scas
arpl
dec
idivb
fwait
imul
jbe
dec
into
or
stos
and
inc
push
sbb
adc
adc
sahf
mov
orl
jbe
dec
cmc
dec
outsb
cmp
or
xchg
jbe
mov
add
sarb
notl
mov
outsl
mov
ljmp
mov
xchg
sub
notb
pop
add
mov
xor
inc
shlb
push
rcll
loope
jl
pop
call
fadd
lcall
roll
and
and
pop
pop
aam
mov
xor
ljmp
jbe
mov
out
push
pop
mov
ja
mov
test
push
xor
adc
mov
je
rclb
cs
cmp
cwtl
dec
sahf
inc
stos
adc
adc
sbb
dec
loop
mov
inc
jle
jae
fidivl
aad
dec
push
scas
hlt
xchg
dec
cmp
mov
test
mov
hlt
and
cmp
cmp
cmp
aas
pcmpeqd
push
xor
jno
adc
mov
dec
mov
add
imul
andb
mov
jge
out
stos
in
in
mov
hlt
dec
mov
pop
cmpsl
into
mov
jae
inc
push
pop
mov
pop
inc
fs
jecxz
xor
or
add
lods
cs
movsb
out
sbb
cmp
fldl
jg
cli
pop
xor
push
lea
add
mov
xor
ficoml
test
aad
fisubl
sub
mov
std
dec
sub
pop
sub
jo
pop
sub
fbstp
jge
pop
cmp
aas
xchg
dec
popf
adc
mov
xchg
in
push
sahf
ss
push
test
add
sarl
fidivrs
mov
cmp
subl
push
jnp
sahf
cltd
in
std
ljmp
bound
inc
mov
or
dec
add
test
add
lock
in
repz
insl
cmc
enter
sub
cmp
mov
and
stos
or
test
cmp
pushf
push
es
pop
scas
ljmp
mov
adc
mov
cltd
out
jae
jb
mov
inc
cmpsl
cmpsb
pushf
and
jp
aad
mov
stos
pop
inc
rcrl
in
fmulp
nop
mov
dec
add
add
scas
push
lock
insb
pop
add
mov
xchg
mov
xchg
andb
fnstenv
mov
and
rclb
mov
pop
in
jl
cmp
mov
mov
subb
repz
xor
imul
cmp
ret
lock
mov
cmp
stos
into
push
push
pop
xor
aad
pop
xor
lods
jo
movb
xor
pop
jnp
jnp
xor
dec
adc
cmp
mov
and
in
dec
mov
adcb
je
mov
sahf
in
ljmp
je
outsl
and
xchg
xchg
dec
cmp
cmp
les
xchg
pusha
sahf
stos
or
jl
mov
push
out
mull
and
mov
add
add
jnp
fldt
out
lods
mov
fiadds
aad
add
dec
pop
inc
mov
lret
mov
dec
js
or
xchg
xor
out
jnp
lret
pop
push
pop
bound
mov
lods
sahf
xor
sbb
mov
aas
loope
ds
std
and
aaa
adc
imul
repnz
inc
ret
call
flds
das
outsb
xor
call
cmp
mov
pop
or
or
sti
or
out
and
inc
dec
add
xor
cltd
std
sbb
sbb
jle
xor
aaa
andb
or
insl
aad
dec
sti
insl
push
jl
repnz
stos
sub
outsl
sbb
mov
xchg
lea
mov
cmp
xor
test
xchg
add
cmp
lods
push
insb
pop
hlt
cmp
dec
mov
or
int3
mov
aad
les
lea
jo
mov
shll
dec
push
sbbb
outsl
nop
mov
ja
js
xor
cmp
das
or
inc
sbb
mov
pop
and
and
cmp
lods
cmp
pop
cmpsb
dec
in
or
mov
leave
enter
adc
jbe
inc
fs
cmp
sub
xchg
add
rcr
cmpsb
add
dec
sub
jecxz
sub
inc
lods
lods
xchg
insl
ficoms
pop
mov
or
and
adc
and
call
jmp
add
adc
int
repz
mov
cmpsl
movsl
push
in
xor
mov
imul
push
sub
inc
insl
cmp
inc
subb
adc
enter
outsl
mov
jp
incl
xor
push
xor
insl
mov
loop
jns
hlt
aaa
xchg
addr16
add
add
xchg
pop
subl
movsl
test
or
test
lcall
or
inc
shl
rcrb
add
xor
cwtl
push
out
sbb
cmp
adc
or
test
lret
lahf
popa
add
ret
mov
cmp
jae
insb
sub
inc
scas
jp
cmc
jnp
sub
lds
or
mov
sbb
jle
push
rorb
fcompl
cmp
jl
inc
add
lret
psubsb
xchg
jmp
rcr
or
xchg
push
dec
cmp
adc
pushf
fnsave
xor
aaa
push
mov
mov
shlb
pop
pop
mov
adc
push
mov
add
repz
pop
sbb
mov
adc
loopne
mov
cltd
xor
insl
mov
es
sub
pushf
repz
ret
loopne
int
cmpsl
dec
cmpb
aad
fldenv
neg
cwtl
mov
in
jp
pop
rorb
jp
mov
mov
sahf
inc
cmpsb
mov
jns
fisubs
icebp
mov
add
es
lds
sti
jae
scas
nop
add
fbstp
pop
mov
dec
dec
lods
cmp
add
clc
bound
or
jl
test
lock
pop
xor
hlt
orb
rcrl
mov
int3
out
arpl
jbe
pusha
lods
or
push
jae,pt
popa
sub
pop
or
fbld
xor
mov
cs
jge
adc
js
aaa
cmp
iret
sti
jb
out
or
xor
lds
loope
fs
mov
pop
cld
fwait
cmp
pop
sub
das
xorl
jecxz
js
sbb
lods
scas
jmp
xchg
nop
jg
adcl
pop
jl
scas
mov
jecxz
scas
flds
mov
sbb
in
sub
les
es
dec
scas
fists
cmpsl
mov
out
push
adc
dec
jns
xchg
fistl
outsb
dec
sub
packuswb
movsl
sbb
ljmp
dec
std
fcmovnu
jae
ja
jmp
and
ja
xor
clc
pop
outsl
inc
test
push
xchg
scas
mov
jno
xchg
bound
xchg
xorb
xchg
out
and
lea
in
jb
inc
enter
fcompl
fcoml
fxch
jecxz
jns
ret
dec
dec
iret
insl
adc
add
fs
pop
das
add
xchg
pop
cltd
lsl
push
ds
xchg
fistpll
cli
mov
cwtl
mov
adc
stos
xchg
pop
imulb
dec
in
stc
pop
idivb
sub
imul
test
mov
xor
cli
gs
out
test
jns
push
lea
sbb
mov
push
lret
mov
ficomps
push
jnp
enter
test
push
fiaddl
or
test
int3
jge
mov
or
loope
mov
xchg
lods
mov
mov
adc
add
stos
or
inc
movsb
imul
arpl
jle
push
jl
and
xlat
cmp
inc
bound
inc
sbb
jnp
mov
cmc
ja
mov
ds
lods
pop
mov
shll
rcrb
addr16
in
rcll
cwtl
pop
xor
mov
ror
loope
dec
inc
adcb
mov
popa
insb
sbb
jge
push
fs
cmpsl
in
dec
ss
or
xchg
pushf
xor
ljmp
mov
popf
dec
lret
cltd
dec
and
xchg
into
xlat
ret
mov
mov
out
icebp
int3
dec
jae
or
test
lret
lods
jle
mov
mov
xor
das
pushf
adc
roll
sub
sub
arpl
jno
add
push
bound
bound
stos
and
cmp
test
lods
andl
rorl
jae
sub
mov
enter
call
lods
clc
idiv
mov
jg
test
jecxz
cld
push
cltd
and
mov
cs
out
rclb
jb
ret
in
push
shlb
dec
lock
xchg
outsb
pop
imul
inc
in
pop
pushl
mov
in
or
push
js
divb
dec
sub
roll
fldl2e
insb
icebp
addr16
popf
adc
mov
mov
jbe
enter
pushf
adc
outsl
sarl
test
cmp
scas
std
aas
add
xchg
and
jmp
jo
stos
jmp
jecxz
addr16
es
call
mov
mov
js
mov
shrl
clc
jmp
inc
adc
mov
out
and
add
or
or
cmpl
outsl
imul
hlt
leave
inc
lcall
mov
mov
pop
dec
js
out
mov
imul
pop
nop
xchg
push
movsb
lcall
add
mov
inc
xchg
dec
push
jne
and
call
ds
sub
sahf
xchg
mov
add
in
std
bound
cmpsl
jge
mull
jno
inc
js
adc
fnstenv
cmp
jne
into
or
sub
jno
pop
lret
ljmp
jo
push
push
scas
test
or
rclb
pop
frstor
fbstp
movsl
scas
pop
fistpl
fwait
mov
loopne
jge
leave
mov
or
mov
cmp
mov
inc
push
inc
aas
ds
cs
xor
out
loop
inc
and
outsl
mov
jmp
mov
or
in
aam
fcoms
jl
push
or
divb
dec
sar
andl
int3
mov
pop
stos
push
cmp
in
popa
shrl
ret
lcall
pop
push
pushl
lcall
dec
push
jae
shl
mov
outsl
and
xor
pushl
pusha
pop
jo
orl
and
xor
ja
and
jnp
pop
sub
jmp
add
inc
call
mov
lahf
xchg
popa
or
inc
pop
push
sbb
jo
dec
xchg
stos
dec
or
pop
ret
pop
ret
dec
popf
sbb
cmpb
adc
jns
mov
fwait
fwait
lret
aad
mov
aas
mov
inc
sbb
clc
adc
insl
mov
dec
ficoms
cmp
mov
mov
popf
adc
int3
add
or
or
es
pop
adc
sub
inc
jmp
pushf
scas
lret
loop
pop
mov
inc
nop
mov
mov
test
dec
mov
nop
jbe
int
ror
leave
adc
cs
fwait
sbbb
and
or
outsl
pop
lods
xchg
sbb
dec
mov
or
in
jns
pop
fidivl
fadds
lahf
mov
enter
fs
mov
shrl
mov
push
push
in
les
je
ret
nop
and
cwtl
popa
inc
jl
or
add
jns
out
outsl
jb
mulb
cltd
stc
push
fs
jg
lods
hlt
mov
jb
in
adc
adc
cmp
ficoms
daa
int3
cmp
in
mov
ss
add
rorl
mov
dec
dec
sub
or
xchg
inc
loope
enter
lcall
ja
xchg
stos
jno
fwait
fcoml
nop
pop
xchg
cmp
or
scas
or
adc
loop
push
xor
fimull
int
outsl
xchg
xchg
xor
jl
pop
ljmp
push
xchg
push
testl
cltd
xchg
mov
cmp
lahf
adc
adc
dec
mov
xor
popf
and
ss
add
fucomp
pop
imul
jge
aad
or
sbb
movsl
ja
xor
jo
dec
jmp
ss
shlb
das
push
and
add
mulb
adc
sbb
jmp
pop
jbe
adc
js
jg
mov
es
mov
cmp
iret
movsl
pushl
fwait
enter
idivb
mov
movsb
push
sbb
out
jp
sarl
xor
inc
imul
in
inc
or
cmp
in
xchg
xchg
pop
jb
mov
mov
add
adc
pop
jecxz
mov
push
and
imul
leave
nop
cmp
mov
xchg
push
inc
add
iret
inc
leave
xor
scas
mov
mov
push
fisubl
mov
dec
neg
mov
cmp
mov
mov
push
pop
sub
adc
inc
les
push
mov
jmp
outsb
in
ss
add
jmp
xor
das
mov
jg
imul
or
dec
dec
add
xor
push
jmp
mov
xor
and
pop
xchg
and
jge
mov
pop
pop
mov
outsb
lock
push
lahf
mov
shll
loop
or
mov
dec
inc
pusha
mov
and
sbb
inc
stos
add
test
or
and
add
ds
dec
leave
fwait
pusha
test
adc
dec
dec
out
mov
pusha
cli
mov
and
cmpsl
jns
mov
mov
fidivrl
ja
test
xchg
testl
xchg
in
sub
xor
mov
xor
std
push
sub
ljmp
hlt
lds
in
xor
inc
mov
and
and
sar
movsl
cmp
daa
mov
pusha
out
add
je
rolb
das
push
jl
test
out
cwtl
xor
mov
lcall
cltd
stc
out
jecxz
xlat
cmp
push
dec
imul
sub
gs
and
les
mov
rcrb
inc
into
mov
test
and
aad
jae
xchg
push
fdivs
push
movsl
cmpsl
jbe
cs
out
data16
pop
mov
mov
sub
mov
push
leave
sub
sub
mov
fdivrs
shlb
cmpsb
in
xor
cmp
sbb
cmpb
int3
loope
je
push
daa
idivl
xchg
ljmp
test
leave
add
push
out
in
sahf
jge
mov
lea
mov
int
pushf
add
fucomi
lods
movsl
jge
push
ret
mov
std
cmp
pop
and
fwait
sbb
das
push
mov
adc
lahf
cmp
add
jge
sub
out
cmp
imul
cmp
lea
lds
jae
insl
sbb
add
push
out
rcrb
daa
cld
gs
push
jbe
sub
xchg
pop
repz
iret
test
fs
fwait
inc
push
sbb
icebp
xor
inc
jmp
lahf
fs
lods
sbb
movsb
xchg
cli
stos
pushf
and
fiaddl
pop
jb,pt
ret
addr16
mov
divb
mov
sub
insl
ss
lock
testb
mov
psadbw
ds
pusha
inc
cli
inc
into
push
icebp
mov
rcl
pusha
lret
mov
or
jmp
xchg
add
in
add
bswap
insb
jne
add
cmp
dec
ret
mov
insb
cmc
mov
or
test
add
fdivr
xlat
loop
loop
popa
jbe
imul
inc
rol
out
daa
pop
pop
add
sbbb
cmp
and
push
dec
pop
push
dec
lret
sbb
cs
sbb
mov
icebp
cmp
in
icebp
shlb
jb
mull
add
lock
xchg
lcall
xor
call
jmp
mov
xchg
jge
in
loop
mov
dec
or
jnp
clc
mov
bound
cmpsl
nop
rorb
cld
mov
test
pop
sub
fcomps
aam
stos
icebp
cli
int
push
sub
mov
mov
pop
push
ret
enter
or
aam
lret
repz
add
adc
fistpll
stc
push
clc
shrl
movsb
std
aas
repnz
xor
xchg
mov
jmp
clc
push
dec
jnp
adc
je
xor
adc
fnstenv
clc
mov
fmull
adc
aas
add
mov
clc
jnp
mov
stc
ficompl
rclb
cs
cs
mov
out
in
add
outsb
or
int
fs
xor
lret
stos
lret
pushf
stos
or
loop
icebp
mov
sbb
dec
jbe
add
scas
popa
dec
gs
test
pushf
cli
push
mov
shl
aaa
sbb
clc
jl
popa
loope
pop
fwait
cmp
and
aaa
mov
aam
repz
dec
adc
or
mov
mov
rolb
jecxz
hlt
xchg
lret
pop
jg
test
popa
sub
sbb
cmp
fidivrl
jle
inc
adc
lds
popf
pop
push
cli
lahf
pop
jp
rorb
fildl
lahf
popf
roll
xchg
pop
fisttpl
je
mov
in
div
adc
popa
push
nop
lock
in
loop
sub
aad
xor
inc
mov
aas
sub
out
inc
cmp
mov
daa
sar
push
add
pop
lea
xchg
push
xchg
pop
pop
xor
dec
add
lret
shll
adc
mov
sbb
cltd
jg
mov
rclb
test
cltd
or
xor
mov
pcmpgtw
loopne
mov
sbb
jae
sbb
push
lods
inc
mov
mov
cmpsl
cmpsl
cmp
add
test
xchg
mov
addr16
ja
mov
scas
rorl
scas
xor
sarl
xchg
in
aaa
insb
insb
ja
addr16
push
outsb
jecxz
xor
jp
mov
jno
adc
fldt
test
ss
xor
xchg
clc
sub
mov
into
sar
mov
mov
cmpsl
add
add
add
bound
popf
std
xor
push
sub
daa
bound
cwtl
or
add
xchg
mov
jg
sbbl
out
insl
dec
dec
push
add
xchg
dec
jb
cmp
dec
xorl
add
jbe
test
addr16
insb
jbe
pop
add
cmp
je
mov
stc
stc
add
cmpsb
cmc
cmp
lcall
std
pop
push
mov
sbb
or
mov
shll
xlat
inc
sbb
inc
dec
cltd
pop
xchg
mov
and
cmp
and
out
jno
arpl
pop
notb
mov
adc
int
cmp
out
js
push
rcll
cmpsw
pop
in
shrb
in
lret
sahf
repnz
test
cmp
sti
outsl
leave
js
imul
mov
xchg
shrl
dec
jbe
call
leave
and
addr16
dec
cmpsb
es
pop
push
outsb
jl
hlt
cltd
rsqrtps
push
or
scas
out
sub
leave
and
push
es
xchg
jecxz
dec
push
dec
pop
cmp
sub
pop
negb
gs
testb
pop
xchg
xchg
jo
mov
jge
sbb
adc
aam
inc
inc
push
jp
loopne
insl
lock
mov
pop
dec
in
iret
js
mov
jp
shlb
xor
or
sbb
je
sub
push
aaa
cmc
in
shlb
jl
and
xchg
cmp
and
mov
cmp
jl
loopne
dec
adc
inc
and
hlt
loope
sbb
repnz
pop
mov
inc
push
and
adc
mov
enter
or
or
add
lcall
fstpt
cltd
mov
shrl
jl
nop
bnd
out
adc
push
mov
inc
xor
lcall
out
sub
jmp
and
aam
fs
ficoms
mov
scas
pushf
enter
fstpt
jp
test
dec
clc
loop
mov
cwtl
jo
xchg
int3
int3
cmp
out
std
xor
push
movsb
and
pop
or
outsl
mov
dec
daa
cltd
ret
movsl
xor
jg,pn
lods
pop
sti
xor
adc
mov
or
sbb
dec
in
aas
test
ljmp
or
mov
add
push
repnz
icebp
loope
xchg
int3
fwait
mov
dec
aad
cmp
fsubrs
cli
inc
loop
repz
push
inc
jle
inc
imulb
mov
xor
bnd
adc
dec
mov
testb
push
lret
js
dec
repz
and
ret
outsl
pop
or
push
push
ljmp
adc
sub
pop
sub
sub
out
in
fadd
arpl
sub
fidivl
rclb
xchg
cmp
push
jg
and
hlt
scas
int
imull
ss
and
xchg
shl
adc
jmp
push
sbb
scas
and
adc
loopne
lods
out
in
imul
stos
add
ret
push
pop
add
test
xor
lcall
push
xchg
jnp
repnz
pop
pusha
nop
fstps
aam
loopne
cmpb
adc
test
xor
icebp
jmp
pushl
xchg
xor
push
push
imul
in
mov
xor
mov
xchg
lahf
pop
icebp
add
add
ss
call
pop
je
jecxz
test
arpl
sbb
push
mov
pop
mov
lret
mov
pop
jp
pop
jns
mov
outsl
or
fs
rorb
inc
or
cld
xchg
ret
out
inc
add
subl
fcmovnu
pop
jp
outsl
in
sbb
movsl
aaa
lcall
fcoms
sub
xchg
sbb
or
add
mov
pop
mov
fld
dec
push
into
lds
or
lods
push
pop
inc
dec
in
fwait
add
and
fists
stos
xchg
fstpl
test
xchg
sub
cmp
and
cmp
mov
pop
iret
push
pop
cwtl
jns
sbb
movsl
stos
push
pop
inc
cmp
xchg
imul
sarb
cltd
out
loopne
add
aad
jge
fs
push
mov
push
scas
shl
mov
jnp
dec
ficomps
adc
mov
sub
xor
jo
xlat
pop
dec
pop
jg
ret
dec
xor
push
lcall
xor
pop
into
mov
cmp
sbb
test
lret
rcll
shrb
mov
stos
sbb
addr16
mov
mov
sbb
lods
push
jb
mov
test
in
or
mov
jge
mov
fisttpl
in
sbb
inc
xor
pusha
in
in
sbbl
inc
icebp
out
cmp
stc
push
jo
repz
out
shlb
pop
add
push
xor
fmul
mov
push
clc
push
jo
mov
test
push
lea
les
repnz
inc
enter
pop
mov
mov
or
jge
push
jbe
hlt
mov
lods
fadd
adc
mov
inc
ret
xor
push
push
push
and
lods
sbb
ds
push
sbb
jnp
imul
outsb
pop
stc
stos
lods
sbb
add
idivl
jns
ss
xchg
and
aad
mov
es
pop
clc
mov
adc
aas
les
decl
imul
mov
arpl
fisttps
cmp
and
xor
aam
daa
push
mov
dec
je
leave
xor
mov
cwtl
repnz
test
and
out
aaa
ljmp
imul
popf
test
add
andb
in
into
jns
out
loop
jg
clc
jo
jge
push
pusha
enter
test
jmp
dec
pop
push
hlt
mov
mov
xchg
xchg
push
inc
push
mov
cmp
es
jle
push
mov
and
call
stc
jb
movsb
mov
xor
push
cmp
out
pop
mov
sub
mov
and
push
jo
shrl
in
jl
push
test
push
cmc
fnstsw
jne
insl
mov
cmp
mov
or
xchg
pop
scas
jecxz
add
movsl
lcall
dec
sahf
xchg
cmp
lcall
cli
push
hlt
jl
out
ds
xor
xchg
jle
hlt
std
rol
sub
pop
lahf
int3
std
arpl
ss
sti
dec
jl
push
sbb
scas
xor
lods
lahf
cmp
aas
call
outsl
shll
leave
ret
jg
ss
adc
xor
jbe
in
mov
pushf
mov
or
jmp
testl
add
dec
mov
test
aas
test
push
xchg
repnz
dec
add
xchg
jb
pop
pop
pop
xor
ret
addr16
into
pop
mov
aas
or
xchg
fwait
inc
push
ret
xchg
fsubrl
dec
dec
aad
pop
ja
notb
in
adc
jg
xor
ret
cli
dec
xchg
dec
mov
sub
lods
fcoms
push
mov
fistps
das
push
sub
ffreep
xor
push
xchg
sub
jae
cmp
jno
stos
out
rcrl
daa
arpl
gs
pop
repz
mov
icebp
fdivrl
dec
lock
int3
mov
push
outsb
icebp
in
movsb
xor
pop
dec
jae
lods
sbb
mov
or
jmp
test
adc
or
inc
push
jns
mov
call
pop
cltd
int3
sbb
push
rcr
dec
sub
js
in
jl
repz
fnsetpm(287
jle
pusha
out
jecxz
popf
stos
cmp
inc
ljmpw
sub
and
xlat
dec
mov
push
fs
push
mov
cmc
and
pop
ret
imul
push
xchg
cltd
push
push
daa
cs
pop
loop
lcall
popa
leave
dec
cli
lret
andl
pushl
add
jp
add
mov
sub
enter
dec
cmp
stos
hlt
lods
xchg
mov
shl
jl
jo
std
and
push
sti
lods
dec
cmp
lret
push
pusha
not
pop
cmpsb
mov
jb
xchg
les
xchg
pop
je
movsb
add
xor
jmp
jg
dec
fwait
xchg
dec
ret
mov
lldt
addr16
push
fstps
inc
mov
rorl
cld
sbb
push
jge
clc
dec
hlt
stc
lods
stc
sub
and
dec
les
mov
dec
pop
cld
cmp
cmpsl
jnp
cmpsb
mov
pop
inc
inc
je
mov
loop
dec
fcomps
hlt
push
les
jo
das
loop
lcall
sbb
push
lods
ds
xor
mov
test
imull
aam
arpl
push
jnp
inc
sbb
or
sub
pop
in
test
mov
shlb
cmp
or
add
add
out
jecxz
cmp
mov
xlat
vmwrite
sets
mov
add
out
add
mov
data16
notl
mov
stos
mov
or
shlb
or
xor
test
add
push
or
aaa
out
fwait
xor
push
hlt
mov
das
mov
aad
adc
in
in
add
clc
clc
pop
faddl
fs
mov
mov
gs
inc
jge
jecxz
lea
loope
aam
adc
cmp
out
dec
int3
lock
out
sti
sbb
dec
xchg
sbb
sahf
pop
jae
add
push
xchg
and
rcrb
loopne
xor
adc
dec
fidivrl
cmpsb
xchg
test
cld
adc
xor
xchg
js
repnz
int
inc
movsl
cmp
mov
hlt
scas
call
inc
mov
push
mov
dec
cmc
mov
xchg
dec
adc
xchg
xor
mov
push
pusha
inc
sbb
dec
das
out
push
mov
fidivs
sbb
pop
aad
test
xchg
jp
mov
mov
cwtl
popa
xchg
cli
pusha
les
ret
sub
data16
test
cltd
shlb
and
pop
sub
adc
and
xchg
fidivrs
in
loopne
jne
mov
xor
and
push
aam
shl
and
in
jne
cmpsb
jne
cmpb
add
xchg
xor
adc
or
outsl
lock
push
in
xchg
shrl
movsb
or
mov
mov
push
sub
pop
and
imul
mov
scas
add
inc
cmp
sub
mov
div
and
shr
in
fists
inc
test
mull
sub
add
lret
mov
imul
aaa
imull
imul
mov
outsb
sahf
in
cmp
stos
inc
js
scas
orb
out
jb
xor
pop
repz
pop
xlat
add
outsl
mov
sti
add
out
xor
movsl
jo
dec
arpl
pop
mov
mov
in
lret
movsb
lahf
inc
jb
and
sbb
aaa
pop
ss
or
fcmovnu
jno
sbb
rclb
dec
movsl
sub
cmpsb
js
mov
mov
pop
jp
xchg
test
int3
out
sbb
popl
push
push
mov
arpl
iret
and
jbe
push
mov
xchg
es
jmp
aad
loopne
lcall
pop
pop
test
bound
addl
cmpsb
les
mov
stos
daa
test
add
lcall
cmp
jns
test
outsb
push
push
mov
mov
enter
pop
jbe
xchg
push
fadds
lret
hlt
insl
mov
and
js
mov
pop
mov
outsl
int3
xchg
ljmp
or
pop
or
xchg
and
mov
mov
les
js
xor
insb
cs
push
gs
ja
icebp
cmp
xchg
roll
aam
ds
cmp
sbb
xchg
mov
mov
cmpsl
repz
jae
inc
add
addl
mov
or
in
xchg
dec
movsl
sbb
insb
fsubrl
dec
inc
sub
ljmp
enter
and
gs
fwait
inc
rcr
into
icebp
aad
leave
insl
mov
push
jb
xor
int
mov
cmp
fiaddl
out
dec
xchg
cli
cli
push
push
out
addb
cs
xchg
xchg
cmpsb
jne
cli
scas
clc
out
inc
xor
and
and
in
dec
out
mov
dec
jb
jl
popf
jge
or
sbb
pop
mov
enter
addl
fcompl
inc
js
lock
push
loopne
xor
jo
loopne
mov
mov
jp
popa
stc
add
in
push
jne
lds
xor
sub
jmp
dec
rcll
sub
push
inc
jne
and
pop
pop
push
adc
jp
ficomps
sbb
and
sub
jne
outsl
fnstsw
mov
sbb
fistl
dec
dec
clc
in
jns
mov
push
mov
stos
ja
daa
imul
pop
bound
imul
xor
dec
or
mov
xchg
dec
cmp
xchg
or
inc
sub
or
mov
pop
ret
aam
int3
mov
inc
dec
insb
jp
mov
mov
loop
lahf
mov
int
ret
out
jl
sub
dec
lods
rcl
cmc
pushf
push
adc
xchg
push
xchg
iret
xchg
push
dec
cmp
add
xor
mov
scas
mov
stos
test
fbld
scas
popf
dec
addr16
std
cmp
mov
pushf
xchg
lret
mov
inc
fxtract
test
mov
jbe
sub
jo
sub
pop
les
push
mov
idivb
add
sti
xor
ror
mov
ret
int
inc
cld
addr16
jp
adc
int3
mov
mov
jnp
mov
testb
jae
shl
sbb
pop
xor
jl
xor
xchg
mul
dec
sbb
shlb
xor
aas
mov
divl
in
cmp
shll
inc
dec
dec
or
insl
ret
cmc
mov
adcl
jnp
adc
dec
loope
ja
out
sub
jl
cld
inc
pop
ljmp
mov
aam
cmpsb
mov
pusha
pop
sbb
mov
adcb
pop
xchg
inc
jne
sub
mov
jno
mov
sahf
jnp
sub
std
test
mov
and
jg
or
add
push
fucom
jl
mov
cmpsl
rcr
insb
dec
lds
out
push
xchg
push
cmp
xchg
dec
enter
loope
inc
cmp
xchg
xchg
scas
pop
scas
xor
frndint
cwtl
lds
gs
out
cmp
mov
vpcmpeqd
fsubr
or
add
jns
adc
or
hlt
jecxz
movsb
jb
lods
insb
sbb
cmp
loop
leave
mov
xchg
mov
pop
fwait
jecxz
cmp
or
mov
es
xor
int
movsl
sbb
aad
sti
push
mov
mov
cmc
subb
pop
ret
mov
mov
sbb
sbb
lds
xchg
or
in
inc
jo
idivb
mov
dec
imul
cmpb
inc
dec
mov
xchg
scas
fstl
fidivrl
stos
outsl
clc
mov
cs
ja
es
lods
xorl
lods
aam
cwtl
out
mov
leave
pop
or
lock
out
inc
xor
xlat
jg
insb
ret
pushf
out
popf
and
aaa
pusha
mov
add
or
xor
xchg
mov
leave
popa
fdivrs
and
ffreep
subl
pushf
push
pop
push
xchg
inc
dec
xor
je
mov
pop
xchg
imul
dec
and
fs
jno
ret
xlat
lods
mov
repz
dec
dec
add
or
cmp
push
xchg
jbe
scas
gs
sub
mov
and
push
nop
les
inc
push
mov
lds
lods
into
pop
fsubs
pop
jnp
out
mov
and
mov
stc
xchg
sahf
cmp
add
test
jle
lret
mov
xor
or
scas
imull
jae
mov
neg
pushl
adc
sbb
xor
xchg
ss
mov
mov
xchg
fwait
push
xor
pop
bound
jl
notl
sbb
mov
fwait
in
sbb
jae
jns
insl
ficomps
mov
jno
inc
adc
jbe
xor
pop
mov
pop
pop
mov
ss
cmp
mov
loopne
or
fisubl
mov
int
enter
pushf
das
addr16
rclb
out
aas
mov
mov
or
movsb
push
mov
mov
inc
int
movsl
pushf
stc
aad
lahf
xor
push
add
test
adc
push
dec
push
and
je
les
addl
into
ss
xchg
push
mov
push
push
insl
xor
or
loop
jno
test
lds
xchg
xor
jb
mov
out
cs
inc
mov
popf
xchg
push
cltd
jb
adc
in
cmpsb
aad
dec
push
mov
push
sbb
imul
jecxz
adc
pop
aam
insb
aas
cmp
cltd
aam
shr
cmp
xlat
mov
add
daa
add
jge
or
xchg
repnz
or
ja
mov
xor
lahf
lds
jge
xchg
mov
ss
fidivl
pop
nop
jge
subb
enter
xchg
xor
nop
ror
or
leave
push
in
jne
rcll
add
pushw
ret
sbb
inc
push
flds
decb
movsl
pop
xchg
in
in
pop
mov
lret
pop
or
fcompl
jo
call
cmc
xchg
orl
jo
sub
mov
pop
and
mov
sbb
das
pop
mov
icebp
out
aas
push
push
dec
stc
pop
iret
dec
movb
pop
js
mov
fistpl
iret
sub
movsb
mov
test
cld
fisttpl
mov
adc
xchg
std
push
mov
out
icebp
adc
push
movsb
test
dec
mov
jl
push
cs
add
mov
and
adc
lcall
xor
out
add
jae
icebp
lds
arpl
hlt
xchg
or
cmp
je
enter
sbb
xchg
or
test
insl
or
ljmp
xor
push
es
into
xchg
outsl
push
testl
cmpsb
xor
les
cmpsb
insl
sub
or
nop
cmp
subb
cmp
repz
pushw
sarl
cmc
jnp
mov
rcrb
test
sub
test
add
xchg
cmp
cmp
clc
and
push
lock
jae
js
pusha
jne
mov
sub
loop
xor
testb
insb
cld
cli
pop
mov
pusha
aad
jl
sub
enter
adc
mov
outsl
mul
xlat
cmpsl
in
mov
xchg
mov
clc
divl
pcmpgtw
pop
mov
mov
sbb
repz
cmp
adc
ds
das
cmp
leave
shrb
sub
dec
mov
dec
lcall
or
lret
pop
adc
testl
mov
xor
xchg
test
mov
sub
xchg
pop
in
lods
xor
icebp
jl
das
iret
jmp
dec
test
mov
stc
xor
and
xor
dec
fdiv
xchg
push
xor
xchg
jbe
test
pop
sahf
inc
mov
test
dec
test
cmp
clc
in
fbld
inc
jno
adc
and
inc
sub
and
jno
jle
and
sbb
add
jns
jl
sbb
in
or
cmc
add
shrl
jmp
mov
xlat
mov
pop
js
insl
iret
pop
and
push
cmp
dec
cli
dec
divb
jno
and
jo
movsl
stos
loope
lret
cwtl
sub
divl
in
sbb
repnz
mov
adc
jl
sub
jae
test
fcoms
popa
fcoms
mov
mov
mov
and
inc
pop
jo
pop
call
pop
imul
mov
push
pop
pop
or
xchg
lock
mov
in
jmp
mov
push
adc
int
xchg
jo
cmp
into
push
sub
pop
jbe
out
js
pop
in
lds
lock
inc
xlat
sti
cmp
mov
dec
push
fwait
dec
adc
xchg
movsb
sbb
xchg
mov
ret
adc
pop
pushf
dec
hlt
mov
xor
or
push
add
sbb
aad
sub
inc
xor
dec
lret
fmull
jb
cmp
xor
push
iret
push
add
inc
shll
inc
scas
ljmp
inc
xor
fwait
and
out
and
cmpsl
or
jle
cwtl
das
or
and
xchg
dec
push
cmc
jmp
mov
jle
jmp
mov
push
jmp
inc
sub
jbe
sahf
xor
lods
push
or
clc
addr16
pusha
into
push
push
je
sbb
cmp
xchg
sub
fs
dec
sub
stc
pop
jge
sahf
push
sti
add
jecxz
int3
ds
outsl
fwait
jl
jmp
sahf
lods
sbb
sub
mov
and
xor
in
sbb
or
loopne
lcall
pfsub
xor
cmp
popf
pop
addr16
lock
xchg
jl
mov
jne
stc
jg
jnp
fwait
and
xor
push
jg
aam
push
scas
push
mov
lcall
add
mov
divb
xchg
xor
or
fcomps
out
lea
xchg
icebp
test
ret
pop
pushf
sarb
bnd
mov
inc
rol
cs
xor
cmp
pop
xor
pushl
push
xor
dec
mov
mov
push
stos
xchg
rol
jp
insl
mov
shl
mov
insb
popf
mov
mov
xor
out
cmp
mov
xor
mov
xor
cmc
repz
ja
lret
jno
sbb
push
fldl
pcmpeqw
push
pop
fs
xor
in
xor
fsts
in
sbb
sbb
icebp
je
nop
daa
push
popa
fisttpl
adc
orl
scas
push
bound
repz
mov
lock
push
rcrb
adc
sub
fs
push
fimull
mov
arpl
cmc
sub
movsb
lret
dec
jns
or
jne
sub
movsl
js
scas
cli
ficoml
pop
lods
cmp
dec
test
push
push
sahf
repnz
enter
cmpsl
jp
add
js
int
aad
addr16
cmc
jne
jbe
cltd
fucomip
stos
rcl
mov
xor
push
insb
add
into
mov
repnz
inc
and
dec
inc
inc
mov
lods
rol
add
mov
leave
loope
xchg
mov
fidivs
jecxz
ds
shl
cmp
nop
sbb
movsb
negb
mov
outsl
push
jae
cmp
xchg
pop
cwtl
mov
popa
pop
sarb
xchg
and
test
pop
cmpb
mov
into
mov
out
inc
mov
sahf
add
cmpsb
std
adc
push
mov
int
jbe
lods
idivl
div
fbstp
js
rcl
aaa
jecxz
adc
lcall
xchg
call
mov
or
mov
inc
pop
inc
pop
test
cmc
sahf
es
in
in
cmp
in
ljmp
pop
cmp
add
add
sahf
lahf
sub
les
xlat
out
inc
inc
bound
sbb
inc
jbe
icebp
das
leave
outsl
lret
xchg
mov
and
out
jge
dec
int3
negb
adc
push
scas
jge
dec
sub
mov
scas
icebp
imul
stos
push
dec
cmp
jnp
sbb
sahf
adcl
mov
shrb
mov
push
jnp
sbb
sbb
sbb
sar
stos
and
sbb
xchg
pop
pop
pop
popa
jge
pop
xor
cs
mov
and
sbb
fs
mov
and
lcall
sbb
repz
stos
loop
jle
mov
loopne
mov
pop
adc
in
push
mov
movsb
push
jp
adc
lret
xchg
cmp
push
aad
jmp
push
movsl
mov
mov
mov
jb
cmp
jg
cltd
ret
ja
es
cmp
mov
or
leave
ror
mov
jae
mov
std
mov
shrl
addr16
jp
nop
mov
mov
push
in
mov
sbbb
cmp
clc
push
in
inc
daa
pop
js
and
cmp
inc
mov
outsl
aam
xlat
sub
sbb
jmp
cmp
jp
movsb
push
mov
loope
dec
test
add
push
cmp
push
lcall
inc
push
mov
mov
adc
jle
inc
lds
or
xor
cmp
push
scas
xor
adc
rorb
mov
xchg
jl
and
fldl
mov
xlat
mov
cs
mov
lods
loope
xor
add
into
imul
add
dec
and
bound
xor
cmpsb
gs
data16
ret
addr16
fwait
or
lret
xor
nop
xchg
and
mov
int
in
out
mov
push
imul
lods
pop
aam
push
addl
adc
add
mov
je
or
push
fcomps
cmp
jae
mov
push
push
sub
mov
or
sbb
mov
mov
lcall
xchg
pop
call
shl
or
mov
or
inc
pop
and
aad
cli
test
jle
push
int3
ret
cwtl
inc
add
xchg
xchg
mov
jmp
insb
jge
jae
sar
scas
movsl
mull
ljmp
nop
arpl
mov
push
and
jns
jmp
pop
cmp
cmp
in
xchg
dec
mov
sbb
icebp
out
add
cmp
xor
nop
push
mov
and
jl
fisubs
cmpsb
xchg
jg
rcrl
lds
push
xchg
lds
addr16
imul
cmp
cwtl
push
sub
jmp
stos
and
cwtl
lods
push
jecxz
xlat
mov
mov
and
mov
xorb
cmp
popa
lea
dec
inc
mov
cmp
push
adc
leave
push
sbb
mov
adc
lret
subl
out
ds
mov
sub
ds
push
cmp
shrl
and
rorl
lods
mov
imul
jns
cs
xchg
leave
push
xchg
into
fstl
mov
sbbb
inc
pop
push
xor
jb
fwait
xchg
rolb
mov
inc
xchg
shlb
gs
adc
and
test
leave
push
mov
iret
xchg
setb
outsl
push
or
ss
hlt
pop
sbb
pop
xchg
pushf
subb
xor
jg
push
jb
incb
mulb
mov
mov
mov
lods
jl
jb
cmpsb
inc
jne
xchg
sub
ljmp
jae
jno
pop
jo
pop
adc
xor
and
iret
jp
pushf
or
out
ret
ror
adc
sub
fldt
jp
or
data16
movsb
lahf
mov
fwait
cmc
leave
mov
pop
std
or
je
adc
mov
dec
test
xchg
mul
cli
mov
hlt
sti
xchg
push
pop
int3
idivb
insb
push
test
cmpsl
aas
jg
rclb
xchg
inc
push
in
movsl
mov
pop
xor
and
fwait
shlb
or
pop
xchg
out
push
int3
hlt
scas
js
sarb
dec
shll
and
negl
xor
sahf
pop
inc
xchg
iret
movsl
daa
xorl
in
jmp
jp
mull
mov
xchg
adc
inc
and
outsb
pop
ja
into
mov
fdivrs
sub
dec
ret
xor
push
cmp
fcoml
lea
or
insl
sbb
sub
jbe
jp
pop
cltd
mov
test
pop
sub
push
pusha
or
jns
in
dec
push
mov
xchg
jbe
pop
jmp
cli
stos
xor
xor
pop
add
sub
adc
and
sahf
jbe
fmull
add
push
in
shlb
call
test
ret
jl
int
jl
adc
ret
leave
mov
stc
jne
mov
bound
pushf
mov
mov
pop
push
rol
je
pop
xor
cwtl
addb
in
divb
cmpsl
cmp
call
ret
pop
pop
fildl
addl
or
cmp
inc
ret
adc
sub
sub
sarb
aad
stos
or
hlt
mov
stc
pop
push
into
push
std
xchg
jg
xor
inc
mov
cmpsl
outsb
xchg
jmp
add
xchg
mov
xchg
inc
adc
push
mov
arpl
ds
jno
push
jle
cmp
fidivs
js
lret
faddl
mov
popf
and
std
into
jl
testb
fisubrs
nop
clc
push
cs
adc
jmp
add
or
or
cs
mov
cmp
push
or
bound
pusha
in
ret
mov
xchg
mov
xor
xor
jns
sub
adc
cwtl
das
jbe
shll
int
cmpsl
outsl
inc
ror
mov
mov
mov
daa
inc
fdivl
iret
into
inc
jmp
in
pop
rcll
rorb
push
clc
mov
imul
cmp
push
fnstsw
xchg
mov
dec
dec
lret
adcb
jl
dec
repz
aaa
xchg
sbb
ljmp
lcall
pop
add
es
cmp
jns
mov
in
test
dec
mov
mov
adc
repz
sbb
mov
in
js
xor
dec
xchg
xor
divl
inc
sar
mov
or
and
and
sbb
in
lret
jne
dec
adc
dec
and
inc
pop
push
push
std
call
shrl
jbe
fmulp
imul
mov
mov
inc
add
mov
pop
inc
mov
fs
loopne
into
pop
and
test
jecxz
sub
push
fwait
rdpmc
mov
or
dec
icebp
into
clc
outsb
in
pop
xlat
fs
or
cmp
imul
mov
mov
dec
into
ss
pop
mov
sub
jo
outsl
cltd
dec
and
adc
fisubrl
mov
mov
fldl
out
pop
jo
or
cwtl
mov
aad
jecxz
jo
daa
js
push
pop
sub
xchg
xor
mov
mov
and
add
xchg
pop
mov
pop
fcmovu
mov
aad
push
movsb
cld
rcl
lret
pop
data16
outsb
adc
inc
popa
xor
hlt
xor
xor
push
std
mov
adc
jmp
in
or
setne
inc
lods
jmp
data16
sub
push
gs
add
adc
jno
insb
add
xorl
clc
jne
adc
sbb
push
flds
xchg
lcall
popa
mov
sub
into
loop
mov
mov
xor
dec
rcr
xchg
lret
and
xchg
pop
insb
rcrb
lods
inc
stc
cmp
cmpl
daa
adc
jnp
cmc
lahf
add
daa
adc
mov
adc
cmpsb
push
fisttps
inc
sub
push
pop
pop
lcall
fstp
cmpsb
sbb
test
movsb
js
clc
loope
push
aam
pop
or
enter
roll
fsubs
jnp
jne
jg
inc
mov
aad
mov
pop
jns
out
dec
fs
sbb
sarb
sbb
inc
out
xchg
orl
das
mov
rcll
and
out
jle
pop
cmp
mov
add
int3
xchg
test
cld
sub
pop
lret
mov
cmpsl
into
sbb
loope
mov
leave
hlt
sbb
mov
mov
xchg
push
int3
xor
fs
cmp
adc
mov
mov
ret
jge
mov
jmp
dec
dec
pop
mov
adc
sahf
repz
dec
adc
in
outsl
lret
push
add
sti
lret
adc
mov
mov
dec
xchg
mov
and
sbb
into
stos
pop
repz
pop
mov
pop
jnp
push
pop
mov
add
cmp
mov
push
inc
iret
clc
fwait
ljmp
jmp
sub
and
in
mov
test
xchg
adc
add
lahf
xchg
push
push
add
mov
jge
into
jecxz
mov
sbb
imul
sbb
and
add
push
and
cmp
mov
push
pop
aad
and
jmp
add
push
dec
cli
inc
dec
pop
and
inc
or
dec
cmp
hlt
in
push
xchg
jno
and
iret
clc
ret
out
xor
insb
mov
inc
or
outsb
dec
jne
xchg
xor
jl
les
and
fdivrl
clc
xchg
mov
xchg
mov
shlb
leave
inc
cli
or
mov
loop
imul
push
nop
pop
out
cmp
sbb
aaa
dec
fsubrs
xchg
stos
insl
fsubr
leave
jb
jmp
aaa
adc
mov
lods
sub
and
mov
insl
adcb
movsl
insb
repz
dec
movsl
mov
outsl
mov
enter
fidivl
mulb
sbb
inc
push
jle
sbb
test
outsl
movsl
or
fldcw
jae
jecxz
push
or
sti
enter
mov
mov
or
or
cld
icebp
enter
push
and
cld
mov
sub
and
cmc
jp
xchg
dec
xchg
jae
mov
or
movsb
js,pn
xor
push
repz
dec
xchg
sarb
insl
mov
dec
orl
pop
push
mov
sbb
rorl
and
fs
ret
inc
into
xor
mov
cmp
jge
jg
mov
iret
jge
sub
mov
ret
test
sbb
xor
ss
lea
inc
rcll
jge
or
aam
push
xchg
mov
aas
add
or
iret
lods
sahf
jo
xor
test
test
leave
fsts
out
mov
std
dec
xchg
ss
mov
subl
cmp
aam
test
adc
jmp
pushf
inc
add
inc
lods
imul
pop
into
lret
int
xor
pop
pop
popa
gs
pop
sbb
mov
mov
or
push
ret
lods
inc
sub
push
in
fistpll
mov
ljmp
fildl
add
testl
and
stc
pushf
add
push
movsb
movsl
xchg
aaa
sbb
mov
sub
add
fdivrl
dec
es
cmc
scas
aaa
jp
aam
adc
aam
addw
or
pop
cwtl
clc
mov
cwtl
mov
rclb
cmp
ja
das
dec
aaa
jnp
xchg
xor
sub
lea
lock
mov
and
push
mov
pop
icebp
bound
pop
addr16
mov
outsl
pop
loope
mov
pushl
lahf
push
out
inc
cmp
mov
popf
mov
mov
or
rorl
arpl
jecxz
ja
aaa
push
jns
push
mov
lds
push
cmpsl
lods
call
lock
xlat
int
jo
mov
imul
mov
ja
push
mov
stos
shlb
cmpsl
cld
jmp
mov
mov
rcrl
dec
push
lods
dec
ret
pop
mov
push
aam
notb
rcl
sub
mov
adc
ret
cmc
sahf
and
cmp
cmc
sahf
mov
inc
fwait
add
sbb
ds
test
lret
pop
cmp
push
push
mov
adc
fcmovne
push
std
adc
lock
sbb
push
int
and
rol
dec
pop
aas
ret
leave
int3
fiaddl
xchg
mov
push
mov
arpl
cltd
sub
and
adc
inc
jno
xchg
sbb
arpl
popa
xchg
push
popa
push
shll
push
subb
cmp
lods
mov
insb
test
rorl
ds
repnz
in
vunpckhps
mov
loope
sub
inc
cli
ljmp
shrl
es
push
je
or
sbb
sub
sti
push
mov
add
in
jle
sub
push
push
adc
or
call
ds
sub
ljmp
cmp
pop
scas
xor
stos
stos
cmpsl
ja
hlt
dec
adc
neg
out
and
mov
pop
inc
test
cmp
in
test
add
xor
pop
lods
imul
ss
out
fs
jne
enter
jae
fld1
sahf
ret
lea
sub
and
cwtl
sub
jnp
ret
cmp
xor
pop
and
mov
in
movsl
hlt
ret
add
add
xchg
xchg
cli
js
mov
lahf
mov
sbb
mov
dec
lret
jbe
orl
popa
add
jbe
xrelease
leave
pop
push
imul
dec
in
and
outsb
dec
dec
insb
ret
mov
lds
adc
and
subb
adc
xor
pop
sbb
mov
fsub
jae
repnz
push
les
push
add
sub
scas
mov
fsubp
mov
stos
ret
fwait
and
cmp
push
jp
sbb
repnz
cmp
orl
sbb
xlat
inc
loopne
xchg
and
aas
dec
pop
scas
sarb
xor
popf
stos
adc
mov
in
pop
nop
mov
mov
mov
aam
sub
faddp
cmp
cmpsl
rcll
pop
xor
es
dec
dec
sbb
std
pusha
add
sbb
cmp
sub
inc
xchg
outsb
pop
mov
mov
nop
pop
rcrl
std
mov
push
cltd
int
xor
pop
cmp
jb
rcrl
nop
or
pop
jg
mov
push
dec
das
pushf
xchg
imull
or
and
sub
icebp
xchg
add
das
and
sti
mov
hlt
and
inc
hlt
repz
stos
pop
lret
mov
sbb
fimull
sahf
fs
xor
int3
jnp
xchg
mov
jo
mov
scas
dec
insb
ret
ret
pop
mov
and
call
sub
add
or
rcll
and
jns
pop
aaa
fimull
add
or
repz
sahf
cli
aad
adc
and
pop
rorb
or
push
das
ret
cld
add
sub
push
stc
and
push
jp
das
inc
movhps
or
adc
inc
inc
fwait
mov
dec
imul
jecxz
sahf
pop
mov
mov
push
xchg
pop
cmp
bound
call
fldl
sub
xor
enter
add
sahf
lret
mov
test
inc
ret
lcall
int
cmp
jbe
pop
mov
sbb
movsb
add
jmp
pop
mov
mov
in
shll
aad
sti
jnp
les
inc
mov
xor
pusha
add
mov
or
mov
or
mov
outsb
cld
or
push
test
mov
loopne
nop
jbe
push
mov
mov
pop
and
dec
aas
pop
lret
adc
sbb
in
cmp
mov
and
scas
jmp
in
hlt
mov
mov
xchg
push
in
mov
add
xor
xchg
push
pushf
pop
cld
mov
push
pushf
pop
mov
mov
xchg
add
adc
ss
mov
push
pop
sbb
inc
imul
loopne
dec
add
out
repnz
push
nop
add
je
aaa
lods
cli
int
add
xchg
jns
sbb
mov
cs
pop
cmp
adc
push
pop
sub
xchg
into
xor
ja
fsincos
cltd
xchg
mov
pusha
addr16
push
scas
jmp
les
scas
inc
dec
aam
mov
rorl
jbe
push
jp
xorl
pushl
out
jmp
mov
mov
mov
pop
mov
inc
enter
out
testl
mov
mov
dec
xchg
out
loope
ljmp
enter
jge
mov
cmpsl
dec
sub
xor
and
xor
jne
jno
xchg
aad
jae
cmc
mov
pop
andb
xchg
push
out
xor
sub
inc
and
xchg
xor
test
push
sbb
ret
push
sub
fs
xchg
sub
lahf
in
ror
cmp
sbb
dec
xchg
jmp
imul
mov
lods
mov
les
xchg
add
and
int3
ss
xchg
shll
shrl
rcl
popf
push
pusha
cmp
pushf
test
xor
xlat
add
into
insb
sbb
jle
and
and
push
pop
inc
and
fwait
loope
xchg
sub
sbb
inc
inc
jecxz
in
mov
shll
xchg
pusha
clc
jecxz
sbb
pusha
clc
repnz
adc
xchg
xor
mov
imul
add
or
mov
out
fmull
add
xchg
cmc
fcomi
nop
or
out
adc
mov
cmovb
pop
mov
insb
outsl
xchg
outsl
not
and
imul
push
icebp
bnd
push
int
jge
sub
sbb
sub
movsb
into
mov
fs
fstl
test
pushf
pop
cltd
xor
inc
mov
and
mov
adc
xor
nop
jp
mov
ss
xor
mov
mov
push
jge
or
sahf
mov
add
and
mov
aaa
test
movsl
xchg
or
or
mov
sub
int
mov
ja
outsb
or
xchg
stos
dec
jecxz
ss
mov
dec
jne
add
mov
enter
lret
shll
aas
cmp
inc
lahf
movsl
sub
scas
xor
outsb
xor
orl
mov
shrl
daa
stc
mov
maskmovq
testl
xor
inc
mov
mov
sbb
stos
jns
xor
or
sub
jge
xor
sbbl
cmp
pop
ljmp
int
aad
pop
xor
xchg
lahf
jb
push
aas
insb
jo
and
jl
bound
mov
push
sub
push
lcall
add
mov
push
or
pop
cmp
sbb
jg
je
out
dec
test
jl
mov
push
imul
xchg
inc
divl
fildll
stc
cmp
movsl
out
and
or
inc
andl
mov
sbb
mov
movsl
stos
mov
mov
xor
adc
pop
xlat
stc
xlat
push
jne
push
and
in
dec
into
stos
jg
mov
pop
cmc
cmp
outsl
fisubrs
js
push
imul
push
ret
cs
int
or
jnp
mov
lock
pop
sbb
pop
fstp
addr16
dec
and
movl
mov
push
adc
cld
mov
push
andb
fwait
int
jg
fsubrl
lret
cmpsl
mov
fxch
fcmovb
mov
in
mov
lret
pop
les
mov
sbb
adc
mov
pop
mov
adc
cmp
pop
cld
addr16
jne
fs
test
inc
ret
or
js
or
mov
push
movsl
rcll
cwtl
out
pop
xchg
lahf
dec
xor
fcomp
repnz
clc
cmp
int3
inc
mov
jbe
cmp
mov
leave
test
inc
adc
js
jbe
xchg
fldcw
scas
mov
add
jp
cmp
xchg
popf
mov
cld
popf
out
std
dec
or
or
js
pop
jg
sub
rclb
cmpsl
and
ljmp
lret
jbe
push
clc
cmp
mov
sub
jge
mov
xchg
xor
sbb
test
mov
inc
mov
repz
lahf
flds
sub
clc
push
cli
mov
sbb
test
jl
or
push
stos
push
testb
out
pop
bound
mov
sub
push
mov
test
sub
jmp
inc
sbb
pop
xchg
dec
xor
je
push
outsb
out
stos
nop
mov
fists
les
test
sbb
mov
sub
xor
repz
out
fbstp
pop
xchg
push
mov
jmp
jmp
jae
pop
jno
and
pop
fidivl
pop
xor
jae
aad
out
scas
pop
dec
sbb
dec
in
push
push
fwait
lods
mov
and
clc
mov
mov
mov
cmpsb
inc
aaa
daa
and
cmp
pop
dec
sbb
cli
pop
cmp
mov
dec
dec
adc
loop
push
cmp
xchg
xor
mov
icebp
in
push
push
roll
mov
inc
mov
test
push
cmp
loopne
iret
es
xchg
jo
cmc
cmp
cmpsl
test
cmc
je
adc
mov
popa
out
ss
aam
clc
xor
insb
insb
and
sbb
pop
cmp
dec
add
pop
pusha
jle
mov
inc
sub
fs
fsubs
test
mov
repnz
flds
xchg
in
mov
stc
sub
jmp
and
xchg
sbb
std
int
dec
dec
ja
adc
push
loop
lcall
fucom
or
scas
sub
xchg
dec
push
cmp
hlt
or
mov
and
jnp
mov
scas
stos
jle
or
pop
out
mov
insb
sti
xor
mov
adc
pusha
jae
jae
lret
add
aad
rol
xchg
cmpsl
fisttps
and
out
daa
ljmp
mov
xchg
and
cs
out
xlat
adc
jb
xchg
jp
mov
nop
cmpsb
adc
scas
xor
daa
push
jmp
and
mov
jl
or
je
clc
and
push
lock
and
jle
xchg
pop
dec
cmc
dec
sti
daa
or
pop
dec
xor
aaa
ljmp
in
subl
clc
cmpsl
jmp
add
and
repnz
xchg
sub
jle
shlb
int
and
cld
ljmp
sub
mov
sub
sti
iret
das
and
or
inc
jno
ret
pushf
test
push
mov
std
int
lret
imul
lea
loope
hlt
daa
out
sub
ret
xchg
shlb
sbb
in
pop
mov
out
dec
pushf
enter
test
cmp
add
sub
or
shrb
pusha
lahf
add
pop
pop
fdivl
ljmp
pop
add
mov
popf
arpl
pushf
lods
cltd
add
pusha
in
lret
xor
sbb
and
cmp
fsubrl
dec
mov
into
in
jp
pop
lret
fadd
repz
popa
inc
dec
cltd
sbb
xchg
gs
out
sbb
inc
or
repnz
daa
cltd
pop
xchg
inc
add
scas
cmc
mov
mov
nop
sarl
lret
jo
or
das
in
sub
xchg
mov
mov
lds
xorl
stc
mov
movsl
jbe
lods
insb
push
jae
sub
cmp
in
add
sub
leave
dec
ljmp
loop
mov
sti
aad
sbb
movsl
loope
loopne
xorb
add
cmpsl
mov
cmpsb
loop
cmp
popf
xor
out
stc
push
test
lcall
xchg
fwait
cmc
xor
iret
stos
shr
leave
mov
lret
test
inc
cmpsl
out
fcoms
and
xchg
push
mov
jnp
jp
lret
mov
push
add
dec
sahf
jno
mov
jnp
inc
push
and
popf
lea
dec
orb
jg
fcomip
or
int3
and
and
push
xorl
es
in
inc
lods
jecxz
out
ss
jmp
outsl
push
and
nop
xchg
lcall
sahf
les
js
adc
mov
push
outsl
lds
mov
mov
sub
add
jmp
mov
stc
sar
cld
jbe
ret
mov
stos
fxch
cmp
mov
cltd
mov
mov
mov
dec
pop
mov
mov
fistl
mov
into
ljmp
iret
mov
xor
dec
pop
sub
add
sub
or
jg
jg
inc
lcall
mov
pop
mov
mov
add
push
ror
cmc
and
aaa
mov
mov
jo
or
aad
jns
push
and
ret
mov
sbbl
je
cmp
add
mov
xchg
es
leave
and
pop
add
fistpl
popa
insl
mov
test
fildll
sahf
lret
testb
mov
jmp
imul
xor
inc
ds
test
add
mov
lods
sub
mov
sbb
dec
mov
stc
jb
xchg
push
xor
and
aam
dec
sbb
xchg
call
push
sub
movsl
mov
test
rcll
mov
xor
dec
sub
pop
aam
cltd
pop
mov
into
push
sbb
jp
dec
lods
mov
ljmp
jo
pop
pcmpgtw
xchg
inc
scas
repnz
or
testb
out
lods
add
sbb
nop
jecxz
add
fidivrl
xor
cmp
jge
loope
sub
xor
arpl
mov
in
popf
out
ja
push
xlat
xchg
insl
lret
lahf
inc
dec
xor
pop
inc
cltd
xor
jl
out
sahf
pop
adc
dec
pop
rcll
or
es
mov
fdivrl
vmovaps
mov
mov
sub
push
cmovo
fstpt
adc
sti
pop
pop
mov
or
rcrl
incl
cltd
test
jns
lcall
sbb
loop
jae
popf
loop
sub
inc
ret
xchg
sbb
push
mov
pop
cmp
cli
xchg
dec
mov
sahf
xchg
push
sbb
dec
pop
xchg
lods
outsb
imul
jg
jb
sub
out
inc
xchg
clc
jecxz
data16
xor
jg
push
mov
mov
sysret
shl
vmread
int
jne
xlat
cmc
imul
mov
jmp
clc
popf
push
insb
sub
stos
lea
ljmp
and
push
testl
jmp
enter
cwtl
iret
push
lods
ret
in
push
xor
mov
loop
repnz
pop
and
loopw
movsl
imul
mov
cmp
jge
push
add
fcoml
aas
roll
dec
mov
inc
mov
add
and
mov
sub
inc
push
mov
clc
loopne
and
clc
inc
or
adcb
jecxz
mov
cmp
inc
sub
cmpsl
dec
ja
xor
xlat
cmc
xor
loop
jl
lods
sub
xor
in
lea
cmp
cmp
inc
push
mov
sub
jmp
mov
outsl
test
xor
add
test
sahf
shl
lret
jns
cld
sub
repnz
or
dec
add
lods
mov
hlt
mov
sub
or
mov
jmp
cltd
push
and
push
fnstsw
push
cmp
mov
adc
xchg
inc
add
sbb
cmpsl
aaa
mov
cmp
mov
mov
inc
inc
or
inc
sub
mov
mov
in
mov
into
in
fimull
mov
xor
or
aad
push
nop
push
insl
and
into
popl
aad
into
or
mov
mov
mov
or
dec
sub
pop
push
adc
pop
pop
fnstenv
or
mov
mov
cmp
lret
notb
outsl
jg
jge
mov
fwait
lods
pop
push
push
stc
mov
daa
sti
inc
mov
push
movups
adc
shrb
stc
mov
gs
xor
sub
nop
add
lahf
pop
repz
cmp
pop
andl
push
stos
dec
in
fsubr
cmc
pop
ret
arpl
mov
push
mov
jae
xchg
jmp
mov
mov
lret
xchg
fdivrs
mov
cmp
adc
sub
out
xor
fidivs
adc
repz
ds
inc
push
inc
push
cwtl
xchg
mov
push
mov
je
dec
and
xchg
fs
mov
cmpl
mov
je
jbe
test
or
movsl
sub
fmulp
sbb
dec
xchg
ljmp
or
pop
ss
stos
popf
mov
shrl
hlt
adc
pop
and
loope
scas
pop
aaa
in
icebp
jge
mov
ficomps
sbb
mov
ss
repz
xchg
mov
test
pop
mov
lcall
xor
push
adc
aas
mulb
inc
push
dec
popa
inc
push
bound
jmp
cmp
mov
and
and
mov
jae
ja
mov
movb
xor
out
icebp
pop
push
popa
sub
scas
ss
popa
rorl
es
dec
inc
jo
xor
xlat
pop
fwait
pop
sub
jecxz
pop
call
xor
and
test
and
xlat
sbb
fwait
leave
loopne
fs
ret
dec
je
cmpsl
fildll
mov
insl
cs
dec
mov
cltd
loopne
stos
inc
add
dec
dec
lods
xor
sub
xor
xchg
xor
data16
test
mov
mov
sahf
outsb
sbb
cmpsb
mov
push
les
shlb
xor
fcompl
shlb
mov
fdiv
iret
les
push
in
decl
xchg
fimuls
ja
faddp
or
push
testb
cmpsl
xchg
cwtl
imull
push
outsb
mov
iret
push
es
rcrl
scas
cmp
faddp
push
mov
fstl
loope
iret
push
push
jg
mov
and
movsl
cld
pop
mov
popa
jbe
pop
mov
push
sbbb
out
mov
jg
orb
jecxz
data16
leave
into
popa
ja
cwtl
repz
scas
mov
xor
push
and
adc
cmp
cmpsl
jb
mov
jge
mov
test
cwtl
xchg
outsb
xor
add
fcomip
hlt
ja
dec
mov
mov
lret
cmp
jle
lret
dec
repnz
or
push
and
popf
adc
pop
inc
pop
pop
ficoms
sti
mov
sub
pop
and
jnp
fidivs
pusha
data16
pop
loopne
fisttpll
adc
or
dec
pop
clc
in
jecxz
dec
orb
push
mov
notb
mov
sbb
sar
pop
xchg
cmc
mov
dec
andb
cmpsl
je
adc
jmp
subb
push
sub
push
in
push
and
loop
addr16
mov
xor
outsb
adc
pop
cmpsl
mov
mov
adc
pop
mov
add
adc
mov
jnp
loope
aaa
adc
mov
mov
and
rorb
mov
popf
mov
orb
outsl
cmpsl
pop
fists
mov
sbb
in
pop
testl
mov
sbb
jo
das
hlt
pushf
jo
hlt
cmc
repz
ss
in
daa
sbb
jle
mov
test
fldt
cld
push
testl
out
insl
movd
push
rorb
ljmp
lret
sahf
cmp
adc
ss
mov
or
push
xchg
dec
add
lret
adc
mov
iret
popf
adcb
outsl
add
shrl
popf
repnz
ljmp
or
sub
popf
rol
push
hlt
stos
sti
push
lret
fdivs
inc
cs
test
inc
ret
adc
and
push
pop
pop
dec
cmp
mov
fwait
pop
pop
xchg
push
dec
sub
cmp
sbb
test
and
insl
out
jb
out
ficompl
jns
push
in
dec
fistps
imulb
gs
imul
cmc
mov
jge
aaa
fsubrl
push
sub
lret
scas
sub
add
loope
scas
and
outsl
fwait
in
scas
pusha
sbb
aaa
sti
xchg
push
pop
mov
jp
pop
lret
test
mov
lds
mov
in
cld
dec
mov
pop
std
out
in
inc
push
xlat
nop
xchg
sbb
scas
mov
sbb
pavgb
fsin
frstor
insl
sub
arpl
push
adc
lret
push
out
popa
dec
dec
clc
push
add
fs
pmaxsw
push
adc
orb
ds
lods
sub
lock
add
in
mov
sub
push
sbb
rolb
ljmp
jns
out
cmpsb
ja
xchg
pop
jmp
dec
inc
sbb
cmpsb
jge
in
call
xor
test
shll
jle
jl
shll
std
cwtl
push
lods
xchg
pop
scas
out
or
mov
xor
sti
ficompl
int
sub
mov
frstpm(287
inc
cmpsb
mov
xchg
xor
push
pop
xor
mov
sar
fs
je
xor
push
mov
fnstsw
xchg
mov
mov
cwtl
cmp
enter
mov
test
fs
repnz
sti
jno
test
ror
in
fadd
fwait
scas
inc
sahf
add
js
imul
lahf
ljmp
dec
jae
jmp
mov
fisubl
and
sbb
sbb
sahf
xchg
mov
pop
or
or
stos
cmp
loopne
insl
mov
inc
in
mov
insb
mov
stos
dec
jae
push
jp
dec
cwtl
sub
jbe
sub
sarb
clc
mov
popf
shlb
sub
notl
aam
mov
jnp
fisubs
testl
xchg
add
mov
dec
popf
xor
pop
sbb
lea
mov
lods
gs
and
push
xchg
sub
loope
xor
into
sub
into
nop
loop
mov
add
cmpsl
push
jp
mov
sbb
leave
xchg
dec
mov
arpl
and
mov
out
arpl
sub
sub
and
xchg
rclb
ds
sbb
xchg
sbb
lock
add
cmp
ljmp
je
inc
mov
sbb
mov
sub
dec
cmp
fdivrs
hlt
xchg
adc
mov
jecxz
pop
stos
cmp
push
push
lock
sbb
sti
xor
pop
call
cmp
and
or
sub
insb
cs
pop
pop
cmp
aaa
dec
das
pushf
mov
aam
mov
rolb
bound
xchg
mov
test
adc
pop
stos
jmp
xor
stos
push
mov
loopne
outsl
fdivrl
adc
out
subb
addb
mov
sub
movsb
add
inc
jb
mov
stc
shl
scas
xchg
pusha
mov
inc
sbb
mov
mov
shlb
cmpsb
mov
fsubs
mov
xor
and
jp
andb
push
mov
iret
movsl
out
sti
or
push
mov
loope
cmc
sti
pop
mov
cmpsb
ja
mov
movsl
cwtl
sub
je
mov
sub
mov
jl
jmp
mov
mov
fwait
loop
flds
cmc
xchg
jg
push
lds
or
js
adc
dec
aad
push
cwtl
pop
or
pop
je
imul
mov
push
push
jge
push
sarl
add
push
jl
mov
xchg
mov
xchg
add
pop
lret
add
lcall
pop
cmp
cmp
mov
pop
xor
jl
mov
fdivrs
int
cltd
sub
lcall
jecxz
jne
mov
std
pop
cmp
icebp
cmpsb
in
xlat
mov
pushf
sub
xchg
loop
jbe
add
data16
add
xchg
insl
cld
inc
or
dec
fchs
ds
mov
imul
cld
nop
aad
shll
push
add
xchg
into
enter
cwtl
ud0
scas
in
jge
adc
push
mov
lods
lret
int
mov
xor
fisubrl
sti
jne
rclb
hlt
shlb
int3
int3
out
inc
jno
sbb
loop
out
mov
inc
js
dec
shll
fdivl
std
arpl
pop
xchg
sar
mulb
xchg
jne
adc
cmc
add
push
ret
subl
stos
pop
and
and
cmp
xchg
push
mov
aad
add
aad
xor
cmpsb
mov
out
outsl
lret
and
push
idivl
sub
clc
ss
sub
sbb
xor
xorl
out
ret
sub
push
pop
out
call
dec
sbbb
idivl
in
sbb
ljmp
mov
sub
decl
loope
jae
xchg
dec
jmp
jg
shlb
loop
fstpl
pop
fs
jo
andl
sarb
js
mov
add
push
data16
loope
inc
jne
popa
sbb
jge
insl
inc
xor
mov
std
jns
repz
sub
in
lods
daa
das
pop
xchg
xchg
fisubl
adc
popf
cs
std
aam
leave
dec
lds
jnp
mov
jns
out
shl
and
push
xchg
scas
push
pushf
sub
mov
add
outsb
test
fidivl
pushl
insl
in
sbb
inc
fildl
jmp
outsl
adc
fistpl
pop
fucomp
pop
inc
cmp
mov
mov
arpl
sub
sti
rcl
lds
lret
mov
daa
fistpl
inc
xor
aas
scas
ss
lea
out
ds
enter
jmp
lcall
mov
xchg
aam
sti
or
and
cmc
aam
jae
cld
dec
call
dec
push
lea
push
xchg
out
mov
mov
aam
dec
in
sti
jbe
fnstenv
iret
faddl
push
pushl
rcll
lds
ss
je
dec
clc
scas
mov
insl
sub
cli
test
imul
mov
sbb
mov
add
push
xchg
in
or
data16
mov
dec
in
add
repz
test
stc
repz
mov
inc
adc
push
outsl
jge
nop
mov
cmp
leave
mov
cmp
inc
xor
lods
jmp
fwait
arpl
ffreep
mov
out
test
cmpsb
cmpsb
insl
insb
cmp
mov
xlat
shlb
pop
mov
mov
mov
int3
sbb
jns
inc
test
daa
jnp
cmpsl
sub
or
dec
loop
loop
das
pop
gs
inc
xor
push
sub
call
andb
inc
mov
out
add
shll
pop
sub
cs
ljmp
jl
cmc
mov
and
aad
in
pop
in
sbb
cmp
ljmp
je
add
gs
inc
stos
shll
sub
add
xlat
hlt
pop
jecxz
call
into
mov
adc
stos
sbb
jmp
ja
daa
mov
adc
push
pop
xor
and
aam
add
inc
dec
nop
jne
and
ja
fs
sub
mov
daa
lcall
rep
adc
xchg
jns
and
stos
add
bound
xchg
adc
sub
cmp
ja
movsl
aaa
jae
dec
ljmp
aad
push
arpl
out
add
cmpsb
dec
xchg
imull
and
sbb
lahf
imul
arpl
xchg
add
mov
lock
dec
mov
jle
push
ror
add
inc
xchg
out
in
jo
cmc
fmull
push
sub
pop
cmpsb
mov
push
xor
sub
mov
std
push
faddp
or
push
cs
cltd
mov
fidivrs
jne
dec
mov
aam
push
xchg
push
jno
dec
lods
push
fnstenv
lea
push
pop
mov
push
mov
js
xchg
leave
int
dec
fcmovne
jp
add
pop
les
and
add
insl
push
add
push
push
cmp
mov
pop
jne
loopne
inc
inc
std
jb
fiadds
add
outsl
loope
flds
adc
push
hlt
leave
pop
loop
outsb
inc
loope
pop
xchg
push
scas
nop
dec
rclb
xchg
adc
push
and
jle
imul
imul
int3
lods
jne
push
push
xor
hlt
fbstp
xor
and
fbld
repnz
xchg
imul
outsb
mov
int
inc
sbb
clc
or
dec
bnd
fs
mov
adc
jle
mov
push
jmp
or
xlat
jecxz
ja
xor
aam
and
daa
dec
jmp
jae
mov
push
mov
jecxz
ficoml
pop
or
and
lock
lods
out
push
and
push
aaa
repz
aas
gs
cmpsl
push
cmp
lret
inc
inc
and
pop
rclb
jno
jg
jle
jno
fmulp
dec
fldcw
mov
xorl
mov
loopne
dec
sbb
ds
gs
mov
inc
insl
mov
push
adc
pop
nop
dec
js
mov
icebp
pushf
jge
jbe
loope
adc
cmp
xor
movsb
aas
scas
arpl
ret
cmp
data16
xor
imul
int
mov
addb
adc
incl
jle
js
jmp
jne
lea
sbb
cmc
insb
jb
aaa
xor
daa
or
aas
sub
test
jecxz
lcall
adc
jge
shlb
pop
xorb
dec
push
fisubrl
repnz
push
pushf
push
xor
insb
scas
fidivl
mov
cmp
scas
es
fcom
mov
addr16
cmpsl
adcl
cltd
cmpsb
addr16
jp
sub
pop
sbb
shlb
adc
add
or
mov
add
push
rcrb
adcb
sti
or
jns
mov
rcl
ret
into
fnstsw
mov
les
icebp
xorb
dec
call
cmpsl
clc
push
call
int
out
cmpsb
sub
pop
fmull
outsl
nop
gs
xchg
shlb
loope
pop
sub
mov
inc
sbb
add
xchg
or
xor
cmp
jle
sti
pop
shrb
in
scas
inc
popf
xchg
jns
xor
mov
adc
movsl
mov
fidivrl
push
mov
pop
mov
loope
ljmp
dec
out
jo
popa
outsl
cmpsb
rolb
adc
xlat
pop
sahf
and
dec
arpl
jo
pop
push
pop
inc
or
shr
mull
cmp
lods
testl
out
fisubl
jg
fisubrl
pop
and
test
inc
mov
sarl
cmp
scas
pop
inc
inc
xlat
push
jae
adc
lds
call
fisubs
lcall
in
pop
clc
call
xor
xor
iret
pop
fildl
imul
xor
xor
push
mov
mov
fists
add
adc
fcomp
dec
adc
movsl
xor
or
mov
dec
dec
add
bound
sub
mull
sbb
sbb
loopne
add
xor
movsl
cmpsl
mov
lods
loopne
pop
stc
cli
xor
cli
aad
jno
lods
or
xchg
fmull
xlat
sub
scas
js
push
cmpsb
dec
push
fsubs
xor
mov
lock
stc
xchg
sub
and
add
or
orl
add
cld
jae
or
outsb
ss
in
push
xor
sbb
lods
dec
sub
push
loopne
imul
push
stos
and
pop
pop
xchg
mov
je
xor
sbb
stos
jge,pt
cli
test
cmp
test
popf
es
mov
in
push
sbb
jbe
out
loop
inc
out
xchg
cld
cs
cmp
mov
call
sub
or
push
fcmovbe
scas
fdivr
mov
clc
stos
dec
stos
ret
test
adc
or
sub
adc
clc
push
mov
pop
inc
push
add
mov
adc
ret
inc
adc
push
adc
imul
imul
sti
push
mov
mov
notb
jbe
or
fmuls
pop
jne
shlb
stc
and
mov
adc
xor
jmp
inc
pop
out
ss
push
xchg
pop
lock
or
jns
jge
outsb
arpl
xchg
in
cltd
gs
aaa
es
push
mov
cld
ss
cmp
sbb
ja
sbb
arpl
pop
test
fs
fmul
out
fidivrs
adc
into
inc
arpl
inc
xor
jmp
fstpl
addr16
inc
ret
jmp
ljmp
adc
lahf
xchg
lea
push
pushl
inc
jno
or
inc
jbe
and
in
jb
lcall
fsubs
cmp
push
mov
lds
in
cmp
mov
pushf
jg
cmp
aam
in
mov
call
daa
fstpt
lock
sub
xchg
outsl
or
in
add
jb
xor
jb
dec
inc
sbb
hlt
sub
fs
out
dec
adc
aas
idiv
inc
sub
mov
ret
pusha
iret
push
push
data16
mov
dec
cmp
or
mov
out
sahf
xchg
in
inc
je
inc
imul
movsl
cmp
in
pop
popa
inc
cltd
jne
mov
mov
aaa
orl
mov
mov
add
add
jl
jge
cli
xor
sbb
mov
arpl
inc
insl
push
loop
jmp
inc
rcll
scas
shrl
int3
jl
lahf
add
mov
mov
out
mov
push
or
cvtdq2ps
sbb
xchg
push
in
nop
jp
xchg
xchg
mov
xchg
and
dec
or
jmp
roll
out
add
and
orb
push
shr
out
or
cmp
jno
mov
add
jae
mov
push
mov
je
mov
and
xlat
ds
lods
and
and
iret
cli
mov
jmp
xchg
mov
mov
ret
xor
xchg
aam
xchg
or
add
lret
or
jb
in
fdivp
jp
jbe
mov
loope
cmp
add
stc
add
sti
inc
jmp
jecxz
cmp
jle
cmp
mov
xor
mov
or
pop
dec
pop
adc
lock
shll
neg
lret
dec
and
pop
in
stos
and
nop
dec
cmpl
bound
lds
mov
jge
pop
aaa
movsb
sbb
scas
ret
ret
mov
in
cmp
mov
ljmp
bound
cli
jle
in
sbb
mov
push
cmovle
push
mov
fst
repz
loope
pusha
adc
call
cmp
pop
xchg
and
mov
xor
ret
jge
add
addr16
ds
pop
dec
push
mov
aam
push
or
jae
nop
sub
inc
push
arpl
lods
fdivrs
jge
fcomps
nop
inc
add
lahf
stc
fwait
movsb
lret
mov
pop
pop
push
scas
clc
aam
fadd
cmpsb
fimull
pop
mov
jle
xchg
sti
xor
fcmove
scas
push
outsl
jecxz
sbbl
cmpsb
jl
sub
das
popa
jecxz
cmp
mov
xlat
aaa
jle
nop
ja
addr16
sub
sub
movaps
mov
sahf
mov
inc
mov
popa
xchg
xorb
out
mov
cmp
push
aad
push
outsl
int3
add
lds
js
cmc
xor
xor
adc
leave
mov
lret
ds
jp
mov
popa
push
lahf
dec
sbb
stos
xor
cmc
jl
sub
es
or
test
out
scas
sbb
xchg
pop
dec
push
call
cmp
fmull
adc
gs
popa
xchg
lcall
push
jle
inc
jl
sub
jp
mov
xchg
mov
and
sahf
stc
ret
dec
xchg
cld
xor
enter
adc
and
xchg
fcoms
cli
icebp
or
aam
push
jmp
cs
data16
push
jbe
sbb
dec
mov
sbb
add
push
shll
cltd
push
or
push
mov
sbbl
js
add
jnp
xor
fs
mov
pop
mov
push
fsubs
dec
lock
add
movsb
bound
outsb
xchg
adc
ja
jg
popa
imul
xlat
add
adc
adc
cmp
call
pop
xchg
pop
dec
lcall
stos
nop
sbb
test
leave
jg
outsb
outsl
mov
inc
sbb
pop
push
xchg
mov
gs
jmp
jae
ljmp
jl
test
pop
cs
std
push
fwait
mov
repz
add
movsl
cmp
ss
es
xchg
addr16
and
arpl
jo
lods
jno
cmp
mov
add
test
fwait
std
enter
sub
call
adc
insb
mov
dec
cld
scas
ds
hlt
push
or
cmp
push
scas
fs
into
lods
xchg
mov
sub
lcall
data16
xor
or
in
sub
popa
roll
xor
lret
bound
xchg
cmpsl
in
adc
test
int3
cmp
mov
mov
les
xchg
and
aaa
mov
add
or
lcall
rorb
loopne
scas
mov
dec
jns
out
add
jmp
popf
xor
mov
stos
dec
xor
and
adc
push
cmp
decb
cmp
jno
enter
in
xchg
test
mov
lods
in
xchg
add
cmp
pop
ret
adcb
lret
int3
xor
add
ljmp
in
inc
sbb
pushf
hlt
add
xlat
outsb
hlt
lea
in
dec
mul
cwtl
out
adc
or
pushf
psraw
or
sbb
cmp
cli
pop
dec
sbb
adc
lock
pop
and
scas
cmc
cmp
imul
nop
xchg
dec
lret
cltd
aas
pop
dec
fadds
test
mov
jl
add
int
and
lret
movsl
or
push
jmp
lahf
mov
jmp
or
adc
mov
add
add
pop
mov
jle
in
lahf
into
sbb
and
xchg
fwait
ds
sbb
sbb
lahf
xchg
sub
and
cmp
sarl
outsb
pop
pop
adc
out
xchg
xor
cmpsl
pop
data16
ret
repnz
rcrb
push
jbe
in
adc
popa
push
add
test
popa
xor
stc
mov
nop
pop
push
sbb
sbb
dec
mov
xchg
ud1
mov
xor
insl
push
loop
mov
mov
jg
adc
add
mov
enter
sbb
inc
mov
imul
mov
in
or
scas
repnz
xchg
xchg
lods
fmuls
sub
dec
lods
mov
pop
cs
or
pop
push
outsb
jo
stos
mov
movsl
cwtl
jnp
inc
insl
xor
mov
adc
xor
and
inc
rcrb
das
adc
ljmp
pop
jecxz
mov
pop
in
cli
aaa
jo
jecxz
jbe
repz
lcall
xor
push
in
leave
fldt
lods
push
jb
add
repnz
and
pusha
sbb
cmp
mov
inc
mov
inc
lret
push
jp
adc
add
insb
push
mov
cs
sarb
jne
popf
add
shr
aad
push
push
xor
sbb
shrb
insl
xlat
push
push
adc
push
jbe
mov
lret
pusha
push
cmp
rcrb
lcall
pop
dec
jge
pmaxsw
inc
mov
add
leave
sub
cmp
std
lret
imul
lock
js
popa
add
sbb
cwtl
stc
add
xchg
xchg
lret
add
xchg
hlt
test
add
dec
jns
sbb
sbb
and
cmp
sbb
xor
imul
das
in
xlat
pop
jb
int3
cmpsb
cli
mov
popf
push
push
xchg
cmc
inc
adc
stos
cmp
add
nop
arpl
pop
mov
add
stos
shlb
daa
xor
mov
das
cmp
inc
ljmp
pop
aad
adc
pop
cmc
sbbb
cltd
mov
fcmovnb
adc
fs
sub
mov
mov
push
lahf
imul
mov
jge
xor
mov
push
and
lds
in
test
mov
sbb
mov
jo
push
pop
jo
into
sub
xor
bound
out
out
insl
inc
es
mov
insl
sub
inc
lret
mov
mov
repz
sub
insl
movsl
testb
loope
lods
arpl
add
xchg
xor
jmp
into
pop
push
add
push
jne
push
sarl
adc
xor
int
test
std
ljmp
jo
push
cld
push
notl
pusha
mov
add
in
pop
mov
dec
pusha
jle
pop
push
leave
dec
xor
out
jno
iret
test
lret
jbe
mov
mov
pop
in
gs
fcoml
sar
rclb
and
pushf
adcb
and
push
fimuls
mov
push
out
cmp
mov
or
sub
mov
fwait
cltd
pop
jg
rcrb
mov
sbb
jmp
jle
jns
lcall
aas
popa
cmpsl
hlt
push
adc
lods
xchg
js
adc
in
inc
fs
faddl
int
jnp
adcl
hlt
rdtsc
xchg
sbb
out
dec
int3
pushf
lods
in
pop
cs
mov
pop
pop
xchg
imul
dec
xchg
sbb
push
aam
out
pop
aaa
sbb
mov
adc
stos
xor
jmp
xor
data16
adc
test
sarb
jns
pop
xchg
add
dec
int3
or
xchg
inc
xor
sub
pop
sahf
aad
add
cwtl
mov
and
lret
inc
daa
push
imul
sbb
repz
insl
lahf
subb
add
pushf
mov
clc
mov
loope
cmp
divb
lcall
mov
xor
mov
lret
and
sbb
adc
lea
and
push
push
push
sub
imul
mov
adc
aam
movsl
ds
or
fcmove
mov
jno
scas
adc
fwait
xchg
dec
sub
test
fxam
scas
xchg
sbb
test
mov
push
mov
icebp
push
inc
out
jmp
pop
orl
xchg
push
mov
jmp
cmp
jnp
sub
push
or
cmp
mov
mov
das
jns,pt
mov
mov
pop
pop
in
andl
orl
gs
or
leave
stc
fwait
dec
dec
cmpsl
jge
sbb
in
push
sarb
sub
aad
mov
outsl
clc
xchg
push
mov
cmpsb
pop
inc
jbe
nop
lret
dec
inc
dec
js
mov
push
sbb
mov
loopne
sbbl
les
nop
and
js
add
pop
push
mov
push
stos
mov
mov
mov
movsb
inc
stos
scas
xor
pop
lcall
jns
scas
subb
mov
shl
cmp
jp
shrb
push
lods
scas
rorl
repz
mov
adcb
lret
sbb
sub
cmpsl
rcrb
mov
mov
adc
mov
add
pop
add
dec
testb
stos
movsb
shl
sar
outsl
sbb
mov
cli
jmp
mov
sub
inc
mov
cmp
dec
push
ret
mov
sub
push
sbb
dec
xchg
pop
fstps
in
adc
xchg
in
xor
sbb
cmp
fildl
test
adc
ljmp
nop
pop
xor
push
mov
ss
out
adc
popa
nop
mov
pusha
sbb
jbe
stos
nop
mov
push
lret
push
fstl
add
ljmp
test
jo
rcr
pop
cmp
mov
jne
addr16
mov
jg
mov
add
mov
out
je
loop
push
popa
shrb
adcl
mov
inc
mov
jg
adc
mov
cmp
xlat
shrb
pop
aas
xor
js
out
xchg
mov
and
xchg
out
fs
mov
pop
insl
cld
mov
pop
xchg
test
sub
jle
daa
cmp
call
stos
enter
popf
fisubs
mov
and
dec
jb
mov
roll
repnz
push
xchg
mov
hlt
sub
jo
jae
scas
stc
mov
fnstcw
pop
mov
mov
orl
outsl
inc
cmp
inc
cmp
std
movsl
and
lret
cmp
mov
inc
lcall
add
mov
jno
pop
dec
mov
inc
icebp
fstps
out
dec
jbe
outsl
ret
push
popf
jp
out
mov
xor
test
inc
inc
xchg
imul
adcl
lcall
aas
aam
dec
xor
add
hlt
test
cwtl
push
repnz
xchg
push
dec
sbb
fcmovbe
mov
mov
push
mov
mov
insb
sub
mov
fs
int3
mov
mov
inc
mov
fs
test
dec
cli
mov
dec
and
das
push
sub
pop
ja
xchg
cmp
inc
jecxz
mov
xchg
lods
shll
jg
ret
shlb
or
jno
pusha
push
mov
jbe
xlat
push
sbb
dec
popa
and
data16
push
sub
mov
sahf
mov
dec
add
cmp
test
lds
xchg
xchg
loope
fldt
test
jo
jmp
icebp
mov
jo
sub
dec
xor
pop
shlb
gs
stos
push
xor
outsb
or
dec
lock
frstor
add
mov
cmpsl
jb
outsb
les
int
dec
xlat
jmp
pop
pop
dec
filds
test
mov
and
inc
push
pop
ljmp
inc
cmp
stc
loope
cmp
dec
pop
jg
js
repnz
sub
pop
inc
scas
jbe
sbb
cwtl
pop
add
adc
adc
xor
mov
and
and
repnz
sbb
pop
add
fisttps
or
ret
jne
orl
sbb
add
out
andl
call
loopne
js
add
in
mov
scas
sbb
sahf
or
cmpsb
rcl
jne
cld
inc
add
loope
shl
aaa
inc
xor
push
push
lea
pminsw
and
xlat
repz
sbb
outsb
test
inc
rorb
int3
sbb
in
gs
jae
mov
mov
das
inc
jns
sbb
sub
addl
pop
push
imul
inc
jp
mov
or
out
jbe
mov
in
in
ret
lcall
jecxz
mov
push
sbb
dec
inc
or
clc
pop
sub
cld
aam
dec
jo
lahf
stos
in
jbe
lahf
fadd
jno
ja
mov
je
adc
scas
les
scas
lahf
jb
loopne
rcrb
clc
pop
repnz
aad
fcompl
mov
or
and
shl
in
loopne
push
mov
hlt
es
inc
add
sub
dec
mov
shrl
les
mov
inc
mov
cmp
popf
mov
adc
insb
mov
aaa
pop
xchg
cltd
cs
les
cld
in
xchg
mov
bound
sbb
popa
daa
lahf
das
cli
mov
jo
jb
dec
push
call
repz
dec
pop
imul
aaa
loopne
stc
mov
push
rcll
out
shrb
mov
cmp
xchg
cli
in
pop
xor
sahf
into
push
and
fwait
jo
jge
cmp
sub
inc
xchg
cmp
insb
lcall
inc
dec
mov
fildll
lahf
mov
xor
mov
pop
hlt
pop
jl
imul
push
xchg
and
lods
fiaddl
jmp
pop
inc
adc
and
incb
into
inc
test
add
testl
mov
and
inc
mov
inc
jns
dec
int
divb
push
xchg
sub
outsb
jbe
jnp
enter
test
and
cld
sub
push
jno
data16
mov
jp
dec
fsubrp
lods
aam
push
mov
lahf
stos
mov
sahf
loop
mov
test
outsl
fsubrl
mov
bound
mov
xor
lret
or
sub
stos
clc
fwait
outsb
cmp
hlt
mov
adc
rcrl
push
data16
or
or
nop
jle
dec
das
sub
jle
pop
cli
sbb
sbb
outsb
sti
leave
lahf
pop
cmpsl
dec
jbe
jb
cld
cmpsb
dec
jnp
inc
xchg
or
sar
adc
mov
inc
and
clc
add
fstpl
inc
mov
dec
lods
je
adc
ss
pusha
pop
push
cmp
icebp
inc
bswap
ret
ja
rcl
data16
lret
push
out
add
mov
in
pop
enter
mov
pop
inc
jmp
aad
outsl
aam
movsl
inc
test
outsb
mov
pop
mov
sbb
jmp
sbbb
adc
mov
mov
lret
add
mov
test
or
sar
cmp
inc
xchg
or
imul
je
mov
ret
mov
shll
jae
push
cli
and
test
into
xchg
push
int3
push
and
jmp
sub
or
push
ds
xor
push
or
jle
adc
outsb
insl
dec
and
les
lret
daa
and
not
jne
dec
add
push
mov
aas
push
push
add
je
shl
mov
mov
mov
jbe
xchg
or
pop
inc
lcall
and
add
mov
out
push
out
and
adc
sbb
jno
loopne
and
cld
sub
out
cltd
dec
sub
aam
adc
jmp
in
inc
or
mov
test
sub
arpl
mov
cld
test
push
orb
add
pop
clc
pop
lea
or
add
push
loop
xchg
xchg
cmp
cmp
fsubrs
push
add
cwtl
or
push
mov
mov
out
adc
mov
cmp
imul
mov
popf
cmpb
lfs
lret
ja
cltd
test
cmp
lods
enter
pop
jecxz
mov
adc
dec
ss
mov
or
into
inc
mov
fwait
jne
mov
mov
fildll
push
inc
mov
and
clc
sub
or
dec
bound
mov
jmp
push
daa
jne
mov
imul
out
ja
fwait
out
add
add
idivl
rcr
jbe
test
push
cltd
out
mov
sub
mov
scas
xchg
or
cvtps2pd
push
pop
sahf
jno
loop
pop
xor
jle
pushf
cmpsl
mov
stos
dec
gs
lret
push
mov
mov
add
imulb
adc
arpl
imul
enter
xor
jne
sub
adc
add
movsb
test
jno
dec
dec
in
arpl
inc
push
mov
adc
sbb
in
out
cs
inc
adc
or
pop
cmp
fwait
or
int
adc
sti
out
and
push
inc
loope
pop
popa
int3
xor
xor
xchg
cli
and
lret
sbb
xchg
xchg
jmp
sbb
mov
jno
push
cmp
pop
pop
stos
mov
lret
cmp
std
xor
jl
lods
add
adc
push
xor
icebp
inc
dec
xor
pop
nop
mov
mov
rolb
cmp
mov
mov
mov
out
jge,pn
lock
aas
clc
jno
loopne
add
sub
xchg
in
mov
scas
in
jl
in
pop
or
lds
lock
repz
bnd
push
mov
cs
mov
pop
fisttpll
pop
cwtl
mov
enter
push
loopne
cld
add
and
in
mov
aam
dec
jmp
push
inc
inc
fwait
std
adc
jne
cmp
sbbb
inc
movsb
push
subb
cmp
and
push
push
add
mov
sbb
jge
cld
iret
xchg
call
dec
mov
shrl
cmp
out
shlb
or
test
popa
std
out
jne
xor
jns
lock
mov
xchg
and
popf
out
pop
pop
nop
and
inc
data16
cmp
aas
push
fldt
add
push
mov
inc
mov
and
push
ret
cld
mov
mov
lea
lret
xchg
mov
sbb
cltd
xor
lret
cwtl
adc
push
icebp
jle
fcmove
lcall
adc
test
jns
cmp
sarb
or
jp
xchg
xor
xacquire
movsb
cld
adc
adc
repnz
sbb
stos
test
bound
pop
push
in
sub
testl
jge
jmp
mov
jns
mov
std
out
es
clc
jg
push
daa
push
test
stos
mov
pop
xor
dec
icebp
daa
shlb
mov
bnd
mov
sub
mov
cwtl
cltd
cmp
testl
adc
fildl
call
xchg
mov
cmp
mov
jnp
xor
popf
mov
add
hlt
or
in
and
inc
subl
mov
bound
loope
sub
in
add
push
sahf
sti
lock
fisubl
jnp
push
lret
stos
and
xchg
in
cmpl
mov
or
testb
lods
into
jle
sub
sub
jecxz
cmp
gs
cmpsl
subl
adc
mov
and
push
dec
cltd
iret
xor
or
push
mov
mov
test
mov
mov
cmpb
add
mov
popa
cmp
push
sbb
inc
dec
dec
add
cmp
les
adc
int3
sbb
pusha
mov
add
movsl
push
hlt
add
pop
and
out
mov
in
adc
pop
pop
test
and
fsqrt
dec
fildll
inc
xchg
push
insl
idiv
jmp
and
test
add
pop
dec
fisttpll
nop
jge
daa
insb
mov
sub
mov
jnp
pushf
out
or
jle
push
popa
or
clc
in
gs
sar
ficompl
repnz
xor
fnstsw
pop
push
xor
and
bound
pop
cmp
adc
iret
in
out
hlt
pop
test
pop
jecxz
dec
pusha
add
push
pop
or
pop
mov
andb
pop
add
in
add
lea
lods
mov
inc
sarl
cmp
push
jecxz
jg
jp
xorl
in
fiaddl
ljmp
mov
ret
outsl
into
aas
mov
dec
fcmovne
or
pop
xchg
mov
jns
mov
mov
imul
and
sbb
add
icebp
and
and
fnstsw
jae
les
outsb
lcall
in
xlat
pop
dec
inc
xchg
pop
popa
mov
scas
or
mov
sub
outsb
lea
addr16
mov
scas
daa
jl
fwait
mov
or
lcall
outsl
cmp
xor
ret
fldt
pop
lret
xchg
jle
add
iret
inc
push
out
add
add
and
push
ss
and
sbb
and
pop
jecxz,pt
xlat
sahf
je
daa
push
pop
mov
sbb
mov
sbb
insb
or
sub
mov
pop
scas
leave
ja
outsb
imul
mov
imul
popf
dec
repz
ret
shll
pop
les
push
jge
and
fsubl
aas
mov
cmp
mov
xorl
mov
inc
inc
adcb
data16
xor
cmpsl
cli
jecxz
clc
mov
aad
and
jo
pop
jmp
fidivrl
mov
mov
xchg
pop
lods
and
sti
and
fs
into
and
fmulp
in
sti
inc
pop
pop
adc
dec
arpl
or
pop
push
cmpsb
into
cmp
push
cmp
lods
mov
push
insl
xor
pop
test
xor
jge
xor
movsl
aas
ficompl
cmp
lahf
bound
mov
jb
shrl
loopne
inc
jmp
pop
fcmovbe
int
divb
mov
test
sub
push
cltd
add
cmp
and
popa
cwtl
xchg
stc
js
mov
aas
nop
sbb
mov
incl
hlt
fnstenv
ss
shrb
leave
push
data16
fbstp
daa
fabs
arpl
fisttpll
sbb
dec
inc
xchg
or
sbb
fistl
aam
fcmovu
and
js
dec
cmp
push
adc
and
xchg
scas
push
adc
dec
rcll
push
andb
jb
shrl
sbb
fwait
ja
test
into
ret
dec
fimuls
std
push
xchg
addps
scas
sub
test
test
rorl
hlt
arpl
push
xor
ss
dec
rorb
mov
mov
das
cs
sbb
stos
lret
pushf
gs
arpl
mov
and
xor
shll
pop
sahf
adc
lds
daa
cli
loope
cmpsb
mov
jb
enter
or
filds
dec
push
out
addr16
lds
test
in
icebp
and
inc
xchg
dec
loope
jno
loope
dec
mov
in
clc
mov
enter
push
in
pop
mov
in
movl
mov
shlb
movsl
test
lahf
mov
fs
and
and
lea
mov
divb
int3
js
sbb
outsb
es
rcrb
inc
leave
dec
repz
lock
push
daa
ss
or
xchg
xchg
mov
ret
xorl
sbb
xchg
aam
sbb
movsb
stos
push
negl
xor
mov
addr16
cli
jnp
adc
pop
inc
lahf
sub
sub
xchg
addr16
or
pusha
xor
and
inc
rclb
xchg
int3
aam
stc
popa
sub
call
in
add
gs
movsl
adc
lods
xchg
push
or
mov
xchg
arpl
mov
rorl
cmpsb
fisttpll
jno
mov
ret
or
inc
xlat
push
sbb
and
and
mov
cld
mov
testb
rcrb
mov
mov
or
out
arpl
ret
xorl
int3
jge
imul
mov
subb
xor
adc
ljmp
inc
aas
loope
jno
sub
shlb
aam
xchg
pop
je
orb
pop
ret
inc
sbb
or
dec
imul
xlat
bound
jp
mov
movsb
push
icebp
ljmp
push
ljmp
adc
and
fimull
outsl
xor
orl
xchg
fcompl
mov
push
and
gs
sub
add
lock
xchg
test
nop
test
and
inc
gs
mov
cs
cwtl
push
pop
sub
pop
mov
aaa
sub
ret
loope
push
lret
and
cli
das
jge
loopne
adcl
mov
scas
adc
jl
cli
fdivp
ret
lea
cmp
push
stc
nop
xor
sub
shl
dec
hlt
outsl
stc
ret
jno
add
pop
xor
fldt
call
jle
xchg
int3
sub
lods
sub
mov
lcall
adc
cltd
xchg
int3
js
pop
and
jecxz
ljmp
aaa
lds
mov
movsb
add
add
and
fsubl
lock
jmp
fisubrl
and
mov
and
xor
xor
mov
rcrl
fs
leave
in
mov
sbb
ret
mov
push
cmp
dec
mov
shll
mov
xlat
or
mov
dec
xchg
jbe
xchg
mov
inc
adc
cmpsl
dec
jno
cmp
sub
mov
adc
sub
cmp
inc
mov
push
push
ljmp
fcmove
les
repnz
imul
add
pop
pop
cwtl
ljmp
inc
ret
test
mov
pop
sub
sbb
sbb
push
cmp
cwtl
add
jp
je
daa
addr16
out
mov
out
mov
loop
cs
cmp
pop
xor
or
or
cmp
rorb
gs
insl
mov
xchg
xchg
cmp
jns
or
cmp
fwait
popf
in
lret
adc
push
sub
inc
ja
sub
dec
fsubl
dec
mov
cld
imul
scas
inc
fdivr
fdivr
mov
xchg
or
pusha
lods
adcb
xor
and
repz
inc
sub
push
sbb
insb
dec
into
cmp
xor
cmp
xor
sbb
pop
or
xor
dec
mov
jp
mov
out
jno
push
sahf
aas
in
pop
add
xchg
test
aad
or
xchg
jmp
pop
pop
pusha
movsb
imul
mov
push
out
cmp
inc
mov
fdivl
test
test
iret
add
popa
or
mov
sub
cltd
dec
sub
pop
js
gs
and
or
stc
movsb
shrb
push
xor
sbb
pop
dec
call
cld
dec
popa
out
cwtl
inc
pop
dec
jns
mov
ljmp
pusha
mov
enter
xor
stos
adc
gs
out
ja
syscall
cmp
xchg
jae
cld
pop
inc
sbb
dec
subl
imul
movsb
mov
fbstp
jp
out
and
aas
mov
cwtl
in
pop
lea
cwtl
scas
lss
pop
scas
mov
out
or
jae
ljmp
lret
push
cmp
mov
pop
inc
mov
insl
mov
cmpsl
repz
scas
shlb
add
mov
jb
mov
push
cmpsb
inc
es
sbb
or
pop
pop
mov
fs
pushf
jle
xor
sbb
loope
adc
xor
push
adc
mov
and
arpl
lahf
sbb
decb
lret
icebp
mov
insl
adc
sub
mov
test
sahf
sbb
lea
ds
add
pusha
lock
xor
cmp
dec
mov
push
lahf
xor
add
cs
push
push
in
rorl
addl
icebp
ljmp
lods
andl
fdivrs
sbb
cmpsl
inc
lret
xor
addr16
test
filds
test
sbb
popf
mov
pop
or
pop
xchg
and
mov
inc
addl
das
lock
in
arpl
outsl
scas
push
addr16
dec
mov
mov
push
nop
xchg
insb
adc
inc
xchg
adc
insb
rorb
xor
mov
push
jle
int3
push
mov
xchg
inc
jle
lret
addr16
repz
bound
push
pop
adc
sub
out
mov
fists
lds
scas
cmp
pusha
cltd
mov
lret
sbb
inc
or
mov
ds
or
cltd
jmp
int
pextrw
dec
shrl
dec
or
test
test
pop
xor
fidivl
pop
sbb
inc
stc
addl
loope
mov
lcall
inc
inc
and
rorb
sbb
cmp
mov
push
add
lcall
xor
xchg
fidivl
jo
sarl
arpl
paddusw
int
xor
mov
push
rclb
mov
cs
xchg
pop
xor
fiadds
popf
dec
jb
gs
int
push
movsl
pop
cmp
stc
xchg
and
mov
xor
sbb
loop
and
sub
push
icebp
push
dec
jo
ja
repnz
insl
sbb
es
iret
cmp
std
xchg
mov
stc
mov
into
sub
xor
pop
stos
jge
cmp
mov
cmp
lret
fbstp
hlt
sbb
jmp
cmp
xchg
in
mov
iret
movsl
push
out
test
shlb
lock
or
fwait
inc
andl
xchg
xchg
out
test
push
ficoms
lods
xchg
out
dec
daa
cli
insl
popa
jmp
add
adc
lcall
rcl
xchg
adc
rcrb
stos
andb
rcl
int3
rol
mov
adc
mov
push
pop
jmp
rol
jg
test
js
jge
insl
jmp
jne
or
stos
jmp
sub
repz
int3
pop
pop
and
mov
daa
sub
repnz
mov
fldenv
movsb
lret
es
add
lret
loop
or
iret
incl
xor
mov
mov
inc
cmpsb
jl
popa
cli
and
mov
lret
mov
mov
icebp
repnz
movsb
loope
ficomps
push
repnz
mov
cmpsl
xchg
mov
cld
decl
mov
repz
adc
inc
repz
mov
scas
lods
test
inc
leave
inc
leave
repz
and
mov
out
adc
and
pusha
loopne
or
sbb
rcl
data16
ljmp
mov
gs
sysexit
mov
inc
and
fcmovne
jo
prefetcht1
xchg
data16
sahf
mov
addr16
pop
ret
repnz
cmp
mov
mov
dec
aas
jp
and
lock
xchg
lcall
fisttpl
and
neg
cli
push
pop
xchg
adc
add
mov
mov
cwtl
mov
push
cmp
jnp
add
cltd
fucom
add
cwtl
dec
dec
je
into
cmp
imul
or
out
call
dec
outsl
bts
jge
subb
negl
jle
fnstcw
pop
scas
lcall
mov
jbe
xchg
imul
mov
xchg
int3
pop
cmp
cld
mov
mov
es
xor
dec
sbb
js
iret
and
scas
pop
mov
testl
xor
jae
jge
pop
insl
push
pop
jg
push
ret
and
js
pop
loop
lods
lret
out
cli
or
test
xchg
jno
xchg
jo
adc
pcmpeqw
fists
adc
pushf
addb
sbb
ljmp
aaa
mov
sbb
adc
jle
adc
jns
mov
call
inc
fstp
ja
stos
pop
outsb
mov
dec
in
stc
xor
cmp
sub
push
cmp
mov
call
xchg
sbb
push
inc
sbb
iret
stc
stos
arpl
into
jbe
cmpl
lret
push
xchg
jle
push
fdivl
cltd
xchg
int3
or
jp
es
pop
test
push
ret
and
xchg
pop
rorb
push
test
bound
popa
jbe
mov
stos
sub
scas
fs
dec
icebp
sbbb
cmp
stc
jle
mov
pop
bound
insb
repz
push
in
out
lahf
inc
cmp
mov
lods
jp
aaa
cmp
sbb
icebp
and
jmp
jl
stos
ret
out
jecxz
adc
jne
push
sbb
pop
adc
cmpl
enter
out
push
push
arpl
cmp
lea
adc
aas
xor
loop
xchg
sub
pop
sbb
xchg
insl
mov
cwtl
lcall
mov
mov
cmpsb
inc
sub
adc
ficompl
lods
pop
adc
mov
jl
mov
cmp
xor
xchg
stc
push
addr16
enter
cld
ds
repnz
loopne
scas
sub
mov
dec
jno
mov
or
lods
icebp
in
aaa
pop
adc
in
pusha
push
lock
cltd
pop
jge
sbb
sahf
jo
xchg
cld
pop
adc
test
inc
js
cli
scas
sub
loope
lcall
les
aad
lods
pop
push
xchg
sbb
xchg
in
mov
dec
aad
aad
cmp
sub
bound
scas
enter
adc
addr16
jl
pusha
adc
xchg
push
lahf
addr16
mov
mov
pause
gs
add
fs
out
ja
mov
pop
or
cmp
movsb
mov
push
push
pop
adcb
pushl
inc
gs
cld
or
inc
hlt
in
or
mov
sub
mov
dec
arpl
pop
test
xchg
repz
xchg
imul
cltd
xchg
aaa
dec
addb
cmp
inc
pop
in
jmp
ljmp
fcompp
xor
push
adc
xor
dec
push
mov
in
loopne
sarb
leave
decb
mov
dec
adc
hlt
mov
aam
fisttpl
cmpsl
stos
scas
lret
mov
scas
jo
pop
jl
bound
sar
xchg
fists
adc
xor
in
inc
outsl
xor
adc
adc
aad
mov
dec
test
or
ret
dec
sbb
stos
rcrl
dec
icebp
fwait
add
imul
xchg
push
mov
les
xchg
rcrl
ret
mov
pop
in
push
cmpl
mov
adc
pop
aas
sub
mov
loop
mov
pop
push
adc
push
xchg
mov
adc
fsubrl
mov
fidivs
and
loop
dec
imul
or
cld
add
leave
movsl
shrl
inc
ficompl
xchg
mov
push
sbb
fucomip
int3
mov
lods
cmc
mov
xor
andb
arpl
sti
addb
leave
xchg
xchg
fdivr
lcall
xchg
sub
cmp
xor
push
sub
ja
testl
push
popl
pop
ret
adc
or
outsl
adc
repnz
cs
xor
push
mov
into
adc
xor
icebp
outsb
sbb
insb
mov
xor
aam
sub
mov
stos
jne
lods
addr16
sub
and
xor
fnstsw
scas
repz
pop
stos
cmp
xchg
mov
dec
add
mov
into
rolb
sahf
xchg
xor
fiadds
sub
jo
push
and
and
jge
jno
xchg
nop
roll
adc
ds
jge
imulb
mov
xchg
jne
pushf
push
stc
or
mov
sbb
adc
xchg
and
es
push
dec
js
outsl
push
das
out
cmpsl
mov
pushf
sbb
push
outsb
inc
pop
jns
ljmp
pop
js
scas
sub
jns
pop
aaa
adc
xchg
pusha
adc
mov
pusha
enter
out
lea
mov
mov
sahf
pop
push
pop
fs
fisubl
sub
pop
mov
and
adc
xlat
fstpt
jecxz
insb
jo
data16
cmp
rolb
insl
stos
add
movsl
pusha
aaa
add
adc
push
xchg
loope
or
dec
mov
and
mov
lods
lcall
add
or
lock
and
ss
out
leave
xchg
shl
aaa
es
inc
push
jnp
lods
jns
xor
jb
xchg
sbb
jmp
stos
mov
cltd
pop
es
or
cltd
and
or
cmpsb
mov
mov
pop
pop
outsb
jge
aam
shrl
cld
stc
ss
shr
pop
sub
and
bound
mov
rorb
sbb
pop
inc
iret
xor
jmp
aas
adc
movsl
xor
shrl
add
dec
js
je
inc
push
and
es
jne
mov
aad
mov
dec
std
jecxz
cmpsl
xchg
jbe
js
add
sbb
mov
xchg
xchg
and
pop
push
scas
aam
push
dec
outsl
cwtl
jne
mov
test
cmpsl
popf
fcoml
cld
setns
xor
mov
adc
std
mov
ja
mov
xchg
mov
imul
stos
inc
cwtl
xchg
orl
stos
rorb
rep
mov
stc
std
inc
shlb
mov
sbb
dec
sbb
shll
mov
mov
xchg
inc
push
jb
jp
icebp
and
mov
add
push
inc
out
pop
test
shlb
stc
lock
push
adc
lock
outsl
xchg
inc
mov
jo
icebp
inc
adc
mov
fsqrt
shrb
imul
sub
xchg
sub
repnz
and
and
sbb
or
jl
fsubrp
mov
cmp
or
mov
push
mov
adc
in
dec
cmpsl
xchg
or
or
xchg
loopne
repz
enter
cmc
inc
sub
mov
or
mov
xlat
mov
jo
imul
cmpsb
imul
imul
cmpb
push
add
lcall
clc
mov
sub
repnz
xor
push
jg
addr16
shll
sub
xchg
adc
cltd
mov
add
mov
push
push
inc
mov
sub
adc
imul
ret
and
pop
add
fcmovu
mov
adc
xlat
sti
sbb
sbb
push
push
ljmp
adcl
cmp
mov
mov
test
mov
aaa
and
mov
xchg
lcall
ret
stos
jo
inc
rolb
dec
mov
addr16
adc
stos
cli
or
cmc
mov
jmp
and
dec
sbb
xchg
sti
test
jo
jl
out
test
rolb
adc
das
scas
stos
xor
imul
jl
xchg
es
pop
movsl
mov
lret
push
gs
jge
and
std
test
stos
out
and
pop
inc
ss
ljmp
sub
lea
push
scas
mov
adc
sbb
sahf
inc
sub
push
movmskps
lea
bound
adc
sub
mov
je
mov
push
jb
push
mov
mov
repz
sahf
fistpl
lcall
push
and
or
fdivl
xor
pusha
dec
cmp
push
dec
mov
std
lcall
mov
pop
xor
lds
dec
test
or
xchg
xchg
jmp
dec
ss
mov
sub
jl
ss
nop
icebp
aad
fucomp
lea
adc
mov
lahf
sub
dec
or
inc
in
lahf
ja
xorb
lock
aam
mov
xorl
movsb
jge
dec
aas
sbb
insb
aam
jns
xchg
cwtl
in
cmpsl
add
ljmp
scas
ror
scas
aam
cmp
aaa
andl
xor
adc
adc
gs
and
mov
sbb
xchg
sub
das
jae
lcall
lahf
pop
insl
and
lcall
outsb
add
leave
xor
ja
mov
xchg
push
mov
push
cmp
and
rcrb
mov
jmp
andl
gs
out
push
mov
mov
pop
in
scas
mov
into
aas
xchg
adc
or
icebp
push
mov
xchg
cwtl
shr
outsl
loop
adc
mov
xchg
pop
insl
lret
mov
in
aaa
out
and
enter
ds
outsb
xchg
adc
jno
push
sub
xor
mov
clc
jne
sahf
push
mov
add
jne
cmpsb
pusha
testb
jne
and
add
push
dec
das
int3
pushf
mull
fidivrl
jae
fdiv
pop
aaa
inc
mov
ret
xchg
imulb
dec
push
mov
jae
push
sbb
aam
dec
push
or
addb
xchg
push
imul
subl
es
lret
cmp
xchg
test
xor
mov
popf
cmp
pop
out
xchg
mov
subl
or
sub
xor
or
iret
pop
stc
sbb
test
cli
in
andb
fiadds
mov
dec
incb
adc
scas
outsl
pusha
imul
xor
xor
jmp
mov
adc
dec
add
das
inc
lret
mov
and
setg
xchg
hlt
and
sbbl
push
jno
pop
pop
popw
nop
cltd
cmp
jbe
es
inc
and
fimuls
and
xchg
mov
daa
sub
pop
pop
cmp
fidivs
fucomp
mov
hlt
jns
addl
sbb
cmp
jmp
adc
pusha
jbe
loopne
test
icebp
mov
shlb
cli
pop
dec
dec
xor
add
fs
adc
lahf
cmpl
dec
aaa
filds
out
lret
shlb
enter
lcall
dec
ret
cmp
insb
add
pop
mov
outsb
cwtl
dec
lret
xchg
sub
mov
push
dec
out
leave
lds
sub
jge
fldenv
orl
sarl
mov
rcrl
pop
or
addb
xchg
stc
mov
test
pop
xchg
pop
add
mov
cmp
int3
inc
sbb
pop
in
bound
stos
ds
xchg
sbb
aas
xchg
lds
pop
js
xor
popf
daa
mov
sbb
sbb
dec
mull
incl
pop
sahf
sbb
mov
cmpsl
fcoml
inc
inc
mov
fbstp
sbb
fstl
or
jne
xor
idiv
ret
loope
xchg
mov
stos
mov
std
test
mov
sub
nop
mov
popa
xor
mov
loop
xor
sti
gs
push
pop
push
pop
aaa
and
pushf
jmp
inc
sbb
sbb
bound
adc
inc
ret
rolb
fdiv
sbb
jecxz
call
test
out
inc
addr16
dec
in
inc
xchg
ss
or
adc
push
cmc
jno
je
pusha
fcoml
int3
inc
jbe
shl
pusha
mov
icebp
fnstsw
stos
push
iret
xlat
add
jo
fs
jnp
push
mov
dec
mov
clc
jge
mov
shr
ja
daa
test
out
add
mov
add
jns
subl
mov
int
xor
or
fsubrl
xchg
and
rcr
inc
sub
push
mov
sbb
inc
dec
dec
add
lods
int
mov
das
cli
adc
fmulp
sub
xor
inc
pop
daa
jge
ds
aam
lods
sbb
mov
jb
jge
mulb
js
xchg
pop
mov
out
mov
ss
mov
cmp
call
sub
jns
and
gs
or
leave
cmpb
inc
shl
lret
flds
out
stc
pop
adc
jbe
mov
jmp
adc
clc
sbb
sbb
fwait
loope
repnz
jb
hlt
loope
add
jno
cmp
mov
adc
pushf
mov
jle
push
insb
in
jb
or
or
repnz
lods
lret
je
scas
cmpl
in
add
sti
jle
add
cmp
mov
push
add
adc
sub
dec
xor
popf
and
imul
mov
int3
add
rcll
mov
adc
aas
mov
fnsave
or
sbb
fcompl
push
das
ja
sub
pop
in
scas
pop
inc
into
inc
sub
adc
or
push
mov
dec
dec
cs
dec
jns
popa
add
push
sub
in
das
mov
leave
push
and
dec
xchg
popa
inc
test
in
sahf
nop
lea
inc
jns
mov
in
jns
cmp
mov
xor
xchg
out
xchg
mov
mov
mov
mov
xchg
adc
mov
cmp
lcall
xchg
jge
jg
out
push
inc
add
mov
mov
sbb
push
add
stc
loopne
iret
or
pushf
inc
ljmp
lret
fs
xor
sub
xor
shll
jp
or
mov
jmp
cmp
jle
cmc
cwtl
or
lret
and
fwait
adc
loopne
xchg
test
cmp
inc
ja
test
dec
repnz
ss
xor
das
cli
inc
adc
mov
lods
int
pop
sahf
mov
shr
mov
or
inc
ljmp
mov
sub
stos
mov
rolb
pop
lods
nop
mov
ret
ja
sar
xor
cmp
sub
cmc
cmp
outsb
jno
arpl
and
lock
mov
or
adc
fdivrs
jne
bound
sbb
adc
scas
or
cs
jg
jl
mov
or
jne
push
lret
les
mov
jae
cmp
jo
pop
fnstcw
in
push
cs
stc
sbb
mov
insl
lret
cmp
dec
loopne
cltd
mov
popa
mov
and
and
dec
jl
jae
mov
adc
xchg
pop
ret
push
in
cmpsl
cmp
push
push
pop
push
ja
out
lods
int3
cli
dec
repz
push
jp
or
inc
cli
sbb
and
lret
mov
xor
jne
repz
hlt
xor
addr16
pop
xor
mov
pmaxsw
mov
in
push
lret
adc
movsb
lds
lods
movsl
lock
fnstenv
imulb
lds
xor
sbbl
jne
pop
cli
ret
fdivr
repz
outsb
sbb
daa
lahf
inc
sti
lock
or
cmpsb
or
repz
mov
sbb
test
icebp
pop
dec
xchg
fwait
outsb
mov
sbb
push
insb
lea
adc
lods
je
cmp
mov
and
sbb
xchg
cwtl
scas
int3
pop
mov
shll
dec
sbb
mov
pop
orb
fstps
lcall
les
lret
es
jnp
out
push
loop
rclb
mov
repz
push
add
nop
mov
jbe
call
data16
das
movsb
andb
shrl
scas
pop
cmovno
sub
fistpll
lahf
fwait
in
subl
subl
push
add
popf
mov
mov
stos
push
inc
aas
inc
out
imul
js
popf
and
mov
loope
jb
into
aam
idivl
je
push
arpl
pop
mov
xor
repz
rorb
je
in
add
inc
pop
rolb
je
cmp
cmc
data16
pop
sub
insl
scas
push
pop
xchg
cmpb
push
std
pop
popf
pop
mov
cli
aas
pop
xor
test
adcl
push
or
mov
mov
jle
xor
inc
inc
add
jmp
aad
dec
cmp
pop
mov
popf
cmovne
cmp
movl
add
out
enter
enter
inc
mov
shrl
cmp
or
pop
xchg
and
into
push
xor
lret
cwtl
dec
insl
shlb
test
rcrb
roll
pop
add
stc
jne
in
adc
test
push
pop
mov
aam
cld
or
sbb
mov
pushf
inc
cmp
mov
aam
push
mov
ret
jbe
icebp
mulb
lods
push
add
pop
mov
pop
aam
mov
cmp
mov
add
repz
pop
adc
arpl
sub
mov
jmp
push
pop
xchg
cli
inc
aas
cmp
nop
cmp
bound
popa
adc
add
in
xchg
xor
int3
inc
sti
xchg
pop
push
xchg
sub
test
inc
adc
icebp
lock
mov
in
mov
andl
cmpsl
mov
jge
js
pushf
pop
push
jle
cmp
and
add
int
subl
dec
mov
jo
push
xor
in
mov
xchg
movsl
sbb
jge
movsl
sbb
jg
lcall
dec
loop
cmp
mov
fnstsw
stc
mov
xor
pushf
pop
or
mov
adc
mov
jbe
insb
sub
or
jne
loopne
xchg
pop
xchg
xchg
pop
movsb
shll
movl
xchg
cmp
lcall
je
pop
add
mov
rcrb
dec
and
jp
mov
pusha
divl
ret
jb
adcl
pop
fwait
and
cmpsl
pusha
push
jnp
lods
popa
push
lock
jne
cli
mov
mov
adc
insb
rcr
loop
leave
sbb
enter
sub
adc
jne
mov
inc
dec
xchg
les
mov
into
test
test
or
lods
mov
test
dec
and
test
aam
icebp
mov
pop
pop
sbb
daa
fisttpl
in
jp
push
aad
iret
xor
jmp
xor
cmpsb
mov
add
lcall
testl
dec
jp
pop
pop
add
inc
inc
insl
xor
push
push
subb
rcr
xchg
cmp
and
mov
loop
push
sahf
call
xlat
xchg
lock
in
jne,pn
fldenv
call
jmp
push
xor
sbb
enter
cmp
pop
icebp
mov
cmp
lea
fs
lds
ja
dec
dec
fnstenv
mov
pushf
call
add
pop
in
sub
sub
inc
or
dec
in
int
ja
xchg
es
xor
pop
std
arpl
cwtl
push
or
inc
and
adc
sti
xchg
fldt
lea
subb
cmp
insl
mov
aaa
xor
fs
outsb
lock
lret
and
test
mov
mov
rorb
ss
outsl
sub
into
xchg
add
sub
mov
in
add
mov
add
jo
inc
inc
xchg
jno
jg
jg
testb
and
cmpb
mov
insl
dec
movsl
ljmp
or
orb
cmp
sti
fld
popf
cmp
aaa
push
xchg
push
in
aam
push
pop
loop
out
adc
jbe
js
adcb
jecxz
xor
and
jp
orb
jae
gs
inc
mov
mov
cmpsl
or
lock
stos
out
push
push
subl
mov
fstpt
jnp
data16
cli
mov
pop
sbb
xchg
js
pop
sti
jnp
sbb
repnz
divb
sbb
jmp
fisubs
and
or
cld
fnsave
daa
sub
push
xor
int3
lahf
enter
shrl
xchg
cld
in
and
mov
cwtl
push
and
adc
insb
inc
dec
and
in
xchg
cltd
subl
jmp
xchg
xorb
test
ljmp
gs
cmp
fdivr
bnd
flds
mov
lds
not
pop
pop
mov
adc
stos
rcrl
mov
jecxz
xchg
sub
push
cmp
mov
cmpsb
and
cli
decl
gs
xchg
out
cmp
inc
add
add
jnp
ljmp
xchg
pop
xchg
jbe
push
jae
xor
pop
imul
add
aam
int
mov
jnp
mov
iret
cmpl
cmp
aaa
add
push
outsb
ret
insl
ja
les
xor
in
mov
jb
push
and
pop
sub
xor
jl
xor
pushf
jnp
pop
dec
lock
sub
or
xor
out
imul
xchg
mov
mov
cld
pop
hlt
push
sub
jne
add
ror
mov
out
fcomip
mov
add
push
loop
jmp
mov
sub
push
movsb
cld
in
nop
movsb
ja
rolb
repz
sub
insl
fistl
into
mov
in
push
stos
inc
pop
outsl
lds
pop
inc
dec
cmp
add
mov
push
shl
out
shll
adc
in
and
mov
fadd
popa
dec
lahf
fnstsw
popa
popf
test
imul
fiadds
sub
stos
mov
or
pusha
jl
xchg
inc
inc
pop
adc
add
in
add
stos
cmp
ret
jecxz
xor
xchg
xor
int
jbe
and
xchg
add
stc
sub
mov
mov
leave
add
fistpl
jg
or
pop
jle
int3
movsb
push
lods
mov
cli
das
shl
xor
pop
sbb
call
repz
push
leave
jp
sti
xchg
cmp
sub
xor
mov
jbe
aad
fstps
inc
cltd
xchg
pop
xchg
mov
xor
mov
push
repz
dec
in
loopne
pop
push
orl
xor
shl
lahf
jle
test
inc
cmp
xor
xor
adc
dec
shlb
test
ret
pop
jp
push
test
mov
ret
jns
dec
daa
dec
mov
mov
test
pop
pop
jno
stc
cmp
dec
jle
pusha
sti
xor
jne
jg
xchg
or
lods
add
lods
or
pop
lahf
in
lock
daa
test
shr
dec
ss
vmovss
adc
lods
pop
lods
jl
add
push
les
scas
mov
leave
fcomps
pop
addl
jnp
cld
mov
inc
out
loope
insb
and
jmp
push
sbb
fadds
nop
add
and
lock
mov
mov
icebp
outsb
jns
and
cmp
call
add
fstpl
xchg
mov
mov
dec
mov
lods
out
loopne
adc
mov
mov
push
adc
sbb
and
push
call
jne
jp
popf
test
ret
fidivs
push
lret
aam
cmp
cmpsb
or
js
sbb
push
xchg
mov
aam
mov
std
adc
xchg
pusha
mov
mov
push
mov
pop
fwait
lcall
mov
sub
fidivrs
sbbl
jnp
dec
in
mov
inc
cmp
dec
pop
or
pop
cltd
data16
dec
fimuls
fnstcw
lea
mov
mov
mov
mov
pusha
xchg
cmp
or
bound
add
in
das
fs
fadd
lret
in
sub
ret
mov
dec
lods
mov
les
in
stc
outsl
dec
xchg
or
jne
dec
shlb
jae
cmp
sbb
pop
sahf
lock
int3
aas
mov
jge
mov
inc
stos
popf
fmull
lahf
mov
scas
adc
pop
enter
inc
aas
inc
add
jp
push
movsl
or
loopne
sarl
cmp
popa
sarl
scas
inc
inc
pop
mov
cwtl
lods
out
aas
xchg
mov
pushf
sbb
cs
adc
stos
xor
or
lock
sbb
jp
pop
pop
inc
fisubl
mov
inc
jle
js
push
mov
out
mov
mov
push
lahf
xor
lock
out
mov
sbbb
sbb
cltd
xchg
js
cmpb
cwtl
lcall
jmp
jp
in
jnp
xorb
push
sbbb
in
rcl
jp
mov
xchg
pop
mov
sahf
cmpsl
loop
adc
movsl
jbe
ja
loope
dec
out
test
mov
cmc
cmpsl
dec
lsl
shlb
jb
orb
xchg
shl
adc
sub
insl
and
rcrb
push
pop
fcoms
pop
cli
in
dec
dec
popf
jge
icebp
mov
or
cmp
push
out
loope
sbb
loop
xor
cmp
and
jne
imull
test
fldl
sbb
sahf
je
mov
bndldx
fdivrp
mov
adc
pop
lds
push
jg
frstor
cwtl
pop
sbb
test
int
lds
into
cli
mov
mov
inc
nop
icebp
leave
notl
inc
cltd
ljmp
shlb
test
jg
mov
add
cli
push
les
mov
inc
add
xor
repnz
sbb
fimull
cmp
enter
inc
jge
daa
cltd
in
cmpsb
ret
and
xchg
dec
std
bound
je
mov
rol
sub
arpl
rorb
mov
pop
icebp
out
lahf
call
adc
in
adc
push
cld
dec
pop
in
gs
or
cmpsb
xor
dec
sbb
dec
jmp
cmp
lcall
push
mov
leave
adc
addl
mov
inc
fiaddl
push
xchg
adc
outsl
jg
xchg
sub
int3
add
fwait
aaa
iret
subl
sti
clc
rorl
mov
daa
pop
orb
imul
or
push
pop
mov
push
mov
fdivrl
pop
das
mov
stos
rcrl
push
jae
xchg
aaa
push
fstpl
rol
andl
cmp
pusha
pop
sbb
movsb
bound
popf
pop
add
jae
fs
jl
cltd
imul
aaa
ja
out
aad
iret
add
mov
mov
out
or
sahf
or
fwait
aaa
movsb
pushf
scas
jnp
imull
loopne
add
inc
jmp
jmp
mov
sub
dec
add
pop
xor
xor
icebp
jns
sub
ljmp
mov
ret
xchg
scas
mov
popa
cmp
inc
imul
daa
stos
enter
mov
xor
daa
inc
adc
scas
jmp
pop
push
sub
js
cltd
sbb
and
clc
test
mov
inc
sub
divl
lcall
mov
sub
jno
xor
sbb
mov
sub
in
cmp
arpl
or
call
or
dec
mov
inc
dec
pop
sub
xchg
pusha
pop
dec
push
push
ljmp
add
xor
movsb
lcall
sbb
pusha
shrb
repz
scas
ljmp
call
jmp
pop
mov
jb
mov
ds
andb
jg
pop
rcrl
dec
mov
or
rcll
cld
dec
imul
rclb
add
pop
fldcw
xor
loop
and
test
lds
jnp
into
jnp
lods
adc
mov
inc
fidivl
stos
sbb
lods
rcl
loop
fucomp
sbb
add
mov
cld
mov
mov
ja
add
fs
mov
popa
loop
xor
stos
in
push
inc
mov
sub
add
xor
add
cmp
xlat
mov
add
sub
sub
push
jns
jns
dec
pop
in
sti
and
ja
inc
int
jne
inc
mov
adcl
sahf
dec
push
inc
lret
out
xchg
adc
add
jmp
dec
bound
and
ror
icebp
mov
arpl
and
jg
mov
in
leave
notl
imul
push
insb
nop
jmp
jns
int
adc
jns
adc
xorl
jg
xchg
pause
lds
push
pop
mov
scas
cwtl
adc
lock
push
inc
jg
sbb
pop
dec
mov
sub
sub
jmp
aas
sub
add
mov
int3
pusha
loope,pt
jmp
dec
mov
nop
mov
xchg
add
push
and
xchg
add
jne
enter
gs
mov
adc
rep
pop
enter
lret
jle
adc
add
ficomps
fs
fs
mov
pop
cs
rcl
mov
out
pop
jbe
inc
and
xchg
aad
jp
mov
xlat
and
cmp
fstpt
insb
jp
add
xor
xchg
jae
mov
inc
outsl
jbe
sub
jecxz
push
das
mov
sahf
lds
or
mov
sub
sbb
jle
add
mov
mov
in
jmp
xor
std
insl
and
in
fistpll
mov
mov
pop
mov
dec
dec
fildll
dec
icebp
add
test
dec
sub
pop
sbb
cmp
jne
mov
pop
add
jnp
dec
decb
mov
fs
cmpb
mov
fdivrs
cwtl
das
dec
sbb
fiaddl
dec
lahf
jl
test
shl
jns
call
movsl
outsb
mov
cli
or
lcall
sbb
inc
mov
push
jne
push
cli
mov
mov
xchg
jnp
push
scas
mov
push
mov
lods
pop
adc
out
lcall
xchg
cmp
add
or
and
ljmp
lds
inc
test
and
adc
inc
adc
push
pusha
or
mov
mov
ffree
fcmovne
outsl
sub
add
jge
icebp
bound
push
cmp
push
lods
outsl
lods
rcr
shrb
sub
int
sub
mov
sbb
or
xchg
lcall
push
fnstenv
mov
xor
sbb
lret
pop
in
fwait
push
push
mov
mov
sub
cmp
mov
nop
mov
sbb
stos
mov
jmp
in
jnp
ja
arpl
push
ljmp
jae
cmp
test
jmp
cmp
jl
rep
sahf
adc
push
imul
push
pop
pushf
scas
xor
mov
xchg
rorb
shll
shlb
push
out
test
hlt
test
push
iret
jne
jmp
jbe
popa
test
insb
mov
es
push
jl
lret
push
xor
out
mov
adc
lods
sbb
dec
shrl
js
repz
inc
pop
and
ss
fxch
out
outsb
push
stos
add
push
movsb
or
dec
mov
popl
popf
mov
ret
lret
in
out
dec
mov
inc
pop
ljmp
pop
dec
pop
fisubl
into
push
cmp
test
pop
in
xlat
mov
and
sbb
xchg
cwtl
adc
jno
or
or
es
push
stc
mov
push
xchg
inc
push
clc
dec
cmp
inc
sbb
loopne
jae
xchg
test
or
jae
hlt
pop
cmp
popa
aam
add
adc
inc
ret
cmp
fptan
push
inc
int
pop
in
push
or
xlat
cmpsl
add
dec
lcall
pop
cmpsl
stos
out
int3
ficompl
lret
pop
inc
push
adc
pop
lods
inc
mov
std
rcrl
inc
inc
ret
fsubl
popf
lret
cs
jp
dec
insl
xchg
lret
mov
or
insb
adc
xor
sbb
dec
pop
ljmp
sahf
mov
jns
int
pop
rorb
add
mov
jg
test
cmp
xor
mov
mov
leave
inc
adcb
push
and
jecxz
inc
cmpsl
fisttps
loop
rol
add
adc
push
bound
push
sbb
add
or
mov
sahf
call
loope
leave
pushf
and
iret
mov
ds
lock
pop
push
pop
in
push
fstps
jno
and
sub
inc
popf
inc
cmp
mov
jno
jne
jns
out
inc
mov
or
and
dec
popa
sbb
popf
dec
add
or
jle
cld
bswap
add
pushl
sahf
fs
fcomps
jne
push
mov
push
lds
aam
adc
add
add
sub
xor
pop
pop
sarb
mov
std
add
add
lahf
daa
ss
cmp
subb
mov
fwait
test
mulb
in
push
lods
test
je
cli
out
nop
sahf
jno
jp
dec
stos
lea
iret
and
aad
arpl
push
xchg
rcl
imul
mov
sub
pop
gs
movsb
or
aam
xor
ss
js
jbe
xchg
out
and
movsbl
xchg
dec
imul
cmp
gs
hlt
mov
call
insb
dec
push
inc
enter
pop
fsubr
hlt
cmp
clc
pusha
add
in
inc
outsb
ss
imul
push
push
xor
ljmp
ja
mov
inc
adc
es
xor
test
or
adc
push
dec
sbb
lcall
out
test
or
add
and
ja
pusha
pop
testb
das
xor
jb
adc
aam
dec
test
jne
dec
repz
out
sub
xchg
xchg
adc
or
push
push
rcrl
mov
cltd
or
in
push
popa
fdivrp
cmp
loope
repnz
into
fs
test
xlat
inc
sahf
sub
push
dec
movsl
jl
xchg
ret
dec
ds
mov
ret
pop
sub
outsb
out
ljmp
je
pop
mov
pushf
in
add
jecxz
xchg
mov
inc
mov
sub
popa
out
cmc
lock
adc
loop
push
push
and
mov
dec
out
sub
sbb
cld
and
push
inc
cmp
xorb
pop
xchg
mov
mov
mov
ret
fucomip
lods
out
das
in
hlt
inc
incb
inc
jne
fmuls
popf
lret
dec
dec
sbb
dec
jecxz
sti
add
mov
std
pop
dec
cmpsb
pop
fs
adc
leave
jbe,pn
sbb
jmp
sahf
jmp
lret
jl
fwait
lret
sahf
xor
pop
imul
ss
jae
hlt
nop
fsincos
test
push
andb
jo
stc
repz
jl
popf
mov
mov
mov
sbb
push
inc
push
imul
or
andl
loope
push
add
mov
mov
sub
outsb
add
mov
and
lcall
push
mov
data16
sbb
mov
dec
push
and
or
popa
sub
mov
adc
lods
mov
icebp
xchg
test
mov
or
test
mov
clc
hlt
nop
jecxz
mov
sbb
fstl
stos
out
pop
cmp
fistps
cltd
mov
shll
xchg
mov
movsb
sub
pop
stc
aaa
pop
adc
leave
mov
shrl
imul
sbb
jb
sbb
mov
mov
stc
inc
or
jl
push
enter
mov
adc
adc
adc
mov
aas
lahf
mov
add
std
pop
sbb
fistl
cltd
push
push
adc
dec
ret
rcll
mov
aad
mov
or
and
mov
nop
push
sbb
scas
push
or
and
movsb
icebp
push
and
mov
jl
outsb
addr16
push
mov
jo
inc
out
inc
jl
xacquire
mov
scas
aaa
or
jns
or
sub
leave
loope
jne
lret
pop
push
cmp
mov
test
pop
or
sub
push
jb
mov
pop
pop
jbe
shll
pushl
inc
ret
and
sbb
xchg
sub
sbbb
sub
data16
inc
xor
sbb
mov
sti
pop
insb
ss
cli
push
cmpsl
cmp
lea
jp
cmp
pop
or
adc
ret
inc
lcall
sbb
jp
lcall
jo
cmpsb
adcb
dec
dec
push
xchg
or
rolb
pop
mov
orl
and
rep
cmp
lahf
pop
add
mov
xchg
in
ja
rol
sub
or
lock
xchg
add
add
xorl
pop
pop
jmp
mov
dec
push
mov
stc
adc
ss
xor
jo
jg
or
jns
movsl
es
push
push
leave
test
and
cmp
push
mov
mov
fistpl
rorl
leave
loope
cmovs
mov
pusha
scas
lret
jne
push
orb
popl
loop
dec
decl
bound
xorl
push
pop
cmp
mov
jg
adc
jl
cmpl
pop
mov
cmc
pusha
jl
push
inc
incl
bound
into
or
ljmp
sbb
mov
and
icebp
roll
adc
fistpll
mov
dec
and
and
jmp
cltd
mov
mov
addr16
jno
push
xor
cmc
jecxz
lahf
or
in
aas
push
in
mov
push
cmp
imul
push
jns
mov
stos
aam
pushf
cmpsl
sahf
adc
out
cmp
sbb
xor
jb
lret
push
pop
pop
ds
pusha
js
mov
mov
int
sahf
jmp
pop
and
mov
or
shl
mov
sbb
jae
lret
fcomi
in
jg
mov
loopne
into
loope
fistpll
cmpsb
or
sub
xor
or
int3
xchg
int3
rorl
repz
aad
fistpl
pusha
imul
jecxz
pop
xchg
shl
imul
push
rcrl
adc
imul
or
rclb
mov
jno
test
sbb
enter
cmp
mov
xchg
pop
inc
das
movaps
mov
cli
popa
adc
adc
fwait
pushw
mov
dec
xchg
xlat
fisubl
cltd
pushf
xchg
mov
pop
arpl
xor
in
push
jae
je
mov
into
cli
movsb
jnp
push
in
add
mov
es
rep
cmp
mov
leave
mov
cmp
les
lcall
out
test
mov
pop
mov
xchg
popf
dec
insb
negb
into
cmp
dec
adc
and
mov
out
insl
repnz
add
sbb
testl
ret
jg
or
movsl
sub
jns
int
mov
jl
cmp
daa
movsl
cld
lret
xchg
push
les
add
jl
sub
sarl
sbb
mov
inc
mov
daa
fimuls
imul
fnstcw
xchg
xchg
js
pop
mov
bound
scas
loope
aas
iret
pop
dec
or
add
jno
sbb
lock
push
stc
pusha
jp
add
nop
or
test
cwtl
xchg
sub
and
pop
icebp
or
pop
or
mov
loop
pop
dec
mov
pop
fadds
pop
stos
out
sbb
lret
push
mov
fs
mov
or
inc
mov
or
xchg
xor
pushf
dec
mov
mov
jl
mov
pop
repz
test
das
mov
repnz
push
pop
cmc
xor
test
xchg
dec
inc
call
lods
imul
cli
or
or
insl
mov
jg
outsl
ja
out
mov
add
stc
daa
in
jae
mov
imul
int3
inc
test
inc
popf
bnd
out
aam
xchg
xchg
jnp
fadds
fs
pop
mov
pop
inc
cmp
aas
jg
lahf
stos
in
mov
in
dec
in
cwtl
dec
mov
ljmp
fisubrl
ja
add
popf
fistps
xchg
adc
sub
into
add
jl
pop
outsl
mov
pop
cmp
loopne
sbb
inc
ret
rorl
cmp
push
lahf
jle
popf
push
test
fisubrl
stos
mov
jbe
or
inc
jg
jge
loopne
shlb
mov
or
ds
subb
push
or
into
and
lock
out
jl
ds
int3
dec
aad
bound
dec
test
imul
fcmove
repz
mov
leave
or
in
lea
cmp
rcrb
mov
call
stos
xorb
or
in
add
mov
pop
iret
xchg
mov
ss
dec
scas
das
insb
push
fstps
push
or
inc
jnp
bnd
daa
adc
incb
fimull
or
gs
fwait
pop
inc
and
pop
outsb
inc
jmp
jnp
and
push
movb
cmp
mov
cltd
out
jmp
rcll
xchg
mov
pop
out
push
add
pusha
mov
and
mov
test
movsl
sub
add
mov
dec
fcmovnbe
fwait
jb
sahf
xchg
enter
cwtl
sbb
or
mov
int
andb
int
push
inc
daa
aas
lods
rcl
arpl
pop
dec
sub
loopne
cmpsb
les
cmp
sub
inc
fisttps
lock
jb
jbe
cwtl
mov
and
push
or
cmp
test
push
xchg
adc
mov
pop
outsl
int
mov
outsb
mov
push
out
cmpsb
or
jmp
cltd
xchg
rcll
popf
xor
jle
cmpb
gs
mov
pop
or
push
mov
xchg
popa
repnz
repz
xchg
mov
pop
push
jg
xchg
insl
cmpsb
les
icebp
add
popf
push
lahf
xchg
popa
ljmp
out
inc
mov
imul
and
mov
jne
cltd
insb
aaa
enter
mov
and
mov
adc
ror
xchg
int3
leave
mov
pop
je
push
xor
dec
les
mov
cmp
in
lods
loopne
rclb
jp
rclb
insb
mov
and
sbb
pop
push
leave
cwtl
fsts
pop
lcall
sahf
int
ds
add
fmull
mov
and
xchg
cmp
mov
jne
add
jae
add
push
xorl
or
shrb
les
inc
test
cmpsb
lcall
pop
sub
scas
xor
adc
dec
outsb
pop
mov
cld
lods
xchg
cltd
lea
cmp
pusha
pop
das
cmp
ss
stc
sub
and
sti
xor
into
and
in
ja
les
or
jo
fisttpl
push
cmc
decb
jne
adc
sub
or
mov
int3
sbb
lahf
xchg
lret
fbld
in
sbb
push
ss
lahf
inc
pop
or
jmp
imul
xor
nop
imul
pop
xchg
xchg
out
lock
xchg
incl
pop
sub
and
push
lcallw
xor
repz
loope
arpl
ljmp
imull
lods
enter
notl
insb
inc
imul
xchg
movsl
xor
dec
lcall
sbb
pop
fsubrs
out
cmp
orb
cmp
out
addr16
pop
mov
sub
cmp
push
xchg
inc
jl
pop
mov
shr
data16
adc
out
mov
je
jg
mov
imul
clc
jnp
jle
sub
sub
pop
push
rclb
out
in
xor
ret
sub
scas
xchg
adc
loope
sbbl
ret
xchg
xor
divb
rolb
jecxz
jb
and
cmpsl
and
out
jl
xor
adc
call
xor
lock
mov
xchg
add
push
push
jecxz
cld
int
cmp
dec
dec
movsl
adc
dec
dec
ret
jb
jnp
cmp
mov
popa
lea
ljmp
xlat
call
das
ret
jns
xor
dec
popa
ret
mov
call
mov
lods
ss
in
cmc
mov
call
mov
push
adc
movsl
scas
xchg
iret
mov
mov
gs
mov
dec
pop
lds
add
push
in
and
jnp
mov
clc
xor
cmp
in
sbb
ds
out
andb
lods
fsubrp
dec
out
inc
mov
dec
stc
and
and
dec
jno
dec
int3
jmp
aad
inc
and
cmpsl
mov
in
jne
cwtl
decl
out
mov
insl
xorl
mov
andps
fstpt
jne
or
pop
xor
sub
imul
lcall
add
xchg
sbb
jle
adc
cmp
cmc
aas
lds
cmp
xchg
lods
jge
aas
pop
sar
decb
fildl
jno
inc
fisttpl
dec
pop
lahf
cmp
cmc
jbe
leave
push
or
int
ds
jae
sbb
cli
sub
aaa
and
mov
js
inc
rcl
cmp
out
fldl
mov
dec
inc
xor
push
or
mov
mov
imull
shlb
mov
pop
ja
mov
call
in
cmpsl
xchg
pop
jmp
mov
mov
scas
lcall
pop
aas
dec
fimuls
imul
imul
fldenv
xchg
cltd
sbbl
jmp
mov
test
sarb
pop
mov
or
shrb
jg
lss
xor
mov
mov
loopne,pn
mov
jno
adc
dec
pop
jno
mov
shrl
sbb
imul
mov
in
addb
fwait
cld
xchg
mov
mov
cmp
movsl
std
lock
mov
xorl
orb
sahf
adc
pop
jmp
psrlw
cmpsb
mov
fsubr
je
cmp
fldt
mov
inc
cli
mov
and
std
dec
pop
xlat
sbb
aas
push
dec
adc
aam
sbb
lret
pop
iret
mov
nop
dec
fsubrl
dec
test
sti
push
sbbl
out
cmovno
ror
lret
cmc
mov
cmpsb
testb
xchg
jg
cwtl
or
add
or
jno
mov
aad
outsb
lret
outsl
cmc
mov
in
cmp
adc
mov
rolb
scas
lds
adc
mov
pop
dec
mov
push
lds
not
out
sub
out
daa
mov
rolb
and
rcll
and
fwait
xchg
lea
add
push
je
pop
fisubrl
xor
test
pop
aam
push
popa
leave
fisttps
jecxz
sbb
cmpsl
push
cwtl
pushf
pop
xchg
in
inc
mov
jge
ds
adc
adc
rcrl
rclb
sbb
out
sbb
insl
mov
aaa
xor
mov
xchg
xchg
fucomip
nop
pop
push
or
mov
jae
pop
gs
lods
out
xlat
push
cli
fs
add
loopne
scas
les
data16
jae
test
push
inc
jns
inc
pop
jno
outsb
pop
inc
sub
dec
push
and
ljmp
aaa
mov
fidivl
ds
testb
push
aaa
enter
adc
cld
lods
notl
subb
icebp
cmp
sar
insl
insl
add
fcoms
shrb
nop
pop
insb
sub
arpl
nop
xor
lret
xchg
fcompl
mov
fistpl
adc
sub
fcmovnbe
or
xchg
xchg
adcl
sbb
or
pushl
xor
int
cmp
int
ljmp
cmp
lock
xlat
push
inc
dec
test
scas
pop
pop
adc
cltd
sub
fwait
mov
test
cmp
scas
test
loopne
sbb
jb
lds
popa
sahf
mov
ljmp
inc
cmpl
in
inc
jno
subl
xchg
push
or
sub
pushf
lret
fnstcw
cmpsb
mov
push
dec
dec
or
fbstp
jae
das
inc
popf
sub
and
adc
je
jmp
nop
das
mov
xor
mov
std
out
pop
pop
repz
cmp
testl
mov
mov
cmpsl
mov
and
into
xchg
stc
sub
xchg
and
sahf
sub
js
jne
jmp
inc
jmp
enter
lds
add
lea
pushf
ja
js
pop
sarb
sub
jo
xor
lods
cs
lahf
dec
in
mov
and
jecxz
cltd
jge
xchg
and
lcall
mov
gs
adc
addr16
mov
dec
xchg
pop
addb
mov
pop
jnp
out
push
test
ror
mov
subl
cmc
ss
imul
mull
inc
ja
jmp
sbb
adc
ljmp
push
imul
mov
mov
mov
xchg
roll
xchg
fisubrl
rorl
jg
inc
daa
jp
cld
jbe
xchg
mov
mov
data16
mov
xor
push
fbstp
xchg
mov
lods
mov
into
cmpsl
jno
and
into
pop
decl
into
or
arpl
ja
jge
xchg
dec
xor
pop
mov
mov
nop
iret
mov
push
add
mov
das
stos
xchg
xor
inc
scas
out
lret
sti
jmp
je
cmpsl
cld
dec
scas
xor
inc
push
popa
mov
inc
push
lret
mov
outsb
cmp
and
loop
pop
int3
cld
cmovae
lock
push
orb
inc
outsl
jmp
fldl
push
push
mov
mov
mov
in
test
sub
out
rorl
icebp
pop
push
loop
and
scas
ja
lret
cmove
and
add
mov
xlat
fcompl
out
das
cmpsl
daa
mov
mov
hlt
fwait
add
fisttpll
mov
loop
bound
cmp
call
and
add
mov
mov
add
sub
jno
out
adc
movsl
push
mov
add
push
dec
out
cmpsb
hlt
lock
cmp
pop
mov
dec
cmp
pusha
inc
mov
and
hlt
push
push
xchg
dec
push
insb
lods
loopne
mov
fisttpl
jecxz
daa
xor
sub
sbb
adc
call
lock
cmp
xor
cmp
add
xchg
aad
dec
inc
shl
sub
jmp
std
add
sub
lods
enter
lcall
loope
rcl
ret
adc
dec
jb
repnz
arpl
dec
mov
loop
movsl
test
scas
in
scas
adc
mov
int3
lea
jno
sbb
mov
xor
jge
adc
or
jae
mov
jmp
xchg
lods
mov
call
popf
pop
repnz
es
in
mov
in
mov
or
test
shll
add
hlt
mov
xchg
sbb
pushf
xchg
out
mov
mov
cltd
pop
adc
test
sti
mov
mov
sbb
loopne
loope
jl
and
jp
xchg
out
fadds
icebp
xchg
cmp
mov
sub
fsub
add
cwtl
std
xor
cmp
lcall
pop
or
push
adc
dec
mov
js
movsl
clc
dec
sbb
or
jns
xor
scas
sbb
stc
rcrb
js
xchg
xlat
xor
mov
add
outsb
mov
adc
adc
xchg
daa
mov
and
push
and
loop
clc
bound
mov
rcrb
jne
popa
aam
outsl
pop
pop
out
shrl
fadds
push
test
daa
icebp
data16
repnz
mov
inc
cs
orb
xchg
lret
sbb
hlt
lahf
xchg
jecxz
sbb
es
rorl
add
adc
push
jge
mov
test
arpl
push
loopne
cmp
faddl
xchg
in
sti
cmp
test
jne
or
dec
pop
adc
push
push
add
mov
dec
scas
adc
fnstenv
fwait
scas
jbe
hlt
pusha
sub
mov
test
daa
and
push
hlt
in
fwait
in
mov
gs
add
out
push
push
gs
mov
inc
jb
je
aad
adc
movsl
leave
stc
adc
mov
inc
cwtl
icebp
dec
ljmp
aad
pop
test
sub
mov
inc
sbb
cmp
insl
fs
lret
push
jb
icebp
lds
aam
fst
call
xchg
test
push
ss
xor
lea
mov
jae
inc
xor
pop
xor
or
mov
je
int
xcrypt-ofb
cmpsl
scas
or
rclb
cmp
inc
sbb
xor
cmc
pop
in
mov
jg,pt
int
or
cmc
jg
aas
pop
jns
pop
mov
out
xor
inc
cmp
sub
dec
addr16
or
scas
pop
sahf
in
push
inc
push
aas
inc
push
push
bound
insb
addr16
cmp
das
push
and
fwait
xchg
xor
hlt
mov
les
mov
push
mov
push
jecxz
adc
adc
das
xchg
scas
xor
cli
cmp
cltd
fs
mov
pop
outsb
add
mov
popf
fisubrl
in
and
jno
inc
out
xor
xchg
cli
inc
loopne
xchg
test
shl
push
negl
cmp
fcom
mov
cmovge
std
xchg
push
es
cmc
push
stos
add
repnz
mov
das
sbb
insl
shl
mov
or
dec
jae
out
dec
push
adc
adc
inc
mov
les
xor
repnz
jns
addb
mov
jae
inc
mov
mov
cld
pushf
adc
ja
push
xchg
inc
out
pop
shll
sub
repz
std
dec
pop
fadd
xchg
mov
and
pop
pop
jg
xchg
or
subl
notb
jl
popa
mov
mov
inc
scas
loope
aam
dec
fisttps
bound
mov
push
jne
jg
hlt
nop
sbb
outsb
lds
jo
negl
sub
sub
setbe
cld
inc
inc
aaa
xchg
adc
rolb
sub
out
and
fwait
xor
out
adc
jle
sbb
push
icebp
lds
loope
and
xchg
sbb
out
dec
adcb
fwait
pmaxsw
ret
xchg
lret
dec
sarb
shrb
dec
inc
roll
dec
ja
mov
loop
imul
add
dec
lock
scas
sub
adc
or
xchg
cmpsl
sub
cmpb
rcrl
popa
out
ret
lock
int
movsl
shl
cld
sahf
lret
push
rcl
push
xor
lret
or
pop
mov
pop
pop
jmp
sti
idiv
and
daa
sbb
pushf
out
dec
mov
and
int3
jg
push
add
push
cmp
lock
cmpsb
pop
mov
call
push
fistps
dec
mov
inc
icebp
inc
fs
aam
mov
lds
mov
loop
addr16
xor
mov
out
fsubl
lret
leave
rorb
dec
mov
popf
xchg
test
in
out
xor
jp
push
ret
mov
ret
xchg
pop
and
xchg
pop
cmp
pop
mov
inc
xor
repz
dec
xor
mov
imul
inc
call
add
or
rorl
gs
xchg
dec
xor
rcrb
pop
ss
in
imulb
pop
outsb
push
imul
into
mov
sub
aam
jle
and
call
adc
mov
lods
or
test
mov
sbb
sub
std
test
cmp
jae
xor
test
xor
pop
aad
adc
inc
dec
into
aad
pop
jbe
clc
add
jb
dec
mov
add
bound
sbb
mov
fidivrs
mov
fwait
add
adc
fwait
cs
not
mov
push
xchg
pop
popf
xchg
neg
icebp
xor
cmp
push
pop
jl
mov
sbb
leave
test
data16
xchg
mov
jns
mov
lcall
scas
adc
test
mov
pop
xchg
mov
imulb
inc
inc
movsb
fdivrs
fdivrs
ror
push
shrd
mov
aaa
das
js
call
or
fidivl
addr16
das
jne
and
mov
insb
int
push
and
pop
adc
in
mov
outsb
and
dec
fcoml
jecxz
xor
pusha
mov
push
sbb
jge
xchg
pop
cmpsl
mov
mov
adc
notb
rolb
add
fstpl
inc
sahf
mov
adc
pusha
ds
insl
xchg
repnz
jecxz
mov
das
ljmp
daa
sbbl
mov
jle
pop
mov
adc
loop
iret
and
xchg
testb
pop
sahf
push
pushf
lcall
push
pop
ret
cmp
adc
pusha
ss
cmpsl
jg
xor
addr16
sub
and
add
xchg
mov
xor
push
insl
jge
dec
gs
cmp
insl
movsl
mov
sbb
cmpsl
pop
dec
stos
sub
outsb
pop
shl
dec
imul
sub
daa
cmpb
popa
jns
or
and
test
and
pop
aas
fadds
int3
jns
roll
lea
iret
call
aas
push
push
sbbb
pop
js
aam
mov
mov
jns
pop
xchg
and
or
pop
xchg
cmp
mov
nop
cmp
fidivrs
lret
sbb
inc
enter
jl
cmp
pop
fwait
add
or
aam
rcll
sub
mov
out
bound
cmc
mov
xor
and
and
dec
push
xor
mov
add
adc
push
mov
adcl
xchg
mov
and
fstps
out
pop
cmp
mov
or
aad
pop
aam
imul
aam
cmpsb
aam
add
pop
out
or
into
movl
mov
or
hlt
add
cmpsl
call
sub
repz
arpl
xchg
lds
test
dec
shl
and
inc
ret
dec
ss
xchg
stos
cmp
inc
lahf
or
int
xor
inc
sub
clc
into
jbe
call
cmp
sub
xchg
cmpsl
clc
push
arpl
push
enter
or
adc
jae
nop
sbbl
cltd
stc
nop
pop
movb
xchg
xor
out
xor
inc
jo
sub
mov
aas
pop
lods
sbb
xchg
jp
stos
mov
cmp
mov
inc
jno
sub
lods
rorl
out
push
mov
mov
aaa
pop
nop
iret
pop
push
pushf
push
adcl
or
shlb
pop
in
inc
jl
rorl
sub
pop
mov
call
dec
cwtl
enter
mov
arpl
test
insl
fisttpll
or
pop
movsb
adc
je
jge
andl
or
out
fimull
test
xor
xor
in
ret
imul
out
mov
fistl
mov
pop
addps
fmuls
sbb
mov
add
sub
adc
cmp
dec
mov
add
or
repz
xchg
sbb
enter
dec
lcall
test
inc
mov
fsub
dec
inc
mov
add
dec
sbbb
inc
cmp
cltd
mov
and
inc
inc
aaa
jno
rorl
xchg
inc
push
je
jge
cmc
sbb
cwtl
or
dec
mov
xor
push
inc
xchg
xorb
in
mov
ljmp
fwait
call
ss
mov
mov
mov
sub
bound
pop
push
mov
repnz
cli
lahf
iret
addr16
or
data16
cs
cmc
push
pop
sub
or
cmp
cli
fdivrl
push
add
xor
in
mov
mov
scas
dec
pop
adc
rclb
mov
mov
ret
xchg
in
sbb
cli
push
push
lret
test
lds
xchg
xor
arpl
xchg
and
stos
repz
mov
or
pusha
shl
fimull
jne
xchg
nop
xorb
aam
xchg
cmp
jns
mov
je
pop
in
add
jl
rol
hlt
fcompp
subb
add
scas
cmp
test
lds
xchg
sub
fimuls
xor
call
adc
pop
ljmp
jns
sub
aas
mov
ror
xorl
pop
and
cmc
lods
cmpl
arpl
jne
inc
lds
sbb
push
jle
add
das
sub
add
inc
fdivrs
jae
enter
mov
cmp
ret
cmc
gs
add
xchg
xchg
idivb
out
fidivs
jmp
xor
popf
pop
ljmp
rcrl
insl
fs
cmp
sbb
dec
push
push
loopne
sub
jp
add
xchg
fs
scas
loop
dec
pop
stos
xor
stos
aaa
test
mov
jecxz
cwtl
shll
roll
xchg
add
and
pop
sbb
leave
mov
dec
in
mov
cwtl
pop
push
enter
jno
call
push
add
clc
jmp
mov
outsb
add
mov
add
in
pop
mov
std
jmp
mov
mov
add
arpl
and
mov
loop
mov
mov
popa
cltd
mov
jne
jb
stc
or
nop
xor
fisttps
jg
xchg
in
mov
in
insl
test
int
adc
push
push
jne
xor
pushf
mov
adcb
repnz
inc
int
data16
cmpsb
ja
mov
jns
lret
jmp
sahf
jo
das
adc
cwtl
mov
push
cmp
adc
scas
xchg
imul
jle
add
xor
jno
jo
inc
insl
out
push
add
and
mov
iret
insb
sub
pop
mov
mov
insl
xchg
or
inc
jnp
lods
xchg
hlt
out
outsb
push
mov
ja
xchg
repnz
mov
dec
xchg
arpl
xchg
push
lods
arpl
push
les
push
div
mov
ds
std
fdivrs
cs
sub
mov
decl
nop
stc
cmpsl
sbb
icebp
mov
or
bound
sar
mov
filds
jb
jg
mov
stc
pop
inc
mov
movsb
xchg
addl
sbb
mov
aad
push
or
das
pop
lock
dec
sti
in
mov
call
test
testl
rcrb
aam
pop
lods
clc
adc
inc
shlb
or
scas
mov
xchg
sti
outsl
cltd
test
call
mov
test
jl
xor
cmp
loopne
lods
stc
fildll
pop
cmpsb
popf
es
sbb
scas
push
mov
mov
xchg
and
push
dec
imul
fistps
frstor
cmpsl
notl
aad
ret
sbb
adc
fsubrs
jns
push
loopne
mov
es
loop
jne
into
scas
xchg
xchg
inc
sbb
add
cli
xor
hlt
movsl
or
inc
inc
push
mov
in
movsb
and
iret
dec
inc
pushf
iret
adc
cmpsl
mov
in
xchg
mov
mov
call
les
mov
in
std
dec
jmp
addl
sub
mov
insl
stos
xor
rorl
enter
inc
and
mov
or
pop
rorb
xlat
gs
pop
sbb
stc
push
aam
add
or
push
sub
inc
and
ljmp
test
movsb
and
pushf
outsl
aam
fldenv
insl
and
in
cmp
pusha
hlt
sahf
loope
rcr
lods
dec
pop
cmp
stos
out
test
stos
lods
fs
add
std
or
fcomi
or
push
and
enter
jl
inc
in
stc
mov
add
pop
insb
push
jo
aaa
mov
pop
add
and
cltd
push
mov
push
or
xchg
out
mov
mov
jecxz
js
or
popf
je
stos
and
mov
pop
add
repz
pop
rclb
test
lods
xor
xchg
pop
push
enter
js
mov
jno
lods
jbe
jmp
sarl
dec
sub
jno
es
lods
incb
stos
call
fcmovne
or
adc
loope
push
movsb
ljmp
mov
jp
dec
cmpb
mov
mov
mov
sub
jno
test
sbb
jnp
mov
sub
stos
int
dec
mov
jmp
sub
adc
lods
cli
inc
cmpsb
xor
fcmove
cmpsb
pusha
sub
or
notl
jle
and
inc
sahf
insb
mov
fstps
int
ficompl
sub
aam
push
test
sub
pop
add
into
mov
aam
and
pop
xlat
outsb
lods
jecxz
mov
out
hlt
imul
jb
mov
add
std
inc
test
add
sub
push
jns
pushf
mov
les
mov
aas
popf
in
mov
and
daa
adc
leave
fcmove
and
loope
mov
xlat
xor
add
push
jae
fcoml
mov
bound
stc
movsl
rorb
addr16
inc
xchg
pusha
dec
or
fiaddl
cmp
sbb
test
jp
or
fisttps
fcmovnu
insl
inc
push
mov
test
fwait
test
pushf
inc
push
dec
cmpsb
cld
aas
cmpsb
adc
ja
mov
popl
testl
icebp
fidivs
mov
add
aaa
in
xor
pop
mov
dec
icebp
pushf
jno
sub
mov
lds
je
mov
xor
mov
jle
cli
pushl
pop
addb
lret
mov
js
das
movsb
cli
daa
push
adc
xchg
mov
mov
mov
jo
scas
clc
sbb
and
push
ss
inc
cmpsl
dec
jnp
pop
cmp
movsb
push
arpl
scas
in
lock
icebp
xchg
sub
cli
and
lret
mov
sahf
mov
fdivl
sti
movaps
or
jnp
push
stos
sti
sbbb
or
imul
sahf
out
and
jae
clc
push
add
push
adc
cmp
gs
add
scas
mov
pop
cmpb
sbb
pop
popf
jge
jno
fldl
inc
dec
lret
in
gs
insb
jmp
inc
add
insb
outsl
xorb
shlb
lods
jmp
imulb
outsl
test
call
dec
push
je
inc
fisttpl
pop
push
aas
adc
cmp
push
mov
int
inc
jge
jno
jo
cmpsl
hlt
xchg
fnstcw
adc
jecxz
jl
and
mov
sahf
fucomip
and
stos
cld
mov
xchg
cmp
lods
lea
es
call
hlt
cmp
stos
jecxz
pop
cli
push
push
scas
movsb
inc
enter
out
inc
or
call
inc
mov
mov
and
sbb
adc
in
mov
push
jge
mov
testl
clc
int3
add
mov
repnz
adc
int
or
pushf
inc
or
ret
fwait
push
bound
aad
aad
fdiv
mov
in
lcall
cmpsl
out
dec
push
jno
mov
sub
jp
jle
and
sub
cltd
push
inc
mov
dec
push
fs
mov
inc
std
inc
push
or
dec
cmp
add
loope
js
xor
mov
fdiv
pop
outsl
cltd
stos
mov
fcmovnb
add
test
and
cmp
jae
lcall
mov
ret
mov
mov
mov
sarb
pop
sbb
mov
test
lcall
lret
pop
xchg
sub
bnd
mov
lods
pop
adc
scas
mov
subl
jecxz
aas
test
out
lock
sub
inc
test
test
mov
mov
pusha
fildl
jmp
mov
and
push
adc
jnp
pop
push
pushf
cltd
fsubr
mov
xchg
mov
cmp
pop
adc
shrb
scas
test
mov
insb
loopne
ljmp
mov
push
lret
iret
mov
ss
gs
cmp
and
out
lret
bound
pop
mov
dec
sbb
xor
push
cli
jb
mov
dec
in
lret
cltd
shlb
xchg
popl
push
vpcomuq
add
mov
mov
pop
inc
jl
mov
insb
fnstcw
dec
jb
dec
add
cmpsb
test
test
and
je
cld
fsubr
push
pusha
out
testb
adc
pop
mov
adc
dec
arpl
hlt
jne
dec
cmp
out
push
xchg
stc
xor
incl
sti
mov
mov
mov
dec
test
pop
rclb
leave
out
mov
lret
loopne
sub
mov
xchg
dec
fimuls
jp
adc
jmp
jbe
sbb
lds
fistpl
sub
adc
and
lret
push
frstor
mov
rcll
xor
shll
in
pop
js
push
pop
dec
repnz
loope
xchg
iret
sbb
ja
sahf
dec
icebp
push
jae
pop
test
lods
je
push
sar
stc
dec
push
and
icebp
mov
popa
ds
jns
pop
mov
stc
leave
xchg
filds
rcrb
xchg
int3
jle
xchg
sub
ret
call
or
xor
dec
repz
cmp
or
aaa
daa
lock
shll
loop
sub
insb
rcrb
xlat
aas
pop
inc
add
outsl
mov
inc
adc
cli
xlat
lret
test
jns
nop
popa
xor
hlt
sbb
mov
mov
nop
data16
enter
cmp
pop
loope
dec
mov
inc
or
mov
out
mov
jmp
xor
dec
adc
adc
or
cld
divl
push
xorl
js
gs
sbb
out
add
jbe
mov
adc
cwtl
or
adc
jb
xchg
std
jl
cmp
xor
xchg
or
jno
inc
mov
fnstsw
scas
sbb
or
sbb
sub
mov
psubsb
sbb
movsb
std
scas
out
in
dec
dec
addl
jne
sbb
add
pusha
cmp
mov
in
jl
sarb
mov
jmp
pop
xchg
loope
shll
or
in
fnstsw
psubsb
lret
jmp
xor
fnstsw
and
jae
leave
adc
call
jno
cltd
cmp
push
mov
shr
inc
adc
sbb
mov
je
cmpsl
orb
xor
adc
pop
cld
gs
add
clc
sbb
cmp
mov
pop
adcl
mov
add
call
push
outsl
test
cs
jl
jns
add
xchg
insb
jne
adc
mov
ss
fiaddl
xor
sub
sahf
dec
fs
jg
in
mov
pop
xchg
imul
and
jne
fisttpll
fiadds
push
or
mov
ja
lds
cmp
push
jmp
push
ret
jne
mov
xchg
pop
lock
das
fwait
push
in
add
ljmp
in
xchg
mov
lret
sbb
mov
jmp
sahf
mov
mov
adc
sub
or
fisttps
push
ljmp
into
pop
pop
sarl
mov
adc
jo
sbb
mov
lods
gs
into
out
jo
out
jg
rcrb
jp
clc
out
cmpsb
sar
inc
in
add
aad
mov
xchg
sbb
mov
lret
test
dec
sbb
add
xor
rorb
ret
sbb
push
out
cld
push
sbbb
push
pusha
call
mov
lret
nop
mov
mov
inc
jo
mov
pop
aas
test
js
movsl
jle
or
jle
add
or
mov
xor
or
add
sub
xchg
mov
imul
inc
fs
iret
std
jne
ds
pop
mov
cmp
and
mov
dec
jb
jecxz
outsb
data16
pop
add
push
ret
push
add
fmull
lret
push
or
paddd
pop
inc
insl
or
test
adc
mov
dec
adc
mov
popa
xlat
mov
add
call
mov
push
aad
adc
sbb
push
xor
add
sub
mov
mull
loopne
test
rcrl
lahf
xchg
movl
js
jno
movsb
mov
bound
xor
xor
xorb
mov
test
dec
cmp
lcall
jbe
loop
inc
pop
ret
mov
test
data16
cmpsb
movsl
pop
rcl
inc
rorl
js
movsb
sbb
push
mov
push
lock
outsl
scas
adc
incb
push
and
mov
loope
dec
sbb
push
mov
rcrb
push
pop
aam
cmc
and
sahf
or
sahf
or
and
jg
jns
cmp
xor
pop
dec
jg
or
mov
inc
shrb
mov
inc
adc
mov
xlat
adc
leave
aam
inc
lods
fs
inc
call
negb
fldl
xor
push
add
arpl
xchg
popa
jge
notb
out
mov
fildll
out
sub
loopne
sub
sub
test
scas
add
pop
roll
loopne
inc
push
mov
xor
es
jge
xchg
sub
sub
xlat
push
adc
mov
lods
mov
test
sub
testb
sub
mov
xchg
gs
stos
fs
loope
enter
push
js
insl
aad
mov
mov
push
insl
mov
push
movl
pop
cmp
dec
add
push
pop
popa
lret
mov
aas
jmp
cmpsl
jmp
movsl
jp
test
sub
repnz
mov
cld
lods
fstps
cmp
loop
and
rcll
fiaddl
xor
fiaddl
xchg
push
lock
fwait
and
inc
subb
jb
in
add
sbb
or
mov
add
mov
sbb
rol
lcall
leave
ret
sub
jl
fucompp
fbstp
cwtl
in
fcoms
iret
inc
jmp
xor
pop
cmpsb
sbb
sbbl
ret
lahf
jp
lock
pop
sub
outsl
lods
lods
repz
mov
in
mov
into
and
mov
gs
sub
xchg
dec
dec
add
fimuls
sarb
mov
outsb
dec
clc
adc
and
out
je
or
mov
iret
scas
mov
lret
sarl
imul
push
dec
fdivl
dec
cmpsb
data16
repnz
notb
mov
push
ret
xchg
enter
push
js
sti
cmp
imul
xor
cmpl
add
jae
lret
sbb
popf
push
loopne
add
in
loopne
pop
add
ds
and
decl
dec
pop
fstps
xchg
mov
dec
data16
add
dec
inc
lret
xor
mul
xchg
rolb
loopne
push
fstpt
loop
scas
shrl
xor
sbb
and
push
fucomip
subl
jmp
jge
add
iret
xor
jae
int3
jmp
lods
and
stos
mov
orb
dec
fstps
sbb
aad
ja
in
cmp
popa
cmp
add
pop
sahf
mov
add
enter
jnp
sub
aad
mov
push
mov
cmpsl
jl
mov
jge
xor
cmp
ds
adc
into
pop
iret
xor
mov
or
dec
in
mov
cmp
out
mov
push
fidivrl
popf
mov
fmull
xchg
and
add
bound
pop
mov
add
ljmp
and
ja
jne
aam
pushf
xor
and
inc
test
pop
mov
push
mov
and
cli
ret
pop
dec
mov
sarl
in
mov
enter
add
sbb
mov
pusha
stos
and
dec
cmp
mov
jmp
repz
popa
sbb
inc
push
cmpsl
add
push
or
lds
lahf
sub
inc
push
leave
and
es
arpl
jae
mov
out
adc
jmp
std
popf
sub
notl
jnp
leave
cmc
and
mov
mov
add
shrl
push
rorb
add
inc
push
fadd
lcall
inc
in
pop
lcall
and
data16
inc
and
lret
ja
test
fs
xor
es
pop
int
cli
inc
xor
cmpsb
andl
addr16
mov
jbe
sarb
fisttpll
out
or
xor
ljmp
pop
jmp
adc
call
xor
or
loop
push
or
shlb
sub
movsl
lcall
xchg
mov
into
xor
test
stc
inc
call
in
push
jmp
push
xchg
mov
mov
lret
lret
fildll
rcrl
add
jns
mov
out
aam
mov
lock
sbb
mov
mov
inc
inc
jmp
and
xchg
mov
push
xchg
fucomp
jbe
ss
ljmp
xor
jp
pop
lret
test
and
sbb
roll
or
call
pusha
mov
mov
aaa
pop
cmc
leave
enter
call
cltd
cltd
int
fsubl
push
in
js
sbb
mov
mov
inc
lds
mov
ret
out
arpl
icebp
sbb
sbb
and
ds
sti
mov
outsl
inc
into
mov
lds
jg
movsb
and
clc
mov
adc
push
adc
lock
pop
inc
add
xor
fsubr
push
pop
insb
sub
aas
mov
xchg
or
adc
in
pop
pop
push
mov
rol
sahf
lods
int3
frstor
inc
mov
mov
mov
and
test
outsb
in
push
in
jg
inc
jb
sub
mov
adc
or
mov
out
test
push
and
enter
ror
and
push
or
fidivrs
and
and
and
sbb
xchg
movsb
jno
xor
ja
mov
fisubs
es
cs
dec
inc
ja
sub
mov
xchg
jne
or
adc
add
test
cmpsb
and
fistpl
cltd
mov
jae
std
and
ljmp
cwtl
and
jecxz
pop
sub
testb
adc
aam
cmp
mov
adcb
sbb
jecxz
loopne
jns
mov
jne
sub
dec
movsl
icebp
int3
outsb
ja
and
jne
xchg
xchg
insl
mov
popf
jl
jl
adc
stos
ja
sbb
jg
mov
inc
hlt
data16
xor
jne
cld
lea
push
ljmp
push
mov
xlat
sti
or
lcall
adc
mov
and
test
mov
nop
sub
pop
cmpsb
xor
dec
xchg
and
sub
enter
rolb
lods
inc
lock
rorl
xlat
push
add
aas
cmpl
hlt
loope
pop
mov
pop
fisubl
add
std
jp
stos
mov
out
mull
xor
dec
out
daa
xor
jbe
mov
mov
xchg
arpl
pusha
shll
enter
push
imul
fdivrs
inc
mov
cli
addr16
pop
push
add
lcall
inc
call
or
pushf
sbb
xor
cmp
xor
in
xchg
inc
mov
ja
pop
push
dec
mov
testl
inc
lods
ljmp
mov
xchg
push
or
inc
pop
psubusb
xor
and
inc
negl
inc
clc
loope
cltd
out
adc
rolb
int
notl
ljmp
pop
cs
or
adc
popf
jmp
mov
mov
pushf
es
xchg
fiaddl
fnstsw
inc
sbb
xchg
hlt
add
jae
movsb
rclb
fcmovbe
inc
pop
sub
sti
mov
mov
pop
jp
fidivs
jmp
inc
mov
sbb
in
jns
lgs
sbb
adc
aad
cmp
ficomps
roll
pop
jp
imul
or
pop
arpl
sbb
mov
int
xchg
pop
adc
pop
rcr
add
inc
out
push
out
mov
ficomps
adc
push
imul
xchg
rclb
out
loopne
mov
inc
sti
lcall
popa
loope
mov
test
rcrl
add
dec
or
inc
adc
cmp
movsb
in
popf
mov
and
pop
out
sbb
daa
add
mov
inc
lea
stos
sbb
xor
les
push
add
jg
stos
test
mov
and
arpl
mov
and
push
pop
outsb
and
and
mov
jg
outsb
enter
js
mov
test
adc
push
in
jbe
aas
sub
mov
xchg
arpl
out
cwtl
movsl
mov
jmp
aaa
das
sub
call
xabort
mov
pop
and
movsb
push
sub
cmp
or
fsubrs
mov
js
ds
sub
int3
xor
cs
add
xchg
push
adc
jne
repz
push
cmpsb
lcall
add
test
imul
push
mov
dec
jmp
pop
inc
aaa
cwtl
add
fidivs
cs
iret
clc
mov
setb
es
icebp
xorl
ret
js
adcl
imul
in
jge
mov
mov
dec
pop
fmuls
nop
es
idivl
mov
movsl
out
pusha
add
mov
dec
test
sub
cld
mov
and
loop
inc
push
xchg
xchg
cmp
je
lock
mov
pop
lods
mov
js
ja
fistl
xchg
push
sub
mov
dec
push
test
pusha
mov
or
fs
setbe
sbbb
pusha
addb
adc
xor
xchg
scas
cmp
jb
or
and
jg
or
les
into
xchg
cmp
sub
int3
jno
add
mov
mov
sbb
jle
int3
test
mov
ja
push
add
mov
jnp
lock
mov
js
xchg
mov
mul
jg
cs
jae
leave
push
js
push
in
int
movsl
test
ss
mov
push
sahf
mov
mov
pop
and
js
je
loopne
cmpsl
and
adc
jb
or
xor
sbb
sub
rcll
pop
jbe
jle
add
icebp
sub
jb
mov
xor
push
testl
mov
push
sbb
xchg
inc
arpl
adc
lds
shr
test
xorb
or
add
outsb
decb
jl
loope
push
or
out
xchg
insb
push
fnsave
imul
push
sub
popa
imul
scas
sarl
add
in
inc
lock
cmpsb
mov
scas
adc
push
stc
adc
jo
or
imul
add
xchg
or
testb
ret
addr16
cwtl
xchg
int3
sbb
xchg
mov
or
icebp
mov
add
je
imul
out
cmp
mov
jo
pop
push
out
in
call
mov
je
and
sbb
sti
rcr
or
int3
or
call
cwtl
jo
cmp
movsb
mov
mov
orb
movsb
add
in
inc
cltd
popa
inc
pop
adc
movsl
pushf
mov
imul
xchg
xor
dec
in
push
xchg
sub
ret
ljmp
imul
fists
mov
ret
pop
scas
pop
pop
jns
test
mov
shlb
mov
jge
addr16
jmp
and
cltd
push
imul
out
sub
mov
aaa
cmovne
jno
pand
and
jle
jge
ret
push
mov
push
les
sbb
mov
dec
cltd
in
mov
lods
lods
and
jmp
xor
push
imul
jp
pop
mov
xchg
outsb
nop
es
lods
mov
and
xchg
repz
mov
jbe
xor
inc
dec
pop
mov
test
sbb
mov
bound
fldcw
xchg
lea
pop
js
lcall
jmp
push
test
loop
ds
push
mov
loopne
in
cld
push
mov
sbb
xchg
adc
js
or
into
outsb
stc
lcall
bound
sub
aas
push
rorb
mov
xor
jecxz
or
fisttpll
bound
stc
jo,pn
add
cmpsw
sbb
fimull
inc
xlat
or
lea
movsb
xor
testl
inc
push
adc
sub
adc
and
pop
xchg
add
stos
test
lds
sbb
mull
test
and
and
push
js
popa
dec
jae
jns
sub
nop
dec
rolb
cmp
sbb
jmp
or
jns
popa
cmp
loop
pop
fdivl
inc
nop
pushf
or
mov
fbstp
cmp
rcll
cmp
flds
sbb
cmpsl
push
in
pop
adc
or
mov
inc
mov
mov
and
gs
add
pop
push
jle
xor
loopne
xor
leave
xchg
xchg
repz
sub
pop
or
jae
pop
cmpsb
out
leave
seta
insb
jp
jecxz
jo
ss
jecxz
jecxz
inc
je
sub
push
clc
jnp
and
push
pop
lods
jns
pop
je
mov
mov
xchg
inc
cmp
imul
jle
sbb
cmp
adc
or
push
and
sub
mov
cmp
cmp
jno
adc
xchg
or
push
mov
or
lahf
test
insl
js
dec
xor
ljmp
out
cwtl
ss
or
dec
nop
fcompl
cmp
pop
sub
out
or
xor
jp
daa
pop
out
pop
jno
adc
stc
sbb
mov
adc
xchg
testb
push
ja
jecxz
pop
cld
inc
jp
mov
or
loope
ret
loop
pop
and
ja
and
stc
push
pslld
mov
fadd
ret
and
adc
dec
dec
mov
addr16
test
xchg
dec
test
inc
pop
xor
mov
fisubrs
jo
mov
aaa
jmp
add
in
mov
outsl
mov
cmp
dec
mov
add
repz
or
pop
dec
mov
lret
das
hlt
idivl
mov
fcmovnb
xchg
pop
jge
xor
das
add
leave
loope
jae
aas
in
lea
std
outsb
cmc
jle
push
mov
jns
icebp
mov
loopne
js
mov
or
arpl
outsl
mov
pop
or
jle,pn
repnz
lods
sbbl
in
add
or
movsl
mov
test
sbb
rorb
daa
and
enter
ja
test
cmc
pop
inc
inc
hlt
or
imul
xor
and
pop
in
pop
sbb
push
and
pop
mov
xchg
imul
xchg
adc
cmc
xor
sub
ljmp
push
ret
jno
adc
add
jae
fldcw
andb
iret
lret
hlt
popa
push
lock
insb
filds
in
ret
push
hlt
addr16
out
out
xchg
pop
arpl
inc
ss
cld
lcall
mov
imul
enter
lahf
mov
iret
fistpl
cmc
cltd
clc
sub
scas
mov
addr16
jne
dec
xchg
test
jns
jns
and
inc
lods
outsl
sub
jne
cs
cmp
mov
loopne
cmp
imul
clc
xchg
fs
push
xor
div
sub
sbb
mov
pop
popl
clc
out
lds
aaa
pop
enter
cmpsl
aam
stos
outsl
aas
cmpsb
lahf
or
dec
push
and
imul
dec
push
into
or
jp
lret
pushf
jns
in
ds
mov
pop
bound
pop
insl
push
lods
lds
sar
dec
mov
fs
jo
rolb
mov
lret
insl
nop
out
outsl
push
xor
stos
notb
xchg
cwtl
cld
sub
test
mov
pop
cmp
jo
sub
hlt
ss
lods
jae
mov
jg
lret
jne
and
les
mov
aas
clc
mov
nop
push
mov
mov
pop
popa
pushf
xchg
loopne
jg
and
pop
mulb
cmc
loop
scas
xchg
in
cmpw
out
cmpsl
and
xorb
call
movsb
xor
push
mov
rcl
scas
xchg
in
pop
sub
cmp
mov
mov
push
cld
xor
popa
and
jns
cwtl
psubusw
notl
sub
rorb
push
mulb
fisubrs
cmp
js
cmpsl
divl
mov
push
xor
insb
lods
mov
in
fcmovnbe
into
add
sub
xor
negb
pop
cmp
ljmp
jnp
imull
or
sbb
stc
das
int3
push
fidivs
pop
outsl
cmp
repnz
mov
mov
stc
pop
cmp
cli
pop
das
and
cli
int
cmpsl
sahf
mov
sbb
sub
jne
add
and
lahf
jbe
bound
jb
mov
cmp
sbb
mov
xor
aam
pop
repz
jns
int3
pop
fs
inc
out
sub
add
cmp
sbb
popa
adc
aad
outsb
pop
or
add
adc
add
addr16
jo
adc
iret
ljmp
iret
jp
xchg
mov
pop
xor
and
mov
adc
mov
fldcw
aas
lds
cld
les
arpl
push
ds
stos
xor
je
pop
sahf
in
pop
rorb
int3
daa
xchg
xor
jb
rdpmc
fistpll
dec
mov
mov
xchg
mov
cmp
adc
dec
sub
enter
test
stos
mov
cmp
fnsetpm(287
fldt
cmp
loopne
pop
xchg
test
fisubl
cmove
into
xchg
or
cltd
mov
mov
inc
xor
cmp
stc
and
and
jbe
stc
cmpsb
shlb
inc
inc
std
dec
jne
pop
sti
data16
push
xchg
or
xchg
jp
and
pop
cmpsb
mov
add
test
bound
call
aas
mov
pop
push
xchg
imul
andl
mov
and
cmpsl
sbb
sahf
pushf
adc
or
push
xchg
and
divb
ret
pop
push
loopne
dec
mov
mov
repnz
push
int3
stos
fs
shrb
arpl
test
std
dec
in
push
sbb
cmp
mov
xchg
jne
jmp
scas
fs
popa
pop
stc
dec
mov
adc
push
inc
and
add
mov
lahf
mov
aas
cmp
fcmovnu
test
xchg
fldenv
pushf
xor
popf
sub
insb
and
mov
filds
stos
pop
dec
adc
filds
mov
pusha
or
xchg
andb
pop
cmp
xchg
iret
pop
xor
movsb
out
test
push
xchg
clc
lahf
mov
mov
imul
insl
ds
loopne
add
jbe
stos
test
decl
std
mov
dec
sub
mov
inc
icebp
fsubrp
sbb
cmp
or
jno
out
adc
fnstsw
mov
call
stc
sbb
and
sbb
fistl
sbb
fdiv
cwtl
push
adcb
not
in
std
mov
push
aaa
ljmp
mov
imul
test
push
das
leave
and
pop
fsubrl
icebp
sbb
push
cmp
pop
adc
loope
pop
xor
lds
push
mov
mov
adc
or
mov
and
mov
cltd
xchg
sahf
xlat
adcl
xor
movsb
into
add
scas
ret
testl
push
ret
or
xchg
fdiv
movsb
shlb
pushf
mov
lea
lods
add
adc
xchg
int
or
lea
add
add
insl
jb
inc
mov
inc
test
mov
push
jno
or
jecxz
or
sti
cld
or
add
das
pop
sub
push
mov
or
les
cmpsl
push
test
stos
test
hlt
push
xchg
mov
sbb
aam
cmp
dec
bound
pusha
cmpb
iret
imul
cmp
nop
xchg
sti
sbb
pop
dec
sub
test
mov
clc
fdivr
pop
cmp
je
stc
cs
xor
popa
jl
jmp
mov
sbb
jle
or
push
xlat
inc
sahf
lock
in
fmul
adc
ds
mov
xor
enter
mov
and
adcb
cli
push
xchg
lahf
jl
test
cmpsl
in
dec
adc
inc
mov
divb
jmp
test
xor
and
test
sbb
ds
pop
rcrl
int
inc
push
adc
ret
scas
mov
xor
aam
les
ret
push
les
and
pop
or
push
orl
add
jns
out
xchg
mov
incl
inc
dec
or
pop
ljmp
xor
ljmp
xchg
pop
arpl
cmp
das
aad
push
call
sub
scas
jne
setno
dec
loopne
add
dec
in
push
mov
mov
jmp
and
scas
xor
int3
dec
aam
sub
js
int3
xchg
aam
sub
test
stc
in
aaa
int
xlat
adc
data16
imul
dec
jae
sub
lret
push
cmc
jp
ficomps
pop
inc
pusha
js
fdivrl
xchg
rcl
sbb
std
inc
icebp
andb
popa
loopne
lock
lahf
cmp
ja
push
lret
sbb
mov
movsl
sbb
test
adc
push
push
ret
test
inc
dec
adc
pop
adc
add
cwtl
mov
pushf
cltd
cld
push
pop
or
sarl
dec
in
cmpsl
pop
inc
mov
mov
mov
xlat
imul
mov
lret
cld
mov
push
or
mov
push
stc
adc
dec
mov
lds
cmp
inc
pop
push
mov
ret
mov
out
fisubs
imul
in
adc
push
ret
mov
mov
cmp
adc
outsb
sti
out
dec
jmp
cmp
ret
xchg
aam
xchg
mov
mov
adc
dec
test
daa
out
push
icebp
mov
test
sbb
sbb
insb
cld
daa
mov
aaa
dec
enter
pop
aad
icebp
sbb
push
jne
sti
sub
andl
mov
xor
jmp
outsl
push
dec
shlb
je
fwait
pop
mov
sbb
xchg
fldenv
jp
or
dec
mov
xchg
mov
pop
pop
in
lods
cld
call
xor
mov
ja
ljmp
stos
lea
clc
in
icebp
out
loop
movsb
fisttpll
push
push
dec
sahf
mov
push
popa
mov
idivb
adc
mov
and
pop
inc
in
push
pop
xor
mov
fimull
out
addr16
jnp
mov
dec
inc
pushf
idivb
cmp
push
mov
inc
ss
push
loope
pop
mov
jbe
test
pusha
arpl
xchg
inc
loopne
push
stos
in
sbb
stos
lret
mov
dec
mov
out
xchg
sbb
or
stos
jp
sub
mov
mov
jne
cmp
jno
and
cmpsb
pop
ficoml
mov
out
pop
push
xchg
add
sar
popa
cmpsl
stos
sahf
cmpsb
sbb
fdivrp
lahf
xchg
into
loope
cmp
pop
insb
int3
in
pop
fnstcw
dec
clc
sahf
or
lods
das
out
sarl
xor
pusha
push
cltd
mov
into
jecxz
enter
rorb
mov
bts
lcall
xor
pop
vpsllw
mov
cmc
sbb
inc
lds
and
aas
mov
adc
inc
mov
sbb
out
ret
cmc
sub
jb
pop
mov
inc
jp
cmp
cmpsb
pop
loope
pop
pusha
int
test
test
jae
mov
in
je
xchg
push
mov
movsl
fdivrp
sbb
lcall
push
or
out
imul
push
and
test
inc
or
mov
scas
jmp
jnp
popf
sub
hlt
inc
ficoml
jb
add
fbstp
loopne
outsb
xchg
pop
std
or
negb
fiaddl
es
sbb
or
push
mov
add
push
in
xchg
cltd
cwtl
inc
xchg
push
pop
xor
xchg
add
xchg
out
dec
mov
pushf
ja
outsb
pop
imul
cmpb
movsl
dec
popf
pop
cli
add
lea
rorb
mov
inc
negb
cmp
or
cmp
jge
shr
cwtl
dec
add
in
outsl
daa
or
mov
xchg
insb
dec
xchg
mov
lret
movsb
xchg
mov
inc
xlat
in
push
or
xor
aam
and
test
push
lret
mov
jne
stos
lcall
add
adc
sbbb
adc
dec
pop
push
pop
pushf
xchg
xchg
out
pop
mov
jne
test
jae
or
out
pop
xchg
pop
lock
jge
cmpsb
sahf
lods
jnp
mov
cmp
push
lcall
fiaddl
lods
jl
cmp
adc
sub
lds
jae
cmp
push
lret
xchg
xchg
mov
cli
sbb
sub
push
xchg
arpl
or
adc
arpl
das
popf
cld
popa
fiaddl
dec
push
mov
out
xchg
in
loopne
clc
popf
pop
aaa
mov
movsb
xchg
daa
jno,pt
add
mov
lock
and
push
shlb
cmc
lods
int
add
in
and
shlb
mov
push
fnsave
cmp
icebp
xor
inc
mov
and
xor
mov
cmp
shll
dec
repnz
iret
add
jae
jmp
mov
push
scas
sbb
cmp
arpl
dec
jae
sub
enter
xor
clc
rcrb
sahf
push
pop
stc
push
jmp
fstpl
stos
cmp
das
pop
orb
jnp
call
lods
or
outsb
cli
fs
mov
mov
arpl
cmp
push
push
cli
mov
pop
ljmp
cmp
insl
pop
test
fisubrl
pusha
aad
inc
lcall
popf
mov
jg
push
test
or
test
in
lods
sub
mov
orl
mov
mov
pop
jle
jb
das
jmp
mov
sbb
inc
pusha
xor
jg
test
imul
inc
pop
icebp
cltd
xlat
in
aam
fmull
mov
movsl
lcall
out
and
sarl
push
dec
lret
les
sbb
adc
jno
add
dec
repz
std
jecxz
aam
mov
js
rcll
sbb
cmp
sbb
mov
jns
and
cmp
cmp
incb
loopne
adc
add
sbb
add
or
hlt
sti
adcl
sbb
jmp
xorb
push
aad
cli
fdivl
jecxz
lock
popl
icebp
and
fisubl
xchg
std
push
dec
xchg
jno
aaa
ljmp
ljmp
sub
pusha
cmp
or
test
sub
into
movsb
test
push
test
xor
pop
xchg
loope
andb
dec
or
shl
sub
fbld
sub
loope
jmp
ja
mov
repnz
push
xchg
imul
insb
aas
jo
mov
adc
out
arpl
mov
int3
cmp
pop
lret
adc
inc
es
popa
mov
mov
js
std
jecxz
xor
repz
add
sub
push
clc
js
xchg
push
dec
sbb
ret
dec
cmp
add
push
fstpl
ds
pop
mov
jecxz
sbb
stos
sti
mov
xor
mov
push
in
stos
aam
mov
xchg
stos
adc
cmp
mov
xchg
dec
addr16
rcl
add
xchg
clc
jb
loope,pn
mov
dec
cltd
ror
movsb
out
test
adcl
mov
clc
jge
inc
incl
inc
inc
cmp
lods
insl
pusha
dec
sub
push
xchg
add
mov
sbb
push
and
lret
xchg
lock
jbe
les
adc
ret
sahf
lock
or
push
and
pop
pop
loopne
mov
ror
dec
sub
imul
jl
jmp
js
sbb
into
nop
add
inc
dec
loop
xchg
stos
jp
popa
dec
cli
xchg
jne
mov
cmpsb
mov
mov
data16
test
incb
inc
cs
sub
leave
jnp
loopne
or
sub
lods
push
lock
and
or
mov
ljmp
aam
lea
mov
mov
or
js
fidivrl
sti
add
cmp
jge
sub
xor
loop
outsb
bound
push
cmp
dec
xchg
and
notb
lods
jecxz
roll
test
xlat
mov
push
jmp
out
sbb
iret
adc
adc
loope
lcall
mov
cli
push
mov
stos
xor
mov
hlt
inc
subl
adc
xor
pushf
or
or
dec
jb
jo
fisubrs
rcll
jae
rclb
addl
jb
and
js
je
leave
dec
insl
xchg
inc
cmp
mov
sti
mov
iret
or
stos
mov
sub
repz
out
xor
mov
rorl
jg
fistl
in
dec
sahf
mov
in
sbb
sub
std
sub
pushf
or
stc
xor
cld
cmp
in
test
jne
cmp
or
mov
or
repnz
mov
and
lcall
jecxz
jns
xchg
inc
mov
pop
and
in
inc
pop
mov
out
or
out
push
and
and
mov
prefetchwt1
xor
push
imul
jmp
or
outsl
ljmp
mov
addb
mov
or
xor
xor
daa
ja
cmp
sbb
lea
cmp
pop
stos
jae
or
dec
ret
pop
mov
stos
in
mov
outsl
rcrb
jo
pop
inc
in
rcrl
sbb
mov
mov
sub
sbb
and
pop
push
lds
jecxz
adc
dec
hlt
enter
in
lea
call
xchg
lret
jns
stc
push
jnp
cmp
into
fildll
es
or
jl
subb
sub
jle
ret
jne
test
mov
arpl
pop
mov
cs
pushw
int3
iret
lock
inc
sar
ljmp
mov
and
and
sahf
mov
xor
jmp
in
popa
sbb
inc
icebp
ljmp
pushf
adc
dec
sahf
add
test
push
out
xchg
rcr
mov
inc
clc
sub
push
imul
insb
sbbl
jno
fs
or
mov
in
sub
mov
mov
sub
sub
outsl
adc
sbb
in
sub
les
int3
pop
insb
aas
mov
push
inc
imul
rcrb
in
or
adc
adc
lock
inc
sti
movsl
mov
packssdw
jbe
add
cmp
subb
xchg
adc
adc
cmp
sbb
inc
pop
sbb
and
mov
inc
cmp
std
push
xchg
inc
les
inc
arpl
jne
xchg
lahf
lds
movsb
adc
repnz
add
popa
jae
add
in
jge
gs
sub
popf
faddl
rorl
aad
sub
inc
xchg
or
jge
je
or
lods
cs
push
rorl
lds
mov
je
pop
fadd
popa
xchg
mov
push
cltd
jp
and
rolb
hlt
in
mov
mov
aas
test
mov
in
mov
pushf
lea
mov
mov
bound
xor
pop
push
sahf
out
sbb
xor
adc
aam
dec
fsubrp
inc
jmp
jmp
scas
scas
lea
push
pop
icebp
lds
nop
xchg
pop
lock
push
xchg
enter
inc
or
mov
enter
mov
dec
andb
mov
scas
in
jno
sbb
xor
out
enter
dec
test
jb
aad
cmp
mov
imul
lea
sub
int
cwtl
mov
dec
sbb
mov
testl
xchg
fldcw
inc
enter
fstps
xchg
pop
sbbb
xchg
test
lods
fwait
mov
div
mov
pop
daa
pop
fdivr
dec
mov
sbb
out
xor
sbbl
dec
sarb
ja
mov
jmp
xchg
add
push
push
mov
xchg
imul
aas
ret
imul
imul
clc
inc
adc
ja
sub
xchg
adc
ficompl
lret
push
popa
arpl
ds
insl
jmp
mov
mov
les
mov
orl
or
pop
andl
fs
jne
push
popa
fsts
jae
mov
mov
fsts
ret
sbb
mov
xchg
adc
and
cmp
out
mov
mov
xchg
cmpb
ljmp
mov
fdivrs
dec
mov
or
cld
xchg
insl
icebp
mov
push
imul
rcl
xor
push
out
lock
xchg
stos
xchg
sbb
aas
cltd
aad
sbb
xor
andnps
xor
adc
pop
mov
nop
je
insw
ss
mov
mov
popa
or
les
and
and
clc
ror
cltd
adc
aaa
in
push
mov
inc
aaa
mov
xor
add
jae
fucomp
mov
pop
pop
lcall
hlt
pushf
or
test
iret
sub
inc
cmp
test
mov
test
xchg
mov
scas
stos
jl
adc
in
sbb
mov
imul
out
test
test
or
push
sub
dec
fisttpl
int
add
lds
movsb
mov
das
add
adcb
aaa
sbb
dec
pop
test
jno
mov
es
insl
jne
jp
and
shrl
mov
movsl
popf
cwtl
popa
push
push
mov
add
pop
in
jmp
mov
mov
adc
fsubrs
push
xor
mov
pop
dec
inc
dec
fisubrs
arpl
inc
inc
loopne
daa
inc
daa
push
inc
sub
mov
mov
cmp
jo
push
test
sbb
aad
or
gs
jl
xor
sub
mov
sarb
pslld
mov
test
push
or
enter
loope
cmp
sub
repnz
jecxz
loopne
imull
xor
jl
and
cmp
xchg
mov
fwait
sbb
pop
in
insl
insb
inc
mov
pop
push
lods
xchg
pop
sbb
lds
and
xor
addr16
jge
pop
mov
movsb
jb
pop
scas
scas
sbb
push
jnp
pop
lret
xchg
adc
lock
test
insl
jbe
daa
and
push
das
js
mov
or
mov
sub
insb
push
ja
xchg
les
pop
js
negl
xchg
test
lahf
testb
push
xchg
mov
xor
cli
sarl
pop
leave
sbbl
push
inc
mov
repnz
inc
movsb
aas
iret
cmp
cmp
sbb
cs
sbb
hlt
inc
out
popa
fmull
fldl
xchg
incl
data16
call
sub
lods
jmp
xchg
mov
mov
inc
cmpsl
daa
adc
test
xor
add
lods
sbb
inc
cmp
jp
iret
enter
jp
roll
scas
xor
ja
pop
dec
jns
imul
lds
dec
pop
fs
inc
fnstenv
ss
popa
js
or
or
imul
sbb
cmp
mov
or
ds
cwtl
fisttps
dec
xor
popa
out
sbbb
mov
jb
movsl
push
scas
mov
mov
adc
push
aaa
adc
cmp
movsb
out
xor
mov
inc
xchg
jns
add
cmc
inc
lcall
dec
hlt
cmp
dec
in
mov
sahf
aaa
adc
xorb
in
sarl
mov
inc
jecxz
inc
in
adc
dec
mov
lods
jae
mov
push
dec
pop
call
scas
es
dec
out
xor
sbb
xchg
test
or
cli
icebp
shrl
in
mov
insl
xchg
push
repnz
and
iret
cmc
push
mov
sti
mov
mov
xlat
aam
push
mov
mov
out
int3
sbb
aad
nop
push
test
adc
ret
ret
sbb
inc
jno
push
push
ljmp
cmp
in
iret
es
and
push
icebp
shrl
mov
adc
sub
inc
cwtl
lsl
mov
pop
dec
in
xchg
cmp
adc
push
or
fistl
je
in
push
in
into
xchg
jo
bswap
xchg
sbb
cmp
popa
or
jb
ret
cld
add
stos
inc
pop
nop
adc
in
inc
jno
push
pop
sbb
jg
imul
push
data16
push
sub
clc
xor
outsl
and
mov
int3
push
cmp
push
or
iret
or
test
lods
dec
sub
pushf
loop
fs
mov
test
dec
jle
xchg
dec
xchg
sbb
lret
inc
in
enter
test
xor
push
mov
adc
outsb
pop
iret
repz
sub
sbb
loop
scas
loop
mov
adcb
mov
pop
dec
je
and
fsubrs
xchg
add
hlt
bound
hlt
call
lahf
jl
mov
shrl
jle
cld
dec
int
ljmp
aaa
jge
sub
into
push
jecxz
adc
push
mov
adc
jg
aad
mov
scas
inc
and
in
push
pop
or
js
mov
mov
xor
aaa
insb
dec
sub
fdivs
aad
cmpsl
enter
pop
shrl
and
cmpsl
xchg
imul
movsl
loope
subb
pop
cmp
jmp
imul
jp
cmp
cli
arpl
popf
stos
pop
jg
fadds
xor
sarl
and
mov
mov
sbb
pop
mov
xchg
push
std
jno
cmp
dec
lods
mov
mov
pop
out
mov
dec
mov
add
iret
test
xor
out
mov
sbbl
xchg
add
jecxz
mov
mov
loop
iret
popl
stos
pushf
push
mov
and
and
clc
xor
cmp
aas
sbb
out
push
test
cmpb
call
pop
aam
pop
cmp
jge
cli
test
leave
aas
outsb
and
popf
test
lock
cli
insb
lds
outsb
mov
lahf
aad
xor
mov
loopne
ret
sbb
sbb
cmc
mov
inc
movsl
daa
sbb
jge
sbb
or
inc
mov
popl
icebp
mov
pop
and
es
rcrl
sti
nop
pop
popl
int
xchg
out
lea
iret
cmp
jo
fcompl
fadds
dec
scas
movb
mov
addr16
or
aaa
xchg
jb
popf
push
sub
cmpsl
out
mov
mov
popf
pop
hlt
jo
hlt
xchg
push
decl
pop
iret
imul
mov
mov
iret
xchg
aad
repz
bound
push
nop
or
jne
dec
and
testb
je
adc
stos
lret
mov
inc
loop
sub
push
ret
das
xor
leave
in
popa
add
lock
adc
test
pop
mov
out
std
aas
push
pop
mov
aas
mov
xchg
jno
push
xor
ret
push
mov
fldcw
daa
or
or
rcrl
mov
or
jmp
push
aas
pop
dec
add
icebp
test
data16
enter
bound
adc
movsb
vcomiss
push
shlb
push
lds
dec
test
cmp
cmp
testb
or
pop
mov
xor
lock
sbb
out
jnp
add
push
cmp
pop
xchg
push
ficoms
inc
lahf
fwait
ror
dec
push
div
sub
push
push
inc
xchg
or
andl
sbb
outsb
dec
scas
js
xorl
hlt
push
and
ss
ja
gs
xchg
push
and
in
icebp
or
sub
add
pushf
mov
popf
in
sahf
ret
divl
lret
mov
cmovae
scas
daa
dec
pop
or
push
pusha
cs
mov
fcmovnb
shll
fdivs
loope
inc
sbb
cmp
push
inc
pop
stos
pop
repz
stos
fwait
cmpsb
movsb
rorl
ja
push
test
mov
or
hlt
add
sbb
icebp
sub
popa
inc
fstps
xchg
xorb
sub
pop
or
scas
cltd
nop
push
outsl
outsl
jo
xor
test
out
scas
loope
les
fnsave
shlb
daa
dec
dec
cs
and
cmp
dec
popf
pop
mov
mov
push
cmp
arpl
pop
pop
ljmp
and
lock
sti
mov
push
mov
imul
xor
dec
jno
in
addr16
movsb
inc
jae
xchg
lcall
or
lds
daa
mov
outsl
jno
fs
push
fcoml
enter
or
cwtl
pop
mov
adc
pop
pop
xchg
mov
out
unpcklps
icebp
icebp
sbb
cltd
xchg
out
scas
sbb
fdivrl
mov
enter
dec
idiv
cmp
fisubrs
fwait
rcl
sbb
xlat
out
sub
sahf
int
adc
clc
iret
cmpsb
shrb
lret
ljmp
push
or
pop
pusha
xorb
js
xor
adc
sahf
mov
in
mov
sbbb
mov
clc
push
adc
pop
cmpsb
jne
inc
pushf
daa
mov
push
sbb
es
mov
mov
xor
push
cli
pusha
test
xor
mov
mov
das
leave
dec
adc
pop
mov
mov
dec
sbb
out
jo
or
add
mov
cld
mov
add
or
divb
cmp
pop
add
xchg
cmpsl
or
pusha
cmpsl
fs
shl
shr
push
out
cmp
aaa
mov
push
push
xchg
dec
dec
cld
jp
mov
dec
cs
xor
pop
mov
push
lea
das
pushf
mov
push
negb
sub
mov
xchg
fwait
sub
lcall
lcall
pop
jg
xor
movsb
repz
pop
push
dec
les
mov
xor
cmpsl
dec
xor
dec
scas
leave
pop
std
fwait
jbe
push
jmp
push
xor
mov
sti
add
aaa
xor
inc
cli
jmp
mov
xor
cmpsl
push
test
sub
insb
aaa
hlt
jge
pop
out
push
push
inc
in
inc
fildll
jnp
or
pushf
ret
lcall
jmp
test
rorl
mov
ds
clc
es
cmc
ret
int3
push
cmc
sub
das
cmc
mov
movsl
orl
lds
ret
mov
adc
iret
jno
push
adc
add
aad
or
push
cmp
fistps
add
mov
dec
push
into
xchg
fisubs
fcoms
ret
sub
rorb
test
jb
outsl
lock
jecxz
rcrb
push
shrl
sub
pop
divl
rolb
push
adcb
mov
sub
cmpsb
push
mov
movsl
jnp
jo
into
insb
fldt
nop
mov
xor
cmpsb
jbe
movsb
lret
insb
clc
pop
in
sub
dec
or
cs
leave
add
mov
cmp
ljmp
sbb
das
push
sti
dec
int
cmpsb
stos
xchg
lods
rcl
add
mov
cld
jp
jecxz
add
mov
mov
mov
cmp
jae
sbb
out
icebp
test
xchg
push
dec
inc
ret
stos
mov
sbb
pop
dec
lock
pop
imul
mov
or
in
pop
mov
cmpsl
pop
jb,pt
pop
popa
mov
stc
lahf
in
adc
fmul
cli
jl
xchg
dec
loop
pop
add
jp
xor
pusha
mov
jp
xchg
int
mov
mov
pop
hlt
sbb
and
mov
mov
int
cmc
mov
fs
cmpsb
mulb
pop
test
adc
lret
jnp
jge
pop
xchg
mov
mov
cmc
aaa
mov
mov
inc
jle
clc
push
sub
jle
jmp
mov
roll
sub
push
scas
les
lea
mov
nop
insb
decb
push
pop
faddl
jne
in
jns
jge
int3
das
adc
fistps
shll
jns
rcr
and
mov
aad
test
xor
cmc
inc
arpl
loope
pop
outsl
push
mov
pop
pusha
cmp
mov
popl
into
dec
lcall
cmpsl
stos
push
jne
dec
dec
gs
loop
fiadds
sbb
aaa
imul
fdivr
sub
jo
and
mov
or
in
stc
loopne
movsb
lret
outsb
dec
outsl
mov
pop
dec
es
inc
xchg
rorb
xchg
inc
mull
jno
mov
in
cmpsb
gs
or
shll
add
roll
mov
mov
or
jno
cmp
adc
push
ljmp
pop
movsl
mov
xor
mov
iret
mov
lods
inc
sbb
ljmp
dec
xchg
fcompl
loopne
xchg
in
or
pop
fs
adc
adc
or
subps
ja
sbb
jle
hlt
pop
mov
call
push
notb
sub
ret
gs
jge
lds
push
xlat
mov
into
mov
fs
fucomp
hlt
pop
push
and
ja
mov
dec
mov
mov
out
lock
mov
lret
xor
cmpsl
xchg
inc
in
push
test
jno
mov
xchg
adc
push
lods
inc
lds
ss
jg
rorl
ja
shll
daa
imul
xchg
ret
inc
push
and
push
sahf
in
nop
mov
push
out
jecxz
dec
jno
loop
push
sbb
add
mov
movsl
test
jmp
mov
cwtl
adc
sub
inc
jnp
call
test
or
pop
cmc
pusha
xchg
sub
and
push
call
shll
push
sbb
dec
cmc
cmp
adc
dec
push
or
jecxz
pushf
out
sahf
push
inc
loopne
inc
and
sahf
adc
dec
rol
loop
jmp
mov
adc
mov
jno
insl
mov
dec
outsb
adc
test
cmp
mov
pop
or
push
cld
and
mov
pop
push
mov
add
in
cli
ja
rorl
jb
jae
repz
sbb
xor
fwait
lret
fisttpl
push
mov
loopne
lds
stos
mov
add
mov
mov
imul
or
nop
movsb
icebp
inc
and
enter
lds
fmull
dec
jbe,pn
sahf
popa
adc
rclb
cmp
push
cmp
bound
sarb
sub
pop
imul
les
push
dec
sub
xchg
jbe
push
sub
xchg
fadd
shll
mov
xchg
sar
and
hlt
js
pushf
ret
add
mov
pop
jo
pop
xlat
and
insb
leave
mov
mov
lahf
push
ds
iret
popa
push
aas
bound
jge
imul
aad
jg
cmp
push
idivb
cmp
jno
push
mov
pop
cwtl
jnp
xchg
mov
and
inc
jo
xor
aad
xor
pop
xchg
push
in
lea
sub
out
sbb
int3
ja
cld
xchg
lcall
es
test
inc
push
add
test
out
cmpb
mov
xor
mov
or
sub
xlat
lret
scas
pushf
mov
int3
jae
jmp
sub
into
xchg
mov
aad
push
icebp
sbb
notl
aad
and
or
push
imul
mov
cwtl
icebp
ja
and
jbe
adc
fstps
jo
orb
inc
cmp
sbb
stos
mov
mov
mov
out
pop
sbb
add
and
shr
jbe
notl
or
mov
int3
shll
mov
jae
xchg
jne
cmp
outsl
mov
lea
or
icebp
inc
jae
or
lret
xor
pop
fwait
repnz
mov
jmp
add
minps
jno
push
std
cmp
inc
in
imull
scas
cmp
push
fiadds
pop
or
push
cli
mov
mov
add
mov
inc
inc
stos
sbb
add
sbb
outsl
adc
xor
jg
sti
or
inc
loop
outsl
jg
cmp
jo
cmp
mov
cld
adc
jecxz
cmpsl
pusha
push
loope
pop
daa
and
mov
mov
xchg
sbb
cli
sbb
jno
jl
xchg
dec
out
sub
jmp
jne
sar
dec
xchg
cs
ljmp
testb
add
out
and
sub
ja
testl
stc
mov
and
scas
sub
jne
cmpb
add
sbb
xorb
xchg
sub
fstpt
in
rcl
xor
mov
pop
mov
jne
jnp
xchg
out
pop
push
sahf
sub
ud1
sarl
xor
and
xchg
sub
js
test
incl
push
movsb
jo
scas
movsb
pushf
push
in
jg
xchg
mov
cmp
jl
inc
pop
cmp
adc
xorb
xchg
push
addl
je
adc
add
sbb
repz
xchg
ds
adc
mov
ja
aas
mov
clc
push
jbe
xlat
mov
cmp
jmp
pusha
div
shrl
mov
mov
pop
mov
lock
cmpsb
call
cwtl
push
jns
jl
push
push
mov
imul
cmp
lret
fistl
mov
mov
fisubrl
mov
push
ljmp
lds
movsl
cmp
mov
jne
imul
pop
sbb
cmp
sbb
pop
pop
pop
jg
imull
cmp
je
jbe
sbb
jne
push
int
add
ja
or
leave
mov
inc
xor
add
scas
xchg
cmc
cmp
shr
pop
jb
and
hlt
idiv
mov
mov
iret
sub
test
push
push
mov
cwtl
cmp
gs
xchg
inc
push
or
imul
out
pop
dec
sbb
jg
lods
jbe
sbb
test
imul
mov
les
sub
adc
xor
push
xor
fwait
inc
jp
xor
stc
inc
lahf
lods
stos
add
daa
adc
insl
pop
and
stc
mov
fisttps
inc
dec
popa
das
xchg
cmp
xor
inc
dec
mov
sub
repnz
pop
int3
call
mov
in
mov
iret
cld
pop
inc
sbb
or
insl
bound
adc
xchg
ds
ret
add
clc
ss
cld
sbb
mov
dec
cmpsl
bound
fs
or
fs
push
testb
fcmove
push
mov
jbe
push
push
lcall
in
inc
xchg
xlat
sub
pusha
pop
adc
jb
pop
shlb
or
xchg
jg
jb
hlt
xlat
in
lods
pop
gs
lds
or
jg
rclb
pop
int
inc
enter
scas
imulb
mov
movswl
out
jo
hlt
out
ja
xor
mov
pop
push
pop
mov
mov
divb
outsl
idivl
loopne
ss
add
idiv
xchg
int3
cmp
fdiv
fwait
xor
or
or
std
mov
mov
pop
aam
leave
ret
jg
and
faddl
or
int3
push
dec
and
adc
mov
lock
sbb
aas
mov
orb
sbb
std
pop
sbb
test
cs
mov
push
pop
inc
push
jnp
push
lahf
popa
repz
stos
dec
push
xchg
cmp
cli
jns
iret
sti
int
xchg
cmpsl
adc
ljmp
sbb
shll
and
test
jo
leave
adc
or
imul
test
mov
cld
cmp
xchg
out
xor
or
mov
incb
xchg
lret
je
add
popf
push
sbb
or
mov
pop
dec
in
js
xorl
push
popf
in
fs
xlat
lret
mov
xchg
jecxz
or
mov
inc
lahf
aas
push
fsubrs
fs
sbb
in
nop
inc
loop
test
je
mov
dec
sbb
jnp
adc
push
pop
in
xchg
or
shrb
adc
pop
jbe
neg
sbb
mov
xorl
outsb
neg
rcr
push
lds
negl
xor
sub
es
dec
lods
inc
outsl
inc
lock
rcrl
sbb
je
nop
arpl
lock
ficoml
fidivl
xchg
mov
neg
out
aas
ret
mov
push
les
ffreep
aaa
pop
pop
jnp
neg
push
or
pop
fcompl
movsb
rcrl
imul
dec
xlat
adc
nop
mov
fwait
in
sub
in
jg
xchg
push
les
push
and
lret
and
sbb
inc
mov
pop
mov
xchg
negb
imul
xorl
and
lds
sub
sbb
fcoml
and
sbb
test
in
adc
dec
les
xor
iret
xor
push
shl
pushl
or
xor
mov
js
je
mov
pop
jo,pn
cltd
movsl
push
jecxz
ret
scas
cmpsb
push
push
shr
adc
adc
insl
lret
or
popa
jne
out
cmp
sub
sub
leave
pop
clc
sbb
or
repnz
xor
xor
inc
jge
ss
rorl
iret
push
jno
sub
add
pop
dec
dec
sbbl
mov
adc
push
and
xchg
push
push
xchg
je
fimuls
ret
mov
pop
das
popa
dec
xchg
test
ficompl
adcl
push
sti
mov
insl
outsb
push
test
push
mov
mov
insb
cmpsl
hlt
mov
cmpl
ja
jnp
pop
adc
pop
sub
rcrl
xchg
xor
mov
cli
push
inc
mov
sti
bnd
pop
mov
rcll
dec
mov
inc
inc
xor
mov
adc
popa
sub
mov
sbb
mov
gs
les
test
mov
adc
dec
push
loopne,pt
out
mov
fwait
neg
lret
dec
lret
lods
rcll
cli
out
mov
xchg
cmp
add
xchg
fdiv
lahf
cld
outsl
sbb
lods
and
mov
lds
sbb
or
jbe
inc
jnp
popa
sub
pushf
and
add
js
and
and
test
inc
jge
fnstenv
mov
sahf
push
insl
jae
xchg
hlt
gs
pop
jo
add
xor
movsb
out
or
and
mov
js
sahf
outsb
insb
shlb
lret
fnstenv
mov
jno
cmp
dec
dec
mov
dec
pop
xor
inc
imul
and
mov
jno
xchg
movsb
mov
adc
daa
pop
sti
hlt
out
cmpl
sbb
jo
dec
adc
jl
xlat
sbb
fnsave
ljmp
mov
mov
ljmp
test
pop
mov
dec
xor
jecxz
add
ljmp
or
lods
sbb
push
ret
xor
nop
sahf
mov
cmp
call
scas
jae
inc
pop
lcall
push
movsl
ja
push
mov
mov
imul
in
enter
add
outsb
adc
jnp
nop
adc
mov
push
xor
push
sti
xchg
xchg
push
sti
jnp
icebp
mov
cltd
inc
pop
repz
arpl
lods
add
push
repnz
lcall
sbb
jae
pop
rolb
or
nop
test
mov
rcll
cwtl
and
add
lock
jbe
inc
divb
push
test
push
ss
mov
cmp
jmp
movsl
shl
aam
sbb
shrl
sbb
stos
lcall
mov
fiaddl
push
je
dec
push
call
movsb
cmp
ljmp
mov
mov
or
mov
outsl
stos
push
dec
rolb
inc
iret
daa
movsb
xchg
lock
xor
push
ds
fwait
mov
daa
mov
or
xor
aas
imulb
xchg
aas
in
lcall
jp
repnz
sub
mov
icebp
jae
sbb
leave
inc
and
lahf
fisubl
inc
lods
loopne
ljmp
mov
in
mov
mov
sbb
mov
cwtl
inc
adc
pop
inc
das
mov
cmc
bnd
or
inc
jns
stc
out
push
rcrb
push
pop
jno
jae
insl
loope
xchg
xchg
shll
mov
or
mov
pushf
cld
xchg
xchg
adc
and
xor
jl
arpl
ja
mov
jae
adc
xchg
stc
jp
fwait
iret
out
adc
leave
and
outsl
cmpsl
cmp
add
ss
in
xchg
bt
mulb
push
mov
pusha
insb
mov
and
leave
adc
stc
pop
push
ret
or
in
andb
pop
jb
fidivs
jmp
xor
icebp
and
jno
and
imul
pop
mov
or
and
loop
add
xchg
scas
popa
dec
dec
jg
repz
push
stos
push
sti
icebp
inc
xor
out
sbb
hlt
mov
enter
xchg
mov
iret
xchg
pop
sahf
push
out
xor
push
cmp
in
mov
ja
stos
jg
adc
and
xor
lods
std
mov
int
mov
stos
mov
pushf
dec
into
push
mov
cmp
mov
or
add
lret
jecxz
stos
pop
stos
pop
or
and
and
mov
pop
mov
adc
enter
pop
movsl
add
repz
push
mov
adc
pop
mov
int3
fstl
leave
ret
loopne
jl
aas
or
cwtl
out
data16
mov
popf
dec
shll
mov
mov
xor
je
jne
dec
lcall
add
je
push
movsb
lcall
dec
repnz
lcall
mov
inc
inc
jmp
stos
js
les
or
je
dec
mov
out
dec
mov
inc
jno
pop
imul
arpl
mov
push
rclb
jno
aad
push
mov
aad
xchg
jnp
dec
addb
push
test
repnz
test
dec
xchg
int3
mov
ljmp
xchg
call
dec
jge
jnp
sub
sbb
fistl
ret
adc
les
mov
shlb
loop
ficomps
jg
lods
adc
hlt
adc
add
test
push
xchg
fldcw
sti
adc
and
loopne
dec
or
add
cmp
cld
xor
das
jg
js
insb
fildl
mov
cltd
js
add
test
mov
out
cltd
or
aas
es
cli
jnp
andl
adc
mov
mov
stos
add
out
call
ret
sub
fldenv
or
shr
and
fs
sub
jmp
cmp
shl
in
nop
jns
sahf
cmp
icebp
ret
inc
adc
in
inc
jmp
sti
adc
lahf
xchg
sub
push
daa
and
adc
mov
aas
lcall
lahf
repnz
inc
dec
adc
fnstenv
aam
clc
loopne
out
lret
stos
in
shll
aad
mov
aad
dec
xchg
sub
adc
movsl
loopne
dec
and
push
jmp
xor
rolb
and
sbb
outsb
jg
jg
xchg
std
in
mov
fistl
dec
repz
or
in
push
lahf
pop
scas
pop
jns
adc
sbb
aaa
test
adc
inc
rcl
int3
nop
push
in
mov
cmpsl
mov
sbb
pop
aas
popf
out
adc
inc
cmpsb
mov
push
lods
pop
in
pop
mov
pushf
in
mov
aam
dec
jp
scas
push
rcl
cwtl
int3
ja
shl
stc
dec
or
mov
mov
add
cmp
push
adc
mov
fsubs
push
vucomisd
ret
inc
clc
in
sarb
loope
stos
xchg
addr16
adc
aam
and
add
mov
test
insl
or
inc
fsubs
pop
mov
aaa
adc
inc
fstps
xor
aam
push
jl
out
sub
pop
outsb
sahf
lcall
push
xchg
jae
jo
xchg
std
call
jl
and
sbb
popa
fildl
jbe
jge
cmp
inc
out
and
pushf
dec
xchg
sub
dec
ds
mov
fcmovu
shlb
popa
push
jae
loopne
mov
dec
sahf
js
add
mov
shlb
pop
cmp
xor
daa
dec
cmpsl
outsl
mov
aas
jle
and
mov
xchg
and
adc
dec
test
js
stc
dec
inc
pushw
inc
pop
cmpsb
jne
adc
mov
jne
and
pop
je
shlb
data16
cmpsl
xor
inc
cmp
addr16
and
into
mov
xor
sbb
sbb
in
pop
pushl
les
mov
jecxz
ss
adc
or
lret
or
cmpb
int
mov
xchg
jnp
and
xor
lea
jnp
ficomps
sbb
cmp
out
sub
adc
jns
test
jmp
inc
fdivs
rclb
pusha
lods
lahf
add
mov
cmp
fsub
cmp
cltd
pop
pop
imul
js
in
lea
movsl
movsl
jg
jno
aaa
mov
lahf
daa
hlt
cmp
and
mov
dec
fdivl
outsl
dec
cmpsl
sti
or
cmp
mov
outsl
mov
push
jno
sarl
jecxz
data16
add
jmp
ss
addl
int
jecxz
in
scas
add
loopne
and
inc
test
dec
mov
data16
stos
jle
sub
xchg
dec
push
sub
test
dec
sub
mov
mov
mov
inc
sbb
iret
xchg
cmp
ret
push
rcrl
push
gs
add
ds
xchg
pop
jle
nop
pop
add
test
mov
shlb
add
sbb
cs
fildll
cltd
xchg
push
mov
pop
xor
push
xchg
jmp
lret
cmpsl
mov
ss
pop
shlb
jl
fs
pushf
mov
std
or
push
mov
xor
or
inc
out
jmp
mov
mov
sub
arpl
dec
lds
outsb
jns
out
add
mov
mov
ljmp
out
add
xchg
into
andl
stc
cmc
cmp
xchg
out
lock
add
add
adc
int
fldt
jnp
in
outsl
stc
rclb
aam
fdivs
or
lcall
xchg
je
sub
push
cmc
addl
add
and
sub
and
mov
scas
stos
cli
inc
ja
aas
sub
add
jne
int3
adc
aad
fcomi
push
fwait
pop
pushf
adc
lcall
mov
stos
arpl
push
call
negl
mov
sbb
sarb
iret
ret
in
mov
pop
mov
add
out
xor
inc
xlat
hlt
rclb
inc
lods
sbb
dec
xchg
adc
and
mov
add
push
es
pop
or
adc
mov
insb
dec
push
mov
cmp
lcall
cwtl
scas
dec
mov
mov
sarl
push
or
mov
test
or
and
xchg
pop
sbb
fmull
pop
jb
mov
dec
jb
jmp
out
adc
push
xchg
pop
cmp
cmp
adc
call
push
pop
rorb
sub
xchg
cmp
arpl
mov
push
mov
and
or
lods
jmp
jo
mov
push
shlb
xchg
scas
scas
push
add
lahf
push
cmpsb
jb
bound
sbb
jnp
inc
stos
inc
add
inc
and
mov
pusha
pop
scas
ds
iret
aaa
mov
sub
jmp
sbb
popa
jecxz
subb
rcll
push
mov
loopne
int3
sub
sbb
inc
pop
cli
sub
mov
inc
push
sub
sub
decb
sub
push
cltd
lock
fbld
jae
jge
cmp
mov
or
data16
dec
lds
adc
movl
into
aas
jno
daa
flds
les
adc
mov
sub
pop
pop
xlat
or
inc
push
roll
jne
adc
jp
out
daa
orb
popf
mov
push
lea
dec
add
mov
pop
enter
add
xor
outsl
cmp
inc
sub
js
adc
cmp
sub
je
mov
cltd
cmc
cli
mov
push
adc
notb
sub
fidivrl
mov
hlt
cmpsb
and
dec
mov
dec
les
add
scas
mov
and
adc
scas
ljmp
cmp
push
popa
std
xor
fnstsw
xchg
shll
scas
mov
or
ret
dec
enter
push
imul
jae
ss
fmuls
scas
std
loope
lret
insl
icebp
xchg
inc
jnp
and
mov
push
popa
imul
pop
dec
inc
scas
gs
mov
jnp
pop
sub
cmp
push
stos
adc
and
add
iret
jmp
test
fxam
mov
mov
cmpsb
ficoml
mov
sub
push
flds
jl
loopne
test
inc
imul
pop
mov
or
fldl
leave
aas
jo
mov
push
sbb
xchg
fldt
dec
or
stc
or
jmp
xlat
and
movsb
out
dec
add
lcall
sbb
sti
or
movsl
test
movsb
icebp
add
inc
sbbl
add
xchg
xchg
mov
das
pop
addl
push
inc
pushf
std
inc
xor
sti
push
push
sar
scas
dec
in
sbb
call
addb
scas
jmp
jbe
mov
ljmp
xor
inc
inc
xor
or
aaa
loopne
fsub
sbbl
jae
enter
lret
sub
jae
jecxz
or
lds
xchg
mov
cmp
cmpsb
and
repnz
adc
jns
out
cmp
xchg
sbb
xlat
xor
mov
inc
rolb
inc
out
pop
add
mov
jecxz
rcll
addr16
movsb
dec
push
inc
int3
test
xchg
jecxz
mov
mov
xor
fnstenv
push
jecxz
hlt
push
dec
sbb
cmp
dec
dec
in
push
push
adc
repz
mov
xchg
push
pop
mov
xchg
scas
leave
mov
cmp
pop
mov
add
mov
test
mov
stc
sti
popa
nop
insb
push
xor
xor
int
idivl
sub
insl
sarb
leave
test
lea
ljmp
dec
mov
lds
inc
fsubr
in
pusha
pop
cmp
into
lahf
lret
mov
sub
int3
inc
xor
popf
test
mov
ja
mov
or
rcrl
mov
sbb
rcrb
mov
cmp
subl
popa
push
ds
jne
mov
aaa
pop
subl
sub
cmpl
ja
leave
ss
pop
push
pop
mulb
mov
or
and
out
jmp
fs
jp
ret
test
ja
es
bswap
out
out
inc
fisttpl
bound
repz
push
inc
xchg
xor
repnz
lods
jb
xchg
fildll
outsl
cmp
cmc
dec
stos
cmpsb
xor
cld
xor
movsb
cmp
dec
add
mov
xchg
jl
inc
gs
aad
scas
fistpll
xor
add
xor
dec
mov
xor
popf
out
mov
scas
test
sub
mov
cltd
or
xchg
std
jmp
jno
xorl
jp
in
insb
or
and
shrl
out
jp
xor
daa
out
or
push
mov
mov
mov
mov
jb
lea
adc
jnp
push
and
sbb
sub
sahf
pop
pop
hlt
and
jns
or
dec
fistpll
dec
push
or
ret
cs
mov
push
push
cwtl
dec
stos
xor
lcall
sub
mov
cld
cmpb
repz
push
push
adc
add
jge
inc
inc
dec
push
sbb
loop
fcomip
mov
mov
scas
idivl
push
test
ja
loopne
shlb
xchg
xchg
mov
pop
cli
es
cld
cmp
xchg
add
repz
js
add
out
mov
fistpll
mov
xor
jae
xchg
mov
adcl
cmp
pop
mov
push
out
rcl
hlt
dec
mov
push
insb
xor
pop
sti
xchg
cmp
aad
push
mov
sarl
repz
loope
push
mov
les
pusha
push
in
out
aas
pop
pusha
cmp
inc
dec
mov
pop
mov
xchg
cmp
in
movsl
adc
sarl
sahf
leave
addr16
or
mov
jb
mov
inc
push
adc
adc
adc
scas
pop
shlb
xchg
pop
or
pop
das
ja
stos
aad
fstl
jmp
inc
mov
mov
ret
mov
add
cli
or
dec
jns
sub
bound
clc
push
pop
mov
lock
xchg
pop
adc
sub
fstpt
dec
sub
test
push
lret
sahf
mov
lea
fmuls
push
mov
in
push
xor
mov
shrl
clc
pop
pop
cmpsl
arpl
jl
inc
sti
mov
adc
jae
jno
push
movsb
cmp
pusha
mov
std
cmp
mov
cli
fstpl
mov
jns
pop
xchg
sub
sub
arpl
mov
int
jge
jl
out
lock
xor
dec
adc
sub
fadds
aas
sub
pop
push
jo
and
mov
pop
out
xor
mov
fstps
mov
and
cmpsl
iret
daa
aad
mov
mov
cs
mov
loop
dec
cwtl
out
xor
mov
mov
jae
lret
lds
jp
and
rclb
mov
mov
aas
adc
fs
mov
stos
rolb
in
cmp
iret
add
cli
test
add
xchg
or
mov
ret
sub
lret
cmp
pop
fwait
and
cli
fwait
inc
js
aam
dec
pop
push
push
pop
test
mov
adc
or
and
movsb
and
add
jb
sbb
pop
mov
xchg
pop
cmpsl
sbb
int
test
data16
xorl
xor
shlb
imul
loop
fcmovu
sub
cwtl
add
lods
imul
inc
pop
cmp
sahf
das
and
xchg
push
add
std
or
movsl
in
xchg
mov
push
mov
xchg
loopne
push
xor
dec
cmpsl
sbb
fnsave
jecxz
adc
aam
dec
shl
lock
dec
sbb
iret
cmpsb
call
mov
pop
lret
nop
cmp
pop
pop
lret
mov
popa
call
add
loop
cmp
mov
stos
mov
push
mov
jecxz
loopne
push
ret
or
adc
cli
adc
jne
cmp
mov
lock
gs
and
inc
clc
cmp
cmp
sub
xlat
cmp
out
sub
dec
cmc
lcall
in
dec
neg
push
lods
das
fwait
out
push
aam
or
pop
outsl
push
sbb
xor
sub
shrl
add
jmp
pop
cmpsb
dec
stc
loop
shlb
xchg
stos
imull
fbstp
mov
subb
add
sub
and
adc
jmp
dec
or
idivb
mov
rolb
push
aaa
les
loopne
mov
push
or
std
rol
lea
in
test
in
aad
push
sti
fwait
lcall
xlat
rorl
add
int
imull
push
dec
inc
and
pusha
mov
sub
or
addl
std
clc
lea
mov
shll
xor
imul
mov
adc
xchg
lock
aam
or
and
mov
clc
push
mov
cmp
jae
sub
pushf
pop
xchg
aad
in
adc
call
orl
pop
ds
out
mov
xor
pop
xchg
inc
push
fidivrs
enter
aaa
xchg
ftst
xchg
mov
popa
adc
lret
dec
adc
jle
mov
sub
dec
aad
test
sbb
cmp
outsl
loopne
mov
lret
inc
scas
push
pop
pop
scas
popf
int3
sbb
pusha
adc
pop
int3
sbb
mov
in
mov
xchg
jp
adc
addr16
jo
or
shlb
addr16
or
push
push
pop
lea
and
orb
imul
mov
ret
jnp
sbb
xchg
add
push
mov
or
out
lods
mov
xchg
psubsw
mov
jl
popa
loopne
jae
xchg
mov
rcrl
out
fisubrs
mov
fidivrs
cmp
lods
mov
stos
or
mov
lahf
push
mov
push
aam
loopne
or
xor
add
ret
push
adc
gs
test
mov
pop
mov
pop
inc
lds
mov
orb
mov
jb
arpl
dec
adc
out
and
inc
mov
jo
push
jle
movsl
cmp
inc
in
cmpl
pop
cmp
inc
or
cltd
sbb
xchg
sbb
xchg
xor
cmp
outsl
jns
jg
add
mov
push
or
push
arpl
add
push
inc
sbb
outsb
xchg
in
or
cmp
repz
popa
cmp
pop
sub
adc
lahf
sub
lcall
dec
jmp
arpl
imul
mov
mov
xorl
adc
pop
shll
bound
sbb
inc
cmp
pop
rcrb
sbb
data16
icebp
ret
pop
out
pop
imul
xor
mov
out
enter
jecxz
aas
mov
mov
cmp
negb
in
mov
loope
dec
pop
mov
dec
lds
pop
sbb
in
mov
dec
loope
call
jmp
das
xchg
scas
pop
fnstsw
enter
jno
sub
sub
mov
outsl
cld
inc
dec
aas
in
mov
pop
shll
insb
cmp
push
aad
test
stos
xchg
dec
lock
xchg
cli
push
lods
xor
rcrb
add
call
rcll
sti
pop
mov
bound
inc
pusha
push
inc
adc
stc
push
xor
iret
pop
push
insl
test
stos
or
adc
xor
lcall
push
xchg
xor
bswap
fsub
cltd
mov
jnp
and
mov
dec
ja
cs
cmp
sbb
aad
or
xchg
cmp
xor
inc
add
cmp
jecxz
xchg
aam
mov
int
jae
xchg
inc
pop
xchg
mov
xchg
lea
push
mov
js
enter
addr16
xor
mov
jp
sbb
dec
cmpsb
std
mov
and
xchg
bnd
sbb
fcmovnb
lods
push
sbb
xchg
sbb
jmp
insb
mov
xchg
mov
mov
arpl
and
and
adc
dec
or
add
xchg
in
pop
fwait
movsb
pop
mov
ljmp
sub
jne
pop
push
sub
in
mov
mov
xchg
ljmp
mov
popa
sahf
dec
aas
xchg
jge
lods
mov
daa
movsl
call
sbb
addr16
lret
mov
rcr
rcrb
pop
imul
fwait
add
scas
push
stos
or
cli
imul
xchg
cwtl
mov
sbbb
gs
daa
xabort
push
stos
ficoml
ds
imul
out
ja
out
leave
jb
pop
negl
pop
jmp
inc
andl
mov
repnz
sbb
cmp
hlt
push
fs
mov
jp
push
xchg
in
cld
int
xlat
ret
sub
mov
push
and
push
sub
arpl
xchg
xchg
mov
sbb
sbb
cs
jno
sbbl
imul
lds
mov
jnp
jne
daa
aam
or
lods
mov
pop
push
pop
mov
addb
add
jl
imull
sub
mov
push
sbb
fstl
aaa
pminub
lods
adc
mov
lret
aad
mov
leave
inc
pop
or
fcmovnbe
test
mov
mov
into
das
adc
push
loop
pushf
test
lock
mov
in
sti
arpl
aad
flds
movsb
ds
out
adc
jg,pt
repz
ficomps
sub
inc
gs
cmpsb
xchg
out
dec
push
pop
jbe
add
test
mov
lahf
imul
pop
xchg
cmp
and
pusha
mov
xchg
or
aaa
cmp
fldenv
pop
xor
aas
mov
lea
and
lods
mov
jmp
and
scas
stos
fistpll
ss
loopne
rcl
in
inc
rcll
sub
sti
mov
lret
cmpsl
movb
arpl
dec
jle
and
add
sti
inc
cs
test
lret
mov
popa
aam
cwtl
push
push
dec
or
lret
pop
or
adc
out
mov
mov
loop
cmpsb
pusha
push
and
imul
call
jl
adc
fwait
add
xchg
mov
shrl
fwait
pop
inc
pop
int3
out
adc
inc
int
push
ror
lahf
lods
cld
cmp
xchg
cmp
inc
jo
les
inc
sahf
aad
push
jbe
dec
lock
adc
ret
inc
imul
pop
dec
adc
nop
lret
push
jno
or
mul
add
fnstcw
fstpl
test
add
enter
add
pop
test
in
sbb
jne
adc
test
xor
xor
fimuls
nop
push
out
sbb
fistl
mov
add
or
inc
je
push
cli
push
or
js
pop
scas
lea
cmc
push
jmp
stos
push
clc
mov
rcll
cmp
test
add
push
jmp
inc
sub
outsb
lret
imul
aaa
pushf
push
lcall
in
test
push
loopne
sub
ss
mov
xchg
rcl
and
inc
mov
std
lods
std
imul
mov
xchg
add
push
das
mov
dec
stos
pop
sti
movsl
dec
negb
ss
dec
xchg
mov
scas
mov
dec
inc
mov
dec
mov
xor
outsb
imul
adc
jecxz
push
jae
std
xor
inc
mov
ljmp
xor
cmpsl
inc
cmpb
mov
out
add
sub
cmpsb
mov
inc
fstp
dec
stos
das
add
mov
out
mov
mov
arpl
sub
add
out
push
pop
push
pusha
lcall
jnp
xor
inc
push
push
xchg
std
jle
cmc
sub
inc
adc
dec
sbb
hlt
into
loope
dec
push
gs
mulb
out
imul
mov
cmc
aas
dec
or
jmp
pop
push
sub
jns
add
jge
pop
aas
mov
xchg
xor
lock
cmpsl
cmp
jecxz
fdivr
add
push
jge
jl
dec
mov
mov
imul
or
std
mov
jb
pop
sahf
mov
fisubrl
xor
insb
inc
into
adc
mov
and
ficoms
xor
enter
jb
jns
clc
mov
dec
add
call
push
lods
mov
sarb
bnd
aam
sub
add
imul
mov
mov
les
call
lret
shl
xor
cmp
lret
adc
js
cs
out
mov
or
pop
ret
inc
sbb
popf
ljmp
sbb
push
mov
jcxz
fs
xchg
or
mov
mul
mov
sub
ret
cmp
xor
cli
dec
xchg
adc
je
mov
jmp
pop
ja
outsb
and
xchg
in
inc
dec
fnstenv
adcb
push
ret
dec
jl
sbb
xchg
and
repnz
jp
in
inc
lock
daa
ja
fdivrl
mov
mov
push
sub
adc
shr
inc
mov
inc
pop
push
fcmovne
rclb
daa
clc
test
repnz
mov
mov
pop
jp
fwait
imul
cmp
fs
stc
jg
xor
xlat
ljmp
add
cli
push
xchg
add
int
imul
leave
stos
notl
nop
repnz
push
test
pop
sub
xchg
imul
add
shll
sub
pop
inc
inc
ja
stos
adc
mov
out
ljmp
test
cmp
into
leave
lock
mov
fdivrl
adc
idivb
stos
inc
aas
jbe
jl
pushf
mov
mov
xchg
mov
iret
xor
in
inc
or
js
inc
mov
jge
pop
fiadds
in
xor
imul
xor
adcb
pop
mov
mov
imul
mov
mov
sbb
iret
push
fwait
cmp
test
test
addl
mov
inc
shrl
push
pop
mov
clc
jbe
mov
and
xor
jns
scas
and
repz
add
cmp
add
stos
push
insl
stc
lcall
cmp
sub
adc
push
loope
pop
scas
jno
mov
add
sub
jae
das
jle
mov
pusha
mov
or
fidivrl
das
push
cltd
loope
mov
jp
jle
outsl
imul
push
mov
cmp
aam
xchg
jp
test
scas
add
cmp
imul
cmp
push
pop
adc
inc
fs
ud1
and
data16
pop
inc
stos
iret
out
push
outsb
mov
fsub
inc
insb
inc
pop
add
insb
outsl
jp
or
mov
pop
pop
clc
push
push
clc
cmc
in
mov
or
jl
dec
mov
popa
or
fisubl
pop
push
dec
call
mov
sbb
pop
xor
clc
les
js
adc
aam
adc
cmpsb
andl
lret
cs
push
in
aad
cmpsl
jmp
pop
outsb
or
push
inc
sbb
in
imull
jge
mov
rol
aam
stc
jno
pushw
fidivl
ljmp
mov
and
out
test
xchg
xchg
xor
push
frstor
aaa
outsb
inc
pop
jl
fsubrl
mov
mov
sub
fistpl
shr
xchg
sbb
pop
repnz
lock
insb
fbstp
and
adc
add
push
cld
add
dec
pop
jecxz
and
int
cmp
sarl
das
mov
bound
or
popf
adc
xchg
cmpsb
jo
int
or
cmp
xchg
pusha
lds
movsb
push
sub
ljmp
nop
xchg
pop
mov
inc
inc
mov
test
jnp
adc
ss
mov
mov
mov
data16
data16
pop
scas
in
popf
fcoms
repnz
jae
mov
bound
outsb
dec
sub
push
jo
sbb
scas
pusha
rclb
push
rolb
sbb
xchg
and
cli
push
mov
dec
pushf
jae
lret
rcrb
icebp
xor
xlat
mov
xchg
jmp
test
stos
adcl
fdivs
cli
sub
dec
mov
out
lret
xchg
leave
cmp
repz
jo
invd
fstl
mov
dec
sbb
std
aam
pop
dec
inc
or
dec
inc
mov
or
sub
call
hlt
and
push
xchg
pop
mov
pop
and
pop
cmp
add
xchg
or
jnp
mov
mov
dec
scas
fsubrl
stos
jbe
mov
mov
bound
in
pop
pop
sub
test
aad
test
mov
test
xchg
jae
mov
pop
push
pop
mov
jge
cli
fildll
lahf
dec
cmpsb
das
shlb
pop
xor
clc
mov
mov
inc
je
jmp
mov
in
inc
mov
jns
inc
arpl
es
push
rcr
mov
mov
and
call
divb
mov
lcall
pop
jns
xchg
arpl
test
movsl
jmp
adc
xor
and
ret
sub
mov
out
js
imul
aas
insb
push
mov
aas
mov
pop
mov
mov
pop
inc
inc
cs
xchg
adc
int
dec
or
inc
mov
lds
push
or
pop
ljmp
xor
push
push
push
pusha
int
cmp
aaa
push
test
and
test
and
sti
popf
pusha
sub
mov
fmulp
mov
inc
push
xor
outsl
pop
ror
mov
scas
cmp
pop
cmpsb
lods
test
ljmp
jae
xor
push
nop
sbb
daa
imul
dec
jmp
pop
sub
aad
xchg
fcoml
fcompl
add
pop
mov
std
push
mov
repnz
movw
mov
inc
shrb
rcrl
cmp
icebp
cmc
dec
aaa
jo
sbb
imul
cmp
shrb
dec
xlat
mov
dec
mov
jl
ljmp
cmp
test
cmp
daa
in
or
cmp
xor
pop
pop
adc
inc
or
cmp
cld
jb
sti
push
jle
loopne
jl
mov
pop
or
cmc
fwait
inc
clc
lods
xor
pushf
jge
jle,pt
jp
xlat
cltd
in
ds
mov
jae
fnsave
cmp
dec
or
inc
adc
cmpsl
shrl
mov
push
mov
gs
inc
or
inc
test
in
addr16
add
mov
in
fstl
xor
cmp
shr
xchg
push
or
insl
fcom
ja
add
pop
test
ljmp
dec
xchg
pop
pop
rolb
mov
adcb
xor
addr16
xchg
jae
movsb
dec
ljmp
adc
mov
test
shrb
mov
jnp
and
aam
jp
mov
sbb
ss
in
lods
cmp
pop
je
mov
dec
push
sbbl
das
mov
mov
cmp
xchg
fisttps
adc
xor
cmp
int3
xchg
jp
sub
and
inc
cs
icebp
xchg
lds
das
push
pop
mov
mov
fcmovnu
or
sub
loope
push
loope
rol
std
pop
mov
pop
mov
fwait
sbb
or
pop
push
movhps
in
adc
push
in
aam
add
iret
lods
out
mov
out
pause
sti
sbb
cmp
daa
dec
jno
fsubs
mov
inc
ds
cmp
push
cmp
movsl
or
not
dec
imul
mov
scas
sbb
mov
cmpsl
cmp
pop
out
mov
mov
loopne
dec
in
scas
jmp
sahf
test
jne
leave
xor
mov
xchg
add
mov
push
xchg
lcall
fldt
sub
inc
in
sub
insb
aaa
push
inc
mov
insl
mov
out
or
leave
mov
push
insb
and
add
ljmp
cltd
and
in
sbb
iret
xchg
popf
orb
xchg
addl
inc
js
and
enter
mov
aaa
fcmovnb
cwtl
loopne
xchg
sbb
xchg
je
cmpsl
jno
repnz
sub
and
fisttpll
push
sub
jno
mov
call
cmp
or
test
xchg
imul
mov
xchg
mov
lea
mov
scas
daa
jg
je
test
andl
ret
fistpl
fiadds
in
dec
pop
add
ficoml
xor
and
cmp
jno
adc
test
ret
xchg
cmc
add
push
stos
xchg
xchg
sbb
gs
ja
add
fcoms
inc
mov
and
test
push
cmc
inc
push
dec
sbb
sahf
test
push
lods
out
pop
mov
stos
mov
aaa
test
push
jb
dec
movsl
or
dec
lret
jno
jl
push
or
popf
cmp
or
dec
push
mov
cli
adc
std
ds
out
fists
cli
mov
clc
fimuls
in
mov
dec
and
int3
jl
aam
push
loop
jo
andl
iret
popf
or
sub
ficoms
jb
mov
xchg
or
gs
sbb
ss
pop
mov
mov
push
lret
push
xchg
cmp
sbb
or
cs
mov
sbb
jo
into
xchg
stos
insb
sbb
xchg
shl
rolb
clc
fisubrs
dec
testb
notl
fmuls
dec
xchg
push
pop
xor
int
in
and
imul
or
sbb
sbb
push
pusha
ss
insl
inc
mov
ficompl
push
je
popl
nop
roll
xor
jno
repz
cmp
fidivl
adc
repz
xchg
dec
jmp
adc
ret
nop
and
cmp
fdivl
jns
mov
adc
push
cmp
cwtl
shl
test
lret
das
inc
aas
sti
call
enter
mov
in
and
sub
daa
lods
pop
cli
shrb
mov
push
loope
aas
push
pop
test
mov
fiaddl
mov
mov
and
cmpsl
lock
and
outsl
into
cmc
pop
jb
xlat
or
dec
xchg
ret
add
divb
xchg
lahf
dec
pop
push
ret
mov
lds
cmp
lods
fadds
prefetch
xchg
out
inc
sbb
lcall
pop
ja
int3
and
adc
mov
ficoms
xchg
in
cld
call
sbb
cmc
insl
adc
rcrl
test
repz
ljmp
int
xchg
mov
sbb
inc
cmp
imul
movsb
push
icebp
je
ss
les
test
mov
rclb
lret
mov
mov
loop
and
leave
pop
pop
cmp
jp
adc
jecxz
cmp
mov
bound
jmp
hlt
mov
repz
cltd
inc
push
sbb
jb
or
call
test
mov
sti
lahf
mov
xchg
xchg
in
push
loope
insb
arpl
insl
or
ja
rcr
add
push
jae
xlat
cmp
cmp
mov
fucomi
jnp
inc
push
adc
add
cltd
loop
pop
jmp
sub
dec
and
push
lret
fs
dec
mov
pop
and
lock
xchg
sub
addr16
push
and
xchg
daa
loopne
jl
mov
push
mov
mov
cmp
cmp
fisttps
xchg
cmpsl
shrb
xor
test
rcl
stc
stos
adcl
sub
sbb
adc
xchg
or
clc
dec
mov
dec
xlat
fmuls
push
sub
cmp
jecxz
cmp
mov
fiadds
sub
cmpsb
jp
xchg
mov
lahf
imul
dec
imul
mov
fucomp
cltd
dec
cwtl
sbb
push
add
out
mov
xchg
scas
ja
inc
fimull
arpl
push
into
testb
movmskps
insb
call
incb
nop
inc
add
push
aas
pop
push
or
and
adc
push
scas
jbe
sub
int3
push
cmp
fcomp
cld
xor
lcall
sbb
mov
inc
pop
mov
inc
int3
push
mov
jns
sar
cmp
das
pop
lods
in
push
rcll
mov
aam
orb
jp
aaa
pop
jle
xor
lahf
fcompl
jne
mov
xchg
xor
mov
pop
or
orb
in
out
loopne
inc
cli
jno
jbe
fdivrl
mov
psrlq
test
scas
and
xchg
push
in
mov
xchg
and
mov
sti
xor
ror
lds
and
adc
xchg
scas
dec
pop
data16
insb
pop
ja
push
pop
sbb
push
jb
int
rdmsr
popa
popa
mov
push
adc
jne
test
cmp
mov
cmp
cmp
imul
outsl
mov
or
cmp
pop
xchg
pushf
push
fnstsw
test
push
push
mov
push
adc
sbb
xchg
mov
jge
pop
sbbb
jae
out
sub
or
stc
inc
pop
pop
rep
jp
jl
ja
pop
in
or
sbb
or
out
xchg
ror
mov
mov
sahf
push
mov
shlb
notl
inc
sub
rcpps
xchg
sahf
add
repnz
mov
cmp
fnsave
aas
pop
jl
aad
pop
inc
iret
lods
mov
mov
lcall
addl
push
xchg
push
rorb
inc
cld
xchg
sub
cld
jp
mov
dec
inc
iret
xor
and
repnz
adc
and
popf
push
xor
push
sbb
test
js
mov
cmp
out
cmpsl
inc
push
mov
mov
mov
xchg
xor
push
test
xchg
arpl
jge
cld
pop
xlat
insl
adc
push
push
lret
push
and
pop
push
sahf
sbb
shlb
mov
mov
pop
sahf
mov
inc
fcompl
outsb
pop
repnz
mov
add
lret
dec
and
or
fwait
mov
cld
dec
mov
fwait
ss
jno
jbe
int
test
dec
jmp
movsb
dec
jmp
jmp
xor
aam
pop
jl
add
inc
push
cmp
sub
loop
sbb
cmp
cltd
fbstp
in
inc
inc
and
imul
fisttpll
test
test
mov
subl
fistl
xchg
lret
inc
fstl
es
sbb
loope
movlps
test
dec
mov
les
lds
in
insb
lock
inc
in
adc
jl
test
pop
adc
xchg
inc
jo
lea
inc
mov
jmp
jo
fwait
icebp
popa
leave
leave
das
fs
inc
push
subw
pop
xchg
lods
imul
nop
pop
add
mov
or
xor
ficoms
push
push
in
add
jb
mov
mov
mov
cwtl
add
mov
int
xchg
mov
es
ret
lea
call
jg
and
push
jae
add
push
cmpsb
pop
pop
jp
pop
fcomp
jns
pop
int3
lea
jnp
dec
push
jno
dec
mov
xchg
insb
mov
fstpt
xchg
push
cmpl
pop
mov
jecxz
pop
jo
mov
out
loopne
push
arpl
mov
negl
cs
push
jo
out
xchg
pop
pusha
adc
rcr
loop
dec
and
das
fmull
mov
or
sarl
loopne
mov
xor
lahf
add
pop
sub
push
xor
cwtl
scas
or
and
cmpsb
leave
iret
push
or
fcmovnu
push
adc
pop
cli
cld
nop
mov
ja
test
lea
push
ss
xchg
les
mov
mov
fsts
push
mov
mov
rorl
add
aad
repnz
inc
scas
pop
mov
jno
pop
add
lods
test
dec
mov
enter
add
pop
mov
enter
jno
outsb
shrl
loop
sub
mov
notl
mov
or
lods
in
mov
mov
outsl
sub
or
push
pop
loope
cmp
rcll
mov
xchg
dec
imul
jge
xor
mov
xchg
mov
imul
inc
mov
jl
mov
sub
inc
xchg
cltd
loop
mov
push
push
push
or
lret
addr16
push
sub
sbb
dec
mov
push
mov
movsb
push
rcll
mov
lods
lds
mov
add
inc
add
lds
decl
gs
arpl
mov
test
sbb
mov
pushf
imul
jmp
cmc
mov
pop
mov
adc
pop
scas
sahf
cmpsl
and
inc
loop
adc
add
or
cs
add
test
aad
lock
and
adcb
bound
adc
inc
inc
fsubs
jbe
ljmp
xor
inc
sbb
pop
xchg
cltd
call
es
nop
xchg
adcb
push
xor
icebp
sahf
pop
mov
icebp
jl
and
in
rol
jne
jne
imul
mov
sub
add
mov
sbb
push
outsb
popf
in
arpl
iret
mov
jbe
pop
push
dec
mov
lcall
push
sub
cmp
sbb
lcall
xchg
mov
inc
arpl
dec
adc
jo
xchg
rol
mov
test
lea
mov
daa
jp
ret
pop
imul
pop
ret
jp
imul
cmp
mov
jl
pop
out
lahf
aaa
iret
or
sbb
pop
xchg
aad
push
insb
imul
mov
add
mov
sarl
sub
inc
jp
jae
scas
xchg
loop
cs
mov
sbb
dec
jmp
xlat
sbb
and
mov
push
sub
cmp
dec
stos
jno
add
int3
pop
inc
push
jg
and
push
jp
mov
testl
mov
icebp
xchg
xlat
xchg
pop
xchg
sub
int3
push
mov
xor
pop
cmp
test
inc
pusha
and
jbe
lcall
sbb
ja
xchg
add
out
cmpsb
fcomi
mov
jg
stos
cmp
push
jp
decb
loopne
push
aam
test
fldcw
jns
or
pop
mov
in
test
imul
pop
xchg
inc
out
sub
sub
aam
scas
rcrl
and
pop
dec
stc
push
xor
aad
inc
outsb
enter
sti
mov
ljmp
adc
ds
sub
jo
stos
push
cmp
mov
adc
pusha
mov
mov
adc
xchg
lock
mov
arpl
cmp
sub
dec
and
daa
xchg
dec
sbbb
push
dec
mov
xchg
dec
sub
test
lds
outsb
ret
jne
adc
sub
ret
in
xor
or
mov
cli
repnz
clc
jp
mov
ja
xchg
cmpsb
in
pop
je
xchg
stos
outsb
pop
cmp
fsts
mov
mov
mov
dec
jne
or
shl
ret
icebp
lods
sbb
sti
clc
or
inc
lea
pop
pop
mov
js
aaa
and
pop
mov
loop
xor
in
push
loop
call
push
and
movsl
stos
sbb
add
lock
pop
mov
jo
sub
test
sub
repz
int
shufps
adc
adc
into
sub
dec
ret
imul
insl
inc
inc
dec
clc
outsl
mov
adc
insl
into
mov
or
scas
je
loope
daa
movsl
ret
add
jne
mov
negl
push
in
pop
cmc
repnz
dec
cmp
fwait
and
xchg
mov
xchg
cs
sub
adc
adc
push
xrelease
lods
push
xchg
or
and
outsb
aad
jge
das
loopne
cmpsl
out
imul
or
pop
or
ret
rcrl
mov
ror
test
fwait
aaa
add
push
mov
fwait
pop
ljmp
xor
push
imul
mov
sbb
lret
mov
or
xlat
jg
jg
xor
dec
scas
movsl
fcmovnb
dec
out
aas
mov
jns
xchg
cli
and
ljmp
dec
push
xor
into
inc
dec
fs
xor
test
mov
cs
and
lcall
jecxz
ss
jnp
push
dec
cs
je
cmpsb
repnz
dec
lods
andl
or
jg
mov
loop
bound
stos
inc
jne
sbb
mov
jp
lcall
shlb
fdivrl
jge
fidivrl
inc
inc
mov
mov
cmc
test
mov
sbb
sub
pop
sbb
leave
mov
call
xor
mov
rclb
adcb
outsb
ret
adc
inc
xor
push
sbb
xchg
aad
shld
ja
mov
out
ljmp
pop
stos
push
and
lods
in
dec
andl
mov
mov
push
fiaddl
jmp
sbb
leave
adc
pop
mov
inc
rcl
xor
sub
push
jbe
stc
daa
jne
cmp
loopne
or
sbb
sarl
test
loope
shl
outsl
jge
sbb
imul
fnstenv
pop
inc
push
dec
and
cmp
rolb
add
int
jle
xor
in
xchg
xchg
jo
shlb
inc
xchg
out
or
mov
or
pop
fstl
outsb
outsl
pop
repz
xchg
push
mov
divb
rolb
sub
stos
jbe
repnz
cmp
negb
aad
jmp
mov
mov
movsb
inc
jp
lds
cmp
dec
mov
cmp
push
in
sub
inc
les
and
jmp
adc
std
loope
xor
adc
mov
push
mov
dec
nop
test
not
mov
hlt
jg
repz
inc
xchg
push
inc
lds
cltd
aam
cmpsb
cltd
mov
in
bound
adc
movups
xchg
push
xchg
jbe
cmp
dec
or
jp
rorl
popa
popa
enter
xchg
sbb
les
sub
pop
or
fadds
pop
arpl
push
push
sbb
xchg
ret
add
push
rorb
es
ja
fbstp
push
lods
inc
xchg
pop
popf
pop
pop
cmpsb
and
popf
xchg
movsb
cmp
mov
xor
movb
ds
in
mov
adc
dec
push
mov
call
addb
adc
add
sub
mov
pusha
dec
add
inc
xchg
test
sahf
int
mov
mov
lret
xchg
jg
lods
mov
les
dec
test
stc
rcll
cltd
pop
leave
loope
sbb
sbb
loope
cwtl
or
insb
cwtl
repnz
les
fs
and
and
cmpsb
mov
loop
pop
mull
sahf
popf
sarb
mov
or
out
pop
test
mov
js
int
mov
adc
xor
xchg
popa
dec
jp
shrl
pop
adc
add
cli
loop
stc
cmp
mov
dec
gs
sbb
sbb
lahf
mov
push
push
xchg
test
mov
or
pop
loope
adc
adc
andb
movsb
sbb
stos
loope
jge
test
shr
xchg
mov
shll
mov
cwtl
in
lods
scas
bound
negl
jns,pn
lock
mov
or
in
sbb
and
mov
and
sbb
js
jl
test
adc
jne
fcoml
jae
xchg
in
fcmovb
flds
jne
in
andb
pop
mov
sbb
decb
inc
arpl
and
fsubrl
popa
or
mov
cmp
movsb
roll
sbb
push
imul
rcll
adc
cs
jecxz
and
or
adc
add
aam
mov
mov
fisttpll
aam
mov
cmp
hlt
out
test
push
jbe
and
jg
dec
addr16
mov
imulb
pop
cmp
aaa
cmp
repnz
scas
daa
mov
insl
mov
xchg
and
inc
inc
and
adc
cmp
mov
jns
addb
mov
int
fprem1
leave
or
mov
mov
xchg
push
or
mov
in
and
pop
rcrl
push
push
and
out
xchg
mov
lods
in
push
cld
dec
cltd
inc
je
test
xor
das
jecxz
and
jg
adc
aad
push
shll
mov
inc
in
mov
jae
lahf
push
xchg
lea
or
cmpsb
dec
test
iret
rolb
bound
pushf
std
sar
mov
cmp
lret
lods
mov
ss
adc
push
pushf
int3
jns
jmp
je
imul
mov
scas
bound
movsb
scas
and
adc
or
dec
mov
and
ja
pusha
add
in
fisubl
lret
adc
jno
rcrb
test
lods
pop
mov
imul
sub
movsl
insb
incb
cld
mov
cmp
push
test
jno
sbb
mov
mov
adc
stos
push
dec
sti
dec
in
stos
xchg
jmp
loop
dec
mov
push
imul
dec
gs
pushf
jp
pusha
pop
cmp
jecxz
jae
rol
xchg
jge
test
stc
xchg
stos
adc
dec
gs
sahf
push
xchg
sbb
stc
test
clc
jnp
add
sub
mov
jno
and
data16
xor
movl
leave
insl
dec
pop
mov
inc
out
je
dec
sarl
adc
mov
sbb
add
fisttpll
sbb
sub
in
outsl
out
daa
pushf
xchg
xchg
fbstp
aaa
das
sbb
inc
and
pop
mov
les
repnz
imul
out
sub
repnz
push
adc
imul
pop
add
sub
ljmp
xchg
scas
mov
fs
cmp
dec
sbb
mov
cmp
outsb
adc
lods
or
inc
mov
push
adc
push
and
stos
jge
pop
fadds
iret
addr16
sbb
rorl
and
shlb
mov
or
dec
adc
cmc
and
and
push
jp
push
incl
imul
mov
push
xchg
xor
or
push
jns
and
or
bound
lock
andb
lret
xor
add
scas
das
mov
push
sbb
rcrl
in
iret
mov
jbe
repz
sbb
hlt
mov
xor
push
aad
fwait
test
dec
test
xlat
sbb
out
cmp
sarb
dec
addr16
push
out
mov
pop
fbstp
ss
out
aaa
fbld
jge
adc
mov
jle
mov
popa
or
adc
loopne
cld
rolb
enter
loope
xor
lea
cld
cmp
nop
or
arpl
test
into
imull
aas
and
mov
testb
and
icebp
or
arpl
ja
add
je
out
std
inc
inc
add
rcr
adcl
outsb
jae
sarb
mov
loopne
xorl
xor
jp
mov
movsl
cmp
subl
popf
loop
cmp
data16
jp
sbb
add
scas
dec
std
movsl
popf
push
mov
test
loopne
loopne
inc
inc
xlat
push
clc
cmp
arpl
xor
arpl
xlat
cld
fisubrl
divb
adc
xor
push
lahf
fiadds
roll
xor
xchg
shrb
xor
int
mov
aas
cltd
pop
fistpl
jle
push
inc
lods
sub
sub
xchg
cltd
orb
pushf
push
out
loope
lea
mov
push
mov
out
adc
sub
fisttpl
scas
push
xor
or
inc
pop
cmp
cmp
lahf
add
popa
shll
pop
es
or
xor
std
icebp
jg
aam
icebp
adc
into
stos
in
addb
out
aam
ret
ffreep
stos
rolb
cld
inc
lock
fbld
push
push
in
mov
or
sbb
call
xchg
pushf
cmpsl
xor
mov
xor
movsl
test
daa
aad
mov
xor
xchg
insb
push
fstpl
jno
icebp
ret
xchg
xchg
mov
daa
inc
xor
sbb
xor
add
sbb
add
pop
imul
lahf
cmova
jo
ret
adc
fs
lea
rcrl
pop
jmp
pop
pushf
mov
ret
lret
mov
scas
pop
rcrl
xchg
cmp
xchg
mov
scas
pusha
add
sbb
insl
std
lds
push
xor
insb
cmc
push
ljmp
dec
cmpsb
sbb
push
repnz
mov
repnz
mov
jne
pop
pop
outsb
fucomi
sub
jmp
xor
ss
push
inc
cltd
sbb
cmp
int3
cmp
andl
sub
out
iret
xor
cmp
xchg
loope
pushf
das
loope
ljmp
in
add
ret
pop
push
xchg
inc
xchg
push
sbb
sub
pop
std
sbb
pop
fldt
in
dec
pop
dec
jmp
cmc
pop
sbb
mov
jns
cmp
rclb
or
daa
xchg
push
push
ljmp
pop
push
xor
pop
std
mov
in
fs
bound
push
in
adc
adcb
mov
mov
repz
fwait
scas
xchg
mov
add
xchg
loope
xchg
stos
sbb
push
mov
inc
xor
outsb
hlt
dec
ds
lock
xchg
cmp
mulb
fs
mov
cli
xor
into
fdivs
xchg
sbb
arpl
or
jl,pn
or
inc
xor
and
arpl
dec
and
ret
jb
leave
into
test
or
and
lock
enter
adc
pop
sahf
xchg
repz
push
mov
outsb
or
jecxz
icebp
pop
xor
push
xor
jl
repz
scas
aad
insl
sti
gs
test
popf
mov
inc
aad
sti
pop
push
lcall
ficompl
repnz
mov
adc
scas
iret
add
mov
pushf
add
das
cmp
inc
cmpb
pop
xchg
fs
fucomip
mov
or
ds
xorl
adc
aam
in
mov
mov
popa
push
loop
sahf
sar
pusha
pop
or
add
insb
xchg
adc
or
aaa
jb
xor
sarb
mov
xchg
jle
cs
mov
std
mov
xchg
pop
loope
iret
jns
lcall
out
mov
mov
and
dec
dec
and
cmp
nop
or
ljmp
mov
out
push
jns
std
xor
pop
or
aad
xchg
mov
or
sbb
jnp
sub
xchg
clc
inc
cwtl
stos
std
cmp
daa
add
and
or
imul
iret
cmp
inc
xchg
rclb
or
out
popa
mov
and
sbb
icebp
lahf
into
inc
mov
xlat
fidivrl
xchg
ss
adc
xchg
xor
and
fildl
int
daa
inc
and
mov
shrb
aam
outsl
sub
adc
lea
fwait
jno
jno
cld
mov
shll
jecxz
mov
and
icebp
jp
icebp
je
lods
jmp
cmp
cmpsl
mov
loopne
aam
xlat
push
and
and
mov
jecxz
mov
and
mov
lea
and
js
lret
shrb
cwtl
xchg
loop
jae
loopne
in
int3
jno
mov
sbb
dec
jno
sbb
in
jecxz
cltd
mov
pusha
xchg
lret
mov
mov
pop
xor
icebp
ret
mov
das
vmovshdup
out
test
iret
push
sub
in
adcl
faddl
aas
and
mov
mov
lds
aaa
fwait
gs
mov
jo
mov
inc
mov
sub
lcall
and
scas
mov
gs
jecxz
push
je
and
adc
push
sbb
scas
xchg
das
mov
pop
and
cs
leave
lods
fsubs
mov
negl
inc
into
ja
dec
loopne
mov
push
sbb
mov
sbb
push
loop
xchg
stos
in
xlat
adc
pop
pop
pop
rcrb
idivb
xchg
sahf
cmp
jb
sbbl
inc
sahf
sbb
leave
movsb
mov
int3
subl
mov
mov
lds
ja
stos
xchg
xor
in
mov
in
out
sti
push
inc
test
push
xchg
lods
outsl
lds
xor
iret
out
xchg
and
xchg
sub
inc
nop
ja
mov
jge
lret
pop
cmpsl
test
pop
xor
mov
inc
enter
imul
cmp
sub
repz
jno
ss
push
jmp
push
mov
imul
mov
jmp
in
sub
inc
or
loopne
movsb
adc
negl
jp
cmp
xchg
cltd
ja
push
push
test
cmp
cmp
std
push
mov
jecxz
das
outsl
or
add
pop
rclb
repz
jno
lds
in
pop
add
popf
mov
int
inc
aaa
mov
push
adc
arpl
pop
fsubl
push
leave
jle
xor
rcl
sbb
add
loope
ret
mov
sbb
fs
fs
rcll
xchg
adc
fnstenv
jns
shll
mov
xorl
sub
loop
das
popf
jp
mov
adc
icebp
or
into
xor
icebp
aam
pop
incb
aas
or
mov
xchg
outsb
or
pop
fcomps
movsl
push
cmp
sahf
push
icebp
push
outsb
ret
inc
add
push
sub
cmp
push
lahf
out
hlt
out
stos
adc
mov
mov
push
aad
or
xor
and
mov
mov
mov
xchg
inc
sub
fs
xor
les
fcoml
mov
adc
jb
loop
jle
out
ss
mov
add
sti
pusha
add
enter
mov
cli
jnp
xchg
rcll
or
push
cmp
mov
xor
push
inc
test
adc
jae
addr16
shl
fstpl
push
loop
pop
xchg
test
shr
add
or
pop
mov
sub
mov
inc
and
std
jb
inc
jnp
xchg
jns
inc
aam
mov
jle
std
leave
mov
rorl
call
out
movsb
out
leave
mov
inc
leave
cmp
aad
outsb
and
sub
int
out
jnp
dec
in
scas
and
insl
push
push
mov
cmp
jecxz
dec
rorb
and
pop
push
cmpsl
pop
xor
fs
add
pushf
stc
inc
jmp
aas
in
sbbl
outsl
adc
mull
fwait
dec
jecxz
enter
cmp
sub
sub
mov
push
inc
pop
mov
movsl
mov
in
mov
test
fimull
ret
adc
or
inc
xor
imul
xor
test
subl
xchg
pop
or
push
sub
jg
xor
cmp
pushf
jmp
or
mov
fwait
mov
pop
punpckhdq
xor
mov
jl
int
outsb
shll
fdiv
or
or
decl
lock
lock
jns
and
repz
sbb
push
test
hlt
or
repnz
xor
or
jp,pn
push
dec
sub
pusha
pop
mov
mov
out
out
out
roll
inc
insb
imul
and
fsubrl
push
aam
mov
mov
and
test
add
scas
push
mov
push
cld
or
cmc
jmp
cltd
ja
or
add
into
lcall
loop
lods
xlat
push
ljmp
shrl
les
dec
pop
inc
loopw
popf
rolb
push
jmp
icebp
les
fs
sub
push
cmp
mov
das
aad
out
out
adc
xchg
and
or
inc
int3
lcall
lret
adc
sbb
movsl
arpl
mov
ja
mov
pop
jmp
fldcw
adc
add
push
pop
push
xchg
stos
out
test
inc
sbb
sti
push
orb
icebp
mov
hlt
test
insl
push
fcmovnbe
fdiv
dec
sub
movsb
xor
negb
or
dec
in
loop
cli
fistpl
mov
pop
jp
mov
and
insl
adc
cmpsl
dec
test
out
inc
jne
pop
pop
xchg
leave
bound
ja
xorb
stos
not
sub
cli
aad
mov
movsl
jno
ja
loop
xchg
and
lock
sbb
xchg
pusha
lcall
jle
leave
pop
ret
fnstenv
dec
pop
xchg
pop
inc
pushf
pop
add
pop
xchg
push
cld
cmp
adc
jae
cmp
std
mov
fsts
xchg
lock
push
scas
or
ret
sbb
movsb
insb
push
or
in
incb
pop
or
push
jmp
push
call
inc
adc
and
inc
sti
sbbb
mov
mov
cmp
mov
and
mov
and
sbbl
int
clc
out
sbb
jbe,pn
out
int3
mov
fnstenv
int3
jo
pop
or
sbb
repz
pop
push
jmp
adc
test
pop
sahf
or
push
add
clc
lcall
lcall
sbb
out
ret
adc
xor
sbb
out
clc
aaa
dec
loopne
dec
pop
icebp
cltd
out
xor
xchg
repz
loopne
sbb
fucomip
icebp
andl
dec
bound
sbb
sarb
ss
inc
adc
inc
jne
sahf
and
outsb
int3
xor
repnz
mov
push
rorl
in
icebp
stc
mov
test
enter
out
cmpsb
inc
sub
dec
add
fnstsw
shll
mov
mov
xchg
xchg
jl
test
insl
xchg
sti
popf
mov
mov
lods
hlt
adc
inc
orb
fwait
push
sti
pop
add
pop
jo
mov
lods
push
jmp
xchg
negb
pop
dec
dec
push
loopne
lods
and
sahf
pop
cmp
or
mov
or
adc
dec
pop
in
int
je
push
fucomi
adc
and
mov
ljmp
dec
pop
test
jnp
sbbl
in
and
dec
mov
fldcw
hlt
mov
sub
push
mov
andb
lcall
shrb
imul
imul
subl
sbb
inc
jns
mov
pusha
mov
arpl
sub
pop
xor
push
mul
sbb
iret
cmp
and
dec
in
mov
mov
dec
sahf
aad
sub
xchg
je
sti
add
jbe
rcrl
std
stos
dec
lahf
fwait
andb
bound
ja
aam
cmp
rol
mov
bound
movsb
cli
cld
movsl
sbb
leave
fnstsw
sub
mov
push
add
mov
inc
sub
push
mov
xorb
push
sbb
testb
xchg
push
popa
mull
lret
rcl
ficomps
pop
flds
call
addl
ret
pop
push
sub
add
xchg
xchg
inc
xchg
vpsubsb
sahf
mov
mov
popl
dec
mov
inc
sti
mov
xor
adc
add
xor
push
addr16
sbb
or
mov
cmp
movsb
inc
xorb
or
hlt
into
test
dec
popf
push
shlb
push
xlat
jp
loop
mov
sbb
sub
aaa
icebp
mov
xchg
ret
sbb
loop
mov
pop
ret
xchg
adc
add
test
sbb
sahf
pop
fldcw
and
aam
and
push
mov
or
sub
adc
mull
jecxz
shrb
pop
pop
gs
pushf
lahf
xor
jge
mov
push
lock
loop
xchg
outsl
call
sahf
ss
add
jl
fmul
sti
mov
rolb
dec
add
es
jmp
mov
xor
sub
push
lock
add
shl
push
scas
adc
ljmp
cltd
lods
imull
jno
pop
push
shrl
rol
arpl
push
xor
pop
jge
sbb
cld
mov
insl
push
xlat
mov
sarl
fstl
movsl
sarl
xor
fdivl
jns
loopne
add
shr
cltd
loope
add
nop
dec
cwtl
mov
inc
add
sub
mov
inc
lahf
cmp
in
enter
xlat
xchg
fidivl
test
cmp
cwtl
loope
sbb
insl
jle
test
arpl
pushf
lret
scas
roll
inc
push
sti
sub
mov
fcmovne
cmp
cmp
mov
lock
sub
jnp
loopne
jle
push
popa
psrld
out
ja
xor
mul
mov
push
outsl
cs
mov
emms
scas
xchg
leave
lods
dec
mov
or
mov
cmp
icebp
lahf
add
je
pop
cmp
hlt
add
mov
popa
dec
cmp
int
fwait
and
jmp
cmp
pop
aad
cmp
push
data16
imul
and
push
out
mov
bound
loop
jne
pusha
mov
pushf
ret
int
sub
mov
or
inc
sbb
jp
sbbb
jne
adc
ret
insl
dec
cltd
or
lea
xchg
add
dec
sub
sbbl
add
xchg
mov
pop
mov
pop
test
test
lret
enter
or
fistpll
cmpl
sbb
dec
out
sbb
test
and
dec
mov
inc
insb
and
add
push
lcall
adc
xor
push
mov
fcmovnu
xor
dec
add
test
mov
cli
ds
cmp
ljmp
out
loop
pop
xchg
or
ss
lahf
sahf
pop
and
mov
pop
mov
dec
or
mov
push
adc
je
mov
cwtl
ljmp
pop
int
mov
xor
inc
cmp
or
in
fisttpl
inc
adc
pop
cltd
in
daa
insl
cwtl
popa
mov
pop
xchg
enter
xor
lret
sub
sub
push
mov
jge
inc
cli
insl
jae
add
das
inc
daa
arpl
dec
mov
and
lock
xor
xchg
sub
popf
clc
mov
cltd
andl
sti
jo
outsl
dec
sub
sahf
dec
pop
sub
sbb
dec
inc
adc
or
sbb
loopne,pn
pop
dec
push
add
add
sub
pop
lahf
xchg
xchg
push
inc
loope
insb
sbb
adc
out
inc
lods
xchg
cltd
push
mov
push
lock
test
push
rcll
leave
lock
in
pop
dec
jne
rclb
and
mov
xchg
mov
xchg
push
sbbb
pop
dec
movsl
iret
dec
inc
and
andl
pop
or
in
pop
mov
aad
dec
sub
dec
inc
jecxz
add
ret
sbb
outsb
adc
adc
sub
icebp
ficomps
rorb
rorb
add
mov
add
test
dec
mov
and
fidivrs
sbb
fsubs
mov
jp
out
fwait
loope
mov
std
stc
into
movsl
xor
movsb
adc
cmp
rolb
ja
pusha
loopne
xchg
jmp
cmpsl
adc
shlb
insb
pop
subb
rolb
push
lret
orb
cmp
jp
jp
or
xchg
or
inc
cmpxchg
out
subb
nop
clc
daa
cmpsb
addr16
mov
fbld
jmp
mov
pop
xchg
push
xchg
in
sub
imul
je
aaa
sub
cmp
jns
insb
pop
inc
cmpsb
mov
cmp
pusha
lea
lret
xchg
add
cs
cld
lret
xchg
push
inc
popf
rcll
inc
das
add
fistpll
mov
outsb
xor
in
mov
je
aad
les
mov
pop
cltd
es
or
push
or
push
mov
cmp
xchg
add
jne
mov
adc
jmp
div
mov
fisttpl
cmp
mov
jns
mov
loopne
stc
sub
jmp
pop
mov
mov
and
adc
ds
loopne
dec
cmp
cmp
incl
mov
out
mov
push
inc
outsb
aam
mov
fwait
shl
and
dec
mov
push
jmp
aad
mov
pop
repz
adc
jg
popa
cmp
add
pusha
test
popf
mov
xor
repz
jns
dec
and
mov
cmp
inc
push
cmp
out
stc
cmpsb
inc
leave
mov
arpl
aaa
mov
xor
dec
push
dec
cld
call
fldt
sbb
mov
xchg
adc
sbb
sarl
inc
add
or
xor
push
aaa
fs
scas
int3
jmp
popf
and
fnstsw
cli
test
xchg
pop
repnz
cmpsl
jb
addr16
fnstenv
cwtl
push
das
aad
cli
inc
in
adc
and
or
lods
mov
or
xor
imul
lods
into
jmp
mov
and
sub
popa
rcrb
xor
icebp
out
mov
xchg
adc
daa
cmp
scas
cmpsb
jne
sub
jo
xchg
xchg
xlat
adc
adc
hlt
sub
into
mov
add
pushf
xchg
or
mov
dec
outsb
test
xchg
adc
ret
add
stos
sbb
jne
jo
cmp
scas
adc
cmc
inc
std
jge
jp
iret
ss
popl
xor
sub
push
mov
jnp
or
mov
xor
adcb
jg
faddl
scas
test
ljmp
lret
sub
xchg
pusha
fsubrp
jne
xorb
out
sbb
dec
lret
sbb
push
sbb
cld
mov
pusha
ret
mov
in
ds
cmp
das
mov
or
test
push
inc
push
scas
dec
pop
cmpsb
jns
sub
popw
mov
scas
ret
into
xorb
rcll
fwait
or
es
iret
imul
jmp
mov
xlat
add
mov
push
gs
jbe
cmpsb
jg
mov
push
lods
push
and
add
lret
dec
dec
aaa
out
pop
in
insl
xor
mov
insl
movsb
call
cld
inc
data16
mov
adc
int3
mov
call
inc
loop
dec
fimuls
xor
mov
das
shll
mov
sar
ljmp
stc
xchg
inc
fstpl
fadd
pop
fwait
mov
and
movsl
jo
add
mov
xchg
cmpsl
fnstcw
inc
xchg
fstps
ret
js
popf
and
sbb
cmp
mov
cmpb
into
lods
add
aad
pop
push
or
and
cli
push
bound
int3
and
test
mov
jmp
lret
es
xchg
inc
jns
test
sub
jle
ds
lods
mov
test
fldl
mov
and
mov
js
cli
repnz
nop
enter
popf
sbb
int
inc
mov
sbb
loop
push
out
lock
fistpl
rolb
pusha
insl
cmp
mov
stos
outsl
call
xor
xor
jmp
loop
sbb
sbb
or
sub
clc
insl
or
mov
push
jge
mov
jecxz
mov
sub
aam
push
sbb
mov
add
leave
cmp
scas
insb
inc
orb
and
xor
cmc
movsb
in
outsl
dec
adc
push
int
outsb
out
sub
sbb
imul
bound
loop
lds
in
push
sarb
xchg
hlt
push
mov
lea
and
jle
movswl
hlt
cmp
mov
test
repz
cmc
xchg
sub
test
outsl
add
jo
xor
inc
loop
fs
jg
mov
outsl
frstpm(287
sub
cli
in
sub
roll
inc
imul
je
test
mov
jg
cmp
xchg
push
ss
fdivrl
sbb
cmpsl
in
add
cmp
aad
push
rolb
xchg
je,pn
mov
and
fisubs
lea
fcmovbe
bound
fnstcw
gs
lret
mov
sub
cmp
or
mov
ds
cmp
out
iret
into
pop
lods
adc
mov
push
or
sub
xchg
ja
cmpl
das
sahf
rorl
cmp
test
sub
xchg
xor
lds
pop
adc
in
imul
push
push
pop
inc
sbb
push
int3
pop
dec
in
jbe
add
test
cmp
andl
clc
jbe
xchg
fcmovnb
lock
cmp
xchg
jns
orl
aaa
std
dec
rcrl
xchg
mov
lret
fadd
lea
or
xchg
test
shl
jp
jbe
and
push
aam
enter
push
pop
repnz
push
lcall
mov
popa
fs
and
cmc
ljmp
adc
cltd
xor
rorl
adc
fucomi
and
mov
dec
inc
add
lret
mov
imul
xor
jne
push
push
push
movups
jmp
repz
pop
ror
fsub
lods
xor
in
dec
frstor
or
mov
imul
sub
jbe
cmp
repnz
jmp
xor
mov
inc
bound
pop
fisubrs
and
mov
jp
dec
fstps
mov
mov
leave
dec
scas
in
or
adc
in
imul
sub
repnz
sbb
cmc
push
dec
pop
jne
jge
mov
sub
mov
or
int3
in
mov
xor
inc
cmp
jnp
jns
dec
add
add
xchg
js
inc
adc
in
fmull
cltd
js
inc
dec
mov
leave
andl
insl
adc
xor
lret
pop
jb
sub
fiaddl
and
repnz
xchg
cltd
pop
cwtd
xchg
fnsave
bswap
jmp
dec
shll
cmpsl
push
jg
push
mov
mov
addr16
popa
lahf
lds
scas
sbb
mov
lcall
push
add
pop
sub
cmovae
mov
cmc
movhps
inc
pop
mov
fisttps
add
push
in
xadd
icebp
rcr
nop
fdiv
push
shl
popa
ljmp
jp
stos
jg
push
adc
cli
mov
imul
mov
in
jae
mov
sbb
int
and
outsl
and
inc
imul
shl
pop
imul
mov
and
lahf
mov
loop
dec
outsb
and
aad
mov
and
jb
add
adc
in
push
mov
jmp
xchg
lcall
push
movhps
fs
cltd
je
loope
pop
jo
sbbl
pop
pusha
leave
sbb
push
cmpsl
mov
and
fstpt
cmp
jmp
xor
inc
mov
push
stc
xor
repnz
xchg
xor
pop
jmp
xor
push
outsb
in
inc
cmp
add
loop
loopne
rol
pushf
sub
dec
xor
gs
movsb
or
mov
sbb
cmp
push
popf
jne
in
repnz
xchg
jle
pop
push
fmul
iret
xchg
dec
test
nop
mov
xor
mov
imul
mov
decl
in
jb
and
pop
sub
repz
outsb
popa
lret
mov
cmp
rcrb
sub
arpl
xchg
jbe
cmp
repz
push
sti
test
std
sbb
pop
rorb
jae
or
jge
and
jae
shlb
mov
sbb
mov
inc
dec
sub
andb
rcr
cmp
leave
addr16
testb
mov
xor
fcmove
xor
sbb
jg
xlat
mov
std
jo
std
jge
popa
xchg
ljmp
or
lds
scas
mov
dec
lret
out
xor
dec
adc
mov
shl
push
dec
or
push
xor
clc
xor
out
xchg
and
add
xchg
sub
and
ljmp
aam
sbbl
jno
mov
repz
imulb
mov
push
test
icebp
jle
push
out
pushf
stc
mov
sub
pop
test
rcr
add
cld
dec
dec
jne
mov
lds
std
into
pushf
shrl
lret
cs
aam
fldcw
loop
cld
adc
inc
dec
popa
fwait
mov
mov
push
push
mov
sub
inc
cmpsb
lret
das
pop
stos
push
js
fwait
or
cmp
xchg
test
rcrl
mov
sub
fcmove
ss
jno
xchg
jmp
or
push
addl
imul
nop
mov
xor
hlt
inc
inc
fdivrs
adc
jne
adc
xor
lcall
test
xchg
mov
dec
mov
push
adc
iret
test
xor
dec
jecxz
subl
add
outsl
fidivrl
test
fwait
subb
movsb
push
mov
lds
in
pop
xor
shlb
ljmp
xchg
out
inc
hlt
inc
addl
xchg
aad
loope
xchg
fsubrs
in
sub
leave
mov
mov
mov
pop
idivl
stos
jnp
scas
sbb
in
loopne
xchg
cmp
test
dec
xchg
pop
test
push
or
enter
imul
mov
popa
bound
mov
lahf
into
ds
pop
cmc
ds
mov
xchg
push
jg
fmuls
inc
aaa
xchg
aam
test
jb
or
dec
xchg
sub
mov
test
sub
bnd
int
in
mov
push
pushf
cmp
fmuls
xor
xchg
and
pop
mov
mov
add
add
mov
aas
mov
out
stos
mov
cmp
jne
rcr
out
xchg
nop
mov
das
pop
push
sub
sub
sub
jne
dec
inc
sbb
and
shrl
nop
ss
sbb
mov
and
add
sub
push
and
movlps
xor
pop
push
xchg
aaa
out
enter
ret
sub
testl
add
imul
in
push
jb
push
bound
jp
lret
sbb
insl
lds
and
xchg
inc
cmp
lret
jo
push
ds
dec
dec
pop
jle
shlb
out
mov
gs
iret
jae
repnz
mov
int
andl
addl
sub
sbbl
dec
sub
and
sbb
inc
push
fbld
data16
js
rolb
cld
adcl
outsb
jbe
adc
stos
rclb
nop
stc
mov
or
movsl
fisubrl
repz
add
test
fists
mov
je
leave
mov
insb
andb
aas
inc
fs
add
push
aam
or
js
or
dec
cvtpi2ps
clc
sbb
sbb
into
decl
cwtl
push
push
sbb
push
xchg
mov
jge
jp
mov
or
inc
scas
sbb
and
adc
inc
push
test
test
adc
inc
rcrb
dec
stc
sbb
lds
sub
push
daa
xchg
sti
mov
shlb
fucomi
pop
mov
sbb
push
jo
stc
mov
sub
out
outsl
addr16
xor
shr
out
xchg
push
or
xor
pop
pop
in
sub
unpcklps
pushl
leave
aas
gs
daa
inc
lods
imulb
fdivs
fs
in
pop
adc
ljmp
push
shrl
adc
movsl
bound
in
xor
rcrl
loop
mov
fisttpll
dec
enter
testl
xchg
outsb
pusha
lret
dec
in
inc
insb
shl
fwait
jne
push
test
pop
out
inc
fs
fisubrs
repnz
mov
addr16
jmp
cmc
in
cs
push
rorb
sarl
fmull
icebp
xchg
stos
adc
inc
xor
out
push
jnp
leave
adc
push
fisubs
loope
lret
mov
aad
daa
cmpsl
jns
push
mov
mov
jg
dec
insl
pop
push
cmp
stos
fadd
hlt
sub
repnz
movl
pop
inc
pop
scas
inc
jb
adc
push
repnz
out
xchg
hlt
lea
jns
xor
daa
cmp
sbb
xchg
jg
mov
cmp
adc
pop
pop
cmp
arpl
aas
rcrb
or
mov
mov
dec
or
pop
cmp
mov
test
int
mov
sti
jnp
or
subb
je
jae
dec
jbe,pn
stos
push
mov
std
dec
lret
dec
push
jl
arpl
pushf
data16
fisttpl
sahf
int
adc
enter
push
mov
ret
jle
mov
or
jmp
sub
insb
lods
daa
scas
lret
sbb
pop
or
out
add
inc
mov
ljmp
stos
mov
mov
xchg
or
out
or
push
mov
loope
out
aaa
sbb
mov
lods
adc
notl
jp
enter
cmp
jge
adc
aaa
mov
jns
and
das
inc
inc
pop
mov
lcall
xor
cmpsb
lods
and
out
mov
call
mov
xchg
je
pushf
mov
stc
leave
xchg
sbbl
into
insl
inc
push
xor
push
inc
add
dec
insl
lret
insl
int3
jae
rcrb
pop
repz
pop
loopne
xlat
mov
pop
loop
cmp
inc
mov
adc
xor
lock
addr16
in
test
dec
jmp
mov
sbb
fwait
test
mov
dec
dec
nop
sbb
sub
rclb
dec
jmp
dec
hlt
push
jp
scas
dec
mov
lods
cli
int
cmp
jmp
mov
push
test
jmp
mov
pop
aad
inc
aam
test
push
shlb
push
pushf
xor
scas
and
cwtl
and
or
jae
xor
mov
sbb
mov
adc
mov
dec
and
out
shlb
mov
inc
pop
xor
popf
adc
inc
inc
jo
repz
test
pushf
push
addr16
mov
adc
cli
rcr
or
adc
stos
rcrb
aaa
inc
mov
ret
add
cmp
and
jle
mov
push
lods
mov
imul
lods
jl
lret
inc
cld
and
jle
mov
test
shr
ret
mov
and
ret
mov
icebp
insb
fsubrp
sub
test
lret
fs
test
and
cmc
xchg
ds
xor
jl
stc
mov
das
add
sarb
sub
jecxz
cmp
lock
sarb
xor
mov
in
aas
lret
or
das
fistpll
or
in
mov
mov
es
add
imul
cmp
xchg
in
aad
jle
fmuls
fs
mov
and
mov
leave
mov
mov
add
aas
mov
loope
out
mov
add
lock
es
mov
jnp
push
fadds
pop
lods
mov
das
push
inc
addl
jae
pop
pusha
popa
inc
cmpsb
jbe
jns
mov
dec
sarl
ds
jl
fistpll
das
js
inc
cmp
adc
inc
ret
sarl
jae
mov
or
sahf
mov
pop
and
rorb
jne
pop
mov
jnp
in
sahf
mov
dec
loope
mov
mov
rclb
pusha
xor
push
and
fisttpll
loop
fistl
subb
inc
scas
adc
pop
sub
inc
and
pop
pop
nop
repnz
jp
xor
hlt
ds
jne
xor
sub
adc
sarl
mov
movsl
test
cmp
mov
sub
push
inc
ret
idivl
loop
pop
xchg
fcomip
addr16
in
inc
and
fisubl
fs
cmp
imul
push
js
pop
jle
vmovdqu
js
imul
push
pop
pop
lea
adc
aam
mov
xor
add
jmp
adc
sub
fiadds
lock
dec
lea
mov
mov
mov
out
pop
loop
test
loope
xchg
adc
inc
lds
aaa
insl
enter
cmc
mov
arpl
sbb
dec
dec
xchg
inc
repnz
leave
xor
fdivrl
cmp
aaa
into
cmp
in
pusha
rcl
movb
jbe
xor
int3
hlt
lea
sbb
xor
jo
aam
xor
jne
xchg
data16
inc
test
mov
xchg
mov
dec
rol
data16
mov
fcomp
imul
mov
cmp
addb
mov
or
and
or
mov
pop
pop
sbb
inc
int
cmp
scas
fsubl
mov
add
in
or
subb
cltd
mov
and
ficomps
pop
push
push
mov
sbb
nop
test
dec
lods
xor
call
lds
xchg
and
arpl
std
inc
lods
ret
adc
pop
cmp
cmp
jno
or
leave
jbe
les
dec
outsb
call
xchg
cld
and
pop
jb
lock
scas
ret
pop
pusha
jbe
xchg
addr16
fnstenv
pop
stc
or
jno
add
cmp
dec
sbb
mov
stos
push
xchg
lret
jp
aam
cltd
and
pop
sbb
test
inc
mov
dec
fcoml
xchg
sbb
outsl
pop
lock
inc
pushf
xchg
sbb
sbb
push
push
pusha
xchg
imul
aaa
clc
jbe
pushf
add
xor
or
loope
nop
cwtl
cmp
movsb
adc
xlat
add
pop
fbld
push
test
mov
notb
mov
lahf
pop
xchg
pop
lods
sbb
mov
stos
xchg
xor
push
cs
dec
mov
push
mov
xor
andb
test
hlt
outsb
imul
in
fcompl
out
lds
aam
mov
pop
pop
ret
ss
adcb
xor
test
xchg
sbb
movsb
sbb
jg
notl
sub
xor
push
cmpsl
std
jge
sbb
jle
adc
or
pop
xor
mov
adc
and
mov
push
fisttpl
fistpll
iret
sbb
jno
jge
push
loop
xchg
mov
mov
jl
rcll
xlat
push
jg
jne
iret
adc
mov
imul
sub
cmp
movsl
loope
cwtl
loope
jmp
adc
out
js
fidivrl
mov
xchg
dec
mov
xor
and
cmp
aaa
fsubl
inc
inc
jo
cmpsb
push
cld
jmp
in
test
fdivrs
pushl
mov
adc
jbe
xchg
lock
inc
dec
pop
jns
lahf
add
aas
xor
stc
inc
mov
insl
insb
sbb
movb
rorb
call
push
pop
add
adc
fbstp
or
shrb
adc
subl
add
ja
mov
adc
out
cmp
loopne
cmpsb
adc
dec
pop
into
pusha
pop
insl
rclb
inc
xlat
scas
sarl
popf
fisttps
and
pop
xchg
sub
push
xor
adc
cmp
or
pushf
xor
jge
xchg
gs
push
add
push
xchg
scas
out
aam
lock
sbb
idivb
ret
jg
hlt
cmpsl
mov
lds
sbb
jnp
jb
or
dec
pushf
outsb
xchg
mov
enter
fdivr
xchg
and
outsb
in
mov
mov
cmp
mov
les
stc
jbe
cmp
fcoml
jns
or
loope
cmc
xchg
mov
sbb
pop
movsb
push
enter
mov
decb
movsb
lods
lahf
es
pushf
js
mov
lods
idivb
cmpsl
lret
rcrl
adc
movsl
movsl
xchg
or
dec
jae
rol
stos
out
xor
mov
jb
mov
loop
je
mov
mov
push
push
pop
jp
push
shrd
cmp
xchg
fwait
or
pusha
outsb
jbe
lods
js
outsl
mov
push
and
mov
std
fsubr
ficompl
mov
jle
sub
shl
push
jb
push
out
add
inc
loopne
push
pop
xor
mov
mov
out
jne
xor
mov
int
test
jo
pop
js
sub
push
mov
sbb
push
push
xor
cwtl
pop
and
cmp
lret
pop
add
mov
test
in
clc
jg
pop
imul
popf
sub
mov
into
jmp
push
mov
adc
xor
js
cld
cltd
scas
adc
hlt
mov
mov
mov
xchg
adc
bound
popa
insl
jp
outsb
aaa
xchg
jns
outsl
lds
or
gs
adc
dec
insl
xorb
sbb
cmp
cs
push
push
mov
cmp
adc
es
pop
xorl
enter
adc
clc
dec
jge
xlat
pop
add
shl
mov
filds
inc
fcom
imul
mov
in
call
nop
xor
mov
sbb
stc
das
push
lret
mov
jle
push
or
mov
add
mov
pop
xor
enter
nop
mov
mov
jge
loop
repz
and
aad
cs
sub
dec
cmpl
or
shrb
cs
push
das
fcmovnbe
imul
lea
and
loop
lds
lcall
adc
ljmp
scas
dec
sub
icebp
or
xor
mov
adc
pop
leave
movsl
dec
in
in
pop
js
iret
add
mov
ja
in
ds
push
sbb
imul
lds
mov
mov
scas
jb
andb
decb
xchg
out
pop
sbb
push
add
pop
mov
orl
cmp
jb
fcmovbe
push
lods
scas
lods
inc
loop
xchg
cmovs
jmp
addr16
iret
cmpsb
clc
xchg
test
sti
mov
repnz
mov
scas
mov
shrb
ficompl
cmp
or
imul
lahf
or
mov
stos
xchg
lods
xor
mov
sbb
push
xor
sbb
movsb
mov
lea
outsb
adc
mov
inc
lret
dec
repz
rorl
add
and
mov
fistpl
stc
mov
int3
out
jg
enter
push
jecxz
dec
pop
pop
sahf
cs
dec
ficoml
sub
js
aad
adc
xor
xor
mov
mov
cltd
push
add
cmp
sbb
adc
cmp
fmull
push
dec
daa
lcall
jg
fstpt
scas
push
lods
sbb
int
pop
out
jnp
add
popa
popa
lock
mov
dec
in
add
sti
jns
add
and
fistps
out
loope
jge
shl
xchg
pop
test
inc
push
in
jg
dec
inc
sarl
push
insb
popa
cmpsl
xchg
inc
shll
or
sub
data16
ljmp
loope
inc
insb
and
mov
rol
and
pop
int3
jne
imul
lods
or
std
inc
pop
fs
push
push
pop
push
lock
lock
xchg
repnz
dec
les
jl
add
cmp
xor
and
arpl
push
fwait
repz
dec
ret
lcall
jno
xchg
mov
jbe
dec
sbbb
xor
pop
and
call
adc
add
jge
and
ss
jae
call
int3
push
jmp
sub
jg
test
fisttpll
pop
cmp
sbb
and
push
aas
sbb
mov
mov
inc
mov
pop
fnstsw
sub
stc
das
pop
dec
andl
xchg
loope
in
lods
imul
add
cmpsl
fldcw
mov
xchg
cmp
jbe
cmp
mov
bound
xor
repnz
in
scas
mov
jmp
shrb
movsl
and
data16
clc
stc
mov
imul
fdivrs
aam
xchg
add
lcall
pop
cmpsb
dec
cmpl
mov
sbb
mov
test
cwtl
js
push
cmp
fistl
rcrl
loope
shr
xchg
push
or
xor
gs
mov
or
mov
sbb
icebp
add
out
testb
pop
jbe
mov
aaa
lret
lret
jecxz
and
fstps
lods
aaa
dec
pop
lods
xor
adc
out
xchg
outsb
cwtl
iret
adc
outsl
mov
xchg
jne
dec
out
insb
mov
xorl
mov
or
and
repnz
xorb
jg
sub
lret
ret
and
mov
mov
dec
mov
adc
movsl
cmp
or
mov
cmp
aam
cltd
pop
outsl
cmpsb
sbb
jl
das
inc
ljmp
xchg
hlt
std
jl
jecxz
ljmp
mov
mov
xchg
jle
outsb
push
mov
mov
test
add
sbb
pop
add
data16
mov
jp
mov
lret
in
mov
in
mov
xchg
rcr
pop
cmp
push
andb
shlb
sub
dec
movsb
movsl
pop
daa
xchg
lds
pop
mov
inc
cld
fsubs
sti
and
call
mov
inc
or
jle
mov
ss
xor
jecxz
inc
dec
xor
xor
inc
jge
inc
sub
test
fwait
int
js
inc
push
or
icebp
and
mov
push
push
or
mull
push
cmp
add
or
add
add
push
loope
xor
push
prefetcht1
gs
sbb
xor
movsb
add
mov
push
scas
lret
push
pop
xchg
push
rclb
stc
pop
mov
outsl
dec
insb
popf
divl
pop
sbb
jno
jge
mov
cmp
xor
cmpsl
cli
dec
out
insl
loop
adc
and
and
sahf
pop
ret
adc
push
sbb
out
add
shrb
push
popa
push
add
imul
xor
mov
jnp
filds
test
push
dec
in
test
in
repz
sahf
sub
jnp
lds
mov
lock
movsl
push
fwait
stos
insl
roll
and
cltd
cmp
pop
or
pop
ret
hlt
pop
js
int
lds
xchg
adc
sub
push
cli
mov
stc
pop
mov
lds
repz
fwait
stc
adc
iret
cli
repnz
movsl
mov
sbb
inc
inc
scas
pusha
pop
shrl
xorb
shl
mov
mov
jmp
or
xor
stc
push
or
ret
jl
testl
nop
inc
cmp
shrl
mov
mov
lods
jp
fnstcw
jb
mov
mov
cmp
mov
pop
cld
dec
enter
outsb
pop
aad
cmp
popa
ljmp
xchg
int3
bound
mov
rcrl
mov
jge
mov
pop
sub
mov
loopne
stos
in
push
sbb
or
scas
sub
lock
or
in
sub
je
cwtl
in
mulb
mov
jg
dec
mov
push
int
add
popf
mov
cmp
test
lret
fisttpl
or
aad
inc
in
push
scas
dec
xor
or
cmp
sahf
fistl
adc
fdivrs
repz
mov
test
xchg
mov
sub
roll
and
add
jecxz
fisubrl
orl
lods
inc
inc
mov
mov
xor
xor
stos
loope
mov
pop
xorl
adc
out
xchg
inc
sub
dec
dec
cmpsl
out
fmull
xor
mov
adc
into
jo
mov
pop
cltd
enter
pop
lcall
mov
pop
test
sbb
aad
xchg
dec
mov
xchg
and
and
fldcw
cvtps2pd
aad
push
sarl
sub
in
sarl
inc
test
cmpsl
pop
mov
pop
push
pop
push
jb
cmp
ljmp
xor
mov
movsb
repz
sbb
xchg
sbb
int
scas
sub
daa
mov
mov
push
fbld
push
jb
cli
push
jb
push
test
movsb
dec
fnsave
mov
push
dec
xchg
popa
mov
sub
fimuls
xorb
jp
adc
dec
push
jl
jle
jae
ss
cmp
mov
shlb
jo
pop
cmp
push
rcrl
dec
push
cld
xor
daa
in
inc
cmp
mov
mov
pop
and
popa
or
out
inc
test
adc
lahf
neg
roll
mov
cmp
xor
imul
pop
outsb
ljmp
mov
inc
rcl
dec
hlt
xor
pop
roll
outsb
sub
rcll
stos
sub
push
ds
ret
mov
cwtl
pop
lock
push
xchg
mov
int3
dec
pop
scas
or
cwtl
arpl
fldenv
fistpll
add
pop
imul
pop
insb
mov
and
popf
add
sahf
dec
rcr
loop
mov
aas
jl
cmp
cs
or
adc
sub
int3
and
dec
ljmp
fiaddl
sub
insb
sbb
push
orb
xor
or
int3
pop
xor
ret
rclb
fucomp
ljmp
inc
imul
aad
aaa
mov
rcll
cmp
and
pop
es
push
jo
mov
xor
cli
mov
jl
cmpsl
jmp
imul
mov
xor
xor
xor
repz
sub
sub
mov
jge
add
fiaddl
stos
jae
in
push
cmp
mov
pop
mov
xchg
add
cmc
push
lds
push
push
ret
push
push
sub
dec
subl
inc
movl
sbb
mov
ffree
in
fdivrl
js
out
negl
xor
mov
in
ja
push
push
call
jp
jle
vshufps
and
fsub
lea
push
test
adc
scas
and
lea
mov
out
sbb
into
jp
ficoml
ljmp
mov
lahf
insl
lret
bound
cmp
insb
pushf
test
mov
lock
push
sti
xchg
out
out
push
sub
nop
sub
sub
cmp
mov
enter
in
push
scas
push
cmp
push
cmp
push
aaa
das
push
xlat
add
test
cmpsb
loope
sti
mov
jae
push
push
pusha
sub
fistl
out
pop
movsb
sub
xchg
push
loopne
mov
push
pusha
out
movl
pop
into
pop
jo
sbb
push
pop
sub
out
in
rorb
mov
inc
lods
jge
mov
pop
mov
mov
aam
mov
aas
push
push
shrl
insl
dec
cld
mov
add
pop
jnp
cltd
cmp
dec
rcr
mov
pop
loop
mov
jno
and
cmp
xchg
pop
cltd
loope
adc
xchg
std
sbb
mov
scas
xchg
das
movsl
pavgw
and
dec
cmc
push
daa
pop
in
mov
jmp
std
push
outsb
cltd
les
cld
inc
dec
adc
xor
cld
adcl
into
or
cmc
pop
mov
mov
outsl
mov
mov
dec
leave
push
add
or
mov
push
cmp
fistps
stos
fbstp
shll
mov
inc
mov
out
arpl
dec
push
add
jl
imul
jnp,pn
bound
hlt
cmp
popf
sbb
into
sbb
jl
cmp
packssdw
popf
test
iret
into
out
shrb
je
sub
adc
addr16
push
sar
dec
enter
push
inc
and
jns
stc
sub
repz
test
cmp
cmp
dec
jns
and
int
js
mov
outsl
int3
testl
clc
mov
aad
cwtl
push
loopne
jbe
inc
ss
sti
sub
dec
mov
adc
sub
sub
push
lds
push
cmp
ds
xchg
out
mov
sub
sub
pop
fstp
cli
test
cmp
mov
push
outsl
ljmp
aaa
lds
sbb
pop
negl
mov
sbb
mov
in
ds
push
aaa
divb
andb
inc
fcmovnb
xorl
repnz
mov
mov
sbb
pusha
repz
push
out
pop
mov
ret
and
and
loope
nop
mov
xchg
lcall
xbegin
mov
push
add
lods
ss
mov
jnp
or
subb
and
and
inc
stc
fisubrs
cmp
fs
mov
push
leave
pop
push
aaa
in
movsb
push
inc
lret
shlb
xchg
sahf
out
popa
incl
jle
pop
in
lahf
lds
push
mov
xchg
pop
pop
jge
mul
fistl
stc
cld
popa
sahf
pop
jbe
test
pop
ljmp
push
or
incl
cltd
aam
scas
addr16
fadds
out
orb
xchg
popl
test
jb
adc
add
test
add
xchg
xchg
and
adc
insl
xor
mov
pop
jl
nop
lds
xor
add
ja
mov
inc
fidivs
sbb
mov
pop
outsb
in
shlb
lock
orb
and
leave
mov
cmp
mov
jne
inc
cli
test
loop
mov
cmp
jnp
sub
push
fisttpl
out
addr16
push
jle
lret
cmpsl
ret
adc
mov
and
aam
insb
and
clc
or
stos
stc
repz
push
in
out
jne
jae
push
rol
sub
fimuls
jge
mov
arpl
mov
out
xor
jb
jl
dec
fisttps
push
inc
ror
xchg
cld
jmp
push
pop
outsb
adc
mov
or
sbb
xor
push
mov
aaa
movsl
push
andl
mov
jb
fwait
mov
dec
lahf
add
in
ficomps
outsb
adc
xchg
jmp
insl
int
in
xchg
and
ljmp
mov
or
dec
adc
jecxz
ds
mov
mov
xchg
arpl
es
mov
loop
add
imul
in
adc
jge
dec
testb
push
dec
outsb
jae
je
push
fstpt
push
outsb
clc
arpl
dec
mov
arpl
inc
iret
push
mov
mov
scas
pop
pusha
xchg
or
dec
jecxz
pop
aas
cmpsl
sub
loopne
daa
inc
ss
stc
jnp
fwait
cli
mov
int
push
mov
and
cltd
mov
rcr
js
scas
inc
orb
cmpsb
test
and
fs
fstpl
imul
out
push
mov
rclb
aad
ret
mov
add
mov
loopne
cmc
std
inc
shlb
sti
xchg
jb
adc
or
adc
xor
jnp
push
sub
jno
cwtl
cltd
test
inc
fisubs
push
sbb
outsw
dec
out
leave
mov
scas
and
fimuls
stc
xor
leave
out
pushl
ret
lcall
in
call
lods
push
dec
fcoms
cmp
inc
adc
in
out
cmpsl
dec
rclb
sub
mov
pop
sbb
data16
cmp
jp
jo
dec
and
lock
rol
inc
pop
dec
cli
jns
popa
sub
sub
out
popa
jns
or
fiadds
xchg
std
inc
xor
js
les
cwtl
cmp
sbb
inc
mov
cld
or
adc
ds
mov
jbe
jp
iret
cltd
add
into
daa
inc
ret
dec
mov
test
xor
dec
pop
clc
fistpll
lods
rcr
dec
adc
sbb
cmp
dec
inc
jecxz
fwait
xor
andl
mov
sbb
lcall
push
mov
pop
out
ret
dec
inc
xorb
or
insb
shrb
inc
fisttps
aas
jae
mov
mov
out
sbb
dec
popf
push
jecxz
ds
and
icebp
xchg
and
in
jle
xchg
aaa
mov
test
lret
insb
addl
outsl
mov
scas
mov
int3
data16
sub
aad
jp
into
hlt
mov
insb
daa
fstps
sbb
cld
clc
test
push
call
adc
scas
cmp
mov
adc
mov
and
or
ja
push
xlat
sbb
repz
adc
movsl
clc
fdivr
cwtl
mov
or
pop
int3
out
mov
xchg
outsl
loopne
insb
xchg
mov
outsl
pop
jbe
cmpsl
jmp
cmp
test
fiaddl
xlat
insb
xchg
xchg
cmp
scas
aam
in
je
inc
inc
aaa
push
add
lahf
pop
mov
decl
cli
sbb
pop
inc
xchg
jne
call
mov
cld
push
xor
test
dec
dec
push
jae
in
insl
cs
mov
xor
cli
lock
push
mov
lods
pop
test
mov
shll
add
lahf
dec
nop
xlat
adc
xor
inc
aaa
or
inc
mov
paddw
dec
ljmp
cmp
ja
lahf
adcl
inc
cld
sbb
incb
scas
inc
ja
rorl
mov
dec
out
jbe
xchg
and
sub
mov
pop
and
movsl
daa
sbb
les
cwtl
adc
mov
out
or
outsl
in
jne
jl
imul
or
or
fwait
in
lds
add
pop
mov
mov
xlat
fidivrs
mov
fldl
lahf
inc
push
dec
rorl
adc
inc
dec
mov
lcall
out
jmp
adc
sbbl
lods
repnz
add
push
shlb
pop
dec
ret
dec
cmp
les
mov
pop
mov
jnp
adc
xor
cmp
xor
jns
ret
leave
cmpsb
jae
sti
lods
stos
test
je
lret
daa
mov
sub
sub
push
inc
jne
mov
cltd
out
push
imul
adc
adc
lahf
lock
fisubs
pushf
and
jmp
mov
out
call
cmp
popf
fsts
lock
fsts
nop
mov
in
out
test
fiaddl
xor
inc
incl
int3
rep
pop
mov
xchg
rcrl
inc
movsb
xlat
push
lahf
sbb
adc
xor
push
stos
pop
shrb
and
and
cltd
cmp
mov
mov
dec
add
lds
sahf
pop
stos
dec
ja
dec
das
xor
mov
or
ret
ja
pop
jg
or
out
incl
rorl
pop
mov
addr16
sub
add
mov
jo
xlat
cld
loope
cmpsb
aad
mov
test
popf
cli
sub
dec
out
sbb
imul
les
and
inc
out
pop
dec
cltd
pop
mov
adc
xor
shl
pop
cmc
xchg
rol
movsl
lcall
sarb
xor
cmp
jge
jecxz
out
mov
jp
pusha
pop
dec
pop
sbbl
jge
rorl
lock
inc
pextrw
cmpsb
xchg
push
cmp
int
dec
adc
mov
cmpsb
fnstsw
stos
push
jae
cld
mov
les
mov
fs
adc
push
push
add
dec
addr16
outsb
sbb
mov
xor
andb
out
call
test
es
cmp
xor
shrl
dec
inc
mov
xchg
pop
leave
mov
ja
cmpsb
sbb
or
test
sti
das
xchg
inc
notb
outsb
and
jmp
add
jne
xor
xor
jne
movsb
repnz
xchg
rorb
sub
pop
mov
and
pop
xor
pop
lds
mov
fstpt
stos
xchg
stos
sub
aaa
lds
in
enter
cmp
in
imul
lods
ffree
push
sbb
rclb
test
xchg
pop
push
cmp
xchg
mov
pop
xor
mov
enter
fcoms
cmc
cltd
or
dec
xor
scas
push
outsb
aad
jnp
gs
pop
dec
add
and
cmp
jnp
sti
cmp
push
adc
mov
fimull
orb
out
stc
outsl
cld
aaa
aaa
inc
lods
aad
xchg
mov
mov
xor
and
jl
fucom
or
fcoml
add
mov
in
push
ret
push
testb
pusha
jne
insl
mov
ret
or
sbb
les
and
and
cwtl
dec
mov
pop
scas
addb
sti
xchg
in
add
roll
mov
mov
cli
or
push
inc
inc
sti
mov
lcall
out
xchg
cld
mov
and
in
and
iret
xor
cmp
dec
xorl
mov
aaa
sti
or
cmp
mull
lods
jbe
lds
sub
leave
jl
pop
roll
ds
jne
xchg
movl
push
sbb
jnp
pushf
stos
push
je
je
icebp
pusha
sbb
cmpb
rorl
fsubrl
mov
cltd
dec
jb
push
aam
out
lret
fcomps
push
mov
xchg
cmpsl
fldenv
xor
xor
out
sub
cmp
xchg
dec
lcall
aas
leave
fiadds
cld
insl
cmpb
dec
mov
and
xor
test
dec
push
add
fcmovne
jmp
movsb
mov
lods
jge
repz
add
in
add
mulb
mov
pop
lret
cld
pushf
lock
arpl
add
dec
inc
push
mov
scas
push
or
arpl
jno
fidivrl
or
lcall
mov
imul
mov
sbb
mov
push
loopne
incb
leave
fs
xchg
out
ja
scas
int
or
das
sub
pop
cpuid
and
popl
fcmovu
mov
in
arpl
das
call
rcl
clc
mov
add
mov
hlt
jge
mov
ljmp
loope
mov
stc
lds
push
fistl
inc
and
mov
mov
hlt
pop
push
xchg
mov
je
inc
sbb
shufps
or
sbb
call
dec
pop
adc
test
lret
fsubrl
sbb
mov
aam
ret
icebp
lock
mov
sub
gs
sahf
das
xor
push
pop
mov
push
adc
jmp
jae
test
and
push
or
mov
and
shl
or
inc
push
outsl
jbe
mov
cmp
mov
pop
data16
add
or
fcmovnbe
lret
rcrb
push
icebp
xchg
out
cwtl
dec
mov
testb
mov
ljmp
push
xchg
push
xchg
inc
das
mov
jnp
and
add
sbb
pop
jge
push
popa
test
not
fstpt
jl
pop
lods
push
adc
adc
nop
fcompl
lret
fsubr
adc
iret
adc
cmp
lds
fdivs
pop
rcrl
mov
sti
add
mov
mov
sbbl
jmp
stos
ret
jb
fwait
xchg
xchg
bound
rorb
fcmovnb
mov
in
sbb
mov
inc
cwtl
lock
jmp
and
xor
outsl
mov
aaa
jns
repnz
dec
jge
sbb
scas
inc
push
xchg
test
mov
push
js
cmp
or
popf
inc
or
ljmp
lcall
push
fisubs
out
cmpps
mov
ret
sub
loop
js
popf
pop
int3
scas
pop
push
fwait
xchg
mov
mov
mov
xor
leave
pop
fnsave
gs
in
hlt
repnz
inc
fidivs
aam
sbb
mov
in
lret
add
mov
out
ss
outsb
iret
or
and
lret
or
push
cmp
aad
stos
data16
jno
xchg
out
sbb
mov
push
sub
loop
fdiv
int3
popa
aad
mov
hlt
aad
jnp
and
dec
fimull
and
push
out
testl
jbe
mov
ja
jmp
cmp
push
adc
mov
aad
popa
out
enter
arpl
insb
lods
ds
ret
notl
out
rcl
push
pop
jae
rorl
inc
adcb
out
xchg
push
repnz
cmp
push
mov
ficomps
push
pusha
icebp
jne
jnp
sub
shlb
mov
jp
scas
mov
pop
sbbl
lds
sti
fs
pop
test
subb
mov
test
or
hlt
xchg
mov
cs
stc
xor
jmp
jnp
stos
stos
push
push
repnz
mov
imul
adc
ja
and
jecxz
faddl
out
xor
mov
pusha
inc
jo
test
bswap
lahf
jge
cwtl
inc
pop
and
lods
repnz
sub
mov
and
pushf
cmp
shr
enter
imul
push
mov
dec
daa
cmpsb
sbb
push
in
xor
xor
or
andb
xchg
shrb
lock
sbb
and
mull
bound
lods
xchg
jns
mov
mov
pushf
imul
fstpt
into
inc
gs
push
out
xchg
jbe
add
mov
fstpl
fs
push
movsl
into
test
xchg
xor
mov
xor
insb
and
insl
dec
cmp
aam
jp
adc
inc
pop
bound
das
js
out
jecxz
xchg
jnp
mov
addb
jecxz
mov
cmp
mov
mov
pop
xchg
mov
fistl
shrb
pop
pop
sub
in
fcoml
push
popa
jmp
and
mov
pushf
adc
mov
lea
leave
fwait
mov
push
in
insb
test
push
push
js
push
pop
cwtl
test
mov
clc
scas
shl
xlat
jno
andb
mov
roll
aas
orl
aas
or
bound
inc
push
mov
fwait
mov
xchg
and
mov
outsl
aad
sub
pop
bound
cmp
ret
dec
repnz
scas
lods
dec
nop
xlat
mov
inc
out
outsl
inc
and
push
outsb
xchg
mov
std
jmp
mov
xor
adc
and
gs
inc
fbstp
aaa
and
jmp
popf
cli
popf
movsl
movsl
sub
dec
add
adc
data16
je
fcomp
push
ljmp
aas
subb
sub
sbb
jbe
inc
fldcw
jl
lret
shr
lret
dec
rol
cmc
adc
imul
inc
gs
add
imul
out
mov
jns
je
xor
les
in
cmpsl
clc
push
dec
les
or
cmp
mov
jp
lods
les
mov
add
pusha
mov
pop
adc
outsl
push
and
sbb
add
sahf
adc
cwtl
icebp
cmp
mov
mov
int
mov
dec
jns,pn
ja
push
mov
orl
sarb
mov
jns
jp
in
mov
test
inc
jle
lahf
or
and
push
adc
xchg
jns
rcr
mov
mov
pop
or
ror
data16
lcall
ucomiss
ljmp
jns
push
mov
pushf
xchg
aas
nop
pminub
cli
ja
rcl
mov
in
sub
cli
push
sub
cs
adc
icebp
popf
out
pop
xor
adc
ss
loop
cwtl
sahf
xchg
mov
sti
in
jnp
xor
dec
sbb
sub
js
adc
movsl
loope
add
pop
dec
mov
cld
xchg
and
cmpl
int
movsb
pop
gs
in
mov
xor
cmp
push
jl
and
cmp
cltd
jnp
out
push
les
sbb
xchg
pop
add
xchg
mov
add
pop
cmp
fsub
cmpl
push
mov
sub
or
out
add
les
push
les
loopne
mov
hlt
mov
inc
jle
inc
mov
jle
and
std
adc
mov
test
subl
push
cwtl
outsl
movsb
imul
mov
xchg
in
insl
popa
sbb
adc
jne
rorl
cmpsb
scas
sub
adc
scas
jne
int3
jge
gs
pop
out
ficomps
xor
push
hlt
ror
sti
popa
mov
hlt
inc
and
shll
lcall
cmpsb
pop
push
jns
bound
aaa
xor
outsb
adc
xor
or
mov
insl
push
mov
mov
cmpsb
add
loope
dec
mov
cmpsl
in
cmp
in
cmp
arpl
or
int3
jbe
add
mov
getsec
inc
mov
js
push
jmp
cmp
sub
adc
arpl
mov
sub
cmp
jg
jns
int3
fstps
in
sbb
loop
jno
push
adc
inc
add
mov
test
sub
enter
adc
sub
dec
les
es
shl
or
mov
cmp
movsb
dec
pop
xorb
ret
sbb
out
pop
hlt
mov
movb
sahf
cmc
sub
mov
and
adc
adc
pop
push
and
repnz
sbb
push
jmp
adc
add
sub
or
insl
dec
les
push
sub
lahf
in
int
pop
js
push
xor
scas
lock
mov
movsb
sub
int3
rorl
ffree
lret
dec
sbb
push
sahf
mov
jno
cwtl
mov
inc
test
test
cmp
stc
fucom
loop
push
adc
fadd
pop
xchg
dec
pop
jle
adc
jg
mov
cmpsl
inc
dec
outsl
or
cmpsl
cmp
fcomps
out
dec
mov
out
rcrb
xchg
lret
mull
mov
push
adc
stos
mov
hlt
mov
push
popa
cmp
notl
daa
sahf
shlb
stc
xchg
sti
hlt
ror
mov
test
mov
mov
idiv
xchg
addb
adc
inc
sbbb
mov
stos
fldl
mov
pop
fwait
xor
and
cmp
adcl
pusha
mov
ret
fwait
dec
adc
in
cs
jne
icebp
outsl
cli
mov
or
adc
out
frndint
bound
nop
fldcw
mov
imul
mov
inc
cmp
jg,pt
enter
and
adc
cld
or
xor
mov
ja
jg
sub
dec
imul
pop
in
dec
aas
repz
fsub
push
ss
sub
lret
jl
jb
add
arpl
pop
std
fiaddl
mov
leave
mov
clc
push
stos
not
pop
ljmp
push
push
cmp
ja
fidivrs
push
loope
leave
loope
sbb
mov
sbb
imul
outsl
pop
or
sbb
cs
shll
adc
inc
inc
and
mov
add
xrelease
and
out
addr16
pop
adc
pop
push
jne
inc
xor
inc
std
pusha
mov
or
jmp
inc
mov
mov
xchg
pushf
mov
push
add
jmp
cmp
push
sbb
scas
adc
mov
dec
inc
mov
ret
fistps
mov
xchg
adc
ds
out
jbe
xchg
cmpsl
dec
test
shrb
shll
mov
nop
ds
and
test
push
mov
bound
mov
jo
call
loope
cmpsl
add
jns
xchg
aaa
mov
jo
sahf
lods
dec
iret
sub
lret
std
cs
test
insl
or
loope
repnz
xchg
sub
dec
or
aas
cltd
lods
cmp
lret
das
xlat
cli
lret
jle
loope
xchg
push
test
jb
adc
mov
dec
push
dec
fisttpll
push
dec
mov
in
sahf
push
ffreep
cltd
pusha
shlb
sub
adc
sub
xchg
and
cmpsl
test
dec
mov
mov
and
and
xchg
pop
xor
fisttpll
adc
xchg
add
jge
aad
dec
ja
in
and
push
jb
mov
xchg
dec
push
cltd
enter
mov
pop
push
cmp
pop
movsb
dec
push
jl
ret
jmp
dec
push
push
adc
cmpsl
bound
movlps
neg
shufps
sub
xchg
and
jle
aam
or
and
rolb
das
jne
inc
sbb
test
xor
movsl
rclb
xchg
and
jle
push
xchg
sub
mov
ret
cltd
dec
adc
adc
mov
imul
cltd
mov
pop
lret
jae
adcb
mov
jg
gs
mov
shufps
inc
repnz
out
push
fsubl
jl
jne
mov
lret
mov
fsubrl
ret
jecxz
mov
scas
mov
mov
add
push
pop
push
pop
pushf
aas
xchg
and
inc
ljmp
push
cmp
inc
cmp
iret
sub
push
sbb
iret
inc
push
inc
fcoml
outsl
lods
jle
jno
push
pushf
stos
push
clc
sarl
lcall
xor
jne
mov
mov
mov
popa
inc
jmp
push
fbstp
aam
xor
sbb
inc
or
fisttpll
inc
aad
arpl
sbb
ret
sbb
sub
or
mov
mov
into
xor
imul
repz
or
push
jae
mov
mov
inc
or
cmp
nop
jg
xor
jns
or
aaa
mov
insb
jae
fwait
test
clc
imul
nop
xchg
hlt
mov
loopne
xor
fxch
mov
or
in
xor
popa
out
int3
jbe
pop
adc
cmp
xchg
add
mov
lret
addr16
cmpsb
mov
xor
mov
repz
or
cmc
sub
stos
push
jge
rcr
xor
adc
jb
mov
adc
jbe
sbb
push
or
xor
or
add
loop
xor
push
jecxz
aam
pop
jo
jbe
pushf
ljmp
addr16
add
js
out
mov
in
in
in
loop
into
mov
lock
dec
fidivrl
je
testb
xchg
mov
out
std
hlt
hlt
imul
movsl
push
movsb
je
fdivrs
fnstsw
addb
pushf
jne
xchg
mov
adc
gs
inc
rolb
sbb
rorl
ret
add
lcall
pop
adc
in
movsl
and
dec
outsb
pop
loop
xor
cmp
add
nop
mov
push
dec
xchg
push
out
fwait
cmp
cli
sbb
test
and
push
mov
xor
aad
add
mov
add
xor
inc
icebp
jg
xchg
cmp
or
out
rcl
mov
cmp
out
or
insb
sub
lea
enter
jo
pop
nop/reserved
sub
mov
pop
pop
repnz
and
and
dec
xor
dec
cs
iret
mov
dec
loope
arpl
or
jo
mov
sahf
push
fs
xchg
pop
pushf
push
cmp
mov
adc
lods
cld
sbb
imul
orb
jns
jge
scas
lods
testb
int
mov
imul
rep
pop
test
jne
mov
push
mov
daa
inc
into
aam
pushf
pop
sahf
test
pop
xorl
lods
inc
sub
stc
push
stos
outsb
xchg
dec
sahf
jnp
test
lret
lret
inc
inc
into
add
or
mov
cld
mov
lock
dec
add
mov
jmp
inc
shlb
int
xlat
fidivs
mov
lahf
dec
ja
or
jns
dec
pop
inc
pop
xlat
jne
cwtl
mov
adc
mov
loope
loop
inc
lea
sub
jmp
pop
rcrb
mov
bswap
xchg
adc
loopne
arpl
or
xchg
or
fimull
push
outsb
das
aam
dec
repnz
mov
fists
dec
mov
ds
andb
fld
mov
pusha
es
cmp
shrl
iret
sbb
clc
lret
rorb
cmp
faddp
sbb
pop
repz
cmp
in
into
pop
and
xchg
mov
add
sahf
mov
xchg
and
sbb
pop
mov
rorl
xor
or
cltd
lret
inc
dec
scas
sbb
mov
xchg
adc
push
imul
daa
jnp
ja
mov
inc
outsl
lock
adc
jle
inc
jb
jnp
inc
cmp
es
js
jmp
mov
push
test
mov
pop
jo
jp
xchg
cmp
pusha
fwait
adc
fwait
and
out
leave
dec
jo
sti
jae
js
push
dec
or
jmp
jnp
mov
imul
cld
add
xor
test
mov
sub
fstps
jne
push
or
push
imul
and
xchg
outsb
mov
adc
testl
ret
cli
cltd
sbb
shl
push
and
and
jecxz
xchg
jo
inc
jo
and
stos
neg
pop
loopne
xchg
ror
add
mov
mov
rorl
fstpl
fnstsw
xchg
and
scas
cmp
push
stos
xor
jle
jg
ror
pop
adc
ret
pusha
push
xor
outsl
aad
scas
ret
outsb
pop
add
pusha
pop
jge
pop
pop
and
push
dec
xchg
jne
jecxz
or
adc
das
push
loopne
out
xor
or
mov
or
cmpsb
xor
or
rorl
cs
int3
out
and
cli
sbb
shlb
sbb
lahf
jo
push
std
aam
add
and
sbb
xchg
ss
lret
cwtl
test
jmp
or
mov
cmpsl
call
push
push
ds
mov
mov
int
popf
jle
pop
pusha
push
mov
mov
and
jge
hlt
pop
fldl
dec
addb
sbb
pop
sub
adc
stos
or
dec
mov
push
mov
dec
jne
fstps
dec
out
data16
or
scas
les
mov
adc
push
outsl
fcomps
cmp
sbb
cmpl
loope
mov
lds
xchg
loop
jle
insb
jne
enter
sarl
lcall
or
rcll
jge
loopne
xchg
fists
sub
add
loop
ljmp
popf
bound
jle
icebp
int3
cmpsl
xchg
and
sbb
push
enter
push
mov
cwtl
fbld
mov
lock
or
outsb
add
daa
into
xchg
scas
push
cmp
fwait
test
bound
mov
shll
fs
lea
cmp
loop
xchg
icebp
test
lahf
mov
pop
xchg
push
cmp
sbb
push
sbbb
lret
dec
xchg
fs
pop
xor
cmp
mov
std
mov
out
xor
sbb
sbb
popf
sub
scas
mov
stos
or
or
in
dec
add
movsl
mov
test
push
ds
push
pop
sub
sub
xor
divb
outsb
aam
gs
leave
dec
insl
adc
xchg
or
pushf
pop
mov
pop
test
imul
cmp
icebp
scas
add
and
cmp
addr16
mov
and
in
xchg
sub
jle
jae
inc
stc
repnz
sbb
fwait
dec
xorl
lods
mov
fs
or
fsubrl
movsl
stc
mov
in
xchg
or
ret
hlt
in
lods
fs
test
lods
aaa
sahf
mov
and
les
test
lret
nop
inc
sbb
das
cld
ret
outsb
mov
mov
in
lcall
xor
pop
shlb
sub
xchg
push
jnp
iret
jle
push
push
jecxz
cmp
jge
bound
test
cmp
jl
sbb
jae
ret
pop
jl
jp
movsl
lea
push
leave
andb
add
ret
push
and
pop
out
inc
lcall
pop
aad
ds
je,pn
push
fwait
pop
mov
or
in
cmp
jmp
pushw
aaa
mov
adc
jmp
mov
pop
testl
push
pop
mov
dec
push
add
popf
lahf
or
cmp
cld
mov
mov
dec
mov
or
xor
aaa
test
stos
loopne
mov
and
dec
mov
movsb
push
xor
sbb
mov
dec
xor
rcrl
xchg
sbbb
or
sbb
pop
call
enter
cwtl
push
adc
into
push
test
cmp
cmpsl
or
outsl
data16
aaa
aam
fstpt
testl
repnz
aaa
insl
negl
or
insl
pop
stc
mov
fdivr
or
es
inc
ds
lcall
shlb
sar
incl
or
mov
cmpsb
mov
push
inc
mov
and
pop
dec
mov
out
xorb
outsl
adc
mov
out
dec
push
and
frstor
inc
xor
out
mov
hlt
mov
add
pop
inc
rol
movsl
bound
std
adcl
mov
decb
mov
lahf
push
cmp
imul
aam
loope
push
mov
int3
cltd
sbb
xlat
xchg
sbb
notb
daa
in
cmp
push
std
arpl
and
push
enter
cmpb
popa
or
mov
inc
cmp
push
inc
add
int3
fistpll
and
xchg
leave
xchg
nop
vpunpckhdq
cmp
pop
jp
es
in
push
sbb
fimull
js
dec
xor
mov
repz
push
jne
in
inc
cmpl
mov
fnstsw
loopne
sbb
out
test
mov
xchg
lock
call
xor
sub
push
mov
push
imulb
sahf
icebp
push
inc
roll
mov
pop
xchg
mov
lods
and
sbb
and
pop
cmp
jecxz
xchg
mov
data16
jmp
mov
fstpt
das
mov
push
pop
popl
out
sbb
push
pop
inc
lods
inc
inc
mov
sbbb
jo
xchg
or
rclb
pop
clc
mov
dec
shrb
es
mov
dec
sub
clc
push
sbbb
xor
mov
mov
shlb
mov
add
jp
sbb
out
aam
mov
push
adc
scas
xor
test
pop
mov
in
sbb
jle
movsb
and
movsl
inc
sbb
lahf
sub
in
out
inc
push
xchg
adc
inc
icebp
lods
jge
jle
mov
in
xchg
shll
xchg
aam
mov
cmp
test
aaa
xchg
insl
test
mov
xor
inc
aas
out
out
dec
mov
lods
jle
mov
test
fdivrs
xor
movsb
dec
pop
sbb
arpl
mov
sahf
daa
or
jle
push
sbb
mov
push
mov
or
das
loope
lret
push
out
movsb
xchg
test
jnp
adc
test
add
adc
mov
xor
lds
inc
pop
imul
aaa
adc
js
std
mov
xchg
xlat
negl
sub
pop
or
add
push
dec
push
in
outsb
cmc
mov
sbb
call
mov
adc
cmp
jle
mov
pop
mov
fdivl
pop
xor
cmp
loop
or
push
jge
pop
shll
dec
ss
out
sahf
dec
jp
cmp
cmp
dec
test
dec
push
push
dec
xor
sbb
popf
xchg
flds
add
mov
mov
clc
pop
lret
pop
mov
lahf
insl
arpl
fs
repz
jle
scas
fcomip
lahf
scas
enter
decb
xor
adc
and
popf
pop
inc
clc
lcall
scas
scas
cltd
add
int
jge
xchg
movsl
inc
fiaddl
jl
mov
mov
add
mov
imul
rclb
add
mov
fimull
rorl
mov
jno
mov
test
add
js
mov
sahf
mov
pop
jmp
or
jno
adc
fxch
std
insl
mov
jns
jne
push
xor
and
mov
out
jae
cmp
movsl
inc
fisubl
divb
push
roll
or
jl
lea
std
pop
jl
mov
pop
dec
scas
sbb
cmpsl
pop
jmp
cli
push
call
inc
shlb
add
dec
cmc
mov
push
imul
icebp
loopne
jnp
lret
aas
xor
adc
or
stos
inc
icebp
ljmp
add
push
push
xchg
dec
adc
jp
ljmp
lods
lock
inc
pusha
adc
push
mov
testl
leave
cltd
aad
inc
mov
sahf
lret
incb
je
sbb
paddd
sar
cmpsl
cmp
test
rorl
ficomps
aam
mov
negl
xor
fdivs
adc
cmp
push
loope
and
inc
push
xchg
lret
inc
outsl
and
testl
push
xor
pop
sahf
out
sar
jae
inc
scas
clc
sbb
sub
testb
dec
insl
adc
fidivrl
data16
dec
cld
cmp
push
cmpl
pop
aam
mull
mov
or
mov
mov
xor
insb
pop
mov
aas
loope
push
push
fs
call
cmp
jmp
sbb
xchg
test
roll
mov
pusha
in
xchg
sbb
adc
into
loop
pop
push
outsl
add
pop
and
inc
cmpsl
jge
aaa
ljmp
push
dec
cmp
stc
es
fdivrp
pop
push
aad
mov
repnz
cmp
add
test
stos
lods
orl
popf
shll
leave
push
fsubr
sbb
jl
push
xchg
mov
push
das
fsub
subb
sbb
and
clc
add
faddp
xchg
and
inc
push
sub
je
sbb
adc
sub
pop
mov
negl
mov
test
or
jle
in
lahf
lret
mov
push
adc
lock
popf
push
xor
shlb
mov
jo
sbbb
xchg
repz
dec
int
and
test
movsl
shll
lret
call
pop
outsl
fildll
daa
repnz
pop
sub
cli
mov
andps
fs
adc
or
mov
lahf
test
lea
out
lahf
daa
aam
stc
cmpl
scas
mov
loope
call
movsl
les
mov
scas
sbb
insb
push
es
inc
movsb
cwtl
rclb
pop
push
insb
adc
lcall
add
adc
cmp
pop
fsubs
pop
jecxz
shlb
mov
ljmp
pop
cmc
dec
call
mov
jmp
imul
sub
xchg
mov
bound
nop
lock
jno
test
bound
decl
ljmp
icebp
lock
mov
test
pop
jae
mov
pop
mov
lods
pop
in
push
js
push
in
outsb
inc
xchg
sti
push
fmuls
iret
pop
adc
dec
inc
fdiv
out
mov
mov
repz
orl
bound
push
les
mov
xchg
dec
sub
js
xchg
out
sahf
andb
stc
sahf
jg
push
pop
fldt
fisubl
mov
aas
mov
dec
ja
pop
mov
xor
in
xor
mov
test
insb
es
out
test
lret
es
scas
mov
push
inc
jge
mov
sbb
adc
mov
mov
inc
dec
adc
xlat
cltd
and
lcall
mov
inc
sub
push
scas
test
mov
orb
add
shrb
loope
xor
popa
push
push
dec
add
add
loop
push
inc
loope
mov
sbb
or
repz
adc
sarl
jge
or
cltd
stos
popaw
mov
scas
pop
outsb
stc
int
in
xor
inc
sbb
arpl
fsubs
inc
xor
sahf
sub
push
rcll
xor
sti
test
push
in
stc
xchg
int
fnstcw
popf
and
and
mov
xchg
jg
imull
pusha
xor
or
jg
mov
mov
cli
mov
push
mov
imul
push
add
xchg
or
pusha
orl
or
fistps
adc
sbb
mov
clc
sub
lcall
or
inc
shlb
test
sub
stos
notb
xorl
pop
jns
leave
je
jns
mov
lea
xor
mov
iret
push
mov
sub
and
fsubrs
loope
lcall
and
mov
sbb
push
cmp
lahf
sub
add
sbb
inc
daa
lahf
sub
mov
push
xor
jbe
mov
movsb
mov
in
in
pop
lock
add
push
lea
ret
jno
xchg
js
jo
push
cmpsl
xlat
sbb
sbb
inc
pop
pusha
mov
inc
mov
cmp
dec
out
cmp
cld
lds
mov
movsb
mov
dec
jle
bnd
or
test
xchg
sahf
stos
loope
leave
pop
mov
inc
pop
ret
data16
lret
outsb
test
dec
pop
pop
add
lods
push
imul
sbb
pop
cld
adc
lds
cmpsw
or
add
adc
xor
leave
enter
xorb
repnz
test
adcb
mov
loop
push
inc
dec
dec
into
cmp
stos
sub
clc
ror
lock
jge
lea
xchg
sbb
fwait
and
push
and
ficoml
repz
and
add
pop
aam
pusha
sahf
jnp
lret
mov
or
inc
int3
xchg
jnp
je
push
in
call
jle
sahf
add
jo
pop
mov
mov
push
fstpl
lahf
mov
adc
pop
cmp
mov
mov
cld
sub
add
push
int3
add
mov
enter
pop
or
sbb
test
push
fstpt
js
push
inc
xor
pop
es
cld
test
inc
mov
jecxz
lds
outsl
mov
lret
mov
push
pop
jecxz
bnd
enter
aam
jecxz
lea
xchg
leave
enterw
sbb
daa
lods
jbe
sub
jge
insb
jmp
mov
mov
arpl
mov
pop
ja
pop
out
sbb
jecxz
sbb
fsts
iret
add
push
push
lods
aad
pop
mov
loopne
pusha
das
or
mov
fs
jnp
pop
out
hlt
xor
test
add
cmp
loop
jne
xchg
jno
inc
jae
addr16
add
and
rcrb
sub
lahf
push
aam
das
add
orps
out
insl
repnz
sbb
xchg
fidivs
xor
xchg
int
jmp
je
scas
xor
push
fwait
adc
in
sbb
push
or
push
add
std
addb
adcl
sbb
jbe
mov
pop
scas
pop
mov
jnp
jecxz
cld
clc
test
adc
jg
lock
pop
iret
sub
jne
stc
js
push
imul
into
pusha
push
xchg
adc
mov
insl
add
sbb
clc
movsb
sbb
out
sbb
testl
lret
mov
add
dec
and
into
mov
xor
inc
pop
or
pop
dec
and
repz
push
lea
aam
repnz
pop
push
adc
cmpsl
add
in
jg
dec
xor
sub
or
adc
ret
mov
data16
mov
repnz
insb
int
push
ds
sub
mov
es
xchg
test
out
sbb
pop
fcmovnb
jge
cmp
push
sbb
sub
je
inc
sahf
pop
cltd
fcoml
popa
mov
notl
pop
push
aad
je
and
mov
mov
in
cmp
arpl
mov
push
stos
inc
push
outsl
inc
inc
mov
inc
test
bound
rorl
inc
test
lcall
xor
ja
pop
sub
enter
insl
lea
xchg
adc
mov
sub
imul
dec
call
sbbb
inc
mov
insl
ret
push
jge
loope
pop
mov
adc
cmp
jecxz
popf
mov
lock
inc
inc
push
lds
movsb
adc
inc
mov
int3
je
cwtl
xchg
add
and
ret
sub
push
shlb
sub
imul
dec
lahf
dec
ss
push
pop
pop
loop
outsb
dec
xchg
adc
push
xchg
xor
mov
ljmp
lret
cmp
cmp
xchg
loopne
mov
cmp
add
sbb
lods
add
and
loop
test
sarb
jmp
in
cwtl
movsl
dec
shl
aad
push
repz
adc
addb
leave
xor
push
sbb
inc
lods
sbb
sbb
sbb
test
stos
dec
ss
clc
push
and
inc
mov
mov
mov
mov
or
mov
cmp
sub
pop
divb
std
inc
test
lods
pop
testb
in
pop
adc
inc
shll
pop
popl
mov
shrb
popf
mulps
into
jno
adc
push
mov
arpl
mov
xor
cmp
out
ret
and
cmp
cmp
test
lea
sbb
jl
mov
aam
icebp
in
pop
popf
ljmp
jnp
cli
mov
ss
nop
mov
mov
mov
ljmp
loope
push
jnp
jb
add
pop
add
or
pop
les
sti
sub
pop
adc
push
jge
mov
add
xor
and
dec
aas
jg
ret
push
ficomps
mulb
lret
in
sbb
mov
sub
and
inc
test
clc
jnp
or
into
jmp
jne
sti
xor
rcl
out
add
aam
xchg
sub
insb
sbb
mov
push
sbb
int3
stos
add
dec
xchg
fldt
shr
jp
cli
fbstp
stc
sub
adc
push
push
ficomps
into
mov
sub
lahf
xor
imul
pop
dec
clc
inc
popa
loope
jnp
test
dec
mov
imul
jb
jle
and
sbb
push
jns
pop
testb
icebp
xor
pop
out
or
sbb
fisubs
mov
and
fidivl
pop
lds
fisttpl
and
push
push
adc
push
or
addr16
fdivrl
fs
add
cmp
pop
aas
add
popf
dec
xchg
rol
lea
inc
cmp
xor
insl
cmp
mov
sbb
test
int3
jmp
add
push
in
adc
jne
sbb
push
pop
mov
loopne
mov
mov
xor
jmp
les
add
jne
pop
inc
hlt
loop
push
ljmp
adc
sti
add
xor
inc
test
sbb
outsb
inc
sub
cwtl
xchg
inc
push
xchg
out
aas
fsubrl
gs
mov
adc
or
inc
mov
lret
bound
int
pop
or
scas
test
inc
pop
push
inc
xlat
inc
gs
lcall
lea
pop
or
cmpsl
test
sti
cmpsb
cmpb
test
xchg
testl
fwait
ret
inc
mov
push
sub
mov
fisubrs
std
jbe
movsl
insb
fwait
lea
daa
pushf
nop
sti
cmp
mov
jno
jb
fdivs
sbb
sbb
xchg
fldt
call
int3
mov
cmovg
iret
cmpsl
in
ret
bound
xor
sbb
into
ljmp
pushf
lods
add
xchg
cmc
loop
int3
xchg
ret
test
lcall
orb
cwtl
push
pushf
lret
jnp
and
divl
mov
sub
fiaddl
inc
ds
addr16
add
push
repz
add
cmp
sub
imul
cmpsl
adcb
lds
arpl
and
imul
push
push
pop
dec
cli
sub
cmp
jecxz
decl
das
loope
mov
je
mov
and
jns
inc
bnd
loope
xchg
sbb
cmp
xor
mov
or
imulb
sbb
xlat
push
popa
sbb
in
xor
push
insl
push
in
cmp
add
int3
xor
arpl
pop
pusha
mov
enter
pop
int
fsubrp
data16
mov
jnp
mov
push
cmpsl
mov
sub
jbe
push
loope
cs
and
pushf
jb
leave
ror
jle
inc
and
lods
jo
sti
mov
jae
pop
rcll
sub
popa
outsl
das
and
daa
ja
out
inc
dec
lock
cli
sbb
jae
in
push
mov
add
dec
push
dec
mov
cltd
mov
sub
aam
pop
sbb
mov
ss
incl
xor
outsl
pop
pop
out
leave
mov
mov
pop
mov
dec
inc
fdivs
sarl
dec
add
fistpl
cmp
jmp
pop
or
lods
sbb
in
cmp
cmp
pop
sub
adc
ss
sbb
inc
push
lcall
mov
sub
and
fyl2xp1
shrl
psubusw
cmp
outsl
outsb
loopne
insb
push
mov
dec
adcb
jae
cmp
or
hlt
xchg
dec
es
sbb
jne
inc
inc
add
push
adcb
pop
scas
add
das
aas
inc
push
pop
pop
mov
inc
xchg
push
pop
push
out
push
out
and
sbb
ss
std
mov
add
lds
xchg
and
mov
dec
sub
or
xor
ret
adc
xlat
shlb
and
pop
fstps
dec
std
add
scas
stc
adc
rolb
fwait
mov
pop
outsb
push
jecxz
insl
push
and
fsubr
fcompl
loop
mov
push
fmull
inc
fnsave
and
jns
out
cld
pop
and
inc
pmuludq
mov
je
xchg
inc
subb
fldt
lds
cmp
pop
pop
mov
jl
mov
mov
test
push
sub
xchg
dec
ss
xchg
push
js
daa
ret
mov
xor
or
mov
cmp
loopne
dec
dec
dec
jbe
incb
or
push
sub
iret
and
fs
test
test
dec
mov
adc
filds
and
pop
aas
addr16
shlb
lret
rolb
in
outsb
fldcw
shl
je
movsb
ficompl
jns
push
sub
mov
inc
pushf
scas
repz
push
mov
jmp
and
mov
pusha
ret
mov
sbb
mov
aas
and
cmpsl
mov
push
cltd
shr
and
pop
stos
in
mov
jno
pop
add
ret
or
in
push
bound
ljmp
test
mov
pop
jne
dec
inc
push
mov
jp
mov
xor
enter
dec
cwtl
push
mov
cmpsb
jmp
ljmp
cwtl
imull
cmc
push
inc
and
pop
pop
cld
dec
sti
jo
pop
sbb
sub
out
sub
jl
repz
lods
mov
andb
test
lcall
pop
push
cmp
js
mov
mov
insl
xor
shlb
push
repz
cmp
lods
arpl
loope
and
bound
push
cli
sarl
mov
mov
rclb
and
inc
add
leave
pop
or
leave
in
mov
js
pop
sbb
inc
jmp
dec
out
mov
loopne
fs
data16
in
insl
test
insb
ret
mov
mov
or
xchg
testl
lds
int
mov
das
ja
mov
orl
clc
or
jnp
xchg
fists
sub
negl
daa
or
pop
pop
pushl
out
sbb
ljmp
pusha
mov
insb
lahf
mov
xor
adc
and
add
sti
sbb
iret
push
xchg
test
sbb
or
mov
fwait
mov
mov
leave
es
shll
jp
addr16
xchg
sbbb
adcl
bound
mov
push
int3
mov
jnp
fcmovu
push
ret
in
mov
pop
push
aad
mov
cli
push
leave
ss
adc
and
xchg
outsl
adc
pop
rcrl
test
aaa
add
and
outsl
adc
out
daa
stos
loope
push
mov
and
push
xchg
lret
stos
pop
test
jbe
xor
mov
cmc
adc
fcomps
insb
cmpsb
enter
sbb
in
jle
sti
imul
or
adc
or
cwtl
mov
jo
addr16
lret
xor
or
aaa
int
scas
stc
fadds
and
dec
cmc
mov
pop
ljmp
cld
scas
enter
outsl
mov
lods
subb
mov
ficoms
sahf
mov
fbstp
xchg
cmp
sub
mov
lods
dec
imul
xchg
mov
adc
cld
sti
outsb
push
or
sbb
xchg
insl
xor
cmp
lahf
mov
push
hlt
lcall
in
mov
cs
js
push
adc
nop
dec
add
xor
leave
data16
inc
cmp
or
push
orb
scas
shlb
cmp
mov
cltd
xor
int
sub
movsb
lret
aam
imul
xor
out
mov
int3
push
cmc
pop
hlt
test
insl
ss
rclb
lock
in
scas
loope
imul
movsl
rcl
sub
shl
cmp
out
setae
lcall
sbb
jb
dec
scas
mul
cld
xor
daa
stc
xchg
dec
adc
lods
lock
mov
call
jae
jmp
mov
add
repnz
jmp
roll
push
rcrl
sbb
mov
fisttps
int3
in
jae
in
mov
sub
fdivrs
shlb
jns
xor
daa
add
out
repz
data16
aad
cld
jnp
inc
jbe
lods
outsb
sahf
mov
data16
movsl
adc
scas
push
inc
sub
cmp
fcoml
fidivrs
dec
scas
mov
scas
mov
push
sub
hlt
mov
inc
ljmp
arpl
mov
pop
push
das
add
addr16
out
popa
jl
into
fnstcw
cmp
or
into
xor
jno
dec
cmp
mov
pop
int
incb
int3
mov
cmp
or
mov
stos
iret
cltd
mov
aaa
jmp
rclb
cmp
mov
xor
jge
lret
pop
dec
sbb
mov
xchg
mov
aaa
jge
add
push
cmp
mov
outsl
xor
mov
xchg
push
sub
pop
sub
mov
bound
ja
call
sub
sbbl
sbb
gs
jbe
push
or
popf
pop
mov
mov
nop
es
or
idivl
pop
daa
jmp
ret
xchg
clc
inc
icebp
arpl
das
out
stos
and
outsl
jns
out
sub
repz
fisubrl
adc
mov
adc
sar
sahf
mov
jnp,pn
push
or
sub
ss
mov
push
and
int3
int3
pop
jae
sub
pop
mov
dec
or
pusha
js
inc
push
test
adc
inc
jnp
xor
mov
inc
mov
mov
mov
adc
pop
inc
hlt
xor
int
scas
jmp
jle,pt
jp
test
outsb
dec
pop
leave
sub
push
xchg
outsb
inc
idivl
jl
add
xor
sub
mov
ja
sti
mov
enter
dec
xchg
cmpsb
cmp
ljmp
popa
sahf
rorb
aad
push
add
push
dec
mov
mov
xor
mov
push
sbb
outsl
sbb
jo
push
mov
inc
mov
divl
call
xchg
popl
sub
adc
lahf
ss
mov
fs
sub
aas
cmpsb
cmp
fisttpl
push
sbb
std
mov
mov
clc
lahf
xchg
adc
adc
mov
sbbl
cpuid
loopne
das
fmuls
jmp
das
xchg
bnd
daa
imul
cld
mov
sub
lock
sub
push
mov
rolb
cmp
jle
fistpl
mov
cwtl
ret
mov
sbb
cli
and
mov
sbbl
cmp
xorl
stc
sub
into
imull
loope
sub
shrl
popa
push
jns
mov
fdivr
push
sub
add
mov
pop
pop
fwait
das
insl
lret
xor
adc
cmc
inc
mov
popf
enter
adc
xchg
popa
iret
pop
out
xchg
aas
loope
mov
cmpsl
and
cmpsl
pusha
in
jbe
inc
imul
adc
pop
movsb
push
adc
and
adc
xlat
je
cmp
cmp
inc
lock
mov
std
jno
or
dec
or
xor
js
out
push
mov
or
cli
movsb
add
mov
sbb
inc
add
stc
outsb
xor
mov
mov
dec
cmpsb
sub
xor
mov
push
idivb
mov
push
dec
aas
in
push
fisttps
addl
xchg
adc
add
xor
cmp
jl
iret
cmp
mov
xchg
jp
dec
xchg
or
push
je
pop
popl
inc
sub
mov
fisubl
xchg
cltd
xchg
push
jo
out
cwtl
adc
lea
xchg
push
cltd
push
jns
out
pop
ds
xor
ffree
std
iret
pusha
scas
push
pusha
inc
fs
mov
push
ret
jns
repnz
jbe
or
jo
or
fsts
ficoml
xchg
cmc
jl
adc
and
jo
mov
and
pop
mov
add
push
sub
div
mov
pop
cmpl
jp
fnsave
sbb
movsl
les
cld
insb
adc
xor
xorb
data16
add
or
cmpsl
jnp
add
jnp
and
mov
add
or
loopne
stos
movsl
xor
fsubrl
addr16
lods
push
lret
cmpsl
jmp
adc
add
popa
lret
jns
ja
mov
stos
sbb
or
lahf
jnp
and
mov
sub
pop
or
pop
repz
out
lret
adc
jecxz
add
icebp
jb
jo
mov
pop
rorl
cmp
mov
pop
jg
push
movsb
push
loope
pop
push
inc
mov
aad
sbb
out
ret
sbb
xor
movsl
mov
out
mov
mov
inc
push
adc
inc
pop
pusha
daa
mov
shl
push
xor
ljmp
call
dec
mov
mov
dec
testl
cmp
and
mov
dec
push
paddq
out
or
stc
outsl
xor
cmp
in
lods
daa
lret
or
adc
mov
push
js
je
push
hlt
mov
cmpsl
repnz
pop
sbb
gs
sub
fwait
sub
fwait
stos
stos
pop
cmc
dec
jo
and
xor
sbb
mov
les
push
int
jne
pop
mov
popf
cwtl
test
jns
lret
xchg
sub
dec
out
mov
je
or
aaa
out
int3
mov
ret
jno
lods
push
jae
je
or
enter
ljmp
xor
jno
mov
sub
cmpsb
cmp
and
mov
cmp
movsl
or
loopne
push
sbb
sbb
jae
jmp
lret
xor
cli
cmpsb
stos
sub
loope
int
repnz
pop
popf
test
inc
je
dec
out
into
xor
loope
fcoml
cmp
lods
mov
xchg
push
sbb
mov
popf
mov
adc
lahf
icebp
jle
pop
je
movsl
in
lods
aad
lcall
in
adc
fcomip
sub
cmc
cli
dec
sub
rcll
xor
out
std
icebp
sahf
das
dec
shl
jns
mov
jge
outsb
mov
scas
and
cmp
shlb
mov
fstpl
sti
xchg
xchg
roll
aaa
and
lds
movsl
mov
in
adc
ss
pop
xlat
punpcklbw
cwtl
xchg
xor
xchg
out
lcall
inc
pop
outsl
mov
jg
sarl
test
xchg
xchg
out
and
mov
push
mov
add
insb
adc
cmp
mov
addl
push
fdiv
pop
pop
push
stc
fmuls
test
mov
mov
xchg
popf
int
add
lds
andl
mov
add
xchg
sub
aad
insb
or
mov
ds
mov
fcmovnb
push
test
sbb
pop
je
jno
leave
shll
xchg
sbb
nop
mov
jmp
adc
mov
icebp
xor
outsb
cmp
addr16
shl
pop
aas
jno
xchg
jmp
sbb
ret
xlat
inc
and
lds
xor
push
jg
push
sbb
cmpsl
incb
arpl
jnp
push
std
jns
and
adc
add
dec
leave
repz
mov
std
in
mov
pop
inc
imul
scas
hlt
iret
mov
or
ss
push
push
push
xor
adc
clc
mov
stc
adc
js
faddl
loopne
jl
loopne
int3
xlat
pusha
rcrw
push
call
mov
jg
adc
push
mov
push
sbb
out
adc
dec
clc
outsb
cmp
movsl
cmpsb
cmpsl
adc
std
mov
xor
xchg
inc
cli
push
out
adc
mov
cmp
add
lods
filds
sub
into
sti
enter
push
les
pusha
sub
dec
dec
in
je
popa
popa
pop
fwait
insb
adc
insb
dec
popa
xchg
adc
pop
dec
xchg
xchg
lret
in
xchg
and
dec
mov
push
fstl
inc
loopne
xchg
push
imul
shlb
mov
dec
or
sub
push
pop
jae
and
out
mov
push
pop
xchg
xchg
test
jl
test
and
je
orb
aas
or
mov
cli
inc
fidivrl
test
adc
sbb
mov
sti
mov
mov
rcr
pop
nop
out
push
pop
es
aad
xchg
cld
jnp
or
rol
test
fildl
jp
push
sub
fimull
or
das
lock
cmp
sbb
rolb
int3
cmp
scas
rol
addr16
js
lods
push
scas
lods
fisttps
clc
push
push
jbe
dec
inc
iret
sub
jmp
in
js
repnz
outsl
mov
jae
insl
dec
and
push
mov
mov
and
jmp
cltd
sbb
push
ret
into
ljmp
xchg
std
in
mov
shr
mov
ljmp
jecxz
push
aas
dec
arpl
sub
or
adc
fsts
xchg
rolb
jmp
rep
out
mov
and
push
cmp
test
xor
fs
stos
mov
mov
enter
jb
lds
mov
rcrl
pusha
xchg
add
add
aam
mov
push
sete
mov
stos
xchg
gs
movsl
ds
jns
mov
out
mov
jnp
mov
aad
test
mov
jne
int
inc
sbb
push
je
outsb
rcll
lcall
dec
push
sub
repnz
out
adc
sbbl
mov
jnp
cmp
adc
inc
xlat
push
xor
adc
pop
sarb
fs
mov
repz
jge
mov
scas
aas
arpl
push
jns
mov
flds
dec
jge
sub
xor
pop
aam
mov
sbb
insb
xchg
sahf
lods
jne
mov
and
mov
jno
clc
lret
test
jle
cmp
or
rclb
push
or
in
jns
je
sbb
mov
add
and
mov
push
aas
aas
pop
mov
inc
int3
popa
jmp
addb
jae
into
inc
pop
stc
je
jbe
push
jmp
mov
sbb
and
test
mov
fcmove
mov
outsl
mov
test
or
test
shlb
xchg
cmp
cmc
push
inc
out
jp
imulb
test
arpl
pop
jg
addb
adc
test
loope
sbb
icebp
mov
mov
ret
ret
das
fistpl
sbbb
xchg
inc
notl
jne
inc
outsl
sbb
xchg
cmc
xor
push
cltd
clc
pop
or
jp
scas
push
mov
lea
jne
out
inc
add
jne
sub
mov
push
fwait
xor
jno
filds
adcl
push
loop
xchg
pop
cmovp
mov
add
mov
pop
cmp
pop
inc
aas
xor
sbb
jae
xlat
dec
fnstsw
adc
mov
test
fstps
ret
xor
test
dec
insb
or
dec
imul
dec
das
xor
mov
lock
aad
repz
fwait
movsb
push
sub
lahf
in
dec
mov
jne
mov
or
xchg
xor
dec
pusha
dec
cmc
roll
test
cltd
dec
push
jle
cmp
pop
pop
adc
ss
pusha
and
sahf
gs
or
es
pop
outsb
dec
cmp
enter
ret
mov
sbb
push
cwtl
fisttpl
dec
ljmp
mov
pop
lock
cmp
xor
xor
sbb
iret
mov
cmpb
dec
stos
mov
lcall
fidivl
daa
fstp
or
jecxz
nop
test
test
push
scas
sbb
ret
movsl
adcl
dec
jp
or
add
inc
test
orb
movsl
add
mov
push
daa
push
pop
xchg
and
fsubr
pop
out
jecxz
mov
insl
das
pop
mov
jo
fs
mov
push
icebp
icebp
loopne
jb
iret
mov
mov
add
and
imul
enter
jecxz
pop
inc
add
push
arpl
mov
sbb
fdivl
scas
jmp
repz
imul
xchg
adc
dec
outsb
jg
xchg
jg
lock
cmpsl
inc
test
int
mov
int3
addr16
mov
cld
mov
push
dec
xchg
shr
test
xchg
loop
flds
fcomps
loopne
fidivl
mov
std
imul
je
ret
dec
push
mov
ret
or
push
iret
cld
jmp
daa
push
call
bound
in
mov
cmp
pop
pop
and
mov
dec
sub
ret
les
xor
mov
lods
and
and
daa
mov
loope
dec
outsl
call
fucomip
add
cwtl
xor
stc
adc
dec
xor
imul
inc
pop
les
sub
or
mov
add
push
stos
sahf
pushf
cmc
dec
andl
xchg
or
repnz
dec
jnp
jl
fisubl
mov
xor
xchg
jecxz
inc
mov
cmp
shlb
ds
add
mov
dec
mov
jbe
add
dec
mov
lock
lods
jnp
push
test
mov
dec
push
pop
xchg
mov
adc
ljmp
in
mov
xor
fldenv
sub
cmp
xchg
jg
stos
lret
mov
xchg
loop
adc
sub
and
jbe
fmuls
into
sub
push
stc
jno
out
mov
pop
pop
mov
stc
dec
movsl
gs
mov
dec
adc
adc
add
fmull
add
push
loopne
lea
outsb
rcrl
inc
dec
jno
sti
and
fistps
in
add
lock
xchg
xorb
fists
shrl
enter
dec
aam
test
ss
jle
jg
out
lds
test
pop
fstl
addl
in
sub
or
xchg
jl
fiadds
movsb
out
sti
xchg
call
mov
cmp
insb
inc
cmp
cli
not
dec
sti
mov
pushf
jle
mov
jg
and
gs
lea
je
mov
imul
mov
aaa
pop
pop
xor
xchg
and
or
das
push
pop
dec
fbld
rorl
aas
mov
mov
out
push
xor
test
mov
sbb
inc
js
cld
psubsb
mov
or
lahf
mov
repnz
repz
mov
sti
add
sub
shrl
push
mov
fiaddl
add
xchg
movsl
xor
out
pop
lcall
xchg
add
fdivs
stc
aam
dec
cmp
xchg
inc
mov
push
fwait
xchg
mov
cmpb
xor
xchg
lea
fsubrp
sahf
out
pop
xor
rol
inc
cmpsb
addr16
xor
cld
fs
sti
sbb
imul
clc
idiv
scas
mov
rcrb
cwtl
test
sbb
movsb
push
sub
arpl
in
add
or
insb
xchg
sbb
sahf
mov
adc
add
pop
mov
lcall
cmp
pop
mov
mov
push
sub
mov
ja
mov
test
jno
sarl
jl
xchg
jns
or
mov
aas
mov
inc
adc
das
fcomp
jmp
lds
aam
mov
aaa
shl
pop
fisttps
and
inc
mov
add
fistpll
daa
mov
jno
imul
mov
jbe
stc
mov
jl
loop
jno
sbb
mov
stos
into
mov
fwait
out
cmp
pop
add
lock
pop
sbb
xchg
and
adc
outsl
pop
mov
pop
xchg
jb
mov
or
ss
lock
pop
aaa
push
add
mov
movsb
inc
nop
scas
repz
fdivl
xchg
xchg
in
dec
add
push
cmp
mov
pop
mov
gs
lret
mov
arpl
jl
cmpsl
sbb
in
adc
inc
xor
stos
sbb
mov
or
mov
loop
notl
fcomp
repnz
jl
sbb
cmp
js
movsl
jns
dec
and
xor
add
out
jae
test
xchg
scas
daa
pop
dec
into
jp
inc
lret
pop
sbb
push
icebp
shr
cltd
xchg
xchg
add
imul
sub
sub
jp
mov
mov
jb
icebp
outsl
pop
fdivrs
dec
in
shl
dec
mov
rcl
je
dec
movsb
dec
sub
or
clc
adc
push
dec
pop
pop
test
shlb
ljmp
repz
sarl
push
add
fdivrs
pusha
sub
sub
rolb
sbb
loope
mov
cmp
loope
pop
in
in
in
dec
jno
xor
in
leave
dec
imul
sub
adc
ds
cltd
dec
push
lahf
jmp
sub
sub
lret
add
cmp
sub
push
mov
or
adcb
dec
les
bound
inc
lods
xchg
mov
xchg
pop
stos
sub
stc
nop
or
push
or
inc
rcrl
pop
jns
insl
loopne
mov
inc
xor
shl
test
call
jnp
fists
mov
mov
push
aam
push
ret
rolb
in
fiaddl
xchg
mov
ret
hlt
inc
add
pop
push
xchg
cmp
imul
jno
sbb
sub
sbb
ret
dec
popa
pop
cmp
add
jae
mov
std
hlt
loop
mov
jae
push
and
inc
aas
lods
pop
pop
pop
add
shr
sbb
daa
adc
das
add
xor
push
jns
test
jns
fdivl
call
sarb
mov
inc
sbb
aaa
xor
mov
mov
and
jbe
lds
imul
and
popf
push
and
in
lods
pop
outsb
data16
ljmp
insb
xchg
int
add
pop
jb
xchg
xor
scas
xchg
xchg
and
in
out
and
clc
push
movsl
daa
inc
push
mov
inc
dec
adc
mov
adc
and
push
or
dec
jnp
idivl
nop
sub
adc
xchg
inc
inc
push
es
or
loop
cmc
dec
xor
movsb
jp
xorl
addr16
pop
repz
jne
pop
out
or
jmp
push
inc
cmc
push
in
imul
push
push
push
xchg
mov
mov
xchg
mov
push
push
in
clc
adc
ret
push
jmp
ret
xchg
movsl
mov
popf
shrl
inc
jno
stos
repnz
sub
add
cmp
lahf
cmp
je
hlt
int3
sbb
cltd
jmp
ljmp
push
pop
mov
mov
xor
or
fs
pop
pop
sbb
or
inc
jge
fsubr
jmp
sbb
mov
xor
shll
xlat
loopne
inc
mov
lds
jmp
jp
cmp
adc
aam
jecxz
data16
icebp
fwait
jg
aas
lcall
jle
dec
push
shrb
jl
cmp
pop
cmp
mov
notb
xlat
mov
je
adc
pusha
push
fs
dec
sbb
mov
and
lods
cli
je
lcall
mov
lods
push
cmp
fcmovnb
jecxz
clc
pop
pop
push
cmpb
cmp
jecxz
inc
fidivl
xchg
cs
scas
cmpsl
inc
mov
or
push
out
push
pop
push
or
sub
aam
mov
xchg
dec
jmp
inc
frstpm(287
add
loope
pop
enter
mov
and
sbb
test
inc
xor
dec
add
mov
jecxz
sbb
enter
imul
scas
inc
test
pop
pop
mov
outsb
testb
xor
aam
push
mov
xor
lods
or
fstpt
repnz
cmpsb
jbe
fdivr
cmpsl
or
repz
repz
ss
or
push
xchg
idiv
popl
shlb
push
das
sub
jno
push
mov
adc
lret
mov
mov
movsb
cmp
insb
cmp
inc
xchg
fiaddl
jge
outsl
push
pop
cmpsl
popf
xchg
ret
mov
fadd
jae
loop
into
adc
push
mov
mov
icebp
cmpsl
adc
jno
and
push
adc
cmp
dec
mov
cmp
idivl
sbb
jg
xchg
arpl
jge
pop
test
in
mov
jg
std
pop
movsb
push
cmpl
je
in
mov
xchg
inc
mov
and
cmp
xchg
pop
mov
pop
sbb
scas
cmc
jo
call
inc
sbb
in
mov
stos
rcrb
test
sub
xchg
vmread
imul
mov
or
jbe
daa
sbb
mov
test
aam
out
or
out
cmp
fwait
mov
jmp
mov
add
loopne
lods
cld
ffreep
mov
lds
sub
outsl
leave
sub
aaa
or
scas
add
push
pusha
aaa
clc
cmpsl
jmp
jne
cmp
mov
add
sbb
sbb
xor
or
mov
aam
test
xor
cli
add
andb
cld
cmp
sbb
cmpsb
jp
xchg
ss
aaa
mov
popl
ljmp
push
arpl
cs
les
or
andl
or
adc
lods
push
dec
push
sbb
xchg
add
movsb
cld
inc
les
adc
out
jns
notb
aaa
leave
push
test
xor
rorb
fcompl
in
push
dec
lret
cwtl
mov
and
lea
fsubr
cs
or
lret
movsl
jb
mov
pop
sbb
adc
lds
mov
mov
repnz
and
and
pop
push
dec
js
cmpsl
popa
jnp
loopne
sarl
data16
cwtl
inc
hlt
dec
fldenv
pop
mov
icebp
jg
mov
hlt
out
scas
cmp
push
nop
stos
mov
sub
xor
cltd
and
mov
insl
imulb
cld
sbb
mov
adc
mov
hlt
mov
xchg
sti
and
roll
mov
dec
pop
or
sarb
sarl
push
dec
push
mov
sti
sbb
gs
rcr
sub
popa
fwait
xor
fdiv
cltd
push
push
clc
pop
iret
xor
adc
pop
sub
jl
xor
inc
xchg
sbb
scas
ljmp
pop
jp
js
xor
inc
int
jae
imul
repnz
dec
xchg
test
mov
mov
in
clc
outsl
lock
into
adc
cmp
mov
scas
inc
pop
cmp
into
sbb
jne
xchg
test
test
daa
lea
mov
inc
fwait
and
mov
cmc
jl
dec
dec
leave
stos
in
rclb
add
cmp
shrb
and
adc
xchg
pop
xlat
cli
push
cmp
adc
mov
push
cld
gs
sub
add
jp
mov
fs
in
loope,pt
mov
scas
push
pop
push
push
fimull
jecxz
xor
es
inc
scas
xchg
fwait
movsb
pop
daa
mov
sbb
test
pusha
rcrb
dec
and
movsl
loope
test
test
pop
js
push
in
icebp
push
repz
pop
pop
add
lods
lcall
pop
call
dec
clc
pop
cmpb
add
std
inc
test
fnstsw
pop
jge
negl
xchg
jns
xchg
outsb
subl
in
mov
fcomi
dec
cld
dec
xor
add
mov
aad
je
push
cld
cmp
pop
jg
xor
mov
jae
jnp
xchg
mov
sbb
and
cmpsl
jb
push
mov
inc
testb
mov
pop
sahf
fidivrl
mov
pop
movsb
xlat
mov
sahf
xor
mov
femms
ret
mov
mov
pushf
jb
lods
xchg
faddl
shlb
jo
inc
jno
and
jb
cwtl
outsb
in
sub
adc
mov
negl
jnp
or
or
outsl
pushf
and
cmp
test
xchg
xchg
xlat
and
cmp
ficoml
pusha
jg
je
incl
sub
push
pop
cmp
pop
lahf
push
inc
jnp
clc
mov
sub
and
lahf
xor
jle
mov
cmp
lret
mov
cmp
enter
cmp
inc
add
mov
or
mov
cmp
popa
mov
push
add
mov
mov
lock
lea
mov
xchg
scas
mov
and
call
jns
gs
jg
mov
pop
jecxz
in
adc
mov
cwtl
gs
test
insl
ljmp
adc
and
nop
inc
xor
add
mov
adc
cwtl
loop
in
iret
xchg
rep
sbb
adcb
in
pop
lods
rcrb
ret
ss
mov
mov
cmp
push
aas
ficoms
lock
pop
stos
cmpsb
lret
outsl
lock
mov
fisubrl
sbb
movsl
mov
imull
fmulp
dec
jl
push
dec
xor
sbb
nop
jp
mov
lea
data16
sub
mov
fstpt
repz
xchg
inc
cld
xor
insb
inc
cmp
in
loope
adc
xor
mov
or
stc
imul
scas
es
cli
out
inc
jmp
sbbb
imul
sti
add
je
and
jns
pusha
cmp
mov
mov
cmp
cmp
xlat
jl
push
test
lods
adc
mov
test
cmp
imul
in
adc
js
xor
xlat
dec
pop
addr16
ja
add
xchg
xor
lods
xchg
jo
imul
je
inc
push
pop
and
es
sub
std
and
bound
cs
cmc
pushf
dec
or
dec
xor
adc
inc
mov
or
js
cmp
shll
pop
outsb
in
loope
fbld
scas
outsl
inc
lods
repz
mov
loope
push
btr
inc
insl
outsl
xor
ss
orl
in
or
xchg
and
xor
jp
jnp
mov
and
lds
movsl
das
lahf
in
out
js
test
add
shll
lea
test
popf
fs
push
loop
jb
repz
popf
testb
into
pop
imul
call
repz
enter
das
xor
xchg
mov
dec
add
jmp
or
hlt
jne
add
dec
or
mov
xlat
push
jnp
jnp
pop
sbb
or
repnz
lods
icebp
add
iret
jle
cwtl
iret
fimull
stos
movsl
push
mov
inc
dec
in
mov
adc
mov
int
dec
outsl
sub
sub
cmp
js
xchg
dec
mov
in
les
and
outsb
lahf
enter
jns
mov
xor
mov
or
add
xchg
out
jns
subl
mov
sub
xor
data16
mov
add
cld
call
lea
dec
mov
fsubrs
test
popa
sub
outsl
dec
inc
fsubs
in
push
xor
mov
stos
test
lahf
mov
jmp
dec
fldl
sbb
jb
scas
jo
adc
loop
outsl
add
sub
outsb
sbb
cmp
inc
sbb
call
sub
fs
sub
push
jbe
fwait
xchg
cs
push
aas
stos
push
jns
andb
push
sbb
out
sub
sub
imul
in
outsb
testl
test
addb
jne
or
aas
push
iret
enter
xor
mov
js
mov
js
imul
nop
mov
mov
je
pop
jmp
movsb
movsl
je
in
addr16
xchg
push
mov
fidivrs
jg
cltd
movsl
mov
std
push
in
lea
cs
pushf
pop
xor
subl
dec
jo
jnp
or
test
lret
movsb
hlt
cmpsb
or
pop
outsl
mov
stc
lret
push
or
mov
fistps
call
lds
faddl
mov
ret
cs
and
sbb
testl
xorb
mov
pop
ljmp
mov
sbb
jne
mov
cmp
pop
mov
mov
in
mov
jge
and
xor
jmp
shrl
pop
insb
sbb
push
pop
lods
pop
stos
sub
jle
aad
nop
pop
xor
loop
and
and
push
mov
jnp
movsl
test
hlt
sbb
cmp
pop
aad
mov
mov
loop
jecxz
frstor
fdivr
pop
xlat
loopne
aaa
lods
pusha
cmp
test
adc
mov
mov
dec
jae
or
inc
push
adcl
aam
push
outsb
sbb
jge
outsb
aas
mov
pop
out
lods
lret
pop
test
mov
pop
jae
shl
int
cmp
mov
jmp
pushf
xor
and
ret
inc
mov
cmp
je
mov
push
les
in
xchg
cmc
lcall
sub
call
in
mov
push
sub
push
mov
pop
xor
jge
adc
roll
sahf
pop
adc
pop
aaa
aam
test
xchg
stc
cmp
std
cltd
idiv
sub
cwtl
and
lea
xchg
jnp
repz
sub
dec
xor
js
xor
cld
mov
popf
cmpb
xor
sub
lds
test
dec
mov
push
ja
in
pop
rclb
mov
pushf
es
pop
xor
pop
dec
dec
dec
add
ret
lods
xor
sub
cs
mov
jle
mov
test
lods
jns
lret
mov
mov
pop
and
cmp
or
adc
rcrb
je
xor
out
call
and
clc
insl
fwait
push
xchg
daa
dec
jnp
clc
repnz
cmpsb
jg
or
insb
and
jns
dec
repnz
dec
adc
jae
aas
in
nop
cmc
je
sbb
cltd
call
lea
or
mov
xor
mov
mov
in
ja
mov
cmp
mov
call
movsl
ficoml
push
sbb
stos
mov
mov
loopne
mov
pop
xchg
ret
rcr
and
repz
or
add
dec
jg
sbb
pop
xor
xor
xchg
nop
adc
cltd
imul
jne
add
andl
gs
mov
and
into
imul
sbbb
and
fs
xor
dec
jmp
out
xor
push
jecxz
mov
jo
sbb
mov
sub
adc
jg
xor
pop
pop
xchg
cltd
and
ficoml
jno
pushf
vmaxsd
out
in
mov
or
push
mov
xchg
negb
aas
cwtl
pop
xlat
mov
mov
adc
bound
cwtl
sbb
inc
mov
sbb
gs
sub
mov
pop
cmc
test
lods
lock
sti
push
bound
jo
mov
aad
jbe
shl
cmp
in
in
jns
pop
out
sahf
icebp
sahf
ret
mov
out
dec
pop
shll
dec
sub
lds
in
les
nop
inc
mov
movsl
lcall
rcrb
lods
loope
or
dec
fildll
jge
test
sbb
mov
lods
jno
jle
mov
and
aad
mov
cwtl
xchg
add
adc
jne
jmp
inc
push
inc
xchg
mov
mov
xor
cli
shrl
cli
jb
mov
or
sarb
cli
push
jmp
in
stc
xlat
sti
in
leave
js
dec
jno
insb
cld
lods
daa
or
std
int
jmp
adc
lea
adc
gs
xchg
rclb
xchg
dec
ds
fwait
jp
testb
out
adc
movsb
out
int
cli
add
and
add
inc
mov
sbbl
and
cltd
imul
aad
imul
cmp
ret
test
cltd
push
xor
cmp
cmpb
cmp
iret
mov
inc
lods
je
cli
xor
pop
movsl
or
fadd
jp
movhps
mov
add
aad
dec
notl
fstpl
mov
xchg
push
out
pushf
in
push
mov
cli
sbb
out
cmc
loop
push
dec
scas
cld
out
les
push
aas
sbb
mov
lds
dec
es
mov
iret
lods
pop
add
pop
fwait
enter
data16
xlat
jge
aaa
and
xor
shll
aaa
ret
cmp
push
sahf
pushf
popf
mov
insl
scas
aas
std
and
loop
mov
sub
arpl
xchg
in
rcl
into
sbb
cmp
cltd
das
dec
xor
movsb
pop
xlat
loope
mov
gs
sarl
cltd
out
push
negb
push
pop
fdivrp
or
loopne
scas
cmc
in
sti
sub
or
jno
mov
testl
stos
add
mov
mov
sarl
hlt
cwtl
aaa
out
inc
leave
outsl
daa
add
mov
cmc
iret
pop
sbb
adc
xorb
pop
or
mov
sti
xlat
in
push
lods
cltd
ret
and
jo
insl
mov
outsl
test
div
sub
iret
mov
push
pop
cmp
mov
push
jl
or
lods
add
or
push
pop
lret
xchg
pop
inc
testl
mov
popa
pop
sbbb
es
push
je
fwait
sbb
repnz
add
sbb
iret
das
ja
popl
mov
mov
adc
push
ja
pop
out
dec
xor
adcb
rorl
or
adc
ljmp
adc
iret
adc
mov
enter
bound
cmp
fdivl
jbe
mov
push
insb
or
aaa
cmp
shll
cmp
lock
scas
das
sbb
cli
mov
idivl
ret
and
fs
add
pop
xchg
cmp
bound
es
mov
dec
mov
cmc
adc
jns
sbb
sar
jns
lret
jecxz
push
jbe
lods
fucomip
xor
jo
test
cmp
xchg
and
xor
xlat
xlat
inc
clc
inc
push
pop
fildl
lea
fmull
mov
adc
sub
sbb
mov
mov
mov
mov
inc
imul
adc
mov
call
xor
adc
pop
adc
adc
and
fldl
imul
das
aam
and
and
xor
int3
icebp
outsb
rol
ja
cmp
js
repz
inc
push
pop
iret
push
popf
push
fs
in
popa
pop
inc
cmp
sti
arpl
data16
sbbb
lret
dec
jp
xchg
pop
out
ljmp
sbb
lret
scas
cli
mov
ja
dec
pop
lods
aas
mov
inc
push
scas
pop
pop
or
cmp
and
mov
cmp
adc
sbb
jecxz
popf
mov
jl
adc
xchg
xor
cmp
inc
sahf
subl
aas
fstpl
sahf
call
sub
or
add
imul
xchg
mov
lea
insb
icebp
jl
xchg
sarb
clc
and
push
leave
mov
mov
shl
mov
mov
loopne
es
repz
clc
jae
jp
sub
fiadds
mov
mov
sub
popf
xchg
xchg
xchg
cld
enter
ljmp
add
hlt
mov
inc
mov
push
mov
idivl
and
xchg
xchg
push
adc
jnp
movsb
and
dec
mov
shl
dec
cwtl
xor
aas
daa
scas
cltd
cmp
sub
mov
loope
xor
cmp
cltd
scas
mov
icebp
inc
sarb
lds
js
xor
je
mov
mov
inc
sbb
jns
jnp
xorb
movb
sub
out
imul
add
les
push
sub
daa
xchg
imul
stos
mov
ficoml
sbb
and
in
xchg
shl
jne
adc
mov
add
adc
xchg
scas
mov
cltd
xchg
dec
fcoms
pop
aas
jne
jo
sub
xlat
push
in
pop
ja
das
test
lahf
dec
fiadds
push
in
test
xorb
xor
push
divl
push
stc
mov
outsb
fisubrl
sub
imul
aaa
repz
fiadds
sahf
push
fcomip
repz
out
pop
test
mov
je
inc
cmpsl
and
mov
fidivl
xor
sub
fimull
push
inc
sarb
mov
ss
xchg
sub
dec
push
test
loope
icebp
sti
imul
sbb
mov
pop
jg
cmp
sar
pusha
repz
and
lods
xchg
cld
aas
and
shrl
jle
out
fnsave
shll
arpl
andl
aas
shll
jbe
mov
scas
jne
cmp
and
movsl
insb
mov
push
dec
or
xor
adc
clc
jnp
xchg
adc
xchg
aas
xchg
in
mov
xchg
fdivrl
cmc
pop
icebp
outsb
xor
call
cs
cs
leave
xor
xchg
mov
in
mov
xor
add
ljmp
scas
flds
xor
enter
orb
lods
fildll
jmp
cmc
lret
hlt
in
mov
mov
popf
in
cmp
adc
arpl
mov
lcall
mov
mov
mov
roll
pop
mov
test
pop
js,pn
in
cli
cmc
sbb
pop
out
leave
mov
ret
add
xchg
jne
jae
xchg
sahf
xchg
xchg
xchg
and
inc
mov
iret
fistps
add
jbe
test
repnz
xor
fnstenv
jge
mov
adc
shrl
icebp
cmpsb
mov
nop
inc
pop
addl
push
cmpsl
mov
inc
insl
mov
out
pop
rcl
mov
jecxz
stc
in
int
pop
push
movsl
mov
and
mov
popf
call
ja
stos
xor
aad
sbb
lea
sub
addb
out
ss
add
outsb
inc
ror
and
cmpsl
jae
es
jp
lret
push
loope
inc
imul
fwait
sbb
pop
sub
mov
xorb
sbb
push
push
xchg
inc
in
jnp
popl
pop
pop
retw
mov
mov
pushf
mov
repz
jno
out
insl
push
imul
rcrl
pop
ja
add
pusha
xor
and
aas
test
push
add
adc
int3
jg
je
outsl
cmp
lcall
push
repz
icebp
xchg
mov
imul
add
test
xor
pop
cld
push
dec
out
dec
mov
mov
dec
mov
rorl
shr
jmp
mov
mov
mov
out
int
adc
jecxz
lcall
pushf
jno
jmp
sti
repz
mov
pop
mov
stc
ja
sbb
movsb
aam
aad
inc
push
xor
jp
sahf
loopne
mov
insl
mov
test
lods
movsb
push
loop
sbb
jp
rcrl
push
mov
sbb
sub
pop
mov
xor
stc
push
divl
lcall
xchg
mov
jb
pop
lret
jae
sti
leave
sub
lods
shll
into
addr16
std
cs
sub
cmp
push
out
icebp
popa
int
lock
addr16
inc
sub
inc
das
inc
sbb
add
xchg
mov
adc
movsl
pop
xchg
in
and
xchg
sub
adc
lea
xchg
push
and
adc
lods
cmp
jmp
dec
push
and
mov
out
cmp
fcoml
in
mov
cs
lahf
adc
jmp
icebp
pop
jb
cmp
sbbb
aam
jmp
xor
outsl
xchg
mov
dec
pop
gs
clc
sbb
xlat
mov
mov
imul
jno
push
addl
adc
pop
inc
hlt
stos
sbb
jns
mov
or
stos
cs
std
pushf
push
sbb
filds
mov
jmp
popa
lret
mov
jmp
addr16
lret
add
imul
int3
lods
int3
sbb
fdivl
sbb
mov
adc
push
push
jl
ljmp
outsb
mov
sbb
repz
sbb
mov
insl
xor
cmp
pop
lret
push
in
enter
negl
push
fcoml
fadd
xchg
mov
jo
call
push
bound
xchg
lods
and
into
cmp
addb
pop
push
outsb
adc
or
dec
jge
inc
out
mov
loopne
ret
xor
fdivp
adc
shll
std
test
sub
icebp
test
or
pop
fidivrl
ret
sar
andb
sub
sbb
icebp
or
xchg
sub
adc
lcall
addr16
and
in
mov
nop
loope
or
xchg
sti
cmp
push
and
call
or
jb
movsb
mov
lcall
dec
lds
pop
adc
cmp
fisttpll
adcb
ror
in
cwtl
nop
inc
aas
push
cmp
xor
popf
push
sbbb
mov
loopne
popa
dec
sahf
adc
punpcklbw
jae
in
and
push
adc
inc
cmp
jb
idivl
jge
out
ja
jns
mov
outsl
push
rcrb
xchg
adc
mov
pusha
fnstsw
sbb
jle
dec
adc
stos
sbb
fldenv
jmp
imul
cmpsb
sbb
cmp
mov
mov
sub
push
dec
cltd
mov
cmp
pop
mov
pop
lret
xor
xchg
aad
popa
stos
sub
push
mov
lock
fidivl
cwtl
test
jns
aad
outsl
lock
cmc
or
jl
cltd
psrlw
add
pop
mov
inc
push
jp
inc
or
push
test
mov
mov
jno
pop
xchg
xlat
xchg
xor
pop
rcll
sub
sbb
and
add
add
lea
sbb
je
in
jg
ffree
inc
push
mov
ficoml
pushf
jns
mov
cmpsl
xor
push
cli
roll
js
and
pop
push
std
in
and
sti
add
dec
adc
loop
idivb
inc
in
adc
ret
jb
sbb
pop
test
leave
xchg
mov
push
and
xchg
push
mov
mov
test
xor
in
popf
lock
mov
cmp
or
mov
leave
ret
xor
test
mov
mov
stos
mov
push
adc
stos
cmp
movsb
out
mov
std
sub
pop
xchg
cld
lds
mov
movsb
xchg
push
cmp
hlt
dec
jle
jecxz
arpl
lret
cmpsl
sbb
mov
test
or
adc
add
stos
fnop
movsl
push
fildll
clc
movsl
mov
gs
cmc
insl
and
scas
test
fs
dec
loop
mov
mov
popa
and
adc
fdivr
xchg
lcall
lods
int
and
xchg
clc
popa
das
insl
rcl
dec
ja
ret
iret
aad
sub
xchg
outsb
mov
lock
add
imul
inc
fisubs
sbb
dec
cmp
adc
add
call
lods
aad
ss
lock
push
push
pop
dec
mov
and
call
lods
push
aas
int3
and
xor
cmp
mov
scas
enter
jge
outsl
ficompl
sbb
push
add
jne
unpckhps
lret
ret
fisttpll
lret
sbb
add
sbb
xchg
or
sbb
int3
adc
mov
or
sub
and
mov
xchg
mov
cmpsl
add
add
lock
mov
or
addr16
mov
jg
test
jns
jne
cmpsl
insl
pusha
mov
push
lret
and
rorl
or
xchg
dec
and
cmc
out
pusha
cmp
loopne
addl
sti
movsl
push
xchg
cmc
jo
push
pop
imul
cld
daa
mov
mov
scas
xchg
das
mov
jo
push
ljmp
fildll
fnsave
jbe
add
sti
dec
popf
dec
xor
pushf
and
icebp
push
mov
sarl
and
or
jp
and
inc
popf
popf
subl
sub
jp
sbb
mov
cmp
test
js
dec
in
pop
pop
aas
lds
adc
data16
push
mov
ljmp
or
or
push
sbb
adc
daa
lods
jae
loop
nop
xchg
xchg
mov
inc
out
dec
gs
jl
mov
fcmovnb
mov
xchg
pop
mov
xor
mov
cwtl
insb
shrl
add
jne
cmp
cmp
ja
test
outsb
nop
adc
sar
js
jge
cmp
pop
or
cmp
call
lahf
sub
loopne
outsl
outsl
fsub
jb
jl
mov
dec
cmp
push
mov
sbb
and
mov
mov
push
pushf
hlt
add
cmp
mov
xchg
aad
inc
jns
int
movsb
lds
dec
hlt
fldcw
es
fucom
dec
pop
mov
jo
int
movsb
test
in
ss
fcoms
lret
out
mov
sarl
cs
jne
inc
xchg
inc
rol
jbe
mov
ret
dec
imul
repz
adc
cmp
jo
out
push
push
iret
out
sub
xor
movsl
daa
shrb
cld
cmp
mulb
and
inc
cmp
pushf
sarb
mov
aad
mov
mov
or
jle
sub
scas
mov
sub
push
inc
sub
iret
popf
pushf
jmp
std
sbb
jp
mov
test
push
mov
mov
sub
inc
fmul
jno
fwait
mov
shrb
push
adcb
jns
lret
jae
dec
aam
rolb
push
adc
stc
mov
or
cmc
sbb
jae
dec
xlat
jbe
add
xlat
ja
leave
pop
adc
stc
inc
gs
sub
or
dec
shll
mov
pusha
push
dec
jns
jge
sub
pop
cmpl
out
inc
ljmp
fiaddl
cltd
sbb
dec
dec
cmp
inc
mov
jg,pt
dec
adc
sub
jbe
mov
push
ret
out
add
dec
cld
add
dec
xchg
ja
sub
xchg
fnstcw
add
mov
mov
leave
sarl
jle
xchg
add
pop
sbb
scas
or
push
mov
cs
mov
popf
jecxz
leave
popa
stc
mov
pop
or
mov
xchg
out
mov
mov
outsl
scas
and
mov
xor
pop
mov
lods
lea
dec
shl
insb
sub
dec
sti
dec
repz
and
cmp
je
shrl
icebp
adc
in
enter
cli
lock
aaa
and
adcl
cmp
popf
and
sbb
aad
jge
in
sub
inc
mov
push
jbe
dec
xchg
jg
aam
loope
adc
cld
roll
pop
arpl
les
xor
jb
lods
incb
hlt
iret
add
insl
and
inc
push
jae
enter
adc
outsl
out
mov
stos
push
out
std
pop
pop
mov
sub
int3
xchg
int3
inc
mov
mov
cmp
fdiv
test
pop
mov
sbbl
jne
mov
stos
cld
lea
xchg
jns
cmp
adc
sbb
sbb
adc
mov
mov
pusha
pop
push
inc
dec
cmp
mov
aas
push
xor
out
jae
cwtl
ss
sub
cld
fcomp
xor
xor
outsl
mov
xchg
xchg
in
fcomp
out
pop
lahf
scas
shlb
out
xchg
ss
sbb
fmuls
push
adc
xchg
movsl
dec
outsl
mov
add
out
inc
pop
jns
jbe
les
scas
cmp
xchg
inc
xchg
cmpsb
and
dec
push
xchg
repnz
mov
jno
xor
inc
lea
jl
daa
jmp
jl
sahf
xchg
sbb
sub
fwait
popf
out
scas
inc
lret
out
mov
js
mov
add
cmp
nop
jge
pop
cltd
insb
repnz
out
push
in
testb
fimull
adc
ss
push
adc
adc
les
xchg
rcll
cmp
out
mov
pop
inc
outsb
sub
testl
adc
pop
pop
inc
mov
jl
sbb
pusha
js
xor
or
and
add
jo
mov
jo
jge
fimull
push
fstenv
sub
pop
idivl
add
cmpsl
dec
shrl
or
jo
into
movsl
repz
dec
jae
push
sti
mov
push
insl
fiaddl
rol
adcb
jne
ficompl
push
shll
loop
mov
je
mov
bound
testl
sti
fldenv
jno
aas
loopne
sbb
notb
sub
xchg
popf
cltd
dec
dec
loopw
cmp
ror
adc
pop
fxch
outsl
xchg
xor
mov
fwait
jne
das
inc
inc
cmp
lea
sub
adc
pop
loopne
fcmove
lret
pop
xchg
repz
mov
mov
cmp
ror
mov
and
shll
jmp
xor
jmp
or
pop
dec
xchg
int3
rcl
mov
ja
stc
pop
ds
mov
cs
sub
mov
icebp
stos
mov
adc
arpl
in
jb
push
xchg
push
xor
test
shlb
inc
cmp
or
add
pop
sbb
sub
divl
push
push
pop
aaa
testb
shl
and
fstpt
daa
ljmp
test
fmul
ja
les
push
je
pop
and
mov
dec
cmpl
and
test
or
push
xchg
fwait
fwait
aas
cltd
lret
inc
insb
inc
dec
mov
movsl
out
decb
subl
jge
jno
lds
outsb
xchg
push
in
icebp
insl
test
dec
add
cmpsl
mov
inc
mov
enter
cltd
cwtl
pop
mov
inc
iret
and
insl
sub
je
fwait
mov
mov
loopne
jge
shrl
addr16
push
mov
loop
xchg
mov
mov
sub
pop
sub
push
fs
push
bound
cmp
lods
sub
dec
mov
xor
mov
in
lods
ljmp
adc
xor
call
es
cltd
sbb
cwtl
enter
lea
bswap
mov
shlb
mov
je
int3
sbb
insl
mov
icebp
mov
jle
adc
fs
pusha
popf
pop
mov
aas
sub
fistps
mov
jl
aas
pavgw
in
xor
add
sbb
std
mov
lret
push
pop
cmp
add
pop
out
rorb
pop
test
mov
sbbl
daa
lret
mov
lods
daa
jo
xor
in
sub
xor
jne
loope
or
or
shlb
xchg
pop
loop
ds
int
dec
adc
jnp
sti
inc
adc
daa
test
lods
dec
roll
push
gs
sub
insb
pop
sbb
dec
lods
lret
sarl
mov
sti
jne
nop
jo
inc
adc
sbb
pop
aaa
xor
fldenv
int
mov
negb
jo
sub
sbb
les
dec
dec
les
scas
mov
add
cltd
out
js
cmove
out
mov
insl
lahf
jb
adc
dec
dec
cmp
inc
gs
out
mov
push
cmp
je
sub
inc
popf
and
std
roll
mov
mov
mov
jbe
sbb
adc
addr16
and
lods
repz
test
jnp
in
sbb
sti
cli
out
in
mov
mov
jp
gs
mov
or
add
adc
inc
pop
mov
ficomps
inc
push
sarl
xchg
call
js
popa
int
outsl
or
pop
mov
lahf
and
je
sub
or
jbe
in
dec
xor
sahf
aam
jg
lret
xchg
inc
cli
xor
cmp
cmp
iret
fisubl
test
pop
dec
mov
mov
scas
sbb
fdiv
sbb
scas
mov
pop
cmp
cmp
dec
xchg
sub
mov
xlat
or
test
stos
jecxz
mov
or
jb
sahf
sub
push
jg
jecxz
adc
and
notb
jno
dec
jle
incb
xchg
mov
testl
movsl
pop
mov
mov
push
jge
push
popa
es
cld
mov
popa
pop
frstor
imul
in
fdivrl
jl
xchg
cmpsb
stos
adc
insl
fisttpl
popf
rcrl
fwait
insl
jb
arpl
ret
hlt
mov
sahf
jg
test
std
sbb
cltd
test
loopne
je
hlt
ret
call
fadds
leave
mov
push
dec
fwait
xchg
inc
adc
cmovge
dec
add
sbb
xchg
xchg
push
inc
aaa
xorl
aad
cwtl
xchg
sub
sti
jmp
dec
scas
jnp
xorw
xor
xchg
js
arpl
lea
cmp
dec
out
dec
add
push
in
mov
jo
das
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
setg
repz
arpl
enter
cmp
or
scas
cs
xchg
mov
scas
orb
cwtl
mov
mov
add
cltd
mov
test
dec
and
cmc
scas
cli
cmpsl
mov
in
xchg
test
mov
or
fbld
pop
mov
mov
sbb
sbb
in
mov
xchg
xchg
test
pop
pushfw
popa
and
mov
mov
or
enter
or
jmp
xlat
and
jbe
inc
into
stc
push
fwait
stos
stos
add
fadds
addr16
mov
imul
rclb
mov
imul
lods
sahf
mov
imul
or
xor
sbb
ja
push
cmp
add
jmp
sbb
mov
test
pop
jae
sbb
xor
out
push
ja
fistps
movb
enter
pop
outsl
lcall
mov
test
mov
inc
xchg
cvtps2pd
xlat
mov
fcmovb
popf
push
je
subl
pop
pop
cmp
aad
sub
cli
sbb
adc
enter
mov
roll
jae
dec
int
add
jg
rcrl
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsl
add
outsb
