xchg
fists
push
aas
ret
hlt
xor
into
lods
push
movsl
jne
sahf
out
add
call
cmpsl
xchg
stos
cld
in
sbbl
inc
bound
fwait
pop
lods
and
pop
mov
pop
enter
or
pushf
push
cli
out
int3
push
sub
lock
cmpsl
out
sub
repnz
ljmp
pop
aaa
add
loop
ljmp
pop
xor
mov
push
outsb
or
rcl
pusha
fcom
rorb
pop
lods
and
cmp
stc
pop
inc
mov
pop
sbb
sub
mov
popa
pcmpgtd
cs
push
cltd
leave
fnstenv
test
and
sbb
fisttpl
adc
fistl
adc
pusha
cmc
shrb
call
into
sbb
jp
out
xor
and
das
es
pop
lcall
movsl
cmc
int
out
xlat
mov
xchg
int
push
dec
lods
lock
adc
js
out
pop
lods
jns
dec
xor
jg
adc
fwait
out
xor
scas
mov
or
into
fstp
test
lods
and
or
cmpsb
sbb
daa
jge
xor
mov
inc
cmp
or
pop
mov
inc
mov
mov
fstps
cltd
pop
adc
rcrb
adc
mov
es
lds
es
and
inc
sub
mov
and
pop
jo
jge
cmp
fwait
pop
lock
inc
fsubl
fwait
pop
out
mov
pop
add
stos
adc
imul
mov
add
sbbl
sub
pop
add
cld
out
sub
pop
popf
and
ret
call
inc
lahf
scas
loopne
xchg
and
movl
inc
gs
pop
xor
xor
add
fwait
pop
and
test
mov
cmp
and
mov
cmp
xlat
cmc
in
and
out
mov
es
scas
in
cmp
lods
mov
gs
out
pop
dec
out
mov
es
gs
lods
data16
pop
lods
pop
inc
mov
pop
daa
fistpll
fistpl
sysenter
cmp
fldcw
gs
mov
or
daa
filds
mov
pop
inc
mov
mov
mov
inc
gs
in
sub
and
fmull
add
addb
sbb
xor
andb
dec
das
dec
scas
dec
das
notb
das
dec
scas
dec
das
notb
das
add
insb
inc
shlb
dec
enter
mov
ss
inc
add
mov
sub
ror
movsl
stos
adc
mov
shlb
mov
adc
repnz
or
adc
dec
das
mov
dec
mov
test
in
xor
ret
mov
lea
data16
and
adc
mov
jl
cmp
fs
mov
add
lret
test
and
mov
xchg
addr16
repz
subl
jo
insl
xor
add
out
icebp
aas
mov
test
pusha
mov
movsl
ret
xor
mov
aam
outsb
mov
mov
test
scas
xor
push
dec
pop
test
cld
push
mov
xchg
sub
add
aaa
outsl
scas
or
add
dec
repnz
daa
and
js
sub
add
adc
test
dec
dec
jg
daa
sub
add
adc
repz
dec
add
inc
je
and
shrl
dec
das
add
fsubrs
push
ret
incb
mov
xor
cmp
das
lock
pusha
sub
push
pop
popa
test
pushl
ss
mov
add
xlat
aad
add
cwtl
xchg
lock
push
mov
lock
push
jae
fldt
add
scas
mov
std
dec
adcl
cmp
mov
push
jae
fldt
pop
mov
test
std
push
mov
xchg
or
stos
imul
mov
fldt
or
pop
or
cmpsl
aas
mov
pop
xor
xor
mov
pop
test
std
push
mov
enter
dec
ss
dec
das
add
sti
add
aas
cltd
add
pushf
push
sub
mov
pop
add
jg
mov
clc
mov
mov
xchg
add
aaa
add
inc
outsl
cmc
inc
outsl
sbb
arpl
ss
add
push
mov
clc
clc
dec
imull
xchg
dec
inc
rcrb
test
jbe
add
xor
or
in
call
movsl
je
push
push
imul
mov
call
das
add
jns
or
push
pop
sub
lods
jno
jne
mov
push
out
sub
imul
test
incb
mov
or
sbb
cmp
rolb
mov
dec
jl
scas
jle
gs
jl
mov
inc
xor
add
clc
test
std
push
mov
mov
xlat
sub
rcrl
lahf
aaa
add
inc
pop
push
in
pop
push
mov
jns
andl
add
ja
add
das
add
push
mov
or
scas
lea
mov
lock
dec
mov
dec
das
add
inc
adc
lods
das
add
dec
das
sti
mov
or
add
or
add
mov
jmp
enter
jno
sub
ja
aaa
cltd
movsl
add
test
dec
mov
sbb
xor
add
dec
das
add
mov
xor
mov
jnp
pop
push
out
sub
imul
mov
out
mov
dec
das
add
mov
mov
dec
mov
or
fwait
daa
sub
shrb
stc
clc
arpl
mov
mov
loopne
dec
das
add
lahf
sub
js
out
ret
cltd
add
adc
mov
std
je
xor
mov
sub
rorl
mov
outsl
add
dec
outsl
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
xor
insb
mov
push
js
hlt
loope
je
xor
jnp
daa
adc
and
sbb
loopne
addr16
xor
dec
sub
sub
inc
sub
mov
das
add
dec
pop
cmp
scas
dec
push
insb
lods
xchg
das
add
dec
verw
dec
das
cli
scas
dec
das
add
dec
das
add
dec
das
adc
dec
das
add
dec
das
adc
dec
xor
mov
das
add
dec
das
add
dec
das
add
dec
xor
mov
das
add
dec
das
adc
dec
das
adc
dec
pop
add
dec
das
add
dec
das
add
dec
out
mov
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
push
sub
test
mov
das
sarb
dec
das
cli
scas
dec
das
add
dec
das
add
dec
dec
add
jp
add
dec
das
mov
mov
das
hlt
scas
dec
das
add
dec
das
add
mov
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
das
add
dec
push
lret
mov
dec
pop
add
mov
mov
cmp
add
lret
das
add
jl
gs
aas
mov
sub
arpl
xchg
pop
shr
gs
and
into
aaa
or
add
or
jge
js
dec
pop
dec
out
call
ja
subl
mov
test
and
insl
xchg
sub
jo
xor
cmpsl
dec
jmp
push
stos
xor
aas
add
dec
push
shlb
or
adc
push
xor
mov
sub
add
inc
mov
mov
repnz
cmp
mov
loopne
out
inc
ss
mov
out
mov
test
xchg
js
inc
das
add
sbb
out
mov
das
mov
shrl
inc
mov
mov
xchg
push
mov
clc
mov
mov
sarl
xchg
xor
arpl
lock
repz
add
test
sti
idivl
add
sub
mov
dec
mov
ss
mov
add
inc
mov
jmp
or
xchg
mov
dec
mov
stos
mov
sahf
xor
jb,pn
add
dec
pop
outsl
out
sub
jnp
mov
add
sarl
mov
pop
jno
sub
test
out
mov
mov
pop
cmp
shlb
mov
mov
push
outsb
mov
sbb
mov
in
mov
mov
das
add
dec
das
add
shlb
mov
pop
orl
lahf
pop
mov
push
outsb
lds
invd
mov
cld
insb
mov
mov
out
rcrl
test
pop
mov
add
inc
xor
xor
std
mov
dec
lods
xorb
test
add
jmp
sub
mov
add
dec
das
add
std
sbb
in
dec
das
add
inc
mov
mov
arpl
lock
nop
push
push
cmp
ss
mov
pop
pop
sti
dec
sub
mov
dec
pop
outsl
out
sub
jnp
add
and
and
mov
push
icebp
cmpsb
mov
add
mov
or
mov
das
xor
sarl
aaa
mov
sti
mov
movsl
dec
mov
stos
aam
push
sub
mov
movsl
dec
sbb
stos
std
push
subl
cmp
lods
repnz
stos
std
push
jmp
outsl
repnz
jg
pop
lods
xlat
and
mov
xor
cmp
mov
xor
rolb
arpl
or
nop
push
push
cmp
ss
mov
pop
pop
add
mov
mov
pop
outsl
in
sub
jp
test
out
sti
out
inc
cltd
shll
inc
mov
adcl
das
stos
mov
insl
lods
lods
dec
das
add
pop
subl
sbb
mov
pop
xor
jns
pop
std
xlat
add
mov
xor
xor
sarb
add
xchg
pop
mov
dec
outsb
mov
sbb
mov
aaa
xor
xchg
push
ss
pop
add
enter
dec
lret
dec
das
jmp
scas
adc
pop
jo
sub
mov
mov
mov
das
add
sbb
hlt
cmp
mov
dec
lock
add
outsb
mov
sbb
cmp
ss
mov
pop
pop
sbb
mov
cld
mov
add
inc
xor
fists
mov
movsl
inc
mov
pop
dec
or
inc
movsl
shll
mov
mov
sti
mov
mov
push
sbb
mov
xchg
xor
adc
rcll
sbb
add
shlb
adc
stos
mov
loopne
mov
das
add
xchg
pop
mov
fdivrs
xor
rolb
arpl
or
nop
push
push
cmp
ss
mov
pop
pop
add
mov
mov
pop
outsl
in
sub
jp
je
aaa
inc
sbb
fdivrs
jmp
cltd
inc
pop
mov
mov
cmp
ror
mov
das
add
push
mov
add
mov
rorl
aaa
mov
add
mov
pop
or
push
orb
dec
das
jmp
scas
or
inc
cltd
rorl
shll
add
add
jmp
add
mov
fdivs
hlt
mov
pushf
aaa
adc
ja
test
enter
or
mov
idivl
rol
dec
das
cmc
mov
das
add
push
mov
add
mov
rorl
aaa
mov
add
mov
pop
or
push
adcb
dec
das
jmp
scas
adc
sahf
mov
mov
mov
dec
test
dec
aaa
stos
or
test
add
jmp
mov
mov
xor
mov
push
cmp
repz
cld
aaa
add
mov
rolb
ja
push
das
add
adc
cmpsl
mov
faddp
xchg
inc
mov
push
mov
xchg
or
jmp
add
jle
mov
stc
pop
mov
outsl
push
sub
mov
insl
aam
dec
das
add
invd
mov
das
mov
in
inc
xchg
fildl
dec
das
add
add
dec
mov
ljmp
stos
xchg
mov
push
mov
rcrl
jl
push
push
mov
add
inc
xor
aaa
cmp
jmp
aaa
push
icebp
cmpsb
mov
add
dec
push
inc
test
mov
jmp
shr
rcr
rcll
cli
xor
sub
lahf
filds
cmp
xor
mov
insb
lods
mov
or
sub
fsts
sarl
jmp
test
mov
out
cmp
mov
das
add
ja
mov
dec
outsb
loop
adc
mov
cld
insb
mov
mov
out
cmp
pop
sti
dec
sub
mov
dec
pop
outsl
out
sub
jnp
cmp
fdivs
jmp
lcall
test
xor
sub
dec
mov
add
add
scas
enter
adc
cmpsl
xor
mov
pop
mov
sarb
mov
insl
adcl
xor
ret
mov
arpl
lock
nop
push
push
cmp
xor
mov
xchg
xor
or
mov
mov
out
cmp
mov
clc
inc
cmp
inc
add
sarb
xchg
xor
arpl
lock
nop
push
push
cmp
ss
mov
or
push
orb
dec
das
jmp
scas
adc
clc
stos
xor
lahf
psubsw
inc
pop
mov
jle
mov
shlb
std
je
and
outsb
mov
lock
xor
sti
jb
cmpsl
mov
inc
mov
cld
mov
cmp
cmp
jl
xchg
stc
pop
mov
roll
mov
push
data16
dec
arpl
push
xchg
ljmp
movsb
push
sub
pop
sti
outsl
inc
mov
inc
jg
cmpsl
mov
enter
mov
dec
xchg
cld
popa
dec
fisubrs
lret
icebp
andb
push
and
call
lods
xor
mov
jge
lods
xor
movl
inc
cmp
out
mov
mov
push
mov
sub
scas
lea
cld
dec
je
aam
in
pop
outsl
aam
and
das
sub
loopne
xchg
push
cli
scas
dec
xchg
lea
daa
das
mov
mov
mov
ljmp
cmp
xchg
js
jmp
out
and
incl
bound
cld
out
mov
dec
out
cmp
add
cltd
and
sbb
sub
jge
xchg
xlat
sbb
out
mov
clc
push
mov
aaa
rclb
mov
jge
int3
jb
jecxz
fcoml
dec
sbb
dec
inc
mov
cld
sarl
xchg
imul
dec
mov
int3
lods
cmc
out
std
fldt
loop
add
pop
outsl
imul
call
jo
rcr
je
scas
shlb
cmc
lcall
bound
imul
imul
mov
push
stos
add
push
repz
sub
xchg
imul
mov
adc
out
jmp
test
aam
mov
add
insb
repnz
aaa
pushf
repz
test
cmp
xor
sti
push
ror
push
or
daa
pusha
inc
xor
sbb
sub
or
jo
or
clc
enter
mov
sbb
das
xor
fucom
cmove
cmp
and
enter
cmpsb
cmp
dec
mov
cmp
cli
test
les
dec
shrb
aam
adc
pusha
cmp
es
sbb
cld
test
sbb
and
iret
xchg
outsb
dec
jae
pusha
lcall
cmp
movsl
push
xlat
push
das
mov
cmp
mov
test
lahf
loop
cmpsl
cli
mov
fisubrs
mov
fidivl
arpl
cmpl
and
dec
ds
jne
sarl
arpl
push
xor
sub
test
gs
mov
movsl
xchg
jl
repz
cld
pop
scas
lahf
and
jmp
cmp
das
outsb
pusha
and
lcall
cltd
mov
dec
mov
jl
or
lret
xchg
add
inc
push
jbe
add
pop
mov
mov
dec
jne
clc
mov
aaa
call
mov
arpl
and
xor
fists
pop
mov
mov
and
mov
ja
add
iret
push
xchg
xchg
fs
sbb
cmp
inc
shll
test
sbb
xor
mov
stc
lods
in
jnp
adc
or
mov
mov
test
jmp
xlat
pushf
das
mov
icebp
enter
inc
xor
imul
mov
mov
outsl
decb
pop
imul
lock
xor
fdivs
adcb
sbb
bnd
jnp
mov
xor
jmp
adc
cmpsb
and
idivb
lret
imul
fmuls
xor
inc
mov
movsb
xor
sub
orb
pop
xchg
shlb
insl
adc
loop
mov
lods
test
fsubl
push
out
iret
jg
addr16
aaa
jbe
wbinvd
push
cmp
scas
push
clc
sbb
jno
adc
aaa
cltd
jp
or
ret
or
lret
std
shlb
pop
push
adc
nop
sub
pop
out
fnstcw
fwait
and
xchg
bound
hlt
xchg
sbb
xchg
cmc
sub
bound
mov
mov
outsb
jmp
icebp
adc
es
and
jo
cmpsl
les
outsl
jl
sbb
mov
js
arpl
add
push
out
cwtl
out
rclb
nop
push
test
aas
push
ror
inc
mov
dec
cmpsb
cmc
stc
stos
xchg
or
jecxz
in
enter
or
shlb
dec
pop
movsl
mov
xchg
aaa
sbb
and
jl
aam
movsl
popf
push
fwait
pop
inc
pop
mov
pop
mov
dec
cmp
mov
out
bound
xchg
mov
rcl
orl
xchg
push
popa
pushf
mov
sub
cmc
fisubrs
inc
arpl
dec
imul
mov
push
adc
js
xor
jl
cmp
or
outsb
cld
sbb
lahf
fst
mull
hlt
fistpl
fnstenv
pop
ret
std
jl
xor
mov
xchg
xchg
add
mov
cmp
sbb
ret
or
sbb
or
fcoml
outsl
add
mov
or
ljmp
mov
push
loop
pop
sub
sub
jbe
pop
jg
pop
sub
insb
fistpl
fisttpl
jmp
andl
insb
pop
stc
call
jg
pop
adc
nop
fstl
sti
lods
dec
add
lds
sbb
push
mov
mov
mov
cmp
mov
mov
mov
mov
cmpsl
mov
outsb
sarb
pop
jmp
pminub
sbb
xchg
xchg
popa
clc
jbe
xor
mov
pop
sti
call
leave
scas
test
into
enter
pop
cli
ja
inc
fistl
cs
and
and
xor
lods
jnp
mov
adc
or
movsl
in
sahf
int3
addb
sbb
lea
iret
or
mov
incb
jnp
pop
jnp
jns
sbb
adc
xchg
and
in
push
sub
mov
mov
inc
push
inc
and
mov
push
xor
cmp
add
jl
movsb
sbb
or
and
fisttpll
lds
mov
insl
cmp
daa
or
inc
in
push
sub
inc
inc
iret
mov
cld
cmp
js
add
out
in
mov
sbb
leave
fs
fldenv
push
sti
ret
repz
rcrb
ficoml
sbbb
xchg
mov
cmc
int3
adc
mov
jmp
dec
and
xchg
loopne
push
leave
inc
repz
fdivrs
addl
mov
popa
xor
andb
dec
jp
fstpt
or
loope
arpl
mov
lods
push
xchg
push
shrl
shlb
mov
or
pop
mul
xor
adc
pop
or
stc
fisubl
outsl
xchg
pop
fdivs
mov
out
pop
and
push
sbb
sbb
sbb
sbb
je
mov
ljmp
or
sub
shll
imul
neg
add
sub
repnz
mov
jl
add
cld
fistpl
push
cli
nop
inc
popa
in
xor
mov
inc
in
pop
imul
loopne
sub
xor
adc
mov
fwait
and
inc
push
add
sub
fwait
mov
fcomi
syscall
xchg
loop
sbb
movsb
stos
lods
faddl
add
cmp
mov
popa
mov
enter
idivl
mull
aaa
in
sub
ret
xor
std
jmp
jb
frstor
jno
cs
push
cli
inc
fs
mov
es
test
jmp
sbb
add
xor
scas
into
jnp
cmp
hlt
lcall
jns
outsl
pop
lds
push
std
or
pop
in
pop
mov
out
mov
pop
inc
or
ja
xor
dec
mov
sbb
test
int3
inc
mov
dec
movl
cmp
push
stc
xor
cmp
jns
std
orl
fs
or
insl
aam
pop
fbstp
jb
mov
in
xchg
mov
int3
push
or
sbbl
push
inc
cmp
lock
xchg
enter
nop
or
insb
xor
push
inc
test
test
and
or
pop
imul
shll
pop
dec
cmp
mov
cmp
popa
lret
sub
jl
adc
cmp
pop
cmp
aad
xchg
inc
in
mov
push
dec
or
inc
les
xor
pcmpeqb
pushf
adc
mov
push
push
repz
loopne
jg
insb
cwtl
cli
cmp
sbb
mov
stos
sbb
adcl
repz
push
and
push
int
scas
mov
or
xchg
or
sysret
or
sbb
inc
mov
cld
jle
enter
addr16
jno
lcall
mov
adc
loope
or
inc
pop
jge
and
gs
insl
in
push
mov
aaa
mov
iret
or
mov
daa
xor
or
or
push
int
add
leave
hlt
xlat
inc
add
scas
lods
dec
call
adc
add
sub
jl
push
add
jmp
outsl
pop
or
or
ss
popf
out
movsl
dec
fdivs
push
ja
mov
cmpsl
fcmovnu
fstpt
popf
ljmp
mov
mov
in
lret
adc
out
push
cmp
dec
or
mov
or
sti
sub
cltd
pop
xlat
stos
xchg
push
and
pop
lret
add
call
pusha
xchg
or
cmpl
push
push
mov
xor
mov
inc
mov
test
xchg
aam
aaa
movsl
xlat
fdivrl
mov
sub
aaa
xchg
das
cmp
stos
pusha
popf
adc
adc
sub
into
pop
jne
int
shll
pop
das
xor
jno
mov
lret
mov
push
pusha
mov
mov
inc
add
sub
xchg
sbb
jge
jns
ret
jg
rol
add
aad
aad
inc
scas
xchg
call
dec
clc
mov
mov
cmpsb
adc
stos
cmpsl
in
dec
imul
pop
cmp
push
cwtl
mov
xchg
push
dec
sahf
jo
call
lock
cltd
movsl
lods
movsl
jb
mov
mov
adc
ret
jp
jne
out
cmpsb
movhps
in
inc
push
jne
lret
lahf
ja
or
dec
jno
stos
jmp
add
mov
push
out
sbbl
or
push
cld
popf
stc
sbb
pop
movsb
pusha
inc
roll
adc
repz
jnp
outsb
fwait
andl
push
loop
pop
adc
cmp
adc
and
fdivs
sub
xchg
dec
xchg
xchg
sbb
jle
rcll
cmp
ss
cmc
nopl
inc
loop
lret
inc
mov
push
and
sub
xchg
repz
data16
pop
fisttpl
cmpsl
pop
loope
mov
lock
mov
cmp
ds
mov
push
repnz
jl
or
sysexit
add
data16
push
mov
dec
mov
push
inc
pop
stos
sarb
lods
les
scas
cltd
jge
rclb
xor
pusha
sub
dec
sub
inc
cmpsb
mov
pop
in
dec
repnz
je
scas
sub
pop
insl
sub
iret
mov
dec
cmc
gs
push
rcl
dec
cmpsl
or
and
fwait
pusha
xchg
ja
sahf
mov
inc
ficoml
sahf
lcall
push
push
mov
and
push
jnp
cmp
sbbb
push
mov
jae
fwait
not
sbb
popa
inc
add
iret
and
nop
aaa
fistl
movsl
and
fldl2e
pushf
popa
cmpsl
push
aas
cmp
mov
mulb
daa
mov
popf
fildl
pop
int
shrl
lahf
mov
push
cld
nop
das
mov
mov
or
hlt
adc
adc
dec
add
stos
in
push
lret
cmpsl
jmp
jmp
cmp
xchg
popf
faddl
imul
fcompl
das
push
push
sub
scas
leave
test
enter
xor
pop
mov
inc
adcl
in
mov
sbbw
sarl
in
divl
imul
inc
mov
lea
scas
and
mov
jle
mov
loope
stc
push
shll
and
push
cwtl
mov
popf
cmpsl
jg
test
icebp
mov
xor
mov
cmpsl
lahf
add
inc
orl
pop
dec
adc
mov
and
or
pop
jmp
es
push
shrb
iret
clc
xchg
xchg
mov
pushf
xchg
adc
sub
sbb
sub
xchg
cmp
jl
orl
sub
into
cmp
jl
xlat
jp
out
or
cmp
inc
into
inc
add
imul
loop
push
fstpl
mov
ja
cmp
loope
in
add
xchg
insl
sbb
cs
jae
in
int
mov
pusha
jnp
inc
sbb
int
outsb
push
cs
dec
cltd
data16
add
test
jmp
insl
adc
or
xchg
je
push
js
addb
lods
rclb
in
ljmp
movsl
xor
dec
mov
mov
in
leave
cmc
fsub
pop
cli
jne
adc
cmp
jl
es
movsl
int3
outsl
inc
les
sub
jg
fdivrl
test
lods
stc
cmp
jne
mov
xchg
arpl
insl
ja
or
leave
cltd
icebp
shl
jne
ss
mov
sbb
outsb
addr16
imul
or
in
xlat
jne
and
fdivrs
leave
pushf
xor
push
cmpsl
fs
out
insl
xorl
add
pop
movsb
push
and
loop
adc
jno
add
loop
xchg
loope
mov
rcrb
sldt
fs
mov
test
xchg
shll
pop
mov
int
mov
cmp
mov
and
aad
call
ds
fwait
mov
out
popa
int3
inc
lods
and
xchg
jp
stc
int3
dec
mov
dec
sar
loop
add
xchg
outsl
push
mov
jne
push
cmp
dec
rorl
out
bound
insb
lea
pop
dec
dec
add
arpl
add
xor
fstps
dec
push
add
pop
dec
mov
fwait
mov
cmp
xchg
add
repnz
push
inc
test
hlt
bound
inc
jno
jne
or
cmpsl
in
cmp
pop
or
notl
lret
cld
jecxz
ss
aam
add
enter
nop
movl
inc
mov
jp
lahf
sbb
lret
in
or
mov
add
call
lahf
mov
adc
push
sub
rol
xchg
aam
ret
insb
inc
adc
mov
mov
pop
push
filds
pusha
mov
sbbb
fsubrs
insb
inc
stc
push
sbb
stos
lcall
out
fs
jp
pushf
xchg
mov
inc
pop
cmp
fildl
mov
jbe
xchg
adc
movsl
xchg
mov
adc
push
dec
loopne
cltd
lahf
int
xchg
mov
lret
cs
push
je
insl
sti
push
ret
rorl
je
inc
fnsave
iret
loop
ret
sbb
ljmp
dec
or
ficomps
aas
cs
inc
push
adc
inc
pop
jmp
pop
mull
push
sbb
cmpxchg
movsb
mov
sub
adc
lcall
fcmovnb
xchg
in
clc
sub
negl
cltd
aam
pop
je
xor
adc
sbb
mov
and
testb
adc
push
mov
adc
cmpb
mov
adc
pop
dec
out
ror
shll
cmp
cmpsl
mov
sbb
dec
xchg
and
adc
andb
fnstenv
xor
mov
lock
shl
xchg
xorl
rcrb
cltd
fisubrs
bound
add
jl
rcrl
jno
add
xchg
movsb
dec
mov
imulb
shrl
ror
jb
test
mov
mov
dec
int3
sub
rorl
xor
or
out
nop
dec
sub
call
mov
or
int
fbld
icebp
cmpsb
es
lds
mov
add
sub
dec
outsb
dec
lahf
or
into
das
jno
aaa
in
in
inc
jp
pop
pop
pop
pop
pop
cmpb
jnp
jle
mov
add
jae
xor
fwait
pop
xchg
lret
je
lods
jmp
aas
cwtl
out
push
lods
sbb
pop
shr
inc
xchg
ss
invd
lods
divl
es
out
dec
dec
push
inc
push
mov
add
int
nop
push
or
rclb
out
pop
mov
xchg
rclb
xchg
cmpsl
fistpl
xchg
xlat
mov
lahf
popa
push
fnstcw
adc
out
inc
insl
jmp
nop
cmp
adc
xchg
xchg
repnz
add
push
clc
fsts
es
ficomps
pushf
jg
cltd
movsl
aas
je
arpl
pop
xor
ja
test
loop
mov
dec
add
scas
xchg
jno
not
repnz
popf
xor
sub
sub
mov
pop
xchg
test
sbb
bound
push
xchg
push
cmpsb
xchg
pop
cs
into
jo
inc
adc
negl
imul
sub
mov
xor
or
rcrb
pop
out
and
cltd
adc
fnstcw
or
insl
push
jo
push
dec
es
or
inc
insl
cltd
call
lcall
jno
adc
push
jl
mov
test
jmp
stos
push
sbb
je
daa
cmpsl
fmul
inc
cmovge
imulb
mov
fiadds
inc
inc
imul
mov
push
add
inc
ds
cmovb
loop
imul
mov
das
and
leave
sub
les
cmp
out
mov
repz
stos
jne
xchg
int3
sbb
shlb
jmp
cwtl
fdiv
inc
out
xor
dec
or
jle
lret
lret
mov
mov
inc
adc
or
dec
jmp
test
lcall
and
mov
test
imul
inc
and
call
push
lret
ljmp
cmpsl
jmp
mov
cmp
and
jbe
cli
push
add
ret
ret
fwait
je
ljmp
push
sbb
and
mov
sbb
inc
add
sarb
xchg
inc
sub
setne
and
pop
lcall
mov
jnp
mov
cld
repz
lret
mov
pop
or
push
dec
out
lds
and
adc
jae
cwtl
ljmp
loopne
push
jmp
xchg
icebp
dec
lock
jge
fwait
sbb
insl
or
mov
inc
std
push
nop
xchg
xorl
mov
stc
jl
mov
push
sub
xor
dec
jge
aam
add
sbb
daa
les
lock
mov
ljmp
push
sub
or
das
and
hlt
and
aaa
mov
stos
jmp
subb
icebp
loope
in
jae
push
fldcw
loope
clc
mov
in
lods
sti
sub
jns
repnz
insl
ret
fsub
repnz
repnz
push
cmp
push
arpl
dec
fiadds
dec
jae
test
lds
lods
lds
mov
push
adc
pop
cmp
mov
add
mov
adc
xor
into
and
cmpsl
ljmp
pushf
ret
mov
jo
and
mov
inc
or
inc
inc
or
add
push
imul
adc
aad
cmc
and
or
ljmp
jne
mov
adc
jno
rcr
jno
and
clc
insl
js
pop
xor
stos
mov
repz
leave
cmp
mov
mov
rcrb
cmp
cmp
cltd
or
xchg
xor
cmovp
sub
sti
out
stos
jae
add
mov
pop
es
cmp
rcrb
xor
gs
sbb
push
stos
mov
cli
or
mov
mov
mov
int3
mov
lcall
std
cmc
xchg
je
mov
mov
in
push
cmp
dec
sub
xchg
jne
xchg
sub
fwait
rcrb
inc
out
pop
cltd
sub
popf
call
mov
rorl
int
orb
fstl
xor
pop
mov
in
aad
fstl
shlb
jge
je
mulb
lds
inc
gs
mov
add
jl
les
clc
xchg
scas
inc
dec
imul
and
ret
jne
or
aad
adc
stos
push
jae
sahf
push
andl
aaa
sub
mov
pop
sbb
cli
push
lea
cmp
stc
and
xor
inc
div
push
and
mov
inc
jns
pushf
dec
cmp
push
pop
sbb
insl
int
sarb
pop
idiv
and
js
rorl
jmp
mov
outsb
arpl
cmp
pop
mov
or
push
bound
in
push
inc
xchg
test
repnz
lcall
daa
inc
test
lock
ror
inc
shrl
into
dec
shlb
outsb
dec
cmc
daa
push
inc
rolb
iret
test
sti
inc
bnd
setnp
ja
movb
dec
je
gs
test
std
dec
test
fwait
bound
and
sbb
mov
cltd
pop
mov
pop
adc
mov
fiaddl
mov
or
xor
ffreep
sub
mov
push
cltd
sti
arpl
stc
iret
push
xchg
mov
test
cmpsb
mov
out
xchg
push
lcall
cs
sti
cmc
cmp
adc
add
xor
adc
xor
outsl
xlat
pop
cli
loop
add
inc
pop
stos
jp
mov
cmp
enter
mov
xor
test
pop
mul
in
dec
jb
adc
sbb
orl
out
xchg
fs
lds
mov
sarl
sbb
xchg
test
push
adc
fnstenv
sbb
adc
leave
pop
pop
jmp
bound
mov
cmp
mov
ljmp
sub
loope
rorb
cmp
fmuls
mov
lret
fmul
sub
mov
sbb
insl
aad
iret
xlat
decb
add
jbe
mov
pop
xor
sub
push
sub
mov
xor
cmp
std
inc
xor
in
dec
popf
sub
cmpsb
mov
sbb
add
iret
test
mov
dec
pop
sti
push
aaa
or
mov
filds
mov
prefetch
mov
mov
into
icebp
jp
add
xor
push
ds
stos
mov
pop
push
out
in
movsl
jecxz
jnp
fmull
mov
lcall
xor
loopne
shlb
xchg
dec
das
push
loopne
shlb
lods
push
mov
dec
movsl
lret
mov
or
cmp
je
sbb
xchg
dec
mov
pop
mov
adc
xor
sbb
test
fnsave
arpl
fsts
enter
xlat
inc
inc
adc
dec
shll
daa
in
mov
sbb
je
mov
jp
arpl
sti
mov
outsb
mov
subb
xchg
lds
sbb
imul
xchg
sbbl
xchg
add
pushl
push
ja
fsts
pop
jp
pop
xor
mov
push
sahf
rcr
sub
daa
jp
mov
rclb
push
inc
popf
mov
bnd
xorb
pusha
clc
sub
pushf
dec
dec
cs
push
ficoml
mov
test
insb
out
mov
cwtl
add
and
pop
mov
sub
cmp
push
and
or
mov
out
or
dec
adc
data16
stc
mov
inc
div
push
dec
rclb
inc
pop
pop
sbb
test
das
repnz
insl
lret
jl
sti
sbb
xlat
lds
and
jle
pop
xor
jo
dec
mov
pushf
movsb
shrb
fsubrl
push
std
int3
jne
rcrl
fsubrl
cltd
arpl
xor
insb
ret
aam
push
fisubl
lahf
mov
scas
xchg
dec
inc
add
xchg
ljmp
rcr
push
insb
fistps
xor
push
dec
repz
sbb
cmp
sub
sub
arpl
out
or
aas
adc
pop
mov
cmpsl
test
ja
inc
jecxz
jmp
mov
fnstenv
dec
mov
lcall
int
mov
add
or
js
into
sub
xchg
cmpsb
andl
sbb
subb
outsl
mov
xor
cmc
sti
dec
mov
xor
jns
sub
sub
push
loopne
outsl
in
add
leave
inc
sbb
mov
sarl
fisubs
sbb
add
hlt
sub
mov
or
push
imul
fs
data16
lret
out
shlb
insb
fists
xor
rorl
outsb
jmp
into
imul
mov
adc
popl
jns
pop
ss
mov
mov
out
test
loope
sub
dec
xor
jle
stos
jmp
shr
sbb
xchg
loope
sub
adc
xor
cmp
dec
pop
mov
jp
cmc
cwtl
jns
inc
xchg
movsl
xchg
xchg
dec
jbe
xchg
shl
bound
sbb
adc
faddp
pop
push
push
or
fsubl
add
pop
popa
mov
les
imul
repz
in
cltd
aaa
xlat
xchg
testl
sub
jecxz
outsl
jge
push
mov
or
incb
push
mov
xchg
and
sub
lock
loop
fs
xchg
popa
pop
idivb
and
xorl
pop
cmp
sbb
int
loop
mov
jge
andl
sub
add
cwtl
sbb
add
arpl
movsb
push
sub
movswl
mov
add
sub
ret
fwait
adc
jge
enter
mov
insl
cmp
xchg
hlt
sahf
push
fwait
cmp
inc
sbb
mov
sbb
jne
mov
jle
daa
adc
inc
pop
out
xor
sbb
xor
add
push
popa
stos
test
das
sbb
push
push
aas
jb
or
int
fcoml
jno
call
or
fisubs
jl
imul
repz
and
movsl
mov
popf
sbb
lret
cmp
push
cmp
out
add
push
dec
inc
mov
jno
or
cmp
pop
pushl
lcall
scas
mov
mov
pop
lcall
nop
push
xor
enter
jb
aam
mov
ds
add
addr16
add
das
mov
add
ud0
adc
ret
out
jns
dec
mov
pop
stc
jo
jle
jbe
mov
ljmp
fildl
push
and
add
scas
lods
cli
mov
arpl
lock
sbb
sar
out
aaa
ljmp
aam
xchg
arpl
aaa
xor
push
lods
xchg
in
mov
xchg
fiaddl
dec
jnp
jno
orl
mov
xchg
hlt
scas
jle
loopne
nop
notl
ja
xor
push
mov
dec
cmp
stos
cmpsb
dec
dec
insb
mov
je
push
leave
sbb
call
mov
adc
dec
cmp
xchg
xor
imul
orb
gs
jns
int3
pop
aas
or
cli
fbstp
fdivrl
mov
and
ja
fcoml
pop
lods
adc
xor
inc
cmp
lods
jno
enter
cmp
gs
test
mov
and
add
push
xchg
mov
xor
mov
jmp
les
mov
cmp
xor
xchg
test
xchg
loopne
repnz
adc
ljmp
lds
or
jb
mov
mov
call
cli
push
test
jne,pn
stos
jg
or
xchg
loop
cs
cmp
inc
shrl
lret
inc
pop
mov
xrstors
mov
add
add
inc
and
or
push
add
cmpb
in
lea
test
xchg
outsl
jbe
mov
std
pop
and
mov
mov
dec
movsl
push
mov
lods
aaa
pop
das
imul
scas
and
push
pop
sti
inc
add
mov
out
inc
jnp
jbe
in
adc
cmpsl
dec
mov
ljmp
sub
cmp
aad
and
aad
js
ja
push
jg
je
in
cmp
sub
divl
dec
decb
sbb
pop
sub
jg
cmp
repz
arpl
scas
pop
int
push
cld
sbb
loope
dec
add
inc
xchg
push
push
aad
les
dec
dec
jb
ljmp
testl
enter
mov
imul
imulb
sub
inc
pushl
and
test
mov
cmpsb
stos
negb
pop
sub
adc
pop
sbb
icebp
pop
out
sub
jno
gs
push
pop
inc
fsubrl
jecxz
cwtl
mov
mov
sete
cwtl
pushf
jae
dec
lcall
jns
scas
and
fwait
xchg
negb
and
cld
lock
xor
lock
cmpsl
mov
push
cmp
sarb
int
into
test
xor
scas
fcomp
loop
jno
push
push
les
mov
lahf
jge
pop
int3
mov
fcmovb
fisttpll
pop
mov
mov
negl
das
mov
pop
mov
mov
outsb
add
in
pop
push
sbb
jmp
mov
mov
ficoms
xchg
mov
jecxz
sbb
js
mov
mov
add
lods
mov
jmp
js,pt
fldl
cmp
jns
pusha
shlb
add
ficompl
xchg
pop
ret
or
mov
sub
xchg
and
pop
xlat
push
cmpl
scas
rcrl
inc
cmp
cli
test
cld
int3
lret
mov
adc
sub
aas
mov
mov
ret
pushf
into
cmpb
xchg
jmp
inc
xchg
movsb
ljmp
mov
int
mov
pop
xor
jae
ja
or
xchg
push
xor
push
inc
shrl
xchg
add
sbb
iret
ret
das
dec
sbb
sub
in
int
mov
push
dec
or
jno
imul
cs
adc
add
insl
cli
xchg
inc
divl
mov
das
jo
cbtw
cmp
popf
push
adc
shrl
inc
ja
nop
sbb
xchg
popf
scas
lods
xchg
xchg
pushf
ficoml
sarl
add
mov
fisttpll
mov
pop
xchg
lock
and
cmp
mov
pop
add
dec
fdivl
das
aaa
mov
dec
in
mov
push
cmc
out
add
mov
iret
sub
aas
out
lcall
and
mov
pop
pop
xchg
sub
ljmp
fnstcw
dec
fidivl
adc
cmpsl
cmc
dec
sub
scas
sub
dec
mov
dec
inc
int3
rorb
daa
xor
loop
into
sub
adc
adc
cmp
mov
js
or
inc
xchg
gs
mov
gs
pop
pop
inc
pop
aas
and
cwtl
sahf
cmp
cmp
test
fwait
inc
aad
nop
mov
jnp
mov
dec
loopne
add
pop
mov
jbe
jl
repz
xor
int3
std
xor
mov
fisttpl
enter
arpl
dec
add
pusha
into
or
and
sti
adc
push
fmull
add
sbb
mov
ret
mov
dec
xor
fiaddl
sub
push
push
adc
imul
pop
divb
jmp
sub
sbb
pop
addr16
xchg
iret
and
mov
mov
or
insl
dec
xchg
inc
adc
cs
stos
arpl
xchg
or
ja
mov
add
mov
out
ficoms
ret
or
sub
xchg
sub
push
add
mov
mov
mov
shll
mov
cwtl
sbb
sbb
pop
inc
clc
mov
or
mov
jecxz
bound
call
jg
adc
loopne
xor
adc
pop
lahf
dec
rorl
lret
lods
fiaddl
or
cmp
or
sbb
dec
fbstp
mov
mov
xor
sarl
shrb
jge
data16
jmp
test
ficoms
jno
xchg
fs
data16
test
xorb
sahf
sbb
sbb
repnz
std
cmp
repz
dec
mov
xchg
mov
cmc
cs
test
gs
scas
pop
leave
lret
cld
fistl
icebp
jae
clc
cwtl
xchg
fbld
jnp
sub
mov
and
fidivrs
dec
push
xor
mov
dec
mov
fwait
adc
fcoms
push
and
inc
dec
addl
mov
push
incl
adc
or
inc
xchg
les
in
cli
rcll
cvtpi2ps
sub
pop
fwait
popa
dec
xchg
xchg
mov
shrb
lds
dec
js
bound
stc
sbb
or
fdivl
add
pop
pusha
jb
fldl
aad
out
out
fiaddl
lock
xor
mov
xor
or
inc
dec
out
fcmovnu
push
fsubrs
mov
mov
mov
shll
sahf
lods
lret
cmpsb
imul
movsl
leave
or
stos
mov
cltd
jg
adc
or
cwtl
aas
in
les
pop
popf
push
shll
jbe
inc
lods
movl
aad
ss
push
cmp
mov
popf
ret
add
adc
ja
jmp
aad
pop
mov
adc
sbb
test
cwtl
mov
mov
add
sti
notl
pusha
cs
test
xor
arpl
add
pop
shrl
leave
stc
outsb
arpl
xchg
or
cmpsl
cmp
xchg
aam
push
sub
adc
mov
gs
and
or
rcrl
lock
pop
rclb
out
lea
jns
data16
push
dec
or
dec
and
lahf
fwait
repnz
push
lret
pop
insl
out
pop
mov
add
xchg
mov
pop
or
add
xchg
xor
int3
sbb
mov
je
subb
or
cmc
repz
adc
pop
xor
pusha
mov
pop
ljmp
jmp
nop
movsb
cmp
int
mov
loop
sbb
cmpsl
pushf
insb
mov
inc
mov
popf
dec
xchg
push
xchg
push
leave
sahf
mov
testl
mov
bound
pop
outsl
xor
add
dec
add
aad
mov
int3
mov
inc
sbb
sahf
add
loope
dec
enter
dec
dec
xchg
inc
fs
adc
or
pop
outsl
addr16
cmp
cli
or
ja
adc
sub
lea
repnz
add
rcrb
outsl
xor
mov
scas
jo
inc
and
inc
sbbb
movsb
xchg
mov
iret
sbb
cmp
xchg
push
fnstcw
out
adc
mov
sub
mov
and
xorb
es
jae
aas
xlat
cwtl
dec
movsl
test
add
mov
sbb
mov
dec
dec
rcr
into
jle
dec
js
adc
jne
mov
sbb
inc
xchg
int
adc
mov
adc
movsb
cmp
lds
inc
xchg
lret
fists
popa
popl
clc
pop
imul
stc
inc
pop
add
sub
jo
jnp
lods
test
mov
sbb
daa
lret
jne
xor
je
mov
inc
out
adc
mov
mov
inc
dec
enter
or
push
push
idiv
sub
cmpsb
xlat
scas
call
adc
clc
adc
mov
ss
in
test
xor
testl
pushf
sbb
xchg
sti
fwait
xor
into
push
adc
adc
cmpl
and
jmp
enter
sub
fimull
out
mov
clc
outsl
adc
fdivrl
fidivs
push
lahf
repz
clc
and
mov
stos
in
fucomi
cmp
mov
out
mov
adc
push
rcr
and
jbe
mov
jne
ret
shr
sbb
sbb
sbb
xor
dec
push
adcb
mov
decl
pushf
daa
ja
dec
cltd
stc
mov
xchg
lgs
aam
in
pushf
inc
jbe
pusha
cmp
into
call
mov
push
push
inc
icebp
fs
pop
fbld
and
mov
cli
mov
and
arpl
fisttps
jns
int3
hlt
and
pop
movsb
xor
mov
pop
lds
sbb
cmp
sub
add
cwtl
cmpsl
test
std
int
int3
dec
push
jle
lcall
mov
xchg
imul
mov
sbb
pop
lock
shll
cmpb
push
and
xor
insb
shrl
in
mov
mov
adc
mov
popa
dec
scas
inc
xchg
repnz
stos
pop
sbb
ljmp
sbb
add
lea
enter
and
fcmovnu
mov
test
jne
xor
mov
add
stos
enter
lahf
inc
lret
loop
pop
in
push
mov
ja
push
and
subb
pop
and
xor
repnz
mov
test
out
cwtl
jnp
imul
xor
cmp
in
sbb
sbb
dec
repz
pushf
fs
inc
fldln2
add
lahf
fnstsw
outsb
mov
cmp
lret
pop
sub
sarb
aaa
pop
push
dec
sbb
lcall
or
adc
pop
mov
loope
fsubp
add
fcmovnu
push
fcmovnb
xchg
cld
sub
pop
fsubs
jle
dec
ljmp
jl
jg
hlt
and
fcomp
lods
sbb
push
mull
jl
mov
xchg
xchg
push
fimuls
cmc
repnz
stc
aad
inc
sub
dec
and
rol
mov
adc
stos
xchg
sub
xchg
test
stos
jl
add
adc
add
mov
pop
gs
or
in
insl
add
pop
xchg
dec
dec
inc
push
mov
clc
mov
aad
jne
in
xchg
aam
push
imull
push
add
outsb
outsb
pop
hlt
ret
hlt
or
ret
pushf
test
jmp
adc
dec
xchg
cs
push
xchg
mov
cmc
cmpsb
jae
push
fiadds
movsl
push
rol
js
ljmp
xor
cmc
outsl
pop
push
das
hlt
jg
aas
add
lock
das
std
mov
insl
jp
mov
push
fisttpl
lcall
lret
aas
pop
cli
test
jbe
push
add
mov
das
cmp
pushf
mov
mov
lock
inc
pusha
test
in
fs
int3
push
jb
sub
lea
xor
push
adc
add
push
je
jle
ds
cld
pop
push
mov
mov
xchg
xor
inc
xchg
push
outsl
add
mov
lds
mov
mov
rol
mov
push
lret
out
ficoms
or
push
enter
push
push
inc
test
lods
filds
sub
faddp
dec
mov
pop
and
scas
call
sbb
jns
fisubs
cmc
cmpb
popa
cmpsl
pusha
iret
inc
cmc
dec
pop
push
jge
lock
movsl
mov
test
jne
cmp
sbb
test
fdivl
dec
sbb
sbb
lahf
fsubl
inc
mov
jg
mov
lahf
sti
hlt
aam
cmp
jge
dec
mov
adc
cs
stos
dec
xchg
dec
adc
out
pop
lcall
imul
ficoms
push
mov
pop
arpl
flds
sarb
leave
mov
cmp
push
repnz
addr16
dec
dec
or
mov
jp
in
sbb
imul
outsb
fs
incb
jecxz
test
sbbl
lods
mov
loope
cmpsl
mov
xchg
xchg
pop
out
outsb
movsb
daa
push
andl
adc
movb
or
xchg
orl
and
sub
aas
out
aas
jl
push
popf
fisubrs
pop
fsubl
loope
xchg
sbb
and
sub
hlt
cmp
mov
mov
aam
mov
loope
dec
or
dec
loopne
xchg
xor
mov
call
add
sub
imulb
shr
or
pop
cmp
in
xor
pop
mov
and
or
insb
shll
out
pop
add
iret
mov
mov
sbb
cld
sbb
add
rorl
or
pop
test
addb
imul
cmpsb
ja
repnz
pop
mov
cmp
scas
sahf
orl
popf
rcrl
movsl
inc
daa
and
outsl
adc
ja
movsb
sti
push
insl
cmpb
test
sub
jbe
jmp
inc
pop
js
fdivl
fisubrl
pop
jp
pop
ret
mov
das
jne
sub
or
ret
or
sarl
push
icebp
dec
inc
or
mov
insl
mov
pop
adc
pop
sbb
mov
sti
dec
jno
or
flds
std
bound
loopne
xchg
shrl
xor
adc
les
cli
sbb
rolb
into
shrl
pop
div
dec
inc
or
add
push
and
outsl
xor
pop
dec
lds
popa
inc
mov
cmp
adcb
or
insl
dec
or
and
mov
es
push
stc
imul
xchg
add
and
dec
cmp
push
xchg
fimull
pop
outsl
daa
out
aam
add
pop
sub
pop
add
mov
outsl
xlat
push
rorb
xor
out
gs
mov
mov
in
into
or
popf
stc
das
mov
jnp
rclb
cmp
lods
in
adc
jbe
das
mov
fstpt
test
loop
pop
xor
test
cmpsl
jns
leave
mov
mov
jecxz
in
push
push
push
fimuls
ds
mov
and
loop
scas
js
and
orb
add
xor
dec
mov
leave
cld
nop
test
cmp
les
xlat
dec
push
xor
rcr
and
popf
push
and
xchg
push
pop
fadds
push
call
cmpsb
mov
cmp
ds
pop
rclb
fcomip
lea
xor
aam
inc
pop
pushf
pop
jne
mov
adc
movb
cmp
xorl
mov
repnz
aas
pop
sbb
xchg
or
out
into
cmp
adc
out
mov
clc
mov
push
mov
xor
push
xor
dec
add
icebp
and
adc
inc
adc
mov
vshufps
add
cmpb
shrb
sarb
imul
jo
cmp
cmpsb
movsl
inc
jg
fwait
icebp
cmc
push
neg
popa
push
mov
mov
iret
pop
jp
call
std
cmp
shr
fnstcw
or
dec
xchg
imul
shll
pushw
pushw
and
pop
rcll
mov
pop
scas
cmp
mov
sub
aam
or
cld
test
push
insb
stos
ret
jo
fstps
xor
xlat
shll
push
xchg
cmp
dec
addr16
stos
xor
in
cmp
adc
stc
inc
jle
orb
imul
filds
xchg
or
adc
jmp
divl
dec
mov
repnz
jge
ss
jae
cmp
cmpsl
push
mov
and
stos
push
ds
mov
mov
cltd
loop
cmp
mov
test
push
hlt
inc
mov
dec
mov
xor
aad
pop
adc
pop
lcall
sbb
push
sub
lret
add
mov
pop
inc
rolb
aam
scas
mov
movsl
cmp
pusha
addl
sub
fisttps
xchg
jecxz
outsb
int3
inc
add
mov
repnz
out
and
in
adc
stos
mov
movsl
xorl
jp
int
imul
mov
push
mov
les
cmp
sub
bound
jbe
mov
dec
cmp
ljmp
ljmp
jb
cmp
lods
pop
lea
rol
mov
push
scas
fsts
cltd
sub
xchg
loopne
scas
dec
and
adc
test
or
mov
adc
pop
xor
ret
loopne
mov
movsb
adc
cmp
xchg
xor
sete
repz
sub
jl
je
les
add
mov
pop
xor
stos
lods
pushf
hlt
xchg
mov
cmp
shll
dec
gs
push
ja
push
push
or
cmc
cmp
cmpsb
mov
mov
rolb
ss
xchg
jecxz
jg
cmp
lods
or
rol
icebp
fnstenv
dec
cli
loop
in
add
push
mov
cltd
out
sub
lds
add
es
lock
push
pop
mov
jle
jmp
jl
lcall
jp
subb
mov
scas
xchg
add
pop
dec
loopne
clc
mov
mov
sub
dec
leave
jge
mov
inc
testb
pop
xchg
lods
iret
pusha
inc
in
int3
pop
adcl
mov
sbb
in
lcall
stc
lret
rcrb
mov
insb
mov
sub
pop
push
pop
push
add
add
mov
push
cmp
push
dec
sub
push
xor
dec
in
in
and
call
stos
inc
or
leave
fcompp
mov
dec
cmc
test
jecxz
xor
add
addb
push
xchg
stos
push
and
xchg
scas
push
adc
pop
and
mov
addl
cmp
add
mov
mov
lods
aad
and
test
and
sbb
das
aas
dec
pop
sbb
push
pop
aad
push
subb
ss
mov
push
ljmp
out
add
inc
xchg
sti
xchg
inc
iret
out
std
repnz
jbe
imul
nop
enter
pop
insl
xchg
inc
out
inc
gs
ficoms
sahf
loope
jno
scas
push
adc
adc
jmp
pop
jb
aad
mov
xchg
inc
sbb
lahf
adc
mov
inc
fstpt
std
cli
cmp
pop
pusha
push
mov
fidivrs
nop
mov
or
aaa
shrb
lahf
lock
xor
push
jecxz
pop
xchg
xor
in
dec
mov
mov
insl
add
jg
test
inc
pop
repnz
pop
dec
lcall
mov
adc
outsb
aad
jb
xor
aaa
cmc
mov
popa
scas
lods
pop
sbb
pusha
fs
pop
out
and
je
cwtl
mov
and
mov
hlt
addr16
push
iret
push
sbb
jl
jb
jne
in
dec
loopne
lcall
push
sub
cmp
mov
xchg
aad
push
leave
adc
push
mov
dec
loope
cmc
xlat
cmpsl
xlat
adc
cltd
xor
mov
in
jge
daa
je
sub
or
pop
push
inc
xchg
dec
or
mov
mov
notb
dec
mov
and
les
mov
and
movsb
repnz
mov
mov
leave
push
add
fildll
mov
xchg
inc
pop
lret
outsb
inc
daa
add
loope
adc
loope
subl
xor
ljmp
fwait
xchg
sbb
movsl
lahf
setne
dec
jne
push
mov
jl
daa
inc
dec
cmp
pop
sbb
loope
and
xor
add
lret
sub
aam
fnstsw
rolb
into
leave
call
incl
push
fistpl
shl
in
mov
std
repnz
sub
cli
mov
dec
mov
and
bound
or
pop
jbe
call
enter
inc
js
xor
lds
scas
je,pn
jge
lret
cli
pop
sub
fxch
xor
imul
jmp
lock
xchg
icebp
mov
das
outsb
fwait
test
loopne
loope
push
mov
sahf
or
scas
or
pop
push
ficompl
push
mov
push
adc
xchg
sub
cmp
enter
jnp
pop
mov
lock
loope
stos
outsl
bound
add
les
iret
push
aam
jb
inc
mov
mov
mov
scas
lods
mov
mov
sti
rcrb
in
ss
add
mov
and
sbb
dec
or
sbb
cmp
out
repz
sbb
outsb
into
pushf
in
add
lods
je
push
jne
aad
je
cmp
mov
mov
cmp
out
pop
cmp
dec
les
adc
nop
or
inc
push
mov
jb
aam
push
lods
int3
test
les
cmp
dec
mov
je
add
mov
fsubs
jno
jmp
mov
xor
add
cmp
popf
push
and
push
push
cs
mov
pop
sub
lcall
pop
rclb
imul
js
in
les
xchg
shrl
cmp
mov
pop
lock
dec
cli
or
cmp
push
fisttpll
and
xchg
in
adc
mov
and
mov
cmpl
icebp
push
dec
stos
jge
sahf
push
fwait
inc
data16
adc
gs
xor
ss
lods
incb
cmpsb
insb
mov
mov
or
outsb
lcall
lret
sahf
xchg
int
ficoml
sub
cmp
stos
sub
jmp
add
inc
mov
sbb
rcrl
xchg
mov
cmpsl
xlat
mov
and
ret
in
xchg
jmp
fwait
sar
cmp
mov
ljmp
mov
stos
lods
pop
mov
data16
push
in
test
repnz
push
es
fmull
les
push
outsb
dec
shll
test
pop
in
jle
in
mov
call
mov
jb
ficoms
test
inc
mov
adc
adc
cmp
pop
aad
mov
out
sub
shrl
mov
sbb
push
loopne
sub
arpl
rclb
mov
shlb
mov
movsb
cmp
sub
into
jecxz,pn
add
aaa
orl
stc
add
inc
jl
loopne
xchg
push
push
ds
mov
loope
or
cmp
mov
shrl
mov
leave
cmp
mov
xor
dec
jp
je
pushf
push
mov
invd
faddl
add
das
data16
push
jb
inc
xchg
pop
mov
cmp
icebp
pop
jne
nop
xchg
cld
test
icebp
dec
insb
ss
fisubrl
bound
or
jne
mov
push
out
sbbb
mov
adc
push
data16
dec
xor
and
popf
roll
lea
cmp
jo
mov
inc
addr16
pop
adc
add
cmp
mov
xchg
push
or
mov
dec
push
sub
inc
loop
jbe
loope
push
inc
cmp
or
jne
xchg
or
xchg
mov
xor
xchg
popa
pop
mov
push
pop
std
dec
adc
inc
in
decb
mov
into
pushf
int3
xor
cmp
mov
movsb
mov
popf
rol
cmpsl
and
jne
xlat
xor
mov
xor
or
lea
push
mov
iret
xor
mov
aaa
call
or
fisttpl
outsb
out
popa
pop
push
push
dec
inc
jecxz
in
xchg
test
aaa
jl
mov
lret
daa
mov
andb
test
pushf
jmp
or
stc
pop
idiv
iret
lahf
int3
mov
stos
jecxz
loop
cmp
popf
test
loop
inc
mov
xchg
pop
push
in
ja
hlt
mov
push
mov
out
out
push
cmp
cmp
imul
sbb
fmul
mov
sub
mov
lahf
out
push
es
jp
stc
sub
rcrl
insb
mov
pop
out
sub
mov
push
mov
inc
xor
fxch
mov
mov
mov
jmp
sbb
mov
push
dec
test
ret
dec
jg
or
rcrl
lds
rolb
jge
jecxz
aaa
push
mov
cmpsb
push
mul
and
in
fwait
sub
in
pop
dec
mov
icebp
push
dec
mov
or
sub
add
fwait
or
stos
imul
lret
sbb
andb
mov
mov
cmpb
sbb
arpl
inc
fidivrs
xchg
and
jo
sub
add
jns
into
lahf
mov
daa
push
mov
pop
scas
push
pop
adc
dec
pop
es
xor
lock
sbb
push
sbb
xchg
inc
loopne
jmp
mov
push
and
stc
stos
loopne
adc
cmpsl
cli
ret
int
push
cmp
pop
subl
push
jecxz
sbb
repz
es
add
lret
lcall
xchg
inc
pop
ficompl
call
push
mov
sub
mov
push
mov
lcall
jns
fmull
xchg
fisubl
and
cmp
lods
fisttpl
push
jbe
fbstp
std
cmpsb
fldt
lods
inc
pop
aam
ret
lret
insb
dec
rolb
loope
dec
lret
xchg
add
mov
rorl
mov
loop
ljmp
stos
les
jnp
mov
iret
fadd
cwtl
cmpsb
in
mov
mov
pushf
stos
pop
ljmp
jo
mov
rorb
jl
faddl
lods
in
ljmp
sub
mov
shr
add
lds
nop
and
dec
xchg
sbb
cli
pushf
testl
dec
insb
repnz
in
push
dec
stos
out
jbe
dec
stos
or
stos
mov
jo
icebp
and
mov
add
in
daa
xchg
push
mov
jecxz
lret
sub
lret
and
cmp
pop
sbb
push
push
fistl
sahf
test
mov
mov
pop
xchg
cmp
push
dec
pop
sub
jge
push
push
cmp
add
icebp
dec
cld
sbb
sub
or
inc
cld
add
loope
pop
mov
and
loop
ret
fwait
mov
cld
aaa
pop
inc
cmp
push
cltd
dec
daa
jmpw
dec
mov
mov
data16
out
ss
jnp
lock
sub
sbb
cwtl
out
cmp
push
xchg
mov
lock
stos
mov
ficompl
leave
push
xchg
jp
ja
jbe
xor
mov
dec
jnp
push
pop
jbe
inc
int
inc
mov
mov
ret
call
mov
in
push
jge
popf
cmp
push
in
and
jge
jle
pop
das
or
add
shlb
out
pop
mov
imul
fwait
add
sbb
stos
loope
mov
mov
fucomp
cmp
aaa
cmp
jecxz
mov
arpl
pop
pop
sbb
popa
fs
leave
fadds
pop
dec
jl
hlt
aad
mov
aaa
lods
iret
inc
fwait
dec
xchg
pusha
lods
out
jg
pop
dec
inc
push
sbb
aaa
inc
adc
fld
push
inc
lds
xchg
sbb
call
dec
cmpsb
stos
mov
push
inc
roll
aas
pushl
add
sub
sbb
or
sbb
clc
dec
add
cmpsl
fidivrl
outsb
pop
std
incl
jae
aaa
xlat
and
sbb
mov
mov
jmp
aad
push
inc
or
lea
sub
mov
push
in
add
in
ljmp
xor
lcall
divl
mov
mov
pop
das
sahf
in
lcall
cs
pusha
dec
xor
push
jge
mov
int
imul
test
sub
idivb
ret
cmp
inc
add
aaa
stos
arpl
gs
sub
jp
addr16
shrl
push
xor
sets
clc
roll
pop
and
sub
stos
sbb
mov
sbb
popa
fwait
arpl
lods
sbbl
gs
filds
lcall
lods
pop
push
xchg
rolb
mov
jno
pop
xor
enter
lret
mov
pop
mov
jmp
dec
push
adc
adc
popa
fiadds
addr16
testb
cmpsl
and
adc
dec
mov
cwtl
push
mov
add
ljmp
push
sbb
cmc
xchg
outsl
not
jecxz
cltd
pusha
xchg
repz
cmp
mov
out
inc
frstor
jae
leave
popa
dec
lcall
addl
adc
cmpsl
mov
subb
mov
aad
loopne
fisubs
jae
mov
repnz
mov
and
lock
loope,pn
push
cmc
outsl
push
cltd
lds
cmpsl
jmp
movsl
inc
stos
sub
addl
inc
adc
dec
cmp
and
sahf
gs
inc
lds
notl
and
out
nop
leave
fs
lods
rcrb
add
cmp
mov
clc
js
xlat
and
into
push
ret
mov
jmp
daa
cld
jns
in
fistpl
cltd
jecxz
in
mov
fildll
loope
test
adc
test
jb
mov
dec
call
adc
dec
and
xor
es
xchg
sbb
add
mov
add
fnsave
pushf
mov
daa
mov
call
rcrl
addr16
add
pop
mov
jg
mov
or
iret
pusha
inc
test
jmp
imul
andb
xor
stos
push
jbe
cmp
cld
cmpsb
inc
mov
sub
testb
stos
rorb
bound
lret
or
rcrb
or
les
adc
add
mov
call
movsl
js
insl
hlt
inc
clc
sbb
in
sub
movsl
call
pop
inc
push
mov
inc
sbb
xorl
xor
push
mov
adc
pop
pop
outsb
cli
inc
fsubrs
cmp
into
pop
mov
jmp
push
and
iret
jnp
cltd
jbe
or
fildl
lock
lahf
and
sub
jnp
cmc
mov
pop
cmp
sub
mov
jg
imul
ror
out
add
push
cmp
repnz
xchg
jg
outsl
into
ficoml
mov
lea
jae
xchg
loopne
adc
mov
pop
aaa
push
adcb
add
mov
orl
lret
out
xchg
xchg
mov
jne
insl
bound
lret
out
pop
loopne
arpl
add
mov
and
dec
lahf
stc
cmp
test
sub
inc
inc
pop
mov
sbb
mov
or
mov
stos
notb
adc
jbe
and
push
or
mov
pop
aad
push
mov
jmp
add
cwtl
sbb
jnp
mov
dec
xchg
jb
xor
xlat
bound
pop
lods
dec
xor
xchg
aad
daa
xchg
rclb
dec
repz
aam
jmp
mov
sbb
shrl
mov
rcr
in
mov
push
pop
fldt
shl
lahf
cmp
stos
or
pop
cs
outsl
scas
dec
movsb
mov
add
mov
push
pop
xchg
inc
sbb
aas
xchg
add
lret
jno
sub
mov
xor
gs
loope
test
sbb
mov
mov
data16
xor
mov
mov
jbe
mov
inc
fs
andb
push
stc
int
pushf
sbb
mov
das
pusha
js
mul
lock
pop
push
xor
or
add
cld
cli
hlt
int3
mov
and
dec
cli
sbb
xchg
addb
dec
or
xor
add
loop
xlat
movsl
mov
pop
outsl
cmp
loope
or
int
test
cmp
mov
cmp
xlat
inc
fstpl
or
jg
sarb
fsubp
sbb
mov
call
cltd
or
adc
dec
jae
iret
pop
loope
inc
dec
push
push
cwtl
mov
cmp
add
loop
lret
inc
inc
test
adc
mov
in
js
lret
fwait
ret
cmp
cmp
mov
dec
jne
cmp
jbe
or
nop
daa
mov
movsl
xor
les
repz
jecxz
push
rolb
sbb
aam
popa
stc
fsubr
push
test
xchg
shlb
out
mov
aad
mov
pushf
xor
in
mov
stos
push
jg
inc
in
mov
cmpsb
ret
cmp
mov
lods
mov
sbbb
jmp
mov
cmp
out
lret
inc
ret
jne
stos
outsl
pop
jns
mov
inc
lods
or
stos
xchg
push
aas
or
lcall
push
ficomps
sahf
insb
cwtl
mov
push
icebp
jge
repz
inc
mov
and
ja
push
jmp
testl
popa
adc
add
pop
mov
add
rcrl
movsb
add
imul
or
mov
mov
mov
mov
rclb
mov
mov
lock
cmc
shr
and
ja
add
clc
mov
inc
jbe
lahf
popf
adc
ret
mov
lock
cmpsl
stos
mov
jnp
in
rorb
or
xor
pop
fildl
dec
sbb
xchg
mov
xor
fstpl
mov
rdpmc
dec
mov
adc
lods
nop
ja
add
or
mov
ljmp
sub
in
sti
push
lcall
jo
gs
mov
jo
mov
push
mov
addr16
mov
popf
pop
xchg
inc
ljmp
mov
repz
int3
mov
insb
sbb
js
sbb
movsb
ror
mov
xor
add
sub
mulb
add
les
mov
aad
or
ret
push
jmp
push
and
xor
movsb
sti
push
mov
inc
cltd
jl
int3
iret
out
popf
imul
movsl
add
ret
sub
cmpsb
lods
xchg
out
fwait
push
icebp
insb
int
adc
xlat
jns
or
xor
mov
cmp
int3
imul
ljmp
clc
in
stc
lcall
jmp
mov
add
xchg
cmpsb
cli
cs
xor
loopne
fdivr
test
aad
adc
in
pop
xchg
push
stos
lret
scas
xchg
loop
clc
mov
and
cmc
aam
sub
cld
lret
in
xchg
mov
add
mov
lahf
and
aaa
aam
jns
jns
sti
pushf
hlt
nop
fidivl
mov
scas
std
lods
add
ja
clc
and
gs
xor
mov
data16
sbb
inc
ret
fstps
cmpsb
out
in
jge
jae
mov
and
cltd
xchg
push
xor
xchg
daa
icebp
loopne
mov
and
push
xchg
out
es
push
sbb
cmpsb
loope
cmp
mov
add
fildl
ret
and
ds
bnd
ljmp
xchg
dec
mov
sbb
lret
pop
inc
ds
mov
loope
sub
sub
fmuls
dec
out
ss
jbe
test
pop
out
xchg
mov
sbb
mov
mov
into
sub
test
xlat
decl
adc
adc
sub
sub
add
lahf
cmc
lret
add
stos
mov
xor
lea
neg
and
gs
or
adc
mov
xchg
push
mov
cs
push
or
xchg
jle
xchg
pop
jmp
std
or
push
sbb
ret
lods
xor
dec
hlt
mov
jne
inc
fidivl
stos
push
pop
xor
movsl
dec
or
enter
mov
sbb
int3
push
insb
or
imulb
aad
rolb
cwtl
push
stc
xchg
mov
mov
jae
jmp
dec
add
into
test
mov
inc
out
jns
mov
add
mov
addr16
jecxz
jae
std
out
cmp
in
xlat
fstl
ret
and
mov
movsb
push
fcmovnb
xchg
pop
cmp
sbb
xor
cmp
jmp
sahf
jg
adc
fildll
cli
pop
popa
and
add
mov
cmpsl
push
icebp
bound
pop
inc
pop
jmp
shr
or
fnstenv
push
rorb
int3
insb
cwtl
hlt
out
adc
pop
shll
lods
pop
inc
out
mov
or
sub
jae
mov
and
inc
enter
add
mov
mov
test
jb
mov
cld
add
nop
dec
sub
sti
call
cmp
aas
test
or
or
jno
push
cmpsl
jnp
fmuls
and
inc
or
adc
cmpsb
fiadds
dec
lock
test
in
in
je
inc
cs
push
aaa
ficoms
int3
cs
pop
inc
inc
mov
insl
fisttpl
imul
hlt
mov
cmp
bound
mov
orb
xchg
loopne
test
scas
dec
outsb
xchg
or
leave
xor
imul
mov
pop
leave
dec
inc
push
add
das
int3
mulps
xchg
sbb
lods
setae
jno
daa
or
ja
fdivl
dec
mov
sti
stc
push
dec
nop
or
fadd
jbe
mov
jno
lock
sti
mov
or
jge
or
and
cmp
fsubs
push
out
imul
cmpsl
int3
pop
xchg
or
xchg
fstpl
in
mov
frstor
addr16
iret
divl
addb
mov
xlat
sub
xchg
inc
jnp
pop
adc
xchg
inc
cwtl
adc
popa
out
rclb
lock
push
fmuls
push
push
dec
jl
mov
mov
and
loopne
cmp
mov
in
jnp
mov
ror
iret
lods
adc
mov
push
nop
and
repz
fidivrs
dec
rclb
lcall
lret
dec
pop
pop
fisttpll
xchg
mov
pop
xchg
mov
adc
in
in
mov
dec
enter
push
fsubp
or
cli
jae
xor
in
push
stc
add
sub
enter
mov
aam
dec
cmp
xchg
repz
dec
adc
sbb
mov
mov
repnz
clc
xor
inc
les
xchg
pop
ret
add
dec
ficoms
push
mov
sarl
pop
sbb
push
leave
dec
stos
xchg
sbb
pop
pop
aaa
fisubrl
shlw
inc
int3
dec
es
sbb
test
out
dec
xor
mov
sbb
rcll
jp
ret
aas
rep
sbbl
adc
dec
popf
xlat
adc
or
mov
xchg
xchg
repnz
lods
sti
std
out
mov
das
insl
xor
into
popf
cwtl
pop
loopne
add
adc
out
mov
das
add
jge
push
xor
lcall
stos
adc
pushf
inc
cmp
ss
and
frstor
hlt
or
out
dec
ucomiss
jecxz
fwait
adc
jns
jb
pushf
xor
dec
popa
fidivs
pop
mov
or
iret
js
jecxz
ds
movsb
jne
cmp
scas
cmpsb
lret
mov
dec
scas
mov
andl
cmp
add
xchg
aad
dec
sahf
pop
popf
sub
js
lcall
mov
daa
lds
nop
pop
dec
jp
nop
out
xchg
xchg
rorb
mov
pop
hlt
xchg
das
sbb
out
pop
ror
adc
fs
cwtl
sub
adc
xor
xchg
adc
mov
cmp
sub
jno
movsl
xor
and
jo
inc
push
inc
inc
pop
rcrl
loopne
andl
ss
out
and
xor
in
jecxz
inc
push
xchg
lahf
ljmp
adc
jmp
add
andl
pop
imul
sbb
or
xchg
ja
aas
fs
pushf
pop
roll
mov
adc
mov
mov
add
sbb
dec
jecxz
les
jb
cmp
mov
and
adc
shll
lds
pusha
imul
jp
push
shr
mul
and
in
add
outsl
jg
mov
sahf
xor
rcrb
ljmp
inc
jp
lret
push
mov
nop
mov
fildll
cmp
mov
sbb
pop
xchg
pushf
jnp
pop
dec
ss
sbb
dec
lock
sbb
outsl
imul
arpl
enter
fucom
imul
or
push
or
push
mov
jmp
stos
ds
lods
cld
mov
fld
mov
push
push
js
pop
mov
mov
out
pop
in
cmp
aaa
dec
shll
mov
pop
pop
out
negl
xor
loop
lods
and
sub
popa
jb
push
arpl
das
test
scas
scas
fcoms
mov
shrb
pop
loop
fnstcw
js
pop
fdivrs
insl
clc
dec
inc
ja
sbb
insl
in
fdivrp
pop
loop
rcr
clc
into
adc
cli
scas
imulb
push
sub
pusha
sub
lds
fs
cmp
mov
xor
add
fdivr
out
xchg
je
incl
xchg
jne
inc
jbe
inc
mov
inc
sbb
pop
insl
out
aaa
cmp
sbb
push
add
dec
xlat
or
clc
es
test
adc
xor
or
xor
adc
jl
adc
sbb
fs
sti
jb
dec
jbe
or
insl
test
pop
mov
shlb
fst
addl
psllw
gs
and
stos
popa
mov
xlat
ret
jmp
mov
cmp
xor
into
and
out
dec
add
dec
in
mov
int
repnz
stos
inc
or
in
insb
pop
cmp
xchg
pop
stc
jns
push
lea
push
mov
outsl
xor
test
xchg
shufps
fidivrs
lahf
cmp
push
pop
call
xchg
scas
test
push
fiaddl
dec
out
clc
sahf
mov
or
outsb
sbb
jbe
dec
fisttps
push
xor
jne
cmp
inc
jne
popf
test
loopne
insb
push
aam
ljmp
lock
jb
mov
stc
loop
fnclex
mov
dec
dec
mov
mov
push
push
test
jae
stos
adc
and
push
test
gs
mov
movsl
pop
adc
inc
decb
xor
int
stc
push
mov
sti
imul
jmp
shll
mov
rcrb
sbb
mov
mov
xlat
loopne
lds
fiaddl
mov
inc
pop
pop
dec
iret
test
or
cwtl
stos
inc
aad
repnz
inc
lret
jb
adc
outsb
fmulp
jnp
xor
sub
inc
inc
lods
push
dec
rcrl
ds
adc
jno
mov
jno
fidivs
movsb
out
adc
stos
jg
cmp
stos
pop
lcall
mov
xchg
mov
and
js
cmp
pusha
mov
hlt
mov
inc
fcmove
mov
addr16
pushf
add
repnz
scas
add
sahf
xor
sarl
mov
pop
sub
ja
push
xchg
push
jmp
mov
test
or
add
mov
cmp
add
mov
call
dec
dec
sbb
mov
into
and
leave
pusha
mov
roll
ret
cmpb
xor
in
mov
jae
ror
jecxz
popa
pusha
cmp
xchg
mov
xor
fldl
cmpl
insl
sub
mov
sar
cwtl
fwait
inc
bndstx
out
mov
ja
adc
mov
ss
mov
push
loop,pt
scas
jp
sti
fimuls
js
and
daa
gs
xor
add
lods
dec
pop
cli
lods
call
xor
mov
xlat
jmp
jp
rcrl
cld
testb
in
outsb
push
arpl
ds
mov
in
test
lret
jo
mov
ja
inc
adc
mov
mov
in
xor
stos
fstp
push
das
or
popa
dec
sub
lods
repnz
int
fisubl
ret
movsl
call
mov
fildl
insb
inc
inc
dec
in
test
fidivl
iret
ret
adc
mov
mov
jl
jne
mov
cmc
loop
add
pushf
push
das
mov
jae
mov
movsl
scas
and
ja
mov
jl
pop
shlb
mov
std
cwtl
andl
cmp
jbe
and
or
bound
je
lret
lahf
jle
fadds
sub
shrl
ret
and
pop
jne
cmp
add
in
push
add
sbb
sub
icebp
mov
mov
out
add
mov
and
inc
pop
imul
cmpsb
addr16
cltd
jne
cwtl
aaa
je
cmpsl
jg
mov
out
popa
mov
or
inc
mov
cmp
mov
pusha
add
inc
std
mov
bound
outsl
enter
stc
lret
cmpsb
sahf
call
adc
popf
in
mov
push
cmp
mov
imul
shll
das
roll
loopne
dec
lods
sbb
and
js
inc
ss
pop
sbb
je
sbb
mov
add
jle
rol
aad
xchg
or
cmpsl
imul
into
cmp
or
pushf
mov
fldl
popf
lret
repnz
mov
test
mov
out
aam
ja,pt
insb
andb
aam
mov
jle
inc
and
pop
xlat
nop
movsl
fsubrs
pop
negb
lds
out
push
cmp
dec
jp
mov
xchg
and
xchg
adc
dec
ficoms
bound
mov
rcl
rclb
xor
aas
push
pusha
dec
lcall
sti
and
clc
add
push
and
xor
shlb
cmpl
scas
ffree
jne
ljmp
cmpl
test
push
or
adcb
add
fs
aaa
mov
clc
fs
lret
fidivs
mov
lcall
jecxz
lea
inc
mov
cltd
shrb
mov
sub
ret
sub
jae
addr16
mov
xchg
xor
inc
adc
jb
scas
cmp
adc
inc
int
lcall
rcll
rol
or
insl
pop
lahf
mov
sbbl
xchg
imul
inc
mov
xor
scas
das
fcompl
pusha
out
and
xchg
fwait
stos
orb
sub
mov
sub
sbb
sub
push
aam
ljmp
sarb
idivb
hlt
cmp
dec
cmp
mov
scas
mov
fbstp
ds
faddl
pop
jmp
aas
test
add
sbb
mov
lods
push
movb
mov
mov
sub
add
in
pop
lcall
dec
sbb
cli
mov
movsl
shl
xor
adc
les
or
pop
aad
pop
icebp
subb
and
lods
cmpsb
jae
outsl
into
scas
xor
call
inc
leave
push
mov
mov
pushf
stc
out
fdivrl
add
mov
dec
push
jbe
and
fadds
rcl
cmp
add
sbb
push
adc
stos
sub
out
aam
and
xlat
jo
std
xchg
loope
mov
adc
jne
movsl
test
cmp
repz
cwtl
jns
mov
or
cmpsb
and
repz
pop
mov
jge
cmp
movsb
sub
jnp
push
mov
test
or
xchg
or
stos
fmuls
mov
cmp
ret
leave
rorb
sub
sbb
adc
out
mov
push
mov
mov
inc
cmp
jp
subl
es
std
adc
clc
aad
scas
push
mov
push
cmp
add
aaa
sub
daa
insl
nop
int3
sub
repnz
jp
repz
imull
xchg
jge
mov
adc
adc
mov
xlat
sbb
or
jb
adc
adc
push
xchg
jp
mov
stos
mov
into
xchg
push
jl
cmpl
in
inc
lcall
cmp
xchg
cmp
int
mov
mov
jp
insl
xchg
jg
sbb
fwait
adc
testl
loope
lret
sbb
outsl
flds
xchg
popf
daa
jp
xchg
jne
es
maxps
mov
mov
mov
pop
fidivrs
jae
scas
daa
popa
movsb
fistpll
lret
cmp
andb
push
xor
pop
divb
mov
aad
sub
or
mov
push
add
lret
loopne
in
pop
pop
imul
cli
int
pop
push
ds
ret
sti
mov
jbe
inc
pop
testb
adc
xchg
xchg
push
dec
jp
or
fistps
imull
jmp
cld
dec
xchg
jae
icebp
mov
aaa
adc
andb
push
enter
xchg
loopne
test
pop
adc
shlb
imul
xor
add
mov
jb
jb
shl
mov
xor
lock
dec
aas
cli
mov
sub
negb
mov
adc
sbb
mull
insl
insb
roll
inc
aad
lret
or
inc
pop
hlt
cmc
mov
mov
cmpsl
mov
pushf
xchg
enter
sbb
loope
pusha
aad
xchg
cmp
dec
cli
cmp
sbb
sub
mov
imul
pusha
inc
jno
pop
je
inc
repz
mull
dec
or
adc
aad
aas
aam
mov
dec
add
scas
nop
mov
stc
push
dec
or
adc
lahf
xchg
push
outsb
pop
mov
lods
fbld
sbb
dec
xchg
mov
pusha
aas
cs
cltd
inc
inc
and
mov
and
dec
lcall
cmpsb
mov
jno
lds
outsb
icebp
adcl
mov
fcoms
xchg
mov
aad
ret
adc
hlt
scas
mov
mov
and
add
lods
cmp
pop
push
orb
in
test
cmp
out
xlat
clc
loop
loopne
mov
aam
add
or
pushf
pcmpgtw
mov
jmp
xchg
mov
nop
cli
test
mov
sbb
ljmp
pushf
xor
push
xchg
mov
cmp
std
int3
dec
mov
dec
aad
inc
add
inc
ret
fildl
movsb
or
mov
int
mov
mov
and
fscale
push
mov
subb
cli
cltd
adc
gs
outsb
dec
repnz
div
sbb
repnz
ret
aam
cli
aam
adc
je
mov
fiadds
test
mov
cwtl
mov
sbb
pop
mov
fs
cmp
ja
mov
xor
test
mov
add
cs
add
shrb
out
mov
in
fldcw
cmc
jbe
mov
sub
pop
mov
sub
dec
das
or
push
dec
jnp
cmp
test
sarl
mov
in
mov
pusha
dec
adc
push
and
sbb
loopne
jmp
stos
aam
notb
push
dec
testl
mov
cmp
out
lret
cmpsb
out
inc
mov
scas
pop
shl
xchg
dec
push
push
loope
push
imul
cli
mov
xlat
test
popf
mov
cs
ja
icebp
push
pop
inc
or
cmp
loopne
mov
xor
xchg
push
lods
or
cld
jge
mov
test
gs
ja
sbb
or
jecxz
sti
jg
pop
andl
aas
mov
mov
icebp
out
hlt
repz
stos
mov
mov
jne
mov
lcall
cltd
clc
mov
jge
popa
push
push
test
mov
out
xchg
rcr
pusha
inc
rorb
pop
dec
fmull
push
notl
stc
sub
mov
ljmp
fimuls
sub
aas
iret
mov
mov
in
add
mov
or
add
aaa
sbb
cmp
mov
add
jle
jl
and
or
and
inc
loop
into
aad
mov
icebp
popa
popa
jl
xor
jo
cwtl
mov
dec
xchg
push
icebp
xchg
lods
cli
stos
cmp
jge
pop
xchg
xor
addr16
pop
mov
mov
lret
sub
mov
pop
mov
xchg
and
loopne
addr16
jo
jmp
movsl
sbb
movsb
notl
cmp
in
adc
cld
ret
mov
pop
mov
cmpsl
sbb
out
mov
sbb
lock
adc
lret
pop
pop
dec
cmp
jae
pop
mov
push
jae
pop
js
and
push
mov
lock
inc
leave
pop
aaa
xchg
xor
out
dec
fldcw
ficompl
fisubl
mov
cmpl
and
push
in
aas
jge
in
cwtl
xor
mov
imul
push
pop
mov
fucom
or
popf
pop
ljmp
js
gs
test
cmp
popa
pop
test
inc
xchg
call
sbbb
sub
pusha
daa
pop
inc
gs
inc
scas
xorl
push
sti
ljmp
dec
xchg
mov
xchg
mov
aam
xor
or
ret
loope,pn
aaa
cmp
sub
push
pusha
dec
push
mov
loop
add
fimuls
or
push
stos
nop
push
movsb
jb
pop
xor
pushf
xlat
or
ja
lret
cwtl
push
xor
adc
sbb
test
lods
xchg
mov
sahf
or
ss
popf
cltd
jge
and
cmp
cmc
cltd
mov
mov
xlat
mov
sbb
clc
push
mov
sbb
jmp
arpl
pop
fwait
push
xchg
gs
stos
loopne
stos
andl
lret
cmpl
xchg
test
sbb
leave
push
pop
xchg
pop
ljmp
or
add
and
mov
mov
lcall
mov
insb
aad
cwtl
lcall
lcall
cld
nop
dec
jbe
jne
ja
mov
xchg
push
pusha
popa
fsubr
std
mov
data16
lock
outsl
inc
and
scas
in
sub
mov
pop
mov
testl
movsl
add
bound
testl
leave
sahf
sub
iret
xchg
add
repnz
pop
jp
or
outsb
sbb
mov
outsl
jle
jecxz
push
mov
inc
scas
xor
in
jecxz
inc
rcr
cld
add
or
cmpsl
jecxz
xor
adc
add
sub
dec
outsb
jno
in
ret
int3
xchg
into
sarb
push
adc
mov
jl
cmp
outsb
add
xchg
pop
lcall
lcall
or
mov
cltd
add
dec
dec
fs
jl
movb
xchg
daa
xor
push
mov
out
jbe
mov
aaa
idiv
sti
mov
mov
aad
in
inc
or
add
incl
sar
adc
mov
pop
sub
pop
push
mov
divb
js
test
mov
xlat
lds
sbb
xchg
insb
pusha
mov
ja
sub
inc
lcall
and
iret
in
xchg
jbe
jbe
into
mov
nop
iret
inc
sahf
rcl
mov
xchg
jl
or
loopne
aam
jecxz
pop
cltd
fbld
pop
push
pop
dec
js
and
cmpsb
push
pop
add
lods
cs
jl
movsb
into
push
mov
sub
sbb
cmp
loope
fidivrl
push
pop
mov
inc
xchg
push
outsb
nop
mov
adc
inc
add
mov
gs
repz
stos
add
pop
fwait
jge
cli
in
pop
mov
popa
stc
mov
and
hlt
mov
cmpsb
lret
pop
mov
push
inc
iret
mov
aaa
rcrl
ret
repz
mov
jne
cmpsl
jmp
xchg
insb
std
cmpl
lea
push
int
call
cld
mov
insl
sbbb
in
stc
mov
cmpsb
jmp
sbb
pushf
jmp
sahf
out
imul
push
mov
stos
out
xor
push
mov
push
jle
push
dec
ret
add
dec
push
nop
mov
pop
nop
loopne
pop
adc
in
ret
jns
jmp
mov
xor
sub
pushf
jmp
imul
add
push
enter
push
push
into
cmpl
fdivrp
xor
ret
push
addr16
xchg
pop
aas
flds
xor
or
xchg
sub
jge
xchg
jecxz
fsubrs
loopne
out
dec
sub
cmp
test
xor
cli
add
mov
pop
or
dec
adc
ret
jp
rcll
out
jmp
pusha
call
mov
mov
inc
mov
mov
dec
lock
ljmp
pop
insl
fnstsw
dec
repnz
in
mov
push
and
repnz
int
int3
add
pop
add
push
in
dec
jb
fcoms
leave
movsb
jecxz
mov
dec
xchg
popf
and
mov
rcl
push
push
dec
jl
mov
mov
inc
or
jmp
inc
dec
sub
ja
jno
imul
push
test
shl
mov
dec
xchg
add
je
stc
pop
movsb
arpl
adcb
loopne
enter
bound
decb
jge
xor
pop
ja
inc
jle
rcrb
pop
insl
loop
in
xchg
push
stc
xor
cwtl
and
xchg
add
xor
call
push
pop
jle
sub
mov
out
cld
call
imul
push
xor
lahf
idiv
ret
jnp
xor
dec
and
mov
int3
aas
push
and
xchg
mov
subb
lods
jecxz
divb
lods
mov
inc
repz
xchg
in
mov
push
cltd
in
jns
daa
jp,pn
insb
ret
test
imul
or
fstps
test
cmp
and
mov
or
mov
lds
xor
es
jge
shll
mov
aam
fdivrs
ds
fdiv
inc
adc
outsb
pop
mov
lock
push
cld
inc
jb
orb
inc
and
xchg
jg
ss
hlt
out
mov
in
cmp
mov
and
movsl
cmc
xchg
pop
or
decb
sbb
out
jp
inc
dec
inc
mov
gs
jno
int3
cmp
lret
cwtl
pop
cmc
push
add
sbbl
adc
mov
mov
cmp
dec
jne
rorb
jno
test
or
in
mov
pop
fstpt
sbb
push
sub
adc
fwait
sub
sbb
push
dec
mov
or
adc
mov
sbb
enter
mov
mov
in
xchg
mov
sti
andb
fdivr
decb
out
xor
add
or
inc
jo
int
mov
mov
repz
jecxz
andb
movsl
les
jb
mov
popf
imul
and
pop
leave
outsl
xor
mov
mov
cmpsl
and
fcmovne
jmp
sbbl
call
gs
imul
fstps
adc
std
or
sbb
ror
jl
outsl
pop
pusha
cmp
pop
or
leave
and
div
movsl
insl
int3
dec
imul
jb
xchg
jae
bound
push
mov
jno
lret
negl
and
push
loopne
leave
mov
push
pop
jo
out
loope
das
ffreep
aaa
sahf
mov
roll
nop
adc
fstl
mov
popf
sub
leave
ss
and
js
sbb
push
xchg
imul
xchg
loopne
inc
in
pop
je
push
rolb
mov
iret
outsl
or
mov
sarb
dec
insb
push
stos
mov
lock
jb
stos
test
push
push
push
cld
mov
and
loop
cmc
in
stos
adc
sti
sahf
cli
mov
lods
cmp
sahf
jbe
xlat
mov
cmp
pop
lret
test
ss
pop
jno
stos
ficompl
mov
addr16
fdivrp
addr16
into
xor
push
mov
push
cmc
sbb
int
movsb
das
ljmp
insb
int
and
shlb
push
add
lock
fwait
ss
inc
mov
push
dec
loop
sbb
push
fwait
cmc
dec
jo
aas
lcall
fistpll
aad
js
cmp
adc
xchg
pop
inc
shlb
out
daa
test
lods
sbb
and
cs
push
adc
mov
push
xchg
loop
xchg
out
dec
inc
lret
nop
or
and
leave
adc
mov
out
jl
mov
push
add
or
addr16
in
mov
jbe
fldl
fnstsw
mov
es
mov
pusha
lret
adcb
sbb
jmp
pop
mov
cmp
mov
xchg
daa
mov
xor
inc
sbb
mov
cmp
sbb
fdivl
mov
jle
xor
popw
mov
cmpl
and
fwait
cmc
pop
add
inc
mov
mov
aaa
cwtl
lret
arpl
push
out
mov
jl
mov
incl
sub
fcomps
push
adcb
aaa
push
sub
movsb
mov
xchg
xor
add
inc
push
lock
test
jbe
adc
push
es
jo
lods
adc
jno
fnsave
inc
jnp
inc
imul
jbe
int3
and
adc
inc
cmpsl
rol
pop
popf
inc
es
outsb
test
fwait
arpl
push
xchg
push
subl
inc
subl
daa
jge
pop
shlb
inc
xor
or
in
pop
or
mov
andb
faddl
xchg
loopne
sub
cld
movsl
call
cmpsb
js
xor
dec
and
xchg
sbb
clc
sti
push
xor
adc
cwtl
outsb
or
mov
sbb
pop
push
inc
pop
pusha
out
dec
and
jns
data16
gs
mov
daa
xchg
pusha
out
adc
outsb
adc
lcall
adc
jmp
add
fists
jo
xchg
nop
rcr
cmp
pushf
sti
popf
lret
inc
mov
sbb
add
aas
decl
xorl
sbb
ret
or
xchg
or
push
mov
cmp
jae
inc
aas
imul
pop
hlt
pop
mov
xchg
int3
jne
adc
int
mov
xor
jae
mov
cmp
fisubl
inc
insb
jp
rcr
xor
jno
add
or
pop
sub
mov
aaa
fists
lea
sub
scas
mov
adc
cltd
cltd
pusha
das
loopne
adc
xlat
mov
xor
xchg
pop
sub
mov
pop
jo
clc
mov
inc
push
jbe
aas
jns
and
mov
negl
les
cltd
test
push
jecxz
inc
xchg
sbb
imull
stc
insl
ja
xor
leave
and
cld
xor
xchg
mov
xchg
inc
and
pop
add
rorl
or
sbb
imul
sub
leave
mov
aam
repnz
lahf
mov
ret
gs
movsb
repz
loop
xchg
sbb
adc
mull
jge
mov
sub
pop
aaa
fidivl
pop
adc
mov
dec
stos
sub
fwait
cmpsl
sbb
sbb
lcall
jo
cmp
popf
pop
jmp
jg
push
imul
add
or
xchg
shll
cmpb
mov
push
js
add
lret
testb
ds
ds
xchg
pop
out
test
pop
and
mov
aaa
enter
pop
mov
mov
push
in
mov
jns
stc
enter
mov
jne
inc
adc
call
fisubrs
mov
out
jle
push
popf
inc
inc
jl
push
call
enter
ds
xor
fsubrp
fwait
sub
jb
xor
mov
pusha
fbstp
xor
push
into
negb
push
inc
cwtl
pop
jo
push
mov
push
inc
out
xlat
push
mov
out
or
iret
popf
fimuls
sbb
inc
mov
cwtl
or
and
push
xchg
out
scas
insl
cmpb
dec
mov
mov
nop
mov
dec
insl
jb
sti
pop
sbb
push
in
neg
mov
stos
mov
dec
call
and
xchg
mov
pop
mov
xor
popf
add
add
or
out
lahf
movsl
dec
idiv
daa
mov
ret
ret
mov
fnsave
push
add
fsubl
repnz
das
aam
mov
push
cmp
or
mov
xor
dec
sahf
add
push
mov
mov
adc
mov
sbb
pop
andl
cmp
fstpt
sbb
inc
cmpsb
mov
cmpsl
sbb
dec
stc
xchg
sub
jae
stos
lods
fxch
outsb
push
jae
mov
mov
pop
jb
jle
imul
sahf
mov
cwtl
mov
shr
lock
int3
loopne
mov
aam
inc
push
jae
sub
gs
ja
ret
into
std
lods
mov
daa
pop
enter
xchg
ret
push
mov
sbb
mov
test
nop
loopne
cli
into
add
aaa
jnp
fdivrs
xchg
push
pop
je
daa
inc
jnp
in
or
addr16
sbb
into
xchg
sub
mov
mov
lahf
insl
int
in
xchg
stos
mov
xchg
mov
dec
sbb
data16
jnp
xor
orb
lret
cmp
in
ds
mov
sub
inc
inc
scas
mov
out
xchg
jecxz
cmp
and
xchg
aad
hlt
popa
pop
or
and
inc
test
and
xchg
dec
push
push
inc
mov
push
pop
cmpsl
pop
sub
cli
cmp
xchg
push
aam
je
fisubs
sbb
lret
and
xor
mov
inc
test
cltd
dec
jg
rcll
jns
cmp
cs
lock
sarb
out
mov
sbb
ds
in
aam
daa
xchg
cmp
jle
in
mov
push
xor
sbb
ss
pop
repnz
fstpt
sahf
loop
dec
sbb
leave
push
mov
xlat
mov
inc
inc
pushf
rcl
push
jb
xchg
cli
push
add
mov
fisttpl
xchg
add
fcoms
inc
stos
inc
xchg
mov
ret
xor
jbe
ss
pushf
out
call
stos
enter
pop
in
cmpsl
dec
mov
add
jecxz
pop
pop
inc
or
sbb
jns
inc
fldl
dec
add
gs
insl
push
mov
push
cmpsb
push
in
cmp
jns
add
out
and
inc
xor
dec
mov
xor
cmpsb
cmpsl
aam
pop
cltd
cmpsb
ficoml
add
ror
les
jp
ljmp
lds
das
nop
dec
cmp
or
aaa
fbld
mov
stos
xor
ret
cmc
mov
out
sub
jnp
dec
gs
adc
lods
push
jbe
rorb
sub
mov
in
arpl
sarl
xlat
es
daa
push
and
pop
adc
dec
fildl
mov
ja
inc
jmp
movsl
jp
movl
mov
loopne
pop
test
mov
mov
js
jge
ficomps
cmp
je
dec
int3
mov
xchg
in
iret
inc
fnstcw
mov
pop
imul
xlat
mov
pop
jmp
mov
mov
or
mov
out
stc
mov
cmc
mov
data16
leave
lods
repnz
add
jmp
push
idivb
arpl
mov
mov
call
or
xchg
aaa
jmp
das
push
jmp
scas
mov
adc
adc
push
xchg
and
shlb
mov
pop
and
aaa
fildl
sqrtps
scas
dec
imul
adc
jmp
add
and
jb
and
aam
xor
jge
push
sub
and
stos
fimuls
mulb
lods
mov
rcrl
jmp
sub
add
adc
fistl
mov
fiadds
jo
pop
shlb
xor
cmp
xorl
sahf
scas
mov
pop
adc
aaa
fwait
adc
stos
or
cltd
push
pusha
xor
shr
pop
xor
jne
pusha
mov
mov
mov
cmp
mov
xchg
mov
push
add
sbb
daa
iret
jmp
repnz
mov
mov
test
cwtl
lea
scas
mov
std
mov
xchg
test
cmp
shll
xchg
scas
pop
in
insl
pop
sahf
lock
mov
iret
rorl
iret
mov
test
movsb
cs
incl
push
scas
loope
pop
int
icebp
adc
cmp
ret
pop
jge
sahf
inc
hlt
les
and
or
notb
adc
fisubl
mov
cmp
cmp
test
js
mov
dec
negb
or
jbe
push
dec
lds
repnz
cs
cmp
test
lds
fs
dec
add
xor
pusha
bound
in
jne
addr16
imul
push
pop
es
mov
cmp
in
jp
repnz
lahf
dec
jp
inc
jg
into
jmp
fcmovb
jns
mov
out
jae
lahf
cs
ss
jecxz
rcll
cltd
loop
subl
dec
loope
jae
dec
pop
inc
push
push
std
das
mov
xchg
mov
dec
fld
int3
enter
ljmp
out
ljmp
out
cmpsl
cmpsl
mov
mov
or
or
pop
pop
or
and
sti
lds
mov
or
js
and
cltd
mov
jle
mov
adc
test
inc
push
incb
test
loop
test
jb
mov
cmpsl
js
outsb
in
in
arpl
push
ret
mul
out
rclb
aaa
pop
add
outsb
mov
clc
mov
andl
xchg
lock
or
ljmp
mov
push
mul
scas
daa
pop
cmpsb
mov
je
or
xorb
insb
mov
aaa
ss
rorl
pop
push
mov
insb
outsb
in
sbb
push
jno
std
rcr
pop
lahf
outsl
mov
mov
mov
push
dec
test
jo
sub
sub
jg
out
pop
jecxz
cmpsl
add
push
clc
add
imul
ror
rclb
pop
mov
std
dec
daa
rolb
aam
movl
mov
ret
cld
adc
mov
loope
test
dec
adc
int
add
lret
cmp
inc
pop
jg
movaps
mov
cli
int3
fadd
mov
cli
jbe
pop
jge
test
loope
mov
jmp
add
cwtl
insl
mov
sbb
pop
mov
inc
jl
mov
lret
ds
xor
orb
insb
jmp
fwait
je
hlt
imul
dec
out
and
rorl
jbe
pusha
sbb
push
bound
or
jns
add
add
xor
nop
push
or
mov
std
arpl
in
lods
xchg
mov
jnp
jae
and
cmp
test
jns
int3
jp
jecxz
sub
out
jg
add
fidivs
inc
dec
mov
cld
xchg
dec
pop
mov
out
out
adc
scas
pusha
outsl
cmp
lahf
lea
ret
xor
shl
pop
cwtl
stc
adcl
push
and
rcll
into
bound
xchg
mov
push
addb
cmpsb
adc
aad
push
lret
lock
jl
dec
dec
shll
jg
mov
shlb
mov
xchg
pusha
aad
cmp
daa
mov
inc
sub
lock
xchg
inc
and
dec
sbb
jnp
adcb
fnsave
ss
stos
pop
aad
push
sub
into
or
enter
push
jp
ja
xor
cli
ficoml
out
je
or
xor
xlat
scas
into
fsts
jno
icebp
sbb
push
mov
or
jle
fists
mov
lock
xchg
mov
mov
lds
rcrb
jg
sar
sub
inc
cmp
xlat
ret
cmp
ljmp
aas
outsl
outsl
xor
inc
push
in
bound
ret
nop
je
xchg
or
cwtl
mov
jmp
or
lahf
out
jnp
testl
addr16
push
mov
mov
leave
inc
out
rcl
scas
ret
add
test
inc
pushf
jbe
hlt
into
enter
outsl
std
cmp
mov
loope
mov
mov
pop
jo
mov
adc
or
jnp
inc
mov
or
aaa
ljmp
loope
mov
pushf
push
adc
jo
inc
inc
nop
lret
dec
cld
sahf
cwtl
ds
xchg
insb
jl
out
and
out
enter
outsb
lds
test
ss
jne
insb
insl
mov
scas
scas
imul
push
sub
adc
divb
loop
xlat
lcall
push
jae
pop
sahf
and
add
mov
add
push
and
je
mov
push
dec
push
mov
ds
cli
xor
ljmp
faddl
mov
push
popf
rorb
mov
pop
and
sbb
mov
in
mov
add
inc
inc
xchg
pop
in
xchg
imul
mov
mov
push
sbb
mov
insb
loop
jp
xor
pop
jne
test
mov
sbb
leave
xchg
jge,pt
incl
cmc
jo
add
add
pushf
imul
sbb
ret
add
jle
adc
ret
or
cltd
adcl
jmp
push
mov
ret
xor
aam
inc
cli
leave
arpl
out
fcmovnb
divl
mov
and
sbb
xlat
sbb
xor
hlt
roll
mov
mov
out
mov
pop
inc
iret
insb
lock
test
stos
scas
jecxz
cmp
mov
sbb
ficoml
dec
outsl
sti
sarl
fs
aas
or
cli
lahf
dec
dec
insb
fisubl
jbe
xchg
test
jmp
ljmp
scas
mov
xchg
add
repnz
in
std
pushf
xchg
mov
and
sti
mov
or
ljmp
mul
sahf
adc
xor
and
imul
paddusb
or
scas
mov
push
lea
adc
js
pop
scas
and
pop
mov
inc
dec
aaa
and
sahf
mov
int3
outsl
dec
cld
jns
test
mov
push
in
enter
jle
roll
mov
adc
insb
adc
mov
adc
fbstp
dec
ss
scas
pop
scas
popf
adc
jb
jmp
shlb
out
mov
aaa
icebp
clc
insb
sub
lods
sarb
mov
adc
cmp
js
loop
sub
xor
cwtl
pop
aaa
mov
cld
fs
popf
in
adc
pop
xchg
outsl
dec
jnp
mov
insb
sub
fldenv
mov
pop
pop
clc
pop
dec
gs
out
ss
jbe
cmp
ljmp
cld
mov
je
or
sub
xor
mov
shll
mov
repnz
scas
std
shrl
jle
add
lret
lahf
cltd
cmp
xchg
lods
pop
inc
xlat
xor
js
fldt
jno
mov
xchg
xchg
push
dec
add
jne
push
mov
ret
rcl
iret
inc
push
pushw
sub
push
pop
and
popa
adc
jg
jo
movl
lea
pushf
or
aas
lods
aad
mov
cmpsb
mov
mov
mov
lods
imull
into
cmp
mov
mov
add
sub
jecxz
xchg
xor
sbb
xor
sbb
mov
cmp
jbe
jnp
sub
or
pop
sbb
loopne,pt
sbb
ss
inc
mov
int3
test
xor
xchg
mov
mov
mov
sbb
sarb
push
mov
iret
mov
pusha
or
scas
pop
mov
repz
dec
add
aaa
xor
fcomps
xchg
pop
or
out
and
andl
sbb
inc
push
adc
xchg
repnz
xchg
sub
shlb
enter
repnz
mov
add
xchg
std
les
mov
rsqrtps
leave
fldl
test
out
sbb
hlt
push
pop
into
adc
stc
test
faddp
jp
nop
inc
scas
inc
xchg
or
add
jo
cmp
subl
mov
sub
ret
mov
lcall
sbb
and
cmp
in
aas
push
and
cmp
cli
js
push
aad
and
shlb
mov
adc
pop
js
mov
test
movsb
add
sbb
call
push
push
fwait
add
sub
push
push
sti
xchg
lods
out
cmp
xor
mov
aad
fs
mov
lret
push
adc
jmp
bswap
cmp
push
fs
sbb
int
fisubrl
leave
mov
jno
test
push
push
xor
mov
jbe
and
pop
xor
js
aad
add
repnz
test
loop
dec
xlat
std
jle
cmp
test
mov
loopne
xchg
jmp
mov
inc
sarb
mov
pop
sbb
scas
fsubr
adc
or
jb
push
mov
push
push
imul
ret
inc
xchg
sbb
fisubrl
popf
negb
call
add
mov
push
mov
or
xchg
cmpsl
pop
push
ja
testb
sub
pop
inc
pop
xchg
add
jp
les
add
cmp
add
dec
in
scas
push
test
ljmp
call
push
fistpll
jbe
and
adc
shll
icebp
mov
xor
orb
push
cmp
jne
xchg
inc
insl
stc
dec
fisubrl
shl
add
nop
mov
testl
adc
loope
jmp
lods
shl
mov
adc
inc
jae
fidivrl
call
ja
imul
xchg
ret
sub
aas
adc
out
cmpsl
sbbl
ja
adc
and
or
dec
adc
cmpsb
push
test
aaa
pop
push
nop
dec
sahf
jb
std
pop
sti
add
mov
inc
sarl
cli
mov
shrl
icebp
mov
je
jo
test
insl
inc
int3
stc
gs
xchg
sti
jg
nop
push
pop
xor
loope
and
sbb
test
xchg
lcall
lods
ja
sbb
add
popa
push
adc
push
fsubs
pop
in
sub
xchg
shrb
ret
es
sub
mov
pop
sbb
sub
outsb
shl
xchg
daa
cli
les
mov
insl
lahf
jae
cld
mov
jb
pop
and
xchg
push
mov
xor
ret
xchg
test
std
pop
in
out
stos
dec
scas
sbb
lret
pop
jle
lods
mov
lods
and
mov
add
jns
call
mov
pop
shrl
les
rol
jmp
popa
xlat
inc
int
mov
pop
adc
sti
and
pop
repnz
hlt
xchg
xor
cmc
push
out
jo
fs
aam
cmpsl
movsb
movsb
and
or
cs
out
mov
push
jle
lret
sbb
imul
add
sub
bound
out
into
push
xchg
imul
cmp
in
fldt
test
jnp
push
mov
mov
lock
pop
mov
lret
inc
outsl
sbb
xchg
sbb
sub
xor
push
jecxz
mov
mov
mov
fadds
xchg
std
fs
aad
call
xchg
pop
or
scas
out
mov
fcompl
jbe
lods
mov
pop
adc
sbb
mov
in
jb
xchg
cltd
jl
push
adc
fchs
out
mov
out
push
mov
es
cld
pop
shlb
adc
inc
je
mov
cmc
xlat
and
mov
insl
iret
push
lcall
cld
in
js
and
lret
cmc
lods
outsl
mov
mov
insb
mov
mov
jbe
fisubrs
mov
cli
mov
inc
out
ja
mov
subb
mov
lods
frstor
dec
lret
add
sti
xchg
adc
mov
ret
sbb
ds
call
inc
jns
cmc
dec
mov
jp
leave
pop
je
pop
daa
pusha
jns
adc
dec
jle
adc
add
je
js
lock
jb
clc
mov
ljmp
scas
cmpb
add
pop
and
scas
xchg
push
mov
jl
jmp
xor
and
loop,pt
lds
lret
imul
mov
cmp
adc
dec
fcmovbe
and
pop
stc
rcll
jne
sti
ss
nop
cmp
scas
pusha
add
mov
push
mov
xchg
jp
adc
fiaddl
pop
pop
lods
pop
icebp
cmp
adc
jno
aam
leave
or
push
mov
mov
out
dec
mov
xchg
ret
movsl
rcr
mov
inc
dec
fcoml
loope
aaa
pop
test
and
idivl
incb
cwtl
mov
jp
loope,pn
adc
notb
cmp
push
push
jecxz
jno
cmp
pop
cwtl
std
loop
punpckhwd
imull
enter
loop
sbb
pop
lahf
pop
aad
sti
andl
mov
mov
aaa
aad
in
mov
imulb
pop
cs
inc
mov
xor
popa
jl
cmp
adc
sub
mov
push
sarb
data16
outsb
ja
ds
lret
jp
movsb
nop
lret
mov
and
mov
mov
in
ret
push
mov
xor
and
mov
arpl
adc
repz
fdivl
inc
cld
sbb
cmpsl
daa
mov
push
sbbb
lcall
dec
ljmp
or
mov
aas
push
pop
gs
jle
mov
es
sub
mov
aas
sti
mov
test
sahf
mov
loopne
mov
jnp
mov
lods
ja
pop
int3
shr
xor
outsl
add
xor
ja
dec
movsl
dec
es
mov
inc
jmp
scas
sub
movsb
aaa
std
mov
cmp
push
xchg
pushfw
incb
je
cmp
popl
push
jge
lock
cs
stc
push
ret
out
mov
xor
mov
xor
and
sub
into
add
ljmp
outsb
fisubrs
inc
pop
sbb
adc
sbb
stc
pop
add
insl
jecxz
mov
shll
adcb
sub
or
rcll
sbb
pop
sbb
dec
out
movsl
and
nop
sahf
subl
push
push
push
int3
mov
pusha
sahf
cmc
cli
inc
cs
fistps
les
xchg
mov
out
test
jg
out
push
test
out
mov
scas
push
je
lcall
rcr
lods
mov
daa
add
and
sarb
gs
dec
rolb
pop
inc
sbb
push
fs
mov
pop
mov
ret
lds
out
enter
outsb
cmpsl
pop
pop
pushf
mov
xchg
dec
xchg
xchg
pop
lods
lods
sub
sbb
ficoms
fwait
inc
bound
mov
mov
mov
mov
loope
mov
jb
imulb
xchg
adc
movsb
mov
test
cmp
sbb
mov
test
pop
into
push
dec
out
mov
cltd
push
mov
dec
dec
cmp
movsb
mov
and
lds
loopne
or
xor
fisubl
add
fidivs
jns
cmpsb
or
mov
xor
mov
and
clc
cltd
pop
inc
loope
les
pop
jge
cmp
jmp
push
negl
arpl
pop
roll
pop
pop
push
mov
add
xor
cmpsb
cs
mov
xor
lods
stos
cltd
ss
mov
xlat
pop
sti
dec
cmp
mov
mov
jl
mov
mov
fs
inc
xlat
stos
lds
shrl
xor
lret
jle
jnp
sbb
pop
pushf
xor
negl
mov
and
xchg
call
fcoms
lret
lods
es
push
je
or
divl
lea
pop
aas
sbb
push
aas
fadd
sahf
popa
mov
lock
ja
adc
inc
add
pop
outsb
jecxz
lock
ja
mov
mov
mov
mov
adc
pusha
push
in
mov
add
ret
ss
sub
int3
ret
push
fidivl
mov
imul
add
ret
or
inc
outsb
shl
mov
adc
fnsave
out
adc
jo
adc
and
pushf
les
mov
adc
xlat
fnsave
outsb
fldt
loop
xchg
jg
cld
push
xor
add
out
push
cmp
mov
dec
dec
push
and
dec
pop
scas
movsl
sub
adc
pop
daa
das
jae
arpl
scas
pop
inc
mov
add
inc
js,pn
sbb
xchg
mov
enter
xchg
xchg
std
or
or
lea
int
sarl
xchg
inc
fisubrs
adc
int3
rcrb
hlt
aaa
sahf
fildl
cmp
dec
pop
pop
cmpsl
movsb
sbb
std
test
adc
xchg
rdmsr
fiadds
je
or
enter
hlt
push
mov
je
in
sub
sbb
stos
aas
add
test
test
fldt
sbb
stos
imul
xor
popf
aaa
rorb
pop
sar
xor
das
add
mov
sub
jbe
mov
add
mov
loope
scas
jg
xchg
adc
rcl
mov
inc
das
pushf
popa
out
push
aam
pop
add
dec
sub
ret
mov
cld
int3
jp
mov
mov
pop
mov
jp
mov
and
imul
pop
pop
mov
rcrl
jmp
dec
ja
mov
and
scas
fcmovnbe
mov
mov
repz
movsl
out
orb
mov
fmuls
push
sub
js
adc
fimuls
adc
sbb
icebp
dec
jnp
lret
lahf
or
pop
jge
out
xor
inc
sarb
stos
push
nop
or
push
cmp
inc
adc
and
mulb
cmpsb
test
rcr
into
mov
sub
cmp
xor
push
fldcw
cwtl
or
inc
pop
mov
cmp
in
push
int
test
imul
mull
jbe
fsts
xor
stos
fstpt
mov
jle
lret
cltd
sub
adcb
xchg
into
add
imul
jmp
jae
aad
lods
inc
inc
dec
cmp
jge
xchg
inc
xchg
lods
sbb
mov
pop
mov
xlat
out
add
lods
xchg
sub
movsb
pop
mov
enter
clc
cwtl
jg
xchg
in
cmpsl
loop
push
pop
mov
enter
and
mov
mov
inc
fisttpl
jnp
ja
cmp
xlat
rorl
pop
int
xorl
jp
mov
cli
push
pop
jne
pop
fdivp
sub
cmp
xchg
inc
ret
subb
popa
xlat
aam
cmp
and
pop
mov
ret
fistl
sbb
or
xchg
ret
jl
cmc
jne
pop
adc
adc
iret
aas
mov
shll
movsb
sub
inc
pop
ljmp
mov
xchg
adc
aaa
push
dec
test
lahf
fnsave
jae
fdivl
ret
or
sti
mov
rcrl
jg
ds
adc
lcall
fnstcw
shr
cmp
push
add
mov
int
inc
inc
and
push
sub
mov
enter
jnp
jecxz
aad
gs
aad
sub
adc
inc
fcoms
sub
scas
xchg
mov
push
popa
jg
jmp
jne
xchg
dec
inc
in
cmp
out
xor
cmp
push
mov
aaa
icebp
xor
xor
jg
outsb
push
jne
jno
js
stos
stc
or
xchg
mov
cs
lock
stos
adc
inc
add
lea
imul
push
xchg
xor
scas
sub
movsb
nop
lret
pop
and
inc
lods
ljmp
fnstcw
pop
data16
mov
add
push
jo
push
adcl
dec
adc
fstpl
rorb
lods
mov
dec
pop
pop
jg
mov
push
movsb
popa
mov
push
jp
outsb
add
stc
mov
cmc
test
jmp
cld
sbb
push
test
test
cmpsb
push
stc
sub
imulb
ficomps
inc
mov
loopnew
inc
mov
sbb
add
scas
dec
mov
dec
sub
sub
mov
jns
dec
test
scas
stos
pop
les
xchg
popl
lret
rclb
cwtl
adc
rorl
sbb
or
lods
cmp
fsubr
xor
cmp
jecxz
or
push
fadd
imul
pop
loope
hlt
inc
andb
inc
fnstcw
or
dec
inc
pop
inc
pusha
repz
js
xchg
dec
loopne
push
push
pop
addr16
xchg
add
out
jns
out
aaa
xor
shl
rolb
cld
shrb
sbb
xchg
sbb
xchg
test
mov
iret
rolb
push
xchg
lds
xchg
lahf
aad
or
adc
imul
jmp
cltd
xor
popf
mov
fstpl
loope
js
or
pushf
jg
mov
ljmp
push
aad
icebp
add
cmp
mov
inc
mov
outsb
cmp
or
dec
insb
xchg
pop
mov
je
push
sarb
dec
jle
xor
sbb
xchg
inc
jle
imul
out
dec
mov
add
rol
pop
bound
xor
mov
cmp
call
in
fiadds
push
fwait
adc
jg
mov
enter
sti
lahf
cwtl
ljmp
push
sahf
jecxz
or
jo
mov
mov
mov
fwait
jle
push
test
or
dec
stc
imul
inc
sub
jnp
out
pop
xchg
iret
in
inc
leave
and
in
push
dec
jmp
ja
ljmp
js
pop
inc
mov
dec
mov
imul
stc
ret
jle
lret
loope
xchg
inc
in
add
mov
mov
inc
mov
push
push
incl
xchg
outsb
adc
jo
add
jo
loop
stc
sbb
sub
das
mov
cmc
mov
sarb
rcrl
dec
jg
loop
rclb
sub
stos
aaa
add
daa
loop
fnstcw
lock
sbb
shlb
scas
iret
mov
iret
or
orb
lcall
ret
inc
jle,pn
mov
lea
popa
inc
inc
popa
jg
sbb
addl
test
leave
std
aas
scas
pop
rcll
addl
addr16
sti
test
shl
jne
push
dec
std
push
mov
fcompl
fidivrl
mov
jecxz
sbb
cmpsl
adc
ljmp
cmp
fisttpl
sub
outsb
lock
dec
stos
movsl
aad
lahf
push
popa
push
cwtl
popa
lock
fs
dec
push
mov
pop
xchg
aam
push
lret
shll
pop
dec
pop
jl
push
addb
in
loop
mov
mull
lock
loop
pop
lret
mov
xlat
int3
xor
pop
xchg
push
jp
mov
push
jl
addr16
pop
push
xor
repnz
jle
jo
cs
dec
cmpsb
lcall
out
xor
mov
pop
test
xchg
jecxz
add
dec
aam
mov
mov
mov
cmpsl
aad
fwait
pop
sub
aas
pop
mov
add
push
icebp
rcl
leave
xchg
mov
out
loopne
inc
scas
sub
adc
jg
dec
xchg
sbb
push
out
les
mov
mov
out
push
daa
repnz
les
ss
mov
mov
cmc
mov
push
aam
xchg
sbb
test
inc
testl
xor
push
sbb
xchg
out
sti
nop
jnp
ret
mov
push
inc
pop
pop
jmp
cmp
sub
pop
adc
int3
add
hlt
sbb
mov
imul
scas
sub
push
lds
gs
mov
in
sbb
mov
filds
repnz
mov
push
inc
xchg
in
xchg
sub
test
pmaxub
sub
popa
mov
in
notl
cmp
xor
push
sub
mov
mov
or
cmp
xchg
fisubrs
test
dec
mov
and
mov
mov
and
adc
nop
std
lods
pop
dec
jl
ret
cwtl
sbb
js
sbb
loope
jg
notl
fistpl
pop
scas
js
hlt
fisubrs
fsubr
inc
cmp
inc
mov
mov
sbb
push
push
test
push
dec
mov
mov
push
mov
ja
ficoms
rcrl
ret
cld
ror
jmp
dec
addl
push
fcmove
repnz
in
fstpl
push
call
mov
xchg
cmpsb
xor
xchg
mov
xor
test
mov
jecxz
jbe
xchg
jae
lret
cmp
stos
pop
aad
mov
push
inc
jg
stc
xchg
pop
mov
push
dec
pop
cld
jns
inc
dec
mov
pop
outsb
scas
out
clc
sub
cmpsb
mov
bound
xchg
cld
cmp
mov
test
inc
aad
xlat
add
mov
sbb
push
fldl
xor
cmpsl
repz
inc
xlat
cld
sub
or
inc
sub
xchg
in
mov
and
fadds
jecxz
push
sbb
sbb
cmp
and
ds
push
iret
sub
lock
pusha
mov
ljmp
pop
pop
add
sti
push
xchg
dec
xor
ljmp
push
sbb
cmpsb
addr16
sti
push
cmpsb
and
dec
pop
pushf
ds
loopne
or
ss
mov
cli
inc
daa
mov
out
cmp
mov
push
xchg
stos
or
loopne
and
test
fdivs
scas
cmp
mov
lcall
popa
mov
mov
mov
mov
mov
in
dec
add
je
dec
cmpsl
lret
mov
mov
inc
incl
or
outsl
inc
dec
gs
xor
push
in
addr16
in
mov
xchg
push
mov
in
mov
push
imulb
pop
mov
xchg
dec
and
sub
bound
xor
jbe
loope
test
sbb
sbb
push
jb
pop
jmp
push
cwtl
aad
push
out
call
call
pop
xchg
pusha
jbe
push
daa
out
adc
movsb
repnz
and
ss
xor
pop
sbb
flds
mov
out
mov
das
scas
xchg
add
scas
cmc
xchg
dec
jmp
aad
clc
nop
sbb
lock
fnstenv
cmpsl
jb
mov
xlat
or
fmuls
mov
pop
mov
push
dec
scas
xor
adc
xor
fildll
insl
fidivl
sbb
xchg
cmp
lcall
repz
jnp
push
jp
mov
jle
sbb
test
jge
std
pusha
sub
les
xchg
insb
orb
in
and
dec
adc
pushf
cmp
lods
jbe
fildl
mulb
jecxz
dec
xlat
dec
pop
inc
cmp
mov
cmpb
std
pop
jg
jae
loope
data16
xor
ss
int
sti
adc
mov
mov
xor
fcmovbe
sbb
sbb
pop
jbe
add
jne
mov
fcomp
pop
push
fisubrs
mov
gs
test
xor
inc
loope
out
adc
inc
scas
in
ljmp
out
dec
fimuls
cwtl
fimull
xchg
adc
addr16
test
mov
insl
inc
dec
cli
test
test
scas
test
jb
sbb
adc
xchg
mov
lret
addl
inc
in
ret
mov
cmpsl
cmp
sbb
push
rolb
fmul
out
jne
movsl
dec
inc
out
xchg
jl
sahf
inc
push
lock
ret
adc
mov
adc
cmp
or
xor
cli
mov
ret
xor
sarb
add
aad
cmpsl
lock
pop
pop
imul
arpl
sbb
fidivl
icebp
adc
add
pop
std
and
stc
pop
mov
orl
mov
add
dec
jbe
negb
adc
aad
cmp
lods
cmc
mov
cmp
in
fcmovu
iret
inc
loop
int
jge
cmp
in
xor
push
add
out
int
imul
or
ja
push
jnp
xor
xchg
repnz
cmp
out
cld
add
and
xchg
push
call
int
jg
jmp
pusha
jg
xlat
int
sbb
xor
or
or
adc
ja
push
push
mov
out
cld
cli
xor
fistl
sbb
gs
mov
in
scas
out
fcom
es
fs
loope
adc
adc
xor
lock
test
push
in
in
daa
aam
pushf
xchg
cs
jecxz
adc
aam
aaa
dec
mov
incl
mov
loope
in
imul
add
push
jle
cli
in
or
mov
call
js
mov
int
insb
jg
insl
xchg
cli
sbb
mov
adc
push
jmp
jno
dec
out
in
out
scas
dec
sub
lret
dec
outsb
jnp
test
jae
insb
test
mov
in
rolb
inc
mov
cltd
addr16
fwait
adc
push
repnz
jl
push
repz
cmp
cmp
or
cmp
inc
lock
fstp
dec
sub
mov
mov
mov
and
xor
push
lahf
mov
adc
cld
inc
cld
repz
dec
fdiv
mov
inc
sub
loop
ljmp
addl
shrl
pop
pop
dec
xor
xchg
les
test
inc
push
cmpsb
push
dec
inc
je
js
pop
adc
fdivr
iret
mov
fbld
sarb
xchg
push
mov
mov
xor
inc
push
fstpt
pop
sti
aad
cld
push
ffreep
jne
mov
ljmp
add
cmp
mov
push
stc
call
gs
pushf
es
and
mov
bound
sahf
adc
adcb
pop
cltd
inc
adc
es
mov
sahf
jns
mov
movsb
xor
cs
jb
push
scas
fcomi
popa
mov
pop
pop
negb
sbb
jle
pop
xor
rcrl
mov
pop
fisubl
shll
dec
mov
jb
pop
pop
pop
insb
rorb
aam
xor
fstpl
repz
js
andl
icebp
test
out
xchg
stos
outsl
dec
or
and
imul
sub
adc
std
mov
jecxz
xchg
cmp
insb
imul
sbb
pop
scas
loopne
xor
add
out
xor
xor
int3
mov
add
mov
cmc
inc
dec
mov
sbb
es
cltd
lock
push
cmpsb
lock
push
divl
sub
jle
inc
loopne
xor
cmc
mov
sbb
ds
adc
sarb
cltd
outsb
jg
cmp
cmp
jne
sub
cmpb
int3
jle
xor
add
in
adc
add
dec
lahf
mov
push
insb
daa
push
sbbl
push
add
popa
pop
aas
out
xchg
inc
sbb
push
bswap
mov
insl
lcall
ja
xchg
leave
fdivl
sub
inc
and
dec
loopne
lahf
mull
xchg
dec
cwtl
sbb
lret
jb
in
rorb
jmp
les
cli
mov
cmp
pop
add
pop
inc
icebp
mov
ret
fsubr
shrb
push
xor
leave
add
aad
mov
loop
push
pop
mov
mov
dec
ljmp
pop
pop
xchg
lods
aad
data16
test
mov
faddl
or
jl
cld
xchg
pusha
mulb
xchg
inc
push
adc
int3
adc
lahf
loopne
mov
cmpsb
xor
xor
stos
sub
xchg
xchg
xor
jne
pusha
iret
loopne
lea
movsb
mov
call
or
cmpsb
push
incl
inc
ret
stc
and
jbe
std
xor
iret
pusha
and
add
pop
jge
pushw
je
call
cmpb
imul
sub
cmp
or
sar
iret
sub
jl
or
dec
adc
jns
mov
inc
sub
test
jp
rorb
inc
sub
loopne
rcrl
mov
hlt
and
and
sarl
test
xchg
dec
imul
lods
xlat
jge
arpl
xor
leave
mov
arpl
xchg
aas
mov
jo
xor
mov
aam
addl
mov
outsb
arpl
add
pop
leave
daa
inc
pop
add
xchg
jno
push
loop
ret
inc
cmc
pop
enter
mov
lret
out
lods
insb
mov
cs
mov
stc
or
in
lods
pushf
pop
outsl
push
adc
adc
cmc
lret
jns
ficoms
mov
sbb
mov
test
lcall
inc
push
mov
les
insb
pusha
out
ret
xchg
lods
dec
icebp
sub
mov
adc
das
push
fdiv
dec
jl
add
mov
in
pop
aad
loop
pop
repnz
cli
fcoml
jae
mov
jo
dec
lcall
and
loope
mov
add
repz
and
mov
adc
pushf
idiv
jecxz
pushf
cmc
aad
aas
lret
int3
jge
pushf
shl
add
mov
fidivrs
insl
adc
jne
lds
mov
jl
adc
sbb
iret
jno
sub
pop
sub
lock
dec
pop
mov
jb
out
xchg
pop
mov
cmpsb
imul
mov
insb
cltd
sahf
movsb
scas
xor
enter
sbb
data16
test
push
xorb
popa
add
sub
aaa
loop
mov
je
aas
int3
lret
outsb
test
lret
enter
icebp
cmp
jmp
and
iret
push
fwait
pop
fyl2x
pop
out
shl
mov
pop
sub
inc
ja
adc
mov
roll
sti
enter
loop
bound
clc
rolb
inc
test
mov
or
into
iret
jb
pop
es
cmp
icebp
cltd
test
or
inc
fistps
cs
xchg
jge
push
inc
pop
loope
jne
sub
push
jp
pop
js
popa
xchg
cld
stos
push
stos
jo
movsl
mov
arpl
cli
out
in
lods
jnp
xor
jl
xor
test
fs
in
jae
test
dec
popa
cwtl
push
sub
mov
jae
dec
arpl
inc
enter
dec
in
sub
adc
les
jns
jo
pusha
pop
mov
stc
push
inc
mov
add
int
lret
adc
insl
fnstenv
dec
in
jno
cmp
xor
lret
repnz
mov
mov
jg
sub
std
mov
idivl
out
test
dec
test
xor
mov
sbb
sbb
xchg
sub
xchg
es
orb
sti
mov
xor
enter
sub
in
sbbb
or
mov
inc
mov
aam
shll
jbe
enter
mov
mov
and
fisubs
mov
inc
test
repz
js
andb
js
xchg
xlat
test
adc
add
sbb
dec
cmp
int3
and
or
mov
cld
or
out
adc
or
dec
test
sar
mov
pop
shlb
pop
mov
jns
xchg
fstl
hlt
and
lock
mov
das
xorl
jnp
mov
mov
add
inc
rcrb
pop
pop
hlt
rcll
filds
xor
adcl
cli
pusha
mov
mov
xchg
dec
mov
stc
std
mov
jl
push
fimuls
adc
and
adc
xchg
inc
mov
add
add
fwait
xchg
sbb
sub
fcoms
mov
add
outsb
dec
xchg
cwtl
and
mov
and
sbb
inc
and
loope
js
add
or
fimull
icebp
fldl2e
push
test
pop
pop
jmp
add
pop
cmp
xchg
lret
les
cli
pusha
sti
jg
les
push
stos
inc
sbb
pop
aam
in
repnz
nop
or
rcll
je
lock
cmp
cmpsb
jmp
lahf
pop
rorl
lret
iret
dec
js
mov
dec
ljmp
pop
test
aas
lods
test
aad
imul
mov
xor
cltd
call
xchg
in
mov
xchg
xor
xchg
jle
and
cmp
js
movsb
or
adc
inc
sarb
push
nop
test
hlt
pop
jnp
mov
test
rorl
mov
sbb
cld
inc
mov
arpl
xor
cmc
dec
jge
and
jecxz
add
xor
movsb
adc
ret
iret
jmp
cmp
pushaw
mov
mov
mov
inc
pop
jae
xchg
xchg
and
jns
adc
mov
scas
push
push
or
jns
sub
pushf
xchg
sbb
cmpb
and
iret
fbld
cltd
test
and
clc
xor
xchg
sbb
inc
je
xchg
push
and
xchg
imul
mov
cmc
ret
fidivs
inc
sarl
add
inc
pushf
adc
sbb
idivl
cltd
aaa
push
cmp
enter
add
les
out
pop
mov
xchg
int3
push
xchg
mov
jbe
jo
popa
pusha
je
mov
movups
jecxz
lahf
xor
mov
ja
push
mov
je
xor
push
pop
scas
ret
nop
ret
mov
mov
cmp
insb
fs
in
repz
sub
xor
gs
pop
iret
and
jae
in
jecxz
cltd
cli
push
inc
xchg
jnp
in
xchg
mov
sbb
ret
fstpl
mov
pop
push
xor
test
mov
gs
movsb
mov
out
les
das
xor
gs
aaa
scas
sub
or
adc
clc
sbb
popf
dec
pop
pushf
sub
int
outsb
push
outsl
cmpsb
xor
and
in
les
mov
cld
dec
inc
out
cs
or
mov
dec
lcall
leave
stc
test
sahf
mov
pop
lahf
cmpsl
stos
ljmp
gs
adc
push
push
and
dec
aam
call
adc
fnstcw
cmpsb
cmp
rorb
cmpsb
lds
mov
movsb
int3
push
int3
es
and
lcall
jb
jecxz
inc
jg
movsl
addr16
cs
pop
cmpsl
dec
out
adc
movsl
mov
lods
mov
fcmove
xchg
std
add
pop
clc
inc
pop
int
movsb
mov
inc
xchg
mov
clc
shlb
lods
mov
popa
repnz
inc
daa
mov
pop
push
xchg
aaa
jg
or
dec
sbbb
int3
test
ret
aam
icebp
adc
aaa
fiadds
adc
fucomip
jae
or
sbb
loop
cmp
leave
inc
push
inc
xchg
mov
decb
dec
inc
push
add
push
xchg
mov
fisubs
in
cli
xchg
divl
jp
test
fildl
in
sub
mov
and
adc
jbe
popf
or
dec
daa
xchg
lcall
popf
lret
xchg
jle
fmull
inc
sub
cltd
push
sub
and
mov
sarl
push
and
pop
inc
mov
xchg
in
jg
add
std
mov
jno
mov
mov
push
icebp
jl
sahf
sbb
mov
in
jno
and
ds
cmp
es
inc
incb
negb
jne
arpl
or
pop
mov
frstor
cli
jno
aaa
ret
push
sbb
inc
sti
pop
jp
mov
sbb
int
fmuls
or
std
cwtl
and
adc
pop
jg
xor
adc
xor
push
inc
inc
mov
xor
ret
test
adc
sub
pop
mov
lcallw
stos
push
mov
mov
sahf
addb
pop
mov
sbb
imul
les
in
clc
mov
xor
push
cmp
stos
imul
add
xor
es
stos
outsb
ss
adc
lahf
sub
insl
lcall
jae
jl
sub
sub
push
mov
loopne
mov
sub
in
arpl
testb
fnstsw
push
mov
jno
sub
mov
xorb
cmc
adc
arpl
cmc
mov
js
inc
in
mov
or
and
cltd
push
mov
fcoms
pop
stc
mov
or
push
mov
mov
jmp
jle
sub
leave
scas
fimuls
inc
out
add
xor
lahf
or
pop
ficoml
in
push
adc
hlt
jle
in
jmp
cli
cmp
pop
adc
push
pop
inc
stos
jmp
or
ljmp
in
mov
sub
jmp
repz
popl
adc
cmp
lret
fldcw
mov
into
in
pop
lock
push
mov
jo
andb
aad
mov
in
je
clc
lret
sbb
inc
mov
sub
jne
or
scas
mov
push
and
mov
push
jo
jle
pop
nop
lds
popf
jbe
stc
xor
adc
bound
dec
inc
pop
pop
rorb
mov
fmuls
lds
ljmp
in
fimull
adc
xchg
lcall
dec
sahf
jecxz
movsl
fcomp
jbe
push
add
sub
int3
mov
push
ljmp
mov
cltd
sub
xchg
mov
sub
je
sub
and
mov
leave
rcr
daa
and
in
mov
lods
icebp
pop
mov
pop
xor
jnp
mov
into
dec
adc
pop
sub
inc
clc
jl
ret
adc
les
lahf
mov
or
call
cmp
jg
fdivrl
out
lods
mov
jo
mov
mov
xlat
adc
mov
sub
add
add
ds
les
mov
dec
sti
stos
aam
ret
repz
popf
inc
mov
dec
push
mov
cmp
and
lds
insb
xor
xchg
xchg
test
sbb
rcl
cs
fwait
add
lods
push
cmp
sub
cmp
sti
lahf
aad
jbe
lods
push
inc
inc
jg
pop
les
add
rcl
cwtl
or
js
add
inc
jle
aas
outsb
mov
leave
iret
cmp
push
xchg
mov
jnp
pop
and
ret
int
aaa
popl
mov
and
xor
cli
sub
pushf
in
push
leave
xchg
xlat
in
loope
push
leave
xchg
inc
lret
push
push
push
xchg
ret
mov
push
ds
int
pop
js
sub
sub
popa
aas
je
pushl
hlt
push
movsl
add
xor
cmp
addl
mov
popa
cs
jbe
inc
std
cs
mov
add
sub
stc
test
sub
cmpsb
or
pop
jae
push
fiaddl
sub
and
lcall
jae
xchg
jno
pop
sarl
xchg
inc
fisttpll
ret
cli
xchg
and
or
add
mov
mov
sub
or
rorb
inc
movb
ds
loopne
mov
sub
pop
sbbl
jecxz
loope
mov
mov
push
movsb
dec
lea
adcl
popa
xorl
jl
imul
scas
in
add
cmp
test
cmp
cmpsl
and
lods
iret
xorl
jl
mov
test
fnstcw
shrl
mov
xchg
test
js
sub
mov
dec
iret
xchg
jbe
je
cmpsl
shlb
mov
cmpb
sbb
mov
aad
outsl
sbb
and
scas
adc
xlat
jecxz
in
idivb
jmp
adc
movsb
pop
imul
mov
sbb
popf
xchg
inc
cmc
dec
rolb
repz
jge
dec
fstl
andb
add
pop
movsl
jl
lods
aaa
lea
popa
xor
pop
or
push
xchg
pop
bound
jp
adc
push
lret
cmp
cmp
roll
jb
add
call
lret
popf
mov
push
and
mov
data16
into
pushf
enter
push
sbb
or
mov
ffreep
fs
xor
mov
sub
ja
pop
mov
sbb
dec
iret
sub
mov
aam
popa
jle
nop
pop
out
aam
mov
lods
and
and
or
inc
jecxz
popa
nop
mov
test
xchg
xchg
add
pop
mov
icebp
push
xor
xchg
sbb
mov
sub
dec
cmp
mov
pop
pop
rcrb
ss
jg
adc
bnd
sub
add
xor
inc
mov
cmp
cmpb
aad
insl
dec
shlb
sbb
jge
mov
rclb
leave
ss
out
jns
adc
xchg
outsb
jecxz
testl
pop
sub
ret
out
lahf
inc
sti
loopne
sub
in
lea
sub
sub
outsb
bound
scas
sbb
adc
movsb
sub
repz
inc
outsb
icebp
repz
xchg
das
mov
test
xchg
loop
xchg
rclb
inc
test
aaa
mov
hlt
sub
call
pop
scas
aaa
jge
test
lock
mov
push
jmp
sub
xchg
mov
loop
insb
ret
xor
shl
add
sub
lahf
sbb
push
dec
loopne
push
jne
sbb
fnstsw
sbb
dec
inc
fdivrl
popa
mov
lcall
in
mov
xchg
test
or
in
fnsave
sbb
cvttps2pi
and
cs
jbe
cmpsb
pop
sub
sbb
ljmp
sbb
fstl
cmp
stc
mov
jbe
stc
loopne
pop
cltd
jae
call
subb
cmp
stos
stc
xchg
inc
add
inc
sbb
int3
ret
adc
pop
dec
out
sub
or
out
jno
scas
lds
push
and
ficoml
cmp
lds
test
and
or
aam
or
scas
xor
sbb
jo
popa
ss
pusha
lods
popa
ja
in
xchg
sub
test
mov
arpl
push
jae
icebp
sbb
inc
xor
dec
xor
xor
xchg
repnz
push
mov
in
pop
out
fstpt
ljmp
sbb
fcmovu
imul
pop
sbb
in
out
mov
push
pusha
aam
loope
lcall
shlb
push
xor
sbb
fs
mov
push
popf
mov
fcmovnu
inc
pop
push
mov
push
movsb
lret
dec
jae
xor
lea
inc
or
mov
dec
nop
pop
mov
paddb
leave
test
mov
dec
sti
lods
add
mov
das
pop
adc
ss
jns
or
lds
aam
cmp
lahf
add
aas
int3
xchg
xor
ficoms
mov
daa
push
imul
inc
stos
or
pop
into
idivl
cld
jge
xchg
sbb
mov
pop
inc
mov
js
push
push
insb
jg
loop
jl
pop
iret
sbb
dec
add
idivl
outsl
xor
das
mov
xchg
aad
pop
and
xchg
lods
sbb
jmp
dec
fidivrs
mov
push
xchg
icebp
fcoms
shlb
jns
loopne
das
inc
movsl
sti
dec
mov
push
popf
or
js
out
cmp
imull
and
sti
mov
inc
adc
mov
hlt
aad
mov
xchg
push
stos
add
addr16
stc
mov
repz
pop
mov
add
stos
outsb
and
ja
adc
stos
scas
jle
mov
dec
scas
pop
or
jno
movsl
test
jnp
push
aam
sbb
lret
je
adc
fwait
pop
les
divl
inc
movsb
mov
sub
add
push
subl
in
push
jmp
aas
nop
push
push
dec
mov
sub
xchg
xchg
add
mov
xor
mov
push
cmpsl
add
test
jg
jnp
mov
jmp
push
xchg
push
xchg
test
pop
inc
pop
jo
xor
dec
pusha
roll
es
dec
shll
sub
fcomps
les
mov
xchg
int3
rorl
jecxz
mov
push
jb
mov
jo
cld
push
or
lods
and
mov
lds
fwait
or
jmp
mov
repz
mov
pop
sub
xchg
cmpsl
stos
pop
scas
lcall
or
pushf
sbb
shll
jmp
nop
fdivrp
inc
push
mov
fnstsw
adc
test
cmpsl
shll
cmc
pop
mov
and
in
leave
out
sbb
add
jg
mov
jae
adc
fucomip
mov
mov
dec
cmp
pop
or
out
push
and
and
mov
movsb
cs
lock
add
dec
xor
dec
cwtl
pop
mov
or
mov
hlt
jecxz
jg
aad
or
pop
and
shrb
cmpsb
sbb
dec
repz
xor
or
jb
and
xchg
rcr
test
in
cmpsl
lds
mov
add
insb
push
das
imul
out
inc
cmpsl
imul
fidivrl
icebp
jmp
lods
fsubs
cwtl
shlb
xor
fwait
imul
or
into
or
lods
xor
cmpsl
mov
inc
out
adc
inc
loope
mov
mov
dec
xorb
jge
insb
push
adc
ret
outsb
stc
sbbl
pop
pop
movsb
xor
hlt
cmpsl
xchg
adc
les
out
stos
shll
cmpsb
and
cmp
sub
fidivs
mov
sets
jge
movsl
enter
out
and
inc
les
xor
add
mov
sbb
cmp
es
sub
mov
sbb
test
xchg
xchg
jl
jb
jne
sti
and
sarb
sbb
pop
xor
cs
dec
lods
dec
out
loope
out
mov
ss
xlat
inc
aad
mov
adc
xchg
aaa
test
dec
outsl
sarb
jl
setge
dec
test
into
js
movsl
sub
test
int
out
jnp
sahf
cmpsl
push
jb
sub
movsl
nop
loopne
and
or
inc
xchg
addl
adc
pop
lret
push
jl
sarb
lcall
push
sbb
mov
pusha
jmp
movsb
vfrczss
mov
cmp
xchg
mov
pop
fiadds
push
cmp
mov
push
push
mov
add
mov
addr16
out
pop
dec
shrb
fidivrs
jo
sub
cmp
jb
pop
pusha
mov
pop
pop
or
rcll
sbb
das
fwait
adc
push
dec
xchg
pop
lock
jg
xor
xor
fdivl
push
stos
outsb
lea
push
add
ficompl
jo
stos
int3
ljmp
fdivrl
repz
fcmovu
lods
jnp
movsl
loop
fdiv
xchg
jb
leave
dec
lcall
push
ds
lea
push
jo
mov
aam
popa
cli
aas
iret
popf
adc
pop
in
imul
pop
xchg
call
jg
adc
ret
fistpll
outsb
lea
xchg
call
lret
call
or
mov
sub
lcall
xor
stos
pop
pop
ficoml
mov
cmpsl
int
push
cmp
mov
pop
in
xor
sbb
lods
xchg
add
scas
int3
out
fnstenv
or
pop
in
daa
push
inc
das
lds
dec
cmpb
sub
popf
stc
inc
outsb
xor
xchg
adc
jmp
mov
jmp
sarl
ljmp
mov
sub
xchg
mov
nop
cmp
lock
lret
iret
xchg
and
ja
cmp
aad
mov
mov
jne
push
stos
mov
adc
stos
push
pop
inc
sub
aaa
cwtl
mov
scas
rclw
cmp
lret
and
sub
sbb
fildl
inc
ss
add
cmp
ljmp
insl
mov
mov
xchg
fwait
aam
or
xlat
arpl
push
test
mov
xor
leave
adc
add
mov
lea
mov
faddl
sahf
pusha
add
daa
ror
test
dec
das
test
mov
dec
das
imul
data16
movsl
int3
rcr
das
nop
jo,pt
jns
jnp
push
test
cmp
adc
or
fcmovnb
fcmovnb
js
xor
xor
sub
inc
daa
inc
in
addr16
lret
gs
add
sbb
std
mov
jecxz
xor
adc
outsl
iret
sbb
mov
xorl
iret
std
outsb
and
loop
es
mov
xchg
mov
mov
mov
sbb
stos
sub
rol
test
pushw
out
scas
cmpsl
adcl
xor
and
jno
cmp
cmp
hlt
mul
pop
mov
adcb
xor
call
jmp
sub
fcomi
xor
pop
push
push
stos
pop
fdivrl
addb
and
dec
pop
mov
ret
sub
les
sti
jmp
dec
push
stos
in
sbb
mov
mov
mov
dec
pop
mov
cwtl
les
add
cmc
insb
cmp
pop
jl
dec
inc
call
les
push
ds
lahf
push
sbb
adc
mov
dec
xchg
jle
sbb
push
jmp
mov
sahf
cmp
sub
mov
stc
notb
mov
push
adc
adc
fwait
mov
mov
test
mov
xor
xchg
mov
imul
inc
xchg
leave
add
cmp
imul
imul
adc
inc
shlb
adc
fwait
es
jge
or
js
and
xchg
add
hlt
mov
pop
lock
sti
call
push
ss
loopne
dec
cmpsb
lahf
insl
jae
lcall
mov
lret
movb
pop
push
sbb
les
push
push
jnp
add
in
lds
push
insl
cltd
inc
aad
mov
add
xchg
mov
cmp
popf
jnp
js
fxch
pop
lea
out
cmpsl
push
sub
cmp
cmpsl
or
or
test
xadd
data16
cmp
sahf
xor
jbe
lods
insl
testb
inc
aam
inc
inc
lods
xor
aam
aas
fstl
sub
pushf
aas
pusha
orl
inc
leave
rorl
mov
loopne
or
sahf
int3
aas
xor
push
pop
lahf
cs
cltd
fisubrl
test
jb
divb
movsb
push
mov
push
sahf
xchg
mov
mov
notl
xor
pushl
les
pop
sti
lret
clc
repnz
rorb
std
mov
or
daa
sbb
dec
fildll
test
flds
adc
andl
negl
faddl
addr16
cs
lds
xchg
icebp
pop
xchg
adcl
adc
in
fcomps
es
int3
and
xchg
mov
call
fstpl
repnz
jg
lahf
in
mov
mov
add
adc
leave
jmp
icebp
adc
mov
mov
scas
mov
add
out
sbb
test
cs
stos
cmp
fsubs
mov
jnp
mov
mov
sub
jne
test
fiaddl
xor
xor
cmc
das
pop
add
lahf
ljmp
imul
repz
outsb
xorb
pusha
fbld
clc
fdivrl
mov
scas
jbe
orb
js
in
push
and
repnz
sub
push
jo
mov
daa
dec
xor
jmp
push
pop
pop
xlat
xor
dec
lcall
lcall
jae
dec
pop
cmpsl
push
push
xchg
inc
das
lahf
jl
repz
mov
sub
pop
mov
or
jo
movsb
sbb
les
ffree
aad
stos
add
inc
xorb
pop
pop
and
shll
popf
mov
pusha
inc
les
aas
pop
and
inc
pop
pop
xchg
iret
pop
add
xor
mov
push
inc
test
sbb
or
cmp
and
mov
push
sub
xchg
cltd
mov
stos
shl
lret
add
imul
cmp
shll
shlb
jb
inc
repz
cmpsb
stos
and
cmc
cmp
mov
in
pop
mov
adc
jge
dec
jb
in
sub
xchg
adc
jnp
test
push
test
cmp
sbb
enter
xor
dec
or
out
push
cs
sbbl
jl
dec
icebp
push
inc
fists
js
and
push
icebp
je
pop
sub
sbb
jecxz
or
pop
lock
adc
aam
pushf
jge
push
and
pusha
mov
jge
dec
mov
cmp
mov
shl
inc
outsb
fucomp
cli
cmp
sbb
iret
aad
ds
push
je
lret
cmp
push
xchg
jnp
mov
enter
call
adc
mov
mov
shll
ja
daa
adc
mov
movsl
mov
dec
leave
xor
mov
push
push
sub
sbb
jns
mov
les
or
fistl
add
cld
xor
and
insb
sbb
mov
jl
jo
ror
jle
imul
cmp
iret
pop
stc
mov
in
adc
ja
mov
ret
push
or
add
std
push
dec
push
mov
sub
sbb
mov
sub
mov
mov
push
clc
xor
mov
and
pop
xchg
lret
sbb
or
pop
xor
xor
cmp
sbbl
cs
jg
fcmovu
aam
sub
ss
popf
push
adc
mov
outsl
or
add
test
repnz
out
popf
and
xor
and
push
xchg
xor
sbb
lods
jmp
mov
inc
mov
jge
loopne
aam
and
int3
loopne
lret
test
enter
jae
mov
popf
add
mov
dec
dec
outsb
jge
sbb
ret
jp
xor
jae
into
jp
call
stos
stos
mov
cmp
out
in
outsb
les
jle
rcr
mov
mov
out
pop
sarl
jge
je
pop
or
xor
push
jne
add
pop
sub
adc
cld
clc
addb
dec
jmp
adc
pop
inc
or
jns
add
andl
adcl
jmp
jno
mov
pop
mov
cmc
adc
cmpsl
push
push
sbb
out
enter
push
jne
ret
jns
dec
aam
xchg
ljmp
or
insb
test
fwait
sarl
mov
or
and
aam
les
mov
adc
xlat
mov
aad
lock
add
lds
inc
push
test
outsb
push
hlt
or
and
ret
xchg
in
out
pop
es
fisttps
shr
sub
inc
sub
jl
ja
outsb
lods
gs
dec
fiaddl
addr16
jp
in
jmp
negb
cmp
into
loop
pop
aaa
aaa
mov
hlt
ret
lods
dec
aam
sbb
popf
mov
or
enter
sbbl
jg
imul
notl
xchg
les
clc
cmp
jg
sbb
in
dec
cmc
cld
push
test
dec
out
lahf
out
lahf
aaa
xor
lret
or
adc
pusha
repnz
int
loopne
scas
pop
xor
inc
xor
adc
pushf
and
rclb
lret
int3
xchg
push
and
fldl
or
dec
cli
movsb
cmp
jg
xor
ss
filds
mov
sbb
xchg
mov
push
fsubrs
push
fcoms
pop
jp
jp
push
xchg
mov
stc
sbb
in
add
pop
mov
xor
adc
sub
push
mov
bound
test
mov
lcall
ret
dec
push
enter
xchg
dec
push
adc
adc
inc
or
mov
mov
sub
jge
mov
incl
xor
rcrl
xchg
pop
push
and
lds
and
sub
push
les
not
es
dec
out
dec
mov
bound
insl
lds
call
outsl
xor
sub
loop
mov
popa
add
xor
pop
xchg
hlt
in
mov
aam
xchg
sbb
pop
popa
mov
jg
jmp
rolb
adc
xchg
mov
into
xor
sub
pop
adc
and
cwtl
inc
fildll
jmp
clc
frstor
push
mov
inc
int
lret
add
inc
scas
mov
and
js
dec
sub
jge
sbb
sbb
int3
mov
jno
enter
jmp
ret
scas
cmpsb
shl
ja
or
movsl
out
imul
outsl
aaa
cmp
sbb
xor
mov
push
and
shl
addr16
mov
xchg
jb
scas
lcall
daa
mov
dec
loope
mov
movsl
push
inc
sub
int
add
sbb
adc
jno
mov
cmp
icebp
mov
pop
mov
mov
les
cwtl
mov
icebp
cmp
int
cld
xchg
mov
ret
bound
push
stos
jae
shll
adc
add
mov
test
pop
cmc
imul
pop
mull
mov
bound
mov
push
jmp
or
cmp
pop
rolb
mov
mov
js,pn
mov
jnp
int
cmpb
cmpsl
and
jo
insl
into
lret
pop
add
popa
add
sbb
inc
jmp
cmp
fimuls
bound
mov
pop
and
test
lods
jb
xchg
pop
adc
loop
xchg
xchg
and
orb
in
pushf
jns
imul
sbb
mov
sbbb
adc
fidivs
pop
mov
popa
push
lret
inc
test
mov
xchg
cmpb
push
dec
vmovlps
lcall
xlat
mov
les
inc
call
icebp
dec
xor
fwait
and
sub
repnz
scas
pop
test
inc
loopne
fdivs
push
or
mov
mov
into
lcall
inc
and
cmp
sub
jg
roll
stos
test
lea
push
loope
dec
int
js
je
add
out
xchg
rcl
or
adc
into
push
out
inc
push
sbb
and
das
jg
adc
dec
dec
xchg
inc
repnz
jecxz
int3
xlat
int3
xor
data16
cmpsb
jno
sub
xorl
inc
das
cld
icebp
mov
dec
mov
aas
iret
call
push
xorb
mov
inc
stc
jae
aad
sub
cmc
push
and
call
dec
sbb
idivl
mov
inc
push
enter
clc
fs
cmp
gs
push
and
scas
push
arpl
shll
out
mov
idivl
test
ss
scas
cwtl
pop
dec
inc
fwait
pop
mov
bound
mov
fiadds
xchg
jecxz
jl
daa
push
ja
stos
cmp
mov
loopne
cmp
jae
ficoml
add
lods
popl
lods
mov
movsb
xor
mov
sub
inc
jle
or
call
mov
in
movb
cmp
cmp
inc
dec
frstor
xor
push
pop
jnp
xchg
ret
aaa
add
test
xchg
dec
sbb
aaa
sub
mov
xchg
fcom
cmp
pop
dec
rep
outsl
pop
lods
push
jo
icebp
jge
iret
cmp
pop
xor
cmp
and
in
out
adc
ljmp
jle
adc
clc
xor
pop
jno
test
in
movsb
stos
pop
lds
cmp
or
pop
cmp
cmp
aad
add
push
mov
sbb
bound
outsl
lds
subl
and
jp
stos
mov
inc
outsb
movsl
divl
imul
cmp
push
cmc
icebp
push
mov
in
pop
rolb
or
addr16
in
mov
jno
insl
inc
jge
pop
and
add
mov
push
jecxz
dec
mov
cmpxchg
sbb
cmp
push
xor
cmp
movsl
and
outsb
in
xorb
push
mov
lock
cli
fisubrs
fidivrs
testb
mov
pop
push
sbb
push
adc
push
cmp
xor
ss
mov
inc
scas
add
mov
mov
cmpsb
mov
push
add
test
xor
xchg
jl
mov
mov
xor
subb
movsbl
out
xor
pusha
shlb
inc
add
jl
mov
es
xchg
mov
mov
jge
dec
or
pop
repnz
push
lea
sbb
aaa
pop
bound
cltd
fldenv
mov
lea
jp
dec
mov
hlt
push
pop
mov
shr
lcall
mov
inc
loope
lds
mov
stc
mov
dec
loopne
dec
js
push
xor
test
jecxz
cmc
andl
inc
cmp
mov
adc
inc
test
rcll
inc
out
data16
sahf
imul
shl
gs
sbb
lahf
mov
pop
jnp
ds
repz
jo
pop
stc
iret
or
or
mov
mov
or
cmpsb
js
dec
sbb
test
cld
inc
xor
push
shlb
stc
in
shlb
loop
imul
mov
mov
dec
in
lret
fndisi(8087
sbb
or
fwait
dec
movsb
jno
inc
out
push
adc
and
adc
mov
repnz
xor
mov
mov
lret
pop
push
shll
xchg
fistpl
arpl
xor
xlat
mov
mov
xor
mov
push
aas
push
cmp
pop
cmovnp
leave
pop
jne
es
sub
out
shl
sahf
mov
jo
add
cli
cmpsl
jne
mov
dec
cli
ficomps
mov
mov
negl
pop
data16
mov
mov
inc
jecxz
nop
xor
sub
and
cltd
sub
push
cwtl
orb
rolb
inc
mov
addb
xchg
mov
in
loopne
loop
ficomps
pop
dec
and
mov
and
pushf
adc
mov
jb
xor
xchg
dec
xchg
jae
scas
xor
int
push
mov
das
sbb
ss
adc
js
adc
mov
mov
push
outsb
loopne
xor
add
dec
repz
push
outsl
inc
jae
jmp
inc
fcomps
test
xchg
jle
test
into
inc
xor
in
mov
ljmp
in
movsl
std
int
in
xchg
jp
cmp
cmpsl
mov
xchg
loope
and
bound
pop
sahf
pusha
mov
dec
repnz
pop
push
fldt
out
daa
and
or
dec
les
dec
pop
dec
outsl
popf
arpl
outsl
sti
add
stos
fucomp
or
test
imul
outsl
stos
sub
repz
nop
push
push
cmp
push
gs
mov
addr16
lret
les
xchg
sub
dec
fisubrs
lds
push
inc
js
jbe
xchg
scas
pop
pop
das
push
insl
dec
scas
lcall
out
fcoml
mov
cld
arpl
jp
xor
push
cwtl
jecxz
or
aad
adc
cmp
push
xchg
loop
lock
cmp
mov
into
sub
lret
notb
mov
fildll
insl
pushf
mov
push
movsb
or
mov
push
xchg
dec
mov
sahf
mov
icebp
adc
and
fisttps
je
lock
fdiv
lcall
xchg
scas
xor
stos
xchg
movsb
daa
fidivrl
das
mov
out
xchg
js
out
mov
xchg
jmp
pop
adc
mov
nop
ljmp
cmc
or
loopne,pn
cli
pop
push
mov
loopne
aad
and
rclb
in
dec
cwtl
stos
cld
in
push
hlt
and
or
rcrb
inc
sbb
ds
and
add
dec
fcmovbe
push
cli
movsl
lods
mov
xchg
or
mov
int3
push
push
popf
repz
shl
adc
pop
arpl
push
pop
in
cmp
or
jb,pt
js
cmp
xchg
adc
xchg
int3
sbb
dec
hlt
inc
lods
nop
mov
pop
xchg
test
sti
outsl
pop
xchg
out
nop
push
shll
inc
movsb
or
rorl
mov
std
dec
aad
out
faddp
sub
out
std
outsl
and
mull
cli
pop
push
loopne
js
repnz
sub
jg
mov
adc
int
cltd
xchg
cmp
dec
jns
inc
xchg
insb
cmpsb
dec
gs
clc
cmpsl
xlat
nop
loop
lods
inc
or
or
xor
and
in
and
xchg
jns
pop
mov
and
test
push
xchg
and
xchg
xchg
dec
std
sarl
loop
add
cld
pop
out
in
jecxz
xchg
lock
rclb
hlt
and
clc
rol
xchg
cmpl
mov
nop
testb
add
sbb
pushf
pop
xlat
lds
ret
xchg
popa
xor
fcom
jae
fs
xor
fcmovnb
inc
iret
into
in
cmpsb
cmp
cli
scas
and
gs
arpl
inc
adc
fs
xor
into
iret
cmp
sbbl
je
mov
push
sub
scas
in
into
sti
sbb
cli
xchg
jbe
lock
outsl
jp
jge
clc
inc
mov
mov
push
mov
les
sub
bndldx
loop
xor
test
push
decb
aam
sub
adc
cltd
sahf
sbb
int
gs
xchg
mov
xchg
outsb
add
fsts
xchg
out
arpl
js
dec
cmp
ja
xorl
es
cs
stc
sbb
sbb
cmp
push
fstpt
ss
xchg
movl
pushf
outsl
lahf
push
cltd
xor
stos
lret
insl
clc
leave
xor
pusha
add
js
andb
xor
pop
fdivrl
mov
mov
je
int3
in
test
notb
mov
cld
sahf
lock
clc
mov
inc
cwtl
fsubrl
adc
mov
in
sub
inc
rorb
push
repz
push
xor
test
je
cwtl
cmp
push
popa
sbb
push
cmc
cmp
fstpt
dec
sbb
xor
cli
mov
cmpsb
cmpb
mov
dec
mov
movsl
jg
jbe
jp
inc
orl
add
mov
sbb
sbb
sub
loop
fwait
shll
cs
pop
daa
inc
add
mov
mov
cmpsl
stos
stos
stc
jbe
mov
mov
pop
scas
addr16
inc
int3
pop
pusha
loope
je
in
fisttpl
add
incl
adc
pusha
pop
mov
iret
mov
jne
pop
jo
sbb
pop
outsb
xor
in
and
and
movsb
ljmp
dec
fcomps
repz
das
data16
cmc
aam
inc
in
xlat
das
mov
inc
sbb
fs
xlat
dec
movsb
push
test
das
stc
scas
out
mov
pop
add
insl
in
mov
mov
xor
xlat
jns
pop
sub
jecxz
push
push
loopne
or
sbb
push
and
and
jmp
mov
mov
lret
std
dec
jp
in
popa
jge
dec
adc
or
mov
pop
sub
and
mov
mov
into
test
in
aas
lret
fwait
pop
mov
lods
sbbb
adc
push
ss
and
sbb
scas
or
or
inc
bound
in
and
addr16
mov
or
es
mov
push
icebp
lods
xchg
and
mov
or
jp
xor
sub
adc
xchg
push
nop
cltd
pop
lods
add
xchg
ret
stos
mov
cmpsb
inc
in
sub
xor
push
rolb
sbbl
jecxz
mov
cltd
add
mov
gs
fisttps
outsb
es
ficoml
sahf
dec
dec
ss
test
pop
fstpt
jl
mov
sbb
adc
and
or
fxch
cli
js
rol
fimuls
inc
hlt
sbb
scas
xchg
testl
jmp
fdivrl
mov
loopne
pop
xchg
mov
mov
loope
push
xlat
into
add
cmpsl
jnp
and
mov
insb
mov
lahf
and
movsb
dec
mov
ja
jo
push
cmp
cmp
cmpsb
mov
sub
or
test
xor
jns
sub
int
nop
adc
push
imul
or
paddd
sbb
xlat
pop
into
lcall
sbb
std
add
sar
out
pop
repnz
das
pop
hlt
aam
pop
int3
mov
lock
add
push
mov
push
fst
lahf
shrb
outsb
add
mov
ret
or
and
dec
stos
sti
or
xor
shll
cmp
call
int
or
lahf
repnz
xor
jnp
mov
lret
mov
sbb
es
pushw
xchg
xchg
clc
out
jp
mov
out
sti
aad
enter
lret
cli
cld
std
sub
shr
lods
mov
mov
mov
jmp
push
rcl
popf
mov
shl
xor
js
cmp
jae
dec
sub
iret
outsb
jb
aaa
inc
jbe
pusha
or
leave
xor
insb
aas
hlt
aam
push
imul
aas
scas
mov
iret
mov
push
mov
fildl
add
cmp
clc
push
sub
jae
push
jns
ret
jbe
pop
daa
mov
and
loope
mov
in
aas
cld
adcb
or
jo
or
mov
loope
adc
and
adc
pop
test
mov
dec
jp,pt
sbb
sub
sbb
sbb
xchg
aas
fldl
mov
popf
jecxz
int
and
gs
cwtl
stc
test
sarl
mov
cmpsb
dec
sbb
sbb
jbe
mov
movsl
xchg
lods
pushf
dec
mov
xchg
lods
adc
pop
and
int
es
jae
dec
cs
ds
in
int3
jae
test
xchg
add
orb
push
dec
adc
pusha
jae
push
mov
testb
in
xchg
addb
add
aam
dec
shlb
inc
fdivrl
inc
clc
adc
inc
pushf
fsubs
decl
es
dec
in
inc
and
xchg
cmp
adc
jbe
fs
sub
loop
dec
stc
cmp
decb
fnsave
mov
jecxz
push
cli
cwtl
es
out
inc
aaa
js
sbb
scas
mov
sbb
ja
cmpsl
roll
pop
in
outsb
div
mov
dec
faddl
jp
or
push
mov
movsl
in
dec
icebp
mov
mulps
pop
rcrb
xchg
daa
cli
popa
mov
inc
sub
cld
or
inc
inc
roll
jp
pop
pushf
mov
xchg
mov
scas
jns
repz
jns
adc
cwtl
aam
into
mov
pop
nop
aam
xchg
jecxz
movb
jo
stos
pop
out
fisubrl
add
call
mov
test
mov
scas
mov
fcoml
dec
push
xor
or
lds
xor
ret
mov
push
adc
cld
sbb
aaa
inc
fwait
mov
stos
cli
callw
mov
inc
dec
sub
pushf
call
and
rorb
jg
or
jg
pop
daa
out
push
push
cmpsl
push
mov
push
je
cmpsl
jae
outsl
dec
push
pop
mov
xor
push
push
es
getsec
cmp
lods
rcr
imul
lods
mov
repnz
test
cmp
bnd
push
add
stos
mov
dec
push
hlt
and
sti
inc
sbb
push
cmpsb
stos
xchg
inc
addr16
int
imul
jbe
sub
in
imul
xchg
cmpsb
mov
scas
cmp
jmp
aas
aaa
stos
shll
mov
jge
repz
push
dec
cwtl
pop
mov
adc
inc
pushf
test
das
test
adc
inc
add
rcrl
in
xchg
mov
cmpb
mov
sub
sub
imull
mov
jnp
enter
sbb
xchg
push
xchg
mov
and
mov
je
ret
lret
cmp
lret
out
icebp
stos
pop
jge
lods
and
ds
cmpxchg
sbbb
fsts
inc
rcll
lds
sbb
mov
xor
adc
mov
jmp
fprem1
ss
fdivrp
rclb
xor
mov
and
out
pop
jecxz
sub
scas
jge
mov
mov
adc
mov
rcl
and
mov
adc
cwtl
jnp
std
xchg
movsl
ret
xchg
add
ret
or
dec
jg
test
loope
cmpb
mov
add
in
xor
xor
cltd
fimull
gs
or
or
movsl
lcall
daa
ficoml
sahf
push
and
jmp
or
rcrl
mov
or
push
adc
pop
jne
movsl
cld
data16
mov
or
xchg
clc
xor
les
nop
es
scas
pop
adc
add
jo
cld
iret
sub
jno
lahf
add
pop
es
rcll
mov
push
je
bnd
pushf
stos
mov
ret
movsb
cmp
cmp
sub
insl
ljmp
xor
imul
mov
divl
jne
ret
daa
pop
or
push
add
push
mov
push
mull
ljmp
jle
in
and
into
push
mov
sub
add
cmpsw
sub
imul
inc
jno
cmp
les
je
jle
pop
shr
jle
shrb
mov
mov
pop
push
xchg
ljmp
adc
jnp
xchg
pop
dec
inc
fisubrs
dec
push
sahf
xor
jbe
ret
hlt
inc
inc
outsb
inc
lock
mov
cmp
push
and
inc
jo
push
adc
xor
add
or
imul
cmp
pop
dec
in
xchg
cs
cli
inc
pop
mov
mov
sbb
pop
pop
or
jecxz
aam
adc
xchg
imul
jmp
fisubrs
sbb
nop
mov
js
and
inc
xor
push
push
int
jns
repz
fdiv
mov
sbb
sub
sub
stos
mov
inc
jmp
cmpsb
mov
sbb
dec
xchg
xchg
sub
inc
inc
ret
inc
fwait
jb
sbb
jecxz
xchg
call
adc
dec
pop
jmp
sub
std
mov
mov
dec
sbb
out
cwtl
xchg
outsl
add
xchg
std
ljmp
mov
fldt
or
sar
inc
add
repnz
push
mov
bound
fsqrt
popa
sbb
adc
mov
movsb
xchg
mov
cmp
out
lahf
adc
fs
adc
mov
inc
adc
pop
fisubrl
fdivrl
add
xor
pop
sub
jge
cltd
mulb
cmp
enter
rcrb
pop
mov
push
jge
jne
inc
and
sub
fwait
push
les
and
dec
adc
pop
inc
call
inc
push
add
shr
in
jg
fldt
push
cwtl
jb
stos
or
add
push
mov
ja
jg
push
fs
leave
xor
xor
xchg
in
xchg
fs
sti
or
push
ret
int
sub
iret
inc
sbb
mov
mov
scas
fistpll
shll
outsl
dec
fistpl
popa
int3
cs
adc
dec
xchg
cltd
rorb
lea
lds
popa
inc
xchg
sbb
inc
pushf
data16
mov
push
add
mov
dec
sbb
cmp
push
dec
popa
icebp
ja
xor
jg
push
mov
xor
mov
lods
fidivs
mov
mov
dec
scas
rolb
mov
xchg
xchg
pop
arpl
test
xchg
or
xchg
lahf
xchg
lods
add
stos
mov
mov
mov
inc
cmpsl
jp
mov
add
hlt
out
stos
lahf
mov
lods
dec
test
adc
cmpsb
fldenv
sbb
and
mov
xor
imulb
mov
ds
popa
mov
mov
inc
ja
push
push
mov
and
int3
add
cli
daa
loop
mov
pushf
sbb
sti
insl
pop
test
iret
mov
push
ja
push
or
popf
loop
bound
fwait
jl
cmp
and
mov
mov
xor
out
js
push
test
push
dec
sub
out
xor
sub
insb
aaa
imul
add
imul
inc
shr
or
leave
xchg
outsl
lock
imul
dec
rcl
lahf
dec
jl
mov
fdivrs
int3
adc
fidivl
lds
outsb
ret
fiadds
aam
rolb
test
mul
cmpsb
mov
push
or
fcompl
hlt
cmpl
pop
ret
push
loopne
out
fs
lock
scas
add
dec
lret
ret
xchg
sbb
xchg
push
loopne
scas
test
push
lahf
fistpll
xor
and
stos
adc
lret
add
adc
xor
and
dec
loopne
add
or
jp
stos
adc
stos
or
xchg
sbb
jle
jg
push
outsl
push
sbb
or
jns
sub
push
outsl
test
pop
dec
sbb
stc
mov
lcall
rcr
repnz
or
mov
fisttpll
xchg
dec
push
sbb
push
xor
mov
adc
iret
push
mov
cmp
insb
add
dec
and
mov
stos
add
sbb
jne
stos
stos
ficompl
pushf
mov
xchg
mov
lcall
xlat
cmpsl
shll
mov
call
shrl
insb
popa
bound
or
pop
sub
mov
nop
pop
or
test
lcall
mov
movsb
and
aam
pop
rorb
xchg
xchg
cmp
push
ficoms
adcb
adc
fs
cmp
pop
movsl
mov
das
ja
xor
or
ficoms
add
iret
xor
ret
mov
inc
mov
jne
mov
in
cmpsb
scas
sbb
imul
cwtl
test
popf
and
dec
sbb
lods
xchg
je
rcr
jbe
xchg
int
mov
std
dec
jne
mov
std
ss
daa
pushaw
sub
dec
je
cmp
sarl
repz
cmp
push
cwtl
ffree
push
in
push
je
dec
and
sub
aam
fisttps
aaa
in
mov
push
shll
xchg
mov
xchg
xchg
xchg
mov
jmp
sti
xchg
test
outsb
sub
loop
mov
arpl
sub
out
imul
jl
sbb
mov
adc
pop
xor
pop
insb
sti
fdivs
xchg
push
in
sub
sub
adc
cmpsl
or
scas
pop
push
jbe
xchg
push
scas
mov
pop
and
sahf
pop
call
scas
mov
sub
jno
jle
inc
shl
cmp
pushf
loopne
pop
outsl
sbb
jle
je
mov
pop
and
or
lods
push
jne
cmp
jae
xchg
les
bound
ja
loopne
cli
mov
cmp
lcall
arpl
xchg
xor
int
mov
pop
add
cs
and
sbb
fisubrs
xor
fmuls
xchg
push
push
clc
imul
adc
iret
rcrl
xor
inc
test
popa
int3
lcall
repz
and
jle
hlt
jne
mov
cmc
lret
sbb
or
xchg
pop
rcr
inc
adc
insb
sarl
out
cmp
mov
mov
sub
or
test
jbe
xchg
out
pop
insb
lcall
iret
cld
xchg
lahf
lods
cmpl
jnp
mov
sub
jle
xor
popa
mov
ds
gs
scas
xchg
fstpt
sbb
fcmovnu
ret
je
mov
adc
popa
add
add
pushf
inc
lods
scas
mov
xor
cmovno
call
dec
pop
inc
cwtl
push
call
repz
cmp
shlb
pop
ss
lock
push
mov
pop
movsb
fwait
cmp
mov
mov
sub
pop
xchg
lds
inc
movsb
sub
mov
fcmovnb
xchg
clc
pop
mov
jg
movntq
outsl
fcomps
pop
pop
xchg
cmp
or
fdivr
pop
mov
xor
push
lds
mov
xchg
mov
ret
out
xorl
frstor
or
fs
mov
aas
dec
filds
adc
jae
cs
hlt
jle
dec
addb
fisubl
clc
jle
cli
sahf
imul
imul
lods
lock
push
dec
cmpsb
jl
jae
add
jno
inc
inc
dec
cmpsl
aam
aam
data16
fiaddl
ds
aaa
pop
xor
jo
lcall
cld
mov
or
inc
rclb
sub
popa
aad
jno
out
dec
bound
popa
aad
or
lock
xor
aaa
cmp
push
mov
fld
leave
add
push
in
stos
lahf
mov
mov
std
xchg
push
mov
adc
das
cmp
jbe
inc
sbb
mov
mov
test
aad
clc
jmp
pushl
xor
inc
in
xor
xchg
clc
or
pop
movsl
not
jecxz
in
sarl
testl
sbb
cli
mov
sbb
pop
insl
incb
sbb
repnz
jecxz
lock
inc
out
jno
dec
repnz
add
xor
scas
dec
nop
scas
fmuls
cmpsb
ficoms
dec
xchg
mov
and
inc
daa
push
push
push
push
loopne
lock
mov
push
negb
add
repnz
inc
dec
insb
xor
jmp
dec
xor
movsb
jle
push
dec
dec
mov
cmp
outsl
std
dec
mov
dec
jbe
inc
imul
mov
insl
xchg
pop
inc
inc
and
push
mov
inc
inc
inc
or
push
imul
mov
scas
push
xor
movsl
xor
outsl
stc
mov
ja
xchg
sub
repz
test
ret
shll
jge
push
sub
mov
lret
bound
js
mov
mov
nop
pop
adc
pusha
mov
cmpsl
mov
sbb
jno
dec
jno
gs
loope
int3
daa
jo
cld
pop
push
xor
ret
xchg
sahf
inc
movsb
adc
test
adc
repz
ret
frstor
cmp
add
sbb
outsl
mov
call
mov
add
mov
push
cmc
loopne
pop
test
add
popa
icebp
add
jg
dec
xchg
sub
gs
sbb
mov
jg
sub
cmpsb
sub
mov
mov
ret
scas
or
fs
mov
ret
movsb
lods
dec
jmp
fldt
xorb
rcrb
pop
mov
cmc
daa
mov
pop
and
mov
loope
rclb
insl
jp
sub
jno
je
decb
sub
jl
arpl
pop
test
sbb
xor
sarb
push
inc
mov
fstpt
xchg
mov
inc
jg
inc
push
and
inc
stos
es
es
out
mov
js
pop
mov
xor
or
in
popf
scas
dec
pop
inc
into
mov
aas
inc
sub
push
stc
sti
sarl
shlb
sub
imul
cmp
jmp
scas
and
xor
sbb
cwtl
cmpsb
mov
sub
cmp
pop
pop
lods
mov
jns
pop
int3
lods
rol
xchg
push
aaa
movsl
fs
mov
movsb
cmpsb
jmp
mov
inc
cmp
xor
xchg
mov
adc
push
add
in
inc
cltd
jnp
push
or
and
repz
push
out
or
aam
mov
dec
mov
push
in
imul
mov
jge
stos
jmp
filds
jle
fsub
push
dec
mov
xchg
inc
mull
dec
sahf
sub
dec
leave
gs
pop
adc
inc
inc
xchg
mov
testb
adc
cmpsl
adc
hlt
and
mov
xlat
sbb
push
mov
dec
and
jne
mov
mov
xchg
inc
or
push
cmp
xor
push
aas
cs
ds
xor
inc
ja
test
sbb
cmp
pop
sub
and
shlb
fisubl
stos
dec
cwtl
mov
adc
mov
popa
iret
inc
jecxz
leave
jle
movsl
daa
sti
pusha
test
jg
xor
mov
and
pop
sub
and
ret
pop
iret
cmpb
insl
xchg
cmpsb
sub
cmp
mov
out
push
or
push
mov
mov
sub
mov
xchg
ljmp
fldl
sub
xor
mov
lds
pop
imul
dec
lock
jnp
ror
fmul
out
cmc
push
jge
mov
xchg
and
cmp
mov
pop
fcos
cwtl
push
pop
and
aam
sub
mov
insl
adc
add
dec
popa
inc
push
lcall
cmp
repz
nop
stos
pop
cmp
mov
cmc
ja
rorl
or
adc
pop
push
inc
adc
stos
test
loopne
repnz
sub
mov
push
sbb
mov
jge
push
arpl
repnz
pop
imull
push
xchg
sub
shlb
dec
scas
aas
add
sbb
setno
jg
testb
ret
idivl
mov
das
push
outsl
sbb
sbb
icebp
and
loopne
ljmp
add
loopne
push
jb
outsb
adcl
push
aam
cmpsb
ljmp
mov
sti
mov
lahf
or
xchg
loop
push
ret
jno
adc
cli
cmpb
fstl
mov
mov
sbb
mov
xor
jne
lahf
cmp
sbb
popf
scas
mov
cmc
clc
jge
cmp
mov
xor
inc
fildl
mov
out
mov
jle
jb
loop
add
adc
jle
fmull
jmp
outsb
mov
addb
decb
sbb
xor
xchg
lods
aaa
stc
fwait
dec
and
pop
ljmp
xchg
aam
xor
jne
outsl
mov
aaa
pusha
int
inc
mov
xor
dec
pop
push
pop
sub
psubsw
lahf
aam
stos
pop
push
xor
lahf
cmp
jns
mov
lds
mov
push
aas
or
subl
and
cmp
dec
lds
cmpsb
mov
in
iret
push
addb
jg
pop
sbb
xor
popa
pop
sbb
push
cmpsl
pmulhw
jg
mov
jnp
push
push
mov
sbb
add
icebp
pushf
pop
stos
pop
adc
adc
sbb
dec
icebp
div
mov
out
push
fimull
mov
xor
push
arpl
sub
sbb
or
cltd
add
dec
aam
aam
in
dec
rol
push
loop
pushf
push
xchg
mov
xor
sub
testl
into
adcb
adc
outsb
fnstsw
push
aas
imull
sub
in
daa
orl
mov
and
outsl
add
rcrb
aas
insl
add
test
cli
inc
pusha
int3
add
jb
test
cmp
and
imul
rolb
loop
adc
jnp
xchg
outsb
push
cmc
xchg
and
movsb
mov
lock
sti
or
pop
xor
shl
stos
into
int
push
aaa
sub
mov
jne
inc
in
sbb
jb
es
xchg
lds
call
inc
sub
xchg
add
sub
mov
inc
adc
inc
movsb
mov
add
cltd
fucomi
jb
lods
movsl
jl
in
jbe
lock
and
out
popa
cld
loopne
mov
add
das
dec
mov
pop
adc
jnp
out
and
jae
fdivp
roll
aaa
sbb
fdivs
cwtl
icebp
sub
cs
jp
cmp
fsubl
hlt
mov
xchg
sbb
jecxz
ss
das
ds
testl
lock
in
fwait
add
push
push
adc
jge
leave
ss
jecxz
pop
add
pop
rorb
inc
fiadds
js
shlb
call
pop
repnz
push
jne
push
cmp
fldcw
lock
cmpsl
test
and
jno
lods
mov
lock
sub
pop
xor
push
push
sahf
mov
fs
daa
outsl
sub
dec
imul
mov
jno
cmp
dec
lea
aas
add
sbb
xor
into
sub
mov
lods
and
pop
je
push
push
shll
fdivr
push
ret
stc
and
mov
inc
jmp
mov
in
dec
cltd
jle
add
or
mov
sbb
movsb
jns
push
mov
or
loopne
and
push
pusha
std
add
orb
push
inc
add
test
pop
andb
gs
ret
mov
cs
fsub
jns
pop
rcl
lret
jo
sbbb
ret
push
test
imul
pop
int3
flds
shrb
mov
popf
push
mov
aam
gs
clc
mov
sbb
pop
or
lcall
shll
sbbl
cwtl
cmp
pop
or
cmp
int3
nop
jp
xor
movsb
xchg
std
cmc
lock
push
xor
insl
imul
jp
push
sub
fcompl
clc
in
mov
mov
fiaddl
scas
lret
jge
pop
scas
xchg
pop
jle
mov
loopne
adc
mov
xchg
outsb
inc
jns
stc
adc
and
pop
outsb
inc
pop
test
out
xchg
mov
jb
cmp
mov
lock
push
cmpsb
cmp
dec
jl
jb
sbb
push
xchg
xor
imul
mov
setne
imul
add
mov
dec
cld
and
test
sub
mov
mov
loop
pop
xchg
popf
fwait
push
xchg
out
int
inc
sbb
in
dec
dec
lock
mov
sahf
jmp
and
cld
les
iret
dec
lret
lds
cmp
insl
cmpsl
add
pop
push
pop
gs
push
adc
push
in
fdivl
pop
mov
dec
icebp
and
movsl
mov
dec
mov
andl
mov
loopne
lret
add
xchg
xor
xor
cmp
call
mov
enter
cmc
lcall
xor
and
loop
sti
daa
mov
outsl
or
mov
pop
sbb
xchg
sub
fsubr
mov
jno
out
inc
test
mov
mov
lods
lret
jb
dec
dec
insb
bound
mull
jl
nop
outsl
xchg
xchg
or
sbb
adc
pop
or
fcoml
and
adc
pop
loop
mov
add
je
outsl
dec
cmpsb
movsb
mov
outsl
or
stos
inc
sti
and
mov
mov
outsl
test
xor
lret
push
call
lds
cwtl
inc
mov
imul
xor
lock
cmp
inc
mov
sbb
and
ficompl
cltd
xor
push
stos
add
cld
popf
add
xor
cli
inc
loopne
fidivl
loopne
jo
sahf
jg
dec
xlat
dec
sub
leave
inc
aad
mov
pop
inc
out
or
cmp
nop
mov
scas
and
and
test
imul
ss
mov
iret
addr16
add
fcoms
fwait
push
adc
jge
jbe
mov
inc
push
xchg
into
push
inc
aad
aas
aaa
pop
imull
xchg
inc
inc
xchg
cmpsb
mov
jns
iret
xchg
mov
push
fidivrl
call
test
add
sbb
xchg
push
fsts
ja
pop
je
je
cmp
lods
push
xor
sbb
jl
scas
mov
andb
dec
push
dec
repnz
push
push
sub
mov
fwait
mov
xor
xlat
cmp
push
or
testb
fists
push
out
daa
out
test
mov
jbe,pn
pop
mov
test
cmp
ret
add
loope
cmp
repz
fcmovb
outsl
xor
add
mov
or
push
mov
and
xor
mov
mov
sub
or
push
rol
xchg
rorl
push
fcompl
test
pushf
repnz
mov
mov
or
jb
inc
outsb
xor
sahf
pop
int
es
lea
std
inc
lds
inc
scas
xchg
cmp
inc
xor
lret
mov
lahf
stos
ss
je
outsl
sbbb
mov
and
in
jp
aaa
and
std
shll
rcl
out
addr16
lods
lods
fimull
int
fmuls
and
dec
outsb
int3
jg
fidivrs
into
lahf
fisttps
and
jmp
test
adc
pop
test
imul
rolb
insb
lea
sub
add
out
jo
pop
sub
pushf
in
pop
iret
in
rcr
dec
es
loopne
ret
sub
mov
lds
data16
iret
mov
or
jo
test
sub
fnsetpm(287
xchg
xor
mov
xor
imul
mov
mov
pop
jecxz
rcl
add
or
xchg
or
lods
and
int
in
daa
fadds
xchg
jl
aaa
test
lret
loope
es
dec
xchg
sub
scas
lea
dec
ss
shl
bnd
fs
sbb
pusha
jbe
rcrl
std
or
fyl2xp1
push
pop
out
inc
dec
add
insb
pop
fstpl
lret
dec
jp
fstpl
add
sarb
test
sbb
test
insl
add
push
mov
notl
lret
lock
pushf
xchg
or
xchg
adc
rol
jae
jmp
inc
aas
rorb
push
push
xchg
test
jae,pt
sub
cmpsb
push
loope
leave
jo
outsl
shr
in
outsb
mov
mov
xor
mov
mov
inc
or
aas
call
das
jmp
adc
stc
hlt
or
mov
fwait
push
test
mov
pushf
cmc
jg
add
or
jmp
out
mov
add
dec
in
add
mov
dec
xchg
mov
enter
int3
adc
mov
testb
dec
cli
and
lret
sub
push
adc
xor
shll
sub
mov
fiaddl
adc
out
sarb
sub
hlt
outsb
xor
cmp
xchg
aas
mov
test
or
push
jbe
xchg
fstl
pop
bound
sbb
xor
div
int
mov
out
int3
fcmovnb
inc
jne
inc
push
ss
mov
lret
or
sub
sbb
jl
nop
jno
jecxz
sbb
roll
or
dec
xor
shlb
std
cmp
out
les
inc
jne
cmp
cmp
adc
clc
jg
mov
push
mov
imul
in
ret
int
mov
and
push
ret
outsb
dec
fsubl
adc
jns
mov
shll
push
xor
xor
inc
sbb
mov
aaa
sub
in
stos
out
cmp
pop
fldcw
in
pop
xchg
xchg
push
test
flds
cmp
rorb
add
dec
jno
lret
leave
loop
js
in
lret
push
js
push
cli
sbb
jo
mov
leave
hlt
jmp
sarl
aam
repz
jecxz
and
out
lret
or
sbb
insb
int3
xor
divb
mov
out
cmp
outsl
push
jne
xor
pop
xor
sub
cli
adc
div
sar
sbb
mov
fistpll
stos
adc
adc
and
mov
pop
rorb
movsl
shlb
sahf
out
mov
mov
pop
sti
inc
mov
gs
das
roll
insl
movsb
add
stos
jecxz
jl,pt
xlat
xlat
cmpsb
sub
mov
push
mov
pop
int3
clc
imul
out
xchg
add
pop
mov
loopne
pusha
inc
aaa
and
adc
out
mov
jle
shrl
leave
pop
aaa
cmp
test
out
dec
xor
pop
cmpsb
pop
jae
lahf
jbe
loope
std
data16
inc
mov
push
aaa
inc
out
fcomip
fs
push
jmp
xor
or
lcall
dec
pop
divl
sbb
loopne
xchg
sbbl
sub
pushf
subb
jmp
jo
pusha
js
mov
mov
enter
cmp
mov
nop
testb
hlt
and
push
and
cltd
lret
outsl
iret
add
xor
and
pop
or
and
mov
pop
and
repz
cmc
cmp
xchg
aaa
push
sub
add
bound
cmp
cwtl
sub
std
push
cmpsl
sub
lret
lock
lock
in
xor
mov
stos
cmp
call
stc
loop
dec
nop
hlt
leave
subl
fsubs
cmp
mov
call
and
mov
out
call
movsb
pop
mov
jg
fstpt
cmp
movsb
xor
test
repz
or
pop
sbb
dec
add
sub
rorb
mov
idivb
jle
mov
fstl
mov
mov
xor
mov
fs
ret
mov
xchg
cwtl
mov
imul
inc
push
mov
sub
xor
xchg
jge
mov
imul
mov
repnz
ret
sub
pushf
rol
out
sbbb
mov
mov
inc
imul
inc
push
jno
xor
xor
xor
icebp
popf
repnz
sahf
jno
fcom
dec
xchg
enter
xorb
cs
pushf
jecxz
cmp
jp
mov
ds
push
pop
arpl
mov
cmp
fsts
mov
adc
jbe
mov
mov
mov
enter
popa
xchg
aas
pop
mov
sub
cmp
xor
mov
mov
out
sbb
mov
imul
loope
cli
ljmp
jnp
mov
xchg
outsl
xor
rcl
int3
push
popf
ds
add
mov
mov
mov
cltd
enter
stos
fidivs
sarb
pop
jns
aas
in
push
or
mov
shld
fbstp
pop
push
pop
loope
push
sub
jne
ljmp
push
adc
and
adc
add
cmp
xlat
push
pop
je
pop
sqrtps
sub
fwait
lret
push
mov
nop
test
inc
repnz
insb
jne
clc
push
jae
sub
das
lods
icebp
sbb
imul
adc
xchg
add
sbb
out
xchg
jns
or
lods
mov
jecxz
mov
addl
fdiv
stc
or
cmp
push
jecxz
inc
es
push
jmp
loope
jg
js
pop
mov
je
or
rol
inc
sbb
mov
ret
int
es
test
sub
jmp
call
cmp
cmc
jno
loope
clc
pop
mov
repz
xor
bound
and
jne
inc
pop
mov
mov
pop
add
sbb
dec
jmp
xor
mov
jno
push
mov
add
or
jl
ret
jno
ret
into
gs
ljmp
sbb
leave
nop
adc
test
fisubrs
cmp
jae
je
sbb
mov
sub
adc
adc
imul
clc
sahf
movsl
mov
cmp
int
jle
pop
in
rorl
lret
rolb
les
add
lret
inc
cmp
mov
test
xor
lret
jecxz
dec
lock
mov
fidivs
push
inc
aaa
sub
out
pop
mov
jbe
dec
jmp
hlt
mulb
adc
push
add
fstpl
sbb
ret
jl
adc
add
sub
push
sbb
out
cwtl
shrl
jb
push
pop
add
push
test
xor
addb
and
mov
xorl
stos
rorl
mov
stc
mov
stos
insl
cmp
out
insl
sti
xor
mov
subl
mov
xchg
filds
sbb
rclb
js
and
inc
pop
imul
cmc
lret
mov
sub
mov
popf
fwait
call
enter
add
xchg
push
push
lcall
mov
js
lea
imul
add
bound
outsb
outsb
dec
fcmovnb
nop
dec
loopne
push
shlb
sahf
mov
rcrb
ds
inc
fsubs
sub
fwait
mov
fs
clc
shlb
xchg
sub
imul
sbb
aas
cwtl
sbb
fcmove
pushf
fwait
pop
inc
cmpsl
test
jb
aas
pop
inc
andb
pop
mov
add
sti
pop
jns
jb
sbb
arpl
cmp
or
jl
rolb
rclb
sub
adc
jp
js
testl
imul
xchg
jno
cmp
pushf
movsl
inc
ds
icebp
xor
mov
xchg
fsubrl
ja
and
inc
dec
rorb
mov
cmp
mov
sbb
dec
mov
cmpsl
inc
mov
outsb
jnp
jmp
lret
notl
ljmp
or
test
pop
or
into
dec
pop
in
divb
sarl
adc
sub
int
xchg
mov
sbb
adc
cmc
push
pop
xor
xchg
sahf
clc
mov
pop
ret
add
fwait
pop
aad
icebp
xchg
fbld
dec
cmp
mov
xor
ja
adc
addl
sbb
scas
sbb
jnp
mov
fimuls
les
out
loop
xor
cld
ficomps
mov
jp
xchg
mov
les
jno
out
cmp
jb
mov
pushf
sahf
inc
loopne
fstps
add
mov
arpl
cmp
sub
inc
loopne
push
stos
in
xchg
leave
enter
xor
xchg
mov
aas
xchg
sbb
mulb
inc
jmp
outsl
jns
lock
pop
fistpll
mov
into
xchg
pop
lods
and
cmp
or
subl
sbb
mov
sbbl
sti
adc
cmpl
outsl
and
pop
ds
shlb
ljmp
testl
and
mov
fs
dec
mov
frstor
jg
std
push
lea
sub
pop
pop
xor
mov
mov
xor
add
pop
push
call
push
repnz
cltd
jb
or
arpl
in
int
mov
out
les
xor
aad
fsubs
and
stc
mov
add
aas
fwait
les
mov
out
and
and
int
test
je
push
out
pop
xor
popf
and
mov
push
je
and
decl
add
sub
stos
pop
and
sbb
mov
fmull
clc
cmp
sbbl
xchg
cmp
mov
cli
es
mov
arpl
divl
les
jp
xor
in
cltd
sbb
push
sbb
fsub
jo
imul
sub
add
push
mov
mov
cmp
sti
add
cld
and
inc
push
in
pusha
add
jmp
std
lret
dec
cwtl
xchg
jl
mov
hlt
jmp
adc
or
xlat
sbb
cmp
adc
cltd
push
aad
shlb
sbb
pop
lret
pushf
and
xor
int3
xor
ficoms
out
stc
cmp
inc
cmpsb
xor
andl
loopne
mov
mov
into
xchg
stos
rep
push
clc
sub
mov
es
fnstsw
scas
sbb
cmpl
ja
fs
xchg
sub
cmc
add
dec
cmp
dec
fidivrl
jecxz
inc
sub
push
outsb
add
fs
fsubrs
push
out
mov
mov
ljmp
repnz
bound
out
js
js
cmp
dec
arpl
shll
lods
stos
fiadds
and
sbb
sbb
mov
push
inc
daa
mov
xor
mov
push
pop
cltd
add
call
and
jb
adc
cld
dec
sti
out
pop
mov
fdivrl
mov
inc
inc
or
mov
push
movaps
lret
dec
repz
inc
fidivl
and
push
xchg
and
xor
push
nop
xchg
mov
cs
out
pushw
xor
rcrb
ret
jmp
fistpll
out
je
inc
push
sub
ja
test
rclb
pop
mov
adc
loope
inc
jecxz
mov
in
sti
aad
test
into
std
mov
mov
mov
ror
jle
push
push
cwtl
fdivl
push
xchg
scas
inc
or
aam
sub
mov
add
insl
mov
lcall
pop
push
sub
pusha
mov
movsl
sub
add
xchg
inc
negl
stc
xor
icebp
cmpl
and
xor
and
xlat
xlat
push
cmpsl
cld
cwtl
xor
inc
mov
insb
insl
scas
shrl
shrb
stc
lret
pop
pop
xchg
or
stos
out
and
xchg
arpl
mov
aad
and
sbb
pusha
and
jns
in
int
xchg
stos
call
fbstp
push
loopne
in
dec
pop
sub
mov
rolb
mov
adc
leave
out
repnz
pop
push
jbe
dec
add
bndstx
sbb
add
xchg
cmp
adc
loopne
imul
cmp
test
or
lds
lods
add
dec
daa
push
fmull
xor
dec
test
sub
aaa
dec
push
repz
xchg
add
inc
mov
mov
call
pop
sub
cmp
dec
dec
pop
out
add
and
out
mov
jmp
cmpsl
loop
mov
imul
dec
cmpsl
cmp
mov
insl
out
mov
and
repz
push
inc
call
jmp
roll
jg
in
mov
xchg
xchg
adc
pop
out
adc
das
repnz
inc
dec
jp
ret
les
call
sub
push
jns
sbb
mov
insb
push
dec
lds
test
test
xor
testb
cld
stc
js
out
les
movsb
jge
sub
fsub
inc
inc
or
jmp
in
mov
notl
loopne
jno
jo
jno
sub
xchg
adcb
mov
push
sub
rcll
push
dec
imul
mov
add
repz
loope
lcall
adc
imul
ss
cwtl
push
rclb
sti
das
cmp
and
dec
push
and
mov
aaa
shl
repz
add
jo
push
jl
leave
das
out
xor
add
shll
ja
push
add
pop
add
icebp
inc
inc
jb
pusha
mov
mov
jle
filds
jge
add
mov
dec
in
and
and
adc
xor
cmc
mov
roll
insl
test
cli
jmp
loope
pop
mov
loopew
pop
in
pop
xchg
aas
add
repz
loopne
ja
loop
sbb
or
mov
fistl
mov
ret
inc
pop
xchg
push
mulb
jge
push
cmp
dec
pop
xlat
and
xlat
xorb
out
or
or
insl
js
shl
scas
enter
bound
or
das
mov
xor
jnp
inc
mov
add
iret
xlat
clc
fidivrs
adcl
out
mov
call
fdivrl
jns
iret
or
mov
sub
out
lock
xchg
inc
inc
int3
mov
in
test
imul
mov
or
xor
sub
add
ret
frstor
pop
and
hlt
mov
aas
xchg
leave
mov
xchg
cli
jp
aas
stos
adc
scas
sub
xchg
hlt
in
notb
clc
cmpsl
std
jne
push
hlt
add
inc
mov
mov
and
js
push
inc
aaa
test
cmp
addb
or
stc
lret
xor
aaa
inc
push
or
loop
repz
test
movsb
hlt
sbb
or
lcall
insb
out
sbb
stos
jno
lcall
mov
daa
pop
fidivrl
sbb
outsb
xchg
inc
cmp
push
inc
stc
pop
adc
mov
sbb
outsb
pop
xchg
pop
push
jge
add
mov
sbb
jb
fcoms
or
jno
add
std
inc
mov
scas
pop
gs
xchg
xchg
das
jo
movsl
adc
lret
enter
cmp
in
stos
jecxz
lahf
or
popf
dec
jb
pop
movsb
stos
outsl
inc
mov
aam
lds
dec
jnp
sbb
ljmp
xor
pop
push
lods
inc
pop
mov
daa
std
iret
jg
jp
mov
sbb
xor
cmc
fwait
popf
stc
xor
adc
outsl
stc
mov
cmp
dec
sbb
push
pop
ja
call
sarl
xor
inc
repz
addr16
popa
sub
shlb
lock
rol
shl
test
out
cmc
inc
dec
fcmovbe
mov
idivb
jl
dec
scas
push
mov
sti
mov
mov
sbb
clc
insb
jo
push
jge
in
scas
jnp
cmp
push
jb
fdivl
stos
inc
ds
push
sbb
mov
pop
les
pop
jbe
mov
mov
in
ss
insb
dec
push
rclb
or
or
popa
test
sti
pop
xchg
jnp
mov
popa
imul
orl
xchg
push
mulb
lods
jbe
leave
hlt
adc
cmp
inc
mov
daa
or
in
fmuls
negl
pop
es
nop
sbbl
pushf
pop
xchg
adc
pop
push
popa
mov
xchg
or
and
loop
and
fnstsw
cmp
pop
xor
xchg
or
pusha
push
push
ss
xchg
jecxz
inc
add
mov
xchg
ret
push
pushf
lds
adc
pusha
scas
mov
xorl
je
add
sbb
insl
sbb
repz
cmp
mov
adc
sub
cmpsl
je
cltd
and
addr16
cmpsl
sti
xchg
mov
cmp
adc
push
cmp
fisubrl
pop
xchg
fs
pop
jmp
scas
fmulp
inc
mov
lea
mov
xchg
xor
push
add
mov
in
into
leave
sahf
cmpl
movsb
dec
enter
cmp
sti
ljmp
dec
das
jnp
ret
loopne
jp
test
ljmp
in
mov
jns
daa
mov
mov
ljmp
mov
xor
mov
cmc
push
iret
adc
add
or
pushf
and
sbb
mov
data16
arpl
cld
sti
sbb
xor
cmp
aaa
shr
leave
push
sahf
or
shl
mov
cmp
imul
sbb
mov
into
mov
mov
outsb
sbb
push
mov
pushf
jnp
jns
mov
insb
xor
mov
mov
pop
push
sarl
dec
and
in
adc
add
mov
jno
xchg
adc
data16
repnz
fstps
dec
push
fiaddl
push
mov
adc
imul
es
sub
out
push
xor
ljmp
repnz
adc
and
jbe
stos
cmpsl
jle
pusha
mov
in
push
nop
and
sarb
pushf
shll
fmull
sahf
pop
rcll
lods
insb
pop
add
daa
push
mov
add
mov
cmpb
idivl
lock
ret
pop
adc
mov
test
mov
dec
fmull
iret
xor
lahf
mov
add
jl
out
xor
mov
cwtl
pop
push
sub
sbb
popf
popa
mov
mov
xor
popa
popf
fildll
xor
inc
in
mov
test
add
loop
pop
mov
lret
sbb
int3
push
dec
cmp
arpl
cmpsb
dec
inc
ret
cmp
in
dec
mov
cltd
ds
lea
sbb
add
daa
mov
push
into
jecxz
insb
lods
insl
mov
testb
fsubl
jns
sbb
fisubrs
test
stos
pushf
jb
add
mov
and
test
dec
imul
dec
push
pusha
or
cwtl
loopne
jae
cmpl
nop
lcall
sbb
cmp
lahf
scas
movsl
dec
sbb
leave
or
cwtl
aam
mov
adc
sub
lea
arpl
and
pop
inc
fldl
mov
xchg
das
jbe
mov
mov
xor
cwtl
pop
push
xchg
or
aad
lahf
dec
sub
out
adc
xchg
stc
idivb
push
sub
repz
mov
mull
jo
or
xor
and
filds
stc
jge
sahf
add
adcl
bound
cmpsl
scas
movsl
push
adc
aas
daa
popa
jle
xchg
aam
popf
std
mov
push
jbe
inc
popa
sbb
incb
test
and
sbb
in
push
add
imul
test
fnstsw
mov
dec
stos
outsb
in
jle
xor
sbb
cwtl
sub
jp
sbb
mov
les
fmull
sbb
sub
inc
push
stos
test
mov
xor
int
mov
in
and
xor
negb
in
jecxz
pop
sub
xor
lods
shr
mov
jp
mov
add
cmp
xor
inc
or
sbb
cmp
add
pop
stos
fiadds
add
pop
pop
jo
or
jecxz
or
loopne
scas
popa
add
lcall
sub
jo
jno
cmp
aas
mov
mov
into
mov
add
fstl
and
pop
sub
stos
dec
lcall
dec
aam
test
fsubrs
push
mov
mov
cmp
outsl
add
movsb
imul
popa
pop
fmull
cmp
or
xor
test
sub
mov
dec
pop
cwtl
xor
test
cmc
or
jns
loop
and
mov
jmp
lods
scas
inc
ss
aad
jo
sub
sub
sub
add
and
sbb
imul
fildl
imul
cltd
outsl
add
sub
add
xchg
adc
divl
or
dec
jl
rcll
add
jmp
and
and
cmpb
and
fwait
dec
dec
bound
xor
inc
xor
inc
cmp
aas
pop
sbb
into
inc
ret
pushf
sub
mov
sbb
daa
daa
repnz
fisubrl
es
lcall
lret
lods
xchg
or
jno
loopne
mov
fistpll
fistpl
lea
insb
adc
push
pop
pop
std
aad
cmp
ror
jnp
out
xchg
lret
cmc
or
xchg
out
dec
enterw
push
inc
add
les
in
test
inc
lock
aad
lcall
add
popa
lods
or
sbb
push
aaa
pop
xor
neg
dec
lcall
in
adc
int3
xchg
or
insb
fnstsw
out
pop
sar
fistpll
cmpsb
cmpsl
lds
enter
xchg
mov
int3
xor
jecxz
mov
test
xchg
inc
cmc
dec
jge
jae
mov
push
inc
push
xor
xor
jae
std
fnstcw
pushl
xor
dec
push
dec
ljmp
test
sbb
hlt
rorl
aas
clc
cmp
inc
cltd
shlb
jg
fwait
pop
cmp
push
inc
cmp
sbb
mov
arpl
lcall
nop
mov
sbb
xchg
and
jmp
xchg
jb
jp
cmpb
and
or
scas
and
xor
lret
das
and
insl
cltd
add
jbe
loope
loop
mov
je
lret
xor
cltd
movsb
cmpsl
inc
outsb
cmpsl
xchg
bound
ficompl
rcr
jg,pn
outsb
lahf
dec
push
mov
push
scas
popa
mov
jo
cmp
ficomps
icebp
in
sbb
pop
pop
add
adc
jg
lods
push
inc
xor
out
pusha
sub
and
cmpsb
mov
xor
mov
mov
mov
mov
sti
pop
fsts
in
push
mov
jnp
inc
add
clc
aad
mov
fnstcw
lret
push
jne
mov
jne
stos
sbb
cmpsl
aas
lret
setp
adc
rcrb
and
ljmp
cld
and
xor
pop
mov
mov
orb
push
not
jecxz
std
rcrb
stos
cli
xchg
adc
lea
sbb
mov
clts
popa
push
stc
sbb
mov
adcl
sbb
scas
dec
sahf
test
push
jb
fcompl
movsb
cmc
jns
xor
mov
out
popf
mov
pop
adc
jg
addr16
in
in
cmpsb
mov
shlb
scas
sarl
sbb
ja
pop
mov
xor
ret
add
decl
cmp
inc
sbb
push
xchg
or
cmp
iret
xor
lock
rorl
fidivl
and
mov
hlt
data16
jnp
emms
arpl
icebp
and
fwait
cmp
fadds
sbb
mov
bound
xchg
inc
push
fcmovb
or
aad
lods
mov
or
jo
jmp
je
dec
les
enter
jbe
add
and
mov
ds
mov
pop
jns
adc
jb
pop
cmp
mov
lcall
jle
in
jge
out
xchg
mov
jecxz
push
push
cmc
jb
sub
xor
sbb
adc
mov
and
adc
push
push
pusha
mov
pop
add
movsl
add
sbb
or
push
sahf
cmc
add
sbb
sar
cmpsl
imul
add
imul
std
nop
push
pop
lret
push
jmp
fmull
sub
cmp
imul
sahf
outsl
xchg
loope
xor
out
dec
jmp
lahf
or
lahf
pop
push
mov
leave
sbb
cmc
hlt
andb
pop
xlat
mov
test
out
scas
pop
mov
iret
mov
call
add
int
adc
jnp
adc
jge
das
ss
rcrb
fwait
gs
imul
xchg
dec
bound
dec
and
leave
popf
mov
out
or
cmc
iret
dec
js
inc
sub
inc
mov
sar
out
nop
aaa
lcall
std
adc
enter
ss
xor
mov
loopne
ret
and
cmp
sahf
pop
inc
popa
sbb
lock
sti
test
xor
das
aad
sub
out
jl
ret
mov
stos
pop
loopne
sub
repz
jbe
fwait
and
inc
push
andl
sub
mov
and
icebp
dec
jg
jnp
das
cmp
push
fcoms
call
cmp
and
push
pop
fcoml
lods
fistpll
ucomiss
push
mov
call
adc
cmp
dec
cmp
add
add
test
adc
inc
xor
push
jnp
sbb
dec
and
pushf
adc
mov
insb
es
popf
scas
mov
test
adc
and
adc
sahf
inc
and
scas
in
push
repz
nop
xor
insb
out
inc
les
aas
xorl
lods
int3
addr16
jae
mov
mov
mov
out
xchg
push
or
out
xchg
sahf
sbb
cmp
sbb
decl
fdivrl
cmp
subl
pop
push
push
popf
mov
rcr
dec
jmp
das
orb
stc
mov
je
lods
or
mov
fs
push
cld
dec
or
sub
or
pop
and
fidivrs
inc
mov
xor
cmp
int3
in
popa
add
mov
hlt
notb
push
pop
mov
sbb
inc
sbb
and
dec
and
cld
imul
sbb
xchg
sub
cmp
and
dec
mov
xor
lahf
pop
or
frstor
daa
cltd
adc
shl
cmpsb
lahf
xchg
out
and
pop
xchg
lret
dec
cltd
dec
notl
lock
aam
std
in
cmp
bound
mov
jle
mov
cmp
inc
test
pop
lock
or
aas
lcall
sbb
adc
add
fildl
fstpt
mov
arpl
jne
mov
adc
lahf
and
aas
adc
out
jle
or
inc
xlat
sub
es
xchg
test
dec
repz
cmp
jge
inc
sub
jb
aaa
pushf
lods
lret
aaa
cmp
pop
fstl
xchg
mov
mov
push
fbld
pop
call
pusha
xchg
xchg
inc
rcrw
jge
push
repnz
jae
push
stc
fildl
jl
push
xchg
call
push
testb
mov
add
cmc
and
fwait
xchg
sub
pop
pop
add
out
mov
sar
adc
dec
ljmp
imull
mov
add
xorl
adc
movsb
xchg
dec
inc
repz
and
push
cld
cmp
push
clc
sahf
adc
lods
cmpsl
rclb
sub
adc
andl
cwtl
lods
mul
add
xchg
testb
insl
ss
stos
jmp
sti
or
test
push
roll
outsl
xchg
jns
jg
sbb
add
ret
push
testl
sub
or
mov
loopne,pn
dec
xor
mov
jmp
and
xchg
lahf
stos
xchg
inc
xor
imul
and
stos
hlt
leave
sbb
push
mov
mov
mov
xor
dec
sbb
inc
mov
xchg
jge
fsubp
sub
scas
push
add
or
rcrl
push
rcrl
in
dec
mov
int
sub
mov
cli
xor
pop
or
dec
aas
pop
pusha
mov
sbb
adc
ljmp
push
lahf
pop
outsb
jne
jle
mov
or
cmp
push
mov
jmp
mov
ret
mov
add
mov
inc
or
pushf
cli
push
sti
in
stc
bound
mov
insl
push
mov
rclb
jecxz
fnstcw
sbb
pop
mov
xorb
xchg
push
xor
pop
mov
adc
iret
icebp
hlt
icebp
jae
cmp
mov
and
push
pop
push
inc
sbb
inc
push
scas
mov
mov
out
push
mov
stos
mov
sub
das
dec
xor
dec
mov
rcrb
leave
push
lret
and
sub
imul
sub
ja
mov
mov
sahf
or
test
mov
movsb
pop
clc
mov
movsb
mov
xchg
outsb
fcmovnb
mov
and
push
adc
out
mov
sbb
pop
xor
int3
cld
sub
inc
adc
lahf
sub
mov
jnp
pushf
dec
xchg
mov
mov
lds
loopne
mov
movsl
jg
xor
jle
mov
les
notl
jge
lods
lahf
mov
push
rep
dec
das
mov
xor
push
pop
ds
outsb
dec
dec
movsl
out
test
adc
push
cmp
out
out
sbb
arpl
sbb
stc
inc
mul
pop
adc
adc
leave
mov
fucomip
js
repnz
push
cmc
mov
adc
lock
xchg
fwait
test
inc
mov
aad
dec
add
out
js
jmp
fcmovne
out
sub
clc
je
lods
movsl
orb
adc
div
sarb
out
sarb
sub
adc
stos
mov
dec
test
fs
jnp
cld
ret
repz
mov
call
fadds
sbb
push
cmp
je
jb
addr16
adc
fs
out
ss
les
iret
xorb
movsl
mov
popf
jecxz
mov
xor
jmp
mov
jns
daa
mov
pop
cld
or
repz
adc
lea
mov
jb
xor
lods
mov
jl
aam
inc
out
int3
xlat
outsl
pop
sbb
mov
xchg
enter
cmpsb
and
push
aam
clc
xchg
andl
xchg
cmp
xchg
mov
jle
ss
xor
push
pushf
or
push
and
lret
insl
or
ljmp
add
cwtl
push
pop
push
mov
xor
mov
jns
adc
fstl
in
xorl
in
or
xchg
push
xchg
mov
jge
movsb
stos
mov
add
adc
cmpsl
and
into
pop
lret
sbb
pop
lods
mov
mov
pusha
adc
mov
andb
adc
lock
es
sub
pop
into
mov
dec
cmpsb
add
enter
les
test
xor
adc
repz
adc
imul
pop
xor
incb
pop
ja
lea
enter
enter
clc
push
movsb
mov
sub
inc
test
into
sbb
pushf
lock
ljmp
push
test
enter
mov
sbb
fcmovb
sahf
xchg
pop
adc
add
mov
and
hlt
cmpsb
int
cwtl
dec
les
sarl
ret
sbb
pop
jbe
push
cltd
jg
and
pop
mov
fisubs
mov
lods
lds
dec
inc
mov
mov
xor
fs
sbb
adc
inc
lret
out
xchg
xchg
xor
jno
mov
cmp
mov
dec
shll
cmc
or
fcomp
pop
add
pandn
test
pop
rorl
sbb
lds
ss
pop
nop
ja
pop
push
pop
jb
lea
xor
mov
fcomip
mov
xchg
std
popa
sub
js
je
and
jl
lds
outsl
pop
sbb
out
cld
adc
push
fisttpll
dec
push
ret
roll
mov
dec
mov
push
fcompl
add
fcmovnb
push
xchg
in
div
popf
lods
inc
and
shlb
inc
dec
inc
mov
out
pop
push
lods
cld
or
call
lods
lods
repnz
xor
pop
lret
shlb
mov
mov
xchg
popf
ret
stc
push
push
jge
mov
mov
push
int3
jb
in
xor
xor
push
jge
sbb
cmp
sub
xchg
mov
jb
out
cld
lea
xor
sub
fstpt
hlt
or
test
add
xor
dec
cmp
pop
mov
nop
lahf
stc
hlt
cmc
adc
inc
and
aad
adc
adc
jb
mov
mov
adc
mov
and
jnp
sub
xor
pop
ljmp
mov
dec
xor
inc
sub
in
sub
ds
mov
mov
or
outsl
inc
cmp
leave
add
int
dec
jp
or
ss
ficompl
lret
mov
xor
imul
add
adc
xchg
shl
test
cmp
andb
mov
mov
test
int
adc
imul
arpl
cmc
jb
inc
fists
in
leave
adc
push
mov
out
push
xchg
std
inc
jae
scas
fisttpll
popa
pop
mov
mov
andl
fidivrl
ja
xchg
outsb
inc
js
jecxz
rcl
call
dec
notl
in
clc
lcall
jl
jae
add
outsl
inc
shrb
adc
addb
aas
insl
cmpsb
test
fs
xor
ret
mov
or
mov
icebp
mov
fisttps
pop
out
je
and
out
xor
mov
outsl
loop
shlb
xlat
jb
pop
add
popf
ret
adc
mov
and
pop
test
mov
mov
outsl
push
mov
test
push
daa
rcrl
or
movl
adc
push
dec
jnp
fs
push
sbb
arpl
pop
cmpsb
fs
or
mov
fwait
xchg
mov
cwtl
bound
mov
jg
icebp
mov
outsb
nop
clc
shll
and
xchg
and
mov
mov
les
dec
es
lds
jae
repnz
xor
icebp
dec
xchg
mov
push
jge
xor
lahf
enter
xor
mov
out
cmpsl
shlb
push
or
enter
fidivl
mov
add
jbe
or
paddb
test
cmp
dec
out
leave
jle
sbb
fs
jae
sub
fwait
insb
inc
sub
enter
dec
gs
syscall
scas
mov
in
mov
aad
outsb
inc
cmp
out
xor
icebp
xorb
jnp
and
std
xchg
adc
stos
gs
loop
or
mov
push
rorb
mov
pop
hlt
cmp
pusha
pop
inc
dec
mov
mov
pop
stos
jns
insl
push
in
je
mov
and
jmp
pop
cmp
sbb
orb
adc
mov
dec
push
test
ds
out
mov
mov
fcmove
cmp
rorb
cmp
repnz
push
xor
jno
jbe
out
subb
adc
movsb
add
sbb
hlt
inc
imul
pusha
sub
fistpl
lahf
icebp
xchg
mov
scas
or
jmp
dec
cmp
push
lock
loope
mov
sub
pop
test
dec
ja
jo
aam
add
inc
xchg
ficoml
jns
sahf
test
push
mov
adc
int3
in
mov
fadd
stc
jne
push
test
mov
mov
push
nop
test
mov
cmpsb
mov
xchg
dec
xor
mov
mov
pop
out
pusha
pusha
dec
imul
dec
pop
mov
jne
pop
xor
inc
push
loopne
pop
cli
das
clc
or
and
xchg
ror
or
inc
aaa
jae
cmp
movsb
insb
loopne
call
popa
jbe
lods
push
inc
sti
test
jb
jecxz
mov
and
mov
or
stos
push
or
ds
test
mov
dec
inc
repz
mov
loope
add
movsl
aaa
fnstenv
adc
out
rcl
sti
cmc
pop
mov
dec
fisubl
lahf
mov
push
or
orl
jns
shll
cmpsl
int
jne
mov
loope
out
notl
hlt
scas
push
xor
ficoms
das
xor
mov
fdivs
daa
jb
push
jmp
inc
imul
loope
insl
jp
xchg
adc
xlat
xor
dec
rorl
int3
mov
pushf
inc
push
dec
cmp
subb
je
mov
jl
ret
lret
jg
pop
pop
cmp
pop
xchg
fxch
mov
jle
adc
sbb
inc
nop
mov
push
mov
and
ret
xchg
jl
pop
xchg
push
out
testl
push
lds
xor
shlb
cmp
adc
rolb
push
cmp
mov
shll
push
lods
call
xor
add
push
or
jecxz
xchg
ret
fidivs
sbb
addr16
js
mov
mov
mov
pop
lcall
lret
adc
pop
movsb
jp
push
or
imul
cwtl
xor
pop
xchg
jnp
dec
loop
rorl
mov
pop
fsubl
sahf
pop
or
cmp
sarb
and
mov
cmc
fs
add
arpl
jo
icebp
adc
and
push
cli
sub
xlat
jnp
mov
in
ljmp
xchg
ficoms
sbb
dec
sahf
push
es
xor
stos
xor
or
inc
mov
fwait
outsb
std
mov
pop
mov
adc
cld
sub
push
fnsave
dec
pop
outsb
push
adc
xchg
add
mov
jo
call
rorl
or
fstps
sub
mov
fwait
or
div
outsb
adc
jne
lods
mov
dec
lahf
xor
loope
inc
clc
ss
in
nop
pop
orl
popa
sti
imul
push
xchg
div
mov
pop
jp
rolb
push
and
sub
movzbl
mov
or
push
movsb
sub
cwtl
mov
out
outsl
push
xor
ds
pop
add
add
in
es
pop
jecxz
sbb
push
adc
std
or
and
iret
sbbl
and
dec
iret
test
xchg
xchg
repz
lods
aas
loope
push
mov
or
sbb
imull
mov
cmp
fstl
aaa
loop
fnstenv
pop
adc
imul
mov
jns
xchg
pop
dec
lods
es
mov
adcl
sbb
je
das
les
scas
pop
aad
push
sub
jl
mov
mov
jecxz
stos
fsubrl
inc
sbb
stc
lods
xchg
jae
stos
pop
shr
and
cmp
inc
pushf
cmp
push
test
mov
jle
cwtl
shl
scas
pop
cs
or
xchg
outsb
add
insl
fwait
or
sub
xor
pop
add
test
pusha
add
outsb
mov
ja
xor
lret
enter
neg
lock
aas
sub
push
pop
gs
mov
sbb
lea
add
inc
dec
jno
es
js
dec
adc
pusha
aad
lea
int
cmp
xchg
cbtw
and
loop
xlat
into
mov
sbb
jecxz
stos
outsl
rcrb
mov
lds
jecxz
mov
jno
jge
mov
lock
in
repnz
mov
and
mov
push
in
cmpsl
fisttps
subb
into
adc
in
stos
les
push
test
adc
dec
xchg
cmp
bound
or
lods
cwtl
jno
mov
jno
xchg
cltd
stc
mov
jo
sbb
push
pop
and
scas
adc
dec
int
insl
cmp
cmp
popf
pop
pop
jae
adc
xchg
test
jns
addl
push
pop
push
sbb
pushf
cmp
adc
je
jecxz
jmp
hlt
sbb
jns
pop
pusha
and
jns
pop
jle
test
dec
out
lock
cmpsb
jae
rcrl
sub
outsb
clc
mov
sbb
xorb
fucomp
adcb
in
int3
pop
fimull
roll
push
mov
mov
sbb
jg
addr16
push
mov
pop
pop
xchg
dec
fnstcw
imul
pop
dec
outsb
mov
and
dec
out
lods
dec
xchg
pop
jno
cmp
out
mov
out
loop
imulb
ljmp
mov
xchg
flds
icebp
fcmovne
jo
push
fcoml
imul
cs
mov
dec
pushf
mov
inc
jo
cmc
inc
loop
mov
xchg
add
lods
repnz
icebp
cmp
push
sbb
shr
sahf
xchg
out
pop
or
and
adc
mov
fisubl
or
test
dec
aaa
jg
push
adc
sub
test
sahf
adc
cwtl
pop
cmp
dec
sbb
into
sbb
lock
xchg
jg
clc
test
cmp
movsb
mov
into
pushf
pop
pop
and
in
push
xor
pop
pop
mov
dec
fsubs
outsl
mov
dec
xchg
nop
ljmp
andb
in
sub
sub
mov
xchg
stos
int
lods
dec
sub
push
adc
sarl
and
dec
add
shll
push
push
mov
cmp
pop
shll
fwait
add
ss
pop
sub
mov
std
mov
sbb
adc
data16
dec
es
lcall
mov
add
mov
push
and
popa
test
inc
jl
xchg
stc
inc
or
repz
xor
imul
aam
outsl
xor
xchg
xor
int
pusha
adc
es
loop
cmc
inc
insb
aaa
mov
and
push
lods
jne
pop
iret
sbb
cs
pop
les
frstor
add
pop
popa
lea
push
xlat
scas
pop
mov
movsl
dec
aaa
lret
xchg
je
dec
insb
movsl
insl
sbb
rcrl
loopne
xor
sub
pop
inc
rcrl
dec
cmp
fistl
mov
fistpl
cs
cmp
mov
sbb
mov
rclb
fcoml
jbe
add
fucomip
test
inc
movsl
call
jb
inc
ds
test
movsl
movsb
cmp
fwait
mov
jp
icebp
outsl
pop
jo
mov
dec
lods
testl
or
pop
cld
and
fdivrs
push
test
push
lret
scas
lcall
dec
insb
cmp
jnp
inc
mov
sub
into
cmp
mov
lret
pop
dec
lock
xor
sbb
data16
std
cmp
outsl
adc
mov
xchg
loopne
jl
inc
data16
std
or
mov
cmp
inc
cli
ficoml
xchg
xchg
cltd
xchg
lret
sahf
dec
xor
adc
bound
test
mov
sbb
sub
lea
jae
fiaddl
sub
mov
adc
hlt
or
pop
xor
add
scas
cmc
aad
ljmp
out
and
push
pop
pop
and
mov
push
repnz
loop
aad
pop
clc
lahf
in
mov
leave
dec
add
lock
mov
dec
jmp
fadds
mov
sti
xchg
fisubrs
or
or
add
xchg
gs
ret
rcrb
and
xchg
sub
jmp
pusha
jbe
lods
mov
cltd
ds
push
lret
sbb
cwtl
out
in
loop
push
dec
xchg
scas
push
cmp
in
fwait
dec
mov
add
test
repnz
cwtl
hlt
cwtl
enter
mov
movsb
outsl
mov
popf
shrb
cmc
jge
add
outsb
push
adc
xor
fcmovu
mov
jp
jbe
aam
ja
je
cltd
jo
jecxz
pop
lods
push
jb
cmp
sub
and
and
call
arpl
aad
movsb
lock
das
roll
movsl
pop
jg
js
in
divb
test
movsl
aam
xor
int3
aas
xchg
iret
int
push
cmc
dec
sub
adc
pop
and
or
sbb
call
sub
enter
insl
mov
andl
adc
out
andb
jecxz
int
adc
test
scas
mov
and
push
mov
insb
ds
scas
jns
mov
insl
xchg
in
xor
pop
push
out
xchg
sbb
push
fidivl
js
jp
daa
xor
push
fsubr
mov
out
cmp
insb
dec
cmp
jae
push
iret
xor
jmp
mov
lods
inc
sub
mov
mov
sbb
adc
jmp
fcompl
cmp
std
js
ret
sub
and
inc
lret
ret
jne
dec
mov
loop
mov
ret
clc
scas
mov
pop
mov
imul
mov
jg
adc
and
jns
js
sub
jnp
out
out
data16
sbb
jl
pop
or
jg
push
lcall
mov
test
or
pop
sbb
mov
fdivl
aaa
loopne
pushf
mov
push
lret
out
push
mov
mov
sub
aam
repz
stos
testl
or
ror
sbb
hlt
sub
inc
sub
pop
mov
push
add
cmc
cmc
push
stc
push
dec
lret
imul
fadds
dec
mov
popa
add
cmp
cmp
fldcw
lahf
mov
mov
cmp
mov
sbb
insl
jl
and
lret
test
xor
lahf
sahf
dec
shrl
nop
xchg
sbb
mov
je
pop
test
scas
push
or
jb
enter
loopne
cmp
fsubs
xchg
lahf
add
xor
mov
lcall
mov
fadds
addr16
sbb
hlt
in
cmp
rcr
push
inc
jg
add
cmp
xor
inc
pop
cld
fisubrs
mov
add
adc
jp
or
scas
jbe
mov
add
test
cs
fcmovu
inc
sarl
cmp
push
inc
push
lods
sub
dec
mov
mov
xor
and
addr16
fldt
inc
repz
or
pop
push
pop
lods
icebp
ds
int
addr16
sbb
fcomi
dec
jae
test
xor
faddl
lea
adc
push
mov
call
movsl
clc
sub
and
cld
fistpl
fmul
add
lcall
jnp
cmp
fistps
pop
jmp
jg
movzbl
inc
jnp
push
ja
mov
adc
inc
rcrl
divl
rcr
lret
mov
shrb
adc
push
lcall
pop
cmp
inc
mov
cmp
rcll
cltd
or
mov
xchg
ret
and
pop
push
fcoml
je
iret
es
pop
aas
std
mov
mov
mov
mov
jo
xchg
sub
dec
cwtl
push
ds
popf
add
jno
nop
dec
xchg
repz
cmp
mov
add
jns
cltd
push
jmp
cltd
loop
out
sbb
xchg
es
push
clc
hlt
dec
scas
push
xchg
jb
xchg
into
pusha
gs
jg
and
ret
mov
inc
cmpsb
inc
xlat
hlt
cli
pop
inc
inc
xor
lods
insb
pop
mov
push
dec
gs
fsub
call
adc
iret
sub
ljmp
dec
cmp
mov
pop
xchg
add
push
and
or
call
pop
and
out
stos
xor
stos
in
fdivl
jne
add
sub
or
add
mov
fmul
aas
cmp
jg
mov
imul
and
sub
clc
xor
lea
or
lock
cmp
call
bsr
mov
testb
shr
push
hlt
mov
fsubs
cmc
or
sub
cs
ljmp
pcmpgtd
je
or
in
dec
push
cmp
or
xchg
add
call
das
sbb
dec
mov
sbb
test
lcall
mov
lods
mov
hlt
aad
out
es
ja
je
inc
pusha
mov
mov
inc
mov
jo
or
pop
rorl
leave
ficoml
mov
inc
adc
lock
enter
mov
insb
cmp
mov
test
cmp
mov
scas
inc
adc
dec
dec
nop
push
mov
mov
xchg
and
daa
adc
outsb
jo
cmp
xor
or
cmpsl
mov
pushl
push
xorl
bnd
cli
pusha
lds
pop
push
int
adc
cmp
rcrl
pop
pusha
cld
aad
and
and
inc
add
sbb
loope
cwtl
icebp
call
aaa
mov
push
lds
cwtl
add
mov
mov
dec
and
outsb
popf
lock
ret
sub
inc
fnstsw
pop
es
pop
add
and
popl
inc
int
or
push
adc
ds
push
fldl
ljmp
js
adc
dec
or
arpl
loopne
pushf
sub
bound
mov
or
test
pop
cli
icebp
sbb
sub
cmp
leave
mov
sahf
jns
inc
jns
inc
add
xor
xchg
movsl
pop
jmp
das
fildll
xchg
push
aaa
cmpsl
cmp
jle
rclb
in
jecxz
jmp
scas
sbb
mov
jg
lret
push
push
dec
mov
fimuls
sub
jp
shlb
fwait
and
pop
fiadds
dec
xor
xor
sub
data16
mov
or
mov
cmp
mov
cld
inc
jp
cmpsb
mov
mov
and
aas
cltd
cwtl
jg
scas
stos
add
mov
in
mov
stc
push
movsl
leave
fs
es
test
fdivs
sti
testl
daa
lods
add
insb
imul
mov
mov
xor
std
jecxz
add
stc
orb
xchg
inc
fwait
fs
inc
cmc
daa
aaa
insl
ror
jae
pushf
orb
dec
jno
inc
xchg
in
xchg
jl
mov
jae
xlat
adc
pop
test
stos
fists
pop
data16
mov
inc
sub
cmpsb
lcall
test
dec
xchg
inc
mov
fidivl
mov
pusha
mov
push
push
mov
jp
in
ror
loope
dec
vhsubps
ljmp
adc
imul
push
mov
mov
test
cmpb
pop
lea
adc
imul
adc
ja
out
fdivrl
cmp
push
stos
popf
sbb
jmp
sbb
insb
cld
out
cmp
pop
test
pop
pop
fimull
adc
jp
push
js
out
scas
jno
add
gs
insl
andl
push
divb
sub
mov
jns
xor
jbe
xor
cmp
jo
imull
iret
cmpsl
sbb
pop
jge
xor
stos
test
outsb
mov
pop
pop
sbbl
fsubr
jb
int3
loope
orb
mov
pop
pusha
inc
nop
jae
addr16
push
mov
sub
scas
xchg
jbe
std
call
cmp
and
das
outsl
xlat
ret
notl
wrmsr
fisubrl
cmp
xlat
test
cmc
mov
movb
jns
int
jo
cmp
sbb
int
in
push
cmpsl
push
lret
repnz
insb
loopne
ss
dec
jnp
jb
andnps
and
test
xchg
hlt
into
leave
idivb
push
pusha
push
pop
jo
outsb
ds
inc
jge
lret
fwait
mov
or
sarb
mov
enter
jo
cwtl
pop
test
and
movsl
pop
push
fiadds
mov
xchg
aaa
inc
das
or
in
out
push
shr
popf
jmp
popa
dec
scas
dec
leave
aaa
sub
shll
xlat
cld
adc
rol
adc
jmp
lods
in
cmp
fisubl
add
sbb
add
insb
and
sti
test
push
sbb
push
sub
add
inc
sub
ret
jl
or
add
pop
outsl
mov
insb
push
popa
adc
adc
in
movsb
iret
imul
mov
and
iret
fmuls
inc
fistpl
adc
mov
xchg
mov
pop
inc
dec
lock
or
mov
cltd
mov
shrb
arpl
movl
les
jmp
jmp
sub
inc
cwtl
test
shlb
sbbb
hlt
adc
icebp
mov
xchg
cmp
jp
inc
into
jge
scas
sti
mov
lods
cmpl
push
aaa
adc
mov
pop
and
xchg
mov
adc
jecxz
mov
movlhps
push
mov
mov
mov
add
addl
sub
sub
addl
sub
add
subl
add
decl
jne
leave
ret
adc
std
scas
push
sbbb
mov
mov
xchg
hlt
sub
in
add
push
push
push
call
mov
push
pushl
call
pushl
call
push
push
push
call
mov
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
push
push
push
call
mov
or
jne
pushl
call
push
pushl
call
push
pushl
call
push
pushl
call
push
pushl
call
call
mov
push
push
push
call
mov
push
pushl
call
pushl
pushl
call
call
mov
push
push
push
call
mov
or
jne
pushl
call
push
pushl
call
pushl
call
push
push
pushl
call
push
push
pushl
call
call
mov
mov
mov
push
pushl
call
xorl
addl
jmp
push
pushl
call
pushl
call
push
push
push
push
call
mov
call
pushl
call
lea
push
push
push
push
push
push
push
call
mov
or
jne
call
push
push
pushl
call
pushl
pushl
call
push
pushl
call
mov
mov
addl
subl
pushl
call
pushl
call
call
addl
subl
push
pushl
call
call
leave
ret
popf
out
adc
pop
sub
lea
xor
